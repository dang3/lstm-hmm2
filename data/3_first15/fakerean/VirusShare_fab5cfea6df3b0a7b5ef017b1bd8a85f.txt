sbb
add
mov
fisttpll
push
negb
mov
daa
xor
adc
pop
xor
enter
loop
adc
jbe
dec
jbe
add
jns
ja
test
sub
jge
sti
mov
cld
xor
aam
js
les
repz
pop
xchg
jae
sbb
xchg
and
inc
lods
mov
cwtl
dec
test
ja
pop
mov
lods
fnsave
clc
scas
repnz
out
les
pop
add
lods
and
xor
mov
sti
adc
cmp
pop
push
jno
mov
in
das
int
stos
cmp
pop
loope
scas
stos
jecxz
pop
sti
xchg
lahf
mov
cmp
popa
inc
push
mov
into
jae
jmp
cmp
bound
or
adc
ljmp
pand
ret
cwtl
outsl
rolb
mov
rorl
push
jg
sub
scas
cwtl
push
mov
test
pop
ret
inc
pop
cwtl
push
jge
mov
dec
sub
mov
and
adc
in
xchg
mov
or
or
sub
push
ja
mov
iret
lcall
dec
lcall
lock
add
cmp
ret
lods
hlt
movsb
dec
call
pop
aam
ror
and
mov
sbb
js
stos
imul
mov
mov
lea
cmp
pop
int
insl
jbe,pn
adc
test
in
pop
push
sub
push
aad
jae
jmp
or
iret
ja
cmc
es
xor
adc
push
int3
xlat
dec
cld
xlat
ljmp
gs
inc
iret
in
mov
push
ja
push
cld
lods
mov
aaa
jns
adc
fmulp
jnp
adc
cmp
sub
jno
fbld
test
push
inc
addb
pusha
js
iret
popf
push
sahf
mov
dec
ds
cmp
lods
call
lahf
sub
das
jmp
mov
and
jae
stos
in
mov
jb
or
aaa
xchg
int3
or
pop
and
cmpsl
enter
daa
jno
or
push
xchg
fsts
pop
push
cmp
sbb
fidivl
inc
repnz
jmp
push
lods
xchg
mov
xchg
pop
xor
std
push
aaa
fsubrs
fbld
jae
outsb
pop
and
fsubrl
nop
shlb
insl
out
push
scas
mov
push
ljmp
int3
mov
movups
and
les
movsl
sub
adc
es
push
sub
mov
add
jecxz
stos
pop
push
in
cmc
lahf
mov
ljmp
aas
test
adc
icebp
inc
mov
inc
dec
jnp
mov
inc
clc
cmc
and
fistl
jne
test
adc
dec
imul
mov
mov
xor
jge
and
sbb
pop
adc
add
xor
pop
sbb
test
shrl
mov
add
pop
fstps
andl
pop
xor
mov
adc
or
shr
add
and
jo
xor
jnp
je
mov
int3
lea
sub
in
xchg
cmp
lcall
jl,pn
fbstp
pop
mov
popf
les
pop
divl
sub
cmp
divl
rclb
fs
and
aas
dec
pop
shlb
into
push
or
int3
shrl
aas
mov
push
lret
mov
push
int
aam
enter
cltd
imul
mov
sbb
xor
orb
push
jo
fistps
and
inc
pop
mov
xor
aad
stos
xor
test
xchg
lret
cld
fidivl
or
imul
addl
test
mov
pushf
dec
pop
dec
sbb
pop
inc
lods
movsb
push
negb
mov
ret
cmpsl
dec
cmp
jmp
xor
dec
xchg
sbb
fcoml
inc
int3
pop
in
test
insb
out
out
pop
mul
rcr
call
repz
test
and
lahf
xor
imul
sbb
icebp
inc
add
mov
sbb
mov
dec
aam
push
adc
rcll
xor
pop
mov
jp,pt
aaa
loope
add
es
in
fsubl
xchg
mov
jle
lahf
ljmp
and
int3
push
mov
aas
subps
mov
mov
mov
sbb
sub
lret
push
sbb
sbb
xchg
lret
out
mov
andl
mov
push
hlt
pop
sub
push
mov
jae
ret
into
fstps
test
dec
outsl
mov
dec
dec
fmul
sub
dec
or
inc
mov
aam
xor
mov
xchg
out
into
pop
test
inc
cmp
mov
test
scas
rorl
mov
pop
dec
inc
add
push
jg
or
add
imul
add
push
cmc
gs
push
orb
cmc
or
test
int
and
push
test
xchg
or
pop
sub
ret
iret
fistpl
push
sub
test
pop
add
mov
mov
std
dec
fisubs
push
xchg
movsb
mov
jg
pop
orb
movsl
lds
jo
jle
inc
inc
mov
aad
stos
inc
adc
sub
push
adc
pop
cld
fdivs
fdivs
mov
sti
inc
daa
inc
or
jns
and
cs
fs
pop
mov
jae
adc
test
in
mov
add
mov
cmp
shlb
xchg
movl
stos
inc
xlat
repnz
test
and
fistps
push
pop
pop
setp
aas
sar
int3
jae
mov
rcr
idivl
mov
cmc
stc
or
mov
cmc
sysenter
or
insb
jge
les
lcall
out
adc
sbb
mov
lea
lcall
and
xchg
rcrl
or
jl
and
ja
imull
pop
aas
je
pop
aad
push
test
and
jno
aas
xchg
mov
mov
inc
movsb
repnz
movsl
xor
insl
mov
xchg
test
xor
xchg
cmpsw
jo
cli
jo
rorb
inc
je
add
cmp
add
aas
xchg
adc
or
jnp
and
test
xor
jne
incl
imul
xlat
xchg
cwtl
pushf
pop
xor
and
lds
push
faddl
cmpsb
xchg
cmpsl
out
add
push
add
cli
out
mov
movsl
or
mov
xchg
movsb
outsl
sahf
mov
fwait
adc
mov
sub
adc
push
movsl
test
lock
fwait
cmp
sbb
or
lcall
call
sbb
pushf
xchg
subl
dec
jl
bound
iret
ja
jl
lahf
inc
xchg
fdivrs
mov
cmpsl
jmp
xchg
in
jo
jecxz
int3
xor
in
xor
aaa
stos
mov
cmp
push
inc
cs
add
and
push
pop
pop
popf
lock
stc
stos
add
and
cmp
cltd
hlt
sbb
add
rolb
push
mov
sub
fadd
pop
and
aad
push
inc
out
dec
push
cmp
mov
dec
adc
fldz
adc
jge
mov
add
push
inc
cmp
fcomip
cmp
mov
clc
mov
stc
cmp
or
sub
stc
push
mov
ja
subl
repnz
and
test
mov
add
add
ss
lods
mov
sbb
jmp
sahf
mov
fs
sarl
rcrb
xor
push
or
xor
mov
mov
das
jg
push
push
outsl
push
lahf
jb
add
out
xor
dec
dec
mov
popf
push
fisttpll
cmp
mov
in
and
mov
mov
and
hlt
in
pop
outsb
adc
lcall
sub
jl
cmp
jg
addl
loopne
sarl
ret
dec
fstp
fisubrl
xchg
movsb
xor
popa
cvtps2pd
scas
cmpsl
aam
dec
add
mov
inc
jae
mov
fwait
pop
loope
repnz
push
fwait
pop
call
or
daa
aaa
xor
sub
push
add
sti
xlat
lea
mov
stc
xchg
xor
jne
xchg
cmc
adc
inc
out
rcll
es
jbe
add
in
repz
inc
mov
xor
sub
jg
bound
lods
sbb
outsb
jmp
je
aad
push
cmp
addb
pop
sti
rorb
arpl
dec
push
aad
bound
push
fadd
fisttpl
in
jbe
ffree
sub
in
pop
dec
sbb
jb
mov
mov
jae
dec
dec
cwtl
shll
lods
jbe
sar
pop
das
and
int
fs
pop
dec
push
sub
pushf
into
or
or
loop
adc
out
mov
add
xlat
rcrl
inc
xor
xor
gs
push
fwait
sub
xor
push
add
mov
negl
pop
push
stos
jl
mov
in
mov
stos
in
jb
movb
dec
gs
popf
push
mov
outsb
mov
lret
fwait
rcl
inc
daa
xorl
or
cmpsl
mov
sbb
mov
nop
inc
aad
xchg
push
pop
scas
mov
pop
out
mov
ljmp
fwait
mov
push
lahf
and
and
xchg
into
popa
dec
ljmp
push
pushf
mulb
jo
cmpsb
xchg
cs
and
js
push
xchg
mov
shl
jb
int3
loope
jnp
lds
scas
aam
jle
dec
lds
inc
mov
pop
cmpsb
and
pop
loopne
test
out
sti
mov
mov
mov
movsb
stos
dec
std
cwtl
or
and
sbb
sbb
gs
loopne
cltd
mov
out
imul
xchg
xor
mov
dec
loop,pn
inc
dec
lret
imul
jle
mov
scas
in
aad
sbbl
mov
dec
push
movsl
fwait
push
je
jg
sbb
fsubs
mov
push
cmp
pop
push
cmp
fwait
stos
stos
jl
sub
push
xchg
or
imul
sub
sub
push
mov
jl
push
popl
repnz
mov
push
xor
jp
jns
fcoms
and
cmp
int3
sar
stos
push
inc
lock
loope
mov
call
cwtl
jl
test
add
mov
ds
jns
sub
fsubl
sbb
push
imul
mov
cmpb
andl
mov
movsb
push
sbb
adc
sbb
xchg
push
dec
loopne
iret
insl
mov
and
arpl
mov
push
xchg
inc
jmp
popa
adc
cli
mov
cwtl
pop
loope
loopne
push
dec
mov
pop
adc
insl
ret
ss
cmp
sub
inc
jmp
scas
cmp
lret
add
mov
call
jne
and
cmpsb
push
enter
aad
loop
popa
outsl
xchg
cmpsb
out
add
movsl
imul
sbb
xor
mov
loope
lds
movsl
js
xor
std
loope
push
pop
jb
es
cmp
sbb
adc
mov
add
in
pop
sbb
fwait
dec
sti
cmp
mov
enter
cmc
push
jbe
jge
mov
xchg
rcrl
cmpsl
addl
gs
cmp
cli
cmp
mov
daa
dec
xchg
xor
inc
movsl
mov
xchg
adcb
hlt
scas
lea
jle
sahf
xchg
rcll
adc
cli
push
xor
pop
mov
rorb
sbbl
or
push
cmp
push
inc
sub
pop
push
lahf
push
inc
mov
mov
mov
mov
or
cmova
int3
jmp
cli
sub
pop
loopne
pop
ror
out
lds
sub
rcrb
xchg
cli
push
add
adcl
out
jb
sbb
out
cmpsb
adc
pushf
push
in
add
mov
stos
je
mov
in
enter
mov
in
mov
icebp
inc
inc
aas
mov
mov
adc
sahf
adc
shll
lret
sar
and
or
push
jae
xchg
adcl
fldl
cmpsb
pop
xchg
sbb
mov
mov
sub
or
test
lds
sbb
and
inc
lret
pop
mov
mov
outsb
aam
add
xchg
ljmp
jo
xchg
sub
outsl
daa
pop
lcall
pop
hlt
lret
dec
outsb
and
scas
notl
pop
jnp
push
adc
lret
pop
insb
mov
aam
mov
dec
in
mov
cmp
pop
or
adc
sbb
xor
dec
aaa
inc
decb
ja
push
cmp
js
add
insb
pop
loopne
testb
push
xor
push
mov
mov
jp
stos
mov
out
sub
adc
test
aam
add
add
shrb
repz
xchg
cmpsl
test
das
int
dec
cmp
jo
lret
cwtl
dec
jo
into
iret
and
fcmovb
add
icebp
aam
fsubrl
cmpsb
fimull
pop
outsl
icebp
pop
ret
mov
dec
sysret
mov
mov
add
jnp
ficomps
js
jge
arpl
pop
push
rorl
roll
mov
mov
andb
mov
popa
dec
sub
shll
cmp
xor
push
mov
push
pop
shll
outsl
pop
xor
xchg
fnstsw
add
add
mov
out
xor
lret
imul
dec
je
movsl
lahf
inc
test
xchg
scas
dec
nop
movsb
loop
cmp
ss
add
cmpsb
sub
ret
fwait
and
sub
jb,pt
sub
insb
pushw
call
mov
cmp
xchg
out
into
mov
push
xchg
sub
lods
pop
mov
jecxz
sbb
jne
gs
jb
inc
icebp
sbb
pop
divl
inc
dec
out
cmpl
mov
dec
std
jns
jnp
sub
call
in
popw
add
mov
adc
xlat
cld
shll
xor
jecxz
enter
add
popf
cs
cld
daa
loopne
mov
push
fnsave
ret
test
pop
add
mov
sbb
push
xchg
loope
dec
xor
lret
cmc
cmc
scas
and
xor
mov
push
lods
rolb
ret
movsl
ret
dec
lds
xor
xchg
cmp
movsl
adc
out
stc
sub
adc
shrl
inc
inc
js
cmp
pop
fistps
mov
lock
mov
pop
daa
or
pop
arpl
data16
add
aad
mov
sub
popf
gs
aas
fists
mov
fsubs
inc
arpl
push
mov
add
and
loop
fs
addb
daa
orb
xchg
repnz
lock
leave
lahf
popa
pop
push
cmp
jmp
adc
das
adc
shl
jge
adc
nop
data16
jecxz
mov
fistl
jecxz
xchg
mov
xchg
adc
mov
jmp
out
stos
inc
imul
clc
dec
out
cmp
dec
xchg
inc
adc
sub
pop
ret
xor
cmpsl
shl
pop
adc
sub
daa
cltd
cwtl
or
ret
insl
stos
fwait
jae
xor
insb
dec
bound
sbb
mov
mov
xchg
cmp
and
std
movsb
pop
shl
mov
cld
xchg
lret
pop
in
push
arpl
mov
push
mov
dec
data16
repz
loope
cmp
popa
sahf
stc
xchg
test
jo
repnz
xchg
mov
call
mov
add
js
icebp
push
pop
xchg
punpckldq
sub
mov
mov
cs
lods
dec
cwtl
dec
shl
mov
jae
sub
cmc
push
jp
sbb
mov
fsubrl
mov
push
in
mov
ds
int3
cmpsl
adc
rcll
jmp
es
fbld
sub
push
inc
adc
loop
mov
mov
or
ljmp
stos
push
cltd
faddp
fimuls
nop
mov
jmp
and
xchg
fwait
mov
cmp
jle
data16
dec
shl
mov
test
sbbl
pop
push
dec
adc
fbstp
shrb
fildl
adc
mov
push
dec
loope
jecxz
scas
mov
mov
call
enter
pop
aam
mov
xor
call
ret
call
adc
mov
leavew
es
xchg
stc
jne
jns
das
imul
mov
in
mull
pusha
jge
xchg
adc
cmp
les
divl
in
mov
rclb
inc
xor
jp
mov
rorl
cmpsl
mov
std
dec
les
sbb
in
incb
in
insb
in
adc
insl
pop
imul
lds
jns
enter
cmp
lcall
bound
jnp
sub
push
outsb
in
sub
and
push
jne
push
mov
in
adc
dec
insl
aaa
adc
ret
dec
or
hlt
cmp
stc
cltd
or
in
es
insl
push
jl
adc
add
lret
scas
dec
stos
push
mov
mov
test
pop
cld
and
out
add
fsubrl
scas
jnp
test
insb
jbe
cmp
insl
std
aad
jmp
and
jg
mov
or
lods
roll
mov
xorb
divb
pop
aam
fnsave
jmp
sub
inc
fsts
xor
nop
mov
popa
or
pop
dec
mov
xorl
testb
mov
add
xchg
repnz
movsl
sub
fwait
jp
jge
sub
in
mov
stc
cmp
sbb
push
and
mull
in
adc
and
push
fmull
out
fisubrs
outsl
imul
popf
xlat
dec
enter
clc
gs
pop
dec
insb
and
xlat
or
lods
mov
mov
mov
outsl
push
push
outsl
push
daa
cmp
jae
push
lods
xlat
adc
add
push
xor
pop
mov
xchg
sub
gs
fadds
repz
lahf
fiadds
clc
testb
inc
xchg
push
xchg
test
adc
cmp
std
push
and
sub
push
mov
xchg
ror
mov
mov
jmp
dec
jg
arpl
adc
add
xchg
jo
push
test
jbe
repz
xchg
dec
pop
pop
mov
stc
sti
in
lret
aad
cmp
notl
xchg
fucomp
pop
mov
cmp
xchg
ds
cmpsb
mov
dec
bound
cmpsb
pop
lock
sti
daa
mov
sbb
and
inc
jbe
jg
cs
out
xor
sar
and
stc
and
in
int3
cmp
in
mov
stc
shrl
lahf
xchg
dec
jmp
mov
mov
daa
fistps
lock
std
mov
movsl
iret
mov
lret
and
stos
negb
sar
pop
sbb
inc
add
xchg
cmpl
cs
mov
andb
sub
fnstsw
lds
dec
add
lret
imul
cwtd
mov
pop
dec
mov
push
inc
mov
sub
cmc
jae
jae
pop
or
push
cmpsb
cmpsl
cmp
mov
xchg
out
xchg
push
movsb
and
or
popf
into
stos
aam
mov
pushf
jb
es
xchg
pusha
dec
inc
sub
pop
xlat
sub
negl
mov
aad
enter
insb
pop
mov
stos
jns
fcomi
in
sbb
jb
pop
sub
add
cmp
shll
push
rorb
outsl
fprem1
mov
pop
into
cltd
mov
loop
imull
ret
popf
push
aas
or
sbb
rclb
jle
sbb
pop
fstpl
pop
lret
shrl
bound
push
fdivr
jl
mov
rcl
xchg
cmp
jae
fildl
dec
xor
cmp
ja
mov
push
outsl
jae
aas
loope
xor
scas
out
test
mov
xor
stc
in
je
push
fwait
sbb
loopne
adc
sbb
stos
push
mov
frstor
insl
jp
adc
das
into
sbb
hlt
cmc
xchg
dec
xchg
and
or
sbb
lret
jo
test
fistpl
pushf
jne
adc
icebp
addr16
and
popf
pop
jmp
inc
pop
lds
sbb
xchg
out
push
and
cmc
lods
xchg
rcrb
lea
push
leave
ja
adc
xchg
daa
push
mov
dec
ja
outsl
pusha
lret
mov
les
cmc
push
dec
mov
mov
insb
stos
loope
jg
rolb
mov
cmpsl
movsl
sbb
popa
inc
test
enter
mov
mov
inc
outsl
ljmp
rolb
int
movsb
aaa
dec
or
lea
and
inc
or
or
test
paddusb
adc
call
loopne
in
mov
xchg
rorb
cmpsl
mov
sbb
sub
cli
leave
test
addl
mov
inc
inc
test
jno
mov
stos
dec
adc
and
sbb
inc
mov
dec
xchg
adc
adc
iret
stos
jecxz
jnp
push
movsl
adc
mov
pop
xor
mov
pusha
pop
pop
int3
hlt
add
pop
adc
test
inc
cmpsl
sbbl
push
push
dec
cmpsb
das
inc
hlt
jb
mov
inc
mov
orl
call
inc
shr
rclb
ss
lahf
fistpll
dec
sub
rcrb
repz
test
sub
inc
jge
out
pop
xchg
add
call
in
cli
jg
inc
repz
enter
cmc
push
and
adc
int
mov
int3
add
icebp
int
push
inc
xor
mov
push
shll
in
shrl
push
mov
inc
and
xor
cli
aam
and
jns
hlt
adc
dec
xchg
imul
pop
xor
pop
pop
sbb
sub
popl
sub
movsb
mov
lea
adc
cmp
ja
rorl
lods
adc
xor
imul
pop
xchg
iret
stos
xorl
pop
push
push
jo
mov
leave
imul
inc
adc
cwtl
jmp
inc
sbb
fimull
lret
ds
gs
rclb
adc
pop
and
dec
mov
xor
mov
lea
jno
cmpsb
jne
repz
movsb
jbe
push
jnp
pop
dec
sbb
lds
pop
popf
xor
ftst
fdivs
push
nop
js
inc
sub
jne
out
fbstp
leave
pop
scas
shll
and
sub
lahf
sarl
scas
pop
pop
xor
xor
cmp
xor
mov
rorb
popf
mov
sbb
addr16
and
out
scas
scas
xlat
jl
inc
dec
add
scas
sbb
jmp
cmp
hlt
jl
or
nop
jae
pushl
fistl
mov
cmpsb
lret
psubusw
bound
pop
adc
sbb
pusha
sbb
mov
sub
mov
xchg
dec
aas
xlat
push
push
loop
sub
lret
adc
sub
js
insb
dec
cmp
mov
xor
lods
mov
inc
mov
fidivs
hlt
lret
and
xor
arpl
sti
cmp
iret
imull
scas
stos
push
inc
adc
aas
xor
mov
shrl
push
rolb
mov
push
div
enter
dec
sbb
adc
mov
out
sahf
lock
mov
fildll
je
and
cmpsb
pop
icebp
inc
test
aad
imul
pushf
add
ja
jnp
jns
inc
insb
imul
jno
sbb
cmpsl
popf
dec
adc
lret
inc
cmc
fdivrs
xchg
pop
adc
loop
ja
les
inc
incb
rcrb
call
loope
jae
dec
filds
cmpsl
xchg
sub
sub
stos
xor
shrb
inc
test
sub
imul
movsb
fsubrl
pop
push
popa
leave
and
xor
mov
push
mov
enter
cmp
cld
imul
sub
cltd
mov
pop
jb
or
into
outsb
ja
frstor
ja
or
aad
jne
call
lcall
mov
fs
pop
xor
pop
sbb
dec
pushw
popf
lods
es
cmpsl
ljmp
add
push
movsb
idiv
pop
jp
jne
jl
add
in
cs
sbb
clc
sbb
pop
nop
inc
jae
mov
pusha
movsl
mov
or
pop
cmp
add
xchg
es
loopne
mov
jg
cltd
imul
cmpsl
je
out
xchg
dec
jno
imul
and
shll
or
sub
fwait
pop
xor
les
jae
stc
mov
pop
adc
push
inc
push
fcoms
fdivrl
jmp
adc
push
aaa
cmpsb
xchg
orb
clc
jg
adc
cmpsb
fmulp
add
ficoms
jp
dec
ljmp
and
popl
data16
xor
popa
nop
pop
inc
scas
in
ss
inc
cmc
push
jae
and
mov
cmp
filds
imul
mov
push
jbe
pusha
nop
fimuls
lods
mov
fldenv
add
cmp
gs
xchg
xchg
mov
push
xor
mov
shll
movb
pop
cli
add
test
sub
addr16
xchg
arpl
sub
pop
daa
or
pop
or
icebp
test
test
jg
xlat
jo
push
dec
in
inc
cmpsb
mov
test
push
sub
push
stos
out
cmp
pop
sahf
push
mov
outsb
mov
add
and
orb
sub
sub
push
sub
sbb
xchg
lds
mov
pop
mov
adc
rcrl
stos
rcll
jmp
popf
sbb
inc
cmp
nop
arpl
insl
les
xchg
xchg
movsl
test
es
clts
cmpsb
mov
push
xor
mov
mov
xlat
add
add
cmpsl
nop
mov
lock
aad
add
test
loope
xchg
out
add
xchg
add
jp
rorl
sbb
add
jb
sahf
ss
fsubl
sbb
out
xchg
sub
mov
test
fwait
jo
cmp
fs
pop
jno
rcrb
push
mov
insb
outsb
xchg
add
data16
nop
mov
adc
stos
pop
test
and
sbb
dec
mov
shrb
fbld
shll
fdivrs
pop
daa
repz
sbb
cwtl
lock
hlt
jbe
rcrb
std
ds
leave
jmp
aad
test
ret
dec
xor
popf
mov
arpl
sbb
sbb
aad
cmc
stos
insl
and
inc
adc
fs
jg
push
scas
subb
jne
in
mov
lods
mov
popf
mov
push
mov
pop
mov
je
xor
sbb
push
sbb
xor
lcall
dec
sahf
jns
mov
pop
fstl
cwtl
ss
mov
inc
xchg
insl
cmpsl
pop
repnz
cmp
or
mov
jns
dec
pushf
lahf
and
or
mov
jnp
test
imul
movsl
js
pop
mov
push
int3
dec
sti
dec
imul
sbb
stos
mov
shrb
lcall
sahf
shll
pop
ss
add
cltd
sub
pop
push
xchg
push
dec
jge
loop
cmp
jno
dec
inc
cmp
adc
cli
cld
cltd
dec
and
add
xor
outsb
and
dec
fwait
mov
xchg
and
lds
jnp
insb
into
pop
repnz
push
stos
jae
dec
repnz
lcall
xchg
mov
inc
cmc
cmpsb
push
ds
fcmovnu
mov
xorb
xor
fwait
ror
and
mov
outsl
ss
jge
sti
mov
repnz
nop
sti
pop
xor
lods
inc
sub
xchg
enter
arpl
cmp
inc
and
leave
xchg
repnz
lcall
add
rcrl
xlat
out
insb
leave
push
filds
and
lock
jbe
pop
lds
scas
xlat
fstps
sub
mov
or
int
loopne
dec
movb
out
movsb
out
in
lds
xorl
pop
lret
push
data16
jae
test
lods
cld
sub
add
push
mov
loopne
ss
xchg
sub
out
cmc
scas
imul
addr16
clc
scas
jg
out
bound
mov
out
subl
mov
cmp
add
add
ss
or
jl
mov
in
lret
or
cmpsl
cld
inc
xchg
sub
push
xlat
stos
sub
aaa
inc
pop
fs
sbb
jae
ret
mov
xchg
xchg
sub
popa
repz
cmpsl
cld
aad
lret
pop
lret
or
scas
pop
std
adc
pop
cmp
int
in
inc
jo
pop
imul
mov
ret
aas
jb
shlb
lret
fistps
or
jbe
sub
stos
out
sbb
or
ds
nop
push
out
popa
cltd
and
push
or
sub
and
dec
cmp
in
cwtl
mov
xchg
lods
data16
ret
jbe
jne
sbb
pop
scas
daa
xor
stos
xor
pusha
sbb
loop
lcall
rol
push
xchg
pop
pop
lcall
adc
or
fildll
sti
xchg
sahf
add
lahf
mov
adc
addr16
lret
sub
inc
cli
mov
das
arpl
mov
hlt
repnz
mov
repnz
jno
adc
lods
mov
ja
pop
xor
std
mov
std
data16
dec
xchg
mov
insb
std
scas
and
lea
mov
test
jmp
int
hlt
inc
xchg
xchg
push
push
push
daa
hlt
inc
cmp
test
ret
stc
icebp
pop
mov
ds
negb
sbb
movb
mov
or
mov
shrb
inc
xor
xchg
rcrb
lds
pusha
fwait
jb
dec
adc
fcomps
xor
fsubs
test
cmp
imul
lea
jmp
sub
cmp
movsl
pushf
addl
jg
jp
les
jecxz
xor
or
fnstsw
lds
cmpsb
aam
adcb
test
shrb
je
adcb
adc
and
push
pop
jno
repnz
xor
fcomp
lds
imul
sbb
inc
call
faddl
pop
rorl
jno
test
test
xor
stc
aaa
mov
jp
lret
sub
sbb
out
and
popa
enter
pop
pop
es
in
pop
shll
sbb
push
xchg
or
fsubs
daa
mov
stc
scas
iret
jle
adc
jb
dec
cli
inc
out
mov
ret
push
and
imul
mov
test
mov
orb
movsl
mov
add
in
and
adc
and
jmp
sahf
icebp
idiv
mov
jge
pop
push
mov
add
lods
add
mov
mov
stc
outsb
cmp
jmp
in
or
rcll
insl
je
clc
sarb
fidivs
mov
insb
push
sbb
mov
push
mov
xor
daa
xchg
movsb
adc
dec
in
mov
mov
outsb
lock
pushf
sbbb
add
inc
sbb
mov
mov
xchg
xor
xchg
aad
ret
je
mov
xor
inc
jne
into
aam
jl
cld
hlt
add
lds
cmp
mov
add
pop
cmp
sbb
rcl
sbb
mov
je
stos
out
lret
ljmp
jle
lods
cmp
repnz
and
cmp
repnz
stc
insb
mov
lcall
std
xor
popa
test
sub
mov
xor
inc
push
dec
mov
mov
scas
jl
cwtl
repz
arpl
mov
test
iret
test
dec
sbb
cmp
jns
xchg
movsb
scas
lods
lret
mov
push
sarb
jae
fstpt
arpl
xlat
mov
inc
push
inc
cmpsl
fstl
sahf
mov
in
sbb
andl
mov
aas
jmp
inc
inc
popa
sti
loop
loope
shlb
jb
add
bound
int
call
jne
jp
divl
sbb
scas
in
sbb
addr16
cld
outsl
mov
xor
fimuls
loopne
or
mov
jno
cmp
out
inc
adc
outsb
es
in
in
testl
mov
mov
fsubrl
xor
aaa
push
sbb
mov
pop
sub
sahf
inc
lods
mov
mov
call
adc
outsl
mov
out
sub
sub
xor
nop
idivl
inc
or
lock
adc
lods
mov
repz
js
adc
fistps
fnstenv
aam
roll
ja
push
cmpsl
mov
mov
pop
adc
out
push
jge
enter
jge
add
clc
and
xchg
jge
xchg
icebp
mov
ret
idivl
xorb
lea
jbe
or
sti
jo
sub
addb
lret
mov
testl
mov
nop
or
jo
in
aas
xchg
and
mov
mov
mov
jo
add
jle
vsubsd
sub
add
mov
mov
or
xor
xor
mov
inc
out
ret
scas
in
lret
std
movsb
mov
in
fwait
cmp
jo
jae
lahf
dec
jbe
nop
scas
mov
sbb
inc
xchg
jne
lahf
add
cltd
sub
je
add
push
jbe
leave
xchg
mov
fprem
sbb
insl
imul
pop
in
sbb
pushf
jns
je
enter
lcall
sbb
xchg
jmp
mov
and
pop
pusha
dec
xor
inc
sub
repz
cmp
jbe
dec
cmp
sub
or
push
orb
mov
icebp
test
ja
xchg
push
pop
xchg
add
xchg
rcll
or
adc
sahf
popa
ljmp
sbb
add
dec
push
sbb
mov
pop
divl
and
ss
jp,pn
pop
jl
fisttpll
sub
iret
lahf
mov
int3
rol
pusha
mov
stc
adc
xor
sbb
push
pop
inc
sti
testl
add
inc
not
adc
movsl
ret
jno
dec
iret
sbb
sti
dec
jg
rcr
mov
or
out
jbe
leave
mov
movb
or
sahf
sbb
lcall
cs
aaa
and
and
lret
insl
dec
in
inc
jl
ja
fcompl
sbbb
insl
and
sub
xchg
iret
dec
arpl
test
pop
xor
pop
or
fiadds
rol
dec
rcrb
js,pt
repnz
adc
xchg
jg
cmp
mov
es
test
sbb
das
sbb
scas
cmp
sbb
lods
gs
and
shr
pop
test
cmpsb
mov
not
dec
jb
imul
cld
add
mov
arpl
ja
outsl
adc
xor
adc
cmc
sub
pop
or
mull
mov
fwait
orl
lret
lea
adc
test
lcall
jbe
out
test
xchg
je
mov
mov
out
sbb
jo
nop
and
and
test
clc
add
sbb
mov
xor
sbb
push
cmc
out
or
xchg
arpl
daa
sub
pop
test
cmp
rorb
jae
sub
and
daa
clc
imul
fwait
cmp
cmpsb
mov
out
xchg
andb
inc
inc
je
and
das
mov
pop
inc
sub
cwtl
loopne
test
jne
adc
imul
les
call
pop
xor
add
dec
and
fidivrs
or
push
iret
pop
inc
jbe
jmp
popa
jns
loopne
mov
data16
jp
dec
and
mov
adc
push
mov
xor
shl
lods
jo
inc
sbb
cltd
dec
push
xlat
clc
xorl
jge
inc
cmp
dec
pop
jns
repnz
ret
lods
add
mov
scas
sahf
jnp
inc
mov
xchg
prefetch
pop
fwait
mov
movsb
push
int
or
hlt
adc
in
mov
lods
sbb
cmp
out
sub
pop
mov
in
mov
daa
cld
push
dec
dec
test
hlt
aad
sti
push
push
subb
std
sub
inc
jnp
mov
add
add
aad
and
rcll
aaa
add
cmp
sti
sub
xor
mov
pusha
xor
xchg
jecxz
sub
jge
sbb
add
jbe
aas
or
and
repnz
test
sbb
mov
pop
mov
dec
xchg
jnp
loopne
ds
fisubrl
mov
and
push
xchg
jns
fcoml
inc
int3
mov
popf
adc
xchg
cld
fwait
pop
mov
xchg
dec
xchg
inc
push
ja
je
xor
loop
cmpsb
and
mulb
popa
sbbl
cmp
cld
push
dec
mov
fwait
lret
sbb
dec
pusha
inc
mov
jbe
movsl
cmpsl
leave
movsb
pop
jns
mov
lret
test
movsb
push
scas
sub
and
jg
or
out
cmc
mov
push
mov
mov
imul
shl
adc
jmp
loopne
movsl
cmp
out
or
xor
sti
mov
dec
push
jmp
push
xchg
shrb
lret
inc
loop
into
inc
xor
push
scas
adc
and
add
fstps
enter
push
xor
sbb
xchg
xor
mov
mov
inc
rorl
push
fistps
or
sbb
mov
mov
or
xor
push
cmp
cmp
and
mov
mov
and
jbe
test
adc
mov
push
lret
frstor
jo
push
xor
and
sbbb
inc
push
js
xchg
aam
mov
add
shl
addl
test
fisubl
in
pushf
jge
mov
adc
int
and
jne
and
enter
and
adc
inc
mov
push
cmpsl
test
inc
and
je
insl
xchg
arpl
jo
loop
arpl
inc
push
pushf
bound
xor
ret
in
cld
icebp
sub
xor
adc
js
pop
or
push
sti
push
add
jecxz
cmp
xchg
addr16
aam
mov
nop
push
shll
rcll
scas
sub
bound
ljmp
sbb
pop
inc
and
dec
inc
or
je
daa
cmp
dec
mov
inc
call
call
dec
aas
sbb
mov
jl
cs
push
push
mov
popa
push
jns
fldt
mov
xchg
data16
jle
xor
icebp
sbb
mov
cmp
shr
fists
in
cli
sbb
cmp
add
fwait
in
test
test
sbb
push
sbb
mov
jnp
shrl
sbb
xor
addr16
mov
sahf
insl
mov
jp
and
inc
jl
aad
test
in
imul
xor
sti
iretw
fsts
loop
mov
repz
fwait
xor
dec
pop
jnp
sti
or
rolb
sub
call
jge
sbb
cmc
cld
push
mov
rcll
mov
scas
inc
inc
sbb
mov
icebp
test
dec
aad
jnp
into
jl
fs
adc
loope
rcll
mov
push
bound
into
inc
jae
mov
arpl
add
dec
sub
js
in
mov
push
int3
adcl
scas
je
mov
scas
lret
outsl
dec
xor
ret
sahf
pop
pop
dec
fstl
stos
add
mov
xchg
dec
adc
cs
jbe
cmp
jbe
stos
test
int3
call
ja
pop
mov
dec
mov
out
sbb
iret
add
outsb
jae
frstor
fdivl
push
lods
loopne
jnp
mov
xchg
pop
push
out
repz
outsb
pop
pop
mov
addl
addb
mov
shll
push
ja
gs
xor
lea
jne
mov
and
loopne
scas
adc
xor
push
pop
test
into
sub
pop
sbb
daa
stos
imul
mov
mov
push
xchg
jl
jno
xor
dec
add
dec
insb
xor
xchg
sarb
leave
inc
loopne
mov
mov
and
rcrl
xchg
sbb
sbb
pop
hlt
lret
cmp
fidivl
js
and
orb
inc
mov
clc
sahf
test
mov
sbb
mov
push
insb
mov
iret
adc
push
add
fiadds
in
and
xorl
subb
mov
movsl
adc
push
xchg
xor
push
mov
lods
gs
mov
cmp
adc
pusha
push
loop
gs
in
and
imulb
sarl
addl
ret
sub
cli
jmp
lret
cmp
and
in
lretw
mov
adc
cld
aad
jno
loop
je
xor
pop
shl
jp
shll
mov
aam
mov
push
ja
in
pop
jmp
lahf
cli
out
call
mov
into
iret
jg
sahf
fistl
enter
pop
test
inc
movsl
ret
push
dec
ja
movsb
jp
pop
sub
xchg
jp
push
enter
dec
dec
in
sub
movsl
mov
xchg
mov
push
shll
and
mov
inc
hlt
jnp
aad
jns
dec
inc
mov
pop
dec
enter
lret
test
jnp
inc
gs
sbb
and
and
xchg
xchg
mov
push
adc
popa
daa
loope
and
punpcklwd
mov
add
imul
xor
into
mov
cld
imul
addr16
ljmp
fwait
lea
and
in
lods
cmp
push
cwtl
adc
or
and
lds
imul
loope
andl
sahf
cmpl
data16
xchg
test
pop
dec
shlb
popa
cmp
and
cmpsb
insb
mov
in
cmc
or
adc
pop
sbb
orl
outsb
jecxz
sub
push
cwtl
in
sbb
pop
sarb
popf
cmpsb
cmp
mul
mov
imul
mov
movsb
xchg
test
pop
mov
xchg
cltd
insb
or
jns
mov
lock
lcall
outsl
cmp
lret
lock
test
mov
xchg
and
or
push
sub
xchg
int3
sub
mov
push
lea
or
fucomi
inc
ss
lods
gs
fsubp
testb
cmp
push
adc
scas
inc
out
mov
out
mov
jmp
ds
fwait
sbb
mov
push
aam
push
out
xchg
jg
cmpsb
pop
adc
xchg
xlat
push
out
mov
fcmovnbe
and
add
push
stos
push
xor
popa
loop
scas
out
sbb
jns
mov
mov
aad
orl
popl
aas
cmp
adc
pop
gs
sub
les
wrmsr
sub
adc
mov
sub
jnp
mov
orb
add
pop
push
mov
mov
push
mov
jmp
cltd
cmpb
test
in
in
dec
push
repz
cld
lea
and
sub
call
test
fistl
imul
or
jle
in
fs
mov
fwait
xor
mov
jp
sar
sarb
adcl
sbb
ret
faddl
push
pop
cmp
cwtl
test
pop
jbe
shl
xor
sub
ror
pop
xchg
push
mov
in
or
or
mov
imul
outsb
push
popa
nop
test
sbbb
test
shrb
sub
inc
pop
or
hlt
mov
pop
mov
pop
scas
aad
add
fisttpl
icebp
rclb
jge
into
jl
sbb
repz
cmp
add
movsb
xchg
insl
jp
mov
xchg
dec
inc
insl
push
sub
mov
and
repz
fidivrs
push
dec
es
fadds
pavgb
andb
jnp
fsub
movsb
jne
neg
mov
push
out
fists
out
lret
repnz
in
or
loope
shrb
adc
test
pop
leave
add
cmp
test
mov
mov
jnp
inc
rcrb
imul
jno
pop
aaa
cmp
mov
in
xchg
out
sahf
mov
test
xchg
rcrb
std
push
outsl
cld
add
sbb
pop
xor
jp
pushf
jge
sub
icebp
pop
inc
xlat
in
pop
push
lret
inc
jo
popf
fistpl
mov
inc
sbb
push
mov
ljmp
out
mov
mov
pop
pushf
adc
pop
xor
xchg
fbld
hlt
fdivrs
lahf
cmpsl
add
adc
repz
inc
xchg
push
jl
lret
insb
lret
and
addl
mov
adc
dec
pop
cmp
popf
dec
jmp
jp
sahf
mov
jne
adcl
movsl
xor
sbb
fldt
cli
xor
jno
dec
lret
outsl
pop
jb
loope
xor
mov
mov
negb
jecxz
aas
ret
hlt
push
sub
cmp
adcl
and
mov
sub
sahf
les
xor
dec
pop
insl
int
hlt
pop
adc
mov
lcall
out
js,pt
ljmp
out
mov
outsl
dec
dec
aam
add
or
rcr
sbb
sti
ret
sub
adc
mov
cwtl
orl
inc
push
mov
mov
cmpsb
or
mov
lret
pusha
push
mov
sbb
push
jne
sub
stos
xchg
and
std
xchg
mov
cmpsl
xchg
adc
mov
jae
jmp
ficompl
hlt
imul
xchg
fsubp
push
out
lods
mov
faddl
hlt
xor
js
jp
fcompl
mov
pop
daa
addb
mov
cwtl
cmp
rcrl
dec
lret
xchg
pop
andl
adc
in
movsb
add
adc
pop
leave
notl
addr16
inc
inc
sarb
fnstsw
cld
push
sbb
sbb
jb
repz
dec
and
orl
rcr
mov
pop
push
loopne
mov
mov
aas
add
sbb
arpl
jge
lock
aas
mov
xor
sbb
lret
cmc
cmpsb
sbb
out
fdivrs
inc
or
push
add
pop
aad
push
xchg
dec
int
rcl
sub
jne
and
or
push
stos
test
adc
and
jne,pt
mov
dec
movsb
ret
push
jl
sub
or
cmp
xor
daa
sti
rolb
lret
fildll
adc
ss
fs
adc
inc
cmp
mov
popa
add
xchg
mov
mov
movsl
imul
movhps
aaa
test
gs
sub
outsb
xchg
clc
in
lods
push
pushw
lret
xchg
jo
jbe
jno
jno
fistl
jl
jl
lods
mov
mov
sti
jb
ret
out
js
lock
out
enter
std
out
fsubl
adc
aad
push
mov
sti
mov
arpl
mov
mov
pop
adc
push
inc
xor
js
sbbl
pop
scas
pop
shll
dec
in
or
test
push
push
jae
lods
xlat
add
sub
adc
dec
ds
sti
lcall
iret
or
movsb
xchg
mov
or
repz
test
bnd
outsl
sahf
daa
cltd
or
xor
mov
pusha
push
pop
mov
mov
add
fldenv
out
xor
les
shr
dec
hlt
enter
dec
shrb
mov
icebp
frstor
jg
jnp
xor
xchg
lcall
aam
adc
loop
sti
sbb
dec
sbb
mov
insb
inc
fstl
sbb
inc
mov
test
pushf
ret
lea
mov
mov
aas
out
data16
mov
adc
push
jecxz
pop
adc
fdivr
mov
lea
mov
outsl
jge
mov
pop
pop
ds
xchg
lcall
sub
pop
xlat
mov
and
leave
push
or
xor
inc
mov
mov
ret
adc
jl
and
adc
mov
fcompl
lds
jmp
or
mov
pop
mov
icebp
test
push
pop
sbb
push
arpl
stos
rorb
dec
lcall
add
ret
subl
lock
cmp
and
hlt
pop
popf
push
cmc
call
dec
push
in
cmp
mov
pop
sti
sbb
insb
inc
jne
push
scas
mov
outsb
xchg
mov
shl
cmp
nop
pop
inc
adc
loopne
ds
or
nop
inc
jg
sbb
push
fdivl
aas
filds
or
mov
test
push
sbb
test
iret
outsl
push
jg
adc
xchg
addl
adc
fcoml
push
fldl
pop
daa
ja
je
cmpsl
in
dec
xchg
inc
jbe
push
out
mov
in
cmp
sbb
xchg
mov
sub
xor
sbb
push
dec
and
lock
push
inc
fadds
shrl
xchg
or
xchg
or
cmp
add
cmp
test
and
adc
icebp
xchg
cmp
out
ficoml
sbb
push
mov
sub
or
sti
test
stos
inc
cmp
bound
push
test
push
sbb
mov
lods
bound
cmp
ljmp
sbb
adc
jns
inc
mov
test
outsb
fstpl
inc
fldt
adc
mov
push
test
mov
scas
jne
add
and
fcomip
sbb
xchg
sar
loopne
scas
in
fcoms
xchg
ja
cmp
xchg
neg
or
or
xorl
mov
jmp
mov
mov
jb
addr16
sub
fists
or
sarl
mov
mov
cmp
cmp
mov
hlt
pushf
xor
pop
repnz
lret
xor
xchg
mov
jle
daa
enter
push
xchg
stos
mov
out
mov
or
or
jg
push
pop
loope
sub
and
push
rorl
movsb
cs
fst
dec
icebp
jge
add
sbb
or
dec
decb
sub
js
repnz
lea
aaa
and
loop
enter
bound
inc
or
and
xacquire
push
jle
add
pop
ret
jbe
leave
pusha
repnz
mov
add
insb
cmpb
sbb
cmp
sub
lahf
inc
mov
mov
mov
mov
cld
lret
fldcw
push
sbb
les
cli
pop
es
aam
aad
test
lret
lcall
dec
pmaxub
add
lods
dec
fisttpll
or
gs
xor
xor
mov
pop
ret
ljmp
xchg
pop
incb
or
or
cmp
sbb
stc
mov
icebp
push
int
dec
les
mov
out
cmp
cmpsl
in
push
decb
mov
bound
and
mov
loope
xchg
xchg
lcall
imul
scas
loopne
or
pop
mov
push
add
or
jecxz
adc
mov
lret
arpl
inc
ror
inc
or
sub
jbe
ret
adc
inc
dec
ds
mov
jno
jae
xor
ror
sbb
pop
stos
imul
ret
jle
sub
dec
xor
mov
mov
push
and
cmc
xchg
arpl
push
outsl
push
dec
inc
mov
shll
out
out
popa
rorb
mov
loope
and
mov
push
mov
in
aad
xor
cltd
loope
test
sub
inc
mov
xchg
andl
out
icebp
outsl
je
mov
xchg
loop
sahf
sub
mov
inc
sbb
scas
mov
xchg
aad
ds
cwtl
xor
jp
in
mov
cmpsb
push
scas
mov
inc
cld
mov
mov
xchg
das
push
sti
push
out
pop
lods
adc
cmpsb
or
out
inc
sbb
push
jle
dec
dec
cmc
dec
and
push
cltd
les
shrb
aas
movsb
rcrb
pop
out
add
aam
add
je
lods
cld
add
sbb
xchg
scas
loop
jbe
mov
mov
popa
in
add
cmp
or
mov
or
or
sbb
dec
out
fisubs
popf
inc
inc
mov
xchg
mov
mov
push
icebp
inc
push
in
mov
fs
nop
das
xchg
hlt
fs
lods
dec
sbb
fucomi
loop
pop
andb
pushf
mov
cmp
ret
mov
cmpsb
sbb
cmp
jl
mov
mov
jge
inc
pushf
bnd
fstpl
or
or
jg
in
jno
push
push
mov
dec
sti
stos
imul
and
data16
fsubrl
test
sbb
push
pop
call
push
je
pusha
movsb
movsb
mov
or
mov
es
mov
iret
xor
out
sahf
shlb
mov
jp
add
dec
mov
xchg
jae
xchg
pop
imul
sbb
pop
aas
pop
mov
test
jne
nop
push
add
mov
ror
shl
push
fidivrl
add
cmpsb
pop
pop
jl
xchg
lea
jmp
stos
cmp
lock
pop
ret
inc
push
pop
enter
lahf
fldenv
push
xor
or
mov
fs
fs
mov
xor
dec
inc
movsl
popa
fcoms
xchg
xorb
cwtl
dec
out
xchg
dec
sub
xchg
or
add
inc
ljmp
je
outsl
sub
imul
inc
add
cmp
fcomi
sub
push
int3
and
pop
repz
gs
lods
mov
and
cs
fldenv
jp
pop
outsl
lahf
adc
jle
add
int
dec
cmpsb
push
mov
rorl
scas
sub
dec
or
pusha
mov
lcall
adc
out
push
aam
mov
or
jnp
adc
jmp
adc
mov
popf
pop
sub
or
int
divb
hlt
push
jno
or
lods
sbb
int3
nop
inc
mov
loopne
jo
mov
push
sbb
aas
lcall
xchg
cmc
mov
aaa
xor
sbbb
mov
fsubrs
mov
xchg
xor
mov
aad
inc
test
pop
mov
cmpsl
jmp
ds
or
add
std
loop
sbb
jnp
ds
insl
lret
ret
call
icebp
cmpsb
sti
test
dec
and
mul
push
xor
cltd
rorb
xchg
test
out
out
pop
aas
pop
push
lcall
xchg
mov
pop
push
test
fwait
ret
cmp
dec
fcompl
inc
mov
xchg
pop
or
push
sub
sub
sub
jbe
movl
js
sub
pop
xchg
mov
push
pushf
int
rorb
push
aad
push
lds
xor
inc
jns
fimull
push
add
inc
dec
scas
push
inc
aam
fucomip
or
shrb
in
sarb
mov
xor
ret
and
rcll
stc
mov
int3
xchg
movsl
cmpsb
jb
pop
clc
outsb
lret
pushf
fwait
inc
and
adc
add
in
sub
or
cmp
cmpsl
andb
push
inc
repz
pop
and
lea
sbb
cld
mov
xchg
ds
mov
push
mov
lret
jne
aaa
dec
add
jmp
pop
aad
pop
inc
mov
mov
mov
imul
mov
notb
mov
ds
inc
fldt
loopne
dec
push
outsl
xchg
mov
imul
cmp
or
cmpsb
adc
push
popw
push
xchg
cmpsl
add
ja
adc
mov
pop
std
push
fiaddl
daa
cmp
dec
mov
stos
inc
push
sahf
rorb
fs
push
xchg
cmp
jb
in
mov
push
cmp
cmp
jb
les
and
or
outsl
cmpsb
mov
sub
jbe
sahf
les
sahf
push
pushf
dec
popa
popf
xchg
in
push
imul
ja
in
leave
push
fiadds
repz
push
and
aas
cmpsl
ss
pop
sbb
add
jae
and
pop
inc
inc
jmp
adc
add
mov
sahf
push
lds
js
out
mov
mov
push
add
int
pushf
jmp
iret
arpl
jl
jb
test
lcall
in
pop
std
dec
sbb
mov
jp
push
push
add
outsb
dec
out
sbb
scas
dec
lea
inc
cmp
lcall
mov
push
xchg
push
jle
or
dec
add
adc
push
hlt
repnz
mov
adc
aam
ret
hlt
into
adc
cltd
sub
xlat
sbb
xor
adc
xchg
cmpsb
sub
pop
imul
push
cmp
icebp
cltd
jle
xor
mov
int3
mov
outsl
mov
adc
gs
push
cmp
test
inc
pushf
mov
jl
pop
and
loopne
rorb
loop
sbb
ds
pop
mov
aam
mov
inc
or
adc
lret
insl
testb
or
leave
and
aas
test
jae
mov
jnp
fucom
pop
stos
call
pop
scas
fbstp
fisttpll
mov
aam
test
mov
mov
movb
je
pushf
or
in
pop
xor
push
dec
icebp
inc
cld
fiadds
xchg
lahf
mov
sahf
mov
fidivrl
cltd
cmpsl
lret
push
xor
pop
mov
xor
movsl
stos
fidivrs
lret
std
pop
bound
mov
test
add
cmp
leave
xor
and
inc
out
lods
cmp
pop
iret
mov
into
pop
pop
mov
fadds
movsbl
cld
popf
bt
mov
stos
or
or
aad
jae
mov
in
xchg
fmuls
add
outsb
bound
sar
fisttpl
cmpsb
shrl
ficomps
cli
pop
inc
lock
pop
inc
mov
rcll
sub
xor
and
cmc
cli
mov
jns
fcompl
pop
mov
or
shl
repz
in
add
jns
leave
test
jb
push
xchg
jp
sti
sti
popa
fists
shll
mov
pop
ljmp
arpl
sub
sbb
inc
fs
rcrl
or
sbb
mov
jns
mov
inc
icebp
lcall
imul
cmpsl
xor
inc
lds
mov
scas
mov
and
orb
lods
push
scas
xor
cmpsb
jmp
lcall
in
pop
adc
inc
roll
inc
pop
pop
lods
mov
or
pop
sbb
mov
in
cmp
nop
out
in
mov
lea
je
sub
std
jno
xor
fisubl
ja
loop
loope
mov
or
push
ds
in
jmp
ret
lods
adc
adc
inc
out
sub
and
or
xchg
cmp
es
mov
add
pop
cld
idiv
clc
or
jle
push
mov
jl
cs
loopne
jbe
jns
movsl
add
jns
sbb
outsl
pop
jb
xor
loop
loop
dec
in
jp
mov
in
jbe
out
test
rcr
cs
sub
adc
imul
sub
fdivl
fistpll
cmp
rclb
add
ficoml
call
xorb
sub
mov
mov
push
adc
inc
scas
push
push
push
loopne
popf
and
add
insb
xor
aad
out
leave
test
lods
movsl
add
mov
mov
aaa
inc
or
pop
mov
xchg
ljmp
imul
pop
push
and
out
jp
loop
jnp
pop
pusha
stc
cmpsl
xchg
cs
jo
insb
adc
jmp
cmp
xor
fsubp
test
cmp
lds
mov
inc
fcoms
add
mov
js
pop
mov
leave
test
pop
xchg
rcrb
pop
ljmp
iret
mov
jne
cmpsb
inc
stos
xchg
dec
and
dec
add
test
stos
dec
jg
jnp
xchg
lock
mov
mov
rclb
lcall
enter
mov
das
pop
mov
adc
test
jl
pushl
mov
inc
jp
mov
sub
mov
call
mov
cwtl
mov
repz
adc
xchg
pop
out
xchg
dec
fldcw
mov
sbb
gs
gs
dec
mov
jns
or
dec
mul
ja
sbb
aas
mov
pop
test
pop
int3
add
lock
or
sahf
xchg
jne
push
pop
lret
lock
insl
das
push
pop
mov
mov
shlb
jmp
ret
dec
push
js
adc
mov
pop
fdivrl
test
sarb
cmp
es
repz
dec
or
addr16
and
add
sub
inc
loope
jno
push
popa
or
cmpsl
fbstp
lcall
xchg
mov
daa
loopne
mov
xchg
insb
orl
adc
mov
test
cmpsl
fldt
mov
dec
dec
jl
or
cmp
push
inc
adc
jnp
push
inc
mov
leave
jp
orl
out
jns
adc
pop
nop
xchg
mov
stc
adc
sbb
mov
xor
dec
adc
cld
dec
jbe
add
sub
xchg
mov
ljmp
stc
movsb
scas
cwtl
push
call
frstor
add
notl
xor
jg
test
icebp
sub
out
dec
notb
adc
test
aad
push
iret
outsl
rclb
shlb
inc
jns
ret
pop
aad
cmpsb
push
out
mov
loop
push
sbb
std
jno
jo
das
outsl
and
xchg
dec
and
aas
push
fs
cli
bound
mov
outsb
push
ljmp
add
inc
gs
mov
sti
or
test
jge
rol
insl
aaa
das
lahf
dec
fldt
pop
fisubl
sbb
mov
mov
sub
rcrl
enter
cs
imul
dec
xor
push
sahf
or
jge
cmp
insb
cwtl
push
or
xchg
fsubs
addr16
or
sbb
scas
pop
inc
sub
mov
pop
gs
ja
clc
xchg
lret
mov
pop
fcomps
xchg
lcall
adc
dec
push
mov
mov
lds
repnz
in
daa
cmc
test
idivb
cmp
mov
movsb
les
lahf
add
lret
inc
or
and
xor
test
lods
cmpsb
and
int
daa
fdivrl
cmpsl
nop
xor
pushf
inc
movsl
in
jle
lret
jne
mov
xchg
adc
in
push
rorb
lcall
in
mov
cmpsl
push
pop
aad
sub
push
scas
jle
shl
lcall
inc
iret
and
dec
dec
loop
insb
jb
lds
test
xor
jle
test
jge
jne
xchg
or
cmp
dec
dec
mov
pop
mov
in
and
clc
in
and
loopne
dec
fcoml
add
jo
pop
mov
lods
cltd
inc
mov
in
int
pop
hlt
mov
add
sub
scas
stos
imul
and
popf
push
xchg
inc
dec
push
out
cmp
mov
mov
mov
pop
inc
jmp
sub
out
add
test
pusha
arpl
faddl
movb
and
into
jl
cmc
stos
add
sbb
pop
xlat
orb
or
ficoml
mov
push
or
sub
ljmp
push
push
cmpb
inc
aam
sbb
out
inc
push
push
call
sub
mov
cmp
fstpt
and
inc
jg
inc
lea
jne
jb
xor
mov
lock
sbb
sbb
pop
mov
xchg
inc
mov
or
stos
iret
and
stc
sub
push
arpl
cmc
add
loope
dec
xor
dec
jecxz
mov
mov
mov
mov
cld
adc
push
xor
das
test
adc
mov
sti
mov
in
popf
fstps
dec
pushf
mov
push
iret
sub
or
jge
and
cmp
xorl
arpl
inc
adc
outsl
xchg
pop
dec
fs
and
inc
in
mov
les
test
sti
in
ljmp
jns
movsb
dec
and
adc
stos
stos
jns
and
xchg
cmpb
andl
or
xchg
pop
sbb
sbb
dec
and
push
inc
mov
insl
cmp
mov
stc
xchg
mov
imul
or
ret
dec
inc
push
pusha
bound
andl
addr16
rcrl
aam
xlat
sbb
dec
js
outsl
cmp
inc
test
xchg
add
daa
sub
fs
leave
aaa
jle
clc
mov
adc
fsubs
fnstenv
jo
push
call
inc
mov
out
xor
jp
inc
xor
dec
ja
lods
dec
or
mov
sbb
lods
mov
mov
test
jne
push
insb
mov
rcl
cmp
push
pop
and
lea
add
adc
rcrb
cmc
push
stc
sbb
mov
and
int
and
mov
mov
or
data16
xchg
adc
ds
dec
imul
sbb
adc
lahf
xlat
xchg
movsb
shlb
mov
sbb
sub
jle
jns
inc
imulb
dec
pop
push
out
mov
sub
pop
pop
cmpsb
les
repz
lar
nop
pop
inc
jg
mov
out
bound
ret
aas
push
loopne
add
mov
cmp
dec
mov
rolb
mov
cli
fld
dec
mov
dec
rcl
adc
lock
xorb
stc
sbb
mov
jmp
rep
xor
scas
mov
cmp
cmp
xlat
jno
stc
add
dec
inc
out
push
push
lret
jmp
push
jecxz
out
cmp
ljmp
fs
xchg
fmuls
test
out
outsb
push
cmp
test
iret
daa
jns
stos
stos
call
lahf
mov
mov
adc
ja
xchg
sub
loop
data16
idivl
movsb
ror
ss
xor
movsb
lds
inc
xchg
sub
pop
jnp
mov
sbb
add
or
add
cmpb
sarb
cmp
pop
cmp
ffree
pusha
into
movsl
pusha
xchg
das
and
decb
lret
in
dec
mov
pushf
jl
rcrb
cmp
mov
call
fistps
sub
or
xor
jne
lret
movsb
aad
inc
inc
loope
xchg
sbb
dec
mov
or
xor
mul
scas
xchg
inc
fisttpl
cltd
xchg
js
xchg
jmp
shlb
and
dec
adc
adc
out
push
aaa
ljmp
xchg
pop
mov
fmull
pop
shl
mov
mov
lods
lcall
aaa
sbb
adc
cmp
cltd
fisubrl
lods
sahf
sbbb
mov
shrl
inc
pop
fdivp
aas
hlt
test
fwait
int3
xchg
sbb
push
push
jg
popf
sbb
jg
lods
movsl
outsb
mov
test
xchg
jmp
xlat
mov
add
dec
aad
ret
insl
outsb
adc
add
mov
mov
pop
pop
pop
push
scas
scas
std
ret
scas
movsb
mov
and
fdiv
cs
and
call
loopne
lds
xchg
dec
xchg
pop
and
mov
negb
xor
inc
mov
in
mov
pop
std
je
mov
test
les
test
fidivrs
mov
jbe
xchg
bound
inc
pop
dec
lahf
dec
mov
cmp
dec
cmpsb
adc
add
outsl
sbb
sub
push
cs
cld
imul
dec
leave
sbb
in
push
ljmp
fucomp
mov
xor
std
cli
pop
lds
or
push
popa
push
out
outsb
jbe
and
mov
inc
popa
jle
mov
ja
cwtl
xchg
mov
sahf
dec
xchg
into
jne
icebp
ja
lods
inc
test
mov
sub
lahf
in
fildl
popa
shll
add
je
xchg
in
dec
dec
mov
cmpsb
jo
loope
sub
cli
xor
pop
inc
aam
data16
xchg
in
inc
popf
xchg
imul
lock
xchg
xchg
ret
mov
xor
add
and
mov
rorb
add
orl
mov
lcall
iret
int
or
jmp
jno,pt
mov
push
push
fisubs
leave
xchg
fidivrl
mov
lret
xor
std
dec
lret
sti
and
add
mov
imul
pusha
push
stc
addl
rcrb
sub
lods
sbb
fwait
not
call
das
jo
sbb
xchg
stc
test
add
out
pusha
mov
rcrl
call
sarl
pop
xor
sahf
stos
jmp
sbb
xor
pusha
stos
mov
in
mov
cmp
sbb
mov
ja
cmp
sahf
daa
repz
xor
sub
shr
aaa
adc
insl
mov
out
fstpl
mov
lahf
nop
cmpl
out
pop
inc
int3
fcomp
lods
cld
push
jno
fldt
pop
cmp
or
daa
aas
bound
push
sub
clc
pusha
jp
cmpsb
in
enter
test
mov
icebp
sub
enter
adc
xchg
jo
sahf
ret
xor
add
fbstp
jle
lea
sub
out
jo
inc
push
fs
adc
dec
add
or
js
insl
inc
xor
dec
mov
aaa
push
sub
std
jmp
stc
scas
jbe
call
test
push
loop
dec
pop
jge
add
sahf
lock
dec
xchg
mov
les
inc
add
pop
xchg
jp
xchg
mov
test
xor
or
add
fists
mov
mov
jecxz
sub
inc
pop
call
jl
mov
and
js
push
xchg
cwtl
or
pushf
clc
push
pop
call
aaa
repnz
fdivrl
mov
mov
leave
push
stos
xlat
pop
sti
xchg
pop
jno
sbb
scas
in
and
xor
lret
pop
push
lret
and
jo
imul
mov
enter
imul
shrb
inc
jmp
rcrb
xchg
add
lcall
in
lret
cmpsl
cmp
xor
fnsave
test
rorb
fldl2e
into
pusha
pop
aam
push
hlt
sarl
stc
aas
jmp
daa
mov
sub
insb
adc
test
adc
cs
jecxz
test
push
ret
rcrb
sahf
mov
out
ja
jle
sbb
sbb
repz
repnz
es
adc
cmova
clc
or
sbb
fidivs
mov
loope
or
rcrb
adc
dec
sbb
ja
xor
jns
sub
cmpsb
cwtl
sbb
ja
out
call
gs
jle
push
xor
hlt
ss
push
out
insb
jno
xorl
sbb
jno
sbb
xlat
cmp
mov
les
call
rcrb
bound
sub
rorb
jo
jbe
push
es
mov
xchg
inc
repz
cmp
or
cltd
cwtl
push
sub
je
incl
pop
stc
movsb
sarb
mov
lret
xchg
inc
xchg
sub
test
and
inc
wrmsr
test
jmp
mov
in
mov
sahf
ret
subb
or
xor
fldpi
cmp
pop
es
fmull
dec
jne
xchg
fld1
les
push
mov
lea
sub
int
cwtl
loopne
inc
dec
lds
sti
fstpl
mov
repnz
sahf
jmp
fwait
mov
repnz
adc
push
mov
adc
fisubrs
nop
jns
xchg
rcll
inc
mull
mov
add
inc
aas
pusha
add
out
inc
push
mov
test
fstps
test
test
xor
cmp
or
data16
dec
jb
in
cmc
and
sbb
out
insl
xchg
mov
mov
mov
inc
shlb
aad
cs
xchg
insl
pop
xor
jg
mov
pop
shlb
pop
je
bound
fs
lock
aas
inc
jge
dec
adc
jge
pop
loop
mov
adc
mov
sub
xor
mov
out
cltd
lahf
clc
xchg
ss
push
icebp
ret
mov
cwtl
and
fnsave
dec
sub
sbb
out
jno
rolb
aas
inc
and
push
mov
movsl
pop
div
xchg
jo
mov
mov
cmp
xor
lahf
movsb
sub
jo
cltd
lock
js
loopne
decl
adc
xchg
add
pop
loop
push
pop
pop
lock
pop
cld
mov
call
hlt
addr16
push
das
mov
ds
imul
notl
jne
out
clc
das
js
jle
dec
imul
outsl
adc
mov
and
pushf
jp
dec
add
add
pop
mov
xor
cmp
xchg
push
inc
dec
add
pop
cmc
std
fwait
pop
iret
sbb
out
or
fwait
and
addr16
mov
aas
mov
xchg
push
dec
dec
loop
xchg
idivl
out
pop
sbb
and
mov
outsl
or
test
aaa
cld
sbb
xor
sub
insb
pop
jns
jp
stos
sub
es
andl
popf
clc
das
dec
cmpsb
insb
sti
gs
sbb
test
and
lock
xchg
rorb
inc
inc
mov
aad
dec
mov
je
fiaddl
push
ds
out
repnz
adc
push
adc
and
dec
in
add
int3
enter
jb
scas
sub
pop
mov
test
ficoml
mov
jmp
sub
adc
xchg
pop
mov
sbb
leave
movsl
hlt
xchg
sbb
jp
push
pop
repz
push
xor
cmpsl
add
mov
cld
jmp
stc
in
xchg
frstor
mov
or
cltd
push
fnsave
mov
jno
hlt
aas
loop
insl
mov
ficoms
imul
sbb
movsb
mov
or
movsb
and
dec
push
stc
inc
ja
loopne
lret
mov
sarl
test
pop
outsl
jno
mov
repnz
inc
cld
jo
movl
gs
pop
nop
jl
insb
fsubl
cli
rcr
stos
push
les
pop
cmp
or
fcmovne
mov
orb
sub
out
lret
push
ja
add
in
int
repz
and
mov
xor
stos
mov
xchg
pop
xor
outsl
ja
or
sbb
fwait
in
xchg
ret
inc
mov
sub
ljmp
and
mov
cld
add
add
shll
insl
dec
push
mov
push
add
aas
push
rorb
adc
jae
jns
xchg
or
cmp
sub
push
nop
mov
mov
repnz
adc
repnz
lea
out
xchg
aam
iret
pop
lea
out
bnd
push
aam
xchg
stc
ffreep
and
jae
mov
sub
dec
push
jnp
sub
cli
pop
out
and
sti
add
dec
fcoml
js
inc
iret
cmp
inc
test
mov
push
shll
lds
out
cmp
jp
mov
lods
sub
cmp
adc
fdivrl
pop
popfw
xor
and
jp
imul
mov
push
lcall
test
ds
cld
scas
xchg
ret
add
nop
pop
bound
fwait
pop
adc
push
mov
jae
jae
cwtl
xchg
enter
fbstp
and
out
lods
or
fimuls
sbb
fldenv
xor
imul
jle
xchg
loop
pop
je
stc
xchg
pop
mov
inc
lahf
mov
mov
jns
fiadds
pop
jo
clc
mov
pop
pop
jae
cmpsl
je
jns
xlat
and
xchg
lea
cmp
jne
stos
mov
xorl
test
xor
fimuls
dec
jg
je
cmp
push
xor
push
lods
push
lods
sbb
jp
sbb
adc
inc
xchg
pusha
mov
cltd
je
xchg
int
dec
popf
push
rorb
cli
pop
sub
pusha
notl
loop
jmp
jge
shrb
pop
jae
movsl
inc
pop
cmp
xchg
and
lret
cmpsb
fwait
mov
lods
popa
push
xor
inc
test
jmp
flds
cmp
lods
in
insl
daa
lret
push
hlt
cmpb
call
popa
gs
into
idivl
std
mov
scas
rorl
pop
sbb
mov
xor
dec
das
mov
cmp
sbb
leave
js
pop
jge
cld
or
sub
pop
scas
fsub
xorl
and
pop
push
pop
mov
rcrb
dec
test
mov
dec
cmp
in
jno
xor
pop
pop
mov
xchg
ljmp
movsb
aam
in
test
ret
test
xchg
in
test
dec
mov
xor
lahf
fildl
inc
orb
and
scas
mov
fbld
xchg
aad
pop
mov
mov
adc
push
sbb
cmp
mov
lock
gs
andb
sbbb
dec
incl
test
add
aad
lahf
imul
gs
lahf
jb
sbbb
ljmp
out
das
iret
xchg
sub
pop
xchg
aad
inc
dec
std
jb
mov
push
add
jmp
adc
test
mov
pop
jb
sbb
int3
icebp
or
inc
icebp
aad
mov
icebp
and
aas
mov
daa
int
add
aad
sub
and
dec
test
enter
dec
push
das
sar
add
clc
xchg
iret
adc
and
ret
xchg
les
add
shr
cmc
jp
sarl
mov
mov
or
rorb
fsin
add
xchg
fdiv
cmp
movsb
cmp
es
es
inc
cmc
mov
xchg
int
jp
aad
sub
mov
cs
mov
mov
dec
mov
out
pop
dec
sub
ja
mov
sub
fwait
js
fwait
outsl
lea
mov
dec
pushf
std
repz
imul
les
shll
aaa
int3
push
xor
adcl
jmp
jmp
or
dec
outsb
mov
lods
ret
outsl
data16
addr16
add
mov
in
sbb
lea
xlat
fwait
mov
fdivrs
das
add
xchg
sub
dec
pusha
cmp
pushf
ret
in
pop
scas
les
imul
out
cmp
and
cmp
fwait
inc
mov
lods
xchg
out
enter
pop
jmp
lret
popf
mov
into
cwtl
pop
jle
jl
push
jecxz
imul
std
cwtl
mov
and
bound
xchg
ds
inc
scas
pop
xlat
fidivs
mov
outsb
push
xor
sahf
enter
fisttpll
push
daa
fiadds
clc
mov
loop
outsl
int3
jno
cwtl
xor
lea
cltd
push
clc
push
cmp
or
xchg
cld
flds
fiadds
push
in
push
and
adc
fisubrs
jg
pop
dec
push
loop
xor
and
or
out
or
cmp
stos
dec
lret
pop
adc
xor
xorb
and
iret
std
aas
cmp
fnstsw
xchg
and
push
out
inc
xor
daa
xchg
mov
outsb
add
push
and
or
sbb
mov
cs
sbb
ss
enter
mov
adc
dec
enter
cmpsb
add
jno
add
jge
cmpsb
mov
sbb
adc
mov
push
cld
pop
ja
fildll
push
lcall
outsl
and
fnsave
adc
aaa
and
push
xchg
cli
std
push
imul
mov
outsl
cli
shlb
idivl
and
repz
ja
jge
adc
mov
pop
push
inc
dec
xchg
std
adc
std
xor
out
jno
out
lret
sub
xchg
insb
push
imul
ds
fcmovne
cmpsb
pop
pusha
push
jbe
inc
imul
adc
subb
adc
xor
mov
or
and
nop
shl
xor
inc
or
push
stos
fwait
pop
lahf
jne
leave
ja
loope
mov
push
repz
imulw
jnp
les
movsl
pop
xchg
ret
loop
jmp
add
test
or
jo
add
ja
xor
into
mov
xchg
xor
cmp
add
xchg
rcl
inc
scas
pusha
shl
pop
sub
cmp
cmp
mov
inc
mov
push
cs
jnp
jmp
lcall
xor
xchg
fcompl
sub
jecxz
clc
mov
xchg
call
and
mov
test
push
jp
xor
fxch
popf
pop
mov
xchg
out
cmp
dec
pop
fwait
sbb
dec
imul
pop
jae
fistps
cmpsl
repnz
std
inc
cmpxchg
mov
out
mov
out
andl
enter
and
outsb
xchg
mov
sbb
into
lock
lahf
push
xor
pop
add
sbb
dec
cmc
push
xor
jne
cmp
mov
aas
stc
xchg
push
jns
adc
sti
mov
cld
enter
add
aam
sub
cmp
mov
outsb
jns
pop
je
inc
add
inc
pop
loopne
mov
xchg
xor
sbbb
jno
cmpsl
lret
mov
adc
mov
and
iret
les
xor
mov
loop
jnp
stos
test
push
push
call
mov
arpl
les
es
dec
push
inc
popf
jbe
add
daa
hlt
leave
pusha
dec
daa
ficoml
les
mov
add
cmpsl
loope
mov
cmp
lahf
lds
clc
lahf
mov
mov
xor
ds
test
adc
lds
and
mov
pusha
test
xchg
add
add
dec
hlt
repnz
lods
sti
lret
bound
pop
lods
sbb
dec
rcl
outsl
repnz
sbb
test
or
insb
icebp
dec
dec
test
cmp
adc
mov
pop
pushf
cmpsl
lcall
and
and
iret
xchg
cmpsl
push
cmp
cmc
push
push
cmp
pop
fs
sbb
pop
lcall
pop
daa
inc
vpsrlq
aaa
jno
aad
and
add
adc
sub
sbb
imul
sub
loop
ret
das
je
cmpsb
jb
dec
out
cs
mov
xchg
dec
mov
mov
jbe
leave
cld
jcxz
mov
movsl
outsl
sbb
jnp
insb
mov
icebp
in
pop
ret
and
cmc
insb
inc
lds
leave
jge
fiaddl
movsb
int
out
int3
mov
in
cmp
sub
les
sub
stc
dec
mov
xor
jp
xchg
mov
sbb
adc
push
out
and
xor
imull
add
outsb
ror
push
xchg
and
pusha
xor
popf
lds
ljmp
mov
ljmp
push
cwtl
push
dec
cmc
adc
dec
mov
jns
data16
cmpsl
push
mov
loopne
addr16
mov
dec
dec
mov
jo
loop
pop
and
cld
mull
inc
out
and
jae
imul
js
aas
int3
jae
insb
dec
push
mov
popf
idivl
cmp
movlhps
sti
push
cltd
repz
dec
sbb
mov
mov
stc
ja
pop
ja
mov
out
les
in
mov
jmp
daa
fistps
fisttpl
jbe
ficompl
push
mov
inc
mov
dec
stc
in
sysenter
push
inc
lods
sti
outsb
and
aad
push
iret
cld
lods
sub
pusha
ret
xor
scas
fwait
sbb
push
pop
sbb
or
sbb
ja
and
dec
add
std
cmpl
test
movsl
sub
loope
mov
popa
mov
subb
out
xchg
pop
push
clc
lods
mov
out
sbbl
or
add
xlat
cmp
aad
mov
mov
jle
bnd
inc
test
or
cmp
inc
outsl
jge
mov
mov
mov
sarb
movsl
enter
cmc
stos
in
pop
lods
push
arpl
imul
daa
or
int3
cmp
int3
daa
jo
lods
jbe
xor
popa
lea
daa
cs
xchg
pop
inc
cltd
aas
add
push
jge
push
and
das
ficompl
cmp
clc
icebp
jge
push
jno
stos
lock
xorb
cmp
jl
aad
sbb
mov
popf
push
push
testl
ja
xchg
cmp
mov
mov
shl
icebp
ret
lock
rcr
push
dec
mov
dec
sbb
sub
notb
mov
data16
loopne
xchg
fstpl
fsub
in
lea
insl
or
xchg
jno
and
xchg
scas
fiaddl
mov
out
int
cltd
incl
push
cli
jp
jo
or
cwtl
nop
add
mov
push
inc
dec
es
push
popf
pop
dec
cmp
xor
inc
jae
inc
int3
adc
add
hlt
and
lock
cmc
pop
inc
xor
lcall
repz
mov
lret
popa
pop
pop
or
add
test
lret
out
mov
adc
fxch
repnz
mov
and
mov
out
cmc
iret
and
ljmp
xchg
fistl
icebp
mov
fwait
gs
add
int3
cmp
xlat
stos
pop
jb
fwait
xchg
pusha
lahf
scas
jnp
add
inc
idiv
add
ret
xchg
pusha
adc
in
ret
lds
xchg
cmc
xor
mov
les
neg
inc
pushl
insl
movsl
add
addl
mov
cmp
sub
jnp
pop
sbb
es
jae
mov
xchg
jno
push
cltd
jge
pop
sub
mov
xor
das
mov
notb
std
divl
sbb
add
int3
mov
push
xchg
hlt
xorb
pop
xchg
add
jbe
push
adc
ljmp
and
aam
outsb
fwait
hlt
cli
dec
inc
cmpsb
ret
mov
aas
mov
push
sub
xlat
pop
stos
test
cmp
in
cmpsb
aaa
iret
and
ret
add
lret
scas
clc
test
jb
roll
cld
jmp
sbb
push
adc
fisubl
aam
xchg
into
push
or
mov
mov
mov
les
adc
das
das
insb
subl
arpl
pop
pop
jle
loope
xchg
jae
popa
mov
outsb
add
std
lret
push
rol
jl
js
mov
xlat
and
dec
ret
push
leave
rcrb
stc
out
rcl
sub
add
insl
pop
push
xor
mov
fdivs
cs
cmc
xorb
fwait
push
int3
adc
adc
dec
cmp
icebp
sbb
mov
call
jne
imull
in
jb
cmp
jl
dec
enter
iret
in
fmull
mov
push
pop
sub
stos
out
shll
mov
repz
mov
sahf
mov
pop
cmp
mov
dec
js
rcrl
mov
je
fcomps
mov
push
ja
push
decl
fiadds
sahf
out
and
xchg
loope
pop
cmpsl
jp
popf
les
and
push
je
push
cmp
xchg
sbb
lret
mov
aas
loope
js
add
mov
pop
cs
xchg
outsb
mov
addr16
or
adc
jb
imul
lods
mov
jl
aas
xchg
dec
out
test
lret
and
mov
dec
addr16
or
adc
xchg
dec
testb
xchg
sbb
dec
scas
sbb
jp
mov
pushf
dec
xor
pusha
add
push
out
xchg
jmp
mov
mov
adc
and
stos
push
nop
adc
aas
mov
mov
movsb
movsl
mov
pop
pop
ret
fsubr
test
loope
pop
ss
dec
pop
mov
stos
call
mov
popl
repnz
int
stos
or
jle
je
or
add
fiaddl
mov
xchg
out
sbb
aaa
mov
lcall
push
push
and
popf
and
cmp
cli
or
cwtl
test
outsb
pop
push
xchg
shl
pop
int3
inc
cs
and
adc
pushf
sub
call
stos
sub
mov
cmp
mov
addl
rorl
inc
lret
mov
stos
mov
leave
cli
dec
push
lds
popf
adc
aaa
mov
int3
mov
push
enter
jb
cmpsb
jbe
sub
stos
push
or
push
mov
push
or
mov
inc
adc
and
das
cmc
push
mov
xlat
pop
pop
loopne
jne
xor
fldt
jecxz
ss
mov
cmp
pop
sbb
les
and
xor
cmp
stc
xor
icebp
outsb
gs
mov
mov
inc
cmp
push
xchg
cmp
add
mov
les
fcomp
data16
inc
push
sbb
jp
fcoms
xchg
dec
dec
mov
or
mov
in
dec
mov
dec
push
cmp
cmp
loopne
and
adc
in
cmpsl
xor
nop
add
sub
addr16
rol
push
jge
cli
adc
out
pusha
pop
mov
sbbl
fdivrs
into
mov
dec
repnz
pop
mov
ss
mov
aam
jb
add
xchg
mov
pop
push
or
jo
jbe
and
jno
popa
mov
xor
sub
sbb
out
pop
sub
sbb
cmp
or
vpmacsswd
push
scas
fiadds
inc
mov
mov
pop
adcb
pop
sub
popf
add
pop
arpl
or
sbb
mov
cmp
dec
cmp
shlb
push
pushf
daa
xchg
aam
nop
pop
pop
scas
jmp
xchg
in
leave
std
sub
mov
in
orb
mov
int
sbb
pop
insl
sbb
mov
gs
jno
imul
inc
sbb
mov
movsl
fs
dec
movsb
adc
lods
mov
dec
sub
pop
cmp
lods
lret
push
push
lods
xlat
scas
mov
cmpsl
mov
int3
and
rcll
sub
mov
push
add
fdivr
adc
push
std
incb
add
xor
mov
dec
icebp
incb
or
cmc
sub
sub
sarl
push
jle
call
mov
sub
mov
popf
jecxz
and
pop
jle
push
aas
fs
aas
inc
mov
inc
ss
and
ds
lcall
rol
dec
xor
pop
movl
push
mov
mov
aad
inc
sbb
and
pop
pop
mov
push
ljmp
inc
lods
cmp
es
pop
inc
pushf
and
mov
add
int3
or
xor
test
pushf
sti
dec
and
mov
or
ficoms
mov
inc
cs
cmp
jmp
iret
sub
jo
cmpsb
addr16
movsl
std
mov
push
stc
pop
out
ror
jno
sub
call
das
xchg
cmp
ljmp
adc
ss
popf
pop
dec
fcmovu
dec
mov
lcall
lret
inc
decb
mov
fists
push
xchg
in
xchg
and
cmp
clc
xor
mov
adc
hlt
and
mov
cmpb
mov
pop
fs
fwait
data16
dec
test
add
subl
mov
cmp
jmp
mov
sub
dec
hlt
cwtl
loopne
test
ja
push
push
pop
bound
sbb
lods
jmp
jne
mov
popl
xchg
or
adc
mov
dec
and
test
cltd
fldl2t
jecxz
push
filds
daa
jb
mov
inc
cmp
mov
filds
xor
mov
incl
push
daa
and
lcall
jecxz
or
comiss
pushf
subb
js
in
pusha
push
sub
adc
push
sub
sbb
push
loope
cmc
test
test
xchg
dec
xchg
add
sahf
inc
push
out
xbegin
pop
or
std
cmp
cmp
sbb
pushf
mov
aaa
repnz
hlt
scas
mov
mov
inc
enter
jno
push
int3
repnz
stc
cmp
data16
iret
add
push
stc
xchg
fsubl
and
out
add
and
sbb
push
outsl
andb
mov
leave
aam
dec
inc
int
dec
ja
pop
in
sub
pop
pop
fmuls
mov
popw
xor
iret
lret
add
cwtl
sarl
addr16
mov
cmp
scas
push
scas
add
xor
sbb
push
xor
loopne
js
icebp
cltd
sarb
mov
mov
loop
ljmp
pop
movsb
enter
outsl
js
cmp
pop
cmp
movsl
fidivrl
clc
jnp
enter
push
xor
ja
inc
mov
push
dec
push
pop
icebp
cmpsl
xchg
mov
dec
pop
repz
mov
movsl
imul
cmc
jno
jnp
sub
mov
push
sub
adc
mov
push
js
add
pop
and
je
stc
into
dec
rorl
push
cmp
mov
xor
xorl
jne
adc
cmpl
and
ficoml
loop
push
sub
add
mov
mov
mov
add
mov
or
stc
lahf
clc
sbbb
aas
xlat
sub
lds
repz
push
push
in
inc
fstp
les
repnz
adc
js
rorl
out
pop
js
imulb
imul
pop
adc
xchg
sbb
into
ror
mov
and
add
add
in
pop
movsl
ljmp
xchg
andl
jb
int
je
and
pop
shlb
pusha
dec
adc
lret
inc
push
div
dec
inc
dec
movsb
idivl
aad
mov
push
dec
jg
cwtl
sub
adc
push
ja
loope
jo
push
cmp
cmc
and
lods
dec
add
xor
shrl
les
loopne
push
pop
jns
pop
push
shrb
and
jg
mov
shlb
xchg
or
icebp
pop
jle
mov
mov
sbb
cs
test
pop
add
in
lcall
and
sub
adc
jecxz
cmp
add
pushf
std
adc
or
xchg
jg
shrl
jge
xchg
xchg
and
int
push
mov
hlt
adc
mov
xor
int
dec
nop
mov
mov
cmp
jecxz
adc
mov
dec
jecxz
int3
mov
push
adc
test
test
int3
jl
push
in
rcrl
xor
jbe
xchg
jp
fwait
mov
add
dec
jne
xor
xchg
imul
and
mov
xchg
and
inc
and
in
dec
xchg
push
gs
mov
in
cmpsb
xor
xor
xlat
test
add
mov
xor
ljmp
sbb
xchg
mov
inc
mov
stos
fnsave
push
arpl
lcall
push
lcall
push
iret
das
mov
gs
pop
xor
mov
cmpsl
in
in
or
cmp
ljmp
or
out
fcomps
sub
mov
jmp
arpl
cmp
jg
dec
add
fstpl
xchg
mov
rcll
mov
push
outsl
dec
dec
inc
and
pop
and
cmpsb
jp
sbb
cwtl
test
int
std
mov
loopne
inc
clc
movsl
mov
inc
es
cmpl
adc
loop
xchg
les
iret
jae
pop
movb
inc
pop
jnp
insb
nop
adc
movsb
int3
push
scas
out
add
jp
loop
dec
sbb
pushf
loope
loop
inc
hlt
add
bound
loopne
lods
xchg
pop
cwtl
mov
ss
or
add
push
sahf
and
mov
andl
inc
mov
call
cld
or
xchg
and
hlt
cli
idivl
adc
lock
test
outsl
jo
and
mov
inc
push
or
and
dec
in
cmpl
ds
mov
cmpsl
add
pop
sbb
push
pop
fs
pop
call
sub
jno
mov
xchg
loopne
pop
std
inc
lret
pop
inc
jb
push
and
jp
js
sbbl
dec
mov
mov
inc
dec
cwtl
cmp
push
clc
sbb
sub
push
cwtl
movsl
mov
popa
cmpsb
cld
xchg
shrl
fistl
or
sbb
scas
and
arpl
fcompl
cmp
pop
push
cli
mov
xlat
mov
insb
pop
sbb
and
in
push
mov
mov
rcr
push
fadd
xchg
sahf
sbb
xchg
xchg
pop
test
cmpb
lcall
fstps
mov
jne
popa
call
mov
adc
mov
push
cmp
cmp
or
mov
mov
push
or
popf
scas
sub
movsl
sbb
mov
fdivs
popa
aaa
fs
aam
idivl
pop
xchg
mov
cld
mov
leave
dec
pop
fcomps
sarl
push
add
popf
cmp
inc
mov
fcomip
add
repz
push
fcom
and
sub
or
int3
xchg
rcll
daa
dec
mov
rol
fcomi
sub
mov
clc
dec
jg
jg
ret
xor
sbb
in
sbb
jne
mov
mov
mov
pop
das
stc
mov
pop
fbstp
leave
in
add
xchg
mov
jns
js
adc
sbb
insb
push
xchg
lock
push
sbbb
jne
adc
lea
test
adc
lock
imul
nop
push
xor
mov
jp
es
in
jne
dec
addr16
sub
dec
sub
nop
dec
dec
add
loopne
icebp
rorb
out
cmpsb
push
cmp
mov
dec
push
jge
xchg
pop
sbb
movsb
pop
xorb
pushf
xor
loop
loop
xorl
cmp
test
mov
sbb
mov
push
jge
push
xor
xor
lods
lds
shlb
pop
mov
jnp
in
mov
cwtl
sub
out
test
push
jmp
lret
jo
fimuls
jae
pop
fldcw
scas
jno
out
lods
ret
movq
pop
cmc
sbb
jg
add
sbb
xchg
mov
pop
push
loop
not
shlb
or
inc
call
out
lahf
push
pop
cmp
sub
nop
into
or
xchg
negl
pop
sbb
nop
ljmp
nop
or
push
ljmp
dec
test
fdivrl
pusha
sub
jb
sbb
into
sti
push
icebp
adc
and
add
or
icebp
mov
inc
mov
add
dec
dec
outsl
js
orb
in
bound
mov
dec
stos
mov
jnp
sbb
add
test
xlat
sbb
and
arpl
pop
data16
test
daa
mov
lcall
enter
aad
xchg
fcompl
push
mov
push
in
mov
inc
sub
insb
and
mov
out
push
or
lds
push
pop
out
or
sub
sbb
sub
inc
in
xchg
test
sbb
add
sbb
and
xor
pop
xor
dec
mov
outsl
push
push
test
scas
xchg
ret
dec
lahf
loop
icebp
pop
xchg
cld
jl
lods
leave
and
clc
inc
andb
je
movsl
jle
pavgw
jge
jne
push
fldcw
inc
or
in
in
xor
shrb
sbbb
xchg
fldl
lock
fwait
sbb
pop
cmpl
pop
nop
call
mov
icebp
daa
idiv
inc
loope
decl
shlb
push
mov
sbb
jo
call
outsb
lods
sbb
mov
push
mov
inc
mov
adc
negb
fldcw
loopne
xchg
cmp
cmpb
cmp
decl
cmpsb
les
inc
enter
pop
xor
das
stos
fs
insb
inc
ret
lock
pop
pushf
hlt
rcrl
notl
mov
mov
mulb
int
les
add
vpcmpgtd
stc
jo
jecxz
stos
cwtl
push
mov
fisttpll
jnp
ret
cltd
fnsave
arpl
test
sar
popa
mov
mov
sar
cltd
jecxz
sbb
push
push
clc
fists
scas
xor
and
dec
jmp
mov
shll
jmp
imul
pushf
pop
or
mov
test
push
pop
adc
lcall
aam
gs
ljmp
lret
lds
insb
push
mov
cmc
pop
ret
mov
mov
mov
icebp
dec
xor
and
push
aas
mov
in
jle
adcl
mov
mov
fcoml
xor
int
hlt
daa
or
dec
pushf
in
mov
xchg
jae
adc
pop
push
lock
cmp
inc
mov
or
jne
daa
xchg
xchg
subl
pop
fwait
jae
cmpsl
dec
or
and
pop
xchg
cmpsb
insl
mov
insl
pop
push
xor
popa
les
push
sub
add
pop
dec
mov
pop
es
adc
xor
sarl
mov
add
iret
xchg
and
jnp
rolb
jle
pop
pop
mov
lcall
pop
inc
rcll
mov
and
mov
and
neg
movsb
xor
scas
pop
insl
add
push
jl
push
pushf
ror
iret
pushf
imul
xor
orl
add
into
xchg
jle
scas
adc
and
xchg
cmp
mov
push
jbe
ds
lret
adcl
repz
mov
mov
fcompl
jp
adc
pop
int3
sub
js
push
xor
cltd
sbb
mov
cli
sti
xor
inc
cltd
jae
jne
or
dec
in
hlt
lcall
ret
cmp
in
test
arpl
xchg
lret
loop
movl
cmpsl
repz
aad
xchg
adc
dec
stos
add
lret
outsl
insl
pop
xchg
dec
or
xor
dec
repz
fistl
push
ffreep
sub
xor
fistps
inc
pusha
cmp
int
in
rcrl
push
push
clc
mov
cmp
sub
lock
dec
push
jae
jmp
std
cld
pop
jl
mov
push
push
dec
sub
add
nop
xchg
lret
sub
inc
aas
iretw
stc
pop
leave
jl
xchg
xor
ljmp
push
out
xor
int
jp
sbb
call
push
outsl
test
xchg
sbb
adc
jmp
cmovns
mov
push
fidivrl
std
pop
lods
lods
mov
lods
or
jns
ljmp
cld
jmp
lret
cmp
push
pop
lock
cs
test
ljmp
dec
clc
sub
mov
scas
jno
pop
mov
xlat
popa
repz
test
jns
movsb
roll
subb
adc
dec
jno
das
or
loope
fbstp
inc
shrl
inc
fcmovu
or
mov
stos
popa
test
jae
pusha
sbb
lds
ret
dec
movsl
dec
jbe
jl
cs
mov
jns
mov
scas
push
inc
cltd
mov
cmpb
xchg
or
cmpsb
xor
lcall
or
dec
xor
fsubs
dec
and
cmp
repz
scas
aam
mov
fstl
dec
cmp
adc
and
sbb
push
in
out
shlb
jl
add
mov
inc
push
cs
mov
mov
pop
stos
push
sub
and
daa
clc
sub
addr16
dec
cwtl
push
mov
xchg
pushf
out
mov
arpl
xor
pushw
sbb
jecxz
test
cmp
data16
lods
cs
out
adc
imul
mov
add
jo
adc
jge
cmp
push
sub
mov
outsl
xchg
pop
cmp
jecxz
sub
sahf
stc
xor
cmp
mov
je
out
mov
xor
or
les
xor
or
xchg
xorw
mov
pop
or
pop
and
xchg
add
sub
xchg
cmp
gs
push
mov
inc
in
cs
stos
lock
sbb
addr16
inc
lods
and
pop
mov
outsl
shrl
xor
adc
fcmove
out
dec
xor
mov
scas
cmc
mov
push
inc
lds
addr16
pop
ss
or
mov
out
mov
popa
and
ds
xlat
add
push
cmpsb
or
jmp
xchg
out
xor
dec
dec
ja
movsl
mov
xchg
rclb
sub
mov
pop
inc
dec
mov
add
clc
loope
test
dec
inc
cmpsl
cmp
xor
xchg
movsb
push
jg
jge
out
nop
xchg
mov
adc
mov
sub
leave
outsb
das
lret
scas
cmc
imul
fwait
xor
adc
add
dec
dec
push
inc
xchg
mov
sbb
mov
scas
or
xchg
jmp
sbb
push
xor
and
rcrl
jns
cmp
je
mov
pop
in
xchg
aam
push
in
loopne
xchg
lds
insb
ret
sbb
push
test
mov
or
mov
inc
jb
inc
aaa
mov
clc
je
pusha
out
flds
lahf
fsubs
jecxz
adc
jno
daa
push
or
mov
in
push
dec
or
pop
adc
fstpt
cmp
add
bound
mov
jg
ja
xor
ds
cmp
scas
jmp
mov
bound
inc
push
lcall
cld
xchg
stos
and
mov
lret
push
dec
add
repnz
push
lret
and
pop
inc
sub
popa
fcompl
push
pop
inc
jge
adc
inc
sbb
mov
push
jns
stos
jae
dec
shll
add
sbb
fdivrs
and
scas
pop
or
sub
cwtl
push
adc
daa
mov
jns
sbb
xchg
and
xchg
fwait
scas
test
inc
pop
adc
inc
pop
int3
jb
cli
adc
pause
xlat
inc
rcll
jno
loop
and
xchg
push
push
sahf
sub
cmp
sub
cmpsl
xlat
mov
sub
movsb
out
call
lahf
xchg
pop
repz
test
inc
daa
pop
xor
js
popa
arpl
aad
jno
or
mov
adcl
inc
xchg
aad
lods
hlt
jecxz
addr16
les
arpl
and
test
adc
inc
xlat
mov
in
call
add
les
add
push
popf
into
lcall
arpl
outsb
ss
cmp
aad
dec
xchg
and
push
roll
push
mov
dec
inc
or
out
xchg
jbe
fldenv
mov
fs
jnp
les
push
mov
pop
sub
jmp
sbb
jns
nop
lds
mov
cmc
add
mov
movsl
xchg
adc
mov
mov
cld
mov
and
lods
int3
fdivr
ljmp
xchg
mov
dec
test
jo
jge
xchg
xor
sbb
mov
scas
idivb
jl
pop
jg
rclb
and
push
fs
sahf
hlt
fbstp
sub
push
ljmp
in
negb
or
sbb
lock
mulb
int3
dec
loop
lahf
or
popf
mov
inc
pop
lds
scas
ss
ja
push
icebp
setnp
cmc
mov
jg
mov
inc
mov
push
and
adc
jp
addl
xor
mov
je
jb
cmp
or
stc
add
es
insl
negb
out
fistl
bound
gs
ljmp
jo
cmp
fstpl
call
dec
mov
dec
mov
ss
cmp
mov
imul
das
jae
cmp
jno
adcw
pop
pop
jae
xlat
imul
jecxz
pop
lods
subb
andl
test
lock
inc
xchg
cs
adc
lods
and
pop
jo
mov
jmp
jb
mov
push
sbb
psubusw
add
mov
cwtl
jbe
jmp
cli
jne
hlt
mov
mov
outsl
mov
pop
pop
xchg
jecxz
dec
pushf
int3
lds
xor
cmp
xor
clc
shll
test
aaa
pop
imul
mov
fadds
lods
push
jmp
jno
divl
lcall
inc
mov
fisttps
daa
add
jae
icebp
out
jo
xor
mov
fldl
adc
mov
clc
dec
dec
cmp
pop
xor
mov
push
cmc
fwait
insl
ss
into
adc
jg
push
pop
ja
mov
lea
mov
daa
and
call
push
fs
arpl
out
loope
mov
test
lods
or
stos
jmp
cs
xlat
aad
insl
or
stc
adc
push
or
push
call
lret
mov
push
cltd
shl
pop
ja
iret
pop
enter
mov
fdiv
inc
jb
jl
mov
mov
stos
or
sbb
in
ja
add
stos
lcall
mov
nop
into
insl
pop
in
cmp
dec
cmp
ja
daa
ja
das
xchg
xorb
mov
sbb
xchg
push
dec
push
into
nop
jmp
enter
inc
cwtl
je
push
lods
ja
sub
stos
or
ds
inc
dec
xchg
nop
int3
stos
popf
lahf
loop
fs
mov
mov
aad
sbbb
test
lock
lock
pop
add
repnz
pop
add
xchg
and
cmc
test
adc
jmp
pusha
mov
ljmp
push
adc
add
pop
jae
push
jns
es
dec
xchg
pop
jo
pop
movsl
xchg
pop
in
dec
and
les
or
pop
shl
or
cmpsl
push
inc
jmp
sbbb
sbb
notb
sar
and
xor
cmp
mov
push
lock
adc
mov
addr16
push
xor
and
in
lods
jle
inc
and
ss
int3
int
inc
adc
mov
daa
jmp
mov
xchg
xchg
insb
pop
jg
dec
out
out
rorb
rcrl
aam
and
and
insl
scas
pop
xchg
popf
icebp
das
ds
sbb
rorl
loop
jge
xchg
inc
ficoml
nop
mov
sbb
adc
lcall
adc
cmp
shll
inc
xchg
and
out
adc
inc
dec
cmc
lds
roll
cmpsb
push
adc
adc
or
xor
or
sarl
add
gs
jb
lcall
and
jnp
adc
or
jg
call
add
int
push
jge
xor
jge
mulb
jb
jne
fldenv
imul
mov
outsb
mov
lret
push
je
adc
add
cmpsl
fidivrs
inc
ret
out
push
jecxz
sub
jno
mov
fldcw
xor
int
in
repnz
dec
call
leave
addr16
leave
xor
adc
lret
imul
pop
gs
cmp
inc
rcrl
test
loope
pop
movsb
sub
out
inc
out
xor
je
ja
rorl
test
xchg
cmp
xor
fildl
lods
xchg
xor
lahf
into
inc
cld
dec
xor
loope
cmp
iret
adc
test
add
je
fstps
cmpsb
pop
scas
int3
mov
cld
mov
sub
mov
popl
dec
sub
pop
es
and
inc
xor
out
mov
mov
lods
lods
jnp
dec
inc
pop
and
dec
stos
imul
mov
movsb
xchg
jbe
mov
sti
aaa
mov
lods
movsl
stos
cld
inc
loopne
int3
dec
bnd
das
cli
xor
or
xor
insl
pop
mov
or
scas
push
or
add
jg
sub
mov
sub
lock
mov
aad
xchg
lahf
je
and
xchg
jns
icebp
les
pusha
rorb
shlb
and
inc
mov
xor
cwtl
inc
arpl
lods
sbb
es
mov
fdivl
aad
movsl
pop
jmp
jb
xor
andl
aaa
xchg
push
cs
sub
mov
adc
dec
adc
imul
nop
lods
jb
js
mov
aam
rcl
scas
pop
push
or
jl
dec
inc
cli
loop
add
hlt
sarb
inc
xchg
cli
scas
cld
fdivp
adc
cmpsl
aam
jp
xchg
mov
xchg
add
popf
cmp
xor
mov
test
inc
jg
hlt
ds
ret
std
add
push
daa
sbb
in
pop
daa
add
loopne
jb
jge
insb
or
rcr
push
jg
mov
lahf
aaa
arpl
jl
jmp
sbb
pop
scas
jo
cmp
lahf
fstpl
mov
in
lods
mov
mov
dec
std
adc
xchg
sub
xlat
les
cmp
or
mov
fcmovb
sub
rcr
in
cld
dec
sbb
imul
test
jle
sbb
xorb
lods
xor
push
loop
xor
stc
mov
or
mov
add
cmp
fadd
pop
shrb
adc
dec
or
enter
dec
roll
out
cwtl
fstpl
adc
push
pop
sbb
mov
add
sbb
lds
dec
fstps
sbb
sbb
push
std
loope
xor
sub
dec
shlb
shrl
in
sar
rol
inc
rol
mov
call
fcoml
adcb
cmp
sub
mov
cld
popa
mov
dec
xchg
cmp
cmpb
stos
add
jae
sub
pop
push
push
out
out
xchg
cmc
loopne
nop
jb
sub
mov
subb
mov
into
ret
clc
test
xor
mov
sbb
xchg
adc
popa
outsl
push
pop
mov
pop
out
out
add
jbe
pusha
push
and
xlat
mov
shrl
maskmovq
testl
adc
pop
icebp
sbb
inc
jecxz
into
mov
lea
inc
stos
lgs
cmp
push
pop
push
loopne
adc
xchg
test
dec
lea
pop
jne
sub
scas
out
push
xchg
movsl
loope
roll
pop
or
push
jbe
les
dec
scas
es
orl
movsb
xchg
cmp
sbb
xchg
adc
loope
in
outsl
es
movsb
mov
jg
jmp
lock
push
jbe
pop
outsb
outsl
scas
cltd
sub
inc
int3
inc
xchg
jecxz
push
jp
in
push
xor
adc
pop
orl
loope
jb
push
dec
pop
sub
popa
sbb
insl
pop
fidivs
out
pop
jp
lret
mov
and
out
stc
and
push
sti
out
aas
es
imul
icebp
jmp
cs
je
mov
jnp
repz
mov
cmc
cld
xchg
idivb
das
mov
xor
add
cmp
push
sbb
aad
icebp
or
jg
outsb
aad
jp
fisubrs
fimull
repz
das
adc
mov
mov
sbb
jecxz
pop
add
test
lea
outsb
xchg
and
lret
jb
mov
pop
movsl
cmp
ds
xchg
push
xchg
mov
ljmp
jp
sbb
mov
push
in
fildl
cmp
aam
xchg
stc
je
push
adc
jno
orb
sahf
fsubs
fsubs
int3
cmpsl
and
adc
ljmp
pushf
movsb
mov
outsl
mov
and
cmp
sbb
xchg
inc
scas
and
ja
popf
and
loopne
lds
pop
cmp
rcrl
lea
lret
push
in
lock
popf
enter
inc
add
data16
les
imul
mov
jae
add
cwtl
jle
pop
daa
ret
and
insb
xor
gs
fimuls
xor
daa
sahf
sbb
xor
pop
pushl
inc
dec
cld
push
sub
into
pushf
xorl
xor
xor
test
xor
push
loope
push
cmp
sbb
in
mov
ljmp
xlat
ss
cld
arpl
test
loope
sbb
test
push
mov
mov
cmp
pop
xchg
jae
sbb
sbb
sub
xchg
inc
out
nop
adc
sub
stos
and
clc
adc
les
pop
fadd
push
aas
mov
xchg
mov
mov
stos
lods
cli
jp
xchg
add
mov
mov
push
inc
adc
stos
dec
inc
enter
xchg
push
adc
and
jno
xor
fstpt
insb
xor
mov
push
xchg
push
add
aas
repnz
fsubl
push
fistps
adc
dec
outsb
push
pushf
add
inc
jp
or
mov
xchg
out
cmpsb
mov
ljmp
dec
jbe
xor
dec
jno
jle
inc
adc
xchg
cmpsl
mov
cmp
and
or
dec
xor
adcb
loop
mov
or
jg
pop
mov
mov
and
fimull
cmp
pop
xchg
test
push
ja
pop
je
adc
xor
scas
out
pop
inc
testl
loop
loop
into
fbld
lahf
out
push
mov
out
jecxz
mov
iret
mov
mov
int3
test
xor
imul
out
out
rcl
xchg
pop
ficompl
add
ror
js
adc
aas
mov
pop
ljmp
xchg
cmp
mov
aas
add
fnstcw
lret
jb
dec
mov
aam
inc
push
aas
adc
test
pop
and
and
shll
aad
mov
cmc
push
mov
inc
push
pop
ret
adc
sub
sub
scas
push
dec
cltd
pop
in
dec
ret
test
pop
xchg
or
lret
xchg
scas
xor
xchg
xorb
cwtl
mov
lds
es
cwtl
cmp
push
inc
enter
gs
or
add
push
sub
repz
in
dec
sbb
insl
xchg
enter
fldt
cli
into
pop
in
push
fwait
ds
push
or
or
inc
xchg
and
fcmovu
add
cltd
jae
mov
and
mov
push
rcrl
cli
jmp
mov
mov
inc
mov
pop
sbb
ja
loopne
call
or
lods
push
imul
or
cmp
jb
rorl
out
insb
pop
cmpsl
xchg
add
push
daa
es
dec
js
stos
cmpsl
andl
mov
sub
addb
loopne
jne
xchg
push
popf
inc
adc
aas
rorb
shll
cmpsb
les
or
je
insb
xchg
pop
xchg
call
jge
push
cmp
in
or
mov
stos
mov
int3
mov
cmp
lods
dec
out
xlat
mov
jl
sbb
jp
negb
or
sub
mov
xor
xor
xor
aam
cmp
stc
inc
int
push
dec
xor
dec
fs
flds
out
xchg
lods
out
lock
xchg
imull
push
add
cmp
adc
xchg
leave
pop
sbb
in
testl
pop
dec
push
in
dec
jb
lret
xchg
xor
roll
fnsave
insl
fstpt
ret
jmp
stc
aas
popa
dec
sub
ret
out
lcallw
arpl
out
xchg
pop
jmp
mov
loop,pn
pusha
push
mov
jle
roll
jmp
pcmpeqb
mov
aas
out
aaa
cli
repz
test
fistpl
cmp
loop
test
fwait
arpl
in
jp
bound
sti
push
in
mov
shlb
outsb
xchg
out
data16
pop
movsl
loope
add
lds
ljmp
pop
pop
mov
mov
pop
sti
repz
lcall
fsubr
cmp
jno
hlt
xchg
mov
jecxz
mov
insb
int
jle
push
inc
dec
jle
pop
xorb
dec
add
lods
fisubl
divl
mov
jle
fwait
pop
outsb
add
out
push
loop
stos
jmp
inc
push
jle
les
clc
and
xchg
and
add
fnstcw
rolb
loop
addr16
xor
sub
aas
sarb
addr16
inc
in
ljmp
cmpsl
mov
cmpsl
inc
cld
jae
int3
pushf
shl
std
or
cs
fiaddl
cmp
cmpb
xchg
fsub
sbb
rolb
js
int3
add
lods
enter
mov
icebp
mov
scas
cmpsb
push
jb
fisubrs
cli
inc
mov
pop
fstpt
cli
loop
jg
sub
xor
outsb
dec
mov
xchg
rorl
popf
out
pop
pop
pop
jge
iret
addr16
pop
mov
hlt
pop
int3
call
dec
das
sbb
jle
and
mov
pusha
out
adc
pop
xchg
cli
inc
sub
ljmp
cli
push
nop
loopne
sub
adcb
and
and
or
stos
repz
xor
mov
loope
xchg
in
es
icebp
pop
pop
iret
inc
cmc
mov
push
xchg
jnp
xor
inc
scas
shrb
push
dec
cmp
push
scas
sti
inc
jns
pop
into
jmp
lahf
mov
daa
dec
pop
stos
pop
adc
sahf
stos
or
or
shlb
jo
or
dec
inc
sahf
fwait
popa
fcoml
mov
lods
dec
push
imul
jbe
out
add
cltd
test
push
or
sar
stc
fs
push
enter
insb
insb
ds
cmp
push
pop
das
jle
xchg
adc
lret
fstps
cltd
push
into
add
sub
lret
daa
jmp
sub
jle
aas
push
mov
cmp
jns
push
fstpl
add
pop
fisttpl
jl
sub
and
xor
xchg
xor
push
mov
rep
aam
sub
push
pop
push
push
outsb
mov
or
or
mov
inc
test
je
sub
mov
iret
incb
popa
das
inc
and
lock
gs
stos
in
pop
mov
mov
mov
push
mov
je
mov
add
faddp
ljmp
xlat
int3
ljmp
ss
xchg
test
call
xchg
test
mov
or
xlat
cltd
repz
add
aaa
out
mov
loopne
aad
sbb
dec
mov
mov
sahf
je
xor
out
push
int3
mov
movsb
cmpsb
iret
push
pusha
test
shll
shr
jnp
or
in
mov
xor
in
fists
lods
mov
or
push
mov
sub
sub
fstpl
inc
mov
lock
mov
jo
and
fisubl
xchg
mov
pop
stos
lods
loope
scas
pop
popl
fistpl
ds
in
add
dec
in
pop
mov
repnz
jl
aas
lods
push
outsl
lret
xor
xchg
leave
movsb
fiaddl
push
pop
add
fucom
scas
lret
mov
fsubs
cwtl
dec
jb
and
imul
inc
push
or
fs
fistps
mov
inc
add
imul
movsb
jecxz
jnp
mov
jmp
iret
mov
loop
clc
into
add
mov
in
add
iret
mov
cmp
hlt
addr16
fs
adc
cmp
sub
lret
xchg
imul
pop
cmpsl
pop
es
push
je
pusha
dec
test
in
mov
mov
gs
inc
and
xor
mov
add
xchg
jno
adc
rclb
sub
jp
mov
adc
lds
pop
movsb
icebp
mov
cld
stos
scas
sbb
movsb
mov
cmp
into
sahf
mov
lea
xor
mov
xlat
mov
xlat
xor
xchg
imul
stos
cmp
adc
aam
xorl
push
xorb
mov
inc
cmp
dec
push
push
push
imul
icebp
iret
push
inc
push
or
jo
outsb
push
pop
and
adc
dec
pop
inc
aas
xchg
mulb
int
insb
into
pop
adc
in
fwait
lea
sbb
clc
lret
mov
dec
push
out
loope
mov
xchg
imul
into
or
pop
mov
mov
adc
sub
xor
cmp
jg
xlat
dec
mov
leave
call
sub
push
mov
das
addl
aaa
hlt
ja
jo
or
jmp
dec
int
shll
mov
sbb
jae
jo
jb
adc
mov
push
sbb
lds
imul
push
imul
adc
pop
dec
setnp
lea
sub
icebp
fidivrl
lret
sub
ljmp
or
js
sub
cltd
sahf
sti
mov
xor
push
lock
sub
push
mov
pop
push
sub
dec
mov
in
scas
leave
sbb
mov
les
shll
ret
jbe
inc
cmp
mov
pop
inc
gs
imul
lcall
mov
mov
mov
in
adc
adcb
push
ljmp
aad
data16
xchg
add
and
movsb
stc
push
icebp
aam
aaa
imull
stos
jbe
inc
and
jg
sub
mov
icebp
daa
xor
push
sub
rorb
fs
addr16
fimuls
ficoml
outsb
mov
subb
inc
xchg
or
dec
sub
mov
cmpsl
push
aad
mov
outsb
cmp
cmp
je
fildl
mov
daa
int
mov
inc
cmp
lahf
lods
mov
push
jae
xor
dec
mov
xchg
iret
sub
mov
xchg
pop
repnz
xorb
dec
stos
outsb
jno
pop
mov
xchg
into
jecxz
or
rclb
pop
jnp
sub
push
or
je
fidivl
mov
jne
icebp
jecxz
mov
add
es
mov
shll
repnz
aaa
pop
mov
pop
vpcmpgtb
add
inc
jecxz
push
ficompl
fsubl
shlb
pushf
sarl
lcall
fisttps
add
xor
movsb
or
imul
pop
or
mov
out
loop
fdivl
dec
cwtl
jmp
sti
xchg
jl
ret
push
scas
mov
mov
xchg
fbld
push
pop
inc
das
rolb
or
insb
mov
in
push
lods
jb
mov
loopne
ret
cld
fstpt
lods
push
sub
mov
dec
lret
dec
lret
push
sub
pop
xor
sbb
insl
and
testl
jmp
mov
imul
ljmp
mov
cmp
cmpsb
lock
popf
mov
push
adc
aaa
or
xor
in
mov
ds
add
pop
inc
ja
sbb
mov
cmpsb
fidivl
je
ficoml
pop
mov
inc
inc
roll
lods
aas
pusha
movsb
or
cmp
sub
insl
das
xchg
jl
aaa
pop
enter
sbb
enter
jnp
test
addr16
jmp
inc
xchg
jmp
cltd
mov
pusha
sub
and
fcoms
add
insl
stos
fwait
lahf
cltd
sbb
push
and
mov
sub
sub
int3
push
shlb
or
push
insl
xchg
ret
movsb
imul
xorb
and
sbb
imul
nop
into
jns
pop
pop
ljmp
add
or
mov
add
gs
mov
add
lods
jge
jnp
push
cmp
add
mov
outsl
sbb
adc
pop
inc
sub
adc
jecxz
pop
sub
ds
sahf
mov
daa
shll
pop
add
pop
ret
or
call
xor
ljmp
inc
mov
xor
cmp
sti
inc
sub
push
adc
movsl
cmp
ficoml
bound
roll
sub
dec
jle
push
and
sbb
pop
int
rclb
cmpsb
in
test
das
into
addr16
icebp
inc
lods
cmp
punpcklwd
rorl
dec
pop
rcll
mov
sub
adc
xor
dec
lods
push
stc
adc
pop
ret
psllq
sub
outsb
enter
jns
hlt
cld
mov
push
mov
scas
int
add
inc
mov
pushf
test
int
inc
dec
cld
enter
jmp
loope
cmp
hlt
je
jle
mov
pop
les
push
lahf
lahf
mov
xchg
adc
xchg
pop
je
call
pusha
push
sbb
mov
stos
es
or
mov
andl
stos
adc
fsincos
fdivr
sub
inc
and
xchg
aaa
xor
inc
push
addr16
xor
inc
stos
ss
mov
ds
xlat
cmpsl
std
popf
push
outsb
mov
cltd
sbbl
xor
scas
adc
inc
cmp
sub
jb
lret
pop
sti
inc
loopne
xchg
push
shl
jne
push
cmp
cmc
push
imul
mov
push
mov
fucompp
pusha
cltd
dec
lret
xchg
dec
xchg
mov
fidivs
mov
hlt
pop
test
imulb
pop
repnz
in
cmpl
push
or
imul
or
pop
cli
fs
popa
insl
dec
pop
iret
ss
in
push
lods
add
mov
jecxz
sub
rcrb
add
scas
cwtl
aas
pop
pop
cld
aad
fstpl
clc
inc
in
mov
push
cwtl
std
test
mov
lods
popa
andb
mov
push
jmp
js
push
out
sbb
fsubp
mov
or
sarb
mov
dec
push
loopne
nop
push
jns
push
dec
inc
jns
xor
and
repnz
fildll
inc
and
dec
fildl
push
push
lods
ss
xor
lahf
add
cmp
aaa
or
andb
inc
loope
inc
sub
addb
scas
into
ss
aad
ss
push
test
or
xchg
addps
jb
xor
ficompl
lahf
push
in
ret
sub
stc
data16
mov
test
inc
mov
aad
and
dec
test
cmpsb
jb
mov
pop
daa
xchg
xchg
inc
jne
fadd
xor
cld
sub
jmp
movsl
add
scas
aas
or
test
cmp
or
xchg
mov
fsubs
or
ds
or
out
sahf
movsl
fldcw
cld
mov
push
mov
sub
roll
test
es
adc
ljmp
ret
jne
or
loope
fdivrp
iret
int3
mov
xor
xchg
fistpll
scas
push
lret
pop
hlt
imul
sub
cltd
jnp
pop
inc
push
out
jb
rorl
in
push
xchg
mov
lahf
cmp
repz
sub
mov
mov
test
mov
xchg
iret
movsl
mov
or
lret
and
jl
mov
testb
int3
push
insb
inc
add
into
jmp
lods
dec
sahf
mov
sbb
cmp
and
rolb
jge
dec
sub
xor
leave
sub
shlb
jg
push
mov
iret
push
js
andl
scas
push
or
popa
lods
pop
iret
mov
push
hlt
fwait
pusha
mov
cli
jbe
popf
xor
xchg
jb
je
pop
lods
jge
notl
jp
loopne
mov
adc
adc
xchg
lret
jne
icebp
aas
stos
cmp
out
leave
jns
or
adc
mov
aad
push
xchg
imul
jb
push
dec
aaa
mov
inc
sbb
mov
mov
and
xchg
stc
push
mov
in
inc
dec
push
rolb
xchg
push
dec
mov
or
pop
ljmp
push
out
fwait
cmovp
aaa
inc
push
cltd
gs
sbb
dec
stc
lods
dec
cmp
cwtl
std
mov
sbb
mov
stc
pushf
rorl
mov
push
js
mov
data16
mov
es
push
jno
inc
es
and
stos
js
loope
push
pop
mov
out
mov
dec
xchg
dec
add
test
mov
mov
rcrb
out
xor
dec
dec
mov
call
lods
idivl
inc
mov
stc
int
push
mov
in
mov
xchg
cmc
addr16
lods
insb
mov
push
mov
sub
inc
mov
pop
inc
call
jo
xlat
fnstsw
lahf
and
xor
xor
or
insl
sub
imul
jbe
jmp
jge
mov
mov
xchg
std
pusha
sti
and
faddl
sub
jp
icebp
pushf
xor
fstpl
adc
ret
sbb
cld
dec
pop
inc
add
icebp
aam
xchg
loopne
jno
outsb
movb
mov
in
loopne
xchg
repnz
xchg
inc
push
fdiv
sbb
push
mov
push
or
fadds
xchg
jb
scas
loope
paddw
movsl
int
repnz
popa
fisubrl
and
pop
test
sub
and
fiadds
xor
cmp
or
mov
mov
repz
dec
sbb
push
adc
daa
stos
jns
in
cltd
insb
add
mov
jno
fbld
imul
pop
mov
sub
mov
lahf
adcb
fistpl
ss
movsb
mov
xor
pop
cltd
out
repnz
aam
rclb
addr16
xor
xor
lahf
dec
push
stc
clc
and
push
or
jb
leave
jmp
pop
dec
lock
shrl
xchg
scas
inc
sahf
dec
xchg
mov
dec
xor
arpl
enter
cmp
imul
xchg
push
stos
test
pop
sub
cwtl
push
and
sub
inc
pop
adc
subb
push
fdivr
add
sbb
es
dec
cmpsl
icebp
jmp
and
dec
enter
sti
sti
add
pop
add
mov
sbb
ret
jo
inc
out
adc
cmp
sbb
out
pusha
std
pusha
pop
jae
push
mov
adc
sbbb
int
jnp
or
pop
mov
mov
in
insl
jl
dec
aaa
adc
and
lods
mov
jecxz
or
add
lds
xorl
lcall
out
nop
test
adc
pop
sbb
mov
arpl
push
inc
add
pusha
push
inc
xor
pop
and
ret
and
xchg
mov
jbe
out
mov
lods
popa
inc
adc
lock
mov
popa
add
push
mov
lods
xor
cwtl
stc
sub
out
cmp
or
xchg
out
mov
xchg
mov
jo
adc
xor
cltd
jns
lcall
jmp
push
ret
sub
xchg
xchg
mov
mov
daa
pop
int3
testl
dec
jle
adc
or
pop
mov
fisubrl
cltd
xchg
or
stos
dec
and
cltd
negb
das
mov
xor
cmpsb
sub
pop
inc
pop
movsl
inc
mov
jp
sub
add
int3
mov
add
lret
sub
aas
xchg
mov
idivb
shrl
jnp
push
or
lods
call
push
inc
lods
jo
xchg
sti
out
dec
ds
xor
xchg
cs
je
icebp
out
testl
scas
mov
scas
jb
pop
mov
fcomip
cmc
mov
scas
cli
dec
arpl
sarl
mov
mov
iret
xchg
andb
lea
inc
inc
fnstenv
sub
out
fcoms
mov
daa
add
hlt
stos
adc
stc
xchg
xor
lret
pop
lcall
mov
hlt
xchg
addb
ds
push
pop
jo
or
fidivrs
adc
aas
ret
cmp
dec
xchg
sbb
insl
int3
inc
lret
push
inc
arpl
xchg
or
and
pop
sub
in
mov
pop
inc
adc
xor
int3
es
outsb
push
aad
mov
fwait
mov
jmp
mov
mov
repnz
xchg
stos
jae
jg
dec
daa
cs
mov
push
push
jp
fwait
shll
loope
lcall
pop
repz
mov
imul
out
push
shr
fldenv
fdivrl
call
sbb
and
out
cwtl
ds
jo
jmp
sbb
pop
jbe
icebp
adc
push
lods
sbb
xor
mov
mov
cmp
pop
ja
pop
push
adc
dec
ljmp
and
xlat
xchg
iret
les
mov
jb
or
fdivrl
loope
and
jo
enter
pop
dec
lcall
xor
shll
sbb
push
jae
repnz
test
jp
mov
jbe
adc
sbb
lahf
xor
popf
daa
inc
adcb
cmpsl
adc
add
das
cmp
xchg
movsb
xchg
lahf
sub
popa
cmpsb
das
dec
or
cli
jbe
repnz
lods
loop
push
addr16
loope,pt
push
sti
in
pop
leave
shlb
into
jne
jmp
mov
xchg
mov
push
mov
test
hlt
rcr
jp
add
hlt
mov
inc
pop
test
inc
pop
or
jb
xor
add
inc
sub
daa
cmc
ret
xor
push
sub
enter
jo
mov
pop
jp
outsb
pusha
dec
inc
push
cmp
faddp
or
pop
ret
out
sub
outsb
cmp
mov
lds
fldt
sbb
xlat
aas
pop
xchg
jb
jmp
lea
sbb
fdivs
cmp
mov
pop
fldl
and
cmp
adc
clc
jno
addl
dec
mov
jno
push
call
addb
repnz
adc
in
sbb
ja
lds
jb
xor
lcall
inc
fisubrs
mov
mov
push
ja
xchg
shll
mov
mov
gs
sbb
es
ds
lcall
aas
and
xchg
bound
lods
inc
xor
inc
popa
sbb
xor
sbb
xor
cmpsb
jo
test
out
test
rorl
clc
push
cmp
sbb
jl
lcall
xchg
mov
pop
mov
sti
xor
xlat
jno
lock
mov
mov
xchg
and
loopne
mov
jb
xchg
loope
pop
testb
and
mov
in
scas
les
mov
adc
jge
mov
inc
cmp
mov
rorb
mov
into
lret
push
popa
les
cmpsb
xor
mov
cwtl
mov
insb
addr16
testb
loope,pn
and
lcall
and
adc
test
xchg
inc
xchg
dec
push
jecxz
loopne
scas
std
xor
out
shrb
mov
pop
push
mov
and
inc
out
or
mov
jb
cmpsb
fwait
rcpps
dec
movsl
mov
rcll
or
movsb
lock
jae
lcall
cltd
push
test
ret
mov
add
in
inc
cmp
cmpsb
xor
shrb
cmpsb
jge
movsl
jmp
mov
adc
xchg
loop
jl
enter
cs
stc
sub
jl
and
test
sbb
jne
cltd
ds
or
int
leave
pop
add
jno
lods
sbb
loop
fpatan
mov
pop
imul
mov
js
fcoml
jle
outsl
pop
filds
sub
or
pop
mov
icebp
jb
jno
dec
pop
stos
add
ja
stos
add
loope
cmpsl
and
lahf
ret
sbb
imul
stc
mov
adc
pop
cmp
int3
jp
lret
out
imul
push
sahf
stos
pop
jno
mov
cmp
pop
popa
and
mov
mov
addr16
rcl
mov
sbb
mov
xor
sub
xchg
stc
fnstsw
ljmp
and
orb
lods
gs
mov
dec
push
out
dec
pop
push
les
adc
in
insb
jo
imul
imul
dec
xchg
ljmp
fldl
outsl
pop
shl
and
mov
test
inc
push
cmpsl
int3
pop
scas
xor
iret
out
and
xlat
insl
insl
dec
and
rdtsc
les
ret
inc
pop
dec
mov
out
in
xlat
xor
push
xor
mov
mov
cmpsl
das
push
adc
das
mov
pop
out
stos
test
pop
cmpl
movsw
out
mov
dec
shll
push
cmc
cmp
mov
mov
and
sbb
sbb
mov
into
jmp
mov
pushf
add
cmp
push
sbb
in
repz
jmp
xchg
push
sub
pop
fprem1
and
sahf
jmp
jl
rorl
jg
repz
test
xchg
bound
xorl
xor
pushf
pop
and
mov
leave
sbb
pop
lret
mov
leave
das
jo
sub
xor
mov
inc
insl
jge
mov
xchg
enter
xor
sub
in
clc
popf
pop
into
movsl
lods
das
aam
ds
insl
jg
adc
mov
xchg
pusha
in
lret
orl
insb
inc
imul
je
pop
repz
data16
les
ror
adcb
inc
mov
std
adc
jle
in
push
sbb
jae
mov
fimull
out
jg
out
add
pushl
lcall
je
fidivrl
div
stos
inc
loopne
iret
and
mov
repz
mov
pushl
xchg
cmp
push
mov
inc
testl
and
xor
xchg
pop
adc
mov
mov
jnp
cmp
or
mov
xchg
adc
aad
cmp
cmp
xchg
or
cmpsb
fistps
mov
and
and
fwait
lahf
push
cmp
or
or
cmp
cmp
xor
mov
cmp
mov
sahf
lock
fcomp
hlt
push
jecxz
fwait
adc
bound
jae
jns
sub
popf
mov
fisttpll
jg
aam
frstpm(287
adc
inc
inc
adc
lds
addr16
or
jb
push
xchg
popf
test
outsl
push
mov
xchg
mov
inc
xchg
and
mov
jecxz
adc
test
pop
cmp
cmp
ret
sbb
repz
faddl
pop
movsb
inc
mov
cltd
adc
push
imul
jp
and
fldl
mov
xchg
dec
rcr
jnp
cmp
jl
inc
jbe
xchg
xor
sbb
js
push
cli
jl
mov
hlt
cmp
aaa
mov
testb
or
cmp
xor
sbbl
add
cmp
and
xchg
call
xor
fstl
inc
cmpsl
ss
sysenter
scas
push
fnsave
ret
data16
lock
stc
aam
jne
pop
out
jp
sbb
mov
fwait
or
xor
jnp
adc
in
push
sbbl
test
and
cmp
stos
adc
cmp
insl
scas
or
fisttpll
lret
add
frstor
or
pop
mov
loope
int
add
ja
mov
pop
mov
add
mov
push
out
int
cmp
add
aam
add
sti
fdivrl
dec
js
jl
js
mov
jae
lahf
lods
sub
inc
bnd
out
jecxz
add
rorl
roll
lock
pop
lea
dec
insb
xor
mov
sub
adc
shll
dec
jle
repnz
inc
cwtl
mov
std
push
sub
add
pop
sarb
jae
jle
test
lock
mov
mov
inc
mov
mov
sub
rclb
ljmp
scas
and
fadd
push
jg
sbb
adc
popf
mov
dec
cmp
pop
inc
jns
ljmp
fwait
push
fiaddl
inc
mov
repnz
shl
iret
push
xchg
mov
pop
push
lods
or
ds
lret
int3
cmpsb
push
and
stos
jg
test
je
sub
shr
pop
add
jae
push
adc
and
aaa
jo
ret
shll
jb
cltd
push
es
or
mov
mov
and
xchg
adc
data16
hlt
add
cmp
xor
daa
cmp
pop
pop
aas
fistpll
jne
mov
lock
repz
shll
in
mov
repz
mov
fcmove
dec
add
jecxz
mov
test
rorb
mov
popa
mov
stos
shl
int
rcrl
cmp
repnz
aaa
jg
xor
ret
push
leave
fstpl
or
fisubl
bound
hlt
jge
cltd
sbb
cmp
test
xchg
mov
popf
mov
mov
adc
mov
mov
jnp
cmp
jns
test
mov
mov
mov
int
cmp
jg
or
std
test
adc
and
cmp
xchg
aaa
inc
loope
sbb
dec
jle
jno
cmp
lea
or
xchg
inc
fsubr
mov
and
adc
int
ret
jge
data16
lods
sub
maxps
cltd
jl
pminub
pop
adc
pusha
lret
rcl
and
rorb
xchg
dec
das
scas
je
mov
cltd
stos
scas
test
push
adc
int
leave
rcl
push
ss
cmp
or
mov
inc
test
in
jnp
mov
lret
enter
das
push
out
mov
sub
nop
sub
sub
in
dec
setl
insb
jecxz
push
jl
push
adc
inc
jmp
lret
push
fsub
insl
and
fldl
repz
mov
in
mov
mov
scas
movsl
sub
addr16
int3
jl
aaa
sbb
jns
pop
jbe
aam
pop
or
pop
ja
dec
lods
jmp
into
aad
xchg
sub
xor
jl
shlb
mov
cltd
pop
add
shrb
arpl
sub
dec
mov
sahf
inc
lea
test
cmpsl
leave
mov
jle
aas
xor
jp
mov
rclb
jbe
sbb
xlat
mov
xchg
dec
int3
shlb
pop
mov
rcrl
imul
xor
cmp
inc
xchg
fnstcw
call
leave
aas
pop
sbb
mov
mov
mov
lods
mov
jnp
xchg
lret
inc
sahf
mov
adc
lcall
and
dec
in
jle
sub
ficoml
mov
pop
inc
xor
rcll
and
mov
mov
pushf
xlat
pop
jge
outsl
cmp
shll
or
push
mov
jns
xlat
xchg
xchg
clc
test
cmpsb
cmp
aad
aas
inc
pop
mov
mov
sub
jo
fists
dec
out
mov
sub
pop
mov
pop
adc
bound
add
sbb
inc
testb
and
ljmp
and
or
adc
sbb
mov
mov
xlat
out
ja
ret
pop
aaa
jge
lret
mov
push
inc
in
dec
push
mov
stc
inc
fs
pushf
adc
adc
inc
cltd
sbb
jecxz
pop
int3
in
lret
jae
lcall
sbb
shll
shlb
mov
sbb
popf
imul
lahf
or
adc
jle
dec
out
jae
fs
cmp
mov
int
pop
push
inc
add
loop
adc
xchg
xor
pop
xor
int3
pop
mov
mov
push
pop
call
ja
push
sub
xor
sub
leave
pop
mov
in
xlat
mov
outsl
push
sub
inc
rolb
pop
xchg
jle
test
int
daa
arpl
xchg
inc
add
fcompl
cmp
ror
mov
push
jb
push
lcall
test
cwtl
xchg
inc
lock
adc
add
cmc
loopne
cmp
jbe
les
arpl
and
mov
xchg
mov
mov
mov
jo
inc
lds
jmp
out
inc
outsl
sti
sbb
xchg
out
pop
inc
test
jno
sub
repnz
sbb
les
xchg
add
xchg
or
sbb
lcall
adc
push
mov
je
fstpt
ret
inc
sbb
dec
stc
dec
mov
push
mov
out
add
jnp
fidivrl
insl
cmp
scas
xchg
mov
bound
xor
mull
jo
lea
iret
cs
mov
xor
or
adc
fdiv
add
aas
call
mov
fisubrl
push
adc
mov
clc
in
stos
push
and
xor
xor
and
jbe
aad
pushf
xchg
push
enter
loopne
in
cmovs
dec
insl
jecxz
loope
mov
stc
andb
mov
scas
inc
hlt
stc
popf
faddl
loopne
out
enter
loopne
jb
mov
jle
insl
xor
hlt
push
mov
iret
jg
leave
adc
lret
adc
dec
jle
mov
aad
popf
pop
imul
sbb
add
add
push
aas
mov
mov
iret
shl
pushf
js
xlat
fisubs
lds
pusha
es
mov
jno
sub
fnstsw
or
mov
sti
ret
jbe
addr16
stos
mov
clc
or
sbb
inc
loope
movsl
aam
dec
pusha
push
decl
and
movsb
int
movsl
pop
shrb
pop
push
jae
out
inc
lahf
ss
pop
test
adc
scas
ja
int
mov
cmpl
ss
insl
pop
ss
adc
jmp
hlt
inc
add
fs
les
mov
jnp
mov
and
out
xlat
jg
push
dec
xchg
jns
out
imul
or
dec
scas
mov
rolb
adc
push
mov
ja
movsl
rcrb
push
pusha
icebp
stc
inc
and
rcr
insl
in
imulb
shl
xor
pop
pusha
std
aad
das
lds
aaa
mov
shll
cmp
or
xchg
popf
imul
and
dec
mov
mov
cmpsb
cmp
xor
sub
movd
loop
and
mov
jne
cld
shlb
fs
in
scas
cld
loopne
scas
adc
push
popf
call
mov
jecxz
js
pop
ror
clc
jnp
popf
out
jg
scas
dec
pop
xchg
sbb
aaa
jmp
push
test
push
adc
std
sbb
stos
inc
mov
sub
jl
negl
popa
mov
and
in
dec
push
repnz
dec
xor
daa
andb
adc
xor
mov
sub
xchg
cmp
or
lret
out
xchg
or
scas
fs
inc
xlat
insl
dec
outsl
mov
into
dec
iret
mov
idivb
es
cmp
sbb
push
test
jb
jecxz
repz
ret
int3
jge
in
sbb
xor
addr16
cmp
test
scas
imul
sub
scas
push
sar
ja
mov
sti
clc
testb
aad
int3
bound
xchg
jns
adc
bound
fdivrs
xor
rcrl
mov
push
jecxz
sbb
or
divb
les
adcb
inc
or
inc
mov
addr16
dec
cmpb
push
mov
insb
sarl
mov
mov
sub
sbb
ja,pn
gs
add
mov
mov
jno
cmc
pop
xor
out
sbb
and
fsub
inc
mov
enter
outsl
sahf
push
mov
push
inc
mov
cmc
sub
lock
dec
mov
imul
and
out
arpl
hlt
cmpsl
xchg
push
jb
call
push
inc
dec
mov
push
or
test
cmp
into
test
aas
or
rcrb
int
jle
cmp
cmp
sub
inc
cld
inc
lret
jg
test
dec
loope
or
and
push
lret
sub
jnp
movsl
adc
dec
mov
push
add
mov
cwtl
int3
pop
ljmp
mov
shll
adc
and
iret
jp
sub
adc
xchg
jmp
leave
sbb
dec
pop
xchg
jmp
ds
add
dec
testb
jp
push
dec
cs
nop
jmp
mov
pop
jne
mov
push
sub
fs
add
hlt
push
sbb
lahf
popa
aas
iret
mov
mov
arpl
sbb
mov
out
je
sbb
mov
pop
in
popf
subl
push
aam
or
mov
jge
cltd
insb
mov
movsb
mov
push
mov
dec
fwait
push
or
dec
fndisi(8087
cmp
sbb
pop
push
scas
inc
mov
scas
divps
sub
mov
and
jg
jnp
mov
std
xor
xor
pusha
xchg
mov
rorb
pop
xchg
andl
iret
cmp
lret
cmp
idiv
mov
test
jg
test
jne
ja
int
xor
pop
sub
pop
out
add
loop
int3
or
rcrl
mov
mov
addr16
subl
mov
ljmp
loop
outsb
inc
stos
into
sub
testb
punpckhwd
cld
cmpsb
inc
iret
push
ljmp
rclb
push
sbb
repz
jae
outsl
fadds
into
hlt
add
mov
gs
icebp
lea
push
add
jb
jo
shll
gs
mov
call
add
ss
sub
test
repnz
xor
imulb
sbb
push
rolb
int
xor
ret
and
jb
rcrb
bound
sarb
loop
popa
pop
loopne
dec
dec
add
cmpsl
fsubrp
fidivrs
pop
pop
mov
cli
sub
pop
leave
in
add
pusha
mov
out
dec
jno
xor
arpl
dec
or
cmp
enter
jae
jno
sahf
in
lods
into
ficomps
xchg
hlt
into
and
sbb
mov
outsb
sarb
mov
mov
decb
cltd
pushf
push
in
jp
sbbl
jo
hlt
xor
cmp
ror
outsl
mov
dec
xor
out
mov
dec
pop
ret
or
mov
add
xchg
push
sbb
mov
xchg
adc
mov
sbb
xor
orb
pop
imul
push
mov
aam
into
xchg
stc
leave
dec
mov
jo
jmp
or
mov
sbb
xor
cmp
in
ficomps
and
cli
loop
mov
testl
in
dec
push
call
sbb
repz
cmpsl
pop
out
stos
dec
mov
imul
divb
rcrl
int
xchg
int
sahf
fwait
add
and
ljmp
insb
xorl
outsb
cmp
test
and
pop
fisttpll
movsl
es
hlt
dec
jno
adcl
sbb
mov
jp
int
movsl
adc
js
lods
sbb
outsl
cmp
or
in
cmpsb
mov
jecxz
cmp
mov
adc
ret
sbb
negl
adc
pop
mov
pop
and
push
clc
mov
dec
jg
sbb
pop
stos
stos
xor
sti
sub
cmp
addr16
or
cmp
loope
cmp
cli
imul
inc
test
lcall
lds
pop
add
sbb
outsb
mov
imul
ljmp
sub
ret
cmp
je
or
je
pop
sub
arpl
jns
out
imulb
mov
js
rcll
cmpsl
jmp
jp
cmpsl
mov
imul
push
ss
test
adc
mov
hlt
xor
mov
lret
push
outsl
push
mov
add
mov
pop
cld
sbb
or
gs
or
cwtl
mov
mov
mov
dec
add
xor
loopne
sbb
mov
sub
inc
inc
sub
repnz
imul
clc
bound
pusha
mov
movsb
jne
dec
dec
pop
push
xchg
inc
cmp
push
sub
outsb
fiadds
ret
jp
aas
in
push
pop
mov
mov
lock
fwait
cmp
lahf
fcmovb
arpl
inc
pushf
adcl
shlb
lcall
scas
leave
xchg
je
fistpll
fmul
and
fstl
loopne
fisttps
lods
lods
inc
or
jl
mov
shrb
aas
lock
lods
sub
nop
mov
mov
pop
xor
sbb
in
adc
inc
ljmp
or
in
and
cwtl
leave
fildl
cmp
loopne
dec
mov
call
sub
test
lcall
rol
jmp
test
or
pusha
xor
or
xor
mov
mov
mov
and
flds
dec
in
adc
roll
xchg
movsl
fsubl
daa
push
jmp
add
cmp
xor
xlat
clc
xchg
mov
fucom
jb
cmp
adc
nop
aad
mov
jge,pn
push
push
mov
andb
mov
je
sub
cmp
pop
push
jle
jmp
cs
insb
in
xor
cmpb
pop
test
or
mov
xor
push
lock
fstpt
flds
in
xor
jecxz
out
andb
icebp
nop
movl
fsubrl
xor
add
test
mov
cmpsl
sbb
aad
and
mov
adc
jmp
mov
adc
sbb
movsl
jle
in
add
rclb
es
lods
adc
outsb
push
daa
ds
inc
nop
jle
add
int
imul
pop
sti
data16
add
imul
jno
inc
negl
cli
jg
and
pop
movsl
add
cmp
inc
testl
inc
jecxz
inc
lcall
or
adc
xchg
mov
dec
cmp
mov
or
scas
adc
adc
jns
fsubl
mov
sub
lret
mov
mov
jge
mov
and
test
jne
divb
or
lds
inc
lcall
stc
idiv
cmpsl
cmp
dec
cmc
sub
cmc
mov
cmp
iret
sarb
lret
xchg
or
xchg
mov
dec
test
out
or
inc
movsb
repz
cmp
mov
imul
and
lcall
ljmp
cmp
pop
ret
lock
adc
popf
sub
mov
fmuls
aaa
xor
cli
pop
pop
cmpsl
out
push
jle
or
dec
and
andb
ss
dec
xchg
lds
add
mov
ret
loop
push
jb
sbb
pop
loopne
addr16
loopne
add
cwtl
imul
sub
in
jbe
ss
hlt
out
mulb
adc
aas
loop
push
and
fdiv
sub
pop
xor
sub
mov
mov
mov
sub
pushl
gs
or
xchg
fistpl
aam
es
cmp
adc
add
fs
repz
stos
mov
popa
mov
stos
push
daa
push
jo
outsl
xchg
pop
mov
inc
hlt
bound
cmpsb
arpl
add
leave
roll
inc
out
xchg
mov
jmp
and
cmpsl
push
sarb
lea
cmpsl
mov
pop
jne
aaa
push
sub
inc
mov
aad
jbe
fnsave
outsb
cmpsl
or
push
fdivl
scas
jnp
mov
lret
mov
ficoml
mov
outsl
lahf
xchg
sub
js
and
cmp
dec
shll
add
pop
fisttps
imul
pop
mov
pop
dec
popa
pop
insl
add
mov
fs
stos
dec
and
in
sbb
iret
ds
add
fcoms
into
test
sarb
mov
or
neg
fimull
fbstp
cmp
in
out
adcl
bound
jo
mov
pop
jecxz
sub
negb
je
jp
ds
popl
es
rcrb
or
jmp
fsubrs
mov
insl
push
test
cmp
cmp
stos
scas
call
jne
mov
ds
int3
adc
dec
adc
sbb
inc
add
mov
adc
into
ds
in
add
adc
mov
test
xchg
cmp
cmovl
mov
insl
fcmovnb
jo
or
add
dec
inc
insb
jne
test
xchg
jae
mov
ss
movsl
jmp
or
loope
out
mov
inc
jl
pop
and
out
in
repnz
daa
xor
bnd
add
or
js
cld
fsubrl
fnsave
pcmpeqw
sahf
sbb
ret
out
xadd
in
inc
fldl
inc
sub
dec
sbb
pushf
cwtl
push
push
lods
in
add
mov
insl
jne
iret
and
sahf
rolb
inc
cli
push
xor
add
mov
sahf
adc
sbb
dec
pushf
dec
cwtl
mov
dec
mov
mov
stos
outsb
mov
add
push
lods
push
test
push
adc
imul
subl
ja
jmp
sub
fnstsw
sbbl
add
in
data16
rcrl
cmc
roll
test
cmp
lret
shrl
loopne
mov
aad
jns
mov
sbb
clc
push
xor
popf
pop
sub
rcrl
mov
and
mov
hlt
jecxz
fbstp
aaa
jo
out
inc
xchg
js
std
add
pop
mov
scas
ss
push
clc
dec
sbb
xchg
data16
rolb
xlat
mov
xor
xchg
cmpsb
push
clc
popa
jecxz
notb
in
dec
adc
xchg
add
push
cmp
xchg
dec
mov
test
cmp
andl
and
jge
mov
leave
sarl
inc
sub
leave
shrb
js
cmpsl
pop
mov
xchg
stos
aam
dec
dec
cmp
into
xchg
cmp
dec
mov
push
ss
sbb
cmp
inc
mov
fst
cmp
inc
divl
sbb
mov
and
imul
jecxz
mov
and
inc
push
inc
stos
int3
pop
jno
or
rcrl
inc
lret
pop
ret
pushf
jbe
lds
test
push
mov
xchg
call
shll
das
out
outsb
std
xchg
mov
cli
adcl
subb
xchg
das
xchg
inc
iret
int3
popf
xor
stos
adc
aam
stos
dec
sub
cmp
push
mov
xorl
push
test
test
movsl
dec
xchg
shlb
xor
sahf
in
sub
cltd
stos
mov
scas
pop
inc
movsl
fsts
fisttps
and
adcl
sar
xchg
popa
add
xchg
jo
xchg
iret
xorb
mov
mov
jmp
rcr
insb
loopne
out
divb
push
sbb
fiaddl
push
imul
daa
leave
xor
xor
and
jns
mov
cs
adc
xor
cmp
or
dec
scas
mov
clc
out
mov
insl
cmp
fsubr
pop
jecxz
enter
xchg
xor
add
dec
dec
sar
stos
jp
inc
mov
push
fninit
or
mov
hlt
jbe
int3
inc
xlat
imul
push
out
push
mov
cmp
fiaddl
jl
add
leave
sub
ret
imul
repz
bound
pop
outsb
scas
push
outsl
and
dec
sarb
jne
mov
push
xor
icebp
mov
jmp
mov
insl
outsl
or
cmpsl
cs
es
dec
icebp
jnp
push
inc
pushf
mov
jns
mov
outsb
aad
shlb
dec
mov
cmp
nop
mov
pop
stc
push
insl
sbb
fists
je
sbb
jmp
adc
clc
push
paddusb
jge
push
jmp
std
pop
and
decl
inc
push
insb
repnz
jp
mov
dec
shl
fildll
push
lret
imul
ljmp
into
mov
cld
fst
enter
movl
loope
std
mov
inc
ljmp
sub
mov
ljmp
addl
pop
xchg
daa
dec
xor
jecxz
mov
inc
push
rorb
and
repz
scas
arpl
shll
pushf
pop
jle
adc
mov
mov
iret
gs
inc
jge
mov
or
sbb
fstps
out
mov
int3
ja
push
jns
into
lret
push
xchg
std
into
jge
xor
adc
pop
in
xchg
mov
ljmp
inc
ficomps
inc
inc
xor
in
cmp
mov
add
lahf
pop
sub
adc
add
gs
insl
das
inc
pop
rolb
and
outsl
dec
jae
xchg
pusha
mov
cmp
mov
scas
shl
into
movsl
mov
fistps
ja
mov
inc
pop
xlat
sub
xor
or
xchg
lea
rcrb
or
sub
pop
inc
add
icebp
xor
sbb
dec
lds
cmpsb
jl
loopne
stos
push
or
mov
popf
add
sbb
add
in
jle
jmp
cld
andl
and
mov
stos
dec
xlat
stos
out
push
popf
pop
out
adc
mov
and
jo
and
push
sbb
mov
xlat
or
cmp
jge
push
mov
mov
sub
cmpsl
push
stos
mov
out
push
mov
hlt
mov
dec
out
nop
ds
aad
mov
cwtl
cmp
fsubr
test
rcrl
inc
icebp
lahf
jbe
test
cli
jbe
popf
and
add
xor
nop
into
enter
out
push
lods
push
clc
xchg
sbb
ss
ret
pop
push
ljmp
jbe
test
mov
mov
jae
push
imul
mov
adc
add
dec
pop
push
xor
cwtl
mov
adc
sbb
mov
rol
in
inc
xor
jb
cli
repz
mov
sbb
repz
je
inc
loop
lods
aaa
mov
pop
dec
aas
cltd
and
mov
lods
fcmovbe
out
cmpl
out
les
mov
cmpsl
lods
addl
lock
in
mov
xchg
js
je
fs
adc
scas
sbb
fcoms
xor
ret
pop
sub
push
fmul
dec
dec
push
movsl
fbstp
into
inc
jmp
pop
cltd
fucomp
dec
cmp
shll
inc
or
sbb
orl
push
or
out
mov
mov
aam
outsb
aam
mov
inc
jecxz
jg
mov
lahf
xchg
pop
jne
or
loopne
loopne
push
push
push
pop
xor
ret
clc
dec
sti
inc
sbbb
mov
rorl
xchg
pop
and
rcrl
rcl
xor
mov
lret
add
icebp
jo
divl
ret
xchg
sarb
and
or
ljmp
push
enter
push
jl
adc
push
xchg
jge
jmp
dec
mov
xor
insl
out
sbb
fs
fdivl
rorl
or
cld
xchg
aam
mov
dec
popa
cli
dec
imul
mov
nop
shrl
lcall
jbe
xchg
lea
xchg
inc
jne
cmp
lret
jbe
mov
insb
cli
and
ja
arpl
ss
mov
dec
lods
cmp
jle,pt
gs
loopne
jecxz
mov
jl
mov
xlat
movsb
gs
jle
sbb
pop
dec
rcll
dec
nop
mov
pop
mov
inc
xchg
jg
adc
inc
stc
popa
sub
adc
in
jp
mov
ljmp
or
dec
xor
addr16
daa
mov
adc
mov
shrb
or
imul
mov
pop
add
jp
scas
xchg
sti
xchg
mov
xorl
in
push
sub
cltd
push
popf
es
ja
push
std
pop
js
test
mov
cmc
int
lcall
pop
cmp
test
and
hlt
mov
and
popf
inc
cmp
pop
inc
lods
fisubrl
push
into
hlt
mov
inc
xlat
or
iret
jp
sub
pop
xchg
mov
jp
rclb
jmp
jle
or
pop
in
enter
test
out
mov
and
pop
and
cs
shlb
add
or
mov
xchg
test
jmp
or
cmp
dec
subl
in
and
orl
int
jb
lods
rcll
jmp
lock
lock
xor
ljmp
in
popf
sub
lds
mov
out
sbb
lahf
add
int3
cmpb
in
mov
cmpsb
push
push
fcmovu
shl
imul
ja
ret
push
test
insl
pop
or
stc
mov
bound
outsb
jnp
movsl
inc
adc
mov
fcoms
int3
lcall
sbb
fsubp
jge
dec
sub
sbb
ja
cmp
adc
lods
or
je
xchg
mov
imul
jge
ljmp
add
loop
mov
ror
subb
sbb
pop
xor
or
dec
daa
jecxz
dec
dec
lock
popl
mov
cmpsb
mov
xor
push
sub
shll
imull
inc
jno
out
leave
rorl
fistpl
xchg
fidivrs
lcall
pop
jl
sahf
sub
arpl
test
dec
ljmp
sub
push
daa
rorb
mov
xor
stc
cli
sbb
xchg
icebp
test
push
cltd
dec
mov
pop
xchg
jne
scas
and
push
or
loop
pop
cmp
xor
in
mov
push
add
sbb
push
mov
sub
push
and
shrl
in
cmp
lahf
mov
movsb
add
aam
jne
data16
mov
push
iret
jg
pushl
les
lret
stos
rorl
adc
das
mov
mov
out
test
aam
gs
leave
and
inc
and
loopne
pop
cltd
out
mulb
jnp
cmpsb
mov
jns
mov
dec
fwait
mov
or
aad
lods
std
daa
loopne
test
ds
out
cltd
mov
fiaddl
xor
sub
sarl
ss
cmpsb
test
sbb
lret
std
sub
xor
or
aam
add
mov
dec
adc
enter
sbb
rol
inc
push
mov
sub
cmp
jo
jp
mov
fstpl
fmuls
xchg
or
arpl
fwait
addr16
iret
inc
arpl
sbb
xchg
jmp
cmp
push
out
fs
stos
xchg
ja
mull
cmp
test
mov
xchg
clc
jno
sub
mov
and
jcxz
cmp
mov
adc
ja
and
sub
lea
rolb
push
mov
ds
fcomp
push
inc
shr
fmuls
xor
jle
sbb
lret
insl
push
push
enter
push
cmp
push
jl
lods
mov
cld
push
sbb
out
mov
cmp
lahf
adc
pop
dec
inc
add
jecxz
imul
fstpt
stos
imul
popa
movsl
loop
cs
mov
movsb
mov
neg
dec
in
jbe
push
rcrl
and
and
aam
mov
ljmp
repnz
xchg
mov
mov
cmpsb
jg
adc
xchg
xchg
clc
and
mov
sub
inc
xchg
mov
cmpsb
mov
mov
inc
aad
mov
cmp
outsl
test
cmp
jp
scas
pop
gs
cmp
iret
xor
clc
adc
int
movsb
pop
xchg
stos
jge
ret
mov
jl
ds
popa
xchg
xchg
jle
adc
ret
lods
sub
lcall
and
push
leave
mov
pop
int
push
push
xchg
sub
xor
aaa
mov
in
inc
adc
pop
cli
repnz
jne
insb
shll
xor
xchg
fldt
adc
sub
jns
mov
inc
mov
cli
mov
fcoml
roll
push
xor
add
lods
rolb
pop
sub
mov
mov
or
scas
aas
idivl
mov
aas
jmp
pop
xor
sbb
add
push
mov
xor
mov
cli
push
data16
sbb
fdivrl
mov
arpl
lret
imull
jo
push
ja
mov
popa
js
or
mov
sahf
cmpsb
inc
lcall
stc
dec
sub
imul
cs
adc
mov
aas
jns
cwtl
inc
jno
stc
in
mov
mov
outsb
lds
sbb
dec
inc
int
test
jmp
ljmp
std
push
lcall
call
xor
pop
lock
jmp
sbb
adcb
pop
inc
ds
das
insl
sub
mov
push
inc
ja
fs
sbbb
jl
scas
shr
sbb
aas
mov
lret
and
dec
pop
pop
icebp
outsb
jns
lock
fisubl
pop
or
dec
sub
aad
out
sahf
out
mov
xor
lahf
bound
xor
xor
mov
adc
cmp
movsb
push
lock
jl
mov
mov
bound
cmc
xchg
call
aam
nop
cmpsl
rorb
fwait
xchg
cmc
pop
xlat
dec
xchg
jbe
jg
mov
insl
pusha
jae
stc
bound
fdivr
mov
dec
xchg
lret
mov
pop
sarb
mov
lods
mov
xchg
mov
mov
movsb
jge
insb
clc
push
aas
pop
push
lods
mov
and
test
popf
mov
loope
daa
cmpsl
xchg
testb
sti
ljmp
int
adc
mov
xchg
lretw
and
xchg
shrb
dec
mov
sub
lret
jnp
repz
subb
std
sbb
mov
fnsave
or
ljmp
ret
movsl
mov
and
scas
push
add
out
mov
popa
dec
sbb
cmp
int
fdivs
roll
lea
or
jae
rorb
dec
clc
cmp
xor
test
xor
ljmp
dec
mov
sarb
jne
inc
add
inc
sbb
outsl
push
fwait
push
daa
mov
repz
lret
nop
mov
aam
and
adc
and
pop
push
mov
outsl
cmovnp
aam
fndisi(8087
sbb
add
push
jle
mov
xchg
inc
xlat
scas
push
fiaddl
shl
and
fidivs
mov
addr16
mov
andl
orl
aaa
dec
mov
mov
cmp
mov
rcll
aad
pop
add
test
or
xchg
repz
mov
sub
aas
fsubrl
jae
lods
sbb
inc
aad
aad
inc
mov
xchg
xchg
rclb
aam
xchg
js
loop
sbb
mov
xchg
faddl
mov
sub
pop
mov
repz
add
out
adc
scas
int3
pop
pop
dec
arpl
push
repz
mov
pop
lock
push
cmp
adc
clc
cmp
sub
inc
mov
pushf
pop
cmp
outsl
data16
sub
outsl
idivl
arpl
imull
neg
push
in
fwait
js
inc
mov
and
adc
pop
mov
daa
xor
jbe
xlat
cmp
lods
cmp
dec
cmp
in
push
push
or
fwait
sti
lahf
sbb
jne
cmpsl
adc
push
js
jns
test
bound
push
ret
in
xor
repz
jl
insl
push
mov
ficoms
lea
xchg
test
mov
mov
jge
jae
pop
jne
adc
movsb
inc
jbe
push
js
xchg
pop
not
pop
sbb
rclb
xchg
pop
add
movsl
daa
or
xor
sbb
xor
mov
cld
inc
lods
xchg
lock
adc
js
and
sbb
jl
cmp
jns
jmp
lods
push
push
stos
xchg
jp
out
add
cmp
out
mov
fisttpll
cs
cli
mov
movntq
ret
ror
sub
jb
adc
scas
les
rcll
add
xchg
adc
sbb
xchg
loop
lret
mov
mov
xchg
subl
out
mov
push
clc
testb
js
out
fisttpl
imul
js
jl
aaa
lcall
mov
repnz
or
rorl
aad
movl
imull
rcl
lods
jl
jp
in
out
mov
and
mov
xchg
push
pop
xchg
pusha
loope
adcb
jecxz
movsb
lret
mov
and
mov
push
mov
mov
movb
adc
hlt
cmp
jle
push
mov
adc
cmpsb
cmp
fiaddl
dec
jno
aas
jmp
jmp
pop
pop
std
ret
push
movsb
mov
stos
imul
push
sbb
callw
pop
cmp
push
loop
dec
jl
and
xchg
pusha
ss
pop
andl
cmp
imul
pop
inc
add
dec
imul
addl
leave
dec
rclb
shld
les
xchg
inc
mov
jns
movsb
or
mov
xchg
aaa
adc
aad
pop
pop
fldenv
gs
mov
fldt
or
sbb
loop
mov
pop
inc
push
mov
sti
add
test
adc
inc
into
decb
lods
or
rclb
fwait
in
mov
mov
xchg
fs
jns
add
js
lahf
mov
and
dec
cltd
dec
test
inc
dec
filds
jns
aam
inc
les
nop
jle
gs
cld
sub
and
aad
pop
imul
mov
daa
xor
mov
fldln2
adc
xor
mov
pop
fnstsw
adc
adc
inc
movsb
cwtl
popa
cs
and
mov
dec
xchg
dec
rol
in
pop
and
dec
and
push
loop
icebp
push
in
out
mov
scas
icebp
and
cmp
push
int
mov
inc
and
ljmp
fdivrl
xchg
push
arpl
scas
scas
push
inc
imul
sbb
xor
fidivs
add
idivl
mov
xchg
icebp
clc
jl
clc
jmp
ret
cmp
sbb
mov
sub
pop
ss
cmp
enter
pushf
pop
lods
sbb
mov
xchg
gs
sub
ds
add
sub
sbb
lock
mov
push
cmp
out
sti
adc
xchg
adc
out
adc
dec
shrb
xor
ds
js
jl
mov
sbb
inc
add
push
pusha
int3
cli
sbb
js
dec
cmp
and
in
enter
aad
daa
aam
scas
inc
int
aas
lods
int3
xchg
lahf
adc
ds
int
dec
mov
int
xlat
and
je
aad
xchg
je
fdivrs
mov
inc
scas
inc
xchg
je
or
xchg
lret
push
int
std
imull
mov
sub
pause
jne
push
in
icebp
clc
mov
in
gs
xor
push
sub
and
fwait
xchg
jne
cli
xor
repz
sub
mov
cmp
adcb
data16
out
or
js
dec
pusha
ds
dec
mov
mov
rclb
loopne
jl
clc
dec
imul
xchg
add
dec
adc
outsl
fadd
xlat
push
cmp
jg
flds
int
push
cmp
aam
pop
in
pop
jmp
outsl
pop
fs
repnz
jnp
sarl
cmp
xchg
mov
jecxz
gs
add
adc
pop
fcoms
popf
push
fwait
int3
adc
sub
push
and
push
pop
lahf
xor
jae
pop
sbb
lahf
loope
into
aas
jb
insb
inc
xchg
leave
cmp
mov
or
iret
fwait
add
push
xor
inc
popf
inc
js
repz
xchg
cwtl
bound
mov
mov
dec
rorb
sub
mov
xchg
pusha
lea
out
mov
loope,pt
outsb
outsl
dec
mov
and
jle
sub
mov
shl
inc
sbb
fistl
add
fcmovne
sbb
sub
cld
faddl
and
sbb
sahf
and
jnp
shlb
inc
push
lret
inc
inc
mov
sub
in
xchg
jmp
lcall
jne
sbb
mov
xor
popf
mov
fldt
mov
fbld
in
dec
repz
imul
jno
popa
xchg
pop
jp
jbe
mov
fisubrl
xor
adc
sbb
mov
shr
pop
pop
or
mov
jecxz
fdivl
cld
adc
lods
add
mov
fmull
shrl
cwtl
adcl
repnz
lods
cwtl
xchg
ja
cmp
push
mov
sbb
xchg
ret
mov
cmpsl
cmpsl
in
lods
jb
adc
imul
movsb
cmpsl
mov
mov
push
fidivl
jne
pop
addr16
in
mov
adc
inc
push
sub
adc
fcoml
push
int3
xchg
idivl
mov
dec
cmp
arpl
bound
pop
or
mov
push
add
push
xlat
outsl
fildll
or
xchg
fwait
sahf
por
jno
out
adc
xor
fsubp
sbb
icebp
shrb
sbb
jno
adc
outsl
imul
in
cmc
mov
repnz
or
cmp
cld
mov
in
adc
pusha
sbb
xor
cmp
or
mov
inc
fdivl
fstpt
cmpsl
jo
imul
adc
jge
les
push
sbb
mov
push
mov
inc
cmpsl
mov
scas
addl
xor
lods
dec
mov
daa
cmp
lret
lcall
repz
outsb
imul
rorl
enter
test
inc
fisubs
mov
outsb
aaa
adc
in
mov
mov
into
mov
xor
lret
add
cltd
mov
loope
inc
sbb
dec
fiaddl
les
sahf
push
add
cmc
fiaddl
mov
aas
inc
xor
rcrb
adc
dec
push
lock
mov
pop
ds
aaa
pushf
mov
pop
cmp
leave
scas
push
insb
mov
inc
cli
jno
mov
push
pop
add
ret
push
xor
pop
out
es
pop
sbb
xchg
inc
and
mov
fdivrl
popa
subl
inc
lahf
mov
js
lds
outsb
in
sub
fisttps
rcrb
dec
push
or
mov
loopnew
jle
notb
sub
and
jae
sahf
and
and
push
jmp
lock
imul
sahf
divb
add
clc
jb
addr16
stos
pop
in
repz
push
mov
dec
movsl
sbb
mull
jecxz
add
pop
xchg
mov
into
pop
dec
and
add
out
aaa
jmp
sti
roll
roll
mov
xchg
sub
xchg
cmp
lahf
outsb
cmp
or
lds
xchg
cmc
rolb
jne
fadds
pusha
mov
cmp
mov
int3
xchg
dec
hlt
lret
jl
xor
pop
aad
mov
rcl
dec
inc
stos
cs
dec
mov
hlt
out
xor
xor
cmp
stc
mov
aaa
test
jg
and
add
mov
movsb
stos
jle
pop
mov
inc
cmp
repnz
in
fildl
pop
push
dec
mov
enter
dec
ja
inc
loope
repnz
call
dec
push
or
mov
mov
jnp
popf
icebp
pop
js
ja
gs
aas
clc
nop
and
add
es
idivb
loop
sbbb
add
clc
xor
and
fwait
or
jl
mov
fistl
lahf
inc
pop
jmp
icebp
mov
xchg
jno
mov
dec
pop
paddq
leave
movsl
cltd
xchg
sbb
sbb
push
flds
icebp
xor
cwtl
mov
xchg
jle
in
xor
sbb
jp
lods
fucomp
daa
push
inc
nopl
out
movsl
outsl
fstl
sub
inc
inc
inc
sahf
jae
fs
jo
out
cmp
in
jmp
je
data16
sbb
inc
cmp
jne
testl
dec
add
popl
push
cwtl
jo
shll
and
pusha
lret
mov
mov
adcl
or
jmp
cltd
add
or
dec
add
fucomp
loopne
mov
push
ffree
inc
arpl
mov
test
xchg
adc
leave
jae
xor
jnp
push
sub
adc
jle
mov
push
daa
inc
xor
mov
or
lods
stos
out
insl
add
mov
push
cmovbe
lods
lods
add
xchg
ds
and
cmp
sub
pop
loopne
jbe
jmp
add
test
adc
dec
outsb
dec
push
jge
outsb
pop
sbb
adc
fcompl
cmp
sarb
add
cmp
and
mov
xorb
push
pop
or
adc
rcll
test
push
sub
rol
inc
xchg
es
pop
inc
outsl
pop
mov
pop
nop
xchg
fidivrl
fs
subb
loopne
andl
test
push
mov
xor
cmc
push
add
shl
sub
es
clc
cmc
inc
sbb
mov
stos
movsl
insb
mov
cmpsb
adc
gs
divb
inc
aaa
lock
pop
adc
test
loop
stos
stos
push
lcall
shr
jbe
std
cwtl
jmp
setp
repnz
push
out
xlat
jb
adc
add
into
shll
sti
mov
lret
orb
cmp
cmp
cmp
stos
sub
rorl
cwtl
hlt
sbb
int3
aaa
mov
icebp
out
fisttps
pop
cmp
add
dec
mov
mov
xchg
fidivrs
and
daa
pushl
sbb
fisubrs
jp
or
mov
cs
cmp
dec
mov
out
cmpsl
dec
data16
inc
dec
jmp
fwait
call
mov
xchg
push
xlat
call
cmpsl
pop
jl
jo
nop
and
lcall
or
or
call
loope
push
in
shl
sahf
pop
cmp
popa
pop
daa
jg
add
sbb
mov
call
loope
out
dec
adc
adc
and
ja
repnz
dec
leave
sub
lods
sub
cmc
lock
movsb
or
dec
pop
push
push
mov
lret
repz
in
test
lock
adc
add
rcl
push
lret
push
fldcw
xchg
std
imul
out
dec
js
into
movsl
jne
mov
jnp
jmp
leave
xor
sub
adc
test
push
icebp
xchg
shll
jmp
add
ret
popa
adc
cs
xlat
ljmp
iret
xor
xchg
fs
lods
jno
push
faddl
push
lcall
mov
stc
stc
or
negb
push
pusha
jge
xchg
lock
sub
stc
imul
xor
adcl
shll
jmp
incb
mov
test
pop
call
xor
add
lea
inc
aas
push
mov
sub
ret
jge
inc
sbb
shrb
call
movsb
pop
pop
lret
mov
cmpsb
in
out
mov
leave
repz
adc
outsl
cmc
aas
add
pop
inc
leave
fcompl
push
mov
cmp
adc
cmp
mov
adc
adc
mov
mov
addr16
jp
xchg
jnp
leave
push
scas
rcrb
adc
hlt
dec
lods
push
int
js
pushaw
push
mov
lcall
add
push
int
idivl
sub
into
bts
mov
dec
push
nop
aad
cmp
push
xchg
jl
int
or
rorb
push
in
movsl
pop
mov
fs
dec
int
and
inc
pop
mov
or
sbb
scas
add
in
lods
push
es
je
out
test
inc
inc
xchg
push
fwait
cmp
dec
cmp
bswap
inc
sub
mov
fs
add
mov
pop
ss
sbb
inc
dec
xlat
bound
xorl
add
sbb
ret
cmp
and
lret
add
xor
pop
addr16
icebp
out
ljmp
mov
xor
inc
ds
push
test
lock
sbb
push
cmc
cmp
and
jno
int3
jp
frstor
sub
sbb
mov
outsl
mov
push
cmc
pop
xadd
cmp
iret
mov
pop
fwait
push
pop
mov
leave
mov
addl
loopne
int3
ret
std
insl
adc
addb
loope
cmp
or
shrb
mov
adc
mov
arpl
in
and
sub
fisttps
mov
rolb
icebp
clc
pop
shll
add
jns
mov
adc
fs
stc
int
test
cmp
mov
pop
es
addr16
push
xor
loope
push
js
clc
xchg
jge
shlb
push
nop
pusha
bound
push
aas
popf
mov
fmulp
aad
sbb
lret
fcoml
inc
out
xor
mov
mov
jo
insb
and
ljmp
adc
enter
into
add
jge
lahf
xor
add
push
or
adc
lret
pop
push
mov
cmpsl
push
loopne
cltd
dec
sub
xchg
sub
inc
pop
jge
push
mov
dec
or
mov
lret
pop
lret
xchg
ret
cmp
jp
cld
mov
shlb
push
jp
inc
insb
bnd
shrl
imul
test
mov
cmp
fs
ret
xor
inc
or
sub
outsl
cld
testl
mov
ds
in
jno
int3
and
ss
mov
fsub
arpl
add
nop
and
int3
imul
and
popf
xchg
or
mov
je
push
stos
mov
xchg
leave
mov
cli
leave
or
ds
out
adc
sbb
xor
xchg
mov
and
enter
aam
fildl
and
mov
das
cmp
mov
ret
nop
daa
stos
in
mov
lret
loope
dec
fld
out
mov
test
adc
or
gs
cltd
out
add
ss
jl
add
cwtl
inc
testb
fdivs
add
aam
stc
add
clc
shl
xchg
mov
jne
mov
push
lcall
jp
xchg
mov
es
mov
xchg
lahf
jnp
das
jae
xchg
sahf
push
adc
and
in
imul
sti
andl
inc
add
je
scas
repz
adc
add
jge
sahf
shr
mov
jl
cmp
cld
push
in
cmp
inc
mov
pop
push
dec
inc
sbb
xchg
aad
mov
inc
add
shrl
in
mov
push
aaa
scas
loopne
cmc
inc
cmp
gs
jmp
adc
xchg
js
inc
or
mov
ja
sub
je
outsl
stos
cltd
mov
cmp
mov
mov
or
lea
neg
out
sbb
mov
jnp
clc
pop
fistl
inc
mov
ret
pop
lret
negl
je
daa
pushl
out
xor
mov
fs
leave
orl
dec
xor
hlt
test
sbb
push
fisubl
test
stos
adc
repz
sbbl
jns
adc
xor
sub
sub
push
lcall
mov
sub
call
jbe
xor
push
sbb
or
or
inc
adc
adc
ds
jmp
jg
out
outsb
outsl
mov
lods
or
dec
mov
ret
into
pop
xlat
push
jp
add
pop
mov
xor
in
inc
loop
pop
sbbb
sub
mov
bound
sub
mov
cmp
test
data16
inc
ljmp
dec
push
pop
repz
movb
adc
push
jno
nop
sarl
inc
movsl
adc
or
mov
out
repnz
mov
daa
pop
cli
push
std
inc
aaa
cmp
cmp
jecxz
jae
mov
aad
cmp
nop
xchg
sti
pop
dec
iret
sbb
stos
mov
pusha
fcompl
pop
test
cmpsb
xor
jno
in
scas
insl
xchg
shr
push
int
and
nop
pop
scas
pusha
scas
and
hlt
inc
cmpsl
inc
and
push
fxch
xorb
lret
pop
nop
sbb
shl
jmp
sbb
sub
lods
pushf
into
andl
cmp
movsl
cmp
rol
insl
iret
je
jo
arpl
sbb
mov
dec
je
jmp
add
into
jne
lock
sti
rcrl
push
push
sbb
pop
mov
cli
addr16
xchg
pop
nop
mov
xor
add
inc
fwait
aad
mov
mov
push
icebp
popf
jmp
push
lea
cmc
mov
mov
aaa
outsb
aas
in
icebp
clc
mov
mov
pusha
daa
sbb
lret
jne
outsb
sub
mov
jb
je
insl
int
dec
negl
add
mov
adcl
icebp
out
insb
rorl
mov
adc
mov
push
jb
mov
add
rclb
pop
lods
jge
pop
loope
shrb
and
mov
in
icebp
std
jg
addr16
ljmp
pop
mov
fwait
xchg
and
mov
addr16
stc
sahf
sbb
sti
les
or
pop
mov
out
aaa
inc
scas
sbb
add
ds
sub
int
aad
mov
dec
cli
scas
mov
in
fldcw
out
jo
jl
sub
cmp
leave
add
cltd
sub
sti
call
jecxz,pn
sbb
dec
mov
inc
sub
mov
adc
std
inc
test
outsb
mov
shlb
imul
and
aas
inc
stos
mov
xlat
dec
hlt
sbbb
jmp
push
mov
sbb
push
out
mov
sbb
mov
mov
adc
rorb
es
add
out
mov
in
loopne
mov
cmp
mov
aam
mov
xchg
mov
xchg
cld
mov
iret
xchg
xchg
mov
jno
inc
lret
out
jl,pn
inc
stos
mov
cwtl
pop
imul
and
daa
mov
inc
sub
adc
mov
in
sahf
hlt
shll
xor
imul
sub
jecxz
xchg
jno
sub
insb
negl
xlat
jns
jge
xchg
inc
mov
jne
push
mov
xchg
outsl
stos
and
js
mov
sbb
lret
cmpsl
gs
icebp
fcoml
add
mov
out
cld
jge
popa
mov
icebp
cmp
call
lods
in
pop
das
cmp
mov
add
sub
incl
scas
jno
xchg
daa
mov
jmp
es
ret
sbb
out
xchg
mov
push
repnz
cmc
dec
pusha
ftst
xor
jecxz
hlt
lds
sbbl
cwtl
jno
adc
into
adc
les
aaa
nop
pushf
stos
leave
cli
pop
mov
and
mov
lods
xchg
hlt
jns
jp
mov
push
loope
fnsave
push
in
ljmp
inc
iret
or
popa
fwait
add
jns
or
out
pop
pusha
out
mov
mov
adc
push
mov
sub
push
push
sarb
pop
xor
jbe
sti
scas
push
insl
sbb
pop
xor
clc
add
add
push
ljmp
mov
cld
xchg
in
pushf
jbe
sbb
push
mov
test
mov
add
leave
dec
adc
fmull
ret
add
jge
rcrl
mov
jg
icebp
jae
inc
les
aaa
into
sub
cmp
push
jle
leave
xchg
sbb
sbb
in
mov
pop
daa
repz
daa
lods
notl
push
data16
xchg
dec
cmp
jbe
pop
mov
mov
sub
dec
in
sarb
pusha
sbb
movsl
and
xor
inc
cmc
cmp
sbb
push
cmp
push
gs
push
jns
xor
notb
push
hlt
pop
xchg
repz
and
mov
add
xchg
cmp
aad
movsl
sub
ficompl
sahf
incb
mov
jns
sbb
jae
cmp
test
lret
cmpsb
mov
clc
ja
cwtl
pop
sbb
mov
test
xor
shrb
sub
test
stos
dec
push
iret
mov
popa
popf
lahf
aam
in
je
shlb
mov
aam
or
inc
sub
bound
loop
lock
adc
push
lret
cli
adc
push
stos
cli
cld
sub
pusha
in
fildl
mov
sub
lcall
jne
hlt
orb
in
pop
cld
test
push
insl
arpl
cld
mov
jb
mov
jo
pop
mov
hlt
push
and
jge
test
or
push
test
lahf
mov
outsb
popa
out
xchg
loope
test
pop
into
data16
add
pop
clc
div
sub
or
xorl
xorl
leave
cs
push
and
mov
mov
rorl
xor
lods
outsb
test
int
sbb
enter
out
out
jo
mov
adc
pushf
loop
sahf
call
xor
std
pop
dec
jnp
test
nop
mov
inc
lock
aaa
xchg
or
or
jo
mov
sub
inc
ret
outsb
inc
and
int
incl
in
in
imul
xlat
cmpsb
sub
js
sub
shr
fmull
rol
pop
adc
pop
aad
arpl
add
cwtl
ja
std
push
mov
in
xlat
das
xchg
push
xchg
int3
pop
test
pop
ss
sar
aaa
mov
call
mov
inc
sub
cmp
ficoml
fstpl
das
fisubrl
pop
xlat
mov
mov
push
rorl
adc
fs
movl
cmp
dec
daa
or
xor
jns
push
in
std
cli
push
xchg
ret
jnp
push
imul
mov
cs
cmc
and
inc
add
loope
mov
fwait
xor
and
xor
lret
loop
mov
mov
movb
mov
out
cli
mov
fists
stos
mov
jb
adc
inc
jl
sti
ret
and
movsb
call
mov
sub
pop
add
xor
add
daa
mov
jge
arpl
push
adc
xor
ret
xchg
loopne
pop
in
fs
loop
and
inc
xor
repnz
cltd
xchg
and
into
jae
mov
dec
stc
testb
jne
imul
xor
cli
mov
loope
lds
jae
or
inc
cmp
add
aad
fdivp
imul
mov
inc
ja
and
fstp
ss
jno
push
in
jmp
add
stc
mov
xchg
js
fwait
lea
inc
add
jae
dec
jmp
adc
fwait
cmpsl
gs
inc
lret
in
mov
inc
es
mov
sbb
jae
into
pusha
pop
cld
mov
fldt
jno
enter
outsb
pop
cli
mov
iret
ljmp
xor
mov
lods
sbb
and
pop
mov
xlat
rorl
in
lock
push
mov
dec
frstor
push
inc
test
idivl
mov
lock
add
test
mov
xchg
inc
xchg
push
imul
das
iret
mov
sbb
mov
in
repz
insl
int3
jns
or
or
cltd
sbb
fildll
out
mov
sub
mov
inc
and
das
fldcw
dec
ja
push
repz
dec
and
loope
push
mov
dec
pop
dec
mov
mov
sarb
das
mov
adc
push
push
popf
jmp
mov
cmp
and
leave
pop
repz
inc
mov
in
xor
fsub
sahf
xor
fmuls
test
xchg
sub
cld
cmp
jle
jl
pop
sub
call
xlat
pop
xor
addr16
jo
cmpsb
in
pop
stos
cli
push
cltd
mov
test
cmc
or
fmulp
mov
gs
es
dec
inc
popf
jbe
addr16
imul
and
xorb
xor
inc
and
dec
mov
inc
sub
jmp
ds
lods
mov
and
lcall
mov
xchg
pop
ja
jb
mov
ret
jecxz
pop
push
test
pop
aas
mov
lock
xchg
xchg
insb
loop
mov
pop
out
negl
inc
xchg
push
fistl
icebp
sbb
cmpsl
mov
sub
jecxz
in
sub
ja
fcoms
in
inc
push
adc
jo
testl
cmp
dec
inc
aas
jbe
lea
mov
fsubs
mov
lret
int
test
sub
cltd
sub
add
aam
ljmp
pop
lds
jbe
pushf
sbb
push
add
and
frstor
pop
jnp
bound
jg
movzwl
scas
lret
jl
test
orb
dec
or
pusha
pop
fs
pop
inc
mov
insl
xor
adc
jl
inc
sbb
inc
outsb
pop
inc
cmp
cmp
xor
jecxz
pop
cs
rcrl
xchg
scas
mov
jp
mov
mov
adc
dec
dec
bound
jl
and
clc
cld
or
stos
insb
in
mov
mov
imul
sbb
scas
cwtl
pop
sub
add
test
cwtl
cwtl
mov
adc
loop
movsb
fs
in
dec
inc
mov
pop
iret
sub
or
outsl
shl
aad
push
cmp
cmp
scas
fimull
mov
call
pop
test
in
outsl
sub
add
jae
push
pop
adc
es
push
je
imul
aas
push
inc
sbb
xchg
cmp
in
sub
mov
push
and
mov
push
in
push
inc
mov
dec
inc
cmp
adc
dec
out
mov
iret
xchg
cli
adc
xchg
cmp
das
cs
adc
adc
loopne,pn
mov
push
xchg
repnz
cpuid
lahf
je
push
jge
sbb
lea
xchg
addr16
add
push
test
fs
sahf
and
sbb
lds
sahf
cmpsl
sub
stos
test
pop
imul
mov
lds
cmp
popa
xor
mov
inc
or
aas
sbbb
addb
mov
decb
lahf
cmp
sub
mov
push
inc
jnp
adc
mov
cmp
imul
aas
out
mov
xor
sub
cmc
lods
lds
pop
mov
push
cs
loopne
sti
xchg
repnz
popf
int3
mov
cmp
pop
sub
repnz
jecxz
adc
pop
push
sbb
jg
jns
mov
rolb
mov
push
cmp
mov
lret
sub
ja
mov
dec
mov
mov
ljmp
mov
jns
aaa
pop
mov
fdivr
lcall
pushf
stos
aam
cmp
aam
push
xor
fisttpl
lret
leave
jmp
sub
pop
pop
mov
xor
pop
adc
lret
mov
movsl
push
jle
insl
jle
or
sub
adc
addl
cli
or
lcall
lods
pusha
fucomi
adc
xor
jl
mov
cmp
jne
movsb
pop
push
ret
popf
sub
stc
or
sbb
stos
inc
mov
movsb
jnp
push
sbb
mov
pop
nop
jb
mov
mov
sub
test
jle
push
push
cltd
in
daa
imul
mov
dec
and
mov
out
imul
add
xchg
test
mov
movsb
lret
dec
adc
rorb
xchg
adc
aas
int
jg
scas
outsl
out
mov
lret
push
inc
add
jg
insb
push
test
fs
sbb
lret
cld
ret
hlt
pop
sub
pop
push
das
hlt
movsb
movsl
and
nop
movl
inc
fisttpl
shl
dec
dec
inc
and
pop
mov
pop
notb
insl
jmp
or
loope
pop
call
sahf
rcr
fisttps
xchg
out
or
inc
and
push
div
nop
or
jge
cld
pop
sbbl
stos
inc
mov
negb
into
adc
xchg
cltd
jae
cmp
inc
shll
push
sbb
fisttpl
std
scas
in
andb
inc
cmp
jmp
push
insl
push
mov
inc
out
insb
ss
and
sbb
cli
lcall
adc
shrl
or
sub
lock
lret
shlb
pusha
and
cmpsb
iret
lock
mov
ret
sub
xor
lods
cmpsl
mov
dec
adc
into
xchg
dec
dec
mov
js
jl
mov
xchg
sbb
dec
push
and
hlt
clc
jns
pop
or
inc
loop
dec
inc
stos
leave
adc
in
dec
movsl
mov
loopne
jecxz
sbb
lcall
mov
scas
adc
int
push
pop
pop
add
testb
test
sbb
or
das
jnp
lock
das
aas
lret
mov
pop
out
aam
setns
addl
inc
cwtl
out
and
cmp
rcrb
mov
xchg
sub
leave
cli
cltd
and
inc
les
out
push
xchg
inc
inc
mov
in
xchg
and
iret
push
inc
clc
sbb
pop
fwait
pop
repz
js
mov
imul
loop
dec
loope
jne
push
jns
mov
lahf
int
xchg
int
loop
nop
pop
add
xchg
sub
mov
xor
test
flds
jecxz
add
push
add
xor
sub
cmp
dec
inc
lods
shrb
jg
mov
jno
insl
xchg
jbe
std
adc
cmp
adc
mov
pusha
mov
sbb
fmull
mov
adc
fnstenv
xchg
and
loopne
fistps
aas
sub
lock
jmp
cmpsl
xorl
xor
in
pop
or
stos
dec
cwtl
addr16
mov
sub
test
rolb
xor
pop
and
mov
xchg
pop
push
sub
xchg
into
repnz
dec
out
mov
mov
sti
iret
sub
pop
cmpsl
or
mov
xor
ja
and
jb
push
lahf
addb
jnp
js
adc
scas
insl
or
cltd
jmp
test
push
jmp
imul
test
cmpsl
cltd
push
stos
inc
or
mov
xchg
mov
sarl
xor
adc
pop
sub
pop
test
lcall
imul
test
mov
bswap
pop
inc
cli
lods
push
cmpsb
das
push
lcall
and
sbb
xchg
mov
mov
js
loope
xchg
xor
out
pop
scas
jp
aad
cwtl
repnz
dec
cmp
sub
imul
pop
add
ret
sbb
jns
mov
mov
adc
dec
adc
call
shl
or
sbb
mov
cmc
addr16
loopne
mov
sub
dec
fnstenv
mov
aas
mov
push
mov
sub
xor
mov
frstor
mov
stos
dec
jg
adc
mov
jbe
push
out
jno
push
arpl
stos
mov
mov
mov
cltd
dec
sbb
inc
popa
add
sub
sbb
ja
out
div
jge
push
jl
iret
xchg
and
inc
pop
lahf
ja
bound
add
ljmp
mov
adc
and
and
int
push
fcomi
sub
daa
cmpsl
aas
inc
dec
jmp
subl
or
pop
andb
xor
mov
jnp
jge,pn
das
insb
jno
ret
int3
shlb
in
jns
call
fs
popf
fiadds
push
push
fnstenv
out
add
nop
shll
push
jns
inc
mov
push
xchg
adc
aad
jl
pop
dec
xchg
dec
cmpsl
xchg
aaa
sub
movsl
rcrl
dec
fstpt
push
cmp
mov
popf
xchg
and
jp
jo
cmp
jmp
jecxz
sbbl
mov
lods
inc
mov
hlt
popf
arpl
adc
lds
cmpsb
test
shll
sbb
rcrb
sbbb
shl
sub
out
mov
fwait
dec
popa
lret
push
cmpsb
mov
xor
and
pop
aam
pushf
add
divl
mov
jnp
pop
mov
imulb
xchg
or
pushf
out
aam
xor
iret
call
data16
sbb
shl
add
into
sub
inc
sub
stos
lret
push
push
add
push
hlt
mov
sbb
add
mov
dec
adc
push
and
add
pop
push
add
mov
mov
insb
jno
add
into
mov
mul
aas
andl
lock
cs
xlat
adc
aas
mov
popa
dec
daa
push
push
fstpt
cld
into
movsl
fs
sub
mov
dec
mov
aaa
orb
jecxz
mov
repnz
cwtl
sbb
ljmp
test
sub
sti
pop
imul
repz
enter
int3
outsl
xchg
cmpsl
lods
jb
lds
xchg
xchg
mov
aaa
call
jle
mov
ljmp
add
lods
jb
push
add
les
add
ljmp
pop
xorb
iret
adc
xchg
jp
mul
pop
icebp
push
push
xchg
dec
addr16
inc
testb
xor
adc
sarl
fcoms
in
into
cmp
iret
dec
lea
adc
fiaddl
pusha
mov
mov
and
ljmp
mov
ret
xchg
and
xor
sub
dec
out
sarb
dec
add
xchg
push
adc
fisubrl
lods
mov
push
inc
cmp
sub
sbb
mov
push
mov
imul
dec
jge,pn
jge
sbb
mov
and
cmpb
dec
cmp
adc
pop
pop
cltd
fidivrs
inc
xor
imul
mov
sbb
mov
and
and
inc
fnstenv
inc
sub
xor
in
sub
imul
in
xor
cmp
aas
test
push
jge
test
sbb
xlat
mov
add
leave
cmp
iret
insb
test
push
xchg
push
jge
repz
std
and
aas
push
xor
call
mov
pop
in
push
dec
es
or
int
mov
lods
mov
leave
aaa
push
mov
adc
mov
add
std
or
popf
std
adc
les
gs
cmpsl
dec
cli
stc
jge
aas
insl
ret
dec
orb
inc
xchg
xchg
retw
push
insb
aaa
orb
mov
fstps
int3
add
insb
sbb
mov
xor
loope
sub
jmp
cltd
lods
add
dec
mov
mov
adc
push
sbb
or
out
inc
sbb
mov
daa
mov
xchg
or
cmp
pop
mov
jp
cmpsl
loopne
mov
sbb
std
xchg
mov
push
ljmp
sahf
cmp
xchg
mov
bnd
and
jnp
and
jg
insl
mov
cmp
call
cmp
push
arpl
jmp
push
cmp
jle
cli
fcomps
cmpsl
sub
inc
pop
lock
leave
out
scas
ds
addb
ret
mov
fisttpl
std
xchg
sbb
push
es
lods
lahf
rol
dec
mov
jae
xchg
pop
cmp
into
ss
pop
gs
icebp
dec
push
inc
or
sarb
adc
cmp
dec
jae
sbb
push
mov
or
dec
xor
dec
pop
xchg
or
int
nop
mov
push
outsl
daa
cmp
or
jb
ja
test
mov
stc
bound
cmp
lds
inc
mov
rorl
pop
aas
xor
int
mov
adc
fwait
sbb
or
addr16
mov
jno
dec
mov
pop
adc
nop
andb
stc
cmp
mov
mov
imul
sub
imul
mov
mov
outsb
push
std
insl
jae
pusha
notl
xor
popf
scas
mov
pop
stos
gs
add
xchg
roll
adc
inc
adc
loopne,pn
add
test
jecxz
mov
jae
mov
lret
jmp
inc
in
cs
fstl
sub
rorl
and
xchg
testb
lock
std
int3
cltd
mov
es
inc
jg
adc
jne
nop
jne
inc
cld
fwait
jb
mov
jg
and
outsb
stc
insl
inc
inc
dec
jb
pop
testl
les
pop
xor
inc
and
iret
pop
fisubrs
pop
je
loope
jns
je
daa
pop
test
cs
ss
fsubl
loopne
int
inc
inc
sub
dec
notl
insl
lods
fs
mov
xlat
ds
outsb
xorb
sub
fisubrl
xchg
xor
mov
jne
insl
inc
add
push
xchg
cmp
iret
popf
mov
inc
shll
pop
jb
cmp
pop
insb
jp
sub
xchg
sar
push
xor
sub
cmpsb
jbe
xchg
and
or
and
jae
mov
pop
dec
pop
lahf
cmpsl
sub
sbb
xchg
sub
push
sar
jae
aad
hlt
push
jnp
pop
ret
jo
or
lcall
add
in
and
cmpsl
xchg
ss
add
pop
inc
imul
xchg
jae
mov
fdiv
sub
lret
dec
into
or
lahf
fwait
jmp
cs
scas
stos
jle
mov
gs
sub
repnz
in
les
les
cmpsb
jnp
out
sbb
out
mov
pusha
inc
xor
rclb
mov
loop
xlat
add
adc
xor
adc
dec
xor
filds
push
sub
stos
arpl
jbe
lds
add
bound
movsl
mov
mov
cld
out
push
outsl
xorl
lea
push
fs
call
pop
cltd
lret
cmpsl
test
aaa
sub
stos
sbbl
mov
or
xor
mov
ret
ret
xchg
cmp
cmp
dec
pop
aas
sub
add
xor
jl
mov
cmp
pushl
scas
insb
std
jnp
inc
out
inc
xorb
data16
fmull
mov
call
push
cli
fsubs
lret
stos
js
push
addr16
insl
in
outsl
nop
inc
test
xor
mov
lds
das
test
xchg
les
and
aad
sub
fnsave
out
add
addb
jno
xchg
xchg
dec
mov
inc
repz
mov
mov
rcrb
scas
xor
mov
rcrl
mov
enter
xor
sub
jns
dec
add
mov
call
jns
mov
pop
popa
ret
adc
or
rcrb
and
fmul
lods
mov
fcmovnu
andb
dec
mov
cwtl
sar
push
mov
jno
cmp
rcrb
add
push
outsb
inc
jb
pop
fwait
cs
inc
jno
xchg
int3
xchg
test
loope
sbb
push
mov
cmc
outsl
lods
popa
inc
movsb
and
jae
cltd
pop
icebp
jnp
push
or
xchg
adc
mov
push
push
sub
mov
sahf
push
add
imul
pusha
push
sbb
jae
add
sbb
mov
aaa
mov
sub
mov
shrb
mov
outsb
aam
sbb
jb
xor
mov
mov
xor
pop
loope
out
adcl
jge
jge
mov
pop
enter
in
fdivl
mov
pop
mov
push
push
cmp
popf
add
mov
pop
fs
cmp
lcall
js
inc
xor
mov
movsl
stos
dec
mov
lcall
jns
dec
pop
cvtdq2ps
pop
jecxz
sub
mov
sahf
cmpsl
in
fiadds
inc
xchg
inc
mov
call
pop
dec
popf
pop
dec
xchg
and
ljmp
int3
cmp
lcall
ret
mov
aad
mov
pop
and
rcr
test
mov
pop
popa
cmp
shll
sbb
lea
icebp
loope
std
enter
scas
pusha
inc
xchg
cmp
rorb
subb
clc
cmpsl
rolb
fstpt
inc
push
sub
fcomp
pop
inc
data16
pop
add
mov
aas
push
mov
pop
idiv
inc
dec
cmpsb
inc
cmc
dec
mov
outsl
adc
jns
pop
sbb
push
adc
push
mov
out
test
ss
pop
xor
in
in
and
inc
jno
shrl
das
pop
shrl
call
lock
int
sub
fmulp
xor
aam
andl
adc
frstor
fcoml
and
push
roll
ja
xor
test
pop
gs
push
cltd
and
cmp
popf
xlat
dec
inc
add
divb
inc
push
pushf
fistps
add
xor
shrl
jno
xor
mov
push
dec
addl
pop
pop
mov
pop
cmp
mov
or
mov
call
std
lret
cs
addr16
subl
jmp
popf
mov
jecxz
pusha
out
pop
jno
and
fildll
cmpsl
outsl
xchg
pop
repnz
shr
lds
inc
and
sub
fcoml
inc
pop
push
sahf
loope
lock
lock
mov
hlt
dec
rorb
inc
cmpb
xor
xchg
ret
mov
mov
add
mov
inc
ljmp
push
dec
mov
cltd
or
aaa
inc
jno
daa
push
jne
pop
mov
jmp
mov
stos
nop
mov
popa
pop
lods
cmpb
jecxz
or
testb
bound
sahf
xor
pop
mov
roll
mov
xorps
jg
lahf
mov
or
jnp
outsb
mov
sbb
mov
push
out
sbb
xor
xor
aas
xlat
pop
iret
sbb
cmp
subl
inc
lahf
xlat
aaa
mov
inc
mov
sub
repnz
pop
aaa
rcl
xchg
inc
xlat
movsl
push
aad
cmp
xor
push
or
xor
dec
frstpm(287
enter
pop
cld
and
cmp
xor
inc
mov
aam
inc
rep
inc
cmovbe
or
mov
cwtl
fs
push
jnp
gs
or
loopne
movsb
xchg
pushf
test
pop
xor
jb
into
add
out
call
iret
add
call
mov
or
mulb
adc
orl
aad
pop
lea
and
fisttpl
arpl
mov
andb
jb
je
out
enter
jae
sbb
add
mov
mov
bswap
sub
dec
bound
adc
mov
xchg
jle
loope
dec
sbb
ss
inc
push
lcall
stos
fwait
cli
cld
dec
mov
ds
int
xor
dec
xchg
xlat
cwtl
inc
mov
mov
lahf
pop
mov
popa
pop
jmp
and
bound
jl
inc
stos
add
int3
mov
fsubrs
outsl
idivb
mov
mov
pop
inc
loop
pop
dec
sub
xchg
cltd
fcmovnu
in
dec
je
and
add
roll
mov
mov
sub
lods
cmp
mov
movb
cs
push
xor
sbb
out
pop
lret
into
sbb
addr16
cli
int3
xchg
jae
sbb
xchg
jns
sarl
dec
inc
fsubl
mov
lea
or
mov
xor
inc
jbe
push
pop
fldl
rcll
imul
jmp
sbb
test
lahf
js
rcl
sbb
push
mov
lret
test
stc
ret
xchg
or
inc
xchg
pop
add
add
dec
loopne
imul
sbb
dec
jns
arpl
data16
repnz
dec
sahf
jg
mov
adc
cltd
test
pop
jp
idivl
out
cmpb
out
fistps
or
sub
fsubrs
push
lods
in
cmp
xor
bndldx
hlt
mov
sub
mov
sbb
lds
mov
jae
aaa
and
jmp
negl
push
mov
aaa
sub
or
cmp
lcall
cltd
mov
sub
mov
lds
lret
mov
mov
cmp
xlat
cmp
lahf
lret
add
cmp
icebp
pop
scas
push
pop
lcall
xor
adc
push
inc
jb
xor
jecxz
inc
bound
rorb
mov
mov
ret
inc
mov
mov
repz
bound
mov
in
xchg
sub
pop
pop
adc
call
push
or
xor
sbb
je
arpl
and
aam
xlat
xchg
or
pop
jb
fsubp
out
sbb
arpl
adc
scas
sub
lahf
mov
and
popl
add
mov
pop
mov
stos
les
stos
jne
gs
sbb
je
fsubr
inc
adc
push
add
pusha
sub
mov
pop
incb
fnsave
xor
es
mov
outsb
in
lahf
xor
push
and
arpl
jne
sub
xlat
and
outsl
mov
mov
mov
mov
sbb
js
aaa
loopne
push
notl
mov
out
mov
adc
hlt
notb
notb
cli
in
pusha
jecxz
fnstsw
cmp
ss
arpl
push
notl
sbb
push
inc
mov
in
fwait
sbb
dec
std
enter
push
xor
imul
shlb
pushf
dec
outsb
in
shr
or
aam
ljmp
int
sarb
ds
add
pop
adc
inc
jmp
jmp
jmp
or
xor
aaa
lds
je
rcrl
enter
push
in
mov
mov
fiadds
inc
popf
das
fcmovnu
ja
jp
bnd
mov
pop
cltd
jecxz
dec
in
cmp
imul
inc
stc
ret
sahf
and
pop
pusha
in
cmp
or
cmp
dec
xchg
sub
fbstp
nop
sbb
and
jp
ror
add
cmp
xlat
inc
movsb
push
jl
sarb
xor
add
dec
popf
in
pushf
decl
or
loope
push
stos
ret
xor
roll
pop
xor
pop
dec
out
in
lods
in
and
push
scas
int3
loopne
es
imul
and
sbb
mov
ja
push
xor
outsb
out
push
ja
xchg
dec
dec
mov
fisubl
or
cmpsl
lahf
jmp
pop
xchg
aad
enter
push
mov
adc
adc
les
jp
daa
jle
daa
mov
cmp
bound
and
mov
pop
inc
or
out
adc
fwait
ja
js
mov
jl
hlt
sub
push
pop
clc
pop
aas
jnp
frstor
cwtl
jle
sub
lret
imul
push
out
xor
sub
cltd
outsl
mov
jns
mov
jne
jne
aam
xchg
ds
fiaddl
cmp
test
icebp
and
out
lods
repz
loope
mov
sbb
jp
xchg
pop
mov
xor
xlat
jl
adc
pop
mov
clc
push
pop
push
int3
test
iret
cmp
js
stos
data16
leave
sub
int
rolb
jo
sbb
dec
pop
xorl
cmpsb
insb
inc
jmp
jg
movsb
sub
idivb
in
pusha
inc
dec
mov
loopne
mov
push
out
push
bound
je
in
loopne
sbb
loope
imul
lahf
fisubrs
mov
adc
in
inc
inc
inc
shll
jo
mov
xchg
mov
xor
stos
mov
addb
push
cwtl
test
adc
push
add
xchg
ret
adc
mov
test
adc
push
out
mov
mov
rcll
fsubs
sahf
mov
sub
mov
xchg
shlb
lcall
stc
mov
lret
dec
pop
pop
cmpsb
xor
jo
jns
add
xchg
xor
cmp
mov
and
and
leave
roll
sbb
jo
outsb
push
fsubrl
and
lds
cld
out
lcall
or
es
insl
mov
jnp
mov
rclb
sbb
lcall
imul
push
xor
push
adc
pop
das
or
shrl
out
jbe
cmc
adc
mov
add
testb
sub
sahf
das
lahf
ljmp
push
clc
pusha
xlat
pop
test
loopne
dec
and
or
cmpsl
cmc
dec
cmp
cs
jns
xchg
mov
mov
nop
mov
sbb
adc
push
dec
repnz
xchg
popf
pop
pop
and
or
and
adcb
dec
rsqrtps
mov
push
fidivrl
jmp
sarb
dec
mov
add
xor
xchg
jmp
cmpsb
and
mov
mov
addl
inc
xchg
in
pop
adc
enter
outsb
add
jb
ljmp
mov
mov
out
mov
mov
decl
add
test
pushf
sub
imul
fsubrs
mov
movsb
push
sti
aad
inc
add
out
pop
movsb
push
mov
hlt
dec
mov
scas
or
cli
int3
repnz
fiadds
mov
xor
fwait
jno,pt
pushf
fwait
nop
push
jl
lods
arpl
lret
dec
std
stc
lret
push
shl
arpl
xor
or
or
test
sub
int3
add
and
sbb
in
call
outsb
sub
fwait
add
sbb
jb
push
mov
jle
push
cmpsb
pop
adc
xchg
mov
lahf
jecxz
adc
add
dec
xchg
pop
mov
or
aad
fmulp
or
cli
push
mov
mov
mov
adc
push
and
ja
rclb
lods
pop
xlat
mov
push
jo
or
popf
ljmp
push
std
test
stos
or
test
or
aad
or
or
mov
cmp
cmp
rcrb
into
push
xlat
out
cmpsl
popf
cs
cmp
mov
pop
shll
sub
inc
inc
lds
or
mov
inc
shlb
lahf
mov
jmp
mov
jge
mov
fcomps
cmc
sub
mov
pusha
in
add
movsl
out
dec
mov
lret
packuswb
pushaw
jmp
test
mov
outsl
sub
aam
add
jb
push
xlat
cmp
cwtl
test
es
add
xchg
xchg
rolb
adc
lret
cmp
fstl
dec
mov
hlt
push
sbb
cmp
ss
out
cmp
stos
dec
jle
cmp
lods
faddl
inc
int
loopne
adc
mov
cmp
xchg
xor
pushf
gs
mov
data16
pop
jnp
lret
hlt
mov
test
adc
mov
or
gs
rcrl
push
aas
cmc
cmpsb
repnz
pop
aam
rcrl
mov
mov
jp
push
fiaddl
pop
dec
mov
leave
dec
shrl
push
minps
pop
mov
sbb
hlt
dec
loop
pop
inc
add
into
imul
gs
and
scas
mov
jnp
dec
cmp
mov
insb
ljmp
in
dec
or
jmp
test
xchg
pop
pop
push
repz
adc
mov
in
sbb
jmp
pop
call
push
mov
pusha
mov
lea
push
cli
in
cmp
and
in
out
inc
push
adc
push
jno,pt
pop
push
xor
inc
inc
fisttpll
inc
xorl
out
lea
andb
add
mov
xor
xor
loopne
mov
lret
fsubs
dec
xor
jbe
aaa
jnp
sub
jns
jg
push
in
dec
lds
pop
add
pop
mov
pinsrw
pop
je
fbld
je
icebp
stc
dec
out
push
xchg
aaa
inc
test
cltd
ret
iret
inc
mov
mov
inc
pand
loope
and
cmp
xchg
cmp
jge
xlat
std
mov
nop
gs
or
mov
xlat
inc
xchg
sub
pminsw
xor
pop
fdivl
inc
js
ljmp
ficomps
mov
scas
dec
outsl
add
pusha
dec
inc
movsb
inc
or
add
push
repnz
xor
pop
iret
mov
inc
iret
cmovle
pop
dec
dec
sbb
pop
add
into
add
aad
mov
clc
into
in
out
aad
cmpsb
sub
stos
pop
jo
xor
ret
movsl
jg
xor
scas
cmpl
sbb
lahf
imul
cmp
add
push
jo
daa
and
and
ret
jmp
sbb
pop
push
inc
and
addl
mov
cwtl
fs
inc
push
mov
int3
xlat
jne
mov
sbb
mov
ljmp
insb
mov
dec
or
or
dec
or
sahf
scas
pop
mov
or
push
repz
cmpsb
mov
fwait
and
jae
mov
cmpsl
mov
je
insb
jne
xchg
insb
rorl
pop
cmpl
jae
dec
test
scas
js
and
int3
mov
ja
sub
push
and
popa
lock
cmp
cmc
sbb
repz
rorb
aas
xchg
inc
outsl
jns
fnstsw
stos
jns
es
or
movsb
ret
jmp
loop
hlt
mov
mov
xchg
lahf
dec
xchg
testl
mov
mov
and
movb
cwtl
lods
mov
mov
outsl
fdivs
add
mov
mov
ljmp
sti
and
jecxz
aaa
sbb
jb
sub
out
scas
outsb
mov
xchg
stc
cmp
lcall
ret
dec
imul
fs
and
adc
lods
adc
adc
cmp
ja
fwait
inc
mov
inc
and
shlb
sti
cltd
push
repnz
jns
outsb
in
mov
pusha
out
jmp
and
cmp
inc
sub
and
rol
sbb
mov
sbb
xor
movsl
fs
cld
bound
sarl
xchg
sub
mov
outsl
lods
sub
inc
push
lock
loopne
test
cmpsl
push
cs
jo
imul
mull
fcompl
adc
dec
pop
lods
aaa
push
push
setnp
dec
lds
mov
jl
shl
out
out
and
adc
aaa
clc
lret
mov
mov
call
xchg
test
lds
xor
or
stc
mov
jmp
xchg
stos
ljmp
inc
push
dec
sti
or
dec
sti
in
test
insb
faddp
out
icebp
js
pop
inc
xchg
ret
shl
jmp
mov
inc
data16
inc
movsb
adc
pop
mov
push
dec
add
repnz
add
aas
inc
outsb
push
in
jmp
roll
mov
ret
inc
adc
inc
in
movsl
outsl
sbbb
in
ret
xor
mov
ret
mov
adc
lea
insb
lods
jns
popf
push
add
mov
out
or
mov
out
mov
mov
cmp
adcb
or
xlat
ja
jae
lret
or
nop
cli
scas
testb
mov
push
loop
xor
adc
popw
es
aaa
test
and
aam
fistl
popa
xlat
cmp
push
repz
cwtl
add
repz
dec
mov
or
arpl
mov
sar
pusha
ja
xlat
xor
fimull
test
fwait
negl
sub
pop
sbb
push
jl
pop
out
stos
outsl
mull
pop
repz
lds
mov
dec
mov
insl
push
mov
dec
push
add
loop,pn
sub
call
mov
add
push
test
in
test
adc
cmp
fildll
xchg
rorb
test
movsb
cld
mov
movsb
dec
test
jnp
xor
cmp
and
xchg
sahf
xor
lret
movsl
and
sub
fs
notl
popa
jmp
aam
push
std
xor
lds
mov
mov
lcall
mulb
or
sti
ficoml
jl
arpl
pop
test
mov
fdivrl
cmp
xor
dec
popa
dec
mov
push
mov
popf
dec
jns
cld
push
stos
mov
shl
addr16
into
xchg
into
pop
jmp
jno
dec
or
sub
mov
xchg
loopne
std
scas
add
icebp
daa
hlt
or
movsl
xor
mov
push
or
dec
mov
or
pop
fdivrp
push
repnz
loopne
push
cmp
pop
cmc
aam
lock
xchg
test
pushf
xchg
cmc
inc
inc
mov
ljmp
shl
mov
filds
out
xor
mov
pushf
icebp
push
scas
fcmovnu
xchg
jmp
mov
push
enter
xor
push
adc
adc
sbb
subl
pop
xor
cmp
lahf
pop
adc
xor
dec
xor
mov
lds
add
imul
lds
xor
sti
lds
incl
dec
dec
movsb
scas
push
jb
and
add
icebp
inc
aas
and
xchg
ljmp
icebp
mov
push
cs
pop
repz
pop
xor
jnp
aas
sub
xor
jb
or
outsl
into
test
nop
mov
mov
dec
cmpsl
or
fsts
cmpsb
dec
mov
xor
in
and
pop
push
jmp
sahf
and
jl
lea
popf
mov
ljmp
push
sbb
xchg
decb
jl
pop
test
lock
ret
mov
daa
and
xchg
mov
xchg
stos
push
cmp
cmc
adc
bound
add
je
adc
jle,pn
pop
cli
or
xchg
pop
arpl
lds
add
fs
or
lahf
repnz
hlt
in
mov
add
adc
fwait
adcb
or
test
fisttps
icebp
jb
pop
jbe
push
fsubs
xchg
lods
orb
ficomps
out
mov
dec
mov
xor
jg
subb
and
mov
add
mov
cmpsl
add
pop
push
ret
pusha
cwtl
out
ficompl
and
aam
scas
fildll
mov
stos
fcomps
cmp
dec
rcrb
pop
ret
or
ja
sub
orb
imul
lret
andl
adc
mov
mov
mov
loope
cmpsb
imul
scas
ret
aad
mov
jmp
and
add
cs
int3
sbb
arpl
mov
lcall
mov
addr16
in
sbb
hlt
xchg
and
outsb
mov
scas
sub
pop
mov
loopne
jbe
lret
daa
inc
cwtl
andl
fisttpll
pop
sbb
std
sub
pop
movsl
pop
in
test
fwait
inc
push
mov
arpl
add
imul
inc
adc
lds
jp
xchg
xor
enter
push
addb
sbb
scas
push
es
push
lods
orb
fisubrl
cmp
add
adc
push
je
sbb
cli
int
cmc
adc
lods
xlat
xor
push
pop
jmp
sarb
scas
add
add
test
cmp
cli
xlat
scas
jle
fcomip
rclb
mov
imul
pop
sti
mov
cmpsb
jo
lods
testb
iret
mov
pusha
push
pushf
or
xchg
addb
mov
mov
mov
outsl
xor
int3
adc
mov
fcompl
sub
mov
and
xor
mov
rcl
pop
sub
andb
pop
push
repz
lret
mov
mov
or
addr16
fimuls
lock
aaa
add
shlb
sbb
mov
pop
ljmp
inc
dec
sti
dec
add
push
bound
push
and
in
sub
shll
pop
cmp
cmp
pop
test
loope
or
xor
data16
fscale
and
and
lcall
cmc
negl
sbb
mov
sti
ret
in
fmull
test
sbb
popa
lods
jno
dec
aam
and
inc
jno
mov
stos
jge
jo
xchg
popa
lea
das
arpl
in
out
int
add
adc
lret
inc
jns
xor
andl
fsin
daa
mov
lea
push
jnp
es
pop
or
fdivs
mov
jle
jecxz
in
leave
mov
insb
dec
shll
or
adc
stos
jae
loop
or
and
mov
push
xlat
insl
xchg
lret
mov
mov
dec
in
aas
inc
inc
repz
push
or
sub
aas
push
imul
xchg
daa
inc
xor
aaa
out
hlt
pop
movsb
add
lock
int3
add
dec
adc
xor
mov
or
inc
sarl
mov
push
add
dec
inc
mov
xchg
imul
popf
mov
dec
xchg
dec
or
aam
insb
xchg
stos
push
jecxz
and
loopne
sahf
out
xchg
sub
data16
lods
testl
loop
mov
loope
enter
xlat
les
pop
pop
add
push
push
dec
inc
fwait
ljmp
out
test
and
insb
mov
out
sti
popa
sbb
sbb
cmp
stc
loope
fs
pop
fs
mov
xchg
aam
mov
nop
out
ficoms
jno
mov
fld
ret
lods
pop
scas
scas
mov
jmp
fldl
add
mov
icebp
mov
dec
cmpsb
jno
ss
mov
or
and
insl
or
pop
addr16
pop
insl
sbb
mov
sub
inc
out
lret
test
fcompl
das
mov
subl
into
js
pop
mov
jg
aaa
xor
adc
push
xchg
push
addr16
and
sub
mov
sarb
xchg
mov
jno,pt
jle
cmp
add
push
inc
cmpl
dec
push
jmp
xchg
inc
pop
or
jne
cmp
sti
rorb
int3
push
stc
jge
fildll
je
push
or
jg
add
gs
ja
fsubrs
daa
inc
dec
mov
sti
mov
adc
scas
addr16
fdiv
das
add
sub
movsb
jl
adc
xchg
sbb
cmpsl
nop
mov
xor
lds
mov
jle
int
inc
ret
rclb
cmpsb
sbb
cld
inc
enter
mov
inc
mov
push
daa
enter
test
adc
xchg
sbb
fnstenv
or
mov
mov
xor
icebp
stos
insb
and
stos
cmp
mov
fimuls
cmp
push
outsb
in
pop
push
insl
movsl
or
adc
scas
push
mov
adc
pop
mov
xchg
push
lcall
jp
mov
push
jno
mov
shll
adc
addb
shrl
sbb
adc
shlb
dec
mov
ret
push
test
lock
lret
fisttpl
jns
rol
in
dec
icebp
cltd
dec
pusha
push
pop
lods
cmc
push
adc
lods
outsb
test
add
jmp
mov
xor
inc
mov
jg
jnp
push
repz
sar
sbb
dec
f2xm1
dec
jmp
notb
dec
mov
outsb
push
pop
popf
loopne
inc
add
pop
lahf
xlat
js
or
mov
inc
cld
test
rcll
cmpsl
mov
inc
int
mov
sahf
sbb
cmp
std
mov
push
jne
daa
daa
js
loop
testl
or
adc
add
xor
add
cld
mov
push
adc
sub
cmp
or
inc
aad
mov
sbbl
cwtl
or
fistpll
push
outsl
pop
xchg
jmp
popa
and
sbb
movsb
dec
fists
je
fmuls
stos
sub
ja
xchg
sub
cmp
outsl
mov
inc
pop
mov
adcl
mov
mov
or
loop
inc
dec
add
jae
stc
test
fwait
jg
dec
push
inc
sahf
lea
das
sbb
loopne
icebp
test
pop
fisttpll
mov
and
mov
int3
jge
call
lods
outsb
mov
rcll
xchg
xchg
jae
stos
push
outsb
movsl
fidivrs
pop
inc
pop
mov
fsubr
xor
and
mov
repnz
xor
xchg
mov
stc
inc
adc
ret
mov
bound
xor
repnz
fdivl
mov
jge
xchg
jbe
int
enter
cmpsb
adc
pop
in
xchg
xor
xor
mov
aam
pushf
push
imul
scas
pop
shl
inc
cmpl
xor
shll
xchg
aad
aam
into
mov
jns
mov
pop
hlt
call
enter
enter
sbb
ss
fisubs
jecxz
or
mov
cmc
mov
jge
cs
inc
or
and
jbe
lcall
xor
dec
bound
mov
aam
ret
imul
sbb
mov
pop
lahf
aad
sub
jl
leave
mov
orl
jle
cmpsl
sub
sbb
loopne
jae
insl
jecxz
inc
loope
push
out
pop
ljmp
out
sub
imul
in
addb
push
dec
dec
test
add
mov
imul
jg
cmpsb
fwait
out
and
fs
das
push
call
sbb
hlt
out
sarb
insl
rcrl
int3
pop
push
push
ror
testb
or
mov
jmp
hlt
iret
ret
arpl
inc
or
in
dec
movsb
xor
adc
pop
push
or
push
adcl
cmc
inc
cmp
dec
sbb
outsl
ds
ja
jo
test
push
or
and
clc
imul
pop
call
mov
test
shlb
mov
and
push
and
inc
inc
sbb
pop
xchg
lds
leave
lea
sbb
outsb
inc
jmp
mov
aas
in
stc
jle
movsb
cld
xorl
push
shl
arpl
sbb
daa
xchg
xchg
mov
sub
cmpsb
int3
aaa
or
ficompl
into
fs
adc
sub
or
pop
sub
les
lret
cmp
sub
scas
sbb
cmpsb
cmp
dec
mov
js
sbb
sub
fisubrl
jns
push
ja
dec
cli
mov
cltd
fs
mov
data16
cmp
sbb
mov
xchg
fists
cmpsb
mov
cmp
fcompl
iret
mov
into
orb
popf
fidivrl
push
cld
inc
outsb
lea
dec
pushf
loop
mov
jmp
lods
jnp
mov
lahf
or
pause
int
dec
cs
stc
mov
jg
ficompl
xor
sahf
sub
int
cmp
cld
cli
lods
sti
notl
inc
or
in
or
leave
push
xchg
xchg
mov
sub
ljmp
push
sub
cwtl
inc
mov
cmpsl
aaa
imulb
mov
test
test
add
add
mov
cmp
int
cli
icebp
adc
pop
lret
clc
fs
andb
std
lods
jp
nop
dec
leave
movups
nop
inc
mov
pop
mov
inc
and
jg
cmc
insl
lea
in
fsubr
mov
jns
adc
imul
pop
adc
xchg
push
test
clc
sub
cmc
ljmp
mov
add
fimull
cmpsb
push
xchg
clc
insb
sahf
in
aas
mov
scas
dec
insb
inc
fdecstp
enter
add
mov
mov
add
ffreep
loop
jnp
cs
dec
out
popa
or
xchg
mov
in
leave
sub
mov
lret
add
and
ds
test
sub
mov
cmp
pop
std
mov
js
dec
xor
adc
sub
jno
loope
dec
aad
cld
push
inc
inc
xchg
rolb
inc
add
mov
push
mov
sbb
xchg
pushf
loope
stos
test
adc
frstor
or
popf
clc
cli
inc
and
mov
imul
in
mov
cli
pop
loopne
inc
sti
push
bound
jecxz
ret
xchg
xor
sbb
mov
mov
out
mov
push
and
add
lret
aaa
movsb
push
in
mov
push
inc
xor
cmp
add
cli
repnz
insb
mov
js
out
outsb
mov
pop
idivl
push
or
nop
mov
push
xchg
mov
or
shrb
rcll
dec
and
lcall
icebp
pop
cmpsb
sub
sbb
repz
lods
adc
mov
fsts
cmp
and
mov
stos
outsb
inc
fs
daa
stos
jo
sub
scas
sbb
aas
int
sub
lahf
mov
ds
insb
mov
push
push
test
adc
sub
jp
pop
sbb
inc
ja
jmp
aas
enter
je
icebp
mov
adc
in
inc
cld
xor
sbb
stos
ja
bound
int3
ss
lods
sbb
dec
jae
into
loopne
test
mov
ss
mov
ja
testb
sub
jae
cmpsl
js
outsl
cmp
add
adc
adcb
icebp
je
jno
dec
mov
ficompl
dec
add
in
aaa
int3
cmp
jnp
repnz
aad
cmp
in
push
mov
sub
adc
test
or
cmp
push
jle
jle
inc
inc
or
pop
test
lds
cwtl
rcll
loope
and
rorl
scas
push
ljmp
jbe
inc
sbb
subl
inc
insl
incb
mov
popa
sub
push
pop
rcrl
pop
insb
xor
dec
adc
inc
xchg
and
ja
das
fwait
mov
dec
test
pushf
xchg
inc
pop
call
lock
icebp
addr16
outsb
inc
xor
jg
mov
push
cmp
imul
addr16
jl
std
adc
cmc
loope
dec
push
push
inc
add
push
sbb
rcrl
inc
dec
jo
jp
into
jo
adc
mov
cmpsb
xchg
inc
adc
sub
adc
shl
dec
ret
ds
outsl
add
cmc
lods
and
xchg
xor
addl
enter
into
ljmp
pop
xchg
push
ds
add
sub
ror
fstl
lods
and
lcall
in
mov
mov
adc
or
pop
sub
adc
inc
cltd
inc
shll
lret
inc
rcr
inc
scas
pop
cmpsl
testb
fdivr
inc
sub
pop
lret
adc
aas
jmp
call
cmp
xor
outsb
iret
and
adcb
jb
lahf
dec
xchg
xor
clc
add
addl
xorb
mov
push
js
mov
ss
lods
or
fstl
add
loope
push
mov
push
movsl
dec
leave
mov
sbb
lret
rolb
lahf
or
imul
inc
gs
lcall
hlt
arpl
push
jae
cmp
hlt
rcll
jb
repz
pop
mov
insl
es
jb
push
fisubs
fadds
pop
sahf
push
test
xchg
sbb
out
adc
jg
lock
test
out
inc
scas
jmp
jg
add
mov
enter
cmp
inc
dec
mov
dec
xchg
cmp
mov
pop
popa
and
xchg
stos
push
in
aam
clc
cltd
mov
cs
adc
jge
bsr
ret
mov
fdivl
fidivrl
xchg
mull
out
scas
xor
cmpl
sbb
bound
jle
adc
cmp
push
ret
clc
add
dec
sub
push
cld
mov
pop
xchg
lret
adc
mov
pop
ss
push
imul
mov
xchg
je
mov
add
in
fnstsw
aaa
pop
icebp
cltd
adc
xchg
adc
pop
rclb
mov
jg
stos
cmp
imul
pop
stc
int
xor
mov
lods
frstor
and
and
daa
sub
mov
ficompl
cmp
or
adcl
cmp
adcl
mov
pop
adc
jle
inc
xchg
lret
in
mov
jp
in
mov
dec
add
js
std
sub
mov
and
add
aas
loop
sub
lds
cmc
subl
or
leave
pop
jecxz
mov
xor
mov
and
jb
xchg
cld
sbb
test
cmc
mov
cmpsl
push
cmpsl
push
dec
jl
out
or
jnp
pop
sub
xchg
ret
fadds
fucomp
sbbb
pop
inc
clc
xchg
mov
aad
daa
push
xchg
ljmp
cmc
fnstenv
and
out
adc
adc
mov
or
fistpll
mov
rcll
mov
mov
daa
sbb
pusha
dec
jg
sbb
ret
jecxz
aad
xor
ds
jo
jb
andb
xlat
and
pop
pop
ljmp
pop
test
mov
xchg
popa
rolb
jg
test
fwait
test
cld
mov
mov
pusha
fisubl
dec
add
addr16
lock
rol
lret
cmp
addr16
mov
mov
pop
rorb
xchg
cmp
aas
push
es
into
rcrb
jo
popf
test
fsqrt
bound
dec
inc
mov
jle
xor
add
jnp
sub
data16
stos
push
mov
cs
cmp
shll
sub
cmpsb
orb
ficoms
pop
jo
push
adc
and
imul
popl
mov
xlat
subl
xor
pusha
mov
cltd
imul
jo
shll
inc
push
inc
sub
aaa
dec
repnz
push
dec
mov
mov
pop
test
test
ficoms
incl
mov
add
fcoms
in
inc
imul
aas
mov
dec
sub
and
test
dec
jns
in
mov
jp
shll
push
or
lcall
mov
mov
push
stos
mov
lds
and
popa
mov
dec
jmp
lahf
adc
fstl
clc
or
pushf
push
test
scas
push
fisubs
into
mov
lret
mov
icebp
mov
or
add
test
cmp
call
insb
mov
sub
xor
out
mov
cmc
test
test
cmp
jnp
jns
mov
mov
icebp
xlat
cmp
cmpsl
outsb
add
ja
int
or
xchg
sbb
xchg
jnp
xorb
mov
inc
fwait
ret
dec
xor
popf
stc
mov
mov
cmp
or
sub
cltd
aas
sbbb
fcoml
push
jnp
sbb
hlt
push
adc
xor
lea
pop
pop
iret
xchg
mov
cli
sbb
sahf
in
mov
jae
hlt
stc
shl
push
and
outsb
xor
jp
aam
sbb
xchg
rcrb
fistpll
iret
ret
and
sahf
push
dec
lahf
cs
movl
iret
push
mov
pop
pop
inc
or
jmp
jle
jae
icebp
jno
pop
mov
int
shrl
rcll
mov
and
mul
xchg
cmovns
fstl
out
mov
in
stc
imul
sbb
jne
xchg
outsb
gs
lahf
push
mov
jbe
lret
mov
pushf
outsl
cmp
lock
push
push
test
inc
popf
cmp
mov
cmp
stc
and
add
je
out
mov
insl
ror
or
dec
test
pop
mov
lret
push
repz
lret
ret
mov
addl
cld
xchg
push
pop
jmp
in
inc
dec
int
jbe
push
loopne
mov
sbb
es
scas
lcall
outsb
or
mov
cmp
mov
in
push
adc
dec
mov
xor
xor
or
lea
shl
aad
int3
orb
push
loope
adc
dec
pop
lea
lret
shlb
mov
mov
lcall
sbb
leave
loopne
mov
aaa
adcb
pop
data16
mov
scas
popf
lcall
outsl
pusha
mov
or
jbe
inc
aaa
xchg
pop
mov
loope
ret
xchg
sti
mov
shlb
subb
pop
insb
mov
rorl
int
aas
mov
or
inc
push
in
sub
inc
orl
stos
mov
mov
das
inc
xlat
push
mov
pop
xor
test
adc
pop
stos
mov
cs
mov
inc
outsl
adc
lret
popa
xchg
or
subl
xor
ret
cwtl
lock
jl
aad
lea
mov
sbb
xor
adcb
inc
fsubrl
jne
fwait
mov
test
pop
lahf
inc
mov
sbb
int3
mov
cltd
dec
or
rcrl
push
xchg
sti
icebp
in
lret
pop
lods
mov
mov
fst
flds
jl
mov
repz
jge
enter
sbbb
aam
call
xor
inc
adc
cmpsl
dec
lahf
das
and
lock
ret
flds
mov
adc
repz
ret
pop
out
aas
xchg
popa
lea
dec
push
jne
lods
adc
je
pop
sbb
mov
nop
popl
adc
add
insl
sahf
ret
enter
pop
in
push
outsb
int
lret
xchg
test
insb
lds
add
adcb
push
dec
shlb
andb
icebp
out
js
loop
bound
mov
repz
xchg
jo
sbb
cld
lcall
addr16
dec
fistpl
xlat
nop
xor
or
add
aas
or
call
ficoms
lods
push
cmp
popa
and
xor
mov
xchg
xor
xchg
mov
mov
fsubs
fidivl
add
incl
lret
fidivrs
cmp
sbb
cmc
push
mov
jl
xchg
add
shl
mov
mov
mov
cmpsb
adc
and
pop
mov
pop
sbb
dec
mov
pop
push
mov
cld
dec
aam
rcr
adc
mov
popa
dec
arpl
scas
xor
js
leave
jo
lcall
sub
ja
mov
xlat
inc
test
in
iret
ljmp
add
stc
out
cmp
push
pop
sub
push
leave
push
cmpsl
jbe
imul
pop
xlat
xchg
jle
mull
xchg
sbb
sbb
xlat
jmp
js
rcl
bound
pop
ficompl
cmp
sub
push
adc
out
aas
enter
sbb
dec
inc
shrl
inc
gs
add
xorb
xchg
cmpsb
push
or
pop
iret
mov
shlb
inc
mov
fs
inc
dec
test
adc
xor
aas
fsubs
mov
lock
pop
je
sub
or
jle
test
dec
jo
or
add
addr16
sbb
mov
ret
pop
adc
add
sbb
xlat
inc
fs
jb
lods
in
sbb
adc
mov
inc
xor
fsubrs
lods
xchg
icebp
jno
push
cmpsb
xchg
lods
dec
sahf
push
jecxz
insl
mov
pop
adc
in
sub
loope
push
arpl
jns
xchg
aad
std
adc
jno
insb
push
dec
sub
loope
inc
or
fsubrs
jp
xchg
scas
or
dec
or
clc
adc
into
ja
mov
insl
fildll
in
jl
aad
cld
ret
pop
roll
mov
pop
cld
insl
mov
adc
mov
mov
xchg
test
mov
inc
jno
xor
sbbl
inc
xchg
pop
or
adc
mov
push
in
sub
mov
std
pop
sbb
jns
jg
sub
rcrb
fstl
ret
xchg
push
out
sahf
pusha
adc
jnp
cmp
imul
mov
mov
dec
pop
mov
sbb
shl
shl
jnp
movsb
scas
and
jns
mov
dec
popf
pushf
sbb
ljmp
popf
inc
mov
cmp
fdivs
sti
mov
jge
imul
sub
popl
inc
aad
leave
ret
adc
test
arpl
dec
pop
aaa
sbb
xchg
push
mov
or
mov
xchg
out
imul
push
popf
enter
mov
adc
and
leave
inc
mov
inc
jbe
xchg
xor
js
cld
xchg
xor
pop
push
jg
sub
sarb
pop
push
nop
xor
jmp
fnstenv
cmc
scas
inc
push
in
hlt
cmp
jl
pop
mov
mov
inc
pop
or
jg
cld
lods
aam
or
stos
lock
ds
pop
sbb
or
xor
adc
push
insl
ds
out
jne
mov
aad
add
adc
roll
pop
mov
mov
clc
aam
imul
cmp
test
jg
pop
cmpsl
mov
fcmovbe
int
movsb
rep
pop
mov
mov
lods
lahf
je
mov
jo
mov
jecxz
mov
jb
insb
and
enter
sub
jge
adc
xchg
xchg
imull
xchg
sahf
inc
pusha
push
jb
popf
pop
nop
push
jo
sar
ret
jae
rclb
inc
cmp
mov
cmp
or
xchg
movsb
mov
dec
pop
dec
sbb
push
fwait
jge
adc
adc
xlat
and
iret
aaa
push
mov
imul
iret
sti
adc
xor
dec
jmp
push
mov
mov
test
push
iret
cltd
call
xchg
xchg
imul
int3
movsl
adc
or
lock
mov
push
push
mov
jb
pop
stos
inc
out
cld
outsb
pop
lock
xchg
cmp
pop
pusha
and
leave
dec
ret
pop
fwait
xchg
dec
dec
xchg
test
jle
pop
mov
imul
insl
sbb
xor
fmuls
cltd
clc
add
jo
pop
ljmp
adc
xor
pop
or
stc
loope
sub
mov
push
adc
pop
and
leave
sbb
mov
loop
xchg
and
mov
in
ss
movsl
xchg
rcll
sbb
cmp
push
xor
sbb
loope
mov
push
pop
sub
xchg
call
xchg
test
cmp
push
imul
pop
push
xorl
aaa
xchg
das
mov
add
int
outsl
mov
rcrl
inc
jmp
idivl
or
cwtl
mov
lods
mov
std
pop
outsl
lods
imul
mov
std
pop
sbb
pushf
mov
and
fmulp
dec
cs
movsl
scas
pop
fcoms
cld
addl
mov
or
sbb
and
mov
fstpl
jno
xor
or
cmpxchg
mov
mov
out
and
mov
xor
mov
cmpl
inc
mulb
sahf
xchg
inc
lea
mov
xchg
or
icebp
sahf
push
ret
push
mov
push
insl
push
in
xor
xlat
inc
cltd
in
xchg
xchg
int3
int
flds
mov
adc
in
cltd
cmpsl
stos
pop
ja
jbe
out
sti
sub
xchg
mov
push
movsb
test
leave
out
jns
inc
repnz
testb
sti
insl
call
jno
pop
adc
in
adc
and
adc
std
hlt
stos
cwtl
scas
adc
int
imul
adc
mov
or
sbb
or
pusha
jns
popl
push
xor
test
cmp
shlb
xor
pop
push
adc
fst
dec
negb
lea
push
inc
shlb
cmp
dec
inc
test
clc
and
cmp
jno
jne
and
mov
sbb
mov
stos
ja
je
popl
call
cmpsb
inc
insb
insb
xchg
sarb
sbb
arpl
lea
addr16
dec
outsl
jno
jp
or
in
mov
lock
test
push
jl
cld
sbb
push
and
loop
shlb
pop
mov
cs
fwait
and
ret
mov
jbe
pop
adc
jb
mov
andb
sub
push
inc
popf
pop
fs
pop
cmp
fnstcw
je
sub
setg
cld
es
or
mov
dec
outsl
and
enter
dec
shlb
movsl
out
cmpsl
mov
sbb
push
arpl
dec
mov
aas
cmc
icebp
bound
in
xchg
je
into
fistl
iret
inc
in
jmp
xchg
or
movsl
jno
cli
nop
out
jl
lahf
push
icebp
xchg
jno
xchg
xchg
xchg
jmp
pop
xor
xor
aas
les
xor
rol
and
jae
sub
jge
js
sub
push
jp
call
xor
or
imul
test
mov
push
and
rorl
lea
pop
scas
aad
xchg
push
sub
add
movsl
jl
mov
js
clc
scas
mov
nop
insl
sbb
sub
cmp
adc
or
add
cmp
pop
mov
and
sbb
cmp
addr16
cmp
or
lahf
cmp
cltd
mov
ret
fsubrl
sti
pushf
clc
or
push
test
sub
rcll
mov
cld
xchg
mov
test
imul
lds
jo
jp
push
xor
aam
movsl
cld
outsl
xchg
test
jle
adc
imul
adc
adc
pop
loop
dec
mov
aaa
cmpsl
dec
pop
ficompl
ja
pop
adc
pop
adc
add
dec
jb
stc
cmc
mov
mov
and
add
jb
inc
pop
and
sub
mov
add
cmpsb
aam
test
pop
gs
mov
lahf
test
sti
push
xchg
out
test
das
xchg
pop
add
push
jl
and
cmp
mov
repz
xchg
xorl
test
mov
and
push
inc
cmp
sub
dec
push
scas
mov
shll
push
and
fcoms
mov
aas
pop
pop
and
movsl
neg
sbbl
and
push
lahf
fucomip
and
dec
arpl
dec
jg
pop
push
sub
sbb
sbb
fmuls
inc
lret
fwait
mov
mov
fidivl
fs
cmp
and
pop
sti
push
mov
shll
in
fnstenv
sbb
popa
rcl
test
adc
mov
inc
imul
xchg
push
jbe
add
jg
or
ficoms
pop
add
jmp
scas
les
mov
in
mov
mov
hlt
mov
cmc
and
bound
movsl
scas
icebp
xor
mov
ret
jno
out
ja
add
pop
test
xchg
add
inc
sub
repnz
outsl
mov
mov
jno
cmp
mov
out
sbb
push
ljmp
scas
cmpsb
fs
jno
rcrb
ret
and
test
push
push
and
sar
addr16
push
or
cld
pop
movsb
imul
xchg
adc
loopne
hlt
sbb
jl
loopne
mov
dec
js
jo
push
mov
mov
pop
pop
xchg
sbb
rcl
inc
mov
outsb
sub
lods
pop
dec
push
adc
loop
inc
fbstp
or
or
inc
fbld
scas
aam
push
adc
jno
cli
cmpsb
scas
outsb
clc
repz
cld
add
decb
lock
add
adc
pop
adc
out
sahf
mov
adcb
cltd
add
jmp
ljmp
mov
sbb
mov
add
ficompl
inc
inc
pop
and
mov
xchg
inc
add
mov
push
jno
adc
out
add
sbb
add
jp
mov
or
ret
lret
stos
cmc
cmp
pusha
or
xor
pop
out
fcompl
push
xchg
lcall
stc
dec
dec
test
into
icebp
sbb
pusha
inc
lret
mov
mov
orl
sub
and
add
mov
sti
jge
xchg
call
fistpl
pop
cmpsb
outsl
hlt
jp
mov
push
xchg
js
cwtl
pop
clc
xchg
lea
sarb
es
lock
jl
adc
pop
adc
jge
push
icebp
imul
imul
xor
xchg
mov
inc
adc
sarb
out
jns
xor
or
add
hlt
mov
sub
dec
sub
cmp
mov
mov
push
out
and
pusha
add
lds
pop
mov
xor
cmc
pop
jle
lret
mov
and
xlat
push
xchg
loop
fistpl
jno
or
dec
aas
xor
das
fcompl
xor
inc
pop
ja
ret
out
xor
fcomps
mov
xlat
jp
clc
jo
jg
enter
mov
enter
mov
daa
jb
into
dec
dec
jae
cs
push
or
jo
mov
mov
mov
cmp
adc
mov
and
jae
sub
fs
sti
dec
ljmp
dec
movsl
leave
mov
outsb
outsb
cmp
mov
mov
std
push
push
loope
dec
rcl
jecxz
shl
sub
out
cmp
jno
sahf
xor
jb
jp
insl
push
imul
imul
lock
pop
clc
sbb
pop
push
cmp
int3
in
adcl
jg
fiadds
test
fists
xchg
mov
mov
cwtl
pop
aaa
pop
ljmp
fsub
cmpsb
jo
jp
push
cwtl
xor
call
pop
fcmovnbe
loop
mov
nop
xor
in
loop
ljmp
xchg
sub
jb
pop
jnp
add
js
in
xor
xchg
mov
cbtw
add
orb
and
mov
stos
push
out
pop
rcll
rorb
cli
rolb
mov
or
sbb
fcomps
test
shlb
xchg
icebp
rcl
and
push
movsl
pop
mov
adc
sbb
sub
mov
adc
sbb
lock
adc
sub
sub
mov
inc
int
or
jp
outsl
pop
test
sub
adc
insl
xor
sbb
or
subb
notl
push
add
std
adc
xchg
test
daa
decb
pop
scas
insb
mov
jne
ja
xlat
jb
or
cmp
ds
mov
sub
adc
fcomps
mov
inc
arpl
iret
idiv
stos
jmp
sbb
adc
pusha
and
xor
jp
sbb
adcb
addl
mov
mov
adc
inc
lahf
or
inc
pop
or
sub
inc
out
fistpll
xorb
aaa
push
inc
dec
movsb
lret
adc
adc
ret
dec
mov
jge
div
pushf
je
fs
mov
push
and
sub
in
and
stc
lret
movsl
jnp
js
insb
mov
mov
dec
scas
fs
test
adc
inc
movl
pop
push
lods
cld
lds
lods
lret
xor
dec
sbb
pushf
jl
and
es
pop
pop
adc
pop
or
mov
jp
cmp
jae
sbb
ja
add
in
pop
and
lahf
xor
xor
cltd
cmp
out
xchg
xor
jae
imul
adc
xor
loope
out
mov
bound
scas
xchg
mov
cmp
loope
jecxz
push
cmpsl
mov
add
and
pusha
push
push
pop
mov
das
xchg
and
insb
lcall
mov
je
mov
aaa
push
pop
inc
in
ds
clc
mov
adc
mov
out
loope
les
pop
jnp
enter
add
lock
mov
addl
js
push
mov
pop
mov
cmc
std
fbstp
cmovae
push
rcrb
push
mov
or
mov
mov
cli
mov
jmp
jp
roll
jmp
lahf
call
cmp
cli
and
js
mov
xchg
or
dec
test
es
loope
or
inc
int
xchg
jge
fcom
jl
jecxz
dec
dec
out
fmulp
mov
mov
adc
arpl
or
pop
sbb
aad
jp
cld
push
ret
lods
and
adc
imul
mov
stc
insl
sbb
pop
out
cwtl
dec
push
dec
loope
jb
leave
inc
xchg
add
jecxz
push
lea
push
fsubl
mov
es
iret
adc
stos
inc
pop
or
scas
test
mov
loop
fs
insl
mov
mov
ret
cwtl
add
das
frstor
push
push
jns
cwtl
push
movsl
shlb
xchg
mov
add
adcl
nop
mov
std
ret
ljmp
cs
mov
out
xchg
sbb
daa
or
sub
daa
outsb
clc
adc
iret
rolb
popf
push
dec
lahf
inc
xchg
mov
xor
adcl
inc
movsb
mov
out
jno
mov
mov
ljmp
xor
push
mov
icebp
inc
xor
cmpsb
movsb
sub
iret
jle
jns
push
imul
push
int3
aaa
dec
dec
inc
lock
cmp
fcomi
scas
nop
xor
cs
mov
push
jno
mov
and
mov
push
out
nop
mov
sbb
sub
jnp
cmp
rclb
sub
jge
dec
lock
pop
andl
xchg
xlat
ss
lods
push
fisubl
xor
dec
hlt
loop
stos
mov
sbb
xchg
push
mov
lret
jmp
jbe
mov
push
xor
xor
leave
loope
pop
sarb
or
mov
or
pop
sub
mov
mov
jne
pop
cmpsb
adc
leave
push
ds
test
rclb
out
ss
shrb
frndint
push
daa
loope
into
and
pop
enter
cli
cmpsb
xchg
mov
mov
rclb
orb
and
dec
fwait
lahf
dec
jl
repnz
add
pop
negl
cmp
andl
xchg
inc
test
aas
xlat
pusha
and
dec
sahf
enter
dec
roll
adc
and
imul
and
mov
mov
mov
stc
xchg
lea
pop
jle
xor
cwtl
mov
sub
shr
addr16
pusha
loopne
push
pop
fiaddl
lock
and
je
or
rclb
pusha
outsb
adc
and
pop
cmc
pop
jo
cwtl
aas
cwtl
pushf
mov
in
xor
cmp
push
or
movsl
mov
and
fdivr
repnz
or
push
sti
xchg
jno
jle
incb
dec
pop
cld
mov
cmp
cmp
int3
leave
xor
je
or
mov
cmp
sub
cli
pop
call
dec
pop
test
push
in
add
push
sbb
fstps
sub
iret
dec
mov
and
and
rcr
push
or
jmp
and
pop
idivb
jle
daa
jb
notl
xor
xchg
scas
fistpl
daa
test
mov
adc
mov
and
jle
mov
and
aaa
lods
cmp
sub
insb
fsubl
dec
or
push
data16
mov
pop
cmp
ret
fwait
jge
hlt
insl
sub
call
lcall
sti
popa
push
adc
xor
dec
mov
in
mov
push
mov
adc
inc
push
or
pop
std
rorl
imul
loopne
xor
dec
aaa
jbe
push
hlt
xchg
movsl
push
arpl
pop
jae
test
lcall
inc
rcrl
xchg
jg
out
repnz
mov
movsl
aas
loope
enter
jno
push
mov
out
fbstp
add
pop
addr16
adc
xor
xchg
aad
insb
cmc
push
out
push
push
aam
imul
imul
mov
inc
popa
cmpb
mov
jle
test
cmp
sub
xorb
jg
shrl
push
push
fisubrl
adc
sub
cmpsl
sub
inc
out
or
push
and
mov
sarb
cmp
pushf
in
nop
cs
scas
sti
stos
inc
adcl
rcrb
sub
mov
rorl
xchg
fdivl
arpl
mov
popf
push
xchg
cmp
or
mov
movsl
pop
and
rclb
js
les
and
push
push
sahf
mov
imul
cwtl
sub
popa
outsb
mov
loopne
pop
roll
in
xchg
sub
mov
fucomip
mov
jns
incl
add
pusha
mov
inc
fildl
jb
int3
xor
dec
mov
fsubs
sahf
pop
int
sahf
sub
jne
loop
std
and
adc
arpl
pop
leave
ret
sub
adc
cmp
lret
je
add
mov
mov
lock
ljmp
ficompl
jnp
scas
aad
loope
jb
cwtl
into
xchg
shrl
add
inc
ljmp
enter
call
xchg
outsb
xchg
inc
fstps
xchg
xor
jbe
repz
and
icebp
je
iret
xchg
jne
ljmp
or
rcl
andl
int3
jp
or
push
aam
add
cwtl
sub
jp
dec
dec
mov
test
leave
iret
ret
or
sbb
hlt
cli
stos
dec
mov
or
bts
mov
das
xorl
mov
in
inc
mov
mov
xor
gs
hlt
das
stos
xchg
inc
jecxz
loopne
cmp
jge
popa
sbb
mov
mov
push
add
fldl
pop
cmpsb
mov
or
lahf
rclb
or
add
ret
push
das
stos
mov
lahf
outsb
adcl
lds
add
fildl
or
xchg
push
mov
jp
mul
add
lcall
inc
cld
cmp
xorb
loope
push
sub
xorl
mov
add
ja
packsswb
xor
xchg
jno
mov
gs
iret
jl
mov
pop
push
adc
popf
and
adc
pop
cmp
push
jp
icebp
pushf
shll
pop
jb
mov
aam
xlat
mov
scas
sbb
repnz
fisubl
or
ds
mov
das
es
cmpl
aad
pop
inc
into
lock
inc
and
cwtl
cmp
sub
movsl
cmc
xor
dec
int3
or
mov
dec
or
xlat
mov
cmp
test
sub
lock
push
aad
dec
in
loope
cmp
xor
add
into
negl
leave
pop
es
movsb
push
push
and
sbbl
insb
and
lcall
dec
push
mov
pop
insl
inc
xor
dec
out
adc
inc
push
daa
enter
cmpsb
fstl
lret
cmp
enter
push
in
or
cmp
movsl
ljmp
xor
mov
jg
shrb
lock
cmc
jb
or
mov
js
mov
pop
jl
add
aas
fsts
inc
add
cmp
jp
pop
fistps
in
popw
adc
cmp
jl
jle
movl
push
and
push
in
loope
pop
and
stos
xchg
std
inc
sub
repnz
sbb
push
loopne
and
jl
dec
push
mov
ret
enter
pop
insb
xorl
ds
pop
mov
xor
imul
cli
mov
movsb
lods
or
shrl
xlat
cmp
cmp
in
sbb
js
fildll
dec
or
and
cwtl
lock
int3
insl
es
cmp
loop
add
add
sub
mov
loopne
mov
insl
stos
mov
orl
xor
xor
cli
push
insl
sbb
adc
add
push
sbb
hlt
stos
cmp
add
cmp
mov
les
dec
pop
inc
xlat
dec
inc
inc
sub
cmp
divl
pop
cmp
loopne
aam
pop
movsb
mov
loopne
ucomiss
test
xchg
xor
mov
nop
pusha
mov
adc
mov
cmp
leave
jecxz
jae
mov
pop
push
xor
mov
cli
adc
sbb
jecxz
int3
push
cmp
int
repz
imul
gs
jb
adc
nop
adc
les
in
inc
and
xchg
pop
ss
pop
imul
inc
in
jns
and
stc
lahf
ljmp
iret
data16
fdivs
fadds
inc
stos
mov
adc
outsl
cmpsl
aaa
mov
jle
sti
dec
push
mov
dec
sbb
addr16
jmp
inc
dec
cltd
jne
ficoml
test
and
push
loope
xchg
imul
test
add
into
cltd
and
cwtl
imul
inc
cmpb
stc
jae
inc
pop
mov
jge
and
mov
push
sub
enter
sbb
jp
mov
scas
mov
and
pop
pop
outsb
push
sbb
add
inc
mov
xorl
loop
aaa
or
inc
rcll
ret
xor
insb
lock
cli
dec
push
notl
test
in
jp
lahf
xchg
adc
std
nop
xor
sahf
sahf
mov
lods
sub
je
andl
pusha
test
lock
add
scas
cwtd
push
mov
lock
adc
mov
pop
sub
push
dec
mov
cmp
mov
lea
or
gs
mov
cmpsb
mov
adc
into
pop
sub
pop
pop
pop
mov
aas
pop
xor
dec
pop
roll
xor
mov
mov
out
imul
cltd
pop
lock
fwait
add
filds
mov
push
jb
inc
mov
repnz
xor
int3
adc
mov
cmpsb
stc
add
pop
out
mov
pop
imull
int
push
shrb
push
loopne
and
lret
je
call
mov
push
aas
pop
ja
cmc
push
jno
rorl
adc
push
out
leave
mov
push
cmp
mov
ljmp
dec
and
sbb
pop
cmc
inc
test
mov
sbb
mov
lahf
gs
out
jns
jo
dec
jo
cmp
and
add
addr16
fcmovnb
sub
ds
movsl
cs
sub
xchg
mov
int
inc
or
pop
jbe
push
stos
sahf
or
and
pop
push
clc
mov
popa
rorl
xlat
inc
ret
into
roll
and
xchg
xchg
lods
cwtl
sub
jne
inc
dec
xchg
std
dec
int3
sbb
push
mov
lds
xchg
mov
arpl
sbb
sub
xchg
jg
test
xor
cli
sbb
and
lret
cwtl
dec
scas
xchg
inc
mov
cmp
xor
es
cmp
imul
addr16
xchg
outsb
lods
rcll
les
xor
sahf
pop
lock
shlb
addr16
and
cmp
inc
xor
inc
bound
es
inc
out
ja
data16
repnz
adc
mov
or
and
out
clc
lock
inc
lock
clc
int3
ds
loop
les
jae
push
push
mov
dec
mov
mov
mov
in
inc
cld
jmp
xor
inc
jmp
push
jo
push
sub
loopne
mov
lods
mov
xchg
push
sti
add
out
inc
lret
mov
jae
cmp
movsb
push
mov
or
xlat
and
mov
add
push
sub
ficoms
loope
and
scas
leave
iret
pop
dec
mov
xchg
call
xchg
mov
adc
sub
lds
fwait
dec
movsl
repnz
loop
xchg
fcompl
mov
mov
mov
lds
nop
loop
faddl
repz
push
mov
mov
repz
mov
ja
fnstcw
stos
out
dec
cmp
fimull
out
ljmp
outsw
push
cs
imul
dec
mov
out
push
jo
xchg
push
jl
pop
test
dec
testb
xchg
mov
outsl
mov
pop
dec
incb
imul
js
imulb
sbb
aas
jg
push
bound
bound
jno
aaa
and
clc
popa
and
adc
mov
push
pop
enter
xchg
out
insl
mov
rorl
push
leave
cmpsb
push
aas
push
dec
xchg
incl
enter
loope
cmp
cs
leave
pop
lcall
pusha
xchg
jecxz
inc
xchg
sbb
fisubrl
imul
mov
jmp
aas
adc
loope
mov
pop
cltd
sub
adc
cmp
sub
iret
ret
dec
push
daa
mov
scas
cld
ja
cmpsl
and
and
iret
es
xchg
int
fs
xor
dec
adc
sbb
lea
pop
mov
and
mov
out
xchg
sti
scas
jge
xor
or
xor
mov
iret
insb
pop
sbb
and
ljmp
sbb
out
push
mov
icebp
out
shll
shl
gs
int
jmp
inc
fs
repnz
push
out
cmp
out
xor
cmp
mov
sti
rcrl
inc
mov
out
decl
out
mov
push
mov
mov
xchg
pop
jne
inc
inc
enter
sti
jb
stos
mov
dec
mov
lods
dec
cmp
inc
sbb
cmp
in
loope
pand
jae
and
push
into
pop
pushf
adc
cmp
in
ja
mov
add
mov
es
sti
inc
mov
cmc
sbb
xchg
mov
mov
xchg
mov
loope
repnz
mov
xlat
adc
or
and
es
mov
test
jo
roll
xor
mov
sbb
cwtl
hlt
mov
cld
das
cwtl
lods
rcll
jmp
movsl
fsub
or
lods
cltd
cs
js
cmpsb
test
mov
push
jb
sbb
call
jge
movzwl
xchg
mov
cli
xchg
adc
movsl
and
jns
sbb
mov
aas
pop
shlb
cmpsb
or
gs
icebp
push
add
mov
fnstcw
cmpsb
mov
adc
cmp
fnsave
adc
sarl
mov
xchg
enter
fs
mov
jp
int3
sbb
dec
mov
jle
or
mov
xchg
lods
adcl
inc
std
mov
imul
ret
popa
or
pop
lock
loope
outsb
add
cli
push
mov
cld
mov
jno
sub
negb
daa
or
pop
out
ret
jnp
shlb
cmp
lea
adc
mov
stc
lock
testb
jle
and
cwtl
rcrl
xchg
inc
mov
cs
xor
arpl
sub
mov
repz
lea
mov
dec
or
xor
jecxz
mov
in
shlb
jns
idivl
sbb
pop
inc
popf
data16
mov
inc
mov
push
pop
sbb
lahf
lret
pop
xor
call
add
or
and
ret
cmp
outsb
mov
pop
adc
mov
hlt
in
mov
jp
loope
mov
hlt
ficompl
bound
push
push
jmp
popf
add
das
xchg
call
mov
pop
xorb
push
xor
pushfw
fucom
decb
js
cmp
fwait
enter
in
sbbl
jle
lea
inc
or
fs
or
repnz
mov
in
xchg
insl
fisttpll
loop
std
adc
xchg
xor
pusha
fxch
mov
aam
sub
out
aaa
add
or
sbb
add
xchg
cmp
out
mov
lahf
pop
jg
add
sub
xor
dec
call
cli
and
mov
xor
rep
push
loopne
jmp
xchg
imul
cmp
ffreep
inc
and
and
xor
int3
jbe
pop
test
stos
pop
lcall
fs
add
mov
inc
in
enter
daa
dec
cmp
add
inc
pop
xchg
out
jnp
sub
in
mov
jg
and
sahf
mov
xchg
sbb
adc
lock
cli
sahf
imul
jo
rdtsc
mov
sbb
fiaddl
mov
push
pop
sbb
pushf
cs
xor
inc
push
jp
cld
fwait
jae
xchg
aad
clc
sub
out
in
sti
lea
dec
dec
and
pop
adc
aaa
loope
ret
ds
loope
mov
sub
repnz
jp
xchg
bound
sbb
shll
cmpsl
inc
adc
in
in
jns
mov
loope
icebp
jg
ja
arpl
dec
xchg
add
in
sahf
push
pop
cmpsl
add
repz
lahf
dec
mov
lcall
add
mov
cmp
aaa
or
mov
aas
jl
xor
idivl
adc
xchg
aaa
xor
gs
jb
aas
mov
xor
lods
or
sub
pop
mov
std
repz
mov
shll
mov
int3
dec
enter
mov
push
daa
clc
rcll
xor
out
pop
outsl
dec
mov
xchg
lea
loope
pop
pop
mov
fstpl
mov
bound
add
movsb
lcall
xlat
mov
outsb
add
jae
and
xor
push
sti
movsl
inc
sub
mov
fcmove
push
dec
adc
scas
jno
cld
mull
divl
clc
jno
clc
inc
ret
fisttpl
sbb
or
xor
sbb
inc
push
repz
cmp
mov
leave
inc
mov
adc
fdivrs
or
stos
jne
lds
push
jge
ja
adc
sub
xor
ss
cmp
jge
rclb
adc
mov
xor
or
push
jp
jb
rcll
mov
push
mov
hlt
xchg
out
and
adc
pop
add
jo
push
loop
pop
pop
adc
pop
mov
add
jp
es
sbb
aam
mov
pop
mov
inc
rcrl
js
sub
and
jmp
cs
mov
stos
cld
ja
xchg
cmpsb
pusha
cmpsb
mov
pop
mov
push
dec
lret
pop
ds
xor
inc
xlat
jnp
inc
int
xchg
push
sub
xor
dec
int
std
cmp
in
mov
and
aam
mov
inc
adc
fldl
pop
sbb
jle
daa
or
jns
out
adc
loopne
inc
mov
ret
jb
inc
fstl
xor
xor
mov
out
mov
and
lret
pop
in
push
xor
cmp
sbb
xor
mov
jmp
jnp
or
lods
mov
test
scas
js
fnstcw
or
int
fstpt
ds
adc
adc
mov
sub
outsb
adc
rol
cmp
inc
sub
add
bound
and
pop
xor
das
mulps
test
xor
inc
pop
aaa
in
insb
lods
cmp
dec
arpl
sbb
jns
pop
sti
pop
cmp
cmp
add
arpl
test
push
xor
iret
push
das
sub
stos
push
pop
xchg
inc
adc
scas
cli
cmp
push
mov
jl
cmc
dec
fdivr
loope
popf
sub
aam
mov
test
and
dec
push
jnp
inc
fisttpl
pop
xor
ss
mov
aad
lods
sbb
iret
rcr
and
clc
int3
cmp
mov
jg
aad
scas
dec
addl
xchg
ficoms
jo
mov
dec
jne,pn
add
sbb
repnz
xchg
cld
jo
push
stc
mov
call
jle
mov
leave
jne
fs
sub
mov
sub
push
stos
pop
sub
repnz
mov
xchg
mov
pop
sbb
outsl
addb
xor
push
daa
jmp
or
inc
cli
cmp
mov
das
lock
adc
xchg
sub
cmpsb
fsubs
cs
inc
outsb
mov
cltd
push
add
mov
sarb
inc
fs
scas
lods
xchg
lods
push
or
push
movsl
cmp
outsl
and
jge
mov
stc
inc
jecxz
hlt
insl
cs
xor
jl
jbe
pop
jecxz
cmp
fwait
or
mov
popa
int3
stos
mov
notl
insb
ficomps
cwtl
adc
scas
push
in
leave
xchg
xchg
sbb
jnp
dec
adc
mov
jns
sub
push
adc
or
mov
ja
lahf
fdivrs
or
fadd
xorb
in
inc
insb
cmc
adc
movb
in
dec
gs
mov
lahf
shl
pop
jne
movsl
test
pusha
loop
js
jb
sub
mov
xlat
mov
sti
mov
test
daa
repz
and
mov
push
scas
mov
cmp
sub
sub
pop
mov
inc
xchg
xchg
and
mov
mov
mov
sbb
fdivs
mov
or
test
lcall
cmp
outsb
popf
push
loop
mov
ret
mov
pop
cmp
scas
sbb
add
into
sub
pop
lea
jno
or
jae
orb
push
or
mov
dec
popl
popa
aad
or
xchg
shl
jle
mov
jmp
fwait
outsl
sarl
shlb
sub
dec
jl
mov
sbb
mov
stos
out
cmc
sub
addl
jp
cmc
ja
fcompl
mov
dec
ss
inc
adc
es
sbb
dec
rorl
cmpsb
rol
sahf
inc
mov
fwait
push
push
pop
sbb
cmp
pop
xorl
loope
lret
xchg
fnstenv
scas
mov
mov
and
divb
shlb
insb
pusha
jmp
xchg
hlt
jns
js
popa
fcomps
out
shll
fisubrl
jnp
insl
dec
mov
out
lahf
xor
int3
mov
add
jne
jo
stc
pop
fstl
pop
xchg
push
jle
xchg
dec
cmp
pop
sti
in
fcomip
xchg
int3
stc
lret
dec
imul
push
xchg
not
push
out
xchg
jp
push
fidivl
pop
push
sbb
fwait
jl
stos
sti
movsl
cmpsl
out
mov
mov
sahf
movsl
xlat
insb
cld
nop
test
cmp
aaa
js
cmp
fimull
lods
shlb
dec
mov
inc
lcall
orl
std
adc
mov
repz
or
inc
xchg
popf
rcll
pop
or
insb
jno
adcb
push
sub
xchg
test
add
cmp
rolb
movsb
cmpsb
movsb
add
mov
iret
dec
lds
push
lods
aad
push
into
push
out
call
scas
imul
dec
stos
lds
inc
icebp
inc
sub
or
push
dec
aaa
aas
and
out
pop
inc
imul
aas
dec
adc
sbbl
ss
sbb
icebp
add
or
lea
popa
dec
popf
sub
lds
loope
dec
sub
addl
dec
das
jo
stos
aad
add
jg
psubsb
push
inc
mov
adc
push
or
mov
mov
sub
into
mov
inc
dec
jp
inc
ss
fsubs
sbb
cmp
cmp
in
pop
push
mov
sbb
mov
pop
xor
ret
push
xlat
and
cmp
adc
das
or
sbb
xor
shll
hlt
inc
jnp
cmp
push
mov
cmp
push
and
dec
lcall
rorb
ja
push
sub
sbb
mov
les
iret
pop
and
bound
sbb
dec
xchg
mov
push
negb
mov
imul
lret
sub
mov
movsb
lret
fld
lret
in
cmpsl
int
and
pusha
xor
and
sbb
lret
cmp
rcr
cmp
dec
in
sub
sbb
sub
sbb
ss
add
outsl
addr16
imul
ss
adc
push
ret
leave
jne
add
rcll
push
icebp
add
ret
insl
or
pop
xchg
lahf
push
sbb
cmp
or
repnz
insl
push
dec
loope
dec
pop
movsb
jg
or
jmp
xor
dec
fnstsw
pushf
mov
mov
mov
in
xor
cwtl
icebp
jecxz
mov
cld
xchg
insl
lahf
push
ss
out
mov
aad
std
gs
mov
popf
mov
push
inc
rcrb
out
rcll
sub
xchg
xor
sbb
inc
loope
aaa
aad
dec
pop
ss
loopne
mov
jb
and
push
xchg
push
mov
sbb
push
adc
ds
rcrb
cmp
test
dec
and
ret
mov
jb
cmp
and
pop
out
jmp
arpl
lea
or
cwtl
push
jo
push
shll
std
imul
aaa
mov
dec
shrl
outsb
or
mov
or
jl
xlat
iret
das
imul
ja
sbb
and
and
test
addr16
in
shrb
and
jmp
adc
inc
or
popf
push
pop
lock
pop
gs
adc
andb
mov
test
aad
call
insb
insl
mov
fwait
andl
adc
mov
add
or
int3
xchg
mov
sub
cmpsb
mov
push
dec
adc
loop
dec
es
push
iret
outsl
in
aam
inc
repnz
push
mov
adc
add
push
add
cwtl
sbb
xlat
and
push
inc
cmp
jns
cmp
mov
add
mov
mov
adc
xorb
fcmovb
cmpsl
mov
and
outsb
in
mov
enter
mov
xchg
repnz
add
fmull
push
sbb
dec
add
dec
es
inc
mov
pop
movsl
stos
mov
in
sub
fimuls
xchg
movsb
push
fdivs
push
pop
sbbb
cld
div
push
shll
dec
mov
mov
pop
adc
push
dec
fdivl
inc
cmp
jecxz
pop
cmc
in
jp
push
sahf
popa
xor
jae
inc
jae
push
xchg
xchg
xchg
fbld
adc
popa
adcb
inc
jp
push
pop
lods
fsubs
or
mov
jns
adc
cmp
push
dec
pop
mov
mov
std
mov
lahf
or
mov
jbe
push
jo
fistpl
das
inc
subb
add
cmc
sub
stos
mov
jle
mov
inc
nop
mov
inc
or
push
scas
push
mov
jo
lea
mov
push
inc
jmp
jbe
pop
outsb
push
jmp
cmp
imul
cmp
in
xchg
pop
dec
mov
push
rcr
dec
popa
roll
clc
dec
aad
loope
mov
sbb
dec
fucomp
pop
mov
loopne
push
js
pop
or
leave
imul
pushf
lret
gs
mov
out
lcall
pop
bound
dec
inc
mov
dec
xchg
das
popf
xchg
repnz
ffreep
inc
iret
enter
jb
lods
mov
sbb
adc
fs
outsb
sti
xor
popf
jmp
cli
cmp
icebp
out
add
mov
sbb
pusha
addr16
cmp
xor
add
fs
mov
inc
push
jne
cmpsb
test
mulb
inc
mov
xor
cmc
in
sbbl
push
in
mov
cmp
and
jns
jnp
js
cmpsb
or
bound
ja
notb
jg
pop
inc
mov
cmpsb
fldcw
sbb
mov
jo
jb
stos
xor
stos
stos
xchg
cld
out
mov
outsb
sbb
jg
mov
ret
xchg
xchg
stos
in
in
stos
add
add
push
inc
xor
hlt
cmp
sbb
cmp
pusha
or
jecxz
call
adc
sbb
adc
rcrb
call
mov
sbb
loopne
adc
dec
sti
shlb
adc
loope
push
jl
negb
test
clc
jle
lods
dec
mov
xchg
and
add
outsb
mov
stos
cmp
aas
dec
jmp
push
scas
push
in
hlt
pushf
lcall
aas
pop
lods
sub
out
test
adc
mov
fwait
sbb
mov
push
pop
fidivs
sarl
loop
jge
dec
ror
pop
dec
jo
sarl
pop
xchg
lahf
dec
sub
add
int
and
mov
out
xchg
mov
and
cmp
daa
rcrl
pop
ljmp
imull
adc
adc
mov
pop
das
adc
push
test
mov
cwtl
mov
das
fcoms
mov
icebp
pop
cli
or
sbb
subl
xor
sbb
add
jns
pop
add
mov
aas
sbb
dec
mov
imul
lds
push
jbe
sub
in
pop
js
and
loop
jo
mov
dec
insb
pop
inc
out
dec
cmp
pop
cmp
pmaxub
sub
sahf
cltd
add
pop
in
xchg
xor
lock
push
dec
xor
xchg
cmp
add
cmp
xchg
xor
adcb
mov
fists
clc
mov
jnp
and
outsb
sbb
js
jne
pushf
data16
ss
dec
mov
stos
fdivrs
mov
mov
mov
into
mov
popa
jb
sarb
xor
in
je
loopne
hlt
pop
jnp
cmpsb
inc
data16
mov
mov
test
aas
mov
popa
out
loope
addb
dec
movsb
jge
sub
push
fcompl
outsl
jmp
jns
rol
sbb
mov
aaa
push
dec
out
in
xchg
xchg
mov
insl
mov
icebp
cmc
imul
dec
sub
mov
and
mov
add
stos
dec
fcoms
push
sub
pop
and
dec
mov
ja
mov
push
jecxz
pop
lret
insb
test
addr16
cmp
shll
adc
xchg
loope
dec
cmp
test
test
nop
inc
inc
mov
popf
xchg
xor
das
inc
jg
jo,pt
cmpsl
mov
les
js
pop
mov
in
dec
divl
adc
dec
fmuls
ret
sahf
xchg
lahf
cmp
xor
enter
inc
jge
cld
cmp
repz
pushf
xchg
pop
test
jb
and
or
fisttpll
or
mov
mov
aaa
push
iret
mov
adc
arpl
pop
add
dec
fistpl
adc
lcall
loopne
lea
mov
cs
je
pop
push
movsb
mov
ret
movsl
mov
or
sub
lret
xor
xchg
aam
push
repnz
addps
fucomip
shrb
std
stc
inc
jno
push
iret
dec
rol
pop
in
push
inc
jl
pushf
decb
add
cmp
and
insl
jb
imul
pop
popa
inc
pop
add
xchg
shll
mov
shlb
push
addr16
mov
test
or
pop
mov
pop
stos
pusha
mov
stos
test
mov
aaa
xchg
xchg
dec
into
test
pop
ficoml
outsb
or
cmpsl
and
mov
pushf
sarb
test
or
cmp
movsl
lret
cmp
clc
sahf
jo
cmpl
rclb
mov
ret
jg
mov
jle
neg
and
sub
jne
cmpsb
sti
mov
fnstcw
push
mov
and
into
rorl
mov
mov
mov
xchg
push
jge
cmpsb
sti
jl
jmp
lods
jmp
sub
clc
pop
insb
sub
inc
adc
push
ljmp
stos
call
sbb
pop
adc
dec
movsb
and
decb
jnp
sbb
int
xlat
ret
into
mov
jl
cmp
aad
xchg
sbb
adc
ret
lds
push
sbbb
fidivrs
sahf
int3
int
xchg
jnp
stos
in
add
mov
xorb
dec
lods
lret
jge
sbb
push
pop
fs
cld
cmp
cwtl
adc
and
ljmp
mov
mov
iret
push
cs
push
aad
mov
stos
lret
vmovss
adc
out
pop
pop
cli
push
xchg
jecxz
aam
mov
out
push
and
mov
mov
mov
push
out
fwait
popa
mov
push
jle
mov
or
push
push
cmp
int3
inc
movsl
dec
jo
adc
lods
test
stc
inc
imull
test
in
popa
lcall
shll
pop
or
sub
ss
test
decl
mov
cmp
lds
pusha
cmp
add
xor
mov
sub
pop
sbb
divl
mov
mov
jns
jg
imul
mov
xchg
outsb
cmpsl
lcall
aam
push
insl
out
pop
push
jle
rcr
test
xchg
pop
push
and
pop
test
ds
inc
mov
dec
adc
lods
in
lret
mov
mov
fwait
sub
stos
xchg
jg
lds
imul
lock
in
movsb
and
jp
lea
mov
cs
mov
adc
jne
fidivl
leave
mov
xchg
jecxz
sub
rcrb
dec
sahf
push
outsb
pop
push
pop
xchg
jo
das
lods
mov
loopne
lods
jle
cmp
lock
je
xchg
addr16
loopne
imul
out
push
jecxz
or
arpl
call
pop
mov
and
aad
cmp
sub
sbb
xor
and
mov
movsl
inc
andb
pusha
push
clc
lock
mov
dec
mov
mov
xchg
adcb
adcb
inc
fistpll
xchg
popa
push
cmc
cwtl
xlat
mov
stos
jnp
popf
pop
pop
out
jbe
xor
inc
add
mov
imul
mov
icebp
popf
outsb
ds
add
fidivs
stos
movsl
cmp
loope
sbb
sub
cmp
cwtl
mov
aaa
xchg
scas
movl
jne
mov
sbb
add
xor
es
push
ja
sbb
dec
cmc
mov
push
pop
adc
mov
push
add
fistps
xor
fisttpll
pop
adc
fstp
icebp
fnstenv
push
adc
pop
es
jg
sbb
rcrb
and
mov
sub
xor
sub
or
jno
mov
bound
jmp
mov
scas
popa
dec
ss
pop
sub
sbb
mov
fdivrl
jle
push
rolb
cmp
cmp
cmp
leave
out
aaa
jl
daa
add
cmp
xor
scas
pop
sub
mov
cmpsl
xchg
xchg
outsl
push
sti
jb
out
push
sub
mov
lahf
test
pop
pop
loope
cmpsb
nop
test
inc
fdivl
out
dec
inc
push
add
sbb
mov
cmc
pop
jmp
xchg
ret
movsb
lret
mov
sub
scas
scas
xlat
mov
xor
push
and
mov
mov
daa
add
mov
mov
insb
add
aad
lock
outsl
push
sub
jmp
xor
loop
inc
mov
dec
mov
pop
dec
mov
inc
adc
mov
pop
and
pop
pop
cmc
lcall
repnz
addr16
or
mov
mov
dec
std
cmp
push
aam
or
lret
add
jnp
lods
gs
out
aaa
aas
ret
inc
dec
and
call
vxorps
clc
sbb
mov
mov
and
xchg
add
mov
push
insb
rep
push
push
fcmovb
xor
inc
jecxz
loop
mov
pusha
lds
pop
cmpsl
addr16
imul
xchg
push
imul
xchg
mov
in
cmpsb
or
mov
xlat
sbb
lahf
cmp
scas
jp
add
int3
xchg
add
inc
sub
inc
popa
cmc
mov
jl
js
fadd
ret
inc
pop
mov
vmread
adc
sub
sbb
int
pop
aaa
dec
mov
popa
fcoms
pop
outsl
mov
sub
adcl
sarb
jnp
xor
push
icebp
cltd
sahf
cld
pop
rcrl
jp
scas
mov
push
sbb
add
and
dec
fbstp
cmpsl
dec
repz
and
push
vcmpsd
in
inc
mov
pop
or
sub
out
inc
je
sub
aam
cwtl
arpl
frstor
xlat
mov
jmp
inc
pop
jne
dec
fsubl
pusha
xchg
xchg
sbb
xlat
repz
push
fcomps
mov
xor
hlt
ret
insb
lret
adc
sub
jmp
lret
in
test
cltd
cwtl
mov
mov
fidivrs
mov
mov
cmp
ret
enter
mov
xchg
inc
jmp
cli
mov
or
jbe
jnp
mov
loop
add
movsl
clc
fildl
inc
add
aam
ss
pushl
jae
mov
rclb
cmp
popa
push
adc
pusha
out
and
push
pop
adc
mov
push
daa
js
into
xchg
mov
inc
scas
adc
addr16
xchg
mov
sti
adc
cmp
add
or
lods
cmp
pop
lods
cmp
inc
push
scas
jecxz
movsb
fadds
fs
push
cmp
mov
xchg
sub
dec
cmp
dec
loopne
rcrb
idivb
jecxz
lret
out
pop
push
cmpsb
int3
push
movsl
jne
aam
jecxz
adc
push
stc
das
and
push
sub
aam
lods
xchg
in
orb
sbb
sbb
out
faddl
std
fldenv
stos
jge
out
cmp
jle
popl
addr16
cmpsb
fildll
lcall
mov
jo
scas
jns
aam
mov
enter
push
loope
sbb
push
xchg
push
mov
lock
pop
inc
bound
hlt
mov
loop
xchg
mov
jo
adc
cmpl
dec
adc
mul
jecxz
repnz
sbb
adc
push
addr16
hlt
hlt
cmc
loopne
dec
pop
jo
lahf
das
movsl
and
or
jmp
scas
sub
xor
scas
clc
sahf
pushf
push
push
and
sarl
adc
sbb
lods
fiaddl
sbb
daa
xor
fdivrp
stos
fwait
pop
and
mov
push
fdivrs
fmul
daa
mov
adc
int3
outsb
inc
in
mov
test
mov
es
mov
mov
pop
dec
shll
cmp
jne
xchg
aad
sbb
stos
fisubrs
push
and
mov
mov
lcall
outsl
dec
into
shlb
jae
pop
dec
adc
int
stc
lcall
call
lcall
repz
jecxz
inc
mov
adc
stc
add
shrb
mov
int3
lds
daa
jbe
fs
dec
aad
das
insl
push
pusha
les
js
shrb
pop
xchg
lret
jle
data16
jp
lock
sbb
cmp
xchg
mov
mov
addr16
mov
jmp
movsl
jo
sub
sub
pop
sub
cmpsb
inc
fnstsw
rorl
jmp
cmpsl
idiv
shl
mov
adc
mov
sbb
fsubrl
xchg
add
and
iret
pushf
cmp
jle
es
xchg
lret
int
repnz
scas
stos
aaa
gs
pusha
jmp
sbb
add
cltd
xor
add
xor
std
cli
pop
test
cmpsb
lock
fnstcw
divb
push
cmp
ret
jp
xchg
shrl
xchg
insl
push
xlat
ficomps
test
ret
push
bound
cmp
lods
mov
jae
xorl
sahf
sti
cmp
and
fiaddl
add
stos
cmp
outsl
cmp
xlat
cmpsb
insb
popa
out
enter
enter
and
int
popa
cltd
inc
std
push
mov
pusha
out
cmp
push
pushf
inc
inc
inc
pop
dec
pop
and
filds
mov
rcrb
cli
jo
jno
aaa
cli
ljmp
sbb
insl
idivl
push
aad
test
pop
fistpl
lods
lock
fstpl
out
stos
add
ret
jnp
cmp
ret
shrb
imul
add
pop
leave
xor
and
gs
push
das
leave
nop
or
fists
jl
sbb
jb
lods
add
and
and
sub
loopne
and
enter
mov
inc
jp
aaa
sub
push
and
dec
movsl
cli
jg
push
fists
je
out
orb
push
adc
ret
add
arpl
xor
js
add
roll
jo
xor
cmpsb
push
outsl
jns
cmpl
lods
fsub
insb
sub
push
fsub
push
adc
lret
mov
hlt
xorl
jae
cmp
xchg
jmp
mov
jnp
inc
xor
sub
jp
je
xor
pop
inc
jbe
xlat
mov
into
lock
out
push
mov
cli
push
add
push
lock
xor
jmp
xorb
dec
hlt
lea
cmp
dec
or
flds
and
movb
cltd
mov
je
dec
shl
dec
test
aad
out
push
or
mov
and
cwtl
comiss
jg
pop
mov
add
push
mov
imul
unpcklps
fs
addr16
sub
cmp
push
mov
or
hlt
or
or
clc
inc
test
fisubl
into
lahf
popa
addr16
ja
loope
mov
xchg
push
ficomps
aad
lcall
insl
add
loope
cmp
and
or
xor
xor
sahf
pop
mov
dec
add
ljmp
push
cwtl
adc
decb
dec
or
and
in
inc
cmpsb
push
push
jge
aam
ds
mov
mov
outsb
or
and
inc
lret
sbb
xchg
pop
push
mov
test
push
jne
push
mov
dec
cmp
cwtl
adc
add
dec
cmp
cmpb
je
out
mull
inc
test
push
insl
sbb
push
or
jecxz
jmp
jae
sbb
and
jge
pop
cld
inc
ret
lods
or
daa
negl
or
mov
aas
add
sub
leave
cmovbe
ret
mov
iret
mov
in
push
hlt
jne
addr16
mov
cmc
lock
test
fcoml
pop
mov
loopne
jge
stos
stos
and
outsl
fs
lret
push
jp
cli
aad
dec
inc
aaa
mov
into
push
pushf
orl
sub
mov
adc
loop
cmp
mov
pop
repz
push
bound
inc
filds
xchg
mov
xchg
push
xor
shl
pushf
cmc
mov
sub
icebp
cmp
pop
or
xchg
cmp
icebp
cmp
mov
dec
nop
repz
mov
in
aas
push
xor
push
outsb
mov
mov
popf
push
popf
mov
bound
inc
mov
sub
roll
ret
jno
lds
dec
add
cld
and
jmp
jbe
and
enter
mov
aad
js
aad
addl
lret
icebp
cmp
sub
inc
jno
mov
lret
xchg
cmc
mov
das
mov
jns
es
add
push
and
mov
push
test
in
mov
test
inc
sbb
cs
inc
out
repnz
scas
sub
adc
mov
cmp
mov
push
clc
out
lcall
pop
fsubp
sbb
jecxz
shr
je
aam
mov
mov
outsb
dec
cmpb
ljmp
les
in
in
sub
mov
pop
into
mov
pusha
sti
xchg
pop
xchg
lods
mov
add
mov
inc
jns
enter
sub
cmp
pop
mov
push
pop
roll
and
adc
outsb
data16
aas
and
add
push
imul
or
xorb
lret
mov
cmp
jg
out
ss
cmp
outsl
mov
sub
xchg
jmp
out
shr
push
out
jae
mov
adc
cld
jo
ds
mov
mov
pop
xchg
dec
loope
sbb
gs
jge
add
sti
jbe
add
push
pop
xchg
jo
jb
or
out
jno
xchg
shl
sarb
test
sub
mov
in
lods
std
iret
scas
push
sbb
fidivs
pushf
cli
lret
roll
mov
pop
xlat
js
jmp
inc
sbb
in
and
ret
sar
mov
add
sbb
sahf
movsl
pop
pop
mov
jmp
icebp
imul
mov
cltd
insl
sbb
ja
dec
addr16
xor
das
ror
xchg
pop
and
push
jmp
mov
pop
dec
lods
xchg
pop
testl
es
dec
sbb
lret
pop
push
repz
xchg
filds
adc
add
xchg
xchg
ljmp
dec
scas
sbb
cmp
es
cld
dec
xchg
push
sub
in
sbb
jb
cs
test
cli
ds
pushf
xchg
push
lea
sub
popa
bound
andb
cwtl
jne
aad
ss
lcall
xor
jb
pushf
adc
sub
add
rorl
mov
sub
insb
push
jl
stos
loopne
xchg
and
lret
cmpsl
push
out
and
out
mov
gs
into
je
sub
sahf
aad
pop
outsl
dec
and
adc
jle
inc
fs
aas
je
notl
outsl
leave
ss
and
lock
xchg
xor
xchg
popa
in
gs
jl
mov
jmp
insl
sarb
addb
adc
and
xchg
rcr
test
inc
cli
orb
jns
jge
mov
and
add
inc
pop
pop
inc
mov
cmp
mov
jecxz
aad
adc
jp
jmp
jecxz
jle
dec
add
ds
in
mov
out
sub
or
sub
mov
lret
xchg
push
lahf
or
push
jecxz
xor
cmp
mov
pop
xor
pusha
fidivs
int
icebp
adc
push
in
adc
lret
jle
out
inc
xchg
js
lret
andb
pusha
jne
lds
bound
mov
adc
push
ss
push
enter
mov
inc
xor
lds
dec
inc
cmpsl
sub
inc
fcomps
sub
push
adcb
sub
aad
jle
fdivl
mov
jmp
or
adc
mov
pop
divl
dec
bound
cmp
mov
aam
aad
cmp
jle
lahf
adc
mov
push
mov
xor
rcrl
rolb
dec
pop
sub
test
add
jl
mov
lds
fld
ficompl
stos
mov
jp
adc
iret
ficompl
lods
lock
cmp
or
cwtl
mov
sub
arpl
out
int
dec
push
ficomps
ds
out
jmp
outsl
popa
mov
jmp
dec
cmp
or
test
sbb
and
stos
xor
scas
daa
std
push
cmp
cmp
or
fldcw
sub
jecxz
mov
inc
cmc
xchg
in
push
out
cld
sar
nop
sahf
clc
movsb
and
shll
loopew
jp
fs
cs
or
mov
and
lods
inc
lret
movsl
mov
push
push
or
dec
adc
add
cmp
jnp
cmp
or
mov
xchg
sub
in
xor
cmp
cmp
xor
jmp
jnp
inc
in
cmc
daa
lret
sarl
adc
xor
xchg
mov
or
mov
xchg
lea
xchg
push
jg
jae
gs
loopne
push
cmp
xchg
daa
inc
pop
stos
cmp
and
adc
jns
mov
or
fs
shlb
push
aam
int
cmp
jne
xor
loopne
push
jne
add
pop
mov
sbb
push
xor
xor
leave
push
mov
stc
jb
outsl
enter
test
inc
pop
xchg
mov
lods
negb
push
call
insb
lcall
mov
outsb
inc
mov
xchg
ljmp
adc
mov
push
adc
lret
xchg
test
sarb
std
shrl
sti
xlat
out
aam
xchg
fcoms
out
mov
pushf
mov
loop
iret
inc
nop
and
outsb
loopne
and
mov
dec
lret
pop
sub
push
inc
xlat
clc
repz
aam
daa
arpl
and
xchg
ret
mov
sbb
or
jle
mov
nop
push
inc
or
lods
sbbl
cmp
cmpsb
std
dec
icebp
ret
imul
dec
and
fs
daa
movsl
mov
adc
iret
push
inc
insb
test
inc
stos
cmc
and
dec
repnz
aad
jbe
or
sub
sub
lret
pop
fadds
inc
mov
or
stos
clc
stos
fwait
test
mov
insb
aaa
stos
sub
xchg
and
and
hlt
rolb
pop
mov
mov
ret
ds
and
jge
push
aad
inc
into
pop
ret
orb
mov
loop
pop
sbb
stc
in
mov
fcomp
test
ret
mov
and
movsl
std
mov
adc
lret
imul
adc
in
lods
add
insb
cmpsl
jl
mov
addr16
cmpsl
mov
aam
sbb
shll
lods
out
jb
jecxz
sbb
iret
xchg
push
push
mov
jo
cmp
sub
ljmp
sti
outsb
pop
movsl
mov
int3
jne
data16
addb
inc
and
lcall
fs
sub
adc
mov
jge
out
jmp
lahf
fcoms
sbb
mov
xor
jnp
jp
insb
add
call
cmp
xor
rolb
inc
outsl
rolb
or
or
and
mov
pop
push
pop
push
data16
inc
jmp
mov
in
xchg
pop
ljmp
into
mov
not
orps
mov
test
mov
decb
jb
sub
insb
aam
cmp
insb
test
jnp
cli
jmp
inc
repnz
mov
add
push
sahf
mov
sbb
pop
ja
and
dec
cltd
gs
mov
pop
add
mov
inc
stos
shll
fisttpl
ret
sbb
std
ret
sub
push
movsb
rorb
pop
mov
jbe
cmc
push
push
scas
pop
pusha
inc
mov
push
addr16
outsb
imul
xor
fcmovne
ret
pop
repz
jmp
or
cld
xor
xchg
cmp
dec
inc
mov
insb
and
inc
jo
lret
inc
adc
outsb
pushaw
aaa
and
sbb
cmp
outsb
push
addr16
lods
je
bound
jecxz
arpl
je
ja
adc
jmp
shr
incl
mov
movsl
int3
inc
fsubs
add
sub
popa
push
pop
adcl
dec
fmuls
jle
int
in
out
int3
movsb
mov
push
rclb
sub
push
sub
push
adc
cs
imul
mov
or
gs
pop
aam
rcr
out
repnz
repz
mov
inc
ljmp
jbe
jns
jecxz
fisubl
cmpl
icebp
and
adc
and
adc
jns
in
aam
loopne
loopne
loope
push
sub
lods
inc
outsb
inc
mov
fwait
adc
jbe
jnp
cmp
stc
mov
sbb
jmp
lea
xchg
pop
xor
jne
ret
shlb
sbb
ss
dec
into
sub
clc
xor
ror
stc
add
enter
xor
in
xchg
inc
inc
inc
jnp
push
scas
mov
cmp
mul
xchg
lahf
add
xchg
lcall
ret
push
in
pop
aas
xor
mov
pop
test
cs
mov
xlat
sahf
cmp
lea
lahf
int
or
lcall
aam
jl
sbbb
push
jbe
xchg
inc
jmp
outsb
test
add
jo
push
fcmovne
jl
push
add
cwtl
int
jnp
shrl
insb
inc
flds
xor
pop
repnz
lcall
out
push
jle
mov
pusha
sbb
adc
mov
push
insl
mov
inc
xchg
lods
dec
out
xchg
int3
orb
repnz
adc
aas
in
pop
cmp
jp
dec
add
add
jge
loope
xchg
insb
adc
mov
mov
lock
jecxz
fwait
sbb
loopne
lods
dec
fidivl
std
lods
rcrb
sbb
les
mov
pusha
cmp
jmp
jne
cmpsb
sub
je
pop
int3
sub
cmp
hlt
cld
pop
sbb
daa
push
ljmp
push
and
outsl
jecxz
adc
add
outsl
mov
push
mov
in
loop
inc
orb
out
jo
movsb
lret
pop
push
jp
aam
or
mov
out
rclb
jo
or
jne
inc
push
enter
repz
xchg
push
cli
mov
dec
xchg
dec
fwait
mov
sub
lret
inc
adc
xor
cmpsb
in
movsb
mov
in
xor
js
mov
push
push
inc
sub
ss
out
leave
add
jo
adc
xchg
pop
jle
ljmp
or
outsl
pop
adc
iret
lock
lret
xor
xchg
mov
cmp
bound
fimull
push
lea
test
cld
jecxz
fwait
pop
lds
je
and
fidivrs
adc
aad
lea
mov
pop
mov
shlb
sbb
int3
lds
sbb
scas
out
mov
hlt
xchg
pavgb
test
scas
fistpl
cmc
inc
sbb
sub
adc
jp
ja
sarl
inc
insl
push
jo
xchg
dec
addr16
mov
dec
inc
mov
sub
xchg
insb
jle
mov
fwait
mov
lret
adc
mov
and
std
mov
pop
push
outsb
mov
rol
lea
cmc
nop
fwait
push
out
and
cmpsl
push
inc
cmpsb
xchg
adc
or
das
lds
and
lock
js
sbb
push
aas
sbb
int3
and
adc
sub
fidivrl
push
popa
scas
xor
pop
ja
gs
sub
andb
stc
inc
dec
lcall
aad
aad
and
bound
loope
shl
clc
fwait
sbbl
insl
inc
test
leave
outsb
das
repnz
outsl
test
mov
sub
in
xchg
xchg
rcrb
popf
icebp
pop
mov
add
icebp
int
push
aad
xchg
adc
adc
sarb
movsl
sbb
hlt
std
cmpb
fildl
mov
std
sub
movsl
repz
cmp
and
mov
sub
cmp
cld
sbb
xor
cmp
mov
jg
or
and
push
push
movsb
or
push
add
jnp
push
or
inc
push
loope
xchg
rcr
mov
fnstcw
xor
adc
mov
imul
mov
or
sub
addb
int
push
aaa
cmpsl
add
outsb
insb
enter
in
push
pop
loopne
sub
push
inc
xchg
sbb
push
sub
xor
push
test
ret
push
push
ljmp
dec
addr16
subl
mov
inc
inc
xchg
fdivl
dec
sbbl
fldl
sbb
sbb
or
ret
pop
outsl
orl
pop
stos
mov
addr16
lcall
cmp
pop
loope
clc
cmp
inc
shrl
sub
inc
test
push
mov
sbb
std
dec
ret
ja
and
or
test
lock
mov
mov
mov
push
lods
gs
iret
jne
cmp
outsb
cwtl
test
or
dec
add
negb
mov
xor
dec
mov
and
leave
push
shll
xor
mov
adcl
repnz
cld
sub
dec
test
dec
xchg
xchg
pop
pop
mov
pop
push
fidivrs
sbb
xchg
push
sbb
push
or
out
xchg
test
jno
push
sar
add
xor
and
in
inc
outsl
inc
mov
adc
xchg
test
and
popa
inc
pop
jbe
mov
mov
mov
pop
inc
roll
leave
mov
jp
or
mov
cwtl
jle
jg
sahf
nop
leave
xor
and
inc
xchg
lods
jae
or
jge
mov
sub
cmpsl
decl
scas
pop
pop
out
mov
adc
shlb
add
or
push
jecxz
mov
js,pt
lds
dec
lea
mov
cmp
mov
ss
insl
jnp
pop
shll
mov
rcr
jg
dec
out
insl
jne
mov
outsb
pusha
jnp
test
jno
mov
cmc
ja
mov
in
jo
aaa
or
cmp
jns
outsb
shl
adc
je
pop
jne
jno
mov
pop
sub
pop
push
adc
mov
xlat
loopne
cmpsl
iret
or
rol
cmpsl
adc
shll
jle
aam
bound
sbb
fs
sarb
cs
fdivl
xchg
xor
loope
sub
adc
xor
in
roll
in
and
and
inc
sub
or
ret
in
jo
inc
insl
subl
scas
xlat
stc
shrb
ja
mov
mov
jbe
dec
lret
notl
inc
sub
mov
jno
test
cld
and
jbe
imulb
stos
lock
push
outsb
and
stc
pop
jecxz
fwait
clc
pop
xlat
loopne
xchg
aaa
mov
outsb
jne
pop
xor
mov
leave
jo
mov
cmp
and
dec
or
shrb
cmpsl
jp
dec
les
je
xor
sbb
outsb
int3
adc
add
nop
loope
outsb
push
movb
add
loop
mov
dec
lret
pop
push
add
xor
pop
adc
data16
mov
in
push
push
or
in
or
jno
gs
mov
lds
add
push
shrl
cmp
mov
xlat
pop
scas
pusha
push
cmp
mov
ds
add
mov
jmp
xlat
push
sbb
and
push
pop
and
adc
inc
lock
iret
mov
xor
neg
out
inc
ds
or
loop
cmc
sub
push
ss
or
pushf
jge
pop
sub
ljmp
or
lods
into
mov
push
inc
fsubp
mov
mov
call
jp
or
movsb
rcll
sti
aad
mov
xchg
mov
adc
cld
xchg
arpl
and
scas
jno
pop
mov
dec
pop
cmp
mov
push
xor
pop
aad
dec
ss
inc
lods
jge
inc
lods
aaa
xchg
mov
inc
sbb
cmp
js
icebp
pushf
stos
jb
shrl
fisubrs
cmp
dec
xchg
pop
addr16
inc
fcomi
sbb
outsb
adc
and
mov
leave
jle
das
int3
adc
fwait
jae
jp
inc
xor
mov
cmp
icebp
movsb
dec
or
das
xor
inc
cmp
in
and
add
jne,pn
out
xor
jge
pop
lds
jmp
mov
or
pop
imull
xlat
fbld
jl
adc
mov
sub
rol
popa
cmp
cmp
xchg
ljmp
xor
jo
xor
imulb
lea
add
aam
add
mov
add
jns
hlt
sbb
or
and
pop
jb
mov
xchg
inc
cld
dec
mov
movsb
insl
dec
push
or
mov
jl
cmpsl
xchg
mov
aad
movsb
inc
sub
or
fisubs
sbb
mov
mov
in
mov
xchg
pop
sub
lds
pop
pushf
xchg
push
pop
xlat
daa
int3
sub
inc
dec
mov
mov
jg
ds
pop
and
inc
jl
jp
cmp
data16
imul
pop
sbb
cwtl
pop
xor
push
fsts
mov
lcall
lahf
fmull
out
divb
cld
pop
xchg
pop
pop
pop
sti
mov
pop
fwait
test
test
outsl
inc
cs
das
jno
inc
pop
mov
inc
imul
cmp
add
or
lea
adc
jbe
push
mov
jnp
or
arpl
mov
call
mov
ss
xchg
repz
lods
clc
jle
adc
xchg
mov
xchg
mov
cmpsb
add
inc
repz
das
call
sbb
inc
adc
push
add
cmp
mov
int
insb
popa
std
testl
mov
mov
adc
xor
jmp
or
dec
jl
mov
add
push
mov
ret
add
push
mov
mov
xchg
movb
pop
daa
jne
mov
mov
testl
xchg
dec
dec
or
sahf
pusha
xchg
xlat
push
hlt
inc
fmul
popa
and
jp
test
mov
leave
sub
fldl2t
jno
xor
mov
dec
xchg
pop
or
daa
sbb
daa
push
and
lods
jp
hlt
mov
mul
incb
push
int3
pop
test
in
mov
in
cmp
dec
inc
testl
movsl
cmp
sub
scas
or
or
daa
roll
pushf
adc
les
sub
cmp
negl
lock
inc
into
push
push
stc
fs
insl
out
cmp
push
lahf
inc
jp
sti
fdivrl
jae,pt
and
lds
cmpsb
repnz
jmp
dec
stos
pop
adc
jae
push
add
xor
adcb
add
xchg
push
fcoms
add
or
mov
test
into
ret
sub
adc
pop
notl
xorl
popf
inc
enter
mov
push
lret
adc
enter
mov
push
into
inc
cli
sbb
iret
push
loope
dec
sbb
push
mov
int
cwtl
loope
in
test
mov
test
cmp
mov
loope
cld
xchg
in
js
mov
sbb
test
fs
hlt
mov
sbb
jns
bnd
aam
sbb
xor
pop
or
add
jnp
sbb
pop
jecxz
pop
pop
sti
and
mov
xchg
jle
fwait
test
cmc
mov
sbb
ret
stos
push
mov
sbb
into
adc
lock
mov
sbb
or
sahf
in
hlt
popf
les
adc
nop
add
push
or
movsb
lds
cmp
dec
nop
dec
mov
mov
insb
ret
or
xchg
fstpt
push
add
mov
test
hlt
dec
inc
jle
in
movsb
mov
mov
inc
lret
shr
fcoml
sahf
pop
sarb
cli
sbbb
push
aam
inc
js
cmc
stos
push
sti
inc
xchg
movsl
and
mov
xlat
dec
movsl
mov
inc
cs
xor
inc
jo
lock
loopne
idivb
or
out
popl
pop
sti
test
mov
cmpsb
inc
jp
ret
arpl
ss
fidivrl
mov
outsb
add
mov
outsl
pusha
or
dec
sub
push
dec
pop
mov
mov
ja
xchg
sbb
add
call
loope
sti
call
out
out
les
in
mov
lret
adc
outsb
xor
cmpsb
loopne
push
mov
es
xor
inc
ja
rolb
mov
add
adc
fcom
jmp
inc
xorl
rcrl
aam
out
sti
cmc
push
leave
lock
jg
outsb
popf
stos
cmp
mov
dec
insl
frstor
movsb
pop
imul
idivb
dec
imul
int
pop
jmp
pop
adc
pop
imul
repnz
mov
mov
pusha
ja
cmp
jbe
mov
push
cmpsb
lret
pop
add
in
hlt
shll
jle
outsl
sbb
xchg
mov
aaa
es
mov
mov
outsl
cmp
jne
and
mov
add
or
loop
jmp
inc
jle
cmp
push
cli
ds
mov
lods
fcomps
adc
xor
aaa
xlat
pop
mov
cld
punpcklbw
inc
sti
and
sub
iret
mov
loopne
xor
pusha
insl
mov
jne
sbb
cmp
xor
bndldx
aaa
test
add
rorb
cmpsb
rcrb
add
jne
add
es
repz
out
sub
hlt
mov
or
ss
cmpsl
or
jg
jle
jmp
movsb
pop
loop
sti
push
adc
add
push
mov
inc
test
xor
and
dec
push
adc
dec
sti
sub
aam
push
mov
pop
das
cmpl
push
mov
sub
mov
outsl
scas
push
mov
int3
ret
xchg
sbb
add
inc
in
sbb
push
fistpll
push
test
cwtl
loopne
jnp
daa
jmp
xor
xor
and
jg
sbb
fs
cmp
icebp
pusha
ds
push
negb
jno
mov
and
push
jns
push
stos
jne
sbb
loope
cmp
inc
mov
into
xchg
sbb
push
jle
add
and
aas
pushf
iret
aas
arpl
in
aaa
adcl
push
and
shrl
scas
cmp
roll
push
popa
outsl
add
inc
xor
fldenv
jecxz
data16
dec
push
andb
cmpsb
mov
sub
inc
pop
pop
xor
push
jns
cli
leave
pop
mov
fnstsw
aaa
push
loopne
test
xchg
fwait
dec
cs
out
xor
outsl
test
std
imul
pop
adc
sub
jle
cwtl
ds
shll
jle
outsb
mov
fnstcw
aad
lcall
mov
jl
pop
cwtl
imul
stos
imul
scas
cld
xor
test
push
dec
jb
shrl
scas
loopne
jbe
negb
cld
cltd
mov
ja
push
mov
adc
xchg
in
push
aam
hlt
or
imul
nop
pop
xlat
cmovbe
stos
jb
arpl
lret
pop
ret
adc
mov
lods
or
ficomps
in
or
fpatan
mov
mov
adc
out
push
scas
or
sti
aad
sub
sub
mov
loopne
rcll
in
mov
push
test
ret
outsl
and
mov
xlat
lea
mov
lcall
mov
das
loop
mov
add
je
mov
out
mov
adc
push
jnp
daa
clc
mov
jmp
pop
add
into
scas
mov
ret
cmp
xlat
xor
mov
cmp
sub
daa
shr
sti
das
xor
insl
addl
xor
ss
sub
cmp
mov
loop
je
popa
fs
cmp
std
insb
fisubrl
xchg
xchg
jg
adc
ret
repz
jp
xchg
popa
test
sbb
rorl
mov
add
inc
out
jp
dec
mov
lea
xor
mov
into
data16
imul
aas
pop
push
xchg
les
adc
mov
jecxz
fs
stos
lcall
lret
add
or
sti
lret
push
and
rcr
loope,pn
lret
arpl
lea
push
cmpsl
pop
inc
insb
insb
cli
adc
pop
xor
icebp
loope
mov
dec
inc
push
andl
pop
sbb
inc
or
orl
push
dec
cs
lds
mov
dec
mov
mov
andb
push
push
pop
dec
lret
add
inc
xchg
mov
pushw
sbb
fs
movsb
cmp
xor
adc
adc
fndisi(8087
mov
push
jg
xchg
fists
inc
imul
insl
pop
daa
jnp
sub
or
xor
fs
jne
mov
inc
dec
mov
xchg
or
or
call
xor
es
cmpsb
adc
loope
leave
pop
fistpl
mov
or
pop
cli
nop
mov
pop
adc
inc
fs
mov
rclb
test
dec
or
xor
loop
ret
les
inc
dec
push
inc
call
loopne
inc
insl
data16
xchg
in
faddp
loope,pt
lcall
xor
mov
imul
test
dec
je
and
cmp
push
lods
int
jp
xchg
gs
sub
pop
xchg
aam
or
or
add
cmp
lret
sbb
inc
adc
jne
xor
mov
clc
es
jne
add
pop
jle
mov
cmc
mov
jle
ficompl
enter
gs
in
mov
xchg
and
cld
mov
xor
and
or
inc
pushfw
xor
pop
iret
inc
repnz
lock
popf
decl
ror
or
jp
jnp
xor
stc
and
pop
jl
stos
cmp
sahf
pop
xchg
cwtl
leave
add
dec
pop
lea
xchg
outsl
and
sti
test
roll
lea
lds
stc
pop
mov
or
xchg
dec
fadds
lds
andl
lahf
pop
shll
mov
pushf
jb
push
inc
adc
xchg
in
sbb
mov
sub
push
sahf
mov
lock
into
jge
cmpsb
negb
pop
mov
pop
jno
sbb
xor
sub
ret
xchg
pop
lret
mov
inc
push
add
stc
shlb
outsb
inc
pop
outsb
cmp
mov
addb
xchg
add
out
sub
inc
adc
loop
lcall
mov
push
mov
dec
cld
push
lret
aam
pop
test
call
in
add
cmp
cmp
xor
add
mov
pop
sub
fsubl
repz
cmp
xchg
add
call
movsl
pop
pop
adc
bound
jb
jg
lahf
jbe
or
and
mov
jg
aas
aas
lods
out
aas
cltd
adc
xlat
dec
inc
jo
decb
jno
ljmp
push
int3
sbb
push
jo
sbb
mov
or
in
push
loop
xchg
sub
cmp
jnp
dec
pop
or
fcomip
mov
sahf
jns
cli
dec
pusha
cli
pop
in
aas
lock
aam
dec
pop
sub
pop
inc
jnp
or
fnstsw
inc
popf
add
xor
fistps
or
repnz
sbb
iret
pop
iret
lea
mov
out
jmp
imul
arpl
add
mov
out
repnz
push
jns
movsl
lret
ret
sbb
xor
repz
icebp
jle
jno
call
dec
pop
mov
in
inc
scas
enter
enter
fidivrl
lods
xchg
je
dec
jne
loope
cmp
pop
and
add
scas
mov
pop
cs
sbb
scas
push
push
out
pop
push
sub
xchg
test
jo
ror
mov
xlat
pop
movsl
movsl
mov
jo
int
push
mov
out
cltd
leave
insb
call
aam
or
or
push
nop
jno
push
xchg
pop
aad
rcrl
pushf
jno
enter
pop
inc
into
ja
stos
add
fwait
mov
repnz
fsubr
arpl
adc
xor
mov
test
xchg
mov
out
jecxz
mov
pop
into
rcrl
add
loope
pusha
cmpsb
test
repnz
mov
cld
jmp
leave
inc
xlat
inc
pusha
cmp
or
in
adc
inc
push
pop
mov
scas
imul
xor
insl
stc
mov
push
mov
push
and
push
dec
fwait
stc
sbb
dec
sub
lds
mov
push
dec
or
adc
mov
imul
int
andb
popf
or
cmpl
jecxz
and
out
insl
jnp
gs
jb
adc
jg
sub
repnz
or
pop
lret
or
les
lock
sub
ljmp
pop
es
aad
daa
rclb
mov
xor
adc
jae
jno
icebp
mov
or
xor
sub
push
jmp
pop
std
mov
mov
lcall
imulb
and
mov
cmp
and
pop
or
xor
xchg
lods
loop
lods
out
call
lret
mov
mov
mov
inc
or
stos
out
out
adcl
adc
or
cmpsb
mov
mov
insl
cld
mov
test
jnp
mov
or
shrb
dec
loope
mov
sbb
in
cmpsb
xchg
sar
outsl
jmp
inc
in
je
enter
mov
and
jle
or
lcall
clc
popa
xor
pop
adc
ret
int
mov
mov
dec
mov
aaa
dec
adc
sbb
orl
aam
xchg
std
jb
sbb
mov
or
sbb
xor
jae
mov
pop
push
mov
aaa
sbb
pop
flds
mov
xchg
mov
lret
pop
es
adc
loopne
dec
ds
fwait
mov
nop
test
int
xlat
add
xchg
add
inc
inc
push
adc
std
rcrl
leave
or
sbb
or
push
cmp
mov
adc
hlt
xchg
into
into
hlt
xlat
and
sub
xchg
enter
cmp
gs
pop
sarb
mov
adc
in
or
cmp
mov
loop
iret
imul
jp
mov
inc
mov
xlat
mov
stc
xor
icebp
fsubl
out
push
std
add
bound
test
testl
cmp
roll
sbb
or
mov
ljmp
mov
jmp
cld
lea
cmpsb
dec
int
les
cmp
cmp
and
sub
inc
or
and
fcompp
pop
popa
nop
mov
sub
icebp
xor
scas
shrb
sub
sub
ds
xor
daa
rol
cmp
inc
adc
sbb
push
jno
sti
in
cs
adc
loopne
xchg
pop
in
iret
mov
ret
mov
ljmp
xchg
pushf
add
repnz
jp
rcll
outsl
or
in
sbb
movsl
test
or
mov
dec
fisubs
dec
inc
or
cli
imul
fidivrs
sbb
dec
test
addr16
jmp
inc
les
insb
xor
andl
adc
inc
push
adc
dec
pop
lcall
shll
into
lcall
div
mov
insl
mov
xor
bound
push
test
decl
cltd
sub
cmc
sbb
jno
mov
fcomps
mov
in
aam
dec
cltd
cwtl
mov
pop
xchg
and
fwait
leave
xchg
cli
adc
repnz
push
and
fcompl
in
addr16
sub
push
and
aas
ret
dec
mov
push
mov
jno
jae
lret
stos
jmp
daa
dec
dec
sldt
sub
pop
cld
out
mulb
dec
add
lret
das
int3
adc
pushf
dec
lret
jne
int3
mov
push
out
gs
testb
loopne
mov
repnz
or
cmpl
xchg
pop
push
jnp
mov
loop
jo
ret
push
aaa
int
mov
mov
or
sub
add
enter
lret
add
in
addr16
movsl
fadds
fists
pop
lcall
clc
js
push
add
sub
fs
insb
mov
xchg
cltd
xor
jl
inc
outsl
sti
fcomps
aam
fimull
add
jmp
popa
and
mov
clc
in
sub
xor
data16
repnz
jge
enter
loopne
xchg
loop
out
mov
std
xchg
cli
and
cmp
aaa
pop
jmp
sbb
lods
subb
popf
xchg
sub
push
pop
cmp
stos
cmpsl
vmovq
std
fisttpll
add
or
add
pop
xor
dec
dec
dec
jmp
xor
mov
pop
out
mov
or
popa
dec
xor
xchg
or
mov
add
mov
add
mov
in
mov
mov
dec
stc
out
jp
out
xchg
mov
jbe
out
jno
lret
cmp
outsb
add
xchg
jmp
cs
dec
push
and
popf
push
ret
mov
inc
inc
jl
push
loope
arpl
cs
aas
loope
arpl
jmp
loope
icebp
roll
dec
sub
loope
push
call
divl
daa
es
inc
aas
sub
daa
xor
dec
cltd
in
pushf
leave
xor
loopne
lahf
idiv
addl
popa
lea
mov
xlat
and
ss
ljmp
lea
packsswb
xlat
mov
xchg
mov
scas
testb
or
mov
or
andb
cmpb
jae
pop
push
ret
mov
shll
movsb
mov
movsl
or
popf
lods
stos
dec
in
mov
adc
sti
jns
push
xor
fidivrs
jae
xchg
cmp
push
mov
jmp
mov
packssdw
xchg
dec
xchg
mov
jae
or
or
lock
sbb
lret
into
push
lds
sbb
mov
ret
mov
cli
mov
jbe
sub
dec
rcrl
jae
fdivl
lahf
pushf
inc
lret
cmp
addl
push
sub
push
movsl
pop
mov
addr16
dec
push
cmp
inc
push
arpl
aam
xor
jb
xor
xchg
pop
xchg
ss
loope
rcrl
cmp
js
ret
or
lods
sbb
dec
pop
rcrb
out
int
jg
inc
dec
lock
rcr
in
mov
mov
push
push
popa
inc
mov
xchg
add
mov
sbb
fcmovnbe
pop
pusha
lods
inc
cmc
or
mov
punpckhbw
movsb
nop
mov
sub
sbb
mull
xchg
add
mov
jp
mov
fcomps
test
or
and
rep
mov
fs
push
mov
mov
sbb
inc
rol
mov
lods
adc
es
stc
das
loope
mov
mov
mov
mov
loop
xor
push
outsl
js
loope
sahf
mov
pop
divb
xchg
inc
ss
sub
push
imul
and
fdivl
aaa
leave
mov
and
cld
fnsave
aad
xchg
clc
xor
xchg
js
lods
sbb
rcl
nop
mov
js
dec
fstl
repnz
sbbb
xchg
jp
cmpb
ljmp
sti
or
pop
add
repnz
adcb
wbinvd
mov
loope
test
cmp
sbb
stos
push
hlt
lret
pop
xchg
lret
ds
fsubl
andb
push
mov
out
rcrb
jns
fisttpl
ds
scas
stc
inc
popa
mov
fcompp
adc
xchg
jp
add
mov
jmp
or
rcl
dec
loope
cmp
add
xor
xchg
in
scas
cmp
je
xchg
les
dec
pop
dec
xlat
rclb
cmp
xchg
mov
push
insb
scas
jo
sbb
jb
mov
je
movsb
push
jmp
push
scas
aaa
pop
and
cmp
sbb
aas
loopne
push
or
pusha
mov
or
or
mov
jecxz
fnsave
and
stos
pop
icebp
jns
pop
cmp
pushf
mov
and
mov
int
cmpsb
fwait
inc
add
dec
push
pop
xchg
popf
xchg
mov
and
jne
dec
cmp
movb
decl
cmpsb
fsubr
dec
mov
sbb
insb
adc
cmp
icebp
push
iret
lods
in
push
xchg
mov
daa
add
loopne
push
loopne
add
inc
xor
pop
cli
imul
imul
outsb
mov
ror
push
push
jno
add
mov
lcall
push
into
incb
cli
je
mov
pop
int
sub
std
lret
lock
ror
sbb
je
mov
pop
repz
mov
nop
mov
and
jnp
sbb
push
imul
pushf
pop
hlt
into
xchg
shll
sbb
inc
jae
sbb
cmp
add
inc
push
outsb
test
push
movntps
xchg
and
icebp
repnz
mov
cmpsl
mov
xchg
bound
pop
cltd
ljmp
cmpsl
rcr
lods
xchg
sub
test
cmp
mov
lcall
mov
aas
mov
jecxz
jo
add
imul
mov
cmp
jl
mov
adc
in
fcomps
pop
out
lea
sub
mov
lahf
fiaddl
popf
dec
jns
lods
xlat
hlt
inc
mov
jmp
xchg
addb
pusha
aam
and
int3
adc
loop
iret
std
ret
adc
test
loopne
jb
arpl
push
sti
incl
ret
mov
fs
jmp
push
jmp
mov
push
sub
cmpsl
adc
mov
data16
or
xchg
int
int
adc
stos
lret
cmc
push
push
add
pop
fidivl
mov
movsb
gs
jle
push
in
mov
add
hlt
adc
add
xor
mov
test
cld
mov
test
jbe
push
jp
jp
shrb
push
mov
lods
push
cltd
push
pusha
xor
icebp
mov
mov
xchg
jmp
sti
xor
add
in
sbb
jb
in
adc
dec
callw
cmp
fstp
push
sarb
scas
sbb
movsb
lds
lahf
mov
dec
decb
in
push
jb
xor
cmp
dec
pop
imul
pop
ja
adc
call
mov
push
cmp
push
mov
push
ds
popa
jle
pushf
mov
notl
add
gs
adc
or
movsl
call
loop
mov
icebp
dec
mov
test
mov
ret
dec
test
mov
mov
aam
dec
push
lret
loop
add
sub
sbb
and
jae
pusha
shll
sub
xchg
push
dec
xor
inc
push
sub
xor
ljmp
push
pushf
xchg
pop
fs
lea
cmpsb
and
add
cmpb
lds
pop
or
mov
add
xchg
xor
pop
sbb
mul
lods
push
test
mov
mov
roll
inc
rcll
rolb
pushf
shrl
aas
mov
dec
cmp
and
idivb
dec
adc
pop
or
sbb
and
jb
cmp
fisttps
test
dec
jl
push
pop
ds
mov
dec
in
popa
mov
push
cmc
add
sbb
dec
leave
test
addr16
mov
xchg
cli
jecxz
xor
ja
enter
inc
leave
movsb
in
ss
mov
pop
mov
push
adc
adc
lret
aaa
sbb
xchg
xor
pushf
insb
insl
ljmp
inc
mov
test
in
push
fiaddl
gs
xor
stos
addr16
jb
cwtl
push
pushf
mov
out
inc
mov
cld
rcrb
call
icebp
pop
mov
xlat
mov
inc
push
push
mov
inc
sbb
sahf
lock
fisubl
enter
xchg
mov
dec
aad
je
sbb
ss
mov
sti
jge
aam
out
dec
imul
cmp
add
or
inc
or
sub
icebp
lret
mov
xchg
mov
cmp
jmp
sub
gs
stc
lea
mov
ljmp
dec
pop
cmp
xchg
mov
cmp
push
push
add
loop
out
cs
ja
loop
push
adcl
cld
add
loope
mov
insl
mov
jb
ljmp
pop
mov
clc
std
push
lods
xchg
test
test
lea
jle
es
scas
jns
push
out
sub
je
in
mov
xor
pop
test
ja
repz
adcl
shl
in
sbb
mov
ja
push
sbb
pop
loopne
and
data16
xchg
mov
pop
mov
mov
xchg
insb
push
ror
adc
cmp
xor
push
push
call
inc
bound
sbbb
ss
dec
das
mov
mov
push
jg
repz
pop
std
inc
or
lcall
test
sbb
test
insb
ret
into
cli
repz
lods
in
push
or
jge
jle
js
inc
shlb
mov
inc
add
mov
adc
cmp
fstps
lods
rcl
or
pop
test
mov
push
cmp
outsl
and
xchg
or
divb
cltd
fs
mov
lcall
xchg
outsb
add
xchg
repnz
add
push
sub
lahf
jmp
nop
js
gs
divb
sub
frstor
inc
push
mov
jno
data16
pop
jg
pusha
lcall
or
adc
jnp
cmpsl
xchg
xchg
data16
sbb
mov
sub
in
sbb
push
sub
notb
cwtl
sar
outsb
iret
cwtl
mov
loop
imul
bound
push
cmp
leave
or
bound
mov
mov
dec
sbb
sti
enter
out
add
sub
aam
imul
add
xor
adc
adc
pop
cwtl
jecxz
push
xchg
notb
pop
sub
push
movsl
pop
cli
jp
mov
inc
add
in
add
pop
into
aam
fsubr
in
push
bound
push
fdivl
adc
push
fisubrs
iret
mov
daa
arpl
js
insb
cmp
cmp
clc
lret
loop
hlt
sub
test
pop
mov
repz
inc
jge
push
jmp
rcrl
mov
mov
push
mov
shrb
jecxz
ds
mov
stc
leave
test
cmp
mov
dec
hlt
addr16
mov
push
je
sbb
call
ss
pusha
mov
mov
gs
jle
jns
outsl
icebp
sbb
pop
dec
sub
shll
jmp
push
add
add
xchg
rorb
and
pop
pop
mov
test
jae
push
out
lret
sub
xor
cmp
sbb
fs
ret
fisttps
adc
pushf
jnp
stos
fmul
in
inc
pop
fstl
dec
aas
mov
imul
cmpsl
adc
push
push
and
sbb
or
dec
cs
add
cli
pop
mov
xchg
pop
les
sub
outsl
add
push
ljmp
dec
mov
adc
push
int
clc
adc
daa
cmp
jnp
fwait
push
movsl
std
mov
scas
mov
sahf
arpl
dec
push
bound
dec
push
jecxz
lods
add
icebp
mull
mov
jne
push
push
xchg
test
out
xchg
das
nop
inc
jnp
and
lret
scas
jbe
mov
js
cwtl
mov
js
cltd
sub
xchg
js
test
xor
pop
ret
imul
xchg
adc
sub
shrl
mov
mov
jl
dec
adc
add
movsb
in
adc
fs
inc
push
xor
out
xchg
xchg
movl
and
or
xor
fbstp
fldcw
dec
lahf
decb
xor
fsts
or
add
test
jo
adc
add
xchg
nop
add
mov
outsl
cvtdq2ps
mov
mov
sub
sub
inc
pop
in
mov
imul
cmp
insb
loopne
cmpsl
fstps
cmp
mov
adc
push
lcall
pushf
jmp
add
cmp
mov
push
ja
call
add
mov
cli
cmpsb
imul
xor
loope
daa
addr16
icebp
and
stos
xor
add
mov
dec
cmp
pop
ja
pusha
in
mov
sub
push
loopne
out
fnstenv
les
enter
iret
sub
xchg
mov
mov
inc
sub
or
xchg
jb
aas
cmp
pop
jo
jp
mov
or
punpckldq
xor
mov
ja
cmp
mov
rorb
pop
pop
adc
dec
or
add
stos
shl
mov
adc
mov
push
push
xor
test
movsb
mov
das
imul
sbb
mov
xchg
in
loop
push
and
rol
mov
rorb
mov
mov
xchg
xorb
mov
pop
enter
testb
mov
mov
push
nop
sbb
add
scas
xor
dec
pop
mov
aad
mov
pusha
push
rcrb
aaa
fcomps
jb
push
es
xlat
jecxz
ljmp
cld
roll
icebp
mov
and
int
test
or
sbb
xchg
movsb
push
xor
jnp
xlat
mov
pop
sbb
xchg
inc
mov
call
inc
fstpt
mov
addb
add
repnz
je
lods
mov
pop
sub
hlt
arpl
lret
and
mov
dec
mov
sub
add
add
aas
adc
pop
push
int3
sarl
sbb
mov
inc
loopne
dec
pop
sbb
mov
into
outsb
and
sbb
mov
inc
inc
push
dec
inc
call
shl
inc
xorb
or
in
cld
rolb
hlt
xor
into
orl
fldt
cmpb
mov
or
adc
xor
xor
pop
add
and
aaa
sub
out
jbe
adc
and
pop
and
test
sbb
dec
icebp
or
inc
loop
and
adc
lock
filds
movsl
les
mov
cmc
dec
mov
adc
jmp
stos
icebp
add
lcall
xchg
popf
xchg
mov
je
sahf
inc
cmp
imul
sub
fisttpll
dec
add
jbe
addr16
subl
push
movsb
stc
push
js
insl
inc
fcoml
mov
mov
ret
loop
outsb
aaa
xchg
lds
pop
push
xor
add
push
leave
ljmp
test
insl
push
jmp
mov
lahf
push
jp
ds
sarb
mov
jg
mov
and
lods
out
outsb
xor
ret
mov
icebp
or
mov
sub
pop
sub
mov
add
ss
ds
iret
dec
test
arpl
lods
lods
xor
in
jp
sti
in
inc
jo
jecxz
push
add
jmp
jl
mov
aam
je
lods
fwait
or
lea
xchg
xchg
ljmp
xchg
sub
sub
lea
xor
into
pop
add
negl
pop
aam
andb
cmpsl
loope
add
sub
repnz
ds
sub
negl
sahf
mov
enter
sahf
lahf
test
popa
lahf
mov
dec
movsb
and
cltd
pop
rdtsc
iret
idivl
cmp
adc
pop
mov
arpl
cld
add
sub
pop
sahf
mov
fwait
mov
das
adcb
scas
or
sub
inc
fnstsw
ror
ret
and
xchg
nop
and
mov
adc
popl
aaa
pop
outsl
test
leave
mov
pop
xchg
inc
cmp
in
lret
adc
pop
sub
xor
and
aas
pop
into
stos
adc
cli
push
pop
das
jbe
pushf
data16
lds
sbb
lods
divb
jp
inc
stos
and
shrb
dec
push
inc
jb
aam
in
rcrb
or
mov
jbe
stos
movsl
notl
push
subl
test
data16
sub
call
mov
ds
inc
mov
insb
stos
inc
cmp
adc
pop
push
std
dec
lds
negb
lods
push
inc
xor
push
rcrb
dec
in
jp
arpl
sub
test
jmp
mov
mov
fs
cld
cmc
imul
pop
sub
sub
or
xlat
shrb
mov
scas
mov
pop
mov
lea
loopne
mov
inc
jge
inc
dec
or
mov
dec
or
lcall
insb
sbb
shl
dec
dec
data16
cwtl
iret
or
sbb
push
mov
jg
pop
movsl
addl
fsub
dec
outsb
sbb
inc
pop
push
sub
fidivs
xor
adc
ret
or
cmp
popa
daa
dec
sbb
lods
xorb
lods
idivb
mov
cmovl
adc
inc
ret
or
lret
sub
nop
scas
loop
jo
pop
xorb
stos
shlb
cs
and
ja
xchg
fldt
inc
sub
pop
daa
int3
sahf
stos
push
ja
pop
pop
dec
dec
xor
pop
sbb
clc
nop
jecxz
lret
cmpsl
mov
jae
mov
sbb
out
hlt
cmc
push
dec
or
jecxz
xor
jnp
test
mov
cs
mov
shll
lods
jno
repnz
push
ror
jle
jg
cwtl
xor
jno
sub
fcmovnu
filds
jecxz
test
adc
sub
xchg
negb
fsubrl
fdivl
les
scas
jns
sub
testb
cld
sahf
shl
dec
testb
outsb
jbe
dec
in
inc
lcall
daa
ret
int3
cli
cli
mov
cmp
enter
pop
aas
push
pop
cmp
subl
push
mov
in
xchg
push
aam
inc
lcall
call
mov
lret
xchg
repz
jb
xor
ret
cmc
sbb
shrl
mov
lods
mov
jg
push
cmpsl
sbb
scas
iret
cmp
push
inc
cltd
inc
pop
dec
push
popa
pop
push
dec
inc
inc
mov
fisubl
cwtl
ret
mov
jl
push
cmp
or
adc
in
and
mov
xchg
arpl
inc
or
inc
je
sbb
dec
xor
pop
incb
sub
mov
cwtl
xchg
add
cmp
imul
cmpsb
scas
ror
cld
iret
out
jl
cmp
xchg
insb
dec
call
aas
sub
inc
mov
shrb
xchg
out
xchg
idivl
lcall
mov
sub
lret
add
jle
dec
pop
inc
mov
fiadds
or
xchg
push
push
mov
sbb
push
or
lea
test
cs
xor
mov
into
mov
mov
sbb
js
add
mov
shll
je
and
out
mov
cltd
xchg
sbb
stos
inc
pop
jmp
inc
sahf
sahf
cli
mov
xchg
outsl
jle
sbb
paddd
or
cmp
jae
push
outsl
xchg
rcll
idiv
sarb
jl
xchg
push
xor
xor
xchg
pop
cmp
adc
xor
mov
nop
les
pop
and
call
scas
pushf
cmc
into
shlb
out
mov
pop
sbbb
jmp
pop
incl
xchg
pop
or
mov
movsb
pusha
push
pop
adc
push
aam
shrb
clc
ds
fisubs
adc
icebp
mov
dec
mov
add
xchg
inc
xor
push
dec
js
scas
vmovhps
cld
jp
adc
pop
xor
sbb
pop
add
outsb
jl
ljmp
movsl
push
fsubs
outsl
jno
sub
pop
mov
xchg
push
cli
mov
jne
pop
pop
jp
xchg
pop
dec
aad
xchg
sub
push
mov
mov
outsl
add
dec
rolb
das
jmp
sbb
inc
divb
push
jb
inc
mov
xor
les
sub
sub
and
and
cltd
int
popa
pop
dec
sbb
push
push
inc
push
scas
test
loopne
lea
mov
icebp
xchg
adc
mov
int
adc
scas
adc
push
negl
jo
push
addr16
leave
test
outsb
pop
movsb
jo
pop
xor
ljmp
in
push
cmc
mov
aas
icebp
mov
int
aas
test
sbb
test
test
cltd
jge
and
add
pop
cmp
in
xchg
cmp
sub
mov
mov
adcl
sbb
dec
jl
inc
mov
add
or
mov
faddp
ficompl
xor
mov
pop
negl
iret
movsb
or
pop
inc
xchg
loope
roll
std
xor
subb
dec
int3
cmp
ljmp
sub
dec
and
pop
or
cmp
loopne
fcmovnu
dec
mov
iret
sbb
adc
cmp
stc
lock
add
out
xor
mov
jae
pop
mov
stc
mov
dec
and
cli
pop
lds
inc
xorl
add
or
xchg
test
out
fdivrl
mov
sub
ja
jne
mov
aad
cwtl
int3
dec
movsb
jae
and
movsl
adc
loop
jl
cli
out
icebp
psllw
gs
push
xorb
xor
bound
subl
adcb
ds
mov
cli
pop
lds
mov
mov
mov
repnz
or
jmp
pop
push
stos
add
movsl
mov
lods
xor
popf
xchg
outsb
mov
scas
cli
shlb
lds
dec
push
push
jno
fldl
pop
mov
xchg
loopne
ds
and
jno
mov
scas
aam
or
icebp
das
pop
mov
or
addr16
inc
repz
dec
popa
fisttps
out
adc
loopne
push
sbbw
fcom
add
rcl
mov
lock
mov
pop
in
repnz
call
push
repnz
add
je
cmc
ja
adc
or
dec
jbe
aas
scas
addb
roll
popf
jns
std
push
sub
xchg
fsts
mov
or
lret
cli
lods
or
jbe
push
sub
cltd
dec
shl
mov
jno
lret
and
jmp
xor
sbb
outsl
inc
xor
shrl
mov
push
jnp
xor
cmovs
ds
repz
and
out
mov
xor
cmpsb
loop
fcoms
dec
ret
xor
fnstenv
fwait
push
sbb
jb
add
xor
cs
xchg
ficompl
and
cld
jnp
int
mov
mov
loope
lahf
lds
add
sahf
push
aaa
inc
mov
jae
cmp
inc
idiv
sub
adc
inc
arpl
add
adc
or
std
inc
cltd
or
cmpsb
pushf
mov
pop
cmpsb
pop
xor
pop
pop
lahf
lahf
sahf
mov
or
jne
mov
inc
pop
pop
movsb
mov
psubq
mov
test
mov
pop
jo
cli
hlt
lcall
or
xchg
cmc
fstps
or
ret
dec
mov
mov
inc
mov
xor
stos
mov
pop
adc
jae
imul
jmp
ss
lods
jp
sub
loop
outsl
or
inc
push
call
iret
or
or
popa
dec
aam
ffreep
pop
int
lods
pop
adc
pop
adcl
clc
xchg
in
xchg
ds
jns
adc
arpl
or
or
jb
aad
arpl
and
in
pop
pop
sbb
lret
sub
and
sub
iret
add
jl
push
fisubs
and
adc
into
andl
push
mov
cmp
xchg
int3
jge
or
addr16
daa
inc
sbb
aas
sbb
test
mov
stc
cmp
loope
xor
xor
in
dec
and
jle
and
fs
rcll
mov
daa
jmp
ret
pop
repnz
push
inc
insl
mov
or
ds
pusha
cmpsb
mov
fisubrs
push
imul
pop
add
pop
es
lods
sub
push
and
shr
xchg
sbbb
mov
inc
ljmp
xchg
jmp
add
scas
or
mov
mov
insl
mov
cmpsb
movsl
mov
loop
sbb
mov
jmp
push
lret
movsl
fisttpll
cmp
repnz
adc
addr16
jp
adc
add
in
test
popa
dec
enter
adc
xor
int
inc
add
insb
idivb
leave
lds
jg
out
add
mov
dec
inc
dec
lahf
sub
dec
rorl
dec
sub
inc
jae
cmp
arpl
nop
sub
outsl
mov
fnsave
out
xor
repz
lds
jp
push
cmp
test
and
js
out
into
push
mov
lods
aaa
xor
das
pop
and
imul
mov
ja
iret
lods
rep
xchg
outsb
sahf
add
mov
daa
addr16
pop
les
lods
jmp
lock
mov
mov
mov
push
negl
xor
out
fstpl
loopne
adc
sbb
push
dec
stc
int3
mov
xchg
mov
ss
xor
fwait
bound
pop
sub
pop
push
dec
adc
out
mov
enter
cmp
cmp
mov
data16
das
xchg
aad
push
and
fwait
cli
pop
adc
cmp
jae
xchg
and
aad
std
bound
dec
inc
add
loope
xlat
shlb
int
adc
xor
cld
jno
cmpl
test
inc
pop
pop
sub
mov
repnz
out
scas
cmp
adc
xorl
popa
sbb
imulb
scas
shll
jle
mov
inc
or
test
pinsrw
bound
adc
sub
xchg
fdivrl
std
mov
leave
pop
jnp
repz
incb
lea
pop
aas
hlt
popa
cmp
jb
sbb
jae,pt
dec
mov
cs
dec
cmp
in
lods
sbb
popa
dec
cmpsl
pushf
mov
fs
sbb
arpl
mov
iret
xchg
lds
jp
jae
or
sbb
cmpsb
leave
adc
and
mov
stc
push
sbb
std
pop
fisttpll
loop
mov
push
test
leave
push
xchg
adc
jb
int
add
mov
in
and
call
aam
cmpsb
int
xchg
aaa
lcall
aas
cmc
inc
adc
outsb
dec
icebp
and
and
dec
add
push
push
xor
mov
icebp
push
rcr
pop
ret
cld
fsubp
aas
cmp
pusha
or
inc
adc
lods
testl
push
inc
call
pop
mov
sti
xor
mov
aaa
mov
aaa
in
lret
and
ret
sti
cmpsb
push
pop
into
mov
test
sbb
xchg
arpl
or
xchg
pop
in
add
in
stc
mov
and
shll
mov
ret
in
jge
mov
hlt
loope
push
lds
imul
icebp
les
bound
inc
pusha
jp
sub
mov
jecxz
rcrl
jns
fwait
roll
mov
push
ret
pop
imul
dec
pop
add
loopne
rorb
ljmp
xor
mov
jae
mov
push
ret
add
xor
je
ret
push
outsl
lret
mov
pop
jb
stc
sbb
aad
mov
inc
bound
xor
pushf
adc
call
push
mov
xlat
mov
cld
push
push
sub
cmpsl
insl
repz
outsl
cli
inc
into
mov
jo
mov
or
outsl
ja
notb
add
std
arpl
xlat
xchg
call
fnstsw
push
xchg
enter
push
rorl
cmp
fs
aaa
add
je
push
add
mov
mov
cmpsl
in
test
inc
aas
add
mov
lods
push
ljmp
jo
add
push
fidivrl
arpl
push
cld
jmp
mov
testl
dec
xchg
hlt
xor
mov
outsb
int
out
inc
and
pusha
adc
movsb
sub
and
cmp
fldcw
and
in
loope
add
sbb
leave
inc
lret
adc
and
mov
mov
fstps
mov
je
lret
stc
ds
mov
out
fcomps
inc
jg
mov
aaa
stos
sub
loopne
sti
call
fbstp
mov
jbe
mov
pop
repz
ret
ds
mov
cmovne
loopne
inc
cmp
sahf
popf
test
xor
mov
mov
in
or
dec
pop
cmp
mov
rorl
push
or
or
negb
js
push
std
or
mov
insb
push
rol
cmpsb
pop
sub
mov
mov
insl
cmpsb
sahf
data16
es
mov
lods
xchg
pop
mov
sub
mov
mov
mov
mov
cmp
out
and
push
cs
cmpsl
sbb
push
fcoms
scas
adc
mov
inc
dec
in
mov
bound
js
out
loope
ss
sbb
sti
scas
es
cld
push
mov
lds
and
sub
cmp
mov
aaa
call
cmp
mov
xchg
shll
inc
mov
pop
sarl
pop
and
xor
enter
mov
cmp
popf
pop
cmp
and
out
aam
out
cld
jae
or
and
imul
loope
pop
mov
movsl
inc
push
pop
cmp
cli
sbb
imulb
fsubs
sub
xchg
xor
jle
add
pusha
jle
cmpl
inc
fdivrs
or
mov
sbb
inc
ffreep
out
jno
fwait
ss
out
or
dec
xor
movsb
cmpl
mov
xchg
pop
dec
add
dec
sub
or
push
jnp
stc
andl
sarb
ret
adc
mov
loop
lahf
cmp
add
jmp
iret
mov
leave
cltd
leave
mov
cmp
cmpsl
or
xor
inc
mov
mov
xor
loope
adc
push
outsl
rcrl
into
fsubs
test
mov
movsb
jge
inc
sub
lods
pop
mov
pop
push
jbe
mov
fdivr
pop
and
jo
push
and
adc
decl
push
test
adc
dec
xchg
jmp
repnz
mov
mov
or
fistl
mov
ret
lahf
add
sub
add
sub
lods
cmp
out
movsb
cli
sbb
ret
rcl
aad
lret
push
xor
mov
xchg
add
cwtl
jb
xor
mov
pusha
inc
cmpsl
add
addr16
xor
pushf
dec
xchg
dec
into
ds
filds
lret
test
mov
test
mov
call
int3
popa
and
out
adc
sub
mov
pop
insb
adc
dec
adc
rcll
outsl
es
loop
xchg
lret
xor
mov
mov
jnp
push
mov
cs
loopne
jl
frstor
dec
mov
enter
lds
push
arpl
aas
add
rcl
test
ja
fcom
inc
or
sbb
or
dec
gs
mov
sub
repnz
mov
cmp
lahf
pop
inc
inc
mov
cmp
rcll
push
btr
xchg
xor
movsl
movsl
mov
inc
imul
sti
adc
jae
mov
xchg
jmp
inc
daa
movsl
or
jge
dec
mov
xchg
adc
test
xchg
lea
inc
lods
mov
pop
stos
sub
dec
pop
test
loope
leave
iret
leave
in
sarb
jge
sbb
repnz
xchg
mov
mov
jle
ror
jbe
sub
test
xor
mov
mov
sti
and
dec
add
mov
inc
push
stos
ljmp
and
aas
cmpsb
xor
xchg
xchg
and
aam
and
popf
mov
mov
test
repz
sub
dec
pop
je
rorl
mov
sub
sub
bound
lods
or
hlt
idivb
cmp
adc
lcall
daa
sub
jns
out
iret
fxch
inc
mov
push
sub
mov
loopne
mov
fimuls
sbb
js
inc
test
repnz
mov
push
pop
sahf
jg
sahf
adc
jo,pn
sub
call
lea
cmpb
adc
jecxz
test
sub
outsl
xchg
push
movb
outsl
push
lcall
arpl
mov
xchg
jmp
call
std
popf
test
insl
fisttps
xchg
mov
jne
in
mov
inc
jnp
test
inc
sub
mov
or
mov
loopne
sub
adc
push
nop
jns
in
dec
mov
inc
hlt
aas
addr16
pop
jmp
sti
pop
cmp
add
sub
movsb
idivl
lds
das
and
xor
out
mov
mov
and
or
pop
pop
cmp
and
decb
jae
dec
jge
push
and
lods
loop
mov
int3
mov
adc
into
sub
mov
push
fwait
stos
addr16
pop
adc
cmp
loope
mov
popf
cmpsl
data16
loop
adcb
jmp
push
mov
test
sahf
cltd
sarb
outsl
pop
add
mov
jmp
sarl
jle
push
jbe
scas
and
ss
loop
inc
xchg
inc
xor
mov
stos
imul
xchg
xchg
mov
add
pop
cmp
mov
mov
imul
jmp
lock
fwait
or
call
mov
add
aam
aad
add
fldl
adc
pop
ds
xlat
inc
sbb
mov
je
cmpsb
jmp
pop
or
ffreep
and
push
stc
cwtl
or
out
test
mov
sbb
es
stos
cmpl
in
and
cli
inc
insl
stos
mov
mov
dec
iret
js
and
mov
mov
jne
push
mov
and
mov
stos
cmp
add
xlat
xor
dec
into
dec
push
outsl
lret
in
cli
pop
dec
shll
jb
les
dec
cmpsb
dec
fdivr
push
cmp
cmp
xchg
jnp
es
and
jmp
xchg
repz
sub
add
in
mov
mov
sbb
stc
mov
jae
insl
dec
xchg
push
fdivrs
ds
push
pop
jbe
fldcw
adc
and
lret
jno
inc
add
xor
roll
in
lods
enter
jp
into
mov
iret
dec
jno
dec
sbb
fstl
ljmp
dec
cmp
outsb
test
or
subb
addr16
jbe
mov
sub
ja
xor
cmp
mov
aaa
lds
inc
test
inc
xlat
daa
aam
stc
jno
mov
das
fcmovnu
adc
shlb
or
frstor
repz
push
and
fisubs
ss
out
fisttpll
push
xor
push
bound
fs
dec
fsubs
sti
aas
cmp
inc
ds
cmp
adc
aas
fdivrl
scas
popf
je
data16
arpl
std
cmp
jno
in
lock
mov
lods
sub
pusha
xchg
adc
push
xchg
test
pop
pushf
pop
fadd
sub
and
pop
mov
jecxz
jge
xor
pop
fistps
jb
lods
sub
fwait
sub
in
pop
ds
repz
push
push
incl
or
xchg
xchg
sub
stos
loopne
xor
sbb
pop
repz
addr16
in
jne
movsb
or
adc
jne
push
or
push
lea
cmp
cld
out
lock
sbb
icebp
aad
jge
push
sub
in
loopne
cltd
inc
shr
int
push
leave
sub
xor
dec
push
dec
or
mov
movsb
inc
lods
cmc
mov
mov
outsl
cmp
fisttpl
mov
inc
mov
addb
mov
shrb
sub
push
ja
imul
mov
stos
shrb
ret
ret
cltd
data16
or
dec
inc
or
cmp
iret
mov
mov
push
fnstsw
or
repnz
xchg
xor
bts
push
dec
cmp
mov
call
loopne
mov
cmp
in
inc
cmpsb
pop
mov
adc
push
xor
idivb
enter
pop
push
jno
aam
lods
cmp
jp
mov
or
pop
lahf
push
cmp
dec
xchg
fwait
aas
outsb
push
cmp
mov
int
dec
inc
sbb
mov
nop
incb
mov
push
sbb
push
lods
xchg
cltd
push
clc
adc
je
jne
imul
adc
jnp
dec
and
lcall
push
jge
je
fwait
js
clc
cmc
call
fimuls
ds
and
pop
inc
aam
fsts
mov
xchg
add
fstl
insl
cmpsl
jno
mov
inc
scas
int
pop
test
popa
jmp
nop
xor
into
jmp
or
sub
sbb
lds
enter
mov
out
sub
les
pop
jae
das
out
mov
mov
repz
xchg
shll
pop
sahf
jno
xor
sbb
xor
popf
xor
fwait
xor
ficompl
inc
cmp
sti
out
add
daa
adc
add
or
dec
cmc
mov
adc
pop
clc
sti
push
xor
lds
fdivl
aad
jb
inc
xchg
into
push
add
pop
xor
int
jle
push
clc
or
push
jbe
fbstp
or
lods
cmpsl
gs
pop
nop
daa
mov
push
xor
lds
lock
or
mov
mov
std
clc
outsb
popl
scas
sbb
loop
sub
icebp
fstl
sbb
cmp
cmpsb
push
lcall
cmp
add
cmp
pop
xchg
imul
out
mov
inc
xor
stc
pop
xor
dec
xchg
ljmp
rcr
ret
mov
adc
jp
pushf
dec
lods
lret
clc
aad
stos
add
cltd
xchg
ficompl
dec
lods
mov
xlat
cwtl
xlat
sahf
fldt
je
mov
nop
daa
sub
mov
and
addr16
rcrl
push
dec
sti
jb
mov
adc
popa
sti
imul
pusha
and
cmp
gs
call
je
inc
ljmp
mov
jbe
mov
dec
inc
mov
imul
pop
ret
subb
cwtl
lcall
push
or
lahf
cmp
bound
mov
push
js
cmp
dec
pop
popf
mov
pop
cmp
sub
repnz
adc
iret
ret
rcll
dec
das
out
pop
or
mov
and
push
aas
popf
xor
pop
xor
sub
arpl
in
xor
repz
mov
popf
sub
fld1
and
mov
setg
stos
shrb
inc
inc
mov
repnz
je
jl
lods
mov
push
cmp
inc
mov
cmpsl
mov
int
sub
sub
out
cmp
add
jmp
shlb
stc
out
mov
mov
add
sbb
xchg
cmc
jns
add
add
sbb
ds
ffree
rcl
scas
add
scas
adc
mov
popa
roll
aad
jns
push
inc
mov
cmp
roll
hlt
inc
cmove
arpl
mov
leave
mov
pop
add
cmpsl
add
mov
jecxz
dec
test
jmp
mulb
jp
es
xchg
push
pop
sub
jo
inc
add
jno
cmc
test
lret
push
mov
ficomps
aad
and
andb
add
aad
mov
mov
cltd
cld
push
or
cmp
out
and
icebp
mov
mov
sbb
cmp
cmc
inc
jmp
fldl
mov
call
push
push
ret
dec
mov
aad
jecxz
in
cmp
jecxz
test
jb
add
pop
inc
lds
xchg
sbb
mov
xchg
sahf
inc
inc
and
mov
mov
in
mov
jmp
mov
add
clc
xchg
or
add
ja
loope
pop
dec
notl
out
leave
popa
fwait
and
push
jmp
out
mov
mov
arpl
cwtl
xchg
sub
repnz
push
cmp
inc
les
jge
xchg
fisubs
add
pop
pop
dec
push
mov
push
mov
lock
lret
cmp
aam
xchg
hlt
and
mov
lea
loopne
js
or
jns
xor
fcmove
icebp
fimuls
adc
dec
push
iret
insl
pop
adcb
jge
jo
inc
out
sub
cmp
scas
sub
or
dec
repnz
xor
push
cwtl
fdivs
rolb
lret
orl
lahf
movsl
insl
cmp
stos
mov
nop
movsb
imul
test
pop
cmp
icebp
dec
popf
test
rcrl
mov
sbb
xor
pop
out
dec
sbb
unpcklps
inc
mov
pop
loop
iret
mov
fildll
sbb
adc
std
cli
mov
push
aas
sbbb
mov
int3
scas
stc
xlat
jo
fstpt
and
aaa
aad
fsubr
ficompl
cmp
shrl
es
push
in
fsubrs
xchg
push
pop
lods
call
aas
sarl
or
stc
cmp
lfs
add
xchg
sti
pextrw
sub
pop
mov
aam
clc
xor
cmp
outsb
movsl
pushf
pop
push
mov
cli
fwait
pop
dec
push
repnz
adc
xchg
add
or
pushf
pop
mov
cmc
pushf
arpl
mov
sub
cli
mov
mov
out
shll
sbb
push
mov
arpl
xor
add
fwait
stos
jmp
sahf
dec
fstp
push
aaa
sahf
bound
stos
inc
mov
lods
je
dec
orl
mov
mov
imul
idiv
mov
mov
sbb
adc
pop
add
test
dec
or
mov
xchg
and
ljmp
mov
lret
in
rcrl
or
fmul
add
xchg
cmpsb
insb
mov
dec
pop
pusha
cli
inc
cld
xchg
mov
sbb
stos
in
xchg
loope
or
cmc
mov
xchg
inc
mov
inc
icebp
movsb
sbb
movsl
xor
cmp
mulb
popf
nop
popf
ss
mov
and
xchg
sbb
push
push
loopne
gs
out
lock
stos
es
push
insb
dec
ss
sub
andl
inc
out
push
xor
outsb
imul
call
push
jns
push
pusha
pushl
and
or
arpl
sbb
out
adc
dec
fs
call
dec
push
xchg
lahf
push
mov
hlt
xchg
bound
out
inc
ljmp
adc
ljmp
mov
call
dec
xchg
mov
jle
rol
and
cmp
out
test
or
and
add
fdivs
mov
xchg
cs
stc
daa
sub
xor
add
lcall
sub
ja
ss
pusha
iret
aas
fnstcw
jg
out
movsl
sahf
out
lret
bound
sbb
adc
cs
int3
ret
scas
mov
cs
adc
daa
leave
cs
cmp
cmpsb
and
lock
mov
push
cmp
push
pop
and
fsubrp
push
mov
ret
gs
xchg
jns
test
sarl
dec
in
mov
sbb
cld
int
mov
push
cmpsb
fwait
adc
inc
inc
das
sbb
pop
xor
aaa
xchg
sbb
adc
mov
adc
cltd
addl
adc
dec
or
push
sub
mov
jbe
int3
fcompl
jbe
jb
dec
add
or
xchg
sbb
or
movsl
push
cmp
xchg
xor
or
out
movsb
or
out
orb
inc
mov
js
add
mov
loopne
sub
cmpsl
test
dec
mov
sub
ljmp
add
and
mov
mov
add
sysret
jp
ja
fimull
xor
mov
cmpsl
and
mov
fnstenv
ret
filds
jge
cmp
mov
jb
xchg
mov
sbb
insb
cmp
cmp
add
rcll
dec
addl
lret
or
xchg
sbb
sub
pop
fstl
pop
jg
xchg
lea
xor
inc
add
imul
cwtl
jecxz
gs
adc
xchg
dec
sbb
add
mul
jecxz
dec
inc
sub
mov
dec
dec
jg
and
popa
pop
mov
cmp
mov
or
cli
fists
cmpsb
and
enter
pushf
loopne
add
jb
fstpt
pop
dec
fwait
hlt
inc
cmc
imul
repz
ficompl
mov
mov
nop
and
call
fbstp
test
cmpsb
sbb
in
cld
mov
mov
cwtl
or
xchg
outsb
icebp
iret
les
mov
pop
arpl
data16
sbb
stos
out
cli
sub
sbb
pusha
push
lahf
push
push
xchg
out
mov
insb
nop
xchg
dec
lgdtl
inc
sti
pusha
xor
mov
cmp
js
xchg
hlt
mov
out
stos
inc
dec
fs
xchg
sub
repnz
mov
jnp
inc
arpl
mov
push
or
testb
dec
pop
adcl
cmpsb
mov
shl
dec
lret
ja
sbb
fwait
dec
xor
add
sqrtps
fs
aam
movl
test
test
mov
movsb
and
mov
rclb
adc
cmp
sbb
enter
pop
xchg
and
push
pop
js
inc
and
pop
in
xchg
shl
adc
and
xchg
mov
cli
imul
pop
push
and
inc
stos
mov
mov
repnz
jl
out
dec
rolb
pop
arpl
test
out
cltd
ss
xchg
pop
xor
fwait
out
lret
mov
jge
mov
xor
add
mov
daa
daa
cmc
sub
cmpsb
gs
inc
testb
mov
loop
push
int
pop
call
sbb
mov
jb
pop
mov
pop
cmpsl
xor
mov
popf
push
daa
cmp
mov
cmp
sbb
ficompl
xor
and
push
pop
test
jecxz
into
adc
push
jl
add
clc
shl
div
faddl
inc
push
push
pop
in
scas
jmp
mov
mov
ss
imul
xor
xor
pop
out
std
push
sbbb
dec
sbb
stos
popa
mov
mov
xchg
mov
and
add
pusha
test
and
push
loop
fstl
call
lods
shrl
icebp
enter
cwtl
mov
add
cwtl
mov
lea
inc
sbb
daa
pusha
add
push
jno
in
nop
jns
mov
ficompl
jnp
movsb
inc
int3
sbb
lock
std
shlb
inc
pop
add
jl
xchg
dec
jmp
adc
mov
es
out
bound
dec
loope
xchg
das
jge
loopne
je
push
pop
inc
leave
or
orl
lock
imul
mov
insb
adc
dec
xchg
add
xor
ret
ret
mov
es
iret
jl
xchg
clc
dec
jb
int3
in
mov
and
rcrb
and
xchg
je
out
mov
pop
jp
mov
popa
incb
mov
inc
fs
in
mov
lea
fildll
xchg
add
inc
xchg
jns
push
repz
hlt
out
xchg
mov
pushf
xchg
movl
dec
scas
cs
in
add
imulb
mov
mov
sbb
enter
pop
and
xchg
adc
mov
cmp
jne
or
or
ds
and
pop
mov
and
xor
xchg
mov
lcall
into
test
lods
xor
lret
aas
in
ds
pusha
sar
xchg
ret
imul
dec
add
pop
movsb
inc
cmp
jg
cltd
mov
add
rorb
sbb
mov
es
ret
sbb
lahf
mov
inc
or
stc
jg
sarb
test
xchg
imul
add
movsb
ljmp
loop
int3
adc
jae
es
icebp
push
sub
aam
imul
push
dec
mov
push
out
dec
inc
fcmove
scas
test
clc
cmc
and
dec
pop
test
pop
add
out
inc
xchg
addl
pop
sub
push
jnp
mov
cld
mov
and
or
push
and
sbb
dec
sbb
and
push
inc
mov
mov
repnz
or
mov
push
push
xchg
fwait
out
dec
movsb
push
fistpll
fisubrs
cmp
sub
cwtl
lcall
jl
dec
dec
fs
out
cmp
xor
sbb
sub
sbb
sbb
lock
fcmovb
rorb
stos
roll
clc
cs
mov
add
cmp
pop
xor
pop
sub
and
pop
or
sub
and
sub
cmp
dec
stc
enter
mov
jp
jo
adc
sub
mov
and
xor
mov
out
out
jbe
inc
loope
cmp
mov
fs
sub
sbb
lahf
jmp
cli
cmpsb
jmp
cmp
sbb
aad
in
and
push
cmp
movsl
insb
flds
js
movsl
ss
iret
pusha
push
xlat
jae
mov
pop
popf
inc
repnz
pop
mov
faddl
gs
test
std
and
out
imul
fs
ret
mov
int3
scas
notb
cmp
dec
push
push
add
mov
pop
jge
pop
popf
pop
fsubrs
push
jle
mov
jmp
movsb
mov
movsb
fwait
jecxz
xchg
je
rolb
jbe
xor
or
lods
pop
incb
lds
std
js
in
lret
fiaddl
bound
sahf
out
mov
mov
loopne
and
imul
cmp
inc
inc
pusha
mov
call
imul
in
xchg
adc
mov
inc
in
mov
ja
gs
arpl
pop
inc
outsl
inc
xor
in
sub
loope
mov
dec
xchg
fmuls
aaa
pop
sarl
jp
mov
add
and
inc
cli
xchg
xchg
mov
jmp
push
pop
int3
enter
ret
sbb
or
push
jge
sub
loope
cltd
sub
add
aas
movsb
pop
pop
pop
popf
sbb
dec
jge
mov
and
movsl
mov
in
stos
outsl
movsb
or
sub
cmpsl
aad
scas
je
in
xrelease
mov
rcl
decl
imul
inc
or
sbb
shr
pop
sub
pusha
shll
add
adc
cmpsl
mov
push
in
ja
inc
xchg
ret
pop
lret
test
add
adc
and
adc
pop
call
out
xchg
repz
sbb
inc
lret
xlat
inc
xchg
scas
mov
mov
push
test
sbb
jg
aam
inc
test
inc
sbb
push
jle
add
or
loope
fdivl
cmp
dec
sbb
push
or
out
xor
xor
into
xchg
loope
push
mov
rorl
dec
mov
stc
add
inc
pop
lock
or
push
fsub
rcl
xorl
ja
and
jbe
out
inc
or
mov
push
push
movsb
out
aaa
outsl
inc
sar
daa
mov
dec
inc
bound
repnz
jb
pop
add
pop
or
jg
das
adc
xor
outsb
xlat
add
mov
scas
mov
dec
cmp
das
ret
ret
mov
les
mov
sub
mov
arpl
andb
into
loop
xchg
adc
in
pop
pop
jge
adc
movsb
ret
movsb
popa
inc
movl
repz
incb
movsb
adc
rorl
fucomip
xor
dec
adc
pop
jg
mov
scas
int
loope
xchg
dec
in
push
sbb
inc
push
push
out
loope
and
ffree
loopne
push
sbb
ficoml
and
mov
clc
imul
cltd
jno
dec
rorb
jle
movsl
dec
lods
cmp
repz
sbb
mov
icebp
sbb
jmp
test
fs
dec
pop
dec
outsb
adc
gs
into
popa
xor
lock
sarl
ficoml
inc
sbb
dec
roll
rcrl
add
out
dec
mov
lret
jge
xor
out
mov
movsl
mov
and
dec
inc
or
in
push
cli
cmp
movsl
add
packssdw
dec
push
mov
jle
xchg
bound
jne
sbb
clc
jbe
sbb
add
arpl
out
iret
lods
imulb
imul
push
mulb
xor
pop
mov
das
dec
xchg
cmpsl
daa
repnz
xor
fimuls
rorl
adc
insb
mov
dec
incb
out
push
iret
push
mov
int3
jae
subb
inc
aad
out
jmp
jo
loope
xchg
cmp
dec
or
pop
push
sub
push
xchg
jno
jnp
inc
mov
adc
test
leave
imul
pop
xlat
mov
scas
rol
into
jge
rcrl
out
xlat
sub
sbb
rclb
adc
lock
and
pop
popa
xchg
jne
mov
or
fwait
push
pop
int
sub
das
rcl
cmpl
inc
add
and
and
xor
cltd
aam
cmp
repnz
jnp
out
or
cs
mov
pop
fs
mov
in
sbb
or
mov
data16
adc
push
into
out
lret
cmc
xchg
fsubl
adc
or
mov
mov
jno
cld
xchg
or
cltd
in
test
inc
fs
dec
pusha
push
jle
push
xor
sbb
dec
sarl
scas
push
sbb
add
dec
aaa
sti
xor
mov
cmpsb
xor
mov
push
shlb
mov
mov
push
sub
mov
xor
cmpsl
mov
cmpsb
loopne
cmp
xor
mov
xchg
mov
xor
jno
arpl
out
addr16
orb
xchg
jb
xlat
ficomps
test
lock
push
jle
shrl
lds
adc
push
sub
sub
add
mov
xchg
or
dec
or
movsb
popa
in
cmpsl
xlat
outsb
andb
add
jmp
leave
sbb
mov
divb
cmpsl
cmp
inc
cmp
mov
sbb
pop
jmp
cltd
aas
aaa
std
aas
sti
ror
popa
mov
insb
das
jns
pop
xorb
adc
xor
adc
push
roll
insb
mov
nop
mov
mov
lock
xchg
inc
in
mov
aam
cmp
movsl
js
sbb
fdivl
fmuls
sub
jae
xor
adc
mov
loop
addl
cmp
jg
cmpsb
ret
incb
mov
rol
nop
scas
xor
xchg
push
pusha
call
sub
mov
mov
popf
jnp
cmp
subb
in
mov
icebp
lods
mov
out
mov
pop
mov
inc
into
jne
pop
inc
add
sub
jae
scas
mov
lock
cmp
pop
dec
and
mov
ljmp
or
test
xchg
lods
and
imul
push
fisubrs
jae
loope
daa
imull
lods
xor
testb
xorl
ret
lahf
pushf
sahf
and
fnclex
lret
pop
ficoms
int3
scas
rcll
and
jp
mov
or
jmp
inc
sysenter
lret
sub
ficomps
mov
push
jg
jl
sub
insb
push
mov
mov
popa
popa
shll
push
mov
sahf
inc
cmp
add
addr16
xchg
xchg
imul
pop
test
out
sbb
cli
cmpl
and
enter
sub
rcrl
xchg
sbb
lock
and
dec
in
mov
or
lret
fwait
mov
xchg
or
dec
addr16
pusha
fs
xchg
lds
aas
data16
mov
pop
xlat
pop
sub
mov
add
mov
sub
imulb
xchg
jmp
mov
sub
jo
into
gs
test
aam
dec
or
lods
in
dec
sbb
sbb
and
mov
outsb
and
sub
add
xor
pushf
aam
out
inc
pop
andl
pop
or
inc
nop
xor
push
xchg
inc
outsl
testb
jo
mov
xor
cmp
mov
sbb
lods
cmp
and
xchg
hlt
movsl
mov
out
arpl
dec
es
mov
icebp
and
daa
test
out
fs
push
pop
lret
daa
xchg
stos
jg
lret
push
repnz
fisubs
std
popa
mov
mov
addr16
xchg
cmp
push
mov
in
lods
mov
insb
inc
sub
aas
mov
mov
adc
pop
and
out
sbbl
mov
int3
pushf
cmp
add
movsb
jne
dec
inc
xchg
lret
ret
sbb
testb
xor
sub
fs
add
in
cltd
mov
mov
jg
cmp
xchg
lock
dec
jg
cmpsb
cmp
gs
mov
loope
out
ljmp
insl
lods
mov
in
cmp
sub
xor
subl
fildll
sarb
cmc
mov
daa
out
fbld
adc
xchg
inc
or
jle
ja
dec
cld
push
push
call
leave
sub
shl
mov
lock
sbb
shrb
test
aad
xor
sub
mov
cmp
dec
add
lcall
int3
mov
scas
sub
or
scas
enter
sbb
inc
ficoms
sahf
cld
pop
lds
or
xor
mov
push
xor
jg
jo
loopne
and
mov
popf
xor
ds
insb
adc
lcall
mov
pop
push
decb
push
dec
hlt
jecxz
insl
andl
cmp
lods
push
xchg
repz
pop
mov
or
xor
out
dec
sbb
fidivrl
adc
mov
jle
mov
fadd
ljmp
in
insl
sbb
sbb
aad
xchg
jle
divl
inc
push
fistpll
decb
mov
out
lret
test
xchg
lea
bound
mov
aaa
fisubs
addb
dec
mov
ljmp
xor
pop
fbstp
inc
sbb
repz
in
test
insb
add
or
cmp
cltd
adc
and
dec
movsl
push
mov
inc
xchg
add
jne
call
pop
negb
push
or
imul
test
xor
lea
sbb
ss
mov
pop
jno
push
cmpsb
xchg
ss
fdivrs
fwait
sarl
rcr
in
scas
sub
inc
jmp
out
rorb
sub
in
pop
in
or
sbb
jo
mov
inc
sahf
adc
lds
das
push
mov
inc
andl
pop
xchg
mov
jb
cmp
adc
xor
into
mov
sub
push
add
cmp
and
cmp
dec
xchg
or
stos
test
mov
mov
inc
add
sub
hlt
xlat
clc
in
xor
cli
xlat
dec
sbb
sub
stos
loope
push
test
fisubrl
ss
push
sub
inc
rcl
and
sbb
mov
add
out
push
add
repnz
adc
popf
jp
jl
test
sbb
push
xchg
push
imul
or
add
movsl
ljmp
cmpsl
mov
add
mulb
pop
pop
xchg
jg
mov
movb
mov
ljmp
shrb
cmpsb
add
dec
mov
cltd
inc
test
fwait
jecxz
or
clc
outsb
arpl
shlb
in
sub
sbb
fcompl
mov
pop
inc
cwtl
push
mov
sbb
sbb
mov
jmp
xlat
hlt
int
push
add
addr16
loope
cmpsl
mov
addb
hlt
adc
pop
into
dec
lret
mov
scas
aam
cmc
xchg
repnz
shrb
in
sahf
mov
mov
inc
cwtl
or
xchg
out
adc
popa
lock
sub
cli
leave
dec
cmp
adc
lods
fistl
and
dec
jle
mov
movsb
cmp
setle
push
scas
arpl
sub
orl
sbb
xor
mov
pop
es
pop
jbe
fdivrl
push
lock
into
sarl
outsl
inc
ss
sub
popa
ss
stc
dec
and
and
fcompl
xchg
popa
add
mov
push
in
stc
xchg
mov
into
push
adc
xlat
sbb
xor
xor
dec
pop
aas
in
insl
lahf
movsl
inc
sbb
out
ss
cmp
orb
xchg
sub
loop
sub
mov
repnz
mov
scas
icebp
mov
jne
sub
sahf
js
ss
fcmovbe
or
jnp
xchg
sti
cmp
leave
sub
repz
lret
cld
mov
ja
movsb
or
cmp
les
rcrb
out
dec
sbb
push
or
jg
out
fcos
lret
aam
xlat
stos
scas
test
fwait
push
testb
sub
xorb
mov
out
stc
push
pop
mov
int
inc
js
adc
jmp
out
sub
mov
call
mov
imul
push
mov
fisttpll
aam
test
out
sbb
lea
cmpsl
inc
pop
jmp
jmp
mov
scas
rcr
push
pop
mov
daa
clc
jno
aaa
mov
dec
stos
sub
sbb
sti
in
xor
lock
sbb
jle
push
aas
mov
add
aam
aam
sti
cmc
sub
mov
les
sbb
mov
sub
mov
imul
lret
sbb
push
sahf
out
cmpxchg
loopne
xchg
push
loope
inc
mov
cltd
mov
sub
shll
lea
je
xchg
decl
xorb
adc
xchg
out
insl
mov
add
push
or
mov
or
dec
and
int3
scas
gs
add
cmpsb
sbb
jne
les
jecxz
clc
cld
adc
into
test
lock
cmc
inc
and
pusha
out
decl
cmp
dec
and
in
jns
mov
jae
lds
pushl
xor
add
push
cmp
shll
jae
sti
cmp
loope
adc
loop
and
mov
fwait
adc
dec
lds
or
push
mov
outsl
xlat
popa
inc
pusha
jmp
add
in
sbb
xchg
mov
mov
xlat
pop
mov
push
rcll
arpl
xchg
dec
add
adc
jp
mov
cwtl
and
dec
adc
and
mov
out
lds
jne
lds
or
sub
lret
xchg
std
pop
fucom
add
lods
lret
jb
mov
mov
or
mov
imul
pop
jnp
fstpl
inc
cmovne
or
ret
sbb
push
outsl
stc
repnz
fucomi
push
xlat
leave
jp
ss
insl
je
arpl
sbb
loop
out
lea
add
xchg
ss
cli
rolb
cmp
popf
add
cmp
out
dec
jmp
ret
dec
decb
adc
pop
iret
es
or
mov
data16
lods
mov
xor
out
mov
test
scas
adc
pop
add
mov
lods
push
fwait
mov
pop
cmp
and
addr16
ja
and
adc
mov
adc
mov
inc
cli
xchg
iret
je
xchg
jns
inc
aam
dec
stos
test
movsb
lock
pop
orl
xchg
jge
sbb
inc
daa
jl
addr16
jmp
or
pushf
fimuls
dec
ja
mov
outsb
mov
imul
pop
sub
out
mov
sub
ret
push
push
jge
xor
addr16
or
pop
fcomi
pop
jae
mov
testb
inc
call
pop
cmpsb
sbb
cmp
cmp
jecxz
sub
add
sub
je
jmp
xor
xor
jmp
xchg
scas
fiadds
sbb
sahf
mov
mov
add
cmp
xor
jecxz
or
jge
sahf
loop
testl
mov
ror
or
jmp
pop
mov
push
divl
mov
fcomi
xor
addr16
jns
clc
les
mov
nop
mov
adc
pop
mov
pop
jno
add
sub
idivb
mov
pop
push
cs
inc
lock
mov
fstps
mov
mov
sub
push
jns
flds
lret
lods
push
shr
mov
bound
and
dec
mov
jle
jb
xchg
mov
inc
orb
call
mov
xchg
cmpsl
ret
pop
movsb
cltd
mov
and
and
insb
cltd
imul
data16
bnd
lahf
lret
sarb
insb
lds
mov
ja
sub
sub
cmp
in
dec
aaa
xchg
jbe
mov
addb
popa
jl
mov
jo
add
push
cmpsb
lret
jns
add
mov
stc
test
dec
dec
je
jbe
into
mov
add
cld
push
pop
mov
or
push
or
xchg
into
cmp
xchg
and
inc
lock
jns
push
lods
pop
imull
ss
ret
sub
js
jmp
jmp
mov
push
loop
ds
jae
push
mov
push
jmp
cli
jl
out
je
jno
scas
dec
mulps
lods
mov
insb
mov
add
mov
mov
push
leave
in
mov
cmp
shlb
das
fnstenv
data16
outsl
inc
rorl
push
shl
xchg
daa
push
xor
sbb
sbb
loop
icebp
and
cmp
sti
sub
mov
repz
gs
cmp
sti
mov
pop
rorb
imul
xchg
jp
mov
in
mov
sahf
dec
sbb
and
cmpsl
shlb
push
add
mov
sbb
cmp
jle
xchg
pop
fdivr
jmp
pop
pop
popf
lret
loopne
clc
inc
sub
sti
adc
lcall
clc
nop
outsl
xchg
mov
add
scas
or
dec
dec
push
cmc
arpl
fsts
lret
lock
mov
into
jae
arpl
dec
push
xchg
pop
or
inc
aad
pop
sub
jg
imul
les
jge
stos
call
lods
mov
pop
fisubl
loope
lods
fbld
adc
movsl
mov
xor
xchg
scas
adcb
scas
cltd
push
xchg
loop
repz
jg
jae
mov
shr
sbb
inc
xor
sub
sub
mov
pop
dec
iret
inc
insl
or
inc
push
dec
cmp
cmp
cltd
xchg
repnz
hlt
filds
dec
out
jb
push
inc
and
data16
inc
or
insb
add
xor
ror
or
push
sbb
adc
push
js
fcompl
add
add
push
sti
dec
mov
push
mov
sub
sbb
jge
mov
or
jle
pop
pusha
cmp
mov
pushl
in
sbb
loop
lret
push
inc
stc
push
xor
sub
push
and
js
aaa
insl
scas
cmpsb
mov
enter
or
sbb
test
mov
inc
pop
cwtl
insl
mov
push
ljmp
or
jle
sbb
fs
dec
mov
aam
sub
inc
mov
fisubrs
lods
mov
sub
sbb
clc
adc
leave
or
dec
imul
inc
push
xchg
mov
outsl
adc
mov
nop
repz
hlt
and
nop
es
arpl
inc
mov
jae
or
sahf
adc
bound
fcoml
jmp
fldt
or
jmp
sti
inc
sub
mov
add
into
nop
jne
fistps
rorb
pop
xchg
jle
inc
push
push
sub
inc
and
jbe
mov
lret
dec
inc
imul
mov
and
pop
or
xor
inc
inc
cli
add
xlat
cld
out
inc
jae
subl
ss
ret
into
and
rol
pushf
dec
jne
subl
jmp
sub
dec
or
nop
mov
in
push
scas
mov
ret
arpl
and
ret
dec
pop
loop
mov
call
ffree
aad
and
push
pusha
orb
jno
repz
xor
stos
std
mov
idivb
cwtl
lds
cs
addb
and
jge,pn
push
das
sbb
inc
rcll
out
leave
mov
jg
sbb
sbb
out
addr16
repnz
and
xorb
sub
or
dec
mov
mov
out
and
add
orl
jg
stc
cmp
aas
data16
mov
aam
or
push
and
jp
es
xor
mov
ss
cli
mov
inc
jecxz
pop
xchg
push
aam
pop
xchg
and
lcall
add
popf
ja
mov
add
cmpsl
insb
roll
popa
stc
test
mov
sbb
push
jb
add
loop
arpl
in
push
or
les
sub
lret
adc
dec
clc
scas
int3
mov
pop
std
aad
mov
vunpckhps
sbb
aas
sahf
scas
push
mov
cmc
lds
insl
in
and
call
mov
pop
and
jle
imul
ficomps
pusha
push
mov
test
sbb
popf
or
in
inc
xlat
add
jns
pop
sub
push
ret
sbb
or
fldl
or
mov
mov
mov
gs
dec
xchg
xor
push
jnp
jecxz
out
stos
and
cmp
jae
popa
aas
dec
push
dec
mov
mov
sbb
jbe
mov
xor
xor
xor
daa
dec
sub
mov
test
push
jmp
jge
enter
dec
dec
sub
pop
jns
mov
mov
push
mov
lods
subl
add
mov
push
xchg
push
jo
jmp
jb
and
xor
test
loope
xor
outsl
lea
and
rcrb
mov
sbb
dec
cltd
add
jle
lcall
mov
mov
push
fistl
push
push
mov
enter
fwait
stc
aam
pop
xchg
xor
pop
jmp
mov
mov
icebp
and
adc
and
sbb
lret
int
sub
cmc
pop
lret
jecxz
sub
cs
and
mov
mov
in
scas
jmp
adc
cmp
popa
cmp
pop
sub
xchg
loope
mov
fsubrl
je
xchg
xchg
ror
adc
or
jbe
or
hlt
js
pop
sarl
outsb
xchg
jl
loopne
imul
int
mov
or
lahf
ljmp
test
hlt
xchg
mov
inc
test
dec
mov
pop
add
inc
cmp
jecxz
aad
idivw
pop
rcl
adc
ljmp
sub
mov
xor
mov
repnz
cmp
lds
adc
daa
rcl
repnz
shrl
push
scas
stos
lock
aaa
push
mov
push
fs
xor
and
mov
int3
sub
fidivrs
sbb
sub
dec
adc
cmpsb
mov
or
add
xchg
cmpsb
pop
add
inc
fwait
xchg
mov
outsl
cmp
inc
xchg
mov
ljmp
or
fldl
add
leave
mov
leave
insl
xchg
push
push
add
xor
pop
add
xor
fbstp
sti
les
loop
jae
adc
mov
mov
inc
lods
push
mov
sbb
cmpsl
pop
push
mov
das
cmpsl
std
mov
stos
pop
mov
jbe
bound
sub
pop
jo
dec
xchg
imul
xchg
dec
mov
insb
mov
adc
mov
js
pusha
xchg
inc
pop
pop
xchg
and
nop
jb
and
lods
dec
stos
sti
mov
mov
pop
cmpsl
aas
sbb
bound
out
cmpsb
inc
std
cs
xlat
xor
push
mov
add
mov
adc
enter
sbb
add
mov
or
es
ss
mov
and
push
test
jecxz
jmp
inc
into
pop
lods
sbb
cltd
hlt
jnp
sbb
mov
les
dec
mov
repz
cmp
imul
int
lea
andb
daa
and
std
stos
xchg
hlt
mov
daa
stos
pusha
inc
pop
mov
pop
inc
jno
xchg
inc
lret
jmp
add
out
and
lret
sbb
call
dec
adc
xchg
xchg
idiv
push
mov
clc
outsb
add
cld
cltd
mov
scas
shlb
or
and
adc
mov
lahf
std
lahf
dec
xchg
in
sub
push
clc
or
cli
and
mov
pop
fcmovb
inc
jae
jo
pop
xchg
dec
or
scas
dec
insb
test
cmp
jno
jmp
inc
mov
fwait
inc
xor
pop
repnz
data16
jo
loopne
cmp
loope
xor
push
xchg
lock
dec
call
cmp
jle
pop
enter
imul
insb
lret
inc
xchg
sti
mov
loopne
inc
nop
mov
ret
xchg
cmpsl
xor
dec
lock
mov
pop
into
xchg
in
xchg
mov
push
inc
iret
xor
outsl
dec
in
clc
xor
sbb
cmp
enter
je
dec
or
sbbl
jmp
mov
imul
int
mov
das
push
lahf
sub
test
dec
stos
cld
mov
je
shrb
jno
mov
adc
jmp
fnstcw
push
lods
pop
xchg
imul
adc
test
xchg
adc
ret
arpl
mov
mov
push
jne
dec
dec
call
sbb
mov
jle
cs
adc
add
mov
daa
mov
lods
data16
mov
inc
in
jns
movsl
cmp
sbb
mov
push
adc
mov
jbe
mov
pop
pop
loop
test
and
push
pop
out
cltd
jge
or
in
loope
mov
jns
dec
arpl
jns
inc
int3
mov
pmaxub
repnz
popa
or
mov
cmp
test
stos
movsb
fmull
sbb
fisttpl
ret
add
pop
mov
mov
rclb
cmp
inc
inc
sbb
xorb
xchg
popa
and
sbbb
push
mov
dec
test
push
or
and
xchg
addl
outsb
cmp
jbe
sub
and
and
add
fdivrs
in
add
xor
rorl
stos
callw
mov
or
mov
subl
rorb
and
dec
push
out
jge
ds
and
popa
add
mov
jl
neg
sub
clc
dec
jbe
das
mov
stos
xchg
dec
cltd
push
movsb
jmp
adc
sahf
fimuls
or
pop
xchg
loop
rcrl
xor
cli
mull
out
or
push
scas
iret
sub
loopne
clc
and
mov
cmpsb
jbe
xor
insl
aad
or
inc
into
hlt
lret
mov
mov
inc
push
mov
push
daa
fnstenv
fcoms
push
out
out
mov
or
cmpb
cmpsl
or
inc
shl
scas
push
out
mov
rcl
sbb
test
lahf
cmp
cmc
in
and
les
mov
pop
pop
sbb
in
in
das
mov
mov
mov
xchg
jecxz
fimull
mov
push
popf
movsl
rol
sub
loopne
adc
into
stos
arpl
adc
sub
mov
xchg
stos
and
xchg
sub
insl
xor
or
cmp
xchg
lcall
cmpsb
sbb
int
cld
insb
mov
push
jb
sub
xor
adcb
jbe
test
loop
adc
lock
adc
push
jg
sub
push
push
inc
cmp
repnz
jnp
subl
adc
pop
inc
mov
ret
daa
andb
leavew
mov
ja
pop
jle
xchg
mov
call
push
fildl
push
int3
xchg
shr
pop
xchg
push
pop
int3
dec
xchg
out
mov
insb
data16
cmpsb
in
clc
push
push
lretw
cltd
testl
lcall
stc
and
das
cmp
xchg
fiadds
sbb
inc
data16
loopne
dec
cmpsb
lret
ss
inc
lds
ja
in
mov
sahf
repnz
xchg
fistpl
jmp
mov
mov
dec
inc
mov
loop
lret
loope
and
fsubs
add
fistpl
push
inc
repz
pop
cwtl
in
sub
push
movsb
push
flds
ret
int3
mov
cmp
jl
frstor
mov
mov
xor
imul
push
mov
cld
ljmp
cmp
lret
fistpl
jp
stc
and
in
xchg
mov
ret
or
jecxz
ror
mov
jmp
and
mov
icebp
cmp
imul
scas
sbb
pop
test
stos
test
loop
repnz
xor
enter
inc
bnd
xchg
inc
call
mov
nop
int
jnp
ds
repnz
lds
adc
mov
jecxz
test
mov
pop
push
notb
jmp
inc
rcrb
in
in
pop
ret
cmp
cmp
int3
jg
push
fwait
int
adc
ds
xchg
lea
loope
out
shlb
xchg
jp
sbb
xor
scas
cmp
arpl
jecxz
xor
outsb
sub
and
movsb
sbb
adc
jl
lea
inc
test
loopne
bound
jbe
scas
ds
push
pop
mov
aam
dec
and
or
adc
movsl
xchg
xchg
inc
add
dec
mov
fisubrl
dec
cltd
and
mov
and
jle
jnp
out
fidivrl
loopne
and
sbb
call
inc
and
mov
icebp
mov
or
sahf
sar
pushl
punpckhbw
adc
imul
pop
dec
pop
jb
fnsave
test
cltd
mov
rcrb
fldpi
imul
sbb
push
outsl
sub
mov
pop
mov
hlt
repz
adc
push
call
bound
sbb
lcall
aaa
jmp
add
mov
pop
mov
lods
xor
das
and
xchg
in
cld
jae
and
sahf
mov
lea
push
push
rol
es
in
and
sbb
es
ljmp
jns
xor
inc
adc
sub
inc
clc
call
pop
add
test
hlt
or
push
cmp
int
gs
fistl
mov
cli
test
xor
pop
pop
sarb
xchg
mov
mov
pop
sub
add
dec
push
out
pop
inc
pop
pop
mov
or
sub
push
mov
cmc
dec
sbb
push
in
pop
hlt
in
test
sub
in
aam
lret
pop
fstl
inc
and
push
inc
incb
nop
out
mov
add
dec
mov
pop
jecxz
in
or
std
sbb
jns
inc
push
cmpb
adc
aam
adc
dec
push
xlat
jecxz
pop
sub
inc
inc
ljmp
fwait
pop
xchg
cli
insl
mov
hlt
push
or
idivl
xacquire
mov
ljmp
cmpsl
sub
gs
mov
adc
aam
sbb
out
cmp
shrb
push
mov
jle
mov
mov
aaa
cli
or
rol
fs
pop
cmpsb
mov
xor
jecxz
aas
ret
dec
cmp
add
enter
test
jle
shrl
stc
pop
lods
add
gs
xchg
sub
xor
pop
popa
loope
xchg
lods
cmp
je
popa
jecxz
xorb
sub
loope
pop
outsb
cmp
loopne
sbb
and
push
cmp
mov
ret
pusha
test
inc
mov
cwtl
push
xor
mov
jge
push
fidivs
push
mov
sub
xor
jle
xor
dec
jnp
add
and
int3
in
test
mov
movsl
jl
mov
mov
jnp
cmpb
pop
inc
mov
jb
fisubs
sub
popa
dec
push
aas
outsb
mov
pop
push
out
lods
dec
mov
pop
ficoms
xchg
xor
or
adc
lret
xchg
cwtl
fmul
xchg
jl
push
cli
and
rcr
push
iret
call
in
ds
inc
pop
push
dec
into
orb
icebp
imul
fstl
fmulp
loopne
pusha
les
shll
sahf
inc
addr16
iret
mov
notl
pop
adc
push
fwait
and
test
xchg
test
pushf
sub
inc
outsb
out
add
xor
fs
add
nop
roll
push
jb
mov
int3
arpl
or
xor
cmp
scas
daa
inc
mov
push
lret
push
nop
mov
popf
inc
out
dec
outsl
sti
imul
hlt
xor
sti
movb
jg
in
adc
cmpsl
outsl
test
mov
ljmpw
fadds
neg
das
jb
dec
cmp
or
mov
call
inc
loop
xchg
test
sbb
cmc
push
ss
or
sbb
iret
out
mov
mov
dec
sub
faddp
sub
mov
push
sbb
add
sbb
cmp
ljmp
cmp
lret
mov
inc
jbe
jle
inc
jge
cmpsl
adc
mov
or
mov
fisubl
fcoml
out
push
inc
cli
test
xchg
fbstp
mov
pop
jle
int
xor
jmp
mov
jmp
jnp
fnstcw
loop
in
mov
rorl
xchg
pop
test
push
push
fsubrp
lods
popa
das
data16
jns
add
push
jg
push
fldenv
insb
loop
cs
dec
fisubrl
lock
mov
test
sbb
jnp
xor
cld
sti
cmpl
dec
mov
rcrb
insl
pop
pop
cmp
sub
repnz
divb
add
outsl
movsl
adc
pop
sub
inc
dec
std
fildl
repz
sbb
out
inc
rol
xlat
std
cmp
xor
cli
loopne
in
jnp
xlat
shll
cmp
ljmp
cmpsl
shr
jmp
jl
add
lcall
outsl
sub
mov
jb
repnz
or
inc
stc
mov
cmp
movsl
push
add
mov
push
and
xchg
sub
inc
xchg
lret
push
push
inc
xor
xchg
add
arpl
in
pop
inc
push
sub
loope
mov
xchg
fcompl
icebp
in
cmp
mov
in
aaa
gs
sbb
test
rclb
cmc
insb
xchg
jecxz
lds
ret
mov
daa
inc
imul
out
aas
mov
in
mov
test
test
lcall
pop
into
in
sti
sub
movsb
out
cmp
aam
clc
imul
testb
pop
pop
movsl
or
adc
mov
out
call
rorl
mov
mov
aas
fmul
out
xor
cltd
and
mov
test
dec
arpl
in
loope
xchg
and
mov
xor
lods
fisubl
push
pop
xrelease
jns
ja
xchg
jg
inc
xor
js
cmp
jge
adc
sbb
lret
push
adc
nop
and
pop
cwtl
inc
int3
dec
inc
aaa
stc
out
les
inc
push
or
jno
jmp
clc
adc
mov
mov
jb
movsb
sbb
sub
jmp
roll
fs
and
mov
jp
inc
jmp
inc
in
jno
mov
arpl
loop
sub
push
jle
xchg
test
ficoml
jl
lea
cmpsl
in
arpl
xor
out
fstpl
addr16
jl
push
and
in
scas
add
pop
pop
arpl
pusha
ljmp
daa
sbb
enter
lcall
aas
fs
popf
outsb
sti
mov
nop
add
pop
xor
jo
mov
xor
xor
jns
dec
lods
cmp
ss
outsb
sub
loope
mov
pop
xchg
and
pop
pop
test
incb
rcll
dec
cmp
jmp
dec
add
push
mov
fs
test
mov
push
scas
cmp
repz
inc
pop
adc
push
insb
push
and
mov
jp
fdiv
cmpb
xor
aaa
adc
dec
outsb
or
mov
scas
cmc
das
add
aad
shlb
xchg
out
sub
inc
mov
xchg
add
fs
lcall
mov
movsb
repnz
jmp
and
stc
fidivrs
lret
jae
pop
mov
or
in
sbb
inc
iret
sub
xor
mov
xor
xchg
in
xor
mov
or
jg
clc
or
cmp
mov
jno
sub
push
dec
dec
fwait
sete
sub
mov
cmp
or
inc
mov
icebp
js
cltd
lcall
ljmp
shl
into
lcall
xor
jle
push
pushf
add
pop
aaa
mov
xchg
push
mov
div
mov
mov
ja
push
pop
xorl
mov
adc
iret
and
jle
jmp
jmp
push
aaa
inc
jl
hlt
xchg
cwtl
stos
mov
aaa
test
xorl
xorl
mov
cmpsl
adc
negb
out
mov
mov
lret
sub
loopne
cld
or
popf
and
out
std
shrb
ja
outsb
push
push
cmp
xchg
jo
push
pop
outsl
pop
aaa
mov
cmp
movsl
push
jle
pop
sub
ja
inc
movsb
mov
test
push
int
mov
xchg
dec
cwtl
idivb
nop
pop
push
and
dec
fabs
repnz
fimuls
mov
mov
testb
xlat
fwait
xchg
mov
jno
inc
dec
sub
inc
movsb
icebp
popa
adc
shlb
or
in
in
jecxz
adc
inc
inc
push
mov
test
push
scas
jb
push
daa
jmp
imul
jns
stos
pop
jne
das
adc
scas
or
fcomip
repnz
loopne
pop
adc
sub
pop
sbb
fucom
jmp
fisubl
cs
es
xchg
sbb
into
loop
xor
push
pop
sbb
cmc
push
cwtl
xor
xchg
cmp
and
or
mov
pusha
lock
or
enter
cmp
cld
dec
mov
movsb
lea
addr16
adc
repnz
out
and
mov
lock
mov
leave
and
sub
dec
mov
add
push
xor
mov
pop
mov
adc
sbb
xchg
jno
inc
lods
mov
add
inc
sub
pop
addb
push
imul
xor
sub
push
xor
es
sbb
clc
inc
repnz
ss
aad
std
fiaddl
mov
xchg
pop
fldcw
xor
lret
scas
lcall
adc
in
mov
popf
notb
mov
std
enter
in
lret
fisubrs
int3
mov
in
inc
and
out
outsl
xor
dec
mov
out
arpl
cld
adc
fs
cltd
push
push
subb
in
jb
xchg
or
pop
mov
iret
out
stos
aaa
mov
jmp
stos
mov
xlat
or
aam
push
popa
aas
adc
in
or
push
ror
out
mov
push
mov
and
sub
xor
jnp
in
xchg
jg
add
rorb
push
fwait
ror
adc
mov
jg
adc
ret
idivl
in
mov
mov
int3
ja
notl
fbld
dec
mov
nop
adc
mov
mov
addr16
xchg
xchg
and
test
pop
xor
fsubr
mov
pop
js
pop
repz
cmpl
fwait
lcall
aad
fdivs
xor
add
xchg
sbb
xor
and
clc
sti
shrb
aaa
leave
push
lcall
cmc
out
xchg
jnp
jno
cmpsl
xchg
cmp
rcll
xchg
aaa
add
lds
test
mov
jmp
inc
inc
data16
mov
mov
aad
jge
and
and
and
adc
lcall
and
ds
jp
ficomps
pop
mov
fwait
mov
in
xchg
push
xchg
fidivs
fdivrs
mov
aam
mov
lock
mov
push
in
and
shrl
test
ds
mov
call
or
data16
jp
cmpsl
mov
in
push
dec
fnsave
add
pop
cmpsl
pop
ds
shrb
xchg
inc
fxch
jmp
shlb
jmp
xchg
dec
fwait
movsl
xchg
add
mov
pushl
pop
sub
fstpl
and
scas
adc
mov
sbb
shlb
jp
adc
lds
inc
loopne
es
add
test
push
xchg
dec
inc
je
rorb
aad
dec
int3
movsl
jge
xchg
lcall
test
sub
lock
fwait
sbb
mov
jns
lea
popa
push
ret
mov
jge
xchg
cli
clc
add
jl
and
mov
gs
icebp
add
or
cmpb
rorl
adc
scas
add
out
dec
inc
and
sbbl
scas
loope
xchg
adc
xchg
inc
in
stos
sub
jp
mov
sub
cmp
inc
push
outsb
jge
subl
scas
ds
shlb
clc
test
cmp
clc
jp
shlb
and
rcrb
cmp
dec
add
xchg
mov
jno
shll
shrl
popa
push
fnsave
push
sbb
std
push
pop
pop
push
aam
rorl
fsub
mov
out
arpl
push
rolb
arpl
add
clc
dec
daa
pop
jmp
stc
stos
mov
std
mov
cmpsb
pop
xchg
xchg
mov
fildll
pushf
bound
pop
pop
loop
hlt
adc
sub
ret
xchg
pop
sbb
push
ret
add
sub
jmp
pop
outsl
and
imul
fcoms
in
jmp
lea
push
dec
outsb
rcrb
or
add
pop
lcall
inc
jb
shll
jb
xchg
jle
pushf
out
lahf
sbb
dec
mov
popa
mov
addr16
inc
int3
add
mov
movsb
out
aas
test
dec
popf
lcall
shrl
filds
pop
or
dec
lret
mov
imul
mov
or
push
mov
xorl
insb
lods
aaa
sbb
ds
dec
xchg
mov
rolb
call
mov
jge
dec
dec
inc
in
or
mov
aam
cmp
gs
imul
in
faddl
int
mov
adc
js
lret
fimull
pop
out
mov
jmp
cmpsl
add
pop
loop
aaa
add
sahf
fsubp
in
mov
or
rcrl
lret
mov
pop
xchg
pop
and
les
movsb
inc
cmp
jp
arpl
addr16
sbb
data16
imul
mov
sbb
push
gs
cwtl
cmp
out
cmp
std
xchg
mov
sbb
jb
sarl
jmp
ljmp
dec
xchg
mov
cmpsl
rcl
pop
xor
xor
in
xor
mov
jb
ds
mov
xchg
in
sub
mov
cmp
pop
loope
pop
pop
adc
test
sbb
lea
push
sub
pop
push
push
lea
xor
fwait
movsb
cwtl
bound
fwait
sub
jae
out
dec
mov
inc
sbb
pop
outsl
fcoml
pop
jl
cmp
imull
sbb
sub
pop
mov
js
adc
test
imul
arpl
sub
push
mov
xlat
movsl
xchg
xchg
sarb
pop
sti
or
mov
lds
mov
leave
test
sub
std
sub
push
repz
frstor
enter
mov
cmp
iret
adc
cmp
gs
cmp
lahf
ja
cmpsl
mov
lock
lret
xchg
stos
stos
sub
or
and
fsubrs
xchg
mov
stos
mov
fwait
loop
push
dec
and
jno
xor
outsb
pop
jb
loop
aaa
jecxz
addr16
mov
sti
ds
cmp
ss
pop
push
fs
ja
jno
push
in
scas
push
subb
xor
lds
lret
cwtl
out
mov
mul
dec
cmp
pop
pop
push
sbb
bound
fidivrl
into
jns
jno
inc
orl
xor
or
mov
out
xchg
jae
aam
cmp
jp
loop
sahf
xorps
ss
scas
lea
mov
cmp
iret
iret
mov
mov
lds
hlt
inc
repnz
add
iret
shrb
addb
dec
pop
ret
pop
cs
and
lcallw
jge
mov
cmp
out
cmp
leave
icebp
movsl
or
sti
mov
stos
in
push
xchg
je
jae
loop
cwtl
fidivrs
lret
insl
fwait
cmpsl
xor
aas
test
into
or
xchg
push
cld
jl
adc
ss
fndisi(8087
xchg
out
std
pop
mov
lret
pusha
mov
scas
subb
push
cmp
es
jnp
mov
movsl
jecxz
inc
imul
jmp
cltd
sbb
pop
mov
call
sbb
scas
sbbb
addb
xchg
cli
in
stos
repz
push
mul
js
movsl
mov
xor
pop
mov
xlat
mov
xchg
stc
inc
mov
lea
stos
jmp
insl
and
push
dec
cld
mov
xchg
jmp
adc
jp
shlb
dec
mov
call
mov
fistps
movsb
stos
je
ret
sub
rcrb
push
jo
ja
icebp
fistpll
lahf
cmp
lcall
jbe
sarb
mov
cmpsb
cld
sub
xchg
mov
sbbl
mov
jne
fnstenv
imul
in
mov
std
aaa
ja
dec
ja
push
test
xor
outsl
into
inc
test
movsb
cmp
cld
xchg
pop
or
lret
and
aam
loop
stos
pop
stos
ljmp
pop
and
xchg
jbe
adc
add
fdivs
push
out
insl
pop
pop
adc
stc
jae
jno
ficoml
rcrl
jbe
inc
fcoml
mov
jbe
lret
aaa
pusha
dec
jmp
jp
aam
ror
fiaddl
cmp
adc
xchg
cmc
sub
in
push
mul
je
cvtpi2ps
jae
mov
mov
inc
mov
loope,pt
fmull
mov
xchg
roll
fldt
cmp
cmpsl
mov
in
cwtl
push
jg
fs
idivb
subl
dec
inc
jmp
das
mov
mov
test
mov
mov
pop
inc
ljmp
cs
mov
inc
std
fiaddl
mov
imul
aam
leave
sub
out
pop
and
nop
sahf
sahf
sub
dec
cmp
jo
dec
mov
in
cmpsl
inc
sbb
dec
dec
outsb
mov
and
jecxz
inc
pop
push
adc
gs
push
bound
rcrb
and
pop
call
pop
stos
mov
pop
lcall
xchg
sub
scas
shrb
sub
fidivl
loopne
sahf
into
shlb
loope
push
shlb
ja
or
inc
xchg
sub
inc
subl
push
xchg
enter
outsb
dec
inc
push
mov
xor
call
stos
mov
push
sbb
shll
popf
dec
mov
mov
and
cmp
sbb
fdivrs
cmp
or
mov
scas
pop
roll
test
js
cmp
jge
je
fstp
xor
popf
xchg
lods
scas
pop
movsb
test
xor
sbb
pop
xchg
and
push
into
adc
imul
sub
iret
lea
fdivr
dec
loopne
inc
xor
fildll
lods
mov
push
mov
inc
fnstenv
outsb
in
mov
out
data16
cmc
mov
sub
cmp
fiaddl
xlat
pop
call
mov
inc
mov
cs
sahf
jecxz
add
imul
mov
push
flds
divl
inc
cli
js
addr16
push
xchg
sbb
shlb
cmp
mov
lcall
ja
mov
ror
or
dec
je
test
lea
test
sbb
push
sbbb
and
push
into
jbe
xchg
fbstp
push
dec
outsl
cmpsl
inc
insb
cmp
jp
push
sbb
in
movsl
fcmovnb
mov
lret
pushf
jae
mov
pop
sub
xchg
pop
aam
mov
jp
fdivp
rcl
in
or
mov
fisttpl
jo
jecxz
pop
xor
inc
mov
dec
testl
cmpsb
jae
ds
into
gs
cmp
jle
inc
mov
jns
lcall
cmp
mov
mov
lods
sbb
enter
mov
xchg
add
ja
cmpxchg
xor
mov
sbb
dec
xchg
or
or
lahf
and
imul
push
push
imul
loop
loopne
out
push
fs
sub
sbbl
movsb
movsl
pop
pop
jg
jg
out
cli
or
mov
dec
mov
mov
sub
cmp
jl
adc
leave
fucom
jecxz
je
jle
bound
mov
xlat
mov
mov
ss
dec
xchg
xchg
inc
sub
adc
call
repnz
push
testl
je
aaa
sub
sbb
pop
lock
std
dec
inc
lret
das
pop
cmp
mov
int3
int
test
es
lea
out
fsubp
jb
mov
ljmp
xorl
add
jno
xchg
fnstcw
jl
sbb
dec
out
out
pop
aas
cmp
sbb
mov
inc
pop
jns
jb
stos
xchg
mov
inc
push
xor
mov
stos
out
inc
sub
adcl
adc
enter
orl
sbb
mov
loopne
cld
mov
decl
pop
and
mov
jo
mov
adc
jg
xchg
cwtl
jb
stos
cmp
fldl
jl
mov
cmpsb
dec
lret
sahf
mov
sub
aad
add
xchg
fiaddl
push
ds
push
sub
mov
movsb
fdivl
push
sub
out
lds
out
jb
push
leave
xorb
cmp
lret
inc
mov
xchg
or
fcmovnb
mov
cli
sub
pop
push
and
sti
inc
mov
fstps
jnp
add
jno
int
shl
lea
and
xlat
in
adc
rol
in
mov
inc
sub
les
roll
fcomps
loop
mov
and
or
jp
arpl
lock
xchg
sti
and
push
xchg
dec
or
in
xchg
cmp
pop
loop
xchg
inc
pop
and
jnp
add
andb
imul
pushf
jae
xor
loopne
aad
fwait
sbb
dec
xchg
pop
push
or
push
add
icebp
mov
into
xchg
outsb
mov
out
mov
pusha
repnz
in
dec
in
push
divb
in
inc
test
jecxz
adc
addb
faddl
outsl
and
stos
test
cltd
mov
push
shll
fdivs
jo
repnz
mov
mov
pop
sbb
sub
int
das
mov
sbbl
xor
jp
dec
adc
cmp
dec
orl
pusha
jbe
mov
adc
xchg
mov
cmpsb
xlat
pusha
mov
jp
addr16
fiadds
cmp
hlt
mov
xchg
lcall
add
in
shl
or
popf
cmp
rcr
ss
xor
inc
add
shl
stos
xchg
into
int3
dec
cltd
fsubs
dec
jae
or
fwait
sub
push
in
incl
inc
fnsave
pusha
jecxz
mov
sub
outsb
fdivrl
xor
fidivrs
lahf
xchg
mov
inc
stos
pop
push
leave
add
out
add
mov
adc
out
lea
mov
pop
in
add
cltd
std
daa
fbstp
stos
inc
das
inc
sbb
push
subb
inc
ds
hlt
scas
inc
repz
cmpsb
mov
lahf
dec
dec
inc
jb
vmread
imul
jns
out
jae
scas
test
xchg
movsl
mov
add
push
out
fimull
fcomp
out
int
or
push
pop
inc
push
ljmp
add
push
clc
xchg
out
sbb
rorl
jp
push
test
xchg
xchg
inc
lds
cld
div
negb
fisubs
add
adc
stos
mov
inc
or
call
xor
jle
imul
pop
pop
mov
stos
inc
in
mov
cmp
stos
mov
push
andb
dec
in
jmp
add
int3
add
and
xchg
jmp
inc
popw
dec
scas
cmp
in
pop
pusha
cli
and
enter
pop
imul
pop
repz
lock
lret
popl
icebp
add
incl
lock
or
pusha
test
orl
cmp
int
inc
fwait
mov
xchg
mov
aas
or
push
inc
inc
test
and
pop
add
pop
jns
mov
fs
fcoml
dec
jns
ljmp
mov
sbb
inc
xlat
rorl
aaa
pop
pop
adc
add
or
pushf
dec
fincstp
pusha
lcall
mov
sub
add
pushf
mov
mov
mov
mov
cwtl
pop
push
add
int3
ret
sbb
sbb
push
or
jle
cmovae
pop
bound
mov
jmp
mov
ret
rcll
sbb
cmp
sub
add
jl
cmp
mov
lcall
cmpsb
and
mov
cmp
fdiv
add
into
aaa
inc
mov
addr16
lret
jns
mov
fistl
cmp
lds
loop
out
sub
test
and
and
call
lods
xchg
dec
stos
pop
popf
pop
lds
dec
cld
lock
or
pushl
imul
sub
push
enter
in
pop
movsl
sbb
fistl
addl
or
dec
leave
jg
fidivrs
xor
jmp
push
inc
and
cmpsl
imul
aaa
loopne
and
push
loopne
popf
orl
and
sbb
sub
inc
icebp
test
or
jg
inc
rcll
out
cmp
pop
aam
xor
test
lret
lcall
dec
jle
push
or
out
out
out
and
sub
add
and
stos
in
jl
jecxz
cmpsb
inc
subb
fs
fwait
jmp
jno
loopne
ds
fsubr
xor
mov
inc
lock
ja
pop
jecxz
mov
into
test
push
cltd
std
fs
lahf
dec
aaa
aam
and
jl
cmp
inc
xchg
mov
insl
sbb
imul
sbb
stos
aam
ss
loop
mov
lods
loop
roll
ljmp
insl
sub
push
push
cli
adc
gs
xchg
hlt
sub
cmpsl
data16
ds
call
lock
test
jb
sub
pop
fnstenv
xor
mov
mov
pop
adc
push
sub
idiv
mov
push
pop
sahf
jp
jno
and
cmp
fcmovb
adc
out
add
std
outsl
pop
adc
pop
jge
daa
push
shll
cld
xor
jns
imul
mov
xchg
int
rcl
imul
add
shll
sti
mov
xchg
addr16
push
adc
pop
and
dec
pop
xchg
insb
repnz
aaa
xchg
sub
mov
jb
jbe
das
mov
sbb
imul
jo
adc
fiadds
scas
into
data16
icebp
outsl
xor
xchg
mov
in
cmpsb
adc
add
lock
and
add
mov
outsl
mov
push
test
jo
push
in
movsb
mov
lret
or
dec
jo
cmp
and
call
jle
fwait
push
std
sub
jo
mov
iret
fucom
bound
jmp
xor
bnd
jbe
lock
adc
cmp
ret
adc
call
ljmp
test
dec
sub
jg
popa
mov
in
or
or
jb
cmp
sbb
rorl
cmpsb
fists
xchg
xor
dec
xchg
pop
shll
dec
cwtl
das
dec
mov
gs
xor
in
xorl
push
in
sbb
cmc
shr
je
cmpsl
enter
and
add
ss
lods
mov
lock
out
mov
test
or
mov
int
sti
nop
mov
repz
jne
shr
sub
cmp
jns
dec
lods
in
inc
fnsave
repz
cs
cmpsl
int
dec
clc
cmpsl
cmpsl
push
outsl
test
cmp
outsb
lods
lods
mov
cs
bound
xorb
lahf
and
hlt
xlat
pushf
jp
dec
ss
push
inc
pop
lods
in
pop
xchg
sbb
test
repnz
cs
rolb
aad
jmp
in
pop
push
mov
push
addr16
xchg
mov
mov
or
sarl
in
js,pn
rclb
mov
dec
outsb
adc
push
pop
ja
push
jp
and
iret
lock
and
sbb
push
cli
ja
xchg
rclb
bound
insb
sar
loopne
mov
dec
xor
xlat
inc
push
js
push
or
stos
icebp
mov
ja
lret
xchg
cmp
std
fisttps
cwtl
loope
and
jp
aas
xchg
fnstsw
mov
fs
pop
or
addb
arpl
push
mov
fimull
mov
enter
and
and
mov
mov
push
inc
ja
pop
jo
xor
andb
repz
push
stc
lret
mov
rolb
xchg
xlat
xchg
hlt
xchg
out
mov
push
mov
scas
cs
sbb
stc
repz
jno
jecxz
jp
or
inc
lret
or
xchg
add
rol
jmp
mov
cmp
cltd
lock
adc
cmpsb
jno
fldcw
mov
cltd
and
mov
inc
aaa
in
imul
xchg
jne
lods
das
jno
pop
xor
ficomps
outsl
xchg
sub
jb
and
int3
das
xchg
cmpsl
dec
stos
mov
pushf
js
and
sub
and
dec
adc
divb
xchg
fidivrl
pop
push
std
in
jbe
jne
or
and
cmp
jae
mov
aam
ljmp
test
jmp
daa
cwtl
pop
or
jb
je
repnz
rcrl
cmpb
jbe
ret
mov
jnp
sti
or
or
sub
lea
daa
push
inc
in
cwtl
fcoml
cmp
inc
pop
out
mov
or
lret
ret
outsl
xchg
or
int
insb
jb
mov
jno
cmp
in
outsl
jb
out
or
rcrl
in
out
jmp
jl
jno
flds
pusha
jns
cltd
xor
cmp
xchg
adc
jle
into
xor
mov
lcall
fisttps
adc
mov
movsl
and
inc
push
cmp
mov
xchg
mov
inc
mov
cmp
outsl
mov
sub
xchg
or
out
pop
mov
sahf
pop
in
or
lret
aam
sbb
add
dec
ret
cltd
iret
cmp
outsb
aad
mov
jg
shrb
daa
fdivl
jecxz
repz
inc
push
mov
mul
icebp
add
mov
pop
test
int3
and
ret
push
int
jo
shlb
cmp
sbb
aad
or
or
and
or
jge
sbb
scas
xchg
or
cmp
inc
jbe
push
sbb
popa
sub
cwtl
aas
inc
stos
push
in
mov
push
in
popf
imul
xchg
or
jle
addr16
xor
out
dec
or
test
mov
les
shlb
sarl
mov
sarl
stos
xchg
lea
mov
dec
pop
test
test
pop
js
pop
loop
pusha
pop
and
imul
mov
repz
adc
mov
push
fcoms
loope
pop
sbb
in
jmp
and
ret
xorl
mov
push
jo
pop
pop
lret
mov
sti
and
loop
hlt
cmp
inc
cmp
inc
jb
fwait
jae
loop
arpl
cmpl
or
inc
and
inc
out
jp
aad
add
lock
dec
movsl
jb
cmp
repz
adc
sbb
mov
add
dec
adc
sahf
sbb
sub
cmp
adc
cmpsb
sub
and
cmpsb
adc
enter
je
adc
adc
cmc
cli
repz
push
inc
or
in
lods
fsubr
push
les
inc
pop
stos
xor
stos
xchg
mul
push
filds
cwtl
cld
icebp
pop
loop
mov
iret
insl
xchg
push
jb
clc
mov
jle
ja
adc
push
xchg
add
subl
mov
cmp
in
mov
cmp
clc
fsts
movsb
add
in
and
sti
test
sub
inc
daa
inc
or
adcb
int3
jns
loop
mov
mov
or
notb
daa
cmc
fucomp
scas
std
xchg
pop
outsl
shrb
mov
inc
fs
sahf
sbb
lods
dec
sbb
dec
fistpll
xor
mov
mov
psadbw
popa
iret
xor
push
xor
std
ss
in
lock
or
pop
dec
sub
push
sub
aad
mov
test
push
call
cmp
xchg
add
loope
inc
in
in
sub
mov
mov
xor
pop
ss
gs
adc
jl
sub
inc
add
and
pop
and
pop
pop
mov
mov
je
iret
daa
and
aas
inc
fwait
push
cmp
scas
fptan
shr
mov
decl
fadd
in
push
lods
push
mov
fildll
bound
das
outsb
push
rcrl
dec
sub
jnp
jmp
inc
mov
int
imul
xor
adc
dec
jmp
adc
int3
repnz
out
test
call
ljmp
shll
jo
out
push
push
cltd
cmpsl
sbb
cltd
jle
mov
sti
sbb
ret
mov
xor
ss
repnz
inc
in
jo
jecxz
bnd
mov
push
adc
lcall
or
in
mov
mov
insb
jge
stc
lgs
cmpsl
jns
or
xchg
out
push
or
dec
add
pop
add
nop
cmp
push
jnp
add
mov
fidivrs
jb
imul
sub
pusha
pop
xor
mov
jo
cmp
xor
pop
and
push
sub
test
or
lahf
mov
lea
aas
cmp
push
dec
arpl
push
rolb
cmp
bound
push
add
pop
daa
scas
push
or
xchg
adc
fstpl
movsb
dec
xchg
mul
pop
test
xchg
rcrl
addr16
addr16
pushf
mov
mov
pop
adc
xor
fistl
in
data16
out
inc
mov
inc
sub
test
stos
pop
int3
popf
daa
pop
scas
jge
xlat
sub
mov
sahf
mov
sahf
out
call
mov
std
jecxz
fistpl
or
pop
rorl
ljmp
lods
push
pop
cmp
xchg
mov
mov
ss
jne
sub
add
rcl
ja
ror
pusha
or
fadd
add
pop
repnz
xor
iret
xchg
sbb
inc
inc
push
mov
fldenv
jno
add
jp
in
adc
rolb
push
sub
pop
fwait
scas
jl
push
push
scas
mov
ficoms
ljmp
fsubrp
ror
add
jg
test
in
sbb
shl
jl
add
icebp
les
or
stc
or
xchg
jp
xor
mov
orl
imul
js
movsl
mov
aam
push
shll
mov
aad
cmp
les
test
lcall
into
out
jb
mov
cli
sub
cmp
push
lret
cld
adc
lods
jbe
shlb
adc
insl
dec
jb
inc
imul
mov
aaa
pop
scas
arpl
in
pop
call
loop
mov
jne
popa
cmp
or
out
adc
in
inc
and
jno
lahf
popf
or
lea
or
loop
push
pop
popf
aad
jle
mov
imul
xchg
xor
mov
lods
into
push
clc
cmp
mov
mov
dec
push
rcrl
add
hlt
and
ficoms
mov
pop
std
dec
sti
jnp
adc
pop
add
add
or
cltd
call
cmp
inc
adc
pop
movsb
mov
push
cmp
push
pop
cld
shll
push
les
sbb
push
ss
mov
movsl
jl
fsubl
daa
inc
jns
push
aad
xchg
adc
mov
xor
nop
xchg
xor
push
das
mov
stc
xor
cmp
iret
sbb
aad
ds
in
jne
xchg
xchg
mov
push
cmp
mov
pop
mov
aam
dec
pop
mov
btc
pop
sbb
pop
lcall
cmc
mov
lea
call
scas
and
add
adc
mov
mov
test
pop
jmp
push
sbb
icebp
sbb
cmp
push
mov
adc
testl
and
or
or
add
outsb
sarl
push
scas
dec
dec
cmp
cmpsb
jo
add
mov
adcb
pusha
jae
ret
push
pop
lds
sub
mov
xor
pop
pop
xor
jo
xor
jp
mov
int3
mov
mov
pop
cs
shrl
std
inc
add
mov
pop
or
adc
xor
cmpsl
stos
rcll
add
data16
out
mov
call
les
roll
enter
adc
mov
push
cmp
popa
sub
ficoms
dec
or
test
mov
dec
in
sub
sbb
jne
fnstcw
lea
xor
xchg
data16
mov
fnsave
ret
xchg
dec
mov
in
push
push
adc
pop
adc
aas
inc
and
loope
sub
ljmp
sbb
jb
sbb
sub
out
lods
sahf
repnz
dec
mov
mov
add
dec
inc
and
outsl
mov
push
hlt
pop
lret
fcomip
and
jecxz
scas
jnp
adc
sbbl
mov
or
xor
mov
daa
pop
out
mov
lock
jbe
xor
inc
repnz
cmp
and
mov
rol
ss
sub
inc
test
and
mov
idiv
adc
add
pop
xchg
cmp
push
cmp
mov
ss
aam
test
mov
mov
or
and
cmpsb
push
xchg
xor
popa
jae
mov
lahf
inc
daa
mov
cmpsb
mov
gs
insb
movsl
lahf
cmp
mov
ret
fbld
inc
ret
bound
pop
adc
lods
aas
jb
inc
icebp
test
mov
mov
xor
mov
lock
or
imul
fwait
lahf
mov
repz
mov
mov
inc
lea
inc
hlt
xor
and
jl
dec
lea
cmc
mov
sub
or
js
pop
jns
ret
sub
push
rolb
lahf
dec
or
repz
test
jmp
cmp
test
or
lahf
insl
into
add
adc
sarl
shlb
pop
sub
popf
inc
mov
test
xor
aas
das
mov
xchg
mov
lcall
inc
adc
dec
and
push
loopne
je
loop
sti
cmp
sahf
sbb
cmp
sahf
call
lret
pop
cs
hlt
mov
fnsetpm(287
insb
jbe
faddl
cmc
call
pop
outsb
cmpsl
pop
mov
dec
xchg
jle
add
movsb
data16
adc
mov
pop
loop
pop
mov
outsb
data16
add
pop
cmp
lahf
lret
pop
inc
lahf
pop
xor
cmp
pop
cld
jae
inc
mov
xchg
out
sub
fdivr
adc
fwait
aaa
or
stos
gs
pop
rcr
cwtl
fildl
pop
xlat
xchg
fidivrs
fldl
push
mov
jno
out
hlt
mov
mov
icebp
push
push
cmp
cld
mov
xchg
push
xor
mov
cmpsl
sub
scas
imul
mov
pusha
test
ds
dec
pop
sub
fwait
add
les
jbe
stos
lea
push
es
je
pop
das
xchg
in
int3
push
xor
inc
test
hlt
xchg
mov
nop
scas
add
push
mov
pusha
or
mov
in
je
into
out
xor
std
mov
or
stos
lods
inc
mov
push
shll
popa
fstpl
fistl
xor
push
nop
xchg
jb
cs
or
xchg
mov
fsubl
lock
and
inc
inc
into
sahf
push
iret
outsb
jbe
push
mov
xchg
daa
lock
imul
mov
cmp
loop
inc
dec
scas
imul
rcrl
rorb
fmul
int3
mov
jns
sbb
inc
dec
inc
jno
insl
rcrb
jl
je
insb
lds
inc
mov
mov
inc
and
pop
mov
lods
ss
insl
fs
fbstp
jl
or
xlat
dec
insb
cmp
js
stos
pop
xor
mov
loop
dec
mov
xor
in
sub
lret
hlt
lock
sahf
jns
xchg
cmp
xor
fldl
sub
pop
mov
pop
inc
stos
jae
mov
in
mov
fcmovb
xchg
mov
aam
push
repnz
scas
ljmp
pop
cs
cmp
adc
arpl
cmpsb
mov
insb
jecxz
aad
cmp
xchg
cmp
xchg
repnz
push
loope
wrmsr
mov
cmp
adc
mov
sahf
ret
in
lods
mov
imul
xlat
mov
or
in
push
or
push
push
outsb
ficoml
cmc
sbb
cmp
mov
repnz
adc
adc
rcr
fldt
arpl
mov
inc
pop
cmpsl
sub
fbstp
lods
sub
jmp
enter
test
push
in
adc
mov
ficoml
push
imul
mov
insb
scas
push
pushf
ret
fstps
mov
mov
sbb
mov
out
in
imul
scas
out
push
mov
lock
mov
inc
ljmp
cli
ja
pushl
mov
push
pop
repnz
mov
xchg
jmp
lds
fdivr
dec
jne
dec
icebp
lcall
out
adc
stos
jl
pop
xor
adc
popf
pushf
out
jecxz
adc
inc
aas
jge
out
scas
stos
cmp
lods
push
xchg
and
mov
xlat
imul
cmpsb
incb
repnz
mov
fists
shlb
mov
ret
adc
lock
icebp
pop
mov
pop
das
push
lock
jp
mov
push
iret
mov
stos
add
nop
xchg
adc
int3
sbb
cs
lods
jmp
mov
inc
pop
ljmp
lds
jl
gs
sbb
mov
lret
sbb
inc
pusha
add
sbb
scas
call
jnp
lea
mov
mov
xchg
jno
sub
roll
mov
push
push
dec
and
test
dec
imul
add
xchg
popaw
aas
xor
mov
pop
jbe
mov
cwtl
push
pushf
jmp
lock
gs
outsl
xor
pop
add
rcll
xchg
fs
pop
cltd
fimull
in
fs
fisttpll
and
roll
xchg
in
lea
sbb
cltd
xor
lods
mov
scas
push
lahf
lret
inc
es
ljmp
mov
out
pop
int3
ljmp
pop
jle
or
divl
daa
test
push
add
or
xor
addr16
imul
cmc
cmp
mov
add
mov
enter
jne
xchg
mov
in
jnp
mov
mov
sbb
sbb
enter
dec
out
cmp
dec
rcrb
pop
fcoms
sbb
xchg
out
int
add
fistl
mov
push
push
xor
sub
inc
out
arpl
ljmp
push
add
loopne
sub
mov
popa
xor
add
add
jne
xchg
add
mov
mov
push
and
mov
stos
and
fsubs
lcall
lods
pushf
pop
and
push
xchg
cmp
inc
sahf
js
jnp
jecxz
push
lcall
mov
icebp
add
pusha
cmp
test
ds
jle
mov
aam
popa
lret
and
pop
scas
add
jns
imul
or
aam
jecxz
sbb
push
jbe
mov
repnz
push
adcb
in
sahf
inc
ret
jg
stc
jns
push
xor
fimull
scas
xchg
cmpsl
js
iret
jle
or
test
je
mov
push
mov
in
lock
repnz
pop
mov
mov
pop
mov
icebp
dec
mov
test
jb
inc
mov
ret
cld
jno
sbb
adc
pop
adc
mov
add
test
xorb
inc
and
adc
jbe
cmp
sbb
jb
push
lds
dec
xchg
mov
adc
outsb
sbb
cmpsl
inc
cs
scas
pop
fucomi
xchg
rol
jl
adc
adc
shl
push
dec
mull
mov
fidivrs
and
das
ds
fimull
xchg
mov
inc
sbb
cmp
mov
jnp
mov
clc
and
stc
xchg
xchg
or
popf
dec
mov
shlb
idivb
bnd
scas
push
jp
or
inc
mov
jns
jno
movsl
lahf
sbb
cmpsl
arpl
sti
pop
sub
adcb
outsb
add
push
gs
pop
add
aam
ljmp
jle
jg
in
mov
out
mov
push
int3
jns
movsl
mov
add
xor
xor
subl
jno
xlat
or
mov
or
imul
push
ds
test
call
hlt
mov
or
dec
pop
inc
mov
test
icebp
fcomps
popf
test
xchg
push
adc
pop
aas
pavgw
jno
inc
adc
daa
add
or
int
lods
aam
xor
inc
and
adc
add
int3
sub
jno
movsl
dec
push
fcomps
cmp
and
les
push
rolb
shll
fs
iret
xor
rcll
lcall
add
testb
int
cmp
sub
aam
push
enter
push
sbb
stos
and
sub
fwait
pop
movsb
fldl
cld
mov
out
pop
jp
lea
lods
cmp
mov
cltd
dec
jo
enter
loopne
jp
lret
pop
push
pop
pop
lds
daa
adc
andb
and
push
imul
adc
jg
xchg
add
fidivrs
repnz
cmp
fsts
mov
mov
pop
push
xor
and
cmp
dec
test
loopne
rolb
aam
es
sbb
adc
std
iret
push
test
xchg
stc
repnz
outsl
jne
and
test
mov
mov
mov
pop
iret
mov
outsb
fcompl
xchg
clc
stos
fldl
negb
jecxz
cmp
mov
adc
and
dec
cmpsl
jg
and
add
lods
sti
pop
mov
push
pop
dec
add
mov
xor
shr
jne,pn
pop
jns
fdivrs
out
sub
push
stos
cmc
and
pusha
mov
xor
dec
cltd
mov
insb
scas
mov
aas
mov
xlat
mov
push
ja
popf
cltd
ret
add
push
mov
ljmp
add
mov
aad
jne
mov
or
lds
jo
leave
pop
cltd
add
cld
push
scas
mov
xchg
arpl
push
push
cmp
inc
pop
orb
dec
mov
addb
or
call
mov
addr16
nop
or
cltd
add
and
dec
push
and
repnz
mov
dec
les
outsb
cld
cltd
shrb
jp
in
imul
adc
insl
inc
in
pop
lret
insb
nop
mov
mov
xchg
jno
adc
xor
mov
arpl
ljmp
cs
hlt
sbb
iret
inc
pop
loopne
sbb
adc
fldcw
inc
mov
jecxz
loop
jle
icebp
push
xor
inc
inc
insb
mov
xor
push
fcomps
pop
xor
in
inc
sub
mov
lea
clc
rol
adc
mov
dec
pop
mov
stos
push
push
arpl
aam
push
sub
stc
push
inc
and
repz
stos
ss
aam
sahf
xchg
sbb
aaa
push
push
arpl
lret
cli
dec
or
dec
push
xor
shl
pop
pop
mov
mov
mov
loope
in
pop
js
stc
xlat
xlat
aas
xor
mov
pop
dec
xchg
sti
sub
imulb
xor
mov
add
add
sbb
cmp
bound
cli
pusha
cwtl
adc
pusha
sarb
jns
insb
loope
push
aas
cmpsl
dec
das
dec
mov
scas
cmp
inc
mov
push
jnp
mov
pop
scas
jmp
push
lahf
jo
ds
insb
adc
dec
pushl
mov
je
cmp
dec
test
out
inc
pop
adcl
cs
popa
rcll
jne
sub
push
out
jge
mov
sar
fsts
stos
jecxz
fidivrl
jbe
leave
xor
push
sbb
mov
in
iret
mov
sbb
pop
popf
jg
insb
stos
and
lret
cwtl
std
dec
sahf
pusha
or
push
jbe
aad
pop
test
jl
jl
mov
push
mov
adc
sti
dec
push
js
imul
add
xchg
mov
push
cltd
xchg
rcrl
loope
jns
inc
adc
insb
movsb
add
les
dec
in
addr16
rcll
add
mov
test
lret
popa
icebp
stos
fdivl
xor
cmpb
cmp
pop
add
rcr
lods
mov
jne
lds
or
lea
mov
popf
xor
repnz
sbb
and
and
mov
rorb
mov
inc
js
sub
lock
jp
stos
lcall
jno
filds
cs
jnp
daa
inc
insb
inc
inc
aam
push
test
mov
cmp
mov
fimull
insl
lods
imulb
mov
xchg
arpl
test
in
shl
mov
sti
jb
inc
mov
test
pushf
cmpsl
xor
pop
test
xorb
leave
jb
pop
mov
les
test
pusha
repnz
js
loop
lahf
or
shrl
push
sub
xchg
std
nop
jae
mov
and
cmp
ds
cmpb
femms
inc
jg
lret
adc
test
push
mov
mov
fabs
cs
std
bound
mov
and
mov
stos
cmp
fsubrs
xor
call
push
outsb
fisttpll
pop
push
fldt
and
aad
ret
and
movsb
incl
mov
xchg
dec
aas
jnp
add
sahf
inc
jp
testl
inc
loope
sub
push
scas
in
or
mov
pop
cli
mov
mov
stos
push
iret
push
lret
mov
icebp
sahf
xchg
mov
pop
daa
inc
test
inc
push
adc
pop
and
imul
jg
std
jle
xchg
mov
add
cltd
mov
adc
fsubrs
daa
or
mov
or
jae
mov
fmuls
movsb
and
adc
in
jmp
insl
in
lock
dec
sub
cmpsb
out
fistl
pop
and
add
data16
aad
mov
stos
mov
jmp
sub
mov
push
and
mov
aam
aam
mov
sub
and
or
push
mov
orb
push
dec
adc
out
jno
adc
pusha
push
xchg
add
je
and
rclb
cmp
and
loope
fisubrs
push
lea
repz
mov
stos
inc
ljmp
outsl
out
mov
insl
mov
dec
js
mov
call
dec
xor
in
fbld
sub
xor
lahf
or
jmp
add
rcl
loopne
push
enter
repz
and
mov
insb
pop
adc
cwtl
push
repz
sub
and
clc
xor
int3
add
mov
xchg
shl
testb
push
pop
sub
out
lea
mov
mov
xchg
sarl
out
sbb
mov
dec
dec
or
ffreep
lahf
les
xchg
cmp
or
xchg
dec
loope
xchg
out
jmp
iret
jge
inc
pop
jns
inc
pop
jbe
cmp
mov
xchg
jb
xchg
jge
shll
int3
pop
mov
pop
jl
test
out
sahf
pushf
push
call
out
xor
xor
les
pop
inc
aam
push
leave
sbb
cmp
mov
js
pop
mov
stc
add
xlat
mov
ret
rcrb
adc
pop
mov
sahf
cmpsb
pusha
jb
xlat
xor
push
scas
daa
mov
outsb
int3
push
repz
loop
das
les
pop
push
or
fcmovbe
fcom
ja
in
or
aaa
mov
jns
sbb
scas
mov
shr
sbb
loopne
icebp
and
cmp
aaa
loope
xor
imul
xchg
jle
inc
cmp
mov
pop
data16
neg
js
xor
cmp
jge
xchg
mov
cmp
cmp
pop
xchg
inc
xchg
jae
imul
add
sub
and
or
mov
inc
and
xor
stc
clc
cmp
clc
subl
jg
mov
shrl
imul
mov
adc
mulb
lcall
adc
ds
cwtl
insb
out
cs
adc
mov
je
sbb
inc
std
fdivrl
jg
je
cmp
add
sldt
inc
es
cltd
push
cltd
push
rcll
outsl
lretw
stos
add
mov
cmp
lahf
in
in
stos
xabort
or
inc
shl
sub
pop
enter
jp
ja
and
cmp
jbe
adc
and
pusha
jle
test
mov
cmpb
or
push
lea
rcl
dec
in
shr
sub
lods
subl
mov
mov
imul
clc
sub
cmp
outsb
into
pop
subb
lods
push
cld
repnz
jecxz
sub
mov
repz
push
leave
aad
fsub
es
dec
out
add
pop
lock
push
movsb
pop
sbb
mov
rcr
xacquire
test
sarb
and
xchg
test
sub
adc
dec
push
cs
cmp
push
mov
sbb
outsb
out
mov
lret
or
cli
stc
loopne
stc
push
xor
or
fistps
stos
xor
mov
xor
lods
cs
outsb
add
xor
jp
mov
imul
pop
mov
sub
xor
pop
mov
sti
push
mov
stc
addb
adc
mov
out
mov
or
mov
pop
std
fistl
adc
adc
outsb
jno
dec
loopne
and
int3
mov
scas
ja
xorb
aaa
lods
shlb
pop
xor
add
xor
mov
cmp
dec
fistps
adc
sub
cwtl
sbb
cld
repz
loopne
xchg
add
sbb
xchg
sub
cmc
cmp
test
dec
jb
outsb
fsub
mov
mov
xor
dec
sbb
cmpsb
xchg
mov
imul
inc
outsl
icebp
xchg
imul
xor
sahf
inc
xchg
adc
out
pop
test
mov
ds
jns
and
adc
sbb
xor
mov
xchg
mov
cs
imul
jp
faddl
pop
mov
mov
outsb
xchg
inc
push
int3
jbe
push
movsb
out
pop
cmp
cmp
push
test
nop
sub
mov
sub
ret
xor
lock
negb
cli
sbb
hlt
cltd
jge
mov
pop
movsb
test
fists
push
xor
sub
mov
pop
into
outsb
jb
js
mov
mov
out
push
xchg
pop
sbb
leave
cli
dec
fdivl
outsb
icebp
out
out
addr16
mov
xchg
outsl
sbb
fiaddl
mov
push
div
cmp
jb
add
xlat
sub
dec
mov
mov
and
mov
stos
mov
mov
sub
pop
mov
inc
fnstcw
cmc
in
ffreep
arpl
in
out
dec
or
fsubrl
pop
sub
hlt
repnz
pop
jecxz
leave
push
movsb
jg
xchg
daa
push
je
movsb
add
mov
xchg
dec
pop
dec
filds
imul
pop
push
adc
mov
andl
mov
jl
pusha
mov
into
in
bound
repnz
xor
sarl
dec
movsb
jmp
add
xor
mov
push
scas
ret
rcr
pop
and
mov
pop
sti
pop
or
jb
test
sub
mov
pop
mov
iret
inc
sub
xor
adc
push
xlat
xchg
clc
adc
aas
test
xchg
sub
pop
mov
mov
dec
dec
xor
xor
xor
cltd
test
jg
jo
xchg
jle
cmpsl
daa
notl
mov
adc
mov
xchg
hlt
xchg
xor
dec
cli
inc
clc
int
cmpl
jp
outsb
in
inc
scas
xchg
push
fwait
sbb
xchg
pop
stc
xor
jecxz
push
cmpsb
test
or
out
dec
xchg
daa
lahf
mov
mov
aaa
psubq
js
lock
repnz
adc
mov
xchg
jp
stos
jb
mov
pusha
sti
pop
leave
sarl
je
test
push
sbb
adc
cli
outsb
outsb
jne
adc
mov
mov
push
addr16
adc
test
xrelease
cmp
inc
ss
inc
movsl
jae
mov
aaa
mov
xchg
mov
jae
loop
push
xorl
out
push
xchg
pop
push
jmp
sarl
and
stos
dec
xor
clc
or
rolb
pop
pop
aad
rolb
imul
in
xor
and
int
cmpsb
push
movsb
adc
inc
mov
in
xor
push
movsb
push
movl
notb
xchg
sti
cmpsb
jle
aas
sbb
xchg
je
dec
fnstenv
pusha
push
hlt
adcb
and
mov
mov
incb
jne
lods
sub
pop
loope
fdivl
mov
xchg
sbb
pop
sti
dec
movsb
mov
jne
jb
mov
leave
insb
cmp
push
testl
and
jp
inc
dec
enter
fadds
push
jecxz
into
in
aad
mov
pop
sub
aas
lea
xor
lret
cmp
scas
xchg
rclb
orl
lret
iret
push
stos
arpl
cwtl
test
xor
push
scas
outsl
lds
fists
arpl
and
sti
or
cmp
or
sbb
repnz
in
push
mov
fdivs
in
arpl
dec
lods
je
add
shll
sbb
pop
lcall
sahf
inc
leave
les
daa
jno
lods
imul
fists
sar
mov
cmp
std
xchg
nop
rcl
mov
mov
jle
push
sbb
lahf
mov
repnz
mov
stc
jb
arpl
adcb
sbb
lods
lret
loop,pn
jp
cmp
cld
xchg
jl
popa
mov
push
out
xor
lcall
bound
or
lcall
testl
inc
daa
xor
add
sub
jb
jae
inc
or
lock
dec
outsl
subl
cmp
call
sub
out
es
xchg
test
adc
aas
bnd
xor
lods
repz
lret
sahf
mov
in
mov
int3
and
mov
push
sub
dec
xchg
dec
rcll
into
xlat
pushf
sub
loopne
inc
addb
or
insl
mov
jnp
sbb
mov
pushf
ret
rcr
or
mov
inc
sbb
dec
or
jns
pop
divb
std
insb
push
mov
out
xorb
jg
mov
push
movsb
fdivrs
fs
decb
int
inc
mov
scas
daa
popa
mov
sub
sbb
sarl
cmp
loopne
test
shlb
iret
out
ss
cli
and
addr16
pusha
lea
pop
jb
push
movsb
test
in
fs
add
lods
adc
cmp
xor
cmp
inc
stos
mov
cmpsb
inc
sub
push
lea
jp
push
out
dec
lock
rdtsc
sbb
cmpsl
push
out
gs
js
xchg
sarb
jg
clc
push
jp
and
cmp
inc
sbb
xchg
push
sbb
pop
mov
lds
and
pop
lret
mov
jg
jne
cmc
pop
aaa
xchg
out
pusha
rcl
pop
inc
xchg
push
dec
orb
add
pop
jecxz
dec
jp
or
mov
into
push
jne
lret
add
dec
je
cmp
fwait
mov
and
pop
aaa
mov
inc
cmpsb
adc
mov
pop
inc
jnp
sub
test
mov
pop
lret
lret
push
aam
arpl
loope
jle
aaa
movsb
jg
test
pusha
lods
inc
shl
icebp
lds
orb
pop
outsl
xlat
loopne
or
cmpsl
lea
jo
jmp
scas
mov
xlat
rcrb
das
jle
shll
adc
push
loopne
cmpsl
sbb
lock
jne
mov
je
pop
jg
jmp
in
lods
pushf
dec
xchg
or
jbe
or
push
jecxz
sbb
mov
fildl
cli
cmp
sarl
in
and
inc
dec
out
loop
adc
push
inc
dec
loope
mov
scas
adc
add
cmp
iret
and
lods
jmp
insb
mov
cmp
and
xor
loop
jecxz
fsubl
test
pcmpeqb
lcall
add
adc
jne
outsb
insl
or
mov
bound
xchg
jno
repnz
sarb
inc
in
call
dec
filds
adc
cmp
sbbl
js
xor
mov
adcb
iret
lahf
or
cs
mov
stos
stos
lock
pop
jg
or
add
in
pusha
sub
mov
jnp
jp
xor
add
mov
rcrb
rclb
out
leave
or
mov
push
push
xchg
push
icebp
gs
sbb
bound
call
xchg
je
dec
stos
add
rolb
xor
test
sub
sbb
jl
mov
jns
daa
lret
cmp
aaa
fcmove
inc
sbb
sarb
cli
mov
outsb
jnp
and
rcrl
mov
mov
sub
inc
lods
js
stos
rcll
xchg
adc
call
addr16
lret
out
xchg
lea
in
xor
cltd
sub
pop
add
lds
and
movsb
jno
mov
in
decl
sahf
ljmp
cltd
sbb
into
xor
imul
push
add
push
or
mov
jnp
cmp
cmp
push
popa
mov
scas
jle
fs
xchg
xchg
pop
mov
push
or
fmuls
add
stos
mov
jns
jns
sbb
mov
call
fstps
jg
lret
out
cs
cmp
dec
pop
fsubs
fs
mov
add
scas
cmp
sub
mov
cs
into
and
mov
daa
xor
xor
out
pop
mov
push
push
jb
xchg
push
mov
clc
push
popf
adc
xchg
int3
pop
int3
xlat
sub
rorb
orl
mov
addl
jp
hlt
jecxz
test
xchg
cld
xchg
lods
sbb
push
shll
dec
mov
int
ret
jl
aas
xlat
cmp
sub
mov
pop
jecxz
nop
insl
dec
leave
inc
cld
setns
imul
subl
dec
inc
mov
repnz
rolb
xchg
je
aam
loop
xorb
inc
jnp
push
aad
or
mov
pop
mov
lcall
sub
aas
push
push
add
mov
in
mov
fsts
mov
sbb
aaa
inc
push
adc
testl
out
push
sub
or
mov
push
int
mov
mov
int3
shll
pusha
mov
push
pop
push
mov
cmpsb
inc
subb
sbb
add
pop
mov
les
gs
mov
jp
lea
insl
imul
xchg
cmpsl
xor
adc
out
lods
fsubrl
fst
cmc
add
and
pusha
jecxz
or
sub
push
pop
lock
pop
sahf
sub
push
and
mov
lds
call
mov
pop
mov
cld
push
add
loop
cwtl
insb
aad
sbb
fdivrs
push
sub
sbb
movsl
scas
dec
test
setno
pop
push
inc
jg
dec
and
fld
sub
call
sub
scas
mov
ret
mov
repz
pop
or
hlt
pop
mov
xor
cs
jle
stos
cmpsl
inc
mov
dec
add
pop
outsb
xor
add
test
outsl
int
adc
sbb
mov
sub
mov
xchg
sbb
lds
or
jmp
fdiv
mov
frstor
push
mov
sub
ficoml
and
push
inc
ds
pop
pop
sub
pushf
jge
shl
ret
mov
addr16
xchg
out
pushf
mov
mov
or
ret
out
mov
divl
dec
jp
or
sub
mov
push
xchg
ds
jg
mov
lea
or
sti
sub
clc
pop
or
aas
loop
mov
imulb
mov
or
lret
mov
adc
pop
scas
cld
xor
jae
mov
test
mov
add
sbb
sbb
pop
imul
sbb
mov
jno
es
ret
data16
jp
inc
and
add
cltd
test
push
cmp
adc
stc
cmp
or
test
push
lock
and
push
enter
bound
dec
xlat
sbb
ja
cmp
lcall
cmpsb
gs
int
inc
test
lock
xorb
push
pop
xchg
popf
jb,pt
mov
mov
mulb
loop
ja
sub
pushf
in
pop
adc
loopne
mov
in
mov
add
in
fucomp
mov
jbe
jbe
mov
push
push
inc
shlb
lods
push
xor
mov
stc
enter
push
jle
daa
mov
das
addb
push
mov
cmp
push
xchg
repz
outsl
outsl
and
sbb
xchg
inc
scas
mov
adc
push
and
sub
and
jno
xor
mov
mov
or
enter
popf
inc
fbld
ljmp
andb
hlt
push
cmp
cmp
mov
lret
outsb
cmp
inc
and
pop
outsl
jne
test
pop
inc
add
daa
cltd
or
pushf
popf
mov
mov
adc
cltd
inc
mov
xchg
in
xchg
mov
shrb
jmp
xor
xlat
sbb
adc
jno
test
sbb
popa
mov
jp
imul
int3
mov
bound
mov
mov
cmp
dec
and
push
jo
mov
cmp
mov
rorb
js
popa
cmp
lcall
adc
aaa
mov
xchg
negb
clc
inc
xor
mov
push
in
scas
pop
add
ret
add
cld
xchg
jnp
test
cs
xchg
sbb
movsl
push
testb
popf
fnsave
loope
jmp
repz
jbe
fcompl
xor
das
stc
in
adc
insb
rcr
push
sbb
xor
lahf
xor
cmpsb
stos
sti
enter
cmc
bound
mov
icebp
xchg
addr16
pushf
xchg
std
nop
scas
ficoms
arpl
pop
test
aam
jne
divl
cli
mov
mov
les
sti
lock
sub
mov
in
jbe
dec
and
loop
and
iret
adc
xchg
out
lret
insb
jb
xor
clc
dec
or
cmp
out
imul
or
xchg
and
das
out
push
gs
pop
mov
sahf
sbb
sbb
jmp
popa
sub
rol
movsb
add
aas
lret
jle
ljmp
cmp
repz
jo
sbb
pop
lds
data16
xchg
sub
inc
mov
xchg
scas
or
arpl
sub
insl
adcl
jmp
lahf
aas
mov
mov
outsl
lret
shll
sbb
mov
sub
fisttpll
fadds
lahf
daa
je
xor
mov
lret
cmp
jl
inc
dec
in
loopne
mov
icebp
daa
data16
sub
jb
jp
dec
mov
in
cwtl
mov
pop
sahf
add
outsb
movsl
add
mov
in
pushf
rcll
xchg
scas
push
cli
jge
xor
mov
cmp
push
xor
fdivl
sub
in
pop
mov
cli
nop
nop
xorb
xor
in
pop
fsubrs
aas
sbb
pop
or
mov
adc
sti
xchg
xchg
xchg
jp
jecxz
mov
xor
and
aad
aas
call
in
mov
loope
cwtl
aam
sarb
mov
xor
dec
jl
add
iret
pop
cmp
jle
cmp
insl
cs
push
sbb
std
mov
int3
rorb
pop
pop
cmp
adc
jge
mov
xchg
adc
sub
lock
ret
stc
imul
int3
or
and
dec
mov
je
push
xchg
mov
out
lea
lods
pop
jbe
nop
cld
addr16
inc
insl
xchg
insb
icebp
leave
popf
iret
scas
cmc
add
test
inc
jge
stos
push
inc
mov
mov
mov
int3
add
push
rorb
jl
cmpsl
les
sbbl
mov
or
cmp
xchg
std
fsubrl
fadds
aam
rorl
les
push
mov
pop
hlt
push
jmp
scas
js
test
push
ss
and
mov
divb
or
jno
shll
shl
rcll
and
fidivrs
fimuls
and
cmp
lea
push
sahf
shlb
outsl
stc
pop
jmp
or
test
sub
push
test
mov
sub
adc
imul
movsb
pop
jne
and
in
add
xchg
push
addr16
adc
mov
or
arpl
mov
sbb
cmc
cmp
addr16
push
arpl
or
gs
and
inc
dec
add
dec
movsl
sub
push
shlb
mov
les
push
xchg
pop
xchg
pop
cs
cmc
pop
xchg
pop
fidivl
mov
bound
hlt
or
xchg
push
mov
mov
or
push
jle
sub
fisubs
andl
sbb
fcoms
test
jge
sbb
sbb
push
inc
xchg
add
pop
jle
aaa
imul
shrb
lahf
xor
jmp
pop
inc
cmpsb
jp
push
call
sub
nop
test
sub
dec
or
xchg
dec
mov
sub
pop
mov
xchg
jmp
adc
outsb
in
mov
js
imul
loop
jmp
mov
add
scas
mov
lods
xchg
pop
mov
jmp
mov
and
call
push
jnp
or
sub
icebp
scas
inc
mov
lock
inc
fsubl
lret
mov
add
sar
out
jecxz
push
fs
test
roll
bound
in
xor
cmp
or
aaa
jo
mov
jne
xor
enter
mov
jb
mov
push
jbe
movsl
dec
icebp
shll
xchg
add
push
lret
pop
movsb
icebp
push
jns
not
sbb
dec
je
mov
mov
jge
lcall
aaa
adc
xchg
sbb
sti
or
adc
sti
sarb
jb
popa
mov
xchg
and
mov
jle
add
sub
adc
xor
jge
or
test
jae
xchg
cmp
cs
lea
pop
jo
out
cmpsl
shlb
iret
jbe
xchg
add
jbe
movsb
xor
mov
sbb
and
lahf
sahf
aas
punpckhdq
push
icebp
aam
mov
mov
mov
cwtl
dec
in
cs
adc
imul
aam
and
dec
cmc
push
xchg
shr
call
loop
std
cmp
mov
gs
push
ret
jae
lods
addr16
jecxz
out
inc
pop
mov
inc
sarb
gs
int3
xlat
add
js
sub
fnstsw
and
inc
jmpw
in
cmp
insb
push
ss
pusha
aad
inc
cmp
inc
or
or
sub
int
sti
cld
subb
jl
sub
sbb
daa
pushf
push
mov
rorb
out
pop
outsl
mov
push
or
outsb
cmpl
jp
aam
rcrl
xchg
jl
push
cld
mov
clc
mov
ja
mov
ficompl
or
push
cmpsl
shll
mov
int3
xchg
dec
pop
test
pop
js
movhps
push
mov
cmp
into
dec
cmp
xchg
jo
jne
cmp
pushf
mov
mov
cmpsb
subl
xchg
loopne
jne
lcall
dec
idivl
hlt
or
mov
ret
adc
test
fcoml
ficoms
push
cli
and
lea
inc
les
mov
cmpsb
cmp
testl
mov
mov
jae
pop
and
dec
inc
pop
repz
mov
jne
push
aaa
sub
xor
jbe
ljmp
adc
mov
loopne
sbb
fwait
xchg
jle
negb
push
mov
xchg
pop
loope
xchg
add
ljmp
mov
fdivr
fisubrs
sahf
mov
add
inc
mov
mov
sbb
push
sub
inc
jecxz
and
sbb
arpl
push
dec
and
mov
cmpsl
out
adc
sub
push
inc
add
mov
decl
xchg
test
mov
inc
aaa
cltd
out
mov
or
stos
adc
das
dec
cltd
jns
cmp
or
pop
popf
imul
sarl
dec
xchg
lret
jle
mov
mov
and
repnz
sub
nop
add
add
repz
pop
ret
push
or
xorb
sub
in
loope
lret
and
wrmsr
mov
push
dec
sbb
int3
scas
jne
nop
mov
icebp
out
test
xchg
cwtl
cmpsb
insb
sub
inc
addl
rcrb
sub
jecxz
adc
clc
ror
mov
cli
imul
mov
sub
cmp
dec
pop
ret
imul
sti
fistpll
and
lock
into
insb
push
jg
mov
inc
jne
cmp
fists
jecxz
std
mov
mov
scas
leave
inc
xchg
cmp
lcall
or
ror
mov
jge
int
inc
push
adc
push
jl
dec
jmp
pop
test
ja
or
call
nop
je
mov
sar
scas
push
push
or
dec
stos
in
ret
cmp
and
xor
or
sbb
shrb
sub
jge
add
push
andl
fdivrl
data16
and
popa
sub
rcr
dec
aad
jbe
lcall
orl
mov
sbb
mov
fists
je
cmp
or
mov
aad
fidivrl
popa
aaa
sub
inc
and
add
inc
sbb
ret
je
dec
js
icebp
out
jae
fs
ja
adc
push
xchg
cmp
outsl
xor
push
test
stos
inc
es
testb
inc
imull
outsb
cmp
out
jno
fsubl
loope
mov
int3
es
arpl
ficoml
scas
xlat
test
lea
or
js
ret
lcall
dec
jp
repz
mov
inc
fiaddl
jmp
xchg
add
cmp
dec
cmp
bound
pop
pusha
xchg
jns
fdiv
popf
sbb
bound
and
pop
ss
mov
and
jne
fldt
pop
or
jns
fnstcw
mov
aad
add
popa
pop
pop
or
dec
lds
icebp
jns
aaa
mov
sbb
test
nop
bound
sub
jbe
imul
lock
lret
andb
imul
sub
in
out
xchg
cmp
lea
push
out
dec
mov
cmp
push
in
sbb
or
sarl
scas
push
jae
js
shll
and
push
sahf
lea
imul
jecxz
out
jge
cmp
cmpsb
xchg
xorb
or
mov
das
rol
mov
sbb
out
scas
rcr
dec
mov
enter
dec
loope
stos
xor
lods
inc
addl
mov
cld
cmp
pop
fsubr
push
movsl
add
sti
adc
adc
fisttpl
sbb
dec
ret
pop
ljmp
mov
xorl
adc
cmp
mov
xor
sub
rolb
sti
test
in
pop
jge
jl
cmp
stos
dec
jno
mov
rclb
inc
fnstsw
jne
push
ds
adc
loope
cmp
pop
popf
push
adc
mov
in
lock
jl
inc
dec
jge
mov
jbe
xchg
dec
sub
mov
addr16
mov
pop
ficomps
jnp
xor
call
mov
sub
push
cmc
test
inc
xchg
test
cmp
ret
ror
push
dec
xlat
lds
cmpsb
xor
cmp
mov
add
out
cmp
push
jge
arpl
sbb
test
jmp
inc
inc
cmp
pop
clc
jo
lahf
push
cmp
jbe
xchg
scas
pusha
push
sub
jl
js
out
das
add
jle
jecxz
mov
pop
imul
aas
jnp
stos
data16
inc
scas
xor
pop
enter
leave
inc
sub
mov
imul
sub
add
insb
ja
ret
inc
fisubrl
add
xchg
add
jns
pusha
add
sub
sub
test
insl
test
repnz
arpl
mov
jle
pop
fs
jns
dec
and
ljmp
ljmp
pop
pop
inc
jmp
leave
dec
imul
adc
in
das
inc
push
jae
sub
jge
ret
mov
into
adcl
inc
and
push
mov
das
xor
fists
dec
inc
lods
pop
dec
inc
xor
push
jbe
lret
adc
testl
negl
mov
and
jbe
xlat
and
sub
stos
push
arpl
xor
dec
mov
shlb
ja
cmp
mov
inc
push
and
insb
hlt
repz
cmp
dec
and
mov
inc
xchg
dec
or
sub
inc
xchg
jns
add
push
dec
push
cmp
in
mov
lret
les
push
in
jl
daa
pop
rcrl
or
sub
popa
lds
sahf
subb
push
inc
adc
push
addr16
jl
leave
ljmp
lods
fsubrs
enter
or
into
mov
rcrl
dec
and
pop
inc
int
mov
adc
stos
hlt
sub
push
ret
das
cltd
stc
pop
movsl
fdivl
mov
add
pop
push
push
inc
sub
mov
int
lcall
imul
mov
mov
sbb
push
push
das
mov
jb
jl
pop
mov
jp
fstps
outsb
dec
or
sub
adc
jno
in
call
dec
negb
mov
push
inc
xor
in
cmp
adc
inc
mov
mov
mov
mov
rcrb
dec
lcall
sub
pop
int3
mov
or
dec
push
and
or
aas
sub
scas
xor
cmp
xor
int
in
push
pushf
mov
call
push
mov
mov
mov
sbb
jnp
cwtl
sub
mov
mov
sub
cmpsl
mov
inc
ja
int
mov
inc
and
pop
repz
push
or
jo
lret
and
xchg
push
mov
imul
loop
xor
and
mov
and
or
mov
jl
out
sub
adc
jns
jecxz
sbb
enter
add
icebp
mov
and
inc
mov
xor
mov
adc
mov
test
insl
or
cmp
sbb
imul
cwtl
mov
pop
into
rclb
dec
cwtl
pop
add
xchg
mov
pop
pushf
outsl
fidivl
test
push
mov
cmp
insb
test
aam
mov
jg
mov
bound
mov
das
adc
mov
inc
lds
andb
mov
idivb
cli
shll
pusha
aad
fwait
ret
jg
cmp
es
imul
push
push
bnd
or
repz
shll
mov
inc
push
and
and
mov
clc
nop
push
rolb
sub
jne
loop
xchg
fisttpll
loopne
lods
jge
add
nop
imul
sub
sub
push
cli
ja
mov
xor
ss
test
leave
fsubs
mov
aad
push
aas
enter
add
mov
mov
loopne
shr
cltd
jmp
outsl
sahf
dec
mov
lock
mov
popf
or
cmp
xchg
lret
push
mov
outsb
lods
insb
int3
xlat
mov
arpl
pop
cmpsl
lea
xchg
pop
jbe
lea
jmp
cli
jbe
scas
push
ljmp
gs
stos
out
outsb
xor
push
pop
popf
push
push
adc
repz
jge
xchg
and
mov
or
out
pop
leave
xchg
xchg
lea
add
cmp
insb
jnp
sbb
mov
push
pop
pop
pop
lock
lcall
jno
test
int
icebp
ja
add
in
push
nop
mov
or
ss
jg
repz
xchg
add
dec
mov
ret
dec
sbb
mov
lock
popa
sbb
sub
fisubs
adc
inc
inc
cmp
cmpb
out
push
inc
loopne
out
mov
dec
repnz
cmpsb
lahf
pop
les
pop
mov
cld
xchg
rcr
call
cmc
sub
loop
push
adc
xchg
jmp
sub
pop
faddl
clc
cmp
add
sbb
lret
add
test
mov
jmp
and
pop
js
pop
and
mov
ja
nop
push
shlb
adc
pushf
and
and
pop
xchg
loope
aaa
call
and
mov
std
es
es
insb
pop
mov
int
sub
and
pop
jp
hlt
mov
imul
les
sbb
xchg
ret
or
adc
js
test
jae
dec
jb
cmpsb
sbb
dec
cmp
clc
cli
out
jl
out
sub
mov
out
push
dec
aam
push
add
pop
push
mov
adc
insl
mov
dec
aas
outsb
mov
mov
dec
dec
dec
adc
fisubrs
mov
mov
adc
orl
dec
inc
or
mov
dec
adc
pop
lods
mov
shl
lret
int
fildll
outsl
and
les
fsubs
jae
push
cmp
movsb
cmp
or
cmp
jo
mov
push
arpl
daa
cmpsb
in
cmp
mov
sub
lods
pushf
mov
adcl
shrl
cmp
add
cmc
into
push
xchg
jo
cli
push
dec
push
repz
cltd
mov
xor
jle
out
mov
add
aas
int3
adc
cs
pop
out
insb
sbb
adc
sbb
sub
loopne
cltd
jle
mov
mov
movsb
jo
xor
and
jge
adc
ds
lods
inc
jbe
nop
pop
fdivrl
and
je
xchg
mov
imull
or
add
aad
inc
insl
loope
mov
iret
fstps
fs
sub
dec
or
gs
xchg
cmp
push
adc
stos
in
mov
sahf
shlb
pushf
mov
push
lret
xchg
fsubr
push
mov
out
add
adc
mov
jg
cmpsb
stos
jge
fisttpll
mov
sbb
test
xor
sbb
push
insb
ljmp
add
mov
inc
incb
mov
rcll
cld
push
arpl
rolb
mov
xlat
xchg
add
xchg
mov
or
in
xchg
mov
add
jb
sbb
and
into
add
cmp
jae
push
jmp
ss
mov
out
fstps
jnp
dec
inc
fiaddl
or
lods
or
or
jecxz
add
xlat
je
mov
outsb
js
and
lods
mov
fwait
jp
lock
adc
jecxz
hlt
xor
ficomps
inc
add
daa
jmp
mov
push
adc
pop
mov
sub
pop
mov
or
jmp
add
mov
out
cmp
fistpll
popa
cmp
pop
and
push
inc
mov
fildll
cmpsb
push
ret
insl
add
cld
int3
int
xlat
add
cmp
inc
push
pushf
mov
ljmp
mov
lods
jp
jno
sarb
pop
out
cltd
ss
xchg
clc
jnp
rcll
mov
dec
jg
icebp
pop
or
mov
mov
mov
lods
ja
jp
insl
pop
xor
mov
fildl
sar
xchg
mov
mov
xor
xor
cmp
mov
push
xor
aaa
js
sti
lock
scas
jb
in
mov
cmp
mov
jne
mov
into
movb
inc
sub
fisttpl
mov
mov
je
sub
sahf
mov
ja
ss
mov
testl
ss
and
dec
iret
or
jne
push
icebp
call
jp
das
dec
in
rcr
jmp
adc
mov
into
mov
test
or
sub
sub
mov
ljmp
jecxz
push
pop
jo
lret
sub
cmp
xchg
push
repnz
pop
mov
adc
fsts
cmc
ds
into
sbb
outsb
fstpl
pusha
mov
leave
imul
or
jns
dec
stc
dec
mov
inc
push
add
aam
cmpsb
cltd
adc
pop
sub
push
fnstcw
in
fiaddl
adc
sbb
dec
sbb
mov
push
sub
lret
pop
and
mov
mov
xor
mov
xchg
int
lods
jge
cmp
jle
pop
clc
lods
xchg
ret
fadds
pusha
adc
and
cs
insb
jb
jno
or
ror
dec
into
push
sbb
mov
fbld
test
sbb
test
sub
mov
or
fcoms
in
lds
scas
adc
mov
daa
lret
dec
out
mov
mov
inc
fcomps
addb
bound
dec
es
mov
dec
lahf
push
insl
dec
scas
and
and
cmp
idivl
mov
cmp
iret
mov
out
mov
jmp
push
pop
out
and
ficompl
gs
mov
dec
das
lahf
jge
insb
add
imul
leave
jp
pop
dec
addb
jg
jecxz
sub
jge
repnz
leave
icebp
ljmp
lods
in
lcall
repnz
pop
dec
dec
imul
lahf
push
xor
push
push
mov
adc
mov
and
or
pop
pop
mov
mov
dec
bound
out
jl
fnstenv
jbe
jne
cld
ret
shrl
lahf
out
test
mov
mov
jle
je
cmp
push
mov
mov
mulb
ljmp
ss
inc
stos
mov
xor
testb
jl
inc
es
cld
jle
fsubr
and
stc
xor
mov
andl
scas
in
xor
test
ret
out
jg
xor
ret
loop
fbstp
ljmp
pop
test
adc
in
or
roll
inc
test
cli
shlb
sub
cmp
lcall
lret
inc
dec
lcall
or
inc
je
inc
add
inc
mov
adc
xor
in
push
imul
fidivl
jle
and
cmp
pop
pop
xchg
and
jle
clc
imul
mov
pop
pop
mov
mov
cwtl
jne
punpcklbw
jmp
int3
mov
xchg
fisubrl
outsl
fidivrl
mov
sub
movsb
clc
inc
repz
push
inc
adc
dec
cmp
popa
sub
xor
dec
push
xchg
or
mov
push
cli
rcrw
test
and
cltd
add
mov
int3
insl
scas
xor
cmp
dec
add
out
adc
inc
cli
sbb
arpl
bound
hlt
fstps
xlat
paddd
popa
xchg
and
xor
data16
xchg
sub
sti
int3
clc
pusha
jo
lods
cs
mov
inc
dec
xchg
push
outsl
cmp
fldt
pop
push
jge
sub
stos
fcompl
inc
test
scas
ja
fildl
in
data16
int
pop
daa
dec
shlb
das
outsb
and
push
xor
outsl
push
add
fmul
imul
xor
clc
push
int
enter
mov
mov
mov
incb
xchg
mov
aaa
push
dec
cmpl
cltd
and
stos
dec
lret
sub
inc
bound
push
or
loopne
jno
sub
cmp
inc
jns
pop
in
enter
dec
mov
xchg
xor
xor
push
cmp
jmp
jl
in
sti
stos
addr16
xchg
scas
add
pop
dec
iret
sbb
mov
shrb
jge
test
mov
fcoml
out
addr16
or
sahf
sbb
shr
cmp
pusha
shl
push
div
dec
mov
mov
mov
sbb
pusha
and
sub
mov
sub
adc
mov
jecxz
mov
and
push
push
pop
xor
jmp
loopne
mov
pop
jb
repz
or
leave
arpl
lcall
popa
inc
dec
lea
mov
add
js
jecxz
enter
xchg
imul
lret
loope
add
andl
repnz
or
cmp
mov
or
xor
push
push
cli
lret
mov
lahf
lahf
adc
roll
mov
jp
sub
mov
leave
jno
push
push
pop
insl
test
sub
outsl
xchg
enter
aam
lahf
push
add
push
pop
ja
xor
loop
mov
iret
jl
inc
jp
pop
gs
andb
or
sub
or
pop
outsb
shll
jnp
call
sub
gs
fldl
outsb
call
sarl
pop
push
pop
push
cmp
or
cmp
sub
shrl
adc
ds
shrb
adc
js
loopne
dec
lahf
scas
in
mov
test
test
out
jo
and
jge
mov
pop
dec
mov
les
in
cltd
lea
hlt
jne
push
fldcw
jnp
cli
sbb
stos
xor
scas
pop
pop
push
dec
daa
mov
jecxz
movsb
xlat
stos
pop
lds
add
add
sti
mov
test
in
dec
xchg
sbb
push
daa
jnp
mov
cmpl
mov
cli
leave
sbb
icebp
lcall
int
xchg
add
rcrl
cmc
das
mov
sbb
aad
and
push
out
testl
or
mov
dec
mov
inc
adc
add
loopne
loope
in
mov
adc
cmp
roll
shlb
fstps
repz
orb
xchg
jmp
ljmp
jecxz
sbb
test
mov
sahf
xchg
in
mov
arpl
push
mov
cmp
push
inc
mov
cs
inc
int3
hlt
cmpsb
mov
push
test
mov
and
sbbb
int
loopne
ret
daa
jecxz
data16
pushf
jg
mov
rcrl
mov
and
adc
or
dec
push
and
popf
test
push
faddl
fs
fnsave
in
in
inc
or
and
in
cld
mull
push
lret
cmp
mov
out
push
aam
fiaddl
fwait
dec
mov
pop
rclb
lahf
dec
sarl
mov
aad
int
adc
loop
out
lods
push
pop
call
mov
loope
adc
xchg
daa
addr16
das
mov
xlat
aas
jmp
js
sahf
int3
or
xor
mov
icebp
mov
iret
ss
aam
cmc
push
or
std
bnd
lods
cs
rorb
add
sub
inc
or
aam
inc
sbb
fldenv
cmp
push
ja
pop
out
in
mov
xor
xor
dec
fwait
jmp
adc
imul
mov
cwtl
push
xor
inc
mov
enter
rcr
cwtl
adc
xchg
popf
fstpl
fs
xlat
fimull
cmp
jge
inc
fwait
dec
lret
in
stos
repz
dec
mov
jp
dec
out
outsl
rcrl
jae
or
sub
repnz
fsubrs
inc
push
ds
ret
loopne
rcrl
les
jg
jecxz
out
push
enter
daa
icebp
pop
cltd
or
sti
push
add
into
repnz
mov
insl
pop
jnp
sbb
out
les
pop
push
leave
or
fwait
and
mov
movsl
sbb
outsl
scas
fcomps
push
repnz
pushf
data16
mov
stos
or
mov
std
xchg
popf
sti
fimuls
aam
nop
nop
ret
or
mov
sub
add
rcll
fs
call
sub
in
mov
mov
cmpsl
mov
adcl
cld
xor
adc
mov
xor
xor
sub
push
ficompl
imul
and
push
xchg
andl
sub
ficoml
lds
movsb
aam
and
add
fldt
push
dec
in
and
sti
roll
cmc
fstpt
push
mov
outsb
mov
andb
and
jg
sbb
mov
xlat
inc
pop
les
ret
pop
faddl
clc
cmpb
lcall
insl
rcrl
sub
aad
xlat
into
outsw
mov
xchg
gs
inc
addl
mov
and
mov
cs
movsb
mov
or
jmp
movsl
fsubs
or
lea
mov
fwait
hlt
sahf
sub
mull
lods
mov
imul
shll
jne
dec
xchg
sub
aas
stos
stc
pop
adc
mov
dec
pop
push
lret
inc
push
jae
lods
fstl
nop
mov
cmp
push
sbb
out
fiaddl
pop
mov
jb
cwtl
movsb
btr
push
xchg
pusha
pop
sahf
mov
mov
mov
rolb
jb
jb
adc
mov
or
jae
mov
pushf
inc
add
add
dec
lret
outsb
or
pop
pop
outsb
xchg
fnsave
fcoml
jnp
aaa
out
sub
dec
mov
in
jns
gs
jge
xor
and
shlb
je,pt
mov
outsl
xor
dec
stos
mov
dec
adc
xchg
push
pop
push
or
sub
dec
aaa
in
pop
xchg
enter
sub
out
jmp
shrl
lcall
dec
insl
imul
ret
jle
pop
or
pop
sbb
stc
and
sbb
dec
sbb
lods
cmp
enter
retw
xchg
sbb
push
push
aad
insl
xchg
jb
push
loope
std
jae
push
and
mov
pop
inc
loope
add
adc
jnp
pop
mov
add
and
add
push
into
stc
lds
popf
push
push
aad
andb
or
sub
jo
cld
les
mov
out
add
or
xchg
in
inc
mov
inc
pusha
imul
into
xchg
subb
mov
loopne
pop
or
sti
jo
das
jge
mov
lret
jb
xchg
out
ret
jne
lcall
inc
mov
pop
sbb
adc
xchg
into
mov
mov
insl
outsb
mov
test
mov
js
fs
andl
popf
adc
jb
data16
jge
dec
std
mov
out
mov
ret
push
das
mov
jb
sub
sbb
repnz
stos
fnstsw
xchg
iret
cli
dec
fmuls
scas
test
mov
stc
pop
jnp
inc
pop
or
xchg
call
jg
add
fdivl
inc
push
push
dec
dec
inc
xchg
mov
ljmp
rorb
daa
aaa
orl
fwait
xor
frstor
xchg
inc
fs
sbb
push
arpl
sti
cmp
icebp
sti
cmp
jb
push
loopne
dec
mov
gs
in
inc
fs
mov
sub
xchg
rcrl
lret
test
stos
das
sbb
fsub
pop
xchg
mov
and
lret
mov
xor
cmp
outsl
push
daa
ret
test
aam
xchg
out
adc
fidivrs
mov
mov
and
cmp
imul
push
adc
mov
sbb
jp
insb
mov
mov
outsb
les
mov
cmp
mov
orb
repnz
rcr
or
pop
in
pop
pop
adc
notl
mov
jo
in
ficoms
sbb
mov
mov
fnstsw
shll
outsb
movsb
mov
je
pop
inc
mov
fldcw
xchg
add
xchg
orl
sub
insl
lea
xor
pop
ficoms
cltd
xchg
orl
mov
xor
movsl
sbb
sarl
je
cmp
inc
xchg
xor
jecxz
imul
int
cwtl
dec
cmpsb
sti
je
and
add
imul
mov
pop
inc
or
mov
aad
std
movsl
cmp
pop
pop
scas
jle
movsl
sub
jecxz
ret
jg
push
rclb
out
or
mov
push
stos
pop
dec
sbb
hlt
mov
cltd
inc
push
jle
sbb
sbb
push
aam
mov
pandn
je
pushf
sub
xor
mov
repz
xchg
lcall
sub
addr16
xchg
in
je
test
aad
push
inc
nop
ljmp
or
or
mov
adc
pop
cmp
ja
jg
outsb
addb
icebp
xchg
test
sub
adc
pop
lcall
lods
or
sahf
push
loope
sub
ljmp
fwait
addl
data16
repnz
adc
push
jl
push
in
mov
dec
adc
add
pop
mov
loope
test
mov
pop
pushf
xchg
xchg
lret
adc
jnp
sbb
and
daa
insb
jl
fstpt
orb
ret
pop
lret
cli
cmp
sub
cmpsl
and
or
repnz
test
je
movsl
ja
fdivrp
lds
rcll
orb
cld
jnp
sub
sbb
add
sub
pop
das
xchg
roll
movsl
repnz
inc
adc
sahf
inc
jmp
xor
pop
int
mul
adc
dec
int3
xchg
repz
int
ljmp
xor
das
out
ljmp
std
pop
stos
push
xchg
repnz
orb
enter
push
stc
dec
sbb
ss
sti
rcl
inc
popf
mov
inc
mov
push
mov
scas
cmc
cmc
mov
adcb
ret
enter
mov
inc
xchg
and
add
inc
mov
call
dec
lds
pusha
mov
test
inc
mov
dec
inc
ljmp
fsubrl
notb
fisttpl
pop
stos
xchg
xlat
mov
sbb
jl
add
ss
or
jle
int
popf
inc
cmp
inc
int
sbb
idivl
outsw
xchg
pop
int
fiaddl
add
dec
inc
mov
fadd
dec
ror
mov
cmpsb
sub
cmpl
cmc
popa
gs
ja
jb
repz
daa
xchg
xchg
movsb
mov
and
lret
xchg
rorl
ja
arpl
insb
sbb
cmpsb
dec
jge
and
out
insl
or
cmp
inc
sub
repnz
lcall
or
push
aam
pop
mov
test
adc
xor
cmpsl
xchg
inc
call
mov
ror
sbb
lock
jbe
mov
cmp
mov
hlt
loopne
cmp
mov
sbb
cmc
and
test
test
jge
aad
popa
mov
les
sub
lahf
js
or
jle
test
fisubrl
pushf
ljmp
iret
insl
mov
out
fldln2
or
enter
jne
adc
lret
xlat
sahf
xchg
or
clc
fcmovb
rorl
shlb
push
mov
xchg
lods
loope
mov
adc
jl
in
dec
imul
mov
call
sahf
xor
aas
outsb
cwtl
cmp
push
push
add
scas
mov
iret
insl
adc
movsb
lcall
and
flds
rolb
mov
stc
hlt
leave
fisttpll
insl
push
push
jge
loope
or
sarb
scas
dec
xor
xor
cs
inc
scas
cmp
sub
in
aas
out
or
sti
pmulhuw
xchg
filds
cmpsb
xor
imul
lods
cmp
or
lret
or
test
and
or
dec
shlb
inc
nop
xor
mov
dec
mov
int3
dec
cmovg
push
arpl
dec
fdivrl
ss
push
jecxz
mov
lds
sbb
pop
xchg
cmp
mov
adc
or
fstp
lret
push
scas
into
push
mov
scas
mov
negb
enter
mov
inc
sbb
push
loopne
scas
bound
xor
int3
fxch
imul
push
dec
sub
and
add
arpl
daa
ja
push
pop
loop
and
xlat
lahf
jo
fisubs
mov
jne
ficomps
dec
xor
cltd
lahf
fisttpl
out
inc
repnz
lods
je
cmp
push
xchg
inc
inc
pop
aad
pop
repz
sub
push
sub
sti
out
mov
sbb
pop
sbb
sbb
lock
dec
mov
xchg
aad
push
leave
lods
imul
pushf
mov
cld
dec
iret
dec
add
scas
cmp
std
push
popa
sbb
insb
xor
js
adc
add
push
lret
fsub
std
and
pop
movntq
push
adc
stos
jnp
inc
fidivrl
mov
push
cmp
fcmovnbe
sub
xchg
adc
and
adc
lea
adc
dec
outsl
and
lea
add
mov
add
cmpsl
sti
dec
mov
mov
fmul
pop
jmp
push
fistl
add
test
adc
lock
add
in
xlat
mov
push
push
ret
testl
mov
iret
ret
mov
push
mov
mov
fdivr
and
mov
sti
inc
cwtl
add
mov
mulb
lret
andb
xchg
insl
cmpl
mov
lods
mov
mov
cmp
aas
mov
jno
or
mov
sarb
jnp
orb
adc
fwait
outsl
mov
aam
xor
dec
push
cmp
cwtl
addr16
cwtl
or
xchg
call
mov
push
fmulp
dec
mov
pop
les
popa
adc
popf
pop
push
ja
jbe
cmp
dec
imul
das
inc
mov
sub
pop
fcomps
mov
xchg
adc
addr16
cs
pop
push
cmp
out
pusha
les
jmp
jg
dec
push
push
jne
cmp
stos
adc
jge
jne
lds
jle
adc
adc
adc
xor
addr16
mov
test
cmp
mov
into
mov
in
jle
and
adc
ja
loop,pt
jbe
adc
mov
inc
jle
fmull
sbb
inc
mov
aad
flds
loope
sbb
sbb
test
ss
xor
outsb
push
cmpsb
or
cmp
in
sbb
add
pop
mov
pop
xchg
jne
adc
lcall
jp
jns
push
out
inc
and
inc
leave
mov
push
cmp
push
pop
xor
ror
mov
push
jl
fdiv
or
mov
cmpsb
ja
fldt
mov
hlt
insl
es
mov
and
addb
cmc
aaa
inc
pusha
adc
xchg
adc
cli
sbb
divl
stos
inc
push
pop
pop
rcrl
mov
fldt
pop
cmp
clc
xchg
push
cli
pop
xor
jne
cmc
pop
mov
pop
pop
stos
adc
loope
test
lahf
int
dec
fsubrs
mov
xchg
ror
xchg
stos
sbb
and
or
pop
cs
dec
rcr
imul
jb
lahf
mov
ja
movsb
fs
int3
cmp
jg
fcmove
addb
or
imul
add
repz
testb
cmp
dec
in
sbb
sbb
lea
sub
mov
jl
push
and
add
cmp
fildll
loop
add
scas
stos
data16
add
jmp
cld
mov
ljmp
scas
jnp
aad
lea
add
orl
xor
xchg
mov
andl
pop
negb
loope
dec
scas
or
stc
pop
jb
pop
popa
fdivrs
jl
imul
loopne
mov
fstps
cwtl
jne
lret
mov
sub
pop
int
pop
xor
inc
xchg
sbb
mov
fidivs
sub
shl
sbb
jp
ss
and
xchg
and
stos
adc
jnp
dec
jae
mov
pop
jl
add
sti
mov
pushf
out
fwait
js
sbb
out
stc
cwtl
lahf
or
insl
lcall
xor
fwait
jp
and
xor
sti
mov
cwtl
shlb
pushf
add
cli
add
mov
enter
fcomps
push
add
jns
sub
lock
or
inc
lea
inc
mov
or
popl
rcrl
xor
stos
enter
popa
lret
cmp
lret
sti
jecxz
les
adc
ss
in
add
fisttps
pop
or
mov
push
sbb
or
je
mov
mov
iret
les
aas
cs
cltd
jl
loop
pushf
hlt
sub
jbe
insb
push
dec
and
mov
call
cli
mov
stos
pusha
push
jmp
add
mov
sbbl
mov
decb
dec
inc
loope
stc
jo
push
and
mov
xor
cmp
adc
lods
lods
mov
add
pushf
sbb
push
sbb
ret
cli
inc
jnp
mov
push
movsb
xchg
fisubrl
mov
lods
xchg
movsl
and
mov
and
adc
movsl
das
cmpsl
mov
sub
mov
mov
inc
push
lds
loopne
fistps
inc
daa
mov
mov
xchg
int
adc
in
xor
mov
and
jns
test
out
pusha
repnz
xchg
call
mov
jle
pop
lret
pusha
add
push
mov
xchg
mov
cld
imul
rorb
push
pop
fcomps
lds
jecxz
sahf
pushf
mov
pop
dec
xchg
pop
jbe
hlt
lret
dec
out
pop
xor
stc
xor
dec
jg
in
call
push
add
inc
call
test
xchg
mov
xchg
mov
imul
xchg
mov
adc
jo
ja
shr
fwait
pop
push
inc
fbstp
jae
daa
lds
dec
stc
fists
sbb
cltd
cltd
xchg
sbb
pop
cmpsb
jne
bound
ss
sahf
shlb
in
push
sbb
fwait
sub
in
jnp
mov
sub
shrb
push
das
ret
test
lods
scas
stos
cld
xor
add
popf
cmpsb
and
jmp
stc
pop
push
push
adc
bound
push
sub
jb
cmp
jno
ds
sbb
lret
loop
inc
pop
dec
loope
ret
in
int3
mov
fwait
lock
stos
inc
xor
dec
dec
sti
mov
add
incl
lcall
insb
data16
call
xchg
dec
ss
pop
loop
dec
fsubr
adc
add
mov
loop
sub
sbb
inc
leave
scas
add
aam
cld
pusha
and
adcb
push
in
data16
notb
mov
mov
aad
gs
xor
add
xor
cmp
test
out
icebp
adc
test
inc
loop
loope
imul
repz
fs
adc
mov
dec
mov
popf
insb
movsl
popf
xchg
xor
xchg
aas
and
rol
in
mov
in
test
dec
bound
lahf
cmp
dec
jnp
int
mov
mov
push
adcb
dec
popf
movsb
lret
or
or
jl
lods
cmp
clc
mov
jl
leave
cmpsb
out
sti
mov
fwait
loop
mov
inc
fwait
or
mov
lcall
xchg
in
mov
out
dec
mov
cmpsl
imul
adc
mov
fwait
sti
mull
jo
sub
jg
add
push
mov
dec
inc
adc
out
fs
cmpsl
inc
test
inc
mov
xchg
xlat
sbb
jns
repz
jnp
jno
dec
xchg
ret
xchg
adc
insb
mov
pop
mov
mov
fistl
shl
imul
vmovaps
push
push
sbb
xchg
xchg
mov
fwait
lcall
add
push
add
push
lods
jecxz
clc
int
jns
outsb
lods
or
or
pop
and
mov
aad
pop
fsts
iret
adc
xchg
mov
cmp
gs
loop
dec
dec
lahf
in
leave
outsb
daa
pop
in
sbbb
dec
sahf
add
std
adc
and
dec
jbe
xor
xor
stos
into
decl
pop
mov
xchg
cmpsl
pop
cmpsb
fwait
mov
jns
aam
stc
fucomp
dec
add
add
lods
xchg
aas
rorl
adc
aaa
sub
ds
movsl
mov
int3
jp
mov
push
xor
test
dec
add
sub
outsb
mov
mov
test
sti
pop
fistl
fsubs
pushf
add
fildll
sti
add
ret
ret
pop
jecxz
bound
sti
js
jge
inc
jge
add
mov
sub
scas
aam
or
fbstp
jge
xchg
xchg
push
adc
mov
lods
adc
shlb
inc
xor
xlat
fldl
seto
xor
mov
pop
sub
not
mov
push
sub
jo
inc
xchg
out
inc
cmovl
in
mov
sti
inc
adc
mov
sbb
jge
es
xor
vpaddsw
stos
push
das
xchg
mov
cld
movsb
sbb
xor
lea
inc
jae
movsl
dec
dec
popf
dec
sahf
push
push
ret
push
ret
sub
lods
test
jmp
dec
pop
fcoms
popa
in
mov
adc
cmpsb
xchg
insb
adc
and
push
ljmp
call
clc
std
mov
or
inc
and
push
je
push
stos
aaa
or
and
hlt
movsl
cmp
popa
xor
pop
daa
mov
push
add
mov
in
into
scas
mov
mov
and
ss
lea
fisttpl
add
push
adc
aad
cmp
jge
jp
rolb
xor
xchg
mov
in
xlat
mov
into
hlt
jle
fstl
cmp
or
sub
stc
add
ret
mov
fwait
out
ljmp
mov
mov
fstp
sub
sahf
sarb
push
mov
inc
stos
xor
neg
push
mov
xchg
push
mov
clc
adc
sti
scas
loope
mov
lahf
repnz
add
jl
xchg
cmc
mov
enter
push
push
inc
mov
sbb
orl
add
jns
push
pop
mov
subl
adc
and
pop
sahf
mov
pop
test
sahf
shrb
xlat
mov
sbb
push
or
xor
jb
cmp
sti
xor
call
push
mov
int
xchg
lret
mov
mov
mov
clc
in
dec
repnz
cmp
xor
pop
iret
xchg
lock
rcr
aaa
lea
fdiv
push
fisttpll
cltd
sahf
dec
inc
lahf
popa
sti
cld
hlt
mov
lds
dec
shl
xor
leave
cltd
mov
aam
dec
rcr
data16
jno
in
or
out
mov
repz
jg
pop
mov
loope
xchg
pop
mov
mov
pop
pop
add
mov
dec
ret
sbb
std
mov
mov
jae
lcall
inc
xor
sub
mov
mov
dec
popf
pop
mov
cs
pop
stos
xlat
push
dec
sbb
pop
dec
push
sub
add
in
aam
mov
incl
jl
xor
test
data16
movl
mov
clc
mov
setle
sub
test
fmull
icebp
dec
sub
xchg
sub
jge
daa
lcall
and
stos
inc
ljmp
icebp
imul
sbb
or
in
mov
ja
loopne
jmp
xchg
in
js
cltd
mov
jbe
dec
mov
mov
mov
sub
fsubr
lret
mov
jae
in
rclb
jbe
sub
sar
mov
pop
jne
int
mov
dec
xchg
and
repz
mov
mov
mov
arpl
sbb
pusha
es
lea
scas
push
adc
add
lahf
xor
hlt
dec
lock
push
and
cld
inc
sahf
add
js
leave
jl
outsb
enter
pusha
jge
jb
add
addr16
jns
aas
popa
out
push
jg
ds
jns
clc
stos
and
popa
xchg
inc
das
mov
pop
xchg
out
xchg
loope
rcll
and
mov
icebp
push
call
jge
out
movsb
incl
imul
popf
test
push
xor
iret
jecxz
cmp
lock
jecxz
pop
lock
mov
and
pusha
in
in
push
mov
mov
add
into
mov
test
loopne
mov
stos
imul
jmp
push
xor
jge
xchg
stc
pop
mov
and
inc
loopne
push
and
or
aam
cld
and
notb
idivb
aad
mov
mov
jae
lret
ja
mov
sbb
or
cmp
cmc
adc
pop
idivl
sar
and
and
push
lret
mov
mov
loopne
and
dec
dec
pop
sub
loope
and
pop
into
adc
inc
xor
mov
dec
in
pop
pop
cmpsb
push
data16
int
xlat
test
mov
filds
mov
mov
gs
lods
stos
and
ret
or
xchg
sub
in
xchg
outsl
push
cmpsl
xchg
movsl
test
aam
sub
xchg
push
into
sub
movsb
add
push
xor
xchg
data16
and
add
inc
pop
cmpsb
or
je
mov
cld
data16
cwtl
inc
hlt
sub
into
repnz
adc
mov
adc
ds
pusha
adc
xlat
sub
enter
xor
bound
adc
fiadds
or
imul
and
jb
sbb
ret
aad
mov
mov
inc
mov
lds
filds
je
mov
jbe
hlt
jbe
rcll
dec
sub
push
ret
push
mull
es
xchg
movsl
xor
test
hlt
nop
pop
xor
jae
push
test
xor
mov
in
xor
xor
cmp
sbb
cmp
enter
jns
ret
add
movsb
mov
lret
scas
loopne
mov
divps
les
lcall
cltd
scas
jb
js
dec
mov
jbe
mov
rcll
es
jbe
sub
lahf
inc
jg
addb
pop
aas
into
pop
jno
dec
adc
sub
mov
jae
je
scas
add
mov
clc
mov
push
in
out
lahf
mov
pop
test
pop
mov
subl
imul
subl
cmpsb
pop
cmp
outsl
or
push
push
push
jae
nop
lock
lea
and
mov
cmp
aas
in
jg
jo
push
sub
jns
seta
ja
sub
mov
iret
lret
cmp
inc
cmpl
loop
adc
loope
shlb
mov
mov
mov
jbe
jl
int
sub
iret
cmpsb
flds
ret
fmuls
mov
cld
fisttps
shlb
lods
in
iret
jnp
int3
outsb
or
repz
jae
les
jno
sarl
bnd
xor
popf
or
and
xchg
in
pushf
add
ljmp
out
adc
rcl
sbb
orb
xor
scas
dec
lret
xchg
lods
push
mov
add
push
mov
adc
xor
adc
add
testb
in
sub
jnp
or
fmull
andb
pop
jbe
add
dec
mov
jle
filds
pop
movsl
arpl
or
mov
leave
or
in
xchg
dec
dec
pop
std
sbbl
loopne
cmp
cmp
xchg
jnp
aad
setb
fyl2xp1
lea
fidivrs
lret
mov
or
pop
das
ret
mov
shlb
adc
inc
bound
ret
pop
dec
push
imul
aas
inc
into
pop
repnz
outsb
sbb
push
dec
xor
cmc
notl
jno
inc
add
cmp
cmc
ret
insl
in
cmp
lret
xor
or
lock
dec
dec
inc
mov
into
push
into
cmp
jb
scas
push
mov
in
repz
jnp
dec
push
cmc
jmp
cmp
or
xchg
int
test
mov
rorl
jb
xchg
scas
pushf
aas
jb
xor
mov
sub
fildl
cmp
xlat
adc
push
ret
clc
xchg
adc
popf
cmpsl
lahf
pop
jle
mov
jp
fs
dec
outsl
and
cmovnp
and
add
jle
lods
imul
fcmovbe
pushf
mov
dec
xorl
ja
fbld
push
and
xlat
int3
sbb
lods
xor
pushf
sub
sub
loope
or
div
xchg
repz
or
mov
fisttpll
aad
popf
iret
dec
sti
jae
out
xchg
push
push
scas
dec
outsb
lods
sub
push
inc
gs
mov
dec
mov
mov
cmp
add
insb
sub
jg
icebp
mov
js
push
daa
mov
sbb
xchg
rorb
scas
add
movsl
mov
fmuls
pop
xchg
push
add
into
pusha
or
loopne
sbb
repz
sub
adc
outsl
xor
sahf
in
mov
cli
adc
cmp
jb
mov
fistpll
nop
mov
push
mov
ss
out
adc
push
dec
aam
lods
push
sbb
adc
ljmp
outsl
popa
jae
mov
xchg
iret
clc
fisttpl
xor
xchg
cmc
movsb
shlb
pop
inc
pop
pop
cld
mov
fisttpl
dec
pop
push
mov
sahf
out
fnstsw
pop
pop
lret
je
xor
int
cmc
ljmp
xor
pushf
pop
repz
xor
mov
repz
insl
repnz
sub
loop
js
jle
popf
shl
push
sub
xchg
sbb
xchg
bound
loopne
shlb
outsb
outsl
sbb
sub
mov
clc
getsec
dec
lods
sub
fsubl
mov
and
push
pop
or
jge
lret
ja
jl
fstl
jo
jo
xchg
jl
lcall
adc
pop
xlat
fcmovu
jb
gs
jo
aad
cmc
or
jbe
cmp
test
push
in
ret
mov
pushl
mov
pop
sbb
jge
dec
test
test
rcll
pop
dec
mul
xchg
nop
push
shlb
mov
add
push
enter
adc
inc
gs
dec
add
popf
jo
cltd
pop
pop
adc
push
inc
sbb
lock
loopne
inc
pushaw
cs
stos
popa
xchg
jno
mov
loope
popa
ret
loop
aaa
dec
popf
ret
cmp
pop
and
mov
and
ljmp
lods
jecxz
mov
loope
insb
inc
dec
cmp
cmp
dec
add
push
xchg
gs
push
lds
rdpmc
or
jp
cmpsl
je
shlb
sarl
mov
dec
xchg
iret
leave
inc
ljmp
xchg
pop
cmp
test
jbe
test
jae
mov
push
cmpl
das
sub
repz
sbb
dec
pop
xor
mov
mov
sbb
sub
outsl
aad
pop
js
daa
dec
sub
arpl
in
fs
pusha
out
enter
fmul
push
push
ret
and
pop
push
push
dec
or
cmp
mov
jae
lock
inc
pcmpeqw
out
xchg
sarb
fistl
movsb
adc
pop
out
and
lea
sti
xchg
stc
push
adc
dec
pop
mov
push
sbb
hlt
ljmp
clc
mov
jb
and
add
xchg
or
pop
cltd
adc
sbb
in
lret
mov
addr16
inc
es
popf
push
mov
data16
push
lret
mov
mov
test
sbb
push
outsb
pushf
push
cmp
sub
fs
loop
in
sbb
test
ja
clc
push
jle
stc
dec
push
mov
ds
fmul
cmp
add
cmpsl
cmpsb
and
mov
mov
jns
jle
or
dec
mov
pop
clc
sub
dec
cmp
sub
dec
sub
cmp
or
cmpsb
ficoms
mov
rcl
mov
mov
loop
cmp
out
cs
and
adc
in
outsb
addl
mov
adc
mov
testb
push
jb
movsb
inc
cmp
divl
xchg
pop
mov
jb
cmp
ret
mov
shll
mov
adc
subb
stos
outsl
dec
jb
add
cmp
stos
sti
xchg
mov
xchg
shl
sub
adc
stc
adc
sbb
pop
xchg
fists
in
adc
ret
xorl
jmp
cmp
fcoml
fistl
push
rcrb
sti
xor
test
mov
mov
not
dec
outsl
adc
fstl
and
dec
mov
cld
js
adc
rcrb
popf
add
and
out
sub
or
sub
push
aas
inc
and
xor
idivb
dec
fwait
xor
mov
jb
dec
je
insl
repz
insb
dec
rclb
dec
leave
pop
xor
jae
jge
lahf
fistpll
jo
dec
pop
dec
aas
mov
adc
push
lock
inc
in
push
repz
in
gs
test
xlat
add
dec
mov
adc
or
dec
test
sub
jmp
push
cmp
mov
and
jge
ficoms
mov
inc
stos
test
push
ja
jmp
les
cmp
push
push
repz
adc
mov
das
mov
rcrl
scas
in
push
xor
mov
out
cwtl
rcrb
rcr
xchg
pop
fdivs
inc
mov
sbb
cs
mov
cld
adc
pop
movl
push
int3
out
jns
hlt
pusha
aaa
jl
pop
xor
and
xchg
sub
jae
stos
stc
daa
jno
sbb
jne
xor
push
xlat
inc
mov
cmp
mov
gs
psubd
shll
pop
sub
push
jp
sub
push
inc
in
lret
jnp
js
fsubrl
dec
fdivrp
mov
jle
push
push
and
loopne
sarb
cmp
std
lea
jl
sub
mov
jge
dec
jmp
cmp
mov
or
cltd
or
in
xchg
jne
mov
fldcw
jns
sbb
xor
jns
les
das
in
cmp
roll
push
scas
adc
xlat
sbb
cmpsl
leave
xorb
jns
jle
arpl
fdivl
popf
std
lea
je
pop
xor
add
arpl
inc
outsl
mov
xor
lock
in
mov
shlb
cld
aas
mov
imul
inc
add
xchg
scas
stos
mov
shll
push
push
inc
xchg
loopne
inc
js
jg
dec
sub
push
lock
pushf
pusha
mov
mov
cmp
xor
aas
mov
adc
mov
push
pop
inc
nop
lods
scas
insb
movsb
scas
push
jl
adc
sub
mov
enter
pop
push
inc
sbb
xor
lahf
xchg
mov
loopne
mov
adc
xchg
adc
enter
jmp
movsl
fbld
sbb
cld
insl
loope
aas
mov
push
adc
scas
mov
fs
daa
scas
jb
xchg
or
sub
stc
cld
popa
xchg
pop
scas
push
sbb
xor
sub
sbb
pop
sub
xchg
push
sub
cmpsl
jecxz
lods
cmp
sbb
subl
dec
rcl
shl
xchg
fidivrl
in
mov
or
cmp
push
scas
imul
push
lock
lock
jmp
ljmp
dec
or
or
rcrl
sub
cmp
ret
movsb
icebp
or
movb
sbb
aas
inc
ret
inc
gs
xor
addr16
xchg
cmp
fmuls
xor
push
dec
push
adc
mov
sahf
push
lods
ljmp
jp
rcrb
push
inc
add
cwtl
push
jae
inc
mov
xorb
cmp
data16
fs
cmp
popa
mov
pop
mov
mov
gs
cmpsl
pop
fsubl
scas
push
dec
xor
pop
add
mov
xor
push
jo
out
jle
inc
inc
jmp
popf
scas
in
jnp
scas
jns
dec
xor
xor
adc
cmp
pop
xchg
andb
jl
push
mov
test
andl
enter
inc
sub
inc
ja
cmc
loopne
add
push
adc
dec
mov
pop
jle
stos
mov
mov
pop
and
and
pop
fwait
cltd
into
pop
inc
and
sti
pop
lods
shll
pop
pop
push
cmp
or
lahf
add
in
stos
movsl
flds
int3
repz
popf
push
les
inc
pusha
or
push
push
clc
sbb
sub
fidivrl
push
test
arpl
pusha
mov
imul
cmp
mov
ljmp
xchg
pop
popa
int
xchg
test
pushf
std
in
add
pop
jae
pop
popl
cmp
ss
das
or
out
lods
imul
cltd
mov
mov
ret
mov
inc
ss
aas
loope
loopne
cs
lods
outsb
rcll
pop
add
push
inc
push
call
push
mov
into
cmp
and
ja
clc
mov
dec
in
cmp
andl
ss
inc
stc
lret
repz
pop
push
test
jbe
adc
test
shl
xor
pop
push
aaa
cmp
jl
fcmovnb
sub
push
das
aad
scas
sub
jecxz
push
xchg
cmp
sub
movsl
orl
dec
lret
mov
add
xchg
outsl
scas
jns
mov
shll
sbb
mov
scas
and
mov
xchg
push
into
rcll
pushf
ror
clc
or
dec
push
and
sub
clc
push
sub
adc
nop
jae
or
scas
cli
or
push
push
stos
mov
push
sbb
mov
test
sbb
jne
fstps
jge
jno
ljmp
dec
fwait
or
dec
mov
mov
inc
add
cmc
and
addr16
pop
arpl
aas
sti
inc
stos
mov
mov
xor
mov
addr16
dec
or
imul
and
cmp
add
nop
or
and
fiadds
xchg
movb
insb
dec
inc
addr16
loop
mov
dec
xchg
add
sbb
mov
cs
push
mov
adc
lahf
xchg
lods
pop
lock
cld
xchg
mov
fimuls
jp
add
sub
or
stc
sbb
int3
and
enter
je
scas
add
jg
movsb
and
push
and
lods
hlt
movsl
cmc
inc
scas
and
sub
int3
ljmp
mov
sbb
nop
fimull
jns
or
xor
lret
push
pop
sbb
mov
mov
add
cmpb
stos
insl
test
xchg
cmp
push
push
jae
push
jb
xchg
loope
inc
sub
sub
ret
jns
mov
nop
jns
test
jnp
adc
add
cmp
mov
push
dec
in
pop
aad
push
push
jae
fiaddl
sub
daa
pop
movsl
lock
sbb
or
inc
and
repnz
or
push
mov
mov
xchg
shrb
mov
cmp
jae
or
push
mov
fdivr
inc
imul
sub
fs
xlat
movsl
or
lds
dec
subl
dec
adc
cld
ja
mov
mov
outsl
cmp
jne
pushf
cmp
fmul
xchg
pop
test
sahf
loope
inc
mov
aas
lock
cwtl
int3
shrb
jne
lret
aad
fistps
imul
loop
hlt
ljmp
addb
or
adc
pop
and
out
mov
jae
inc
outsb
enter
or
outsb
add
fnstcw
cmpsb
loop
add
and
dec
adc
repz
test
cmpsl
or
sbb
pop
sbb
pop
pop
pop
cld
mov
fsubs
ss
popf
fdivl
jmp
ret
push
dec
ror
daa
cmp
pop
ret
aam
sub
test
lods
into
push
mov
and
imul
enter
fbld
push
push
divb
enter
sub
sahf
lock
inc
rcl
out
push
out
ret
adc
dec
xchg
movsl
push
add
or
or
jne
cli
sbb
sbb
mov
lock
loop
and
pop
add
pop
sub
stos
cmpsb
cmpb
and
mov
stos
je
fistl
sbb
pop
adc
test
movsl
pop
pusha
push
pop
lahf
fcomps
adc
dec
pop
scas
push
add
jne
dec
push
jns
mov
fs
lods
inc
cli
mov
inc
xor
fisttpll
adc
aas
adc
or
adc
shlb
mov
outsb
lcall
xor
pop
pop
ret
fnstcw
out
jmp
xchg
cmp
and
shrd
xchg
lahf
mov
cmp
inc
push
xor
test
add
mulb
and
push
mov
cmp
pop
movsb
xchg
push
aam
adc
push
cltd
ret
pop
adc
sbb
fmuls
xchg
in
insb
inc
xor
das
leave
or
cmp
invd
js
ficomps
push
loope
cmpsl
add
idivb
mov
nop
cmp
pop
movq
cmpsb
cmp
or
popa
lock
inc
xor
cmp
jns
in
mov
dec
push
and
inc
mov
fwait
push
mov
jno
xchg
pop
pop
sub
or
sub
stos
push
jo
ds
push
xchg
and
sub
int
pop
jg
test
pusha
dec
mov
cmpsl
and
inc
sbb
dec
sub
jl
sti
es
ret
jns
in
jp
adc
pop
aam
andl
into
inc
push
add
cmp
movsl
loopne
mov
in
or
xor
jmp
sub
mov
test
xor
cmp
movsl
pop
mov
cmpsl
mov
jae
clc
scas
pusha
cmc
sub
mov
mov
imul
sbb
push
sub
mov
idivl
inc
mull
push
xor
jmp
mov
fnstcw
stos
push
in
jno
lret
cmc
jg
ds
dec
iret
nop
sahf
dec
incl
push
lods
sub
loope
xor
jne
push
mov
imul
dec
and
jo
jge
xchg
sbb
dec
mov
das
jno
js
test
ljmp
dec
and
jae
adc
or
cmp
data16
in
popa
jno
and
dec
xchg
pop
xor
testb
xor
cmpsb
pusha
push
mov
mov
lds
jg
fidivrs
mov
fbld
das
insb
lret
std
dec
aad
or
aad
add
aaa
push
jae
in
cmpsl
xor
pusha
jnp
clc
test
pop
and
xchg
das
mov
adc
mov
in
daa
adc
cmpsb
hlt
mov
mov
repz
test
mov
jmp
sarb
add
dec
mov
mov
stc
or
outsb
aaa
fcompl
rcr
sub
xor
ljmp
cmp
rclb
fldt
cmp
sahf
sbb
push
or
cld
lock
mov
mov
or
mov
mov
push
stc
enter
pop
inc
imul
mov
xor
sarl
and
inc
mov
jae
cmp
push
or
enter
mov
lods
outsb
cmp
pusha
xlat
test
in
xchg
adc
xor
rcr
into
inc
cmp
enter
pop
jl
and
lea
negl
push
ds
loope
cmp
mov
xor
fwait
call
inc
xor
insb
xchg
int
clc
push
pop
mov
add
clc
jns
dec
enter
dec
pop
or
sbb
nop
scas
sub
fcmovnb
dec
repnz
call
dec
sahf
xor
daa
jl
or
adc
aam
movsl
mov
xor
in
xchg
out
leave
dec
pop
push
or
inc
or
mov
out
add
or
or
in
sarb
cmpsb
rclb
xchg
sub
fwait
mov
add
mov
pusha
fldenv
lcall
pop
outsl
sub
mulb
add
and
sub
xchg
scas
jbe
mov
data16
loope
add
test
adc
shrl
icebp
aaa
pop
lods
inc
pop
call
out
mov
dec
hlt
dec
mov
lret
push
mov
xor
fs
inc
ds
je
dec
mov
sub
mov
cld
loope
push
jne
aad
addb
xor
xchg
addr16
xchg
ret
add
mov
fimull
pop
test
mov
out
into
mov
cltd
xchg
popf
movq
bound
inc
or
add
dec
and
dec
ret
movsb
xor
insb
xchg
out
fnsave
orl
aas
stos
push
mov
lahf
imul
jmp
inc
mov
and
add
mov
leave
mov
inc
cmp
dec
std
mov
loop
mov
push
pusha
std
sbb
sub
ja
mov
sub
lret
adc
add
or
cmp
dec
ds
ss
lea
push
xchg
mov
shll
add
sahf
icebp
push
jo
loope
pop
push
add
mov
das
cs
xorl
cwtl
outsb
out
sub
mov
pop
jl
das
xchg
dec
lret
mov
push
mov
and
mov
sub
xchg
testl
in
or
cld
push
xor
test
mov
lock
or
sub
adc
mov
xorl
cld
dec
insl
out
jle
sub
les
shlb
cmp
stos
popf
cmp
inc
repz
ja
inc
fisubrl
sub
fidivs
cmpsb
push
or
xchg
sbb
mov
adc
and
iret
jne
fstpt
mov
cmp
out
jg
jmp
out
ret
sbb
mov
mov
mov
inc
mov
inc
ja
test
adc
divl
ds
mov
leave
int
jle
js
dec
ret
or
imul
cmp
inc
push
jbe
cld
cmp
cld
fildll
add
icebp
jbe
xchg
hlt
jo
andl
jl
inc
xchg
fimuls
sub
mov
mov
aad
in
out
loop
sahf
shll
cwtl
sbb
jno
cmp
fadd
ret
inc
mov
push
adc
fs
repnz
mov
clc
stc
scas
mov
push
and
ja
rcll
std
sub
mov
mov
push
cmpsl
sub
sbbb
jno
dec
mov
stos
and
xchg
fstpl
pop
cwtl
arpl
mov
jle
dec
in
sbb
add
mov
xor
shlb
arpl
mov
movsl
push
out
ret
mov
cmp
testl
xchg
dec
lock
sbb
cmp
inc
push
movsb
sti
scas
mov
jmp
dec
sbb
jno
stc
sbb
pop
xchg
pop
test
or
popf
add
lret
outsb
imul
pop
sbb
call
mov
loopne
mov
xchg
leave
dec
out
mov
jmp
cli
xchg
repz
movsl
sbb
and
pop
outsl
loop
pop
cmp
mov
scas
mov
and
iret
cmc
sbb
pop
hlt
clc
lea
test
aad
int3
jp
jbe
inc
push
push
mov
adcl
add
mov
push
inc
jbe
mov
sbb
test
mov
loop
lock
dec
mov
push
call
and
or
cs
mov
outsl
or
int
sbb
mov
pop
or
xchg
fs
jo
mov
popf
gs
shl
jns
add
mov
bound
push
gs
add
dec
filds
ljmp
lods
test
jno
lods
mov
or
xor
sub
notb
icebp
out
inc
mov
jb
jnp
insl
movsb
sbb
cld
sub
pop
pop
xchg
mov
lret
jae
and
pop
jbe
adc
je
cmc
xlat
jp
stos
xchg
cmpsl
jae
addl
mov
mov
outsl
popa
test
test
in
mov
scas
loope
loopne
push
rol
push
in
push
jecxz
jge
adc
xor
xchg
ja
aas
scas
xor
lret
dec
scas
mov
xchg
pop
xor
cmpsl
sub
lea
fstpt
jmp
mov
data16
outsl
mov
mov
jnp
jnp
push
arpl
inc
jnp
or
popa
mov
mov
ss
fstpl
ss
lods
or
fs
sub
es
mov
ja
dec
stc
push
ret
lock
popl
xchg
push
test
mov
inc
loope
pushl
xlat
fidivrl
ret
dec
push
lea
test
iret
pop
add
sub
add
ret
cmp
js
jmp
inc
ret
aaa
dec
pop
push
xchg
jae
inc
fdivs
or
dec
loope
adc
cmc
jae
dec
mov
adc
stos
inc
lds
or
sahf
std
iret
pop
cli
sbbl
jo
hlt
jl
stc
dec
mov
lods
jns
lret
cs
cmpsb
cltd
push
pop
mov
or
mov
lods
xchg
lods
mov
cmpsl
lret
push
jbe
dec
fwait
imul
adcl
xchg
sbb
pop
cwtl
adc
push
mov
into
fcomi
adc
dec
and
jle
dec
loope
call
xchg
lret
rcll
movsl
mov
jg
sbbl
xor
fucomip
sarl
pop
pop
test
mov
test
iret
fbstp
jbe
or
inc
mov
test
mov
push
jmp
popl
ret
fs
sahf
fmull
xchg
sbbl
and
cmpsl
pop
sub
call
cmpsb
cmc
hlt
pop
in
mov
and
xor
sub
xor
repz
adc
adcl
shrl
fptan
rorb
int
or
int
xor
mov
dec
xchg
xlat
sbb
mov
sbb
sub
outsl
das
jmp
sbb
add
xlat
adc
das
push
pop
cmc
mov
pop
adcl
sub
inc
push
jmp
push
xor
sbb
sub
cld
lods
fcompl
test
es
popa
push
xor
out
xchg
push
and
sbb
andb
repz
mov
inc
jle
mov
ret
xor
ja
out
and
mov
push
pop
popf
push
dec
fcomps
mov
scas
lcall
ds
imul
scas
pop
mov
push
movsl
fisubrs
lods
adc
cmp
in
cmp
rcrb
jg
stc
dec
sub
in
push
lcall
or
xchg
shll
cld
lods
jge
cmc
and
sub
repnz
mov
sub
jae
fsubl
or
lds
mov
jecxz
xor
push
and
push
mov
dec
cmc
in
sub
movsb
inc
scas
inc
and
ss
adc
jns
pushf
sbb
inc
mov
cmpsb
dec
mov
cs
out
loope
jb
movsl
pop
fildll
popf
sbb
ds
add
mov
push
sub
xchg
loop
cltd
jno
repnz
ficoms
bound
rorb
lea
enter
cwtl
jae
lcall
insb
nop
cmp
mov
push
cmpsb
insl
push
sub
mov
test
mov
pop
push
je
push
sub
sub
jmp
shlb
jmp
lods
and
ljmp
movsb
mov
inc
fisttps
xchg
fimuls
call
mov
std
es
sub
mov
mov
pusha
inc
push
ja
shll
mov
push
xchg
aad
test
inc
jl
nop
mov
mov
lcall
adc
jg
data16
pop
pushf
lret
popa
test
sub
xchg
movsb
and
jae
mov
sbb
sti
mov
add
cmp
cvtpi2ps
nop
and
out
in
and
je
inc
mov
into
insl
cmpsl
jge
sbb
je
sarb
pop
dec
pop
sub
xchg
cmp
add
cmp
jg
repnz
jmp
shl
popa
push
xchg
adc
adc
movsb
jne
fdiv
xchg
sbb
pushf
ss
mov
inc
push
mov
push
testl
inc
or
insl
xor
sbbb
in
xor
stos
mov
mov
gs
data16
inc
adc
inc
cmp
fildll
jp
addr16
mov
dec
loop
and
cmp
fisttpll
aas
xchg
cs
addr16
inc
xchg
pop
pop
shlb
mov
es
add
imul
sahf
xor
push
mov
popa
imul
loopne
stc
xchg
loop
inc
jge
or
insl
aas
or
mov
into
jge
mov
jecxz
push
jno
ret
cmpsb
out
cmpsb
push
rolb
adc
outsl
rorb
inc
adc
cmp
mov
sub
lret
stc
add
loope
loopne
lods
xchg
fwait
lods
insb
daa
push
cmp
pop
icebp
icebp
and
pop
std
loope
mov
ljmp
mov
push
hlt
mov
test
andl
mov
lret
aaa
xchg
into
aas
fs
test
movb
xor
add
cmpsl
inc
movsb
lds
aad
addr16
dec
xchg
push
ja
sub
push
adc
sbb
inc
jle
test
ror
push
jnp
xchg
cmp
cmp
pop
adc
fldcw
aad
add
shll
out
lods
lcall
jl
addr16
ret
push
sahf
jg
pop
sbb
in
dec
mov
shr
cs
or
nop
ficoml
stos
add
stos
rdmsr
xchg
loope
cmp
or
aaa
mov
mov
xor
fldl2e
add
add
test
or
inc
rcll
or
stos
jbe
insl
jnp
mov
and
repnz
push
xchg
shl
xchg
and
mov
int
pop
lret
mov
and
inc
mov
jl
pop
sar
xchg
aas
mov
dec
xor
jge
outsl
test
pusha
sbb
dec
add
mulb
push
roll
arpl
sahf
mov
mov
or
daa
cmp
sbb
jge
int
pop
push
leave
cli
arpl
clc
jae
loopne
in
pusha
cmpsb
dec
sub
mov
jbe
mov
cld
push
int3
inc
out
mov
sbbb
pop
jbe
jge,pn
imul
xchg
xlat
out
xchg
cmp
push
je
dec
leave
pmaxub
mov
int3
jae
es
decb
leave
mov
test
sub
mov
enter
or
xchg
clc
adc
mov
pusha
jle
jecxz
in
pop
mov
loopne
stc
mov
add
push
in
imul
dec
pushf
or
and
inc
insl
xchg
ss
lcall
cmc
mov
or
movsb
jle
ljmp
jne
sub
mov
aas
mov
xor
fsubrl
fucomp
in
daa
inc
ja
or
cmpsb
sarb
das
fisttpl
add
stos
mov
xchg
and
lea
add
cmp
xor
mov
jae
sar
movsb
dec
outsb
sub
fwait
push
imull
stc
loop
call
xor
aas
mov
mov
rcll
aam
pop
into
out
pop
mov
hlt
lock
pop
cld
decl
addr16
aam
lcall
mov
mov
sub
imul
fisubrl
hlt
jb
arpl
mov
inc
sti
hlt
imul
scas
mov
pop
dec
cwtl
fdivs
mov
mov
in
jnp
xor
addr16
sbb
int3
jge
in
jne
out
and
sub
sub
in
xchg
xchg
pop
and
lods
arpl
cmp
mov
mov
out
mov
lods
loope
ja
or
pop
sarb
adc
or
cld
and
les
int
lods
push
mov
xchg
push
fld
ljmp
aaa
insl
add
test
xchg
int3
mov
das
mov
pop
lds
inc
push
xchg
cli
dec
fimuls
mov
adc
pushf
xor
lahf
fldt
or
out
push
mov
loop
stos
adc
jmp
and
dec
in
orb
jp
icebp
loopne
cmc
call
pop
mov
push
cmp
lret
gs
xlat
jmp
jp
rorb
pop
lock
xor
jo
mov
test
xchg
lret
int3
xchg
lods
mov
push
mov
std
pop
xor
push
push
lods
daa
jmp
mov
xchg
incl
testb
loop
ss
inc
lock
lret
ficoml
ret
cmp
leave
mov
fbld
fdivrs
adc
rcrb
sbb
xor
lret
and
jns
cmp
int
aaa
pop
mov
xchg
fstpl
lcall
sbb
dec
daa
mov
push
call
scas
out
rcrb
push
fs
add
adc
cmp
cmp
dec
xchg
int
jne
dec
mov
or
push
jb
dec
sbb
repz
push
fwait
cmp
lock
add
mov
xor
aam
jo
insb
flds
jnp
inc
shrb
test
mov
popl
testb
and
lret
mov
hlt
subl
fs
pop
add
mov
mov
jno
stc
filds
mov
sahf
or
lods
xchg
cwtl
pop
aaa
lea
inc
xor
add
lods
and
stos
jge
fidivs
sub
lea
inc
nop
insb
mov
inc
sti
ja
mov
mov
in
inc
mov
pop
nop
stos
arpl
lcall
ss
dec
ret
pop
fisubrl
scas
pushf
mov
cmp
xchg
push
xor
jne
lds
popa
pusha
inc
xchg
mov
cmc
aas
cmp
scas
dec
adc
and
dec
jbe
fbstp
pop
pushf
xchg
sbb
inc
inc
adc
xorl
xchg
scas
pop
push
scas
dec
xlat
inc
andb
mov
xor
push
lcall
jp
push
into
xor
push
ret
ja
mov
mov
ffree
dec
cwtl
cli
xchg
ljmp
lret
adc
fbstp
jno
jge
imul
add
xor
mov
push
xchg
fidivl
rorb
inc
sarb
outsl
jg
inc
pop
je
sbb
jle
rcl
pop
lcall
ss
or
inc
cmp
out
sub
adc
xor
dec
fistps
and
testl
repz
cld
jns
inc
scas
push
out
mov
insl
mov
xchg
push
pop
sbb
mov
movsl
aaa
cmp
jecxz
das
and
cmp
mov
mov
jg
stos
mov
sub
xchg
jmp
xchg
push
in
pushf
and
add
sahf
mov
push
pop
xlat
ljmp
loop
add
ret
mov
inc
pop
and
stos
enter
mov
xchg
mov
movsl
adc
cmpsb
xchg
cwtl
js
jmp
mov
int3
lret
pop
dec
adc
loope
jmp
rcrl
pop
es
pop
xchg
stc
or
lods
cmp
xor
call
movsl
sar
roll
jg
test
cli
jae
dec
adc
imul
clc
js
cld
lret
push
and
xchg
shr
xor
out
stc
mov
test
pop
ja
hlt
jle
je
mov
daa
popa
sbb
outsl
mov
xorb
jmp
cmp
es
add
xor
and
daa
test
es
mov
mov
pop
xchg
ror
xchg
adc
xor
add
lea
jp
mov
in
int3
insl
or
scas
mov
pop
fsubl
aas
or
inc
inc
es
mov
scas
pop
insb
sub
movsl
cmp
in
sub
jle
adc
addr16
roll
xlat
loop
xchg
or
and
imul
jo
mov
in
cmp
test
or
xchg
inc
mov
nop
add
sarb
scas
imul
insl
dec
daa
cmp
scas
mov
add
ds
dec
ss
nop
ss
xchg
mov
inc
rolb
das
js
int3
jp
jl
das
ret
sub
mov
inc
lret
inc
jle
mov
out
mov
lcall
adc
xchg
inc
clc
lcall
push
aad
inc
push
mov
lds
fistpl
dec
push
sbb
sbb
xchg
mov
cltd
xchg
sub
mov
mov
mov
inc
test
pushf
xchg
test
in
xchg
cwtl
xor
jae
mov
cmp
ficomps
and
mov
cmp
in
sub
xlat
jl
xchg
and
std
sub
or
pop
rclb
in
sti
dec
lret
rorl
or
shl
je
xor
pop
loop
xchg
rcrb
out
cmp
jae
jp
push
mov
sub
jne
ljmp
shlb
adc
out
xchg
mov
sub
int3
jg
ret
cmp
pop
int
outsb
xor
cmpsb
inc
pop
lock
in
xchg
xchg
add
in
call
or
inc
leave
push
icebp
add
sub
mov
loop
mov
inc
sbb
jp
lds
aaa
leave
ret
fstps
push
repnz
punpcklbw
jnp
inc
aam
int3
cmpsb
mov
fists
js
jbe
mov
mov
dec
das
sti
push
jl
loopne
dec
mov
xor
sub
rolb
cmpsb
fisubrl
mov
test
test
loop
jecxz
in
or
add
dec
std
lods
jbe
das
adc
pop
clc
jno
xchg
lret
dec
mov
pop
and
je
imul
je
sbb
fidivrl
fwait
pop
cli
push
pop
aam
xor
cmp
jmp
push
popa
sub
mov
sub
sub
jns
push
push
xchg
xchg
jb
push
pushf
sub
sbb
xchg
adc
lret
sub
cli
sbb
cmp
inc
cmp
popa
cmp
jmp
test
sti
js
dec
sbb
fs
add
fistl
jnp
and
scas
sbb
ljmp
imul
mov
push
js
push
loopne
rclb
scas
mov
in
xchg
cmp
or
stos
test
adc
jns
ret
loop
mov
sbb
mov
shlb
mov
dec
stc
ficompl
xchg
dec
cmpsb
adc
pop
test
adc
rcrb
cmc
rclb
mov
jne
jmp
push
leave
xchg
sbb
ja
jno
and
popa
test
daa
sub
subb
aaa
mov
sub
cli
in
inc
cld
sub
test
jbe
cs
jp
sbbl
cld
insl
cli
pop
pop
bound
push
add
in
xchg
decl
or
jmp
pop
bound
mov
dec
cs
xchg
mov
adc
int
xor
pop
or
mov
mov
sbb
movsl
stc
pop
pop
xor
call
subl
mov
testl
lea
dec
dec
clc
xchg
dec
std
mov
ret
sbb
pop
fnsetpm(287
pop
sub
pop
imull
mov
adc
inc
rorl
sub
rorl
mov
xorb
arpl
cmpsl
shl
adc
gs
mov
inc
cmp
frstpm(287
dec
hlt
jle
inc
addr16
xchg
sub
sahf
int
inc
pushf
pop
add
imul
adc
cmpb
test
xchg
xchg
xchg
flds
pop
mov
jle
dec
add
or
or
aas
pop
xor
pushf
push
lods
mov
in
adc
push
aas
fisttpl
jne
das
dec
add
out
lahf
call
and
adc
out
jp
outsb
adc
pop
sbb
mov
mov
and
cmpsb
inc
mov
push
jg
test
imull
mov
ds
pop
pop
mov
mov
xor
bound
inc
hlt
sti
in
adc
or
cmp
aam
jne
sub
xor
or
cmp
mov
xchg
cwtl
and
movsb
call
and
movl
add
enter
sbb
mov
mov
mov
fldl
add
les
mov
in
dec
sbb
pusha
mov
push
fcmovbe
insl
mov
fdivrl
popa
adc
stos
pop
mov
jns
cwtl
mov
adc
imul
and
mov
daa
ja
pop
mov
xchg
insb
fisttpll
lods
pop
pop
inc
pop
inc
xchg
cmp
cmp
out
rol
mov
cwtl
cs
xor
dec
mov
es
iret
add
dec
jns
imull
pop
mov
mov
jns
or
out
sbb
pop
lret
pop
mov
adc
dec
mov
fcoml
add
lds
clc
iret
call
cmp
xor
adc
adc
popa
in
and
movsb
rclb
fidivrl
es
pop
fiadds
dec
and
jmp
pop
aas
add
fldenv
add
mov
inc
ret
dec
icebp
sub
hlt
mov
pop
mov
cmp
loope
je
das
fidivl
pop
shlb
and
in
xchg
loop
arpl
lret
and
xchg
lods
jecxz
jne
mov
shrl
cmp
movsl
iret
ds
lcall
sbb
dec
dec
xchg
roll
cmp
in
xchg
in
fsubl
bound
sbb
mov
push
dec
hlt
push
js
sbb
repz
dec
cwtl
stos
shll
xchg
scas
mov
lret
pushf
icebp
or
mov
mov
add
mov
lods
xor
mov
loope
subb
dec
xchg
test
hlt
lcall
dec
cli
cmpb
outsl
rorl
fbstp
out
jbe
mull
jne
and
jnp
and
and
mov
stc
add
iret
xchg
inc
dec
scas
out
xchg
in
inc
jmp
cli
out
pop
xor
lods
sbb
dec
mov
nop
pop
pop
in
mov
xchg
dec
mov
pushf
mov
fwait
sub
dec
shlb
adc
lcall
push
das
rorb
mov
or
xchg
or
out
xchg
loop
adc
enter
xlat
jb
sti
xchg
mov
mov
popa
cltd
loope
test
fsubrs
popl
enter
add
stc
shl
jg
mov
rorb
cmp
fdivl
adc
outsb
cmpsb
lahf
inc
sahf
mov
sub
xchg
jnp
pusha
lea
daa
shrb
mov
add
jns
in
xor
push
mov
loope
in
push
sub
aaa
xchg
jno
rolb
xchg
out
inc
sub
xor
test
jns
jbe
lds
mov
adc
aam
dec
and
jo
xchg
les
ja
mov
subl
sbb
out
cwtl
pop
add
mov
insl
xchg
jmp
jge
jp
mov
jns
pop
push
inc
repz
mov
outsl
jne
shl
scas
js
or
adc
jg
adc
xor
or
je
movsb
dec
fldenv
push
scas
insb
pop
pop
aam
in
push
nop
sarb
pop
dec
stos
jno
mov
test
in
enter
sbbl
cmp
cs
xor
mov
push
out
cli
icebp
xchg
popf
icebp
and
dec
jmp
jmp
jno
lea
rcrb
scas
and
xchg
mov
mov
mov
cmpsl
xchg
mov
jge
jl
add
pop
mov
outsl
out
jmp
inc
adc
push
cmp
pop
xchg
stos
push
fistps
jecxz
and
lds
push
lahf
jns
adc
and
orb
xor
lret
pop
or
out
sbb
dec
pop
pop
mov
adc
inc
push
cmp
adc
push
pop
push
into
dec
lock
xchg
int3
or
orl
mov
int
jae
outsl
and
ja
insb
lods
or
pushf
xchg
lds
ret
sbb
loop
insl
inc
cmp
sub
loop
push
mov
jns
or
or
imul
or
dec
std
stos
pop
jne
dec
decl
mov
stc
sti
xlat
mov
and
or
sbb
push
test
push
mov
push
xchg
jo
xor
mov
jbe
jno
lea
pusha
mov
jg
push
fstpl
xor
into
nop
js
xor
or
ds
cld
fidivs
fisttpl
aad
xchg
sub
fwait
cmp
inc
sub
cmp
push
in
pop
sbb
imul
in
and
push
inc
lahf
xchg
rcll
ret
xchg
loope
int
and
xchg
movsl
xor
es
scas
in
sub
jns
lods
or
or
xlat
aaa
movb
rolb
jg
push
sub
repnz
shlb
addr16
sbb
out
pusha
mull
pop
xor
adc
mov
in
pop
cmp
stos
mov
dec
out
mov
inc
and
push
jmp
fwait
sbb
lock
pop
mov
cmpsb
xor
xor
out
loope
xor
movsl
pop
cmpl
xor
mov
xor
fdivs
lahf
lock
pop
fstl
cmp
fstps
or
xlat
pop
out
shlb
stos
cmp
dec
xchg
ds
dec
fwait
sub
cmp
or
push
js
ss
sbb
push
pop
pop
lcall
ds
loopne
in
repz
adc
call
enter
mov
into
movl
jnp
das
pushf
mov
cwtl
stos
ja
mov
xlat
inc
xlat
jb
jmp
and
dec
sbb
sub
pinsrw
icebp
push
stos
xchg
addr16
ror
add
adc
lea
inc
cli
add
pop
inc
inc
fmul
data16
insb
xchg
xchg
mov
add
fnstenv
call
aas
dec
mov
ret
jbe
inc
nop
adc
cmp
add
data16
dec
rclb
cmpb
int
jle
mov
mov
jb
or
mov
pop
xchg
sbb
outsb
jne
jo
lods
mov
orb
add
imul
xchg
mov
jne
test
or
fdivp
lds
jno
mov
mov
push
roll
movsb
mov
sbb
mov
lret
out
loop
jno
jmp
cs
cmp
js
adc
and
push
ret
push
lea
mov
imul
jmp
arpl
push
aad
lock
fsqrt
jne
divb
push
xchg
ljmp
jp
jo
lea
pop
fldl
sbb
push
ret
cmp
aaa
test
mov
cmp
adc
xchg
popa
scas
divb
xlat
ss
sbb
xor
dec
lea
sbb
jp
nop
inc
sub
out
push
insl
out
movsb
xor
xor
shl
mov
aad
pop
push
ret
or
push
mov
imul
ljmp
rorl
imul
mov
mov
push
add
inc
mov
int
push
inc
or
mov
mov
cmpsb
shlb
aaa
aam
pushf
adc
xor
bswap
in
fwait
mov
add
frstpm(287
ds
ljmp
fistl
aam
push
das
mov
xchg
push
xchg
lock
push
xor
clc
jecxz
popa
inc
cmp
pop
lea
test
dec
lret
sbb
jp
cmp
fisubl
xchg
adc
aad
fimull
sub
adc
and
sub
adc
in
cmpsb
int3
loope
and
andl
aad
jae
popa
adc
adc
mov
xor
in
push
inc
mov
mov
xchg
cmpsl
sbb
xor
repnz
xor
adcb
subl
cmpsl
ret
dec
mov
fwait
outsl
icebp
lock
scas
hlt
lods
or
mov
xor
fidivrl
es
in
aaa
movl
repnz
repz
sti
add
jae
out
jp
bound
jae
sbb
cmp
or
ljmp
pop
mov
ret
mov
je
xchg
or
clc
decl
xor
jns
cmp
imul
push
loopne
mov
xchg
lea
cmp
xchg
fists
inc
outsb
dec
mov
jne
xchg
int
sub
lahf
sub
je
out
mov
test
divl
mov
dec
xor
mov
ss
gs
xchg
roll
cmp
int
and
filds
xor
out
fldenv
jo
sub
xor
insb
cltd
mov
mov
jl
inc
lret
lock
fmulp
ret
inc
mov
cwtl
adc
in
test
imul
std
xchg
in
mov
xchg
jnp
das
repnz
movsb
jmp
inc
dec
std
jge
movsb
lea
mov
add
movsb
dec
jnp
call
je
pop
loope
lea
iret
lds
jecxz
inc
xor
lcall
xor
push
xchg
pop
jecxz
into
or
popf
decl
mov
data16
push
jno,pn
imul
or
dec
iret
xchg
arpl
jg
push
movsb
jg
or
pop
inc
je
sub
inc
into
roll
adc
lret
mov
std
add
mov
scas
imul
jno
xchg
mov
lcall
movsb
mov
push
lahf
loope
ret
pop
pop
pop
daa
inc
xor
lods
pop
jo
jae
ret
xchg
push
mov
jecxz,pn
fs
sub
outsl
mov
leave
lock
pop
sub
cmp
lahf
xchg
jp
adc
xchg
loopne
mov
xchg
js
xchg
sbb
fisubrl
jecxz
pop
stos
dec
pop
iret
popf
mul
mov
mov
leave
sbb
pop
adc
loope
cmpsb
test
jae
jl
cmp
mov
and
fwait
mov
cs
mov
jp
add
sub
xlat
lods
cwtl
xor
cmpl
icebp
outsl
jnp
push
test
pop
sub
popf
mov
cmp
add
aaa
mov
inc
mov
scas
inc
movsl
mov
adc
shll
movsl
addb
cltd
or
fisttpl
popa
fs
lock
dec
pop
sbbb
sbb
sub
inc
add
ljmp
cmpsb
lds
je
addr16
and
cmpsl
adc
scas
or
mov
xchg
insb
or
pop
push
decl
lahf
add
sbb
inc
inc
xchg
dec
bnd
dec
stc
or
or
pop
or
out
mov
popf
push
jno
xchg
sub
mov
repz
xor
pop
repnz
daa
mov
sti
lods
rorb
and
cli
add
inc
lret
in
jge
push
into
xor
push
aaa
add
test
inc
add
dec
out
cwtl
dec
push
je
out
xchg
mov
in
add
xchg
das
lret
mov
imul
mov
jb
js
lcall
jns
test
xor
mov
cmc
in
or
fs
push
movsb
and
loopne
inc
pop
addr16
ficomps
in
lahf
out
xchg
adc
pop
hlt
push
daa
inc
mov
into
cltd
clc
xchg
icebp
dec
mov
cs
aas
in
rcll
xor
sbb
jle
sbbb
in
pop
add
sar
inc
cmc
mov
or
push
jge
out
push
test
rcll
add
pop
nop
mov
lcall
jmp
into
push
adc
or
test
mov
data16
repnz
sub
adcb
xchg
clc
daa
mov
subb
jmp
mov
out
pop
aas
pop
sahf
or
in
adc
cmpsb
sbbl
xchg
pop
jmp
jmp
sbb
fsubp
push
inc
hlt
movb
aam
mov
sbbl
cmp
out
adc
sbb
loope
jmp
sar
mov
add
or
jge
frstor
outsb
add
mov
xor
mov
in
pop
cmp
enter
aas
aaa
aam
aas
cs
test
dec
cwtl
stos
xlat
out
or
cmp
outsb
mov
icebp
xorl
push
call
inc
aam
icebp
mov
cwtl
xor
mov
test
push
cwtl
scas
mov
inc
pop
pop
scas
xchg
pop
sub
cmc
mov
jp
addr16
addb
xlat
xor
xchg
dec
dec
dec
fnstsw
pushl
xor
push
movsb
sbb
mov
cli
mov
mov
jle
incl
sbb
dec
nop
mov
pop
repz
in
lret
jae
test
xlat
loope
push
pop
dec
and
lods
push
dec
xor
divb
into
iret
rorl
mov
aaa
fidivs
cwtl
adcb
data16
push
or
aaa
lods
icebp
mov
pop
inc
into
mov
push
jae
mov
stos
shlb
or
jae
sbb
xchg
adc
and
or
sbb
es
pop
xchg
inc
mov
ds
push
rorb
xor
xchg
adc
loop
sub
movsb
pop
adc
fcoms
mov
jb
sub
mov
dec
sbb
sbb
popa
mov
mov
xlat
inc
add
sub
insl
call
ret
or
xor
hlt
add
push
push
ret
push
mov
pop
ss
mov
andl
jecxz
push
dec
in
sahf
sbb
jl
push
push
out
dec
mov
or
adc
or
or
cmp
push
mov
repnz
js
out
mov
push
add
into
or
add
jle
or
subb
xor
das
adc
adc
loop
lea
xchg
inc
push
adc
aad
xchg
shll
xchg
pop
in
das
es
jnp
xchg
je
ret
mov
leave
out
faddl
or
jno
stos
sbb
icebp
push
xchg
dec
mov
js
pop
and
jnp
inc
cmp
jmp
bound
sub
mov
popf
leave
inc
int
and
cmp
cli
add
int3
pop
push
sub
stos
stos
aam
push
xlat
xchg
mov
enter
xor
out
out
and
test
add
das
cld
loope
std
sbb
enter
push
inc
xchg
out
push
inc
cs
and
repz
mov
push
adc
dec
add
mov
jae
sub
mov
sahf
pop
dec
ljmp
dec
fistl
add
inc
dec
pop
cmp
orl
mov
jecxz
jns
xchg
lds
mov
cmp
mov
inc
bound
pop
add
push
xchg
mov
in
push
movsl
fisttps
and
mov
lea
out
rcll
lcall
adc
fistl
int
dec
imul
out
notl
jne
xor
scas
push
inc
mov
add
adc
inc
add
sbb
mov
sbb
jg
jmp
xchg
dec
jp
inc
ret
pop
mov
mov
sbb
pop
ds
inc
das
cld
xchg
dec
mov
jae
jo
adc
test
pop
sahf
pop
sarb
or
shrb
rcll
cmp
sti
pop
jmp
data16
or
sbb
jnp
in
movsl
test
pusha
add
jmp
adc
cmp
pop
xchg
adc
mov
mov
jmp
clc
cmp
addl
adc
xor
sub
pop
or
mov
mov
jae
push
bnd
lret
add
jo
stc
adc
popf
rorb
inc
add
add
rorl
push
aam
push
push
xor
ljmp
pop
js
dec
stos
dec
stos
adc
add
lds
dec
jno
test
dec
lea
lods
pop
mov
clc
add
lods
mov
cmp
jmp
dec
jg
js
xchg
adc
sbb
inc
or
or
imul
call
fwait
sub
cltd
repnz
sbb
cld
fwait
mov
xchg
jl
push
ret
mov
mov
sub
hlt
push
pop
push
sbb
outsb
mov
adc
sar
jp
xchg
dec
call
or
stc
mov
add
xor
lods
adc
or
sti
stc
sub
fstp
cmp
adc
nop
into
sub
mov
or
stos
jge
pop
adc
jle
jns
shlb
mov
add
cmpsl
and
cmp
mov
ficompl
sub
mov
movsl
loop
push
mov
mov
cld
cmp
inc
int3
mov
lret
arpl
sbb
push
hlt
mov
in
push
fsubl
add
or
sbb
push
push
dec
gs
outsl
incl
int3
or
nop
add
jge
jl
in
push
out
add
mov
xlat
cmp
sub
pop
iret
adc
pop
cmp
arpl
cmp
inc
adc
clc
mov
stc
test
jp
rorl
stc
adc
movsb
or
mov
jb
lcall
aas
jp
cli
mov
inc
popa
in
ret
add
addr16
cmpsb
shlb
add
frstor
jl
scas
sbb
cli
scas
pop
xor
jae
stc
movsl
push
adc
mov
mov
add
mov
or
xor
dec
into
jp
dec
popf
cld
icebp
adc
pusha
jmp
jb
xor
pop
pop
popa
dec
imul
pushf
jp
gs
inc
sub
into
outsl
outsl
fbstp
mov
xlat
mov
mov
mov
mov
lret
dec
cwtl
aaa
mov
rcll
and
add
mov
push
xlat
pop
push
subb
add
push
test
movsl
cmpsl
dec
jle
sub
jne
inc
int
insb
lea
mov
lret
mov
rorb
pop
push
push
in
pop
pop
lcall
jno
sbb
dec
inc
test
pop
jle
ret
cmp
movsl
sub
lea
cmp
pushf
cmp
cli
std
xor
jb
or
mov
movb
push
scas
loop
test
int3
loopne
popa
xor
call
aam
cmp
mov
lods
or
sub
dec
bound
or
sub
loope
icebp
mov
int3
xor
loope
dec
std
mov
iret
clc
pop
pop
jb
or
cmp
xchg
movsb
inc
stos
xor
arpl
shl
mov
int3
ja
push
sub
ss
mov
out
sub
mov
mov
movl
xor
les
dec
cmp
adc
push
dec
adc
insb
push
or
mov
lahf
sti
jmp
sub
inc
pusha
imul
test
cmpsl
fiaddl
inc
xor
xchg
mov
stos
shrb
dec
fistps
mov
add
pop
jb
xchg
aaa
xor
test
add
outsl
pop
test
sub
outsb
arpl
aas
and
inc
rorl
pusha
into
pushf
dec
test
shlb
sub
cmp
movsb
sub
cmpsb
ss
cmpb
popf
and
push
ds
outsl
das
adc
ja
fs
inc
and
lea
fsubrs
aad
fsubr
add
xlat
test
popa
push
mov
push
inc
push
fcmove
sbb
repz
mov
in
xchg
shl
push
or
fistl
mov
xor
decl
add
pusha
and
fs
outsb
and
loopne
or
sub
sti
and
in
dec
jbe
test
scas
sbb
push
inc
jae
xor
pop
pop
aaa
or
dec
stos
sbb
fs
enter
pop
xchg
negb
int3
outsb
and
sbb
fsub
in
dec
mov
mov
mov
movsb
xchg
sbb
fbstp
mov
or
insl
inc
or
mov
mov
pushf
and
jae
ret
stos
push
sahf
test
movsl
aaa
and
inc
jne
fs
adc
ja
test
pop
dec
jmp
mov
mov
movl
push
ret
pusha
lret
testb
pop
scas
or
xchg
jp
mov
int
pop
xchg
adc
jmp
xor
test
jmp
bound
push
mov
mov
add
scas
pop
adc
and
push
mov
and
push
scas
js
jne
sti
imul
mov
mov
lahf
insl
mov
scas
das
test
xor
jno
lods
jl
in
dec
es
les
mov
mov
xor
cli
jae
sub
xchg
adc
jns
sbb
cmp
push
sub
cld
add
loop
mov
iret
loope
sub
mov
adc
jbe
cltd
cmp
dec
push
mov
inc
aas
add
cmpsl
jns
and
stos
pop
insl
shrb
loope
jmp
mov
inc
rcrl
cmpsl
push
jns
mov
shrb
and
sbb
int3
pushf
scas
push
rorl
jp
std
int3
cmpsb
pop
ret
dec
mov
adc
push
test
lods
movsl
js
mov
aaa
push
lahf
int3
int3
in
cmp
loopne
pop
inc
add
iret
jmp
sub
fwait
ss
push
movsl
add
jle
cmp
outsl
call
mov
mov
into
or
pop
xchg
in
fmuls
out
setle
mov
lods
xlat
pop
xlat
jne
popf
fidivl
jl
adcb
imul
sub
jae
jge
inc
jecxz
out
xchg
insl
mov
hlt
aad
jg
xchg
lods
mov
xorb
loop
or
jns
push
daa
insb
outsb
mov
or
mov
jnp
inc
add
add
and
ds
add
je
adc
cli
sbb
pop
mov
int3
pusha
mov
xchg
mov
mov
sbb
pushf
and
inc
mov
test
pop
pop
in
insb
and
xor
mov
cmpl
push
sub
insl
mov
cmpsl
je
fimull
lods
add
dec
pushf
pusha
pusha
push
push
sub
mov
push
pop
pop
stos
movsl
and
ss
pusha
or
or
mov
mov
xchg
fisttps
or
xor
stos
cmp
or
dec
loop
in
sbb
mov
xchg
xor
inc
aaa
xchg
out
fsubrl
lea
popf
shll
push
scas
jo
cmp
gs
cmp
mov
adcb
sti
cmp
fwait
pop
lret
sbb
dec
popa
or
scas
lods
cmp
fwait
out
in
dec
push
or
cmp
pop
adc
aad
xor
fldenv
adc
cmp
sub
fbld
sbb
cli
shrl
inc
adc
lret
dec
push
in
adc
out
stos
add
mov
mov
push
mov
es
shlb
loope
push
lret
lods
cmpsb
jnp
shlb
ficoml
insb
or
xorb
xchg
sahf
jl
add
popa
fadds
retw
cmp
mov
addb
mov
mov
mov
movhps
adc
pushf
addl
push
aas
dec
ja
mov
int
test
and
setno
aam
scas
fbstp
adc
add
scas
push
fdivs
loop
jge
ret
ds
idivb
arpl
mov
mov
fcomip
fists
xchg
inc
inc
flds
and
dec
jns
pop
xor
lahf
cmpsl
sbb
pushf
sbb
mov
scas
add
aad
or
mov
inc
fbld
push
dec
outsb
dec
lret
lahf
inc
sub
mov
dec
stos
ret
ret
sbb
mov
cmp
pop
mov
cmpsb
cmovs
or
shl
inc
jp
mov
jg
popa
negb
inc
mov
repz
cmp
lods
push
pushf
int
sbb
pop
xchg
syscall
sahf
mov
aam
scas
std
std
push
push
xchg
and
adc
lret
jb
push
xchg
loopne
ficoml
dec
and
out
clc
jp
and
fabs
inc
xor
pop
inc
fsubrs
lcall
xor
in
jp
pop
out
dec
push
inc
jae
lret
aaa
aad
orl
jp
push
data16
inc
dec
stos
jmp
imul
rclb
sbb
movsb
mov
sbb
movsb
xchg
mov
repz
cmp
jmp
mov
dec
xchg
stos
loopne
push
lods
push
loop
xchg
inc
push
fincstp
popa
inc
push
loope
out
jp
or
inc
push
mov
cmp
sub
idivl
xchg
aaa
mov
xor
adc
cmpsl
cli
sub
add
add
repnz
sub
inc
imul
xchg
mov
lcall
pop
in
mov
stos
sub
das
stos
xchg
shrb
mov
popf
sub
repz
jle
sbb
sbb
movsb
add
xchg
imul
mov
mov
sbb
imul
push
adc
fs
int3
dec
lcall
mov
lods
hlt
in
xchg
sti
mov
movsl
xor
leave
std
nop
call
inc
daa
shlb
xchg
add
lcall
xor
cmp
add
sbb
pop
xor
pop
sub
dec
and
fcompl
flds
dec
test
pop
daa
jmp
push
xor
inc
adc
iret
fadds
popf
cmpsb
je
cmp
jae
adc
ds
mov
aas
xor
jl
pop
call
mov
movsl
aad
test
pop
ss
push
and
imul
out
out
and
inc
imul
cmp
jb
xchg
arpl
popl
adc
jbe
fsubl
adc
inc
clc
es
xchg
and
scas
jne
xor
orb
jno
jl
lret
xor
cmp
inc
cmp
jmp
fidivrs
sahf
or
xor
hlt
jge
stos
out
das
in
cmpsb
faddl
popa
mov
lock
xchg
xor
adc
cmp
jecxz
cli
jmp
test
pop
xchg
bnd
stos
xor
icebp
and
dec
cli
inc
jbe
cld
fcmovb
sub
sub
mov
cltd
and
inc
aaa
mov
repz
roll
xchg
loopne
loop
add
fisubl
or
ljmp
and
adc
stos
mov
xor
fldenv
scas
mov
cmc
and
test
cmp
pop
inc
testl
or
and
aam
inc
cmpsb
sbb
pop
andl
mov
fcoms
incl
fisttpll
mov
cwtl
pop
insl
ss
repnz
jnp
ljmp
and
adc
aas
xchg
xor
dec
sbb
fidivrs
jbe
pop
xchg
jae
xor
aad
dec
mov
in
orl
lcall
xor
jl
subb
ficoms
faddl
jns
mov
jmp
lret
enter
mov
xor
repz
cmpsl
in
div
std
sub
cmp
push
bnd
mov
popf
or
sahf
mov
or
lahf
popf
mov
dec
cs
jne
fmuls
pop
fnstcw
jge
cmp
mov
sbb
stos
push
mov
lods
or
cli
arpl
push
stos
or
sub
push
rclb
not
rolb
jecxz
insl
cs
jmp
aas
pop
stc
and
outsb
and
dec
ret
stos
xchg
mov
mov
pusha
inc
mov
push
sub
scas
fcoms
or
xor
imul
or
in
lret
scas
in
lods
repnz
jno
push
push
adc
sbb
xlat
xor
bound
jbe
cmc
cmpsl
cltd
pop
mov
xchg
inc
movsl
and
jne
dec
pop
in
add
and
inc
sub
push
les
mov
mov
ja
xor
bound
sub
fidivrs
mov
pop
xor
mov
ljmp
movsb
adc
cmpsb
pop
pop
push
xchg
or
xchg
cmp
mov
out
testl
push
sarl
psrld
int3
sub
jl
add
call
in
mov
add
push
data16
push
mov
pop
push
nop
incl
fsts
xchg
jns
mov
clc
jp
pop
sbb
pop
jb
push
pop
dec
arpl
xchg
mov
cld
jmp
std
in
js
in
popa
movsb
jl
repz
mov
ret
xor
or
pop
sbb
lahf
jns
sti
int
lret
and
push
fbstp
jo
orl
cld
pop
ds
fists
mov
pop
jb
pop
mov
cmp
dec
lcall
push
sub
mov
hlt
xorb
dec
jo
mov
mov
out
sbb
and
cwtl
sarl
sbb
mov
imulb
push
mov
out
js
je
adc
push
mov
dec
cmpsb
lahf
hlt
xlat
jge
cmp
mov
sti
xor
jnp
js
out
test
mov
imul
into
cmp
xchg
outsb
or
imul
pushf
sbbl
pop
arpl
and
cmp
fbstp
inc
rcl
shlb
jge
iret
daa
imul
and
ja
outsl
and
push
bound
xchg
sub
gs
lret
and
xchg
and
mov
xchg
mov
pop
negl
dec
cmp
movsl
push
iret
inc
dec
xor
mov
adc
inc
mov
ss
shll
daa
dec
cltd
cli
std
pop
stos
out
xor
push
jecxz
les
mov
xchg
pop
lea
setne
insb
add
adc
xchg
cwtl
mov
mov
imul
cltd
dec
or
cmp
mov
ljmp
decb
outsb
test
mov
sbb
pop
or
js
add
imul
jg
mov
mov
or
mov
es
mov
dec
adc
test
jbe
and
movsl
xorb
or
test
in
cs
sti
xchg
pop
mov
lods
mov
test
add
aas
ret
ja
inc
int
jns
dec
pop
push
lcall
cmp
out
jl
outsl
mov
test
mov
clc
push
ds
shlb
inc
imul
test
pop
xchg
sub
out
xor
pop
push
jle
push
jecxz
sub
test
insb
lahf
mov
jg
sub
dec
cmp
cmp
dec
or
mov
mov
adc
mov
mov
adc
lcall
sbb
cmp
or
cmp
in
sbb
cli
inc
adc
fwait
mov
lods
daa
jnp
lods
push
insb
cmc
adc
and
or
jecxz
loope
imulb
mov
in
frstor
es
xchg
xor
nop
fbstp
orl
mov
bound
mov
mov
shll
imul
sub
mov
and
mov
stc
sbbb
fwait
dec
fwait
test
cmpsl
out
sub
aam
or
ret
leave
loop
xor
cmp
jns
decl
adc
jecxz
inc
scas
inc
cmp
adc
fmuls
mov
and
xor
adc
push
adc
lcall
adc
mov
sub
stos
dec
mov
outsl
sub
pop
inc
fwait
xchg
add
neg
pop
inc
jle
jno
in
mov
cmpsb
test
sti
popa
or
mov
mov
sbb
inc
imul
rol
fdiv
inc
in
and
add
testb
daa
aaa
fisttpl
sarb
add
lock
lock
xchg
pop
or
xchg
pop
shrl
xchg
test
cli
push
pushf
fildll
jb
add
mov
mov
aad
add
cmp
jecxz
popa
loop
pop
loopne
inc
sbb
mov
js
enter
aas
test
and
mov
pop
lahf
fnstsw
sbb
andl
test
cmp
cmpsl
jno
add
ljmp
add
lret
sti
fiaddl
mov
rorb
das
inc
stos
test
loopne
fsts
loope
in
jle
mov
and
sub
inc
sti
aad
lds
xor
sti
rorb
mov
cmp
loope
xlat
and
in
and
inc
jl
xchg
dec
insl
aaa
xor
mov
pop
xchg
out
fs
das
in
sub
dec
mov
fcoms
movsb
inc
adc
pop
dec
mov
fdivs
lods
sbb
jbe
scas
loop
pusha
sbb
repnz
fistps
out
mov
in
and
inc
packuswb
xor
imul
xchg
xchg
stos
dec
jecxz
shll
les
rcll
vpmacsdqh
lds
arpl
mov
and
pop
push
enter
jne
sbb
dec
push
jne
or
clc
push
lret
aad
scas
adc
push
mov
aas
mov
out
inc
mov
mov
push
lock
aaa
sbb
sahf
or
mov
or
and
fnstsw
xchg
rcll
cmc
dec
movsl
aam
ja
scas
out
dec
mov
adc
push
mov
insl
and
imul
cmpsb
jae
gs
andl
push
leave
mov
test
jle
push
vpcmpgtb
sbb
pop
add
add
or
adc
stos
or
push
xor
lahf
xlat
xor
cs
ret
mov
iret
sahf
mov
push
into
pop
inc
xor
dec
mov
hlt
adc
jae
pop
or
sahf
fisubs
push
and
push
xchg
or
jmp
hlt
mov
data16
dec
mov
cmp
outsb
mov
jns
fiadds
jbe
or
in
jb,pt
test
fnsave
out
out
mov
into
push
into
ja
sbb
fbstp
adc
mov
cmp
outsl
es
mov
push
inc
cs
adc
imulb
and
mov
xchg
jb
fsubrp
add
nop
enter
mov
pop
nop
ljmp
xor
pop
xchg
lock
pop
mov
jne
out
xchg
les
jp
add
pushf
imul
gs
xchg
repz
mov
lahf
jne
or
jg
sbb
sbb
movsb
push
jo
leave
jle
dec
lea
cmpb
loop
mov
ret
sbb
jp
ja
lahf
pop
xchg
std
xchg
or
lret
repz
xor
jl
stc
and
scas
popa
mov
jg
cs
adc
inc
movsl
in
pop
dec
lds
je
cli
cs
jge
adc
stos
push
mov
shll
dec
push
adc
ficoms
push
and
subb
lock
push
adc
pminub
inc
xchg
pushf
dec
mov
mov
les
mov
sbb
negl
jl
mov
bnd
dec
jns
leave
in
cmp
in
ljmp
icebp
insb
loop
xor
adc
sub
mov
mov
cmp
sbb
and
scas
fistl
jp
mov
clc
daa
iret
scas
jns
xlat
pop
adc
inc
aad
out
xchg
repnz
and
mov
and
int
fcoml
nop
arpl
lock
je
int
lret
je,pn
int
inc
mov
mov
jmp
inc
push
loopne
lods
movsw
or
mov
test
imul
ss
or
or
adc
adcl
les
imul
ss
fldcw
xor
mov
lahf
repz
aad
out
rcrb
mov
stc
cwtl
mov
or
dec
add
push
aas
pushf
jns
dec
imul
lods
xlat
mov
mov
ds
ljmp
rorb
sti
stc
or
pop
xlat
mul
cmp
je
jbe
xor
es
adc
pop
in
mov
add
mov
dec
popl
lahf
mov
cwtl
xor
dec
fwait
les
pop
push
push
ficomps
jbe
sbb
or
adc
shll
fwait
ds
jle
adc
mov
add
stc
jo
push
xor
add
dec
imul
mov
xor
sub
fistps
imul
loopne
into
xor
mov
xor
sub
add
push
sub
shrl
pop
outsb
into
jmp
cmp
mov
jae
ss
jae
out
or
dec
jae
mov
jb
sbb
js
es
icebp
xor
cs
pop
cmp
jae
nop
std
out
lret
mov
push
bnd
les
pop
repz
cmpl
ret
movsl
add
dec
add
and
mov
mov
pop
ficomps
and
sarb
test
sbb
in
addr16
nop
loope
and
hlt
mov
arpl
jmp
or
fdecstp
sarb
mov
cli
or
fcmovnb
add
dec
mov
or
pop
sbb
add
pop
outsb
push
add
mov
out
adc
lcall
loop
ficomps
cmp
cmp
enter
jg
in
pop
add
pop
inc
sahf
aas
test
mov
or
mov
mov
xor
pop
adc
pop
add
xorb
test
punpcklwd
fistpl
ss
mov
jns
div
sub
in
and
shll
fs
insb
inc
mov
hlt
mov
pusha
sub
rclb
mov
imul
pop
mov
std
cld
lcall
adc
and
sub
int3
xchg
push
lea
add
jp
daa
xor
sbb
adc
lret
pushf
int3
fiadds
inc
pop
inc
scas
mov
mov
adc
int3
dec
or
mov
pop
imul
or
shlb
mov
gs
xchg
pop
cmp
leave
mov
lds
xchg
sbb
sti
jne
faddl
fdivrl
inc
or
push
popl
fbstp
and
mov
push
and
xor
mov
daa
ljmp
je
push
xor
in
loope
mov
and
sub
jge
jp
iret
icebp
dec
dec
pop
mov
mov
cli
cmp
push
loop
lahf
xchg
mov
clc
mov
inc
scas
pop
imul
lods
neg
ret
mov
sbb
faddp
cmpsl
stc
ficoms
or
xchg
xchg
push
out
or
addr16
rcr
cs
aam
mov
xchg
jecxz
pop
inc
and
loopne
jbe
jbe
xchg
mov
les
addr16
sbb
mov
pop
or
les
repnz
leave
sub
in
push
pop
movsl
mov
ljmp
push
or
loopne
roll
sub
mov
stc
dec
mov
cwtl
push
loop
nop
fcoms
idivl
sub
stos
mov
push
fs
xor
cld
mov
out
adc
adc
jle
pop
fs
leave
or
push
mov
sbb
sbb
push
and
lret
sbb
addr16
out
mov
in
pop
add
lcall
bound
push
pushl
fsubrs
out
es
neg
out
xor
lcall
pop
jb
pop
ja
lcall
dec
adc
data16
mov
sbb
pop
jg
popa
xor
fnstcw
pop
jns
ja
add
daa
adc
xchg
push
loop
test
leave
cmp
push
sbb
xchg
jne
pop
mov
in
nop
out
mov
lods
sub
mov
pop
mov
out
iret
jbe
and
mov
pop
pusha
outsl
bound
and
icebp
lods
or
daa
or
jle
addb
out
jno
and
test
subl
movsl
and
lods
clc
xor
push
mov
aas
imul
popf
mov
cmpsl
sti
ds
xor
and
or
push
int3
jmp
xor
sbbb
and
push
cmp
or
add
mov
push
test
dec
ss
mov
jl
push
mov
adc
sub
mov
notb
out
jmp
xchg
arpl
cli
add
and
test
jmp
and
xlat
inc
adc
js
std
xchg
inc
shll
sub
xchg
iret
dec
js
push
scas
adc
negb
int3
sub
dec
cmc
push
js
pop
fildll
pop
add
mov
insb
jge
and
xchg
out
popf
xor
pusha
shll
jb
jecxz
lds
test
add
ss
push
pop
sbb
fsubrs
mov
adc
mov
fmul
or
dec
mov
mov
or
fyl2x
pop
loope
rcll
dec
in
add
cmp
stos
mov
jg
xchg
inc
mov
std
pop
in
iret
setnp
fisttps
shr
and
into
jae
cs
lret
repnz
and
inc
loop
divl
in
dec
inc
push
das
add
push
aas
push
sub
insb
test
mov
mov
sub
jl
dec
int3
popa
or
sub
fidivl
movsb
adc
str
addr16
mov
mov
or
movsb
sbbl
pop
movsb
pop
nopl
xchg
or
pop
in
lock
in
push
xchg
jno
push
xor
sbb
test
scas
fimull
insl
mov
lret
xlat
addl
mov
cmpb
std
cmp
and
pop
gs
outsw
sbbl
or
in
nop
fcmovb
pop
icebp
jbe
or
cmp
and
roll
jae
dec
arpl
rol
or
push
js
icebp
cwtl
lret
pusha
loope
push
mov
xchg
inc
test
jle
mov
addr16
test
xchg
xrelease
cmc
sbb
pop
int3
mov
sarb
stos
roll
aas
ja
cmc
mov
mov
test
lods
arpl
push
mov
rcr
sub
les
xor
inc
popa
call
xorb
fdivs
jnp
mov
mov
cli
lods
jns
shll
sbb
int3
gs
jns
mull
adc
ret
imul
xchg
movsl
inc
inc
outsl
jne
repnz
cmp
aaa
stc
or
pop
aam
cltd
mov
outsb
popf
xchg
shlb
hlt
add
rclb
mov
xchg
cmpsl
or
or
sub
in
xor
loopne
mov
push
push
mov
nop
pop
push
xchg
push
jle
pop
movsl
call
jo
scas
adc
xor
or
loope
sarb
jle
fwait
xorl
sub
insb
mov
js
lret
jmp
js
out
and
sbb
cmc
ret
mov
outsl
add
call
lcall
add
pusha
pop
js
jge
xchg
cld
scas
lcall
mov
cmp
mov
mov
enter
dec
add
icebp
aad
das
xor
inc
in
mov
dec
cltd
daa
fwait
shrl
lods
sbb
lea
int
pop
daa
movsb
sub
cmpl
divl
hlt
pop
jmp
and
mov
cmp
push
inc
neg
addr16
test
inc
iret
push
mov
insb
test
test
mov
scas
jecxz
cmp
popf
adc
mov
cs
imull
sub
adc
inc
xor
pop
push
ja
xchg
lock
push
daa
sub
daa
loop
sti
xor
mov
cmc
pop
pop
dec
mov
pusha
xor
cmp
les
mov
jecxz
out
repnz
shl
and
cmpsb
lods
xchg
xchg
cmc
sbb
xor
sub
jae
cmpsb
lahf
gs
cmpsl
or
rcll
and
adc
sbb
or
stos
push
inc
or
cltd
or
xor
xchg
xor
cmc
mov
jno
inc
inc
ret
shl
add
in
mov
or
pop
inc
rolb
push
andb
push
orb
andb
dec
pop
popa
xlat
out
push
xchg
push
imull
sub
call
out
xchg
jb
lret
adc
push
or
sti
pop
movsl
psrld
cmpsl
pop
mov
ds
arpl
mov
faddl
loope
sbb
xchg
cmpsb
inc
xchg
xor
jl
les
push
mov
shlb
xor
ret
cmp
insl
fnstsw
cwtl
push
idivl
cmc
mull
out
scas
adcb
adc
inc
sahf
ret
push
and
rolb
mov
adc
push
mov
cmpsl
and
mov
or
arpl
imulb
repz
dec
jno
mov
sbb
cmpsl
mov
ja
rcr
movsl
cmc
sbb
loopne
jae
jecxz
mov
in
outsl
test
outsl
pop
dec
pop
inc
pop
iret
inc
aam
add
jnp
inc
push
jae
xor
out
xchg
push
push
jmp
fdivs
inc
stos
and
xor
sbb
dec
xor
fcompl
mov
lds
nop
cwtl
and
lods
fiadds
inc
mov
push
loopne
jbe
cli
xchg
in
or
add
leave
notl
cld
sbb
pop
xor
in
push
push
lods
ljmp
or
xchg
jle
sub
mov
cmp
xchg
icebp
daa
add
jae
pop
mov
mov
jbe
test
ret
jl
mov
pop
test
pop
push
lahf
cmp
leave
pop
std
popa
sahf
push
test
loop
jg
xor
aas
test
inc
push
jno
popf
dec
or
jle
jmp
js
jmp
imul
lahf
out
iret
lret
loope
aas
and
test
xchg
jbe
lcall
xchg
and
fwait
dec
dec
add
ja
sbb
es
arpl
mov
xchg
adc
and
add
stos
mov
imul
or
repnz
sub
mov
lods
imul
push
mov
inc
jl
jle
in
push
stos
sbbb
das
push
mov
hlt
add
sti
aaa
aad
mov
out
orb
jg
or
mov
pop
lods
ja
lcall
pop
cmp
and
insl
xchg
das
dec
sbb
outsb
jns,pn
mov
in
sbb
nop
aam
pushf
add
in
js
mov
ja
xchg
sarb
mov
and
mov
cmp
pushf
inc
cmpb
xchg
fld
jbe
lods
dec
push
jp
pop
cmpsb
push
jle
lcall
dec
stos
lret
imul
imul
dec
movsl
out
arpl
add
mov
pop
and
std
mov
ret
test
cmp
mov
into
movsl
movsb
repnz
jge
notl
lods
push
pop
test
insb
push
sub
movsb
jbe
adc
xor
jmp
stos
and
xchg
pop
xor
jbe
push
xor
sti
fs
pop
icebp
into
stos
mov
jle
mov
cmc
stos
sub
mov
je
rcrl
cs
mov
cmp
orb
mov
sbbb
loope
adc
or
mov
xor
je
lcall
cwtl
stos
dec
in
adc
ljmp
in
sub
cmp
push
into
in
mov
dec
mov
and
in
pop
loope
rorl
push
mov
adc
fwait
out
call
jmp
int3
lds
jae
mov
loopne
mov
stos
icebp
adc
mov
xor
repz
into
imul
dec
xchg
xchg
push
add
hlt
nop
jmp
dec
mov
push
or
add
mov
adc
fs
clc
imul
add
lea
aam
pop
leave
mov
and
inc
pop
rcrl
in
lea
and
rcrl
jecxz
fiaddl
sbb
xchg
enter
bound
inc
lock
jp
rcrl
and
xchg
mov
sbb
in
pushf
dec
test
adc
out
repz
dec
sarb
add
call
cmp
inc
cmpsl
inc
dec
dec
jmp
push
call
or
jle
adc
repz
dec
adc
fimull
or
call
stos
xlat
xor
sbb
cwtl
addl
cmp
mov
test
shlb
push
std
and
iret
or
xlat
scas
ss
jmp
in
dec
jp
cmp
in
popf
inc
gs
adc
sbb
test
and
ret
inc
imulb
add
push
fs
loope
mov
jle
fisubrs
cltd
push
push
or
jno
xchg
into
jae
test
ret
or
scas
andb
adcl
xor
shll
rcrl
scas
push
pop
mov
scas
or
fimull
jnp
sbb
fs
stc
loopne
cs
rcl
repnz
fimull
icebp
pop
fs
sbb
clc
mov
push
out
addl
push
jo
jmp
pushf
cwtl
insb
inc
dec
and
mov
pop
push
flds
movb
push
insb
mov
mov
insl
std
mov
jl
orl
dec
dec
fisubs
and
mov
pop
sub
inc
cvttps2pi
fsubrs
jb
mov
out
fsub
jle
repnz
xor
pop
mov
in
xchg
ror
inc
cmp
mov
xchg
sub
cmc
push
lea
sbb
jle
jge
pop
adc
adc
dec
in
pushf
iret
mov
push
loop
mov
cmp
js
sbb
cmp
adc
cli
lret
aad
mov
pop
xor
int3
sbb
add
test
in
sbb
push
popf
cmp
xchg
push
gs
aad
xchg
leave
xor
lock
pop
and
into
int3
out
xchg
push
and
xor
stos
gs
mov
jle
cmpsb
dec
push
mov
pop
ret
fdivr
add
inc
outsb
cltd
push
pop
insl
shll
mov
jae
cmp
jb
imul
pop
fnstenv
adc
aam
jmp
push
jmp
push
hlt
movsb
push
out
mov
outsl
xchg
movswl
inc
pop
nop
ss
mov
daa
stos
xchg
lret
mov
add
lcall
out
sub
loop
in
cmc
into
insl
xor
fabs
sbb
test
adc
insb
sbb
icebp
call
orl
mov
dec
scas
jmp
sahf
sbb
lods
rclb
jle
movsl
leave
cmp
cmp
adc
xor
push
adc
mov
xor
push
cmc
mov
cli
and
jmp
sub
xchg
or
xor
cltd
daa
inc
in
jge
adc
pop
xchg
pop
test
loop
add
sub
fldenv
dec
fnstenv
sub
fldenv
loop
in
or
and
xchg
pop
inc
pop
xchg
popl
insb
and
loope
dec
pusha
gs
aas
xchg
cltd
aad
jl
push
add
and
cmp
xor
mov
mov
or
xchg
add
mov
divb
hlt
push
leave
mov
sbb
cmpb
sub
mov
and
scas
or
adc
sub
notb
push
mov
pop
cmp
pop
in
out
fistps
xchg
xchg
pop
mov
sahf
mov
xor
jge
pop
sub
in
sub
loopne
and
add
jmp
cmpsl
mov
data16
out
mov
jns
dec
leave
std
xchg
xchg
xchg
jae
adc
add
sbb
lahf
cmp
xor
arpl
and
stc
inc
sbb
scas
enter
jae
test
lods
nop
adc
mov
xchg
and
and
test
adc
rorb
in
and
xor
cwtl
sub
mov
ss
xchg
adc
xchg
pop
jg
dec
repnz
roll
inc
adc
rorl
inc
les
daa
push
dec
xchg
inc
xlat
aas
push
adc
or
int
sub
add
pop
lea
idivb
stos
lret
mov
ljmp
cltd
iret
lcall
jbe
jmp
nop
mov
jge
inc
iret
imul
and
push
xchg
xchg
push
jb
aaa
inc
fistpl
ds
mov
cwtl
ret
push
insb
and
insl
popf
xchg
stos
jmp
push
pop
push
es
xor
aam
sub
mov
dec
adc
cmp
push
mov
push
mov
sub
jne
mov
sbb
aas
popa
inc
push
movsl
pop
push
sub
lods
xorb
sbb
mov
jne
int3
jno
mov
jae
push
movsb
aaa
pop
mov
cmp
xlat
push
mov
sbbl
loop
cs
inc
xchg
fiadds
icebp
cwtl
rcrb
xchg
cmp
cmpsb
adc
jb
push
mov
add
xorl
adc
xchg
inc
test
jae
fisttps
fs
pop
cmc
sbb
out
jle
imulb
dec
adc
jp
stc
fistpl
and
dec
arpl
sbb
loop
faddl
jle
cmpsl
ret
leave
push
es
add
add
call
xorb
imul
cmp
inc
pop
or
xchg
push
je
pop
cmp
sub
jno
sbb
adc
iret
inc
clc
sub
mov
es
out
scas
xchg
add
adc
push
ja
es
mov
xor
cli
fsubrs
and
sahf
mov
aas
inc
add
cmp
dec
adc
mov
sub
pop
lahf
xor
dec
and
inc
jb
pop
and
sub
or
aam
ret
fsts
inc
xor
in
xor
add
dec
or
clc
fnsetpm(287
inc
pop
call
mov
pop
add
mov
xorb
mov
adc
adcb
cmp
or
mov
in
sti
add
or
cmc
mov
ret
ror
xchg
in
stos
mov
dec
and
lods
sub
push
adc
xlat
les
outsl
enter
popa
mov
dec
sarb
inc
sbb
pop
fcomps
inc
inc
pop
cmp
lcall
xchg
in
jbe
xchg
out
fcoms
sar
dec
das
stc
fistpll
test
sub
push
movsb
test
in
mov
or
sbb
dec
add
mov
mov
loopne
mov
mov
cmpsb
dec
scas
sub
jg
sbb
stc
out
mov
fst
jne
mov
fdivl
adc
dec
sbb
push
ja
out
in
push
mov
push
ret
nop
ljmp
jmp
aam
add
test
sbb
adc
and
xor
lods
xor
lods
mov
jno
cltd
mov
retw
sbb
loop
cwtl
jo
or
dec
das
lahf
popa
adc
aaa
push
add
cmp
cli
lods
lods
js
out
mov
lret
mov
fldt
fisubrl
and
push
arpl
ficoml
pop
out
adc
sbbb
xchg
and
mov
add
mov
or
sbb
mov
in
test
sub
rcrl
lods
xor
and
sub
or
pop
mov
jns
push
in
ret
ds
fwait
sub
mov
sbbb
and
int3
xor
push
sub
sahf
popa
jle
je
fisubrs
sub
jmp
xchg
adc
cli
sarl
pop
and
and
lea
mov
sbb
xor
sahf
icebp
pop
addb
push
inc
lods
popa
xchg
roll
cmpsb
or
aas
test
je
push
ja
outsl
stc
cmpl
cmp
stos
pushl
call
stos
je
test
jmp
arpl
mov
jae
stc
dec
xor
mov
fdivl
daa
adc
sahf
sub
out
ljmp
inc
ds
mov
inc
xlat
sbb
adc
xchg
mov
rcrb
adc
movsl
ret
sub
enter
push
fs
push
jmp
mov
xchg
in
xor
inc
movsl
iret
stos
mov
mov
mov
les
mov
xor
xchg
pop
mov
push
shl
sbb
push
mov
sti
jg
mov
or
dec
or
rcll
inc
out
ja
ljmp
test
loopne
insb
pop
xchg
add
add
xchg
mov
sub
insl
push
inc
mov
push
les
ljmp
sub
lret
dec
xchg
addr16
daa
mov
jo
insl
out
xor
push
aaa
or
sbb
bound
insb
or
lods
inc
inc
clc
xor
flds
inc
mov
xchg
cmp
adc
addr16
push
jl
dec
and
xor
fwait
pop
and
iret
xchg
jnp
xor
push
or
push
bound
or
dec
sbb
pop
cmp
sbb
in
xor
sub
xor
cmpsb
fistpll
pop
xchg
shl
jnp
jecxz
stos
in
lods
push
scas
sbb
mov
jo
adc
mov
jmp
es
xchg
inc
iret
pop
sub
sbb
arpl
ficoms
mov
push
mov
and
fwait
aad
les
adc
pop
hlt
mov
and
add
imul
jb
push
int3
jnp
and
jbe
push
addr16
mov
ja
orl
sbb
je
scas
lret
lods
aad
nop
sti
movsb
subl
pop
dec
inc
into
testb
das
outsl
xor
and
out
iret
sahf
dec
std
movsb
jp
jge
fs
loop
fdiv
inc
xchg
lods
mov
push
addr16
jb
aad
add
mov
sti
lret
data16
add
inc
inc
aam
ljmp
leave
xchg
jecxz
sub
fs
fdivrl
cmpsb
dec
imul
cmp
sub
adc
test
adc
xor
dec
ljmp
icebp
xchg
xor
dec
push
pop
lock
and
cmp
fistpll
mov
mov
lret
add
gs
mov
xchg
add
cmp
push
pop
cmp
adc
lock
dec
push
jle
lcall
push
jp
ret
in
data16
and
and
jne
inc
xor
mov
das
mov
push
out
out
add
stos
pop
out
xorl
push
and
enter
ret
lods
ret
push
adc
fsubp
push
xchg
int3
clc
push
xlat
adc
add
xor
jmp
mov
sub
cltd
mov
add
shrb
lds
call
mov
xchg
fwait
sub
out
lret
sbb
jmp
in
inc
xorl
mov
enter
aam
cmp
inc
pop
pop
in
mov
xor
or
xorl
leave
in
popf
repnz
xchg
mov
scas
jl
cli
dec
xchg
fisubs
adc
ficomps
mov
pop
out
fadds
mov
std
enter
fabs
sbb
or
imul
je
add
stos
pop
pop
xor
lea
xchg
mov
pop
xchg
sbb
je
mov
mov
inc
loope
xor
push
mov
pop
sub
xchg
or
lcall
cmp
jns
js
xor
call
jge
jecxz
add
stos
jnp
movsb
mov
sbb
xchg
push
lds
push
pusha
jnp
sti
xor
mov
fsubp
or
movsb
inc
push
scas
into
push
stos
daa
scas
mov
lret
or
push
fildll
popf
out
dec
in
xlat
das
push
test
mov
inc
xchg
or
in
sbb
xor
fstps
mov
insb
xchg
das
pushl
in
dec
mov
movsb
add
push
icebp
mov
adc
mov
xchg
push
sub
or
test
mov
xor
push
lods
leave
add
or
cmp
pop
mov
dec
jbe
rclb
sarl
fidivrl
popf
test
jl
or
adc
nop
ror
pop
and
arpl
adc
fisubs
loope
cltd
gs
lods
inc
add
jecxz
cmp
in
jb
jno
dec
pop
pop
jbe
sbb
xor
popa
daa
rorb
or
jg
pop
scas
imul
xor
fwait
dec
sahf
mov
insb
test
in
les
jnp
scas
inc
mov
inc
dec
mov
xor
ss
jge
ror
mov
mov
ficoms
mov
sbb
jne
popf
enter
cmp
xor
ror
mov
ret
pop
xlat
xchg
das
jp
test
scas
pop
xchg
mov
add
push
ljmp
inc
push
inc
jmp
sahf
icebp
mov
leave
es
mov
outsb
sbb
jp
push
gs
cltd
loop
xor
add
sub
jae
or
xlat
xor
mov
pop
loopne
mov
insl
stos
jle
cld
pop
fs
xchg
xchg
sahf
mov
rcl
aas
or
or
out
bound
dec
push
inc
pop
sub
jmp
add
xchg
bound
or
add
aas
or
jl
lret
daa
cld
jmp
stc
stc
inc
inc
mov
push
call
inc
fs
push
fs
push
and
fs
push
inc
fldl
jne
ss
test
xor
cwtl
test
ja
push
dec
mov
sub
arpl
mov
sbb
xchg
mov
stos
xor
xchg
push
loope
in
push
js
mov
add
xchg
loop
xor
push
fwait
ljmp
inc
fs
fdivrl
ficompl
xchg
lock
fmuls
jge
xchg
call
pop
pop
lds
out
pop
mov
mov
rcrl
inc
mov
lcall
mov
sub
daa
imul
jle
shl
push
lea
hlt
push
loopne
xchg
jno
cmpsb
pop
not
je
sahf
loopne
iret
adc
aas
sub
xchg
lods
les
cld
popa
sub
pop
add
jns
mov
fists
cmpsl
push
testb
jl
lds
and
insb
cmp
stc
mov
mov
add
pop
fcmovnb
frstor
dec
inc
aam
out
mov
pushf
imul
jecxz
data16
dec
popf
jbe
xor
cs
lcall
mov
push
cmp
jnp
fmuls
js
xchg
scas
sbb
bnd
addr16
or
inc
sub
sub
cs
popa
jns
xchg
mov
push
push
ds
outsb
sbb
in
mov
mov
imul
inc
push
test
outsb
in
mov
dec
aam
cmp
test
call
fwait
push
xchg
insb
fcoml
repnz
int
call
call
into
loop
test
jns
out
mov
cld
pop
pop
nop
xchg
jmp
loopne
in
sti
sub
enter
jne
ret
aam
or
jnp
xor
xchg
stos
pop
or
sahf
inc
cwtl
add
mov
dec
jb
loop
dec
stc
fstpt
push
lret
cmp
out
jg
dec
mov
mov
fmuls
push
xchg
jne
fcmovnbe
icebp
push
and
mov
cwtl
cmc
mov
pop
mov
mov
stos
dec
and
les
into
pop
nop
cwtl
repz
stos
test
loopne
or
pop
fwait
lret
pusha
or
frstor
sbb
mov
or
shrl
jb
and
xor
mov
pop
sar
inc
xchg
popf
shll
test
call
cmp
sbb
pop
mov
movsl
mov
push
cmc
rorl
cli
adc
mov
cmp
cs
sub
insl
or
sbb
fsubrl
push
movsl
cmpsl
js
cmp
pusha
xor
sub
sbb
xchg
rcrb
mov
js
add
pop
ror
mov
push
pop
dec
bound
fnstcw
xchg
dec
testb
jbe
adc
or
xor
fdiv
or
mov
cmpsl
aas
lods
and
lock
das
lahf
nop
add
aam
push
mov
jge
sub
inc
xchg
out
lcall
rol
xchg
xlat
leave
call
jmp
or
jmp
push
pop
cmp
fsubr
mov
pop
inc
clc
notb
fidivl
push
jg
adc
fsts
shl
xchg
mov
sub
push
xchg
and
daa
dec
sub
push
xor
sbb
dec
push
pop
pushf
fwait
in
andb
icebp
sbb
mov
or
pop
test
inc
lahf
mov
inc
add
sahf
fsubr
xchg
stos
push
push
mov
addb
call
inc
sub
sub
add
cmp
pushf
or
sbb
icebp
sub
fwait
enter
in
icebp
xor
das
fstpl
sahf
mov
ds
scas
ret
fsts
pop
fisttpl
inc
or
push
dec
fs
or
popa
inc
mov
adc
pop
mov
pusha
cld
test
push
push
sti
jle
and
mov
jecxz
mov
je
scas
pop
push
cld
mov
out
outsl
sub
sbb
mov
mov
inc
inc
mov
cld
sub
mov
mov
mov
jge
fidivl
cmp
fwait
imulb
sbb
leave
mov
fistpll
push
fcoml
inc
test
pop
cmp
aam
outsl
leave
xor
xchg
adc
xor
push
aas
pop
pop
cmc
sub
imul
call
push
add
out
loopne
enter
sub
add
mov
push
dec
mulb
pop
call
cs
push
jmp
mov
inc
inc
sbb
icebp
lock
or
movsb
sbb
out
push
pop
imul
sbb
mov
insl
rorl
sbb
ss
clc
and
std
into
jecxz
clc
push
lods
xlat
mov
mov
pop
sub
and
mov
pop
ljmp
mov
sti
nop
add
inc
add
lahf
jecxz
out
test
idiv
out
lods
icebp
sub
and
push
mov
adc
imul
cmpsb
mov
mov
out
fistps
loope
movsb
jmp
mov
dec
faddl
adc
xchg
test
cmp
test
pop
pop
jmp
jno
aas
int3
call
or
push
jge
pop
arpl
std
mov
nop
enter
pop
vzeroupper
jge
sti
lods
mov
dec
xor
push
inc
jae
icebp
out
sti
cmpb
scas
jle
push
rolb
test
cli
xor
ja
adc
das
sti
js
loope
in
pushf
mov
pop
imul
pop
lods
lahf
mov
jns
rolb
adc
out
fldenv
pop
lcall
adc
lret
jb
jnp
pop
mov
mov
imul
mov
je
and
stos
addb
aaa
shr
mov
mov
mov
mov
mov
cmp
out
pusha
insl
je
pop
sbb
and
rcrb
and
mov
xor
and
jg
hlt
add
xor
in
jno
inc
lahf
jmp
inc
xchg
shl
mov
jle
cmpsl
stc
xor
add
mov
or
pop
into
xchg
mov
fcmovu
push
push
xor
mov
xchg
mov
xchg
mov
cs
pop
loop
int3
push
sahf
andl
aam
orb
movsb
add
push
pusha
mov
cmp
add
adc
shr
addr16
scas
cmp
pop
idivl
add
daa
ja
repnz
stc
scas
mov
cmp
or
sbb
mov
or
shl
leave
or
xchg
jp
mov
and
jg
sbb
test
gs
outsb
fs
push
in
push
cmp
lock
pop
sub
adc
fcmovbe
adc
or
icebp
stc
sub
pop
xor
or
fsub
popf
pop
add
jmp
or
xchg
mov
lahf
mov
push
mov
add
or
outsb
inc
insl
sub
out
gs
xor
xor
sbbb
pop
lds
push
call
xor
clc
mov
imul
call
or
fsts
int
leave
lods
and
icebp
fwait
cmpsb
scas
pop
shlb
icebp
add
daa
cmp
sub
xor
xor
mov
inc
dec
adc
adc
sbb
inc
mov
in
lahf
xor
jle
inc
push
pop
sbb
jno
negb
aad
mov
or
cmpsl
dec
lock
jge
pop
mov
jmp
mov
cmp
mov
mov
jae
push
and
cmp
jne
add
fadds
loop
repnz
and
push
jns
dec
mov
addr16
data16
sub
cmp
mov
sub
cli
jp
add
repnz
scas
shlb
dec
jmp
inc
pusha
loopne
cmp
or
rorl
lea
adc
loop
addr16
jmp
pop
and
loopne
fbstp
subb
les
rcrl
clc
or
adc
sub
lahf
sub
leave
mov
dec
add
icebp
popl
scas
andb
mov
inc
dec
fwait
dec
dec
cltd
and
loope
jb
jl
fwait
or
jae
repz
shl
lahf
sub
jmp
xor
nop
sub
and
cltd
aad
std
fwait
gs
es
dec
mov
jle
stc
loopne
sub
into
adc
mov
aaa
jge
or
popf
mov
gs
sub
fldcw
call
add
mov
lds
sub
out
sub
decl
iret
sarl
mov
movsl
mov
loop
int
cmc
cltd
mov
pop
aad
sbb
and
jbe
dec
out
insb
xchg
sarb
lret
add
pushf
ss
mov
push
mov
cltd
pop
adc
insb
mov
sbbb
cmp
aam
bound
pop
popf
xor
mov
dec
mov
out
aaa
push
inc
repnz
lahf
push
fsts
dec
mov
push
addb
dec
rorl
fidivs
ret
shrl
cwtl
jb
add
movsb
cld
jmp
jbe
mov
push
xor
and
inc
adc
and
mov
dec
loop
nop
and
icebp
fcompl
mov
lea
pop
mov
pop
scas
pop
or
pop
das
xor
and
cmp
test
sbb
mov
dec
cs
loope
ljmp
imul
mov
popf
jno
movsb
push
pop
sbb
fsubr
arpl
or
pop
cmp
cltd
pop
jl
out
clc
cwtl
test
lea
inc
out
jge
inc
inc
leave
mov
stos
pop
ja
stc
jns
push
lahf
sub
stos
fdiv
pop
test
test
sub
int
fnop
loopne
jmp
push
mov
test
jmp
mov
lea
jg
mov
jno
xor
jge
dec
dec
inc
xor
rorb
test
out
aam
push
frstor
iret
out
dec
pop
outsl
out
fs
xchg
push
cmp
rcrl
addb
and
xchg
sar
mov
pushf
in
mov
aas
mov
stc
mov
stc
out
int
lods
cmp
test
or
add
xor
mov
leave
clc
pushf
jle
lret
lahf
clc
mov
call
out
ss
lds
ds
clc
ja
pop
mov
inc
movsb
xor
cmc
mov
push
lods
fsubrs
cwtl
lock
sub
fs
mov
mov
mov
mov
in
mov
das
push
repz
xor
int
adc
js
inc
dec
xlat
push
and
dec
sbb
pop
cmpsl
insb
cltd
xchg
popf
leave
push
jns
mov
xorl
sti
xchg
push
sbb
mov
pop
add
pusha
add
lcall
cmp
aad
add
add
dec
or
into
push
mov
jge
pop
mov
cli
ss
jmp
movl
xchg
andl
push
mov
in
dec
icebp
mov
test
push
jns
call
mov
lahf
enter
jne
fsubl
std
test
test
hlt
add
in
scas
push
ja
rcrl
xchg
lods
add
lret
jecxz
arpl
repnz
bound
xor
bound
jnp
cmpsb
movsl
stc
adc
add
iret
mov
push
pop
leave
or
insb
lock
inc
xor
rorb
lret
enter
out
enter
sub
xchg
cmp
sub
mov
lock
pop
jmp
pop
cltd
push
xchg
mov
xor
sar
jmp
xchg
mov
sarl
into
push
repz
sub
jbe
add
xchg
and
pop
in
add
repnz
push
mov
or
loopne
cmp
jle
mov
adcl
xchg
imull
loopne
mov
mov
and
adc
in
mov
fs
iret
mov
cli
cmp
or
mov
push
jle
mov
outsb
mov
mov
shrb
fdivr
dec
cmp
xchg
mov
aas
pushw
pop
sbb
loopne
dec
ret
call
dec
push
sbb
sub
add
nop
sbb
inc
pusha
and
pop
pop
ret
ljmp
lret
add
nop
mov
stos
push
ret
fcoms
sysenter
ret
out
pop
outsb
pop
testb
jb
and
mov
int3
push
repnz
jb
push
int3
mov
cmp
push
push
fcmovu
mov
pop
das
adc
mov
sbb
mov
cld
inc
push
addr16
mov
popa
clc
mov
clc
aam
int
cmc
jle
icebp
or
push
out
les
in
lea
sub
mov
cmc
loope
adc
je
shr
xchg
in
mov
call
jne
icebp
js
nop
in
mov
enter
add
adc
add
mov
add
jp
xchg
push
sbb
mov
cmpsl
fwait
insl
rorb
inc
push
xchg
adc
add
addr16
imul
and
fstp
jno
sahf
mov
adc
pop
clc
mov
outsl
test
pusha
pop
in
fwait
cmc
add
pop
dec
test
in
lret
hlt
jns
add
jbe
imul
mov
dec
nop
das
xor
xchg
je
mov
xor
mov
pop
movsl
out
fs
push
add
or
stos
and
push
stos
jne
pop
push
add
lret
or
xchg
je
sub
fisubrl
stos
mov
fwait
int3
jo
inc
xchg
pusha
mov
xchg
jg
or
lret
dec
adc
es
mov
ss
push
mov
sbb
data16
aas
push
lahf
pop
jp
mov
fiadds
inc
adc
sbb
testl
or
add
cld
mov
add
cmc
inc
inc
adc
int
mov
pop
fs
jl
int3
push
adc
std
cmc
pop
dec
sbb
pop
fsubrl
lock
mov
mov
dec
push
mov
rcr
xlat
cmc
jg
mov
ja
int
shll
push
mov
test
stos
movsl
imul
push
sbb
cmp
adc
negb
jns
mov
out
xor
xor
mov
call
pop
or
jb
out
in
lods
or
mov
mov
push
mov
mov
mov
stos
sbbb
out
push
push
mov
push
and
or
and
jo
sub
add
stc
cwtl
push
cmpsl
sub
adc
sub
push
mov
xchg
mov
inc
inc
push
adc
call
add
push
adc
push
xchg
push
lahf
mov
or
sti
push
xor
inc
sahf
cmp
add
jg
stos
fisubs
adc
test
mov
push
shlb
nop
outsb
cmp
cwtl
stos
cli
xor
out
mov
daa
out
jns
jmp
es
dec
and
mov
jo
dec
sub
pop
pop
cmp
out
xchg
jns
adc
cmp
mov
arpl
jmp
sub
in
push
lret
popf
or
mov
dec
sarl
vpsrlw
jp
sub
push
aad
pop
mov
sub
or
sbb
out
pop
sub
and
inc
cltd
or
lea
hlt
add
std
mov
or
adc
cmp
leave
add
cmpsb
out
stos
mov
and
add
dec
pop
scas
or
sbb
push
test
pop
dec
sbb
push
enter
fstpl
aas
fdivrl
mov
sti
out
jle
out
sbbl
cmp
pop
fsubl
and
sub
gs
lock
cli
test
lret
adc
jmp
inc
jb
cli
and
pop
jbe
in
sbb
mov
mov
repnz
pop
jne
cld
int
xchg
inc
xor
xchg
addr16
xor
pop
sub
movsl
dec
fisttpll
lret
leave
fisubrs
xchg
jnp
jecxz
adc
pop
adc
shll
xchg
adc
cmc
lods
repnz
ds
or
mov
ljmp
mov
jnp
sub
xchg
fdivr
jl
xchg
stos
jae
gs
int3
gs
or
outsb
xor
hlt
lcall
sahf
pushf
pop
inc
cmp
movsb
push
jo
repnz
clc
mov
loope
repz
lret
test
jb
icebp
xor
cli
bound
fimull
sub
mov
out
mov
jbe
xlat
insb
pop
jb
bound
sbb
mov
adc
push
push
xchg
ja
sub
cli
sub
sbb
mov
shrl
ljmp
loopne
leave
imul
ja
inc
in
mov
pushf
fstps
mov
pusha
mov
aaa
xchg
int3
inc
add
iret
fcoms
popa
push
push
inc
dec
jecxz
xor
dec
jp
icebp
pop
jae
mov
wrmsr
inc
scas
xor
pusha
lock
out
xor
inc
jl
or
sbb
data16
mov
dec
les
aad
or
inc
out
jno
xchg
test
test
jnp
roll
es
lods
pop
sbb
lret
mov
inc
mov
push
into
sub
mov
and
bound
rcll
and
mov
push
xchg
inc
js
clc
jb
ficomps
shlb
inc
mov
data16
cmpsb
mov
push
fistps
xchg
fldenv
xchg
icebp
outsb
outsl
inc
push
inc
push
cld
stc
inc
jbe
and
ror
in
enter
sub
cltd
mov
out
out
dec
out
jl
in
sahf
sbb
jmp
rcll
stos
pop
cmp
ljmp
lea
out
dec
adc
jo,pn
xor
rcll
xor
adc
dec
mov
mov
mov
mov
and
push
jl
insl
imul
jb
xchg
int3
add
xor
jg
dec
cmp
push
sti
in
stos
mov
and
jo
fmul
jae
cmp
lahf
and
into
fstpl
add
fxch
stc
adc
nop
fldt
int
jg
pushf
sub
test
hlt
js
sub
push
and
xchg
outsl
add
mov
add
int3
cwtl
js
and
pusha
std
push
nop
repnz
addr16
sbb
in
out
mov
stc
int3
mov
dec
ljmp
mov
adc
insl
jle
shrb
add
xchg
cmpsl
sbbl
sarl
rolb
testl
jno
sbbl
add
sbb
lret
xchg
sbb
out
pop
roll
out
lcall
and
imulb
test
out
ds
je
sbb
mov
lods
inc
stc
ljmp
add
andb
and
push
cmp
ljmp
mov
inc
cld
jb
stos
cmova
sbb
je
xlat
pop
dec
push
in
add
jns
lods
enter
clc
mov
gs
push
outsl
push
inc
cltd
repnz
pop
cmp
or
sahf
fildl
dec
push
xor
sahf
std
push
stos
xlat
inc
push
adc
dec
stos
cld
fstpl
imul
sub
cs
mov
push
into
adc
stos
mov
jb
mov
nop
xor
mov
push
aam
and
xchg
mov
add
sbb
call
push
clc
sbb
push
pop
orl
ss
mov
out
daa
lret
and
sbb
pop
lea
pop
aad
fadds
pop
xor
fldl
jle
jae
mov
adc
lea
pusha
cs
mov
inc
xor
out
jmp
mov
loopne
sbb
jg
clc
jae
xor
repnz
xor
inc
mov
jmp
inc
nop
ljmp
sbb
subb
pop
cmp
add
js
sarb
mov
add
jl
add
jae
mov
jo
or
out
mov
jmp
sahf
cltd
fwait
stos
aad
xor
pop
imul
mov
fstpl
mov
sub
sbb
and
adc
push
cmp
lods
loop
and
sbb
leave
or
cli
xlat
add
icebp
and
mov
mov
mov
pop
pop
aam
xchg
andl
shl
xchg
push
sub
xor
popf
in
aas
jbe
jae
icebp
inc
add
flds
icebp
rorl
mov
imul
pushf
fs
pop
out
mov
fldt
out
insb
pop
fsts
add
sahf
cmp
pushf
and
fstl
push
adc
push
roll
rorl
mov
std
mov
mov
fstpl
push
arpl
cwtl
dec
and
cmp
ss
lret
mov
fistps
imul
push
jecxz
jno
ja
mov
mov
movb
sub
out
adc
outsb
test
lea
insl
cmpsb
mov
push
imul
sbb
and
mov
xor
enter
jns
lods
stos
dec
ja
test
ja
sbb
push
adc
sub
movsb
and
mov
lret
add
push
push
insl
pop
imul
mov
sub
xor
mov
xchg
daa
rolb
xchg
adc
mov
cltd
and
mov
out
xchg
das
divps
push
adc
fcmovnu
out
lea
cmc
gs
imul
mov
icebp
movd
lea
xchg
in
les
popa
mov
xchg
in
cwtl
jnp
sarb
stc
nop
stos
mov
sbb
xchg
gs
push
sub
enter
cmc
cmpsl
xchg
mov
insb
in
dec
xor
in
push
aaa
push
addr16
shrl
pop
push
popf
cmpsb
test
xorw
dec
pop
jmp
out
mov
sub
mov
das
addb
int
sbb
pop
dec
cli
mov
jno
add
out
push
push
iret
in
pop
mov
js
call
fbld
test
fistl
icebp
mov
mov
jg
loop
les
push
fcomps
mov
int
mov
dec
out
mov
fnstenv
xor
ret
pop
xor
xlat
stos
setge
mov
not
test
xor
and
sbbl
push
je,pt
lea
aad
outsb
mov
or
inc
cld
pop
jnp
jns
adc
fstpt
mov
gs
out
jl
push
fnstenv
fwait
incl
add
jg
xor
rcll
xchg
inc
cmp
or
cmp
cs
imull
adc
addr16
test
dec
cmpsb
loope
push
cmp
addr16
or
mov
sbb
push
std
sub
jmp
int
out
insb
mov
daa
hlt
in
ficomps
adc
mov
mov
sbb
dec
inc
scas
sbb
jb
push
and
sbb
jne
stos
mov
dec
mov
cwtl
stc
ss
outsl
lock
lock
xchg
sub
xchg
imul
jge
cmp
mov
push
test
xchg
insl
xor
jno
add
call
cld
sub
movsl
xor
pop
or
inc
fstl
xor
sub
lcall
enter
pop
sbb
pop
aad
inc
dec
mov
ds
sbb
xchg
into
lea
sub
mov
adc
jecxz
fcmovbe
xor
sahf
sarl
pop
out
sbb
push
shll
or
and
mulb
xor
mov
xchg
dec
int
sarl
insl
pop
adc
pop
xor
adc
lgdtl
daa
sbb
mov
insl
mov
xor
insb
xor
cmp
out
inc
push
mov
mov
je
inc
inc
imul
sarb
xor
jb
lods
imul
stc
ficoms
jnp
inc
and
jl
dec
cmc
mov
cmp
loopne
inc
ret
sub
xchg
in
leave
cmp
sub
add
mov
loope
fucom
xchg
mov
cmp
icebp
inc
sbb
cmpsb
adc
cmp
sbb
xchg
push
inc
or
push
lods
repnz
call
imul
and
push
jle
nop
push
dec
ss
sbb
iret
mov
pop
dec
jmp
out
mov
rol
mov
and
jnp
inc
call
xor
cmp
xchg
add
and
sbb
test
insb
arpl
cmp
stc
mov
lahf
loop
bound
pop
jnp
sub
lds
aas
fisttpl
or
hlt
pushf
loopne
sbb
dec
or
pop
mov
xlat
push
adc
pop
mov
sbb
popf
lock
push
push
lahf
pop
int
mov
pop
mov
fdivs
mov
and
inc
or
ljmp
cmp
dec
inc
subb
out
repnz
and
popf
and
pop
inc
mov
pop
push
fsubr
xchg
jno
dec
sub
jne
xchg
dec
mov
cmp
aad
pop
hlt
inc
dec
repz
aaa
idivb
inc
xchg
rorl
and
inc
cmp
outsl
fisubs
fistl
pop
jbe
fisubrs
test
fwait
in
xor
cmp
mov
mov
adc
and
push
sbb
fidivs
aaa
insl
dec
dec
pop
cmp
in
push
mov
pop
and
loopne
movsl
iret
pop
rclb
inc
cmc
test
out
pop
jecxz
mov
add
movsb
add
sarl
push
stos
mov
int3
mov
mov
sysret
mov
cs
outsb
sub
adcb
pop
and
pushf
jl
push
rcrb
pop
adc
mov
shlb
inc
and
cmpsb
mov
loop
xchg
in
push
push
gs
je
movups
jge
push
jmp
ret
es
mov
mulb
inc
pop
xchg
lcall
shll
jmp
and
pop
push
or
or
dec
mov
jo
push
aad
add
sar
mov
popa
cmp
mulb
daa
call
rclb
sahf
sub
imul
daa
out
mov
jp
pusha
test
add
inc
cmpsb
inc
nop
je
dec
jbe
imul
lret
pop
out
inc
enter
gs
mov
or
ret
mov
je
addr16
mov
xlat
in
push
imul
cmpsl
into
jb
lcall
out
test
jmp
popf
push
fsts
sbb
inc
dec
aad
mov
scas
inc
push
cld
orl
ljmp
adc
divl
cmp
test
fst
cli
xorl
or
adc
sbb
xor
jnp
xchg
out
adc
test
dec
clc
xor
fisttpll
push
rorl
sahf
pop
inc
mov
repnz
push
lods
lods
sbb
daa
jo
adc
faddl
int3
pop
jns
sbb
cmp
xchg
fnsave
push
xor
pop
inc
ret
popa
scas
enter
shr
lret
or
mov
push
push
add
scas
movsb
push
ret
and
xlat
filds
jbe
cmp
mov
hlt
call
pop
es
out
stc
push
in
sub
add
push
dec
cmp
lret
out
adcb
add
loop
push
mov
lods
and
rclb
lods
setp
ja
daa
mov
fstpl
call
nop
js
cmp
shll
xor
mov
in
mov
popa
scas
das
loopne
das
adc
pusha
lds
loop
aaa
inc
enter
lds
pop
inc
lea
or
gs
lock
lds
sahf
push
dec
pushf
mov
xchg
mov
mov
mov
std
jnp
jle
mov
popf
iret
lods
fistl
push
leave
cmp
push
sbb
xor
cmp
push
popa
sbb
jo
out
ret
div
jmp
in
movsl
loopne
js
popa
adc
hlt
mov
cmp
cltd
sbb
cltd
loope
les
mov
call
stos
jecxz
cmpsb
ja
pop
rcrl
push
mov
adc
push
outsl
xchg
inc
and
pop
fidivrl
fadds
xlat
push
jge
fcomps
xlat
rorl
inc
std
imul
sub
adc
stc
ja
jo
iret
lret
jae
mov
sbb
call
xor
cs
inc
pop
xchg
jle
loope
and
sbbl
and
mov
sub
adc
testb
mov
imul
stos
or
out
movsb
aas
repnz
lret
cmp
stc
mov
cmp
mov
in
outsb
cmpb
cltd
jmp
xchg
xchg
pushf
ss
xchg
xor
inc
fcmovbe
test
inc
das
popf
mov
repnz
filds
push
jo
adc
movzwl
popa
dec
jmp
mov
clc
add
cltd
sbb
bound
inc
imul
cmp
mov
mov
pop
out
imul
adc
add
cmc
loopne
das
mov
rclb
fimull
inc
test
mov
inc
call
push
or
jge
popa
mov
dec
sub
mov
mov
nop
inc
mov
mov
in
aaa
and
mov
ljmp
push
dec
jno
movsl
pushf
test
push
insl
jnp
scas
dec
das
inc
stos
out
popf
or
push
jno
or
leave
mov
pop
mov
xchg
in
and
insb
xor
jnp
xchg
jge
and
fldcw
push
push
add
adc
insl
xchg
jo
test
pop
lock
shrb
pop
dec
pop
push
aaa
fistps
insb
push
push
fcmovnbe
and
stos
repnz
dec
fidivs
mov
pop
xchg
pop
xchg
pop
cmp
test
outsl
mov
cltd
mov
aas
adc
mov
jbe
jle
arpl
cmp
roll
mov
add
int3
aad
cmpsb
jp
cld
add
imul
sub
dec
adc
xchg
xor
mov
fwait
test
scas
push
ss
fisubrs
cli
stos
add
add
xchg
dec
push
aad
cltd
pop
and
ret
aam
push
inc
test
sbb
jle
addr16
out
jae
int3
cmp
push
jmp
out
shlb
outsl
fisttpl
outsb
adc
jno
into
mov
pop
sbb
lods
cli
sub
jmp
xor
fstpl
lods
dec
outsb
stc
cmp
lods
mov
push
push
and
std
stos
mov
aas
shlb
mov
add
imul
aam
mov
jp
mov
dec
scas
xchg
inc
push
add
cmc
mov
aad
int3
mov
inc
mov
ljmp
std
pop
mov
cmp
jmp
push
sub
pop
call
inc
and
and
adcb
sti
lds
adc
ficoms
mov
jo
push
lret
pop
inc
mov
ret
cmp
or
fidivrs
jmp
sti
jmp
xchg
xchg
cmpsl
push
int3
shlb
mov
call
cs
jnp
loope
sub
testb
dec
mov
aad
test
cmp
movsb
rorb
cwtl
fildl
and
pshufw
loope
jecxz
mov
ds
mov
sbb
das
jb
testb
adc
in
aaa
jmp
mov
jg
cmp
ret
cld
es
dec
sarl
insb
push
xchg
pop
push
pop
cmp
lea
mov
inc
pop
mov
pusha
lock
std
add
aad
xchg
aas
sub
or
cli
mov
xorb
cmp
je
out
or
pushf
enter
jne
inc
out
pop
js
jae
int3
leave
cltd
adc
ljmp
test
inc
xchg
adc
mov
pop
mov
or
jl
aaa
ja
push
outsb
lea
mov
mov
int
mov
les
lcall
jle
fidivs
bound
stos
or
in
mov
mov
popa
lret
into
fwait
mov
cmpsl
cmp
and
mov
push
mov
je
or
cmc
sub
rorb
mov
cmp
loope
mov
cmp
shrb
lods
fisubl
clc
cmp
shll
iret
rorl
or
and
jns
movsb
das
add
xchg
dec
scas
jge
adc
inc
andl
push
lea
mov
cmp
in
push
xchg
lods
push
out
xchg
cmp
mov
jns
inc
cmpsl
mov
aaa
rep
sbb
in
cwtl
iret
mov
dec
mov
incb
xchg
mov
cmpsl
mov
mov
iret
pop
call
dec
cmp
cmp
rclb
push
outsb
js
push
xchg
mov
rcl
iret
push
mov
lock
mov
pop
mov
jae
push
pop
jge
into
pop
cld
cmp
outsl
jnp
mov
sti
jg
sbb
sbb
lcall
xchg
enter
sbb
je
popa
and
mov
fxch
push
call
jl
sub
mov
loopne
cmp
xchg
addr16
std
jae
fisubs
scas
cmpsb
mov
pop
dec
cmpsl
pop
adc
loop
jl
inc
loope
mulps
or
negb
inc
lea
mov
xor
popf
and
shrb
out
ds
inc
xchg
cmp
mov
xchg
cmp
jne
in
add
loopne
mov
stos
cmpsb
out
jl
repz
cld
sub
sub
lret
sti
push
mov
test
pop
daa
pop
cmpsl
sbb
add
xchg
push
lods
push
ret
lret
lret
jg
mov
shlb
sub
rorl
sub
rcrb
pop
stos
mov
mov
adc
sbb
and
mov
fcmovnbe
jmp
mov
out
xor
pop
jmp
or
mov
pusha
and
sub
inc
jae
sub
sets
daa
dec
jae
mov
mov
mov
push
mov
idivb
or
iret
nop
notl
data16
jg
jl
sbb
push
call
inc
jecxz
mov
pusha
outsb
stos
popf
loop
ds
sub
repz
roll
leave
leave
dec
lret
jge
jae
sti
mov
xor
cmp
cs
push
lahf
gs
in
mov
out
push
repnz
sahf
push
xchg
mov
add
js
xchg
xor
jp
and
jno
sub
sub
dec
xchg
clc
mov
mov
jne
xchg
sbbb
mov
aad
outsl
push
push
jnp
pop
repz
push
hlt
mov
xor
bound
fnstcw
mull
pop
fmuls
repnz
xor
xchg
cmpsl
mov
subps
push
push
jle
push
ss
push
push
movsb
in
mov
mov
or
in
arpl
out
hlt
fstpl
imul
sbb
xchg
jle
data16
test
scas
shlb
add
mov
push
addb
shll
cmp
mov
jmp
push
sub
aam
add
push
and
mov
pop
loope
cmp
jmp
lret
jge
test
xor
add
hlt
sub
stos
jns
push
popa
imul
loope
jb
push
aam
cltd
xchg
idivb
int3
stc
dec
pop
js
ljmp
addr16
push
lret
xchg
push
xchg
push
movsl
xchg
insl
stc
je
jnp
push
mov
call
mov
inc
not
fmuls
outsb
mov
fsts
mov
dec
or
and
jle
adc
and
dec
addb
mov
cmp
dec
xor
mov
xchg
xchg
scas
test
push
fs
mov
inc
je
sti
fnstcw
xor
aam
pop
insb
sti
inc
inc
bound
sbbl
mov
cmp
cmpsb
das
or
add
lds
cmp
repnz
movsl
daa
scas
das
push
lret
cmp
ret
xor
enter
ss
gs
jl
mov
imul
lods
scas
loop
sub
sbb
push
fsqrt
pop
add
je
dec
cmpsb
test
sbb
dec
mov
test
inc
stc
or
cmp
push
mov
pop
rcr
add
les
cs
rcrb
xchg
pop
inc
scas
ds
adc
out
jp
push
nop
repz
add
jp
xor
clc
jmp
push
lcall
sbb
and
and
pusha
test
add
shrl
dec
dec
push
adc
jmp
test
mov
jmp
or
mov
mov
mov
nop
dec
in
push
divb
jecxz
inc
je
inc
movb
sbb
sbb
sarb
enter
sub
xchg
xchg
dec
mov
cmp
mov
test
jns
mov
pop
and
fucomp
pop
push
mov
loope
cltd
sub
pop
cmpsb
inc
pop
mov
outsl
insl
push
jmp
bound
and
inc
or
push
push
jecxz
testb
rolb
jo
movsb
lea
mov
hlt
or
push
je
imul
pop
mov
adc
inc
pop
outsb
into
inc
jecxz
pusha
jecxz
ret
hlt
mov
adc
movsb
push
push
sbb
mov
or
lods
daa
test
adc
das
and
push
lcall
and
in
in
or
imull
shrl
adc
sqrtps
push
into
pop
cs
sbb
ds
mov
jns
iret
mov
lret
xchg
out
jb
negb
shlb
insl
insl
add
adcb
pop
hlt
outsb
ret
data16
sahf
sbb
adc
jmp
jp
arpl
cmp
fs
out
addr16
call
out
notb
ret
fistpl
jg
movsb
inc
pop
sahf
ret
dec
mov
mov
cmpsb
sub
xchg
ret
and
mov
repnz
mov
sbb
inc
and
adc
lret
adc
rorl
out
and
rclb
cmp
nop
rcrb
add
dec
push
out
fisubrs
sub
pop
or
test
out
fcmovne
addr16
scas
outsb
scas
mov
xlat
ds
mov
leave
push
mov
lcall
jnp
dec
les
dec
in
insl
fisttpll
push
or
add
andb
addr16
push
fbld
fdivs
dec
and
sub
sbb
or
lods
dec
dec
movswl
scas
pop
sub
jae
mov
xchg
mov
dec
xchg
xor
jnp
mov
or
cmp
and
xor
loop
add
fdiv
cmp
stc
lret
push
insl
and
ficoms
ljmp
call
rorl
and
cmovb
adc
mov
and
out
pop
mov
outsb
push
dec
push
sbb
push
pop
mov
push
loope
aaa
and
add
daa
jae
jo
stc
jmp
push
adc
mov
sub
in
xor
cmp
pop
cmp
jnp
and
adc
add
ret
push
out
xchg
xchg
and
test
adc
xor
shr
insb
xlat
fsubl
xor
pop
xchg
aam
mov
dec
ret
or
mov
add
fcomps
pushf
push
cmp
push
mov
xlat
dec
jle
dec
test
rol
gs
push
movsb
jb
pusha
push
add
lcall
pusha
js
clc
mov
dec
gs
outsl
in
dec
daa
mov
xchg
mov
aam
lret
inc
cmp
cmovo
out
pop
stc
sar
out
pop
fdivs
aaa
int3
scas
repz
push
pop
lret
cltd
mov
jecxz
pop
inc
es
mov
movsb
stos
daa
lea
negb
mov
sbb
ljmp
pushf
addr16
divb
dec
add
dec
aad
int3
lds
inc
into
ss
push
lahf
fstps
std
xchg
int
cmpb
pop
sbb
repz
xchg
cmc
pop
push
out
inc
imul
xchg
push
lahf
lahf
cmpsb
cmp
stos
cmp
mov
lcall
es
mov
sbbb
outsl
sub
ds
or
mov
ds
or
test
enter
jl
popa
fldl
int3
popf
xor
pop
pop
or
mov
or
xchg
sarb
push
push
mov
nop
or
sbb
dec
imul
cmpsl
cli
add
cmp
or
stc
inc
sarb
ret
arpl
mov
cmc
pop
sub
jl
dec
jnp
adc
mov
ret
sahf
cmp
shrl
rcll
sbb
aas
cmp
fiadds
dec
pop
test
xor
cld
inc
outsb
ds
cmp
dec
insb
pop
popf
cmp
cs
fs
pushl
cmp
lahf
dec
mov
mov
add
mov
xchg
mov
sbb
xchg
xchg
sbb
sbb
prefetch
subl
arpl
iret
cwtl
sub
repz
push
int
xlat
movb
add
sub
mov
rcrl
cmpsl
sub
dec
add
or
jp
arpl
cld
fiadds
push
adc
aaa
into
rclb
sbb
enter
test
lsl
fldl
mov
sub
shlb
lock
mov
ret
mov
xor
loopne
repnz
bound
data16
lcall
xchg
test
dec
dec
mov
ds
insl
cmp
repnz
jmp
pop
mov
jo
scas
fnsetpm(287
aaa
ret
rorl
mov
call
mov
xor
scas
push
gs
xchg
sbb
outsb
fistpll
int
insb
pop
dec
mov
jge
and
xlat
sbb
call
jnp
out
fcmove
mov
sahf
dec
cli
fcoms
or
ret
fisubrs
pop
xor
xor
popf
jo
jp
dec
lds
pop
and
in
sub
dec
mov
jne
pop
adc
and
gs
imul
pop
fs
popf
fisttps
lea
test
jmp
xchg
xor
lret
mov
adc
lock
or
inc
xor
cmpsl
stos
or
ja
add
add
jns,pt
pushf
push
mov
add
push
dec
out
jmp
rcl
addr16
mov
jl
enter
lea
fs
push
out
lret
pop
fidivrs
xor
sbb
sbb
xor
sub
aaa
cwtl
jge
add
iret
lock
loope
ret
xchg
movsl
lcall
xchg
cmp
dec
popf
mov
test
sub
icebp
xor
movsl
jne
jo
lods
ret
pop
dec
pop
insl
jmp
adc
push
cmp
inc
scas
cmp
in
adc
sub
int
pop
mov
call
out
loope
test
jp
enter
add
call
cmp
push
in
psllw
cltd
das
mov
mov
int3
inc
popf
sub
sub
rorl
divl
mov
daa
jg
mov
cmp
aas
lods
daa
jg
sbb
testl
enter
add
adc
fists
mov
xchg
les
push
pop
xorb
test
jbe
push
cmpb
lock
popf
xor
hlt
les
and
movsl
xor
sbb
int
hlt
adc
lods
pop
nop
jbe
les
les
orb
frstor
xchg
cmp
imul
movsl
or
dec
mov
add
add
push
enter
jne
inc
cli
push
in
imul
push
aaa
add
mov
mov
cmpsl
imul
ret
inc
std
insl
rcrl
xor
movsl
mov
imul
lret
xlat
imull
in
int3
cli
aaa
and
bound
mov
cwtl
sti
cmp
in
jno
dec
cli
mov
int
mov
or
xor
xchg
popa
gs
in
xchg
add
jge
inc
ds
pop
fbstp
mov
mov
lret
inc
jmp
mov
xor
test
fisubl
insl
les
lods
fcoml
xor
mov
addr16
and
push
cld
aad
mov
mov
dec
in
push
adc
push
insb
pop
pusha
dec
xchg
repz
in
das
jno
and
aaa
repnz
clc
sbb
fisubs
stos
push
mov
fsubrl
cmp
mov
or
addl
out
lret
inc
in
mov
lock
int
lds
xor
or
inc
das
xchg
sbb
out
fisubl
mov
mov
out
in
js
rclb
mov
lret
push
lods
mov
add
cs
fbld
ds
xor
add
pop
mov
cmp
mov
idivl
pop
shll
add
arpl
test
std
lret
fs
pusha
pop
lret
and
mov
mov
or
lfs
pusha
in
into
mov
lcall
pop
mov
and
andl
xchg
sbb
push
cmp
lea
adc
xchg
mov
inc
loopne
pop
out
jbe
and
mov
jb
cmp
dec
jmp
sub
fldcw
in
mov
xor
lret
add
fs
js
hlt
jnp
add
pop
pop
add
sbb
push
push
sbb
mov
xchg
popa
pop
pop
in
mov
mov
adcb
into
gs
aad
mov
and
shll
fldt
dec
scas
insl
xor
inc
xchg
sbb
aas
adc
inc
in
loope
divl
das
cmp
pop
lret
scas
pop
jb
sbb
popw
lock
movb
sbb
hlt
push
clc
dec
mov
inc
push
es
xor
das
sahf
je
and
or
fimuls
pop
arpl
adc
int
xor
cmp
adc
ret
push
cmp
xchg
and
mov
cmpsl
pushf
es
popa
addr16
add
shl
out
stos
xor
push
dec
enter
push
popf
outsb
pushf
cltd
jbe
xchg
popa
jno
mov
sub
int3
mov
mov
sti
test
or
adc
mov
movsl
call
dec
notl
pop
mov
int3
ret
push
aaa
push
xor
and
dec
jmp
gs
outsl
idivb
das
sbb
sbb
and
mov
or
mov
cmc
pop
test
aad
aam
shll
cmc
ljmp
shl
fmuls
pop
xchg
bound
mov
jnp
pop
jnp
cmp
nop
cmp
inc
push
or
mov
stc
push
inc
or
jne
mov
mov
into
faddl
dec
xchg
add
pop
cmpsl
cmpsb
xor
inc
jg
push
clc
mov
jno
cld
add
mov
ljmp
add
mov
lret
dec
dec
negb
in
mov
push
xor
es
popl
mov
insb
sbb
xchg
cmp
fimuls
mov
orl
sbb
out
xchg
jae
and
inc
jb
shrl
je
imul
and
out
les
sub
xor
and
sbb
xchg
stc
idivb
ljmp
lret
xchg
cwtl
push
jp
push
adc
add
xor
mov
lea
imul
nop
mov
xchg
and
lods
and
ret
mov
fisttps
jle
das
aas
dec
aas
ds
adc
jne
iret
jns
rcrl
in
imul
add
add
mov
push
xchg
cmc
push
jb
cmp
jns
pop
data16
sbb
sahf
pop
cs
jp
push
lahf
outsb
loope
cmpsl
jg
pop
cmp
dec
cwtl
and
notb
pop
nop
and
mov
jo
adc
jge
cli
mov
test
jo
sbb
sbb
mov
fucom
imul
xchg
ja
imulb
cltd
lahf
jns
imul
sbb
jl
or
jb
test
or
fstps
cmp
xchg
jl
mov
shlb
pop
aad
xlat
xchg
mov
xor
or
cmp
aas
gs
or
xchg
ret
andl
sar
mov
imul
xchg
ret
test
enter
in
int
xor
jnp
mov
jp
mov
push
jb
loop
push
mov
add
in
push
mov
and
lds
xor
push
sub
mov
xchg
mov
addr16
jnp
or
fcomps
or
xchg
xor
jno
popa
adc
fwait
pop
imul
mov
cmp
pushf
aam
aad
push
xchg
movsb
pop
add
pop
inc
jns
mov
ret
add
fs
xchg
jns
xlat
and
out
push
xor
mov
call
mov
mov
add
push
clc
inc
dec
mov
aas
push
fdivp
cmp
xchg
xchg
adc
jne
aad
push
sbb
push
pushf
ret
hlt
lock
cwtl
shll
dec
das
and
mov
std
pop
dec
dec
sub
mov
ret
popa
in
mov
popa
xor
sub
loope
xor
adc
lret
mov
adc
enter
xor
pop
or
jno
or
in
sbb
cmp
adc
dec
mov
orb
mov
pop
add
ret
cmpsl
pop
lahf
outsl
cmpsb
loopne
test
enter
rcll
adc
cmp
or
repz
nop
jecxz
fnsave
ret
inc
mov
rorb
or
or
pop
jno
loopne
and
popf
xchg
stc
push
add
nop
or
rcrb
fistps
push
cmp
je
sti
or
jno
jne
jne
mov
imul
mov
jge
adc
loope
adc
leave
sub
pop
arpl
dec
rorb
sahf
pop
dec
jl
arpl
pop
mov
stc
push
mov
add
test
sub
mov
call
leave
daa
add
push
push
leave
leave
insl
pop
sbb
inc
adc
out
scas
fiadds
mov
cmp
mov
call
pop
push
mov
sbb
push
sub
into
mov
xchg
sub
sub
xlat
jl
outsb
mov
mov
dec
adc
xlat
mov
inc
xor
push
pop
pop
or
dec
xlat
scas
popf
sti
push
dec
mov
lcall
lret
hlt
push
stos
cmp
inc
add
gs
lret
jmp
add
jb
shr
enter
es
cmp
fiaddl
cmp
jns
lock
xchg
insl
lods
outsl
bound
cld
xor
das
inc
cli
inc
imul
rcll
pop
iret
aad
pop
jle
test
xchg
cmpsl
ror
arpl
insl
sbb
sub
bound
mov
sarb
repz
cmp
push
icebp
xchg
pop
mov
sub
or
scas
cli
sarl
sub
mov
cmp
outsb
and
fisttps
jge
sbb
xchg
insl
push
lods
jno
pop
pop
adc
or
stos
jp
into
pcmpgtd
inc
test
mov
inc
popa
insb
pop
sahf
and
out
sarl
inc
shlb
mov
addr16
push
popa
mov
dec
in
mov
pop
bound
inc
sbb
cwtl
std
jle
aas
adc
xchg
mov
in
pop
fs
ret
adc
in
add
push
sub
mov
scas
out
pop
les
jbe
lods
inc
jecxz
pop
mov
cmp
jnp
xchg
jl
xor
decb
loopne
sbb
fidivs
sbb
push
or
jmp
xchg
fcoms
xchg
aam
insb
jmp
xchg
dec
ljmp
out
fs
push
adc
lods
xchg
shrb
idiv
outsl
adcb
imul
adc
mov
je
aam
xor
or
mov
mov
ret
in
and
mov
lods
dec
cmpsl
int3
pop
mov
fwait
test
cli
jg
dec
lahf
mov
dec
inc
dec
lods
movsb
push
seto
push
adc
cwtl
jb
mov
int
fwait
cmp
leave
das
mov
ja
and
scas
stos
sub
aam
enter
xchg
int
sub
daa
cmp
sub
pop
cs
js
outsl
in
sbb
int
push
loop
add
sbb
scas
mov
lods
adc
push
and
mov
test
or
push
push
add
xchg
lret
test
ret
fstps
jg
nop
lret
clc
insl
daa
test
out
add
loopne
popa
bound
aam
or
out
lahf
dec
aas
fmull
cmc
mov
lea
ret
mov
lods
aam
inc
adc
add
rolb
gs
aaa
dec
cltd
repz
sub
stos
adc
ss
pop
int
cmp
add
lods
int3
rorl
cmp
xor
imul
and
notl
sbb
sub
mov
dec
addr16
xchg
daa
mov
je
dec
icebp
adc
scas
adcl
inc
test
mov
mov
pop
rcr
sub
add
mov
jl
pop
cmp
add
push
fistpl
add
mov
xchg
in
mov
in
sbb
jg
repz
mov
sbbl
inc
mov
out
jne
leave
int3
in
stos
jns
fmul
daa
ljmp
mov
jle
loop
movsb
loopne
pusha
or
cli
mov
mov
mov
sbb
scas
data16
outsl
fidivrs
lcall
aaa
xchg
orb
mov
mov
sub
into
rcrl
and
mov
cli
lcall
test
dec
sbb
sbb
jno
push
xchg
fmul
cmc
mov
jbe
cli
test
fistpl
jno
fdivrp
sahf
inc
add
and
outsl
inc
xchg
jl
popf
mov
insb
sahf
call
xor
call
mov
push
inc
and
sub
mov
xor
mov
cld
jge
lcall
dec
xchg
loope
jnp
cmp
dec
fisubrl
jo
sub
js
loopne
sbb
fiaddl
xchg
bound
test
in
int
jo
js
outsb
sub
aas
mov
and
int3
ljmp
xor
xchg
mov
mov
jmp
xor
mov
js
mov
ficomps
loopne
add
push
ret
push
lock
mov
andb
mov
and
sbb
das
mov
jnp
push
das
lret
mov
sbb
mov
push
arpl
pop
popa
push
xchg
sub
gs
daa
mov
or
pop
lahf
cmpsb
add
jge
dec
adc
dec
mov
aad
adc
adc
dec
or
xchg
jo
mov
js
in
mov
mov
push
lds
aas
push
jg
in
dec
xchg
fdivs
fnstcw
test
in
dec
in
fldenv
fists
cs
mov
or
push
mov
sarb
push
mov
lahf
mov
xor
scas
add
lret
in
or
aam
leave
or
pop
jmp
leave
xchg
jp
in
je
mov
add
pop
cli
andl
icebp
sbb
pop
repz
lea
push
pop
and
xchg
inc
ja
popf
xchg
cltd
repz
mov
movsb
sbb
cld
xor
cmpsb
jae
xor
repz
lret
xchg
iret
ja
int
pop
lea
xor
out
outsb
and
add
lea
inc
xchg
je
push
pop
mov
and
sbb
cmp
sub
and
movd
cltd
adc
fstp
ja
aaa
out
push
dec
repz
out
sub
cli
jl
jnp
lds
cmp
add
test
or
push
hlt
leave
testb
sbb
mov
cmp
xchg
lret
adcb
jge,pt
adc
fwait
icebp
push
sti
repz
xchg
lods
mov
loopne
mov
mov
inc
sub
popf
cmpsb
in
movsl
or
shrb
lods
jp
ret
and
ja
push
mov
adc
test
mov
xchg
fs
movb
xor
iret
lcall
sbb
daa
dec
xor
notb
xor
jge
enter
ret
pop
int3
xchg
sbb
jge
xchg
push
scas
aas
xchg
xchg
testl
lahf
ja
sbb
jne
add
outsl
ja
ret
jno
out
xchg
loopne
cmp
les
jp
add
add
mov
push
fsubs
ljmp
enter
sbb
xchg
mov
adc
lods
sti
inc
loope
pushf
pop
lock
aas
push
insl
cltd
or
mov
and
jno
pop
xchg
movsb
mov
pop
xchg
push
xchg
emms
faddp
dec
mov
or
in
push
add
dec
fs
inc
sbb
pop
mov
push
push
jle
mov
filds
imul
into
push
fildl
mov
lods
adc
adc
push
pushf
repz
das
test
xchg
dec
out
pop
push
and
outsb
mov
sbb
pusha
pop
fcmovnu
cmp
mov
jmp
sbb
fldt
cmc
mov
sub
add
fsts
aas
xchg
arpl
push
xchg
mov
gs
sbb
fsubs
lock
stos
push
push
popa
inc
lock
add
arpl
arpl
mov
cmp
sbb
lret
dec
xor
xchg
add
lret
sub
repnz
nop
push
push
sub
push
bnd
pushf
stos
addb
sbb
sahf
arpl
jnp
pop
xor
inc
loope
aam
jns
pushf
sub
mov
mov
sarb
mov
scas
shrl
inc
out
lods
pushf
xchg
adc
or
xchg
cmpsl
and
mov
subb
or
std
mov
cmc
mov
testl
and
fists
jge
adc
sti
out
mov
int3
fmuls
test
roll
movsb
aas
out
add
mov
mov
add
in
pop
xchg
cmpsl
cmp
jae
fwait
jno
lret
movsb
fs
pop
rsm
daa
lods
lea
into
xchg
sbbl
je,pt
fsubrs
sbb
aam
out
xor
add
mov
in
sub
dec
mov
ret
push
cmp
call
imul
mov
jmp
mov
jne
and
out
xchg
icebp
xor
xor
inc
sub
or
icebp
jg
adcl
sbb
or
push
jne
in
mov
pop
adc
rcrb
loop
cld
xchg
mov
int
testb
roll
lahf
xorl
ret
stos
jo
adc
int
xor
repnz
mov
inc
test
scas
testb
adcb
pop
xor
lea
push
ret
pop
xor
in
pop
lods
dec
js
dec
insl
outsl
xor
loope
mov
cmp
idivl
jbe
fwait
sahf
push
mov
xchg
test
add
sub
loop
mov
ss
jae
xchg
mov
loope
xchg
mov
mov
lea
imul
repz
mov
movsl
adc
mov
mov
xor
push
mov
xlat
leave
inc
nop
aam
push
popa
cs
push
repz
in
lea
inc
mov
les
push
ret
and
pop
cmp
mov
add
test
mov
jo
push
test
ds
cmpl
rorl
decb
sub
mov
lcall
xchg
push
pop
cltd
outsb
pop
push
mov
jae
scas
int3
cltd
stos
or
mov
and
push
xor
xlat
ret
mov
in
add
push
pop
cmp
cmp
dec
nop
das
fwait
cmp
imul
add
hlt
mov
pop
mov
add
int3
fsub
js
popf
mov
cmp
movsb
jnp
hlt
ret
lea
test
aad
enter
adc
pop
adcb
xor
xor
push
mov
adc
xor
and
movsl
orb
dec
xor
cmc
adc
push
repz
ficoms
push
jae
sti
test
add
or
fcomps
pop
inc
sub
and
iret
enter
adc
iret
pop
sbb
or
mov
mov
hlt
insl
sbb
cmpl
movsb
pop
and
vmovaps
dec
dec
call
mov
mov
clc
add
fldl
fdivs
cmp
pop
xor
push
addr16
sub
pop
xchg
mov
jmp
xlat
mov
mov
pop
push
iret
xor
mov
xor
fwait
aaa
mov
inc
sbb
dec
aad
lods
jns
inc
xchg
dec
mov
out
jmp
es
clc
dec
in
and
inc
scas
jle
mov
rclb
cmc
out
dec
inc
jecxz
mov
jmp
fbstp
das
fcos
daa
fcoms
fsubrl
fnstenv
das
mov
pusha
int
hlt
jl
push
notl
sub
mov
out
jbe
movsl
outsl
dec
lods
pop
daa
not
hlt
cltd
int3
pop
popa
xchg
popf
push
ja
xchg
call
add
testl
xchg
mov
lea
push
or
dec
mov
loope
xchg
repnz
lds
and
cmpsl
mov
cmp
mov
xchg
adcl
push
js
sbb
push
in
ret
mov
cmp
inc
jbe
cmpsb
push
stc
jnp
inc
xchg
mov
test
add
pop
sbb
cmp
shrb
ficomps
sbb
lea
out
scas
cwtl
std
out
or
int
xor
push
les
adc
lret
add
cs
jge
js
push
sub
mov
add
lret
out
stc
inc
test
or
and
mov
mov
aas
xor
ja
int
pop
inc
sbb
push
push
adc
cmp
movl
sub
inc
mov
mov
pushf
cmp
out
filds
stos
dec
sub
lret
sbb
xor
ret
out
insb
imulb
xor
sub
ret
inc
or
push
mov
sbb
sbb
push
mov
sub
push
negl
xchg
jno
and
sbb
dec
ffreep
stos
jne
mov
and
gs
mov
mov
je
loope
jge
dec
mov
popa
xor
arpl
xchg
and
mov
in
mov
dec
jecxz
jnp
popl
sub
loope
icebp
pop
jns
xchg
notb
push
je
jbe
std
push
mov
icebp
clc
fcompl
repz
add
dec
inc
xchg
stos
push
lea
lret
fsubrs
test
adc
mov
jae
xlat
mov
adcl
rorb
dec
in
adc
mov
nop
push
popf
test
add
test
xchg
xchg
enter
pop
inc
das
int
pushf
ret
aas
ror
lock
xchg
dec
mov
fsubrl
outsb
nop
cld
mov
lods
sbb
sbb
push
sbb
push
jl
push
mov
mov
pop
repnz
in
mov
or
inc
add
in
in
in
push
icebp
dec
and
sarb
add
nop
or
cltd
das
dec
js
mov
mov
insb
jmp
jmp
sbb
push
nop
imul
xchg
push
cmp
mov
int3
mov
xchg
scas
inc
jmp
push
dec
dec
pop
xchg
fcmovne
adc
and
jecxz,pt
xchg
lret
imulb
repnz
ds
into
filds
jmp
or
in
out
sti
cli
lret
imul
repnz
adc
aas
icebp
rcll
xlat
xor
mov
xorb
bound
push
cmp
insl
push
push
out
xorb
pop
pop
sbb
pop
fcmovnbe
out
and
aas
leave
xor
jecxz
and
mov
insl
lods
mov
dec
jbe
mov
in
add
push
pusha
stos
es
cmp
and
popa
repnz
stos
adc
aaa
pusha
out
std
cmpl
popf
sbb
jb
dec
pusha
xor
out
and
movsb
xor
sub
fwait
je
dec
stos
iret
or
mov
pusha
repz
cmp
es
jo
int3
cmp
and
inc
mov
loope
es
xchg
adc
mov
xor
lahf
cmp
in
stos
ja
addl
imul
push
jp
outsl
mov
jge
rorb
or
push
mov
fildl
sbb
fstps
xor
cmpsl
jb
mov
inc
fwait
adc
mov
push
mov
mov
cmp
jl
xchg
lock
gs
hlt
ficompl
nop
test
xor
jbe
pop
lret
cmpsl
and
xchg
or
inc
test
lcall
xlat
in
aaa
inc
movsb
scas
push
ljmp
mov
subl
adc
cmpsb
dec
or
adc
xor
jmp
push
jmp
mov
mov
cmc
test
dec
lock
xor
mov
stc
adc
mov
pop
pushf
mov
and
cli
arpl
xchg
test
jbe
es
ljmp
xchg
push
mov
roll
test
adc
in
xchg
ret
push
pop
nop
lret
je
loopne
xchg
jns
mov
cmc
mov
mov
test
inc
js
jbe
sub
mov
stos
fwait
movsb
fwait
push
cmp
and
dec
mov
lret
adc
inc
mov
enter
test
loop
fistl
or
rorl
insl
outsb
sbb
mov
sbb
push
test
mov
mov
mov
pop
cmp
xchg
stos
out
mov
lcall
jns
loop
lods
dec
or
mov
adc
jp
push
cmp
clc
imul
inc
fiadds
mov
ljmp
out
cmp
pop
rorl
jle
sub
sbb
and
or
inc
popf
mov
std
and
daa
xor
jae
adc
pushf
or
sbb
and
into
rcrb
jmp
dec
mov
mov
in
scas
and
insb
cwtl
sub
gs
js
push
push
jo
mov
outsl
stc
add
das
dec
stos
cmp
add
cmp
ficompl
loop
xor
xor
cli
and
mov
in
inc
add
mov
or
ret
fildll
lret
std
mov
lds
dec
sysret
mov
xor
jle
addb
xor
cmp
notb
cmp
fcompl
filds
mov
xlat
jecxz
aas
gs
sub
inc
fldenv
insb
shll
cmp
mov
and
test
xchg
or
sub
test
ret
cld
or
dec
pop
orb
icebp
push
insl
imul
popa
aas
cs
mov
lcall
idivl
push
popf
adc
cli
xor
adc
jge
jg
mov
dec
push
movl
dec
or
es
xlat
mov
shlb
lahf
push
jg
loop
ret
ljmp
or
sahf
add
jo
fsubs
jns
js
cmp
mov
jmp
test
and
fisttpll
adc
aaa
mov
lods
rolb
repnz
push
cmp
fiaddl
test
cmp
cmpsl
push
and
and
or
add
adc
gs
xchg
or
ds
and
jle
lods
mov
scas
or
jecxz
pop
xor
inc
loopne
stos
sub
shll
cmp
cld
adcb
rorb
clc
outsb
sub
pop
stos
or
jae
xchg
add
repnz
lods
leave
mov
insl
lock
add
pop
rcll
or
or
jl
rolb
ljmp
je
cli
dec
cs
je
out
or
sbb
int
jne
xchg
scas
mov
mov
mov
inc
jne
add
mov
nop
mov
out
add
dec
sarb
mov
and
jae
xchg
dec
stc
add
dec
push
cmp
fimuls
rcr
pop
sub
aaa
clc
push
pushf
add
dec
pop
out
or
xor
in
adcl
in
cmp
ds
sub
jecxz
and
fistps
sub
roll
push
xchg
adc
or
dec
dec
mov
adc
jmpw
in
sahf
mov
mov
ja
pop
in
gs
mov
dec
or
pop
pushf
out
int
jnp
cld
jb
loope
fadds
push
adc
fisubs
pop
mov
pop
inc
xchg
movsb
rolb
push
lretw
outsl
ss
ljmp
jbe
and
xchg
mov
adc
lret
adc
sub
in
test
push
aaa
jns
and
stos
in
or
mov
or
call
cmp
jp
out
inc
mov
add
dec
pop
pop
xchg
in
cmp
pop
data16
sub
test
jo
jns
jg
lret
shll
dec
jle
mov
aas
mov
hlt
pop
in
in
movsb
lret
xor
or
push
stos
fcmovne
popa
jo
pop
sub
jle
dec
sbb
mov
sbb
sbb
jne
mov
out
pcmpgtd
cmp
rcr
js
push
mov
push
std
push
push
mov
cmp
push
sarl
lahf
mov
add
dec
sbb
add
cltd
jl
pop
or
out
jnp
cmp
push
sub
add
repnz
mov
sub
cltd
dec
sti
fwait
in
lahf
movsb
repnz
sub
mov
outsb
sbb
lock
arpl
icebp
das
add
cld
sbb
bound
out
jmp
sbb
jb
sbb
xchg
xchg
mov
gs
push
mov
xor
call
sub
sbb
jns
std
xchg
sbb
cld
jl
jmp
insl
sub
test
dec
test
adc
pop
xor
shll
xor
icebp
je
push
dec
sub
jae
movsl
mov
movsb
jb
nop
push
in
test
inc
mov
aam
push
sub
cld
push
pop
fsubr
cld
push
stos
aaa
push
jl
mov
push
xchg
cli
jmp
call
sbb
rcll
insb
fildll
loope
dec
test
mov
js
cmp
adc
add
push
mov
inc
inc
mov
pop
xor
xor
xchg
cmp
mov
inc
jo
jp
sbb
cmp
cmp
dec
mov
and
inc
adc
addr16
rol
push
test
pop
sub
push
repz
incb
in
aam
push
dec
pop
push
icebp
push
sbb
ret
mov
cmc
jns
ucomiss
ret
sbb
lahf
and
dec
sahf
es
sub
and
data16
das
mov
movsb
inc
cmpsl
sahf
adcl
into
xchg
insl
fwait
rclb
inc
jle
sub
fnstcw
pop
pop
dec
fcomp
sub
jmp
lahf
mov
ficomps
xor
insb
xlat
mov
ror
fcomp
fcomps
jle
cld
out
aas
rcl
shll
sahf
fmul
dec
inc
popa
int3
adc
imull
aad
outsl
mov
add
mov
je
pop
cmc
push
movsb
push
rclb
sub
stos
inc
push
fcoml
imul
fcoms
dec
and
push
pop
fwait
dec
or
enter
inc
insl
movsl
xchg
mov
jbe
jge
lahf
fisubrs
lcall
jecxz
aam
sbb
ret
test
sarl
add
scas
mov
fwait
cmp
mov
push
ret
mov
inc
mov
daa
nop
test
data16
pop
les
mov
mov
jecxz
js
dec
push
outsl
inc
or
int
int3
in
xchg
in
pushf
mov
sbb
xor
subl
pushf
mov
push
mov
iret
inc
inc
in
jnp
xlat
rol
movb
xor
inc
cltd
fdivrs
leave
fisubrl
dec
pop
jne
mov
loopne
jmp
inc
jle
add
and
xchg
popa
in
dec
rorl
repz
fwait
loope
jecxz
outsl
popa
setg
das
into
xchg
cltd
daa
rcrb
or
ret
fidivl
lds
out
out
int
mov
xor
xor
xchg
loop
roll
mov
mov
or
int3
inc
cmc
ret
ja
inc
jb
jle
mov
cmp
cmp
stos
repnz
pop
insb
xor
mov
pusha
arpl
or
jae
mov
loop
mov
lret
gs
mov
pushf
dec
push
leave
push
int
ljmp
test
mov
add
stc
testb
subl
std
inc
or
mov
sub
ss
lea
test
mov
pushf
aaa
jle
in
xchg
pop
fwait
cmc
fildl
lock
or
and
lds
fdivrs
sahf
repnz
mov
push
loope
sbbl
fmull
xchg
call
cwtl
stos
and
call
ss
fs
lods
ja
inc
lret
push
jecxz,pt
sti
xor
and
cmp
cli
jp
jl
mov
std
pop
push
sbb
jp
xor
dec
sbb
shlb
sti
and
or
cmpsb
loopne
mov
lods
add
mov
stos
inc
int
jecxz
lock
sub
adc
mov
je
ret
dec
ret
and
cltd
push
xor
mov
sti
mov
in
jbe
fcomi
mov
ss
movsb
lods
xchg
jp
lea
add
icebp
mov
pop
dec
cmp
lock
jns
in
adc
ds
xchg
ja
or
sbb
cmp
in
dec
cli
outsw
jl
push
call
inc
pushf
das
stos
xchg
negl
subb
jle
ret
xor
pop
push
push
mov
in
adc
mov
stos
and
testl
xchg
pop
mov
mov
fisubrs
mov
sub
inc
and
pop
movsl
xchg
jmp
mov
push
xor
sbb
sub
xor
xchg
jle
sahf
sub
das
lea
jne
or
pushl
add
xchg
je
ret
sub
cltd
into
push
dec
cld
push
pop
mov
pop
inc
push
sbb
das
ja
or
adc
shlb
addl
mov
xchg
in
inc
mov
and
xor
mov
pop
jmp
aas
fucomi
ljmp
jmp
or
xchg
sbb
inc
insl
repnz
cmp
ss
cld
mov
sub
mov
mov
dec
xlat
push
push
jmp
jg
cmp
arpl
push
outsl
jo
mov
fildll
in
out
pop
insl
stos
jno
ret
xlat
jp
ja
jle
lds
mov
notl
push
div
pop
mov
imul
and
xchg
in
xor
adc
cmp
aaa
jbe
jns
inc
jne
cmp
mov
push
jne
ret
subb
sbb
jne
dec
inc
push
push
mov
jne
orl
mov
sub
and
pop
jae
sbb
push
into
fxch
add
sarb
xchg
pop
push
jmp
stos
dec
cld
fildl
negl
sub
inc
jge
add
mov
push
pushl
or
pop
push
mov
jp
xchg
negl
and
cmp
in
rol
jmp
movsl
inc
inc
dec
cltd
and
sbb
adc
sbb
fisttpl
push
mov
push
in
imul
rcrb
jp
add
jo
stc
enter
dec
add
pop
aas
mov
mov
arpl
xchg
push
test
or
push
and
add
dec
shll
es
out
les
jge
mov
jb
xchg
jge
lods
fadds
and
pop
or
pop
enter
daa
fiadds
pop
testb
inc
outsb
and
lcall
mov
sub
and
xor
rcll
xchg
inc
mov
xchg
mov
inc
inc
mov
adc
sub
pop
mov
mov
stc
inc
sbb
jmp
popa
cmp
mov
jne
push
jmp
dec
lods
sub
xlat
adc
dec
mov
dec
push
inc
xlat
or
test
mov
into
lret
or
push
arpl
cmp
sub
fiadds
into
and
repz
out
lea
or
inc
adc
push
push
imul
mov
iret
decl
imul
aas
in
dec
xchg
les
movsl
mov
daa
mov
sub
pop
xorl
add
jns
call
mov
ja
fwait
sbb
in
mov
dec
xchg
lea
sub
stc
jg
paddd
dec
push
mov
cwtl
sub
aam
lahf
mov
std
cmpsb
xchg
and
sar
stos
popa
shr
add
repnz
add
inc
mov
or
push
jmp
pop
sbb
aaa
pop
jl
push
jae
iret
jge
shll
mov
mov
and
and
mov
or
imul
test
mov
push
jecxz
aaa
dec
adc
pop
dec
pop
repz
add
in
fcmovnu
mov
pop
mov
mov
pop
mov
rcrb
jp
add
adc
mov
cmpsl
add
pop
arpl
testl
sarb
notl
sub
mov
adc
iret
sub
pop
jae
fdivr
out
xor
fisubs
fistl
push
and
mov
inc
dec
mov
fidivrl
stos
mov
adc
ss
cmp
cltd
loope
push
lcall
test
xorl
bnd
aad
loopne
mov
in
jle
inc
adc
jbe
sub
pop
inc
xor
pop
sbb
loope
adc
jb
ret
or
int3
adc
repnz
xchg
aad
out
adcb
ret
stc
xor
inc
movsb
imul
sub
rorb
sbb
pop
pusha
loopne
arpl
mov
je
xor
pop
leave
or
mov
fsubrs
repz
sbbb
dec
cmpsb
add
inc
add
dec
insl
in
sbb
xor
cmp
cmpsb
inc
and
dec
les
daa
fdivrs
fcomps
fdivrl
adc
arpl
push
dec
loope
clc
aas
fisubs
sub
insb
je
mov
jl
aaa
sbb
mov
cmp
test
cmc
mov
leave
mov
scas
xchg
mov
sub
cltd
cmp
mov
sub
lods
adc
xor
daa
and
cltd
in
cmpsl
dec
add
insb
bound
mov
inc
repnz
dec
mov
cmpsb
pusha
adc
sbb
in
mov
push
ds
popa
out
in
cli
dec
test
jmp
lcall
xor
add
idivb
cltd
or
aas
sub
or
cmp
aam
sbb
jae
dec
icebp
test
xchg
repz
dec
ss
mov
dec
mov
push
cmp
add
fnstenv
rcrl
jl
inc
push
pop
dec
fldenv
xor
inc
mov
les
xor
dec
jmp
mov
or
repz
pop
test
mov
mov
pop
add
rcrb
xchg
das
jb
sub
dec
inc
mov
or
rolb
gs
lods
and
inc
jp
cmp
mov
add
insb
daa
call
rorb
or
jne
adc
and
hlt
and
inc
lods
movq
and
mov
sub
adc
outsb
jne
int3
rclb
push
sbb
mov
mov
and
outsl
or
xchg
lret
mov
dec
mov
push
push
insb
rcll
adc
xchg
gs
sbb
xchg
pushf
movsb
adc
pop
push
mov
out
loopne
push
into
pop
cltd
out
mov
fldl
xor
cmp
or
mov
xchg
mov
enter
mov
movsb
adcb
xchg
hlt
fnstenv
jge
jle
mov
mov
or
mov
cld
jg
mov
cmpsb
add
cld
cmp
int3
jns
stc
jns
outsl
cmp
dec
int
sti
out
adc
add
rol
add
and
negl
ss
add
imul
xor
sub
fucom
or
test
xchg
xchg
enter
in
bswap
outsb
movsl
jmp
subl
dec
xchg
pop
movsl
das
ss
jge
mov
lds
mov
xor
sbb
xchg
push
xor
insl
in
ljmp
add
cmp
js
cmp
inc
ss
js
mov
out
lret
mov
jne
shrl
ds
jmp
outsb
test
gs
ficompl
xor
cmp
cmp
sti
mov
dec
pop
mov
xchg
mov
outsb
andl
mov
adc
cmp
jmp
nop
divb
dec
push
jle
stos
pop
test
dec
inc
mov
sbb
lods
daa
insb
and
sbb
jns
loope
cld
cmc
push
fisttps
inc
insb
divl
jae
cli
ficompl
xchg
lods
out
inc
dec
inc
lods
incl
dec
jge
test
cmp
and
xor
mov
add
in
lock
out
call
fidivrs
movsb
jle
jmp
cmp
mov
aas
xchg
cmp
sahf
fcoms
out
int
test
ds
lods
cld
dec
imul
push
bound
adc
scas
mov
fstl
sub
mov
xor
loopne
inc
or
lret
mov
pusha
inc
hlt
cmp
mov
pop
sub
jne
pushf
arpl
mov
loop
mov
add
xor
xchg
in
sbb
dec
int
stos
mov
add
cmp
cmp
out
cmp
call
stos
or
lret
push
cld
cmp
and
orb
and
rclb
test
mov
lret
mov
sahf
pop
jns
add
fs
ja
data16
pop
or
pop
popf
dec
int
add
outsb
inc
mull
inc
shrb
or
bound
repz
push
rcr
stos
mov
cltd
outsb
mov
cmc
int
mov
dec
jg
sub
pusha
pop
es
icebp
cwtl
mov
mov
mov
lock
mov
in
cmp
in
pusha
push
pusha
pop
loopne
push
xchg
test
jo
lods
mov
mov
cld
push
clc
push
lahf
xchg
lahf
out
mov
jns
jb
jno
inc
stos
pop
adc
jecxz
lcall
dec
dec
imul
cli
push
cmpl
imul
mov
lahf
aad
insl
mov
pop
lods
movsb
out
push
inc
outsb
in
popf
xchg
mov
adc
ficomps
pop
and
jo
fdivs
in
xchg
mov
jne
out
rcrb
fdivrl
stos
fnsave
mov
std
xchg
jo
adc
lods
fdivl
leave
fnsave
fisubrl
pushl
push
cli
xchg
dec
mov
ljmp
jmp
add
mov
aad
sbb
and
rcrb
cs
lret
jge
xchg
fidivrs
inc
test
dec
lds
or
dec
outsb
call
setno
rorb
std
pop
jbe
pop
repz
in
scas
cmpb
popaw
and
push
push
pop
mov
cwtl
inc
addr16
ret
ficompl
jae
xchg
jecxz
push
ret
les
or
push
pop
sub
pop
and
jecxz
imul
jno
shrl
lret
fmuls
mov
outsl
lahf
popa
xchg
adc
xchg
or
ljmp
shlb
sti
shll
packssdw
or
cmpsl
xchg
add
mov
mov
push
adc
les
add
push
xor
push
mov
adc
or
xchg
xlat
xor
test
adc
sbb
inc
fnstenv
fcoms
cmp
popa
xor
popf
add
in
pop
imul
xchg
cmp
fwait
jno
pop
jmp
fnstsw
xchg
sub
and
je
imul
dec
data16
jp
xchg
push
xor
call
andb
jne
sbb
fldenv
int3
dec
inc
negl
xchg
cltd
repz
xor
clc
pop
out
pop
inc
dec
mov
test
repz
scas
sbb
jns
mov
sti
js
repz
rolb
cmp
adc
pop
and
movsb
imul
jae
gs
bound
scas
inc
int3
adc
lcall
jl
lcall
aaa
adc
inc
ljmp
cmc
push
shrl
cmp
test
or
mov
add
mov
js
sbb
imul
aas
stos
icebp
repz
fildll
and
add
dec
or
das
or
sbb
or
jno
sahf
jo
xchg
ss
rcll
sti
bound
roll
mov
or
test
or
cmp
into
add
push
inc
and
dec
mov
push
push
push
mov
mov
mov
sbb
push
push
daa
and
inc
xchg
cmp
inc
mov
in
enter
addl
sbb
ret
push
rcrl
sub
imull
cmp
aam
imul
inc
mov
cmp
mov
stos
arpl
lahf
mov
sbb
insb
jne
arpl
and
popf
and
xor
push
pop
movsb
cltd
mov
insl
in
add
jl
adc
mov
xchg
cmpsb
xchg
ret
jecxz
orl
jae
sbb
jnp
daa
mov
fldt
in
mov
test
pop
push
cli
mov
sbb
mov
fnstcw
dec
arpl
repz
in
xchg
xor
and
lods
lock
or
sbb
cmp
cli
das
cmp
cmp
lcall
inc
movsb
lods
repnz
inc
xchg
push
fcmovu
mov
push
jecxz
mov
cmc
and
stc
adc
jmp
jl
adc
int
stos
sub
andb
lahf
lcall
add
or
cmpb
sbb
div
ja
push
push
sub
cmpsb
in
mov
inc
jp
imul
scas
inc
lcall
push
mov
mov
jns
mov
out
add
mulb
negb
lock
sub
sti
lods
pushf
mov
nop
loop
sbb
sbb
jmp
loopne
ret
xchg
push
xchg
push
jo
pop
mov
stos
std
jmp
cwtl
outsl
mov
cltd
pop
or
sahf
xchg
dec
mov
fsubrs
leave
pop
mull
xlat
insb
push
sbb
mov
mov
stos
push
inc
or
addr16
push
aad
lret
xchg
inc
xchg
inc
pop
xchg
xchg
mov
mov
mov
lds
pop
test
arpl
cmp
inc
fldenv
nop
xor
mov
push
imul
cmp
movsb
sbb
icebp
sarl
mov
push
adc
scas
jecxz
shrb
int3
adc
pusha
outsb
push
mov
insl
nop
xor
sbb
cmpb
shr
repz
cwtl
mov
mov
mov
call
xchg
cmpsb
je
movsb
insl
lock
rolb
fs
ficompl
push
adc
daa
mov
shll
cmpsb
sub
mov
or
aam
cmp
mov
xchg
sbb
pop
out
jmp
ret
push
mov
xchg
aas
leave
cmc
mov
ss
lcall
fidivs
or
ljmp
bound
repz
mov
sbb
je
pusha
addr16
dec
jnp
jmp
out
rclb
mov
sti
jecxz
jae
mov
xor
cmp
push
or
jno
adc
xor
jno
adc
ss
inc
shlb
jl
shl
xchg
mov
fsub
pop
cmp
xor
jge
sbb
push
inc
add
pop
stos
movsb
lock
jle
lcall
in
or
add
sbb
test
movsb
xchg
outsb
mov
jbe
jno
fdivrp
jb
lcall
push
pop
jmp
jle
cltd
mov
sbb
notl
and
xor
inc
insl
movsb
or
xchg
add
rorb
and
adc
xor
xchg
repz
fisubs
pushf
sarl
and
sub
fnstenv
sbb
mov
mov
out
cs
pop
or
add
out
daa
push
mov
mov
scas
push
shll
sub
dec
push
mov
inc
xlat
scas
jbe
push
or
rcll
bound
cmp
orb
push
sub
push
or
jb
inc
lds
cmp
jno
cmp
pop
mov
and
aas
add
daa
xchg
pop
dec
and
das
mov
imul
cli
lret
mov
mov
jp
cltd
sbb
pop
daa
mov
dec
add
in
xchg
fdivrs
in
push
add
xor
and
cmp
sbb
push
aad
icebp
push
popa
repnz
adc
ficompl
pop
in
sbb
ljmp
mov
clc
inc
cli
xchg
or
icebp
fisttpl
int
cmpl
cli
xor
mov
push
shll
jne
repz
or
mov
outsl
push
lods
sbb
mov
mov
dec
lcall
icebp
pop
and
xor
lret
test
inc
gs
lods
subb
sub
cmpsl
cmc
xor
leave
insl
and
rol
test
mov
adc
and
arpl
movsl
jmp
push
sbb
dec
push
xchg
inc
push
push
jle
cmp
out
lods
hlt
into
ljmp
adc
jnp
daa
cltd
dec
test
xchg
pop
sub
adcl
test
and
adc
cmp
into
mov
fmull
shr
std
jnp,pt
sub
sar
scas
dec
mov
xchg
push
push
data16
sbb
mov
and
sub
testl
in
sbb
loop
sbb
icebp
sar
js
dec
adc
mov
sarb
stos
cld
and
sub
test
lds
xchg
andl
xor
mov
mov
mov
lock
sub
push
lds
fimull
sub
dec
sub
mov
inc
aam
stos
cmp
cmc
and
pop
imul
adc
repz
flds
mov
xor
adc
or
mov
pop
sbb
push
in
sahf
add
int
sbb
iret
mov
ret
mov
adc
lods
stos
push
scas
xchg
int3
push
pop
mov
gs
xlat
std
cmpsl
sub
imul
or
popa
je
cld
loop
shrb
xlat
adc
aad
into
lret
or
xor
push
mov
jle
andl
xchg
mov
push
cs
sahf
stos
scas
mov
xchg
fildll
jle
ret
lret
out
fmull
push
fcoms
or
xor
mov
lods
fs
adc
jmp
mov
out
ljmp
in
xor
inc
sub
pop
ljmp
data16
cli
pushf
sub
jo
imul
loopne
jge
adc
lods
and
fimull
cmp
insw
sbb
mov
push
xchg
pop
xor
leave
mov
ljmp
adc
fcomp
pop
lcall
push
nop
mov
xchg
stos
loope
dec
sbb
sub
loopne
pop
imul
lret
add
sub
cmp
xchg
icebp
jo
mov
ret
mov
pop
pop
lea
mov
rcl
addr16
cmpsb
push
incl
ljmp
add
push
jo
cmp
adc
mov
gs
fidivl
hlt
cld
mov
loope
sbb
sbb
scas
push
lret
repnz
loopne
cwtl
cmp
and
stc
mov
cmc
gs
pop
cmp
test
cli
sti
and
inc
pop
xchg
hlt
lret
xor
xchg
add
in
shlb
stos
jb
sbb
mov
into
inc
and
add
inc
inc
mov
dec
mov
jbe
pushf
push
lret
push
pushl
adc
test
pushf
mov
das
inc
jge
insb
aaa
lea
inc
fstl
sbb
idivb
cmp
clc
test
jecxz
xchg
ss
cwtl
shlb
cmp
xor
dec
mov
cmp
lret
push
fdivr
shll
mov
idiv
fisubl
pop
mov
sub
es
stos
imul
adc
stos
xabort
das
lock
out
mov
cmp
fdivp
jnp
mov
loopne
test
cmp
dec
cmpsb
sbb
sbb
or
mov
mov
pushf
mov
sarl
xchg
fdivrs
sahf
idivb
and
aam
mov
aad
rclb
aas
movsl
cli
pop
imulb
mov
pop
inc
sub
adc
shlb
sbb
rcrl
jno
adc
or
push
gs
jbe
dec
movsbl
dec
dec
pusha
pushf
push
jae
and
adc
cmpsb
sub
pop
xor
test
lock
cltd
repz
mov
or
push
mov
fiaddl
push
mulb
cltd
sahf
arpl
mov
cwtl
out
pop
pop
push
loopne
sahf
sub
in
bound
jle
adc
xor
insl
mov
add
xchg
adc
and
in
sbb
xor
out
mov
test
or
ja
xchg
mov
std
insb
ret
push
repnz
mov
int3
repnz
and
cmp
push
mov
lahf
pop
xchg
ss
stos
lock
fwait
jmp
pop
dec
in
push
jnp
test
ss
adc
js
daa
inc
xorl
mov
mov
fs
inc
and
cmp
enter
mov
lcall
fwait
lret
insl
xchg
inc
jb
add
jno
adc
or
dec
xchg
mov
cmp
add
jge
test
mov
movb
lret
and
or
mov
fnsave
xchg
dec
mov
roll
outsb
testl
nop
clc
lds
adc
jb
xor
jno
mov
movsl
faddp
and
xchg
popa
ret
mov
pop
pop
dec
add
or
lds
mov
call
lret
push
mov
mov
mov
pop
pop
pop
cmc
addr16
or
jp
ret
fdivrl
inc
and
add
cmp
daa
add
data16
ret
mov
push
mov
adc
fcoms
out
dec
jbe
out
xchg
das
fisubrs
mov
mov
adc
inc
jmp
xor
nopl
mul
mov
sub
xor
sub
pop
cld
add
iret
lret
stc
inc
and
inc
rcrl
sbb
or
lcall
dec
orl
xor
movsb
mov
add
into
and
push
push
cltd
in
mov
fdivr
cld
js
push
shrb
pop
inc
sti
xchg
xchg
insb
mov
xorb
fsubrl
movl
scas
push
mov
call
push
shll
dec
call
test
cli
cltd
adc
hlt
push
sub
pop
xchg
jae
sub
jo
jp
imul
into
fcompl
inc
pop
addr16
outsl
cmp
cmpsl
mov
cs
dec
jo
pop
jb
mov
pop
sbb
lods
aad
int3
push
sub
pop
adc
inc
xchg
popa
sbb
vmovhps
push
xor
mov
inc
scas
cmc
sbb
enter
ja
lods
push
push
mov
js
lods
mov
stos
lock
lods
add
js
jbe
insb
mov
cmp
jbe
jns
add
pushf
test
sub
data16
int3
aaa
mov
icebp
mov
mov
aaa
fstpl
pop
es
je
mov
pushl
jp
fidivl
iret
push
in
outsl
dec
inc
xchg
shrb
cmp
loope
hlt
cli
ljmp
jge
pop
mov
cmpsb
test
push
ret
pop
lcall
or
xchg
iret
loop
in
jmp
dec
sub
inc
call
xor
mov
jo
in
mov
jns
call
mov
or
pop
mov
in
addl
jl
out
sarb
mov
pop
push
sahf
ret
mov
dec
cmpsb
imul
daa
mov
out
loopne,pn
pop
jmp
jge
lahf
xor
xor
and
cmpsl
test
in
lcall
jb
push
aam
cmp
jl
inc
hlt
into
mov
rcrb
or
jge
fdiv
jecxz
or
mov
mov
roll
enter
cwtl
jmp
sbb
js
xchg
mov
fstl
xchg
xor
std
shll
or
repz
xchg
mov
addr16
add
mov
jle
pop
mov
sub
and
mov
add
mov
fidivrs
lds
mov
fisubl
and
inc
std
les
xor
xchg
cmp
flds
dec
ljmp
leave
or
xor
push
and
iret
shr
sub
add
out
rcl
push
cs
pop
in
pop
add
push
mov
repz
fldt
lahf
cltd
das
outsl
negb
cli
repz
hlt
and
test
jae
cmc
xor
sahf
and
dec
or
and
loopne
mov
and
sbb
pusha
mov
mov
pop
lods
inc
fsubrl
mov
xchg
jne
and
ds
mov
and
inc
data16
add
add
cld
pop
jle
cs
mov
or
outsl
xchg
mov
adc
mov
pushf
xor
inc
mov
sbb
and
scas
pop
mov
cmp
fsubrl
xchg
or
sarb
imul
repnz
sbb
fiaddl
fisubs
cmp
out
cli
mov
hlt
push
inc
stos
andb
mov
xor
jnp
lea
adc
jecxz
mov
stos
sub
outsb
gs
jnp
insl
xchg
orl
adc
addr16
jbe
jle
inc
fildll
out
testl
insb
outsb
jl
xchg
push
jbe
sbb
mov
ret
mov
adc
cmp
mov
sub
mov
xchg
jl
dec
and
push
clc
or
out
outsb
inc
inc
test
push
mov
fwait
push
cmpsb
mov
andl
call
shrl
push
ja
scas
pop
fdivrl
cmp
xor
dec
imulb
xchg
push
dec
or
pop
sub
mov
jae
and
in
aam
stc
cmc
in
lods
xor
neg
std
push
jg
loopne
aas
out
fdivs
in
out
aaa
mov
jle
sbb
into
int3
xchg
cs
insb
xchg
adc
cmp
and
xor
push
xor
movsl
xor
imul
shlb
ja
in
outsl
add
and
es
dec
xchg
sbb
mov
out
mov
dec
bound
inc
repz
xor
sub
std
out
mov
pushf
cmpsb
xor
inc
pop
and
lcall
sub
mov
jnp
inc
fbld
push
adc
loope
arpl
or
clc
dec
xchg
xchg
sub
lahf
jg
inc
mov
mov
aaa
xor
je
arpl
mov
fiaddl
adc
sbb
xchg
movsl
mov
mov
dec
fcmovb
test
pushw
jle
js
cmp
cmp
or
mov
stos
cmp
insl
jle
shl
xchg
or
adc
xor
pop
insl
lds
sbb
jb
cmp
imul
jecxz
inc
fld
in
jl
pop
out
or
gs
mov
push
xchg
pop
outsl
pop
orb
ljmp
je
arpl
mov
imul
pop
jbe
xchg
je
sub
or
cmp
daa
insb
clc
cmp
xor
sbb
and
icebp
add
in
in
fmul
aas
xchg
popa
jmp
push
lret
loopne
jnp
lea
test
or
cmpsb
xchg
pop
dec
xlat
in
dec
test
pop
mov
jl
push
and
mov
cltd
bnd
sbb
mov
push
pusha
adc
out
push
jp
pop
cmpsl
cmpsl
adc
jp
rcll
mov
dec
pop
nop
nop
mov
mov
test
cli
ds
and
dec
and
movl
loop
cmpsl
das
jp
jo
jle
push
fs
inc
lea
push
sub
enter
out
je
inc
fnclex
jne
and
pop
xchg
pop
sub
lea
dec
ss
arpl
lds
aas
and
in
sbb
cmp
sti
adc
xchg
in
push
scas
fcoms
mov
jp
push
push
aam
mov
int3
and
add
dec
lds
pop
inc
adc
mov
push
out
mov
push
nop
push
leave
repnz
rclb
dec
in
shll
sbb
adc
xchg
loop
and
pop
push
loopne
mov
adc
cli
jne
mov
scas
imul
daa
mov
test
cmpsl
test
push
jae
mov
ficomps
std
mov
push
push
pop
and
push
clc
or
mov
sahf
mov
es
stc
mov
pop
sahf
pop
in
fiadds
ret
jo
push
fwait
pop
and
xor
das
and
xchg
xor
nop
or
shll
outsb
sahf
jl
pop
scas
mov
pop
movsl
xor
into
dec
lock
cmpsl
nop
jl
push
pcmpgtd
inc
mov
mov
test
mov
xor
add
fs
mov
or
sti
movsb
sub
insb
out
fstl
stos
mov
cmpsl
repnz
negb
imul
xlat
xorl
push
or
mov
fsubp
in
mov
dec
fstpl
clc
stc
add
push
jns
inc
adc
xor
sbb
inc
pop
or
add
in
aam
test
out
iret
sub
jb
push
shll
dec
subl
push
jle
xorb
and
xchg
stos
add
cmp
push
add
loope
inc
daa
sbb
xchg
mov
out
addr16
and
mov
add
sti
xor
xor
ljmp
mov
icebp
call
push
in
rcrb
ret
mov
and
repnz
in
jg
cmpsl
cli
and
xchg
dec
mov
fdivr
xchg
sub
jmp
test
push
sub
test
insl
popa
test
mov
test
xchg
adc
dec
cmpsb
sbb
pushf
sbb
and
cltd
mov
cmc
jge
movsb
in
test
mov
sbb
outsb
or
sahf
loopne
sub
xchg
adc
movsb
shl
jae
sti
loope
faddl
inc
outsb
pop
lods
sub
add
mov
outsb
xchg
mov
in
ret
stos
frstor
jnp
pop
hlt
inc
mov
inc
add
jb
pop
outsl
push
jns
mov
push
push
ss
xor
aam
mov
or
fsubs
cwtl
jns
out
or
in
dec
test
movsl
and
jecxz
mov
jns
mov
ss
mov
jns
or
dec
jg
pop
lods
jle
jne
lcall
push
icebp
pop
sub
and
dec
adc
pusha
clts
push
lahf
mov
lret
lahf
stos
bound
add
push
outsb
insl
ret
sbb
cmpsb
mov
mov
ljmp
mov
push
jg
repz
insb
add
adc
inc
push
pop
or
hlt
cmc
adc
sub
pop
xchg
leave
xor
fwait
jnp
xlat
xor
adc
sbb
cmp
ret
sub
imul
popf
mov
leave
mov
leave
xor
icebp
test
jbe
movups
repnz
scas
int
enter
xchg
mov
insb
pop
mov
cs
cmp
cmpsb
inc
cltd
push
fmul
das
out
adc
jmp
psrlq
es
loope
mov
loope
cs
xor
mov
lret
ret
pop
mov
inc
sub
sbb
scas
sbb
test
clc
mov
jp
pop
mov
sbb
lret
add
outsb
mov
rcrl
ficompl
lds
arpl
stos
aas
jbe
out
jns
aas
or
sbb
dec
lods
inc
test
cmp
pop
push
loopne
lock
push
mov
enter
test
add
xor
mov
pop
xor
test
add
das
rcll
mov
lahf
in
xlat
xor
jmp
jl
or
xchg
inc
jg
sbb
ret
outsl
fld
ljmp
cltd
pop
mov
jp
or
sub
mov
sahf
or
movsb
data16
push
jecxz
sub
dec
mov
mov
iret
jle
and
hlt
movsb
cmp
sbb
aaa
jb
xor
jecxz
rcrl
jbe
repz
das
test
shll
push
pop
cmp
arpl
push
ds
and
adc
cmc
or
mov
icebp
arpl
xlat
lock
ret
sbb
mov
cmp
mov
inc
rclb
sbb
loop
insl
insl
cmp
shlb
and
cmp
cmp
out
test
lea
sbb
jno
imul
cmpsl
movsb
out
pop
xor
out
lea
xor
shr
insb
ss
les
pop
cmp
lods
adc
inc
jge
dec
jecxz
xchg
ds
outsb
out
scas
mov
jne
jb
jmp
pop
mov
mov
add
fs
lret
rolb
jmp
mov
imul
jbe
sub
mulb
sub
lcall
out
pop
loopne
nop
test
iret
push
jl
enter
rclb
test
xor
mov
push
push
or
mov
dec
inc
inc
sbb
shll
test
rolb
xchg
and
pop
andw
xchg
fcoml
xchg
out
jns,pt
leave
xor
inc
popw
mov
jbe
cs
and
notl
repnz
add
sbb
inc
cld
scas
xor
pop
aaa
and
push
in
outsl
negb
xor
ficoms
xchg
pop
loopne
stc
loope
mov
push
jle
sub
and
xchg
sar
mov
insb
xchg
in
xor
cwtl
cltd
dec
data16
ret
xor
fistl
test
xorb
adc
sbb
and
sbb
cmp
or
or
lds
or
jo
js
and
dec
mov
cmp
push
dec
pop
lock
or
sbbl
jb
out
sbb
inc
add
scas
popf
adc
rcrb
xchg
mov
cli
xor
ret
or
cli
imull
pop
jnp
lock
popf
and
and
xlat
idivl
ja
cmp
dec
sub
xor
cmpb
call
inc
insl
js
dec
push
ds
sahf
out
stos
sahf
jmp
lea
lock
mov
hlt
gs
fdivrs
sbb
jno
pop
popa
cmp
shl
test
cwtl
dec
dec
xor
leave
aas
in
xor
jb
jecxz
adc
adc
push
mul
outsl
sub
rolb
in
jmp
stos
mov
in
xor
lcall
icebp
inc
inc
and
jle
fistpl
enter
enter
shll
or
xchg
aaa
jmp
adc
push
push
subb
imul
mov
cwtl
js,pn
mov
clc
mov
adc
lcall
lea
mov
jecxz
inc
je
int
add
repnz
pop
mov
out
mov
arpl
push
add
add
and
mov
int
jg
lcall
sbb
sbb
mov
leave
push
jmp
pushf
mov
mov
mov
jp
cmp
cltd
sub
sti
idivb
cs
aaa
scas
dec
es
lcall
imul
inc
mov
data16
insl
lods
adc
mov
and
mov
xor
pop
mov
mov
pop
fldcw
add
push
mov
dec
jl
bound
fs
sub
xchg
lret
cmp
movsl
repz
or
out
jns
mov
rorb
shll
ljmp
mov
jecxz
bound
into
xchg
in
loopne
adc
dec
jcxz
push
mov
repz
mov
mov
pop
xor
in
mov
or
scas
data16
mov
mov
dec
or
dec
push
and
pop
stos
jmp
cmp
jmp
stos
test
mov
leave
decb
and
sar
loop
outsb
negl
and
or
push
dec
in
mov
fs
push
sub
sbb
clc
push
dec
in
js
inc
fstps
insb
sub
sub
test
dec
adc
jnp
std
or
xor
or
xor
test
bound
add
test
push
mov
jnp
ret
sbb
fucomip
sub
xor
test
popf
adc
cmp
scas
and
sbb
and
push
mulb
xchg
jnp
xor
mov
pop
cmp
fmuls
pop
mov
aad
cmp
pop
mov
jle
jge
jle
maxps
push
ret
sub
inc
call
mov
sbb
popa
lahf
jbe
adc
in
fsubr
cmc
ret
cmp
cmpl
push
fs
sbb
jge
mov
bound
cmpsl
xchg
cmpsb
xchg
das
xchg
pop
push
repz
icebp
ret
inc
gs
xchg
loope
sub
fcmovbe
fdivl
pusha
dec
in
bound
nop
ret
xchg
or
aas
cmp
dec
into
test
add
add
nop
insl
hlt
pop
int3
cmpsl
push
jecxz
popf
cmp
mov
add
mov
int3
ret
cmpsl
xchg
jbe
cld
adc
sbb
lock
push
inc
icebp
mov
xchg
loopne
jp
cld
mov
jge
mov
mov
jecxz
js
sbb
movsb
add
jmp
movsl
sub
dec
and
xor
pop
pusha
sahf
inc
psraw
test
xchg
push
adc
das
fadds
jmp
cwtl
sub
insl
repz
lods
cmp
jg
divb
hlt
jo
or
push
jno
ret
sub
std
fwait
dec
les
mov
jnp
lock
fstps
movsl
std
dec
cmp
mov
fs
shl
inc
call
lahf
adc
jbe
mov
bound
lock
xor
clc
pop
push
add
ret
pop
lea
xor
push
mov
pop
lcall
popf
xchg
sbb
sbb
lahf
pop
push
insl
icebp
add
aas
mov
out
jo
int3
fmul
mov
jne
or
mov
loop
jmp
in
mov
ficoml
test
out
test
shrb
nop
jl
nop
and
adc
je
fsubp
xchg
outsb
adc
stc
and
mov
xchg
ret
outsb
mov
fildll
jmp
xor
xor
outsl
push
test
pushf
jne
pop
out
dec
fildl
mov
push
jecxz
shlb
gs
mov
into
test
fstpt
fstp
and
nop
pushf
pop
les
dec
cmpsl
push
push
mov
inc
sbb
mov
inc
jbe
mov
mov
shll
jge
pop
sbb
mov
gs
ss
sub
adc
fnsave
push
repz
jl
test
popf
les
repnz
jae
jp
xor
shufps
int3
push
insb
ret
clc
jbe
cmc
inc
cmpsl
loopne
arpl
xor
ljmp
aas
adc
cmp
mov
sub
xchg
inc
mov
aam
mov
push
imul
outsl
mov
sub
insb
inc
push
lahf
ja
orl
pop
xor
lods
cmp
lcall
rclb
loope
or
aad
add
enter
push
xchg
hlt
inc
push
sbb
mov
enter
xor
loope
push
arpl
stc
pop
enter
sbb
hlt
clc
xchg
jb
xchg
mov
mov
std
push
sub
inc
btr
mov
ljmp
repnz
mov
fimull
xchg
fnsave
push
lods
out
pop
ja
dec
mov
loopne
ss
aad
mov
push
dec
xchg
sti
xlat
mov
icebp
xchg
or
insb
jecxz
sub
cmpsl
push
jg
xchg
cs
or
stos
xor
push
push
mov
loopne
leave
pop
lret
lods
jns
xchg
fcompl
pop
or
cmp
xor
into
sub
mov
popf
add
adc
jb
push
cmc
jo
mov
xor
or
pushl
aam
aaa
arpl
xchg
rcrb
repz
in
stos
mov
adc
cmp
dec
sti
insb
repnz
jo
fdivp
mov
daa
imull
popa
mov
out
sbb
adc
jl
popa
in
bound
add
rcll
and
dec
out
fs
push
dec
stos
fistl
mov
shll
dec
push
sub
xor
lock
mov
out
test
xchg
add
frstor
cmp
dec
aas
jnp
pop
js
and
pop
cli
jae
adc
pushw
sarl
inc
add
jp
hlt
mov
inc
sbb
in
orb
sbb
xor
shll
and
mov
into
jbe
repnz
or
int3
js
cs
iret
es
lahf
iret
xor
test
loope
xor
repnz
push
mov
jne
push
sub
push
inc
mov
addb
pop
in
xchg
sbb
push
adc
repnz
dec
mov
int
lods
fmull
cs
jne
icebp
outsb
inc
fisttpll
mov
jne
mov
push
ret
jb
into
in
xor
sbb
movsb
mov
adc
out
pop
mov
sbb
mov
mov
ljmp
lods
lea
incl
cmp
add
lret
out
in
test
mov
testb
ljmp
push
sub
lret
adc
push
add
push
mov
jbe
int
xor
out
push
cmpsl
pop
filds
mov
test
jecxz
les
jnp
dec
icebp
arpl
and
xor
push
push
loop
jg
add
in
popf
div
mov
leave
test
int3
sub
xor
jb
add
out
adc
dec
xchg
shl
adc
test
hlt
lret
sbb
push
gs
mov
mov
lea
jl
das
sbb
int3
repnz
ret
pop
sbb
divb
mov
test
cmp
roll
inc
out
and
add
das
mov
mov
loopne
inc
test
add
inc
jo
pop
das
loopne
into
adc
data16
fwait
cwtl
xor
push
lahf
nop
fs
stos
inc
jg
mov
ret
adc
bound
daa
mov
cmc
jo
push
insb
jmp
xchg
xchg
xchg
jmp
stc
out
std
ljmp
push
addr16
sti
sti
stc
dec
push
mov
in
hlt
inc
xchg
fs
push
movsl
insl
inc
push
xchg
movsb
jo
aam
mov
std
lahf
and
mov
xchg
xchg
add
dec
add
in
pop
xor
xor
cs
enter
and
insl
jle
push
xchg
pop
std
xor
test
mov
das
adc
or
jno
gs
sub
adc
sti
or
stos
xor
testb
adc
loop
jae
cltd
dec
xlat
sbb
xor
int3
test
ja
sbb
push
dec
out
cmpsl
fbstp
or
fdivl
nop
xor
in
mov
pop
fsub
out
mov
or
dec
pop
dec
jae
sbb
fstpt
mov
and
dec
clc
cltd
addr16
test
push
std
bsf
xor
in
leave
rcrb
adc
dec
sbb
xor
out
push
das
loop
sub
repz
inc
mov
sti
out
mov
cmp
xchg
mov
pop
sbb
lods
shrl
stos
sti
stos
outsl
mov
imul
mov
lds
test
sub
push
and
cld
mov
test
inc
aam
mov
xchg
roll
or
xchg
ljmp
xor
jg
cmp
mov
ror
outsl
sub
scas
lock
cmpsl
mov
adc
fbld
movsl
mov
test
pop
xor
dec
rorl
push
xchg
xchg
xchg
pop
gs
cmp
int3
xchg
sti
lret
cmc
test
imul
jp
sti
mov
clc
inc
mov
aaa
cwtl
bound
test
add
insl
push
jg
mov
outsl
insb
popf
sub
push
imul
cmp
jne
xor
scas
inc
pop
pop
pop
fwait
sbb
xorl
fstp
call
add
sbb
add
call
inc
imul
dec
sbb
mov
loop
xchg
loope
cmp
jno
sti
jge
cs
mov
fists
or
aam
and
call
rorb
bound
cmp
sbb
dec
jo
scas
fs
jbe
inc
pop
fwait
xchg
sbb
hlt
stos
int
adc
pop
arpl
mov
pusha
jl
sub
and
dec
pop
add
xchg
lea
push
xor
push
out
cld
aas
mov
mov
mov
jbe
mov
xor
push
push
mov
mov
jecxz
mov
push
inc
inc
pop
aam
testb
xlat
dec
jmp
xchg
insl
jl
inc
aaa
pop
lods
inc
mov
pop
pop
push
sub
and
cld
cli
lahf
sub
cmpsl
sub
ficoms
cmp
int3
inc
dec
jmp
pop
push
ja
mov
push
push
add
into
mov
sbb
inc
sub
push
xor
daa
sahf
in
shlb
stos
mov
movsb
inc
xlat
insb
pop
repz
enter
popa
aam
lahf
cwtl
fcomps
and
leave
aas
arpl
jo
dec
fsub
ja
inc
stc
push
xchg
ljmp
push
fnstenv
dec
std
sub
lods
outsb
shlb
mov
out
adc
dec
xchg
jae
pop
ja
jecxz
dec
fmulp
imul
insl
xor
mov
fistpll
in
dec
lods
dec
pop
lahf
mov
xchg
insb
xor
lret
add
hlt
test
fwait
cmc
out
mov
mov
shll
push
jno
lahf
jb
sbb
pop
adc
outsb
je
out
in
add
lcall
repnz
cmp
inc
cltd
loopne
addr16
push
call
sub
out
adc
jmp
push
fs
mov
dec
mov
mov
imul
aas
push
or
arpl
jae
add
mov
int
repnz
scas
testb
cmp
loopne
mov
fadd
outsl
in
and
add
popa
xchg
pusha
sbbl
mov
ret
movsl
rorl
ja
push
sbb
fidivl
stc
mov
fiaddl
mov
lods
cmp
popf
in
ja
into
sti
jno
mov
aad
cmc
repz
pop
inc
sub
xor
jbe
inc
outsb
ss
outsb
inc
pop
leave
jp
jl
movsl
int3
repz
xchg
adc
pop
xor
out
xchg
mov
inc
pop
insb
mov
mov
mov
popa
inc
scas
outsl
sub
pusha
into
rcrb
dec
in
js
or
cmp
daa
xor
stos
add
sub
fwait
popa
dec
stc
sti
mov
addr16
or
xor
fwait
mov
mov
fcompl
dec
and
mov
and
int3
sub
cmp
inc
push
in
lret
inc
test
ss
xchg
movsl
cwtl
aad
sbb
inc
push
sbb
mov
add
cltd
adc
and
pop
nop
stos
xor
cmc
xchg
les
jmp
xlat
cmpsl
loope
pop
popf
adc
int3
pop
aas
cmp
dec
lcall
xor
sub
mov
pop
xchg
dec
daa
rcr
or
bound
push
or
add
out
aas
enter
mov
mov
stos
sbb
aas
mov
in
aaa
pusha
adc
rcrl
pushf
leave
inc
fdivs
fiadds
or
mov
xchg
sub
cmp
xchg
mov
mov
ja
add
push
outsl
stos
sub
cmc
sahf
movsl
sbb
xchg
pusha
mov
mov
inc
mov
mov
pop
popf
jno
cmp
jo
dec
sub
fsubp
xchg
dec
mov
sbb
mov
lret
adc
repz
int
adcb
into
add
shlb
mov
push
mov
jp
or
mov
mov
lods
push
rorb
movsl
cmp
and
push
dec
inc
fstl
fistpl
enter
push
addr16
hlt
test
xchg
inc
sub
cmp
movsb
adc
les
inc
rcrb
sub
sub
jg
sbb
ret
push
sahf
int
cmc
jno
shrl
andl
int3
loope
add
push
push
dec
mov
inc
fndisi(8087
inc
test
call
jle
cld
mov
mov
outsl
fcoml
movsb
icebp
add
cmp
dec
xchg
jnp
imul
cmp
cmp
shl
dec
hlt
stos
sub
jo
jns
lcall
mov
sub
lea
mov
mov
jae
pop
mov
push
cmp
and
sbb
cmp
mov
jne
lahf
cld
imul
and
lcall
cmp
cmp
cmpsl
push
jle
and
into
xchg
jmp
push
sbb
mov
movsb
mov
pop
insb
mov
push
shlb
dec
data16
xor
movsb
push
jle
add
push
shl
mov
les
imulb
mov
gs
or
mov
int
adc
push
lods
inc
mov
adc
adc
lret
bound
cltd
or
push
in
mov
mov
ret
bound
aad
xor
pushf
mov
inc
fnstcw
fldt
pop
clc
sub
xchg
push
inc
sbb
dec
mov
push
int3
inc
cltd
inc
mov
enter
mov
and
lahf
or
fistpl
or
stos
mov
pop
dec
lahf
push
lea
add
loope
es
pop
scas
adc
hlt
jge
jge
or
ss
pop
mov
ja
lea
and
fmulp
test
es
mov
enter
cltd
addl
sbb
lods
mov
loop
mov
xor
aas
mov
lcall
cwtl
in
lret
aam
rclb
adc
cmp
adc
jle
dec
lret
gs
shr
sub
scas
movsl
add
pop
lret
sbb
iret
mov
adc
and
out
pop
cmp
mov
xchg
xchg
xor
into
lret
push
fwait
jp
sbb
mov
sbbb
mov
cmp
loop
sub
fsubr
cmc
aas
addb
mov
inc
fstpt
mov
mov
clc
test
or
clc
mov
inc
sub
add
into
jo
pop
add
test
dec
pop
add
cli
add
sub
fld
daa
lahf
add
mov
testb
cmp
pop
lret
outsb
pushf
ds
push
movsl
daa
aam
cmp
sahf
mov
cmpsb
sub
movsl
push
mov
jne
repnz
es
fidivl
into
cmpsb
sub
jle
pop
lret
mov
push
into
xchg
jmp
inc
in
rcrl
add
mov
dec
cmp
and
fdivs
ds
push
lds
sbb
aaa
imul
xchg
mov
in
xor
cmp
push
fisubs
mov
push
sti
fmuls
out
rcr
xchg
das
nop
sub
dec
xor
cmp
rcrl
mov
repnz
push
sbb
and
enter
test
jb
cmc
lret
xor
rol
fsubp
xor
add
pop
inc
add
push
stos
inc
mov
inc
in
fnstenv
sbb
jge
outsl
aam
cmp
mov
jmp
cmc
ret
sbb
pop
mov
daa
shll
push
mov
push
ljmp
add
xor
dec
aam
xchg
xchg
cmc
pop
in
xchg
movl
sbb
leave
faddl
mov
daa
pusha
lods
jns
cmp
ss
add
dec
into
jb
pop
mov
adc
fisttps
jp
jle
das
xchg
movl
repnz
test
dec
mov
lret
adc
cmp
scas
jmp
or
stc
inc
pop
and
pop
test
out
std
outsb
adc
in
outsl
inc
aam
cmpsl
ds
and
mov
aam
test
pop
aam
and
inc
repnz
subb
pusha
xchg
jecxz
or
dec
inc
adc
add
xchg
lods
cwtl
popf
aaa
imull
aam
inc
shlb
xor
mov
popf
add
js
icebp
fisubl
loop
nop
adc
lods
fmul
stos
ret
aas
lock
jmp
inc
xchg
enter
and
dec
xchg
add
xchg
xor
orl
cmp
gs
jb
mov
push
jae
inc
fsubl
gs
subb
ja
push
scas
aad
fcoms
call
jne
insb
ja
ret
sti
mov
adc
lret
xor
mov
adc
mov
pop
mov
push
pushl
mov
sub
jbe
and
rclb
push
mov
add
ret
xchg
dec
fistpl
sub
mov
add
jb
popf
fs
dec
sbb
pop
sub
mov
add
and
mov
add
add
xchg
xor
sub
sbb
or
add
and
xchg
adc
add
and
xor
shlb
or
cld
mov
jle
pushf
push
mov
xor
inc
pop
pop
mov
jbe
mov
xchg
xchg
insb
mov
adc
mov
push
lret
jnp
fwait
jp
mov
cmp
cmp
jge
sub
iret
fbstp
fs
imul
test
and
mov
cmpb
sub
adc
repz
dec
mov
ja
cmp
cmp
mov
rcll
scas
outsl
arpl
dec
mov
sbb
test
insl
mov
nop
addb
shrl
push
popf
dec
out
ficoml
add
pop
xchg
push
dec
mov
lods
jno
pop
pop
mov
sub
je
add
or
aam
cmp
push
add
add
cmp
out
shr
iret
jno
add
adc
sbb
test
ss
roll
bound
push
inc
add
sti
ret
add
or
fnstcw
mov
in
xor
jle
test
mov
outsl
movsl
jns
cmp
pop
push
mov
jp
mov
loop
repnz
or
inc
mov
xlat
jmp
inc
push
out
jmp
add
jno
mov
arpl
and
bnd
stos
mov
sub
pushf
sti
mul
jg
dec
cmp
mov
lret
dec
push
lds
fistpll
pop
cmp
out
xchg
icebp
add
sahf
mov
jecxz
fisubrl
lods
xchg
xchg
sub
mulb
inc
and
xchg
rorl
sbb
push
mov
iret
or
sahf
push
sbb
rcrb
aad
push
sub
out
mov
fcomps
xchg
adc
jbe
jmp
dec
aad
jae
sbb
xchg
movsl
inc
xor
pop
aas
mov
leave
dec
cwtl
mov
in
fidivl
int3
xchg
xchg
xor
pop
mov
test
mov
lret
cmpsl
xor
pxor
inc
sbb
dec
rorl
out
and
out
ja
cld
mov
movl
or
push
iret
movsl
add
and
cld
fiaddl
mov
dec
add
xorb
mov
test
inc
dec
adc
adc
dec
cmp
mov
int3
lret
icebp
stos
jnp
pop
pushf
inc
pop
jle
test
push
arpl
push
or
dec
iret
gs
in
test
push
add
sbb
push
rol
or
ficomps
imul
xor
pop
add
xor
dec
inc
scas
mov
jb
cmp
shrl
adc
sahf
inc
movsb
cs
push
xchg
lods
cs
mov
rcrb
lcall
cltd
xchg
pusha
cld
das
ds
xor
mov
out
test
ror
addr16
repnz
push
sbb
xchg
xchg
cmp
add
dec
outsl
shll
push
popf
cmp
les
into
inc
je
gs
ja
daa
in
mov
pop
sbb
ret
aad
mov
push
jnp
lock
push
rcrl
mov
scas
sbb
or
clc
repnz
jbe
cmpsl
xchg
push
dec
sub
or
ror
jge
inc
push
in
xchg
in
xchg
pushf
lret
and
test
daa
jl
pop
mov
inc
sub
cmp
enter
sub
and
dec
inc
jle
scas
ffreep
add
aas
jo
xchg
lods
mov
cmp
in
rol
xchg
outsl
imul
push
lret
int
mov
sahf
loope
pop
repnz
sbb
call
xchg
dec
pop
lock
jecxz
and
mov
mov
lds
adc
adc
outsb
mov
cmp
xchg
loopne
mov
and
ljmp
cmp
cli
in
fs
mov
push
bnd
mov
or
push
push
imull
pop
int
adc
and
pop
mov
scas
popa
int
lods
cmc
testb
clc
lea
out
xchg
push
push
mov
inc
je
mov
adcb
xchg
movsb
add
call
mov
pop
scas
fistpll
and
js
pushf
inc
loop
jge
dec
mov
push
cmp
mov
or
inc
inc
and
gs
adc
stos
xor
mov
mov
movsl
cmp
dec
add
outsl
movsl
xor
cmp
jecxz
call
lret
add
outsl
cmp
or
cmp
aad
sub
sbb
negl
jne
push
cmc
cmp
add
cmpsl
ret
aad
hlt
add
pop
push
cmp
je
mov
fsubl
les
add
and
lcall
stc
sbb
mov
mov
xchg
cltd
shl
popa
stos
mov
mov
mov
cmpl
arpl
and
clc
mov
xchg
shll
popa
cmpb
int
mov
jmp
cmp
lret
cld
jbe
add
push
cwtl
pop
adc
cmp
loop
cmp
xchg
push
dec
mov
or
jns
xchg
popa
call
push
int3
sub
push
inc
ret
fistps
mov
sub
jle
sbb
mov
mov
xchg
lret
fidivrl
cmp
mov
and
mov
in
gs
fistpl
dec
adc
or
stos
sub
fbld
pop
sub
ljmp
int
jno
imul
das
cli
xor
ljmp
ss
and
xchg
inc
adc
cmovle
sub
push
ss
in
jne
lock
daa
sub
ss
dec
mov
push
jae
movsl
add
mov
int
mov
dec
xchg
cmp
pop
xor
cltd
add
xchg
divl
mov
repz
cs
xchg
je
imul
mull
pop
cmc
xchg
je
repz
mov
into
stos
aad
roll
dec
cltd
sub
mov
or
mov
cmp
inc
xchg
in
inc
and
and
hlt
lock
pop
dec
addr16
stc
pushf
popa
pop
ror
mov
or
nop
lahf
sbb
push
add
movsb
dec
mov
adc
inc
add
sbb
sbb
pop
pop
xchg
aas
xlat
out
or
hlt
adc
in
inc
pushw
mov
pop
push
stc
popa
test
sbbl
push
hlt
cli
pop
repz
sti
dec
es
movsl
loope
jmp
std
or
jmp
aam
or
jg
popf
nop
xchg
and
sbb
pop
add
push
icebp
je
imul
xchg
aas
sbb
mov
dec
push
jbe
fsts
push
pop
data16
jl
jcxz
popf
pop
jnp
push
fistpl
int
dec
fxch
popf
xor
xchg
loope
sub
sbbb
pop
or
cmp
mov
cmp
loope
jae
popa
push
cmpsb
lret
ret
cmp
ficoms
into
dec
cmpsl
nop
shr
data16
lahf
sub
loop
xor
xor
rcl
and
inc
in
sub
sbb
inc
jbe
dec
mov
pop
cmc
mov
fcmovnb
dec
test
repz
push
mov
sbb
stc
lods
inc
movsl
fadd
mov
jge
or
loope
add
adc
xchg
push
jae
mov
outsl
or
outsl
and
pop
pop
and
scas
pop
call
test
insl
cmpb
inc
sub
hlt
nop
out
das
fsubs
je
mov
mov
mov
les
xor
jle
aam
jo
add
cmp
adcb
sarl
mov
sub
in
xchg
or
shl
popf
mov
mov
in
std
dec
mov
sub
lcall
dec
rolb
cli
sub
out
lods
loopne
es
test
mov
vmaxpd
cli
lcall
pop
mov
imul
ja
sahf
cmp
leave
dec
js
inc
xchg
sarb
inc
adc
push
mov
sbb
dec
dec
nop
xchg
mov
mov
and
pop
aas
push
mov
mov
daa
imul
push
dec
out
sbb
aam
jecxz
adc
rorb
inc
sbb
jbe
mov
testl
in
rorb
inc
mov
fistps
push
repz
stc
mov
imul
or
push
insl
pop
sbb
jmp
adc
inc
mov
inc
push
push
je
push
ret
test
add
lcall
adc
jmp
lcall
xchg
sub
pushf
inc
cli
in
pop
das
mov
dec
sahf
pop
xor
cwtl
and
xchg
pop
clc
jge
sahf
sti
daa
loopne
push
mov
cmpsb
rorl
cmp
mov
in
test
mov
xchg
mov
xor
push
das
pop
mov
inc
xchg
ljmp
or
jo
mov
fstpt
mov
xor
cld
mov
leave
cmpsl
ss
insb
lods
xchg
ljmp
push
xor
cs
mov
insb
pop
mov
out
inc
sahf
ljmp
dec
mov
iret
xor
sar
inc
fsub
cmp
dec
mov
mov
loopne
call
pop
imul
dec
cmpsl
inc
aam
push
add
lds
in
adc
dec
dec
adc
nop
xor
xchg
pop
cmp
enter
xlat
xor
sbb
scas
mov
scas
mov
aaa
testl
stos
jo
sub
in
mov
popa
aad
pop
scas
fwait
push
and
inc
sbb
pop
out
arpl
in
jb
cmp
xchg
fmuls
jecxz
pop
rclb
pop
sar
gs
xchg
repnz
pop
imul
push
ss
out
jmp
call
mov
mov
sbb
sub
push
inc
loopne
aaa
arpl
fcoml
or
or
popf
jg
jae
mov
xchg
jo
imulb
sahf
ret
cmp
test
mov
mov
fdivrl
pop
ficomps
testl
popa
cmp
js
and
lds
lcall
add
jns
leave
jne
pushf
xor
xlat
mov
pop
jno
xchg
xchg
add
inc
jb
sub
dec
es
or
jge
je
nop
adc
mov
cmp
and
sbb
mov
cmp
testb
mov
push
add
inc
xchg
lock
dec
fisubl
or
xor
idivl
leave
xor
or
gs
jp
jae
push
mov
lods
or
add
je
xor
sub
sub
gs
in
and
fstp
test
rolb
imul
push
leave
pop
xor
mov
pop
push
push
dec
jge
or
cltd
jb
dec
loop
pushf
mov
adc
mov
fsubl
pop
or
cltd
popf
pop
test
arpl
outsl
popa
sbb
push
mov
or
das
mov
fstpt
jb
sbbb
add
shrb
push
lods
fistps
cli
add
mov
movsl
push
out
inc
xchg
dec
imul
add
or
in
sub
fisttpl
mov
lods
xor
or
dec
xchg
and
and
lock
in
dec
in
sub
push
push
scas
dec
add
je
push
push
pop
scas
sub
push
loopne
sbb
cmp
cwtl
stos
sub
xor
jae
ja
sarb
cmp
lds
pop
push
dec
mov
mov
adc
jle
mov
fdivp
xchg
inc
nop
pusha
jae
jno
mov
shr
pop
dec
xor
sbbb
sub
je
subb
cmpsb
xor
pop
popa
mov
notl
push
dec
cmpsl
test
or
cmp
cld
xor
adc
mov
or
sbbl
imul
gs
fwait
jno
test
push
mov
loopne
jae
ret
lahf
inc
arpl
ret
sub
or
dec
in
cli
movsb
push
dec
and
pop
movsb
mov
testl
sbb
lcall
jae
or
xor
dec
sub
stc
adc
sub
jnp
mov
aaa
imul
xchg
jo
movsb
in
insb
push
unpckhps
lret
or
imul
out
sbb
cmpsb
dec
ja
test
lods
cld
mov
mov
imul
aad
js
pusha
cltd
out
ret
loop
lret
aad
jbe
dec
arpl
shl
cltd
cltd
push
inc
mov
inc
test
sub
shrl
nop
dec
lds
ljmp
sbb
pop
stos
add
pop
ds
xor
fldl
sbb
cs
jg
xorb
mov
xchg
subl
pushf
mov
push
imul
les
ss
push
cmp
data16
lods
xchg
dec
cwtl
xchg
sub
loope
das
lock
repnz
insb
es
dec
scas
pop
bound
aas
int
faddp
mov
in
subl
and
test
scas
ret
test
jbe
imul
push
ret
jae
ja
daa
xchg
rcl
pushf
and
inc
lcall
jne
jo
je
stos
or
cli
xchg
out
mov
xlat
cmp
cmp
mov
dec
mov
add
cmp
sub
sbb
outsl
jmp
pop
call
in
lea
cli
sti
in
inc
icebp
addr16
jle
pop
xchg
inc
mov
xor
mov
inc
pop
cmp
pop
mov
clc
push
xchg
push
pushf
fwait
pop
cmpsl
loope
cmp
pop
push
cmpsl
ljmp
adc
or
pop
cltd
add
mov
mov
mov
sub
call
aad
mov
xor
rcl
sti
lock
repz
cld
lods
mov
outsl
mov
pop
adc
pop
xor
sarb
add
pop
sub
in
fwait
adcb
inc
ja
dec
imul
shl
cmp
push
jmp
jp
adc
lret
inc
and
push
lods
cmpsl
xor
cltd
lahf
mov
push
and
adc
xor
cld
push
andb
shrb
mov
mov
mov
fildl
push
add
into
fldcw
sub
jg
pop
and
addr16
inc
push
add
sbb
pop
pop
jbe
mov
mov
pop
aad
outsl
or
dec
repnz
mov
xor
mov
std
lret
arpl
add
sti
pop
adc
xchg
fisttpl
ljmp
mull
add
loope
adc
xchg
jp
aas
push
sub
cmpsl
mov
in
cld
loop
test
ljmp
jl
popf
outsb
fucomi
inc
jns
rclb
adcl
loopne
fistpll
jbe
dec
mov
dec
jg
and
and
mov
adc
insl
mov
inc
daa
lock
aas
xor
mov
pop
xor
adc
adc
cs
sti
lods
divb
repnz
into
aaa
jno
jmp
cltd
add
shll
dec
test
lret
insl
mov
jns
cmp
xor
xchg
out
outsb
subb
fadds
test
les
out
jmp
mov
fwait
mov
push
cwtl
mov
xchg
jmp
inc
insl
int
fcmove
cli
xchg
sub
jb
inc
push
loop
rcrl
mov
rcll
pop
and
loopne
cmpsl
frstor
cmp
push
push
add
mov
gs
jle
pop
in
aam
outsl
add
movsb
cld
fnsave
sbb
sbb
hlt
clc
jnp
xchg
loop
popl
jge
sub
push
pop
adc
lods
jae
pop
sub
popa
cltd
imul
shl
aad
xor
sbb
fnstcw
test
or
out
add
adc
imull
gs
mov
mov
popa
fbstp
cmp
loopne
jo
call
jg
mov
jmp
movsl
dec
test
inc
mov
xchg
out
aas
jmp
push
or
sub
test
loop
psubsw
outsb
adc
sbb
mov
jg
jmp
fbld
mov
inc
call
sub
mov
mov
mov
imul
adc
fnstenv
dec
fstl
daa
sub
xchg
lods
xchg
cmc
popa
mov
sbb
push
add
sti
mov
loopne
pop
mov
scas
fwait
call
fs
data16
xchg
sub
pop
cmova
mov
push
or
mov
pop
stos
xchg
xchg
xchg
jbe
add
dec
or
pop
pop
ret
cwtl
push
in
loopne
jne
lcall
mov
js
insl
cmp
mov
pop
push
add
pop
test
pop
mov
jmp
jl
xor
push
out
push
sub
aaa
xor
js
enter
xor
fsubrl
xchg
repz
call
lret
dec
lods
fstps
mov
jmp
mov
jl
jo
fs
out
daa
call
inc
mov
sub
mov
sub
dec
push
sbb
scas
sahf
xchg
rorl
mov
sub
inc
jge
inc
outsl
aam
lds
out
aam
std
out
add
sbb
mov
repz
lds
lcall
mov
das
paddusb
adc
xchg
int
rcll
push
mov
jbe
dec
push
rcll
jne
xor
mov
xor
add
xacquire
or
adc
lret
fsubs
enter
mov
shrl
dec
push
sarb
fnsave
cmpsb
inc
stos
sbb
jo
push
jns
push
or
mov
mov
push
test
std
sbb
sbb
jns
add
xor
cmpsb
mov
int
inc
js
lret
inc
or
nop
cwtl
xchg
fcoml
imul
xlat
negb
sub
jl
jb
xor
in
pop
es
dec
xchg
clc
daa
cwtl
cli
or
cli
pop
sbb
pusha
cli
pop
imull
dec
sub
addr16
xchg
outsb
out
jmp
jmp
or
push
sub
into
aad
test
xchg
imul
cmc
dec
lock
inc
or
xchg
push
sahf
in
lods
jbe
in
stos
nop
sub
pop
and
aad
ret
mulb
test
mov
les
cli
in
inc
fistl
xor
push
lea
cmp
imul
adc
fwait
or
push
pop
shrl
cmp
daa
jbe
loop
dec
nop
aad
stc
mov
add
xchg
loope
ds
mov
rcr
movsb
adc
and
fstpl
xor
mov
add
pushf
sbb
sbb
sahf
xor
jae
scas
test
les
test
mov
dec
insb
pop
iret
xor
out
repz
sarb
int3
sub
ds
pop
test
ficoms
mov
push
jo
mov
sbb
out
in
imul
mov
in
fildll
movsb
cmp
js
jmp
mov
inc
push
xchg
orb
jp
and
fnsave
add
jae
push
in
jecxz
jno
xchg
inc
cmovns
dec
push
cld
in
cmp
cmp
sti
xchg
mov
jae
dec
movsl
out
into
jno
sbb
out
adc
stc
fmull
cmp
jle
jecxz
fsts
outsb
push
xchg
push
popl
scas
outsl
mov
ret
jl
aaa
sub
lret
and
push
aas
jo
sub
ret
jmp
jo
push
xor
pop
loope
cs
add
add
fucomip
pop
in
xlat
mov
add
or
lods
xchg
pop
clc
dec
lahf
or
popf
pop
xchg
pop
adc
adc
dec
mov
cmpsb
imul
xchg
mov
inc
out
sbb
js
cwtl
stos
mov
mov
scas
imul
stc
jge
movsb
or
cmp
sbb
xchg
cmpsb
loop
mov
jge
xor
adc
fsubrp
into
sti
es
xor
or
scas
push
loopne
aaa
and
bound
mov
and
lock
mov
and
sub
mov
inc
add
pop
cmpl
stc
ficoml
sbb
mov
adc
mov
inc
hlt
scas
ljmp
mov
fs
call
sbb
jg
and
in
cld
add
or
cli
xchg
pop
fsubr
inc
sbb
add
lds
dec
xchg
cwtl
icebp
scas
or
ficoms
in
push
push
inc
lods
push
adc
dec
clc
mov
push
jle
movsl
or
adc
les
and
mov
int3
mov
bound
push
cli
push
jp
xchg
and
lock
pop
push
out
mov
cli
movb
data16
jno
loope
lret
subb
jbe
ljmp
test
testl
cmp
leave
cmpsl
push
jns
ficoml
mov
data16
pop
sub
out
jl
add
cld
xchg
add
dec
cmp
dec
rcrl
repz
add
imul
inc
mov
push
das
inc
add
jnp
jg
pop
es
adc
xor
arpl
divl
test
cmp
mov
and
push
mov
orl
and
xchg
adc
nop
mov
xor
dec
imul
jp
xchg
inc
popa
lock
xor
imul
call
ret
or
sub
outsb
xor
dec
rclb
mov
movsl
and
stos
data16
cmpsl
sbb
cmp
xor
mov
add
push
sbb
mov
dec
call
and
add
movsb
pushf
jge
data16
pop
jecxz
popf
hlt
rol
aas
push
das
nop
push
xor
daa
bound
enter
jnp
popf
scas
sub
add
fwait
sub
add
mov
insl
mov
cld
mov
imul
ret
jg
cmp
add
sbb
push
sbb
xchg
sahf
mov
adc
pushf
jb
pushf
mov
push
cld
jne
push
mov
lret
movsl
dec
jo
push
mov
fcomp
push
inc
lds
divl
dec
fwait
xchg
adc
inc
dec
je
mov
push
adc
mov
pop
and
out
mov
pop
ss
stos
je
pop
sbb
nop
cmc
mov
testb
mov
popa
and
mov
scas
imul
jb
ret
fistpl
mov
fsin
fsubrs
adc
lcall
sti
xor
adc
imul
jno
mov
cmp
addr16
lahf
ret
ss
out
mov
loopne
aaa
sub
daa
add
addb
rclb
ret
adc
xchg
adc
inc
inc
mov
outsb
clc
hlt
out
stos
mov
cmpsb
hlt
sbb
repnz
inc
movsl
inc
mov
adc
int
sub
rcr
sub
dec
lods
ds
mov
cli
lock
cmp
stos
aas
jns
jl
mov
int
leave
daa
imul
aaa
andb
add
and
in
mov
enter
push
out
push
insl
insb
xchg
aad
or
sbb
iret
data16
sbb
xchg
enter
jge
inc
ljmp
jecxz
pop
jo
and
and
subb
push
fidivs
mov
jg
sub
dec
pop
inc
ss
pop
xor
mov
lock
push
push
outsl
cld
dec
rorb
jmp
stos
in
gs
cmpb
rcrl
inc
push
cli
jl
mov
mov
add
insl
std
enter
fdivrs
ret
xchg
out
mov
daa
outsl
jle
stc
bound
fidivrl
pop
and
jb
mov
fisttps
sbb
mov
repnz
sbb
jp
jbe
dec
gs
imul
xor
mov
sub
jge
cmp
test
mov
imul
jl
cmpl
jns
pop
mov
les
mov
int3
addr16
mov
andb
and
inc
lahf
jmp
inc
icebp
inc
dec
insb
clc
inc
or
data16
popf
mov
repz
mov
hlt
mov
sbb
sbb
xchg
sbb
push
push
push
iret
xorb
sbb
jns
cmpsl
pop
bound
mov
mov
xchg
push
insl
inc
inc
popa
pop
pop
in
lcall
repz
jg
sbb
call
loopne
push
cmp
dec
jp
pop
pop
loope
call
in
push
jns
add
lahf
push
xor
xlat
and
cmp
push
into
movsl
xor
in
out
into
loop
push
xor
rcl
and
cld
mov
pop
idivl
push
jle,pn
cmpsl
lret
test
push
fnstsw
fistl
mov
mov
push
and
sbb
scas
jb
clc
ret
inc
rclb
and
fcomip
inc
in
loopne
enter
cmp
dec
lods
lods
hlt
cli
enter
push
test
jnp
std
or
pop
mov
xor
xchg
xchg
dec
sub
insl
out
lahf
and
jne
nop
movsb
ljmp
or
xor
sarb
xor
sbb
xchg
xchg
pop
into
and
mov
and
ret
faddl
mov
in
cmpsb
outsl
sub
push
mov
adc
add
add
leave
push
loope
aam
in
mov
cmp
sub
push
and
shrl
xchg
mov
or
jmp
add
orl
lahf
pop
sub
shr
cli
and
out
and
decb
jge
cmp
cmp
inc
clc
jno
inc
sub
dec
sub
std
pop
dec
fnstcw
daa
stc
insl
cmpsb
xchg
addl
out
fsubl
pop
adc
scas
in
cmp
lock
jle
or
ss
add
lock
in
jl
loope
sahf
jne
dec
imul
je
push
mov
add
bound
stc
lret
push
inc
adc
or
das
repz
push
push
ja
jae
xchg
jbe
inc
xchg
xchg
clc
test
sbb
inc
iret
xchg
sbb
or
inc
jbe
shl
shr
pop
or
ret
or
pop
cli
jge
inc
gs
and
sarl
mov
rol
int
sub
pop
nop
fdivr
scas
jno
test
sbb
lods
mov
mov
test
xor
jno
jp
xchg
mov
popf
xor
or
add
cmp
lret
add
scas
jmp
cld
daa
inc
add
sbb
jecxz
rorb
jp
rorl
ret
test
loope
mov
cmpb
push
cmpsl
xchg
scas
pop
bound
pop
lahf
lcall
in
add
idivl
adc
out
decl
xchg
cmc
inc
inc
mov
hlt
stc
scas
xchg
ret
ljmp
arpl
push
sbb
xchg
daa
mov
iret
call
add
popa
in
fwait
shlb
nop
and
pop
mov
sub
xchg
inc
push
stos
pushf
in
xchg
cld
lock
push
jmp
push
sahf
aaa
popa
outsb
or
xlat
cmc
mov
push
lods
fxch
lcall
jne
lods
adc
add
jmp
mov
dec
subl
cmp
int3
sub
ret
sahf
cmpsl
lock
ror
push
xchg
shl
dec
cltd
and
daa
mov
push
cmp
ss
jg
out
add
int3
sarb
jnp
lods
fcoms
pop
fs
cmpsl
iret
les
sbb
popa
pop
jno
mov
pop
test
int
mov
mov
sub
mov
dec
push
pop
sarb
pusha
in
mov
jnp
sub
movsl
add
mov
pop
clc
int
aas
movsb
stos
jle
call
jecxz
fstl
aas
push
inc
repz
hlt
cs
in
jne
loopne
mov
ds
iret
mov
mov
insb
push
adc
cmp
int3
fidivrs
or
dec
jp
push
nop
out
icebp
pop
push
insl
mov
ret
insl
mov
cmc
inc
dec
add
push
mov
aas
jecxz
jg
push
add
push
lea
jo
cli
or
fmull
mov
mov
popf
jg
mov
outsl
inc
mov
sub
sub
mov
push
clc
pop
xor
arpl
pop
lock
dec
es
imul
loope
lods
out
cltd
cmp
aam
rcll
sub
sarb
xor
add
dec
ja
xchg
inc
sti
addr16
lods
out
push
or
adc
shlb
insb
add
loopne
mov
pop
int
inc
lds
jo
enter
inc
mov
shlb
inc
cmpb
dec
cmp
xlat
sti
jge
inc
sbb
mov
subl
pop
cmp
loope
call
dec
or
std
icebp
sub
mov
adc
popf
or
gs
cmp
dec
andb
mov
clc
mov
gs
mov
jno
and
mov
jns
mov
mov
mov
xor
or
and
fwait
xchg
cmp
int3
push
cmp
mov
cld
or
insl
ss
outsb
sahf
scas
imul
fnstcw
add
pop
mov
cli
adc
xchg
pop
or
mov
bound
and
and
fwait
movsb
fcoms
xor
mov
adc
mov
mov
inc
and
mov
popf
mov
rcr
cmp
loop
and
lea
sbb
outsl
pop
negb
imul
and
lds
jns
cmpb
les
gs
sahf
jl
push
stc
aam
jne
stc
scas
je
data16
arpl
cmp
mov
push
aam
test
add
inc
jne
xlat
xchg
jae
mov
stos
sbb
popf
sbb
xchg
mov
leave
push
popf
sbb
jbe
adc
insb
clc
mov
mov
lret
cmpsb
test
xor
ds
dec
fldcw
and
jno
jae
cmp
imul
jno
into
push
xor
outsb
push
cltd
insb
int
sbb
idivl
cmpsb
shlb
sub
test
jo
jmp
sbb
xor
mov
xchg
call
test
fisttpll
rcll
mov
ret
sub
cli
gs
pop
jle
es
aaa
push
mov
stos
incl
aas
cld
fnstcw
cmp
mov
xchg
daa
fiaddl
jecxz
inc
movl
test
jae
fists
mov
int
add
lret
sbb
out
mov
int
mov
add
pop
popa
add
and
or
pop
dec
popa
mov
cmp
cmc
addr16
adc
aam
cld
dec
cltd
leave
sub
aaa
lods
or
jl
and
lods
add
push
lock
add
pusha
test
pop
inc
sti
xor
sbb
and
jns
xchg
push
scas
repz
adc
mov
pop
ficomps
rcrl
sub
dec
loope
push
rcrb
add
adc
mov
in
dec
arpl
mov
xor
inc
fnstcw
sbb
mov
cmpb
int3
repz
daa
jno
or
mov
push
xorl
movsl
push
shlb
pop
add
outsl
pop
fs
sbb
lret
sub
push
scas
xor
mov
sti
or
nopl
jmp
cs
vmovmskpd
dec
fmull
push
adc
sub
sub
cmc
insb
jbe
lret
mov
sub
or
inc
mov
sahf
scas
int3
xchg
sub
push
adc
xor
lock
movsb
cmpsl
gs
dec
xor
push
xor
mov
or
imul
adc
clc
pop
and
call
shlb
cmp
pop
cmc
pop
idiv
shrb
in
jle
dec
movq
rorl
imul
aas
cmpsl
les
mov
fstps
sbb
movsl
ficoms
daa
movsb
mov
cmp
dec
pushf
fdivrs
mov
filds
sbb
daa
call
stos
sbb
xor
push
jmp
jbe
mov
jmp
xchg
clc
loope
inc
mov
dec
cmpsb
ror
aaa
mov
outsl
hlt
add
xchg
test
add
push
in
loope
insl
rcr
cmc
imul
add
mov
jecxz
lret
push
stos
mov
inc
inc
mov
adc
jg
lahf
hlt
xchg
xchg
mov
sbb
mov
nop
movsb
dec
jg
pop
adc
push
xlat
sti
push
out
movsb
cs
push
sub
ret
pop
mov
mov
xchg
mov
sub
out
fs
jg
cmc
test
pop
cmp
mov
aaa
mov
mov
out
addr16
lret
mov
mov
pop
push
and
xchg
add
push
pop
std
xor
in
loop
mov
push
push
cmp
dec
cmp
pop
ds
aad
mov
pop
out
add
sbb
fcomp
sbb
cmc
or
jne
cltd
repz
lcall
fistl
test
std
xchg
dec
mov
jae
cmp
xchg
imul
shll
lock
cld
je
out
ljmp
sub
xchg
or
xchg
ds
xchg
dec
loop
sbb
lret
inc
sub
lods
cmp
pop
stc
movsb
hlt
adc
leave
imul
stos
sahf
pop
lret
xchg
int
roll
inc
pop
lea
sub
mov
popf
xchg
leave
pop
mov
xchg
and
mov
xor
add
cmpsl
out
xor
sbb
rcll
xchg
test
test
xor
adc
xchg
xor
fldt
mov
cmpsl
jo
inc
imul
aad
shlb
insb
push
push
scas
and
mov
out
repz
jmp
mov
repnz
inc
out
sbb
pop
pop
jl
fisubrs
out
and
lahf
jae
inc
adcl
adc
sub
mov
jl
call
stos
das
pop
outsb
xor
rcrb
mov
dec
cmpb
jl
cmpb
sbbb
mov
xchg
or
dec
pop
jnp
push
je
sbb
sub
fwait
lds
pop
pop
jb
xlat
inc
out
pop
or
cmp
push
jbe
pop
adcb
pop
fstps
inc
mov
ds
test
add
jnp
xor
js
mov
mov
stos
das
xchg
cmpsb
sbb
repz
div
lods
sub
add
cmp
dec
int3
xor
jo
ffreep
jg
jbe
cmp
cwtl
je
fdivl
cli
push
mov
push
notl
mov
sub
ror
dec
fistpll
es
shlb
outsb
sub
mov
fcmovu
cmpsl
add
pop
inc
pop
adc
or
push
jg
jmp
add
sub
mov
xor
out
loop
mov
adc
cmp
sub
cmp
imul
cmp
lods
lods
sti
jnp
cmp
adc
inc
sub
jnp
mov
xchg
mov
inc
mov
add
notl
jo
mov
sub
mov
push
pop
movsb
inc
push
xchg
outsb
sbb
push
aas
aas
push
mov
pop
into
sub
mov
stc
and
lock
mov
and
jle
loop
lcall
repnz
outsl
jns
or
and
filds
lea
jns
loope
jne
loop
pop
outsb
push
cmpb
sub
ds
daa
out
subl
rcrb
adc
je
xchg
jnp
sub
push
movsl
cmpsb
jb
mov
mov
fcoms
jl
push
enter
dec
cmp
aad
pop
pushf
cli
jo
ja
inc
andl
jmp
testl
push
xchg
push
cli
outsl
ret
jb
lahf
js
loop
mov
imul
scas
andl
loopne
mov
stos
int3
js
adc
cwtl
xchg
pushl
or
push
jle
mov
sbb
hlt
fstl
ret
ja
cmp
lea
sbb
xor
cmp
xor
mov
or
sbb
fs
movb
je
or
mov
sub
mov
dec
mov
hlt
or
mov
push
jns
cld
leave
insb
cmp
clc
mov
inc
cwtl
xor
adc
sub
xchg
mov
dec
mov
sbbb
push
enter
shll
lock
rolb
or
fimuls
jno
push
pusha
into
fdivs
cmp
ss
movsl
test
add
je
add
test
rcl
sub
cmpsl
gs
in
lock
or
lock
roll
out
cmpb
movsb
imul
mov
iret
popa
mov
imul
mov
jnp
sbb
test
jne
xor
jmp
cwtl
xchg
std
dec
jl
fisubrs
fidivrs
jae
and
cmp
lret
out
jmp
mov
loope
repnz
test
sub
jecxz
popa
mov
ret
fcom
fstpl
stc
ret
lcall
cmp
mull
or
push
xor
popa
sbb
out
cld
xchg
les
lods
lret
jne
rorb
mov
stos
mov
push
repnz
fwait
stos
test
push
int3
cmp
push
mov
or
and
cli
cmpsl
mov
mov
adc
or
mov
lret
pop
imul
xor
arpl
jbe
push
je
xor
daa
or
dec
out
jle
loope
push
dec
cmpsb
mov
sahf
insb
and
sub
pop
or
mov
cmp
xchg
imul
js
outsl
popa
sarb
fstpt
add
fwait
xchg
xchg
sti
mov
out
sbb
cli
mov
xchg
xor
push
xor
dec
dec
sub
fstp
mov
stos
jmp
nop
ljmp
subl
repz
cld
inc
xchg
sbb
mov
aam
movsl
mov
daa
mov
rclb
xor
test
orl
sbb
or
in
ret
pop
xchg
scas
mov
xchg
addr16
jb
cmp
into
sbb
loope
mov
sub
lahf
outsb
jns
and
mov
int3
insl
pop
xor
mov
into
dec
mov
in
lret
ljmp
mov
out
add
fcomip
push
loop
mov
xchg
aam
cmp
add
movsl
test
and
mov
push
test
fldl
aam
pop
and
or
arpl
fcompl
popf
cs
sbb
imul
imul
jmp
ja
push
sub
lcall
lods
mov
bound
mov
pop
xchg
xchg
push
or
fxch
out
mov
pop
test
cmc
lahf
add
cmc
or
movzwl
lret
mov
in
testl
pop
aas
insl
cmp
pushf
jbe
rcll
imull
dec
push
rcrl
sbb
sub
pushf
jnp
pop
lds
out
pop
inc
cli
cmp
cmp
aad
mov
mov
arpl
cmp
js
out
pop
and
ret
iret
pop
scas
repnz
daa
sub
std
in
sbb
negl
mov
andl
fstl
cmpb
outsb
and
mov
jnp
in
fcompl
mov
cwtl
pop
ret
push
add
sbb
nop
mov
push
cwtl
icebp
icebp
outsl
cltd
inc
mov
mov
xlat
cmp
mulb
mov
hlt
jl
push
mull
idivl
scas
mov
scas
or
jbe
out
push
les
pop
stc
xor
sbb
stc
loopne
loop
insl
mov
imul
aam
fimuls
movsl
divl
jnp
test
push
push
sub
fucomip
scas
ret
lret
or
xchg
xchg
adc
loopne
xor
test
inc
inc
scas
into
aad
mov
pop
bound
pop
and
xchg
fwait
sub
nop
in
push
xchg
pop
dec
jg
test
scas
test
or
pop
loop
out
rorl
sub
pop
insl
mov
inc
fldcw
add
aas
notl
sbb
scas
test
movsl
int3
ds
or
lahf
lret
les
repnz
ret
popf
out
into
icebp
es
push
and
dec
mov
arpl
enter
cmp
hlt
mov
mov
add
mov
pop
inc
scas
mov
jnp
jbe
aad
jp
xchg
out
into
xchg
jecxz
sbb
sbb
or
dec
mov
mov
fwait
or
add
push
push
mov
cs
dec
or
inc
dec
xor
mov
jns
inc
push
jo
jne
in
inc
ss
xchg
push
xchg
or
adc
cmc
andb
test
push
or
int
inc
lds
shl
lcall
stos
lods
test
and
cmp
jle
sahf
stc
imul
or
sbb
mov
jecxz
std
rcr
xor
sbbb
pop
jnp
aam
jnp
jecxz
cs
scas
bound
xchg
pop
adc
mov
pop
cli
jno
mov
mov
dec
cmpsb
movsl
jno
mov
dec
inc
add
push
and
pusha
out
inc
out
ret
outsb
ljmp
insl
pop
jle
popa
andl
inc
push
xchg
leave
popa
jno
mov
test
scas
inc
mov
inc
cli
outsb
xchg
scas
push
cld
ljmp
loop
das
data16
add
add
jbe
jb
pop
pop
dec
add
rolb
push
aad
mov
aam
into
popa
andb
jbe
or
add
dec
sub
jg
jae
stc
dec
push
cmpb
xor
ret
shl
and
ljmp
andl
fnstcw
cmp
mov
add
lret
ss
mov
sub
or
mov
es
jle
into
frstor
mov
aam
dec
std
pop
fsubr
cmp
jmp
and
sbb
lcall
cmp
js
xor
dec
lock
add
les
mov
xchg
or
sub
mov
mov
dec
popa
int
pop
mov
scas
mov
ficoml
mov
cmp
and
outsb
inc
ds
cmc
dec
jbe
repz
sub
in
dec
inc
inc
inc
ljmp
jle
jb
nop
mov
lret
dec
popf
sub
sbb
xchg
add
into
push
aaa
nop
test
cmp
mov
add
cld
mov
jle
push
shrl
add
sub
aad
scas
or
pop
std
jl
mov
in
sbb
test
jbe
cli
cmp
jge
add
imul
push
xor
push
cmp
xor
inc
shlb
xchg
xlat
les
imulb
cli
jl
or
popf
mov
inc
out
je
fisubrs
jae
jg
jl
push
jmp
mov
add
sub
pop
adc
push
mov
adc
mov
imul
stos
lods
sbb
pop
test
sbb
scas
add
jmp
jno
xchg
mov
ja
and
insl
pop
cmc
and
arpl
sub
dec
data16
sti
or
fwait
sub
or
lahf
and
jae
sbb
call
dec
in
out
in
inc
xor
cmp
mov
outsl
in
lock
mov
push
test
adc
sbb
icebp
sahf
xlat
repnz
jns
lret
pop
outsb
addl
imul
xchg
mov
dec
cmp
mov
lds
or
cmc
stos
addr16
fsubs
test
data16
push
jmp
dec
cwtl
add
out
mov
dec
stc
pushl
lahf
rep
and
inc
adc
aaa
das
dec
add
adc
dec
inc
loop
or
xchg
ljmp
pusha
mov
or
mov
iret
add
scas
push
stc
xor
jge
das
leave
push
fistl
iret
aam
aad
push
or
xor
lock
push
mov
push
ds
aas
pop
pop
jl
cmp
push
jp
repz
xor
xor
out
adc
sub
arpl
adc
xchg
push
loop
push
ficoms
mov
int3
inc
mov
repz
pop
sbb
andl
dec
pop
cmpb
lret
call
fwait
jo
aam
in
loop,pt
add
jl
mov
in
or
dec
ss
gs
repz
sbb
das
or
imul
mov
push
mov
outsb
imul
sbb
stos
lahf
pop
push
cwtl
aad
test
xor
push
movups
pop
push
cmp
adc
push
pop
dec
jne
jge
in
aaa
loop
mov
sub
rolb
popa
in
pushf
icebp
mov
mov
ljmp
mov
outsl
insb
mov
mov
stos
xchg
icebp
mov
rcrb
cmp
loopne
and
insb
jmp
xchg
dec
inc
push
push
mov
adc
sbb
lret
lahf
mov
loopne
idivl
cli
dec
cltd
in
pop
fs
mov
push
push
loopne
xchg
sbb
iret
ret
aad
push
test
lock
dec
adc
inc
sbb
ror
outsb
dec
lods
iret
data16
jecxz
mov
repz
mov
stos
int3
jae
ss
stc
mov
or
fiadds
adc
inc
pop
ss
mov
xchg
jecxz
mov
xor
popl
cmc
sarb
insl
pushf
daa
nop
jo
dec
pop
les
xchg
cwtl
dec
or
lds
dec
cs
ds
mov
push
and
out
data16
sub
cs
ds
jne
mov
add
aas
sahf
sub
daa
cld
mov
push
inc
iret
rorb
pop
cmp
jnp
repz
xchg
scas
push
mov
lds
xor
test
xor
pop
lods
and
push
popa
push
add
pop
jmp
pop
insb
cs
ret
cmp
xor
fsub
mov
inc
fisubrs
push
test
sbb
or
aaa
fdivl
std
mov
sub
test
aaa
or
sub
push
add
adc
push
adc
xchg
inc
repnz
jbe
fs
xchg
mov
movsb
pop
aas
enter
cli
adc
es
xor
stos
addr16
subb
pop
mov
outsl
fnsave
xchg
dec
shll
sbb
pop
jo
stos
mov
inc
mov
icebp
loope
daa
outsb
lea
push
jno
jl
les
xchg
fsubrl
mov
lss
pop
mov
and
jno
scas
scas
mov
mov
gs
xor
sub
cmp
cmp
movb
daa
mov
testl
mov
inc
add
cmp
popa
movsl
cmp
jge
js
aaa
ss
imul
call
outsb
je
or
dec
in
dec
push
sti
imul
jno
mov
subl
repnz
nop
or
mov
mov
fwait
sbb
fdivrp
pop
sub
mov
push
push
push
test
ds
add
add
loop
jno
adc
icebp
fld
xchg
in
sbb
imull
fsubr
outsl
pop
mov
and
inc
mov
repz
sub
and
lods
push
leave
pop
jb
aas
scas
mov
mov
pop
adc
addl
pop
imul
sub
outsb
jo
dec
aaa
pop
outsl
xchg
jns
xor
pop
adc
pop
add
ljmp
andb
sbb
push
aad
cmp
dec
test
and
rcr
pop
mov
sub
dec
cld
mov
loope
push
icebp
add
movsb
jnp
push
mov
cmpsb
call
push
pop
xchg
ljmp
push
cmp
cmc
pop
jmp
lds
dec
and
xor
decl
sbb
adc
inc
jb
and
cmpsb
dec
mov
dec
repnz
daa
mov
rorb
xor
adc
push
mov
loope
push
cmp
pop
je
or
xor
popf
cmp
jns
lds
stos
std
pop
outsl
lret
stos
es
stc
pop
add
imul
es
cmp
repnz
int
and
scas
or
pusha
dec
gs
lret
inc
inc
out
aad
repz
sbb
and
repz
bound
or
lahf
cmpsl
cld
sbb
rolb
cmp
push
mov
cld
add
pop
jmp
shll
cmp
mov
add
pop
inc
outsb
dec
loope
mov
pop
dec
andb
fisubrs
pop
or
pushl
ljmp
fwait
js
ror
sbb
jb
sbb
push
sub
or
pop
fistpll
mov
test
repz
aam
test
dec
cli
push
fs
mov
sbb
call
xchg
jae
sub
cmp
xchg
jns
pop
or
in
or
push
fxam
dec
jge
punpcklbw
loop
add
cwtl
pop
pop
test
or
mov
orl
sar
es
add
aad
pop
rcll
cltd
out
fiaddl
sub
xor
sub
pop
dec
cli
into
lcall
pop
or
or
in
insl
shlb
test
mov
push
xchg
xchg
add
mov
inc
cltd
pushf
test
adc
test
mov
jb
popf
in
mov
dec
xlat
fstpl
fcompl
addr16
std
and
jae
sbb
add
dec
aad
sub
lea
mov
lock
pop
popf
gs
test
pop
and
dec
xor
sbb
push
fs
imul
push
lock
jne
jnp
pop
adc
aad
mov
jnp
je
adc
push
sub
rol
insb
cmp
lock
ficoms
lret
ret
dec
dec
jb
lods
fdivs
pop
mov
push
mov
in
pop
cltd
adc
test
test
out
lock
xor
adc
rorl
popa
test
pop
pop
fcmovnbe
addl
fs
cmp
xor
fiadds
mov
pop
mov
xor
mov
inc
jle
jne
enter
in
movsb
nop
or
scas
and
je
add
push
rcl
int
sub
push
shll
jbe
sub
pop
pop
lret
cwtl
ds
ret
sbb
incb
mov
push
es
test
mov
loope
mov
stos
cld
adc
mov
push
scas
sbb
adc
jnp
and
cmpsl
mov
inc
cli
aad
fs
andb
out
fcom
rcrl
jno
notb
ss
aam
jecxz
cmp
movsb
jb
inc
aam
cmpsb
sbb
ss
sub
adc
scas
ds
jg
cmpl
ja
or
aaa
cmp
xchg
mov
adc
imul
pop
dec
pop
push
scas
repnz
icebp
adc
aas
cmp
sbb
sub
mov
out
cmp
subb
icebp
inc
scas
popf
xor
xor
mov
ds
or
mov
repnz
aad
adc
xor
xor
cmpsl
orb
cmc
and
jns
sbb
movsb
sub
jle
jae
mov
pop
sbb
rol
repnz
popf
sub
add
dec
mov
sbb
or
divl
jnp
cwtl
loope
outsw
outsb
repz
lods
popa
push
inc
lods
mov
les
fldcw
sbb
loopne
les
clc
popa
xchg
mov
cmp
pop
repnz
lods
sahf
nop
mov
pusha
int
sub
xchg
addr16
add
aad
ja
mov
movsl
mov
lahf
and
shrl
mov
add
jp
xor
push
add
int3
dec
cmp
and
pop
sub
xchg
cmp
sbb
loope
iret
mov
sbb
sub
xor
aaa
out
sub
jmp
push
jmp
out
xchg
iret
adc
cmp
jle
out
jp
mov
xchg
xchg
cli
stc
push
cmpb
push
out
das
adc
dec
es
rclb
jge
dec
clc
ret
ret
ds
adc
adc
push
pop
mov
dec
imul
repnz
outsb
or
adc
xchg
loopne
or
sbb
sub
sub
xor
addr16
mov
jecxz
sub
cld
mov
insl
aad
dec
lret
ds
mov
mov
test
mov
or
cmc
push
mov
cmp
mov
mov
xchg
inc
mov
xlat
sbb
jmp
cmp
mov
push
mov
loopne
adc
scas
testl
ret
pop
pusha
std
icebp
mov
add
adc
add
les
mov
nop
call
test
jae
sti
push
lock
fs
xchg
push
jg
mov
push
out
jp
cltd
in
repz
push
test
pusha
xlat
loop
hlt
loope
mov
jno
fistpl
out
adc
cli
gs
test
sti
jmp
pop
xchg
and
xchg
jl
mov
lock
and
add
les
test
dec
fdivs
rclb
adc
adc
jo
shlb
in
jl
ljmp
daa
sbb
addl
icebp
loop
sub
mov
cmpsl
stos
xor
jg
rclb
ret
sbb
icebp
cmpsl
push
dec
cmpsl
xor
lock
jecxz
aam
xchg
sbb
and
repnz
pop
shrl
sbb
out
push
push
fsubs
addl
dec
xchg
sub
arpl
decb
or
fcomip
xor
sub
in
jle
adc
xchg
cmp
ds
or
loopne
push
outsl
push
test
ljmp
sbb
mov
cmp
mov
jb
jp
adcb
outsb
inc
mov
ja
loope
sub
pusha
inc
xchg
xchg
sti
xchg
movsl
fs
test
fidivrl
jnp
insb
xchg
jg
inc
fstpt
mov
addr16
stos
test
jecxz
fcoml
addb
and
jne,pt
lret
and
ret
or
pushf
sbb
ja
mov
in
inc
add
das
dec
mov
xchg
fidivrs
dec
pop
hlt
in
enter
mov
and
ja
pop
test
add
or
scas
pop
jno
stos
lods
lahf
adc
cltd
jmp
mov
imul
cld
mov
movsb
mov
mov
mov
mov
repz
out
clc
mov
xchg
repnz
aad
idivl
shll
add
xchg
icebp
push
sub
xorl
shll
xor
in
ror
or
pusha
aam
add
pop
ljmp
test
cli
ret
adc
mov
call
icebp
es
inc
pushf
xchg
xor
adc
ret
int3
dec
dec
sti
lods
xchg
andb
ret
dec
sbb
xchg
addb
in
and
std
loop
ss
dec
cmpsl
mov
xchg
gs
leave
lcall
push
jecxz
mov
fs
mov
add
xlat
pop
rcr
mov
push
pop
ficompl
stos
popf
jmp
jo
add
mov
jae
in
mov
lods
mov
fsubp
inc
pop
jge
jmp
sub
and
push
cmc
sub
rcll
pop
lds
mov
stos
xchg
or
outsl
imul
sub
pop
jno
and
test
mov
loopne
es
repnz
inc
movsl
pop
lcall
inc
stc
ja
out
outsl
jae
pop
xchg
xor
or
mov
inc
inc
and
in
insl
imul
xchg
push
lea
mov
sub
mov
bnd
xor
xor
jg
dec
push
fnsave
inc
lock
icebp
and
aaa
lods
sbb
mov
das
add
repz
rcrb
lahf
ss
stos
sti
movsb
mov
sub
adc
nop
sub
mov
pop
outsl
into
add
adc
add
ljmp
repnz
dec
call
mov
mov
add
inc
sub
mov
ret
push
out
add
int
test
adc
cmp
aam
xor
call
icebp
imul
mov
add
fs
cmp
mov
andl
test
or
mov
enter
gs
call
jb
pop
xlat
xchg
cld
mov
xchg
aas
dec
loopne
out
orl
fldcw
adc
add
mov
lret
adc
inc
hlt
ret
stos
jp
mov
jo
push
xlat
fisubrl
loopne
sbb
xchg
sub
pop
pop
fs
push
and
stos
xor
lcall
add
xchg
shll
and
fcoml
mov
mov
lock
dec
add
mov
in
push
not
nop
movsl
sbb
in
push
jmp
push
mov
xchg
hlt
outsl
addr16
popa
dec
xchg
cli
hlt
pushf
or
or
mov
das
aam
test
dec
sbb
push
add
cld
fiaddl
jbe
mov
dec
std
mov
aaa
mov
pop
sbb
pop
add
mov
jno
shrl
mov
cmp
iret
scas
gs
aas
cmp
jno
cmp
jne
fidivrs
into
cmp
sti
dec
dec
and
adc
add
mov
js
data16
call
and
lods
loope
sub
scas
sbbb
es
repnz
jg
push
mov
cli
cwtl
xchg
mov
js
jge
xlat
jecxz
repnz
in
jp
dec
rorb
std
in
stos
sbb
sar
rcll
dec
fisubrs
push
sub
xor
adc
addr16
sbbl
test
leave
sahf
mov
cmp
xchg
mov
jg
bound
cmp
dec
cltd
dec
ss
push
mov
addr16
mov
or
repnz
push
testb
xchg
mov
xlat
sbb
setns
xor
or
popf
shrb
stos
and
popa
cs
movsl
sub
scas
shll
int3
adc
lahf
pop
jmp
in
pop
in
jnp
scas
or
dec
pop
movsl
aaa
pop
jle
dec
popf
scas
dec
das
inc
dec
or
stos
jo
lds
mov
pushf
adc
adc
mov
cwtl
sahf
movsb
pop
adc
int3
sti
sbb
sub
add
and
test
fiadds
or
repnz
adc
dec
mov
mov
push
pop
push
repnz
lock
lods
mov
ds
and
cmp
movsb
push
jno
in
pop
or
inc
jno
jnp
adc
sub
or
pop
xor
jne
mov
js
jae
test
loopne
enter
inc
jb
sub
and
adc
test
jno
sbb
cmp
jmp
loope
jg
jl
les
pop
enter
in
dec
orl
cmp
addb
adc
or
sbb
jl
ss
jns
add
pop
pop
loopne
fucom
pop
mov
scas
scas
pop
pop
popf
in
faddl
add
xchg
pop
inc
or
xor
and
mov
xchg
addr16
jecxz
sbb
sbb
fsub
pop
inc
add
xchg
sub
push
mov
call
and
xor
xor
mov
shrb
lods
in
xor
xchg
push
mov
nop
and
jecxz
dec
or
add
cmp
movsb
fsubs
pop
repnz
movb
shlb
add
jnp
adcl
cli
inc
cld
xchg
dec
or
mov
pop
test
sub
xor
lcall
iret
imul
inc
cmpl
cld
sbb
xchg
ss
addr16
les
dec
loop
sahf
add
outsb
shrb
xchg
jae
ret
adc
mov
repz
jae
sahf
das
lods
pop
rep
and
push
nop
dec
fisttps
movsl
cmpsl
lea
rorb
pushf
and
inc
jo
pop
xchg
jo
adc
cmp
dec
fmull
cmp
xor
mov
cmp
lahf
cltd
js
dec
jae
push
out
pop
sti
rolb
aaa
push
inc
fucomi
or
jbe
mov
cmpl
leave
xchg
lahf
loope
adc
pusha
fldl
mov
loopne
aad
enter
push
aas
dec
ss
scas
sub
aas
imul
inc
mov
jno
ficompl
xchg
jl
lret
cli
in
inc
scas
incb
aas
jo
push
mov
cmp
jbe
jle
stos
outsb
daa
adc
dec
test
movsb
mov
ja
or
xchg
fsub
outsb
dec
sarb
bound
stc
cmovae
mov
mov
int3
adc
cld
test
flds
pusha
insl
push
mov
inc
ret
lahf
jg
mov
test
mov
pop
xchg
jnp
xor
insl
cld
pop
fcoml
jecxz
das
in
cmp
out
pushf
out
sub
dec
cmp
stc
cmpb
adc
mov
rcll
test
test
lods
insb
addr16
jmp
mov
daa
in
out
popa
cld
out
insl
add
movsl
pop
mov
add
inc
stc
cmp
aad
adc
sbb
mov
xchg
fmull
mov
cwtl
pop
or
ret
fidivl
mov
test
repz
cmpsl
pop
stos
loopne
js
inc
not
mov
adc
nop
cmp
mov
xchg
xlat
leave
mov
mov
dec
add
sub
negb
push
push
xchg
cmc
enter
cmp
dec
push
aas
add
iret
lock
sub
popf
push
jns
movsb
repnz
dec
jns
dec
xchg
shlb
xchg
dec
inc
mov
jge
bound
sub
sti
arpl
pop
dec
lock
js
scas
and
dec
into
xchg
mov
jo
std
pop
xchg
cs
jecxz
mov
mov
pushf
cld
xchg
push
les
fcomps
dec
sub
rolb
xor
pop
pushw
inc
dec
mov
out
push
adc
in
mov
sti
lea
fisubrl
sub
out
stos
push
push
ja
leave
jp
push
in
adc
xchg
pop
dec
pushf
push
es
fidivrl
push
mov
clc
gs
jecxz
enter
popf
and
fstps
call
jnp
xchg
out
icebp
pop
or
mov
sub
rep
push
stos
cmp
push
pop
sti
or
and
fstpl
add
gs
out
test
test
in
scas
push
lock
or
stos
jns
mulb
lcall
repnz
push
bound
lds
insl
push
add
lods
inc
push
jp
and
insb
jl
dec
frstor
les
ret
roll
jbe
mov
xor
and
stos
xchg
lds
cld
je
pop
stos
lret
or
xor
int
andb
movsb
es
sarb
outsl
popa
clc
dec
cmp
dec
jo
in
add
mov
cmp
fists
dec
push
mov
mov
or
ficomps
test
lods
sub
shl
lods
adc
ljmp
jg
aad
rcrb
pushf
or
repnz
push
jmp
or
repnz
popf
hlt
into
adc
mov
jmp
negb
shll
outsl
js
pushf
out
inc
mov
inc
xor
sbb
pushl
dec
arpl
xchg
mull
mov
mov
addr16
movsl
ret
stc
jns
in
ja
ret
outsb
inc
ds
data16
xchg
mov
int
sbb
pop
jnp
dec
clc
jmp
mov
sub
sub
mov
ja
fisubrl
cmpsb
jno
mov
mov
fisttpl
inc
push
and
push
xor
push
mov
nopl
mov
fldenv
fisttpl
cmpsb
mov
and
pop
faddl
in
xchg
or
cmc
scas
imul
rorb
add
cmp
cmpsl
mov
push
pop
sbb
shll
xor
ret
pop
fildll
or
es
shr
mov
pop
sti
in
lcall
jg
and
jmp
test
jb
or
jnp
in
lcall
fwait
mov
jmp
inc
inc
inc
pop
sbb
cli
pop
xchg
xor
or
rolb
cmp
mov
mov
push
je
icebp
pop
or
ja
xchg
mov
rcrb
inc
rorl
dec
insl
xchg
lahf
add
dec
xchg
jbe
jo
out
fwait
mov
xchg
call
repnz
stos
lods
jp
iret
mov
aaa
add
cmc
sub
mov
sub
inc
push
frstor
lods
sub
pop
adc
dec
cmp
sub
xchg
shlb
mov
imul
lds
lcall
or
dec
adc
and
push
mov
pop
mov
or
add
mov
scas
das
push
pop
ret
mov
mov
pop
lods
in
ret
fistpl
push
stos
adc
pop
xchg
pushf
xor
mov
adcl
mov
in
sub
rclb
sub
stc
xor
daa
insb
ret
push
adc
mull
mov
insl
pop
enter
sahf
dec
lcall
sub
mov
jl
pop
push
daa
xchg
mov
loop
sub
mov
lahf
and
xchg
jb
mov
or
pushl
xlat
push
mov
cld
addr16
and
lret
lock
pop
mov
mov
fimuls
push
sub
sub
inc
mov
adc
fwait
dec
sub
ljmp
xor
sbb
insl
mov
in
push
popf
mov
ljmp
out
dec
sbb
add
and
das
leave
xor
cmp
mov
cwtl
inc
mov
mov
xor
and
push
add
ror
gs
dec
dec
fld
pop
and
mov
cmc
jb
test
push
pusha
or
pop
addl
pop
ja
jecxz
dec
adc
xlat
fnstenv
mulb
dec
dec
into
movsl
mov
inc
cmpsl
cmp
rorb
mov
push
sti
mov
dec
dec
cmp
cmp
sahf
fs
xlat
into
cmpsb
out
mov
and
jg
pop
clc
push
jbe
push
or
test
sub
or
adc
lods
pop
imul
mov
sub
lods
cmpsb
sub
sbb
or
xor
hlt
push
adc
sbb
mov
mov
or
xor
xchg
es
jo
sub
mov
jecxz
jb
leave
adc
sti
xor
bound
push
push
in
lods
jne
lret
nop
mov
push
mov
mov
xchg
xchg
js
sbb
out
jne
xor
cmpsl
shl
xchg
jnp
repnz
pop
daa
loope
mov
dec
xchg
cld
pop
shl
and
push
stos
mov
std
adc
addr16
loop
pop
das
out
or
icebp
cwtl
pop
ja
popa
sahf
xor
insl
add
push
popa
in
pop
and
sbb
cmp
jae
leave
mov
shlb
shrl
mov
inc
mov
rcll
mov
fldt
cmpsb
and
das
mov
popa
mov
sbb
ret
gs
xchg
mov
mov
xchg
paddw
inc
sbb
adc
mov
scas
sbb
je
mov
and
ret
push
sub
stc
mov
and
cmp
jno
and
or
sub
pop
or
mov
aam
sbb
jns
mov
movsl
dec
sarb
mov
int3
aad
leave
dec
sub
add
add
leave
leave
dec
pop
fmul
mov
outsl
sub
push
stc
adc
cwtl
jns
fnstsw
add
test
test
xor
fistl
test
pushf
mov
cld
sub
testl
cmpsl
or
aas
mov
dec
punpcklbw
jb
xor
sbb
jae
mov
jecxz
dec
xchg
idivl
sub
arpl
dec
or
and
popf
mov
std
ret
push
or
adc
mov
jno
xchg
stos
add
dec
cmc
mov
dec
push
mov
movsb
ja
lods
into
in
adc
push
xor
js
sub
mov
pop
fwait
mov
push
scas
mov
add
fnstcw
mov
ror
lcall
jno
xchg
mov
in
leave
arpl
push
subl
fildll
inc
inc
iret
loope
test
arpl
pshufw
push
mov
addr16
test
loop
hlt
cmpsl
jne
adc
lret
insb
sub
imull
sub
push
jmp
lock
mov
xchg
mov
inc
rorl
adc
dec
lods
jnp
call
ret
jl
movsl
movsb
cltd
cmp
bound
inc
push
ret
stc
adc
mov
mov
mov
scas
in
adc
mov
rclb
ljmp
cli
mov
cltd
xor
mov
add
imulb
scas
mov
dec
push
lret
mov
dec
lret
addb
stc
jo
mov
sti
push
loope
arpl
sub
pop
dec
sub
out
outsb
ret
mov
cmpsb
test
xor
ljmp
dec
jp
dec
xchg
xchg
xchg
cmpsl
cmp
xor
mov
and
les
sub
push
mov
insb
pop
in
mov
ret
iret
sar
sub
cmp
stos
test
adc
pop
push
jecxz
movsl
shl
sub
xor
daa
and
shlb
inc
or
xor
adc
lods
ret
xchg
mov
pop
pusha
sti
aas
xor
mov
or
push
add
test
adc
popf
int
jns
pop
in
jle
aad
das
loope
xchg
in
add
repnz
lcall
outsl
sbb
xchg
cmp
jecxz
insb
add
push
lods
ja
sti
data16
jge
jge
or
scas
inc
popa
aad
cltd
xchg
push
dec
inc
mov
mov
pop
out
adc
shrl
iret
sarl
adc
jl
lea
test
pop
push
sbb
jno
stos
repnz
cmpsl
icebp
and
inc
mov
pusha
xchg
and
add
cld
orb
adc
loop
fadd
dec
mov
inc
bound
or
pop
sub
jb
mov
dec
cltd
xchg
out
ja
js
pusha
pop
dec
adc
movsb
add
movsb
idivb
fdivrs
pushf
int3
lret
out
mov
jge
xchg
pop
out
aad
sub
cmp
lods
sub
cmp
cld
f2xm1
jbe
ja,pt
stos
pop
vpcomw
mov
lock
xchg
push
icebp
fucomip
sbb
inc
ficoml
test
lret
enter
movsl
sbb
cmpb
or
pop
enter
jbe
cwtl
or
push
insb
xor
or
mov
and
xchg
pop
mov
loopne
data16
scas
mov
adc
fsts
lock
je
mov
pop
test
mov
shl
mov
fistps
loopne
or
scas
rcrl
pop
movsb
inc
dec
sbb
and
outsb
movsb
mulb
out
outsb
dec
mov
fmuls
sub
icebp
xchg
das
sarl
cmpsb
out
imul
inc
in
inc
clc
sahf
aam
gs
and
sub
std
inc
aam
or
pop
ret
loopne
divl
lods
mov
cmp
iret
ss
ret
nop
inc
rcrl
pop
cmpsl
cmp
in
mov
push
setne
int
add
jns
lret
push
xchg
cli
out
jne
sar
pop
mov
jp
cmpl
cmpsb
les
shll
push
in
test
lods
fsubrs
jbe
ret
rep
pop
cmc
add
test
loop
arpl
hlt
add
int3
xchg
sub
out
lods
jae
fucomp
test
lret
push
mov
std
test
push
stos
icebp
imul
je
add
ja
std
fwait
mov
sub
pushf
jae
sub
sti
cwtl
std
mov
xchg
in
stos
mov
cmp
mov
jnp
mov
push
sahf
lods
movsb
fsts
popa
mov
pop
popa
inc
fcmove
adc
and
push
or
xor
icebp
jne
fimull
out
repnz
icebp
dec
popa
fcomps
das
and
inc
mov
add
mov
push
xchg
xor
mov
or
pop
xchg
adc
aaa
fstpt
add
and
repnz
loopne
ds
jno
mov
repnz
adc
nop
pop
lcall
push
shl
cmpsb
push
out
add
and
insb
jp
lods
fisttpl
not
pop
xchg
fstpl
jmp
rclb
xchg
ja
lods
inc
in
out
shr
cmpb
or
orl
xor
and
and
call
std
das
lret
fstps
push
jp
pop
out
das
lret
and
xchg
jb
jbe
cmpsb
mov
and
or
enter
pop
pusha
je
lods
aam
push
push
adc
adc
movsl
fsubs
pushf
in
icebp
cmp
je
xor
loope
jmp
sbb
out
mov
les
mov
push
arpl
push
lock
and
push
adc
dec
push
out
jg
mov
jns
movsl
mov
push
rcll
pop
pop
cmc
xor
jecxz
mov
test
mov
dec
jp
add
pop
addb
cmc
nop
xchg
push
dec
ja
or
sbb
dec
dec
scas
mov
and
fbstp
or
sbb
xor
jb
adc
repz
pop
xchg
sub
repnz
pusha
push
or
ja
fwait
cmpsb
test
push
cli
mov
dec
mov
clc
push
cmp
aad
aas
ret
inc
clc
adc
sub
popf
stos
pop
rolb
lods
test
dec
fwait
cltd
add
push
jecxz
and
rcrl
push
and
fwait
pop
inc
mov
mov
or
adc
out
dec
mov
inc
je
xchg
popf
sbb
repz
cli
push
xor
pop
outsb
pop
movsl
cmp
inc
scas
lea
mov
cmp
push
hlt
out
fs
and
jle
sbb
mov
jmp
hlt
insl
xchg
enter
cmp
sbb
or
test
addr16
lods
fwait
lret
repnz
cmpsb
mov
aam
push
xor
inc
je
std
aad
addr16
lcall
aas
js
jge
stc
xor
addr16
pushl
repz
and
dec
push
fimuls
insb
loopne
stc
stc
outsb
lds
fadds
fwait
jg
xchg
sub
sub
or
mov
iret
or
mov
mov
loope
lods
jne
xlat
pop
or
jne
jb
jnp
xorl
push
pusha
shll
lock
pop
cmpsl
xchg
jns
mov
cmc
lahf
or
sbb
dec
or
cmp
aaa
rcrb
dec
mov
dec
cmp
shrl
data16
or
xchg
sarl
push
scas
jge
cwtl
jne
mov
push
je
and
addr16
scas
insb
dec
add
daa
aad
xor
mov
in
lret
jo
pop
inc
neg
shrl
test
repz
sub
mov
fs
aaa
cli
xchg
test
adc
add
sbb
int
fs
and
out
jo
or
cmp
mov
jge
dec
je
lret
mov
test
add
mov
mov
cmpb
dec
jae
hlt
xlat
jb
dec
repz
int3
xor
add
add
push
adc
pushf
mov
fs
shll
lods
sub
push
and
add
mov
mov
cmp
jecxz
mov
mov
jnp
xor
pop
mov
mov
gs
inc
ljmp
popf
pop
mov
mov
jle
movsb
cltd
mov
mov
cmp
dec
nop
test
pop
cmp
jns
mov
add
dec
adc
xchg
dec
cltd
test
add
test
fs
adc
mov
pop
push
shlb
inc
stc
mov
sub
mov
push
icebp
cmc
rorb
push
inc
std
push
pushf
jb
xorb
aad
pop
aam
dec
popa
loope
push
sub
jp
inc
sbb
xchg
jb
sub
pushf
pop
mul
shr
sub
adc
adc
add
sets
xchg
cmp
cmp
sub
es
sub
xor
test
xor
imul
popa
xchg
dec
and
ss
into
test
jno
cld
add
xlat
lret
sbb
js
hlt
and
pop
xchg
mov
mov
mov
repz
or
jg
test
pop
iret
xchg
xchg
pop
cmpsl
push
xchg
xchg
stos
mov
lods
stc
test
in
xchg
xor
pop
xchg
into
fcmovb
xor
stos
ja
repnz
xor
iret
pushf
jecxz
bnd
xor
fcoms
cwtl
test
imul
mov
adc
ret
jae
fstps
jns
jle
cmp
cmp
inc
dec
xchg
aas
rcrb
dec
adc
je
outsb
push
ja
popa
lret
push
push
or
mov
dec
idivl
push
adc
lods
inc
xchg
cmc
cli
call
mov
fstps
xor
adc
jg
mov
hlt
push
mov
sub
pop
xchg
movsl
loope
sbb
or
jl
leave
add
loopne
imul
mov
imul
inc
enter
mov
pop
inc
fstpt
mov
imul
mov
xor
jns
jo
dec
xor
mov
jmp
ss
mov
add
inc
out
fs
inc
aas
lock
pop
insb
shrl
outsl
ja
sbb
cwtl
mov
mov
pop
sbb
lds
cmp
mov
push
arpl
mov
call
cmp
int3
add
adc
out
push
lods
das
sbbb
xor
sub
cmp
lcall
scas
jg
push
out
or
divb
jbe
mov
push
psubsb
mov
sbb
insb
fldl2t
sub
pop
pop
test
inc
add
repz
out
aad
addr16
out
mov
jle
fldenv
lret
xor
mov
or
adc
mov
popa
ja
xchg
sahf
scas
push
push
dec
in
jecxz
mov
and
push
jo
cltd
std
jns
cmp
enter
sbb
pushf
scas
mov
es
pop
iret
imull
push
sub
popf
cltd
int3
rcr
leave
jo
sub
dec
fs
dec
jns
jl
pop
lcall
stc
negl
sub
scas
pop
pushl
sahf
and
jp
gs
mov
pop
cltd
cmpsl
stos
repnz
cltd
xlat
sti
inc
push
mov
arpl
cmp
in
stos
lods
pushf
cmp
cmp
jg
cmp
push
or
fcoml
push
adc
mov
pop
push
pusha
mov
xlat
xchg
arpl
mov
pop
fnsave
push
add
out
sbb
icebp
lcall
loopne
push
push
sbbl
test
rcrb
and
mov
push
xchg
sahf
push
jae
mov
dec
ret
repz
out
lret
or
inc
shld
inc
xchg
mov
in
sub
add
push
addw
imull
cmp
push
inc
iret
xchg
mov
aaa
cltd
outsb
xor
lock
lea
jle
std
cs
lcall
hlt
cmp
push
in
sbb
lods
mov
sub
sbb
mov
stc
cli
cld
in
pop
and
cmpsl
test
xor
in
push
add
test
sti
arpl
cmpsb
xchg
leave
dec
mov
decb
jno
shll
and
popf
shr
aaa
xchg
aas
stos
jnp
fisubrl
xor
xchg
jne
push
pop
xchg
add
cmp
outsb
inc
push
ds
adc
mov
inc
dec
lods
pushf
jmp
loope
mov
fldl
xor
push
nop
cmpsl
pop
jle
sbb
aad
shrl
addr16
pop
insb
negb
and
out
xlat
pusha
xchg
jns
loope
pop
es
adc
mov
push
fs
push
push
pop
add
cmp
or
push
dec
lret
into
xor
mov
push
inc
inc
pop
pop
repz
cmp
lods
sub
cmp
adc
aas
mov
arpl
push
mov
adc
aas
mov
test
fsubl
hlt
mov
pop
dec
xchg
ret
or
add
xor
test
rcrb
sbb
nop
fbstp
jg
mov
push
cmpsl
push
mov
dec
call
and
lods
sbb
in
mov
data16
imul
dec
les
push
lods
lcall
imul
roll
ret
dec
xor
data16
jge
mov
fistpl
jae
loop
imul
inc
cmp
pusha
mov
jno
adc
mov
jmp
or
pop
sbb
inc
cmp
or
iret
std
mov
cmp
out
lahf
mov
lcall
sbb
push
inc
cmpsb
fisubs
lock
out
mov
mov
mov
xor
sbb
inc
repz
sub
and
cld
or
dec
mov
pop
xchg
lock
dec
sub
cmp
adc
or
movsl
inc
add
std
jp
mov
and
dec
fidivrl
nop
mov
adc
idivl
or
dec
xchg
popf
imull
mov
cmp
add
int
sahf
inc
enter
cmp
adc
fs
mov
xor
and
fmul
incl
ret
call
in
inc
les
rcr
ja
and
sbb
incb
and
and
rcr
and
push
popf
inc
push
mov
jl
xorl
pop
jp
fistpl
jecxz
mov
mov
aas
mov
cmp
je
sbb
push
inc
inc
xor
mov
cmp
inc
sub
dec
ss
in
push
cmp
loope
mov
popa
xor
mov
push
mov
cltd
xor
jmp
cwtl
popf
test
cmp
dec
call
push
cmp
sbb
push
leave
sbb
scas
add
iret
push
lcall
cld
cmp
add
imul
addr16
in
cltd
cmp
ret
inc
imul
and
sti
sub
xor
add
jge
or
ret
loop
rcrl
movsl
push
mov
in
push
sbb
pop
inc
shl
cmc
pop
rcrb
stos
test
push
push
movsb
pop
mov
jns
mov
adc
test
xor
or
dec
sarb
fucomp
out
aam
jbe
inc
cs
or
sub
fwait
orb
jecxz
add
lret
and
pop
cltd
add
xor
mov
hlt
dec
adc
lcall
inc
jne
or
pop
xchg
icebp
popf
mov
inc
dec
push
arpl
ljmp
mov
add
jno
push
cmp
fs
adc
jmp
and
jmp
outsl
daa
xlat
mov
lret
jb
sub
inc
inc
mov
aaa
stos
mov
shll
insb
sbb
cmc
adc
lret
aad
dec
rcrl
xchg
cmp
sub
mull
adc
push
outsb
orl
aas
insl
clc
inc
ljmp
das
jbe
lods
pop
and
or
or
add
mov
je
sub
adc
int
cmp
mov
cmp
ljmp
dec
mov
mov
xlat
adc
mov
cs
jle
inc
gs
pop
cmp
and
fbstp
ja
push
xor
pop
mov
xchg
push
push
xlat
inc
outsl
pop
sub
and
push
shll
int3
es
ja
lock
aas
xchg
lret
mov
inc
hlt
addl
fisttpl
mov
add
inc
iret
jo
dec
mov
xor
fs
add
sub
add
cmpl
xchg
jae
mov
sub
cs
fildll
inc
or
fucom
je
dec
test
cmp
mov
mov
inc
ds
repz
sbb
arpl
dec
lock
pop
lods
cmp
adc
test
pop
lret
ret
insb
insb
sub
sti
xchg
xor
fxch
add
xchg
outsb
roll
push
rorl
and
add
loopne
dec
cli
fisubs
jge
ss
int3
sar
adc
xor
repz
lods
popf
xchg
jmp
push
arpl
inc
jl
lcall
mov
sub
ret
xor
gs
jae
scas
in
pop
lea
sbb
pop
xchg
jmpw
rcrl
fdivr
testl
testb
add
cmp
add
js
stos
mov
inc
cmpb
push
in
ds
into
or
in
xchg
xchg
push
out
cli
mov
scas
dec
fcmove
jmp
xchg
mov
dec
or
and
xchg
push
inc
dec
sub
imul
repz
scas
dec
adc
cli
stos
loope
lock
out
incl
into
mov
mov
ficomps
out
fnstsw
into
dec
mov
cmp
rcll
out
fcoms
outsl
xor
in
mov
lea
shll
cmc
adc
xor
sbb
push
add
lds
mov
push
aam
pop
test
xchg
or
mov
sbb
adc
xchg
fs
adc
repnz
mov
mov
xchg
push
cmp
ss
hlt
xorl
dec
mov
inc
popf
dec
test
pop
xrelease
imul
std
mov
ja
xor
inc
add
scas
in
out
in
add
xchg
stos
mov
outsb
cld
imul
and
out
jecxz
pop
cld
into
xor
jmp
inc
das
mov
xchg
jge
stc
push
imul
pop
or
enter
adc
add
xchg
jp
lret
sub
dec
and
or
fdivrs
lret
pusha
jecxz
pop
cmp
dec
push
cmp
jmp
cli
sub
dec
mov
inc
mov
jl
loopne
sub
and
mov
or
lock
jge
mov
in
cmp
jg
orl
jnp
push
cli
and
xrelease
mov
inc
std
sarb
sub
outsb
imul
bound
cltd
jbe
xchg
inc
cmc
loopne
in
stc
xor
pop
pop
in
or
add
pop
jmp
into
sbb
aaa
movsl
xchg
mov
orb
pusha
sub
dec
cwtl
data16
sbb
das
lahf
rcr
icebp
mov
mov
ret
add
push
lock
retw
das
scas
fmulp
popa
in
sub
pop
in
mov
pop
push
and
mov
mov
dec
mov
in
iret
lds
jo
push
nop
aad
ret
dec
adc
outsb
inc
inc
jno
pop
outsl
insb
jae
test
shll
jmp
mov
testb
xor
sbb
pop
xor
loopne
and
sti
push
sub
lea
rcrb
pop
push
pop
dec
mov
jno
mov
xchg
jg
inc
jno
mov
leave
js
push
dec
outsb
cmp
ja
sbb
lock
dec
call
pop
or
into
push
xor
shlb
enter
aad
lods
cmpb
mov
jg
jo
and
mov
jne
into
pop
les
orl
adc
push
mov
inc
loope
lcall
mov
sub
dec
test
push
mov
mov
insb
sbb
pop
jp
mov
shlb
rolb
mov
loopne
enter
push
loop
xchg
add
icebp
rcrl
lret
cmp
cmpsb
out
test
pop
out
pop
xor
xor
imul
push
stos
clc
sub
pusha
call
cmpsb
or
mov
pop
or
xchg
packsswb
lock
push
inc
pop
sbb
jb
pushf
or
aam
std
repz
push
add
push
in
pop
jb
xchg
pop
pop
rcrl
and
lods
sub
xchg
mov
jb
inc
push
gs
inc
js
shlb
imul
icebp
cmpl
mov
pop
stos
xchg
sub
mov
ss
test
rcrb
add
call
shlb
and
mov
fstl
or
hlt
or
mov
mov
cmp
bound
push
push
cmp
fldcw
movsb
outsb
imul
leave
daa
divl
out
loop
add
stos
cmp
arpl
jge
je
rcrl
add
adc
mov
add
push
popf
or
inc
inc
scas
lret
mov
pushf
mov
and
mov
mov
es
fimull
xchg
fistpll
mov
iret
push
data16
sti
inc
faddl
xor
mov
addr16
sub
movsb
test
xor
bndstx
jl
dec
push
mov
cmc
xchg
xchg
adc
rcr
int
or
rcrl
movsb
fwait
ret
dec
jno
out
int
fisubl
or
mov
unpckhps
shrb
pop
add
add
js
jge
outsl
lock
test
adc
insb
sarl
sbb
imul
lcall
loopne
sbb
or
inc
fsts
cmp
ja
dec
push
inc
rolb
pop
mov
int3
stc
push
lea
mov
notb
xchg
pop
mov
mov
jl
bnd
sub
test
cmp
cmp
adc
cmp
xchg
jmp
cld
xchg
inc
mov
jmp
lahf
repnz
fidivl
inc
shrb
sub
mov
rorb
js
movsb
xor
cmc
mov
insb
mov
or
fsub
les
cmp
pop
adc
push
loopne
add
mov
mul
lock
add
mov
ljmp
pop
mov
sbb
xchg
pusha
dec
lcall
je
jae
js
xchg
or
adc
shl
nop
cli
mov
lret
outsl
mov
out
jnp
xchg
dec
push
loop
shl
inc
shl
jl
lahf
lock
jle
add
dec
mov
mov
xlat
dec
mov
mov
insl
jne
test
rcrb
mov
mov
int
lods
lahf
add
es
popa
adc
aaa
pop
xorb
xchg
enter
inc
inc
pop
daa
jmp
lods
std
mov
xor
push
sub
dec
and
adc
push
add
dec
adc
roll
xchg
lret
adc
xor
dec
mov
push
mov
es
sbb
mov
jmp
shr
pop
js
inc
push
ja
ljmp
jge
fisttpll
sub
xor
adc
adc
jb
push
xor
lock
push
adc
mov
xor
movsb
xlat
mov
mov
out
jbe
jg
push
dec
shl
push
mov
mov
imul
lahf
dec
adc
pop
inc
and
int3
xor
mov
icebp
lcall
lret
cltd
popa
dec
pop
inc
lcall
adc
xchg
sbb
pop
xlat
push
add
lods
arpl
les
fildl
pop
ret
cmc
pop
adc
iret
mov
inc
ror
mov
add
xchg
mov
jle
cmp
scas
jae
jmp
mov
ljmp
fsubl
loop
xchg
pop
xchg
sub
imul
dec
sbb
jl
mov
int
add
xchg
div
xchg
adc
and
les
cld
jmp
sub
inc
hlt
ret
jmp
adc
sbb
xchg
fists
mov
fimuls
gs
ffreep
dec
divl
call
rcl
fcoms
fsubl
incl
mov
movsl
jmp
les
xor
test
lret
out
push
sub
daa
mov
test
pop
pusha
add
cld
ja
inc
fs
fcomps
movsb
test
fiadds
push
push
add
inc
fadds
stc
inc
or
jb
repz
aaa
bswap
adc
dec
inc
int3
jmp
shll
inc
negl
mov
xlat
dec
sbb
cs
ret
xchg
cld
ss
ja
xchg
iret
les
mov
movsb
dec
mov
jne
add
xlat
jb
popa
pop
sbb
popa
jl
dec
dec
insl
fdivs
pop
je
sbb
jmp
lock
aas
push
lahf
or
cmc
add
int3
mov
dec
xchg
or
and
mov
lds
mov
popf
pop
jecxz
add
repnz
loope
mov
and
xchg
mov
repz
mov
mov
pop
xor
fwait
out
mov
inc
pop
imul
or
fbld
and
in
push
dec
xlat
jb
ret
fistps
xchg
fsubs
pushf
int
push
mov
mov
jnp
ljmp
mov
int3
lret
testl
out
jb
loope
mov
in
adc
jge
bound
push
aaa
ds
mov
dec
stos
jae
mov
adc
jno,pt
mov
jb
push
adc
xor
pop
inc
xlat
dec
add
adc
mov
dec
xchg
mov
mov
pop
push
cmc
pushf
shll
cmp
sub
mov
add
rcr
stos
bound
clc
add
xor
pushf
jo
out
mov
test
imul
or
push
test
pusha
test
push
cs
jmp
icebp
mov
movsl
and
clc
rolb
adc
cmc
stos
sbb
xchg
pop
ss
add
mov
ja
aam
adc
sbb
adc
int
in
and
mov
pop
add
loop
push
repnz
cs
daa
int
sbbb
cmc
out
inc
adc
mov
add
int3
outsl
fldt
dec
mov
and
es
sbb
rcl
out
and
int3
stos
mov
insl
adc
and
push
xlat
orl
mov
push
gs
or
and
cmp
stos
pop
push
mov
push
sbb
sbb
adc
pushf
mov
adc
sub
jbe
xchg
push
inc
lcall
insl
jg
in
xor
into
dec
and
sbb
in
or
test
or
rcrb
mov
popf
hlt
outsb
mov
lods
rclb
fists
jle
cmp
mov
xlat
lahf
insl
repnz
cmpsb
fcoms
xchg
sub
push
int
mov
enter
loopne
mov
sbb
sbb
dec
loopne
daa
pop
fadd
scas
aad
jl
mov
pop
sbb
mov
mov
jl
nop
mov
sub
adc
aam
mov
popa
fldt
and
insb
lods
mov
lret
mov
and
ret
int3
cmp
add
repz
mov
jp
shl
sbb
clc
negb
outsl
je
push
jo
mov
scas
cli
jae
xor
add
cmpsb
out
insb
mov
fcompl
insl
cld
xlat
or
out
jp
loop
mov
mov
xor
sub
xchg
repnz
es
or
and
sti
add
dec
aam
adcb
adc
adc
mov
aaa
mov
sbb
mov
clc
mov
xor
xchg
scas
and
adc
cs
push
mov
decb
aam
adc
adc
out
stc
pushl
lahf
mov
pop
xchg
pop
sub
push
jmp
negl
mov
dec
push
out
aam
sbb
jg
sub
rorb
xlat
sbb
cmpsb
mov
xor
test
out
outsb
insb
jg
push
loop
push
loopne
out
push
jecxz
inc
and
jne
insb
xor
repnz
pcmpgtb
mov
push
mov
fidivrl
sub
lock
sbb
pop
hlt
flds
mov
xchg
xor
stos
inc
jns
jo
movsl
mov
sarl
inc
pop
dec
cs
repnz
xchg
ljmp
or
test
lods
dec
ret
loopne
jge
xchg
mov
iret
lret
imul
clc
dec
inc
xor
xchg
jbe
jbe
inc
xchg
cmp
mov
push
mov
test
lods
das
push
out
fsubl
insl
push
pop
lcall
pop
aad
lock
sbb
adc
mov
clc
push
jo
pop
jne
stos
xlat
sub
fidivrs
dec
les
es
jecxz
sbb
enter
sbb
frstor
jae
fistps
sub
sti
push
mov
jb
inc
scas
imul
sub
inc
push
mov
cmpl
ret
pop
shrb
out
sbb
lock
or
xorl
test
mov
fwait
cs
jne
push
jns
jno
xor
or
mov
cmp
mov
roll
cmp
add
jo
and
jge
test
addb
lret
push
fimuls
cld
mov
jp
daa
mov
out
lea
aas
pusha
mov
xchg
outsl
add
cmpsl
jns
mulb
push
xor
cmp
adc
cmp
std
pop
cmc
cmpsl
aas
mov
or
and
mov
nop
add
mov
aad
xor
es
leave
or
inc
push
dec
push
xchg
or
jmp
int3
leave
xor
mov
out
mov
sub
jge
cli
xor
xchg
lods
or
data16
out
push
fwait
scas
fwait
dec
shl
xchg
mov
es
icebp
mov
cmp
inc
pushf
pop
mov
lcall
sarb
hlt
in
dec
les
cmp
and
jns
pushf
mov
lea
xor
mov
in
daa
and
xor
jb
or
fmul
mov
jp
pop
push
ret
into
pop
and
ljmp
sub
repnz
push
js
pop
pushf
push
test
xor
insb
test
fwait
sahf
push
das
mov
add
xchg
repnz
lea
aas
test
cmp
dec
out
int
mov
push
das
aas
pop
fbstp
repz
arpl
sbb
mov
adc
inc
sbb
loope
jg
imulb
int3
outsl
lahf
lock
fstp
rcl
fadd
xor
add
jbe
jnp
xchg
pop
push
push
stos
pop
add
in
dec
jmp
lea
pop
mov
les
cmp
pop
mov
mov
and
push
imul
test
xchg
in
sub
pusha
push
mov
outsb
pop
fldcw
sbb
sub
push
cs
sbb
cmp
push
cli
addr16
orb
jnp
lahf
outsb
jae
aas
inc
enter
adc
jge
dec
inc
push
mov
popa
movsl
sub
jp
adcl
sub
mov
shll
xchg
jge
push
out
ljmp
sti
mov
and
loop
add
ds
ror
inc
fildl
subb
xchg
adc
dec
jge
lret
fbld
cmp
rcl
cmp
pop
push
or
push
cmp
push
pusha
fbld
lahf
sbb
xchg
insb
inc
push
dec
js
xchg
inc
ljmp
gs
mov
push
mov
fildl
int
sbb
push
mov
sub
jbe
out
outsl
hlt
push
aas
jo
or
jmp
repnz
ficompl
sarl
movsl
xor
aas
scas
mov
xor
outsb
push
mov
cmpsb
lret
fistpl
sbb
and
and
imul
stos
and
sub
jmp
sarb
and
clc
mov
scas
in
jae
pusha
or
vmaskmovdqu
jbe
pop
push
and
lahf
nop
xor
or
fwait
aad
xor
pop
test
push
lahf
jge
cmpsl
clc
mov
fldcw
pop
test
jnp
sbb
pushf
dec
xor
sub
push
cmp
push
cs
lods
pushl
in
xchg
mov
fcompl
cmp
sbb
jns
movsb
aam
xlat
or
nop
and
fldenv
jmp
mov
xlat
addr16
jnp
xor
pop
xchg
pop
imul
rclb
test
cmp
mov
lcall
jnp
iret
in
mov
jbe
fdivrs
sahf
pop
lods
xchg
adc
hlt
ja
ss
sbb
into
nop
test
sub
in
pop
and
imulb
jb
push
push
test
sub
daa
pushf
inc
ljmp
leave
sub
jle
xlat
xor
push
ja
xchg
cli
or
test
aas
insb
cmp
cmp
addr16
mov
xorl
sbb
jb
mov
mov
out
xchg
insl
pop
push
popa
icebp
shl
ljmp
mov
test
test
push
inc
test
movsb
test
sbb
rcrb
inc
fwait
xchg
ret
xchg
jge
test
sbb
add
scas
push
fcompl
xchg
enter
out
leave
sbbl
lds
in
adc
pop
loop
cs
call
mov
insb
out
pop
std
je
cwtl
mov
push
cmpsb
xor
jbe
pop
dec
das
sub
loope
in
dec
in
cmc
jmp
jno
idivl
pushf
data16
jg
sbb
push
test
repnz
xlat
mov
call
in
mov
fwait
shlb
fstps
jecxz
shl
lea
lret
xchg
in
xor
mov
cmp
mov
inc
add
mov
jmp
fcmovnb
subl
hlt
mov
test
cltd
pushf
push
clc
inc
pop
adc
cmp
insb
inc
push
in
mov
into
mov
call
and
stos
push
sbb
pop
mov
in
cmp
inc
dec
leave
bound
cltd
test
adc
nop
dec
cwtl
outsl
mov
enter
popa
data16
das
cmp
in
xor
testb
push
inc
js
out
mov
mov
into
cltd
rorl
lods
adc
xchg
push
mov
inc
jmp
mov
sahf
cwtl
loop
mov
xchg
push
shl
shlb
ja
mov
push
pop
xchg
loopne
out
popa
sbb
lods
sahf
dec
pop
jp
mov
push
and
xor
shl
and
jmp
ffreep
movsl
sub
jle
jg
cmpb
cmp
cmpsb
jp
xor
push
insb
pusha
mov
dec
inc
outsb
dec
repnz
stos
or
inc
cmp
inc
stos
xor
outsb
scas
add
jno
cli
mov
test
in
inc
imul
jg
dec
jge
and
mov
jbe
or
xorb
push
scas
scas
leave
dec
cs
fwait
shl
mov
xor
sub
or
cmpl
scas
cmp
dec
push
jb
es
or
adc
add
mov
adc
jnp
mov
and
jnp
gs
push
xchg
add
pusha
fs
jno
mov
aas
out
pop
rolb
inc
ret
pop
mov
inc
mov
xchg
clc
inc
les
sbb
jl
lods
and
xor
dec
push
mov
imul
xchg
repnz
adc
xlat
fsubl
fwait
mov
pop
ds
xor
enter
lods
clc
sub
sub
push
mov
jae
flds
add
sub
mov
pushf
inc
jge
dec
ja
in
xor
ficoml
aam
mov
cmp
shl
xor
cmp
mov
imul
pop
push
loopne
aad
in
loope
lret
mov
dec
push
jo
cmp
dec
ror
mov
xchg
mov
sbb
sbb
sbb
nop
inc
sub
pop
push
xlat
xchg
clc
xlat
bswap
pop
daa
sbb
xchg
fldcw
mov
inc
jp
scas
jg
movl
mov
into
mov
inc
push
xchg
lahf
addb
push
sahf
leave
and
sbb
push
rclb
test
pop
and
mov
call
inc
xchg
cmp
in
mov
aad
out
mov
xchg
mov
addr16
adc
mov
scas
out
pop
ss
and
test
mov
iret
jns
mov
push
xchg
imul
push
push
popf
lea
fstps
inc
popf
mov
lret
hlt
push
xchg
loop
mov
xchg
push
adc
mov
sbb
dec
jge
and
mov
mov
push
cmp
test
pop
mov
jo
or
jmp
push
add
jae
in
das
sar
out
gs
push
push
fdivrl
or
in
mov
and
jl
xchg
pusha
or
add
jmp
mov
mov
repz
dec
sbb
dec
repz
aad
out
jne
in
out
or
aam
inc
shlb
mov
xchg
movsb
lcall
xor
daa
adc
adc
stc
popf
std
or
sahf
es
je
xlat
inc
jnp
mov
mov
in
xor
stc
into
fs
or
lahf
xchg
stos
jbe
ljmp
loope
imulb
mov
pop
dec
jo
lcall
pop
enter
push
pusha
nop
or
js
outsl
outsb
or
jmp
sbb
xchg
pop
daa
rcr
out
add
testb
fnstcw
jp
ret
sub
movsb
xchg
xchg
mov
sbb
out
lret
sbb
xor
lahf
mov
lcall
mov
and
push
xchg
ror
fistps
jno
push
addr16
inc
std
jmp
outsb
cmp
fs
iret
arpl
xchg
sbb
add
pop
mov
mov
pop
mov
lods
adc
xorl
cmp
test
xchg
xor
pop
mov
lods
adc
pushf
pop
movsb
dec
sub
mov
pop
movq
lahf
test
jg
scas
inc
jns
lret
mov
sahf
iret
iret
stc
lret
xor
mulb
stc
jmp
and
lret
mov
imul
jnp
cli
push
in
nop
sbb
jge
pop
shlb
fprem
gs
lods
fwait
jmp
fstpl
sub
stos
fdivl
mov
add
dec
scas
js
das
xchg
popf
jne
pop
mov
xor
jnp
and
movsb
clc
adc
mov
lret
bound
fdivs
adc
cmpsl
imul
adc
push
or
fistpll
test
dec
movl
ja
mov
mov
jns
push
dec
cmpb
fs
xchg
inc
mov
jb
fcoms
mov
and
out
lahf
in
rol
xor
add
js
push
mov
scas
xor
fwait
jbe
push
out
loopne
jge
pop
cmp
add
and
in
rorl
mov
insb
lcall
pop
arpl
mov
sbb
xchg
movb
mov
fsubr
divl
xor
cltd
jge
xor
stos
iret
cwtl
cmp
fsubrs
push
cmp
jns
and
sahf
and
push
mov
pop
pushf
and
add
xor
lock
dec
mov
cmpl
pop
addr16
pusha
add
fwait
inc
xchg
jnp
push
pop
imul
lret
jnp
ficoml
mov
pop
leave
adc
fmuls
inc
les
jne
push
sub
inc
push
sbb
loop
ljmp
ljmp
or
pop
xor
cmp
mov
dec
push
jno
cltd
popf
std
fistl
into
dec
js
scas
push
mov
sbb
sbb
add
outsl
mov
dec
pop
mov
push
jo
je
les
cmp
sbb
or
insl
pop
pop
out
mov
cmp
and
sbb
arpl
imul
into
pop
js
jbe
aaa
outsl
sub
inc
cmpsl
jge
pop
push
enter
sub
and
mov
scas
je
gs
test
test
adc
fldt
je
cmc
push
mov
mov
sbb
jl
mov
or
and
pop
lods
mov
push
xchg
mov
mov
popa
fbld
je
dec
cmpsb
in
stos
add
cmp
xchg
ficoms
cmc
cmp
loopne
mov
mov
sti
mov
sbb
repnz
insb
sti
iret
into
mov
adc
add
push
mov
nop
ljmp
daa
xor
pop
frstor
or
xor
pop
dec
push
insb
into
sub
pop
push
mov
push
std
fdivrl
ja
xor
cmp
pop
mov
jp
js
daa
repz
or
fnstenv
jmp
mov
nop
scas
add
jle
dec
mov
mov
cmc
movsb
ss
jp
popa
mov
sbbb
pop
inc
fdivp
rcrb
cmpsl
sbb
xchg
mov
pop
test
add
out
popa
jp
jns
movsl
or
lcall
or
es
scas
pop
insl
vpcmpeqd
push
fs
xor
push
rcl
xchg
jnp
test
pop
out
or
push
mov
into
cmp
xchg
add
xor
and
and
pop
cwtl
mov
add
jo
pop
addl
mov
push
shll
mov
sub
jle
sarl
or
pop
and
jo
in
sub
testb
inc
mov
call
or
nop
xchg
subl
fstpt
lods
insb
cwtl
shlb
jnp
lahf
rclb
mov
mov
dec
aaa
enter
imul
cmpsl
sub
ds
paddsw
dec
lods
call
cmpsb
xlat
scas
cmpsl
mov
out
stc
xor
gs
cs
int
mov
outsl
out
and
mov
sbb
popa
pop
mov
cmp
out
xor
cmp
push
testb
push
mov
ds
lahf
lods
or
mov
rorb
xor
fstl
mov
fs
sbb
imul
cltd
inc
sbb
nop
mov
sbb
fldl
sahf
imul
outsl
xchg
sub
mov
inc
sub
les
dec
loop
mov
jno
ret
add
fwait
add
fstpl
call
gs
push
aam
mov
fwait
stos
movsl
out
sbb
xor
fnsave
mov
xchg
mov
pop
test
mov
hlt
mov
pop
cmp
cmp
scas
jmp
xor
inc
test
aam
aad
or
push
add
stos
fisubrs
mov
mov
push
mov
cmp
jmp
and
cmp
negl
divl
cltd
movsl
xchg
fmulp
mov
inc
and
mov
adc
jge
ret
jo
mov
jmp
cmc
mov
or
jp
pop
dec
inc
and
mov
out
mov
mov
movb
js
sbb
and
fwait
jmp
lahf
in
pop
aad
push
xchg
mov
push
adc
mov
push
sub
add
mov
lock
and
test
jbe
pop
nop
jge,pn
sub
mov
fildll
or
repz
les
outsl
push
mov
push
popf
pop
popa
push
enter
inc
pop
aad
jbe
fwait
mov
testb
int3
in
jmp
mov
call
adc
and
and
shl
xchg
test
mov
ficoms
addr16
xchg
xchg
push
dec
in
jmp
mov
and
jle
inc
jne
leave
scas
jg
mov
cmpl
mov
les
or
inc
negl
stos
sub
popa
xlat
push
jge
pop
push
or
pop
dec
call
xchg
or
js
pop
notb
xchg
add
daa
aas
mov
sub
dec
adc
fisubs
shlb
shlb
in
cmp
fidivrl
loope
push
mov
mov
xchg
fcomip
sub
lahf
mov
xor
and
cmp
dec
mov
incl
imulb
dec
addb
add
xor
aaa
fcoml
das
cltd
inc
out
inc
je
mov
add
mov
loope
xchg
pop
cld
push
push
sub
clc
and
xchg
inc
jge
mov
test
jae
in
push
xchg
and
push
fs
sub
out
inc
dec
xchg
push
and
add
sub
mov
mov
outsl
jno,pn
aas
dec
loopne
stc
mov
outsl
adc
jo
mov
dec
jae
lock
jae
mov
mov
dec
jae
add
add
hlt
mov
pusha
or
xchg
push
subb
xor
sbbl
mov
pushf
arpl
xchg
push
pop
repnz
sahf
scas
xchg
popf
mov
pop
xchg
lret
rclb
inc
inc
test
cmp
jle
cmp
std
add
icebp
jne
mov
insl
fcoms
xchg
inc
sarb
mov
mov
sbb
outsl
mov
xor
fimuls
ljmp
jmp
pop
add
cmpsb
dec
roll
jb
icebp
sbb
push
cltd
or
mov
mov
sbb
lahf
and
push
sar
fildll
lret
mov
sbb
fwait
sub
push
xorl
jae
leave
icebp
xchg
xchg
es
ljmp
aas
fwait
add
push
and
add
xchg
dec
adc
and
jge
adc
dec
mov
clc
loope
cmpsl
divb
mov
jne
sahf
jecxz
and
jb
jl
xor
xchg
pop
js
cmp
int3
pop
sbb
jb
push
nop
xor
and
aas
jmp
frstor
out
sub
clc
push
or
js
je
mov
jge
and
clc
mov
ret
pushf
sbb
xchg
push
and
jnp
scas
add
std
adc
xchg
push
sub
pop
dec
xchg
mov
xchg
sub
xchg
sub
and
mov
inc
jbe
in
pop
insl
gs
inc
int3
int3
push
pop
into
sbb
test
cmp
inc
dec
iret
mov
add
shrb
mov
mov
shlb
data16
inc
hlt
popa
or
mov
push
lock
ret
adc
adc
xor
xchg
cmpsl
ficompl
mov
pop
or
xor
jno
xor
xchg
and
addr16
in
into
mov
icebp
in
sbb
mov
jg
scas
jb
mov
nop
imul
outsl
adc
fdivrl
leave
sub
pop
mov
fbld
jmp
add
sub
mov
or
adc
sbb
add
sbb
bts
and
mov
xchg
dec
lret
loope
cmpsl
test
and
mov
out
add
mulb
flds
jo
repnz
xchg
adc
fisubl
popa
cmpsl
cwtl
fwait
pusha
pop
cmp
push
and
mov
fmull
or
or
cmp
cmp
sahf
out
rcrl
mov
lahf
call
int3
in
dec
loopne
pop
mov
mov
inc
in
jecxz
lahf
sbb
lock
inc
iret
push
fwait
xchg
ljmp
pushf
mov
push
rcrb
pop
shl
jmp
mov
js
jge
adc
mov
xchg
dec
sbb
loopne
fsubrs
rorb
or
into
sub
add
ret
fwait
mov
das
sbb
sub
adc
adc
push
push
scas
sbb
call
and
ljmp
mov
push
mov
add
push
fwait
jge
scas
cmpsl
mov
fsub
inc
add
shrb
cltd
or
cmc
mov
data16
push
push
mov
mov
movsl
sbb
mov
add
cmc
enter
ja
loope
nop
cmp
add
adc
or
test
mov
decb
pop
fcompl
orl
enter
push
inc
pop
lock
loop
push
rcrl
mov
lret
sahf
push
mov
and
push
cmpl
mov
cmpl
sbb
jb
ja
cmp
lds
xor
adc
repnz
sub
mov
data16
jmp
push
sbb
push
push
repz
std
jae
mov
xor
mov
test
insl
pop
add
cmp
ficoml
cmp
or
jg
adc
imul
js
das
pop
sbb
mov
xchg
inc
add
addr16
es
gs
xchg
outsb
ficoms
mov
cmp
or
hlt
inc
idiv
fldt
xor
and
fsubrs
adc
cmc
call
xor
jecxz
cmp
sub
sbb
or
pushf
and
xchg
xorb
int
test
scas
sti
sbb
push
mov
testl
mov
xor
adc
push
scas
add
mov
and
and
lcall
rcrb
rorb
cld
cmc
and
sbb
mov
push
and
pop
test
daa
shlb
mov
mov
push
lret
aas
das
jae
fsts
cmp
popa
jno
ja
sub
mov
dec
cwtl
lahf
push
jo
not
sti
ds
je
sbb
inc
adc
xchg
fs
inc
stos
mov
cmp
faddl
mov
pop
in
mov
sbb
mov
sbb
and
add
das
jl
adc
or
outsb
mov
in
add
repnz
imul
movsl
xchg
adc
push
jnp
push
sub
sar
int3
xor
mov
fdivl
mov
cld
or
fs
cld
xchg
cmpsb
adc
rclb
push
xor
add
ss
aam
and
xor
jne
out
lea
test
hlt
cltd
mov
aas
int3
mov
cmpl
inc
jmp
mov
xchg
xor
cmp
out
nop
fisubrs
xchg
das
mov
jl
jnp
pop
js
cmpsl
hlt
test
push
pop
dec
adc
push
mov
xorl
ror
fcoms
lds
mov
vsubsd
jge
cli
mov
push
xchg
dec
lret
xor
or
adc
pop
and
stos
push
cli
xor
mov
adc
mov
stos
jge
out
outsb
or
and
in
pop
bound
hlt
push
push
inc
pop
popf
lret
addr16
and
daa
inc
into
mov
add
test
inc
test
fistl
out
add
mov
cmc
lret
xor
add
sub
movsb
sbb
jmp
xor
test
iret
cmpsb
loopne
pop
mov
dec
dec
mov
pop
lods
and
imul
pop
arpl
nop
sbb
jle
pushf
adc
mov
xchg
movsb
jmp
xchg
cmp
sbb
sahf
mov
lret
adc
xchg
shrb
int
and
bound
mov
sti
sbb
mov
bound
pop
imul
jmp
sbb
dec
fistpl
andb
xor
pop
jmp
jecxz
ret
repnz
mov
jl
push
ljmp
mov
je
sub
mov
test
sti
jmp
pop
xchg
add
mov
js
xchg
fmulp
les
mov
insb
or
mov
in
mov
jl
inc
pop
mov
fsubrs
inc
popa
ret
hlt
or
or
lock
mov
enter
jbe
fs
mov
es
and
inc
mov
pop
xlat
pop
shrl
stc
sahf
mov
cmp
movsb
jl
jbe
push
xchg
js
mov
dec
pop
lret
gs
mulb
pop
mov
jne
sti
xchg
popa
aaa
bound
xadd
in
cld
shl
and
sarb
data16
lock
and
ret
add
sbb
mov
jno,pn
push
repnz
jg
test
loop
rcl
push
ljmp
adc
stos
cltd
mov
imul
rcrl
add
lret
out
xchg
sbb
dec
mov
imul
lods
fsubs
mov
icebp
pop
lret
das
mov
cmp
dec
mov
jne
fsubrl
jmp
or
lcall
lods
sub
in
lods
mov
ret
addl
mov
cmp
adc
test
pop
out
dec
mov
sub
movl
cli
or
andl
pop
or
popa
mov
cltd
mov
jle
xchg
cmp
mov
pop
push
loopne
out
jecxz
pop
dec
xchg
cmp
stos
into
lahf
icebp
dec
lock
sub
pushf
movsl
icebp
es
mov
ret
test
adc
cli
fistpll
fldenv
and
movsb
loop
mov
cmpsb
orl
aas
push
add
jecxz
mov
mov
insl
iret
pop
sbb
in
lret
jl
out
scas
cli
add
sahf
int
stc
sti
jg
jno
aaa
cli
lock
int
loop
out
mov
or
lahf
iret
insb
adc
mov
adc
lret
push
dec
fwait
xchg
cmp
mov
leave
xor
push
repz
aad
mov
std
stc
out
xchg
mov
xchg
test
imul
xor
fisttpll
mov
xchg
movsb
inc
aam
testb
test
pop
clc
loop
call
fcmovne
jbe
dec
mov
mov
adc
mov
in
inc
push
add
out
or
push
dec
inc
push
imul
push
push
and
jmp
inc
loopne
xor
shrb
xchg
inc
movsb
sti
lcall
outsl
into
aas
add
pop
push
push
pop
int
lods
pop
repz
or
and
add
mov
pop
pop
imul
aas
fildll
lea
into
in
xchg
xchg
jge
adc
jg
adc
cld
out
les
daa
mov
jns
mov
jge
cmp
popf
sub
rclb
mov
inc
fldenv
bound
lcall
push
cmp
xlat
or
or
jnp
cmp
stos
mov
lahf
cmp
gs
sbb
test
or
jl
sub
cli
xchg
es
lret
inc
adc
int3
mov
pop
out
nop
jns
stos
loopne
fimuls
pusha
enter
xchg
mov
and
push
dec
imul
xor
mov
mov
mov
or
xchg
in
arpl
nop
jle
mov
pop
mov
jne,pt
jne
and
add
push
lock
shrb
pop
jns
in
adc
fmuls
ja
sbb
jl
idivl
pop
mov
mov
mov
mov
mov
lcall
lahf
rolb
cwtl
ss
or
roll
mov
daa
push
div
xchg
ja
xorl
push
outsb
mov
cwtl
divb
sbb
fucomip
mov
mov
xor
pusha
in
hlt
cmovo
dec
cmp
push
mov
data16
mov
rcrb
or
jb
loope
cltd
scas
shlb
movsl
pushf
repnz
push
add
ds
push
call
rcrl
clc
mov
sti
test
jno
push
inc
scas
cmp
in
fs
adc
push
cli
mov
cmp
mov
popf
xchg
insl
cmp
xchg
jecxz
dec
sti
fst
fwait
lock
cmp
mov
pop
xor
jo
and
add
divl
mov
jmp
sahf
pushf
push
adc
jge
ljmp
and
mov
jle
sbb
fimuls
pop
dec
dec
dec
adc
sahf
xchg
aaa
push
scas
pop
scas
and
adc
sbb
lret
adc
int
and
movsb
xchg
clc
sarb
sub
or
push
test
dec
or
sub
push
mov
in
mov
inc
or
cld
push
or
add
push
andl
jae
dec
lock
cmpsl
push
outsb
sbb
jg
ja
js
cld
and
jle
push
hlt
js
jmp
ds
repnz
das
cli
popa
out
mov
fsubrs
test
mov
lods
pop
xrelease
ret
lahf
cmp
xchg
xor
es
sbb
cs
ret
mov
leave
xlat
xor
mov
lret
fcmovnu
dec
mov
jl
std
push
mov
inc
adc
push
inc
mov
insl
lret
inc
inc
ds
dec
push
mov
sub
pusha
sbb
int
sub
sub
sti
mov
jno
add
lods
dec
incb
cli
cmp
rcr
decb
inc
jp
and
mov
imul
xor
nop
scas
adc
xor
sti
addl
pushl
or
pop
xchg
cwtl
pop
add
jp
or
and
and
jp
cli
bound
out
outsl
sbb
rorb
push
aas
insl
dec
push
aaa
repnz
push
pop
xor
test
mov
js
inc
pop
cs
ds
sbb
xor
sub
xchg
aas
fists
pop
sbb
cmpsl
mov
pop
jp
pushf
orb
test
add
xlat
or
jo
fwait
sbb
xor
mov
push
inc
int
pop
fwait
mov
inc
xchg
jmp
out
loope
mov
push
and
xchg
mov
fisubl
xchg
in
sub
mov
mov
rol
cmpl
cmp
push
ret
int
xchg
pop
push
adc
xchg
push
aas
fwait
movsl
jno
cmp
sbb
flds
movsl
popa
imul
mov
push
lock
pop
in
int3
dec
jecxz
lods
repnz
sarl
dec
xor
mov
stos
sbb
out
insl
pop
xchg
cmp
mov
adc
rorl
in
pop
mov
sub
bound
imul
fucom
dec
loopne
int3
jbe
hlt
daa
das
push
cmp
stos
test
lds
lods
inc
add
outsl
out
aas
clc
jle
mov
ljmp
cld
mov
dec
and
in
rcrb
pushf
mov
arpl
decb
mov
xor
or
mov
cmpsb
fistpl
mov
xor
sbb
in
and
or
nop
lret
xor
sbb
cmp
jmp
mov
imul
pop
gs
out
mov
mov
jle
leave
je
repz
cli
xor
mov
mov
das
mov
cmp
in
rcrl
fwait
adc
lods
mov
dec
outsl
cmp
sbb
cltd
test
inc
arpl
leave
cli
cld
not
sub
or
xadd
add
out
pop
cmp
mov
jmp
sbb
push
inc
test
lcall
addr16
xor
pop
cwtl
cli
mov
push
mov
sub
sti
cmp
add
shll
xchg
xchg
iret
and
adc
add
bound
pop
jo
xchg
into
sar
and
addr16
int3
pop
in
push
lock
or
aam
pop
cld
mov
cmp
add
sub
orb
sbb
xchg
inc
scas
inc
sahf
push
in
roll
femms
mov
push
push
or
sarl
jb
lcall
sub
pushf
or
xchg
xor
pop
mov
dec
jle
pop
jecxz
mov
sti
jnp
enter
test
adc
enter
pop
mov
or
jl
push
add
adc
test
clc
fstpl
dec
daa
xchg
inc
movsl
pop
subl
enter
jne
insl
push
jb
mov
sub
push
mov
mov
xor
rorb
and
lahf
push
daa
nop
cmpsb
xor
out
pop
push
sbb
xchg
xchg
in
daa
jno
sub
jo
mov
jle
andl
in
dec
js
add
pushf
sbb
pop
inc
jne
lret
xchg
push
adc
call
sbbb
sbb
sub
popa
outsb
loopne
lock
pop
cmp
adc
jno
in
ds
shrb
jb
test
ret
sbb
loope
inc
xchg
pop
enter
mov
adc
pop
int3
int3
stos
jge
test
inc
fistl
or
dec
and
sbb
adc
imul
aaa
sahf
test
dec
mov
add
sub
sahf
pop
movsb
and
ja
xor
ljmp
mov
mov
inc
adc
movsb
pop
add
pop
loope
xor
rcl
shlb
inc
mov
sbb
adc
addr16
cmp
loope
flds
and
and
lahf
pusha
mov
add
push
dec
outsb
mov
inc
je
lret
push
push
or
pop
xchg
daa
pop
rcll
sbb
mov
aas
decb
push
insb
jecxz
add
pushf
scas
or
cli
add
mov
cmp
addr16
cmc
mov
push
xchg
xchg
shrl
adc
jg
jb
and
dec
repnz
jle
fdivrs
cmpl
shlb
xor
xor
iret
xor
adc
inc
lock
lcall
shlb
rorb
arpl
jmp
sahf
je
outsb
arpl
clc
inc
sbb
adc
inc
inc
sbb
jno
pop
in
das
lret
test
cmpb
pop
jl
mov
sbb
lret
sbb
popf
sbb
dec
dec
push
cmp
daa
js
xchg
lds
and
mov
psrlw
xor
in
pop
jne
rcrb
xor
sti
fxch
fdivl
repz
insb
bound
popf
pop
shll
out
das
movsb
dec
sbb
int
out
int
mov
cmpsl
add
inc
inc
hlt
jecxz
push
fisubrl
sbb
push
pop
std
push
je
add
icebp
dec
xor
or
aam
pop
xchg
adc
lds
push
arpl
mov
sti
inc
dec
es
jnp
xor
push
js
andb
cltd
jb
mov
lds
inc
out
popa
popa
ljmp
jmp
pop
cmpsl
xor
call
add
clc
xchg
hlt
je
push
push
scas
ja
pop
iret
jb
xchg
mov
sub
mov
mov
sub
imul
xchg
or
mov
lahf
xchg
jmp
mov
aas
mov
push
in
add
out
push
in
and
or
xlat
bound
push
aaa
add
pusha
outsl
jae
fldl
xchg
push
shll
inc
mov
mov
jne
mov
push
mov
and
ss
xlat
aad
inc
outsb
adc
dec
add
leave
xlat
enter
iret
mov
fisubl
and
push
jp
jecxz
mov
sub
cwtl
xchg
pop
jo
add
mov
pushf
hlt
xchg
xchg
outsb
inc
out
into
sbb
adc
lods
push
cmp
pop
xchg
mov
push
imul
sbb
ficompl
sahf
pop
cltd
das
xchg
mov
scas
mov
or
rol
scas
sbb
icebp
pop
stos
jnp
sbb
cmp
stc
or
push
clc
xchg
push
cmp
add
xorl
shlb
inc
imul
sar
mov
or
xor
in
push
lahf
out
loope
sbb
cmc
scas
or
and
bound
inc
leave
jg
cmpsb
add
fwait
dec
lock
iret
out
jae
cltd
adc
les
cmp
sub
mov
xchg
push
jmp
sti
push
sbbb
xor
jecxz
mov
dec
pop
push
test
fwait
pop
inc
or
xor
ret
or
jne
jns
jmp
inc
stos
cs
mov
inc
jnp
adc
mov
sti
jecxz
sarl
sbb
fcom
dec
xchg
cmp
repnz
sarb
cmp
movsl
push
jns
test
jb
inc
aam
mov
jae
outsl
jae
out
mov
jp
jae
das
dec
mov
es
dec
push
jne
vpsrad
sti
loope
sbb
cmp
out
dec
jno
and
divl
stos
lahf
stos
xchg
into
test
jnp
mov
jmp
dec
ss
leave
sbb
pushf
outsl
int3
out
mov
jnp
hlt
popf
gs
stos
adc
loope
push
out
icebp
pop
scas
sub
scas
or
adc
lods
sbb
daa
movsb
nop
mov
sahf
xor
or
scas
cmp
and
lret
imul
push
in
and
pop
mov
sbb
mov
cltd
xchg
mov
cs
mov
inc
and
sahf
lea
rclb
xlat
rcrl
mov
or
loopne
hlt
pop
mov
xchg
sub
es
cltd
cmp
roll
jecxz
pop
mov
mov
lock
enter
cmp
mov
popa
lods
push
jmp
push
jmp
jnp
pop
gs
mov
mov
mov
aad
mov
std
jecxz
into
lods
sbb
jne
roll
inc
mov
dec
and
and
scas
shr
xchg
jbe
out
cli
push
add
jne
inc
cmp
cmp
inc
push
jecxz
imul
cli
lret
sahf
jmp
or
xchg
and
call
mov
test
in
mov
inc
addr16
or
es
or
pop
stos
xor
fcomps
stos
shll
mov
mov
and
xchg
leave
sbb
xor
pop
insl
push
push
or
fsincos
daa
xor
repnz
cmp
repnz
pop
movsb
mov
sarl
mov
outsl
sbb
mov
gs
jmp
push
jp
mov
push
cmp
jge
mov
clc
jae
dec
jmp
jae
fs
or
scas
mov
push
pop
pop
movsb
push
add
enter
daa
xchg
push
lea
push
jecxz
pop
loop
popf
xchg
stos
loopne
jae
jl
xor
push
bound
imul
jbe
outsb
add
xchg
inc
pop
and
jle
imul
mov
int
icebp
xchg
dec
add
hlt
hlt
lods
fmuls
dec
lock
shrb
outsb
mov
mov
popf
imul
or
sbbl
stos
and
and
into
cmpsb
aad
adc
fcmovnu
add
ja
xor
pop
leave
fimuls
imul
repnz
cwtl
test
dec
xor
xor
pop
push
mov
push
outsl
mov
pop
mov
outsl
adc
scas
fwait
je
jge
imul
jmp
dec
mov
and
xchg
iret
cmp
cld
test
in
arpl
push
fdivrs
sti
mov
push
push
test
sarb
jmp
inc
dec
jecxz
xchg
shlb
or
sub
pop
int
loop
sbb
mov
test
sbb
sbb
std
fisttps
pop
jne
lret
inc
xchg
ss
movsb
xchg
mov
cmp
sbb
mov
cmp
inc
insb
cwtl
leave
mov
aam
jb
outsl
inc
lds
lods
push
enter
pushl
push
das
popf
mov
cwtl
push
je
pop
adc
dec
mov
mov
inc
aas
push
sub
xchg
outsb
iret
dec
popa
pop
adc
mov
add
dec
xchg
imul
xor
sti
mov
adc
mov
sub
rorl
out
jb
cmp
or
in
and
aam
sbb
mov
pop
sbb
js
imul
cltd
cmp
pop
sub
mov
loope
rcll
and
in
cmpsb
inc
mov
int
loopne,pt
push
push
sub
mov
cmp
or
sub
cltd
ss
jns
and
es
dec
fwait
adc
enter
jo
call
cmovne
add
shll
aad
fstpt
clc
pop
insl
repz
addr16
xor
mov
mov
clc
pop
ss
cmc
pop
sub
jo
adc
inc
sbb
dec
fnstenv
jmp
pop
scas
imul
mov
cmpsb
or
cld
jne
fcmovnu
push
xor
enter
adc
xlat
or
add
push
out
repnz
loope
std
mov
sub
lret
mov
fdivrl
lods
popf
fxch
or
packssdw
sbb
xchg
lea
or
daa
push
jecxz
sub
stc
xchg
sub
popf
popf
sub
mov
mov
cmc
lock
mov
aas
jg
test
out
test
stos
std
fcomip
std
popa
add
dec
ret
fwait
pop
lods
loop
or
mov
outsb
mov
xchg
or
mov
fsubp
sbb
bound
dec
inc
int3
xchg
je
jp
pop
jmp
mov
leave
mov
inc
test
mov
aam
clc
movsl
into
fildl
xor
mov
jmp
pop
mov
pop
lock
dec
ja
aam
test
nop
popa
inc
push
shl
sub
jae
push
icebp
imul
je
push
lock
aad
cwtl
push
pop
into
ja
push
mull
mov
mov
push
js
cmp
mov
xor
js
push
push
add
adc
sub
lret
ret
push
shl
or
call
mov
in
pop
sbb
or
cs
test
in
adc
pop
call
adc
mov
stos
lcall
pop
xchg
sub
adc
scas
mov
add
movsb
jmp
xchg
ljmp
imul
mov
push
popa
xor
daa
shrl
push
add
int
cmp
xor
dec
pop
mov
xchg
and
shl
sti
pop
ret
shrl
enter
pop
inc
int
or
sub
cs
xchg
jbe,pn
fdivp
ds
popa
test
mov
mov
dec
into
imul
xor
xchg
out
push
imul
outsb
aas
fdivrp
pop
call
test
sub
out
xchg
movsb
sub
mov
inc
xchg
mov
mov
xlat
lock
pop
xchg
pop
dec
mov
mov
lods
add
leave
fisttpll
hlt
fsubrl
and
pop
mov
cmp
dec
mov
mov
adc
xchg
popf
mov
pop
lock
jecxz
jno
iret
mov
ja
push
add
icebp
xor
outsb
xchg
adc
scas
lret
sbb
xchg
mov
pop
aas
pop
lahf
pop
sbbb
jns
lret
in
mov
and
adc
adc
jb
ret
lods
aam
mov
pushf
cs
idivb
sbb
push
pop
and
rep
jp
arpl
jae
xor
pop
call
std
loop
divl
filds
pop
cmp
jmp
pushf
xchg
xrelease
outsb
lcall
xchg
pop
in
ret
dec
das
rcl
and
scas
arpl
lcall
icebp
sbb
mov
adc
pop
orl
cltd
cmpsl
jmp
repnz
cmp
push
jnp
data16
aam
mov
fwait
pop
ja
xchg
iret
sbb
test
je
sub
adc
or
push
lea
mov
push
ficoml
mov
mov
inc
inc
cmpsl
push
ret
xchg
jecxz
xchg
iret
movsb
aaa
dec
mov
out
popa
fldenv
sub
cmpsb
mov
mov
mov
adc
push
insb
clc
in
loope
inc
xor
inc
and
and
daa
mov
inc
cmpsb
fcomp
jg
in
mov
and
sbb
fs
adc
pop
nop
int3
in
scas
add
ljmp
and
outsl
out
or
aam
pushl
in
jb
push
outsb
mov
aas
outsb
rcrb
xor
xchg
adc
inc
addb
test
in
loopne
adc
sbb
and
loopne
aad
cmpsb
mov
adc
mulb
or
cld
jae
and
xchg
pop
sbb
loop
mov
mov
lret
cwtl
xchg
sti
lds
sbb
add
mov
jae
repz
addb
repz
arpl
xchg
fidivrs
xor
jg
stos
mov
mov
sbb
repz
fcmovb
enter
es
cmp
add
pop
jmp
jbe
inc
pop
mov
cmp
leave
pop
lahf
daa
imul
cld
xchg
lahf
aas
inc
xor
mov
xor
sbb
sbb
test
cmpsl
push
cmpsb
or
inc
inc
imul
xor
jne
addb
scas
pop
xorl
gs
jae
cmp
sbb
and
mov
fs
mov
mov
mov
xor
std
mov
imul
imul
cwtl
xchg
dec
jae
mov
idivb
xchg
lahf
mov
cmp
add
insl
pop
add
test
mov
loope
sub
and
sub
dec
cltd
cmp
outsb
enter
js
out
lods
lret
enter
fists
dec
test
movsl
push
loop
outsl
fstpt
lods
fmull
fidivrl
xor
add
sysexit
fstl
cwtl
ss
fisubrl
loop,pt
inc
iret
add
sahf
adc
ret
cmp
and
xor
pop
mov
mov
lret
jg
nop
mov
cmp
mov
in
or
mov
jecxz
loopne
lret
in
rcrl
mov
popf
mov
or
in
std
add
and
push
rcll
push
pop
mov
push
jbe
sbb
xor
xchg
pop
ret
jno
test
mov
jmp
or
adc
add
fdivr
mov
cld
int
xor
pushf
pop
xrelease
and
pop
inc
cmpsl
mov
adc
push
imul
mov
ljmp
aam
das
xor
call
jle
fsubs
jbe
mov
mov
stc
cmc
das
test
daa
outsb
xchg
ret
fimuls
call
cmpsl
or
mov
sahf
lret
fsubs
jb
lods
aam
mov
shll
and
pop
shl
xor
fcompl
and
dec
js
mov
out
fisubs
dec
add
sbb
data16
js
xchg
fsubrs
hlt
cltd
inc
rcll
push
and
aam
and
imul
inc
int3
imul
int
aam
and
push
sub
or
aam
das
adc
into
scas
jecxz
out
dec
aaa
pop
dec
jle
mov
fnstcw
test
ret
fisubs
rorb
leave
sbb
fsubrl
dec
leave
cmp
push
jl
xor
xor
rcrl
ret
xor
mov
cmc
and
lds
xchg
adc
or
out
clc
stos
mov
mov
sub
adc
pop
and
test
ljmp
add
pop
and
out
push
cli
lock
jae
dec
pop
cld
shl
stos
in
out
into
cmc
cmpsl
test
lea
ret
pusha
stos
adc
jne
out
mov
int3
jmp
sub
push
dec
dec
scas
push
icebp
pop
mov
or
iret
stc
and
mov
sbb
cmp
loope
jmp
or
inc
sub
fdivrs
insl
or
adc
push
jo
lcall
test
stos
sbb
sub
pop
mov
shl
adc
xchg
popa
pop
test
xchg
push
dec
daa
pop
pushf
and
fsubrs
lods
aad
add
ret
sub
dec
jne
sbb
rclb
inc
fldcw
icebp
inc
mov
mov
ret
outsb
pop
mov
adc
adc
xchg
rol
inc
pop
in
adc
in
inc
mov
mov
addr16
hlt
stos
bound
std
lret
ret
inc
jge
aas
jg
lret
pop
dec
xor
and
lock
pop
sarl
loopne
adc
sbb
lds
out
ret
sub
ljmp
pop
push
mov
cmp
cs
iret
loop
jmp
rclb
jmp
call
xor
dec
mov
test
mov
mov
inc
sbb
sti
mov
adc
push
ret
sarl
xchg
outsl
call
or
bound
icebp
hlt
fisttpll
fildl
cs
data16
out
loop
mov
adc
xchg
iret
out
push
mov
mov
aaa
xchg
outsb
and
popf
gs
pop
jecxz
cmp
dec
lea
mov
pop
xchg
inc
cs
mov
xchg
jno
mov
addr16
lret
movsb
in
sarb
or
test
jmp
fidivrs
or
out
std
inc
scas
jmp
or
out
adc
xor
mov
or
fcmovbe
call
jle
sbb
and
fs
clc
mov
sub
movsl
adc
sub
cli
icebp
shrb
pop
test
jnp
leave
in
and
pop
incl
iret
mov
xchg
jg
push
xorb
leave
mov
cli
lahf
dec
jne
lods
inc
adc
add
mov
scas
test
jmp
cmp
ret
cmc
popa
clc
xchg
cmp
mov
adc
mov
imul
js
in
add
loope
mov
inc
js
cmc
out
sti
stc
clc
repnz
mov
insl
mov
or
sub
mov
ret
popf
xchg
in
mov
lods
xchg
rolb
in
sub
jns
adc
insb
lcall
jno
ret
gs
jmp
cmp
pop
lods
fmull
add
ljmp
mov
addr16
cmp
jg
push
xchg
jne
test
out
mov
fisttpll
or
jmp
jge
insl
out
inc
int3
aas
push
stos
xchg
push
fstpl
imul
or
pop
pop
cs
setns
push
inc
pop
aas
loopne
cmc
add
push
push
inc
in
jne
push
rcll
mov
and
lret
xchg
mov
xor
adc
les
cmc
outsb
sbb
or
sub
in
rcll
fs
enter
xlat
mov
push
imul
inc
cmp
out
insl
mov
mov
das
loopne
mov
jne
ret
xor
inc
sahf
xlat
lcall
push
and
rcrb
xchg
jmp
sbb
xor
xchg
pop
jp
and
or
mov
out
cwtl
inc
pop
int
sub
ret
das
pusha
sub
dec
sub
xchg
pop
lods
inc
es
mov
cmp
je
mov
aad
fiaddl
fdivrs
shrl
pop
xchg
lods
add
jae
mov
mov
xor
cwtl
xlat
xlat
das
test
stos
loopne
lds
lods
mov
iret
xchg
mov
mov
push
fcomi
nop
stc
xor
loop
push
and
fs
std
adc
jl
nop
mov
inc
jae
aaa
lret
aad
push
mov
bound
push
and
leave
xor
lods
pop
adc
outsb
insl
cs
rol
and
dec
mov
mov
mov
jo
in
es
lret
dec
ds
fisubrl
xchg
jb
les
js
push
xchg
hlt
mov
sbb
adc
and
daa
in
adcl
xchg
dec
dec
mov
pop
inc
jge
cmp
ss
test
add
cmc
movsb
xor
xchg
andb
stc
fwait
mov
into
mov
fcoml
push
lds
jl
ds
loopne
jl
inc
stos
ret
or
repnz
xchg
dec
cmpb
jle
aas
adc
sti
inc
pop
popa
ss
stos
push
adc
dec
lcall
test
das
cmp
xlat
mov
shll
xorb
fildll
mov
inc
xor
rorb
sbb
mov
sbb
adc
out
add
mov
fs
fnsave
mov
dec
idivb
lock
xor
sbb
test
aas
in
dec
fisttpl
lock
insb
xchg
jno
pop
pop
mov
mov
pushf
test
decl
add
lret
sbb
mov
ret
fmul
pop
dec
loopne
jae
es
jle
fwait
cmp
fcoms
jae
aam
push
dec
dec
sbb
cmc
data16
aad
iret
cmp
movw
xchg
lahf
std
pusha
mov
je
ljmp
jae
and
call
sbb
mov
mov
mov
xor
pop
mov
jno
sub
movsb
les
pop
jle
sbb
dec
aad
cwtl
out
fsubrl
popl
enter
mov
mov
xchg
fucomi
mov
inc
pop
mov
pop
sarb
repz
loopne
sarl
add
in
lea
fadds
pop
cli
mov
cmp
dec
lods
hlt
adc
add
inc
mov
xchg
jmp
mov
push
push
push
aaa
int
stos
fisubrl
push
xchg
adc
push
adc
jb
xor
dec
dec
jmp
fisubl
clc
lods
adc
mov
dec
call
sub
push
leave
push
out
rorl
stos
mov
cmp
pop
lock
sub
mov
adc
leave
cmpsb
sti
cmp
add
cs
dec
hlt
cld
dec
call
insb
mov
lret
fwait
lods
pop
ss
or
xorb
fdivrl
mul
pusha
es
or
or
add
sbb
mov
or
insb
dec
cmp
mov
fiadds
out
dec
mov
jle
lcall
movsl
dec
repz
aad
bound
mov
cmp
pop
sti
pop
scas
sub
sub
or
stos
push
daa
xchg
mov
add
dec
rorb
ret
push
movsl
dec
in
out
mov
push
sub
out
xchg
xchg
stos
in
jge
arpl
outsb
adcb
lret
loopne
lods
imul
adc
mov
das
pop
inc
ja
lods
outsb
push
jo
mov
push
aad
je
dec
nop
sub
lock
pop
jo
call
adc
cli
jb
lcall
lea
sbb
cwtl
mov
cmp
xchg
jns
pop
jb
adc
in
push
sbb
adc
or
mov
xchg
outsb
iret
pop
lret
test
loop
nop
xor
xor
jecxz
adc
xchg
call
mov
dec
or
cmpsl
loop
sbb
rclb
xchg
int
scas
fdivrs
aas
xlat
push
or
outsl
into
hlt
xor
sbb
jnp
mov
mov
imul
sub
int
cmp
lds
sahf
rolb
jl
jmp
aas
push
xchg
xor
cld
lea
subb
adc
in
sub
cld
ror
icebp
sbb
iret
jb
call
inc
sub
dec
outsb
bswap
pop
pop
ja
inc
or
fcom
rclb
imul
fcoml
jns
xchg
and
mov
cltd
add
xor
arpl
cwtl
insb
push
addr16
xchg
push
popw
insl
enter
sub
and
add
ds
add
decl
jo
nop
and
out
inc
push
dec
stos
pop
add
sbb
cltd
pop
addr16
jno
clc
fdivrs
int3
push
outsb
std
cld
sti
test
scas
unpckhps
add
cmp
mov
dec
es
icebp
mov
movsl
xor
fs
mov
xchg
add
push
mov
cmp
jg
dec
out
mov
and
aam
push
ja
fbld
jg
mov
jecxz
adc
cmp
jecxz
mov
dec
adc
iret
mov
add
rolb
xchg
ljmp
in
jb
xor
loopne
cld
inc
push
movsl
sbb
lods
cmp
mov
add
add
stos
pop
orl
sarl
lahf
movsb
mov
in
jl
incl
rcrl
loopne
and
cld
stc
test
aad
daa
in
mov
lahf
stc
cli
jge
sahf
cli
cld
cli
xchg
clc
mov
jmp
aad
jle
cmp
adc
mov
gs
orl
mov
shll
sub
cmpsl
imull
cs
in
divb
nop
and
fldt
add
cmp
insb
movsl
adc
jne
mov
ret
in
mov
idivb
daa
inc
call
insb
mov
lcall
mov
xchg
sarb
ror
xchg
popf
push
ljmp
loopne
sarl
lock
pop
insl
add
ljmp
outsl
jne
mov
es
jnp
test
nop
xor
pushf
gs
xchg
push
and
das
mov
out
out
cmc
addr16
sbb
sbb
push
movsl
add
enter
nop
fwait
mov
stos
insl
dec
fnstenv
test
test
cmpsb
das
and
or
mov
mov
ljmp
divb
inc
inc
lea
xchg
nop
imul
sbb
dec
jo
fnstsw
mov
nop
or
mov
add
add
mov
ljmp
push
pop
mov
clc
out
jb
sbb
push
cmp
cmp
and
mov
insb
movsb
fdivrl
testl
les
mov
mov
scas
xlat
add
cmpsl
rcll
je
data16
into
xchg
push
mov
adc
adc
or
or
gs
cmp
andl
ror
sti
inc
inc
mov
inc
daa
cld
pop
adc
out
xlat
sbb
addr16
pusha
cltd
aam
test
cmpsl
xchg
ret
jb
cmp
lods
sub
pop
and
inc
mov
xchg
sub
and
gs
lods
stc
bound
in
test
jns
mov
inc
add
in
add
mov
push
xlat
ffreep
fs
data16
cmp
mov
mov
icebp
sub
sub
popf
inc
frstor
xor
les
mov
lods
push
fnstcw
cwtl
rcrb
sub
xlat
mov
sahf
jae
sbb
lods
and
fcmovbe
subl
adc
sbb
dec
pop
fbld
mov
xor
sub
cmp
test
stos
push
cld
pop
popf
lahf
or
pop
popf
lds
stos
or
mov
xchg
cmpsl
into
jnp
sub
test
or
insl
push
xchg
jecxz
cmp
jle
xlat
aas
sbb
mov
sarb
jb
mov
push
mov
jo
mov
sub
outsl
imul
mov
push
push
and
leave
shll
int
cmp
mov
std
dec
dec
sub
dec
inc
and
inc
inc
cs
jbe
outsb
das
outsl
xchg
out
and
pop
hlt
stos
adc
sub
cmp
xlat
shl
push
inc
outsl
das
lret
inc
test
rorb
pop
in
xlat
or
mov
or
ss
icebp
daa
int3
or
xchg
cs
in
mov
dec
mov
fwait
sub
iret
pop
dec
decb
fdivl
mov
movsb
inc
sbb
stos
test
mov
mov
sti
rcll
pop
cmp
mov
jne
add
jmp
cmp
sbb
sbb
mov
mov
lea
enter
cmp
mov
pop
pop
mov
pop
and
aaa
xchg
cld
pusha
test
fucom
cmc
adc
movsb
pop
cli
sub
in
ret
sub
inc
sbb
inc
dec
jmp
dec
sub
mov
test
outsb
movb
xor
shlb
in
or
mov
repnz
fbstp
xor
test
sbb
ss
sahf
mov
incb
xor
inc
add
mull
xor
pop
xchg
jl
cwtl
rcrb
test
ja
cltd
sbb
stos
stos
stc
mov
lods
rorl
jne
jle
test
sbb
mov
ds
repz
lahf
and
es
push
dec
cmpsb
stos
shrl
and
lahf
pop
mov
fadd
xchg
jns
test
jb
push
test
pop
mov
mov
lahf
sub
test
inc
shll
xchg
inc
cmp
es
add
cltd
xchg
add
pop
jo
sbb
and
dec
xchg
ds
xchg
push
inc
and
lcall
subb
xchg
enter
sub
inc
push
dec
les
jmp
pop
mov
pop
leave
xchg
aaa
and
scas
mov
aas
jge
inc
sbb
loop
add
add
cmp
aad
pop
das
push
aas
mov
jbe
jne
ret
das
bound
sbbl
sub
inc
or
sti
xchg
sbb
dec
pushf
pop
pusha
test
xor
std
sbb
sub
sub
ret
adc
push
gs
mov
push
daa
mov
std
rclb
in
xchg
imulb
lock
fwait
mov
and
inc
xor
jns
jae
sub
add
add
lret
cmpsl
cltd
jbe
sbbb
loopne
mov
frstor
inc
xlat
pop
cmpsl
ds
cwtl
int3
or
jo
dec
sbb
cwtl
mov
and
jo
aas
xor
lds
mov
out
sub
mov
sarl
jo
mov
lods
push
lea
ja
pusha
rolb
orl
or
stos
xor
pop
insb
cmpsb
cmp
out
mov
fidivl
cmp
mov
lods
add
pop
jecxz
add
push
fnstcw
jns
ss
xor
fdivl
inc
xchg
jp
loop
int3
leave
mov
add
mov
les
mov
or
decb
push
pop
mov
in
mov
cmp
fwait
push
test
push
insl
lret
cmp
mov
jnp
pop
clc
lods
popf
and
xlat
cmp
orl
cmp
outsl
pop
add
scas
jbe
jg
in
clc
dec
inc
inc
adc
shll
leave
mov
pop
mov
dec
lret
lea
push
mov
aas
add
inc
dec
add
sbb
nop
mov
and
cmc
orl
shr
cmp
cmpsb
inc
inc
adc
jbe
pop
sbb
pop
pop
test
es
pusha
jne
or
mov
lods
enter
inc
fisttps
adc
pop
mov
out
dec
pop
lahf
cli
cli
into
cld
mov
adc
daa
iret
push
mov
es
cmp
pop
push
mov
mov
mov
sbb
movsb
cmp
dec
dec
aas
dec
setl
pop
pusha
xor
adc
sbb
movsb
adc
mov
dec
mov
add
cmpsb
imul
dec
inc
fdivp
jle
sbb
sbb
mov
sub
cwtl
dec
add
mov
movsl
pop
inc
imul
dec
rclb
dec
imul
jp
cmp
xchg
movsl
cmc
pop
cmp
cmp
nop
fs
or
xorb
xor
repz
decl
gs
fistpl
inc
pop
dec
sti
iret
or
scas
mov
sbb
xchg
out
ret
cmpl
imul
mov
cs
jnp
jmp
lds
pop
jne
inc
cmpsb
insl
movsb
imulb
mov
mov
cli
and
push
xchg
mov
push
call
gs
lret
sbb
aaa
sbb
cmc
push
sbb
dec
mov
add
sti
sbb
sti
jae
fdivs
xchg
mov
xor
inc
jl
ror
xchg
int
sub
rcll
insl
and
andl
addr16
push
jl
add
fldl
push
jae
cltd
adc
fcom
std
in
aad
popa
js
pusha
movsb
fxch
jb
cmp
icebp
xor
sahf
jae
sarb
xchg
jb
mov
sbb
dec
fcomp
mov
fistpll
pop
add
mov
mov
inc
sti
sbb
stos
pop
jp
pop
rcl
daa
lret
std
cmc
lret
in
add
ja
mov
pop
inc
mov
test
mov
rcrb
dec
add
dec
subb
pop
jmp
mov
xor
sti
int
movsb
dec
jecxz
imul
arpl
mov
ljmp
mov
fidivl
repz
icebp
loope
icebp
inc
es
pop
jg
clc
aas
add
adc
push
aam
pop
sub
mov
movsl
jle
sub
or
shll
clc
add
ljmp
xchg
mov
imul
call
push
add
stos
jmp
cmc
mov
xchg
mov
scas
jb
mov
insb
fisttpll
nop
xor
xor
aad
mov
cld
ss
jmp
fimull
xor
jae
sub
jecxz
sub
shr
fnstcw
inc
pop
xchg
mov
jnp
mov
cmp
movsl
or
pop
lret
inc
xchg
pop
mov
pop
test
add
pushf
test
and
push
mov
ret
hlt
lds
aas
arpl
ficoms
push
repz
insb
cwtl
push
cmp
pop
negb
cmc
mov
adc
adc
xor
dec
mov
xlat
imul
xor
cltd
fisttps
mov
mov
pop
adc
mov
enter
xchg
in
xchg
sbb
cmp
dec
jae
cmp
jg
ljmp
jecxz
clc
movsb
ja
and
push
dec
lahf
popa
outsl
lods
mov
adc
imul
imul
add
pinsrw
xchg
sbb
mov
fimuls
pop
mov
imul
mov
sahf
aaa
add
sub
mov
push
int3
adc
js
sbb
adc
push
mov
sbb
push
in
insb
xchg
jo
cmp
push
xchg
xor
jae
mov
pop
in
adc
or
aam
push
int
or
inc
add
mov
es
ljmp
fsubr
je
stos
dec
ljmp
imull
sbb
enter
fsub
jecxz
jb
sub
bound
fwait
push
xor
jnp
push
xchg
pushf
cmp
movsl
pop
xor
jg
inc
cltd
and
xchg
scas
int3
out
push
cmp
rcrl
clc
sub
mov
sbb
mov
push
mov
mov
and
mov
in
dec
lea
out
dec
dec
fsubl
daa
popf
pop
insl
or
mov
mov
push
mov
ja
dec
addr16
dec
stos
mov
ret
push
sub
dec
push
out
out
js
jbe
in
jbe
call
dec
das
jecxz
and
sub
jns
aaa
mov
add
shl
sub
mov
add
scas
jecxz
les
pop
mov
int3
movl
addb
mov
inc
or
mov
jo
add
jb
in
pop
cltd
cmpb
insb
sbb
inc
je
or
and
int
lods
lods
jno
cs
test
repz
jmp
jmp
cmc
clc
push
xchg
add
inc
xchg
enter
fs
cmp
leave
pop
inc
cmp
adc
nop
in
add
mov
add
cmp
cld
cmc
jle
cld
dec
cmp
lds
and
xor
dec
adc
pop
dec
jg
cwtl
inc
loop
incb
sbb
mov
in
aas
mov
cwtl
pop
lret
add
adc
lock
movsl
scas
mov
jecxz
push
jle
sub
jl
push
es
fdivrs
jg
sbb
sahf
sub
testl
mov
ljmp
test
pop
lods
scas
xchg
leave
das
out
sub
add
lock
sub
stos
lods
and
xchg
imulb
dec
push
aaa
fcompl
jb,pn
aam
lock
and
xchg
or
sub
andl
push
cwtl
adc
jno
enter
cld
incb
pop
adc
outsl
bound
mov
js
imul
sti
popf
mov
xchg
xor
xchg
sub
bound
filds
mov
loop,pn
push
mov
xchg
mov
adc
fisubrl
jae
mov
je
insl
je
aaa
mov
scas
xchg
mov
jecxz
jb
mov
mov
pop
repnz
clc
cmp
sbb
rcll
adc
rorb
sub
push
leave
popf
out
mov
iret
mov
ss
aad
clc
mov
inc
jae
push
sbb
xchg
loop
ja
or
push
mov
pop
aaa
sahf
adc
dec
cltd
in
push
lret
xor
out
test
push
pop
xor
inc
mov
iret
sti
cld
mov
push
lock
adc
xlat
jg
sahf
adc
mov
cmpsl
scas
cld
pusha
mov
je
in
cmpsb
jp
sub
ljmp
xor
mov
mov
out
cli
call
dec
dec
mov
cli
sti
outsl
xor
push
stos
daa
test
or
cmp
push
lcall
fisttpl
push
out
cmpsb
outsb
xrelease
lods
outsl
jb
int
mov
imul
lds
ret
jp
cli
insl
cltd
pop
jo
and
sub
mov
sbb
mov
add
lock
dec
jle
gs
xchg
js
pop
jns
adcb
lret
and
or
xchg
lods
enter
scas
cmp
jl
inc
cmpsl
rcrl
and
jno
inc
and
popa
lock
imul
sub
repnz
int
adc
repz
jg
inc
or
or
push
or
xlat
cltd
sub
loopne
mov
adc
sarl
mov
jge
mov
aam
add
cmpsb
in
mov
notb
int3
leave
inc
aad
dec
adc
jnp
test
sbb
scas
cs
cmc
jae
sti
cli
stos
ret
ret
mov
dec
mov
or
addl
or
repnz
jg
enter
cmp
and
fmull
ret
and
js
jp
add
jno
dec
jecxz
bound
iret
ljmp
movl
mov
pop
mov
out
xchg
push
pop
aad
cld
das
loopne
cmp
sub
leave
je
push
stos
rcll
les
mov
icebp
jl
inc
adcb
inc
adc
cmpsb
push
popa
das
movsb
mulb
cmp
xor
in
out
orb
into
aam
mov
sub
push
mov
lock
std
scas
add
rcr
sub
fs
mov
xorb
xchg
adc
adc
mov
cs
cmc
jnp
mul
jle
xchg
sti
movsb
cltd
mov
decl
rcrb
push
mov
push
add
xchg
sbb
mov
lcall
push
and
or
loopne
push
jle
pop
sub
xchg
push
pop
xchg
push
dec
mov
jns
cmp
xchg
aad
rolb
inc
jb
push
or
sbb
inc
pop
je
xor
ljmp
xchg
xadd
fsub
sub
addr16
mov
push
and
mov
int3
fistps
xchg
pop
lcall
scas
adc
lcall
xor
jecxz
xchg
out
movsb
lahf
mov
adc
xchg
mov
mov
shl
lea
push
add
pop
decb
stc
repz
movsb
loope
lea
mov
shr
xchg
loope
les
nop
test
mov
leave
xchg
or
sub
outsl
or
rcrb
negb
dec
mov
cld
jmp
xchg
sub
push
imull
cli
add
adc
fwait
addr16
nop
in
jne
in
fimuls
dec
xor
repz
je
pop
push
sbb
or
sub
push
insb
aam
mov
jo
inc
xchg
xor
push
push
fistpll
icebp
add
cwtl
mov
enter
pop
fs
push
in
xchg
lret
cwtl
pop
shrl
xlat
aam
shlb
adc
out
push
adc
jmp
aaa
stc
adc
dec
xchg
incb
addl
aaa
stos
jo
push
out
dec
test
fdivrs
lcall
imul
mov
jne
mov
sbb
xor
jecxz
cmp
inc
mov
sbb
decb
out
inc
xor
sbb
ds
cmp
dec
movsb
fimull
repnz
push
mov
xchg
adc
adc
and
sbb
mov
mov
adc
push
dec
ret
lds
jne
xor
fidivrl
jl
hlt
sub
jno
daa
js
jbe
cmp
bnd
mov
push
stc
inc
aad
or
and
push
imul
inc
je
add
hlt
pop
mov
add
lcall
mov
fnstenv
inc
lods
add
jl
dec
cmp
mov
add
sbb
in
mov
stos
and
xchg
jp
add
dec
movsl
add
arpl
dec
stos
pop
push
cmp
pop
pop
jl,pn
jno
inc
dec
sbb
pop
iret
mov
or
orl
xchg
jp
cmp
pop
out
lock
xor
inc
xchg
inc
xor
xlat
xor
inc
mov
fisubl
cmpsb
arpl
fsubs
jns
push
push
cmpb
cmp
movsl
lea
cmp
inc
movsl
movsb
daa
mov
sbb
dec
lds
jmp
fdivrl
inc
mov
stos
adc
jno
lahf
leave
adc
adc
repnz
pop
icebp
or
test
aad
lahf
inc
dec
inc
leave
xchg
lock
jp
dec
andb
int
pop
adc
jge
mov
push
lods
in
test
inc
jle
mov
jmp
out
jl
mov
or
inc
and
jne
sub
dec
jns
mov
add
mov
push
push
inc
xor
out
mov
add
cmp
xor
notl
xor
pusha
popf
xchg
test
popf
pop
jmp
icebp
cmp
push
in
fcoml
outsl
fdivrl
xchg
jg
orl
shrl
mov
out
xchg
out
rcl
sub
fcompl
mov
lahf
sbb
add
push
shll
mov
add
cmp
jp
mov
mov
xchg
decb
add
add
fistpll
mull
insb
fsincos
add
fnstcw
jo
test
imul
adc
repz
bound
push
lea
addr16
and
inc
es
lret
mov
lods
xor
sub
push
ror
imul
fs
iret
push
test
jae
lods
loopne
stos
aas
xor
xlat
test
js
std
je
xlat
push
or
and
imul
fmuls
and
les
push
sahf
repz
mov
idivl
push
jmp
dec
pop
push
dec
mov
mov
fwait
and
cmp
out
jl
out
dec
inc
xchg
pop
and
xchg
repz
jae
mov
loope
adc
mov
xlat
icebp
xor
jmp
cwtl
out
xor
mov
leave
mov
sbb
push
sub
insb
or
and
mov
rcrl
hlt
data16
out
mov
add
mov
ljmp
adc
stc
sbb
jle
jb
jge
xor
mov
cli
fists
sub
sub
lock
lcall
or
ja
lcall
sub
add
push
jl
xchg
lock
push
outsb
loope
and
bound
mov
sbb
sbb
push
shll
cmp
mov
pop
push
out
mov
call
jl
add
call
lret
adc
mov
int3
fs
sbb
lea
inc
lods
aas
leave
adcb
dec
out
adcb
int
mov
jmp
push
pop
mov
xchg
pop
sbb
mov
fadds
arpl
cli
lods
pop
cmpsl
or
les
fimuls
add
jle
stos
or
and
arpl
push
aaa
pop
imull
hlt
int3
neg
jnp
xor
or
mov
sbb
aaa
imul
and
jno
ficoms
mov
dec
mov
mov
popaw
lret
mov
xor
cmpsl
pusha
push
call
push
xchg
jae
icebp
mov
fsubrp
jne
mov
lahf
and
in
jns
dec
inc
cmp
cwtl
out
inc
scas
cmp
pop
popa
test
imul
push
aam
insb
mov
in
insb
mov
daa
addr16
int3
cmp
dec
icebp
push
imul
mov
pop
push
lahf
push
popf
pop
rol
in
cltd
pop
lea
sahf
dec
test
cltd
aaa
daa
pop
lea
insb
and
loopne
test
jnp
xor
je
filds
in
shll
adc
pop
xor
popa
out
mov
xor
jae
mov
add
xchg
data16
mov
out
ja
decb
push
cs
push
sub
lds
dec
out
aas
mov
mov
and
cs
jb
inc
cmc
stc
pop
sti
loop
pop
lahf
add
shr
and
iret
mov
mov
sub
fsubp
or
push
pushf
mov
or
pop
in
test
enter
inc
mov
movb
cmp
shr
in
lret
mov
pcmpeqb
cld
sub
xchg
mov
dec
mov
mov
mov
lds
adc
mov
mov
mov
sbbl
xor
pop
mov
inc
cmc
js
mov
sbb
jl
mov
and
xchg
loope
notb
lahf
jmp
cli
xchg
loop
inc
insb
stos
sub
lds
lahf
mov
out
hlt
or
mov
fucomp
mov
cmpsb
jnp
stc
or
inc
mov
dec
fs
and
and
dec
adc
dec
fs
jae
xor
xchg
or
cmp
cmp
push
sub
aaa
mov
xor
insl
xchg
lret
mov
out
pop
rorl
pop
out
xchg
mov
iret
aam
cltd
pop
dec
pop
pop
sbb
sub
aaa
stos
shrb
lods
add
mov
pop
movsb
rclb
xchg
mov
sub
xchg
xchg
sub
pop
sub
push
mov
gs
sbb
ss
or
mov
or
int
ficompl
mov
es
sub
and
lret
sub
scas
sbb
cmpb
in
mov
lock
daa
adc
cs
jl
xor
inc
xchg
int
xor
xchg
scas
jmp
lahf
movsl
out
js
out
cmpl
pop
int
test
aaa
mov
jecxz
pop
adc
lds
enter
xchg
adc
mov
xchg
fimuls
mov
inc
in
pop
das
xor
fisubl
movsl
call
ret
sub
xchg
nop
rdtsc
cmpsb
mov
adc
fadd
popf
push
pushaw
mov
into
jp
rclb
push
inc
adcb
leave
fdivrs
jae
ljmp
add
test
add
lgs
mov
mov
cmpsl
jp
mov
sbb
shl
loope
xchg
cmp
adc
xor
sar
movsl
aas
out
in
es
sbb
out
lods
adc
call
das
pop
or
add
ret
and
call
mov
popf
xchg
push
push
cmp
fmull
pop
dec
and
aas
enter
dec
adc
loope
cwtl
push
or
ss
in
lea
insb
mov
push
mov
lods
sarb
ja
pusha
iret
mov
pop
dec
adc
divb
xor
add
pop
mov
sub
xor
mov
inc
test
mov
ret
mov
cli
mov
jl
or
ds
xchg
mov
mov
in
fadd
jecxz
cmpsl
pop
sub
lods
cwtl
push
shll
add
xor
aam
les
cmc
nop
call
mov
outsl
xchg
add
std
dec
aaa
and
mov
add
add
aaa
arpl
dec
repz
sub
fidivl
sarl
fxch
xor
testl
fdivp
jecxz
cwtl
wbinvd
xchg
fistpl
fs
in
cmp
loop
fdivrs
movsl
dec
jecxz
jge
daa
mov
into
adc
sub
inc
arpl
cld
cmp
mov
addr16
push
inc
les
ja
popa
mov
testl
lds
and
cld
cli
pop
ljmp
jns
repz
cmp
cmp
push
mov
js
arpl
xor
lods
and
jge
repz
push
fcompl
outsb
sbb
call
mov
push
daa
jnp
add
cmpsl
lds
and
push
and
fimull
jnp
imull
pop
aam
fistpll
xor
daa
jb
xchg
pop
in
cld
push
cwtl
cmp
and
pop
test
mov
movsb
inc
push
outsl
mov
ficoms
xchg
pop
fildll
xchg
inc
cmp
add
pusha
fimull
jle
outsb
add
lcall
mov
push
loope
insl
lods
pop
cwtl
or
fcmovnbe
aas
push
stos
leave
incb
sub
mov
ds
cltd
mov
fnstsw
pop
sbb
loopne
insb
sbb
sarb
cmc
rcl
dec
fbld
test
inc
int
test
and
ds
jg
sub
addr16
sbbl
out
jle
out
mov
push
ja
rcr
in
jo
test
and
aaa
aad
jg
jns
cmp
aad
lcall
cwtl
lret
pop
les
push
jle
rcr
int
lods
jne
push
outsl
mov
cmp
cmp
stos
xchg
xor
mov
loope
sbb
stc
bound
jge
sbb
pop
fistpll
xor
xchg
cli
ret
inc
in
cmp
lds
aad
adc
and
call
pop
adc
inc
ret
xor
inc
jecxz
lods
push
lret
sub
cmp
movsl
ljmp
dec
out
xor
imul
push
and
lret
nop
xor
jle
adc
xchg
dec
es
cs
jnp
dec
bswap
push
and
fcomp
hlt
mov
imul
pop
push
sahf
fstpt
pusha
daa
les
out
inc
or
or
ja
jae
pushf
push
mov
ljmp
inc
dec
inc
jecxz
test
sub
pushf
outsl
xlat
ret
xchg
jne
in
jo
int
adc
xchg
notb
xchg
jne
sub
sub
dec
rcrl
xor
movsb
sbb
or
mov
mov
arpl
test
loope
incb
rorb
mov
jb
nop
sub
sub
notl
hlt
add
dec
test
int3
adc
xor
sub
ljmp
orb
mov
sbb
int3
es
sub
sub
sbb
and
les
add
pop
ja
inc
insl
das
or
xchg
lret
mov
leave
xor
outsl
mov
cmp
ljmp
and
movsl
loope
fidivl
hlt
inc
push
in
loop
xor
add
xor
out
xor
rcrb
jmp
inc
cmp
les
jne
pop
das
and
test
sbb
dec
sbb
jp
sub
xor
inc
bound
mov
add
ja
sub
dec
aad
sbb
ret
mov
movsb
push
fcoms
out
add
fmull
call
popf
in
xor
mov
shlb
pop
cld
lods
stos
leave
mov
fisubl
out
push
sbb
push
pop
insb
aad
pop
jle
pop
cmp
bound
add
lret
mov
cltd
dec
out
xchg
and
js
fwait
sub
mov
push
xchg
add
pop
out
pop
js
cmpb
sqrtps
adc
ret
push
jnp
push
lahf
mov
pusha
pop
in
and
cmc
pop
in
jnp
mov
add
or
pop
or
insb
jl
add
cld
mov
xorb
mov
into
jbe
outsl
iret
inc
xor
cmp
cmp
and
filds
push
jno
enter
jp
fcomps
xor
inc
sbb
test
xor
iret
xor
aaa
push
into
movsl
adc
xchg
cmp
pusha
and
es
dec
ja
roll
and
jecxz
ret
cmp
jbe
lret
and
mov
mov
add
rcll
mov
and
popf
dec
jo
pop
jle
cmc
push
xor
ffree
push
mov
cmc
rorl
dec
mov
or
out
out
js
mov
stos
mov
xor
xor
mov
xor
cltd
adc
add
mov
arpl
ja
das
pop
jle
sbb
add
mov
jno
mov
movsb
mov
shrl
call
adc
mov
cltd
jne
fcmovbe
pusha
jg
aaa
es
sub
popa
iret
aad
stc
jns
pop
push
inc
test
jne
stos
popa
mov
add
mov
inc
int
nop
ss
push
dec
repnz
sub
push
sbb
xor
clc
fdivrs
and
rcrb
dec
bound
repz
out
xor
ficoml
outsb
mov
mov
pop
test
outsl
xchg
pushf
push
shll
mov
cmp
cmp
mov
fidivs
fisubl
mov
call
aam
imul
lds
adcb
stos
mov
mov
adc
xchg
lock
xor
pop
sti
mov
movsl
mov
mov
xchg
adc
repz
cli
and
jnp
sbb
pop
pop
and
push
jle
sti
outsl
ljmp
xchg
popf
pusha
loope
xlat
test
cmpsl
fidivrs
imul
cmc
popf
stc
and
push
sub
jge
dec
notl
ret
data16
ret
xor
dec
je
mov
pop
dec
out
dec
xchg
and
cs
daa
push
mov
out
and
push
es
dec
icebp
sbb
sbb
xchg
xor
mov
rcrl
rcrb
or
and
adcb
adc
pop
add
leave
ja
push
iret
or
adc
dec
aas
xor
adc
pop
inc
inc
xorl
xadd
ja
mov
mov
fistpll
addr16
dec
repz
je
adc
xchg
push
xchg
mov
mov
ficoml
push
push
cmpsw
mov
in
push
push
adc
or
bound
fildl
cmp
pop
inc
and
ja
ret
jecxz
jmp
mov
jb
jge
push
cmp
xor
xor
gs
stc
adc
pop
in
push
inc
inc
jae
and
cmp
ds
bound
jmp
push
decl
adc
imul
mov
pop
jl
es
rcrb
mov
outsb
lret
in
and
imul
cmpsb
mov
out
ror
add
movsb
iret
adc
aas
and
xor
jb
and
mov
loop
or
sbb
shll
push
mov
cmp
push
in
mov
aam
push
jecxz
cmpb
icebp
insl
mov
cmpsb
mov
pop
scas
js
shll
clc
cmp
repz
rorl
dec
mov
or
rorl
dec
call
je
push
cld
push
add
xchg
fnstcw
mov
xor
mov
gs
inc
repnz
movsl
rorl
and
repz
rclb
cmp
mov
dec
loope
push
scas
mov
sbb
sbbb
js
mov
aaa
adc
out
cmp
inc
repz
xchg
cmp
dec
mov
fs
pop
pop
sbb
inc
int
negl
sbb
fcmovne
je
call
or
jp
pushf
mov
addb
les
movsl
jno
mov
adc
adcb
loop
push
inc
test
popa
xchg
sub
pop
pop
imul
pop
movsl
jb
cmc
test
fisubl
pop
gs
mov
and
sub
jp
and
push
jg
lock
lea
jbe
outsb
and
lods
lds
stos
lahf
loop
fwait
int3
enter
outsl
mov
and
movsb
shlb
and
push
lret
pop
lods
pop
pop
pop
cld
or
fisubl
aas
enter
int3
jp
outsl
jne
and
jb
int
push
or
in
icebp
jbe
jbe
pop
imul
mov
js
or
outsl
mov
bts
fldcw
cld
sbb
mov
ds
repz
sti
stos
scas
and
inc
cmp
hlt
data16
das
sbb
mov
test
mov
arpl
jp
cmp
int
add
inc
add
hlt
in
insl
loopne
dec
es
adc
test
int
mov
jp
fldcw
jle
data16
sahf
mov
gs
xor
inc
mov
test
js
mov
cltd
mov
test
cmpsb
movsl
mov
movsl
sub
aad
mov
addl
sbb
adc
mov
jae
adc
nop
xor
arpl
or
pop
roll
or
fcmovne
outsl
lret
fistpll
dec
sbb
mov
es
xchg
inc
add
in
jnp
pop
sub
adc
pop
ret
iret
and
pop
adc
inc
scas
push
shrb
lods
stos
and
nop
push
stc
push
std
cmp
pop
aaa
in
jl
test
lcall
inc
jb
mov
jns
lcall
push
and
scas
sub
xchg
mov
dec
adc
stos
push
in
movsb
pop
cwtl
sub
add
fnsetpm(287
dec
dec
insl
mov
and
jg
mov
adc
xlat
mov
adc
lret
jge
mov
orl
ljmp
mov
lret
ret
cmp
repz
sbb
fsubl
int
lock
dec
xchg
jecxz
sahf
mov
and
and
loope
pop
test
add
hlt
push
xor
jmp
mov
push
mov
xlat
dec
je
xor
ss
push
mov
stc
add
push
dec
cmpsb
add
mov
push
mov
and
nop
jo
jg
push
aad
aaa
ficompl
push
and
cmp
xchg
aam
mov
lret
icebp
mov
lret
jle
xchg
shlb
and
or
clc
inc
inc
adc
mov
and
andl
loopne
addr16
movsb
push
sub
or
inc
pop
add
cld
sbb
xchg
mov
pop
mov
cmp
aas
cli
sbb
shl
loopne
inc
push
lea
cmp
mov
and
cmp
inc
sti
nop
pop
mov
or
out
xchg
jle
push
sbb
push
shr
push
jmp
insb
outsb
fdivrs
test
int
or
cmpsb
xor
xchg
jp
mov
repnz
cmc
pop
adc
fwait
xchg
fmuls
es
dec
lahf
adc
fdivrs
or
sahf
lods
js
test
icebp
ret
loopne
nop
dec
js
sarb
pop
fwait
iret
popa
xor
jbe
sub
xor
and
in
std
xchg
repnz
iret
lret
dec
mov
lock
repz
adc
icebp
and
lret
fwait
or
ret
jmp
adc
ret
inc
inc
test
dec
pop
out
jecxz
icebp
sbb
jo
dec
sbb
std
divps
adc
adc
pop
rcr
outsl
sbb
sbb
fbld
mov
lahf
das
lahf
ficompl
outsl
fstl
jl
sti
push
daa
and
mov
push
fisubl
jp
adc
xchg
sbb
shl
fs
jg
xor
cmp
daa
mov
jge
leave
out
ss
dec
iret
data16
lret
jecxz
adc
int
ljmp
int3
add
dec
fsubrs
fdivl
cmpl
dec
pop
in
mov
repz
push
je
mov
ss
jns
push
lret
scas
jno
or
icebp
clc
pop
insl
fsts
popf
or
cmp
jp
mov
ljmp
popf
sbb
pop
mov
dec
popf
scas
inc
mov
bound
cltd
inc
aas
xor
push
in
lock
dec
imul
jno
push
sbb
popf
divb
xchg
inc
or
push
fmuls
dec
insb
loop
push
push
pusha
xchg
rorb
mov
clc
mov
mov
pop
aam
sub
jae
inc
add
pushl
and
sbb
out
push
dec
cmp
mov
push
cmpsb
add
and
clc
cmpsl
into
inc
into
and
or
xor
push
mov
push
dec
data16
stos
jmp
ss
daa
push
xlat
pop
push
adc
mov
inc
push
divl
lret
hlt
adc
repz
pop
cli
rorb
inc
rcrb
sub
and
insb
dec
rol
int3
cmp
loop
push
lret
inc
xorb
mov
sbb
xor
sub
in
add
add
cld
sub
pop
xchg
test
xchg
lahf
lahf
sbb
push
scas
daa
add
jg
fisttpl
mov
out
cmpsb
out
dec
rol
roll
iret
int3
and
icebp
testl
adc
cmpsl
lahf
adc
sar
repz
cmp
les
inc
jl
sub
jmp
mov
cmp
fdivr
jbe
cmp
shrl
insl
lahf
inc
sbb
inc
pop
pop
and
mov
in
or
lahf
lods
xor
sti
add
xchg
out
sbb
dec
outsl
outsb
adc
aaa
adc
je
xor
lret
xchg
hlt
test
imul
adc
xchg
fnstenv
test
or
xlat
pop
lods
lahf
add
dec
pop
push
jmp
pop
pop
stc
loopne
nop
or
scas
stos
xchg
cmp
adc
cmpsb
sarl
mov
mov
lcall
ss
inc
pushf
and
sub
mov
xlat
sbb
push
mov
in
sbb
pavgb
pop
dec
mov
inc
jl
std
into
test
xchg
add
pop
or
jl
xchg
mov
adc
stos
cmp
inc
lret
inc
or
mov
pop
jno
testl
sub
nop
lret
sti
push
push
test
pop
ror
jmp
mul
lret
and
jb
sub
shrb
and
iret
xor
or
aas
repnz
sti
cmpsl
ret
imull
xchg
xchg
cmp
mov
fcompl
push
stos
mov
inc
mov
and
adc
xorl
call
ljmp
cmp
xor
ret
loope
xchg
mov
in
ret
pop
js
pop
cli
mull
cmc
andl
popa
out
dec
arpl
add
fisubs
xlat
mov
mov
cmp
cmpsb
fidivrs
jmp
outsl
aad
jge
cmpsl
sub
repnz
pusha
lods
shrl
psrld
xchg
adc
sbb
aaa
hlt
shlb
and
sarl
pop
inc
cmpsb
imul
jle
or
data16
pop
out
test
jns
addr16
and
mov
cmp
jmp
fwait
aas
mov
loopne
mov
sbb
mov
adc
dec
and
aas
pop
sbb
lock
out
fldenv
rcll
cld
sub
call
xor
mov
xlat
loop
jns
pusha
imul
push
push
mov
popf
rclb
dec
aad
imul
xchg
dec
mov
fisubl
sarl
inc
in
inc
in
mov
inc
stos
xor
add
shr
cmpsb
outsb
iret
xor
cmp
mov
in
sub
aad
fisubl
xchg
inc
xchg
fs
inc
outsb
inc
subl
shlb
das
lock
push
lods
lock
push
sbb
and
fs
mov
cmpb
xchg
mov
adc
arpl
fistl
outsb
loop
inc
shlb
pop
filds
sarl
fistpll
mov
int
ja
inc
pop
hlt
popa
jns
popf
sbb
jp
mov
out
mov
icebp
sub
popa
inc
pop
xchg
clc
insl
pop
fwait
jbe
adc
repz
mov
cmp
ret
out
fildll
xor
mov
xchg
ret
and
push
gs
cmp
mov
inc
adc
jmp
mov
orl
pop
mov
mov
je
xor
orb
mov
jecxz
jge
pushf
fimuls
fmul
jnp
adc
int
xchg
pop
xchg
lahf
or
adc
xor
imul
adc
test
pop
in
lods
cmc
ja
mov
jo
cltd
arpl
cmp
in
xchg
out
enter
pop
and
mov
xchg
mov
fildl
ljmp
adc
inc
push
andl
sub
push
cwtl
jb
xchg
addr16
js
pop
sbb
aam
cmp
pushf
inc
sbbl
daa
iret
mov
dec
pop
xor
jno
out
and
xor
xlat
lahf
insl
inc
in
add
push
addr16
fadd
arpl
in
je
loope
push
xchg
jl
outsl
sbb
mov
scas
fistps
push
xchg
mov
jae
repz
xlat
lret
std
dec
fdivrl
mov
sarb
push
or
out
outsb
out
std
sub
les
das
cli
adc
mov
lret
popa
cs
pusha
repnz
sahf
cli
bound
adc
andl
call
inc
loope
or
mov
push
and
pop
push
notb
orl
jae
mov
mov
lea
shll
pop
jbe
and
mov
cmc
mov
aaa
lods
add
pop
sti
ficoms
mov
sbb
fidivrl
xor
adc
pop
dec
pop
dec
push
jge
add
adc
cmp
imul
loopne
es
dec
movq
jne
fisubl
loope
imul
xor
lret
ret
or
shll
mov
mov
push
inc
or
mov
test
inc
imul
add
cmc
add
popa
adc
pusha
incl
je
rorl
das
daa
movsb
popf
aam
pop
lret
call
in
mov
push
lahf
cmp
mov
lcall
cmp
aam
fwait
loopne
mov
pushf
subb
cmc
dec
iret
lds
xchg
jae
das
xchg
fidivl
xchg
ss
pop
cltd
repnz
enter
mov
outsl
push
pop
push
fwait
outsb
cltd
lock
and
sub
pop
dec
add
in
subl
pop
inc
adcb
mov
fsubrs
jp
fiaddl
pop
rcrl
and
mull
ds
pop
sbb
mov
jb,pn
popf
add
rcll
pop
inc
repnz
xor
add
fists
jns
mov
dec
fld1
xor
mov
xchg
gs
das
lock
fdivrs
add
cmp
stos
inc
test
testl
ljmp
adc
jns
cwtl
mov
adc
popa
xchg
clc
std
add
push
movsb
fisttps
pop
pusha
scas
out
arpl
popa
push
cmp
mov
mov
rol
out
dec
leave
pop
pop
xchg
loop
and
pop
scas
ds
cld
aas
daa
mov
push
add
and
loop
add
faddp
push
jp
pop
fucom
pop
sub
xchg
push
add
and
ja
addr16
pop
and
sub
mov
sub
sbb
mov
jnp
lods
cltd
adc
jb
je
and
or
jmp
cs
push
lret
cmpsl
inc
fisttpl
xchg
mov
lods
cs
pushf
xorb
mov
stos
xchg
push
cmpsl
add
xor
push
or
pusha
fs
lret
mov
nop
lret
subl
or
pop
icebp
fwait
dec
mov
sbb
jbe
int
mov
mov
cmp
sbb
insb
aas
mov
pop
ss
jmp
mov
cmpsl
xchg
ret
scas
mov
jae
in
push
sub
pop
dec
daa
idivb
mov
shrl
pusha
fcmovnb
pop
decl
jmp
das
lahf
repnz
xchg
ja
sub
mov
inc
add
fists
popa
mov
cmp
sbb
sbb
jmp
mov
mov
ror
xchg
add
popa
out
push
cmp
cltd
fdivr
fnstenv
xchg
ds
sbb
int3
push
loop
call
inc
push
mov
ret
mov
fimull
push
jge
pusha
addl
dec
int
pusha
inc
ja
lods
jae
adc
sub
jno
xchg
dec
mov
or
sub
dec
js
lock
lods
mov
mov
xchg
in
jmp
xchg
ds
scas
orb
mov
lods
adc
outsl
fmull
xor
std
pop
mov
sub
data16
adc
ret
add
cmc
xchg
and
xor
lar
pushf
push
and
and
cmp
mov
or
push
push
mov
int
jb
xchg
and
mov
add
mov
and
popf
push
stc
pop
mov
bound
sub
adc
adc
push
and
xor
adc
bound
insl
pop
or
pop
push
sti
jg
add
sub
mov
mov
mov
and
dec
and
lcall
insb
cmp
call
dec
mov
data16
stos
out
aad
xor
loop
adc
lcall
add
call
mov
xchg
lea
adc
mov
pop
insb
mov
cli
jle
mov
jnp
movsb
sahf
and
dec
jle
ljmp
mov
cwtl
jmp
dec
cmp
push
mov
jmp
cmp
jne
scas
jle
mov
aas
fldl
lahf
and
out
cmp
add
int3
and
pop
jns
xor
roll
mov
jle
ljmp
mov
push
pop
xor
cmp
test
test
cmp
les
or
xlat
and
push
adc
xchg
and
jmp
add
or
pushf
dec
lods
or
insw
push
push
inc
dec
shl
jmp
jge
adc
lock
xor
pop
cmp
inc
mov
xor
sub
test
adc
iret
sbb
mov
sub
inc
jecxz
pusha
jne
pop
ret
xor
sub
sbb
sub
mov
aam
repnz
into
in
outsb
or
jne
sub
std
test
jg
mov
sbb
aas
imul
jo
push
sti
jge
icebp
push
call
lret
dec
shll
shll
ds
fcompl
outsl
jne
or
repz
sub
cmp
sub
xor
xor
test
cmc
mov
bound
jbe
pop
inc
cltd
inc
mov
push
mov
mov
dec
xor
out
sbb
xor
imul
bswap
clc
imul
xor
mov
pop
jae
jge
movsb
stos
scas
xor
push
xor
cli
sbb
sub
imul
sub
sar
stos
mov
push
insb
scas
pop
rcrb
pop
inc
aad
push
mov
imul
outsb
dec
out
mov
cs
int3
mov
or
aam
stos
pop
xchg
xchg
inc
jae
sbb
cld
in
lea
cmpsb
data16
int
es
mov
add
cmp
adc
leave
ret
adc
into
or
or
mov
jbe
ljmp
fistpll
stos
adc
add
scas
sub
loop
aad
bound
dec
dec
lret
jbe
or
mov
sbb
add
jmp
shl
fiadds
aad
pop
aad
mov
and
mov
and
mov
nop
pop
sbb
test
xchg
and
or
test
in
addl
lods
test
pop
sbb
pop
inc
pop
mov
cli
mov
sub
popf
adc
add
sbb
daa
dec
jmp
movsb
mov
or
mov
cld
popa
xor
dec
lods
lock
jecxz
aas
cmpsb
jns
adc
adc
int
fsubrs
add
rclb
push
dec
mull
les
aam
pop
add
xchg
jno
add
das
and
jmp
jle
mov
popf
sbb
aam
cmc
add
jnp
mov
in
fldenv
jmp
arpl
inc
imul
lods
xchg
mov
insb
jmp
call
or
lods
bound
call
and
lret
fdivrs
sub
xor
jb
sbb
mov
mov
pop
fs
cld
jmp
cmpsl
inc
dec
xlat
pop
loop
add
sbb
xchg
pushf
imul
mov
rcl
fcmovbe
push
flds
test
popa
pushf
jb
xchg
dec
mov
sub
dec
dec
popf
arpl
adc
push
push
inc
sbb
faddl
fwait
pop
stos
add
outsl
rolb
ja
mov
inc
adc
pop
out
sbb
mov
dec
mul
mov
stos
add
xor
jbe
addb
rcl
xchg
stos
loop
ljmp
jmp
in
scas
insl
call
popf
mov
push
imul
jge
jae
aas
xor
mov
rolb
push
imulb
mov
sub
mov
movsb
push
js
out
addl
and
push
out
xlat
inc
lret
nop
fdivl
int3
fwait
xchg
push
pop
stos
mov
lcall
fildll
data16
xchg
pop
ds
mov
iret
dec
jg
movsl
outsb
ror
fwait
add
push
daa
add
sbb
daa
arpl
aaa
aaa
mov
loope
xstore-rng
cmpsl
les
cmp
data16
jnp
mov
notb
icebp
add
push
sub
int
icebp
les
lcall
add
fidivrl
sbb
push
inc
insl
cld
cmp
in
inc
shlb
and
in
mov
mov
jmp
sbbl
cmp
call
divb
mov
jne
xor
jne
mov
dec
sbb
ja
push
rclb
je
iret
lcall
stc
fs
or
xchg
xchg
and
jb
jno
jbe
stos
cld
mov
cltd
sahf
xchg
xchg
adc
sbb
jge
je
jo
mov
test
add
xchg
add
fmul
nop
cmp
adc
std
bound
rcll
testl
lods
hlt
fcomi
pop
imul
fisubrs
repnz
mov
xchg
shll
incl
dec
cmp
ret
orl
into
push
popa
notl
jge
push
sub
test
outsb
dec
sahf
jnp
sub
fwait
stos
iret
jg
cmp
sahf
shl
shl
push
and
add
incb
sbb
mov
mul
iret
add
int3
xlat
pop
push
adc
sbb
enter
jnp
pop
dec
xchg
or
cmp
fisttps
inc
int3
and
scas
fldt
or
push
mov
mov
cmpsl
jle
add
insb
jno
xor
ja
jmp
xchg
aad
push
cmpsl
mov
bound
mov
mov
lods
cltd
pop
xchg
mov
jg
jnp
pop
les
xchg
pop
xchg
lcall
mov
xor
dec
ret
mov
cmpsl
mov
lea
test
stc
mov
or
dec
jg
test
mov
hlt
movsl
out
jp
jecxz
and
loop
mov
fisttpll
sub
and
xchg
adc
ficompl
add
or
inc
test
test
sub
repnz
dec
mov
and
jno
pop
xor
daa
lcall
sub
inc
and
stc
insl
fmuls
push
test
les
dec
or
in
jne
test
add
jg
pop
pusha
push
mov
xchg
sbb
add
sbb
les
push
sbb
jne
ret
popf
mov
dec
push
in
and
jl
push
inc
cmp
add
cmp
test
pop
dec
sbb
daa
xorps
movsb
subb
push
xchg
popf
fadd
jo
mov
add
inc
iret
sarb
mov
std
mov
cld
or
ror
mov
mov
int
mov
sbb
push
xor
dec
shr
cld
outsb
popa
push
push
sbb
fucomip
inc
push
ljmp
inc
bound
mov
jne
scas
roll
xor
imul
data16
repz
mov
mov
xor
pop
jp
lret
addl
inc
in
subps
adc
dec
inc
lods
sbb
jnp
mov
mov
lds
or
test
pop
xchg
cmpb
dec
cs
jne
shll
orb
cmp
jae
mov
push
cmp
pop
lret
dec
jo
inc
pushw
in
dec
jge
shll
sub
mov
repnz
jne
cmp
and
int3
test
pop
mov
rcr
std
les
sub
fucomi
adc
daa
pop
inc
sbb
xor
das
sahf
gs
adc
sti
lahf
xchg
jo
and
jge
mov
data16
cmp
cmp
sub
inc
das
inc
xchg
sub
push
jno
enter
in
jns
rcll
repz
dec
jecxz
cmpsl
add
scas
insb
jp
int3
xchg
arpl
inc
shrb
adc
leave
fs
dec
jge
pop
lahf
stos
xor
inc
in
sbb
xchg
data16
push
pop
adc
dec
out
push
ret
jae
xchg
mov
addr16
adc
pusha
add
fnstenv
cli
stc
ja
cmpsb
jb
aaa
sub
inc
ja
in
repnz
pop
sub
shr
or
cmc
scas
cld
xchg
jo
jge
mov
add
add
stc
or
add
aam
push
arpl
jmp
outsb
mov
jecxz
mov
fsubrl
ret
jg
xchg
mov
aaa
jmp
jl
cmp
xor
and
dec
mov
push
repnz
out
fucomip
or
mov
nop
mov
dec
arpl
xor
xor
ret
mov
xchg
ds
into
pusha
cmp
mov
mov
lea
je
mov
dec
sub
inc
sbb
add
lods
divl
aaa
xor
andl
or
dec
outsl
mov
daa
sbb
add
or
fimuls
cli
fs
mov
xor
cmp
dec
out
adc
cmpsb
leave
leave
lea
push
fldln2
call
lcall
xchg
adc
lods
popf
mov
jno
sbb
mov
mov
mov
inc
pop
add
sbb
inc
xor
fldl
idivb
mov
mov
rolb
out
push
cs
cmp
out
sub
std
sub
inc
test
xchg
cmp
pop
repz
sbb
fcoml
loop
push
fadd
lods
xchg
sbb
add
cmpsl
mov
iret
jp
cs
test
inc
repz
inc
lcall
add
mov
scas
scas
mov
mov
pop
xchg
fisttpl
jbe
mov
mul
mov
repz
jl
xchg
popa
jno
jb
cmpsl
pop
andl
int3
jns
hlt
lds
es
stos
repz
xlat
stos
loopne
sbb
fimuls
and
or
stc
fs
jle
mov
out
push
and
or
leave
lods
mov
mov
dec
dec
scas
jecxz
fcmove
outsb
sbb
repnz
std
outsl
lods
adc
cmp
xchg
inc
bsf
inc
nop
inc
cld
jmp
inc
mov
cmpsb
dec
or
in
mov
xor
lahf
test
loop
outsl
psllw
ljmp
cmp
sbb
adc
and
mov
mov
aas
xchg
xchg
mov
mov
imul
nop
inc
fs
int
mov
adc
lds
lock
imul
xchg
cwtl
icebp
mov
in
arpl
mov
clc
pop
scas
adc
xchg
sbb
push
cltd
loop
gs
mov
adc
int
cmp
dec
lret
push
or
xchg
loope
mov
xchg
pop
add
pop
roll
jmp
fadds
outsb
and
xorl
leave
insb
cld
insl
mov
or
adc
sub
pop
mov
xchg
xchg
rcrb
dec
ja
xchg
xor
mov
inc
pop
mov
adc
addr16
ja
push
pop
setns
inc
stc
jae
fs
scas
test
or
mov
mov
movsb
and
cmp
xorb
insl
bound
mov
jo
daa
mov
cli
adc
push
inc
daa
sub
repnz
cmp
aad
int3
lods
jae
or
sub
jno
mov
lret
aam
jne
lods
mov
pop
mov
ret
pop
shlb
sbb
bound
inc
sbb
test
jmp
xchg
repz
popa
inc
roll
mov
cmp
lahf
shrl
out
fdivl
sbbb
mov
fdivs
aaa
cmc
mov
sarl
and
cmp
pop
xchg
add
dec
push
and
div
jp
ja
rorl
add
sub
jns
inc
sub
and
and
push
jo
scas
insb
lret
jno
loop
in
ljmp
cmp
jno
ljmp
add
popa
inc
lret
cmp
inc
in
jg
stos
rdtsc
fcmovbe
pop
loopne
rorl
js
mov
int
jo
xor
pop
mov
shl
inc
fistps
imul
lcall
fdivl
mov
dec
cmp
jmp
xchg
out
and
dec
cmpsl
fldcw
mov
jne
int3
inc
insl
xchg
std
dec
mov
lods
jbe
add
into
call
dec
shlb
xlat
cmpsl
add
and
mov
test
data16
dec
loopne
andl
push
mov
fdivs
xchg
or
out
mov
adc
sahf
cmp
subl
pop
ds
aam
stos
sub
dec
adc
test
mov
sbb
xchg
inc
cs
nop
dec
rclb
lret
outsl
in
subl
cmp
inc
add
pop
outsb
jmp
push
test
adc
jb
or
add
ds
ja
and
mov
mov
stc
push
popf
repz
cwtl
dec
adc
dec
test
mov
push
sub
mov
and
cmp
jno
jge
mov
int
xchg
insb
add
jb
push
pushf
lcall
stos
xchg
je
fisubs
roll
mov
pushf
les
dec
push
mov
pop
xor
enter
and
xchg
xchg
iret
andb
jmp
add
adc
gs
stos
and
cmp
mov
inc
aam
push
mov
ds
xor
cwtl
icebp
or
sbb
rolb
mov
xor
inc
ljmp
loope
xor
imul
mov
inc
icebp
cmp
shlb
xchg
nop
aas
test
mov
push
cmp
cmp
inc
add
outsb
push
ja
scas
push
lds
or
fistpll
xor
in
fmuls
lahf
das
push
ss
cs
and
and
test
mov
shrb
mov
pop
cmpl
mov
movsl
jecxz
push
mov
in
jmp
test
jno
xchg
xor
lahf
cs
jo
int3
sbb
outsb
jmp
xchg
push
das
pcmpeqb
jmp
je
into
xor
rep
pop
mov
pop
cmpsb
dec
and
loope
cwtl
xchg
xor
loope
or
popa
sub
pop
sbb
in
sbb
mov
mov
cmc
or
and
int
aam
sub
sub
aad
push
lods
inc
push
jo
dec
andl
xor
pop
aas
add
aad
jl
add
sbb
jb
pop
cli
mov
iret
inc
loope
enter
push
adcl
rolb
add
or
cmp
andl
les
imul
jnp
inc
inc
in
scas
mov
les
adc
sub
mov
mov
in
rcrl
aad
xchg
andb
mov
shll
lea
daa
push
xchg
xchg
jnp
mov
push
push
sti
arpl
sub
sbb
call
or
test
aad
movb
div
adc
pop
mov
add
jno
mov
or
gs
mov
mov
cld
js
sbb
mov
mov
sub
sub
lods
mov
sbb
adc
xchg
int
test
sub
cli
xchg
push
and
lcall
xor
xchg
cmp
inc
insl
pushl
push
add
mov
sahf
stos
stos
and
movsb
imul
cmpxchg
sbbb
adc
aaa
lret
inc
call
push
clc
adc
mov
fcoms
popa
push
xor
jno
xchg
aaa
xor
pusha
push
subb
lcall
fcompl
xchg
test
add
out
xor
aaa
mov
aad
mov
dec
ljmp
ffreep
push
outsb
xchg
dec
shll
data16
inc
les
js
xor
add
sbb
sbb
lahf
dec
insl
adc
xchg
fcomps
outsb
mov
fs
mov
push
pop
into
jmpw
xor
jnp
inc
ret
adc
jle
add
mov
xchg
scas
insl
adc
ret
daa
outsl
leave
pop
lods
mov
and
mov
sbb
push
call
and
in
movsl
pop
clc
dec
daa
iret
test
andnps
jns
xchg
pop
cmp
xchg
jp
fistps
lret
enter
xor
sub
inc
push
sar
inc
mov
test
or
cmp
lds
jo
fmull
movsb
add
mov
adc
or
clc
sti
dec
adc
rclb
or
cmpsl
adcl
push
xchg
fnstsw
subl
cmp
repnz
test
jp
or
insb
add
movsb
add
xchg
out
pushf
push
outsl
in
test
mov
lods
loope
cmpb
inc
in
or
pop
pop
int
sbb
jmp
aaa
mov
ja
xchg
fnsave
lods
jae
or
fnstenv
negl
es
push
adc
push
xlat
pop
ja
jne
adc
mov
or
pop
mov
fstps
mov
fiadds
sbb
and
gs
push
mov
mov
mov
sti
ret
mov
add
int3
lret
dec
loope
xchg
pop
call
and
push
mov
loopne
imulb
insb
cli
inc
and
arpl
lret
xchg
xor
iret
imul
mov
adc
cmp
add
aaa
lcall
das
in
mov
test
inc
push
mov
pop
mov
loope
shll
jnp
xchg
jp
cmp
adc
mov
es
outsb
or
sub
popf
sub
fldcw
jne
xor
out
cmpsb
push
mov
jnp
cmp
in
loopne
add
je
stos
hlt
add
adc
mov
insb
adc
adc
sub
mov
inc
imul
mov
movsl
mov
repnz
loope
mov
fists
dec
push
loope
je
cld
test
cli
cmp
fwait
and
in
movsl
push
into
xchg
movsb
and
shlb
mov
xchg
xor
pop
or
jae
rcrl
popf
push
jle
mov
fwait
jbe
das
fmuls
sbb
mov
pop
pop
mov
lds
jp
mov
mov
jno
dec
in
pop
cld
push
cwtl
in
es
dec
xchg
mov
shll
call
data16
loope
rorb
fldenv
sbb
fstpl
data16
jecxz
jno
jbe
push
mov
cmp
push
fistl
cli
mov
and
cmpsb
into
mov
xchg
aam
xor
fnsave
mov
leave
inc
movsl
mov
lahf
xor
add
xchg
imull
cmpl
iret
xchg
lock
ljmp
xor
xlat
and
lods
adcl
mov
mov
dec
add
ss
xor
mov
pop
add
fsubrs
cmp
stos
test
data16
or
rcll
pop
xchg
fldenv
ficoml
std
xchg
fstpt
popf
mov
cwtl
icebp
mov
bound
sbb
mov
ss
lods
pop
mov
cmc
mov
dec
cmp
adc
fcomi
out
push
pusha
and
sub
mov
push
rclb
sbb
shr
sub
and
xchg
out
jl
clc
int3
test
ja
pop
pop
dec
cs
mov
ret
outsb
dec
or
jp
jno
adc
sub
std
aaa
cs
in
mov
mov
int
pop
mov
out
out
stos
je
fs
cmp
mov
or
cmp
and
push
xor
dec
cmpsb
lock
xor
stc
cltd
mov
inc
add
inc
into
int
pop
scas
stos
out
pop
or
mov
fstl
bound
xchg
mov
insl
sub
into
push
imul
xchg
inc
movsb
mov
or
jnp
dec
movsl
ss
or
xor
stc
pop
pop
in
mov
adc
mov
mov
pop
cmp
ror
or
out
add
negb
int
lods
sub
movlhps
aam
xchg
cmp
ret
scas
loopne
jecxz
jns
inc
push
fwait
xchg
cmp
mov
sbb
scas
mov
jns
mov
scas
or
sub
jmp
shll
gs
in
dec
shl
push
dec
ja
xchg
jge
and
jbe,pn
pop
adcl
fsubrs
jno
cmpb
aaa
jecxz
adc
push
push
mov
push
xchg
mov
rorb
xchg
mov
ljmp
andl
jbe
fwait
lcall
rcrl
and
repz
mov
loope
mov
stos
jae
cltd
jo
andb
call
loope
adc
dec
inc
enter
int
or
cmp
push
loopne
mov
adc
push
jae
sub
stos
nop
sbb
jne
scas
adc
pop
or
push
out
sbb
fs
loop
test
out
stos
adc
push
push
push
inc
cmp
sub
xor
push
mov
xchg
out
jmp
pop
pop
repz
sub
stc
ds
push
push
xchg
xorb
mov
mov
mov
insl
outsb
les
das
cld
ljmp
cmp
into
pop
xchg
pop
mov
stos
jnp
dec
jno
mov
jno
jp
pop
pop
test
adc
inc
inc
push
pop
dec
stos
sbb
push
insl
dec
push
jae
fldenv
jnp
lcall
pushf
in
cld
sub
xchg
pop
int3
arpl
in
pop
loopne
fnstsw
icebp
lods
ficoms
xor
push
es
mov
stc
hlt
jl
and
or
jle
push
in
push
icebp
jns
add
jb
or
into
lret
cmp
pop
add
push
xchg
dec
into
jnp,pn
xchg
sahf
mov
and
imul
push
pop
sub
push
or
fwait
cmpsb
fst
mov
pop
add
leave
jmp
mov
and
test
lret
mov
push
mov
fidivs
mov
out
adc
jl
adc
sbb
and
pusha
loopne
add
and
pop
sbb
loopne
xchg
sbb
lret
inc
xchg
adc
jne
mov
jns
scas
push
cmp
insb
mov
stos
loop
or
or
addr16
push
mov
movsl
in
lcall
xchg
push
stos
sub
testb
mov
pop
bound
insl
sbb
jno
out
sarb
cmpsb
push
lret
push
pop
mov
daa
xchg
loope
out
pop
or
fsts
cs
mov
repnz
ljmp
fucomip
loope
repz
mov
ficomps
dec
imul
cmp
pusha
rclb
pop
cltd
jge
addl
test
sbb
cltd
jmp
fwait
push
mov
out
in
jle
jns
ret
test
inc
int3
les
rcl
add
rolb
nop
sar
popa
dec
lock
ret
outsb
mov
aas
mov
lcall
leave
push
cmp
in
clc
or
cmp
pop
imul
je
inc
loop
and
fstpt
sub
push
ret
sbbl
mov
xchg
shll
xorl
mov
push
jno
xchg
push
scas
dec
outsl
divb
es
imul
js
add
sbb
mov
sub
and
fwait
inc
mov
xor
cwtl
sti
pop
dec
int3
jge
and
gs
fstpl
subl
xchg
cltd
sub
lret
arpl
sbb
sahf
in
xchg
mov
jb
aam
dec
cmp
call
lret
mov
jg
adc
movsb
mov
rclb
cwtl
pop
sub
mov
lahf
stos
mov
aad
out
sti
jb
lods
sbb
or
shl
cmp
bound
imul
addl
int
sbb
mov
sub
pop
mov
sbb
popa
cmpsl
dec
mov
inc
outsl
mov
dec
testb
pop
pop
sub
cs
imul
inc
pop
outsl
xchg
pusha
into
sbb
xchg
sub
mov
js
ret
cmp
mov
cltd
ret
xchg
xchg
mov
mov
xchg
or
cmp
jne
jne
hlt
lcall
outsl
dec
xor
hlt
arpl
cs
loope
es
jg
daa
ja
mov
inc
xor
das
mov
inc
cmp
dec
aas
nop
jg
and
jmp
add
add
jnp
mov
xor
mov
adc
pop
pop
sub
mov
push
in
mov
push
xor
ds
out
xchg
pushf
iret
daa
add
inc
xchg
stos
pop
cmp
adc
pusha
push
mov
push
xor
push
xor
loope
inc
fnstenv
adc
dec
lahf
sbb
jb
bound
xor
scas
divb
and
jno
lcall
sub
xorb
sbb
mov
add
or
fisubl
lods
sarb
fadds
test
push
sub
or
mov
dec
xchg
or
lret
cmp
shl
xor
dec
shr
mov
jle
adc
jecxz
mov
mov
fcmovu
ljmp
add
xor
enter
nop
or
stos
mov
or
das
cmp
or
int
xchg
add
stos
push
mov
cmp
mov
mov
jns
subl
cvtpi2ps
cwtl
mov
cmp
adc
and
xor
lahf
pop
push
dec
int3
lret
sub
addl
xchg
jle
cmp
xorb
push
arpl
xor
jbe
jo
repz
dec
xor
pop
sub
data16
jle
dec
push
mov
das
and
mov
call
and
adc
mov
int
adc
sub
lret
add
fbld
decl
scas
std
inc
js
xchg
add
sahf
jle
popa
pop
jno
pushf
sbb
add
rcrb
push
lcall
lock
pop
cli
pop
add
out
inc
fcomip
std
push
sbb
jnp
pop
hlt
aaa
lods
outsl
pause
dec
xlat
jns
push
jne
pop
jnp
xlat
or
in
cmpsl
nop
hlt
mov
mov
clc
pop
fiaddl
push
cmp
sahf
xor
lds
jle
gs
std
dec
outsb
test
std
leave
mov
imul
outsb
int3
cmp
imul
mov
pop
lahf
xor
sti
cli
into
jp
push
inc
cmp
movsl
rolb
lahf
loop
sbb
lds
adc
test
loop
outsl
lods
fadds
inc
fsubl
adc
test
xor
push
jle
inc
cmpsb
fcmovu
fstpt
sub
lea
ret
and
lock
lret
cmp
mov
aam
jl
pushf
sahf
loope
cmc
pop
jle
or
mov
mov
jl
cmpsl
loopne
xorb
imul
jl
and
sbb
xchg
scas
inc
ja
rolb
or
sub
daa
sub
dec
cmpsl
in
mov
xor
and
jp
dec
xor
and
popf
out
int3
mov
or
jle
dec
shlb
or
mov
fwait
aad
ljmp
faddl
inc
fbstp
imul
sub
sub
and
cmp
inc
dec
mov
rcr
je
movsb
cmp
jmp
out
mov
andb
pop
inc
movsb
dec
or
mov
dec
dec
jne
pop
loop
mov
lret
je
inc
int3
or
shrb
ja
xchg
jmp
je
and
mov
arpl
xchg
xchg
loopne
aas
or
shl
push
mov
adc
movl
ret
repnz
pop
enter
pop
xor
inc
loop
adc
xchg
in
imul
dec
sub
push
sets
sub
lahf
mov
notb
pushf
or
dec
mov
pop
loop
mov
daa
sub
mov
dec
mov
adcl
add
adc
arpl
sub
test
imul
pusha
or
mov
std
xor
movsl
and
fs
insl
push
cmp
and
dec
xchg
int
xchg
popf
loope
jns
sbb
and
lahf
push
lret
mov
fisubl
jnp
jne
push
scas
xchg
fdivrs
adc
jl
sbb
repz
outsl
test
or
sub
fistl
mov
lret
iret
lods
test
jmp
jbe
into
test
sbb
add
lret
push
jge
outsb
xchg
aas
pcmpgtb
and
mov
pop
repz
mov
mov
xorb
outsb
sti
stc
addr16
lea
sub
push
lret
sbbb
lods
or
scas
adc
dec
cmp
mov
xor
dec
sbbb
xchg
xchg
test
out
xchg
jo
push
fs
adc
xor
sbb
sub
lcall
xchg
mov
adc
pop
out
lock
and
push
ds
es
pop
hlt
out
aam
cmp
rcll
jmp
in
pop
sub
jnp
and
push
int
sub
push
fwait
lcall
cmpsl
jg
js
fadds
cmp
outsl
insl
stos
and
sbb
mov
pop
jp
jns
or
es
in
lods
xor
movsl
add
inc
push
movsl
inc
xchg
out
mov
mov
mov
je
dec
pop
mov
xchg
repnz
mov
mov
int
stos
stc
push
and
xchg
rol
and
aad
lods
scas
cmp
loop
adc
mov
mull
mov
int3
pop
sti
mov
xchg
xlat
iret
test
sbb
cmpsl
pop
push
cmp
or
inc
lods
jns
push
inc
loope
fistps
aas
outsb
add
lods
pop
ss
or
mov
inc
cmpsb
into
inc
cmpsl
and
xchg
pushf
inc
adc
int
fwait
jge
pushf
lock
ja
jno
or
ja
mov
movsb
aam
leave
jo
push
fiaddl
ret
int
cmp
dec
mov
cli
mov
adc
xchg
outsl
lcall
xchg
xlat
jge
lcall
xor
and
ss
sub
xor
out
ja
pop
ret
test
xchg
fldcw
stos
mov
cmpsb
ret
roll
out
out
pop
adc
aas
frstor
or
mov
cmc
sub
in
pop
sbb
inc
inc
add
dec
dec
loop
or
in
cmpsl
ss
aam
shll
cmpsl
cmp
dec
ret
insb
dec
jo
sbb
xchg
test
mov
adcb
pushf
pop
cmp
repnz
clc
jns
fs
cmc
fcmove
add
lods
hlt
ja
into
mov
adc
mov
dec
xor
or
pop
leave
das
lods
push
mov
rcrl
lret
jae
jecxz
add
mov
into
in
sbb
fnstcw
xchg
popa
cli
jns
pop
pop
push
arpl
test
stc
adc
jge
jg
inc
mov
aas
sub
jmp
and
arpl
and
cmp
xor
xor
rcrl
pop
sub
cmp
cmp
jae
pop
sbb
or
insl
jo
xor
sbb
mov
xchg
or
fiadds
leave
rol
cmp
mov
dec
stos
adc
dec
sbb
sbb
iret
push
ds
pop
cmp
or
dec
xchg
pop
pop
xchg
imul
push
jp
inc
pop
pop
and
mov
xchg
adc
mov
jns
mov
adc
out
mov
add
pop
imul
lds
repnz
pop
inc
in
vmovhps
loopne
arpl
fisubrs
lret
xor
xchg
and
or
pop
sti
xchg
push
movb
scas
sub
xor
ss
imul
test
stc
adc
mov
mov
sbb
fidivs
adc
pop
xchg
fcoms
inc
mov
shlb
out
out
stos
mov
add
das
push
dec
lea
jle
xor
inc
jb
mov
stos
mov
adc
fisttpll
fadds
clc
pushf
dec
xor
xchg
sahf
outsl
pusha
dec
test
push
cmp
mov
inc
in
adc
xchg
outsb
dec
cwtl
cmc
ljmp
stos
push
jp
mov
dec
push
aaa
mov
jle
sub
cmp
mov
testl
call
dec
pop
jle
add
hlt
jl
lret
mov
or
dec
and
addr16
imul
mov
or
test
int3
fldcw
xor
js
mov
in
and
dec
push
sub
xchg
mov
inc
dec
mov
shll
cmp
and
dec
dec
sbb
cld
adc
loopne
add
je
shlb
test
iret
test
fistps
call
jp
cmpsb
sub
and
into
and
nop
sub
push
sub
xchg
push
add
enter
sahf
dec
mov
lock
push
fistl
shlb
fildll
jb
cmpsl
adc
jns
sbb
push
lret
sbb
fbstp
iret
popf
je
cmp
movsb
pop
dec
adc
xchg
icebp
inc
les
lahf
adc
ja
xchg
cmp
jo
mov
push
rcrl
jle
mov
pop
pushf
rorl
push
pushf
and
mov
stos
sti
mov
lods
dec
mov
sub
jecxz
aaa
add
add
int
cmp
xchg
add
xor
xchg
sub
push
lds
ljmp
cmpsl
insb
sub
adc
call
pop
xor
adc
xor
or
mov
adc
scas
xor
cs
lret
push
push
xchg
jecxz
add
in
bound
mov
imul
rolb
icebp
pop
push
xchg
mov
idivb
xchg
imull
into
inc
pop
dec
sbb
pop
sbb
jl
mov
int
push
mov
iret
icebp
cld
cmp
lods
mov
add
push
loopne
decb
mov
inc
or
mov
cmpsl
pop
fs
dec
mov
cmp
jnp
sbb
push
and
cmpsl
jp
xchg
sub
iret
fnstcw
mul
xor
jp
cmp
jecxz
leave
inc
mov
and
cltd
out
lret
dec
shll
ret
push
jnp
hlt
scas
inc
cli
leave
jne
mov
jb
popa
xchg
mov
push
loop
in
push
in
aad
repnz
das
lods
cmp
or
repz
fdivrs
jp
add
daa
lea
mov
insl
or
ja
and
aad
cmp
mov
cmp
enter
mov
lods
movsl
aad
adc
dec
jg
pushf
movsb
cmp
cmp
mov
stc
dec
pop
stos
mov
mov
mul
push
or
dec
pop
mov
inc
xchg
fsubrs
out
xchg
insb
loop
or
in
adc
fbstp
mov
repnz
nop
push
and
enter
out
int
aad
cli
cmp
adc
into
xchg
push
lret
push
sti
scas
sbb
adcb
ficompl
inc
je
or
es
mov
icebp
pop
add
popf
out
jle
out
push
mov
arpl
pop
xchg
call
lret
sbb
push
fimuls
fstp
mov
rclb
or
test
shrb
mov
adc
call
xor
adc
jae
pop
hlt
fimull
addr16
add
pop
mull
push
or
cwtl
fstpt
jg
pslld
das
mov
jbe
das
hlt
add
xor
std
pop
imul
stos
push
dec
int
xchg
mov
lock
aam
js
fstps
jnp
lahf
sbb
jnp
mov
mov
jmp
repnz
xlat
in
test
or
stos
jmp
test
lea
sub
add
std
jno
outsb
stos
ret
sbb
cmp
dec
pop
xchg
sub
and
and
stc
mov
push
rcr
test
out
adc
mov
call
mov
push
lock
scas
jmp
dec
and
mov
or
mov
popa
in
adc
out
mov
leave
das
ss
mov
and
lods
cs
sbb
xor
les
nop
jns
lcall
push
cli
aas
sub
xor
out
js
call
or
mov
xchg
into
in
push
add
sbb
push
cmc
mov
and
xor
mov
fcmove
sti
data16
add
and
pop
xchg
xchg
mov
es
jp
pop
push
shlb
lret
push
adc
cmpb
pushf
sub
jmp
xchg
orb
jecxz
jb
push
xchg
fxch
in
push
inc
mov
icebp
in
or
push
or
and
in
lods
xchg
dec
inc
pop
add
ds
jecxz
out
jmp
std
adc
loope
es
nop
out
push
clc
imull
dec
xchg
popa
fdivrs
mov
repnz
push
lods
lock
xchg
inc
dec
pop
jb
lds
xorl
lcall
lea
dec
in
roll
test
or
or
ret
lods
adc
js
push
gs
pop
fiaddl
pop
out
and
iret
or
or
push
jns
pop
push
add
lahf
je
push
testb
jge
jg
dec
out
call
and
mov
aaa
sub
pop
sbb
or
mov
push
pop
clc
test
cmp
leave
cmp
xor
cmpsb
les
dec
inc
idiv
stc
inc
shlb
or
jnp
out
mov
lret
aad
sbb
popf
xor
enter
into
xor
mov
lret
mov
pop
cmp
adc
pop
and
cltd
mov
push
sbb
out
fisttpll
movsb
adc
mov
and
icebp
mov
or
jge
fidivs
sbb
adc
mov
test
xchg
scas
fldenv
into
out
outsb
rcl
inc
insb
std
xor
adc
loop
inc
dec
pop
sub
cwtl
stos
popl
cmp
daa
test
data16
ss
pop
and
pop
clc
cltd
mov
es
into
jne
ljmp
lcall
sub
xchg
push
shrb
stc
or
js
jle
jno
cmp
push
xor
and
mov
sub
das
dec
cmp
adc
cli
xrelease
dec
outsl
mov
pop
int3
mov
lahf
xor
in
mov
sbb
dec
jns
adc
lret
ss
mov
adcl
push
dec
insl
push
es
sbb
test
jg
jp
mov
movsb
cmp
lods
test
scas
aad
mov
sub
xor
jnp
inc
mov
ja
fs
or
mov
or
int3
mov
je
ret
dec
add
pop
adc
repz
shrl
icebp
xor
mov
in
pushl
pop
mov
bound
cmp
mov
rcrb
push
add
and
push
fimull
das
mov
ret
fsubr
cwtl
test
jl
mul
xor
or
inc
xchg
gs
add
popa
xchg
sti
in
cltd
ret
mov
cmpsb
jb
mov
jle
cwtl
ljmp
jo
sub
xchg
jle
add
adc
shll
sarl
jg
bound
addb
mov
mov
xor
test
mov
arpl
push
pop
std
mov
popa
cmpsb
repnz
test
adc
jae
lahf
iret
ljmp
mov
and
fnstcw
ret
inc
loop
inc
push
pushf
js
xchg
push
ret
xchg
xchg
into
and
inc
dec
ss
sbb
mov
pop
outsb
stc
test
add
mov
or
xor
in
imull
test
std
adc
sub
pop
rcl
xchg
cmp
int
scas
pop
add
sub
divb
in
xor
pop
add
lods
rcll
cmp
clc
push
lahf
sub
out
dec
cmp
lret
and
jo
sbb
in
cli
sub
paddsw
dec
repz
pop
cmpsl
and
adc
mov
clc
push
aaa
outsb
mov
push
xchg
sgdtl
mov
in
adc
arpl
cmc
adc
push
mov
adc
push
pop
iret
mov
sub
sub
mov
mov
js
dec
jno
clc
mov
lock
xor
lods
mov
or
sbb
or
test
insb
insb
pop
je
jb
lahf
jb
mov
dec
stc
push
push
jg
and
cmp
or
push
dec
add
std
add
mov
je
add
stos
out
fs
hlt
sbb
inc
out
out
lods
mov
sbb
lock
inc
inc
xchg
imulb
mov
jns
ud2
or
push
call
push
sub
mov
hlt
or
mov
fsubl
jecxz
imul
cltd
mov
push
lock
jecxz
mov
mov
in
ficoml
add
clc
push
push
testl
jecxz
call
inc
mov
xor
lods
jae
mov
out
or
and
lret
loope
pop
popa
adc
add
daa
and
cwtl
inc
mov
dec
mov
in
xor
inc
js
in
jle
sub
test
sbb
and
and
std
negl
daa
inc
addps
or
into
dec
inc
test
push
aas
mov
push
lods
pop
and
scas
jns
lds
sub
or
daa
mov
dec
push
gs
pop
jmp
pop
cmp
fisttpll
popf
shll
mov
sbb
or
lahf
mov
inc
sub
jge
xor
shlb
push
xchg
popf
pop
inc
cmp
mov
push
or
jne
cmpsb
mov
jl
inc
mov
movsb
cwtl
xor
xchg
mov
sarl
cmp
icebp
mov
pop
ja
mov
imul
cmp
sbb
pop
pop
mov
lock
stos
scas
add
bound
pop
push
int
ret
push
mov
in
subl
sti
dec
push
andb
mov
fimuls
dec
push
mov
lock
test
outsb
ret
pushf
push
push
add
ja
out
and
call
jne
mov
add
adc
test
cmp
jle
or
lods
call
mov
pop
sahf
jmp
outsb
fimuls
loope
fwait
enter
xchg
inc
push
shlb
js
push
pop
gs
imul
mov
lods
pusha
xchg
xchg
loope
push
and
cli
xchg
mov
fsubrs
push
stos
int
or
dec
mov
cmp
fwait
leave
inc
movsb
pop
or
mov
xchg
dec
or
mov
cmpsb
ret
add
dec
in
icebp
xor
jnp
jmp
adc
mov
xchg
inc
mov
xchg
in
in
mov
push
or
mov
cmc
out
cmp
lods
je
std
cld
push
xlat
add
fisubs
gs
jnp
lock
mov
and
or
mov
in
aad
in
dec
inc
jmp
add
mov
cmp
scas
mov
pop
pushf
out
cmp
push
inc
mov
add
jge
movsl
jmp
inc
movsb
jae
mov
mov
out
dec
and
pop
pop
pop
lret
cmpsl
mov
mov
movsb
adc
and
jb
aad
pop
sbb
nop
test
lods
inc
or
test
and
push
xlat
push
std
sub
jge
pop
add
test
pop
lcall
shlb
xchg
push
mov
sbb
mov
and
push
sub
loopne
fwait
xor
repnz
verw
fnsave
out
xchg
sub
mov
outsl
cmp
mov
shl
dec
fldt
jmp
gs
mov
push
jbe
call
mov
adc
cmp
cmp
lods
orb
pop
loop
mov
je
fistl
sbb
cmc
pop
jbe
loop
mov
pop
aas
repnz
or
sbb
or
add
loope
adc
jg
ja
scas
xchg
add
stos
popf
rcrl
dec
mov
mov
arpl
jecxz
or
jmp
or
jo
nop
loopne
inc
xor
ljmp
mov
sub
js
xchg
mov
add
sbb
int
mov
flds
out
pop
fcoms
call
add
loope
dec
popl
jmp
add
in
pop
add
lret
cli
popa
add
mov
sub
dec
in
lea
sub
cmp
lea
push
ret
adc
jb
test
push
loopne
pop
cmp
xor
xchg
inc
loope
in
add
dec
fs
cmp
push
pop
clc
jb
sub
xor
fidivs
call
cli
inc
sub
push
sti
lds
int3
adc
cs
mov
outsl
in
pop
aas
movsb
jp
mov
jo
mov
sarl
inc
gs
jge
out
pop
or
mov
scas
pop
aas
dec
pop
std
jae
outsl
mov
add
data16
out
cvtpi2ps
jl
inc
pop
fdivs
pop
scas
sbb
cmp
dec
push
dec
imul
cmp
es
or
xor
inc
inc
and
mov
xor
xchg
xor
ljmp
cs
xchg
jno
cmp
je
lds
push
movsb
movsl
andl
jge
mov
sbb
add
psubd
push
in
cmc
aaa
mov
push
dec
test
fisubrl
lret
flds
ja
inc
mov
sarb
cmp
push
sbb
popa
mov
adc
lods
or
iret
clc
js
stc
dec
inc
cmp
push
call
xlat
in
and
insb
pop
ja
mov
es
mov
pop
stc
imul
icebp
push
aad
out
push
push
lea
jmp
and
pop
loopne
xchg
inc
nop
xor
sub
in
lret
leave
ret
movsl
jnp
fimuls
in
lods
inc
mov
das
loop
or
inc
inc
data16
hlt
mov
je
mov
aaa
dec
and
outsl
mov
ficoms
mov
xchg
stc
lods
gs
adc
push
in
xor
sbb
addr16
cmp
sti
mov
jae
mov
cmp
stos
lcall
aam
jo
push
aas
lret
shrl
fcmove
dec
xchg
imul
shlb
inc
fstl
test
fidivl
push
gs
lahf
and
sbb
cmp
inc
mov
arpl
jns
xchg
stc
jl
or
jl
scas
push
sub
xor
ret
cmp
shll
imul
mov
dec
inc
stos
and
mov
aam
pop
pop
loop
aas
xchg
add
in
das
lret
loop
dec
gs
idiv
sbb
dec
mov
sbb
sahf
or
adc
mov
pop
out
xchg
clc
movsl
pushl
iret
insl
mov
lcall
or
adc
in
lret
sahf
push
out
js
add
cmp
xlat
mov
mov
leave
lock
cli
in
jle
in
shrl
pop
adc
sbb
out
sti
lods
ss
add
jns
iret
or
fs
fsubrl
inc
inc
lahf
jg
mov
fcmovnbe
js
fwait
add
cli
sbb
push
dec
cs
sbb
dec
sbb
jno
xor
mov
and
ja
fdiv
in
pop
sub
scas
mov
enter
push
lahf
adc
je
inc
loop
aam
in
mov
frstor
push
cmc
repz
std
lock
bound
xor
jbe
aas
pushf
sti
lcall
mov
popl
ror
movl
add
push
enter
je
pop
loope
std
test
jge
mov
aad
pop
add
nop
outsb
dec
jno
fldt
or
das
loopne
jl
sub
int3
loope
insl
in
movsl
repnz
mov
lret
jmp
mov
fdivl
push
cmp
add
or
mov
pop
outsb
pop
out
sub
pop
fists
fsubl
add
add
push
enter
clc
sbb
cmp
mov
jae
lret
scas
subl
mov
repz
push
test
lods
dec
mov
ret
dec
cmp
add
push
push
jnp
scas
push
xchg
pop
lahf
insb
roll
inc
xchg
dec
xchg
outsl
cmc
pop
push
push
in
in
movsl
mov
adc
dec
xlat
xchg
mov
cmp
push
cmp
in
adc
sbb
mov
cltd
pop
or
loopne
movsb
mov
scas
je
jbe
cmpsb
inc
icebp
pmulhw
fstpt
fcmovnu
cmpl
adcb
mov
jo
jns
or
mov
les
stc
sbb
imul
incl
jno
inc
push
push
push
push
sbb
adc
sbb
inc
push
push
or
loop
jne
cmp
insb
jle
or
xor
sbb
fadds
in
jg
pop
popf
and
lret
dec
pop
push
mov
xchg
or
mov
fistl
aam
fwait
ds
pop
adc
lds
dec
bound
adc
bound
popa
gs
jle
mov
cld
cmp
ja
call
push
mov
and
cmpsb
icebp
pusha
xchg
pop
cmp
les
dec
icebp
lods
push
iret
xor
jo
push
push
jne
js
bound
loope
repz
add
into
sbb
xchg
mov
adc
push
mov
and
xchg
scas
fyl2xp1
mov
dec
xchg
and
hlt
xor
out
jl
mov
mov
pop
cmpsl
bound
fcmovb
nop
icebp
mov
dec
mov
stos
pop
and
dec
push
fwait
push
adc
flds
test
sbb
call
das
popf
jnp
repz
testl
pop
cmp
mov
jno
mov
mov
mov
rcr
cwtl
or
xor
lock
orl
std
fists
and
mov
movsb
popa
and
das
sahf
outsl
loopne
xchg
test
nop
add
mov
movsl
push
sbb
cld
jl
mov
dec
mov
push
cmp
jno
xlat
les
bound
xchg
inc
punpckhdq
sarl
daa
scas
sti
arpl
and
scas
pop
jle
inc
mov
mov
loopne
aam
and
lods
adc
pushf
mov
pop
mov
shufps
inc
lods
push
popa
clc
xor
push
cmp
adc
mov
dec
pusha
stos
mov
fldl
pop
mov
mov
push
add
es
cmp
mov
fs
xchg
in
inc
stos
aaa
adc
and
adcb
mov
xchg
sub
mov
jl
xchg
jmp
mov
cmp
ret
sub
xchg
pop
in
adc
sub
add
insb
insl
imul
cmpsb
das
arpl
shrl
rorl
les
outsb
rolb
cmc
outsb
mov
sbbl
imul
outsl
pushf
ret
aam
stos
mov
lcall
aas
cmpb
xlat
mov
add
mov
xor
test
jge
adc
fidivrl
adc
sarb
icebp
adc
aad
les
cmp
cmp
mov
in
dec
adc
int
jns
cs
movsl
push
hlt
cmp
lahf
pop
pop
inc
sbb
ljmp
popa
push
add
push
cmp
cld
jns
mov
sub
adc
xchg
stc
sub
add
pop
icebp
inc
rclb
cmc
xchg
push
gs
or
gs
pop
es
sub
lods
fs
cld
adc
shl
ds
loope
in
sbb
or
jne
insb
in
and
es
pushf
push
data16
jg
sbb
addr16
push
cwtl
pop
pusha
fisubrs
push
popa
and
push
in
mov
popa
push
jp
and
dec
pop
xor
dec
xchg
or
add
mov
fnstcw
lods
jmp
shll
std
dec
mov
fimull
leave
rolb
adc
xchg
xchg
inc
popa
xor
pop
mov
xor
add
imul
pop
notl
xor
aas
inc
nop
aaa
pop
push
push
xchg
sti
xchg
mov
rclb
adc
xchg
jb
inc
popf
add
aaa
jne
dec
mov
in
stc
add
loop
xor
scas
adc
dec
mov
or
fwait
sti
sub
inc
xchg
jmp
jge
cmpsb
pop
mov
fs
mov
xorl
lcall
lods
jmp
in
add
mov
mov
test
sbb
mov
insl
je
lahf
aas
divb
loop
push
add
jl
jg
fsubr
in
fdivs
xor
cld
xorl
adc
xor
int
mov
xchg
pushf
mov
xchg
jae
xchg
aas
cmp
push
jb
sub
mov
jge
xor
pop
mov
adc
nop
dec
xor
fptan
jns
mov
into
inc
es
push
clc
push
jae
jl
stos
push
mov
ret
jo
mov
cs
clc
jmp
mov
hlt
aaa
and
or
adc
pop
divb
jnp
add
into
or
jae
add
ret
push
cmp
pop
in
push
mov
enter
push
adc
test
push
fstps
std
mov
push
test
sbb
or
daa
push
mov
mov
pop
cmp
jmp
sbb
rcr
adc
adcb
call
out
mov
sahf
pop
orl
and
adcl
rol
lea
mov
adc
mov
stos
idivl
xor
mov
inc
cs
and
ja
push
or
clc
mov
cmpsl
jmp
aaa
adc
or
ss
mov
mov
push
pop
mov
jecxz
jecxz
pushf
test
cmp
xchg
fcom
outsb
js
dec
sbbb
or
push
mov
repz
mov
cld
sub
lahf
dec
adcb
mov
out
xchg
mov
jo
adc
mul
adc
loope
clc
das
and
pushf
aaa
jmp
addl
dec
push
mov
lret
cwtl
mov
mov
mov
dec
inc
pushl
adc
inc
outsb
add
mov
mov
stc
cmc
clc
xchg
int
or
cmp
mov
dec
lods
and
inc
lea
push
xchg
mov
or
jb
xchg
mov
add
mov
icebp
stc
cld
ljmp
dec
outsb
mov
scas
dec
sbb
add
mov
sub
jge
xchg
sbbb
gs
mov
mov
popa
gs
lret
sbb
xor
jmp
ljmp
gs
xchg
jo
pop
or
incl
movsb
gs
loopne
add
into
scas
sub
xchg
cmc
or
fistpl
adc
add
xchg
js
mov
andb
push
mov
mov
or
jmp
es
jne
and
xchg
and
xor
mov
je
add
fsubrp
xchg
out
outsl
mov
dec
mov
iret
test
adc
or
aaa
lds
mov
std
push
mov
mov
or
push
or
jne
pop
test
in
push
int
add
popf
jne
repz
mov
inc
lahf
xchg
rcrb
pop
movsl
jb
in
inc
mov
mov
dec
jle
push
xchg
cmp
sub
loop
xchg
jle
xchg
dec
out
mov
stc
iret
cli
sar
imul
fcomp
mov
pop
icebp
scas
arpl
and
js
arpl
mov
jne
xor
insb
shll
jmp
xchg
lds
pop
jns
arpl
dec
mov
add
dec
lret
cmp
aas
insb
dec
pop
mov
mov
ret
mov
add
in
xchg
insb
sbb
push
aad
or
or
int
xor
shll
pop
test
scas
out
mov
iret
push
mov
or
xchg
bnd
or
adc
js
cmp
mov
or
das
pop
aam
xchg
and
cli
xchg
add
mov
xor
mov
rcr
dec
xchg
aas
jno
les
jmp
add
xor
mov
lock
jle
mov
push
mov
call
fistpl
xchg
mov
lock
lods
notl
aaa
lods
fstp
divb
add
stos
ja
jns
repnz
mov
jno
pop
cmp
cltd
mov
mov
hlt
mov
imull
aam
push
inc
xlat
xchg
xlat
xlat
cs
dec
inc
push
push
scas
cmpsl
mov
jmp
and
out
mov
aam
shrl
adc
adc
mov
push
jecxz
or
and
xor
sahf
out
mov
sahf
fs
insl
push
xor
lret
leave
test
adc
push
sub
push
push
or
mov
pushl
pop
push
cmp
cmp
jle
jmp
dec
mov
push
add
or
cwtl
and
inc
pop
aam
outsb
es
shl
scas
sbb
jnp
add
lods
adc
bound
fld
bound
jmp
in
data16
popa
adc
ret
mov
pop
bound
or
xchg
pop
jmp
inc
fisubrs
push
cltd
jge
loopne
ds
ds
aam
fisubrs
test
cltd
cmpsb
sub
sarb
jo
lods
jo
xchg
push
jle
in
cmpsb
ret
ljmp
add
and
negb
mov
mov
mov
lock
imul
mov
jne
rcr
cmp
dec
cwtl
sub
into
mov
ds
lcall
mov
aad
mov
or
stos
inc
cmpsl
push
arpl
sbb
xchg
mov
or
sub
call
cmc
and
mov
adc
mov
xor
sub
lea
adc
mov
imul
cmp
lret
imul
or
arpl
jae
sbb
inc
aam
outsl
xor
adc
xor
popa
fbstp
imul
dec
mov
jp
jbe
cmp
push
inc
push
or
insb
fcom
cld
fld
fwait
push
adc
inc
mov
sbb
jb
mov
mov
add
jl
xorl
jnp
push
dec
pop
outsl
inc
pop
xor
outsl
arpl
lds
jae
xchg
sbb
jae
sarb
adc
lret
push
pop
daa
mov
xchg
call
aaa
jb
test
lods
push
fiadds
adc
xchg
sub
add
or
pop
loopne
stc
ret
add
hlt
mov
iret
mov
sbbb
jp
cmp
movsl
lods
and
rorl
xchg
imul
outsl
cmp
js
sbb
mov
cmpsl
mov
xor
in
test
cwtl
xor
push
dec
cmp
aas
pop
mov
pop
inc
jg
clc
hlt
sub
int
or
daa
out
xchg
and
outsb
xchg
mov
iret
outsl
fildl
xlat
add
in
icebp
imul
or
clc
lret
pop
push
fsubr
pusha
lret
mov
in
enter
dec
cmp
push
out
jecxz
lcall
into
test
mov
inc
rolb
test
dec
cmp
mov
insl
sub
and
mov
push
mov
aaa
or
sbb
ljmp
pop
in
repz
fcomps
int
xchg
sub
test
andl
int3
nop
mov
jg
push
test
add
or
fisubs
stos
cltd
or
cmp
xor
lods
pop
cmp
sbb
movsl
outsb
jecxz
in
sar
xchg
in
mov
in
subl
mov
insl
pop
cmp
cmp
shrl
fcompl
imul
mov
ret
xor
sbb
dec
nop
mov
bnd
cmc
dec
out
inc
shlb
fwait
mov
shl
and
or
insb
rolb
aaa
ret
sbb
xor
rol
jno
add
popf
int
in
in
lea
pop
push
sbbl
inc
xchg
push
iret
jns
fwait
sahf
mov
cmp
inc
out
cwtl
aad
or
inc
mov
cmpsl
repnz
mov
icebp
ja
sub
loope
sub
sub
mov
lock
or
xchg
mov
lret
ret
imul
adc
ret
pusha
mov
and
pusha
jl
sbb
pushf
out
cmp
mov
or
lret
add
xchg
sub
dec
fsts
in
std
jns
or
mov
sbb
sub
push
cmp
js
mov
cmp
aad
mov
mov
mov
aam
adc
sbb
lock
int
adcl
sbb
dec
xchg
lcall
mov
ret
std
out
setl
cmpsl
aas
mov
lret
es
cmp
inc
dec
lds
clc
cwtl
movsl
imul
pop
cwtl
lock
adc
hlt
jo
mov
cmp
xor
cmpsb
flds
aaa
cmpl
adc
dec
cmp
cmp
or
insb
iret
in
push
out
and
mov
add
out
mov
std
xor
mov
and
aad
mov
jg
push
fwait
dec
cmpsb
das
orl
cltd
ret
mov
pop
mov
sub
or
enter
xor
dec
ss
inc
push
stos
sarl
lods
repz
mov
repz
leave
scas
leave
sub
loopne
je
mov
or
xor
sbb
and
pop
aaa
mov
cmp
cld
imul
lds
sub
mov
xor
mov
out
fsubr
pop
clts
outsb
xchg
pop
stc
jbe
mov
jg
mov
cmpsb
lds
lds
xchg
bound
test
cmp
mov
imul
arpl
leave
pop
and
sarb
aas
mov
fdivrl
std
cmp
insl
xor
adc
mov
fildll
fstpt
pop
push
into
das
subl
loope
push
adc
mov
pop
movsb
pop
loop
jmp
idivb
or
mov
repnz
fcompl
scas
sub
fdivrl
in
repnz
pop
ret
and
jl
pop
mov
pop
cmp
sbb
xor
jbe
inc
inc
adc
dec
push
mov
jb
add
xchg
adc
lods
jg
cmp
mov
aaa
sbb
es
inc
mov
lods
sti
jnp
add
jae
sbb
sbb
pop
adc
adc
xchg
rclb
xor
jno
and
rclb
cmpsb
ficomps
sbb
or
jp
mov
and
daa
xchg
push
popa
adc
pop
je
jnp
movsl
sub
adc
push
cmpsl
adc
or
mov
mov
sub
jle
pop
in
lock
xchg
adc
jge
mov
outsb
xchg
inc
mov
sub
and
pushf
je
or
dec
test
loopne
hlt
cs
pushf
xor
fists
jecxz
outsb
dec
mov
ljmp
cmp
lds
xchg
xlat
cmpsb
or
iret
mov
adc
hlt
test
outsb
and
mov
push
das
inc
push
push
sbb
xor
cmpsb
subl
or
cmpsb
pop
aam
xchg
repnz
popf
std
fists
stos
cmp
inc
cli
lock
test
add
fisttpll
xor
sub
mov
out
xchg
pop
adc
add
pop
incb
add
push
inc
into
out
xor
imul
jecxz
test
leave
addb
sbb
pop
mov
xchg
mov
jmp
pop
mov
sbb
es
mov
jmp
movsb
jge
inc
mov
sahf
pop
bsf
rclb
cmpsl
dec
pop
scas
adc
lcall
mov
mov
adc
inc
iret
das
sub
mov
jnp
lret
fidivrl
rorb
psubb
fldt
movsb
inc
ja
xchg
jo
outsl
mov
and
inc
lret
push
and
mov
sti
jb
xlat
add
rolb
mov
push
lret
iret
cmp
in
jg
mov
cmp
in
pop
push
sahf
sarl
lahf
movsb
out
xchg
or
push
sub
rol
cld
mov
dec
scas
ljmp
sti
mov
int3
hlt
inc
adc
insb
adc
adc
xor
cld
and
mov
pop
inc
stc
push
inc
mov
xor
jnp
xor
sbbb
add
mov
and
xor
clc
loope
or
js
push
jns
bound
fldcw
sbb
mov
mov
cmp
and
shlb
dec
test
xchg
mov
or
ds
stos
mov
add
sub
shl
out
xor
push
test
add
mov
inc
test
movsl
jnp
dec
inc
pop
cmpsl
dec
mov
xor
xbegin
mov
ljmp
popa
adc
mov
or
pusha
jae
jo
ss
sbb
jl
call
shll
add
mov
fsubs
mov
repnz
mov
les
fwait
mov
mov
inc
adc
gs
adc
mov
lret
fdivs
cmpsb
cli
lods
repz
insb
cli
movsb
aas
cld
lret
pushf
mov
mov
pop
rcrb
repz
jp
xchg
cmp
dec
scas
xchg
repnz
mov
enter
shrl
outsb
movsb
lahf
xchg
stos
lret
loope,pt
sub
inc
mov
rorl
outsl
ret
pop
mov
jecxz
push
jbe
fbld
addr16
shl
incl
jp
fwait
pop
cmp
ja
cltd
xor
dec
imul
in
aam
js
test
arpl
mov
ss
add
imul
push
xchg
mov
arpl
cmp
cmp
aas
xor
js
push
dec
mov
loop
cmp
pop
test
and
jl
aas
andl
lcall
fwait
jp
mov
mov
mov
xor
pop
daa
daa
add
cmp
outsb
pushf
in
xchg
add
std
add
mov
shrl
lret
iret
in
sub
cli
mov
pop
add
imul
cltd
lods
dec
ljmp
mov
cmp
add
lock
push
mov
lret
dec
add
in
das
in
adc
out
xor
pop
dec
push
inc
scas
out
jno
xchg
mov
test
leave
clc
pop
negb
mov
movb
mov
fdivrl
jg
mov
and
das
test
dec
inc
movb
sti
lods
xlat
add
dec
cld
dec
adc
cmc
jmp
les
and
adc
dec
or
rcpps
lods
lahf
jl
jge
xchg
mov
orb
enter
sub
push
loope
and
addr16
xchg
mov
pushf
arpl
movsl
stc
or
stos
gs
or
int3
sbb
mov
ja
xchg
ss
scas
push
lods
mov
stos
jns
ret
xchg
es
rclb
arpl
lock
cltd
sub
jo
rorb
inc
push
cmp
xlat
rcll
rolb
jp
clc
in
push
inc
jp
pop
stc
aas
shll
fwait
cmpsl
adc
cmp
cmc
jp
sub
iret
xchg
test
mov
lcall
cltd
mov
ljmp
mov
adc
das
xorl
cmpsb
xor
mov
scas
push
pop
push
imul
mov
inc
imul
lea
jne
sahf
jne
xchg
pop
mov
in
dec
aam
jmp
sti
mov
fiaddl
lods
lret
les
xchg
push
sbb
xor
xchg
pusha
pop
es
sbb
std
sbb
and
dec
mov
sbb
pop
daa
cmpsb
fdiv
ret
test
cmp
jne
repz
xchg
int
lcall
cmp
stos
fistl
stos
xor
xlat
or
mov
push
or
in
pushf
dec
dec
inc
inc
jp
xchg
lret
imul
jbe
cltd
sar
ret
popa
int3
fbld
jae
or
fistps
ss
jp
popa
push
out
mov
inc
imul
fistl
shlb
add
add
jp
fisubrs
xchg
fisttpll
and
ss
test
in
hlt
mov
mov
adc
inc
mov
and
cwtl
push
mov
fs
mov
bswap
repnz
push
add
xchg
and
stos
dec
or
xor
out
xor
jmp
jbe
pop
dec
arpl
mov
and
imul
mov
leave
insl
stos
or
or
push
xorb
mov
dec
jns
pop
xchg
push
sti
or
adc
into
or
insb
xchg
pop
inc
dec
fidivl
out
cmp
fcoml
or
push
cmp
popa
test
xchg
push
movsl
pop
repz
xor
aam
mov
js
jl
jmp
jo
xchg
mov
mov
sbbb
xchg
clc
mov
mov
push
jecxz
sbb
xlat
sub
dec
cmc
out
jno
sub
add
xchg
imul
lahf
adc
in
mov
add
rcl
inc
insb
cmpb
sub
stos
jge
pop
add
mov
repnz
dec
mov
loope
and
xchg
ret
lock
popa
subb
xchg
nop
repz
inc
adc
int
adc
popf
leave
lds
call
sbb
fs
shrl
and
popa
gs
fdivp
cmpsl
movsb
hlt
movsb
jae
inc
aas
mov
adc
stos
pop
xchg
add
adc
mov
imul
int
cmp
lods
jmp
jmp
fsts
sbb
inc
aaa
mov
andb
loopne
cli
add
cmp
jnp
mov
ret
pop
cmp
out
test
mov
jb
and
xchg
fstpt
popf
scas
xchg
sahf
fadd
jmp
pop
mov
jno
out
loop
xchg
sbbb
pop
xchg
rclb
dec
xchg
sti
jle
lods
xchg
and
daa
push
stc
push
mov
rorl
mov
in
jae
xor
cli
daa
aam
inc
sub
repz
lcall
xchg
imul
loopne
or
popa
gs
in
decl
jp
pop
imul
mov
clc
xor
repz
push
mov
inc
loopne
and
or
sbb
jecxz
and
add
pop
stos
int
ret
jbe
adc
in
mov
xchg
pushf
inc
lcall
push
mov
out
and
inc
push
xchg
rep
jae
call
or
bound
xlat
aam
sub
inc
jbe
decl
setl
cltd
xchg
js
movsl
add
jae
mov
imul
jne
sub
shrl
jle
adc
push
pop
and
add
sar
fwait
dec
and
cs
pusha
loop
push
mov
jecxz
pop
adc
mov
je
inc
mov
lret
adc
in
sub
dec
jp
mov
add
hlt
mov
fwait
dec
cmpb
or
lds
sbb
cmp
stc
lods
ds
jle
into
or
call
out
inc
mov
shlb
aad
lds
rorl
add
push
mov
dec
out
fldl
mov
push
push
push
jns
ficoml
and
push
scas
xchg
adc
lret
xlat
mov
pop
adc
xchg
mov
iret
jno
popf
je
aam
xor
push
dec
rcrl
cs
decl
xlat
js
fst
ss
sub
sarb
pop
mov
xor
in
mov
les
js
add
mov
inc
push
xchg
xchg
push
dec
cmp
mov
inc
in
movsb
or
sub
inc
mov
sahf
cltd
je
push
mov
pop
sbb
pop
mov
adc
lods
fcom
fwait
mov
aaa
jb
test
jmp
mov
inc
lea
enter
iret
mov
sahf
hlt
and
cli
loope
das
mov
cmp
mov
jo
dec
push
scas
jmp
pop
push
ficompl
mov
ljmp
sub
inc
mov
mov
sbb
jns
mov
cmpsl
push
lock
dec
shlb
xchg
xchg
mov
xor
loope
out
test
idivb
daa
scas
sub
ljmp
pop
mov
dec
loope
add
sarb
cmp
mov
mov
sbb
mov
enterw
cmpsl
xchg
fcoms
int3
fnsave
pushf
adc
rolb
fstpl
imul
sbb
aam
cmpsb
in
adc
xchg
sarl
notl
pop
imul
and
lret
or
pop
sub
xchg
mov
mov
sbb
repz
iret
lds
jnp
out
jge
imul
pushf
push
movsl
lahf
sbb
cmpsb
stos
pop
sbb
sub
pop
mov
push
in
sbb
pop
adc
rcll
out
cmpsl
fbstp
pop
dec
daa
cwtl
sbb
movsl
push
cmp
xchg
inc
pop
jecxz
mov
xchg
lahf
sbb
out
cld
sti
xor
popf
pushf
mov
pop
pop
mov
inc
adc
xor
mov
lods
bound
xchg
and
movsl
sbb
into
xor
jns,pn
repnz
std
jl
movsb
push
or
pusha
push
lcall
inc
xchg
push
add
cmp
outsb
cwtl
sbb
adc
dec
jl
xchg
sbb
and
mov
mov
cmp
test
sbb
test
xchg
sub
insb
jge
gs
fdivl
push
icebp
mov
jae
popa
sbb
mov
std
sbb
xchg
or
mov
mov
fwait
pop
iret
xchg
lahf
jge
daa
stos
out
fcmovne
cwtl
jp
push
xor
js
fcmovnb
xor
xchg
stc
insl
jb
repz
insb
cmp
negl
push
movsl
cmp
test
dec
loope
cwtl
aam
xchg
jmp
insb
les
mov
inc
cs
loopne
inc
jmp
inc
scas
ja
xchg
adc
cmp
les
push
xchg
loop
mov
fdivs
adcl
inc
fs
lds
adc
lahf
jmp
mov
in
dec
push
cmpb
or
aaa
iret
ss
mov
push
test
or
sbb
mov
aas
pusha
adc
lock
cs
mov
aam
mov
fldenvs
adc
ss
daa
mov
mov
xchg
ret
ror
mov
xchg
mov
stos
js
cs
mov
add
repnz
sub
ljmp
mov
xchg
sbb
dec
pop
fdivrs
sarl
aam
add
mov
lcall
cmp
xor
leave
nop
or
or
sbb
cmc
adc
popl
cmp
fnstcw
bound
inc
add
xchg
leave
leave
jp
xor
jp
enter
inc
popf
adc
je
sub
cmp
xor
out
or
jl
mov
lea
jp
jae
fisttpl
push
adc
inc
inc
ret
mov
out
adc
test
pop
jecxz
mov
pop
lret
je
fstpt
repz
and
stc
add
jp
jle
mov
mov
sub
stos
ret
cmp
aas
aam
incb
xchg
xchg
cltd
inc
movsl
cmp
lcall
sbb
stc
or
mov
jl
xchg
leave
mov
pop
clc
ret
outsl
mul
in
loope
out
or
sbb
mov
adc
xor
lods
add
push
in
xorl
sbb
push
mov
pop
ja
ds
push
mov
cmp
inc
stos
fiaddl
loop
dec
add
js
inc
insb
dec
sub
jbe
mov
or
add
dec
mov
dec
addl
dec
std
xlat
pop
and
dec
push
lahf
lock
test
hlt
push
mov
jnp
dec
ljmp
xchg
cmpsl
scas
lock
loopne
subl
ss
popa
jg
xchg
lea
out
movsl
sub
push
xor
inc
xor
movsl
out
jnp
arpl
call
sbb
inc
js
push
out
leave
fbstp
xor
mov
jecxz
jmp
and
insl
rcrl
push
pop
xchg
add
pop
cli
addr16
nop
addr16
and
dec
nop
jle
sbb
inc
call
xchg
push
pop
aam
gs
test
mov
je
jge
pop
cmp
adc
mov
pop
cld
add
dec
loop
fs
mov
bound
rcr
pop
sbb
and
jae
xchg
outsb
pop
and
in
clc
outsl
insb
sbb
pop
push
stos
outsl
insl
xchg
in
inc
cmp
cmp
outsb
mov
mov
adc
cmp
mov
mov
aas
aad
ljmp
cmp
mov
sub
xor
inc
mov
adc
add
cmp
sbb
mov
out
adc
push
fidivl
loop
sbb
mov
sub
enter
lods
in
add
movsb
xor
lock
and
fwait
mov
jmp
push
shlb
sbb
mov
fcompl
outsl
xchg
mov
out
out
cmpb
imul
icebp
outsl
fwait
xchg
xchg
push
xor
sbbl
push
repz
lret
add
jle
ss
or
out
mov
jb
inc
sbb
jo
inc
out
push
fiadds
sbb
lahf
inc
das
inc
push
push
imul
and
imul
in
xor
mov
sbb
inc
xor
push
push
outsl
mov
cmp
cmpsl
stc
pop
sbb
cwtl
gs
mov
sub
mov
jecxz
loopne
mov
loope
xor
imul
insb
pop
xchg
xorl
jp
jp
adc
rcrl
fs
fidivl
out
inc
jg
dec
jecxz
fsubl
aam
pop
rcll
xchg
shll
mov
movsl
dec
fsubrs
jle
xchg
jne
sbb
add
clc
xchg
pop
out
pop
and
vshufps
xor
inc
and
rcl
lea
fsubrl
jns
movsl
stos
daa
pop
xor
mov
dec
mov
mov
sarl
les
jo
mov
cmpsb
popf
sbb
imul
iret
cmpsl
fnstcw
push
inc
gs
divl
addl
stos
mov
and
push
mov
adc
sub
mov
inc
scas
rorb
bound
and
mov
add
icebp
rcr
out
sub
mov
adc
inc
lcall
ja
les
xchg
xor
stc
bound
jmp
mov
jl
and
push
xor
into
inc
lods
dec
xor
pop
leave
lods
cmp
dec
mov
negb
mov
leave
dec
dec
loop
mov
les
mov
push
add
adc
sub
push
stos
fwait
adc
mov
mov
in
fsubs
call
inc
daa
xsha256
cmpsb
aad
mov
sar
enter
scas
popa
adc
adc
imul
andl
mov
dec
pusha
cmp
add
outsb
scas
push
movsb
jns
ss
das
dec
xchg
ss
sahf
out
addr16
xor
fmull
xchg
cmp
xchg
mov
repz
cmc
test
pushw
cwtl
dec
sti
mov
or
cmc
xorl
cmp
fwait
inc
lcall
add
gs
mov
outsl
jno
in
xor
lods
xchg
or
mov
sarb
xor
jmp
xchg
js
xor
adc
dec
mov
scas
daa
jge
movd
test
test
aam
bound
ljmp
push
sti
sbb
cmp
cli
lcall
mov
fadd
and
and
adc
pop
test
loope
fisttpl
leave
cmc
clc
mov
cs
sbb
ds
daa
out
sub
jbe
push
pop
dec
mov
testl
push
jge
stos
sub
dec
jl
aaa
into
cld
push
mov
and
fwait
and
xchg
xor
aas
enter
outsb
jns
pop
and
jl
pop
lret
mov
pop
in
in
and
add
rsqrtps
cmp
test
adc
mov
push
dec
jmp
lock
mov
jns
or
stos
into
xchg
test
xlat
lock
jecxz
dec
in
incl
out
jb
or
jne
stos
add
cld
xor
dec
popa
and
aas
dec
out
dec
mov
mov
and
dec
imull
fisubrl
sarl
mov
mov
mov
cs
je
jno
sbb
imul
inc
outsl
push
inc
push
aad
xchg
add
adc
adc
xchg
int3
aas
fdivl
pop
mov
and
jmp
xchg
lahf
test
call
mov
cltd
inc
cltd
mov
xchg
and
cmp
test
mov
push
jp
aaa
mov
pop
rorl
imulb
sbb
ret
xor
mov
sub
xchg
ss
addb
sbb
in
lods
adc
sbb
mov
or
popf
sub
inc
sbb
rcrl
cli
sub
adc
movsl
dec
pushf
sbb
inc
sbb
mov
jle
cmc
test
inc
lea
pop
push
mov
mov
lahf
jg
mov
rcrl
xchg
cmpsl
sti
shl
xor
inc
push
stos
shrd
icebp
push
fldl
cmp
imul
push
push
mov
and
xor
dec
jns
mov
inc
xor
popf
cmpsl
lock
aaa
jmp
outsb
or
popf
pushf
adc
sbb
xchg
jbe
cmp
sub
leave
mov
cwtl
mov
aaa
or
mov
mov
jp
mov
fbld
in
fs
add
ror
sub
pop
outsb
bound
push
cmp
in
lds
pop
into
int
scas
jbe
adc
adc
cmc
mov
xchg
add
mov
sti
cmpsl
push
mov
shlb
cs
rclb
in
inc
out
pop
bound
pop
repnz
rcl
shll
pushf
mov
push
cmpsb
xchg
push
xor
lahf
push
movsl
mov
rcll
inc
push
add
imul
add
add
test
pop
test
test
testb
sarl
stc
push
out
sub
lret
scas
jno
sbb
int
cli
and
mov
pop
sub
shr
and
push
inc
scas
aad
ja
pop
sbb
add
loop
jns
or
lcall
pop
out
stos
xor
in
in
int3
stc
sbb
xor
stc
mov
test
sbb
outsb
cmp
repnz
fsubp
cmpb
sbb
orl
shrb
pushf
push
sub
aam
jmp
jmp
dec
scas
pop
mov
pop
sub
xor
push
pusha
push
cmp
dec
gs
sub
push
movups
fdivrl
test
movsl
leave
xor
pop
sbbl
int3
ds
loope
xor
sarl
fs
inc
or
or
cmc
test
sti
mov
mov
push
add
cld
sub
push
jmp
add
lret
jmp
mov
cmc
and
ljmp
pop
mov
pushf
ss
inc
mov
inc
jge
pop
mov
popf
int3
jo
in
pop
bound
sub
xchg
xchg
rcr
inc
xchg
cmp
arpl
inc
xchg
sbb
xchg
in
xchg
cmpsl
pop
mov
or
mov
rcr
lret
in
push
and
mov
fldenv
outsl
pop
fxch
dec
je
push
mov
mov
inc
out
inc
adc
je
shrb
pusha
inc
fsub
push
fiadds
bound
mov
mov
es
cmc
or
aad
nop
movsl
and
inc
add
es
std
cmp
sahf
xlat
fistl
icebp
xor
jae
es
jo
pop
mov
xchg
sbb
shrb
push
shrb
es
shrl
adc
in
fimuls
psrld
ja
mov
sub
adc
cld
addr16
loope
dec
xlat
int3
mov
mov
fstpl
bound
cmp
push
jmp
xor
nop
or
add
pop
push
adc
or
iret
cmp
xchg
pusha
loope
xchg
mov
imul
into
aas
cli
jne
adc
adc
imull
test
shl
dec
pop
inc
sbb
out
mov
ljmp
ret
adc
jne
xchg
fcmovne
xchg
push
sbb
and
or
ljmp
adc
pop
push
sub
sbb
jb
xor
into
mov
sahf
loope
mov
fistps
dec
push
xchg
mov
scas
je
push
cmp
add
xchg
lret
inc
add
push
and
push
cltd
je
cmc
rclb
fldl
cwtl
fdivl
xor
imul
fistl
xchg
sub
scas
movsb
pop
push
lea
arpl
es
add
enter
xchg
xor
and
subb
movsl
loope
xor
pusha
pop
mov
push
into
push
and
sub
call
xor
inc
dec
loope
sub
pop
mov
int3
mov
cmp
enter
nop
pop
leave
std
aaa
push
mov
pop
push
fidivrl
insb
data16
jecxz
cmp
lea
inc
js
out
scas
sub
mov
and
push
cmp
adc
rcrb
sbb
jg
out
test
leave
inc
jle
sahf
aas
ljmp
pop
loope
rorl
push
inc
or
jl
stos
aam
ds
sbb
je
mov
cmp
sub
inc
push
sbb
insl
inc
mov
cld
out
enter
mov
mov
push
pand
mov
out
mov
je
lods
out
jnp
fyl2xp1
movsl
sbb
mov
pop
iret
lea
out
js
mov
test
fidivs
mov
mov
or
inc
fdivrs
sbb
mov
enter
mov
push
hlt
or
jb
jmp
sbb
fistps
jle
mov
push
xor
das
mov
xchg
in
pop
adc
leave
sbb
lock
pusha
lcall
or
add
fucomp
shlb
scas
cmp
lock
pop
cmpsl
mov
test
cltd
cld
lcall
cld
scas
popa
xor
add
xchg
fisubs
rorb
adc
stos
es
or
movsl
ss
mov
stc
das
xor
fwait
iret
pop
and
inc
stos
dec
jle
push
jae
push
and
add
aam
add
inc
rclb
xor
sar
outsl
pop
xor
or
adc
xchg
and
cmpsl
mov
aaa
pop
xchg
pop
leave
mov
fiadds
dec
mov
aam
ret
or
xor
jmp
inc
mov
xor
aad
dec
fcomps
imul
cmpsl
stos
add
mov
xchg
sub
xor
pop
imul
pop
jle
inc
insl
and
lret
icebp
xor
pushf
popf
mov
pop
or
cmp
sbb
mov
xchg
sub
popf
jbe
jns
outsb
or
inc
lret
inc
call
aas
in
stos
or
or
pop
inc
subl
or
in
das
fimull
and
adc
outsb
jmp
jo
push
fldcw
stos
xor
or
lcall
pop
sbb
pcmpeqd
sub
icebp
and
cmpsl
les
pop
xchg
lds
test
popa
add
xor
xor
or
mov
int
out
jecxz
push
movsb
andb
sub
lock
sbb
inc
sub
pop
ss
in
sbb
sarl
mov
pushl
xor
aam
sahf
jl
mov
jmp
inc
shl
fmuls
or
cmp
insb
adc
jmp
adc
add
lret
cmc
test
popa
popf
pop
pop
and
enter
jne
in
dec
ljmp
insl
sbb
rclb
int3
mov
sarb
test
arpl
sub
lret
pop
enter
insl
pop
dec
adc
fists
psubsb
add
push
call
xchg
aas
in
jmp
mov
aam
push
push
lea
pop
scas
mov
mov
jno
push
stos
sub
sbb
test
inc
leave
inc
push
mov
sbb
and
cltd
mov
pop
popf
shlb
lret
test
pusha
ss
out
mov
cli
loope
dec
pushf
dec
push
pop
cmp
loope
imul
sbb
xchg
dec
test
pop
and
sbb
jmp
xchg
dec
mov
sbb
add
cmpsb
pop
aam
push
clc
lods
adc
dec
xchg
shl
xchg
sub
push
pop
inc
arpl
cmp
add
or
mov
jmp
and
jle
sub
popa
fiaddl
cli
pop
call
mov
fdivl
mov
cmpb
inc
cmp
out
push
clc
lcall
ret
pop
sbb
in
imul
fcom
mov
xor
stos
ja
leave
imull
fmul
cmp
jl
test
inc
mov
int
adc
cmp
popf
mov
scas
stc
xchg
inc
xchg
mov
xchg
inc
dec
cmp
sub
stos
xchg
jnp
dec
fucomi
int3
pusha
call
movsb
in
jle
dec
add
sub
mov
jge
sti
add
movsl
pusha
push
and
inc
jmp
sahf
adc
push
mov
adc
sbb
add
inc
mov
mov
dec
sahf
jge
lret
mov
fs
xchg
jb
fs
jb
lahf
test
dec
inc
jge
imul
or
fcmovnb
lods
inc
mov
mov
fwait
int3
test
and
adc
insl
in
xor
or
movb
mov
loope
stos
sti
rol
nop
mov
es
bound
mov
jno
mov
xchg
icebp
xchg
adc
pushf
rclb
cmp
cld
push
mov
cmpsl
add
sbb
mov
std
inc
jmp
stos
pop
fstps
fmuls
es
inc
adc
jge
loope
and
lret
cmp
sti
scas
inc
fbstp
ret
add
in
mov
mov
xor
cli
test
data16
sbbl
js
add
data16
sbb
mov
test
insl
sti
sbb
push
dec
jp
in
mov
pop
das
add
lret
pop
mov
or
into
orl
arpl
xor
mov
je
mov
test
je
lret
sbb
push
or
inc
mov
add
adc
inc
mov
aad
icebp
sub
dec
inc
icebp
adc
imull
or
iret
hlt
loop
loope
xor
lods
aam
sbb
cmp
add
mov
enter
inc
or
insl
xor
mov
pop
call
push
rcrl
push
push
nop
jp
cld
arpl
aaa
imul
sbb
leave
je
sub
cmp
dec
xchg
ds
pop
fnstcw
and
mov
jbe
pop
fimull
inc
mov
addl
rcll
cmpsb
jne
xchg
out
inc
inc
ja
mov
popf
shrb
xlat
dec
sbb
xchg
stos
mov
mov
lods
push
adc
js
and
nop
out
mov
rclb
push
sbb
push
loop
lea
aad
push
pop
inc
push
cld
add
pop
das
sbbl
int3
imul
mov
mov
insl
cmc
xchg
sub
orb
mov
adc
sbb
scas
jle
push
mov
pop
addr16
aaa
xchg
arpl
test
std
sbbb
adc
imul
pop
insb
fst
mov
xchg
sub
and
sub
add
xor
jnp
xlat
out
pop
or
add
sub
shll
lds
out
mulb
hlt
ss
jbe
pop
sbb
jg
mov
inc
xor
inc
xor
movl
or
popf
mov
push
jb
in
add
pop
aaa
push
mov
xchg
mov
fistpll
jg
inc
add
xor
sbb
jne
mov
loope
cmp
pop
adc
and
stos
int
dec
jno
jae
cld
call
pop
daa
mov
jns
mov
aas
add
je
fistps
loopne
dec
jbe
je
loop
mov
pop
ret
add
lds
sub
bound
mov
ds
and
lods
and
je
sub
xlat
sub
in
mov
hlt
out
ds
add
jp
sarl
popf
mov
mov
push
out
mov
and
mov
sahf
cmp
pop
in
or
jne
leave
and
cwtl
aas
pop
out
sub
test
sti
imul
and
push
cmpsl
fcmovbe
iret
pop
and
or
sub
sub
sub
push
xlat
mov
rorb
gs
dec
lret
and
popaw
or
xchg
sbbl
or
mulb
sub
inc
dec
js
enter
and
pop
jecxz
jb
mov
pushf
movsb
out
xchg
push
imul
aam
xor
mov
sub
cwtl
lods
push
push
dec
mov
jo
nop
lea
xchg
sti
push
cmpb
mov
mov
push
cmpsb
adc
cmp
test
xor
lock
sahf
cmpsl
or
inc
ret
mov
int3
inc
add
pushf
jl
out
sub
inc
je
ljmp
mov
call
test
sbb
add
aas
xor
sbb
adc
inc
sbb
std
dec
or
or
fwait
ja
dec
jno
out
push
shll
pop
and
orl
inc
inc
jne
leave
xchg
fwait
xchg
je
test
call
ds
test
push
mov
in
mov
sahf
mul
loope
or
int3
arpl
ja
stos
lahf
out
cwtl
pop
pop
imull
jae
repnz
pop
jg
add
and
push
pop
fists
das
cltd
jmp
inc
xor
sbb
stc
mov
fisubrl
and
ficompl
mov
push
imul
xor
fmull
cmp
ja
stos
lods
addl
sub
mov
xchg
nop
lcall
cmp
inc
aad
push
subl
test
adc
insl
popf
js
stc
xor
mov
repnz
stos
dec
popa
adc
fs
adc
and
movsb
push
adc
fnsetpm(287
mov
sub
iret
sub
sub
mov
sub
insb
push
add
push
jns
and
or
or
sbb
jns
jle
cmc
add
andb
mov
mov
repz
cmp
and
jg
add
stc
imul
inc
sbb
inc
data16
loope
dec
stos
push
fwait
push
pop
data16
mov
fs
mov
daa
and
les
lods
icebp
fwait
xchg
inc
outsl
test
cmp
movsl
cmc
xchg
jnp
jmp
mov
jp
movsl
rcl
sub
call
stos
jne
bound
cltd
mov
mov
mov
std
pop
lds
add
sub
lods
xor
add
outsl
sbb
pop
sbb
aas
push
pop
add
inc
ret
lret
pop
scas
je
das
test
stos
lret
sub
pop
dec
sbb
sub
cmp
push
xor
addr16
rcll
in
mov
add
insb
inc
fcmovnu
pmuludq
pop
popf
stos
in
xchg
jbe
mov
pop
sbb
stos
out
mov
shl
dec
mov
out
xchg
dec
pminsw
aas
pop
in
mov
push
gs
inc
push
lods
jmp
jb
xchg
pop
popa
into
mov
dec
cs
cmc
repnz
ljmp
xchg
fld
mov
cld
xchg
jb
xor
lds
add
or
xchg
sahf
lea
in
jmp
push
dec
mov
push
and
jecxz
add
jecxz
int3
mov
mov
xchg
das
dec
sub
sbb
adc
lcall
sub
icebp
pop
ficomps
repz
mov
addr16
inc
addb
inc
push
fadd
ds
ja
cmpsb
pusha
mov
push
iret
jns
loope
mov
cmpsl
out
jle
pop
inc
lods
or
divb
cmpsb
inc
pop
cmc
jno
repnz
cwtl
xchg
aad
mov
scas
data16
xchg
add
inc
aas
mov
bound
rorb
stc
cmc
loopne
xlat
fisubrs
sub
lock
es
mov
and
push
and
popa
into
push
out
push
mov
adc
pop
andb
push
jnp
xchg
push
loopne
loope,pt
push
jb
test
sbbb
mov
inc
test
inc
mov
sub
mov
cwtl
jbe
mov
insl
mov
or
jle
sub
add
sbb
sarl
les
add
mov
cmp
mov
rorb
cmp
fwait
test
xchg
lret
movsb
or
mov
add
test
repz
sbb
pop
xchg
pop
xor
xchg
mov
pop
mov
sbb
mov
jns
mov
pop
dec
and
mov
test
mov
sub
mov
xchg
into
mov
adc
sbb
jae
pushf
fwait
notb
mov
scas
mov
addr16
aas
push
pop
mov
adc
jp
inc
repz
inc
xor
push
jg
sub
daa
fldl
jns
sar
imul
xor
pop
fidivl
mov
jbe
dec
xor
sti
jns
aam
xchg
sbb
arpl
add
stc
mov
mov
dec
addr16
aam
imul
arpl
or
xor
pop
jge
dec
adc
push
out
mov
xchg
inc
add
mov
fmull
cmp
adc
xor
loopne
icebp
sub
in
shlb
sub
mov
add
test
lds
add
jne
rclb
add
pop
std
mov
shl
inc
mov
dec
ja
hlt
jnp
and
cmp
inc
pushf
dec
movsb
and
push
cmp
inc
ret
test
push
fisubrs
xchg
loop
arpl
ret
and
daa
std
nop
push
movsb
jnp
pop
push
shlb
das
lcall
sbb
das
enter
sti
mov
lds
mov
add
icebp
aas
push
stos
lea
cmp
mov
movsb
xchg
sahf
nop
lds
xor
sbb
addr16
adc
cwtl
out
aaa
test
or
insl
in
lods
xchg
sub
xchg
popf
and
mov
jo
fadds
push
push
scas
je
pop
adc
je
inc
push
sbb
adc
sbb
pop
pop
in
addr16
aaa
mov
adc
xor
xor
mov
adc
xor
insl
cmp
xchg
das
inc
fwait
cmp
add
sahf
test
mov
out
push
sub
lea
notb
andl
roll
add
clc
add
imull
mov
mov
xor
jge
iret
pop
fwait
popf
push
and
push
loopne
mov
sbb
aam
mov
dec
test
sarb
sbb
rcll
adc
popf
push
popf
dec
add
hlt
xchg
icebp
adc
and
lcall
mov
mov
leave
imul
inc
inc
lea
mov
push
xchg
sti
test
or
jecxz
sbb
fstpl
pop
xchg
cmc
jbe
jbe
out
fldenv
rorl
jno
or
cld
clc
sahf
mov
pop
sbb
sarb
insl
add
mov
arpl
xor
ds
cli
call
xor
pop
xchg
adc
in
sbb
sahf
jns
movsb
jbe
aad
xor
aas
rcrb
insl
mov
jae
cmc
xadd
jp
pop
dec
repz
sar
dec
outsl
jle
or
xchg
movsl
lahf
insl
stos
push
cmp
pusha
xchg
out
cmp
push
lds
aaa
jge
incb
shlb
inc
pop
aaa
dec
xchg
adc
sub
shll
shll
lds
sti
bound
repz
ret
orb
js
pand
imul
in
jnp
adc
shl
aam
cs
rclb
daa
inc
dec
xor
sbb
add
and
dec
xorl
inc
mov
mov
stc
sarb
jp
pusha
adc
fdivrp
mov
and
pusha
sub
lahf
push
add
shll
test
inc
in
push
mov
pop
loope
jp
popa
out
pop
jo
dec
and
push
inc
add
sub
pusha
adc
xor
mov
out
inc
jp
lret
lds
hlt
sub
lea
xor
xchg
mov
flds
dec
push
mov
lods
push
inc
sub
mov
add
mov
and
inc
add
cwtl
shll
jmp
jl
movl
pop
mov
push
inc
adcl
mov
jae
sti
mov
xor
shlb
mov
xor
into
xchg
pushf
repz
sbb
sbbl
add
cmpsb
xchg
jo
orb
ret
mov
cmp
mov
xchg
pop
and
add
push
jbe
adc
sbb
mov
jmp
push
push
pop
adc
lret
imul
sub
mov
movsl
jecxz
out
test
jmp
call
clc
xchg
fisubrl
adc
inc
fldenv
arpl
hlt
rorl
lds
lock
or
cmp
fisttpll
les
lea
adc
push
scas
div
sbb
push
in
mov
roll
mov
cmpsl
cmp
xor
sub
int
dec
xchg
fadd
aas
xor
xchg
xchg
lods
and
data16
xor
xchg
sub
inc
int3
pop
push
fnstsw
jecxz
xchg
mov
out
repnz
jmp
cltd
fwait
or
js
push
pushf
adc
pop
mov
push
mov
xor
lods
je
stos
and
cwtl
jne
pop
or
cmp
cmp
leave
std
dec
repz
cmp
lea
aas
lods
and
mov
mov
pop
dec
inc
xorb
pop
xor
cltd
and
mov
iret
and
icebp
push
xchg
in
stos
les
pop
cmc
lahf
movsb
push
insb
xor
jp
dec
insb
push
notb
jnp
ror
out
lds
sti
rcr
mov
xchg
sti
loope
aam
add
inc
jnp
stc
mov
and
or
xchg
ret
cltd
call
and
sbb
prefetch
add
out
push
clc
insb
xchg
stos
add
std
or
inc
cmp
aas
xor
push
lock
ss
test
fsubrl
cmp
adc
pop
dec
daa
fmull
mov
sbb
out
out
pop
loopne
cmp
mov
int
or
xor
mov
shrb
and
int
add
lcall
inc
das
adc
fmuls
xchg
push
adc
xchg
mov
jp
mov
fdivl
imulb
sbb
or
push
jg
fstpt
repz
jae
mov
sbb
mov
fdivl
xor
lret
outsl
std
mov
cmp
mov
into
mov
xor
cmp
jecxz
mov
aad
and
xchg
jecxz
adc
push
mov
cmp
and
into
movsb
sub
pop
inc
mov
mov
add
leave
inc
clc
push
mov
pop
rol
dec
mov
lret
clc
jmp
test
test
mov
sti
add
or
sub
jp
bound
lcall
mov
or
outsb
or
xchg
ret
das
movsb
inc
adc
adcl
iret
ljmp
js
repz
cwtl
sbb
stc
xorl
enter
iret
xchg
cmpb
icebp
inc
inc
ljmp
mov
andb
imul
sahf
and
int
in
and
cmpsb
dec
pop
rol
cltd
push
repnz
imul
cmp
shrl
loop
pop
jp
pop
lret
sbb
add
dec
sbb
push
pop
popf
stos
ds
fildl
fadd
or
add
jb
mov
push
sbb
popf
push
sub
sahf
dec
jecxz
int3
and
scas
sbb
aad
and
aas
es
mov
mov
cmp
jecxz
inc
jmp
sar
int3
xor
jno
fnstenv
repnz
repz
fs
xchg
sbb
or
and
enter
arpl
mov
daa
in
push
sbb
adcb
xchg
push
out
lock
jle
mov
lods
or
cltd
imul
or
pushf
js
cmp
dec
stc
mov
fwait
daa
shl
daa
dec
xchg
sub
dec
xchg
aas
jmp
pushf
push
mov
fwait
push
add
and
sti
jmp
add
leave
dec
aam
jmp
mov
repz
sarl
jns
adc
xor
push
les
fidivrl
xchg
frstor
or
loope
imul
inc
rcll
in
clc
test
adc
repnz
lods
xchg
clc
dec
and
pop
cli
push
mov
push
push
cmp
sub
outsl
or
cmp
test
push
stos
jmp
or
push
ret
out
xor
sub
jnp
and
pop
sub
push
xor
movsb
out
stc
xchg
mov
sub
and
les
outsl
jmp
sub
xchg
fwait
loop
sbb
jno
aam
mov
imul
xchg
mov
jb
lret
xor
loope
cmc
dec
adc
sti
mov
inc
add
mov
jb
aad
fdivs
sbb
mov
cmp
fwait
andl
imul
fistps
mov
mov
or
bound
test
nop
push
and
hlt
cltd
int
pop
inc
mov
cwtl
dec
dec
daa
movsb
xchg
add
popa
add
ljmp
popa
push
mov
ret
pop
dec
sub
leave
scas
xchg
mov
fdivs
jl
push
push
mov
sbb
movsl
in
ja
jnp
fcompl
lock
fs
lds
dec
sar
stc
fwait
pop
mull
std
mov
popa
xchg
push
stos
call
cs
add
std
pop
sub
jnp,pt
out
jl
into
bound
test
test
pop
mov
lea
aam
aad
inc
negl
ret
mov
std
fbld
sti
push
pop
adc
sub
mov
and
mov
push
fs
pop
ljmp
popl
or
push
push
cmp
sub
pop
jge
shlb
inc
inc
cli
test
aaa
iret
push
insb
mov
lds
xchg
movsb
hlt
mov
mov
cld
inc
arpl
ror
push
gs
shl
xor
in
xor
lea
std
mov
stos
or
jmp
sub
cmp
fs
cli
or
mov
in
sbbb
insl
push
arpl
int
mov
xchg
push
adc
mov
outsb
push
addr16
push
xchg
repnz
adc
fwait
enter
repnz
pusha
outsb
insb
ss
pop
shrb
pop
sbb
lock
sub
inc
scas
mov
jns
jl
sbb
dec
push
jl
cmpsb
js
fbstp
outsb
mov
scas
scas
and
mov
adc
stc
out
rol
mov
xchg
lret
daa
repz
notb
stc
add
push
add
pop
cmp
pop
sbb
fbstp
mov
sahf
les
and
aam
mov
jp
or
sbb
lahf
mov
in
rorl
push
dec
xchg
add
outsl
enter
shlb
ja
cmp
mov
lods
fidivrl
mov
mov
pushl
movsb
and
loope
jge
fucomp
jmp
push
aad
subb
nop
ds
pusha
jbe
ja
xor
or
test
mov
and
push
mov
push
movsb
jecxz
dec
jb
bound
fwait
sahf
jp
fnsave
push
xorb
dec
or
mul
ret
ret
mov
sahf
fs
fwait
nop
pop
xchg
or
aam
push
out
sbb
push
inc
outsb
out
and
out
movsl
mov
inc
cld
arpl
dec
add
cwtl
rorb
shlb
outsb
out
xchg
push
mov
es
dec
addr16
push
pop
jno
ljmp
loop
jbe
dec
mov
out
lahf
lods
sbb
imul
pop
repnz
in
mov
xchg
jle
out
jg
mov
cli
and
jae
jno
adc
popa
or
dec
stos
fs
movsl
adc
pop
mov
sbb
pop
fwait
sub
pop
mov
or
or
xorb
and
aaa
mov
inc
lahf
test
fwait
pusha
jns
sub
dec
mov
push
adc
cwtl
loop
jne
dec
ror
add
and
inc
incl
mov
dec
stc
pushf
mov
push
mov
pop
xchg
mov
adc
orl
data16
pop
lret
pop
aaa
sbb
cmp
aas
xor
jae
rol
adc
aas
icebp
pop
and
lcall
dec
xor
mov
insl
cmp
cmp
lcall
jne
dec
inc
jmp
or
mov
stos
push
and
cwtl
fimull
mov
aas
and
fbld
dec
mov
xchg
mov
push
mov
in
xor
cmp
lock
dec
xorl
and
fbld
push
jmp
mov
mov
lcall
fs
or
daa
add
cmp
out
cmc
in
sbb
loopne
lret
jmp
js
mov
push
ds
enter
and
lods
jo
fldcw
into
or
popa
data16
je
movsb
cmpsl
add
mov
jp
push
dec
push
aad
lret
fildl
out
call
fldl2t
loopne
and
jle
in
jmp
cmp
ja
add
int
loope
jno
lock
cmp
sbb
js
push
mov
jle
xchg
les
loope
xchg
bound
jle
call
mov
shll
sbb
loopne
out
add
gs
cmp
out
push
inc
mov
jmp
pop
imul
fistpl
add
pop
mov
das
xchg
sbb
adc
lahf
das
iret
sub
ret
test
or
insb
mov
cmp
xchg
mov
and
gs
sbb
imul
push
mov
cmp
fbstp
lds
xor
pusha
fisubrs
jne
aad
add
jmp
inc
lcall
lods
add
dec
lock
dec
dec
lret
testb
pop
dec
or
andl
les
sbb
push
fadd
cmp
adc
fdiv
leave
out
mov
and
movsl
xchg
adc
and
bound
pushl
xlat
shll
mull
lods
sub
lret
dec
jo
jno
popa
mov
enter
addr16
int3
out
push
imul
sbb
fistpll
jno
adc
pop
cmp
and
xchg
test
mov
sub
fistpl
mov
jp
fisttps
mov
leave
add
xor
cltd
sub
ds
lret
test
add
out
js
push
push
cmp
jmp
push
in
sub
or
mov
std
in
mov
push
push
es
jb
sub
pop
jmp
jmp
notb
adc
lea
ss
cmp
cmp
ja
stos
sbb
jbe
pop
mov
pop
mov
jp
push
push
inc
leave
test
add
adc
js
jmp
jne
xchg
je
nop
sarb
mov
xchg
jmp
sub
stc
repz
mov
stos
or
or
mov
pop
int
sti
repz
repz
repz
xor
rorb
sbb
sbb
pop
ja
sbb
jb
sub
fucomi
pop
push
jbe
mov
in
sub
in
iret
push
dec
sbb
js
jo
inc
cmpsl
and
mov
pop
lods
loope
sub
outsb
dec
jmp
mov
aaa
popa
test
test
les
dec
fsub
pop
adc
jecxz
in
negb
inc
aad
mov
pop
shlb
or
add
ret
daa
les
or
lret
xor
cmp
or
movsl
fsubs
hlt
cmpsb
jb
adc
adc
mov
and
push
fs
push
sbb
rcr
arpl
mov
mov
jecxz
out
je
cmc
adc
dec
inc
push
inc
sub
inc
cmp
mov
stc
xchg
cwtl
fnstsw
popf
xchg
loope
sub
lods
das
in
gs
lret
or
in
es
add
xlat
mov
jp
les
xor
pop
push
mov
push
mov
lods
lret
mov
mov
or
sbb
mov
imul
addr16
cwtl
inc
arpl
call
jno
mov
push
jae
aad
outsb
data16
adc
add
jmp
test
rolb
lods
arpl
sub
add
sahf
out
mov
sti
lcall
in
cli
or
cmp
sub
push
and
fsubrl
lret
icebp
lock
jnp
aam
ror
in
xchg
jns
sarb
dec
push
xor
orb
lods
xor
push
jmp
inc
inc
insb
loop
popa
sarl
push
push
jns
add
mov
inc
jno
insb
mov
fmull
inc
seta
and
xchg
mov
mov
lock
outsb
fildl
nop
rol
add
outsl
xchg
inc
int
push
xlat
loopne
lds
adc
mov
les
sub
fstpl
jbe
dec
mov
jo
jp
or
ds
dec
push
idivb
pop
mov
sub
mov
loope
push
scas
aas
jns
pop
shl
repz
cmpsl
or
dec
jl
popa
aam
mov
psadbw
xor
mov
cmp
sahf
mov
xchg
push
add
push
push
lahf
mov
jg
dec
push
mov
dec
mov
adc
mov
and
int
dec
xchg
and
adc
inc
arpl
leave
inc
aaa
jg
adc
test
sahf
pop
les
mov
dec
stos
mov
mov
cmc
lea
fisubs
lahf
mov
insl
int3
lahf
push
push
lcall
cwtl
das
mov
ret
or
mov
mov
push
dec
inc
mov
xchg
test
jns
add
mov
ss
sbb
pushf
test
mov
insl
xchg
sarb
mov
ret
mov
sahf
mov
dec
outsl
orl
lds
mov
inc
leave
mov
sbb
cmp
imul
add
mov
xor
pop
aam
xor
bound
mov
push
inc
mov
ds
jnp
addr16
mov
or
mov
std
aam
lds
int3
test
pop
sub
xchg
movsb
and
push
cmp
aaa
enter
add
cmpl
jb
test
jge
and
out
cmp
sti
inc
inc
pop
int3
inc
and
mov
or
pusha
adc
mov
inc
mov
fidivrs
fisttps
push
mov
popa
leave
xchg
pop
dec
sub
pop
popf
mov
mov
add
adcb
fwait
push
inc
jb
daa
dec
and
movsl
xor
cmpsl
int3
addr16
lea
add
adc
xchg
movsb
sub
movsb
lcall
shl
lods
mov
xlat
xor
xchg
sbb
jge
xor
add
leave
xchg
mov
mov
sub
xchg
adcb
pop
dec
or
and
lods
push
lods
ljmp
mov
adcl
popf
lcall
pushf
movsl
xchg
or
mov
xchg
sti
xor
xchg
fwait
int
inc
test
jmp
and
sbb
xchg
sbbb
das
cmp
and
pusha
sahf
pop
imul
fs
xor
mov
call
sti
xchg
mov
or
mov
inc
inc
adc
mov
gs
pop
test
jns
or
push
add
loopne
rcl
out
xchg
test
or
in
sbb
dec
cmp
sahf
int
out
mov
mov
and
mov
imul
fs
cmp
lock
ljmp
sub
icebp
cli
dec
ficoml
cltd
adc
fwait
popf
cmpsb
pop
fs
pop
sub
test
push
mov
lret
inc
pop
cld
iret
repnz
mov
int3
test
loopne
adc
out
lods
in
lds
test
bound
sub
int3
repz
push
cli
add
mov
and
out
sub
xchg
add
push
ljmp
push
push
pop
dec
xor
lcall
sarb
mov
cmp
stc
push
fmuls
xor
jns
mov
add
xlat
cwtl
push
jne
mov
negl
popf
push
xchg
jo
jle
and
stc
push
push
js
mov
aam
ja
fnstcw
dec
roll
add
push
pop
shr
dec
insl
sbb
lret
mov
push
sahf
mov
pop
xor
add
or
ret
jl
dec
ja
loope
inc
adc
lea
ja
cltd
test
arpl
add
mov
adc
inc
or
cmpsb
in
mov
movsl
jns
mov
mov
mov
movsb
inc
pop
mov
push
mov
jge
jae
pushl
or
addr16
jg
xlat
out
inc
leave
stos
jge
or
dec
add
xchg
cmp
test
xchg
shl
std
sbb
imul
push
adc
push
and
xchg
outsb
fistpl
nop
andl
mov
lds
jmp
xchg
imul
lds
xchg
lods
call
int3
std
sahf
movsl
and
mov
cli
mov
popa
insl
fwait
cmpsl
fsubrl
jb
outsl
sub
xchg
frstor
mov
fimull
cli
add
add
es
aaa
lods
xor
scas
movsb
enter
jle
xor
add
mov
jecxz
mov
dec
sbb
pusha
push
xor
adc
mov
xchg
cs
data16
ret
lods
sbb
into
imul
bound
pop
add
sbb
jl
das
out
lea
lock
and
cld
pushf
pop
and
es
or
sbb
lcall
mov
insl
mov
jb
popf
imul
xor
adc
ss
adc
cmp
cs
xlat
test
in
cli
lds
mov
push
xchg
repnz
std
xchg
or
dec
lods
sub
addb
fstpl
sbb
adc
insl
lds
and
clc
sahf
mov
scas
jle
add
aad
cs
shll
pop
sub
in
shl
pop
test
out
les
jmp
aam
jl
add
pop
or
or
adc
insb
mov
jg
pop
cmpsl
ret
lret
es
inc
dec
mov
xchg
cmp
sbb
mov
cwtl
mov
and
sar
aam
lock
jne
sub
sbb
jle
xchg
jle
and
add
jae
xchg
xchg
and
jg
and
jbe
or
mov
inc
xor
daa
aam
ret
inc
ret
div
out
je
cmpsb
mov
mov
pop
or
xlat
jecxz
icebp
sbb
jnp
popf
push
jo
mov
rcl
push
gs
cld
cmp
add
mov
adc
gs
lret
xchg
scas
dec
cs
xchg
fistps
lds
mov
xchg
adc
imul
dec
xor
xchg
out
mov
aam
lcall
in
and
sub
adc
cld
in
dec
jo
sub
ror
shrb
sti
shrb
dec
adc
and
jnp
and
push
pop
push
out
popa
ljmp
inc
bnd
push
cs
jno
stc
fdivs
inc
les
ljmp
in
es
fldt
cli
mov
mov
and
and
sub
xchg
jmp
ret
outsb
femms
jecxz
fadd
jecxz
movsl
adc
nop
lret
popa
and
call
push
fstpl
out
push
lcall
es
lods
into
dec
add
inc
push
mov
stos
sbb
adc
sub
pop
andl
cmp
push
and
mov
popf
pop
push
inc
ljmp
sub
aam
les
ret
dec
inc
les
bnd
loope
shrb
stos
mov
pop
cmc
cld
rcl
int3
jge
sbb
push
scas
lret
sub
and
mov
sub
cmp
icebp
sti
mov
pop
dec
mov
lret
pop
clc
jb
addr16
in
mov
xor
xchg
cld
ss
stos
ret
mov
add
loope
out
sbb
xchg
adc
sub
mov
sarb
loop
add
pop
pop
add
xchg
add
dec
stos
mov
loopne
sub
fsincos
cmp
xchg
es
scas
popf
mov
nop
jmp
jns
mov
sub
imul
in
divb
xor
pop
push
neg
mov
jns
jl
xchg
dec
fwait
xor
xlat
push
adc
int3
sub
fwait
push
adc
sahf
pop
cmp
jne
mov
ljmp
pop
je
and
mov
xchg
mov
and
adc
jbe
push
in
mov
je
dec
hlt
leave
sbb
cmpsl
or
mov
xchg
push
fcmovne
or
adc
xchg
ja
lea
xchg
cmp
mov
push
sahf
inc
add
es
dec
xor
jbe
test
pusha
pushf
mov
sbb
mov
lods
out
out
imul
sbb
fcompl
or
mov
mov
jns
out
xchg
jns
pop
mov
push
in
scas
rcl
fs
cli
adc
jb
jg
lea
imul
ret
sub
into
dec
inc
cwtl
xchg
push
push
dec
popa
mov
cli
test
daa
xor
mov
test
xchg
inc
aaa
push
ret
sti
sbb
int
sbb
orl
cmp
sbb
dec
pop
lods
inc
or
sub
out
loopne
out
pop
mov
mov
fsub
in
aas
mov
pop
mov
jecxz
jmp
and
xchg
daa
popa
scas
mov
outsb
mov
filds
mov
repnz
sti
jg
fisubrl
add
or
sub
ret
sti
jmp
xchg
xchg
outsl
cs
push
sbb
mov
push
lahf
shr
xchg
cmp
mov
fldt
mov
xchg
ja
dec
hlt
jbe
das
lds
dec
mov
add
cmp
sub
mov
cmpl
out
arpl
outsl
xor
lcall
mov
int3
pop
loop
fisubl
ds
in
adc
add
lods
jnp
movsl
sbb
test
dec
cmpsl
into
loopne
and
pop
insb
xchg
cmpb
fsubl
lahf
push
lds
xchg
lods
sub
cltd
jle
lods
cmpsb
shrl
cmp
loopne
push
jnp
add
scas
imul
cmp
jns
shlb
jle
arpl
das
cld
les
pusha
sbb
sub
push
mov
in
stos
jno
cmp
fcoml
lret
lahf
enter
cwtl
es
cmpsb
inc
fwait
ret
imull
inc
or
push
insl
outsl
int3
mov
in
push
inc
addl
pshufw
lds
inc
jmp
xorb
movsb
jl
dec
jge
js
pop
insl
mov
add
and
imul
sbb
and
fists
dec
sarl
xor
test
xor
hlt
ret
sub
mov
pop
shrb
loopne
xor
sbb
mov
nopl
push
xchg
cmp
or
cmp
pushf
bnd
pop
ja
pop
popf
mov
mov
mov
popa
lret
mov
bound
xlat
push
loope
loope
mov
pop
ret
push
jne
sarb
push
gs
and
outsl
popa
cmpsl
jno
clc
iret
ret
aaa
shl
out
fistps
mov
pop
out
sahf
cmp
mov
sub
mov
mov
inc
mov
push
or
pop
cmpb
fwait
pop
popa
pop
mov
test
cwtl
in
add
xor
sti
mov
movsb
sbb
jp
out
or
sbb
xor
pushf
cmpsl
xor
push
andb
cmpsl
shll
pop
mov
mov
adc
jle
insb
negl
pop
addb
push
imul
dec
loope
int3
roll
push
loop
sbb
lea
xor
cmp
add
pop
push
and
jmp
push
pop
sbb
movsb
flds
xlat
jno
adc
movsl
mov
xor
jmp
shlb
sbb
and
pop
ficompl
add
out
jae
jbe
cld
jl
popa
cmp
out
es
in
cmp
movsb
ljmp
xor
mov
loopne
or
in
mov
hlt
adc
nop
push
call
jle
negb
bound
inc
lock
and
adc
ret
mov
fisttps
xchg
mov
dec
sub
es
push
inc
repz
adc
or
cmp
or
add
out
mov
das
or
mov
xchg
pop
or
inc
fcompl
pop
lret
mov
daa
add
outsl
outsb
fcoms
hlt
outsl
test
jle
mov
sti
mov
movl
jmp
xchg
mov
pop
xor
and
arpl
push
call
lcall
add
les
jb
popa
and
out
fidivrs
in
mov
xor
lcall
xchg
fwait
out
cwtl
mov
scas
mov
insl
dec
shll
lret
sahf
mov
test
int3
popf
add
push
and
pop
lahf
loopne
push
cmp
inc
adc
push
xchg
in
jo
xor
shlb
ficompl
or
adc
addr16
dec
mov
inc
inc
push
sub
xchg
jecxz
xchg
cmpsl
push
and
outsl
int
mov
push
sub
sub
dec
pop
cmp
dec
or
sub
mov
xor
addr16
lret
scas
sbb
scas
cwtl
stos
stc
xchg
repnz
pop
mov
repz
cmpsl
cmp
sub
pop
lret
repz
mov
adc
inc
pop
mov
pop
add
jecxz
adc
add
mov
in
jae
push
add
imul
xchg
sbb
repz
xor
and
stc
xchg
push
mov
fs
fistpl
call
mov
push
mov
mov
addr16
jo
cmp
aad
and
adc
mov
fcoml
xor
mov
jae
add
xchg
mov
mov
popa
movsl
or
aam
push
js
setge
or
pop
cmp
aam
or
and
or
add
test
jle
xchg
sbb
add
jae
sub
mov
and
lcall
ds
push
pop
in
cmc
loop
mov
and
pop
mov
movsb
mov
shll
xchg
int3
cwtl
push
inc
pushf
shll
jnp
pusha
out
push
sbb
pavgw
sub
lret
pop
imul
jecxz
adc
jne
pop
sub
mov
pop
out
aad
pop
mov
bound
or
popf
adc
mov
mov
jb
mov
inc
sbb
das
push
daa
dec
or
ja
adc
xchg
repz
push
fs
xorl
or
mov
dec
ret
ret
and
cld
xchg
xchg
ja
or
into
cli
sahf
into
lret
iret
jb
ljmp
or
push
out
vmptrst
inc
jno
add
jbe
into
sbb
in
jle
mov
push
mov
push
aaa
sbb
jae
test
mov
sub
xchg
out
cmpsb
push
xor
sbb
or
mov
push
fidivs
jmp
pop
adc
call
and
icebp
fisttpl
xchg
mov
cs
test
add
popf
jge
ja
enter
pop
jae
xlat
xchg
xor
jo
daa
in
push
mov
adc
out
pusha
sub
lret
jmp
outsb
inc
mov
sbb
and
pop
fidivl
fwait
nop
in
jl
icebp
mov
mov
leave
mov
pop
sub
out
cli
mov
mov
movsb
hlt
fbld
pop
js
mov
adc
fcoml
xor
shlb
fincstp
pop
xchg
cmpl
mov
mov
fwait
mov
sbb
adc
pop
sahf
insb
sti
or
lret
repnz
add
imul
dec
data16
or
jb
or
push
jb
es
mov
jg
movsb
jle
sti
xchg
push
adc
popa
lock
arpl
shr
mov
pop
add
and
ret
pusha
sbb
cmpsb
outsb
sbb
int
or
inc
mov
inc
sti
mov
push
mov
cli
in
xor
xlat
call
or
in
xor
into
and
sbb
push
fnstsw
rcrb
xchg
int
cli
xchg
repnz
stos
repnz
test
jmp
cmp
outsb
xlat
sub
test
adc
movsl
shrb
push
daa
loop
mov
and
mov
aaa
ficoml
and
mov
jge
push
sbb
push
sub
jo
loopne
lcall
shr
scas
fst
out
jecxz
outsl
in
lock
mov
daa
or
sbb
cs
sbb
jno
add
popf
mov
movsl
jg
jno
adc
fucomip
pop
xor
mov
test
orb
inc
repnz
popf
push
dec
inc
xchg
shrl
dec
push
adc
xor
push
popa
shll
lea
and
outsb
jo
pop
dec
xchg
sbb
dec
pushf
std
testl
stos
push
addr16
pop
lods
call
pop
pop
push
pop
xchg
aas
imul
pop
mov
push
pop
jle
cmpl
stc
pop
in
jbe
das
imul
mov
or
adc
in
repnz
xor
push
jo
jp
popf
and
je
dec
jns
ficoms
jbe
pushf
inc
sahf
cmp
mov
add
out
xor
ja
inc
cli
bound
xchg
test
pushf
out
inc
and
or
sbb
mov
repnz
imul
popf
pushf
movsb
lret
enter
cmp
pop
push
insb
ss
pop
icebp
loope
std
jno
lods
inc
lods
cmp
mov
test
movsb
lcall
scas
xor
mov
mov
in
testb
jae
jl
out
sbb
test
adc
push
adc
push
imul
jno
ficomps
call
test
xchg
je
sub
mov
cmp
mov
ja
ss
ds
sti
push
jmp
in
mov
jno
push
in
stos
fdivrl
imul
sarb
mov
dec
out
push
sbb
scas
scas
insl
sbb
adc
sub
pop
data16
mov
cli
in
and
ss
data16
mov
shll
mov
push
sahf
int3
adc
loop
imul
or
push
xor
insb
jmp
inc
fisubrs
fwait
xchg
add
xchg
daa
or
lock
out
icebp
rol
dec
jg
pushf
dec
jl
jge
roll
mov
push
clc
mov
cld
ret
mov
push
inc
xchg
icebp
adc
dec
jbe
cltd
push
push
lods
rorl
sbb
insb
sbb
adc
jne
test
jno
sub
mov
jo
push
test
rorb
cmpsl
pop
xorb
loope
xor
adc
daa
ljmp
aas
loopne
mov
mov
pop
enter
push
popa
xchg
ss
leave
inc
and
ja
mov
incb
jecxz
push
cwtl
das
push
aaa
je
push
cltd
mov
in
add
cld
xor
ja
xchg
movsb
loop
ljmp
call
add
push
addr16
into
in
dec
mov
jg
inc
pop
jno
repnz
inc
push
lret
xchg
mov
push
cmc
lods
mov
cmp
shrl
mov
adc
shr
decl
dec
ja
lret
shlb
sbb
cmc
sbb
ret
and
es
repz
icebp
sbbb
aad
mov
adc
loopne
xor
dec
in
push
sbbb
les
push
adc
dec
call
and
jno
repz
or
jmp
clc
xlat
jecxz
mov
ja
fists
add
test
push
nop
dec
jmp
cltd
test
test
or
leave
mov
fwait
iret
sbb
inc
movsl
std
mov
jecxz
inc
mov
dec
sbb
nop
push
dec
dec
daa
fldl
inc
and
lock
es
fidivrs
popa
cmp
cld
and
pop
adc
sti
lret
icebp
fcomi
push
add
adc
jp
inc
inc
out
div
push
inc
movsl
aaa
jmp
cltd
je
stos
fidivrl
dec
dec
mov
sub
or
inc
loop
mov
add
fidivl
mov
sub
hlt
ljmp
lret
push
mov
dec
iret
dec
ss
add
mov
stos
push
fwait
sbb
and
repnz
cmc
ret
ds
cwtl
cmp
out
and
outsb
pop
add
pop
fstl
in
jns
pop
mov
lods
jle
mov
add
pop
jmp
push
or
outsl
push
lea
mov
push
add
jmp
add
pop
loope
jbe
sub
movsb
push
bound
mov
into
outsl
data16
inc
pop
in
or
insl
jno
int
xor
jmp
inc
pop
push
imul
push
and
cs
or
mov
test
sbb
imul
xchg
ljmp
dec
pop
xchg
mov
sbb
mov
hlt
xor
fstl
jae
in
cmp
insl
popf
adc
cwtl
rorb
subl
add
xor
or
mov
cmp
ja
in
xor
dec
pop
pop
or
inc
pop
lods
dec
or
int3
mov
and
xor
pop
cli
cmp
test
xor
cmpsl
fisubl
mov
mov
mov
clc
mov
and
or
xchg
sbb
js
je
pop
mov
rcrb
cld
cmpsl
fsubr
xchg
repz
movsb
or
mov
lods
jb
jbe
rcrb
add
add
xlat
dec
lret
js
cmp
fs
jl
jbe
mov
ja
rcll
popa
cmpsl
inc
mov
xlat
lret
nop
hlt
adc
leave
and
call
mov
push
imul
rorb
and
stc
adc
cmp
arpl
fs
sarb
aad
sub
call
xchg
sbb
cwtl
test
pop
je
dec
cmpsb
inc
stc
or
push
fisttpll
js
xchg
imul
push
mov
fdiv
mov
xchg
and
out
mov
inc
adc
in
sub
sbb
cmp
and
jns
cs
adc
fwait
lods
leave
cs
fwait
mov
das
jmp
outsl
push
xor
sub
das
lock
aaa
lret
outsl
loop
mov
xchg
aaa
cmc
cmc
mov
xor
cmp
push
pop
mov
xlat
js
mov
or
sti
mov
sarl
and
xchg
add
add
inc
sbb
cmp
lds
mov
loope
adc
mov
jle
daa
cs
and
mov
mov
push
or
stos
jmp
dec
jns
aas
mov
je
loop
push
mov
test
repz
insl
jecxz,pt
mov
into
iret
dec
mov
lock
ficoms
int
das
lret
pop
inc
xor
stos
rcr
add
leavew
lods
xchg
imul
jb
insl
pop
lods
out
js
mov
stos
jo
adc
cwtl
mov
pop
clc
jecxz
rolb
rol
push
in
call
cmp
dec
cwtl
fldt
sbbl
out
imulb
push
jne
jmp
sub
dec
bound
int3
inc
fnstsw
sbb
loope
outsl
add
add
xor
push
jmp
cli
push
loop
jecxz
fs
mov
sub
xchg
pop
iret
cmc
fldenv
add
nop
lods
ljmp
repnz
and
jge
cwtl
sub
ja
pushf
das
and
push
idivl
and
add
in
data16
inc
fsubl
add
mov
stos
call
cmc
jno
pusha
cmp
lock
fsubs
test
iret
leave
movsb
je
and
mov
int3
cmp
xchg
call
push
jns
hlt
sbb
scas
xlat
in
and
test
mov
lods
pop
lds
or
adcb
pop
jp
aaa
pop
out
and
test
mov
jmp
jl
test
mov
mov
pop
mov
jno
cmp
sub
lock
lcall
pop
inc
cmp
leave
inc
mov
arpl
mov
into
mov
fs
sub
dec
hlt
sbb
and
imul
xchg
jmp
rcll
js
pop
loope
push
adc
lret
adc
faddl
sti
xchg
pusha
inc
sbb
and
jae
cld
out
adc
jbe
sbbb
dec
mov
jbe
dec
sbb
stos
std
mov
mov
adc
cmp
jp
adc
pop
push
popa
or
mov
push
sub
imul
pushf
lock
imulb
fstps
sub
aad
dec
ja
mov
xor
gs
hlt
mov
sbb
mov
loopne
loopne
fnsave
aad
pop
daa
sub
shr
xorb
and
pop
fmulp
data16
mov
inc
cmc
pop
jmp
or
add
lret
adc
xchg
mov
mov
dec
mov
mov
cmp
pop
mov
sbb
mov
cmp
data16
jecxz
mov
cmpsl
ljmp
cmp
out
negb
orl
aas
cli
jmp
roll
mov
dec
dec
daa
sub
xor
xor
mov
jmp
pop
push
loope
lds
in
cmp
mov
or
dec
add
and
push
movsl
fistpll
jge
fdiv
jb
or
mov
mov
dec
jo
es
or
stos
inc
xchg
insb
inc
sub
xchg
les
push
std
xchg
outsb
adc
ret
adc
cmc
pushf
aam
stos
pop
push
loope
push
sahf
fcmove
sbb
xorl
mov
adc
sarl
dec
fdivr
ret
mov
pushf
sub
daa
jle
cltd
and
test
push
adc
in
add
std
in
js
popf
pop
inc
cmp
in
add
popa
out
cld
mov
pop
gs
and
mov
stos
imul
icebp
in
push
ja
fisubl
pop
mov
pop
xchg
pop
shl
mov
push
dec
test
adc
sub
jae
outsb
adc
pop
cmpsl
daa
pop
jp
push
push
inc
lods
pushf
and
enterw
popf
js
pop
xor
adc
jg
movsl
xchg
sti
pop
shr
sahf
lds
js
or
iret
xchg
std
jge
movsl
ret
ret
jb
test
xor
adc
mov
push
inc
pop
ljmp
insl
ljmp
mov
and
add
stc
inc
mov
ret
sbb
sub
mov
xchg
adc
ja
cltd
inc
rcll
outsl
mov
insl
es
mov
inc
dec
mov
push
mov
adc
stos
dec
inc
stos
dec
test
mov
cmp
addr16
jae
xchg
jns
or
inc
ss
ss
repnz
sub
mov
xchg
inc
inc
orb
sub
mov
test
lods
ret
mov
nop
pop
xchg
cwtl
ret
or
or
push
push
xor
gs
sarl
mov
cwtl
inc
cmp
rorb
imul
jle
ret
jl
imul
popf
test
popa
je
mov
pop
in
ljmp
xchg
jg
pop
sbb
cmp
or
mov
lds
lods
scas
fistl
mov
andb
dec
aaa
outsb
and
xor
xor
loopne
sub
mov
xchg
mov
dec
rorl
sub
fwait
xchg
adc
inc
std
and
push
push
sti
push
std
lds
push
insb
xor
arpl
test
jo
cmp
mov
loope
adc
popa
imul
bound
ds
pop
inc
inc
jbe
insl
ss
popa
pop
out
jno
jl
xchg
cmpsl
out
out
test
movsl
sbb
inc
rorl
scas
in
fstps
dec
xchg
jge
ja
lods
cmpsl
inc
fnstsw
push
xorl
leave
out
mov
call
push
push
push
jge
test
sti
inc
mov
pop
dec
xchg
add
xchg
lds
mov
or
imul
or
mov
setle
xchg
xchg
sub
xchg
sbb
push
mov
addr16
mov
mov
out
pop
dec
xor
stos
cmp
sahf
pusha
and
xor
imul
jg
lea
dec
xor
adc
jnp
cs
mov
xor
mov
nop
in
inc
popa
fisubl
aad
sbb
shlb
or
push
mov
adc
xor
mov
ljmp
push
fistpll
add
outsl
in
mov
and
xor
imul
rorl
mul
pop
pop
mov
fcmovu
dec
lds
leave
mov
stc
lods
test
addl
in
lods
call
jns
and
lods
cmp
ds
push
fwait
aad
imul
repnz
inc
push
inc
enter
ljmp
popf
cmp
jbe
push
and
imul
in
popa
dec
push
push
xor
xchg
xchg
mov
sbb
inc
loopne
idivb
movsb
loopne
adc
jnp
ret
jg
sbb
pop
inc
imul
inc
in
scas
stc
nop
push
mov
lahf
enter
lock
inc
rcrl
popa
jno
jge
lds
sub
cmp
int3
dec
fmull
push
mov
mov
fdivrl
jbe
stos
mov
push
sub
fbld
insb
loopne
adc
test
cmp
adc
es
adcb
fnstenv
xchg
adc
hlt
pushf
das
sub
stos
pop
lcall
cmp
arpl
lret
scas
das
outsl
cmp
jge
sbb
push
mov
xlat
jnp
test
push
call
jae
in
stos
shlb
pop
mov
aaa
cmpsb
xchg
cmp
xchg
push
adc
jo
arpl
into
xchg
mov
sti
pusha
hlt
mov
pop
je,pt
pop
fcmovu
lcall
decl
xchg
or
sub
lretw
sub
stc
or
fs
sbb
ss
mov
pop
daa
mov
into
pop
and
and
and
mov
mov
enter
pop
xchg
inc
movsl
push
hlt
cli
push
data16
mov
dec
mov
lahf
lock
cmp
inc
rorl
or
les
outsb
aam
mov
sub
ds
pop
sub
push
in
mov
xchg
ffree
mov
repnz
mov
pop
shrl
sub
les
push
sub
inc
add
mov
cs
push
cwtl
push
loope
imul
pop
cmp
cmp
jae
mov
into
lea
addr16
and
test
sub
insl
out
xchg
and
xchg
mov
jbe,pn
push
enter
ss
inc
ljmp
jmp
or
xchg
jmp
cli
dec
mov
and
xor
fs
push
lret
mov
shrl
test
mov
ror
jbe
push
in
arpl
popa
insb
stos
adc
inc
lcall
mov
ss
out
rorb
inc
popf
inc
cmc
aad
xchg
popa
mov
or
cld
or
lcall
popa
adcb
loope
aam
hlt
xor
xchg
inc
aad
xor
rcrl
adcl
jmp
outsl
inc
sbb
icebp
sub
mov
pop
pop
push
pop
popa
nop
push
sbb
out
inc
push
and
out
push
pop
fsubs
mov
faddl
fbstp
loop
jb
jg
imul
xorb
out
mov
neg
cltd
push
jns
mov
cmpsb
mov
aaa
dec
xor
in
xor
add
jge
cmpsb
fidivl
pusha
mov
int
mov
pop
faddp
stos
fxch
jle
mov
hlt
imul
mulb
mov
mov
sub
js
push
mov
out
cli
push
popf
out
lret
lcall
push
mov
bound
idivb
cld
inc
cmp
and
jnp
cmpsb
insb
adc
fdivrl
sahf
pcmpeqd
jne
pop
or
cld
mul
addr16
sbb
pop
push
les
cmp
dec
mov
cwtl
int
imul
push
andl
lea
push
je
ss
fcomps
scas
sbbl
pop
out
mov
nopl
test
inc
aam
mov
nop
repz
cs
sbb
adc
into
cmp
xor
loopne
lds
mov
jne
inc
jbe
cld
xlat
into
cmpl
inc
jb
and
mov
stos
jne
test
adc
cltd
in
xchg
nop
ret
sbb
add
xchg
or
cmp
mov
shl
arpl
jle
push
pop
add
fcmovne
adc
incl
jg
icebp
arpl
dec
jg
add
mul
xchg
jmp
dec
pop
xchg
adc
cmc
mov
xor
push
mov
incb
adcb
jnp
cli
push
lcall
jno
aaa
adc
sbb
mov
or
ljmp
xor
aas
xor
andl
inc
ljmp
insb
imul
sahf
and
add
push
mov
mull
sub
xchg
xchg
ljmp
scas
js
enter
inc
addb
out
jae
cmc
cwtl
test
hlt
sub
ds
push
jo
dec
ret
movsb
rorl
js
movsb
sbb
loop
xor
push
sub
push
lret
push
arpl
rcrl
add
push
cmp
popf
xchg
jl
and
test
sbb
adc
mov
mov
add
movsl
data16
into
or
addr16
mov
sbb
ja
daa
movd
movsb
mov
adc
push
mov
aad
std
xor
push
xor
shll
xor
and
insl
stos
les
fldt
loopne
sub
push
rolb
int
int3
sub
and
rcrb
sarl
stos
repnz
push
push
hlt
rorl
jno
jbe
daa
and
sbb
mov
addr16
add
ljmp
mov
pop
fs
cld
aaa
push
xchg
cmp
aad
stos
fnstenv
push
ja
dec
mov
push
xor
sahf
xchg
sbb
cmp
out
or
testl
pop
push
xchg
pusha
scas
jecxz
imul
dec
mov
sti
sub
xchg
lods
repnz
movsl
mov
lods
push
jp
mov
adc
loopne
ljmp
or
fnstsw
fisubrl
xchg
daa
and
sbb
insb
jno
mov
sbb
dec
lret
inc
mov
jmp
ficoml
fsqrt
xchg
aaa
cmpl
shlb
cmp
add
jno
pop
xor
out
jno
out
lds
imul
pusha
fs
lcall
data16
sub
or
ret
clc
dec
xchg
aam
sti
movsb
fstpl
popf
cs
and
inc
notb
mov
inc
cmp
mov
sbbb
roll
push
cmpsb
or
xchg
jbe
mov
xor
jns
cld
jmp
in
inc
cmpb
xchg
pushf
cmp
pop
adc
xchg
fsubl
push
xor
das
dec
or
pop
cmp
or
bound
fisubs
sub
jnp
sbb
xor
add
mov
aad
aam
lea
jo
mov
mov
mov
mov
fsubl
sbb
push
sbb
xchg
aaa
es
xchg
cmc
sbb
mov
xchg
fstpl
mov
lcall
fs
shl
jmp
push
jae
adc
in
hlt
dec
jne
aad
push
jb
js
out
dec
sub
sbb
adc
push
sbb
and
test
shll
inc
and
lret
and
jl
flds
out
popf
mov
ss
cmp
ss
xor
xchg
push
sti
mov
sbbb
xchg
xor
xlat
jno
add
sahf
test
lahf
inc
or
scas
imul
scas
cmp
adc
psubusw
push
aaa
fsubrl
push
fidivs
cmp
sti
scas
hlt
dec
push
movsl
divl
add
testl
xchg
adc
je
icebp
mov
mov
enter
movsl
popf
lods
pop
ror
nopl
adc
pop
mov
inc
xor
std
xor
mov
insb
jns
iret
nop
idivl
movsb
orb
jnp
cmp
mov
add
nop
scas
es
daa
ficompl
push
lahf
ja
xchg
cmpsb
sbb
into
jmp
jge
xor
pxor
and
rcrb
imul
pop
inc
fisttpll
addl
sbb
cs
pop
aam
mov
les
xbegin
loopne
jl
addr16
jp
xchg
insb
fimull
dec
mov
pop
or
push
mov
clc
lea
pop
gs
sub
add
pop
jb
rclb
jge
inc
mov
mov
jmp
lret
ja
push
loopne
and
jecxz
dec
cli
repnz
push
cmp
jmp
xor
pop
push
mov
push
cmp
fdiv
xor
movsl
insl
push
jg
push
mov
pusha
aas
push
cld
dec
mov
scas
jo
pop
mov
adc
sub
add
add
add
mov
fidivl
enter
aaa
fstpl
cmc
in
adc
add
mov
jge
push
pop
pusha
shl
rorb
sub
push
popf
jg
and
in
in
je
push
and
cmp
into
push
test
and
and
es
imul
pop
push
fldcw
ficoms
pop
insb
aas
adc
or
mov
testb
adc
push
add
cmc
fidivrs
inc
cli
sar
pop
push
xchg
fldl
mov
dec
es
rorb
push
inc
xor
xchg
out
and
dec
xor
test
imul
xor
fwait
stos
sbbb
stc
mov
xor
test
je
dec
arpl
repnz
add
call
into
cwtl
fisubrs
and
push
xchg
cli
mov
or
jb
mov
ret
lods
movl
mov
nop
cbtw
sbb
push
mov
test
scas
scas
and
and
in
roll
lcall
test
adc
and
loop
or
mov
adc
enter
rclb
adc
iret
xchg
cmc
pusha
jne
gs
insl
arpl
stos
dec
push
adc
arpl
fisubl
popa
inc
ljmp
sarb
sub
mov
mov
out
dec
pop
fwait
jnp
scas
mov
jp
aad
inc
cmpsb
cmp
inc
mov
addr16
mov
and
pop
test
cmp
mov
lret
xor
add
xor
repnz
or
loope
mov
imul
mov
in
movsb
fcmovne
cmp
push
in
jle
out
cltd
in
ret
inc
inc
ja
daa
clc
sub
sbb
inc
insb
flds
lcall
outsb
add
imul
lds
loope
xor
lods
inc
cmp
aaa
rcll
insl
mov
inc
xor
xchg
shr
mov
jo
lds
rorb
stos
scas
sub
fldenv
sbbl
pop
movsb
mov
lea
sbb
add
ret
mov
xchg
loope
out
sbb
jl
mov
iret
sub
mov
xor
enter
loopne
sub
or
dec
cmp
mov
or
in
ljmp
insl
or
shll
inc
pop
jnp
shr
pushf
bound
xchg
or
inc
decb
xor
dec
gs
mov
jbe
daa
scas
bswap
loop
jecxz
shrl
lcall
ljmp
test
jmp
adc
rorb
fsubl
adc
rol
rorb
int3
jecxz
popa
add
jb
cli
roll
mov
pusha
sub
lds
aad
cwtl
xor
cmpsl
in
pushf
rorb
inc
ret
jnp
pushf
mov
inc
pusha
fisubrs
shlb
nop
ret
lods
jmp
dec
and
cmp
rclb
mov
xor
lcall
sub
xchg
xchg
mov
dec
lods
ret
sti
aas
inc
add
dec
or
mov
cmpsb
sbb
adc
jecxz
push
in
or
ret
rorb
sbb
xor
aam
out
adc
stos
mov
rcll
popa
jmp
sbb
xor
out
push
adc
jle
adc
cmp
dec
popf
adc
clc
xchg
aad
pop
jg
xchg
cli
cltd
pop
mov
sbb
xchg
addb
adc
jp
subb
rcrb
mov
mov
and
sahf
xor
sbb
sti
and
jae
jmp
imull
and
hlt
iret
in
cli
adc
and
ret
pop
push
adc
pop
fcomip
and
adc
cmp
adc
subl
pop
xor
xor
fmuls
adc
mov
or
iret
cmpl
mov
cmp
cmp
cmp
shr
adc
mov
movsb
push
fisttpll
in
cmp
adc
in
ss
dec
push
rclb
inc
sub
clc
scas
and
sub
popa
test
push
mov
iret
pop
dec
dec
add
sahf
mov
bound
ljmp
call
jno
lret
push
push
push
xchg
inc
push
lahf
sbb
fstpt
jl
jne
mov
pushf
pusha
iret
push
and
pop
cs
dec
jmp
pop
orb
add
in
push
stos
push
sub
sub
lcall
push
mov
and
jb
pop
push
int3
fisttps
dec
test
testl
ret
jmp
add
add
sbb
es
insb
sub
jb
push
shll
out
cmp
jmp
insl
cmp
mov
or
push
inc
imul
xchg
clc
push
out
sti
cmp
push
jle
jmp
sbb
pop
push
dec
mov
mov
std
std
fildl
cmp
and
xor
mov
add
cltd
lret
out
out
push
outsb
and
mov
idivl
cmpsl
lahf
cmp
jns
add
ljmp
scas
mov
inc
daa
inc
notl
jb
xor
push
adc
jg
sub
ficomps
hlt
mov
cmp
dec
pop
push
fucomi
pop
jecxz
jl
pusha
sub
sbb
jp
jae
inc
mov
outsl
xchg
inc
popa
xor
stos
and
in
mov
das
nop
jecxz
ss
and
cmpl
and
out
sbb
jl
xorb
subl
and
cmp
lea
or
fwait
push
popa
stos
popa
out
jo
xchg
pusha
cs
xor
ss
sub
cltd
jne
addr16
inc
inc
sub
mov
inc
dec
stos
aad
xlat
dec
jb
ficomps
push
dec
or
fbstp
push
call
jp
sbb
add
es
cmp
mov
cltd
ficoml
inc
inc
sbb
sar
iret
push
pop
xchg
mov
lds
outsl
or
mov
lret
mov
lret
xor
xor
inc
out
sbb
jno
xchg
dec
jle
test
mov
into
sahf
xchg
bnd
sbb
xchg
xchg
xchg
aas
mov
or
xor
lods
mov
sub
inc
mov
inc
and
mov
xchg
mov
dec
xor
insl
sub
cwtl
std
or
cli
cmp
repnz
adc
xchg
fdivrp
push
lcall
ror
jo
aas
sti
xchg
or
aas
push
push
cmp
divb
fstpl
outsb
cmp
jno
imul
call
test
repz
sub
sarb
mov
add
repnz
push
add
out
aam
mov
pushf
rcrl
pusha
popf
and
and
aaa
xorl
lahf
out
or
cli
dec
add
nop
test
add
ret
mov
cmc
faddl
adc
lock
aam
outsl
rcrl
and
stc
add
pop
rorb
dec
cmpsb
add
cmp
sub
cwtl
mov
cmp
jnp
jle
stc
cmp
lock
sbb
xor
lahf
cmc
xchg
mov
inc
or
filds
push
fs
stc
loopne
lcall
outsl
cs
fisubs
xchg
sub
inc
shlb
push
sbb
sarl
fsub
cmpsb
shrb
sbbl
test
xchg
insl
test
lahf
and
xchg
lods
sbb
ret
mov
mov
push
cmpsl
test
imul
aad
ret
and
lds
cmpsl
pop
mov
es
adc
and
mov
push
xlat
aad
adc
inc
add
movsl
cmp
dec
jle
in
sbb
psubusb
cmp
mov
icebp
cmp
pop
js
out
adc
mov
dec
push
jp
inc
rol
das
outsl
daa
adc
pushl
sub
xchg
lret
hlt
xlat
xchg
push
sub
push
imul
jno
jecxz
pop
fwait
repnz
xor
lods
lock
daa
push
mov
mov
add
fimull
xchg
mov
push
add
sbb
xor
jp
dec
mov
stc
jl
jnp
aas
xor
rcrl
mov
pusha
out
in
xor
and
push
cmp
sbb
xlat
mov
dec
sub
dec
mov
mov
sbb
movsl
out
bound
loopne
pusha
rcll
imull
adc
mov
out
xchg
test
push
lret
fucomip
aad
ss
cmp
pop
push
jne
xlat
sbb
insl
ss
bound
loopne
sbb
add
dec
xchg
adc
repz
pop
or
test
ja
mov
popa
shlb
and
or
push
test
fiadds
push
mov
ficompl
je
dec
inc
das
xchg
inc
or
mov
loopne
mov
jbe
fimuls
repnz
and
jne
xchg
jle
lods
mov
fstl
cmp
insb
mov
and
mov
adc
fnstsw
loope
out
stc
rclb
imul
in
iret
sub
addr16
mov
dec
cld
mov
clc
add
popa
and
icebp
jnp
das
ret
xchg
rorb
int3
dec
inc
mov
jle
stc
lcall
cwtl
lods
cmp
idivl
dec
das
loope
fisubrs
pop
popa
ljmp
adcl
not
cs
pop
and
jb
test
jmp
ljmp
fstpt
dec
inc
hlt
jbe
and
push
adc
scas
push
in
jge
dec
insl
push
sbb
ds
push
movsb
mov
in
xchg
mov
out
stos
aam
les
negb
pop
jns
xchg
loope
leave
xor
icebp
lahf
scas
jl
cmc
stc
fimull
pop
xchg
push
push
outsb
push
pop
sbb
lahf
sti
mov
enter
mov
pushf
xor
sbb
push
ret
inc
or
std
ljmp
xchg
cli
mov
add
push
rorl
mov
jg
call
xlat
imul
pop
fcmovne
add
jge
js
jno
es
fistpl
popf
push
negl
sbb
popf
cmp
dec
xor
les
loop
outsl
cmp
mov
leave
xchg
sub
inc
jle
xor
mov
sbbb
inc
data16
movsb
jb
push
in
ret
insl
xchg
jl
in
dec
lret
mov
cmp
mov
push
or
jnp
xchg
jno
popa
in
mov
dec
xchg
push
addr16
adc
jg
por
push
aam
push
cmpsl
mov
lds
das
in
xor
ds
gs
cmp
adc
xor
cmp
mov
add
insb
push
pop
fstpl
clc
mov
pushl
xchg
and
stos
pushf
insb
or
pop
enter
mov
jg
cmpsl
pusha
mov
adc
jecxz
adc
xchg
add
sbb
jno
pop
or
xlat
test
lret
jae
shl
test
sub
aaa
ss
aas
mov
dec
daa
fs
rorb
jno
repz
popf
xchg
lret
test
call
adcl
lds
fidivs
sbbb
mov
into
gs
sub
in
push
adc
repnz
bnd
pop
shl
lock
popf
xchg
adc
pushf
sub
xor
psadbw
mov
stos
xor
pushf
mov
les
arpl
mov
pop
inc
inc
pop
pop
cs
out
dec
std
xor
popf
mov
jnp
ljmp
cmp
adc
daa
clc
adc
movsl
or
dec
pextrw
mov
jg
imul
outsl
loop
add
out
dec
mov
cli
mov
mov
enter
push
xchg
xor
cmp
int3
or
xchg
fisttpl
cwtl
mov
or
jmp
stos
mov
mov
iret
xor
sub
xchg
fdivrl
push
movsl
or
jg
mov
jno
sub
fdivrp
xchg
addr16
sti
inc
pop
adc
sub
xchg
call
int
jo
pop
sbb
adc
cmp
mov
gs
jecxz
or
cmpsb
test
sbb
ret
cwtl
sbb
jp
dec
aad
js
popf
ret
pop
dec
rcrl
adc
adc
push
iret
xor
jmp
jae
jmp
push
dec
sub
and
icebp
or
and
add
lret
int
imul
xor
gs
dec
pop
xchg
xchg
pop
nop
xchg
int
sbb
shrb
and
ret
xor
je
repnz
out
cmp
repnz
add
je
sbb
es
cmp
aaa
mov
mov
loopne
cmpsb
mov
ss
dec
scas
mov
imul
add
xor
je
sbb
and
and
pop
jne
jl
stc
rorb
lahf
out
jecxz
ljmp
addr16
lea
sahf
mov
out
js
jp
push
mov
xlat
mov
popa
aad
lahf
jmp
bound
xchg
outsl
iret
dec
repnz
fcmovu
ficoml
sub
fimuls
negl
mov
sbb
mov
shlb
scas
adc
or
mov
jbe
jae
cltd
mov
ret
push
sub
test
and
adc
cmp
jl
je
push
movsl
ds
push
mov
pusha
push
dec
int
xchg
data16
mov
jns
or
sbb
out
jp
inc
fisubl
sahf
mov
mov
or
fnsave
cld
out
or
xchg
enter
xchg
in
push
andb
icebp
xchg
shl
adc
adc
pop
mov
push
in
or
cmp
push
mov
rcrb
js
mov
dec
scas
cld
pop
xchg
ja
xchg
xor
mov
xchg
rolb
imul
mov
fcmovnu
push
cmp
mov
out
cmp
dec
imul
jle
pop
cmc
jg
popf
mov
fdivr
lret
push
hlt
cmp
icebp
scas
lahf
dec
or
lods
mov
xchg
or
mov
adcl
out
jns
cmc
add
xor
mov
inc
cmp
aaa
adc
cmp
mov
cmp
cwtl
sti
sub
pop
and
mov
movsl
fs
ja
jmp
and
cmp
int
insb
lret
mov
add
leave
mov
stos
cmc
jmp
and
rorl
push
jns
dec
test
add
cmp
cmpl
addr16
mov
mov
or
sub
sbb
inc
mov
outsl
push
mov
imul
arpl
test
mov
mov
add
or
orb
xchg
ja
lret
mov
dec
sbb
jmp
mov
arpl
fwait
ja
or
pop
loopne
mov
rcll
cwtl
outsl
jg
and
pop
adc
fldln2
mov
xchg
aad
test
add
lret
jno
xchg
into
fisubl
cs
cld
sub
aas
mov
pop
aad
aad
sub
testb
sysexit
out
insb
and
pop
shlb
mov
inc
push
negb
cmc
xor
mov
adc
setl
pop
pop
xchg
cld
out
and
push
int3
popf
pushl
push
mov
sbbl
ret
lods
adc
mov
sbb
cwtl
dec
xor
out
fcompl
aam
pop
push
push
add
adc
lret
mov
lods
pop
mov
jbe
sbb
mov
lret
imul
jne
scas
jp
in
into
add
jmp
push
jnp
enter
mov
test
subb
imull
dec
cmp
out
push
orl
mov
xor
pop
popa
sbb
sub
sbb
mov
ficoms
es
jmp
test
outsl
in
test
insl
xchg
mov
cmp
out
adc
jo
mov
in
hlt
cltd
sbb
pop
fcoml
sar
lea
shlb
push
xlat
push
cmp
dec
cmp
adc
xchg
or
push
mov
insb
test
imul
push
imul
hlt
push
cmpsb
sub
sbb
inc
adc
lahf
pop
push
sub
pushf
mov
andl
xchg
lea
dec
sbb
int
jg
jb
lret
push
xchg
daa
stos
call
nop
in
mov
mov
cmp
out
mov
or
imul
mov
add
lock
dec
lahf
les
sti
repz
bound
daa
notl
mov
out
adc
pop
leave
scas
sub
inc
mov
stos
jns
add
out
add
mov
test
shlb
push
arpl
push
fs
and
mov
icebp
test
cmpsb
stos
in
cld
mov
mov
fistl
and
inc
andl
mov
cmp
outsl
add
incl
scas
and
sub
fisttpl
push
dec
repz
dec
mov
int
pop
enter
lret
and
cmp
jmp
test
xor
subb
cmp
push
test
adc
into
adc
push
cmp
inc
inc
and
mov
push
inc
enter
pusha
push
sbb
pop
push
scas
pop
dec
out
jp
shrb
mov
mov
lock
mov
lcall
fsubrs
pop
enter
lahf
mov
pop
push
addr16
mov
add
cs
push
jae
jbe
test
movsl
sub
outsb
fidivs
fisttpl
mov
cmp
xor
push
and
pusha
mov
pop
and
mov
inc
neg
xor
jecxz
pop
adc
dec
imul
lock
fldt
dec
popa
subb
dec
daa
jmp
pop
arpl
aaa
cltd
pop
mov
push
cli
cmp
pusha
dec
in
into
lock
add
or
lds
sub
notl
cmpsl
xchg
into
mov
xchg
mov
mov
faddl
ds
mov
and
or
xor
jmp
dec
sub
jmp
xlat
inc
push
ja
xchg
xor
sub
sbbl
push
in
pushf
lea
or
xchg
mov
sahf
mov
imul
aad
fists
sub
aam
mov
pop
pop
mov
mov
sub
adc
imulb
jmp
dec
dec
sbb
test
shlb
ds
dec
cli
lret
mov
xor
pop
adc
inc
cwtl
repnz
dec
es
xor
das
adc
sti
arpl
cmpl
jge
fisttps
push
mov
movsb
and
xor
leave
or
mov
loope
xchg
mov
cld
dec
dec
sub
sub
pop
push
scas
outsl
addr16
xchg
add
dec
xchg
in
jne
mov
push
repz
outsb
xor
leave
loop
sbb
lret
cmpsl
adc
ljmp
cmp
push
cs
in
push
subl
mov
or
jb
xchg
xor
mov
fiaddl
mov
push
ja
push
add
clc
test
sahf
jbe
mov
pop
jecxz
inc
or
mov
sbb
sub
cmpsl
repnz
jmp
stc
das
mov
inc
notl
imull
pop
out
cmp
cmp
andl
sahf
dec
mov
mov
es
sbb
shlb
jne
loopne
and
nop
or
and
xchg
push
pop
testl
mov
das
in
shll
adc
jnp
mov
push
cmp
pop
in
sbb
mov
push
xchg
test
in
ret
inc
push
leave
sub
imul
icebp
xchg
jp
mov
jmp
push
scas
js
pop
cmp
lret
stos
push
lds
mov
ret
pusha
je
inc
es
xor
mov
lods
adc
jbe
xor
movb
popa
in
push
xchg
mov
out
dec
je
mov
mov
mov
data16
pop
mov
pop
aam
out
mov
idivb
mov
mov
das
shlb
stos
sbb
jg
mov
data16
enter
adc
push
or
mov
mov
jb
repz
sub
stos
fadd
dec
dec
sti
out
and
out
pop
cmp
lds
xor
mov
out
mov
hlt
mov
fs
fbld
jbe
int3
mov
push
aad
ja
clc
out
xchg
add
mov
roll
dec
and
jno
adc
push
fisttpll
jp
popf
push
xlat
xchg
cwtl
add
in
and
sarb
shll
rorb
loopne
test
and
popf
rcrb
pop
push
out
jbe
adc
and
mov
mov
les
out
mov
je
mov
sub
cmp
stos
dec
mov
inc
outsb
inc
push
fdivrl
or
xchg
pusha
ds
incb
insl
int
cmp
dec
cmp
int3
je
orb
in
ficompl
jp
xlat
enter
mov
fwait
into
pop
push
dec
dec
add
std
mov
and
out
dec
sbb
push
je
push
xchg
jg
push
rorb
mov
int3
adcb
loop
and
outsb
sub
and
dec
das
pop
and
cltd
leave
enter
movsb
out
rol
cmp
faddl
or
pop
mov
popa
rorb
adc
int3
adc
mov
pop
pop
cmpsl
push
mov
ret
dec
mov
lret
enter
filds
ja
rcrl
mov
imul
ss
out
jle
sub
fidivs
fistl
mov
mov
adc
xor
fs
adc
adc
sub
imulb
adc
xor
imul
jno
icebp
bound
fcmovb
or
out
fstl
int3
addl
test
jae
xor
cmp
xor
js
loopne
add
or
sti
sbb
sbb
sub
sbb
rcrl
and
jne
cs
outsl
daa
enter
sti
xor
cli
out
mov
xchg
ret
xor
push
fcompl
sub
jae
leave
jmp
out
call
xor
insl
out
scas
out
pushf
push
jno
retw
dec
xchg
rol
adc
add
mov
xor
mov
repnz
push
imulb
leave
shrl
insb
inc
or
ss
repnz
pop
xchg
lcall
dec
decb
pop
xchg
dec
mov
addr16
pop
jmp
or
add
ja
add
nop
mov
cld
je
xor
movsl
arpl
dec
pop
mov
lret
sbb
in
dec
lret
push
movsb
pop
jns
loope
insb
popf
and
cmp
repnz
bound
fstl
arpl
mov
leave
lods
gs
mov
cmc
roll
vmwrite
scas
fbstp
out
sbb
pusha
pop
push
sbb
daa
test
xlat
and
std
int
lahf
mov
test
mov
fnstsw
sti
sub
pand
int
cmp
cmp
ret
repnz
int
scas
std
adc
out
mov
je
jbe
ret
mov
popf
jg
dec
pop
add
mov
sbb
aaa
jae
dec
pop
sub
lahf
inc
dec
shl
add
scas
mov
dec
hlt
push
jae
jnp
xchg
in
repnz
pop
mov
in
outsl
and
push
and
mov
je
sub
insb
clc
mov
fisubs
mov
ja
xchg
loopne
adc
inc
sub
xlat
xor
jmp
in
in
mov
mov
or
mov
dec
fs
pusha
sub
repnz
repz
insb
data16
mov
xchg
insb
into
fcmovnu
inc
repnz
xchg
lea
iret
mov
stc
cmp
and
out
lret
mov
test
ror
push
dec
dec
jnp
cltd
jle
imul
js
sbb
rdtsc
mov
xchg
cwtl
sbb
shlb
js
test
fstpt
and
xor
int
les
sbb
jb
adc
mov
negb
imul
jmp
lods
int
cmp
pop
sbb
rcrl
adc
scas
mov
cmp
leave
adc
sbb
xchg
cmpsb
jmp
arpl
stos
fxch
or
mov
stc
cwtl
push
mov
cmp
push
push
add
cmpsl
shrb
lret
xlat
lods
or
pop
pop
imul
mov
test
add
movsb
lods
fdivs
jmp
leave
push
pop
mov
or
fsubl
or
or
orl
outsl
stc
test
pop
leave
dec
lock
push
add
dec
ljmp
pusha
enter
dec
mov
les
enter
xchg
lods
outsb
or
xchg
mov
cmp
out
sub
rcll
in
xchg
fstpt
loopne
add
add
scas
inc
add
int
jbe
dec
stos
jne
scas
negl
ds
mov
push
subl
dec
mov
lea
mov
mov
sbb
ja
cli
push
sub
stc
cmpsb
idivl
addr16
or
sub
lods
std
mov
decl
sbb
clc
mov
cwtl
pop
pop
jbe
mov
pop
dec
cmpsl
ficoms
addr16
mov
or
jg
pop
cli
cmp
fcompl
xor
sbb
jecxz
idivl
lods
inc
mov
and
xchg
dec
sub
in
adc
jge
add
mov
dec
inc
ret
jp
nop
dec
pop
inc
cltd
cwtl
xchg
add
lret
xchg
mov
add
dec
in
jo
pushf
push
cmpsl
mov
sub
pop
mov
dec
test
shlb
push
loopne
shl
adc
mov
mov
gs
xchg
ficomps
sbb
cld
data16
jae
xchg
jge
mov
push
ds
and
mov
repnz
add
in
ja
out
push
cmp
inc
pop
dec
mov
je
lahf
data16
mov
fsubrl
mov
ret
dec
mov
imul
loop
mov
jnp
js
sub
mov
pop
sbb
cmp
fcmovu
push
xchg
inc
adcb
aam
test
mov
cmp
sahf
sarb
lds
pop
jle
xchg
cmc
lock
inc
inc
daa
mov
lret
lahf
push
adc
lea
mov
push
mov
cmp
aaa
pop
je
addl
push
jne
mov
mov
sbb
mov
clc
jle
cmpsb
or
fadds
and
addb
orb
sbb
xchg
scas
cli
insb
xor
aaa
mov
stos
test
es
jbe
out
cmc
mov
ftst
std
lahf
xor
jp
xchg
incl
imul
sub
js
inc
aad
enter
add
fs
xlat
lea
jmp
mov
sbb
xchg
mov
popf
or
es
lock
lret
sbb
push
jl
cmc
mov
add
cmp
mov
das
shll
jo
inc
shrb
ljmp
icebp
sbb
test
in
adc
pmulhuw
add
fbstp
sub
mov
sub
pop
or
cmp
inc
push
sub
mov
das
stos
and
push
inc
cmp
iret
insl
inc
adc
sbb
outsl
and
enter
mov
and
out
mov
pop
cmp
fucomip
das
and
daa
decl
fisubs
add
cmpsb
incb
in
jge
insb
pushf
dec
stos
loop
pop
inc
inc
icebp
push
sbb
xor
xor
sbb
or
push
mov
flds
xchg
cmp
push
jl
outsb
aad
dec
movsb
jge
cmpsl
adc
insb
sub
cmp
add
cmc
outsb
dec
dec
fstps
push
sbb
negl
inc
les
sub
pop
mov
imul
test
jbe
xlat
inc
sbb
mov
stc
pop
xlat
and
test
add
rcrb
repz
insl
jns
daa
pop
neg
adc
movsb
mov
mov
cmp
insl
adc
mov
jno
sarl
jg
addb
cmc
mov
sarb
xchg
add
cmpsl
addr16
mov
mov
push
shll
inc
or
dec
push
inc
xor
jne
mov
pop
testl
cmpsl
push
fnstcw
cltd
xchg
mov
ja
dec
xor
add
push
test
mov
lea
pop
cmp
adc
stc
test
leave
adc
repz
cmpsb
dec
mov
and
xorl
arpl
test
scas
movsl
sub
mov
xchg
fsubrs
nop
cmp
in
jmp
mov
fnstcw
mov
xor
inc
ja
imul
and
push
ljmp
sbb
adc
fwait
jp
xor
jae
jl
scas
sahf
loop
lods
jp
fcmovnu
fidivrl
lret
fs
jl
ds
xchg
mov
xchg
xor
jg
jnp
push
cmp
data16
mov
lods
pop
xor
push
mov
mov
jo
scas
and
mov
and
pop
imul
xchg
mov
sub
call
in
and
test
test
flds
adc
lods
shlb
cwtl
das
sbb
cld
or
pop
fwait
lods
add
les
cltd
and
inc
stc
mov
inc
and
mov
mov
test
or
inc
jns
popa
mov
pop
sbb
and
mov
push
sub
adc
outsl
jb
mov
int
popa
adc
inc
pop
inc
sbb
stos
xchg
mov
into
sbb
pop
jns
sub
jecxz
out
insb
fs
imul
xor
icebp
cmp
neg
aaa
notb
and
insl
xchg
and
es
xlat
out
sub
int3
push
mov
in
add
xchg
in
ret
fstps
ficompl
cmpl
cmp
adc
lds
loop
jne
adcb
adc
call
dec
lds
pop
mov
dec
mov
scas
mov
dec
sub
cmp
outsl
push
das
pop
add
cmp
bound
fsubr
mov
in
xor
mov
pop
arpl
fiaddl
adc
jge
ret
negb
fistpl
pushf
cmp
xchg
gs
mov
repnz
nop
fsubrs
rcl
add
fdivr
xor
xchg
aad
stos
and
bound
mov
mov
test
mov
in
pop
nop
mov
jecxz
and
inc
push
test
mul
sbb
cwtl
hlt
lods
mov
xor
cs
and
cmc
stos
push
shlb
lret
outsb
frstor
xlat
mov
xchg
xor
scas
lret
inc
dec
push
push
aad
jge
cmp
testb
lret
xchg
dec
pop
inc
xor
repz
rcrl
jo
insl
packsswb
fwait
jo
inc
cmp
idivb
mov
mov
and
mov
pop
xor
out
negb
xor
xchg
test
dec
jo
mov
roll
mov
inc
adc
sbb
ret
popa
lret
add
jne
sub
fidivl
mov
pop
imulb
mov
aas
sbb
cmc
dec
lret
iret
imul
mov
mov
mov
xor
popa
out
mov
sbb
adc
sub
xor
sti
xchg
and
aaa
pop
mov
xlat
or
stc
popf
sbb
pusha
in
pusha
cmpsb
add
in
xchg
push
sub
loop
std
addr16
fmull
xlat
mov
repz
mov
add
ret
push
mov
outsb
mov
repz
cmp
nop
outsl
mov
pop
leave
aas
sub
jmp
aas
das
push
rcrb
mov
je
jecxz
pop
int
fcmove
pushf
cld
pop
mov
shl
jecxz
mov
scas
dec
xchg
xchg
jns
es
or
adc
test
mov
mov
mov
aaa
lcall
inc
fneni(8087
xlat
loopne
xorb
icebp
xchg
movsl
jge
and
rcrb
mov
rorl
aam
or
les
ds
ljmp
mov
pop
stc
add
repz
aas
sub
adc
push
out
add
push
aad
in
cmpsl
mov
ljmp
add
jno
and
lock
jg
push
out
addr16
outsl
xchg
or
adc
cmpsl
adc
cld
imul
cmc
inc
testb
adc
shll
mov
dec
cmc
or
mov
mov
and
jp
xchg
sub
divl
flds
sti
or
sbb
push
in
push
jno
dec
dec
lds
inc
and
int3
cmpsl
sbb
jg
aaa
outsl
sbb
in
pop
xchg
mov
lcall
loopne
out
dec
mov
jg
mov
daa
mov
int
pusha
cmp
dec
test
out
jb
push
mov
cli
mov
dec
inc
movsb
or
add
andl
pop
ret
shll
and
xchg
insl
lock
mov
icebp
fbld
ljmp
es
dec
cmp
enter
or
loopne
push
leave
sub
xlat
stc
adc
and
push
outsl
mov
or
push
cmp
lock
mov
pop
mov
adc
adc
lahf
iret
in
mov
outsb
pop
icebp
jge
or
into
mov
sub
pop
mov
mov
lods
les
test
dec
movsb
pop
lahf
cmp
sbb
and
fldcw
jns
aad
dec
imul
push
mov
filds
ljmp
incb
andb
sub
pop
sub
in
mov
andl
or
dec
je
fnsave
add
xchg
pop
mov
push
inc
cld
push
cmpsl
outsl
pop
sbb
int3
push
cmpsb
xchg
inc
hlt
pop
and
xchg
xchg
inc
test
nop
aas
adc
cli
or
jnp
adc
clc
mov
and
ret
jp
mov
sbb
ds
dec
loope
in
aam
fdivp
jecxz
iret
and
into
jo
enter
inc
enter
inc
mov
add
imul
push
lret
dec
push
sarb
addr16
lret
mov
mov
test
sub
xchg
sbb
ds
stos
mov
add
test
and
jbe
and
xchg
ret
aaa
jecxz
sbb
je
lret
mov
imul
mov
aam
leave
inc
push
sbb
adc
ds
jmp
daa
mov
sub
sub
pop
stc
cmc
mov
ficoml
lcall
push
rolb
mov
push
addr16
pop
jns
mov
sti
dec
cld
call
sub
xchg
xchg
mov
xchg
push
in
adc
add
test
mov
sahf
ds
stos
pop
rcrl
inc
rcll
insl
stc
rclb
je
out
movsb
fwait
ret
push
jle
gs
xchg
loope
or
xchg
mov
ret
cmp
in
lods
cmp
addr16
mov
loopne
aaa
xchg
push
mov
out
jmp
push
jnp
adc
rolb
cmp
mov
lds
adc
das
jno
negl
or
or
sub
cmpsb
dec
or
xlat
or
pop
mov
bnd
xor
xchg
fisubs
movsb
sbb
popa
push
or
sub
cmc
push
mov
es
mov
xchg
in
jle
or
add
shrl
mov
insb
stc
call
movsl
pop
pop
out
cmp
std
xchg
pop
lds
repz
popa
in
add
pop
mov
sub
aas
xchg
popa
cmp
push
lock
lods
mov
jmp
or
sbb
popf
test
out
shrl
or
scas
push
imulb
aad
inc
sub
mov
pop
push
xor
in
jmp
cmp
inc
jge
mov
or
push
ja
notl
lea
push
or
jne
aad
sbb
ficoms
mov
outsl
xlat
mov
mov
or
je
adc
xchg
xor
out
xchg
inc
je
or
inc
imul
faddl
imul
jmp
lcall
adc
jl
inc
cmpsb
adc
les
out
mov
push
adc
ja
fs
je
outsb
mov
iret
gs
jb
push
inc
pop
mov
aaa
add
repnz
mov
xchg
fmull
push
sub
pop
cmp
push
xchg
pop
xchg
fwait
lret
and
pop
jp
gs
and
out
iret
dec
movsl
lahf
fimull
pop
pusha
fdivrl
adc
cmp
inc
xor
das
movsb
inc
out
sub
cmpsb
cmpsl
jecxz
push
xchg
jo
push
clc
push
out
or
xor
idivb
aad
or
push
cltd
inc
mov
mov
adc
and
aas
insb
dec
jecxz
or
cmp
xchg
sub
data16
jmp
inc
jo
adcb
lret
sahf
in
mov
jae
test
mov
stc
stos
cmp
cwtl
mov
jns
xchg
jle
xchg
cmpsb
push
mov
jo
fcomps
xlat
pop
daa
out
inc
adc
pop
cmp
mov
cmpsb
je
mov
cmp
fists
stos
lea
stos
adc
push
mov
insl
xchg
push
jno
push
test
inc
movsl
into
push
jns
test
add
dec
mov
iret
pop
add
mov
pop
out
jge
leave
sub
xorb
mov
xchg
and
cmpb
out
push
and
dec
push
pop
and
test
les
mov
add
subb
imul
std
xchg
sar
sub
mull
iretw
jnp
jg
push
leave
ret
mov
xchg
pop
sub
push
jb
inc
mov
mov
xor
das
outsb
scas
mov
and
aaa
adc
inc
fisttpl
icebp
movsb
dec
call
mov
testl
or
or
sahf
xor
pusha
mov
lea
loop
cmpsl
push
sahf
clc
sbb
pop
and
add
shlb
pop
popl
xor
cmpsl
int
mov
into
jne
xchg
and
mov
xchg
mov
adc
dec
jle
repz
mov
cs
and
in
lcall
dec
out
insl
sbb
lods
cmp
inc
iret
test
mov
ss
out
jp
push
shlb
addr16
cmp
int
insb
dec
xchg
addr16
andps
dec
cs
mov
cltd
cmp
fsubrs
dec
mov
pop
nop
insb
out
xchg
lock
pusha
ljmp
xor
mov
addr16
sbb
popfw
or
xor
mov
xor
xchg
nop
mov
sub
push
call
push
and
xchg
or
sbb
dec
jnp
and
jbe
int3
jl
sahf
icebp
push
adc
fstl
sub
pop
jne
and
test
xlat
jnp
outsb
mov
push
and
fcomps
mov
adc
dec
push
mov
push
inc
cld
mov
xchg
push
push
insl
push
in
pop
nop
mov
jbe
pop
test
inc
cmp
dec
mov
pop
mov
stos
lods
fimuls
cmp
scas
cmp
sub
push
mov
lock
inc
inc
aam
lds
pop
or
mov
push
xchg
mov
mov
pop
imul
or
dec
fildll
lods
pushl
or
pop
sbb
or
dec
outsb
sub
xchg
mov
pushf
mov
mov
aas
cmpsl
inc
fstpl
pop
and
pop
xchg
into
test
pop
cmp
cs
loop
jbe
mov
sub
xor
pop
jg
testl
dec
jp
add
mov
out
int3
jp
cmp
lock
std
std
dec
aam
jl
popa
jmp
ljmp
repz
mov
mov
filds
xor
and
adc
repz
repnz
inc
or
loopne
fldl
dec
jns
jmp
sbb
mov
punpckldq
int
test
add
in
jae
jae
pop
addr16
ljmp
mov
sub
jb
push
loop
xchg
lods
sbb
scas
mov
xchg
jo
jg
sub
sahf
movsb
dec
ljmp
imul
and
dec
and
push
jl
mov
loop
insl
xchg
clc
ret
sub
pushw
mov
xor
xor
call
push
pop
inc
pop
push
cmp
rcrb
add
int3
lret
add
xchg
lods
cld
call
cmpsl
pop
sahf
pushf
sbb
into
and
cmp
sti
leave
jb
xchg
push
cltd
hlt
push
cmp
daa
insl
and
xchg
mov
ret
js
cmp
outsl
sub
xorb
add
test
xchg
dec
stos
add
shlb
or
enter
lcall
addl
fldenv
pusha
push
jecxz
push
je
scas
addb
and
pop
shll
movsl
sub
into
or
xchg
lret
sbb
sti
rorb
inc
jge
cmp
dec
push
jae,pt
ret
aam
lcall
mov
andb
outsb
loop
jb
imul
shlb
into
ja
insl
and
mov
ljmp
fisubs
xor
aad
out
into
jle
movsb
cwtl
sbb
pop
lret
dec
loope
dec
jg
daa
xchg
xchg
or
pop
icebp
mov
repnz
pusha
scas
imul
push
sub
jecxz
mov
jb
je
jecxz,pt
cwtl
inc
inc
sbb
add
jns
push
rcrb
adc
out
sub
sbb
test
sub
pop
xchg
jae
sbb
adc
xorb
repnz
xor
outsl
in
lahf
fcomi
lds
arpl
loopne
hlt
mov
cltd
pushf
jmp
adc
das
mov
mov
cld
inc
rorb
pushf
imul
and
mov
imul
xchg
out
xlat
out
mov
movsl
test
ss
cmpsl
icebp
test
clc
jbe
mov
dec
frstor
int3
lret
cmc
mov
aad
adc
loopne
mov
adc
in
dec
sub
mov
dec
insb
and
in
pop
pop
push
stc
cltd
mov
jp
std
mov
arpl
icebp
mov
cmp
ljmp
lods
cmp
sbb
jg
push
pop
gs
sub
mov
rcl
lret
out
push
xchg
mov
loope
mov
sarb
mov
pop
mov
std
sarb
pop
lock
scas
push
add
jmp
mov
stos
adc
sbb
dec
ret
sub
push
xlat
ds
lret
lock
add
ret
das
jl
xchg
in
sbb
mov
push
jge
adc
push
out
lods
inc
jo
pop
jb
cmp
and
test
inc
add
into
jo
or
push
lahf
mov
inc
adc
dec
xor
bsf
inc
aas
fsubrl
fisubrs
clc
fimuls
sub
ds
sub
shlb
aad
inc
popf
call
pop
push
inc
mov
push
push
pop
sub
loop
out
inc
inc
sbb
sbb
imul
add
sbb
adc
test
call
jp
mov
cmp
sti
add
scas
cmp
or
mov
repz
xchg
lea
out
je
push
xchg
mov
push
and
mov
adc
jmp
sti
fs
push
cmp
jecxz
out
sub
hlt
lret
in
add
pusha
pusha
lods
call
loopne
jmp
jb
incl
out
xor
push
or
aas
jnp
fsubrs
mov
push
fsub
sub
and
pop
fbld
mov
inc
push
xchg
loope
test
push
test
aaa
cmpsb
stc
fidivrs
inc
leave
fdivrs
mov
cmp
sub
xchg
dec
loope
insl
iret
xchg
push
xor
mov
and
dec
frstor
std
xor
data16
call
cmp
sbb
mov
sbb
lds
es
std
mov
and
xchg
pushf
enter
push
inc
pop
jae
push
xchg
sbbl
jnp
pusha
test
out
pusha
pop
cmp
pop
ja
pop
inc
pop
xchg
mov
push
add
ret
ret
mov
dec
scas
jmp
loope
insl
jge
stos
jnp
push
in
or
sahf
xchg
cmpsl
int
sub
aas
shl
adcl
enter
lahf
outsb
sbb
sbb
out
cwtl
add
ss
rol
dec
test
adc
inc
test
add
and
hlt
xor
enter
sub
cld
dec
or
pusha
sbb
jbe
jmp
sbb
sahf
fst
pusha
add
fisttpl
pop
mov
jns
cmp
dec
sub
das
sarl
mov
dec
scas
sub
mov
aam
rclb
ss
divb
jne
push
fistl
jle
test
jp
pop
rcrb
xchg
pop
aas
fs
push
out
out
outsl
dec
lds
pusha
loopne
dec
dec
sub
or
cmp
mov
and
shl
enter
enter
adc
sahf
movsl
inc
js
xchg
sbb
xchg
xlat
fcmovnu
sub
inc
int
outsb
push
mull
sub
sbb
divb
popl
callw
sbb
mov
sub
out
lea
xor
dec
int
mov
pushf
data16
les
ret
hlt
je
call
popa
dec
pop
pushf
lcall
jmp
ror
jge
jae
inc
mov
sub
orb
in
std
and
pop
in
out
mov
push
addl
add
dec
xor
loope
pop
lods
xor
stc
jmp
aad
sarb
jne
jae
push
mov
ret
sub
jg
fdivl
inc
jno
inc
stc
inc
enter
mov
lret
loope
rorb
mov
out
push
cmpsb
inc
cs
mov
rcrl
jns
test
mov
pop
loopne
mov
push
fwait
mov
adc
push
mov
pop
mov
into
mov
clc
pushf
sub
xchg
outsl
das
add
mov
daa
sub
push
adc
arpl
jnp
pop
and
push
cmp
mov
insl
pop
xchg
faddl
cmp
cmpb
sub
fistl
cmpb
mov
fcomps
stos
mov
mov
sahf
xchg
into
nop
insl
pop
dec
adc
out
inc
pop
in
imul
mov
pop
mov
rolb
insl
imul
out
in
or
ficoml
insl
fs
sub
sahf
mov
out
add
cmpsb
cmp
inc
inc
jo
incb
lds
aad
stos
mov
push
add
jmp
jg
inc
push
cmp
shlb
mov
stos
dec
sub
std
roll
sub
data16
in
jp
sbb
cs
jb
cmp
mov
fdivs
mov
inc
sbb
outsb
je
dec
mulb
xor
mov
push
add
inc
xchg
xor
insb
cmpl
dec
cmc
ja
test
call
data16
cwtl
inc
cwtl
cmp
and
dec
das
push
dec
fcmovnbe
arpl
mov
mov
pop
dec
clc
rcl
testb
mov
cmp
pop
xor
hlt
jmp
add
in
and
fildll
mov
loope
cmp
inc
iret
xchg
ljmp
xchg
cmpsb
lods
repnz
daa
cmp
lsl
sub
int
aad
adc
xchg
into
notb
mov
orl
mov
in
addr16
jge
or
dec
stc
jecxz
aas
fcoml
movsb
mov
adc
jecxz
mov
and
fdivrp
pop
jmp
loopne
sub
pop
add
or
sub
cs
nop
enter
ljmp
outsl
lea
pop
or
sub
jb
insb
cmp
cmp
mov
lcall
lods
fs
cmpsb
nop
int3
push
pushf
mov
cmpsl
fwait
ja
iret
xor
in
rorb
push
push
sub
xor
cs
push
movq
loop
pop
pop
in
test
pop
bound
dec
stos
fs
getsec
dec
xor
sub
es
cld
sbbb
adc
mov
push
xor
ja
xor
incl
mov
je
loop
cmp
mov
test
call
jle
leave
pop
stos
roll
push
psadbw
xchg
fdivrl
ds
add
cmp
jo
add
sub
shll
push
in
enter
mov
leave
inc
shrb
sbb
push
xchg
sub
sbb
mov
data16
fidivrl
in
roll
dec
cmpsb
add
cmp
out
sbb
jb
cmp
or
aas
stos
outsl
push
ljmp
sub
or
sbb
aaa
mov
lret
scas
jne
pop
loope
sahf
outsl
add
repnz
shll
sar
jp
sub
scas
std
push
out
mov
add
inc
aaa
imul
out
andps
es
orl
les
in
mov
popf
fs
out
out
hlt
pusha
push
into
and
xchg
jmp
adcb
and
loopne
adc
xor
scas
push
sti
jbe
add
into
push
ror
mov
aam
fmul
stos
out
shrl
enter
pop
aaa
imul
std
mov
xchg
and
push
jg
dec
mov
test
jnp
nop
adc
test
cmp
mov
scas
loop
imul
cmp
out
sub
mov
pushf
and
pop
mov
xchg
add
cwtl
and
dec
imul
insb
dec
mov
aam
dec
push
sub
arpl
popa
shlb
inc
cltd
xor
mov
dec
andb
repnz
int
push
lea
inc
lods
mov
mov
jns
movsl
data16
mov
jae
mov
dec
xlat
pop
pusha
sbb
ljmp
push
popf
js
pop
sbb
or
adc
xor
adcl
push
jl
jno
sub
mov
mov
sub
xor
inc
inc
es
roll
lcall
cmc
inc
fucomp
ret
xchg
add
aad
fildll
aad
insb
push
sbb
aaa
lea
pop
xchg
sub
les
pop
xchg
mov
in
enter
add
jbe
add
and
repz
mov
pushf
push
shll
sbb
in
or
mov
shll
jge
leave
mov
mov
inc
dec
cs
shll
adc
and
insl
pusha
xorl
push
sbbl
xchg
cmp
nop
dec
data16
add
fcmovb
push
pop
adc
in
xor
sahf
cmp
inc
or
lea
mov
jae
sbb
movsb
iret
in
sbb
mov
outsl
add
movsl
mov
dec
dec
add
mov
sub
ficomps
fimuls
pop
dec
pushl
xor
mov
test
daa
test
sub
cmp
xchg
xchg
in
fsubrl
jp
cmp
sbb
adc
std
inc
adc
cmp
xchg
pop
das
mov
jno
cmpsl
movsl
fs
xchg
rcr
imul
test
jp
std
adc
iret
gs
nop
inc
das
add
pop
push
nop
iret
pop
mov
add
pop
xor
or
or
xor
pop
lds
cmc
jl
insl
out
dec
inc
xor
push
mov
aas
sbb
inc
popa
mov
mov
pop
out
sbb
add
sbb
loopne
std
jb
faddl
arpl
into
rep
and
aam
sub
out
pusha
xorl
lret
sbb
inc
push
xor
repnz
shll
sbb
pushf
cmp
mov
loop
aas
pop
pop
aaa
das
pop
test
mov
loope
rcrl
push
jge
dec
jns
fisttpl
pushf
xchg
xor
out
lods
shlb
sub
scas
lea
xchg
xor
dec
loop
cmp
dec
xchg
loope
jnp
xchg
cmpb
cs
mov
pop
cs
ret
mov
pop
sti
cmpsl
push
icebp
sub
mov
inc
iret
shrl
sbbb
rclb
xor
daa
push
jmp
rcr
cmpsb
popf
add
test
loopne
repnz
push
inc
xchg
push
push
loope
cmp
mov
mov
inc
lock
inc
sqrtps
mulb
sub
lret
and
mov
jecxz
fimull
js
or
jg
div
test
jne
rclb
cmp
xchg
xchg
fbld
repz
mov
outsl
pop
jno
stos
mov
xorb
xchg
dec
sbb
mov
adc
mov
sbb
mov
std
aad
push
divl
addr16
adc
cmp
add
adc
cmp
aam
shlb
push
adc
pop
jbe
insl
test
pop
aad
mov
movsb
cwtd
jnp
mov
sub
add
aaa
xor
pop
aaa
jns
cmc
fstps
mov
stos
cmp
push
pop
ret
ljmp
sub
outsl
sbb
mov
inc
xchg
sub
mov
push
mov
or
insl
mov
and
not
and
mov
add
sahf
js
test
inc
pushl
pop
inc
push
mov
and
jno
push
fcomps
or
sahf
pop
mov
scas
cmp
sahf
je
insl
mov
ret
jne
xchg
es
lock
bound
lea
inc
mov
out
fdivrl
dec
pusha
movsl
xchg
or
cld
test
iret
fs
add
jns
push
push
ds
loopne
mov
mov
dec
imul
pop
or
loopne
jge
scas
mov
loopne
clc
ljmp
into
pop
or
add
dec
out
pop
xchg
push
or
jle
fucomi
mov
aad
mov
mov
test
and
pusha
imul
jmp
nop
push
jecxz
or
sarb
rorb
cmp
jle
lea
jg
lcall
jae
ds
jo
pop
dec
pop
mov
daa
clc
dec
xchg
sub
flds
pop
cmpsb
and
add
inc
dec
jmp
ret
lods
pop
mov
movsl
xchg
jne
daa
pop
mov
mov
jns
sti
jg
jmp
lcall
lds
inc
out
pop
adc
sub
ljmp
mov
xor
in
xor
pop
fbld
dec
mov
fldcw
jbe
call
aaa
sub
fimuls
insb
popf
dec
mov
popf
stos
jbe
sbb
clc
lods
sti
add
roll
fiaddl
xchg
adc
rcl
and
mov
or
lods
daa
adc
add
shll
inc
popf
push
fldt
dec
adc
xchg
addr16
mov
pop
pop
xchg
sub
and
push
aam
sub
fwait
jmp
jns
enter
dec
sub
jns
fmuls
hlt
mov
cmc
movl
xchg
ja
mov
inc
sub
push
adc
out
inc
mov
movsb
cmpsb
mov
iret
xor
pop
popa
aaa
aaa
out
lods
cmp
repnz
stc
push
fnstcw
sub
mov
fcomip
mov
rcr
mov
push
jbe
out
ss
mov
mov
dec
mov
push
inc
iret
ja
arpl
int
inc
pushf
mov
dec
jns
or
insl
and
rorl
out
cli
loope
fcomi
push
test
sqrtps
fmul
int3
and
mov
dec
pop
pop
mov
cmp
mov
xchg
out
sbb
xlat
mov
sbb
adc
fistps
rclb
nop
add
sub
xor
push
xchg
lock
mov
jo
pop
jns
pop
jmp
push
and
jp
xor
vunpcklps
xchg
mov
jne
jb
inc
sbb
hlt
scas
int3
xchg
pop
pop
pop
mov
outsl
orl
out
fs
mov
enter
pop
mov
movsl
cmp
xor
shlb
std
sub
inc
push
daa
mov
mov
jne
dec
das
or
sub
and
call
je
sti
cmc
jns
dec
stos
loope
dec
push
xor
lahf
cltd
data16
dec
inc
outsl
fsubr
popf
std
pop
xchg
nopl
lock
jg
jns
stos
mov
outsb
and
adc
loop
add
imul
fnstsw
and
dec
outsl
mov
ret
mov
adc
cmp
test
mov
or
xchg
mov
js
test
mov
aas
je
xchg
push
cli
sar
mov
mov
xor
fsubr
push
add
arpl
test
xchg
mov
inc
xchg
mov
sub
jmp
lahf
add
insb
rsm
push
or
lock
imul
fadd
lret
xchg
adc
add
xchg
pop
daa
mov
out
mov
sbb
idiv
pop
xor
outsl
hlt
mov
jbe
xchg
insl
cld
aaa
lahf
jns
or
jnp
cmp
js
fldt
jb
inc
push
mov
add
call
nop
scas
out
or
cmc
push
adc
sub
loope
mov
xor
hlt
jl
popa
nop
pop
xchg
aaa
cltd
aas
mov
out
popf
mov
and
dec
add
data16
lods
jg
das
in
jbe
movq
jge
push
push
int3
das
mov
xchg
cltd
in
mov
pop
sbb
jge
outsl
call
push
mov
mov
jnp
mov
push
adc
inc
clc
lea
je
pop
sbb
or
notb
sub
sbb
dec
jge
jle
repz
pusha
mov
jne
xchg
fimuls
repnz
xlat
jmp
mov
mov
add
orl
or
push
push
in
mov
shll
mov
orb
fldl
xchg
rcll
scas
aam
jbe
je
or
in
stos
xor
sti
jge
test
jp
daa
xchg
adc
pop
or
mov
stos
mov
cmp
push
mov
insl
in
push
fs
mov
mov
xor
pop
cltd
std
notb
inc
cmpl
mov
shll
lds
cmp
mov
pop
mov
cmp
and
xchg
jge
push
xchg
lcall
mov
mov
bound
cmp
int3
push
jg
dec
xchg
rcpps
xor
fs
scas
jl
aaa
mov
mov
scas
push
clc
cmp
jle
or
push
jge
mov
pop
sti
and
mov
adc
das
and
das
mov
es
jo
jno
in
inc
mov
and
and
mov
lods
popf
cmp
add
dec
es
mov
scas
lock
dec
imul
cmc
mov
test
or
iret
mov
pop
and
outsb
mov
and
xlat
adc
out
incl
xorl
negb
mov
dec
aad
loope
aaa
std
cld
xchg
add
inc
adc
pop
fs
lret
adc
lods
in
jl
sub
ja
and
sbb
push
adcb
dec
mov
std
faddl
aaa
push
cwtl
jle
mov
and
das
ret
fldt
mov
stc
mov
rcr
add
lahf
sbb
arpl
fsubrp
test
push
mov
inc
fldenv
cld
sub
cmp
lret
sbb
push
mov
fs
imul
add
or
movsl
repnz
sbbb
jp
cmpsb
adc
adc
or
push
jae
sbb
mov
in
push
cltd
mov
scas
shl
jmp
ret
js
in
jae
adc
scas
out
jbe
into
mov
bound
or
pop
mov
push
push
fisttpll
repnz
jp
adc
push
mov
int3
xor
jge
xor
jmp
xchg
cmpsl
test
push
hlt
incl
notl
mov
data16
mov
mov
mov
mov
pop
sub
pop
shrb
sub
xor
cmc
push
adc
pusha
adc
jo
dec
cmpsl
scas
mov
aam
sahf
out
outsb
push
xchg
inc
icebp
push
inc
lods
mov
cmpsb
mov
ret
lea
out
lret
xchg
cmp
pop
imul
xorb
sub
sub
ds
sub
mov
into
test
and
push
loop
sahf
and
or
cmp
xchg
push
mov
add
cmc
xchg
rorb
div
das
inc
sub
fisttps
push
mov
cmpsl
cmpsl
and
jecxz
jl
data16
jl
fstl
xor
mov
aaa
inc
sub
and
mov
test
dec
hlt
mov
inc
enter
mov
sbb
pop
cmp
fmulp
adc
sbb
ja
repnz
imul
mov
fdivl
or
mov
sbb
cmp
mov
faddl
out
shrl
jbe
sbb
mov
and
add
mov
sbb
pop
pop
add
lea
fs
pop
sbb
aaa
xor
lds
int3
cmc
out
add
sbb
push
aam
scas
mov
aaa
xor
jnp
xchg
insl
stos
cmp
push
mov
sarl
movsb
mov
xchg
cmp
dec
arpl
dec
sub
inc
inc
rcrl
hlt
in
inc
fs
push
aas
cli
shrl
or
stos
add
pop
mov
test
pop
pop
ficoms
outsl
repz
dec
cmp
rorb
aas
jno
mov
dec
lods
push
out
enter
jmp
xor
sahf
pushf
mov
aad
pop
jle
in
mov
sub
pop
fdivrs
push
jl
cli
aaa
fnstsw
dec
push
cs
aaa
cwtl
repz
push
add
mov
das
adc
jne
imulb
mov
ret
jbe
or
cli
mov
lret
iret
mov
jnp
mov
ror
sub
das
xchg
loopne
xor
ret
or
aaa
inc
xchg
xbegin
push
xchg
out
xor
loopne
aad
inc
inc
jmp
popf
jb
andb
mov
pop
lahf
clc
adc
xchg
addr16
sahf
jne
mov
pop
lods
sub
dec
lock
scas
push
stos
push
mov
mov
sbb
xor
push
sbb
fcoms
adc
xor
add
cmpsb
jmp
arpl
mov
pop
cld
ret
dec
dec
repz
mov
and
ds
js
xlat
pop
inc
mov
dec
in
inc
xchg
jo
cli
and
mov
out
jle
pop
push
imull
push
push
and
push
clc
shrl
mov
and
hlt
xlat
aam
mov
inc
mov
arpl
andb
jle
push
xchg
xor
cmp
fstpt
jecxz
jnp
mov
and
lods
cmp
aaa
ss
enter
jle
or
ljmp
inc
aaa
lods
insb
pop
cmp
push
mov
push
sbbb
test
cmovne
lock
jno
cmp
adc
jnp
das
popa
jae
pop
sbb
mov
inc
xor
sarb
aas
adc
stos
ror
xor
fadds
pop
jg
pop
push
mov
ja
jb
mov
push
adc
sub
stos
push
push
mov
pop
orl
xor
subb
insb
inc
sub
scas
mov
mov
mov
xor
std
adc
pop
imul
dec
push
in
push
add
int
push
pop
inc
cli
pop
shrb
insb
mov
jp
scas
adc
xchg
adc
test
push
movb
adc
or
dec
jnp
out
adc
xchg
lahf
mov
jg
xchg
enter
xchg
mov
call
pop
push
sub
adcl
outsl
jbe
mov
mov
gs
jo
stc
out
pop
sarb
add
aam
outsb
arpl
or
into
mov
rcr
sbb
hlt
insl
dec
fdivrl
pop
into
push
lock
mov
in
je
std
cmp
jae
jle
loope
push
inc
jno
not
shll
dec
std
mov
jl
sbb
out
xchg
push
movsb
inc
rorb
pop
pusha
pop
je
mov
add
fisubl
movsb
call
and
ss
sub
xchg
push
ljmp
outsb
outsb
movsb
out
xlat
xchg
fadds
add
sbb
dec
test
mov
xor
mov
jle
cmp
pop
push
ret
ljmp
jae
iret
movsl
test
int3
shrb
cmp
jp
mov
sti
cmc
mov
mov
mov
jo
or
das
sub
enter
xchg
mov
xor
pop
js
in
xor
movsl
aas
cltd
and
pop
fcmovu
ds
dec
leave
xchg
scas
mov
sub
gs
mov
mov
leave
call
sbb
add
push
test
cltd
test
in
adc
mov
jne
inc
outsb
lea
sti
or
fldt
in
sbb
addr16
cmpsl
pop
push
iret
mov
sub
fcmovb
xchg
shrb
jae
cltd
jbe
or
mov
pop
mov
mov
test
pop
mov
aas
xchg
push
jno
and
rcll
std
sub
mov
cmpsb
into
mov
or
jle
fidivl
xor
shlb
es
push
int3
fsubrs
adc
mov
sbb
out
or
cmp
in
bound
push
sbb
jle
outsl
mov
popa
mov
sbbl
jle
and
aas
loope
aas
push
rcrl
and
mov
lods
xor
inc
dec
ds
outsb
es
mov
mov
dec
lea
mov
adc
mov
dec
add
jno
lds
xchg
std
lods
inc
js
or
mov
fisubs
jne
movsl
sbb
in
or
push
icebp
ret
push
xchg
jmp
mov
inc
mov
js
mov
push
out
ror
cmp
jae
adc
or
mov
cmovne
dec
xchg
popf
sub
push
xor
jg
ss
jmp
push
sti
mov
in
mov
test
mov
dec
mov
cmp
sbb
movb
inc
jb
mov
test
out
mov
call
push
daa
imul
dec
add
std
test
pop
stc
mov
test
inc
gs
dec
fisttpll
mov
mov
mov
fistpl
dec
sahf
cltd
lock
jge
test
fs
imul
das
jae
sub
mov
lret
mov
in
jns
dec
mov
mov
add
rolb
adc
mov
shr
outsl
inc
sub
repz
inc
mov
mov
mov
js
lds
sub
int
mov
dec
inc
lea
clc
shlb
add
sbb
imul
imul
cmp
mov
jns
cmpsl
das
sbb
or
das
sub
sub
cmp
mov
and
daa
add
dec
jb
ljmp
in
mov
mov
xor
sar
mov
dec
mov
in
imul
ret
cmpsl
jg
js
aad
cli
sub
addr16
int3
jecxz
imul
decb
xor
adc
xchg
test
xor
je
pop
in
scas
dec
fstpl
xchg
push
scas
jp
jle
out
jecxz
shrl
dec
addl
clc
xor
sub
inc
orb
dec
lcall
pop
inc
fsubl
lds
push
sbb
lahf
mov
cld
test
dec
add
sbb
adc
and
aad
pop
pushf
aam
and
in
addr16
enter
fstpl
xchg
jns
sub
inc
loopne
cltd
clc
mov
js
test
sbb
inc
cmp
fwait
leave
jns
push
mov
push
mov
mov
shll
in
aas
imul
push
leave
sbb
adc
xor
lea
xchg
clc
pop
scas
and
rol
loop
clc
mov
shll
mov
push
pop
xor
dec
pop
stos
cmp
inc
and
lds
push
or
mov
lods
je
or
xchg
js
arpl
dec
pop
or
addb
cmp
jae
xchg
scas
pop
xchg
xchg
mov
andb
rclb
xchg
push
sbb
mov
sub
cmp
mov
lock
fildl
aaa
xor
js
cmc
loopne
xchg
jbe
push
xchg
hlt
aad
mov
or
dec
subl
jmp
cmp
jmp
ljmp
dec
cmpl
pop
jg
lret
or
push
inc
in
or
add
jmp
ljmp
mov
clc
mov
push
jecxz
cmpsl
imul
push
lret
pop
icebp
ss
mov
movsl
adc
adc
ja
jbe
mov
dec
sub
fsubrs
rclb
lea
fs
jae
cmpsb
into
pop
adc
cmc
mov
mov
jnp
push
sti
test
push
sub
lcall
addb
enter
sub
dec
jno
jge
jb
jnp
rcrb
push
adc
dec
nop
mov
mov
push
jns
xor
fidivrl
adc
add
and
test
mov
sub
or
movsl
ja
rcl
adc
adc
jmp
sbb
in
sub
dec
push
cmp
add
sbb
sbb
sbb
rol
into
mulb
xchg
test
inc
sbb
popf
movsb
inc
cmp
aaa
cmpsb
jno
stos
mov
movsb
or
cld
fs
mov
cwtl
fcoml
std
xor
iret
inc
out
pop
aaa
pop
pop
cmp
dec
add
mov
and
lcall
mov
dec
gs
sbb
rclb
dec
out
test
imul
mov
lods
mov
test
hlt
push
mov
fcoms
cmpsl
adc
pop
mov
cmpsb
das
jne
stc
movsl
sahf
pop
adc
shl
pop
rorb
aaa
sub
push
sub
mov
mov
xor
test
push
inc
xchg
mov
jb
add
inc
or
insb
xor
in
mov
sub
int3
and
and
jmp
fmul
lods
int3
popl
js
push
adc
addb
push
or
icebp
ss
arpl
cmp
pushf
shlb
add
cmp
push
cmpsl
loopne
xchg
in
or
mov
cmpb
and
nop
jg
adc
xlat
mov
jbe
dec
pop
mov
mov
daa
jge
test
mull
mov
or
or
int3
and
stos
push
in
out
xor
jg
mov
push
xchg
sbb
mov
iretw
sti
mov
sbb
out
or
jmp
push
ret
add
xchg
xchg
pusha
flds
inc
iret
ss
xchg
cli
and
jp
daa
repnz
aas
lea
cmp
add
cmc
or
outsl
mov
and
pop
ret
or
fs
jbe
addl
jle
popa
pop
lea
in
pop
loopne
and
sbb
jo
je
sub
or
outsb
lcall
cltd
addr16
addb
mov
outsl
mov
cmp
cmp
push
shll
into
mov
cli
push
cmp
iret
or
loop
xor
mov
lock
pop
mov
lcall
xchg
sbb
push
rol
mov
dec
cmp
in
mulb
jb
xchg
push
xchg
pop
pop
stc
mov
aad
jecxz
dec
ds
add
lock
lea
jp
data16
sub
pop
adc
xor
mov
jo
imul
add
jecxz
and
xor
js
cs
test
loopne
es
push
movsb
enter
insb
xor
in
lods
pushf
outsb
cld
mov
add
jae
dec
xor
fs
sbb
mov
shll
sub
and
rcl
popa
dec
jl
mov
adc
inc
ljmp
stos
loope
in
out
cmp
inc
jmp
jbe
fnstenv
cmp
inc
movsb
fists
xor
xchg
aaa
sub
fstp
repnz
addb
mov
jg
ja
test
xchg
and
xchg
aas
lcall
pop
out
movsl
jb
aas
pop
adc
rcrb
ret
dec
lds
pop
dec
fdiv
stc
adc
ret
stc
lcall
popf
xor
xchg
push
push
xadd
or
mov
xor
fsubs
clc
pop
jbe
add
xor
cmp
jecxz
clc
mov
xor
and
xor
mov
jge
dec
pusha
and
jae
loopne
mov
sub
in
and
leave
xchg
sbb
push
cmp
aam
in
fs
dec
out
pop
popa
rorb
movsb
jmp
push
mov
int
out
mov
les
pop
rorb
in
leave
mov
mov
push
sbb
and
or
cmpsb
cwtl
and
js
push
into
scas
lods
push
repz
aas
sbb
xchg
into
inc
add
in
sub
xor
xor
xchg
inc
jbe
insl
inc
stos
sti
int3
rolb
adc
cmc
mov
mov
or
or
cmp
mov
jnp
pop
fdivrl
dec
iret
clc
lret
mov
mov
sarl
adc
mov
adc
mov
sub
pushl
jge
mov
filds
and
inc
aad
inc
addr16
call
mov
sarb
mov
add
arpl
or
popa
cmp
or
pop
es
movsb
push
out
jae
xchg
and
mov
xor
fmull
aam
clc
mov
jl
addr16
jmp
enter
adc
ja
adc
ds
pop
jl
out
rcl
cwtl
mov
jl
ljmp
xor
hlt
fmull
or
addl
out
push
mov
stos
fnsave
sbb
mov
popl
add
lea
add
sub
jns
jg
add
fstps
lcall
gs
lock
mov
push
xor
pop
xchg
mov
rcrb
fs
call
add
inc
aam
and
gs
mov
push
pop
imul
sbb
pop
call
sub
test
xor
loope
inc
jb
xchg
mov
pop
idivl
jno
sbbl
xor
sbb
repnz
insl
push
les
test
and
cmp
mov
leave
outsb
scas
dec
push
dec
or
adc
out
jmp
add
sahf
inc
out
pop
ljmp
ja
pop
pop
xchg
or
cmp
xor
sbb
and
fbld
hlt
mov
cmp
fcoml
imul
jae
dec
mov
ror
mov
mov
stc
xchg
inc
cmp
push
xchg
test
pop
imull
js
xlat
fisubrl
add
push
cmc
pop
loope
adc
push
mov
gs
or
das
imul
pop
enter
inc
mov
je
jg
or
xchg
ljmp
subl
popa
aad
loopne
pop
sub
test
mov
mov
lea
cltd
push
add
inc
ds
ficoml
lea
mov
cmp
inc
ret
xor
shrl
cltd
fldenv
jae
pop
push
je
test
dec
push
outsb
mov
mov
or
popa
jle
jno
jl
sbb
adc
imull
jg
into
adc
shl
xchg
or
aad
pop
or
cli
js
push
imul
into
or
cs
xchg
adc
cmp
or
xchg
iret
xchg
push
popf
or
and
mov
push
dec
push
push
jp
scas
int3
push
xchg
in
mov
in
fiadds
dec
ret
push
aad
xor
shrl
insl
xchg
mov
xlat
call
loopne
loop
lock
movl
push
mov
and
xor
and
fisubrl
mov
or
xchg
pop
sub
and
stos
xchg
out
pop
pushf
add
subl
mov
push
push
sti
pop
scas
clc
stos
dec
fists
push
jnp
xor
cs
test
lock
lods
in
mov
add
pop
add
mov
xchg
popa
mov
mov
bound
dec
movsb
jmp
xchg
pop
fbstp
aas
fildll
add
ss
xchg
mov
mov
scas
decb
push
outsl
adc
je
sub
or
in
add
inc
sub
shr
pop
aam
adc
adc
jle
or
inc
inc
mov
inc
mov
lods
lods
scas
xchg
cld
mov
pop
clc
xchg
push
push
fcoml
lea
scas
pop
or
pusha
mov
jecxz
sbb
dec
addr16
pop
dec
fistps
es
dec
imul
xor
int3
mov
push
jno
js
xchg
sarb
clc
clc
and
mov
lods
dec
imul
mov
cwtl
sbb
stos
cmp
sbb
sbb
movsl
mov
cmc
mov
mov
into
outsl
pushf
and
push
add
test
sar
je
ret
into
sbb
loope
imul
add
mov
mov
sbb
hlt
push
and
push
add
insb
es
enter
xor
push
jg
fcoms
fcom
push
arpl
sahf
pop
movsl
leave
cld
jb
pusha
push
mov
or
push
in
cmpsl
in
scas
mov
jle
xor
ret
xchg
cmp
dec
stc
out
test
mov
int
xchg
sbb
test
pop
mov
arpl
jne
adc
imul
fiadds
aaa
addl
ror
push
sbb
jbe
xchg
push
out
inc
or
push
repnz
ret
fimuls
ret
mov
mov
sub
push
dec
cmp
sub
cli
mov
orb
dec
testb
lahf
and
test
sub
insl
ret
into
add
and
dec
jmp
mov
push
mov
imul
leave
pop
pop
add
push
inc
dec
cmovae
inc
dec
push
rcr
push
cmpsl
or
jmp
rorl
sub
pop
dec
mov
out
jmp
mov
lcall
mov
in
adc
pop
test
add
mov
in
lds
pop
stc
fidivrl
in
outsl
xchg
and
push
push
outsl
mov
sub
push
insl
test
stos
int
xchg
pop
add
xchg
jecxz
aaa
push
sbb
rolb
sbb
mov
out
aam
into
sbb
push
cmp
stos
sub
push
sub
add
cmc
leave
leave
xchg
mov
pusha
mov
shl
dec
repnz
push
into
leave
cmp
ja
daa
fistpl
cmp
sti
dec
in
cmc
sub
jne
pop
popa
insl
cltd
ja
shrl
mov
sahf
ja
cmp
mov
add
xor
pop
scas
ret
pop
ss
push
ret
jg
mov
jae
jns
fmul
cmc
and
lea
pop
xor
std
stc
or
mov
stc
psubq
sub
xchg
gs
mov
cmpsb
xchg
sahf
mov
inc
sub
daa
mov
into
int
fdivr
ljmp
mov
sub
adc
int3
mov
outsb
mov
jne
lods
loopne
fistpll
cmpsb
js
loop
or
imul
ljmp
mov
mov
dec
fwait
mov
cmpb
push
or
out
xchg
cmp
lret
daa
mov
cwtl
push
jle
dec
out
les
repz
test
aaa
cmp
out
pushf
loop
lock
adc
rolb
loop
std
mov
xchg
cmp
sub
pop
adc
fisttpl
test
lock
pop
roll
adc
out
xor
shrl
mov
cli
sub
repz
jl
in
xor
test
aaa
je
jo
sbb
inc
sti
hlt
nop
mov
loopne
xor
jne
scas
mov
aas
push
sbb
dec
add
add
loopne
push
and
inc
jno
xchg
daa
jle
mov
fsubs
ja
add
insl
xor
push
lods
clc
movsb
pop
movsb
aad
lahf
cwtl
imul
mov
jg
lods
ds
mov
xchg
and
xchg
cmp
roll
jmp
or
outsb
pop
fistpll
jbe
mov
push
movsb
xor
loop
cmp
das
push
cmpsb
hlt
adc
sbb
in
jae
shll
jl
push
leave
aad
bnd
into
out
into
into
xchg
inc
inc
movsl
test
mov
xchg
jb
ret
ljmp
andl
std
xlat
dec
or
sub
dec
xchg
lcall
sub
scas
and
mov
mov
fistpll
lods
mov
in
fwait
jg
xor
scas
outsb
pop
les
xchg
push
mov
orl
jp
cmp
fldl
pushf
hlt
xlat
fcomip
imul
gs
lahf
jb
or
aas
push
pop
int
clc
push
sbb
test
ja
aas
push
dec
out
test
int3
push
xbegin
jae
stos
ret
add
xor
out
or
dec
push
sahf
popa
cs
and
add
sbb
das
js
xor
mov
inc
lcall
fisubs
mov
mov
and
sbb
pushf
stos
jne
testb
outsb
jno
xor
cmp
and
fwait
fwait
or
push
shrl
pop
pop
out
loopne
loope
push
gs
out
pop
add
mov
push
fpatan
xchg
fiaddl
flds
xchg
hlt
pusha
push
out
stos
xchg
dec
add
rorb
mov
dec
dec
xchg
and
leave
and
rolb
adc
pop
lret
push
add
mov
and
mov
ret
mov
or
je
ffree
ja
jne
sbb
scas
jno
xchg
dec
in
lahf
adc
xchg
jae
lahf
xlat
mov
and
dec
bound
add
mov
sub
mov
out
mov
pusha
les
cmp
or
mov
adc
daa
jo
inc
jo
nop
loope
xor
sti
sbb
aam
inc
iret
add
inc
cmpsw
testb
rclb
and
outsb
out
cwtl
js
data16
in
sahf
cmpsb
daa
in
push
movsl
inc
mov
push
push
xchg
lahf
outsl
sub
xchg
lds
ret
rcl
push
adc
aad
insl
jno
inc
imull
pop
enter
call
pop
bound
jno,pn
and
pop
cwtl
or
cld
fwait
imul
push
adc
and
daa
cmpsb
cld
dec
stc
cmp
dec
insb
mov
addr16
les
lret
jno
out
xchg
mov
je
inc
sub
div
jno
xor
les
ret
das
out
adc
adc
fisubs
xor
cmp
ret
lds
fnstenv
xlat
pop
mov
lods
fldcw
mov
mov
out
out
cmpsb
mov
jbe,pn
out
inc
notl
pop
cmpsb
aaa
in
jno
scas
imul
repnz
imul
sbb
inc
add
sub
inc
add
push
gs
mov
faddl
cmp
ja
mov
adc
pop
out
shl
mov
jmp
mov
outsb
or
cs
ljmp
inc
mov
fwait
mov
jbe
leave
cmc
and
push
imul
xchg
andl
roll
in
cmp
enter
arpl
aad
push
testb
test
push
push
pop
jo
fldl
outsl
enter
lea
push
mov
jg
mov
xor
cmp
ss
nop
push
movsb
jnp
push
inc
sahf
in
mov
mov
sbb
in
sbb
xor
jle
dec
in
adc
test
mov
enter
lahf
gs
jne
inc
push
ss
dec
das
lret
cld
jb
loopne
and
pop
mov
mov
jp
inc
mov
xchg
fxch
cmpb
outsl
xlat
je
xchg
mov
push
out
pop
add
inc
into
adc
stos
and
mov
mov
out
js
inc
jne
lahf
rolb
jne
cmp
mov
pushf
pusha
add
cwtl
push
orl
or
out
push
adc
fbstp
jl
adc
mov
push
aad
push
repnz
jle
push
inc
in
cmc
imul
iret
push
jmp
mov
repnz
sub
xchg
xor
sbb
js
idivl
xchg
push
ljmp
sub
mov
pusha
outsb
mov
out
xor
sbb
pushf
lret
movsb
fstpt
inc
push
adc
jmp
popa
dec
cmp
cs
lret
mov
add
pop
sahf
into
sub
jae
sarb
mov
loopne
addr16
pop
add
daa
test
push
out
mov
stc
lretw
aas
sub
sub
lret
push
and
jnp
add
adc
cmc
inc
and
push
mov
daa
xor
pop
xor
loopne
cmp
jae
add
or
push
and
and
gs
insb
xchg
push
in
xor
mov
mov
and
jl
daa
pop
fcmovbe
lods
xchg
int3
cmp
std
mov
mov
mov
adc
adc
aaa
mov
rol
adc
leave
push
jno
test
outsb
fisttpll
adc
jmp
push
jl
fs
cld
jae
js
cmpsb
and
sti
jg
rcll
mov
xchg
frstor
repz
insl
gs
inc
sbb
or
test
add
pop
push
jge
lret
pusha
je
dec
mov
dec
mov
sub
mov
call
out
xor
movsl
lds
ds
testl
xchg
jp
jne
mov
call
add
stos
test
cmp
sub
out
mov
or
cltd
hlt
repnz
or
sbb
pop
pop
or
cmpsb
sub
test
test
in
scas
imul
or
bound
popf
nop
or
mov
xlat
xchg
mov
pusha
lahf
clc
aaa
fs
sbb
adc
pop
mov
pusha
imul
xchg
adc
pop
sahf
and
das
scas
sti
and
pop
arpl
ret
xchg
outsl
xchg
xabort
xchg
adc
dec
in
in
pop
dec
arpl
xor
sbb
sbb
xor
insl
or
loopne
pop
ljmp
cmpsb
add
lret
out
popa
jle
push
icebp
lcall
lcall
inc
and
or
mov
or
jns
and
pushf
popf
gs
negl
sbb
mov
out
xchg
int
lret
add
xchg
inc
adc
es
pop
sub
repz
scas
pop
les
ss
sbb
bound
sub
sbb
or
push
dec
jb
xchg
cld
fisubrs
xchg
rolb
mov
js
xchg
xchg
add
lahf
push
pop
mov
nop
xchg
daa
orl
aaa
stos
dec
xor
imul
imul
pop
popf
popf
ret
jbe
add
xlat
imul
aad
jg
inc
hlt
cmp
xor
xchg
shlb
out
in
jg
cmp
leave
lahf
cmpsb
in
in
addr16
lea
in
negl
dec
push
adc
add
xor
push
xor
jmp
cmp
in
push
jp
push
int
testl
in
sbb
js
dec
sahf
clc
cmp
dec
dec
inc
sbb
dec
pusha
cmp
mov
mov
shlb
sub
movsb
pop
mov
mov
push
scas
lea
cli
mov
push
out
scas
sbb
xor
scas
enter
push
icebp
hlt
push
cmpsl
mov
bound
outsb
pop
shl
sub
imul
mov
mov
inc
xchg
add
data16
daa
pop
jge
mov
scas
pop
sub
pop
es
pusha
mov
dec
popa
sbb
cli
lahf
mov
ljmp
lea
xor
pop
mov
xorb
out
repnz
shr
or
pusha
and
pusha
mov
jne
imul
mov
stc
adc
sbb
sbb
shll
jecxz
add
cmpsl
inc
mov
dec
rorb
cld
sub
scas
hlt
js
rcrb
lret
ja
push
pop
or
aaa
pop
mov
cltd
jns
lds
push
orl
stc
jns
mov
dec
sub
xchg
stos
ret
sub
bound
enter
pop
and
clc
mov
add
enter
add
dec
shlb
push
pop
xor
and
cmpl
call
pop
adc
fcom
clc
aas
adcb
popf
pop
mov
mov
fs
mov
mov
and
add
ficoml
jne
push
add
enter
fdivs
mov
out
test
sbb
pusha
cmp
xlat
add
pushf
shl
repz
mov
dec
pop
aad
scas
daa
jg
aad
loopne
jle
shl
push
std
out
fwait
scas
shll
test
ret
add
inc
ds
adc
ret
dec
and
add
sub
sbb
mov
cmp
inc
sar
and
push
in
inc
or
dec
push
out
push
push
or
pop
leave
jecxz
sbb
pushf
xor
loop
adc
fidivs
xor
pop
enter
pop
jmp
pop
movsl
push
and
push
xlat
dec
xor
aas
push
leave
mov
repz
sbb
enter
lea
clc
scas
cmp
push
les
into
out
add
lret
cmpb
ds
xor
cmpsb
loopne
in
push
arpl
lods
movsl
imul
lret
mov
loop
mov
data16
adc
sbb
sub
pop
sub
stos
jle
out
or
mov
loopne
or
and
test
mov
in
mov
ja
aas
cmpsl
nop
sti
jg
jmp
jnp
xchg
or
jle
inc
or
fimuls
mov
sbb
or
mov
in
sarl
adc
ja
faddl
mov
rorb
lea
pop
mov
adc
adc
addb
shll
adc
jmp
dec
add
loope
out
cmpl
jg
inc
cmp
push
sub
cmp
loopne
repnz
jmp
popf
outsb
iret
out
movsl
cmc
add
rcrl
or
cltd
mov
pop
in
add
fwait
cmp
or
dec
push
adc
cwtl
iret
clc
lods
dec
xchg
ljmp
adc
pop
cmp
stos
pop
dec
add
in
pop
mov
into
ljmp
add
add
andl
inc
mov
es
push
lret
add
mov
adc
lock
lock
imull
mov
mov
fadds
out
push
in
sbb
mov
stos
cli
mov
insl
ja
rol
inc
pop
jne
inc
xchg
imul
out
jmp
repnz
fistpl
add
mov
dec
cmpsl
adc
fildll
add
sbb
sub
jae
cwtl
dec
sbb
clc
loop
mulb
cld
aad
jne
push
mov
add
push
aad
pushf
loop
mov
add
mov
jo
lret
std
ja
pop
jl
xchg
add
in
pop
fildll
fwait
test
pop
subl
adc
subb
and
mov
sub
push
pushf
out
lcall
in
popf
aam
ds
aas
sbb
sbb
mov
loope
arpl
bound
mov
mov
mov
xchg
adc
push
out
push
daa
mov
stos
insb
out
sbb
cld
shll
mov
inc
mov
or
cltd
dec
data16
cmp
shr
jb
lret
push
cmp
xor
out
mov
call
lret
movsb
add
outsl
ljmp
mov
dec
push
xlat
les
or
test
ljmp
mov
icebp
or
pop
push
adc
xchg
adc
xor
repnz
jne
test
out
fdivr
pop
data16
push
or
xchg
xchg
inc
xchg
ja
out
sub
pusha
jle
jbe
aad
inc
aaa
add
xlat
mov
ss
or
imul
ljmp
into
or
into
lahf
mov
in
inc
in
mov
and
and
add
or
push
das
mov
pop
jge
xchg
push
lock
xor
pop
push
popa
xchg
ja
test
movsl
jae
or
lahf
das
sub
popl
rep
dec
xchg
sub
fcomi
add
test
sbb
int
int3
jmp
daa
aaa
pop
and
add
push
cmp
lahf
mov
sbb
ja
jmp
out
add
fstpt
test
jl
and
xchg
addr16
pusha
aaa
xlat
xor
adc
pop
mov
clc
incb
mov
mov
rcr
pop
int3
enter
jge
les
pop
hlt
dec
lcall
inc
mov
push
pop
mov
out
or
das
aam
mov
fsubl
inc
mov
mull
pop
and
insb
fnstenv
ja
mov
mov
mov
cmp
mov
xor
jb
push
mov
jp
cs
mov
pop
fildll
imul
lret
cli
fiadds
cmpl
aad
data16
fcmovbe
data16
test
call
rclb
jno
or
and
push
pop
mov
shlb
sub
dec
scas
mov
insb
stos
or
fwait
add
mov
dec
sbb
adc
pop
mov
or
xor
ret
or
cli
sub
es
repz
dec
inc
cmpsl
push
int3
and
adc
cwtl
or
enter
call
xchg
sbb
les
xor
and
cmpsb
add
xchg
test
push
testb
push
xor
mov
out
or
lahf
push
dec
mov
sub
lock
xchg
js
push
jne
cwtl
mov
or
inc
cs
and
pusha
stos
ret
cmp
inc
int
ss
fwait
or
popa
orl
mov
popa
or
push
lods
lea
jae
aaa
jo
xor
stos
movsb
ret
xor
jmp
push
xor
jo
and
xchg
rcll
aad
xchg
movsb
ljmp
outsl
jmp
pop
jno
mov
daa
xorl
push
gs
cwtl
inc
pusha
mov
sbbb
add
xor
push
imul
sub
imul
mov
xor
ja
outsb
xchg
insl
sbb
leave
add
out
cmp
mov
loop
lret
pop
stc
or
pop
fbstp
call
sti
ss
xor
mov
int
dec
loopne
cmp
pop
xchg
fnsave
int
iret
push
jp
aam
cmp
mov
or
mov
pop
lret
push
jo
rcrl
ret
mov
movsb
mov
shl
mov
out
inc
add
lret
and
or
pusha
inc
xor
inc
int3
addr16
repnz
jno
insb
sub
xchg
inc
cli
test
inc
pushf
aad
push
push
jp
test
insl
fs
jmp
and
subb
dec
inc
out
stos
stos
fidivs
push
pop
loope
push
inc
rolb
movsb
pusha
cld
inc
xchg
je
cmp
mov
fwait
dec
daa
jge
fadds
sarl
push
sub
ljmp
cmpb
mov
ljmp
xchg
test
pop
sub
sub
sub
jns
call
inc
sub
push
inc
movsb
mov
test
pop
dec
push
mov
imul
je
xchg
inc
addl
sub
rorb
xor
outsl
jmp
pop
cmp
adc
shrb
mov
sub
in
cld
rol
test
jns
and
push
mov
loopne
out
pushw
ret
out
push
popa
jge
lods
jno
outsl
iret
or
das
jg
push
stc
clc
cmp
cwtl
popf
pusha
cltd
cltd
lock
mov
mov
fwait
adc
loopne
sub
pop
lods
xor
push
aam
ret
add
cmp
xor
out
pop
cwtl
daa
xor
clc
jo
or
dec
popf
sarl
mov
mov
xor
sbb
xchg
dec
mov
shlb
jnp
outsb
jg
push
bound
jmp
fucom
adc
scas
bound
xor
shlb
fmuls
fcomp
insl
jg
stc
mov
roll
pop
aas
aad
pop
jmp
jae
cmp
push
insb
sbb
mov
in
cli
mov
in
inc
out
pop
lds
push
cltd
jb
into
into
mov
popf
je
lds
je
or
out
push
jge
std
push
inc
sub
int3
pop
int
lods
xor
addr16
push
cltd
inc
mov
js
cmpsb
repz
ss
icebp
insl
mov
ficompl
clc
cmc
addr16
pusha
or
dec
jae
into
dec
cltd
sub
sbb
sub
std
inc
jg
adc
pop
popa
mov
jl
mov
jae
jg
out
lret
mov
xor
lahf
mov
loopne
inc
in
cmpsb
inc
push
lret
es
sbb
dec
mov
jne
mov
mov
clc
dec
dec
mov
fnstenv
mov
pop
out
push
pop
add
lcall
pop
imul
jg
cld
dec
cli
int
jecxz
and
xchg
int
nop
pop
fnstcw
insb
hlt
push
je
loopw
pop
fs
jbe
fcompl
jb
or
outsb
or
mov
movsb
je
adc
or
jbe
mov
adc
stos
inc
jbe
out
adc
jae
into
cli
add
jns
mov
jns
adc
fidivrl
sbb
mov
scas
push
in
xchg
lods
inc
loopne
pop
mov
sbb
cmp
jge
daa
iret
jb
push
ljmp
pop
enter
jo
or
bound
mov
sbb
pop
inc
sub
rorl
shl
push
mov
cmp
daa
ret
sub
test
pushf
adc
lret
mov
push
je
sbb
add
les
cmp
rcl
and
cmpsb
mov
dec
pop
jne
leave
mov
mov
enter
mov
inc
and
fistpll
adc
roll
loop
lret
xlat
dec
inc
dec
adc
ss
imul
and
xchg
mov
sbb
xchg
cmp
fists
sub
out
orb
sub
xor
int3
rcll
aam
faddp
roll
adc
rcl
jno
ret
in
push
and
lcall
sub
std
repz
imulb
insb
xchg
adc
movsl
add
pop
push
xor
insb
ljmp
pop
into
add
int
in
sub
xor
jb
jl
sbb
fwait
cmp
test
in
test
push
hlt
xor
mov
dec
push
cwtl
sbb
sbb
jp
cld
sbbl
mov
adc
push
push
test
mov
xchg
pop
divb
in
cmp
lea
ret
sub
cmp
out
adc
int3
clc
jge
mov
dec
inc
outsb
loope
dec
orb
dec
rorb
sbb
sbb
sti
jo
or
scas
mov
sahf
dec
scas
and
cs
push
bnd
or
and
sub
popa
in
fisttpl
xor
dec
or
add
inc
cmpsb
mov
es
jge
push
pop
ds
adc
sti
fistps
mov
xchg
mov
test
ljmp
mov
lahf
mov
cmp
adc
mov
or
mov
sbb
lds
adc
fdiv
dec
mov
and
sbb
inc
jle
mov
aad
idivl
pusha
dec
ror
call
jmp
leave
xor
in
mov
jo
inc
movsl
inc
push
setne
add
pop
daa
in
xchg
into
push
ret
and
push
xchg
xchg
notb
mov
jno
fcoms
out
pop
add
cwtl
popa
negl
pop
idivb
out
cmp
repz
iret
mov
mov
orb
xchg
inc
adc
loop
pop
movb
adc
sub
dec
mov
mov
nop
daa
sub
cmp
lea
inc
or
inc
pop
insl
loopne
mov
push
dec
stc
inc
out
pop
jmp
xorb
fisubrl
mov
test
test
test
inc
dec
jmp
xor
lds
mov
cli
enter
xchg
outsl
pop
or
fistps
sub
jge
fwait
cmpsl
jns
lret
and
adc
mov
aas
scas
pop
inc
adc
pop
pusha
and
sub
jae
stos
insb
push
inc
jle
jne
mov
popf
bound
add
dec
fwait
and
pop
scas
pop
fadd
scas
leave
arpl
adcl
mov
pop
int
and
pusha
fwait
shlb
xchg
xchg
fadds
mov
and
test
and
icebp
inc
pop
ja
push
sbb
fwait
push
mov
mov
clc
orl
int
add
scas
cmp
jae
xor
and
fistl
dec
fwait
ret
into
call
sarb
lds
adc
dec
lret
mov
dec
jns
xor
sbb
loopne
or
jp
in
stos
fsubs
or
sti
and
iret
cs
cmpsb
jg
mov
mov
add
lock
test
loopne
sbb
pop
dec
sbb
mov
fidivrs
int
lret
add
imul
xchg
jp
inc
cmp
repnz
addl
push
loopne
mov
or
outsb
std
repnz
out
mov
jbe
mov
fs
push
aas
js
fstpl
jo
adcb
negb
hlt
xor
mov
pop
and
imul
push
shrl
inc
or
jno
loopne
cmpsl
sub
mov
sahf
xor
push
pop
mov
and
jnp
loopne
shlb
jg
sbb
fiadds
aaa
push
sbb
sarl
jecxz
mov
xor
das
add
pop
mov
lahf
mulb
int
call
adc
repz
xor
imul
push
mov
cmpsb
mov
pop
pusha
idivb
add
mov
data16
and
add
icebp
js
lahf
into
pop
inc
mov
or
ds
jmp
or
cli
js
add
cmp
jno
dec
mov
out
mov
in
sub
inc
xchg
dec
and
add
test
addr16
ss
and
or
call
movsb
jno
shrb
nop
or
out
mov
mov
ja
lock
cmpsl
add
or
test
add
add
shrb
push
add
lock
int
ficompl
xchg
lods
mov
xchg
sbb
add
sub
outsb
movsl
push
mov
adc
lods
aam
cmp
call
xchg
test
icebp
sar
push
inc
shlb
cmc
cmpsb
dec
cld
add
es
in
cld
das
sbb
inc
lods
subb
daa
lds
and
sub
push
adc
loop
mov
xor
jl,pt
outsw
mov
mov
push
mov
in
and
xor
and
cld
push
inc
mov
mov
dec
push
xor
sbb
and
mulb
outsl
sbb
sbb
fnstsw
test
in
negb
sahf
adc
lret
xchg
lods
adcb
fldl
cmp
push
inc
mov
aas
negl
sub
enter
jmp
mov
jge
movsb
in
jnp
ret
add
sub
or
enter
and
iret
and
cmp
dec
imul
cltd
icebp
push
xchg
cli
mov
out
daa
int3
mov
inc
std
testl
jnp
adcl
into
roll
inc
xchg
popa
sub
add
pop
ror
cs
cli
mov
movsl
sub
aaa
sbb
popl
in
jo
icebp
test
lods
and
dec
mov
shrb
mov
add
inc
adc
xchg
add
sub
rol
gs
cmp
xor
cmpsl
inc
pop
ret
and
pop
mov
xor
test
int
add
std
add
jle
ljmp
adc
jl
lea
jbe
cmp
das
stc
sbb
rorb
stc
jns
fs
inc
adc
push
cmp
mov
ds
scas
jg
pop
je
jbe
fs
push
fs
jl
add
clc
mov
pop
sbb
rcl
push
or
rcll
mov
sbb
dec
inc
jne
push
add
dec
lock
inc
sub
jp
sub
sbb
lret
xorb
test
add
outsb
sbb
inc
cmp
inc
xor
sti
sahf
nop
pop
lahf
or
cmp
imul
repnz
pusha
in
insb
mov
push
aas
add
push
pusha
and
insl
add
mov
lds
lods
fbstp
stos
loopne
inc
dec
ror
xchg
xchg
add
insb
loope
sbb
pusha
aad
push
push
jne
push
and
shl
inc
aaa
mov
enter
xchg
pushf
and
xor
cmpsl
xchg
insb
fldt
rcrb
mov
mov
out
jl
sub
gs
fs
mov
jmp
cld
in
je
jmp
push
dec
xchg
stos
sub
sub
out
inc
shll
adc
aad
push
out
push
dec
push
testb
int
dec
stos
add
sbb
push
jbe
inc
imull
adc
ds
ret
outsl
cmp
dec
inc
out
dec
or
add
addr16
cli
xchg
jo
test
push
ja
and
inc
jmp
and
jae
scas
mov
inc
push
ret
out
in
les
mov
xchg
decl
pusha
call
in
popa
mov
imul
pop
ljmp
nop
mov
adc
pop
cmp
jae
mov
lret
ja
ljmp
jb
jbe
pop
lock
mov
xchg
add
dec
icebp
gs
push
push
pop
cmpsl
and
mov
push
dec
mov
sbb
out
and
inc
aam
mov
in
movsl
lods
jp
inc
push
jl
daa
cs
adc
and
in
add
jmp
scas
mov
xlat
repnz
or
sub
xchg
push
bnd
jge
std
cmp
xor
in
mov
gs
jp
in
jo
pop
and
filds
lds
mov
cmp
lea
loope
jl
movl
mov
adc
lds
das
dec
or
sbb
stos
push
fcompl
jbe
push
fwait
mov
mov
add
aam
or
nop
clc
mov
sbb
xlat
outsb
mov
das
jbe
inc
push
jecxz
aam
jecxz
pop
push
mov
lods
inc
xchg
enter
push
aaa
sub
bound
scas
pop
inc
or
bound
aam
pop
push
inc
rcrl
mov
jne
and
jno
stos
jb
pop
pop
bound
into
fmuls
fdiv
mov
sub
incb
hlt
pop
inc
push
xchg
or
or
test
lods
popf
sbb
imul
cmc
ljmp
xor
cli
fnclex
jp
aas
cmp
mov
imul
rep
pop
shlb
js
mov
add
cli
into
push
js
mov
out
ljmp
cmp
gs
out
aad
mov
xchg
jl
or
xchg
hlt
pop
jl
iret
pop
sub
es
xor
clc
add
mov
cmc
outsl
jne
inc
xor
ret
fidivrl
cli
inc
sbb
movl
jno
inc
out
add
bound
sub
pop
insb
fnsave
mov
lret
jae
adc
xchg
jb
shrl
nop
sahf
cmp
push
jle
rcll
and
sbb
push
repnz
ja
pop
lods
jl
ljmp
jge
inc
xor
pusha
jmp
cmp
xor
insb
stc
and
iret
inc
mov
add
sub
iret
pop
add
jge
xchg
cmp
je
jmp
scas
pusha
xchg
divl
ljmp
mov
pop
mov
test
cwtl
ja
mov
cmp
movsb
aaa
and
jno
popf
lahf
pop
or
and
pop
imul
and
jbe
xlat
mov
cwtl
fdecstp
mov
pop
aad
ret
push
decb
pushf
push
push
in
and
cmp
mov
lea
sbbl
and
or
sbb
clc
dec
sub
mov
mov
mov
leave
dec
imull
hlt
leave
pop
and
sub
sub
mov
shlb
push
call
test
xchg
ret
out
sub
xchg
inc
sarb
cld
push
pop
fidivrs
imul
push
jl
jne
jno
cltd
or
sbb
fstl
and
in
mov
xchg
jge
lods
int3
cmp
imul
enter
rcl
insl
vmovq
push
add
and
fistpl
insl
fldcw
push
mov
outsl
adc
and
xchg
adc
push
iret
xor
ja
scas
mov
pop
xor
into
jbe
jg
cmp
mov
pop
out
jno
inc
pushf
lret
sub
sub
outsb
adc
dec
fbld
pushf
pop
and
in
adc
mov
mov
xchg
sub
bound
inc
xchg
mov
outsl
mov
xor
cmp
jle
stos
shr
fsts
loopne
push
sub
lahf
cli
je
push
bound
push
sti
imul
adc
cltd
popa
cltd
jmp
jns
jne
xchg
add
movsl
icebp
adc
ds
mov
push
test
fisubrl
adc
in
jo
cmpsb
insl
imul
bound
test
lret
test
mov
xor
pop
fs
int
ss
inc
in
jp,pt
je
or
jge
cmp
jle
cmp
sti
jecxz
mov
adc
xchg
fs
aaa
hlt
and
mov
mov
movsb
outsb
push
push
cmp
out
dec
repz
int3
cli
xchg
inc
jle
sahf
leave
mov
push
mov
adc
cli
out
pop
int
inc
mov
and
aam
pop
add
sbb
lds
fs
daa
bound
shlb
es
enter
xor
jge
es
insb
dec
pusha
and
add
hlt
or
mov
fnsave
mov
out
int3
mov
pusha
cli
fs
and
mov
notl
testl
or
pop
hlt
or
inc
lahf
inc
xchg
mov
xchg
lcall
lea
mov
repz
push
arpl
dec
xor
movsl
aam
sub
aad
jae
mov
sbb
aam
aam
ja
dec
and
or
xor
add
loopne
iret
les
rorb
scas
mov
xor
int3
pop
mov
push
lea
mov
pop
inc
stos
and
push
sti
je
jecxz
mov
and
loope
aas
out
repz
fs
stos
push
push
daa
xchg
loop
jl
jecxz
sbb
lea
xchg
xchg
inc
mov
cld
jg
adc
xchg
ret
fsubs
adc
inc
les
ffree
arpl
subl
je
jp
inc
pop
hlt
or
and
mov
mov
push
cmpsl
mov
xchg
jae
jp
and
es
out
mov
cmpsl
bound
cmp
mov
lock
inc
rolb
push
sub
or
popf
sbb
push
lret
mov
inc
jecxz
pop
inc
xchg
mov
xchg
pop
jge
adc
mov
rcr
clc
in
inc
cli
insb
adc
mov
sbb
loope
sbb
cmp
out
xchg
xchg
mov
sbb
add
xchg
or
mov
clc
sub
xchg
mov
or
dec
or
or
fcompl
call
pop
dec
sub
xchg
aad
jnp
mov
inc
sbb
roll
xor
jbe
inc
add
pushf
push
and
push
pusha
push
fildl
and
or
clc
push
lret
test
fptan
xchg
add
or
gs
inc
push
sbb
push
mov
ljmp
sbb
outsb
lods
imull
mov
or
pop
insl
mov
push
mov
movsb
xor
jle
jmp
arpl
sub
int3
fsubr
mov
mov
sub
bound
sub
push
dec
xchg
mov
push
jbe
sarb
xor
jecxz
inc
imul
repz
mov
fcomi
aad
fimull
aam
cmc
fidivl
int
push
mov
icebp
aam
adcl
test
icebp
xchg
dec
rcrl
sbb
mov
or
cmp
or
xchg
inc
inc
lcall
cmpl
inc
inc
add
cmpsb
fistps
out
push
push
inc
push
xchg
std
xchg
fcompl
pop
test
or
sti
push
or
scas
fcmovnu
cmp
ja
and
imul
pop
push
outsl
push
dec
arpl
shl
xchg
es
rcr
out
cmp
or
push
and
in
dec
mov
or
mov
es
std
icebp
nop
pop
into
rorb
out
inc
push
jns
fistpll
xor
and
sub
mov
adc
jg
cld
loope
ss
cmp
cmp
sbb
scas
pop
int3
pop
loopne
xchg
fdivrl
andb
movsb
mov
and
int3
xor
out
mov
test
js
adc
cmpsb
jg
test
sar
cmpl
sarl
add
inc
pusha
sub
adc
jmp
cld
lods
inc
xor
int3
rcrb
xor
mov
mov
fs
out
pop
jmp
int
inc
mov
bound
sub
and
fwait
arpl
mov
pushf
ret
xchg
xor
shr
std
mov
pop
aad
add
shll
or
dec
adc
outsl
aas
push
adc
push
aam
dec
adc
jl
xchg
push
dec
jp
cmp
div
adc
pushf
mov
icebp
or
jo
loopne
nop
sti
inc
inc
pop
jge
mov
in
xor
mov
mov
dec
popf
push
cmpsl
sbb
push
in
cmpsl
xchg
std
repz
and
js
in
nop
xchg
mov
inc
or
sub
xchg
ret
stos
in
je
push
mov
pop
ret
bnd
pop
mov
push
adc
xor
cmp
jo
cmp
call
mov
rcl
push
fnstenv
sub
pushf
xchg
pop
add
inc
leave
mov
cmp
mov
in
pushf
outsb
jne
push
jle
xchg
jmp
and
push
sbb
mov
repz
lods
mov
stc
jle
clc
xchg
iret
jl
imul
fwait
mov
daa
adc
aas
out
enter
dec
imul
add
filds
jl,pt
lods
fistl
lret
cmp
pop
sbb
rolb
mov
cltd
aam
loopne
jbe
mov
out
adc
rol
inc
jae
rorb
fisubrs
push
lret
popf
jmp
sub
pushf
pop
xchg
mov
lods
jmp
push
fucomp
test
mov
getsec
arpl
sub
push
rcrl
js
dec
les
inc
aad
jns
imul
nop
ss
outsl
shll
les
xor
adc
cs
fwait
in
out
xlat
lock
cmp
shr
div
insb
inc
cmp
mov
inc
sub
sub
xor
add
cwtl
or
inc
sti
inc
mov
xchg
jmp
or
icebp
jae
pop
pop
sbb
adc
enter
pop
mov
push
aas
push
test
push
into
cs
jmp
inc
xchg
idivl
sbb
sub
or
push
xor
sarl
xor
test
xchg
lret
cmp
outsl
sub
jmp
xchg
mov
outsb
ja
or
mov
xchg
sub
pop
dec
mov
mov
out
fsubrs
addr16
push
aaa
testl
test
jne
mov
and
imul
sub
xor
mov
sbb
pushf
jmp
or
daa
or
scas
cmp
pop
jl
dec
sbb
inc
lahf
and
lret
ds
out
mov
or
and
iret
and
cwtl
pop
shr
in
mov
lods
scas
or
test
rcr
sar
jbe
mov
push
cli
xchg
pop
xchg
aaa
ss
repnz
xchg
test
lods
flds
sbb
bound
daa
fwait
je
icebp
dec
movsb
mov
mov
add
mov
test
ficoml
std
push
push
mov
mov
mov
iret
in
pop
cwtl
cmp
adc
cmp
scas
ss
or
xchg
jno
shr
mov
sbb
dec
push
mov
dec
and
scas
mov
dec
add
aas
mov
xchg
cli
and
jp
out
dec
lcall
adcb
mov
fcoml
mov
je
call
movl
push
stos
sbb
or
inc
mov
cli
and
popf
mov
rcr
mov
std
lods
jmp
push
ja
dec
sbb
and
test
iret
and
je
pop
testl
adc
pusha
jge
movsl
push
add
or
cmc
lcall
sti
les
inc
sbb
jne
out
inc
aas
or
mov
dec
mov
int3
adc
add
pop
adc
push
imul
jns
cs
imull
lcall
add
xor
xchg
loope
popf
pop
in
mov
cld
mov
adc
cli
pop
cld
ss
cmpsl
mov
cmp
xor
fisttps
scas
ds
or
add
jne
inc
fstps
cmp
cld
sub
jnp
sub
sub
in
inc
or
aad
push
fists
inc
ljmp
aas
xor
repnz
outsb
stos
cld
jl
out
or
or
or
pop
bound
cmp
and
movsl
add
arpl
lret
pop
aam
and
and
stos
inc
test
pop
std
jb
mov
dec
gs
mov
scas
mov
jno
sti
ja
cmc
cmp
xchg
jo
lcall
ret
out
pop
dec
imul
test
out
out
push
and
or
sub
pushf
scas
les
jnp
in
sbb
cwtl
hlt
das
add
push
data16
dec
call
enter
adc
or
aaa
lcall
aas
xor
das
jmp
xchg
fcmovnb
pop
pop
adc
out
movsl
pop
shlb
or
push
jbe
lcall
xchg
fisttpll
or
add
dec
xchg
decl
sbb
test
sbb
popa
push
xor
xorb
test
sbb
fs
and
inc
mov
pop
cli
mov
and
jbe
xchg
cmp
dec
sbb
jge
lret
pop
xchg
test
or
push
dec
inc
sub
pop
push
cmp
push
adc
jo
push
hlt
addr16
pop
push
sub
js
sub
mov
stos
mov
ret
or
jbe
cmp
insl
and
xchg
add
adc
imul
ja
mov
addl
clc
test
pop
xor
mov
les
loopne
into
loope
cwtl
mov
sbbl
les
and
sbb
pop
jmp
daa
rcll
push
aaa
add
push
inc
add
int3
add
xor
out
mov
out
push
lea
in
jmp
sub
add
data16
aad
or
pop
inc
mov
pop
iret
xchg
xor
stos
cltd
inc
aaa
add
and
xor
inc
in
or
mov
push
push
adc
jp
sub
pop
call
pop
mov
pop
pop
sbb
push
pop
les
stc
jbe
ss
pop
sub
in
mov
xchg
hlt
cmp
mov
out
rolb
sub
mov
inc
mov
sbb
dec
pop
ja
cmp
xchg
sub
outsl
subl
addr16
jno
and
test
test
sbb
jecxz
fstps
out
pop
or
xchg
jo
pop
mov
or
push
lret
fisttps
sub
movsb
jmp
push
decb
into
fiaddl
or
mov
push
lahf
xchg
test
xor
out
mulb
or
loope
stos
sahf
sbb
push
mov
iret
jns
nop
jl
pop
mov
daa
mov
in
addr16
divl
pop
lods
jg
loopne
sub
sbb
cld
cmpsl
jg
clc
xchg
dec
mov
call
pop
inc
sub
inc
in
lods
cmp
sbb
out
not
inc
push
fidivrl
fs
mov
inc
sbb
xchg
cld
sub
jle
and
xchg
push
andb
cli
shll
inc
mov
dec
pop
xchg
fwait
xor
in
dec
jbe
cmpsl
dec
fsubs
icebp
jp
inc
scas
push
ficompl
xchg
jp
dec
je
or
es
pop
int3
shrb
jns
pop
jmp
filds
mov
push
mov
xchg
xchg
jnp
das
inc
leave
xor
jl
xorb
pop
out
add
or
addr16
sbb
fwait
ss
mov
cltd
add
and
jb
dec
out
ret
das
das
sub
addl
test
inc
rcl
jae
in
adc
cs
cwtl
pop
inc
xchg
pusha
addb
jmp
loopne
movsb
and
xor
cmp
loope
movsb
mov
out
pop
insb
mov
bound
divb
dec
imul
test
leave
cmp
xor
cwtl
scas
int
pop
inc
cmpsl
loope
jno
mov
add
pop
notl
pushf
xchg
int
rsqrtps
or
and
test
mov
aam
lret
adc
inc
jecxz
imulb
divb
fidivrs
push
jne
ljmp
lock
jne
sahf
mov
leave
ds
negb
fcomip
cmc
pop
lods
dec
lcall
push
out
push
mov
pop
lret
lret
scas
aaa
sub
mov
nop
mov
shrb
je
inc
mov
xchg
movsb
subl
mov
data16
pop
push
xor
push
pushl
mov
ds
mov
sub
aas
repnz
pop
cmp
fisttpll
out
xchg
and
mov
ret
imul
dec
orb
into
in
mov
popf
ljmp
xor
xlat
mov
aam
jle
cmc
cmpsl
xchg
push
mov
add
fidivrs
iret
mov
testb
enter
push
arpl
paddq
add
push
sbb
das
imul
xchg
jecxz
adc
outsb
adc
idivb
les
jnp
push
push
jb
cmpsl
imul
les
sub
and
mov
mov
insl
sti
outsl
fidivrs
lahf
cmp
xchg
xchg
imul
push
or
aas
xor
cwtl
mov
fimuls
pop
mov
jge
inc
mov
rorl
ret
jno
jne
mov
xor
and
rclb
lock
aad
cmp
add
insb
aad
push
cmpl
add
es
clc
pusha
mov
push
push
or
jmp
add
dec
cmp
cmp
das
imul
pushf
cltd
push
and
ret
bswap
sbb
lods
jnp
icebp
mov
xor
outsl
movsb
fcmovnb
mov
mov
cltd
int
push
jl
fs
jne
rol
and
subb
fs
fsub
shrb
fwait
jp
cmp
mov
jp
add
mov
cmp
pop
adc
mov
cltd
rorb
fs
in
inc
add
cmp
or
in
dec
cmp
cwtl
jg
push
add
outsb
imul
lret
cmpl
je
sub
xchg
adc
ret
pop
mov
adcb
cmp
mov
or
sub
mov
xor
js
add
insl
inc
in
xchg
or
cltd
xor
ror
pop
loop
mov
cmpsb
les
je
or
or
cli
jmp
arpl
insb
mov
mov
or
addr16
and
fnstsw
xor
inc
xor
cmp
lret
jl
neg
fbstp
cli
rorl
fmull
call
mov
std
xchg
jge
sbb
es
sbb
dec
jecxz
fmuls
cmp
pop
xchg
jb
shr
xchg
fadds
adc
lea
cmp
add
in
push
cli
cmc
outsb
mov
jmp
fchs
and
xorl
cmp
cmc
dec
out
mov
push
or
mov
jp
es
pop
pushf
lea
or
rcrl
adc
pushf
inc
int
orb
dec
adc
pop
pop
fwait
pushf
sub
cli
ljmp
aad
adc
insb
aas
push
imul
es
imul
cmpsl
jge
nop
add
dec
xlat
pop
mov
outsb
fidivrs
adc
or
flds
stc
lods
fists
ret
test
jge
cmp
movsb
lods
adc
mov
or
pop
push
scas
in
mov
jo
mov
dec
xor
mov
adcl
pop
adc
mov
adc
mov
jnp
in
adc
or
and
add
fs
xchg
fbstp
adc
jb
mov
or
and
sarl
lds
pop
pop
movsb
sahf
lods
xlat
adc
cmp
cmp
sub
divl
and
cmp
sbb
adc
gs
sub
cltd
divl
cmc
lea
xor
bound
push
ljmp
dec
xor
and
jo
add
mull
fisttps
push
dec
xor
xchg
adc
jecxz
ss
test
pop
leave
sbb
aad
sbbl
add
popa
add
decl
fstpt
xor
bound
pop
mov
sar
cmp
fs
pop
adc
test
pop
push
pop
cmpsl
push
pusha
push
filds
ret
test
mov
mov
adc
aas
push
cmp
sub
adc
xchg
pop
xchg
out
rcrl
in
sbb
fsubl
in
pop
ljmp
mov
adc
xchg
test
pop
dec
es
addr16
incb
mov
ficompl
push
cmp
jecxz
xchg
int
fnstsw
mov
test
repz
jg
arpl
cmpsb
and
jae
fucomi
adc
aad
insl
ljmp
fwait
add
daa
mov
mov
fadds
sub
add
out
jl
cmp
lea
pop
sub
cmc
test
adc
push
push
into
scas
lret
mov
mov
pop
jno
insl
ret
push
popf
or
outsb
jecxz
repnz
out
fstpt
jno
cmc
xor
mov
je
or
jne
lods
xor
push
lock
add
fstpl
add
popa
and
push
push
dec
std
cmpb
push
push
xchg
xor
popf
shlb
lock
mov
xchg
jo
mov
add
ss
test
mov
adc
xor
mov
call
cld
push
pop
xor
std
add
add
daa
cmp
in
jge
dec
das
mov
inc
out
xor
data16
insl
mov
or
cmp
mov
incb
int
sub
insl
daa
cmpsl
mov
or
or
or
adc
cmc
mov
and
movsl
jmp
insb
out
incb
cwtl
mov
je
call
dec
fdivl
outsb
mov
out
sti
sub
jae
es
mov
mov
mov
das
push
add
loope
daa
daa
aam
nop
shrb
mov
jae
push
lea
lret
gs
cmp
or
mov
les
pop
push
lcall
or
dec
and
fadd
cwtl
pop
test
pop
sub
xchg
es
jmp
cmpsl
and
sub
push
lock
hlt
pop
xor
lods
sub
rol
outsb
movsb
pop
inc
test
inc
pop
push
pushf
arpl
xor
adc
in
xor
xchg
push
daa
hlt
fstpl
adc
add
pop
jg
rol
or
cltd
cltd
inc
pop
dec
xchg
outsl
push
push
or
lahf
lcall
scas
xchg
lock
or
inc
das
scas
push
dec
outsb
sbb
push
ja
push
mov
rorl
mov
jp
mov
pop
imul
je
sahf
jo
pop
add
int3
fs
xchg
test
push
insl
cltd
cmc
lea
mov
scas
stos
lea
imul
addr16
mov
inc
add
jge
pusha
xchg
mov
push
cmp
es
movsb
mov
inc
out
gs
pop
adc
and
mov
jo
pop
inc
pusha
insl
out
push
test
inc
popa
sub
xchg
push
push
xor
fwait
push
cmc
mov
clc
insl
jbe
fiadds
dec
in
mov
mov
in
aaa
lods
cmp
and
mov
dec
sub
cmpsl
cmp
push
sub
mov
add
gs
inc
inc
cmc
mov
mov
cwtl
call
jge
notl
out
ds
jge
and
xchg
fdivrs
inc
test
mov
pop
ljmp
xchg
and
sbb
xchg
push
mov
sti
sbb
inc
xchg
push
shll
cld
jle
inc
imulb
pop
popl
mov
daa
lahf
add
mov
cs
mov
adc
or
xor
in
sbb
and
lds
and
pcmpgtb
jnp
insl
xchg
cltd
mov
xor
insb
and
addr16
insl
clc
aaa
rolb
in
sbb
loop
add
out
xchg
sbb
mov
xchg
xor
repz
stc
pop
cmp
pop
and
ret
repnz
sarb
pusha
lcall
jno
adc
stc
out
xchg
dec
xor
mov
mov
mov
xchg
sub
ljmp
xchg
je
insb
icebp
loopne
xchg
imul
mov
mov
push
mov
test
jne
fcoml
jns
xchg
and
adc
bound
ret
push
shrl
cmovb
fildll
insl
and
xchg
push
sub
xchg
loop
push
mov
dec
xor
ss
fmulp
aam
aad
sbb
mov
pop
insb
into
xorl
rorb
xchg
lods
xor
and
icebp
jle
negb
in
movsb
mov
cmp
ljmp
in
push
push
add
add
ljmp
shrb
pusha
arpl
test
gs
mov
and
fidivs
inc
adc
cmc
pop
shll
lret
je
mov
mov
and
push
aam
lahf
push
mov
imul
loope
sbb
out
pop
mov
xor
jno
scas
sub
mov
add
jnp
jo
out
inc
add
jbe
cmp
stc
xchg
mov
out
adc
push
or
cmp
sbb
je
cmpsl
daa
stos
sarl
mov
xor
mov
test
pop
inc
jg
and
push
stos
cli
idivl
lods
sbb
inc
pop
icebp
cmpsl
push
lcall
aaa
inc
jno
xchg
inc
jae
clc
inc
test
adc
sbb
ret
adc
repnz
data16
inc
fistpll
add
inc
pop
enter
mov
mov
test
in
or
fdivs
sub
jecxz
pop
aam
xchg
jae
dec
jne
lret
push
mov
sub
lock
lods
fwait
aad
xlat
jns
sbb
mov
dec
shl
mov
jno
stos
dec
sbb
inc
dec
xchg
cmpsl
mov
dec
jmp
mov
inc
xchg
jge
and
push
out
jb
mov
add
inc
sbb
mov
dec
mov
push
divb
aaa
push
jbe
lods
repz
jle
mov
fs
jnp
adc
test
xorb
shl
cmpsl
imul
sbbl
mov
dec
xor
pop
int
mov
cli
cmp
xchg
into
pop
sbb
loopne
adc
ret
inc
pusha
mov
lret
and
xor
mov
lret
lret
mov
fisubrs
int3
inc
sub
mov
inc
inc
xorb
lds
or
shl
xchg
dec
negb
out
lods
sbb
aaa
inc
jns
inc
ljmp
fsubs
xor
sti
mov
fs
adc
adc
jp
sub
and
loope
test
and
in
sahf
mov
sarl
pusha
and
ds
mov
pop
pop
insl
pop
inc
test
push
adc
repnz
push
xchg
stos
xchg
xor
and
orl
fmuls
mov
mov
imul
and
dec
add
push
inc
sub
sub
fsubrs
arpl
jno
mov
inc
lods
scas
ljmp
pop
mov
mov
dec
and
aad
hlt
mov
int
cwtl
mov
fimull
add
leave
push
test
or
mov
adc
loop
xor
idiv
xchg
push
icebp
cld
pop
orl
ret
push
mov
pop
push
stos
lds
scas
pop
sahf
ret
and
leave
adc
pop
ja
sarb
mov
push
or
jge
out
or
jae
mov
mov
inc
mov
ja
xor
fdivs
test
dec
inc
sub
pop
push
lcall
pop
add
push
icebp
inc
lret
lods
mov
xlat
addr16
leave
and
pushf
jns
dec
test
lods
cmpsb
jae
jnp
add
in
jge
and
mov
cmc
sub
div
es
adc
xor
mov
rolb
jb
fisttpll
dec
jo
mov
cltd
or
cmpsb
sbb
or
ds
pop
add
jmp
xchg
outsl
and
cld
cmp
in
inc
jae
repnz
pop
mov
cmp
dec
ficoms
adc
lcall
pop
sahf
notl
shl
xchg
js
lahf
push
ret
das
cwtl
cltd
mov
mov
adc
and
xor
pop
adc
pushw
mov
mov
pop
fadds
int
ret
loopne
ret
inc
mov
sbb
sbb
iret
xor
mov
das
cli
popa
mov
sbb
mov
adc
lods
shlb
dec
dec
or
mov
or
mov
imul
cmp
out
int
aas
ret
sbb
imul
ret
std
outsl
test
mov
xor
lock
sbb
aas
ret
mov
enter
aam
ljmp
jg
into
or
cmp
sub
xchg
pop
push
sub
sbb
pop
pop
jo
mov
jbe
fcoml
lock
lock
xchg
ficompl
or
mov
sbb
inc
dec
fisttpll
inc
clc
sbb
sbb
adc
push
dec
mov
inc
in
xchg
or
frstor
icebp
cmp
aaa
ljmp
str
cmp
jmp
icebp
xor
fistl
aam
lods
testb
in
fisttps
aam
adc
xchg
or
negl
loopne
out
sbb
mov
jb
push
mov
flds
ss
fwait
xchg
push
loop
sub
cmpsl
xchg
xchg
jb
out
pop
mov
pop
out
and
jp
movsb
aas
xchg
sub
ss
push
orl
fsts
xor
insb
outsl
ret
int3
sbb
test
fwait
popf
out
aad
icebp
repz
das
mov
and
ret
imul
test
mov
jmp
inc
mov
inc
hlt
icebp
cmpsl
dec
push
inc
inc
inc
or
mov
xbegin
sub
ds
sbb
and
lahf
sti
or
jl
xchg
sti
xchg
cmp
mov
enter
push
incb
jle
jne
xor
das
jg
and
popa
call
cwtl
es
scas
push
shrb
pop
dec
in
xor
pop
stc
adc
mov
fadd
mulb
rorb
ljmp
jno
sub
outsl
or
pop
int
in
sub
or
cmp
dec
ljmp
out
inc
loope
push
call
inc
xchg
fstp
out
fcmovnbe
scas
dec
sub
cs
dec
mov
and
movsl
aaa
jp
inc
pop
pop
fsubl
and
mov
out
mov
mov
sbb
mov
push
adc
mov
ffreep
std
fmuls
pop
test
adc
stc
mov
or
das
test
divl
add
sbb
sub
aad
and
inc
daa
sub
inc
mov
lds
pop
je
inc
enter
jnp
or
cmc
cmc
sub
jle
lods
insl
pop
or
movsl
adc
inc
add
imul
mov
cmp
xchg
test
gs
rcrb
sub
xor
inc
aas
repz
pusha
xchg
add
aad
pop
adc
mov
inc
sub
xchg
mov
inc
and
int
mov
push
cmpb
jnp
loopne
sbb
in
lds
inc
loopne
and
movsb
and
adc
cmpsl
add
lds
add
std
and
in
xchg
push
adc
cmpsl
inc
inc
idivb
daa
inc
cwtl
cmp
jno
stos
or
xchg
mov
fcmovnb
nop
xchg
in
dec
add
jmp
pop
mov
cmp
mov
jmp
popf
lods
pop
cmp
es
aam
sub
push
xchg
pop
pop
xchg
jle
mov
dec
ror
push
popf
outsl
dec
rcrb
popa
sti
iret
sub
add
jmp
xor
xor
sub
push
mov
or
ja
loop
mov
outsb
mov
mov
sub
add
add
pop
lret
mov
xor
and
pcmpgtw
xchg
xor
inc
add
pop
or
mov
adc
cmp
jl
int3
xor
fstpt
daa
adc
loope
jnp
cwtl
pop
das
aaa
dec
jae
adc
cmp
dec
in
add
hlt
inc
sub
jmp
dec
inc
cwtl
movsb
movsl
inc
mov
mov
out
in
sbb
mov
xchg
cli
mov
mov
imul
mov
pop
hlt
pop
pusha
pop
ret
xchg
pop
into
and
movsb
adc
in
and
mov
adc
fists
loop
xchg
push
movsl
andb
mov
stc
add
es
inc
mov
adc
xchg
stos
arpl
push
jbe
jno
in
jbe
ret
dec
pop
xor
push
xor
pop
pusha
push
or
fwait
or
std
nop
std
xchg
dec
xor
jle
out
test
int
ficompl
test
dec
sbb
outsl
ja
dec
cs
jl
aaa
sub
inc
jb
fld
out
rolb
les
loopne
arpl
xor
xlat
popa
push
orb
mov
mov
sti
adc
jge
nop
sti
pop
cmpsb
push
mov
jb,pn
insb
clc
jb
daa
jo
test
fistl
aam
je
push
mov
mov
jns
dec
xchg
mov
sub
rclb
xchg
stos
xchg
fistpll
fisttpl
xchg
in
mull
mov
pop
pop
push
lock
lret
fdivs
inc
xor
mov
mov
loopne
xchg
lock
je
dec
adc
lods
loope
dec
rolb
dec
adc
fnstcw
xchg
cmc
pop
std
mov
jo
xor
ret
push
cwtl
sbbb
pop
push
push
ljmp
out
insl
jae
stc
hlt
push
add
hlt
jmp
xchg
ss
out
push
shlb
clc
push
xchg
hlt
mov
mov
orb
xchg
xchg
sub
rorl
and
push
stc
cmc
cld
sub
and
std
mov
frstpm(287
cmp
test
mov
add
sub
xlat
xchg
lods
push
movsb
in
in
xor
mov
jbe
xor
stc
pop
mov
in
jo
icebp
mov
ljmp
xlat
add
jb
lods
adc
pushf
add
pop
in
jecxz
daa
jae
int3
hlt
pop
adc
jecxz
sbb
xchg
gs
imul
sarl
lock
ss
xchg
movsb
test
dec
mov
sbb
loopne
cmp
sub
push
mov
mov
inc
lock
cmp
fs
mov
jecxz
fwait
insl
ljmp
push
test
mov
iret
mov
mov
push
and
dec
and
movsb
xor
sbb
xchg
ljmp
inc
cmp
xchg
inc
pop
loopne
mov
mov
sahf
pop
jns
lea
push
and
mov
push
aaa
mov
imul
mov
mov
arpl
filds
or
sarl
and
or
nop
pop
hlt
fidivrl
ss
inc
mov
or
push
movsb
fidivrl
mov
dec
fdivrs
inc
ficoml
cmp
call
adc
push
cmpsb
pusha
aam
test
xor
pop
outsb
loopne
adcb
inc
jecxz
or
insl
sbb
in
das
mov
sub
roll
mov
adc
out
cltd
rep
outsb
arpl
mov
rclb
add
lods
lds
cmp
mov
add
addl
or
es
push
je
clc
int
inc
repnz
into
jo
push
in
inc
cmpsl
push
pop
adc
dec
iret
xor
push
or
es
pop
lods
nop
add
cmp
cmpsb
sbb
in
lock
pop
xor
idivl
jle
pop
pop
orl
int3
sahf
mov
cmpsl
adc
lods
mov
jle
or
add
adc
jno
and
push
stos
push
sahf
nop
push
mov
xchg
dec
dec
push
xchg
test
gs
cli
mov
xchg
jg
sbb
xor
pushf
dec
cs
inc
and
dec
out
jae
adc
lock
data16
adcl
dec
icebp
rcl
mov
dec
fwait
rcll
push
dec
in
pushf
adc
push
adc
addr16
jae
mov
mov
leave
les
fnstsw
cmp
out
sbb
je
cmp
aaa
cmp
xchg
xor
fadd
sti
psrld
inc
pop
inc
or
jmp
and
jne
jle
andb
jb
rcrl
into
mov
icebp
adc
ds
dec
enter
jecxz
jl
jge
inc
or
test
push
sub
pushf
sbb
imul
jno
dec
aam
jmp
ret
daa
mov
in
push
push
cs
sbb
int
cmpsl
es
dec
mov
push
add
mov
movsl
sub
inc
addr16
fcoml
jg
int3
cmp
test
pop
mov
xor
cli
js
rcrl
jnp
xchg
xor
lds
ja
inc
push
out
xchg
mov
outsb
push
jns
mov
hlt
pushf
int3
sbb
adc
lret
jge
and
xor
xchg
test
adc
cs
ret
cmpsb
pushf
ret
jg
mov
das
mov
pop
mov
mov
jns
push
inc
sbb
and
pop
push
push
fdivl
mov
cld
sbb
cmp
stos
lods
xchg
xor
mov
stos
mov
mov
into
fdivrs
cwtl
js
addr16
lahf
repz
outsb
mov
xchg
or
mov
pop
cmp
lods
mov
call
pusha
mov
mov
inc
and
ret
and
aaa
ret
call
testl
sbb
jno
adc
in
dec
xor
mov
or
jle
bound
xchg
lcall
mov
dec
dec
and
xor
popa
xchg
xchg
or
bound
inc
loope
bound
outsl
test
popf
push
push
adc
sub
shl
fmul
sub
mov
popf
test
cmc
imul
les
out
and
add
jns
ret
inc
in
inc
cli
mov
arpl
and
repz
mov
sub
faddp
mov
leave
push
xlat
mov
push
dec
out
adc
test
lret
sbb
sarl
cmpsl
push
les
add
inc
pop
push
pop
icebp
orb
sarl
mov
sub
or
xchg
fwait
repz
test
and
dec
fs
sub
enter
or
popf
adc
fiaddl
xor
in
mov
in
outsb
scas
clc
repnz
mov
or
adc
out
jb
xchg
xchg
push
cmp
cltd
mov
mov
mov
pop
iret
mov
dec
cmpsb
push
push
rcrl
fsubr
sub
mov
shlb
push
insb
push
cmp
mov
scas
add
mov
fcoms
inc
inc
pop
out
push
ljmp
xchg
sub
sub
ret
test
rclb
mov
dec
dec
jle
loop
and
jmp
ja
mov
add
sbb
fs
mov
dec
adc
mov
adc
jl
enter
jns
xlat
push
xchg
inc
cmpsb
dec
roll
cld
popa
adc
xchg
icebp
aad
ret
xorl
outsl
ror
push
popf
out
lahf
cmpsb
jl
and
mov
sub
push
js
out
dec
xchg
call
mov
leave
pop
inc
jmp
xorl
pop
inc
ljmp
mov
inc
push
dec
pop
popl
sbbb
das
bound
psubsw
add
test
xor
inc
out
mov
jle
jns
and
and
add
jno
mov
cs
cmp
fadds
dec
or
ss
call
cmp
in
pop
ret
hlt
pop
sbb
in
adc
je
jae
pop
decb
dec
out
testb
push
insb
push
xchg
push
cmp
xchg
pushf
push
mov
scas
scas
mov
leave
in
push
std
call
inc
leave
and
add
push
sbb
inc
adc
repnz
and
mov
or
mov
jbe
xor
lea
cmp
cmpl
pushf
sti
jmp
int
pop
pushf
movsb
jbe
and
int3
clc
inc
xchg
call
mov
insl
test
mov
fwait
imul
cmp
cmp
jmp
sahf
pop
loop
ss
pushf
iret
mov
outsl
mov
popf
je
lds
mov
call
mov
lret
mov
dec
ffreep
cmpb
arpl
push
dec
sbb
mov
aaa
stos
sbb
idivb
or
pop
and
jne
cld
xchg
in
push
dec
pop
push
xchg
and
cmp
sbb
xlat
xchg
nop
push
ret
mov
push
jns
jl
int3
loopne
xorl
pop
test
xchg
xor
iret
ljmp
mov
fiaddl
mov
add
xchg
lahf
fcmovnu
repz
xchg
fiaddl
clc
jae
shll
push
xor
xor
cmp
dec
cmc
sbb
call
cld
mov
scas
mov
bound
lret
sbb
cmp
lock
scas
lods
fcom
iret
mov
enter
outsb
mov
and
inc
sub
jg
test
and
stc
aas
jb
sbb
mov
icebp
adcb
fisubs
inc
sub
inc
shl
cmpsb
out
jnp
pop
mov
ds
lock
in
add
mov
mov
pop
jne
popa
daa
out
or
aad
out
arpl
out
mov
fwait
cltd
es
stc
inc
push
mov
jmp
fildl
or
add
fs
mov
das
stc
aaa
xchg
xchg
adcb
scas
loopne
mov
test
mov
nop
js
dec
or
xchg
mov
push
xor
sub
sbb
icebp
aad
pop
mov
mov
stos
pop
push
in
in
in
les
cmc
ret
js
imul
shr
in
sbb
dec
mov
repnz
in
pop
das
sub
nop
pop
or
pop
stos
ss
fnstsw
aaa
mov
jnp
in
sbb
cmp
loop
in
xor
gs
mov
or
clc
and
aaa
pop
jns
jnp
jp
mov
sub
out
jno
outsb
mov
addr16
inc
inc
mov
jns
imull
cvtpi2ps
icebp
mov
daa
push
pop
pop
mov
jge
adc
mov
in
insl
jle
xor
dec
adc
aaa
xchg
insl
stos
xchg
xchg
adc
or
xchg
repnz
xor
mov
fisttpl
mov
out
lea
add
lret
nop
out
pop
dec
push
lret
aas
cmp
pop
fcmovnb
incl
and
or
mov
lock
inc
rcll
jp
xchg
and
pop
inc
adc
pop
sub
leave
add
js
movsb
jbe
mov
xchg
or
bound
jo
stc
movsb
pop
mov
or
mov
push
mov
push
pop
jle
in
xchg
sbb
xchg
mov
or
pop
jp
jl
in
and
nop
pusha
xlat
lds
dec
push
jecxz
mov
push
aas
adcl
ljmp
push
inc
hlt
jmp
jb
mov
test
stos
jg
fcmovbe
das
push
and
mov
test
sub
test
xlat
cmpsb
test
pop
or
clc
jb
lock
in
jecxz
mov
jne
jge
push
sub
mov
sbb
movsb
sbb
xchg
aam
mov
jle
mov
loop
inc
pop
or
pop
push
gs
jg
jno
insl
in
jg
and
xor
pop
and
popa
xor
aam
mov
imulb
sbb
jne
pop
rcrl
aad
lds
xlat
jp
test
mov
jl
mov
cmp
fldpi
or
gs
sbb
pop
inc
jns
pop
daa
clc
leave
jnp
cmpsl
ss
mov
addl
mov
pop
and
out
jae
es
adc
pop
sbb
adc
adc
in
mov
jge
cs
adc
hlt
xchg
ret
sbb
mov
pop
into
ss
ds
dec
pop
cmp
xchg
lods
clc
xchg
push
mov
mov
adc
ja
loope
mov
shlb
scas
dec
ljmp
mov
out
dec
xor
mov
fs
int
xchg
out
rorl
jbe
inc
das
call
repnz
xor
push
pop
icebp
fimull
jl
stos
ret
or
sub
cld
imul
scas
xchg
test
mov
dec
pop
cmp
sbbb
push
dec
mov
sub
popf
cmc
inc
jecxz
pop
push
mov
lods
stos
jmp
and
mov
sbb
mov
repnz
data16
mov
cmpsl
insb
fcmovnu
das
movsb
insb
add
int3
sbb
lret
pop
xor
in
int
dec
mov
dec
fs
push
push
mov
loop
ds
pop
rorl
insb
mov
fadd
sub
mov
pushf
push
push
rclb
jg
xchg
xchg
pop
cmp
cmp
dec
outsl
jno
jg
add
mov
mov
lahf
fs
mov
cwtl
add
xor
repnz
mov
addb
lock
pop
push
sti
jg
popa
test
sub
int
scas
hlt
jle
or
xlat
xchg
add
mov
inc
stos
xor
sub
dec
pop
mov
scas
test
lret
outsb
nop
mov
sub
and
push
int3
mov
outsb
mov
dec
enter
mov
adc
movsb
loope
add
sbb
ret
insl
pop
lds
loope
mov
push
xchg
mov
insl
out
ljmp
cli
rcrl
daa
sar
ficomps
ss
mov
int3
bswap
add
xchg
mov
lea
cltd
call
fyl2xp1
fcoms
js
cmp
push
cmc
aam
daa
les
and
ljmp
xchg
or
jg
inc
or
pop
sahf
fsubrl
sarb
and
mov
das
sbb
int
sub
in
add
push
mov
aad
cmpb
ret
add
xchg
lret
adc
ret
mov
iret
ss
mov
in
lds
xchg
or
ficomps
mov
mov
into
dec
xor
sub
jo
xchg
ds
jne
pop
ret
loope
adc
pop
push
repnz
mov
adcb
iret
mov
call
ljmp
add
movsl
gs
ljmp
push
push
movsb
add
loopne
adc
and
scas
xor
jge
lock
xchg
jne
std
int3
in
mov
and
roll
testb
cmpsb
xor
dec
das
push
add
xor
not
rolb
jl
cmc
je
xor
and
fwait
pop
push
dec
inc
inc
fwait
cltd
xor
lds
cmp
stc
mov
ret
pop
mov
push
xchg
jno
sbb
into
js
ljmp
cwtl
dec
mov
and
scas
sbb
mov
in
mov
iret
jl
pop
mov
fwait
cmp
push
pop
pop
je
in
mov
and
jns
stc
lods
int3
icebp
mov
sbb
ds
arpl
cwtl
nop
mov
add
dec
lahf
xorl
call
out
shll
call
negl
push
pop
inc
cmp
fxch
daa
dec
jb
int3
cmpsb
mov
jae
nop
out
fsubrl
mov
jecxz
lea
mov
sbb
je
xchg
pushf
xor
cmpl
adc
add
dec
daa
movsb
fcomi
lret
xchg
adc
je
flds
add
add
xor
jb
pop
fsts
js
addr16
and
fadd
push
xor
dec
insl
xchg
sub
xorl
or
cli
gs
adc
jns
jmp
popf
test
call
push
notl
mov
inc
xor
adc
add
dec
mov
mov
pop
xlat
and
out
dec
outsl
and
dec
jnp
mov
scas
mov
inc
jnp
adc
ja
mov
xor
sbb
jecxz
mov
adc
mov
inc
adc
lret
xchg
mov
out
mov
scas
sahf
cmpsb
scas
faddl
out
and
imul
sub
fwait
les
cmp
or
popf
xchg
cmpsb
aad
lea
imul
cmc
xor
mov
jp
in
lds
aas
sti
xor
xchg
or
inc
jo
pusha
sub
imul
inc
xchg
push
js
cltd
rclb
lret
mov
in
fildll
mov
in
aam
imul
push
xchg
movl
scas
outsb
add
leave
hlt
sbbb
sub
add
mov
fstpl
aas
sub
jnp
cld
fists
mov
ret
pusha
jno
sti
enter
dec
cwtl
jne
sti
xor
cli
sub
divb
notl
sub
xor
out
dec
adcl
dec
int
rcrl
mov
lods
sbb
mov
inc
sbb
cmpsl
mov
adc
push
adc
scas
mov
sub
xchg
mov
roll
iret
xchg
and
lods
dec
sti
jne
fsubrs
mov
imul
rcll
push
push
insb
inc
and
hlt
adc
fsts
fistpl
clc
jmp
xchg
rcrb
cmp
dec
add
addr16
inc
ds
paddw
out
adc
sbb
mov
out
or
and
ss
jecxz
adc
pop
mov
in
inc
jmp
ficomps
jo
or
push
insb
jne
test
pop
lcall
or
call
mov
arpl
ret
xchg
pop
jo
lret
or
insl
dec
mov
ja
jnp
cmp
fcompl
jmp
cmc
arpl
adc
stos
sub
dec
pop
push
adc
pusha
idiv
push
mov
imul
inc
xor
xchg
mov
pop
repz
cmc
mov
aam
data16
loopne
add
xchg
bound
xchg
ret
cmp
inc
fnstsw
das
cmpsb
push
iret
and
and
testb
xsaves
hlt
cmpsb
mov
int3
mov
adc
lea
lods
add
stos
mov
jmp
les
in
jb
inc
ficompl
outsl
rcrl
pop
imul
add
dec
xchg
xchg
nop
std
popf
pushf
mov
rclb
ljmp
cmp
fcoml
add
pusha
mov
push
orb
xchg
mov
lds
in
popf
mov
hlt
mov
jg
dec
adc
scas
mov
bound
incb
add
push
dec
mov
dec
int
in
cmp
dec
push
cmp
push
adc
inc
and
push
addr16
add
adc
in
movlps
or
ljmp
xorl
out
dec
and
jecxz
leave
xchg
sti
adc
pop
pop
cmpsb
push
jo
and
sbb
mov
push
iret
mov
mov
icebp
cmp
jl
dec
faddl
out
mov
jp,pn
push
jecxz
pop
sbb
xor
notb
jbe
pushl
sub
out
fsubrs
push
in
daa
sub
das
or
scas
sub
imul
inc
jno
xchg
add
xchg
inc
es
ljmp
nop
push
jecxz
add
ret
je
sbb
stos
repnz
or
jg
jns
leave
adc
data16
cs
mov
sbbl
mov
push
orb
pushf
pop
and
lahf
ja
adc
inc
mov
sahf
sbb
out
lods
repz
xor
adc
and
leave
subb
mov
cmp
jecxz
mov
dec
aad
adc
cs
adc
push
repnz
pushf
xor
mov
daa
jl
lahf
mov
lcall
sub
cmpsb
xor
sbb
mov
inc
or
dec
out
fisttpll
aam
fs
lret
popa
imul
out
dec
int3
mov
cli
shll
out
aaa
sub
imul
mov
jl
dec
and
xchg
lods
jae
xchg
or
mov
or
int3
jl
xchg
sub
xor
ljmp
add
loop
dec
mov
sub
mov
inc
fsubs
nop
mov
ss
xor
cmp
scas
out
aaa
adcb
mov
inc
imul
int3
add
popa
call
repz
popa
cmp
outsl
scas
cwtl
dec
mov
mov
xchg
mov
add
push
cmp
cmc
pusha
leave
push
add
mov
mov
in
dec
mov
sub
in
inc
and
ret
xchg
and
mov
dec
out
inc
adcl
lods
cwtl
add
je
lds
dec
rep
xchg
fcomps
add
pop
xor
les
sbb
shl
xchg
cmp
aam
push
mov
mov
and
fldt
aad
cmp
les
mov
push
fcomps
push
pop
or
adc
je
jp
lods
sbb
out
fwait
scas
sbb
mov
ja
repnz
fmul
mov
lret
dec
jno
dec
ds
push
jl
or
sub
cmc
arpl
insb
shlb
pusha
push
ja
cmp
testb
cs
pop
push
les
xchg
out
cwtl
stos
or
inc
mov
push
xchg
rorl
iret
add
xchg
mov
cwtl
dec
sub
addl
mov
daa
push
xchg
or
xor
cmp
add
repnz
cmpsb
add
loopne
clc
in
lret
jmp
lret
pop
jno
push
dec
or
scas
cs
clc
lret
shrb
mov
aaa
xchg
inc
lret
pop
cmp
mov
pop
shrl
push
push
arpl
aaa
or
mov
jge
fucomi
inc
add
mov
pop
jnp
and
in
xchg
sti
ss
mov
add
or
and
mov
pop
add
jl
cwtl
push
push
mov
xchg
pop
add
fstps
mov
xor
int
jb
sub
jmp
inc
and
mov
jge
sub
dec
int3
jbe
cli
das
pop
shlb
fmulp
mov
xchg
loopne
out
jle
xor
scas
cmp
ds
xor
inc
adc
into
xlat
xlat
push
nop
int
pop
and
fnsave
inc
dec
mov
push
stc
jecxz
xor
fwait
dec
jae
xchg
add
jae
cli
jne
shlb
lods
mov
imul
dec
inc
data16
add
push
add
pop
mov
mov
adc
fwait
notb
movsb
sub
aas
sbb
cmp
inc
rcrl
fbstp
xor
push
adcl
jmp
out
pop
pop
xor
sbb
int
pop
fildl
jmp
rorb
xchg
mov
mov
arpl
aad
inc
push
outsb
sub
jl
sub
test
cmpsb
inc
mov
push
and
lock
jb
movsl
mov
cmpsb
in
sbb
cmpb
fadd
pop
pop
ffreep
sub
jmp
out
insl
add
xchg
lds
fldt
int
sub
sub
mov
fxch
xchg
mov
jae
in
sbbl
cmp
enter
imul
mov
push
push
push
nop
cmp
sbb
sub
or
sarb
fdivl
cs
fisubl
xchg
xor
dec
int3
xchg
out
mov
push
nop
jo
mov
push
or
test
std
pop
mov
ret
adc
jecxz
mov
movsb
push
push
cmpsb
es
lock
test
mov
cli
mov
pop
xor
sbb
mov
or
aad
jg
jne
negl
rcr
mov
jno
jns
sbb
mov
and
test
and
rorl
pop
push
out
out
iret
mov
inc
xchg
mov
int3
mov
ljmp
bound
mov
fwait
and
xchg
les
mov
out
mov
sti
rorb
sbb
cli
stos
je
mov
jle
cli
mov
push
push
daa
cmc
pop
movsl
sti
sub
cmp
in
push
inc
int
jns
cld
scas
xor
and
out
or
je
leave
dec
fsts
xor
jne
push
les
mov
lret
sbb
jno
and
lcall
jmp
insb
pop
mov
and
pop
jb
in
sbb
xor
xchg
or
in
mov
jle
inc
addl
stos
sub
outsb
lock
cmp
mov
test
adc
push
mov
dec
dec
pop
jge
sub
cltd
inc
shlb
fidivl
fwait
scas
jecxz
out
call
jecxz
jb
cmp
ror
cltd
jle
xchg
xor
mov
mov
push
aas
mov
sti
sub
xor
adc
in
daa
popa
add
mov
sbb
aaa
or
das
jns
cli
insb
or
stos
xor
sub
mov
adc
mov
lods
adc
fiadds
dec
mov
pop
scas
jmp
cmp
bound
mov
mov
pop
cmp
cmpsb
popf
lds
shll
jb
mov
adc
adc
jle
pop
mov
add
sub
mov
xchg
rcll
sbb
adc
sub
pop
xchg
lcall
xor
out
or
loope
jae
data16
jo
outsb
ret
or
xchg
imul
cmp
bound
push
out
push
or
sahf
imul
push
sbb
aam
sahf
dec
stos
aam
adcb
sub
mov
pop
shrb
andb
out
enter
xor
test
jns
push
stos
jne
cmp
add
out
loop
in
in
and
pop
cli
jb
insl
pusha
pop
ret
add
call
jnp
push
xchg
xor
pop
adc
push
cs
sarl
scas
je
mov
jmp
ficompl
in
sbb
mov
mov
cwtl
in
sub
pop
jge
mov
sti
jne
or
in
cmp
cltd
sub
and
cmp
mov
stc
aam
test
pop
and
jae
std
les
add
inc
xchg
xchg
cmp
push
in
mov
sbb
stc
loope
movl
adc
mov
cmp
xchg
arpl
jecxz
mov
dec
cmp
jl
js
es
add
push
dec
mov
lock
push
jnp
mov
mov
aad
std
in
cwtl
add
sbb
pop
das
mov
mov
dec
or
push
jp
leave
shrb
dec
or
inc
push
lods
jl
ret
inc
push
insl
push
ja
inc
loopne
enter
and
mov
xchg
arpl
addr16
dec
cmc
sbb
ja
dec
mov
pusha
xchg
add
or
aas
sub
or
mov
iret
rclb
push
inc
imul
push
dec
mov
loopne
rol
pop
and
mov
cmp
push
mov
cld
dec
lods
int3
repz
and
or
xor
adc
cmpxchg
mov
and
add
cmpl
or
mov
xor
jg
add
dec
and
iret
and
insl
stc
lods
inc
cmc
push
dec
jp
rcrb
jge
insl
mov
sub
and
popf
sahf
mov
mov
jae
lret
cmpsl
cmp
mov
xchg
popf
lcall
out
in
shll
mov
std
jbe
andb
fimuls
pushf
pop
les
jns
pop
cmp
out
addr16
xchg
icebp
cmp
repz
xchg
sti
movsl
cmp
cmp
out
fs
dec
pusha
int
or
mov
fstps
shl
fcomps
pushf
mov
mov
nop
push
daa
adc
testb
mov
push
scas
cmp
add
mov
cmp
int3
cwtl
dec
mov
fistl
outsb
pop
loope
sub
fidivl
dec
out
data16
mov
mov
inc
call
cmp
dec
xor
aad
cmc
and
testl
inc
sbb
push
imul
fs
xor
mov
dec
mov
lea
enter
pushf
hlt
loope
pop
mov
sahf
in
dec
add
ret
fidivrs
mov
cmc
sbb
out
shlb
out
cmpsl
mov
popa
pop
adc
es
add
cmp
and
mov
arpl
xchg
dec
jg
push
mov
xchg
xchg
push
pop
mov
aas
cmp
mov
daa
inc
arpl
or
fildll
loop
movb
insb
dec
stos
ss
test
push
jmp
mov
dec
mov
fnstsw
outsl
and
inc
std
stc
cmpb
and
repnz
test
icebp
addr16
xchg
mov
mov
sbb
cmp
mov
xor
neg
pop
lds
sub
mov
and
es
add
scas
aam
fidivrs
imul
pop
pop
cmc
dec
xchg
imul
jle
pop
or
and
adc
inc
addb
xchg
stos
adc
testl
outsb
stos
mov
dec
push
mov
inc
in
fimuls
xchg
pop
stos
jae
jb
loop
pop
xchg
int
adc
ret
lcall
xor
mov
insb
cs
bound
cmp
mov
cmp
push
aaa
push
fcoml
test
enter
adc
sub
cltd
test
inc
push
sbbb
and
in
sahf
push
incl
aam
dec
mov
mov
jbe
pop
gs
xchg
pop
imul
xlat
shrl
dec
push
fdivs
repz
lret
ds
mov
scas
push
popf
sub
xor
push
jle
inc
push
in
and
push
mov
ljmp
pop
mov
shll
adc
push
sub
scas
outsl
jns
xor
es
pop
jmp
sarb
inc
mov
add
into
pop
jl
mov
jmp
xchg
jl
lret
scas
jno
mov
es
or
or
jl
jb
pusha
and
adc
mov
pushf
lods
xchg
xor
jecxz
mov
push
stos
ss
fldl
out
xor
imul
pushf
xchg
push
mov
lahf
jo
mov
jp
adc
outsb
ficoms
mov
cli
inc
push
gs
xor
xchg
sbb
mov
pusha
psubb
mov
add
mov
pop
clc
arpl
jo
xor
stc
mov
sti
icebp
dec
adcb
fisubrs
lret
sub
pop
mov
bound
stos
fabs
xrelease
sbb
inc
cwtl
push
mov
mov
mov
push
cwtl
pop
push
leave
cmp
rcrb
push
ret
jmp
mov
clc
ja
dec
xchg
inc
in
stos
data16
xorb
imul
add
outsl
mov
in
fists
inc
jns
or
xor
sahf
mov
push
add
xchg
xor
ss
sahf
xlat
xor
xor
ret
and
pop
xchg
mov
dec
pop
xor
addb
cli
inc
mov
das
sbb
xor
addr16
cmp
xchg
sub
mov
cmp
shrb
fldenv
testl
aaa
ljmp
notl
cli
xchg
icebp
lcall
inc
and
pop
sub
dec
mov
cmp
lcall
fstps
pop
mov
cmpb
sahf
xlat
jnp
and
icebp
push
das
negb
in
xor
jg
mov
cwtl
inc
mov
insl
mov
cmpsb
and
and
mov
add
test
bound
jbe
lret
jns
fld
and
mov
repnz
xchg
or
ljmp
jnp
sub
lds
push
and
stos
insl
xor
or
xchg
adc
sub
inc
out
mov
stos
aas
xchg
aaa
out
inc
or
pop
xchg
jg
or
popf
add
in
lret
mov
loope
xorb
mov
fcomp
sub
outsl
orl
cli
out
int
call
lods
pop
mov
out
dec
cwtl
xchg
jecxz,pn
and
popf
loope
pop
je
xchg
xchg
sbb
dec
jge
mov
sub
jge
mov
in
data16
sbb
dec
test
stos
or
push
aas
xor
mov
dec
pop
mov
push
es
mov
in
mov
add
or
das
sti
je
mov
pop
popf
imul
fsubrs
pop
divb
stc
mov
dec
pop
out
cwtl
stos
dec
bound
inc
aad
inc
sub
pushf
fst
sub
inc
fldt
or
sbb
xchg
stos
imul
jle
int3
leave
outsb
leave
lods
push
and
out
lock
add
jg
mov
out
fisubrs
outsb
test
sti
ss
adc
inc
loopne
insb
mov
inc
jg
cmp
iret
sar
cmpsl
gs
dec
dec
sub
out
adc
adc
and
sahf
cmpsb
sub
xchg
sub
lret
pop
dec
stc
dec
cmpsb
adc
and
loope
int
les
lcall
add
stos
sub
mov
inc
pop
jb
in
push
in
hlt
shl
push
and
inc
test
adc
into
dec
sub
aaa
jnp
stc
bnd
mov
mov
jno
cld
mov
int3
push
mov
sahf
xor
mov
mov
mov
sub
mov
push
imul
add
cli
sub
jg
lods
lds
stc
adc
mov
out
cmp
loope
push
filds
shrb
xchg
mov
cwtl
test
sbb
leave
stos
gs
xor
pop
mov
fmuls
inc
and
repnz
fistps
lds
inc
pop
lods
comiss
push
mov
xor
lahf
lahf
mov
sti
shlb
jnp
adc
inc
adc
sub
aas
and
ds
inc
sub
dec
xor
mov
pop
mov
mov
fwait
ds
in
mov
mov
daa
lea
push
dec
jmp
push
jae
mov
or
push
jmp
cmp
mov
mov
loope
lds
mov
out
cmc
rclb
mov
in
icebp
inc
in
cmpsl
dec
lds
mov
mov
rcr
fistps
mov
aam
pop
mov
cld
fnstcw
dec
lret
sbb
pop
push
add
sub
pop
dec
aaa
imul
pop
cmpsl
notl
push
sbb
sub
jl
arpl
and
jae
mov
pop
pushf
decl
jp
pusha
lock
push
fnstcw
in
jno
push
mov
mov
jg
mov
dec
lahf
mov
xor
xor
mov
jg
dec
test
in
jg
add
in
das
fldcw
arpl
and
pop
sbb
adc
xor
outsl
xor
adc
dec
add
insb
xor
roll
push
mov
stos
mov
push
or
add
and
dec
xor
jmp
mov
and
fcmovu
mov
inc
fsubs
andl
mov
dec
and
jae
push
push
sbb
and
and
jb
jo
test
mov
subl
lods
inc
lods
adc
mov
sbb
adc
add
lcall
decb
in
mov
pop
xchg
leave
mov
mov
mov
mov
js
enter
out
fdivs
lret
add
mov
lods
ja
fiaddl
dec
add
stos
or
and
ror
in
imul
pop
sub
mov
rorl
mov
into
xchg
fimull
add
insl
out
dec
setge
lcall
pop
repnz
pop
arpl
mov
sbb
leave
imul
leave
orl
sbb
push
jmp
mov
movb
dec
ss
aam
lret
dec
ret
mov
jle
sarl
xor
sub
pop
arpl
adc
inc
lcall
jo
inc
fldcw
adc
outsl
jae
push
push
cmpsl
arpl
test
pop
icebp
mov
pop
adc
xor
push
repnz
lods
aas
adc
and
mov
mov
xchg
in
push
mov
inc
fadd
loop
scas
fisubrl
ja
movsl
outsl
popf
es
imul
xchg
mov
test
enter
adc
inc
push
nop
push
test
ljmp
or
dec
xor
mov
imul
jp
dec
int3
fwait
push
sar
xchg
shlb
sub
jl
mov
push
mov
mov
add
clc
mov
and
mov
mov
iret
aas
aam
mov
jno
jbe
jecxz
stc
aad
cld
rcll
adc
sbb
or
insl
inc
cmp
pop
push
das
jp
cmpb
les
int3
popa
sub
int
adc
fidivrl
adc
jne
and
push
push
fstl
adc
subl
shl
stc
adc
mov
push
mov
popl
push
mov
push
push
inc
mov
mov
jbe
cmp
clc
dec
popf
cmp
pop
jae
or
sub
lret
adc
and
push
out
lcall
imul
xchg
js
or
jmpw
cmp
add
into
shll
push
sub
fnsave
jns
push
adc
sub
outsb
add
cmc
out
pop
push
aam
jnp
push
pop
inc
jno
mov
repnz
mov
fnstenv
and
pop
and
call
xor
test
mov
das
cltd
cmpsb
stc
pop
cmp
stos
push
push
and
pop
jbe
fidivs
xlat
pop
ja
js
test
sbb
pop
in
jecxz
insl
inc
rorl
cmp
icebp
pop
das
imul
shll
pop
cmp
inc
add
mov
mov
cmpsl
and
jns
cmp
repnz
or
jle
push
stos
xchg
rclb
or
push
das
push
inc
mov
lods
push
push
mov
jns
mov
lods
mov
inc
sbb
fisttpll
into
mov
ja
mov
push
push
shl
jmp
add
sub
aad
clc
add
pop
inc
popa
gs
leave
sub
push
dec
cmp
sub
shrl
stos
shrl
fstl
cmpsl
fs
cltd
mov
lock
das
mov
lea
out
imull
rcrb
cltd
adc
test
lcall
test
test
cmp
pop
cmp
mov
movsl
push
mov
adc
stos
scas
push
mov
inc
fidivrs
imul
and
repz
rcll
ret
out
pop
notb
int3
loopne
dec
pop
ret
ljmp
mov
xchg
and
loopne
shrb
int3
inc
loope
add
push
or
out
cwtl
scas
add
sub
loop
sub
or
adc
xchg
mov
sub
stos
dec
xor
or
pop
addl
aam
xor
outsl
add
hlt
add
cltd
pop
insl
fldenv
cmp
std
pop
call
frstor
push
and
dec
ss
or
movsb
mov
xor
insl
sarl
mov
push
xor
xchg
lock
dec
aaa
sub
adc
pop
xchg
and
daa
negl
push
inc
test
inc
shlb
mov
adc
jg
cld
popa
jno
push
cmp
scas
stc
sbb
cmp
push
dec
or
imul
popf
or
jle
lret
or
stc
adc
dec
test
dec
lcall
loopne
mov
stos
mov
xor
ljmp
sbb
add
stos
xchg
into
mov
add
hlt
jo
cmpsb
subl
hlt
out
sub
inc
cmp
iret
lcall
jge
mov
inc
jg
xchg
sbb
sti
stc
jmp
shl
push
or
sub
pop
ss
push
lods
mov
pop
sbb
dec
js
movsb
cmp
and
push
jecxz
mov
sub
mov
popf
pop
loope
pop
cmp
push
jge
xchg
loop
cmp
cmp
xchg
movsb
mov
xlat
sbb
mov
push
loopne
pop
push
out
and
sbb
dec
lcall
xchg
mov
dec
in
outsb
cmp
lret
mov
mov
sub
push
pop
mov
xor
stos
test
out
in
inc
jae
and
and
out
repz
mov
xchg
cmpsl
pop
negb
sub
adc
cwtl
test
lock
mov
inc
lods
rolb
and
cmp
dec
aad
imul
ss
mov
mov
cs
xchg
pop
jle
icebp
xchg
xor
js
ret
push
sub
js
mov
jb
push
fwait
mov
cmp
pushf
sbb
mov
jle
or
mov
lret
lods
mov
jmp
mov
mov
adc
lds
cmp
aas
pop
ficoml
lds
mov
bound
sub
out
sub
outsb
out
rorl
or
mov
sahf
rorb
jge
aad
or
xlat
icebp
stos
xor
pop
andb
mov
cld
cmp
mov
shrl
push
movsb
clc
pusha
sub
test
push
add
cmp
add
xchg
out
push
test
sti
inc
mov
push
into
adc
mov
mov
lea
push
pop
test
ja
lcall
xlat
xor
xchg
scas
push
inc
push
push
pusha
cmpsl
pop
and
mov
fldcw
adc
in
cmp
out
dec
add
mov
lret
test
pop
jp
aad
jae
xchg
into
cmp
adc
stc
push
dec
sub
mov
dec
movsb
sbb
dec
mull
stc
ret
pop
fildll
xchg
push
mov
enter
cmp
test
or
and
mov
fwait
in
sub
ds
ret
inc
xor
loopne
lds
gs
sahf
xchg
sub
push
mov
inc
lcall
ret
add
adc
pop
mov
pop
or
jnp
sub
ret
mov
or
mov
jne
mov
out
out
xchg
jmp
pop
leave
push
inc
mov
push
cltd
add
jno
fldcw
stc
sub
sub
movsl
aas
mov
xor
sub
out
cmpsb
je
push
arpl
pop
pop
cmp
adc
fstps
cmpsl
in
push
push
int3
and
fcoml
add
popf
cmp
subl
aam
mov
mov
sbb
add
fsubr
lock
inc
add
dec
cmpsb
sub
pop
cwtl
stc
in
mov
das
arpl
clc
or
sbb
jo
mov
add
or
adc
push
sub
inc
aam
cmp
test
sti
ja
stos
neg
sar
adc
sahf
mov
sarl
cmp
or
xor
loopne
sahf
jmp
jecxz
inc
cwtl
mov
sub
mov
aad
xchg
aam
xor
push
xchg
sub
adc
ret
adc
pusha
leave
sub
push
sub
leave
lcall
or
mov
shlb
popa
mov
pop
inc
sbb
rolb
mov
inc
lahf
fwait
lds
cmpsb
xchg
sbb
sbb
test
and
push
adc
xor
jmp
jmp
stos
pop
fcmovbe
push
fsubrs
ds
fidivl
mov
mov
xor
fildl
and
fdivp
ss
inc
mov
outsl
push
pop
fnstenv
insl
outsl
dec
std
push
enter
inc
sub
xchg
xchg
stos
cs
cli
push
insb
xchg
mov
cmp
mov
inc
inc
shll
fcompl
and
test
sbb
std
push
data16
xor
xchg
dec
cmc
jno
push
or
imul
pop
or
decl
enter
pop
popa
jle
in
inc
jnp
cwtl
inc
repz
fidivrl
aad
push
mov
mov
idivl
sub
fwait
cmp
mov
mov
sub
lock
sbb
xor
lret
cmp
mov
test
adcl
in
sub
out
xor
mov
lea
xchg
jp
testl
aad
nop
lahf
and
or
xlat
out
or
mov
mov
dec
js
cmpb
add
enter
pop
mov
dec
mov
fidivrs
jae
mulb
pop
add
adc
lret
mov
test
std
and
fcomp
imul
cs
adc
pop
inc
sub
stos
xchg
call
sub
jnp
int
pop
mov
and
pusha
jge
or
pop
incl
xchg
in
mov
sub
jle
int
sbb
adc
mov
aad
push
les
or
mov
daa
and
mov
aaa
lret
filds
dec
dec
lahf
inc
lret
aam
mov
ja
iret
and
mov
repnz
outsb
icebp
fadd
sub
xor
xchg
pop
insb
inc
enter
out
and
inc
pop
fdivrl
mov
or
mov
clc
daa
push
cmp
mov
pop
lds
sbb
stos
xor
dec
hlt
sub
cltd
fwait
mov
call
popa
push
insb
out
and
out
fs
jmp
imul
push
aaa
or
mov
push
and
add
adc
rorl
in
ljmp
cmpsb
nop
cmp
sbb
push
adc
and
pop
sbb
ret
xor
xchg
inc
daa
mov
pop
int3
jno
add
push
sbb
movsb
and
or
mov
push
mov
test
inc
jb
sahf
std
dec
inc
into
ds
scas
aad
movsb
push
push
push
movsb
mov
or
cmp
test
decb
stos
arpl
xor
pop
xor
rcr
int
fmuls
adc
push
inc
jbe
addr16
ret
and
lock
imul
out
out
jecxz
inc
outsb
in
stc
pop
and
mov
xor
in
leave
mov
push
gs
ss
in
xor
arpl
jae
cmpb
sarl
sub
mov
xor
test
lahf
test
mov
imul
ljmp
cld
pushf
push
or
inc
leave
jge
adc
out
add
ja
in
jbe
into
gs
mov
xchg
xchg
add
pop
inc
or
fsubr
sar
test
movsl
imul
std
inc
pop
movsb
je
xchg
mov
lea
insl
and
aam
repnz
fistpll
push
es
gs
in
mov
stos
mov
or
jmp
movsb
mov
jge
dec
idivb
jbe
imul
ja
shll
leave
inc
pop
clc
push
repnz
mov
notb
mov
pusha
stos
xor
faddl
jmp
sbb
push
dec
ret
inc
arpl
and
mov
mov
inc
sbb
fwait
std
sub
xchg
mov
in
insb
sarb
repnz
inc
inc
add
popa
jmp
les
jg
jno
imul
mov
and
cmc
xchg
and
daa
inc
and
bound
and
in
lods
ss
pop
push
sbb
pop
mov
push
xchg
push
fiaddl
jns
addr16
iret
adc
int3
call
and
sub
cwtl
cmp
mov
pop
dec
pop
jne
fs
sub
std
nop
lods
jne
test
out
fnsave
pop
aad
xor
mov
xchg
repnz
scas
push
xchg
icebp
xchg
jae
movb
mov
pop
push
cmp
and
subl
push
jp
incb
cmp
cwtl
xchg
pop
test
mov
fisttpll
push
int3
je
mov
jl
in
in
addb
test
and
and
jb
pop
push
inc
rclb
mov
fwait
insb
fwait
mov
imul
cmc
inc
and
ljmp
push
push
pop
lds
push
mov
in
pop
xorb
out
xchg
jge
sub
js
xor
jno
jbe
or
add
adc
ljmp
mov
out
movsb
iret
inc
mov
repnz
or
dec
andb
stos
inc
addr16
cmp
sub
pushf
pusha
pop
or
mov
xchg
add
adc
and
xchg
stc
mov
jne
adcb
xor
adc
orb
inc
out
add
icebp
aaa
sti
loop
push
or
sub
lahf
popf
imul
ds
cmp
enter
inc
arpl
adc
ds
add
pop
cltd
inc
inc
pusha
mov
addr16
mov
in
int
ss
rcr
sub
insl
fldenv
test
leave
sub
jno
hlt
jle
clc
mov
mov
push
lcall
jge
push
movsl
dec
sbb
sti
pop
in
xchg
jle
lds
pop
jp
mov
mov
fisttpll
inc
pop
push
mov
add
mov
sub
mov
or
xor
in
push
loope
sub
fildl
mov
in
loop
sub
clc
imul
xchg
sub
rorb
or
jb
incb
stos
lahf
outsl
stos
and
jne
addb
in
pop
and
stc
mov
xchg
aaa
das
xchg
pop
push
push
pop
push
cmp
lods
js
push
jp
popf
ret
mov
mov
mov
jo
int
lret
or
push
iret
ret
sbb
ljmp
notb
insb
inc
cmpsl
push
cmc
or
ficompl
pop
enter
adc
mov
xlat
int
jge
das
dec
xchg
xor
pop
xchg
enter
xchg
xor
sbb
lods
push
xchg
in
xchg
inc
mov
test
ss
push
dec
jge
sub
test
jnp,pn
in
xor
ds
push
sbb
xor
addr16
sub
lods
lods
rep
scas
lahf
in
inc
pop
push
addb
lret
aam
sarb
icebp
add
adc
std
data16
shl
aam
fcompl
xchg
cmpsb
xchg
js
shl
loop
int3
xchg
sub
push
mov
loope
loope
jno
inc
mov
dec
mov
jne
push
add
push
addr16
and
push
cmpsb
iret
mov
inc
fcmovnbe
and
xchg
mov
icebp
aad
push
cs
pop
dec
loopne
inc
aad
ja
add
mov
jbe
lea
push
adc
pop
sub
les
mov
pop
stc
dec
mov
out
or
cmp
test
adcb
sub
imul
in
aas
std
xchg
ss
inc
mov
mov
mov
shlb
sub
mov
call
in
sub
enter
outsb
loop
sbb
jmp
lahf
and
or
fstl
mov
jbe
cltd
sbb
stos
gs
lret
shr
lea
cmc
mov
ror
imul
iret
in
push
mov
adc
ficoml
push
jo
xchg
mov
cmp
inc
mov
add
outsl
mov
pop
cld
into
pop
stos
clc
push
ret
jbe
dec
cmp
frstor
ja
xlat
pop
fisubs
icebp
adc
sbbb
fwait
loop
scas
push
idivl
imul
cmp
mov
or
lods
pop
out
lods
daa
xchg
mov
sbb
xchg
cmp
lret
icebp
adc
clc
lock
addl
jo
clc
jno
add
imul
test
hlt
subl
push
es
ret
push
jg
aaa
xor
mov
psubq
push
inc
sbb
sarb
mov
xor
fwait
pop
stc
pop
jge
fcmovb
test
nop
imul
adc
mov
jl
fnstenv
sub
inc
outsb
xorl
inc
mov
out
fisttps
andl
pusha
pop
cmp
imul
lcall
xor
mov
enter
sub
xor
sti
adcl
dec
mov
cmp
sbb
xor
lahf
stc
cmp
xorw
inc
xchg
mov
lret
int
ret
dec
push
jno
push
into
nop
sub
adc
aam
and
into
jb
sbb
out
push
xchg
add
jmp
xchg
and
push
mov
cwtl
mov
lods
jl
adc
mov
test
rolb
out
enter
jae
jl
cmp
cli
lret
je
sahf
fs
movsb
cmp
and
icebp
dec
addb
inc
mov
shll
jno
xchg
pop
inc
jns
mov
ret
and
push
orl
movsb
jns
shrb
rorl
ss
mov
aam
push
cld
sbb
cli
mov
test
repnz
loop
loope
sbb
cmp
fwait
out
sahf
add
andb
inc
cmp
lods
or
addr16
mov
fisttpll
inc
xchg
pop
nop
dec
aam
sbb
fwait
sub
mov
mov
repnz
dec
and
pop
aaa
in
lret
inc
mov
pusha
inc
ljmp
mov
jae
pop
test
xchg
movlps
insb
test
jp
idivb
aad
out
test
xchg
jmp
cmp
js
adcl
ret
jmp
pop
or
sub
rcrl
aas
fists
mov
hlt
js
jge
fimull
in
dec
test
push
sbb
mov
outsb
fsubrp
sarl
int
xchg
divl
dec
mov
push
jno
adc
daa
pop
pop
out
jae
xor
and
aam
push
xlat
mull
add
lcall
scas
sub
cmp
fst
push
es
pop
sub
rclb
arpl
data16
xchg
sbb
pop
push
mov
aaa
les
add
and
movsl
xchg
pop
mov
dec
leave
enter
int
lcall
add
and
fwait
sub
sbb
jns
xor
outsl
divb
daa
or
outsl
push
lea
adc
movl
movsb
xor
ror
mov
lret
inc
adc
out
push
and
pop
mov
push
bswap
call
aam
add
adc
das
inc
dec
lret
jne
mov
addr16
dec
or
inc
fsubl
sub
insb
fisttpl
call
out
cld
xchg
cmpsb
shlb
inc
js
dec
out
inc
add
jae
cld
clc
push
outsl
xchg
pusha
cld
fcmovnb
dec
jmp
xchg
jl
sbb
ljmp
lds
je
icebp
push
arpl
inc
pop
insb
ja
bound
dec
dec
lds
cmpsb
ss
xchg
popa
ficoms
test
add
mov
jle
inc
mov
or
mov
cld
and
push
and
cmpsl
in
cltd
jecxz
add
out
push
or
ss
shlb
sub
pop
out
sbb
insl
mov
aam
movsl
xchg
mov
mov
je
xchg
cmpsl
xor
loop
repz
xchg
sub
into
out
hlt
sub
pop
in
xchg
cmp
add
cwtl
sub
jle
sbb
orl
out
or
fndisi(8087
dec
dec
or
adc
std
cmp
int3
push
jb
scas
stc
mov
push
lods
mov
int
js
das
cmp
int
adc
cmp
cmp
outsb
xlat
inc
jne
inc
cltd
and
les
icebp
xchg
movhlps
fsts
movsl
in
jae
jns
pop
pop
out
pop
dec
mov
push
loop
aad
faddp
sub
inc
dec
jle
xlat
sub
jns
inc
in
enter
mov
lret
inc
out
jmp
cmp
sbb
adc
addr16
lods
cwtl
dec
into
shrl
push
mov
jno
and
rcr
add
jo
and
jae
ljmp
add
aas
mov
push
fldl
dec
mov
jb
or
insl
jne
inc
pop
std
cmpsw
push
cmp
or
out
out
out
push
xchg
mov
xchg
and
add
sub
int
jle
push
sbb
jecxz
push
pop
inc
inc
imul
mov
ficoml
xor
cmp
popf
ja
mov
mov
rolb
and
mov
mov
push
ss
rcrb
jae
sahf
push
pop
xor
in
ret
fidivrs
inc
inc
stos
adc
inc
jns
cmp
arpl
or
inc
negb
push
pop
mov
fmulp
jp
sub
adc
push
ja
cltd
mov
dec
mov
inc
xlat
lahf
cmc
test
lahf
lds
jbe
loopne
roll
xor
dec
negb
dec
pushf
jb
mov
mov
mov
lods
int3
jl
jge
lahf
inc
mov
push
add
jo
test
int3
mov
sub
mov
cmp
inc
lret
repnz
mov
cmc
push
jne
clc
xor
out
cmpsl
insb
aaa
in
rcl
or
xorb
mov
cmp
adc
fiaddl
mov
xor
xor
fadd
mov
loope
inc
fdivrl
xor
jle
cmp
inc
mov
xor
and
dec
outsl
adc
in
insl
inc
out
or
decl
lds
mov
jae
aaa
mov
lds
push
push
sbb
cmpsl
dec
imul
push
mov
xor
rorb
dec
aad
iret
movsb
jg
lret
mov
and
xchg
test
xor
push
xor
lods
pop
dec
std
sbb
cmp
into
aad
push
pop
jge
dec
out
xchg
push
cmp
cmp
lods
sarb
sub
ficomps
push
and
sbb
push
sub
inc
xor
lods
push
test
fdivrs
or
je
jae
inc
cld
cmp
inc
or
lods
leave
aad
enter
push
fs
je
ret
sti
sbb
xchg
int3
popa
flds
inc
xchg
inc
cmc
stos
lock
xchg
mov
jae
adc
incb
lahf
rcr
hlt
out
inc
inc
sub
or
arpl
jo
pusha
ljmp
jne
pop
sbb
ret
inc
cmpsb
in
mov
stos
inc
or
cmc
xchg
adc
popa
inc
push
add
push
sub
mov
out
mov
aad
out
popa
hlt
lods
xor
pop
cli
xchg
ret
jne
ret
inc
insl
repnz
mov
jae
jb
sahf
dec
insl
or
jmp
adc
cmp
jnp
test
sub
pop
aad
adc
mov
out
lods
std
cmc
jae
lahf
sbb
repz
movsb
push
mov
mov
cmp
lret
mov
push
push
xchg
fdivs
cwtl
sub
add
xchg
xchg
xchg
cmp
sbb
pop
popa
jne
fstpt
inc
mov
jl
lods
xor
decb
sub
les
aaa
adc
test
xor
fs
add
je
popa
dec
cmp
subl
repz
fiadds
jno
fstl
lds
mov
pop
stos
mov
call
lahf
insl
lret
cmp
push
cmpsl
ret
or
jmp
shlb
outsb
pop
data16
test
arpl
dec
in
and
push
sbb
in
jmp
addb
jbe
ds
fiaddl
or
fcmove
inc
adc
popa
icebp
add
add
pop
or
fsubs
dec
lret
fistps
pop
lods
gs
cli
fbstp
sub
sti
mov
je
test
pop
mov
sahf
push
nop
pop
adc
pop
sbb
and
inc
stc
test
jae
mov
jo
adc
mov
loopne
dec
adc
out
cmp
outsl
movsb
push
enter
jp
mov
ret
jno
movsl
sti
insl
lock
jmp
insb
outsl
fnsave
mov
fidivs
pop
jg
in
repnz
xchg
shll
adc
or
push
jnp
mov
aas
pop
mov
in
scas
addb
imul
push
cld
movsl
push
fidivrs
dec
dec
rep
stos
jl
stc
test
lcall
pop
and
sub
filds
enter
and
add
pop
clc
and
xor
mov
aas
jecxz
or
push
or
clc
pop
push
adc
lock
sti
push
icebp
int
xchg
xchg
scas
pop
xchg
adc
addr16
cmpsb
push
jecxz
data16
push
and
xchg
mov
adc
jmp
mov
decb
aad
in
gs
fstpl
push
rorb
push
je
pop
mov
shrb
test
ret
sbb
jo
cmp
bound
mov
test
mov
insl
push
call
jge,pn
je
setae
cmp
jmp
mov
fidivrs
js
jno
fistpl
add
xchg
mov
loope
jge
push
cmp
adcb
jnp
js
mov
fdiv
xor
test
jbe
dec
mov
fists
sub
loop
rolb
add
out
hlt
add
and
xchg
pop
jns
sbb
cmp
lahf
repz
out
addr16
xchg
mov
mov
adc
inc
pop
xchg
mov
dec
aad
jne
shr
aas
or
aad
mov
dec
jo
std
xchg
je
lock
cmp
cmp
rclb
inc
in
pop
and
sbb
jg
xor
push
mov
add
fwait
xor
jmp
jl
inc
push
lea
ja
push
mov
leave
or
cmp
cltd
dec
sbb
ret
sbb
jb
mov
dec
sbb
mov
shl
push
sbb
mov
add
xchg
add
add
mov
out
inc
cwtl
xchg
mov
jp
mov
addr16
adc
cmpsb
outsl
xchg
xchg
hlt
cmp
test
decl
xlat
icebp
rcr
adc
movsl
push
lock
cwtl
pop
add
pop
std
push
and
push
arpl
pop
jecxz
decb
mov
pop
inc
jae
cmp
xchg
and
nop
cmp
sbb
pop
dec
daa
xchg
push
stos
mov
push
fisubl
movsl
bswap
call
outsb
mov
test
mov
cmpsb
call
fadd
dec
cmp
add
in
jg
and
lods
mov
jne
jecxz
movq
sub
dec
cld
mov
arpl
jmp
xchg
das
rorl
loope
leave
push
mov
push
shll
mov
cmpsb
jle
hlt
cli
bound
dec
adc
mov
push
push
fcoml
cmp
xor
or
mov
ljmp
xchg
js
sbb
imull
lea
cltd
pop
imul
inc
cmpsb
mov
xchg
xor
mov
dec
inc
enter
aam
in
push
pop
xor
sbbb
mov
cld
jecxz
imul
xchg
pop
xchg
sbbl
addr16
and
push
bound
jecxz
push
neg
out
lods
rol
inc
dec
icebp
xchg
dec
xlat
cmp
repz
sbb
mov
xchg
xor
nop
pop
push
loopne
mov
cmp
xor
movups
pop
outsl
xchg
pop
mov
cwtl
stos
adc
dec
mov
test
jmp
jb
aad
pop
call
pop
fcoml
mov
push
pop
jno
sbb
xchg
scas
push
jge
stos
sub
add
add
std
cmpsb
inc
ljmp
dec
inc
das
pop
xchg
test
inc
cmp
lods
dec
sar
adc
incb
es
pushf
in
sub
cmp
xchg
mov
jo
lods
xchg
in
data16
inc
int3
cli
mov
in
push
mov
popa
lret
push
dec
icebp
out
sub
lods
in
pop
shl
xchg
mov
and
xchg
xchg
stos
addr16
pop
sub
int3
add
cmp
sbb
pusha
jmp
arpl
in
mov
adc
mov
xchg
out
xor
mov
outsl
cmpsl
pop
jge
dec
in
pop
lcall
in
ret
roll
push
les
repz
into
mov
cmc
add
cld
lds
sub
cltd
xchg
mov
mov
pop
jo
cwtl
outsb
sub
lcall
pop
push
mov
test
insl
or
pushf
sti
dec
repnz
add
lcall
ret
not
push
cmp
jnp
or
aad
cwtl
nop
jle
test
sti
mov
aam
in
pop
inc
mov
loop
adc
cmp
jg
push
pop
lds
jae
mov
sbb
scas
gs
sub
mov
push
inc
inc
leave
popf
jge
movlps
or
sbb
push
fiaddl
mov
adc
jmp
cmp
imul
and
lods
sub
mov
int
je
movsl
popf
add
push
lret
pop
mov
xchg
mov
xchg
dec
cld
ja
xchg
mov
ds
dec
mov
scas
nop
cli
cli
pop
ja
add
dec
mov
push
jmp
data16
ret
mov
mov
cmp
mov
dec
lcall
sbb
lods
dec
xchg
hlt
mov
hlt
daa
sub
std
push
scas
hlt
mov
dec
mov
inc
push
cmp
or
mov
sub
cmp
mov
lods
pushf
adc
pop
aad
ss
lahf
sbb
outsb
dec
sub
jp
loope
mov
mul
ds
xor
arpl
mov
mov
pop
mov
mov
mov
and
pop
pop
dec
je
cltd
mov
cmc
aad
dec
rorb
push
mov
push
mov
int
push
jbe
imul
add
push
inc
add
pop
int3
jl
loopne
or
rcl
jae
sub
data16
aas
add
shr
iret
fimuls
add
aas
cmp
aad
sbb
dec
movsl
jnp
mov
xor
xchg
cmp
cli
js
les
into
int
sahf
jmp
cmp
je
stos
cmp
push
dec
outsb
xor
fs
or
xchg
push
pop
fidivs
pop
pop
andl
jnp
icebp
or
call
scas
jg
in
jns
ret
mov
push
imul
pop
push
sub
xor
nop
xlat
dec
and
loop
push
insl
loope
add
xor
push
mov
fidivrs
cltd
inc
mov
fs
in
cs
xchg
jecxz
movsl
sbb
and
lret
mov
out
addr16
add
lret
addr16
jge
jmp
cmp
adc
in
fdivr
sub
stos
in
jae
or
aas
ja
dec
repnz
ja
lock
data16
cmp
gs
lods
ficoms
inc
out
fcmovnbe
mov
lock
pop
test
mov
cmp
jl
movsb
sub
mov
andl
mov
cmc
xchg
cmp
mov
dec
lods
jne
imul
pop
test
out
push
dec
daa
jecxz
cmp
lret
fcmovnu
in
xor
xchg
adc
adc
arpl
mov
pop
adcl
pop
loope
movsl
test
daa
xchg
mov
dec
shrb
mov
dec
addr16
xchg
mov
call
mov
lcall
mov
test
out
mov
scas
lods
cmp
push
xchg
pop
mov
imul
jbe
sbb
repz
cmpl
push
xchg
mov
int
das
mov
cmpsb
and
nop
xchg
push
sbb
nop
pop
push
nopl
jno
sbb
mov
sub
sbb
adc
dec
lret
jae
in
mov
in
cli
test
or
push
sbb
bound
sbb
shll
dec
adc
xor
add
and
mov
adc
mov
add
flds
mov
repnz
call
out
jns
aas
adc
mov
into
or
mov
sarl
push
pop
xchg
push
and
lcall
bound
xor
jp
push
cld
mov
lods
adc
je
xchg
clc
mov
test
xor
push
inc
mov
cmp
dec
outsb
js
cli
jg
test
test
push
mov
jp
xor
inc
mov
fistpl
enterw
sti
je
int
aad
sub
jb
dec
test
dec
ljmp
dec
notl
xchg
scas
into
out
cmp
cmpsb
sbb
jmp
dec
dec
cwtl
les
ljmp
rorb
fcomps
test
fwait
mov
mov
insl
lcall
decb
int
jg
push
or
xchg
and
fs
lock
clc
nop
push
adc
mov
pandn
ds
or
adc
nop
loop
in
add
jo
dec
push
push
jg
mov
lea
inc
mov
fmul
test
inc
lret
cmp
in
lods
icebp
xchg
sub
js
pop
adc
xor
jne
mov
fsubr
loop
stos
lods
lea
push
leave
shlb
xlat
enter
imul
mov
xor
test
ss
cmp
pop
addb
cmp
out
push
push
je
nop
popf
data16
shr
push
add
sbb
push
adc
repz
mov
jno
cmp
pop
cltd
lret
pop
cmpsl
stc
mov
in
cltd
mov
movsb
adc
test
aas
int
push
or
aad
aad
divb
cmp
inc
ljmp
sbb
add
dec
in
sub
cli
stc
sbb
fs
add
cmp
testb
int3
mov
mov
add
rorb
int3
jne
cmp
adc
inc
pop
sub
xchg
sbb
negl
xchg
push
call
inc
lahf
dec
js
lea
cmc
and
mov
fisubrl
cwtl
lahf
mov
sub
xor
in
fmuls
add
xchg
mov
and
test
fsubrl
mov
jmp
or
out
dec
or
mov
or
or
mov
xchg
mov
push
mov
adcb
jns
add
cmp
inc
dec
sub
lods
std
fstl
shr
mov
sub
inc
inc
push
testl
and
push
inc
xor
stos
pop
or
shl
or
add
in
imul
mov
int
cmp
jmp
inc
adc
xchg
sub
pop
shl
inc
cmp
cmpsb
nop
in
add
arpl
movsl
jns
stos
outsb
sub
aam
fisttpll
push
mov
or
jae
lret
push
enter
sbb
lahf
lods
jae
hlt
sar
jne
ss
test
jl
sub
imulb
adc
mov
mov
xor
repz
movsb
xchg
sti
aam
push
jbe
push
in
xchg
dec
fbld
loopne
sub
sti
aaa
pusha
data16
in
pusha
xlat
imul
test
loope
ja
sbb
lds
mov
jnp
les
stc
mov
adc
fwait
push
out
adc
and
lret
test
mov
insl
lock
add
bnd
lods
xor
inc
or
and
dec
je
imul
in
nop
lds
popa
sub
icebp
aaa
mov
dec
push
das
add
or
add
cmp
pushf
and
gs
or
stos
jae
push
dec
fmul
dec
pop
lock
adc
fdivr
ja
mov
aam
xor
pop
stc
push
push
pop
cwtl
movb
mov
push
mov
jmp
push
dec
dec
mov
push
mov
cmp
or
outsb
jg
loope
jns
dec
add
ss
jmp
sub
gs
jle
dec
pushf
pusha
xchg
ret
dec
sub
int
mov
jle
mov
cld
mov
lret
fldenv
sahf
pop
ds
adc
xchg
je
in
and
dec
mov
test
jb
push
movsl
mov
push
jae
rcll
imul
jb
and
je
sbb
cmp
lds
pop
jns
js
iret
mov
pusha
adc
vhsubps
jp
outsl
enter
stos
lcall
pop
test
cmp
inc
jb
xor
and
lods
cmpsl
jbe
xchg
loop
mov
jg
dec
jge
test
and
test
mov
fwait
dec
push
mov
mov
lea
xor
movsl
lods
sbb
in
mov
push
mov
std
cmp
das
add
sub
mov
movsl
mov
push
sub
jo
jp
xchg
sub
sti
dec
add
rol
push
pop
idiv
and
or
sub
mov
push
push
xchg
cwtl
or
add
inc
add
mov
les
aas
bound
out
inc
adc
inc
sbb
out
adc
sbbl
aad
scas
aaa
ja
repnz
mov
mov
adc
les
adc
std
jle
and
subl
inc
out
pop
test
test
and
adc
and
xchg
add
std
lahf
inc
test
pop
mov
daa
sub
push
mov
add
push
pop
negb
jns
xor
sbb
jbe
push
subl
pop
cli
mov
dec
gs
sti
insl
xor
int3
xor
cmp
inc
out
test
pop
std
jge
mov
int3
xor
mov
dec
insb
sub
fsubrl
in
xchg
push
int
bound
icebp
mov
xor
std
fwait
sub
pop
adc
ja
push
add
adc
jle
pop
sub
pop
lea
mov
test
jae
push
mov
loopne
sbb
cwtl
mov
scas
mov
cmp
popa
mov
xor
push
or
aad
dec
in
mov
sbb
jae
rcrb
loop
add
int
cli
sysexit
inc
xor
pop
fidivs
push
push
jno
push
inc
jnp
stc
sub
hlt
test
or
push
dec
and
cmpsb
enter
in
nop
out
mov
push
daa
fildll
lock
sbb
fs
jo
popf
push
sbb
and
lds
popf
out
dec
jmp
mov
or
movsb
sub
jae
sahf
sbb
not
push
jg
mov
inc
movsb
fnstenv
outsl
adc
jbe
pop
mov
jge
data16
and
hlt
loopne
adc
dec
sub
sub
fsubs
lahf
je
lret
xchg
popf
imul
mov
push
test
or
mov
jle
jmp
es
cli
jmp
pop
je
fldt
xlat
clc
sub
cwtl
pop
xchg
sub
roll
jp
pusha
cmp
sub
jmp
inc
jg
shll
dec
adcb
insl
clc
inc
stc
pop
cmpb
ja
xchg
xchg
test
into
xor
movsl
lret
cmp
jg
jb
sahf
lds
sub
shlb
or
adc
mov
lods
arpl
adc
mov
cmp
addr16
jle
and
jg
and
inc
into
insl
or
push
sub
int
push
subl
and
sbb
hlt
lds
insl
mov
xchg
add
mov
cltd
ds
fs
sub
add
bound
test
dec
sahf
out
insl
or
mov
sahf
mulb
adcb
ja
sub
pop
cmp
pop
ficoms
negl
jo
sbb
call
and
sub
jno
loope
ds
or
sahf
pop
mov
scas
aaa
rol
test
fwait
pop
add
and
dec
fisubl
sbb
pop
stos
sbb
jmp
xchg
je
bound
les
sahf
jb
sti
mov
inc
js
xlat
mov
dec
clc
ljmp
aam
addr16
imul
rcrl
adc
cmp
jnp
xchg
ljmp
sub
js
inc
or
stos
mov
lea
stc
pop
push
add
add
dec
scas
jne
inc
in
mov
mov
sub
ljmp
xchg
jb
xchg
into
movsb
jbe
push
shrd
push
dec
and
das
data16
pop
sbb
inc
outsl
mov
hlt
inc
and
sahf
pop
adc
pop
jg
lret
xor
push
sub
push
imul
into
cmp
mov
adc
jle
test
and
mov
stos
cmp
stc
mov
sbb
jge
stc
sti
imul
jno
sub
push
push
fs
adc
adc
sub
dec
push
and
and
andb
jb
roll
sbb
xchg
adc
fimull
stos
movsb
and
mov
push
xchg
enter
mov
sbb
mov
push
fwait
add
cld
inc
mov
ja
aam
sbbb
mov
notl
int
mov
cmp
pop
add
pop
cmc
and
xor
dec
push
push
in
inc
xchg
outsb
xor
pop
sub
lret
push
rcr
jns
jl
daa
push
in
push
aad
adc
test
repz
pop
loopne
push
adc
pusha
ret
fldt
xchg
cmp
ret
enter
xor
sti
pushf
and
fsubl
insb
lea
cmpsb
add
out
je
and
inc
movsb
push
sbbb
sbb
cmp
cmp
enter
test
push
ffree
shl
inc
jns
mov
mov
or
icebp
inc
rolb
and
mov
mov
pop
cmpl
jbe
cmp
mov
out
add
subl
mov
xor
push
das
pusha
push
mov
scas
push
loop
hlt
je
adc
push
and
lret
mov
lret
cmp
add
out
sub
mov
dec
pop
push
mov
cmp
dec
fisttpl
scas
sub
sbb
loope
pusha
movsb
mov
push
mov
iret
mov
int
mov
jb
iret
mov
insb
imul
fs
sahf
push
xchg
test
hlt
in
popa
subl
mov
nop
js
and
arpl
in
push
insl
cmpsb
mov
fisubl
jbe
push
push
pop
jmp
daa
or
sub
xor
dec
lods
les
incb
mov
sub
pop
std
add
jge
adc
insb
iret
add
sub
pop
popa
add
leave
dec
sbb
and
push
inc
imul
inc
mov
int
jge
ffree
or
sub
arpl
ljmp
pushl
push
lock
les
jae
lea
loopne
jno
inc
xchg
dec
daa
fnstcw
iret
arpl
imul
mov
shrl
sub
pop
mov
js
inc
mov
bound
outsb
inc
jmp
test
push
inc
jmp
lods
popf
int3
cmp
cmp
hlt
pusha
sti
aas
lahf
fildl
out
popf
push
loope
cmpsl
add
and
adc
xor
shlb
sahf
sub
ss
sub
out
dec
and
mov
sub
push
and
cs
fs
jbe
cmc
sbb
add
mov
cmp
push
pusha
pushl
outsb
out
mov
pop
mov
nop
icebp
pop
mov
mov
pop
or
jae
mov
fistpl
push
ret
pop
je
loop
mov
add
stc
jnp
mov
cmc
outsl
aas
and
pop
jmp
lea
push
scas
decl
add
pop
nop
add
stos
push
repnz
xor
aaa
sub
or
mov
nop
imul
xlat
pushf
cwtl
inc
and
ja
or
outsl
mov
push
cmp
mov
sbb
ss
aam
push
rolb
mov
dec
movsl
pop
mov
mov
inc
divb
mov
pop
xor
push
dec
jns
addr16
pop
aas
pushf
andl
mov
out
dec
mov
cwtl
test
push
pop
sub
xchg
in
mov
xor
xchg
adc
mov
movsb
pop
jnp
ja
fcoml
xor
scas
clc
sub
pop
addr16
sahf
mov
lock
ds
or
mov
pop
add
xor
dec
dec
and
loope
add
popf
dec
shrl
xchg
mov
xchg
dec
push
adc
loop
fidivs
out
lret
mov
mov
dec
xorl
sbb
test
repnz
jle
ja
cmp
mov
repnz
xchg
test
xchg
pop
push
and
bound
daa
and
cwtl
inc
pop
cld
enter
lcall
rolb
psraw
mov
outsl
jns
mov
into
scas
roll
push
and
and
push
shlb
jmp
ds
lcall
sub
inc
xchg
mov
fsts
cmp
adc
dec
xor
adc
add
dec
in
divb
lahf
jle
fistl
mov
stc
outsl
das
or
mov
subl
sub
mov
mov
push
xchg
inc
aad
lahf
mov
mov
push
adc
call
sub
adcl
ljmp
dec
sbb
push
mov
aam
mov
adc
loope
rcrl
jae
dec
sahf
jns
int3
push
xor
out
pop
sub
call
bound
ss
scas
dec
ds
lcall
xchg
inc
cmp
pop
cmp
inc
lahf
lods
or
xor
es
dec
fdivrl
mull
jl
mov
leave
and
cli
sub
cmp
jmp
out
cmp
xchg
cmp
inc
mov
dec
jmp
js
push
xchg
mov
cs
jp
out
add
xchg
mov
int3
or
push
scas
addl
sub
cmp
aaa
or
push
adc
push
pop
mov
xchg
xchg
push
mov
aad
jo
and
mov
dec
inc
lods
popf
cmpsb
pop
pop
dec
js
ret
cli
push
push
xor
lret
jnp
mov
push
jle
bound
aad
and
sbb
xor
mov
dec
das
addr16
xor
js
out
pop
inc
pop
mov
jne
call
fstl
push
cltd
scas
jge
sub
cli
shll
pop
xchg
cmp
movb
imul
xor
testl
int
mov
mov
nop
xor
scas
or
int
nop
rorl
pop
cmp
into
pusha
insl
inc
push
or
inc
fcomps
jne
dec
fisubs
pop
pusha
push
pop
fs
xor
pop
lock
mov
adc
and
cltd
les
out
mov
das
inc
sub
vunpckhpd
dec
jle
pop
mov
pop
inc
popf
orb
mov
rol
mov
fistpl
sti
dec
in
dec
push
mov
xchg
dec
pop
mov
cli
xor
lds
pop
cmp
jle
xchg
frstors
jbe
outsb
js
pop
jno
movsb
or
frstor
inc
mov
pop
inc
lods
ret
xor
mov
stos
xor
mov
xchg
pop
adc
pop
mov
daa
sub
jb
mov
and
outsl
sahf
rol
rclb
mov
ljmp
sbb
loopne
mov
rcrl
hlt
cmpsl
xlat
fnsave
inc
mov
std
sbb
or
adc
push
dec
je
outsl
ret
xlat
and
inc
out
sbb
jb
int
cwtl
add
out
ret
cld
dec
cmpsb
pop
shll
cmpsb
cmc
movsl
cld
mov
push
negb
mov
inc
mov
popf
push
jo
push
pop
push
loopne
hlt
mov
dec
insl
inc
out
fdivrs
mov
inc
stos
bound
filds
call
push
push
jae
xchg
inc
movsl
in
mov
xchg
cmc
sbb
fcompl
stos
pmulhuw
mov
sbb
xor
sub
adc
adc
into
dec
sti
fwait
aaa
pushf
xor
sbb
shll
mov
pop
roll
sbb
add
out
inc
jne
add
cmc
dec
negb
mov
bound
leave
or
pushf
mov
mov
and
push
mov
aas
mov
push
ja
add
out
cli
je
insb
test
xlat
cltd
in
pop
jb
mov
stos
inc
clc
sub
push
xchg
sahf
mov
and
push
aam
scas
aam
dec
mov
ret
push
divb
sbb
ret
test
sbb
or
aas
sbb
pushf
inc
inc
adc
cld
fimuls
jl
dec
iret
jp
in
shlb
std
mov
mov
arpl
sub
fmul
inc
sbb
sti
push
mov
out
jecxz
lea
popf
loope
repz
jp
adcl
ds
out
arpl
xor
and
or
mov
and
fldl
cmp
movsb
ljmp
lcall
movsl
jo
sub
jg
push
dec
rep
dec
adc
rclb
jne
fmuls
mov
imul
outsb
mov
rcrl
push
aam
mov
mov
popa
and
psllw
movsl
sbbl
sub
stos
es
pop
push
adc
xchg
mov
gs
stos
pop
pop
imul
xchg
cmc
add
or
and
push
inc
push
cmp
jne
lock
dec
outsb
pop
imul
movsb
test
xchg
mov
push
xchg
and
inc
aam
pop
and
sti
mov
fisubrl
ss
je
scas
js
mov
imul
outsb
out
and
cwtl
cltd
shll
sbb
push
ja
dec
xchg
je
in
mov
icebp
out
int
mov
or
loop
les
inc
imul
sahf
and
push
inc
and
out
mov
fnstsw
jns
cmp
addr16
push
push
sub
fistps
dec
sub
dec
scas
bound
nop
and
insb
add
insb
out
adc
outsl
faddp
adc
xchg
arpl
pop
scas
mov
cmp
mov
xor
sbb
sbb
and
mov
jmp
push
lahf
roll
cmp
dec
cmp
insb
jno
mov
xchg
and
cmc
stc
in
xchg
adc
add
push
adc
out
mov
xchg
sbb
xchg
lret
add
or
in
hlt
mov
push
mov
lods
fwait
loope
cmc
ja
gs
cmc
xchg
sbb
push
or
xor
xchg
inc
pop
fistps
add
xchg
mov
jnp
sbb
stos
push
arpl
mov
test
ja
xor
sbb
jecxz
mov
loop
dec
jg
jg
in
mov
movsl
gs
adc
xchg
scas
je
xor
loopne
scas
xor
dec
leave
pop
cmpsl
push
inc
jae
inc
sub
stc
ja
xor
sbb
sbb
add
int
sbbl
lcall
add
xchg
leave
dec
add
mov
mov
xor
stos
sbb
cmc
into
sbb
sbb
scas
dec
inc
not
add
adc
cmp
outsb
mov
jae
cs
aas
js
mov
xchg
or
out
jns
push
pop
sub
es
popf
stos
adc
xor
movl
inc
and
jmpw
cld
push
dec
hlt
cld
pop
sti
out
mov
mov
xor
std
xchg
mov
dec
and
mov
pusha
xchg
xor
pop
cmp
rcl
xchg
jecxz
inc
testb
aam
add
push
das
mov
mov
xlat
mov
cmpsl
and
pushf
cwtl
cmp
cmp
fldcw
out
in
push
aaa
and
lahf
mov
psrld
mov
fs
and
insl
jne
cmpsb
xchg
popa
and
call
pop
xchg
jae
lcall
jmp
adc
push
and
in
adc
imul
jnp
pop
rclb
cmpsb
outsl
mov
inc
lods
ret
xor
mov
lcall
mov
push
je
addl
adc
rolb
pop
inc
mov
push
lods
jno
cld
or
sti
scas
aaa
pop
pop
xor
or
mov
nop
fcompl
push
pop
insl
ss
test
nop
out
leave
pop
sbb
mov
mov
insl
xchg
mov
pop
sub
xlat
out
ljmp
hlt
mov
and
mov
xchg
jbe
and
into
or
sbb
mov
lret
in
inc
and
dec
hlt
mov
das
or
lret
mov
jnp
mov
sub
std
rcrb
adc
imul
jne
mov
inc
lret
jp
push
sbb
cmp
lahf
jmp
leave
dec
jge
cmp
lret
sub
push
insl
mov
and
jge
leave
daa
es
add
cmpsb
jmp
xorb
dec
mov
dec
mov
and
jno
push
pusha
xchg
pop
push
push
add
adc
jno
ja
cmp
daa
and
xor
out
cli
add
jbe
mov
dec
xor
or
test
mov
mov
mov
nop
or
push
adc
mov
lods
adcl
xchg
xor
or
clc
push
icebp
out
mov
xlat
pushf
inc
sahf
adc
cmp
jbe
dec
nop
inc
inc
pop
repnz
arpl
lock
fidivs
cltd
int3
fcomi
inc
mov
lahf
in
jo
fcmovbe
lret
std
in
jbe
pop
sub
scas
shl
inc
jnp
ja
lock
aad
lods
addl
fsubl
xchg
xlat
adc
adc
in
inc
in
mov
pop
in
or
stc
insl
and
mov
push
push
add
mov
mov
jmp
ljmp
in
fstp
mov
leave
fdivl
mov
mov
mov
jmp
ficoml
xchg
js
hlt
sub
es
rclb
adc
data16
xchg
adc
xor
jae
sub
mov
testl
pop
sub
addl
xchg
mov
xor
cmpsl
mov
or
hlt
jmp
loop
pop
jbe
or
or
sahf
cmp
mov
mov
ss
mov
pop
sti
jge
pop
aaa
lcall
sub
jne
or
add
sahf
jb
jg
xor
or
sbb
lds
cwtl
in
leave
dec
dec
insl
xor
hlt
cli
out
xchg
xchg
xchg
fldl
push
cltd
push
rorl
push
sti
iret
ficompl
pop
sub
scas
jecxz
lret
dec
movsl
lahf
add
adc
insl
test
ja
mov
out
sbb
lods
pop
xchg
enter
xor
imul
cmp
scas
mov
repz
inc
or
shl
scas
add
pop
mov
fiadds
mov
dec
out
xchg
rorb
js
loop
jle
xchg
adcb
xor
in
push
mov
sub
inc
mov
mov
out
pop
fldz
bound
sbb
xor
movb
xlat
loope
ret
inc
adc
mov
xor
sbb
sub
pop
adc
ficompl
jecxz
fists
mov
push
pop
iret
pop
mov
or
adc
adc
in
jb
js
sahf
mov
pop
pop
push
xor
adc
mov
lods
cmp
dec
fwait
ja
cwtl
jnp
lods
pop
inc
ficompl
dec
cltd
sub
js
insb
ss
mov
add
out
xchg
sbb
mov
mov
add
push
mov
jo
mov
jbe
sub
ljmp
adc
push
mov
xchg
push
xchg
pop
sub
mov
aam
pushf
pushf
popa
push
pop
enter
inc
or
mov
fnstsw
push
call
movsb
adc
addr16
xchg
sbb
js
push
cwtl
ja
mov
fbstp
add
fcoms
lahf
fs
jp
push
addr16
subl
cmp
xchg
sbb
lcall
jb
mov
and
rol
jge
mov
mov
test
hlt
shl
ja
jecxz
sbb
addr16
pushf
xchg
mov
in
int
mov
mov
or
xchg
jb
xchg
mov
dec
adc
push
mov
out
pop
lcall
jns
dec
ds
xchg
mov
pop
rclb
or
or
push
jmp
add
cmpsl
and
or
or
out
lcall
xchg
loope
cmpsb
frstor
ret
mov
sub
sarb
pop
add
imull
push
add
sbb
or
in
cmp
aas
lret
add
insl
es
daa
pminub
int3
mov
idivb
sti
dec
adc
jns
fnsave
in
stos
icebp
pushl
fldenv
push
out
fs
ret
push
inc
inc
jmp
ror
adc
out
imul
outsl
cltd
dec
pop
push
fxch
sub
fwait
pop
andl
test
jmp
sub
lret
gs
imul
pop
jbe
addl
jg
sahf
pop
enter
xor
aad
dec
pop
adc
jle
out
xchg
cmp
jne
addr16
shrl
mov
dec
popf
inc
dec
inc
xor
pop
xor
subb
or
repnz
sbb
ret
pop
rorb
inc
imul
mov
daa
int
adc
outsb
xor
imul
das
imul
loopne
out
jns
lock
mov
insb
fwait
bswap
addr16
dec
fisubl
enter
cmpsl
fst
movsb
in
mov
xor
push
mov
shlb
add
addl
into
jecxz
jno
add
rcrl
es
dec
lds
mov
xchg
sbb
negb
mov
jg
pop
mull
std
jmp
ljmp
xchg
cltd
adc
cmpsl
cmpsl
stos
and
and
filds
sub
ficoms
icebp
mov
jl
faddl
push
negb
mov
jae
mov
les
or
loopne
add
or
cmpsl
nop
pop
adc
xchg
cmc
cmpsb
push
iret
mov
adc
dec
xchg
mov
test
js
out
sti
jle
adcb
cld
lahf
cmp
out
mov
mov
call
negb
or
vcvtps2dq
jp
xchg
lds
mov
jp
or
in
sub
imul
and
in
dec
dec
ret
mov
into
in
pop
icebp
add
add
enter
push
adcb
inc
mov
clc
stos
stos
inc
shlb
pop
popf
aad
sti
mov
sahf
jl
and
stc
xor
dec
xchg
ret
lods
inc
and
and
rorl
insl
mov
lods
jno
mov
and
add
out
data16
jg
int3
jmp
popa
dec
cmp
ljmp
xchg
andl
decl
out
popf
xchg
mov
mov
mov
pusha
aaa
push
sub
lds
arpl
inc
or
ja
sbb
or
pop
fldl
adc
pop
test
jb
mov
mov
sbb
push
stc
or
mov
outsb
pop
and
inc
into
lahf
sahf
jae
xchg
jo
jno
in
icebp
push
idivb
mov
jo
movsl
sbb
mov
outsl
sbb
mov
clc
cmp
mov
pop
fsubl
arpl
sahf
pop
movsl
in
aas
sub
ljmp
mov
cmpsb
icebp
lahf
insl
test
nop
jne
push
pop
fwait
inc
addr16
inc
mov
mov
jmp
dec
sbb
push
lret
cltd
xor
lods
mov
dec
fisubrs
jne
push
jg
jl
inc
leave
mov
sbb
lds
stc
or
dec
ja
cs
test
xor
jo
pop
adc
adc
lods
fisttpl
and
aad
cltd
int
cmp
sti
repnz
imul
iret
mov
loop
sahf
enter
je
mov
jo
mov
jge
add
scas
push
jne
loope
mov
xchg
or
cmp
mov
clc
adc
sub
push
ret
roll
out
test
sbb
adc
dec
adc
pop
mov
rcrb
dec
jl
push
clc
push
mov
pop
and
shrb
les
jno
sbb
fidivrl
mov
inc
xor
arpl
imul
cmpsl
in
mov
andb
fcomi
xor
les
filds
xlat
popa
mov
test
es
jnp
popa
dec
in
jno
fistpll
or
pop
decl
in
int3
mov
imul
jns
jae
sub
sbb
int3
ds
inc
xlat
lods
cwtl
cmp
movsb
xchg
fmuls
lret
lret
dec
mov
fdivp
fstps
add
lahf
or
mov
xchg
divl
icebp
cli
pop
lcall
and
fidivl
mov
cld
jmp
imul
jno
out
mov
and
addb
xor
lcall
add
or
xchg
stos
sti
fisubrl
rol
scas
das
jl
iret
test
imul
pop
sbb
popl
mov
cli
xchg
add
rolb
aam
push
lds
fdivs
insl
xor
sbb
or
push
jnp
out
adc
lret
enter
jne
mov
mulb
test
mov
mov
ficoms
add
stc
adc
mov
imul
dec
pop
dec
insb
mov
fstp
push
out
pop
jl
sbb
call
shlb
int
and
cmp
mov
negl
daa
add
jb
cld
xchg
cmc
aad
inc
out
sub
out
sahf
xchg
icebp
inc
xor
lret
cmp
in
mov
push
in
dec
pop
sbb
xor
out
leave
sbb
sbb
mov
xor
cli
nop
xor
sti
mov
sub
lods
inc
repz
lret
cld
pop
into
jns
mov
fwait
dec
adc
ljmp
mov
dec
push
int
mov
pop
lds
ja
push
inc
xchg
cmpsl
ja
add
push
inc
and
mov
jmp
fxch
sub
rolb
addr16
clc
pop
test
push
dec
arpl
fdivl
push
adc
ljmp
mov
inc
and
ljmp
js
xchg
lods
inc
xor
dec
fstpt
push
xchg
sti
inc
pusha
sub
jmp
jecxz
ja
scas
shrl
addb
push
std
add
cmp
push
push
inc
jmp
mov
sbb
pushf
stos
arpl
adc
jecxz
xchg
test
and
test
ret
xlat
sbb
aad
mov
push
ja
add
gs
movb
xchg
cli
push
xchg
cmpb
nop
sbb
aam
xchg
cltd
mov
nop
and
in
mov
push
in
cmpl
xchg
jmp
cmp
std
xchg
stos
je
in
inc
mov
sbb
repnz
xlat
es
es
cmp
xchg
lcall
add
icebp
movsl
inc
dec
xor
inc
push
nop
out
outsl
mov
pop
and
nop
into
adcl
outsb
push
clc
fistpll
iret
add
shll
scas
dec
pop
add
mov
xchg
mov
stos
push
test
test
xor
push
into
mov
xor
or
rol
rorb
ret
adc
inc
cltd
mov
out
rdmsr
xor
push
fdivr
cmp
mov
mov
enter
inc
andb
cwtl
shlb
outsl
push
rclb
sbb
pop
mov
test
ljmp
lcall
push
lods
pop
sub
and
add
push
rcl
sti
adc
lcall
orb
sbb
sbb
bound
and
and
fiadds
inc
ja
or
loopne
daa
xor
jmp
xchg
xchg
scas
push
jb
ljmp
std
mov
test
aas
inc
lcall
pushf
and
jo
sbb
sub
addr16
sti
outsb
xorl
jne
sbb
out
pop
sub
mov
mov
rcrb
xchg
ss
mov
lcall
mov
je
adc
add
daa
fisubl
roll
pop
sbb
and
shll
jge
dec
jg
lea
clc
and
add
inc
mov
adc
leave
lods
mov
jl
hlt
hlt
gs
pop
push
repnz
ret
lret
lret
inc
outsl
inc
out
lods
fistpl
pop
gs
rcrb
cwtl
xchg
xchg
xchg
ret
cmpsl
mov
in
lods
call
jg
mov
pop
in
hlt
or
inc
or
inc
sub
inc
repnz
in
jne
jns
sub
sar
mov
adc
jle
shlb
test
outsb
cmpsb
mov
enter
mov
or
cmp
adc
repnz
les
popa
sbb
testb
xchg
lds
out
aaa
push
popf
rcrb
pop
inc
inc
out
mov
push
shrb
adcb
ret
lahf
loop
inc
cwtl
sbb
stos
jo
jle
arpl
mov
clc
loopne
lods
and
xchg
and
insl
leave
xchg
std
fdivs
sti
jno
mov
scas
testb
mov
inc
fidivrs
xor
cmp
mov
in
stc
jp
dec
xchg
dec
or
cld
mov
mov
mov
ja
js
inc
notl
pop
and
xor
cs
or
sahf
adcl
loope
add
ljmp
sbb
lahf
sub
xor
in
dec
in
jecxz
mov
cmpsb
sbb
lods
mov
jnp
nop
add
jno
popa
and
inc
fiaddl
rolb
sbb
adc
aaa
cmp
pop
iret
sub
testb
cmpsl
lods
out
enter
add
filds
push
mov
insl
mov
mov
cli
xor
insl
fistpl
aad
sbb
mov
fistpll
fidivrl
fmuls
jl
and
pop
mov
test
sbb
adc
clc
mov
rclb
fistpl
ja
dec
xor
sti
xchg
scas
out
rcrl
mov
out
push
adc
add
loopne
mov
bound
mov
aas
cmpsl
mov
mov
arpl
lret
in
xor
notl
fmuls
lock
add
cwtl
jg
pusha
cmp
cmp
jge
add
out
xchg
lahf
dec
outsl
ljmp
cmpsb
lahf
adc
or
loopne
inc
add
inc
enter
fxtract
pop
fs
jbe
fstpt
xor
add
mov
stos
popf
in
out
insl
mov
adc
jp
mul
lcall
cmpsb
mov
xor
insl
lret
and
das
jne
test
leave
fsubr
movsb
aaa
jno
cmp
sbb
adc
dec
inc
jbe
mov
rclb
in
inc
loope
rcrb
mov
daa
test
into
push
jg
push
lock
test
in
push
dec
ficompl
and
inc
scas
cmpsb
or
pop
or
pop
fbstp
sub
cmp
scas
cli
incl
and
loope
and
shl
xchg
inc
loope
add
repnz
bound
inc
jno
jg
push
push
shrl
mov
aas
xchg
imul
stc
aaa
mov
lret
cmpb
jns
repnz
xlat
sbb
mov
mov
pop
in
xchg
inc
clc
inc
dec
pop
and
add
mov
pop
fdivp
popf
xchg
shll
adc
jno
xorb
inc
ret
push
out
mov
cltd
arpl
jo
fistps
movsb
arpl
arpl
xchg
in
loop
stos
mov
fcoml
pop
push
cmc
shrb
idivb
in
cmp
and
cld
fwait
pusha
lahf
xlat
mov
test
inc
cmc
dec
sarb
shl
call
mov
int3
aas
mov
stc
push
pop
rcrl
adc
adc
leave
lods
loope
iret
jecxz
out
xchg
iret
xor
cld
cmp
jp
dec
push
pop
mov
nop
add
fdivp
stos
sarb
enter
insb
das
or
int3
inc
sbb
movsl
jo
jo
sbb
jns
aas
sub
mov
pop
inc
aad
jbe
je
mov
out
pop
fsts
nop
dec
lahf
jecxz
mov
aad
add
js
stos
pop
mov
cmc
xor
push
scas
or
mov
xor
mov
cmp
ret
jge
sbbl
aaa
in
jae
repz
mov
mov
xchg
icebp
mov
and
inc
adc
adc
ljmp
cwtl
sub
es
imul
pop
stos
jns
hlt
add
adc
out
adc
cmp
xchg
jp
mov
mov
outsl
enterw
mov
push
cmpsl
pusha
pop
jge
cmp
sti
lcall
sbb
fwait
je
mov
jle
cld
dec
sbb
push
sbb
cltd
dec
sahf
shrb
insl
imul
pop
push
sub
lods
jae
mov
inc
cmpl
sub
cld
cmp
pop
or
mov
mov
mov
insl
mov
mov
cmp
push
jecxz
mov
xor
pop
push
mov
push
test
adc
jmp
cmp
cmp
cltd
ret
cld
xor
xlat
jl
int
and
xor
adc
sbb
daa
orb
or
jae
inc
insb
ja
js
mov
push
jno
repz
sarb
xorb
fs
mov
lods
push
dec
and
push
dec
push
mov
js
and
xor
inc
or
xchg
xchg
jnp
mov
xor
clc
push
xor
mov
push
mov
sbb
jbe
pop
lret
popa
cli
repnz
cwtl
cmp
lock
inc
jl
jle
sbbb
push
cmpsl
loope
jmp
or
lcall
pop
shl
sbb
mov
mov
imul
cmp
jno
aad
ss
push
addr16
xor
nop
inc
lcall
jae
dec
push
mov
orl
addps
adc
idiv
repnz
sbb
jp
pop
in
mov
mov
icebp
cld
lahf
ljmp
shlb
int3
xchg
loop
cs
cmp
or
into
or
movsb
add
sub
jp
int3
xor
add
or
ret
movsl
or
arpl
adc
mov
or
push
ret
cmpsb
pop
ja
xchg
adc
das
in
adc
in
sbb
clc
pop
xchg
mov
adc
cld
mov
mov
push
movsl
or
stos
mov
xlat
and
xchg
or
in
movb
nop
or
nop
psubd
call
and
nop
das
insb
movsl
fisubs
test
inc
xor
mov
dec
jnp
adc
sub
dec
xor
mov
sti
loope
pusha
pusha
fsubs
inc
and
jae
popf
outsb
jno
pushf
fildll
in
sbb
popf
push
add
push
aaa
fnstsw
stos
jo
sahf
lret
bound
mov
mov
pop
call
or
mov
pop
cltd
das
push
mov
push
xor
add
pop
mov
pop
mov
das
sbb
ss
push
into
mov
movl
sub
js
fwait
adc
sbb
aad
out
sbb
jb
in
jmp
pushf
xorb
xchg
int
sub
insl
scas
inc
rolb
pushf
lahf
jmp
call
cld
inc
fisttps
out
cltd
icebp
cmp
sti
push
movsl
fstpl
sub
xchg
mov
rcrb
int3
lock
lret
or
push
and
mov
adc
jne
jmp
mov
scas
and
and
negl
xlat
mov
jno
jbe
inc
repz
ss
mov
fistl
mov
pop
rclb
pop
mov
sahf
cwtl
cmpsl
scas
push
inc
sbb
ja
pop
mov
adc
out
aas
divl
in
loope
repnz
dec
adc
inc
and
fstpl
sub
sbb
cwtl
fists
popf
inc
gs
fs
cltd
mov
movsb
lcall
inc
in
lcall
ss
mov
mov
stc
xor
push
push
pop
outsl
xchg
movsl
in
xor
xchg
dec
leave
aas
xor
and
pop
aam
clc
mov
xor
xchg
stos
into
sbb
xchg
imul
fidivrs
pop
js
mov
push
stos
mov
into
jbe
in
jmp
icebp
pop
lret
icebp
cmpsl
addr16
in
shll
mov
mov
sbb
jns
je
cs
imul
push
int3
fsts
addl
hlt
push
jns
aas
int3
jne
loop
adc
lods
push
xchg
or
push
mov
mov
mov
push
cwtl
mov
sbb
xchg
ret
adc
les
xlat
dec
xchg
inc
outsl
cmp
popa
test
dec
loopne
test
dec
in
jle
std
cmp
and
das
or
jmp
push
pop
fbstp
mov
jae
mov
stc
shr
mov
pushf
pmulhw
in
mov
push
sub
mov
cli
push
mov
punpcklbw
test
cwtl
xor
imul
int3
inc
jle
fmulp
ds
nop
xchg
push
mull
pushf
xor
sbb
mov
push
pop
lar
repz
xlat
jnp
mov
pop
sbb
mov
stos
sub
in
xchg
sub
adc
fdivrs
lcall
inc
test
and
out
cmp
in
mov
push
mov
js
das
jo
jp
push
mov
loope
lods
push
xor
idivl
sub
inc
jb
push
push
andl
ret
dec
add
and
xor
adc
ss
xor
jl
rcrb
push
jno
add
sub
repz
mov
xchg
fcmovnu
and
xor
push
sub
and
movb
cmp
cli
cmp
jecxz
daa
dec
inc
inc
mov
enter
jg
mov
inc
mov
sub
popa
cmp
iret
aaa
test
mov
cmp
enter
mov
mov
dec
cmpsb
dec
jg
xor
fildl
jge
arpl
cmpsl
mov
aam
adc
or
lret
clc
jne
out
dec
rorl
cmpb
mov
aas
mov
in
push
mov
xor
clc
cs
push
and
sbb
clc
jns
mov
jge
repnz
xlat
dec
mov
dec
mov
cmc
mov
push
mov
adc
call
push
into
cmc
imul
mov
cmp
sub
out
arpl
fld
push
jno
cmpl
aas
cmpsl
sahf
xor
inc
pop
out
sahf
ljmp
dec
fisttpll
ret
ljmp
loopne
pushf
inc
shr
push
arpl
inc
iret
out
fadds
push
sbb
out
adc
jb
je
xor
pop
pushf
cltd
mov
inc
and
notb
sub
mov
push
pop
and
mov
mov
popa
aad
dec
arpl
or
lods
nop
jge
mov
xchg
push
jne
inc
lret
out
cli
and
imul
outsl
adc
lcall
rorl
jae
loopne
and
iret
and
es
sbb
clc
mov
or
call
lds
rorl
push
mov
mov
cmp
aad
movsb
inc
mov
cmp
pop
add
cmp
into
push
push
inc
jne
pop
fcmove
add
and
cltd
mov
xlat
popf
inc
popa
and
dec
ja
ja
jl
push
cli
mov
cmp
cmc
scas
nop
scas
dec
pop
popl
mov
sbb
fildll
sarl
ljmp
jl
shl
je
insb
leave
jne
stos
icebp
xchg
mov
xlat
xor
inc
lret
pushf
arpl
out
lcall
das
fbld
testb
pop
call
fldt
ja
mov
dec
addr16
sarl
and
movsb
rclb
pop
data16
dec
fsub
mov
mov
xchg
pop
mov
lcall
dec
xchg
adc
lods
loope
pop
adc
and
daa
add
fbstp
sub
adcb
jmp
lahf
out
ret
jns
add
aas
and
pusha
mov
das
mov
cs
jmp
dec
sub
int3
dec
lcall
cmp
jae
rcl
je
mov
lahf
cli
fisubrl
inc
mov
sub
mov
sbb
stc
pop
and
inc
cmp
ret
cmpsl
stos
pusha
inc
mov
and
jl
mov
fidivrl
movsb
movsb
and
movsl
adc
test
sbb
jb
cmpsb
xsaves
mov
dec
mov
sub
mov
outsl
mov
add
push
in
and
aaa
mov
dec
movsl
mov
repnz
mov
int3
inc
push
sub
fwait
sub
jae
pop
inc
cld
push
cmp
add
add
ret
adcl
mov
xchg
jl
aaa
push
imul
mov
inc
adc
ja
push
decb
rcrb
mov
inc
and
pop
jb
xchg
push
push
sub
xchg
lods
iret
jb
fwait
add
mov
mov
fneni(8087
xchg
cmp
dec
mov
mov
cltd
aam
rolb
andl
mov
int
adc
sbb
dec
push
arpl
lcall
mov
clc
movsb
aam
aad
cmpsb
push
ljmp
add
ficompl
cmp
cmpsl
adc
push
xchg
pop
ret
out
lret
mov
jne
pop
cmp
gs
push
or
mov
pop
insl
push
push
pop
cmp
jl
sahf
sahf
lock
mov
sbb
out
mov
cmpsl
pop
jno
dec
lret
dec
jmp
pop
jb
lock
sbb
testb
xlat
andb
cmp
xchg
or
mov
insb
add
sbb
mov
add
jmp
push
mov
pop
xor
js
jns
outsb
ss
loope
imul
lock
adc
dec
daa
lds
sahf
loopne
sahf
pusha
repnz
jnp
fcomip
scas
push
aad
mov
sbb
dec
fisubs
rclb
inc
mov
outsb
mov
inc
dec
daa
mov
sbb
das
pop
imul
pop
push
fists
pushf
mov
loop
test
adc
stos
gs
and
push
das
dec
mov
xchg
nop
and
cld
lods
mov
dec
pusha
ss
push
movsb
xlat
subb
loop
fstpt
or
lahf
out
mov
notb
dec
daa
mov
hlt
sbb
and
jecxz
mov
mov
divb
jmp
cmp
sarb
imul
pop
pushf
add
dec
jae
aaa
lock
pop
decb
pop
call
inc
mov
inc
add
add
or
jne
xorl
jno
jl
mov
or
push
cmp
ja
xchg
in
cmp
scas
loope
cld
andb
lcall
cmpsl
xchg
cmp
iret
or
test
mov
fldenv
or
mov
add
inc
mov
push
sub
dec
adc
cmpsl
jl
pop
push
jnp
mov
js
lret
idiv
jmp
xorb
shr
daa
cli
roll
into
je
cmpsl
xchg
cmp
dec
sti
xchg
adc
push
cmp
adc
stos
push
popf
sub
xchg
bound
pop
xchg
adcl
push
insb
adcb
lods
jg
add
xor
inc
xchg
cmp
inc
icebp
and
out
iret
cmp
mov
mov
out
xor
mov
sbb
fsubl
xchg
iret
lods
cmc
loop
daa
in
addl
mov
daa
adc
jle
jbe
fcomp
xlat
sub
jns
daa
xor
leave
aam
xchg
call
aad
pop
test
outsb
test
pop
mov
pop
dec
cmp
sbb
jecxz
pushf
push
test
out
adc
inc
xchg
push
and
add
inc
ret
cli
andb
push
aas
adc
push
pop
pop
ja
pop
mov
daa
dec
jns
rcrb
push
jg
dec
add
cld
repnz
jp
lea
fsubl
jae
jp
adc
fidivrl
xchg
add
pop
push
adc
sub
pop
mov
fistl
or
test
sbb
mov
mov
mov
cltd
mov
pop
pushf
int3
hlt
sar
int3
enter
mov
sti
mov
dec
push
sub
jno
scas
enter
movsb
repz
sahf
or
mov
add
push
inc
pop
cmp
ljmp
shll
adc
mov
scas
lds
jbe
lret
adc
push
fcoml
lods
adc
cmp
lods
add
and
ficomps
insb
leave
ret
and
mull
jnp
mov
imul
or
xchg
pop
cmpsb
and
dec
and
cmp
fld1
xchg
loope
lods
daa
cmc
jno
addl
cwtl
adc
in
xor
jecxz
add
push
test
or
lret
cmp
ret
ljmp
out
movsb
fldenv
clc
rorl
or
test
cmpsl
lods
mov
and
stos
fwait
pop
movsb
pop
xchg
cmp
lods
cmp
mov
sti
aas
rcll
lret
xchg
sbb
ja
aaa
and
scas
sub
scas
jl
ja
xchg
xor
push
fwait
dec
xchg
add
pushf
xchg
mov
adc
xchg
sub
pop
push
add
shrb
and
dec
in
xchg
jne
mov
mov
pop
nop
enter
movb
in
fiaddl
cmp
xor
mov
or
leave
enter
adc
mov
mov
dec
dec
sub
push
jmp
jecxz
les
dec
adc
lret
les
mov
fildll
push
shl
inc
lds
cmp
xor
mov
nop
sahf
pop
cmp
lods
mov
push
out
aaa
push
xor
test
lret
stos
pop
fistl
lods
out
cmp
xor
pop
hlt
xor
add
pushf
jge
xchg
sti
jae
jo
sbb
inc
rorl
fistpll
lret
std
or
inc
xor
mov
adc
or
fidivrl
js
into
mov
testb
inc
xor
out
add
jecxz
sar
cwtl
scas
and
or
ret
sub
sub
cs
fiadds
sbb
sub
xor
jne
sahf
popf
loop
cld
lea
les
mov
shr
repnz
fistps
cmp
daa
jno
jb
sbb
xchg
mov
sub
iret
cmpsb
add
icebp
inc
test
orb
push
pusha
fisubrl
and
ss
test
sbb
mov
ror
add
xor
push
popf
mov
sbb
and
ror
in
mov
pusha
or
les
repz
sbb
dec
loopne,pt
pop
mov
stos
add
xlat
adc
pop
clc
xor
mov
addr16
jne
lret
cmp
movsb
icebp
stc
data16
and
shll
scas
aad
iret
adc
push
mov
sub
and
adc
xlat
adcl
xlat
insb
sbb
or
and
mov
and
push
nop
into
mov
cmp
fdivp
enter
cli
push
cmpsl
ret
data16
dec
scas
imul
mov
xor
sbb
hlt
jge
and
push
push
jne
dec
and
pusha
notl
stos
inc
sub
sbbb
mov
xor
nop
call
mov
mull
cmpb
cmp
pop
gs
popa
test
xchg
negb
jmp
mov
cli
push
sahf
testb
bound
dec
xchg
out
sbb
cltd
adc
or
jae
dec
stc
dec
pop
adc
not
cli
mov
jb
shll
sbb
lahf
xchg
dec
lcall
pop
sub
dec
mov
lea
outsb
xchg
sub
adc
movsl
data16
pusha
jge
pop
das
test
sub
pop
cmp
inc
xor
divl
enter
push
inc
lods
out
add
mov
ret
mov
sub
and
movl
test
test
movsl
nop
pop
mov
push
push
pop
daa
jne
sub
repz
push
ljmp
adc
mov
rorl
xchg
in
lock
jbe
mov
mov
sti
mov
gs
test
mov
ja
nop
pop
es
xor
imul
adc
xor
out
int
into
dec
pushf
in
pop
xor
gs
push
daa
idivl
push
push
xchg
rcl
dec
inc
dec
add
js,pt
push
cmpsl
adc
push
push
or
std
xor
repnz
and
push
gs
ds
sbb
push
shrb
ret
inc
sbb
scas
pusha
inc
fidivrs
push
sbb
push
sub
aas
or
xlat
jecxz
sbb
jl
mov
or
jns
pop
lods
xchg
ds
xchg
sub
je
andl
popa
mov
sub
xchg
jns
push
or
addb
pop
aaa
addl
leave
jmp
push
mov
sbb
jl
cmpsl
out
pop
add
movsb
push
dec
loopne
push
int
dec
cmp
out
cld
movsl
push
adc
pop
orb
jmp
mov
and
jp
sub
and
lds
mov
sarl
add
jo
add
pop
xchg
and
adcl
mov
mov
mov
stos
jne
sbb
daa
inc
xchg
popa
popa
shl
push
outsb
jg
scas
inc
fisttpll
or
pop
lock
std
push
popa
out
xchg
mov
lods
rclb
shlb
cmp
jbe
test
push
stos
ljmp
aas
and
pop
jecxz
jle
cmc
mov
int
ds
mov
ficoml
stos
xor
or
push
and
pop
sub
cmpsl
push
and
mov
lret
xchg
outsl
or
fs
push
jo
insl
lcall
cmp
mov
jno
fcomps
out
loope
mov
add
pop
mov
movsl
std
lods
jp
lcall
add
js
les
ret
stos
movsl
int
pop
mov
xchg
leave
jecxz
andb
stos
pop
cwtl
pop
sub
dec
pop
cmpsl
jg
divb
jnp
lods
sub
cmp
push
sbbl
lret
imul
stos
xchg
pop
ss
mov
out
xchg
jmp
pop
pop
and
jle
jge
insb
into
mov
push
shrb
cmpsl
fiaddl
pop
cli
jg
stos
or
icebp
jns
lods
test
pop
lea
fnsaves
and
mov
mov
xor
mov
pop
ss
jmp
or
dec
jmp
cld
sbb
sub
fbstp
loop
push
xor
mov
sub
daa
add
sbb
xchg
mov
pop
mov
testl
leave
negb
xor
in
popa
mov
jl
fiaddl
repz
and
jge
outsb
in
icebp
fidivrs
xchg
enter
and
ret
pop
or
adc
fimull
sub
adc
adc
sti
cltd
ret
stc
fistps
add
xor
pop
in
xchg
in
pop
test
mov
jo
outsl
test
hlt
pop
and
mov
loop
push
cli
cmc
jmp
push
push
movsl
stos
dec
sbbb
rclb
adc
jbe
inc
pop
subl
jo
jnp
int3
out
cld
xorb
leave
mov
shr
xor
ret
or
filds
repnz
push
inc
out
popf
adc
aad
mov
push
cmp
xchg
sub
loopne
outsl
and
dec
loopne
and
push
mov
push
cmp
stos
lock
filds
out
sti
cld
xor
push
xchg
jo
mov
add
adc
mov
mov
sbb
inc
jno
add
pop
push
pop
xlat
inc
push
rcr
pop
sbb
push
mov
cmp
jae
aam
push
sub
push
sub
push
imul
mov
outsb
inc
push
dec
loopne
movsl
imul
cmpsl
add
lds
jle
out
pop
lock
stc
push
xor
gs
sbb
inc
sub
xor
inc
int
mov
jne
loope
fstp
sub
inc
jmp
stos
fwait
mov
and
jbe
pop
mov
jmp
stos
idivb
mov
pop
xchg
mov
cli
addr16
lock
sub
cmp
adc
lock
loop
stos
mov
pop
inc
out
mov
lods
test
andl
mov
or
enter
push
and
stos
mov
sbb
scas
scas
sti
repnz
sahf
adc
shrb
push
pop
data16
add
inc
push
jo
push
jp
stc
ret
adc
xchg
or
push
subl
inc
cmp
and
test
fwait
icebp
sti
pushf
cmp
pusha
fs
dec
out
xchg
mov
jnp
les
fcomi
enter
ror
or
es
int
mov
pop
test
rorl
or
mov
icebp
add
cld
mov
ds
aad
cmpsl
jne
push
mov
xchg
xor
inc
in
repnz
mov
or
adcl
and
daa
push
cmc
les
adc
mov
mov
out
cmp
call
int3
in
cmpsl
sti
dec
lahf
adc
and
rolb
cmp
mov
xor
les
mov
stos
cmpsb
lds
stos
fsubl
push
cmpsb
andl
mov
test
fs
or
mov
and
nop
leave
stos
test
mov
sti
mul
cmp
push
jne
inc
push
jae
pop
and
pop
movb
sbb
shrb
mov
jns
and
sbb
outsb
sbb
jns
mov
or
icebp
add
mov
pop
push
jecxz
dec
jp
push
shlb
xorl
sbb
adcl
sub
shlb
mov
in
pop
cli
std
inc
jno
xchg
push
lds
xchg
dec
push
pop
xor
arpl
iret
aad
sub
repnz
bound
jmp
es
scas
psubw
mov
sub
cwtl
lods
pop
adc
inc
mov
aad
mov
xchg
rolb
or
aaa
jb
sbb
cwtl
mov
or
cmp
lods
outsl
sbb
jae
inc
xchg
adc
scas
adc
ds
shll
pop
cmp
into
rolb
xor
cltd
in
roll
bound
sti
inc
cmp
icebp
fldcw
mov
push
outsl
ds
bound
mov
inc
dec
je
sub
xchg
cwtl
in
outsl
jbe
or
movsb
ljmp
ss
sbb
jmp
pop
popa
cmc
jno
jo
mov
cmpsb
dec
in
inc
inc
lock
ret
dec
movsb
sbb
std
stc
pop
enter
in
out
dec
pop
in
add
xchg
mov
lds
mov
ljmp
jnp
les
pop
mov
orl
push
je
sbb
pop
cmp
andl
mov
mov
popl
sti
xchg
jg
ss
arpl
pusha
je
rol
push
nop
xor
xchg
paddusb
xchg
repnz
int
addl
je
inc
js
cmp
mov
ljmp
aaa
add
mov
faddl
ljmp
xlat
fcmove
push
xor
xor
sbb
add
inc
loope
or
or
or
sbb
out
xor
andl
imul
sbb
xchg
xchg
push
xchg
sbb
add
test
in
jno
xor
jle,pn
and
push
sub
out
sub
sub
mov
cld
mov
test
int3
adc
sar
pop
mov
loopne
push
arpl
pop
imul
push
jle
jo
mov
add
cmp
enter
sbb
jle
mov
add
pushf
in
lock
jnp
adc
lret
stos
mov
mov
cmp
push
add
inc
xor
and
push
pusha
je
cwtl
or
cmpsl
ja
add
fs
shrb
in
rorl
je
cmp
mov
mov
xchg
sbb
sbb
mov
sahf
push
fwait
enter
shl
mov
cmpsb
test
mov
dec
sub
pop
mov
cmp
cmp
out
mov
adcl
outsb
rorl
rorl
data16
clc
dec
sbb
test
inc
test
sub
clc
or
neg
pop
cmpsb
xchg
jecxz
mov
push
negb
inc
add
add
fidivrl
push
imul
pop
cmpsl
mov
out
dec
es
cli
sbb
add
test
ss
insb
or
jle
inc
mov
xchg
pushf
inc
test
scas
sub
mov
pusha
jbe
mov
sti
cmp
dec
sub
shll
mov
pop
mov
ret
jae
pop
sub
cld
xchg
dec
mov
dec
sarb
shlb
push
push
add
sbb
sbb
mov
push
cmpsl
in
inc
mov
call
lds
lods
lock
mov
lock
mov
push
adc
rcrl
jnp
repnz
pop
mov
dec
test
sub
and
es
jae
adc
rcll
pop
sub
roll
mov
out
int3
adc
mov
push
loop
dec
inc
inc
lds
sbb
pop
pop
add
mov
add
mov
imul
dec
ret
int
dec
jo
dec
jo
push
cs
iret
ljmp
nop
sub
in
callw
adc
in
dec
xlat
lock
orl
shr
adc
orl
jo
xchg
daa
loope
data16
push
mov
das
dec
mov
fwait
fs
xchg
sbb
imul
sar
imul
insb
sub
mov
pop
cmp
dec
jmp
mov
cmp
imul
insb
inc
gs
popf
repnz
lret
cwtl
or
ja
xchg
xor
lahf
sub
mov
and
aaa
xor
adc
xlat
movsb
movsb
outsl
sbb
xor
loope
ret
imul
dec
pop
fs
aaa
and
ljmp
hlt
fisubrl
xchg
int3
cmp
in
push
idivl
popa
xor
lods
mov
fs
faddl
aam
push
jl
sti
add
icebp
insb
sbbl
negl
inc
cmpsl
mov
mov
pop
dec
mov
mov
popa
add
fistpll
lods
call
dec
dec
add
inc
mov
sub
jle
adcb
mov
sbb
in
xchg
xor
mov
mov
push
jnp
loope
and
xchg
add
add
addr16
popf
adc
mov
test
xor
xor
push
jp
popf
mov
decb
mov
mov
xor
xchg
icebp
aas
lds
out
and
xor
insl
popf
adc
cmp
sbb
mov
dec
insl
dec
xchg
jl
inc
or
lods
pusha
shr
fldl
inc
cmp
cmc
or
cmp
pop
lds
aad
and
inc
out
jmp
mov
mov
adc
sub
mov
mov
daa
repnz
push
cltd
frstor
mov
in
mov
inc
cmp
stos
mov
jbe
inc
outsb
and
insl
jbe
adc
in
sub
ficoml
mov
into
sbb
and
mov
pusha
sub
jne
pop
arpl
adc
xchg
fisttps
leave
imul
mov
aas
imull
xchg
sub
stos
fcoml
sub
lds
dec
jns
scas
xchg
push
push
mov
pop
sbb
lods
lea
or
cwtl
xchg
pshufw
std
sbb
jnp
frstor
sub
in
repz
das
dec
sbb
sbb
ret
andl
repnz
mov
xchg
mov
test
in
and
mov
mov
loopne
pop
mov
xchg
adc
in
rcll
adcb
push
outsl
call
sbb
int
jle
sub
testb
sbb
jno
jg
loop
jle
and
jp
push
xlat
stos
loopne
idivb
lret
orb
dec
mov
imul
mov
add
add
inc
adc
push
sarl
adc
imul
pop
inc
cmc
lods
mov
les
add
mov
leave
and
ficoml
inc
add
adc
and
int
pop
jmp
sarb
inc
xlat
and
cmpsl
sub
jl
jo
out
hlt
dec
cltd
cmpsw
xor
mov
outsl
or
mov
adc
xchg
je
dec
pop
aaa
into
dec
xor
cmp
jg
js
je
inc
push
sbb
inc
lret
jmp
add
lea
popa
fsubl
cmp
sub
or
lea
out
cmp
xchg
lds
scas
cmpsb
daa
dec
cmp
fstpl
js
lret
aad
imul
cmp
mov
jae
cli
mov
leave
dec
es
stc
out
pop
sbb
out
jnp
scas
dec
fcom
in
lds
cld
push
dec
daa
mov
inc
push
ljmp
add
ds
and
aad
adc
lods
dec
cs
mov
aaa
cmp
dec
push
xor
dec
adc
fstps
loope
push
dec
mov
dec
mov
out
sub
aad
pop
cmp
out
sbbl
or
bound
push
in
int
sahf
sbb
pop
and
jns
xchg
xchg
std
popf
xchg
push
movl
xchg
inc
or
mov
dec
sbb
xrelease
xor
sbb
sbb
stos
push
xchg
mov
push
sub
sub
sbb
inc
adc
sub
xor
aad
hlt
push
rol
pop
cld
enter
sbb
pop
dec
lods
ss
into
icebp
cli
aam
fcompl
mov
jmp
mov
add
js
clc
ret
fsts
les
out
inc
and
add
cmp
fwait
xchg
mov
mov
andb
push
xor
mov
dec
call
int3
in
aaa
cli
dec
ret
out
sbb
lock
cwtl
jp
inc
insb
int
xchg
pop
xchg
and
out
cmp
dec
lock
cmp
inc
cmc
test
add
ds
push
jae
rclb
testl
inc
and
imul
loopne
mov
fstpt
mov
push
out
sub
mov
pushf
pop
cltd
mov
cwtl
mov
sbb
shlb
dec
clc
enter
push
fcoms
addl
jle
jp
arpl
add
jecxz
aas
dec
dec
in
cld
jns
and
xchg
push
push
xlat
sub
add
dec
mov
insl
or
lret
ret
mov
into
xchg
push
lock
or
ss
in
pop
inc
xchg
fwait
sahf
scas
cld
cli
sahf
rolb
mov
mov
sbb
repz
stc
scas
in
stos
out
xchg
and
sti
xor
push
dec
pop
fsubrl
pop
std
and
ja
cli
ss
push
xchg
push
ljmp
loope
movsl
push
into
lock
sub
mov
int3
or
ret
add
fcmovne
mov
pop
inc
jb
cld
dec
dec
and
clc
push
jo
sbb
call
icebp
fidivs
arpl
out
loopne
mov
push
xchg
cwtl
jecxz
xchg
ja
inc
xchg
loop
sbb
movsb
cmp
aam
call
xor
iret
inc
mov
clc
and
pop
addr16
xor
aad
lret
repnz
cli
test
les
jp
add
xchg
mov
mov
int
sbb
mov
pop
inc
mov
loopne
sub
mov
fs
lcall
mov
add
mov
hlt
pop
dec
out
and
push
cmp
cwtl
inc
outsl
scas
lret
push
xorps
pusha
xlat
loope
mov
mov
xor
mov
push
and
lods
out
jb
mov
sbb
xor
in
std
stc
in
add
mov
xor
hlt
sub
or
pushf
out
dec
mov
pop
pop
orl
cmp
enter
cmp
int3
ljmp
cli
add
push
or
mov
jbe
in
push
imul
xchg
xorb
fists
movsl
sbb
out
pop
adc
scas
data16
ja
into
add
cmp
xor
lea
adc
mov
in
inc
xor
mov
pop
push
es
jg
into
add
in
jo
arpl
out
stc
gs
push
call
dec
in
ficoml
iret
mov
sub
jnp
push
adc
insb
pop
fstps
pop
xchg
jns
jns
xlat
mov
xchg
mov
inc
xchg
xchg
outsl
jbe
test
lahf
push
pop
test
inc
daa
pop
and
cmpsb
in
aam
cmp
mov
fcompl
in
arpl
push
xchg
xor
inc
inc
ss
int3
lahf
sub
mov
enter
andb
or
xor
mov
push
lahf
shrb
pop
loope
push
push
popf
fbstp
push
sqrtps
dec
insb
lods
pushf
xor
ret
test
lahf
arpl
insl
sub
rcll
inc
out
xchg
jbe
jo
mov
addr16
clc
lcall
test
dec
xchg
or
mov
inc
jge
adc
call
or
add
in
pop
cltd
inc
sub
jp
in
sbb
fdivs
testl
sti
lock
or
neg
mov
stos
jmp
add
xchg
mov
xchg
mov
push
jnp
push
adc
pop
pop
leave
popa
enter
jbe
jo
in
shll
dec
lret
mov
aaa
ja
cmp
lahf
mov
xor
inc
jno
jae
mov
dec
mov
test
xchg
cmp
ss
repnz
jnp
icebp
dec
pusha
xchg
xchg
aad
adc
outsl
pusha
fwait
xor
repnz
xor
lock
adc
pop
movl
adc
insb
jmp
lea
fcomps
hlt
lds
in
ret
test
imulb
clc
fdivrl
or
shrl
cmp
out
imul
xor
inc
lahf
mov
cmpsb
pop
push
jmp
mov
pop
jmp
inc
subl
out
test
push
pop
nop
mov
aaa
xchg
jne
fbld
sti
stos
imul
or
xchg
repnz
xor
inc
jns
stos
cwtd
cli
fs
cmp
movsb
pop
push
jl
sub
sub
in
test
lods
arpl
xchg
mov
or
out
jmp
test
jmp
lods
adc
test
out
lret
mov
mov
inc
jl
rcrb
es
adcl
sbb
sarb
sbb
push
jo
fwait
cmpsl
repnz
cmp
xor
push
mov
mov
mov
inc
sbb
outsl
push
xchg
push
pop
add
stos
arpl
cmpl
call
jno
mov
lret
pop
shll
pushf
lret
pop
aas
adc
into
xchg
mov
and
inc
aas
aam
cmc
xor
dec
roll
lds
pop
and
mov
push
data16
out
sbb
sbb
notl
and
into
lods
cld
clc
jne
xor
cli
xor
cli
shl
pop
cmp
and
or
xor
push
frstor
xchg
adc
mov
adc
aad
push
inc
orb
cmpsb
push
xchg
or
adc
cmpsb
or
and
mov
ret
lret
mov
popf
orb
loope
arpl
movsb
scas
xchg
in
dec
xchg
in
inc
push
test
jae
jns
sub
sub
loop
add
or
lods
lods
mov
or
jge
mov
lods
push
int
imul
das
add
jne
mov
into
lret
mov
and
sbb
fcomi
arpl
inc
inc
mov
dec
pop
xlat
hlt
pop
test
das
adc
pop
arpl
jno,pn
ficoml
fisubl
sub
lock
testb
jbe
sbb
cmp
and
xchg
std
shll
push
test
imul
sti
pop
mov
adc
pop
adc
pop
mov
mov
shl
cltd
or
xorl
pop
pop
adc
cmpsb
daa
mov
cmp
push
and
xlat
in
lods
and
std
sahf
adc
shlb
ljmp
xchg
shlb
jmp
sub
test
out
bound
push
jg
pushf
lock
mov
sbb
jnp
jns
loop
inc
jb
cmc
imul
or
push
xchg
aaa
adc
notb
pop
mov
mov
xchg
or
sbb
out
divl
xchg
sbb
test
sub
aas
add
or
dec
mov
and
cmp
or
mov
stos
push
xchg
outsb
leave
jmp
insb
or
inc
sar
gs
loop
pushf
call
in
jo
rorl
sub
xchg
ret
push
in
pop
push
pop
or
sbb
scas
mov
xor
rclb
mov
inc
xor
jbe
test
sti
adc
int3
inc
jle
out
aas
popa
mov
sti
jp
pushf
addr16
sarl
push
ret
sti
pushf
dec
xor
pop
mov
cmp
cwtl
pop
arpl
pop
fwait
push
jmp
nop
popa
or
ljmp
cmp
sub
sbb
mov
shlb
movsl
roll
cmp
xor
cmpsb
es
in
jg
arpl
add
mov
imull
fcmovbe
lret
mov
pop
adc
movsl
int
shlb
cld
addb
mov
out
inc
or
push
dec
loopne
imul
sub
shrl
je
cltd
stc
fucomi
sbb
sub
cmp
scas
adcb
inc
lea
movsb
icebp
cmpsb
aaa
repz
push
mov
push
std
aas
test
and
dec
cmp
ljmp
jmp
cmp
add
fisubs
sub
fdivl
sbb
dec
sbb
cmp
scas
sub
fisubrs
aam
rol
loopne
lods
enter
scas
daa
loopne
lods
push
movsl
adc
pop
push
into
dec
push
pop
mov
cld
inc
mov
mov
aas
mov
mov
lret
and
in
and
mov
std
imul
dec
jp
lods
jbe
mov
fdivs
jnp
lea
das
iret
test
push
or
out
scas
mov
cmpb
ja
daa
mov
sub
adc
add
jne
loopne
testb
pop
inc
jle
mov
sbbl
sbb
in
stos
out
call
or
mov
cld
jae
je
dec
addr16
push
mov
or
icebp
mov
mov
test
mov
xor
xchg
cmp
loopne
xlat
iret
xchg
stos
push
inc
mov
xchg
negb
fsubs
xchg
mov
hlt
out
or
xchg
leave
cmpsb
and
jge
push
mov
jge
leave
sahf
sahf
push
jno
es
xor
mov
insl
push
push
sub
loop
pop
in
mov
addr16
adc
push
nop
push
ss
xor
xlat
xorl
scas
or
jle
cmp
mov
mov
loope
mov
push
loope
loope
test
dec
inc
and
push
subb
rcll
decb
iret
loop
je
iret
test
jp
add
and
xchg
scas
lret
pushf
loop
popa
add
in
cs
sbb
pop
fidivrl
inc
test
subl
jle
or
clc
cld
ffreep
jae,pt
pop
xchg
data16
lds
lret
jmp
inc
push
inc
jge
xchg
cli
mov
inc
jl
push
mov
dec
lret
sbb
outsl
dec
and
mov
xchg
in
sub
mov
cmp
xor
stos
cmp
push
inc
ljmp
pusha
cmp
mov
dec
cltd
stc
arpl
mov
jecxz
jg
ja
ljmp
jg
sbb
dec
out
cmpsl
dec
push
arpl
cld
and
lods
mov
sub
xor
adc
sti
out
fisubl
adc
pop
stos
dec
std
incl
inc
or
clc
pop
add
js
aam
ja
in
stc
into
sti
mov
mov
inc
jl
out
push
clc
lret
push
ss
inc
adc
scas
mov
dec
out
or
push
mov
jmp
test
jnp
add
pop
xchg
pop
ja
stc
xchg
in
jo
popf
adc
or
ds
mov
mov
sub
dec
test
sbb
fcmovb
mov
pop
mov
or
ffree
pop
inc
orl
add
stos
push
je
cmp
dec
repnz
and
pop
add
orb
ss
cmp
adc
imul
aam
mov
inc
lods
push
data16
push
scas
insb
sbb
xchg
pop
subl
shl
mov
icebp
mov
sub
fwait
dec
xchg
verr
imul
hlt
out
in
loop
lock
cmc
arpl
bound
js
push
call
add
scas
pop
sub
pop
xchg
gs
mov
jp
cld
bound
loopne
lods
sub
insb
cmp
cmpsb
inc
inc
sar
mov
lods
sbb
icebp
pushf
ror
push
test
push
je
mov
mov
xchg
call
push
xor
cmp
sub
xchg
or
fadds
push
subb
jg
cmc
mov
outsl
into
mov
ret
add
pusha
leave
mov
inc
mov
cmpsb
mov
cs
nop
dec
adc
clc
pop
in
dec
addb
inc
out
cmp
jno
mov
sub
imul
stos
push
lods
xchg
or
mov
cmp
push
mov
xchg
add
pop
ss
lock
xchg
scas
push
adc
add
mov
push
lcall
inc
sbb
pushf
push
enter
test
jnp
cmpsb
add
or
mov
es
inc
jne
cmpsl
xor
push
cltd
loopne
test
mov
jne
jmp
sahf
je
jg
adc
negb
into
fldt
sarl
jnp
mov
bound
daa
inc
jae
pop
xlat
jno
and
cld
aad
or
pop
fs
dec
scas
inc
push
cmp
icebp
xchg
test
popa
mov
push
lcall
stc
lods
xor
imul
lods
cld
out
outsb
xorb
mov
pop
shr
jge
iret
loope
movsl
adc
jg
std
aam
gs
dec
sbb
add
enter
lret
test
hlt
mov
pop
cltd
pop
pop
bound
cli
scas
push
xor
sbb
cld
add
cmp
decb
sub
cmp
inc
and
jae
adc
out
loope
or
jae
xor
or
pop
into
and
stc
and
and
daa
or
mov
ror
mov
scas
add
sbb
dec
push
cmp
movb
jmp
int3
mov
xchg
mov
xor
mov
mov
jecxz
mov
daa
aas
repz
mov
cmp
test
rcl
imul
into
daa
sbb
xor
das
adcl
lods
adc
mov
cmp
pop
inc
inc
xchg
cmpsl
cwtl
adc
notb
test
movl
mov
inc
fwait
pop
lcall
jns,pn
cmp
and
ds
out
xchg
jnp
xor
addr16
inc
mov
pop
sbb
fcomps
or
pop
clc
sub
scas
popf
addr16
sub
ret
xor
jne
pop
xor
mov
cmp
pop
and
loopne
xchg
imul
add
jmp
mov
flds
push
or
lea
aaa
iret
inc
inc
mov
ret
xchg
arpl
xchg
mov
add
test
push
mov
lods
nop
pop
jmp
xchg
mov
xchg
dec
fimull
int
imul
inc
xor
pop
and
int
push
mov
dec
rorb
inc
out
xor
imul
addb
cwtl
mov
shlb
jge
out
push
jl
hlt
and
iretw
mov
jecxz
pop
sub
adc
in
mov
or
sub
fdivrl
dec
mov
repz
cmp
push
pop
or
adc
enter
stc
mov
xor
mov
in
subl
inc
fs
and
adc
jmp
sbb
sbb
clc
jmp
or
ret
xor
fisttpll
lcall
outsl
jp
jl
jp
fisubs
notl
jmp
lods
sbb
insl
in
jmp
out
push
push
sub
dec
fcoms
dec
xchg
xor
out
lcall
xor
add
jl
jne
adc
sub
jno
cmp
jne
add
lods
xorl
lahf
add
fucomp
cmp
pop
lds
dec
les
jmp
sbb
xchg
cmc
les
add
jp
dec
cmpsb
cli
dec
js
xchg
sbbl
enter
jb
mov
xor
mov
jle
les
xchg
dec
idivl
mov
and
dec
push
popf
add
push
imul
mov
push
pop
ja
jp
scas
out
orl
push
ds
xor
aas
adc
icebp
fmuls
add
cmp
insb
rolb
inc
adc
push
andb
aaa
jg
mov
push
dec
jb
pop
xchg
jle
dec
cmpsb
lahf
adc
mov
std
pop
cltd
mov
in
gs
xchg
sbb
push
out
lods
stc
iret
rorb
add
lahf
aas
sub
xchg
sbb
std
clc
dec
in
xor
cmpsl
fdivl
jle
pusha
addr16
loope
adc
cmpsl
lcall
in
xor
lds
xchg
aam
in
add
adc
add
nop
cmpsl
xchg
mov
in
push
rcrb
stos
pop
fimuls
or
jbe
mov
jne
mov
xchg
adc
loopne
aas
xor
arpl
pop
pop
lock
and
nop
in
out
les
loopne
popa
into
stc
jl
jge
dec
repnz
mov
inc
cmpsl
les
ret
push
xor
inc
ss
sub
adc
mov
and
loop
testb
sti
data16
cmpsl
jle
sub
in
loop
sbb
jg
mov
out
repz
gs
push
mov
fisubs
popfw
pop
or
test
ss
stos
mov
stc
jbe
cmc
insl
js
adc
push
mov
inc
xchg
icebp
pusha
push
xchg
push
mov
cs
lock
and
fwait
out
sub
fstps
add
test
xor
dec
mov
shll
inc
jnp
rcr
xor
jne,pn
nop
push
ja
cmc
mov
repz
fcomip
loope
js
adc
outsl
leave
push
sbb
std
repnz
nop
cmpsb
sbb
fsubl
ljmp
shlb
sbb
dec
pop
clc
sahf
leave
testb
cmp
xchg
leave
jno
jne
stos
inc
popa
xor
daa
xchg
in
mov
push
inc
adc
jns
popf
cs
notb
arpl
sarl
stc
out
xor
xorl
cli
and
insl
bound
mov
ja
mov
loope
je
jmp
addb
jl
mov
adc
call
pop
jg
movsl
xchg
sub
ret
out
jae
sbb
fwait
sbb
pop
ficoms
cmpsb
xchg
or
xor
pop
jo
lock
jae
bound
and
adc
imul
sti
int
xchg
and
push
sub
xchg
loope
lods
mov
adc
movsb
popf
sub
lret
addb
or
lds
out
mov
movsb
or
in
jg
dec
insl
jl
jle
test
push
inc
push
iret
xchg
mov
je
push
jb
repz
in
push
add
lahf
rorl
inc
and
pop
push
lods
or
dec
fs
fcom
nop
lret
push
imul
out
popa
imul
xchg
or
mov
mov
mov
inc
add
inc
or
test
pop
adc
cmpsl
push
jp
jp
jae
stos
push
adc
cmp
out
inc
xchg
nop
push
xchg
mov
mov
dec
mov
popf
sub
sub
adc
pop
mov
cmpsb
lahf
ja
dec
xchg
pop
ret
out
loop
fwait
dec
sub
imull
loop
leave
adc
in
pop
xchg
test
cs
fisubrs
jecxz
std
xchg
or
lahf
pop
inc
inc
adc
outsl
lss
xor
or
mov
and
mov
add
mov
and
fsubrp
rorb
sbb
mov
cmp
testb
cmp
rorl
push
outsl
mulb
push
cmp
cmp
push
scas
push
outsb
sub
insb
adc
addr16
test
add
mov
stos
push
push
cmp
jmp
ja
in
fadds
stos
loopne
cwtl
stc
jb
pop
mov
adc
int3
jge
in
push
cmp
xor
cld
shl
lret
cmp
lea
fidivrl
xchg
ja
imul
out
cmp
outsl
cmp
out
jno
lret
mov
add
repz
sbb
xor
mov
int3
xor
in
mov
dec
inc
xorl
sbb
lock
sub
xchg
in
cltd
ret
in
or
fldt
mov
sub
or
scas
mov
pushf
fiadds
jo
mov
pusha
cwtl
scas
pop
jae
dec
movsl
sbb
vmovsldup
cmp
out
stc
inc
and
push
shl
daa
scas
test
ficomps
xchg
sub
jle
movsl
fnsave
sbb
shrb
jno
and
pop
and
sahf
and
dec
pop
pop
lret
and
push
fisubrl
xchg
push
jle
cmp
add
pushf
inc
sub
loop
push
jns
cmp
icebp
gs
ja
pop
add
mov
mov
cmp
adc
ss
sbb
adcl
popa
and
mov
pop
inc
xchg
lods
filds
out
jl
loope
nop
push
ss
sub
xlat
scas
dec
mov
mov
out
push
jecxz
sbb
pop
out
lods
mov
stc
lret
and
cmpb
push
jb
stos
fs
rcll
pop
or
fmull
into
pusha
rol
pop
dec
outsl
shlb
cmp
xchg
dec
mov
mov
loop
inc
fbstp
test
cmpl
arpl
movsl
pop
jmp
loop
out
pop
mov
aad
jp
scas
or
mov
in
clc
pushf
cmp
xchg
add
sub
testl
addr16
and
in
cmc
mov
mov
hlt
push
movsl
out
mov
mov
sub
stc
js
cmp
es
or
adc
or
sub
mov
out
mov
and
outsl
mov
mov
les
stos
mov
dec
adc
jno
ljmp
lock
idivb
mov
pop
sbb
ss
addr16
jb
test
ror
jae
inc
stos
js
in
das
jmp
ja
cwtl
mov
bound
inc
popf
cmpsl
or
fisttpl
xor
decl
push
lret
lret
loope
push
imul
and
push
mov
inc
inc
fistpl
xor
cmp
push
imul
xor
fstl
cltd
mov
ret
sahf
pusha
sbb
fs
and
lock
push
stos
and
lcall
adc
popa
xchg
push
jnp
outsb
sub
scas
xchg
cmp
and
jb
loope
dec
std
mov
out
mov
insb
add
in
pop
int3
mov
in
fadds
push
gs
adc
adc
fwait
xchg
shrl
scas
sbb
test
leave
hlt
adc
rcrb
sbb
sbb
adc
bound
pop
inc
or
cmp
aam
pop
pop
mov
xchg
cld
sar
mov
adc
mov
or
jae
fisttpl
ret
in
in
testl
jle
add
imull
sub
hlt
jl
pop
pop
aam
shlb
mov
xorb
dec
fdiv
and
and
sbb
mov
insb
orb
inc
adc
cmp
lods
lcall
jmp
mov
insb
pop
mov
inc
negl
mov
dec
inc
test
mov
sbb
ret
xchg
dec
addb
shl
stc
aad
cwtl
sbb
nop
shrb
xchg
pop
js
lea
imul
jmp
push
mov
sub
outsl
pop
cld
mov
js
xor
aam
and
push
out
push
ds
test
jle
notb
jbe
addl
notb
in
fisubrl
insl
mov
movsl
fcmovne
test
jmp
mov
and
jnp
leave
iret
shlb
dec
imul
mov
aaa
cmpsl
pop
push
lock
or
mov
pop
bound
sub
and
popf
rcrl
add
jmp
mov
push
insb
push
lcall
ret
cltd
aas
pushf
sarb
out
lea
pop
out
adc
xchg
out
imul
adc
jmp
insl
dec
push
in
stc
jns
scas
xchg
js
leave
cmc
int3
jae
sbb
rcll
mov
push
inc
loope
repnz
rcrl
jnp
insb
mov
dec
sbbl
xor
out
inc
ds
mov
inc
and
inc
in
cmpsb
lock
dec
movsl
lock
dec
adc
sub
mov
mov
enter
pop
push
sub
add
pop
mov
xchg
stos
gs
mov
cwtl
xchg
adc
mov
add
and
pop
jmp
add
test
cmp
jge
out
xchg
xchg
into
popf
add
je
enter
jns
or
push
aas
mov
out
mov
into
add
in
add
push
cmpsb
sub
fsubr
sub
pop
jmp
dec
cmp
fldcw
rcrl
lret
mov
lret
xor
aam
enter
and
enter
pop
aaa
pop
lea
push
xchg
push
pop
sub
adc
cli
imul
cmp
or
addr16
or
notb
jno
loopne
in
push
fildl
mov
cwtl
js
mull
dec
filds
xor
push
dec
mov
aaa
mov
mov
popf
imul
inc
scas
sti
cmp
inc
mov
movsl
or
or
out
out
cmpsb
mov
inc
sbb
xchg
pop
es
xor
or
fmulp
push
mov
sub
int3
or
jbe
test
movsb
push
dec
sub
inc
out
lea
and
ret
popf
sahf
imul
mov
fiadds
cld
pop
test
adc
jecxz
cmp
ljmp
and
sub
popa
fistl
jg
sub
pushf
or
out
and
ja
dec
cmp
shlb
jnp
js
jmp
lock
inc
out
ficoml
xor
cmpsl
inc
xchg
mov
push
movsb
or
sub
jns
inc
dec
aam
jnp
inc
movsb
pop
addr16
mov
mov
jp
iret
inc
or
in
hlt
cmp
push
out
call
loop
xor
fwait
lods
jbe
jbe
dec
inc
mov
outsl
sbb
out
mov
in
push
test
repz
pusha
add
addr16
sbb
in
mov
xchg
push
push
or
into
jo
mov
lea
sbb
loopne
mov
cmp
daa
aaa
sub
and
rcr
shlb
jne
push
dec
enter
mov
fwait
es
xchg
cmp
daa
jmp
and
and
into
mov
adcb
pop
mov
mov
cmp
addb
cmp
aaa
push
fsubs
dec
mov
mov
jbe
push
aas
jbe
pop
mov
cltd
inc
mov
loop
inc
cld
mov
ret
pop
pop
mov
int
inc
adc
xchg
and
cmpsl
pop
xchg
mov
inc
mov
xor
push
std
push
test
sub
pop
or
cmpl
insb
add
int
loopne
pop
aam
cmp
pusha
pop
ss
and
xchg
nop
sbb
leave
stos
xlat
ljmp
xchg
mov
rcrb
shll
inc
rorb
push
push
idivl
scas
and
shlb
and
jo
repnz
cmp
xor
pushf
int3
lret
pop
xchg
mov
popa
bound
sub
out
mov
sub
and
aad
xor
sub
pop
dec
ss
fistpl
push
jmp
pop
push
xchg
mov
test
cld
in
loope
idiv
in
pop
jo
jae
cmp
das
addr16
xchg
insb
mov
add
cmp
xchg
add
and
sub
sarb
dec
sahf
add
push
mov
inc
pop
mov
cmp
lahf
push
xchg
jl
cmpsl
mov
ljmp
xor
mov
jge
out
repz
mov
mov
sub
aaa
repz
dec
push
cmp
inc
imul
jo
cmpb
out
pcmpgtb
mov
int3
pop
push
mov
or
mov
ljmp
fldenv
loope
int
add
dec
cmp
out
ds
leave
jae
in
sbbb
mov
xorl
popf
mov
sti
aam
and
cmpb
dec
xor
push
je
lea
fdivl
pop
pop
int
pusha
mov
push
int3
repz
jmp
out
push
movntq
xchg
and
adc
push
mov
jno
mov
mov
in
sbb
and
and
push
test
mov
in
es
fimull
cmp
scas
push
ljmp
fucomip
es
int
movsl
pop
jecxz
sti
gs
cli
in
jge
imul
jmp
pusha
xchg
lahf
mov
ja
mov
xchg
or
jnp
jl
lahf
jmp
jmp
pop
addr16
sub
stos
push
es
stos
bound
mov
gs
ljmp
mov
pop
push
pop
cmp
iret
outsl
sbb
jbe
mov
std
adc
mov
adc
pop
arpl
or
xor
mov
add
cmc
enter
ror
mov
and
jb
pushf
xor
enter
rcll
mov
mov
lret
sub
repz
pop
fbld
lds
lcall
ret
imul
mov
xor
addr16
ret
jp
sbb
rorl
pop
jno
push
lret
add
fldcw
and
shll
insb
pop
sahf
sub
ja
adc
leave
push
aad
lcall
or
pop
sbb
outsb
fisttpl
jmp
xor
int3
jae
adc
mov
mov
inc
scas
push
sub
sub
leave
pop
xor
addr16
es
adc
jmp
fdivrl
mov
push
jg
add
lods
in
and
insl
fisttps
shl
mov
icebp
jle
arpl
pop
ljmp
cmpsb
js
inc
enter
shl
pushf
mov
stos
test
out
sbb
ljmp
shll
andb
jae
mov
mov
loop
mov
dec
lea
xchg
jmp
ljmp
jecxz
jge
loop
icebp
fucomp
xchg
lcall
cmpsl
lret
aaa
add
clc
lret
adc
dec
pusha
adc
sub
add
popa
inc
inc
cmpl
divb
and
jge
jns
xchg
lea
rcrb
imul
jbe
jno
int
add
cmpsl
ret
outsl
push
pop
and
stos
stc
dec
mov
mov
je
sub
lret
pusha
sar
in
sub
and
fwait
cmp
pop
fidivl
movsb
push
inc
xchg
xchg
test
pop
sbb
movsb
pop
hlt
xor
arpl
cmp
jne
mov
lods
les
xor
jl
std
out
lds
nop
repz
mov
xor
adc
sub
pop
sbb
push
jns
sbb
jo
pop
xchg
sub
ret
inc
pop
outsb
xor
pop
push
push
lds
dec
das
add
add
jmp
leave
sti
inc
cmp
mov
sbb
xchg
test
xchg
mov
mov
outsl
arpl
dec
xchg
lret
or
pushf
mov
movsb
mov
into
pop
iret
or
inc
insl
gs
out
lret
fs
dec
xchg
lret
push
fcomps
js
pop
jns,pn
mov
mov
sbb
inc
cmpsl
mov
int
enter
cs
xchg
mov
or
sti
mov
pop
sti
push
sbb
daa
or
or
stos
mov
call
dec
pop
out
adc
cmp
pop
and
lcall
call
xor
jle
xor
mov
leave
xor
add
pop
movsb
cmp
add
imul
lahf
jb
repnz
enter
xchg
jne
loope
mov
cmp
sub
orl
scas
cs
cmp
mov
dec
inc
push
les
push
out
cmp
sbb
pop
bound
fidivrs
icebp
aam
sub
loope
inc
popa
mov
dec
pop
mov
add
rcrb
dec
ja
call
mov
mov
ljmp
aas
lods
mov
pop
out
std
dec
inc
in
shll
xchg
ds
roll
mov
outsl
popf
bnd
sub
popl
adc
loope
out
jno
pop
cltd
add
jl
call
inc
push
pop
test
mov
bound
aad
aad
xchg
pop
push
fs
or
dec
or
roll
inc
cld
inc
adc
push
aad
inc
mov
popa
xor
into
mov
je
push
pop
xorl
stos
mov
mov
clc
out
in
sbb
or
cmp
ljmp
push
add
pop
fs
sbb
sub
insb
scas
lea
inc
pop
sub
in
nop
sbb
nop
imul
mov
negl
mov
mov
mov
imul
sbb
jl
lods
inc
and
loop
cwtl
in
xchg
dec
lds
sub
mov
out
and
in
adc
sahf
call
es
lods
lret
adc
test
mov
loop
inc
push
xor
push
mov
lods
clc
jae
and
jge
ss
dec
and
xor
xor
je
dec
mulb
minps
stos
push
insb
pop
add
jecxz
aas
nop
pop
jno
icebp
mov
push
and
jle
mov
cmpsl
ficoms
subl
ja
cmpsb
std
xchg
ror
sbb
insb
lds
adc
adc
imul
mov
sub
repnz
mov
pop
out
or
push
clc
stos
mov
push
push
shr
mov
pop
mov
jno
pushw
xor
mov
mov
mov
jo
jae
mov
and
ljmp
and
pop
ret
fisubrl
addr16
aam
sbb
push
pushf
jae
scas
xchg
jae
mov
addr16
aam
xchg
sbb
jle
xchg
lcall
aas
cmpsl
ljmp
cmpsl
icebp
adc
jae
xchg
incb
fwait
cli
cwtl
pop
iret
mov
pop
or
xchg
mov
sub
popa
stos
dec
cltd
sarb
cli
cld
ds
mov
xchg
in
les
out
in
push
sub
pop
sbb
das
xchg
aaa
cltd
sbb
mov
push
add
cld
sbb
rol
adc
dec
mov
icebp
or
cmp
cld
adc
cmp
mov
xchg
into
pop
jecxz
aad
and
mov
xchg
movsb
add
fst
mov
enter
inc
cmp
xor
sbb
mov
jl
outsb
push
dec
and
sub
mov
in
jl
mov
notb
and
lock
xchg
aad
out
push
lods
sub
rcrb
and
mov
or
jp
mov
mov
icebp
enter
cltd
es
std
ss
inc
shl
lret
and
in
stos
sbb
cmp
mov
mov
jp
shlb
push
hlt
adc
jae
xchg
call
mov
dec
xor
jbe
mov
push
imul
je
gs
xor
in
mov
xor
xchg
arpl
push
lret
mov
mov
insl
cmp
xor
cmp
sub
and
push
sub
add
cmp
push
xor
gs
sub
test
ja
xlat
mov
pop
lods
dec
repnz
sbb
pop
xchg
mov
out
ja
clc
adc
ds
pop
mov
sbb
xchg
cmp
xor
ss
mov
dec
cmpl
mov
nop
out
popf
js
sub
dec
push
dec
mov
gs
shlb
jge
int
test
xchg
mov
lds
xchg
notb
scas
mov
jl
outsl
sbb
movb
iret
test
xor
shl
stc
adc
stos
mov
and
xchg
shr
mov
ja
stc
inc
and
or
sti
jbe
xor
cwtl
xor
jmp
push
fnstsw
lret
mov
icebp
in
shlb
das
or
cs
dec
pop
pop
xchg
or
sbb
inc
out
outsb
jmp
push
cmp
aam
xchg
aas
pop
loope
xor
dec
loope
fwait
iret
scas
mov
add
pusha
imul
rcll
lods
incl
or
push
jno
cld
sbb
test
and
mov
inc
xor
icebp
inc
mov
mov
mov
shr
jo
pop
insl
jns
mov
pop
xchg
dec
movsb
test
lds
int
sbb
mov
mov
aas
sbb
sbb
jnp
push
xor
in
add
add
mov
int
mov
incl
mov
test
pop
movsb
and
test
iret
enter
push
test
jecxz
mov
jb
pop
pop
mov
shrd
cmc
xor
jecxz
inc
pop
ss
cld
loope
cmp
pop
popa
jne
lock
push
jmp
je
mov
mov
incb
daa
xor
jns
cmc
nop
push
jnp
jle
pusha
fadds
insb
jns
sub
sarl
sub
out
fwait
stos
sub
inc
mov
scas
mov
add
std
insl
in
scas
daa
lea
mov
call
jge
mov
jmp
xor
insb
push
and
xor
ds
or
in
add
clc
cli
mov
push
xor
xchg
call
jns
outsl
loope
dec
sbb
jl
xchg
cmp
jge
dec
or
sahf
sahf
inc
fldcw
mov
push
push
push
lahf
push
dec
into
pop
jl
sub
iret
or
push
and
lahf
push
jb
jecxz
xor
mov
xor
ret
xor
aad
outsl
cli
orl
mov
add
ljmp
and
in
movb
popf
sbb
pop
cld
add
xor
and
pop
lea
mov
imul
adc
popa
test
xorl
xor
stos
jbe
imul
or
push
cmpsl
out
add
or
cmp
clc
mov
and
addl
mov
lock
mov
scas
enter
daa
dec
bound
sub
lods
lahf
push
xor
push
fnsave
fcmovu
pop
popa
and
mov
adc
dec
lahf
push
cltd
sbbb
inc
stc
lods
outsl
xchg
cwtl
cmp
xor
jb
lock
ss
test
daa
mov
mov
in
xor
jl
lcall
das
push
jo
test
fldl
sbb
and
and
dec
push
mov
nop
fisubs
adc
xlat
mov
mov
fidivrl
jecxz
mov
imul
mov
sub
cmpsl
psubsw
loopne
imul
shr
fwait
push
js
adc
ret
les
lods
sub
ljmp
xlat
mov
jg
push
mov
and
inc
mov
cwtl
mov
inc
xor
dec
shrb
stos
loop
cmp
push
fdivrl
push
inc
sbb
jp
outsl
jecxz
xor
mov
mov
dec
iret
insl
inc
imul
xor
sbb
bound
push
pop
jae
ljmp
mov
fcmovb
inc
fwait
rcrb
and
jns
xchg
pop
lds
cmp
dec
mov
adc
jge
iret
addl
push
leave
sub
pop
add
lods
imul
pop
sbb
pop
test
push
mov
aas
xor
jbe
add
xchg
pop
mov
sbb
loopne
xor
lods
mov
ja
lret
pop
sbb
and
inc
repz
add
jnp
rol
push
rcrb
adc
sbb
mov
sbb
mov
jmp
mov
je
aad
in
xor
outsb
les
out
andl
lods
mov
sub
inc
out
xor
loope
cwtl
imul
mov
dec
imul
rclb
insb
int
pop
out
adc
cltd
stc
sahf
lea
popa
mov
cmp
insl
fdivl
xchg
orl
mov
div
mov
cmp
subl
cmp
inc
push
sbb
shl
push
jmp
or
addr16
pop
out
sub
mov
and
andl
mov
out
jg
cs
jle
inc
scas
mov
adc
nop
in
mov
enter
arpl
jb
mov
inc
mov
pop
mov
mov
lds
or
and
sbb
or
hlt
xchg
ss
dec
fcoms
xor
pushf
lret
jo
xlat
inc
jecxz
sbb
mov
loopne
dec
mov
push
jb
movsl
in
repnz
rep
cmpsl
nop
pop
loop
or
jo
xchg
out
scas
shrb
movsb
loope
stos
cmp
inc
add
fsubs
movb
ljmp
or
mov
jg
ljmp
clc
mov
jge
cs
inc
inc
je
outsb
push
inc
sbb
jge
fwait
jo
push
push
stos
sub
jecxz
mov
cmp
repnz
xchg
push
cwtl
push
or
add
mov
adc
imul
fs
hlt
and
insl
outsl
sub
int3
test
idivl
cmp
mov
pop
stos
jecxz
cmp
ss
pop
xchg
xor
pop
cmp
js
push
fisttps
scas
cld
xor
ja
gs
imul
mov
cmpsb
cld
xor
out
and
xchg
sti
outsb
sub
xchg
xchg
out
mov
mov
in
movsl
adc
fimull
or
insl
xchg
scas
movsl
mov
mov
dec
mov
loopne
push
push
jmp
nop
pop
divb
mov
call
fcoml
inc
push
fwait
lcall
and
add
jb
jb
stos
outsb
push
aam
repz
jbe
sbb
xchg
in
iret
pusha
fldt
mov
mov
xor
std
adcb
add
sub
mov
data16
movsb
adc
lahf
pop
sarl
mov
jae
adcl
sub
or
sub
aad
add
jns
orl
stc
stos
push
sub
adc
rsqrtps
mov
add
es
test
in
arpl
insl
pushf
or
push
addr16
xchg
or
pop
sar
cmp
maskmovq
cmpsl
fimuls
cmpsl
jno
inc
or
mov
push
push
sub
jb
cmp
sbb
test
stos
test
aam
movsb
neg
pop
iret
hlt
scas
es
sbb
cmc
mov
lret
and
xlat
mov
add
enter
push
sti
sbb
sbb
jbe
dec
ss
int
mov
push
into
movsb
fwait
cld
leave
mov
in
push
mov
sbb
sub
jnp
cs
std
pop
dec
mov
xor
fnstcw
fwait
inc
xchg
int3
ret
mov
and
loop
cmp
inc
or
fucomip
xchg
push
icebp
adc
movsl
xchg
dec
mov
aam
inc
dec
mov
loopne
cli
out
je
mov
ja
mov
and
lods
jns
xchg
jo
mul
test
dec
adc
in
out
ret
adc
jl
sbb
sub
je
push
add
jnp
loop
ficoml
or
pop
adc
xchg
fisubl
cs
cli
or
cli
push
aas
sub
es
inc
lahf
push
dec
xchg
push
jecxz
mov
or
sbb
repnz
jmp
mov
and
xchg
dec
call
insl
rcr
cmp
into
movsl
js
cs
mov
sub
sub
shlb
dec
orb
lods
mov
in
cmc
aaa
loop
cmpsl
in
cmpsb
bnd
and
idiv
ret
clc
rclb
ss
out
inc
les
movsl
dec
cmovle
ja
mov
sbb
imul
jmp
add
inc
ret
push
inc
ja
aaa
push
int3
fs
ljmp
dec
mov
lret
fsubrl
lret
jl
mov
cmp
lea
jo
mov
cmp
cmpsb
cmp
gs
ficomps
mov
data16
js
jae
aaa
mov
repz
loopne
in
dec
clc
ret
repz
lods
leave
push
pop
js
in
mov
test
fdivrl
jbe
aam
mov
pop
sub
cli
int3
lea
cmp
mov
sub
out
mov
xorb
scas
stos
loope
dec
fs
push
jns
push
fcmovnbe
push
insb
mov
jb
xlat
rcrl
xlat
jnp
repnz
dec
push
xadd
dec
aaa
stos
fwait
pop
push
sahf
ja
sub
mov
inc
push
adcl
sub
push
movsl
psubsb
gs
push
mov
iret
adc
dec
test
xor
adc
jmp
push
outsl
xchg
cmp
scas
cmp
nop
daa
lods
xchg
jmp
dec
jbe
jg
dec
repz
sub
pusha
sbb
gs
imul
out
xor
out
mov
xchg
iret
ret
cmpsb
xchg
test
dec
dec
rol
adc
inc
xlat
popf
or
repnz
lock
pop
movsb
decb
cmc
jne
xchg
dec
iret
test
je
sub
fs
push
ljmp
mov
mov
adc
inc
push
rclb
outsb
fwait
xchg
popf
js
add
int
push
ret
push
cmp
data16
mov
adc
lds
jp
cmpl
in
aam
rorb
fcmove
jns
add
loope
jl
xor
lea
sub
pop
sub
cs
fisttpll
add
mov
movsb
xor
adc
sub
push
hlt
sarl
cmp
and
movsb
jo
sub
movsb
daa
inc
xor
mov
xor
xor
fwait
or
scas
fstpl
pop
pop
inc
sub
mov
shlb
jge
dec
je
sub
jp
lcall
js
and
cmp
enter
adc
inc
shlb
lds
push
and
mov
aad
aad
shlb
and
outsl
mov
sbb
gs
test
pop
or
ret
or
sbb
jb
adc
mov
fstpl
dec
jnp
lds
jbe
fbld
jb
mov
dec
cmp
push
cmp
inc
pushf
arpl
ja
xor
sbb
ret
ja
shrb
ljmp
stc
xchg
adc
aad
pop
mov
jbe
cmpb
test
jne
out
mov
js
testl
add
add
cmp
rorl
cmp
movzwl
mov
mov
xor
dec
cmp
test
iret
int3
scas
mov
nop
imul
in
cmpsb
psubd
nop
jb
les
mov
enter
cmp
test
xchg
movsb
clc
icebp
mov
mov
inc
or
sub
pop
in
aas
hlt
js
test
xchg
sub
test
insl
mov
lods
push
adc
jns
mul
jmp
in
cmp
out
and
ret
or
sbb
das
insl
ja
push
xchg
push
xor
arpl
or
in
sub
xor
mov
inc
call
sub
cli
sub
les
clc
cltd
leave
push
rclb
cmp
out
in
xchg
xor
lcall
ret
lea
sti
cmpsl
xchg
push
ss
mov
addr16
dec
dec
lea
jbe
imull
stc
rcrb
add
mov
or
xlat
mov
sbb
je
dec
mov
add
sbb
fs
sub
test
and
sbb
sbb
out
xchg
sti
mov
das
sub
mov
jb
pop
shlb
in
std
lds
jl
xchg
or
xchg
mov
ret
pop
jp
ror
cmp
in
push
sbb
sub
fidivl
ja
fisubl
jmp
jg
xchg
push
mov
lahf
xor
mov
aaa
mov
mov
ja
dec
in
adc
outsl
or
xor
dec
mov
stc
sub
mov
adc
int
inc
sbb
call
add
cmpsb
rcr
popa
addb
aam
push
arpl
es
dec
or
lock
pop
jge
xchg
xchg
sarl
cmpsl
pop
adcb
mov
arpl
xchg
out
test
lret
lods
jl
rcl
mov
cmc
and
pop
jae
cmp
pop
xchg
addr16
jb
mov
add
jl
lock
bswap
lods
pusha
fucomi
fs
mov
repz
aaa
jbe
push
dec
iret
xchg
cld
adc
divb
ljmp
fcmovnb
sbb
pop
mov
add
sbb
aas
and
call
cmp
or
daa
xor
push
loopne
push
iret
or
jns
pop
pushf
adc
sub
xor
push
sti
add
push
dec
sub
mov
push
and
lcall
dec
adc
inc
clc
push
fdivr
cmpsl
lods
aad
jge
cltd
cmp
inc
ljmp
mov
sub
ss
sub
mov
hlt
pop
sbbl
pop
js
mov
and
lcall
aas
inc
add
xchg
icebp
mov
and
jbe
lret
std
jge
and
xchg
fnstenv
outsl
sub
lahf
outsb
fistl
jmp
scas
cmp
or
bound
or
adc
xor
outsl
mov
xor
movsl
xchg
xchg
and
mov
jno
in
sbb
xor
arpl
jnp
jge
in
sbb
sbbl
sub
mov
add
pop
fwait
push
stos
fwait
mov
sub
out
mov
cmc
inc
incl
ss
fnstsw
pop
dec
xor
lods
sub
loopne
mov
dec
xchg
enter
jp
mov
ja
and
out
and
dec
inc
push
dec
pop
cmpsb
inc
loope
pop
mov
sbb
and
xchg
and
je
cmp
dec
push
jl
jle
sti
jg
push
cmp
inc
sbb
lods
orl
addb
je
push
push
iret
int3
in
iret
jnp
mov
adc
orl
sahf
sbb
sti
jno
push
add
cmp
daa
fcmovnu
es
jne
and
outsb
inc
fsubp
mov
xor
mov
or
ljmp
add
xor
frstor
shrl
ret
cmp
mov
jl
es
push
popf
int3
xchg
inc
lahf
add
push
repz
dec
pop
lds
pop
shll
jecxz
aam
and
pushf
mov
cli
lahf
push
pop
jmp
sarl
sbb
pop
mov
jl
xchg
push
sub
movsb
ljmp
xchg
sbb
subb
add
pushf
sub
cmp
jb
fidivrl
fimuls
jns
pop
jo
shrb
in
lods
push
inc
mov
cmp
push
jl
lea
orb
mov
and
push
pop
sub
movsb
imul
iret
cmp
cmp
popw
gs
ret
add
push
das
jmp
mov
push
cld
xchg
jecxz
or
sti
inc
push
push
mov
inc
jno
mov
sub
shlb
push
push
aam
movsl
mov
add
nop
xor
clc
popa
inc
push
rcr
icebp
and
cmc
xchg
ret
cmp
es
jmp
pop
lods
mov
test
pop
out
mov
aaa
jo
daa
nop
iret
mov
inc
inc
lods
push
xchg
lods
test
lods
popa
push
les
inc
sahf
mov
lcall
movsl
xchg
mov
js
stc
sub
dec
call
pop
or
fldenv
mov
mov
mov
cmc
xor
push
add
pop
std
fldt
bndstx
pop
pop
mov
adc
inc
iret
jg
out
ror
enter
in
push
and
fstl
es
je
incb
mov
xor
xchg
add
sarl
leave
push
push
das
negb
or
dec
imul
xor
mov
push
mov
fldenv
mov
inc
sbb
mov
or
xchg
xor
arpl
cmp
test
mov
xchg
rcll
jmp
or
lock
jl
loop
adc
sub
xor
mov
pop
pop
pop
jmp
push
xchg
stos
sbb
mov
idivl
inc
dec
sbb
std
lahf
loopne
cli
fimuls
dec
xchg
mov
fptan
jmp
lret
loopne
rorb
data16
push
mov
ljmp
inc
out
mov
jne
push
hlt
or
fxch
loope
ljmp
addl
pop
sub
movsl
xchg
pop
aad
cmpsb
pop
inc
jp
xor
rcrl
cmp
imul
pop
push
repz
push
sar
jmp
cmp
jg
jno
cmpsl
jne
inc
arpl
pop
stc
xchg
mov
sbb
xor
lret
or
sub
mov
mov
into
and
sbb
add
push
int
movsl
stc
jns
lret
pop
movsb
std
fimull
xor
lds
fwait
loopne
mov
mov
iret
mov
insb
lods
mov
fs
cltd
pop
jge
mov
repz
fistpl
mov
and
mov
rorl
xchg
inc
cmp
mov
pop
nop
imul
loope
sub
push
add
bound
test
dec
cmpsl
ljmp
mov
not
sub
inc
fdivrl
in
or
jo
scas
sahf
sbb
cmp
mov
pop
fldcw
clc
dec
adc
in
incl
inc
cltd
add
iret
jno
mov
push
lret
popf
fdivr
mov
xor
xchg
mov
push
pop
inc
sub
nop
add
lods
adc
imul
sbb
psadbw
loop
xor
sbb
lds
jns
sbb
xor
movsb
roll
push
shl
inc
fidivrs
push
and
pop
jnp
inc
and
insl
xchg
test
xchg
add
into
inc
divl
mov
push
pop
mov
or
jno
push
push
vpunpcklqdq
push
cmpsl
hlt
dec
mov
iret
mov
popf
xlat
mov
daa
push
cmp
inc
arpl
ret
xlat
jge
pop
je
or
xor
scas
int3
std
xor
jb
push
ret
adcl
jo
daa
add
adc
stc
xchg
pop
lds
sbb
in
or
popf
add
stos
push
sub
popf
mov
sbb
and
lods
add
xchg
fwait
lcall
shrl
xlat
scas
scas
fwait
mov
dec
xor
sub
fcompl
pop
cmpsl
stos
fs
pop
sbb
cmp
and
es
push
ja
inc
pop
add
rolb
pop
xsha256
cmpsb
push
sub
fisubrs
sbb
rcl
mov
push
in
xchg
dec
dec
mov
mov
lret
add
das
pop
xlat
push
mov
les
bound
fwait
imul
jb
out
enter
movsb
stc
cld
fwait
insb
xchg
test
popf
lahf
movsl
dec
cmpsl
pop
test
pushf
push
mov
loop
xchg
sbb
lret
pop
sbb
push
add
int
mov
mov
mov
cmp
lret
sti
insb
or
sbb
add
push
mov
in
lcall
sbb
lods
testl
sub
mov
ss
inc
nop
pop
dec
cmp
push
xchg
dec
xchg
jno
movsl
sub
gs
cmp
sub
lcall
xor
pop
and
shll
sbb
nop
add
subl
lea
cmpsl
jb
mov
std
push
push
pusha
lret
fldl2e
mov
mov
out
xchg
cmp
mov
or
cmpsl
pop
lret
dec
xchg
mov
pop
sbbb
imul
rol
movd
or
push
or
sbb
mov
jmp
cmp
push
sbb
push
sub
scas
pop
inc
sbb
mov
lret
inc
lcall
mov
push
aas
adc
stos
inc
inc
pop
fs
adc
sbb
clc
test
aas
add
add
mov
mov
aaa
lahf
in
icebp
mov
xor
jecxz
and
fs
stos
inc
mul
dec
adc
mov
lahf
adc
lds
push
out
popf
dec
or
inc
or
data16
in
inc
push
cli
fmul
or
test
repnz
ljmp
ror
rolb
inc
jns
jno
js
leave
or
jg
loop
dec
jo
rol
xor
subb
popa
mov
stos
popf
pop
rorl
adc
adc
add
shlb
cmpsb
in
push
imul
addl
rolb
push
test
les
mov
or
push
lds
xchg
dec
ds
notl
mov
and
add
dec
and
mov
movsl
insl
cmp
inc
lret
push
jp
imull
pop
es
jle
stc
fisubrs
and
sbb
ja
mov
movsb
add
sti
inc
sbb
adc
sub
adc
push
stos
cmp
imul
sub
and
sarl
add
or
inc
xor
int
push
pushf
mov
dec
xor
or
jp
sub
mov
xchg
flds
xor
mov
pop
cmp
inc
loope
test
into
test
mov
xor
jo
push
pop
sub
pop
fidivrl
enter
cmp
lds
jge
ja
fcmovbe
or
inc
push
sbb
and
add
popa
adc
or
cmp
jns
xchg
insb
in
cmp
mov
push
orb
idiv
inc
push
cwtl
sti
clc
sbb
mov
outsb
add
pmuludq
push
mov
lret
arpl
lea
daa
fcoml
nop
pop
shrl
or
adc
or
push
loope
fisttps
data16
push
mov
cmp
and
push
cwtl
add
jae
fwait
nop
push
mov
test
mov
cmp
add
jecxz
ljmp
mov
loop
cs
push
ret
stos
arpl
int
fsubl
add
notl
adc
mov
int3
and
sahf
cltd
les
sahf
sbb
mov
mov
out
pop
jle
sbb
fld
sub
lock
std
aam
jge
inc
lds
test
xlat
inc
push
xor
loope
mov
stos
sbb
mov
sub
std
icebp
sub
mov
sbb
dec
and
cmp
push
popa
lret
dec
cltd
shl
mov
filds
pop
arpl
mov
xchg
in
mov
sahf
and
cmp
ds
clc
inc
and
lcall
fmull
imul
jmp
jp
cltd
jp
mov
jb
test
and
les
stos
rolb
mov
lret
lcall
sbb
dec
jp
sub
rcl
mov
mov
cs
mov
lcall
arpl
sub
pop
xor
fnstcw
fsubs
jae
sbb
inc
or
mov
dec
gs
or
out
in
shll
pop
cmc
or
and
daa
mul
mov
cmovne
cmp
aad
or
cwtl
bswap
aad
mov
bound
xchg
int
mov
add
or
je
mov
sahf
adc
bound
dec
mov
cmp
cmp
jbe
inc
sti
fisttpl
inc
sub
cmp
arpl
int
mov
fs
xchg
adc
dec
sar
lcall
pop
out
dec
hlt
pop
ss
mov
lea
mov
jl
int
push
dec
ret
push
pop
aad
and
xor
sbbl
push
divps
jl
mov
jo
enter
xchg
lret
sar
inc
test
jge
movsl
jae
sbb
ret
repz
ret
mov
fdivrl
ror
xchg
and
divb
js
lcall
cmp
cs
ja
xchg
fstpt
inc
incb
push
lea
adc
jecxz
sbbl
dec
scas
xchg
stos
push
fwait
jb
lock
mov
das
test
cmpl
lods
jae
test
in
push
mov
call
sub
and
mov
and
add
push
iret
mov
aaa
xor
xor
mov
mov
sbb
lret
int
jo
icebp
das
les
repz
loop
insl
movlps
push
and
push
filds
add
out
pop
std
mov
aad
stos
inc
cld
add
pop
or
xor
fldl
push
sbb
mov
pop
pop
mov
jp
pop
mov
jmp
shl
pop
lea
into
je
add
movb
sub
and
aas
inc
or
cmpsb
lds
jl
data16
xor
push
cmp
enter
dec
repz
test
and
dec
push
in
imul
fistl
xchg
inc
lret
dec
sub
nop
in
dec
fmull
in
push
and
fxch
and
push
jb
and
pop
xor
jg
out
push
fcoms
popf
sahf
or
pop
cmp
sub
or
stc
subl
xor
popa
pop
mov
test
push
mov
add
mov
xlat
addb
dec
push
in
lock
daa
mov
xor
pop
imul
push
stos
lock
xchg
mov
cmp
and
add
and
mov
pop
xor
dec
repnz
sarb
arpl
jmp
jmp
popf
jl
add
mov
add
xchg
ret
xor
jge
pop
mov
iret
pop
fdivrl
sbb
arpl
es
aad
push
adc
push
std
adc
outsb
sar
mov
mov
push
out
idivl
fisubrs
in
stc
out
add
fisttps
mov
ss
insl
fdivp
jmp
push
and
dec
rolb
inc
adc
sub
mov
mov
xchg
mov
dec
loop
shl
jne
pop
test
mov
add
pop
xchg
lock
imul
dec
iret
push
cmpsb
push
add
or
outsl
loope
shlb
daa
sub
sarl
mov
stos
jo
imul
cmp
pop
call
pop
and
gs
xchg
je
mov
orl
jns
mov
adc
mov
fldenv
inc
dec
scas
mov
loop
shl
roll
mov
lea
jns
std
mov
pop
xchg
push
addr16
out
imul
push
out
and
pop
lds
push
jl
and
push
sub
or
add
push
lock
jge
and
push
repnz
fisttps
insl
add
sub
ret
add
dec
clc
xchg
push
in
pop
imul
pop
mov
dec
sub
sub
adc
cmpsb
lds
or
lahf
and
addr16
in
into
jl
inc
lds
nop
dec
std
sti
push
mov
sub
icebp
out
pusha
clc
popa
sub
bound
inc
cld
icebp
dec
lahf
jb
fcmovnb
popa
or
mov
mov
arpl
mov
iret
sub
cmc
daa
movsb
xchg
nop
mov
cwtl
adc
mov
ret
mov
iret
mov
insb
adc
cmp
inc
xchg
mov
icebp
xor
mov
jo
mov
cmc
lret
or
repnz
push
xor
lods
gs
and
jle
sarb
subb
fstps
xchg
push
push
testb
pop
gs
stos
push
xor
sub
insl
xor
shl
lahf
mov
insl
dec
sub
addr16
push
xchg
test
add
xchg
and
add
inc
out
cmp
mov
adc
sub
imul
push
dec
lods
das
cli
fdivrs
leave
popf
cmp
cld
mov
scas
rclb
scas
les
mov
fdivrs
or
insb
pop
push
int
out
push
in
dec
int3
dec
stc
jae
sbb
sti
and
and
jmp
mov
sbb
mov
and
mov
repnz
incl
mov
loop
aam
shll
sbb
bound
xorb
out
pusha
inc
pop
cmp
and
mov
imul
clc
insb
nop
mov
or
mov
test
mov
lcall
or
and
scas
xor
popa
jb
and
inc
movsb
jne
popa
ficoml
add
imul
inc
insl
lock
fistps
cmpsb
push
sbb
cmpb
push
int
adc
lret
push
jp
jnp
ds
push
mov
out
out
sarl
stos
pop
add
cld
mov
dec
mov
int3
out
mov
lods
roll
cmp
js
dec
dec
and
ds
mov
pop
add
jecxz
jb
jp
inc
lock
add
mov
push
idivb
sbb
dec
and
test
jb
pop
das
jp
js
push
cmpsb
test
scas
adc
js
sbb
lahf
int3
or
fldcw
testb
les
mov
fcmove
call
or
xlat
jg
pop
js
dec
fldl
push
scas
aas
hlt
jbe
pusha
cs
cmpsb
popf
orb
inc
push
lahf
cld
jo
xlat
lods
je
imul
xchg
clc
or
dec
cmp
add
inc
or
loopne
lock
dec
mov
mov
push
jge
clc
lods
adc
pop
nop
sub
movsb
mov
adc
jmp
lret
sarl
lret
inc
jge
pop
inc
orb
jecxz
mov
int3
adc
xor
popf
or
jmp
pop
add
jno
int
xor
lods
outsb
sub
sub
call
adc
mov
add
inc
fsubs
xchg
es
icebp
adc
pop
mov
idivb
lret
test
popl
pop
xchg
xchg
lds
inc
dec
hlt
xchg
mulb
adc
imul
js
jle
sub
jno
xor
adc
sub
int3
xchg
pop
bound
dec
or
jg
mov
subl
cltd
mov
sub
mov
fwait
orl
cli
cmp
xchg
jge
hlt
and
pop
movsb
ds
lds
cmp
mov
and
repz
mov
fmuls
test
dec
push
loop
xor
notb
test
jo
mov
dec
cmp
pop
mov
dec
aas
repnz
xor
lcall
and
addb
push
jo
xchg
xor
in
cld
fstpl
lret
aad
mov
cs
fnstcw
aas
cmp
sbb
stos
repz
inc
or
push
and
sbb
mov
xchg
sbb
add
sbb
gs
mov
jo
mov
mov
clc
mov
inc
fisttpl
add
dec
xlat
sbb
cmp
sbb
loopne
popf
out
out
xor
adc
or
jae
jne
dec
int
xchg
ret
imul
jns
enter
pop
lret
stc
sub
insb
adc
lret
push
in
js
dec
negl
int
add
je
shrb
cmp
test
mov
rclb
sbb
mov
mov
lods
sti
inc
xchg
sub
mov
fcoms
pushf
imul
or
inc
xor
out
div
and
aad
push
out
mov
je
push
lcall
rorl
cli
in
push
add
mov
les
xchg
orl
adc
inc
std
mov
std
fistps
in
mov
xor
xlat
or
aad
mov
jne
sub
xchg
leave
mov
sub
stos
repnz
mov
sub
sbb
push
xchg
ljmp
mov
inc
mov
int3
dec
into
insb
out
push
xchg
arpl
movsb
push
movsb
ffreep
pop
leave
inc
call
jp
mov
addr16
xor
js
int
rorb
fidivrl
sbb
sub
das
lea
jae
fldcw
cmp
pop
dec
and
xor
addl
lods
pop
testb
xlat
and
mov
pop
pop
movsb
lea
push
in
and
in
fldcw
mov
jae
sahf
adc
nop
iret
je
out
data16
pop
dec
mov
add
aas
fisttpll
xor
inc
inc
dec
movsl
jg
insl
xchg
add
mov
test
sahf
or
shll
lea
loop
sti
pusha
testb
push
xor
inc
adc
mov
sub
gs
xor
dec
pop
cltd
mov
outsl
cld
jbe
push
pop
or
mov
pop
sbbb
inc
xchg
repnz
movsl
or
jo
xchg
or
and
add
xor
xlat
aas
aad
lods
push
add
shlb
mov
xchg
and
xor
adc
jne
adc
add
push
dec
xlat
lock
scas
scas
jge
adc
pop
mov
inc
mov
xor
xchg
add
imul
or
pusha
inc
fcompp
jnp
pop
aaa
push
xor
cmp
mov
xlat
ret
and
mov
jae
mov
cmpb
push
lahf
lcall
or
inc
mov
jb
leave
movsb
add
lcall
ret
cmp
cmp
cmpsl
clc
push
out
mov
fcmovb
notl
je
jecxz
mov
hlt
and
mov
out
sub
mov
lret
loopne
jb
xchg
out
xchg
inc
or
and
lret
jmp
or
cmp
ljmp
sbb
roll
shll
sbb
ds
xchg
and
std
dec
fnstcw
daa
lds
cmp
and
cltd
mov
fadds
mov
scas
adc
jbe
cld
mov
cmpb
leave
stc
jmp
hlt
jno
sub
icebp
push
lods
les
jb
test
in
push
cmp
jns
cmpsl
lods
jae
inc
sub
cmp
mov
rcll
push
xor
cwtl
push
xchg
and
ret
into
leave
xchg
xchg
adc
dec
inc
lock
ret
and
testb
in
cmp
push
adc
mov
cmp
inc
das
mov
clc
sbbb
test
mov
and
fcoml
bnd
sub
std
mov
add
push
mov
roll
popf
xor
dec
mov
mov
push
mov
popf
in
ljmp
mov
xor
add
xchg
jno
iret
pop
mov
pop
inc
arpl
filds
mov
inc
mov
dec
xor
inc
push
out
cld
inc
nop
push
insb
xchg
notl
cmp
lret
or
or
hlt
adc
roll
out
int3
and
fwait
rcll
mov
fcomps
ret
sub
sbb
mov
imull
fwait
imul
mov
mov
lret
xor
cmp
pop
fstpt
jl
dec
or
mov
sbb
in
mov
jmp
or
push
mov
cmp
lahf
add
mov
mov
aam
sbb
insb
push
out
cld
xchg
jne
dec
push
movsl
fdivr
mov
lods
sahf
mov
add
lods
push
jbe
shr
incb
repz
idivl
xchg
std
jns
sti
mov
sub
jbe
sbb
and
ret
jge
dec
pop
mov
sub
push
xchg
jg
mov
sahf
es
jp
iret
loope
and
adc
push
sbb
andb
mov
inc
into
gs
lret
pop
lret
or
movsb
mov
rcl
shrl
fmuls
mov
mov
xchg
ss
lcall
addr16
pop
call
and
or
adc
xchg
lret
or
gs
and
movsb
mov
roll
mov
data16
sub
lcall
xchg
mov
jns
rcrb
jl
int
sbb
cmp
lret
stos
subb
xor
push
es
daa
xchg
bound
pop
rolb
or
jnp
mov
lds
jne,pt
aas
hlt
call
pop
mov
fsubrp
xchg
loope
jmp
add
adc
imul
pop
pop
and
xchg
js
icebp
lret
or
pop
filds
or
xchg
inc
jbe
lcall
adc
dec
int
in
fcmovnu
imul
into
nop
mov
addr16
iret
pop
mov
push
in
add
dec
pop
add
lcall
push
movsb
push
push
mov
push
jecxz
sbbb
and
sub
add
subl
add
lea
mov
inc
or
gs
xchg
nop
rorb
daa
push
lods
add
stc
xchg
push
sti
lea
mov
scas
cwtl
int3
push
mov
xlat
adc
cwtl
insl
cmp
nop
inc
outsb
mov
xchg
ret
xor
cmp
jge
push
repz
fcmovne
jg
iret
adc
cpuid
mov
pusha
jl
sbb
fs
dec
cmp
inc
inc
pusha
repz
mov
push
mov
shr
or
loope
mov
movsb
sahf
gs
dec
fidivrs
enter
sbb
sbb
lock
push
pop
and
push
stos
and
push
mov
rorb
jp
xchg
cli
xor
xor
jnp
sbb
je
or
imul
pushf
jno
addr16
dec
dec
lods
cmp
push
aam
adc
iret
mov
ret
xchg
fisubrs
adc
jne
pop
sub
mov
sbb
cmp
dec
jns
xlat
pop
aad
or
sbb
mov
pop
inc
mov
and
jg
leave
dec
jmp
mov
ja
outsl
mov
dec
imul
jecxz
cmc
push
mov
pop
xchg
adc
lods
shrl
fbstp
pop
pushf
movsb
repnz
sub
outsb
push
or
push
add
ret
jl
jmp
ret
dec
in
scas
testl
xor
shr
cmp
nop
lds
pop
ret
jmp
in
scas
inc
xchg
in
xchg
inc
adc
cmpb
push
pop
aam
nop
mov
in
mov
xchg
decb
ror
and
mov
cvttps2pi
shlb
insl
pop
push
stc
mov
jne
xchg
jle
xor
mov
pop
sbb
xchg
in
shrb
les
adc
pop
shr
jne
mov
sbb
rcrb
cmpsl
push
pop
pop
add
add
and
cmp
out
ljmp
push
cs
push
leave
call
inc
cwtl
mov
dec
movsl
cmc
popa
cmpsl
mov
fidivs
mov
insb
rcr
push
std
imul
rolb
decb
lret
out
jnp
jnp
sbb
std
insb
push
pop
jmp
scas
mov
enter
add
mov
mov
imul
cmpsb
popf
data16
mulb
sti
sbb
or
sbb
xchg
pop
jl
cwtl
cmpsl
lret
repnz
fistpl
notl
mov
pop
mov
repz
or
jp
push
das
and
mov
repz
mov
aaa
mov
adc
and
pop
sub
push
and
cmp
fwait
lock
inc
stos
jae
mov
pop
je
inc
imul
and
jne
jae
aas
stos
push
popa
lock
ljmp
jnp
addr16
sub
jle
lret
rcrl
cmp
inc
insl
out
or
out
pop
outsl
dec
mov
es
inc
cmp
xchg
stos
mov
outsl
gs
ret
pop
movsl
and
mov
lock
fldcw
in
nop
rcl
mov
mov
mov
mov
ja
mov
xor
cmp
pop
dec
lds
imul
add
sbb
and
xor
pop
orl
sbb
or
pushf
lahf
pop
out
dec
ret
std
push
gs
cmpsb
or
add
int3
fsubp
test
mov
adc
int3
sub
mov
pop
cmp
xor
jmp
arpl
ja
pop
add
pop
in
js
cmp
xlat
mov
enter
xchg
lods
mov
mov
push
fstps
push
iret
lret
cld
out
popf
cmp
cmp
enter
out
lds
lcall
out
sub
test
jmp
pop
rcl
pop
ljmp
out
clc
notl
imul
or
pop
jne
stc
outsl
and
pusha
mov
mov
lock
add
int3
ja
jle
push
in
pop
sahf
mov
xor
mov
add
jmp
in
mov
and
mov
lods
pop
jle
mov
testb
pop
das
jnp,pt
mov
rorl
out
jne
push
imul
adc
sub
mov
xor
aaa
in
xchg
das
lcall
leave
sub
mov
xchg
inc
and
adc
mov
repnz
and
dec
mov
mov
cmc
test
adc
into
pop
inc
movsl
scas
daa
inc
jmp
loop
cmc
lock
xchg
repnz
xchg
insl
adc
js
xlat
rorl
lahf
jle
sahf
shll
test
push
lea
or
dec
jge
dec
jnp
fnsave
loopne
xor
cmp
and
jae
fistpll
adc
insl
ja
mov
lock
div
jle
push
pop
inc
sbb
cmp
scas
lods
jnp
adc
outsl
dec
mov
aad
sub
dec
mov
imul
js
or
outsb
hlt
mov
gs
stc
ds
push
std
insl
js
js
out
sub
adc
or
out
out
jle
sub
adc
mov
test
inc
into
xor
mov
lret
push
xor
push
imul
push
roll
push
pop
iret
mov
movsb
pop
into
xor
mov
cltd
and
push
popa
enter
cmp
xor
jle
mov
leave
fnstsw
xor
jge
mov
dec
movlhps
fidivrl
jmp
xor
test
ds
cmp
mov
dec
subb
or
add
outsb
adc
iret
pop
mov
jmp
sbbb
xchg
pop
std
out
scas
sub
xor
inc
cmp
adc
lret
outsl
and
mov
sbb
sahf
je
movsb
out
ss
in
push
adc
insb
add
leave
pusha
pop
mov
cmp
insb
out
or
mov
mov
stos
in
adc
cmc
bnd
xor
jne
movsb
add
cli
cmpb
test
ja
dec
inc
gs
in
mov
xchg
sbb
test
xchg
arpl
mov
sti
icebp
jge
sbb
in
repnz
fcoms
mov
xchg
stos
xchg
aam
ss
sub
inc
mov
int3
mov
ret
icebp
in
adcb
stc
adc
enter
xor
movsl
sub
mov
out
or
jmp
mov
and
call
add
addb
pop
in
pop
in
mov
push
scas
sarb
xchg
and
mov
xchg
mov
ffree
ljmp
popa
out
jmp
enter
push
inc
std
ds
mov
ja
sub
inc
xchg
inc
popa
sbb
add
leave
adc
outsl
fmul
loopne
jno
pushf
dec
jge
mov
aad
push
adc
xor
jle
push
imul
inc
or
or
mov
and
fs
jg
aad
mov
inc
inc
insb
and
sti
mov
jnp
dec
xchg
adc
sub
add
xor
cli
dec
jno
scas
mov
cmp
test
mov
test
outsb
outsl
or
out
cmpsl
notb
out
mov
rorb
push
cmp
fistpll
cmp
ds
negb
mov
cmp
jnp
mov
xchg
insb
push
add
mov
xorb
jp
inc
cmpsb
and
movsl
pop
mov
xchg
xor
stos
mov
test
push
sarl
xor
xor
adc
jecxz
xchg
push
push
icebp
int
dec
iret
xchg
or
lock
fndisi(8087
mov
sub
jne
pop
fiadds
adc
sub
add
or
pop
xchg
jo
pop
lea
cmp
sti
pop
lea
movsl
clc
xchg
fisttpll
mov
daa
lods
repz
pop
mov
popf
rorb
cmc
dec
test
gs
jne
cmp
mov
or
movsl
xchg
mov
and
leave
imul
sub
in
adc
nopl
repz
test
mov
adc
les
sub
dec
inc
enter
fisttps
pop
ds
mov
inc
cltd
movlps
ret
jge
in
xchg
call
in
pop
sub
shlb
xchg
push
std
shlb
sbb
sahf
sub
outsl
fldenv
and
push
pop
std
enter
hlt
xor
xor
jmpw
pop
lahf
pop
dec
sbb
dec
or
andl
xchg
std
and
frstor
or
cmp
movb
repz
jo
add
xchg
fmul
insl
pop
xlat
test
test
fstps
fbstp
cmp
out
ja
add
mov
cmp
lock
sub
subb
in
xchg
gs
gs
cltd
fbstp
xchg
add
xlat
aad
mov
mov
dec
add
ss
scas
mov
fcomps
mov
jl
loop
testl
cld
jle
xchg
data16
out
push
les
push
mov
or
mov
les
cmp
push
clc
roll
test
stos
mov
ja
sub
lahf
adc
pop
nop
lea
xchg
inc
enter
inc
repnz
loope
dec
in
dec
hlt
fs
mov
lods
jns
fldenv
mov
push
pushf
and
sarl
lret
ljmp
xchg
in
inc
repnz
lds
das
jns
push
cltd
enter
outsl
aas
cmp
fdiv
in
xchg
daa
pop
es
cmp
mov
out
mov
outsb
jecxz
andl
jle
cmpsl
sbb
cmp
out
mov
jae
pop
pop
inc
loope
pop
daa
repz
int
dec
arpl
shrl
xchg
cmp
xor
mov
or
push
pop
in
adc
xchg
outsl
mov
fldt
xor
dec
test
clc
fs
sbb
jno
cs
jno
and
call
mov
arpl
push
inc
outsl
fnstenv
cmpsl
loope
sbb
test
not
shl
push
mov
jae
nop
mov
ljmp
jmp
cmp
jbe
jmp
sub
daa
cmp
xchg
std
fstpt
aas
mov
test
push
xchg
pop
in
inc
loope
addr16
gs
rep
push
or
sbb
jge
test
out
cmpl
in
sub
mov
lds
pop
test
push
add
pop
subl
push
fs
or
lcall
lahf
roll
dec
push
addr16
mov
loope
lahf
jbe
adcb
mov
mov
mov
std
or
push
jg
adc
jb
mov
insl
dec
mov
dec
inc
sarl
xchg
ret
imul
aam
xchg
add
inc
cli
adc
int
repz
pop
icebp
adc
push
lods
push
into
mov
imul
movsl
xor
jne
int
int
or
or
pop
rcrb
dec
dec
push
dec
push
scas
xchg
mov
and
inc
aaa
or
cltd
aad
dec
mov
push
mov
adc
push
xor
jle
int3
fwait
mov
cmp
push
and
sbb
sub
sbb
pop
popa
fdivl
xor
lea
ret
push
mov
les
and
aaa
mov
sbb
and
jbe
cmp
push
inc
push
loop
and
xchg
cmovo
lahf
mov
fisubs
out
fdivrl
in
mov
in
adc
lret
sbb
jecxz
add
mov
or
sahf
pop
adc
jmp
fimull
pop
and
das
mov
out
xchg
je
jo
dec
in
mov
sti
or
repnz
adc
dec
test
jne
sub
sub
ljmp
pop
push
sbb
and
repnz
adc
adc
pop
jp
fcompp
test
hlt
pushl
cwtl
mov
out
in
aaa
rolb
addl
stc
or
add
imul
mov
in
jecxz
mov
leave
xor
int3
push
ss
sub
in
lcall
dec
inc
push
inc
icebp
pushf
aas
xlat
fwait
lret
test
rorl
pop
cs
in
mov
fsts
mov
add
in
pop
out
xor
or
rolb
arpl
cmp
ficompl
adc
push
enter
sbb
lds
cmp
mov
fstp
les
ds
jmp
mov
outsl
stos
push
enter
and
and
cld
push
adc
or
dec
ja
mov
mov
je
push
rcr
mov
inc
testl
jge
and
jo
pop
std
fwait
call
call
ficoml
xchg
push
xor
mull
fwait
shl
jmp
mov
cmc
xchg
insb
jmp
fcmovnu
cmp
call
xchg
xchg
fcomps
pop
sbb
or
arpl
xor
xchg
repz
ljmp
mov
lock
dec
insl
or
push
lods
mov
ret
out
pop
nop
dec
fmul
xchg
icebp
adc
cmpsl
ret
fwait
jno
mov
xchg
sub
ja
xchg
fwait
and
cmp
sub
dec
leave
popa
lahf
hlt
mov
je
add
add
es
out
xchg
les
andl
mov
adc
or
pushf
adc
repz
add
clc
adc
scas
scas
ret
inc
push
sar
inc
push
xchg
push
push
and
aam
dec
sbb
in
shl
jae
in
jae
fcomps
jge
xchg
popf
and
out
mov
sarl
fs
nop
repnz
repz
in
loopne
mov
sti
mov
pushf
pop
lret
xor
clc
mov
ret
dec
aam
loop
in
cs
push
mov
jp
stos
xchg
pop
js
xor
out
pop
xor
scas
add
cmp
jl
adc
into
imul
fldl
insl
pop
ds
and
jbe
mov
rorl
pushf
lret
and
out
lds
data16
sub
xchg
in
sub
sub
sbb
or
in
pop
fwait
cmp
adc
mov
arpl
fucomi
aaa
imul
fisubl
leave
pop
cmc
roll
jne
and
cmp
pop
ret
jbe
jnp
das
repz
push
popf
stos
cmp
sarb
mov
pushf
div
jmp
xlat
pop
popa
pop
adc
mov
sub
mov
je
mov
sub
das
and
adc
push
inc
jecxz
mov
in
testl
fs
shll
loop
je
and
pop
mov
dec
adc
aas
dec
rcrl
xor
xor
and
jle
aam
add
jnp,pt
mov
adc
outsl
pop
aam
insb
jl
loop
je
pushf
adc
iret
dec
inc
pop
ficoms
jmp
pop
arpl
jle
lret
or
out
arpl
mov
cmp
add
lock
imull
ljmp
jnp
pop
mov
gs
test
shrl
jge
stc
add
dec
push
dec
les
aad
jb
insl
int3
or
jecxz
push
dec
imul
stos
and
scas
in
push
xlat
dec
dec
cmp
mov
adc
xchg
and
sub
or
push
jecxz
arpl
inc
ret
add
jl
mov
cmp
enter
fadds
movsl
jae
push
in
test
inc
cmpsl
and
ss
lods
cmc
sti
aaa
mov
pushf
cmpsl
cmp
int
xchg
mov
leave
imul
jnp
inc
fstpl
cmpsl
xchg
ret
and
push
push
into
mov
jmp
cwtl
push
xor
popa
xchg
dec
jecxz
jp
push
test
stos
push
mov
repz
cmp
movsl
out
mov
cmp
or
mov
sub
daa
or
dec
dec
mov
inc
or
and
movsb
dec
inc
lock
icebp
shl
mov
in
cmp
adc
test
scas
lods
aas
int
pop
pusha
adc
mov
sahf
test
push
rolb
push
mov
aas
sbb
test
push
cmp
mov
iret
pop
stos
jae
xor
mov
stos
iret
lret
out
jnp
xor
fisttpl
adc
pop
jecxz
jl
dec
ret
lahf
pop
movsl
dec
je
or
cwtl
ss
in
dec
repnz
xchg
dec
inc
test
mov
pop
push
std
sub
ss
dec
sbb
pop
adc
xchg
xor
or
mov
insl
mov
mov
cltd
nop
add
sahf
push
add
xchg
cmpsb
cmp
dec
subb
xor
add
dec
aad
and
fistps
iret
cltd
push
xor
popa
lret
mov
mov
out
loop
inc
pop
js
pusha
jae
popa
je
mov
cmp
and
stos
je
xlat
mov
out
cmpsl
jge
std
adc
jge
je
dec
xor
jle
cmp
movsl
stos
shrb
push
ret
pmullw
xor
arpl
mov
divl
pop
roll
xor
jl
cmp
push
test
cmpsl
ret
xchg
xor
cmp
or
addr16
lcall
aas
dec
jae
scas
mov
test
push
and
pop
sub
adc
mov
push
and
ja
es
cmp
mov
mov
mov
jae
jnp
adc
sbb
icebp
pop
orl
test
mov
enter
sub
add
cmp
mov
pusha
pusha
ja
popf
sbb
add
stc
or
dec
addb
jecxz
in
mov
xor
cmpsl
repnz
test
jb
stos
into
mov
xchg
cmp
add
jne
dec
xor
leave
lahf
pop
pusha
lret
cs
popf
jle
dec
cmc
popa
repnz
jae
out
push
cmpl
xor
testb
out
mov
mov
push
xchg
sbb
int3
xor
enter
aad
xchg
popa
jp
popf
aam
sub
inc
sti
lcall
cs
fstpt
pop
xor
inc
pusha
subb
sbb
and
das
dec
lds
jle
or
push
jg
rcl
jne
jle
mov
xor
pushf
out
xchg
popf
jo
sbb
mov
mov
fstps
mov
cltd
dec
push
cmp
mov
adc
cmp
push
ret
test
rorl
jle
sarb
loope
fldt
mov
add
in
push
adc
adc
inc
cmpsl
inc
sub
sub
mov
mov
mov
mov
push
test
test
rcrb
into
and
pop
lods
imul
out
int
inc
xchg
les
xchg
call
arpl
cld
ret
inc
jae
cmc
sbb
orb
or
subl
dec
sub
jnp
ret
out
xor
push
xor
dec
imul
sbb
xchg
in
push
js
aaa
pop
jmp
fcmovu
rep
jecxz
ss
xchg
xchg
rcrb
cmp
jno
mov
loop
lds
sbb
pusha
xor
mov
push
insl
push
iret
add
lret
mov
mov
loope
shlb
or
imulb
rolb
test
in
fwait
mov
sub
push
dec
mov
sbb
in
jp
adc
int3
xlat
cmp
dec
mov
mov
pop
jl
xorl
adcb
andb
cmc
mov
icebp
jne
dec
push
in
icebp
xor
sbb
or
push
insb
hlt
mov
mov
lods
adc
dec
stos
sti
mov
sub
cmp
mov
mov
dec
stos
cmp
enter
repz
push
pop
cld
outsb
mov
mov
data16
outsl
pushf
dec
cmp
and
pop
test
aad
fcomip
and
pusha
shlb
out
arpl
push
and
inc
fildl
mov
scas
fnsave
pop
sub
adc
inc
sub
mov
pop
pop
roll
dec
lahf
mov
dec
dec
loope
in
imul
mov
ljmp
add
js
or
push
adc
inc
mov
jp
xchg
jns
mov
push
cmp
sahf
movsb
ret
popl
stc
inc
out
leave
jne
loope
pop
scas
and
idivl
movsb
or
testl
cmp
jmp
lcall
adc
dec
sbb
movsl
insl
mov
sub
in
out
nop
ret
dec
push
inc
push
push
inc
xlat
in
repnz
inc
inc
in
xchg
pop
mov
imul
xchg
xchg
and
or
fcmovu
xor
pop
dec
xchg
in
rolb
add
hlt
push
negl
jns
mov
rcll
outsl
mov
test
and
sbb
idivb
andl
mov
ficomps
mov
cmp
mov
in
mov
cmp
les
leave
lds
or
mov
fiaddl
out
and
loope,pn
adc
fnstcw
std
adc
xchg
xlat
sub
add
mov
pushf
outsb
roll
sbb
loope
inc
inc
pop
fiadds
sahf
int3
fcompl
sbb
clc
cs
inc
jp
aaa
pop
mov
or
lds
shlb
jae
and
jl
add
int
inc
loope
sub
repnz
jno
lcall
mov
add
cld
push
or
inc
add
jbe
fcmove
pop
mov
jge
mov
pop
push
ja
inc
fldcw
insb
mov
push
test
sub
ret
test
stos
mov
pop
xchg
adc
add
ret
add
jns
or
int
lock
jecxz
and
mov
loopne
fimull
hlt
mov
dec
inc
lcall
mov
sbb
aaa
lahf
outsb
xchg
add
sbb
imul
dec
std
pop
hlt
jle
icebp
fsub
push
pop
adc
xchg
mov
xlat
popa
ss
sub
aam
outsl
push
dec
arpl
pop
xor
popf
ljmp
mov
insb
scas
popf
mov
inc
test
stos
mov
cmp
insb
sti
mov
inc
or
cmp
or
sbb
mov
sub
sbb
arpl
push
sarb
adc
dec
jbe
icebp
hlt
imul
xchg
jmp
sbb
repz
jne
cmpsl
popa
inc
add
sbb
and
cmp
mov
xor
pop
mov
ljmp
mov
das
and
cmp
inc
sbb
lds
pop
insl
push
daa
pop
mov
inc
fbld
rolb
and
les
mov
scas
bnd
cmp
pop
int3
fisubl
imul
cmc
loope
pop
mov
ret
jb
push
lock
test
jbe
cltd
clc
lret
jecxz
cmpb
fxch
lods
pop
in
addb
rclb
push
in
mov
pop
andb
sbb
mov
or
add
mov
xor
pop
ss
dec
sbb
add
rorb
fldt
dec
mov
adc
cmpsl
fwait
dec
call
enter
jnp
test
sub
jnp
jbe
in
icebp
addb
outsb
or
push
inc
sbb
pop
dec
and
cmp
sahf
xchg
cs
dec
in
mov
xor
ret
inc
fistpl
push
fwait
jl
loopne
sbb
add
inc
sub
adc
outsb
push
jb
int3
fiaddl
add
andl
pop
sbbl
rol
sahf
mov
lods
cmp
sbb
nop
mov
daa
inc
or
dec
pmulhw
test
out
cld
mov
rolb
jae
test
mov
xor
jp
pop
cwtl
cmp
fcomps
insl
pop
das
loopne
mov
jns
jl
inc
cmc
lods
gs
lea
inc
shll
mov
out
sbb
lods
cmc
push
pop
leave
mov
data16
mov
mov
lahf
or
out
pop
mov
subl
leave
mov
ss
add
ja
mov
shll
fnstcw
xchg
movhps
lea
mov
inc
jmp
pop
mov
sub
sub
xor
cwtl
adc
mov
push
outsb
shlb
jge
icebp
push
test
stos
push
push
fdiv
cmp
out
push
xchg
jno
shll
xor
notl
jnp
ds
mov
dec
and
rcll
shrb
inc
xchg
repz
gs
jp
sahf
cmp
dec
cmp
daa
aas
adc
ss
mov
add
loope
add
cmp
and
ret
adc
std
shlb
mov
outsb
rol
or
insb
pushf
inc
mov
repnz
icebp
stc
pusha
add
insl
mov
lret
imulb
sub
cwtl
scas
xlat
js
add
iret
ret
fistpl
cli
repnz
dec
jmp
xchg
mov
xchg
imul
sub
fistps
cmpsb
mov
adc
push
xor
sub
push
mov
add
ret
sar
aam
movsl
xor
popf
mov
sub
cmp
xor
mov
dec
shlb
loope
into
pop
push
mov
mov
push
subl
out
fimull
mov
out
xor
lret
add
sub
push
inc
push
mov
outsb
or
mov
xor
dec
pop
hlt
call
lods
outsl
push
sbb
movb
xor
bound
xchg
add
nop
adc
dec
gs
pop
fbstp
dec
fs
jecxz
stc
mov
and
xchg
xchg
sub
sub
loope
xchg
and
push
imul
cmpsl
mov
jo
mov
fwait
out
enter
insl
lahf
fsub
cmc
out
or
or
jnp
xchg
sbb
int
mov
dec
int3
mov
mov
inc
sub
sbb
outsb
cmp
mov
lcall
lock
cmpsl
push
in
fisubrs
add
aaa
cld
outsl
pop
xchg
jp
insl
inc
rol
aas
popa
dec
jge
fnstcw
adc
popf
pop
sahf
jbe
sar
scas
push
fwait
add
gs
dec
mov
xchg
fwait
insl
mov
mov
ljmp
addl
pop
test
shrl
stc
cld
les
jbe
xchg
pop
jns
mov
or
sarb
ds
lahf
mov
fisttps
testl
mov
cmp
cmp
cmpl
aad
xor
fiadds
xchg
lcall
dec
mov
repnz
cmc
inc
pop
movsb
outsb
es
push
jnp
push
add
aad
xlat
mov
sub
add
inc
mov
ja
sbbb
xchg
adc
jg
inc
sub
xor
fdivl
stos
cmp
out
inc
aad
enter
xchg
sahf
inc
int
ja
or
or
fs
int3
and
roll
xor
mov
ljmp
xor
stc
sbbl
iret
popa
fdivrl
jmp
xchg
inc
xchg
shr
sti
das
mov
scas
loop
daa
mov
inc
jecxz
subl
jecxz
dec
mov
jo
out
jb
xchg
mov
in
popa
into
aaa
push
jb
push
jmp
into
rcrl
mov
insl
andl
rcll
std
movsb
hlt
test
loope
xchg
dec
fmuls
jmp
je
cmp
fwait
lret
scas
xchg
insl
and
mov
and
add
jne
popa
clc
insb
xor
cmc
insb
xor
mov
mov
inc
out
popf
iret
cmp
mov
ss
xchg
scas
xchg
and
fildl
inc
sti
subb
or
insl
scas
icebp
movsl
jae
mov
popa
or
xor
scas
cmp
dec
jne
cmp
push
jl
imul
mov
insb
inc
enter
mov
cmp
rclb
dec
push
sbb
outsl
inc
push
inc
sti
and
pop
jmp
add
sub
xchg
imul
push
sahf
inc
mov
dec
jo
pop
stc
cs
and
les
ret
pop
mov
and
arpl
mov
mov
jnp
adc
int
mov
sahf
xor
pop
pop
add
ret
push
sbb
and
sti
test
mov
cmp
mov
xchg
add
int3
pusha
out
dec
jo
lods
xchg
and
adc
ret
or
xchg
add
decb
sub
movsb
nopl
das
sub
cmp
iret
in
mov
cmpsl
adc
mov
scas
les
lods
adc
fwait
cmpsl
ljmp
or
jl
xor
imul
add
add
mov
fdivrs
shlb
push
mov
xchg
out
ljmp
sbb
add
lods
jb
cld
xchg
mov
filds
addb
sbb
aaa
test
stos
enter
fiadds
lds
cmpl
in
cwtl
in
cmpsb
or
sbb
dec
mov
clc
lods
dec
cltd
test
push
pop
push
mov
rcrl
lret
push
lds
out
iret
int
dec
mov
out
aam
xor
addr16
lods
and
pop
mov
mov
pop
loopne
in
lock
pop
pop
aad
sbb
lahf
fmull
mov
cmp
bnd
sub
faddl
stos
repnz
andb
in
outsb
inc
push
mov
jecxz
pop
dec
imul
xor
rolb
inc
sbb
add
dec
scas
pop
xchg
iret
or
stc
adc
out
mov
pop
mov
mov
adc
out
sti
pop
dec
fcomps
push
test
and
das
repz
imul
cmp
int3
test
sarb
xchg
mov
adc
pop
sbb
cmp
fcoms
sahf
xor
push
mov
jno
je
xchg
dec
in
mov
hlt
lods
es
xchg
jno
vpcomuq
dec
test
fninit
shrl
push
mov
sar
push
inc
cwtl
or
jne
adc
fs
and
add
jg
fcompl
xchg
push
inc
nop
push
cmp
testb
mov
cmp
in
inc
imul
cmp
nop
fcoml
mov
adc
pop
loope
push
daa
cmc
mov
orb
adc
dec
fsqrt
std
and
xchg
rcr
sbb
pop
xchg
pushf
in
pushf
or
mov
in
jne
rep
enter
cmpsb
fildl
sahf
xor
loop
cmp
rorb
rclb
jnp
add
and
dec
fcmovnu
pop
push
packssdw
adc
popf
movsb
pop
push
les
ja
outsb
push
cmp
popa
add
dec
stos
mov
sub
sti
jge
xor
mov
lea
hlt
xor
sbb
out
or
mov
into
aas
repz
cmp
mov
jle
inc
xchg
add
mov
loope,pn
lahf
ret
rorl
mov
je
fs
pusha
aaa
ret
in
or
fldl
push
push
mov
sub
xchg
cmpsl
jb
mov
pop
adc
and
enter
push
icebp
mov
fisubl
in
cmp
mov
fdivs
jnp
out
mov
rcrl
aaa
fsubp
pop
mov
jge
dec
gs
inc
insb
inc
jle
cs
xor
dec
push
add
in
pop
data16
add
jb
sub
imul
inc
mov
cs
mov
insl
cld
movb
inc
sub
add
cmpsl
fldl
adcb
jae
dec
mov
and
test
loopne
daa
test
mov
loop
adc
add
xchg
pop
and
sub
adcl
xchg
or
decl
ret
and
inc
or
leave
add
aad
scas
push
sti
mov
mov
iret
mov
les
push
imul
cmp
fldl
add
mov
jmp
dec
std
outsl
sar
ss
mov
andl
xchg
sahf
aad
pop
lea
fwait
call
inc
adc
push
dec
lcall
dec
lret
cli
rorb
jns
divb
mov
and
push
mov
ljmp
arpl
add
mov
pop
pop
sti
xchg
xor
scas
push
icebp
ljmp
pop
mov
mov
sub
fldt
sbb
popf
mov
xor
pop
mov
sub
int
lcall
cmpsb
sbb
sbb
mov
test
jbe
jge
cmpsb
mov
cli
inc
push
fisubs
nop
mov
xchg
pop
jno
scas
pop
and
mov
adc
fildl
out
mov
cmp
and
test
movsl
loope
jae
pushf
jl
cmp
lds
out
scas
cmpsl
adc
iret
in
ficoml
xor
sub
fidivrl
sub
push
and
jle
add
dec
jno
inc
shl
imul
xchg
push
xor
mov
lcall
cmc
dec
push
sbb
ret
fnsave
pop
sub
or
std
fldenv
pushf
jge
push
pop
jle
notb
jb
pop
pushf
pushf
push
pop
insl
lret
xor
aam
mov
lds
cwtl
inc
xchg
andl
movsb
xlat
inc
lahf
pushf
rcll
scas
jbe
nop
out
int3
icebp
sbb
or
ja
push
fisttps
adc
or
push
sbb
and
jb
leave
ds
fcmovnu
dec
jno
das
scas
mov
mov
cli
pusha
sahf
or
adc
inc
and
nop
or
cld
out
mov
xchg
lret
fs
inc
mov
xchg
pop
stc
xchg
lret
ds
or
xlat
cmpsb
imul
push
xor
jae
adc
xchg
mov
orl
es
pop
lea
cltd
push
mov
mov
push
jp
cmpb
imul
subb
inc
outsl
sub
xchg
cmp
push
sbb
inc
rcr
pop
out
pop
sub
shrl
xchg
or
mov
mov
mov
adc
mov
sti
inc
pusha
in
mov
scas
cmp
fcompl
cli
aad
pop
repz
pop
mov
cmpsl
xchg
inc
dec
cmp
in
ret
outsb
popf
xchg
lcall
add
jnp
cmc
jp
aad
inc
out
dec
cli
out
ljmp
in
mov
aam
lods
xchg
out
pop
sub
mov
jo
sub
sub
mov
dec
push
mov
adc
jge
dec
dec
ljmp
mov
xor
int
sbb
je
loope
arpl
jne
mov
ss
aas
adc
push
imulb
iret
cmp
outsl
sti
test
and
lret
fcoms
int3
pop
addr16
inc
scas
adc
xor
adc
add
sbb
and
sub
ret
stos
or
jnp
je
dec
mov
gs
mov
aaa
and
dec
sarl
sub
bswap
out
xchg
loop
and
std
lds
add
sub
into
push
cmc
jl
lahf
push
lock
mov
test
mov
mov
nop
repz
jge
subb
sahf
mov
jne
lock
addl
adc
push
xchg
push
hlt
push
negl
rcr
lahf
dec
test
xor
jbe
pushf
add
pop
mov
jl
dec
aaa
aam
test
ret
dec
std
mov
int
inc
int3
test
outsb
out
dec
mov
inc
pop
into
shrb
pop
sbb
mov
shrl
aad
mov
pop
lret
add
rcrl
mov
orb
sub
push
daa
pop
daa
addr16
xchg
jmp
les
push
mov
sbb
orb
xor
xchg
and
xchg
xor
jae
out
out
test
mov
in
push
call
daa
or
loopne
out
add
leave
aad
dec
stos
push
shl
js
sbb
es
pop
add
xor
bound
inc
movsl
js
loop
shlb
filds
sbb
mov
cmp
js
dec
out
jmp
ja
shll
mov
nop
or
clc
adc
xchg
sbb
pop
stc
lret
out
mov
clc
cmp
jns
test
cs
stc
mov
out
fnstsw
fldenv
mov
std
inc
push
iret
inc
pop
shl
sbb
lea
ljmp
mov
out
add
lds
xlat
daa
cmp
mov
pop
nop
lock
push
fs
dec
xor
ret
cmp
mov
hlt
push
shrl
sbb
call
gs
sbb
mov
push
xor
lock
inc
repnz
mov
mov
es
out
fisttps
nop
leave
cmp
test
aad
fmull
jbe
mov
mov
or
cmp
sti
outsl
stos
jmp
cmp
add
push
popa
sub
inc
orb
push
mov
or
jno
cli
in
mov
cmp
dec
fs
dec
inc
cmp
fstps
je
xor
enter
mov
add
jo
add
int3
lds
sub
mov
dec
xchg
push
mov
xchg
pop
lock
in
sahf
hlt
dec
xor
or
jb
lods
or
pop
pop
insl
sbb
arpl
fucom
fs
shl
rcrl
pop
aas
aas
cmp
sarb
adcl
test
rolb
pop
fnstcw
pop
jb
iret
movsb
mov
xchg
dec
xchg
hlt
push
cmp
data16
into
mov
les
test
dec
jg
call
int3
arpl
aam
lahf
add
mov
fcmovnu
push
fcmove
or
cs
data16
mov
and
or
mov
cmc
pop
cmp
adc
nopl
bound
add
jae
mov
insl
xchg
push
enter
xor
xor
push
mov
and
jne
jle
movsb
shlb
pop
ret
jle
fnstenv
mov
xor
jne
add
pop
mov
pushf
sbb
iret
mov
bound
outsl
mov
pop
out
in
rcll
pop
jmp
push
nop
aam
jl
jb
jns
mov
mov
adc
xchg
push
outsl
rcll
and
lods
popf
mov
repz
lahf
xchg
test
sbb
ds
push
and
pop
sub
ret
jnp
add
dec
insb
cmp
mov
inc
jno
mov
pop
adc
dec
inc
shl
and
aas
pop
idiv
mov
das
ret
add
push
sub
xchg
cmp
adc
lods
sbb
sbb
mov
pop
jo
dec
mov
dec
jl
fmuls
pop
js
xorb
xor
loop
sbb
icebp
dec
jae
js
push
clc
add
leave
inc
fsubrl
test
mov
stos
push
push
xor
shll
push
ds
std
das
sub
inc
stos
inc
sarb
scas
adc
sarb
rclb
lret
xor
add
jmp
mov
or
fidivs
imul
inc
push
rorl
in
lods
add
xchg
xor
cmpsl
or
cmpsb
xor
xor
mov
jnp
shlb
stc
in
popa
movsl
and
mov
sti
loopne
cmp
ljmpw
shl
add
xchg
inc
xor
aas
sarl
hlt
cs
scas
dec
cwtl
jb
daa
push
push
sbb
repnz
les
add
and
mov
adc
loope
push
pop
push
jecxz
cmp
enter
fwait
sbb
mov
cmp
xchg
inc
bound
scas
inc
cmp
call
adc
dec
mov
into
int
pop
mov
in
pop
dec
mov
fwait
daa
add
jo
pop
test
lea
out
add
xchg
push
fucomi
loopne
lock
adc
mov
les
std
jnp
push
cmp
xchg
push
cmp
out
push
fdiv
sti
dec
mov
inc
mov
add
pusha
mov
pop
sbb
pop
xchg
lcall
icebp
stos
inc
mov
sub
mov
in
lds
sub
cmp
or
mov
push
repz
sub
ss
dec
jmp
push
test
ja
sbb
pop
adc
add
jo
jecxz
loop
mov
arpl
dec
lcall
push
xchg
test
rol
pop
push
sbbl
xlat
jmp
imul
lods
std
outsl
add
icebp
xchg
jl
cmp
lea
aaa
sti
push
imul
out
bound
adc
xor
mov
test
mov
push
jno
sbb
sbb
in
mov
dec
insl
jle
addr16
mov
mov
dec
jle
dec
pop
xchg
inc
scas
sub
adc
jl
xchg
push
stc
xchg
adc
insl
sarl
sti
pushf
jb
mov
addr16
fucomp
pop
sub
jne
shr
ds
out
sub
filds
cld
stos
cmp
jmp
hlt
into
test
mov
out
in
lock
in
add
jae
or
sub
pushf
ds
dec
pop
fnstcw
stos
dec
mov
xchg
test
jmp
pop
pop
cli
jo
sub
aad
push
cli
xor
rep
in
jbe
lock
cmpb
push
test
arpl
mov
and
lret
xor
repnz
in
outsb
and
insb
scas
sbb
movsl
addr16
pop
pop
cltd
cltd
ret
aas
arpl
mov
jp
pop
cltd
xor
adc
rorl
fnsave
mov
test
mov
scas
movsb
mov
fwait
mulb
mov
sbb
xchg
push
ja
dec
mov
loop
dec
mov
mov
inc
scas
xchg
add
mov
fwait
inc
popf
mov
pop
mov
dec
xlat
xchg
push
repnz
rcll
xchg
sub
cwtl
pop
nop
test
xor
outsb
jp
mov
mov
dec
mov
mov
ret
jecxz
xchg
fsubrl
inc
pop
cmp
fidivrl
dec
test
dec
or
mov
mov
mov
aad
cmpsb
xchg
push
andb
sarl
fwait
xchg
push
adc
jno
mov
aam
cld
out
xor
fcmovne
dec
aad
adc
push
arpl
imul
icebp
pop
add
int3
test
dec
pop
add
lahf
aad
ljmp
mov
stos
mov
sbb
sub
popf
sbbl
aaa
fldl
jl
lret
ds
sti
or
push
pop
xchg
fsts
inc
cwtd
dec
mov
mov
or
cmp
jmp
sub
imul
or
jg
scas
mov
lahf
out
clc
mov
data16
test
xor
and
shlb
xor
add
mov
jne
jb
pop
roll
inc
sbbb
jge
or
or
std
cs
mov
out
das
test
out
outsb
push
insb
mov
pop
jg
enter
ret
pop
xor
gs
mov
mov
push
arpl
xchg
pusha
lock
pop
test
push
mov
push
xor
mov
adc
ss
in
sahf
xchg
jno
ror
jmp
cmovle
pop
and
cmc
sub
mov
insl
int3
test
mov
stos
sbb
push
ss
lds
jle
repnz
in
pusha
je
fstpt
sub
dec
cmp
hlt
pop
mov
push
jne
pushf
xor
clc
xor
or
xor
notb
mov
adcb
inc
int3
pop
adc
mov
add
push
loop
faddl
ss
dec
ljmp
sbb
sbb
mov
mov
sub
addr16
out
test
jns
cmpsl
je
add
mov
out
dec
cmpsl
repnz
loope
inc
js
and
sbb
cmp
loope
pop
jo
movsb
js
cmpsl
loope
fisttpl
jne
mov
cwtl
adc
or
mov
adc
enterw
cwtl
mov
lret
rcr
jmp
arpl
je
cmp
push
push
jle
gs
shll
pop
loop
inc
test
cmp
dec
adc
lret
std
in
test
jle
lock
push
icebp
pop
test
jae
incl
sub
pop
mov
arpl
adc
sbb
fists
repnz
mov
push
inc
mov
inc
adc
and
in
adc
push
shl
push
pop
jp
call
lods
dec
mov
shrb
loope
test
sti
ljmp
mov
rcrb
imul
and
cmpsb
adc
lea
decb
and
frstor
lock
lods
sbb
in
repnz
mov
dec
dec
and
mov
cmp
pushl
jp
pop
xor
pop
gs
pop
mov
mov
cmpsl
mov
add
pushf
or
loope
out
inc
sbb
lcall
jns
mov
loopne
je
mov
adc
jmp
cmp
add
xchg
dec
and
xchg
sub
lock
orl
clc
inc
pop
push
pop
mov
rclb
mov
or
dec
lahf
mov
xor
movsl
inc
out
add
cltd
inc
add
xor
sub
insl
dec
in
stc
aas
pusha
jecxz
xchg
arpl
inc
movsb
rclb
insb
loopne
mov
adc
das
pop
mov
rdseed
sbbl
cmpsb
cmp
adc
fwait
mov
sub
cmp
and
adc
mov
aas
push
mov
fcmovnu
std
shlb
inc
repz
inc
hlt
loope
scas
dec
and
jbe
add
jne
and
jb
fwait
xor
into
jbe
xchg
mov
dec
call
mov
mov
xchg
iret
imul
test
pushf
and
xchg
mov
push
mov
mov
ret
mull
jae
arpl
push
pushf
push
jmp
pop
pop
or
cwtl
dec
add
adc
imul
pop
adcb
ret
inc
ret
push
adc
and
hlt
jmp
sub
and
fs
pop
xor
xor
es
je
xchg
stc
xchg
sub
cmp
mov
adc
inc
push
push
mov
jne
call
pop
mov
idivb
gs
out
sbb
cmpsl
sub
mov
sub
fldcw
hlt
testb
and
cmp
scas
test
inc
xchg
in
dec
sub
cmp
insb
nop
insb
hlt
inc
fucomip
loope
jg
add
das
bound
inc
mov
mov
loopnew
xor
xchg
fwait
cmpsl
fildll
push
push
mov
push
lods
divl
inc
and
sbb
mov
pop
out
test
int3
xchg
leave
inc
xor
dec
daa
adc
and
inc
push
inc
repz
shlb
int
mov
sarb
in
pop
inc
fnstsw
push
psrad
addr16
addr16
pop
dec
mov
bt
cmc
pushf
pushl
xor
push
cld
push
sahf
push
in
repnz
dec
or
fs
sarl
and
lahf
nop
lea
aad
shl
mov
xor
js
mov
mov
pop
fcoml
jmp
push
xchg
jmp
xchg
cli
imul
mov
push
mov
fistpl
insb
insb
cmpsl
out
lea
cmp
xchg
mov
jp
sbb
adcl
dec
into
xchg
loop
dec
popa
dec
sbbl
adc
stos
jge
push
dec
add
call
decb
push
testl
push
dec
add
idivl
push
cmp
adc
pop
jg
inc
jg
mov
repnz
mov
pushf
pop
scas
xchg
mov
xor
in
cmp
xchg
in
sbb
out
enter
jl
in
imul
mov
cwtl
mov
mov
dec
and
push
xchg
pop
push
jge
cli
mov
enter
pop
push
and
mov
push
pop
sbb
xor
push
or
push
push
cmc
stos
dec
stc
test
nop
jg
fiaddl
add
mov
lds
xchg
jne
sub
cwtl
fcmovbe
loop
inc
rorb
add
into
xor
sbbb
add
add
cmp
dec
movsb
ja
fistpll
in
test
adc
cwtl
cmp
push
idivb
mov
sub
cmp
and
in
lahf
loop
jo
cmc
das
rcrl
cmp
test
shrl
mov
and
lcall
add
or
ljmp
pushf
push
in
adc
mov
dec
mov
mov
xchg
cmp
cmpl
test
cmpsl
pop
cmpsb
lret
push
pop
andb
ds
xor
jge
xor
inc
sarb
dec
sub
mov
and
out
hlt
ljmp
sarl
adc
and
and
jae
repnz
es
lahf
push
enter
xlat
aad
cmp
pop
lahf
shl
xor
mov
fstpt
ljmp
jg
pop
mov
inc
rcr
push
pop
in
adc
push
push
cld
mov
icebp
lock
aam
jne
dec
cld
mov
sbb
or
loopne
in
cmp
dec
fsubrs
dec
fbld
arpl
xor
xchg
fstps
repnz
xchg
and
jns
repz
mov
jno
out
cltd
hlt
out
sbb
ja
xchg
ret
xchg
les
xchg
fistpl
enter
mov
or
nop
inc
jae
test
and
mov
cld
int3
mov
movsl
dec
sub
mov
jmp
adc
pop
outsb
pop
mov
jb,pn
xchg
aas
jne
shll
addr16
inc
outsb
loope
xchg
loopne
inc
ja
and
xor
test
out
or
mov
test
sarl
ds
arpl
mov
int3
ficoms
mov
cmp
aam
xchg
cmp
scas
inc
push
stc
jecxz
pusha
push
leave
push
pop
inc
inc
ret
mov
cmp
cmp
fdiv
loope
inc
add
push
sub
aam
push
cmpsb
stos
scas
and
jge
or
jo
add
mov
sub
repz
dec
adc
jl
jo
push
jae
fcomps
nop
in
mov
popa
dec
inc
inc
fstl
ss
cmpsl
push
xchg
adc
inc
test
cmp
testb
ljmp
adc
mov
inc
push
rcr
repnz
aas
andl
xchg
jecxz
dec
or
sub
nop
pop
mov
sbb
ret
sarl
lcall
out
pop
cmpsb
mov
cli
sahf
jg
mov
jno
cli
movsl
addr16
mov
dec
aam
lea
dec
xchg
ja
or
mov
add
int
add
movsb
dec
aaa
sub
xchg
jbe
std
add
mov
mov
mov
iret
jae
into
ret
or
or
movsb
push
xor
lahf
sub
popf
sbb
insl
jb
aas
dec
cli
push
mov
jecxz
hlt
aaa
fimuls
jnp
and
xchg
jnp
pop
sub
or
inc
sub
inc
jecxz
adc
shlb
stos
xchg
mov
dec
add
dec
aad
dec
xchg
pop
inc
inc
les
sbb
ret
in
jmp
cltd
push
jbe
shrl
outsl
lcall
addr16
or
arpl
aam
pusha
adcb
fwait
dec
mov
and
xor
lods
add
or
xor
int
pop
sar
int
jnp
repnz
mov
sub
push
add
sub
push
ja
xchg
add
sbb
xor
and
cmpsb
mov
mov
aam
movsl
in
and
fwait
sbb
push
sub
pop
cld
push
into
sub
fidivrs
push
ds
lahf
insb
inc
cld
mov
xor
loope
jbe
push
xchg
jne
sbb
dec
fwait
daa
das
jbe
repz
outsl
stos
add
cmp
es
cmpb
ja
fistps
jae
cmc
cld
leave
xchg
pop
mov
out
cmp
ljmp
stos
and
imul
mov
dec
mov
mov
xchg
jo
and
push
pushf
mov
dec
and
leave
push
and
xchg
es
adc
inc
stos
jno
in
xchg
mov
or
stos
or
mov
lods
rcrb
and
mov
push
jo
pop
repz
jne
mov
and
fcmovbe
xchg
and
fs
sub
or
nop
fists
jmp
repz
imul
or
mov
cmp
jnp
test
div
pop
rorb
cmpsb
lret
pop
into
aas
loop
test
nop
repnz
xor
popa
pushf
pop
test
fists
xchg
inc
push
cmc
jo
mov
pop
cmp
imul
cli
imul
sub
xchg
jmp
pop
mov
loop
adc
stc
adc
inc
loope
jl
leave
dec
sbb
add
ljmp
lock
into
jae
xchg
fs
sbb
sub
jb
push
adc
dec
mov
inc
aam
bndldx
stc
xchg
xor
xchg
mov
shlb
aaa
jns
pop
mov
test
xchg
or
xchg
call
faddl
fiadds
mov
dec
test
shll
xchg
add
loope
jne
insb
ficompl
cmpsb
dec
and
mov
cwtl
push
stos
fsubrl
into
dec
outsl
sub
pop
dec
jge
cmpsb
mov
cmp
add
push
fdivs
dec
inc
or
leave
out
push
imul
adc
cwtl
push
movsb
mov
pop
mov
sbb
fldl
xor
mov
xor
xor
mov
test
stc
decl
or
dec
or
insb
pop
in
and
mov
mov
cmpsb
mov
les
sub
insb
mov
or
cmp
inc
push
pop
mov
add
in
out
mov
jl
mov
inc
push
mov
mov
mov
fisttps
dec
sti
int
addr16
call
pop
or
sub
mov
add
int
mov
adc
popa
popa
int3
inc
imul
and
shll
pop
frstor
jb
mov
pop
xor
or
ret
jecxz
addr16
push
xchg
inc
cmp
jb
loopne
out
pushf
sbb
jns
test
sub
lock
in
sbb
andl
ss
mov
int3
outsl
sbb
inc
scas
test
out
mov
arpl
mov
test
pushf
outsl
jmp
fadd
aam
in
push
mov
lds
arpl
add
mov
rolb
out
mov
xor
push
test
jle
mov
lret
aas
xor
jbe
lods
or
push
xchg
repnz
jge
sbb
and
cs
and
out
xchg
or
das
lea
les
out
outsb
ja
out
cmp
das
repnz
stc
in
lret
repnz
or
dec
push
sbb
mov
pusha
insl
adc
inc
mov
jae
pop
xchg
xchg
lods
adc
adc
and
sub
push
insb
ljmp
outsl
mov
jne
push
dec
nop
popf
adc
push
in
bound
fsubr
xchg
mov
pop
imul
lods
test
data16
jle
clc
push
pop
ret
dec
cmp
loope
cli
int3
dec
or
mov
subl
ret
and
insl
neg
sar
jecxz
add
daa
faddl
and
gs
sbb
xor
stos
cli
push
mov
fnstsw
in
fucomp
push
adc
xchg
rorb
push
push
or
dec
nop
addr16
lcall
inc
adc
scas
fs
pop
lcall
fdivs
xor
mov
pop
lret
out
popf
test
fistl
imul
pop
movsb
push
or
push
push
adc
xchg
std
les
cli
sub
pop
js
into
in
push
xchg
movsb
or
xchg
or
mov
xchg
xchg
test
aam
mov
es
xchg
pop
jno
cld
add
icebp
mov
roll
jne
jg
adc
mov
jge
sub
std
out
mov
test
in
out
test
stos
jo
add
push
sahf
jns
das
test
outsb
fwait
mov
lea
jns
sub
mov
jo
mov
cld
xor
push
pop
xor
fisttpll
or
dec
cmp
pop
ret
roll
mov
pop
sbb
dec
and
sbb
inc
icebp
dec
icebp
push
jb
mov
std
shl
dec
pushl
enter
and
jno
mov
inc
shlb
dec
mov
dec
or
add
hlt
mov
adc
pop
mov
cmp
repnz
pop
or
lret
popf
jge
addb
fsubrs
lcall
mov
addr16
jb
push
sti
sahf
cmc
xor
push
push
test
xchg
std
fs
in
cmp
or
movsb
das
cmpsb
mov
xchg
jle
ja
ja
icebp
lea
and
jmp
addl
roll
push
hlt
xchg
mov
dec
fildl
les
in
inc
loope
ret
pop
lods
orl
jo
jp
mov
jl,pn
in
lret
daa
cmp
bnd
pusha
xlat
push
data16
xor
fcomps
add
pop
sar
push
dec
cmp
sbbb
std
loopnew
imul
cmc
imul
fwait
mov
leave
push
sahf
enter
push
push
rcl
fldcw
inc
rclb
ret
sub
push
out
rcll
insb
inc
scas
rcrl
mov
sbb
pop
sbb
aad
mov
repz
mov
mov
xchg
push
lret
xchg
mov
jb
cld
jp
cmp
cmpsb
ret
or
cmpsb
jle
sbb
mov
lea
jno
mov
shrb
mov
ret
sbb
mov
sarl
or
pmaddwd
or
repz
xchg
movsl
rcl
lods
jl
sbb
lods
loopne
jnp
lds
in
jl
inc
cmpsb
pop
mov
xchg
push
xchg
sub
dec
aad
and
push
or
mov
jmp
out
cmpsb
aas
in
dec
test
dec
adc
add
int3
daa
mov
xchg
lahf
pop
sub
and
test
xchg
xor
cmp
cmpsb
dec
sub
mov
rcll
jns
mov
loopne
cmp
rcll
mov
loopne
inc
xchg
dec
pop
sbb
pop
je
ss
dec
xchg
roll
xor
sbb
sahf
stos
adc
fs
ljmp
arpl
outsl
push
jg
sbb
jb
pop
adc
and
mov
in
cmpsl
out
or
aas
adc
nop
mov
mov
movsl
sub
pop
mov
clc
dec
xor
insl
lea
ret
lcall
and
cmp
mov
or
cmp
cmp
jnp
adc
jb
xchg
mov
jmp
es
daa
out
add
push
xlat
fadds
popa
cmp
ss
jne
sahf
call
sbb
or
inc
push
sahf
jp
insl
inc
dec
int3
ret
mov
adc
adc
pushf
jns
cmp
std
jp
add
and
xchg
mov
push
shrl
and
xchg
dec
mov
xchg
jp
dec
fwait
xchg
xchg
in
test
xchg
aad
jge
jo
or
idivb
ja
cmpsl
mov
sbb
cmp
or
fmuls
data16
mov
mov
shlb
cmc
out
xchg
xchg
jl
sbb
mov
cld
mov
mov
daa
cmp
js
push
stos
inc
jl
cli
sahf
adc
push
jl
lds
cmpsl
arpl
enter
xor
and
lcall
sahf
out
jecxz
mov
imul
dec
sbb
pop
les
and
jae
sub
xchg
subl
xchg
xchg
xor
sbb
call
cltd
cs
or
push
adc
imul
loopne
pop
xchg
je
int
cli
or
jno
iret
jo
rorl
sbb
xchg
pop
out
xchg
setle
loopne
shll
mov
in
mov
int
sbb
es
bound
sub
repnz
lock
mov
jno
jmp
test
jnp
pusha
ja
insl
les
stos
and
inc
mov
mov
mov
popa
add
jl
mov
popf
mov
mov
cld
xor
inc
es
add
test
cwtl
mov
dec
and
cwtl
loopne
lcall
push
in
in
adc
xchg
xchg
inc
js
push
pop
push
cmp
cmp
sub
popf
push
mov
rcrb
xchg
subb
int3
je
jmp
mov
push
bound
in
rcl
jecxz
lock
add
repnz
mov
in
sub
bound
adc
lods
cwtl
add
mov
xchg
sub
jle
and
lret
mov
idivb
mov
enter
cmp
jg
cmpsl
dec
dec
aaa
xchg
jg
adc
dec
repz
outsb
jne
mov
dec
inc
daa
cs
loope
add
mov
or
out
js
adc
divl
xor
mov
cmc
mov
loope
out
mov
xlat
jbe
dec
push
cli
lahf
push
test
sub
scas
lahf
imul
xchg
stos
cmp
and
mov
jle
xchg
in
mov
ljmp
mov
pop
cmpsl
mov
mov
adc
push
cmp
adc
xchg
lret
shrl
iret
pop
fimull
pushf
adc
hlt
clc
pusha
pop
aam
das
test
mov
fcomi
cmp
pusha
sahf
jnp
sahf
gs
cmp
mov
or
push
push
cmp
lea
adc
xchg
lcall
lods
les
repnz
hlt
push
pop
insl
jnp
out
push
js
xor
fwait
stc
inc
adc
das
movsb
or
fwait
out
fwait
jecxz
jle
push
cli
lret
nop
xchg
aas
lcall
test
pop
push
out
sbb
or
in
lret
pop
fnstsw
scas
imul
flds
das
stos
jo
test
xor
jle
push
cld
popa
lret
loopne
nop
pop
mov
rcrl
push
jmp
sbb
mov
cmpsb
jae
gs
mov
insb
mov
adc
cmp
fwait
mov
xchg
pop
or
push
jo
shll
and
loop
rol
and
pop
xchg
mov
adc
adc
xlat
dec
and
and
stc
outsb
and
notl
pop
mov
test
fchs
ret
mov
lret
inc
push
sbb
pop
mov
jg
out
jno
fldt
jl
xlat
dec
mov
mov
inc
sar
mov
filds
aaa
cmp
mov
rcr
add
rclb
in
push
pcmpgtd
pop
mov
inc
fistpl
inc
ds
rorl
xchg
xchg
test
outsl
popf
outsl
push
aaa
mov
sbb
dec
add
adc
dec
and
mov
push
in
pusha
insb
int
pop
add
sub
ret
or
add
mov
sbb
or
orb
sarb
test
daa
xor
nop
adc
xor
lret
xlat
push
dec
xchg
or
mov
push
mov
sbbb
inc
pushf
movsl
scas
out
add
insb
xchg
test
cld
adc
push
out
mov
mov
dec
scas
xchg
popa
or
jmp
push
mov
loope
mov
push
lods
leave
inc
add
push
add
push
out
in
sub
lea
les
fdivr
pusha
ljmp
lock
xor
fistpll
int
iret
mov
mov
js
jecxz
jmp
aad
int3
aad
stos
dec
lods
and
clc
pop
xor
loope
ffreep
cmp
fs
movl
xor
repz
fidivs
push
test
dec
push
lds
scas
out
in
mov
lods
imul
sbb
mov
negb
mov
pop
mov
in
cmp
insl
cmp
jle
popf
inc
mov
adc
divl
and
adc
mov
pop
subb
or
daa
dec
jb
iret
loope
or
inc
sti
or
xchg
mov
mov
iret
lock
or
cmp
cwtl
cmc
pushf
dec
mov
inc
fisubl
xor
arpl
inc
int3
aad
roll
cltd
cmp
fisttpll
mov
xlat
in
lcall
cmp
mov
fcmovb
or
add
idivb
add
adc
push
test
push
loopne
jno
aaa
mov
add
add
sbb
cld
dec
lods
xchg
jns
aam
mov
cmp
out
cli
cld
in
jns
or
and
lods
push
xor
mov
scas
xchg
loopne
xchg
mov
cmp
test
in
imul
xchg
enter
cmpsl
or
rcr
or
dec
rolb
xchg
ljmp
push
lods
xor
aad
aaa
push
and
ljmp
aad
xchg
imul
cmpsb
mov
imul
scas
icebp
movsl
lds
adc
inc
shlb
mov
pop
cwtl
mov
cli
xchg
decl
xlat
mov
stc
arpl
or
mov
sbbb
cmpsl
mov
push
movsb
pop
icebp
scas
cs
push
push
mov
pop
roll
xchg
testl
jmp
popl
xor
iret
mov
enter
inc
pushf
shrb
mov
xchg
xor
xor
add
dec
ret
mov
fistpl
sahf
sbb
out
sbb
addr16
cltd
jge
add
arpl
ljmp
negb
test
stos
dec
idiv
jle
je
pop
incb
sub
push
mov
jnp
xor
js
xor
fdivs
add
jne
pop
inc
pop
jl
cmp
movsl
lret
and
outsl
xchg
and
leave
cltd
fsubrs
inc
jp
lds
pop
cmc
and
sti
ja
sub
sbb
add
pop
outsl
popa
mov
xchg
addb
add
mov
adc
icebp
mov
jno
repnz
das
mov
and
pop
fs
sbb
add
dec
mov
bnd
cli
mov
aas
or
add
shld
push
leave
imul
lds
cmp
sub
jo
jo
jmp
fmuls
fdivrl
mov
sub
ss
frstor
ss
fdivr
icebp
xchg
lret
scas
ret
cmp
das
aad
and
into
dec
mov
jnp
adc
les
sahf
mov
fcmovne
jecxz
rcrb
pop
ljmp
mov
mov
or
call
push
test
test
cld
inc
push
cmpsb
inc
inc
faddp
lret
ja
adc
lods
lods
jp
lods
neg
mov
pop
cmpsb
fwait
std
push
cmp
test
popf
imul
jmp
cmp
inc
xor
sub
js
cmpb
fwait
or
fildll
xchg
adc
fldl
dec
mov
xchg
sub
jmp
mov
mov
xor
xchg
aaa
inc
and
ret
rcll
and
bound
sub
cmp
lcall
enter
call
nop
xchg
push
inc
inc
fsubr
pop
clc
ficomps
lret
xlat
ljmp
xchg
cmc
lcall
mov
cmp
push
xchg
punpckhdq
mov
and
sbb
arpl
add
movsb
sbb
pop
rorl
adc
jp
xchg
mov
loopne
push
cmp
addr16
cwtl
in
lcall
ja
push
enter
cmpsl
push
adc
or
mov
imul
sti
les
push
neg
mov
ss
rcrl
pop
jmp
testl
mov
mov
add
cli
pop
les
push
mov
add
sub
jmp
jg
cmc
insb
pop
bound
cmp
enter
movsb
shrb
rolb
add
test
inc
outsl
cmp
shlb
insb
xor
jecxz
loopne
pop
ret
mov
dec
or
pop
jns
xchg
mov
jp
repz
enter
xchg
out
jbe
mov
test
dec
adc
jo
and
mov
inc
adc
ja
fisubrs
cmp
ficompl
cmp
jl
xor
adc
sbb
lcall
or
test
jge
outsl
mov
aaa
movsl
and
scas
mov
mov
push
jge
or
stc
mov
xchg
add
fsubr
or
gs
sbb
inc
ljmp
mov
mov
adc
cmp
pop
lods
mov
int3
sbb
shll
adc
push
bound
bound
mov
testl
clc
insb
pop
jbe
into
cli
insb
and
test
or
xor
stc
rcrl
push
test
scas
fisttpl
add
lcall
inc
pop
xchg
popa
sbb
fistl
ret
push
xchg
or
aam
push
stos
push
jmp
mov
mov
shl
adc
lcall
cmp
push
into
or
cli
pop
mov
push
ret
cmpsl
test
mov
jmp
outsb
in
xchg
mov
ja
xor
jecxz
adc
fsubl
pop
and
cwtl
ja
inc
stos
xor
mov
test
test
push
xorl
rorb
cld
inc
sub
addr16
mov
incb
add
push
popf
xchg
pop
mov
mov
fwait
or
pop
test
in
imul
test
push
dec
clc
repnz
ja
push
mov
pop
sbb
lret
inc
xlat
fsub
ficompl
imul
lock
and
push
sbb
in
fsubrs
xor
arpl
mov
inc
or
mov
pop
clc
jns
adc
sbb
jg
repnz
lcall
jne
ror
jns
scas
popf
stos
inc
das
cmp
roll
cmc
jbe
fidivrs
in
pushf
nop
dec
fiaddl
pop
jg
rcl
sbb
inc
lods
push
shlb
add
sbb
jbe
incb
push
xor
gs
mov
xchg
jne,pn
cmp
mov
int3
cwtl
es
mov
and
sbb
js
fwait
inc
jge
inc
pop
gs
rcll
notl
js
xchg
mov
fmull
aas
sbb
xor
lods
cwtl
mov
jae
stc
push
adc
pop
cmp
rcr
sbb
mov
mov
dec
mov
adc
xorb
loop
push
add
pop
and
es
icebp
pop
mov
add
push
jge
sahf
scas
dec
jecxz
xor
inc
pop
or
cwtl
addl
mov
insl
sub
xchg
enter
out
mov
jne
jecxz
mov
rcrb
fbld
pop
fs
inc
add
fcoml
fstl
aas
into
pop
xchg
in
inc
sbb
lods
sbb
xor
push
push
sahf
mov
cmpsb
mov
dec
out
fwait
es
sub
adc
out
addr16
fs
or
je
push
xchg
push
mov
fs
fstpt
mov
jge
js
outsl
shrb
es
dec
dec
rcrl
arpl
out
cmpsl
sahf
inc
cmp
mov
mov
outsb
dec
cmp
push
lock
aam
mov
push
cmp
outsl
sbb
xor
stc
jg
popf
dec
lret
sbb
mov
push
xchg
dec
test
int3
insb
add
jp
ljmp
jg
into
push
stc
dec
add
dec
cs
subb
pop
push
inc
fwait
cli
push
aaa
jp
loop
movaps
jb
push
inc
xchg
mov
fcoml
inc
pop
std
xchg
mov
scas
notb
adc
add
outsl
in
aas
sti
adcl
dec
js
das
push
imul
sbb
add
scas
incl
testb
push
lock
xchg
scas
dec
push
fidivs
jo
mov
mov
ss
repnz
adc
dec
enter
and
sbb
cmp
xor
aas
adc
inc
mov
test
jecxz
int
dec
xor
add
mov
in
and
fiaddl
cli
push
jne
sbb
pop
mov
frstor
loopne
iret
add
aam
pop
mov
rorb
negb
int
mov
xchg
adc
mov
lcall
inc
inc
test
test
dec
pop
mov
push
cmpsb
int
stos
sub
inc
jge
xlat
pop
jnp
adc
bnd
sub
addb
xchg
dec
jge
or
dec
add
mov
lea
fcom
jns
pop
int3
loope
pop
mov
inc
mov
mov
fsubl
cltd
add
ss
sub
cs
pop
ret
imul
adc
das
insl
push
aaa
or
mov
jne
push
lods
ret
cmpsl
ret
or
data16
fidivrl
jp
mov
adc
bound
das
movsb
inc
lret
sti
hlt
inc
xchg
lret
repnz
jecxz
imul
and
scas
mov
and
sahf
ja
pop
loopne
jne
cmpsl
push
nop
ret
popaw
stos
mov
fisttpl
shlb
mov
push
vmwrite
dec
ds
sbb
xchg
lods
fcmovb
mov
fsubrl
popf
sub
popf
push
pop
push
sbb
shrb
pop
inc
std
xor
shll
scas
xchg
lods
mov
in
int
mov
push
lods
xor
xlat
inc
or
lods
mov
xlat
cltd
bound
and
add
xchg
push
mov
stc
fisubrl
incl
shrb
rcr
repnz
inc
add
inc
pusha
jl
push
out
iret
xor
fsts
rorb
cmp
add
jle
aaa
inc
sbb
addr16
lods
repz
in
xor
xchg
flds
adcb
pop
pop
push
outsl
xchg
mov
es
out
arpl
ret
imul
add
jecxz
sbb
xor
xchg
xchg
rorl
inc
add
and
mov
out
ja
fwait
or
push
hlt
aas
les
sarb
jle
outsl
xchg
push
cs
inc
inc
test
cld
insl
loope
cmp
inc
movsl
push
add
dec
fisttpl
lahf
xlat
cmpsl
lcall
stos
stos
lahf
cmp
xor
sub
lock
mov
pop
sub
jae
xchg
rcr
push
push
inc
xchg
mov
xchg
lea
test
test
pop
lret
xor
dec
and
dec
insb
or
mov
out
repz
dec
jns
mov
xchg
xorl
push
jmp
ficoms
adc
jo
push
push
pop
mov
clc
pop
movsl
rcrl
sub
inc
cmp
mov
push
mov
mov
pop
fnstsw
mov
sub
out
xchg
fstps
enter
mov
and
push
xchg
add
test
mov
add
imul
cltd
sub
sbb
push
pushf
sti
test
and
push
xchg
or
xor
add
cmp
pop
pop
call
cld
jge
fstpt
mov
jg
cmp
and
xchg
sbb
jnp
loope
fs
jbe
aam
jbe
xor
jge
push
jae
jo
ja
ljmp
pop
add
in
xor
iret
mov
mov
xchg
inc
lret
jo
cmc
incb
push
repnz
sbb
mov
decb
inc
int
cmpsb
pusha
leave
sbb
scas
mov
mov
pop
sbb
jp
mov
lds
xchg
call
leave
imul
outsb
push
push
hlt
imul
sub
mov
xor
jb
lods
fnsave
inc
test
or
cmp
stc
adc
add
add
outsb
jg
xor
sti
xor
cli
mov
std
cs
mov
mov
sub
outsb
lret
fcmovnb
rolb
fsubs
push
call
push
scas
imull
xlat
cli
xchg
lret
fdiv
ljmp
mov
lods
jge
jnp
not
push
in
dec
shll
ret
lcall
out
insl
jb
adc
adc
push
mov
inc
and
pop
repnz
jp
sbb
out
stc
imul
add
sub
push
shrb
mov
cli
je
je
sbb
push
cmp
adc
push
scas
loop
push
add
mov
mov
ja
sbb
es
mov
pop
nop
into
sub
enter
or
push
pop
addb
push
pop
lods
push
dec
shlb
into
add
dec
aad
icebp
push
test
add
mov
scas
repz
push
js
shrb
movsl
mov
das
mov
aad
repnz
stos
xlat
inc
std
mov
xor
fnstcw
push
inc
fstpt
out
add
ffree
aam
enter
jno
es
shlb
cli
imul
mov
ret
xchg
cltd
div
xor
dec
repz
dec
cmpsb
push
inc
xor
loopne
icebp
cmp
sub
inc
mov
mov
inc
das
out
mov
or
or
xor
shll
xor
cmp
and
jnp
loopne
push
decl
pcmpgtd
jle
adc
es
push
je
shlb
stos
pushw
repnz
testb
xchg
divl
fisubl
loope
aas
in
adcb
repz
inc
dec
pop
popa
mov
inc
insb
gs
dec
insb
push
mov
push
sbb
or
lds
loopne
mov
inc
adc
xchg
sti
ja
mov
popa
add
fwait
and
pusha
pop
das
leave
xchg
jne
sub
adc
and
nop
cmp
mov
push
sub
sbb
addr16
adc
xor
fnsave
dec
or
jo
cmp
and
jmp
loop
pop
faddl
mov
scas
dec
jb
in
sbb
push
insb
sbb
sub
cmpsb
adc
int3
xchg
and
add
pop
mull
test
or
push
es
xor
leave
ss
add
cs
scas
inc
dec
inc
sbb
popa
xlat
sbb
sbb
cmpsb
fs
lods
fldenv
ds
outsl
shlb
inc
mov
sbb
test
cli
inc
jno
and
push
pop
mul
enter
rcr
or
cmpsl
jb
adc
or
mov
add
sub
mov
sub
lcall
je
cmp
lea
mov
inc
pop
push
adc
movsb
and
xor
lods
dec
jae
aad
out
mov
adc
inc
sub
dec
jmp
stos
scas
pop
and
cmp
in
add
std
icebp
bnd
sub
fisubrl
loop
nop
mov
mov
dec
xor
and
pop
imul
lds
fucom
push
sub
enter
addr16
test
xlat
ja
sbb
and
imul
movsl
or
push
adc
out
and
mov
popa
jge
fisubrl
sahf
jnp
scas
dec
pop
add
adc
push
mov
shl
movsl
mov
cmp
mov
adc
sahf
test
mov
cli
ret
in
imul
and
dec
or
out
loope
aas
push
or
and
std
or
jl
mov
push
loopne
xlat
sub
je
adc
mov
dec
xchg
notl
mov
scas
push
aad
cmp
jns
shl
std
clc
pop
cmp
out
ret
lret
enter
sub
negb
mov
xchg
sbb
mov
xchg
jecxz
aaa
xor
bound
addb
inc
xor
sub
sbb
jb
mov
jnp
lods
pusha
mov
xchg
mov
sub
mov
ret
xor
xchg
cmp
pop
mov
add
iret
jno
xchg
lahf
lahf
mov
mov
mov
mov
call
int
loop
imulb
adc
jecxz
test
add
in
popf
or
cmp
cli
data16
xchg
push
sub
scas
shrd
stos
scas
cmp
iret
cmp
cmp
fldl
lret
call
pop
jae
or
pop
cmp
ret
sti
loopne
adcb
adc
push
xchg
pop
shrb
mov
mov
movsb
xor
mov
sahf
stos
testb
mov
inc
insl
xlat
inc
data16
pop
in
adc
xchg
aam
lock
cmp
push
jne
out
ljmp
aaa
ret
js
stc
xchg
stos
pop
aas
sbb
jne
xchg
pusha
xorb
add
or
adc
std
dec
xor
mov
mov
fwait
push
mov
sub
sub
psubusw
xchg
add
ljmp
mov
mov
pop
sub
xor
arpl
sub
loope
popa
outsb
xchg
mov
fistpl
jecxz
push
or
fiadds
xor
bound
call
inc
cli
inc
pushf
rorl
int3
adcb
sub
sub
stc
popf
mov
dec
mov
push
test
push
cmp
dec
imul
or
sub
in
jl
dec
repz
mov
adc
je
stos
cmove
xchg
clc
movsl
or
shll
jmp
loop
or
cmpsl
outsb
xchg
iret
ret
adc
mov
insb
sbb
adc
add
cmp
dec
mov
fisubrl
sti
xchg
mov
call
pop
orl
or
or
mov
pop
cmp
rol
lds
mov
adc
pop
lods
in
push
in
push
orb
insb
inc
xor
std
mov
test
and
add
daa
pop
mov
subl
call
lret
pop
in
aad
inc
or
hlt
lcall
fwait
sub
and
imul
aaa
jne
stos
or
pcmpeqw
rcll
inc
std
dec
call
dec
mov
in
incb
adc
and
cmp
sbb
popf
aaa
dec
jmp
arpl
iret
in
xorb
dec
lahf
les
pop
insb
cltd
dec
mov
fldz
aaa
nop
ja
mov
push
fimull
divb
xor
and
cmp
xchg
popf
or
es
loope
dec
add
sub
jg
xlat
jmp
mov
mov
jo
rorb
fwait
loopne
lock
stc
hlt
sub
dec
push
xchg
sub
inc
insl
jmp
dec
mov
sub
mov
xor
fldcw
push
ss
add
das
stc
jg
xor
daa
xchg
ja
add
js
sbb
push
stc
out
fists
push
sub
inc
push
and
and
mov
jmp
fnstcw
pop
lods
testl
pop
xchg
mov
xchg
and
or
sbb
movsl
jns
cmp
add
sbb
mov
dec
mov
and
scas
stos
and
pop
and
adc
pop
pop
add
pop
xor
movsl
pop
pushf
aad
pop
addb
rcr
mov
leave
jnp
test
jp
lcall
pop
pushf
ret
or
in
adc
mov
dec
xor
movsl
out
push
xor
loopne
mov
es
or
or
and
xor
push
or
add
jge
ret
xor
gs
sub
popa
shrl
and
cmpsl
mov
aam
and
adc
jle
rcrb
cltd
xor
int
int
test
cmp
mov
jno
jl
add
cli
pop
ja
push
mov
les
xlat
adc
fisubs
out
gs
sbb
test
ret
xor
fcoml
dec
cmp
and
fdivrp
stc
mov
inc
dec
sbb
add
fld
test
je
or
call
mov
shrd
pop
fldcw
inc
in
fisttpll
negb
pop
popf
dec
inc
test
fisubrl
ja
cmpl
imul
inc
test
jne
out
dec
enter
jns
icebp
insb
into
mov
mov
rcr
lret
loope
jmp
pop
or
aad
leave
test
cmc
clc
cmpsl
xchg
repz
popf
call
jl
in
pop
cmp
jno
pop
mov
insb
mov
xor
jbe
jo
xor
xchg
add
dec
outsb
aas
cmp
cltd
sbb
ret
mov
scas
xchg
or
push
adc
jnp
push
push
out
xor
ret
pop
cltd
dec
xchg
sbb
addr16
stc
adc
data16
fldenv
outsb
movsl
adc
jle
orb
push
cmp
push
rcrb
inc
dec
inc
jne
mov
in
lds
sbb
roll
pop
dec
movsb
jmp
inc
mov
xchg
cld
je
pop
sbb
pop
test
mov
les
cli
repnz
dec
mov
jg
push
sub
jl
adc
jl
std
xchg
repz
dec
stos
lds
idiv
pop
clc
sbb
mov
pop
pop
aaa
dec
test
roll
adc
or
mov
or
sub
in
fwait
ret
adc
or
xchg
outsb
jp
enter
lock
push
mov
push
std
xor
mov
xchg
and
jae
pop
stc
push
pusha
xor
jg
imul
and
fnstcw
test
and
xchg
es
pop
ljmp
dec
xchg
pop
les
or
shlb
push
cmc
loope
in
int3
jmp
pushf
jle
sahf
sub
in
dec
cmp
es
mov
lret
fidivrs
mov
mov
stc
fimull
aam
dec
mov
outsl
xchg
and
dec
orb
inc
lahf
push
cmp
pop
cmp
movsl
les
xchg
sbb
xor
scas
fs
popa
cli
imul
xorl
cmp
aaa
sbb
sub
dec
aad
xor
loope
inc
data16
add
pop
aaa
out
gs
inc
repz
or
adc
jo
mov
dec
outsb
mov
in
push
ljmp
jge
adc
xchg
pushf
ss
loop
fldenv
mov
and
mov
fwait
shrl
jbe
flds
es
xchg
dec
jbe
add
data16
jns
movsb
pop
pop
jmp
add
mov
mov
push
inc
add
lahf
sbb
mov
sbb
imul
movsl
fadds
jb
push
aad
outsl
mov
stc
xchg
mov
out
mov
pop
sbb
adc
clc
and
add
adc
iret
xchg
ds
lea
in
mov
or
cmp
mov
cmp
lret
mov
in
outsb
sbb
and
pop
iret
jmp
and
push
cmpsb
add
jmp
adc
aad
pop
rcrl
and
ljmp
mov
jmp
pop
adc
and
mov
out
insb
mov
sbb
vunpcklps
fisubl
ja
mov
out
aam
push
inc
lods
mov
add
idivb
xchg
add
dec
xchg
pop
ds
sbb
adc
jno
inc
mov
sti
add
arpl
scas
cmp
fs
lods
sub
lret
ret
cwtl
out
push
test
test
push
inc
inc
pop
sbb
jb
xchg
in
sti
xor
mov
aas
mov
aam
cmp
gs
mov
xchg
pop
pop
mov
cmp
push
xchg
call
mov
inc
add
mov
sbb
in
mov
add
cmp
or
ja
call
mov
out
jb
push
xchg
xchg
ret
addb
rolb
mov
sub
push
lock
fmuls
sbb
jp
cmpsb
add
mov
ds
ret
pushf
dec
pop
out
ja
ficompl
mov
mov
lret
inc
push
or
xchg
inc
imul
fcoml
mov
or
jnp
jb
iret
jle
pop
cmpsl
xchg
or
ret
out
lret
movsl
xchg
cld
adcb
frstor
cmp
fs
int3
ret
xchg
iret
js
outsb
inc
test
aaa
push
jnp
dec
outsl
or
mov
in
lcall
cmpsb
and
pop
and
adc
sbbl
test
in
mov
xchg
dec
orb
cmp
out
cmp
ret
inc
into
fstps
push
or
jle
nop
jg
sbb
cmp
sbb
jbe
push
addl
and
pushw
ljmp
fstps
insb
or
push
aam
adc
jmp
popf
cmp
cli
inc
ss
in
sub
add
insb
sub
enter
mov
mov
or
push
ret
lock
pusha
push
push
lods
cmp
test
sub
fcoml
pop
mov
imul
leave
lret
stos
xor
sti
repz
stos
sbb
in
scas
jne
sub
notb
mov
sbb
sbbb
sahf
xchg
xchg
hlt
mov
pop
xor
pop
and
ss
in
push
add
pop
mov
lods
add
sar
fldenv
pop
mov
mov
pop
rcrl
in
push
mov
dec
push
and
mov
dec
jmp
and
and
ljmp
xor
ljmp
push
das
mov
jbe
jge
inc
and
and
or
inc
cwtl
adc
hlt
dec
imul
jmp
sahf
add
popa
in
lods
lret
pop
loop
ficomps
xchg
adc
pop
cwtl
pop
iret
cs
lret
push
push
ror
testl
movsb
xchg
inc
jg,pn
mov
popa
mov
das
dec
out
add
jmp
dec
xchg
push
mov
test
sbb
sub
pop
ret
ficoml
adc
mov
cmpsb
pop
jl
in
jle
mov
imul
nop
out
in
adc
flds
mov
lods
pop
fsubrs
lahf
std
mov
je
clc
jb
mov
ror
adc
out
dec
jne
pop
push
fsts
and
es
xor
jo
mov
cmpsl
sub
mov
add
cmp
cli
loop
imul
mov
out
adc
stos
fisubl
sbb
dec
inc
repz
les
and
cmp
iret
sub
cmp
push
lahf
movsl
lcall
fwait
dec
pop
outsl
mov
stos
mov
mov
dec
lret
xor
mov
jmp
xchg
mov
inc
xor
jge
push
push
jle
push
ljmp
and
add
imul
or
mov
cmp
xchg
int3
insb
jae
sub
std
add
push
cmpsb
out
jecxz
movl
jp
fldl
fs
push
es
lods
je
cmp
fs
sub
mov
jge
inc
xchg
jp
into
adc
pop
push
pop
mov
pop
sbb
lods
xchg
push
pusha
popf
mov
mov
lds
cmp
out
call
mov
cs
iret
ds
in
jnp
inc
push
ljmp
sub
movsb
mov
lods
aad
cmp
mov
loop
test
mov
out
mov
lods
les
mov
lea
jb
fs
cmpsl
lcall
icebp
popa
or
insb
push
sub
jbe
or
jmp
xor
je
mov
lds
sbb
popa
popf
cltd
fidivs
fwait
mov
insl
xchg
inc
test
fidivrl
jbe
aad
adc
int3
mov
cmp
inc
fidivl
mov
out
xor
sbb
cmp
dec
adc
cmp
fildl
xchg
pop
adc
imull
xchg
fnstenv
aaa
and
dec
out
jl
into
out
and
pop
jns
xor
jge
imul
jmp
jp
mov
jge
dec
mov
cmp
jl
das
xchg
jns
pushf
cmp
mov
or
ljmp
and
dec
jg
push
icebp
mov
pop
jl
mov
sti
add
push
js
ljmp
lods
stc
push
cmpb
sbb
prefetch
adc
cmpl
add
ficomps
mov
repz
or
stc
add
popa
mov
and
shll
lcall
add
mov
add
sub
pop
add
addr16
shlb
stos
push
clc
shrl
shlb
jle
sub
rolb
into
inc
or
adc
xor
sti
rcrl
aas
pop
mov
xchg
int3
inc
push
mov
fistpll
mov
push
pop
lock
into
mov
adc
push
into
testl
fnsetpm(287
mov
jmp
push
fwait
ja
push
pop
or
sahf
adc
mov
add
out
sub
fadds
jp
jg
aas
mov
mov
dec
jle
mov
jno
push
dec
into
mov
pop
fcmovbe
pop
es
fnstsw
cwtl
inc
or
dec
or
push
jle
inc
in
pop
sbb
cmp
sbb
or
jae
adc
jle
stos
into
stc
mov
add
int3
and
inc
ret
arpl
jb
lock
xchg
out
mov
push
mov
sub
jp
mov
cmpsl
dec
cmp
mov
pop
push
jge
lods
mov
pop
pop
add
fists
ret
fisubs
jge
sahf
xchg
cmp
pop
push
and
lret
push
fisttpl
lock
xor
lods
dec
inc
push
add
adc
xchg
jge
mov
push
pop
mov
or
jle
cmc
js
lea
xor
mov
mov
adc
pop
or
xor
sub
jbe
mov
sbb
xchg
mov
insb
cmc
add
ret
popf
pop
xchg
sbb
push
fs
dec
dec
icebp
sub
inc
gs
pxor
jne
mov
or
xchg
int
bound
mov
xor
out
test
insb
subl
mov
ret
push
dec
sahf
inc
jns
repz
adc
mov
clc
xchg
push
ljmp
out
pop
sbb
fwait
lret
push
das
push
in
outsb
fcmove
push
adc
and
mov
push
lret
cld
adc
lret
push
ret
pop
test
call
mov
xor
pop
aas
dec
mov
icebp
xchg
cmpsb
mov
jmp
jecxz
pop
sbb
push
sbb
pop
ret
or
inc
mov
cltd
lock
sbb
jl
jp
xor
lea
stc
scas
push
bswap
xor
sub
inc
mov
nop
mov
call
mov
sub
sbb
fisubrl
lcall
pop
push
and
push
stc
lret
xor
cmpsl
fsubp
sbb
cmp
lods
push
mov
xor
rcl
push
jbe
fistps
xchg
adc
push
add
xchg
loope
insb
gs
cmpsb
clc
mov
jmp
loope
stos
imull
or
fisttpll
xchg
inc
pop
lock
popf
mov
cli
movsl
mov
repnz
mov
pop
mov
and
fisttpl
xor
jo
mov
loopne
test
cmp
mov
out
jg
cmp
bound
in
pop
std
fbld
mov
mov
insb
jno
mov
add
fsubr
xchg
inc
sbb
out
subb
cmp
aam
stos
fmull
mov
jmp
js
mov
cmp
call
push
repz
inc
lret
scas
and
mov
jnp
cld
fidivrl
jp
lea
iret
mov
mov
add
jge
mov
nop
cmp
mov
pop
andl
mov
xor
fs
sti
loop
iret
and
aas
cmp
std
pop
xchg
add
lret
std
push
aad
jg
pop
andl
sti
in
les
mov
dec
xor
mov
push
push
push
cmp
pop
mov
aaa
inc
test
push
les
mov
lahf
movb
xchg
lds
les
fisubs
je
fcom
sub
sbb
cmp
mov
jp
push
ja
pop
inc
sub
pop
out
subl
sub
gs
jp
push
jbe
xor
lret
xlat
outsb
sub
movsb
loop
pop
lods
push
mov
aad
leave
add
cs
out
xor
mov
lods
jle
int
mov
mov
hlt
cs
dec
push
mov
inc
bound
adc
mov
pushf
adc
xor
pop
cmp
inc
or
add
dec
aaa
test
mov
inc
pop
hlt
dec
test
or
xor
xchg
daa
or
pop
cmpb
call
push
dec
mov
or
push
testl
outsl
jbe
jo
push
out
decl
push
test
xor
push
jle
sub
sahf
sbb
xor
movb
or
mov
stos
nop
daa
lret
sub
mov
ja
sub
in
cmc
xchg
cmp
jbe
push
and
xchg
popa
test
aam
dec
adc
pop
xchg
lea
pushf
xor
es
mov
cmpsb
arpl
gs
jnp
cmpsl
add
loopne
and
jecxz
mov
out
xor
test
lcall
push
js
cmp
xor
adcb
out
jbe
and
mov
add
push
bnd
sub
sbb
sbb
ficoml
in
stos
rcl
iret
stc
mov
in
jmp
fdivl
std
fld1
daa
xchg
aad
sbb
imull
aas
push
cltd
enter
ret
shll
ja
push
jecxz
cld
out
jmp
js
aam
add
adc
cmpsb
stos
fisubl
pop
jno
daa
iret
jp
int
cs
std
jge
push
cmp
pop
stos
mov
sarl
jg
or
xchg
test
adc
sbb
push
jo
cmp
jecxz
and
cmp
or
add
test
cmp
cmc
ret
nop
dec
or
and
sub
jmp
addr16
mov
pop
adc
mov
jae
jmp
out
stos
cmpsl
inc
cmpsb
les
test
ret
mov
mov
xor
push
mov
cmp
or
mov
adc
pop
stos
and
cs
mov
scas
fidivl
cmpsb
lods
dec
mov
andl
push
mov
movsb
xor
outsb
test
inc
cmpsb
movb
push
cmpsl
lcall
dec
jnp
fbstp
pop
popf
jge
orb
cmp
scas
pop
out
dec
jb
sbb
fsubs
lock
stos
jmp
push
daa
jp
sbb
out
dec
js
inc
ja
sbb
stc
and
lret
sbb
into
rolb
lock
clc
out
cmc
add
push
mov
dec
movsl
push
add
add
fisttpll
mov
dec
cmpsb
mov
popa
mov
frstor
ficoml
sbb
sub
les
dec
cmp
shlb
mov
inc
sub
ret
es
icebp
push
in
cltd
pop
sti
repz
inc
divl
ljmp
pop
pop
jnp
push
mov
out
insl
cmpsl
hlt
push
mov
aad
mov
mov
push
adcb
loop
adc
mov
jmp
dec
das
arpl
xor
out
scas
xchg
insb
mov
mov
leave
in
idivb
inc
sub
jle
mov
test
pop
and
pushf
fsubrl
dec
not
or
icebp
movsb
ds
xor
inc
mov
xchg
popf
inc
repz
or
or
mov
movsb
mov
andb
mov
dec
adc
fidivl
cmp
mov
leave
insl
test
fiaddl
mov
push
outsl
pop
push
pusha
stc
sbb
into
and
into
xchg
xchg
frstor
jp
or
adc
sub
pop
mov
cwtl
lahf
xor
sbb
vmovupd
popa
and
cmp
clc
cmp
sbb
mov
sahf
fstl
pop
mov
enter
shl
stos
mov
mov
stc
xchg
push
mov
out
push
flds
add
and
imul
sbb
bound
sbb
adc
ljmp
push
inc
je
lock
adc
test
ret
and
and
mov
mov
cltd
pop
sbb
test
lea
add
popf
mov
daa
fwait
pop
enter
fs
into
in
rcl
repz
sub
sub
enter
mov
xchg
xchg
sahf
or
rcrb
mov
aas
adc
ret
mov
scas
pop
cs
lret
pop
pop
mov
xor
insb
mov
insb
std
loope
mov
loope
dec
cwtl
inc
sahf
jbe
testl
fistps
fwait
clc
sub
out
stos
pop
stos
sbb
sarl
xor
test
pop
mov
mov
aad
jmp
insb
mov
filds
mov
push
mov
mov
aad
aad
negl
sub
fdivr
scas
mov
pextrw
in
inc
jo
add
inc
push
inc
add
outsb
and
leave
push
push
xor
push
inc
fistl
sbb
mov
pop
sbb
xor
mov
mov
xlat
ret
pop
shl
sarb
insl
mov
incb
push
mov
and
and
je
fs
scas
push
fisttps
inc
js
mov
jmp
and
cmp
pop
insb
mov
outsb
push
inc
ret
sahf
jb
in
into
aaa
and
pop
ds
mov
inc
push
dec
push
sbb
xchg
xor
lret
xchg
inc
xlat
jmp
push
lock
in
cmpsl
js
jnp
pop
lcall
aam
xor
testl
sub
jg
xchg
in
sbb
in
jl
fcmovnbe
xor
xchg
cmp
repnz
leave
andl
mov
cmp
out
xor
add
stos
movsb
mov
sub
dec
adc
arpl
add
jg
shlb
in
xorl
ljmp
leave
jmp
xor
push
stc
notb
cwtl
mov
lods
mull
dec
xchg
imul
ret
mov
add
imul
lret
out
pop
push
sbb
popa
sub
pop
push
popa
js
jg
mov
iret
sar
lock
jb
xlat
sub
lock
scas
adc
in
add
cltd
orl
push
or
lds
dec
movsl
add
push
cli
sbb
shlb
rolb
ret
enter
mov
scas
pop
ss
xchg
mov
jg
jne
jecxz
or
imul
mov
pop
push
mov
lahf
pop
dec
jnp
mov
sbb
push
ret
xchg
scas
jge
stos
testl
arpl
xchg
stos
lods
push
adc
inc
test
jns
sub
push
jno
push
and
js
mov
or
outsl
nop
mov
pop
std
jl
out
bound
cld
xor
sbb
repz
aas
jp
imul
shll
fistpl
lock
mov
or
test
ja
push
cmp
fidivrs
cld
lods
xor
hlt
daa
dec
sbb
pop
xchg
fcmove
dec
fldt
roll
mov
stos
test
mov
fwait
imul
xchg
lret
push
test
dec
inc
lds
popa
dec
shlb
in
outsb
enter
mov
jle
popf
xchg
adc
popa
aam
xchg
or
popf
jns
push
and
scas
lahf
sub
dec
js
mov
rolb
shlb
imul
jmp
adc
outsb
xchg
or
es
stos
mov
xchg
leave
aaa
push
mov
add
cmp
pop
sbb
cli
ljmp
inc
loope
mov
test
in
dec
cmp
in
mov
lea
add
cmp
popa
sbb
popf
push
ret
xorl
push
push
or
insb
les
aas
xlat
dec
and
testl
push
aaa
cmp
in
arpl
mov
pop
ja
sar
dec
jo
xor
adc
cli
mov
jle
imul
adc
adc
scas
mov
cmpsl
add
ret
es
push
add
mov
mov
out
jne
lcall
and
pop
pop
sti
aas
aad
jnp
xor
imul
rcrl
shrb
mov
mov
mov
mov
in
sahf
sarl
nop
sub
push
or
xor
call
mov
aaa
jl
lret
xchg
inc
dec
in
dec
or
das
in
fcompl
fstl
ret
dec
das
loope
pop
dec
out
cmp
xor
aaa
lahf
test
dec
iret
mov
js
jne
aaa
add
inc
rcrl
aad
cmp
nop
sahf
nop
push
test
mov
dec
cwtl
shll
shl
inc
ljmp
mov
or
mov
and
push
or
clc
out
sbb
into
dec
gs
or
mov
add
xor
lods
push
cli
xlat
and
aam
add
sbb
cld
mov
mov
leave
sub
adc
dec
mov
outsb
in
into
fs
mov
mov
xchg
stos
push
bound
addb
into
xor
das
push
cmpsl
mov
inc
fisubrl
pop
push
lds
movsb
cmpsl
xchg
dec
pop
sti
mov
gs
adc
aam
pushf
stos
mov
pushf
ss
dec
sahf
out
cld
out
cmp
repz
or
aam
sub
bound
or
cld
cmp
jle
mov
lea
dec
xchg
cltd
cmp
or
xchg
mov
mov
pop
push
sub
add
outsl
cmp
cmpsb
pushl
ret
negl
dec
mov
shl
or
neg
mov
jb
leave
test
cmp
dec
jl
jo
mov
sub
scas
sbb
sbb
sbb
sub
fnsave
add
push
xor
das
jmp
xchg
cld
xchg
mov
pop
pop
cwtl
jnp
mov
inc
adc
loop
push
and
pushf
mov
and
insb
lods
imul
mov
loopne
push
les
jg
push
bound
inc
outsb
inc
jle
inc
or
adc
pusha
test
mov
pop
dec
jb
cmp
pop
inc
adc
xor
pusha
notl
cltd
shl
sbb
sbb
inc
stc
mov
popf
dec
cltd
inc
mov
das
pop
rolb
out
inc
fwait
aaa
cmpb
ljmp
jle
lock
and
cmpsb
test
xor
int
xor
scas
mov
in
nop
fucom
stc
jns
lods
mov
and
inc
cmpsl
sub
pop
mov
fistps
sbbb
mov
rclb
dec
mov
out
dec
mov
push
dec
jnp
insl
and
mov
scas
xor
aam
lock
and
stc
cwtl
xor
inc
mov
and
in
push
sub
orl
sub
fisubs
test
es
sub
daa
das
pushl
inc
and
je
imull
add
repz
test
in
dec
cmp
mov
sub
sbb
pop
aam
addl
or
xlat
xchg
adc
rclb
pop
xor
jle
fucompp
subl
dec
mov
dec
in
repnz
loop
nop
add
frstpm(287
adc
mov
xchg
enter
inc
lcall
cwtl
pop
ret
clc
fidivrs
fcoms
fdivl
sub
jle
jo
ret
pop
mov
insb
insl
aaa
pop
jno
mov
jecxz
lods
adc
jnp
gs
push
mov
dec
sub
pop
in
test
sbb
dec
adc
int
push
mov
daa
inc
movsl
jo
pop
lret
mov
sub
cmc
mov
and
mov
mov
mov
xchg
bound
mov
sbb
mov
ds
jns
ds
mov
fcmovnbe
data16
add
pop
mov
cwtl
test
pop
mov
pop
lret
fwait
shl
ret
hlt
cmpsb
in
mov
test
xchg
imul
add
or
cmp
and
subl
lcall
int
rcrb
add
mov
mov
addr16
bound
and
inc
data16
jae
jg
adc
cmp
test
imul
into
jns
sbb
cmpsl
mov
jg
sbb
test
dec
cmp
jge
in
xchg
popa
adcb
mov
mov
fnsave
xor
cmpsl
stc
cmpsb
dec
pop
fists
mov
enter
fistps
cmp
xlat
ss
aad
jne
shll
js
jle
mov
inc
pop
jns
sub
enter
pop
mov
pop
loopne
xchg
jle
cmpsl
jecxz
jae
adc
mov
hlt
imul
je
adc
dec
int3
jo
lds
sbb
lock
cmpb
insb
xchg
push
push
fstpl
popf
push
movsb
cmpsl
movsl
sahf
pop
sbb
lcall
adc
jl
ss
lods
pop
mov
fcompl
frstor
pop
or
xor
push
aaa
mov
push
pop
push
fistpll
das
mull
into
fnstcw
mov
inc
push
aaa
mov
sbb
xor
or
fildll
add
add
loop
fcompl
loopne
jg
sub
call
or
shl
hlt
inc
int3
ficomps
xor
dec
adc
js
mov
and
aad
mov
enter
xor
loope
jnp
jne
outsb
mov
mov
stc
lods
mov
lahf
sub
push
sbb
cwtl
sub
xor
jae
sbb
push
rcrl
out
mov
ficompl
lock
mov
in
xchg
mov
push
mov
arpl
or
mov
and
mov
mov
je
imul
add
gs
gs
add
xor
adc
sbb
add
xor
mov
pop
add
aam
push
sbb
xor
sub
lea
or
sbb
and
add
pop
loope
test
and
add
movsb
aas
ljmp
pusha
pop
adc
popa
in
cmc
test
xor
inc
add
jo
ret
daa
mov
add
mov
mov
popf
mov
sbb
inc
cmp
cwtl
loop
pop
and
int
and
and
subb
sub
ss
xchg
jbe
pop
push
test
enter
mov
inc
cmp
arpl
adc
mov
arpl
xchg
ret
fcoml
xchg
cmpsb
test
lods
out
mov
push
add
xchg
sub
dec
xor
fadds
cli
aaa
mov
mov
sar
fdivr
imul
xchg
repz
dec
and
cmp
jno
mov
shlb
xor
mov
loopne
dec
iret
incl
jbe
adc
sar
in
out
loop
shll
add
cmc
pop
and
es
or
into
enter
xchg
jns
pusha
push
stos
and
inc
in
sbb
dec
out
jae
js
aam
dec
outsl
lock
mov
pusha
push
es
mov
push
dec
cmovo
or
in
rol
shll
mov
push
push
mov
test
ss
inc
push
push
cmpsb
call
imul
mov
shll
xor
add
sti
lret
jecxz
push
nop
fstpl
sbb
mov
mov
daa
cmp
gs
je
fs
daa
aad
xor
pop
mov
rcrl
push
addb
mov
mov
jp
mov
cmp
mov
and
scas
je
cmpsb
data16
lea
shrb
cltd
pop
fwait
sbb
shrb
aas
dec
pop
xchg
push
ljmp
daa
xor
xchg
scas
add
sbb
mov
cmc
pushf
clc
add
test
scas
jnp
push
sbb
jle
xor
clc
sub
enter
or
mov
lock
or
dec
lret
fistps
sub
mov
gs
out
mov
mov
imul
push
xchg
adc
aam
dec
clc
xor
incl
mull
outsl
scas
mov
addr16
into
fwait
popa
xchg
jge
xorb
pop
in
jo
mov
arpl
mov
jno
xchg
jp
sbb
add
adc
adc
lahf
inc
mulb
jmp
jle
arpl
loop
mov
ss
jno
sub
xchg
arpl
add
es
pop
cmp
std
xor
ds
call
push
fsubrs
xchg
fiaddl
mov
mov
gs
mov
fwait
test
imul
ss
adc
fyl2xp1
stc
pop
pop
push
sub
mov
xchg
adc
inc
pop
xchg
jg
pusha
fidivrs
rcl
dec
and
cld
ljmp
int
bound
sub
mov
or
dec
les
inc
mov
arpl
push
es
lret
lahf
stos
jb
add
push
loop
outsb
test
push
mov
dec
mov
adc
scas
lea
jmp
and
mov
adc
and
mov
enter
pop
stc
push
fidivrs
sub
cmp
filds
mov
jo
mov
mov
cmc
inc
xchg
add
inc
fsubrs
sub
xchg
daa
les
daa
add
mov
jo
subl
sbb
pop
dec
cmpsb
dec
xor
add
ss
or
mov
or
test
add
in
sbb
shll
jl
mov
in
dec
and
mov
and
sub
enter
jae
xor
adc
js
push
loope
cmp
lret
pop
movsb
mov
push
repz
mov
sbb
sub
add
adc
xchg
mov
jmp
xchg
ds
sbb
jl
xor
movsb
repz
out
jg
outsl
data16
push
adc
in
les
cltd
test
clc
xor
adc
push
mov
ljmp
mov
sbb
mov
int3
sbb
push
mov
adc
jb
mov
adc
jecxz
push
dec
dec
inc
dec
cmp
push
add
xor
pop
fwait
pop
lds
xor
sahf
movsl
js
push
insb
xorb
mov
xchg
andl
cld
sub
mov
test
fsub
xorl
gs
pop
push
outsl
bound
mov
aam
xchg
outsb
mov
mov
divl
test
inc
adc
jns
aaa
scas
call
mov
sub
push
iret
dec
pop
icebp
das
pop
mov
sti
nop
mov
cmpsl
mov
lea
add
sub
xor
and
mov
sbb
dec
sub
pusha
fcoms
jb
leave
mov
call
mov
icebp
cli
cmpsb
push
in
xchg
pusha
cmp
mov
andl
xlat
xchg
popf
mov
xchg
outsl
cmp
je
xchg
mov
test
rclb
cmpb
adc
mov
ds
icebp
movsb
shll
in
cmp
mov
frstor
and
in
or
mov
daa
pop
jmp
sbb
mov
inc
imul
xchg
sub
lea
sbb
scas
ss
mov
leave
pop
mov
out
jo
rorb
clc
push
cs
dec
mov
lret
addr16
pop
xchg
inc
mov
xrelease
shlb
gs
pop
push
add
gs
mov
cmp
inc
jecxz
gs
leave
fs
mov
dec
jle
mov
sub
xlat
data16
enter
loope
push
mov
inc
mov
inc
mov
cmpsb
nop
sti
in
pop
push
push
faddl
xchg
xor
sbb
insb
sub
scas
xchg
jnp
cmpl
sarl
rorl
ja
mov
pusha
lcall
lcall
mov
or
ds
pusha
mov
addr16
test
jecxz
push
push
push
or
insb
je
andl
iret
icebp
int3
push
fisubrs
inc
cmpsb
fwait
mov
dec
add
cmp
das
or
pop
adc
pop
aam
and
lods
xchg
ret
cmp
ret
ret
jle
sub
mov
xchg
jp
leave
add
xchg
sbb
hlt
or
lock
enter
orb
xchg
test
dec
inc
adc
sti
and
xchg
mov
fsub
imull
xchg
shr
pop
jl
push
mov
aam
sub
mov
pop
pushf
xor
push
mov
ljmp
jo
jp
sbb
fistl
inc
mov
lahf
das
movsl
or
jns
cmpsl
aad
and
arpl
push
xchg
jns
jno
outsb
lds
sbbb
xchg
test
sarl
test
pop
leave
xchg
in
sub
ja
adc
out
mov
jge
enter
in
pop
loopne
mov
stos
mov
jle
cltd
sbb
mov
shl
or
sbb
cs
mov
fs
mov
cli
fneni(8087
stos
or
std
jae
iret
jmp
and
fdivrl
iret
pop
xorb
aam
rcrl
pop
jb
cmc
lret
cwtl
push
mov
test
pop
fsubl
inc
leave
addr16
adc
mov
xchg
mov
mov
pop
shlb
and
icebp
inc
pop
scas
lret
aad
sub
mov
sub
fsubr
imul
mov
mov
and
cmpsl
testl
cmp
inc
mov
ss
cmc
gs
movsb
cld
shl
inc
scas
jne
xchg
cmpsl
dec
mov
arpl
and
js
push
mov
mov
cld
sahf
ja
out
das
inc
popl
adc
jg
orb
popf
ds
push
cmpl
pop
popf
sbb
cld
roll
mov
inc
cmp
lds
movsb
bound
xchg
filds
mov
stos
and
fmulp
mov
cmpb
pusha
mov
mov
xor
pushf
imul
jg
add
or
xchg
fst
mov
add
loope
add
push
sbb
repnz
in
push
mov
repz
loope
rcr
lods
jo
jne
loopne
add
cmp
dec
adc
mov
scas
jmp
in
jbe
repz
ja
adc
push
lahf
nop
sub
vpcmpgtb
pop
cmp
jno
xchg
push
dec
lods
mov
cld
sbb
cmp
pop
push
xor
dec
and
lds
or
push
add
bound
mov
sbb
dec
stc
xchg
hlt
lods
inc
mov
inc
es
ret
mov
popw
and
les
jne
lahf
pop
js
inc
add
mov
mov
and
push
nop
push
sbb
sti
xor
pusha
mov
outsl
ljmp
pusha
stc
xchg
in
sarb
cmp
adc
cmpl
loope
aaa
int3
fisttps
popf
pop
xor
xorb
ds
es
xor
mov
mov
inc
call
mov
jmp
int
stc
mov
mov
xchg
call
es
lock
jno
mov
jg
xchg
mov
call
adc
and
mov
in
lret
cmp
adc
sbb
mov
sarb
orb
aas
jg
xlat
and
and
push
jns
or
pop
iret
popf
mov
push
sub
test
or
cmp
push
ljmp
pop
push
dec
stc
mov
pop
pushl
jle
cmp
aas
leave
jo
mov
push
jg
insl
jle
push
cmc
mov
add
inc
repnz
insl
outsb
dec
xor
fimuls
xor
outsl
cmpsb
jge
jle
xchg
test
sbb
sbbl
dec
call
or
cmp
stc
dec
push
pop
stos
jl
mov
scas
inc
xchg
ljmp
push
xor
es
mov
repz
sub
lds
testl
mov
inc
loop
out
pop
fisubrs
adc
pop
js
push
and
loopne
jo
arpl
sbb
mov
sub
icebp
movswl
add
clc
or
ja
aad
outsb
sarl
pop
mov
mov
icebp
mov
mov
mov
cmpsl
pushf
pop
mov
push
pop
pop
js
xchg
or
cmpsl
call
push
sub
jbe
mov
repz
pop
mov
outsl
leave
mov
movsb
out
or
or
xor
pop
subb
push
outsb
das
or
lds
pusha
cmp
jb
mov
movsb
jnp
pcmpgtw
fcmovb
cmc
push
cmc
test
les
add
xor
dec
push
data16
pop
xchg
and
or
dec
insb
xchg
push
sbb
push
movsb
xor
daa
ss
add
jg
loope
push
cmp
loopne
sub
xchg
mov
sub
in
inc
pop
xchg
fcmovnb
mov
mov
push
andb
rclb
xlat
xor
dec
ss
xchg
cmp
pop
pop
cld
outsb
or
sub
decb
les
add
sbb
insb
adc
jns
cmp
out
inc
mov
add
mov
in
ds
mov
mov
sub
ljmp
lock
pop
sbb
lret
and
or
jmp
sbb
and
in
lods
loopne
pusha
in
fadds
inc
mov
enter
testb
cmp
out
pop
adc
call
xor
mov
je
fld
pop
popf
xchg
sub
sahf
test
xorl
pushf
dec
jp
xor
and
sbb
xor
pop
push
insl
into
movsl
shlb
insl
sub
jmp
jae
xlat
sub
inc
call
xchg
mov
jno
je
pusha
loope
popa
xchg
insb
push
xchg
lret
xor
fisttpll
fimull
sbb
adc
fsubrs
xchg
fnsave
sarl
push
cltd
int
mov
leave
sub
jae
adc
add
movsb
inc
sbb
sahf
icebp
cltd
add
pusha
clc
std
incl
orb
push
lcall
fcoms
jno
mov
push
clc
pop
sbb
sarl
out
jp
lods
adc
inc
xchg
add
xor
lock
pop
pop
cmp
push
lods
mov
ljmp
repz
mov
repnz
push
xchg
and
sbb
lock
mov
cmc
in
ds
clc
out
sahf
mov
shlb
cmc
pop
cmp
cmp
mov
ret
mov
into
insb
stc
mov
bound
inc
das
xchg
mov
enter
sbb
and
push
test
test
daa
sbb
decb
adc
ss
rcr
aas
loop
add
fsubr
fsubr
lods
in
cwtl
div
inc
add
add
adc
ret
push
out
and
sub
imul
cmp
inc
mul
scas
push
add
cmp
mov
xor
outsl
stos
lods
xor
cmpsl
jmp
stos
xchg
lods
lds
sbbl
testb
jns
hlt
inc
aad
stos
inc
xor
popa
fimuls
es
loopne
in
mov
or
pusha
pop
outsb
adc
mov
sahf
cmp
shrb
jge
jae
mov
push
or
xor
clc
test
jo
sahf
cmp
mov
fcmovnb
rorb
mov
sbb
cmp
mov
pop
jae
inc
in
xor
mov
push
or
arpl
jnp
out
addr16
dec
sbb
push
or
jae
loop
pop
vphadduwq
push
mov
ret
push
mov
cmp
mov
leave
xor
inc
or
arpl
mov
notl
mov
pushf
mov
sub
inc
sbb
and
jno
pop
add
xchg
cltd
roll
jno
lahf
push
mov
int
cmp
sbbb
std
gs
or
enter
lea
cs
mulb
adc
sbb
mov
popa
fmulp
mov
icebp
mov
cltd
outsb
cli
add
int3
xchg
aam
mov
cld
das
jae
push
or
aas
sbb
xor
sbbb
or
sbb
fldt
stc
jmp
adc
aaa
stos
jbe
cmp
mov
dec
push
dec
rol
shrb
xor
movsb
mov
cmpsl
push
pusha
pop
adc
jae
int3
movsl
and
adc
xchg
inc
fidivs
aad
je
imulb
or
inc
mov
pop
or
aad
ja
jmp
repnz
ss
dec
out
sbbb
aas
xor
mov
xor
loop
fcom
scas
pop
cli
sti
inc
and
dec
jne
dec
or
mov
repz
outsl
mov
loopne
pusha
jb
mov
adc
push
cmpsl
mov
sti
fwait
dec
outsl
jg
adc
subl
in
add
adc
insb
cwtl
loope
xchg
push
add
jge
or
xchg
test
scas
or
imull
xor
cwtl
adc
in
jle
popa
mov
das
xchg
fiadds
ret
hlt
mov
das
pop
insl
inc
mov
pop
je
ret
fcomps
aaa
or
mov
mov
push
call
adc
out
jne
push
subl
mov
inc
xor
fnstsw
ret
pop
adc
mov
dec
sub
xchg
mov
arpl
dec
ja
arpl
loope
cwtl
test
les
pop
push
stos
fldl
xchg
out
push
shr
imul
jno
in
and
leave
int
ds
mov
outsl
mov
pop
or
pop
pushf
jae
mov
mov
xchg
popa
jo
sub
enter
fdivrp
call
push
loopne
dec
cmp
xor
adc
mov
sti
mov
enter
rolb
ficomps
jae
or
add
mov
cmp
int3
lcall
mov
imul
xor
mov
jecxz
lret
cmp
fdivr
sbb
sbb
push
fildll
add
fcos
popa
jp
xchg
mov
jne
xor
push
push
add
enter
lods
mov
push
cmp
repz
imul
sub
push
sbb
cmpsl
add
xchg
rorb
and
imul
hlt
fildl
and
sbb
fistps
adc
and
pushf
push
pushf
lods
imul
or
jb
idiv
push
andb
cmp
jno
adc
lods
sti
je
adc
adc
ljmp
or
ljmp
mov
pop
iret
sar
rorb
xchg
cli
sbb
or
cmp
notl
mov
xchg
fwait
repz
ret
lds
add
push
xor
jno
lods
popf
or
cltd
jge
iret
or
cwtl
mov
clc
adc
or
fistps
cmc
mov
add
inc
jns
mov
inc
int3
imul
movsl
fdivrs
jmp
lahf
jae
enter
mov
xchg
lcall
mov
inc
test
adc
mov
sub
xor
ds
fld
jb,pt
mov
xor
std
loope
das
dec
testb
xorl
inc
xchg
or
insl
add
or
push
stc
insb
icebp
adc
je
ljmp
inc
or
jl
adc
outsb
sub
test
loope
scas
push
daa
xchg
mov
xchg
stos
fmul
mov
xor
test
dec
pop
aas
lret
push
popf
xor
xchg
mov
and
scas
in
inc
dec
mov
or
in
ss
lret
ljmp
jmp
jb
cli
mov
int
das
es
imul
mov
shl
jge
mov
out
loopne
mov
out
and
adc
popf
movsb
inc
mov
xlat
imul
inc
jmp
xor
rclb
jmp
mov
jl
xchg
popf
hlt
add
fwait
mov
inc
mov
inc
sub
repz
cmpl
orl
ds
dec
mov
xchg
xchg
in
xchg
cmc
xor
jno
shrb
push
push
jmp
pop
mov
add
dec
insb
lea
mov
ficomps
aad
mov
sbb
and
pop
add
bound
inc
and
dec
out
es
inc
aad
lcall
pusha
outsb
lds
dec
mov
cmpsl
inc
adc
ss
cmp
stc
lock
movsb
add
inc
add
rcll
ja
mov
jl
fdivrs
movb
lahf
mov
inc
scas
les
mov
adc
out
test
rolb
je
aaa
hlt
push
or
arpl
mov
test
outsl
cmpsl
push
xchg
in
xorb
pop
leave
mov
mov
push
or
pop
outsl
and
sahf
push
and
pop
mov
push
dec
mov
mov
pop
or
xchg
lock
outsb
loopne
push
sub
scas
jmp
loopne
xor
leave
sbb
inc
punpckldq
insb
aas
pusha
cmp
cmpsb
dec
into
or
adc
in
push
icebp
inc
adc
pop
rcr
popf
nop
mov
adc
dec
and
jmp
push
mov
and
sti
stc
lods
jle
ficompl
aaa
and
int3
push
lret
stc
ss
pop
xor
mov
aas
lahf
enter
jae
lret
sub
push
xlat
jbe,pt
punpckhwd
xor
sbb
ds
push
cmp
mov
out
insl
out
test
sbb
test
jo
ds
add
dec
inc
jnp
jae
fistpll
mov
repz
push
lods
add
imul
sti
mov
addr16
mov
mov
xor
sub
loope
in
in
and
and
xor
lock
mov
jge
out
leave
or
mov
sbb
nop
cmp
mov
push
fwait
sbb
sub
aas
loope
xor
or
fsubl
bnd
inc
pop
in
xchg
xor
aad
clc
das
outsl
das
jmp
ret
cwtl
icebp
fcoml
fmul
cmpsl
pop
ds
dec
pop
jmp
gs
gs
xchg
cli
ret
push
js
popa
ss
cmp
repnz
jne
leave
inc
sub
sahf
adc
mov
jle
jnp
cli
loop
outsl
lods
int3
push
push
mov
outsb
fdivs
xor
lods
add
test
cli
jno
dec
dec
out
lds
aad
fisttpl
pop
xlat
xor
js
pxor
hlt
xchg
int
and
inc
loopne
inc
aaa
ljmp
outsl
adcb
pop
aad
rorb
or
test
out
xchg
push
add
push
pop
inc
sub
data16
sub
and
loope
fwait
and
xlat
cmp
jmp
in
aas
mov
mov
push
js
xchg
xor
sub
aam
repnz
ja
scas
and
loopne,pt
sbb
push
cwtl
xor
ficompl
or
sub
adc
sub
inc
pop
dec
in
es
test
divb
mov
lea
pushf
ds
dec
xchg
out
xor
and
lds
or
mov
pop
call
mov
out
nop
lcall
xchg
clc
xor
sti
adc
mov
mov
jp
out
dec
pop
add
mov
cmp
out
sbb
imul
test
pop
lret
inc
jl
std
std
jbe
std
ss
xor
das
stos
push
addr16
bound
xchg
and
lods
lret
ficoms
fld
dec
pop
xchg
pop
sub
pop
sbb
adc
lods
ret
jae
sub
add
das
mov
shlb
test
out
cwtl
sbb
push
jl
mov
movsl
sbb
lret
pop
fs
mov
bound
sub
iret
mov
pop
pusha
jl
jecxz
adc
test
loopne
subl
sbb
jne
dec
gs
leave
outsb
inc
mov
lcall
daa
enter
sbb
dec
push
movsb
mov
jb
add
shlb
mov
dec
fists
fs
imul
or
daa
dec
mov
scas
rcr
jl
and
add
mov
test
js
lret
push
jl
int3
cltd
mov
push
push
xchg
cli
imul
inc
cmpsl
pop
adc
pop
push
mov
mov
push
clc
xchg
loopne
out
lock
loopne
or
inc
push
enter
push
adc
push
aas
push
pop
popf
lret
lahf
imul
mov
pushf
daa
jl
incb
addr16
xchg
insb
cli
and
out
in
cli
mov
push
xchg
rolb
cmp
or
mov
cmc
mov
dec
lcall
out
hlt
push
cmp
adc
dec
push
add
and
jb
jnp
jge
ret
addr16
push
push
and
or
js
adc
fisubrl
adc
fisttpll
adc
mov
sarl
fsubr
xor
int3
repnz
and
test
mov
adc
repz
lds
or
sarl
lcall
xor
subb
xchg
xchg
pop
in
or
je
push
cmp
loop
in
loop
icebp
aad
fiadds
imul
mov
or
or
mov
popf
in
sub
and
sub
sbb
into
clc
jge
push
jmp
mov
movsb
mov
mov
or
jecxz
pop
push
loope
and
mov
add
push
xor
mov
arpl
jp
add
outsb
mov
loope
stos
rolb
or
push
mov
inc
jne
test
adc
mov
and
incl
lret
push
adc
mov
out
addr16
mov
push
cwtl
iret
scas
outsb
and
jg
mov
adc
jl
movsl
xorl
icebp
shl
mov
mov
dec
loop
pop
mov
jae
add
int3
mov
jg
xchg
xchg
mov
pop
sub
aaa
mov
push
pushf
push
mov
in
mov
xor
inc
mov
outsb
clc
mov
out
sub
jno
movsl
fwait
cmp
add
jle
dec
out
push
fiadds
add
jmp
mov
cli
repz
xchg
and
lock
adc
pop
in
push
and
hlt
inc
pop
mov
icebp
pop
xor
push
sub
nop
pop
fisubl
sbb
jecxz
and
dec
pop
in
mov
pop
addr16
push
js
jne
lea
popl
ljmp
add
sub
mov
outsb
out
movsl
adc
ds
gs
mov
inc
xchg
pop
stc
push
das
and
sbb
mov
cmp
and
std
ret
cmp
enter
push
out
mov
push
inc
mov
test
adc
lods
testb
xlat
dec
xchg
clc
xor
cmc
mov
push
jae
sub
pop
pop
mov
in
das
inc
frstor
push
sub
pusha
pop
or
or
sub
inc
cmpsb
inc
cmpsb
xor
sub
mov
cmp
std
aaa
inc
jae
call
cs
lea
pop
bound
lods
pop
mov
stos
jns,pt
mov
or
bound
rcr
and
cmp
ljmp
cld
push
mov
mov
jns
out
popa
out
mov
call
in
sub
lahf
enter
push
cmpsb
lea
xchg
pushf
test
xor
pop
push
sbb
pop
andl
mov
fiaddl
idivl
flds
pop
out
loop
into
xor
aas
pop
into
inc
popf
or
mov
mov
xchg
push
jg
push
push
cwtl
scas
pop
inc
adc
adc
lret
fistpll
xchg
sbb
mov
insl
mov
mov
mov
xchg
popa
sub
stc
popa
or
adc
jnp
int3
cld
out
cmp
pop
fs
lcall
xchg
dec
sub
loop
fdivl
jmp
sbb
mul
in
or
adc
movsl
cmp
ror
cmc
mov
mov
inc
adc
das
fldl
xchg
add
popa
xchg
cmc
inc
cmp
cmp
dec
clc
sub
inc
rorl
loope
ror
enter
xchg
jg
pop
jmp
cltd
adc
ret
mov
loopne
xchg
cmp
or
popa
and
outsl
mov
mov
movsb
jb
or
in
insl
pop
sub
out
jl
cmp
xchg
cld
jno
xlat
leave
jl
imul
movsl
movsl
push
cld
add
mov
mov
fidivl
lcall
loop
loope
cmp
sub
mov
xorb
cmp
push
adc
pop
iret
lcall
mov
out
pop
subl
icebp
lds
mov
push
div
jl
mov
mov
push
aam
mov
mov
dec
mov
pop
ret
pop
xor
push
daa
sarl
cmp
xor
push
push
sbb
xchg
sbb
inc
mov
out
bound
shll
push
pop
xor
aaa
inc
lret
nop
mov
mov
adc
mov
pop
adc
movsb
sbb
fnstsw
scas
pop
daa
add
sbb
xchg
xor
cmc
ljmp
orb
fs
pop
push
inc
adc
mov
push
mov
mov
jae
add
xchg
inc
cli
inc
notl
fsubrs
mov
xorb
ficomps
jmp
mov
cmp
push
decl
cmpsl
jecxz
faddl
add
sub
sub
js
xchg
lahf
gs
cmp
sarl
loopne
add
ljmp
scas
mov
pop
rorl
in
inc
mov
loop
lcall
bswap
dec
sahf
mov
or
cld
sbb
sarb
lcall
cmp
in
fwait
arpl
sub
sub
mov
dec
aaa
enter
hlt
negl
repnz
fistl
lock
je
ret
mov
sub
dec
mov
icebp
pop
mov
xchg
and
pop
aad
cmp
arpl
cmpl
hlt
test
les
in
test
jmp
sub
gs
jl
cmp
orl
sti
dec
mov
out
pusha
mov
cmp
and
jl
movsl
cmpsb
ja
cld
std
push
stc
rorb
sbb
shll
faddl
inc
inc
jp
mov
and
and
ljmp
testl
test
out
sub
mov
outsl
cs
pop
xor
push
xor
adc
leave
fbstp
es
sub
sbb
repz
mov
jbe
mov
lods
rcll
push
jnp
hlt
aas
clc
pop
push
sub
gs
in
fisubrl
lahf
or
into
push
pop
addr16
sbbl
rolb
cmp
sub
xchg
adc
cmp
and
inc
add
push
xor
in
jmp
aaa
out
xor
aam
mov
jecxz
lods
stos
dec
scas
fldt
push
jmp
pop
cwtl
dec
lods
dec
mov
adc
test
xchg
sbb
push
push
dec
jmp
add
js
sub
mov
out
nop
popa
lret
sbb
mov
jl
loopne
loop
xorl
iret
inc
push
sbb
cmpsl
jp
dec
out
jno
inc
sbb
add
sub
cmp
pop
jne
out
pop
xchg
sub
sahf
lock
mov
pop
cltd
pop
dec
clc
das
aad
xor
les
mov
pop
out
adc
add
clc
xor
xor
sti
jge
mov
xor
cltd
and
in
xor
or
cmp
insb
or
or
jg
imul
in
dec
inc
pop
mov
mov
loopne
push
dec
sbb
cmp
sbb
repnz
shl
or
adc
mov
ss
xchg
bound
loopne
inc
add
loop
xchg
in
ret
out
mov
pop
adc
aam
fistpll
adc
or
sub
xchg
ja
lods
jmp
inc
push
into
jns
xchg
mov
fs
xchg
int
pop
mov
out
std
inc
jns
repnz
pop
mov
out
xor
cmp
fdivs
push
xchg
sub
jl
adc
bound
or
push
sub
stc
mov
or
in
xor
sahf
cmp
fs
fcoml
test
add
adc
xor
notb
add
movsb
jle
repnz
sahf
and
aas
ret
dec
popa
mov
imul
add
int
pop
xor
push
or
insl
dec
sbb
jge
xchg
xchg
sarb
xor
push
cmp
fwait
add
cwtl
fwait
dec
nop
push
fcmove
dec
or
push
adc
or
mov
movsl
push
sub
out
xlat
mov
push
add
push
sub
add
xor
push
jae
push
leave
xchg
xor
lods
cmp
push
or
mov
pop
insl
xchg
sahf
mov
mov
and
test
dec
fmull
adc
ljmp
mov
mov
push
mov
xor
mov
inc
or
and
xchg
ret
sahf
mov
insl
int
cmpb
in
jmp
inc
movsl
scas
lahf
out
push
inc
sbb
sahf
scas
xchg
pop
lret
arpl
sbb
cmp
sbb
js
addb
xor
out
test
incl
inc
fidivrl
in
cwtl
xor
aas
ret
lahf
xchg
jne
arpl
mov
mov
lods
int
add
push
in
jl
inc
cmc
mov
pop
push
popf
xchg
dec
aas
insl
xlat
jp
pop
fistl
and
ret
dec
lods
mov
adc
ds
pop
test
popa
add
and
cs
pushf
imul
hlt
jp
enter
sbb
or
std
sarl
add
cmp
push
xor
or
mov
arpl
data16
mov
adc
pop
adc
addr16
xchg
iret
test
fdivrp
dec
into
mov
jecxz
xor
mov
jns
add
push
dec
lret
mov
in
sub
cmp
pusha
pop
js
ss
test
in
mov
sbb
xor
push
std
and
sbb
cmp
adc
loope
aam
and
push
add
out
xor
shlb
ret
sarb
inc
mov
ss
test
cmp
fnstenv
mov
and
xchg
lods
mov
repz
pop
pop
je
sbb
fimuls
xor
sub
cmp
inc
sbb
pop
add
cld
fsubs
lahf
scas
mov
cmp
je
in
adc
arpl
sbb
jge
cmpsl
imul
add
stos
pop
mov
aas
nop
je
mov
dec
add
xor
sti
mov
bound
dec
cmp
idivl
add
ficompl
cli
ja
aaa
jmp
hlt
shrl
dec
lahf
push
xchg
cli
divl
mov
inc
inc
xor
and
pop
adc
dec
test
sbb
pop
xchg
rclb
sub
jl
push
inc
sbb
mov
add
into
xchg
mov
cmp
les
push
mov
popa
dec
xlat
in
mov
dec
popf
xor
fs
orb
cmp
mov
movsb
sub
xor
mov
ret
mov
clc
pop
leave
out
outsl
lods
mov
test
mov
dec
dec
pop
push
mov
lods
adc
es
push
pop
push
push
ljmp
adc
ffreep
call
xchg
xlat
out
xlat
in
push
pop
sbb
push
outsl
inc
sub
and
jge
sub
sub
cmpsl
xchg
aas
test
add
dec
mov
in
mov
lods
fcomi
movsl
dec
inc
mov
aam
mov
jl
jne
mov
std
lahf
pop
xor
xor
dec
mov
leave
imul
dec
and
add
filds
cmpl
push
cmp
bound
pop
in
xor
mov
hlt
push
pop
sbb
pop
out
inc
jle
mov
cmp
add
dec
repnz
les
xor
sbb
sbb
repz
mov
jmp
fimull
sub
enter
ss
mov
ret
and
mov
xchg
fisttpll
hlt
pop
imul
xchg
loopne
into
aaa
cmpsb
in
push
jp
in
mov
and
or
mov
jg
jns
mov
xor
and
and
outsl
mov
dec
mov
add
cltd
jno
repz
dec
pop
push
sbb
push
mov
scas
out
stc
mov
mov
add
dec
mov
fisttpll
test
movsl
sbb
jb
inc
or
adc
in
rol
es
adc
bound
jp
add
and
rorb
pop
shlb
xchg
cli
aam
push
pop
cmp
jne
or
aad
inc
cmp
aam
sub
jo
inc
shll
cmp
sub
xchg
pop
xchg
addr16
mov
pushf
out
test
repnz
push
cwtl
xchg
pop
std
das
mov
insb
shrl
lcall
movsl
scas
dec
cld
outsb
and
les
jbe
pop
xchg
sub
push
test
mov
sti
out
xchg
sbb
bound
fcomip
sub
lods
pop
push
push
jl
push
adc
and
and
mov
stc
xchg
ret
fsubrs
jne
ret
push
ds
cltd
cltd
repnz
mov
fwait
pop
sub
mov
xchg
jp
jne
cli
popf
rolb
xor
call
push
shrl
loope
jg
mov
outsb
add
dec
imull
sbb
iret
mov
loopne
xor
mov
out
stos
cmp
push
inc
mov
cmp
sub
into
sbb
lahf
adc
shlb
and
inc
cmpsl
fsubrl
dec
mov
mov
mov
mov
jne
shr
pop
mov
jle
mov
push
jge
in
mov
sub
mov
pop
adc
adc
push
cs
inc
lahf
into
xor
lret
pop
out
mov
std
or
mov
call
sub
add
push
stos
das
loop
pop
hlt
test
inc
paddsb
pop
sub
cmp
xchg
iret
nop
xchg
jo
in
out
dec
dec
lahf
div
sbbb
test
movsl
loope
loop
adc
add
xchg
rcll
add
push
fdiv
pop
dec
arpl
ret
jmp
sbb
je
xor
mov
add
jge
jmp
mov
dec
mov
stc
outsb
aaa
sbb
fs
cltd
shrl
mov
adc
or
idivb
movsl
fstl
mov
lock
xchg
jg
int3
insb
div
cwtl
jmp
repnz
mov
aas
adc
ds
fwait
insb
or
les
cmpsb
xor
inc
lock
sbb
jno
add
lret
mov
into
test
dec
inc
ja
mov
xor
inc
mov
mov
add
rcl
mov
scas
hlt
xor
lcall
jg
add
cmp
jmp
shrb
or
jg
out
xor
sbb
popa
std
dec
cmpsl
out
dec
rorl
sbb
fdivrs
int
in
scas
ds
and
pop
bound
cmpsb
mov
vpcmpgtw
jmp
hlt
adc
inc
daa
out
pop
cmp
iret
push
mov
cmp
adc
cmp
je
test
aad
mov
add
adc
lea
and
or
sub
popa
arpl
sbb
cmp
sbb
xchg
data16
cmc
pop
loopne
pop
sti
test
jnp
ret
repz
sub
adc
push
or
push
into
test
push
fistl
cmp
shl
lret
shrb
sub
mov
cmp
jle
jb
in
pop
mov
cmp
jle
repz
xchg
adc
cmp
inc
add
lods
mov
jb
mov
push
dec
mov
adc
shlb
cmp
jno
popf
insb
push
lds
push
lea
jle
inc
xchg
xchg
int
push
test
xor
ljmp
xchg
clc
push
les
loopne
std
hlt
xchg
lods
repz
jne
mov
sub
push
add
jmp
cmp
arpl
rcrb
inc
xchg
and
pop
add
sbb
sahf
cld
push
jmp
mov
jle
adc
adc
dec
arpl
sbb
cwtl
xchg
cld
dec
inc
fcomps
dec
leave
out
mov
mov
sar
int3
divb
sbb
loop
sbb
sub
and
push
out
jle
sub
shll
dec
jmp
sbb
mov
out
push
popa
jle
push
sbb
mov
in
test
lods
insl
aad
dec
daa
cmpsb
mov
insl
sbb
sub
xchg
jns
out
cmp
push
pop
cmp
xor
sub
jmp
adc
pop
mov
sbb
int
mov
outsb
ret
push
lods
leave
sub
xchg
loop
test
mov
hlt
clc
ljmp
jmp
inc
data16
jg
cmp
jno
test
adc
mov
nop
sbb
mov
xor
sahf
mov
jge
in
shl
and
jmp
add
mov
fisttpl
loopne
lcall
jno
imul
jge
cmpsl
ret
repnz
mov
dec
add
cmp
push
jl
jmp
push
sub
jb
pop
aad
rcrb
jno
fwait
ljmp
mov
jno
flds
enter
mulb
adc
inc
xchg
sbb
imul
inc
je
movsb
pop
clc
xor
cld
bound
jno
mov
sahf
clc
jg
or
addr16
or
mov
sub
lods
loopne
sub
adc
adc
push
and
in
jmp
insb
mov
dec
pop
mov
rclb
nop
iret
dec
mov
xor
cmpsb
dec
nop
sub
adc
push
xchg
mov
cli
pusha
pusha
and
je
cmp
stos
xor
add
inc
sub
enter
pop
jecxz
push
pop
and
sub
sahf
imul
cltd
mov
stc
pop
outsb
sbb
into
or
popa
add
repnz
add
fisubrl
mov
cltd
ja
adc
pop
mov
push
xor
movsl
cmp
xchg
mov
mov
push
popf
jo
loopne
xor
jnp,pt
lods
and
out
pop
int
and
or
orl
xchg
xor
dec
push
out
sti
mov
jo
outsb
lea
sbb
push
pop
xor
pop
push
mov
movsb
daa
dec
inc
jecxz
mov
sub
pop
out
push
scas
cmp
adc
loope
shl
fs
jl
loop
fisubl
xchg
push
hlt
fists
adc
out
and
sub
or
cmp
shrb
add
push
add
jg
mov
jb
subb
test
ja
inc
or
movsl
adc
sbb
fcompl
pop
add
sub
inc
in
shlb
jnp
sub
adc
mov
xchg
mov
sbb
bound
imulb
sub
in
adc
nop
cmp
cmp
lea
cwtl
mov
inc
adc
jg
push
or
jno
xchg
movsl
inc
fs
mov
inc
mov
push
push
cli
and
fstpt
jns
or
int
add
into
xor
outsb
in
test
jle
mov
scas
push
lcall
mov
push
jne
in
jmp
out
loop
fwait
popa
push
sub
xor
in
jo
push
jle
pushf
mov
or
mov
shll
bound
negl
xchg
cmp
ss
or
xlat
inc
pop
mov
pusha
gs
mov
and
stos
je
xchg
shl
cld
rorl
add
push
sbb
gs
mov
sbb
dec
cmp
cmp
lods
dec
lret
push
sbb
jp
pcmpgtw
sub
test
jae
push
test
rclb
outsl
out
cli
sub
minps
test
xchg
xchg
lods
mov
xor
insb
dec
outsb
mov
mov
dec
sub
inc
out
fiadds
popa
sbb
mov
and
loopne
dec
ficoms
les
mov
cmpl
xchg
cmp
jge
in
inc
test
rcll
inc
in
dec
ficoml
jns
cli
jp
or
inc
movsl
adc
adc
sbb
fwait
and
outsb
lds
or
es
out
ja
jnp
es
jmp
ffreep
pushf
xchg
cmp
vminps
jno
iret
and
popa
test
mov
shll
cwtl
icebp
fdivrs
lea
or
repz
nop
add
stc
and
xchg
xor
xor
icebp
jp
cmp
into
fcmovnb
add
fwait
test
add
in
call
cmp
mov
fs
xor
jns,pn
push
adc
fptan
mov
call
sbb
sarl
xor
fsubs
mov
outsl
push
or
and
mov
lock
fisubrs
fisubs
inc
fistl
stos
out
movsb
jne
jge
adc
mov
sbb
mov
mov
in
add
and
xlat
cwtl
lcall
arpl
xchg
notl
and
dec
movsb
lea
pop
inc
pop
dec
xchg
ret
fs
jmp
test
xor
loop
loopne
inc
das
das
cli
jecxz
pop
jb
fistl
hlt
sub
jbe
cwtl
repnz
std
cmc
scas
scas
pop
xorl
xor
rcrb
adc
xchg
inc
add
pop
mov
push
setae
fcoml
pusha
ss
data16
out
cmp
lret
imul
jge
jns
or
mov
popf
mov
dec
fdivr
data16
ss
shl
icebp
mov
outsb
add
push
push
and
inc
out
in
ja
rep
popf
jmp
shll
inc
jmp
sub
mov
mov
mov
and
dec
cmc
mov
add
ds
mov
pop
cmp
mov
and
mov
inc
xchg
fcomps
dec
inc
mov
mov
shll
cmpsb
mov
imul
and
mov
sahf
push
pop
in
test
nop
repnz
fbstp
popa
ljmp
or
pop
sti
jne
and
cmpsb
call
cmc
push
mov
jb,pt
adc
lods
out
mov
jnp
push
pop
scas
imul
inc
push
fwait
pusha
negb
cmp
or
jl
or
testl
adc
mov
icebp
mov
es
sbb
adc
mov
mov
pop
and
daa
ret
aam
push
push
sub
js
mov
incb
popf
sub
mov
or
jmp
rol
mov
xchg
cmp
stc
mov
dec
dec
pop
enter
leave
rcrl
pop
sbb
lret
in
into
and
mov
ljmp
inc
stos
mov
mov
xchg
cmp
fstl
shlb
ret
adc
aas
in
sub
ret
inc
outsb
aaa
sub
out
xchg
push
ljmp
or
decb
negb
inc
jnp
mov
stos
movb
and
mov
xchg
sar
jmp
stos
mov
in
ret
mov
ret
aam
inc
or
popf
inc
sbb
stos
xchg
dec
repnz
inc
adc
cmpsb
sbb
inc
imul
pop
in
cmpsl
jle
sbb
in
or
cmp
sub
fwait
cltd
or
mov
adc
movsb
pop
icebp
dec
stos
pusha
outsb
icebp
lods
inc
xchg
xchg
loopne
ss
pop
cwtl
pop
mov
loop
push
mov
push
add
inc
in
js
in
jg
or
sub
stc
add
push
cltd
shl
pop
in
push
in
adc
jge
push
jge
test
dec
or
add
in
and
xchg
mov
mov
mov
popl
fiaddl
pop
cmp
fisubrs
lods
or
sbb
data16
sti
loope
fcmovb
mov
jmp
fcoms
in
mov
ss
xchg
sbb
add
pop
es
sahf
and
call
xchg
insl
pop
push
jg
xor
cld
inc
push
sub
inc
loopne
xchg
push
or
test
mov
adc
sbb
xor
popf
sbb
and
and
jo
lret
xchg
cmpsb
mov
xchg
push
imul
test
lcall
aad
sarb
jae
in
mov
pushf
sbb
xchg
pushf
into
adc
xor
addr16
int3
hlt
test
or
xchg
lret
decb
mov
test
xchg
mov
mov
push
outsl
xchg
int3
jo
sahf
push
xor
xchg
mov
sub
test
jns
jno
aad
mov
movb
lret
mov
cmp
and
inc
pop
loope
je
bound
and
dec
jno
int
and
pop
mov
mov
lret
nop
dec
cwtl
stos
or
or
das
adc
dec
stos
cmp
and
out
adc
call
mov
dec
cwtl
in
mov
jecxz
pop
stos
pusha
gs
lock
test
sub
clc
into
mov
cltd
pushf
mov
stos
mov
ljmp
mov
hlt
mov
ss
leave
xchg
es
mov
or
clc
jge
scas
mov
das
clc
ds
cmp
enter
loop
xchg
pushf
aad
int
loop
cmpsl
adc
std
add
cmpsl
jno
mov
inc
daa
fwait
into
xor
aaa
dec
sbb
shll
mov
in
pop
hlt
pop
stos
jnp
shll
insw
scas
dec
mov
inc
cmp
jb
add
mov
xor
jns
push
adc
or
sbb
xchg
sbb
data16
ficoml
in
lds
jmp
aad
and
jno
fcmovnu
int3
dec
xchg
ret
cltd
movsb
addr16
lcall
fidivrl
lock
mov
cmpsl
sbb
sub
mov
xchg
sbb
inc
insb
pop
xlat
andb
nop
scas
mov
fdiv
out
pop
and
nop
pop
adc
mov
cld
fs
sarb
xchg
xchg
cmp
in
jo
stos
add
mov
aad
jle
fs
pop
cmpsl
iret
jns
mov
iret
stos
inc
lock
pop
mov
movsb
xchg
push
stos
or
fistpl
and
pop
inc
out
cmp
cmpsb
pop
push
repnz
or
movsl
jbe
ljmp
or
shrb
xor
cmp
call
icebp
scas
jp
mov
shl
mov
fwait
push
dec
xchg
xchg
jbe
mov
neg
rclb
popa
ljmp
loope
enter
inc
or
jo
cmpsl
add
jo
xor
adc
add
cltd
mov
imul
stc
outsb
push
fidivrs
pop
add
es
xchg
and
cmp
and
xor
cmp
shll
jp
push
jo
jle
xchg
in
into
out
es
cmpsb
mov
hlt
popf
bound
cmp
es
sbb
popf
sbb
mov
int3
xchg
in
push
daa
movsb
or
fucomp
lret
or
subl
mov
daa
inc
lahf
ds
scas
nop
repz
fdivs
xor
cmp
sahf
mov
jge
sbb
fistl
pop
cli
fcomps
hlt
lods
mov
push
aas
test
mov
mov
xchg
xchg
xchg
and
xor
xchg
sbb
sahf
jne
jl
ret
nop
jnp
and
push
push
push
aas
push
lahf
or
in
mov
push
int
popf
fwait
push
test
push
sbb
push
neg
test
movsl
insl
out
mov
je
ja
sbb
mov
xchg
or
sbb
or
jmp
pop
cltd
dec
xchg
dec
push
sahf
lret
loop
out
adc
sti
push
push
test
push
jge
jo
add
movl
mov
fidivrl
xchg
fisubl
dec
js
push
sbb
lea
cld
pop
mov
sbb
fidivs
fdiv
xor
enter
cmp
cli
push
cmpsl
bound
and
or
xchg
data16
push
shll
movsl
mov
push
jns
sub
fildll
xchg
mov
or
ljmp
pusha
sbb
pop
lea
mov
outsb
fucomi
ljmp
xchg
test
mov
mov
imul
aas
inc
push
rcrl
mov
adc
sti
stos
subb
outsb
xor
and
dec
add
pushf
in
xor
dec
push
insb
rcrl
xchg
test
popa
xor
andl
and
adc
clc
push
cltd
mov
adc
imul
shrb
and
push
dec
cmp
add
pop
lcall
mov
add
mov
imul
sti
outsb
popf
icebp
pusha
sub
inc
mov
pop
mov
and
xor
mov
loope
fnstsw
pop
dec
rcll
test
or
pop
push
test
ffree
cmpsb
push
xlat
sbb
push
addr16
inc
lcall
movsb
adc
popf
adc
push
and
pop
sbb
mov
inc
inc
jb
fsubl
adc
or
mov
fistl
lcall
jb
sbb
data16
test
sub
iret
xchg
in
mov
test
jmp
cmpb
insl
adc
jnp
test
pusha
inc
sub
and
mov
jecxz
cmp
inc
pop
jo
jbe
shl
popf
in
xchg
bound
ffree
jo
movsb
push
ret
repnz
xlat
pusha
mov
fcmovne
rorb
sbb
sub
clc
cmp
push
jg
sbb
adc
cmp
push
fldt
xchg
xor
mov
ljmp
inc
dec
add
jl
aas
mov
out
mov
rcrl
pop
test
jns
xor
pop
or
mov
pop
sbb
mov
jne
or
mov
pop
fildll
rclb
daa
sbb
jnp
inc
mov
push
shrl
outsb
repz
add
xchg
cmpsb
jp
xchg
mov
sbb
mov
dec
sub
clc
in
cmp
rorb
ret
stc
call
jae
xchg
cmp
sbb
inc
and
movsl
sbbb
outsb
std
repz
loopne
in
fcomps
inc
push
sub
int
xchg
into
jne
addr16
test
leave
mov
cmp
lea
int
add
dec
mov
push
and
test
mov
into
in
popa
pop
mov
shll
aas
lret
xchg
movsl
rolb
mov
fidivl
push
mov
sarb
xchg
jo
call
ljmp
xlat
xchg
mov
add
rcr
daa
push
aas
mov
mov
xchg
fnstcw
xor
int3
call
fcmovu
mov
aaa
or
mov
and
in
jg
xchg
pop
cmp
rcl
mov
lahf
xchg
xor
enter
out
sbb
imul
enter
xor
sbb
cltd
jno
roll
xor
lea
mov
lea
hlt
pop
mov
xchg
adc
mov
pusha
jne
dec
fs
aaa
in
inc
int3
adc
lods
das
add
push
xor
leave
sahf
rol
loope
xor
dec
mov
xchg
mov
lea
push
sub
into
out
xor
xor
add
pop
add
pop
xchg
outsb
cmp
popa
dec
enter
cmc
mov
loopne
lds
or
fnsetpm(287
jo
and
dec
jo
mov
insl
add
je
sub
push
loopne
aas
xor
and
leave
xchg
in
pop
popf
push
out
mov
and
xor
add
fbstp
cmp
fstpl
and
xchg
jbe
lods
jle
sub
imulb
push
adc
mov
dec
adcb
push
jl
cmpsl
mov
pushf
shlb
xchg
rcrb
pop
push
jb
out
push
stos
loope
mov
mov
cs
pusha
jns
ljmp
add
movb
out
lahf
jae
xor
imul
mov
push
sbb
movd
inc
xorl
repnz
fwait
hlt
xchg
mov
push
imul
das
test
cmp
jbe
cmp
test
push
aad
adc
mov
movsl
cmpsl
out
mov
dec
incl
shrl
push
sarl
fmull
subb
sub
mov
stos
stos
jnp
pop
xlat
add
mov
stc
fistps
ja
ficompl
cs
enter
pop
imull
dec
repnz
and
cmp
jno
inc
adc
xchg
fimuls
jmp
mov
or
xchg
stos
lods
loopne
out
push
lret
cmpb
push
iret
pop
sbb
jae
into
ret
push
inc
or
inc
mov
mull
dec
jl
call
jns
push
outsl
jmp
mov
xchg
cmp
inc
iret
pop
ror
bound
mov
loopne
xor
shl
jb
adc
jae
out
mov
lock
sbb
test
cmp
pop
loop
and
xchg
fidivs
inc
pop
dec
xchg
adcb
push
add
mov
aas
bound
mov
dec
cmpsb
test
jge
mov
test
ja
push
mov
roll
fs
stos
xchg
sub
sub
push
test
call
or
out
pusha
or
jecxz
jo
sub
cltd
pop
mulb
adc
aaa
mov
testl
xchg
inc
xor
data16
mov
push
test
rcrl
imul
inc
mov
xchg
pusha
xlat
aaa
sbb
mov
xchg
les
loop
mov
add
loopne
pushf
sub
inc
loop
pop
or
insl
inc
pop
insl
lods
int
xor
int
in
outsl
or
jle
mov
sbb
inc
and
aaa
ret
jecxz
jge
js
sbb
or
shll
ficomps
cmp
rep
cli
popa
push
addr16
jle
mov
mov
push
popf
cmp
jge
or
sti
fs
pop
movsb
inc
pop
scas
add
lahf
loope
fs
adc
jg
in
inc
push
test
sub
xchg
arpl
dec
out
cmp
pusha
and
push
je
xchg
xchg
fmuls
int
lods
or
sti
mov
jmp
rorl
popf
lds
js
loope
xor
aad
mov
adc
mov
mov
enter
movsl
pop
ret
sbb
push
pop
test
xchg
or
jmp
fcmove
insb
adc
xchg
mov
cmp
dec
push
jae
xchg
addr16
inc
cwtl
repnz
and
jb
sub
and
push
xchg
addr16
mov
jmp
sbb
sbbb
cmpsb
lock
push
lahf
jbe
sti
add
xchg
orl
stos
push
jne
jecxz
insl
xchg
fstp
addr16
xor
jnp
mov
sbb
add
pop
mov
or
xor
fnsave
pop
repz
add
incb
cltd
push
xlat
in
add
in
sbb
add
inc
call
daa
cmpsl
and
xchg
and
adcl
dec
jg
and
mov
add
lock
inc
dec
stos
scas
rolb
dec
mov
je
or
movb
cmpsb
ja
cli
mov
nop
arpl
stos
push
sub
in
xor
mov
adc
cli
cs
adc
std
insb
test
dec
mov
jns
cmpsb
push
out
cmp
in
cmpsl
xchg
sbb
and
mov
pop
ret
push
fdivrl
jle
cmp
inc
mov
mov
pop
cmp
adc
pushf
cmpsb
and
mov
jbe
pop
pop
sub
arpl
push
fcoms
les
in
mov
jmp
and
lahf
test
sarl
inc
sbb
es
xchg
pushf
jbe
popf
mov
mov
adc
dec
fxam
xchg
jnp
insl
fsubrs
xor
sub
jmp
sbb
or
or
inc
sub
mov
lock
inc
ret
shl
adc
inc
mov
dec
movsb
notb
push
push
loope
dec
pop
xchg
xchg
xor
inc
mov
cmc
popa
sub
cmp
lcall
xchg
daa
in
stos
fwait
and
leave
cli
jg
xchg
je
lahf
sub
shrl
loopne
jecxz
call
sarb
rorl
insl
lock
scas
aas
inc
push
push
clc
pop
or
mov
jg
movb
push
inc
call
cmp
out
mov
jp
ds
add
push
sub
andl
mov
pushf
test
pop
mov
push
loope
movsb
fsts
xor
lods
cli
mov
adc
inc
xor
mov
inc
mov
das
inc
or
and
mov
out
xor
mov
sub
cmc
xchg
sbb
push
bound
push
sbb
int
repz
dec
lret
les
cmp
sahf
or
cmp
cmp
stos
add
jmp
fwait
or
xor
ljmp
bound
stos
cld
mov
lods
shr
int
fdiv
add
sbb
adc
mov
fxam
fcmovbe
xchg
adc
stos
ja
lods
inc
popa
jne
shll
sub
sub
cmc
xor
inc
lret
decl
push
sub
adc
dec
sub
dec
and
dec
in
popf
outsb
push
pop
xchg
jo
cmp
adc
mov
mov
and
cwtl
icebp
xorl
pop
sahf
inc
push
in
push
inc
movsl
in
or
push
fmul
dec
or
fdivrl
or
ficompl
inc
push
or
lcall
push
roll
test
jno
cmp
stc
aas
and
push
out
fbld
dec
push
loope
call
cmp
sub
sbb
mov
mov
movsl
or
mov
rol
sub
mov
mov
push
mov
leave
jbe
xor
pop
pop
sbb
inc
ja
fistpll
stos
add
sbb
push
dec
xlat
andb
cmpsl
pop
rcrl
ficomps
push
adc
push
aas
adc
shl
xchg
jb
fnsave
xor
sbb
sub
mov
pop
inc
dec
out
jg
cmpl
push
push
mul
adc
imul
mov
frstor
lret
mov
or
jae
sub
and
cmc
mov
iret
or
push
pop
inc
cmpsb
xchg
cmp
lret
pop
dec
inc
jnp
add
lea
scas
sub
jbe
fs
push
jmp
sarl
stos
pusha
test
lods
add
ss
push
ja
js
popa
ljmp
pop
cs
loopne
push
add
cmp
bound
mov
movsl
adcb
mov
jns
cmp
das
cmp
adc
xor
jl
cwtl
cmp
out
frstor
mov
lods
mov
imul
scas
add
sbb
xchg
cmp
mov
xchg
insl
call
subl
movb
test
xor
dec
pop
mov
aad
inc
xor
andb
das
mov
jecxz
jecxz
mov
roll
mov
aas
pushf
inc
mov
aas
xchg
mov
and
out
xor
mov
pop
xor
jae
cld
sbb
andb
push
mov
out
psrlq
pminsw
ss
inc
mov
dec
jns
insl
rclb
cvtps2pi
movsl
dec
mov
push
cmp
lcall
jle
jle
xchg
inc
leave
outsb
js
fmull
mov
aaa
pop
imull
sbb
jmp
push
push
lds
jp
out
out
jl
jge
jl
repnz
mov
pusha
shrl
daa
or
sub
push
cli
and
push
push
scas
bound
xchg
fldenv
loope
mov
dec
imul
mov
mov
mov
or
cmpsb
inc
stc
adc
add
jo
jp
imul
cmp
andl
daa
out
ds
stos
out
into
push
loop
outsl
nop
xor
std
dec
mov
and
scas
add
popa
inc
xchg
movsl
or
xlat
and
add
je
or
test
in
add
add
xor
in
adc
fmull
lock
mov
popa
xor
mov
fst
mov
mov
inc
cmpsb
in
repz
adc
xlat
fnstcw
cli
mov
mov
out
mov
lock
adc
ja
int3
test
dec
lcall
jo
das
jns
shl
or
fcoml
dec
shlb
inc
in
shll
jo
mov
arpl
fistpl
xchg
xorb
mov
loop
mov
xchg
enter
cli
inc
sbb
jb
xchg
int3
std
dec
pop
mov
adc
jae
cwtl
push
mov
mov
adc
popl
push
xor
mov
mov
xor
add
sarb
out
push
nop
aad
aam
lock
sub
mov
push
fwait
xor
lds
inc
mov
add
xor
mov
mov
add
jae
mov
sbb
mov
mul
fwait
dec
mov
out
js
jae
mov
mov
ret
cmp
ja
add
adc
and
mov
mov
pop
cmp
push
cmp
xchg
lret
cmp
decb
test
cld
shl
leave
or
jae
push
and
xchg
or
in
dec
stos
mov
adc
stc
xor
push
jl
mov
adc
stos
fstpl
pusha
mov
xchg
ss
mov
ljmpw
lock
fldpi
lahf
out
inc
rcr
xchg
mov
mov
dec
popf
jnp
mov
and
mov
frstor
mov
ret
pop
sti
adc
stc
mov
ret
xor
pop
add
push
jle
icebp
pop
cmp
in
mov
jecxz
pop
sub
xchg
sbb
fdivl
gs
or
sbb
and
aaa
push
cld
mov
test
js
cmp
je
pop
xchg
lock
loop
ds
addr16
fisubrl
adc
push
xchg
cmpsb
sub
or
mov
mov
pop
shll
cmp
lahf
ror
sub
rcr
gs
jno
in
mov
mov
pop
arpl
sub
pop
mov
inc
test
cmp
shl
mov
jge
shll
cmp
sub
int3
aaa
repnz
mov
lds
aad
lock
jns
xor
xchg
movsb
mov
js
push
add
scas
cltd
movsl
push
xlat
dec
add
iret
sbb
out
xchg
mov
or
insb
fidivrs
jle
push
fsubrs
lods
nop
dec
sub
sbbb
push
inc
dec
fsubs
inc
stc
add
push
cmpsb
lock
sbb
pop
xor
xchg
inc
insb
jb
cmp
bound
add
cmc
push
js
stc
sub
cs
in
mov
mov
xchg
mov
xor
jbe
aam
out
sub
jmp
inc
cmp
jmp
addl
adc
lea
cmc
das
mov
and
mov
push
inc
mov
or
arpl
push
add
adc
dec
jmp
in
or
popa
push
mov
push
xchg
sbbb
cld
bound
and
ror
and
sti
fwait
stos
sub
mov
fistps
push
push
andb
inc
hlt
aaa
inc
fs
test
test
int3
and
aam
es
pop
loop
fstl
aas
xchg
xchg
sbbl
sub
xchg
lods
rcl
mov
add
test
gs
mov
push
popf
fsub
faddl
push
fwait
sub
dec
jno
les
sbb
xchg
mov
sahf
sbb
cmp
or
mov
mov
jne
repz
cmp
jge
mov
es
mov
lcall
sbb
xchg
cld
cmc
jo
jmp
dec
jnp
aas
mov
xchg
movsl
fcomip
daa
stc
fwait
and
ds
scas
dec
lds
std
lods
dec
fsubrs
aam
pop
lahf
sysret
pushf
daa
adc
add
cmpsb
pop
mov
rolb
mov
in
aad
inc
gs
mov
sub
push
pop
jmp
nop
xor
and
pop
pop
sbb
mov
mov
sahf
mov
std
and
fcoms
shll
and
add
inc
dec
dec
loopne
ja
jno
xor
xorl
push
push
mov
dec
sbb
ss
jmp
add
push
xor
cmp
mov
lds
fwait
sub
or
push
jne
dec
mov
fwait
jecxz
jo
sbb
jno
call
dec
aaa
mov
out
mov
mov
xchg
out
setp
out
push
xorl
adc
mov
mov
sarb
jp
jne
je
testl
or
or
in
cld
jne
pop
xor
push
out
push
mov
pusha
cmp
mov
imul
cmp
dec
mov
pop
insb
loope
xchg
aas
inc
sub
fnstsw
inc
pop
or
dec
cmpsl
shll
test
lret
cwtl
lds
xchg
ret
add
fwait
jnp
dec
ds
add
or
pusha
nop
and
pop
daa
push
mov
testl
push
mov
sbb
sbb
add
mov
ret
out
lods
pop
rcrl
outsb
dec
mov
and
and
xor
cmp
or
hlt
inc
rclb
test
jo
add
xor
mov
xchg
push
std
aas
or
push
push
cmp
lods
inc
add
jle
loopne
push
cmp
push
out
aas
std
pop
sub
or
inc
fdivs
rorb
pop
push
gs
push
hlt
mov
push
rol
jle
xchg
sahf
xlat
lea
clc
inc
addr16
mov
sub
and
inc
add
jmp
dec
hlt
inc
jmp
or
cmpsl
cmp
fsubl
pop
xchg
push
mov
sti
mov
push
push
arpl
andb
repnz
rolb
insl
outsl
cmp
mov
nop
movsb
adc
sbb
arpl
adc
andl
or
jno
orl
xlat
out
fwait
ss
mov
cli
and
jbe
sbb
xor
imul
cld
cmc
rcr
scas
xor
cmp
mov
jle
jns
or
dec
test
mov
leave
jle
fldenv
pushf
loope
inc
jo
jns
repz
or
imul
ret
sbb
push
js
aas
scas
cmpsl
push
stos
sub
gs
mov
lcall
pop
sub
shlb
xchg
scas
stos
xchg
stc
or
scas
xchg
jnp
hlt
repnz
pop
sub
mov
shlb
jg
jp
mov
jnp
add
fnstenv
mov
hlt
test
xor
aaa
or
test
cmp
xchg
lret
dec
jo
cmpsl
xor
sahf
loop
dec
jb
dec
jae
stos
push
scas
adc
stos
lods
shl
movsb
movswl
or
mov
xchg
clc
lret
dec
jge
ffreep
push
adc
and
outsl
scas
sahf
push
push
push
sahf
stos
test
int
push
arpl
sbb
and
add
popf
lcall
addb
frstor
adc
sub
sti
orb
or
lcall
add
adc
mov
rcl
popl
loope
repz
das
arpl
mov
in
imul
and
xchg
pusha
add
mov
xor
loopne
add
aam
cmp
fisubl
subb
loop
inc
ficoms
push
loope
hlt
stos
fbld
jne
mov
in
insb
xchg
icebp
mov
sbb
pop
push
in
aas
adc
mov
shl
push
ret
dec
popa
dec
ja
ja
push
cmp
stos
imul
or
pop
out
pusha
jge
adc
mov
bound
fndisi(8087
nop
cmp
fcmovnb
rcll
dec
fsubl
pop
lds
pushf
loope
jne
notl
xor
push
pop
insb
rclb
in
dec
inc
mov
leave
xor
cmpsl
xchg
shll
mov
jne
cs
jge
ljmp
add
lock
mov
shrl
or
sarb
cmp
inc
mov
arpl
iret
leave
aas
xchg
lcall
jl
rcrl
and
or
pop
fwait
int
adc
push
jge
int
sti
dec
loopne
inc
lds
pop
and
sub
test
icebp
dec
cmp
sub
popf
cmp
inc
or
xor
add
popa
ja
mov
mov
dec
arpl
xor
xor
imul
shll
stos
mov
repz
mov
cmp
sub
pop
insb
sbb
shll
lret
or
popa
inc
xor
xor
shrl
mov
sahf
mov
push
les
cmp
mov
jmp
or
mov
mov
fcomps
je
jae
push
dec
inc
inc
pop
aas
cmp
mov
sbb
lods
loop
mul
jno
add
xor
adc
add
xchg
cmp
mov
xlat
cli
in
je
in
popf
dec
jne
mov
outsb
pop
sub
fwait
dec
or
mov
add
flds
sub
nop
mov
pusha
ss
arpl
sbb
in
xchg
fmuls
pop
mov
es
fimull
mov
ljmp
or
fadds
lock
popf
xchg
and
adc
imul
outsl
push
jno
and
mov
mov
int
movsl
mov
int
mov
pusha
push
jo
mov
cmc
adc
movl
stc
imul
test
imul
pop
ds
scas
ja
jp
mov
or
push
xchg
pop
mov
sub
or
mov
icebp
scas
js
xchg
adc
popa
imul
cltd
mov
xchg
and
xor
test
dec
dec
push
mov
or
jns
mov
add
shlb
subb
adc
rclb
push
std
sub
push
add
inc
dec
jns
xchg
jns
push
stc
mov
mov
aam
mov
or
sahf
xchg
mov
out
pusha
cmp
in
jge
jne
xor
mov
sub
xchg
sbb
enter
scas
lahf
out
sbb
sbb
loop
sahf
add
lcall
xor
mov
mov
and
sub
and
sbb
cltd
jnp
jg
add
cltd
repz
test
pop
shlb
push
xor
popf
sarb
jp
test
jb
add
cmp
push
pop
pop
push
imul
push
push
cs
jns
subb
sbb
cmp
pushf
fisubrs
push
and
or
jo
mov
nop
std
mov
and
nop
enter
fs
dec
jnp
je
ret
and
out
lahf
jle
lock
xor
push
sbb
push
mov
jl
sub
cmp
rcr
xor
push
xlat
xchg
test
cmpsb
inc
jmp
inc
xor
out
ss
cwtl
ja
ljmp
js
xor
add
xchg
lds
data16
push
ljmp
or
sub
cmp
xor
dec
xlat
or
pop
out
mov
cwtl
sbb
jae
test
movsl
repnz
in
mov
adc
jns
pop
aaa
sarb
notl
int
mov
fs
push
cld
leave
lret
iret
out
xor
and
je
mov
xor
mov
insl
clc
mov
dec
lahf
xchg
hlt
xchg
dec
lret
fsub
mov
xor
sahf
add
mov
jno
adc
mov
loopne
fcomip
lock
aas
ret
aas
jbe
pusha
inc
ss
test
test
cli
push
in
push
jecxz
and
fstps
and
in
sbb
push
cmp
push
aam
push
mov
shrb
mov
sbbl
add
ljmp
into
mov
push
orl
push
adc
jmp
dec
cltd
mov
pop
out
rorl
out
jg
enter
ljmp
fiadds
xchg
sbb
fs
jo
test
add
push
adc
ljmp
mov
add
inc
dec
enter
sbb
aad
cltd
dec
cli
enter
stc
inc
mov
xor
out
xchg
pop
pop
cmp
dec
push
stos
hlt
jae
sbb
fnstcw
je
lods
les
shl
js
dec
mov
pusha
dec
sub
push
in
pop
dec
aaa
pop
sbb
mov
dec
decl
idivb
in
popa
jecxz
mov
xchg
xchg
insl
xchg
hlt
and
push
mov
jp
lret
dec
xor
test
stos
jne
and
push
push
xor
mov
pop
mov
inc
mov
jmp
inc
push
sub
mov
mov
scas
aad
test
stos
inc
pop
mov
sub
sub
cld
sbb
or
imul
dec
and
jmp
imul
adc
sub
sbb
jp
mov
imul
sub
aaa
xchg
mov
jae
fsts
cmp
pop
lahf
popw
mov
ds
push
mov
test
fs
jmp
and
clc
lods
jne
fidivrl
xchg
sub
add
add
int3
push
ret
movsl
xor
xchg
add
sub
xchg
xchg
ror
inc
inc
loop
in
ss
sti
stos
icebp
xchg
fildl
adc
bound
in
call
cmpsb
cmc
jbe
jmp
push
mov
cmp
inc
ret
or
aaa
xchg
bnd
pop
dec
data16
lds
sub
mov
mov
dec
cmp
dec
pop
adc
cmpsl
adc
sti
mov
xchg
sbb
cli
stc
cmp
xor
cli
ret
mov
jl
das
das
mov
enter
mov
pop
jbe
in
jg
push
lahf
cmc
add
xchg
sub
in
dec
pop
popa
ljmp
cli
mov
lds
out
mov
push
jle
push
mov
xchg
out
jno
cmp
jge
dec
or
int
xchg
outsb
push
loopne
adc
cmp
mov
repz
and
inc
ljmp
icebp
fcomip
out
orb
sub
or
addl
cmp
push
push
jmp
test
pop
test
adc
mov
loope
pop
sbb
mov
or
out
shlb
cli
dec
push
in
fucomp
pop
fstpt
insl
sub
scas
test
jp
loope
push
xor
fs
icebp
dec
xchg
lahf
bswap
cli
jno
and
lea
jle
push
jne
aad
and
mov
dec
popa
pushf
out
cmp
cmp
xor
iret
out
lds
repnz
jl
pop
adc
dec
xor
js
fisubl
and
rcl
aam
xor
jo
ds
or
sbb
inc
test
cmp
add
lea
rol
xorb
std
xchg
add
mov
inc
xor
mov
dec
inc
mov
loope
aad
pop
sbb
hlt
sbb
jp
sbb
mov
cmp
cmp
push
and
push
push
xchg
jecxz
ror
xchg
cmpsl
adc
xchg
pmulhuw
dec
xchg
jecxz
sahf
xchg
dec
sub
xchg
push
sub
not
int3
dec
sub
leave
mov
xor
and
leave
jl
ljmp
sti
dec
cmc
jmp
adc
add
jb
mov
test
mov
lock
jbe
sahf
shlb
sbb
stc
or
mov
in
aaa
jbe
loope
cs
dec
lret
ds
shrl
sahf
cld
jle
push
mov
ljmp
addr16
inc
nopl
lret
or
push
pop
jbe
sub
mov
lds
adc
loopne
nop
jmp
inc
or
fwait
jecxz
jae
jg
push
out
pop
mov
test
stos
addl
sbbl
xor
sbb
loope
lahf
lods
aas
les
ret
add
cwtl
cmp
xchg
fsubrp
fildll
test
daa
xor
fbld
jg
jle
or
pop
or
pop
clc
pop
cmp
jp
and
call
nop
mov
push
jmp
mov
dec
mov
cmc
pushf
jno
inc
xchg
mov
test
cs
inc
mov
out
sbb
ds
loopne
mov
stc
scas
inc
addl
sbbl
or
cs
iret
testb
xchg
les
mov
sub
push
dec
loope
jne
sbb
or
xchg
inc
sub
adc
mov
popa
paddq
les
or
mov
xor
sbb
sub
jp
call
cmp
push
sbb
test
and
sahf
in
ds
jns
mov
sub
hlt
fldcw
ret
jo
clc
adc
add
shlb
rcrb
lock
push
or
aas
int
sub
lahf
cmpsl
dec
bound
adc
jnp
int
arpl
add
lahf
adc
in
xchg
iret
into
mov
push
aam
in
outsb
mov
gs
je
pop
inc
dec
add
mov
movsl
ja
inc
fs
xchg
add
xchg
repz
ret
out
lods
loopne
pushf
adc
add
push
cmp
ror
mov
arpl
push
in
mov
jns
imul
pop
mov
insl
arpl
hlt
xchg
inc
repz
fidivs
xchg
lcall
pop
out
mov
cmp
lcall
orl
sahf
cmp
and
in
xor
insl
xorl
push
sbb
repnz
adc
cmp
sub
test
inc
jno
rcrl
js
les
fst
fnstenv
ss
sub
mov
andb
push
shl
mov
dec
inc
dec
push
cmp
mov
lock
cmp
adc
scas
out
push
inc
xorb
nop
mov
ljmp
sub
xor
xchg
icebp
das
cmpsl
int
dec
jmp
dec
sub
out
das
inc
and
mov
ja
sbb
mov
sbb
ret
jo
pop
cmc
inc
jle
and
aam
adc
push
push
dec
mov
push
xor
add
lahf
jge
sbb
mov
cmc
xchg
xor
scas
arpl
pop
je
test
in
dec
dec
mov
test
sarl
cmpb
xchg
xchg
sbb
ret
push
jle
adc
loop
nop
stos
pop
cmp
das
cltd
mov
ds
mov
popf
aad
aas
pop
fsubrp
ret
inc
fidivl
xchg
loope
sarl
or
aam
sub
sbb
add
repz
mov
insb
daa
xchg
mov
arpl
int3
xchg
leave
into
test
jecxz
fstpt
xor
xchg
adc
xchg
jbe
push
in
fldl
aam
rcrl
inc
adc
mov
inc
mov
or
ja
outsb
add
test
out
in
cwtl
into
imul
pop
outsl
test
movsb
lret
ret
shlb
sub
shl
stc
add
mov
pushf
xchg
cmp
adc
lds
push
fcomps
hlt
int3
aam
inc
mov
xchg
and
sub
mov
sbb
cmp
dec
shrb
imul
cmp
mov
std
loopne
or
cmp
in
mov
and
sub
lcall
ljmp
xchg
popf
ret
add
outsb
mov
mov
dec
loop
lods
pop
lret
add
arpl
outsb
mov
sub
rorb
mov
push
mov
dec
mov
and
imul
call
or
sarb
adc
mov
pop
mov
popa
lds
loop
fdivrl
cmpsl
add
add
adc
jne
stos
enter
rcrl
inc
pop
insb
or
xchg
clc
sub
out
mov
mov
stos
cld
scas
mov
mov
xor
outsb
lret
push
mov
mov
xchg
sti
push
pusha
daa
shl
out
popf
or
ljmp
lea
fs
sti
or
inc
pop
jle
xchg
je
cmpsb
lods
cld
gs
and
push
shrb
aad
cmp
push
sti
insb
lds
shrb
cltd
notl
add
ljmp
push
paddusb
mov
dec
stos
bound
jb
push
filds
mov
mov
sub
adc
fsubl
aas
std
lcall
fisubl
imul
test
imul
outsl
fs
lcall
cmp
pop
sub
push
jnp
push
notb
mov
shll
fwait
cli
scas
mov
jno
stos
test
adc
repz
mov
push
das
js
jb
outsb
push
scas
mov
xchg
repz
outsl
xor
jno
add
out
ffreep
inc
fistpl
popf
mov
pop
push
cwtl
ret
and
out
pop
pop
jbe
ljmp
cwtl
js
inc
mov
push
jge
cwtl
scas
add
pushf
sub
or
mov
jge
mov
in
mov
icebp
test
sub
out
out
dec
sbb
aas
in
and
pop
das
out
dec
inc
stc
inc
mov
fldl
scas
push
mov
adcl
ds
jg
jmp
push
jmp
pop
push
push
das
mov
mov
popf
or
mov
sbb
lods
repz
or
and
xor
add
pushf
push
push
jbe
mov
add
cltd
fdivr
std
xchg
adc
add
int
popa
pop
rorl
sub
fs
sbb
and
adc
mov
aaa
into
movsb
lahf
or
pop
mov
cmp
stc
mov
ss
jne
sbb
test
xor
lret
jnp
scas
inc
scas
push
and
leave
in
mov
xlat
daa
push
mov
ss
in
adcl
mov
and
mov
pop
add
xor
lods
jno
aas
cmp
clc
mov
cmp
push
cltd
jno
jle
sub
and
ja
les
mov
rcll
into
inc
push
cli
shll
pusha
sbb
and
add
fwait
lret
insl
shl
jno
aas
rcrb
xchg
subb
pop
mov
or
mov
cwtl
es
pushl
jae
insb
fidivl
sbb
push
popf
xchg
add
jo
ficoml
aad
stc
in
lea
mov
pusha
or
and
iret
pop
fwait
and
cmpsl
mov
andl
cli
cmpsb
mov
xchg
divl
and
lcall
dec
add
lds
jb
sbbb
frstor
inc
lock
ret
add
ds
cmp
lahf
cmp
jecxz
jmp
cmc
push
push
and
or
and
ja
popw
lods
test
add
xchg
jb
outsb
into
fwait
adc
dec
mov
shlb
and
sbb
pop
or
mov
addb
mov
mov
adc
rorl
outsl
jnp
rorb
mov
push
iret
scas
maxps
and
sbb
mov
sarb
adc
fisubl
cmp
jmp
xchg
jp
shl
lods
das
ret
xchg
inc
jns
loop
sub
pop
lds
rorl
fs
sub
std
fcom
fnstsw
mov
sbb
xchg
fcomps
and
cmp
adc
ljmp
jnp
es
or
push
sub
fidivrl
pop
pop
pop
pop
adc
adc
mov
mov
pop
ret
hlt
fwait
mov
push
sub
daa
push
push
arpl
mov
xor
ljmp
lcall
sbb
inc
push
push
or
nop
rcrl
mov
lock
movsl
adc
test
out
mov
into
add
dec
xor
lock
outsl
mov
jecxz
sub
imul
push
pop
mov
mov
sbb
lret
repz
cmpsl
in
popa
cld
addb
scas
xlat
inc
rcl
jno
mov
dec
push
rorl
push
push
sub
loope
in
push
test
call
in
pop
cltd
movsl
das
and
adc
or
cmp
xor
or
or
jp
xor
cli
pop
sbb
gs
xchg
sbb
mov
jae
jo
decb
pop
inc
cmpsl
jno
int
pop
inc
stos
ds
test
cltd
fdivrs
inc
sbb
dec
mov
ljmp
jns
insb
out
inc
pop
daa
ljmp
movsb
sub
or
jae
pop
fs
adc
rol
or
les
cmp
outsl
mov
cs
pop
aaa
adc
sbb
adc
mov
shll
into
mov
test
pop
xor
in
scas
movsl
mov
mov
stos
push
pop
jnp
mov
rclb
outsl
push
cmc
xchg
mov
pop
test
jb
cmc
push
jl
insb
cmp
push
mov
sbb
cld
int
mov
dec
sub
sbb
loope
inc
sbb
in
add
jb
stos
insb
in
outsl
xchg
aad
mov
mov
imulb
mov
cmp
or
push
pop
pushf
mov
xor
hlt
mov
mulb
aas
shll
add
dec
push
pop
repz
inc
pop
insl
inc
hlt
jne
pop
or
xchg
mov
loop
push
cwtl
mov
or
add
insl
addb
lret
mov
sbbl
cmp
pop
xor
arpl
adc
sbb
pop
popf
cltd
adcb
andl
pop
cli
add
sbb
jbe
cmpl
jns
xchg
adc
pop
jmp
and
mov
and
rorb
push
inc
and
add
mov
fmull
adc
bound
xchg
mov
dec
mov
test
aad
test
xor
in
aas
lods
movsl
jns
cltd
pop
xor
sub
adc
jp
cwtl
mov
out
imul
xor
mov
dec
dec
int3
insl
into
repz
mov
fucomi
mov
call
add
jns
stc
in
cmpsb
iret
int
xchg
and
jno
xor
insb
fmull
movsl
xchg
push
int3
mov
stos
jne
sbb
adc
pushf
push
repnz
xchg
mov
es
lret
mov
roll
mov
cli
adc
out
pop
pushw
out
adc
int
aaa
mov
mov
int
mov
push
jbe
pushf
test
popf
lret
test
scas
push
xchg
sub
lcall
jecxz
cld
or
pop
mov
mov
mov
sbb
hlt
movsb
cmp
ret
add
fiaddl
lcall
addr16
add
xor
inc
loope
and
jno
dec
sbb
cmc
sub
add
inc
cmpsl
mov
add
cmpsl
hlt
aam
sub
inc
sti
ja
mov
lods
sbb
mov
mov
inc
xchg
and
push
adc
cld
hlt
cmp
dec
fsubrl
add
mov
es
push
sbb
andb
add
rcrl
add
mov
pop
out
jge
into
sub
test
dec
std
push
pop
jle
dec
jge
adc
pop
imul
dec
cmp
mov
divl
movsl
inc
int
or
ficomps
xchg
or
outsl
adc
imul
pop
fld
xchg
int3
insb
in
jae
or
xchg
sbb
fwait
fwait
mov
mov
adc
jecxz
push
scas
shrl
call
rol
pop
repnz
dec
out
mov
test
in
push
stos
adc
inc
xchg
shrl
aas
dec
popa
pop
test
adc
gs
icebp
sbb
aam
stos
cmp
inc
mov
or
imul
xor
pop
jae
xor
cwtl
xchg
xchg
imul
or
popf
aam
ja
dec
push
and
loop
mov
outsl
xor
ljmpw
loopne
cld
add
xchg
repz
jbe
bswap
test
sbb
and
lret
ficoms
pusha
xchg
int3
std
popf
sub
icebp
inc
ret
popa
lock
ljmp
mov
sub
cmp
fcoms
repz
jae
clc
adc
test
xor
pop
mov
dec
loopne
xchg
xor
test
test
xchg
cmp
dec
or
pop
out
adc
add
aas
adc
mov
pop
leave
dec
inc
sbb
or
movsl
aaa
and
inc
add
popa
cwtl
sbb
into
cli
mov
movsb
rorb
daa
in
mov
sub
jno
in
jno
movsb
and
clc
sub
daa
lock
add
sahf
jae
pop
aam
ss
std
flds
xor
out
fidivrl
mov
ss
shlb
and
jno
subb
xor
je
sbb
std
xchg
inc
faddl
lret
loop
cmpsl
push
je
push
loope
jnp
mov
fisubl
clc
movsl
leave
mov
jns
fnstenv
in
sub
jecxz
xchg
cmpsb
xlat
and
xor
ja
fisubs
xor
sarl
pushf
stos
in
iret
shlb
sub
and
jg
sbb
mov
fs
mov
js
inc
in
xchg
pop
cmpb
mov
aas
dec
rol
lods
sub
mov
mov
sbb
ret
int3
out
pop
fsubs
or
test
xor
fcoml
jb
push
ficomps
movsb
push
fbld
aas
and
dec
adc
pop
cmp
loop
dec
add
test
sub
loope
sub
mov
cli
test
adc
scas
insb
and
xor
test
push
outsb
and
movsl
test
xor
mov
int3
mov
mov
jae
inc
iret
mov
cltd
sbb
stc
rorl
mov
push
dec
dec
ja
cmp
fildll
adc
cmp
inc
adc
sbb
push
int
cmp
add
inc
call
mov
or
int3
outsb
push
dec
dec
adc
cmc
xor
rcrl
sub
cs
push
cmp
xchg
pop
mov
inc
gs
inc
call
cld
adc
inc
jge
lds
inc
imul
stos
sahf
adcb
jl
stc
push
ss
cltd
int
sub
xchg
mov
mov
mov
sbb
pop
and
inc
or
lahf
out
push
scas
mov
sarl
sbb
prefetch
or
repz
mov
inc
ds
sbb
xor
mov
sbb
gs
push
push
fimull
and
add
xchg
fisubl
push
mov
push
cmp
cli
xchg
stos
jae
sbb
je
jecxz
push
add
loop
sbb
add
sbb
jl
shll
jae
imul
push
cwtl
cmp
out
pop
shl
xchg
cli
loope
cwtl
adc
aam
add
test
inc
lahf
inc
sti
and
gs
xor
dec
outsb
mov
imul
dec
fwait
and
mov
cld
dec
cmp
mov
out
repz
cld
push
sub
inc
push
shlb
jns
int
inc
in
jle
sahf
mov
xor
pusha
orl
ret
rorl
dec
add
jl
mov
test
outsl
fucomp
mov
inc
repz
sbb
rcr
and
xchg
pop
adc
cwtl
xchg
xor
push
mov
fdivrs
mov
scas
insl
jne
push
inc
push
aad
pop
outsb
sbb
in
mov
jecxz
cmp
push
pop
pop
and
jmp
std
or
pop
cli
jno
xor
imul
pop
pop
and
push
jge
test
mov
movsl
pop
add
mov
orl
sub
lcall
pop
loop
mov
adc
bswap
adc
cmp
addr16
push
pusha
sahf
or
outsl
pop
xchg
pop
cs
mov
pushf
dec
es
add
xor
sbb
sbb
enter
inc
mov
loope
or
out
inc
mov
mov
xchg
mov
sub
bound
and
pop
push
dec
insl
xchg
jecxz
push
ffree
les
in
sub
imul
mov
push
cwtl
sub
lds
out
dec
cmp
cmp
cwtl
or
xchg
in
mov
mov
mov
cld
and
pop
sbb
mov
mov
popf
iret
jo
mov
out
imul
push
mov
mov
xor
push
xor
out
pop
mov
out
inc
push
push
js
cmp
pop
hlt
negb
lds
pusha
loopne
push
pushf
divl
and
cmp
pusha
rolb
dec
iret
jmp
add
lret
js
fdivrs
incb
iret
and
mov
sub
jne
mov
jmp
push
xor
subb
dec
mov
sub
dec
insl
nop
jns
fmul
mov
mov
cmp
mov
mov
jl
adc
enter
sti
cmp
aam
insl
icebp
in
xor
rcrb
dec
inc
aaa
bnd
push
push
shrb
inc
pop
cltd
dec
dec
pop
mov
sbb
mov
fwait
lods
lcall
dec
inc
xlat
out
es
les
fadd
pop
pusha
and
jnp
mov
lahf
cmc
sub
jno
mov
sub
mov
inc
mov
sbb
pusha
mov
outsb
cmp
jecxz
ds
adc
movsb
arpl
in
push
imul
int3
mov
cmc
iret
shll
cmpsb
scas
mov
aas
dec
jns
inc
xchg
xchg
or
cmc
cld
int3
ret
hlt
xchg
xchg
cltd
sub
lahf
cmp
sbb
push
fistl
subb
incl
adc
push
outsl
pop
cmpb
jmp
push
xor
aad
pop
imul
push
jae
fldt
add
jp
xor
mov
add
and
add
xor
cld
xchg
lock
jl
ljmp
mov
hlt
inc
jmp
mov
xlat
gs
mov
stos
test
js
adc
push
hlt
sub
cmc
jle
nop
std
sbb
ja
dec
movsb
dec
fdivrl
xorb
or
loop
mov
jge
std
cmp
dec
test
jb
out
cmp
or
dec
or
mov
dec
cmp
mov
rorb
inc
imul
mov
mov
push
sub
xor
inc
mov
xchg
mov
add
fwait
dec
loope
xlat
xor
gs
ret
xchg
or
cltd
push
mov
repnz
or
jg
jnp
pusha
ud1
pop
dec
push
lods
xchg
loop
hlt
jmp
push
out
mov
xchg
fadd
ret
sub
mov
es
jge
jg
insb
sbb
dec
push
stos
mov
adc
gs
hlt
push
add
je
pop
lahf
xlat
sub
int
call
jo
xor
daa
into
push
inc
bnd
adc
jg
lret
and
lods
repz
lods
inc
arpl
or
xor
or
jbe
cmc
pop
incb
leave
sub
pop
and
mov
sub
inc
inc
loope
out
adc
dec
cmp
jb
lahf
in
mov
and
int
mov
push
addr16
mov
or
sbb
sti
mov
xor
sbb
adc
mov
or
rcll
sub
or
push
sahf
stc
call
test
mov
or
movsl
fsubs
pop
sub
inc
cmp
fldcw
ss
or
dec
shl
sub
push
mov
lret
push
es
jno
xchg
sahf
mov
xchg
dec
and
mov
jnp
jecxz
push
or
jo
outsl
je
cmp
jne
push
cld
inc
rcll
push
clc
xchg
ret
dec
fldt
sub
jmp
cwtl
mov
mov
jge
mov
inc
lock
xor
cmp
mov
mov
lahf
imul
mov
jae
pop
mov
inc
fdivr
cwtl
mov
lret
ja
xchg
pop
orl
ds
xor
je
xchg
mov
lcall
jae
icebp
rorl
scas
xchg
dec
xor
enter
mov
scas
push
in
insl
push
adc
cmp
popf
lock
out
mov
imul
sbb
mov
sbb
mov
shrb
fisubrl
jle
repnz
mov
push
push
cmpsb
jne
adc
pushf
cmp
jns
rcrb
sbb
lea
mov
sbb
jnp
shll
xchg
mov
and
mov
cmc
sub
enter
dec
mov
mov
out
jbe
fdivrs
mov
jmp
push
push
and
mov
inc
jb
push
or
jle
outsb
xor
jl
js
xchg
out
xchg
lea
mov
cmp
int
shr
test
pop
out
mov
jbe
dec
mov
pushf
fisubl
jbe
cld
jp
lret
fldcw
mov
popa
cmp
or
mov
ret
xor
or
dec
cmpsl
push
jecxz
mov
push
jo
rcl
dec
out
sub
cmpsb
aad
out
dec
js
xor
ja
mov
jp
adc
notl
jo
mov
mov
push
js
je,pt
mov
mov
fnstenv
jle
clc
sbb
outsb
fldl
pop
fs
dec
sub
in
or
push
sbb
push
cwtl
cmc
adc
sbbl
stos
mov
faddl
sbb
or
fists
addr16
push
sub
push
mov
add
pop
out
cmp
mov
sub
test
and
add
testl
fs
jge
std
or
es
xchg
jne
mov
out
mov
dec
or
jb
push
daa
mov
and
pop
xor
stos
pop
adc
sub
mov
sbb
mov
ds
icebp
pushf
xchg
jne
and
fbld
add
push
lds
popa
out
call
sti
mov
xor
mov
pusha
mov
stos
pop
push
lahf
fwait
mov
lods
addl
gs
cs
push
sti
xor
rcrb
jle
push
mov
les
mov
sbb
pusha
in
and
test
filds
inc
mov
cmpsl
xchg
jp
jecxz
stos
adc
rorb
mov
fwait
aaa
jns
cmpsl
rolb
xchg
hlt
popf
enter
xchg
and
stos
xchg
push
call
dec
cmp
inc
loope
pop
icebp
lds
dec
add
jecxz
data16
mov
popf
or
adc
dec
mov
sbbb
jbe
pop
lock
clc
aaa
dec
shlb
xor
in
int
pop
dec
sbb
aas
loopne
call
jp
pop
push
and
xchg
inc
jmp
pop
loopne
xchg
jl
xor
ror
inc
push
jbe
enter
inc
outsl
mov
sti
jne
adc
pop
es
lock
jge
push
mov
jno
push
lahf
insl
xchg
cs
mov
cmpb
incl
adc
mov
and
sub
jecxz
xchg
add
mov
and
cmp
cltd
push
cmc
jno
add
fcoms
lea
sti
popf
dec
dec
clc
aas
pop
sub
cmp
loopne
fiadds
or
pop
pusha
cmp
test
mov
adcl
and
cmc
mov
mov
in
gs
lods
mov
fsts
imul
sub
es
mov
or
mov
test
fistps
cs
push
or
repnz
loopne
je
mov
xor
pop
cltd
test
mov
mov
pop
gs
popa
push
push
lds
inc
and
fwait
inc
ret
sub
or
les
push
pop
push
jg
push
mov
fdivrp
xor
fs
sub
cmc
scas
mov
jns
mov
adc
inc
addr16
imul
jl
sti
test
sub
das
mov
mov
or
pop
pop
cmc
test
inc
rcr
sti
cmp
mov
into
insl
sub
mov
ja
xchg
dec
sub
data16
popa
jmp
nop
in
xor
aas
push
inc
xor
sbb
std
cltd
add
aaa
cmp
pushf
xchg
inc
loope
aad
or
mov
mov
push
mov
js
xlat
xchg
stos
daa
or
mov
out
js
push
xchg
lea
mov
xchg
outsb
leave
cwtl
clc
xchg
mov
cmp
push
add
mov
xor
mov
pop
xchg
sub
or
ficompl
jp
cmp
lret
push
inc
pop
sub
shr
mov
daa
mov
mov
mov
mov
xor
mov
xor
lcall
push
dec
pop
notl
pushf
fsubrl
pop
pop
clc
jp
ret
imul
popf
pop
mov
sub
sbb
adc
std
addr16
fwait
lret
je
xchg
dec
xor
xor
les
into
push
xchg
mov
aad
fadds
repz
pop
or
fnsave
xchg
mov
enter
pop
popf
push
fdiv
xor
rcl
imul
xlat
and
xor
adc
lds
cmp
sbb
dec
cmp
in
xchg
nop
test
ss
mov
popa
sar
push
pop
testb
fildll
insb
push
jle
mov
cmpsl
loopne
imul
mov
out
iret
inc
add
fistpll
sbb
fisttps
in
loopne
ss
rorl
lods
xchg
add
xchg
pop
pop
loope
jp
inc
adc
mov
les
lods
les
push
mov
nop
adc
sbb
adc
sbb
bound
test
je
and
cli
inc
cmp
jnp
adc
mov
adc
jmp
mov
inc
cmc
dec
in
pop
mov
subb
ret
add
insb
jg
mov
xor
ffreep
stos
jns
jge
ret
dec
loop
or
cmp
mov
lea
aaa
sub
cs
fcoml
jge
fstps
les
inc
mov
push
ds
repnz
mov
testb
into
loope
sub
out
mov
mov
sti
xor
clc
dec
mov
and
sub
or
mov
lcall
jmp
xchg
xor
pop
adc
add
sub
hlt
ljmp
xor
xor
call
inc
lret
and
and
dec
mov
add
inc
xchg
ss
unpckhps
clc
rcr
lock
sbb
pop
data16
adc
jo
js
jmp
adc
add
mov
sub
repz
mov
mov
imulb
aaa
cmp
push
pushf
dec
jge
dec
ljmp
fwait
daa
xor
adc
add
sub
clc
add
hlt
out
adc
loopne
pop
xchg
out
sub
je
lret
add
adc
or
xlat
jecxz
mov
fwait
test
ror
mov
stos
fdivrs
lea
inc
xchg
dec
jg
jp
xchg
cltd
stos
xor
shlb
adc
sub
mov
push
adc
lods
mov
lods
add
fildll
mov
faddp
xor
mov
mov
inc
cmp
dec
dec
xchg
out
adc
lods
pop
inc
pop
jne
addl
mov
or
in
xchg
es
add
ds
dec
mov
and
push
aaa
add
stos
dec
nop
es
hlt
adc
and
inc
es
or
arpl
pop
iret
and
cmp
outsb
cmpsl
jge
add
cs
test
or
sahf
in
int3
jg
mov
test
fisubl
repnz
or
outsl
sbb
lds
repz
test
es
outsb
popa
scas
insb
push
movsb
nop
test
ss
int3
sub
mov
mov
jp
stos
call
xchg
mov
lahf
lds
rolb
xchg
jo
ja
test
add
pushf
lcall
inc
nop
mov
ds
data16
jp
push
cmp
sub
arpl
gs
xchg
jno
clc
cmpl
stc
imul
shlb
ss
shr
stos
repz
call
add
lods
sarl
out
mov
xlat
enter
jnp
mov
ret
les
pop
sub
jmp
int3
xchg
xchg
xor
cmp
pop
rcl
scas
push
into
fstps
sub
out
cwtl
add
aas
stos
out
sbb
pop
into
les
inc
jne
add
or
test
mov
je
mov
inc
pop
mov
sub
je
dec
ds
into
jnp
and
aam
mov
cwtl
pop
rorl
out
enter
sub
add
enter
ljmp
test
pop
jns
add
cli
cmp
in
into
cld
bound
or
or
push
addr16
adc
jnp
lcall
dec
in
inc
mov
lods
add
pop
aaa
xor
inc
shrb
adc
cs
jno
sti
addr16
movsb
or
push
pop
scas
mov
hlt
cmp
cld
out
sarb
stos
rolb
pop
mov
rcll
push
shlb
test
pop
int3
je
xor
cs
leave
mov
pop
jbe
inc
je
sbb
es
adc
fnstenv
cli
xchg
mov
js
mov
les
xchg
cmp
stos
xlat
add
and
mov
mov
fwait
aam
inc
ret
mov
cmp
in
mov
add
mov
pusha
xlat
or
dec
stos
fildl
clc
call
inc
aaa
loopne
inc
mov
pop
mov
ja
sub
les
add
and
icebp
pop
fwait
adc
adc
mov
xchg
inc
xor
bts
test
lds
daa
roll
xchg
inc
out
mov
stos
push
rolb
sarb
pop
dec
sti
mov
or
loope
imul
pop
rep
cli
sbbb
mov
add
rol
add
sbb
divb
jg
pop
mov
mov
or
inc
sbb
cmp
and
out
stos
and
jbe
cld
daa
mov
jae
lahf
jmp
iret
icebp
ret
sub
shufps
imul
push
mov
xchg
jg
out
fmuls
aad
cli
sbb
cmp
jno
into
daa
push
fs
inc
scas
mov
aaa
adc
enter
std
push
imul
mov
mov
sbb
and
outsb
push
stc
cmpsl
clc
test
lahf
daa
add
clc
pop
call
ljmp
mov
inc
stos
mov
push
mov
out
hlt
pop
or
movsl
hlt
fildll
jp
sbb
xor
jecxz
lret
sahf
mov
mov
subl
mov
lahf
enter
mov
ficoms
sbb
shrb
je
cmp
inc
mov
sbb
fdivl
and
out
mov
test
sbb
mov
sub
dec
mov
out
jmp
out
add
imul
inc
in
sbb
scas
loop
call
in
inc
xchg
adc
add
les
aam
cmp
jge
add
movsb
mov
push
jg
sub
fldcw
xchg
xchg
test
test
mov
call
fs
jno
dec
lods
pop
outsl
sbb
nop
push
jb
shl
xlat
pop
sbb
mov
scas
in
ret
ficoml
das
fucomp
add
cwtl
lcall
push
dec
popf
out
inc
out
ret
cmp
aas
scas
add
pop
shl
in
fwait
ljmp
xor
jge
sbb
movsb
add
sub
sbb
stc
xlat
xlat
push
cmp
jnp
pop
or
inc
insl
inc
push
outsl
shl
add
mov
data16
add
and
fstp
pusha
fnstenv
fldenv
sbb
je
fs
into
fisttps
xlat
push
mov
sbb
std
add
add
shlb
pop
rolb
sub
jbe
fdivrs
sub
inc
sub
mov
pusha
jnp
bswap
pop
bound
cmpb
scas
addr16
push
pop
cli
ret
mov
mov
cmp
mov
insb
cltd
outsl
push
in
fadds
add
pop
fs
dec
mov
bound
inc
adc
push
pushl
rclb
jns
mov
jnp
xchg
add
inc
shlb
int
dec
dec
pop
pop
mov
mov
leave
fnclex
xor
das
mov
mov
jae
call
stos
nop
sarl
daa
add
mov
jg
cli
iret
fucom
cmp
popa
in
scas
and
cltd
iret
shl
and
scas
popf
pop
sbb
je
and
insl
out
jb
adc
push
fcmovb
cs
inc
cmpsl
out
adc
mov
ffreep
add
mov
pop
orb
pop
into
cwtl
mulb
jp
sub
mov
mov
adc
fmuls
cltd
test
mov
scas
add
mov
push
pop
jp
pop
lods
cmp
jbe
fadds
sahf
push
mov
movsl
xchg
outsl
das
and
and
pop
repnz
adc
idivl
je
frstor
pop
xchg
inc
into
adc
push
insb
cmp
out
sub
pop
ss
dec
icebp
dec
xchg
jmp
add
pop
push
fldcw
adc
in
icebp
loope
inc
or
hlt
add
sub
adc
sahf
mov
mov
mov
repz
fisttps
int
mov
sbb
jae
mov
and
push
dec
add
pop
aas
fidivrs
push
mov
in
call
adc
jb
jl
lods
jmp
mov
jnp
pusha
fiaddl
cmpl
jp
into
jg
pop
jmp
dec
shrb
adc
sbb
sbb
mov
adc
shrl
fisttps
gs
jmp
xor
mov
push
inc
and
or
pusha
or
aas
inc
scas
repz
fcompl
dec
pop
popa
es
icebp
xchg
xor
jl
fwait
aas
push
mov
movsl
cmp
bound
inc
aam
mov
and
push
xchg
pop
and
jge
jle
jmp
repnz
xchg
adc
insl
sbb
movsl
pop
push
xchg
fists
add
iret
xor
es
popa
add
cmp
push
xchg
mov
push
cmp
xchg
mov
adc
insl
stos
inc
mov
imul
ja
inc
mov
jae
mov
notb
add
mov
cld
ret
pop
out
imul
and
xchg
es
xchg
mov
jl
mov
xor
loop
fisttpll
imul
xor
out
or
mov
push
in
inc
mov
jae
cmp
pushl
mov
sbb
xor
movsb
xchg
push
ret
loop
push
mov
orl
xchg
add
jae
adc
mov
push
pop
outsb
cmp
sbb
pusha
pop
cld
push
andl
push
push
stc
cmpsl
outsb
and
cltd
test
hlt
xor
enter
xchg
pop
mov
sbb
es
sbb
nop
pop
mov
aas
aad
jmp
fsubrp
fstp
je
int
aaa
in
jne
cmp
cmp
rcrl
mov
pop
int3
int
mov
mov
stos
adc
pop
fdivrl
dec
in
sbb
jo
bound
out
js
cltd
xchg
cmp
outsl
sbb
inc
dec
add
inc
inc
xor
movsl
sbb
fwait
nop
popf
pop
sbb
push
fstl
mov
pop
cmpsl
jmp
insb
inc
popa
mov
pop
mov
inc
add
je
ja
mov
pop
mov
outsl
insl
addr16
lret
leave
call
adc
lods
jge
fbstp
xchg
sahf
dec
push
inc
mov
jnp
je
cmc
cwtl
mov
push
cmpsl
jmp
iret
sub
adc
aad
inc
add
push
or
xchg
out
add
or
mov
sub
mov
pop
stos
mov
sub
repz
add
push
out
filds
gs
imul
xchg
lds
arpl
movsb
shr
inc
adc
xchg
test
and
inc
jg
scas
xor
sarl
xlat
or
movsl
mov
jle
adc
adc
stos
cmc
lret
movb
sub
cmc
or
xlat
xor
jmp
mov
cltd
mov
fimuls
add
dec
lret
xchg
dec
mov
stos
ret
out
pushf
xor
push
or
insl
jb
data16
add
insl
dec
lea
mov
xor
xchg
pop
int3
jge
out
inc
push
cmp
ja
add
or
pop
outsl
adc
sahf
inc
pop
dec
jp
xchg
push
int
and
xor
jno
jmp
loopne
push
mov
mov
test
inc
pop
push
jne
movsl
fucom
inc
xor
out
pop
mov
mov
dec
mov
mov
shr
sbb
add
or
js
mov
fstpl
dec
das
sbb
jle
pop
movsb
sub
xchg
jp
imul
in
test
sub
cmp
gs
lcall
xchg
loope
rcrl
adc
shlb
fldt
leave
out
cs
rol
cs
into
ljmp
rorb
daa
outsb
stos
jmp
fildl
push
lahf
shrl
xchg
fstpt
das
xchg
test
or
pop
fcomps
mov
cmpl
inc
jle
imul
cmp
add
inc
test
les
clc
add
ds
cld
cmp
jnp
lret
fcoms
jo
xor
adc
fistpll
inc
cmp
xchg
stos
pop
lea
jo
inc
or
inc
sub
pop
dec
mov
fnsave
test
sub
pop
dec
insl
aaa
dec
add
jb
ljmp
test
pop
lret
pop
add
hlt
push
pop
push
int3
es
sbb
mov
sbb
loopne
jle
jmp
js
sub
inc
dec
mov
xor
pop
fnstcw
dec
popf
dec
das
xor
in
sbbl
popf
xchg
pop
jecxz
push
shll
dec
sub
bound
sahf
sbb
cltd
sahf
lods
inc
jle
jo
inc
pop
pop
sub
out
sahf
cmc
cmp
ja
xchg
mov
sub
shll
daa
bound
lcall
push
lret
ss
cs
stos
pop
out
and
xor
push
push
cmp
mov
stos
or
push
ret
mov
movsl
jo
arpl
mov
pop
jb
test
and
xor
icebp
iret
stos
cs
cmp
sti
je
adc
sbb
popa
or
jno
loopne
jmp
fldl
out
ret
push
movsb
adc
mov
inc
int
daa
add
subl
insb
jmp
dec
pop
xor
xchg
sub
add
ljmp
das
mov
divb
push
pop
push
add
pop
xor
movsl
daa
pop
stc
out
aas
xchg
bound
data16
je
cmp
mov
pop
pop
icebp
insb
ret
popf
loope
aad
xor
add
mov
jns
cmc
sub
dec
mov
mov
ss
or
pop
jp
and
jbe
ficoms
orl
loope
inc
sub
jge
add
stos
mov
sbb
mov
mov
jmp
mov
iret
popa
xchg
ljmp
popa
cli
sbb
sbb
jnp
fisubrs
lret
rolb
rcrb
stc
jle
xchg
lret
scas
popl
mov
push
js
fdivr
sti
cmpsb
pusha
test
xchg
inc
sbb
pop
xchg
inc
cmp
inc
pop
fldt
jp
push
in
mov
cmp
out
les
out
rolb
imul
lret
xchg
fwait
in
push
jle
adc
xor
scas
push
xor
inc
sbb
adc
xchg
fbld
or
rorl
inc
loopne
inc
lret
dec
jno
fstpt
push
cmp
fists
add
mov
outsb
rolb
ret
ja
push
jns
pop
repnz
push
in
dec
loop
cli
sub
flds
xor
arpl
fldl
popf
icebp
mov
aaa
sbb
cltd
xchg
and
aad
inc
pop
cmp
gs
test
inc
out
push
dec
lahf
ljmp
mov
hlt
inc
xchg
xchg
jmp
jae
cmp
mov
out
xlat
cld
iret
push
jmp
and
cmp
loop
xchg
sbb
jae
pop
push
sub
and
jno
lret
cwtl
mov
fisubrs
fidivrs
xchg
shr
lahf
out
push
out
push
jecxz
xchg
jnp
dec
lds
xchg
mov
mov
ret
hlt
sub
stc
push
mov
lahf
iret
lret
loop
xchg
call
daa
cmp
mov
jbe
lds
imul
inc
arpl
dec
lahf
stos
sub
in
cmp
xchg
sarl
mov
jns
xor
mov
add
mov
adc
jns
sub
decl
jecxz
shrl
sub
xchg
ljmp
in
insl
inc
arpl
lahf
fwait
jle
and
or
arpl
aaa
pusha
and
inc
in
sbb
fs
aad
inc
ret
inc
dec
notb
leave
pop
xor
cmp
lods
fcmovnu
pop
cli
sarl
leave
lahf
cmp
dec
xchg
push
leave
aas
inc
ret
cmp
fwait
lods
lea
jb
and
jb
jle
sub
mov
mov
add
jg
push
in
add
mov
and
hlt
in
push
dec
bound
lret
aam
jmp
fnstsw
stos
cmp
mov
lods
xor
fdivs
xchg
negb
fidivl
mov
xchg
shrl
aas
or
shrl
sbb
cmp
decb
fdivs
jns
std
clc
add
xor
xchg
pop
adc
jg
cmpsl
inc
insb
jnp
scas
in
rclb
out
mov
into
scas
pushf
push
daa
aaa
jne
mov
cmp
repnz
mov
js
in
add
lahf
pop
push
in
jno
test
shrl
and
mov
push
mov
ds
cmpl
repnz
shrl
push
ret
xor
imul
pop
ja
sbb
xor
mov
mov
pop
cltd
push
add
xor
inc
ret
out
xor
push
and
pusha
sar
or
push
lret
icebp
out
fld
loop
add
mov
stos
cltd
sbb
cmp
lcall
adc
rol
in
test
aam
xchg
fstp
cltd
and
sbb
sub
lds
or
lods
pop
aad
or
mov
sbb
pop
subl
sbb
imul
mov
inc
mov
push
jg
cmc
jo
mov
imul
repnz
addr16
mov
and
lret
add
stos
xor
out
inc
mov
mov
ljmp
cmp
pop
dec
and
shll
stc
out
mov
adc
mov
adc
mov
inc
into
fstpt
jecxz
xchg
loope
cltd
adc
ds
jl
xchg
lods
test
inc
push
cmpsl
pop
pushf
jne
mov
addr16
ljmp
xchg
xor
inc
hlt
les
das
test
out
dec
pushf
push
push
ljmp
mov
xor
add
testl
or
jl
hlt
scas
frstor
xchg
mov
sub
sti
lahf
movsl
adc
dec
aam
cli
pop
push
leave
lahf
fmuls
hlt
mov
fldenv
cld
cld
cmp
xchg
call
mov
jnp
int
inc
xor
fsubrl
mov
adc
or
jns
mov
or
fidivrs
aas
rol
cmpl
popa
repz
dec
jl
test
aam
mov
sub
fcomp
jnp
in
rorl
mov
mov
sbb
sub
data16
pop
cmp
xchg
in
jbe
cltd
pop
jge
call
or
mov
daa
pushf
mov
pop
or
test
push
imull
mov
mov
ljmp
and
dec
xchg
lss
out
and
push
repz
and
aam
mov
arpl
leave
test
add
or
jle
call
xchg
xor
mov
adc
out
insl
mov
in
mov
inc
mov
fldenv
sbb
dec
movsb
int3
pop
mov
and
lret
imull
sbb
mov
or
stos
out
pushf
dec
add
sahf
out
dec
movsb
xor
adc
mov
mov
aaa
icebp
sub
outsb
fs
sub
repnz
mov
loop
das
fdiv
mov
xchg
out
mov
add
jo
fcmove
dec
ljmp
lret
adc
dec
std
sub
dec
fnsave
fisttps
scas
popa
pop
push
cmpl
mov
xor
jnp
xchg
mov
outsl
xor
cwtl
es
hlt
mov
ja
mov
xchg
inc
mov
sbb
inc
sbb
mov
add
mov
lahf
push
jl
mov
repnz
call
gs
int3
jo
xchg
mov
in
xchg
or
popl
dec
outsb
je
inc
ss
int
xchg
fsin
pop
inc
or
cmp
into
or
mov
loopne
dec
cli
icebp
adc
lret
imul
mov
lea
xchg
inc
test
sbb
ret
adc
and
mov
enter
pop
jl
xchg
les
call
test
mov
jmp
int
aas
xorl
sub
popa
in
enter
mov
iret
fistps
insb
adc
xor
frstor
stc
or
loope
out
repz
rorl
jno
shrl
push
xchg
mov
dec
xchg
shlb
scas
xchg
push
push
cmp
dec
lods
cmp
add
mov
roll
imul
fdiv
clc
fdivrp
mov
into
add
push
dec
mov
daa
adc
je
roll
ljmp
insb
inc
mov
push
xchg
fwait
mov
test
lods
insb
mov
jmpw
jg
pop
rcr
outsl
and
xor
jecxz
sarl
out
fiaddl
fdivrl
push
lcall
inc
add
pop
call
scas
and
int3
push
aad
lcall
outsl
lcall
inc
sbb
call
fcmovne
push
cmp
shl
xchg
lods
sub
push
fdivr
lret
mov
fldl
or
inc
loopne
jp
data16
sub
mov
loope
inc
jnp
popfw
mov
and
adc
shll
faddl
sbb
testl
push
xor
leave
inc
inc
stc
add
fimuls
cmpsl
dec
shrb
repz
jns
sub
cwtl
adc
push
cmp
xchg
cmp
rclb
mov
jns
xchg
mov
cmp
sub
rorb
push
add
daa
sub
insl
mov
rcr
sbb
sahf
mov
out
call
sbb
and
add
dec
cmp
sub
pop
in
pushf
inc
mov
xor
imul
push
mov
test
mov
xchg
push
cmp
push
decb
adc
xchg
out
cmp
push
adc
shlb
pop
add
stc
enter
lea
cmp
nop
pop
outsl
jle
add
xchg
cmp
mov
jecxz
les
ds
xchg
mov
cs
test
iret
jne
pop
loop
pop
int
test
push
fisubrl
dec
push
pop
xor
in
mov
xor
push
mov
outsb
into
mov
hlt
repz
insb
pop
push
pop
jg
shr
adc
pop
add
or
push
fsubrs
insb
daa
push
xchg
insb
dec
pop
mov
test
xor
jg
lea
jno
xor
lret
nop
xchg
pop
cltd
push
dec
xchg
call
jge
fstps
out
xchg
cltd
push
jge
jno
inc
inc
insl
andl
pop
ret
xchg
in
cmp
sbb
jns
sub
inc
inc
push
dec
and
test
mov
ds
cmpsl
mov
ljmp
adc
mov
out
inc
hlt
aaa
and
bsr
adc
lods
test
es
add
popa
fdivs
and
bound
mov
stc
sbb
ret
or
ja
rcl
loope
pushf
mov
push
xchg
stos
or
sub
out
mov
adc
cmpsl
ret
sub
mov
mov
fs
sub
adc
or
sbb
test
test
xchg
jns
int3
jge
ficoms
nop
mov
outsb
sub
bound
cmpsl
addr16
pusha
fsubp
rcll
cmp
jnp
aaa
and
inc
pop
sbb
testl
push
or
xor
mov
aad
enter
js
jle
lock
test
mov
add
mov
subb
cmpsb
repz
std
xchg
adc
lods
add
and
xor
lods
fstpt
js
outsb
dec
ljmp
cli
popa
mov
adc
fnstsw
stos
jmp
into
clc
pop
test
cs
imul
cmp
jbe
xor
mov
rcrl
cvtpi2ps
push
fmull
scas
std
test
imul
sub
int3
xchg
xchg
ds
sahf
pushl
add
push
dec
pop
push
in
in
pushl
out
cltd
dec
testb
mov
aaa
cmp
jl
adc
lea
pusha
adc
icebp
mov
cltd
cmp
negl
sbbb
pop
pop
jle
adc
mov
mov
lret
addr16
dec
xor
dec
xchg
jbe
test
jmp
dec
mov
outsb
mov
std
aas
dec
sbb
out
movsb
stc
mov
ret
ljmp
test
dec
jbe
cmovle
iret
int
out
dec
mov
inc
dec
xchg
add
sbb
fisubrs
sub
cld
gs
inc
mov
xchg
mov
loop
les
jns
pop
addr16
or
push
scas
movsl
xchg
jbe
ds
int
or
jae,pt
sbb
add
sti
out
mov
adc
stc
mov
adc
pop
adc
ret
jo
dec
xchg
and
ret
mov
push
sbb
inc
inc
enter
test
scas
mov
fsubrs
lds
lods
ja
sbb
sahf
xor
outsl
or
popf
dec
xor
ret
decb
pop
sub
push
aaa
xlat
shlb
adc
hlt
sbb
pop
jns
or
imul
sbbl
sub
sbb
pop
sub
pop
jp
pop
out
fisttps
hlt
pusha
cli
scas
enter
icebp
pop
pop
pusha
out
xchg
xor
pop
push
mov
inc
lea
ret
xlat
adc
shl
outsb
sbb
xchg
mov
cmp
stc
fwait
sbb
cmp
push
test
inc
mov
sub
stos
xor
push
hlt
les
mov
mov
pushf
push
shrb
test
fidivrl
fimuls
adc
bound
stc
sub
loope
xlat
mov
rcrb
sbb
dec
repnz
xchg
sub
scas
inc
into
pop
insb
sub
mov
jns
scas
push
jb
ljmp
jae
inc
jmp
xchg
or
subb
mov
sbb
xlat
ror
inc
pushf
or
or
xor
push
test
add
pop
adc
cmpsl
aas
mov
xchg
stos
jbe
es
fdiv
adc
faddl
add
cmp
movsl
mov
jg
mov
movsl
add
cs
movsb
aaa
mov
mov
pusha
jecxz
jle
pop
fdivrp
inc
test
xchg
enter
mov
mov
scas
jae
lods
fdivr
pop
cmp
xchg
ret
adc
push
cmp
cmovle
loop
fisubl
mov
mov
inc
into
or
push
cltd
lret
cs
adc
test
fcoml
push
jns
push
mov
pop
pop
cmp
xchg
cwtl
jg
mov
aam
sbb
dec
stos
mov
je
push
stos
ret
mov
xor
aas
loopne
es
mov
ljmp
mov
adc
pop
leave
pusha
sub
xor
orl
test
rol
int
jo
dec
mov
shrb
fdivrs
cltd
inc
and
mov
xor
or
outsb
inc
pop
pop
mov
adcb
sub
xor
push
and
aaa
xor
dec
mov
mov
fnstenv
shll
dec
sbb
fwait
enter
cmp
lret
xor
fs
mov
adc
or
or
sbb
fs
das
push
and
imul
inc
rcrb
clc
jnp
je
xchg
stos
push
mov
outsl
loope
test
pop
jns
lds
pop
call
shl
adc
shrl
pusha
xchg
mov
cli
lock
mov
add
xchg
out
push
push
scas
cmp
dec
iret
jno
testl
cmpb
dec
sbb
sahf
push
push
es
jp
popl
lret
iret
sub
fadds
popa
xor
or
aaa
lahf
fisttpl
ljmp
stos
popf
add
push
adc
ret
pop
ret
or
adc
mov
push
ret
repz
ret
into
and
mov
push
loopne
jle
je
push
daa
xchg
sahf
xchg
xchg
jge
ja
or
stos
xor
aam
lods
or
mov
and
fs
dec
filds
stos
mov
adc
mov
jg
enter
mov
test
push
mov
xor
inc
outsb
lea
push
or
fs
xchg
push
incl
cmc
andl
cmp
gs
ja
arpl
pop
out
imul
pop
xor
call
jb
pusha
sti
and
orl
dec
imul
arpl
leave
jl
jp
lds
xor
aaa
jl
adc
sbb
or
test
sub
xchg
call
ret
in
adc
mov
iret
mov
test
mov
inc
and
xlat
pop
pop
cmc
into
int
jnp
dec
outsb
icebp
ret
inc
mov
push
or
movsb
sti
jg
ficomps
scas
scas
aaa
pushf
arpl
push
add
scas
lock
or
inc
push
mov
xchg
data16
adc
mov
mov
in
or
inc
std
fistl
test
pop
sbb
dec
lock
aas
cmpb
mov
out
jnp
push
das
sub
mov
sarb
out
ret
cmpb
movsl
dec
sub
fmuls
sbb
ljmp
imul
in
idivb
sbb
lcall
add
cmpsb
xchg
add
popl
jp
ret
adc
cmp
xchg
cmc
adc
test
jne
and
pop
cmp
adc
out
pop
mov
and
pop
hlt
and
add
pop
out
dec
adc
mov
xchg
jae
mov
outsl
cmp
fcoms
xor
sub
cmp
mov
test
pop
fldenv
jae
sbb
call
repnz
mov
shl
test
adc
ljmp
enter
push
or
jge
pop
icebp
mov
fstpt
bound
movsb
out
adc
pop
jo
pop
mov
mov
add
and
sub
in
mov
jo
xchg
add
mov
dec
jl
popa
shl
xchg
insb
and
adc
mov
insb
inc
insb
movsl
pop
sbb
mov
loop
sbb
pop
movsl
data16
fidivs
mov
test
xor
repnz
test
mov
stos
rclb
cmp
jae
fwait
cmp
dec
jo
sahf
lret
leave
push
sbb
sub
aam
int3
cli
out
mov
in
aaa
scas
mov
pop
outsl
push
in
int
push
popf
jne
pop
or
cli
cmp
fsubrl
push
jae
out
dec
lea
mov
add
lcall
pop
cmp
sbb
scas
xlat
cli
scas
jb
mov
push
pushf
xchg
adc
xorl
pop
adc
push
outsb
jo
sub
hlt
sbb
push
rclb
cli
rcll
inc
xor
gs
rcr
mov
int3
fucomip
mov
and
push
daa
int3
loope
inc
gs
or
add
or
dec
flds
and
ret
ds
popf
aas
rcrb
bsr
jb
out
les
or
and
loop
push
or
sub
cmp
xor
mov
flds
mov
jb
leave
pusha
test
inc
call
test
popf
cmp
cmp
subl
and
cwtl
or
jbe
cmpl
pop
push
cs
dec
mov
fwait
leave
cmpsb
mov
into
shlb
sub
and
mov
mov
in
xchg
fdivs
std
mov
cmpsb
or
in
push
mov
push
mov
std
push
lock
lcall
je
push
sub
and
xchg
sbb
mov
xchg
rclb
cmp
pop
cmp
cmp
stos
sbb
sbb
leave
pop
xor
enter
jmp
dec
loope
shlb
add
ds
enter
xor
xchg
sti
aas
sbb
mov
nop
cmc
ljmp
fdivl
js
test
test
mov
pop
adc
lds
cmp
dec
jnp
jo
shr
out
hlt
dec
push
lahf
les
out
xor
xchg
imul
out
xchg
inc
xor
sbb
gs
fsubrl
dec
xchg
pusha
jl
aaa
and
mov
pop
aad
xchg
sbb
loopne
pushf
imul
cmp
leave
enter
jecxz
or
dec
cmp
push
test
imul
xor
loope
mov
sub
mov
pop
sbb
xor
pop
sbb
mov
xchg
sbb
outsl
insl
hlt
jg
inc
add
leave
pop
rclw
jp
add
mov
imul
xchg
fisttps
or
push
fwait
pop
mov
pop
mov
pop
ljmp
and
out
inc
mov
jg
push
and
fnstenv
mov
add
and
xor
mov
jae
pop
stos
push
jl
call
lret
punpckhdq
test
inc
scas
or
mov
cld
inc
push
dec
cmpsb
inc
dec
pusha
loop
mov
adc
stc
aaa
and
insl
mov
cmp
xchg
fs
inc
repnz
push
and
or
push
js
push
push
mov
mov
test
mov
fcomi
cmc
cmp
push
cld
sbb
ja
mov
aaa
insl
jb
mov
adc
je
iret
push
inc
wrmsr
adc
rolb
jle
inc
cmp
cltd
pop
inc
sbb
jge
xor
pop
and
xchg
push
pushf
pop
xchg
cli
sub
dec
inc
sub
js
ret
cmp
sub
add
addr16
xor
mov
das
repz
cltd
cmpsb
bound
popa
cmc
pusha
xor
in
xchg
orl
adc
pop
push
in
enter
lea
xor
pop
push
inc
push
and
push
out
mov
xchg
pop
push
xlat
mov
xchg
stos
repnz
mov
lahf
pop
sbb
mov
mov
aaa
and
pop
mov
xchg
insb
ja
cwtl
pop
jno,pn
and
jnp
mov
mov
in
xor
call
add
outsl
inc
push
dec
imul
dec
push
mov
int
sti
push
pop
add
mov
mov
testb
or
jno
or
and
pop
test
fnsave
jnp
call
insb
xor
push
aaa
xchg
pop
lods
cmp
sbb
sub
inc
stc
std
bound
jp
pop
clc
aam
jge
inc
pop
cmpsl
aam
shl
cmp
loopne
mov
inc
enter
enter
mov
cmp
xor
ret
in
pop
popf
imul
add
mov
sti
xchg
hlt
inc
rolb
and
lock
mov
str
or
sub
test
push
xor
cmpb
mov
sbb
mulb
cmpsb
push
mov
and
or
cmp
adc
lcall
enter
xchg
fwait
mov
mov
stos
mov
cmp
in
popf
jno
lock
lahf
cmp
aaa
cli
cltd
fisttps
mov
xor
adc
pop
rcll
push
mov
mov
movsb
je
jge
stos
and
inc
bound
test
push
cwtl
lea
adc
fsubs
rclb
cmc
mov
pushf
dec
xchg
dec
fwait
xlat
xchg
push
lock
mov
pop
int3
push
in
mov
hlt
mov
addb
jb
test
mov
cld
add
shrl
add
xor
xchg
dec
rolb
add
out
pop
inc
addl
imul
mov
cmpsb
mov
je
stos
sbb
dec
iret
or
xor
test
mov
sub
push
addr16
xchg
enter
ja
add
inc
cltd
js
sbb
mov
lret
lods
xchg
jne
mov
push
subb
xchg
pop
clc
stos
test
test
jecxz
add
aas
int3
jae
std
repnz
mov
out
fsts
jb
call
dec
leave
mov
imul
mov
jb
mov
lea
dec
in
push
and
bnd
push
std
xchg
mov
xor
je
aas
popf
xor
jne
mov
out
sbb
sbb
ret
hlt
mov
sub
xchg
mov
mov
test
loopne
fstp
loopne
push
and
stos
push
mov
lahf
push
xchg
incb
inc
hlt
and
fidivl
pusha
testb
int
mov
loop
pop
scas
pop
orl
push
xor
cmp
and
lfs
pushf
jl
cmp
jbe
sub
sub
aam
push
inc
test
test
pop
pushf
mov
data16
dec
ror
sbbl
fcmove
mov
mov
xchg
sub
aad
movsb
push
and
fwait
mov
aad
jle
push
fidivs
inc
inc
leave
dec
and
clc
into
inc
push
pop
fs
hlt
loop
and
int3
and
fstpl
dec
stos
mov
xor
jmp
jne
out
xor
test
cltd
scas
add
and
xor
ljmp
xchg
sbb
int
hlt
fcmovnbe
xchg
adc
aaa
add
pushf
or
and
sahf
movsb
out
faddp
int3
mov
inc
jae
inc
out
mov
xchg
testl
adc
inc
or
sbb
dec
jae
je
xchg
cmp
mov
mov
or
lcall
inc
adc
add
fiadds
mov
and
pusha
ficompl
jns
xor
or
enter
aam
add
or
or
jno
sbb
xlat
adc
push
mov
mov
xorl
sbb
xchg
imul
orl
xchg
pop
repnz
data16
xor
and
inc
xchg
popf
in
pop
scas
cld
sub
sbb
jb
out
xchg
xchg
scas
ss
aas
sbb
jecxz
cli
popa
push
out
inc
jg
adc
out
pop
pop
dec
fwait
and
add
mov
shr
or
loop
fldl
negl
out
ja
fwait
sarl
inc
fdivs
cwtl
add
mov
popa
mov
push
fdivrs
jo
xchg
ds
adc
scas
mov
and
rol
sbb
fdiv
cmp
fs
and
sahf
cli
inc
adc
push
loopne
sbb
cmp
test
nopl
mov
cmp
in
loopne
xor
stc
add
xchg
and
mov
rorl
aaa
lods
dec
sbb
mov
loopne
pop
out
nop
loopne
sbb
or
inc
stos
jecxz
rcrl
xchg
movsl
gs
xor
fwait
jbe
cs
jmp
push
mov
lcall
adc
push
push
push
mov
lret
sub
jmp
pop
jbe
arpl
mulb
jmp
scas
fnstcw
subl
add
sub
and
andb
cmpxchg
xor
push
or
movsl
xlat
mov
lcall
mov
jg
xchg
adc
push
jle
out
push
nop
mov
cmp
pushf
or
sub
mov
ja
mov
ss
mov
jno
xor
push
outsb
call
push
pop
cmc
test
push
push
cli
leave
pop
adc
push
xor
cltd
mov
outsl
push
dec
aas
loop
or
push
and
cmpsl
test
test
in
lret
pop
pushf
fisubrl
adc
mov
enter
jg
lret
aaa
insb
insl
mov
fnstenv
into
push
stos
jo
jae
in
adc
rorb
stos
xchg
adc
xchg
fdivrl
movsl
in
jmp
int3
ljmp
sar
add
and
gs
test
aaa
mov
fstl
test
fcoms
out
mov
mov
aad
in
jl
lock
roll
fstpt
mov
xchg
mov
orl
pop
icebp
or
lods
daa
out
mov
out
ljmp
mov
dec
inc
sbb
jae
ja
dec
cmpsl
cwtl
test
enter
inc
cwtl
push
xor
sbb
jecxz
xor
out
fs
adc
hlt
rorl
loopne
mov
cmp
repnz
out
out
andl
scas
fs
mov
cmpsb
mov
add
es
or
mov
xchg
ficoml
dec
sbb
push
in
sti
pop
gs
mov
pop
shrl
xchg
sbb
jle
dec
pfmul
sbb
cmp
cld
cwtl
xchg
ljmp
inc
cltd
out
leave
mov
into
inc
out
int
mull
xchg
mov
orb
cmpsb
pop
add
cmp
repnz
ss
repnz
inc
dec
movsl
sarb
stos
jl
inc
or
push
jbe
lock
xchg
call
sbbb
std
sarl
es
inc
stc
mov
push
in
inc
fidivrs
mov
ja
bound
test
rcrb
cmc
int
lock
addr16
add
mov
test
jmp
test
stos
cmpsl
cmp
enter
jne
shlb
popa
add
shrb
adc
and
and
mov
daa
dec
xchg
mov
cmp
pop
scas
jno
in
xchg
ljmp
mov
test
test
xor
cmpsl
add
mov
xchg
cs
dec
pop
sbb
sbb
mov
and
xor
lret
rcrl
sti
pop
lock
fildll
pop
jge
cs
dec
bound
sub
cmpsl
cli
pop
sub
xor
data16
inc
xor
push
pop
test
insb
adc
stos
lea
add
lds
inc
sahf
pop
sub
xchg
pusha
ja
lods
or
push
int3
cwtl
fsts
xchg
lret
scas
adc
pop
dec
sbb
jecxz
xor
lods
cld
or
aad
lret
aaa
and
enter
mov
in
pop
fisubl
lret
xchg
jmp
jmp
loop
imul
jecxz
or
jg
jo
mov
mov
fwait
sub
out
mov
jae
cmp
pop
in
fwait
daa
insb
sbb
inc
cltd
insb
movl
and
jae
adc
aad
push
into
mov
test
jae
mov
jl
repz
add
cmp
fsub
sbb
test
jl
dec
cmp
push
mov
pop
data16
lcall
adc
repnz
adc
sub
std
and
es
scas
out
inc
mov
xor
cmp
lret
mov
push
jecxz
xchg
cmpb
push
insl
xor
sub
jmp
dec
clc
cwtl
pop
cmpsb
and
mov
pop
cmp
imul
fwait
mov
scas
or
jecxz
mov
inc
clc
sub
inc
cwtl
xchg
test
jne
js
test
inc
out
fsubrl
mov
push
jp
insb
mov
xor
frstor
or
xchg
rcll
push
repnz
mov
jae
fcompl
and
fwait
into
bound
dec
mov
les
lds
add
arpl
cs
call
sub
jmp
and
jae
dec
ficompl
sub
push
push
and
cli
push
lock
sbb
addr16
xchg
roll
jne
dec
das
arpl
mov
pop
jne
sbb
test
int3
or
mov
test
push
test
outsb
cmc
push
jecxz
mov
mov
sbb
jmp
pushf
mov
scas
xor
cmpl
xor
add
sarl
enter
and
repnz
in
stos
adc
and
pop
in
add
pop
inc
scas
pop
les
int3
jle
push
or
into
pop
outsb
loope
test
int
push
add
outsb
xor
or
inc
mov
out
and
ret
int
adc
icebp
aaa
mov
js
or
iret
mov
repnz
add
sbb
adc
xor
xchg
daa
cmpsl
inc
xchg
jecxz
push
fmul
sbbl
sbb
cmp
jne
add
in
ret
repz
push
sub
and
imul
cmp
or
cld
xchg
jbe
popa
int
pop
or
out
push
cmp
mov
lea
add
dec
mov
hlt
adc
insl
aad
and
cmp
popa
push
orl
add
cltd
pop
sub
sahf
hlt
mov
out
jmp
adc
gs
jo
jge
adc
sub
mov
jle
sub
mov
pop
aaa
mov
lods
aad
mov
fcoms
xor
inc
and
mov
into
add
test
push
dec
loope
push
inc
mov
out
inc
scas
and
daa
rclb
cmp
add
xchg
rolb
sbb
adc
test
mov
lcall
xor
popa
std
lret
push
loopne
jg
aaa
jnp
sbb
mov
rcpps
aaa
push
out
iret
inc
fld
cld
loopne
cmp
cmp
les
pop
xchg
popl
insl
sbb
movsl
jmp
mov
lret
das
xchg
out
adc
clc
mov
dec
sbb
push
hlt
ret
sbb
xchg
jl
mov
aam
dec
lds
pop
ret
repz
les
pop
mov
ja
sub
dec
inc
dec
push
jbe
sbb
shlb
pop
dec
sar
lahf
mov
pushf
pop
push
call
add
push
inc
repnz
hlt
pushf
push
lcall
push
repnz
push
fisttpll
in
jp
jmp
xor
fcoms
dec
inc
add
mov
pushf
les
test
out
or
sbb
enter
push
add
dec
and
cld
push
shll
iret
enter
jge
mov
or
mov
repnz
or
xor
fstl
icebp
fisubrs
ss
call
mov
inc
lret
lds
jg
cmpsl
rorb
and
mov
lods
xlat
cmp
dec
cmpsl
push
xchg
jmp
cmp
or
adc
outsl
xchg
and
repz
and
fsubs
xor
jecxz
pop
hlt
push
lods
popa
add
xor
sbbl
cmc
imul
xor
mov
cmp
xchg
mov
cmp
and
xchg
popf
scas
xchg
cmp
sub
fs
setno
ds
dec
mov
loopne
rcrb
sub
or
and
popf
mov
jge
arpl
push
sub
out
out
mov
das
orb
push
icebp
lret
stos
or
pop
sbb
pop
fdivrp
mov
mov
pop
jle
sbb
jo
mov
or
popa
lock
fistpll
sub
test
jl
sbb
fldt
dec
shl
adc
stos
stos
sbbl
and
inc
fsubs
lret
jl
adc
imul
sbb
sbb
mov
xor
xchg
jmp
jae
out
pop
divl
mov
xlat
dec
dec
jne
popa
imul
enter
dec
jp
mull
push
aaa
test
push
adc
and
adc
movsb
in
es
mov
loopne
jb
ficoml
in
pop
jge
popa
or
add
mov
orl
xchg
and
or
into
movsb
in
les
jge
out
xor
in
adc
hlt
cwtl
sti
cmpb
or
lahf
xchg
pop
push
dec
aam
add
inc
sbb
imul
sub
inc
adc
add
pop
sahf
sbb
xchg
push
aaa
popf
iret
adc
hlt
mov
mov
jge
not
jmp
sbb
jl
sub
jne
in
insb
inc
xor
std
mov
push
imul
push
pop
jns
dec
sahf
pop
dec
insb
insb
jns
or
subb
xchg
cmc
xchg
lea
sbb
or
push
popf
push
jp
pop
lret
pusha
je
mov
inc
outsb
std
jno
ret
mov
mov
jns
popf
int
lahf
add
push
rorl
iret
sbb
ljmp
push
jge
push
ds
lods
jge
xor
loope
imulb
cli
stc
cmpsl
stos
sub
jg
dec
outsl
sahf
cmp
sbb
scas
lods
cmp
xchg
adc
adcb
cli
push
add
and
jne
or
out
sub
inc
xchg
dec
aas
fcom
sahf
test
imul
call
clc
dec
push
adc
loop
pushf
mov
adc
testl
enter
test
outsl
inc
add
jbe
xorl
mov
mov
je
mov
fidivl
addl
sbb
outsl
sub
std
inc
xchg
ret
jge
mov
les
bound
lcall
cs
xchg
stos
cmp
mov
sbbb
jbe
shr
push
decb
jo
out
addl
pop
or
les
or
fwait
jb
xor
into
lock
insl
inc
sbb
aas
test
out
pusha
cld
mov
out
xor
popf
jae
xchg
sbb
cmpsl
push
xchg
adc
je
clc
cmc
jmp
in
fs
shlb
hlt
mov
push
sbb
and
ds
jecxz
mov
cld
sarb
nop
jge
es
lods
or
loopne
sti
pop
mov
jg
out
ffree
adc
shrb
sub
lret
sub
push
jb
loop
xor
in
mov
icebp
xor
scas
push
addb
sar
jno
into
call
stos
xlat
inc
push
pop
pop
fnsave
adc
stos
mov
fdivs
test
mov
push
xlat
rcrb
stos
lods
shlb
ds
mov
or
sbb
test
cmp
cmpsb
add
lods
fsubl
add
test
jbe
fistpll
mov
iret
inc
mov
nop
mov
or
mov
popf
aad
mov
test
stos
loop
dec
shrb
mov
in
mov
aas
push
arpl
push
les
mov
iret
jbe
jecxz
jne
mov
outsb
rorb
lods
arpl
ds
sbb
into
mov
mov
mov
inc
xor
xchg
mov
jbe
ds
mov
push
and
mov
cmpsb
xchg
jecxz
in
lret
xor
jg
in
ja
in
les
mov
mov
and
cmp
jmp
repz
push
mov
mov
sub
popa
jl
je
nop
orb
dec
mov
inc
push
enter
test
mov
outsl
xor
je
cs
rclb
pop
sub
and
cmp
sbb
popa
mov
neg
mov
push
push
mov
shlb
and
add
sub
loope
sbb
stos
adcb
repz
imul
mov
mov
rcrb
push
pushfw
dec
lcall
js
cmp
sub
scas
xchg
mov
pop
fisubl
push
sti
xchg
jnp
int3
dec
rol
lods
and
test
gs
mov
icebp
les
jmp
sti
mov
xchg
jg
fbstp
dec
cmpsl
pop
xor
push
push
or
pop
idivl
push
sbb
cs
dec
out
lds
fisttpll
xchg
int
xor
mov
out
dec
ss
out
in
pushf
sub
data16
or
ret
mov
insb
mov
pop
push
fwait
test
xchg
loopne
mov
jmp
mov
xor
inc
sub
out
aam
psubw
jae
fidivrl
xchg
mov
sahf
inc
in
sbb
dec
mov
sub
call
mov
aas
pop
lock
mov
dec
les
ljmp
inc
cmp
mov
ljmp
loopne
xchg
in
push
imul
dec
loopne
jge
adc
lret
cs
pop
popa
fimull
imul
cmp
xorl
ror
push
mov
sbb
popl
out
xchg
fprem1
repnz
sub
testb
movl
xchg
xor
ret
jbe
dec
pop
dec
inc
inc
mov
push
mov
xor
out
loop
lock
inc
ss
xor
in
scas
stos
mov
dec
push
pop
fstpl
in
mov
in
clc
cmp
mov
icebp
dec
cmp
mov
je
cmpb
xchg
aam
add
add
adc
ljmp
cmp
mov
mulb
out
xchg
mov
insb
insb
in
mov
jns
dec
mov
pop
enter
movsb
andl
stos
loop
xor
hlt
sbb
icebp
movsb
bound
push
shlb
outsl
add
cmp
into
mov
leave
fsubrs
sub
xor
xor
xor
xchg
popa
cs
dec
enter
pop
jbe
add
xchg
xchg
decb
dec
cmp
cmp
mov
imul
dec
add
fisubrl
pop
mov
fnstenv
mov
jae
data16
and
movsl
or
data16
test
pushf
in
out
addr16
dec
sub
cwtl
xor
xchg
sahf
pop
fidivrs
xchg
loope
mov
mov
andl
push
mov
pop
imul
or
in
leave
out
jmp
rcrl
jle
mov
jno
fstl
dec
daa
lods
mov
test
aam
mov
icebp
bound
data16
cltd
sbb
ljmp
add
jno
lods
and
rcrb
mov
cmp
sbb
jns
pop
fimull
enter
cwtl
xor
daa
shll
xor
push
adc
arpl
fmull
pop
jne
es
test
jnp
adc
out
movsl
lea
out
je
popa
mov
jg
lahf
jecxz
xacquire
and
lods
sub
ljmp
lcall
add
sbb
outsb
popl
mov
cmp
hlt
sbb
jecxz
push
sub
les
ret
fmuls
insl
pop
dec
sti
call
fistpll
rclb
add
jle
dec
lods
sarb
adc
xchg
xchg
mov
and
cmpsb
sub
lret
jg
rcll
sar
mov
cltd
sub
test
dec
pusha
rolb
mov
imul
xor
out
jecxz
andb
scas
cmp
push
jg
outsl
xchg
inc
mov
cmpsb
in
mov
or
loop
inc
imul
cli
inc
es
push
mov
sbb
outsl
sbb
loopne
xchg
fiadds
outsl
pop
pop
sarl
xor
sbb
or
xorb
adc
leave
fbld
push
jle
inc
sbb
xchg
adc
subb
sbbl
mov
pop
cld
fbld
cmpsl
add
cmc
movsb
adc
mov
adc
adc
mov
jl
js
cld
xor
cmp
pushf
iret
ss
adc
mov
imul
cmpl
jecxz
stos
and
gs
idivb
cmp
xchg
mov
jne
push
xlat
xchg
cmpsb
dec
test
mov
aas
repz
and
dec
ret
inc
jo
in
test
cmp
sbb
push
pcmpgtw
adc
cmp
hlt
test
sub
inc
push
jle
hlt
clc
pop
fs
jae
ret
mov
cmp
mov
mov
pop
push
sub
pop
push
cwtl
add
inc
mov
and
addb
scas
add
add
xorb
add
std
dec
adc
outsb
inc
loopne
cltd
je
std
arpl
cmp
or
mov
and
dec
cmp
movb
in
std
sbb
inc
inc
or
and
and
pop
aam
das
out
xchg
icebp
fadds
add
mov
ds
int3
cmp
sub
xorb
jb
fst
pop
xchg
mov
ds
nop
jae
inc
lret
shrb
or
push
adc
cltd
mov
cltd
jmp
mov
jg
insb
dec
imul
adc
shl
xchg
adc
mov
xchg
jge
mulb
push
mov
sub
repz
dec
clc
pop
rcrb
mov
popf
int
mov
mov
ss
sub
inc
lock
jp
and
mov
leave
repz
mov
add
dec
xor
add
push
jecxz
call
ljmp
mov
mov
cmp
clc
sub
push
fs
cltd
mov
pushf
mov
mov
mov
rcll
dec
aad
test
mov
mov
scas
movb
pop
je
repz
shl
xor
ror
cltd
adc
push
xchg
mov
mov
call
and
cmp
in
pop
mov
scas
sarb
jnp
add
push
stc
icebp
popf
imul
aad
add
mov
mov
inc
ljmp
in
mov
mov
pushf
mov
sbb
nopl
cmpsl
sub
dec
cmc
adc
cmp
mov
lods
insl
pop
cmp
arpl
mov
jo
popa
xchg
lcall
in
call
lds
xor
out
test
bswap
insl
test
int
in
inc
hlt
daa
jae
nop
dec
sub
stc
out
bnd
xchg
lret
out
sahf
pop
sub
inc
fsubs
les
dec
mov
in
mov
jne
inc
cmpsl
jb
push
int3
mov
xchg
jae
pop
dec
xchg
sahf
jne
in
in
push
push
cmp
shll
dec
push
sub
popl
mov
dec
pop
loop
push
add
pop
sub
add
inc
ret
in
sbb
pop
cmp
scas
popa
repz
mov
dec
add
sarl
xlat
add
xor
jge
mov
or
ljmp
jle
cmp
rorb
ret
xchg
pop
mov
pop
ljmp
inc
xor
mov
xchg
jo
pop
dec
add
lods
xor
cmp
jae
icebp
inc
push
and
mov
cmpsb
xchg
jno
mov
jnp
mov
rcrb
inc
adc
mov
mov
roll
bound
mov
shrl
mov
mov
xlat
hlt
or
cltd
sbb
mov
adc
popf
mov
pop
adc
daa
dec
mov
daa
retw
or
lods
jo
jnp
arpl
idivb
lret
into
insb
xchg
loopne
xchg
or
repnz
mov
mov
sub
push
stos
mov
aaa
and
mov
and
mov
scas
adc
shlb
pop
jp
mov
xchg
jecxz
adc
or
dec
xor
cli
sahf
jb
mov
and
or
sub
mov
inc
cmpsl
mov
and
les
lods
mov
leave
ret
negb
xchg
int3
cmpsb
addr16
or
dec
xor
je
jnp
jae
xor
sub
dec
or
jnp
inc
sbb
adc
push
mov
data16
dec
xchg
rcl
and
addr16
xor
inc
dec
inc
ret
cmp
jle
lret
mov
jae
popa
loop
cmp
mov
addr16
stos
insb
add
add
adc
sahf
mov
aad
push
jno
and
inc
jp
or
cmp
fwait
sbb
enter
or
fwait
pop
pop
adc
sbb
push
pop
ret
outsl
sti
in
aam
xchg
lds
push
icebp
movsb
aaa
test
xchg
lret
mov
mulb
lcall
mov
repnz
or
pop
dec
mov
test
inc
test
cmp
in
ss
aas
outsl
pop
inc
ja
fwait
das
dec
mov
inc
dec
ljmp
xchg
push
das
rcrl
idiv
sbb
adc
test
mov
rcr
call
scas
iret
jle
int
imul
test
int3
stos
scas
or
jge
jno
jns
out
lds
xchg
dec
mov
sti
sub
jge
fisubrs
xchg
mov
out
sbb
test
in
sub
mov
pop
rorl
into
jns
mov
iret
sbbl
and
arpl
mov
nop
shrl
jecxz
jp
popf
adc
mov
cmp
pushf
xchg
lock
outsl
pop
stos
xchg
cmp
mov
negb
das
icebp
push
dec
rolb
aas
std
test
cld
jg
pop
pop
hlt
push
das
out
sub
inc
fucomp
mov
pop
sub
das
pop
mov
jo
inc
add
or
shll
sbb
mov
call
cld
push
fiaddl
push
insb
dec
fistps
xchg
bound
add
loope
and
fidivl
iret
mulb
xor
adc
jle
lods
sub
lahf
mov
xor
sub
adc
cmpsl
mov
iret
fimuls
push
clc
out
mov
mov
sub
mov
mov
pop
inc
leave
sub
out
pop
les
pushf
fmul
add
les
insb
lahf
test
movsl
mov
dec
mov
cmp
cmp
push
xlat
outsb
xchg
adcb
les
pop
call
jnp
lds
stc
adc
xchg
push
ss
cmp
imul
frstor
dec
lahf
movsb
jg
lods
popa
inc
imul
divb
sbb
mov
pop
inc
fmuls
dec
sbb
pushf
jmp
jp
cwtl
and
repz
inc
clc
sub
inc
xor
mov
clc
sbb
sbb
adc
es
dec
daa
sub
nop
cmpsb
out
movsb
vcvttss2si
inc
or
repz
fwait
mov
add
movsl
dec
mov
jp
lock
movsb
sub
repnz
das
mov
insl
ret
popa
sarl
pop
or
jecxz
mov
push
sbb
mov
dec
dec
mov
jl
xchg
cmp
inc
sarb
adc
mov
mov
insb
loop
out
add
or
aad
adc
ljmp
rcr
gs
pop
hlt
mov
or
mov
int
push
and
ss
dec
lock
hlt
cltd
mov
xchg
adc
lcall
sbb
stos
into
inc
loopne
lods
sub
pop
and
mov
insl
or
ds
notl
add
cmp
mov
cmpsb
andb
cwtl
pop
lock
lret
mov
and
sahf
or
fisubs
adc
test
pop
mov
pusha
lret
inc
in
and
push
inc
and
and
cld
lods
dec
daa
jns
push
xchg
stos
je
in
add
jp
pop
lcall
scas
repnz
jno
out
sub
push
sbbb
rcrb
mov
dec
adc
popa
add
xchg
jge
and
stos
imul
cmpl
jmp
xchg
xor
xor
mov
mov
cmp
aam
sahf
ss
xor
pop
mov
push
cmp
cmpsl
sbbb
inc
mov
cmpsb
unpcklps
mov
icebp
inc
xchg
xchg
and
sub
movsb
pop
stos
push
cmc
jb
and
in
fisttpll
dec
addr16
cmpsl
scas
mov
dec
adc
outsb
and
sub
mov
mov
add
push
inc
leave
sti
rep
inc
daa
das
jl
enter
cmp
fs
jbe
sahf
pop
stos
cmp
sbbl
into
push
xor
lret
sbbl
fdivr
bound
jb
cmpsb
ficomps
ror
fldt
cmp
sub
mov
push
mov
into
dec
cs
sub
jl
dec
push
sti
pop
xchg
scas
dec
fcmovu
jne
dec
inc
mov
rol
daa
push
jae
ds
nop
mov
ss
scas
std
add
or
mov
outsl
add
adc
jmp
cmp
imulb
sbbb
mov
repnz
jnp
insb
insb
or
pop
jns
pop
inc
outsl
movsb
enter
mov
dec
mov
outsb
pushf
rolb
mov
aad
xor
jmp
adc
push
sub
xchg
mov
enter
mov
mov
cmpsl
stos
outsb
xlat
pop
and
rolb
add
mov
scas
or
cmc
lods
cmp
or
leave
hlt
and
scas
stos
mov
sarl
sarl
jae
out
outsb
pop
jbe
jge
hlt
sbb
pop
std
push
and
mov
lret
rorb
lahf
sub
xchg
lods
mulb
xor
sbb
shl
inc
shll
sub
mov
mov
pop
dec
mov
fldcw
inc
pop
pop
mov
xchg
push
movsb
inc
adc
add
xor
or
push
adc
jo
in
adc
mov
mov
gs
sarb
lock
cmpb
mov
test
lds
jg
inc
arpl
dec
jno
test
add
leave
stc
inc
aad
les
mov
or
mov
pop
shrl
push
in
ficoms
rorl
add
sbb
leave
insl
xchg
lcall
mov
and
lea
aam
repz
stos
loop
push
sub
mov
in
xor
or
lret
or
lret
imul
mov
mov
pop
das
sub
cmp
sbb
xor
jo
imul
xchg
daa
mov
jmp
jp
test
cmpsb
daa
push
dec
out
dec
xor
xchg
adc
ds
imul
xor
sahf
jmp
jle
and
sbb
pusha
sarb
out
hlt
sahf
push
push
mov
push
enter
aas
push
loopne
add
leave
inc
pop
cmp
xchg
orb
or
std
dec
insl
xor
fwait
insb
jno
xchg
das
sbb
jmp
xchg
cmp
sarb
pop
push
pop
jno
addr16
sub
rorl
cltd
jae
ficoms
mov
ds
jno
cmc
cld
xor
rorb
adc
fbstp
les
mov
adc
out
adc
jb
mov
cmp
lret
pop
mov
mov
pop
les
and
pop
pop
push
bsr
fnstenv
mov
push
out
xchg
gs
das
jg
or
mov
cwtl
ficoml
sti
push
adc
pop
sti
mov
mov
sbb
xlat
sub
lods
jle
jecxz
leave
xchg
pop
pop
in
xchg
or
inc
cmovnp
cmp
clc
mov
das
cmp
xchg
cli
imul
mov
jb
xchg
insl
je
inc
int
pop
out
sbb
hlt
repnz
cmc
int3
mov
cmp
loopne
shl
mov
jne
cwtl
das
mov
cmp
dec
xchg
outsl
pop
shr
inc
lods
out
mov
mov
xchg
sbb
inc
shl
mov
sbb
sbb
mov
aad
xchg
or
adcb
fisttps
inc
or
xchg
inc
out
test
insb
call
or
fnclex
push
lret
movlps
loopne
hlt
sahf
xchg
ljmp
mov
repnz
lds
add
dec
add
mov
cli
mov
int3
xchg
and
cmp
and
pop
repz
cmc
ds
adcl
nop
outsl
cmp
mov
add
lret
std
shll
dec
mov
adc
push
mov
xchg
sahf
outsl
add
int3
mov
aad
js
lods
fdiv
test
fstpl
add
subb
ffreep
mov
mov
dec
dec
xor
or
jne,pt
and
repz
test
ds
jmp
icebp
inc
pusha
cltd
rorl
xchg
das
mov
cmp
mov
push
call
cmp
popf
add
jge
add
mov
out
inc
mov
pop
into
mov
pushf
test
shlb
outsb
dec
push
sbb
mov
repnz
fisubl
sarb
push
cltd
or
push
push
pop
fcomps
dec
mov
dec
and
sub
mov
fcom
xchg
mov
lret
rorl
push
push
mov
or
data16
mov
jge
cmp
cmp
cmpsl
stc
in
sarb
call
popa
xchg
fidivl
jmp
push
xlat
dec
xchg
fidivs
dec
xchg
or
and
lea
adc
xor
arpl
adc
cwtl
fdivrp
fs
addr16
rorl
scas
les
push
cmp
mov
jns
aad
inc
popf
test
lret
xchg
dec
or
les
data16
push
cmc
sub
mov
xor
cld
fisttps
sbb
jge
sbb
xor
imul
pop
or
adc
cmp
sub
or
xchg
call
rcrl
or
pop
push
dec
mov
pusha
xor
lock
shrb
out
xchg
jmp
and
shrl
and
jo
add
rcrl
stos
mov
lcall
aas
insl
or
fists
enter
fldenv
adc
hlt
or
push
popa
dec
sub
pop
lret
cltd
fwait
jno
outsb
mov
arpl
call
insl
inc
mov
mov
xchg
cmp
movsl
jmp
aaa
movsl
rol
sti
fisttpll
lods
into
or
lods
gs
add
arpl
lods
jg
push
rcrl
push
xor
jp
mov
sti
xchg
dec
es
xor
int
mov
leave
inc
insb
xor
cmp
imul
shll
scas
xor
mov
in
mov
call
push
pop
sbb
mov
inc
sahf
in
jecxz
mov
sbb
pushf
movb
sbb
stc
loopne
push
inc
rclb
lods
push
aam
xor
in
cltd
dec
int3
mov
lods
cmp
sub
dec
movsb
xchg
pop
and
sbb
pop
imul
mov
sbbb
outsb
sahf
push
mov
dec
mov
pop
pop
into
cmp
clc
jle
lahf
mov
sbb
fs
xchg
add
or
loop
mov
mulb
and
mov
push
sub
sbb
jo
imul
dec
mov
inc
rol
jecxz
xchg
mov
fimull
mov
jge
mov
out
rorb
xor
xor
test
add
push
mov
fimuls
or
outsb
sbb
fxch
mov
stos
stc
sub
cld
dec
inc
dec
lods
sub
stos
inc
push
xchg
or
cmp
inc
movsl
jae
into
je
insb
jnp
adc
orb
dec
fs
les
pop
cs
cmpsb
xchg
xor
inc
push
cwtl
dec
pop
fidivs
fidivrs
sub
or
es
mov
xchg
pop
ret
and
inc
js
push
dec
sbb
fwait
push
dec
in
jne
dec
pop
cmpsl
adc
jecxz
mov
adc
jp
js
adc
adc
jo
adc
scas
mov
dec
jb
xor
dec
sbb
mov
outsb
lea
stos
popf
inc
jge
mov
push
dec
cld
sbb
outsb
int
fldl
icebp
in
xchg
into
int
inc
sahf
inc
cmp
jne
lds
loopne
and
sub
aad
push
adc
jae
mov
loopne
dec
les
cmpsl
inc
jmp
dec
mov
mov
ret
inc
and
sub
rcl
mov
shl
mov
cwtl
sarl
pop
shlb
inc
lock
int
aad
adc
xchg
pop
pop
dec
pop
ret
rcll
popf
mov
and
enter
int
xor
xchg
addr16
insl
ljmp
sti
xor
and
cmp
mov
in
mov
jnp
daa
xchg
inc
xchg
dec
in
mov
pop
sub
cmpl
insl
cmp
adc
stos
daa
xchg
sub
outsb
into
cwtl
insb
aas
addr16
xchg
cli
inc
mov
pop
xchg
ret
cmc
inc
mov
mov
and
mov
insl
mov
pushf
test
sub
sahf
cmpl
sub
int
mov
mov
in
ret
sbb
test
fwait
in
push
aaa
pop
mov
shl
stos
sbb
mov
aad
inc
inc
movsl
mov
dec
mov
in
shl
cld
jecxz
aaa
xchg
and
jmp
mov
xor
pop
hlt
xchg
mov
sti
outsb
lahf
and
mov
es
sub
lcall
mov
pop
fbld
fidivs
xchg
push
sbb
cwtl
pop
push
arpl
fsubs
dec
cmc
add
mov
push
mov
filds
out
pop
pop
filds
decl
jmp
cs
or
jb
pop
cmp
mov
cmp
jnp
in
and
ret
cmc
insl
cmp
decl
sbb
or
outsb
imul
mov
mov
dec
mov
xchg
aad
or
icebp
jnp
lds
jmp
or
mov
mov
in
pop
jnp
repz
add
loopne
aas
clc
dec
jns
inc
repz
xor
and
fmuls
sbb
cli
shlb
scas
mov
loop
fldenv
int
test
nop
xor
int3
adc
or
int
push
fstps
push
jno
dec
lock
dec
mov
cmp
mov
movsb
movsb
jo
dec
pop
adc
adc
daa
jae
insl
pop
xor
sbb
lods
jge
add
movsb
pusha
cwtl
movsb
push
adc
loopne
cmp
and
out
lahf
mov
inc
mov
ljmp
int3
dec
push
cli
sub
xor
mov
mov
repnz
popf
popa
cli
push
mov
mov
or
add
push
mov
pop
jns
xor
inc
sbb
pop
mov
sbb
mov
je
mov
dec
cld
mov
xor
ret
xchg
push
in
imul
fdivr
jno
lea
ljmp
jns
enter
xchg
or
sbb
fistps
pop
or
test
insb
pop
fwait
loopne
movl
pop
pusha
pushf
sbb
mov
sub
rol
sub
test
bswap
arpl
mov
mov
jne,pt
lods
nop
mov
shrb
inc
lretw
repz
xor
dec
ss
mov
movsl
clc
lods
pop
sti
or
mov
out
imul
push
clc
test
ss
mov
icebp
push
dec
push
loopne
mov
stos
test
fwait
sbb
out
cwtl
pop
mov
cld
test
movsl
inc
jmp
add
movsb
dec
imul
shr
pushf
daa
mov
out
lea
iret
jp
push
push
nop
xchg
imul
or
mov
imul
scas
and
xor
aas
jle
iret
mov
je
or
ret
adc
xchg
jmp
xchg
insl
mov
push
inc
pop
shr
xchg
push
push
adc
mov
and
add
dec
cli
mov
in
adc
cmp
cmp
and
call
jno
push
sbb
ja
mov
lret
aaa
xchg
cmp
sbb
das
push
outsl
icebp
jmp
bound
sub
in
pusha
insl
in
out
insb
dec
push
add
roll
imull
pop
lret
sahf
xorb
cmp
std
outsb
xor
fisubrs
xchg
into
jno
mov
ret
mov
andb
into
mov
out
mov
push
shll
aas
and
imul
cltd
lods
push
test
les
add
jmp
iret
popa
fucom
cmp
push
jnp
or
and
in
pop
js
cwtl
push
std
daa
loop
rcl
cwtl
mov
mov
js
mov
fists
jmp
mov
hlt
sti
iret
lods
add
hlt
adc
cmpsb
pop
aam
jo
push
clc
sarb
ss
lea
data16
and
push
xchg
xor
je
jbe
dec
pop
mov
call
cmpsb
mov
lods
icebp
cmp
aad
cltd
lret
adc
mov
int
dec
jl
pop
jb
psadbw
mov
test
fbstp
add
dec
mov
push
repz
adc
or
dec
and
pop
jo
adcb
xor
orb
jmp
loopne
adc
repz
jbe
pop
jl
cmp
adc
dec
mov
cmp
cmc
xlat
jmp
test
aas
repnz
push
cmc
xchg
dec
sub
lahf
ja
insb
xchg
adc
cli
and
dec
mov
push
pop
into
xchg
cmp
ss
lock
popa
lods
sub
daa
cmpsb
push
lret
xchg
fcompl
scas
cmpsb
mov
add
popf
adc
xor
pop
test
testb
sbb
inc
mov
or
mov
popf
jae
xor
mov
sti
jbe
lods
xor
fwait
scas
mov
adc
lods
shl
pusha
fadd
push
ljmp
xor
in
xchg
and
push
out
testb
pop
sti
mov
jbe
jle
call
das
sub
xlat
pop
enter
cmc
cmpsl
mov
mov
inc
push
mov
mov
cmpsb
outsl
adc
pop
push
pop
xchg
inc
and
cltd
fsubrs
aad
hlt
lock
cltd
jb
into
out
movsb
subb
xor
pop
inc
push
imul
mov
out
xchg
fdiv
inc
jmp
rorb
in
mov
mov
shlb
adc
jne
test
nop
idivb
inc
repnz
mov
scas
es
cwtl
fsts
add
adc
dec
jo
pop
repnz
outsb
mov
or
aaa
shl
enter
mov
stos
out
mov
sti
xchg
cltd
xchg
mov
stc
mov
push
xor
shl
dec
cltd
adc
stc
pushf
lret
dec
push
jnp
inc
fwait
jmp
fidivl
push
cmp
les
sbb
lahf
movsl
or
pushf
fwait
jae
jge
push
mov
inc
xor
mov
pop
dec
sbb
xor
xchg
lret
inc
aas
sarl
leave
sub
xchg
ds
sbbl
ljmp
jno
insl
je
mov
shll
push
addl
pop
mov
leave
add
stc
rclb
and
push
jl
sti
xchg
or
in
jp
pushf
mov
out
xor
rclb
adc
data16
mov
pop
nop
sbb
je
sub
sub
inc
lock
hlt
arpl
mov
pop
hlt
xchg
push
xlat
cs
das
jg
mov
and
xchg
repz
mov
mov
out
and
js
test
push
add
aas
out
int
and
addr16
js
cli
sub
mov
lods
popf
rcrl
cltd
cmp
test
lds
je
jge
and
aad
xchg
cmp
pop
pop
mov
imul
jns
pop
pop
pop
sub
pop
push
divl
jmp
mov
xor
xchg
dec
out
inc
fnstsw
cmp
loopne
jbe
aas
mov
add
divb
adc
push
mov
sub
inc
popf
sbb
mov
loopne
mov
pop
dec
scas
pop
jmp
mov
or
ds
dec
fisubl
xchg
or
add
pop
xchg
shrl
xchg
pop
sub
sub
mov
inc
mov
push
mov
insl
fdivs
and
add
das
loope
js
mov
lcall
pop
lods
test
push
sub
loop
push
xor
pop
push
sub
lock
xor
sti
lcall
cwtl
in
xor
rcll
imul
xlat
adc
gs
bound
xchg
xchg
xchg
dec
xor
mov
test
hlt
arpl
fwait
or
mov
jg
push
add
add
inc
cli
jae
fdivrs
stc
lret
or
mov
flds
pop
jmp
jge
lahf
xor
sub
jle
adc
int3
fists
loopne
out
test
bound
insl
mov
in
test
dec
mov
sahf
stos
jmp
xchg
fdivl
jl
leave
int
movsb
inc
push
pop
sbb
dec
mov
mov
mov
imul
test
sbb
mov
pop
sbb
incb
orb
inc
xor
lahf
sub
add
shll
mov
orl
imul
sub
lods
mov
scas
mov
dec
je
out
mulb
sub
dec
aad
loope
fsubl
int
pop
or
or
fs
ds
jne
in
xchg
xlat
addr16
cmpsl
mov
jle
outsb
cld
shlb
pop
mov
mov
push
push
aaa
rol
pop
cltd
sarl
mov
pushf
pushf
xchg
out
inc
xchg
sub
fmuls
dec
jae
aas
xchg
loope
cmp
popf
lods
inc
jns
test
jg
jmp
jbe
hlt
push
loopne
mov
jb
push
sub
std
push
mov
aaa
aam
repnz
lds
add
repz
mov
and
fs
outsl
cli
jnp
mov
add
fisttpl
sbb
xchg
sti
push
cmc
aad
jae
push
push
sbb
sbbl
mov
xlat
int3
cmp
mov
inc
lods
sbb
adc
jno
cmp
jp
mov
ds
jp
fdivl
push
mov
imul
test
dec
out
inc
ss
sub
scas
sub
sub
mov
idivl
call
scas
push
sbb
pop
fisubs
jae
movl
mov
cmpsb
mov
or
jg
inc
mov
jbe
dec
add
insl
hlt
incl
ja
in
jge
xchg
fmul
pop
in
jecxz
repz
mov
shll
aad
das
mov
rolb
mov
leave
loope
mov
sub
pusha
pop
xor
call
scas
push
jne
mov
mov
dec
test
fwait
movsl
pop
xor
mov
lock
test
mov
mov
mov
mov
adc
loopne
stos
sub
inc
mov
push
stos
stos
subl
test
mov
and
mov
pop
enter
popf
loopne
sub
jge
mov
push
add
dec
movsl
jmp
imulb
push
xchg
rcl
jbe
repz
pushf
adc
js
stos
lcall
xchg
jae
mov
mov
jmp
adc
rcr
js
mov
xchg
xchg
mov
mov
outsl
bound
cmp
pop
push
aaa
sbb
outsb
fcoms
es
mov
mov
xor
or
loope
shrb
scas
and
cmpsl
dec
mov
js
daa
aaa
aaa
fsubr
mov
jp
jo
fdivl
mov
or
add
dec
adc
movsb
mov
mov
rcr
daa
aam
and
int3
sub
loop
mov
aad
mov
fists
xor
sbb
dec
jg,pt
xor
sbb
mov
lock
mov
shlb
xchg
cmp
mov
and
fs
icebp
dec
sti
sub
imul
mov
jmp
adc
push
and
inc
push
out
je
adc
mov
dec
jo
in
add
xor
sub
cld
xchg
mov
dec
mov
fisttpll
jne
dec
push
insl
jle
mov
sar
dec
xchg
out
cmpb
fldl
sti
add
ljmp
sti
jo
in
mov
test
adc
jmp
aaa
lods
sub
test
jno
xchg
xchg
mov
into
aas
hlt
cltd
jns
push
mov
sub
popa
mov
enter
hlt
sbb
cwtl
xor
jne
andb
jae
in
pop
insb
cmp
pop
jne
xlat
aam
aad
sub
mov
cmp
movb
adc
insb
xor
sti
push
lret
cmp
imul
mov
adc
fwait
or
cld
add
dec
stc
mov
fnstcw
into
mov
xchg
xchg
jmp
int
leave
inc
stos
push
pop
fisttps
lds
je
xlat
loope
lea
jmp
scas
jnp
sbb
loop
decl
cmp
pop
xor
or
mov
data16
adcb
jg
aam
lods
or
mov
dec
add
stc
roll
dec
dec
push
mov
jnp
or
sub
cld
jbe
icebp
int3
jbe
movsb
sbb
push
mov
inc
jmp
call
push
push
push
inc
sbbb
loop
testl
adc
addr16
mov
push
leave
xor
pop
movq
pop
dec
xchg
repz
fcmovu
sbb
iret
call
subb
pop
pushf
cmpsl
jae
mov
jno
test
aam
cmpsb
pop
mov
sbb
int3
pop
pop
add
mov
jns
pop
xchg
cmpsl
xlat
mov
adc
dec
lds
and
in
ret
jbe
aas
ficomps
sbb
adc
cld
cwtl
or
pop
enter
idivl
outsl
aaa
mov
addr16
in
sbb
mov
add
cmpsl
sub
pop
mov
xchg
sub
jecxz
jmp
cld
and
test
stos
lahf
pop
in
out
fsubs
aas
stc
jns
jns
and
es
jo
out
pop
aad
mov
jo
stos
gs
stos
jge
adc
scas
js
xchg
push
inc
movsb
in
mov
cmp
mov
rolb
ret
pop
sub
ljmp
in
xchg
fnsave
sub
mov
jge
jl
mov
test
cmp
lcall
cli
and
lahf
fs
push
in
add
rcrl
or
mov
add
cmp
sbb
mov
cli
ror
bound
adc
mov
sahf
mov
mov
pop
arpl
ret
inc
dec
mov
push
dec
in
cmpb
adc
pop
and
loop
sbb
mov
inc
test
sbb
jg
lret
and
push
jo
inc
enter
xor
and
sub
gs
xchg
cltd
out
lret
into
arpl
roll
push
enter
sbbl
adc
es
pop
mov
movsl
cmpsb
clc
int3
adc
mov
dec
pop
bound
or
xor
nop
xchg
aam
inc
imul
cmp
pusha
inc
add
in
mov
mov
lds
xchg
lcall
pop
adc
test
aam
sahf
push
call
xor
sbb
cmc
fs
aaa
inc
dec
adc
ret
clc
ficomps
jbe
sbb
mov
aas
popf
jle
mov
out
ja
daa
sub
repnz
sbb
dec
sub
lock
mov
lods
mov
xchg
jno
lea
sbb
in
push
jns
and
pusha
push
push
call
mov
push
repnz
lock
add
push
dec
test
stos
shrb
mov
xor
pop
push
popa
popf
push
xor
movsb
ds
movsl
mov
adc
mov
jmp
movsl
xchg
mov
xchg
and
mov
or
in
rclb
or
pop
inc
jge
sbb
xor
icebp
add
mov
jbe
add
in
push
imul
jmp
cmp
mov
cs
scas
cmpsb
les
mov
mov
dec
stos
push
fs
cld
sbbb
mov
sti
jle
xchg
sbb
xor
dec
sbbb
loop
loope
hlt
testb
pop
xchg
shlb
sub
mov
clc
jmp
cmp
int3
iret
mov
lock
out
cmpb
inc
mov
jle
mov
ds
cmpsb
test
dec
loopne
into
mov
roll
fwait
and
jno
dec
xor
in
loopne
jo
dec
loop
push
popa
pop
aam
mov
push
adc
lahf
mov
push
fs
mov
testl
or
jno
andb
dec
je
pusha
neg
pop
jne
insl
jl
fists
or
xchg
sti
clc
cmp
jg
push
or
shlb
sub
inc
sbb
inc
int3
leave
dec
loopne
in
adc
and
xor
push
jnp
or
loopne
pop
xchg
fisubl
ja
nop
subl
pusha
sarb
cmp
dec
hlt
andb
daa
inc
pop
shll
xor
pop
aaa
sub
movsb
pushf
inc
jmp
sub
jp
inc
aaa
lcall
int3
and
std
pop
inc
xchg
and
cltd
adc
mulb
inc
xchg
add
xchg
add
and
inc
repnz
bound
xchg
mov
sub
pop
iret
je
loopne
jmp
pop
xchg
js
and
adc
outsl
and
sarb
xchg
mov
jecxz
shrb
incl
in
mov
inc
std
cld
lods
fdivl
arpl
arpl
shl
mov
pop
mov
gs
dec
das
xor
inc
pop
mov
loope
sbb
push
ljmp
cmpl
and
cmp
pop
dec
rclb
mov
cld
outsl
or
dec
xchg
or
dec
test
jbe
mov
insb
scas
add
popa
sbb
jmp
imulb
cmp
ss
pop
in
push
add
xchg
lods
xor
aas
add
xor
addr16
cmp
mov
scas
std
mov
adc
outsl
in
adc
into
sbb
sbb
in
add
jle
push
call
rclb
inc
sub
jp
pop
cmc
sbb
mov
pushf
icebp
or
outsl
dec
sub
cmp
hlt
jg
dec
sti
rcr
dec
inc
cmp
dec
sbb
sub
pushfw
pop
xlat
and
xor
std
cwtl
cmp
cmp
insl
in
pop
fwait
adcl
in
pop
sub
rorl
dec
sub
insl
mov
jno
cmp
lods
nop
or
xor
add
test
add
push
out
rorl
sbb
inc
mov
ljmp
pop
clc
addr16
inc
inc
aam
aaa
add
lcall
sub
dec
or
scas
pop
adc
jge
jmp
adc
jmp
ret
xchg
and
inc
mov
int3
add
sub
xor
mov
adc
loop
push
or
lahf
cmp
imull
scas
xchg
dec
add
in
cmpsl
mov
mov
cld
dec
mov
jp
lret
mov
mov
sarb
lock
negl
outsb
add
nop
adc
imul
mov
jecxz
and
test
mov
inc
ret
mov
mov
cmp
sub
jmp
lods
mov
inc
cmpsl
dec
dec
sub
sbb
xchg
jl
cmpsb
add
inc
jne
cmp
or
jle
mov
mov
mov
jne
cmp
pop
jecxz
adc
sub
cmc
jb
pop
rcll
arpl
add
xlat
ja
lea
in
jbe
sub
mov
scas
rcl
xor
das
mov
mull
ret
aam
mov
push
sub
jne
std
mov
subl
mov
stos
subl
leave
clc
inc
push
mov
adc
jo
ss
call
mov
or
and
pop
pusha
stc
xor
mov
push
lcall
mov
push
xchg
sbb
lret
daa
insb
fists
arpl
ljmp
push
mov
inc
lods
dec
insl
sbb
xchg
and
outsb
mov
inc
cmpsl
push
out
js
adc
xchg
mov
mov
repz
fdivl
sbb
add
add
test
inc
mov
fs
xchg
icebp
pop
lea
dec
in
mov
sbb
inc
cld
notb
sti
movsb
cli
mov
jae
push
adcl
lret
out
mov
stos
jecxz
loop
cmp
inc
mov
cmp
packsswb
mov
fdivs
stc
or
fnstenv
adc
sub
mov
in
rol
data16
cs
out
mov
jne
out
insl
jbe
ret
mov
sbb
ficoml
jl
cmp
in
adc
jo
adc
test
mov
xchg
mov
xlat
mov
pop
daa
cmpsb
jo
leave
sub
sbb
push
adc
or
fldcw
pusha
mov
mov
in
jns
mov
fdivr
fsubr
add
dec
popf
pop
xchg
adc
loope
xorl
pop
push
inc
icebp
lret
xchg
and
stos
jns
shr
fwait
push
and
add
outsl
sbb
xchg
dec
fdivs
rolb
inc
aaa
stos
pop
lods
fists
push
fs
addl
jecxz
clc
push
scas
decb
push
jns
push
xchg
and
jmp
cmp
ror
fisttps
or
xor
xchg
or
shl
xor
lock
pop
je
repz
leave
dec
xchg
fnsave
mov
bound
lea
icebp
xchg
jo
mov
push
pop
jge
enter
sbb
jb
rcll
push
stc
pop
push
mov
xchg
xor
out
xor
ret
orl
sbb
jb
and
push
push
mov
pushf
adc
mov
lds
pop
les
mov
shl
cltd
int3
xchg
adc
sub
jmp
aam
loopne
aas
or
mov
shll
xlat
and
insb
fadds
lock
ja
cmp
mov
xchg
mov
loop
clc
mov
pushf
xlat
and
testb
add
std
or
sar
ja
inc
insl
out
mov
jnp
cmp
sbb
and
inc
lods
xchg
sbb
push
push
cmp
fists
leave
icebp
push
testl
sub
nop
aam
push
cli
pushf
push
or
out
std
ret
pop
jb
fadds
mov
hlt
mov
add
jl
movsb
or
jge
pop
mov
sub
mov
mov
cli
xor
test
fsubs
mov
mov
xor
stos
dec
ds
adc
push
sub
in
push
pop
icebp
adc
or
movsb
int
cmp
popa
mov
jno
push
loope
add
pusha
dec
inc
push
jp
jg
pop
pusha
push
add
je
sbb
add
jne
ja
test
nop
std
hlt
ja
icebp
loope
int3
jp
inc
push
cs
rcr
xor
sub
or
movsl
xor
ficoml
xor
jbe
repnz
addr16
push
adc
cmp
pop
push
in
imul
mov
xorl
fs
push
mov
fisttps
push
cmpb
fadd
and
jle
test
xor
cmp
clc
jns
notb
jns
dec
imul
fidivs
mov
or
cld
mov
add
movsb
ljmp
adc
lods
movsl
or
addr16
or
data16
sub
idivl
rolb
inc
out
in
andb
in
jmp
les
pop
es
push
imul
and
jle
fcmovb
and
and
stos
test
stos
fxch
push
add
push
mov
pop
dec
jg
pop
jl
dec
xor
sub
xchg
pop
int
xchg
daa
cmp
push
stc
into
in
push
fs
insl
ss
mov
test
fsubs
push
scas
jo
out
mov
cmp
pop
test
scas
xchg
bound
pop
mov
inc
dec
orb
mov
js
psrlw
pop
mov
or
xor
or
and
ret
push
ror
mov
repnz
jae
jmp
loope
fsubrl
bnd
inc
inc
insl
mov
adc
jg
push
es
or
mov
insb
lock
pop
mov
xor
mov
addr16
jbe
xlat
cmp
fstpt
in
leave
jns
jmp
add
inc
adc
or
bound
xchg
rdmsr
add
ds
inc
stos
add
mov
in
leave
xor
mov
and
mov
xchg
clc
idivl
jb
test
sub
out
xor
xor
sbb
and
mov
and
loop
mov
lock
aaa
jnp
faddp
push
jo
cmp
mov
sbb
ret
add
shr
fwait
dec
cmc
jmp
pop
in
push
dec
pop
pop
mov
orl
enter
jo
pop
lds
cmp
lock
mov
loopne
xlat
push
inc
das
mov
shll
fdivl
sbb
jge
add
cmp
inc
fsub
xchg
int3
lds
pusha
icebp
leave
pushf
mov
out
pop
mov
out
adc
nop
jne
std
lret
fistpll
lds
xor
sub
push
cmp
cmp
add
dec
sub
mov
ret
bswap
lock
mov
test
pusha
mov
sub
add
lahf
xchg
es
ss
shrl
lret
pop
mov
out
sbbb
aam
sbb
jbe
xor
ficoml
and
add
xor
jmp
mov
cs
jmp
loope
mov
seta
pop
mov
cmp
out
xor
test
stos
xchg
ret
mov
imul
je
mov
push
lret
cmp
jge
sbb
sub
mov
mov
int3
insl
stc
shll
pop
sti
out
xchg
dec
and
out
repnz
cltd
mov
dec
lods
xor
pop
push
mov
enter
or
push
lcall
and
jmp
pop
or
cwtl
inc
insb
mov
add
inc
inc
inc
push
xchg
aas
cmp
mov
and
aam
push
sti
fwait
mov
inc
sub
sahf
cmpsb
push
inc
xor
sub
shll
rorl
cmp
cmp
jnp
mov
or
bound
inc
xchg
lods
pop
mov
mov
mov
push
lds
insl
mov
rclb
mov
push
and
incb
imul
test
sub
stos
dec
sti
inc
testb
dec
scas
inc
fcompl
inc
fisttps
scas
shll
jno
fstpt
inc
xchg
add
adc
lret
fistl
push
loop
bt
lods
mov
out
inc
or
les
stos
mov
rolb
xchg
mov
inc
or
in
je
and
add
xchg
mov
or
scas
xchg
icebp
lods
jl
inc
jae
pop
and
test
inc
push
mov
push
test
iret
sbb
push
cmovns
xor
fildll
pushf
icebp
cmc
pop
popa
outsl
cmp
and
mov
xor
push
push
shll
das
mov
sub
mov
mov
or
xlat
pushf
rorb
scas
jne
aad
out
pop
and
out
pushf
ret
jnp
jmp
mov
sbb
testb
ss
sbb
enter
or
lods
into
arpl
es
test
lret
sub
sub
xor
inc
cmp
add
mov
cmp
add
push
jo
add
imul
ret
and
div
ja
sbb
and
xchg
push
xchg
or
test
sub
sbb
test
es
test
orb
fnstcw
aad
pop
insb
jns
je
inc
lds
add
or
or
dec
jnp
hlt
pop
fadd
sbb
inc
mov
popf
lock
rcll
jnp
inc
mov
fwait
arpl
ret
cmp
adc
xor
xor
std
or
mov
and
jecxz
xchg
jbe
pusha
adc
fsubs
or
or
fs
xlat
jg
mov
addl
pop
scas
cmpsb
orb
das
mov
adc
jecxz,pn
out
out
gs
jmp
jbe
gs
aad
mov
jae
fsubrs
push
pop
sbb
insl
jg
inc
rcrl
cmp
les
add
iret
cmp
hlt
ss
pop
add
jmp
loop
fwait
mov
daa
sbb
jo
xchg
jecxz
mov
mov
fisubrl
rorb
arpl
adc
pop
ja
sub
pop
inc
push
test
stos
in
scas
or
mov
mov
dec
push
pop
fwait
lods
add
push
leave
les
cs
cs
and
sub
aad
and
xchg
jno
hlt
in
adc
adc
push
out
add
inc
sbbb
sbb
and
pop
cmp
ds
test
inc
inc
outsl
push
dec
add
fstps
lods
imul
adc
stos
cld
push
lcall
fwait
cli
mov
aas
mov
cld
das
inc
ret
jle
aam
shl
or
pop
push
addr16
ja
in
inc
loop
xor
push
sahf
in
dec
push
bound
xchg
adc
adc
mov
add
bound
dec
cmovns
jno
pop
adc
adc
cmpb
or
dec
mov
push
mov
repz
sub
jg
sbb
add
and
sub
fnstsw
in
test
and
adc
mov
jns
xor
mov
xchg
dec
and
sbb
mov
cwtl
repnz
lods
jae
dec
and
movsb
xor
cwtl
fldcw
imul
jmp
sub
pushf
les
jb
rol
aaa
scas
mov
lahf
xchg
jbe
xor
out
cli
movsb
shrl
jecxz
outsb
push
push
insl
loopne
adc
pop
jp
xchg
sub
xor
jbe
cli
fildl
les
mov
aam
cmpsb
pop
and
call
das
sbb
std
or
fs
nop
dec
lcall
pop
sbb
mov
xchg
aaa
add
cli
fdivr
aaa
adc
sub
rorl
jl
inc
add
pushf
fdivrl
pop
inc
adc
in
hlt
in
mov
inc
mov
aad
xchg
dec
pop
je
outsb
stos
cmp
mov
incb
mov
xor
sbb
cmpsb
aam
leave
xchg
sti
xchg
jnp
inc
subb
ficoms
shlb
repz
push
mov
xchg
rclb
add
lea
mov
lock
arpl
mov
outsb
pop
cvtps2pd
jp
pop
loopnew
mov
adc
inc
sub
fsubrl
and
outsl
sub
sbbb
enter
out
jb
fldt
mov
adc
dec
jmp
ja
pusha
adc
stc
xor
jne
and
aam
push
cmc
imull
iret
in
adc
jl
fmuls
mov
mov
stos
outsb
aam
rcrb
cwtl
xor
stc
dec
cmp
incb
mov
cmpsb
pop
movsl
dec
cli
in
fcos
test
pop
leave
pushf
outsb
mov
sbb
xchg
and
arpl
mov
add
xchg
dec
jmp
mov
jno
pop
jbe
cmp
cwtl
out
inc
inc
jnp
enter
mov
insb
nop
subl
lcall
jne
sbb
ja
sub
jecxz
outsl
xor
sbb
jl
pop
subb
fcmovne
rorl
std
les
mov
xchg
xorb
inc
xlat
pop
divb
icebp
mov
push
xchg
lds
xchg
inc
adc
mov
leave
fucomi
les
cmc
mov
mov
outsb
stos
repz
cmp
or
or
cmpsb
fdivrp
jne
cmpsb
or
decl
sbb
cmpsl
xor
lret
mov
sub
jg
mov
js
stc
cli
dec
xor
add
popa
inc
ret
add
push
mov
out
jb
adc
dec
xchg
xchg
fstps
or
push
pushf
cli
mov
jo
loop
adc
aas
mov
inc
mov
xchg
shlb
jp
inc
out
lea
jge
lods
jnp
sbbb
push
fisubs
hlt
pop
or
out
rcrl
jg
sub
add
ljmp
out
scas
pop
dec
call
jns
jnp
add
aam
pop
jge
push
mov
xchg
jmp
imul
in
sbb
pop
repnz
out
call
adc
inc
lret
dec
xor
adc
lds
pop
clc
popf
inc
sub
cmp
mov
push
cltd
icebp
cltd
lea
hlt
sub
hlt
add
fxtract
cmc
sbb
pop
xchg
sub
dec
adc
ficompl
add
xchg
lret
icebp
clc
mov
inc
mov
push
sbb
cltd
cltd
bound
fwait
adc
or
push
and
dec
sti
cmp
in
shr
or
dec
adc
repz
and
xchg
sub
cmpb
mov
add
imul
cltd
lea
sub
icebp
add
btc
lcall
js
push
ds
lret
je
mov
fucom
es
enter
sub
or
cld
mov
inc
inc
cmc
add
outsl
adc
in
jno
and
inc
fmul
insl
lea
shlb
scas
inc
cmpsl
xor
jae
lods
adc
xchg
sbb
nop
dec
ds
or
sub
or
fs
ret
std
enter
push
in
out
jne
lcall
jno
les
fwait
sbb
pushf
or
popf
push
gs
jle
jmp
out
imul
push
push
je
insl
ret
fs
cmpsb
iret
inc
aaa
add
mov
fxch
daa
aam
push
fnstenv
mov
pop
je
adc
inc
mov
jbe
or
jmp
rcl
pop
pop
out
sbb
cmp
cwtl
jae
shl
mov
push
ljmp
stos
or
xor
adc
icebp
push
mov
push
ficoms
cli
mov
fwait
adc
xchg
sub
loopne
add
cmp
fiadds
lahf
add
in
into
xor
lock
imul
pop
jecxz
mov
mov
mov
je
in
jnp
mov
inc
dec
pop
aam
add
in
lret
adc
cmp
xchg
test
sbb
dec
mov
xchg
mov
int
mov
jb
push
in
inc
mov
jbe
dec
pop
hlt
out
imul
xchg
add
cli
pop
mov
jmp
dec
shlb
mul
ds
xor
in
cmp
testl
xor
fldenv
aaa
inc
aaa
and
jo
sbb
jmp
mov
mov
test
pop
dec
mov
insl
and
test
adc
or
cli
and
jp
shrl
mov
or
loopne
lds
ljmp
dec
add
stc
jmp
mov
ret
pushf
mov
clc
lds
das
or
imul
movl
stos
hlt
es
mov
xorb
inc
add
xchg
and
pop
and
stc
nop
test
sub
lods
cmpsl
scas
pop
cli
cmp
mov
insl
jb
sub
xor
jno
into
loopne
cwtl
xchg
xor
arpl
fstpl
sbb
adc
pop
out
mov
jb
add
sbb
mov
sbb
mov
and
lds
faddl
loopne
pop
add
mov
mov
mov
rol
lods
imul
loopne
xchg
icebp
pop
jp
nop
sub
fadd
out
out
push
out
subb
ret
mov
roll
cs
jmp
dec
fistl
and
mov
jns
insb
int3
pop
sar
ror
jg
ja
xor
test
mov
in
dec
cmc
mov
adc
inc
xchg
aaa
in
push
fwait
jnp
stc
fwait
cwtl
push
stc
mov
out
fists
xor
aad
jg
and
sarb
das
pusha
es
mov
sub
cs
je
repnz
push
push
clc
icebp
dec
add
or
shl
in
lea
je
sar
cmpsb
daa
rclb
bnd
jp
and
or
leave
jl
movsl
fwait
mov
push
jg
xchg
outsb
adc
push
mov
jmp
mov
adc
and
sbb
rol
or
sub
xchg
js
sbb
subb
jb
pop
call
fbld
jge
push
out
movsl
jle
xor
add
inc
mov
inc
cmpsb
push
ret
dec
cmc
pop
pop
adc
push
gs
adc
lds
out
push
cmp
cmp
cld
xor
sbb
lea
sub
or
mov
in
fldt
cmpsb
ja
sbb
mov
dec
adc
ljmp
sahf
insb
pop
shlb
adc
mov
mov
dec
and
leave
test
xor
shrb
data16
inc
jbe
aas
into
pop
rcl
mov
shll
inc
hlt
test
pop
cmp
cltd
decb
mov
sub
sub
inc
jb
imul
mov
cmova
inc
sbb
pushl
fists
test
xchg
xor
push
dec
std
cs
cmpsb
subb
outsb
arpl
push
rorl
addr16
add
nop
jne
mov
pop
cmp
pop
scas
jno
sub
cmp
and
fstl
inc
iret
sbb
int3
loope
push
sbb
inc
jmp
out
sub
rcrl
sub
int
jnp
cmp
push
xlat
stos
and
pop
cmp
outsb
aaa
xor
divb
lea
loop
decl
aaa
inc
mov
mov
loope
jnp
push
jg
inc
dec
call
neg
mov
lea
scas
ficomps
mov
pushl
fucom
enter
in
out
rcrl
outsb
pop
lahf
ljmp
inc
movsl
push
mov
daa
mov
push
imul
rorb
pop
les
das
movsb
cld
push
xchg
cmp
inc
xchg
fildl
fs
mov
jb
rcrb
inc
enter
mov
lock
mov
sub
daa
aam
pushw
into
fsubp
mov
cmp
adc
lea
ja
cmp
mov
loopne
ljmp
mov
dec
lret
mov
test
out
icebp
lock
and
fwait
pop
xor
inc
ljmp
or
imul
dec
cmp
pop
aam
fcom
ds
stc
jecxz
jnp
and
out
cld
in
pusha
mov
arpl
pop
andb
xchg
ret
cmp
cli
shl
xor
js
ljmp
xchg
jmp
push
inc
roll
jge
dec
cmpsl
fwait
ds
or
stos
inc
rclb
imul
int3
push
and
cltd
mul
xor
imul
outsl
fbstp
add
int3
imul
add
add
adc
pushf
sub
mov
ja
jmp
jno
add
notb
ret
sub
sbb
mov
out
lret
hlt
xchg
sub
cmpl
mov
xor
inc
rolb
test
imul
jp
or
lea
xor
push
out
lds
jae
inc
loopne
adc
mov
adc
xchg
out
mov
cli
sbbb
push
lahf
das
mov
cmc
jge
push
xor
mov
add
icebp
adc
arpl
lock
jo
xchg
fs
push
mov
jecxz
cmp
test
dec
movsb
cmpsb
sbb
mov
ret
sub
scas
push
dec
imulb
in
out
stos
cmp
jg
je
lods
xlat
or
sub
mov
add
adc
scas
jp
adc
push
jp
adc
pop
mov
mov
call
imul
and
pop
dec
mov
mov
mov
negb
loope
lods
cmp
inc
xchg
push
adcl
jge
lock
je
div
dec
pop
sbb
pop
or
cltd
add
sbb
and
sbb
pop
out
add
sbb
sub
inc
dec
lcall
hlt
jno
pop
fdivl
pop
sahf
add
jbe
inc
sar
lea
std
jmp
mov
mov
dec
enter
sbb
outsl
cld
xor
aad
and
sbb
sbb
je
sbb
sbb
out
dec
into
aad
mov
or
pop
shrl
sub
pop
lret
int
xor
in
inc
pop
jno
inc
fisttps
push
outsb
push
pop
out
es
ljmp
daa
or
lcall
dec
adc
jns
rol
das
ds
insl
dec
sahf
fldcw
loopne
fisubs
adc
pop
mov
adc
fisttps
fists
sbb
stos
cmp
aam
add
jnp
test
mov
mov
cmp
test
cltd
inc
popf
out
dec
fs
nop
fidivrs
xchg
xchg
jl
sbb
cmp
aaa
sbb
adc
add
fiadds
cmc
cmpsl
mov
inc
dec
mov
and
movsb
cmpsb
mul
fldenv
arpl
mov
jecxz
hlt
cmc
inc
jne
xor
add
mov
imull
mov
in
pop
mov
loopne
pop
xlat
outsl
inc
sti
aam
lret
add
ss
lret
adc
das
test
testl
cmpsb
xor
jmp
mov
jecxz
test
cmp
cs
sub
xor
subb
cmp
fwait
xor
pusha
dec
pop
ja
lock
adc
aam
push
shrl
iret
xchg
dec
push
loopne
sub
inc
arpl
push
lods
and
jae
adc
adc
clc
pop
push
sbb
popf
jp
sbb
or
jns
outsl
sbb
repz
in
dec
cld
xchg
or
jmp
jb
hlt
mov
sbb
daa
lret
mov
aad
dec
jp
div
subl
jbe
pop
mov
or
insb
adc
scas
or
gs
push
or
in
out
xor
test
push
in
enter
jns
mov
inc
dec
das
popf
out
ds
mov
int
push
sahf
pop
sbb
imul
in
jecxz
arpl
repz
ljmp
push
jp
dec
cmpsb
in
sbb
lds
jmp
shrl
popf
stc
inc
xchg
lret
es
ret
pop
jmp
dec
stos
push
lea
in
dec
test
jne
rorl
sbb
imul
inc
adc
mov
push
sbb
mov
fsubl
mov
iret
rclb
stos
lea
jmp
cmpsb
mov
sbb
aaa
or
divl
sbb
or
jns
loope
bound
arpl
jg
lret
enter
ja
inc
or
cs
dec
repnz
xchg
sti
repz
aaa
push
fldenv
xor
cli
pop
and
dec
mov
clc
sahf
shrb
cmpsb
or
jns
add
bound
mov
mulb
pusha
jb
loopne
and
sbb
pop
mov
fsubs
or
cmc
jl
out
stos
repz
imul
sub
mov
into
loop
inc
cmp
jnp
push
mov
mov
sub
mov
cmp
or
inc
or
or
aam
and
clc
mov
xchg
incb
into
imul
loop
push
xchg
mov
js
pushf
pop
pop
sbb
sbb
adc
idivb
or
mov
mov
aas
and
sub
leave
pop
adc
inc
xor
xor
jge
lcall
repnz
inc
and
lret
in
lods
mov
add
jb
or
xlat
push
jbe
mov
movsl
xchg
test
ficoml
and
adc
push
repnz
mov
jl
jb
cwtl
in
add
jl
adcb
mov
int
add
popf
or
int
push
in
in
fmul
movsb
cmp
subl
pop
mov
dec
test
scas
mov
mov
cltd
outsl
cmp
lds
clc
dec
pop
int3
test
dec
pop
sub
lods
lret
inc
sub
enter
add
jb
cli
hlt
mov
dec
dec
sub
xlat
mov
mov
lods
nop
scas
aas
cmp
pop
pop
or
mov
imul
inc
xchg
lcall
adc
push
sub
imul
push
push
ljmp
mov
jns
pop
flds
and
push
cmp
out
insb
pushf
xor
push
js
xor
xchg
fs
arpl
cmpsl
sbb
sbb
pop
fiadds
push
ds
or
cli
push
pop
cwtl
fldcw
push
xchg
mov
sub
orb
negb
or
fisubrs
fistpll
dec
and
jg
push
or
lods
lods
or
sbb
fsubs
ds
fs
cwtl
push
iret
pop
mov
mov
test
sbb
pop
pop
je
cli
fsts
mov
push
js
fdivr
rcrb
in
xorb
les
out
dec
outsb
xor
push
mov
jae
inc
cli
scas
fwait
sqrtps
pushf
xchg
fstpt
loop
mov
pop
es
mov
mov
mov
dec
rclb
out
cli
lea
inc
cmc
sub
stos
aas
mov
orb
and
pushl
add
cmp
pusha
loope
add
gs
outsb
pop
pushf
jp,pt
icebp
and
cltd
jp
cmp
sbb
fs
cmp
ljmp
fisubs
out
shrd
sbb
popf
aam
repz
mov
scas
in
ljmp
xchg
xchg
je
sub
pop
mov
cltd
lds
aam
aaa
add
jecxz
fildl
xlat
mov
nop
repz
fcoms
add
cmp
insb
mov
cmpsb
adc
js
adcb
inc
leave
scas
pop
out
cmpsl
mov
push
bound
popf
stos
aam
jecxz
adc
popf
mov
roll
pop
repz
sbb
pop
sub
lea
pop
or
sarb
inc
mov
mov
and
mov
rcr
mov
add
test
xchg
scas
mov
arpl
jle
mov
xchg
pop
cmc
sub
in
push
ret
outsb
push
outsl
add
rcrb
inc
je
xchg
fst
popa
iret
and
mov
push
mov
int3
nop
push
sbb
repz
mov
mov
dec
shll
iret
pushf
cmp
nop
or
fcmovbe
test
cmpb
mov
imul
leave
xor
jecxz
rcrb
bound
or
sub
in
cli
repnz
pusha
je
loop
test
and
dec
es
inc
mov
mov
shl
mov
push
in
clc
xchg
inc
add
xchg
js
inc
aad
in
ret
mov
sub
pop
adc
in
jns
std
iret
out
cmpsb
imul
test
ja
adc
add
in
aas
ficoms
fcoml
cmp
mov
push
ret
outsl
addr16
out
mov
pusha
mov
mov
adc
test
leave
push
ds
in
popl
iret
lret
jp
insl
dec
jecxz
test
loopnew
mov
add
adc
int3
sub
pop
jb
push
sbb
call
add
xchg
sub
mov
imul
adc
addr16
iret
daa
das
repnz
lock
out
lcall
scas
aad
sbb
pop
sub
push
sub
pcmpgtw
and
mov
adc
push
repz
in
dec
ror
push
push
lret
aad
push
fisubrs
popf
xor
cmp
xor
fwait
loop
inc
mov
cmp
movsl
popa
pop
fnstenvs
fdivr
loope
clc
roll
cmp
outsl
rcrl
sbb
aam
roll
out
dec
fiadds
es
test
inc
xchg
cmc
fsub
mov
addr16
andl
jp
cmp
xchg
mov
xchg
rclb
cmp
daa
mov
test
or
ljmp
sub
push
jo
shll
mov
push
jl
cmp
pop
outsl
mov
jno
pop
sbb
inc
into
mov
mov
mov
dec
shlb
nop
stos
int
scas
fs
pop
jno
add
in
js
mov
xlat
mov
fwait
add
cld
loopne
mov
lahf
push
into
adc
faddl
cld
outsl
mov
jg
xor
ja
dec
push
sahf
insl
cmp
cmp
adcb
fdivs
aad
jnp,pt
incl
cmpsl
int3
or
dec
jmp
mov
or
sbb
or
test
inc
aad
stos
add
sbb
bound
sub
mov
rcl
push
cmp
shll
call
adcl
int3
in
rclb
icebp
push
dec
inc
loopne
enter
fst
andl
pop
mov
aad
mov
dec
lret
loope
scas
pop
xchg
js
daa
mov
inc
fists
add
sbb
lret
add
lock
test
xor
sbb
fidivs
icebp
add
adcb
sub
pop
jno
popl
and
mov
fwait
cwtl
aaa
lahf
call
cmpl
outsl
dec
repnz
push
fstpt
loope
jae
out
stos
push
jns
pop
cli
jl
xchg
mov
fwait
test
lret
fs
and
fsubrs
fstps
ret
cmpsl
pop
jg
sub
shr
mov
jns
cmpsl
in
mov
mov
cmc
push
lea
mov
xor
pop
pop
imul
mov
mov
icebp
shrb
sbb
les
and
mull
dec
xchg
push
stc
imul
subl
icebp
ja
push
mov
int3
cmp
push
cmp
imul
into
push
pop
subl
pushf
repz
pop
push
or
jmp
sub
sarl
xchg
jbe
lahf
pop
xor
and
loopne
xor
sarb
push
xor
ret
mov
lods
jmp
popa
icebp
pop
movsl
shlb
sarl
daa
dec
push
jo
add
aad
pop
es
lret
jmp
movsb
mov
cmp
std
out
js
into
shll
fisttpll
xchg
jmp
sahf
inc
inc
rclb
out
sub
pop
shr
dec
push
jle
addr16
es
cmp
aad
cwtl
sti
outsl
aad
js
inc
mov
mov
out
cmp
aad
enter
jbe
pop
mov
pop
test
shll
add
xchg
dec
xor
inc
push
inc
dec
mov
mov
cmp
inc
in
cltd
lods
sbb
adc
cltd
cli
outsb
inc
jp
dec
or
sbb
loopne
dec
sbb
repz
dec
adc
mov
jle
inc
push
outsl
insb
jmp
lock
arpl
test
pop
lds
loopne
loopne
adc
xor
jg
add
jb
insl
push
cmp
add
jb
mov
cmp
jbe
in
pop
in
jns
bound
rclb
jl
sahf
or
movsb
inc
add
mov
int
loop
pop
je
aaa
mov
shlb
xchg
xchg
sbb
imul
in
mov
dec
mov
shrl
cld
mov
cs
sti
sub
dec
adc
out
push
xchg
aad
in
jle
loop
pop
cmpsl
js
sar
pop
pop
xchg
sub
adc
cmpb
psrlw
aam
scas
ficoml
pusha
call
test
add
ljmp
insl
xlat
shll
sub
int3
and
sub
jne
stos
call
movsl
xor
push
loopne
jb
lret
adc
insl
add
subl
clc
scas
jno
int
cmpsl
insb
sbb
popf
and
neg
neg
dec
loop
in
fabs
out
jae
cs
aad
and
xchg
sub
sbb
fildl
mov
subl
or
push
leave
sbb
in
test
lahf
mov
mov
push
fs
std
data16
cmpsb
call
call
fsubrl
decl
mov
sbb
imul
orl
pop
in
xchg
nop
aad
sahf
fsubrs
sbb
aam
xchg
lods
movsb
push
jno
sub
and
jge
mov
cli
aam
mov
mov
or
pusha
mov
repz
sbb
fidivl
outsb
lcall
jno
sbb
out
gs
xchg
push
xor
mov
out
add
popf
pop
mov
in
cwtl
icebp
cmpsb
mov
cmp
lds
in
xchg
adc
lcall
cltd
fcmovbe
mov
dec
loopnew
daa
in
pop
insl
stos
sub
jmp
adc
and
inc
insl
ret
mov
roll
mov
mov
pop
nop
pop
movsl
mov
xorb
pushf
mov
mov
mov
xchg
add
ja
sbb
popf
adc
fildll
xor
loopne
inc
pop
mov
cmp
shll
dec
xor
adcb
fwait
es
xor
jb
cmp
test
stos
es
mulb
jo
add
daa
orl
mov
scas
jne
ja
jecxz
inc
mov
lds
xor
pop
push
push
data16
pop
rclb
fsubrl
mov
push
sahf
fcmovnb
adc
xor
add
mov
dec
mov
bound
sub
inc
mov
cwtl
in
outsl
hlt
push
mov
push
pop
pop
inc
sub
fisubrs
xchg
sbb
ljmp
clc
jp
nop
add
loopne
sbb
test
mulb
daa
push
jno
dec
dec
mov
xor
lret
lods
mov
pop
cmp
dec
rclb
dec
and
jecxz
jle
jnp
insb
dec
mov
jg
fsts
mov
outsl
enter
push
lds
xor
jbe
add
fmulp
push
pop
das
mov
out
jmp
inc
loopne
xchg
dec
fmulp
addl
jge
cmpsl
jg
popl
and
sub
mov
jp
int
mov
sub
popa
push
xchg
in
cwtl
decl
mov
insb
add
sbb
lgs
movsl
dec
xlat
adc
adc
jp
mov
popa
stos
fnstcw
inc
sbb
dec
dec
mov
je
stc
movsb
stos
or
mov
adc
adc
cmp
inc
bound
mov
jecxz
inc
in
add
xchg
insl
jns
mov
arpl
cmp
jb
mov
cmpsl
in
mov
inc
sbb
sbb
pop
in
icebp
dec
jo
sub
outsb
movsb
ljmp
js
cmp
mov
scas
sub
dec
mov
or
adc
add
xchg
popf
loope
sbb
sbb
mov
fwait
xchg
repz
jns
mov
stos
cmp
daa
call
divb
gs
push
sub
pop
cmp
fs
jo
xchg
fimull
fldcw
push
out
stc
sub
add
fnstsw
mov
pushf
xchg
mov
mov
pop
inc
aaa
and
jns
addb
xchg
in
mov
mov
pop
fucom
push
jge
fs
lcall
loop
pmaxsw
adc
mov
dec
pop
inc
push
fs
rcrb
popf
mov
sub
pop
scas
mov
in
dec
xchg
fsubr
sbb
mov
sbb
stos
dec
mov
nop
xor
and
lret
ljmp
mov
sbb
xchg
test
mov
mov
sbb
inc
or
jecxz
mov
int
testb
mov
ds
fmuls
inc
add
pop
rcl
fwait
lea
dec
add
movsl
pop
stc
ljmp
std
arpl
pop
enter
movsb
scas
push
jg
add
xchg
stos
or
cmpsl
push
and
sbb
imul
add
movlps
mov
pushf
mov
sahf
bound
popa
in
pop
and
inc
push
push
outsb
push
jns
int
inc
cld
cmp
xchg
adc
cmpsb
out
push
inc
shrl
das
ret
insl
cmp
mov
sub
cmp
lcall
fdivp
push
mov
fcomps
imul
pop
dec
lods
testl
or
sub
jg
andl
test
mov
repz
fildll
aaa
mov
sti
lahf
mov
cmp
iret
pop
jb
xor
jmp
out
cmp
and
ja
ljmp
test
fidivrl
test
pop
test
outsl
add
mov
lods
subb
filds
or
push
dec
mov
loop
mov
mov
sbb
mov
aaa
mov
sub
sub
sub
xchg
pop
add
pop
das
push
cmpsl
lods
in
push
int3
push
and
push
xchg
xchg
ljmp
mov
xlat
ds
mov
jle
in
testl
inc
mov
pop
int
ja
int
and
push
push
jl
lock
or
outsb
into
xchg
adc
cmp
xor
loope
mov
mov
inc
aam
lahf
xorb
int3
iret
sub
andb
pop
push
add
lret
stos
hlt
cmp
cmp
pop
icebp
in
divb
icebp
mov
movsl
adc
lods
dec
pop
loop
adc
jl
insb
stos
sub
movsl
sub
lock
scas
mov
movsl
flds
push
xor
xor
pushf
jb
rorl
sub
push
inc
add
iret
test
sub
test
cli
movsb
push
aas
add
mov
in
dec
push
pushf
or
xchg
fmuls
mov
cmp
push
rolb
dec
jns
lods
adc
pop
cs
jge
cmp
pop
aaa
sub
data16
jge
mov
lcall
es
jnp
jo
hlt
sub
add
cmp
mov
fisubrl
xor
aas
pop
scas
cwtl
movsb
sub
aas
in
popl
inc
cmp
xchg
gs
lock
jne
aam
nop
inc
and
daa
test
nop
cmp
arpl
add
xor
fcomi
xor
cmp
inc
adc
ljmp
or
push
xchg
gs
cmp
insl
mov
lret
push
ja
or
cmp
hlt
xor
pop
sub
fdivrl
xor
subl
adc
stos
pushf
add
ljmp
repnz
push
mov
dec
ficoms
flds
or
pop
and
lahf
loopne
out
jno
ds
or
incb
adcb
sahf
daa
lock
and
mov
add
jl
cmpsl
call
leave
lcall
mov
xor
or
cmp
add
notl
pop
shlb
adc
add
pop
in
pop
jmp
in
das
je
sbb
jnp
mulb
sub
imulb
cli
sbb
add
int
cmc
pop
icebp
lock
out
fs
fstl
mov
push
inc
stos
pop
cltd
xchg
dec
imul
push
lcall
rclb
out
inc
imul
es
bnd
pop
sub
sub
outsl
ret
mov
xor
pop
sbb
add
or
ja
xchg
inc
dec
out
jbe
add
xchg
pusha
sbb
mov
popf
in
mov
sbb
repnz
addb
test
lret
imul
pop
add
iret
mov
sti
adc
sbb
icebp
call
xchg
in
push
and
test
mov
test
mov
mov
fs
lret
mov
or
push
mov
lock
xchg
das
testb
fwait
stc
add
mov
xor
jmp
and
ss
cmp
mulb
lcall
sub
stc
shlb
sar
pop
mov
mov
mov
imul
jl
fwait
jae
jecxz
mov
ret
rol
jne
in
test
pop
pop
jl
xor
in
shl
xchg
shlb
int
fbld
pushf
popa
pusha
and
scas
xchg
mov
cli
add
dec
push
movsb
and
and
xchg
fsubrs
jmp
cmp
andl
out
sub
arpl
fbld
sti
in
je
lea
fcoml
cwtl
ss
lods
stos
and
xchg
xor
fnstenv
loop
cmp
push
sub
jg
in
xchg
push
cmp
loop
insl
data16
icebp
or
pusha
mov
mov
pushf
cli
andb
mov
js
call
inc
or
in
mov
cmpb
push
outsb
xchg
xchg
iret
testl
ret
push
popl
and
xor
mov
adc
insl
dec
cmpsb
cmpsb
push
cli
mov
adc
xor
adc
push
loop
outsb
lods
or
lock
in
in
xchg
mov
add
imul
in
mov
jno
or
jns
scas
xchg
mov
cltd
xchg
push
std
mov
fbstp
xchg
adc
imul
loop
push
and
and
pop
imul
or
jge
xchg
jno
ret
push
addr16
test
lds
sub
aaa
loopne
push
or
cld
cmpsb
cmpsb
pop
mov
add
cmp
cmp
scas
add
ret
cmp
pop
mov
adc
rcrb
and
fmuls
bound
sbb
add
dec
jae
and
mov
dec
cmc
dec
cli
pop
push
bound
inc
push
dec
sbb
inc
insb
fwait
popf
mov
lret
sbb
sbb
sbb
je
inc
inc
popa
shl
jmp
xor
and
imul
pop
mov
cmpsb
sbbb
iret
mov
pop
cmp
push
mov
fsubl
sub
xrelease
or
loope
and
sbb
cmp
push
daa
cmpsb
pop
pop
stos
std
into
nop
lret
xlat
mov
into
in
xor
aam
cmp
mov
push
cmpsb
je
lret
jg
pop
daa
sti
mov
scas
sti
pop
mov
or
adc
addr16
js
addl
push
xor
sbb
insb
pop
mov
or
repz
mov
int3
sbb
ljmp
mov
sbb
xchg
push
bound
leave
fs
mov
pop
jno
pop
mov
cmp
ljmp
sub
dec
cmp
mov
mov
sahf
test
jecxz
hlt
repz
stos
sti
inc
test
addr16
mov
in
push
mov
sbb
inc
test
repnz
jge
scas
cmp
lahf
inc
mov
sub
jnp
aaa
add
push
xchg
int3
into
push
jnp
inc
cwtl
sub
pop
and
xchg
sub
jns
ljmp
stos
xlat
iret
scas
add
push
lahf
scas
and
cwtl
fisttpl
mov
dec
insl
stos
pop
jecxz
mov
jmp
das
movl
push
cli
es
and
and
sub
popf
cmc
mov
outsb
inc
leave
mov
pop
inc
inc
call
mov
hlt
xchg
pop
xor
sbb
jae
inc
mov
stc
clc
mov
aaa
inc
inc
mov
pop
aaa
and
pop
cmc
add
dec
fwait
addr16
movsb
pop
out
test
sbb
cld
xchg
int3
sti
hlt
dec
jns
bswap
lock
adc
bound
inc
adc
jo
mov
sbb
pop
mov
pop
aam
xchg
int3
movsl
mov
lret
jecxz
jbe
int3
lock
push
pop
inc
mov
cltd
cli
imul
mov
outsl
jnp
inc
pop
shl
mov
jge
jecxz
jno
in
mov
cltd
sbb
shll
insl
test
lds
gs
sbb
not
mov
jge
ds
lods
push
or
add
shrl
imul
add
lahf
mov
mov
xchg
pop
sub
fwait
pop
mov
pop
lods
dec
div
sbb
mov
sbb
inc
popa
or
xchg
les
pop
push
incl
out
imul
ss
mov
jle
xchg
inc
popf
stos
push
je
hlt
cmp
adc
sbb
std
cmpsb
test
sub
lahf
fcmovnb
push
mov
cwtl
jmp
lock
test
xchg
test
fists
xchg
mov
push
inc
popa
notb
push
call
pop
dec
fimuls
jecxz
adc
repz
scas
lods
test
xorb
sbb
cs
ss
sbb
loopne
fwait
jecxz
jmp
sbb
mov
int
outsb
push
adc
repz
aaa
mov
fst
push
jl
loopne
sub
xlat
jb
pusha
icebp
ficoml
push
or
outsl
jecxz
dec
lock
repz
xchg
jmp
out
aaa
movsb
push
int3
lcall
arpl
jge
rorl
aad
stc
xchg
vandps
fistpll
in
lock
mov
xor
rcll
call
fs
xchg
sub
adc
inc
jle
inc
mov
xor
fisubrs
loope
in
mov
push
fcoms
or
adc
icebp
lahf
sbb
push
sbb
movsb
loope
fcmovnu
pop
jae
in
shrl
pop
addr16
mov
rcrb
pop
mov
cmpsb
sub
shrb
and
aad
into
stos
sbb
cwtl
adcl
insb
je
add
aaa
mov
push
lahf
and
mulb
sub
mov
pop
ljmp
xchg
aas
xor
mov
icebp
fistps
in
stos
movsl
adc
lock
pop
sub
cmp
xchg
jbe
enter
je
pop
movsl
enter
push
mov
hlt
nop
pop
mov
ds
cwtl
gs
dec
and
mov
add
or
mov
dec
addr16
outsl
mov
shl
lods
dec
inc
sti
mov
in
xor
out
adc
mov
dec
cld
fcoml
jl
lods
xchg
push
dec
cli
imul
loop
cmp
in
scas
xor
out
imul
icebp
lock
pop
pop
pushf
std
mov
out
call
adc
jp
mov
push
cmp
xchg
ss
jge
cs
mov
call
jne
jl
push
aam
push
fsts
jne
inc
std
mov
mov
sbb
inc
lock
cmp
ss
fmuls
dec
data16
in
sarl
aaa
jo
push
sbb
mov
mov
inc
movsb
aad
jle
mov
cmp
mov
mov
adc
or
pushf
cmp
pop
or
push
clc
mov
nop
cmp
movsb
xor
lock
lods
insl
jns
setle
popf
fildl
dec
xchg
sub
jg
cmp
dec
xchg
inc
int
push
sub
repz
dec
fstps
gs
mov
adc
sub
xchg
xchg
inc
das
lods
mov
dec
lea
popa
repz
lods
shl
icebp
sbb
les
cmp
dec
into
jnp
cli
xchg
push
mov
leave
mov
cld
pop
push
jae
daa
sub
or
sbb
loopne
inc
mov
jne
sbb
lret
dec
call
sub
cmpsb
movsl
mov
add
mov
pusha
les
xchg
pop
mov
push
fbld
pop
jg
ret
stos
cmp
push
mov
xor
hlt
xor
cmpsl
sbb
iret
loopne
mov
pop
clc
loopne
inc
sub
lods
mov
or
imul
imul
jg
push
test
sub
popa
adc
ljmp
hlt
in
lds
test
jnp
enter
xor
mov
inc
shll
push
popf
sarl
dec
xor
xchg
pusha
mov
out
int
lea
mov
lock
sbb
and
adc
lcall
mov
and
xor
mov
xlat
jae
cli
xor
mov
int3
loopne
mov
cmpsb
push
mull
sbb
daa
not
fwait
ss
mov
mov
jmp
push
push
aad
xor
nop
jge
mov
in
add
jmp
sti
shlb
fcoml
lods
pop
sbbb
xchg
cld
mov
dec
adc
mov
inc
inc
aas
les
cwtl
inc
mov
xorl
jnp
jo
loopne
ljmp
mov
xchg
xor
jo
pop
add
stc
sbb
xchg
fnstcw
cwtl
rcll
outsl
and
call
pop
push
movsl
or
sbb
jmp
jl
sbb
jl
icebp
dec
mov
and
lret
in
xorb
repnz
pop
cmp
testl
push
xor
adc
sub
movsl
lock
cmp
ss
fwait
mov
mov
inc
insb
call
scas
fs
ret
popa
int3
in
cld
or
mov
sbb
fadds
mul
inc
mov
cmp
adc
mov
rclb
aas
aaa
jge
pop
cmp
sar
sub
pop
mov
cwtl
leave
push
cwtl
test
fisubrs
ret
mov
cmpb
int
and
sbb
mov
mov
aad
sarb
movsl
dec
dec
xchg
shrl
mov
sub
lods
aas
adcb
loopne
les
stc
inc
mov
mov
add
insl
mov
movsl
vmaxps
sub
sub
ret
insb
or
mov
insl
in
inc
pop
cwtl
and
aam
inc
add
jne
shlb
out
loope
add
jb
lods
je
xchg
jb
push
inc
jae
sbb
sysexit
adc
push
flds
jns
or
clc
sub
xor
mov
popa
mov
inc
mov
fldl2t
inc
dec
and
insl
sub
test
aas
aam
hlt
or
jne
adc
mov
xor
sub
movsb
shll
ja
test
xor
dec
es
or
out
imul
jmp
mov
xchg
imul
xchg
neg
cmpsl
add
roll
lret
loopne
fadds
addr16
push
xchg
jmp
insl
mov
xor
add
aam
pop
test
push
jns
jg
mov
in
mov
jae
jae
mov
scas
fdivr
push
adc
and
add
cmpsl
call
mov
mov
iret
or
aad
cmpsl
pop
jl
in
push
les
mov
jl
adc
orb
xchg
cmp
mov
cmpb
loope
int3
fists
or
push
into
cli
sbb
or
jbe
ret
jo
clc
int
xor
jb
adc
loope
mov
sbb
inc
sarb
ret
xchg
stos
out
mov
call
sub
mov
mov
nop
stc
sti
inc
add
pop
cld
xlat
cmpb
mov
popf
adc
sbb
push
int3
test
insb
dec
jp
inc
shr
popf
cmpsl
or
js
and
jle
fcompl
rcr
aam
popa
pop
mov
push
ds
in
bound
test
add
push
mov
pop
lods
xor
mov
fisttpl
out
add
inc
cmp
inc
cmp
pmaddwd
jb
fwait
out
outsb
int
ds
ljmp
dec
mov
sbb
clc
add
or
scas
and
pop
xchg
dec
inc
and
sahf
nop
pop
jae
je
shrl
adc
inc
mov
and
push
sbb
inc
mov
dec
adc
or
adc
pusha
fs
jns
inc
xor
xchg
pop
and
sbb
hlt
xor
mov
xlat
sub
cmc
sub
mov
pushf
pop
or
loope
rol
cli
mov
bound
imul
shll
out
adc
xchg
dec
loopne
cmp
mov
js
sub
orl
je
stos
std
dec
or
and
cmp
mov
inc
incb
daa
push
cs
testb
pop
jl
add
and
ret
xchg
sbb
lea
int3
std
out
cmpb
mov
dec
push
jmp
xchg
std
push
sub
sub
push
lahf
xchg
inc
dec
data16
add
ds
jecxz
mov
mov
mov
and
das
icebp
pop
daa
and
sbb
mov
loope
sub
movsb
hlt
and
stos
into
xor
loop
jne
jge
aad
hlt
jne
cmp
cmpsb
test
cmp
repz
clc
fdivl
lds
andb
cmp
pop
imul
iret
cld
sbb
cmp
adc
shll
jg
jecxz
add
lock
stos
sub
or
xor
jbe
icebp
dec
mov
adc
push
push
fidivs
mov
mov
gs
fimuls
std
jmp
dec
mov
outsb
in
sub
imul
pop
ss
jno
addl
xchg
add
jns
stos
jns
mov
xlat
xchg
test
adc
pop
adc
mov
imul
cld
adc
vmovups
adc
out
ret
or
hlt
push
pop
push
xchg
inc
jns
jns
or
mov
loop
adc
rclb
xchg
or
ja
mov
test
int
dec
loop
repz
out
flds
pop
ss
popa
or
out
pop
mov
jl
daa
les
aas
std
mov
pop
lcall
mov
pop
mov
out
sbb
xchg
xchg
inc
xchg
inc
xlat
movsb
or
mov
xor
sti
cmp
out
repz
in
push
pop
mov
jmp
or
inc
ret
subb
jp
adc
mov
dec
lods
shl
bound
push
push
pushf
fdivrs
push
jg
and
ds
jl
mov
cmp
call
sbb
das
add
clc
xor
push
pusha
mov
in
jne
je
push
sbb
in
add
cltd
clc
dec
or
jb
push
fistps
cmp
stc
mov
cmpsl
add
pop
inc
outsb
cmp
mov
push
imul
sub
push
loop
shr
je
sub
or
out
push
inc
out
inc
xchg
push
fnstsw
inc
xor
push
and
cwtl
mov
jmp
icebp
insb
xchg
aaa
stc
inc
loope
cmp
das
and
test
repnz
pop
in
gs
int
fwait
mov
xchg
jae
ficoms
dec
call
mov
dec
sbb
dec
xchg
cmp
adc
in
fimuls
adc
rorl
inc
adc
loopne
dec
mov
jg
xor
sbbl
dec
mov
xchg
cmp
in
cwtl
dec
divl
jbe
outsl
adc
gs
sbb
int3
lods
jge
and
test
orl
mov
mov
inc
xchg
in
mov
sbb
stc
loope
xor
or
pushf
adc
in
aad
mov
inc
pop
and
std
mov
or
in
mov
fcoml
push
add
test
shrd
pusha
cltd
test
ss
popa
pop
icebp
xor
lea
pop
pop
daa
mov
pop
adc
enter
xchg
push
mov
mov
sbb
mov
lret
push
daa
icebp
rol
dec
sub
ljmp
pop
adc
mov
add
loop
push
shrl
mov
loop
dec
repnz
pop
dec
jns
in
mov
pop
insl
out
mov
iret
xor
pop
es
dec
sti
inc
movsw
out
fnstsw
and
mov
aaa
mov
inc
adc
insb
mov
adc
cmc
sbb
cmpsb
cmp
or
sub
int3
cltd
outsb
xlat
cmpsl
outsb
sub
enter
inc
jl
adc
je
mov
lahf
inc
push
clc
into
jae
push
aas
sbb
int
bound
mov
mov
into
xor
iret
cld
and
call
sti
or
rcrb
pop
dec
ss
fwait
inc
jp
sub
test
jne
fdivr
inc
es
xor
inc
repz
sti
std
in
ffree
lods
test
sub
sub
push
pop
fstps
sbb
xor
jns
bound
scas
xlat
sub
in
in
sub
pusha
sub
mov
fcoml
or
fldcw
pop
sahf
and
imul
lcall
sub
loopne
xor
or
shll
jmp
inc
cs
into
loopne
jb
sahf
sbb
leave
pop
sbb
dec
cmp
and
out
nop
lcall
sub
xor
fiadds
mov
iret
jns
in
rol
adc
lods
std
outsl
fs
es
and
inc
mov
jb
jecxz
imul
and
fnstcw
mov
std
fcomps
xchg
push
rcrl
or
mov
daa
xor
stos
dec
mov
adc
mov
add
push
jecxz
mov
data16
inc
ljmp
cmp
addb
pop
mulb
ja
sbb
push
or
lods
loop
dec
negb
sbb
xchg
jl
jle
add
popa
movsl
cmp
and
sub
xchg
out
dec
mov
clc
rcrb
ror
loopne
inc
mov
adc
lods
out
or
sub
addr16
pop
cmpsb
inc
lahf
lea
fwait
stos
cld
call
dec
adc
scas
ds
hlt
daa
repnz
icebp
dec
sbb
stos
clc
mov
lahf
arpl
jne
arpl
and
popf
dec
pop
arpl
pop
pop
xchg
test
dec
in
mov
push
pop
outsb
lds
fstpt
push
xchg
shl
mov
or
jb
pushf
xchg
into
xchg
and
das
cmovs
sub
mov
out
and
mov
jo
mov
sbb
js
aaa
mov
and
xchg
xchg
mov
mov
add
lcall
push
fwait
shrb
xchg
repnz
push
and
in
jo
testl
scas
outsl
cmp
pop
mov
inc
lods
jb
fdivs
ss
cmpl
xor
sub
jns
or
xchg
mov
pop
push
outsb
mov
int3
into
in
push
jp
pop
add
lods
fcomi
cmp
mov
jne
and
ss
dec
data16
xchg
cmpsl
testl
in
insb
xor
xchg
in
lahf
mov
or
fstpt
pushf
sub
push
lret
cmp
out
int3
mov
sub
xor
out
andb
mov
ret
arpl
xchg
mov
mov
sti
jns
inc
or
dec
pop
ja
jns
rcr
loop
mov
add
test
xchg
mov
jne
xchg
bound
push
sub
lahf
and
mov
mov
adc
lods
cmp
divl
sbb
inc
mov
push
cmovne
xchg
pop
out
sub
lret
cli
push
push
dec
adc
pop
jnp
loopne
mov
jno
dec
lods
mov
js
out
add
dec
mov
mov
xchg
pusha
cmpsl
shlb
js
dec
and
xchg
xchg
push
shl
ljmp
add
inc
mov
mov
jg
insl
ret
loop
ds
dec
outsl
mov
mov
cs
stos
aad
dec
rcrb
push
push
cld
cs
lock
imul
mov
jge
cmp
push
lcall
cmp
pop
dec
pop
sbb
push
inc
sub
mov
sub
sub
int
push
lret
push
push
out
lret
dec
out
stos
fdivs
shlb
xor
arpl
add
xlat
jl
xchg
fwait
mov
push
inc
popf
mov
pop
mov
dec
xor
mov
xorl
sub
sti
lock
mov
scas
xchg
adc
fstpt
repz
cmc
cs
jns
fcomps
call
fsubl
add
xchg
mov
dec
rolb
sub
mov
bound
jne
ret
loop
imul
xor
mov
mov
xchg
inc
mov
mov
jecxz
out
fwait
push
cmpsb
lcall
mov
fadds
sbb
cld
adc
in
push
push
jbe
pop
cmp
shl
mov
and
popf
sbb
roll
cmp
int
sub
movsb
mov
mov
dec
push
xchg
mov
push
pop
sbb
data16
addl
ja
push
sbb
popf
mov
call
jl
repz
pop
mov
xor
sub
adc
jp
cmpsb
clc
jno
cmp
mov
sti
mov
inc
adc
and
xchg
les
or
frstor
cltd
lods
pop
and
orl
or
cmpsl
jb
into
mov
sub
mov
cs
adc
jecxz
dec
in
pop
jbe
inc
cwtl
cwtl
jnp
and
jl
out
lock
push
or
dec
and
inc
ret
inc
jp
and
mov
or
cmp
xchg
sbb
popf
bound
daa
mov
add
out
jbe
mov
mov
pop
mov
xchg
hlt
jbe
cmc
iret
lea
sub
pop
adc
movsb
sub
add
jb
and
pop
adc
hlt
pop
xor
rolb
pop
sbb
das
rorl
mov
cmp
jge
sbb
mov
adc
movsb
sbb
lea
xchg
xor
push
dec
mov
movb
inc
jns
sub
add
cmp
decb
mulb
movsl
jmp
test
fildll
xchg
dec
rcll
call
lcall
das
jle
xchg
insb
pushf
add
mov
jle
or
fs
call
test
movsb
pop
jge
imul
fsubrl
fistl
dec
rolb
adc
xor
add
popa
pusha
in
outsl
ja
mov
push
sbb
push
dec
lret
adc
mov
xchg
movsb
scas
icebp
scas
fwait
sbbl
pop
fisttps
sbb
mov
popl
adc
add
push
fldz
xor
fldenv
mov
mov
pop
mov
mov
jne
pop
ret
sub
sbbb
lds
outsl
in
test
arpl
inc
push
or
add
xor
leave
out
sbb
xchg
in
mov
add
fmull
aaa
test
mov
sbb
insl
fbld
out
negl
cltd
stc
or
cmpsb
lcall
scas
movsl
sarb
push
ja
dec
and
inc
mov
out
test
or
adc
insl
out
popa
out
adc
fmull
dec
scas
divl
jge
mov
lods
jnp
mov
insl
dec
add
jmp
pop
rorl
lahf
jmp
addb
or
imul
cmp
loope
test
fbstp
add
sub
enter
mov
sub
je
loope
jmp
insl
push
xchg
ljmp
mov
sub
sbb
dec
dec
pop
cld
ljmp
xchg
test
fsubs
or
mov
cmp
leave
cmp
adc
add
adc
mov
inc
icebp
or
mov
xchg
stc
andl
pusha
push
repnz
cmp
js
lahf
sbb
lret
and
ja
hlt
out
mov
mov
and
inc
das
lahf
lret
inc
dec
pop
pop
and
jns
call
or
jnp
sub
addr16
sub
ficompl
cld
aad
mov
roll
mov
in
in
mov
adc
or
das
add
enter
stos
ss
out
dec
mov
lds
jbe
stos
cmp
jecxz
iret
gs
aas
cli
sbb
movsl
pop
push
mov
mov
xchg
pop
mov
inc
inc
mov
xchg
std
ss
push
test
xchg
xor
dec
rorl
sub
mov
in
shlb
stos
int
push
loop
aad
jl
lea
xorb
stos
adc
insl
outsb
cmp
test
cmp
adc
mov
add
out
dec
cs
daa
fs
lock
push
jb
rcrb
sbb
adc
mov
sub
or
cmpsl
xlat
xchg
mov
jle
inc
imul
aaa
lahf
dec
jmp
out
das
sbb
mov
jb
pop
nop
and
sub
leave
inc
fildll
add
das
and
push
push
sbb
add
or
fmul
sub
dec
enter
cld
out
das
and
sbb
jne
cmp
loopne
imul
xor
push
sub
fisttpl
push
out
lcall
gs
xor
lds
cmpl
stos
std
nop
ljmp
mov
sbb
jge
lock
cli
jp
sbb
adc
out
pop
fiaddl
ret
cmp
xchg
cmc
mov
mov
dec
adc
push
mov
data16
lods
adc
test
push
loopne
pop
cmpsl
xor
add
pop
imul
je
fwait
adc
lret
mov
jo
dec
pop
int3
push
mov
popa
pop
inc
pusha
ficomps
js
aaa
imul
cltd
and
shll
sahf
idiv
ds
cltd
mov
and
cmpxchg
xchg
mov
dec
loopne
in
push
dec
out
and
not
push
and
das
aad
sbb
loop
ret
dec
or
mov
xchg
pushf
inc
fisttps
addr16
fidivrs
jb
rol
pop
out
in
in
jp
rolb
xchg
subl
add
insl
jmp
jb
cld
cwtl
pop
mov
inc
add
mov
inc
push
cld
and
loope
ss
jmp
aaa
scas
jae
pop
sub
lds
dec
mov
mov
sbb
lods
cmc
pushf
mov
iret
pop
sbbl
lea
sbbb
mov
clc
mov
pop
add
xor
xorb
and
adc
xchg
dec
or
dec
pop
pusha
xchg
jnp
xchg
xchg
sti
pop
fbstp
sbb
stos
stc
test
add
cmp
xchg
and
jae
mov
lret
cmp
arpl
into
sub
sti
testb
mov
or
and
xor
fistpll
or
aas
pop
cmp
push
idiv
cs
in
dec
sbb
push
mov
pop
loope
mov
mov
lahf
fincstp
insb
daa
stos
add
iret
push
test
pop
icebp
leave
shlb
jns
push
adc
push
ja
pop
testl
and
sbb
mov
test
repz
mov
fstps
data16
mov
lds
ja
lea
add
sub
ja
push
mov
jl
mov
out
push
sahf
loope
dec
pop
test
sahf
ljmp
loope
in
mov
ss
sarb
call
aad
xchg
out
and
and
cmpsb
and
stos
pop
jo
mov
out
and
adc
ret
js
jae
jne
mov
push
arpl
inc
inc
xchg
inc
pop
xor
call
hlt
mov
cld
std
cmp
adc
ss
and
orl
sub
inc
jmp
add
jmp
sub
cmpsl
and
repnz
cmp
jb
sbb
sbb
ljmp
mov
push
sub
jp
xor
cmp
and
and
popf
cltd
movsl
xchg
movsl
mov
in
sub
sbb
int
fsub
lock
cld
adc
daa
div
pushl
clc
sbb
fistpll
mov
pop
xor
sub
cli
iret
jmp
pushf
xchg
in
xchg
orb
mov
or
roll
sbb
idivl
cmp
jmp
cs
jecxz
mov
pop
lock
cltd
cmc
push
xor
enter
clc
test
xchg
sub
pushf
xor
in
add
pop
cmp
mov
adc
xchg
movsl
sti
jo
and
scas
mov
scas
sub
add
ds
push
test
rorb
sub
or
xchg
sub
mov
dec
inc
sub
adc
cmpb
push
fdivrs
push
mov
and
jne
xor
insb
lret
mov
out
ja
sbb
mov
je
sub
sub
scas
dec
les
mov
sub
cmp
das
inc
sbb
mov
inc
aas
in
add
int3
xlat
add
xor
outsl
test
push
mov
fmuls
push
ja
jbe
pop
or
push
push
arpl
in
or
pop
xchg
xchg
push
gs
mov
inc
dec
in
lcall
shll
sub
sbb
stos
pop
and
movsl
out
in
or
shll
call
aam
pop
xchg
xchg
les
ja
cmp
pop
jecxz
lcall
fld
fs
js
cmpb
shlb
mov
stos
scas
dec
or
jae
stos
clc
jmp
sti
jno
mov
push
cs
aaa
push
loop
dec
arpl
insl
push
inc
ds
sbb
push
push
push
mulb
lock
roll
andl
and
xchg
sti
xchg
lock
out
cltd
push
pop
lea
pop
mov
pop
sub
adc
cmpsb
pop
cmp
and
cmp
push
aam
xchg
mov
mov
sbb
mov
pop
aaa
jecxz
fsubrl
jae
ja
stos
pop
data16
and
fistl
fiaddl
pop
or
leave
cmpsl
jnp
cmp
lock
dec
movsl
js
xchg
inc
inc
fsts
jb
mov
xchg
daa
aam
loope
inc
mov
lret
xor
loop
sbb
push
add
jb
dec
pop
cmpsb
xorl
or
fdivl
mov
rcl
imul
pop
aad
push
sub
mov
or
dec
lods
lea
mov
xchg
or
push
cli
mov
xchg
adc
jns
popf
pop
es
push
inc
add
fdivrl
mov
mov
rcll
aad
xchg
pushf
nop
jl
or
mov
add
pop
dec
xchg
mov
xor
add
loopne
gs
push
idiv
jb
pop
jns
stos
sbb
xchg
mov
sbb
roll
out
lock
xchg
xor
jbe
and
hlt
in
ret
into
movsl
call
or
cmp
push
out
ficompl
movsb
data16
xchg
in
push
fisubrs
pushf
pop
sbb
add
dec
out
mov
cmc
iret
sbb
outsb
lret
or
and
or
or
jmp
adc
push
adc
dec
stos
or
gs
stos
test
mov
lcall
lock
lret
std
lret
ljmp
subb
dec
scas
imull
xor
sbb
jo
mov
test
dec
stos
push
clc
cli
fldlg2
fcmovnu
mov
std
cmp
mov
mov
xor
stos
out
lds
call
cmp
jl
daa
push
push
xchg
mov
jmp
imul
inc
leave
das
push
cmp
lcall
popf
inc
out
jp
cmpsl
outsl
xor
push
xlat
ss
lods
push
mov
in
movsb
jns
jb
cld
sub
test
adc
inc
insl
jp
jecxz
icebp
imul
ret
sbb
es
dec
xchg
sub
fsubrl
jbe
adc
movsb
pop
and
stc
cmp
ror
mov
stos
shrb
jp
mov
push
xlat
mov
sbb
aad
cmp
dec
pop
mov
fwait
in
fwait
jae
mov
cwtl
fidivs
aaa
mov
in
xchg
insl
mov
dec
add
mov
xor
pop
aam
xchg
cwtl
xor
jg
inc
mov
loopne
lea
sbb
xor
mov
pop
in
pop
je
sub
mov
ficompl
push
insl
xor
sub
in
sub
lret
sbb
subl
or
sub
mov
bound
mov
cmp
mov
dec
call
jecxz
test
mov
ret
xchg
xchg
cli
mov
scas
push
jbe
dec
xor
add
jae
fistpl
negb
lods
je
out
insl
xchg
std
je
int3
xchg
xor
cmp
lods
dec
mov
lock
jmp
xchg
arpl
das
jp
push
test
outsb
inc
out
sub
outsb
fldcw
xorl
es
popa
dec
inc
jb
out
sbb
push
xchg
mov
inc
push
les
ret
adc
cmp
scas
lds
or
adc
imul
mov
aaa
xlat
insl
jp
xchg
mov
jge
cmc
clc
and
dec
pop
int3
ja
insb
mov
dec
mov
inc
pop
add
fistpl
mov
je
leave
adc
cmp
aas
jl
scas
xchg
sub
addr16
shrl
add
add
lods
add
out
dec
cmpsl
nop
pop
jae
push
pushf
in
pop
push
xchg
scas
repz
scas
pop
cmp
push
xor
ds
mov
mov
mov
sub
xlat
daa
ja
pop
add
and
mov
bound
sub
sarl
pop
dec
mov
lret
sbb
fisubrl
hlt
xorl
cmpsl
aad
test
xor
in
fwait
mov
xlat
stos
jno
jmp
cmp
sub
mov
inc
aam
mov
mov
and
inc
pop
mov
sar
dec
mov
icebp
int3
jl
cmp
jecxz
and
ret
mov
mov
inc
popa
mov
fwait
aas
jecxz
aad
xchg
xchg
mov
cmpsb
aad
int3
ljmp
out
cmpsl
or
scas
add
ss
lock
shrb
push
push
mov
pop
subl
rdmsr
sub
push
inc
mov
sti
add
mov
pop
inc
lret
and
dec
int
div
cltd
jno
push
fs
pop
jecxz
jnp
bound
xchg
dec
insb
inc
lcall
lds
mov
inc
or
sahf
pop
mov
mov
jp
cmp
pop
sti
xor
or
jae
and
xchg
pushf
repnz
cs
adc
fldl
sub
xor
in
jecxz
xchg
inc
pop
shll
imul
mov
pusha
icebp
jnp
shlb
je
adcl
in
cmc
push
pop
or
sbb
decl
xchg
cmp
enter
sub
jle
push
mov
pop
cmp
xor
cmc
movsb
mov
sub
cmpsb
ja
das
fcoml
xchg
add
pushf
mov
sbb
or
xor
sbb
je
pop
cmpsb
scas
flds
cmp
std
pop
cmp
pop
lds
loopne
dec
movsb
dec
nop
jmp
xor
in
sbb
mov
aam
aam
and
pushf
dec
push
lods
mov
sbb
ret
cs
loop
aam
das
jbe
sti
loopne
outsb
nop
push
xor
sbb
dec
sbb
popa
popa
xchg
add
cld
nop
stc
sbb
lcall
push
ret
lds
outsl
xor
mov
cmp
loope
int3
fnsave
into
xchg
xchg
into
jne
xor
add
sub
aaa
push
fidivrs
push
adc
out
je
adc
int
icebp
inc
adc
inc
mull
jp
std
mov
je
bound
pop
data16
ljmp
mov
pop
and
lahf
xchg
daa
into
and
jmp
jno
vpmaddwd
mov
pop
inc
push
out
into
rolb
je
and
lods
ret
mov
pop
adc
ret
divl
mov
push
xchg
jp
pusha
xchg
cmp
in
jno
scas
push
popa
jp
dec
push
pop
mov
rorb
sub
mov
pop
push
movsl
xchg
out
ss
imul
into
mov
xchg
mov
push
outsl
and
and
and
cmpsb
fildl
jo
clc
xchg
xchg
xor
dec
shll
sbb
mov
mov
test
popf
jns
in
insl
ja
jmp
sub
lret
xor
mov
std
push
mov
push
push
pusha
bound
stos
jb
adc
fcoml
mov
mov
out
inc
xchg
cmpsb
jb
adc
scas
scas
mov
cmp
fwait
call
jnp
bnd
lock
not
in
es
inc
loopne
stc
lods
out
cmp
xor
jno
pop
adc
sub
or
and
aas
xchg
mov
sub
mov
xchg
mov
adc
jl
xor
pop
jge
xor
and
sahf
je
xchg
add
dec
and
je
cmp
mov
add
mov
pop
fcoms
pop
cs
mov
cwtl
xchg
cmp
lret
mov
ret
test
lock
push
push
jns
sub
cmp
or
push
jno
dec
xor
push
adc
push
test
fs
mov
mov
sub
scas
lods
push
add
ret
std
pushf
or
mov
dec
repnz
inc
cmp
pop
xlat
insl
es
cmp
leave
rcll
pop
sub
ret
push
fdiv
popf
test
adc
or
repz
aas
insb
lea
mov
sbb
cmp
iret
cmp
decb
pop
add
cmp
stos
inc
pop
mov
cld
xor
sub
xor
push
mov
outsl
add
cwtl
xor
test
je
in
jecxz
pusha
push
mov
stos
inc
shll
test
adc
sbb
sub
dec
dec
jb
push
xchg
les
ret
mov
inc
mov
ds
push
movsb
dec
xchg
mov
mov
fmul
mov
das
jmp
fdivrs
popf
stos
iret
push
push
cmpsl
mov
test
in
fimull
lret
ffree
add
sar
sbb
mov
and
sbb
pop
jle
addb
push
leave
mov
clc
add
inc
fiaddl
mov
lea
mov
pop
cmp
dec
shl
and
cmp
ficomps
sub
cmp
cmpb
lret
out
mov
mov
js
jp
js
aas
dec
dec
stos
sbb
add
dec
cmpsb
cmp
mov
jae
gs
fistpl
rorl
mov
movsb
mov
mov
inc
stc
imul
push
push
pop
test
lods
jae
imull
outsb
call
dec
sub
push
movsb
push
and
mov
cli
lods
ja
add
shlb
ljmp
lods
mov
adc
xchg
mov
push
out
mov
jnp
and
int
push
int
fstl
lret
aaa
sti
or
inc
rcrb
sbb
dec
pop
inc
pop
jl
xor
sbb
mov
xchg
popa
xor
call
fstps
test
sbb
mov
add
or
sub
dec
mov
rolb
aaa
cmpsl
mov
mov
xchg
fcomp
lea
jnp
sbb
mov
cmp
xor
cmp
pop
into
add
push
inc
addr16
mov
or
and
pop
add
add
and
call
xor
add
subl
lock
mov
fiadds
inc
mov
iret
cmp
pop
and
and
pop
bound
or
lock
push
mov
test
inc
push
add
xchg
mov
inc
cmp
and
test
out
sub
stos
pop
out
push
push
pop
push
scas
cwtl
inc
mov
mov
stc
hlt
ficoml
and
pop
sbb
add
sub
mov
mov
fidivs
vpmaddwd
out
fwait
sub
nop
pop
inc
out
xor
leave
notl
test
dec
push
and
in
dec
in
xor
test
push
mov
add
rcrl
addb
jecxz
stos
fs
shlb
in
out
nop
inc
lds
sti
sub
dec
push
lods
icebp
lock
xchg
add
data16
fstps
ljmp
aas
cmp
mull
mov
ficoml
lods
jae
mov
or
fidivrl
in
out
insb
cs
jns
repz
cltd
or
and
add
in
mov
xlat
inc
arpl
loope
lods
pop
push
scas
sbbl
jo
adc
xchg
adc
xchg
arpl
fbstp
cmp
mov
flds
arpl
fsubs
addr16
xor
mov
jno
jno
movsl
pop
lods
adc
stos
mov
push
icebp
xchg
xor
mov
xchg
push
sub
sbb
xchg
in
sub
repz
out
jg
fdivs
lods
cs
mov
jae
jae
clc
inc
push
fmuls
mov
imul
sarl
icebp
dec
fs
or
push
xlat
xchg
jle
push
test
popa
mov
xor
rol
push
mov
arpl
push
pusha
jmp
mov
fisubs
lods
pushf
add
std
rorl
push
mov
jecxz
aas
adc
mov
inc
jmp
inc
icebp
leave
andl
int
popf
data16
shrl
into
ss
ja
mov
nop
lea
pop
mov
xor
rol
push
mov
daa
xchg
inc
fcomps
sub
mov
lret
pusha
xchg
inc
js
xchg
push
rcrb
fdivrl
lods
fwait
jl
lods
jmp
pop
cmp
fisubrs
rolb
or
push
nop
stos
sub
fistl
xchg
cmpb
mov
pop
movsb
les
xchg
jl
inc
das
cmp
xchg
out
outsb
sbb
inc
mov
or
mov
iret
push
inc
mov
jne
pushf
popa
pushf
sbb
cmpsl
iret
imul
xorl
dec
xlat
adcb
xchg
and
es
jb
dec
sub
into
popf
mov
jmp
xor
adc
sahf
stos
cwtl
out
shlb
hlt
test
sahf
push
jnp
ss
and
call
repz
adc
sbb
jge
pop
int3
ljmp
out
and
das
xor
out
pushf
and
fisubrs
mov
add
mov
mov
jp
jg
int3
repz
fstpl
jge
sarb
ficoms
xchg
mov
mov
or
sbb
dec
jecxz
enter
fbstp
aaa
ss
push
into
divb
pop
mov
mov
push
xchg
enter
xor
cmp
mov
dec
sbb
mov
lock
andl
add
divb
cmp
jmp
xchg
mov
push
mov
push
mov
das
and
mov
cld
data16
mov
pop
fmulp
loopne
in
lcall
push
fsubs
insl
ds
int3
inc
sbb
xchg
mov
daa
add
inc
aaa
rcrl
add
xchg
mov
mov
shlb
cmpsl
cmc
add
addr16
je
fdivr
ja
xorl
data16
gs
add
in
es
shrl
or
jno
jecxz
in
rolb
sbb
sbb
xor
mov
in
pop
andb
ret
pop
xor
adc
xor
xor
ja
mov
cs
inc
inc
or
insb
mov
jl
mov
mov
jne
sub
xchg
sbb
or
clc
push
add
add
jbe
jbe
in
or
std
sbb
mov
lock
fnsave
in
adc
hlt
out
mov
jge
out
xor
leave
adc
loopne
push
pop
jno
xor
test
add
jmp
sti
or
adc
push
popf
xor
cmp
sub
pop
shl
mov
cwtl
lret
inc
test
shrd
mov
sahf
mov
scas
lods
pop
loope
push
push
das
mov
mov
mov
movsl
push
jp
fsubr
xor
push
movsb
inc
dec
push
enter
push
fcoml
and
inc
add
xchg
in
ret
add
or
mov
movsb
mov
pop
int
pop
mov
ljmp
out
data16
ljmp
pushf
outsl
pop
out
mov
ljmp
cmc
adc
fs
jbe
mov
xor
daa
mov
hlt
shlb
int
dec
mov
pop
js
lcall
orl
mov
loop
ficoms
scas
sbb
mov
daa
push
setno
cmp
pop
or
add
pop
inc
pop
in
cs
in
mov
jp
jle
mov
xchg
sub
xchg
xchg
icebp
sar
test
pop
sub
add
ja
push
inc
or
int3
mov
fs
data16
aam
cmpsl
sbb
lods
dec
popa
loopne
in
nop
push
fldcw
cltd
outsl
pop
fnstsw
pop
pop
enter
mov
fisubrl
ja
xorb
dec
xor
push
mov
add
inc
mov
inc
or
xor
and
xchg
loope
jge
pop
add
leave
xchg
push
mov
mov
add
push
fbld
inc
rcr
sub
fwait
dec
xchg
push
inc
push
fstpl
out
fldenv
xor
push
mov
cld
fs
mov
cmp
ss
sbb
mov
mov
mov
add
xchg
int3
add
faddl
jmp
mov
fs
in
mov
andl
sub
pop
outsb
std
dec
jne
in
jmp
push
cmp
imul
scas
mov
enter
outsb
lahf
push
lock
push
dec
cmp
test
in
sub
sub
xchg
sahf
mov
jge
sahf
subl
mov
jb
loope
ret
ja
cmp
rorb
sbb
lock
js
cmp
bound
inc
xor
cs
movq
cmc
std
jmp
int
sbb
mov
dec
push
sahf
sub
push
and
out
push
ficomps
cmpsb
jge
cltd
out
or
fwait
inc
or
cmp
xlat
das
lods
out
push
les
xchg
repz
add
lret
stos
jle
xor
lret
cli
ret
sbb
inc
sbb
inc
mov
repnz
stc
out
sub
pop
js
ljmp
or
stos
inc
popa
ss
cld
lods
jne
mov
gs
xchg
int3
in
std
vpaddw
mov
and
addr16
pushf
xor
dec
iret
mov
addr16
cvtpi2ps
loopne
rclb
inc
enter
hlt
inc
in
fidivrs
adc
subl
lds
inc
sahf
das
dec
pop
add
leave
push
fstp
loop
fcmovu
in
push
into
pushf
roll
sub
xor
divl
in
ds
das
clc
mov
add
cltd
adc
push
add
lret
jns
push
idivl
add
pop
rcl
ds
xor
inc
pusha
pop
adc
mov
bt
in
mov
pop
test
in
add
scas
aaa
mov
int
mov
mov
adc
xor
ficomps
lahf
jo
aad
cmp
insb
cmp
fisttpl
lds
sbb
cli
repz
rcrb
addr16
adc
pop
sub
mov
lock
sbb
or
mull
jno
imul
dec
test
fiadds
repz
lea
sbbl
inc
int3
dec
mov
fmul
in
push
les
adc
mov
jns
mov
jb
dec
jns
inc
push
or
outsl
inc
ds
jmp
dec
addr16
out
sarb
mov
dec
das
push
or
push
push
aas
inc
jge
xchg
pushf
cli
sbb
push
loopne
lock
mov
xchg
popa
mov
sarl
xchg
cmp
loopne
stc
cmp
sub
pop
jne
pop
roll
push
jbe
pop
jbe
push
mov
sub
jb
or
jnp
aas
push
mov
sbb
lahf
xor
xchg
jp
mulb
jg
je
imul
mov
ss
cmp
mov
in
jae
ss
clc
js
dec
pop
adc
leave
ficoml
aaa
repz
add
adcb
gs
mov
mov
add
jns
jle
mov
mov
out
mov
pop
sbbl
mov
mov
psrlq
and
mov
xchg
gs
and
mov
and
mov
loopne
jb
inc
xchg
push
jnp
loope
mov
fmul
aas
cld
cmp
xchg
scas
pushf
std
rolb
ror
adc
lods
addr16
jo,pt
xchg
adc
dec
push
je
xchg
mov
ss
lahf
mov
out
out
ret
dec
add
pop
out
call
ds
jno
mov
cmp
scas
dec
pop
and
mov
adc
mov
daa
xchg
pop
fdivl
mov
aas
sbb
scas
loope
inc
ret
ret
rolb
scas
xchg
sti
mov
cmp
data16
pop
test
mov
inc
sub
imul
sub
jo
dec
mov
jns
ja
popf
sbb
pop
push
push
inc
psrlw
popf
push
outsl
push
or
or
sub
push
leave
lea
adc
pop
mov
pop
into
xchg
push
dec
fadds
loope
jl
outsb
bound
xorl
or
cs
mov
push
addr16
stos
or
mov
stc
dec
pop
lcall
xlat
mov
loopne
icebp
and
dec
cmp
mov
push
cli
loopne
enter
aaa
mov
pop
or
xor
mov
xchg
test
clc
je
xor
sbb
jg
mov
das
test
mov
das
xchg
mov
push
stos
jae
mov
adc
mov
pop
stc
not
decl
inc
pushl
add
mov
es
xchg
dec
jmp
cli
aas
fwait
popf
cmpsl
sub
ljmp
loopne
cmp
mov
pop
fcompl
inc
mov
lea
bound
push
mov
addr16
in
and
and
cmp
push
jae
add
jae
xchg
pushf
loopne
pushf
add
sbb
adc
cmp
daa
pop
repz
adc
jmp
scas
aaa
mov
insb
daa
nop
dec
xor
pop
jb
je
jmp
mov
icebp
inc
mov
mov
mov
sub
into
ss
mov
pop
pop
enter
arpl
aaa
mov
and
lods
jo
xchg
test
inc
mov
es
sarb
hlt
movsl
movsl
es
movb
fistl
hlt
icebp
xchg
call
fstpl
pop
lcall
daa
add
and
dec
das
dec
push
pop
test
ds
mov
jnp
les
leave
xchg
adc
sbb
es
mov
push
mov
ds
inc
sbb
add
mov
bound
push
dec
push
std
decl
cmpsb
outsb
or
add
and
leave
scas
adc
adc
dec
fdivr
adc
loope
aaa
inc
adc
divb
repz
call
mov
mov
push
dec
stos
mov
mov
or
xchg
test
lret
inc
dec
cltd
jecxz
gs
mov
push
icebp
add
inc
pushf
add
lahf
dec
roll
or
xor
mov
add
add
pop
das
xchg
pop
inc
into
cmpsl
loopne
sbb
and
add
add
adc
mov
sub
rolb
mov
mov
and
daa
dec
jbe
inc
sub
xor
jmp
cltd
lret
out
add
xchg
and
aad
test
xlat
jae
lahf
mov
cwtl
imulb
mov
cmp
imul
aaa
or
pop
sbb
nop
sub
xchg
sti
pushf
sub
inc
ss
mov
xor
jbe
fcomi
leave
lods
pop
int
push
sbb
dec
jmp
outsl
std
add
test
orl
or
jmp
adc
sbb
pop
or
js
loope
cmpsl
add
xchg
dec
sub
dec
sbb
and
pop
xchg
push
fiadds
andb
pop
and
dec
sti
mov
push
xor
aam
call
jno
cmp
shl
mov
pop
sbb
inc
pop
jp
mov
in
iret
push
mov
and
mov
testb
push
cwtl
jbe
fsubl
sub
aas
xor
mov
cmp
mov
ja
shr
cmp
mov
int
adc
sbb
inc
mov
out
inc
xchg
mov
inc
add
aad
out
xor
data16
stos
xor
out
loope
add
adc
adc
adc
mov
mov
add
out
mov
xchg
cli
adc
pushl
push
inc
nop
xchg
cltd
adc
fistpl
dec
mov
add
sub
add
fs
das
sarl
cmp
mov
sub
popf
leave
inc
mov
inc
jmp
dec
mov
sub
jns
je
dec
mov
dec
xchg
push
adc
lea
jnp
mov
fcmovnbe
mov
push
insl
in
in
fmuls
mov
loopne
mov
orb
clc
xor
push
movsb
sahf
nop
std
aad
jmp
dec
pop
jnp
rorl
mov
push
xchg
daa
lock
fildll
aam
enter
adc
jns
mov
push
idivb
xor
ret
push
mov
jo
popf
addr16
push
test
cmc
stos
negb
mov
pop
pop
lret
lret
add
mov
or
lods
andl
je
mov
or
mov
xor
imul
mov
mov
xor
and
std
adc
cmp
push
sbbl
add
movsl
jecxz,pt
xlat
xor
xor
push
xor
add
clc
es
stc
inc
jecxz
mov
add
jmp
lds
in
push
mov
data16
or
out
les
push
xlat
cli
pusha
pop
add
cmp
xor
add
lods
sbb
push
mov
movsl
xchg
xor
mov
daa
lods
inc
inc
out
add
clc
lcall
gs
xchg
std
jnp
test
sbb
in
push
imull
and
add
jle
pop
mov
fdivl
mov
push
shll
inc
inc
popf
fstl
xchg
andl
stos
inc
loope
xor
sahf
lahf
stos
inc
inc
xor
xchg
out
push
pusha
mov
mov
jecxz
mov
jge
push
fbld
aad
sbb
mov
push
cmpsl
int3
add
outsb
xor
iret
out
jne
loop
fldenv
subl
mov
xor
lods
cli
cmp
fwait
add
jmp
sub
dec
testb
cmp
cmp
dec
ja
cs
mov
rcrb
inc
decl
adc
inc
xchg
pop
in
inc
cmp
xchg
aad
hlt
inc
jae
mov
into
jns
fcompl
int
sarl
in
sub
je
inc
dec
cli
test
daa
push
adc
or
adc
and
sahf
lods
pusha
sbbl
loope
repnz
and
jmp
loop
lds
aas
jmp
xor
jae
adc
mov
xor
pop
xlat
orb
enter
int
mov
mov
ret
pop
aaa
cwtl
adc
cmovg
mov
fstl
out
mov
mov
adc
mov
into
dec
aaa
pop
mov
cwtl
jns
cmpsb
inc
rorb
mov
call
fbstp
pusha
mov
mov
sbb
or
pop
andb
cmp
lds
sub
adc
loope,pt
lahf
or
fmuls
jae
mov
jb
pop
fcmovu
hlt
lcall
es
mov
dec
push
test
sar
jp
dec
push
inc
sbb
mov
and
dec
xor
out
cwtl
dec
mov
jne
add
add
aad
test
xchg
por
sub
and
push
cmpsb
cli
xlat
xor
stos
cmpsl
inc
inc
sub
adc
lods
shll
cmp
cld
or
pop
dec
xchg
cmp
fildl
scas
icebp
js
add
test
shl
lock
xchg
push
pop
and
leave
mov
ret
adc
push
cmp
dec
sub
dec
xor
xchg
cwtl
adc
sarl
sub
pop
hlt
outsb
into
jge
sub
pop
mov
xchg
in
ds
loope
mov
mov
repz
pop
ret
pop
mov
and
mov
pusha
enter
cmpsb
emms
and
addb
mov
std
dec
lret
mov
mov
mov
mov
cs
outsb
int
ss
mov
movsb
fidivs
jp
cs
jp
aad
out
push
add
insl
daa
lea
pop
std
dec
dec
les
xor
xorb
lret
push
jne
cmp
ja
adc
sbb
movl
and
aas
test
jne
mov
fsub
push
and
add
mov
mov
popa
fsts
jnp
jmp
cmp
or
addr16
stos
pop
outsl
into
mov
aam
lods
ds
inc
xchg
jl
push
fnstsw
loopne
xor
ficompl
add
pop
fnstsw
sti
push
sub
mov
test
iret
sub
sahf
xlat
inc
mov
sub
sbb
ds
rclb
adcl
frstor
ret
xchg
and
cmc
push
xchg
lcall
aam
cmpb
daa
jp
cmc
fadds
cltd
pop
loop
mov
mov
imul
pop
push
xchg
pusha
daa
int
into
cli
sbbl
adc
push
stos
shll
movlps
mov
iret
dec
stos
in
aad
mov
xchg
add
outsl
mov
sub
inc
test
add
rclb
and
sub
push
push
and
pusha
js
pop
fwait
jbe
mov
dec
xchg
or
sub
ja
and
fidivrs
jbe
push
in
out
push
dec
aas
jg
imul
pop
adc
std
and
std
sbb
rcrb
add
and
dec
rolb
cmc
dec
ret
mov
popf
jae
jge
aas
push
sbbl
ljmp
fs
out
xor
cmp
es
dec
neg
pop
jl
sub
adc
push
rolb
or
cli
loop
mov
jae
inc
sti
clc
pop
lock
stos
dec
jg
fstpl
mov
shrl
mul
xor
push
or
mov
ret
push
in
jne
es
mov
pop
adc
int
stos
dec
xlat
jg
adc
pop
rorb
jb
xchg
repnz
imulb
add
addl
add
jecxz
or
and
rcrl
in
push
movsb
cmp
in
jl
sbb
out
or
lret
and
mov
mov
sqrtps
xor
dec
es
fnstsw
sub
jo
or
xor
cmpsl
gs
and
push
fldenv
pop
sbb
insb
xchg
xor
lahf
insl
sbb
mov
pop
pusha
pop
sbb
jmp
jns
fptan
mov
fwait
int
xor
movsl
icebp
fldenv
daa
in
in
lahf
sub
add
popa
and
jge
and
cltd
jle
bswap
dec
fcomps
pushf
push
fsub
jae
or
mov
lret
adc
daa
sub
es
scas
mov
mov
enter
fst
cmc
dec
imul
jns
push
stc
jle
scas
mov
addr16
mov
das
popa
test
inc
sbb
data16
pop
std
jge
inc
test
adc
cmpl
pop
pop
mov
repnz
xlat
adc
in
xchg
cmpsl
and
and
add
jno
jg
pop
int
sub
jg
addl
sarl
jp
xor
scas
sub
pminub
mov
cmpsl
cmp
cmp
dec
pop
dec
cmp
enter
adc
mov
xor
pusha
testb
sbb
or
sti
popf
sbb
stos
mov
xchg
dec
xrelease
mov
jecxz
test
push
inc
dec
push
cmc
xor
jge
pop
mov
out
in
insl
dec
into
mov
xor
ja
adc
jg
fnsave
int3
cltd
loopne
xchg
int3
cmp
imul
pop
sbb
bound
ss
mov
stc
push
daa
sbb
popf
pop
sbb
pusha
mov
cmp
rol
lahf
lcall
cltd
cmp
scas
test
cmpsb
push
mov
cltd
into
or
int
decl
mov
or
push
pop
es
pop
outsb
in
out
aad
enter
pop
jb
clc
mov
outsl
mov
pop
out
pusha
push
test
and
mov
adc
inc
ror
clc
push
push
mov
xchg
xchg
pushf
ret
mov
add
imul
dec
pushf
in
lds
cmp
and
pop
xchg
jl
jmp
xor
ljmp
rcl
xadd
sub
out
stos
adcl
ljmp
mov
mov
in
push
ljmp
adc
ficompl
sub
test
mov
push
xchg
adc
cmp
dec
aas
loopne
adc
in
icebp
mov
cmpsl
dec
add
cmp
xor
add
dec
or
std
jmp
fld1
cld
sub
mov
and
cmpsb
insb
mov
pop
enter
fwait
jno,pn
pop
movsl
ficompl
aaa
std
cmp
xor
or
mov
mov
inc
dec
jmp
push
ds
test
ja
pop
push
mov
inc
clc
jbe
pop
aam
jns
aaa
shl
mov
gs
xor
jae
dec
call
xchg
ljmp
fs
add
test
cmpsb
aaa
lods
jge
add
inc
cmc
mov
es
xchg
iret
xchg
mov
data16
sub
out
sbb
and
jne
sub
pushl
jnp
lock
ficoml
shrl
into
xchg
push
dec
sub
mov
ja
push
pop
aas
int
scas
add
lcall
imul
pop
test
jae
push
ficoms
lea
sub
ds
incl
cmp
sub
mov
mov
cmp
push
jo
es
outsb
mov
inc
jecxz
jnp
push
jne
xor
push
mov
cwtl
fwait
imul
stos
cs
in
mov
and
lds
pop
push
xchg
adc
xchg
sarb
sub
shl
mov
stos
xchg
xor
ret
or
inc
or
ret
jp
jecxz
gs
imul
inc
out
add
cmp
scas
jge
imul
sub
adc
lea
mov
call
add
adc
lret
and
cmp
ljmp
dec
int
cld
mov
mov
jns
mov
jnp
mov
insb
sbb
inc
pop
jge
into
movsl
rolb
popa
pop
pusha
mov
loope
repz
pop
inc
sarl
push
in
dec
cmp
and
mov
push
pusha
cli
push
mov
jmp
addr16
loop
and
fs
fstps
insb
sub
xchg
mov
xchg
lock
dec
xchg
mov
mov
arpl
shll
rolb
fsub
data16
lcall
stos
lcall
lods
insb
xchg
xchg
and
adc
adc
loope,pn
mov
fcomps
icebp
push
cmc
scas
nop
imull
push
push
push
sub
popa
xchg
mov
scas
adcb
aaa
pop
xlat
push
mov
jnp
jnp
push
int3
fwait
pop
mov
pusha
sub
jno
testl
insb
mov
lret
cmp
dec
into
mov
push
mov
dec
frstor
lcall
dec
or
mov
lea
xor
leave
imul
mov
stos
data16
fdivrs
repz
in
xchg
sbb
fistpll
shrb
mov
ret
push
int
sub
mov
imul
iret
or
daa
xchg
pop
pop
mov
or
fisubs
repnz
inc
jecxz
enter
adc
and
int
inc
sbb
mov
dec
pop
ljmp
sbb
mov
mov
xchg
fstl
or
pop
xlat
test
subb
xchg
fisubl
fidivl
lea
adc
jp
lods
push
out
lock
sub
repz
leave
inc
inc
cmp
sub
and
fs
out
pop
add
imul
mov
dec
lret
xchg
dec
push
sahf
mov
subl
lods
inc
loope
lea
add
fildll
jns
idivl
sub
cmpsb
jge
mov
adcb
push
mov
bound
clc
outsb
scas
xchg
xchg
imul
roll
jno
dec
adc
into
mov
movsl
subb
inc
aad
test
addr16
or
jl
mov
cmp
or
push
xor
xor
push
lahf
sbb
int3
xchg
inc
pop
xchg
outsl
pop
add
ret
enter
lahf
shlb
xchg
cwtl
int
cwtl
or
mov
pop
add
filds
dec
cmpsb
in
mov
arpl
dec
test
xchg
and
adc
adc
insl
cmc
pusha
lock
xchg
mov
adc
cwtl
fsts
into
mov
in
push
adc
gs
xchg
imul
call
sbb
fnop
rcrl
sarl
push
repnz
mov
nop
jl
pop
hlt
ja
sbb
hlt
cld
cmpsb
mov
rorl
fs
or
in
popf
pop
mov
movsl
sbb
mov
inc
sub
imul
test
add
inc
inc
jl
sub
sbb
roll
cmpsl
int
fidivl
push
hlt
fistl
sub
mov
add
mov
data16
dec
movsl
outsl
xchg
jecxz
or
jl
in
push
sbb
adc
mov
pusha
addl
sbb
std
out
pusha
mov
sbb
jecxz
popf
rorb
inc
xchg
mov
dec
cmp
fwait
cmp
mov
mov
aas
cs
cmp
popf
scas
pop
or
adc
packuswb
add
aad
pop
push
stos
xchg
sub
adc
xor
pop
vpaddsw
push
icebp
cmp
jnp
movsl
loope
push
push
fildll
push
sbb
stos
and
aaa
jns
int
sub
insl
jg
sbb
and
fldt
leave
leave
inc
sbb
cmp
add
icebp
push
cmc
mov
dec
ret
cmp
push
aam
out
enter
inc
mov
leave
cmc
cmp
cmc
inc
dec
aam
mov
cmp
dec
adc
mov
sti
ja
push
mov
cmp
xchg
mov
clc
jbe
fisttps
or
pop
mov
test
cmpsb
dec
mov
cmp
not
int3
shl
mov
pop
pop
test
js
shrd
push
pop
mov
loope
xchg
sub
add
test
outsl
xor
add
addr16
sbb
hlt
insw
iret
daa
adc
mov
sub
xchg
mov
xchg
pop
jae
in
stos
arpl
loop
mov
sbb
and
pop
xchg
dec
dec
fwait
add
ret
int3
push
pop
enter
pushf
sbb
mov
fisubrl
sahf
push
imul
test
sbb
or
test
out
ret
in
push
pop
sub
xor
dec
stos
or
xchg
sbbb
pop
push
ss
dec
push
xchg
leave
and
adcl
inc
enterw
mov
std
xchg
adc
iret
icebp
inc
imul
xor
mulb
cmc
lret
sbb
push
in
xlat
cmp
in
shlb
mov
dec
lea
inc
clc
loopne
mov
leave
or
sbb
xlat
leave
arpl
mov
pop
jmp
bound
lret
rcll
mov
xchg
call
xor
das
mov
lret
into
jg
mov
sbb
bound
xor
push
ljmp
loop
lods
arpl
leave
push
add
outsl
cmpsl
repz
mov
daa
push
mov
sub
mov
jae
mov
mov
addl
out
mov
inc
cmpxchg
mov
adc
lock
pop
mov
out
add
imul
les
arpl
fnstenv
sub
out
pop
lock
js
push
xchg
xchg
outsb
mov
mov
jp
es
loope
or
repnz
sub
pop
ret
loope
int3
dec
mov
mov
and
aas
cmp
mov
hlt
sbb
sbb
push
popf
daa
inc
sahf
mov
test
aaa
in
xchg
or
out
cli
insl
addl
jmp
xchg
or
jbe
fstpl
and
cwtl
inc
fmuls
leave
pop
bound
cmc
pop
loope
call
pusha
scas
jge
inc
and
aam
sbb
jle
fcoml
fwait
lahf
outsl
stos
mov
insl
sbb
iret
inc
mov
mov
std
jge
dec
mov
push
jg
or
stos
dec
jecxz
and
dec
adc
push
test
xor
into
mov
xchg
sub
out
lea
mov
test
insb
and
pop
stc
lock
jns
imul
outsl
test
addb
xchg
ret
jmp
loop
out
test
loop
addr16
sbb
add
sub
pop
fwait
out
dec
lret
mov
mov
iret
and
ficomps
pop
push
test
add
jle
mov
dec
aaa
in
sub
int
mov
lods
rolb
fists
add
fs
outsb
push
sarl
popf
push
pop
hlt
scas
sti
mov
inc
inc
jmp
push
dec
shll
shl
jbe
rclb
dec
xor
fisttpll
enter
sub
push
mov
jbe
dec
sbbb
popf
lds
jge
xor
inc
daa
test
sub
mov
cmp
jb
push
sub
mov
adc
pop
jge
pop
shrb
insl
xchg
in
outsb
icebp
xchg
and
cmc
icebp
inc
pop
test
sti
cmp
pushf
jg
lods
mov
subb
jnp
into
cmc
lock
pusha
mov
cmp
insl
fs
stc
outsl
aam
and
pop
ret
pushf
je
out
test
testl
js
gs
dec
loope
and
sbb
enter
pop
jge
scas
rol
je
in
gs
xchg
loopne
push
test
loopne
adc
jb
push
push
mov
mov
sbb
incb
mov
inc
aaa
bound
mov
mov
outsb
outsb
fmuls
xchg
subl
lock
fdiv
pop
mov
lods
add
inc
inc
icebp
adcl
pop
inc
xchg
or
and
roll
sub
ja
jmp
out
or
xchg
cmpsb
outsl
insb
hlt
mov
repz
xchg
rolb
aad
inc
mov
and
lock
mov
mov
lock
outsb
cli
jns
out
loop
and
xor
pop
int
add
ds
jmp
mov
faddl
mov
addr16
adc
subl
inc
scas
sbbb
ficompl
cld
and
sahf
fnclex
mov
in
imul
pop
cmpsl
cmp
pop
out
outsb
adc
pop
adc
pop
sub
mov
jno
stos
xor
dec
leave
sub
icebp
iret
sub
fnsave
lcall
push
mov
mov
jae
lds
pop
outsl
or
pushf
es
loopne
mov
xchg
or
out
and
test
mov
add
jno
adc
and
sbb
fistl
adc
or
test
cs
fbstp
loope
push
sti
stc
push
mov
jle
fs
popa
insb
dec
orb
add
loop
push
call
push
jmp
push
mov
jl
jns
nop
leave
jne
loop
leave
mov
add
cwtl
sbb
xchg
xlat
dec
jns
loop
dec
sub
aaa
outsb
pop
or
push
push
pop
sub
pop
bound
dec
aam
jo
sbb
icebp
mov
pop
or
cltd
inc
arpl
test
cmpb
mov
pop
jo
xchg
mov
scas
mov
sub
or
and
ret
in
pop
mov
push
aam
inc
mov
dec
jecxz
sahf
push
cmp
and
pop
xor
fstpl
sub
jle
loop
fsubl
mov
push
xchg
cmpsb
pop
cmp
mov
pop
pop
and
scas
sub
push
outsb
mov
fwait
lea
inc
outsl
pop
test
imul
mov
outsb
push
and
xlat
fsubl
sbb
out
pop
lcall
sbb
mov
push
jne
adcl
jp
imul
das
decb
ret
lret
popf
paddb
loop
lret
push
mov
jnp
adc
addr16
and
push
jp
xchg
push
in
insb
cwtl
movsb
add
mov
jnp
xchg
test
lods
xchg
in
shlb
stos
in
jmp
xchg
mov
push
adc
mov
pop
jecxz
jl
pop
mov
ja
or
clc
imul
push
ret
mov
and
ljmp
xor
pop
or
add
inc
jp
mov
mov
jle
fidivs
dec
xchg
dec
dec
sub
fidivrl
arpl
fisttpll
pushf
xor
stc
inc
push
dec
daa
mov
add
add
loop
xor
shll
repz
mov
ret
mov
outsl
adc
lods
pop
mov
enter
popf
mov
dec
ret
hlt
bound
mov
imul
cwtl
nop
imul
ss
push
fildl
rcrl
dec
shrl
cmpsl
aam
test
xchg
mov
call
xor
cmp
inc
das
mov
sarl
inc
adc
cmpsb
rorl
stos
push
loopne
out
adc
cld
fnstsw
jno
divl
xor
jmp
and
or
mov
xchg
cli
test
dec
das
aas
je
cmp
repnz
cmp
push
movsl
sbb
cmp
pusha
add
mov
pushl
inc
mov
jl
divb
dec
cltd
push
pop
jne
cmpsl
mov
push
push
add
xchg
fwait
xchg
xor
scas
stc
mov
test
shl
fs
js
scas
pop
ret
jmp
pop
mov
inc
dec
jne
adc
jne
xlat
imul
cmc
mov
dec
stc
xchg
shll
cmc
mull
movb
sahf
jp
sub
sbb
sar
popf
fcoms
repnz
inc
xor
and
or
dec
cmp
cmp
and
dec
fisubrl
nop
mov
inc
jle
es
pop
sub
loop
pop
inc
add
xchg
and
adc
add
into
enter
mov
cwtl
aam
imul
scas
ja
mov
push
lahf
pop
sub
incl
mov
inc
jb
std
adc
pop
mov
add
gs
das
and
mov
xchg
mov
jb
pop
pop
xor
mov
pop
mov
jmp
test
iret
movsl
ds
roll
jns
xchg
pop
loopne
clc
mov
test
scas
jp
xor
dec
sub
mov
mov
pop
bnd
repz
mov
out
gs
insb
add
pop
adc
mov
sbb
lsl
mov
in
pop
pop
mov
mov
mov
dec
pusha
cmp
mov
rol
lcall
mov
clc
sahf
enter
cmpsl
sbb
cmp
fidivl
mov
scas
cmp
mov
and
pop
jbe
addl
sbb
pusha
imul
por
in
loop
sti
mov
sub
pop
xor
movsl
leave
dec
xchg
jg
inc
lcall
push
add
cmp
sbb
pop
xchg
into
test
ss
cld
cmp
or
popa
out
xor
jecxz
xchg
mov
push
loope
pop
mov
xchg
mov
dec
enter
ffree
push
xchg
jnp
aad
int
jl
push
push
and
mov
dec
sti
sahf
cmp
repz
inc
mov
add
lods
pop
inc
cmpsb
cmp
mov
push
scas
movsb
sbb
insl
loop
mov
cwtl
pop
cld
jl
bound
test
imul
adc
mov
aam
movsl
mov
shrl
pop
cmp
orl
repnz
adc
push
pop
xor
mov
cmp
aad
pop
xchg
push
nop
mov
and
int3
add
fidivs
aaa
sbb
mov
xchg
pop
call
repz
imul
push
repz
mov
in
adc
cltd
cmp
rcrb
hlt
dec
movsb
aas
push
mov
pop
clc
iret
or
js
xchg
or
add
lcall
js
push
xor
push
leave
das
or
lods
lock
inc
xchg
nop
xor
and
ljmp
dec
outsb
xchg
lods
sbb
sbb
jmp
pop
adc
adc
jno
repz
es
jbe
adc
push
fdivl
sub
pop
push
in
sbb
xchg
lcall
bound
adc
pop
jmp
sbb
push
pop
hlt
or
out
in
clc
jae
xor
test
jecxz
push
or
pop
mov
ljmp
out
stc
int3
xor
inc
jbe
mov
jno
push
ja
pushf
xor
fimull
xchg
jmp
iret
jl
or
xchg
int3
scas
xchg
mov
ret
cwtl
repz
repz
loopne
mov
sub
inc
sbb
das
push
test
scas
repnz
mov
pop
jb
adc
fnsave
jo
xorb
xchg
jnp
ds
push
xor
movsl
jb
mov
icebp
and
xchg
cmc
outsb
and
cmp
scas
popa
mov
nop
pop
mov
dec
sti
cmp
pushf
mov
jle
fwait
mov
mov
push
cmp
in
xchg
data16
add
jne
ss
outsb
ss
leave
pop
je
pop
or
je
xlat
push
cmp
and
pop
in
movsb
repnz
xor
rcr
inc
test
xchg
pop
cltd
jns
cli
lods
mov
and
xor
fldcw
push
mov
movsl
loop
push
mov
into
or
stos
jmp
and
push
lds
or
in
jae
dec
xchg
mov
pusha
mov
push
push
xor
or
stos
mov
add
fadd
xchg
and
cli
fbld
or
enter
xor
xlat
mov
push
stos
fwait
xor
sbb
pushf
arpl
mov
xor
pop
push
je
dec
das
xchg
sub
pop
negb
adc
mov
add
sub
jb
push
lds
mov
or
xchg
dec
shrl
jno
inc
and
sbbl
xor
popa
mov
xlat
mov
jle
testl
pop
sub
fcomp
push
adc
hlt
sbb
data16
test
mov
push
push
add
or
pusha
or
insl
stc
cwtl
adc
add
adc
fisttpll
lret
inc
cmc
pop
cmp
fmulp
adc
push
inc
aas
cmp
fs
xor
jbe
xor
test
sti
mov
jp
fcoms
push
test
scas
stc
jns
rcll
sbb
pop
sti
js
inc
pop
mov
pop
adc
mov
adc
xchg
rorl
mov
scas
dec
nop
mov
fildll
jge
xor
xor
out
dec
jo
lock
icebp
iret
mov
jno
dec
mov
sub
dec
sbb
cwtl
fldcw
add
dec
adc
sbb
js
insb
pop
pop
es
test
jae
lcall
sbb
lret
cld
aas
mov
es
mov
push
pop
popa
fldt
fadds
movsb
inc
pop
insl
pop
sub
fmul
sbb
or
les
cs
clc
push
divl
insb
in
jg
mov
sub
add
scas
fwait
test
mov
je
push
push
imul
add
mov
mov
div
outsl
mov
mov
dec
sbb
cs
aad
sbb
adc
test
pop
jno
xchg
stc
js
push
push
in
les
pop
movsb
push
lock
int3
rolb
cltd
sbb
aas
xor
push
adc
imull
mov
add
test
arpl
jae
jl
xchg
stos
xor
loop
repz
and
sbb
lock
add
push
repz
mov
orb
mov
inc
cld
jmp
and
sti
inc
jge
addr16
mov
fisttpll
jo
sub
add
fdivr
push
cmp
fdivl
in
or
jmp
jl
and
addr16
cmp
mov
mov
scas
outsb
outsl
sbb
enter
mov
jnp
add
adc
or
leave
xchg
adc
mov
adc
add
data16
pop
fimull
pop
outsl
cmp
sti
insb
mov
dec
and
and
add
cs
mov
in
push
add
mov
cli
ja
jg
sub
mov
clc
test
adc
push
lahf
ja
test
add
mov
cmpsb
cmp
cld
push
push
nop
stos
jl
lock
loop
outsl
pop
test
aad
test
dec
pusha
xchg
inc
nop
push
ficoml
out
imul
xor
ja
hlt
push
cmpl
ret
movsl
sbb
stos
popf
mov
hlt
mov
mov
lcall
cmp
js
or
lock
aam
lret
movsl
push
mov
in
sub
cli
cmp
add
pop
and
add
popl
fnstenv
notl
mov
push
sti
das
cli
repnz
mov
adc
dec
nop
jle
cmp
fstpl
insb
push
imul
stc
dec
incb
ja
mov
mov
fiadds
jb
ljmp
and
mov
insl
adc
cmp
sbb
jne
scas
loop
out
sub
jmp
scas
cmp
scas
gs
icebp
push
xchg
outsb
test
pop
fnstsw
and
pushl
adc
cmpsl
les
fisubrl
lret
push
loope
test
lea
mov
push
or
sbb
cmpsb
mov
pop
lcall
and
je
pop
push
push
insl
push
sbb
jo
jmp
inc
icebp
lea
mov
push
and
or
mov
gs
daa
icebp
cmpsl
sbb
scas
scas
popf
xchg
outsb
in
stos
mov
adc
sbb
dec
push
jbe
test
or
sbb
push
lret
mov
mov
jge
pushl
fsts
scas
sbb
ja
pop
scas
pop
test
and
aas
lret
adc
mov
mov
cltd
repz
arpl
cmp
test
pop
pushf
sbb
add
mov
sub
sub
fcoml
inc
ja
cmp
cmp
shr
imul
sbb
inc
push
out
scas
pxor
test
cli
push
dec
imul
push
data16
popa
int3
pop
xchg
fld
int3
and
cmp
lods
mov
iret
repz
jne
aam
mov
sbb
push
push
pop
js
jmp
sbb
jecxz
das
mov
or
mov
fdivrs
mov
pop
sbb
push
mov
add
insl
lcall
pop
mov
scas
xor
pop
insl
xor
jg
pop
mov
ret
adc
jne
ljmp
inc
sahf
stos
mov
push
jle
jmp
fidivl
xchg
jne
mov
in
jno
push
rcrl
mov
test
inc
xor
sbb
dec
adc
in
push
aad
mov
shrl
mov
rcll
sbb
and
movsb
jg
gs
pop
cmp
mov
mov
add
mov
addr16
mov
add
mov
scas
out
xor
loope
imul
pop
es
jle
inc
jbe
lcall
pop
fbld
mov
push
xchg
out
adc
fidivrs
jbe
cmp
in
pop
rorb
dec
add
mov
mov
jnp
scas
jae
popf
mov
lret
fildl
inc
jb
insb
in
int
es
xor
inc
sbb
cld
or
movsl
repz
pushf
popf
mov
dec
jne
lahf
mov
sahf
cmpsl
and
stos
jne
mov
sbb
loopne
pop
add
inc
insl
inc
stos
imul
out
jmp
ret
cmovno
xlat
popf
adc
sub
pop
and
clc
dec
ds
aad
lret
das
aad
stos
push
lock
ret
sub
nop
inc
cltd
lods
hlt
cwtl
xchg
mov
cltd
mov
f2xm1
lods
shll
adc
or
jb
ja
fstpt
je
mov
cltd
int3
xor
pop
aad
mov
sub
mov
cli
icebp
add
or
in
xchg
sub
sbb
jge
mov
pop
adc
mov
addb
sub
das
out
sub
sahf
testl
out
xor
call
mov
dec
aaa
or
sbb
fld1
add
xchg
adcb
mov
pop
inc
fnstenv
ljmp
cmp
roll
lret
dec
push
lock
or
jo
rclb
xchg
and
int
push
inc
add
ficoms
outsw
scas
lret
push
xchg
sbb
fcoms
mov
xor
out
jmp
daa
dec
das
cmp
sbb
and
mov
aam
jl
xchg
fsubp
push
lock
dec
adc
add
std
push
jmp
lret
clc
lods
adc
cmp
ja
fsub
leave
mov
mov
add
mov
xor
and
xchg
pop
mov
jge
push
cmpsl
push
iret
and
sub
mov
lret
mov
push
fdivrs
ficoml
add
test
hlt
ret
jb
pusha
mov
adc
mov
sub
dec
sti
sbb
ss
dec
or
or
test
adc
push
nop
mov
or
xor
xlat
cld
out
test
xor
xor
mov
dec
daa
ficomps
loopne
pop
lock
cli
shl
cld
test
stc
repz
adc
inc
fadd
pop
sub
pop
push
mov
test
xchg
xchg
or
imulb
or
rolb
pop
imulb
sbb
xchg
ljmp
and
js
sub
dec
jne
xor
sar
xchg
ds
jo
ss
and
rcll
mov
cmc
cmp
shll
outsl
sti
inc
sub
cmp
jmp
xlat
mov
mov
aam
pop
jmp
pop
push
cmp
rclb
xchg
jae
js
pop
cmc
sbb
test
and
sti
dec
cmpsb
pop
xchg
out
fsubrp
lds
sbb
cmp
ljmp
mov
add
loop
mov
popa
mov
mov
push
cmp
add
sbb
cltd
sar
lahf
dec
adc
daa
dec
or
pop
popf
push
sbb
dec
hlt
fimull
fistpll
and
scas
aas
scas
bound
shl
js
pop
outsl
out
out
pop
push
push
adc
imul
sbbl
ja
mov
lds
xchg
xor
cmpb
lret
lret
movl
cld
negl
push
mov
inc
xor
push
sahf
clc
dec
inc
jmp
rorl
xor
cld
cmp
push
lahf
pop
mov
inc
cmpsl
fildll
lods
mov
fidivrl
sub
imul
push
add
xor
aad
adc
fstpt
jnp
lods
mov
cmp
mov
mov
fwait
add
sub
xchg
mov
dec
or
pop
dec
cmpsl
xor
lds
jg
xorl
xor
hlt
orl
mov
in
outsb
fwait
pop
jns
inc
mov
imul
pop
push
cli
mov
jbe
push
push
mov
mov
cmp
fiaddl
jae
add
ljmp
sti
mov
loop
cwtl
pop
inc
out
xchg
arpl
in
pop
std
lods
nop
cmp
push
pushf
in
mov
hlt
repnz
xor
xor
decb
jge
pop
cmpb
mov
jnp
sbb
pop
outsl
cld
les
pop
adc
outsl
mov
les
add
ret
jo
js
faddl
pop
and
and
adc
sub
test
xor
sbb
inc
jmp
push
inc
dec
idivl
std
les
xlat
inc
push
dec
and
sarl
aam
xor
sub
xchg
sbb
pop
jnp
ficoml
lret
or
movsb
or
lods
jle
fimuls
add
cmpsb
clc
cld
cwtl
scas
or
and
add
sub
push
int
int3
nop
push
iret
data16
outsb
gs
lds
push
js
aad
push
pop
ret
dec
mov
push
push
call
xchg
insl
xor
andb
mov
sub
pop
movsb
sahf
jmp
fdivp
cmp
pop
insb
dec
nop
sub
aam
xor
in
xchg
sub
add
in
sub
cmp
aas
test
add
into
pop
sub
call
pop
popf
xchg
push
cld
pop
xchg
adc
dec
mov
mov
mov
xor
mov
stos
loope
stos
test
dec
ret
shrl
adcb
dec
push
jb
aam
add
scas
mov
mov
mov
pop
imul
or
pushf
pop
mov
lds
test
and
mov
fisttpl
repnz
repz
mov
mov
jl
sbb
cwtl
cmp
mov
mov
jge
mov
pop
push
lock
cli
push
fdivl
ds
dec
or
add
push
fdivrl
mov
and
fcmovnu
nop
mov
fisttpl
and
and
xchg
jne
or
push
pop
lock
sub
inc
adc
xchg
mov
daa
das
pop
inc
insb
stos
cmc
sahf
lea
cmp
rcl
stos
aaa
loope
jg
mov
mov
fstl
or
jecxz
push
nop
sbb
repnz
inc
xor
repnz
lcall
lds
hlt
jne
in
and
int3
jmp
fsubl
adc
push
dec
xchg
les
mov
inc
xor
or
loopne
mov
fstpl
ljmp
adc
ja
jl
cmp
data16
xor
aad
stc
leave
out
add
jnp
lea
pop
jecxz
xchg
into
or
xchg
xchg
jno
in
pop
call
pusha
mov
mov
fwait
stc
movsl
shlb
sub
stc
je
insl
mov
add
repz
dec
mov
adcl
popf
sub
out
and
ror
aaa
insb
jle
pop
push
and
dec
mov
or
mov
push
mov
movsl
ret
push
push
outsb
or
addr16
aam
xchg
xor
pop
mov
or
out
xchg
or
jg
mov
jb
shrb
leave
cmp
insb
mov
cwtl
lahf
pop
sbb
ja
adc
mov
loope
xchg
test
loop
das
paddw
inc
pop
out
push
xchg
pop
fidivrs
jne
repz
cmpsl
ja
push
xorb
mov
cs
inc
jne
das
stos
lahf
cmp
adc
sub
xchg
ss
push
mov
or
xchg
out
and
in
repz
ss
aas
fwait
lds
inc
in
jb
xor
arpl
jno
divb
xor
dec
mov
pop
sub
jno
sub
movsb
or
cmp
fimull
dec
sub
data16
sub
es
js
dec
adc
je
mov
int
push
test
out
pop
out
and
lcall
push
jle
repnz
push
imul
cltd
push
xor
inc
lods
je
xor
lcall
scas
inc
in
inc
clc
mov
mulb
dec
dec
rcrl
out
daa
pop
sbb
scas
in
cwtl
fldt
cmp
addr16
adc
mov
nop
mov
push
cmpsl
in
adc
imul
xchg
push
aam
xchg
xchg
sti
mov
dec
das
loope
push
xor
dec
daa
push
popa
xchg
loopne
add
jnp
lods
xor
adc
mov
xor
mov
in
mov
cmp
add
jp
data16
into
push
repnz
out
pusha
cmpsl
cmc
roll
mov
ret
fldenv
rclb
call
sub
jns
xchg
pop
popa
jle
lea
cmpsl
dec
cmp
arpl
inc
leave
test
stos
aam
leave
jno
jle
clc
ret
imulb
adc
jne
hlt
and
adc
cmp
mov
and
sbb
mov
or
and
add
mov
inc
nop
and
aaa
popf
pop
push
mov
pop
pop
and
sar
aad
dec
fbstp
push
cmp
out
xor
push
repnz
ljmp
fs
lret
mov
jle
int
ja
jae
into
adc
push
pop
test
adc
aas
pop
inc
call
mov
jns
dec
call
lea
jg
jno
push
jo
pop
lea
lret
in
or
mov
cltd
inc
xor
jbe
adc
or
das
lret
or
sub
jae
lahf
mov
and
jns
in
subb
scas
sbb
jmp
mov
lahf
rclb
xor
jb
dec
mov
cmp
aam
imul
mov
xchg
mov
cmpsb
mov
mov
out
test
mulb
cli
dec
dec
sarb
ret
clc
addr16
iret
dec
rcrb
xorb
mov
inc
out
repnz
loopne
stos
push
insb
repz
test
mov
addr16
adc
lock
lock
ss
jg
dec
outsb
mov
push
in
xor
xor
jmp
into
in
ljmp
mov
in
pusha
sahf
xchg
iret
jle
ljmp
iret
pop
mov
cmc
repnz
jp
xchg
add
pop
adc
sub
sti
mov
cmp
adc
mov
call
add
inc
fwait
mov
push
or
cli
xchg
addl
jns
pushf
mov
imul
mov
push
xchg
aas
mov
dec
push
imul
fnstenv
loope
mov
inc
nop
rclb
pop
pushw
arpl
dec
mov
sub
sub
ljmp
test
inc
aam
xor
inc
cmp
jl
daa
into
repz
fisubs
shrl
adc
sbb
and
xor
jecxz
dec
addl
cmp
insl
insl
jae
js
mov
xor
mov
fstpt
stos
insl
fwait
push
xor
ret
int3
cltd
add
gs
lcall
adc
pop
rcrb
fisubrs
adc
sbb
jecxz
in
add
nop
sub
pop
ja
inc
adc
lods
jae
cli
mov
insl
push
jne
es
and
push
test
int3
mov
aam
out
and
and
push
repnz
sahf
lods
sub
mov
test
hlt
add
jb
cmpsl
je
xor
push
je
movsb
pop
inc
cmp
lods
icebp
daa
lcall
jl
imul
popa
in
pop
xor
pop
mov
bound
cli
pmullw
mov
lea
or
aam
hlt
daa
cmpsl
jg
or
call
fbstp
mov
inc
sbb
ja
dec
mov
out
ret
mov
cmpsl
pop
das
add
push
mov
add
rcrb
into
out
push
ret
mov
in
xchg
pop
xor
in
iret
xchg
sub
add
xchg
arpl
dec
lcall
or
jecxz
cmp
inc
push
push
pusha
aaa
cli
aad
je
jg
or
xor
push
pop
mov
mov
mulps
mov
adc
cmp
in
scas
inc
xchg
lret
and
xor
mov
pop
push
jbe
les
mov
mov
dec
mov
aad
sbb
fwait
mov
pop
jae
mov
mov
push
adc
lahf
push
out
int
xchg
pop
xchg
dec
jmp
ret
lahf
pusha
dec
cltd
sete
xchg
out
movsb
out
mov
ret
xchg
xor
inc
lea
adc
test
ss
stc
push
xchg
jno
inc
out
repz
pop
sbb
std
mov
icebp
test
sub
sahf
por
mov
mov
push
sbb
inc
push
cmpsl
in
jge
sbb
add
ficompl
gs
fwait
dec
js
js
fsubl
int
out
iret
roll
push
cs
aaa
xchg
fwait
div
sbb
pusha
mov
or
dec
xchg
fdivrp
or
add
xor
lea
pop
push
fidivrs
cmpsb
or
fsubrp
push
push
push
dec
xchg
clc
mov
movsw
cmp
outsb
fdivr
lcall
cmpsl
ret
pop
sub
dec
stos
fdivrl
mov
mov
cwtl
test
jmp
gs
sbb
push
mov
xlat
or
inc
jb
in
cld
invd
pop
insl
inc
aaa
xchg
aad
fidivrl
stos
mov
cltd
mov
xchg
popf
xor
rcll
out
sub
push
xor
scas
sarl
cli
fidivl
xchg
lret
jecxz
punpckhbw
xchg
push
jb
stc
mov
pop
push
and
out
jnp
icebp
lahf
stos
fldt
cmpsb
or
movsb
sub
sbb
or
jb
xor
jl
sub
hlt
mov
pusha
pusha
jge
fcomps
not
jmp
jge
or
xor
xor
dec
pop
add
addr16
xor
cli
in
mov
fcoml
add
adc
mov
xchg
std
sbb
dec
inc
out
or
and
iret
sbb
adc
mov
cmp
jmp
movsb
lock
cwtl
xchg
hlt
out
js
outsb
dec
fldenv
xchg
and
xor
das
pop
mov
mov
xchg
enter
mov
mov
fsubrl
in
pop
jno
jp
add
in
push
add
cmp
sbb
loope
test
fidivl
mov
fsts
insl
dec
rcll
outsb
out
mov
es
mov
imul
lock
xchg
add
or
pusha
mov
jmp
mov
movsl
mov
enter
push
and
or
std
mov
cwtl
xor
push
arpl
add
insl
xchg
add
sahf
pop
mov
inc
imul
lds
outsl
sbb
shll
popf
add
cld
inc
shl
je
fcom
es
pop
sahf
lock
push
icebp
push
dec
cmp
push
xchg
insl
mov
jl
lret
add
in
int3
push
xchg
aas
std
dec
outsb
repnz
add
or
pop
xor
insl
sub
leave
cwtl
pop
fisubl
imul
pushf
mov
adcl
jmp
mov
pusha
inc
mov
sub
insb
and
sti
repnz
xor
insb
movsl
clc
jl
ds
pop
push
aam
pop
push
filds
sbb
mov
adc
arpl
or
add
scas
inc
inc
xlat
les
lods
xlat
sti
jb
ljmp
sub
adcl
fwait
imul
movsb
stc
inc
mov
cmp
loop
or
mov
push
add
aad
jmp
push
mov
ret
mov
in
mov
mov
jo
scas
sbb
lahf
jge
pop
mov
inc
clc
sarb
adc
xchg
out
lret
repz
mov
mov
sub
dec
xchg
sbb
enter
loopne
ljmp
ret
test
adc
aam
xor
mov
cld
in
xchg
jge
leave
hlt
andl
pop
add
pop
imul
dec
test
shl
mov
hlt
cmp
dec
mov
push
xor
lock
mov
lcall
iret
sbbb
cmp
ret
fsubrp
bound
cltd
jae
and
cwtl
push
and
scas
shrl
shll
jl
xorl
push
cmp
mov
insb
cmpsb
inc
mov
push
pushf
in
jecxz
push
imul
mov
push
cmp
push
sub
pop
sbb
xchg
and
dec
cld
xlat
xchg
pop
enter
repnz
movsb
shrb
mov
addr16
mov
xchg
sub
dec
cmp
or
stos
mov
sbb
addb
movsb
or
inc
and
mov
gs
pop
mov
fsubs
std
fimull
mov
idivb
adc
sub
jne
adc
test
cmp
xor
ja
mov
mov
addr16
push
mov
and
dec
ja
jbe
xchg
repz
aam
sahf
jl
jge
pushf
enter
pop
leave
mov
ret
cmpsb
push
and
push
cmp
out
int3
int3
push
lret
and
jmp
movsb
add
out
dec
xchg
xor
mov
xor
jp
in
mov
sub
adc
mov
repnz
outsb
out
pop
xchg
push
hlt
sbb
push
js
insl
divl
xor
ja
stc
xchg
dec
jo
mov
popa
jbe
or
inc
cltd
pop
icebp
insb
dec
lahf
aam
jno
movsl
aaa
ret
xor
fldt
pushf
and
or
scas
mov
xor
sub
cmpsb
mov
jns
dec
push
and
xor
fcoms
jne
jge
iret
cmp
jae
int3
adc
lock
pop
jecxz
in
lret
cmp
and
pusha
arpl
mov
sbb
dec
data16
pop
sub
push
mov
or
mov
fdivrp
adc
popa
bound
jg
dec
sysret
push
cwtl
scas
push
and
pop
cmc
push
xchg
sbb
in
iret
xchg
ficompl
test
pop
dec
mov
cmp
out
jo
je
inc
xorl
test
pop
lock
sbb
into
movsb
fistl
lret
dec
cmp
adc
insb
addb
shrb
arpl
jb
lahf
inc
xchg
sbb
xchg
shl
mov
sbb
notb
sub
mov
std
xor
test
push
sbbl
cmp
aad
mov
cli
pop
push
addr16
shll
iret
jno
je
pop
ljmp
jno
ret
movsb
mov
testl
out
add
mov
addr16
and
mov
sub
add
out
adc
in
sti
mov
cltd
xor
iret
test
jl
stc
mov
cmpsl
fnstsw
sbb
subl
imul
and
mov
mov
mov
push
gs
rorl
cmpsl
sub
dec
aas
mov
jo
bound
loope
mov
mov
movsl
pop
pop
fsqrt
fisttps
mov
sarl
leave
inc
xchg
adc
icebp
das
outsl
add
mov
xor
outsl
pop
xchg
add
fcompl
push
and
out
xchg
mov
pop
mov
das
xchg
mov
xchg
xchg
nop
cli
test
lcall
popf
push
mov
or
add
dec
pop
in
add
dec
inc
sar
dec
cltd
push
mov
cltd
out
aaa
jecxz,pn
out
xchg
shrl
insb
jno
and
mov
sub
xchg
imul
insb
xchg
mov
test
and
mov
cmp
outsb
fnstenv
sub
jne
aaa
jmp
sub
push
loop
movl
and
loope
rep
sbb
add
push
popa
es
stos
fsub
pop
gs
push
pop
and
movswl
and
enter
int3
rolb
mov
mov
add
loop
lock
xor
push
adc
sub
pop
or
jb
inc
pop
hlt
sbb
or
jg
outsl
or
loope
aas
ljmp
add
icebp
jno
dec
and
sti
bound
push
lock
mov
adc
ret
xchg
in
sbbb
test
mov
cwtl
jnp
cmp
pop
dec
orl
test
sub
divl
pop
fistpl
loope
outsl
jp
enter
fdivl
shll
repz
jmp
and
lock
mov
jp
stos
xchg
mov
push
jb
cs
mov
sbb
lret
test
push
push
icebp
inc
mov
add
inc
push
add
mov
push
inc
xchg
inc
inc
aas
and
outsb
loop
es
cltd
out
push
sbb
sub
push
xchg
and
mov
orl
repnz
pop
mov
hlt
xor
call
xchg
lds
icebp
mov
mov
aas
jge
loopne
pop
insb
jg
sti
mov
pop
es
inc
adc
rcr
outsb
mov
ljmp
divl
adc
lea
fmuls
test
adc
cmp
inc
pop
pop
dec
dec
sti
pop
pop
pop
icebp
pop
sub
pop
jmp
bound
xchg
mov
cmp
mov
ret
push
dec
jnp
out
push
inc
ret
inc
int3
fs
test
je
rcl
fmulp
icebp
jmp
outsl
into
and
mov
and
cltd
pop
inc
or
xor
mov
or
test
push
and
cmp
or
aas
pop
movsl
dec
jl
fnsave
cltd
jb
inc
inc
test
xor
idivl
sbb
jmp
jle
aaa
test
jno
imul
adc
adc
push
inc
bound
je
or
lret
arpl
ds
add
mov
xor
shl
mov
test
mov
jns
es
scas
sbb
loopne
lahf
rol
loope
cmpsb
popa
mov
or
in
mov
or
adc
jbe
cmp
adc
inc
mov
dec
cmp
popf
jl
leave
add
sub
push
add
lods
jge
mov
js
inc
inc
inc
and
pusha
ret
movsl
repz
lds
jle
test
xor
jbe
rep
pusha
cmp
movb
data16
jle
jecxz
aas
inc
jns
leave
adc
pop
ja
mov
jae
add
les
mov
sbb
xor
add
sti
xchg
fsts
xchg
sti
mov
sub
adcl
stc
stos
icebp
mov
xchg
sbb
xchg
add
hlt
cs
stos
add
inc
sbb
imul
test
pop
pop
shr
pushw
cmp
dec
sub
sub
add
add
stc
mov
ja
dec
dec
popl
inc
pop
push
pop
add
push
shr
push
cmc
mov
lock
ret
pop
call
pop
and
fdivrl
push
or
xchg
push
and
jns
lcall
aam
mov
inc
data16
das
add
xor
orb
sbb
testb
push
out
adc
lea
inc
mov
pop
jp
shll
jae
mov
call
repz
push
xor
insb
lret
out
xor
lds
push
clc
lea
negl
pusha
xchg
lcall
xchg
mov
pop
fists
xor
and
movsl
dec
out
xor
ret
mov
insl
or
push
dec
hlt
push
js
fldenv
jne
shrb
scas
out
rorb
add
out
rcr
test
jl
or
arpl
test
stc
mov
fcmove
mov
dec
mov
xchg
push
or
leave
mov
mov
xchg
in
call
or
std
dec
dec
test
add
aam
outsb
gs
xor
push
shlb
outsb
mov
mov
mov
jl
mov
pop
xchg
add
call
jle
pop
sbb
xchg
fcoml
and
inc
adc
add
xchg
mov
mov
add
aad
cs
mov
sti
jae
xchg
ljmp
lea
iret
mov
shlb
test
out
movsb
inc
lea
lock
negl
pop
jp
adc
lret
sbb
push
add
cmp
sub
sub
pop
push
std
xchg
aam
jg
mov
lret
mov
andb
rol
dec
inc
idivl
xchg
cltd
test
ja
pusha
jp
movsl
mov
adc
fcomps
dec
adc
movsb
popa
pop
push
imul
out
sbb
rorb
shl
mov
sub
dec
xor
mov
and
adc
sarb
mov
gs
cmp
rolb
mov
aas
adc
jo
pusha
lea
pop
test
lods
fdivrs
inc
adc
ljmp
fwait
ret
test
mov
gs
fwait
sub
inc
mov
push
and
test
insl
pushf
sbb
xchg
jne
jo
outsb
cwtl
and
int3
inc
ret
mov
mov
loope
jbe
cmpsl
add
sub
popl
lret
test
xor
call
int
cli
push
mov
insl
mov
cmc
cmc
lcall
mov
pop
mov
call
js
int3
mov
push
mov
cli
sub
cltd
push
fmull
sub
enter
int3
std
xor
cmpsl
adc
jecxz
xchg
xor
out
sbb
gs
mov
or
pop
and
and
stos
xchg
jl
pop
pushf
shl
or
shlb
out
cs
stos
jnp
jo
in
sub
push
lock
add
add
push
daa
imul
and
add
es
jo
dec
mull
insb
je
pop
pop
loope
mov
xor
lahf
jnp
and
lods
mov
adc
inc
jbe
mov
das
mov
rorb
sarl
mov
adc
fdivrs
insl
push
xchg
test
jp
or
test
adc
pop
or
jg
or
jnp
xchg
lcall
mov
bound
loopne
pusha
pushf
sub
pop
out
mov
repz
inc
xor
pop
sub
js
pop
loop
dec
or
jmp
inc
aad
add
arpl
aam
xor
sbb
mov
mov
mov
outsb
imul
push
cs
cmpsb
xchg
mov
icebp
pop
cwtl
dec
stos
push
jno
data16
sbb
in
leave
rcl
or
ret
xor
repnz
roll
sahf
ret
adc
fwait
mov
mov
sub
mov
pushf
insb
test
xchg
sbbb
xchg
aad
cmpsl
add
gs
pop
jnp
xor
rolb
dec
jecxz
pop
xor
and
mov
cs
ja
rcrb
xlat
cmpsb
inc
fildll
adc
jno
xor
pop
adc
cmpsb
add
roll
add
dec
cmpsl
and
les
and
xchg
pop
bound
clc
scas
cmp
pop
movsb
mov
gs
andb
test
stos
in
lcall
sub
sti
lock
push
pop
mov
mov
lds
scas
stc
push
rorb
bound
and
xor
fisubl
call
sub
aad
leave
outsb
loop
fidivs
in
je
xchg
xor
imul
mov
out
stos
sbb
and
xor
xchg
fadd
adc
jecxz
fsubrl
pop
out
in
popa
cmpsb
mov
lret
mov
cld
call
sahf
addr16
dec
xchg
adc
sub
inc
stos
sti
lcall
jns
push
pop
aam
dec
outsb
or
test
cmp
aaa
dec
lcall
arpl
cmpb
shl
outsl
js
xchg
insl
xchg
enter
dec
push
lea
mov
add
jns
outsl
lcall
jl
adc
or
mov
mov
jmp
daa
cltd
loop
jg
cmp
mov
pop
xchg
inc
sub
cmpsb
push
std
clc
dec
out
jp,pn
cmpsb
ja
loop
das
imul
inc
stos
cmp
mov
add
fs
jl
inc
out
add
jbe
dec
pushf
xlat
push
leave
push
inc
out
jp
arpl
push
xchg
adc
pop
dec
int3
int
pop
aam
pop
jno
xchg
jmp
inc
js
cmpsl
sbb
mov
loope
cmp
mov
xchg
mov
pop
dec
cmpsb
aas
cmp
push
jp
jmp
mov
pop
daa
fildl
mov
int
jo
cmp
jmp
ja
fwait
mov
and
pop
jno
xor
cmp
xor
add
mov
sbb
arpl
ret
and
adc
or
ret
mov
cmp
jmp
sbb
call
andb
bound
leave
mov
or
notb
add
and
pushf
pop
stos
into
adc
mov
int
mov
scas
mov
aaa
ret
sub
inc
push
mov
aaa
das
es
mov
insl
mov
mov
ret
mov
in
mov
jecxz
inc
test
rolb
imul
adc
aam
adc
dec
dec
mov
lds
fnstenv
leave
dec
vmovaps
mov
out
sti
fisttps
mov
scas
sarl
cltd
ds
mov
mov
jge
ret
inc
cmpsb
mov
push
pop
mov
jne
xor
cld
rorl
cltd
in
mov
ret
pushl
dec
push
outsl
dec
and
adc
ret
aad
sbb
into
and
xchg
adc
xchg
popa
jmp
adc
sbb
hlt
outsb
icebp
mov
cmp
rol
ds
aad
xor
jle
sti
sti
pop
add
mov
jl
clc
inc
push
push
cmp
dec
mov
pushf
mov
mov
pop
shr
xor
ret
es
cs
pop
or
das
xor
addr16
or
das
or
scas
sbb
jle
xchg
lret
lahf
mov
push
mov
push
cmp
shl
repz
adc
pusha
out
shrl
jne
aaa
inc
and
push
pop
in
sarb
js
push
mov
pop
popf
jae
repz
fstl
mov
inc
jb
dec
sbb
sbb
push
jl
gs
and
icebp
cs
sbb
mov
fistps
adc
push
sysret
inc
mov
outsb
cld
push
in
pop
xchg
ret
imul
cmpsl
scas
iret
sub
mov
repnz
push
sub
mov
das
push
sbb
push
xor
mov
enter
out
add
rcrl
mov
and
jb
scas
ljmp
sub
cmpsb
sub
and
xor
push
mov
xlat
push
mov
pop
stos
push
mov
dec
mov
jns
pop
sahf
sub
jmp
pop
xchg
roll
rorl
addl
insb
lds
mov
mov
arpl
ljmp
dec
push
sbb
mov
mov
jge
or
flds
and
push
mov
mov
out
adc
jmp
push
dec
arpl
jecxz
std
jno
mov
dec
and
mov
push
das
shl
pusha
jb
iret
bound
loop
repnz
mov
outsb
dec
mov
add
cltd
push
pop
cmp
loop
xchg
fwait
mov
fs
repnz
push
aam
add
push
clc
movsb
sub
sti
pop
ficoml
out
xor
xchg
inc
xchg
sbb
mov
xor
mov
mov
bound
add
push
test
mov
push
and
push
mov
xor
js
frstor
insb
mov
sbb
xor
add
notb
sbb
push
xor
dec
pop
mov
fwait
add
jl
inc
mov
pop
stos
repz
xchg
movsl
mov
shrb
scas
imul
xchg
daa
arpl
sbb
je
loope
inc
int3
pop
popl
dec
add
xor
xchg
xor
xchg
mov
pop
xchg
adc
into
lcall
imul
fsubr
shlb
das
adc
jge
fnstcw
add
xor
or
inc
aad
pushf
xor
pop
push
push
jb
scas
mov
xchg
push
add
xchg
sbb
sub
ret
push
jo
xor
mov
mov
mov
ficompl
incl
mov
sbb
adc
and
xor
push
cmp
push
fcmovb
dec
xor
mov
mov
std
push
js
xchg
daa
ss
add
jno
or
shrb
inc
dec
push
dec
push
xchg
add
andb
dec
jbe
daa
jmp
sti
mov
dec
jno
xchg
cmp
insl
sub
ljmp
out
xor
stos
inc
xchg
pop
stc
mov
dec
jae
push
inc
mov
mov
or
mov
test
mov
push
std
ss
lret
cmpl
clc
mov
std
push
pop
mov
xor
push
adc
nop
pop
push
and
or
push
into
icebp
in
dec
sbbl
sarb
sub
pop
test
add
xor
jmp
pop
lock
and
mov
call
ljmp
sti
and
les
ja
dec
push
outsw
arpl
orl
xor
inc
in
adc
aam
and
cs
nop
int
pushf
jp
or
jle
xchg
pushf
outsl
add
loopne
sub
push
rorb
push
jle
movsb
mov
pop
sbb
cmpsb
mov
fistpll
inc
xchg
leave
lcall
push
or
clc
out
mov
cmp
loop
mov
bound
mov
stos
rorb
imul
mov
stos
add
jl
mov
pop
cmp
cltd
in
jmp
adc
and
lea
cmp
xor
or
insl
int
pop
jecxz
ret
mov
sahf
lcall
mov
test
pop
lods
cmp
or
adc
in
scas
cmp
into
std
jmp
push
or
mov
cmp
adc
push
andb
addr16
ficoms
out
inc
imul
aas
iret
shl
xor
je
jb
cltd
jg
movb
insl
mov
outsb
loopne
out
or
or
mov
shll
int3
push
inc
pusha
jne
ret
icebp
xchg
add
pop
push
dec
add
nop
sbb
out
jb
mov
loope
adc
pop
aaa
rol
sub
imul
std
mov
inc
or
aad
enter
add
frstpm(287
xchg
or
cs
lret
mov
fsubrs
ljmp
jno
bound
or
jp
pop
dec
jle
dec
cmc
dec
and
clc
mov
push
push
test
mov
pop
jg
decb
jl
push
loope
adc
mov
pop
fiadds
pop
in
jmp
cmpsb
fcomps
inc
sti
outsl
lret
mov
mov
add
loopne
ja
and
pop
in
mov
call
idiv
inc
mov
iret
aas
cmp
mov
das
enter
push
jb
lock
mov
pop
and
push
andl
test
data16
lods
lret
lock
add
dec
loopne
pop
outsb
push
add
pushf
fsubl
and
mov
cs
ret
ja
sbb
fsubrs
dec
shrb
hlt
pop
adc
cli
jno
int
pop
les
xor
push
pop
mov
adc
ja
je
mov
leave
add
lods
aaa
aam
add
sub
xor
add
xor
loop
adc
das
cltd
add
mov
es
sbbb
jno
shll
dec
adc
and
out
xchg
dec
gs
mov
push
stos
jle
jmp
movsl
fistps
shrb
cmc
orb
xchg
lcall
fadd
pop
clc
loopne
cmp
lods
gs
out
aam
dec
jecxz
hlt
scas
xor
stos
cmp
addr16
cs
imul
int
cmp
xchg
mov
daa
xlat
arpl
pop
xor
inc
cmpsl
jle
adc
jb
insl
dec
in
in
pop
xchg
aas
in
daa
in
shlb
sub
xchg
xor
jno
jl
mov
mov
jmp
ret
lea
fwait
mov
adc
mov
test
cmp
jbe
cmc
cmc
repnz
mov
pop
xchg
scas
scas
jne
jecxz
sub
push
ret
outsl
push
or
popf
pop
js
loope
jns
jge
lcall
mov
inc
repz
ffreep
mov
push
xor
orl
aaa
inc
mov
inc
ret
stos
cmp
jecxz
sbb
push
insb
dec
into
mov
sbb
jl
outsl
in
xchg
fcoms
les
xchg
sub
pushl
mov
xor
shll
ss
daa
or
add
imul
stos
inc
and
add
adcl
shll
push
or
jbe
insb
sub
outsb
fadd
mov
cmpsb
out
ljmp
movsl
pop
push
leave
push
push
scas
ds
cmc
push
shll
push
leave
dec
mov
inc
fbld
iret
sahf
fimull
test
jo
inc
pop
fdivs
or
push
pop
imul
pushf
lahf
jae
mov
ret
xchg
jne
dec
xchg
out
aad
sub
das
mov
movsl
sbb
and
fistl
ret
into
iret
ja
mov
and
mov
xor
std
or
lahf
push
adc
div
mov
or
ficompl
jmp
mov
mov
fcompl
stos
addr16
nop
sub
sbb
xor
iret
sarl
mov
dec
dec
shll
jmp
pop
test
cld
cmp
out
std
jg
mov
jg
or
pop
mov
fstpt
xor
dec
es
xchg
jns
int3
test
shlb
lea
stc
jge
setle
mov
clc
lods
cmp
push
and
scas
insl
add
mov
les
push
test
adc
fistpll
add
mov
shrb
push
mov
pop
ja
push
mov
mov
das
mov
stos
push
xchg
orb
arpl
mov
push
call
mov
rorl
push
inc
stos
sub
and
ljmp
mov
adc
aaa
fst
push
mov
sub
sbb
shrl
cld
leave
negb
mov
push
add
push
or
and
or
cmp
addr16
std
jne
cltd
cli
xchg
mov
vmptrst
pop
mov
or
adc
shll
in
aaa
cmp
fisubs
cmc
mov
stc
sub
push
sbb
or
arpl
sub
or
sbb
loopne
inc
das
cli
es
dec
cld
xor
cmp
test
xchg
mov
mov
adc
outsb
imul
mov
add
and
xor
lods
mov
loope
inc
fdivl
mov
ss
adc
push
xchg
ljmp
das
cmc
std
out
adc
mov
aam
loop
cmp
jp
sahf
inc
aas
or
xchg
fwait
lods
mov
sahf
sti
jbe
jmp
xor
jne
or
lcall
adc
mov
push
inc
out
jmp
mov
adc
xchg
dec
ret
pop
lahf
lds
repnz
inc
dec
nop
jae
scas
shlb
pop
mov
xchg
call
insl
leave
sti
cltd
push
fcomps
lret
pop
or
dec
xchg
repz
dec
out
fsub
cmp
in
imul
fstpl
aas
ljmp
lds
pop
or
inc
xchg
lret
mov
xchg
sbb
push
mov
loopne
and
inc
add
pop
cmp
push
sbb
add
cwtl
repnz
sub
mov
jno
out
rol
daa
dec
mov
cltd
jns
pushf
fwait
xchg
aaa
aad
or
pop
add
stos
lea
in
xchg
xchg
pop
sbb
cmpsb
dec
fdivp
xchg
dec
add
xor
cmp
popa
push
inc
outsl
sub
pop
out
jl
push
je
jo
mov
xor
jecxz
subb
xor
sbb
xchg
arpl
xchg
leave
cmp
lods
dec
aad
jmp
cmp
lret
popa
jno
dec
mov
and
cwtl
ret
addr16
scas
rorl
mov
and
mov
out
fisttpl
sar
cmpb
jp
ds
inc
pop
clc
mov
mov
icebp
mov
call
in
push
xchg
leave
mov
les
xchg
and
xor
test
and
adc
dec
gs
jg
popa
or
xchg
les
fdivrs
popf
insb
dec
scas
fisttps
rcrb
sub
sbb
jl
stos
sti
les
cmp
cmp
mov
inc
icebp
movsl
dec
lahf
cltd
iret
add
and
mov
sahf
popf
clc
dec
or
ljmp
mov
add
std
pop
es
negl
xchg
push
lcall
daa
dec
push
fistpl
sbb
sbbb
jno
or
movsb
pop
gs
hlt
ficomps
and
jmp
mov
es
sbb
sbb
inc
dec
pop
or
and
dec
sbb
fs
fld
xor
idivl
xchg
lock
cmp
ja
mov
into
xchg
fstl
lcall
repnz
fsubrs
sbb
add
inc
jne
sbb
dec
dec
scas
push
cmpsb
jnp
arpl
outsb
rcrb
into
mov
or
repz
cmp
jle
push
sbb
pop
les
jp
dec
cld
ret
inc
dec
mov
ret
mov
mov
xchg
pop
stos
sahf
pop
sbb
adc
cmp
test
in
int
push
add
jp
cld
lret
je
mov
fistps
in
rolb
push
dec
fsubp
or
push
add
pop
jl
xchg
xchg
mov
lcall
std
xchg
pop
jmp
push
mov
cmpl
out
frstor
cmp
add
push
pop
sbb
jns
xor
inc
int
push
cmpsl
pushf
mov
dec
inc
fists
adc
in
stos
sbb
inc
cs
cli
out
adc
sub
movsb
mov
mov
dec
aas
out
lcall
sub
loop
or
add
and
dec
mov
aam
mov
dec
cmpsl
enter
add
xlat
sbb
dec
outsl
enter
scas
scas
popf
push
test
test
add
ds
and
out
add
xor
jge
mov
cmp
xlat
bound
and
ret
push
add
sub
icebp
stc
psrad
jno
icebp
in
xor
sub
mov
xor
add
ljmp
push
mov
add
addr16
add
and
les
dec
call
inc
fstpl
dec
inc
bswap
stos
adc
add
jmp
das
lret
add
lods
lret
sub
mov
jecxz
xor
icebp
xor
cld
push
or
faddl
je
stos
insb
adc
dec
push
ror
add
xor
orl
orps
push
insb
jb,pn
out
imul
dec
adc
gs
or
les
in
mov
cmp
shll
pusha
xchg
ret
in
push
test
fwait
push
nop
jge,pn
jo
xchg
or
mov
or
enter
cmp
cld
sbb
in
xchg
xor
out
scas
cmpsb
mov
je
pusha
jne
xor
mov
mov
dec
pop
jns
adc
sbb
or
hlt
sbb
xlat
pusha
cmc
dec
or
orb
stos
gs
cli
mov
outsb
loop
push
cmpsl
pop
bound
shl
dec
pop
nop
out
repnz
jge
lock
cli
adc
je
pop
cmc
mov
fs
jno
jnp
mov
xchg
fisubl
add
nop
sbb
fisubrl
jo
aaa
mov
mov
lret
test
je
out
dec
xchg
popa
jb
cmp
or
mov
xchg
pop
test
out
test
sahf
fbstp
pop
pop
mov
xor
movsb
xorb
pop
sbb
bound
sarl
fsubrl
or
sbb
ret
jge
js
cmp
fmuls
out
inc
sub
mov
test
mov
stos
cmp
out
cli
fildl
xchg
aas
xor
iret
ret
cmc
jo
repnz
testb
or
mov
enter
sahf
inc
mov
mov
xchg
jo
mov
adcb
mov
insl
dec
mov
rcl
leave
js
out
add
adc
pop
mov
sub
pop
add
and
jl
lods
insl
lahf
shl
jecxz
sbb
xchg
aas
adc
ss
cmpsb
lcall
mov
int3
xor
icebp
sbb
dec
xor
sbb
push
jl
pop
xchg
rorl
scas
mov
xchg
xchg
jg
ljmp
lds
jbe
xor
lahf
and
in
lret
push
inc
aas
roll
sbb
cmp
or
sub
xor
mov
jne
xor
fsubs
mov
ficompl
mov
outsb
mov
out
inc
std
dec
iret
dec
mov
jge
dec
cmove
out
ret
hlt
out
lcall
jmp
xchg
push
mov
inc
dec
mov
ret
fildll
push
mov
movsb
sub
mov
lea
dec
and
test
jns
or
loope
mov
sbb
scas
cmp
fldt
dec
ffreep
popa
sbb
scas
adc
adc
nop
xchg
xor
jmp
pop
inc
jmp
scas
mov
jo
loope
adc
xchg
sub
aam
or
mov
jno
fiadds
sub
stos
inc
mov
in
jns
mov
call
xchg
push
mov
adc
push
and
and
out
loope
or
das
adc
in
std
inc
popa
std
in
test
push
and
xchg
std
repz
pop
fsubrp
mov
je
push
inc
jno
xchg
adc
push
xchg
fidivrs
sbb
in
shr
ret
adcl
cmp
icebp
push
xchg
push
fbstp
push
add
push
dec
or
xor
mov
test
cmpsl
mov
lahf
je
pop
lea
das
adc
rolb
pusha
std
dec
cmp
imul
cmp
xor
pop
inc
test
mov
cltd
imul
aaa
insl
rcl
adc
inc
jns
ja
pop
fiaddl
add
add
lds
pop
insl
mov
jno
pop
rcrb
jmp
xchg
jne
scas
daa
jp
into
mov
popf
sbb
push
dec
sbb
mulb
xlat
dec
cmp
stos
iret
mov
nop
repnz
mov
or
sbb
sub
fidivrl
arpl
fsubs
sub
cmp
pop
cmp
orl
dec
jns
mov
xor
orl
push
stos
pop
lea
adc
mov
lods
ds
add
icebp
push
jo
adc
out
sar
lcall
mov
pop
ja
adc
mov
push
sbb
gs
mov
es
test
shlb
pop
bound
pop
dec
divb
mov
xor
sub
mov
cmpsl
mov
xchg
enter
cmp
repnz
mov
clc
mov
movd
enter
push
aad
inc
dec
xchg
or
es
jl
dec
push
out
push
xor
out
addr16
adc
loope
push
adc
push
sbb
and
pop
push
sub
sahf
mov
ret
ficoml
or
add
fwait
data16
icebp
dec
out
ds
fs
cmpsb
in
dec
ljmp
sub
add
fcoms
mov
jl
mov
cli
sbb
sub
push
cmpsb
dec
out
adcb
dec
repz
aam
or
aam
movsl
mov
and
fadds
mov
cmp
sti
sahf
icebp
lea
xchg
inc
mov
cmpsl
outsl
xlat
das
sarb
or
jbe
enter
lret
and
dec
mov
push
pop
jl
in
cmp
jp
add
cmp
out
stc
aas
cmc
test
sub
push
xchg
mov
lcall
stos
rcl
inc
call
xchg
mov
icebp
jne
adc
push
repz
adc
test
sub
xor
mov
popf
mov
mov
iret
je
out
fdivrs
jge
stc
out
out
xor
sti
and
fcoml
ds
cmpsl
aas
loope
adc
push
mov
jmp
mov
xor
popa
popa
shlb
jne
test
sbb
imul
iret
xchg
popf
std
stos
out
push
fisubrl
mov
sbb
pop
inc
lcall
jmp
sub
sahf
out
movsl
cmpsl
orb
mul
dec
lock
cmp
xchg
or
inc
xchg
and
add
pusha
stc
rcrb
shl
ss
push
ficoms
dec
cmc
clc
push
or
repnz
pop
add
pushf
inc
loope
nop
lods
mov
fsubs
sti
mov
call
aad
mov
dec
mov
addr16
das
xchg
mov
lods
push
mov
mov
movsb
and
jne
pop
pop
dec
push
dec
jbe
into
lret
hlt
sbb
shrl
lods
enter
lods
mov
std
dec
add
xor
mov
add
push
pop
imul
lea
test
adc
mov
cmp
popf
add
fdivrl
sbb
fldl
cmc
mov
pushf
cmp
je
xchg
mov
nop
jno
in
ja
push
sub
fs
xor
lret
push
test
ret
rcrl
imul
repnz
add
lods
adc
add
mov
inc
cmp
mov
in
pushf
cmp
sbb
cld
and
bound
inc
jne
push
mov
mulb
mov
aam
xchg
movsb
fcmovnb
orl
or
notb
push
cs
or
mov
push
jbe
inc
notb
sbb
or
lds
aam
inc
or
or
xchg
dec
cwtl
xchg
loop
add
mov
pop
scas
push
into
out
mov
mov
jae
push
push
lea
sub
jl
pop
outsb
in
jp
inc
sbb
xchg
jbe
mov
sbb
inc
cmova
loope
xchg
mov
xlat
jns
js
jp
cmc
xor
repnz
nop
jbe
ljmp
ljmp
fdivs
sub
adc
cltd
hlt
cmc
mull
fdivrl
jge
and
outsw
movsl
mov
lock
xor
lods
fsts
loopne
lods
push
and
xchg
add
or
enter
adc
scas
js
add
push
and
pop
cld
gs
xor
dec
inc
push
inc
stos
jnp
loop
out
icebp
sub
sbb
dec
repz
push
xchg
cmpsb
adc
cmpsl
fsts
sub
icebp
push
push
lods
mov
sub
stos
scas
xchg
xchg
xchg
shrl
popa
stos
test
push
ja
xchg
mov
test
pop
adc
mov
xor
movsb
or
ds
jg
imul
out
mov
sti
aam
xor
adc
dec
push
out
pop
sbb
jmp
pop
sbb
lods
pop
add
jno
inc
inc
jp
adcb
fdivl
sub
inc
and
testb
pop
or
fadds
jp
lcall
dec
cmp
hlt
dec
mov
sbb
inc
cmp
mov
sbb
ret
icebp
in
or
xor
cmp
test
pop
cmp
adc
cmp
pop
sbb
mov
pop
outsl
cmc
pop
sahf
gs
mov
and
or
imul
add
int
mov
stos
add
fisttps
jae
jg
aam
imul
movsb
pop
and
mov
pop
das
sub
and
jge
mov
sub
invd
sbb
jnp
iret
adc
sbb
fstp
cmp
xor
push
test
mov
gs
dec
xlat
je
sub
in
xchg
add
cmp
test
shl
mov
push
ds
jmp
xchg
lret
pop
popa
xor
pop
mov
das
push
pop
xlat
jnp
xchg
jmp
outsl
jmp
enter
jl
scas
in
scas
dec
or
push
adc
mov
loop
in
aaa
jb
sarl
adc
loop
and
mov
xchg
in
cmpsb
mov
push
rorb
loopne
in
pusha
mov
add
cltd
jo
fsts
shlb
sbb
ljmp
repnz
mov
repz
mov
xchg
pop
rorl
popa
jne
fwait
mov
adc
int
lret
jae
in
mov
xchg
repz
scas
enter
inc
cltd
push
lds
sbb
stc
sti
stc
pushf
jl
out
cmp
and
pop
dec
jmp
dec
pop
mov
addr16
enter
cwtl
xchg
lret
in
sub
mov
pushf
sbbl
aad
stos
aaa
mov
stc
dec
cmpsb
js
repz
mov
jnp
jle
in
movsb
pusha
incb
inc
ret
inc
shlb
scas
jmp
jecxz
imulb
mov
decb
xor
mov
call
inc
ds
sub
sub
test
arpl
cltd
jl
movsl
int
popl
add
hlt
hlt
movsb
shl
pop
mov
dec
mov
test
into
jle
dec
aad
jns
inc
cmp
dec
mov
into
adc
sbb
testl
cmpsb
pop
sbb
lahf
lcall
in
mov
sub
cmp
in
mov
shrb
sub
inc
ljmp
sbb
cmpb
aaa
cmpsl
bound
cwtl
clc
inc
aad
add
xor
imul
inc
push
pop
fsubr
jb
inc
lret
mov
mov
mov
mov
test
outsb
mov
or
jae
add
or
movsb
scas
pusha
sbb
repz
cld
into
scas
and
mov
pop
fsubl
test
dec
xor
outsl
push
aam
mov
adc
ror
lods
sbb
add
push
aas
fldcw
add
xchg
mov
ds
les
push
addr16
rep
scas
or
push
les
imul
addb
sahf
push
or
xlat
movsb
xchg
and
adc
cmpsb
sub
push
cmpsl
hlt
sub
inc
ret
test
sbb
xchg
es
ret
popf
ja
jmp
dec
jmp
mov
pop
pop
dec
mov
outsl
into
pop
or
dec
lret
mov
daa
test
dec
cmpsl
lea
data16
adc
or
stc
mov
inc
out
add
inc
inc
jae
fnstcw
fcmovne
popw
pop
pop
adc
dec
aas
cld
mov
lcall
or
sub
and
dec
xor
hlt
sarb
push
outsb
mov
xchg
push
shld
movsb
xchg
in
dec
push
xchg
xchg
jae
mov
lcall
lea
les
dec
sbb
jecxz
in
mov
adc
sub
daa
into
daa
mov
mov
xchg
jo
xorb
ret
sbb
movsb
mov
push
pop
repnz
cmp
sub
jo
in
cmp
lret
mov
lds
sbb
sahf
cmc
push
das
cmp
dec
lods
leave
cmp
or
fiadds
fisttpll
or
test
mov
ret
js
outsb
and
sahf
sbb
mov
popa
sub
or
ret
in
inc
pop
and
or
jp
inc
dec
mov
jmp
call
fidivrl
int3
cli
sbb
fidivrl
mov
and
mov
outsl
repnz
cmp
add
outsl
push
xchg
shlb
jle
mov
insl
sti
mov
repnz
loop
lret
clc
mov
xor
adc
popa
xchg
mov
mov
xchg
std
fisubrl
sub
mov
sarl
xor
mov
cmp
cmp
inc
add
ret
add
mov
add
subb
fnsave
and
dec
xor
out
push
xchg
ss
mov
mov
addl
jle
decl
push
sarb
xchg
mov
fadd
popf
sarl
test
fsubp
insb
mov
stc
es
out
xchg
mov
ss
adc
xor
and
fldenv
in
int3
sub
clc
jmp
pop
aam
clc
jbe
dec
or
fwait
inc
or
dec
ja
mov
cmp
sahf
add
in
scas
sahf
lea
iret
leave
lods
call
dec
lea
xchg
jle
in
cld
orb
cmp
mov
pusha
out
fwait
pushf
stos
ret
inc
cmp
shl
push
fmuls
jae
pop
lods
sbb
mov
out
cmpsb
adcb
data16
insl
push
mov
popf
xor
pop
xchg
test
add
fcmovnu
int3
add
push
cmp
mov
ret
adc
add
dec
dec
inc
add
pop
fdivrs
test
mov
lahf
dec
lret
push
xchg
ljmp
cli
sbb
mov
push
mov
sub
mov
repz
into
jle
sahf
lds
mov
out
stc
or
bound
push
fidivs
sbb
and
js
ja
rclb
hlt
push
stos
or
xorps
mov
testb
and
jl
pushf
dec
dec
lret
lods
add
loope
je
pushf
inc
push
aam
inc
xor
outsb
ja
dec
push
ljmp
je
cmp
cmp
sub
mov
sub
sarb
jnp
inc
lret
pop
out
jne
push
xchg
or
fadd
mov
nop
mov
xchg
into
in
mov
dec
pop
pop
cmp
mov
addl
jle
pop
or
out
add
dec
shlb
xor
inc
cltd
sub
nop
xlat
aas
and
fists
nop
pop
gs
cltd
jp
cmp
cltd
dec
pop
gs
mov
ret
xchg
aas
sub
int3
and
xchg
lret
dec
rol
xchg
dec
sub
xchg
dec
aaa
cwtl
cmp
xchg
imul
aam
xchg
icebp
and
addr16
pop
fiadds
mov
add
jo
leave
cmp
into
or
cwtl
imul
testb
jno
out
stos
test
out
sub
push
adc
inc
mov
fdiv
idiv
loope
outsb
cld
lods
dec
loope
aam
adc
fistpll
cwtl
mov
scas
push
xchg
adc
ret
lea
xchg
adcl
mov
inc
inc
pop
shlb
movsb
int
loope
out
xchg
jnp
fiadds
in
out
jmp
lods
jl
sahf
int3
add
jnp
or
call
bound
jbe
test
jb
fsubrp
subb
lods
mov
jb
and
inc
push
es
xor
repnz
sti
xor
aam
aaa
dec
lret
stos
fdivrl
mov
ret
neg
movsl
js
mov
push
lods
test
mov
lea
push
jb
sbb
lds
cli
and
push
loopne,pt
stc
ret
dec
or
xchg
push
cmp
ja
sbb
test
in
imull
mov
xorb
jle
aad
loopne
test
das
fwait
cld
xor
hlt
or
sbb
add
inc
dec
fwait
jp
sarb
popa
xor
arpl
adc
mov
ss
inc
or
dec
call
mov
mov
dec
sti
push
testb
out
push
shr
mov
mov
mov
sub
rclb
stc
jge
xchg
mov
add
jmp
mov
movl
arpl
cmpsl
outsb
add
je
pop
addr16
jnp
dec
sbb
mov
or
in
aaa
stc
and
fs
rorl
mov
lret
push
jle
mov
dec
xor
ret
push
mov
pop
jl
ret
in
addb
dec
jbe
iret
cmpsb
test
mov
dec
icebp
jg
shrb
sub
daa
mov
lahf
inc
mov
push
bound
jne
pushf
adc
push
xlat
mov
add
scas
xchg
mov
xor
pop
dec
and
jl
mov
aam
cmp
inc
or
push
std
mov
lods
data16
icebp
adc
or
adc
xor
inc
cld
shl
imul
push
aaa
sub
js
in
imul
pushf
xchg
js
hlt
das
test
mov
ljmp
testl
mov
mov
push
pop
push
mov
jns
sahf
leave
ds
push
dec
test
xchg
and
lahf
jae
lods
cs
push
mov
enter
add
sbb
push
call
adc
inc
test
dec
stc
and
sub
adc
pop
addr16
adc
pop
sbb
fcompl
add
jle
push
xchg
pop
or
cld
push
int3
pusha
cmp
aas
adc
pop
outsl
jp
negb
into
dec
jne
out
in
fcomp
test
outsb
mov
dec
or
movsl
adcl
test
pop
mov
jmp
xchg
mov
es
ljmp
xor
or
int3
hlt
repz
xchg
push
out
xlat
adc
inc
ljmp
and
pop
xchg
xor
gs
cmpsb
icebp
xor
sbb
push
mov
leave
jl
pop
leave
xchg
mov
fs
rcll
mov
pop
push
inc
jg
push
test
mov
adc
xchg
push
aad
mov
xor
ds
out
ljmp
movsl
addb
nop
faddl
call
mov
jge
sub
push
gs
shll
pop
xchg
shrl
mov
test
daa
xor
testb
sub
insb
faddl
imul
cmp
test
cmpxchg
test
inc
pusha
inc
mov
xor
cmp
or
pop
fstl
js
lcall
clc
sahf
es
ds
fmull
mov
cld
sbb
xchg
movsl
dec
scas
fildll
daa
add
fistl
mov
out
rol
add
mov
and
push
xchg
jnp
push
in
adc
jmp
pop
out
sbbl
roll
out
or
pushf
in
adc
sahf
ss
dec
dec
adc
cs
sub
roll
imulb
inc
dec
mov
jno
test
adc
stc
in
ret
xlat
xor
es
std
das
mov
hlt
popa
test
fnstsw
sbb
xchg
out
cmpsb
notl
or
sub
mov
add
iret
mov
push
mov
pop
cmp
mov
arpl
inc
lret
fcmovnu
mov
rorl
adc
ffreep
out
lret
push
and
cmp
out
ljmp
sahf
jno
insb
iret
repz
test
lret
jb
mulb
xor
bswap
push
js
push
inc
das
dec
cli
sbbl
pop
dec
test
fnstenv
push
into
into
ds
sbb
mov
sbb
sbb
call
cmpsb
mov
cld
testb
push
push
adc
cmp
mov
xorb
outsl
or
jb
daa
sbb
dec
mov
add
ja
aam
stos
rorl
imul
mov
aaa
loopne
enter
sub
push
imul
lods
lret
fwait
lcall
ret
fxtract
fwait
xor
hlt
mov
add
in
fsubrp
outsl
and
fwait
add
mov
mov
cwtl
dec
mov
xor
sub
out
loop
mov
test
ret
xchg
xor
fwait
push
mov
push
xchg
bound
add
xor
arpl
inc
popf
lea
imul
and
push
sub
adc
xchg
testl
jbe
push
jbe
repnz
push
pop
mov
jg
cmp
lahf
xchg
loopne
test
push
movsb
nop
lea
mov
ljmp
hlt
cmpsl
mov
xlat
push
cwtl
cs
pop
add
adc
imul
and
cmpsl
test
sbb
lods
daa
mov
repz
push
sub
shrl
fnstcw
mov
mov
cmp
push
xor
jl
or
daa
sub
add
pop
dec
xchg
or
jmp
inc
mov
mov
cs
les
jo
sub
pushf
push
sbb
xor
mov
pavgw
subb
pop
dec
mov
mov
xor
add
sti
out
sbb
mov
in
sub
mov
aas
cmp
aad
dec
cs
dec
or
dec
lds
xchg
jae
ja
or
jae
or
fwait
out
ret
pop
mov
cmp
negb
jle
mov
mov
ja
insb
scas
movsl
imul
data16
ret
loop
outsl
jno
popf
enter
daa
idivl
ret
pop
aad
mov
push
mov
imul
insl
mov
sti
dec
push
cmc
lahf
or
mov
in
sahf
sub
aaa
pop
out
dec
aaa
mov
aas
cld
test
inc
jb
push
add
dec
test
int3
push
enter
aad
mov
repnz
repz
nop
scas
xchg
dec
movl
pop
or
jmp
lods
leave
ss
adc
repz
mov
lods
and
xor
pop
orl
idivb
push
mov
pop
mov
lds
jecxz
inc
ftst
stos
push
int
shlb
xchg
inc
aaa
adc
ficoml
or
adc
add
repnz
psrad
sbb
push
cmp
in
sbb
jno
sbbb
imul
pop
xlat
rolb
pop
add
jb
sti
jo
xchg
xchg
sbb
cmp
cmp
out
in
jmp
or
icebp
fcmovne
or
andb
sbb
popa
sbb
xor
xchg
push
inc
inc
add
sahf
jb
and
out
mov
fcoms
andb
mov
add
out
jmp
cli
inc
mov
sahf
cltd
in
add
rol
push
jb
fnsave
sub
cltd
ss
xlat
setnp
stc
iret
out
jecxz
pop
ja
sbb
ljmp
scas
cld
movsl
lret
jae
sub
ja
sbbb
loopne
jns
scas
pop
pop
mov
scas
jp
iret
test
jge
test
mov
pushf
loopne
mov
mov
xchg
xor
sbb
xchg
mov
mov
push
xchg
sbb
cwtl
mov
stos
ljmp
negl
cwtl
push
mov
stos
ss
test
mov
sbb
sti
fsubrl
test
loop
adc
jae
idivb
nop
push
jno
xchg
outsb
fld
lahf
sahf
sbb
push
sbb
popa
and
shll
movsb
in
js
out
mov
pop
sub
rorb
dec
jecxz
or
pop
stc
push
icebp
lods
push
sti
mov
ljmp
pop
lret
mov
adc
push
push
xchg
mov
inc
lods
pop
outsb
in
movb
and
and
js
mov
cmp
sbb
icebp
iret
lcall
pop
xor
cmpsb
sub
xchg
test
xor
inc
icebp
call
xor
push
sbb
xor
jl
dec
fcompl
and
add
or
outsb
jnp
sub
ljmp
rolb
pop
enter
test
loop
test
in
inc
sbb
jnp
sub
or
xchg
xchg
adc
mov
jns
pusha
sahf
add
into
sub
cmp
jmp
pop
int3
ja
not
jns
cmc
aaa
dec
cltd
and
fnstenv
mov
jle
test
lcall
jg
mov
stos
mov
lock
scas
mov
dec
mov
push
test
aaa
hlt
sbb
mov
lahf
iret
or
cmc
je
test
out
in
cltd
pop
mov
js
rep
cmp
inc
lds
into
popa
in
mov
repz
in
and
testl
jge
fsts
dec
jecxz
xchg
fnstsw
decl
jnp
cltd
stc
mov
in
sahf
and
jns
mov
lods
push
sub
sub
push
xchg
out
psubusw
rcll
bound
ds
cmpsb
shl
pop
insb
sbbb
mov
lods
pop
and
ret
cmp
hlt
push
jnp
fistpl
dec
aaa
push
cmp
sub
test
adc
push
int3
ret
adc
sbb
mov
icebp
lods
pop
pop
imul
cmp
outsb
fistl
inc
pop
xchg
enter
jmp
cmp
hlt
adc
lods
mov
mov
std
decb
cmp
xor
jle
aas
cmp
call
jg
push
lret
fsubrl
sbb
or
inc
and
mov
dec
stos
add
jnp
or
imul
js
or
pop
sbb
dec
sub
add
jae
jae
pop
jmp
addr16
or
and
dec
lahf
or
inc
les
cmp
sub
repz
imul
and
xor
lea
orl
scas
jne
out
adc
fwait
mov
scas
mov
push
xchg
data16
mov
xchg
push
loopne
ja
enter
mov
outsl
adc
cs
gs
insl
cmpsl
shr
or
out
cltd
sbb
mov
imul
fists
xor
inc
xchg
jae
ds
loope
pop
add
es
mov
sub
cmp
xchg
jnp
xchg
jo
idivl
lods
push
adc
cltd
inc
flds
adc
sahf
insl
inc
mov
enter
jne
outsl
clc
cmp
std
dec
add
adc
or
pop
imul
movsb
negb
dec
out
push
enter
pop
das
push
and
pop
adc
xchg
adc
mov
mov
scas
or
mov
std
cmp
pop
adc
nop
je
and
int
sarl
es
mov
xchg
clc
cmpsl
pop
fs
ja
add
arpl
add
pop
loope
les
scas
lods
incb
push
gs
lods
rcl
xchg
push
ret
out
adc
or
shl
cs
cmp
fdivp
dec
xor
jo
push
xor
push
adc
inc
pop
add
fs
dec
inc
in
pushf
lea
prefetchw
pushf
mov
xor
and
mov
push
nop
cmp
pop
xor
xlat
loop
pop
inc
jno
inc
insb
mov
jbe
gs
cmp
mov
into
rol
rcrb
das
mov
icebp
repnz
and
jb
mov
insb
jg
insl
mov
int3
mov
mov
enter
inc
sub
in
outsl
jecxz
pop
and
pop
mov
pusha
xchg
insb
sbb
xchg
push
fwait
orb
push
cwtl
jo
es
les
div
arpl
cmpsl
lea
aas
cmp
lods
push
test
mov
dec
cmpsb
lret
mov
add
dec
cwtl
stc
cmp
cmpsl
xor
call
mov
cmpsl
pop
addr16
lret
push
jecxz
xor
out
popa
stos
pusha
mov
or
push
push
cmp
mov
push
lahf
dec
adc
xor
sbbl
or
mov
movb
out
test
aas
ss
mov
repnz
and
inc
cmp
and
mov
jp
inc
scas
sub
sbb
popf
mov
lods
mov
in
je
push
xchg
idivl
push
and
push
cmp
pusha
inc
cmpb
sbb
test
add
cmp
jnp
movsl
dec
fstpl
jo
pop
pusha
or
push
mov
xor
fdiv
cmp
adc
je
iret
enter
popf
insl
inc
pop
loop
jne
lea
shrl
je
addr16
out
ja
adc
sub
cmp
jns
pop
repz
jg
xor
mov
sbb
adc
test
inc
in
clc
leave
push
jmp
cmp
push
mov
xor
or
nop
push
icebp
inc
jae
stc
jge
xor
or
ret
add
imul
repz
mov
inc
pop
pop
push
xor
add
jmp
scas
idivb
xchg
subb
fcmovb
test
and
dec
leave
pop
out
inc
mov
cmp
jo
add
pop
ja
dec
popf
fisubrs
inc
add
loopne
mov
adc
pusha
jmp
imull
scas
je
pushl
cwtl
push
cmc
je
adc
sub
fistps
jb
inc
je
dec
jnp
test
xchg
cmp
je
mov
jmp
rolb
aas
fstl
cmp
lahf
cmpsl
das
nop
clc
lret
outsl
rcrb
xor
iret
pop
add
loop
shl
cltd
fistl
push
mov
pop
push
cwtl
inc
jp
mov
xchg
stos
xchg
inc
push
inc
sbb
fidivrl
inc
jbe
push
pop
cmp
add
and
xlat
int3
popf
adc
std
pusha
jge
fs
into
mov
test
inc
fistps
addr16
cmp
bound
mov
adc
jnp
xchg
aam
rclb
and
mov
test
mov
sub
pop
mov
xor
lock
push
fbld
xor
and
sub
mov
add
mov
out
push
cmp
cmpsb
inc
test
sbb
lods
push
sub
xchg
aad
mov
push
mov
xor
aad
pop
faddl
loop
repz
cmp
sahf
loop
fistpll
add
aas
and
fcoml
leave
fs
mov
mov
xor
loopne
jne
pop
icebp
push
jno
mov
movsb
xor
out
stos
mov
sti
movsb
cmpsl
push
xlat
out
ljmp
shrl
pop
adc
loopne
dec
popf
sub
jne
xchg
sbb
jp
cmpsl
and
out
int
fldcw
gs
jns
loope
rcr
cmp
in
outsb
mov
cmp
sahf
pop
call
mov
pop
push
mov
cmc
pop
inc
jno
pop
out
xchg
repnz
mov
cltd
cmp
push
cmp
cmp
mov
rol
scas
adc
fdivr
mov
sbbl
pop
out
fs
pop
in
inc
xchg
xchg
and
jmp
rolb
xchg
ret
enter
jp
sub
cmpl
je
sub
loope
cmc
mov
loop
jno
shll
xchg
sbb
mov
jo
dec
ret
divl
pusha
sahf
ret
lods
add
clc
repnz
clc
sti
cmp
out
cmp
arpl
xor
dec
repz
xor
hlt
out
jge
push
scas
mov
jmp
mov
movsl
insl
rorl
push
xchg
cltd
xor
inc
lea
adc
add
sbb
adc
xor
test
mov
test
subb
es
and
test
or
jge
or
insl
xor
cmc
lret
jecxz
or
cmp
add
mov
xor
jo
push
and
arpl
jecxz
lock
dec
cmp
das
scas
es
mov
fld
in
push
adc
pusha
jge
mov
and
pop
je
lret
cltd
sbb
in
push
adc
mov
adc
addr16
cmp
movsb
mov
out
cmp
or
xchg
push
mov
test
cli
push
mov
sub
and
imulb
xlat
addl
jns
push
inc
inc
mov
stos
mov
cwtl
push
je
jl
mov
mov
lret
xor
enter
xor
cmp
lock
sahf
cltd
popa
in
push
xchg
inc
jno
cmp
push
or
shll
in
into
xor
jne
mov
jmp
add
add
insl
test
cli
push
je
iret
and
jecxz
and
cltd
outsl
cli
adc
ds
call
jne
out
loopne
mov
push
cld
mov
shrb
scas
pop
popa
xchg
ljmp
jg
inc
cmpsb
js
loope
pop
or
data16
insl
imul
jmp
add
nop
sbb
ret
sub
divb
loop
pushf
mov
out
pop
enter
xor
adc
fcmovnu
call
xor
push
sti
in
jb
push
pop
test
ret
test
popa
jno
push
out
insb
sub
in
and
inc
cs
sbb
fsubr
mov
xchg
mov
das
in
jo
push
fldcw
subl
test
dec
push
push
mov
movsl
add
das
int
int3
push
aam
ja
popf
ficoms
push
pop
cmc
sbb
push
aas
mov
int3
ret
xchg
das
es
ret
and
mov
shrl
mov
daa
in
fmull
jecxz
jbe
sbb
arpl
or
nop
xor
mov
xlat
cld
cmpsb
test
cmp
lods
push
cmp
or
xchg
inc
ss
pop
out
sarb
popl
add
out
out
add
or
bound
adc
push
add
shll
jno
mov
cmp
movaps
and
xchg
ficompl
xor
xor
fnstsw
mov
in
sar
add
leave
clc
fidivl
xlat
sahf
push
jmp
out
sbb
sbb
xor
mov
mov
or
sar
cmp
ss
pop
xor
in
loope
orl
fcomps
mov
cmp
jmp
popa
shll
dec
add
mov
push
daa
cmp
into
jl
mov
stc
pop
cwtl
mov
cmp
push
fisttps
inc
arpl
sub
xchg
gs
test
pop
cmp
pop
leave
or
inc
stos
sbb
ljmp
cltd
punpcklwd
cs
call
mov
clc
xor
fisubrl
add
imul
cli
mov
xor
icebp
mov
and
addr16
adc
sbb
mov
fidivl
clc
inc
cwtl
sahf
fildl
test
hlt
mov
adc
or
cmp
adc
xchg
inc
jns
sbb
test
ret
cltd
test
aaa
aam
sbb
fcomps
or
ret
rcrl
pop
pusha
sbb
and
je
lods
out
sbb
data16
subb
jo
ret
negl
xchg
jg
stc
pop
dec
dec
fnstenv
cmpsl
test
daa
jo
sub
and
push
push
pop
xor
xchg
fbld
hlt
je
lcall
add
sub
push
imul
ret
sub
xor
and
sbb
js
out
insb
stos
mov
rcrl
dec
jmp
dec
or
jp
xor
aad
push
jmp
shll
pop
and
sbbl
sbb
push
incb
mov
scas
js
sub
fs
popa
xorb
orl
fidivrl
inc
in
lea
lock
jno
xor
negl
outsb
jbe
notb
mov
jbe
fldenv
test
inc
es
pop
add
sahf
adc
mov
mov
add
sbbl
jns
or
mov
shlb
into
dec
call
cmc
sbbl
xchg
push
dec
mov
cmp
shrb
insb
bound
ss
int
mov
pop
int3
and
sub
stos
jge
stos
add
dec
dec
es
shlb
cmp
std
inc
inc
dec
xlat
sbb
cmp
jp
add
pop
imul
sti
stos
in
fildl
leave
add
or
adc
mov
js
stos
js
mov
adc
lds
fstpt
and
in
mov
cmp
stos
test
into
das
pop
lahf
inc
dec
rorb
outsb
pop
enter
mov
sub
sub
jp
movsb
xchg
jle
or
xchg
xor
lea
push
int
in
mov
push
cmpsb
dec
arpl
shrl
call
ds
loope
cli
mov
mov
sbb
push
movsb
jns
out
repz
pop
pop
xor
clc
inc
ss
xor
icebp
lods
xor
pop
mov
in
cmp
xor
sbb
cmc
rorl
jne
imul
sub
push
jbe
fs
mov
mov
adc
bound
and
lret
xchg
in
push
dec
outsb
jb
jecxz
jnp
sti
jge
adc
imul
xchg
xchg
test
mov
pop
outsl
or
test
dec
cmpsb
xchg
jge
fisubrs
and
cmp
xchg
mov
fisttps
push
into
mov
ja
testb
cmp
stos
jae
jne
lret
mov
outsl
ss
inc
insl
insb
add
fldt
in
mov
mov
in
rclb
lret
repz
mov
lcall
or
jmp
inc
add
fnstsw
dec
out
or
data16
aam
les
lcall
push
popa
fisttpll
fistpll
xor
pop
sub
jge
pop
lahf
push
mov
xchg
sahf
xor
sti
jb
lock
mov
cmpsb
insb
jne
push
or
std
jmp
sub
dec
cltd
idiv
mov
fsubrl
int3
loopne
gs
dec
hlt
imull
or
sub
imul
das
arpl
xchg
popf
aas
xchg
idivb
cld
addr16
ljmp
sbb
pushf
fdivr
cmp
jnp
mov
sahf
push
pop
enter
jo
aam
jg
data16
sub
scas
mov
xor
pushf
fld
jb
fs
daa
sahf
aaa
lock
les
call
das
dec
cmp
outsl
inc
jno
jp
and
add
push
sbb
lds
pop
out
xchg
xchg
lods
push
pop
dec
shll
pushf
imul
outsb
fisubrl
xor
xchg
pop
and
enter
jl
fiadds
xchg
push
in
xor
cmp
stos
or
cmp
push
mov
stos
popf
ret
mov
sub
jle
xchg
rorl
mov
add
inc
pop
sbb
adc
call
inc
fstps
xchg
btr
xor
hlt
shr
scas
xchg
nop
repnz
ds
sub
cmp
or
cltd
mov
addr16
lods
jo
xchg
movsb
insl
push
out
pop
sahf
xor
bound
addr16
cmp
loopne
mov
mov
push
nop
movsb
mov
scas
push
mov
dec
inc
enter
push
adc
sub
xor
push
mov
mov
pop
jl
push
ja
cld
nop
mov
movsb
cmp
jo
into
and
cli
or
imul
fwait
jl
push
and
xor
inc
imul
jo
pop
inc
push
aas
out
inc
shrl
ljmp
mov
repz
inc
mov
mov
mov
xor
test
nop
xchg
cli
adc
mov
mov
sub
or
nop
pop
int
sbb
push
sahf
xor
add
mov
loop
pushf
insb
push
fsubrs
ret
ret
fstl
arpl
pop
pop
and
cwtl
testl
imul
xor
loopne
dec
fisttpl
fcmovu
cmc
mov
pushf
cmp
jecxz
mulb
cltd
popf
subb
dec
jecxz
pop
mov
jp
icebp
pop
sarb
jmp
in
mov
shrb
mov
shlb
inc
movsb
aam
sub
and
inc
push
cmp
sti
das
pushf
inc
mov
jb
int3
dec
out
mov
inc
xchg
and
andl
push
push
iret
pop
ds
out
dec
inc
ljmp
imul
jmp
xor
and
xchg
adcl
int3
and
mov
cwtl
ret
sahf
mov
stos
dec
jge
fdivr
jecxz
xchg
pop
lock
xchg
mov
sti
test
xor
movsb
jg
call
popf
push
cwtl
insl
fistpl
sub
pushf
jo
pop
pop
mov
jbe
mov
cmp
push
mov
adc
cmp
popa
mov
shl
xchg
clc
push
or
adc
jle
vprotw
xor
mov
and
and
cmp
into
dec
jns
movsl
pop
js
pop
lahf
dec
aaa
fs
and
mov
dec
mov
in
sbb
mov
out
shr
jb
adc
adc
into
in
fimuls
jns
rcrb
ss
xor
or
pusha
subl
mov
add
jb
rolb
addr16
insb
xchg
xor
inc
pop
dec
cmp
xchg
out
xor
xor
inc
mov
cmpsl
xchg
jecxz
mov
mov
jl
and
mov
jmp
mov
sbb
pusha
nop
or
or
push
pusha
sub
pop
loope
mov
ret
imul
push
mov
mull
and
sahf
and
sub
loop
enter
and
cmp
inc
push
ret
nop
cs
inc
sbb
adc
rcrb
out
loope
cmpsb
mov
int
aam
inc
into
and
repnz
dec
sahf
sub
mov
lods
or
mov
lahf
lahf
xchg
int
ret
repnz
and
jp
jmp
pushl
or
dec
jns
mov
stc
or
add
int3
dec
mov
push
pop
rolb
add
jns
mov
outsb
icebp
addl
arpl
int
jns
ja
pop
cmpsb
or
shlb
or
lcall
lock
adc
sbb
int3
pop
xlat
dec
lods
fcoml
lods
fdivs
xor
call
out
lea
outsl
icebp
jl
push
outsb
mov
inc
insb
inc
inc
cwtl
xchg
push
mov
mov
insb
sbb
stos
mov
mov
mov
jbe
cmc
xchg
clc
fisubrs
das
fmul
int3
lods
addr16
cmpsl
leave
sub
jae
adc
jl
out
adc
jl
xor
imul
push
inc
pusha
adc
lcall
sbb
les
sub
add
jle
pop
mov
or
add
add
dec
mov
pop
push
int
insl
test
push
or
push
cld
push
mov
mov
jnp
mov
pop
dec
stos
jb
subb
jmp
sub
mov
stos
jbe
dec
xor
dec
les
pop
sbb
insl
jne
inc
fcmove
jl
cmp
rcl
sub
fstpt
adc
sub
lods
les
test
stos
add
dec
mov
popa
push
mov
mov
lock
pop
xor
and
cs
mov
test
push
mov
mov
push
cmp
movsl
push
je
cltd
inc
xchg
rcl
jb
cmp
dec
sarl
pushl
sti
fnstsw
xor
inc
sub
xchg
sbb
add
test
out
fnstsw
and
sbbl
cmc
in
lret
repz
xchg
xchg
ficompl
sub
aas
rcr
jmp
inc
and
mov
adc
mov
rdpmc
cmp
test
int3
int
mov
xor
rclb
movsl
mov
mov
pop
je
cld
mov
push
push
cmc
pop
or
mov
jb
sub
shl
inc
jmp
or
and
cmpl
mov
cmp
sbb
pop
movl
inc
out
jnp
jno
shr
stc
mov
pop
pop
xor
pop
shlb
xchg
inc
test
movsl
mov
out
push
imul
in
les
jl
movsl
data16
cs
xor
stos
jae
loope
jge
jne
lds
inc
mov
jmp
mov
daa
dec
dec
sbb
imul
mov
mov
repnz
dec
and
insb
test
dec
and
out
adc
gs
adc
inc
fildll
rol
lret
pop
mov
nop
rcrl
rolb
insb
repz
push
call
out
push
loop
push
outsl
dec
push
mov
push
add
cmpsb
xor
lea
clc
hlt
roll
pop
lock
sbb
xchg
adc
cmp
ljmp
ljmp
sbb
sbb
das
push
shrb
adc
fidivs
add
icebp
and
or
outsl
sbb
sahf
xchg
mov
nop
cmp
or
leave
cwtl
push
xor
cld
push
and
ss
pop
cmp
clc
xor
cli
or
sub
lcall
lcall
jg
rcrb
into
mov
leave
hlt
fsubs
jmp
mov
push
int
not
push
mov
cmpsb
ss
gs
sbb
in
mov
jno
xor
pushf
dec
outsl
lret
xchg
jmp
lahf
iret
jo
pop
mov
fprem
fidivrs
in
inc
pop
sub
fwait
loope
lcall
cmp
std
mov
test
int3
pop
sub
mov
pop
cmp
add
insl
daa
jp
mov
or
ret
xor
jg
inc
fstpl
in
or
lahf
mov
das
lret
jb
cmp
adc
jbe
cmp
test
push
and
lahf
mov
mov
xchg
dec
pusha
pop
mov
sub
sub
jle
out
faddl
jle
add
jbe
mov
enter
fdivp
fcomps
xchg
lock
aam
sub
xchg
cmp
add
pushf
add
std
cmp
idivl
cwtl
cs
or
loop
lock
popa
sub
mov
movsl
test
pop
dec
jl
mov
xor
rolb
mov
xchg
inc
rcrb
pop
aaa
repnz
sbb
push
test
inc
sbb
dec
cmp
mov
mov
mov
shlb
pushf
pushf
ljmp
sbb
push
add
xchg
or
jmp
je
fdivrs
loopne
sub
sbb
and
lods
xchg
mov
xchg
mov
lret
mov
aaa
xor
cltd
outsb
dec
pop
pop
adc
loopne
push
xor
aad
xor
int3
xchg
in
pop
pop
add
inc
xor
rcl
sahf
jne
dec
mov
xchg
addr16
xchg
sbb
xchg
and
mov
mov
stos
pop
inc
ret
sarl
fwait
fisubrs
pop
cmovo
mov
sbb
in
leave
add
icebp
ret
mov
add
int
notl
test
add
jl
ficoml
add
and
xchg
cmc
xor
fdivrp
movsl
xchg
sub
push
and
faddl
xor
mov
adc
in
adc
add
pop
repnz
inc
jb
loop
cltd
pop
ja
sub
pop
loopne
leave
test
adc
stos
sub
add
mov
enter
outsl
mov
sub
cmp
in
jge
inc
mov
sbb
dec
or
insl
pop
and
fucom
stos
icebp
pop
jbe
jmp
mov
xchg
stc
xchg
insb
into
pop
out
mov
xor
stos
cs
pop
xor
pop
mov
push
adc
aaa
sbb
mov
or
lods
hlt
lret
scas
cltd
out
enter
and
ret
pop
inc
mov
sub
iret
mov
add
fxch
inc
sbb
adc
stc
jmp
jns
add
or
jb
add
xchg
in
fcoms
cltd
cmp
pop
jo
cmc
jl
xor
pop
cmp
ffreep
clc
xchg
jb
pop
aam
mov
adc
sub
sub
cs
mov
lods
xchg
lret
je
xor
cmpsl
push
or
jae
mov
rcrl
test
jne
jecxz
sbb
xor
adc
repz
push
dec
jns
push
ret
xor
inc
xchg
jmp
dec
xabort
cltd
push
ja
xor
pop
mov
and
jns
test
lret
int3
ljmp
aaa
loop
mov
mov
xchg
in
daa
enter
inc
imul
aad
outsb
stos
out
mov
popf
mov
mov
js
cmp
int
sbb
jg
imull
std
jg
cmp
push
and
cmpsl
pop
lock
inc
lods
pop
inc
xor
and
fstpl
xchg
out
bound
fcoml
fidivrl
mov
mov
fisttpll
xchg
add
in
xchg
std
jne
icebp
inc
out
mov
clc
popf
or
or
inc
jae
mov
mov
push
aaa
push
xchg
mov
cmp
int
dec
mov
pop
xchg
xchg
mov
jo
cwtl
popf
lds
push
cwtl
mov
scas
mov
out
fsubs
es
shll
inc
test
popa
push
sub
cwtl
push
je
pop
addb
sbb
add
pop
mov
int
into
push
xor
or
cmpsb
mov
mov
cmp
inc
mov
inc
adc
enter
pop
or
xor
or
popa
dec
and
jns
ss
mov
add
adc
mov
add
sbb
pop
mov
cmp
cmpsb
addb
jae
mov
dec
cwtl
sub
pop
push
je
out
or
push
push
add
inc
xchg
pop
cmp
je
leave
lret
sub
xchg
cmpsl
sub
sbb
xchg
sub
or
imul
xchg
add
lcallw
movsl
test
dec
push
repnz
and
xchg
cmp
mov
test
inc
cld
mov
or
and
sbb
gs
les
pop
push
dec
jns
and
jge
jae
sbb
cli
imul
pop
cld
sbb
mov
nop
shl
lret
push
in
lret
xchg
popf
in
sbb
jge
ret
cmp
js
push
pop
push
cltd
outsb
sub
add
pop
push
xor
cmp
pop
orb
cwtl
stos
pop
out
mov
sub
repz
xor
mov
sarb
add
in
jp
ds
xchg
int3
adc
add
push
dec
aam
push
sahf
inc
xor
cltd
mov
outsl
dec
jle
cmp
lods
dec
addr16
daa
dec
insb
pop
outsb
jp
dec
test
data16
jecxz
push
scas
in
test
ret
movsl
push
mov
sarb
mov
out
jp
jo
in
pop
ror
pop
or
jae
pop
push
xchg
lret
push
out
and
add
add
adc
cwtl
iret
imul
mov
mov
push
es
push
sahf
dec
aas
jmp
cs
xlat
in
loopne
mov
jmp
rcrl
jg
fidivrs
addr16
pop
mov
sarl
jg
fucomip
scas
jno
shrd
test
xchg
mov
push
repnz
inc
into
addb
pop
xchg
out
sbb
lods
xor
inc
lahf
sbb
cmp
ja
sub
xor
out
aas
jmp
xor
and
mov
setp
sub
loopne
sbb
in
fnsave
jnp
pop
stc
push
sbb
jns
inc
mov
xchg
loop
cmpsl
lods
leave
je
sub
stos
mov
xchg
ss
mov
leave
scas
outsl
jg
sub
rolb
mov
dec
fildll
pop
sub
or
aam
and
sub
std
stc
lcall
insl
or
fldt
jae
sub
ja
mov
icebp
xchg
test
jmp
xchg
inc
out
cmp
mov
xor
dec
xor
push
out
mov
mov
sarb
cmp
jp
fists
ja
add
mov
push
add
addl
xchg
leave
cmp
jmp
push
inc
inc
or
int3
shlb
jmp
push
add
arpl
mov
cmp
inc
or
push
outsb
xor
orb
lahf
cmpsl
loope
ret
add
sahf
sub
or
lret
mov
sbb
xchg
jp
adc
mov
jbe
push
sbb
aam
push
push
or
int3
xlat
imul
roll
jge
daa
adc
iret
mov
pop
mov
cli
ss
cmpb
pop
or
jno
shlb
stos
shll
inc
dec
ja
jmp
mov
js
or
sbb
or
fldt
xchg
pop
push
rcl
sub
hlt
sub
mov
dec
xchg
xchg
pusha
pop
mov
fsubrs
push
out
jae
push
mov
loopew
jl
xchg
push
sub
add
mov
in
int3
xor
push
enter
aad
int3
jns
orl
rol
mov
es
mull
mov
lods
arpl
push
inc
stos
cmpsb
xchg
inc
mov
mov
xor
xchg
ficompl
push
inc
aas
fsubs
call
frstor
or
imul
adc
push
sub
stos
lods
xchg
sarl
mov
lock
xchg
mov
xchg
stc
decb
mov
aas
sbb
pop
stc
loope
fwait
sub
cmp
mov
aaa
in
mov
repnz
mov
mov
sub
dec
jp
mov
ret
mov
out
stos
dec
mov
pop
pop
loop
adc
jl
cmp
std
nop
mov
jg
leave
xchg
int
test
push
movb
lods
inc
inc
or
push
add
data16
icebp
inc
and
mov
imull
cmp
ss
mov
sub
jb
sahf
lds
lods
popf
xlat
imul
jae
pop
rcll
call
into
xor
pop
and
pop
stos
add
int
lret
iret
decb
mov
jecxz
push
pop
xchg
ds
faddl
lods
retw
sbb
or
outsb
icebp
sub
mov
pop
or
scas
dec
jg
jo
jno,pt
jbe
jns
mov
push
faddl
cli
mov
pop
iret
mov
cld
mov
jns
ficomps
inc
dec
jl
xchg
push
leave
push
ljmp
shrb
sbb
cmp
aas
cmc
mov
mov
iret
stos
shl
decl
leave
cmc
roll
ljmp
orl
jo
lds
sbb
jle
mov
mov
shr
in
jnp
sub
adc
cmpb
mov
cld
filds
xor
orl
pop
imul
fidivrs
mov
sgdtl
stos
mov
ss
out
rol
and
ja
and
into
out
push
cld
cld
js
jo
aad
inc
adc
pop
int
mov
pop
jne
add
mov
xor
and
dec
adc
sub
and
fisubrl
lods
cmpsl
push
mov
mov
pop
cmpsl
adc
ljmp
inc
mov
imul
rclb
lcall
shrl
jne
add
sbb
loope
pop
or
xchg
vprotw
xchg
dec
mov
cmp
lret
lods
xchg
mov
loope
aas
aas
push
mov
sbb
test
repnz
push
mov
int
xchg
fwait
les
aas
fucom
paddsw
shrl
mov
or
cmp
xlat
jbe
shlb
imulb
fs
repnz
xchg
mov
adc
mov
outsb
cmp
imul
into
iret
negl
ret
add
xchg
arpl
cmp
mov
or
xor
rcrb
rclb
es
loopne
mov
xchg
adc
cmp
dec
loop
data16
out
sub
out
mov
jl
in
xchg
dec
orb
and
and
pop
adc
mov
add
sbb
mov
leave
sub
add
adc
inc
push
sbb
dec
xlat
dec
cmp
push
movsl
xchg
pop
cmpsb
and
inc
lret
leave
or
inc
cmp
add
movb
addr16
push
lock
mov
inc
add
dec
aam
jge
jmp
pop
in
pop
scas
jg
cli
test
idivl
cmp
fs
cwtl
inc
xchg
mov
xor
jns
inc
mov
addb
gs
adc
arpl
pusha
orb
nop
adc
scas
mov
xchg
aas
js
cmp
lods
mov
pop
add
push
mov
inc
pop
jne
loopne
push
es
add
out
add
push
mov
xchg
cmove
jns
push
shlb
sub
mov
stc
xlat
or
sbb
adc
and
push
movsb
sarl
mov
sub
jb
jmp
mov
xor
mov
inc
cwtl
cmp
stos
inc
sbb
leave
pop
cmc
lret
std
xchg
movsl
jno
test
or
jo
and
xchg
jbe
jmp
mov
or
sub
xchg
adc
push
dec
cmp
mov
pop
adc
addr16
bound
mov
loop
cmpsb
sbb
mov
andb
int
stos
mov
sub
int
test
xchg
lods
mov
fucom
test
out
ja
divb
sub
dec
xor
xor
sbb
xor
ja
cmpsb
sub
add
adc
scas
fsubrs
out
imul
mov
mov
pop
cmp
pop
jnp
pop
push
inc
je
outsb
gs
inc
outsb
sbb
push
pop
scas
mov
hlt
sbb
test
and
addl
in
icebp
sub
or
and
jecxz
xchg
lods
inc
push
jns
mov
out
mov
lods
push
or
xor
sbb
sub
aaa
jns
mov
mov
insl
aaa
push
daa
add
test
movsl
lahf
xchg
and
loope
dec
jmp
mov
out
data16
arpl
arpl
pushw
call
out
mov
sub
aad
leave
adc
js
xorl
push
imul
xchg
dec
push
rolb
fs
mov
pop
rcl
movsb
push
je
lock
insl
dec
aas
ljmp
pop
int3
lods
add
in
mov
ret
cwtl
cltd
mov
leave
or
or
pop
or
sarl
cmp
adc
pop
xor
and
std
je
push
push
les
add
jb
and
mov
inc
incb
jp
fisttpll
cli
and
cmp
mov
push
mov
nop
or
jg
mov
lcall
idivl
mov
push
dec
call
dec
lret
jecxz
fisttpll
and
mov
sbb
popf
out
into
daa
and
cmp
mov
or
cmpsl
sub
das
imul
int
sub
mov
xor
int3
sub
leave
in
imul
mov
mov
sub
pop
and
pop
inc
mov
jl
mov
jbe
mov
jg
fildl
mov
mov
push
sbb
push
cmpsb
sbb
fisttpl
add
js
jnp
dec
jns
cltd
or
sbb
shlb
inc
pop
cmp
inc
xor
in
test
shlb
pop
push
cmc
data16
fwait
call
cmc
xor
frstor
cmpsl
mov
lahf
xor
outsb
mov
aas
pop
xchg
in
icebp
hlt
cltd
xor
mov
jo
inc
mov
cmp
adc
pop
pushf
in
fildl
arpl
jbe
ds
and
leave
cmpsb
rolb
shr
pop
cmp
out
adc
out
icebp
or
cltd
ret
add
ljmp
aaa
inc
rcrl
xchg
shll
push
push
push
ljmp
pop
sbb
mov
in
push
pushf
test
push
add
loopne
mov
xor
loope
or
and
insb
movsb
popa
jmp
xor
aaa
sbb
test
or
pusha
testl
cmp
pop
jne
call
xchg
stos
xor
or
cwtl
mov
push
inc
sbbb
daa
mov
dec
lcall
sarl
clc
js
xlat
scas
ret
push
add
inc
pusha
out
pop
lret
lods
adc
inc
xchg
in
push
or
jmp
js
aad
jp
dec
in
push
mov
cli
or
sub
fwait
xchg
and
daa
lock
movsb
mov
out
pop
xchg
mov
shrb
or
in
mov
mov
test
pop
jns,pt
xchg
adc
mov
and
xchg
leave
mov
lret
lret
adc
mov
xchg
cmp
jg
xor
fstpt
and
or
xchg
ss
sbb
movl
aam
mov
add
cltd
or
inc
cmp
adc
jno
arpl
lcall
mov
lock
adc
fistl
ret
cmp
in
xchg
loopne
lock
sbb
jmp
in
or
iret
adc
adc
mov
dec
mov
and
lods
mov
adcl
adc
and
push
icebp
gs
mov
js
xchg
adc
scas
arpl
lds
jg
sub
fwait
inc
or
push
test
mov
dec
inc
inc
add
aad
cld
adc
sub
adc
outsl
rorl
jmp
jmp
adc
push
je
cwtl
jge
dec
xor
mov
call
push
sbb
mov
mov
enter
xchg
sbb
pop
cmpsl
jnp
lret
test
movsl
or
pop
add
add
pop
repnz
in
test
push
adc
add
cmp
mov
push
in
inc
mov
mov
lods
rorb
pop
lods
fadds
add
fldl
mov
insb
jecxz
xor
cld
inc
push
lahf
xor
jecxz
sbbb
or
sub
adc
sub
mov
ss
push
mov
jmp
iret
pop
mov
cli
mov
mov
dec
jg
cmp
mov
int
dec
es
in
test
or
das
and
jnp
out
mov
out
loope
incb
test
mov
mov
xor
and
pushf
leave
xchg
xchg
inc
xor
call
cmp
xchg
xchg
lock
cmp
push
dec
das
add
shrl
adc
and
and
mov
stos
jns
fdivrs
test
xor
ret
hlt
xchg
shrl
sbb
jp
shr
dec
mov
inc
push
aam
mov
aaa
mov
dec
lea
mov
pop
ret
xchg
xchg
add
dec
fisubl
int
testl
ja
leave
jle
addb
lea
addr16
movsl
sbb
sahf
push
dec
mov
shrb
cwtl
mov
cmp
aad
std
push
ljmp
icebp
cmp
mov
sub
pop
push
cltd
xor
adc
and
cmpsl
outsb
and
stos
aad
in
push
jge
clc
mov
sbb
mov
out
and
lret
mov
adc
cltd
mov
fildl
dec
je
dec
lret
leave
xchg
and
leave
loop
push
int
or
cwtl
aam
dec
and
aas
fnstenv
jns
mov
andl
pop
enter
sub
rclb
rorb
jle
cmpb
mov
pop
cmp
std
mov
lds
pop
mov
cwtl
aam
pop
adc
scas
xor
mov
mov
jge
popf
test
adc
sahf
cmpsb
fidivrs
xlat
test
push
mov
and
out
mov
xor
ss
daa
inc
cmp
inc
sub
out
sarl
push
or
cmp
insl
mov
fstl
push
push
lret
cmp
int
outsl
push
cmpsl
push
jnp
jge
repnz
shrl
test
mov
jmp
imul
mov
sub
xchg
inc
mov
mov
sahf
dec
stos
sub
add
push
push
mov
lahf
sahf
fisttpl
scas
popf
jle
sbb
push
mov
jno
xor
in
mov
sub
movsl
in
int
aam
lods
inc
inc
pushf
pop
add
out
add
dec
inc
inc
pop
and
sub
add
xchg
imul
int3
mov
mov
xlat
testb
ljmp
sbb
aaa
jbe
jle
adc
jne
sub
sbb
inc
push
outsl
cs
testb
nop
insb
mov
mov
stc
stc
xor
stos
add
popf
es
push
and
add
xchg
inc
lods
xchg
popf
jns
sub
loop
lods
outsb
inc
xor
or
mov
jbe
in
scas
mov
imul
stos
aam
or
pushf
sbb
cmp
repnz
add
add
xor
pop
pop
mov
std
mov
mov
in
push
xor
fbstp
stos
into
les
mov
imul
jecxz
into
mov
cmp
mov
aad
out
fisttpl
mov
pop
sahf
fcompl
inc
pop
xchg
push
movsl
leave
or
out
cmpsb
pop
es
mov
jnp
adc
push
cltd
sti
and
cmp
dec
jmp
aaa
std
mov
jl
push
sbb
stos
ljmp
pushf
dec
cmp
adc
dec
in
sub
insb
pop
adc
push
in
mov
std
jae
jnp,pn
ds
test
inc
cli
mov
mov
mov
aad
cmp
xchg
xchg
aaa
lds
lahf
stos
xorb
stos
pushf
push
push
and
jo
mov
lods
test
cmp
ja
or
mull
xchg
mov
and
cmp
pop
push
xchg
sub
cld
cmp
or
add
xchg
hlt
pop
push
sub
scas
or
xlat
pushl
stos
sbb
mov
lods
je
psllw
sti
mov
and
sbb
add
outsl
fwait
and
ljmp
dec
stc
mov
xchg
sbb
ret
repnz
outsb
ret
mov
adc
loopne
mov
test
stc
xchg
fdivl
jmp
imul
ljmp
dec
pop
and
out
ja
mov
fs
inc
test
shr
jno
scas
insl
inc
hlt
arpl
xchg
cltd
ret
cld
push
test
popa
mov
jge
aas
in
aaa
or
and
sub
jno
sti
or
clc
push
mov
movsl
cmc
mov
cmp
xchg
fcmovbe
rolb
push
movsb
cmpb
pop
jb
cmp
lahf
xor
sub
test
pop
xchg
and
lea
iret
std
cmp
mov
lds
pop
push
mov
xor
int
push
inc
xor
lret
cmp
loop
arpl
dec
jp
cltd
and
push
fld
in
push
in
dec
in
push
pop
jnp
es
sbbl
inc
mov
inc
repnz
jl
mov
jbe
mov
jae
decb
jmp
and
ficompl
xor
lcall
pop
fadds
xchg
push
dec
lret
je
xor
pushf
jo
mov
xchg
adc
aas
scas
mov
or
sahf
mov
sub
cld
sbb
addl
cmc
sahf
bound
test
add
popa
outsl
pop
add
lods
push
iret
sub
xor
lods
outsl
or
sbb
pop
push
push
ret
pop
lods
mov
jp
je
rcrl
mov
cmc
in
mov
dec
xor
adc
das
insl
mov
imul
fiaddl
lods
pop
cwtl
insl
sbb
push
stc
cmp
inc
fwait
mov
adc
dec
scas
or
fs
aaa
je
jbe
mov
imul
pop
xchg
jb
stos
mov
leave
enter
xor
jl
scas
cmp
mov
jl
add
mov
scas
xor
mov
test
push
sbb
xchg
cmpsb
daa
xor
bound
adc
xchg
movsb
push
cmp
pop
inc
sbb
outsl
in
insb
cmpsb
mov
fadds
addr16
sub
enter
jb
push
fcoml
cli
je
mov
stos
or
movsl
out
ss
js
int
ljmp
mov
out
cli
imul
ret
adc
es
lods
sub
cmp
mov
inc
jle
add
or
or
inc
mov
imulb
bound
jle
cmp
repnz
dec
int3
add
adc
movntq
out
out
mov
daa
push
es
xchg
ja
or
adcb
mov
push
clc
inc
and
and
cmp
xchg
push
sub
mov
btc
lea
xor
and
rcrb
pop
mov
rclb
adc
sub
sbb
sbb
jmp
dec
adc
pop
pop
int3
push
push
push
sub
sub
movsl
pop
fs
aaa
outsl
in
inc
cli
sub
dec
sbb
xchg
mov
pop
in
or
pop
jl
sub
push
push
lods
incb
shlb
sbb
gs
mov
hlt
bound
jb
pop
rcll
mov
lahf
pushf
out
lret
int
xchg
xchg
in
lahf
test
pop
mov
std
int3
sub
mov
cltd
mov
jno
and
loope
sub
ficomps
pushf
popa
mov
fistpl
push
leave
lds
or
cltd
sbb
pop
push
das
sub
ljmp
rcl
push
jbe
mov
dec
jle
sarl
mov
lods
test
dec
xchg
xorl
mov
scas
dec
lods
shrl
outsl
mov
int3
or
jecxz
cmp
shll
test
xchg
movsl
out
mov
rclb
mov
jge
ds
daa
add
mov
add
adc
xchg
fdivp
popf
stos
repnz
dec
jle
sar
test
into
loop
push
imul
imull
mov
and
pop
enter
jae
test
or
lcall
inc
in
test
jae
or
dec
xchg
leave
pop
outsl
pop
sub
loope
inc
inc
push
daa
sahf
jo
push
call
cmc
test
lods
lock
in
pop
xor
fs
inc
and
add
ljmp
jle
pop
js
inc
pushf
xor
pop
xor
sbb
and
movsb
lods
sub
int
pop
jnp
shl
in
roll
or
inc
sbb
dec
lcall
mov
mov
mov
repnz
add
xchg
mov
jge
push
es
test
xor
adcb
adc
fadd
aas
mov
dec
mov
and
dec
add
fldcw
imul
fcmovu
jmp
pop
sub
mov
mov
mov
jle
inc
test
int3
cmp
and
movsb
mov
mov
loop
mov
repz
dec
lcall
outsl
mov
xchg
fdivs
mov
or
push
or
xor
lahf
pop
iret
adc
mov
push
scas
test
xor
insb
mov
xor
add
xor
push
and
or
fcomi
loop
das
arpl
jg
mov
lcall
dec
adc
inc
inc
adc
sub
mov
aad
push
jl
jecxz
add
and
push
sahf
cmp
adc
mov
sub
mov
mov
jns
repnz
aam
repz
pop
iret
or
xchg
ja
push
jmp
js
scas
ss
imul
xchg
rcrl
xchg
cli
sub
lods
pop
scas
push
shufps
xchg
fwait
jno
addr16
and
add
push
mov
pop
cmp
adc
fadd
push
notl
mov
fildll
sbb
sti
dec
and
shr
rolb
leave
push
or
jnp
in
and
incl
lods
loopne
push
mov
cmp
fcmovb
scas
mov
cmp
scas
popf
push
out
shr
std
xor
mov
inc
ljmp
push
in
mov
jmp
fwait
sbb
hlt
daa
scas
jbe
sub
push
std
and
fiadds
lds
mov
cmpsl
xlat
lahf
popf
or
sbb
pop
test
pop
xchg
xchg
pop
fistpll
ss
adc
jge
push
scas
popa
add
xor
outsl
dec
xor
mov
bound
out
adc
and
sti
aad
out
loop,pt
aas
lret
bound
leave
adc
shrb
shlb
dec
pop
cltd
jae
gs
adc
paddusb
sbb
cmpsl
pop
mov
xchg
fdivs
dec
aam
fmul
lods
repnz
stc
add
push
and
mov
mov
out
sub
enter
test
shrb
xor
inc
out
fwait
dec
or
xchg
add
adc
add
jbe
loopne
dec
out
sub
sti
fistpll
push
out
jecxz
andb
fstl
push
inc
mov
dec
rclb
cmp
jg
and
inc
inc
xor
or
dec
lahf
pop
filds
imul
lahf
or
rcl
cmpb
push
mov
aas
mov
push
cli
testl
in
stos
loop
ja
movsl
imul
xlat
sbb
and
cmove
fcmovbe
lahf
push
push
dec
test
inc
aas
mov
stc
mov
add
push
inc
test
mov
cli
jle
rcrl
push
jbe
xchg
ljmp
cltd
dec
dec
cwtl
shl
lods
das
push
call
cmpsb
add
ljmp
xchg
mov
fsubl
sarb
jp
leave
xor
clc
lret
push
addr16
mov
pop
mov
imul
and
jg
push
jnp
cmc
nop
fs
add
ja
or
lcall
sub
shll
xor
xor
xchg
rclb
jge
fadds
lahf
mov
or
rorl
in
xor
mov
das
idivb
aam
lahf
sbb
xchg
add
bound
popf
pop
ss
js
mov
je
mov
popf
mov
inc
inc
aas
ficoml
aas
fldcw
mov
adc
push
sbb
clc
xchg
mov
stc
sub
sbb
cmp
push
iret
add
dec
mov
cs
pop
insb
shll
xchg
hlt
std
xchg
inc
mov
insl
cmp
iret
push
out
sbb
jle
aam
mov
sbb
pop
je
lods
jbe
or
insb
enter
mov
js
cli
inc
cmp
push
scas
smsw
adcb
and
nop
jb
mov
dec
adc
jae
cmp
mov
or
jge
xor
lods
sub
push
inc
mov
and
pop
cmp
int
nop
imul
dec
fwait
adc
shr
xor
xchg
clc
dec
repz
inc
sbb
sahf
sbb
adc
mov
std
push
setne
je
xchg
push
out
pop
mov
mov
ss
lahf
outsb
leave
xchg
jl
sbb
fldcw
and
jp
cmpsb
mov
inc
mov
and
xchg
pop
push
push
fnstcw
mov
and
sbb
inc
push
pop
repz
imul
pusha
js
sbb
cmp
xor
jae
pop
mov
and
fwait
incb
xor
or
adc
es
cmp
popf
xor
cwtl
push
mov
and
ror
sahf
mov
gs
sbb
adc
xlat
ds
addb
cmpsb
stos
cwtl
call
int
and
mov
sub
mov
cld
add
cli
push
movsl
cmp
xor
fsubl
mov
sbb
fs
or
fs
cwtl
ret
and
mov
test
mov
pop
cmp
mov
push
lock
stos
and
xchg
mov
mov
sbb
adc
sahf
pop
and
cmp
in
cwtl
ljmp
pop
popf
ja
int3
and
hlt
push
call
mov
repnz
fwait
stos
loopne
stos
mov
mov
movsl
mov
aaa
mov
rcrl
and
add
fld
pusha
testl
cmp
lods
pmulhuw
or
bound
fldpi
aad
sbb
inc
addr16
mov
adc
repnz
aad
stc
imul
scas
outsb
xchg
adcb
dec
lret
dec
clc
in
pop
insb
sbb
sbb
in
xchg
popf
lock
repnz
add
sbb
xor
sbb
add
lock
add
xchg
mov
bound
push
rorb
cld
imul
adc
scas
popf
pop
or
in
push
test
push
or
cmpsl
pop
cli
ljmp
cmp
es
jle
mulb
fidivl
pop
jno
rcll
scas
xor
out
repnz
sbb
rcl
je
sub
lahf
int
int
dec
cmc
ljmp
movsb
sub
and
or
in
movsb
dec
or
jmp
xchg
dec
mov
mov
push
pop
lret
xor
inc
mov
fucomip
jge
add
mov
jns
data16
ret
sbb
out
or
stc
cmc
ljmp
rclb
lahf
push
xor
ret
call
dec
jge
inc
into
shlb
xor
jae
and
add
jno
cs
sub
and
fcmovnbe
adc
rep
movsb
loope
icebp
popa
mov
notl
int3
push
stos
or
roll
mov
jnp
popa
scas
fidivrs
scas
mov
in
shr
sub
shll
pop
adc
cmp
xorb
mov
popf
loop
repnz
push
mov
pop
add
sub
push
cmp
adc
xchg
pop
call
and
test
cli
mov
aas
push
pop
int
jno
push
mov
pop
jl
or
repz
loope
inc
nop
dec
mov
ljmp
loope
into
loopne
add
jae
inc
cmp
test
or
addr16
dec
push
mov
out
or
cltd
daa
mov
mov
or
inc
xor
inc
mov
adc
mov
clc
cmpsb
shlb
xchg
cmp
lcall
jnp
std
insb
lds
cmpsl
sar
mov
sbb
lods
xchg
les
cmp
std
mov
adc
dec
call
jecxz
lock
repnz
aaa
mov
push
out
mov
sub
xchg
sbb
push
and
inc
idiv
icebp
mov
loope
movsl
jae
cmc
inc
and
cltd
rcrb
jl
pop
mov
xchg
lock
aad
imul
lods
fiadds
xor
pminub
mov
or
xor
jnp
xor
push
push
popa
mov
mov
and
jecxz
sti
popa
bound
adc
ret
lea
int3
xor
cmpsl
lcall
fcomps
push
shlb
push
nop
in
mov
gs
jns
push
inc
adcl
cmp
les
xchg
cwtl
cmpsl
sti
jo
cltd
popa
sub
std
stos
ss
mov
fstps
cmpsb
loop
add
and
flds
clc
movsb
jb
sub
or
repz
bound
cltd
ficoms
cmpsb
out
mov
hlt
lcall
loop
nop
jmp
in
sub
mov
testb
pop
cltd
push
in
out
xor
gs
mov
outsb
jmp
iret
ret
out
rdtsc
jp
mov
jecxz
xor
popa
mov
mov
mov
mov
sahf
adc
xor
test
mov
inc
movsl
test
push
sbb
ret
std
xor
ds
jne
xchg
mov
and
or
fidivs
jb
mov
adc
jmp
sbb
push
leave
mov
test
sbb
jge
xchg
mov
loopne
faddl
std
enter
jnp
mov
cmc
lds
sbb
mov
fcmovnbe
lret
xchg
jno
imul
inc
in
out
push
icebp
lahf
jle
adc
mov
xchg
inc
xchg
jo
faddp
adc
cli
pop
addb
ficompl
testl
mov
mov
gs
adc
jmp
in
cmc
mov
lret
mov
iret
movsl
cmpl
subb
stos
call
cld
les
andl
lret
popa
cmp
xor
aam
ret
aaa
test
shl
cmp
enter
repz
push
mov
notrack
pop
jae
movsl
and
mov
pop
inc
push
lret
push
or
add
xchg
int
add
mov
jo
sti
xor
mov
shrl
std
ja
sub
cmp
or
cltd
mov
mov
dec
or
sti
sbb
mov
push
and
stc
mov
rorl
les
enter
mov
mov
sarl
push
test
insb
mov
fidivrl
iret
jg
addl
roll
daa
jg
cs
movsl
rorl
std
adc
pop
jbe
jbe
jne
mov
negb
loope
push
jge
mov
mov
cmp
ret
pop
jle
ljmp
mov
push
and
xchg
les
ljmp
cmpsb
cltd
cld
jae
pop
f2xm1
out
jmp
sub
mov
loope
jle
pop
aas
pop
push
negb
xor
les
jp
outsl
mov
and
popa
jle
sarl
mov
decb
xchg
aaa
ljmp
stos
int3
pop
xor
je
mov
jecxz
cs
lret
push
cmpsb
pop
les
ds
stos
mov
adc
adcb
js
jl
loop
mov
int3
sarb
fsubs
xor
lret
loopne
and
adc
dec
in
fimull
mov
in
inc
push
fldcw
xchg
xor
ret
or
pop
dec
push
push
pop
inc
push
sbb
es
mov
test
sub
mov
and
mov
idivl
add
mov
cmp
cwtl
imul
imul
xlat
ljmp
inc
fsts
cmp
mov
sbb
sbb
jo
les
pop
ds
imul
cli
into
cltd
iret
mov
ss
insl
mov
sahf
adc
push
neg
mov
das
icebp
cmp
inc
adc
in
int3
loope
ljmp
imul
push
xchg
push
mov
xor
jo
cmp
pop
or
fs
sbb
stos
mov
push
fucomip
and
jno
cmp
xchg
daa
clc
out
nop
xor
ja
dec
fs
jecxz
cmp
sub
mov
xor
ret
xchg
pop
faddl
push
mov
jg
pusha
xor
loope
mov
adc
xlat
inc
or
scas
sar
cmpsb
aam
ljmp
jae
jns
data16
adc
popl
adc
call
es
cltd
xlat
mov
lret
and
xchg
mov
ss
lret
xor
mov
clc
pushl
lods
pushf
movl
mov
push
mov
incb
ds
popa
in
pop
mov
je
jo
in
or
cmp
cmpsl
push
xchg
inc
mov
pop
adcb
pop
sbb
clc
rolb
fistpll
ljmp
lods
insl
sti
daa
jo
mov
psubd
mov
jnp
shlb
add
jnp
mov
pop
ljmp
jae
xchg
daa
and
add
out
lcall
aad
pop
divb
push
pop
xchg
scas
test
je
fs
push
mov
pushf
or
fisttpll
cli
std
mov
fcompl
pop
fbld
dec
jge
je
or
xchg
dec
call
data16
loopne
xor
mov
mov
sti
jnp
jnp
cmp
push
fildl
adc
int
loope
jl
pop
mov
lret
xor
in
test
inc
mov
je
ret
aaa
out
cwtl
cmp
bound
aaa
nop
cld
mov
push
inc
cwtl
dec
jp
and
aas
fdivr
sbb
shll
or
inc
les
cmpsl
jl
jp
pop
sti
fcomps
iret
lea
aad
jp
pop
sbb
adc
xchg
in
fs
mov
cmp
mov
aad
xor
cmpsb
adc
push
dec
cwtl
push
cmpsl
movsb
mov
lahf
adc
outsl
cmp
das
xor
xchg
inc
cmp
mov
xchg
stc
sub
pop
cmp
sahf
and
sub
dec
sub
xchg
or
fs
and
pop
jbe
mov
outsl
adc
push
mov
out
add
in
test
aaa
cmc
adc
adc
das
cmpb
jecxz
lcall
sar
mov
pop
imul
adc
lret
and
sahf
mov
push
mov
mov
xor
push
outsl
xor
sub
sbb
mov
mov
sbb
cmp
and
jg
adc
sbbb
push
cltd
xlat
out
and
ds
xchg
rcrb
sub
mov
repnz
jecxz
pop
inc
shll
es
nop
jne
loop
sub
pushf
and
dec
arpl
add
pop
mov
add
add
push
push
ljmp
or
loope
stc
mov
and
pop
data16
insl
xor
aam
dec
lea
clc
mov
mov
pop
inc
imul
pop
subb
xor
mov
icebp
dec
loope
pusha
mov
in
bound
or
mov
and
out
push
cli
adc
pop
adc
cmp
inc
jae
pop
test
ja
pop
pop
shlb
fbstp
add
sahf
scas
push
aaa
push
mov
mov
jo
adc
sbb
sbb
nop
je
aad
mov
push
or
dec
cli
bound
pop
pop
imul
pop
push
bound
adc
mov
jg
pop
fcomip
mov
pop
loopne
out
testl
jl
call
pop
jns
dec
inc
in
push
inc
mov
adc
in
add
xchg
lret
mov
mov
sahf
cmp
or
mov
lcall
push
addl
scas
ds
push
lods
gs
xchg
std
mov
cmovne
xchg
lock
test
jmp
leave
lret
xchg
pop
lret
jl
enter
es
sti
and
push
or
xorl
adc
push
ficompl
dec
push
shrl
stos
sbb
push
in
mov
std
mov
sub
lea
push
cmpsb
mov
jg
out
ja
cli
dec
pop
mov
sbb
lock
and
pop
fimuls
ficoml
push
fwait
xchg
mov
cmp
xor
cmp
divl
aas
fptan
inc
inc
push
loop
push
clc
xor
cld
dec
xor
aas
les
xor
add
mov
cmp
pop
adc
lods
fwait
mov
xchg
or
testl
int3
pop
jb
dec
shrb
ds
sub
mov
mov
add
inc
cmp
push
adc
dec
inc
lcall
sub
imul
imul
ret
sub
repnz
enter
xor
imul
push
cmpsb
js
stc
les
scas
popa
add
add
inc
sbb
out
popa
pop
jle
pop
rcll
decl
sbb
xchg
or
out
js
mov
mov
imul
mov
aad
ret
in
test
mov
push
mov
jp
movsb
cltd
lds
stos
dec
sti
cmp
sbb
mov
jle
mov
xchg
das
jns
cli
sbb
add
or
cmpsb
sahf
cmpsb
cmp
int
jmp
fdivl
sti
xor
lods
popa
add
int
sbb
inc
ficoml
andb
mov
mov
repnz
or
inc
test
loop
jbe
push
jmp
je
cmpsb
mov
outsl
fcomip
insl
xchg
cmp
or
data16
fisttpll
fistpll
test
shrb
adc
add
in
push
xor
mov
mov
mov
scas
es
cmp
jge
call
or
mov
icebp
inc
ds
xchg
std
roll
xchg
cwtl
dec
jg
jge
adc
sbb
or
push
mov
jge
push
mov
inc
pusha
mov
into
js
mov
adc
cs
lds
pushf
je
adc
push
jg
or
call
ret
mov
popa
shll
xchg
shrl
mov
mov
mov
mov
xchg
pop
pop
xor
mov
dec
ds
repnz
pusha
divb
inc
inc
lds
adc
mov
outsl
xchg
insb
aad
out
out
mov
xchg
orl
jp
idivb
xchg
dec
vphsubbw
or
and
cmp
xchg
int
add
out
repz
fnstcw
xorb
jmp
loop
cmpsb
pop
ss
insl
or
sub
push
inc
jge
xchg
xor
addr16
adc
mov
mov
testb
and
in
cld
clc
mov
call
ljmp
sbb
mov
cmc
stos
add
rcr
mov
sub
rcrb
pusha
ss
outsb
stc
or
outsl
mov
movsl
dec
sub
std
xchg
inc
push
clc
mov
test
jbe
out
and
or
outsb
jbe
faddl
push
in
mov
loop
sbb
ret
mov
mov
jne
repnz
fs
dec
loop
popa
xchg
adc
inc
or
pusha
iret
sub
cli
push
fstl
jmp
jnp
stos
pop
lahf
les
ja
iret
pushl
stc
js
xor
cmp
or
lcall
stc
dec
ja
in
fidivs
outsb
hlt
scas
mov
jbe
mov
or
scas
mov
dec
pop
shlb
add
dec
addb
cmp
mov
imul
inc
repz
imul
pusha
enter
ljmp
inc
lds
lds
mov
sbb
ficompl
xchg
adc
testl
movb
sbb
or
xchg
int
xor
or
ret
jb
lret
mov
mov
cmpsb
rclb
je
sbb
dec
or
enter
jmp
xchg
lods
push
mov
shrb
inc
rorl
aam
ret
adc
mov
sub
int
mov
dec
pop
aas
dec
jo
adc
sbb
lret
sbb
pop
rol
mov
xor
push
pop
incl
xchg
clc
arpl
mov
push
nop
cmc
adc
mov
repz
arpl
mov
xchg
aad
jns
ljmp
and
adc
xor
xchg
jae
jne
sbb
lods
sbbw
int
lcall
ds
ror
loope
sub
pop
cmp
mov
sub
xor
push
add
ss
mov
ss
cmp
adc
outsb
lcall
cltd
push
lods
pop
outsl
xchg
sbb
enter
stc
inc
xor
sbb
cmp
stos
std
jb
push
dec
ret
sub
or
adc
cmp
icebp
std
lods
scas
fwait
pushf
cmp
lret
cmc
sub
jmp
mov
and
out
inc
cmp
inc
mov
stos
test
lods
sarb
jmp
sub
cmpsl
or
loopne
pop
or
or
loope
notl
inc
inc
mov
enter
les
cmpsl
dec
or
dec
inc
cwtl
or
or
adc
inc
or
in
adc
leave
stos
jae
loop
cwtl
iret
mov
inc
xor
push
xlat
jnp
leave
lea
push
in
or
clc
xor
inc
mov
push
jge
pop
inc
ret
movsl
jns
xor
and
mov
dec
push
sub
and
repnz
push
xchg
sbb
inc
xchg
mov
xchg
and
and
mov
outsl
ss
cmp
xor
pushf
shr
mov
ret
cmp
sub
push
lds
test
stos
mov
in
andl
test
cld
xor
xchg
jmp
push
les
mov
fs
xchg
pop
arpl
sahf
sub
mov
inc
cmp
lods
jmp
sub
fisttpll
movsb
dec
lea
in
icebp
jmp
stc
dec
mov
mov
pop
inc
jne
jns
mov
inc
pop
xchg
jno
sub
shll
inc
adc
aaa
mov
push
idivl
cmp
mov
push
loope
jbe
sub
sbb
mov
jle
push
sub
dec
pop
push
sbb
pop
fwait
rcr
dec
mov
xor
sti
lret
pop
insl
push
jp
stos
movsb
aaa
jecxz
xchg
add
xchg
xchg
rolb
test
adc
xchg
mov
cmpsl
xor
mov
push
mov
ja
push
adc
mov
push
cmpsl
es
insl
cmpsb
jns
xchg
nop
fisubrl
mov
mov
xchg
sub
out
addb
adc
nop
and
push
and
in
fsubl
xchg
fldenv
mov
sbb
loope
sub
mov
mov
std
mov
jbe
mov
xchg
cli
mov
mov
lods
jae
loop
int3
inc
adc
xchg
push
and
ja
or
mov
inc
jae
push
or
out
xor
fsubl
sub
xor
jmp
imul
int
pop
mov
stc
or
int
popa
or
push
sub
in
nop
and
xchg
mov
xor
fwait
hlt
pushf
mov
jge
jae
repnz
sub
ljmp
into
outsl
mov
pop
pop
repz
mov
xchg
gs
dec
sub
jae
jecxz
mov
adc
cmp
and
add
push
fnstcw
mov
enter
sti
loop,pn
gs
xor
in
xchg
dec
aam
cmp
xchg
jmp
cmp
and
repz
insb
pop
addb
lea
cltd
sub
xchg
int3
es
inc
push
lea
push
test
inc
cmpsb
scas
cltd
mov
cmp
pushf
shl
mov
and
sbb
inc
cld
fiadds
aaa
jo
daa
and
movsb
les
xchg
bound
mov
sbb
sarl
fisubs
sahf
xchg
js
sarb
fiadds
mov
js
sbb
pop
clc
test
cld
inc
sub
jo
mov
lret
pop
gs
mov
into
push
cmpsb
int
and
mov
pusha
mov
ss
xor
cmpsb
or
mov
pop
pop
jne
stos
jne
imul
mov
in
pop
inc
lods
jecxz
repz
dec
lret
cmp
fwait
clc
iret
fstps
or
cmp
popa
mov
lret
fcmovnb
shll
jecxz
jbe
rclb
addr16
and
and
rclb
ja
adc
cmpsb
aad
pop
vandpd
mov
xchg
inc
pop
pop
fcoms
mov
mov
push
shr
cmpsl
add
loop
mov
int3
sbbb
pop
int
fistpll
repnz
inc
sub
fstl
rcll
sti
pop
sbb
sbbl
jg
aam
std
mov
jle
cmp
sub
mov
movsl
mov
and
rolb
adc
cmpsb
in
aad
jl
pop
call
jno
push
out
loop
in
push
inc
daa
mov
pop
mov
loopne
mov
push
or
jmp
cltd
cmp
mov
and
fldln2
ljmp
xchg
mov
jmp
repnz
pop
pop
mov
jg
adc
push
jp
sti
pop
notb
mov
or
jb
imul
sbb
push
iret
add
call
lahf
cmp
dec
cmp
push
stc
jbe
xor
push
icebp
pop
in
dec
aam
mov
hlt
xor
adc
xor
xor
or
cltd
sbb
adc
data16
pop
fcmovne
imul
mov
lret
jbe
pop
xor
shlb
lock
jo
jecxz
cmp
xchg
add
mov
cmp
ret
mov
sbb
loop
pslld
in
jae
xor
mov
pop
xchg
imul
dec
jb
dec
lret
dec
mov
cmp
lcall
rolb
push
fnstenv
add
shrb
push
dec
push
mov
fdivl
fcomps
pop
outsb
movsb
shll
xchg
mov
cltd
xchg
repz
in
aas
fsubrp
inc
or
repz
push
jp
xchg
cmpsl
push
lcall
lea
xor
xor
cmp
popf
aam
mov
cmp
lods
cmpsb
iret
mov
sbb
jmp
enter
lods
jbe
sub
fmuls
stc
dec
mov
mov
addl
test
dec
dec
push
in
jno
push
lea
adc
jb
pop
and
cmp
and
sub
pop
pop
pushl
iretw
in
lcall
pop
sarl
jnp
ffreep
inc
aas
cs
pop
xchg
jmp
aad
ret
jns
and
mov
push
movsl
or
pop
inc
lahf
mov
lock
mov
loope
icebp
pop
insb
lret
mov
push
pop
xor
in
adc
pop
cmp
lods
and
js
dec
inc
mov
adc
aad
add
pop
and
fdivrl
xchg
int3
mov
sbb
je
in
bound
lret
js
mov
xchg
test
jb
andb
in
jge
mov
add
test
adc
aad
add
fsubrs
cmc
cmc
inc
cmc
lret
pop
push
inc
shll
out
je
add
imul
hlt
nop
das
jl
sbb
popf
ret
in
jns
inc
adc
pop
jnp
cmpl
repnz
pop
cmpsl
out
addr16
fmull
stos
int
iret
or
sbb
es
pusha
jmp
xchg
fisubrl
cli
gs
mov
push
pop
nop
roll
loop
je
ja
xchg
jnp
mov
sub
and
cmp
pop
out
pop
cwtl
stos
push
pusha
mov
sub
jecxz
int
adc
insb
pop
jmp
lcall
clc
mov
sbb
pop
dec
addb
push
sub
not
cld
clc
gs
or
adc
mov
lds
fsubp
dec
jo
insl
inc
mull
scas
push
pushl
clc
sbb
pop
out
mov
cwtl
xchg
and
fwait
pop
stos
out
and
inc
cmc
ror
xchg
lcall
stos
inc
jne
pop
aaa
inc
sarb
inc
pop
and
iret
push
out
clc
and
and
call
in
mulb
mov
shlb
push
enter
push
sbbl
in
cli
push
movsl
sbb
int
cmp
ja
jmp
repnz
sahf
jae
stos
out
jb
jne
jge
push
push
fistps
mov
movsl
fcomi
ja
jecxz
mov
stos
xchg
jmp
rclb
jg
rcrb
xchg
sbb
inc
and
fxch
cmp
add
loopne
mov
dec
mov
aam
pushf
sub
mov
imul
adc
push
sbb
adc
cld
cmp
or
jbe
jle
mov
push
sahf
shl
gs
xor
fisubrl
clc
add
mov
xlat
je
cmp
push
jno
adc
or
mov
or
add
mov
push
stc
adc
xchg
xchg
push
adc
int
ret
ja
cmp
pusha
dec
mov
fiaddl
push
mov
lods
pop
cmp
test
les
je
sbb
pop
scas
clc
dec
lds
outsl
je
call
cmp
repnz
adc
das
add
repz
sub
test
dec
cmp
xchg
inc
and
in
mov
add
cmpsl
jle
icebp
mov
dec
adc
xlat
cmp
or
leave
pusha
mov
into
mov
pop
dec
jle
aas
mov
insl
or
in
xor
adc
xlat
sub
xor
iret
pop
jno
or
lret
clc
stos
xchg
pop
fidivs
jns
imul
mov
xchg
add
sub
xchg
fucomip
adc
neg
notl
jmp
data16
sbb
sti
fidivs
ds
inc
push
mov
in
cmp
out
push
fwait
sbb
cwtl
popf
inc
in
mov
pop
add
repnz
sub
xor
sub
push
mov
shlb
out
xor
pusha
add
std
out
pop
sahf
mov
pop
popf
lock
cmp
mov
lcall
push
and
les
dec
decb
test
hlt
enter
mov
add
inc
mov
xor
jge
out
iret
inc
ljmp
iret
mov
js
mov
int
cmc
push
sbb
sub
pop
mov
inc
nop
sbb
jmp
xchg
push
in
sti
mov
jmp
rcr
xor
das
test
test
sub
ds
fs
jne
mov
mul
push
sub
jp
push
test
pop
nop
fstps
in
pushf
sbb
mov
adc
pop
xor
xchg
lods
lahf
mov
in
jno
pop
sbb
add
and
hlt
dec
pop
add
testb
add
cmp
sbb
ret
les
jg
gs
mov
lods
sahf
mov
out
stos
mov
mov
add
mov
stos
cmc
popa
lods
xlat
nop
gs
dec
xchg
sub
cmp
mov
cmp
inc
adc
adc
mov
loopne
cmp
jl
into
ret
test
mov
jae
jb
dec
mov
jmp
sbb
inc
cmpsb
jge
call
sbb
sbb
xchg
xor
mov
inc
or
enter
mov
cmp
lcall
aad
cld
push
mov
xorb
sbb
sarl
scas
lock
out
cld
dec
mov
ror
xor
addss
mov
inc
imul
imul
loop
cwtl
cli
mov
dec
xor
jae
cmpsb
inc
add
or
and
mov
mov
adc
pop
in
loopne
and
or
dec
mov
mov
ds
loope
or
outsl
test
inc
sahf
popf
sbb
and
mov
or
je
push
xor
sbb
mov
or
clc
xor
add
and
jle
mov
mov
popl
mov
sbbb
fistpl
aas
incl
sbb
les
mov
lds
inc
push
and
inc
ds
or
stos
popa
rorb
inc
add
sub
dec
xchg
movsl
in
shlb
pop
sub
jl
repz
test
push
jl
mov
pop
lock
es
pusha
pop
aam
ret
jbe
jns
xor
movsb
sti
pop
mov
lock
inc
idivl
ja
enter
enter
sub
xor
pop
fnsave
mov
push
cmc
insl
xchg
xchg
push
sti
outsb
or
imul
lods
jle
jge
jmp
push
xlat
int
test
and
mov
or
cwtl
loop
fwait
pop
test
jno
add
cmpsl
divb
fnstsw
movsb
xchg
push
fmul
add
iret
stos
mov
call
adcl
mov
sub
jmp
dec
subb
js
mov
sbb
add
hlt
push
out
test
sub
jo
mull
mov
mov
fsubrl
push
sarl
dec
aad
jle
xchg
insb
add
push
pop
pop
xor
out
insl
testl
push
sti
out
sbb
inc
mov
inc
sbb
cmp
lahf
ljmp
imul
jnp
mov
dec
inc
in
sbb
movntq
and
or
out
jo
sti
add
addb
aam
cmp
inc
push
mov
data16
push
add
sub
test
andl
and
sub
sbb
xchg
sub
mov
addr16
xchg
push
pop
pop
cmpl
add
jno
mov
out
sbb
shrl
cmp
hlt
push
mov
testb
fwait
enter
cmpsb
cmp
ret
push
data16
js
jbe
fsubl
jno
pop
push
or
loopne
jg
xor
add
icebp
sbb
sub
lcall
add
push
nop
adc
imul
ja
mov
sbb
filds
inc
int3
clc
jns
inc
dec
adc
push
and
movsb
jae
push
lcall
and
jno
pop
inc
movsl
mov
sti
icebp
aam
adcl
push
push
movsl
sbb
lods
out
subb
stc
lcall
pop
rcrb
add
add
sbb
je
xor
call
lahf
jmp
cmp
pushf
mov
jecxz
iret
pop
mov
je
jno
cmp
test
jmp
insb
in
jnp
cmc
popa
mov
mov
xor
mov
hlt
lock
int
loope
fimuls
mov
popa
cwtl
and
cmp
or
push
jg
cmc
hlt
mulb
lods
add
and
cmp
adc
pop
push
movsl
test
clc
test
mov
hlt
loopne
inc
or
xchg
sub
lcall
and
or
inc
mov
in
insb
dec
ficoms
mov
fiadds
clc
adc
in
jae
sbb
test
mov
sti
imul
pusha
xor
dec
push
or
lock
jne
pop
lock
push
stos
xchg
rdpmc
push
lea
in
pushf
loope
adc
mov
sbb
insb
test
xchg
rcl
jbe
add
and
mov
cs
addr16
std
inc
mov
enter
adcb
ljmp
lret
mov
xor
adc
push
pop
aas
cli
or
stos
mov
add
mov
cmpsb
mov
int3
icebp
imul
push
mov
cmp
add
fwait
test
icebp
scas
adc
or
loope
mov
mov
sti
mov
dec
add
js
mov
mov
pop
xlat
ja
outsl
inc
mov
cmp
bound
pop
in
push
in
popa
lcall
daa
ret
mov
mov
popa
or
cltd
add
iret
aaa
pop
push
fwait
and
push
ret
test
loop
pop
jbe
fsubs
sbbb
arpl
pushf
sbb
cmp
and
popa
mov
sahf
sub
inc
mov
out
ds
nop
addb
loopew
aaa
jge,pn
mov
call
fwait
pop
pop
mov
mov
dec
or
adc
push
or
fistl
sbb
add
pop
inc
xorl
jle
and
add
push
xchg
mov
movsb
pop
insl
and
int
cltd
mov
in
stc
xchg
jg
xor
xchg
fs
outsl
xchg
sub
mov
sub
xchg
and
int
repz
jg
es
jae
scas
test
mov
xchg
jg
cmp
flds
xchg
pop
subb
rcrl
jg
lock
xchg
sub
lods
xchg
sub
push
pop
fsubs
inc
das
stc
inc
jp
add
test
jge
mov
jne
ret
add
xchg
test
sbb
ret
movsb
bound
out
dec
pop
testb
jle
fiadds
aas
xchg
sarl
mov
jns
addb
xlat
fwait
xchg
push
js
adc
sbb
in
and
scas
in
lahf
mov
cmp
sbb
rcr
stos
push
cmp
test
xor
sbb
or
bound
fsubp
dec
sub
out
es
xchg
popa
cmp
mov
cmc
mov
sbb
aas
std
jecxz
xchg
or
push
cld
cmp
psrad
mov
aas
push
insb
mov
and
in
out
shr
sti
out
cmpsl
mov
push
call
orl
je
and
loop
mov
stos
pop
scas
pop
adc
rcl
push
movsbl
jo
jbe
adc
cmc
sub
roll
mov
and
xchg
inc
cwtl
jns
insb
icebp
shll
ret
add
loope
add
xor
aad
daa
sahf
inc
or
sub
inc
repnz
pop
push
subb
lcall
aaa
outsb
aas
out
dec
out
subl
ss
repz
xchg
sub
loopne
jnp
into
mov
inc
and
repz
sarl
jns
jle
jnp
adc
out
mov
out
cld
clc
or
xchg
inc
xor
mov
push
mov
sbb
jns
mov
aas
leave
leave
sbb
subb
mov
xchg
cmp
std
mov
push
test
pop
sti
shrl
ja
es
jbe
and
lea
iret
fiaddl
mov
or
push
jne
cs
fisubrl
dec
xchg
outsb
mov
imul
test
imul
dec
mov
mov
fnstenv
testb
fcompl
fldcw
jl
cwtl
mov
repz
out
testl
idiv
popa
xor
mov
or
adc
push
lahf
jb
int
mov
icebp
push
sbb
nop
dec
mov
mov
enter
push
pop
gs
jmp
lret
xchg
rcrb
adc
mov
lods
loopne
mov
test
cld
push
iret
sti
filds
xlat
dec
dec
or
jne
rclb
mov
out
mov
dec
jg
mov
jo
fdivrs
xchg
mov
sub
jbe
jo
jge
sub
xor
xor
out
xlat
rep
sbb
xchg
push
daa
or
push
and
add
call
and
adc
out
dec
psllw
push
push
adc
pop
dec
mov
shlb
jbe
sti
mov
movsb
adc
fldcw
inc
pop
imul
rorl
inc
pop
lret
bound
push
fsubs
push
out
cmp
push
xor
xchg
and
aas
jecxz
repnz
fstp
jb
in
lock
fcmovne
rclb
jecxz
test
push
aaa
scas
les
pop
push
ja
adc
mov
lock
in
inc
xchg
jl
jbe
test
inc
pop
hlt
loop
ret
scas
xorb
loop
inc
cwtl
add
cmp
or
cmp
lods
ja
add
push
imulb
je
mov
sub
or
or
shl
jl,pn
enter
push
cltd
mov
iret
data16
outsl
adc
iret
dec
rcll
gs
xlat
jno
lret
xorl
movsl
sub
mov
pop
pop
cmp
stos
jnp
fdiv
xchg
hlt
popf
mov
mov
lds
insl
dec
hlt
shll
stc
jle
inc
mov
adc
fbstp
sub
sbb
loope
ljmp
int3
fildll
test
fwait
dec
sbb
sbb
add
xor
fs
popa
shll
sub
subl
xor
mov
add
sti
pusha
xor
mov
test
outsb
enter
scas
adc
dec
add
sub
mov
mov
scas
mov
mov
stos
sbb
xor
jb
mov
les
lock
ja
and
push
inc
jbe
pop
mov
in
addb
lock
cmovb
xor
mov
jo
xchg
ja
call
jmp
imul
jnp
ds
adc
testl
cmp
mov
js
pushf
inc
mov
popa
subb
aam
xchg
pop
jne
mov
std
inc
in
scas
xchg
and
scas
jle
jmp
sub
dec
inc
lods
mov
js
ljmp
rcrb
cmpb
mov
sbb
loopne
test
jo
sbb
sbb
imul
cld
xchg
push
lahf
or
call
ja
icebp
mov
fisubl
out
test
out
popf
sbb
rclb
movsb
arpl
lods
je
mov
into
imulb
inc
mov
adc
in
lea
clc
pop
mov
js
in
mov
dec
or
jae
xor
rcl
sbb
push
push
cmp
xor
shll
sahf
stc
mov
adc
mov
repz
or
loopne
xchg
imul
xchg
sarl
lds
mov
and
out
cmp
lret
out
mov
sbb
dec
cmp
ret
push
adc
into
add
cmpsl
movsb
outsl
add
sub
ja
fs
std
out
add
sarl
cmp
mov
xchg
ja
jae
imul
add
lcall
mov
sbb
shlb
jg
and
fsqrt
shlb
inc
mov
add
push
add
or
push
cwtl
jbe
int
pushf
mov
popfw
out
jl
xor
pop
push
out
add
fidivrl
cmp
sbb
or
mov
into
sub
mov
cs
cmpsb
cld
dec
sbb
cmc
push
sub
ja
nop
int
sub
xor
adc
aaa
lock
bound
insl
pop
cmp
or
dec
aaa
outsl
inc
adc
iret
roll
xchg
outsb
hlt
mov
insb
lods
test
sbb
sahf
psrlw
test
and
dec
mov
shl
or
lods
mov
jge
jl
mov
ja
push
or
jg
adc
mov
push
sahf
lret
int
and
sbb
sub
xor
mov
cmpsl
jno
mov
mov
imul
mov
fcoml
sub
ja
or
stos
push
flds
add
shrb
sti
mov
loope
mov
imul
sahf
and
sub
lret
push
adc
and
aad
inc
out
pop
dec
iret
ljmp
cmp
adcb
mov
stos
xorb
stos
inc
dec
push
add
in
adcb
test
xchg
cmovs
loop
adc
xchg
mov
mov
pop
dec
clc
rcl
int
andb
mov
xor
aad
cld
jmp
mov
cmp
sbb
dec
aam
lret
mov
inc
lds
pop
and
xlat
in
xlat
add
add
mov
mov
int
jle
call
lods
xchg
sbb
sub
adc
push
js
mov
push
stos
adc
rol
dec
xchg
pop
or
imul
push
xor
pop
shrb
mov
out
ljmp
lret
lods
dec
sbb
mov
sbb
pop
mov
or
cmp
setbe
sub
sbb
xor
sbb
pop
cltd
js
loop
mov
fistpl
add
jno
xor
mov
adc
imul
cmp
xchg
fwait
jbe
sbb
sub
rorb
dec
mov
adc
sub
push
inc
jle
insl
pop
aam
jno
lods
iret
ret
adc
push
push
pop
sub
xchg
mov
jae
dec
pop
mov
or
in
lea
mov
lock
adc
vpunpcklwd
mov
cmp
imul
fcom
adc
fadds
hlt
loopne
fbld
dec
push
or
and
dec
xchg
xor
ret
lock
sti
popa
loope
sub
adc
cmp
fadds
sub
cwtl
lods
cmp
cltd
ds
jge
repz
popf
mov
out
and
pushf
dec
hlt
cmpsl
xchg
sbb
in
xchg
xchg
push
mov
nop
pusha
pusha
loop
xchg
js
stos
inc
cmp
mov
lret
lret
xchg
xchg
mov
std
into
push
subl
hlt
jle
fsubr
and
addr16
leave
xor
push
aam
mov
xchg
out
adc
mov
dec
mov
jo
imul
push
adc
pop
ja
push
dec
loopne
pop
adc
lret
sbb
jge
imul
nop
jecxz
mov
ret
sbb
ja
and
mov
out
sub
sub
mov
xor
rolb
pop
pop
fists
in
mov
cld
rcr
jg
addb
or
outsl
dec
mov
sub
xchg
das
push
ret
pop
in
mov
pop
xchg
lea
and
pop
call
movsl
jl
subl
jmp
cld
push
mov
fidivl
and
fidivl
mov
cmp
push
push
in
in
fld
add
addr16
inc
mov
mov
adc
addr16
cld
fisubrl
imul
in
push
cmp
in
sbb
rorb
lock
hlt
cmpsl
pop
lahf
mov
insl
test
scas
push
sbb
xchg
stos
mulb
das
or
test
push
mov
and
mov
fwait
pop
jo
ret
lret
in
and
dec
rcll
testb
clc
adc
test
pop
cmpsl
imul
rorb
aad
pop
scas
cld
pop
sub
loope
lea
mov
fld
pop
push
sbb
dec
lock
xchg
mov
imul
lea
test
or
cwtl
shrb
rolb
roll
jmp
adc
lea
and
cwtl
sub
int
insb
in
movsl
dec
fimuls
outsl
pop
cwtl
fnstcw
jle
les
adc
pop
pop
and
mov
arpl
in
outsl
xchg
scas
xor
popf
in
mov
nop
and
or
lcall
sahf
dec
dec
cwtl
loope
int3
movsb
dec
push
rclb
or
mov
adc
xlat
adc
mov
in
pop
sub
mov
lds
sbb
jecxz
pop
addb
out
lds
fcmovbe
mov
aam
mov
cmp
fisttps
cs
jmp
ds
dec
inc
or
and
shl
push
daa
loop
ja
in
ljmp
inc
gs
sub
jmp
add
fisubrs
jne
and
scas
mov
adc
insb
fwait
aas
inc
pop
std
imul
sbb
rol
sbb
push
cmp
jle
adc
mov
imul
pop
sbb
scas
call
imul
jecxz
sbb
addr16
jmp
in
sub
stos
sub
std
and
inc
ss
mov
test
mov
push
insb
push
sub
or
xor
daa
aad
add
aaa
pop
gs
call
gs
adc
adc
cmp
cmpsl
jne
sti
mov
lcall
ficomps
inc
adc
and
out
push
ret
sbb
daa
mov
cwtl
scas
push
sti
inc
jg
mov
mov
mov
leave
inc
rol
cmpsb
or
adcb
lret
shrb
mov
xor
and
xlat
push
mov
inc
std
push
dec
cmpsb
lods
cwtl
sbb
addr16
jns
dec
jne
xor
fidivl
pop
dec
nop
nop
fstl
inc
aad
push
dec
sbb
into
test
mov
clc
clc
or
and
sarl
mov
xchg
mull
lcall
cmp
shll
popf
out
in
dec
sahf
dec
xchg
mov
int3
ds
dec
pop
jmp
movsl
or
mov
pop
dec
inc
jecxz
bound
arpl
push
lods
sbb
pop
clc
outsl
lret
sarb
out
lock
pop
test
mov
xrelease
inc
jge
arpl
add
mov
js
imul
lahf
sub
jmp
mov
mov
lods
add
or
out
dec
sub
lret
xor
lret
fdivr
and
adc
adc
xchg
add
jl
cmpsl
mov
decl
aas
dec
inc
mov
mov
push
pushf
lcall
jecxz
dec
das
mov
xor
leave
xor
inc
push
icebp
out
stos
or
adc
scas
rep
jg
xchg
shl
jmp
push
in
add
xchg
mov
sbb
mov
es
push
cmpsl
pop
repz
jne
dec
dec
inc
xor
cld
loope
xchg
mov
xor
sti
mov
adc
mov
xor
add
jmp
cmp
inc
mov
sub
rcrl
sub
or
jne
jmp
popf
int3
repnz
dec
xlat
xor
cmp
into
out
mov
out
inc
js
pop
in
icebp
mov
mov
loopne
mov
in
mov
fwait
push
stos
push
dec
push
cli
lret
jno
xchg
cmp
test
adc
sbb
call
es
rcrb
sbb
or
js
mov
aas
scas
mov
adc
out
mov
push
inc
cld
inc
stos
lret
enter
push
dec
lahf
xor
xchg
jo
sbb
imul
sub
cmpsl
mov
mov
pop
out
add
jmp
mov
shl
adc
adc
jbe
inc
fmuls
mov
dec
dec
insl
pop
inc
mov
pop
aam
movsl
add
daa
push
adc
xor
push
and
popa
stc
enter
mov
ror
cmp
es
cltd
jbe
leave
rcrl
push
push
or
pop
mov
movl
popf
adc
fisttps
dec
push
xchg
je
arpl
insl
popa
nop
sub
push
movzwl
adc
outsb
testl
pop
and
jecxz
mov
pop
jl
jle
sbb
sub
xlat
push
std
push
mov
sub
iret
inc
push
popa
dec
ljmp
lods
pop
lret
inc
cmc
cmp
or
cmc
je
mov
push
sub
mov
inc
push
arpl
insl
mov
mov
mov
sbb
clc
data16
sub
cwtl
mov
jns
mul
inc
into
arpl
fimull
jns
mov
jp
test
sub
cmp
push
jmp
imul
or
mov
stos
loopne
lods
or
sbb
or
adc
test
adc
inc
jge
sbb
lock
mov
das
cltd
test
cltd
mov
mov
pop
push
ret
repnz
in
out
pusha
adc
cmp
int
pop
ljmp
aas
cld
cs
mov
shrl
jp
stc
xchg
in
je
xlat
mov
mov
push
and
insb
sahf
xchg
sbb
ja
jmp
fcoml
cli
shll
neg
out
add
push
jp
stc
lods
aas
push
sbb
jne
pop
bound
fnstsw
sbbl
mov
lcall
inc
pop
in
sub
push
cmp
jo
mov
sub
push
loop
je
test
cmp
cs
xchg
js
jl
push
mov
ljmp
sub
repnz
popa
pop
lods
inc
mov
mov
xor
xor
or
mov
xchg
xchg
mov
mov
imul
jno
ja
inc
xchg
mov
loop
add
mov
test
mov
mov
or
pop
inc
or
lahf
adc
push
jg
pop
cli
mov
xchg
jmp
xor
sbb
nop
repnz
sbb
pop
sti
shrb
add
enterw
rcrl
cmp
cltd
lods
adc
call
pusha
out
movsl
aad
test
xor
mov
outsl
cs
inc
jl
inc
in
add
in
lahf
jno
hlt
scas
lds
iret
daa
js
jnp
iret
or
cs
into
test
jbe
push
xor
in
loopne
iret
mov
mov
jp
mov
push
pop
jnp
cmc
jp
cmp
add
imul
aaa
js
dec
icebp
sti
test
insb
ja
je
sub
and
pop
pop
cmp
sub
out
or
sbb
and
jnp
in
in
add
adc
ret
mov
sub
push
xchg
stos
xor
jge
xor
jecxz
cmp
pop
mov
xadd
push
cltd
ret
pop
aas
add
and
loope
push
cltd
mov
sbb
xchg
fwait
push
add
pop
cmp
ljmp
pop
dec
stos
scas
stos
scas
and
adc
mov
mov
fistps
pop
cld
sahf
cmpsl
imul
or
ljmp
scas
leave
lahf
loopne
xchg
pop
or
andl
add
or
movsl
insl
xchg
or
sar
insb
data16
push
insl
loope
and
jp
cltd
test
adc
mov
divb
imul
stos
push
xor
or
mov
imul
xor
xchg
fdivrp
mov
mov
or
inc
fwait
aam
jne
and
gs
mov
ret
repz
push
and
repz
and
bound
jmp
daa
cmpb
push
sbb
push
shll
dec
add
pop
jno
push
mov
push
lahf
fstpt
mov
cmpsb
jle
leave
lret
pop
lret
xor
bswap
push
stc
jae
mov
fsubrl
fisttps
js
mov
scas
jmp
push
sub
jnp
dec
sub
and
or
mov
sbb
out
push
into
push
mov
mov
les
mov
mov
push
add
mov
sub
movsb
dec
in
add
dec
shl
inc
sbb
add
inc
and
dec
lret
adc
sub
call
inc
fadds
mov
xchg
mov
int3
adcb
aaa
fisubrl
jae
xorl
mov
aad
fdivrl
insb
mov
mov
insb
sbb
xlat
bound
icebp
out
daa
push
daa
sub
bound
mov
and
pusha
out
jnp
sbb
jle
insb
pop
lods
bound
ret
sub
sbb
mov
sbbl
in
data16
lret
and
sbb
cmc
jp
sbb
cmp
orb
adc
call
mov
cwtl
lods
pushf
jbe
daa
rorl
add
sub
jb
stos
inc
insl
aad
jne
cmp
loop
negb
mov
incb
add
xchg
pop
es
dec
dec
shl
lret
mov
adc
push
adc
cwtl
sbb
stc
leave
test
out
gs
push
fwait
pop
add
dec
test
inc
in
mov
inc
mov
sub
add
jg
xlat
jg
notb
aas
mov
dec
mov
mov
mov
push
xor
xchg
inc
repnz
es
in
fs
mov
pop
jbe
adc
fs
push
push
or
pushf
loop
mov
jge
fiaddl
icebp
repz
stos
xchg
xlat
lcall
fisttps
pushf
cmp
popf
aam
dec
sub
xchg
push
ret
inc
mov
jne
or
lds
lds
mov
adc
dec
inc
jmp
sbb
ret
mov
aam
enter
mov
push
pop
les
inc
orb
mov
aam
xchg
add
push
repz
mov
insb
mov
insl
adc
pop
xchg
push
xchg
rcll
mov
xchg
int3
lret
repz
jle
loopne
faddp
jmp
push
pop
sbb
pop
iret
mov
mov
shll
iret
dec
fistpll
ret
mov
and
mov
clc
ss
fildll
popf
leave
stos
xchg
sbb
mov
ret
and
stos
pop
jo
mov
cmc
dec
xor
inc
movsb
fsubl
ljmp
rclb
add
ds
adc
movsb
cmp
mov
push
out
dec
in
xchg
jecxz
std
push
fwait
jae
jl
and
stos
add
push
bound
cmp
cmp
subl
loop
xor
pop
push
dec
jmp
cmp
xchg
fidivrl
sub
sarb
mov
loopne
sbb
bound
inc
jbe
lods
fildl
fidivrs
jbe
cmp
mov
jg
rcrb
mov
cmp
ds
js,pn
push
lret
xchg
cld
sbb
pop
xor
mov
jo
push
pop
test
mov
adc
mov
inc
xchg
pop
stc
mov
lret
push
jge
arpl
scas
fdivl
pop
push
mov
dec
scas
mov
aaa
icebp
cli
xchg
aaa
jne
adc
mov
adc
imul
sarl
mov
in
pop
enter
or
ds
sarl
mov
jb
sub
add
rclb
ja
clc
mov
pop
lods
cmpsl
xor
jb
insl
scas
dec
pop
mov
xchg
add
leave
pop
ret
imul
push
add
leave
addr16
hlt
ret
sub
leave
mov
sub
imul
ret
cmp
sub
lcall
mov
jle
add
or
pop
add
fwait
jbe
sub
call
je
int
out
loopne
inc
xor
cs
dec
sbb
mov
jbe
addb
dec
insb
mov
inc
test
jae
mov
fldcw
repnz
imul
es
rclb
add
out
xlat
or
inc
push
negb
fsts
sbbl
je
push
dec
mov
pop
int3
cmp
pop
jmp
xchg
cmp
sub
mov
pop
mov
shrl
hlt
fsubs
lcall
mulb
inc
fxam
jno
cs
pop
sbb
movmskps
ljmp
xlat
sub
js
les
xchg
call
and
lret
inc
adc
jle
testl
subl
or
sahf
push
mov
jne
jbe
mov
push
xor
aaa
mov
mov
push
cli
push
xchg
bound
pop
and
pop
int
and
movsl
stos
clc
mov
aam
mov
adc
pop
scas
int
pushf
sub
shlb
lock
sbb
insb
jp
pcmpgtb
int3
ja
rcrb
xchg
stos
movsl
gs
lds
jo
xchg
dec
scas
shlb
adc
mov
jb
inc
jge
mov
adc
jmp
insb
scas
inc
mov
ffree
jg
xchg
inc
dec
cmp
lret
mov
hlt
mov
scas
dec
push
lds
pusha
mov
fsubs
jb
mov
jmp
mov
lock
xorb
fld1
xor
xchg
decb
cmp
js
and
flds
inc
aam
lcall
inc
or
fcomi
jbe
jnp
adc
mov
scas
lods
loopne
xor
dec
lods
hlt
testl
daa
into
enter
cli
dec
js
xchg
lock
dec
xchg
lock
test
xchg
addb
inc
arpl
sub
cltd
sbbl
das
out
lahf
xor
mov
aam
movsl
jbe
mov
roll
xor
inc
and
stos
les
aad
repz
inc
out
jecxz
cs
jl
jp
outsb
xchg
push
lcall
or
incb
call
mov
xchg
aaa
pop
sub
xlat
call
sub
lock
jl
jp
mov
shrl
cmpsb
mov
push
mov
int3
mov
inc
mov
pop
and
sti
xchg
pop
fsubl
dec
imul
lds
add
add
mov
mov
bound
mov
cs
cmp
and
in
add
mov
test
notl
cs
push
nop
adc
out
pop
fnstsw
shlb
add
push
ret
iret
mov
fwait
inc
fistpl
out
adcl
sarl
and
jnp
inc
adc
xchg
pushf
sbb
adc
adc
pop
bound
jge
adcb
jmp
aam
or
mov
sbb
or
scas
and
das
scas
ja
lds
repz
roll
outsl
outsb
imul
into
mov
outsl
mov
ret
popf
lods
mov
shr
sbb
xor
mov
dec
subw
sbb
or
and
lods
lret
jecxz
add
mov
hlt
and
call
cmpsl
cmpsl
pop
je
es
mull
inc
xchg
or
das
jle
xchg
sbb
icebp
inc
mov
je
shlb
cmp
in
sbbl
js
jecxz
adc
xchg
aaa
iret
es
lods
subl
in
inc
mov
stos
push
lcall
sub
push
push
inc
sbb
add
push
subl
in
push
adc
xor
adc
sub
sbb
sbb
inc
jb
jg
fnstenv
mov
xchg
fwait
pop
sub
xchg
xor
inc
rcrl
orl
push
pop
mov
dec
divl
sar
mov
js
hlt
inc
sub
add
bound
xrelease
sub
pop
negb
pop
mov
cmc
dec
pop
mul
pop
push
cltd
rcll
fisttpll
sub
push
inc
daa
xchg
or
cld
dec
dec
cmp
pop
shlb
sub
pop
enter
pop
cmp
mov
insb
mov
push
shlb
insb
xor
ret
test
cmpsl
mov
arpl
lcall
jbe
aad
jnp
fistl
push
nop
dec
gs
scas
int
jge
repz
push
ja
push
and
mov
xchg
cmp
dec
jmp
rcrl
popa
xchg
jp
cltd
or
stos
loop
stos
add
js
inc
repnz
in
mov
popw
mov
stos
js
xor
scas
or
fs
je
icebp
add
mov
addr16
cmp
push
les
sub
pop
int
xchg
sub
push
sbb
test
mov
or
andl
mov
cmpsb
test
cmp
inc
ret
inc
xchg
xchg
pop
mov
dec
mov
cwtl
push
push
mov
xchg
adc
mov
sub
cltd
push
push
mov
lock
and
mov
sub
cmc
mov
jmp
or
movsb
dec
mov
frstor
xchg
and
pop
out
pushf
ret
sahf
cld
roll
dec
fiadds
insb
repnz
popa
cmc
in
mov
addr16
xchg
sbb
dec
push
mov
mov
test
test
and
dec
inc
les
xor
and
leave
mov
and
cltd
into
adc
ret
or
mov
jl
pop
xchg
adcl
mov
lcall
lahf
jno
loope
scas
andl
and
sarb
outsb
add
mov
cmc
insl
sahf
popf
stc
add
add
repnz
in
jge
mov
jbe
mov
pusha
bnd
sbb
inc
dec
pop
stc
lods
lret
or
dec
shl
pusha
pop
or
faddl
cmpsl
aam
in
inc
cmc
aam
test
addl
shr
push
pop
sarl
mov
mov
int3
cmc
push
cld
cmp
imul
pop
sub
jge
sbb
sbb
es
pushf
jne
pop
sub
in
or
mov
icebp
and
in
pop
push
stos
cmpsb
jae
fsub
xor
mov
fldz
ss
xor
stos
out
pushf
sub
xor
sar
pop
xlat
std
dec
xor
inc
add
out
test
push
mov
adc
and
mov
sub
testl
pushf
popf
mov
lock
lcall
test
js
aaa
jge
int
cmp
addr16
stos
pop
jbe
test
mov
insb
inc
enter
xor
jmp
xchg
add
cld
fisubrs
je
rcll
cmc
push
ss
daa
cwtl
push
lds
mov
std
repz
out
inc
mov
shlb
sbb
or
popa
and
fincstp
out
mov
pavgw
dec
ret
add
jecxz
or
sbb
cmp
cmp
adc
and
push
fwait
lldt
sbbb
enter
ljmp
repz
mov
or
pop
or
adc
mov
std
mov
inc
mov
adc
sbbl
inc
or
les
lret
decl
push
stos
mov
outsb
add
shll
inc
sahf
pop
and
jbe
popa
rcrb
dec
dec
dec
cmp
addr16
mov
pop
xabort
inc
mov
dec
pop
mov
mov
add
dec
xor
leave
lods
std
mov
or
xchg
xchg
push
pop
push
mov
aam
xchg
or
in
xor
nop
mov
xor
neg
out
add
loopne
mov
mov
xchg
sub
push
clc
dec
pop
adc
addr16
or
mov
rorb
mov
inc
addl
movsl
inc
mov
cmpsl
dec
pop
add
and
fs
inc
mov
loope
push
dec
es
hlt
shl
push
pushf
mov
cmc
or
sbb
fs
and
mov
loopne
jbe
sbb
sub
lods
xor
in
sbb
lods
jbe
jg
xchg
cmp
cmp
push
adc
movsl
sbb
fistpll
in
nop
mov
dec
adc
lea
push
call
mov
into
fwait
sub
inc
mov
ret
mov
xor
push
inc
and
fdivl
xchg
mov
dec
incb
jecxz
data16
dec
dec
stos
jmp
add
jp
je
pop
fstps
push
test
and
xchg
hlt
movsl
cpuid
xlat
fsub
pop
int3
pop
ret
mov
test
push
into
out
lret
push
outsl
mov
sub
test
dec
arpl
into
xchg
outsb
popf
adc
pop
mov
pop
add
sub
push
xchg
idivb
sahf
mov
cmc
es
mov
hlt
xchg
scas
incl
cltd
adc
push
aad
cmpb
xchg
sti
inc
mov
pop
mov
in
jle
mov
loop
push
jbe
cmp
test
push
or
rcl
cmc
shrb
out
fsubs
push
lods
sub
adc
fdivrs
or
ret
fcmovbe
std
stc
dec
sub
das
xchg
jl
loope
dec
jecxz
fwait
repnz
adc
cmp
push
xchg
dec
dec
xor
push
fs
fistps
sti
add
aaa
push
rol
cmp
dec
xchg
pop
test
mov
cld
adc
rolb
sbb
rol
add
xchg
pop
inc
inc
push
clc
hlt
imul
not
and
mov
fdivs
or
or
scas
inc
ja
lahf
out
jmp
jnp
rorl
adc
ret
adc
lods
push
sub
rcrl
mov
or
arpl
out
adc
scas
jp
adc
loopne
mov
cmc
sbb
xor
aam
or
adc
aam
sbb
mov
cmc
inc
push
pop
addl
sbb
push
out
stc
add
jge
lock
pop
fisttpll
ss
in
xlat
adc
pushf
rcll
stos
scas
fcmovnu
loope
popf
daa
dec
push
or
jns
pop
in
outsl
cmp
leave
dec
adc
inc
mov
jle
adc
lret
and
dec
adc
aad
mov
divl
movsb
xor
stc
arpl
inc
push
ljmp
divb
mov
push
fs
cmp
mov
scas
mov
cmp
cmp
jle
sbb
mov
pop
ds
data16
out
push
push
mov
cmp
xchg
xor
add
xchg
fistpl
lahf
repnz
sbb
xchg
test
insb
rcl
mov
mov
pop
pop
xchg
mov
loope
add
rcll
int3
leave
jb
fisubs
je
bound
mov
je
dec
ret
or
adc
xor
fldcw
je
dec
mov
sbb
ja
les
divl
imul
repnz
sti
stc
jmp
nop
sbb
out
mov
cs
pop
inc
adc
and
xchg
sti
cld
loop
in
dec
lods
pop
lods
and
and
pop
add
sbb
lock
test
arpl
lahf
jmp
test
sub
int
jbe
xor
xor
cld
mov
out
test
sti
insb
lret
push
in
cld
data16
test
out
cld
pop
cmpsl
dec
es
add
cmp
fiadds
hlt
idivl
fcmovnu
fidivrs
pop
stc
test
stos
sti
lret
insl
aad
repnz
push
lret
bound
and
ret
mov
jl
jb,pn
and
jno
sub
mov
lret
aad
mov
das
xchg
lcall
mov
sbb
test
and
sbb
dec
insb
adc
outsl
iret
push
movaps
sbb
xchg
out
call
xlat
mov
rolb
repnz
xor
pop
push
cmc
mov
fidivl
mov
fcompl
pop
xchg
loopne
cmpsb
insl
subb
and
xchg
dec
sahf
addr16
mov
sarl
aaa
inc
mov
stos
fisubs
ss
xchg
out
xor
lret
ret
clc
in
jno
lods
out
test
pop
adc
add
pop
insb
adc
popa
test
stos
dec
ret
cmp
inc
xorl
jo
orl
adc
ds
sti
and
dec
push
xrelease
pop
aaa
insl
or
sub
arpl
or
inc
ret
aas
cltd
fstp
iret
lods
mov
pop
mov
sbb
xor
mov
push
mov
stc
in
mov
cmpsb
cs
popf
rolb
popa
in
loope
cmp
and
mov
scas
jbe
out
outsl
rdmsr
mov
cmp
shrl
iret
mov
test
rcrl
iret
sbb
out
cmp
mov
or
xor
cwtl
mov
push
adc
mov
push
ret
inc
ja
shl
arpl
mov
or
mov
sbb
fidivl
inc
xor
inc
cmp
lret
mov
pop
out
stos
rcl
shll
cs
lock
jns
xor
lock
or
adc
and
stos
dec
jl
lea
jns
outsl
sbb
jle
adc
mov
lea
xchg
jbe
xlat
sbb
xchg
adc
out
call
sbb
cmp
jg
mov
in
insb
mov
push
shrb
jmp
or
aam
xor
mov
in
mov
insb
add
push
dec
mov
dec
lods
xlat
inc
scas
and
js
mov
xchg
jecxz
mov
mov
push
sub
jae
stos
in
cmp
fistpl
pusha
rcrl
cmpsb
loopne
in
xchg
xor
shrl
shlb
dec
jmp
fldcw
xor
int
dec
sbb
mov
jb
in
aad
sarb
mov
mov
mov
inc
fidivs
nop
push
inc
cltd
ret
repz
icebp
push
xor
not
jno
shlb
push
pause
or
insl
je
mov
fisttps
ret
pop
outsb
aaa
xchg
leave
in
mov
mov
xor
mov
fwait
jmp
mov
in
xchg
or
aad
loop
or
or
cli
call
or
dec
sbb
daa
hlt
ljmp
sub
sub
or
and
iret
mov
adc
leave
lahf
scas
inc
push
fdivrs
lret
int3
mov
sub
jle
adc
into
cmc
cmp
add
add
inc
aam
mov
adc
mov
fwait
jbe
sbb
jg
pusha
sbb
loop
or
sub
or
or
fildl
popa
lock
addps
leave
sbb
dec
mov
cmp
or
xor
cli
pop
cmpsb
inc
pop
pop
lods
fcoms
jns
in
push
aam
lods
fistpl
ficompl
inc
daa
sarb
jp
or
stc
pusha
xchg
ret
popa
fstpl
imul
mov
mov
mov
sti
push
mov
ficoml
inc
imul
stos
std
test
in
push
lret
ds
mov
hlt
jae
xchg
xchg
pop
jne
int
mull
inc
cmc
jge
testb
ds
jge
jle
xchg
xlat
cmc
addl
sbb
scas
push
cmp
sbb
sub
or
and
dec
data16
fwait
pop
pop
les
and
mov
adc
test
out
leave
sbb
enter
xchg
xchg
adc
cmp
pop
jecxz
movsb
cmp
in
pop
mov
add
cs
mov
outsb
cmpsl
push
lret
test
xchg
scas
xchg
sub
gs
jg
pop
in
fimuls
faddl
in
rclb
push
pop
cmp
push
mov
jle
adc
adc
push
adc
in
rcr
aaa
imul
cmp
insb
sbb
jnp
stos
and
sti
xchg
adcb
sbb
out
mov
inc
lock
mov
sub
push
mov
add
or
popa
xchg
lahf
push
aad
std
test
mov
mov
pop
dec
or
ds
inc
ja
mov
dec
sub
mov
fs
loop
jnp
fwait
mov
ret
mov
adc
sub
mov
adc
hlt
push
pop
in
xor
popa
mov
mov
sub
jg
into
and
aaa
mov
ss
fnstcw
xchg
mov
in
pop
into
insb
or
test
inc
mov
cld
js
es
mov
std
jl
sub
xchg
inc
insb
cmp
scas
jp
mov
sarl
in
xchg
cmp
repnz
lods
out
xchg
notb
in
or
scas
inc
out
es
pop
sbb
iret
xchg
gs
adc
inc
dec
fsts
std
sbb
loope
adc
lret
jae
sub
inc
jae
enter
aaa
in
jb
out
sbb
jb
notb
fistpl
fistl
push
out
jno
stc
mov
outsl
push
dec
ficoms
popf
push
xor
inc
stos
and
movsl
enter
lret
xchg
mov
xchg
lea
and
ret
xchg
xor
mov
sub
and
ret
stc
into
inc
add
or
xchg
inc
loope
jb
ljmp
mov
pop
pushf
push
xchg
repz
pop
push
ret
leave
inc
movsb
xchg
in
loopne
mov
jge
sahf
or
and
popf
cmp
mov
ds
dec
jg
push
push
mov
pop
pusha
leave
iret
lock
lea
pop
out
xor
mov
gs
mov
clc
cmp
pop
aas
push
imull
sbb
adc
sub
mov
dec
and
jb
ficompl
and
cwtl
testb
out
scas
mov
inc
daa
adc
rcll
jns
pop
into
fs
sbb
out
lahf
shrl
movsb
adc
dec
fdivrs
cmp
add
das
add
add
std
mov
inc
aad
push
arpl
sbb
xchg
adc
std
lock
cltd
pop
popa
in
push
pop
mov
int
repz
mov
ret
jae
test
mov
jge
push
dec
insb
mov
xchg
fildll
mov
and
add
lods
sarl
enter
repz
cmc
dec
xchg
xor
mov
roll
aas
sub
pop
scas
orl
movl
xchg
call
addr16
or
xchg
or
pushf
pop
ja
loope
dec
repnz
jp
push
in
cld
xchg
sbbb
mov
and
inc
test
and
loopne
mov
jmp
js
ss
lock
inc
cwtl
pop
xchg
jl
std
je
fs
inc
mov
dec
sbb
and
sbb
xchg
aas
cmp
pop
jmp
mov
push
iret
and
or
cmp
cmp
mov
repz
rorl
in
daa
divb
imul
inc
cltd
jle
xor
dec
jnp
insb
xor
mov
es
xor
icebp
daa
lret
stos
stos
cmp
ffree
aad
jb
jno
inc
lret
jmp
ret
xor
movsl
shr
dec
pop
xchg
gs
rcll
push
sub
or
test
and
sbb
mov
adc
xchg
mov
addl
push
cmc
inc
dec
push
addr16
pop
in
inc
les
mov
jne
lock
mov
mov
aaa
mov
ret
push
cmp
movd
mov
or
lock
lcall
mov
sub
mov
jle
test
cmpsb
jp
jno
mov
repnz
aad
sub
sub
enter
inc
outsb
int3
rcr
lahf
loop
int
rorl
fwait
lcall
sbb
outsb
cwtl
sub
pusha
mov
data16
call
jle
subl
lcall
nop
xchg
xchg
jns
scas
hlt
fst
std
cmp
mov
aad
out
int3
add
xchg
jb
push
dec
pushf
fisubs
aas
adc
loope
in
add
add
lahf
push
test
dec
paddw
movzbl
xor
mov
cmp
pop
mov
xor
sbb
lahf
fiadds
sub
stos
sub
sub
inc
xor
cmp
gs
fcmovne
pop
or
stc
mov
mov
fdivrp
roll
mov
test
movsl
inc
push
push
pop
jo
rolb
lods
jmp
sti
mov
loope
or
inc
faddl
inc
dec
decb
xchg
mov
fwait
sti
push
fsubrl
or
outsb
lea
jmp
and
cmp
cmc
pop
enter
sbb
dec
rcll
inc
and
inc
sbb
xor
mov
in
aaa
pop
sahf
pop
fisubrs
or
lods
pop
xchg
sub
and
cmpsl
ljmp
push
pushf
mov
xor
jl
push
inc
inc
cmp
mov
xchg
mov
add
xor
stc
jbe
cmovs
mov
inc
aam
insb
fbstp
inc
xlat
mov
push
repz
jmp
push
les
bts
dec
and
jbe
push
jnp
cmp
sub
sub
lock
pop
jecxz
xor
int
xchg
adc
and
stos
jecxz
or
mulb
sub
in
andb
mov
inc
test
dec
aaa
pop
sbb
pop
into
stos
xchg
pushf
push
js
xor
iretw
aad
sbb
and
add
add
or
pop
int3
xchg
shlb
jg
mov
dec
xor
adc
hlt
pop
aam
sbb
movsl
movsl
mov
ljmp
ljmp
push
aaa
push
mov
cmp
lods
sub
pop
jg
cmp
in
and
enter
adc
jmp
in
scas
test
mov
mov
loopne
test
adc
push
push
shrl
imull
in
test
and
adc
dec
mov
out
push
inc
xor
cmpsl
repnz
jbe
mov
icebp
ljmp
push
sub
jmp
movsb
push
add
adc
mov
inc
jle
fstpt
xor
std
jno
dec
pop
test
xchg
jge
movsb
dec
dec
shlb
push
pop
ret
scas
mov
pop
mov
scas
sbb
xor
cmpsl
jcxz
insl
dec
sbb
inc
or
pushf
pop
inc
mov
pop
call
sti
shl
cmpl
xor
mov
stos
dec
inc
daa
push
push
dec
inc
add
push
in
gs
mov
mov
push
xchg
pop
cld
pop
mov
sub
mov
pop
xchg
xchg
jo
xchg
jmp
outsb
xchg
enter
sub
and
and
ja
decl
push
push
fdiv
jl
movsb
add
lret
loope
and
jl
and
inc
dec
xchg
outsb
out
popf
out
negb
jp
test
clc
xor
cltd
push
jecxz
pusha
aaa
leave
lret
jl
repnz
xchg
rorl
add
xchg
add
pushf
xchg
jl
dec
stos
jge
adc
mov
cmp
popf
imulb
leave
popa
fcompl
dec
lcall
rcr
jae
test
jne
imul
jns
add
dec
mov
xchg
mov
or
pop
lret
xchg
push
xchg
jg
and
scas
jnp
fistpll
xchg
mov
imul
repnz
cmp
pop
cli
leave
cmpsl
cmp
stos
push
lods
dec
ss
mov
sbb
push
pop
pop
xchg
xor
inc
movsb
and
mov
imul
xorb
cwtl
sbb
dec
xor
jl
push
jae
xor
inc
jnp
pop
ret
xor
loopne
rcr
sbb
aam
lret
dec
loope
adc
das
leave
cltd
int
cmp
xchg
cmc
or
push
ss
xor
mov
jno
and
pushf
cmp
negb
push
cmp
mov
sbb
out
data16
adc
stc
or
pop
addr16
add
or
das
push
inc
xchg
xchg
or
cmc
movsl
in
std
push
or
mov
movsb
sbbb
push
jno
add
add
cmp
or
cmpsl
push
push
inc
cltd
mov
and
rep
xchg
inc
xor
loop
mov
int3
mov
int
icebp
testl
pop
les
stos
hlt
fincstp
fiadds
cld
das
or
call
hlt
insb
inc
andb
push
sarb
mov
pop
mov
outsb
cmp
jg
into
mov
hlt
jnp
cmc
es
dec
push
mov
or
arpl
sbb
aad
add
ret
mov
jbe
push
inc
mov
sub
mov
mov
adc
jnp
pop
xchg
je
rcrl
leave
mov
sub
mulb
into
sahf
arpl
xor
pop
cmp
sub
hlt
arpl
lods
leave
jmp
stos
adc
loopne
dec
mov
mov
hlt
add
imul
sbbb
jb
pop
in
push
jl
or
xchg
pop
push
sarl
push
lcall
adc
cwtl
mov
stos
leave
pop
cld
push
lock
dec
out
loop
call
cmp
mov
icebp
or
xchg
loope
xchg
shl
outsl
in
popf
jns
push
mov
jg
outsb
rclb
or
bound
in
jne
imul
push
nop
insl
mov
repz
push
popf
lahf
js
push
mov
cmpsl
dec
leave
mov
enter
stos
imul
jecxz
nop
das
out
mov
nop
dec
push
sbb
mov
xchg
adc
push
push
sub
jge
mov
repz
cltd
xor
outsb
inc
mov
cli
call
cmpsb
pop
dec
in
or
sbb
pop
fcomp
xor
push
mov
inc
jge
lock
fisubrl
fndisi(8087
pop
in
mov
mov
pop
ret
std
inc
test
out
repz
in
je
lret
push
pop
test
adc
in
fiaddl
test
dec
fsubp
sarl
cmpsl
cwtl
xor
sbb
jecxz
cmp
mov
cmc
xor
push
leave
cmp
or
xor
sahf
dec
pop
iret
mov
mov
repz
ja
rorl
ljmp
lock
dec
je
aad
push
push
lock
jne
mov
iret
fstpl
mov
mov
aas
dec
sbb
daa
loope
les
xchg
clc
push
and
cmp
xor
push
pop
aam
mov
lea
mov
movsb
cmp
cld
dec
dec
loope
inc
lods
adc
mov
ds
mov
test
mov
aas
lret
pusha
inc
andb
xchg
pop
imulb
mov
insl
mov
aad
negl
loop
addr16
jne
aaa
mov
adc
addl
and
loope
cmpb
enter
pop
lcall
data16
out
cwtd
divb
push
push
dec
or
xchg
dec
mov
ljmp
ds
test
adc
and
ret
loope
fdivrl
jnp
into
shrl
out
xor
popf
xchg
out
mov
and
mov
int
arpl
stos
dec
scas
addr16
cmpsb
out
pop
or
jle
mov
mov
lds
push
ljmp
out
andl
sbbb
repz
adc
sub
add
pop
repz
add
rorb
call
roll
and
dec
xor
fsubrl
lret
sarl
out
hlt
stos
enter
int3
xor
out
hlt
movsl
aam
inc
push
mov
int
adc
ficompl
jo
leave
xchg
push
call
mov
or
mov
push
sub
dec
xchg
sar
xchg
cmp
js
cmp
push
pop
mov
jp
adc
xorb
pop
lahf
pop
push
insb
adc
iret
jp
jp
mov
lret
jmp
push
jae
sbb
xor
push
lcall
xchg
xor
sub
inc
sub
mov
fst
fcom
stos
lods
sub
orl
das
inc
rcl
out
sub
jo
pop
pop
xchg
adc
xchg
in
sub
clc
sbb
add
push
jl
pop
cmp
add
sbb
lods
jnp
cwtl
adc
mov
pop
sbb
cmp
jbe
jp
jl
jbe
mov
add
and
stos
xchg
xchg
pop
xchg
xchg
jp
lods
imul
les
cmpsl
cltd
sbb
je
fldt
sub
fnstcw
jp
sahf
add
mov
je
call
mov
push
aaa
lret
outsb
stos
popa
cmp
dec
xchg
sbb
mov
xor
cmp
push
shll
int3
jle
ret
shr
mov
sub
shr
xchg
fs
cmp
and
jge
push
arpl
xor
movsl
push
inc
cmp
rcrb
scas
push
sub
xor
and
ljmp
push
ds
iret
push
ss
fcoml
pop
add
fs
xor
js
push
and
enter
inc
dec
iret
arpl
xchg
lcall
cmp
loopne
mov
jo
loop
shlb
pop
nop
shlb
and
andb
addr16
push
sbb
js
pop
or
stos
adc
ds
mov
cmpsl
inc
ror
pop
scas
cwtl
push
jecxz
ficomps
pop
sbb
cmp
or
push
add
cltd
cmp
push
inc
fcompl
gs
push
icebp
xchg
push
fwait
push
xor
fsubrl
sti
cltd
jne
leave
ja
inc
pop
pop
add
test
or
or
inc
mov
in
mov
lahf
out
sbbb
insb
xor
mov
stos
jg
gs
in
fwait
out
into
add
dec
stc
mov
jge
je
ret
xor
icebp
adc
ffreep
dec
adc
ds
xchg
stc
cli
mov
cmc
mov
mov
adcb
or
adc
mov
adc
xchg
pusha
pop
into
or
sub
movsl
push
or
iret
orl
mov
es
inc
push
cmp
add
and
sbb
add
fistl
lretw
cmp
push
xchg
dec
rcrb
rcrl
je
push
outsb
jmp
inc
add
jno
push
sbb
ret
xor
loope
fldenv
std
push
pop
loopne
sbb
movsb
sbb
ss
lahf
pop
xor
call
sbb
and
test
inc
pop
iret
les
mov
dec
fsts
stos
cld
pop
and
gs
cmp
jmp
cmp
mov
outsl
inc
pop
aam
test
add
pop
pop
or
push
jne
mov
outsb
clc
outsl
xor
hlt
add
fcomps
or
scas
pop
inc
ja
fnstenv
pop
xchg
daa
int
shrl
test
into
jns
adc
add
rolb
xlat
stc
xchg
das
je
jmp
add
sub
dec
pop
jno
test
lcall
adc
fisttpll
js
mov
sbb
jl
pop
andl
scas
jb
insl
xor
push
clc
push
leave
std
dec
je
sbb
cs
dec
adc
fisubl
ret
roll
dec
scas
mov
sub
popf
jge
lods
cwtl
fwait
movsb
mov
mov
pop
pop
lahf
xor
std
ds
icebp
adc
repz
aaa
pop
jg
aaa
shll
stos
push
add
mov
jg
inc
insb
adcl
into
es
sahf
cmp
adc
bound
cli
pop
lret
mov
cmpsb
jp
aam
loop
icebp
fwait
push
xorb
sbb
xchg
lret
cmc
jmp
loop
mov
mov
lea
cmc
lea
aam
sbb
dec
fmuls
leave
xchg
xorb
xor
into
xor
mov
imul
repnz
push
pop
mov
bound
stc
aas
test
adc
jnp
jo
lea
scas
in
xchg
fimull
std
or
cmpsb
jmp
subb
pop
mov
mov
mov
push
push
mov
lcall
clc
addr16
mov
cmp
mov
mov
not
es
fldt
pop
push
scas
jnp
pop
out
adc
cs
inc
jg
js
leave
xchg
push
adc
pop
jecxz
sbb
rorl
or
mov
xor
dec
xor
popf
add
ret
jae
mov
mov
xchg
xor
mov
mov
repz
stos
mov
sbb
jecxz
in
out
pop
gs
lret
stc
cmp
push
dec
or
call
mov
jne
xlat
mov
stos
xor
xchg
inc
in
shl
mov
cmp
dec
cmpl
or
mov
xor
xchg
dec
dec
fs
leave
sub
movsb
mov
mov
mov
sbb
lea
addr16
sahf
xor
mov
daa
inc
outsb
sbb
data16
out
into
cld
arpl
inc
push
aas
call
cmp
pushw
mov
mov
js
sub
inc
adc
dec
cltd
sub
lods
adc
addl
out
movsl
push
adc
add
xchg
xor
or
pop
or
xchg
cmpsl
mov
sub
lret
or
dec
dec
inc
cmp
adc
fdivrp
pop
loope
pushf
fs
sbb
and
in
xor
adc
push
in
add
repz
js
sbb
mov
cwtl
cwtl
addr16
inc
or
mov
or
iret
mov
xor
rorb
pop
pop
ds
jl
imul
cwtl
pop
jo
add
mov
xchg
int3
inc
dec
and
out
scas
or
pop
and
xchg
dec
lret
mov
sub
and
popa
xchg
aaa
xchg
or
scas
sub
push
xchg
out
push
mov
lret
ss
cwtl
xor
cld
addr16
mov
bound
fcomp
xchg
les
cmpsl
stos
mov
dec
mull
mov
test
push
pusha
mov
cmpsl
leave
iret
inc
fnstenv
inc
jo
es
xchg
push
xchg
mov
jp
pop
lahf
xor
sub
imul
sbb
adc
ljmp
fstpt
mov
call
push
in
mov
arpl
add
adc
dec
lds
push
add
jno
mov
iret
mov
or
ja
jbe
inc
repnz
cmpsb
stos
hlt
pop
xor
pop
fimull
pop
xor
inc
mov
push
gs
lcall
cmp
sarb
mov
mov
xchg
add
cmp
clc
mov
pop
aas
or
loopne
fistpll
sub
jnp
mov
fists
stos
jo
ss
sahf
cwtl
pop
push
jno
fidivrs
fs
push
cmpsb
mov
subl
test
lea
jb
test
push
stos
popa
test
push
movsb
sub
push
enter
mov
mov
and
push
dec
mov
icebp
xor
lahf
xchg
pop
adc
ja
ret
stos
icebp
repnz
sbb
lahf
stos
jmp
pop
pop
jns
test
test
clc
pop
mov
insl
dec
cs
aam
mov
mov
add
imul
dec
dec
inc
push
out
push
mov
daa
in
leave
ficoml
push
add
xlat
enter
bound
add
ja
inc
xor
pop
or
popf
push
push
outsb
jno
xchg
adc
sbb
test
xchg
sbb
dec
jb
inc
in
rcrl
xor
pop
adc
adc
movsl
push
cmp
int
pop
pushf
cwtl
repz
lea
loopne
and
push
sub
test
int
jg
jmp
enter
cmp
je
mov
pop
cmpsb
bound
push
lret
inc
clc
mov
jae
xchg
push
sub
cmpsb
cli
outsb
fstpt
adc
fsubrs
mov
jnp
aaa
cli
stc
test
mov
push
repnz
push
jmp
mov
ja
xchg
movsb
push
xchg
adc
popf
pushf
sbb
xchg
xlat
sub
mov
or
xchg
ljmp
ljmp
ljmp
lods
hlt
ret
loop
pop
out
outsb
in
ret
test
rcl
aam
subl
mov
les
sbb
in
cld
out
fmul
and
jmp
lods
xchg
push
repnz
jmp
pop
lret
jg
fwait
xor
arpl
fsub
pop
aaa
into
xor
test
pop
xor
inc
and
popa
mov
xor
scas
jbe
lahf
add
cmp
mov
xchg
mov
or
insl
cwtl
aam
jbe
data16
jnp
mov
fsubrs
pop
xchg
add
or
push
push
outsl
bound
in
push
cltd
sbb
inc
es
cmp
or
pop
sbbl
and
adc
fldlg2
push
sahf
pop
mov
mov
lret
push
ja
out
cld
pop
mov
ret
shl
mov
stos
xor
and
rcr
or
in
pushf
jl
sub
inc
xchg
inc
imul
loop
fwait
push
cli
sbb
in
xchg
sbb
mov
jmp
rorl
fiaddl
popf
out
fisubrl
mov
test
fisubrs
stos
mov
cmpsb
testb
test
in
and
pop
faddp
sub
sub
mov
insl
cmp
sbb
arpl
clc
cmpsb
and
addr16
jle
cld
jg
lods
mov
mov
push
test
dec
sbb
mov
stos
lret
inc
xchg
mov
inc
mov
lods
push
movsb
out
repnz
stc
dec
std
jns
lcall
cltd
mov
mov
fs
test
xchg
jbe
es
in
in
mov
mull
push
fistps
jl
popf
les
sbb
out
popa
adc
sbb
push
sbb
mov
fisubrs
mov
imul
cli
pop
std
xlat
mov
push
jns
daa
movsb
popf
icebp
mov
fstps
test
fcmovnb
cltd
mov
xchg
dec
movsl
mov
cmp
mov
sbb
scas
pusha
dec
in
dec
push
sbb
jge
pop
ljmp
sbb
dec
aas
iret
xchg
sbb
out
pushf
enter
loop
lret
push
mov
out
sti
mov
add
lret
mov
or
jp
imul
popa
mov
mov
outsb
cmp
dec
sahf
cld
sahf
push
sub
mov
cld
shrb
xchg
pop
mov
mov
push
repnz
mov
into
mov
push
add
dec
lahf
mov
leave
sub
les
xchg
pop
adcb
movsb
jmp
call
outsl
cs
adc
mov
les
add
into
stos
pop
xchg
xchg
jmp
loopne
testb
lds
iret
ss
dec
scas
inc
mov
gs
push
loopne
and
xchg
push
dec
add
pushf
adc
incl
pop
fimuls
shll
mov
dec
mov
repz
aaa
fdivrs
mov
lea
pusha
jp
hlt
ja
aad
imul
shll
add
dec
out
push
popa
in
mov
or
sub
shl
jae
mov
ror
int
rcr
aam
xchg
popa
call
imul
sbb
mov
inc
push
pop
lret
jg
fcmovnu
ror
cmp
push
out
ret
mov
insl
or
addr16
cmp
out
ss
popa
fadd
xlat
sub
cld
sub
ret
mov
pop
out
mov
int3
pop
xchg
xlat
loop
pop
fidivrl
jno
pop
push
or
loope
ds
repnz
aad
xchg
out
push
jle
jb
sbb
cmp
fdivrs
inc
dec
push
mov
cld
push
and
ret
dec
mov
popa
je
xor
ljmp
call
aas
lret
dec
or
and
mov
daa
fnstsw
add
sti
xor
addr16
cmp
outsb
cmp
jge
aam
pop
dec
ret
mov
cld
dec
and
inc
aas
xchg
mov
mov
inc
js
fldl
lahf
cmc
cmp
sarl
cld
jg
pop
push
jae
loope
lock
xor
xchg
adc
pusha
filds
fstpt
sbbl
inc
jno
sub
pop
add
fnstsw
push
nop
iret
dec
pop
out
sahf
stc
xchg
sub
pop
mov
sbb
cwtl
in
in
push
call
sbb
aas
or
pop
shrl
ss
pop
iret
nop
lret
lret
sbb
push
js
imul
sbb
popf
stos
jnp
arpl
ljmp
push
addr16
sub
out
jno
xlat
repz
nop
add
sbb
sbb
and
gs
sub
pushf
pushf
push
jmp
sub
mov
jbe
cld
rcll
and
fwait
and
mov
or
sub
and
test
scas
xchg
ret
jnp
push
sbb
xchg
aam
loopne
xlat
inc
adcl
mov
mov
mov
sub
dec
mov
sbb
jno
dec
jno
fimuls
xor
xchg
xchg
push
and
cmpsb
repnz
pop
scas
dec
test
sti
sub
xor
out
or
push
add
dec
mov
loope
dec
js
test
sti
sub
xlat
pop
dec
int3
fcoms
adc
loopne
mov
inc
pop
pop
pop
push
mov
mov
imul
xor
dec
pop
das
test
dec
fimuls
add
and
test
sbb
or
shl
dec
xchg
das
cmc
cltd
inc
clc
fdiv
movsb
ja
xor
mov
pop
je
xchg
push
mov
cmpsl
fs
ja
outsl
scas
fistl
inc
xchg
mov
mov
push
mov
call
dec
stos
imul
or
nop
clc
ds
out
cmp
sbb
lea
sub
icebp
push
int3
dec
pushf
xchg
dec
rcrb
rolb
dec
cmp
loopne
stc
js
adc
sbb
xor
data16
jecxz
cmp
jno
xor
cmp
and
sbb
jecxz
aaa
push
add
pop
pop
mov
inc
cmpsl
pop
int
lods
outsl
xor
call
jp
adc
in
andl
pop
dec
mov
or
and
cmp
outsb
pop
aam
mulb
pop
xchg
add
loopne
adc
in
mov
cmc
out
pop
jnp
mov
repnz
adc
leave
shlb
mov
sbb
out
cmp
add
push
add
and
jmp
sar
mov
pop
movsl
sbb
xchg
ds
mov
push
ss
or
sub
xchg
test
jge
xchg
sub
xlat
push
mov
and
pop
add
inc
cli
aas
fwait
test
lds
repz
loopne
cmp
mov
inc
dec
mov
fstp
stos
insl
pop
adc
or
fs
dec
cmpsl
inc
mov
mov
iret
cmpsb
add
xor
xchg
mov
push
pop
sbb
and
push
mov
idivl
imul
les
jb
cmc
mov
add
sti
cltd
out
loopne
xor
sub
xor
mov
mov
jnp
jae
movsl
cmc
insb
insb
and
adc
test
fisubrs
lret
mov
les
cmp
mov
xchg
mov
iret
and
pushf
sbb
xchg
push
mov
sbb
and
shll
cwtl
in
mov
rolb
ret
sbb
cmp
mov
test
icebp
divl
in
cmp
sbbb
ret
test
ss
jecxz
pop
repnz
mov
jle
jnp
in
imul
and
cmovge
pop
insb
xchg
outsb
mov
hlt
movsl
test
std
jno
pop
icebp
add
fldt
and
daa
push
xor
ror
hlt
negb
sub
test
cltd
loop
roll
ret
icebp
adc
addr16
aad
and
xsavec
outsb
or
inc
jg
fisttpl
xor
je
das
fistpl
aad
sub
icebp
cwtl
mov
xchg
pop
or
sub
jge
std
or
mov
and
sub
inc
imul
scas
add
jg
aad
scas
int
loop
enter
stos
xchg
lcall
dec
aas
shl
shrl
int
mov
cwtl
cltd
int
cmp
mov
jle
fistl
adc
dec
insl
cmp
xchg
mov
sub
xor
dec
xchg
ss
add
ret
mov
cli
push
or
cmp
or
outsb
sub
test
push
mov
mov
mov
lahf
lea
sbb
xor
test
repz
shr
pop
mov
push
push
mov
out
sbb
mov
popa
insb
xchg
mov
mov
push
pop
int3
and
call
xor
insl
mov
arpl
push
mov
push
mov
ss
push
aas
sub
or
push
pop
xor
arpl
add
pop
std
popf
or
icebp
movsl
or
dec
shlb
adc
mov
je
aas
mov
push
xor
hlt
lret
adc
xor
arpl
fiaddl
mov
icebp
shll
repz
mov
jmp
mov
and
js
addb
in
jne
mov
pop
daa
mov
call
call
lcall
adcl
adc
fstl
cmpsb
push
lea
jno
imulb
jecxz
sub
xchg
aaa
cmp
mov
cmpb
push
push
mov
cmp
ljmp
sub
add
push
mov
test
stos
dec
or
add
push
add
mov
mov
hlt
fs
clc
mov
or
dec
sub
movsl
scas
xchg
outsl
leave
pop
xchg
pusha
mov
mov
mov
mov
pop
xor
arpl
sub
test
out
add
stos
sbb
ljmp
aam
sub
push
dec
sub
pop
mov
mov
mov
fsubrs
mov
cmp
in
push
jecxz
xchg
mov
stc
sub
xor
and
mov
mov
mov
mov
mov
std
inc
stos
sub
js
push
lock
jp
jb
shl
in
mov
mov
jle
mov
ljmp
fwait
lret
push
dec
adc
adc
in
insl
test
lret
stos
arpl
insl
cltd
cmp
gs
mov
xchg
call
jb
adc
pop
dec
idiv
jmp
push
out
xor
ljmp
push
jle
loope
arpl
jns
xor
xor
stos
mov
test
lret
mov
xchg
out
clc
std
sbb
sbb
dec
lods
leave
js
inc
jno
ret
jno
mov
repnz
cmc
cwtl
nop
mov
std
sub
ds
pop
lods
jns
lret
movd
aad
adc
lea
adcl
mov
imul
clc
cmp
inc
pop
mov
pop
sub
test
jl
fldcw
xchg
pop
xchg
or
add
push
xchg
sub
rorl
popa
movsb
out
and
int3
adc
add
inc
push
ret
in
test
in
or
sbb
cmpsb
fdivp
call
sub
push
adc
or
lock
lods
loope
adc
mov
mov
faddl
push
or
test
std
imul
pop
loop
dec
outsb
loope
mov
call
shrl
stos
xchg
cltd
cmp
imull
pop
ja
push
pop
cmp
orl
cmc
arpl
sbb
das
cmp
sub
stos
in
test
mov
jbe
fwait
mov
int
sarl
xor
mov
xchg
jo
data16
push
dec
pop
shrb
cmp
js
in
xchg
shrb
gs
inc
shlb
lret
mov
imul
cltd
jle
repz
jae
or
aas
clc
add
mov
sub
mov
imul
mov
sbbb
cmp
mov
add
sbb
out
aad
movsb
mov
push
push
adc
cmc
and
dec
cltd
add
pop
push
popf
ljmp
fwait
push
sbb
cmp
cmp
ljmp
dec
and
cmpsl
sub
test
pop
xchg
jne
shlb
mov
or
adc
les
mov
pop
inc
jg
sub
adc
and
inc
lcall
xchg
sbb
js
mov
sbb
insb
ljmp
mov
pusha
pop
sbb
mov
and
pop
addl
movd
xor
out
cmp
popa
testl
push
jp
mov
push
jb
dec
dec
pop
movsl
xchg
adc
loope
pop
cs
mov
xchg
ret
mov
jl
pop
inc
cld
mov
lods
xchg
scas
mov
ja
inc
lods
andb
sub
dec
test
outsl
mov
push
in
aas
dec
inc
fmuls
mov
lods
enter
cmpsb
mov
mov
movsb
rcll
xchg
adc
std
push
push
mov
jl
dec
lahf
sub
lods
dec
push
shufps
popf
xchg
xchg
and
out
mov
stos
fnsave
movsb
cmp
sub
push
mov
dec
sbb
mov
aaa
lock
idivl
mov
or
int3
mov
adc
jbe
roll
jns
sub
lahf
or
cmpsl
addl
test
lock
je
sub
push
in
je
out
in
pusha
jnp
adc
js
hlt
pop
in
pop
inc
push
and
inc
or
cmp
mov
cld
mov
dec
nop
sub
cmp
shr
pushf
add
xor
fldt
sub
fisubl
jmp
or
orb
testb
dec
test
jne
test
jbe
and
jmp
aam
push
jbe
lods
fcmove
and
inc
mov
bound
mov
loope
jecxz
sub
push
loopne
subb
cltd
popa
cmpsl
lcall
xchg
scas
test
xchg
pop
xor
inc
mov
roll
jbe
lea
inc
xor
int
push
ja
adc
mov
inc
icebp
push
push
add
subb
es
fadds
add
xlat
mov
mov
cltd
insl
mov
inc
enter
pop
push
push
cmc
clc
test
jae
mov
out
xor
or
jle
mov
dec
and
mov
mov
je
jmp
int3
pop
popa
insl
pop
test
lods
cmp
cld
inc
dec
pushf
mov
ja
mov
loopne
mov
lret
push
je
ret
and
xchg
jle
pop
dec
enter
or
mov
rorl
mov
outsb
mov
call
sbb
adc
movsl
loope
cwtl
fisubl
add
push
sub
jecxz
pop
pop
push
lods
sub
add
arpl
cs
dec
dec
nop
jno
sbb
ljmp
lock
xchg
dec
xor
ss
dec
and
scas
dec
mov
lahf
fstps
mov
cmpsb
pop
cmp
cmp
jmp
dec
jg
scas
andb
aad
cmpsb
imul
adcb
loope
push
movsb
mov
xor
mov
and
repz
xchg
xchg
mov
add
fists
ret
sub
push
and
leave
add
leave
stos
mov
repnz
jmp
add
and
xlat
outsb
jbe
xor
mov
mov
sbb
mov
out
dec
xor
jge
movl
in
das
les
out
push
fstpl
dec
shl
lods
jb
test
xchg
lret
add
rcl
rolb
cmp
pop
sarl
jbe
xchg
lds
xchg
shll
jo
sub
call
and
in
xor
mov
out
mov
sbb
loop
pop
iret
lea
cmpl
ret
sbb
stos
in
adc
cmc
push
mov
fisttpll
lahf
adc
ds
mov
das
lahf
sub
push
cmp
mov
std
push
mov
das
mov
enter
xor
mov
inc
loopne
cmp
xchg
ja
shlb
jp
icebp
inc
ret
mov
sub
or
cmp
data16
inc
idivl
movsb
jge
mov
jnp
mov
inc
imul
mov
lret
inc
fdivl
out
push
jo
fbld
adc
icebp
lock
aam
and
loop
vmovdqu
mov
ja
imul
fxch
repnz
test
cmc
or
jno
fldl
dec
adc
add
pop
pop
mov
jnp
nop
sub
scas
push
test
test
pop
ja
add
std
mov
fsubl
cmp
mov
ja
loop
popa
sbb
subb
ret
ss
mov
mov
lret
xchg
out
in
popa
pop
outsl
fstpt
cmp
sub
inc
lds
aam
in
push
cmp
lods
fadds
jg
push
xor
jae
call
outsl
and
rcrb
adc
into
ret
or
leave
loope
add
cmc
insb
cmpsl
int3
mov
xor
les
lcall
lods
push
or
aaa
xor
aas
pop
mov
in
or
out
sub
js
ljmp
mov
iret
fsubrs
ret
push
dec
idivl
pop
adc
adc
cmp
adc
jp
out
mov
push
cld
adcl
cmp
inc
hlt
aas
mov
fnstenv
lds
push
xchg
and
mov
lcall
or
in
xchg
mov
vpsubb
cmpsb
or
sbb
push
jecxz
dec
adc
pop
ljmp
psadbw
fildl
jp
jbe
add
enter
fdivs
sti
sarb
adc
ljmp
icebp
loop
push
insl
test
out
inc
and
mov
and
ds
jl
ror
adc
divl
adc
jecxz
dec
cmpsb
call
cmc
mov
loopne
stos
add
inc
sub
rcrl
xor
mov
scas
mulps
inc
lcall
sbb
jecxz
push
lcall
xchg
mov
enter
push
add
sbb
mov
inc
js
jp
inc
push
int
xorl
push
xchg
lods
xchg
scas
movsb
cmp
mov
cmp
mov
sbb
and
sbb
push
cli
or
and
add
dec
mov
adc
ret
add
add
and
mov
mov
jbe
pop
sar
sub
push
dec
js
das
outsb
ds
test
das
scas
xor
adc
cpuid
stos
sub
ds
pushf
jns
mov
negl
test
sbb
cwtl
xchg
pusha
sub
in
outsl
dec
stos
sub
aas
scas
ds
fisubs
ret
fisttps
or
or
xchg
rcll
xlat
pushf
into
daa
nop
push
cmpsl
out
push
sbb
leave
push
push
pop
or
and
lcall
fmull
mov
xor
inc
mov
imul
pusha
push
aaa
scas
pop
adcl
xorb
ja
mov
pop
sub
adcl
fdivr
or
or
cmp
dec
test
xchg
hlt
inc
out
in
pushf
lods
sub
fisubs
and
dec
inc
stc
jmp
in
int3
pushf
and
nop
stc
mov
dec
sub
fisubrl
sbb
popa
mov
ret
ret
sbb
and
je
rcll
clc
aad
mov
push
loopne
pop
add
outsb
cwtl
add
cmpl
pop
pop
sub
lea
mov
inc
aam
pusha
lods
inc
mov
aam
adc
pop
loope
sub
daa
xchg
push
xchg
xchg
jnp
stos
xchg
pop
mov
inc
inc
les
adcl
xchg
test
aaa
jno
xchg
or
dec
rorl
mov
stos
fcompl
fmul
cmp
add
dec
dec
idivb
inc
int
fwait
bound
mov
xchg
scas
popa
arpl
rcrl
sbb
outsb
pop
movsb
bound
inc
stc
js
jmp
cld
aad
shl
subl
dec
loope
sub
jle
dec
out
dec
dec
stos
call
mov
ss
pop
fnsave
ljmp
loope
scas
mov
sbbb
or
jno
out
outsb
sbb
or
ret
mov
push
push
mov
rol
imul
and
hlt
xor
ds
in
mov
pop
sbb
arpl
mov
dec
push
stos
fs
pushf
sbb
call
out
xor
xor
xor
ss
inc
or
jecxz
shrl
fs
outsb
andb
loopw
mov
adc
pop
pop
or
jmp
pop
inc
jns
dec
sub
std
mov
lds
cmp
daa
loope
lods
sub
mov
mov
push
cwtl
xchg
js
mov
xlat
fisubrl
lea
push
push
or
pop
sub
xchg
mov
cltd
insl
push
iret
push
sbb
lods
pop
jg
pushl
in
cmp
cli
push
dec
pop
fldl
cltd
mov
aas
cmp
push
mov
cmc
add
inc
inc
iret
jp
xchg
mov
dec
fmull
fstpt
adc
sub
arpl
inc
aas
outsb
loope
xor
xchg
mov
mov
pusha
sub
adc
mov
push
dec
bound
jnp
and
hlt
sahf
addl
and
and
dec
inc
adc
fs
pop
cli
bound
in
cmp
addr16
pop
cmp
mov
dec
fsubl
iret
push
pop
mov
ljmp
fadds
push
push
imul
shll
lods
lods
pop
dec
lods
fisttps
call
outsb
mov
push
dec
xchg
adc
aaa
xchg
push
inc
std
mov
imul
pusha
jg
jno
xchg
call
or
shlb
jnp
xchg
xchg
or
inc
aas
cmp
jae
scas
movsb
repnz
lahf
add
and
sbb
push
out
xor
jns
out
xor
aad
and
enter
jo
je
dec
pusha
sahf
lret
cmp
scas
fimuls
shll
mov
jecxz
push
popf
in
and
cmpsb
add
and
pop
pusha
xchg
inc
or
outsl
in
xor
int
into
push
pop
dec
int3
mov
rorb
mov
lea
mov
add
addr16
dec
es
inc
insl
lods
divb
lock
xor
xor
insl
jne
in
add
mov
mov
ljmp
pop
xchg
push
add
imul
dec
dec
xchg
sti
mov
jb
jnp
inc
pop
cmp
in
xchg
imul
es
lock
xor
inc
movsl
jo
lret
jp
jg
jae
push
inc
dec
sbb
arpl
jg
sub
dec
push
das
sub
aas
jno
je
mov
cld
lea
mov
jb
mov
cmpsl
or
dec
mov
cs
ljmp
pop
scas
pop
iret
das
xchg
mov
push
repz
lock
enter
in
cwtl
addb
test
and
sbb
adc
lds
or
cld
jbe
pop
dec
fcompl
jmp
pusha
dec
push
inc
pop
xor
out
movsb
cmp
dec
aas
mov
and
push
xchg
leave
add
jge
in
xor
mov
push
pop
adc
pop
inc
xorl
xlat
fisttps
lret
outsb
lea
push
xor
cs
xchg
orl
xor
inc
scas
leave
dec
imul
add
push
lahf
and
xchg
sbbb
insb
out
mov
dec
call
mov
pop
sub
rclb
rcl
sbb
sub
loope
xor
xor
popa
mov
xchg
fimull
popa
bound
jecxz
sahf
jp
jp
rolb
movsl
jecxz
jecxz
outsb
add
cmpsl
dec
insb
das
outsb
xchg
xor
push
addr16
psrlw
lret
xor
pop
orl
pop
mov
subb
mov
mov
push
bound
mov
sub
or
inc
dec
sub
decb
sti
inc
lock
cwtl
sub
xchg
out
pop
xchg
ljmp
cmpsl
repnz
and
cs
sarb
push
fisttpl
pop
sbb
sbb
inc
aad
xor
les
stc
push
cli
in
sub
push
out
xchg
xor
mov
dec
outsl
repz
push
mov
add
fbstp
out
test
lcall
xchg
js
mov
subb
xor
ret
mov
xor
add
mov
cmpsl
into
push
dec
jle
mov
bound
xor
cmpsb
cmp
mov
enter
gs
je
pop
subl
int
jnp
mov
push
push
lahf
paddq
ror
ss
ror
or
cmp
aam
cs
add
ss
out
adc
insl
daa
cltd
inc
sbb
dec
daa
adc
mov
jb
inc
mov
decl
lret
and
push
aam
cmpsb
dec
xchg
insl
divl
sahf
push
stos
sbb
pop
sbb
fisubs
dec
sahf
arpl
cltd
out
add
jp
movsb
push
sbb
sarl
les
inc
adc
cmpsl
jno
aam
sbb
les
fidivrl
and
mov
jno
mov
mov
jp
sub
fistpl
inc
fs
clc
sub
adc
in
addr16
lahf
js
cmp
and
or
mov
out
lcall
mov
imul
aas
in
mov
cs
movl
adc
jb
out
sub
add
stos
fimull
jno
fsubs
movsb
sub
shlb
cmp
pusha
cwtl
mov
cmc
sbb
iret
push
mov
inc
xchg
jle
dec
in
lcall
add
jne
cwtl
mov
mov
frndint
add
dec
cmovge
loopne
mov
jl
push
sbb
jo
aas
test
pushf
push
hlt
and
stos
and
rcl
dec
xor
sbb
push
dec
mov
imulb
pop
and
into
inc
scas
adc
mov
inc
lods
aas
xor
mov
into
cmpsb
aad
push
inc
push
sub
ret
push
and
mov
gs
inc
mov
mov
cmp
jb
or
aas
push
insl
mov
jne
adc
insb
cli
mov
sub
inc
and
outsb
enter
jecxz
dec
pop
loope
inc
push
ss
clc
or
dec
jl
addb
inc
jae
ret
ss
shr
loop
scas
push
xchg
outsb
loopne
fyl2xp1
cmp
sbb
add
fneni(8087
jb
mov
bnd
add
loopne
loopne
fwait
jnp
xor
cld
push
fdivs
mov
rcll
mov
cltd
stos
lods
jl
adc
xchg
call
push
mov
mov
ret
test
adc
sbb
sub
movsl
sbb
outsl
mov
lret
xor
dec
addr16
and
inc
es
iret
mov
cld
push
mov
fldl
cmp
mov
in
sbb
push
shll
or
mull
push
jo
mov
mov
xor
mov
add
sbbb
aam
in
push
mov
fstpl
push
jge
mov
add
arpl
push
ja
push
std
xor
xchg
inc
rolb
fcoml
outsb
out
jae
addb
push
dec
std
dec
inc
out
cmp
and
mov
xchg
add
xor
je
jmp
daa
jecxz
popf
sbb
jne
movsl
pop
mov
test
pusha
sbb
fiaddl
cmc
jb
sbb
mov
lahf
pushf
xchg
cltd
push
test
pop
fwait
das
in
sub
hlt
push
and
add
scas
dec
loopne
daa
mov
js
stos
ficoml
push
fwait
in
iret
mov
add
fsts
pop
jno
inc
jne
sub
cmp
pop
repz
push
setns
pop
mov
jmp
fisttpl
lret
out
lods
std
filds
lret
roll
xchg
xor
xchg
adc
icebp
adc
or
mov
sti
outsb
outsb
js
je
insb
les
int
dec
mov
adcl
into
aas
pop
inc
mov
repz
lds
stos
les
out
int
mov
das
pop
out
mov
xor
xor
xlat
and
in
cmp
mov
cmc
stc
out
cmp
inc
and
push
test
enterw
cmp
add
jo
add
fistl
mov
sub
addb
or
js
outsb
push
adc
int
mov
lea
dec
sub
adc
daa
popf
cmc
sub
push
inc
xchg
mov
adc
enter
add
notl
add
mov
lods
jge
in
cmp
cs
sub
fsts
std
adc
xchg
ud1
lret
mov
mov
jle
push
mov
fdivl
cmpsl
inc
mov
jo
popa
adc
sub
add
adc
push
fwait
xchg
stos
xchg
testl
mov
rorb
dec
cmp
das
ljmp
imull
mov
test
loop
aad
adc
jecxz
push
outsl
popa
sbb
sarl
in
push
addr16
pop
arpl
sub
push
inc
push
or
adc
sbb
popf
icebp
inc
into
adc
es
mov
adc
jb
cmp
sahf
insl
or
stos
jg
pop
stos
lcall
jmp
mov
sbbl
cld
fidivrs
dec
shrb
lods
pop
sbb
adc
pop
aad
fst
and
loopne
inc
cmp
xchg
xor
mov
in
test
jo
rolb
mov
call
mov
mov
and
dec
pusha
iret
mov
mov
lcall
popa
sbb
push
and
inc
jle
cmp
push
je
lahf
push
xchg
js
lahf
ds
push
aaa
repnz
xor
pop
mov
dec
pop
push
push
pop
xor
cs
loope
jg
mov
arpl
xchg
jmp
ljmp
mov
push
aad
dec
ds
je
arpl
cmpsb
aas
insb
or
fcomi
aad
push
and
std
mov
xor
mov
leave
lahf
call
sub
arpl
jp
loopne
or
mov
jmp
inc
push
jge
inc
xor
jbe
pushf
dec
inc
sahf
mov
arpl
xorl
push
sti
imul
aad
sahf
jmp
push
inc
mov
cltd
jnp
pop
push
arpl
xor
push
xchg
xor
pop
mov
mov
jns
fisttps
jo
xchg
push
or
mov
jbe
mov
loopne
mov
rclb
popf
mov
sbb
mov
push
fldcw
sub
stc
mov
ljmp
in
jnp
pop
out
push
or
ret
push
push
push
add
out
fs
pop
jmp
aaa
mov
ds
xor
daa
or
scas
mov
fwait
imul
dec
adc
ret
cwtl
adc
mov
scas
sub
cli
mov
inc
sbb
icebp
sbb
inc
push
aaa
adc
mov
adc
push
pop
clc
sub
lods
call
mov
cltd
and
pushf
push
push
lahf
es
shll
shll
sbb
jp
jne
insl
cmpsl
xor
outsl
ret
and
popf
adc
push
pop
xor
sbb
sti
and
js
mov
outsb
inc
xor
mov
push
jmp
pop
xor
dec
insl
mov
push
lea
mov
mov
mov
push
lods
sub
je
repz
sti
in
out
jl
jl
mov
pushf
cmp
imul
cmp
xchg
call
fdivs
add
pop
xchg
adc
jp
push
xchg
dec
cwtl
dec
mov
aam
stc
mov
mov
mov
mov
ss
pop
outsl
popa
dec
test
icebp
mov
or
sub
bnd
xor
cli
test
ja
cmpsl
lret
call
and
sub
and
sbb
movsb
out
inc
insb
mov
loope
rcrb
stos
xor
das
jno
test
cli
insb
aaa
pop
fildll
push
jge
loopne
mov
dec
test
or
sbb
aam
fwait
test
or
cmp
mov
shll
adcb
pop
cmpsb
loop
jl
or
arpl
gs
xchg
push
test
test
mov
dec
cs
mov
in
mov
jl
andl
std
test
cmp
push
inc
dec
inc
jae
imul
mov
movsl
mov
push
xor
lods
ss
std
xchg
hlt
dec
lds
adc
push
pop
xor
in
out
mov
loope
xchg
cmp
ja
mov
lock
fiadds
push
insb
mov
frstor
sub
addb
inc
cld
std
fs
icebp
fwait
add
sub
mov
jecxz
mov
aam
mov
mov
and
es
jae
addr16
cli
jne
dec
xorl
popa
jb
xor
aas
mov
out
xchg
sahf
or
adc
xchg
in
ljmp
cmp
xlat
or
fwait
cmp
push
inc
out
cltd
pop
in
hlt
test
push
cmp
or
gs
push
mov
xchg
add
pop
xorl
lds
sbb
lea
cmp
pop
cmp
sub
xor
aaa
xor
fldenv
push
rcr
fnsave
add
sbb
call
push
xor
and
mull
pusha
fisttpll
xchg
or
mov
cld
dec
frstor
sub
lods
and
jo
test
pop
shrb
aam
js
add
data16
mov
out
sub
sarb
adc
stc
cmp
inc
sbb
ret
push
sbb
jns
pop
into
mov
or
lods
pop
push
out
xchg
fimull
lret
inc
ret
inc
adc
dec
bound
mov
xchg
sub
fstpt
ss
hlt
outsl
aam
pop
aas
bound
sub
and
fidivs
mov
out
aad
and
popf
je
push
aaa
sbb
mov
js
dec
inc
sahf
lcall
es
cmpsb
clc
daa
lret
loopne
jl
mov
int3
jb
aam
push
scas
pop
xchg
push
dec
pop
inc
jp
gs
inc
mov
lea
add
fisttps
or
std
sbb
push
out
sti
stc
pop
roll
nop
push
push
mov
insl
jmp
mov
fsubs
sbb
fists
and
gs
ljmp
xor
mov
and
loope
push
push
loop
clc
ds
inc
mov
ja
mov
xor
push
test
sub
jo
push
popf
jnp
mov
xchg
mov
push
and
inc
push
jle
sub
pushl
scas
shl
cwtl
outsl
popa
lock
sbb
pop
push
sti
add
loope
pushf
xchg
scas
fsub
rcll
xor
rorb
add
ljmp
test
mov
fnstsw
jmp
in
xor
xor
jl
cmp
movsb
test
mov
sbb
sub
aaa
xchg
push
ds
pop
mov
jmp
jge
dec
jbe
dec
sub
lcall
cwtl
push
pop
pop
lret
int
inc
mov
and
push
loop
jl
int3
lea
mov
in
scas
out
lcall
mov
leave
cmp
dec
loop
lret
pop
and
sar
push
xchg
jo
fs
jno
movsb
int3
mov
repz
add
inc
and
nop
psrld
xchg
loopne
pop
es
daa
jecxz
pop
cmp
cmp
imul
adc
sub
dec
pop
orb
inc
popf
and
pop
scas
mov
xchg
inc
rcll
mov
ror
jmp
inc
inc
push
gs
adc
push
lahf
inc
dec
push
movsl
sarl
neg
mov
jno
ss
adc
mov
ret
imul
lret
mov
shll
lret
xor
or
outsl
xor
or
adc
leave
imul
jns
test
dec
shr
adc
or
mov
pop
stos
sbbl
xchg
xor
dec
test
gs
push
adc
ss
jae
jecxz
dec
pop
fisubl
xor
mov
jns
pop
xorl
cmpb
push
addl
dec
testb
and
lods
dec
int3
and
insl
clc
test
js
roll
xchg
imul
aas
cmp
in
movsl
adc
xchg
ret
ja
clc
jns
push
and
insl
push
jno
cld
pop
xchg
xchg
stos
push
test
lret
fsub
cli
pop
ljmp
inc
test
test
dec
or
scas
xchg
mov
lods
out
mov
push
movsb
jecxz
loopne
xchg
push
outsl
ficompl
rcrl
jge
out
or
or
jmp
mov
jb
test
pop
int3
mov
sbb
in
cltd
xchg
sub
sbb
pop
pushf
mov
push
mov
daa
scas
sub
push
jmp
cld
test
adc
cmp
loop
iret
pushf
add
cli
ja
push
push
xchg
repnz
jmp
mov
shll
pop
into
popa
add
loopne
xor
addr16
sbb
das
negb
mov
roll
pushf
lcall
aam
mov
fisubl
call
jle
and
xor
or
mov
adc
test
cmp
mov
les
arpl
pusha
loop
int3
and
jb
dec
push
aam
pop
insl
or
enter
lcall
mov
dec
out
mov
mov
mov
pop
subb
pushf
mov
mov
lods
push
and
push
lods
push
out
push
xor
push
in
inc
sahf
mov
or
repz
mov
mov
notb
cld
mov
jne
mov
cmc
xchg
dec
movsl
inc
xchg
pop
push
sub
mov
adc
mov
mov
test
ficoml
out
enter
add
ljmp
in
pop
loope
sbb
mov
xor
mov
xlat
cltd
les
idiv
adc
or
jno
out
stc
or
cmp
mov
insl
adc
fdivs
mov
test
pop
incb
ret
dec
frstor
jnp
fdivl
fwait
mov
jg
mov
in
dec
push
stos
and
xor
fimuls
stc
sub
dec
iret
rcll
rcrb
out
test
mov
mov
mov
xchg
mov
scas
in
pop
mov
adc
push
inc
lcall
xchg
sbb
ds
xchg
or
pop
adc
out
mov
faddl
mov
dec
mov
jo
jnp
aad
mov
out
std
js
inc
fsubs
mov
jnp
push
cmpsb
or
xchg
cltd
cmp
es
loopne
adc
ss
adc
jns
sub
inc
sub
sub
or
adc
xchg
jecxz
xor
clc
test
add
jg
and
cli
int3
scas
ret
leave
jecxz
or
roll
mov
push
mov
stos
sbb
or
fcomip
shlb
inc
jg
stc
mov
pop
or
gs
and
jnp
aas
pop
xchg
lods
cs
or
mov
test
push
sahf
and
out
out
sub
adc
mov
icebp
xor
sahf
or
mov
sub
sub
adc
nop
stc
mov
sub
lret
push
mov
adc
cld
addr16
pop
add
mov
add
and
loop
or
sub
pop
or
cmp
fidivs
sti
int3
or
js
pop
or
out
in
xchg
add
mov
clc
xchg
jnp
xchg
jne
push
rcl
ljmp
int3
out
rcr
xchg
fidivrs
nop
test
cmp
add
loopne
outsb
ja
push
xchg
fcoms
cmpsl
adc
mov
cmp
mov
mov
mov
or
mov
and
scas
and
mov
add
fisubrs
xor
push
mov
cmp
xchg
push
fisubrs
add
ja
xchg
xchg
and
inc
cld
xor
or
dec
xor
les
addl
iret
mov
mov
and
xor
mov
xchg
xchg
push
xchg
push
mov
imul
arpl
nop
movsb
and
aas
loop
shll
test
mov
push
jne
jo
in
mov
inc
je
shlb
movsb
shrb
movsl
xchg
add
adc
inc
int3
dec
xchg
jbe
shrl
mov
test
pop
or
mov
or
and
sub
es
xchg
lock
jp
xor
arpl
test
xor
insl
aaa
cwtl
mov
xor
xchg
or
jb
ljmp
fildl
push
pop
cmc
dec
fists
xchg
cmp
dec
adc
push
dec
clc
fimull
jo
fucomp
loope
jp
ret
sbb
mov
lahf
pop
in
popa
dec
mov
mov
fwait
mov
dec
pop
adc
shrl
repnz
add
clc
out
fisttpl
test
cmp
mov
cmpsb
cltd
adc
mov
stos
nop
addr16
fnstenv
iret
movsl
xor
add
mov
daa
cmp
arpl
gs
aad
clc
cs
mov
pop
lahf
sbb
mov
cmc
sub
in
mov
fdivrl
adc
notl
sarb
sub
rcr
jmp
fcmovnu
movsb
jnp
lods
pop
movsl
and
inc
xchg
dec
iret
fwait
shll
xor
stos
sub
std
addb
aaa
test
cmp
mov
mov
lret
xchg
xchg
sub
enter
popf
sti
scas
xchg
test
inc
and
dec
idiv
dec
add
jp
orb
lock
repnz
cmpsl
sbb
dec
stc
inc
cmp
mov
dec
pop
pop
xor
pop
jae
mov
mov
xchg
scas
fists
xor
fwait
shrb
ret
add
push
popf
pushf
fimull
lret
imul
popa
pop
cmp
adc
mov
jae
adc
adc
mov
cld
jb
add
xlat
loop,pn
dec
adcl
test
lea
pop
in
and
mov
ret
les
dec
jle
sarb
mov
sbb
mov
jp
mov
cmp
pop
push
or
popf
xlat
mov
pop
xchg
call
pop
sub
pop
xchg
inc
cld
adc
sti
cmp
lods
sub
repnz
rcrb
sub
jp,pt
xchg
imul
outsl
test
je
xchg
ja
and
gs
push
xchg
hlt
sarl
push
pop
push
push
and
inc
fs
sbb
add
mov
mov
jg
icebp
mov
add
cltd
cmpb
pusha
sbb
xlat
mov
jns
cmpsb
jmp
mov
fistps
loopne
dec
pop
lock
mov
flds
and
xchg
daa
rolb
ss
out
rolb
shl
popa
sbb
mov
cmp
mov
mov
mov
movsb
js
sahf
add
push
loope
jmp
sub
cmp
or
sub
loop
fsubrl
into
mov
sarl
pop
bound
add
fucomp
mov
fldl
fimull
out
fidivrl
and
mov
leave
fimuls
push
lret
fisttpl
loop
adcl
insb
cmp
mov
insb
pop
jp
mov
inc
inc
jns
test
jg
pop
leave
cmp
adc
jge
jae
mov
cmc
hlt
mov
dec
mov
lea
movsb
in
push
jl
or
and
xor
fwait
xlat
pop
loop
cmp
ret
sbb
lods
test
orl
fcoms
mov
rorb
pop
or
imul
stos
or
jg
mov
out
or
mov
xor
jl
cli
or
cmp
daa
fs
je
daa
insb
mov
jno
ja
add
jl
nop
lock
push
lea
pop
ljmp
sar
lods
or
subl
and
repnz
xchg
adc
out
sbb
roll
mov
loop
push
pop
sti
test
loopne
lea
outsb
inc
repnz
sbb
adc
xchg
cli
and
jl
push
inc
push
lea
subl
icebp
cli
push
lea
pop
jo
mov
scas
cmpsl
or
cmp
jbe
mov
inc
cmp
jecxz
xchg
mov
sti
add
inc
mov
cmpl
mov
aam
and
repnz
xchg
imul
and
add
xor
outsb
add
movsl
fwait
mov
out
jle
mov
call
cli
add
dec
fwait
adcb
jae
sti
inc
aam
test
sub
jmp
and
into
mov
pusha
hlt
ret
bound
dec
leave
outsb
and
out
js
enter
sub
jo
dec
sbb
mov
or
xchg
int
shlb
icebp
scas
and
insl
ds
push
loop
mov
cli
xchg
loopne
inc
pop
addl
push
sub
js
sub
cmp
scas
dec
es
dec
outsb
lret
dec
rcr
pop
sbb
ss
push
es
ret
jecxz
dec
bound
push
jb
inc
xchg
rorb
cmp
mov
gs
and
sbb
repnz
mov
stc
xchg
sub
loope
push
sbb
cwtl
ret
int
sbb
out
mov
mov
xchg
jecxz
mov
lds
dec
mov
cmp
data16
sbb
sbbb
xor
shr
push
mov
dec
jl
subl
pop
mov
xor
into
mov
mov
jns
les
sar
dec
out
mov
push
mov
into
inc
arpl
xor
jbe
mov
out
jmp
std
sbb
jl
rorl
mov
fiaddl
pop
dec
inc
out
adc
and
pop
jne
inc
stc
push
xor
js
lcall
sbbb
repz
imulb
pop
in
jl
es
stos
ret
sub
adc
sub
nop
fistl
add
mov
stos
jmp
mov
push
ret
imul
inc
or
and
xchg
pop
sub
pop
scas
cltd
data16
stos
movsl
xchg
into
and
mov
ret
pushf
pop
loopew
pop
sbb
cmp
cmpsb
pop
dec
or
pusha
xor
arpl
sub
and
ss
cli
push
lret
shll
movsl
push
pop
test
imul
xchg
inc
cmp
aaa
lcall
xlat
nop
inc
test
or
and
gs
test
mov
mov
lret
fcmovu
fst
pop
pushf
push
flds
daa
fnstcw
iret
movsl
aad
loopne
clc
push
xor
sbb
mov
xchg
roll
into
mov
xor
mov
dec
mov
dec
or
dec
ja
jg
cmp
lahf
cmpsb
adc
sti
push
stos
mov
jle
add
popf
and
lods
in
lods
pop
dec
dec
ja
sub
mov
call
add
mov
pop
sar
adc
lea
jle
js
push
or
cmpsl
cmp
pop
rcrb
clc
sub
push
mov
aad
insb
int3
and
mov
test
test
gs
popa
iret
clc
addl
mov
aas
mov
push
jmp
pop
jle
lcall
lods
or
js
cwtl
repnz
xchg
mov
cmp
dec
mov
leave
xor
imull
push
xor
dec
inc
pop
pop
fwait
xchg
insb
xchg
or
imulb
pushf
xchg
sbb
inc
jo
pop
lock
add
mov
rolb
push
push
pusha
out
xor
stos
mov
les
and
je,pt
out
sahf
inc
inc
lahf
das
punpckhdq
pusha
inc
cltd
and
rcr
in
lret
cmpsb
dec
popf
jecxz
adc
out
sbb
rcrb
stc
popf
adc
mov
push
data16
movsb
pop
clc
pop
int3
xchg
popa
jmp
pop
xchg
dec
mov
dec
movsl
jbe
iret
and
jg
adc
mov
sub
xor
pop
mov
inc
cmp
xchg
push
dec
nop
and
sti
sbb
lock
fisubrl
leave
push
xor
pusha
mov
jl
push
xchg
adc
movsl
loopne
out
sbb
pop
ffree
cld
xchg
adcb
sti
sub
scas
popf
pushf
pop
mov
pusha
fwait
popa
mov
mov
inc
or
ljmp
es
lds
pop
and
cmp
sarl
iret
test
mov
inc
imul
cmpsb
push
ljmp
dec
adc
mov
psrld
lock
xchg
in
icebp
loopne
imul
sub
mov
push
lret
and
xchg
fldcw
jmp
xor
pop
rcrb
jnp
arpl
jnp
xor
scas
pop
insl
push
inc
stc
cmp
add
or
sub
adc
sti
in
loopne
xor
jno
stos
int
int3
inc
rorl
xor
dec
jne
mov
scas
in
mov
je
stos
call
stc
repnz
mov
imul
or
cwtl
dec
or
jg
xchg
icebp
pop
cmp
inc
add
repnz
sti
mov
cli
inc
imul
dec
sarb
mov
adc
enter
mov
jp
sbbl
mov
xchg
mov
dec
push
cmp
fwait
jns
ret
dec
xor
lret
push
imul
pushf
jbe
lea
fwait
out
dec
fmull
aad
push
inc
insl
or
mov
xchg
mov
mov
pop
roll
pop
fwait
inc
sbb
and
inc
jo
push
scas
push
mov
jl
fwait
cmc
cwtl
mov
xor
push
sub
mov
add
jb
rorb
jne
lods
add
pop
xor
pop
sbb
sub
test
mov
xchg
mov
cltd
cwtl
sbbl
xchg
push
aam
clc
jp
int
lahf
push
lcall
inc
or
stc
xor
mov
mov
sub
jmp
dec
mov
out
xchg
jmp
push
test
or
popa
dec
jmp
hlt
add
add
bound
mov
mov
in
out
sub
insl
shl
jae
xor
cmp
sbb
mov
jmp
in
lods
jae
data16
cltd
fs
jl
sub
jl
xchg
enter
hlt
cmp
push
scas
dec
movsl
stos
push
add
pop
fsubp
pushl
mov
sub
adc
inc
cwtl
clc
dec
add
fs
xchg
xchg
or
mov
mov
paddsb
popf
cmc
push
pop
pop
xchg
fwait
test
dec
xchg
dec
push
sub
cmp
mov
dec
ds
cmp
or
mov
inc
ficomps
sub
pusha
mov
cmc
js
stos
mov
inc
dec
ret
dec
movsl
js
dec
rorb
in
fisubl
xchg
push
insb
add
xorl
stos
int
push
push
sbb
xorl
lcall
ret
mov
pop
pop
clc
and
cmpl
xchg
jo
cs
adc
mov
out
xchg
mov
jl
cwtl
popf
jle
lock
mov
and
mov
cmpb
push
cmp
mov
jmp
sbb
adc
add
mov
mov
bound
sub
fucomp
mov
inc
sub
test
scas
adc
adc
cli
push
aas
cmpl
sti
enter
pop
icebp
xbegin
aas
pop
xchg
cmpsb
arpl
js
rclb
scas
pop
out
mov
xchg
fidivrl
xchg
sti
fidivrl
jb
mov
pop
in
cmc
xchg
lcall
dec
stc
fcmovnbe
cmp
sbb
pop
adc
int3
xchg
mov
cmp
mov
adc
ret
sti
adc
adc
jno
inc
or
cmp
pop
pop
xchg
sbb
push
dec
dec
les
and
cmpsb
in
xchg
sbb
xchg
push
pop
or
sbb
push
dec
cmp
dec
loopne
sub
push
ds
mov
fwait
adc
icebp
fisttps
mov
xchg
and
pop
stos
sub
pop
lahf
lock
enter
and
insl
sbb
mov
imul
icebp
sbb
out
sbb
ret
xchg
adc
mov
lcall
push
jno
and
out
sarl
inc
mov
xor
add
inc
add
cmp
jb
cmpsl
aad
cmpl
movsb
sub
roll
dec
leave
inc
mov
pusha
adc
inc
pavgb
pop
dec
lds
push
xor
or
lret
and
ret
and
push
jns
clc
add
test
lods
pop
jae
jae
jno
and
dec
jg
or
dec
mov
jle
outsl
test
xor
add
pusha
push
jae
fstpt
shlb
in
test
sub
les
fldt
std
dec
dec
loopne
dec
test
outsb
push
and
or
loope
popa
xchg
outsl
mov
aas
aas
test
sub
cli
jne
je
push
xchg
push
in
xor
nop
dec
dec
xchg
inc
pop
aaa
bound
mov
clc
pop
add
in
mov
shll
pop
out
jno
movb
mov
sub
sbb
jnp
sbb
movsl
or
dec
pop
orb
sbb
sbb
les
mov
sbb
pop
push
cmp
mov
pop
inc
out
lods
pop
movsb
add
inc
into
out
rclb
xchg
pop
les
xchg
cmp
add
cs
sbb
ds
loop
movsb
pop
les
xchg
xchg
es
pusha
jp
cmpsb
call
mov
and
cld
les
movsl
popa
xchg
add
mov
mov
lods
xor
ljmp
mov
mov
xor
xchg
jge
fcom
adc
movsl
cld
mov
stos
pop
jg
out
imul
into
lock
jle
pop
cmp
insb
rorb
sub
ret
std
or
sub
in
mov
cmpb
add
es
cmp
push
inc
in
sbb
cltd
jmp
aaa
or
pop
cs
inc
jle
outsb
dec
inc
mov
shll
cmp
add
out
cmp
pusha
add
dec
pop
jecxz
dec
popa
push
or
jg
cmpsl
add
sub
mov
xorl
ja
jecxz
xlat
xlat
xchg
push
je
xor
cmpsb
cltd
aaa
mov
in
mov
cmpl
stos
xor
pusha
adc
nop
push
cmpsl
ds
movsb
stos
pop
jp
lea
daa
or
jns
lcall
ss
aam
xor
sti
outsb
mov
in
fcomip
stc
iret
icebp
popf
rcr
sub
xor
pop
pop
and
dec
cwtl
lret
adc
arpl
stc
xchg
xor
xor
in
insl
in
movsb
inc
adc
add
add
std
adc
fsubrl
xchg
mov
and
test
int3
or
pop
cmpsb
aam
cmp
adc
popf
lcall
sbbl
negb
mov
or
mov
shll
pop
movb
mov
int
adc
mov
es
jo
mov
mov
lret
push
pop
mov
lds
lcall
ja
nop
outsl
mov
or
xchg
cmp
push
or
pop
cs
mov
dec
pextrw
stos
dec
shl
into
mov
arpl
aaa
inc
test
outsl
gs
adc
pop
into
and
push
push
into
jl
shrd
fnsave
lods
pop
in
stos
pop
testb
and
lock
dec
fs
jp
push
das
jge
aas
cli
add
call
adc
xor
sbb
mov
lret
add
pop
or
pop
xchg
shr
jne
addr16
in
and
and
cmp
je
es
aam
out
ror
imul
push
enter
addr16
stos
inc
inc
jb
cwtl
int
push
dec
outsb
int
adc
pop
push
cwtl
inc
pop
cmp
jae
lds
pop
inc
cmc
movsb
mov
adc
dec
aam
push
dec
pop
out
loopne
shl
adc
xchg
jbe
mov
mov
pop
iret
fs
gs
fsincos
inc
dec
dec
pop
add
jecxz
cltd
xchg
aam
andl
insl
enter
add
fcompl
push
and
sti
mov
in
xor
sarb
mov
int3
inc
roll
fsubrs
dec
fs
shrl
push
fmull
or
in
mov
mov
popa
xchg
xchg
push
xchg
dec
xor
lods
add
insl
sbbl
stc
arpl
aam
xor
lret
lods
mov
dec
and
pop
add
cmp
stos
or
lock
sub
rclb
pop
leave
mov
sub
cvtdq2ps
sub
mov
cld
cmpb
xchg
les
sbb
lock
dec
je
mov
cmpsl
mov
sub
popf
rcll
mov
xor
mov
jns
cltd
pop
out
test
lds
mov
cmc
mov
push
jnp
scas
mov
and
jns
pop
cmp
cmp
add
pop
fwait
mov
dec
loopne
cmp
fstpl
xor
push
jo
sti
nop
fwait
mov
stos
std
mov
or
sti
mov
inc
push
aad
mov
pop
mov
outsb
jl
push
inc
mov
dec
add
xchg
das
and
hlt
das
call
pop
movsl
ffreep
mov
adc
mov
push
xchg
and
in
add
in
jge
ja
fistpl
mov
fidivrs
push
inc
sub
xchg
push
pusha
push
adc
pop
and
pop
ss
add
stos
scas
inc
push
push
sbb
pop
sub
js
or
inc
out
sbb
cmc
dec
clc
fisttpl
ljmp
clc
sbb
ficoms
sub
xchg
jp
sbb
inc
xchg
fwait
popa
in
in
push
mov
fs
jbe
shrb
stos
ljmp
inc
add
outsb
bound
push
mov
and
xor
dec
mov
inc
jns
pop
shll
insl
sub
jecxz
xchg
xchg
sub
lock
mov
push
cltd
or
mov
ds
dec
pop
mov
add
insb
or
stc
lret
jbe
lret
push
jae
shrl
mov
adc
jmp
jno
xchg
cld
out
movb
jb
push
hlt
xchg
cmp
adc
pop
sbb
sub
mov
subl
enter
lret
pop
into
out
fstl
bound
movsb
inc
popf
into
xor
lret
stos
sbb
xor
cmc
shlb
in
loope
pop
and
movsl
dec
sbb
cmp
lahf
movb
imul
enter
mov
inc
mov
dec
in
xchg
dec
jbe
or
mov
mov
rclb
insb
mov
fstpl
cmp
inc
push
pop
ficoml
outsb
adc
jno
imulb
cmp
or
dec
inc
jo
leave
in
xchg
xchg
pop
popl
lds
pop
pop
hlt
in
shlb
scas
inc
adc
mov
les
sub
scas
and
xor
gs
fwait
dec
les
dec
into
in
dec
push
cld
fimuls
add
sbb
jg
loop
inc
pop
scas
cld
inc
sbb
incb
inc
xchg
and
mov
rclb
jo
xchg
or
pusha
xor
sete
pop
add
lret
pop
cmc
push
je
push
dec
andb
js
je
popf
ficoml
xchg
dec
bound
pop
mov
push
test
addb
xor
in
out
jp
pop
movsb
cmp
push
clc
jle
push
jl
lods
std
mov
mov
inc
mov
and
xchg
in
xchg
mov
xchg
popf
sub
jmp
mov
xor
in
push
ret
xorl
movsl
out
dec
jg
add
movsb
jns
in
cmc
add
call
add
inc
lret
pmulhuw
cmpsb
xchg
pop
sub
ret
pusha
adc
mov
repz
rcll
ss
inc
or
adc
aaa
mov
sbb
ljmp
repnz
mov
cmp
repz
dec
mov
jecxz
mov
hlt
inc
dec
sarl
cltd
cmpsb
jp
inc
rorb
mov
das
pop
push
shrl
mov
xor
loope
xchg
hlt
or
mov
lea
sti
mov
mov
out
fnstenv
or
mov
je
xchg
push
dec
jp
mov
clc
aaa
loope
mov
sub
cltd
or
inc
fwait
cmpb
push
xchg
shll
xor
mov
pop
sahf
mov
loopne
and
jne
jae
fdivr
std
popf
arpl
ljmp
xor
subb
sbb
ds
pop
je
shrl
inc
xor
dec
sub
and
cmp
shll
aam
sti
mov
jnp
add
dec
adc
sahf
push
pop
mov
sub
jno
adc
nop
jp
mov
lods
push
in
xchg
xchg
sbb
add
fadds
mov
fistpl
mov
xor
push
pop
push
jb
sub
test
mov
into
in
pusha
xchg
es
scas
adc
sbb
cltd
or
sarl
mov
sub
fdivr
daa
jle
insb
mov
sbb
dec
fisubrs
fs
insl
andb
xor
jbe
addb
jo
push
jbe
or
inc
push
fwait
push
pop
xlat
testb
push
push
scas
iret
aaa
dec
mov
mov
dec
test
and
lods
stos
sti
repnz
sub
lock
fdivrl
gs
mov
iret
subb
dec
mov
test
mov
out
mov
adc
and
stos
or
sub
add
shl
xchg
frstor
ds
push
ss
pop
or
out
addb
cmp
cmp
mov
int3
inc
cmpsb
jbe
mov
dec
adc
int3
sub
iret
test
jb
fsubrl
mov
out
and
hlt
outsl
mov
mov
pushf
cmp
jmp
in
xchg
lea
cmp
out
pop
dec
and
jmp
xor
pop
inc
pop
or
jg
sarl
mov
enter
push
out
push
aas
jb
pop
loopne
sub
shrl
rcrl
and
enter
repnz
imul
aaa
cmpsl
ficoms
aas
in
inc
jno
jl
and
cmp
push
dec
mov
push
andb
xchg
xor
xchg
or
lods
mov
mov
cmc
mov
jno
loopne
cmp
loop
sbb
dec
pop
call
pop
shll
mov
popf
sti
push
stos
jmp
mov
adc
mov
pop
arpl
inc
lock
ss
nop
mov
add
push
sarb
cld
jo
out
xchg
push
clc
loop
js
lret
inc
dec
pop
or
add
lret
pop
rorl
mov
bound
filds
out
cmp
lret
dec
sahf
xlat
xlat
jp
sbb
mov
je
ret
inc
and
sub
dec
bound
mov
je
add
jp
cmpl
mov
mov
cmp
sahf
mov
sbbb
pop
int
ja
sbb
in
mov
scas
jno
in
push
scas
jne
lret
shrl
sbbb
adc
or
ret
or
lret
xchg
dec
bound
das
adc
and
popa
leave
aam
xchg
dec
in
inc
decb
pop
out
xchg
popa
movsl
scas
fisttpll
in
outsb
mov
sbb
imul
std
xchg
pop
gs
jb
cmp
repz
inc
xchg
test
ret
add
mov
int3
ja
or
nop
xchg
xchg
lahf
fdivrp
pusha
icebp
mov
fisubl
repnz
in
sbb
push
rclb
sbb
mov
push
imul
adcb
mov
enter
ja
lahf
scas
das
mov
adc
andb
rclb
mov
cli
mov
std
cld
aam
stos
mov
and
enter
sti
sbb
das
pop
rorb
xor
jbe
pop
dec
popf
and
pop
loopne
xchg
imul
jmp
pop
push
sub
sub
mov
sub
push
inc
out
test
dec
fs
int3
cmp
xor
in
or
punpckldq
xchg
andb
mov
pop
push
pop
sub
lods
lds
jp
push
ror
dec
call
inc
push
loope
pusha
pop
rclb
popa
and
std
notl
and
jno
inc
pop
sbb
imul
fucom
test
push
cmpl
add
adc
cli
fildll
out
cmp
mov
pop
cs
test
pop
iret
std
mov
outsl
lods
push
dec
aaa
insw
aas
stc
pop
negb
dec
xor
daa
arpl
sbb
data16
test
fwait
test
add
cltd
mov
outsl
mov
push
adc
xor
dec
mov
pusha
xor
xchg
sub
push
cmpxchg
xor
ds
sub
mov
mov
jecxz
rcll
cmpsb
in
or
jmp
adc
mov
sbb
adc
iret
into
sti
cs
lods
add
or
adc
ret
test
add
cmp
outsl
xchg
adc
lahf
and
cmp
icebp
jno
enter
and
mov
pop
scas
inc
push
in
pop
mov
push
mov
dec
fcoms
out
inc
jae
mov
movsb
cmpsl
fdivr
pop
pop
jp
icebp
loop
dec
mov
inc
dec
mov
sub
push
and
inc
xchg
ds
dec
ds
mov
jnp
setg
js
sub
in
mov
push
adc
cmp
js
cmp
loop
mov
mov
hlt
cmp
outsb
mov
mull
xorb
jmp
gs
es
negl
pushf
add
inc
cmpsl
jecxz
push
jne
jns
cltd
insb
fistpl
mov
fidivrl
xchg
movsb
mov
jb
sbb
rorb
sub
pop
out
sbb
mov
pop
sub
xchg
ljmp
inc
dec
mov
dec
dec
mov
push
pop
stos
sbb
subb
and
sub
mov
adc
cltd
cli
xchg
sub
jne
fsubrs
push
std
mov
push
mov
das
or
mov
lods
adc
pop
test
test
cmp
pop
out
test
jo
loope
nop
loopne
fcmovnb
icebp
xor
inc
in
lods
xor
jge
and
add
idivl
dec
add
out
pop
inc
shrb
scas
subl
push
fdiv
idivb
sub
pop
mov
repz
sub
mov
out
sub
inc
mov
mov
cmp
ficompl
addr16
jge
test
jno
jne
js
pextrw
push
push
or
cmp
or
mov
pop
outsb
test
push
lahf
mov
frstor
mov
jle
pop
sub
into
out
pop
cmp
xor
pop
test
call
mov
aad
lock
inc
loop
repz
and
sub
push
arpl
iret
hlt
jns
or
popl
movsb
jle
pop
jbe
ret
imul
xchg
push
cmp
push
js
and
jle
addr16
xor
push
negb
jno
jns
ret
push
add
in
scas
jbe
in
mov
lahf
cltd
movsl
icebp
jo
iret
or
out
xor
lds
lret
arpl
aas
xor
mov
outsb
xor
adc
addr16
in
lods
xchg
insb
lock
push
add
xchg
repz
xchg
hlt
lods
jne
jb
xorb
dec
fmul
dec
mov
in
dec
aaa
pop
dec
cwtl
sub
mov
out
std
mov
aad
push
lods
adc
addl
sub
insb
pop
loope
or
jne
test
mov
pop
jle
pop
add
scas
mov
pop
mov
jle
or
push
mov
das
leave
dec
idivl
xchg
cmpsb
dec
dec
sbb
and
out
lock
ud2
jge
sub
pop
pop
adc
or
sbb
or
cmpsb
aas
and
outsb
add
popf
pop
push
mov
push
add
ds
jb
fstpl
jae
cltd
dec
mov
je
imulb
jne
pop
dec
aaa
js
adc
sub
imul
sbb
dec
daa
fisttps
pop
mov
pusha
adc
js
lret
movsb
adc
loop
jae
mov
shrl
mov
push
hlt
icebp
iret
rorl
inc
push
loopne
mov
leave
jp
repz
jno
mov
xor
addr16
ds
add
pop
in
insl
jns
in
pop
and
sub
pop
imul
outsw
stos
js
cwtl
inc
lcall
cmp
cmpsl
jg
roll
fsts
jae
cmpsb
cmp
inc
dec
call
popa
notb
xlat
push
loope
adc
js
add
and
pop
mov
dec
inc
jns
in
and
mov
pop
cmp
pop
jbe
gs
dec
nop
les
push
imul
mov
push
xchg
aam
cwtl
pop
xchg
ljmp
shrb
out
or
out
hlt
inc
xor
in
inc
mov
push
lahf
push
cmc
dec
stos
loope
ss
and
mov
rorb
mov
sbb
xor
sub
and
ror
fs
sub
aad
shrl
xchg
jle
pop
in
hlt
cmp
insb
and
out
cmp
rcl
mov
jmp
divb
adc
sub
rolb
fldcw
xchg
or
mov
jmp
inc
sti
or
aaa
inc
mov
subb
mov
int3
sahf
or
scas
add
shrl
pop
in
gs
pop
and
in
into
lock
push
sti
sub
in
or
out
mov
mov
mov
in
outsb
cmp
test
aaa
jb
outsb
mov
imulb
sahf
ss
dec
pushf
decb
movsb
ret
jbe
cmp
repnz
sbb
and
mov
imul
in
cmp
data16
repnz
pop
cli
sub
xchg
lea
jge
and
jae,pt
aam
pop
add
lods
daa
xchg
cmp
push
jne
add
movsb
das
add
ret
scas
adc
roll
lret
lea
stc
cmc
mov
inc
dec
ds
add
xor
adc
and
mov
inc
fidivs
in
or
push
fisubs
movsb
and
das
sbb
mov
loop
lcall
jl
icebp
jge
pusha
cmp
bound
xor
sub
popf
lea
mov
scas
jp
xchg
pop
stos
sub
enter
sbb
iret
fcompl
mov
sbb
int3
fisubs
ds
mov
jo
dec
and
into
xchg
out
scas
roll
xor
dec
js
xor
xor
pop
and
pop
pop
add
or
add
xor
les
mov
aam
bnd
clc
push
test
sub
lods
jmp
les
fsubrp
mov
sub
fs
dec
xchg
nop
adc
or
push
push
and
mov
outsl
mov
rorb
adc
lret
addr16
push
das
push
sub
and
je
xchg
outsl
xor
in
ja
sub
adc
xor
cli
adc
test
mov
ljmp
mov
adcl
pusha
mov
push
dec
or
mov
adc
push
out
cmp
adc
js
fdivrl
rclb
jp
push
mov
lock
movsl
gs
lds
lea
rol
mov
neg
shl
xor
scas
stos
int3
mov
and
sarl
js
out
popf
rcll
dec
adc
enter
and
xor
inc
fldt
out
mov
jns
idivl
sub
push
mov
loopne
push
and
pop
mov
xchg
pop
outsl
test
popf
gs
cli
dec
dec
pop
call
hlt
enter
sub
xlat
sbb
add
loopne
and
rcrb
inc
fcmovnbe
push
add
pop
cltd
mov
jbe
cwtl
out
cmp
push
popa
xor
mov
aas
cmpl
cmc
add
popa
lock
sbb
repnz
jbe
sti
pop
pop
push
shlb
push
mov
ret
cmpsb
pop
ficoms
hlt
push
push
fs
and
mov
cmpsl
xchg
lret
fildll
mov
mov
push
mov
lds
stc
xchg
movsl
cmc
dec
loop
test
leave
xchg
cltd
ret
repz
jg
sbb
dec
xchg
cmc
push
movsl
jno
inc
cmpsb
loopne
or
loop
mov
jns
clc
cs
xchg
inc
aas
or
mov
aas
xchg
pushf
add
in
clc
jle
xor
pop
mov
jno
sub
lea
push
cmpsl
std
int
mov
inc
imul
xor
cmpb
adc
fistps
xor
inc
mov
or
in
sub
and
inc
jmp
dec
or
lds
xchg
fcom
jmp
test
movsl
idivb
movsb
and
sbb
mov
fnstcw
ja
xchg
addr16
out
nop
into
mov
insb
inc
test
cmpl
notl
xchg
lock
or
jmp
popf
movl
dec
dec
dec
mov
jb
scas
call
repnz
push
ficomps
je
in
in
xor
sbb
jle
nop
in
insb
sarl
jg
sub
pop
sub
pop
mov
sub
call
push
cmpsl
lret
lret
call
or
scas
ds
lods
and
dec
popa
mov
cs
leave
dec
lock
fs
inc
cwtl
cwtl
cmp
adc
jl
mov
aaa
mov
fbstp
icebp
fildll
fisttpll
push
sbb
ja
mov
call
cwtl
push
in
mov
adc
jno
adc
jg
cltd
clc
mov
dec
sbb
subb
xchg
out
pop
sahf
xor
ja
cltd
jmp
or
mov
push
fidivs
ds
inc
test
cltd
sti
cmp
subb
outsl
jl
loopne
mov
ss
mov
push
sub
push
lret
push
je
sub
test
daa
sti
adc
inc
xchg
adc
ljmp
inc
sbbl
inc
cmp
out
mov
out
inc
fadds
mov
fldl
pushf
jb
mov
jbe
mov
pop
xchg
clc
dec
out
stos
and
stos
insb
xor
fbstp
push
dec
xchg
add
sub
adc
fcos
inc
adc
pop
aaa
cmp
mov
mov
lcall
dec
lods
arpl
xor
ret
jns
call
jle
jge
and
jb
loopne
ljmp
cmp
dec
push
data16
sub
mov
cmp
mov
xor
sbb
adc
loopne
int3
xor
pop
push
ret
xor
out
jmp
popf
mov
and
hlt
jmp
xor
pop
rclb
push
bound
xchg
sbbb
xchg
inc
cltd
sbb
sbb
jle
push
les
inc
pop
jo
xchg
adcl
fldt
pop
subl
ljmp
inc
gs
push
and
and
jne
ret
push
pop
mov
pop
outsl
in
dec
mov
leave
pop
out
jge
test
rcrl
xor
int3
andl
clc
cmp
ret
mov
push
loop
dec
data16
inc
imul
addr16
pop
and
ret
push
and
jb
push
lds
sahf
cli
push
nop
push
jmp
out
sbb
sbb
inc
sahf
lret
fcmove
mov
jmp
and
movsl
push
fucom
add
lret
mov
shl
js
mov
test
in
jl
and
stos
je
dec
fsubrl
sub
jl
inc
sahf
mov
push
mov
and
out
dec
cmp
sub
mov
jb
mov
mov
stos
mov
cs
out
jmp
xor
mov
xlat
cmp
mov
cmp
enter
mov
addr16
lods
adc
xor
jo
fisubl
dec
dec
sbb
in
sub
pop
cmpl
mov
shll
in
mov
mov
dec
popf
adc
and
in
ss
ret
sbb
sbb
in
rcrl
js
fistps
jg
idivb
dec
pop
sbbb
inc
bound
mov
dec
negb
push
jle
adc
xchg
jge
mov
dec
fiadds
cwtl
icebp
ljmp
jnp
dec
inc
cltd
sti
ja
mov
cmp
or
test
xor
dec
and
xchg
std
enter
or
fsubr
lods
outsl
sbb
lods
outsb
push
je
mov
sbb
xor
insb
js
sub
mov
adc
push
sarb
xor
mov
cmp
stos
dec
flds
mov
xchg
sbb
fwait
out
sar
add
sub
icebp
or
test
dec
jne
jge
cwtl
dec
lea
jnp
add
pop
dec
mov
test
sub
inc
inc
add
mov
lods
pop
xchg
mov
add
push
wbinvd
cmpsl
cmp
cwtl
insl
aam
in
pop
jne
sub
outsb
dec
les
outsl
and
cmp
dec
fists
jns
adc
jg
cld
pop
repz
aad
mov
sarb
dec
push
cltd
iret
add
sub
dec
popa
andb
and
jne
jno
adc
lret
popf
cli
xchg
aam
fnsave
cmp
mov
adc
mov
jg
mov
fidivrs
and
lods
cli
ficompl
movsl
lods
mov
add
sbb
mov
lret
mov
adc
std
repz
sub
ret
pop
out
dec
inc
jg
pop
add
and
ss
mov
jecxz
cwtl
ficomps
sub
movsb
ror
outsb
repz
or
sbb
ret
jle
dec
dec
stos
cmp
push
aam
lods
sbb
pop
cmpl
jmp
in
ljmp
inc
pop
pop
stos
push
xor
aaa
gs
xchg
lret
leave
and
or
inc
dec
out
andl
jnp
imul
addl
mov
cmp
xchg
pushf
push
push
iret
push
cmp
mov
imul
sub
cld
ljmp
cmp
adc
repz
pop
das
cmp
repz
lds
inc
sbb
inc
out
outsl
scas
repnz
test
pop
xchg
pop
cmpsb
ja
push
xchg
sub
nop
scas
cltd
and
imul
mov
cmp
fcomp
xor
lret
daa
lahf
xorl
mov
push
jg
mov
mov
xchg
nop
stc
lea
dec
addr16
or
and
bound
push
jmp
das
xchg
push
xchg
sub
cld
sahf
addr16
xor
pop
xchg
and
scas
sbb
subl
decl
es
scas
aas
lahf
xchg
insl
pop
and
sbb
sarl
jmp
roll
mov
jecxz
xor
dec
mov
mov
fsubrl
pop
dec
hlt
leave
mov
daa
outsl
rclb
add
pusha
outsl
addb
popa
inc
mov
and
ret
jg
push
sbb
pop
fldl
mov
push
sub
push
cmpsl
incb
pushf
jnp
js
mov
rcll
inc
mov
dec
outsb
out
popf
ljmp
lcall
add
fldl
test
mov
adc
arpl
cltd
pushf
cmpsb
cs
setno
add
aam
adc
or
or
imul
inc
jge
jbe
dec
aam
xchg
pop
enter
xor
sub
cmp
or
jmp
push
iret
mov
push
adc
gs
mov
inc
cmp
push
ret
pusha
ljmp
loopne
jge
ss
sbb
dec
outsl
int
and
movsl
sub
retw
mov
aam
shll
and
jge
and
push
jge
es
sbb
pop
push
cmp
leave
in
hlt
test
inc
stos
dec
loope
inc
adc
mov
mov
jae
jo
mov
iret
imul
inc
push
push
fisttpl
jbe
into
loope
ds
int3
icebp
pop
xchg
test
shll
mov
scas
jb
out
jge
lods
jno
sbb
movsl
dec
or
mov
xchg
adc
and
cli
inc
ja
xor
cmp
cmc
mov
leave
std
outsb
fldcw
cmp
popf
cmc
or
inc
jecxz
in
mov
pop
aas
push
mov
pop
imul
mov
add
fdivs
adc
nop
in
and
cmp
cmp
aad
stc
pushl
scas
push
mov
mov
shr
mov
pop
cmp
mov
jnp
data16
shr
inc
sub
sub
add
jl
stos
pushf
movsb
mov
in
movsl
push
jge
shll
les
sub
aas
jmp
in
inc
rcl
pop
dec
icebp
dec
bound
or
sbb
sub
and
cli
jge
orl
nop
mov
lcall
sub
iret
jg
inc
sub
imul
mov
or
shlb
inc
sahf
mov
jae
movsb
xchg
sbb
and
inc
je
mov
push
addr16
clc
mov
cld
hlt
dec
mov
sub
cltd
pop
push
lods
inc
push
pushf
adc
jp
in
loop
add
cltd
insl
addr16
xchg
loopne
hlt
fisubrs
cmp
jns
shr
xor
mov
or
and
cli
adc
pop
fildl
mov
addr16
enter
ret
cmp
lcall
adc
push
insl
pop
fwait
push
jg
mov
cmp
adc
push
cmp
lock
add
hlt
in
xchg
xchg
call
xor
ret
icebp
lret
adc
cwtl
xchg
loopne
movsb
sbb
dec
sbb
jecxz
cmc
mov
cmp
or
loop
adc
cmp
mov
xchg
lcall
mov
jno
xor
les
xor
cmp
mov
imul
push
sub
lea
inc
test
xor
in
stmxcsr
gs
push
and
mov
mov
push
mov
pushf
fisubs
dec
pop
adc
xor
mov
inc
out
addb
pop
pop
and
cli
adc
sarb
adc
addl
or
jmp
and
arpl
ficompl
lock
inc
dec
lods
lcall
mov
stc
dec
sbb
push
adc
ret
mov
lds
dec
popf
aaa
mov
xor
pop
fdivs
into
mov
lock
jmp
sub
cpuid
inc
cltd
popa
insb
dec
xor
and
sbb
sbb
mov
lret
cmp
lcall
xor
and
loop
cmp
inc
nop
push
scas
rorl
sti
mov
test
dec
ss
add
in
push
mov
leave
nop
fldlg2
pushf
jae
mov
or
and
loope
fsub
inc
push
xchg
hlt
xor
outsb
cwtl
iret
push
mov
ret
inc
test
push
ret
jae
pusha
add
xor
dec
adc
ss
mov
outsl
cmc
cmp
mov
cmp
mov
dec
and
dec
movsb
daa
roll
mov
out
add
xchg
pop
adc
fnstcw
push
pop
in
into
inc
jl
sbb
flds
js
dec
mov
xchg
and
nop
pop
shr
mov
xchg
xchg
popa
ss
xor
sub
in
into
jl
dec
xchg
mov
xor
push
sub
lock
in
add
add
xchg
sub
jno
adc
rcrl
adc
ljmp
stos
icebp
test
xor
ljmp
mov
mov
pop
fs
jl
lret
dec
movsl
and
outsb
push
jbe
into
jmp
outsb
adc
push
xor
fisttps
pop
adc
cmpsb
sbb
test
fwait
dec
ret
inc
popf
in
mov
inc
jne
xchg
sbb
cli
jg
gs
xlat
js
out
dec
or
xchg
dec
lret
adc
or
cwtl
pop
out
mov
add
xor
cmp
sub
rorl
repz
enter
stos
add
test
xchg
push
adc
mov
push
fnstsw
lods
jmp
mov
pusha
cmp
fdivl
es
and
xchg
aad
test
pusha
idivl
sbb
inc
sbb
mov
mov
fst
xlat
stos
gs
out
pop
popf
push
jg
jmp
mov
lcall
jmp
sbb
xchg
out
les
mov
mov
push
shrb
xor
pop
rolb
sbb
int3
popa
pop
jns
jns
lcall
and
jnp
inc
cmpsl
fstp
out
jmp
outsl
in
push
aad
push
imul
dec
inc
sahf
mov
fs
xor
mov
out
xchg
subb
adc
daa
and
mov
lea
aad
add
mov
lahf
mov
enter
test
enter
mov
mov
pop
setb
cltd
inc
add
sbb
adc
cld
sbb
mov
mov
cltd
cmp
loopne
test
lahf
jae
rcll
iret
push
lock
js
or
xchg
lea
fsubrl
das
lret
clc
pop
cmp
pushf
pop
xor
mov
fnsave
ss
inc
daa
int
aaa
mov
dec
mov
adc
mov
daa
insb
out
movsl
mov
adc
repz
testb
sbb
dec
push
add
outsl
push
sbbl
xchg
mov
jne
sub
test
lret
pop
adc
aas
imul
shll
nop
jno
jecxz
inc
rep
mov
inc
pushf
mov
push
add
mov
mov
data16
sbb
xor
pop
addr16
mov
push
out
cmp
sub
imul
pop
inc
lods
mov
notb
cmp
sub
sbb
mov
movsb
jp
xchg
mov
dec
jmp
sub
clc
jecxz
lcall
loopne
inc
lds
shll
adc
pop
cmc
cmp
aam
push
push
sti
pop
aam
mov
pushf
jae
stos
loop
jmp
arpl
fwait
xor
mov
xor
lock
cld
les
jne
xchg
gs
adc
or
pushf
cmp
push
and
dec
xchg
fistpl
loop
pop
adc
stos
fsub
inc
outsb
out
in
push
mov
mov
mov
add
fldpi
clc
roll
andb
outsb
clc
ucomiss
pushf
or
fisubl
insl
repnz
ljmp
jbe
inc
lret
xor
pop
cs
std
ficompl
rcr
fiadds
or
sbb
js
lahf
or
jecxz
insl
cmc
test
repnz
stos
aaa
mov
movb
adc
lock
sub
mov
and
jns
cmp
leave
decl
call
test
add
fstpt
stos
fdiv
adc
cmp
mov
and
cmp
dec
push
xor
jns
hlt
std
dec
xchg
das
mov
lcall
repnz
sbb
repz
xlat
das
out
sub
imul
in
bound
lahf
xor
data16
sub
cmpsl
jl
jb
inc
add
loopne
add
cmp
ds
jno
data16
jns
xor
cltd
jmp
loope
push
outsb
or
push
sarb
not
imul
jg
and
mov
loopne
or
pop
popf
push
out
mov
dec
jl
lret
mov
add
sub
pop
sub
mov
sha256msg2
test
xor
out
adc
repnz
ror
loopne
push
push
bound
popa
cmc
cmp
or
lret
lea
sbb
mov
test
and
or
je
sub
leave
data16
pop
jge
mov
fwait
lods
int3
add
lret
cmp
jno
addr16
mov
ds
xchg
popf
cmp
or
movsb
adc
add
ljmp
push
push
xor
inc
movsb
fs
iret
sbb
popa
imul
imulb
inc
or
inc
push
or
mov
mov
test
cmp
cmc
mov
or
mov
lahf
push
push
inc
jnp
das
and
sub
add
pop
inc
sti
dec
mov
mul
and
es
ds
std
dec
sbb
jp
lods
es
add
es
inc
mov
aas
xor
mov
jbe
sbb
lret
mov
push
fwait
xor
push
test
incl
xor
adc
adc
dec
xchg
push
test
mov
pop
inc
out
lea
pop
pop
sbbl
imul
cmp
es
rorl
aad
popl
fcmovbe
jmp
fldpi
fnsave
jbe
repz
push
xchg
das
mull
repz
insb
cmpsl
or
fimuls
adc
add
stc
push
cmc
popa
insb
stos
lods
jb
xor
xchg
and
sbb
cmp
cli
jmp
out
test
repz
fists
stos
fstl
jne
lds
jnp
test
out
mov
inc
jl
mov
and
rcrb
sub
xchg
jbe
inc
add
and
or
in
mov
jnp
icebp
sti
movd
outsb
or
pop
xor
in
test
ds
mov
sbb
cmp
cmp
in
andb
in
xchg
pop
add
mov
sub
sub
insb
sti
xor
dec
jns
mov
adc
sti
outsb
iret
dec
dec
add
ss
mov
aas
fnstsw
xchg
or
inc
mov
andb
sbb
pushf
scas
cli
mov
subl
stos
and
push
cmp
daa
in
adc
call
fdivs
mov
or
idivb
fcmovu
cmpl
ja
mov
ret
add
xchg
push
fsqrt
jbe
ret
test
cmp
mov
outsb
data16
jmp
iret
std
sub
sarl
jecxz
scas
mov
mov
in
push
sbb
pop
mov
test
fidivl
ficoms
jg
push
xor
mov
adc
rolb
stos
cwtl
jns,pn
inc
mov
and
es
in
cld
call
lea
mov
popa
sub
jno
adc
testb
inc
cwtl
xchg
out
repz
push
mov
jg
test
push
inc
hlt
repz
xchg
ds
adc
sub
pop
dec
dec
test
mov
test
cltd
xchg
int3
mov
sbb
sti
dec
pushf
lea
pop
aaa
or
xchg
ret
mov
xchg
push
jle
stos
adc
insb
fcompl
mov
dec
cli
mov
jb
sahf
inc
nop
icebp
stos
fisttpl
cmp
inc
negl
and
sbb
bound
frstor
out
imul
in
sbb
sbb
mov
pop
jmp
lds
test
pop
cld
pop
xchg
sti
ljmp
inc
add
and
xchg
pop
in
inc
cmp
dec
jge
stos
sbb
orl
repnz
int3
aaa
imul
movl
in
sti
dec
shl
xchg
iret
out
cmp
jnp
push
cmpb
xor
push
sub
dec
mov
fistpl
inc
pop
mov
xorb
repz
cmpsl
xchg
test
add
stc
xlat
pop
or
xchg
mov
lock
int3
sti
sub
fstp
cmp
pushf
insl
push
mov
push
das
rorl
and
xchg
insl
or
fildll
mov
or
pop
shlb
imul
mov
mov
jle
jp
sub
mov
and
lock
xchg
inc
inc
lret
push
jo
imul
dec
lds
xchg
mov
add
frstor
lret
pop
push
int3
or
arpl
push
rol
mov
push
rcrl
aam
pusha
outsb
fldcw
sub
movsl
sti
sub
pmulhuw
push
das
pop
mov
aad
mov
fdivr
push
ret
aas
cmp
inc
jo
ret
popa
ret
cmpsb
ss
xor
insb
sbb
popf
adc
jbe
shlb
pop
data16
outsl
outsl
and
gs
sbb
movsl
sbb
lret
push
adc
add
andl
jg
icebp
sub
in
xchg
xor
add
sti
stos
sub
lret
dec
sbb
xor
mov
outsl
add
loope
and
push
negb
sub
cmpsb
pop
repz
bound
fisubrl
ljmp
dec
lods
mull
xchg
repnz
dec
scas
cmp
fistpll
cmpsl
push
mov
sub
ret
lret
pop
or
jg
cmp
addb
dec
mov
pop
push
or
add
push
mov
out
out
sahf
std
mov
shll
mov
inc
mov
movsb
addb
jns
movsl
jmp
sbb
jae
jb
pop
inc
outsl
dec
jp
mov
test
dec
fwait
ja
mov
shlb
inc
jmp
sub
icebp
dec
sub
fcompl
mov
insl
mov
mov
cmp
pop
mov
inc
cltd
mov
jnp
xchg
xchg
cmp
sarb
jo
push
sbb
ror
arpl
and
ret
mov
inc
sub
mov
sbb
push
es
cmp
cmpsl
pushf
jl
out
xchg
push
lret
fnstsw
cwtl
in
push
in
inc
lock
ja
or
pop
arpl
sahf
stc
fiadds
arpl
jae
sub
movl
push
into
sahf
jns
mov
jmp
push
cld
notb
xor
jne
dec
bound
rcll
and
sub
insb
pushf
inc
cmp
mov
push
gs
jae
inc
std
jb
leave
loope
repnz
add
sub
lds
and
cwtl
cmp
mov
or
mov
test
add
jnp
inc
clc
sub
in
loope,pt
lods
mov
jns
mov
pop
mov
cmp
adc
fldt
cmpsb
jg
fadds
das
xchg
ss
repz
jnp
jns
data16
in
lds
sub
stos
sub
rol
lret
in
bound
mov
sbb
and
xchg
xchg
rorb
pop
in
inc
jb
add
jb
jae
jge
ja
mov
scas
pusha
sub
aad
inc
ret
pop
lret
sbb
add
xchg
dec
and
mov
fwait
rorl
aaa
je
cmpsb
dec
jo
xchg
xchg
jb
testb
sbb
dec
lock
int3
and
cmpsl
in
mov
xor
cmp
pop
push
mov
arpl
fdivrl
pop
sbb
cmp
sub
ret
jecxz
rcrb
loopne
shr
add
stc
jno
xchg
gs
jecxz
in
scas
and
xchg
cmp
pop
push
das
and
in
fs
js
fimull
mov
jl
mov
xchg
xlat
mov
dec
aaa
test
push
roll
movsl
jmp
in
scas
cmc
or
fs
pop
imul
arpl
out
jmp
fidivs
lret
movsl
pop
lods
fs
mov
xor
push
ljmp
cltd
dec
ds
xor
dec
daa
pusha
popa
test
and
std
mov
arpl
test
jge
test
mov
mov
jno
adc
iret
fsubrl
dec
mov
xor
pop
shrl
repnz
jb
pop
push
jg
and
push
rolb
sub
mov
mov
pusha
sbb
lock
enter
pop
cli
stos
sub
add
std
les
add
test
pushf
fmull
rcr
shll
add
js
shl
jg
ds
push
pop
cltd
aas
pop
mov
adc
in
mov
mov
int
xchg
cld
cmp
lds
cmp
in
xchg
pop
xor
inc
daa
mov
aam
jp
lahf
push
clc
dec
cmpsl
add
xchg
scas
test
mov
dec
push
ljmp
jge
jbe
xchg
imul
dec
dec
loop
aas
test
out
push
aas
add
jae
movsb
mov
fsts
ret
fs
pushl
jmp
dec
loopne
imul
test
repz
pop
push
pop
or
lock
push
inc
div
jb
xor
repz
push
cld
in
push
cmp
je
adc
jnp
pop
jp
xor
shll
mov
call
pop
outsb
xor
pushf
dec
out
out
aaa
sub
xor
and
xchg
mov
and
add
shll
ds
aad
loop
ja
lods
xchg
push
fucomi
xor
out
testb
addr16
xor
push
xchg
xor
movsl
ret
je
dec
push
add
lea
rep
xchg
call
es
xchg
xchg
orl
pop
ljmp
ja
in
xchg
push
dec
sbb
fdivs
mov
or
repz
sbbb
mov
mov
inc
xor
mov
jl
cltd
jne
into
dec
scas
ja
sbb
sahf
sub
xor
jp
or
int
inc
aas
lcall
mov
fstpt
mov
jmp
sbb
leave
adc
xor
rorl
mov
adc
test
js
test
ja
into
or
mov
push
cmp
sub
jns
insb
cltd
push
je
testb
xor
orb
add
inc
outsb
cmp
shlb
lret
test
mov
loop
xor
sbb
cwtl
mov
in
sub
add
or
xchg
iret
in
mov
dec
pop
xchg
or
pop
xchg
lret
lahf
iret
lret
fs
and
call
popa
aaa
cmp
test
cli
xacquire
dec
and
rol
cli
dec
jle
inc
fcmovbe
push
fwait
push
jg
push
loope
inc
shll
ljmp
imul
jnp
fnstenv
pop
dec
je
inc
mov
xor
and
lahf
xor
push
pop
inc
sub
xchg
or
cmp
push
loop
faddp
jmp
rorb
xor
jmp
cmp
xchg
push
rorb
add
pop
fnstenv
xchg
xchg
jp
hlt
add
mov
popf
fdivrs
js
add
xor
test
and
mov
sbb
jecxz
rcl
arpl
mov
jmp
mov
add
fmuls
inc
hlt
fs
or
push
pop
push
xchg
sub
or
adc
pop
adc
out
xor
mov
ljmp
ss
mov
jle
xchg
fwait
jl
dec
pop
mov
lcall
mov
sarb
pop
divb
cmp
popf
popf
push
sarl
fbstp
dec
sbb
pop
fiadds
cmp
into
cli
push
arpl
popl
xchg
fidivl
imul
lods
or
aad
or
or
sahf
enter
mov
insl
mov
jle
scas
adc
adc
jbe,pn
mov
mov
inc
mov
cmpsl
loop
jmp
cmp
add
in
arpl
push
in
dec
popa
jl
rol
notl
fs
fwait
push
jge
jmp
shll
push
sub
in
ret
rcrb
lahf
test
gs
cli
popa
lds
xor
icebp
cmp
push
mov
shrl
jmp
pop
add
cmp
enter
dec
or
and
in
hlt
ret
stc
test
sti
mov
fsubp
out
push
sub
or
mov
cmp
int
dec
mov
rcrb
push
jne
dec
sub
sbb
inc
jmp
pop
inc
in
call
bound
out
mov
jg
test
rorl
lds
out
and
gs
and
rorb
cld
cmp
dec
xchg
mov
dec
mov
or
fstpl
dec
or
int
aas
cli
mov
push
mov
mov
sbb
add
outsl
push
dec
add
outsb
inc
add
jo
xchg
or
pusha
inc
pop
xorb
jp
mov
inc
and
xchg
jnp
ret
stos
push
ret
adc
fdivl
add
shrb
jns
cmp
lds
sbb
mov
mov
sbb
and
sub
inc
fwait
jg
push
xlat
push
daa
lret
rorl
fstps
pop
pusha
adc
dec
inc
outsb
pop
bound
xor
pushw
push
jmp
addr16
sub
hlt
imull
sbb
push
inc
dec
push
and
mov
insb
or
test
push
sarb
sti
sbb
stc
inc
sub
inc
add
idivb
xchg
les
js
lea
fstpt
mov
or
xor
mov
stos
xchg
adc
sub
add
mov
dec
add
out
aas
xchg
inc
sbb
or
dec
lods
lods
enter
mov
or
sbb
out
js
scas
sbb
test
xor
mov
jmp
xorb
clc
mov
into
das
sbb
xor
mov
testl
inc
add
push
popa
sahf
rorb
lahf
es
sub
add
pop
je
fdivr
imul
aaa
les
dec
cmp
sub
jbe
pop
sub
sub
push
xchg
mov
ret
jl
push
fwait
repnz
or
mov
daa
in
inc
push
dec
xlat
pop
loopne
add
jl
pop
movsl
mov
add
mov
cli
sbb
out
pop
loopne
es
fiadds
out
ss
lods
xchg
shll
rcrl
cmpsl
add
push
mov
push
add
fsin
mov
xor
adc
clc
mov
adc
pop
dec
bt
pusha
das
repnz
outsl
ret
in
sub
mov
pop
pop
je
lret
ljmp
clc
popf
out
mov
jp
mov
loop
pop
cmp
pop
filds
dec
sbb
loop
add
xor
daa
fsubr
inc
pop
jmp
xchg
xor
pusha
mov
xchg
rcrl
lods
or
in
in
nop
jae
mov
cli
cli
mov
les
inc
sbb
mov
inc
sbb
ja
push
push
xchg
mov
js
push
and
cs
push
xor
outsb
stos
call
imul
pop
add
dec
ret
incl
or
xchg
jne
jb
or
pop
adc
or
and
xor
les
sets
xchg
fcmovne
xchg
mov
xchg
jbe
adc
or
or
jo
testb
xchg
stos
mov
movsl
rclb
ja
clc
dec
jnp
inc
push
dec
inc
fisttpll
adc
mov
outsb
addr16
add
adc
addr16
pop
inc
stc
pushf
sub
mov
ja
add
xchg
mov
or
aam
sbb
sti
sbb
out
daa
sub
clc
sub
mov
insb
mov
mov
jg
mov
mov
adc
popa
jmp
or
call
jp
faddp
imul
push
dec
lcall
shr
mov
xor
sbb
cmp
mov
pop
roll
pop
sbb
aaa
dec
sbb
and
sbb
and
insl
push
das
js
scas
shll
addl
stos
cli
hlt
cmp
cmp
pop
mov
cs
jns
in
fisttps
adc
cmp
cmp
testb
test
sub
sub
dec
push
mov
lret
xor
stc
inc
hlt
in
and
xor
push
mov
dec
das
sub
mov
sbb
cltd
push
andb
nop
outsl
push
lcall
inc
mov
sub
push
dec
push
ret
nop
aad
push
sub
jg
std
stos
aad
cltd
inc
jl
clc
inc
pop
push
mov
fsubr
cwtl
lahf
aas
xchg
mov
orl
rclb
pop
sarl
adcb
xchg
insl
and
mov
ret
leave
js
js
loope
jecxz
aam
adc
clc
mov
dec
scas
jne
dec
fdivs
xor
adc
das
clc
cmp
jmp
aas
imul
mov
push
jmp
adc
adc
push
jne
mov
notl
es
cmp
sbb
xchg
push
mov
jle
inc
dec
xchg
push
int
pushf
lret
dec
enter
pop
xchg
fnstenv
mov
repnz
xchg
stos
jge
jle
and
dec
test
mov
or
jmp
mov
aas
mov
stos
push
push
cmp
fcomip
mov
jno
pushf
fidivrl
jge
sub
cmp
fisttpl
xchg
jae
enter
jl
add
mov
ror
into
push
jnp
icebp
mov
jnp
cltd
mov
jmp
cmpsb
xorl
lods
sub
mov
out
addr16
pop
cmpsb
out
cmp
ja
inc
push
mov
insl
ret
xchg
jmp
inc
inc
push
fwait
into
insl
xchg
sbbb
jae
push
addr16
stos
inc
and
mov
and
jno
push
sub
or
mov
test
cmp
mov
and
scas
sub
xlat
into
fbstp
jne
orb
inc
adc
inc
fmul
push
push
add
xor
adc
arpl
pop
add
popf
out
lods
sub
jmp
or
mov
into
aaa
jl,pt
sub
sti
pop
aas
jnp
push
pushf
push
subb
daa
in
cld
adc
inc
aad
outsl
ds
dec
shrb
cmpsl
cld
push
mov
xchg
pop
nop
push
and
sub
out
rcrb
mov
xchg
mov
lahf
das
sti
das
pop
dec
xchg
rcrb
repnz
daa
outsl
cmc
dec
stos
shll
ja
ror
push
push
xchg
sub
push
push
jns
jne
stos
out
cmpsl
js
sarl
push
cmpsl
ret
ja
out
pop
rclb
imul
into
mov
mov
sbb
cmpsl
cltd
jg
mov
push
xor
mov
ja
and
movsl
mov
xor
add
mov
scas
xchg
cmp
idivl
add
punpckhdq
mov
or
adc
ror
imul
cs
xorb
out
sbb
jle
or
jb
out
les
inc
fisubl
lock
lahf
xor
mov
xor
mov
inc
xchg
sub
clc
push
aam
fcomps
mov
rcl
push
push
pop
cmpsl
inc
pop
push
repz
cmp
sub
fidivrl
stos
mov
dec
in
mov
and
mov
sbb
imul
cwtl
sub
pop
in
cmpsb
fbld
add
clc
xchg
fistl
adc
decb
mov
pop
xchg
xchg
lcall
push
aas
add
in
or
stc
adc
cmp
jb
xchg
insl
dec
rcrl
sbb
mov
xchg
dec
cs
shrl
int
sarl
aaa
pop
sub
add
out
fwait
imull
mov
les
xchg
fistpll
das
mov
arpl
ror
stos
arpl
push
sar
and
mov
dec
fists
out
rorl
pop
pop
popf
call
stc
jbe
mov
push
inc
mov
push
popf
lea
test
inc
sahf
add
shll
mov
insl
sarb
mov
ret
clc
popa
cwtl
push
cmpsl
push
lock
loopne
leave
xchg
fiaddl
inc
pop
sbb
movsl
sahf
and
sub
fstpl
xchg
mov
jp
mov
je
push
inc
cmpsl
lahf
lds
outsl
les
cmpsl
movsb
jmp
or
or
ret
inc
push
inc
xchg
mov
data16
test
push
pushl
push
fdivl
xchg
aad
shlb
dec
or
mov
jp
outsl
ljmp
pop
call
push
out
sub
xor
fmull
push
or
sbb
enter
jb
jp
push
rcll
push
pop
bswap
mov
inc
stc
test
stc
add
cmp
nop
pop
pop
xchg
pop
jecxz
or
shll
mov
inc
repnz
jb
je
sahf
cmp
push
outsl
pop
movsl
mov
aad
in
insl
or
mov
mov
test
cltd
hlt
xlat
insb
dec
lea
bsf
popa
sub
fs
popf
jg
popa
js
xor
and
jo
test
testb
or
cld
iret
stos
mov
xchg
mov
popf
adc
add
jns
mov
and
pop
cmp
and
mov
mov
jno
sbb
aas
xlat
js
cmp
push
fists
and
jecxz
scas
aam
and
dec
aaa
lahf
mov
aam
iret
je
pop
sti
jb
daa
pop
popf
xbegin
and
mov
jbe
call
push
sahf
xlat
dec
ss
ror
or
cwtl
shr
out
into
fs
mov
popa
jne
test
popa
je
add
sbb
mov
dec
fnstsw
and
push
ret
dec
and
fmull
pop
adc
arpl
popl
mov
aas
or
adcl
push
lret
test
aaa
dec
out
dec
adcl
jnp
lods
movsb
divb
push
outsb
and
pop
ret
dec
adc
xor
and
inc
and
in
rorb
mov
sbb
in
sub
ja
mov
push
test
fmull
mov
les
jnp
sub
push
sbb
mov
fidivs
cmp
mov
in
jle
movl
cmpsl
inc
fstps
pop
popa
xor
jnp
cmp
pop
inc
nop
test
lock
rclb
sbb
sbb
leave
push
fistpl
loopne
jno
sti
push
add
popf
push
sbb
mov
cmpb
pop
ljmp
sbb
and
lock
rcl
cld
loop
adc
psrad
ret
cmpl
sbb
ja
pop
push
xor
xchg
sarb
out
inc
loope
outsl
mov
jb
xorl
cmc
cltd
test
lret
mov
shr
cmc
inc
cmpsl
mov
notl
imul
xor
push
xor
xchg
stos
fs
sbb
ljmp
push
mov
mov
mulb
rcrb
or
fs
in
aad
stc
mov
inc
xor
ja
add
pusha
cmp
notl
jb
and
int
es
mov
int3
test
jns
popf
push
movsb
xchg
mov
cwtl
nop
dec
mov
adc
sbb
dec
xchg
jbe
repz
adc
and
sub
lcall
pop
in
pop
cmpsl
sbb
adc
xchg
insb
jno
outsb
loopne
pop
push
xchg
mov
sti
dec
xchg
adc
imul
add
dec
pop
popf
xchg
lods
mov
cmpsl
dec
sub
mov
js
fwait
and
inc
nop
or
je
jbe
outsl
mov
loopne
add
adcl
xor
mov
mov
shl
adc
adc
loop
ja
enter
sbb
sub
cmp
mov
and
cmp
xchg
in
sbb
cmp
jp
imul
insb
xor
push
xor
fistps
fsubr
es
cmp
mov
jmp
icebp
add
pop
sub
gs
int
call
sbb
popa
fistl
sub
cwtl
push
mov
pop
xor
insb
inc
sub
hlt
jg
ror
bound
mov
xor
repz
andb
popa
or
aam
add
insl
sub
xlat
cmc
adc
dec
clc
xchg
cmpsl
fwait
push
or
fcoml
xor
add
cld
test
divb
mov
jle
adc
loope
jnp
sbb
mov
mov
arpl
mov
push
mov
sti
sub
out
rorb
fsubl
cmp
inc
outsb
jg
adc
stc
xor
xchg
sahf
inc
xchg
adc
les
xor
ds
outsb
push
repnz
test
pop
loopne
sbb
mov
xchg
gs
dec
and
push
or
lea
push
xchg
fisubl
mov
ljmp
fcoms
pop
cmc
mov
les
xor
aad
scas
push
cmpsb
add
lahf
jg
or
pop
sti
test
fs
insb
loopne
pop
sbb
sub
mov
sarb
ret
mov
outsb
jp
mov
xlat
in
and
inc
addb
iret
movsb
xor
je
adc
call
dec
mov
test
lods
ficoml
and
add
cld
mov
insb
ljmp
push
movsb
loop
xchg
xchg
cld
pop
cmp
loope
add
das
ds
inc
inc
dec
rcl
insb
ja
push
inc
mov
add
xor
shll
cmp
pushf
rcl
xchg
adc
inc
sub
mov
enter
add
jp
push
pop
lods
xlat
dec
xor
loope
addb
ss
dec
lahf
cmp
mov
push
lea
inc
push
mov
jnp
out
sub
in
xor
inc
cmp
lock
add
xor
mov
lock
ucomiss
out
sbb
xlat
mov
push
jge
in
and
adc
test
lock
scas
mov
adc
dec
arpl
jmp
adc
or
lods
pop
aaa
int
dec
testb
dec
ja
sbb
dec
fadd
lret
orl
leave
cld
enter
sub
or
pop
sbb
or
repnz
add
scas
outsl
jnp
mov
movsb
imul
xchg
xor
sub
fimuls
popf
jecxz
xorb
or
mov
push
xor
push
adc
add
pop
dec
pop
or
data16
jae
sbb
inc
or
test
sahf
jg
jns
in
fxtract
bsr
pop
inc
sbb
adc
mov
stos
dec
mov
in
mov
jae
pop
add
cli
cmpsb
or
popl
shrl
aaa
xchg
dec
outsl
add
enter
scas
hlt
into
cli
shlb
pop
jno
sbb
sub
adc
andb
dec
mov
jl
pop
xchg
jmp
push
orl
cli
arpl
enter
ljmp
jns
into
pop
les
push
in
mov
mov
or
daa
mov
int
dec
cmc
xor
ss
jle
enter
test
dec
push
arpl
fs
or
fwait
out
cltd
and
je
les
mov
and
leave
cwtl
mov
mov
call
adc
stos
push
nop
loope
sbb
adc
fwait
gs
or
pop
in
rorl
inc
cmpsb
repnz
stos
notb
inc
lret
mov
lods
mov
mov
xor
mov
jne
lds
gs
cli
out
outsb
fildll
cmp
movsb
or
xor
mov
and
fs
or
addr16
adc
adc
andl
pop
mov
insb
add
or
hlt
or
scas
test
mov
push
mov
aam
adc
scas
mov
jmp
push
lea
in
arpl
mov
cld
cmpsl
idivl
in
ljmp
in
jmp
into
jnp
test
scas
adcb
fcoms
mov
pop
lods
mov
mov
int3
lock
or
and
add
mov
jno
cmovle
lock
mov
jg
jnp
insb
ret
lods
popa
jecxz
push
push
subl
mov
lods
push
imul
cmpsb
dec
inc
xchg
or
sbb
sar
shlb
fidivrs
stos
mov
lock
mov
outsl
inc
xchg
xchg
fwait
jecxz
fists
xchg
mov
mov
push
mov
or
in
jge
xor
adc
jo
dec
push
fwait
jns
mov
shll
and
fiaddl
imull
cmp
xor
mov
dec
xchg
or
sub
sub
mov
pop
push
adc
lods
sarl
aas
cmc
stc
push
scas
sub
or
iret
imulb
mov
int
js
cwtl
imul
pop
in
out
mov
dec
pop
push
int3
adc
pusha
push
lods
add
inc
xchg
adcl
outsl
or
mov
lods
dec
push
pop
rorb
sub
inc
int3
cmpsb
out
adc
clc
xor
imul
cmp
dec
clc
and
addr16
mov
cli
mov
mov
dec
sub
xchg
jne
inc
rcl
psllq
insb
add
mov
lahf
pop
out
mov
loop
incl
lea
push
jmp
jno
push
shrb
sbb
xor
lret
jno
inc
xchg
inc
movsl
loopne
xchg
es
push
bound
divb
inc
outsb
nop
test
clc
addr16
into
xchg
movsl
mov
fisubs
cmp
mov
loope
testl
jmp
aam
pop
ret
xchg
fldenv
mov
sub
cmp
enter
test
cltd
mov
loopne
jmp
xchg
outsl
xchg
test
repnz
decl
rcr
xchg
or
cmp
jl
inc
enter
sub
fsubl
cmp
lods
add
je
sbb
gs
push
idivb
hlt
js
iret
push
xor
inc
test
fwait
data16
jp
leave
xor
in
fistps
adc
push
jge
mov
out
js
inc
push
dec
pop
xor
cli
jb
stc
loope
xchg
mov
pop
ret
cmpl
xor
or
jmp
mull
movsl
fbld
jns
fiaddl
cmpsl
jb
or
dec
mov
wbinvd
outsl
int3
rcrl
insl
jle
cmp
mov
push
fimuls
ret
es
add
add
mov
rclb
test
test
les
stc
mov
aaa
mov
xchg
shlb
fistpll
mull
insl
dec
xchg
xchg
fimull
push
jae
popl
cs
lock
xchg
sahf
adc
movb
and
pop
adc
push
in
aam
repnz
notb
cmp
out
in
add
in
add
push
xor
adc
es
jp
sub
adc
sub
pushf
dec
mov
inc
int
xchg
sub
int3
pop
push
les
push
push
sti
and
xchg
icebp
jbe
sub
dec
add
imul
sbbl
shl
cmpb
stos
test
jecxz
xchg
push
mov
sbb
negb
test
mov
int
ja
bnd
iret
pop
xchg
popa
insl
adc
cmp
imul
nop
xchg
mov
dec
dec
xchg
scas
andl
cmp
sbb
stos
mov
mov
xor
cmpsl
call
pop
cmp
das
test
or
jne
shll
mov
add
mov
leave
lock
pop
jmp
scas
ret
xor
sbb
cmp
fsts
add
jge
loop
rcl
ja
xchg
in
notb
lcall
dec
mov
repz
lea
stos
stos
and
sbb
stos
mov
fs
push
xchg
xchg
or
adc
outsb
pop
mov
gs
mov
adc
mov
sub
push
lock
adc
jns
outsb
mov
leave
mov
push
or
pop
add
sahf
push
mov
mov
sarl
lcall
xchg
xchg
jle
pushf
insb
xchg
add
pop
psrld
and
je
inc
test
jb
cmpsb
ljmp
inc
mov
pop
mov
gs
push
inc
rol
lods
jge
aas
mov
sbb
das
in
jl
mov
inc
push
cmpsb
push
inc
imull
lahf
jmp
popa
mov
nop
push
stos
cmp
out
in
mov
push
jg
mov
sub
in
and
bound
scas
or
in
into
cltd
mov
xchg
mov
outsb
and
mov
push
fwait
shrb
popf
push
aad
into
sub
out
cmp
movsb
or
xchg
sub
xchg
dec
ret
daa
das
int
ret
mov
ja
fstpl
in
loopne
movsb
hlt
fbld
pop
pop
into
stc
mov
mov
mov
outsl
iret
and
adc
cmp
lcall
insl
icebp
rcrl
nop
lods
repnz
pop
movsb
mov
ret
mov
and
stos
jns
outsl
adc
insb
mov
mov
aas
and
push
fstps
fmuls
pop
cmp
jae
adc
xchg
rclb
lock
jnp
repnz
int3
push
sub
jb
mov
adc
leave
clc
shlb
fidivrl
mov
into
push
in
push
add
fbld
inc
loopne
loopne
inc
inc
ss
outsb
lcall
rcll
sbb
fmuls
mov
in
lods
into
popa
jmp
push
jecxz
out
das
aad
dec
xor
jmp
mov
ja
and
adc
je
mov
ret
pop
lahf
xchg
xor
sbb
ja
mov
xor
jno
cmp
pop
cld
sbb
pop
xchg
sar
add
bound
sub
push
mov
and
inc
lock
jmp
pop
movsl
adc
lea
adc
pop
pusha
dec
in
std
xor
mov
xchg
int3
ds
and
in
mov
sbb
inc
pop
mov
daa
push
dec
insb
sahf
int3
dec
insb
inc
mov
mov
fwait
aam
push
ret
shr
mov
xchg
mov
shrb
xor
sbb
dec
jae
pushf
and
rcr
mov
out
js
pop
outsl
adc
ljmp
xchg
jge
pop
inc
sbb
cli
cltd
dec
insb
cmpsl
iret
xor
sbb
fstl
jg
and
fiaddl
pop
cli
mov
pop
in
inc
jmp
pop
add
lods
mov
out
sti
pop
xchg
repz
in
mov
cltd
sbb
mov
adc
mov
pop
nop
dec
jmp
inc
sub
mov
test
lods
aas
je
or
jl
xchg
or
int3
xchg
push
mov
push
dec
mov
pop
loop
call
sub
mov
sbb
addl
xor
aaa
stos
add
idivb
inc
xlat
cld
sbb
mov
iret
je
inc
mov
mov
in
shr
outsl
cltd
cmp
testb
es
push
rcll
cmc
stos
out
mov
out
imull
cmp
and
hlt
xchg
add
in
dec
and
fisubrs
cmc
stos
fdivs
ret
add
repz
mov
add
xchg
enter
mov
pop
aam
mov
dec
jno
adc
mov
inc
push
leave
stc
movsl
inc
cmp
outsb
mov
jge
jb
out
movsb
ret
sbb
sub
mov
jno
and
or
repz
imul
push
nop
rcl
add
sub
lock
or
xor
mov
pop
stos
cwtl
adcb
lret
add
jbe,pn
fldt
cmc
mov
shl
scas
add
adc
fists
add
jb
mov
loope
fimuls
movsb
jmp
mov
pop
pop
lock
lods
repnz
jae
jmp
aaa
mov
xchg
ljmp
jo
loopne
ret
hlt
mov
inc
int
pop
sub
adc
cli
inc
adc
add
sbbb
xchg
push
cmp
movsl
sti
test
shll
jns
dec
ret
jl
cs
arpl
ss
sti
test
push
mov
es
fbstp
jecxz
and
cmp
pop
fcoml
dec
icebp
lcall
cmp
ret
push
xchg
outsl
add
rol
mov
lret
fisttpl
aaa
movsb
int
sub
xorb
mov
dec
push
add
loop
scas
imul
fnstenv
test
push
or
aam
fdivs
jle
lahf
jl,pt
mov
lcall
lret
fldenv
decb
shll
bound
push
outsb
mov
loopne
dec
inc
xor
dec
dec
repz
faddl
adc
mov
or
hlt
cmp
dec
add
and
shlb
movsl
sbb
xchg
mov
in
fdivrs
xchg
push
sbb
and
push
out
push
fmul
scas
mov
movl
shr
inc
add
fldenv
ret
add
cs
sbb
mov
or
ret
mov
sbb
mov
icebp
scas
xchg
int
push
pop
xchg
test
dec
cmpsl
and
loopne
jmp
jecxz
mov
or
mov
out
cltd
lret
and
push
cmp
fimull
inc
push
push
pushf
daa
pop
sbb
lcall
sub
int3
insb
sti
jns
movl
cmc
xor
push
adc
pop
out
lods
mov
mull
aad
and
lcall
aam
xchg
fnsave
lcall
mov
je
imul
dec
jns
in
notl
cmp
pop
add
mov
lahf
mov
pop
pop
inc
ljmp
and
inc
jno,pn
nop
test
pop
or
push
jg
xchg
movsb
loope
aam
mov
jecxz
ficompl
xor
push
andb
cmpsl
cmp
jnp
xor
cmp
jp
sar
es
sub
cs
dec
sub
lods
lds
dec
push
test
scas
jb
xchg
pop
adc
push
ret
loopne
call
cmpl
int
data16
into
dec
mov
mov
adc
sub
out
dec
mov
mov
out
inc
add
sub
insl
jae
mov
mov
inc
dec
sti
mov
aad
leave
adc
sub
pusha
scas
cmpsl
outsl
sbb
mov
das
mov
test
jg
daa
pop
aaa
push
mov
sbb
test
dec
cmc
mov
mov
xor
cmpl
mov
sahf
mov
mov
inc
jmp
sbb
jl
in
dec
scas
insl
popf
inc
pop
mov
ja
pop
into
inc
gs
sub
sub
ds
push
pushf
inc
out
aad
jo
cwtl
mov
clc
clc
xor
mov
sbb
mov
push
cmp
sbb
cltd
add
aad
je
pop
cmp
sbb
dec
inc
inc
pop
mov
dec
xor
rolb
mov
lods
pop
fcomip
sub
inc
add
mov
outsl
inc
and
inc
into
xor
ds
inc
loope
xchg
call
cld
hlt
xchg
mov
divb
fsubrs
or
fldz
fisubrs
jecxz
push
shll
lods
aaa
mov
mov
and
sub
nop
insb
inc
sub
call
add
xor
and
lcall
das
xchg
or
inc
stc
mov
xchg
movsb
and
addr16
push
pop
orb
sti
cmpsl
push
js
shll
or
xchg
or
sub
test
sbbl
or
out
dec
jge
sub
inc
adcl
inc
mov
push
ds
add
inc
mov
cmp
cmp
jbe
lcall
mov
cmp
rorb
or
clc
mov
ds
jne
push
stos
mov
cmpsl
jmp
test
repz
jbe
add
imul
inc
pop
movsb
popa
mov
or
and
mov
movb
cltd
dec
les
dec
bsr
ds
push
rcrl
mov
rorl
mov
xchg
in
xchg
andl
mov
push
sahf
jno
xor
push
fidivrs
pop
int
lea
xor
mov
xchg
loop
int3
sahf
mov
movsl
cs
popf
out
jge
mov
stc
pop
and
sbb
xlat
out
xchg
mov
dec
movlps
fsubrl
pop
or
mov
adc
testl
push
hlt
icebp
int
and
ficoml
mov
adc
pushf
sahf
xlat
mov
ficompl
push
aad
and
mov
rcr
stos
fcomp
scas
jp
lods
mov
sub
adc
roll
jecxz
pusha
outsl
sub
inc
test
int3
jmp
sbb
std
fimuls
jns
jle
je
jge
ljmp
jle
fnstsw
popa
mov
and
push
xchg
shlb
mov
mov
jg
in
test
fwait
cs
das
das
sbb
jmp
jle
lock
pop
fdivp
in
or
std
sub
in
scas
fwait
dec
jg
cmp
mov
and
xchg
add
pusha
cmp
pop
outsb
mov
sahf
add
loopne
aas
mov
sbb
push
out
lret
sub
fcom
rcr
mov
rclb
mov
ss
test
dec
repz
jecxz
mov
test
cmc
int3
xor
mov
nop
testl
jle
pushf
or
cmp
inc
inc
lea
enter
sub
pop
xor
xor
adc
sub
cld
push
ret
cli
mov
dec
lret
xchg
sub
rol
out
imul
and
pop
cwtl
stos
les
push
xchg
mov
push
inc
mov
divl
mov
in
subb
sbb
push
inc
lret
mov
cs
jne
stc
cwtl
add
lahf
and
xchg
jge
push
test
pop
adc
icebp
xchg
pop
sub
cmp
push
jle
aaa
test
xchg
xor
mov
xchg
mov
imulb
out
out
fisttpll
sbb
add
sub
pop
pop
mov
cmp
or
and
cmp
cmp
pusha
pop
fimuls
out
arpl
jecxz
pop
aad
adcb
sbb
aaa
push
and
ljmp
fnstcw
xchg
ljmp
mov
sbb
dec
pop
dec
mov
pop
jmp
test
adc
pushf
sbb
call
add
mov
inc
jmp
testl
fdivs
adc
pop
pop
push
and
rclb
inc
push
int3
mov
insb
lods
es
in
loopne
and
aam
xor
jp
stos
cmpsb
fnstsw
adc
cwtl
std
outsb
movsl
scas
mov
jnp
cmp
shr
dec
sub
mov
pop
dec
sbb
es
adc
add
clc
aam
movsl
cli
inc
dec
jl
push
hlt
or
mov
call
aam
les
rolb
popa
mov
add
insl
mov
ret
js
mov
ja
mov
ret
mov
push
stos
xchg
cli
add
roll
ds
ljmp
iret
mov
mov
ret
and
sahf
xchg
push
sub
mov
lea
pop
or
push
adc
push
mov
iret
mov
lahf
repnz
sub
imulb
mov
in
addl
inc
inc
call
mov
push
sbb
mov
ds
sub
mov
negb
sub
roll
push
xchg
das
loope
repnz
fwait
push
dec
lahf
fcmove
jnp
jle
xchg
mov
mov
xchg
cmpsb
mov
jl
xor
cmp
cmc
les
mov
mov
hlt
cmpsb
aas
add
scas
dec
adc
sbb
loop
fcomps
setp
mov
bound
sbb
mov
add
data16
add
aaa
mov
in
test
mov
mov
filds
mov
dec
ds
jns
leave
cmpsb
lret
lahf
outsl
out
xor
pop
and
ror
loop
arpl
fs
pop
gs
fwait
lods
aad
adc
popf
adc
mov
stos
int3
mov
jns
jne
dec
jno
enter
lret
sub
sbb
dec
mov
je
inc
xor
and
imull
mov
dec
xchg
rolb
pop
into
imul
jnp
push
mov
es
jns
push
incb
xor
cld
icebp
pusha
loop
cmc
mov
mov
or
lcall
clc
cwtl
mov
mov
and
sub
xchg
adc
pop
jae
cwtl
outsl
insl
mov
fcom
movsl
out
lcall
ljmp
sbb
jmp
cmpsl
enter
jge
xor
bswap
lret
test
sub
mov
jnp
in
es
sbb
mov
in
in
shl
and
mov
pop
xchg
aas
sub
inc
rorl
pop
jp
add
out
push
mov
cld
cmc
dec
inc
xor
icebp
lods
xor
jno
and
ja
fldl
call
ds
div
test
add
jecxz
ficomps
xorb
test
aam
jg
test
xlat
pusha
cmp
mov
xchg
sbb
xchg
xchg
imul
cmp
ss
movsb
jmp
insl
lds
lret
adc
es
jbe
jno
ret
nop
add
frstor
pop
loopne
mov
sub
aad
dec
scas
ja
lds
in
xor
repnz
fcomp
add
ss
sub
test
dec
push
or
lcall
lock
enter
jmp
cli
and
mov
rorl
fcoms
cmp
xor
aam
cmp
jne
xchg
lret
jecxz
das
movsb
iret
arpl
lret
push
fucomi
and
inc
out
or
test
cld
mov
cmpsl
aam
int
pop
adc
mov
les
neg
data16
lret
rorb
pop
add
repz
push
jmp
mov
pop
jmp
bound
cmp
xchg
sahf
mov
enter
test
cs
cld
dec
mov
add
jns
test
in
push
sbb
push
fcoms
jle
arpl
push
mov
dec
mov
ljmp
push
rcll
push
out
js
adc
movsb
push
sub
pusha
mov
adc
sbb
mulb
aas
pop
jle
xchg
lcall
arpl
mov
sbb
ja
punpckhbw
orb
xchg
sub
adc
clc
mov
pop
clc
fidivrs
push
sbb
aad
add
or
sbb
ja,pn
push
and
hlt
fdivrl
shrb
cli
inc
xor
jns
imul
cmp
loopne
cwtl
jns
cmp
lret
icebp
mov
addr16
mov
push
xor
dec
int
insb
lock
inc
mov
mov
jnp
ret
lock
cmp
cld
push
jg
add
fldt
rcll
adc
ja
pop
push
cmp
adc
xchg
sbb
fisttpll
mov
jb
jecxz
pop
cs
fwait
cltd
dec
inc
rcll
inc
shll
mov
xor
cmpsl
pop
jg
pop
jge
push
mov
jge
mov
xchg
mov
cwtl
repnz
cld
int
cmpb
or
movsl
clc
mov
int
mov
mov
lock
add
addr16
inc
sub
cltd
or
jge
xchg
dec
sub
lods
aam
sti
dec
and
pop
lcall
pop
xchg
and
cmpsl
jle
cmp
inc
fdivr
jge
adc
insb
pop
sbb
outsl
cld
jge
add
pop
or
push
mov
inc
in
lret
pop
push
add
add
es
popl
jns
and
mov
dec
add
jle
in
inc
frstor
and
aaa
stos
lds
loope
shld
dec
lret
in
xor
and
loope
mov
cmp
movsl
in
insl
mov
into
sbb
gs
push
or
adc
mov
scas
jo
leave
jge
ljmp
ljmp
cmp
or
hlt
arpl
inc
mov
aam
or
sbbb
and
push
icebp
lahf
dec
out
insl
test
loop
or
xchg
jmp
or
mov
cltd
lock
mov
fistps
xchg
mov
lahf
cmc
movsb
call
sbb
notl
cmp
sbb
mov
adc
pushf
dec
cmp
cmpl
fwait
or
icebp
mov
cmp
insb
popf
icebp
in
jmp
insb
arpl
mov
imul
cwtl
cmp
js
xchg
loope
and
sub
imul
adc
lods
pop
shrb
pop
jae
je
and
repz
mov
mov
lret
or
sarb
lahf
pop
push
adc
call
bnd
in
std
lds
imul
pop
pop
jmp
ret
inc
icebp
enter
cltd
xchg
dec
sbbl
frstor
jb
sti
add
into
add
adc
mov
test
cmp
xchg
clc
push
sub
icebp
sub
sbb
push
fldenv
cltd
mov
aam
cmp
shll
rclb
lds
clc
jns
jnp
cmpb
jl
push
add
cmp
nop
int3
je
or
add
or
xchg
inc
mov
shlb
subb
das
push
pop
test
fwait
push
lret
lods
jne
dec
jb
ret
pop
aad
loope
add
push
mov
insl
dec
ret
popa
out
mov
mov
mov
or
xor
rorb
xchg
cmp
mov
push
cmp
sahf
pushf
mov
cwtl
cwtl
sbb
and
icebp
stos
dec
add
jmp
popa
inc
xchg
adc
xor
xchg
aas
push
add
test
mov
sub
sbb
mov
std
js
imul
stc
xor
in
mov
cltd
je
push
cmpsb
adcb
aad
lods
fcmovb
call
pop
sub
icebp
adc
std
inc
test
add
pop
in
push
push
xor
inc
lock
addb
jne
inc
and
int
push
bound
mov
imul
xchg
ret
mov
pop
out
or
add
gs
dec
das
xor
or
mov
jo
imul
jle
shlb
insb
arpl
mov
fldenv
push
xchg
add
mov
push
test
cmc
xorb
rcrl
adc
mov
popa
imul
out
test
je
das
cwtl
inc
adc
cmp
xor
mov
cmpsl
lods
lock
mov
xchg
roll
inc
aam
test
mov
pusha
xor
bound
cmp
dec
adc
int3
add
pop
sbb
inc
pushf
adc
pop
dec
cmpsb
push
enter
jae
xorl
lods
fdivs
ja
inc
push
dec
pop
insb
jo
mov
xchg
inc
lods
adc
lret
hlt
adc
dec
stc
fldl
jb
jp
push
bound
roll
pop
push
xchg
sbb
push
lods
mov
xchg
jg
xchg
cmp
mov
jp
in
jg
shrl
pushf
mov
xor
in
loop
jns
mov
fldl
inc
subl
mov
mov
dec
jbe
add
dec
jge
lahf
mov
jb
pop
pop
out
cmp
lock
cltd
mov
sbb
push
jg
sbb
data16
mov
data16
mov
adc
pop
lods
popa
sub
dec
sub
push
lret
sub
push
mov
out
mov
adc
add
xchg
in
sub
dec
cli
hlt
sbb
fdivrl
sbbb
pop
adc
push
jae
add
push
adcl
pop
loop
cmp
es
push
pushl
xchg
lret
pop
ds
add
mov
sbb
popa
and
jbe
sti
jl
shrb
xchg
call
xlat
cmp
sbb
insb
inc
xchg
xor
xchg
sbb
stos
inc
cltd
sub
cmp
das
leave
push
fs
js
ss
push
adc
mov
xchg
int3
lods
sbb
mov
mov
jp
add
inc
pop
cltd
pop
mov
xchg
lods
daa
xlat
mov
sbb
inc
sbb
dec
pop
add
das
insb
and
test
stos
stos
sbb
ja
mov
imul
sub
jl
pop
sub
dec
test
xor
jo
pop
stos
fldt
test
fldenv
or
fwait
pop
sub
xchg
aad
jno
out
dec
out
dec
lahf
jl
jecxz
jne
adc
ret
int
mov
fsubrl
push
jge
faddl
or
inc
cmpl
insb
js
rol
subl
jmp
push
xchg
push
sarb
xlat
cmp
pop
popf
iret
lahf
pop
xchg
mov
outsl
or
sbb
dec
fnstcw
sbb
cltd
shr
jno
shl
repnz
out
out
inc
roll
sbb
in
cmp
xchg
or
push
xchg
xchg
pop
lds
jge
xchg
movsl
cmc
in
xor
scas
aam
les
jge
lret
es
loop
cmp
fldt
lods
incb
sbb
icebp
and
testl
mov
jns
xchg
adc
sbb
push
inc
test
ficoms
sti
xor
lds
xor
or
repnz
push
jo
jae
adc
pop
xchg
mov
cli
and
xorb
aad
push
push
out
fnstsw
xchg
fs
test
push
and
mov
pushf
sahf
mov
data16
push
and
inc
xchg
sahf
fdivl
xchg
pop
fistl
mov
sbb
cmp
or
xchg
pop
mov
dec
push
pop
cmp
adc
adc
aad
and
mov
rcr
nop
scas
shlb
call
mov
sbbb
insb
mov
in
fdivrl
push
enter
jle
pop
pop
push
sub
fwait
xor
mov
sahf
xchg
pop
pop
pop
xchg
pop
outsl
lret
cmp
daa
and
and
sarb
xor
jmp
mov
mov
cmpsl
ja
lret
pop
or
sub
jmp
push
aad
fstps
xor
and
mov
ds
push
movsb
inc
out
test
ret
xchg
dec
push
mov
xchg
pop
and
clc
rolb
xor
lods
jo
test
in
push
ficomps
or
ficompl
idivb
xor
and
dec
sub
sub
and
jmp
cmpsb
imul
pop
outsb
adc
mov
jg
mov
jo
loop
push
add
insl
jae
pop
in
jne
push
outsb
add
sub
add
popf
jno
sub
test
je
movsb
cmpsl
aas
in
sbb
cmpsl
mov
mov
jae
subb
sub
pop
xor
loop
sbb
in
dec
ja
xor
jp
push
insb
inc
push
xor
rcrb
jbe
jno
mov
nopl
sbb
sbb
dec
sub
cmp
loope
lods
loope
mov
pop
pop
ret
sbb
or
fldl
adc
movsl
or
hlt
mov
in
mov
push
mov
mov
mov
fisubl
movsb
mov
daa
cs
in
lcall
sti
pop
xchg
int
adc
sbb
aaa
jbe
mov
mov
ja
xor
push
test
mov
mov
ja
xor
lea
cmpsl
xor
xor
sarb
test
pop
gs
cmp
int3
lock
dec
in
mov
pop
out
lds
and
js
push
dec
popf
lods
inc
in
bnd
sub
pushf
int
aaa
jns
sub
dec
mov
pop
cmp
or
push
push
cmp
push
xor
xlat
es
dec
xor
jo
or
mov
pop
add
lret
arpl
dec
ret
jo
mov
xor
cwtl
xor
mov
mov
xor
cld
int
cwtl
fisttpll
ror
aam
and
pop
ja
xlat
fisubrl
mov
xor
in
sub
sbb
inc
mov
pop
xor
jl
outsb
or
or
test
and
and
sbb
dec
jecxz
test
ds
or
in
push
in
daa
repz
mov
push
mov
xor
jl
xor
fsts
mov
in
adc
popa
xchg
out
fwait
dec
nop
cmc
add
fwait
sbb
bound
jae
mov
sahf
xchg
pop
inc
add
mov
mov
adc
aad
jecxz
adc
pop
imul
jne
clc
jne
push
shrl
int
mov
stos
fwait
in
nop
int3
imull
push
lahf
pusha
xor
pop
fldl
test
and
shrl
orl
in
jnp
jecxz
scas
ret
xchg
in
andb
mov
inc
psllq
aas
inc
fdivl
and
mov
cmp
iret
inc
push
and
or
xchg
pop
mov
ror
or
test
daa
sub
sbb
dec
lods
push
leave
pop
stc
jg
or
mulb
psubd
jmp
jnp
loop
inc
ror
sahf
add
sbb
mov
incl
ret
inc
and
mov
jnp
mov
stos
loopne
xor
addl
dec
cmp
lea
sub
mov
std
xchg
shrb
xchg
xchg
push
or
clc
xchg
xchg
jne
lock
mov
jne
cld
xchg
andl
pushf
mov
lods
je
fisttpl
or
aaa
adc
imul
pop
inc
pop
mov
or
push
inc
ja
das
bound
mov
sbb
hlt
std
jmp
jecxz
arpl
mov
dec
dec
shrl
xor
imul
xor
inc
jle
or
or
test
fs
xchg
rorb
cmpsl
loop
das
mov
push
lret
dec
out
or
icebp
mulb
lds
mov
andl
adc
mov
xchg
ret
push
inc
cwtl
or
sbb
cmp
shll
push
mov
lea
ja
jo
iret
lret
adcl
clc
cld
in
sub
cs
xchg
inc
pop
jp
adc
jae
nop
or
in
mov
fmull
and
fsubrp
aam
mov
push
ret
mov
mov
mov
repnz
out
sbb
pop
ret
imul
mov
adc
pop
mov
out
iret
aaa
imul
testl
xor
inc
sbbl
in
xchg
shrb
je
aas
xchg
shlb
scas
fnsave
sub
xchg
int3
lock
or
lods
pop
sti
push
jmp
jno
fdiv
xor
xor
pop
jns
mov
mov
or
xor
clc
dec
stos
mov
jg
push
icebp
in
mov
mov
xor
pop
sbb
ret
cwtl
je
xchg
add
push
xchg
scas
mov
test
fwait
mov
mov
in
ljmp
ret
xchg
shrb
out
outsb
int
je
ret
adc
test
mov
mov
lock
je
ficompl
ja
stos
cmpsb
sbb
add
add
mov
add
adc
shlb
clc
shr
mov
push
outsl
xor
dec
pop
divb
cli
sbb
push
pushl
addr16
mov
dec
out
cmp
push
adc
jmp
daa
cmpsb
jp
fmul
daa
mov
scas
ljmp
fcmovnb
pop
dec
dec
dec
lahf
cli
xor
gs
shlb
dec
sahf
cmovl
jbe
dec
jnp
das
mov
cmp
pop
add
sub
sbb
fdivp
mov
leave
imul
or
and
dec
pop
test
imul
cs
negl
inc
pop
cmp
addr16
and
fildl
pop
lcall
out
cs
adc
or
and
aad
fistpl
or
aam
pop
lods
ficomps
in
dec
hlt
or
fwait
popa
lock
clc
lods
mov
dec
fs
out
testl
int3
repnz
sbb
shufps
and
in
sarl
sbb
loope
repnz
std
cs
lock
mov
int3
nop
das
and
arpl
lahf
enter
xchg
jo
shr
jb
and
aad
call
push
push
aas
in
mull
dec
imul
adc
and
xchg
lods
rcrl
inc
sbbl
push
jmp
xor
insb
inc
inc
add
mov
cmp
or
scas
movsl
xor
fisubl
and
mov
mov
lret
fs
mov
mov
loope
xchg
mov
cltd
pop
bound
fildll
mov
fwait
lods
push
les
lea
xchg
mov
cs
test
inc
sarl
dec
cmpsl
ds
or
mov
sub
and
push
push
icebp
mov
dec
pop
add
xchg
inc
in
hlt
jbe
jno
mov
mov
in
mov
ljmp
shlb
jno
sahf
xchg
inc
push
cmp
lret
movb
xor
shlb
and
add
push
pop
loop
mulb
bound
fisttps
daa
dec
je
and
out
out
decb
insl
cmc
cmpsb
out
std
hlt
cmc
sub
sub
ss
shlb
pop
ds
fisubrl
test
lock
iret
int
inc
test
stc
xchg
add
ljmp
int
pop
rorl
lahf
or
adc
cmpsb
or
xchg
mov
sub
sub
inc
xor
adc
jae
out
adc
pop
add
je
dec
mov
outsl
je
lock
add
popa
dec
mov
xor
jbe
mov
push
repnz
pop
push
sarb
adc
sub
push
push
ss
push
adc
xchg
jno
pop
test
fs
nop
xchg
add
sbb
inc
mov
rcll
out
mov
sub
push
movsb
jno
je
sbb
clc
call
jecxz
aam
push
fisubl
mov
test
lcall
dec
fidivrs
cmp
popf
lret
mov
mov
in
fcmovnb
scas
and
xlat
pop
ret
jb
fimull
jmp
sub
imulb
mov
and
out
sbbl
shl
xchg
call
cltd
mov
jecxz
aas
xor
push
inc
push
push
mov
clc
pop
add
sahf
addr16
mov
ficomps
repnz
pop
enter
bound
mov
jecxz
mov
and
sti
mov
lahf
add
das
xor
lret
lret
xchg
test
in
dec
or
es
inc
dec
scas
mov
imul
loop
push
push
inc
xor
adc
ds
out
mov
out
inc
mov
div
jns
in
dec
sahf
dec
fisubrl
or
mov
jbe
mov
add
int3
aad
mov
sub
fwait
mov
out
xchg
mov
sub
scas
fdivrs
cmp
out
cmp
add
pushf
or
jo
shrl
in
mov
and
push
mov
add
bswap
testl
or
mov
and
cmpl
or
aad
xchg
movsl
pminub
xor
jbe
cmp
icebp
stos
xor
push
iret
inc
and
add
aad
cmp
jecxz
jb
lods
lds
ret
lret
adc
jle
mov
cld
roll
jnp
lds
dec
add
movsl
xor
add
mov
sub
arpl
xchg
xchg
add
jg
mov
mov
cmc
dec
iret
rolb
popf
push
jl
es
cwtl
gs
adc
test
jbe
and
mov
sub
push
dec
aas
push
mov
in
sbb
jmp
push
jnp
insb
sbb
jg
loope
lea
push
cmp
mov
cmpsl
lock
mov
in
mov
pop
into
icebp
outsl
adc
inc
dec
icebp
mov
int
test
fwait
adc
in
or
xchg
aas
testl
or
xchg
pop
in
bnd
xchg
xor
pop
push
and
iret
loope
inc
mov
dec
sbb
leave
inc
mov
lds
mov
mov
ds
loop
pushf
jno
loop
jmp
mov
test
frstor
push
mov
push
lock
and
lock
sub
sahf
push
and
xlat
ds
outsl
adc
popa
inc
add
aam
loope
fwait
xchg
jp
xchg
ret
push
scas
pushf
fwait
pop
scas
ss
hlt
int3
test
insb
xlat
lock
inc
add
mov
int
mov
add
vsubss
cltd
add
leave
aas
jbe
loopne
push
lock
scas
movsb
or
gs
pop
notb
jmp
mov
cmp
or
mov
pop
pop
lods
lcall
pushf
jns
mov
sub
xor
sub
add
cmp
iret
adc
mov
out
xchg
iret
cmp
ss
pop
rorb
jne
in
lret
sub
imul
or
addb
and
mov
xor
loope
loop
mov
gs
shlb
xor
mov
mov
pop
imul
int3
test
xchg
cmpsb
mov
add
sub
inc
ja
ret
stos
mov
rorl
lahf
xor
pop
add
add
loopne
wbinvd
ja
cmc
push
fwait
mov
aam
and
and
aaa
outsb
xor
in
cmpsl
xchg
lods
xor
xchg
xchg
in
inc
loopne
dec
dec
js
es
mov
push
xchg
push
mov
sbb
out
or
int3
rclb
xor
in
in
jae
fists
data16
gs
cmp
xor
mov
mov
test
jae
sbb
fcmovb
ss
mov
popa
cmpsb
shl
lcall
cwtl
ret
xchg
sbb
lcall
dec
mov
sub
mov
inc
jnp
idivl
cs
jbe
fwait
xchg
fstpt
adc
inc
pop
or
and
sub
mov
gs
mov
xor
cmp
lret
rcrb
dec
or
inc
es
jb
pop
nop
clc
inc
push
scas
loope
inc
call
aam
cmp
repz
mov
cs
lods
dec
push
mov
mov
lahf
mov
popa
jp
add
loopne
xchg
sub
rolb
inc
push
mov
xchg
sbb
sub
adc
jl
fwait
leave
sbb
daa
dec
aas
xchg
bound
dec
stos
cmc
add
mov
sbb
pop
sub
in
xor
and
xchg
sub
or
js
cmp
lcall
xchg
xchg
icebp
cmc
add
addr16
push
mov
loopne
fisubs
push
mov
or
loopw
ss
out
or
jmp
out
xchg
cmp
lret
push
sub
test
jp
sbb
fs
mov
cmpsl
add
or
xor
dec
sti
sar
outsb
popa
les
out
lods
std
scas
inc
loop
ss
lods
fcomps
xchg
xlat
mov
test
test
clc
xor
loop
cmp
out
and
push
cmp
push
popa
int
xchg
cli
imul
fs
dec
lret
and
call
dec
int
lock
cli
push
or
inc
fwait
inc
xchg
mov
and
stc
sub
movsb
jg
dec
out
jae
pop
gs
pop
fsubl
stos
inc
mov
or
and
daa
mov
mov
out
aas
and
pop
es
cmc
mov
push
cwtl
and
mov
push
add
xchg
add
sbb
sti
loope
outsb
fldenv
cmp
stc
jle
pop
negb
out
mov
xor
ret
imul
fwait
adcw
sbb
xor
dec
add
loope
pop
ffree
push
mov
jnp
rorb
call
enter
xchg
jbe
std
xchg
cmpsl
xchg
lock
and
push
in
clc
cwtl
mov
pop
adc
jl
popf
pop
xchg
pop
movsl
das
xchg
adc
mov
push
aas
jnp
fnop
mov
add
jbe
jb
push
fcmovb
mov
dec
pop
xchg
out
jl
cmp
lret
jg
and
outsb
cwtl
aad
hlt
sbb
cmp
dec
cmpsl
sbb
and
sub
ficoms
xchg
adc
push
sbb
clc
push
movsb
pusha
leave
mov
out
push
push
mov
mov
mov
mov
mov
pop
mov
les
mov
rorb
sti
je
jns
ss
in
cwtl
cmpsl
adc
push
jmp
in
adc
xor
inc
ds
stos
pop
xchg
loop
mov
sbb
icebp
jp
aad
pop
dec
sbb
insb
mov
bound
push
rolb
aad
or
fmulp
dec
cltd
and
push
mov
jecxz
push
in
bound
adc
je
ret
dec
mov
stos
mov
enter
jl
push
xor
jecxz
xor
xorl
mov
xor
jge
outsb
cld
push
stos
fsubrp
mov
je
popf
clc
dec
pop
aas
mov
into
jno
call
test
mov
push
or
pop
inc
in
jg
adc
cld
je
jb
out
jmp
dec
popf
xor
push
popf
lds
mov
push
xor
mov
inc
push
je
clc
inc
ljmp
lret
lahf
mov
mov
mov
sub
xchg
mov
adc
ss
mov
mov
aad
and
sub
mov
pop
scas
stc
inc
xchg
mov
stos
iret
inc
xor
sahf
adcl
mov
lret
dec
push
or
xchg
jnp
jg
aam
je
stc
inc
sbb
shll
ljmp
out
add
mov
pusha
fiaddl
es
scas
mov
daa
pushf
xchg
out
stos
enter
add
clc
xor
lods
mov
mov
jg
shll
int
ss
sub
mov
or
scas
mov
loopne
lret
pop
cltd
les
movsl
inc
fldt
xor
and
shll
stc
jo
adc
xor
ds
test
dec
xor
cmp
push
jae
pop
mov
pop
xor
lods
inc
push
xor
mov
mov
js
subl
aaa
pop
push
out
dec
xchg
mov
cmp
int
adcl
or
dec
push
aas
sbb
push
inc
movsb
jmp
jae
adc
out
jb
out
add
aas
dec
add
add
mov
pop
add
xchg
arpl
in
jno
popf
mov
pop
jo
fmull
ds
sahf
pop
push
and
inc
add
mov
idivl
sahf
sbb
mov
rol
push
les
mov
dec
mov
and
rcl
out
sub
xchg
fldcw
out
aaa
mov
inc
inc
ret
test
dec
sub
dec
pusha
mov
mov
rcr
mov
lret
sub
push
je
rorb
and
xor
pop
js
stos
mov
cs
fidivs
push
mov
mov
sbb
fld
push
aaa
rcrb
dec
daa
xchg
sub
push
shlb
xchg
bound
in
sbb
in
enter
aam
jle
fnsave
pop
add
push
call
pop
dec
imul
repz
subb
les
sahf
xchg
daa
insl
fs
push
cmpsb
inc
out
push
mov
cld
mull
in
cmp
fwait
push
push
and
ljmp
dec
mov
movsb
stos
inc
shrl
mov
mov
jae
sub
inc
imul
decb
mov
dec
iret
sbb
mov
aas
add
faddl
xor
inc
mov
jbe
pop
inc
dec
pusha
dec
sub
aad
test
pop
xor
lret
add
rolb
xchg
adcl
add
mov
or
divl
fnsave
fs
cmp
inc
cltd
or
add
pop
cwtl
and
jnp
ljmp
loope
ret
push
popa
or
popf
mov
xchg
cld
push
push
add
and
push
xchg
mov
or
xor
mov
lret
imul
xchg
hlt
dec
sub
inc
mov
aad
sarl
lods
clc
popa
sbb
out
bnd
stc
adc
pop
and
movsl
scas
pop
test
dec
je
push
xchg
jge
in
cmp
pop
mov
cmpsb
insb
mov
aas
cs
andl
leave
scas
or
out
xor
addl
inc
int3
adcl
inc
orb
imul
push
or
mov
roll
push
push
mov
or
in
adc
add
in
sbbb
aaa
add
mov
mov
dec
add
arpl
adc
cli
and
loope
btc
inc
aam
push
filds
push
sub
fldt
ljmp
mov
lahf
sbb
mov
add
jp
idivl
push
out
xchg
push
sbb
cmpsb
ss
pop
call
and
rclb
cmovs
inc
push
push
fldcw
push
pop
data16
sub
inc
dec
sub
or
push
push
mov
xchg
mov
les
jne
cmc
push
inc
and
rcrb
mov
jne
pop
pop
dec
fwait
ja
ret
jmp
clc
and
sub
fs
sarb
outsl
das
cwtl
cld
lret
mov
and
mul
mov
sub
hlt
int3
das
adc
xchg
iret
sub
xchg
and
sub
fcom
clc
and
das
push
js
cltd
jnp
std
sub
pop
push
stc
push
sbb
mov
scas
mov
mov
stos
dec
mov
cld
mov
std
xchg
mov
out
cmpsl
sti
pop
repnz
orl
jle
dec
fwait
loope
mov
xor
cltd
and
xor
cmpsl
in
sub
xor
and
fdivrs
jns
mov
mov
dec
test
psraw
imulw
jp
fidivl
pop
add
jns
inc
add
jmp
aad
jae
out
dec
push
and
test
xor
push
fildll
dec
xchg
push
push
imul
aas
push
js
jbe
roll
test
jg
mov
popf
xor
sub
xchg
out
je
add
and
lret
add
add
xchg
lock
push
xchg
jecxz
lahf
push
ljmp
and
lahf
or
xorl
and
or
add
mov
fistpll
scas
and
pop
fimuls
push
dec
inc
outsl
lea
test
loopne
mov
sub
mov
cmpsb
cmp
js
cmp
pop
bound
adc
mov
inc
inc
clc
cwtl
rorl
cmp
add
in
dec
test
and
xor
mul
xor
mov
mov
sbb
mov
xor
xor
pop
loop
pop
jle
pop
pcmpgtd
lcall
push
fwait
dec
mov
mov
sub
je
and
fidivrl
arpl
cmc
pushf
sbb
dec
push
je
lret
filds
dec
jae
std
cli
push
aad
dec
jbe
arpl
jp
ss
imul
push
fldcw
js
dec
in
xchg
push
aaa
lds
sub
iret
sub
xchg
lret
scas
arpl
pop
mov
sbb
popa
mov
and
push
loop
inc
adc
insb
inc
mov
pop
scas
fs
cmp
ret
int
pop
sbb
test
into
pushf
jecxz
ja
mov
std
repnz
jbe
icebp
sti
xor
ret
xlat
je
jnp
daa
pop
out
or
fadd
ret
repz
inc
xor
pop
into
dec
fwait
adc
xchg
adc
cwtl
repz
movsb
mov
push
push
xor
test
cmp
vdivps
je
ret
add
adc
pop
stc
je
adc
inc
roll
dec
movsl
mov
fidivrl
fs
xchg
in
enter
cltd
insb
clc
ja
sbb
icebp
dec
jo
and
mov
cmp
call
shll
mov
sarb
pop
mov
stos
mov
lods
pushf
imul
lea
scas
dec
xor
repz
pop
inc
in
shl
in
aad
xchg
dec
mov
mov
bound
adc
mov
inc
inc
inc
insl
jp
sti
dec
test
xor
out
dec
aad
xor
jne
sbb
aas
lahf
sbb
pop
sbb
fcomps
mov
jno
jg
mov
repz
adc
int3
cmp
enter
imul
pop
xor
cmp
movsb
sbb
call
xchg
mov
add
add
push
mov
mov
in
sbb
add
jmp
das
mov
jo
dec
fwait
movsl
fcomps
sar
add
xchg
icebp
cs
pusha
push
idivb
mov
xchg
movsb
jno
repz
data16
movsb
add
pushf
stos
and
out
cmp
sbb
movl
pusha
jb
cmp
sub
sub
adc
dec
ss
ljmp
inc
movsl
sub
ljmp
outsb
and
mov
lods
in
cmp
adc
inc
out
jge
or
mov
cmp
adc
enter
adc
add
sti
cwtl
lea
sbb
jo
popa
add
mov
or
sbb
insl
nop
lret
sbb
rolb
int3
or
sub
sub
aam
ret
cmp
es
repnz
xor
adc
aaa
in
shrb
in
scas
or
fmul
inc
jb
adc
ret
cs
rcr
fisubrl
outsl
ljmp
or
sub
add
aad
jmp
mov
or
les
xchg
mov
jmp
jecxz
sbb
inc
js
negb
cmp
jp
aaa
push
xchg
xchg
jb
add
jns
cs
data16
mov
lods
pop
je
adc
xlat
shrl
mov
test
push
pop
xor
sbbl
or
push
push
outsl
test
mov
stc
cmpsb
lods
mov
mov
mov
das
gs
xchg
aam
or
pop
mov
and
jle
xchg
lahf
mov
cmc
inc
add
and
xor
stc
pushl
cmp
jmp
fidivrl
clc
adc
movsl
iret
push
xlat
mov
popf
insl
fmuls
adcl
mov
test
les
imul
int
inc
arpl
mov
jle
cmp
nop
xorb
test
push
mov
mov
push
cmc
or
push
jg
inc
inc
sbb
xor
in
and
cmc
cli
movsb
jnp
pusha
aam
mov
repz
aad
inc
sti
cmp
pop
and
rorl
xor
lods
fs
push
fisttpl
mov
mov
cmpsb
inc
jmp
mov
fidivrl
xor
inc
loop
push
or
pop
mov
push
mov
adc
in
xlat
xlat
loop
xor
insl
jle
scas
mov
rolb
push
aam
or
pop
pop
inc
mov
mov
and
add
sahf
push
mov
arpl
sub
jle
xchg
add
or
mov
jecxz
inc
neg
mov
fwait
test
pop
les
test
xor
add
mov
jno
mov
imulb
andl
push
adc
or
mov
scas
xlat
mov
sbb
rclb
jecxz
rolb
clc
sbb
iret
icebp
push
add
mov
in
outsl
sub
ret
adc
mov
xchg
pop
add
push
push
jmp
inc
mov
bound
inc
jb
or
xor
rep
dec
cmp
dec
movsl
adc
fnstenv
fildl
push
inc
adc
mov
fbld
mov
insl
mov
cmpsb
lcall
out
cwtl
popa
lea
out
mov
xor
add
jl
insb
mov
pop
cs
mov
adc
test
lods
insl
cmp
dec
and
mov
das
out
add
add
out
addb
pop
rcr
mov
jo
sub
sbb
shr
aad
sbbb
aas
push
ret
aaa
lock
push
int3
and
dec
push
cmpsl
test
loop
xchg
cmpsb
leave
jne
mov
adc
cmp
jo
and
push
fcoms
mov
or
mov
call
xchg
xchg
mov
icebp
jo
outsb
aaa
imul
cmp
pushf
xchg
mov
add
out
or
inc
dec
add
stc
pop
andl
sub
mov
cltd
ja
xor
adc
test
cmpb
push
lret
lcall
lret
add
cmpsb
or
ds
inc
pop
sahf
clc
std
jge
sub
js
mov
cli
xor
leave
aad
cmpsb
das
inc
aad
and
lahf
orb
xchg
mov
jp
sub
or
pop
inc
lcall
sub
xor
xchg
sbb
mov
cli
iret
addr16
or
dec
jno
std
std
push
cmp
mov
shll
rcll
imul
add
mov
xor
cmp
xchg
aam
pushf
mov
cmp
push
pop
data16
adc
popa
aam
push
jle
into
sbb
rcrl
in
out
push
loope
stc
mov
iret
xor
pop
popa
or
lods
test
sbb
lret
test
outsb
jb
xchg
xchg
cs
std
cmp
pop
push
mov
cwtl
popf
call
mov
pop
sub
mov
mov
sbb
sbbl
cmc
xchg
dec
jmp
xlat
jp
clc
fisubrl
adc
inc
ja
ret
adc
ss
or
dec
mov
mov
dec
push
pop
xchg
jg
in
and
fs
jg
movsb
scas
out
push
fmull
scas
leave
or
push
or
ds
fdivrl
mov
ret
cmp
insl
loope
int
inc
das
jno
div
mov
push
shrb
test
push
in
mov
xchg
or
fisubs
jge
adc
sar
jne
jecxz
test
lret
stc
stc
or
dec
or
sbb
pusha
pop
inc
imul
cmp
lock
aaa
mov
mov
loop
jg
mov
push
mov
mov
mov
in
repz
imul
shrb
jne
xlat
mov
push
rcrb
or
ljmp
cmp
out
rep
inc
stos
xor
cwtl
dec
aam
shlb
mov
jno
xor
add
frstor
add
push
pop
iret
or
sbb
hlt
scas
xchg
shrb
xor
jno
or
jge
cmp
jno
dec
lods
mov
push
jb
sarb
outsb
fsubr
std
sarb
cmpb
or
xchg
int3
stc
insl
data16
loope
clc
addr16
dec
jbe
aam
insl
into
xor
mov
adc
sbb
sbbl
jp
jbe
xchg
stos
int
repnz
aas
clc
cmpsl
push
or
push
jns
add
test
push
mov
jg
movsl
andb
je
jg
negl
imul
xchg
jl
cmpsb
js
cmp
push
jg
into
xchg
stc
enter
shrl
out
test
jae
mov
aam
outsl
dec
jmp
fidivl
and
jnp
cmp
sti
or
icebp
lds
xchg
int3
addr16
or
aam
sub
lcall
jle
cwtl
and
mov
xchg
xor
lock
int3
gs
pop
sarb
fsubrl
lea
fwait
mov
insb
bnd
insl
nop
cmp
aam
sub
lahf
in
add
add
sub
aad
mov
push
aas
xor
jmp
popa
or
add
test
inc
test
xor
push
out
adc
int3
cmp
inc
jbe
pushf
ror
aas
push
out
push
outsb
lods
mov
mov
es
xor
mov
and
inc
mov
inc
out
fimull
add
xchg
das
add
outsl
dec
ljmp
cmp
adc
mov
test
repnz
mov
aaa
adcb
xor
xchg
push
das
into
jnp
push
dec
aam
push
dec
mov
push
pop
hlt
shlb
ljmp
push
leave
xor
jbe
ja
adc
stos
je
fsubrl
enter
jae
ret
adcl
inc
cmpsb
bound
fwait
sub
inc
mov
icebp
stos
adc
pusha
dec
pop
mov
cmp
adc
add
push
add
jg
subl
pushf
xchg
sub
xor
xor
pop
loopne
out
fidivrl
jecxz
hlt
push
mov
mov
sbb
ds
lods
pop
ss
pop
xor
aam
or
sbb
pop
lahf
cmp
push
mov
xchg
aad
and
push
aaa
mov
js,pt
dec
repz
test
push
or
mov
cmp
out
cs
xor
adc
lock
jmp
add
mov
in
pop
shl
or
es
sub
cmc
daa
push
push
mov
cmpsb
cmpsb
sbb
mov
inc
popa
nop
sbb
mov
xor
dec
sbb
mov
sbb
dec
and
sub
or
repnz
out
add
aaa
pop
nop
aas
cmpsb
push
inc
shlb
lea
inc
inc
insb
jnp
mull
mov
dec
mov
cld
popa
xchg
in
ficomps
popa
movsl
sbb
dec
clc
jp
and
cli
xlat
mov
repnz
mov
mov
sub
or
jo
push
pop
xor
inc
mov
sbb
leave
mov
mov
ret
mov
push
movsb
out
cmp
mov
cs
out
neg
scas
lahf
rclb
pushf
jle
xor
int
mov
mov
xchg
movsl
mov
jae
sahf
mov
lock
in
jecxz
mov
es
sbb
push
cli
test
stos
sub
enter
stc
sub
xor
rclb
add
out
fmull
jl
add
adcb
test
movsb
shll
xchg
repnz
sub
xchg
pop
ljmp
adc
call
shrb
lds
popa
ret
cmp
je
mov
push
mov
jl
xchg
sub
cmp
mov
lahf
stos
xor
insb
in
movsb
adc
pop
loop
mov
and
test
inc
sti
mov
push
xchg
scas
in
mov
loope
test
rolb
pop
add
repnz
add
sub
ljmp
pop
push
jns
jle
push
mov
xlat
xchg
popf
dec
mov
loop
or
cli
xchg
push
hlt
xor
daa
xchg
call
mov
stos
sbb
loope
mov
dec
fnsave
mov
mov
mov
jbe
mov
pop
stc
and
ss
sbb
mov
cmpsb
aad
fwait
jecxz
xchg
jmp
fisttpll
mov
cmp
loopne
mov
adc
out
pop
dec
or
mov
push
dec
and
cltd
loopne
push
xchg
sbbb
cmc
add
pushl
loopne
sbb
xchg
or
push
cmpsl
dec
or
push
mov
scas
push
inc
xchg
pop
idivb
fs
xlat
xor
popf
cmp
jmp
js
jne
ret
outsl
sub
cwtl
dec
jp
and
xchg
add
in
mov
jns
ja
adc
pop
ss
mov
popl
lahf
out
pushf
dec
mov
lahf
rorl
jne
ss
pop
sub
xchg
outsl
jg
ss
adc
push
test
xchg
lea
xchg
mov
sub
fnsave
repz
stc
cli
and
filds
lods
pop
xchg
cwtl
push
mov
aas
mov
jmp
cmp
pop
jnp
fmulp
daa
inc
ss
jbe
jmp
adc
popa
hlt
enter
in
sub
and
sti
jo
out
push
cmp
xor
dec
ret
inc
xor
aaa
push
and
sub
test
push
or
ret
das
insl
fs
negb
insl
mov
cmp
sahf
imul
and
fstpt
pop
mov
scas
push
data16
jb
popf
jge
cmp
mov
test
test
xchg
push
push
cltd
adc
ljmp
and
sub
in
or
push
adc
popa
or
and
lret
loope
pop
outsb
push
push
or
mov
aad
sbb
push
dec
or
xchg
les
lds
pop
cmpsl
pop
dec
sub
enter
xor
jge
fwait
push
icebp
jb,pt
cmp
sub
sbb
cmp
mov
cli
mov
pop
ss
cmp
lcall
into
push
std
les
leave
mull
jo
mov
lods
xchg
js
inc
rorb
decl
add
mov
cmp
hlt
dec
pop
repnz
lret
pop
out
daa
adc
cli
jl
mov
ret
push
mov
lcall
lret
lea
out
or
sub
outsl
inc
sti
xchg
ds
cmp
push
push
xlat
add
and
dec
inc
xor
pop
inc
insl
pushf
notl
jecxz
mov
sbb
imul
mov
sbb
and
dec
dec
xor
mov
dec
xchg
push
or
xchg
aas
sbb
mov
je
inc
movsb
inc
inc
pop
mov
mov
cmp
xor
and
scas
mov
push
add
add
dec
sbb
daa
dec
out
push
mov
ljmp
inc
jmp
imul
inc
mov
in
xor
aaa
ss
mov
jbe
or
adc
clc
inc
adc
xchg
push
iret
outsb
mov
mov
push
fsts
jnp
loopne
inc
pop
add
push
ss
xor
mov
loop
repnz
adc
pop
jge
mov
add
int
mov
push
dec
sbb
mov
mov
cmp
in
xchg
push
xchg
xchg
and
repnz
daa
jo
popa
adc
jge
dec
and
outsb
xor
add
dec
pshufw
pop
inc
test
mov
sar
jp
inc
pop
mov
in
fsts
insb
call
or
mov
mov
push
pop
stc
rclb
test
into
or
mov
bound
es
fmull
icebp
xchg
sbb
mov
sub
push
cmp
ficomps
dec
mov
aam
add
mov
mov
int
xor
subl
jl
lea
jg
aam
push
int3
popf
push
jmp
movsl
dec
mov
cld
fisttpl
sbb
sarb
fmull
outsb
sahf
fwait
int3
movsl
fnstenv
loopne
dec
hlt
push
push
pop
aam
js
mov
cs
hlt
cmp
out
dec
jns
iret
add
inc
pushf
fprem1
push
sbb
in
popa
lea
mov
lret
lahf
dec
or
test
sub
orb
pop
inc
lea
ret
inc
loop
inc
shl
lcall
add
pop
lea
push
push
mov
sbb
dec
es
and
mov
sti
push
inc
out
push
andl
adc
imul
insl
cmpsl
pop
and
and
addr16
mov
pcmpeqb
push
xchg
ficompl
mov
idivb
adc
push
movsl
in
dec
sarb
out
cmpsb
cli
or
xchg
clc
movsb
sti
or
fs
push
movb
push
or
repz
cltd
mulb
mov
sub
xor
dec
repz
out
filds
in
rorb
adc
int
gs
xchg
adc
inc
sub
and
cmp
mov
push
or
add
mov
xchg
and
andb
jp
ret
movsb
inc
or
xchg
inc
shlb
jp
lods
push
sub
push
adc
inc
cmpsb
xor
adc
mov
repz
jg
or
add
test
mov
push
mov
inc
pop
popf
push
ljmp
data16
fisubrs
daa
mov
jbe
sbb
loop
rclb
ret
adc
pop
addb
enter
xor
ljmp
int3
fcompl
out
dec
insb
lods
or
cmp
cmc
and
imul
std
adc
add
ret
dec
insl
push
cld
in
cwtl
adc
test
fiadds
test
xor
mov
mov
jno
iret
daa
ljmp
push
jb
test
jns
mov
lock
aad
mov
shlb
frstor
fdecstp
loop
fpatan
cmp
and
stos
jb
sub
mov
pushf
jg
or
insl
mov
daa
lret
bound
int
dec
mov
mov
out
sahf
insb
or
inc
fs
jo
mov
jnp
aas
xor
xchg
sti
cmp
cmp
stos
jg
pop
cmp
or
inc
fcompl
cs
nop
adcl
es
xor
jb
mov
cmpsb
daa
jl
cltd
pop
test
xchg
stos
pop
xchg
sbb
mov
pusha
mov
mov
pop
in
add
mov
xchg
mov
or
inc
or
shl
mov
jmp
rorl
out
imul
rclb
aam
sbb
mov
inc
cmp
int3
test
test
lea
aad
sbbl
ljmp
addr16
shrb
xor
pop
and
cwtl
mov
cmpsl
or
push
push
pop
stos
mov
outsl
cwtl
lcall
add
dec
cmpl
test
dec
testl
leave
test
lds
stc
add
jmp
in
adc
cli
cmp
jecxz
sub
cmc
add
push
je
sti
xor
test
clc
push
es
mov
jle
jnp
and
out
jecxz
lret
mov
rcl
test
jae
outsb
pushl
mov
mov
das
mov
int3
push
lods
ret
pop
sbb
ret
cwtl
rep
sub
xor
enter
and
push
sbb
push
leave
lods
stos
popf
cld
data16
movaps
jle
mov
shr
imul
arpl
push
faddl
cli
mov
adc
mov
mov
insb
mov
mov
mov
scas
popf
and
movsl
shlb
adc
mov
pop
ret
mov
in
clc
xchg
into
and
mov
xchg
into
cmc
or
je
pushf
and
adc
mov
mov
fisttps
mov
add
push
push
adc
dec
cmp
std
pop
sub
or
cmp
sbb
push
add
sbb
jnp
mov
hlt
ret
xor
dec
mov
sub
sti
sub
movsb
pop
or
pop
mov
mov
or
mov
dec
test
in
lods
adc
xchg
mov
dec
jns
adc
hlt
in
mov
imul
cs
aas
adc
jp
jno
pop
sub
mov
or
sti
pop
ss
movsl
loope
call
mov
dec
test
sub
scas
adc
movsb
decl
cmc
lcall
test
xchg
xor
xchg
sub
repnz
dec
fsts
lcall
int3
fwait
outsl
cs
or
in
xchg
imulb
ret
sub
inc
rolb
insl
loop
cltd
push
jle
aam
aas
and
xchg
jl
jae
test
dec
cs
jae
xor
jo
inc
mov
cltd
sbb
data16
jnp
and
sbb
scas
push
pop
pop
dec
scas
sbb
push
push
mov
out
out
sbb
adc
in
inc
mov
sbb
adc
and
faddp
frstor
inc
cmp
pop
pop
or
es
mov
stc
cmp
or
lahf
clc
arpl
push
arpl
out
ret
inc
incb
dec
sbb
cmpb
dec
clc
int
lea
xchg
mov
and
cli
and
shrb
jbe
bound
pop
pop
fwait
lods
mov
dec
fisubrl
mov
adc
fsubs
pop
fnstsw
aaa
test
bound
movsb
push
shr
out
jge
imul
stos
push
imul
outsb
or
xor
jne
stc
or
in
ds
or
xchg
das
mov
cmp
fsts
xlat
adcl
in
filds
gs
mov
mov
push
inc
xor
inc
nop
or
jne
shr
insl
and
dec
mov
push
aaa
inc
mov
xchg
mov
into
repz
call
dec
mov
mov
mov
dec
in
jmp
scas
push
xor
lahf
scas
sub
je
xchg
cmp
adc
fstpl
jp
cmp
pop
sarl
sbb
dec
xor
orb
pop
adc
jbe
adc
inc
and
test
push
adc
push
cs
test
jns
test
sub
mov
mov
movsl
xchg
scas
xor
cltd
or
xor
or
pop
mov
pop
andb
fmull
cmp
pop
cmp
fdivp
pop
push
stos
cwtl
pop
jg
out
aad
sbb
insb
adc
mov
adc
inc
dec
gs
jle
push
jo
xorb
lock
test
mov
sbb
pop
in
fwait
sub
aam
repnz
sbb
mov
jo
mov
dec
sub
dec
and
shl
mov
ficompl
adc
xchg
rcr
gs
fs
adcl
aam
push
push
or
inc
cmp
nop
jnp
icebp
mull
push
and
divl
push
jle
sbb
ss
ss
hlt
je
and
xchg
sub
pop
dec
rolb
cmp
mov
cmp
insb
mov
jno
pop
cld
dec
mov
inc
jno
push
test
fst
add
pop
xchg
ds
mov
out
jmp
imul
or
xor
imul
mov
fmulp
aas
dec
es
push
push
mov
sbb
add
bound
fadd
leave
mov
rcl
dec
gs
inc
or
or
shl
jmp
pushl
mov
xlat
in
lods
jmp
and
sbb
mov
out
mov
jo
xor
icebp
fbstp
rclb
sbb
xchg
jno
mov
lods
les
mov
push
pop
xlat
daa
lahf
mov
adc
mov
add
in
sub
aam
sub
pop
in
nop
xor
mov
xor
mov
loopne
dec
jle
pop
mov
xchg
adc
xchg
leave
aas
sbb
fcmovb
out
out
ficompl
int3
pop
and
cmovl
jb
mov
add
and
pop
mov
test
dec
add
xchg
lret
iret
fmull
jecxz
je
push
pop
jae
push
rcr
nop
jno
int
push
in
popf
xchg
test
dec
loopne
mov
cmp
aad
leave
gs
into
scas
dec
popa
inc
divl
icebp
cmpsl
adc
xor
adc
jae
fsubr
xchg
dec
lock
push
stos
cmpsb
fistpll
loopne
inc
xchg
adc
add
xchg
cmp
in
inc
push
xchg
stos
xchg
adc
sub
negl
inc
dec
inc
stos
xchg
push
js
mov
loopne
lret
movsb
rolb
ds
and
lods
and
or
jl
push
lds
lods
je
ds
test
shll
stos
cli
xchg
cwtl
pop
nop
cs
pop
jns
jo
lret
jp
pop
cs
loopw
jns
dec
pop
adc
mov
cmp
jns
dec
dec
mov
adc
fiaddl
rolb
push
and
rorb
nop
movsb
cltd
lret
lret
aad
xchg
in
xchg
repz
pop
nop
into
jmp
mov
push
xor
ss
cmp
loope
int
vprotw
gs
outsl
dec
jmp
push
scas
ja
icebp
shl
inc
add
mov
pop
js
insl
add
movsb
dec
fdivrs
and
mov
xchg
cwtl
out
ficoml
rclb
aaa
dec
push
lock
repz
cmc
inc
sbb
xchg
cmpsb
insb
mov
scas
inc
lcall
repz
mov
repnz
fwait
out
mov
adc
or
shrl
fidivrs
sub
int
pushf
movsb
sub
jg
add
xchg
scas
movsb
jns
adc
adc
mov
adc
push
and
xor
pop
xchg
lcall
fdivr
mov
pop
sbb
push
in
push
lret
add
dec
inc
mov
mov
scas
dec
dec
in
leave
fisttpl
stc
mov
outsl
aam
and
shrl
cwtl
in
pop
cmp
mov
xchg
popa
sbb
pop
mov
lret
fldl
addr16
mov
ret
mov
mov
pusha
mov
jo
mov
xchg
jg
subb
iret
lock
scas
adc
or
mov
js
mov
cmpsb
gs
int3
imul
loop
jae
jp
sbb
fsubl
repz
icebp
hlt
std
insl
or
mov
scas
ret
test
aad
xchg
mov
in
std
sahf
or
mov
xchg
out
mov
mov
add
pop
jb
movsb
daa
lds
jmp
adc
adc
mov
sbb
add
out
add
aaa
dec
sbb
sub
addl
in
pop
dec
pop
and
loop
orl
popa
xor
fs
mov
adc
sti
cmc
mov
push
and
xchg
call
sub
imul
mov
jno
cli
insb
outsl
push
lds
inc
adc
inc
cmp
mov
cltd
scas
xchg
call
jnp
pop
jl
sbb
ds
mov
lret
pop
cs
shll
mov
push
fdivp
cld
and
cmpl
movsl
mov
inc
or
out
cmp
mov
lea
aad
jbe
jle
loopne
pushf
subb
inc
pusha
mov
add
das
popa
pushf
pop
stc
sahf
sti
or
std
stc
aad
ss
xchg
and
pop
je
ret
out
jp
inc
mov
std
fidivrl
xchg
ret
mov
mov
adc
dec
push
into
push
fldt
jle
mov
cmp
dec
cmpsb
loope
ja
cmc
sbb
hlt
mov
sub
in
xchg
cmpsl
rcll
adc
lock
jle
jns
add
cltd
cmpsl
ficoms
popa
mov
adc
pop
cli
xchg
cmp
cs
fstenv
mov
fbld
push
lds
subb
scas
stos
leave
add
xor
and
pusha
leave
xor
ljmp
stos
aas
jb
mov
scas
shlb
sahf
or
ja
mov
jmp
repz
push
sub
test
pop
dec
and
popf
in
cli
sbb
movsb
fildll
jno
fdivr
push
fldl
pcmpeqd
stos
dec
push
cmc
lret
nop
int
sub
iret
sahf
sbb
jnp
or
ffree
lods
and
cld
push
push
cld
les
insb
int
sub
mov
pop
cmp
mov
in
xchg
popf
add
or
rcrb
inc
data16
dec
movsl
mov
cli
leave
rcll
fdivs
test
jne
std
mov
add
xor
cmp
aad
push
cld
cmp
lcall
imul
mov
aas
xor
cwtl
dec
fists
mov
cmpb
js
mov
repz
mov
jmp
jl
dec
adc
int
push
mov
mov
clc
fisubrs
jg
cmp
int3
push
fisubrs
mov
push
pop
xor
mov
cmp
pop
adc
xchg
and
jnp
adc
xor
popa
jb
dec
push
jb
fiaddl
push
lea
push
arpl
push
leave
faddl
notl
or
sbb
testl
sub
xlat
mov
cmp
insb
lock
dec
and
ja
mov
or
test
xchg
pop
sbb
in
cmpsl
xor
stos
fnstenv
cmp
xchg
aam
cs
hlt
sbb
nop
pminsw
test
xchg
pop
mov
inc
outsl
add
dec
and
sbb
int
sbb
andl
pop
push
stc
out
clc
jecxz
push
mov
cmpsb
int3
inc
lods
rcr
out
jp
inc
ds
iret
adc
jbe
sbb
mov
ss
lahf
repz
lds
popf
sub
inc
fs
inc
sbb
neg
xchg
out
mov
jmp
push
push
sbbb
imul
aam
popa
mov
mov
aas
sbb
imul
or
inc
dec
out
enter
movsb
pop
cmp
daa
idivl
repz
xchg
mov
cmpsl
jp
clc
cli
repnz
shl
in
dec
jl
cmp
dec
mov
shll
in
out
cld
fadd
daa
adc
fnsave
push
xor
int3
jle
inc
imul
cmp
shll
idiv
jmp
call
fimuls
mov
lea
cmp
mov
xchg
lahf
jnp
and
mov
pop
and
cmpl
pop
xchg
outsb
pop
icebp
fidivrs
adc
bound
sub
out
shll
push
mov
inc
pop
in
into
outsl
mov
iret
adc
xchg
divl
clc
test
jle
xor
cltd
lods
les
jge
adc
mov
xor
inc
inc
lea
sbb
or
pop
ss
lret
lret
mov
stos
pop
es
cmpsb
xor
push
data16
imul
das
sub
data16
mov
cwtl
dec
hlt
pushl
cmp
and
dec
lret
data16
adc
push
sbb
daa
stc
loope
stc
repz
repz
ret
add
push
insl
arpl
ds
out
sahf
loop
adc
mov
xlat
push
mov
test
insb
adc
scas
popf
mulb
cmpsl
fwait
xchg
xchg
jmp
jns
dec
pop
andl
mov
loop
pop
jl
insb
inc
jp
ja
hlt
stc
or
dec
push
jnp
int3
lods
and
inc
loop
loopne
xchg
sbb
aam
mov
les
dec
int
mov
arpl
mov
mov
es
pop
insl
mov
aas
cli
mov
jmp
into
or
jge
or
ja
mov
inc
imul
imul
mov
lcall
jnp
lods
or
enter
and
jae
in
sub
mov
into
icebp
je
notl
jbe
fmuls
and
jno
test
inc
out
insb
mov
in
inc
push
in
and
mov
cmpb
and
std
mov
sub
nop
enter
out
xlat
and
dec
and
inc
sub
in
or
fsub
jno
xchg
pcmpgtd
daa
repnz
push
sub
inc
mov
hlt
fld
daa
lea
mov
lods
hlt
jo
lcall
pop
jmp
ss
out
addr16
xchg
push
xchg
pop
sub
mov
dec
or
pop
inc
sub
decl
xchg
ret
jbe
stos
xor
sti
sti
push
lock
dec
ja
inc
bound
or
scas
pop
jmp
addr16
xchg
push
mov
cmp
inc
sbb
dec
adc
cmc
adc
xchg
cmc
cmp
scas
pop
xor
or
jmp
cmp
fiadds
jbe
xchg
or
ss
sub
dec
xchg
dec
add
jo
aaa
out
leave
pop
pop
out
push
push
sub
insb
cmp
inc
aad
int3
inc
sbb
xchg
dec
in
pop
pop
popa
inc
pop
push
fs
ljmp
out
pusha
and
repnz
add
aaa
in
or
lock
aas
notb
adc
add
pop
gs
mov
es
pop
jp
mov
lods
jb
mov
push
ficoms
les
xchg
inc
inc
sbb
cmp
scas
mov
xchg
push
aaa
pop
loope
push
ret
enter
andl
es
aad
push
orl
push
xor
mov
out
std
hlt
and
mov
and
aas
lds
xchg
xchg
ss
push
mov
jns
cs
and
jg
pop
into
scas
mov
js
dec
bound
dec
scas
dec
xchg
sti
jno
leave
xchg
fs
mov
inc
mov
dec
stos
int
or
dec
push
daa
xchg
stos
xor
mov
dec
mov
arpl
mov
movsb
xchg
adc
sub
mov
stos
loopne
shr
mov
in
inc
scas
inc
jbe
jge
popa
aaa
xor
enter
mov
aad
data16
sbb
ret
push
and
push
ja
not
mov
xchg
test
xor
jo
xchg
mov
jno
fimuls
push
popa
xchg
xor
insl
and
add
ljmp
aas
shlb
bound
adc
arpl
ds
movsl
fisttpl
xchg
adc
mov
sar
out
lret
cmp
sti
js
sahf
mov
in
insb
pusha
fs
int
fcomps
mov
leave
lret
mov
push
rorb
add
xchg
insl
cmpsl
loopne
dec
lret
outsl
fstps
loope
pop
xor
sbb
sub
adc
mov
fucomi
sub
call
adc
pop
sbb
call
fstps
pushf
mov
sbb
mov
pusha
push
int
adc
mov
ljmp
dec
xchg
xorb
jp
pop
insb
inc
out
rclb
mov
testl
dec
int
sarl
pop
sub
notl
sub
cmp
push
adc
cli
xchg
icebp
ja
idiv
pusha
insl
test
mov
test
and
out
les
push
inc
inc
andb
push
pushf
fisubs
pop
or
mov
icebp
jns
add
jmp
sbb
cmc
inc
sahf
mov
sbb
cmc
jmp
cli
cs
fnstsw
xor
divb
and
lret
or
pop
cmpsb
xor
push
jne
and
in
xor
sub
jno
mov
inc
cmp
mov
cmp
xchg
and
mov
arpl
call
jnp
and
jge
and
inc
or
movsl
or
mov
mov
mov
lahf
pop
and
dec
fadd
sahf
push
cmc
icebp
adc
sahf
pop
lods
scas
xchg
add
xchg
or
sub
adc
loope
push
fcompl
push
xchg
je
push
out
xchg
dec
ficompl
cmp
push
lods
jecxz
push
bound
ss
mov
faddp
inc
js
hlt
pop
cmc
movsb
cmp
or
popf
push
stos
xor
repnz
daa
lock
daa
fistpl
inc
enter
nop
ds
sbb
aas
xchg
mov
ss
inc
lock
push
pop
pop
fisttpl
add
dec
sbb
add
in
mov
jns
dec
and
or
mov
jo
adc
popf
mov
xor
andl
adc
in
mov
push
clc
xchg
cli
pusha
rorl
push
pop
mov
cmp
inc
outsl
bound
jge
mov
jge
ds
lret
xchg
pop
xchg
decb
fstps
inc
ja
and
add
das
lcall
roll
jnp
xchg
and
xchg
add
mov
xchg
pop
imul
jmp
pop
sbb
sub
xchg
insl
xlat
push
cmp
stos
inc
out
pop
and
add
rorl
fistps
inc
mov
out
inc
cmpsl
xchg
xor
adc
dec
pop
push
int3
inc
mov
xlat
adc
mov
inc
popf
cmp
push
scas
incl
cmc
mov
pop
mov
into
push
sbb
xchg
xchg
sub
mov
jno
sbb
dec
cmp
jae
mov
mov
aaa
mov
loopne
ret
push
dec
fnstcw
jne
repz
cli
and
insl
ud2
adc
mov
or
sbb
cli
in
test
mov
mov
mov
data16
cltd
mov
push
repz
dec
loopne
inc
adc
subl
pop
cmp
test
mov
mov
mov
orb
scas
cmpsl
and
cmp
mov
jg
outsl
in
xchg
out
bound
mov
fidivs
mov
mov
shrb
icebp
stc
imul
insb
mov
mov
fmull
negl
dec
mov
gs
jne,pn
rcll
cmp
xchg
fcmove
js
dec
push
jb
mov
leave
insb
jl
repnz
lds
push
and
xchg
sahf
test
test
xchg
into
xor
adc
int3
addr16
inc
adc
mov
adc
add
jp
sub
sub
pop
ret
outsl
lods
xchg
push
push
and
mov
or
inc
mov
sbb
or
out
bound
jns
push
mov
mov
lods
loope
add
call
xchg
fadds
mov
inc
loopne
ljmp
pop
push
fbld
mov
fs
push
dec
jo
in
push
cmp
mov
sub
bound
and
ret
es
shll
rcrl
imul
sbb
lods
je
in
in
js
jnp
test
jbe
movsl
inc
pop
fcompl
stos
xchg
shll
push
pop
jmp
inc
hlt
and
inc
pop
adc
pop
mov
xchg
mov
aas
mov
cmp
cmp
add
loop
arpl
repz
mov
jno
xchg
add
inc
iret
lret
inc
out
std
mov
outsb
mov
xchg
inc
shlb
insl
mov
sahf
push
jae
adc
insb
cmpsl
pop
mov
push
ret
mov
test
sarl
and
jle
cli
inc
and
dec
stos
out
cltd
out
pop
or
data16
loopne
adc
mov
enter
pop
inc
push
rcr
mov
sbb
dec
insl
repnz
pop
pop
std
fnstenv
push
xchg
xchg
inc
inc
pop
push
cmpsl
or
shld
jae
test
sbb
pop
inc
jb
fdiv
jbe
and
dec
jbe
cmp
loope
inc
enter
out
mov
push
pop
int3
lea
cmp
sbb
popa
pushf
lret
inc
xor
loopne
cmp
mov
rorb
xor
inc
add
imul
add
popf
imul
push
ret
dec
inc
mov
pop
sti
pop
or
ret
or
mov
xlat
push
jecxz
arpl
push
jbe
fsubr
scas
mov
jl
jge
leave
nop
ja
aad
gs
aaa
test
xor
push
sarb
ret
popa
xor
aas
jae
push
jl
into
cmp
pusha
adc
callw
xchg
lock
dec
or
push
lret
mov
xor
cmc
push
or
mov
in
pop
scas
fldt
cwtl
scas
aas
pop
sbb
mov
sub
mov
dec
push
or
mov
and
arpl
jg
cmc
xchg
push
js
add
sub
pop
scas
and
or
pop
xchg
repnz
adc
cmpsb
push
add
lea
jmp
or
insb
push
xor
fstl
sbb
lds
lods
sub
in
mov
es
mov
pushfw
mov
test
outsl
cltd
mov
sti
push
fcoml
addb
int3
jl
nop
cwtl
cs
sti
shll
jmp
and
sbbl
mov
push
mov
add
xchg
fcompl
pop
pop
push
out
fwait
cli
mov
adc
sub
add
aad
cmp
out
mov
and
push
out
push
mov
push
out
pop
or
jae
mov
in
mov
shrb
add
fsubrp
insl
xor
pop
sub
shrl
mov
push
sub
arpl
or
add
pushf
sahf
andb
lcall
sub
mov
jno
or
dec
cmp
jae
xlat
fucomp
daa
test
out
ret
sbb
cmp
repz
rdpmc
shlb
sbb
xor
mov
pusha
mov
pushf
mov
adcb
inc
fildl
ljmp
or
mov
ljmp
fcmovb
call
sbb
ret
jo
mov
out
bound
add
sub
inc
test
shll
lret
int
in
or
xor
sti
push
shrb
ficoml
xlat
and
testb
inc
inc
ljmp
jae
lea
jmp
xor
xor
sbb
dec
aas
out
sub
in
xor
iret
pop
xchg
jl
xchg
xchg
sti
sub
fidivl
repnz
cmp
sbb
ficompl
mov
stos
negl
mov
or
xor
ret
adc
daa
and
and
lods
add
cmp
mov
xchg
std
mov
add
je
sbb
mov
lahf
mov
and
loope
jno
int
mov
lods
xor
and
mov
mov
xor
inc
loopne
loopne
iret
xchg
jle
call
xchg
out
daa
push
push
or
rcrb
and
xchg
or
shr
mov
pusha
adc
enter
dec
lret
loop
les
push
cmc
xchg
movsl
push
push
sub
ljmp
dec
ret
sbb
movsb
adc
popf
jmp
cmp
enter
daa
lea
adc
mov
popa
stos
and
adc
shrb
ficoml
push
aam
add
js
jmp
jno
idivl
addr16
and
sbb
sbb
add
rclb
push
and
jae
mov
rclb
call
insl
mov
ss
stos
mov
shll
xor
dec
popf
rcrl
and
pop
dec
jle
push
mov
inc
int3
adc
aaa
xchg
scas
lock
das
rorl
sub
sbb
cs
icebp
call
sarb
addb
mov
mov
jb
clc
add
jnp
push
lret
sahf
dec
cli
fstl
xchg
test
add
mov
xchg
sti
inc
and
push
pop
js
xor
jge
mov
dec
das
sub
jnp
fistpl
sbb
in
or
or
test
pop
jne
loopne
inc
mov
aaa
xchg
jp
push
insb
mov
pop
xchg
or
cmp
lock
lods
jmp
sub
in
sub
lea
mov
in
mov
and
stos
pop
mov
dec
out
mov
mov
mov
lret
jbe
inc
inc
push
das
xchg
fwait
pop
pop
xchg
adc
inc
scas
pushf
or
insb
cwtl
fs
sbb
mov
mov
pop
inc
inc
fwait
scas
dec
sbb
pop
es
in
insl
xchg
sti
test
pop
das
mov
enter
and
push
pop
jl
xchg
and
or
add
and
out
cli
fmul
jl
jp
lods
aad
xchg
in
pop
enter
inc
dec
xchg
lret
push
or
iret
add
jge
shrl
jp
aam
mov
sbb
inc
adcl
lea
cmpsb
add
loop
sti
repz
sahf
add
dec
jo
jnp
sbb
cmpsb
into
repz
adc
mov
shll
divl
cmp
add
cmp
int3
insl
int
inc
in
popa
loopne
jnp
adc
cmp
sbbl
and
stos
leave
into
sbb
mov
xchg
push
mov
test
mov
and
jp
mov
push
inc
es
ss
in
or
sbb
inc
imul
add
mov
add
ja
mov
jl
push
loope
inc
cltd
pop
add
mov
push
push
lock
jbe
movsl
lods
lahf
pop
pop
cmpsl
inc
pop
negl
std
in
add
add
sar
add
mov
xor
and
or
fisttpl
dec
test
pop
or
mov
loop
sub
xor
sbb
cmp
pop
push
fbld
negb
int
inc
loopnew
and
fists
insb
mov
mov
mov
call
mov
sub
imul
outsb
mov
and
pop
pop
inc
inc
mov
push
pop
push
movsb
shrl
ds
push
or
push
scas
mov
sbb
lret
sar
into
lods
sbb
cmp
sti
cwtl
aam
pop
popf
mov
mov
test
test
add
shrl
outsl
inc
pop
pop
mov
jne
arpl
adc
fnstcw
push
loope
stos
in
pop
popa
or
loope
rolb
inc
negl
cwtl
arpl
int
pop
xlat
sub
sahf
add
cld
ss
std
inc
inc
jge
in
and
aas
cwtl
xchg
lahf
mov
jb
std
xor
sub
in
andl
jnp
icebp
push
or
sub
lods
jmp
cmp
push
sub
stc
and
out
dec
shrl
inc
lods
rorl
in
push
ss
pop
ficomps
jmp
sub
jecxz
outsl
idiv
add
int
scas
jo
cmp
and
icebp
sub
jg
xor
add
pop
cmp
sub
cwtl
and
fwait
in
jo
leave
jne
mov
xchg
and
fcomps
aam
das
sbb
loopne
rcrb
lods
dec
sbb
stos
add
xchg
cltd
sbb
orb
test
jle
cmp
cmpl
cmp
xlat
imul
movsb
mov
mov
sbb
das
leave
jge
clc
addb
lret
test
push
bound
add
inc
repnz
addr16
jp
leave
push
loopne
mov
cmpsl
icebp
jo
insb
mov
jb
inc
jg
stc
iret
call
outsb
jl
enter
clc
imul
mov
aaa
aam
and
and
lods
mov
sbb
pop
mov
or
push
icebp
call
inc
jecxz
mov
jne
pop
sbb
pop
sub
inc
repz
into
adc
pop
cmp
scas
daa
mov
add
fldpi
sar
rep
add
fwait
cwtl
icebp
push
jl
pop
sti
pop
pop
and
stos
jne
add
sbb
xor
xor
jecxz
jbe
jl
aam
shrb
and
dec
jecxz
jecxz
decb
enter
clc
dec
rolb
dec
sbb
shlb
dec
or
in
in
pop
negl
pop
fscale
sub
adc
sbb
add
imul
inc
or
xor
mov
test
jbe
dec
or
shr
mov
pusha
dec
xlat
aas
mov
or
pop
pop
call
jne
scas
je
dec
insl
out
push
mov
push
mov
inc
cmp
push
iret
pusha
lods
inc
icebp
jae
jmp
imul
int
fsubrl
jbe
es
call
xlat
outsb
or
js
fisttpl
loop
cmp
mov
fsubrs
and
xchg
mov
sub
xor
sub
arpl
push
imul
inc
out
mov
sbb
xchg
cmc
ss
sbb
mov
mov
enter
call
or
loop
xchg
push
jae
xlat
adc
pop
push
cmpsb
rcll
insb
lret
jmp
ja
push
push
pop
adc
jb
push
xor
jne
lea
enter
daa
insl
repnz
mov
inc
adc
lock
ret
mov
dec
pop
cmpsl
daa
fstl
movsb
dec
fiaddl
orw
sub
repz
je
add
jp
loopne
lahf
adc
ret
mov
jecxz
push
mov
mov
pusha
jae
sbb
into
mov
scas
repz
stos
pop
daa
push
add
bound
push
inc
sbb
or
or
data16
lret
mov
in
outsb
lcall
jne
outsb
pop
xlat
mov
enter
out
fidivs
mov
rcrl
aas
dec
pop
insl
xor
sbb
inc
cmp
cwtl
movq
cmpb
insl
daa
loop
movsl
pusha
or
mov
aas
pop
aaa
lds
dec
inc
mov
sub
xchg
or
xor
daa
out
mov
repz
insb
into
dec
jl
pop
adc
fwait
das
xchg
jge
fcompl
lret
out
mov
hlt
lods
mov
jp
mov
lret
lods
add
ljmp
aam
adc
inc
out
mov
inc
jp,pt
inc
push
scas
clc
add
repnz
icebp
mov
lea
cli
mov
mov
sbb
fcoml
sbb
shrl
pusha
mov
xor
jle
xchg
clc
mov
mov
enter
ret
cmpsl
mov
out
cmp
push
mov
popf
xchg
and
sahf
cs
dec
xorb
push
daa
sbb
or
lahf
icebp
and
cmp
dec
es
xchg
in
dec
mov
aas
pop
int3
jge
mov
aam
jb
ds
and
mov
cli
and
dec
pop
cmpl
inc
pop
imul
fwait
sub
and
adc
dec
push
ss
pop
sub
ja
cmp
pop
adc
insl
sti
les
iret
add
jmp
loopne
ficompl
mov
jae
mov
lds
cwtl
adc
dec
mov
insb
xor
in
adc
imul
hlt
add
sub
fcomps
adc
sbb
xor
flds
and
out
jbe
mov
or
fdivp
sbb
xchg
scas
fwait
push
add
lods
jb
push
lret
dec
out
pop
ds
cmc
jo
push
push
jb
jae
in
test
data16
bound
pop
cmp
push
mov
sub
push
adc
push
popl
jns
out
xchg
rclb
push
fldenv
sbb
or
sub
arpl
test
fwait
dec
mov
arpl
subb
aad
rcll
push
iret
mov
mov
jmp
test
arpl
incb
bound
jmp
test
jno
out
testb
adc
add
ja
jbe
pop
mov
add
int3
mov
dec
les
fs
ret
add
nop
int3
and
xchg
out
fldcw
sub
popa
jl
shl
rorb
loope
inc
or
push
fistpll
mov
std
mov
cmpsb
mov
cmp
ficoml
jmp
pop
xchg
add
int
mov
or
push
aaa
lods
out
addl
loopne
add
ret
mov
and
outsl
jmp
and
mov
xor
mov
mov
mov
lock
push
jp
jge
loope
or
mov
fbstp
sbb
orb
add
adc
scas
adc
inc
pusha
mov
push
sbb
in
and
and
icebp
xchg
add
push
mov
iret
xor
cmp
lods
mov
cltd
xchg
in
mov
cld
inc
addr16
mov
lret
xchg
mov
xorl
ret
inc
jecxz
jne
mov
outsl
ss
or
xor
repnz
stos
shrb
or
shll
mov
ret
je
jl
pop
xchg
addr16
iret
stos
mov
movsb
sbb
int3
jne
rcll
out
add
dec
stc
mov
mov
nop
adc
hlt
fs
cmc
je
jmp
insb
jae
mov
push
cmpsb
aas
xchg
lcall
mov
lret
mov
cmc
pop
pop
jmp
xor
or
cmpsl
aas
and
out
mov
jmp
clc
nop
stc
test
adc
rorl
out
imul
ret
pop
adc
pop
leave
xchg
std
jge
cmpsb
sbb
cmpsl
movsb
or
fs
adc
pop
dec
in
adc
lea
call
add
mov
mov
push
or
jmp
das
push
adc
sbb
aad
call
and
repnz
dec
repnz
xchg
pop
loop
call
pop
idivb
ljmp
pop
dec
xchg
es
daa
fcomps
hlt
pop
xchg
out
and
lods
push
insl
jp
or
jno
stos
pop
and
pop
setg
icebp
daa
mov
mov
xor
fcomip
cmp
adc
push
nop
repz
lahf
mov
je
aaa
pushf
ret
inc
stos
mov
sbb
popa
call
xor
push
inc
mov
dec
lahf
sub
pop
in
ja
ret
nop
popl
xchg
lret
outsb
addw
fwait
mov
jmp
cmp
js
addr16
gs
mov
dec
xchg
mov
into
adc
repnz
lods
daa
mov
jae
les
arpl
imul
adc
mov
das
rcll
fldenv
flds
sub
adcl
mov
cmpsb
mov
leave
jne
into
adc
popa
sbb
ja
push
test
mov
repz
sbb
out
enter
or
push
loopne
mov
inc
imull
sub
movsl
add
push
pop
pushf
mov
imul
ficoms
iret
mov
dec
push
mov
fmull
mov
test
jl
pop
add
xor
fimuls
jo
lcall
dec
test
inc
push
movsb
sub
nop
in
sub
mov
mov
lea
cmp
out
hlt
cmp
sbbl
add
cltd
repz
loope
sbb
out
in
clc
and
mov
or
jge
scas
add
jl
pop
xchg
lahf
stos
mov
test
insl
mov
mov
stc
test
cli
ds
mov
bound
daa
add
push
jnp
sub
arpl
inc
xchg
jns
mov
jge
mov
loope
adc
dec
mov
xchg
xchg
loopne
and
xchg
cmpsl
mov
lods
pop
push
outsl
pop
mov
inc
dec
adcb
fsubr
jmp
or
push
and
ljmp
add
xor
inc
jbe
sbb
pop
ja
fstpl
fidivrl
lea
add
pushf
scas
scas
add
in
add
mov
aam
sbb
pusha
and
and
dec
outsb
or
dec
aas
or
test
lcall
fildll
popf
xor
sarb
int3
sarl
mov
and
mov
cwtl
int
dec
and
push
pop
aaa
mov
xchg
mov
repnz
scas
dec
sbb
bsr
inc
arpl
jg
subb
mov
jg
inc
pusha
out
inc
xchg
sub
xchg
es
add
ljmp
sub
js
addb
rcrl
xor
and
sbb
jp
data16
dec
xchg
mov
push
jle
cmp
addr16
sub
arpl
adc
adc
add
jmp
addr16
fnsave
popf
xchg
pushl
jl
int3
push
mov
repnz
ss
inc
sahf
sub
mull
push
nop
or
movsl
push
adc
jnp
sar
or
jns
addr16
arpl
mov
jo
outsb
mov
loopne
jge
inc
or
lods
hlt
and
call
mov
mov
rclb
out
xchg
push
lret
lods
test
jmp
mov
jbe
pop
pop
fmul
sub
inc
xlat
cmpsl
cmpsb
inc
jae
hlt
cmp
shl
scas
dec
dec
fwait
icebp
fucom
das
pop
addr16
sbb
cmc
icebp
dec
xchg
xchg
inc
jmp
loop
and
iret
dec
and
enter
cld
sbb
lock
sahf
in
adc
adc
test
aad
aad
sub
pop
in
cmc
inc
inc
sbb
and
jecxz
in
mov
lea
cwtl
xor
mov
xor
and
scas
mov
jmp
mov
lret
mov
repnz
push
ret
and
lret
and
ljmp
es
sti
mov
adc
ret
dec
imul
sbb
mov
pop
mov
test
lret
loop
dec
pop
sub
inc
cmp
outsl
repz
adc
in
insb
ds
jne
fldcw
pop
sbb
std
lret
fisttps
popf
xor
in
mov
mov
repnz
call
in
mov
fnsave
or
shlb
add
jnp
mov
dec
lods
cmp
es
mov
pushf
aad
lret
fadds
dec
dec
popf
mov
js
subb
gs
pop
sbb
and
rcrl
movsl
scas
xchg
out
lock
inc
sub
scas
mov
imulb
aaa
insl
or
jecxz
stos
mov
mov
mov
or
pop
mov
ret
or
jo
movsl
enter
mov
cmp
mov
outsl
les
sub
leave
nop
jnp
mov
movsl
sub
lret
insl
loopne
mov
jns
cmp
push
cld
fisttpll
lock
addr16
aam
sbb
fstpt
aam
outsl
and
push
imul
mov
les
push
test
and
and
inc
bnd
leave
push
insl
negl
pop
mov
std
and
out
xchg
sbb
popa
xor
mov
push
lahf
or
and
jne
push
scas
in
imul
dec
xchg
shll
dec
lea
stc
sti
jb
fucomp
push
mov
xor
fisubrs
fisttps
inc
adc
sub
jge
push
or
or
test
mov
push
sub
adc
pop
in
jmp
pop
mov
pop
pop
addr16
or
imulb
push
mov
scas
jmp
bound
loope
lods
insb
or
push
xor
div
jl
or
fnsave
shl
stc
mov
hlt
sbb
lds
push
jns
aaa
dec
aad
jb
and
lods
jmp
sbb
cld
daa
rep
leave
lds
leave
sbb
lret
xchg
outsb
add
test
inc
js
lcall
mov
test
mov
or
mov
mov
or
xchg
stc
mov
hlt
imul
lcall
jle
dec
out
pop
mov
stos
pop
xchg
roll
outsb
int3
shll
and
data16
test
push
or
sbb
inc
adc
stos
jmp
aad
cs
jmp
and
mov
mov
mov
mov
arpl
jle
dec
jns
dec
mov
cs
into
stos
sbb
push
xor
arpl
je
repnz
fldenv
outsl
sbb
in
or
fnstenv
lock
and
xor
cwtl
xchg
pop
popa
xchg
push
dec
out
int
sbb
mov
inc
or
push
les
pop
mov
out
push
daa
adc
cmp
aaa
lahf
roll
paddb
andb
imul
lea
dec
mov
stc
ja,pn
jecxz
pop
out
out
icebp
pop
lret
fbstp
cs
and
test
push
mov
out
mov
fstps
popf
in
xorb
loopne
push
inc
sbb
insl
sahf
pop
fwait
sarl
push
insl
push
test
jb
dec
add
mov
adc
out
sub
dec
mov
and
mov
pop
mov
test
lcall
scas
fildl
into
cmp
pop
movsb
popf
mov
addr16
mov
aam
outsl
mov
subl
xchg
jbe
outsl
insl
fldenv
sbb
fidivs
lea
sahf
lods
movl
xchg
mov
lret
dec
notl
scas
mov
ret
sbb
dec
int3
push
pop
stc
lahf
arpl
aaa
inc
std
pop
jno
inc
popf
xor
in
jno
dec
add
bound
mov
lret
add
pop
fdivrl
gs
push
pop
loop
mov
pop
fwait
xchg
stc
and
or
cmp
scas
and
stc
sbb
rcl
out
sbb
and
dec
mov
or
sbb
push
loopne
out
ja
push
cmpsb
movsb
pusha
shl
inc
loope
out
xchg
in
mov
push
adc
or
jecxz
lcall
nop
push
mov
and
gs
dec
xchg
mov
mov
jecxz
cmc
loope
out
cmp
int3
mov
pop
jnp
cmp
sub
cmp
fs
aam
push
cmp
sti
pop
shrb
mov
cmpsb
std
mov
ds
inc
mov
popf
fs
dec
dec
cmp
xchg
popa
push
cmp
xor
cwtl
sbb
push
mov
movsl
repnz
cmc
test
cmp
jo
mov
outsb
push
mov
divb
popf
jmp
stos
leave
dec
insb
pop
out
pusha
lock
bound
loope
lds
xor
hlt
xlat
jb
lahf
jmp
cmp
jecxz
movb
ja
test
out
int
frstor
iret
ret
jp
or
jl
idivb
mov
sti
cmp
roll
shlb
jl
movsl
sub
jle
movsl
sub
adc
jb
jns
lods
mov
out
lret
mov
mov
sbb
mov
sub
jle
sbb
hlt
push
loope
outsl
sbb
pop
aad
push
cmp
add
inc
repz
pop
loope
pusha
dec
sbb
into
ds
fnstsw
shlb
cmp
fstpl
push
pop
mov
das
arpl
ljmp
push
mov
jmp
add
fiadds
ss
and
fmul
add
ret
jl
mov
repnz
hlt
out
lcall
syscall
jge
push
xchg
je,pn
sub
andl
daa
cmc
in
bound
sbb
mov
pop
aad
cmpsb
iret
dec
mov
arpl
leave
repz
or
add
out
dec
cmp
loop
fdivrs
adcl
int3
lret
mov
push
rclb
adc
loope
cmp
das
imul
sub
push
aas
in
xchg
into
outsb
or
test
rorb
into
sub
inc
popa
mov
push
ljmp
pop
xor
clc
xor
stc
ret
lret
mov
mov
push
call
shrb
test
and
push
pop
jns
psubsb
push
mov
and
mov
rcll
xor
dec
push
int
dec
jno
inc
add
je
imul
and
push
shlb
jmp
add
rcl
lock
in
fs
ljmp
cmpsb
aas
or
pushw
cs
mov
clc
jl
js
mov
fcmovnu
xor
and
rclb
mov
mov
jb
mov
cmpsb
movsb
scas
push
lret
sub
pop
cmp
push
push
pusha
xchg
fisubrs
jle
leave
inc
or
push
adc
sahf
in
out
mov
ffree
push
into
jle
fmull
fwait
ja
fwait
es
jne
or
add
pop
in
aas
jle
fisubl
in
jmp
mov
sarl
aaa
inc
cmpsb
int3
mov
push
and
mov
movsb
xchg
jg
loopne
bound
rclb
hlt
rorb
xor
and
into
movsl
xor
movsb
popa
cmp
push
push
inc
loopne
xor
out
dec
outsb
test
fiadds
pop
inc
jl
je
mov
or
lcall
enter
ljmp
and
pop
out
xchg
rclb
les
cmp
jge
test
or
clc
ja
lcall
imul
adc
fs
movb
add
out
lahf
je
mull
jo
imul
or
call
repnz
adc
in
push
jnp
into
ss
inc
movsb
test
stos
xchg
sbb
and
pop
in
ljmp
push
cmp
mov
mov
pop
dec
insl
jl
lock
and
arpl
dec
push
cmpsl
sbb
imul
mov
jl
pop
push
jnp
mov
leave
jns
sub
xor
dec
sub
push
fldl
addb
mov
mull
imul
dec
aam
pushf
daa
mov
out
mov
jecxz
dec
repz
loope
vsubsd
outsb
fs
nop
aas
mov
jl
pop
fcoml
sarl
loope
out
ds
rcrl
bound
push
mov
jl
mov
add
fdivp
pop
inc
and
and
adc
push
lods
cmpsl
xchg
leave
cld
jno
and
daa
cmpsb
or
imul
ds
repz
mov
out
aas
in
dec
xchg
pop
and
shl
or
xchg
pop
clc
dec
insl
mov
sbb
into
add
jno
jge
dec
stc
scas
inc
xor
mov
leave
sbb
roll
lret
movsl
pop
mov
mov
xchg
std
idiv
das
mov
xchg
mov
fistps
popa
int3
jp
mov
push
push
bound
mov
mov
xchg
stos
push
adc
ja
rcrl
or
ljmp
int
int3
shrl
outsl
mov
insb
addr16
repnz
push
jmp
lods
shlb
lds
add
adc
dec
test
loopne
push
loopne
jae
lea
stos
sbb
adc
test
fbstp
xchg
int
mov
js
sub
pop
nopl
out
rcrb
jae
stos
lods
pop
nop
movsl
hlt
pop
fistpl
or
in
jns
iret
das
scas
inc
lret
push
mov
lods
dec
daa
loope
jmp
or
lods
sub
adc
lahf
std
xchg
cmp
cmpsl
dec
out
mov
mov
shll
sub
fnstcw
and
push
lock
ficoms
sarl
sub
aaa
mov
pop
nop
fwait
add
xor
xor
pop
and
xchg
ret
stc
push
jns
or
xor
imul
popf
je
sti
jecxz
aas
sbb
sub
sbb
jnp
gs
inc
sub
xchg
mov
popl
stos
data16
pop
push
decb
faddl
mov
jbe
es
xor
sti
sbb
xchg
adc
aam
mov
push
and
clc
sbb
addr16
pop
shrb
mov
dec
sbb
shlb
into
enter
pop
inc
xor
pop
pop
sub
mov
sbb
fcoml
xor
pushf
jne
loop
fldenv
andl
push
jp
out
pop
jbe
mov
fstpl
mov
arpl
push
pop
sbb
dec
adc
rcrl
mov
push
ret
pop
mov
or
fdivp
cld
sub
mov
outsb
lret
add
adc
and
mov
sti
js
int
or
pop
out
aam
lock
mov
sti
imul
push
idivl
xor
je
das
xorb
xor
orl
push
cltd
dec
in
daa
mov
mov
fcmovnu
out
pop
mov
fiaddl
add
pop
sbb
xlat
mov
jo
xchg
pop
sbb
cmp
movsl
rcrl
out
push
ljmp
imul
ret
orb
andl
pop
add
je
ret
xor
in
push
ja
cmpsb
add
adc
sbb
inc
filds
movsl
jge
mov
pop
mov
adc
dec
xchg
mov
or
test
fs
in
and
jb
fdivrl
mov
mov
loope
sbb
sbb
lcall
test
sub
in
repnz
xchg
pushf
test
cmpsl
sub
or
inc
iret
xor
mov
test
xchg
lds
cmp
pop
push
add
xchg
mov
mov
int
pop
popf
aam
out
pop
push
sub
scas
xchg
cmc
lret
mov
xchg
outsb
and
xor
adc
sub
and
xor
ret
add
sbb
out
jge
fsubrp
mov
mov
rorl
addr16
sub
xchg
mov
stos
sbb
pop
cmp
mov
or
mov
repz
divl
xchg
loopne
jl
iret
out
cmp
xor
in
test
mov
jno
push
sub
stc
xor
and
dec
stos
mov
adc
adc
xchg
pusha
dec
push
lcall
or
push
stos
pop
lods
out
xor
mov
rcl
sbb
or
xchg
pop
cmc
jno
and
test
jnp
les
jns
push
cmpl
gs
jl
pop
xor
pop
mov
adc
jne
sub
daa
fwait
in
and
insl
enter
int3
popa
clc
dec
mov
test
fs
sarb
div
in
xchg
outsl
loop
mov
cwtl
rcll
outsl
xchg
out
stc
sbb
mov
xchg
data16
je
push
cmp
adc
xchg
jno
xchg
mov
fwait
rcr
inc
mov
inc
sbb
mov
jp
mov
cvtdq2ps
sbb
insl
xor
jbe
mov
gs
jp
mov
xchg
push
pop
push
sub
notb
sbb
shlb
and
mov
or
pop
ja
cli
out
add
in
pop
push
adc
mov
ss
sub
mov
bswap
sbb
dec
out
icebp
push
and
pop
inc
lds
movsb
inc
lods
fdivp
push
add
xchg
sbb
sbbb
jl
ss
fnstcw
sti
int3
jnp
sub
pop
cltd
mov
mov
inc
subb
test
dec
ret
movsl
mov
sbb
subb
push
aaa
jle
pop
dec
out
mov
imul
cmp
and
lcall
jge
cmp
mov
and
data16
inc
jae
adc
aaa
popf
imul
sub
dec
imul
lock
dec
stc
jmp
jo
out
fildll
jp
mov
pop
mov
bound
andb
xchg
adc
jae
sti
mov
pop
cld
std
jge
cmp
or
mov
cmpsl
mov
and
movsl
inc
scas
leave
cltd
fst
cmp
imul
add
and
popf
in
mov
adc
xchg
add
outsl
mov
rcrb
jl
push
xor
das
arpl
cli
push
mov
mov
pop
mov
sbb
push
sub
xorl
out
adc
xor
push
dec
imul
jb
push
dec
clc
stos
mov
mov
arpl
sub
pop
pop
out
test
xchg
dec
add
fcompl
test
sub
jnp
imul
jmp
push
arpl
aaa
or
testb
test
in
jne
cwtl
xchg
xchg
adc
jg
xchg
ret
cmp
cwtl
jns
mov
pusha
mov
mov
sbb
stc
cmp
push
mov
div
aad
addr16
sbb
push
cmpsl
dec
inc
dec
lods
iret
push
mov
cmp
xchg
sub
sub
jo
std
cs
xchg
rcrl
xchg
xchg
pop
or
aaa
es
lret
fldl
sub
mov
or
iret
stos
mov
jne
jo
loop
daa
xchg
shrb
push
pop
pop
pop
cld
lea
or
jle
enter
add
mov
sbb
rcll
xchg
int
sbbl
jne
push
testl
loope
inc
and
dec
cltd
cmp
inc
sbb
cmp
add
neg
test
xlat
push
add
and
inc
jo
add
outsb
lods
sub
xchg
xchg
xchg
add
repz
mov
adc
xor
push
mov
fcmovu
or
loop
adc
fs
mov
hlt
sub
and
sbb
out
jmp
mov
add
mov
daa
test
out
jb
in
jmp
pop
fnstsw
mov
cmpsl
cmpsl
adc
xor
lahf
int3
mov
rolb
adc
push
mov
ja
cmpsl
addr16
sbb
rcl
inc
int
ret
loope
lds
xchg
ljmp
mov
inc
pusha
add
xorl
xchg
cmp
xchg
pusha
sarb
aam
ds
popa
mov
test
sahf
int3
add
dec
mov
or
pop
dec
insb
lock
outsl
out
outsb
outsl
adc
cmp
pop
fwait
or
in
ret
and
nop
sahf
add
out
insb
inc
push
add
xchg
or
lods
or
dec
mul
aaa
int3
push
loopne
push
xchg
test
or
lea
sub
cmpsl
dec
scas
nop
and
inc
inc
push
cld
mov
or
mov
stos
fs
jnp
cltd
ljmp
or
mov
aaa
adc
mov
movl
xchg
pop
or
xchg
push
mov
jg
jp
or
rcrl
cmp
xor
xchg
loopne
push
sbb
ljmp
mov
jge
sbb
mov
dec
fbld
mov
cmp
dec
push
jne
cli
popf
insb
or
dec
rorl
mov
fs
xchg
dec
fsubrs
push
jno
push
in
jl
test
dec
pop
mov
js
mov
scas
mov
xor
push
cmp
fstpt
and
mov
mov
ror
iret
aas
mov
mov
pusha
mov
mov
dec
xchg
inc
sarb
inc
jnp
and
adc
mov
push
inc
dec
inc
pop
dec
cmp
mov
sahf
and
sbb
inc
in
test
xchg
imul
mov
nop
xorb
lahf
mov
bound
or
push
mov
lret
xchg
paddsw
divps
dec
mov
insb
dec
mov
insl
jge
xchg
add
adc
std
dec
inc
int
push
stc
adc
shlb
cmp
popa
cmp
test
out
mov
loopne
pop
ja
fs
aaa
roll
rcrl
ret
or
sub
or
fwait
nop
pop
sub
xor
enter
mul
jp
addr16
mov
jne
aas
mov
cwtl
js
bound
mull
mov
mov
mov
mov
mov
loopne
ficomps
xor
push
jno
xchg
mov
pop
sbb
adc
jmp
xor
pusha
mov
xchg
pop
sti
add
inc
stc
inc
xchg
mov
mov
nop
out
pop
and
push
xchg
add
xchg
lcall
pop
les
ja
jmp
setg
movsb
sahf
jecxz
pusha
std
push
test
jbe
imull
jg
xchg
fcmovne
mov
push
xchg
rcll
ds
mov
gs
test
stos
call
shrb
ret
cld
mov
cs
stc
int
cs
xor
mov
mov
andl
push
sbb
call
loopne
push
pop
movl
dec
inc
jmp
in
inc
or
push
int3
cmpsl
cld
adc
test
out
sub
xor
lcall
ljmp
add
fidivs
lods
adc
jmp
xchg
and
lods
xor
or
imulb
cltd
sub
gs
push
into
es
mov
stc
or
lods
push
ret
xchg
or
and
iret
fidivl
imul
mov
push
je
adc
sub
or
xor
std
inc
mov
xor
adc
xor
xchg
add
pop
lods
mov
xor
jo
mov
mov
xor
lahf
pop
sub
or
clc
jb
out
pop
cld
mov
call
push
xchg
ljmp
xlat
fidivs
cmp
dec
xor
cwtl
int
jns
ds
jb
add
in
in
cmpsl
jno
idivl
aaa
test
mov
or
add
xor
repz
push
js
mov
mov
cmp
imul
in
div
cld
cmp
inc
jl
jno
fdivl
test
les
add
outsb
in
push
mov
mov
xor
dec
push
out
stos
jo
stos
cmpb
xor
cmp
jne
int3
dec
sub
pop
mov
in
movsl
out
push
dec
xorl
arpl
xor
pop
or
add
shrb
ret
dec
jmp
lock
cmp
leave
les
shll
xchg
inc
jecxz
sub
hlt
in
ficoms
xchg
xchg
outsb
push
mov
sbb
pop
or
cmp
dec
leave
fs
sub
mov
sbb
cli
or
push
xor
push
cli
xor
js
pop
insb
test
mov
nop
popa
adc
aad
out
dec
pop
es
arpl
sub
fcmovnb
addr16
jb
xchg
fisubl
in
rolb
out
out
cmp
gs
jbe
fsubs
and
cmpsl
orl
cmpsb
pop
inc
mov
repnz
xor
sarl
or
sub
jno
mov
shlb
or
fstps
jno
mov
iret
lret
and
int3
into
addl
fnstenv
adc
or
push
shl
jge
aas
sbb
xor
bound
and
pusha
rclb
data16
cli
cld
lahf
sti
outsl
mov
cltd
subl
inc
loopne
sbb
lea
rorl
mov
loopne
fisubrs
in
inc
inc
out
mov
lods
pop
cld
loopne
dec
xor
add
push
rorl
je,pt
jo
jge
ss
pushf
push
and
ret
test
jge
daa
movsb
test
push
movsb
or
dec
in
in
jo
decl
fadds
fdivr
inc
xorb
inc
es
fidivs
adc
pop
fcompl
push
jmp
aaa
pop
iret
pop
cld
or
jg
lods
jmp
shrl
insl
mov
jle
xor
jmp
clc
jmp
push
mov
das
fcmovnb
cmc
int
inc
jb
mov
pop
push
pop
iret
data16
xor
pop
out
adcb
inc
fistl
subb
fcoml
pop
sub
sbb
filds
daa
cmp
add
mov
ja
fdivr
sub
aas
mov
in
and
sti
push
iret
pop
mov
js
mov
xchg
je
pop
add
pop
sub
inc
js
lret
push
lea
dec
cwtl
mov
in
idiv
aam
inc
adc
int3
imul
sub
jnp
loop
dec
outsl
in
pop
es
jae
mov
lea
push
mov
pop
pop
inc
cmc
cmp
push
or
xor
bnd
jecxz
imul
jl
inc
repz
inc
call
fstpt
imul
push
das
inc
jb
xlat
cs
pop
sbb
std
idivl
rcrl
adc
hlt
jp
dec
mov
ds
push
mov
fsubs
jbe
dec
push
int3
mov
cmp
xchg
adc
push
adc
mov
fistps
sbb
loopne
add
rclb
icebp
pop
lcall
jle
xchg
adcl
repz
mov
shlb
lods
xor
dec
in
orl
rcrb
inc
cmp
mov
mov
nop
pop
cmp
mov
bound
add
xor
sbb
arpl
or
imul
mov
addr16
sub
pop
or
in
aaa
hlt
out
xlat
cmpsb
mov
xchg
fidivl
mov
mov
mov
incl
data16
jl
and
sti
xor
fdivr
xor
fidivs
lea
mov
xor
int
sbb
mov
rcrb
cli
shl
test
push
in
daa
adc
shll
add
and
loop
xchg
fwait
sarl
adc
outsl
cmp
stc
pop
dec
shll
sbb
dec
mov
inc
sbb
enter
xchg
adc
mov
gs
test
imull
aaa
loopne
mov
pop
es
xchg
and
push
cli
jno
and
leave
aaa
inc
jmp
fstl
dec
iret
xor
rolb
jbe
cs
and
shrb
xor
jg
mov
jg
out
js
outsb
jecxz
lcall
fdivl
shlb
testl
js
mov
in
mov
jnp
cld
jl
jbe
cmp
loopne
scas
loop
sbb
sbbb
fnstcw
mov
adc
mov
or
das
jno
xlat
fwait
out
fsubl
movsl
xor
inc
les
stos
jg
cmp
insl
add
or
sbb
popf
scas
mov
rcl
sbb
inc
js
clc
mov
inc
ss
push
sub
fs
push
jge
jle
icebp
inc
lods
out
and
dec
xchg
stc
test
mov
mov
sbb
sbb
sbb
mov
stos
jge
push
mov
test
xor
adc
xor
bound
push
add
adc
das
inc
ja
jg
jg
sub
add
xlat
jbe
inc
xchg
jle
mov
imull
in
test
push
popf
dec
push
push
gs
jae
adc
push
mov
adc
testl
and
inc
cs
imul
leave
fisttpl
ret
testb
xor
cmp
sub
xchg
ljmp
push
mov
andl
cmp
push
mov
jp
mov
jmp
int
push
lea
cmc
push
push
jp
loop
test
inc
aas
mov
cld
dec
xchg
mov
push
pop
mov
mov
shl
cmp
aam
and
sbb
push
add
insl
subl
aad
mov
lcall
cmovb
in
jbe
push
pop
js
or
out
icebp
mov
push
jne
std
adc
sti
pop
add
add
pushf
mov
dec
push
outsl
mov
aad
pop
ja
fdivrs
or
insb
adc
sub
adcl
shrl
ret
out
dec
xlat
rcl
dec
mov
mov
popl
pop
cmpsl
sbb
repnz
sti
movsl
xor
ror
les
in
int
movsl
stc
push
add
aaa
pushf
jmp
fistps
test
pop
in
sbb
ljmp
gs
xchg
sub
rcpps
mov
jmp
sub
push
stos
cmp
mov
in
dec
and
mov
and
sarl
test
push
aam
in
and
mov
cmp
dec
pop
adc
sbb
adc
in
add
cmc
sub
getsec
pop
pop
fbld
mov
push
fs
lods
or
imul
popf
dec
out
mov
inc
out
test
orl
ss
cli
push
cli
inc
loopne
repz
mov
call
and
dec
es
dec
std
or
addb
and
fwait
pop
sbb
aas
sub
jecxz
dec
mov
hlt
push
xor
mov
movsl
jg
dec
jb
loope
xor
lods
sti
cli
mov
mov
or
daa
in
fsub
inc
cmp
cld
insl
sub
sbb
roll
aad
add
bound
push
and
and
dec
jl
stos
call
mov
mov
push
mov
push
movsb
dec
test
insl
sub
mov
out
nop
or
pushf
xchg
mov
mov
out
mov
xchg
jae
call
cmp
fistpll
xchg
daa
rolb
shlb
es
push
dec
ror
mov
inc
xchg
inc
das
insb
add
lcall
pop
xchg
sub
xchg
gs
push
xchg
push
in
add
mov
repz
cmp
pop
cmp
mov
loopne
xor
xchg
mov
test
push
mov
cmpsb
jmp
mov
fldl
fisttps
cmp
mov
sbb
inc
dec
imul
inc
push
mov
add
cmpsb
push
minps
lret
les
push
pop
out
pop
push
repz
rol
jge
loopne
out
repz
mov
dec
mov
enter
dec
out
rorb
fisttps
cmp
out
std
mov
stc
fcomp
add
imul
outsb
stc
sbb
inc
and
movsb
inc
pop
div
nop
arpl
stos
xchg
icebp
sub
fistpl
int
shrb
or
jge
pop
dec
and
push
pop
pop
scas
fs
mov
push
gs
divb
sub
loopne
repnz
mov
test
outsl
dec
ljmp
and
ljmp
jae
loope
and
mov
out
enter
lcall
movsl
mov
cmp
sbb
dec
repnz
out
dec
lods
mov
dec
pop
addr16
call
sub
or
lds
mov
mov
cmp
push
mov
shrl
xchg
fimuls
mov
xchg
and
movsb
je
mov
sbb
sbb
aaa
mov
fldcw
xor
out
mov
call
ljmp
test
or
xchg
sbb
shll
in
loopne
out
scas
xchg
mov
fldcw
inc
dec
dec
js
repz
cmp
in
jne
inc
mov
cmpsb
dec
and
lret
pop
fs
xor
cltd
shr
daa
lods
xor
add
mov
das
imul
mov
xor
cmp
pop
jnp
dec
sahf
adc
aaa
int3
xchg
sub
sub
pop
fs
jp
ret
xor
repnz
shll
push
mov
sbb
xor
out
shl
std
loopne
sub
mov
jno
test
add
test
xor
mov
pushl
add
insb
hlt
mov
lds
fidivrl
or
daa
pop
sbb
cmpsl
pop
sub
pop
mov
jg
cmp
pop
or
mov
fimull
xchg
mov
xchg
add
push
inc
test
xchg
imul
scas
cmp
push
jno
or
cli
pop
movsl
lods
test
stc
sbb
mov
in
dec
je
dec
pop
outsb
or
notl
loop
ja
push
stos
mov
dec
push
push
movsb
cmp
cmp
push
stos
jp
cwtl
and
outsb
cmp
inc
xchg
popf
jmp
sbb
xchg
sysexit
add
lret
xchg
testl
mov
pop
out
imul
lock
cmpl
push
mov
adc
jmp
xchg
addr16
add
popa
addr16
imul
push
cmp
mov
xor
in
add
mov
dec
std
mov
sbbb
pop
mov
or
scas
imul
and
push
cltd
mov
mov
dec
pop
lcall
cld
mov
sbb
inc
fsubr
cmp
daa
test
adc
pop
pop
or
rcrl
call
push
mov
jne
ret
sub
enter
push
lds
addr16
push
aad
jmp
mov
jp
or
mov
aas
ljmp
xchg
mov
mov
mov
les
sti
insb
xchg
movsb
arpl
pop
sbb
add
dec
js
ret
dec
arpl
cmp
scas
adc
int3
test
mov
or
sub
jle
sub
sub
push
mov
cmpsb
lea
sub
insl
fnsave
add
inc
rclb
dec
pop
sub
sub
pusha
cmp
jae
xchg
fdivs
iret
rorl
mov
arpl
sti
pop
xchg
pop
sbbb
out
inc
cmp
and
mov
or
mov
push
sbb
aam
mov
mov
cwtl
addps
jb
xchg
push
mov
std
pop
or
cmpsl
popa
jne
jmp
lock
movsb
and
fidivrs
lods
aam
dec
fadd
sub
pop
iret
js
es
pop
sub
jne
sbb
imul
push
cmp
lds
or
add
rclb
inc
pop
sahf
imul
mov
enter
xor
jle
cmp
ljmp
cmpsl
add
push
in
pop
jne
enter
cmc
sbb
jmp
cs
test
psubsw
xchg
and
lahf
sbb
xor
jns
lock
adcb
in
jmp
sub
roll
sbb
in
lock
and
mov
movsb
enter
and
aam
lods
xor
out
int
out
pop
xchg
pusha
sub
divl
or
stos
inc
shl
mov
jnp
or
or
inc
pop
xchg
loopne
mov
fsub
sbb
jmp
inc
scas
out
jge
pop
js
push
loope
xchg
push
in
pop
mov
mov
xor
test
pop
addr16
rolb
lods
inc
push
ljmp
out
daa
movsl
jmp
inc
jmp
dec
fcomp
pop
lods
pop
lret
imul
out
sub
inc
shl
lock
or
test
inc
das
imul
scas
psubsb
inc
std
jno
xchg
dec
iret
mov
out
dec
lahf
mov
add
pop
lds
shrl
lret
mov
jnp
inc
inc
jp
es
sbb
push
aad
dec
ret
mov
fcmovnb
popf
xchg
push
movsb
lret
hlt
fwait
gs
mov
repnz
push
test
push
lods
cmp
pop
push
sub
jecxz
lods
sbb
addr16
aam
inc
lock
std
fbstp
dec
pop
int3
fs
aam
adc
shll
outsl
mov
mov
in
cli
push
movsb
es
lcall
add
xor
push
lret
lods
push
ret
add
sahf
adc
pop
mov
adc
mov
mov
push
push
pop
hlt
bound
xor
mov
sbb
in
push
push
mov
das
mov
jb
shrl
pop
and
pop
xor
pop
inc
shlb
cmpsb
mov
xor
pop
jns
jge
jecxz
inc
mov
or
lods
popl
ja
jle
out
icebp
or
dec
insl
cld
jp
jno
mov
lods
call
lock
call
adc
outsl
adc
xor
mov
movsb
or
movsl
arpl
lahf
xor
ss
xchg
ja
jnp
stos
jge
and
xchg
xchg
add
pushf
push
addr16
test
fdivl
out
pop
sub
sbb
pop
test
sar
jo
ds
dec
in
push
xor
ret
or
jmp
arpl
dec
xchg
cmp
out
jne
xchg
ret
out
and
pop
adc
nop
aaa
xor
sub
hlt
jb
andl
push
sbb
mov
sarl
xchg
push
fists
add
ret
or
add
dec
mov
push
mov
test
bound
bnd
sub
daa
sbb
jle
and
stos
push
push
or
jnp
lret
testb
lock
loop
ljmp
popf
add
mov
jmp
cmc
mov
sbb
inc
sbb
es
adc
data16
faddl
xorb
mov
jo
aaa
xchg
sbb
jp
xchg
adc
clc
sbb
mov
ficoms
mul
int3
pop
int3
hlt
add
dec
rcrb
mov
stc
push
nop
mov
lods
xchg
call
jne
jbe
in
xchg
les
xor
sbb
push
test
int3
sbb
aam
lret
add
pop
mov
xchg
adc
daa
push
ds
dec
scas
gs
dec
jle
pop
sub
mov
dec
mov
jmp
movzwl
inc
xchg
andl
mov
dec
mov
adc
iret
mov
or
or
call
test
sbb
xor
cmpsb
push
out
sub
or
lret
hlt
ret
pop
mov
loopne
test
sub
ret
add
xchg
lea
dec
dec
pushf
push
inc
rorb
sub
xchg
push
inc
hlt
rcrl
jns
jge
jp
sub
xchg
cmp
and
push
hlt
imulb
dec
inc
ds
iret
mov
out
cmp
test
dec
gs
pop
sbb
repz
pushf
jmp
loop
cmp
xchg
bound
pop
pop
fidivl
gs
push
lcall
and
xchg
mov
icebp
dec
ficoml
inc
addb
pop
outsl
or
and
push
fs
pmaddwd
xor
jp
daa
xchg
pop
rcl
sti
or
in
push
push
add
sbb
movsb
push
subl
sub
repnz
xlat
out
insb
and
jle
mov
test
movsb
push
push
push
mov
push
mov
cs
notb
adc
ret
xor
dec
push
adc
cmp
fmul
mov
pop
loop
aad
sbb
dec
cmp
jb
sbb
cltd
mov
jle
fwait
mov
dec
fdivr
inc
fsubrl
add
mov
stc
test
popa
leave
inc
inc
adc
dec
out
ljmp
mov
jo
xor
mov
jl
sub
cmpsl
je
enter
loop
push
mov
test
rclb
out
mov
push
xchg
pushl
lahf
test
popa
mov
cmp
das
daa
lods
ljmp
or
aas
push
push
mov
jge
and
lahf
sub
jl
pop
pushl
bound
pop
and
cmpsl
push
inc
std
sub
lock
out
fnstenv
jno
sbb
cmpsl
lods
in
fwait
or
loop
dec
ja
sahf
xchg
cmp
insb
xor
fmuls
inc
mov
mov
jb
aad
fwait
aaa
inc
je
lods
jb
push
mov
mov
jecxz
sub
or
or
rolb
sbb
mov
mov
add
test
bound
stos
sub
sub
adc
xlat
sub
sub
cli
fwait
loopne
test
push
stc
fcompl
ret
sahf
mov
mov
sbb
iret
add
adc
dec
dec
jp
mov
popa
loop
xor
sarl
ljmp
loop
push
cmc
fsubp
negb
les
test
out
pusha
lea
jle
in
mov
les
xor
inc
ret
pop
daa
xlat
sbb
pushf
daa
cli
jbe
pop
cmc
mov
mov
mov
cwtl
sahf
mov
test
inc
pop
inc
hlt
add
add
push
push
jns
cmc
push
cwtl
insb
jno
ja
icebp
mov
outsl
or
xor
fstl
mov
jg
into
rcll
jmp
inc
idivb
rcr
call
cmpsl
dec
pop
xor
cmpsb
inc
bound
or
adc
mov
mov
pop
mov
jnp
pusha
sub
mov
cs
xor
icebp
fistpl
nop
cwtl
insl
das
pop
pop
stos
xchg
into
dec
repz
xchg
push
sub
push
push
sub
inc
out
fistl
xor
cmp
arpl
pop
pop
push
jge
pop
mov
push
insl
cs
notb
cltd
xchg
mov
mov
mov
push
loope
sub
rcrl
das
rorl
cld
outsb
js
mov
mov
fistps
stc
sbb
fisttps
and
lret
scas
out
mov
mov
xchg
inc
stos
sahf
push
fists
xchg
ret
data16
pop
add
mov
out
mov
dec
addl
mov
fists
xorb
mov
inc
jbe
scas
daa
in
xor
jg
insl
popa
xchg
pop
adc
xchg
addr16
les
ffree
adc
inc
dec
jnp
fwait
push
scas
inc
test
dec
sbb
xor
jae
enter
aad
test
add
or
stc
jmp
xorl
sbbl
popa
shrb
sub
pop
pop
jmp
xchg
imul
push
or
int
pop
sub
ja
imul
out
cmpsl
gs
int
jns
shl
mov
xor
ljmp
jo
into
xchg
jne
dec
js
fadd
repz
push
xchg
orl
pop
lret
jb
adc
mov
lcall
in
cmp
flds
cmpsb
adc
or
jno
ljmp
out
fistl
dec
adc
sbb
jmp
jp
xor
out
xor
stos
mov
fsubl
dec
cwtl
or
hlt
std
pop
movsl
hlt
mov
push
int3
int3
add
sbb
or
mov
into
mov
popf
arpl
daa
mov
mov
in
jl
pushf
jmp
ret
repz
mov
xchg
ret
gs
mov
sarl
loope
push
stos
repnz
mov
inc
pop
imul
enter
and
fiaddl
shl
sbb
insb
inc
sub
sub
push
lods
add
fs
sarl
js
push
sbb
cmpb
sti
js
sbb
sub
inc
xchg
adc
pop
fwait
jnp
repnz
or
or
fiaddl
pop
jecxz
test
clc
or
subl
xchg
xchg
daa
mov
cmp
sub
lds
daa
hlt
xlat
dec
aad
in
inc
je
sub
dec
cld
mov
add
daa
adc
sub
xorl
aam
inc
cmp
sahf
mov
sbb
push
outsl
jle
iret
ss
lcall
lcall
sub
push
xor
scas
cmp
ja
stos
dec
lret
rcr
xor
and
jne
loop
js
push
rcrb
mov
das
fwait
mov
outsl
shll
out
xorb
or
xlat
sub
ja
and
xchg
in
out
and
cld
mov
stos
or
add
jb
mov
out
shll
adc
cmp
cli
nop
adc
xor
repz
icebp
mov
leave
push
outsb
out
mov
sbb
xor
and
ss
inc
lods
cld
lcall
adc
xor
insb
adc
mov
outsl
cmp
les
xor
aas
cmp
notl
jmp
push
shll
aad
and
js
fisttpl
add
sbb
and
sar
xlat
cmp
mov
hlt
xchg
inc
ficompl
pop
sub
insb
jo
popa
cs
sub
jge
mov
mov
cmp
and
test
mov
and
cmp
out
and
jl
mov
aaa
xchg
dec
das
cli
sti
xchg
xchg
js
not
push
mov
mov
mov
out
movsb
dec
sbb
dec
int
fwait
ss
test
rcrb
fucom
jmp
mov
dec
sbb
int
mov
sub
inc
dec
mov
lods
jp
test
mov
mov
aas
pop
mov
call
jp
inc
sbb
rcrb
jl
dec
ja
icebp
or
sbb
jmp
sbb
add
shll
xchg
sbb
sbb
bound
jl
and
das
stos
cmp
int
fcomp
into
mov
notl
stos
dec
pusha
inc
int
sahf
jnp
outsb
mov
xor
repz
sbb
add
jge
xchg
jns
int3
jmp
cmc
jnp
xor
mov
subb
cmp
enter
and
cmc
jb
jg
pushf
lea
sub
rol
fst
mov
xchg
and
sub
insl
lret
iret
mov
clc
jge
inc
or
pop
leave
xchg
lret
roll
loope
enter
cmp
pop
dec
sub
js
movsl
push
cwtl
sub
push
push
mov
xchg
jmp
sub
mov
cld
inc
out
mov
ljmp
and
inc
daa
mov
xchg
insb
out
or
bound
mov
xchg
cmpl
stos
push
and
sbb
cvtdq2ps
and
aam
insb
fidivl
std
loope
cmc
nop
ret
jecxz
pop
leave
and
lods
mov
fldt
mov
cld
fistpll
and
cltd
xchg
jecxz,pt
popf
in
fstpl
xchg
mov
popa
addr16
sub
and
or
arpl
sub
or
push
xor
rorl
in
jns
dec
call
addr16
iret
hlt
mov
pop
push
stos
in
xchg
jb
icebp
pop
push
jmp
xchg
fildl
call
xchg
cmp
push
fcmove
int3
xlat
inc
cld
int
scas
sar
inc
fdivrp
leave
mov
sub
adc
dec
xchg
push
mov
movb
outsb
cmp
jae
mov
inc
dec
arpl
cmp
pop
or
pop
test
stos
sub
js
pop
std
into
stos
cmp
icebp
negl
andb
sti
stos
cld
mov
mov
lods
sub
jmp
bswap
xor
xchg
adc
mov
insl
pop
xor
rorl
sarl
fsubs
stc
add
sahf
outsl
clc
cld
scas
ja
lock
ja
das
jg
or
mov
nop
inc
or
pop
ret
fs
xchg
mov
test
popf
lret
push
test
mov
dec
outsl
dec
fidivrs
cmpsb
cmp
cmp
inc
out
es
pop
stos
push
sarl
icebp
movsb
mov
ret
testb
mov
imul
and
aaa
int3
jge
ljmp
add
stos
push
js
push
xor
in
xor
inc
push
test
cwtl
popf
cmp
pop
mov
and
inc
out
test
jbe
subb
pop
int
jl
enter
sub
inc
adc
faddl
add
stos
inc
movsl
je
movsb
add
imul
and
sub
xor
inc
rorb
lret
rcrl
mov
dec
stos
roll
neg
pop
fs
fucomip
gs
f2xm1
mov
pusha
aaa
pusha
inc
xor
orb
adcl
pop
insl
xchg
inc
jne
leave
adc
fbstp
or
mov
or
mov
lds
in
push
cmc
aam
imul
jnp
in
push
ljmp
mov
hlt
cmc
sub
pop
lret
loopne
cwtl
adc
cld
inc
lret
or
xchg
subb
sbb
orb
jno
add
lods
movl
sub
mov
rcrl
push
ficoms
shll
jnp
mov
cltd
push
aas
xchg
imul
push
adc
mov
daa
aam
hlt
jne
xor
std
fistps
xchg
stos
or
insb
lea
icebp
jo
jbe
leave
jle
jge
sbb
lahf
ss
mov
jp
add
xlat
inc
cld
xor
mov
push
fistpl
js
dec
ljmp
inc
inc
pop
pop
ret
je
mov
stc
mov
xor
pop
pop
mov
cmp
inc
rol
clc
rcll
push
cwtl
push
imul
push
cmc
mov
js
dec
into
or
mov
arpl
jmp
shr
dec
mov
out
sub
aam
xor
or
pusha
mov
cmp
add
jbe
jmp
fs
clc
inc
adc
dec
xchg
mov
jl
call
sbb
addr16
inc
and
mov
in
jno
int
lret
insl
push
sti
sbb
std
or
dec
stc
push
dec
bound
or
test
push
nop
mov
mov
out
add
int3
push
imul
inc
daa
gs
in
inc
fdivr
data16
fmuls
add
sbb
jg
cmc
adc
ret
push
adc
dec
jo
cmp
fwait
mov
cmp
mov
cmpb
mov
mov
xor
inc
or
in
push
out
jle
inc
inc
sbb
jg
shll
jecxz
call
mov
dec
mov
pop
loop
fs
ret
roll
sahf
int3
mov
lock
push
call
mov
mov
sti
adc
popa
or
insl
add
dec
lods
cmc
mov
xchg
aaa
mov
xor
push
adc
ret
mov
cltd
lcall
das
lds
popa
outsb
shlb
insb
addr16
jne
add
or
shr
test
cs
or
test
icebp
lcall
jmp
mov
inc
popa
test
cmpsl
fiaddl
ss
mov
in
popf
lcall
mov
aaa
jmp
inc
jl
pushf
jno
pop
inc
push
xor
mov
insl
out
fnstsw
jp
int3
jae
fprem1
xlat
mov
pushf
jbe
add
je
popl
out
movsl
cmc
mov
push
icebp
and
ss
negb
jbe
incl
sbb
loop
pop
into
cmp
sbb
mov
stc
in
imul
jae
scas
in
jne
xor
inc
push
pshufw
push
add
pop
adc
movsb
cmpsl
sbb
pop
or
mov
fisttpl
mov
inc
add
xor
repnz
dec
sti
insb
mov
cmp
add
add
mov
fdivr
xor
loope
jmp
imul
pop
pop
sbb
jp
xchg
clc
pop
das
pop
clc
call
jns
repnz
pop
jo
push
add
out
dec
es
adc
fcomps
xor
negb
xchg
xchg
sahf
andb
mov
cmpsl
rolb
arpl
sbb
add
aaa
xor
dec
loop
test
pop
jmp
or
sub
adc
inc
push
mov
xchg
shrl
mov
enter
enter
add
in
repnz
push
jne
push
jnp
adcl
jmp
xor
pop
add
sarb
in
jns
imulb
iret
pushf
aad
push
sti
iret
test
pop
cmp
or
mov
data16
mov
push
ret
loope
sar
xor
arpl
mov
xor
cmovl
cmc
inc
push
sbb
aam
cltd
rcrl
test
jno
mov
jbe
int
pop
cmpsb
xchg
pop
dec
adc
inc
pop
js
push
out
iret
sahf
clc
or
jnp
jnp
mov
sbb
call
push
fsubs
xchg
addr16
call
xor
cmp
clc
jp
jecxz
cs
xor
aad
jne
push
and
mov
mov
nop
xchg
loope
sbb
jne
jns
popf
pop
das
mov
sbb
xchg
add
mov
call
subl
or
xor
add
aaa
inc
cltd
aaa
or
gs
or
mov
pop
jno
in
hlt
pop
sub
sti
loopne
mov
roll
aaa
pop
js
mov
int
cwtl
xlat
jno
pop
xchg
shrb
arpl
das
ja
cmp
mov
jo
dec
js
fmull
pop
jbe
push
fcmove
fdivs
xlat
dec
xor
in
pop
xchg
mov
pop
insb
push
pop
sbb
push
adc
int3
adc
sub
stos
dec
movsl
loop
in
stos
jl
imul
and
mov
mov
cs
lods
arpl
aad
fmuls
xchg
inc
adc
jbe
das
negb
xlat
jno
test
jnp
hlt
sbb
loopne
andb
xor
sub
adc
mov
pop
nop
std
push
sub
adc
and
fmuls
mov
or
xchg
mov
xchg
scas
sbb
and
cli
mov
mov
out
and
test
jno
sbb
xchg
repz
jl
lret
mov
cmp
nop
push
outsb
mov
mov
popa
loop
out
cmpsb
sbb
or
cwtl
in
mov
loopne
int3
shr
lds
pop
mov
pusha
movsl
cmpb
cmp
mov
js
mov
jmp
push
mov
out
mov
aaa
lock
movsl
cwtl
sub
mov
lods
mov
pop
cmpsb
ret
ds
mov
loope
movsl
xchg
jno
pusha
cmp
popf
inc
out
mov
outsb
adc
test
shr
shll
jl
test
lret
push
pushf
and
ja
imul
into
leave
cmc
cld
popf
sub
dec
sub
mov
mov
js
adc
out
scas
mov
mov
test
xor
cltd
sub
fcmove
fistpll
fiaddl
ss
pop
jecxz
lods
jae
imulb
push
pusha
pop
sub
cwtl
mov
mov
in
sbb
or
cmpsl
negl
shlb
outsb
and
xchg
mov
cmpl
cmp
mov
ss
and
dec
jno
cmp
push
mov
es
std
push
fwait
jns
loop
xchg
sbb
mov
je
fmull
fdivrp
push
je
push
mov
jns
jmp
daa
xchg
lea
adc
pop
push
daa
imul
pop
inc
adc
jnp
cltd
in
add
das
or
popf
sub
call
daa
cmp
push
gs
mov
push
int
mov
je
lea
int
cmp
cmp
mov
jp
test
xor
adc
fidivs
pop
imul
pop
adc
xchg
xor
inc
xlat
mov
cmp
ja
pop
imul
mov
inc
sub
sub
xchg
js
inc
pop
mov
push
pop
xor
addr16
cmpsl
push
loop
aad
xchg
cltd
jbe
ror
xchg
lret
add
xchg
dec
aad
leave
inc
call
loope
andl
rolb
ljmp
jae
fs
mov
inc
inc
cmp
push
jo
sub
xor
sti
pop
add
ret
dec
and
clc
in
jns
jmp
pushf
out
dec
mov
nop
pop
ljmp
add
ss
inc
add
out
cwtl
or
sub
subl
fadd
loop
scas
repz
sysexit
jbe
mov
xchg
xor
and
dec
mov
mov
jge
dec
pushf
outsb
adc
jno
sbb
jg
ret
cli
jns
ret
js
pop
popa
adc
cmp
rolb
stc
test
outsb
inc
xchg
clc
cmp
lods
lock
addr16
push
les
ja
and
lret
inc
fcomps
shll
std
mov
cwtl
adc
ds
enter
loope
push
aaa
addl
testb
lsl
mov
add
mov
cli
stos
popa
cmp
lret
push
adc
push
jne
ffree
in
jmp
mov
ss
push
lret
test
pop
mov
push
test
daa
jle
xor
xchg
outsl
mov
bound
push
cli
aad
jge
rcrl
inc
sub
or
es
loope
lods
test
xor
mov
jne
jge
repnz
and
bound
sbbb
sub
push
mov
sbb
in
dec
stc
adc
out
ss
sti
jmp
cld
js
int3
lods
push
sub
pushf
sbb
xchg
in
mov
and
mov
xor
sbb
ret
add
aam
lea
cmp
mov
in
mov
mov
test
sub
out
inc
test
and
fxch
adc
add
push
lds
out
jne
clc
add
test
sbb
jecxz
pop
ja
nopl
xchg
sbb
inc
or
int3
mov
test
rclb
or
dec
dec
pushl
cltd
and
push
push
cmc
gs
dec
push
pop
lea
dec
int3
js
push
pusha
mov
in
sbb
jo
stos
pop
xor
mov
push
std
jae
ret
dec
stos
out
cmp
inc
adc
mov
xchg
and
xchg
cmpb
cmpsl
xchg
adc
dec
jno
xor
dec
pop
aam
xor
cmp
adc
adc
fistps
repnz
dec
add
hlt
outsl
data16
int3
mov
and
mov
mov
js
int3
negb
mov
or
cltd
scas
pop
pop
sub
icebp
js
fwait
and
icebp
pushf
jne
push
stos
jle
lcall
inc
push
cs
sbb
sbb
jle
xor
mov
imul
mov
frstor
rep
dec
add
cwtl
dec
adc
jnp
int
mov
stc
testl
or
cmp
dec
clc
sub
fldcw
pop
mov
jmp
pop
xchg
xlat
loopne
cmp
sbb
or
mov
push
cmp
outsb
lds
sbb
xchg
add
adcl
outsb
jo
mov
sbb
cltd
mov
xor
test
jle
adcl
jns
jne
jle
push
lret
mov
pop
frstor
pop
lock
ret
bound
or
pmaddwd
mov
inc
xchg
cli
xor
adcl
iret
lea
int3
push
fs
push
in
out
popa
dec
mov
sub
lea
dec
mov
ljmp
sub
jmp
push
lret
jne
ja
insl
dec
sbb
cmp
cmp
jmp
mov
aad
xorb
jnp
cmp
pushf
jg
xchg
push
stos
data16
popa
mov
dec
stc
cs
sbb
mov
xchg
sahf
and
lods
call
les
decl
mov
data16
adc
jns
sarl
arpl
inc
cmp
jmp
mov
mov
rcr
sbb
pop
int3
icebp
es
flds
adc
pop
sub
adc
cld
sbb
scas
movsb
sbb
dec
mov
out
fbld
pop
lea
dec
xlat
inc
js
lock
jbe
in
call
lock
ljmp
mov
into
xor
loop
andl
cld
mov
jns
insb
scas
popa
push
xor
ljmp
dec
nop
cmp
rcrl
add
push
test
inc
lea
xlat
mov
lock
rorb
insb
add
pop
fcoms
loopne
jmp
mov
xchg
and
fiadds
in
imul
cwtl
mov
popl
xor
inc
xlat
adc
adc
mov
sub
sahf
add
cltd
cltd
mov
cmp
push
cmc
dec
push
xchg
cmp
jecxz
and
in
insl
loope
fisubl
sub
lods
insl
add
jle
cmp
test
cmp
sbbb
pop
daa
int
jns
inc
mov
fldcw
adc
jg
int
pushf
pop
jp
cmp
and
pop
add
pop
mov
jne
mov
and
std
add
cmp
ds
adc
stos
push
out
cmc
pop
cmpsl
or
dec
xchg
sbb
loopne
clc
jnp
mov
test
push
mov
insl
mov
sbb
mov
jne
sub
es
mov
inc
mov
jbe
sahf
or
jno
sti
cltd
cwtl
popa
mov
mov
xchg
jp
js
jnp
mov
pop
stos
sbb
es
or
add
lahf
mov
aam
mov
xchg
lret
aad
jnp
sbb
sbb
fdivr
inc
popa
fwait
out
cmp
xchg
cltd
cmp
xor
jno
aas
xchg
mov
test
es
push
in
data16
lods
or
pop
jl
sbb
int3
sbb
cmp
mov
ss
cmp
inc
add
dec
mov
aam
xchg
push
jnp
pop
sahf
fcom
int3
ret
ret
mov
adc
pop
xor
cmp
lahf
cmpb
xchg
sarb
out
push
xor
sub
xchg
sbb
and
mov
cmpsb
mov
sub
inc
cltd
cmp
xchg
rcrb
into
fucom
test
sbbb
in
fldt
sbbl
mov
or
add
mov
jo
xlat
push
repnz
jle
push
or
stos
push
push
mov
mov
mov
jbe
cmpsb
mov
xor
cmp
and
out
orl
mov
xchg
pop
inc
popa
cmp
loopne
jo
sbb
insb
ljmp
cli
push
jb
sbb
stos
arpl
je
into
mov
icebp
mov
repz
inc
loopne
jmp
xchg
ret
mov
pop
and
jbe
adc
cmpl
div
imul
mov
add
lods
test
xchg
rolb
inc
sbb
in
icebp
rcrb
pop
sbb
inc
mov
pop
sub
idivb
lods
insl
fstl
call
mov
dec
mov
clc
jns
pop
insl
movsb
dec
cmp
in
pop
xchg
negl
jae,pt
les
std
or
push
and
pop
mov
std
inc
pop
and
shll
add
addr16
xor
xchg
inc
add
mov
lret
out
movsl
jp
ljmp
sub
inc
and
jae
fs
push
mov
dec
ret
rcrl
leave
fildl
pop
mov
cld
dec
inc
insb
pop
ljmp
mov
lcall
jge
bound
mov
js
mov
add
in
cmp
daa
dec
dec
and
mov
in
mov
jp
in
xchg
sbb
push
adcb
mov
stos
gs
lea
cwtl
inc
mov
rolb
sub
mov
fdivrs
inc
arpl
mov
ljmp
jp
lahf
je
cmp
or
mov
call
mov
xor
jno
push
or
add
cmpsl
sbb
clc
jle
pop
inc
outsb
inc
lds
shll
sti
mov
dec
out
jmp
push
ja
pusha
cmp
loope
daa
scas
lahf
push
ja
test
pop
imul
icebp
lahf
std
nop
out
lds
inc
jle
aaa
lods
ja
xchg
jns
cmp
push
add
nop
ds
ret
stos
rcll
test
or
cmpb
gs
mov
js
clc
test
xlat
les
out
es
xchg
push
jno
cmp
loop
movsb
sti
xorl
add
jg
inc
in
mov
mov
shlb
addl
mov
and
fdivrs
fs
or
test
jns
data16
jo
out
xor
scas
mov
mov
test
lret
ss
cli
cli
jo
push
int
pusha
aaa
mov
stc
pop
idivb
test
leave
pop
or
fisubs
pop
jbe
movsl
or
enter
repz
push
fisttps
sbb
mov
push
gs
mov
bnd
push
xchg
ds
mov
pop
pushf
jns
mov
fwait
cmp
rcr
cmp
lds
aas
sarb
sahf
loopne
cmpb
add
test
sbbb
add
pushf
and
daa
dec
out
mull
mov
pop
lock
sub
adc
dec
clc
push
push
out
fs
sbb
in
out
sbb
push
ret
add
mov
fwait
sbb
pop
pushf
sbb
insb
mov
test
and
inc
cmp
jl
dec
lods
xlat
jb
xlat
cmpsl
out
addl
lret
hlt
dec
jno
mov
adcb
sub
mov
and
dec
mov
mov
mov
pusha
mov
std
pop
cmpsl
mov
ffree
cmc
imul
adc
lea
mov
stos
jnp
je
cmp
dec
aad
out
out
inc
mov
nopl
and
push
jle
adcl
push
or
fidivs
ss
jnp
adc
das
ds
xor
add
mov
cmpsb
imul
popa
lret
das
ret
lods
sub
xchg
jl
pop
out
outsb
xchg
cmpb
repz
call
xchg
jecxz
loop
ds
jae
fadds
movsl
shrl
jge
fdivrs
jge
inc
mov
dec
icebp
sub
std
xchg
imul
push
rorb
cmp
andb
aaa
clc
js
int3
mov
add
test
inc
xor
fistpl
ss
mov
mov
mov
loop
ds
xchg
ss
enter
sub
test
bound
arpl
call
jo
jb
cmpsl
mov
ficoms
bound
popf
or
or
xchg
jle
xor
loope
icebp
leave
js
out
and
xchg
sbb
add
jnp
aaa
lock
mov
aad
data16
sti
pop
les
mov
cltd
xor
adc
lods
shl
pop
cmp
cwtl
fisttpl
sti
mov
mov
cmp
mov
cmpsb
imul
jb
and
call
push
loope
pop
dec
sbb
pop
add
imul
cmpsl
xchg
lret
fiaddl
ret
mov
xchg
pop
out
pop
test
mov
adc
pop
shrl
sahf
shrb
dec
mov
insb
out
mov
aad
das
push
imul
add
push
mov
and
push
pop
dec
cmp
lahf
mov
testb
sti
xchg
loopne
je
jb
addr16
cmp
mov
jb
push
shlb
jne
in
xor
add
aam
lcall
sbb
test
jle
das
lods
cmp
adc
mov
sub
arpl
out
aad
ja
imul
sahf
dec
adc
add
out
stos
ljmp
in
mov
adc
fwait
pop
mov
arpl
and
lret
adc
fwait
xchg
push
fldt
movsl
sub
bnd
aas
and
jno
dec
mov
arpl
repz
fsubp
cmp
xchg
fisubrl
pop
push
jecxz
xor
gs
adc
cwtl
roll
outsb
cwtl
add
addb
pushf
out
mov
lcall
xchg
mov
lock
mov
loopne
fidivrs
scas
push
scas
std
inc
mov
jne
lahf
mov
xor
cmp
fs
mov
cs
or
ret
xchg
lods
shlb
call
pushf
add
mov
mov
mov
pushf
cmpsb
mov
sbb
sub
dec
mov
adc
or
lret
outsb
outsb
movsl
je
inc
pop
sbb
cmp
push
jae
inc
pop
bound
subb
mov
iret
out
push
push
and
sbbb
cmp
hlt
adc
pop
dec
cmp
sub
add
ffree
sbb
cltd
xchg
xchg
adc
test
mov
pop
std
in
cld
mov
dec
pop
jmp
neg
push
jge
push
xchg
xchg
mov
adc
mov
rep
xchg
lret
in
cltd
jns
xor
dec
popa
int
insb
int3
mov
add
mov
sbb
jnp
loopne
dec
mov
jmp
aam
fwait
inc
xor
xor
jge
push
jne
lret
clc
mov
jbe
stos
repnz
insl
pop
test
lcall
iret
sub
xchg
mov
xchg
dec
outsb
or
sub
push
daa
test
movsb
loopne
jo
orl
xor
in
imul
cmp
popa
add
icebp
out
fsubl
xchg
stos
testl
cmc
cmp
push
or
jge
push
int3
test
add
mov
aaa
mov
dec
inc
push
mov
in
xor
movsb
sbb
push
test
iret
orb
xchg
mov
es
loop
add
leave
stc
mov
xchg
push
mov
gs
adc
lret
add
push
lcall
pushw
lock
shr
nop
js
xchg
clc
mov
sbb
add
cmpsb
fldcw
xor
fisubrs
cmp
pop
pop
test
xor
popf
and
lods
arpl
or
int
sub
mov
xor
jo
push
xor
mov
pop
sahf
or
out
jb
lds
cs
mov
push
add
adc
adc
cmp
je
dec
frstor
inc
lret
fisubrl
jge
jecxz
pop
mov
fs
lret
movsb
mov
aas
inc
pusha
mov
ret
outsb
sti
ret
and
es
das
or
cltd
inc
inc
outsb
cmpsb
pop
cmpl
divl
cltd
adc
jbe
or
xchg
lods
negl
jmp
xchg
movsb
imul
cld
jp
sbb
adc
pop
sbb
cli
icebp
insl
push
fiaddl
jg
adc
dec
enter
addl
push
add
insb
xchg
ds
nop
out
mov
cmp
je
mov
jno
clflush
ret
mov
or
xchg
stos
aam
es
sahf
std
insl
inc
push
or
pop
pop
pop
push
es
js
sub
inc
inc
mov
sub
cld
jg
hlt
lods
out
fdivp
mov
push
incl
cld
stc
inc
sub
ror
pop
xchg
sahf
repnz
inc
mov
adc
out
imul
imul
mov
iret
xchg
aaa
leave
loopne
and
addb
aad
xor
xchg
xchg
jb
inc
out
repz
gs
les
into
rolb
pop
xchg
mov
cmc
add
and
stos
adc
cli
inc
push
xor
mov
fnclex
cli
les
push
cld
sbb
ficoml
ss
sub
dec
sti
dec
cld
sti
movsl
adc
push
inc
pop
iret
movsb
pop
inc
outsl
jne
inc
push
xchg
pop
cmpsb
cmc
sbb
add
adc
sbb
jle
insl
and
mov
fs
in
dec
lret
xor
lahf
js
mov
pushf
lds
lds
fidivrs
loop
mov
imul
mov
pop
fisubrs
movsl
fs
xor
aaa
push
push
testb
in
mov
add
in
daa
out
xchg
add
xchg
xor
lcall
es
nop
mov
ljmp
mov
ja
lret
icebp
cwtl
shlb
mov
leave
das
sti
add
out
rcl
in
addr16
cmp
enter
aaa
mov
dec
mov
dec
and
adc
fsubrs
xor
mov
hlt
cs
sbbl
mov
pop
or
jns
jmp
xchg
out
insb
out
mov
jb
mov
push
jmp
mov
ds
dec
xchg
push
in
jge
inc
ljmp
fmulp
push
xchg
xchg
mov
movsb
sub
pop
pushf
clc
cli
and
xchg
jp
push
adc
rcrb
gs
sbb
mov
cmp
sub
sbb
or
clc
xor
or
cmp
xchg
sub
sbb
dec
fld
inc
xor
dec
mov
inc
xor
scas
sbbb
bound
inc
ficompl
xchg
lock
clc
mov
xchg
pop
xchg
inc
add
sub
push
mov
cmpsb
sbbb
jg
mov
cmp
xchg
sub
fsts
pop
push
and
dec
xlat
or
cwtl
push
jns
incl
dec
inc
xchg
or
pop
notl
sbb
cmp
inc
adc
imul
enter
jmp
lods
sahf
aas
mov
lahf
pusha
pop
xor
cmp
pop
push
sub
inc
mov
pop
adc
adc
push
xchg
ror
mov
xor
pop
pop
testb
dec
mov
pop
jle
icebp
pop
sub
pop
or
nop
out
mov
inc
or
js
add
jns
pop
inc
int3
daa
or
mov
or
fildl
lods
jo
neg
jne
mov
jnp
cmpsl
mov
jbe
pusha
jnp
jne
cmp
out
jno
cmp
mulb
push
pop
xchg
sbb
cli
stos
pushf
cmp
popa
and
test
jmp
bound
out
cmp
push
jp
jp
inc
mov
rcr
cmp
pop
xlat
push
int3
or
lea
push
xchg
int
les
aas
fadds
mov
popa
adc
testl
inc
push
push
pusha
dec
fnstsw
out
jmp
pop
daa
lock
push
pop
mov
jae
lret
cmp
dec
ret
xchg
and
pop
notl
dec
push
lods
mov
adc
fldenv
inc
inc
or
add
add
and
sub
loop
fcoml
xchg
or
cmpsb
rol
mov
push
into
iret
pop
clc
mov
in
xor
sub
cmp
int
and
es
shll
mov
xorb
push
mov
fnstenv
aam
push
rolb
add
add
xlat
mov
stc
cltd
lcall
mov
call
adc
dec
cltd
xchg
sbb
push
addr16
scas
pop
in
push
pop
stos
arpl
and
ljmp
jns
fisttpll
sar
ficompl
push
and
lea
cwtl
mov
jmp
sub
ss
fsts
mov
outsb
mov
jecxz
sbb
test
dec
sbb
daa
movsb
stc
loop
mov
push
jp
add
je
cmpsb
cmpsl
lret
jge
or
aam
hlt
in
insl
push
push
out
cli
push
mov
sub
push
sahf
cmp
rclb
push
in
push
push
jns
arpl
push
mov
adc
out
adc
add
mov
stos
enter
ret
sub
jne
into
fwait
mov
push
inc
imul
lret
pusha
pusha
mov
xchg
rolb
cmp
int3
add
inc
sbb
cmpsb
dec
aad
pop
ds
pop
pop
pop
in
shll
test
cmp
enter
xor
mov
icebp
int3
test
xchg
mov
sbb
jp
movsl
xlat
fbld
adc
jo
mov
leave
hlt
pop
stos
test
adc
adc
fstps
aas
push
push
movsb
aas
push
lea
aas
and
icebp
xor
add
xchg
mov
dec
out
cmp
push
lahf
adc
rcll
leave
test
decl
pop
daa
sub
in
leave
push
push
mov
cmpb
push
pop
jge
jmp
leave
mov
pop
test
pushf
add
scas
and
mov
jb
fucom
or
mov
pop
pop
mov
dec
add
inc
je
lods
arpl
cmp
test
roll
jbe
add
ljmp
inc
mov
xchg
cmp
xor
dec
loopne
sbb
pusha
adc
xor
add
mov
out
jno
mov
dec
mov
jge
pop
add
clc
and
adc
shrb
xchg
mov
aas
or
mov
iret
sbb
repz
mov
iret
cmp
lods
push
sti
xor
mov
cld
sahf
std
out
popf
insb
out
dec
mov
mov
and
sbb
xchg
scas
dec
sbb
cs
nop
mov
jb
lret
xor
jecxz
pop
xchg
stc
add
cld
fildl
lahf
cmp
sbb
xor
adc
jge
inc
sub
adc
fldl
movsb
addb
and
out
lret
out
movsl
dec
les
in
movsl
or
xorb
enter
orb
mov
sub
rep
mov
pop
lock
shl
mov
pop
ds
ficoms
jg
dec
or
jl
mov
icebp
adc
arpl
sbb
mov
cmpsl
shrb
fists
jp
mov
add
sub
mov
iret
fimuls
mov
jbe
pop
jno
dec
or
adc
cmp
lcall
popa
in
dec
or
pop
outsl
jns
cmp
aad
cmpl
mov
out
push
mov
js,pt
fidivrl
add
pop
fidivrs
jmp
mov
pop
cwtl
mov
jle
call
adcb
sbb
sub
cld
xor
scas
inc
xlat
push
fcom
and
fidivrs
xlat
mov
fstpl
jbe
das
adc
aad
loopne
xlat
mov
xchg
lea
out
dec
leave
ret
pop
test
loope
fidivl
aaa
jl
rcr
adc
push
sbb
dec
imul
and
xlat
jnp
gs
xor
push
jp
int3
fwait
mov
outsl
lret
xlat
pop
add
das
int3
lock
cmp
test
push
jns
sbb
adc
jg
and
stc
pop
mov
xchg
outsb
in
xchg
out
jg
dec
or
comiss
xor
rolb
mov
and
shr
add
add
push
push
das
adc
mov
cli
testb
jno
cmp
adc
imul
mov
adc
rcrl
pop
mov
cmpsb
es
add
imul
test
mov
cmp
adc
xor
fsubl
and
xor
jno
test
sub
rol
clc
jne
adc
sbb
jo
outsl
mov
inc
loopne
pop
iret
lock
fistps
mov
xchg
sub
ja
cmp
xchg
mov
popf
push
in
and
popf
pop
sub
addr16
or
shll
add
dec
push
cmc
inc
or
add
aam
call
shlb
fdivl
jb
aad
imul
or
adc
leave
pop
movsb
pop
sub
sahf
repnz
or
fmull
lock
pop
xorb
jne
push
xchg
xor
mov
add
pop
sub
and
adc
hlt
insb
pop
and
scas
xchg
mov
ficoml
bound
shrl
ss
out
cli
sahf
lock
dec
mov
inc
daa
sub
ss
pop
jb
or
in
xchg
mov
pop
push
inc
sub
iret
das
mov
inc
js
sbb
ja
add
jp
cmp
enter
out
xor
and
xor
or
sti
add
xchg
stos
aaa
aaa
adc
xor
mov
jl
lock
arpl
sbb
inc
mov
mov
das
rcl
and
pop
mov
mov
mov
inc
lods
jno
nop
fs
dec
xor
mov
lea
dec
sub
insb
out
sahf
pusha
je
jge
shll
fwait
leave
sahf
jmp
aad
stc
les
in
push
clc
sbb
mov
mov
pop
roll
sub
xchg
lods
outsl
imul
es
sbb
aam
aam
mov
jbe
push
push
push
adcl
mov
mov
scas
icebp
cmpsl
das
sbb
mov
repz
or
sarb
mov
jae
cmc
xor
js
cmpl
sbb
sarl
ljmp
roll
and
mov
and
push
jo
outsl
sbb
lret
repnz
xor
fchs
test
mov
fwait
orb
sub
pop
subb
push
sahf
cwtl
push
cld
aam
out
mov
enter
nop
xchg
push
loop
mov
in
inc
stos
ret
mov
pop
fisubrs
aaa
xchg
jo
or
pusha
mov
je
stc
call
orb
stc
in
pop
cmp
jl
cmp
pop
stos
inc
mov
sbb
adc
push
lods
std
inc
push
testl
addr16
dec
xchg
or
aad
or
or
dec
enter
out
push
movsl
ss
add
hlt
xor
popf
in
adc
ror
cmp
mov
outsl
repz
fcmovu
stc
jo
xchg
cmp
inc
sbb
inc
test
adc
movsl
inc
mov
imull
in
loope
add
addb
xor
test
jbe
xor
push
sbb
loop
imul
rcl
pop
xchg
aam
jle
lock
adc
lret
ficompl
addr16
out
ret
xchg
arpl
sub
push
sbb
mov
sbb
mov
aaa
leave
test
inc
fs
cmpb
in
arpl
and
fdivs
sub
mov
sub
push
mov
xchg
enter
out
imul
into
inc
and
jecxz
dec
sub
cs
jg
mov
xor
and
jecxz
push
mov
mov
and
mov
mov
es
push
adc
arpl
and
push
push
sbb
jno
lret
mov
leave
repnz
and
ss
adc
rclb
pop
jg
cwtl
ss
out
daa
cwtl
mov
int
cmpl
outsl
loop
mov
in
cltd
int3
sbb
lods
adc
dec
jge
jl
jle
cmp
pop
loop
ret
in
xchg
mov
clc
cmp
mov
push
jle
insb
jbe
sbb
repnz
mov
adc
push
insl
rcrb
arpl
in
jg
xchg
or
pop
fnsave
imul
pop
mov
mov
jecxz
push
dec
test
push
test
sub
lea
fiadds
mov
hlt
inc
cli
jge
jg
mulb
inc
mov
clc
ja
out
jbe
cmp
ffree
fld
jb
lahf
fsubrs
xchg
dec
cld
imul
aam
cmpsl
mov
xor
xchg
xor
pop
sti
ds
xor
aam
dec
hlt
mov
pusha
cmp
pop
add
mov
add
sbb
cmp
rcrl
xor
inc
sub
mov
pop
pop
leave
and
popa
lret
pusha
mov
mov
fistps
fwait
xchg
mov
popf
sbb
push
or
cwtl
dec
mov
and
movsb
mov
inc
or
mov
into
call
ret
and
scas
addr16
and
xchg
arpl
mov
pop
lcall
xor
dec
fcomps
mov
xlat
popf
xchg
xor
jns
daa
inc
arpl
lea
and
pop
add
loope
or
and
mov
aaa
jmp
and
sbbl
sbb
sbbb
lock
mov
hlt
iret
insb
inc
mov
or
loopne
xchg
push
mov
jle
daa
pop
clc
or
mov
pop
mov
enter
les
push
ret
dec
jb
fcmove
lea
mov
push
out
fmull
inc
lods
inc
lahf
or
int3
lock
jns
inc
rorl
mov
jle
cmpsb
lcall
pop
orl
and
das
fwait
jns
jae
data16
cld
js
jns
mov
dec
or
es
push
mov
je
jecxz
arpl
cwtl
pop
pop
inc
push
test
inc
push
fwait
int3
ret
test
cli
xchg
pop
inc
add
cmpsb
sub
jb
xor
xor
pop
cs
add
mov
xchg
popa
inc
rcrl
gs
cmpsl
lcall
push
int3
arpl
and
mov
jle
push
mov
sub
cmpsb
inc
push
xchg
adc
mov
push
imul
imul
dec
mov
int
mov
js
xlat
out
mov
pop
lahf
push
xchg
fistpll
sbb
push
movsb
sbb
fnstenv
xor
or
add
es
insb
mov
mov
pop
lea
mov
movsb
in
jmp
fiadds
jbe
loopne
jecxz
push
int
dec
lret
push
lds
outsl
inc
add
mov
inc
mov
xchg
xchg
bound
loope
movsb
push
mov
sbb
in
pusha
cli
fcmovnb
lret
dec
pop
push
bound
mov
aas
shlb
dec
aas
add
stc
pop
out
inc
mov
repnz
adc
xchg
add
sbb
sahf
pop
inc
mov
lods
clc
fwait
lcall
add
adc
adc
movsl
notl
add
enter
hlt
and
jmp
push
out
adc
orl
sti
adc
aad
mov
rcrl
sbb
inc
lret
or
push
mov
jle
xchg
mov
rcr
mov
mov
xor
idivl
cmp
sub
shlb
jmp
cmp
push
sub
mov
int
xlat
mov
push
xchg
loope
mov
or
push
mov
loope
js
jge
popf
inc
imul
mov
test
cwtl
jbe
sub
ds
xchg
test
pop
jae
mov
ds
mov
jae
shlb
push
pop
push
mov
push
and
std
cmpsb
nop
sub
aaa
data16
negl
cs
scas
xor
xchg
adc
and
sbb
fbld
aad
dec
cmp
and
iret
dec
daa
aad
sub
cmp
test
mov
push
cmp
insl
aad
pop
sub
xor
stc
mov
enter
aad
add
push
jle
das
lcall
fcmovu
inc
arpl
fists
cwtl
nop
imul
out
xor
stos
dec
aam
dec
inc
add
push
andl
mov
xor
arpl
add
or
adcl
inc
sahf
and
cltd
cmp
lea
mov
pop
xor
jnp
push
lret
xchg
cmc
jno
mov
mov
adc
ficoml
adc
push
lock
pop
jmp
mov
mov
jno
clc
mov
es
jle
sub
xorb
fisubrs
std
iret
loopne
jo
ljmp
push
fdivrs
cld
sbb
rcll
and
xchg
dec
les
cltd
cmp
aam
scas
pop
test
sub
ds
test
mov
inc
gs
bound
xor
in
push
mov
loope
cmp
and
xchg
xchg
fldl
jge
jno
shlb
dec
xchg
xchg
lret
inc
stos
cmp
popa
xor
or
mov
xchg
jle
jp
sahf
stc
int3
fwait
push
in
lret
pop
cld
movsl
popa
call
push
notb
jle
out
push
inc
sub
icebp
dec
filds
test
dec
jns
iret
push
mov
rcl
test
divb
aad
pop
push
iret
push
pop
push
adc
rolb
repz
shrl
es
sbb
mov
push
into
sbb
mov
aad
add
push
pop
out
imul
mov
in
cmpsl
or
imul
daa
sub
cmp
test
in
jmp
in
cmp
jo
insb
inc
fwait
push
insl
ja
stos
stos
xchg
cmp
ret
fnstsw
cld
mov
mov
cmp
bound
pushf
sti
mov
repz
mov
cwtl
and
pop
scas
arpl
sub
shrb
mov
fisubrs
roll
xchg
shlb
sbb
sbb
aam
mov
push
pop
jo
lahf
outsb
mov
pop
xor
imul
dec
in
xor
dec
cmp
sub
loopne
stos
push
jbe
pop
fnsave
mov
jae
push
mov
mov
pop
arpl
arpl
sub
popa
addr16
mov
aas
addr16
aas
lret
mov
mov
cmp
jecxz
or
mov
jne
cwtl
mov
sub
mov
sub
mov
pop
sbb
jmp
push
mov
mov
or
fwait
dec
inc
add
ja
cltd
dec
sahf
mov
inc
int3
xchg
xchg
mov
adc
icebp
mov
jmp
adc
addr16
lods
fiadds
fisubs
jle
lods
sub
xorl
cmc
lds
xlat
inc
adc
xchg
leave
jmp
cli
mov
pop
insb
jge
push
fldenv
mov
push
adc
inc
lock
dec
push
insl
stos
or
cwtl
push
outsb
push
scas
loopne
add
push
adcb
cs
dec
pop
lret
mov
andl
cli
pop
and
mov
pushf
mov
dec
movsb
inc
and
sahf
xchg
movsb
or
mov
pop
inc
dec
dec
xchg
fcoml
sbb
and
fistpll
std
clc
cli
fstps
outsb
sbb
fwait
xchg
cmp
mov
inc
insb
pushf
cmp
dec
and
pop
inc
cmp
mov
lret
int
jnp
cmp
out
push
xor
popf
aaa
cmp
cmpsl
mov
fs
jb
push
or
in
xchg
mov
leave
sbb
mov
movsb
xor
jnp
fisubrs
ret
jmp
add
pop
ljmp
cmpb
jmp
mov
xor
cmp
test
inc
inc
adc
mov
rolb
push
jecxz
adc
cmp
test
sub
add
sbb
xchg
loopne
inc
lcall
push
sub
mov
jne
aam
mov
test
xchg
outsl
test
cs
jecxz
mov
pop
cmp
fistpll
and
cmp
lods
daa
test
xchg
decl
pop
sub
in
shlb
adc
movsb
xor
mov
lahf
testl
imul
jmp
and
int3
push
mov
jp,pt
testl
rcr
xchg
pushf
xchg
ljmp
xchg
es
lds
push
cli
mov
stos
mov
lret
mov
je
jle
mov
pop
cmp
xor
xchg
push
test
ret
push
out
sub
inc
popa
daa
jp
cmc
inc
push
cwtl
push
jo
movl
adc
rclb
mov
gs
adc
int
inc
into
shlb
xor
push
adc
sbb
in
add
xchg
sbb
mov
pop
clc
sub
mov
cmp
scas
cmp
cld
fistl
cmc
mov
mov
frstor
cltd
mov
repnz
mov
out
loopne
sahf
pop
cld
push
loop
sarb
ds
pop
push
roll
xchg
movsl
or
aad
test
sahf
and
add
mov
ja,pt
fisttpl
int
jecxz
adc
data16
jb
fs
push
xor
into
xlat
clc
xlat
or
sti
add
fs
mov
or
loop
pop
pop
inc
out
sbb
mov
adc
fstpl
out
push
loope
stos
shlb
pusha
xor
popa
push
push
push
cld
cwtl
aas
sbb
and
in
xchg
xchg
lock
lret
stos
mov
popa
sub
ret
decl
enter
mov
int
aad
insl
aam
sbb
test
lret
scas
sti
mov
cli
int
inc
gs
scas
aad
outsb
xor
cmp
mov
daa
dec
fcmovu
mov
and
or
inc
lret
lods
out
repz
mov
repnz
adc
xlat
inc
cmp
pop
fdivs
insb
pusha
dec
xor
fs
sbb
ja
lret
repnz
aam
lods
std
sbb
ljmp
addb
adc
repz
incb
adc
call
lods
imul
pop
in
adc
jae
mov
leave
loopne
fistl
rcrl
popf
mov
jns
dec
lcall
and
push
xchg
pop
fadd
push
mov
in
cli
scas
jp
decl
pop
sub
push
scas
adc
jnp
fwait
add
mov
xchg
lods
pop
rclb
sbb
cwtl
repz
ret
push
aaa
push
lds
inc
mov
xchg
fcmovbe
add
cld
jmp
int
inc
les
push
cwtl
fstps
inc
movsl
adc
repz
pop
xor
mov
into
sub
ds
xchg
sbb
repz
sahf
lods
adc
push
hlt
cmp
fldl2e
sub
hlt
push
into
mov
add
ja
jge
insl
fcmovb
js
and
mov
cmp
jge
jmp
mov
enter
xchg
aad
ja
pop
je
in
mov
mov
jne
nop
sub
cmp
pop
xor
cld
testl
in
push
aam
popl
dec
jle
hlt
inc
iret
arpl
stos
ret
or
fldt
push
cmp
mul
das
test
mov
loopne
pop
out
in
inc
das
arpl
pop
mov
fnsave
dec
loopne
xchg
out
loopne
sbb
ja
int3
push
test
xor
je
fsts
sbb
mov
jno
js
rol
push
cmp
mov
test
inc
add
sub
stc
lret
cmp
mov
xor
or
inc
xchg
xor
repnz
push
mov
std
loopne
adc
test
mov
xor
sub
jns
iret
cli
jmp
sbb
aam
add
loope
int3
movsb
jns
lds
ret
mov
stos
nop
push
xchg
mov
jne
push
and
xchg
test
cmpsb
xchg
rorb
inc
xchg
pop
pop
jnp
scas
mov
scas
ret
addr16
inc
enter
fdivl
cmp
enter
stos
lock
hlt
mov
push
lds
test
jle
pop
sbb
pop
dec
sbb
imul
test
dec
and
xor
test
div
lock
fwait
sub
jg
dec
test
cmpsb
adc
dec
repnz
push
repnz
clc
ret
fcomip
negl
and
rol
inc
dec
mov
rolb
xor
sbb
pushf
aas
sbb
push
mov
out
add
pop
mov
inc
or
imul
add
pusha
sub
inc
push
adc
in
xchg
scas
popf
xor
out
and
inc
pop
mov
fnsave
test
ss
adc
jb
ss
pop
jg
js
xor
mov
std
int3
add
cwtl
mov
mov
shl
in
sbb
push
pop
push
mov
push
dec
into
sbb
repz
adc
loope
sarb
mov
mov
jp
and
outsb
adc
jb
mov
xchg
repnz
dec
ljmp
inc
push
dec
sahf
pushf
mov
xchg
cld
dec
ret
cs
mov
sub
and
sbb
or
or
or
adc
test
add
mov
cmp
shrb
pop
sub
add
sbb
jne
movsl
rol
xorb
inc
daa
inc
adc
aaa
mov
mov
push
and
inc
xor
xlat
push
adc
inc
cltd
mov
and
in
inc
push
or
pop
mov
dec
cltd
das
roll
popf
stc
and
movsl
xlat
or
mov
mov
bnd
lcall
adc
dec
adc
lcall
rcll
cmp
mov
dec
and
loope
and
dec
cmp
add
scas
subb
lock
sbb
pop
add
gs
rcrb
or
dec
sub
push
push
xchg
jmp
dec
push
cltd
out
icebp
pop
sbb
fisubl
out
aaa
and
int3
xchg
ret
add
sbb
aam
or
xchg
cli
int
pop
push
call
lcall
cs
in
inc
dec
push
xor
dec
pusha
xchg
mov
addb
out
pop
cmc
stos
mov
leave
and
sbb
add
cmp
inc
inc
xchg
or
mov
or
pop
iret
lea
lahf
out
and
adc
push
mov
out
sti
xlat
in
add
addr16
enter
inc
cld
mov
adc
mov
xchg
and
mov
jno
sub
in
push
icebp
xchg
int3
fsubrl
add
divl
jl
cmp
imul
mov
xchg
mov
imul
std
test
push
call
mov
daa
mov
sti
cs
sub
adc
enter
adc
js
sbb
sbb
jne
negl
and
jbe
or
mov
icebp
movsb
cmp
out
je
mov
inc
pushf
icebp
cmp
mov
test
or
xor
pop
orb
sahf
in
lods
mov
sub
sub
stos
mov
test
dec
stos
jle
notb
jl
inc
xchg
mov
adc
scas
mov
in
adc
cmc
sarl
mov
es
adc
mov
dec
gs
xchg
loope
psrlw
jp
xchg
jecxz
scas
scas
std
insb
call
lcall
adc
lahf
jmp
fidivrl
push
jbe
imul
push
lods
je
adc
cmpsb
jg
add
dec
daa
mov
mov
pop
mov
or
jg
push
xchg
cld
add
repz
cmp
inc
xchg
outsl
loope
mov
push
bound
js
loopne
push
pop
mov
nop
mov
ffree
in
sub
movsl
sbb
call
push
xorl
pushf
rcrb
xchg
xchg
jo
ja
adc
pop
sub
cs
int
daa
cmp
or
stc
adc
adc
pop
sahf
or
push
lock
mov
stos
sub
cmp
dec
out
xchg
ljmp
imull
mov
sbb
fdivrs
add
imull
inc
adc
push
and
fdivrs
mov
js
mov
mov
cmp
or
xor
cwtl
lcall
sub
sti
mov
jge
sarl
inc
fdivrs
cmc
and
test
fdivr
out
add
sahf
in
lods
pop
test
jnp
sbb
cmp
data16
shrl
cmp
pop
inc
jmp
aaa
sub
cs
jne
jbe
data16
and
test
cmp
insl
iret
push
sub
in
push
test
xchg
std
xor
lahf
aaa
jmp
ret
andl
ret
mov
outsl
sbb
push
or
out
mov
dec
cs
adc
lock
sub
mov
sbb
dec
jbe
mov
push
lods
xor
mov
cmp
shrb
es
adc
shl
repnz
inc
push
jb
outsb
jae
ret
loopne
jns
pop
push
dec
insl
mov
xchg
test
dec
mov
rcll
add
fcmovnb
icebp
enter
push
cmp
cmp
repz
sti
inc
cmp
or
pop
repnz
int3
addr16
enter
adc
shrl
jecxz
iret
fnstsw
push
jmp
pop
divl
adc
pop
xor
push
es
scas
and
sub
insl
lea
lcall
cmp
add
inc
lret
mov
inc
movsb
xchg
jle
das
xchg
xor
jecxz
ljmp
and
lea
rcrb
push
movsb
nop
fucomp
xor
or
jnp
xchg
mov
xchg
xor
daa
outsl
and
les
jle
sbb
add
inc
stc
xorb
or
sub
test
jecxz
cld
stos
gs
xchg
pop
insl
pop
stc
daa
dec
aam
jne
icebp
cli
popa
cwtl
lea
int3
push
call
xchg
testl
mov
cmp
jnp
cwtl
loopne
add
inc
jg
and
or
scas
test
or
dec
nop
xchg
fwait
pop
jecxz
or
push
icebp
adc
cmp
sub
sar
call
mov
arpl
fnstenv
add
push
insb
push
push
ficomps
pop
setge
cli
add
lcall
xchg
flds
fst
rorb
sub
in
sbb
cld
add
sbb
inc
mov
and
mov
out
call
push
inc
jle
fcmovu
out
fbld
test
scas
push
mov
data16
jge
and
rcll
jns
decl
cmp
dec
mov
in
jl
lods
jbe
sub
mov
or
pop
cmp
jl
xor
gs
pop
fxtract
push
inc
cli
xlat
mov
add
jmp
xor
dec
pop
fcomip
sbb
test
dec
cmp
push
adc
push
lret
mov
hlt
mov
popf
mov
mov
xchg
cmpsl
push
cli
adc
pop
xor
xlat
mov
pop
adc
push
and
shrl
xchg
add
inc
popf
cmp
cmp
jecxz
lock
push
and
lret
cmpsb
push
pop
js
js
add
mov
mov
js
sahf
or
or
mov
enter
xor
gs
dec
mov
jne
lock
subb
subl
dec
je
outsb
push
mov
ficoml
js
mov
imul
dec
xor
out
and
jns
or
push
les
jecxz
call
push
mov
pop
or
cmc
out
mov
scas
and
aad
lahf
add
pop
jmp
mov
call
iret
adc
pop
gs
or
mov
xor
mov
dec
jbe
subb
popf
out
stos
jle
jno
cmpsl
jae
insb
out
lea
loopne
mov
enter
shr
xlat
loop
insb
xor
ret
xchg
leave
mov
dec
xor
pop
outsb
cmp
inc
inc
add
dec
shl
push
addr16
notb
push
lods
insl
lods
ss
and
outsl
mov
xchg
or
insb
xchg
pop
mov
adc
pop
adc
stc
xchg
and
add
sbb
test
xchg
scas
inc
enter
jp
addr16
jo
dec
nop
dec
repz
loopne
in
dec
cmp
jl
scas
scas
aaa
in
lret
fisubrl
sub
loopne
cmc
icebp
bound
into
outsl
and
push
jns
mov
push
loop
aad
mov
or
mov
pop
lahf
xchg
shll
mov
vpshlw
fs
pushf
inc
in
add
dec
add
pop
lret
or
shlb
push
dec
jae
xchg
gs
dec
push
inc
lea
and
jmp
adc
xchg
mov
aad
inc
ss
inc
popf
mov
cmpsl
jb
pop
ret
call
push
mov
mov
sarb
imul
inc
ds
into
mov
int3
inc
cli
mov
pop
xchg
std
ljmp
leave
mov
inc
or
push
xchg
add
mov
stos
sbb
pushl
push
lds
cmp
popf
lea
cmp
inc
arpl
std
sbb
mov
mov
out
outsl
jb
adc
mov
and
lret
sbb
loop
inc
lods
lret
add
xor
push
sbb
mov
out
mov
mov
sub
ret
pop
sbb
add
pop
cltd
testb
push
ljmp
data16
cmp
nop
xor
mov
jne
dec
mov
sub
ret
mov
push
mov
mov
call
cmp
push
sbb
xor
imul
adc
xchg
xchg
jo
testb
lods
fsub
dec
out
fisubs
mov
mov
xchg
jae
dec
ss
jmp
in
push
das
pop
jg
mov
mov
nop
stos
sbb
ret
push
aaa
icebp
movsl
jns
dec
lods
test
xor
jns
mov
js
xchg
ret
mov
iret
in
outsl
stos
pop
loopne
mov
sbb
push
sbb
es
das
loop
xor
jno
test
jecxz
lea
sub
cmp
lcall
fdiv
dec
mov
push
dec
lods
jmp
add
push
xchg
fcmovne
xchg
stc
fistps
pop
jo
adc
fsubs
jl
pop
sti
gs
mov
pop
cmp
ja
gs
rorb
insb
mov
shrb
insb
int3
add
outsb
jae
cmovae
xchg
cmc
cld
fists
js
dec
push
dec
xchg
jl
jns
cmc
leave
inc
cli
adc
inc
xchg
ffreep
inc
inc
mov
sub
sarb
mov
ret
shrl
cld
fisubs
and
inc
or
or
pop
mov
leave
mov
call
cmp
mov
dec
sahf
push
flds
mov
cltd
sbb
les
xchg
add
inc
divl
sub
xchg
int
mov
rcrl
jbe
into
aaa
cpuid
cmpsl
daa
xor
shlb
sbb
fdivrp
inc
xchg
dec
dec
pushf
push
pop
or
std
les
bound
cs
lds
or
jb
or
xor
mov
xchg
nop
loope
mov
xchg
nop
xor
daa
ds
sbbb
and
jle
shlb
lods
xchg
outsl
mov
sbb
pop
jge
sbb
push
push
and
lea
shll
aaa
pop
jbe
and
fdivl
dec
push
xchg
jl
out
jno
push
repz
das
push
inc
mov
cmp
mov
cmp
mov
xlat
loop
test
xor
pop
fsubrp
pop
cmpsl
subw
mov
icebp
add
push
cmp
push
ret
aad
fcomip
sahf
ljmp
pop
out
sub
lret
xchg
xchg
dec
mov
dec
ja
jns
dec
gs
jl
jmp
cltd
xchg
rclb
clc
loope
pop
fwait
or
or
ret
sub
insb
jb
add
lock
int
cwtl
mov
ja
fsub
add
or
lahf
pop
sahf
insl
fs
fmul
sbb
jp
mov
cmpl
mov
loope
ja
subl
test
sti
sahf
sub
dec
sub
add
fwait
adc
mov
lret
xchg
hlt
hlt
data16
bound
sbb
push
or
mov
in
mov
cld
insb
inc
xlat
scas
mov
mov
ss
push
les
xor
mov
ret
les
xchg
sub
sarl
lods
push
divl
test
sahf
loope
sbb
lret
je
out
imul
jns
daa
sbb
and
xchg
les
mov
xchg
mov
vpaddsw
fsubr
and
pusha
aad
xchg
out
adc
lret
sbb
daa
xor
das
mov
fildl
dec
test
loop
cmp
mov
and
cwtl
sub
push
inc
popf
mov
out
clc
mov
hlt
lret
cmpl
je
test
dec
cmp
out
dec
enter
inc
ss
sub
test
roll
sar
repz
xchg
lret
xor
test
add
mov
cmpsl
test
stos
adc
and
roll
mov
push
push
dec
aam
xorb
and
ret
jecxz
orb
xchg
in
enter
in
sub
cli
mov
mov
dec
je
ljmp
ss
inc
and
pop
ret
mov
sub
or
and
testb
jp
push
mov
or
mov
shrb
adcl
dec
shrb
popa
cld
in
daa
cmp
inc
mov
mov
fistps
push
xlat
jne
arpl
and
les
out
inc
or
cmp
mov
mov
inc
rcll
lods
sti
gs
stos
fidivrl
repnz
or
mov
xor
daa
push
stc
cwtl
or
icebp
rorb
js
or
jne
bound
sub
ds
mov
js
add
adc
movsl
jne
jecxz
ret
sub
ficompl
cmpb
push
fbstp
cmpl
std
test
in
negl
pop
pop
lcall
push
cmp
pusha
stc
in
pop
push
mov
mov
loop
sbb
in
out
inc
cmp
insl
xor
movsb
xchg
sbb
test
out
idivl
testb
xor
or
xor
movsb
loope
mov
shrb
mov
xor
ljmp
add
sub
xchg
stos
test
ja
xchg
outsl
and
mov
es
pop
xor
jno
xchg
sub
loopne
xchg
push
mov
ljmp
jl
jbe
stc
push
mov
in
xchg
mov
push
lcall
cmp
inc
aas
loope
out
mov
outsl
test
imul
xor
pop
xchg
es
lahf
setne
aam
negl
push
push
fwait
sub
cli
repz
lock
jne
and
hlt
out
xchg
pop
and
loopne
fdivl
mov
sub
rorl
push
jb
dec
mov
fcomps
subb
pop
jl
fnstcw
nop
lret
imul
sbb
xchg
fwait
aas
into
jnp
push
sahf
jecxz
mov
iret
mov
aas
xchg
es
repz
jmp
sti
gs
sar
jge
inc
enter
pop
xchg
add
mov
shrl
cmp
xor
mov
popf
dec
cmp
mov
push
aaa
divb
sbb
and
xor
arpl
hlt
mov
loopne
or
aam
xchg
add
dec
imul
imul
leave
mov
test
in
xor
aas
decb
dec
cmp
mov
jmp
adc
cmp
lea
push
rclb
imul
into
into
adc
xrelease
inc
dec
mov
xor
lret
stos
xor
dec
outsb
push
dec
ds
fs
sbb
and
push
mov
add
sbb
fmull
jbe
mov
scas
cld
adc
leave
push
adc
call
mov
call
pop
mov
out
pop
mov
lods
xchg
ret
out
cmp
mov
pop
fldl
es
xor
out
xor
xchg
sti
or
pop
jns
mov
mov
jge
sbb
enter
and
cmp
and
xor
js
cmp
cmp
jae
cmpb
rcr
sub
mov
xchg
xchg
mov
sbb
pop
pop
lea
jl
and
xor
cwtl
mov
adc
nop
inc
call
sbb
in
jle
jbe
jl
mov
xchg
sbb
in
test
mov
adc
popa
sbb
insb
int
sub
cmp
jne
aas
subb
int3
or
mov
push
lret
jp
or
jmp
mov
cmp
jecxz
inc
std
mov
xchg
xor
das
adc
sub
fmuls
mov
and
jecxz
in
leave
push
xchg
push
or
aad
aad
pop
outsl
pop
std
test
and
xchg
inc
fdivrs
cmpsl
cmp
push
hlt
fildll
cmp
pop
in
xchg
mov
dec
es
xor
jo
pop
jo
push
lcall
inc
es
inc
inc
sti
das
gs
addb
mov
movsl
ja
insb
mov
cld
and
mov
pop
shll
scas
mov
rcrl
mov
and
stc
xchg
out
fldt
dec
outsb
in
call
sub
mov
pop
sti
ret
push
or
inc
or
sbb
jge
or
dec
and
addl
cli
mov
sub
dec
cmp
add
mov
addb
add
sub
push
sahf
stc
cs
or
dec
xor
in
data16
mov
adc
sbb
popa
insl
cmpsl
xchg
and
ds
sbb
mov
cld
push
lock
pop
imul
cmp
fisubrs
popf
rcll
fdivrs
and
dec
movsb
ds
icebp
stos
xchg
xorl
add
xor
xor
push
das
inc
movsl
clc
in
pop
cmp
int3
mov
in
out
jmp
push
in
cmp
out
negb
xchg
fstpl
jp
push
jns
imul
aaa
xor
loopne
mov
push
roll
outsl
int
add
xorb
outsb
fstl
addr16
jno
in
ret
rol
subl
add
nop
cmpsl
sub
mov
xchg
addr16
dec
cmp
pop
mov
sbb
cmp
cs
cmc
test
add
lahf
ret
in
lds
sahf
push
mov
enter
mov
push
scas
mov
ret
sub
pop
and
leave
push
int3
mov
shll
hlt
ljmp
add
push
aad
xchg
aaa
pmaxsw
pop
ret
add
and
outsb
add
data16
cmp
push
arpl
pop
std
mov
cmp
push
notl
jge
jns
das
or
cmp
lcall
adc
jne
mov
int3
shrl
mov
sbb
rcrb
inc
push
daa
repz
rclb
and
cwtl
lret
pop
xchg
cmp
mov
jge
inc
cmp
popf
adcl
mov
jbe
add
fs
pop
into
es
out
push
mov
xor
cld
mov
pop
ja
sub
sahf
push
std
addr16
jge
enter
outsb
xchg
mov
shrl
mov
add
pop
movsb
sub
pop
into
ljmp
into
das
sub
lret
sub
adc
cmp
jno
insl
insb
sbb
or
test
dec
mov
cwtl
xor
push
movsl
mov
jg
test
pop
or
fmuls
insl
int3
jl
imul
cs
outsl
push
mov
in
imul
insb
icebp
lods
adc
and
and
test
push
dec
jnp
jne
mov
mov
rolb
cmp
adc
mov
xchg
jns
push
out
pop
insb
sub
and
xchg
ljmp
dec
mov
rcrb
imul
ret
bound
sbb
aaa
mov
repz
jmp
loopne
mov
iret
jnp
popa
mov
push
and
subb
adc
cmp
popa
movsl
sbb
in
mov
xorl
jle
popa
les
sbb
hlt
lret
mov
add
jb
sbb
jns
adc
push
imul
imul
cmp
adc
in
lea
fidivs
adc
outsb
mov
insb
cli
aam
mov
push
mov
cmpsb
xlat
mov
adc
data16
mov
xchg
add
xchg
or
stos
jl
dec
insb
sbb
dec
adc
sub
adc
in
enter
or
cli
test
ja
pop
sbb
sbb
add
jmp
inc
mov
fstps
mov
cmpsb
sub
faddl
ds
fwait
inc
fstps
adc
fwait
aaa
js
adc
sbb
add
mov
std
mov
sbb
aas
or
cli
test
fmulp
adc
or
and
pop
mov
loopne
fst
cmpsl
mov
popf
inc
das
cmpsl
sahf
mov
mov
xor
mov
xor
dec
inc
inc
adc
cmp
rorl
mov
inc
inc
cmp
das
enter
fimuls
imul
adc
adc
int3
add
pop
test
xor
jmp
fcompl
in
sbb
cmc
xor
outsl
int3
lock
or
les
loopne
fisttpll
rcrl
movb
dec
xorl
mov
leave
cmc
sub
adc
fsubrl
dec
lods
sahf
test
out
into
cmp
add
and
scas
daa
mov
cltd
mov
cmp
cmpsb
inc
mov
pop
sub
jle
je
mov
cmp
push
jns
sub
sub
jmp
imul
test
push
xchg
xor
aas
cmp
call
xor
xor
push
push
sbb
pop
pop
lods
sbb
loope
outsb
xchg
and
pop
pop
cmp
dec
iret
cmpsl
rolb
adc
ret
test
lods
aam
cs
aam
inc
in
ret
jns
adc
pop
adcl
in
inc
insl
dec
cmp
sti
mov
xor
aaa
sub
mov
jmp
inc
adc
sub
ret
or
hlt
push
testb
xchg
cltd
fwait
jge
and
or
inc
xchg
sahf
out
push
or
fwait
std
push
aam
sbb
sar
test
js
inc
pop
dec
mov
lods
rcrb
lcall
push
sbbb
sbbl
fwait
inc
adc
lret
incl
cli
in
xchg
jg
jbe
sub
mov
sub
sub
lahf
icebp
mov
adc
aam
adc
rol
jnp
data16
push
inc
jp
ss
sbb
xchg
clc
out
fstpt
hlt
aaa
mov
rorl
aaa
or
cmpsb
test
mov
pusha
imul
ds
decb
jg
lret
inc
push
add
popa
sub
push
jp
mov
jae
stos
cmp
jg
add
icebp
insl
sarb
lea
xchg
mov
movsl
jno
ss
cs
cmpsb
rcll
and
or
sahf
cmp
jmp
xchg
aam
pop
icebp
push
ja
pop
adc
cmp
sbb
mov
pop
pop
mov
scas
xlat
enter
dec
movsb
sbb
sbb
pushl
adc
sub
xor
add
ret
sub
cmpl
jnp
and
cmpsl
adc
xchg
sub
xor
cmp
lret
ret
cs
pop
outsb
dec
aas
mov
or
and
lods
jno
fisubrl
xchg
mov
int3
loop
and
pop
mov
jb
imul
out
push
sub
dec
jl
jae
mov
mov
and
xor
cmpsl
jb
add
push
in
not
jmp
dec
inc
dec
dec
and
push
sub
cld
flds
mov
mov
sub
add
push
lret
js
jp
pop
mov
fucom
sbb
scas
xor
pop
xchg
mov
xor
pop
mov
pop
fs
or
mov
cmp
adc
cld
sahf
pop
mov
hlt
and
and
dec
and
mov
outsb
mov
sarl
js
xor
cld
adc
mov
movsl
and
addr16
or
mov
test
xchg
mov
mov
mov
movsb
xchg
paddb
jmp
lahf
adc
pop
add
inc
sub
mov
in
mov
dec
xor
int3
xchg
push
cmp
pop
pop
ljmp
dec
sbb
lds
sbb
mov
scas
sub
fcoms
jmp
repz
mov
or
jne
inc
cmp
sub
shrb
mov
ja
gs
and
sub
xor
aaa
aas
cmp
push
out
mov
outsl
fwait
cld
int3
stos
fwait
pop
pop
mov
jg
sub
push
jnp
aad
in
dec
or
cmc
cli
mov
mov
fidivrs
mov
mov
and
lret
cmc
sub
rcll
dec
repz
pop
movsl
rcll
stc
das
jge
mov
and
push
outsl
mov
aaa
imul
jmp
mov
imul
outsl
cmp
mov
xor
mov
or
scas
push
pop
cli
push
adc
jb
xchg
push
add
cmp
cmc
push
push
push
and
and
gs
movsb
mov
inc
call
sub
push
pop
mov
fbld
loopne
out
jp
xchg
dec
sbb
in
popf
test
push
mov
ret
addl
and
jae
shl
xlat
inc
jns
into
stc
mov
fistpl
repz
mov
dec
cld
mov
xchg
fwait
inc
xchg
fdivrs
fisttpll
add
bound
push
fwait
test
and
hlt
inc
push
push
push
jbe
movsb
push
xchg
adc
and
cmpb
imul
shll
push
jecxz
cs
test
cmp
push
dec
scas
mov
stos
xor
ret
push
mov
cltd
inc
sbb
iret
je
adc
mov
or
rorb
andps
into
daa
jl
xchg
incl
xchg
outsb
dec
mov
aaa
lcall
mov
lahf
dec
int
cs
lahf
fldenv
daa
movsl
out
roll
push
addr16
test
or
inc
test
add
cmp
and
in
cwtl
arpl
test
cmpb
mov
sbb
pushf
xchg
out
cmp
arpl
mov
push
imull
inc
pop
int3
sahf
jecxz
adc
mov
push
xor
push
repz
popf
push
inc
pop
pop
subl
and
or
ret
sahf
add
xchg
test
sbb
icebp
arpl
mov
sub
les
cmp
fs
mov
mov
rcrl
or
mov
imul
jp
repz
std
ljmp
cmpsl
mov
mov
adc
js
ret
mov
jg
fiadds
jl
loope
aad
push
sti
mov
aas
out
fdivrs
in
arpl
mov
leave
or
mov
dec
cmp
scas
sbb
cmp
rclb
adc
push
ja
sub
int
cwtl
mov
pop
cli
add
inc
cmp
lods
mov
pushf
sub
sahf
adc
fwait
cmpsb
jae
scas
mov
leave
lahf
xchg
jmp
pop
push
xchg
jl
push
push
out
mov
stos
clc
cmp
pushf
mov
call
shrb
cmp
jle
jmp
inc
in
cld
in
cli
mov
cmp
aam
push
sub
cmp
testl
add
mov
dec
or
xchg
or
lcall
cmpsb
leave
sub
int
push
aam
inc
aam
movsb
jne
sbb
outsb
test
dec
or
fwait
outsl
push
sbb
pushf
pop
dec
jne
mov
ret
scas
sub
cmp
stos
mov
mov
push
and
xor
js
data16
pop
push
xor
and
filds
cmp
js
mov
xlat
mov
jmp
test
int3
add
das
inc
mov
lds
icebp
fs
cmp
int
stos
mov
aaa
movl
lret
pop
or
pop
fwait
lock
xor
push
add
pop
pop
jle
fisttpll
sub
andb
test
inc
roll
and
mov
out
or
sub
cmp
data16
sbb
test
or
mov
loop
inc
js
push
sbb
pop
loop
int3
sub
test
jecxz
xchg
cmp
leave
dec
icebp
cltd
pop
jp
mov
jbe
mov
movsl
gs
mov
dec
movsb
stos
add
add
inc
push
jbe
sbb
sbb
subl
or
sub
and
mov
repnz
jne
mov
jge
xchg
stos
daa
fxch
jmp
mov
inc
push
insb
jne
push
xorb
pop
popf
lret
cltd
push
loope
xor
jl
cmp
mov
pop
jecxz
add
mov
dec
imul
jge
rorl
out
jecxz
and
pop
test
pop
pusha
test
pop
push
lock
jl
imul
jl
dec
mov
mov
cmpsb
fidivl
and
and
push
dec
pop
addr16
aad
pop
movsl
fildl
xor
filds
int
cld
xlat
shll
sbb
inc
jecxz
daa
ret
imul
add
clc
xchg
andl
lret
push
sbb
daa
inc
xor
mov
adc
outsb
push
cmpsb
es
movsb
adc
test
jbe
cmpsl
out
jl
test
or
repz
push
cli
sbb
lods
xchg
test
xchg
add
and
inc
cmc
ss
mov
cwtl
dec
shlb
gs
sub
jge
test
pop
push
fistpll
mov
pusha
sarb
xor
je
loopne
cld
cwtl
or
icebp
lock
jne
fcompl
sbb
out
push
mov
leave
push
imul
imulb
cmc
stos
mov
ret
jmp
pop
cs
xchg
in
ficoms
repz
imul
into
imul
mov
outsb
adc
mov
rorb
sub
scas
push
jg
adc
out
adc
cld
xor
loopne
test
pop
or
mov
sahf
call
insb
xchg
sbb
xor
inc
pop
addr16
or
adc
rolb
int3
sub
mov
rcr
dec
je
sub
dec
lods
cmp
int
pop
mov
dec
adc
adc
repz
pop
out
in
popa
test
cmp
gs
nop
in
ds
fidivs
das
movsl
mov
outsl
repz
bound
dec
sti
adc
test
neg
cmp
or
cmp
sbb
or
cmp
xor
push
testl
das
sub
adc
daa
jge
xorl
dec
fldcw
mov
shlb
cmp
push
mov
jle
dec
aad
mov
or
daa
mov
mov
leave
lret
cmpsl
stos
arpl
pop
aaa
jne,pt
mov
dec
jae
xchg
sub
mov
and
push
pop
stos
out
sti
jns
fwait
jne
push
sbb
outsl
ret
xchg
jnp
dec
mov
lock
add
cmc
add
daa
mov
cwtl
push
fisttpl
scas
push
sub
cmpsb
or
push
movsl
add
in
mov
xchg
jle
mov
cltd
mov
lea
je
cmp
mov
jp
in
loope
les
sbb
in
aas
int3
rol
push
movsl
cmp
xchg
repnz
add
std
movsb
mov
pop
lret
mov
jmp
push
imul
outsl
jo
mov
xor
xchg
pop
insb
lods
stc
jae
movsl
cmp
pop
mov
iret
adc
or
add
push
loope
loopne
jb
adc
or
test
xor
xor
dec
sbb
push
jle
pop
adc
jae
psubq
mulb
inc
mov
jbe
lret
testl
or
cmpsl
sbb
dec
sbb
sbb
or
aaa
fadd
mov
data16
int
sbb
lds
insb
mov
icebp
xor
lods
scas
divl
mov
cmc
daa
cld
fisubl
repz
push
pop
sub
scas
sbb
cli
and
out
push
ret
arpl
mov
testb
sahf
pop
sti
sbb
sub
scas
ret
xchg
mov
les
sub
jae
jp
nop
jp
fwait
test
sti
and
mov
push
aam
jp
xorb
push
movsl
jae
inc
xor
in
or
jno
mov
fimull
and
sbb
push
int3
dec
popf
lret
mov
push
push
cmp
lods
jg
mov
div
dec
pop
push
fistps
mov
inc
inc
add
xchg
pop
mov
pop
scas
adc
outsl
cmp
pop
mov
sahf
pop
in
stos
cmc
ljmp
jbe
and
mov
sub
mov
dec
imul
push
faddp
inc
mov
sbb
flds
repz
enter
mov
xchg
pushf
fistl
in
jb
iret
xor
adc
je
mov
add
pop
xor
cmc
xlat
in
xchg
nop
add
movsb
cltd
push
xorl
or
mov
sub
cld
and
inc
push
cmp
sbb
in
shll
ror
loope
mov
in
mov
adc
inc
mov
mov
xor
cmp
mov
outsb
int
insb
xor
aaa
jge
cmpsl
loopne
cltd
sub
mov
or
lret
test
add
jge
adc
jns
dec
mov
mov
mov
xchg
out
and
and
shlb
sbb
cltd
sbb
insl
mov
xchg
mov
inc
xchg
aam
pushf
push
mov
cli
xor
cmp
mov
ret
in
cltd
mov
xchg
mov
mov
add
push
mov
call
adc
lods
xchg
jnp
std
sbb
cld
inc
lods
cmp
cld
jmp
cmp
out
cmp
or
pop
shlb
and
push
arpl
pop
cmpl
orl
les
arpl
jb
sahf
push
shrb
sbb
arpl
loop
adc
jmp
out
mov
cmp
mov
bound
pop
push
cli
sbb
xchg
add
test
cmp
jle
pop
xor
mov
sub
add
xor
sub
leave
fisubs
aam
adc
pop
pop
mov
pop
cmp
push
sub
and
push
int3
pusha
popf
mov
mov
cli
std
cli
pop
in
dec
stos
xchg
stos
push
lret
xchg
fisubrs
mov
iret
jg
and
push
insb
dec
test
je
mov
or
iret
loop
mov
inc
mov
push
leave
cmp
inc
fildl
or
xor
dec
pop
jo
inc
lret
jg
or
cli
mov
dec
ljmp
mov
inc
or
lcall
sbb
sbb
sbb
sti
dec
and
cli
iret
dec
pop
in
or
push
lods
iret
sbb
mulb
cmp
stos
pop
cmp
addr16
mov
insb
andl
mov
xor
call
sbb
gs
adc
test
cmp
or
dec
sti
mov
xchg
add
movl
inc
push
mov
loope
adc
cli
adc
insl
mov
dec
imul
loope
or
jbe
and
dec
and
ss
insb
pop
mov
test
dec
shrl
insl
stos
out
xorl
std
out
sub
adc
in
jno
jge
sub
lret
sbb
cmpsb
movsl
clc
jo
test
and
inc
nop
mov
outsl
jmp
cs
add
xlat
xchg
add
push
and
xlat
push
scas
movsl
adc
jb
test
jl
ljmp
xchg
sub
lds
push
pop
test
xor
ret
mov
insl
in
add
xor
jl
add
in
sub
rolb
lods
push
inc
dec
push
push
cmp
dec
jns
lretw
into
xor
push
lock
sub
fiaddl
adc
imul
cmpb
inc
ljmp
mov
mov
cmp
call
mov
repnz
arpl
andb
push
xchg
ret
scas
js
outsl
adc
jg
mov
jne
cmp
adc
jae
pop
fcmovu
dec
push
stc
sub
minps
syscall
cli
dec
enter
sbb
cmp
xor
mov
popf
jnp
into
cmpsl
pusha
xchg
aas
outsl
scas
jnp
push
sub
sti
or
mov
mov
inc
or
iret
mov
outsb
mov
gs
insl
cld
pusha
sahf
push
gs
pop
push
mov
clc
xchg
testb
cltd
aad
cltd
clc
cli
icebp
inc
shlb
inc
test
cmp
push
pop
insl
mull
mov
sub
push
pusha
cmc
xor
loope
push
shl
scas
xchg
pop
jl
push
out
xchg
pop
dec
clc
ficoml
sub
jge
test
xor
sbb
imul
pop
sub
int3
je
mov
xchg
cmp
das
pop
add
or
pop
push
dec
enter
xchg
arpl
or
insl
xor
pop
xchg
jge
imul
repnz
push
bound
mov
test
xchg
lods
cs
xor
mov
cmp
or
and
pop
test
sub
sahf
sub
aaa
dec
inc
mov
cltd
jmp
xlat
loope
stos
sbb
adc
outsb
std
stos
xor
ret
loope
and
das
js
xchg
push
sahf
imul
jno
mov
pop
lods
xchg
or
pop
push
addr16
int3
sbb
rcrl
adc
push
push
imul
shlb
rclb
bound
clc
in
icebp
pop
jne
js
mov
jecxz
dec
out
iret
jmp
pop
pop
mov
out
jae
sub
stc
and
mov
jg
jg
xor
ss
sub
pop
ljmp
push
cmp
pop
fs
sti
dec
jne
push
mov
test
rcll
out
aad
xchg
cmc
mull
xchg
mov
ljmp
fsub
cltd
lock
mov
xchg
adc
lret
enter
cmp
lcall
aaa
lret
icebp
push
outsl
and
sub
adc
xor
sbb
push
jecxz
jl
mov
push
negl
sbb
adc
push
xor
xor
in
dec
jo
push
mov
pop
repz
pop
aaa
pop
into
cmp
mov
mov
insb
push
mov
or
shlb
cwtl
inc
push
xchg
lret
call
cmp
adc
jns
push
mov
jge
scas
xchg
mov
popf
pop
or
dec
inc
sbb
pop
test
sub
and
shrb
mov
cmp
ljmp
inc
aas
fisubrs
fwait
dec
lods
pop
cmp
sub
jo
test
pextrw
stos
fcompl
aas
insb
mulw
rcrb
mov
mov
xchg
lods
mov
cmpsl
js
fimull
cmpsl
test
xchg
cmc
bnd
dec
sti
cmc
dec
imul
fistl
sub
test
out
jle
add
pop
in
xchg
loop
pop
push
and
xchg
data16
cmp
mov
ror
ljmp
xchg
lret
xlat
test
mov
in
dec
rorl
pop
lcall
lret
movsl
cwtl
dec
sub
pop
sub
sub
pop
dec
ss
insl
rorb
lock
mov
xor
shr
sbb
mov
test
out
xchg
push
add
inc
in
sbb
sbb
xchg
dec
mov
adc
divb
push
mov
push
sbb
xor
xor
das
movsl
or
in
bound
loope
sti
cmp
fimull
adc
es
scas
lret
lds
movsl
scas
decl
mov
pop
cmpsl
adc
jle
xor
add
pop
dec
in
fdivl
pop
xchg
xchg
in
jns
shl
pop
out
xchg
mov
jmp
fldt
xchg
stc
inc
scas
xor
mov
xor
xchg
ficomps
jmp
add
adc
jo
ret
insl
and
fcomps
test
mov
sub
mov
push
mov
testl
popf
insl
shll
cwtl
jmp
aad
data16
test
out
mov
mov
xor
rcrl
pushf
in
push
pop
jmp
mov
cmc
xchg
bound
dec
jae
inc
test
out
int3
dec
cmpsl
xchg
stos
mov
jle
and
repnz
bound
mov
fimull
cwtl
cmp
outsb
jo
mov
inc
push
sahf
mov
pop
sub
push
call
outsl
aam
xor
push
lods
inc
fidivl
xor
push
jns
jb
mov
jb
mov
les
enter
mov
test
or
jns
cmp
xchg
popa
enter
test
gs
jmp
sbb
dec
adc
sbb
sbb
int
fidivs
loope
dec
cmp
lods
adc
or
out
int3
inc
clc
inc
sar
pop
repnz
imul
sbb
xchg
cmc
xor
or
ss
jo
scas
push
cmp
test
negl
cmp
inc
fisttpll
das
or
insb
or
insl
or
leave
dec
adc
je
sbb
sar
push
xchg
sti
adc
decl
sbb
and
add
lea
xor
sbbl
pop
repnz
sahf
rcll
fidivs
test
mov
fnstsw
aam
mov
and
or
cmpsb
loop
push
out
clc
pop
pusha
fildll
and
les
sbb
pushf
or
rcll
mov
std
movsb
pusha
mov
cwtl
jne
cmp
shrl
daa
and
addr16
sbb
lods
adc
pop
add
mov
cmp
sub
cmpsb
pop
loopne
mov
popf
pop
js
mov
push
in
rorl
push
mov
loope
jecxz
adc
test
jle
jae
incb
xor
and
lods
sarl
push
call
or
in
fwait
push
xchg
and
mov
cmp
jno
dec
jg
adc
adc
inc
mov
in
aam
sbb
sbb
add
fcomps
lods
cltd
int3
xorb
stos
xlat
outsb
push
push
push
adc
or
enter
dec
out
stos
hlt
xchg
les
pop
jmp
mov
cmp
push
rcll
fldt
pop
cld
jne
sbb
mov
cwtl
xchg
mov
sub
addr16
scas
cmpsl
inc
jo
xchg
mov
xor
lret
or
popa
cmp
hlt
add
outsb
sbbb
or
std
and
or
ja
adc
mov
addr16
in
daa
add
push
jl
push
testb
and
mov
fadds
jae
sbb
or
push
sub
mov
stos
mov
imul
mov
add
and
xor
into
or
xor
cmp
xlat
inc
push
cld
cld
pop
sub
jl
cmp
adc
out
daa
mov
fxch
add
ds
movsb
ja
mov
inc
xchg
adc
sbb
jle
sbb
ja
sub
lahf
sub
xchg
cli
jnp
sti
icebp
inc
jb
or
outsb
fidivl
mov
pusha
add
pusha
fstpt
dec
es
adc
sbb
push
fidivl
iret
inc
jl
xchg
push
inc
cmp
inc
jl
mov
lcall
or
pushf
cmp
pop
or
xor
push
jae
ljmp
mov
dec
movsl
push
orl
aam
mov
pop
fisubl
inc
pop
repnz
sub
cmp
or
mov
repnz
and
testb
or
arpl
popf
lock
xlat
push
in
xchg
int3
push
push
jecxz
fstl
inc
mov
mov
add
lret
jnp
add
imul
hlt
mov
es
jo
repz
inc
sbb
fildl
or
mov
sub
stc
push
mov
imul
aaa
roll
in
adc
js
xorb
pusha
sbbb
mov
lahf
sbbl
cwtl
lret
dec
das
ljmp
call
mov
std
cmpsb
arpl
in
test
xor
mov
lcall
sbb
and
dec
xchg
js
sub
setnp
add
xchg
mov
aaa
inc
rorb
lcall
mov
and
xor
loopne
pop
mov
lcall
stc
andl
sub
mov
incl
dec
pusha
adc
loope
cmpsl
mov
aaa
pop
addr16
sbb
not
mov
and
sbbl
push
aam
xor
inc
test
dec
ret
es
cltd
jo
push
subl
adc
loopne
bound
in
pop
jl
pop
nop
jae
mov
lret
cltd
scas
iret
mov
mov
mov
sub
pushf
jb
xchg
sbb
ljmp
jle
test
into
inc
icebp
jnp
pop
aas
push
out
es
insb
pusha
stc
mov
push
add
add
adcl
mull
adc
sti
push
sti
sbb
mov
xchg
movsl
lret
mov
dec
rorl
notb
add
sbb
out
stos
stc
iret
and
sbb
add
popa
iret
dec
xor
sbb
lods
es
jecxz
and
cld
les
sahf
cmp
sbb
shl
lods
add
in
sbb
sbb
subl
pop
ljmp
shrl
xor
sbbl
fwait
pop
stc
inc
pop
push
cmp
dec
loopne
cmp
push
xchg
mov
jae
mov
and
cmp
add
shrb
cmpsb
lcall
dec
addr16
dec
ds
xchg
cmc
pop
out
add
cmp
cwtl
pop
cmp
xor
pop
out
xchg
push
enter
test
or
in
mov
bound
ficoml
xchg
cmp
cmp
jno
popa
scas
insb
and
pop
adc
andb
push
into
inc
xor
jl
xchg
push
sbb
stc
cltd
pop
lret
sbb
sub
sbb
out
dec
call
inc
jle
out
cmp
iret
or
add
mov
xchg
loope
je
mov
push
mov
nop
test
cli
mov
add
pop
fldt
roll
mov
jle
std
in
shrl
loopne
xchg
popf
cmp
fstl
mov
mov
enter
xor
arpl
xor
jb
push
and
out
pop
or
inc
push
mov
jmp
dec
mov
xor
pop
loope
xor
xchg
stos
jae
pop
jecxz
dec
or
dec
push
les
icebp
sbb
shll
add
daa
push
fisttpl
leave
adc
jne
adc
cmp
hlt
addr16
lock
or
scas
mov
enter
jae
out
jg
incb
mov
adc
mov
inc
jle
add
fildl
stos
jp
and
fisttpll
repnz
add
pushf
call
cmp
stos
lahf
and
xor
aam
hlt
push
call
mov
add
aas
or
pop
xchg
sbb
icebp
inc
push
push
dec
jo
mov
mulb
insb
jp
orl
in
in
into
pop
jne
andl
outsl
and
jb
into
adc
jns
pop
push
push
adc
out
mov
arpl
adc
lods
jl
dec
jecxz
cmp
sub
jl
inc
add
in
cmc
scas
arpl
jge
in
iret
inc
ja
mov
fnstsw
cmp
dec
repz
lods
cmp
pushf
loopne
or
loop
mov
fsincos
scas
pushf
mov
pop
xor
or
int
rclb
mov
js
pop
add
ljmp
mov
adc
jns
clc
push
mov
jp
inc
mov
addr16
mov
cmp
js
jle
rorl
xchg
mov
mov
sub
int3
jns
inc
and
sub
sbb
push
mov
mov
addl
ss
or
pop
mov
pushf
mov
jg
cmp
xchg
pop
xor
push
fisttpl
xor
mov
fistpl
mov
movsl
adcl
decb
mov
mov
push
mov
sti
jge
nop
out
or
or
add
xchg
js
push
inc
xor
adc
lret
push
jmp
addl
jecxz
or
es
hlt
jmp
lods
in
push
jmp
mov
out
ljmp
jb
daa
out
rcrl
cmp
xor
sub
cmp
pop
pop
pusha
add
pushf
adc
pop
aam
mov
jo
fadds
jno
movsb
andl
dec
aad
addb
cmp
sahf
movsl
dec
push
xchg
xor
fs
lret
loopne
rcl
std
sbb
stos
hlt
test
push
dec
aas
sub
movlps
add
or
lods
mov
ja
into
sbb
sub
jbe
xor
mov
pushf
hlt
into
bound
stos
xchg
lret
fisubrl
call
or
lock
push
xchg
adc
mov
dec
sbb
push
mov
imul
sub
mov
inc
push
lods
xor
add
lret
pop
jns
mov
mov
js
lods
outsb
pop
out
mov
in
jns
mov
dec
outsb
lea
push
mov
cli
int
clc
adc
nop
add
xor
jle
testb
xchg
lock
fadds
push
push
outsl
xorl
or
in
ljmp
mov
jns
mov
or
mov
push
and
ljmp
data16
cmpsl
int3
sbbl
mov
jle
jp
xlat
insl
inc
ds
outsb
test
xor
xor
inc
aam
lcall
sbbl
fwait
sub
push
and
es
fwait
inc
push
pop
inc
test
pushf
add
xor
sub
das
fcomip
repnz
adc
call
jnp
in
dec
pop
in
lds
outsb
dec
rolb
mov
addl
cs
test
js
mov
mov
pop
fldenv
mov
xchg
add
bound
scas
dec
and
xchg
dec
fidivl
imul
fimull
xlat
mov
cmp
bound
push
push
cmpl
cmp
in
or
add
pop
lahf
stc
sub
push
sbb
sarb
push
sub
add
adc
mov
adc
loope
imul
clc
out
iret
stos
push
pop
push
mov
stos
popf
xor
arpl
sbb
popf
into
pop
inc
pop
inc
pusha
mov
fsubr
ficompl
sbb
pop
scas
and
push
lret
pop
out
dec
inc
adc
pop
hlt
les
mov
mov
mov
shl
jne
ss
popa
mov
xorb
and
inc
into
iret
jl
pushf
mov
push
adc
xor
add
in
xchg
lods
inc
xorl
sbb
int
pop
or
rcrl
mov
imul
pop
inc
or
pop
xchg
xchg
inc
sbb
lods
popa
iret
sbb
not
sbb
and
cltd
cmp
loopne
fcmove
jae
dec
lret
out
repz
or
push
imul
bound
jge
fwait
shrl
mov
stos
xchg
xor
adc
xchg
jg
mov
popf
std
jmp
sub
popf
inc
repz
ret
and
and
xchg
mov
int
sbb
dec
out
das
jecxz
mov
les
movsl
xor
inc
mov
lret
adc
lret
xor
into
xor
dec
mov
jnp
cmpxchg
pusha
jl
iret
fwait
ds
add
negb
repnz
cmpsb
jmp
adc
cmc
test
loopne
jo
cmp
es
xchg
rol
jmp
inc
ret
imul
pop
cld
sub
xor
les
push
xchg
cmp
lds
adc
xor
mov
ret
xor
push
subb
jne
aam
inc
in
and
lea
clc
fdivrs
sub
push
add
or
insl
cli
adc
ffreep
adc
jecxz
sbb
mov
int
incb
adc
gs
push
leave
inc
fstpl
es
outsb
mov
inc
lods
nop
cmpsl
xor
into
rolb
add
into
and
je
cwtl
add
inc
cmp
fmuls
sbb
xor
sbb
sub
cmp
mov
jecxz
pusha
leave
push
mov
jmp
inc
mov
scas
sub
push
scas
icebp
je
mov
cli
push
mov
pop
cmpsb
gs
cwtl
das
push
stos
es
inc
int
stc
sbb
ret
incl
fucomi
out
fnstenv
push
test
push
add
test
iret
imul
fisubl
orl
xchg
sub
icebp
pop
xor
out
mov
int
mov
cmp
hlt
insb
pop
lcall
pushf
fisttpl
rcrb
xchg
sarb
mov
js
call
add
leave
dec
pushf
loop
push
stos
repz
mov
repz
aas
xor
fldt
mov
iret
je
lahf
pusha
add
rolb
std
add
dec
mov
out
lahf
cmp
add
dec
mov
pop
gs
xlat
pop
inc
rclb
cli
and
js
clc
cltd
ja
les
mov
stos
clc
mov
mov
sahf
test
sub
addr16
rcrl
imul
push
mov
xchg
hlt
cld
pop
int3
dec
fsubl
imul
jbe
je
imul
subl
and
xchg
test
xor
xor
mov
clc
cmp
repz
lock
icebp
and
sahf
inc
into
jecxz
fsubs
push
mov
dec
mov
mov
xchg
je
hlt
subl
inc
pop
mov
dec
push
mov
add
and
sbb
jg
sbb
mov
mov
add
aad
shr
mov
mov
lods
add
mov
mov
repz
xchg
add
notb
cmpb
xlat
cmc
stc
add
out
and
add
pop
ja
outsl
push
test
add
leave
popf
xchg
lret
bound
std
push
lahf
push
lret
or
mov
outsb
lea
xchg
pop
pop
cld
repz
push
sub
sub
mov
pop
cwtl
push
inc
mov
bound
lods
rclb
jbe
pusha
mov
addr16
push
jb
sub
scas
into
stos
mov
mov
lock
pop
xchg
cld
cltd
pop
dec
inc
std
sub
imul
mov
faddl
push
dec
push
adc
pop
push
or
mov
lret
sbb
adc
mov
and
loopne
xor
adc
out
les
mov
popf
cltd
call
test
jmp
push
sub
lock
push
add
xchg
add
xor
xor
aas
cltd
xchg
insl
mov
push
je
sub
stc
aas
aas
adc
xchg
jb
mov
sbb
outsb
xchg
and
cmp
xchg
or
xor
or
in
addb
or
gs
mov
sti
jecxz
arpl
jnp
pop
and
dec
inc
cli
lcall
sub
pop
add
fucomp
cli
sub
ds
jecxz
adc
inc
and
icebp
and
cltd
pushf
pusha
jne
and
add
rorb
push
test
push
test
mov
jle
and
mov
jmp
or
js
movb
and
shrl
cld
inc
ret
lahf
mov
xchg
je
xchg
dec
lcall
iret
mov
jl
cmpsw
xor
pop
cmc
dec
adc
xchg
dec
xchg
loope
shlb
and
add
setle
popf
xchg
das
pop
jl
xchg
and
fsubr
push
out
mov
push
pop
and
imul
and
push
cltd
xor
loop
stc
test
jp
jmp
and
or
or
cld
pop
adc
add
xchg
outsl
rol
add
mov
dec
push
sahf
dec
or
dec
xchg
jb
xchg
mov
add
mov
jmp
dec
sub
or
in
dec
push
ss
clc
das
xor
inc
mov
inc
ret
cmp
cmp
or
cmpsb
addr16
scas
jno
insb
je
or
cltd
xor
push
push
sub
mov
arpl
add
dec
sbb
ret
sub
cmpsb
test
mov
mov
fwait
arpl
shl
pop
mov
xlat
add
mov
jecxz
mov
insb
jns
je
cmc
aad
ljmp
lea
scas
mov
lods
jo
rolb
sub
hlt
test
rcll
ja
and
mov
fbstp
cmp
inc
dec
imulb
sbb
push
mov
out
xor
xlat
adc
aaa
xor
mov
cmp
mov
mov
mov
push
pushf
adc
ficoml
dec
xorb
lret
repnz
sbb
push
int3
add
jp
lret
packsswb
insb
fildl
mov
jb
imul
or
mov
in
cmp
push
stc
popf
movsb
cmp
xor
or
pop
popf
xor
hlt
sarb
adc
pop
ja
daa
enter
pop
push
sbbb
aam
add
dec
popf
push
push
movsb
cmpsb
fidivs
inc
aam
test
and
fwait
mov
fldcw
sbb
or
lock
and
mov
pushf
push
icebp
inc
shl
repnz
aam
dec
pop
shr
iret
insb
adc
ds
bound
push
vdivps
or
lods
test
hlt
leave
lahf
cmp
push
xor
into
mov
lret
mov
hlt
stc
add
or
push
dec
fisttps
and
rcll
mov
je
lret
test
jo
aad
data16
stc
inc
fnstsw
daa
inc
pop
xchg
das
mov
and
ss
adc
data16
sub
xchg
sbb
xor
gs
jae
mov
mov
in
mov
adc
in
xor
xchg
jmp
add
cwtl
adc
or
mov
sub
inc
mov
push
mov
sbb
xor
cmp
xchg
mov
add
imul
add
fsub
lea
cmpsl
mov
sbbl
cmpsl
adc
outsb
movsb
inc
test
xor
xchg
lcall
outsl
jp
adc
ja
mov
lahf
leave
cmc
xor
cld
pop
add
jae
cmp
jmp
jp
js
adc
shr
outsb
fisubrl
and
jg
movsl
fwait
hlt
jmp
or
out
cmpsb
mov
jne
xchg
pop
arpl
and
das
mov
inc
sbb
mov
or
out
mov
repz
dec
and
das
in
pop
pop
test
push
enter
add
xchg
sub
or
sbb
sbb
bnd
pop
xor
pop
popa
fimull
out
jmp
xor
and
xor
jecxz
test
incb
or
ret
js
push
ret
stc
pop
ret
push
jmp
push
ret
mov
xor
aam
mov
fists
lret
outsb
popf
ret
pop
push
lods
sti
xchg
icebp
lret
adc
add
push
pop
add
jl
mov
fcmovnu
jno
mov
or
stos
fwait
fdivl
les
inc
es
into
lahf
push
sbb
clc
jg
mov
ss
movsl
mov
ficoml
in
imul
inc
sub
mov
iret
push
sbb
cmp
inc
jns
adc
arpl
jo
lahf
dec
mov
cmp
dec
inc
inc
adc
cmp
mov
ficoms
jg
ljmp
call
stos
fs
in
pop
or
and
ret
fwait
mov
popa
dec
pop
fs
jp
jno
loopne
xchg
setb
xor
scas
pop
repnz
cltd
arpl
rcl
outsb
mov
fistpl
xchg
out
int3
cmpsl
jge
cmp
pusha
shrb
roll
jnp
loope
jl
stc
test
inc
test
xchg
aas
fdivrl
nop
arpl
push
jne
or
jg
sbb
xchg
aas
jp
mov
gs
ss
ret
jnp
and
mov
pop
cs
jo
xchg
adc
out
inc
in
in
pop
aaa
cmp
push
cmc
jae
mov
test
leave
nop
mov
push
xor
push
loop
aam
sbb
jp
std
pusha
into
sbb
ds
sub
and
cmp
test
dec
dec
and
mov
jb
xor
icebp
popl
sahf
lea
idivb
in
cwtl
iret
rcll
nop
sbb
movsb
dec
and
jno
sub
mov
repz
shlb
mov
push
jle
shr
lock
xor
pop
xchg
rcrl
cmc
outsb
pop
xlat
dec
pop
or
mov
push
pop
xor
push
pop
pusha
lods
shll
inc
negb
xchg
test
sbb
mull
or
add
mov
aaa
or
out
ret
cmp
in
insb
call
movsl
aam
call
out
sbbb
jne
pop
inc
sbb
or
mov
cs
mov
add
jb
lock
outsl
in
fnstsw
push
stc
inc
shl
or
jne
test
mov
test
mov
or
ja
jg
sub
lea
jmp
mov
lods
lods
push
lds
mov
mov
mov
pop
mov
scas
and
test
adc
shlb
fisubrl
mov
punpcklwd
cli
jge
inc
lea
and
jl
push
adc
jmp
cld
xlat
mov
lcall
lods
scas
xor
push
scas
bound
mov
orb
push
call
sub
leave
inc
lock
lds
mov
dec
mov
js
loopne
xorb
xchg
pushl
hlt
popf
arpl
xor
jnp
sbb
std
js
mov
lea
mov
insb
stos
frstor
sub
xor
shll
leave
adc
jmp
scas
dec
jo,pn
je
nop
dec
mov
and
in
cwtl
adc
out
mov
jg
jecxz
push
dec
das
in
mov
mov
inc
aaa
cmp
pop
or
imul
out
mov
cmpsl
jl
sbb
movsl
cmpsl
jb
sub
outsl
inc
mov
cmc
lcall
icebp
cmc
cmpsl
inc
pop
fistl
insb
popf
ds
or
xor
fcmovnu
inc
or
repnz
cmp
pop
xor
cs
sbb
mov
sub
stc
dec
ret
out
and
jae
imul
call
jmp
hlt
lock
cmp
sub
cltd
ja
pusha
jae
notl
rcll
pop
xchg
dec
dec
popf
xchg
xchg
vpmaxsw
imul
pop
lods
cmp
dec
sahf
pop
dec
cmc
add
int
pop
jb
xor
pushf
adc
mov
pusha
and
mov
mov
xchg
cmp
cmp
jmp
mov
mov
mov
or
push
and
sbb
mov
leave
adc
ja
and
loopne
negb
outsb
xchg
dec
or
test
add
inc
mov
add
sbb
ds
scas
ljmp
fstp
adcb
cmc
cmp
mov
ljmp
inc
mov
or
fdivr
adc
in
sub
sbb
in
loopne
push
ljmp
xor
insb
jns
inc
jp
out
push
and
inc
shll
fisubl
lahf
xchg
cmp
repnz
leave
and
cmp
in
imul
je
nop
mov
adc
push
cmpsb
pusha
jnp
mov
repz
cld
jnp
push
popa
outsl
xchg
cli
fdivrl
jno
xchg
xor
push
sbb
xor
add
and
inc
push
pop
cli
pop
xor
imul
ror
ficoml
inc
inc
add
loopne
lock
scas
mov
sbb
stos
cmovbe
pop
and
mov
mov
ljmp
fmull
push
push
lock
push
ljmp
dec
test
inc
jge
ds
pushf
cmc
pop
push
mov
push
dec
test
fcoml
push
fsubr
xchg
inc
or
xor
loopne
push
subb
jb
aam
add
hlt
in
sub
pop
xchg
pop
cmpb
adc
dec
jae
ja
mov
and
push
push
popf
push
imul
cmp
std
mov
repz
add
daa
or
pop
rorb
je
xchg
out
imul
inc
addr16
aaa
js
xor
push
xchg
jl
xchg
cmp
jb
imul
or
push
sti
xchg
repnz
and
push
sbb
outsl
stc
inc
xchg
call
inc
rorl
loopne
push
mov
int3
mov
sbb
in
nop
or
dec
sbb
ljmp
lock
loopne
and
mov
xlat
gs
or
mov
jmp
lret
repz
and
imul
mov
or
inc
push
mov
add
or
push
mov
mov
add
dec
sub
out
push
insl
ja
push
dec
lds
repnz
mov
mov
pushf
outsl
stc
push
ficoml
mov
movsb
in
jl
mov
fimull
cmp
xor
cltd
jnp
and
movsb
das
adcb
inc
cmp
push
pushf
popf
jbe
xor
out
sub
daa
ret
popa
mov
ds
int3
dec
scas
rcl
out
cwtl
pop
stos
fsubr
call
inc
aad
push
or
or
cltd
xor
jle
enter
xor
lret
dec
les
data16
inc
xor
loop
adc
push
testl
jg
mov
data16
pusha
shlb
imulb
mov
mov
test
add
test
push
push
movl
cmp
int3
bswap
adc
and
add
je
pop
dec
sbb
mov
mov
mov
dec
jns
inc
jp
inc
inc
aas
pop
push
mov
push
insb
lds
je
mov
das
jne
cltd
out
sbb
xchg
pop
or
add
mov
mov
xchg
ds
pusha
push
jne
adc
cli
shll
jl
mov
je
imul
data16
cmpsl
cltd
popa
mov
sub
loope
mov
push
aam
inc
dec
fs
addb
pop
add
sarb
fcmovbe
xor
mov
dec
fwait
sbb
mov
into
add
test
shlb
cwtl
mov
cmpsb
outsb
sbb
bound
dec
neg
movsb
insb
mov
scas
sub
ljmp
insl
cmp
sub
cmp
pop
mov
cmp
imul
fdivs
leave
insb
loopne
incb
cli
jp
rclb
push
nop
pop
lock
and
xor
sub
sbb
mov
or
cmp
pop
xor
and
test
mov
jbe
jne
adc
xor
movsl
add
pop
inc
xor
jg
or
hlt
sub
mov
ret
adc
xor
ja
cmpsb
xchg
dec
mov
icebp
enter
fsubrs
sub
mov
inc
filds
add
or
xor
aad
jge
fs
and
pusha
mov
icebp
scas
pop
pop
jb
sbb
xchg
outsl
fstps
add
fcompp
mov
pop
push
xchg
sub
ja
popf
adc
xor
xlat
test
in
jle
jecxz
out
data16
inc
inc
addr16
shlb
mov
or
mov
fldenv
pop
inc
test
mov
inc
ja
mov
cmpsb
icebp
loope
pushf
fistpll
add
adc
js
sbb
inc
call
jnp
out
loopne
mov
mov
mov
mov
jmp
xchg
mov
mov
call
sbb
idivb
jecxz
jmp
cmp
scas
test
adc
xchg
loop
cmp
or
iret
cld
sbb
xlat
pop
ret
stc
lret
iret
push
add
cmp
sub
mov
and
dec
lret
je
pop
int
mov
xor
push
imul
ss
sti
cmpsl
idivl
xor
leave
xor
xor
ja
jno
pop
std
adc
jg
lods
pop
lds
jl
inc
es
inc
and
fldl
scas
sub
mov
and
add
stos
call
pop
lea
pop
cmp
dec
mov
das
inc
ret
jo
cmp
lds
jmp
aad
int
arpl
bound
idivl
jbe
inc
ja
jecxz
cmpxchg
repnz
and
jp
movsl
sbb
cltd
push
mov
lock
test
add
lahf
inc
pop
int3
notb
test
or
jmp
xor
sbb
dec
dec
pmullw
popa
test
pop
aad
dec
test
bound
inc
dec
pop
dec
mov
fidivrl
mov
test
cmpsb
lods
mov
pop
or
or
mov
movsb
mov
loope
cltd
mov
stos
push
insl
iret
and
sbb
dec
sub
mov
add
sbbl
ljmp
sub
int
xor
or
push
mov
into
cs
push
dec
jg
orl
loope
mov
stos
jns
xchg
ss
cld
or
pop
sbb
loop
rolb
dec
lret
notb
in
gs
outsl
and
sub
sub
sbb
imul
out
insl
sub
scas
lods
fadd
inc
ret
sbb
mov
and
sub
lock
mov
xchg
push
cmpsb
shlb
add
lods
and
inc
cltd
lahf
xor
cmp
pop
fiaddl
push
stos
outsl
lret
imul
pop
push
sub
add
xchg
inc
test
or
add
test
adc
mov
bound
stc
scas
pop
cld
or
test
cmp
or
stos
xor
push
mov
jae
iret
movsb
fs
lret
mov
or
sub
int
xor
adc
mov
mov
xchg
sub
lret
in
cmp
negb
pop
pop
xchg
jp
test
addb
jb
repnz
shrl
mov
fsub
icebp
add
xor
fldenv
jp
push
stos
shl
aad
sub
cmpsl
jmp
cltd
xor
sbb
fmull
outsl
or
imul
in
add
and
mov
stc
ficomps
or
cmp
ja
cld
dec
jl
sbb
mov
adcb
jg
fadd
inc
cmpsl
ror
or
popa
repz
mov
push
mov
pop
xchg
mov
add
sbb
pusha
jo
sti
stos
ja
call
hlt
sub
adc
adc
lods
inc
sbb
cmp
mov
push
mov
push
imul
stos
addl
cmp
insl
loopne
mov
cld
repnz
loopne
idivb
leave
ficompl
inc
push
mov
xchg
js
outsb
jne
xchg
add
cli
iret
or
mov
outsl
movsb
stos
cld
push
pxor
int
es
adc
cmp
mov
mov
test
rorb
jo
fisttpl
mov
jb
ficomps
xor
or
iret
sub
or
popa
mov
inc
xorb
sbb
in
pop
scas
sbb
out
add
xchg
mov
arpl
cmp
dec
les
fldl
cmp
aas
bound
cmp
mov
repz
iret
cld
imul
sar
cld
pop
mov
and
dec
xor
pushf
mov
pop
or
jnp
mov
hlt
bound
and
push
push
sbb
in
test
divl
fdivs
cmp
mov
and
popa
or
mov
sub
js
test
jge
xchg
cld
cmpsl
enter
imul
es
lock
movsl
out
out
pushf
gs
pop
inc
pop
mov
roll
xor
jge
inc
into
popf
xchg
xchg
loope
sti
fst
lods
adc
enter
stc
add
pop
and
cmpsb
out
in
adc
cltd
mov
pop
bound
fists
pinsrw
xor
aam
add
mov
fldl
mov
cmpsl
ds
sub
xchg
rorl
sub
lods
enter
adc
pop
cmpsb
jmp
setp
push
sbb
dec
jae
pop
sub
shl
and
mov
push
adc
or
das
inc
xchg
add
repnz
es
enter
pop
lret
sbb
inc
in
xor
adc
adc
mov
rcrb
lock
xchg
jmp
and
pop
ds
popf
mov
cmp
pusha
in
mov
stc
mov
test
jns
call
and
or
addr16
xchg
pop
je
mov
jne
fdivrs
lret
lret
mov
xor
mov
adc
leave
cmp
adc
lea
add
bound
xchg
cs
loop
ljmp
xchg
repz
inc
je
xchg
mov
outsl
mov
or
cmp
mov
jb
stos
mov
nop
leave
or
mov
jno
js
or
add
jl
sahf
scas
nop
aam
ds
mov
imul
and
mov
sbb
mov
add
xchg
daa
loop
xor
push
rorl
adc
pop
pop
into
lds
aas
lods
dec
sbb
pop
fsts
movsl
cmp
and
pop
imul
mov
mov
adc
in
fcomps
xlat
aam
in
pop
sbb
or
pop
movsl
les
pop
sub
imul
inc
push
mov
popf
adc
jns
int3
fimuls
repz
xchg
filds
inc
je
out
xor
int
pusha
mov
dec
and
std
xor
popa
ja
push
std
insl
jno
jle
ret
xchg
mov
in
xlat
ficompl
cmp
push
nop
shrl
testb
test
cmp
bound
out
clc
inc
mov
push
cld
pushf
cltd
jb
bound
mov
std
dec
int3
leave
popf
fmuls
xor
lahf
cs
ja
in
aaa
mov
inc
adc
loope
xchg
mull
mov
sub
test
test
inc
iret
lods
add
lahf
cli
pushf
loop
out
xchg
iret
mov
jg
mov
rolb
sub
xchg
popf
outsl
pusha
int3
leave
push
mov
pop
sbb
add
xchg
jmp
loopne
sub
sti
push
fwait
into
popa
jne
idivb
imulb
push
pop
jb
or
bound
nop
add
adc
iret
push
std
mov
xor
movaps
jg
ret
pop
xchg
outsl
leave
cmpsl
sbb
push
lret
adc
ds
or
call
cmpsb
and
mov
mov
std
into
jp
out
ljmp
std
pop
sub
jns
push
and
xchg
pop
cmp
dec
push
les
xor
sarl
mov
sub
dec
movsl
push
xor
pop
sbbb
add
dec
mov
fs
add
stos
inc
shrl
call
dec
fwait
ds
inc
lret
out
cltd
sub
inc
push
sub
or
aaa
loope
test
mov
pop
mulb
mov
rclb
gs
in
jae
insl
leave
jbe
inc
loope
cmpsb
lea
jp
rcr
pusha
insl
push
mov
adc
outsl
fsubrs
adc
xchg
cmp
js
js
adc
sbb
inc
mov
xor
int
mov
das
inc
jmp
mov
jb
pop
mov
lahf
pop
mov
xchg
pop
rcrl
loope
xchg
notl
je
es
or
adc
fwait
mov
adc
fs
inc
aad
or
fwait
pop
icebp
data16
or
fwait
cmp
daa
dec
cmpsl
add
jge
not
leave
push
sub
pop
or
inc
jns
std
xor
pop
cmp
test
mov
fsubrl
movsb
cmpsl
cmpsb
fisubl
xor
mov
mov
sahf
sub
fisttpl
mov
bound
push
add
jae
and
push
jbe
in
adc
imulb
iret
cli
sub
push
mov
mov
dec
stos
cs
lret
cld
inc
and
or
jmp
imul
add
int3
cs
insl
out
xor
shll
and
or
in
push
rclb
xor
std
fsts
mov
adc
ja
lea
sub
scas
lock
test
es
mov
movb
sub
in
jmp
lds
cmp
and
cmp
mov
int3
movntq
cmc
test
or
pusha
mov
ret
loopne
or
xchg
pop
test
fs
pop
mov
repz
lret
pusha
popf
and
push
mov
sbb
push
sub
mov
sub
xchg
scas
fbstp
aas
pop
clc
mov
mov
out
fldcw
dec
jne
push
push
fs
jnp
std
inc
scas
inc
fistpl
dec
rcll
cmovl
ds
jne
movl
mov
sub
xor
fs
call
xchg
mov
out
push
ret
sub
adc
leave
fucomp
lcall
lock
push
cmpsl
cmp
push
jnp
in
adc
pop
cwtl
mov
insb
push
je
sub
insl
mov
out
enter
popa
clc
inc
mov
inc
cwtl
cmp
jb
push
popf
ds
push
js
push
inc
lods
push
push
out
cmc
mov
test
sub
pusha
jns
lcall
inc
icebp
lcall
mov
sub
je
add
and
lahf
add
inc
xchg
jmp
cmp
outsl
push
rol
mov
add
xchg
sbb
mov
fs
add
int
and
lods
outsl
mov
jmp
mov
jp
movsl
divw
pop
in
xchg
adc
sub
lock
repnz
outsb
stos
jl
ret
xchg
loopne
mov
mov
or
mov
mov
cmp
mov
test
repnz
or
and
sub
je
jo
or
pop
scas
dec
jle
inc
pop
outsl
ds
jbe
mov
enter
popa
adcl
movsl
mov
cwtl
add
fcoml
sahf
iret
xor
push
push
out
or
je
movsl
dec
sbb
dec
push
inc
push
pop
cmc
cmp
pop
sbb
pop
push
das
mov
adc
and
js
add
jo
in
xor
into
cmp
dec
es
mov
adc
test
mov
xchg
fs
ss
addb
lahf
lods
loopne
int
pop
f2xm1
jae
lcall
shr
push
fldt
fcompl
movsb
nop
dec
and
push
cmc
xor
inc
test
push
in
out
add
mov
je
mov
fidivl
int3
or
ss
out
lock
inc
mov
scas
lret
xor
jb
addr16
or
dec
rolb
xor
daa
int
addr16
cld
sub
and
push
shlb
aam
jbe
add
jge
mov
stos
mov
movsl
imul
cmp
test
pop
repnz
cli
pop
mov
pop
bnd
lods
jmp
adc
mov
add
into
cs
push
sbb
mov
add
pop
cld
aas
mov
pusha
jmp
or
xchg
jns
xchg
gs
and
xchg
lahf
sbb
lods
xchg
xor
cwtl
cmp
xchg
cmp
arpl
sbb
aad
aas
ficompl
pop
xchg
ja
mov
xchg
outsb
jnp
cmpsb
mov
std
pop
push
std
dec
repnz
mov
test
mov
push
push
pushl
xor
in
pop
sarl
or
aaa
andl
dec
mov
mov
idivl
jecxz
pop
push
andl
xchg
fs
rorl
loopne
add
push
call
addr16
sub
lret
shll
lret
push
adc
jecxz
xlat
sub
sbb
mov
dec
ss
lods
mov
xchg
xchg
xchg
cmp
rcl
je
mov
je
sub
jb
xor
ds
push
ret
jo
das
lret
stos
xlat
imull
fistps
int
adc
test
roll
dec
ffreep
sbb
push
rolb
sti
dec
mov
jg
cwtl
jecxz
test
repz
pop
lcall
jo
mov
jge
dec
lock
and
test
sub
shrb
movsl
push
enter
sub
dec
rcrb
pop
mov
std
pop
stc
outsb
lret
mov
xchg
out
xor
inc
idivl
fldt
rorb
in
outsb
les
pushf
mov
test
insb
push
das
lret
enter
std
push
ffree
sti
in
sbb
aad
and
insl
fisttpll
push
pop
sub
pop
xchg
std
pop
xlat
and
call
pop
dec
aad
scas
loop
imulb
mov
xchg
or
xlat
mov
dec
shll
ja
lds
ja
dec
jae
dec
mov
js
jl
aad
mov
xorps
dec
ret
jmp
and
push
mov
faddl
dec
or
add
mov
jge
cmp
xchg
jb
dec
add
lock
pop
adc
je
rol
cld
jno
daa
jecxz
movsb
test
xadd
nop
mov
ret
inc
push
aam
mov
jecxz
call
mov
and
out
push
arpl
xchg
xchg
adc
jg
mov
cmp
jnp
inc
rolb
mov
mov
movsl
jnp
push
scas
jge
and
in
push
xchg
jo
jae
cld
cmpsl
iret
insb
lret
mov
inc
sub
pop
push
pop
out
add
lret
mov
mov
push
pop
dec
fstpt
outsb
adc
fildl
bnd
dec
jl
xor
dec
mov
repnz
decb
mov
or
inc
inc
movsl
or
test
mov
cmp
add
inc
pop
cmp
or
xchg
out
jns
cli
jb
cmp
xchg
xchg
jo
cs
sbb
fwait
je
xor
fisttpll
sahf
add
sub
cmp
jmp
movsb
xchg
lcall
dec
sbb
add
movsl
popa
sbb
mov
into
adc
dec
mov
call
cmpsb
in
ror
or
bound
push
dec
mov
jnp
inc
stc
inc
nop
sub
aaa
fadds
loop
dec
push
push
mov
das
imul
movsb
or
cli
xor
push
mov
push
hlt
mov
or
pushf
xchg
lods
xor
pop
pop
push
adc
mov
in
pop
insl
aad
push
fs
jno
ficompl
je
xlat
or
popf
lds
sbb
cmp
vmulss
scas
mov
jo
mov
push
arpl
repz
jp
adc
jl
shrb
adc
adc
stos
dec
mov
aam
xor
dec
call
pushf
xor
movsb
mov
data16
popa
insb
outsl
pop
adc
mov
and
add
add
mov
xchg
loop
pushf
fildl
push
pop
adc
int
outsb
gs
lret
div
mov
mov
ficoms
jl
sbb
or
fdivrl
add
inc
mov
pop
push
push
sahf
insl
enter
cwtl
pop
fwait
ret
gs
dec
movl
push
inc
enter
shlb
addr16
pop
dec
cmp
dec
movq
push
xor
es
pusha
mov
fldl
std
test
pop
xchg
lret
daa
outsb
mov
sarl
cmp
sbb
test
fbstp
cmp
cmpsb
dec
lods
cmp
iret
sbb
outsb
jb
dec
mov
loopne
mov
push
mov
or
push
enter
clc
icebp
adc
jg
jg
jl
test
sbb
dec
icebp
and
icebp
jno
push
fdivrl
ficomps
mov
scas
pop
adc
arpl
xlat
jecxz
push
mov
jecxz
lret
cmp
add
sbb
xor
pop
mov
loop
insl
pop
leave
push
ljmp
sub
icebp
popa
jg
rcll
xor
pop
imul
sbb
inc
arpl
xchg
int3
jl
jbe
xor
popa
jecxz
icebp
out
outsb
popf
push
jge
imul
sbb
popa
pushf
fs
outsb
sbbb
sub
test
fistps
hlt
movsb
pop
push
mov
inc
inc
mov
shlb
or
loopne
mov
clc
mov
xchg
mov
sub
cmp
and
pushf
test
cmp
insl
adc
into
add
enter
sub
dec
frstor
push
arpl
pop
dec
ljmp
int3
mov
sub
pushf
rorl
cld
int3
leave
jno
sub
aaa
add
movb
mov
pop
xor
and
jnp
fsubs
pop
movsl
dec
mov
mov
jno
dec
scas
cld
repz
jnp
es
pusha
cli
fidivrl
or
leave
stc
xor
xchg
fs
shl
je
or
jb
fs
outsb
xorl
xlat
loope
adc
jae
or
loope
push
mov
mov
mov
call
xor
in
jbe
ds
push
popf
jmp
mov
add
mov
fnsave
inc
leave
dec
aaa
shll
sbb
lods
mov
push
or
sub
adc
shrb
push
pop
lea
in
mov
mov
mov
xlat
mov
mov
shrl
mov
sub
xor
fs
lret
lods
xor
mov
in
repnz
xchg
jg
jl
roll
ljmp
cmc
test
xchg
pop
es
xor
adc
je
aad
popa
dec
jnp
aaa
dec
jmp
or
inc
sbb
mov
jne
jb
lods
cmc
adc
mov
cmp
aad
out
clc
jl
pusha
ret
int
sub
dec
sbb
out
sub
or
cmp
xchg
rolb
dec
dec
or
ja
jns
loop
sub
mov
cmpsb
cmpsb
test
mov
add
fnstsw
js
roll
pop
cmc
mov
cmp
mov
or
xor
mov
add
movsl
mov
inc
ret
mov
cmp
loope
adc
loop
arpl
mov
sub
push
add
mov
pop
insb
lock
jecxz
inc
ds
repnz
adc
cs
inc
adc
sbb
addr16
std
adc
movsl
das
xchg
cmp
and
test
push
dec
mov
imul
or
test
or
insl
into
jle
mulb
dec
mov
pop
jnp
jns
push
cmc
mov
mov
pop
push
or
mov
push
mov
imul
stc
pop
push
fmul
fimuls
je
pop
inc
daa
subb
and
pop
inc
sub
fdivs
mov
adc
fcoms
test
lcall
xchg
cmp
lahf
mov
lods
dec
push
mov
adc
dec
lahf
shl
and
mov
jns
cmpb
cmp
xchg
sbb
addl
or
jbe
mov
call
push
pop
fld
pop
shrl
and
sahf
and
dec
cmp
mov
clc
das
push
jns
shl
xchg
push
in
push
sub
mov
fwait
lret
mov
insl
call
mov
in
cli
loopne
xor
mov
jns
pushf
addr16
mul
mov
roll
or
push
cmp
gs
loopne
test
loop
int
inc
jae
adc
cli
pop
xor
je
std
ja
shl
and
js
xchg
addr16
jo
sbb
mov
pushf
adc
jle
dec
jecxz
test
mov
mov
sbb
jmp
jns
mov
mov
icebp
adc
jns
lcall
sahf
mov
cmc
fidivl
test
push
lret
jne
addb
fstl
sbb
pop
adc
sub
mov
pop
and
xor
pop
sbb
int
lods
mov
fwait
jo
xchg
inc
int3
gs
pop
stc
push
mov
dec
std
push
repz
or
mov
or
sti
pop
daa
imul
jne
loop
cmc
xor
loopne
pop
push
ljmp
push
imull
pop
push
nop
cmp
or
jne
push
sub
fnstenv
rol
in
into
ja
ljmp
add
push
mov
push
and
mov
jp
mov
xor
or
ret
mov
pop
cmp
mov
lds
sbb
clc
dec
lock
xor
lea
and
push
in
fdivl
hlt
mov
xor
xchg
sahf
ret
pop
sbb
sti
or
or
mov
cmp
popa
cmp
mov
rcll
push
rcrb
push
mov
mov
push
aam
fildl
lahf
notb
inc
mov
test
in
jae
push
mov
pop
scas
inc
pop
fiadds
cwtl
mov
push
mov
push
mov
push
lds
fucomp
add
fidivl
icebp
mov
loopne
insb
lcall
je
sbbl
mov
pop
dec
mov
and
test
roll
add
cmp
dec
or
mov
push
dec
and
push
cltd
sub
push
stc
stos
arpl
jnp
imul
inc
jne
movsb
in
jb
or
xchg
xchg
rcrl
movsb
mov
cld
cmc
sahf
sahf
inc
outsb
lea
pop
repz
add
test
roll
sub
nop
lock
lcall
xchg
sub
in
pushf
sub
out
push
and
lods
jae
ljmp
push
push
sbb
push
cli
sahf
cmpsl
lahf
add
les
pushf
loopne
pop
inc
dec
daa
cmp
int3
loopne
ljmp
fsub
xor
sub
sub
jno
mov
adc
mov
or
jae
cmp
lahf
seto
cmp
lret
or
cmpsl
mov
adcl
nop
aad
dec
push
sahf
dec
add
stc
push
xor
inc
adc
popf
mov
sub
cmp
lret
sub
fs
addb
inc
popf
out
adc
cmp
mov
mov
mov
std
and
ret
ljmp
xchg
dec
mov
sahf
push
sub
fsub
xor
lret
cmp
jb
inc
inc
pop
ss
enter
loopne
push
adc
and
test
adcl
pop
inc
dec
xchg
mov
sahf
mov
int
pop
push
lahf
sahf
fcmovb
cli
int3
adc
nop
jg
outsb
insb
fs
rclb
sub
mov
cmpsb
or
pop
add
mov
in
dec
pop
or
rclb
ror
das
mov
jp
inc
pop
inc
inc
stos
pop
xchg
xchg
and
cld
adc
jae
in
inc
pop
xchg
fdivl
movsl
cmp
push
aad
jl
pop
push
shl
pop
stos
mov
leave
inc
bound
sbb
jnp
inc
sub
cmp
sbb
cmp
testb
push
out
dec
sub
loopne
add
xchg
sbb
es
mov
or
jp
xor
cli
pop
in
fiadds
push
fisubrl
in
shll
mov
dec
pop
js
out
test
addb
das
or
jne
imul
gs
cmp
xchg
mov
or
xchg
xchg
imul
dec
imul
lret
pop
cmp
nop
mov
hlt
and
shlb
mov
repnz
add
fldenv
jns
jmp
dec
pop
or
in
mov
test
movsb
test
incl
mov
movsb
xor
pop
or
adc
test
fcomps
sub
sarb
cwtl
pop
jb
jne
pushf
adc
mov
outsl
push
mov
cld
icebp
adc
repz
imul
mov
mov
sbb
in
mov
mov
sub
mov
sbb
scas
xchg
ss
xchg
push
sbb
les
pop
push
shl
xchg
scas
das
add
lret
in
hlt
inc
xchg
stos
mov
test
push
or
sub
xorl
mov
addr16
sti
jno
xorl
mov
add
adc
pop
push
lods
stos
sarb
xlat
clc
and
in
mov
mov
or
xchg
js
mov
xchg
and
mov
in
fsubl
int3
mov
pushf
inc
in
stos
mov
push
jge
stc
push
pop
lods
sub
mov
addb
mov
xor
xorb
outsb
fisubl
adc
jne
jno
ret
scas
daa
xor
cmp
rcrl
push
sti
aaa
cltd
dec
sub
adc
repnz
push
add
cmp
out
xchg
jb
and
sub
xchg
cmc
fpatan
daa
ja
cmp
ret
out
arpl
ret
xor
inc
jne
stc
insb
push
inc
and
dec
std
pop
notb
jo
and
test
sbb
lcall
pop
cmp
and
test
lret
add
mov
mov
adc
cmc
mov
jb
adc
xchg
inc
fwait
and
repnz
rcrb
mov
push
ljmp
mov
jg
mov
or
cli
ds
add
push
pop
cld
and
aad
fnstsw
in
lea
movsl
or
outsb
xchg
fincstp
test
nop
test
fiadds
cmp
movl
xchg
mov
xchg
lea
xchg
ljmp
pop
add
addb
popf
cmp
adc
lea
stc
xchg
sub
fdiv
sbbb
cmp
dec
andb
add
sub
out
mov
outsb
pop
nop
lret
stos
lods
stos
mov
cmp
test
or
insb
mov
lret
cmp
shrl
fldt
add
js
roll
cmp
inc
sbb
jmp
push
test
push
cs
xor
mov
testl
mov
mov
pop
dec
inc
scas
mov
pop
mov
sbb
pushf
bound
daa
lods
cmc
mov
mov
repz
aas
and
inc
std
xchg
in
data16
bound
jo
adc
pop
sbb
fwait
out
mov
ret
imul
push
adc
in
inc
cld
jmp
or
adc
or
scas
notl
adc
psrlw
sub
gs
ret
pop
dec
pop
sahf
sarl
fadd
fistl
fisttps
add
mov
pop
scas
add
mov
mov
inc
rolb
cmp
jbe
push
shll
popa
push
or
vpackssdw
cltd
int
add
sub
jge
add
adcl
push
add
mov
ljmp
aaa
jne
lret
jl
sub
movhps
jl
inc
jle
pop
cltd
rcll
fsubrs
xlat
ss
insl
dec
fwait
lcall
loope
mov
outsb
mov
adc
pop
fs
mov
sbb
rep
imul
roll
js
popf
ret
fildl
rcll
repz
inc
jl
jg
shrl
cmpsl
inc
xor
sarb
cwtl
fldenv
imul
mov
mov
bound
sbbb
in
lods
mov
arpl
aas
xor
mov
lahf
movsb
mov
fwait
and
lods
fistpll
insl
pusha
stos
jne
push
std
cmp
sti
sub
sahf
adc
add
in
xor
insb
cmpsb
inc
inc
mov
adc
fisubrl
jae
cmp
dec
repz
cmp
inc
ss
lahf
adc
dec
ljmp
dec
mov
rorb
mov
push
and
xchg
in
mov
pusha
adc
adc
xchg
cmp
leave
pop
add
fwait
lods
push
xchg
jl
xor
jecxz
cmp
fistpll
scas
imul
and
shrl
pop
add
inc
or
daa
lds
mov
xchg
push
fdivrs
out
int3
std
sbbb
push
mov
inc
xor
jle
xchg
shll
rclb
gs
enter
or
in
leave
and
ficoms
pop
stc
lods
adcl
push
icebp
cmp
mov
in
mov
push
adc
push
pop
imul
test
mov
push
xorl
xor
and
ds
cmp
pop
nop
xor
adc
jns
ret
sti
lock
pop
mov
xor
mov
cmp
xor
push
dec
imulb
inc
in
xchg
mov
pop
xchg
add
pop
dec
int3
data16
push
out
loop
sub
xchg
xlat
fucomp
orb
clc
out
in
mov
sub
aaa
lret
in
or
lcall
push
xchg
xchg
sbb
repnz
cld
shll
cmpsl
inc
aas
addr16
push
add
lret
scas
sub
imulb
loope
hlt
enter
lcall
cmc
mov
adc
pop
or
frstor
sub
mov
xor
aaa
int
popa
sbb
cmpsl
enter
jge
pop
inc
pop
stos
mov
sbb
test
jmp
sub
arpl
mov
xor
test
lds
mov
les
jl
dec
test
xchg
or
jnp
mov
inc
cmpsl
push
pop
add
jnp
sbb
es
mulb
int
mov
add
decl
cmp
movsl
cmp
sub
in
inc
xor
nop
mov
jae
and
push
xchg
outsb
jecxz
les
roll
lahf
xor
cltd
ss
bound
aam
pop
out
aas
in
jecxz
mov
decl
pusha
orl
add
adc
sub
add
dec
pop
adc
js
lahf
cltd
inc
and
loope
jbe
jecxz
rclb
mov
ds
icebp
call
cmpsl
aaa
scas
jbe
sub
dec
lcall
les
and
mov
xchg
js
sbbb
jge
jge
sbb
cltd
jno
in
and
mov
inc
test
jno
loopne
int3
call
leave
jmp
or
mov
and
test
sub
addb
add
pop
rol
jbe
out
jb
and
std
pop
les
ja
cwtl
sbb
xchg
sbb
xchg
mov
clc
aad
mov
push
jle
mov
aaa
negl
jbe
cs
adc
fisubl
rolb
or
hlt
dec
sub
mov
sahf
sbb
and
jle
xchg
leave
push
sbb
inc
lock
mov
pop
pop
jg
data16
xchg
inc
dec
mov
arpl
push
cltd
push
movsl
cmpsl
mov
movsb
aas
add
mov
movsl
dec
mov
scas
pop
xchg
jne
push
mov
lods
sbb
arpl
pop
xchg
es
mov
dec
nop
and
imul
in
aaa
jnp
movsl
rcll
mov
int
out
cmp
scas
cmpsb
fsubr
sbb
popf
fwait
sbb
in
jne
pop
adc
fmul
jno
test
add
repnz
lods
sti
pusha
movsl
push
repz
repnz
into
sub
jmp
xchg
fldenv
mov
repnz
push
mov
pop
into
sub
jne
dec
sahf
scas
mov
lret
push
mulb
mov
jecxz
jo
push
jo
ss
pusha
lock
adc
or
xchg
jge
dec
add
in
lods
and
lods
repz
pop
add
int3
xchg
out
in
cmc
cmp
call
addr16
xor
sub
cmp
imulb
mov
mov
dec
out
mov
mov
movsl
inc
arpl
mov
sbb
sub
mov
pop
add
test
or
sbb
cwtl
ds
sbb
fdivs
lods
lock
out
xchg
test
int3
divl
call
xor
lret
pop
aaa
add
aam
gs
jle
mov
adc
call
stos
jo
cli
and
fwait
aaa
aas
jno
push
cwtl
mov
xor
push
mov
rorl
add
mov
int
mov
mov
sbb
or
icebp
xor
lock
lea
xchg
bound
pop
rorl
lods
mov
cmp
pusha
xor
mov
adc
sbb
scas
xchg
das
out
mov
mov
stc
outsb
lret
sub
mov
sahf
add
outsl
jp
in
xorl
cmpsl
mov
lods
negl
icebp
js
ss
add
cmpl
jge
mov
xchg
push
fucomp
xor
lcall
xlat
or
fldcw
movb
test
shrb
dec
fisttpll
xor
sbb
rcrb
in
pop
mov
or
out
vmwrite
ret
xor
test
mov
bound
mov
test
push
jns
cmpsb
fstpl
idivb
pmulhuw
cwtl
fstps
mov
pop
aam
ss
inc
xor
fldenv
add
pop
push
orb
xlat
in
cltd
lahf
xor
cmp
aas
adc
mov
mov
cwtl
adc
adc
cwtl
jle
daa
and
clc
in
cld
clc
jmp
in
les
outsl
jg
fwait
jge
pop
daa
adc
cmp
fcomi
cltd
cmpsl
mov
jo
mov
inc
cmp
movb
cmc
std
push
in
xor
jle
fbld
std
jnp
add
ljmp
xchg
scas
mov
sbb
dec
push
cmp
cmp
push
adc
pop
mov
shrl
push
sub
mov
cmp
lods
pop
mov
addr16
pop
xor
pop
or
stos
xchg
dec
adc
push
add
in
hlt
not
mov
and
mov
xchg
sub
incb
ljmp
je
loopne
xchg
jecxz
les
stos
ljmp
test
mov
pop
sbb
addr16
int
out
iret
je
pop
aas
mov
or
das
lea
and
mov
mov
fwait
test
in
cmp
popf
pushf
imul
jge
lock
nop
or
insb
xchg
push
jecxz
je
mov
lret
pop
aas
xchg
aam
cmp
adc
aam
pop
xchg
mov
inc
dec
jnp
inc
pop
in
push
adc
test
into
add
mov
push
mov
leave
cmp
imul
les
mov
mov
cmp
sbb
sti
sub
shlb
dec
sub
icebp
pushf
jl
fisttpll
iret
xchg
call
sbb
js
shrb
mov
jl
jl
inc
mov
xchg
mov
repz
inc
outsb
lret
cmc
shl
in
movsl
mov
cld
lea
in
dec
popa
insb
or
pop
pop
ljmp
hlt
cmpsl
mov
fisubrl
mov
xor
sti
negl
and
xlat
push
movsb
jp
add
xchg
fcompl
loopne
call
loope
dec
idiv
and
rorb
inc
sub
pop
or
call
ret
xchg
mov
mov
das
sbb
movsb
lea
mov
cli
int3
orb
mov
push
xor
jne
ret
jecxz
cmpsl
jle
ret
fldenv
inc
loop
cs
sbb
out
cmpsb
repz
iret
out
and
scas
mov
or
dec
adc
push
mov
mov
push
call
cwtl
mov
adc
ret
jo
dec
fstpt
and
shll
stos
outsl
mov
outsb
inc
dec
push
mov
pop
mov
pop
pop
je
popa
lahf
jecxz
call
push
outsb
shll
push
mov
push
ja
sbb
mov
repnz
cs
scas
mov
testl
adc
mov
lock
sahf
xchg
aas
dec
rcrb
push
or
test
aad
js
mov
pop
shlb
inc
jle
iret
cmp
sbb
jbe
jmp
icebp
in
cmp
cld
dec
fdivrs
or
xor
sbb
or
incb
mov
pop
cwtl
gs
dec
pop
xlat
mov
fcoms
mov
or
insl
jge
and
mov
pop
dec
jae
movsl
mov
xlat
push
fcmovnu
dec
inc
fcoml
push
int3
addl
xchg
jno
add
mov
clc
add
and
stc
mov
sbb
arpl
icebp
pop
sarb
cs
repz
in
js
pop
mov
push
std
jno
inc
dec
inc
cld
out
lock
adc
sub
xchg
in
dec
xlat
rorb
bound
pushf
mov
and
jne
pop
call
in
push
and
or
xchg
jb
cmp
arpl
add
fisttpll
push
sub
mov
pop
and
inc
loopne
xor
movsb
insl
fadd
and
call
fsubr
mov
mov
cmpsb
jbe,pn
mov
xorl
out
imul
or
xor
lock
adc
lds
lret
pop
mov
sbb
xchg
stos
sbb
or
cmc
jge
lret
and
mov
adc
ljmp
into
push
flds
mov
pop
inc
mov
ds
adc
ds
popa
jae
sub
lahf
out
enter
push
fwait
shlb
incb
xchg
arpl
push
push
imul
sbb
dec
or
nop
push
sub
inc
cld
jnp
and
dec
and
inc
dec
incl
aam
sub
inc
notl
fst
bound
inc
movl
repnz
addr16
dec
mov
test
addr16
fwait
arpl
rcrl
cmp
pop
repnz
mov
push
push
ss
lret
inc
daa
mov
ffreep
jae
test
popa
cld
ret
cmpsb
pop
mov
lods
shll
divb
xor
jmp
cmp
mov
pop
fistps
out
jne
cmpsb
insl
dec
faddp
ja
shl
and
faddl
cs
sub
mov
inc
nopl
outsb
mov
pop
outsb
add
loopne
adc
mov
das
lret
addl
jl
std
daa
cs
ja
jae
mov
or
add
mov
mov
xor
push
pop
or
call
fcomps
pop
fadds
fdivr
imul
enter
imul
xor
lahf
das
pop
pop
cmp
xor
adc
mov
mov
lods
and
mov
pop
es
and
in
push
das
jl
mov
mov
lret
es
sub
enter
mov
in
add
loop
aas
sbb
sarl
call
mov
inc
adc
add
cmp
test
outsl
loop
std
pushl
pop
out
into
jnp
enter
lods
sub
xor
jecxz
cs
cmpsb
jg
jb
sub
lcall
cmp
jmp
hlt
lods
push
sahf
cld
fldl
clc
xor
mov
mov
adc
sub
xchg
xchg
dec
mov
sub
nop
or
sbb
stc
cmpsl
enter
sbb
rcrb
insb
add
rcrb
xor
lcall
pop
out
sti
inc
or
sbb
mov
dec
push
ss
shlb
mov
out
rorb
inc
rorb
inc
adcl
xchg
and
xchg
jb
xchg
xor
out
into
clc
xor
lea
adc
cmpsb
sti
iret
fsubl
ja
add
cwtl
test
push
lods
mov
xor
inc
push
jno
add
iret
adc
fdivrs
cmp
jnp
fsubs
out
pop
sbb
lds
or
andl
insb
aas
test
aas
xor
push
out
jg
jo
sbb
pushf
and
outsl
mov
mov
jecxz
cwtl
jbe
pop
dec
xchg
repz
sub
lahf
jl
lods
mov
lret
push
push
nop
dec
fnstcw
dec
cmp
xchg
shrl
lods
add
fidivrs
mov
fnstenv
mov
loop
sbb
pop
or
mov
sbb
gs
mov
push
mov
sbb
xor
mov
and
insl
sbb
fs
je
jl
pop
rcll
movsb
add
jo
sbb
xor
popa
add
in
test
inc
pop
push
jmp
xor
nop
push
repnz
xchg
mov
ss
adc
inc
outsb
xor
mov
mov
aaa
adc
pop
cltd
and
xchg
test
mov
imul
and
cmpsb
and
pop
outsb
and
and
pop
jp
lcall
cli
sarl
loop
imul
movsb
sbbl
xor
adc
shlb
mov
xchg
xchg
popf
xchg
inc
pop
test
jp
insb
add
lahf
push
xlat
cmpsb
addr16
lock
test
jae
add
roll
fucom
dec
push
mov
jno
sub
cli
mov
in
cwtl
outsb
sahf
or
rorb
inc
sbb
cld
cmp
lods
cld
xchg
mov
ret
fstps
jae
ja
ret
cmpsl
lock
mov
aaa
test
pop
pop
jmp
and
scas
scas
inc
bound
pop
add
cmp
das
icebp
lret
stos
aam
aad
xor
fisubl
fstpt
orb
arpl
lcall
loopne
idiv
mov
into
sub
or
ret
ja
xchg
jbe
mov
push
repz
add
jo
fsubs
cmpsl
cltd
mov
test
jle
jge
movsl
scas
call
orb
es
pushf
add
mov
pop
movsb
mov
mov
mov
xor
inc
scas
lret
out
jg
adc
ret
ja
mov
inc
shlb
add
add
push
add
fidivl
cli
in
xor
fucomi
test
or
xchg
fstps
and
les
jmp
mov
ds
pop
cld
out
sub
jmp
fisttpll
mov
adc
insb
push
cli
sbb
jp
in
ss
push
adc
mov
mov
jnp
cwtl
in
divl
xlat
xor
cwtl
mov
inc
push
je
in
jecxz
fstpt
push
xlat
sti
fnstcw
js
testl
out
nop
fistps
dec
add
xchg
sti
adc
sbb
cli
add
mov
add
insb
mov
add
stos
mov
int
rorb
sub
es
jnp
xor
ret
stos
xchg
pop
pop
and
neg
lds
mov
shll
fwait
inc
frstor
repnz
in
xchg
rcrb
mov
pop
loopne
adc
add
shlb
pop
add
rcll
out
addb
xchg
icebp
out
daa
lods
add
or
adc
xchg
xor
aam
jecxz
cmpsl
pop
push
fcmovnbe
lea
add
sub
iret
fisubs
dec
rolb
or
cwtl
dec
xchg
mov
loop
pop
in
out
push
pop
lret
jno
cmpsb
testl
iret
jp
movsb
adc
cltd
fs
insb
mov
cmc
push
mov
xchg
iret
mov
jecxz
test
jns
mov
xchg
sub
xlat
mov
mov
clc
mov
loop
inc
push
stos
jne
scas
das
fadd
iret
mov
test
rol
aas
jecxz
ret
subl
and
xchg
lock
push
cmp
cmpsb
dec
jne
push
jecxz
push
add
and
or
dec
std
push
daa
popa
dec
cmp
pop
inc
lahf
cmc
xchg
add
mov
or
pop
sbb
add
shrl
les
inc
outsl
aad
mov
rorl
xor
pop
cmc
test
mov
jbe
xchg
mov
mov
sub
sbb
rol
fwait
clc
in
xchg
in
cmp
push
cmp
xor
call
push
push
jbe
clc
mov
fistpl
add
push
mov
std
or
inc
fcomps
mov
pop
xor
and
rcrl
jmp
push
adc
mov
jns
loope
sub
pop
adc
sub
xchg
lea
and
sarl
fcomi
xchg
push
call
and
sbb
and
fdivl
out
push
and
int
sbb
fistl
enter
push
inc
mov
cmp
aas
xor
inc
mov
leave
dec
fldenv
scas
jl
mov
mov
test
push
cmp
pop
push
lcall
pop
and
jnp
je
mov
mov
inc
mov
ja
inc
dec
add
push
push
push
xchg
ret
sbb
mov
pop
dec
jle
and
leave
cmpsb
sub
mov
repnz
pop
lret
jmp
popa
mov
sbb
mov
xor
pop
mov
inc
jbe
fwait
aas
xor
and
mov
cmpsl
add
mov
fstl
ljmp
ret
pop
imul
in
mov
add
sbb
fcmovnbe
imul
xor
insb
rclb
test
pop
mov
inc
lret
mov
mov
jl
nop
outsb
jmp
outsl
or
iret
sti
out
lods
roll
jae
into
mov
dec
fstl
idivb
mov
push
sub
sub
jns
mov
mov
jns
gs
sub
fcompl
jg
mov
mulb
ret
gs
or
dec
dec
mov
mov
sbb
fmuls
xor
inc
xor
aaa
rcll
adc
aam
mov
push
pop
std
cmp
sahf
adc
jnp
fisubrs
outsl
dec
push
lret
daa
fidivrl
mov
jo
xor
jg
test
xchg
dec
push
shlb
inc
xchg
adc
xchg
and
dec
scas
cmpsl
push
lock
and
add
pop
dec
and
insl
push
sbb
jmp
cmp
mov
fnstsw
shrl
xor
add
scas
push
test
repz
jge
mov
adc
mov
icebp
mov
jns
std
and
imul
mov
imul
xchg
cmp
pop
adc
stc
scas
fdivl
test
daa
mov
out
mov
push
push
std
or
jl
xor
sahf
lea
rcl
jo
pop
outsl
inc
push
push
scas
shll
sbb
std
xor
scas
mov
and
aas
mov
sub
jb
mov
lea
lds
stos
cmp
sbb
or
cmp
ss
and
dec
inc
jmp
push
mov
dec
mov
andb
pop
xor
and
movb
adcb
pop
mov
jg
lds
inc
mov
outsl
sbb
push
and
pop
aad
lock
enter
mov
cmp
lods
imul
add
inc
test
adc
mov
inc
shlb
out
sti
jp
push
jl
mov
dec
add
jae
push
xchg
push
inc
mov
stos
jle
xchg
mov
sarl
xchg
fadd
ds
cld
nop
mov
gs
lods
lods
jnp
add
les
pushf
jns
in
dec
and
xor
out
in
mov
and
imul
push
jge
mov
jl
in
and
and
push
add
pop
hlt
js
shll
mov
das
stos
cld
loop
mov
jno
mov
xchg
test
lods
lods
push
pop
sti
xor
dec
or
sbb
add
jg
loopne
out
jge
xchg
sti
cmp
addr16
xchg
fsts
push
inc
rcrb
pusha
in
adc
sbb
cmp
insl
dec
fdivrl
fdivs
lock
adc
jno
mov
ss
sub
jp
xchg
loope
xor
mov
sbb
pop
out
lods
jae
jno
test
mov
popa
add
imul
mov
testl
jns
and
sti
std
subb
xor
adc
sbb
xor
cmp
inc
shrl
mov
test
es
push
sub
and
and
mov
mov
or
rorl
add
cmp
sahf
mov
jnp
xchg
inc
shlb
jmp
dec
push
cli
mov
cli
push
shll
mov
xchg
mov
stc
mov
out
fwait
and
xchg
popf
out
js
and
lds
fwait
outsl
mov
xlat
leave
xchg
jl
cmpsl
insl
cmc
mov
into
sbb
or
sbb
addr16
call
add
dec
pop
jp
jnp
inc
or
popf
mov
lods
cmpb
or
cmp
xchg
mov
jl
mov
dec
cmp
insl
add
imulb
mov
fstl
ret
jl
fcmovnb
fucomi
outsl
cwtl
push
mov
push
jmp
mov
lock
enter
movsb
insl
lret
pop
xlat
enter
lret
sub
mov
xor
jmp
dec
mov
xchg
iret
jb,pn
push
push
cmp
out
xor
repz
cwtl
dec
inc
faddl
and
call
cmpl
std
lods
in
cld
ret
xchg
imul
and
test
jne
mov
pusha
js
lret
aas
mov
lret
xor
jae
cmp
in
lret
dec
jne
push
test
adc
jle
fimuls
popf
ja
scas
and
test
rcll
cs
and
jp
int3
cmp
xchg
sub
sbb
ret
adc
pop
test
mov
and
jbe
inc
lock
orl
mov
mov
test
jecxz
or
sbb
jg
sbb
mov
jae
cwtl
jge
fnstcw
cmpsb
enter
or
push
movsl
outsl
mov
xchg
gs
mov
xchg
sbb
push
adc
cmp
mov
inc
call
pop
push
mov
xchg
cmc
xchg
xor
flds
inc
inc
or
js
xor
lret
movsl
adc
xlat
mov
or
and
push
fiaddl
cmp
dec
js
jno,pn
and
mov
les
push
xchg
and
in
sbbb
ret
aaa
fistps
lock
cmc
mov
add
in
stos
int3
sbb
les
shl
adc
shll
pop
pop
push
cmpb
in
add
add
inc
fbld
sti
subb
iret
push
gs
push
inc
mov
mov
pop
stos
dec
push
sub
or
gs
sbb
mov
scas
cltd
popf
push
fsub
push
pop
dec
or
xchg
jae
push
push
insb
pop
shll
cmpb
cmp
jno
cmpsl
adc
mov
clc
sbb
fdivl
pop
inc
fidivrl
inc
popa
xchg
inc
pop
and
loope
jmp
das
or
jo
daa
sub
xchg
das
adc
sbb
push
fstpt
std
adc
lock
and
ljmp
fdivrp
push
adc
mov
sbb
add
mov
jmp
jge
pushl
mov
xchg
jmp
outsl
jg
inc
and
fistpll
sbb
mov
ss
lret
fimull
adc
cmp
addr16
jl
xor
and
jl
in
fwait
sbbb
sbb
movsl
sub
add
xchg
test
insl
rcrl
addr16
nop
adc
cld
jnp
fwait
sbb
cmpsl
sub
loopne
push
sbb
leave
pop
enter
int
loope
add
xchg
jecxz
inc
dec
sub
lret
addb
xor
lods
shlb
mov
hlt
pushf
insl
fdivrs
cmpb
lret
sbb
pop
inc
push
popa
dec
xorb
push
test
das
or
out
adc
gs
pop
cld
push
das
sbb
mov
shrl
in
add
adc
cmp
jle
xchg
jge
and
out
jne
call
cmp
jns
sahf
adc
cwtl
xchg
and
inc
mov
lret
sar
aas
rcrl
mov
imull
xchg
in
daa
cmc
cltd
outsb
mov
sub
sub
stos
cmp
scas
inc
push
sbb
notl
rorb
jo
push
mov
arpl
icebp
out
movb
or
xchg
das
pop
jb
ja
ficoms
mov
push
and
mov
mov
fstps
pop
imull
pop
sti
out
jbe
arpl
cmpsb
inc
cmp
pop
sbb
xchg
and
and
xchg
nop
pop
das
and
cmc
cmp
and
xor
std
jl
ret
push
add
aam
arpl
cltd
scas
mov
jmp
or
push
repz
xor
shlb
addr16
fs
or
or
adc
lds
or
pop
push
jg
orb
addl
dec
or
sti
popa
ljmp
sbb
mov
push
jl
inc
inc
pushf
in
mov
sahf
mov
lds
push
sub
mov
aas
pop
or
mov
jle
mov
stos
mov
ret
mov
jp
xor
mov
or
or
stc
in
xchg
pop
pop
cmp
std
push
movsl
lret
movb
sbb
pushl
inc
push
xlat
subb
mov
out
jnp
dec
movl
cmpsb
mov
mov
and
mov
mov
cli
es
inc
out
sbb
mov
or
insl
lea
popa
loop
lret
inc
inc
call
adc
cmp
aam
jae
dec
jb
mov
enter
out
int
pop
jae
stc
jge
cmp
xor
push
xchg
sbb
jle
mov
aam
imul
adc
sbbl
scas
pop
ret
dec
or
popa
adc
pop
add
push
cltd
or
adc
cmpb
rorl
and
int
pop
popf
sub
or
pop
xchg
add
or
repz
pop
int3
cmp
sbb
push
fsubrs
push
sbb
mov
lret
pop
imul
jb
inc
xorb
adc
in
test
sbb
incb
inc
rorb
push
jae
xor
sub
test
push
repz
mov
or
mov
xchg
subl
fwait
loope
mov
jp,pt
sub
mov
mov
push
cmp
cmc
popl
add
rorb
dec
fidivrl
adc
js
clc
cltd
jle
push
fsts
and
fists
xor
mov
jle
fstl
orb
or
out
pop
lds
push
stc
and
adc
pop
imul
cli
xor
adc
ljmp
mov
or
stos
jo
add
push
add
mov
or
pushf
pop
jbe
cwtl
enter
insb
sahf
pop
mov
mov
test
adc
mov
or
mov
rolb
outsl
mov
or
int
inc
imul
or
push
sbb
sahf
pop
data16
int3
jbe
inc
addb
cwtl
dec
into
add
test
in
loopne
mov
add
and
jno
add
lret
dec
mov
inc
jl
mov
test
cli
sub
or
mov
cmp
cmp
jp
add
pusha
push
stc
fstl
xchg
jnp
and
push
lods
ficoml
pop
or
pop
movsb
fnstcw
sbb
call
out
push
leave
adc
sbb
jae
movsl
cli
ficoms
mov
popa
leave
pop
push
mov
js
add
xorl
mov
std
cmpl
cmp
fbld
insb
in
andb
sbb
sbb
sarl
cwtl
sub
push
cmpsl
push
fwait
pop
pushf
rcrl
pop
push
push
test
dec
and
push
lds
rcrl
clc
jno
fbstp
mov
gs
jne
xchg
and
lret
xchg
sub
dec
xor
mov
mov
inc
jo
cltd
pop
mov
pusha
nop
out
sub
jp
imul
xchg
inc
cli
std
aad
mov
je
faddl
scas
sahf
pop
into
cwtl
pusha
push
repnz
cmp
xor
xor
push
mov
loope
stos
dec
jmp
pop
scas
sbb
adc
cltd
rcl
dec
xlat
dec
ja
mov
loopne
outsl
dec
mov
int3
outsb
ret
bnd
stos
test
orl
jno
sub
dec
mov
xor
push
jle
pop
dec
pop
sti
sahf
ret
rorl
gs
subl
mov
popa
bound
arpl
jmp
fdivrs
jbe
rolb
js
jno
addr16
mov
les
push
aam
popl
jg
das
lods
pop
inc
dec
int3
dec
jge
testl
aaa
sahf
push
dec
pusha
or
mov
pushf
je
sti
or
pop
mov
inc
into
push
fcmovbe
repnz
stc
into
pop
sub
das
inc
in
dec
call
cmpsl
add
shrl
and
enter
into
push
nop
loopne
or
xor
imul
out
fs
pop
in
insb
je
out
push
lret
roll
add
mov
test
mov
pop
and
addr16
adc
mov
pushf
sbb
and
lea
test
mov
into
and
adc
or
mov
in
fwait
aam
out
xchg
test
pop
sbb
loopne
rol
adc
cs
movsl
xchg
rol
adc
dec
inc
jmp
test
mov
enter
out
arpl
sub
out
push
or
adc
jle
mov
mov
pushf
andl
mov
std
mov
sbb
movl
cwtl
in
imul
sub
pusha
cmp
sub
in
mov
sub
icebp
xchg
mov
ffreep
inc
insb
fmull
xchg
push
int3
jge
mov
sub
and
and
lret
enter
sub
mov
mov
mov
jge
addr16
push
pop
adc
pushf
orb
or
loope
sbb
movsl
sub
xorl
in
jno
jae
out
sbb
sub
jnp
mov
insl
pop
adc
sbb
cltd
jnp
push
cmp
xchg
neg
adc
lret
cmp
add
fistpl
fcompl
mov
mov
jl
adc
sbb
testb
jmp
mov
stc
or
sahf
loop
cmpsl
mulb
sti
sub
jns
or
lods
mov
sbb
aad
inc
fisubrs
stos
mov
in
movsl
mov
insb
dec
sbb
jne
daa
pushf
sbb
dec
add
jo
or
and
xor
aas
sbb
mov
and
pop
out
lea
pop
pop
je
imul
push
insb
leave
mov
cs
inc
xorl
pop
sbbb
xor
jbe
inc
mov
adc
pop
mull
cld
xor
dec
mov
sbb
jae
or
inc
or
jb
scas
repnz
orb
inc
mov
dec
pop
rol
xor
jbe
imul
and
test
lds
cli
sub
cmpsb
test
sahf
adcb
mov
dec
adc
imul
push
inc
mov
dec
dec
clc
mov
jo
and
cmpw
cs
and
mov
add
push
mov
aas
rcrl
xchg
jbe
or
test
int
xor
add
pop
sub
xchg
cmp
es
dec
mov
mov
pop
mov
inc
push
movsb
outsl
sbb
sub
adcl
fmul
xorb
or
fcomp
jb
xchg
dec
pop
push
pop
and
jge
vmovupd
ds
fs
fstpl
jecxz
out
adc
in
and
cmp
sbb
jbe
jne
shlb
dec
add
repz
sbb
in
or
jns
inc
orl
xchg
fcomi
mov
mov
inc
lcall
stos
popa
inc
adc
mov
mov
cmc
mov
popf
dec
jmp
int
xor
and
ss
pop
shlb
pop
xorl
mov
std
mov
ficoml
in
lcall
repz
sub
jg
in
ja
orl
dec
sub
mov
popa
and
repz
and
sbb
popf
push
cmp
stc
movsl
push
enter
rclb
test
mov
hlt
sub
int
xor
stos
decl
inc
add
lea
mov
cmp
and
inc
movsl
dec
lahf
lahf
pop
jmp
and
orl
push
sbb
sti
cmp
inc
xlat
add
ret
pop
scas
push
inc
inc
sbb
lock
nop
es
fld
test
hlt
mov
stos
cmp
hlt
sbb
icebp
insl
inc
cltd
push
xchg
mov
clc
addr16
adc
or
mov
adc
inc
inc
lods
jg
lahf
dec
add
test
adc
in
mov
fsubr
testb
dec
sbb
mov
iret
lock
fildll
sub
add
es
pop
push
cmp
stos
push
pusha
xchg
ret
fwait
mov
cltd
mov
adc
cmpsb
xor
jg
pusha
push
cli
xchg
adc
pop
imul
pop
xor
push
pop
pop
cmp
jmp
add
cmc
arpl
xorps
xor
je
cwtl
pop
popf
dec
cld
sub
mov
aad
rorl
and
xchg
jo
pop
imul
imul
imul
xchg
enter
int3
push
popl
sti
mov
xchg
push
cmpsb
sub
ljmp
rcrb
mov
mov
dec
outsl
divb
addl
mov
mov
sbb
movsb
mov
scas
stc
icebp
test
lock
mov
insb
shrl
into
mov
or
es
sub
mov
jge
sub
jle
notl
repz
in
clc
data16
shrb
insb
add
and
lea
pop
inc
pop
mov
lds
in
sbb
or
mov
mov
sub
mov
repz
xlat
xor
sub
outsb
das
xorl
fldt
ret
shr
jg
mov
aas
xor
imul
sbb
into
or
faddl
leave
pop
push
fwait
test
push
mov
or
jo
mov
dec
outsb
mov
push
cltd
iret
pop
or
jbe
lock
xchg
inc
ja
sbb
lahf
push
js
dec
mov
cs
in
mov
div
xchg
es
mov
pop
ljmp
dec
notl
or
lahf
adcl
cmp
add
push
mov
shll
js
xor
mov
fdivl
faddl
lods
lds
dec
fistps
jnp
setne
fs
ss
dec
cmp
jl
shlb
rolb
clc
test
lcall
and
add
add
imul
push
fs
dec
mov
dec
and
imul
push
sbb
leave
or
arpl
adc
xor
arpl
mov
inc
adc
outsb
push
xor
test
cmc
dec
or
dec
dec
pop
xchg
loope
ds
mov
sub
int
jge
pop
test
mov
pop
xor
in
xor
jl
and
insl
jecxz
jmp
repz
mov
xor
mov
fnsave
das
and
enter
popa
jno
sub
int3
sub
int3
lcall
sub
hlt
or
mov
das
adc
sub
sbb
mov
push
icebp
movsb
das
dec
inc
int3
dec
jmp
decb
movsl
das
jg
adc
orl
or
and
popa
fistps
inc
xchg
cmpb
pushf
cmpsb
dec
inc
shl
pop
sahf
sti
jmp
pop
mov
lcall
mov
add
int3
pushf
popf
in
test
mov
sbbl
fdiv
mov
add
sbb
or
add
or
test
push
xchg
icebp
cmp
xor
lret
xor
lahf
sub
frstor
add
xor
cltd
adcl
add
jl
mov
ja
mov
lahf
lahf
mov
or
or
shlb
ljmp
sub
mov
push
jne
and
mov
sub
stc
adc
mov
outsb
push
lret
xor
call
ljmp
pusha
push
mov
std
cmpb
adc
jmp
mov
inc
aad
mov
lret
and
faddl
iret
daa
push
jno
add
inc
cmp
adc
mov
sub
add
inc
jnp
inc
dec
pop
xchg
adc
inc
sub
popf
jge
mov
push
fcmovne
dec
mov
cld
adc
sbb
test
jb
stc
xor
les
cmpb
mov
movsb
mov
dec
push
pop
mov
pmuludq
jnp
xor
aas
xchg
xchg
sbb
push
clc
fcompl
add
add
out
das
popf
cltd
adc
mov
push
decb
pop
mov
sbb
jo
xor
push
repz
add
test
nop
adc
loope
mov
mov
mov
push
rol
and
pop
and
dec
popf
jne
and
cltd
and
dec
jb
pop
iret
push
fbstp
pusha
mov
pushf
sbb
push
stc
sbb
out
in
xor
insb
jmp
and
pop
aad
adc
lcall
imul
jg
cmc
leave
inc
jno
ss
scas
jg
sub
shl
xor
pop
inc
out
xchg
cmp
xor
fsts
ss
jnp
mov
push
mov
aad
lock
jo
cmc
fsubrp
pop
aam
jmp
pop
lods
pop
pop
xchg
scas
into
ja
pop
out
cmp
inc
ficoms
mov
ret
repz
mov
inc
in
xor
sub
dec
pop
nop
rorl
pop
stos
outsb
movsl
cmpsb
adc
sub
add
incb
outsl
and
repz
adc
push
hlt
sbb
movsl
xor
stc
push
jae
neg
push
add
sbb
decl
jge
xor
sahf
fdivrl
in
xchg
push
mov
sahf
and
jns
pop
aas
mov
je
add
xor
out
mov
jecxz
mov
mov
inc
in
dec
lock
fmull
mov
push
xor
push
mov
addb
jne
sub
adc
push
mov
mov
lret
cs
xchg
push
outsl
mov
sti
pop
push
pop
push
mov
lret
jecxz
sbb
bound
push
mov
call
mov
inc
or
add
loope
rcr
das
or
mov
mov
pop
dec
push
test
mov
cs
cmp
pop
xchg
xor
jne
push
jbe
es
xchg
iret
push
pop
je
mov
sub
cmp
lret
jno
and
repnz
out
daa
imul
pop
fists
outsl
fistl
cmpsb
or
cld
scas
push
mov
xchg
js
out
in
pop
scas
ja
mov
insb
stos
xchg
or
pushf
pop
cli
ds
mov
sub
jle
bound
cmp
dec
aam
cld
jne
add
push
and
push
mov
fdivrs
add
cmp
sub
test
outsb
fcoml
cmpsl
cmp
movb
pop
mov
in
mov
jns
stos
add
adc
data16
outsl
add
lods
adc
loope
mov
enter
aaa
fstps
pop
xchg
andb
lods
lea
sbb
mov
mov
inc
jne
jle
jmp
mov
jb
ja
push
pop
jge
push
ja
jg
fisubrl
and
jb
cmp
test
pop
sub
mov
and
pop
js
cltd
pop
sub
jmp
ds
cmpb
fdiv
in
cmp
ret
jg
scas
into
jo
pop
adc
loop
pop
cmc
mov
mov
and
pop
sarl
mov
cmp
mov
push
push
pop
inc
mov
or
ss
adcl
lret
dec
mov
lea
pop
xor
dec
les
mov
sub
mulb
and
je
push
jmp
pop
data16
addb
into
in
cmp
aam
sub
or
lahf
shll
push
jge
pop
call
lods
dec
mov
and
add
rol
dec
push
loopne
test
lods
mov
adc
mov
xchg
fisubrl
jae
mov
dec
inc
lret
or
push
adc
xor
jb
pop
sbb
loopne
jl
imull
adc
mov
mov
push
cmc
fs
test
mov
inc
mov
out
sbb
shrl
nop
mov
repnz
and
out
inc
jmp
pop
rcl
add
jae
iret
jmp
adc
pusha
into
jp
xchg
lcall
mov
fisubrs
ficoms
nop
push
or
inc
jns
into
je
in
aaa
roll
in
in
xor
cmp
push
dec
pop
pop
inc
adc
inc
and
push
mov
fstpl
idiv
shlb
rcl
mov
pop
xchg
add
add
lods
cmc
in
clc
dec
les
ja
mov
dec
inc
rcrb
aad
in
nop
sbb
arpl
cmp
cld
and
jg
xchg
mov
daa
jmp
out
pop
xchg
xchg
xor
ret
rclb
xchg
add
enter
lods
xchg
jnp
in
iret
adc
gs
daa
mov
cli
sahf
xor
adc
outsb
jnp
aas
mov
iret
rcr
xchg
sub
and
sbb
imul
ffree
adcl
mov
jo
gs
sbb
ret
inc
sub
int3
fadds
test
xchg
inc
push
cmp
cwtl
mov
test
dec
jmp
sbb
iret
jns
mov
test
xor
stos
jmp
test
mulb
cmpsl
push
and
add
scas
and
jg
outsl
ljmp
popa
xchg
neg
jo
adc
les
es
inc
and
adc
nop
mov
inc
pop
or
fldt
push
aaa
adc
repz
mov
mov
pusha
mov
xchg
jno
fs
in
xchg
addr16
addl
hlt
in
adcl
dec
or
and
sahf
mov
jno
mov
cmp
pop
or
jg
and
frstor
push
xchg
popf
push
mov
cmc
mov
mov
int
push
mov
insl
call
and
xchg
cmp
sarb
xchg
ljmp
lcall
pusha
pop
sbb
mov
arpl
push
jbe
dec
sbb
push
or
loop
call
or
lret
jmp
xchg
aad
ret
xor
lea
int
adc
ret
stc
or
xchg
test
jmp
cmp
out
and
rcrl
in
inc
or
or
fs
cmp
and
mov
jnp
cwtl
movsl
and
aas
fs
cmc
leave
movsl
add
add
push
pop
jg
clc
pop
xor
mov
pop
ror
sub
and
leave
push
mov
push
mov
add
loopne
sub
push
or
roll
ret
outsb
dec
xchg
push
add
push
xchg
lods
lock
jmp
adcl
push
xor
push
sub
dec
addl
inc
adc
movsb
sub
or
jnp
inc
les
clc
push
es
sbbl
adc
xor
mov
inc
sub
jno
cmp
cmc
sti
sti
aaa
inc
or
push
pop
stos
push
clc
fwait
adc
in
shl
cmp
sbb
add
stos
sahf
les
sub
shrl
ljmp
cltd
and
std
push
ss
roll
ret
insl
fcoms
or
cmp
jg
mull
sub
cmp
aaa
aad
scas
pop
addr16
pop
mov
rorl
jno
aad
les
sbb
cmp
mov
hlt
test
fs
xor
push
in
pop
cs
cmp
call
fnstenv
fbstp
ja
add
ret
popa
je
inc
push
mov
cli
cmp
jae
push
xchg
dec
mov
mov
mov
in
jecxz
dec
sbb
enter
mov
jns
in
jge
popl
jmp
xor
outsl
dec
or
dec
es
gs
dec
int3
inc
outsl
fsubs
fwait
adc
mov
xor
dec
cmp
popf
or
inc
int3
notl
out
add
cmp
test
xor
imul
pop
or
add
aam
cmc
push
push
addr16
push
jle
pop
arpl
lahf
pop
adc
and
inc
cwtl
mov
ja
dec
xor
loopne
xlat
push
orb
aas
adc
mov
repz
fistps
add
int
mov
pop
push
pop
test
cmp
test
inc
pop
push
ret
push
in
out
push
lret
aaa
mov
jge
lock
cmp
insl
stc
sahf
les
xor
insl
dec
dec
or
cmp
iret
int
xor
pop
in
test
std
xor
dec
orl
xchg
int3
lret
mov
cmc
dec
lret
aas
jns
sbb
mov
popf
lret
ds
push
sub
add
incl
push
fs
mov
aad
sbb
xlat
cwtl
sbb
adc
data16
inc
and
push
and
adc
mov
or
test
addb
arpl
xor
mov
push
cmp
lds
jns
mov
testl
and
push
dec
data16
clc
ret
push
mov
pop
sub
mov
dec
pushf
mov
inc
outsb
cs
lahf
pop
dec
out
adc
add
inc
out
sbb
push
xchg
andl
pop
insl
cmp
push
inc
cmpsb
push
sbb
jmp
cmc
or
jbe
xor
movsb
mov
imul
test
pop
mov
mov
movsl
add
ljmp
adc
fadds
xchg
out
loope
adc
lret
add
nop
xchg
dec
gs
aas
push
mov
jae
adc
dec
pushf
dec
and
push
cmp
rorb
movq
scas
mov
mov
sub
xor
mov
addr16
std
fnstenv
es
leave
add
sub
dec
cmp
rcrl
push
pop
xchg
aam
jl
push
sarl
sahf
lret
les
mov
jo
or
xor
rorl
scas
fdivp
fidivs
aad
mov
orl
mov
inc
mov
mov
mov
cmpsl
popa
fistpll
loop
jp
lods
repz
add
and
push
lea
sub
jne
or
cmp
push
insl
sub
xor
cmc
mov
loope
cmp
movsb
pushf
inc
ljmp
test
mov
ds
nop
insb
stos
movsl
cli
shll
loopne
jbe
inc
lret
cmpsl
mov
in
jb
pop
cld
adc
pop
push
fisubl
bnd
push
push
push
jp
push
adc
mov
or
ret
cmpsb
add
call
push
clc
mov
mov
int
leave
inc
test
decl
mov
sub
xchg
add
ljmp
pop
pop
jmp
fwait
int3
lock
xor
xchg
in
push
stc
cld
sbb
adc
test
scas
xchg
fisubl
mov
dec
jmp
fistl
test
push
inc
push
push
jns
or
pop
and
out
mov
inc
cmpsb
xchg
xchg
mov
sub
bound
ljmp
mov
and
adc
int
xorl
cmp
fcomps
dec
jge
fcomps
mov
hlt
enter
push
xchg
test
enter
fs
xchg
dec
or
mov
cmp
cmp
pop
cmp
xchg
mov
or
mov
repz
mov
mov
in
pop
add
fwait
add
mov
dec
pop
orb
xchg
cli
add
stos
add
cmc
push
fistpl
fwait
lret
and
jp
sub
jg
pop
inc
in
cltd
cmpsb
jae
in
xor
cli
inc
leave
push
mov
cmp
xor
jo
popf
repnz
repnz
bound
dec
mov
add
push
jne
cmp
sahf
fnstsw
rcrl
cmp
popf
or
pop
adc
rolb
in
mov
pop
leave
mov
push
in
xchg
mov
cwtl
pop
mov
pop
push
ret
cmp
into
enter
pushf
add
outsb
loope
mov
jb
xor
push
mov
jecxz
jb
or
stc
xor
aas
mov
shrl
jecxz
or
fldt
nop
dec
loopne
fisubs
mov
cmp
and
jmp
fisubs
sbb
jmp
das
addl
mov
push
jb
test
aam
pusha
repz
in
stos
shrb
inc
repz
sub
push
mov
adc
nop
les
rclb
xchg
fidivl
cmp
and
mov
stos
es
jecxz
movb
pushf
lods
cmpsl
ljmp
mov
jmp
fsubp
and
sbb
push
aas
dec
into
test
mov
sbb
and
mov
outsl
push
adc
nop
push
jge
xchg
scas
data16
xor
push
add
sbb
push
fxam
insl
add
mov
dec
dec
in
xor
lret
xor
in
inc
push
lcall
lcall
mov
jg
pop
aad
stos
pushf
or
xchg
dec
orl
mov
inc
pushf
stc
fistps
fbstp
push
and
mov
leave
mov
dec
sbb
test
andb
test
cmpsb
in
cld
xor
add
jmp
repnz
add
lcall
cmp
mov
xor
mov
mov
loop
push
mov
adc
push
xchg
cmp
nop
sbb
mov
bnd
outsb
cltd
stos
dec
mov
jns
cmp
out
icebp
jmp
imul
adc
cs
and
or
popf
cmpb
insl
lahf
jl
stos
adc
mov
pop
lret
popa
jne
pop
imull
ja
push
xchg
addr16
add
push
ffreep
scas
mov
sbb
pop
fs
xor
jno
add
fimuls
mov
cs
push
mov
inc
insl
sub
mov
imul
movsl
push
dec
das
fdivs
lcall
inc
mov
inc
push
adc
cmp
sub
jo
mov
mov
es
or
pop
mov
pusha
cmp
arpl
pop
push
push
sub
imul
mov
lret
and
xchg
cmpl
insl
ret
movsb
add
out
adc
mov
in
adc
pushf
push
dec
pop
jae
sti
mov
or
pop
das
enter
scas
push
test
push
mov
ja
pop
bound
jnp
xchg
stos
mov
mul
faddp
divl
pop
lds
or
movsl
inc
out
xorb
adc
mov
inc
test
shr
mov
inc
lea
js
les
sbbl
std
push
cmpsb
xor
mov
aaa
push
pop
loope
jmp
mov
xchg
and
sbb
fs
lret
inc
loop
and
icebp
mov
xchg
shrb
sub
sbb
scas
adc
dec
insb
in
mov
sub
cs
sub
inc
mov
leave
mov
out
sub
scas
adc
ret
and
dec
jbe
fadd
fnstcw
fisubrl
sahf
fimull
push
push
add
xchg
dec
data16
adc
pop
into
adc
mov
lret
inc
lret
je
and
jle
dec
shll
mov
leave
hlt
jp
movsb
cmp
push
icebp
mov
add
sbb
mov
mov
xor
pop
std
cmc
xchg
call
aad
inc
data16
lret
lea
jle
xor
ucomiss
scas
into
jg
mov
pop
adcl
cltd
xchg
jle
push
mov
inc
and
jecxz
xchg
jnp
scas
adc
lcall
into
or
fidivs
in
repz
in
mov
scas
mov
je
out
clc
sub
loope
hlt
aam
cmp
jb
sbb
shlb
int3
mov
out
xor
mov
out
ljmp
or
lods
and
das
mov
add
push
push
dec
invd
pop
sub
adc
ret
out
fs
aad
inc
adc
ljmp
mov
adc
mov
jle
addr16
sub
and
sti
push
movsb
jb
jmp
jno
pop
iret
push
and
xor
adc
pop
sti
std
jne
nop
je
daa
jl
push
push
xchg
mov
dec
push
and
and
das
xchg
mov
and
sarl
cmp
icebp
scas
sbb
jb
fnstsw
iret
ljmp
popa
mov
inc
idivl
xor
mov
insb
sub
adc
int3
int
cmp
les
sub
pop
jb
and
pop
nop
fwait
pusha
add
or
cs
xor
notb
stos
dec
popa
pop
stc
lods
jb
mov
gs
pop
sbb
mov
aas
and
push
sbb
lahf
loope
adc
pop
iret
xor
cmp
inc
shrb
mov
adc
test
xchg
int3
xchg
popf
mov
sub
add
cs
inc
scas
imul
movsl
fbstp
sub
fisttpll
dec
cmpsl
shll
mov
add
subl
xor
icebp
daa
fnstenv
insb
adc
bound
jo
sub
jb
aas
xchg
lods
pop
or
push
std
fbstp
outsw
cwtl
push
aad
jo
insb
mov
xchg
shl
dec
out
push
sub
dec
or
flds
sub
xor
adc
in
addl
fadds
sbb
mov
movsb
add
xor
or
pop
movsl
push
jge
sarl
pop
pop
inc
cmp
aad
movb
into
int3
dec
pop
mov
ret
cmp
shl
jno
rcl
mov
sbb
shufps
vhaddps
jbe
pusha
inc
out
dec
int3
cmpsl
and
cmpsb
jb
or
mov
pop
dec
stos
outsb
in
sbb
loope
outsb
test
adc
or
and
ficoml
push
pop
pop
sbb
pop
fbstp
xor
jle
jno
pushf
imul
into
jmp
fstl
push
xor
lret
loop
sbb
xchg
loope
lret
xchg
mov
cwtl
fsqrt
xchg
push
adc
arpl
mov
test
xchg
inc
dec
sbb
jle
arpl
ret
into
xor
aaa
pop
pop
imul
mov
sbb
aaa
jno
test
in
cld
push
xchg
xorl
xor
pop
cmp
fwait
mov
xlat
xor
js
adc
push
pop
inc
cli
roll
inc
popf
jno
and
out
sbbb
leave
ret
loopne
in
xchg
push
mov
push
pop
dec
lods
mov
or
cmp
ds
int3
mov
mov
cmp
dec
arpl
inc
sbb
mov
push
mov
lcall
pop
dec
mov
jnp
xchg
test
and
ljmp
push
pushf
mov
in
dec
xor
js
imul
add
inc
jns
fs
aad
or
pop
jb
jo
addr16
mov
xchg
lret
sbb
rcrl
shrb
stc
xor
arpl
pop
fcmove
pusha
xchg
in
shld
inc
xor
fadd
cmpsl
repnz
push
sbb
mov
mov
xchg
mov
or
push
ret
lock
das
jmp
into
cmpsb
inc
cli
xlat
push
icebp
sbbl
in
pop
daa
addr16
jg
ret
arpl
out
jecxz
mov
sarl
out
or
inc
and
lret
sub
mov
xorl
cmp
mov
fninit
dec
cmp
jmp
cmp
inc
jl
jnp
sub
rcrl
xchg
mov
cli
pop
shl
sahf
push
push
lret
jp
call
mov
clc
mov
sbb
in
aaa
ljmp
or
jo
loop
xchg
jge
rorl
inc
in
and
mov
mov
adc
sbb
and
test
fisubrs
stc
fadds
and
dec
out
sub
adc
push
push
inc
cltd
aaa
xor
xchg
test
in
in
test
dec
mov
jg
imul
bound
je
shlb
inc
lock
mov
jp
pop
xchg
jo
lret
inc
mov
adc
push
mov
scas
sub
clc
mov
sbb
or
cmpsb
lods
repnz
sbb
xor
lods
mov
mov
popa
imul
sub
lret
sub
sti
lahf
in
pop
dec
push
enter
jbe
mov
jae
sub
stc
lret
inc
lods
xor
mov
cmp
push
sbb
mov
xorl
flds
dec
mov
fndisi(8087
pop
fwait
mov
add
testb
cmc
or
test
cmpb
pop
jb
xchg
pop
mov
mov
ds
sbb
sbb
hlt
ss
dec
sub
test
std
jne
imul
mov
xor
jecxz
outsl
jno
add
loope
add
xor
sub
dec
cmpsl
or
xchg
add
jl
jle
xor
xlat
dec
inc
or
inc
ret
jp
jnp
pop
and
push
in
and
mov
into
mov
mov
inc
int
and
test
int3
mov
leave
into
push
pop
mov
loope
or
mov
inc
idiv
test
clc
xchg
mov
cmc
ror
frstor
shl
inc
sub
out
js
enter
sbb
xchg
aam
sbb
stc
call
inc
ss
outsb
mov
or
dec
add
lods
add
pop
jo
incb
cmp
insl
xchg
sarl
ret
or
mov
cltd
jbe
jp
and
addr16
inc
add
pop
mov
jl
rclb
das
xchg
or
sbb
lock
in
mov
sbbb
divl
lods
sbb
ds
int3
xchg
xchg
inc
aaa
mov
fwait
add
xor
cltd
push
cmpsb
or
scas
and
lock
add
dec
aas
sbb
scas
mov
icebp
int3
push
popf
push
xor
ja
imul
rcll
xchg
sbb
mov
lret
enter
sub
enter
jle
test
lods
adc
jge
fisttpll
mov
mov
dec
pushf
jp
imull
sbb
adc
add
and
mov
mov
cwtl
cmp
and
hlt
pop
ljmp
loope
add
push
test
stos
repz
cmp
nop
mov
mov
add
and
cwtl
andb
inc
iret
test
loopne
or
aaa
mov
or
fdivs
lods
mov
inc
movsl
pop
fildll
cs
repz
mov
pop
cmpsb
addr16
mov
pop
es
adc
mov
mov
push
push
loop
fwait
pushf
jb
je
stc
gs
inc
cld
fildll
sbb
rorb
dec
imul
or
stos
mov
dec
inc
int
pop
test
out
aam
dec
or
mov
jns
dec
std
pop
xor
jmp
adc
pop
dec
inc
mov
lods
loop
and
iret
movsb
dec
jo
jp
divl
sahf
ficomps
mov
je
pop
inc
mov
aas
iret
adc
cmp
sub
stos
dec
sahf
push
xchg
pushf
in
out
adc
cmp
and
adc
pop
and
sbb
pusha
sub
mov
jae
addr16
mov
inc
fwait
nop
sbb
ljmp
push
add
jns
add
pushf
mov
jge
out
and
jae
mov
add
jno
jle
and
adc
cli
mov
sarl
cmp
xchg
fiaddl
push
cmpb
aaa
cmpsb
sub
rcrl
adc
pop
push
test
dec
jnp
jo
adc
pop
push
jb
jle
sti
adc
push
in
add
mov
addl
xchg
jo
xchg
out
out
dec
pop
popa
pop
repz
pop
mov
cmpsb
imul
pop
jmp
push
xor
out
jno
and
rolb
push
add
mov
fcoml
mov
test
mov
lea
icebp
or
fxch
pop
imul
ret
and
mov
mov
mov
jbe
xlat
push
mov
xchg
push
mov
call
mov
int
out
insl
xchg
and
std
std
add
repnz
outsl
lods
pop
pusha
es
jl
inc
xlat
out
lcall
adc
xor
ficompl
stc
imul
icebp
pop
shlb
sbb
leave
cmp
lock
sbb
data16
jae
cld
stc
jb
cwtl
mov
outsb
shrb
inc
iret
sub
repnz
inc
gs
mov
ss
pop
sub
pop
cli
stc
cmpsb
cmpsb
lds
shll
clc
or
xchg
mov
adc
test
insb
mov
cmp
xor
cwtl
mov
push
lock
add
inc
push
mov
cltd
jnp
mov
xor
mov
scas
xor
or
out
sarl
sahf
cmp
push
mov
int
ror
pop
mov
sti
lcall
out
adc
adcb
adc
pop
imul
dec
loop
adc
and
cltd
mov
pop
mov
test
out
push
enter
fisubrs
in
cmp
cmp
mov
repz
inc
jg
jns
add
rcrl
mov
jno
fstp
aad
cltd
dec
es
inc
inc
jbe
pop
shll
push
insl
outsl
and
pop
inc
dec
add
add
xor
cmp
je
decl
popa
or
inc
add
fbld
arpl
xchg
addb
lods
mov
cmpsb
bound
push
cld
repz
sub
jecxz
mov
jnp
ss
fsts
mov
add
add
xor
mov
mov
push
data16
outsl
xor
test
lret
inc
inc
pop
mov
cmp
adc
mov
movsb
cmpsl
mov
ds
push
push
mov
lock
push
out
addr16
cmp
jg
enter
xor
xor
jno
fildll
cmp
or
outsl
mov
lgs
pop
sub
add
icebp
mov
push
mov
xchg
lods
xchg
xor
aad
lret
push
cmp
jb
loope
mov
jp
add
mov
jb
cs
scas
mov
mov
pop
aaa
jge
in
pop
in
dec
dec
lcall
iret
hlt
jae
sarb
pusha
rcr
push
mov
fisubrl
outsl
adc
push
mov
push
mov
leave
scas
pop
mov
fld1
pop
mov
inc
lods
and
mov
test
rorb
mov
jnp
and
and
xchg
pop
mov
mov
sbb
mov
mov
fldln2
and
xchg
mov
mov
jmp
out
scas
fsubl
pop
pop
inc
std
sub
ficompl
xchg
xchg
pop
and
into
xchg
mov
mov
sbb
lahf
pop
mov
fldz
mov
mov
mov
nop
jno
or
ret
jae
cli
out
mov
pop
std
pop
xor
sbb
xchg
test
add
push
dec
pop
insb
xchg
or
lock
cmp
mov
cld
sar
inc
sbb
xchg
popf
xorl
das
aad
sub
repnz
jo
movsb
repnz
in
push
mov
jp
roll
lods
lods
jmp
int
arpl
jge
mov
shlb
call
decl
data16
lock
inc
pop
xor
clc
sub
sub
mov
pop
lcall
mov
mov
in
dec
das
lock
xor
cmp
xchg
xor
jns
cwtl
loopne
ds
movl
cwtl
mov
mov
lret
cmp
sbb
dec
jne
mov
cmp
cld
xchg
push
movsl
repz
and
ljmp
lret
sbb
mov
aad
inc
fdivr
test
adc
mov
push
pop
adc
das
push
pop
adc
test
movsb
std
and
push
lods
push
sub
scas
mov
je
dec
cmp
rcrb
mov
push
fstpt
fbld
pop
lock
and
cmp
fwait
dec
inc
sub
push
rolb
mov
mov
cld
test
and
adc
addr16
lock
push
pop
add
movsl
jle
inc
adc
cmp
lods
xchg
shrb
cmp
xchg
repnz
inc
push
xor
fwait
push
jno
mov
daa
ds
in
addl
fcoms
mov
jbe
mull
je
inc
add
xchg
push
das
pusha
add
adc
xlat
lds
sbb
jle
jle
repz
cmc
movsb
inc
cwtl
hlt
push
lea
jb
notl
xchg
lds
sbb
and
imul
outsl
push
addb
mov
sub
lea
inc
pop
lock
loop
inc
xchg
divl
movsl
cld
setb
inc
dec
adc
loop
lret
repnz
pop
repnz
aad
shlb
movb
or
ljmp
inc
dec
repz
and
mov
xchg
and
inc
out
imull
arpl
addl
sahf
xchg
lods
push
insb
pop
mov
push
mov
sub
roll
pop
test
cmpsb
jl
add
test
insl
call
sub
push
mov
clc
test
aad
xor
push
andb
lds
ja
js
inc
pop
sub
mov
cmpsb
mov
daa
pop
pop
cld
shlb
xor
repnz
bound
pushf
xor
pop
out
jne
roll
popa
xor
or
cli
scas
jae
cmp
lcall
fwait
scas
aam
and
mov
ss
and
jecxz
negb
and
mov
in
movsb
add
je
fdivl
push
push
js
enter
inc
rolb
jne
add
adc
rorl
push
push
daa
scas
ljmp
dec
ljmp
sarl
movsb
out
fidivrl
xor
out
test
mov
es
leave
xchg
aad
sarl
cwtl
xlat
adc
dec
mov
jmp
std
dec
das
push
cmp
cltd
bound
loope
xchg
aam
and
xchg
pop
or
inc
inc
inc
mov
mov
ret
sbb
mov
jp
stc
les
push
inc
shlb
test
xchg
and
push
and
cmc
fldenv
cmp
add
push
jg
xor
adc
scas
pop
pushf
enter
pusha
into
pop
inc
aaa
popa
lods
push
mov
dec
jb
jle
adcl
sub
sbb
in
xchg
mov
sub
in
jl
cmpsl
ret
sub
mov
sbb
lahf
xchg
mov
clc
int
cltd
shlb
xlat
icebp
sti
mov
cmp
pop
nop
aas
or
adc
jo
xor
cmp
cmpsl
adc
fs
xor
cmc
inc
inc
addr16
roll
ljmp
lock
sbb
movsb
pushl
xchg
inc
mov
push
and
clc
pop
inc
or
cmp
test
xor
das
push
lret
or
fwait
repnz
mov
jns
cmp
movsb
pop
fistpll
xchg
xchg
fistl
jns
mov
xchg
and
cwtl
jo
inc
in
cmp
dec
cmp
mov
std
insl
push
inc
mov
mov
adc
jle
mov
mov
call
inc
rcrb
dec
inc
mov
test
jne
jb
pop
and
sub
xor
or
push
adc
xchg
mov
popf
or
imul
fldcw
ficoms
into
ret
sti
ret
and
cmpb
cmp
fstpt
in
daa
xchg
and
cmp
mov
aam
and
xchg
pop
xor
outsl
and
or
mov
push
adc
add
xor
sub
imul
adc
pusha
mov
rolb
pop
add
dec
lock
add
aaa
test
push
mov
das
out
lods
out
or
les
inc
inc
aaa
xchg
test
adc
popa
popf
and
inc
js
rcll
fcoml
push
mov
nop
icebp
xorl
push
jnp,pt
cmpsl
ror
sub
xor
shrl
sarl
bound
shr
lret
icebp
jmp
lock
add
popa
sub
or
popf
shr
sbb
fs
sbb
dec
xor
test
xchg
enter
cwtl
mov
daa
mov
sub
jbe
jle
xor
jl
pop
dec
mov
push
arpl
int3
xor
jmp
sub
cwtl
nop
sub
sbbb
push
and
jbe
pop
data16
jo
movsl
popf
js
or
ret
lods
test
adc
sbb
inc
shl
and
and
inc
dec
adc
fsubrs
ret
das
or
outsl
sub
cmp
push
fisttpll
in
bound
test
pop
mov
fnstsw
and
lahf
mov
pop
jo
pop
push
push
cmpsb
sub
push
test
add
push
scas
es
mov
shrl
lock
imul
or
rcll
lods
lock
rorb
or
mov
shrb
sub
enter
pop
loop
add
jmp
mov
arpl
inc
mov
xchg
jnp
mov
mov
out
push
lea
insb
int3
pop
out
sub
cmp
data16
mov
shrl
jbe
sub
pop
insl
into
fwait
sbb
sbb
test
in
sahf
cwtl
mov
insb
stos
cmp
imul
push
add
xor
out
shll
push
xchg
mov
iret
adc
mov
lods
mov
mov
sbb
xor
add
push
xchg
push
adc
out
or
or
jno
adc
mov
flds
dec
fistps
scas
sbb
js
lods
adc
push
mov
shll
xor
push
mov
dec
inc
cmp
js
js
jge
mov
lcall
push
popf
push
add
mov
push
xchg
adc
cli
xchg
in
mov
shrl
xor
xor
xor
mov
cmp
inc
push
push
ljmp
push
lods
dec
adc
popa
call
mov
adc
push
lahf
ffreep
inc
ljmp
daa
loopne
pop
cli
aas
int
add
push
stos
xor
arpl
jae
jmp
xchg
stos
nop
push
inc
jp
arpl
or
pop
test
xchg
jne
lds
jecxz
dec
pop
cmpsb
adc
push
shrl
cwtl
js
lds
loop
loop
mov
add
lock
xchg
and
shlb
lea
arpl
push
sar
adc
das
orl
and
mov
mov
sub
test
mov
cmpb
cwtl
adc
mov
pusha
hlt
adc
in
sbb
xchg
lret
add
dec
dec
lcall
insb
pop
sub
addb
fcompl
inc
iret
sbb
stc
cwtl
jle
mov
mov
test
int3
xor
jae
in
cltd
sub
in
jne
lahf
push
pop
inc
and
mov
pop
lret
lea
inc
lods
dec
mov
icebp
and
stos
cmp
adc
mov
mulb
add
aad
loope
fldl
xchg
stos
aas
xor
xchg
enter
les
test
vshufps
mov
adc
inc
pop
mov
or
inc
inc
lods
mov
add
mov
test
jl
shlb
loope
ljmp
xchg
and
mov
dec
adc
sti
in
sbb
mov
inc
mov
bound
mov
test
out
repnz
sub
mov
in
sub
dec
dec
add
xchg
pop
rcrl
jp
ficomps
cmp
xor
ffreep
das
cwtl
jne
insb
movb
js
xor
testb
xor
ljmp
icebp
mov
insb
shrl
cmp
arpl
rorb
fidivrs
cmp
sahf
jge
or
sahf
pusha
int3
pop
fdivl
aaa
mov
daa
loopne
inc
adc
mov
xor
xchg
rcll
pushf
add
out
xchg
add
push
xchg
sub
fidivrl
and
inc
xlat
adc
jg
mov
xchg
cwtl
test
hlt
pop
mov
divl
idivl
or
repnz
sbb
loopne
jg
aaa
push
push
lock
cmp
popl
mov
and
popa
and
or
scas
push
push
aas
or
xor
push
mov
xchg
inc
cmpl
jae
dec
shlb
mov
cmp
lcall
orb
orl
rorl
xchg
in
lcall
test
shlb
mov
orb
insb
pop
pop
cli
cmpsb
cmp
or
sub
in
mov
frstor
sub
push
or
sub
mov
icebp
xchg
inc
adcl
or
jo
test
scas
in
dec
mov
sti
sbb
testb
adc
aaa
mov
and
addr16
pop
les
pop
popl
xor
sub
xor
arpl
ret
mov
stos
xchg
lock
fcompl
and
and
push
push
sub
pop
add
push
mov
or
mov
imul
mov
mov
mov
push
xchg
cmc
ja
dec
push
loop
mov
push
sbb
fwait
and
xchg
lcall
frstor
sbb
push
add
stc
or
pop
clc
mov
xorb
pop
loop
lea
cmpsb
lahf
and
icebp
shl
xchg
ss
cmp
popa
ffree
out
sbb
nop
into
mov
lods
and
lret
adc
adc
outsl
and
mov
das
sub
test
dec
sbb
icebp
add
das
adcb
imul
shl
xor
xchg
or
pop
mov
mov
jge
inc
loope
cs
mov
cltd
push
rcrb
jl
mov
int
stos
pop
jl
cltd
adc
mov
fst
in
xor
adc
or
push
inc
xchg
nop
ljmp
or
pushf
sahf
jg
sar
hlt
jmp
xchg
stc
jge
adc
jg
push
or
iret
inc
push
repnz
mov
insb
xchg
push
xchg
arpl
jbe
sbb
lea
shl
cmpsl
xor
cmp
xchg
sub
mov
scas
lods
mov
pop
in
in
ljmp
xchg
cltd
into
out
popf
lret
scas
psrlq
aaa
out
sub
cmpsl
in
jo
jb
mov
add
cmp
test
jae
imul
xchg
cmp
dec
sbb
cmp
lock
shll
adc
out
rcrl
xchg
mov
aas
sub
pop
mov
adc
sub
enter
sbb
iret
and
cmp
cvtps2pd
aad
sub
mov
aad
xor
and
loopne
push
xor
push
ss
pop
xchg
cmp
movsb
mov
pop
movsl
inc
dec
xchg
add
dec
imul
xor
fdivrs
dec
es
setg
fisubrs
push
loop
inc
jle
sarb
add
or
repnz
lahf
or
jp
icebp
push
stos
dec
cmp
fbld
adc
xchg
out
stos
test
mov
in
jp
imul
aas
js
jmp
punpckhbw
mov
jno
jecxz
sti
dec
fdiv
xor
das
insb
sub
clc
jl
rcll
cmpsb
xchg
jmp
mov
mov
out
mov
lret
xor
adc
sub
mov
mov
sbb
mov
pop
sbb
ficomps
cmpsl
in
and
cli
or
or
insl
call
lods
rorb
out
dec
sahf
mov
hlt
or
imul
in
fstps
add
pop
rdmsr
push
outsb
pop
mov
mov
pop
xor
aad
mov
fnstsw
sub
xor
push
enter
cmpsl
in
push
aad
jmp
add
movsl
loope
jmp
pop
fcmovnb
insl
adcl
jns
dec
shlb
push
cmp
jl
jns
and
jns
ds
and
and
int
stos
mov
repz
add
xor
loope
inc
jbe
and
int
sub
or
loope
gs
mov
int
push
pop
adc
clc
pop
sti
and
aaa
lock
icebp
push
rol
sti
cwtl
dec
or
loop
insb
jmp
pop
jns
jecxz
mov
dec
mov
stos
fs
cld
or
int3
add
in
dec
sbb
inc
xor
sub
ret
stc
lcall
jle
lret
icebp
adc
in
lret
lahf
adc
rorb
or
repz
jl
push
aam
mov
cld
les
inc
div
out
movsb
int
sub
incl
ret
pmulhuw
sbb
jae
pop
rcrb
inc
sub
lods
ja
jo
mov
cmpl
dec
fsts
jmp
sub
sbbl
dec
in
bound
xor
fbstp
fidivrs
std
test
pop
fidivrl
pop
xchg
and
in
xchg
jns
jbe
incl
or
adc
addr16
pop
lds
sub
ja
jmp
dec
es
pop
subl
pop
xor
adc
das
sbb
xlat
xchg
pop
repz
push
js
hlt
fbstp
push
xchg
sbb
add
ret
mov
inc
dec
cmp
mov
sub
pop
fmuls
xor
mov
jg
adc
popl
jns
xchg
or
test
repnz
data16
jnp
fldl
mov
and
enter
rol
cmovbe
paddw
pop
pop
and
out
js
push
fisubs
lret
pusha
dec
lcall
xor
sbb
imul
adc
out
pusha
out
sbb
push
mov
lods
outsb
sahf
mov
int
mov
jp
pop
fcmovb
movsb
push
and
sbb
ror
pop
nop
bound
jge
out
call
mov
jmp
pop
shl
mov
xlat
lods
lods
test
call
push
cmp
add
ja
js
add
xchg
push
mov
mov
and
mov
xchg
test
inc
fcoml
hlt
or
push
dec
pop
inc
shll
adc
jae
aad
les
in
or
aaa
leave
mov
push
lock
push
add
inc
and
xorb
and
add
movsl
aad
mov
arpl
popf
sti
xchg
aas
or
push
push
push
mov
cwtl
jmp
add
in
js
xchg
mov
in
ret
inc
sbb
stos
sub
stc
or
int3
mov
das
sbb
pop
adc
out
push
scas
movsl
in
sbb
sbb
std
inc
jne
xlat
mov
cmp
mov
movsl
sbb
jmp
sbb
mov
mov
movsl
mov
loopne
mov
dec
xor
inc
into
and
xor
js
aam
out
adc
add
or
cs
mov
insl
adc
cmp
jns
xchg
arpl
cmpsb
push
xor
lea
mov
cmp
xchg
or
fmul
dec
mov
jno
subl
ret
push
sarb
fstpt
mov
xor
ljmp
inc
push
leave
mov
imul
jge
pusha
cmc
mov
push
mov
stos
mov
mov
pop
ja
push
jge
inc
xor
sub
jb
inc
out
mov
aaa
les
mov
pushf
out
subb
insl
mov
ljmp
and
frstor
xchg
outsl
push
stos
add
sub
lods
inc
test
in
into
cld
stos
lods
roll
mov
sbb
xor
and
inc
in
mov
pushf
add
push
adcb
repz
push
inc
sub
sti
pop
mov
leave
dec
outsl
and
dec
mov
jecxz
insl
mov
pop
loope
pushf
and
mov
lcall
ret
adc
aaa
mov
dec
leave
pushf
and
int
xor
lods
lods
jle
push
xlat
scas
iret
nop
pop
jmp
jecxz
dec
xor
movsb
mov
push
sbb
sub
xchg
movsb
cld
shrb
inc
push
cltd
fdivrp
and
xlat
imul
adc
and
jae
sti
and
sbb
push
xor
or
insb
pop
xchg
xchg
repnz
lock
loope
lods
das
arpl
leave
ret
xchg
push
call
sub
test
jae
sub
js
icebp
push
repnz
sub
test
subl
cmp
jae
cmp
or
sbb
or
mov
inc
jb
stos
out
cmp
int
cmp
je
mov
mov
test
imul
push
xchg
outsl
add
sbb
ret
dec
push
lahf
stos
cmp
add
mov
lds
mov
mov
in
dec
pusha
sbb
or
and
mov
push
call
xor
mov
mov
es
adc
imul
sbb
leave
mov
mov
pop
hlt
or
iret
daa
dec
push
lahf
ja
sub
xchg
mov
out
test
mov
jecxz
mov
pop
dec
mov
xor
pushf
and
mov
in
adc
push
xchg
lock
into
ljmp
mov
xor
pusha
jae
mov
add
jge
fiaddl
ret
sysenter
inc
ret
ret
lds
ficoml
nop
mov
adc
out
fiadds
pop
cmp
stos
sti
mov
adc
shll
mov
movsb
push
add
mov
sbb
leave
cmp
sub
pop
dec
rclb
test
cltd
out
push
push
or
gs
jp
lret
mov
fsubl
pop
int
xchg
cmp
movsb
mov
je
sbb
inc
or
ja
jbe
aaa
es
lea
and
sbb
std
add
pusha
jl
cmpsb
jmp
push
mov
das
int
pop
push
aaa
adc
dec
jno
mov
pop
std
push
aad
xchg
outsl
loopne
fs
jle
cli
ljmp
push
loop
in
stos
stos
adc
fsubl
mov
sub
or
dec
mov
sahf
fildll
sahf
or
pop
push
aad
inc
ror
repz
mov
inc
cmpsb
push
mov
jle
ret
xchg
dec
jnp
jo
jecxz
aas
jge
std
pushf
mov
je
jb
push
in
mov
xorl
imul
or
test
mov
mov
test
xchg
sbb
dec
jb
jbe
mov
adc
aas
mov
cmpsb
adc
jmp
popf
mov
iret
shr
test
test
data16
xchg
lret
out
add
test
loopne
xchg
pmaxub
inc
dec
dec
inc
jnp
icebp
je
mov
push
sahf
jge
jecxz
das
js
clc
lock
test
sbb
mov
pop
dec
or
mov
sub
pop
jle
das
negl
sub
negl
jmp
pop
call
les
pop
add
pop
fstpl
cmpsl
mov
push
xlat
addr16
mov
jae
or
mov
jno
sub
sbb
and
cmp
and
add
dec
loop
mov
fistl
out
popa
pushf
push
dec
mov
pop
jp
cmp
les
sbb
mov
dec
sahf
rorl
mov
inc
ljmp
fwait
daa
fs
adc
mov
xchg
sbb
sarb
int3
push
out
lea
cmp
pusha
sti
lock
jmp
fnstsw
inc
mov
dec
push
push
stos
int3
repz
loop
sbb
push
adc
inc
rol
fiadds
mov
push
mov
enter
push
adc
gs
push
and
mov
mov
pop
xor
repz
pop
mov
add
jno
sti
mov
mov
aas
mov
pop
int
data16
sub
hlt
dec
sbbb
shll
xor
jp
or
arpl
push
and
lahf
jnp
adc
pop
orl
jge
nop
inc
pop
cmp
movsbl
ja
and
sbb
mov
fldt
mov
rcrl
int
lock
sti
mov
fnstenv
dec
cld
cmp
pushl
shll
andb
loop
add
cmpsb
jge
fsubrp
and
scas
mov
mov
out
sahf
mov
mov
enter
lea
lock
cs
daa
dec
sbb
js
inc
test
dec
inc
cmp
push
lcall
out
xchg
bnd
pop
cmp
das
leave
mov
add
mov
mov
jno
aad
pop
mov
aad
lret
pop
cltd
or
jno
clc
inc
and
clc
ret
popf
iret
aad
iret
dec
push
call
adc
pop
or
mov
jmp
sbb
xor
enter
jmp
xchg
imul
fimuls
ja
popf
outsb
ja
xchg
flds
aad
sti
jl
jno
sub
sbb
jge
adc
adc
xorl
fwait
cmc
fwait
inc
ds
addr16
dec
mov
push
push
int
mov
iret
shlb
adc
pop
into
inc
insl
cmp
and
stos
addr16
mov
mov
lret
xchg
in
bound
add
sub
xchg
sti
les
sbb
sub
js
lods
inc
das
inc
inc
jb
xchg
adc
add
pop
das
inc
loop
fidivrl
sub
dec
inc
sub
ljmp
test
in
adc
jl
pop
add
pop
nop
jns
loopne
inc
jae
sub
imul
sub
jmp
push
cltd
bound
lds
icebp
negb
mov
jno
arpl
scas
fwait
xor
cli
daa
xchg
push
inc
nop
xor
call
add
jl
inc
pop
mov
jns
mov
shll
pushf
push
mov
fcoml
imul
test
push
push
dec
sti
movsb
cmpsb
in
leave
xchg
mov
mov
mov
lods
test
pushf
jl
inc
mov
andl
stc
mov
bound
push
aas
pop
push
subl
mov
pop
ljmp
stos
in
mov
roll
stc
jp
inc
mov
insb
insb
clc
lock
jbe
fmull
inc
add
pop
hlt
test
lret
scas
push
stos
lds
enter
push
negl
fbld
call
fwait
loopne
stos
rorl
pop
pop
and
dec
jnp
pop
jb
adc
sub
mov
xor
loop
xor
mov
les
dec
pop
cmp
jo
test
cmpl
pop
adc
pop
clc
dec
test
xor
in
andb
ss
sahf
inc
xor
fisubrl
je
jp
jecxz
mov
ljmp
adc
xor
inc
xor
je
in
fwait
in
in
xchg
lods
int3
aaa
jae
xor
jno
cwtl
add
pushf
xchg
push
inc
les
fisttpll
push
shrl
mov
lods
mov
add
push
dec
pop
ret
jne
clc
xlat
into
mov
xchg
out
in
push
sahf
lea
punpckldq
std
test
sbb
push
bt
mov
xchg
jl
frstor
decl
shrl
sbb
cs
sbb
add
mov
movsb
xchg
cmc
cli
hlt
ret
repz
aas
dec
inc
int3
stc
mov
jno
inc
xor
jg
mov
out
adc
adc
xor
and
cmp
mov
cmp
mov
fsub
inc
cli
aas
call
sub
fnsave
cmp
lock
xchg
cmc
clc
pop
xchg
inc
xchg
shll
push
test
mov
pop
jg
adc
mov
jae
popa
xor
or
inc
xchg
loop
push
rclb
shlb
and
adc
pop
mov
or
or
popf
in
and
stos
sub
and
sti
sbb
or
adc
fstpt
ss
xchg
stos
dec
clc
jae
dec
js
out
xchg
add
js
test
jae
pop
inc
dec
jb
fildll
dec
cmpsl
push
ret
sub
sbb
pop
hlt
inc
jno
and
sahf
ficoms
mov
fstpl
scas
mov
mov
cs
into
jno
in
push
cltd
jl
sahf
mov
ret
dec
and
inc
les
shll
cld
cwtl
push
repnz
movl
or
repz
mov
inc
lods
inc
push
outsl
rolb
mov
and
gs
pop
lods
movsb
aam
outsl
andl
lods
repnz
movsb
daa
push
and
xchg
cmpsb
stos
andl
sahf
nop
daa
and
pop
int3
jp
sub
lahf
fsubs
mov
das
xchg
rolb
in
jae
adc
sbb
or
jmp
fnstenv
pop
mov
sub
fdivrs
and
inc
sub
fcom
fidivl
xchg
mov
add
inc
iret
adc
jno
mov
push
nop
jmp
les
dec
sub
xchg
jge
popa
call
sub
sarl
and
imul
mov
mov
stos
dec
aas
push
test
xlat
je
jbe
in
into
js
fs
cmp
mov
dec
jbe
push
xlat
cli
add
xlat
sub
jp
mov
or
xor
in
or
inc
sbb
enter
jbe
mov
cld
ffree
pop
aas
adc
aad
stos
out
add
test
into
mov
inc
sbb
rorb
repnz
jo
xor
loopne
fisttpll
movsb
mov
mov
and
lret
call
lock
cmpsl
lret
push
jle
xchg
imul
dec
xchg
enter
out
or
cmpsl
mov
pusha
stos
sub
or
inc
iret
fbstp
sub
xchg
xor
jb
loop
mov
cli
loop
call
sbb
sbb
ljmp
adc
dec
ret
cltd
call
or
lods
sub
cmpl
test
sahf
rcrl
inc
out
nop
dec
push
fists
add
mov
out
negl
repnz
fdivl
and
jo
dec
out
mov
add
mov
fisttpll
in
in
adc
jp
push
mov
mov
std
cmp
jns
lea
jne
mov
cmp
push
lods
nop
add
xchg
and
stc
pop
mov
out
loop
mov
aad
fs
loop
xor
inc
adc
shll
cwtl
xor
adc
repz
int3
sub
sahf
inc
out
inc
bound
pushl
stc
adc
dec
or
fstl
mov
push
je
adc
stos
sub
push
scas
push
xchg
je
cwtl
rcrl
nop
adc
int
scas
loop
adc
or
scas
rcll
push
inc
dec
sub
dec
popa
xorb
mov
cmp
sub
xor
outsl
rcr
int
and
std
pop
jns
out
leave
mov
add
inc
cmp
sub
js
push
sbb
mov
adc
mov
inc
mov
mov
adc
mov
sti
and
sub
add
popf
mov
mov
cmc
scas
inc
cmpsb
sar
int3
ficomps
mov
packssdw
cmp
pop
add
subl
mov
je
pop
popf
cmp
icebp
aad
data16
call
inc
jns
cmp
das
xor
stc
stos
out
scas
ja
inc
rorb
bound
stc
mov
sti
js
push
divb
jbe
jb
and
xchg
mov
mov
gs
jmp
shrl
adc
jmp
dec
out
lret
adc
fbld
cld
movzwl
add
sub
in
sbb
stos
cmc
sub
aam
data16
mov
jns
adc
sbb
in
imul
cmp
clc
jmp
clc
inc
sbb
ret
sub
xchg
stc
and
punpckhwd
outsb
push
ljmp
pop
inc
js
shr
scas
push
jb
mov
inc
aam
arpl
adc
sar
and
push
popa
and
xchg
mov
loopne
dec
ja
mov
xchg
and
outsl
lock
mov
pop
mov
mov
cmp
iret
jnp
out
andb
mov
sub
xor
push
stc
test
ds
int3
add
xchg
and
call
shlb
je
mov
jae
leave
call
das
sbb
mov
push
jno
loop
push
mov
lret
mov
in
sub
adc
dec
add
je
xor
xchg
outsb
aas
mov
ljmp
movsb
or
pop
push
and
test
in
loope
sbb
stos
and
push
call
inc
mov
daa
mov
aam
fwait
dec
pop
test
ljmp
aam
sub
pop
push
loope
sbb
mov
jmp
test
ficoms
dec
mov
push
ljmp
inc
lcall
lock
pop
enter
sbb
xor
hlt
xchg
scas
repz
mov
push
inc
mov
int
fnstcw
push
lcall
lret
fs
jns
push
jp
mov
out
inc
mov
xor
sbb
das
aad
cmp
push
mov
cmp
out
test
out
sub
pushf
xchg
cmp
dec
pop
ljmp
jbe
mulb
jle
jbe
and
fs
dec
and
pop
jns
out
imul
mov
popf
pop
shr
fmuls
xchg
or
cmp
add
inc
jge
pop
push
sbb
inc
mov
jne
mov
rorb
sub
mov
pop
and
fsubrs
and
fcom
test
pushf
in
mov
repnz
filds
jno
aaa
push
repz
insl
adc
push
repnz
adc
call
out
je
inc
loope
push
mov
sahf
xor
cmp
stos
lahf
mov
sub
je
jns
or
int3
lock
sbb
sub
orl
arpl
or
jle
loope
xchg
push
rcl
fst
leave
ljmp
mov
push
inc
out
inc
mov
lods
pop
and
fisttpl
aam
dec
sub
movsb
stc
cmpsb
dec
fldenv
push
push
fistps
and
cmpsl
push
add
mov
inc
pop
push
repnz
gs
das
imul
push
xchg
insl
lret
div
adc
push
cmp
pop
stc
and
cwtl
xchg
iret
dec
inc
push
imul
in
hlt
or
out
pop
out
jne
add
fstps
jg
mov
cld
xchg
cs
mov
push
nop
mov
add
mov
loope
xor
mov
cltd
jp
cli
stos
xchg
aas
add
push
enter
mov
bound
adc
fwait
fs
mov
or
jg
repz
scas
dec
mov
jl
inc
cmovp
aad
lret
push
xchg
rcll
sub
xchg
lea
push
stc
fimull
leave
les
dec
shl
inc
mov
and
pop
xor
mov
popa
test
mov
ror
pop
add
mov
imul
repz
arpl
mov
mov
or
push
stos
xchg
push
push
dec
push
jae
clc
push
out
jl
psubsw
enter
sbb
dec
dec
sbb
mov
pop
lret
lds
sbb
enter
stc
loope
pop
mov
mov
or
mov
dec
je
fldenv
shll
sbb
pop
imul
dec
pop
jae
inc
adc
jns
sar
fdivs
sub
xor
mov
pop
adc
and
cmp
add
ds
pop
mov
xor
cmpb
dec
divb
dec
mov
arpl
in
mov
movsb
or
add
jge
ficompl
sbb
and
scas
cs
xchg
adc
xchg
jle
lret
jb
xchg
dec
adc
cmp
movsl
mov
aad
cmp
jl
cmp
std
inc
jl
jbe
push
and
jmp
ss
push
enter
cmp
stc
cmc
xchg
daa
popf
fstl
jle
and
iret
pop
addl
adc
or
call
pop
mov
dec
je
xor
dec
testl
adc
mov
xor
pop
dec
scas
mov
mov
add
push
in
lock
dec
test
test
sar
movsb
sarl
push
cmc
movsl
sub
sbb
cli
repz
cmpsl
jg
test
divb
jne
addr16
mov
nop
fdivl
jp
fwait
into
lods
lret
add
sub
lock
cmp
movzwl
rcrb
dec
jge
xor
mov
jl
or
loop
inc
fsubl
in
and
xchg
pop
push
adc
cmp
push
mov
xchg
push
in
push
add
mov
inc
inc
imul
loop
imul
xor
xlat
xchg
lods
adcl
movsl
jae
mov
imul
cmovl
sti
shr
int3
cmp
fs
adc
rcrl
jle
nop
fwait
dec
push
and
xor
dec
or
and
int3
pop
sub
adc
sub
or
push
lds
xorb
cmp
pop
loopne
xchg
cmpsb
pop
in
imul
ljmp
mov
mov
or
xor
aam
mov
shll
xor
cmp
fs
outsl
jecxz
test
inc
jo
aam
imull
xor
aas
cmp
and
stos
daa
les
mov
mov
push
cmpb
or
fldenv
pushf
mov
mov
sbb
insl
pop
pop
push
add
icebp
mov
sub
xlat
scas
scas
lcall
or
pop
test
mov
mov
fisttpll
lods
fnstsw
push
xor
daa
and
cmp
dec
testl
jbe
mov
pop
ficoms
arpl
rorl
dec
push
cmpb
or
out
in
fistl
mov
xchg
les
fldenv
dec
jle
aas
add
fs
in
enter
aad
mov
test
xor
cmpsl
or
xchg
push
mov
jns
cmp
in
insb
sub
cs
xchg
mov
movsl
mov
mov
inc
rcl
inc
inc
jecxz
jne
insl
nop
das
push
cmpsl
cltd
mov
cmp
cwtl
adc
push
mov
stos
inc
mov
jl
mov
sub
loope
push
adc
add
mov
mov
push
pop
push
push
fstpt
push
xorb
cld
imull
es
ja
xchg
in
mov
dec
subl
insl
pop
jg
scas
push
xor
and
and
stc
jae
mov
js
push
fildll
jne
sbb
mov
ret
das
push
xor
scas
shl
faddl
push
xor
loop
add
jne
adc
push
pop
jp
sbb
gs
cmovo
jnp
add
and
cmp
cltd
sti
in
stos
xchg
pop
mov
loope
ljmp
lret
mov
cmpsb
xor
sub
and
aaa
pop
in
xlat
out
sub
incl
mov
loope
pop
mov
in
pop
loopne
pop
icebp
adc
addr16
call
pop
fsubr
das
sbb
call
add
fldcw
fisttpl
mov
xor
sbb
mov
bound
fadd
sub
mov
out
cmc
xchg
cld
out
pop
jecxz
hlt
mov
or
mov
in
jne
xor
mov
notb
cli
pusha
stos
mov
push
jae
and
fbld
xchg
leave
in
cmp
adc
mov
movsl
mov
mov
xchg
push
xchg
push
into
in
mov
mov
clc
xor
push
mov
jae
stc
sub
sub
jmp
mov
sbb
sub
pushf
faddl
ret
sbb
je
daa
inc
jne
adc
mov
in
sub
test
inc
ret
dec
xchg
push
movsb
cltd
cmp
into
xor
mov
or
daa
call
into
mov
les
cld
add
jbe
in
adc
cmp
mov
sub
jmp
mov
ds
mov
xor
fidivs
iret
sub
jl
cmp
dec
sbb
popf
or
xchg
frstor
mov
dec
aas
xor
fwait
lret
out
pop
jb
mov
cld
cmp
fidivs
imul
fadds
or
jae
mov
ds
repnz
cli
mov
jmp
jle
imul
and
inc
mov
mov
loope
sbb
mov
xlat
jo
mov
push
mov
lock
mov
in
jns
ret
cmpl
sub
inc
adc
lods
mov
sub
mov
test
xor
and
mov
jae
xor
and
inc
lods
icebp
pop
cli
lods
jne
or
sbb
inc
push
push
xchg
cmp
insl
mov
ss
aam
test
imul
add
int
add
hlt
popf
orl
dec
les
and
aas
dec
pop
cmp
daa
std
lcall
or
mov
int3
cmp
xchg
pusha
loope
test
nop
in
or
lods
data16
movsl
ds
mov
test
loopne
mov
pop
sub
test
mov
loopne
outsb
mov
test
mov
mov
jp
sbb
cmp
das
pop
sbb
rclb
fstl
push
orb
lea
and
and
add
mov
js
adc
fcmovb
add
aas
jne
sub
popa
lods
mov
sub
mov
adc
pop
int3
std
adc
and
clc
lret
dec
mov
stos
cmp
insl
pop
adc
ljmp
jbe
leave
mov
stc
mov
adc
push
mov
sub
ss
int
lods
fbld
sbb
mov
inc
iret
cwtl
xor
sub
loopne
test
fisttpll
push
mov
rorb
mov
cmp
lahf
addr16
sbb
lods
cli
sbb
mov
xchg
pop
and
xor
xor
scas
cmpsb
ds
cld
in
sarb
fcmovb
mov
xchg
mov
sub
popf
test
cmc
aas
rolb
or
negb
cmpsb
push
repz
adc
dec
mov
pop
mull
mov
pop
inc
out
xchg
mov
cld
xchg
push
lds
lea
xor
mov
mov
pop
xor
push
insl
xchg
lods
sar
sbb
rclb
and
shrl
sbb
pop
adc
imul
push
nop
mov
sti
and
into
xchg
pcmpeqb
pop
dec
push
mov
lret
jae
dec
fbld
les
loopne
jg
sub
mov
mov
and
rcll
mov
dec
test
and
inc
sbb
les
or
insl
lock
push
jmp
insb
jp
dec
je
xor
iret
testl
adc
pop
loop
pop
sahf
arpl
adc
add
imul
adc
out
jecxz
cmpsb
add
pop
cld
xchg
push
xchg
xchg
jne
sbb
jmp
xor
aam
std
dec
bt
add
jle
mov
push
jmp
jo
mov
dec
inc
stos
cld
mov
jg
mov
jnp
clc
cmp
pop
jns
push
push
push
orl
out
lods
jae
inc
xlat
stos
add
test
jo
xor
mov
or
and
stc
pusha
ficompl
fimuls
jp
jle
mov
addr16
fnstsw
mov
pop
outsl
cmp
push
dec
add
sahf
push
jle
and
push
das
cmp
mov
stos
inc
cmpb
in
push
inc
out
imul
pop
xor
enter
push
jecxz
xlat
jns
sbb
xlat
gs
inc
cmp
cli
xor
mov
das
into
adc
push
jno
dec
in
ret
data16
test
sub
aas
test
andl
jae
xor
in
xchg
cmc
lcall
xchg
adc
call
std
xchg
cmp
cmpsb
pop
push
inc
mov
cld
pop
inc
mov
sbb
les
mov
cmpsl
fisttpll
std
sarl
aas
push
mov
jb
cmpsb
rolb
sbb
and
xor
btr
test
stos
dec
xor
gs
inc
test
jmp
push
dec
loope
jl
scas
pop
fs
jbe
mov
xor
sbb
std
cltd
mov
in
dec
cmpsb
xor
jne
aam
and
sahf
aam
jecxz
ss
xor
ucomiss
in
into
sbb
pushf
add
jne
bsf
lahf
and
rcl
pop
mov
pop
lret
mov
data16
or
jge
pop
stos
and
push
shll
mov
loopne
push
inc
dec
je
push
dec
xlat
dec
loope
push
ljmp
jge
cmpsl
imul
hlt
fcomps
jl
sub
xchg
adc
repnz
scas
scas
mov
mov
cmp
nop
and
jb
jno
hlt
or
out
pminsw
iret
lods
insb
pusha
pushf
std
sbb
cwtl
dec
and
call
out
jmp
lret
jp
xorl
je
add
lea
ret
mov
shrl
cld
lcall
sub
fidivrs
pop
jae
clc
pop
cmpsb
aad
out
out
adc
cmp
call
mov
loope
push
xchg
and
sbb
cmp
mov
mov
push
mov
pop
dec
sub
insl
mov
xchg
push
fcompp
xor
cwtl
leave
mov
sbb
add
pop
ret
sub
jo
sub
ja
cmp
sbb
xor
mov
pushf
xor
adc
cwtl
repz
bound
cmpsl
pop
sbb
pop
imul
les
lea
cmp
das
lahf
xor
cmc
sar
jp
jecxz
adc
in
repz
and
sbb
add
push
inc
jbe
dec
cs
pop
adc
push
push
pop
out
repz
pop
dec
lock
enter
push
gs
mov
lea
sbb
and
push
fsubr
inc
inc
dec
sbb
push
jno
iret
xchg
movsb
push
test
mov
jmp
push
imul
lods
ficoml
fdivp
sbb
loope
mov
pop
push
dec
lds
daa
rclb
imul
xor
add
push
fdiv
test
orb
scas
cli
mov
fstpl
adc
adc
cmc
fidivs
ret
mov
call
mov
stos
stos
cli
xchg
sbb
clc
jno
ja
iret
pop
fcmovne
lahf
es
mov
jmp
pop
fadds
push
in
mov
fidivrs
push
jge
loope
xchg
fisttpll
xor
ss
mov
mov
cmp
or
aad
jns
mov
lea
sub
cmp
clc
push
jbe
fcmovu
call
aad
mov
adcb
cld
sub
fistpl
bound
psrlq
lahf
sbb
xchg
in
fists
mov
lods
mov
in
imul
out
sbb
dec
repnz
stos
add
xlat
mov
icebp
inc
repz
lret
cmpsb
push
lahf
mov
fdivrs
pop
and
cmpsb
sbb
pushl
push
pusha
scas
xchg
sub
xchg
jge,pt
sbb
push
and
pop
sti
cmpsb
pop
push
mov
daa
pop
pop
aas
cmp
cli
imul
inc
nop
push
jmp
add
icebp
outsb
ss
jmp
cmp
jg
subl
or
daa
push
mov
cmp
pop
js
jo
repnz
push
push
cld
mov
sub
pop
ret
movsb
mov
cmc
loop
mov
div
mov
int
sub
jnp
lahf
int3
lcall
test
cmpsl
bound
leave
jecxz
mov
pop
loop
ret
fidivrs
pusha
and
loopne
pop
xchg
cmp
dec
mov
mov
popa
loopne
inc
xchg
cmp
aad
jmp
jnp
adc
mov
repnz
adc
push
and
or
es
lods
stos
mov
pop
hlt
sub
pop
and
lahf
add
cmp
loope
rcr
test
bound
jo
cwtl
dec
jbe
aam
push
adc
pop
or
pop
lock
and
push
adc
sub
xor
sbb
jns
push
dec
adc
push
mov
dec
lcall
decb
fistpll
adc
out
sarb
inc
cmc
jecxz
add
push
jbe
les
clc
push
stos
imul
dec
push
aad
jne
ret
add
pop
jle
fiaddl
mov
mov
inc
push
popl
popa
push
sub
dec
fwait
jae
fstpt
sub
cmp
adc
cmp
int
jae
pushf
ficoml
bound
sbb
add
fsts
adc
jae
divb
adc
sbbl
lahf
inc
push
jns
imul
shrb
cli
in
mov
sub
pushf
and
inc
sahf
lock
cmpsb
pop
int
xchg
mov
ljmp
lods
sbb
das
por
sbb
mov
lahf
ret
sub
xchg
sti
jae
ds
xor
mov
cmp
pop
les
out
xchg
sub
mov
pop
push
jmp
ja
xchg
andb
out
clc
ret
xor
cli
jp
aaa
xchg
ret
mov
push
dec
mov
lret
fsubl
out
lods
ret
mov
or
push
clc
mov
dec
cmp
int3
std
rep
push
fs
inc
mov
or
xchg
dec
addr16
stos
mov
dec
rcl
gs
dec
outsb
or
in
pop
mov
xchg
mov
xor
enter
adc
ds
pushf
enter
inc
inc
enter
add
adc
arpl
adc
xchg
xchg
adc
ljmp
sub
sarl
stos
sbbb
std
mov
xor
inc
adc
neg
pop
sub
pop
sub
stos
scas
xchg
lea
add
mov
outsl
mov
and
aaa
and
bsf
and
inc
call
xor
dec
out
sub
xor
addr16
in
sub
push
test
ret
insl
out
push
fistpl
out
xchg
xchg
xchg
fdivrs
pop
and
out
lcall
pop
or
cltd
adc
bound
xchg
out
pop
dec
cwtl
addb
push
jmp
dec
popf
sahf
add
je
ja
dec
dec
ja
dec
cmp
sbb
loop
cs
dec
sahf
mov
insb
dec
pusha
sbb
dec
sti
cld
push
insl
xchg
and
jo
push
wrmsr
lcall
jns
outsl
mov
mov
push
mov
mov
mov
xchg
negl
cmp
imul
nop
adc
outsb
imul
mov
sub
push
add
inc
scas
in
or
mov
adc
push
xchg
push
scas
add
enter
adc
dec
ja
or
add
sti
test
in
cmp
adc
and
push
mov
jo
int3
insb
aam
mov
out
fwait
cmp
sub
fisubl
inc
sbb
mov
and
idivb
fstps
sarb
iret
xchg
or
jp
repnz
mov
movsb
test
inc
fldt
data16
jl
sahf
sbb
test
bound
insb
pop
mov
fists
dec
dec
mull
add
push
sub
addr16
out
nop
aam
addr16
pushf
cmp
mov
adc
sbb
or
adc
pop
jnp
je
jmp
mov
dec
movsl
psrlw
push
stc
das
lds
mov
mov
in
xlat
mov
aaa
xor
int
adc
sbb
push
add
popa
or
dec
stos
sub
imul
insl
or
or
inc
jge
in
mov
std
xlat
mov
mov
fisttpll
gs
faddl
pop
push
hlt
add
cmc
adc
je
cmp
jns
mov
jb
jg
mov
push
insl
push
lods
sub
jbe
inc
stos
or
das
sub
sub
push
dec
in
mov
icebp
or
ds
addr16
add
popf
ret
fdivs
xor
aas
mov
aas
jb
cmp
into
jmp
fadd
push
test
ss
and
and
in
xchg
mov
xchg
pop
push
mov
lahf
fildl
imul
sbb
stos
or
mov
add
dec
test
xchg
pop
inc
sub
xchg
pusha
sub
xor
or
rorl
cwtl
jbe
ja
in
std
xchg
test
popa
xor
sub
lods
add
add
mov
mov
mov
pop
adc
mov
outsl
ss
sub
mov
loope
push
repz
dec
mov
and
inc
repz
push
mov
filds
int
dec
loopne
mov
hlt
or
pusha
mov
lcall
js
push
mov
jge
sub
cmp
in
fistpll
cmp
push
xor
cld
jne
lock
lret
mov
test
ljmp
cltd
mov
xchg
mov
stos
push
in
mov
cmpsb
pop
popa
invlpg
and
imul
and
scas
iret
cld
lahf
and
push
add
sub
push
push
popw
test
out
cltd
or
inc
xchg
inc
ret
dec
mov
lahf
or
cmpsl
inc
jge
jb
jb
mov
hlt
subb
pop
das
add
jns
dec
stos
adc
stos
test
out
add
xor
das
jno
jl
sahf
sarb
pop
sbb
xchg
cmpsb
fstp
mov
push
scas
gs
inc
or
fisubrl
movsl
leave
mov
add
sub
insb
xchg
mov
iret
stc
mov
mov
repz
or
mov
cmovno
xchg
or
cmpsb
mov
pop
rorl
push
inc
std
dec
sub
ds
jmp
lahf
adc
bound
lock
xchg
mov
dec
arpl
xchg
push
sbb
or
cld
enter
add
xchg
cmp
scas
lahf
int3
movsl
cli
aas
loope
dec
jo
sbb
mov
xor
ja
mov
sbb
stc
mov
mov
sub
xchg
push
out
lret
dec
xlat
pop
inc
push
xor
jp
jns
gs
pop
cmp
gs
push
push
inc
pop
push
test
mov
cmp
dec
out
repz
push
dec
pushf
loope,pt
insl
push
mov
cwtl
mov
arpl
sar
push
adc
aaa
pushf
jle
dec
sub
and
push
xor
in
jl
adc
fcompp
sbb
std
mov
cmpsb
xor
push
and
mov
icebp
inc
mov
inc
xchg
out
cmpsl
sub
pop
pop
push
fs
pop
stos
jmp
pushf
shll
push
cli
lcall
jg
push
xor
sub
xchg
fwait
lods
pusha
inc
jle
imul
pop
jp
decb
int
popf
ljmp
or
dec
sahf
pop
mov
cld
jmp
mov
call
cwtl
pop
mov
lods
or
dec
sub
subb
clc
fwait
aad
leave
xchg
repnz
inc
fidivs
shl
cmp
sub
add
push
mov
es
xchg
mov
pop
enter
outsb
aaa
aaa
jmp
flds
and
mov
mov
sbb
xchg
iret
xor
jne
rclb
push
sub
sub
les
inc
fbld
stos
xchg
and
sahf
dec
adc
imul
stos
ror
lods
int
ret
pop
insl
or
add
pop
jne
adc
div
inc
xor
pop
inc
xchg
xchg
cmp
pusha
std
js
pop
pop
outsl
and
fcoms
pusha
outsl
pop
adc
out
leave
or
in
in
fidivl
mov
sub
xchg
mov
lock
jae
push
sub
out
stos
add
out
fists
mov
jg
adc
add
daa
pop
pop
aas
scas
sbb
shll
fisttps
ja
pop
and
and
loope
pusha
js
push
stc
mov
ficompl
push
mov
mov
sti
test
cmp
jmp
dec
cwtl
pop
mov
inc
mov
in
and
stc
popf
mov
fcmovb
rcrl
outsb
xchg
pop
jae
xchg
sub
fadds
mov
sub
inc
mov
xchg
push
xchg
insl
jecxz
jl
std
dec
lods
xchg
mov
shrl
shrl
call
int3
adc
inc
and
adc
call
sbbb
push
sub
mov
pop
rcll
imul
xchg
inc
push
mov
pusha
les
repnz
dec
mov
push
das
int3
mov
in
xchg
mov
sub
insl
ss
dec
pop
mov
cs
sbb
mov
jns
test
fldl
adc
leave
xor
add
out
push
scas
mov
sbb
and
test
dec
sub
inc
xchg
addl
cmc
dec
ffree
sahf
dec
mov
bound
pop
clc
or
push
push
daa
stos
scas
cmp
sub
mov
add
xlat
imul
push
sub
or
push
movsb
xchg
les
sub
push
jmp
in
pop
sbb
jo
es
pop
mov
lahf
mov
pushf
call
out
xor
js
repnz
jb
jb
mov
fmull
or
adc
jb
mov
das
sahf
mov
add
ret
inc
popf
push
ss
enter
in
movsl
cmc
sti
push
pushl
xchg
sahf
cltd
mov
pop
push
push
cmpsl
lret
xor
std
cmpb
cmc
push
pushl
lea
loope
sbb
pop
xchg
movb
rcr
pop
dec
lds
inc
sub
jg
test
xchg
mov
fadds
push
test
pop
dec
dec
cmp
cli
xor
or
jecxz
xor
fstps
dec
sbb
xchg
sbb
inc
jle
lds
rcrb
add
mov
dec
loope
loope
xor
subb
test
add
dec
ja
fwait
xchg
xor
sarl
xchg
and
ljmp
adc
dec
push
pop
imul
and
repz
inc
les
sub
mov
shrb
bound
cmpb
rclb
adc
adc
xchg
jo
xor
adc
shr
aaa
loop
sub
mov
jae
pop
add
adc
dec
movsl
adc
pshufw
int3
pop
sub
mov
popf
gs
adc
les
inc
out
repnz
mov
cmp
inc
mov
test
jno
nop
push
scas
rolb
pop
sbb
lea
mov
or
xchg
cld
loope
insl
arpl
fs
inc
or
dec
jo
jl
lcall
call
mov
adc
ret
xchg
and
rolb
insl
in
in
imul
inc
outsl
mov
push
lret
sahf
mov
inc
sahf
cmpl
add
lods
cld
fidivrs
or
or
jp
cwtl
dec
inc
cmp
repnz
fcom
jnp
jae
jo
mov
inc
mov
mov
cmp
fwait
mov
sbb
movsl
lods
aaa
add
mov
jo
lods
pop
cs
pushf
mov
out
popa
jmp
lods
push
test
popf
mov
adc
mov
jl
mov
jle
jle
sbbl
mov
dec
loope
mov
int
mov
sbb
movsb
mov
push
pop
add
push
sub
outsb
cli
push
push
idivb
add
nop
test
sbb
jno
xchg
lods
cmp
push
icebp
mov
push
mov
mov
ja
push
push
orb
roll
lret
push
mov
out
cld
lds
cltd
ds
repnz
das
mov
rcll
sbb
or
out
aam
xchg
add
jno
sub
cmp
repz
movsl
dec
adc
jns
mov
mov
imul
mov
out
inc
pop
jb
in
xchg
std
jno
cmp
pop
mov
mov
cwtl
or
mov
int3
jge
mov
nop
xchg
and
cmpsl
cltd
push
out
mov
cmp
scas
adc
dec
cmpsl
divl
shll
sub
xchg
mov
jmp
fsubr
rol
lret
xchg
test
sbb
in
js
or
push
mov
stc
cmp
jb
mov
push
cmp
pushf
es
pop
divb
ret
mov
adc
imul
fdivr
inc
pop
insl
cld
lock
mov
xchg
repz
sti
and
jmp
jbe
jo
pop
aam
or
movsb
cltd
and
jmp
lret
adc
cmp
adc
dec
cmp
pop
cmp
mov
int3
cmp
adc
xor
aaa
sbb
or
inc
ret
dec
icebp
cmp
int3
jge
jmp
jmp
inc
lods
lea
test
push
in
in
pop
leave
inc
add
inc
icebp
movsb
aaa
fistpll
in
into
cmp
js
test
mov
stos
icebp
mov
lods
mov
add
sub
push
dec
ret
mov
pop
mov
fsubrl
je
enter
and
mov
pop
cmp
sbb
or
xchg
or
stos
xor
push
and
mov
vpaddusw
adc
nop
jo
cmp
or
insl
pop
fidivrl
stos
cmpsl
xor
jmp
jb
scas
and
adc
lea
mov
jecxz
mov
sarb
adc
jns
rcrl
cmpb
or
in
xchg
xor
add
push
aam
ficoms
cli
cld
arpl
or
inc
pop
pop
into
mov
pop
repnz
add
ss
mov
and
push
mov
addb
mov
mov
or
dec
pop
pusha
rcrb
xor
adc
xor
or
cmp
into
adc
hlt
shlb
repz
addb
out
pop
iret
add
lods
fwait
adc
mov
notb
lret
xor
pop
daa
lods
xchg
add
sub
xor
xchg
scas
mov
mov
and
aaa
pushf
out
insb
mov
push
scas
sub
jl
int
in
cmpsb
les
inc
mov
and
sub
add
mov
adcl
ss
jmp
pop
lea
in
cmp
cld
pop
jmp
adc
push
mov
jle
out
loopne
scas
imul
jae
nop
sbb
scas
push
std
stos
push
lock
stc
out
add
lods
lcall
push
add
push
ret
pop
ljmp
int3
cld
or
mov
fcoml
add
orb
shlb
jle
mov
dec
les
xchg
mov
pop
mov
cwtl
lahf
mov
mov
insb
and
roll
inc
xor
loope
jbe
ja
jnp
pop
aad
mov
jae
imul
test
inc
adc
lea
in
xchg
rcrb
jl
cltd
mov
mov
push
outsb
movsb
sub
stc
inc
cli
stos
fs
adc
inc
cmp
test
mov
sbb
pop
and
pop
cmpsl
call
ret
adc
fiaddl
jbe
ja
sbb
in
outsb
jge
fwait
inc
loop
fmul
stos
lret
mov
sub
rclb
stos
pop
lds
push
xlat
inc
and
xchg
adc
jbe
mov
mov
out
and
push
add
popa
aad
insl
adc
dec
xchg
imul
pusha
mov
sbb
xor
dec
dec
xchg
adc
add
popa
scas
inc
xchg
rolb
repnz
aam
dec
lods
dec
add
stos
and
sub
leave
in
shrl
cmp
insl
scas
leave
sub
ret
cmp
ret
mov
push
mov
inc
mov
and
sub
adc
lret
xchg
mov
dec
nop
push
push
jne
fisttpl
cmp
mov
mov
cld
or
jns
call
lahf
push
dec
pop
arpl
mov
lret
scas
push
pusha
mov
xchg
notb
jnp
dec
int
ss
push
mov
pop
cmc
sti
aas
out
lock
sti
rolb
mov
sub
mov
sub
cmp
mov
out
pop
sti
pop
idivb
cs
sbb
stos
inc
pop
lock
sub
mov
mov
lds
shr
xchg
push
inc
cmp
into
incb
pop
pop
mov
stos
mov
cmp
add
sub
cmp
sarl
in
mov
jecxz
aas
jbe
pushf
nop
sub
out
iret
inc
jecxz
jp
scas
int
xchg
mov
out
ljmp
push
mov
dec
mov
xchg
and
push
xchg
xchg
adc
pop
mov
in
movsl
inc
movsl
clc
add
push
lock
bound
aad
cmp
outsl
test
out
js
push
outsb
jp
lret
insb
inc
inc
push
xor
adc
rcr
pushf
mov
int3
xor
js
dec
sarb
xchg
notb
aas
mov
adc
jno
fadds
and
push
out
or
out
filds
dec
sub
rcll
jmp
xor
bound
and
add
and
stos
pop
pop
arpl
mov
mov
in
iret
cld
dec
xchg
push
lods
mov
pop
push
jecxz
and
mov
dec
push
pop
aad
xchg
cld
lods
push
loop
push
fists
ja
adc
lcall
dec
enter
outsb
dec
stos
lods
push
mov
or
xchg
mov
jecxz
adc
insb
mov
in
xchg
int3
jle
pop
mov
pop
fmuls
fwait
lds
hlt
sti
push
out
inc
faddp
inc
jne
or
dec
mov
xor
or
out
je
push
push
ljmp
out
inc
idiv
enter
dec
aad
cltd
into
std
outsl
outsl
rcrl
pop
mov
aaa
imul
xchg
cwtl
cmp
fisubrs
lret
mov
xchg
sbb
incb
cmp
test
or
ss
stos
rorb
movsl
inc
sub
mov
jmp
scas
or
or
pop
xchg
mov
in
mov
pop
into
cli
scas
cmp
insl
mov
pop
cltd
mov
loope
movsl
incb
rolb
aas
clc
adc
xor
addr16
in
cmp
mov
mov
shrl
inc
ds
scas
cltd
xchg
je
mov
adc
or
pop
inc
in
add
pop
sub
arpl
and
sbb
stos
outsb
dec
dec
test
pop
xor
aad
mov
or
mov
and
shll
pusha
int
push
sub
dec
stc
insb
aaa
mov
dec
in
cmp
adcb
jmp
dec
push
int
mov
pop
adc
push
pop
or
ficomps
inc
lcall
ja
jne
add
cli
das
adc
and
loope
stos
cmp
ret
push
jno
push
lcall
rcl
cmc
and
orl
inc
dec
mov
push
xchg
rcrb
inc
fistps
and
dec
jl
push
xchg
pop
mov
sub
movsb
pop
push
cmp
inc
sahf
gs
xor
jmp
int
and
cmpsl
les
call
jb
pushf
inc
mov
pop
cmp
pop
dec
int3
stc
leave
pop
lret
std
imul
pushf
mov
cwtl
dec
mov
arpl
lds
rcr
sti
pop
push
add
push
pop
xchg
aam
mov
fsts
int
adc
push
mov
pusha
sbb
xor
sub
into
pusha
lret
or
movsl
fs
jl
cli
push
mov
pusha
or
xlat
js
or
repnz
xchg
sti
jno
fsub
mov
arpl
mov
cli
enter
push
sub
fidivs
and
jbe
jns
scas
test
cmpb
stos
xor
jmp
movsb
sub
jmp
jp
dec
js
leave
std
cmp
push
mov
jp
add
in
outsl
movsb
push
stos
addr16
movsl
or
push
into
test
rcrb
add
or
push
int
movsb
push
adc
cmp
cmp
fidivs
mov
sub
jle
jg
xchg
add
aam
lods
test
out
outsl
cld
addb
mov
sub
enter
sbb
xchg
ljmp
leave
lea
and
dec
jae
aad
jae
xchg
leave
shlb
addr16
popa
arpl
repz
lahf
cs
test
ljmp
mov
fsubrs
shll
aas
es
fs
jge
cmpsb
dec
push
enter
repz
pop
mov
sbb
mov
or
pop
imul
repnz
dec
int
sbb
pop
les
adc
and
mov
stc
jae
pop
inc
and
int
and
pop
js
adc
add
std
rcrl
cmc
popf
mov
cld
ret
push
aas
fdivrs
out
push
mov
fildll
cmpsl
sub
cwtl
repz
mov
push
cld
jo
xchg
inc
xchg
jp
shl
dec
lods
shll
mov
mov
aad
negb
jg
mov
add
pusha
and
sub
loop
xchg
lods
or
jo
dec
push
mov
jp
scas
xchg
sbb
mov
ja
xlat
das
and
jbe
ljmp
rolb
adc
stos
fsts
pop
pop
push
push
push
outsb
cltd
mov
enter
pop
fldt
aad
mov
loop
sbb
push
lods
mov
iret
inc
push
mov
mov
sbb
insb
and
jne
inc
lods
outsb
cmp
sbb
jecxz
arpl
jge
inc
dec
jmp
mulb
push
mov
dec
pop
call
hlt
adc
push
add
xor
fisttpl
rcl
mov
in
stos
mov
lret
jp
sbb
gs
sahf
push
mov
sub
sub
into
test
dec
mov
adc
mov
pop
jecxz
add
out
fiaddl
push
push
inc
mov
inc
ret
test
pop
sbb
adc
jns
mov
sarl
jge
mov
not
pop
mov
pop
or
mov
mov
jecxz
pop
fs
push
mov
jecxz
aad
adc
fs
mov
pop
es
push
cmpsb
in
aaa
adc
lods
lods
aas
cmp
or
pop
pop
loope
test
sbb
cltd
outsl
das
loop
cmc
shrb
mov
std
ljmp
inc
gs
sbb
mov
jae
popf
pop
cmp
xorl
dec
aam
enter
pushf
jae
xchg
sub
cmp
ja
fsubl
addl
mov
notl
cmp
sarb
adcl
cmpsl
jb
sub
pop
test
ror
push
mov
xor
xchg
js
add
mov
jnp
out
arpl
and
insl
pop
inc
pop
mov
lock
sbb
jmp
pop
mov
mov
xor
in
adc
int
in
jg
xchg
add
addr16
shlb
notb
sub
mov
stos
mov
inc
sbb
imul
inc
mov
xor
into
xlat
andl
outsb
cmp
popa
clc
sub
outsb
pop
outsb
aaa
out
mov
es
inc
cmp
dec
add
and
sub
mov
mov
nop
pop
pusha
sbb
cltd
or
dec
in
lods
pop
add
mov
fst
loopne
inc
mov
iret
and
pop
mov
adc
lret
call
cmpsb
stos
add
xor
jmp
stc
fs
pushw
jl
hlt
cs
adc
fdiv
jle
and
clc
mov
sub
xlat
ds
pusha
cmp
xchg
add
xchg
sbb
adc
push
sahf
inc
test
inc
and
inc
je
and
xor
mov
shlb
xchg
stos
ja
lret
inc
decb
mov
into
inc
ret
cmpl
cmp
pop
imul
adc
push
mov
xchg
loope
push
xchg
ljmp
mov
test
xorl
adcl
clc
push
aad
movsb
fstl
dec
xchg
fbld
xchg
jmp
cmp
mov
aad
rcll
fs
or
push
ljmp
pop
idivb
jne
stos
loopne
or
imul
daa
and
in
jne
jbe
sti
int3
mov
daa
sbb
push
pop
xchg
push
cmc
xchg
push
sub
xchg
js
pop
notl
xchg
out
les
mov
sub
fs
aam
and
inc
push
leave
mov
cmpb
adc
jne
jne
push
inc
xlat
sbb
pop
bound
mov
arpl
out
subl
mov
shll
jp
mov
and
dec
xor
std
testl
xchg
sbb
ret
pop
push
mov
scas
sbb
pop
mov
cmp
int
jbe
and
mov
pusha
rcr
or
popf
fidivrl
jecxz
jbe
jbe
mov
pop
mov
imul
ja
pop
jbe
fcmovnu
es
out
cmp
in
outsl
int3
stos
mov
ss
dec
cmp
xchg
xlat
xor
xchg
out
sahf
test
out
mov
mov
dec
mov
fs
or
jl
inc
clc
and
mov
pusha
into
pop
xor
mov
rcrl
dec
inc
fs
mov
xor
gs
lock
fisttps
movsl
iret
xor
mov
test
adc
or
dec
mov
mov
xchg
leave
es
aam
scas
jbe
add
cwtl
ja
jae
and
and
popf
aaa
shrb
xor
xlat
xorb
xor
aas
fimull
movsl
icebp
inc
idivl
repnz
inc
cmp
add
push
shl
pop
mov
jl
sbb
mov
add
pop
test
mov
and
sbb
data16
and
and
outsl
cmpsl
mov
and
sub
pop
stos
in
lahf
mov
mov
mov
fcomps
jecxz
out
mov
sbb
cmc
dec
jecxz
xchg
pop
cmp
sahf
loopne
cmp
rcl
xor
or
call
imul
adc
jmp
ret
cmpsl
mov
test
mov
rorl
sti
data16
aas
hlt
jmp
out
pop
enter
dec
lods
jae
aaa
pop
out
loope
cld
insl
push
mov
aas
pop
stos
push
jmp
xor
sub
fadds
pushl
sub
mov
mov
mov
ljmp
ds
mov
cvtps2pd
jno
repz
loopne
aam
fmull
call
lcall
or
add
jmp
in
icebp
and
dec
data16
add
jl
cmp
fs
bound
fistl
incl
xchg
sub
movsl
jp
test
mov
sbb
or
cmp
in
mov
cmc
mov
lock
int3
andl
in
xchg
les
push
std
mov
mov
ljmp
sti
add
sbb
cmp
adc
jmp
xor
xchg
cli
das
lea
ja
popw
sub
xchg
dec
xor
sub
push
cld
add
pop
out
mov
sbb
dec
mov
adc
dec
xchg
nop
jg
decl
mov
test
addb
dec
shlb
hlt
sbb
std
cmp
xor
popa
or
add
bound
cmp
lods
mov
or
sbb
jb
sub
add
cmp
shll
or
xlat
js
loopne
push
mov
jbe
lret
adc
cwtl
icebp
repnz
in
add
mov
cld
out
iret
xor
xchg
jmp
add
dec
cs
test
adc
out
push
imul
dec
sbb
inc
ja
xor
push
out
ret
mov
add
push
push
adc
xor
cmp
fwait
xor
icebp
jno
pop
add
and
mov
cli
imul
sbb
dec
aas
jge
sbb
movq
cmp
pop
cmp
inc
sub
mov
pop
int3
call
gs
and
loop
jbe
std
xchg
lret
mov
fsubl
jl
adc
push
popa
push
and
sbb
lea
jae
test
mov
aas
mov
lcall
mov
inc
sbb
sbb
mov
or
sub
je
pop
cld
shrb
push
in
test
mov
aas
jmp
push
add
add
fmul
cmp
mov
sbb
mov
fsubrs
shl
das
adc
xor
pusha
adcl
scas
fldenv
xchg
fcompl
pop
jno
push
jge
mov
xchg
aas
jecxz
outsb
xor
mov
cmp
stos
movsl
pop
lret
sbb
add
pop
or
out
mov
push
mov
and
cmp
push
dec
mov
cmpsl
in
dec
adc
fldenv
fs
test
cltd
stc
add
orb
dec
popa
lds
sbb
fists
and
sahf
mov
pop
lods
jno
mov
inc
xor
mov
lds
cmp
xchg
or
movsl
nop
sub
mov
mov
sbb
in
sub
sub
mov
fucomip
out
test
in
ss
mov
mov
insb
js
cltd
arpl
shr
icebp
lods
xchg
cltd
fwait
and
or
xlat
push
cmc
mov
dec
in
aad
xchg
cmp
xor
push
cmp
icebp
mov
addl
mov
add
out
daa
int
mov
mov
js
test
pop
ja
data16
outsl
xor
aaa
lods
daa
push
mov
lcall
or
imul
andb
jl
leave
rcr
pop
xchg
dec
inc
loop
mov
into
mov
ljmp
popa
bts
xor
jp
jo
xlat
add
leave
xchg
sbb
jbe
lcall
dec
roll
pushf
dec
push
rcll
mov
dec
and
mov
mov
loope
adc
xor
pusha
cli
cltd
xchg
jnp
cmpsb
jmp
stc
sbb
inc
xchg
movsb
xor
mov
dec
and
dec
and
mov
out
inc
flds
sub
lcall
insl
cmc
and
call
mov
js
mov
jae
loopne
pop
aam
enter
lea
mov
imul
fdivs
cmc
aad
jl
mov
loop
inc
sarb
cwtl
cmp
sub
leave
inc
cmc
xlat
es
ret
rorb
jae
cmp
int
lcall
loop
xor
jno
xchg
ret
iret
pusha
lods
xchg
pusha
aaa
fwait
les
leave
dec
ljmp
or
xchg
push
inc
push
mov
jge
mov
xor
std
jae
dec
sahf
push
mov
into
dec
xchg
pusha
arpl
das
or
dec
clc
add
inc
pop
add
leave
mov
fnstsw
mov
jbe
lods
das
scas
fisubs
and
ss
arpl
int3
inc
push
cmc
sub
outsl
fsts
xchg
mov
imul
xchg
fs
sub
dec
ret
adc
sbb
jp
fldenv
ss
jno
enter
jb
push
lock
inc
pop
rorl
mov
or
ret
fucomp
push
jne
mov
pop
fisubs
adc
sti
rcll
loopne
jno
lock
lock
pop
aam
in
lahf
push
sbb
mov
iret
mov
adc
hlt
inc
in
push
cmpsl
dec
addl
xor
push
and
pop
dec
insl
mov
mov
push
loopne
cmp
gs
adc
push
mov
out
pushf
pop
pop
out
fcoms
in
cmp
xchg
mov
stos
leave
jg
cmp
rorb
mov
mov
loope
decb
push
xchg
cltd
repz
ret
scas
cmp
dec
ljmp
imul
cld
outsl
hlt
lds
mov
mov
pop
inc
mov
addr16
stos
push
push
cmc
lock
rcll
xchg
add
inc
push
push
cmp
stos
xchg
loopne
stos
or
sbb
out
and
imul
sbb
mov
push
shl
xorl
mov
jae
adc
in
loopne
repz
inc
push
sbb
jno
adc
sahf
add
pop
inc
pop
mov
adc
cmp
sub
push
movsb
add
test
rcpps
sbb
cmp
push
adc
pop
imul
xor
js
fidivs
xlat
dec
les
dec
sbb
push
mov
push
sbbl
outsb
xchg
sbb
and
jbe
sub
es
mov
adc
sbb
pop
mov
push
xor
pop
mov
sub
mov
rcl
push
cwtl
and
cmc
movsb
pushf
sbbl
inc
cmpsb
cmp
push
rcll
sahf
pop
les
xchg
ds
xor
mov
sub
mov
fsubl
je
dec
adc
insb
push
in
dec
lods
inc
pop
fcoms
xchg
loop
int3
lods
outsb
mov
add
std
sub
imul
cmc
add
js
sub
adc
cmpsb
push
addr16
inc
xor
idivb
fsubrp
mov
jae
inc
popf
scas
xor
jnp
jecxz
clc
lods
aam
or
fwait
sbb
test
aas
movsb
decl
movsb
xchg
insl
cmp
fwait
dec
aad
and
xchg
outsl
add
scas
inc
call
iret
pop
outsl
push
pushf
dec
add
sarb
insb
movsb
jae
loopne
push
inc
data16
int
iret
jg
sbb
repz
not
imul
push
pop
ljmp
fiaddl
add
dec
jmp
cwtl
or
jle
jecxz
push
ljmp
frstor
jbe
dec
cltd
imul
sub
ljmp
addr16
lret
mov
jns
push
into
ljmp
int
aad
js
mov
sbb
sbb
sbb
int3
jae
das
inc
dec
adc
out
iret
rol
icebp
xchg
loop
fs
fimuls
pop
adc
lahf
ds
lock
pop
cmp
and
pusha
and
jp
dec
push
popf
jl
push
mov
inc
aam
in
or
call
mov
mov
xchg
sbb
sub
jge
push
mov
push
xchg
sbb
dec
mov
mov
popa
pusha
xchg
inc
sbb
push
xchg
sub
lahf
add
dec
cmpb
pop
pop
add
mov
mov
fwait
push
mov
mov
cmc
push
mov
test
inc
data16
lods
jbe
dec
cmc
sbb
lcall
pop
jbe
ljmp
and
xor
jnp
adcb
fdivs
shl
dec
jns
jae
gs
jle
iret
ficoml
and
rclb
aas
in
or
xor
mull
xchg
arpl
lock
jmp
or
test
scas
jmp
scas
jne
cmp
fadds
ja
lock
sbb
mov
sbb
out
divb
repnz
ja
rcrb
sbb
rcll
push
xor
or
push
inc
mov
cmovs
xor
repz
ljmp
pop
jle
stos
dec
jne
cmpsb
jne
xor
or
inc
fldt
adc
mov
roll
mov
ds
imul
inc
xor
fdivl
lret
mov
jmp
subb
gs
test
fnsave
shll
pop
lea
push
inc
push
cld
aad
mov
cmp
xchg
sub
aaa
popa
jle
aad
insb
aam
mov
ret
addb
fcompl
inc
jl
test
sbb
stc
mov
es
lret
call
adc
pop
xchg
pop
xlat
mov
sbb
into
jge
or
dec
out
stc
mov
sub
in
mov
push
lahf
int
push
mov
loopne
rcll
roll
mov
int3
pop
adc
movsl
fldt
inc
mov
sub
jmp
or
sbb
repz
jb
ljmp
cli
xlat
sbb
jmp
or
pusha
dec
adc
cmpsb
addr16
fcompl
repnz
jl
xchg
xor
sahf
add
mov
inc
jbe
insl
or
cmpsl
sbbb
imul
xchg
cmp
rcll
add
scas
lds
imul
dec
xchg
jne
pop
inc
mov
lea
outsb
test
clc
into
lock
addr16
fdivr
shl
xchg
out
sbb
mov
and
shr
fucomi
movsb
mov
mov
cli
cltd
incl
jno
sub
and
push
xor
fcomp
shl
push
sub
sbb
dec
clc
imul
ret
rolb
add
jg
adc
rcrb
add
jb
pop
sbbl
cwtl
xchg
push
pop
jb
adc
data16
syscall
cmp
out
sti
jle
arpl
push
add
cmc
mov
scas
bound
push
lcall
adc
mov
xchg
imul
xor
xor
dec
xlat
xor
jl
add
in
flds
inc
push
icebp
je
fucomi
mov
pop
fistpll
mov
icebp
adc
frstor
test
sar
jb
sbb
mov
cmp
and
sub
jns
mov
fwait
pop
mov
sbb
ss
push
data16
mov
fsub
subl
cltd
sub
jg
pop
mov
mov
cwtl
loopne
add
ret
add
add
push
sahf
mov
and
or
sbbb
or
and
xor
dec
lods
test
push
aas
out
lock
xchg
mov
mov
adc
pushf
es
and
dec
daa
test
stos
cld
cmpsl
inc
sbb
dec
test
mov
xchg
dec
out
cmpsl
cld
insl
xchg
adc
lock
lock
jnp
loop
mov
sub
add
dec
incl
mov
dec
sub
negl
pop
xlat
sbb
push
hlt
loopne
in
or
outsb
or
mov
xchg
js
test
dec
outsl
insl
iret
mov
fidivl
fsubs
int3
shlb
inc
test
sub
jmp
test
dec
push
cli
sti
out
outsb
inc
adc
pop
add
cmp
popa
pop
adc
lahf
dec
daa
ljmp
and
decb
cmp
loope
mov
lods
xchg
lods
mov
lods
adc
pusha
lods
and
adc
sahf
mov
dec
insl
mov
adc
mov
ds
cmp
dec
clc
js
mov
sarl
sbb
jp
insb
pop
enter
jg
sbb
sbb
lcall
adcb
mov
mov
pop
stc
mov
out
shrb
xchg
mov
lods
mov
rcll
sub
stc
loope
sarb
int3
lock
push
repz
xchg
mov
lret
jl
mov
push
inc
lret
std
in
pushf
mov
cmp
dec
adc
insb
dec
call
iret
lock
in
imul
mov
ret
dec
jb
fcom
sub
add
bound
scas
aam
outsb
fcompl
mov
imul
sbb
pop
imul
add
sub
xchg
insb
dec
inc
rcr
pop
out
or
stos
sub
cmp
scas
iret
and
cmc
fisubl
pop
push
ds
shll
sahf
push
mov
hlt
fstpl
inc
out
mov
mov
push
xchg
leave
mov
dec
inc
pcmpeqd
pop
outsl
xchg
adc
fidivrs
mov
or
fisubl
sti
jle
imul
das
mov
mov
in
lock
insb
leave
dec
lcall
pop
or
cmp
cmp
mov
out
sub
mov
inc
subl
std
or
cmp
or
mov
test
lahf
cs
ret
sarl
popf
psllw
imul
dec
cmp
mov
out
mov
in
inc
nop
nop
cmp
cmp
adc
sbb
sbb
insl
sarl
add
mov
aad
pushf
lock
inc
push
and
xchg
cli
xchg
popa
mov
je
mov
cmp
fs
aaa
in
pop
jne
loop
fucomi
pop
cwtl
call
sbb
bound
dec
add
jmp
sub
jno
jl
loop
lret
or
insb
jge
mov
stc
xor
out
dec
loop
jo
and
xlat
push
insb
or
mov
xchg
mov
sub
jl
push
fiadds
lahf
imul
daa
adc
mov
push
movsl
mov
repnz
fcmovnb
xorb
shll
fsubrs
loope
jb
mov
xchg
subb
add
mov
or
imul
or
cmc
stos
or
inc
shrl
mov
outsl
or
in
aad
int3
cmpb
pop
and
in
mov
mov
aas
add
test
push
bnd
or
and
popl
hlt
into
adc
pop
dec
mov
lods
leave
std
adc
cld
cmp
hlt
sbb
jae
xor
das
fisubrs
insl
stos
scas
rorl
or
fwait
push
mov
xor
adc
stos
stc
mov
jmp
pop
stc
inc
imull
cld
mov
push
pop
adc
jle
or
add
push
xchg
sub
pop
pop
insl
mov
pop
mov
cltd
in
mov
in
mov
loopne
and
dec
dec
divb
mov
sbb
add
sbb
aaa
xchg
xchg
add
loopne
pop
scas
push
ss
mov
push
add
push
jl
push
pop
and
repz
xchg
out
iret
jl
test
lcall
popf
xchg
cs
insl
pop
test
ja
test
sub
es
pop
das
std
in
ljmp
es
adc
lret
inc
adc
xchg
add
popa
in
fwait
push
add
xor
addb
inc
mov
nop
cmp
push
sub
add
mov
fbstp
add
call
xchg
out
mov
cli
shlb
mov
lret
fisubrs
lock
jnp
sldt
popf
xchg
stc
xchg
lret
test
sbb
mov
and
loop
popa
imul
shl
nop
jmp
repz
mov
mov
stos
scas
jb
pushf
jne
enter
shr
addr16
or
inc
lcall
inc
mov
sub
pop
mov
iret
sbb
push
xchg
lret
fistl
jns
imulb
int3
in
sbb
or
sub
xchg
adc
fs
dec
shr
cmp
and
pop
mov
scas
lcall
cmc
or
je
push
mov
cmp
inc
cmp
mov
incb
ret
push
lods
scas
imul
test
xor
popl
jae
or
enter
imul
jmp
ds
test
bound
je
fsts
xor
dec
adc
and
mov
clc
fsubrs
adc
ja
int
test
into
fcompp
xchg
bound
sbb
sbb
push
nop
pop
push
jp
sarb
int
cmp
sbb
inc
pop
inc
or
pop
sti
repz
roll
cmc
jnp
add
leave
inc
lds
outsl
insb
and
sbb
mov
roll
xor
movsl
pop
dec
fs
mov
pop
sqrtps
mull
out
push
adc
cmc
imul
pop
mov
movq
sbb
cmp
mov
pop
push
adc
push
lods
cs
cmp
in
xchg
mov
std
lret
adc
rorb
and
xchg
ret
xchg
pop
mov
shlb
inc
les
jecxz
xchg
cmpsl
nop
push
add
lea
xor
andl
ror
rorb
ret
and
and
xchg
push
stos
outsl
mov
xchg
sbb
cwtl
icebp
les
lods
cmpsl
add
mov
mov
in
push
lahf
jle
xor
mov
sti
pop
sbb
icebp
int
xchg
loop
mov
movsl
adcl
loope
push
dec
imul
add
mov
or
and
lcall
jle
es
xchg
cmc
lcall
and
loop
push
aas
std
fmuls
mov
push
xchg
mov
pop
push
add
cli
xchg
and
add
insb
addr16
aaa
loop
push
adc
push
incl
mov
mov
mov
cmpsb
aam
mov
lea
mov
out
cmpsl
test
fnsave
ret
cmpb
xchg
cmc
pop
pop
stos
out
ljmp
push
shrl
jmp
sbb
pop
ror
push
xlat
pushf
test
pop
cmpsb
mov
lods
stos
push
loopne
lahf
movsl
sti
cmp
add
jge
addr16
xchg
mov
lock
outsl
pop
sbb
daa
xchg
pop
mov
dec
add
push
jns
ja
dec
cmp
hlt
out
popl
jl
cmp
ljmp
mov
sbb
roll
mov
sbb
out
adc
sub
imul
dec
jnp
aam
cmp
jecxz
pushf
push
nop
out
iret
je
pop
in
cmp
jmp
inc
push
pop
inc
in
mov
rcrl
sbb
jbe
mov
mov
push
sbb
lcall
scas
in
and
mov
mov
sub
cmp
rclw
fnclex
dec
mov
ds
sbb
lods
pop
push
push
sar
imul
mov
pushf
fdivl
push
int
xor
push
adc
xor
cmp
push
push
cmp
jae
xchg
negl
nop
cmpsl
test
dec
cld
fldcw
mov
nop
sbb
cmp
mov
mov
cmc
mov
out
arpl
sub
dec
or
jg
mov
mov
jmp
rolb
scas
test
js
fucomp
ret
pop
xor
sbb
loope
loop
cltd
or
add
cmp
push
jl
sbb
stos
jecxz
xchg
xor
outsl
dec
pop
xchg
pusha
push
jne
cld
cli
mov
mov
shlb
jbe
sub
sbb
inc
and
dec
xor
inc
dec
stos
scas
pusha
xor
xchg
mov
jne
loop
or
and
inc
icebp
xchg
mov
or
pop
out
cmp
push
imul
inc
adc
add
test
lock
movsl
push
or
jmp
insl
aaa
test
pop
insb
inc
lret
scas
faddl
andb
insl
push
push
adc
push
andl
jge
cmp
mov
in
sbb
fdivrs
pop
ljmp
jmp
and
leave
mov
loop
aaa
add
inc
ret
xor
sahf
mull
movsl
notl
and
or
cmp
pop
mov
cltd
sub
or
ss
testl
dec
dec
inc
mov
xchg
push
mov
and
pusha
mov
mov
dec
lret
aad
mov
or
mov
inc
cmp
adc
iret
cli
pop
fstl
xlat
mov
cltd
nop
pop
cmc
in
lcall
adc
int
push
push
mov
xor
ja
sahf
and
das
ret
clc
jecxz
es
mov
stc
sahf
xor
jns
in
and
cmp
add
adc
sbb
cltd
aam
mov
mov
mov
aam
lods
jns
inc
adc
stc
mov
push
mov
ljmp
dec
push
repz
pop
jnp
cmp
test
and
out
dec
adcb
jle
leave
add
sub
mov
adc
es
adc
je
push
orb
negl
pop
mov
fdivrl
xlat
les
out
add
cmp
cmp
jmp
lds
xchg
fdivs
popa
mov
lods
mov
movsb
stos
test
pop
cmp
cmp
inc
mov
mov
mov
fdivrs
cmc
hlt
lds
fwait
push
mov
gs
xchg
dec
rorl
out
add
mov
pop
or
into
push
pop
in
lods
lods
js
inc
inc
addr16
cmp
jnp
jne
sub
add
jp
cwtl
loop
icebp
ffreep
mov
xchg
je
mov
jb
in
push
jnp
xor
xchg
mov
cli
or
inc
fdivrs
mov
add
lcall
je
sub
cmp
mov
pop
sahf
rcr
cmp
aam
adc
scas
nop
outsl
in
ja
movsb
jnp
and
dec
rorb
add
sub
xchg
fisubl
jo
notb
cmp
mov
adc
xchg
mov
add
into
int3
inc
movsl
xchg
pop
scas
mov
sbb
cmp
loopne
pop
mov
sub
jbe
fbstp
or
push
int3
push
popf
idivl
cmp
jnp
pop
outsl
ja
jp
sti
rcl
pop
arpl
rcrl
or
js
xchg
stos
pop
pop
loope
sub
lret
jne
sub
add
fdiv
push
sahf
or
adc
push
loope
scas
sbb
mov
fldenv
cmp
inc
inc
xchg
mov
fsts
mov
out
lahf
push
sarb
mov
std
loope
repz
in
out
shlb
xor
jp
imul
cmpsl
jp
jmp
rolb
hlt
or
and
mov
xor
mov
dec
mov
out
pop
mov
xchg
mov
adc
sbb
lret
hlt
or
ljmp
fs
ret
push
cmpsl
ffreep
push
pop
dec
jb
mov
sub
lds
fnstcw
lods
test
xchg
xor
outsl
in
cmp
pop
push
daa
pop
into
cmp
clc
pop
lds
xchg
jmp
inc
aaa
jmp
push
and
shlb
das
pop
jle
adc
jle
inc
mov
mov
mov
push
clc
cmp
sub
dec
or
lahf
das
aaa
and
movaps
es
xor
fists
mov
jo
cmpsb
aam
mov
xchg
cmp
push
sbb
int
subl
repz
push
nop
imul
xchg
push
aas
jns
add
cmp
mov
insb
jecxz
iret
movsl
fs
lret
jns
xchg
dec
or
sti
sub
mov
mov
out
popf
leave
inc
inc
adcb
addb
in
mov
pushf
in
shl
clc
mov
or
cwtl
insl
int
xor
fstpl
imul
sbb
or
test
into
adc
add
mov
sahf
hlt
idivb
dec
push
pop
xchg
sbb
add
adc
pop
inc
ret
movsb
push
icebp
mov
fs
cs
roll
add
stos
mov
dec
imul
xlat
push
fs
imul
bnd
aad
test
aam
out
ja
test
mov
in
popa
popf
jno
cwtl
mov
xor
jo
xchg
and
sarb
arpl
clc
cs
cltd
xchg
fists
sbbl
push
pop
out
lods
test
xchg
out
sbb
push
mov
mov
out
add
mov
ficoml
scas
movsl
push
push
dec
adc
push
daa
les
sti
cmp
ljmp
mov
xorl
sub
push
push
test
bound
mov
sub
hlt
pop
push
mov
hlt
jecxz
ja
add
cli
mov
mov
int
xchg
loopne
data16
xchg
sbb
out
cmp
popa
mov
scas
add
cmp
mov
pop
pushf
jmp
sub
mov
xchg
sbb
lds
in
pop
mov
or
lea
test
cmp
mov
pop
pushf
xlat
ficoms
orl
mov
cmp
mov
inc
popf
clc
in
add
pop
fcmovnb
roll
inc
stc
insl
inc
hlt
mov
or
stos
mov
lds
push
insl
iret
xchg
xchg
clc
pop
push
dec
das
jp
flds
xorl
shll
sahf
loopne
xchg
cmpsb
out
mov
pop
push
test
imul
xor
xchg
out
scas
lahf
jge
cltd
xchg
xor
push
pop
mov
xchg
jne
int
xlat
add
mov
je
dec
aaa
in
xlat
fs
imul
mov
push
mov
testb
pop
hlt
cmp
mov
das
test
bound
out
fmulp
in
jge
xor
mov
js
push
mov
nop
shll
xorl
push
shlb
vsubpd
paddsb
jmp
xchg
dec
bound
inc
arpl
mov
ret
loop
lret
or
adc
test
mov
and
aad
iret
aam
adc
imul
cs
mov
jb
mov
int3
or
fsub
in
cmpsb
incb
sarl
repz
jo
cmp
xor
xor
daa
xor
jmp
imul
jl
in
or
sbb
mov
or
aam
ret
sar
cmpsb
xor
cmp
adc
jns
jns
mov
add
jne
xor
or
fs
xchg
fs
adc
outsl
mov
scas
sbb
hlt
fwait
cmp
mov
jae
ret
mov
xchg
dec
and
inc
sub
pop
jmp
loope
icebp
ds
fldenv
lcall
leave
mull
pop
mov
jge
shl
jo
mov
dec
xchg
ret
add
popa
rcrl
sbb
mov
cmp
mov
sub
iret
inc
inc
je
rcrl
cmp
push
imul
cmp
daa
lea
shl
cli
out
daa
xor
xchg
lock
pop
sub
fimull
sub
ss
das
inc
push
cmpsl
pop
jnp
xor
in
inc
movsb
fwait
cmp
repnz
repnz
scas
jbe
cmpsl
xor
mov
dec
push
movsl
roll
add
sub
xor
nop
test
dec
xchg
outsb
clc
sarb
mov
out
xchg
leave
xor
inc
push
rcrb
ss
or
and
dec
or
ret
aas
ret
and
jle
mov
pop
movsl
pop
das
mov
push
int
xchg
jbe
sbb
dec
pop
filds
jecxz
xor
mov
push
xchg
popa
mov
cwtl
scas
aam
pop
inc
outsl
clc
pop
mov
std
iret
rorb
pop
xlat
or
clc
and
lcall
sti
decl
mov
pop
dec
in
enter
jle
mov
int3
xchg
dec
push
mov
inc
cmp
mov
icebp
xchg
rclb
and
les
xor
inc
shl
bound
cmpsl
pop
fisttpl
cld
xchg
cmp
mov
inc
push
insl
pop
xor
dec
push
fs
gs
push
cmpsb
sti
movsl
adc
xchg
repnz
mov
add
or
popf
imul
mov
int
in
push
out
push
xchg
std
pop
jp
or
and
stos
xchg
lea
std
ds
adc
sub
test
int
imul
ljmp
fistpll
test
data16
mov
cmp
ja
pop
sbb
xchg
and
orb
aad
arpl
fidivrs
in
xchg
sahf
dec
ret
into
xor
and
cmp
fiaddl
adc
ds
enter
test
sub
or
test
mov
pop
lods
inc
pop
popf
sti
gs
pusha
out
mov
dec
xchg
pop
je
sahf
or
add
sub
xor
pop
iret
inc
movsl
mov
adc
adc
add
push
and
lods
cmp
push
sub
inc
add
in
mov
xchg
popa
sbb
pop
lret
and
inc
lcall
jmp
xchg
push
insl
fadd
or
lea
sbb
int
jae
cmpsl
call
data16
cmpsl
and
xor
jae
xlat
inc
sub
jae
adc
inc
test
xchg
sub
je
hlt
pop
mov
adc
sbb
and
cmp
mov
jl
scas
xor
jns
or
inc
mov
std
outsl
mov
pop
clc
lahf
or
dec
rclb
sbb
loope
sbb
pushf
in
cmp
nop
movsb
sub
mull
dec
cmpsl
mov
lahf
fistps
mov
xor
insl
lods
lret
jg
mov
push
fistl
lods
shll
xorb
sti
pop
and
jmp
or
inc
mov
mov
xor
mov
jge
shll
repz
out
add
js
stos
cmp
into
mov
dec
jbe
mov
pop
ja
frstpm(287
test
sbb
mov
loop
mov
cmp
pushf
or
js
dec
jo
mov
rorl
adc
sub
aam
repz
add
iret
stos
sarl
jb
out
in
inc
mov
jecxz
repnz
je
push
pop
xchg
push
mov
mov
es
pop
cmpsb
ja
or
aaa
shl
xchg
js
scas
stos
ud0
xchg
and
push
cmp
pusha
in
adc
pusha
jnp
jne
call
sub
adc
movsl
out
divb
and
mov
inc
in
push
daa
mov
xor
loope
divb
lahf
mov
jnp
inc
xor
js
or
outsb
xchg
mov
or
push
arpl
cmp
xchg
sahf
cmp
js
fiadds
xchg
adcl
sbb
mov
xchg
test
jl
bound
stc
cmpsb
xchg
js
adc
mov
aas
inc
cmovge
aas
rcrb
push
mov
adc
mov
mov
cmp
inc
jg
mov
test
outsb
mov
or
outsb
jg
push
fcoml
sub
ljmp
push
stos
cld
mov
mov
std
outsb
mov
cmp
iret
ret
imul
push
jge
das
mov
adc
call
xchg
mov
sbb
push
imul
jmp
add
cmpsb
sbb
push
xchg
pop
ret
scas
jle
sbb
inc
divl
icebp
cmpsb
lcall
jns
jp
addb
xor
jmp
xor
xchg
lds
and
lds
mov
cmp
mov
icebp
add
out
dec
push
cwtl
lea
inc
aaa
sbbb
pop
dec
xchg
mov
push
dec
sub
mov
stc
into
lret
dec
rcrl
jge
daa
das
mov
inc
inc
jle
and
add
insb
sub
out
xchg
mov
in
pop
clc
popa
lahf
xchg
lahf
icebp
pushf
mov
add
mov
imul
xchg
dec
mov
mov
hlt
mov
test
aaa
sbb
xor
shlb
daa
xor
pop
out
out
xchg
pop
pop
sbb
mov
inc
dec
jmp
sub
mov
aad
out
jmp
lds
es
stc
ret
mov
xchg
movsb
rorl
fnstsw
cwtl
dec
xor
ds
fnstsw
loop
jge
mov
enter
jno
dec
js
leave
dec
aad
outsb
adc
shrb
outsb
popf
fwait
pop
or
mov
ja
jecxz
dec
and
mov
in
lods
dec
cmc
ljmp
aas
rcll
add
movsl
mov
int3
cmp
and
jge
jle
aas
jmp
loop
inc
pop
and
push
mov
cmc
or
mov
lret
push
dec
push
pop
mov
sbb
push
movsl
mov
inc
cld
test
call
movsl
dec
adc
test
sub
dec
rolb
mul
shl
cli
sub
sbb
scas
cli
mov
jl
cwtl
xchg
in
out
inc
es
xlat
mov
lret
cli
mov
jg,pt
push
out
inc
mov
leave
adc
dec
push
jno
push
sbb
inc
int3
inc
or
cmp
xchg
jne
sahf
adc
idivl
xchg
pop
mov
fs
mov
xchg
lcall
in
cmp
test
jecxz
ds
out
mov
pop
mov
mov
pushf
repz
sub
loope
js
mov
sbb
orb
lods
xor
xchg
dec
sub
stc
ret
scas
dec
dec
push
cmp
and
push
jnp
sbb
aaa
mov
into
sbb
mov
rcl
sbb
push
lea
cmc
cltd
stc
sub
sbb
jns
mov
in
fisubrl
inc
mov
nop
jb
mov
mov
xchg
pop
pop
movsl
adc
push
or
pop
lea
xor
fcoml
cmp
imul
sahf
jge
dec
aas
enter
in
or
cltd
aaa
inc
imull
jp
xor
out
and
and
fcoms
iret
adc
xchg
cmpb
jp
sbb
insb
adcl
add
ret
ret
push
aad
mov
lret
push
or
and
push
push
jp
pushf
call
xchg
push
fs
jno
dec
mov
das
insb
sti
cmpb
sub
rclb
cmp
add
mov
push
pushf
add
cli
rcr
repnz
push
mov
xor
lock
jae
cmpsl
mov
mov
bound
fcoms
test
jl
dec
lea
repz
stos
mov
adc
and
xlat
pop
mov
jp
push
insb
cmc
lods
mov
sbb
fdivrs
inc
icebp
adc
pop
xchg
sub
mov
pop
sub
es
push
pop
aas
es
push
enter
aas
mov
out
inc
testl
fmull
xchg
insb
in
aad
adc
jp
clc
dec
pop
popa
mov
xor
pop
pop
lods
mov
cmpsl
ficomps
pop
repz
xor
fs
pop
xchg
adc
jae
inc
rorl
jmp
xlat
xor
pop
lock
mov
jnp
mov
dec
aas
push
adc
pushf
push
mov
es
ret
das
cli
pop
jb
insl
mov
cmp
lods
ret
mov
mov
xlat
dec
jo
call
cmc
jl
mov
imul
fistpll
mov
cmp
test
xor
mov
push
cmpsl
movb
lret
cmpsb
imul
pop
cmpsl
pop
lds
xor
and
repz
out
out
mov
lcall
sub
inc
add
xchg
mov
cmpsl
xchg
enter
cmp
outsb
mov
cmp
xor
mov
fiaddl
mov
adc
hlt
push
stc
shl
xchg
add
sbb
or
inc
subb
int
mov
sbb
inc
pop
push
push
aad
fisttpl
mov
enter
fisttpl
add
lcall
push
aad
sbb
pop
pop
xlat
cmp
in
sti
ljmp
aam
mov
mov
sbb
cmp
sbbl
jb
xchg
and
lret
cltd
lahf
inc
stc
int3
loope
cld
or
fidivl
add
gs
inc
add
pop
stos
jnp
lret
cli
in
mov
jmp
movsl
arpl
mov
xchg
outsl
push
in
das
lcall
sbbl
pop
shrl
in
sahf
mov
adc
push
cmc
sub
cmp
ss
mov
mov
das
ds
xchg
add
jmp
aad
in
fimull
test
cmp
in
in
jmp
jl
incb
jmp
dec
cmp
out
mov
out
repnz
push
ret
inc
mov
xchg
popf
cmp
and
jae
push
cmpsl
or
pop
jp
das
in
fwait
push
cli
add
insl
mov
dec
ss
sti
ds
into
popf
iret
or
xor
dec
in
out
je
divl
gs
xchg
push
or
and
sbbl
popf
imul
ja
dec
sbb
ds
sub
adc
add
inc
into
andb
pop
mov
scas
jbe
cli
add
lcall
push
pusha
sub
out
inc
gs
pop
mov
test
pushf
jge
bnd
push
fbld
mov
std
mov
inc
pop
cmp
push
aad
pop
hlt
fs
notl
mov
sarl
mov
stos
jmp
sahf
fidivrs
fcoml
cmp
pop
add
jle
lds
xor
orl
sarl
push
pusha
adc
or
pop
std
xchg
es
out
shlb
dec
pop
aaa
arpl
inc
mov
scas
cmpsl
icebp
mov
aad
pop
mov
repz
insb
out
mov
testl
push
mov
push
inc
mov
jle
or
imulb
daa
sub
into
mov
hlt
cmp
add
shll
xchg
insl
pop
dec
outsb
aam
cmp
and
pusha
mov
or
mov
lea
aas
jne
lds
xor
je
pop
push
mov
adc
push
je
or
push
lahf
scas
in
cmp
xchg
lds
xor
push
pop
mov
lcall
add
xchg
xor
push
test
sub
jnp
xor
sub
mov
jbe
test
adc
mov
cld
sbb
cli
and
pop
add
leave
cmp
sahf
jae
inc
or
add
or
xchg
cld
sbb
push
inc
jge
stos
xor
hlt
arpl
iret
pop
and
jb
ret
popa
rcr
mov
imul
xor
pop
or
jle
out
jbe
cmp
mov
xor
test
or
mov
jl
hlt
cmpsb
insb
sbb
sub
mov
fwait
or
xchg
fistl
mov
sti
push
ret
subb
mov
inc
cmp
xlat
roll
xchg
or
sub
stos
mov
sbb
faddl
cmp
subb
movsb
pop
push
add
lods
in
inc
scas
mov
out
dec
pop
addr16
mov
lods
inc
mov
mov
mov
pop
pop
push
rclb
add
insl
cmc
jns
shl
repz
pop
sbbl
cmp
cmpsb
or
inc
and
cmpsb
mov
invd
jno
stc
stc
outsl
or
loope
cmp
sbb
insb
pop
cmc
ja
jo
sub
inc
pushf
jnp
xchg
xchg
mov
inc
clc
xchg
ficoms
mov
call
push
aas
lahf
inc
stos
loope
push
push
ljmp
xchg
sbb
ficoml
adc
push
and
arpl
outsl
cld
inc
lret
mov
inc
subb
shl
andb
shll
inc
xlat
stos
and
mov
or
aad
add
aad
or
insb
jp
cld
and
push
mov
addr16
push
or
cmp
nop
fmuls
inc
and
mov
add
movsb
mov
inc
cmp
rclb
jmp
and
outsl
push
mov
test
sbb
sti
sbb
scas
cwtl
sub
leave
mov
mov
mov
loope
mov
bound
xchg
loopne
and
rol
vmptrld
jnp
sub
lahf
sub
fwait
gs
cmp
cmpsl
adc
cli
and
insb
mov
push
push
testl
xchg
jg
into
bnd
mov
push
add
mov
pop
jle
xchg
sub
fsubs
xchg
adc
jbe
vpmullw
shll
ja
xchg
testb
xchg
mov
in
iret
mov
mov
cmp
dec
lcall
and
adc
lods
mov
sbb
fdivrl
or
or
mov
pop
jae
fimull
mov
repnz
mov
loopne
arpl
ret
out
cwtl
out
mov
movsb
in
int3
mov
xor
ror
mov
inc
fstpt
sbb
imul
xor
stc
mov
je
xor
mov
sub
jae
push
push
test
mov
sar
scas
inc
jae
inc
or
cmpsl
and
or
jae
push
push
push
pop
and
push
and
lret
push
and
or
cmp
lods
xor
aam
imul
adc
imul
sub
subb
inc
imul
fdivrs
ljmp
xchg
ss
lahf
jge
test
cs
out
mov
out
inc
fsubrl
dec
ja
sbb
scas
and
xchg
mov
fwait
imul
ja
mov
inc
sub
pop
sahf
pop
or
pop
data16
pop
adc
lret
or
xchg
lods
cmpsl
sub
arpl
mov
sbb
adc
divl
push
mov
xchg
mov
arpl
push
lea
lock
mov
lret
in
mov
jne
sbb
push
xchg
jb
jmp
and
jb
push
leave
or
lret
call
xchg
jns
fisubs
jmp
std
pop
pop
inc
shrl
out
test
xchg
fnstcw
das
dec
cmp
mov
adc
or
push
sub
in
les
sarl
mov
mov
add
scas
mov
mov
pop
fstpl
pop
lret
mov
adc
mov
cmc
adc
xchg
imul
mov
rclb
and
pop
in
xor
nop
lahf
repnz
adc
pushl
ds
das
out
cmpsb
xchg
and
inc
addl
test
sbb
fbstp
std
cwtl
lea
adc
aam
imul
popf
mov
pop
rcll
loop
xor
jg
dec
inc
jo
inc
add
div
mov
out
cmc
mov
xchg
bound
in
or
jl
push
ret
loop
xchg
sbb
mov
clc
pop
cli
movsb
cmp
idivb
and
xor
xor
jns
lret
pusha
cmp
loope
iret
dec
js
in
xchg
fnsave
pusha
gs
mov
inc
dec
enter
dec
jle
fs
xor
cmpsb
mov
data16
cmp
jmp
adc
hlt
xchg
int3
stos
bound
lret
mov
es
xor
shll
mov
in
outsb
lock
je
inc
bound
popa
mov
mov
call
jnp
cmp
cmp
pop
inc
pop
mov
out
out
push
mov
cmp
iret
repnz
sub
push
dec
jbe
cmp
scas
into
push
repnz
sahf
lock
stc
lods
es
mov
push
cmp
sbb
rorl
jo
out
mov
xchg
fdivp
mov
xor
add
mov
arpl
idivb
xchg
push
into
xchg
mov
bound
lods
cmp
mov
push
lret
lret
insl
mov
and
cmp
popa
ret
lahf
mov
ds
inc
push
adc
jle
mov
movsl
scas
pop
mov
loop
cmpsb
fnsave
and
dec
jg
fisubs
adc
imul
cmp
les
jmp
and
sbb
es
pop
add
gs
pop
das
pop
xlat
xor
add
pop
icebp
dec
xor
popf
xchg
mov
imul
xchg
es
sbb
and
scas
xchg
sbb
imul
jbe
sub
stc
pop
mov
cmp
insb
aam
hlt
rorb
dec
sbb
lock
loopne
js
adc
sbb
popf
jb
loope
xchg
mov
lock
add
stc
cmp
test
outsb
ja
jo
scas
inc
mov
lods
cmp
testl
or
adc
jns
push
movsl
arpl
xchg
cld
pusha
mov
sbb
push
mov
enter
bound
adc
jno
sub
and
or
cltd
mov
jp
jno
and
ss
out
xor
cmpsb
inc
adcb
sti
xchg
cmp
pushf
dec
or
mov
in
inc
dec
sub
mov
das
mov
ds
jp
sti
push
in
dec
cli
mov
mov
mov
dec
sub
xchg
mov
movsl
ljmp
mov
ljmp
hlt
imul
cmpsb
xchg
fcompl
dec
aaa
cmp
jne
in
xor
in
dec
arpl
pop
pushf
inc
addr16
in
movsl
push
imul
insb
dec
mov
vpexpandq
loop
cmp
cmpsl
sub
sub
ret
ret
mov
pop
stc
cmpb
xchg
std
and
outsb
mov
sbb
sbb
sub
pop
test
cmp
cmpsb
in
mov
or
xor
jge
jecxz
scas
cs
inc
xchg
ret
popa
adcl
clc
jnp
mov
xchg
jno
mov
daa
cmp
jnp
outsb
mov
repnz
fcompl
jnp
xchg
add
stos
leave
or
call
js
imul
flds
scas
scas
cwtl
or
rolb
test
idivb
div
pop
ret
scas
fcomi
xor
cltd
insl
in
fcomi
mov
xchg
rolb
movsb
cmc
cwtl
ret
dec
out
xchg
adc
jb
mov
movsb
loopne
sub
cmpl
inc
sub
cmp
test
xchg
inc
rclb
dec
bound
xchg
cmpsl
daa
mov
cmpsl
sub
push
jle
cs
or
push
or
scas
cmc
fldt
stos
jmp
adc
bound
mov
fistpl
cmp
pop
pop
push
mov
cmp
pop
ficoms
sahf
cli
out
sbb
adc
cmpsb
sub
and
pop
push
sbb
std
inc
pop
dec
test
inc
aad
mov
pushf
inc
push
js
mov
mov
shlb
shrl
jmp
inc
sbb
xor
jge
adc
in
push
fxam
hlt
lea
lds
das
flds
test
dec
pop
cli
addr16
inc
jg
out
xchg
add
icebp
bound
add
mov
in
jmp
testb
sub
in
jmp
lods
in
adc
loopne
test
inc
sbb
sub
mov
sbb
mov
mov
dec
sub
gs
ret
ja
out
sbb
out
shrl
sahf
jl
pushl
push
push
data16
cmovge
cli
adc
fisttpll
pop
addr16
jno
insl
jns
hlt
aas
sub
test
jg
xchg
mov
xor
lahf
mov
sub
ss
lds
xchg
lret
fstp
mov
mov
push
mov
pop
mov
aas
imul
fwait
and
inc
movsb
push
les
adc
mov
or
filds
test
and
in
fcomi
cmpsl
call
pop
pop
js
enter
cmp
addr16
add
in
cmpsl
in
outsb
pop
insl
adc
cmc
fistl
or
or
jo
aas
test
inc
add
popl
xchg
pop
inc
xchg
insb
int
cwtl
jle
or
xor
or
xchg
cld
cmp
jns
dec
push
imul
iret
rcrb
movsl
jb
jns
adc
jne
icebp
push
dec
sub
int3
push
fwait
loop
ret
mov
or
and
mov
add
nop
adc
sbb
sub
adc
mov
xor
push
sbb
fsubl
aam
mov
sub
adc
xchg
and
dec
mov
int
cmp
dec
sbb
stos
aad
pop
push
mov
adc
jle
sbb
xor
xchg
mov
cmp
mov
push
add
pop
test
in
fsubs
sbb
mov
and
scas
xchg
lret
shrb
jae
or
in
push
es
mov
cmpsl
mov
movsl
cmp
cmc
mov
add
inc
nop
loop
mov
dec
push
es
xlat
shl
roll
inc
arpl
or
lcall
cmp
ds
jns
int3
nop
and
mov
out
lods
ficoml
cmpb
stos
fimull
pop
outsb
fbld
push
pop
mov
sub
test
xchg
sbb
inc
sbb
inc
mov
iret
ljmp
clc
test
test
icebp
or
das
negb
jmp
fldcw
loopne
lods
fbld
or
repnz
js
xchg
lock
jmp
xchg
cmp
in
lods
or
sbb
adc
andb
lds
enter
cmp
dec
sub
imul
bound
push
and
mov
es
adc
jb
aaa
pop
out
dec
notl
clc
addr16
stos
push
dec
sbb
or
jp
repnz
mov
imul
adc
pop
add
lock
out
cmpsl
push
jp
mov
outsb
leave
pop
outsl
mov
in
rcr
test
cltd
ljmp
xchg
xor
sbb
and
jbe
push
dec
mov
jmp
ret
sbb
mov
jge
lods
test
pop
cwtl
clc
xchg
and
jl
pop
xor
inc
in
andl
and
sarl
add
add
pop
mov
inc
aaa
and
cmp
ja
out
dec
and
call
repz
nop
or
iret
cwtl
inc
popf
inc
mov
mov
add
call
jbe
bound
into
mov
push
pop
jae
xor
mov
or
xchg
das
jge
jle
xlat
mov
xchg
je
cmpsb
movsl
or
jge
dec
cmp
gs
mov
cmp
cmpsl
cli
fs
adc
or
cli
out
repz
jno
sbb
movsb
add
xchg
sbb
data16
and
pusha
pop
and
and
or
cmp
or
das
enter
mov
loopne
pop
cs
repz
mov
and
stos
test
jne
cs
stos
inc
test
dec
adc
xchg
fistl
mov
test
outsb
or
cwtl
xor
cld
repz
xchg
cmc
adc
pop
fs
mov
and
leave
and
in
or
les
push
cmova
test
jp
dec
xor
fstpt
in
or
in
stos
xchg
jp
aas
sbb
inc
ss
in
xchg
addr16
push
loope
lret
das
outsl
mov
jle
and
lret
insl
call
negl
ficompl
imul
push
sbb
aas
repz
movsl
lahf
inc
sub
and
mov
xchg
mov
cmp
rcll
jmp
ror
xor
lret
sbb
dec
fisttpll
push
mov
outsl
mov
out
scas
stos
sbb
dec
rorb
js
inc
pushf
push
fistpll
outsb
repz
mov
aas
sub
stos
and
jo
pop
leave
popf
int
lods
push
xchg
sub
andb
vhaddpd
arpl
sbb
xchg
lahf
sbb
int
push
inc
sub
inc
xchg
cmp
lahf
cld
test
xchg
pusha
aad
or
push
inc
lock
icebp
xor
inc
push
push
ret
and
iret
int
testb
pop
jmp
fstl
cmp
lret
mov
dec
mov
cmp
pop
out
ret
adc
push
mov
sbb
lahf
pop
jmp
or
in
repnz
sbb
and
fistpll
daa
call
jecxz
sar
jmp
dec
adc
dec
mov
mov
je
jae
push
or
sbb
fldl
das
pop
push
lods
xor
std
bnd
lahf
or
or
sahf
fsts
pop
push
mov
in
insl
insb
lods
cmp
sti
pushf
add
sub
mov
cmp
pop
shlb
xchg
sbb
sahf
ja
test
outsb
xor
aam
and
push
pop
mov
out
jnp
mov
push
test
mov
fiaddl
jecxz
fstpl
jae
repnz
mov
mov
cmp
testb
inc
lahf
rcrb
loop
cmc
pop
pusha
loop
mov
lcall
jno
mov
add
push
out
mov
mov
leave
lds
push
out
add
cmp
in
loop
push
xor
jl
out
ret
sub
jae
fildll
cmp
inc
cwtl
ret
fcmovne
xchg
cmp
pushf
xor
cmc
dec
dec
test
mov
push
push
xchg
movsb
mov
inc
and
aam
jecxz
pop
or
mov
mov
pop
and
xchg
cwtl
addr16
sub
adc
aas
lods
jle
pushf
ljmp
inc
imul
jl
imul
in
add
inc
lahf
and
out
sbb
adc
test
inc
das
mov
jae
and
std
ja
mov
fldenv
and
mov
jno
jge
push
cli
cwtl
sbb
dec
push
mov
sahf
push
and
pop
int
scas
sbb
addr16
jnp
lret
cli
jbe
add
idivb
bound
js
sbb
sti
mov
fstl
sbb
xor
mov
mov
jne
daa
stos
icebp
mov
mov
dec
icebp
mov
xor
or
decl
xor
popa
lock
sbb
push
jle
dec
sub
sbb
out
pop
pop
dec
xor
inc
test
sub
rorl
push
mov
fldenv
mov
sub
fs
daa
pop
xor
mov
lds
stos
and
adc
or
cld
mov
cmpsl
mov
jge
sbb
data16
call
cmpsb
dec
insb
pushf
leave
repz
xor
cmp
cli
xor
sbb
inc
push
enter
dec
xchg
or
xchg
jge
adcl
pop
lret
test
scas
and
mov
cmp
and
and
inc
and
mov
and
adc
jns
pop
jae
inc
in
insl
jne
jne
lcall
push
adc
push
jne
mov
loop
or
decb
cmp
inc
dec
pop
cmpsb
and
push
fidivrl
ja
mov
lds
lea
mov
xor
sbb
jnp
pop
sbb
adc
sbb
subb
adc
into
loopne
dec
sub
mov
pop
dec
sub
fxch
adc
jno
mov
cltd
push
cli
push
pop
stos
rolb
and
jbe
or
sbb
mov
popf
mov
fstps
cld
into
push
jns
nop
fidivrl
mov
lods
sub
daa
and
adc
and
mov
shll
icebp
inc
jae
add
sbb
scas
mov
enter
roll
mov
jne
mov
inc
jg
push
push
fs
add
out
into
add
xchg
add
jecxz
or
aas
fldt
sbb
lea
loop
sub
and
mov
cmpsl
or
xchg
lock
dec
or
push
dec
imul
pop
leave
mov
vmovmskps
das
mov
out
imul
push
imul
jl
xor
and
aaa
shll
add
in
imul
inc
adc
inc
in
shrl
aam
mov
loopne
into
shrl
mov
andb
and
frstor
inc
and
lret
out
out
notl
fstps
cs
mov
out
xor
aam
sbb
addr16
push
movsb
jne
jo
mov
pop
testl
inc
in
sahf
clc
ljmp
ror
imul
mov
xor
adc
lods
mov
testb
ja
aaa
xchg
test
pop
push
ljmp
sbb
bound
sub
adcb
adc
mov
hlt
inc
bound
adc
mov
pusha
stos
fcomps
pop
cmpsl
mov
mov
inc
inc
mov
sub
jo
jmp
test
faddp
sbbl
pop
mov
jo
inc
push
pop
adc
jnp
shll
inc
jo
lock
ret
mov
sbb
out
pop
dec
jg
data16
xorl
sahf
mov
and
or
and
pop
push
in
mov
mov
and
and
sar
mov
push
insl
jne
pop
cmp
mov
lret
sbb
out
test
into
js
xor
mov
sbb
xor
test
xor
in
mov
loop
inc
aad
sbb
fwait
dec
sbb
xchg
pusha
out
int3
lea
gs
hlt
mov
nop
cmp
mulb
fwait
adc
adc
daa
jo
sarb
into
sub
fst
enter
cli
dec
nop
lds
pop
push
pop
movsb
push
arpl
repz
pop
sar
and
xor
jno
enter
mov
repnz
scas
or
mov
fsubl
rorl
sbb
pop
pop
or
adc
test
notb
mov
sub
xchg
mov
shrl
or
lret
push
lods
push
and
add
and
and
mov
iret
inc
pushf
aam
aas
ljmp
push
mov
mov
dec
inc
loope
popf
in
loopne
push
repnz
scas
jo
inc
mov
sub
ret
rolb
adc
in
push
js
add
xchg
xlat
sbb
mov
and
push
push
mov
xchg
and
andl
and
jb
fcmovu
mov
and
xor
mov
lock
out
outsl
popa
outsb
pop
jg
xchg
sub
int
in
push
jg
and
mov
xchg
cltd
call
jo
sbb
sbb
ret
xor
jo
pusha
add
pop
pop
mov
fildll
adc
std
push
nop
es
fcmovnbe
mov
cmovge
xor
dec
test
lcall
aam
push
inc
insb
mov
pcmpgtd
add
xchg
cmpsb
stos
fadd
adc
pop
iret
pushf
lcall
leave
cmp
dec
loope
jae
sbb
cs
out
lret
jmp
pop
jmp
xor
cmp
cmpsb
movsl
shl
mov
push
add
push
ret
pusha
mov
lods
inc
enter
fstl
mov
mov
or
mov
jnp
dec
icebp
mov
scas
xor
mov
repnz
imul
aaa
enter
frstor
enter
or
ja
je
jecxz
dec
lret
sahf
inc
push
subb
in
dec
pop
push
pop
fs
pop
pop
lods
cmpsb
pop
sahf
je
sarb
daa
cmp
cld
or
jne
pop
dec
mov
shr
mov
divl
adc
fdivrl
in
mov
inc
inc
sub
xchg
enter
mull
mov
push
lahf
cmp
fs
imul
jno
arpl
add
in
xchg
jns
imul
gs
imulb
imul
mov
mov
js
sti
xchg
cltd
pop
dec
pop
in
pop
fcompl
mov
push
hlt
xor
xchg
aas
les
aaa
in
adc
aaa
pop
push
push
movsb
out
les
addl
cmp
xchg
aaa
or
mov
lds
fidivrl
lret
sbb
push
sahf
arpl
out
scas
es
cmc
nop
or
adc
out
lahf
cs
add
icebp
lock
push
mov
mov
add
orb
cmp
pop
adc
dec
imul
jle
hlt
dec
dec
lods
fnsave
mov
dec
and
enter
adc
test
out
inc
cld
mov
das
jns
imul
sub
mov
adc
loop
aam
jo
mov
mov
pop
shrb
fcmovnu
test
std
cmp
jne
xchg
inc
das
out
filds
adc
bound
mov
cmpb
push
jmp
sub
or
pop
ret
xchg
out
push
out
add
std
pop
mov
push
and
cmp
cwtl
fwait
sub
cmpsl
repz
popf
outsb
push
in
mov
mov
inc
cmp
ja
xchg
jmp
ret
mov
testb
mov
jecxz
jle
lahf
loope
ja
bound
jmp
jecxz
lds
cltd
mov
test
imul
mov
sbbl
mov
inc
sarb
hlt
sub
mov
cmp
ljmp
sub
xchg
mov
add
stc
repz
cmp
sbb
dec
in
or
push
cmpb
dec
add
cmpsb
jno
stos
daa
lods
shr
ljmp
jmp
loop
add
imul
jae
or
dec
adc
jae
add
insb
lcall
out
sub
test
in
imul
repz
push
sbb
loop
int3
push
adc
or
mov
push
push
aas
cmp
ret
lock
xchg
shrb
xchg
fcoms
jg
push
adc
imul
jl
popf
lods
ret
call
push
lcall
popf
xchg
in
inc
jns
lods
ss
ror
jecxz
sbb
aam
dec
testl
fildl
mov
cmc
dec
push
inc
xchg
mov
push
in
jp
js
in
or
dec
sbb
mov
sub
cltd
sub
das
lds
scas
cmpsb
inc
stc
jo
dec
loopne
in
lods
and
mov
shlb
cld
dec
imul
je
pushf
lcall
fcompl
std
push
mov
bound
js
bnd
or
ja
cld
sbb
fadd
mov
rcrl
jge
lahf
arpl
cmp
adcl
clc
mov
xchg
add
pop
push
testb
rclb
int3
das
cltd
xlat
iret
xorl
mov
add
sbb
scas
pop
mov
sti
inc
sbb
mov
movsl
movl
jnp
pop
mov
in
mov
sarl
js
fcoml
mov
push
rorl
pop
lds
popl
call
push
gs
mov
out
test
jge
loop
sbb
push
repz
in
add
add
sbb
test
std
or
mov
inc
inc
daa
test
mov
popa
inc
pop
imulb
pushf
repz
mov
divb
pop
dec
sti
test
sub
in
or
mov
fmull
fiadds
mov
int
and
xchg
cmp
mov
rcrl
add
jl
aad
lds
and
int3
xchg
mov
fstpl
mov
mov
jns
outsb
xor
jmp
loop
fisubrs
fcompl
loope
popa
out
fcoms
mov
adc
mov
push
nop
mov
aas
jp
dec
pop
inc
push
pop
test
in
xchg
cmp
xorl
cli
xchg
jmp
test
dec
mov
add
adc
imul
cwtl
cmp
cmpsb
push
push
shl
and
jmp
lret
xchg
insb
sub
dec
dec
mov
call
out
mov
xchg
pushf
sub
or
xor
fists
sub
sbbb
pop
fdivrl
sub
repnz
imul
or
mov
in
cmp
inc
inc
dec
push
push
or
adc
lock
lods
jle
mov
mov
xchg
ret
or
inc
ja
jmp
fwait
roll
sbb
jmp
aam
add
fidivrs
movsl
in
test
jb
jl
xor
xchg
sti
push
outsl
inc
mov
push
push
or
notb
dec
lahf
loop
jg
xchg
and
sub
sarb
cmpsb
sub
inc
pop
add
or
loopne
jb
mov
jge
int3
and
mov
outsb
je
out
mov
sub
and
scas
repz
push
push
int
rorb
xchg
icebp
xchg
cwtl
mov
adc
das
add
test
mov
pop
and
sub
push
inc
stos
clc
mov
mov
mov
dec
scas
pop
in
add
and
daa
adc
je
mov
in
mov
in
or
mov
inc
xchg
stc
ja
shlb
repz
mov
das
rcll
dec
mov
cmp
out
in
adc
pop
or
lock
pop
insb
pop
sub
mov
mov
leave
pop
rol
pop
dec
jle
jnp
fisttps
adc
sbb
shll
xor
push
adc
xor
xor
div
insb
in
enter
ja
xchg
fidivl
push
ja
cmp
inc
repnz
sbb
inc
xor
dec
js
outsb
xchg
imul
jns
jnp
in
icebp
rorb
sub
mov
sub
jge
adc
arpl
repnz
sbb
xchg
push
adc
push
xchg
and
sbb
mov
out
mov
cwtl
inc
push
shrl
sub
lcall
xor
jle
loope
push
mov
mov
pop
xchg
insl
fisubl
mov
mov
sbbb
shll
jp
cmp
jae
outsb
inc
cmp
pushf
pop
stos
insb
xchg
or
sbb
and
cmc
clc
mov
rolb
inc
mov
out
sbb
fcmovne
leave
xchg
daa
rorl
adc
dec
lds
inc
push
outsb
outsb
in
mov
fwait
andb
data16
enter
xchg
es
mov
xchg
je
imul
fcoml
jmp
aam
sub
aas
leave
lods
cmp
scas
test
repz
enter
imul
jecxz
mov
rcrb
xor
je
pop
sbb
jns
xchg
dec
lds
sub
ja
mov
push
push
loopne
dec
pop
cli
stc
fcoms
mov
cmc
pop
fcmovu
mov
jae
pusha
out
sbb
xor
xchg
jl
sbb
mov
cmp
fmuls
test
mov
rorb
repnz
hlt
pop
imul
sbb
ja
in
lods
pop
notl
mov
icebp
jne
pusha
push
lcall
bound
nop
sub
sarb
sub
iret
inc
lods
fwait
sar
cmp
mov
inc
ret
and
ja
add
or
jecxz
xchg
popa
jo
or
dec
xchg
es
lods
or
clc
xchg
add
out
jle
mov
and
std
cmp
pop
orl
push
or
xor
mov
push
fists
test
shl
and
xchg
add
sahf
pop
addb
jb
adc
ret
push
insb
stc
int
fstpl
repnz
jnp
dec
sbb
pop
bound
mov
cmc
mov
fldl
call
or
xor
jle
cmpsl
fnsave
and
push
jp
xchg
mov
les
in
xchg
mov
jl
repnz
xchg
dec
out
in
cmpsl
rcrl
and
enter
sub
roll
pop
cltd
sbb
daa
mov
push
stc
inc
adc
xchg
mov
cmc
fcmovnbe
push
mov
adc
dec
sbb
rclb
in
or
sbb
mov
jns
push
xor
bound
jns
or
imul
in
push
jnp
fdecstp
sti
sub
repnz
js
cli
ss
dec
and
pop
mov
or
sbb
or
test
mov
cmp
stos
imul
mov
xchg
adc
ja
cmp
shll
jge
outsb
fwait
stc
out
push
shrb
mov
aad
mov
dec
adc
and
and
lods
jbe
jmp
mov
add
push
adc
push
mov
dec
dec
in
mov
cmp
lret
mov
dec
fadds
nop
or
dec
in
rorb
sub
ret
adc
dec
hlt
sbb
add
out
xor
mov
or
popf
mov
fildl
push
pop
int3
imul
iret
je
addb
sub
pop
pop
mov
and
pop
xor
cmp
outsb
lcall
test
test
lcall
cmc
cmp
mov
push
dec
sub
mov
sbb
xor
dec
ja
dec
or
cld
or
fisubl
imul
mov
repnz
aad
mov
add
cltd
icebp
stos
dec
shl
mov
push
sub
outsl
rorb
adc
push
and
fidivl
pop
mov
stc
mov
jecxz
icebp
pop
cmp
pop
div
fs
inc
dec
jae
cmpb
ret
xchg
inc
mov
mov
lock
fisubl
addb
pop
loope
xor
xor
aas
push
push
test
push
mov
mov
call
or
stc
adc
sub
sub
lret
mov
pop
dec
addr16
imul
shll
clc
inc
dec
xchg
jno
push
mov
dec
xor
inc
sahf
cwtl
lcall
insb
inc
sti
lds
xor
ljmp
shrb
push
add
test
xchg
shl
es
loope
mov
sbb
jb
push
pop
mov
lcall
xchg
out
xor
or
pop
push
sub
adc
js
xor
adc
lds
dec
xor
xchg
inc
psrlq
insl
adc
leave
push
cmp
sub
js
stc
and
cmp
clc
add
mov
loop
push
dec
repz
mov
mov
lret
iret
mov
mov
pop
sti
clc
lahf
inc
clc
push
loopne
jmp
mov
movsb
flds
jae
inc
xchg
adc
outsb
out
jle
mov
rcrl
mov
jg
cmp
cmc
in
bound
and
ja
loope
cwtl
ljmp
sub
pop
xor
mov
push
sbb
sub
js
sub
add
cmp
imul
lcall
pop
or
or
addl
mov
xor
in
lret
inc
mov
inc
scas
mov
call
shll
mov
js
inc
mov
cmp
cmpsb
out
xor
fsts
jp
pop
mov
ficoms
mov
in
movl
inc
mov
std
fcmovbe
sarl
orl
push
or
fwait
cli
cli
out
lret
inc
lods
and
xchg
push
push
jns
rorb
sbbl
push
out
push
ja
imul
xchg
and
pop
pop
stos
aas
push
jnp
adc
movd
add
sbbb
popf
mov
cmp
leave
int3
clc
xor
fs
or
pop
outsl
jbe
mov
xor
mov
adc
push
dec
jno
lret
cmc
jge
aam
xchg
push
call
rcrl
mov
enter
mov
dec
lahf
mov
jb
sbbb
clc
mov
leave
gs
mov
scas
sub
mov
inc
mov
out
test
cmp
mov
test
shlb
orw
inc
stos
arpl
out
or
pop
aam
leave
cmpb
sbb
adc
jae
cwtl
subb
xlat
test
outsl
mov
inc
adc
stos
test
push
loopne
lahf
ljmp
leave
sarb
jge
ljmp
mov
jae
jle
cmp
imul
divb
sti
out
daa
cmc
jne
mov
outsb
popf
test
jl
bnd
xchg
lods
mov
cmp
cmp
cmpsl
ljmp
jnp
hlt
jbe
lods
mov
jecxz
sub
sub
insl
xchg
jge
inc
jbe
decb
sbb
sub
mov
add
das
rcrb
sub
mov
jmp
add
fisubs
mov
enter
xor
inc
push
nop
ljmp
mov
insl
lret
ja
inc
sbb
dec
lods
pop
rcrl
sub
stc
cwtl
pop
imulb
jnp
imul
iret
negl
addr16
xchg
xor
loop
jge
divl
mov
mov
xor
scas
testl
and
lret
dec
pushf
cmc
call
pop
das
hlt
push
cmp
jle
dec
and
and
fsubs
jecxz
hlt
dec
jbe
inc
xor
imul
xchg
movsl
cmp
ret
xchg
outsl
in
push
inc
addr16
out
pusha
pop
adc
rcrl
stos
cmp
push
mov
dec
mov
test
leave
test
out
subl
push
aad
addb
mov
rcl
xchg
mov
jbe
xchg
je
mov
lods
mov
add
push
ficompl
cli
sarb
pushaw
pop
icebp
inc
xor
add
mov
into
cltd
ds
stos
aas
jo
and
mov
out
repnz
cmp
jno
xor
hlt
dec
addl
or
mov
sbb
outsb
jns
pop
fwait
mov
mov
ss
dec
hlt
jno
cmp
mov
sbb
sbb
dec
xorb
jo
nop
add
sub
sbb
loope
and
gs
sbb
adc
push
jb
inc
out
cltd
int3
xor
mov
pop
mov
cmc
or
outsb
xchg
pop
orb
push
mov
jnp
xchg
lods
push
leave
mov
and
pop
fildl
or
jecxz
add
arpl
sahf
pop
pop
popa
movsl
xchg
mov
push
xor
mov
xor
sub
jbe
push
dec
cli
xor
mov
fldcw
push
cmc
jmp
and
stos
mov
sbb
xor
cwtl
test
add
xchg
dec
mov
sub
mov
mov
push
cmpsb
inc
int3
and
push
xor
cltd
shrb
ds
fadds
lret
and
jmp
pop
gs
jecxz
mov
mov
lea
cmp
enter
cmpsl
arpl
mov
mov
clc
lock
or
lea
inc
pop
sub
fwait
loope
add
stos
jne
cmpsb
inc
cld
jl
xorl
testl
cmp
mov
cmp
sbb
add
add
repnz
loopne
ja
repnz
mov
jbe
lods
popa
lea
roll
push
ret
dec
sti
jp
dec
das
xor
and
jmp
aad
orb
repz
and
xchg
pop
shll
lret
lahf
test
and
xchg
shll
push
or
insb
pop
xchg
sbb
mov
movsb
pop
idivl
pop
xor
adc
mov
cmpsb
cmp
lahf
movsb
mov
test
xlat
xlat
sub
das
sbbl
push
repnz
mov
cmp
ret
xchg
in
jne
dec
aam
push
xchg
inc
add
cmpsb
outsb
xchg
jnp
sti
pop
push
icebp
dec
ds
dec
add
mov
cmpsb
mov
cmp
sbb
mov
jns
sub
push
mov
jecxz
jmp
or
or
imul
je
lret
shll
repnz
xchg
push
xchg
popa
jae
loop
add
pop
push
aam
fbld
push
shlb
push
cmp
push
pop
popf
xchg
push
out
dec
mov
inc
dec
lcall
push
jb
jb
aam
mov
loopne
push
dec
dec
adc
sti
push
or
and
icebp
mov
bt
inc
mov
popf
stos
and
mov
fisttpll
mov
fsts
jns
popf
add
aaa
inc
fnstenv
test
adc
enter
and
sub
cmc
inc
mov
clc
sub
xchg
mov
ljmp
xor
mov
out
cmp
add
mov
lods
rcrb
adc
mov
movsb
lahf
fisubrs
pop
push
out
lds
jle
lret
and
sub
rcll
ror
lret
das
pop
mov
jp
cwtl
add
mov
dec
adc
imul
add
cmpsl
test
lret
dec
or
add
and
dec
mov
movsl
or
ja
inc
cmp
aad
pusha
es
jnp
sahf
jo
stc
fistpll
dec
add
push
sbb
jbe
sbbl
mov
ret
in
dec
js
or
adc
lea
sbb
outsl
xor
push
lds
mov
jb
pop
insb
in
scas
lock
cmp
cli
test
inc
push
push
leave
into
out
xchg
dec
stos
push
cmp
ret
jno
xor
cs
int3
int
push
mov
js
loopne
push
adc
mov
cli
inc
out
lcall
or
cmp
sbb
push
pop
mov
adc
aam
mov
fnsave
fprem1
addr16
stos
inc
cmp
mov
iret
xor
cmp
adc
adc
int
int3
push
lds
and
xchg
xor
arpl
je
fstpt
and
inc
test
mov
mov
and
out
cmp
and
fimull
lret
lock
add
in
imul
bound
inc
sbb
or
mov
aad
data16
push
les
xor
movsl
neg
in
loope
add
xchg
popa
icebp
and
add
sub
xor
xor
xor
inc
cmpsl
call
add
sub
xchg
fbstp
cmp
fcoms
add
xchg
fsub
mov
test
cs
dec
rcrb
in
test
push
sub
arpl
jp
pop
cmpsl
xchg
and
dec
jno
loop
and
int
and
and
loope
hlt
mov
stos
jecxz
out
jp
shl
push
xor
lret
shl
and
mov
sub
in
ret
repz
pop
or
mulb
jge
cmp
mov
fstpl
dec
aaa
pop
bound
push
clc
div
sub
lock
xor
in
loop
xor
subb
sub
sti
xor
imul
adc
mov
sti
mov
outsb
fwait
add
mov
pop
aas
xor
mov
lods
loop
lret
cmc
cli
push
aam
sub
cmp
mov
fnstenv
cwtl
jle
mov
sub
call
rcll
hlt
test
mov
and
sahf
clc
fidivrs
in
xchg
or
or
pop
cli
add
jo
pop
sahf
push
leave
adc
imull
add
or
stos
push
push
ffree
enter
adc
icebp
mov
aad
push
fs
and
pop
push
add
das
fwait
cltd
mov
enter
pop
add
pop
pop
je
push
xchg
push
mov
iret
adc
xchg
jge
xchg
int
xchg
ret
cmp
xor
sahf
fwait
mov
mov
sbb
adc
mov
mov
lods
lret
mov
cmp
mov
jnp
mov
mov
jns
sbb
loopne
jmp
xorl
nop
in
test
aam
pop
dec
inc
mov
add
std
pop
in
sub
cld
xchg
or
gs
test
inc
aam
cmovbe
movsb
subl
add
jp
sbb
dec
push
add
push
inc
push
rorb
jns
jecxz
push
es
repz
out
cmpsl
jmp
rcrb
andl
add
dec
pop
adc
inc
fwait
dec
iret
add
daa
fs
mov
jno
fcomps
pop
js
and
lahf
or
mov
das
sbb
test
or
cmpsl
inc
dec
addb
cltd
push
jnp
shl
lcall
popf
pop
cmp
rol
jp
dec
inc
jmp
xchg
icebp
pop
sbb
jnp
xlat
loopne
leave
cmp
decb
orl
xor
add
scas
mov
cmpsl
pop
mov
mov
pusha
std
les
arpl
cmp
pop
test
and
sbb
mov
cld
adc
xorl
or
push
mov
xchg
ffreep
or
cmp
pop
cltd
orl
xor
lock
call
xorl
stos
jge
lret
ja
xchg
push
pop
push
xchg
outsl
test
cmpsb
pop
imul
sub
test
fdiv
popf
test
arpl
mov
test
test
dec
xchg
add
jns
repnz
shlb
jl
push
test
or
xchg
xor
scas
xor
test
push
mov
push
push
jp
or
lcall
push
les
mov
or
sahf
out
inc
out
xor
fdivl
pop
lea
int
xchg
xor
cmp
hlt
dec
rorb
imul
stos
add
sbb
arpl
inc
bound
mov
fiadds
fs
mov
dec
in
mov
sub
aas
repnz
mov
shrb
js
cmpsl
popw
push
xchg
shll
std
xchg
jno
adc
or
cmp
lock
or
outsl
bound
and
lahf
adc
lcall
add
pop
xor
lret
or
cmc
je
mov
xchg
dec
adc
clc
hlt
cltd
or
push
push
mov
sarl
jae
rcll
aad
scas
and
dec
test
fldt
test
stos
jmp
dec
nop
rclb
push
or
test
xchg
inc
lret
sub
aad
call
sub
mov
jecxz
test
cmp
fldcw
mov
mov
pushf
data16
pushf
mov
lea
fcmovu
nop
aad
insb
jb
mov
add
addl
je
ror
jns
or
add
or
imul
xchg
aaa
int3
aad
les
loopne
jg
call
adc
sub
js
scas
lret
dec
lds
lods
pop
lret
mov
mov
popa
mov
rcr
dec
mov
in
jecxz
mov
sbb
inc
ja
and
mov
xor
dec
in
pop
and
and
mov
dec
mov
lcall
sbb
outsb
jbe
pop
and
and
adc
jge
lds
clc
cmp
sub
jno
enter
test
popf
bound
dec
stos
pop
lods
call
mov
jnp
stos
dec
adc
mov
mov
xchg
loopne
ljmp
xor
mov
pop
or
je
fistps
in
mov
insl
ja
lods
inc
push
outsl
lcall
jle
sarb
sar
cmp
leave
jl
in
dec
std
mov
xor
insl
mov
mov
push
push
push
push
cmpsl
dec
sub
push
mov
sbb
and
mov
pop
jb
int3
lret
rcl
mov
popa
aam
push
sbb
in
popf
jg
test
out
push
xor
test
fs
xlat
cmp
lods
dec
jb
pop
loope
adc
sub
out
mov
inc
lods
cmp
adc
ds
leave
add
icebp
enter
cmp
push
lock
cmp
jl
aad
clc
aam
mov
ljmp
lret
xchg
mov
sarb
or
pop
pop
dec
cmp
push
inc
sbb
pop
cmp
push
xor
jne
es
movsl
adc
cmpsl
xor
js
lds
jo
aam
push
push
cmp
cmc
movsb
jle
mov
xchg
adc
fs
cmp
clc
addr16
cwtl
add
mov
shl
iret
inc
imul
jae
lods
loope
push
repnz
sbb
clc
cs
add
je
pop
push
pop
xchg
push
cmp
jl
aaa
out
dec
dec
jecxz
cld
mov
or
notl
cltd
xor
lods
xor
divb
push
repz
mov
or
dec
mov
push
dec
adc
std
lods
cwtl
add
push
dec
cmp
call
dec
insb
fldt
sub
push
xchg
aam
daa
dec
orl
inc
lods
pop
inc
nop
cli
mov
imul
test
sub
cwtl
sub
jg
lea
mov
cmp
mov
aaa
xorl
pop
dec
and
mov
in
jbe
ret
rolb
pop
rorb
cmp
in
push
clc
pop
das
pusha
add
je
arpl
out
outsb
add
mov
test
xchg
jo
or
sub
dec
enter
mov
enter
jmp
imul
mov
cli
stos
dec
or
pop
mov
push
adc
pop
pop
inc
xchg
cvtps2pd
sbb
in
hlt
sbb
stos
inc
cli
dec
xor
push
loop
xchg
fcoml
rorl
aam
mov
and
push
jbe
or
cs
pop
std
pop
or
ljmp
fnstsw
movsb
out
mov
jl
ljmp
pop
jbe
mov
mov
mov
push
ljmp
add
aas
into
mov
pop
pushf
outsb
or
add
mov
pop
cmp
sub
bound
xchg
lds
pushf
test
inc
scas
add
mov
lds
or
add
popf
mov
push
lret
mov
xchg
mov
divb
jg
xchg
mov
mov
icebp
push
lods
stc
sub
xor
cmpsl
js
pop
fstpt
jne
sbb
mov
xlat
xchg
aas
and
push
lret
rorl
or
sbb
test
push
mov
fsts
sbb
imull
mov
jp
xor
idivl
push
imul
mov
mov
adc
sub
into
sub
and
in
pop
inc
add
cli
je
loop
pusha
xlat
dec
jl
incb
jp
push
sbb
bound
in
xor
push
mov
dec
pop
int3
ror
daa
bound
and
loope
push
mov
push
mov
fdivl
nop
orl
xor
jecxz
nop
pop
sti
fcompl
dec
fs
test
scas
pop
push
cmp
xor
stc
shlb
dec
sub
pop
mov
xor
cltd
cmp
roll
ljmp
call
addr16
inc
sbb
fdivr
repz
ljmp
sarl
push
xchg
fwait
ja
cs
dec
dec
sub
jbe
decl
dec
cmp
movsl
es
push
pop
inc
jle
arpl
mov
mov
lods
xorb
push
hlt
gs
or
callw
and
and
shll
movlps
out
lods
lds
push
add
dec
out
and
lock
push
mov
lods
xor
loopne
dec
push
jmp
into
push
and
icebp
shll
gs
clc
stc
fldl
int3
adc
test
adc
test
nop
lods
dec
mov
cmp
test
sahf
mov
or
adc
loopne
mov
lret
arpl
jp
stc
mov
cmp
gs
add
mov
inc
or
push
pop
jle
in
gs
lret
data16
push
sbb
mov
adc
push
xchg
dec
jecxz
je
add
stos
mov
xlat
xchg
movsb
mov
mov
dec
xchg
sbb
or
fldt
dec
and
xchg
mov
sahf
std
bound
mov
subl
test
arpl
mov
lret
into
movb
test
imul
jne
out
sub
in
mov
daa
sahf
imul
loopne
mov
push
sub
rorl
ret
out
test
sbb
les
jb
mov
adc
sub
insb
sahf
pop
jae
or
add
mov
jle
dec
push
hlt
mov
push
add
fsubrl
sbb
flds
and
test
cmp
sub
dec
rol
out
lea
call
mov
add
aas
fstl
clc
xor
sti
inc
dec
lock
movsl
cltd
jg
repz
sbb
imul
loopne
xchg
mov
pop
add
pop
mov
clc
sub
in
pop
lods
xchg
push
pop
aas
sbb
xor
mov
repz
and
lds
xchg
adc
lea
or
mov
das
cmp
test
pop
jecxz
popa
push
out
push
push
push
jae
test
out
es
jns
xlat
jno
mov
push
jl
sarb
std
jae
adc
cmp
arpl
sub
dec
insb
cmp
and
stc
ljmp
inc
subb
xchg
xchg
icebp
shlb
mov
decl
mov
ret
xchg
sub
out
lock
loopne
divl
jns
je
xrelease
or
gs
adc
sub
repz
lret
and
and
xor
or
mov
add
das
call
jns
dec
adc
mov
cmp
jns
into
mov
jle
outsb
and
negb
xchg
sub
add
dec
stc
dec
test
mov
repnz
and
stos
cmp
pop
ror
shl
xchg
out
sarb
mov
std
fsubr
dec
cmpsl
lods
movb
jmp
or
add
push
ja
arpl
js
std
mov
push
push
in
sahf
push
jb
imul
fidivs
sub
in
cli
call
popa
sub
or
adc
loope
dec
push
push
mov
cmc
insl
mov
jl
inc
mov
lods
sti
push
adc
scas
fdivl
jecxz
rol
sub
pushf
mov
and
fiadds
sti
add
inc
mov
stos
inc
mov
xchg
out
scas
xor
gs
jns
in
push
jecxz
fwait
out
jnp
push
pop
jnp
jno
outsb
dec
in
jmp
sub
test
adc
dec
add
lret
inc
loop
dec
mov
filds
test
jno
ja
pop
adc
data16
xor
push
jmp
mov
xor
or
in
in
test
loopne
shl
push
out
sarl
push
sub
add
mov
mov
out
aam
xchg
cmp
aam
lds
pop
fs
pushw
fcompl
jae
pop
sbb
adc
or
xor
dec
dec
mov
jmp
icebp
or
and
add
adc
lret
sub
cmc
outsb
jb
fwait
out
sbb
push
sub
and
scas
cs
push
cmpb
pop
mov
pop
mov
sub
fistl
sub
negb
push
sub
out
jp
add
pop
jns
hlt
std
xchg
mov
inc
sbb
lret
stos
or
and
pop
lock
das
jno
cmp
es
push
xchg
ja
mov
outsl
arpl
fldcw
out
jns
mov
sar
int
and
adc
pop
jne
or
adc
xchg
xchg
push
pop
das
iret
fstpl
cmp
into
out
lret
mov
fistpl
mov
clc
jle
rolb
xchg
jl
rolb
in
loope
in
push
mov
mov
mov
sbb
sub
add
es
mov
xchg
jbe
xchg
sub
cmp
mov
and
mov
mov
out
mov
sub
jp
or
push
xchg
mov
mov
aas
ret
lret
adc
adc
inc
xchg
pushf
fbld
pop
sbb
or
loopne
and
inc
mov
loopne
sahf
fcompp
aas
add
jl
pop
pusha
or
insl
dec
pusha
adc
lcall
lds
sbb
pushf
push
mov
adc
pop
cli
pop
and
loope
call
xorl
xchg
dec
pop
xor
pop
push
outsb
ficompl
loopne
loope,pt
movups
push
rolb
sub
mov
sub
test
js
xchg
sub
lahf
dec
pop
lcall
and
mov
push
push
jns
pop
fimuls
or
ds
das
fidivs
cwtl
xchg
mov
and
ja
inc
xor
jecxz
fidivrl
lahf
push
call
imul
lret
push
mov
outsl
push
sbb
sub
movsl
mov
icebp
rorl
rolb
jl
adc
bound
imul
mov
es
xor
mov
push
pop
fisttpll
xor
mov
aam
shrl
mov
xchg
je
dec
and
mov
mov
jne
jmp
rorl
pop
incl
inc
fbld
xor
jae
je,pt
jo
sub
std
add
or
fmull
js
fdiv
or
push
cmpsb
xor
cmc
out
out
adc
mov
mov
xchg
mov
mov
or
sub
cmpb
bound
adc
mulb
cmpsl
leave
addr16
jno
cmp
repnz
dec
mov
xlat
jle
push
insl
mov
in
mov
in
jno
enter
pop
mov
xor
test
insb
jb
or
cli
mov
or
lods
sbbl
jg
mov
push
mov
sub
mov
in
dec
jl
xchg
jbe
shlb
mov
inc
js
push
clc
jg
leave
repz
pop
rorb
aam
and
idivb
dec
lcall
pop
hlt
rcr
mov
adcb
or
sarl
icebp
cwtl
subb
dec
xchg
pop
and
aam
xchg
int3
and
aas
or
push
push
movsb
push
xor
loope
cmpsl
inc
hlt
or
mov
jmp
add
mov
inc
sti
mov
lods
aas
add
xor
push
clc
adc
or
mov
shll
fnstenv
movsb
pop
insl
addr16
xchg
fcom
cmc
int3
scas
lods
and
push
cmpsb
and
in
or
addl
das
inc
sahf
imul
xchg
rcll
xor
fildll
mov
mov
jnp
cltd
aas
mov
sbb
xlat
out
mov
cmc
push
pop
inc
push
andl
adc
in
hlt
loopne
lea
sahf
scas
lahf
adc
loope
or
shll
jge
stos
pushl
jns
mov
mov
ror
sahf
jno
push
ret
xchg
pop
cli
lds
xchg
and
xlat
mov
filds
loope
jnp
iret
hlt
out
dec
sub
mov
fwait
jmp
ret
add
scas
sbb
jge
repnz
popf
jge
xchg
pop
sbb
xor
test
sbb
movsb
test
push
test
and
out
push
shlb
popf
stc
xchg
dec
push
push
jns
mov
aad
fs
inc
sub
ficomps
sub
gs
sub
jp
sub
ret
cmpsl
jmp
nop
inc
mov
adc
adc
pop
xlat
stos
mov
sbb
outsb
pop
stc
mov
lea
sub
push
add
pop
or
mov
in
cmp
mov
sbb
movsb
aas
ss
xchg
roll
aad
icebp
add
inc
js
lds
add
sahf
mov
cmpsl
mov
ljmp
push
lea
dec
in
mov
or
fwait
inc
jg
push
shll
outsl
sbb
lods
xchg
and
mov
lods
dec
aaa
inc
out
push
out
pop
out
es
popf
enter
sbb
dec
shrl
push
jmp
adc
sub
cmpsl
mov
jnp
push
pop
or
sbb
lea
or
subb
jnp
int3
icebp
cmp
testb
mov
test
pusha
testb
mov
dec
or
add
or
xchg
push
in
popl
lcall
int
cmp
shrl
xor
inc
pop
jecxz
xchg
inc
xchg
and
outsl
push
and
repnz
or
ja
nop
and
pusha
mov
xchg
push
inc
outsl
push
adc
cld
cmc
cli
pop
imul
movsl
mov
sub
pop
add
pop
out
sbb
roll
mov
inc
aaa
add
test
add
jns
sub
sub
jns
or
addr16
insb
jge
push
cmp
je
stos
dec
cmp
pusha
sbb
sub
and
xchg
stos
cmpsb
cmp
inc
xor
push
ror
add
xchg
pop
insb
stc
xlat
cli
and
xchg
gs
ja
fwait
jno
adc
mov
mov
or
scas
mov
add
cli
add
loop
out
mov
mov
mov
cmpsb
dec
movsb
mov
push
lds
inc
int
xchg
xlat
xorb
inc
xor
pop
sbb
ds
inc
insb
out
mov
mov
mov
or
lret
into
cmpsl
repz
fs
inc
sbbl
or
in
mov
lock
inc
inc
adc
mov
sub
cmpsw
inc
xor
fucomi
sub
jbe
adc
dec
push
fiadds
xchg
xor
stos
mov
pop
loop
fdivrp
ds
jg
xor
mov
imul
cltd
addb
add
mov
add
cmp
adc
cmp
or
push
aaa
push
inc
out
mov
pusha
hlt
sub
or
fidivl
scas
adc
sub
adcb
cld
xor
es
add
sbb
test
popf
push
fucom
xor
std
add
cwtl
mov
or
lods
out
xlat
popf
mov
test
mov
dec
movsb
shr
es
cmc
xor
push
test
shrl
fadds
push
out
sub
ret
jmp
stos
ljmp
jns
jae
loop
sub
sar
pop
dec
or
push
insl
push
stc
outsl
add
adc
outsl
mov
jno
xchg
push
push
jmp
mov
arpl
inc
test
xor
mov
int3
dec
or
lods
dec
xchg
lret
sub
or
jge
mov
sbb
add
xchg
insl
mov
add
cli
mov
out
or
mov
adc
cmp
cmpsl
jge
jns
add
xchg
add
jbe
mov
rcr
xor
sahf
pusha
or
loopne
imul
mov
cli
roll
jno
cltd
or
sti
mov
mov
insb
add
shlb
repnz
pop
add
ja
jns
pop
repz
int3
test
push
pop
leave
fdivs
aam
hlt
lahf
sub
fdivrl
ret
sarl
lret
ljmp
ficoms
shrd
xor
jo
jle
xchg
out
adc
cli
pop
mov
pop
movsl
add
sti
out
xchg
daa
adc
imul
inc
clc
in
js
rcl
fldenv
add
aaa
test
out
pop
outsb
les
inc
dec
lcall
sub
and
scas
ljmp
aad
leave
adc
nop
lahf
cli
stos
nop
iret
out
fadd
loopne
or
jl
loopne
test
push
sahf
popa
popa
or
add
mov
les
sbb
call
adc
int3
dec
lods
and
int3
shl
xchg
pusha
adc
mov
jbe
xchg
push
sarl
lods
and
mov
ja
pop
inc
testb
fstpt
dec
call
das
sub
jnp
jbe
mov
adc
sub
cli
sahf
lcall
jmp
movsl
adc
cmp
lock
gs
xor
sarl
mov
stc
int3
test
and
cmp
daa
dec
dec
test
lcall
jmp
rcrl
cmc
jo
cmpl
imul
jns
ss
push
idivb
cli
mov
xchg
sub
dec
sub
xchg
pop
out
rcrb
neg
fistl
xchg
mov
test
int
test
imul
pusha
inc
fsubrs
cmp
pop
mov
dec
aaa
ficoml
repz
imul
xchg
push
out
pop
jecxz
adcl
lret
jecxz
cwtl
call
outsl
add
mov
sub
and
pushf
push
leave
test
inc
testl
xlat
bound
adc
cmp
inc
xchg
jns
xchg
dec
sub
dec
jmp
mov
or
xor
mov
addb
mov
aad
jge
push
sbb
in
xor
inc
fldl
leave
adc
mov
sub
jno
xchg
loope
sbb
ds
lahf
add
popl
call
xorl
lods
rol
aas
mov
cmpsb
cmp
xchg
arpl
insb
inc
aas
sub
mov
mov
xchg
xchg
inc
sahf
mov
or
mov
nop
push
pop
in
mov
inc
dec
push
and
outsb
xor
push
jle
xchg
rol
adcl
int3
mov
mov
jmp
sbb
cmp
xor
ja
jns
repz
imul
cmp
fisttpll
cmc
inc
nop
dec
xor
adc
sub
rcl
mov
inc
stos
fst
daa
or
xchg
sbb
in
mov
ljmp
popa
popa
rep
in
fldl
shrl
push
cltd
cmp
shlb
aas
cmp
cmp
xchg
mov
cmp
or
sub
jbe
xchg
fs
cmp
mov
and
lahf
pop
ret
nop
push
adc
jbe
in
rorl
fisttpll
rcr
and
repnz
push
mov
and
adc
test
jle
ja
lret
addr16
and
fldenv
jmp
std
xor
je
js
pusha
in
lock
in
xchg
stc
lea
mov
mov
addb
stos
inc
es
sub
movsb
shlb
mov
adc
xchg
xchg
ds
or
xchg
les
sub
mov
mov
test
outsl
push
jno
xchg
out
inc
push
movsb
daa
cmp
jns
pop
repz
mov
bound
xor
clc
dec
test
scas
mov
cmc
mov
jge
outsb
in
pop
stc
adc
mov
pop
push
mov
inc
daa
imul
repz
lds
xlat
and
aam
lds
or
lea
jecxz
gs
rorb
lcall
mov
cmp
push
dec
jmp
mov
dec
add
aam
mov
adc
jnp
ja
lcall
fwait
int
add
cmpsl
popf
jle
movsb
repnz
mov
les
sahf
push
out
mov
in
cs
adc
iret
or
in
js
mov
and
insl
fyl2x
cmc
pusha
rorb
dec
rclb
fdivrs
insl
pop
sti
xchg
sbb
push
sbb
xchg
lds
loope
fsubs
mov
orb
and
jb
bound
imulb
add
mov
andl
pop
inc
movsb
mov
inc
leave
mov
fisttps
cli
lcall
cmc
imul
cmp
shrb
cmp
popa
das
jbe
mov
sbb
fs
jo
push
fcoml
int
ja
addr16
push
xchg
sub
and
mov
mov
mov
leave
es
lcall
adc
dec
popa
and
rorl
push
insb
lock
movsl
loopne
mov
sub
xor
ja
xor
fildll
out
push
fldenv
out
inc
popa
sub
mov
push
xchg
lret
je
cmp
scas
jns
fimuls
pop
ss
addr16
test
repz
inc
mov
push
push
addr16
nop
insb
mov
mov
jb
mov
add
and
sarb
insb
xchg
mov
fildl
popa
loopne
sbb
dec
inc
push
lods
mov
pusha
or
jbe
call
jae
mov
lret
push
mov
idivl
inc
pop
dec
ret
mov
les
addr16
push
dec
divb
mov
stc
hlt
mov
cmp
in
movsl
dec
rorb
sub
jge
jp
jno
shll
fbld
lock
mov
sub
xchg
fcoml
icebp
aaa
or
xchg
sarl
xor
out
mov
pop
sub
test
cwtl
outsb
jecxz
test
ror
sbb
inc
push
orb
pushf
adc
lret
ds
cltd
jae
inc
cmp
dec
insb
xchg
sbbb
mov
std
add
repz
in
int3
push
imul
xchg
push
jge
adc
arpl
ficompl
lret
pushl
mov
cmp
es
out
sti
adc
mov
out
cmp
mov
sbb
mov
mov
sub
xchg
mov
in
mov
sbb
add
insl
sbb
cmp
cmp
adc
or
lea
and
add
inc
icebp
lret
push
xor
cmp
lcall
rol
xchg
into
stc
pop
jmp
lods
les
cmpb
and
adc
mov
push
add
mov
add
ret
fnstsw
mov
outsb
jo
lret
jb
dec
loop
lods
insb
pop
scas
or
mov
int3
test
sub
jmp
jns
jle
vrcpps
cmp
gs
jecxz
out
jne
into
int
jp
cmpsb
jge
cwtl
mov
adc
lds
cld
mov
push
add
nop
lcall
faddl
push
sub
mov
shlb
std
les
dec
xor
jb
dec
shll
lret
inc
std
test
mov
in
das
add
mov
bound
pop
mov
les
pop
outsl
push
or
lcall
cmpsb
out
add
imul
mov
cs
iret
xchg
pop
pop
mov
loopne
pop
ja
pop
imull
ja
mov
mov
pause
sarl
shl
icebp
xor
xchg
cld
aaa
jbe
dec
lcall
push
mov
test
neg
shlb
jle
jnp
roll
test
cmpsl
lret
stos
mov
std
sbb
xchg
into
mov
pop
stos
jae
cmpsl
pusha
sub
jnp
jp
add
pushf
popa
in
fs
xor
mov
pop
push
jg
mov
inc
inc
xorl
xor
mov
jae
xchg
or
out
pop
jns
movsl
mov
and
adc
sbb
push
lahf
jo
aas
mov
cmp
jo
leave
divps
mov
int
call
dec
cwtl
lret
and
cmc
out
flds
adc
or
and
pop
pusha
hlt
cpuid
add
testb
daa
or
cmp
in
je
mov
cmp
mov
inc
fdivrs
fstpt
minps
jl
mov
cmp
mov
cmp
adc
lret
lock
repz
sub
jl
push
fs
and
xchg
lods
rcl
cmp
imul
stc
and
xchg
push
iret
sbb
pop
arpl
cs
adcb
ret
mov
pop
inc
mov
cld
addl
ret
ret
pop
xchg
cld
movsb
or
sub
shl
pop
push
out
sub
jae
push
lods
cli
ss
popa
inc
sub
inc
pop
mov
sti
es
sbb
inc
dec
dec
pop
inc
bound
and
aad
fbld
shll
cmp
popf
sbb
xchg
roll
pop
sahf
dec
repz
add
and
mov
cmpsb
aas
scas
jnp
jmp
adc
sub
xchg
add
cmp
in
iret
or
sbb
cmp
xchg
adc
pop
movsb
fidivrs
imul
mov
out
mov
mov
icebp
enter
jg
push
repz
push
pop
popa
push
adc
stos
lcall
fucomp
mov
ss
gs
push
push
push
shlb
ja
and
mov
sbb
mov
jns
cwtl
shll
std
push
pop
push
inc
jp
in
and
hlt
sub
mov
dec
loopne
lret
or
pcmpgtw
jle
cmp
push
sbb
cs
js
mov
or
lcall
push
cmpsl
xchg
mov
sbb
ror
in
cld
adc
xchg
add
paddd
mov
repz
jecxz
mov
sbb
imull
xor
and
lds
dec
lods
jae
enter
test
add
add
jl
inc
mov
push
or
aam
cmpsl
mov
fildll
mov
cs
test
cmp
jmp
fisttps
mov
or
mov
mov
push
push
ret
fists
cmp
bswap
ret
bound
lret
mov
dec
push
sub
fbld
lret
ret
jne
ficompl
xchg
mov
and
aas
int3
adc
and
or
add
loopne
imul
out
xchg
stc
es
dec
lds
aaa
jno
fmuls
leave
arpl
cmc
inc
push
xor
add
dec
fisttpl
or
inc
fisubl
push
ror
push
cmpsl
dec
cmp
and
jle
sbb
jae
jecxz
popf
imul
cmp
lods
out
adc
mov
roll
sbb
lds
and
dec
stos
rcll
mov
jle
dec
out
pop
xchg
jp
mov
or
mov
cmc
ret
repnz
cmpsb
fnstenv
imul
out
mov
push
fsubs
sub
and
aas
push
xchg
shrb
bts
fisttps
lock
shrb
sbb
fisubs
push
testl
js
mov
ror
pop
xchg
scas
out
jno
xor
push
out
jns
dec
mov
out
mov
fptan
mov
jns
xchg
out
cmp
sbbb
test
lea
fwait
mov
push
or
jge
push
popa
stos
idivl
and
mov
test
inc
xor
pop
test
jns
repz
scas
es
rol
pusha
cli
dec
mov
in
jbe
add
mov
and
sub
test
mov
ret
mov
jno
gs
mov
shrb
fistpll
icebp
bound
cld
cmp
cmp
and
ljmp
xchg
les
cli
movsb
xor
inc
ficomps
shrl
les
pop
mov
jecxz
js
inc
mov
xchg
call
outsl
je
jmp
mov
mov
cmpsl
rorl
inc
cmpsb
inc
rol
xor
lcall
inc
pop
movsl
ds
out
xor
es
jmp
lea
sbb
add
cmp
inc
jecxz
push
insb
pop
push
add
cmc
dec
mov
out
adc
rolb
je
pop
pavgb
fwait
ljmpw
and
cli
jmp
sub
xchg
inc
jbe
cmp
lock
das
or
pop
pop
bound
push
jnp
pop
xchg
loop
inc
sbb
xchg
lods
mov
jo
and
xor
mov
mov
test
jb
pop
aad
sahf
rcll
cmpsb
lods
stos
sub
xchg
mov
andb
fdiv
sbb
xor
adc
and
xchg
xchg
or
and
jg
and
sub
rolb
fwait
sbb
call
addb
or
jns
ror
ret
and
mov
mov
cmp
fs
imul
mov
addr16
mov
addb
outsl
pop
sbb
pop
dec
pop
jmp
xchg
imul
push
jns
or
cmp
add
mov
sub
mov
scas
lds
xor
mov
arpl
lret
cmp
rcrl
addr16
test
int
lods
dec
test
jne
cmc
xchg
push
jl
cltd
sahf
ret
mov
bound
xor
imul
sub
jl
rcl
shll
test
mov
enter
movsl
sub
pop
push
add
mov
scas
lret
cmp
popf
aad
in
pop
mov
mov
fisttpl
cli
stos
insl
mov
fs
mov
xchg
inc
xchg
rcl
cmp
fsubp
inc
insb
int
inc
test
testl
je
inc
xor
cli
loop
push
inc
data16
mov
mov
sbb
xchg
or
dec
andb
inc
lret
daa
int3
lock
push
push
mov
je
int
push
in
sbb
pop
push
shrb
punpcklwd
hlt
add
test
setbe
dec
jle
xor
xor
mov
sbb
int3
insl
gs
adc
std
je
imul
jo
pop
aas
movsl
pusha
cmpsb
mov
mov
and
js
addr16
add
and
xor
stos
cmp
xor
dec
mov
mov
cmp
xchg
or
sbb
cmc
popa
jmp
sbb
xchg
loopne
cmp
paddusb
dec
loop
xor
sub
cmp
je
xor
jnp
cmp
xlat
insl
dec
xchg
pop
push
dec
mov
xchg
jnp
jmp
loop
and
ret
jecxz
sbb
loope
mov
pop
jecxz
imul
jp
ret
addl
pop
cmp
mov
popf
clc
xlat
sbb
es
loop
push
mov
ret
inc
stc
negb
faddl
popa
xchg
lcall
jbe
pop
add
jp
cltd
cmp
push
sti
daa
jecxz
jnp
adc
sub
aad
sti
add
and
jge
mov
lods
insb
add
movsl
xor
mov
sub
rol
pop
fsts
int
mov
xor
int3
int
pop
pop
jb
fisubrs
jge
jmp
push
shrb
cli
sbb
jp
roll
push
add
call
mov
and
fwait
or
pop
mov
or
rcr
adc
enter
insb
flds
rorb
cmpsl
je
pop
jle
mov
mov
xchg
push
stos
mov
fiadds
and
into
fs
jle
sahf
xor
mov
cmp
clc
fucom
inc
pop
inc
cmp
fistpll
mov
adc
das
xchg
insl
add
addl
push
adc
je
mov
dec
or
cltd
aaa
mov
fbld
fidivl
repz
shrb
cmp
std
push
cmpsl
or
rol
cmpsb
pop
xchg
in
mov
mov
xchg
add
dec
adc
mov
fsubs
jp
fwait
or
adc
sbb
mov
dec
mov
scas
cmp
and
jl
loope
icebp
mov
js
iret
test
jge
cmp
test
addr16
lcall
dec
pop
shll
add
or
pop
aas
loopne
xchg
mov
mov
das
loop
rol
pop
jp
fucomp
mov
push
inc
fdivr
scas
lcall
es
daa
orb
sahf
jo
js
add
mov
xchg
bnd
ds
push
mov
ds
or
pop
mov
xchg
or
jecxz
jmp
cmpsl
add
sub
pop
add
in
push
xchg
aaa
imul
loop
lret
je
imul
aam
and
inc
into
scas
mov
dec
mov
jnp
ret
push
push
inc
fcomps
outsb
pop
push
jb
jle
cld
xchg
pop
push
loopne
cmp
push
push
es
nopl
aam
adc
scas
xorb
fdivrs
jg
adc
add
lock
mov
fadds
mov
outsb
mov
in
ret
mov
roll
je
xor
test
dec
xor
out
cmp
adc
pop
sar
cmp
stos
push
popf
push
cmp
or
push
fisttpl
xchg
pop
mov
sti
clc
and
aas
outsw
adc
pop
pop
outsb
mov
sub
sub
xchg
mov
orb
pop
daa
ss
decb
xchg
inc
sbb
test
movsl
fsubs
pop
in
hlt
sbb
adc
jl
addl
dec
test
fcoms
jg
hlt
dec
jne
sahf
dec
inc
aad
lret
or
mov
sbb
push
jl
sbb
into
cmc
pop
frstor
push
inc
cmp
cwtl
je
aam
and
hlt
cmp
insb
push
jmp
push
lret
sbb
and
mov
mov
les
sub
or
je
imul
jle
nop
jne
repnz
jnp
and
ret
sbb
xchg
mov
cmpsl
mov
fisubl
xor
out
adc
pusha
loopne
jle
sahf
sub
test
nop
sub
aad
pusha
aas
mov
xlat
movl
inc
push
cmp
jbe
push
jg
or
jp
push
inc
clc
adc
pop
test
mov
adc
mov
cmpsb
imul
or
or
ja
cltd
movsl
sbb
imul
out
fcomip
dec
neg
xor
je
repnz
pop
xor
mov
adc
mov
add
ljmp
pop
js
int3
cmc
subl
repz
xchg
push
rclb
sti
fisubrs
decl
push
lret
add
stos
repnz
inc
mov
jo
xchg
add
inc
std
pusha
shlb
xor
push
lret
dec
dec
or
aaa
cmpsb
fwait
jmp
and
or
fiaddl
mov
outsl
push
clc
xchg
push
scas
cmp
pop
outsb
inc
cli
es
push
mov
dec
or
dec
jge
mov
xchg
aaa
stos
lods
popf
test
push
pop
mov
imull
mov
xchg
push
stc
leave
and
cmp
xchg
sahf
mov
and
andl
in
fistps
sub
mov
arpl
pop
sbb
inc
push
daa
adc
shlb
lock
jb
inc
mov
leave
xchg
icebp
or
scas
cmp
mov
fs
or
pop
cs
mov
sub
dec
pop
outsl
sub
mov
xchg
pop
mov
loope
leave
scas
ja
lods
mov
xchg
out
insl
aam
test
inc
test
loopne
sbb
inc
test
sti
ficoms
pop
lahf
cmpsl
dec
andb
xchg
mov
je
jg
sarl
jne
mov
rorl
mov
adc
pop
mov
sub
cmp
jbe
mov
inc
daa
xchg
nop
pop
jns
out
or
sub
sub
lret
fcomps
push
sub
or
mov
mov
xchg
push
xchg
fstps
jp
mov
mov
fdivs
inc
cld
js
pop
inc
leave
insl
insb
pushf
sar
jecxz
pop
inc
repnz
rcl
lods
dec
xchg
sub
dec
inc
mov
je
stos
aas
xchg
xchg
movsb
call
fdivrl
lea
adc
pop
or
xor
mov
cwtl
xor
filds
cmp
pop
ja
scas
xchg
add
jae
das
or
pop
mov
arpl
cmp
call
and
lret
sbb
lcall
inc
lret
mov
fldcw
in
xlat
xor
scas
jle
jle
repz
shld
loope
xchg
aad
test
int3
arpl
push
fcmovnb
or
call
jecxz
cmp
cmp
sub
mov
sbb
loopne
insl
inc
push
pop
push
add
cmpsl
push
je
test
or
mov
mull
fisubl
sub
ret
jmp
sub
sbb
daa
js
cmc
jae
cmp
adc
andb
cli
hlt
pop
mov
std
jno
and
cmp
jge
pop
mov
pushf
jg
in
adc
adc
lahf
cmp
jge
ret
xchg
aaa
push
or
mov
gs
aam
inc
test
nop
sbb
popf
xchg
js
adc
into
mov
dec
xchg
aas
mov
in
xchg
mov
jmp
fnclex
mov
pop
sbb
mov
popa
out
jbe
mov
imul
ret
mov
mull
xor
and
mov
movsb
jns
mov
sbb
movsl
dec
pop
jg
xlat
jo
add
cwtl
jno
jo
cmpsl
or
stc
int
das
sti
pop
mov
xor
ret
fucomi
adc
ret
pop
lret
scas
cmp
sbb
xchg
enter
repz
es
mov
cwtl
cmp
insl
jg
pop
mov
xchg
pusha
jle
incb
push
inc
addb
xor
and
sub
int
adc
inc
add
dec
hlt
inc
add
mov
es
sub
fsubs
out
add
hlt
jbe
cmp
fwait
push
or
xor
xchg
call
and
stos
or
fsubl
movsl
mov
dec
adc
xor
jne
mov
insb
xor
mov
cs
adc
mov
sub
stos
rolb
lret
pop
adc
lods
xchg
decl
mov
int3
pop
jo
js
xor
decb
std
sbb
mov
dec
add
mov
mov
pop
mov
inc
add
lret
sub
xchg
push
scas
dec
rclb
pop
das
jb
into
push
sub
push
test
add
sbb
dec
or
enter
out
xchg
add
jne
outsb
das
into
mov
add
pop
cmp
popf
gs
fidivs
icebp
sbb
imul
xchg
ss
jp
xchg
hlt
push
adc
ret
sub
xor
es
mov
rcl
xchg
inc
fwait
jecxz
lods
je
sbb
nop
inc
je
in
insl
push
and
aas
cli
je
dec
mov
add
jmp
sarl
xor
into
mov
loopne
out
sbb
ret
jb
fbld
mov
lods
inc
and
adc
jne
lea
mov
inc
xchg
add
jno
fisubrl
iret
negb
call
push
lock
lret
cmp
pop
outsb
push
inc
loop,pt
jg
add
mov
stc
mov
popf
lret
jne
aaa
fwait
clc
test
test
and
sahf
adc
bound
rol
push
jg
jge
out
sarb
rorb
cld
incl
cmp
push
mov
mov
orl
lcall
mov
xchg
mov
mov
cmpsb
out
mov
fs
mov
and
jae
push
outsb
mov
imul
sub
mov
pop
push
sarl
sbb
into
push
movsb
shl
push
movsb
sbb
es
push
ja
push
add
inc
inc
xchg
jno
mov
inc
ficoml
daa
mov
neg
hlt
push
fdivrs
and
not
leave
iret
xor
sti
shlb
cmpl
enter
loopne
insb
mov
in
mov
cs
scas
sub
in
sbb
jp
mov
std
lock
pop
subb
ds
pop
or
cmp
cmp
jp
add
rcrb
stc
or
push
jbe
scas
loopne
aad
xchg
push
inc
xorl
mov
repnz
or
cli
xchg
sbb
inc
fisubrl
or
ret
or
shlb
sub
mov
mov
pop
mov
out
jb
xchg
push
jle
mov
add
hlt
data16
cld
and
sub
lret
cli
sub
popf
pop
arpl
in
cld
scas
mov
xor
adc
je
sub
jmp
dec
fstl
jg
xchg
sti
jb
cwtl
inc
xchg
push
sub
rclb
and
add
add
push
sub
mov
shlb
out
out
inc
fmull
and
jge
rcll
inc
dec
popf
scas
aas
mov
into
mov
jnp
mov
loopne
push
pop
xchg
or
add
ror
loop
cmc
incb
mov
aas
notl
sbb
inc
push
arpl
cli
push
lret
dec
cmp
jno
test
lock
ret
mov
fildll
aad
call
adc
dec
or
xchg
and
int
fcmove
addl
or
xchg
xchg
dec
pop
push
cmp
mov
ficoml
xchg
xchg
scas
out
stos
imul
pop
stos
shrl
and
add
es
inc
pop
psrld
outsl
push
push
inc
push
int
jns
movsl
cmp
add
mov
xor
cmpl
add
int
sbb
ficoml
je
sbb
hlt
faddl
movsl
iret
data16
mov
and
mov
outsb
sub
and
jg
push
movsb
dec
jge
pop
xchg
arpl
popa
inc
dec
inc
mov
mov
ljmp
les
inc
adc
adc
andl
into
adc
and
fwait
es
xchg
mov
inc
jb
es
and
mov
out
int3
or
add
test
adc
push
lcall
imul
jl
mov
and
insl
mov
mov
add
repz
mov
rcr
cmp
lahf
test
cwtl
cli
jle
xchg
pop
std
mov
daa
test
inc
cmp
mov
jns
jns
in
pop
andb
pop
jg,pt
inc
mov
hlt
pop
out
push
add
iret
ljmp
ja
dec
add
shlb
outsb
push
loop
fwait
je
dec
push
cmp
fcompl
mov
test
dec
iret
jno
iret
or
lods
lcall
leave
pop
push
mov
hlt
lods
mov
fists
sbb
sahf
push
sbb
jne
fsubs
push
sbb
push
inc
pop
jns
cmp
jns
js
fstpl
inc
andb
dec
fwait
aas
or
dec
and
es
mov
in
je
push
adc
sub
xor
ja
stos
imul
cmp
mov
dec
test
jle
rorb
call
outsl
daa
jae
push
add
subl
pop
in
fidivs
popf
xchg
lock
dec
inc
rcrb
adc
popa
push
push
loopne
push
cmpsl
xchg
cmp
mov
sahf
dec
add
mov
sub
push
stos
cmp
xchg
sub
mov
addl
fwait
adc
je
icebp
outsl
in
and
mov
sbb
call
mov
shl
mov
add
and
insl
add
xchg
and
loopne
push
inc
mov
add
lcall
sti
mov
enter
mov
pop
xchg
sub
stc
dec
sub
pop
push
aaa
scas
push
sbb
mov
adc
imul
mov
jg
sbbl
in
punpcklbw
clc
fincstp
movsl
sahf
mov
shr
sub
out
fst
outsb
daa
int3
pop
xor
pop
fcmovnbe
push
or
xchg
loope
xchg
testl
and
or
in
jmp
rcll
push
test
mov
xchg
cmp
push
sti
pop
mov
or
add
mov
fsubrs
mov
push
loope
aad
push
pop
pop
sub
pop
pop
xchg
outsb
repnz
mov
cmp
inc
or
sahf
jecxz
pop
je
add
lcall
lods
decl
jecxz
xor
mov
jbe
clc
rolb
push
ss
jg
inc
sti
push
js
push
lods
adc
mov
add
sbb
jmp
in
xor
push
clc
pop
cli
icebp
mov
gs
in
mov
pop
pop
gs
pushf
rol
pop
nop
mov
push
lret
dec
jo
pop
jmp
std
inc
mov
aad
test
jbe
mov
sbb
push
dec
ds
mov
cmc
mov
test
cmc
jle
and
adc
lods
mov
je
xchg
push
cmp
mov
xchg
cmpsb
subb
xor
hlt
nop
mov
xchg
jnp
ds
sub
rol
or
mov
bound
adc
and
cmp
imull
fsubs
sti
xchg
cmpsl
rol
in
push
or
xchg
orl
gs
test
lret
aas
out
sbb
sub
pop
inc
cmp
and
mov
push
or
mov
js
jnp
lods
sbb
cmpsl
mov
and
sbb
pop
mov
rclb
pop
out
jae
mov
test
test
lcall
dec
jle
ja
addr16
or
stos
inc
arpl
xor
dec
leave
imul
scas
pop
jecxz
bound
and
xchg
lret
ds
mov
push
or
and
mov
sbb
repnz
ret
push
jge
sub
les
dec
sbb
xlat
rorb
or
mov
int3
nop
cmpsb
add
dec
cltd
aam
add
push
jne
push
jae
lods
enter
mov
cmp
aaa
add
jl
sbb
push
pop
mov
loope
sub
pop
dec
sub
mov
ret
pop
adc
aam
orl
shrl
mov
xchg
loopne
stos
xor
cmp
and
popa
jnp
jb
in
aaa
cmc
stos
sbbb
inc
ja
xor
les
dec
rorb
sub
and
lea
fdiv
sbb
hlt
xor
add
lods
mov
outsb
repz
xchg
sub
cs
push
loope
cs
mov
cmp
sbbb
sbb
push
xor
or
dec
aam
inc
cmc
gs
cmp
sarb
cmp
cmp
out
lods
mov
loope
les
hlt
mov
cmpsb
sub
or
fwait
mov
fidivs
test
jne
push
lcall
sbb
pop
adc
jmp
mov
xchg
imul
add
jmp
inc
and
das
jmp
cmpsb
shlb
jg
aaa
xor
jle
push
loope
cmp
mov
iret
push
mov
rcll
iret
movsl
mov
and
shrb
mov
dec
shlb
int3
iret
dec
mov
cs
sti
fsubrl
dec
sbb
jmp
or
xor
cmp
gs
or
pop
call
sbb
mov
int
cmp
jl
ljmp
sub
cmp
data16
and
sub
in
jp
pop
cmp
arpl
aad
leave
pop
and
lret
ds
xchg
mov
loop
lret
cmp
js
iret
popf
jp
pop
fnstsw
into
fistl
or
js
mov
add
adc
inc
icebp
push
cs
popa
mov
stos
je
mov
lock
fcoml
or
ljmp
mov
fwait
mov
sub
lods
shlb
xchg
and
pop
fdivrp
outsl
jb
jle
inc
mov
imul
dec
push
sub
das
clc
mov
xchg
push
mov
mov
mov
pusha
popf
lds
pop
pop
and
mov
jb
cmp
icebp
push
not
movsl
out
mov
jge
hlt
loope
add
mov
out
cmc
sbb
sti
inc
mov
cmp
fxch
mov
cmpsb
test
mov
fwait
or
mov
insl
inc
mov
rcl
test
xchg
xor
or
xchg
cmp
imul
aas
xlat
mov
test
lock
pushf
imul
fdiv
out
arpl
mov
sti
mov
inc
cmc
or
sbb
jp
idivb
and
jle
jecxz
mov
jae
jnp
sbb
pop
xor
pop
add
push
xlat
jp
push
jp
imul
dec
or
mov
pop
xor
cmp
pushf
stos
fsubs
push
mov
or
jno
sub
inc
or
xchg
jge
jb
ficompl
or
cs
xor
dec
in
int3
sbb
sub
pop
lods
mov
jle
call
dec
iret
adc
clc
xchg
mov
pop
imul
push
xchg
flds
jae
cmpsl
jg
in
xorb
dec
adc
js
cmpsb
or
jmp
push
mov
in
or
jmp
mov
adc
and
sbb
inc
test
ljmp
mov
repnz
popa
cmpb
out
pop
add
mov
lcall
push
dec
enter
test
btr
ficompl
arpl
jo
adc
lret
das
scas
ficoms
movsl
push
or
jl
jp
aaa
popa
inc
adc
inc
push
cmpsl
pop
ljmp
test
pop
and
sbb
mov
xor
cmc
fldenv
fsubs
filds
popl
es
add
and
jmp
ljmp
test
push
bound
pop
test
sub
into
test
jo
js
orb
mov
sub
mov
aad
ja
cwtl
in
xor
cld
cwtl
scas
pop
xchg
mov
adc
push
je
addr16
pop
or
push
daa
shll
jp
fiaddl
mov
mov
fsubrl
fsubrs
fisttps
cmp
push
adc
arpl
mov
mov
xor
xor
push
sti
loop
int
mov
sub
mov
stos
in
jo
iret
mov
jno
call
dec
cmpb
jne
aaa
je
sub
daa
lock
loop
jp
inc
xor
jne
mov
scas
es
rclb
jae
imul
adc
jo
data16
sub
or
rcll
leave
imulb
sahf
stos
dec
or
and
sub
in
jle
arpl
push
ficompl
xchg
dec
pusha
add
mov
push
insl
inc
xor
pop
pushf
cmp
mov
test
sarl
pusha
add
add
mov
in
lret
xchg
jno
aad
ljmp
ja
decb
add
add
mov
pushf
stos
imulb
mov
sbb
iret
nop
rorb
lods
cld
mov
in
inc
loop
pop
js
rcpps
dec
stos
adc
mov
sub
rorb
lret
and
mov
stos
in
jg
cmp
ljmp
jge
jecxz
sub
enter
imul
mov
orw
xchg
push
pop
inc
dec
mov
mov
mov
mov
sbb
sub
lods
in
lret
xlat
daa
shl
sbb
ljmp
xlat
ljmp
inc
mov
imul
mov
imul
add
cmpsl
hlt
ret
pop
cmp
xchg
push
adc
movsb
dec
scas
sahf
and
sbb
pop
stc
xor
xor
pop
jmp
stos
push
push
cmp
daa
stos
data16
fdivrl
mov
and
cmc
mov
popf
push
push
shrb
test
and
jge
stc
adc
cli
push
negl
test
in
push
enter
adc
pop
pop
and
adc
fs
push
pop
cmp
jl
xor
hlt
pop
xchg
scas
rcrl
fldl
faddl
dec
daa
dec
mov
sub
jno
pusha
xor
mov
jl
jnp
push
rolb
xor
shl
inc
inc
das
mov
xchg
add
add
pushl
xchg
push
sbb
and
push
adc
sti
ret
add
shl
mov
aad
sub
sbb
and
adc
jmp
cmpsb
shrl
inc
mov
sbb
push
pop
enter
dec
mov
dec
fs
cmp
inc
cmp
in
sarl
dec
adc
std
mov
mov
jnp
roll
sbb
jge
cmp
movsb
sub
mov
movsl
mov
notb
cmp
push
imul
test
jbe
cmp
adc
mov
fildl
aaa
les
mov
test
jmp
leave
dec
mov
inc
sbb
fisubs
lcall
or
lahf
dec
sub
mov
cwtl
fldt
adc
in
xchg
out
repnz
mov
in
push
dec
loopne
mov
mov
sub
out
adc
loop
rol
cmova
cld
inc
aad
sbb
loope
and
and
out
mov
push
and
or
fisttpll
cmp
bound
pop
hlt
pusha
xor
or
push
shll
pop
mov
test
ja
or
cltd
imul
fucomi
rol
mov
jl
repnz
rclb
jne
pmaddwd
adcl
pop
mov
inc
add
sbb
xchg
jmp
icebp
stos
push
xor
cmp
xchg
sub
mov
jns
pop
jns
jns
jp
inc
mov
cwtl
push
inc
js
push
push
adc
and
out
cmp
insb
mov
out
sub
pop
in
lods
lret
loop
fistps
jle
pop
jmp
dec
inc
out
xor
subl
int3
into
lods
les
inc
adc
daa
cs
push
loop
push
and
stos
jmp
dec
inc
dec
inc
mov
jno
jge
mov
sbb
testl
js
rorb
test
cmp
add
jge
cwtl
rorl
push
or
icebp
rolb
fldenv
shrb
push
push
out
adc
lret
sbb
sbb
test
jbe
mov
cmp
fists
mov
mov
push
adc
stos
negb
adc
aaa
xchg
stos
inc
cmp
adc
lods
sbb
push
in
dec
sub
mov
mov
or
adc
test
cmp
sbb
and
lods
rolb
push
arpl
popa
add
js
iret
gs
pop
cli
mov
or
fwait
xchg
mov
aad
mov
adc
das
dec
rorl
jg
enter
shl
and
pop
fimull
in
fwait
gs
push
pop
hlt
mov
sub
rcrl
pushf
movsl
pop
fs
fs
cmp
in
xchg
jbe
lock
mov
fwait
fwait
insb
dec
mov
jmp
je
in
or
and
shl
sahf
sahf
sub
rcrl
xchg
adc
or
mov
imul
ret
adc
lods
fistpll
xchg
mov
jmp
jns
pop
stos
stc
loop
mov
leave
js
daa
cmpsb
stc
out
add
test
gs
dec
call
adc
jle
scas
dec
sub
or
ss
outsl
stos
gs
pop
enter
into
jb
mov
dec
cltd
push
in
stos
sub
xchg
loope,pn
dec
xchg
sub
add
add
cwtl
fsubrl
mov
imul
stc
cmp
hlt
popl
xchg
cmp
mov
imul
call
jl
aas
add
shrb
cmp
pop
sbb
lds
jnp
pop
imul
je
das
jp
xor
ljmp
push
add
inc
call
test
cmp
pusha
dec
mov
pop
xchg
aas
bound
sub
or
aad
lods
inc
out
cwtl
sbb
and
call
mov
cmp
adc
mov
mov
push
into
popa
xchg
cmp
divb
lahf
mov
test
sub
gs
nop
push
mov
sub
and
xor
icebp
mov
loope
pop
je
je
mov
cmpsl
push
push
dec
mov
xchg
jns
xchg
les
cmp
in
pop
push
mov
cmp
add
sub
icebp
inc
out
lods
cmp
sub
sahf
add
pop
out
icebp
adc
adc
insb
mov
insl
and
ja
cli
fstps
movsl
stos
xor
in
cmp
push
mov
cmp
out
inc
fdivp
mov
xchg
inc
mov
jle
testl
or
inc
int
xchg
inc
cmpsl
divl
xchg
mov
pop
adc
inc
mov
sub
mov
jno
leave
xchg
cld
mov
jbe
std
inc
pop
and
test
cmc
mov
mov
cmp
mov
jg
mov
test
les
fisttpl
nop
pop
cmpsb
fildll
fwait
icebp
int3
mov
movsb
add
movsl
mov
scas
enter
cmc
mov
or
loopew
fwait
lret
add
mov
push
adc
mov
lea
inc
jecxz
ret
xchg
pop
outsb
aaa
inc
push
jge
cmp
sub
inc
stos
xchg
gs
cli
aaa
fisubs
adc
jecxz
inc
mov
in
mov
mov
ja
cltd
aad
pusha
jnp
xlat
cmp
lds
outsb
or
insb
cmp
cmpsb
scas
fucom
mov
pop
mov
out
ret
shlb
mov
fnstcw
scas
jg
sub
or
stos
test
loope
push
add
inc
lods
outsl
leave
imulb
pop
mov
and
jne
sahf
or
xorb
cmp
sahf
std
stc
xchg
repz
lods
ss
add
and
push
test
ret
pop
imul
jnp
or
xor
test
ljmp
mov
fstpt
xor
inc
pop
popa
outsb
insl
inc
inc
pop
insl
sub
xchg
lret
notl
in
sub
and
inc
popa
inc
and
ficomps
jg
inc
mov
sub
fstps
and
cmpsl
fdiv
cltd
lahf
lods
push
das
ret
jecxz
bound
sub
lods
mov
dec
or
int3
in
xchg
and
sub
imulb
stos
outsb
add
inc
mov
cmpsb
dec
movsb
jb
scas
dec
std
xlat
cmpb
pop
adc
jbe
mov
push
mov
xlat
xor
cs
mov
cmp
imul
push
leave
leave
mov
adc
sub
rcr
mov
loope
mov
lret
test
push
jge
xor
xchg
inc
jecxz
xchg
sub
pop
mov
mov
adcb
call
sarl
cs
xchg
pop
push
xchg
arpl
enter
sti
push
pop
cmp
push
pop
in
add
inc
movb
cmpsb
mov
and
aad
sub
push
mov
push
je
mov
jmp
mov
leave
add
lods
sub
clc
cltd
sbb
adc
stc
adc
div
pop
lret
sbb
dec
mov
jb
mov
sti
inc
push
sarl
jno
ficoms
sbb
pop
jge
cmp
out
dec
int
insl
lods
loopne
push
ss
mov
in
mov
bound
pop
mov
aaa
fiaddl
pop
jae
push
dec
outsl
fstpt
aaa
ficompl
pusha
sbb
sbb
lods
test
add
mov
or
push
icebp
push
out
cltd
or
rol
repz
inc
jae
push
add
out
in
and
or
xchg
sbb
ret
push
push
mov
and
int
ljmp
insl
icebp
fwait
pushl
in
ja
nop
sbb
lahf
fdivrl
and
mov
icebp
xchg
cmpsl
lods
dec
idivb
in
loopne
and
icebp
test
fisubs
cmp
test
insl
pop
cmpsb
and
ret
aas
cmp
pop
fsubrs
adc
call
adc
sbb
pop
or
cmc
cmp
sbbl
mov
into
xchg
movsb
push
xor
imull
mov
jmp
mov
dec
mov
or
jnp
adc
cwtl
mov
sbb
mov
into
ja
jp
cmc
jnp
repz
loop
js
cmpsl
xorb
jmp
mov
inc
xor
push
fcomps
cmp
xchg
fwait
mov
int3
test
pop
sahf
cld
lret
daa
mov
sbb
sub
push
adc
jge
mov
sti
push
adc
lock
std
and
push
lods
dec
cmp
aad
adc
mov
push
fcoms
repz
hlt
and
icebp
xchg
fimull
nop
idivb
icebp
push
jg
rorl
mov
into
inc
push
data16
jns
cmp
jae
and
cmp
inc
pop
cli
push
mov
jle
and
daa
testb
push
out
dec
dec
aam
push
js
ret
lock
or
repnz
lods
jne
adc
frstor
or
mov
fadds
xlat
inc
xor
mov
in
clc
out
xor
adc
out
lret
cmp
mov
lds
outsb
rclb
adc
mov
dec
pop
push
hlt
sahf
inc
outsl
cmp
push
ds
mov
mov
and
push
ret
xor
loope
in
pop
push
mov
js
push
ss
jmp
xchg
sbb
lds
std
pushf
push
mov
out
pop
add
bound
js
xor
push
iret
and
int
pop
arpl
xchg
fstps
pop
pushf
push
test
subb
add
fcompl
pop
in
jmp
dec
jl
shlb
div
movsb
ror
outsl
inc
bswap
scas
add
lods
fsqrt
adc
mov
loopne
js
loop
lret
pusha
inc
je
xor
dec
add
pop
pop
adc
icebp
add
sahf
sbb
and
xchg
rcll
popf
xlat
popa
mov
out
ds
push
pop
dec
shlb
xchg
pop
cmp
ss
or
out
je
adc
mov
jbe
orb
lret
ja
imul
pop
push
loope
adc
jmp
adc
movsl
out
push
jg
stc
mov
push
push
aas
add
sub
outsl
lret
inc
sbb
xchg
add
lock
mov
jl
aad
adc
mov
or
cmpb
xor
decl
xor
negl
dec
push
pop
addr16
jns
scas
movsb
jp
cmpsl
pop
fidivl
sbb
xor
aas
into
pop
push
fs
push
inc
inc
pop
aad
xor
xor
and
ss
aas
mulb
ds
xor
jno
idivb
gs
jmp
or
push
cli
sarb
adc
nop
push
jecxz
xor
repnz
loope
sub
rcl
cmc
dec
sub
inc
adc
pop
and
mov
fsubrl
mov
adc
cmp
lods
push
sbb
cmp
pop
cli
mov
lret
jne
dec
add
inc
and
es
dec
clc
dec
cmp
pop
and
data16
fsubs
xchg
ret
mov
and
insl
insb
stos
mov
es
mov
inc
push
dec
and
shll
jecxz
leave
std
jge
adc
imul
scas
fdivl
cli
pop
js
scas
mov
fidivs
mov
push
push
push
push
mov
cltd
lds
test
les
inc
adc
mov
insb
cmp
xchg
shrb
or
je
mov
xchg
xchg
jmp
mov
popa
inc
insb
or
fistpl
cltd
fildll
sbb
imul
sbb
in
test
push
fcmovb
jp
xor
into
pushf
sub
mov
mov
mov
push
sarb
stc
in
repnz
movsb
mov
mov
cmp
sbb
and
dec
adcb
dec
fbld
rcr
in
xor
repnz
mov
clc
repnz
push
adc
popf
jns
out
jnp
movl
dec
adc
mov
pushf
std
int3
xchg
loopne
xchg
sbb
shll
xor
mov
lcall
mov
rol
into
jge
sarl
and
nop
call
cs
ss
stc
cmp
js
clc
mov
lea
in
bound
enter
inc
dec
pop
mov
lea
lcall
loope
arpl
xor
outsl
xor
cmpsb
fst
and
dec
mov
rorb
mov
sub
in
shll
roll
push
js
out
xchg
xor
xchg
sahf
sbb
out
imulb
fldcw
rcrb
and
imul
repnz
ljmp
cmp
add
ret
nop
xchg
cltd
jp
test
ds
lret
sub
xor
and
clc
and
xlat
mov
or
aad
jne
lea
insb
jbe
aaa
mov
cmp
xor
sbb
sbb
push
jge
pop
enter
inc
ljmp
rorb
imul
jl
stos
rolb
pop
mov
mov
jae
addr16
scas
sbb
negl
out
stos
xor
pop
pushf
outsl
je
or
pop
add
imul
imul
xor
movsb
and
jmp
mov
and
ljmp
ss
push
cmpsl
cmp
add
sbb
in
movsb
add
xor
pop
into
cmp
jo
daa
push
and
outsl
xchg
enter
cmc
ljmp
fiadds
jnp
lea
filds
in
sbb
jne
dec
loope
cmp
mov
leave
dec
fidivrl
cmp
inc
sub
sahf
pusha
dec
shl
outsl
jle
fidivrs
mov
mov
and
add
ret
lods
add
cltd
cwtl
dec
push
sbb
cmp
jecxz
and
xchg
int
addr16
jb
mov
pop
icebp
inc
lcall
insb
fbstp
or
sbbl
rclb
jne
rol
out
repnz
inc
shll
jl
mov
test
and
mov
aaa
xchg
pop
cmpsl
fldt
aam
push
cs
in
movsb
stos
cmpl
in
jo
sub
pusha
xchg
add
fsub
pop
adc
scas
enter
push
scas
mov
or
push
pop
or
push
cmp
jae
psrld
idivb
scas
dec
xor
sub
mov
cmp
stc
mov
dec
insb
mov
jo
repz
jb
xchg
aaa
inc
lds
xor
xor
jge
mov
int
pop
mov
lea
cmpsl
sub
push
mov
sbb
jbe
mov
cli
data16
cmovbe
mov
cmp
fwait
mov
pop
dec
in
daa
cmp
xor
or
jne
xchg
movsb
cmc
sbb
sbb
test
repnz
push
dec
jae
aam
sub
sub
lods
adc
add
sbb
in
and
leave
sbb
mov
jg
sbb
sbbb
xchg
inc
lock
jl
mov
inc
sub
aam
pushf
cmp
insl
lock
mov
test
into
ja
jp
mov
and
xor
add
adc
or
stos
fstps
mov
daa
jecxz
test
ss
lds
leave
mov
sub
daa
cmpsl
mov
adc
pop
fdivr
jbe
or
mov
jbe
push
bound
lcall
inc
repz
inc
js
outsb
stos
cmc
ja
and
adc
add
xor
adc
mov
xchg
test
les
sub
dec
arpl
sbb
jecxz
out
sar
aad
and
in
push
pop
mov
sbb
call
or
in
js
mov
jb
lods
cld
ror
jmpw
nop
push
mov
sub
in
rolb
popf
and
stos
dec
cmp
enter
es
in
jg
repz
sbb
inc
push
mov
into
cmp
popf
loop
cmp
cwtl
jmp
mov
mov
sarl
or
hlt
adc
cli
adc
jbe
int
inc
clc
rorb
mov
dec
mov
test
jg
adcb
filds
lods
fcoms
cmp
sbb
pop
out
dec
in
push
xchg
jne
icebp
push
sub
cwtl
adc
mov
push
mov
popa
sub
iret
data16
sbb
push
fninit
negb
inc
lahf
rorl
adc
xlat
nop
push
outsl
push
ja
mov
out
out
icebp
fsts
addr16
outsb
data16
adc
or
jg
in
sbbb
xlat
push
stos
pop
or
pop
loope
sub
adc
nop
sti
lcall
sbb
cmp
aam
and
dec
rcll
mov
mov
aas
inc
aaa
lcall
pop
push
addr16
adc
dec
cmp
cltd
in
pop
xchg
sbb
fidivrl
xchg
mov
sbb
add
and
addr16
jne
fnsave
or
sub
insb
sbbb
adc
lret
and
xchg
mov
jp
jb
xchg
in
push
shll
xor
insl
dec
xchg
jae
ja
push
xchg
out
dec
mov
or
pop
cs
cmpsl
movsl
fildll
dec
xchg
mov
push
cltd
sar
sbb
cmp
sub
mov
das
push
pop
or
mov
xchg
les
adc
jp
xchg
test
adc
dec
mov
mov
mov
inc
add
or
push
inc
pusha
lret
out
inc
int
stos
xor
repnz
pop
mov
wbinvd
push
pop
or
call
pop
ret
cmc
mov
xchg
fdivs
fs
inc
lock
mov
jmp
lcall
pop
inc
push
or
cmpsb
mov
mov
mov
sub
inc
lds
in
add
adc
cmp
xchg
push
add
int
mov
and
aam
jmp
dec
mulb
test
repnz
ret
inc
adc
iret
inc
jmp
add
ret
push
ds
arpl
inc
lret
xlat
adc
xchg
movsb
lahf
shr
ja
adc
lahf
pop
pop
dec
movb
test
sbb
jne
and
es
add
sbb
mov
jns
dec
mov
inc
lods
push
jne
jmp
jmp
push
sub
aam
pop
stos
scas
sub
fwait
scas
fsts
flds
leave
xor
push
out
mov
adc
pop
aam
int
std
pop
mov
out
fildll
int3
and
lods
lea
out
lods
or
inc
pop
lret
jbe
push
mov
cmp
push
aad
pop
mov
movl
cwtl
sub
jle
out
lret
push
lds
test
sub
fdivrl
and
pop
sub
shrb
sahf
and
hlt
jmp
inc
ja
fwait
popa
popf
mov
jnp
ljmp
mov
sub
dec
jge
shrb
imul
ds
mov
lea
aad
test
leave
es
lods
jle
sub
cmpsb
daa
push
xchg
push
lcall
jg
lods
repz
aas
adc
cmp
xchg
cltd
stos
lcall
xchg
mov
mov
out
lds
into
std
adc
cltd
loope
pop
push
or
or
loope
xchg
sub
rcrl
lock
cmp
add
xchg
bound
sbb
pop
push
cli
addr16
push
sahf
or
inc
push
sarl
push
bound
jo
adc
xchg
sbb
cld
pop
push
push
cmp
stos
icebp
inc
movsb
push
add
inc
outsl
repnz
pop
mov
push
cmp
shll
mov
fcomi
push
and
inc
jne
mov
xchg
sub
sarl
push
cltd
mov
loopne
daa
adc
notl
scas
popa
dec
xor
addr16
in
or
in
sub
div
lahf
mov
adc
xchg
and
inc
adc
push
xchg
lret
test
nop
out
push
lret
int
lret
out
movsl
adc
loopne
sar
and
mov
fbld
cwtl
xchg
or
mov
aaa
movsl
pop
and
aaa
and
daa
mov
pushf
loope
dec
scas
dec
push
xchg
or
mov
cmp
cli
xor
jnp
mov
out
mov
xor
pusha
cmp
or
fisubrs
jnp
decb
xchg
xchg
cli
and
int3
out
or
mov
mov
sarl
std
xor
das
loop
push
dec
std
or
xchg
jmp
addr16
cmp
fdivr
dec
add
aas
or
clc
pusha
mov
mov
leave
inc
adc
pop
fadds
fs
testl
inc
int
or
data16
cmpsl
adc
mov
fsts
iret
aam
or
testb
out
pop
dec
jnp
push
popf
repnz
adc
ja
pop
std
add
pop
mov
shrl
rolb
or
and
stc
std
push
pop
xchg
mov
cmp
stc
and
orl
testl
add
mov
pop
sbb
addr16
add
xchg
xor
lret
jl
mov
xchg
or
push
inc
jl
scas
cli
fnsave
lea
jnp
icebp
sahf
fidivrs
sbbl
test
push
loop
xor
adc
iret
sub
cltd
mov
pop
in
xchg
jnp,pn
cwtl
pop
in
fsub
cli
arpl
sti
cmpsb
hlt
shrb
addr16
out
add
lahf
lods
insl
cs
out
mov
in
lcall
mov
loope
fisubrl
cmpsb
pop
sahf
clc
mov
pop
xor
out
add
xor
movsl
inc
int
in
or
rorb
cmp
xchg
testl
mov
dec
mov
dec
mov
das
ss
arpl
jp
outsb
mov
jge
stos
xchg
sub
dec
in
cmp
cmp
lcall
je
ret
adc
mov
and
inc
test
ret
rcll
xor
sbbl
lea
ror
sub
jne
lret
push
cmp
clc
xor
push
jp
ds
sub
push
popf
rcrb
xchg
jb
sti
mov
pop
add
pop
xchg
push
cmp
stos
cmp
es
lock
popf
popf
pushf
fcomps
jo
es
bound
mov
cs
mov
add
imul
pop
or
shrl
push
sahf
cmp
jnp
gs
xlat
push
push
xchg
jne
xor
enter
loopne
int3
test
dec
aas
mull
ds
jns
test
imul
icebp
out
mov
arpl
and
adc
in
mov
incl
std
lret
cmp
push
mov
mov
cmp
imul
cs
lahf
rorl
jno
hlt
fwait
popa
mov
inc
or
push
repnz
out
pusha
or
cwtl
daa
xchg
pop
lds
imul
jbe
popa
pushf
mov
cmp
or
enter
jecxz
cmp
xor
fs
test
mov
add
inc
push
xor
pusha
ss
cltd
xchg
push
ret
ja
rcrb
mov
scas
aam
sti
cmc
mov
imul
js
orl
je
cwtl
dec
addb
out
mov
jno
inc
cmc
jne
sbb
add
lcall
stos
sub
adc
push
cmp
data16
or
test
dec
pusha
cmpsl
push
push
out
sbb
add
inc
test
add
icebp
add
in
or
jae
mov
lea
out
and
pmaxub
sbb
sbb
div
sbb
jp
loop
push
push
addl
in
cld
mov
jne
push
pop
pusha
push
mov
sub
fldl
jns
inc
insl
test
cmp
nop
fwait
int
std
cmp
inc
jns
adcb
mov
sub
push
push
sarb
pop
lret
cli
push
addb
lods
cmp
std
xorl
aam
icebp
fcmovnbe
inc
mov
jne
dec
aad
outsb
pop
test
popf
add
das
popa
jo
jl,pt
es
cltd
inc
sbb
icebp
cmc
xchg
xor
test
jo
fs
xchg
jb
and
pop
fadd
lcall
iret
xchg
cmovne
lea
mov
ds
xchg
or
negb
xor
aam
pop
adc
cmpsb
or
xchg
loope
mov
xchg
cli
sbb
push
adc
jbe
std
stos
pop
jl,pn
mov
pop
mov
mov
push
dec
test
and
push
repnz
xchg
jo
or
cli
mov
mov
pop
imul
scas
pop
and
sub
adc
sub
xchg
sbb
adc
mov
shlb
scas
and
and
lods
push
in
pop
or
push
inc
mov
xchg
inc
mov
lods
pop
sbb
push
repz
int3
dec
push
mov
mov
push
jb
dec
pushw
sub
mov
push
jae
out
push
and
xchg
loopne
mov
cmp
xchg
aad
push
or
mov
mov
mov
and
xlat
int
popa
popf
pop
sbb
call
jns
dec
bound
mov
xchg
mov
ret
add
imul
in
loop
psubsw
lahf
hlt
push
sub
sub
lahf
int3
dec
test
xor
je
jnp
daa
testl
adcl
jo
test
cmpsb
and
cmp
fsubrs
lea
inc
sti
cmpl
xchg
adc
mov
pop
test
aam
xor
mov
cld
dec
fistl
and
ret
pop
repz
es
into
dec
dec
outsl
clc
dec
dec
mov
icebp
xor
arpl
out
mov
scas
pop
enter
push
xchg
jb
leave
daa
iret
or
fwait
inc
fists
rorb
push
or
jl
gs
push
idiv
aad
into
push
lods
push
adc
pop
pop
stos
jnp
mov
test
outsl
or
cmp
and
or
sbb
lods
xchg
adc
mov
adc
mov
popa
xor
push
dec
outsl
rorb
pop
cmp
nop
sub
inc
sbb
xor
mov
sbb
cld
sbb
sbb
jno
inc
fdivr
inc
cmc
stos
out
or
aaa
std
fwait
ljmp
test
mov
push
shlb
xor
add
test
mov
lds
cmp
mov
pop
push
pop
icebp
subb
pop
aas
adcb
xchg
jne
ja
loope
ds
or
hlt
rcl
sub
jbe
mov
sbb
cmp
scas
mov
jg
mov
dec
lcall
inc
mov
gs
mov
sub
mov
and
mov
xchg
clc
lds
adc
pop
mov
jg
mov
mov
sbb
fs
mov
cmp
hlt
push
dec
insb
sbb
jp
cltd
stos
mov
nop
cmp
rclb
in
inc
add
sub
jns
or
sbb
adc
push
cmp
sbb
mov
lret
xchg
loop
hlt
in
inc
aas
lea
bnd
incl
sbb
shll
jne
iret
jp
or
pop
sub
int
mov
push
adc
xchg
mov
jns
enter
test
jae
mov
push
inc
cld
push
pop
test
pop
das
mov
push
shl
out
jg
pop
fdivrl
pop
lods
pop
shll
inc
jle
xchg
scas
xchg
fists
pusha
jne
mov
jp
jge
pop
xorl
dec
aam
cmp
int
dec
mov
adc
xor
jae
or
addr16
std
pop
xor
xlat
fwait
arpl
jo
std
dec
sahf
fwait
aaa
std
test
in
xchg
lock
cwtl
xor
mov
dec
std
push
imul
cltd
out
sub
sbb
idivl
xchg
enter
nop
sti
jnp
scas
adc
out
push
jl
mov
inc
adc
xchg
cmpsb
mov
jl
loop
fcmovb
inc
fsubp
shlb
xor
xchg
inc
adc
cmp
mov
jb
fcmovnu
rcl
sub
pop
cld
roll
lea
mov
pusha
movsl
and
or
daa
inc
gs
adc
cwtl
icebp
or
aaa
lret
movsb
inc
call
adc
iret
adc
xchg
sbb
pop
xor
imul
inc
cmc
fidivl
jbe
bound
dec
xchg
mov
pop
cmp
jno
push
and
fistl
mov
sub
mov
movsl
icebp
clc
js
xchg
jae
lds
int
outsb
add
rorl
inc
fnstenv
shrl
test
push
in
jp
aaa
add
pop
push
pop
insb
sub
pop
inc
dec
jl
pusha
dec
pop
repnz
push
mov
shrb
mov
popa
out
push
roll
outsb
in
icebp
inc
rcrb
or
add
xchg
mov
mov
push
enter
lcall
enter
dec
and
jecxz
mov
and
inc
shrl
lock
sarl
divb
rcll
lea
fstps
xchg
mov
mov
push
aas
sub
icebp
lock
imul
dec
dec
mov
or
rcll
ljmp
stos
mov
jns
cmpsl
or
mov
xchg
dec
add
rorb
push
nop
mov
sub
adc
cmp
and
inc
xchg
mov
les
repnz
cli
lret
mov
or
mov
movsb
pop
xchg
mov
rorb
int3
pushf
xchg
pop
int
mov
inc
dec
ret
or
ljmp
es
add
popf
push
loopne
lds
je
dec
ret
leave
xchg
add
mov
jle
inc
pusha
sti
jp
dec
dec
dec
lods
xchg
repz
add
sub
xor
call
push
xor
sbb
out
shrd
jno
add
push
cwtl
cwtl
ds
lds
ja
xor
sub
jae
push
fistpl
outsb
sbb
inc
lds
out
cmp
inc
outsl
pop
push
fsubp
aas
adc
mov
movsl
les
cwtl
push
cld
insl
adc
sti
sbb
test
sbb
jg
popa
or
lret
cs
ds
fldl
push
insb
mov
mov
inc
fisttps
filds
mov
mov
mov
cmpsl
push
jnp
mov
xchg
pop
xchg
rcpps
js
fsub
leave
std
lea
pop
in
loope
stos
mov
imul
pop
dec
pop
ds
ret
add
adc
pusha
jns
test
sub
jnp
cmp
pop
xchg
into
mov
mov
and
mov
mov
sbb
sbb
scas
in
jb
cmp
push
add
mov
jp
sbb
xorl
loope
test
adc
in
int
push
cltd
sbb
ss
mov
jge
cs
pop
loop
cmpsb
pop
testb
or
aas
jbe
inc
adc
mov
sub
or
fidivs
cmc
ja
add
jmp
jnp
shll
push
adc
cs
xchg
push
mov
xlat
ss
inc
outsb
mov
inc
bound
mov
mov
daa
das
movsb
ficompl
loope
mov
cmpsl
mov
push
loop
xor
sbb
into
cld
movsl
dec
mov
inc
ret
pop
pcmpgtb
or
or
sahf
mov
imul
daa
sti
mov
fcoms
jmp
movups
dec
jb
dec
imul
dec
and
popf
movsb
xchg
jge
out
push
js
ffreep
push
int
popf
ss
push
jno
nop
sub
mov
das
cmp
add
jp
cmp
and
dec
sub
incb
cli
dec
cmp
mov
in
sub
int
insb
shlb
popf
inc
cmp
inc
mov
gs
jne
jle
inc
fbstp
ss
xlat
add
and
push
xor
sub
jb
push
out
xor
incl
into
pop
pop
push
in
mov
imul
es
and
push
mov
or
and
mov
mov
jecxz
insb
icebp
push
inc
mov
inc
dec
aas
icebp
xor
sbb
xlat
jle
add
imul
pop
ficoms
js
adc
idivb
cmp
xor
add
inc
loope
pop
lods
call
and
loope
sub
in
sub
out
pop
int3
jo
pop
outsb
mov
or
dec
sbb
push
sbb
aad
jle
loopne
dec
call
loopne
mov
sub
xor
cmc
insb
jp
mov
inc
push
das
mov
mov
jl
mov
ljmp
or
xor
std
mov
sub
sub
out
inc
in
and
sbb
stos
out
sub
pop
sbb
adc
mov
push
sbb
jecxz
leave
push
out
cmp
nop
mov
push
push
divb
push
push
jl
mov
jb
and
out
cmp
push
push
and
sub
daa
arpl
push
stc
mov
xchg
in
cmpsl
sub
call
int3
dec
inc
mov
push
loop
icebp
lret
repnz
push
fisttpl
push
xchg
mov
fcmovu
jp
aam
mov
imul
jl
ds
cmp
jbe
pop
push
xchg
add
push
dec
shr
dec
loope
imul
mull
sub
fwait
sbb
jle
incl
mov
pop
push
mov
insl
xor
arpl
js
pop
or
stos
push
cmp
mov
push
inc
lret
shrb
fisubs
lods
into
sbbb
addr16
lea
test
insl
push
lret
adc
fisttpll
cmp
dec
cwtl
jo
mov
daa
popa
ds
mov
sub
imul
pusha
jne
rcrb
lds
loope
xchg
cs
rorb
loopne
dec
push
out
jae
cmp
scas
mov
gs
clc
hlt
ret
aam
xchg
iret
mov
jcxz
pop
fs
insl
or
mov
enter
or
xor
std
cmpsl
sbb
mov
and
int3
loope
jnp
sti
imul
cmp
cmpsb
cmp
xchg
jae
icebp
jl
inc
into
inc
dec
xor
and
pop
push
or
fimuls
add
jo
mov
stos
push
in
jnp
shll
lods
lret
pop
in
call
js
pop
int
xchg
pop
jnp
dec
dec
fisubrl
jge
test
jecxz
iret
les
mov
jp
int3
daa
dec
cmp
mov
push
cmp
int3
lcall
mov
cwtl
pop
lods
mov
sub
mov
jmp
cld
xchg
xchg
sbb
les
push
mov
cltd
je
pop
clc
lret
out
jl
stc
fdiv
inc
nop
cmpsl
mov
push
push
ret
pop
mov
push
sbb
int3
cmp
add
adc
sub
inc
daa
inc
sub
lret
int
ljmp
and
xor
sbbl
dec
stos
mov
add
cmpsb
out
test
out
sub
call
incb
cmc
add
dec
dec
leave
mov
jo
pushf
sub
and
push
mov
or
push
imul
in
cli
push
sbb
jg
mov
inc
inc
jle
sbb
or
xchg
aam
inc
sbb
xchg
push
int
cmp
into
sub
fs
pop
xor
lcall
gs
mov
dec
lods
aam
push
ror
lea
sbb
icebp
mov
inc
or
cmp
ficoms
lahf
ret
dec
jne
xchg
cli
add
je
dec
loop
flds
push
inc
push
std
popa
jge
movsb
pusha
pop
cmp
movsl
xchg
xor
les
and
jl
dec
lods
cmpb
ds
inc
pop
cmp
les
out
jae
jle
mov
popa
xchg
cmp
dec
imul
inc
clc
push
and
dec
sub
pop
dec
cmp
movsl
repnz
clc
sub
xor
xorl
aam
mov
inc
dec
pop
xchg
gs
sub
sub
dec
mov
and
cmp
dec
rcl
push
jl
jae
lock
frstor
inc
mov
movsb
sbb
add
sub
pop
push
lds
dec
lret
xorl
fisubrl
push
std
mov
addb
aam
mov
adcb
or
xchg
sub
js
nop
enter
mov
aaa
fnstsw
inc
cmpl
lea
gs
cli
ds
shll
push
fldl
lahf
cld
cwtl
mov
xor
pop
jl
insl
std
push
jecxz
jmp
les
testb
add
jno
into
rep
adc
inc
add
dec
iret
pop
aaa
ss
out
mov
mov
mov
push
sbb
inc
fs
xor
ret
leave
out
ljmp
mov
stc
adc
out
rolb
cltd
jo
jmp
xchg
push
mov
push
inc
dec
lret
and
jno
mov
xor
cmp
enter
and
jmp
cmp
sbb
xor
pop
out
or
rolb
fwait
scas
push
xchg
iret
cmp
loope
fidivl
mov
adc
fwait
rcrl
mov
ds
lods
fstps
loope
shlb
jae
or
sbb
movsl
fidivl
sbb
loopne
or
data16
adc
ja
xor
xchg
mov
test
bound
inc
int
mov
clc
jo
xchg
fimull
pop
jb
stos
arpl
cltd
cmp
int3
push
cmp
jb
xor
lcall
loope
ljmp
mov
pusha
lds
push
push
das
inc
nop
lahf
shr
xchg
add
mov
jb
fsubs
xchg
and
sbb
insb
ja
jbe
mov
in
int
jo
es
add
xchg
rcl
add
mov
int3
test
into
out
sub
repnz
inc
ss
inc
lahf
xor
rorl
jb
mov
xlat
xor
or
int3
sti
add
ss
sbb
xchg
mov
sub
pop
into
int
or
lea
inc
jo
and
add
and
dec
out
push
lret
sub
ficoml
xchg
xorb
repz
cmpsl
leave
sar
in
adc
mov
imul
cmp
loopne
mov
imul
sub
cli
mov
xor
ja
mov
cs
ljmp
rcl
jb
stos
flds
xorl
cmp
test
ss
mov
mov
mov
rcl
push
xchg
pop
sub
pop
and
sarb
rcll
dec
aas
jo
mov
into
sti
inc
shr
pop
imul
daa
out
or
movsl
js
mov
mov
inc
inc
lods
cmc
inc
push
fcmovnu
imul
dec
jno
aaa
mov
xorl
cmc
push
cld
les
loope
sbb
sbb
and
into
mov
mov
sbb
jmp
lds
jle
push
adc
ja
cmp
fs
lcall
out
f2xm1
testl
test
pop
scas
push
lock
sahf
aaa
push
adc
adc
js
adc
mov
xor
je
mov
add
sub
add
in
cmp
insl
cmp
gs
cwtl
sub
add
pop
lret
call
xlat
mov
ljmp
jmp
lcall
scas
lock
out
push
mov
push
into
movsl
loop
or
fst
adc
mov
fcoml
mov
mov
dec
aas
pop
rcll
push
lock
mov
les
imul
jnp
jg
push
adc
push
pop
out
or
xor
bound
dec
inc
popaw
jge
in
mov
dec
jge
lods
push
loope
scas
je
or
xchg
hlt
rcr
mov
mov
xorps
in
rclb
mov
xchg
loope
icebp
out
in
push
push
sahf
bound
ja
mov
sub
jmp
lret
mov
cli
jecxz
dec
jg
add
pop
fucomp
or
fwait
cmp
js
rcr
ljmp
cld
jo
pop
xorb
cwtl
mov
pop
fwait
mov
loop
jecxz
sub
and
aad
test
xchg
jne
sub
sub
pop
out
lods
xchg
clc
sbb
mov
push
mov
pop
sbbb
mov
pushf
aad
cmpsl
dec
pushl
aad
int3
jns
jae
sbb
nop
leave
cli
inc
insl
shl
cwtl
inc
enter
push
or
add
or
repnz
jnp
inc
sti
enter
arpl
and
into
adcb
movsl
adc
mov
mov
mov
into
push
lods
pop
and
ret
in
mov
cmc
cmp
js
push
and
sub
jg
cmc
sub
mov
push
or
mov
jbe
and
test
stos
popa
notl
lds
loop
mov
test
push
add
adc
in
dec
adc
out
movsl
jge
sub
jnp
call
js
negl
xor
data16
stos
pop
pushw
or
test
add
out
movb
cmp
xchg
cld
sub
pop
lcall
adc
test
jbe
jb
sahf
scas
mov
sarb
rorb
idivb
seto
jle,pt
flds
aad
or
cmpsb
pop
lods
dec
or
adc
fucomip
add
mov
adc
movsl
lahf
out
mov
pop
xor
aaa
xchg
pop
push
lret
movsb
and
hlt
int
push
xchg
in
jne
mov
out
cwtl
lret
shll
jecxz
imul
sub
shrl
jnp
js
cmp
jnp
inc
adc
sub
leave
es
xchg
fcomps
orl
xor
cmpb
or
gs
adc
aad
inc
imull
aam
popf
xchg
out
shll
sbb
inc
in
addr16
enter
push
fs
mov
adc
fwait
xchg
in
pushf
lret
cmp
ss
adc
add
add
or
inc
mov
inc
pop
push
add
iret
adc
jle
add
and
jae
sub
stc
ds
lods
fdivrl
cmpsb
sarb
xchg
and
pushf
call
lret
scas
outsl
mov
sbb
xchg
inc
add
inc
xchg
loop
ja
subl
xchg
lea
iret
mov
mov
shrl
divl
lahf
scas
sbb
in
movsl
xchg
lret
outsb
add
cmc
mov
and
arpl
add
xor
out
repnz
mov
loop
imul
mov
or
ljmp
xlat
popf
orb
cli
sbb
mov
mov
pop
call
sbb
lret
pop
or
mov
dec
popf
data16
mov
cmp
repz
shrl
andl
jle
add
dec
cmp
fdivl
cmpsl
test
mov
subl
push
mov
pop
stos
fcmovb
cmp
dec
sbbb
mov
test
js
xchg
iret
pop
add
mov
loop
div
jno
repz
shr
insl
jge
adc
inc
in
fidivrl
xor
jb
aaa
adcl
js
jnp
mov
insl
cmp
mov
mov
sbb
repz
cmpl
push
shr
mov
sbb
fcompl
out
inc
shlb
lcall
pop
addr16
lret
into
cmp
and
push
cmp
into
push
pusha
add
stos
aad
pop
dec
or
inc
lea
inc
adc
pop
inc
aas
rcrl
mov
into
mov
aas
jle
loop
pusha
mov
sbb
push
push
icebp
lahf
inc
out
or
arpl
ljmp
mov
mov
mov
xchg
and
or
pop
repnz
imul
push
lret
and
xchg
cmp
mov
ss
test
xor
ret
add
and
mov
add
cwtl
lcall
lret
fimuls
setg
pop
lret
pushf
mov
sbb
int
inc
faddl
addb
xchg
popf
or
sbb
scas
js
inc
or
or
cmp
cli
xor
cltd
sbb
add
mov
in
or
lds
daa
pop
or
in
or
roll
mov
cmp
in
mov
clc
jno
adc
xorb
ficoms
xchg
test
and
sahf
mov
mov
inc
divb
pop
rolb
shrl
push
loopne
and
pop
sbb
popl
jnp
mov
push
fcoms
pop
pushf
cmpl
cmp
push
jno
out
pop
or
dec
push
lods
outsl
ret
and
jecxz
jo
pop
add
mov
mov
in
push
test
mov
jl
mov
cmp
shll
jecxz
mov
pop
push
out
fistpll
pop
loop
sbb
xor
inc
adc
and
xchg
mov
add
test
push
pop
dec
insb
inc
test
mov
and
ss
mov
sub
jnp
adc
xchg
push
xchg
jae
cmp
add
jae
fsubl
shlb
xchg
mov
push
adc
sub
inc
xor
sti
aad
dec
pushf
add
mov
sub
fsubrp
stc
inc
out
fimull
jg
test
add
pushf
xchg
adc
push
xchg
mov
insl
popf
iret
scas
xor
xchg
lret
push
pushf
jg
cmp
sub
out
adc
adc
addr16
sbb
sub
jl
test
enter
fisubs
dec
xchg
out
push
insl
ljmp
iret
mov
shr
popf
ficoms
xor
fmull
adc
xchg
fs
test
in
lock
pop
hlt
or
sbb
mov
es
mov
dec
adc
jge
push
mov
sbb
or
xor
lahf
push
in
dec
loope
push
scas
cmpsl
jb
test
stos
cmc
lret
cmc
fbstp
or
mov
bound
jmp
inc
push
and
xchg
lret
sbb
in
xchg
in
cmpsb
sub
pop
sarl
cld
dec
aam
dec
fistps
cmpsl
inc
test
pop
push
lcall
cmp
stos
mov
mov
xchg
daa
or
mov
gs
lock
jg
sbb
cmp
xchg
andl
mov
addl
movsb
fidivl
pop
in
push
cmpsb
cmp
fadds
repz
add
push
loopne
fidivrs
stc
or
xor
mov
dec
jge
mov
into
push
xchg
fists
decb
sub
loopne
int3
sbb
in
jle
and
scas
sbb
cmp
inc
xor
neg
or
cwtl
punpckldq
mov
lea
outsl
jo
and
sarl
xor
inc
push
repz
les
sub
stos
push
inc
mov
and
mov
sbb
shlb
xchg
cmp
outsb
outsl
mov
fwait
mov
lds
or
repnz
cmpsb
lea
rclb
inc
push
test
and
daa
fdiv
in
jbe
inc
cmp
scas
rorl
cwtl
inc
insl
frstor
push
outsl
inc
das
hlt
lahf
push
popa
add
repz
test
stos
add
jg
and
mulb
sbb
lds
push
xchg
hlt
cmp
inc
jo
mov
mov
into
cwtl
mov
inc
fwait
movsl
into
xchg
mov
das
iret
mov
push
cmp
out
mov
icebp
push
mov
adc
inc
js
sub
mov
mov
lahf
fsubl
jo
add
outsb
lds
imul
xor
jp
loopne
stos
push
cmc
pop
mov
sbb
mulb
sbb
inc
ljmp
push
dec
fwait
in
orb
jns
jmp
add
lods
rcrl
les
push
or
and
lret
push
mov
sahf
lods
cmp
scas
aad
xchg
xchg
jmp
xchg
xchg
xchg
bound
and
jb
adc
jbe
mov
and
aad
in
mov
sbb
aam
sbb
orb
movsl
pop
daa
int
rorb
jl
ss
add
mov
cmpsb
mov
jl
adc
cmp
inc
mov
movsl
cwtl
sbb
mov
imul
or
daa
mov
mov
in
in
ret
fwait
loopne
addr16
mov
cwtl
aas
ret
inc
bound
ja
inc
mov
xchg
enter
xchg
xchg
sub
inc
mov
dec
imul
pop
aaa
xor
sbb
lahf
push
xor
shr
push
sbb
les
mov
ja
sub
cmp
mov
dec
add
pusha
popf
pushf
sub
and
jp
add
or
data16
mov
xchg
out
mov
outsb
cmp
mov
and
adc
test
xor
dec
les
cmp
cmp
nop
mov
xchg
sub
sub
std
jmp
fisubs
mov
lods
add
jbe
mov
imul
cltd
jb
mov
push
rcrl
ficomps
lea
outsl
or
daa
xchg
sub
mov
repnz
imul
cmpl
push
into
shll
scas
lahf
push
les
ficoms
mov
into
mov
das
nop
subl
dec
dec
cld
jns
bound
and
stos
jbe
xchg
pop
add
mov
mov
in
fildll
out
aam
xchg
inc
sbb
cltd
dec
xlat
js
mov
push
sbb
xor
int3
pop
sub
scas
mov
cmp
data16
rolb
pop
jo
pop
and
in
cmp
insb
stc
push
in
dec
xchg
dec
push
rclb
fiadds
fwait
lock
out
pop
shr
mov
clc
inc
dec
dec
negl
cmp
test
mov
pusha
or
pminub
fbstp
cmp
add
je
testb
scas
or
and
push
lcall
pop
dec
jmp
or
add
leave
cmpsb
mov
mov
out
jge
lahf
sub
lods
and
pusha
int
add
ss
jno
ret
ss
and
cld
jg
jnp
into
jge
rcl
mov
dec
mov
mov
mov
mov
popa
test
pushf
cli
mov
shlb
shlb
es
sbb
sub
pushf
test
jne
das
insb
add
push
mov
int3
xor
dec
push
xchg
ljmp
jecxz
cmp
inc
out
bound
or
leave
mov
arpl
push
push
cwtl
xchg
or
cmpb
mov
aas
mov
sub
jle
aad
sub
mov
imul
cwtl
mull
fcoml
pop
pushf
xor
or
hlt
popl
lret
cmpsb
cwtl
ljmp
pop
jge
adc
in
fmull
lods
imul
jae
xor
dec
add
addr16
rorb
popa
sti
adcl
adc
cmpl
faddp
add
and
loop
movsl
lods
sti
rcll
imul
shrb
outsl
aas
jne
mov
into
jbe
jno
pop
pop
orb
xorl
sbb
pop
shll
sub
xchg
jb
jmp
mov
dec
repz
mov
pop
pop
xchg
bound
insl
mov
inc
idiv
js
mov
xlat
xor
pop
xor
ds
aad
sbb
xorl
inc
and
xor
out
aaa
inc
repnz
setb
jl
push
push
loope
pop
sub
mov
das
repnz
adcb
shrb
stos
sub
push
jo
sub
push
mov
xchg
loopne
adc
scas
xchg
push
aas
int
mov
lcall
ficompl
jmp
or
xlat
push
pop
frstor
mov
add
sub
dec
push
and
add
iret
dec
and
sub
sub
lret
shrl
fidivrl
xor
call
insb
cmpsb
mov
ss
sbbl
mov
dec
mov
jno
arpl
lods
pop
pop
shll
jmp
push
and
fcmovbe
mov
jnp
xor
fstps
dec
or
push
out
out
insb
inc
push
fdivrl
hlt
cli
mov
sub
cmp
jle
xchg
std
popf
jns
fcmovb
pop
push
ret
or
mov
xchg
and
mov
mov
adc
xor
les
add
pop
pavgb
xchg
lods
xchg
call
inc
repnz
add
cmp
les
jl
adc
adc
sub
ljmp
scas
je
adc
in
in
push
inc
and
dec
test
fs
out
mov
xlat
cmp
xlat
mov
cli
movsbl
dec
shrl
mov
popf
ficompl
add
inc
leave
push
xchg
fiadds
add
or
or
dec
fs
dec
mov
outsb
xchg
pop
xor
and
cmp
fistps
in
pop
adc
cli
lret
mov
std
or
insb
lcall
mov
outsb
xchg
mov
subb
repnz
or
cmp
outsb
mov
stos
out
cmp
test
rcll
jo
in
push
lret
loopne
lods
xlat
xchg
add
aam
mov
stc
cmpsb
jo
out
jnp
cwtl
mov
pop
insb
rcll
das
int3
in
rorl
jnp
push
pop
jmp
sbb
dec
rorb
push
jmp
imul
outsl
pop
mov
ret
outsb
stos
jno
test
sub
loopne
jnp
es
daa
sub
pop
sti
push
push
push
test
sub
jns
loopne
ljmp
or
push
add
mov
jp
jecxz
repz
inc
mov
pop
push
mov
mov
cwtl
mov
sbb
sub
cs
test
dec
xor
cmp
push
or
pop
or
pop
pop
stc
ror
test
adc
ja
pop
inc
jp
scas
push
push
aad
jbe
pop
mov
clc
mov
fldcw
shlb
xchg
into
mov
std
das
and
rcll
ljmp
ds
mov
movsl
add
cmp
sbb
and
adc
nop
add
in
cwtl
fs
daa
and
ret
hlt
popf
pusha
ljmp
or
push
shlb
andl
dec
repnz
xor
push
ss
add
jp
ret
mov
out
bnd
shrl
mov
cli
insl
inc
shll
push
cli
add
lds
cmpsb
pushf
cld
xchg
mov
mov
ljmp
cld
loop
push
sarb
gs
lcall
lahf
lods
ds
dec
or
bound
jo
pop
xchg
stos
leave
sbbl
popf
mov
mov
repz
xchg
pushf
jbe
mov
xor
enter
dec
stc
test
ficompl
push
jno
xchg
loop
inc
scas
adc
insl
cmpsl
sti
inc
not
and
popa
stc
emms
mov
movsb
inc
test
mov
push
inc
addr16
stos
orl
sub
push
cli
daa
sarb
lret
or
div
sbb
iret
xor
jnp
fs
sti
and
xorl
mov
and
xchg
mov
test
ds
xchg
add
cmpsl
add
int3
test
add
je
std
lea
mov
les
into
nop
mov
aaa
fists
push
das
rorb
test
mov
jl
outsl
push
jmp
push
call
cmp
pop
xor
test
xchg
std
out
jmp
cmp
outsl
mov
jae
mov
sub
and
inc
hlt
pop
lcall
frstor
ss
mov
xchg
loopne
push
pop
shl
andb
sbb
add
cmp
cmp
push
adc
sbb
shll
cmp
xorl
jle
mov
in
jnp
inc
imul
cmp
cltd
daa
mulb
std
enter
mov
dec
inc
jle
jnp
push
js
pop
jae
adcl
xor
push
aam
pop
shrl
scas
inc
pop
dec
loope
sub
and
dec
mov
push
lret
pop
jecxz,pn
mov
iret
sahf
jle
xchg
std
mov
cs
and
dec
jge
push
int3
es
and
out
inc
pop
pop
inc
rorb
mov
pop
xorl
clc
jmp
jae
movsb
pop
mov
lcall
in
cmp
aad
sbb
pop
mov
dec
stc
sbb
mov
add
add
pop
movsl
fs
fs
add
lahf
ficoml
adc
xchg
jecxz
jo
test
cmpsb
add
jo
into
int3
sub
adc
dec
fnstcw
scas
testb
pushf
hlt
repnz
adc
fdivrs
dec
daa
mov
add
hlt
cli
xlat
in
sti
push
jns
inc
pop
inc
aam
cmp
int
jo
and
das
xor
push
mov
mov
push
scas
fsubrl
mov
xor
mov
and
jbe
sbb
test
pop
mov
inc
loope
repnz
xchg
sbb
or
mov
arpl
ss
inc
cs
push
xchg
mov
aaa
mov
scas
add
jbe
das
lret
je
arpl
fsubrs
dec
nop
movsb
pop
aam
and
jb
out
aas
jmp
aas
divb
mov
ljmp
inc
jb
dec
test
je
outsl
sub
int3
mov
sub
or
pop
addr16
jecxz
test
jo
fisubl
je
mov
cmp
gs
cli
popf
dec
call
std
ret
mov
jle
dec
add
insb
adc
mov
cmp
and
or
push
mov
cmp
push
dec
pop
pop
or
dec
xchg
repnz
lock
pop
les
in
outsb
or
loope
sar
xor
mov
push
xchg
pop
out
jmp
pop
lea
cwtl
mov
mov
out
xchg
and
movl
cmc
lcall
pshufw
dec
insb
or
mov
mov
xchg
sbb
ficomps
jne
push
push
pushl
pop
and
push
pop
jp
jo
and
in
call
xchg
mov
aas
xlat
aaa
mov
and
adc
aas
fsubrl
data16
sub
sub
aad
dec
mov
outsb
adc
add
jo
xchg
cmp
ret
nop
inc
push
out
pop
shlb
iret
adc
add
xlat
and
nop
lock
mov
xor
adc
mov
gs
cld
sbb
jecxz
cmp
in
mov
fidivl
adcl
nop
mov
xchg
ljmp
iret
push
pop
lret
pusha
jne,pt
jnp
cli
cmp
mov
fsubrs
ret
jbe
pop
scas
outsl
inc
dec
cltd
xchg
popf
call
mov
ret
xchg
pop
or
repz
in
data16
dec
fdivl
lret
lds
cmp
pop
icebp
cmp
addl
dec
negl
and
sahf
dec
imul
aad
adc
dec
lret
pop
mov
ror
cmp
xor
mov
xor
scas
out
push
aad
jecxz
pop
push
mov
mov
xor
mov
push
adc
pop
aam
aaa
xchg
jns
sti
out
xchg
dec
cmpsb
imul
ret
mov
mov
cmc
loopne
push
adc
mov
sti
ljmp
xchg
xor
xchg
pushf
fucomip
sub
jae
jbe
jo
jmp
dec
inc
add
sbb
dec
stos
xor
pop
or
ret
mov
add
icebp
shl
sti
pop
sbb
sub
cmp
mov
in
adc
or
add
mov
inc
or
cs
mov
mov
cltd
int
inc
xchg
fbld
shll
dec
mov
dec
roll
je
rorb
sbb
cmp
fnstenv
int
in
jne
adc
adc
jno
lods
xlat
sub
jp
push
lods
iret
sub
jno
jns
mov
or
and
push
lahf
lcall
mov
leave
ss
inc
mov
jg
lods
mov
push
mov
pop
and
lahf
jne
gs
repz
push
sbb
sub
jbe
outsl
add
push
xchg
pop
xor
in
inc
test
cld
mov
cmc
and
imul
and
xorb
outsb
test
lea
outsl
cli
push
adc
xchg
ja
mov
aad
sub
sbb
das
sbb
daa
clc
pop
push
icebp
out
sbb
inc
rcll
cmpsl
pop
sbb
int3
insb
leave
adc
mov
repnz
mov
popf
sub
xchg
ret
es
insb
icebp
popa
filds
not
scas
addr16
mov
pop
js
sub
jno
roll
xchg
mov
dec
xor
in
daa
jno
out
mov
jne
dec
adc
sub
movsb
fwait
pop
out
leave
dec
cmpb
outsb
or
add
popf
mov
sbb
mov
aaa
add
aaa
adc
xlat
fwait
or
inc
cmp
mov
mov
and
aad
lea
mov
and
push
sub
scas
and
mov
xor
push
in
repz
xchg
inc
in
pop
pop
imul
xchg
arpl
gs
test
repz
sti
push
js
loopne
add
pop
lcall
je
xchg
pop
dec
sbb
lret
xchg
dec
mov
mov
push
pop
cli
cld
pop
or
stos
idiv
push
sahf
sbb
rcrl
mov
sti
jmp
rcl
sbb
mov
inc
rcl
adc
dec
lea
sub
clc
xor
pop
or
sbbl
or
pop
or
inc
stos
lret
sub
loope
in
movsb
ja
adc
push
in
mov
in
cwtl
push
pop
out
pop
xor
test
push
cs
fsubrp
mov
fsubl
rcl
in
sahf
adc
test
jmp
lods
je
pop
jle
pop
or
dec
rcll
out
daa
leave
pop
daa
ljmp
sbb
xor
mov
leave
lock
sub
ret
scas
clc
test
mov
and
jg
xchg
loop
jbe
pusha
in
cmpsl
dec
ss
mov
popf
stos
adc
jnp
adcl
cmp
sub
cmpsl
cmpsb
mov
addb
cltd
mov
aas
sarl
into
test
push
idiv
aad
sub
mov
jb
cs
or
mov
sti
lcall
inc
push
imull
or
mov
or
bound
adc
insl
lods
fmuls
or
mov
aaa
jmp
ficoml
xchg
sahf
aaa
int3
cltd
imulb
inc
adc
add
out
call
bound
inc
pop
pop
cld
fnstcw
sar
mov
movsl
loop
jecxz
sbb
shrb
loopne
push
pop
inc
jno
xor
sbb
shrb
push
insl
cmp
xchg
hlt
xor
sbbb
cmpb
pop
jg
dec
ss
lret
dec
out
pop
sbb
loopne
jge
int3
xchg
and
xchg
loopne
rcrl
lods
aam
out
icebp
jne
mov
dec
dec
imul
ret
xchg
in
push
inc
insb
fdivrl
out
mov
mov
push
ja
push
add
into
sub
sbb
inc
adc
xchg
and
das
in
cmp
cli
xchg
rclb
xorl
movsb
push
aam
addr16
std
cmp
iret
xchg
pop
inc
sti
mov
inc
lea
jmp
sbb
xchg
cmp
dec
xor
ret
test
mov
fisubl
das
iret
test
sub
scas
imul
and
scas
cmpsl
lock
dec
das
test
in
ds
lock
rolb
mov
jbe
lock
stos
inc
push
popa
ja
jo
adc
and
cmc
sub
xor
and
and
mov
js
jg
ljmp
pushf
rorb
fisttpl
lret
sub
add
stos
xor
pop
insb
mov
add
cld
or
inc
jno
mov
mov
in
cmc
insb
sbb
inc
sbb
cmp
out
int3
data16
xor
lcall
imul
jge
dec
repnz
icebp
fisubs
stos
pop
push
sar
leave
imul
xlat
mov
scas
adc
sbb
lds
inc
std
lcall
lret
bnd
mov
cmp
mov
mov
mov
add
das
dec
lret
sub
call
out
clc
mov
shrl
dec
inc
jnp
addr16
popf
and
inc
adc
pop
mov
xchg
out
dec
stos
mov
jmp
mov
xor
aam
lock
push
dec
and
jno
mov
std
sub
shll
push
jg
xchg
clc
or
fcmovbe
inc
lods
sbb
jmp
lea
sub
dec
lret
adc
jle
jle
jmp
inc
stos
mov
sbb
jp
popf
lea
xor
cmpsb
cmp
out
scas
ss
lods
mov
mov
mov
ss
push
sub
adc
nop
fs
add
imul
push
iret
inc
rorl
lret
das
push
and
mov
and
ds
sub
into
mov
and
cmc
jg
or
stos
adcl
rcl
jp
ds
bound
pop
in
pop
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
lods
sub
ds
mov
sub
insb
ds
cld
fcomip
jb
jae
xor
cs
out
stc
cwtl
and
and
jae
fstps
sarb
mov
xor
xchg
xchg
out
cli
push
popl
add
inc
mov
daa
icebp
mov
mov
loop
inc
sub
int3
add
mov
testb
out
lret
outsl
insl
push
add
out
addr16
push
sbb
pop
loope
ret
lds
arpl
push
fisttpl
jle
lret
xchg
push
inc
jns
movsl
neg
ret
cmp
aaa
cmp
lods
cmp
inc
mov
dec
mov
jo
bound
ficoml
sub
fwait
xorb
push
inc
adc
js
dec
andb
test
inc
or
bound
in
xor
xor
adc
nop
scas
ds
sub
stos
fmulp
mov
adc
lcall
imul
repnz
add
xor
and
cmp
lret
adc
ffree
xchg
ds
mov
xchg
xor
cmp
sar
fsts
mov
sbb
mov
inc
xor
sub
cmp
arpl
or
sbb
ret
inc
dec
mov
xor
fwait
cwtl
jno
lahf
xchg
xchg
add
mov
ja
and
mov
pop
sbb
in
mov
xchg
into
jp
xor
and
aas
jle
and
push
inc
adc
lds
cmpsl
mov
ljmp
mov
push
test
cld
mov
inc
test
dec
insl
pop
inc
mov
fisubl
cmp
into
hlt
loopne
fldcw
push
inc
inc
mov
xchg
xchg
mov
es
movsl
inc
mov
enter
or
fmulp
adc
in
xchg
cmp
cmpsl
sar
push
push
add
mov
dec
adc
and
std
jne
repz
or
ret
jae
jno
imul
ds
popf
push
scas
inc
pop
jmp
and
mov
loop
xlat
mov
fisttpl
dec
orl
push
pop
mov
xor
test
arpl
jle
mov
aas
in
cmp
dec
jnp
lcall
cltd
xlat
pop
push
push
cmp
out
sub
jo
mov
lods
comiss
loopne
xor
xchg
or
cmp
sub
popa
push
je
lods
lahf
sub
rorl
xorl
mov
outsl
sarb
lret
fs
scas
leave
push
popf
fcoms
out
out
imul
ret
aas
std
shl
sbb
and
dec
mov
jnp
dec
adc
mov
xchg
sbb
mov
sbb
repz
orb
shlb
add
cld
jg
int
pop
ds
test
sub
sub
pop
in
mov
lret
push
mov
sub
mov
cltd
les
mov
push
mov
out
push
rcl
sbb
in
fldl
iret
jno
push
or
inc
and
add
sbb
sti
pop
pusha
mov
xor
cmp
jns
mov
sub
arpl
mov
fsubl
and
scas
movsl
push
mov
cltd
mov
sub
mov
sbb
mov
sbbb
in
sbb
jge
dec
js
stos
fiaddl
iret
inc
inc
cmp
bound
leave
data16
sahf
aad
cmp
fidivrs
cmpsb
pop
xchg
jo
and
push
call
mov
mov
dec
loop
add
adc
dec
lock
push
ret
scas
sub
rcll
pop
fimull
clc
jge
xchg
pop
inc
les
and
shlb
mov
stos
movsl
mov
push
xchg
mov
test
mov
cmp
arpl
xchg
idivl
inc
ss
movsb
push
sbb
imul
ret
into
lea
sub
arpl
mov
jge
mov
mov
adc
dec
cld
sbb
push
adcb
nop
sbb
cld
mov
mov
repz
cltd
ret
roll
daa
xlat
js
mov
dec
ret
sarb
iret
dec
inc
cmp
inc
sub
lcall
add
pop
pop
dec
pop
mov
and
das
pop
add
lods
dec
hlt
fmull
mov
fs
jns
adc
jno
dec
mov
mov
inc
outsb
lret
xor
test
gs
adc
aaa
jbe
lds
lds
mov
push
scas
les
scas
std
cld
sub
jno
fwait
dec
pop
call
mov
lods
loop
shrb
fldcw
into
cli
push
pushf
dec
inc
addr16
stc
inc
pop
dec
push
sbb
mov
loop
je
jnp
bound
pop
mov
ja
jg
into
subl
push
sbb
lea
xchg
mov
fisttpl
aaa
scas
data16
ds
add
mov
daa
and
jne
clc
push
hlt
divb
lock
pop
lods
outsl
insl
mov
dec
pop
mov
aaa
je
pop
sub
push
out
mov
out
xlat
lea
inc
and
adc
mov
lods
or
cli
fcoms
out
fcmovnbe
jmp
xchg
out
dec
inc
or
je
add
movsb
pushf
sub
pop
push
pop
or
mov
sub
in
xchg
jmp
add
push
ror
pop
orb
mov
lds
cmp
test
jg
ds
test
push
jge
outsb
adc
stos
pop
lock
inc
shrl
ja
sub
sbb
mov
shrb
movsb
fistl
jb
and
adc
cmp
jp
add
pop
jae
stc
ja
faddl
and
lahf
pop
sbb
addr16
fchs
jecxz
data16
mov
xor
js
mov
ds
push
inc
ja
fnsetpm(287
push
lret
push
jge
fwait
jno
jp
test
scas
push
outsb
loopne
mov
sbb
repnz
fnsave
mov
sahf
push
ret
ds
or
lods
sub
movsl
ds
cmp
rorb
imul
jno
lahf
jns
shll
mov
adc
addr16
pop
push
mov
jmp
testb
pushf
es
jge
dec
adc
sbb
sbb
mov
rolb
fisttpll
add
scas
xor
sub
daa
cmp
xor
xchg
lds
xchg
mov
adc
and
jge
sub
call
sbb
lock
sahf
dec
adc
jg
outsb
lahf
sbb
add
inc
es
cmp
scas
push
and
fsubs
es
int3
mov
or
insb
fisttpll
adc
fdivl
push
jae
sbb
popf
mov
mov
gs
pop
xchg
sti
add
nop
xlat
aad
jecxz
sub
jae
nop
sbb
jb
dec
imul
xor
out
sti
pop
push
ljmp
in
lahf
xorb
addr16
lods
mov
and
out
push
xchg
sub
dec
cmc
fwait
shll
sbb
add
mov
out
jo
lea
mov
sbbl
sarb
xchg
mov
popa
or
sahf
adc
std
icebp
cmp
inc
insb
leave
nop
or
and
mov
repnz
gs
scas
loop
mov
mov
jno
aam
mov
ret
push
into
jnp
or
dec
cli
jp
sbb
pop
add
mov
inc
jnp
sub
call
call
das
imul
imul
pop
into
fwait
roll
fisubl
nop
outsl
imul
inc
mov
mov
mov
sub
popa
jle
lods
xchg
leave
lret
pop
rol
adc
push
daa
mov
pop
jns
xchg
mov
aad
xchg
xlat
xchg
xor
add
mov
in
fnstsw
sub
outsb
cmp
mov
add
pop
stos
je
les
dec
jle
out
inc
and
sbb
adc
dec
flds
add
push
pop
popf
sbb
daa
jle
push
cmp
loopne
lods
aas
cmp
push
jns
pop
lea
ficoml
repnz
scas
stc
fldcw
mov
mov
imul
sarb
pop
std
out
mov
loopne
cmp
sub
es
imul
gs
sahf
insl
xchg
fdivrl
jecxz
movsb
xchg
jbe
fld
mov
ror
add
ljmp
outsl
add
cmp
int
div
cmpsb
adc
dec
mov
sub
jno
mov
pop
pop
popa
add
lcall
lods
into
or
or
sub
mulb
andl
in
out
orb
sbb
jecxz
push
xchg
dec
add
out
dec
and
sbb
aaa
lock
and
fcompl
pushf
adc
dec
dec
out
pop
repz
mov
push
lods
scas
dec
push
dec
pushf
add
mov
xchg
push
sub
gs
fidivrl
call
mov
clc
clc
jb
pop
sbb
mov
mov
sub
jle
loopne
adc
jg
push
shll
aas
mov
je
pushf
push
jb
clc
jmp
fistl
in
xchg
insl
sbb
dec
hlt
in
jmp
push
inc
in
int3
shr
out
movsl
lcall
nop
jbe
and
inc
rol
insb
lret
hlt
fdivrl
cs
xor
test
int
jb
mov
arpl
stc
enter
xor
je
lds
mov
push
mov
loopne
fs
or
mov
ljmp
in
neg
lret
xor
push
jmp
inc
repnz
int3
lcall
cmpsl
std
sbb
insb
adc
imul
movsl
ret
clc
popa
cmp
or
add
mov
pop
push
push
mov
clc
outsb
insl
test
add
imul
dec
and
dec
mov
push
jge
fsubrl
cmc
es
addr16
mov
cmpsb
pop
sub
jne
cmpsb
lcall
or
pop
insb
inc
cltd
aas
inc
mov
bound
add
paddw
rorb
adcb
mov
and
repnz
mov
int
pop
out
mov
fsubrl
insw
fs
mov
or
out
hlt
xor
jge
lods
clc
jnp
inc
clc
repz
jecxz
shlb
fwait
outsb
push
xchg
jno
das
stc
pop
dec
es
icebp
es
inc
or
sub
push
adc
cmp
jne
pop
push
cltd
gs
jb
jb
xchg
mov
push
cwtl
arpl
clc
daa
cmp
cmp
add
inc
testl
inc
loop
sub
clc
arpl
out
mov
ret
jae
test
rcrl
dec
jp
xlat
xor
jecxz
xchg
inc
addr16
cmp
idivb
mov
cltd
fisttps
mov
push
jae
maxps
addb
jl
xor
repnz
out
inc
lods
xchg
and
adc
insl
mov
std
rcl
mov
fimuls
data16
in
loopne,pt
je
and
js
mov
outsl
popa
adc
aas
adcb
dec
aas
pop
xorb
xor
fnstsw
fists
mov
rol
push
adc
lds
sub
flds
dec
test
dec
rcl
fs
out
adc
int
fstl
inc
xor
pop
fdiv
mov
jge
fldenv
cwtl
xchg
leave
pop
cmp
mov
insb
outsb
jle
xchg
stos
outsb
lock
faddp
and
sbbl
xor
dec
add
fs
push
cmpsb
xor
out
das
add
inc
pop
lods
push
jbe
push
aas
adc
adc
mov
addr16
adc
pop
jb
pop
out
jnp
dec
mov
fildll
mov
xchg
jl
cwtl
pushl
xchg
jge
ds
sub
jbe
lds
mov
daa
mov
mov
jmp
mov
push
lds
push
cmpsl
clc
neg
dec
push
mov
cmp
sbb
fistpl
stos
cld
add
add
fs
jns
lahf
daa
mov
cmpsl
mov
loopne
cltd
nop
scas
pop
sub
adc
aad
xor
or
pop
popa
in
in
lock
push
orl
int3
push
cmp
loope
les
mov
aam
push
shll
sahf
popa
mov
dec
out
inc
inc
jb
inc
adc
rclb
mov
and
out
cmp
pop
cld
jne
scas
out
lret
pop
mov
mov
repnz
imul
cmpsl
call
sbb
cmp
push
fsubl
pop
pop
mov
sub
xchg
mov
in
addr16
lret
pusha
jnp
sbb
sbb
stos
lahf
jno
into
add
cmp
lret
jg
push
lret
aam
dec
daa
stos
loope
mov
testb
int
sub
int3
xchg
push
inc
icebp
lret
jae
cmp
test
into
xchg
and
popf
shlb
cwtl
push
cmpsl
or
sub
aam
dec
cmp
es
push
fmulp
jns
movb
lock
ficoml
and
cmpsb
data16
jmp
mov
int3
fdivs
int
ret
ret
mov
pusha
push
rcll
mov
stos
lret
push
lock
out
or
pop
mov
pop
mov
test
mov
push
test
xor
fwait
cmp
mov
popf
dec
ficoms
push
mov
add
jnp
jnp,pn
push
mov
pop
inc
cwtl
add
outsb
ret
push
add
cld
test
pushf
mov
stos
out
fadds
sub
leave
inc
pop
sub
cmp
sbb
rorl
xor
pop
add
gs
or
lock
lcall
fwait
icebp
js
sbb
mov
inc
cmpsl
ljmp
cmp
xor
add
out
sahf
push
xchg
aam
in
icebp
mov
clc
mov
inc
fisttps
loope
sbb
inc
pop
jo
xchg
les
inc
inc
lret
adc
jns
jb
and
push
sub
rcrb
ja
add
lahf
inc
popf
xchg
rolb
dec
xchg
rclb
mov
push
testb
xchg
das
repnz
lret
pop
das
push
mov
dec
sbb
fdivrs
js
pushf
inc
lahf
js
sub
or
out
jle
stc
add
pop
lcall
out
loop
pop
jp
adc
xchg
in
dec
or
ret
push
sbb
adc
sbb
inc
jns
cld
add
dec
xor
cmp
out
dec
es
in
movsb
jmp
push
push
xor
pop
cmpsl
jae
outsl
sub
pop
call
shrb
add
and
lea
arpl
mov
test
mov
fsubl
push
lahf
xorl
jns
inc
ret
std
xor
insb
iret
jae
cmp
movsb
divb
pushf
outsl
jnp
xor
das
data16
mov
jecxz
cwtl
out
mov
cmp
pop
lret
dec
push
or
aam
mov
scas
jg
cld
mov
ret
jl
push
jno
jbe
cmpsl
push
mov
fwait
mov
sub
mov
ret
bound
add
je
or
cmpsl
das
ret
js
repz
xor
xor
mov
and
mov
popa
popa
mov
jge
repz
cmpsl
jns
jmp
roll
pop
and
mov
scas
push
into
cld
xor
cmp
jnp
or
stc
mov
cmp
push
mov
lods
push
dec
jns
inc
cmc
pop
dec
lods
xor
push
cmc
out
push
inc
outsb
mov
nop
clc
loope
sbb
ret
mov
insl
ja
aas
cltd
adc
sbb
imul
loope
ss
ficoms
pop
add
jne
lahf
cmp
shlb
xor
pop
mov
int
imul
cltd
outsb
bound
sbb
xor
out
xchg
mov
xchg
xchg
cs
sub
sti
loope
sbb
movsb
imul
lds
pop
push
loopne
out
aad
movsb
jmp
cmp
xchg
loopne
jmp
dec
lret
enter
xor
arpl
in
out
cmc
les
inc
sbb
aam
xor
sbb
fdivrs
adc
xchg
mov
mov
add
push
jp
mov
stos
xchg
and
adc
mov
movq
and
inc
push
popf
add
test
enter
in
inc
arpl
pop
in
data16
lcall
dec
jg
testl
sub
arpl
push
pop
dec
call
xchg
mov
repnz
dec
mov
jge
xlat
popf
xchg
leave
sbb
popa
in
jp
in
jg
adc
pop
inc
in
test
inc
iret
push
hlt
dec
rorl
int
jne
pop
jle
adc
pop
or
cmpsl
inc
or
imul
pop
mov
jl
push
add
repnz
mov
cltd
and
dec
lock
cld
sub
test
clc
lahf
add
repnz
jp
cmpsb
sarb
and
test
ja
sub
std
sbb
dec
popf
testb
mov
sub
icebp
cltd
into
mov
add
cmpb
or
push
push
stc
fldlg2
cmp
push
sbb
fstps
sbb
push
push
xor
mov
fnsave
daa
add
cmp
lcall
aas
popf
aaa
ret
push
sbb
jp
hlt
dec
sub
daa
pop
aad
sbb
jge
mov
mov
adc
jge
push
aaa
dec
test
int
xchg
dec
fwait
dec
stos
push
insl
pop
stc
ja
push
in
and
cli
xchg
insl
sub
dec
fdivs
fistl
scas
cmp
dec
mov
lock
std
dec
jbe
ret
pushf
inc
or
add
aaa
sub
jecxz
pop
sub
rcr
push
stos
in
lret
xor
mov
mov
cmp
aam
add
imul
push
std
pop
xchg
movsb
lret
pop
aas
inc
repz
stos
jbe
jp
lock
in
inc
jb
jne
mov
dec
jns
push
lock
cmp
test
push
orl
sar
ja
dec
sbb
mov
das
xchg
pop
lods
ret
lods
push
subb
dec
popa
pop
xchg
std
jae
and
mov
sbb
mov
mov
fwait
or
jnp
mov
ljmp
sub
xchg
out
mov
rcll
pop
pop
data16
pop
pusha
cmp
and
mov
xchg
push
jl
mov
push
in
xchg
push
mov
call
push
das
js
les
jecxz
xor
xlat
sbb
lea
or
or
lds
adc
andb
stc
test
rcl
sbb
add
jnp
dec
xor
push
mov
and
add
mov
in
xor
jbe
mov
pop
stos
mov
add
push
or
adc
enter
fisubs
cmpsb
push
aam
xchg
jmp
fs
or
push
pusha
ljmp
pop
xor
inc
jne
shrl
push
mov
fimuls
jmp
and
xor
dec
xchg
push
das
jge
ss
popa
outsb
fistl
pop
inc
push
loopne
add
mov
iret
clc
mov
out
xor
cmpsb
stos
fistps
test
push
inc
jg
rol
xchg
sbb
dec
add
sbb
data16
add
leave
jmp
xchg
in
jb
dec
pop
in
into
pop
and
insl
icebp
push
js
out
shl
inc
jb
std
add
sub
into
and
jl
repnz
sub
or
add
es
popa
cmp
daa
mov
std
add
sbb
ja
inc
sbb
leave
stos
ret
xchg
cld
or
sbb
dec
dec
xor
pop
stos
mov
shll
adc
pop
inc
fdivrl
mov
add
pop
adc
test
insb
xlat
inc
jg
stos
fcomip
loopne
or
cmp
mov
lds
push
mov
lret
xor
imul
call
test
fwait
int
je
dec
xchg
add
ret
outsl
je
dec
std
outsb
outsl
fidivl
ret
xchg
and
mov
lds
rorb
xchg
enter
iret
mov
iret
mov
lret
fisttpl
sti
test
shl
out
add
or
test
xor
inc
pushf
pop
mov
lret
mov
out
frstor
out
movaps
push
inc
test
gs
cmp
pop
lret
mov
sarb
ret
add
fistpl
shrl
inc
fmull
xchg
stos
lcall
xlat
lret
sbb
adc
mov
push
inc
add
xor
add
orl
and
cs
sbb
and
outsb
in
sahf
lcall
pushf
push
shlb
xor
imul
ja
iret
push
aas
hlt
out
dec
mov
lahf
test
test
stc
ficompl
js
mov
mov
dec
mov
repz
jmp
leave
ret
jbe
aaa
mov
inc
inc
mov
movsl
add
push
stos
jecxz
bound
sahf
fisubs
scas
pushf
movsb
and
into
pop
mov
xor
fcmove
add
mov
sbb
dec
cmp
sbb
int3
dec
xchg
in
add
inc
lcall
popa
dec
cmp
ss
das
cmpsb
movsl
adc
divl
push
sbb
mov
into
adc
ljmp
push
cltd
add
nop
out
xchg
mov
inc
test
popf
add
imul
mov
push
addr16
and
mov
inc
sub
pop
mov
jp
outsb
int3
jle
in
enter
jecxz
mov
jnp
pop
pop
pop
inc
int
orb
in
cmp
pop
push
dec
xor
mov
in
stos
adc
mov
out
movsb
inc
loopne
jp
or
cmp
jge
jmp
fnstenv
push
roll
int
jg
cmpsl
pop
cmp
rcrb
add
xor
and
jb
js
dec
stc
push
jmp
movsb
cmp
sar
adc
mov
orb
pop
mov
int
in
inc
mov
add
jbe
sbb
jmp
jnp
xlat
push
ret
fs
push
pushf
cmpb
dec
rcrb
pushf
and
and
addr16
arpl
xor
lret
mov
and
aas
mov
loop
sti
sbb
push
in
ffree
mov
sub
sbb
outsb
icebp
rclb
pop
pop
jmp
push
xorb
iret
sub
dec
sbbl
cmpsl
lds
es
mov
imul
mov
mov
push
jbe
sbb
mull
and
rclb
or
xor
ficompl
in
aad
sub
mov
mov
inc
iret
mov
inc
jnp
jg
jecxz
cmpsl
mov
ljmp
int3
sar
loopne
lea
dec
repnz
in
loope
dec
xlat
not
or
sahf
sub
push
add
iret
out
mov
cmp
mov
lcall
or
fbld
mov
jp
dec
sahf
dec
cmp
movsb
pop
sti
ret
jp
pop
push
test
dec
sub
add
cltd
mov
xor
fmuls
mov
lret
sbb
in
xchg
jb
sub
insb
outsb
mov
sbb
out
into
push
jnp
adc
xor
mov
negb
jmp
mov
addb
xchg
jg
push
cmp
jae
dec
sbb
ss
fldl
dec
xchg
imull
sbb
pop
push
jmp
cld
pushf
push
lods
adc
add
jae
cld
sbb
out
pop
enter
popf
lods
out
in
dec
jno
add
push
mov
or
mov
mov
das
xor
ret
iret
jecxz
fwait
push
cmp
fstp
cmpsb
imul
scas
cmpb
lods
xchg
xor
mov
adc
xor
jmp
or
scas
xor
dec
imul
subl
addl
xchg
sbb
xor
inc
jno
je
jne
cmp
ret
rcrl
xchg
roll
arpl
pop
mov
sbb
cmp
add
adc
loopne
add
add
ljmp
or
jp
jp
or
and
xor
into
sti
inc
jecxz
sbb
insl
push
ficoms
test
nop
adc
jb
mov
aaa
jne
sub
cs
jb
or
movsb
cs
xor
and
inc
jne
out
cmp
enter
lea
sub
clc
and
or
sbb
lahf
mov
or
and
out
or
mov
scas
cld
ss
push
and
inc
rcrl
add
or
loop
cmpsl
aad
rclb
mov
int
push
add
stos
dec
test
bound
shlb
jae
rorb
sub
cmp
daa
jl
jbe
xchg
push
sbb
sub
cs
orb
push
daa
andb
or
scas
or
idivb
xor
pop
cwtl
aad
lcall
lock
test
dec
rcr
outsb
mov
fadd
cmp
xchg
cmpsb
cmp
daa
int
jns
js
mov
fmuls
scas
sbb
out
mov
and
fiadds
sub
xchg
loope
lret
imul
xchg
sbb
dec
sub
nop
mov
in
jo
cmp
pushl
dec
xor
jge
aam
jne
mov
dec
rcrb
mov
push
test
sbb
push
cmp
cwtl
std
xor
or
jns
cmp
mov
mov
mov
jg
lahf
sbb
shll
push
push
cmpsl
test
sbb
mov
cwtl
aaa
jno
jne
sarl
adc
imul
cmp
and
popa
cwtl
sbb
dec
sti
add
inc
sbb
sub
adc
cmp
sub
mov
cmp
cmpsb
mov
fwait
mov
data16
mov
lret
mull
jbe
push
imul
das
push
sbb
scas
cmc
jo
mov
mov
in
in
push
fdivrs
dec
cmp
jg
fs
cmp
icebp
dec
mov
in
in
cmp
xor
movsb
xlat
in
test
cwtl
adc
int
sub
hlt
rclb
push
lock
clc
xor
out
in
loopne
mov
mov
push
fwait
dec
push
in
icebp
mov
lret
add
cwtl
jecxz
loop
or
sahf
jmp
jns
emms
in
mov
sti
xorl
leave
loope
jns
cmp
jne
stos
out
scas
sbb
jg
cmp
xor
loope
fildll
xor
pop
xor
jbe
stos
xor
fcoml
mov
sub
dec
fisttpl
clc
sbb
lods
popf
pusha
enter
int
or
scas
stc
pop
daa
ja
pop
sti
shl
mov
dec
retw
jle
jne
add
mov
add
push
push
mov
jecxz
fcompl
fiadds
mov
pop
ljmp
into
add
mulb
sbb
sbb
mov
sbb
test
scas
in
dec
cmp
or
mov
aaa
cli
mov
mov
in
inc
push
arpl
in
out
je
outsl
adc
mov
mov
in
and
sbbl
mov
and
cmp
xchg
mov
inc
out
push
mov
scas
lods
add
lcall
enter
test
sbb
int3
cmpsb
lcall
jl
daa
mov
xchg
arpl
pop
jno
outsl
cmp
or
in
rcr
loop
mov
stc
daa
jno
mov
mov
adc
out
mov
mov
jnp
xor
cmp
xchg
adc
dec
push
jnp
pop
push
add
stos
out
stos
xor
mov
or
sbb
mov
or
mov
dec
xchg
fsub
adc
xor
mov
movsb
out
and
cs
bound
ret
mov
rorl
mov
dec
and
cmp
arpl
mov
fimuls
push
add
mov
push
and
xor
call
cli
loopne
dec
mov
cwtl
pop
mov
sti
mov
sub
fdivrl
addb
and
test
push
lcall
mov
clc
mov
jp
ljmp
dec
in
roll
popa
mov
mov
sub
pop
mov
mov
xlat
inc
ret
addr16
rorl
fldenv
out
stos
imul
frstor
insb
xchg
test
aas
xchg
push
lea
or
mov
sub
ficomps
mov
loope
pop
add
inc
mov
xor
lcall
mov
pop
xchg
xor
sahf
mov
sbb
lds
sub
add
adc
push
or
cmp
sub
add
mov
clc
pop
aaa
ficoml
cld
ret
aaa
rcll
outsb
icebp
pop
mov
cmpsl
ret
push
xlat
imul
inc
jge
jo
jns
clc
lcall
das
jae
inc
ret
fdivrl
adc
sbb
jns
test
pop
ds
cmp
imul
dec
and
in
mov
mov
cs
dec
test
popa
loopne
push
pop
cmp
and
stc
inc
and
mov
cmpsb
cli
inc
and
sbbl
pop
or
std
cli
pop
ja
mov
scas
mov
test
in
adc
pop
cld
subb
and
adc
and
fst
mov
xor
test
sub
pop
rorl
mov
test
aas
cmp
imul
mov
mov
jae
mov
hlt
and
repz
adc
call
das
inc
lret
adcl
out
xchg
jmp
push
aaa
inc
mov
test
sahf
ja
clc
addr16
mov
or
cmovl
loope
jae
popf
insb
push
shll
push
pop
jnp
pop
dec
jae
pop
dec
fistps
cmpsl
sbb
or
mov
push
and
scas
movsl
sub
mov
fistps
cli
inc
or
xchg
or
xchg
mov
mov
add
daa
mov
rolb
and
xor
dec
and
jg
nop
jg
sbb
add
sbbl
fucomip
inc
pop
loop
into
inc
pop
pop
lahf
cwtl
cmp
stos
out
or
inc
mov
loopne
out
mov
cmp
repz
lret
adc
scas
pop
clc
sub
icebp
cmp
and
mov
push
xchg
sbb
faddp
push
repnz
lret
cmp
mov
or
inc
xor
movsl
xchg
sub
aaa
push
pop
mov
andl
add
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
cld
sbb
add
