sbb
add
jmp
jg
inc
jmp
jne
leave
sbb
xchg
add
dec
sbbl
outsl
addr16
xor
ljmp
stos
mov
les
lcall
sti
mov
pop
cmp
jge
test
rorb
add
inc
cmp
mov
mov
xchg
sub
orl
aam
push
gs
cli
jl
sbb
and
push
jno
cmp
jp
add
fnstcw
jg
jmp
fildll
sbb
dec
ret
push
cs
shl
enter
jmp
mov
mov
add
lret
cltd
pop
add
xchg
stos
or
shrb
arpl
ficompl
stos
mov
xchg
add
pop
and
mov
and
lock
movsl
cmp
mov
lret
das
dec
mov
sbb
int
jmp
add
dec
or
add
jae
xchg
jl
pop
fidivl
jmp
xor
int
pop
clc
adc
push
mov
xor
jmp
andl
jmp
addr16
inc
xchg
inc
hlt
shrl
fsubs
dec
xor
adc
aam
daa
pop
sub
iret
addr16
lcall
mov
cmc
and
inc
scas
popf
imul
out
aad
sub
scas
mov
std
jns
shll
outsb
jl
sbb
lret
testb
roll
xchg
int
outsl
jp
gs
lahf
leave
jg
xchg
lret
lods
mov
movsb
or
inc
lock
or
stos
clc
cmpsb
out
les
dec
lods
adc
mov
xchg
repz
aad
pop
mov
rolb
push
fwait
test
daa
movsb
fs
pop
adc
mov
dec
inc
dec
mov
in
nop
testb
lods
cltd
sahf
sbb
stos
arpl
add
push
inc
rolb
mov
mov
test
dec
fidivrl
mov
cld
sti
jne
leave
push
fwait
mov
mov
inc
mov
lcall
inc
jno
subb
xchg
int
xchg
mov
mov
pop
jns
gs
add
and
jae
adc
push
enter
rcr
mov
popa
cmp
and
insb
sbb
push
pop
sub
pop
gs
test
inc
and
int3
cwtl
repz
inc
imul
pop
mov
or
sahf
or
repnz
inc
inc
sbb
xchg
insb
and
test
loope
das
out
imul
hlt
pop
rclb
or
popa
imul
in
jbe
push
ljmp
cmp
in
add
lock
fdivrs
and
and
lds
in
gs
in
inc
xor
lcall
daa
or
push
jg
lret
stos
mov
decl
mov
or
jecxz
gs
jbe
mov
and
jbe
leave
push
pop
sub
cmp
lods
in
add
mov
jne
adc
lea
inc
jmp
shrb
pusha
xchg
in
push
pop
mov
loope
push
mov
adc
xchg
cli
out
pushf
pop
jmp
or
outsb
mov
push
xor
sbb
ret
add
shl
add
out
sahf
xchg
adc
mov
rorl
mov
loop
adc
addr16
mov
pop
out
sbb
jae
test
mov
and
xchg
mov
addr16
jnp
inc
into
add
xchg
sti
sub
popf
and
cmp
sar
xchg
aas
pop
inc
sub
fbld
add
push
xchg
lahf
adc
cmpsl
enter
sbb
test
mov
xchg
sbb
leave
add
add
sbb
pop
nop
jle
mov
cmp
or
add
xchg
adc
mov
addl
scas
fstps
and
nop
jae
cld
fs
loopne
test
idiv
fldenv
nop
jmp
mov
insl
jle
xor
pushf
in
mov
int3
aam
xchg
lahf
shll
pop
cmp
cltd
out
in
imul
int
pop
rcrb
jge
incl
inc
sub
cmp
jb
cs
icebp
xchg
ret
cmc
or
int
jecxz
in
sub
xchg
push
pusha
sub
cmp
das
mov
mov
lds
sahf
lods
or
sub
test
or
ja
xor
cmp
pop
jo
divb
lods
mov
int3
fs
jno
nop
xor
call
hlt
in
popf
mov
popa
or
jne
pop
dec
mov
repz
bound
fiaddl
xor
inc
push
xchg
sbb
jmp
aam
xchg
lock
aam
xchg
stc
mov
xor
clc
sub
fcoms
aam
add
cmc
jp
adc
or
adc
ret
mov
enter
movsl
push
xchg
loope
xchg
sbb
aaa
aas
add
cmpsl
insb
sub
cltd
mov
or
std
cli
cmp
nop
ret
pop
add
iret
xlat
adc
bound
xchg
add
and
rsm
iret
cmp
cld
mov
adcl
nop
js
push
daa
or
adc
cli
and
mov
aad
dec
mov
xor
pushf
xchg
fucomp
or
mov
mov
jo
push
sbb
mov
clc
icebp
pop
or
mov
cltd
mov
pop
dec
sahf
stos
mov
aam
add
cld
subb
icebp
push
sbb
lret
loop
shll
pop
stos
mov
xchg
subb
cli
divl
dec
add
pushl
scas
xchg
xchg
xorb
pop
fstpl
inc
mov
jnp
cmp
xchg
push
adc
and
sbbb
cld
sub
lret
lahf
imul
jae
fmuls
or
and
cmp
pop
inc
in
xlat
jg
pop
mov
mov
leave
mov
adc
cmp
jge
push
sti
or
rcrb
lahf
cmc
test
push
or
bound
add
sbb
sbb
pop
pushf
andl
in
jb
mov
loop
xchg
jl
std
cli
cmpsl
and
sahf
outsl
pushf
aaa
fstps
out
sahf
xchg
test
sub
cwtl
jne
stos
aam
loop
insl
fdivr
mov
shll
dec
sahf
movsb
jbe
mov
add
mov
das
inc
inc
sub
sub
jmp
fmulp
int3
adc
xor
mov
mov
icebp
push
ljmp
adc
add
cld
gs
jp
lods
add
jne
ret
add
cld
dec
jo
in
push
je
or
in
cmc
daa
ds
sbb
sarb
addr16
adc
ret
loop
sbb
dec
push
fdiv
xor
loope
frndint
push
shlb
ja
inc
mov
popf
iret
and
xlat
icebp
cmp
fisubrs
mov
push
or
mov
ret
bound
cmpsl
sub
adc
pop
and
and
lret
push
jg
rclb
mov
subb
scas
popf
add
jle
or
stos
into
mov
sbb
sbb
and
pop
int
lahf
outsl
jmp
scas
aad
push
mov
mov
jp
int
xor
outsb
dec
or
push
idivb
shr
lcall
inc
xchg
push
mov
les
push
bound
fldcw
out
loop
xor
and
push
mov
and
fdivr
cmpl
mov
inc
sub
es
inc
jbe
and
cs
leave
das
popa
rcrb
cmpsl
push
pop
imul
mov
ja
push
or
cmpl
cmp
pop
and
xchg
sarl
mov
mov
stos
mov
inc
mov
dec
int3
pusha
shrl
ss
sbb
push
xchg
push
pop
lcall
xchg
fwait
xor
negb
jp
mov
or
test
and
mov
mov
imul
and
xor
xchg
call
mov
adc
mov
repz
push
roll
std
jns
lea
decl
fldenv
rcl
push
cmpsb
je
push
mov
jmp
test
and
add
mov
jle
test
xlat
loopne
xor
pusha
shl
mov
cwtl
pop
xor
xor
hlt
push
test
jge
mov
fldenv
aam
in
fdivp
sub
push
fs
jo
popa
addr16
enter
mov
mov
ret
lahf
pop
lds
push
fidivrl
mov
dec
cld
repz
jmp
add
in
and
dec
inc
ljmp
dec
mov
add
inc
mov
jae
or
add
test
outsl
loope
mov
and
sbb
pop
cli
ret
xor
mov
js
push
js
cmp
dec
pop
inc
cmp
testb
imul
mov
aam
cmp
je
ljmp
jmp
pusha
pop
mov
pop
cmpsl
jl
cli
fadd
pop
sbb
mov
fs
ja
mov
jmp
adc
or
adc
and
int
cltd
sbb
sbb
sub
ss
mov
dec
pop
das
addr16
mov
jl
mov
cmp
push
pop
jmp
dec
js
or
pop
mov
test
mov
xor
stos
mov
sbb
and
cmp
fidivrs
mov
adc
sahf
pushf
iret
inc
jg
inc
mov
adc
movsl
imul
cmc
fisubrs
sbb
jnp
pop
inc
lock
popf
jo
mov
mov
lahf
jg
stos
sbb
ds
ss
ss
jge
daa
sbb
cmpsl
lock
repnz
mov
fildll
or
lock
add
or
sub
cmpsb
jge
push
xchg
sub
shll
mov
mov
pop
out
or
ret
ds
faddl
jno
jbe
xchg
dec
cmc
add
lods
jbe
cld
inc
and
lret
lcall
mov
mov
dec
cmp
inc
sti
mov
jp
push
cld
xor
jle
fwait
js
xchg
adc
je
sub
push
sub
cmc
jp
jp
popa
pop
xor
popa
inc
imul
pop
xor
xchg
into
push
mov
rcrl
sub
jo
pop
add
lods
lret
pop
jb
cwtl
insl
jne
not
inc
inc
stc
mov
push
jge
cmp
pop
or
test
and
jo
dec
adc
cmpsb
lea
adc
loop
rolb
inc
mov
xchg
pop
int3
dec
rcrl
scas
movsb
jo
int
sub
cmpl
mov
mov
fnstcw
lahf
icebp
mov
add
imul
mov
mov
sbb
mov
push
jb
and
dec
mov
popf
push
dec
inc
add
pop
mov
ret
sbb
xchg
pop
xchg
mov
xor
inc
jg
repnz
pop
fwait
imul
inc
sub
jo
xchg
jle
cs
dec
mov
mov
shll
sbb
divl
imul
ffree
repnz
std
or
ja
xchg
xchg
sbb
push
pusha
mov
dec
aaa
xor
push
xlat
xchg
cmp
dec
rclb
dec
cmp
scas
or
jg
rcrl
dec
ret
imul
popa
lcall
inc
movsb
add
jnp
leave
mov
sbb
push
mov
cli
pop
sbb
and
sub
or
stos
orb
sbb
mov
scas
push
mov
fdivr
or
pop
testl
xchg
jo
scas
cwtl
addl
jecxz,pn
adc
dec
sbb
pop
push
hlt
lahf
add
or
shlb
lds
das
addr16
shl
mov
lods
enter
mov
xor
jae
test
adc
cli
rcll
pop
loopne
cmp
adc
scas
mov
test
sub
xchg
jle
imul
das
jge
push
xor
pusha
das
stc
mov
in
pusha
mov
add
lods
xchg
sub
fwait
cs
pop
and
push
cmp
mov
xor
inc
sbb
xchg
push
rol
cld
int3
xchg
notl
mov
mov
into
lcall
push
cmpsb
xor
mov
mov
shrl
push
and
jmp
or
pushf
jne
jle
cmp
cmpsb
pop
arpl
xor
mov
mov
mov
lods
lret
popf
lcall
outsb
push
and
aaa
call
xchg
pop
mov
sub
ficoms
mov
dec
push
stos
cmpsl
mov
xor
jl
mov
jmp
faddl
rdpmc
test
push
xor
mov
add
xor
aad
mov
out
fisttps
fstpl
test
fwait
je
aam
icebp
add
je
lock
mov
inc
mov
cld
jge
loop
pop
and
or
jmp
sub
xchg
push
cmpsb
into
and
pop
push
pop
lcall
dec
vsqrtsd
xor
add
outsb
and
into
enter
mov
test
dec
flds
xchg
cmp
pushf
daa
mov
adc
push
scas
ds
xchg
or
mov
xor
jnp
xor
fsubrl
mov
push
jae
cmp
cmp
int
dec
pop
adc
cld
mov
or
hlt
xchg
add
js
aad
rcrl
addb
popa
and
decb
loopne
test
pop
jecxz
mov
repnz
imul
cwtl
adcl
in
out
push
testl
test
outsb
sbb
mov
inc
fists
das
mov
jne
jecxz
mov
orb
lret
and
inc
push
xchg
mov
popf
orb
push
cltd
and
insl
lock
data16
mov
fisubl
sub
loop
ret
in
mov
push
or
push
pop
es
leave
mov
bound
pop
stc
and
inc
sbb
ret
cltd
cmp
pusha
or
mov
nop
in
out
stc
push
pop
sbb
mov
movsb
dec
lcall
dec
out
and
mov
shlb
jo
jbe
push
or
sub
decl
xor
popf
dec
pop
sub
inc
psllw
and
lds
mov
lret
in
mov
push
jecxz
mov
xchg
outsb
jno
outsl
adc
or
enter
das
movsb
cmp
mov
int
dec
in
dec
bound
cmp
jb
insb
cmp
bound
fidivrs
lods
ret
iret
xor
addr16
add
jno
outsb
mov
add
repnz
sub
adcb
daa
cld
movsl
push
sbb
mov
jge
xchg
popa
fwait
add
movb
or
mov
fdivr
push
ja
repnz
ret
stos
xlat
mov
mov
dec
xor
xor
mov
push
jmp
xchg
test
xchg
dec
gs
push
cld
inc
and
imul
das
lods
pushf
cmp
std
js
stos
and
mov
sbb
mov
pop
xchg
outsl
into
mov
xor
aad
jns
jecxz
push
mov
popf
arpl
xchg
push
pop
cld
mov
ja
jecxz
fnstenv
or
mov
jbe
mov
inc
daa
out
xor
in
ss
and
add
int
adc
in
pop
mov
cmp
xor
pop
ret
hlt
or
xor
mov
mov
pop
cld
push
std
mov
xor
loopne
push
xlat
inc
ljmp
lcall
mov
mov
pop
scas
mov
inc
test
cmpb
inc
pusha
int3
into
and
push
fsubrl
jecxz
mov
test
cmp
mov
sahf
call
movsb
xrelease
cld
addl
outsl
nop
aas
lret
mov
test
jno
ret
lret
inc
fstpl
and
push
xor
addr16
data16
fbld
mov
loope
enter
test
je
pop
adc
out
mov
adc
add
push
add
xchg
pop
les
pop
std
inc
jbe
mov
or
dec
lds
push
mov
test
sahf
call
sub
hlt
jg
sti
sub
and
ret
stc
inc
pop
jne
xor
loop
ret
gs
scas
in
pop
mov
push
push
mov
out
das
xchg
mov
pop
inc
fildll
mov
xchg
outsl
ss
dec
pop
not
ljmp
cmp
nop
jbe
nop
push
fmuls
sub
xorl
out
imul
adc
cmp
in
mov
iret
mov
jecxz
je
dec
hlt
sbb
fnsetpm(287
pop
aas
cmp
inc
cld
test
cmp
imul
mov
or
stos
jl
negl
and
mov
inc
sti
mov
mov
cmp
mov
shll
dec
pop
inc
dec
push
loopne
test
addl
mov
inc
jmp
adc
dec
dec
pop
mov
sub
call
lods
dec
ss
mov
add
mov
std
mov
test
wrmsr
lods
in
imul
scas
sahf
xor
cltd
jno
std
fucomp
adc
es
push
xchg
jp
loopne
and
ss
push
sbb
sahf
pop
repnz
bound
inc
andl
inc
dec
jb
sub
mov
add
call
adc
mov
test
jno
fiaddl
jae
push
movsl
iret
inc
xor
je
or
mov
aad
es
mov
loop
jo
mov
call
sub
aaa
mov
addr16
ss
aaa
xor
inc
or
dec
cmpsb
mov
into
in
adc
sti
lahf
xchg
pop
shrl
xlat
mov
bound
push
xor
cli
imul
pop
lds
mov
inc
sub
sub
sbb
mov
sbb
daa
jno
inc
fscale
insb
icebp
xchg
add
fwait
std
xor
inc
lret
and
leave
cs
out
xor
jne
icebp
ret
enter
xchg
xchg
sbb
lahf
inc
push
pop
enter
and
sbb
out
add
push
fmuls
sub
or
jg
aam
dec
sub
mov
add
imul
scas
out
mov
pop
sbb
insl
insl
notl
xchg
stc
jle
and
leave
jnp
inc
or
sti
mov
cld
add
jg
cld
pop
daa
mov
and
jle
gs
xor
mov
popf
lds
jg
add
push
outsl
xchg
xor
in
addr16
sbb
test
inc
fistps
pop
mov
mov
out
dec
cmpsb
jne
and
xchg
add
push
sub
es
sbb
mov
test
repz
push
cmp
xlat
mov
push
mov
out
lret
sub
mov
xor
jp
mov
loope
add
push
loope
repnz
enter
mov
mov
pop
std
and
cli
mov
mov
adcb
popf
outsl
pop
shlb
inc
daa
inc
sub
jl
adc
dec
adc
pop
and
std
insb
pushf
bound
or
push
mov
jne
dec
dec
movl
inc
jg
imul
push
dec
adc
xchg
cwtl
mov
pop
lea
push
bound
iret
dec
mov
rcll
mov
popa
pop
icebp
and
cltd
and
mov
jns
xchg
pop
pop
push
add
cmc
inc
adc
jns
adc
cltd
jl
pop
mov
cmpl
int
rcr
out
clc
mov
flds
xor
mov
mov
je
fwait
aas
push
jo
bound
imul
add
lahf
loopne
jbe
arpl
lods
lods
scas
test
out
inc
xchg
lahf
add
pop
jne
pusha
jl
fdivl
push
dec
pop
mov
cld
mov
fs
and
xchg
push
sub
sbb
scas
mov
push
jb
aaa
movsb
sub
and
mov
add
adc
stos
mov
ret
jbe
mov
sub
sbb
adc
insb
stos
pop
pop
outsl
mov
movsl
xlat
cmp
aad
jge
jmp
repnz
js
lods
outsl
xlat
rorl
fistpll
je
mov
rclb
sbb
dec
jo
adc
arpl
push
or
and
loope
jl
ficomps
mov
in
fstpt
cmp
jb
cmp
adc
addr16
xchg
enter
test
rorl
mov
hlt
sbb
inc
xor
je
jg
lret
fadd
repnz
dec
jl
push
pop
icebp
cmpsl
inc
cmc
sub
scas
xchg
xchg
push
aas
hlt
dec
or
or
cmpsb
inc
ds
mov
lds
push
mov
push
std
test
adc
adc
leave
lods
movsl
mov
push
jb
imul
mov
adc
sbb
add
in
or
repnz
stos
cmp
jmp
mov
pop
push
ficoml
pop
pop
gs
sbb
aas
push
cs
mov
movsl
fdivrs
enter
inc
dec
xchg
arpl
jne
ljmp
outsb
push
mov
enter
ret
repnz
pop
mov
jae
jnp
inc
and
stos
cmpsl
mov
xchg
pop
xorl
int3
xor
in
imul
mov
pop
movl
or
inc
push
pushf
jl
dec
jns
jle
sbb
or
mov
jae
andl
inc
push
or
mov
cmp
mov
cld
daa
cmp
xchg
nop
adc
out
mov
repnz
loope
push
lcall
repz
pop
xchg
inc
pushf
mov
scas
xor
popa
fstl
mov
adc
jns
mov
fwait
mov
aaa
jb
int3
pop
fwait
sub
inc
rcrb
es
push
push
jmp
mov
xor
xchg
jnp
cmpsb
sbb
in
insb
push
cmpsb
sub
mov
jle
push
mov
push
mov
nop
mov
je
mov
jge
mov
fisubl
mov
sbb
lret
test
scas
pop
popa
sub
and
movsb
mov
sbb
mov
mov
jne
stc
icebp
mov
sahf
mov
push
adc
rcr
add
ljmp
xchg
outsl
mov
push
jb
and
mov
stos
inc
xchg
test
cmpsb
mov
in
imul
jae
sub
addb
stc
mov
stos
dec
push
pop
jbe
xor
push
inc
push
or
pop
jns
cmc
and
punpcklbw
adc
scas
test
insb
scas
lcall
add
jmp
shrb
mov
movsb
mov
push
dec
dec
andb
dec
out
jne
aad
dec
dec
sbb
pushf
testb
mov
and
mov
push
mov
sub
inc
add
std
adc
cs
xlat
or
push
xor
repz
nop
push
mov
or
jg
mov
xchg
ds
stos
push
out
negb
mov
cmp
repnz
icebp
jnp
lods
mov
xchg
fwait
lds
shl
fildll
jb
push
lcall
push
mov
or
cwtl
cmc
shll
inc
pop
in
movsl
lds
push
lcall
mov
int
mov
pop
mov
imul
or
push
rcrl
sub
add
cli
pop
push
insb
outsb
stc
out
popa
call
mov
xchg
ret
dec
push
sbb
scas
push
xchg
arpl
lods
ds
mov
push
pop
test
mov
out
test
scas
hlt
outsl
mov
stos
jg
aaa
mov
repz
insb
push
cmpsb
enter
in
dec
out
adc
or
sbb
ficoml
leave
cmp
call
xchg
push
sbb
ljmp
pop
jo
imul
test
leave
es
push
and
cmp
das
xchg
and
aaa
fadd
mov
icebp
inc
and
push
dec
movsl
or
stos
push
mov
xorl
jl
mov
sbb
outsl
jp
add
push
int3
sbb
and
mov
cmc
faddl
mov
xchg
pop
andl
jge
sahf
and
dec
jg
mov
imul
mov
jge
movb
xlat
adc
pop
fidivl
adc
xchg
cmp
cmp
pop
adc
jecxz
inc
clc
outsb
mov
in
lea
and
int3
adc
jl
sti
das
push
cmp
add
fstpt
hlt
xlat
gs
roll
bound
nop
jecxz
xor
sub
xchg
cmp
ret
jae
sbb
shr
xor
sub
pushf
arpl
mov
xor
lret
and
and
insl
shll
jle
loop
adc
je
inc
shrb
pop
mov
imulb
mov
jle
dec
cmp
sbb
sbb
mov
addr16
fildll
clc
fdivrs
adc
cmp
scas
mov
lods
add
cmp
xorb
xchg
sarl
jbe
xchg
pop
lcall
lret
and
and
push
rorl
mov
pop
pop
sbb
jg
mov
fwait
xchg
dec
pushf
inc
push
sub
aaa
xchg
fnsave
ljmp
pop
std
fs
shll
adc
sub
adc
inc
mov
lcall
stc
dec
fiaddl
xchg
cmp
xchg
imul
mov
arpl
shll
cwtl
sti
mov
outsb
add
icebp
fcom
addb
mov
adc
push
mov
pop
jo
cmp
adc
leave
jne
lahf
imul
scas
add
push
enter
jno
xor
sub
jo
repz
cmp
lea
mov
dec
decb
or
call
iret
adc
mov
cwtl
daa
icebp
xor
outsb
lock
les
mov
sub
xlat
data16
test
or
out
cmp
psubd
and
xchg
out
enter
push
adc
cs
in
jns
or
cmp
cmp
inc
pop
pop
call
xor
movhps
ljmp
test
outsl
mov
hlt
lcall
mov
xchg
iret
loope
andb
pop
stos
outsl
enter
lahf
sti
fdivl
jnp
sbb
push
fimuls
nop
xchg
enter
loope
or
mull
push
xor
adc
test
lock
fbstp
scas
es
sahf
jge
lcall
in
popf
dec
mov
fsubs
repnz
insl
and
cmpsw
dec
into
in
and
loop
mov
es
repnz
je
cld
rorb
xor
scas
leave
fisubl
adc
xor
ljmp
stc
ljmp
cmp
sub
repz
ficompl
and
pop
rcrb
jg
cmp
stos
jne
jge
arpl
into
rep
stos
dec
in
pop
pop
dec
in
sarb
cmp
dec
sub
aad
sub
and
add
cmp
inc
jbe
out
xchg
cld
popa
push
in
pop
jge
fucom
aaa
pop
dec
adcb
mov
jno
xchg
rorb
pop
cs
pop
ret
xor
jl
or
popa
das
mov
andl
pusha
mov
stos
cmp
xchg
cmp
cmpsb
fisttps
rorb
push
test
into
dec
and
ja
jno
cltd
and
inc
bswap
sub
rcll
jp
add
popw
mov
or
pop
ja
xchg
jl
out
arpl
repnz
aam
xor
jne
shll
in
ss
addr16
add
push
xchg
sbb
xor
cs
insl
xchg
xchg
dec
mov
sti
mov
movsb
pop
sub
hlt
inc
out
je
sbb
bound
xor
pusha
and
dec
cld
in
lock
adc
lods
decb
call
test
mov
mov
scas
repnz
gs
pop
mov
and
ja
loope
outsl
inc
pop
and
xlat
stos
cmp
and
pop
xchg
xor
pop
nop
mov
cwtl
jno
fnstsw
int3
jbe
jae
inc
mov
mov
aaa
sahf
out
testl
into
jmp
pop
add
fwait
adc
nop
mov
pop
es
data16
stos
lds
sub
mov
jb
mov
push
mov
ret
vmovaps
xor
push
mov
mov
pop
jne
mov
jecxz
repz
mov
test
faddp
in
cmp
and
cmp
fistpl
add
sub
leave
fldl
dec
enter
sub
bound
cwtl
enter
decl
inc
lods
xchg
dec
pop
or
dec
push
test
inc
int
mov
lret
jecxz
aaa
in
fdivrs
enter
xchg
es
stc
icebp
jl
pop
jl
xchg
dec
pop
imul
mov
inc
mov
neg
pop
add
lds
add
jno
sbb
sarl
jbe
ljmp
pop
sub
loopne
das
leave
sub
movsb
xor
jl
cs
sub
fldenv
adc
daa
sbb
or
in
mov
enter
jl
add
pusha
xlat
stc
insb
lods
fcmovnu
xchg
xor
xchg
inc
lea
addr16
lret
pop
scas
ficompl
in
jge
lret
imul
and
xchg
push
rcl
jmp
jge
adc
inc
xchg
jmp
filds
std
pop
aaa
test
lods
push
imul
inc
and
push
das
xchg
push
inc
je
lcall
fnstenv
pop
scas
jecxz
lods
cwtl
les
xchg
cmp
push
jnp
call
or
cmpsl
dec
and
mov
mov
adc
mov
mov
adc
pop
mov
stos
fbld
cmp
aas
fisttps
sub
lods
ljmp
lods
push
xchg
lods
stos
int
scas
pop
jne
push
push
out
mov
paddusb
mov
jg
xor
jg
add
pop
repnz
mov
jle
fld
loop
push
sub
mov
call
decb
cmc
lea
ficompl
pop
inc
xchg
xor
pushf
ds
sbb
push
imull
dec
hlt
insb
pop
push
ja
sbb
scas
out
loope
ss
dec
fadd
mov
inc
push
lret
filds
mov
xchg
mov
add
aam
rcl
insb
in
push
mov
mov
mov
add
fisttps
rcrb
out
cld
fsub
or
push
xchg
sbbb
cmpl
dec
adc
mov
push
push
or
adc
into
les
cmp
jecxz
xchg
fs
je
aaa
dec
or
adc
nop
push
push
cmp
mov
adc
xor
mov
pop
mov
lahf
fisubrl
movsb
cltd
fbstp
fs
stc
mov
xor
add
loopne
stos
repnz
cld
das
sbb
xorl
push
adc
fdiv
lcall
jl
cli
negl
fistpl
xchg
arpl
lods
sbbl
sti
rcll
imull
mov
or
movsl
popa
jns
mov
add
cmp
test
mov
cmpsb
insl
pop
mov
mov
lock
and
xchg
cmpsl
rcrb
jp
aam
loope
adc
sbb
stos
add
mov
adc
jmp
hlt
mov
nop
xor
sbb
add
stc
fsubr
jne
xor
cmpl
and
js
xchg
arpl
lcall
lea
iret
sarl
leave
lcall
cs
push
gs
mov
aad
fwait
push
push
imul
or
shl
loopne
and
pop
cmp
xor
push
inc
pop
dec
inc
cmp
je
in
test
pop
popf
leave
xchg
jmp
and
pushf
or
xchg
mov
adc
mov
adc
jg
dec
in
rcrl
dec
cmp
out
push
faddl
aas
repz
or
popa
addr16
lds
ret
mov
xchg
cltd
mull
and
pop
sti
popa
and
mov
fsubs
sbb
cmp
mov
push
mov
test
divl
fwait
jbe
xchg
mov
xchg
or
add
xor
mov
mov
push
sub
ret
sbb
imul
in
mov
mov
nop
icebp
int3
in
cli
xchg
lock
popl
jmp
xchg
adcb
hlt
mov
push
aam
insl
adc
adc
fwait
push
les
push
lea
pop
sub
xchg
fwait
inc
lret
xchg
into
cs
xor
popa
aad
push
mov
cs
cltd
lds
jl
mov
xor
mov
dec
inc
cltd
jb
inc
pop
or
popw
test
pusha
in
add
sbb
inc
xchg
inc
or
lock
cmp
rcrb
add
xlat
sub
mov
mov
mov
sub
ficoml
flds
repz
dec
mov
sbb
mov
testb
inc
imul
lret
into
sub
or
int3
scas
stos
xchg
rolb
push
mov
jnp
jne
adc
inc
xchg
mov
lcall
daa
icebp
push
xchg
pushf
leave
clc
ljmp
lcall
sub
mov
xor
push
shll
jne
mov
dec
movsw
js
fwait
popf
xchg
addr16
mov
xor
cmpb
lea
das
out
hlt
loop
dec
add
ror
add
xor
mov
arpl
mov
push
adc
mov
push
aam
in
pop
push
cli
aam
sub
pop
test
sbb
jbe
pop
push
cwtl
sbb
sahf
inc
sub
jmp
cmp
cmp
pop
std
push
xchg
or
std
mov
adc
adc
push
push
lods
jbe
and
sub
cmc
stos
orb
jg
rcr
js
ja
nop
jmp
movsb
cmp
les
icebp
test
cmp
mov
mov
mov
mov
pop
scas
mov
pushf
jmp
lods
hlt
shlb
cwtl
cmp
aad
enter
or
repz
fldpi
dec
fwait
std
fwait
jmp
mov
sbb
mov
arpl
xchg
adc
insl
mulb
aam
push
roll
jp
xchg
dec
mov
pop
jecxz
pop
dec
mov
mov
scas
inc
pop
pop
ds
pop
aas
sub
add
pop
mov
popa
inc
or
out
rcrb
fisttps
into
dec
gs
aaa
add
push
jp
adcb
xor
iret
mov
fisubrl
dec
push
adc
lahf
nop
enter
and
ret
push
leave
shrl
inc
dec
mov
push
out
dec
sbb
fnsave
shr
inc
loopne
add
mov
and
test
scas
cmp
mov
mov
xchg
sub
or
push
push
imul
xchg
movsb
sahf
cli
insl
mov
sub
jbe
lret
adc
ds
push
xchg
push
push
xchg
or
lods
inc
mov
out
or
xchg
inc
insl
pop
xchg
in
aaa
adc
popf
xor
or
ret
add
loop
dec
repz
ljmp
imul
decl
shlb
ret
iret
xor
shl
push
pop
cmp
adc
add
pop
adc
xchg
pusha
lods
xchg
sbb
mov
clc
sub
fsubrs
mov
sbb
pop
jo
mov
jnp
push
mov
xlat
add
ljmp
mov
inc
jmp
cmp
xchg
mov
pusha
arpl
in
data16
shlb
loopne
mov
jmp
int
in
addr16
dec
imul
and
lcall
je
pop
push
imul
imull
pop
adc
and
pop
ss
jne
sbb
mov
inc
cmp
push
inc
pop
in
jg
aad
in
int
inc
insb
cmp
arpl
jmp
pushf
mov
lds
pusha
push
or
mov
mov
dec
cmc
adc
push
pop
inc
gs
push
fcmove
bound
jno
mov
daa
fwait
stc
lret
inc
add
mov
mov
popa
lcall
jle
shll
dec
inc
add
in
cvtdq2ps
fsubs
xor
bnd
loopew
cwtl
push
pop
das
xlat
into
mov
jb
or
push
pop
mov
mov
int3
adc
aaa
movsl
lods
jnp
daa
stc
adc
arpl
lods
xchg
mov
add
in
mov
push
jge
jb
loop
inc
sti
subl
lahf
pop
outsl
mov
mov
sbb
test
mov
or
push
xchg
cwtl
leave
xchg
mov
out
mov
sbb
inc
pop
xor
fdiv
add
sub
jae
gs
lret
cmpsl
lret
mov
xchg
adc
lret
dec
aas
lret
xchg
jle
cld
push
adcl
in
ror
push
movsl
scas
sti
mov
xlat
mov
adc
pop
jbe
jnp
jp
ja
into
sub
jbe
cs
jp
add
lahf
mov
fsts
shlb
mov
stos
clc
sbb
xchg
scas
xlat
sub
fnsave
and
out
in
popf
inc
stos
es
add
mov
cld
mov
and
cld
sahf
inc
cmp
mov
iret
mov
lock
push
mov
jle
lahf
inc
push
jae
jns
and
push
push
test
cmc
pop
clc
push
mov
out
jbe
xor
rorl
cmp
dec
cmp
jg
addps
dec
stos
pop
sub
cld
in
dec
outsb
cmp
ja
jmp
mov
xor
inc
shl
insl
push
mov
inc
inc
mov
lret
lahf
dec
cmc
mov
pop
adc
xchg
sub
mov
push
cmp
push
mov
loop
jg
mov
test
xor
pop
pop
push
fistl
cmpsl
dec
add
or
ret
sbb
mov
outsb
imul
lods
rcl
iret
test
xor
cmp
out
hlt
adc
jmp
push
lcall
fldcw
aas
aas
inc
inc
or
adc
sbb
testl
push
lods
push
or
mov
cmpsb
notl
pop
fisubrl
adc
test
xor
ret
sbb
cmpsl
pop
out
xchg
popa
mov
or
adc
cmove
nop
lea
or
and
sbb
cmp
gs
jbe
outsl
xchg
mov
or
pusha
lods
lock
into
into
jmp
in
into
lcall
daa
cli
mov
pushf
jp
fnsave
jmp
test
mov
fbstp
test
ret
xor
leave
scas
dec
xor
ljmp
ficoms
and
sub
sbb
sahf
fdiv
xor
adc
dec
shrl
adc
ror
or
mov
inc
in
imul
jnp
jbe
pop
adc
mov
addb
movsl
xchg
jmp
adc
push
repnz
pop
dec
out
xlat
nop
bswap
mov
cs
dec
xchg
push
pushf
xchg
push
lock
sbb
cmp
add
movsb
ret
and
mov
sub
fbstp
fs
pop
dec
fcompl
les
inc
dec
shlb
mov
push
xchg
xchg
dec
mov
test
cmp
out
mov
mov
push
clc
xchg
outsb
mov
loop
aas
mov
xchg
mov
loope
popf
fdivl
es
push
pop
sub
mov
fdivl
cld
or
dec
and
xor
jecxz
mov
adc
repnz
inc
cli
aam
inc
pop
add
test
iret
jae
pop
pop
cs
push
inc
out
call
and
nop
dec
cmc
aad
mov
sbb
mov
xchg
je
xor
cmc
jl
adc
repnz
xchg
daa
cmp
insl
push
test
mov
jecxz
stos
cmp
xlat
out
add
push
pop
mov
ds
rolw
dec
mov
jne
xorl
sbb
sbb
outsb
fmull
je
fmull
je
pop
jo
xor
cmc
xchg
lret
add
out
aam
in
xchg
pop
xor
cmp
push
pop
mov
inc
pop
dec
in
test
je
stos
inc
incl
mov
insb
jle
add
add
das
jl
cmpsb
jmp
popf
inc
out
mov
out
repnz
in
jmp
stc
mov
add
xchg
xchg
addr16
idiv
pop
cs
cld
fcmovu
xchg
mov
sub
mov
rcrl
inc
mov
daa
inc
sbb
repnz
imul
test
and
test
fucomp
inc
push
mov
stos
mov
xor
cld
and
push
fbstp
nop
sarb
pop
lods
jmp
repnz
or
or
jae
cmp
popa
lret
addr16
mov
or
or
mov
insb
pop
mov
mov
stos
sub
inc
sbb
inc
pop
in
fstps
mov
mov
jge
xor
es
dec
mov
pop
sub
rorb
dec
pushf
push
lret
daa
sbb
push
jno
cmp
jno
lret
pop
inc
mov
pop
lret
pop
and
ficoms
mov
xchg
xor
aas
out
inc
mov
mov
xor
mov
mov
mov
js
fwait
jl
push
popf
sahf
add
aas
fistl
jle
daa
mov
stc
out
ss
cwtl
repz
inc
push
into
sbb
jle
ja
into
arpl
loopne
ja
ja
inc
popf
test
in
add
ja
pop
stos
push
or
xchg
and
jmp
aam
nop
es
add
popa
jbe
cli
shrb
je
ljmp
pop
nop
sti
cmp
in
in
adc
int
inc
mov
out
insb
push
sub
test
dec
adc
mov
aam
mov
movsl
in
xchg
mov
in
je
mov
inc
mov
xor
add
push
outsl
rolb
out
or
je
or
ret
lcallw
insb
cmpsl
xchg
lea
xchg
cmpsl
push
repnz
cmc
mov
sbbb
dec
bound
cwtl
xorl
push
or
inc
movsb
dec
push
xchg
loopne
xchg
jl
add
rcrb
ret
test
adc
arpl
in
lret
xchg
add
sub
cmp
test
loope
adc
jbe
flds
mov
and
inc
mov
xor
mov
out
add
cmpsl
packsswb
fcomp
mov
xchg
pop
or
call
xor
mov
andl
mov
sub
push
mov
aas
inc
ss
cmp
xor
adcl
mov
inc
icebp
in
dec
aas
add
cltd
in
xchg
xchg
loope
shlb
mov
dec
mov
or
pop
mov
jecxz
rolb
or
jge
mov
pop
or
pop
fisttpl
out
les
xchg
jno
test
xchg
fnsave
test
jo
jge
xor
cld
ds
xor
xor
arpl
stc
stc
push
and
lods
xchg
subb
and
dec
insl
pop
lds
and
mov
adc
sarb
andb
xchg
ret
loopne
mov
cmp
repnz
repz
inc
data16
mov
lret
repnz
pop
dec
clc
and
mov
xor
dec
xor
jle
test
push
mov
sub
xorb
mov
and
fmull
push
sub
jl
xor
sahf
or
jg
fsubs
sbb
call
and
add
xlat
dec
adc
and
stos
in
xchg
out
je
js
std
lods
jle
dec
loop
ds
mov
cmp
mov
ljmp
lret
adc
sub
xor
test
cld
andb
add
ds
inc
sub
insb
sub
cmp
js
popa
add
mov
sbb
inc
inc
movaps
loopne
inc
test
pop
jp
sub
dec
data16
cltd
jb
jmp
and
mov
call
fwait
and
pop
mov
les
jmp
mov
jnp
aas
push
pop
flds
xor
call
dec
mov
imul
aad
jl
mov
jbe
in
lods
mov
popl
clc
or
test
adc
jae
cmp
inc
jne
jnp
adc
dec
push
cs
inc
stos
add
adc
xchg
add
and
lret
js
jbe
vphsubwd
ret
jecxz
int
jbe
jg
test
imul
lcall
daa
test
js
adc
ror
lret
mov
pop
stos
push
fidivrl
fcompl
and
cmp
clc
aad
push
mov
mov
cmp
push
mov
cmp
loop
jmp
ja
push
dec
cltd
dec
mov
mov
mov
xchg
xchg
inc
jno
fnstcw
test
insb
pop
test
cmp
sub
std
mov
das
push
dec
repz
aaa
inc
fildll
mull
mov
stos
add
xchg
sbb
push
mul
imul
mov
lods
pop
lret
repz
lock
mov
outsl
int3
mov
lret
or
lods
jno
repz
mov
pop
sbb
cmpsb
imul
add
mov
jo
cmp
fsubs
out
sahf
ret
push
into
push
pop
popa
out
insb
add
dec
pop
scas
mov
jne
insl
mov
stc
addr16
rcll
dec
xchg
pop
shl
sub
sbb
jg
adc
adc
inc
add
jno
ret
into
pop
cmp
int
imul
sahf
lds
rcl
subl
push
arpl
insl
cld
jp
jne
cmp
call
outsb
inc
or
mov
sti
stos
fmuls
addl
fwait
or
xchg
jp
pop
push
sahf
bound
cmp
or
or
push
les
mov
js
int3
jg
push
mov
je
and
inc
out
lret
inc
and
jge
out
dec
clc
push
sahf
or
shr
fidivl
stos
mov
add
pusha
les
loop
jg
ljmp
dec
mov
inc
sub
pop
dec
ret
aas
fbstp
jbe
mov
and
xor
mov
jb
out
jbe
jae
sahf
test
pop
jmp
and
imul
or
mov
add
cmp
xor
out
cmp
adc
jmp
xchg
daa
incb
cmp
lods
sbb
lahf
popf
lret
arpl
daa
arpl
jecxz
call
mov
add
jecxz
cmpsb
cmp
int3
insl
sbb
and
xchg
mov
divl
sbb
icebp
mov
push
popa
mov
push
sub
push
sub
cmp
sarl
stos
sub
out
dec
cmpsl
aas
bound
sbb
or
stos
inc
push
cld
inc
in
xor
mov
add
insb
loop
xor
push
xor
push
or
push
bound
xchg
mov
test
xorb
mov
mov
rolb
sub
lods
mov
xchg
mov
adc
in
push
add
sbb
jle
ja
dec
aam
aam
or
jbe
popf
jbe
pop
jnp
push
dec
sub
stc
cmp
imul
push
cwtl
fdivs
xchg
sbb
and
scas
testb
cmp
in
push
jle
pop
pop
xchg
cmp
lods
mov
pop
movsl
jnp
jecxz
nop
mov
aad
ror
dec
jae
inc
sbb
push
ficoms
push
and
es
fisubl
add
test
repnz
faddl
jmp
push
jae
imul
aam
xor
dec
and
addl
rol
subb
add
imul
cmp
sub
movsb
jbe
jp
aas
scas
mov
jb
ja
test
mov
dec
mov
outsb
adc
adc
mov
push
imul
jg
jmp
gs
and
jge
mov
nop
mov
pop
loop
mov
sbbb
inc
dec
jg
pop
fstps
lds
add
fisubrl
pushf
adc
loope
fistps
inc
mov
hlt
in
aam
jge
in
fabs
scas
push
push
xlat
scas
push
xchg
sbb
adc
and
or
mov
push
xchg
faddl
out
pop
inc
imul
jne
ss
mov
loopne
cmp
hlt
push
sahf
daa
out
in
or
rcll
pop
push
jne
je
sub
lret
mov
and
adc
test
fmuls
es
push
out
mov
push
cmpsb
in
or
mov
ficomps
pop
push
scas
cmp
push
xchg
ret
or
ljmp
cltd
lcall
stos
in
push
jmp
mov
or
push
ja
inc
in
leave
ljmp
dec
js
repz
jo
xchg
fisttps
lea
sub
ficoml
xor
inc
out
push
push
shlb
in
std
and
inc
in
mov
mov
pop
sbb
insb
adc
mov
sti
xlat
adc
xor
xor
aam
subl
cmp
adc
addr16
cmp
add
adc
fildl
mov
mov
fwait
jmp
jl
daa
cmove
dec
out
cwtl
out
pop
aas
cmpsb
xchg
ss
call
dec
inc
loopne
sbb
repnz
loop
adc
shll
add
call
test
js
xor
insb
jp
gs
cltd
xchg
inc
adc
aad
dec
inc
pop
sbb
ljmp
lea
xchg
cmp
dec
sub
dec
inc
and
loope
out
sbbb
jmp
subb
stc
pop
xor
push
fcmovnu
and
and
pop
sbb
dec
push
and
push
sub
jbe
jae
mov
sti
xor
sar
adc
in
dec
mov
scas
add
mov
and
fadds
notb
push
stc
cli
popf
adc
jecxz
test
movsl
je
and
jle
cmp
cmp
pop
into
test
xchg
mov
in
lea
pop
mov
pop
icebp
cmp
push
ja
xchg
and
xchg
mov
test
xchg
mov
mov
sti
outsb
in
test
aas
mov
and
lock
xchg
sbb
or
pop
mov
jl
enter
push
cmpsl
push
push
mov
mov
or
int
fdivrl
enter
roll
stos
jno
mov
sub
arpl
pop
and
add
fists
ss
cmp
jge
xchg
sbb
lret
dec
mov
jo
nop
gs
mov
xor
loope
mov
mov
loope
xorl
sub
push
jmp
repnz
repz
int
notl
lea
jmp
ja
jmp
push
imul
mov
xchg
jnp
mov
pop
sahf
xchg
lods
pop
ret
pop
lock
dec
and
jnp
lcall
add
and
or
stc
xor
xchg
rorl
bsr
testl
xchg
shrb
lret
mov
int3
stos
or
pop
dec
sub
jbe
mov
sarb
sbb
dec
cmp
sub
les
loopne
aas
sub
jo
test
sub
jbe
in
mov
add
mov
adc
xchg
and
push
out
xchg
inc
dec
mov
sbb
push
pop
leave
bound
sub
or
movsl
mov
lcall
dec
push
outsb
inc
aam
shl
int
cmpsl
push
in
push
jecxz
adc
inc
mov
stc
xchg
fistpl
fsts
call
lods
sub
cmp
in
dec
cmpsl
rclb
add
mov
das
mov
sti
out
jmp
cmp
pop
and
test
das
bound
pop
inc
enter
pop
mov
lret
push
and
dec
push
push
stos
outsb
dec
xor
push
or
or
popf
push
pop
pop
xchg
test
scas
or
push
adc
rcl
in
inc
aas
outsl
jl
ror
and
js
sbb
fisubrl
cmp
push
jecxz
outsb
inc
mov
dec
cmp
insl
test
cwtl
sbb
cmp
cltd
push
mov
data16
aas
jp
mov
xor
lock
dec
icebp
cmc
shlb
lret
add
sub
mov
ficoml
or
mov
cltd
adc
rcrl
inc
out
mov
inc
fsubrs
push
les
aaa
add
or
xchg
out
cmp
inc
xor
das
mov
int3
vsubpd
mov
sbb
in
pop
add
stos
dec
shll
iret
mov
xor
gs
int3
in
mov
lcall
icebp
sbb
mov
pop
and
lea
mov
xchg
imul
pop
mov
insb
adc
mov
cli
dec
cmp
lea
jno
divb
lret
dec
lret
arpl
and
xor
test
xchg
loopne
jne
cmp
fs
std
jl
movl
dec
cmpsl
inc
outsb
and
ss
and
test
roll
sbb
test
or
incb
dec
dec
addr16
rcrl
es
lret
xor
call
in
and
mov
repnz
cwtl
adc
xor
adc
and
push
push
pop
xchg
scas
adc
or
scas
ss
cli
ja
fs
jbe
pop
cltd
sbb
jle
mov
mov
pusha
lret
pusha
lcall
andl
sbb
lret
stos
cmp
leave
mov
add
mov
jecxz
in
mov
je
ret
js,pn
lods
test
loopne
push
jg
scas
jb
cmc
gs
cld
cli
negl
fsubrl
loop
out
lea
fnstsw
ficompl
and
hlt
pop
ret
pop
sbb
mov
xchg
fwait
inc
sbb
out
int
icebp
jp
sub
movsb
popa
adc
shl
rorl
sub
pop
and
dec
jb
test
in
stos
fwait
inc
pop
jle
or
jne
jbe
jae
nop
or
insl
addl
mov
or
js
mov
bound
scas
sub
push
push
ror
jo
or
mov
mov
dec
js
push
push
inc
ss
movl
jecxz
push
push
das
xor
and
jl
imul
lahf
pop
sbb
cmp
nop
outsb
aaa
add
push
gs
pop
sub
sbbl
inc
insl
mov
popa
jl
push
jge
jmp
cmp
push
jb
jne
movsl
out
imul
mov
in
sub
dec
inc
out
fucom
xor
or
jb
cli
inc
mov
jle
sbb
dec
lret
sbb
movsl
mov
or
add
sub
xchg
jp
fadds
enter
insl
jle
cld
je
dec
std
jmp
addr16
xchg
aaa
push
sbb
xchg
lahf
mov
loopne
ss
es
imul
ret
or
clc
aaa
dec
enter
incb
sbbb
es
out
cmp
jbe
cmp
xchg
jl
xchg
push
push
mov
inc
add
push
arpl
sbb
mov
repnz
aam
int
xor
fstps
mov
mov
test
inc
mov
mov
pop
and
flds
je
lock
xor
mov
sub
push
mov
imul
lods
xchg
mov
or
repnz
push
fisttps
inc
in
test
mov
mov
jp
pop
sbb
dec
adc
cmp
mov
push
loope
dec
fnstenv
pop
daa
dec
push
mov
mov
lret
inc
rclb
sub
inc
loop
fmuls
mov
jb
push
in
outsl
pop
repz
fdivrp
ss
pusha
loop
pop
sub
cmp
lea
push
sbb
shrl
fists
jecxz
inc
fistl
mov
add
or
xchg
mov
fsts
mulb
sbb
lods
dec
ds
cmp
push
mov
jp
out
adc
into
lods
or
leave
pushf
repz
rcll
inc
mov
jbe
jp
adc
jbe
push
cmp
and
aam
push
or
cmp
inc
jmp
roll
movsl
or
mov
and
lock
into
sub
in
testb
cmp
mov
in
push
or
shr
loop
jg
cmp
test
xchg
mov
adc
rol
rcl
sti
imul
inc
sbb
cmp
lahf
xor
lds
iret
or
pop
jmp
pop
cld
dec
stc
xor
adc
std
fsubrl
fists
or
and
cmp
js
icebp
rorb
fiadds
fidivrs
add
xchg
sub
ficompl
shl
out
imul
ss
notl
xchg
test
pushf
mov
pop
xchg
int3
add
clc
cmp
xor
js
mov
sub
mov
aas
sbbb
in
f2xm1
mull
xor
adc
adc
jl
je
imull
dec
aas
or
sbb
push
push
out
cmp
ss
xlat
popa
ret
pop
js
mov
fs
data16
ret
jle
or
sub
mov
inc
inc
xchg
jb
or
je
pop
add
shlb
iret
mov
ret
inc
mov
sub
roll
jmp
sbb
fidivrl
push
popa
in
stc
aas
aaa
mov
jmp
push
test
ljmp
ficoms
jno
sbb
dec
xchg
xchg
push
lahf
notl
xchg
aam
push
int3
push
jne
call
mov
xor
add
shl
dec
imul
lock
lret
jl
dec
dec
adc
adc
lahf
loopne
in
jl
mov
mov
dec
jl
data16
imul
cmp
sub
sahf
xor
rcr
cmp
jnp
das
aas
outsl
outsl
cmp
jp
xor
pop
mov
mov
dec
pop
repnz
shll
push
cltd
js
sub
data16
push
adc
sbb
int
outsb
loopne
cmp
and
pop
clc
loope
xchg
rcrb
testl
ljmp
adc
inc
add
addr16
mov
lcall
popa
in
movnti
sbb
mov
andb
icebp
pop
mov
mov
mov
xchg
leave
pop
test
mov
add
xor
stos
ljmp
int3
jmp
push
movsl
dec
dec
insl
insl
jbe
movb
lcall
sbb
add
adc
std
loop
and
jg
add
mov
ja
lds
lahf
pop
jp,pn
nop
in
imul
out
rorb
inc
push
fistps
ja
pop
inc
xchg
incl
enter
inc
mov
notl
lret
notb
jo
xchg
rcrb
lret
stc
jae
and
sub
es
mov
xor
lods
mov
jno
xor
pop
dec
xor
cld
mov
insl
ret
stos
scas
shlb
xchg
cmp
pop
sub
cmp
test
sub
rcr
jecxz
dec
cmp
cmp
adc
xor
mov
jno
fnstenv
lcall
aam
or
jle
inc
push
cmp
out
cld
ljmp
add
stc
pop
jl
scas
shrl
inc
mov
cltd
in
mov
push
imul
xlat
outsb
and
mov
sub
adc
mov
push
pop
jecxz
inc
mov
in
movsl
add
xchg
out
enter
addl
sahf
pop
pusha
sub
cmp
pop
jnp
lcall
negb
out
shll
xchg
or
std
xchg
aas
enter
faddl
nop
dec
dec
adc
jnp
add
ljmp
dec
jg
mov
inc
push
or
jno
dec
inc
or
mov
pop
cmp
in
pop
and
xchg
add
xchg
fnsave
aas
out
loopne
xchg
fiadds
out
pop
pop
cltd
insb
sub
dec
adc
jns
ss
in
xchg
lods
in
xor
add
sub
aaa
cli
lds
adc
aas
dec
xorl
sbb
mov
jb
mov
jge
xor
dec
xchg
inc
jl
push
push
cmp
fwait
lods
fsubr
fldcw
cwtl
lods
xchg
je
pop
mov
in
shlb
outsl
inc
sub
xchg
sbbl
jl
lods
push
mov
xor
sbb
int
add
push
sub
push
daa
mov
jp
jle
push
aad
add
sub
sub
daa
sarl
std
jle
adc
sbb
adc
sub
inc
mov
outsl
out
jmp
mov
ljmp
popa
int
loope
xchg
dec
clc
rorl
ja
cmp
mov
repnz
jp
add
lahf
add
in
inc
mov
sbb
sahf
insl
jae
mov
push
pop
and
test
sahf
lds
push
mov
lret
js
mov
fistpl
gs
lret
jge
enter
mov
ror
push
fidivs
cmp
fstpl
and
sub
out
jne
mov
pushf
frstor
aad
cmc
in
inc
fs
mov
iret
push
enter
mov
adc
and
pop
popa
faddl
sbb
out
shll
jecxz
fisubrl
mov
push
sub
pop
push
notb
mov
fildl
xor
pop
jno
xchg
test
out
enter
jl
push
dec
fs
enter
data16
jbe
or
ja
and
add
rcll
iret
ss
outsb
ss
es
cmp
cmpsb
cmovle
adc
xchg
mov
mov
xor
xchg
lahf
xor
push
into
inc
rcrb
js
xchg
jb
or
inc
xchg
test
cld
jmp
or
sbb
call
adc
sbb
nop
jmp
or
push
rolb
mov
ret
pusha
push
xchg
lret
dec
cld
xor
or
inc
xchg
imul
in
push
or
pop
mov
mov
lods
rcr
push
mov
pusha
push
dec
js
mov
sbbb
sbb
xchg
cmpsl
mov
adc
xchg
scas
inc
add
enter
sbb
xchg
inc
xchg
incb
mov
push
pop
lock
xor
addr16
stc
dec
jge
in
push
in
pop
addr16
cltd
test
add
xlat
xchg
insl
mov
xchg
notl
mov
jnp
imul
call
addr16
jge
cmp
cmpsb
jmp
mov
dec
stc
xchg
adc
enter
cs
ljmp
dec
inc
out
mov
adc
push
mov
das
pop
jae
rol
jl
mov
inc
xor
rcrb
fs
pop
cld
int3
xchg
nop
test
xor
cmp
xchg
data16
subb
subb
dec
jb
sub
addl
dec
pop
int3
mov
xor
loop
dec
and
fs
js
xor
sub
push
inc
lret
mov
cmp
repnz
pop
shl
rol
add
fldcw
pop
xchg
mov
add
aas
and
out
testb
cmp
sub
stos
push
loope
addr16
stos
mov
cs
sub
adc
sbb
bound
lcall
scas
push
decb
dec
mov
adc
pop
lret
jne
pop
pusha
test
fisubs
repnz
cmp
or
movsb
movsl
repnz
les
aaa
xchg
mov
loopne
cli
dec
jbe
es
xchg
push
shlb
std
lahf
out
jecxz
loop
ja
cmpl
ds
adc
les
clc
mov
icebp
into
out
js
push
scas
pop
pushl
inc
mov
addr16
and
cmp
decl
push
scas
test
add
mov
enter
lcall
cld
inc
mov
jbe
imull
xchg
pop
ljmp
test
orl
iret
aaa
aaa
test
xorl
cmp
inc
in
shll
mov
push
sbb
inc
cmp
pop
dec
xlat
sbb
pushf
jp
out
les
loop
or
out
sbb
scas
popa
mov
sbbb
sub
cmp
gs
mov
or
outsb
ljmp
xor
push
repnz
rorl
movsb
je
push
jg
jo
inc
mov
pop
loopne
or
mov
insb
int3
mov
aam
movsl
addb
jne
shrb
xchg
sbb
pop
mov
sub
lahf
push
mov
sahf
mov
arpl
cmpsb
shll
in
fidivl
imul
push
cmp
jmp
shlb
sub
xchg
mov
ss
roll
mov
mov
and
inc
xchg
jnp
xor
dec
or
add
or
mov
inc
fadd
xchg
sbb
test
pushl
pushf
cmp
xor
fisubrs
aam
test
adcl
sbb
sbb
iret
xor
cmp
mov
inc
or
clc
sbb
jge
adcl
adc
int
lock
ret
mov
loope
and
sub
or
enter
and
xchg
adc
in
jmp
sti
xorb
jmp
jp
pop
shrl
ss
push
jge
int3
jno
mov
movsb
push
push
pop
add
jae
add
dec
push
call
adc
aaa
rcrb
mov
mov
rcrb
dec
sbb
mov
jmp
out
int
out
ljmp
xchg
sbb
and
jecxz
mov
adc
sub
das
enter
mov
mov
std
bound
add
imull
sub
dec
jbe
mov
test
shll
adc
cltd
jp
dec
add
and
imul
call
shll
into
xchg
loope
pop
cmpl
push
xchg
inc
sub
pop
mov
cltd
mov
jne
or
mov
pop
aad
lret
subl
roll
js
mov
jns
dec
test
sub
jge
in
push
mov
stos
jnp
rcll
push
fisttpl
inc
cmp
js
add
adc
adc
or
mov
filds
push
popa
nop
push
mov
push
adcb
fmulp
xchg
add
mov
and
push
aaa
hlt
enter
and
mov
lods
scas
jns
add
lret
lock
ja
xchg
ret
push
jle
dec
roll
clc
loop
cmpsl
shrl
ret
pop
vpshab
pop
or
es
insb
stc
push
jo
cwtl
mov
mov
fs
jbe
out
insb
xlat
arpl
mov
ficompl
insl
movsb
dec
std
jnp
or
cmp
add
jl
inc
xchg
cmove
test
test
and
mov
insl
nop
pop
sti
push
cmpsb
dec
adc
adc
cltd
xchg
add
sub
fstpt
pop
and
out
out
lret
ja
addr16
or
andb
mov
pop
inc
nop
test
lock
test
ljmp
test
daa
jo,pt
pop
shll
fcmove
inc
push
push
enter
xchg
dec
addr16
add
imul
daa
outsl
pop
sti
aad
mov
cmp
rcll
jge
inc
jge
sti
inc
push
sti
xor
ficomps
dec
stos
mov
xor
cmp
cmp
aas
mov
ret
nop
stos
add
repnz
dec
ds
mov
mov
or
test
hlt
lret
and
imul
and
mov
add
cmc
pop
pop
pop
and
sbb
aam
xor
pop
inc
test
not
imul
sahf
push
and
xor
cltd
fistpl
adcl
xor
pushf
aaa
adc
jmp
pushf
ds
loop
cmp
inc
fdivrl
cld
inc
sub
jno
pop
push
cmp
mov
iret
cs
sbb
sub
dec
repz
cmp
adc
pop
stos
lds
and
fcomps
sub
mov
adc
dec
mov
mov
bswap
add
ds
xchg
lock
jmp
and
js
push
ficompl
fiaddl
sbb
fiadds
jmp
sahf
aas
cmp
clc
scas
add
call
mov
jns
int3
inc
insl
sbb
out
sbb
mov
ss
daa
repnz
out
push
mov
int
loopne
push
dec
and
sbb
add
pop
loope
sahf
movsl
lret
je
aad
mov
rcr
push
push
imull
mov
enter
sub
sub
mov
xor
loopne
inc
push
loopne
inc
mov
int
js
inc
insb
into
and
test
push
lock
out
je
addr16
shl
cmp
jle
inc
packuswb
sti
xchg
out
xorl
mov
cs
push
leave
xchg
xchg
sarl
dec
pop
mov
lahf
je
test
rorl
ljmp
popa
ja
bound
mov
scas
jne
adc
and
outsb
add
sub
push
test
mov
mov
fidivs
adc
ja
fimuls
pop
out
ljmp
jo
lret
dec
xlat
mov
cmp
and
jmp
cld
sub
icebp
test
in
repz
es
popa
and
scas
insb
or
sub
cli
mov
sbb
adc
aas
adc
or
lret
and
fnsetpm(287
jecxz
jae
mov
out
scas
icebp
lcall
or
mov
jg
out
mov
inc
sbb
mov
fistpl
dec
push
pop
sub
mov
lret
call
andl
mov
mov
shr
mov
jns
bnd
add
test
enter
hlt
insb
push
pusha
shl
and
xchg
or
inc
divb
popf
dec
sbb
jb
jns
pcmpeqb
add
sub
mov
sub
adc
dec
imul
idivl
popa
pop
jle
sub
sub
sbb
jge
pop
imul
mov
jne
repnz
mov
hlt
movsl
hlt
mov
ljmp
pop
in
rcl
jo
sub
ljmp
in
sub
subb
add
int
inc
sbb
push
add
push
mov
pop
mov
mov
dec
shrb
sub
mov
loope
pop
add
cli
and
mov
mov
mov
push
mov
mov
jl
pop
sbb
xchg
ljmp
mov
xchg
movsb
mov
pop
aad
in
test
sbb
xchg
out
lods
mov
jnp
and
ja
imul
and
lret
sbbl
dec
sub
jae
leave
mov
in
pop
xor
and
faddl
popl
sub
sub
cmp
jns
jmp
mov
push
int
mov
or
sub
jno
int
jne
iret
scas
movsl
adc
dec
jle
sbb
test
jno
test
push
cld
push
jno
dec
add
push
xor
icebp
outsb
adc
testl
mov
mov
in
rolb
and
dec
and
mov
mov
xchg
sbb
test
dec
lahf
add
cmp
iret
mov
xor
or
push
adc
stos
jmp
test
repnz
mov
popf
sti
dec
inc
jb
mov
inc
sbb
loop
push
fwait
stos
sub
call
shll
test
xchg
sub
aaa
call
insl
add
push
push
mov
and
lock
push
pop
push
and
mov
mov
pop
mov
sbb
xlat
mov
mov
aam
inc
out
jb
icebp
xchg
push
sbb
test
add
leave
sahf
ret
mov
adc
sbb
inc
cvttps2pi
fmul
adc
xchg
xor
xorl
stos
add
cmpsb
mov
pop
pop
call
in
adc
mov
push
je
adc
xchg
mov
inc
jne
push
cmpb
std
pop
push
std
ljmp
dec
ljmp
sub
call
int3
sub
loopne
push
xchg
cmp
mov
fnstsw
xchg
push
pop
mov
xchg
mov
bound
sub
pop
mull
mov
or
clc
popa
addr16
pushf
mov
push
pop
cmp
sub
aaa
std
xor
sbb
adc
out
pop
pop
ljmp
outsb
adc
xchg
imul
pop
in
add
mov
cmp
push
sbb
sbb
xor
int
stos
cwtl
outsb
mov
call
xlat
mov
aaa
mul
mov
pop
sub
stos
xor
lods
notl
jl
jb
das
sub
test
lret
ret
lock
loop
ds
cltd
xor
jl
les
das
nop
lret
movsb
hlt
inc
fs
addr16
cwtl
fisttps
xor
data16
pop
repnz
ds
adc
movsl
or
mov
mov
call
jg
fwait
popf
jge
jae
lahf
jp
loopne
repz
sub
setnp
in
cmpsl
xor
xchg
mov
dec
rolb
dec
fsubrl
push
lods
inc
scas
and
cmpsl
push
in
push
mulb
lods
xchg
add
gs
sbb
hlt
mov
xchg
in
sbb
pop
push
lea
ret
mov
sbb
ja
inc
das
jp
aam
stos
lds
push
push
cmp
and
and
mov
mov
mov
into
imulb
add
mov
stos
pop
shrb
sbb
cmp
jbe
subl
cld
fs
aas
icebp
int3
adc
aaa
add
ret
jnp
outsl
outsb
in
aas
mov
mov
pop
outsl
inc
mov
pop
mov
xchg
gs
out
xchg
cmp
test
movsl
lods
sbbl
aaa
jp
xchg
xchg
jo
fdivl
out
push
jae
push
lahf
sbb
jns
xchg
adc
mov
add
int3
pop
xchg
and
or
inc
push
mov
cs
lcall
and
fildl
lock
fcmovu
and
mov
mov
push
xchg
xor
lods
outsb
mov
shr
xor
das
dec
and
lds
scas
lock
sarl
iret
inc
xlat
gs
loop
data16
jns
sbb
jg
jb
push
dec
repnz
rol
es
xchg
jge
pusha
add
push
test
cltd
iret
or
adcl
inc
dec
jmp
clc
out
xchg
adc
adc
dec
stos
clc
jg
test
push
jnp
mov
cwtl
call
sbb
dec
jns
ret
movsb
xor
jb
xchg
lock
or
xor
mov
or
shlb
pop
inc
inc
in
cmpsl
ljmp
dec
jl
ljmp
inc
pop
sub
es
jbe
xor
push
es
lcallw
incl
rorl
adc
xchg
jle
jns
subl
mov
and
sbb
push
shlb
sub
cmp
fildll
add
shr
sub
sbb
sbb
mov
lahf
or
fstps
shrl
cmc
jecxz
ficompl
lcall
dec
jmp
mov
jge
incb
mov
sbb
add
cmpsl
add
xor
push
pop
movsl
sarb
cmp
mov
jmp
ss
sub
mov
push
loope
sbb
in
into
and
mov
ds
loopne
clc
push
dec
je
mov
cltd
sub
xor
rorb
out
loop
mov
push
push
movsb
pop
and
xor
mov
nop
pop
pop
push
dec
xor
insl
sub
mov
lods
inc
inc
cmp
and
pushl
sarl
jne
xor
outsl
inc
addr16
cmpsb
or
xor
inc
lock
dec
mov
mull
cmp
movsl
pop
lret
mov
sbb
push
dec
loopne
les
pop
push
xor
or
arpl
xor
push
sbb
les
mov
das
xchg
mull
xchg
hlt
lcall
ja
push
fbstp
test
xchg
pop
fld
movb
cltd
lea
jo
fnsave
outsb
test
cmc
jo
add
jnp
jp
xor
repnz
loopne
ds
or
push
mov
lds
or
xor
cmc
add
pusha
inc
push
rorb
pop
dec
xchg
xlat
sbb
arpl
mov
push
cmp
inc
lods
stos
ja
inc
xlat
inc
mov
mov
ret
shll
loope
push
push
sub
sbb
or
xor
xchg
or
outsl
pop
push
pop
xchg
or
rolb
lret
cwtl
sbb
add
jle
mov
mov
mov
pop
jno
popa
out
out
mov
ffreep
ss
lock
and
mov
mov
js
inc
outsl
dec
add
fsts
fcoms
inc
inc
aaa
lahf
push
cmp
adc
add
aam
sub
aam
adc
into
mov
test
mov
outsb
imul
cli
lods
mov
dec
cs
int3
and
sbb
xor
xchg
pusha
cld
pop
xlat
sbb
pop
cmp
addr16
mov
das
mov
fdivrl
cmc
cmp
mov
push
aas
test
and
fsubl
add
and
sarl
sbb
daa
adcl
cltd
in
lds
add
test
movsb
inc
push
adc
inc
jle
or
idivb
stos
sbb
and
movl
jne
addr16
or
ret
push
sti
push
mov
sub
popf
movsl
sbb
test
stos
push
jne
jbe
sub
jbe
jb
aaa
add
dec
push
inc
cmc
repnz
add
cmp
mov
decl
xchg
xor
mov
pop
add
xchg
imul
cmpsb
enter
int
sub
mov
cmp
adc
mov
jmp
pop
inc
je
sub
jns
addr16
mov
cmp
xlat
sbb
lock
cmpsb
out
lahf
out
ficoms
dec
sbb
push
jns
inc
sub
push
fistps
xchg
mov
push
aas
push
sar
xchg
fcompl
cli
cmc
pop
push
xchg
dec
aaa
aaa
jb
loope
mov
push
and
sub
ficoml
pop
mov
push
insb
pop
js
in
cmp
ja
dec
clc
adc
sahf
addl
hlt
das
icebp
faddl
push
mov
or
sahf
jle
and
dec
stos
jmp
mov
mov
xor
and
pop
nop
loop
xchg
mov
mov
mov
dec
sbb
das
hlt
jae
daa
int3
lcall
adc
cmp
xlat
dec
push
or
jb
mov
or
inc
stos
scas
sub
shlb
push
xchg
insl
mov
cmp
decl
pop
lret
movsb
ret
jno
mov
in
stos
das
test
sbb
mov
popa
and
lds
xchg
mov
into
push
lret
jno,pn
outsl
arpl
jnp
call
sub
cwtl
inc
jmp
cmp
out
mov
xchg
mov
mov
mov
frstor
xor
orb
scas
jae
je
sub
mov
add
fsubr
jmp
icebp
aad
pop
jp
sarb
jmp
fstpl
inc
aaa
mov
movsl
mov
popw
jns
mov
sub
inc
ljmp
data16
cmp
data16
mov
inc
sub
adc
adc
adc
test
leave
movsb
sbb
or
add
push
outsl
fcmove
in
mov
xor
jmp
add
dec
mov
rclb
add
ret
add
pop
pop
and
test
outsb
sete
popf
imul
mov
pop
xor
icebp
dec
outsl
int3
push
jb
lea
fdivrl
in
mov
sbb
ja
dec
scas
xor
aaa
out
lock
ret
sub
movsl
jp
sahf
pop
outsl
jnp
in
xlat
lcall
xchg
push
push
insb
lea
mov
adc
scas
mov
cmp
nop
insl
fistpl
fwait
sti
pop
repnz
cmp
cltd
mov
stc
or
ret
push
andb
add
test
mov
and
and
xchg
incb
out
sbb
cld
inc
mov
sbb
test
push
push
add
in
mov
std
or
jg
mov
xor
jno
add
rorb
data16
aam
daa
pop
push
cmp
nop
cmc
jp
stos
or
sub
jp
out
adc
test
aam
push
sbbl
je
outsb
inc
out
ret
or
imull
popf
mov
sub
xor
leave
imul
cltd
leave
dec
or
stos
xchg
idivl
pop
cmpsl
dec
sbb
mov
mov
add
imul
inc
mov
std
imul
fcos
mov
xor
or
jno
repz
pop
sbb
add
xchg
mov
push
mov
sbb
inc
mov
lret
fstpt
xchg
in
addr16
xchg
mov
movsb
fs
inc
xchg
insb
rorl
push
shl
adc
mov
sbb
cli
add
outsb
daa
adc
int
mov
aad
cmc
clc
cld
dec
inc
pop
cmp
cmp
in
and
fistl
inc
cmp
es
fwait
jge
sbb
lods
testb
mov
or
push
das
push
jne
pop
cmpsl
cld
arpl
or
pop
or
or
out
push
nop
and
stos
test
sbb
cmp
add
and
cs
loop
leave
mov
cmp
jne
or
mov
or
lret
jo
xchg
xor
add
popf
or
repnz
outsb
movsl
ss
jno
jmp
jo
push
push
xchg
cmpsb
ds
decl
lea
call
stos
pop
enter
lret
and
sbb
xlat
pop
sub
xor
or
inc
je
xlat
aad
int
sub
mov
stc
jecxz
ljmp
pusha
inc
xor
shlb
out
sbb
xchg
outsb
je
xchg
inc
out
daa
aam
and
adc
jbe
mov
push
ljmp
jbe
and
xchg
jns
test
lods
jecxz
imul
push
loope
jg
inc
loop
int3
sbb
sti
fmuls
mov
xchg
jmp
call
xlat
mov
cmp
adc
and
sub
mov
sub
mov
xorb
xchg
incb
ljmp
nop
std
lret
mov
mov
faddl
inc
adc
bound
imul
dec
movsl
lahf
inc
xor
jne
ret
jmp
popf
xor
fidivrs
pop
ljmp
mov
test
popl
cmpsb
jle
das
mov
insl
inc
adc
pop
lock
fsubp
jno
and
jnp
mov
jne
push
js
push
ja
adc
std
add
pop
jns
and
rcr
iret
js
push
jb
imul
mov
add
dec
inc
rcrb
call
sahf
std
cmp
icebp
imul
dec
push
sbb
pop
adc
fcoml
mov
push
or
int3
sub
stc
icebp
shll
xor
jg
ljmp
pushf
dec
mov
and
and
je
subb
xor
adc
std
xor
push
cmp
xchg
into
push
sti
adc
mov
leave
aam
adc
nop
and
pop
mov
pop
push
out
cmp
test
cmp
fsubs
rcrb
push
cli
mov
jae
sub
loopne
loopne
push
loope
xchg
inc
xor
xor
loopne
inc
int3
andb
aaa
mov
pop
sahf
pop
mov
pop
adc
movb
jmp
call
jne
shr
cmpsl
shlb
iret
add
pop
sbb
xchg
mov
cmp
jns
test
lret
dec
pop
xchg
fiaddl
ret
sbb
daa
push
jp
pop
fildll
xchg
pop
imul
dec
add
mov
addr16
out
notb
in
arpl
pushf
jns
in
mov
xchg
jno
clc
xchg
aad
mov
jl
mov
subl
aaa
adcw
and
lcall
pop
out
ljmp
andb
pop
fnstcw
imul
fists
cmove
push
or
and
scas
mov
mov
scas
pop
lods
xchg
aas
push
ret
mov
aam
adc
sarb
lods
enter
decb
jmp
testl
jns
jbe
dec
pushf
inc
lahf
add
fcmovbe
inc
jmp
and
lock
mov
sbb
mov
lock
scas
xchg
pop
xor
dec
mov
xchg
inc
push
or
mov
aad
les
xor
movsb
sbb
xor
data16
jg
cmp
jno
loope
mov
hlt
dec
fistps
and
or
test
sub
cmpsb
test
aad
jbe
xchg
and
outsl
mov
insb
pop
cld
imul
clc
mov
orl
movl
inc
mov
inc
lret
push
mov
jp
xchg
push
mov
mov
lock
outsb
adc
cld
sbb
ret
nop
pop
mov
push
xor
push
popa
mov
fs
cs
cmp
jmp
mov
sbb
mov
jge
mov
in
mov
movb
fwait
aam
push
gs
and
fwait
push
cmpsl
or
mov
xor
mov
movsl
mov
add
jae
cltd
cmp
inc
xchg
test
test
aaa
xorb
cmc
jp
nop
sbb
jne
imul
scas
or
loopne
sub
dec
bound
xchg
cmpb
daa
dec
pop
orb
icebp
jns
push
mov
xchg
rclb
push
inc
aaa
test
iret
jns
stos
cmp
in
adc
xlat
jle
ljmp
int
add
mov
das
mov
mov
xor
or
fmuls
repnz
xor
inc
sbb
addr16
mull
aaa
mov
pop
xchg
dec
lret
mov
aam
icebp
push
imul
dec
lock
cmp
inc
aam
xor
popa
xor
mov
push
mov
xchg
jne
cmp
loope
sub
in
xchg
adc
dec
pop
push
rcrl
daa
push
push
push
cmpsb
pop
and
mov
push
push
mov
lds
mov
nop
lret
stos
iret
popa
jo
add
rorl
cld
movsb
pushf
jmp
adc
outsb
or
push
sub
mov
and
pop
mov
out
jmp
pop
or
js
lcall
test
popf
cmpsb
dec
js
scas
stos
cltd
pop
adc
into
inc
jge
cmp
popf
dec
fsubr
pop
xor
aas
adc
cmpsb
popf
push
cmp
add
test
mov
mov
fldcw
inc
int
jp
inc
int3
mov
sbb
jg
arpl
pusha
enter
test
cwtl
cwtl
add
aam
sbb
xor
shrb
leave
cmp
sbb
ret
dec
pop
leave
cmp
repnz
scas
cs
testb
lret
inc
sub
mov
xchg
sahf
iret
jle
fwait
cmp
xchg
fdivrs
sub
add
pop
test
pushf
jne
or
push
jne
dec
add
or
ss
lea
fs
and
push
push
fmull
shlb
insl
dec
add
sub
mov
jo
and
fcmovne
aad
cmp
das
push
nop
into
jmp
movsl
sub
pop
sbb
and
or
repnz
lret
xchg
adc
rclb
inc
out
xchg
sbb
nop
push
arpl
shl
aad
adc
jb
mov
sbb
lds
dec
xor
roll
stos
hlt
mov
test
sbb
xchg
shrl
cmp
inc
daa
mov
addr16
ljmp
out
and
fsubl
je
pop
loope
mov
adc
loop
adc
push
outsb
int
fs
push
add
pop
shll
das
push
adc
adc
call
ljmp
call
sbb
orb
xor
ds
std
xlat
jnp
or
clc
loop
adc
orb
rcl
ret
pop
adc
mov
mov
fnsave
add
cmp
or
or
addb
addps
push
hlt
push
xchg
xchg
push
mov
dec
jl
mov
fidivs
pop
inc
or
in
addr16
jle
test
sub
loop
rcll
icebp
xor
sbb
pop
pop
add
xor
test
enter
mov
xchg
stos
or
sahf
lret
sub
or
pop
jbe
fisttps
jbe
pop
xor
je
mul
xchg
lret
andl
dec
insl
push
shr
mov
jne
mov
mov
cli
filds
in
js
inc
rcrl
sbb
popa
cmp
iret
pop
mov
mov
jl
jns
lds
shr
mov
jo
xchg
dec
cmp
mov
mov
outsl
fs
movsl
imul
inc
mov
loop
lcall
stos
mov
sub
or
cs
push
stos
insb
repz
lea
jmp
hlt
test
jne
lods
and
add
popa
loop
adc
and
mov
hlt
inc
xor
popa
cltd
je
cmp
shr
loope
lock
pop
push
jmp
add
jae
enter
aas
jae
out
ja
inc
cmp
in
je
mov
lock
arpl
jge
stos
push
scas
in
dec
insl
dec
sub
xor
xchg
lret
xchg
sbb
mov
subb
pop
mov
lcall
sub
cmp
in
rolb
insl
shlb
and
lahf
je
ljmp
imul
sbb
lea
inc
add
push
loopne
test
in
push
ret
fndisi(8087
add
loop
in
fcomip
cmp
outsl
test
shl
inc
push
cwtl
sub
push
filds
or
imul
fmull
loopne
aas
xchg
test
mov
aaa
mov
adc
test
lret
sbb
sbb
jns
and
jmp
pop
xorb
sub
popa
pop
sub
xlat
je
icebp
cmp
inc
or
scas
mov
lods
adc
pop
ljmp
add
add
jae
scas
loopne,pn
rclb
xchg
les
sub
fcmovnu
xchg
xchg
jg
push
iret
dec
jae
or
cltd
movsl
fstps
dec
rorb
inc
or
or
adc
cmc
or
call
or
jne
jnp
jo
cmpsb
pop
ror
mov
mov
pop
mov
negb
mov
and
cmc
pop
pusha
ss
lods
xor
push
psrlw
mov
scas
aam
or
mov
xchg
cmc
cmp
xchg
mov
loope
fwait
jmp
mov
in
push
pop
in
xor
sub
jo
pop
push
jg
xchg
mov
dec
ret
nop
movsb
add
adc
mov
test
jnp
xor
and
mov
mov
gs
test
xchg
xchg
add
lds
jg
pop
cltd
lock
xchg
add
es
cld
or
in
test
pop
lods
push
inc
out
sbb
insb
in
sub
inc
cmp
dec
fstps
xchg
repnz
adc
jle
loop
in
xchg
mov
pop
std
and
test
push
lahf
rorb
mov
decb
stos
scas
pop
sti
imul
leave
push
shl
jno
xchg
adc
leave
outsb
lret
xor
mov
and
jecxz
scas
sub
imull
fld
add
lahf
inc
sar
loope,pt
mov
test
testl
xchg
push
cmpsb
rcr
shlb
inc
enter
xchg
out
and
into
sub
mov
cwtl
aaa
in
adc
orl
mov
mov
lea
mov
fldenv
mov
mov
mov
jne
and
andb
mov
sahf
mov
shlb
scas
adc
movl
pop
lods
cmp
sbb
mov
mov
rcrb
fxch
stos
pop
clc
cmp
and
out
adc
mov
cmpsb
xchg
in
jne
cmp
shll
fdivs
fldl
xor
add
dec
out
pop
in
lret
add
inc
in
xchg
ret
mov
lea
xor
shrb
jl
cmpsl
insb
sub
mov
mov
jecxz
sti
inc
lods
lss
jp
xlat
sub
in
aad
mov
sub
int3
mov
inc
dec
shlb
push
push
pushl
lods
sbbb
cmpsl
mov
cwtl
jle
aas
mov
fadd
pop
nop
mov
insb
mov
fistl
sub
out
mov
adc
jnp
outsb
adcb
or
sub
jae
push
sbb
add
pushf
cmpsl
push
jno
test
stc
or
jns
imul
es
outsl
adc
jns
js
jp
addl
cmc
mov
incb
aaa
fcomps
ds
and
in
dec
test
shll
push
sub
addr16
ficoml
fistps
in
jne
cs
adc
mov
mov
outsl
aad
xchg
jne
inc
inc
push
test
pop
inc
xor
cmp
sub
sub
inc
and
push
enter
mov
scas
imul
shll
inc
jecxz
aam
test
cmp
inc
ret
sbb
aam
shr
jae
fscale
adc
out
xchg
ret
pop
sbb
fnstcw
push
sbb
sbb
add
shll
imul
jecxz
rcll
aam
push
jne
mov
dec
xchg
sub
sbb
out
int
cmp
lcall
xchg
into
xor
dec
and
addb
pop
mov
kandw
adc
cmp
mov
daa
aaa
add
cli
pushf
nop
xor
cwtl
cltd
mov
loop
pop
mov
mov
repnz
fpatan
adc
push
jb
dec
inc
and
jle
aad
dec
repnz
push
push
fcoml
mov
push
lret
shrl
in
mov
add
sub
inc
and
stos
cmp
cli
pop
lods
in
cmp
ljmp
inc
fidivs
sbb
test
dec
mov
jbe
movsl
inc
aam
lods
cmp
sarb
cmp
push
fmull
outsl
jle
fnstenv
or
and
dec
shld
in
mov
pop
dec
bnd
adc
cld
jnp
nop
int3
xor
mov
test
imul
icebp
std
lock
hlt
notb
sub
push
popa
jle
lcall
dec
je
fisubrs
push
lret
adc
inc
hlt
push
add
cli
je
cld
rcrb
or
negb
cwtl
negb
jo
sbb
push
adc
insl
pop
sahf
nop
and
adc
mov
xchg
sub
mov
add
jp
addr16
mov
aad
enter
xorl
sbb
or
mov
mov
add
jecxz
xlat
aaa
jle
xor
rcrl
mov
xchg
cmc
call
xor
add
divb
xlat
rcll
pop
xchg
mov
xchg
push
adc
cwtl
xchg
stc
pop
pop
test
shll
jg
dec
mov
cltd
test
fbld
xchg
fs
mov
xchg
dec
ds
lret
sbb
ja
or
daa
sub
or
es
sub
adc
push
push
mov
mov
andb
test
movsl
push
insb
inc
dec
test
xor
hlt
adc
pop
call
sub
aam
imul
or
mov
pop
lea
daa
mov
bound
mov
jne
xchg
sarl
dec
push
ss
out
sarl
out
mov
into
gs
lds
mov
cmc
or
jmp
icebp
and
mov
outsb
lds
jb
pop
sub
sbb
jl
mov
xchg
out
nop
je
xlat
lret
fimuls
push
and
sub
inc
adc
out
jecxz
jnp
outsl
shll
push
fs
cmp
mov
and
addb
lock
add
jb
mull
jle
push
cld
push
ficoml
jne
dec
mov
adc
rcl
ud0
cmpsb
or
jl
pop
dec
inc
inc
fs
aaa
jmp
data16
lret
icebp
and
cld
in
or
mov
xchg
fistps
fstps
ds
pop
add
cli
sbb
adcl
cli
das
ret
out
inc
stc
push
je
mulb
lret
cmp
mov
cmpsl
clc
inc
je
ljmp
mov
fnstsw
adc
test
pop
mov
cltd
ror
out
push
fnstsw
xchg
lret
test
popa
xchg
je
hlt
pop
ss
std
mov
fidivs
push
stos
test
xchg
mov
int
mov
jns
push
aam
ret
or
loop
daa
xchg
sub
fsubs
mov
ret
or
notb
xor
out
sub
fcoms
jp
xchg
xchg
pop
sbb
adc
pop
sub
int3
jmp
add
mov
mov
rcr
icebp
mov
fsubrs
cmp
lods
stos
lret
mov
mov
notb
movsb
adc
scas
xchg
push
in
sub
pusha
mov
insl
iret
ficomps
pop
and
jle
lods
shl
mov
xchg
das
out
int
mov
mov
xchg
jg
dec
imul
xor
and
in
call
sbb
out
test
dec
push
jge
and
hlt
jg
mov
pop
jmp
fwait
pusha
cmp
xchg
cmp
mov
mov
es
sbb
sub
inc
je
cmp
in
mov
jecxz
sub
xor
add
sbb
mov
clc
arpl
clc
mov
mov
cmp
dec
jo,pn
xchg
dec
cmp
sahf
imul
push
sub
pusha
mov
mov
cld
test
mov
add
das
int3
pop
cmp
inc
push
push
fldcw
hlt
xchg
nop
xor
enter
add
fdiv
dec
cli
imul
dec
xchg
xchg
push
add
hlt
adc
and
dec
sbb
mov
ljmp
enter
movsb
jo
das
dec
dec
fisttps
xchg
dec
mov
lea
xchg
adc
loope
in
mov
clc
je
mov
leave
fsubs
fs
cmc
into
pop
aaa
push
fwait
add
jbe
mov
sbb
ljmp
sub
pop
mov
jmp
jo
out
sub
and
mov
mov
dec
loope
adc
jns,pn
int3
mov
cmp
mov
orb
mov
xor
mov
ljmp
popf
xor
outsl
adcb
sbbl
pop
jmp
sbb
jl
xchg
mov
repnz
inc
pusha
sub
das
push
jg
clc
mov
ljmp
jecxz
lods
test
add
push
pushf
sbb
cltd
pop
stos
push
sar
xor
pop
stos
dec
sub
addb
rorb
out
sub
fwait
negl
or
aam
shll
cld
subb
sbb
das
adc
dec
insl
dec
or
dec
pop
mov
add
mov
stos
punpckhbw
adc
outsb
jnp
xlat
sub
jge
sub
mov
and
lock
or
mov
pusha
fmul
insl
mov
jg
cmp
test
xlat
clc
sti
mov
and
out
lock
fidivs
pop
popa
xor
sub
ficomps
stc
call
mov
or
aam
push
das
xor
sub
sbb
pop
cmpl
cmpsb
push
xor
xchg
adc
sbb
icebp
xchg
aas
shrb
ds
in
add
ret
inc
xor
lret
inc
dec
and
ret
scas
out
in
jecxz
sbb
cmp
jmp
fistpl
scas
jbe
fistl
xor
or
jb
adc
lds
mov
pop
dec
jge
lods
ss
stc
add
ret
and
xor
sbb
loopne
sahf
xchg
sahf
sub
out
sub
in
inc
push
rcll
and
cmp
mov
push
push
aas
xor
mov
add
sbb
push
inc
adc
adc
mov
aad
jge
dec
mov
in
xchg
movsl
or
ja
adc
add
push
or
in
xor
and
cmp
sub
jl
cmpl
cmp
lds
jle
loopne
cmpsl
stos
imul
add
test
mov
jo
lcall
push
adc
pop
or
add
fdivs
inc
push
sub
out
in
mov
cli
lods
pushf
icebp
and
pop
ja
push
cmpsb
push
aam
stc
out
adc
mov
adc
cwtl
out
sarb
mov
adc
aam
cltd
cmp
aas
mov
jae
bound
and
dec
outsl
add
xchg
iret
push
dec
aaa
popa
fadds
test
xchg
add
add
sub
or
mov
call
mov
jo
mov
int3
sbb
cs
fisubl
in
mov
je
dec
popa
push
mov
push
faddl
shr
cmpl
mov
cmp
add
mov
cmp
mov
pop
xor
pop
imul
xchg
inc
roll
leave
fimuls
or
cmp
cmpsb
cmc
je
lods
or
mov
test
das
and
lds
mov
stos
dec
fisubrl
dec
jmp
mov
les
xor
mov
pop
mov
mov
add
out
movsb
sahf
fwait
pushf
and
or
sub
leave
sub
cmp
jbe
mov
sub
push
outsb
sbb
mov
mov
jmp
and
or
mov
icebp
cmp
js
lea
andb
fmul
fwait
js
push
cmp
inc
cmp
ss
push
pop
mov
movsl
inc
xor
lock
fwait
jp
mov
cmp
je
push
add
xchg
sbb
popl
mov
sub
cltd
fdivrs
insl
mov
rorl
fcompl
shlb
nop
and
adc
push
icebp
das
inc
dec
lahf
movsl
aas
ss
xchg
mov
rorb
or
fsubs
into
outsl
shrl
lock
and
sbb
mov
jb
js
xchg
imul
xchg
jne
insb
shl
test
out
mov
aaa
cs
daa
pop
inc
lret
mov
and
lret
inc
sbbl
push
int3
push
mov
dec
repz
cltd
pusha
xor
mov
xchg
loopne
out
pop
imul
cmp
pusha
pop
scas
stc
push
fdivrs
or
cli
fucomip
mov
cmp
mov
or
push
movsl
xchg
sub
push
jge
movsb
add
clc
push
cs
mov
pop
loope
sbbb
add
xchg
loope
mov
lods
mov
xor
shrb
std
fiadds
sbb
mov
or
test
ds
cltd
mov
das
out
ret
sbb
cmpsl
cmp
and
sbb
je
adc
sub
loope
pop
pop
pop
sub
in
negl
push
js
rcll
aam
sub
int3
test
or
and
xchg
inc
dec
scas
pop
push
inc
ljmp
mov
popa
xchg
xor
test
jo
test
imul
pop
pop
push
std
xchg
imul
xchg
or
pop
sar
jnp
js
add
push
scas
es
pop
insl
aaa
lds
in
dec
mov
cwtl
loop
jno
cwtl
xor
rorb
adc
sub
insb
scas
dec
std
aam
in
lret
xchg
frstor
and
cli
cmp
cmp
dec
decl
pushf
std
outsl
stos
outsl
jg
test
cmpsb
xchg
js
arpl
mov
adc
cltd
shll
insl
and
gs
sti
inc
out
pop
movsl
mov
pop
lods
jmp
push
popf
or
fidivl
push
pop
into
inc
adc
jo
cltd
jbe
adc
inc
adc
add
mov
push
in
push
xchg
pop
in
mov
rorb
addr16
pop
pushf
nop
inc
pop
jb
pop
mov
sarl
xchg
imul
pop
ror
imul
orb
pop
or
push
mov
add
dec
fsubrs
loopne
jge
sub
or
adc
mov
test
mov
int3
xchg
mov
mov
and
and
bound
ljmp
aas
addl
xorb
jo
mov
push
jmp
jae
ljmp
jb
and
lea
lods
sbb
mov
lcall
push
jle
xlat
jo
data16
sbb
or
iret
pusha
sub
or
push
imul
lret
fildll
and
popf
loopne
add
dec
aam
test
lret
mov
inc
ds
mov
test
mov
imul
push
mov
hlt
out
pop
out
lods
adc
dec
paddw
mov
jecxz
lds
aas
and
adc
mov
lock
imul
pop
push
push
jle
mov
cmp
mov
in
imul
adc
add
lret
ret
pop
in
icebp
cmp
xor
fisttpll
fistpl
imul
sub
and
loopne
jns
mov
xor
inc
add
stc
cmc
sub
push
insl
fidivrs
mov
inc
sub
arpl
outsl
add
fstl
addb
repnz
add
dec
dec
adc
scas
fwait
addb
jl
or
xchg
outsl
andb
mov
notl
jb
and
jne
mov
cmpsl
adc
daa
cmp
mov
lcall
push
xor
cmpsb
data16
or
sar
jbe
pmuludq
pop
decl
shl
push
pop
inc
xor
lcall
mov
addb
cltd
stc
leave
xchg
jmp
int
jecxz
xor
out
addl
mov
push
scas
pop
data16
ret
daa
data16
sub
add
mov
loope
and
adc
arpl
cmpsl
adc
addb
pop
and
sti
repnz
je
pop
js
or
xor
outsl
sub
push
mov
int3
or
push
rolb
pop
mov
fsubs
jg
and
lods
call
repz
movsbl
or
test
imul
push
hlt
imul
sbb
adc
test
pop
inc
add
imul
jo
bound
inc
jne
or
sub
gs
inc
cld
mov
cmp
push
sti
jno
mov
rol
push
out
jno
add
and
push
sub
xlat
jae
mov
xor
xchg
pop
xlat
xor
mov
push
push
pop
push
ljmp
popa
mov
out
mov
cmp
mov
cmp
mov
test
jl
sbb
das
and
sub
xchg
loope
out
inc
daa
enter
out
cmp
xchg
daa
in
sub
aad
loopne
call
mov
insb
int3
sub
cmpsl
jno
or
clc
sarb
rorl
fldt
lret
subb
sbb
or
repnz
add
vdivps
je
shll
sbb
int3
xor
ss
xchg
sbb
sub
and
and
cmp
ret
sbb
sti
sti
jp
mov
ret
rcll
jmp
in
push
xchg
int
push
lds
fldcw
xchg
enter
cmp
hlt
fsts
inc
mov
loope
mov
push
lea
xchg
les
sub
cmp
jns
push
lret
aaa
movsl
mov
ljmp
movsb
add
shrl
andb
jl
mov
pop
mov
les
lods
cli
cwtl
sti
xor
fwait
dec
push
mov
or
dec
adc
fimull
je
pop
inc
in
cli
push
inc
call
pusha
fdivp
lods
sbb
cmpsb
shll
mov
xor
cmp
sbb
lock
mov
test
cwtl
cs
into
or
cmp
int
pop
jnp
or
jnp
fnstcw
xchg
mov
pop
mov
sarb
sti
mov
adcl
lock
xchg
loopne
popa
mov
add
pusha
rcrb
sub
mov
push
in
into
push
dec
mov
out
repnz
icebp
ret
jl
mov
add
cmp
in
imul
das
roll
mov
jno
adc
add
int3
jecxz
inc
das
inc
fisubs
and
push
lret
push
adcl
scas
push
cwtl
mov
sub
sub
sub
push
cmp
xlat
jns
mov
mov
movl
xchg
in
sbb
dec
jp
jp
dec
cmp
sbbl
imul
mul
mov
imul
gs
inc
movsl
negb
jmp
mov
loope
nop
mov
rclb
push
push
adc
imul
stos
mov
icebp
jmp
mov
leave
mov
mov
push
movsb
sarl
clc
sub
dec
pop
test
jmp
xchg
pop
pop
jae
push
outsb
shlb
jg
mov
mov
into
pop
cltd
pop
fisubrl
inc
or
jmp
cltd
mov
jge
ja
sub
int3
mov
jmp
mov
sbb
sahf
shrl
cwtl
and
shlb
jmp
insb
inc
ficoml
das
xor
adc
cmpsb
imul
xchg
sbb
push
push
mov
xor
inc
dec
inc
inc
lods
xor
sarl
and
in
mov
dec
mov
cmp
cmpb
xlat
ljmp
push
pop
scas
shll
in
mov
cmp
lock
lock
bound
insl
xchg
leave
lock
adc
mov
data16
cmp
pusha
sub
xchg
jno
fs
stos
push
add
lahf
mov
lods
scas
popf
cmc
inc
shrl
xchg
push
add
popl
sub
push
inc
xchg
adc
outsl
adc
popa
sub
dec
insl
stc
fidivs
incl
ljmp
mov
icebp
xchg
push
mov
test
jg
add
add
add
xor
pop
std
xor
out
inc
inc
shl
inc
xchg
in
push
sbb
pop
lea
lahf
xor
mov
jnp
insb
das
aad
std
sub
sbb
lea
add
push
cli
jmp
sbb
jno
mov
loope
clc
fs
repz
pop
js
out
test
bound
mov
xchg
fucom
es
ss
sbb
mov
mov
clc
xor
adc
test
es
ficoms
cld
inc
ret
or
mov
and
outsl
cwtl
mov
push
dec
pop
out
fildll
xchg
sbb
test
fidivrl
rorb
cmp
leave
add
sub
adc
sti
pushf
jae
xchg
pop
or
aam
xchg
insl
rorb
pushf
mov
addr16
inc
loope
fnsave
push
cmp
sbb
fadds
fsubr
mov
cmp
mov
hlt
scas
mov
sub
mov
arpl
dec
jg
mov
push
xchg
ja
and
test
mov
pop
push
xchg
mov
mov
sbb
fwait
xlat
rorl
lds
jge
pop
add
fwait
pop
jmp
add
sarl
cwtl
push
push
jge
pop
nop
push
sbb
xchg
mov
pcmpeqd
cld
frstor
stos
fs
adcl
push
orb
fdivr
xchg
ds
push
movsl
ret
imul
stos
es
out
mov
jne
lock
mov
sarb
mov
pop
mov
push
xchg
add
mov
sbb
mov
add
xlat
mov
cmpsl
shll
lds
call
push
into
jb
pop
push
jnp
mov
mov
repz
pop
loope
aam
xchg
stos
xor
aaa
orb
int3
mov
test
mov
pop
sbb
add
xchg
dec
dec
arpl
mov
jmp
outsb
dec
test
jmp
push
sar
rolb
test
in
les
mov
jae
mov
mov
inc
cmp
pop
jge
dec
xchg
inc
sub
jne
push
clc
aaa
movsl
jns
in
mov
fwait
inc
mov
jo
jnp
mov
jae
dec
adcl
test
lahf
fbld
mov
mov
mov
cmpsl
push
pop
fidivrl
mov
cmp
shlb
pop
xchg
mov
ljmp
push
ljmp
outsb
xor
or
xchg
popa
jp
lret
mov
mov
cmp
test
push
xor
mov
imul
sub
test
repz
xchg
sbb
sbbb
pusha
xchg
xchg
mov
mov
fstps
jns
lahf
imul
pop
push
push
mov
cmpb
sbb
int3
imul
arpl
sbb
test
les
jb
push
les
adc
test
dec
push
add
aas
loope
ss
les
ss
loope
mov
sarb
sbb
push
loop
mov
aaa
xchg
frstor
addr16
mov
jb
add
pop
sbb
rcll
push
scas
mov
pop
push
mov
lock
iret
sbb
mov
add
mov
movl
jp
test
jb
or
sub
daa
aas
test
adc
aas
push
scas
pop
rcll
and
outsb
insb
sbb
stos
ret
jge
push
or
movzwl
js
mov
in
and
inc
xchg
insb
push
mov
push
lcall
dec
mov
xchg
lods
and
test
popa
adc
and
add
out
je
aad
stc
cld
sahf
fdivs
push
pop
scas
pop
sbb
repnz
cmpsb
ds
loope
in
mov
fs
adc
xor
rcl
test
popa
iret
mov
mov
inc
pop
pusha
push
pop
push
imul
cmp
incb
jle
aad
xchg
mov
jmp
sub
fidivs
pop
shl
cmp
arpl
daa
push
inc
pop
xchg
icebp
xchg
mov
leave
imul
mov
inc
ss
sti
push
lahf
leave
mov
adc
push
mov
sahf
iret
dec
int
sub
and
ljmp
call
adc
jnp
sub
adcl
pusha
and
ret
int3
pop
popa
std
faddl
imul
pop
xchg
mov
jno
fidivl
imul
push
pop
addb
repz
pop
adc
cmp
je
out
jle
sub
xchg
jnp
pop
rcl
mov
adc
cltd
pusha
insb
push
jb
mov
jae
mov
dec
dec
repz
pop
mov
popa
lods
mov
lea
jmp
adc
sub
or
es
js
cmp
mov
mov
sbbl
sbb
mov
jo
mov
sahf
mov
push
flds
aas
int
mov
ficoms
leave
ret
scas
or
sbb
push
mov
lods
mov
pop
test
out
and
xchg
sbb
jmp
rcll
int3
cmp
mov
test
inc
stos
stc
nop
enter
mov
jg
cli
cld
pop
stc
lock
mov
mov
cmp
call
out
xchg
pop
icebp
movsl
lock
loop
sbb
ljmp
push
sub
jo
fwait
scas
push
lock
mov
lret
pop
mov
shrl
jge
loop
fisubs
jns
icebp
mov
or
cwtl
popf
mov
subb
xor
inc
std
mov
pop
pop
mov
scas
xchg
mov
in
jnp
call
adc
pop
loope
jmp
pop
rcll
mov
fwait
or
push
inc
in
jno
lods
push
mov
stos
in
repnz
sbb
js
dec
jmp
popl
decb
sub
jne
ret
ss
xchg
sub
subb
mov
jl
xchg
add
xor
jecxz
and
into
fldcw
xchg
cmp
inc
inc
sbb
add
push
outsb
cmc
sbb
push
pop
adc
adc
mov
enter
stc
rolb
pop
cmpsb
adc
rclb
pop
js
sbb
mov
or
jg
andb
call
jo
adc
jne
cwtl
dec
sbb
sbb
push
decl
int
notl
push
jb
mov
jg
push
sub
and
adcl
in
lret
or
mov
popa
repnz
xchg
mov
icebp
icebp
inc
adc
mov
and
repz
cltd
test
push
or
popa
xchg
out
test
fs
xchg
jnp
adc
insl
inc
jecxz
dec
scas
dec
imul
xor
pop
adc
mov
mov
dec
or
lret
xchg
jle
popf
dec
pushf
into
fimull
divl
out
adc
nop
les
shr
ds
xor
xor
hlt
jp
in
and
mov
in
mov
jl
xlat
cli
jbe
int3
or
sub
std
pop
sbb
mov
and
xchg
mov
push
inc
push
repnz
xchg
xlat
jg
fwait
leave
sub
pop
lock
out
inc
pop
pop
inc
jb
add
pop
inc
push
ja
daa
inc
jl
mov
lock
lcall
popa
leave
lahf
arpl
or
clc
pop
jl
or
rorl
shll
sbb
loopne
dec
iret
repnz
dec
cltd
pop
mov
pop
sub
sub
fdivl
fadds
mov
ficomps
or
jns
inc
repnz
or
dec
and
rorb
sub
daa
repz
sarb
mov
test
mov
nop
stos
lret
ja
push
lahf
sub
push
push
adc
loope
sti
iret
inc
push
aas
add
cmp
add
mov
dec
mov
adc
daa
rcrl
and
dec
movsl
ret
sub
jae
and
or
xlat
lock
jge
adc
adc
inc
cmp
fdiv
mov
mov
cwtl
pop
mov
push
sbb
jno
ljmp
cmp
test
push
dec
repnz
data16
push
push
lea
inc
cmpsl
ss
push
in
xchg
es
push
jecxz
ja
jg
outsl
cmp
and
cmpsl
mov
and
add
loope
jecxz
xor
dec
push
ja
imul
jno
fwait
mov
push
test
cwtl
pop
cmp
bound
sti
daa
xor
je
and
inc
dec
stc
mov
out
pop
push
sub
pushl
rorb
sbb
das
and
push
not
cs
add
int3
push
std
or
cmpsb
add
jbe
mov
int3
aam
addr16
or
jl
adc
pop
mov
add
dec
dec
addr16
ja
je
or
lock
scas
insb
mov
test
cmpsl
jmp
ds
sub
test
xchg
les
lods
and
cs
mov
and
xor
ror
xchg
dec
fstl
sahf
fcompl
into
push
xchg
sbb
roll
mov
sub
in
cltd
bound
push
pop
sbb
push
push
xlat
sbb
cld
lret
push
icebp
cmpl
lods
pop
test
jb
xchg
scas
sub
addr16
idivl
cmp
out
shll
mov
cmpsl
pop
jp
inc
cmp
cmpsb
test
xchg
mov
jnp
mov
lods
scas
in
outsb
jns
adc
push
lahf
and
mov
mov
mov
push
outsb
push
dec
addr16
testb
cwtl
jp
cmpsb
arpl
mov
test
ror
adc
das
data16
out
jle
hlt
call
push
and
insb
out
test
fists
cltd
out
inc
lea
stos
push
popf
in
inc
xor
or
jmp
mov
mov
outsl
imul
adc
dec
daa
mov
push
mov
sbb
mov
dec
mov
imul
push
xchg
sub
push
pop
inc
std
out
add
pop
or
xchg
clc
pop
inc
stos
sbb
int
push
dec
mov
xlat
jecxz
inc
add
jl
cmc
in
sbb
add
inc
jne
cmp
dec
mov
subl
inc
in
jp
and
sub
inc
mov
std
adc
or
sub
andb
xchg
adc
adc
movsb
pop
sub
mov
pushf
jmp
push
adc
and
shlb
push
inc
lock
add
out
test
stos
push
stos
xchg
popa
sahf
push
and
leave
pop
and
mov
shll
mov
stc
pop
sbb
jo
push
clc
pop
into
sbb
decl
cmc
icebp
xchg
add
sbb
pushl
jae
sub
pushf
addb
scas
xlat
aaa
sub
sti
gs
lods
mov
int
jo,pt
fisubrs
cmp
and
stos
adc
sbb
or
xchg
inc
in
push
xlat
jae
enter
xchg
mov
jne
mov
mov
adc
lock
mov
mov
jb
cmc
and
dec
mov
pushf
jecxz
loop
push
cmp
iret
push
push
adc
jo
sbb
jne
rep
mov
aas
stos
sbb
pop
mov
cmp
push
std
pushf
sbb
pushl
jnp
mov
cmovs
test
in
lahf
out
or
xchg
sub
shl
jne
jg
mov
outsl
insb
hlt
sub
cs
out
adc
push
inc
scas
lret
xor
test
ret
jnp
div
imul
loope
sbb
inc
jmp
cli
pop
dec
cwtl
push
jmp
cmp
push
push
ret
test
stc
js
fsubs
mov
enter
cmpsl
idivb
outsb
adc
cmp
movsl
aaa
pop
ret
mov
je
iret
and
push
out
aam
adc
sub
xor
and
fmul
stos
into
mov
adc
pop
dec
xlat
pop
cmc
insb
lods
xor
lret
and
xchg
out
sbb
mov
stc
mov
mov
sbb
lcall
mov
jl
xor
hlt
sub
mov
sub
lock
and
or
jnp
push
dec
scas
sub
lds
xor
sbb
jle
or
cltd
adc
icebp
in
sub
idivl
sub
push
mov
fs
sub
incb
imul
push
xchg
cmc
fldenv
push
pop
dec
sbbl
movsl
add
cld
hlt
mov
push
outsl
sahf
cmp
pop
in
mov
fists
int3
loopne
shr
mov
out
addr16
cmpsl
roll
mov
xabort
xlat
leave
gs
repnz
leave
xor
push
sbbb
mov
sti
cltd
cmpb
xor
pop
cmc
adc
aaa
push
lret
sbbb
or
ret
xor
imul
jno
lods
addb
add
pop
es
arpl
cwtl
fiadds
pop
fadd
scas
nop
es
call
jge
xor
mov
popa
sub
or
out
insl
push
pop
test
aam
daa
xorb
cmp
mov
das
icebp
adc
mov
out
lcall
nop
lahf
cmp
pop
xor
dec
int3
and
xor
repz
pusha
fists
es
inc
cmp
inc
ret
out
rol
aam
adc
pop
mov
popf
ret
jp
mov
xor
daa
rorl
data16
sub
ss
push
int3
cmpl
xchg
jmp
xor
insl
fbld
lods
orb
insl
mov
lret
out
or
push
xchg
jg
addb
dec
hlt
xchg
in
push
push
inc
fwait
or
into
ret
xlat
out
scas
xchg
add
mov
int
and
cwtl
pop
mov
repz
mov
adc
mov
lods
xchg
int3
or
sub
mov
nop
ljmp
ficoml
lret
dec
jno
cmc
add
sub
pop
pop
jp
mov
cmpsl
ja
xor
push
and
int
jnp
adcl
in
jns
push
push
push
push
dec
jecxz
mov
pop
popa
xor
repnz
lods
push
inc
lock
ficompl
enter
sarb
rolb
mov
dec
cmp
dec
xchg
subb
xchg
mov
mov
cmp
jle
pop
push
test
lods
adcb
fistpll
stos
sbb
xchg
xchg
popf
pushf
mov
jae
push
fstp
pop
cwtl
xor
pop
aaa
mov
inc
cmp
sbbb
aad
cmp
cld
add
lahf
mov
sub
in
fimull
pop
adc
jl
push
paddsb
fdivr
fldenv
dec
fimuls
pop
cmp
leave
xchg
dec
or
xor
xlat
arpl
sbb
lods
mov
lret
or
mov
fdivrs
jae
jae
xchg
sahf
and
push
push
int3
fs
add
and
std
aad
loope
and
or
jne
imul
or
push
sub
cmp
lea
daa
jecxz
test
xor
jge
xor
mov
push
jno
mov
jbe
adc
inc
adc
mov
jns
es
adc
ja
icebp
dec
scas
cli
lods
mov
sub
scas
cmp
push
dec
test
and
mov
pushf
mov
repz
popf
sub
jb
ret
cwtl
cmp
xor
inc
lods
jle
mov
pop
inc
inc
xchg
adc
aas
cld
cmp
xchg
stos
mov
pusha
loop
and
fmull
jg
and
push
inc
fidivl
enter
adc
dec
aad
scas
dec
push
mov
test
lock
aam
jae
push
in
inc
pop
daa
pop
subb
and
or
xchg
aaa
pop
ret
test
fsubl
mov
pushf
into
mov
add
or
push
jne
sub
fwait
rcrl
shrb
int3
or
cmp
dec
xchg
adc
call
stos
loop
leave
mov
aad
lcall
cmpsb
lahf
aam
mov
into
inc
mov
cmpsl
dec
dec
and
cmpsb
js
test
xchg
or
je
in
sub
andb
movsl
loop
jmp
movsb
mov
movsl
jmp
mov
gs
pop
or
orb
outsl
add
in
cmp
and
outsb
sbb
jbe
sub
data16
or
adc
mov
es
loopne
ficomps
fldl
jmp
xchg
cs
fiaddl
xchg
inc
add
jae
shll
daa
inc
pop
dec
mov
mov
sarl
jb
cmp
jg
scas
mov
gs
pop
clc
not
sub
lret
pop
ret
enter
mov
sub
and
sub
and
fisubrl
shll
mov
lret
mov
or
imul
shll
mov
lock
sbb
xor
jp
jg
icebp
scas
mov
scas
rorb
test
adc
cmp
movsl
scas
push
jg
or
insb
add
dec
xchg
xor
lret
adc
lret
popa
jbe
popf
js
mov
mov
scas
loop
jnp
cli
jo
mov
je
jns
mov
dec
inc
jns
lods
cwtl
xchg
enter
stos
pop
pusha
xor
lods
icebp
sub
mov
mov
insl
mov
sbbb
adc
loopne
xchg
mov
mov
xchg
hlt
mov
bound
mov
hlt
bound
std
test
pop
adc
adc
call
je
lahf
sub
frstor
mov
fildl
movsb
inc
out
push
mov
mov
nop
std
ret
int
pushf
mov
xchg
aad
pop
outsb
push
loope
and
and
call
pop
imul
stc
add
insl
lds
fistl
sub
lock
xor
dec
fisubs
test
subl
add
dec
add
mul
fwait
loopne
test
lods
stc
or
or
lods
lds
adc
cmp
push
dec
sbb
pop
cs
sarl
sub
gs
pop
movsb
jp
inc
xor
arpl
dec
dec
stos
ljmp
loope
outsb
clc
inc
sbb
lret
lds
push
pop
fnstsw
call
add
or
and
mov
mov
sub
inc
lea
lock
push
dec
mov
dec
dec
mov
and
ljmp
jg
adc
sahf
add
sub
rolb
aaa
insb
xor
test
mov
lret
mov
and
xor
cmp
aam
mov
jno
insl
or
pop
fwait
adc
cmp
movsb
test
xor
pop
sub
jmp
xchg
sti
rol
test
pop
xchg
mov
bound
mov
or
mov
not
cmp
mov
push
test
inc
rcll
cmp
adc
bnd
lret
cli
push
pop
mov
mov
push
cmpsl
icebp
mov
add
push
dec
aad
cmp
pushl
or
out
stc
adc
and
fistpll
pusha
jmp
mov
mov
xor
test
jl
testl
aam
xorb
cmp
mov
mov
ljmp
inc
and
addr16
lods
int3
sbb
cmp
js
jecxz
cmp
cmc
mov
movb
jae
push
loope
js
in
out
lods
inc
leave
cmp
loopne
inc
sahf
test
dec
or
or
stc
add
enter
pop
aaa
lret
scas
sbbb
cmp
inc
js
jnp
cltd
cltd
pop
dec
inc
adc
shlb
aam
or
in
lods
stc
or
loop
xor
bound
pop
jle
out
push
data16
sub
xchg
loope
clc
push
pop
pushf
cmpsb
enter
dec
cld
cmc
sbb
out
sbb
or
rolb
dec
cmp
fistps
mov
sbb
adc
int3
xchg
bnd
das
add
cmpsl
loop
imul
int3
and
adc
and
lcall
mov
pop
mov
fldt
inc
or
test
fnstsw
xor
lods
mov
das
sbb
jg
fstpt
mov
mov
xchg
dec
xorb
ljmp
scas
in
xchg
xor
cmp
stc
push
sub
ror
fwait
into
push
std
fisubl
leave
aam
push
popa
shrb
lret
jmp
sub
mov
dec
ljmp
xchg
repnz
push
test
jae
jno
in
ror
add
sahf
mov
aas
aaa
shrl
rclb
xchg
or
inc
shr
pop
scas
sbb
mov
push
shl
push
xchg
push
mov
test
pop
cmpb
in
aam
out
dec
ss
ds
cmp
dec
lods
int
pop
jge
fistl
lds
jmp
fwait
xchg
adc
mov
fs
sarb
shll
xor
add
mov
cmp
ret
aad
daa
cwtl
sbb
mov
mov
aas
test
lret
xchg
jo
stos
repnz
and
pop
test
rcrl
aaa
ficomps
jle
fisttpll
xor
adc
dec
or
cli
fmul
fildl
xchg
add
call
lcall
mov
xchg
mov
stos
xlat
into
add
xor
xchg
test
frstor
mov
mov
mov
jb
xchg
repz
mov
daa
adc
pop
add
pop
pop
cmp
subl
pop
ja
das
sbb
xor
push
mov
jns
fildl
ret
ficompl
int
orb
fcmovnbe
mov
fadds
not
xchg
stc
addr16
mov
add
or
inc
mov
repz
loop
or
popf
ret
mov
jb
jle
sbb
ret
inc
clc
roll
pop
xor
fwait
xchg
jns
inc
shrl
push
loopne
mov
sbb
mov
add
xchg
test
xor
dec
cmp
pushf
test
fs
icebp
adcl
xchg
fwait
xchg
jo
subb
jecxz
adc
loope
repnz
in
aas
xchg
pop
stos
pop
outsb
rcrl
inc
add
testb
int
jae
fcoms
jns
or
cli
sbb
and
das
aam
clc
insl
jnp
push
sub
int
pop
std
mov
imul
addr16
inc
stos
mov
xchg
je
cmpsb
sahf
movsb
in
cwtl
filds
negb
sahf
sti
add
or
lock
into
dec
fsubs
arpl
push
cmp
xor
inc
fstps
xlat
ss
sti
ljmp
xlat
add
jl
sbb
xlat
xchg
sbb
subl
int
or
fs
bound
and
adc
js
jge
shr
push
xchg
xor
pop
mov
sub
pop
repnz
pop
mov
insl
xchg
and
mov
or
clc
mov
daa
mov
sub
divb
xchg
mov
and
jg
mov
std
push
rcll
pop
or
pop
cmp
xchg
cmp
xchg
inc
in
mov
cmp
and
xor
or
adcl
imul
mulps
in
sbbl
dec
andb
pusha
lock
dec
aad
cwtl
movl
push
jo
add
jg
jl
bound
jns
dec
add
push
push
dec
mov
jno
inc
jge
push
push
leave
lds
loop
add
jbe
enter
jg
mov
jbe
fsts
xchg
lods
out
pop
stos
bound
and
movsb
pushf
push
fmuls
mov
lret
push
mov
inc
mov
or
mov
stc
jle
cmp
sbb
stc
neg
or
in
iret
in
int3
mov
mov
mov
mov
mov
xchg
sbb
incb
cwtl
cs
rcrb
jl
pushf
pop
lea
inc
shrl
push
imul
es
stc
pop
rclb
jo
xchg
dec
xchg
test
jnp
sbb
fstpl
leave
mov
jno
out
dec
lock
ret
in
jge
sub
cmp
or
bts
idivl
adc
iret
jle
lods
imul
sbb
mov
lock
inc
out
cmp
popf
pop
lcallw
loope
aam
pusha
test
test
cmpsl
dec
jg
xor
fsubs
jmp
hlt
pop
jns
adc
aas
pop
rcll
mov
jl
cmp
adc
or
mov
pop
out
dec
mov
leave
daa
orb
mov
shl
xchg
jnp
adc
sub
lds
adcl
fists
inc
sub
jl
mov
ljmp
mov
movsb
das
mov
cmc
sub
shlb
jl
lret
out
lods
sti
mov
cli
jp
addb
mov
cmp
data16
jmp
xchg
pmaddwd
call
xorl
lods
jmp
or
mov
ss
sub
andl
test
cs
xor
or
cmp
push
push
pusha
push
and
ret
xor
cmp
lds
mov
adc
lret
mov
out
pop
aad
jp
or
and
punpcklwd
or
jne
dec
mov
lret
cmpsl
xchg
push
inc
iret
xor
adc
ret
dec
mov
mov
fnsave
inc
add
cmp
nop
test
push
stos
mov
ror
out
mov
sub
pop
les
cmp
cmp
dec
mov
jns
pop
mov
mov
test
adcb
lea
std
sbb
into
pusha
lret
or
sbb
sti
rcrb
sub
imul
loope,pn
addl
pushf
in
fildll
decb
xor
arpl
aaa
scas
add
push
std
je
negb
insb
jmp
cmp
xorl
adc
scas
mov
repz
xor
insl
dec
mov
outsl
scas
cld
xor
adc
dec
sub
sbb
pushf
mov
subb
movsb
pop
add
xchg
out
int
mov
sbb
dec
call
xor
dec
lret
cmpb
mov
dec
lods
and
add
lcall
and
gs
ds
mov
lret
negb
pop
in
mov
sbb
mov
int
sarb
xchg
repnz
xor
fsubl
push
or
aaa
je
popf
cmp
pop
xchg
push
push
scas
push
mov
les
mov
jp
loopne
push
adc
fwait
in
and
iret
out
ret
lret
push
and
jg
rolb
and
stc
fs
mov
popf
es
cmp
lods
or
jns
sbb
pop
add
mov
aad
into
lret
popf
repz
test
jo
jp
adc
pop
jl
pop
add
and
jmp
inc
mov
pop
mov
sub
mov
pop
sbb
push
ss
mov
movsl
mov
sub
sub
andl
jl
in
add
pop
stos
nop
xlat
ljmp
pushf
or
dec
cs
jmp
outsl
mov
hlt
into
xchg
mov
addr16
jb
pop
sub
in
xchg
js
std
js
xor
incl
fistpl
mov
imul
mov
movsb
js
add
adc
leave
add
xchg
in
movsb
xchg
pop
cmc
and
jae
or
mov
es
dec
aad
xor
in
js
leave
xor
int
cmc
hlt
mov
or
leave
inc
aam
int3
pop
push
push
pushf
cli
jle
repz
mov
inc
out
dec
shlb
xlat
roll
cmp
imul
subb
push
popf
xor
xchg
cmp
int
mov
fistl
xor
jne
bound
or
jecxz
int3
or
jp
lods
or
add
inc
das
jno
xor
mov
dec
mov
cli
icebp
and
jle
pop
pop
and
sti
dec
push
ret
out
das
lock
iret
cs
scas
mov
sub
call
add
push
mov
xchg
sbb
mul
mov
lods
mov
adc
bound
pop
test
inc
dec
test
and
in
add
xor
les
test
xchg
cwtl
in
popa
pop
ljmp
mov
mov
pop
aam
inc
nop
inc
dec
sub
mov
mov
xchg
jle
xor
dec
jne
add
bound
mov
pmulhuw
cmpb
mov
dec
pop
push
in
mov
xchg
sbb
xor
pop
push
jno
push
fldl
test
das
lret
movsl
inc
fs
jo
sub
insl
push
xchg
or
xchg
pop
int3
rol
push
scas
lods
xchg
rclb
jmp
push
sub
lcall
js
adc
cmp
pushl
pushf
mov
movsl
mov
aam
fsubrs
rol
push
clc
mov
xor
fistpl
stc
adc
pop
sbb
sub
sub
dec
idivb
imul
pop
outsl
adc
icebp
sbb
mov
push
fwait
lods
shr
mov
dec
cmpsb
push
test
push
out
or
push
mov
push
testl
idivl
push
cld
push
test
mov
arpl
mov
loop
pushf
add
push
fwait
pop
outsb
fwait
push
xor
aas
inc
jo
hlt
adc
xchg
imul
fdivrp
shll
shrb
xor
or
jmp
int3
pop
mov
jecxz
outsb
cltd
lods
divl
mov
inc
or
imul
leave
or
adc
jns
ret
lret
cmovnp
sbb
dec
sbb
mov
inc
mov
out
cmp
and
insb
xchg
mov
js
mov
xchg
push
inc
ds
xchg
les
ret
leave
sbb
add
lret
sbb
mov
jmp
icebp
mov
fdivr
call
ret
pop
mov
adc
or
inc
pushf
sarb
lods
adc
ficomps
testl
popf
pop
inc
dec
lcall
lock
pop
in
jecxz
repz
mov
repnz
jns
pop
lret
jae
fidivrl
xchg
in
cmpsb
pop
mov
dec
stos
inc
lods
ret
dec
aaa
cmp
fcoms
inc
lock
push
pop
sub
push
inc
xchg
inc
out
addb
jne
lds
xchg
ss
sbb
jo
jl
jle
test
and
lahf
in
outsb
stc
sub
mov
mov
inc
enter
cmc
mov
test
fwait
sbb
push
loope
jbe
repz
mov
add
fimull
jb
cld
test
testb
adc
das
or
in
push
sbb
jo
lods
jecxz
push
xor
dec
out
jbe
jnp
pusha
jne
xlat
mov
negl
mov
mov
xchg
xor
ljmp
inc
xchg
sub
mov
jae
jae
ljmp
mov
mov
loope
dec
fcoms
push
insl
jle
loope
inc
push
cli
pop
je
scas
jg
aas
imul
in
cli
scas
shl
rcrb
jbe
sub
sbb
std
add
andb
out
in
enter
or
and
fidivrs
pop
in
and
nop
or
aad
xchg
cmpsl
and
xchg
mov
pop
scas
push
dec
or
das
jae
out
xlat
movsl
xchg
or
insl
into
mov
fidivrs
in
aaa
lret
push
cs
and
sub
jbe
xchg
or
lds
cwtl
push
xlat
cmp
mov
cmc
cmpsb
clc
jns
sahf
cld
sub
sbb
test
sbb
lcall
loopne
mov
pop
icebp
and
and
ljmp
fisttps
js
into
dec
mov
xchg
lahf
mov
bnd
lret
in
sub
sbb
xor
mov
cwtl
xor
mov
xchg
mov
int
pop
xchg
pusha
mov
sbb
fs
and
outsb
mov
xchg
cmc
dec
js
pop
or
cmp
roll
jns
lret
jge
aam
rclb
incb
add
mov
mov
mov
test
call
mov
loopne
hlt
push
loop
pop
push
sbb
dec
pop
clc
andb
or
das
aas
inc
xchg
inc
in
pop
nop
fmulp
push
jnp
dec
sbb
jnp
dec
pusha
jnp
inc
inc
cmpsb
incl
iret
negb
pop
mov
mov
mov
iret
jno
popa
xor
xor
mov
dec
je
mov
xchg
leave
jmp
insb
cs
in
test
hlt
out
xchg
aad
mov
jle
in
test
mov
pop
inc
daa
in
jne
in
xchg
cld
push
mov
scas
out
pop
push
test
pop
aad
pop
push
push
imul
inc
cli
sub
sbb
lahf
scas
inc
mov
lods
adc
mov
push
mov
adc
dec
pusha
dec
ret
and
mov
rcrl
dec
scas
cmp
lods
mov
push
dec
or
fidivl
cmpsl
xchg
shlb
jo
mov
jae
out
ds
out
inc
pop
push
jg
lock
pop
push
add
xchg
push
pcmpgtb
push
aam
sti
cwtl
fucomp
test
mov
not
jns
out
mov
popl
in
pop
jle
ret
jge
mov
cmp
cmc
pop
filds
pop
dec
mov
adc
addl
sbb
jp
or
sahf
push
in
pop
push
mov
dec
add
inc
sub
pop
adc
or
cmp
loopne
pop
xchg
jbe
es
pop
dec
nop
in
or
pop
push
or
sub
inc
movsl
pop
faddl
popf
das
pop
ljmp
lds
std
adc
pushf
cmovp
xchg
ret
je
nop
and
or
jg
cmpsl
cmc
rcr
std
out
lods
dec
es
js
cwtl
loopne
jne
lahf
mov
test
jmp
fisttpl
sbb
clc
add
dec
sbb
mov
mov
mov
or
xchg
adc
fsts
stos
mov
and
dec
adc
test
pop
int3
out
add
push
and
pusha
xchg
sub
dec
sbb
sub
stos
push
leave
cmp
pop
mov
dec
adcl
stos
hlt
adc
je
das
aaa
jnp
pop
mov
pop
or
sub
jg
pop
mov
lds
and
mov
idivb
lods
jmp
fwait
rcr
das
adc
xor
and
push
cmp
or
jmp
cmc
inc
pusha
inc
or
inc
or
mov
jl
cmp
arpl
call
leave
hlt
sub
into
mov
dec
scas
lods
push
mov
dec
fwait
pop
mov
leave
stos
cmp
sub
fadd
test
sbb
jns
enter
sub
imul
dec
mov
data16
cltd
imulb
or
loop
clc
mov
fistpll
jl
pop
xor
add
inc
jb
mov
jns
sbb
cwtl
inc
adc
xor
inc
xchg
in
leave
inc
add
scas
xchg
inc
or
push
and
nop
add
mov
cmp
pop
imul
fcmovne
movsb
scas
orl
or
icebp
imul
mov
xor
mov
cwtl
ficompl
add
repnz
popa
mov
cmc
dec
les
sbb
xchg
add
jae
mov
ljmp
call
and
inc
xlat
jl
mov
js
clc
or
pop
test
jnp
test
mov
int3
repz
int3
fstps
xor
test
gs
and
xchg
mov
icebp
dec
dec
scas
insb
fisttpl
or
sbb
dec
sub
mov
push
jg
or
mov
jns
inc
pop
mov
cmpsb
jmp
adcb
jg
sbb
aas
jo
mov
push
int3
sbb
dec
lret
xor
jo
xchg
cli
sbb
or
lcall
cmpsl
and
lock
xor
inc
xor
mov
xor
dec
hlt
inc
xchg
push
cmp
pop
cmp
sti
add
lcall
outsb
pop
xor
adc
push
dec
shlb
repnz
push
and
or
mov
jne
fcmovnb
cmpsb
cmp
movsb
lret
sahf
or
cmp
nop
sub
xor
mov
movsl
into
sub
pop
nop
and
cltd
jle
mov
stos
rclb
pop
pop
mov
inc
pop
mov
add
mov
and
outsl
out
cmp
cwtl
push
das
cmp
les
dec
aas
mov
out
movsl
mov
iret
mov
in
xorb
lods
ds
sbb
dec
sbb
pop
lods
xchg
negb
lods
lods
pop
pushf
inc
in
pop
cmp
out
pop
fiaddl
and
int3
jp
dec
mov
lock
leave
aad
les
add
add
stos
outsb
xchg
repz
std
hlt
mov
sub
sub
into
push
dec
ljmp
clc
mov
lock
arpl
mov
fst
xchg
pop
or
jns
sbb
push
jp
popf
sub
mov
pop
sbb
xchg
clc
or
lock
push
out
cwtl
xchg
pop
mov
sub
pop
iret
imul
fidivrl
mov
scas
cmp
inc
sbb
pop
scas
cmp
les
mov
jl
pop
icebp
aas
subl
or
mov
int3
mov
jb
sbb
lods
jge
xchg
das
jle
mov
lret
clc
jecxz
mov
jbe
add
lret
gs
jns
adc
mov
and
ret
aas
nop
xchg
cmc
adc
popf
fucomi
fcomps
jbe
fld
cmp
into
dec
pop
xchg
pop
les
into
or
cmp
mov
fwait
insl
mov
ss
sbb
rclb
xchg
stc
rolb
or
xchg
scas
or
cmpl
mov
orl
xchg
mov
aad
cmp
mov
push
pop
mov
push
jecxz
cltd
mov
push
lea
repz
jns
cmp
lock
rcrb
cmpb
cwtl
adc
ret
sahf
bound
dec
sub
insb
pushf
add
xchg
xor
js
inc
hlt
or
rcrl
mov
fninit
insl
in
inc
sbb
insl
xor
les
mov
ljmp
ret
dec
les
ret
call
dec
fldcw
inc
mov
mov
adc
xchg
ret
sahf
lahf
icebp
sub
imul
jae
pop
insl
mov
mov
scas
xor
sbb
and
out
xchg
cmp
inc
mov
sub
imul
movsl
fwait
int
dec
test
jge
xchg
inc
repz
into
jle
or
aaa
ret
out
mov
xchg
stc
mov
jns
push
push
xchg
mov
xchg
jno
add
mov
dec
out
jmp
repz
and
xchg
fwait
mov
shrl
push
ds
cli
inc
dec
pop
idivb
std
ret
in
test
fnstsw
sbb
jmp
mov
pop
jp
lahf
sbb
addb
jg
js
or
pop
mov
sahf
cmp
fmulp
rolb
cmp
mov
mov
sub
pop
outsl
ret
dec
fs
out
cwtl
mov
movsb
imul
or
cmp
andl
pop
repnz
lods
sub
outsb
nop
shll
into
and
lods
sub
or
sbb
aaa
mov
and
jne
pop
fadd
inc
inc
lods
stc
loopne
push
or
push
sbbl
shll
pop
push
rclb
xor
mov
cmp
cli
xchg
shll
mov
cmp
shlb
dec
cmp
push
cli
bound
decl
add
xor
in
fnsave
rcrb
jnp
xor
sbb
sbb
or
pslld
jne
inc
adc
das
test
cld
ds
mov
push
xor
and
test
push
inc
in
repz
adcl
jmp
push
pusha
xor
mov
test
cmp
into
sub
loope
jne
sub
jg
push
inc
xlat
dec
adcl
insb
or
sar
xlat
adc
mov
cmpsb
es
loopne
xlat
add
jo
ss
push
out
in
jo
push
scas
or
xchg
mov
roll
jle
add
nop
lds
addr16
jle
enter
inc
mov
ret
mov
mov
dec
add
clc
jb
adc
add
adc
mov
popa
pop
xor
fisttps
movsb
push
mov
xor
test
push
sub
clc
or
rorl
shr
adc
xchg
push
push
ss
pop
dec
inc
fdiv
inc
les
nop
mov
fadd
stc
sub
imul
subl
inc
inc
rorb
add
int3
add
dec
mov
dec
scas
mov
and
sbb
pop
xor
xchg
pop
sub
lods
pop
pop
jmp
ret
and
dec
or
xchg
test
mov
cmp
inc
dec
icebp
hlt
lods
gs
adc
movsl
push
stos
push
mov
shl
cmp
push
shll
dec
daa
js
scas
es
inc
inc
lret
xchg
sbb
pop
stos
and
cmpsl
adc
pop
xchg
sub
add
inc
xchg
imul
testb
ja
jmp
xchg
imul
mov
inc
imul
popa
adc
in
or
mov
insb
arpl
mov
xor
out
movsl
dec
adc
adc
dec
mov
dec
hlt
aad
pop
popf
or
jb
lds
inc
int
addr16
popa
push
push
rorb
cwtl
cmp
cmp
add
mov
mov
les
lock
sbb
push
mov
sahf
in
lret
inc
dec
lock
mov
out
mulb
lret
in
add
sub
dec
mov
stc
pop
shl
sub
or
push
or
mov
mov
inc
mov
sbb
rclb
sbb
les
push
test
ja
sbb
daa
xchg
cmp
popf
in
clc
imul
jge
push
movsb
lret
fstpl
or
jne
jmp
fwait
lret
mov
loopne
add
jmp
iret
mov
test
aaa
cwtl
fwait
jns
in
fs
mov
fs
popf
mov
lcall
stos
pushf
cmp
add
push
xor
jae
es
sbb
jmp
aas
inc
insb
jbe
fcoms
fisttpll
sbb
mov
xchg
mov
sbb
insb
or
rol
loope
paddusb
outsl
xchg
insl
inc
insb
fwait
xor
inc
addr16
dec
loope
and
ljmp
jno
mov
jns
push
imul
lods
fldcw
adc
push
adc
adc
cltd
sub
cmpsb
push
add
rclb
inc
test
adc
aaa
pop
xchg
add
jne
xor
ds
sbb
test
or
leave
dec
subps
xor
aad
pop
inc
imul
adc
stos
dec
mov
out
in
scas
dec
aas
pusha
in
mov
or
adc
mov
pop
xorl
dec
pop
cmpsl
dec
mov
dec
loop
outsl
mov
das
sbb
push
jmp
xchg
add
test
in
push
jb
pop
pop
and
repnz
in
arpl
cli
aas
dec
mov
sub
je
outsb
adc
int3
xlat
idivl
repz
test
xchg
loope
lret
fldl
subl
lea
mov
js
fmull
mov
repz
dec
add
inc
mov
das
lahf
lret
in
sub
fists
adc
and
pop
sbb
shr
sbb
adc
fcomi
ret
ds
xchg
pop
jae
or
jno
scas
adc
mov
out
cmp
jp
jle
sarl
inc
shrl
imul
pop
fcoms
and
loop
pop
nop
cmp
or
pushf
mov
ds
add
ret
and
or
add
shr
fisubl
inc
jmp
ja
add
push
cmc
outsb
out
push
or
and
sub
xchg
mov
js
and
mov
jg
pop
adc
fisttps
xchg
lret
mov
lods
mov
clc
call
add
jne
scas
cltd
inc
xchg
testl
clc
shll
dec
out
jno
ja
arpl
push
lret
add
or
push
adc
rcrb
and
mov
jge
enter
les
test
push
dec
sar
ljmp
imul
jne
adc
test
stos
cmp
xchg
out
mov
insb
mov
idiv
push
jmp
sub
mov
or
and
push
scas
lock
and
xchg
imul
mov
fcompl
lods
dec
add
ret
popf
pusha
xchg
inc
or
cltd
in
jno
js
jae
cmp
in
sbb
je
pop
sahf
mov
xlat
cltd
lock
adc
out
dec
scas
outsb
push
sti
mov
arpl
mov
xchg
and
push
test
mov
add
inc
adc
xchg
ffree
into
lahf
and
xchg
mov
adc
repz
outsb
mov
popf
jl
sub
dec
lea
sub
test
popa
lcall
dec
and
ja
adc
in
fistl
sbb
xor
popf
sbb
test
xor
out
xorb
call
jnp
popf
cli
cld
and
ja
dec
pop
adc
sub
cmp
sbb
es
jle
testl
push
out
dec
add
jp
push
or
stos
hlt
sub
aas
lods
fldt
outsb
mov
add
add
test
jnp
jge
mov
les
jge
repz
adc
jo
jle
std
pushf
push
xchg
mov
outsl
fwait
orb
out
xchg
mov
insl
and
add
mov
add
and
inc
mov
sub
xor
movsb
xchg
jle
andb
rcl
test
iret
add
dec
js
push
lods
rolb
shrl
fistpll
sbb
sbb
and
int3
mov
rcl
sub
dec
or
jg
jl
xchg
lods
sub
pop
fldt
and
out
out
mov
ljmp
mov
sahf
sbbb
cmpsb
mov
dec
xor
pop
jle
int3
xor
sti
jne
xchg
mov
xor
adc
lcall
xchg
xor
mov
add
pop
lock
leave
jns
or
mov
nop
test
ljmp
pop
adc
addb
and
cmpsb
dec
cmp
and
mov
inc
dec
sbb
jns
icebp
mov
aas
add
cmp
mov
scas
inc
loopw
push
je
sub
pop
cmc
xchg
aam
lret
ja
xor
inc
xchg
sub
xchg
adc
imul
push
cmpsb
jge
pop
push
data16
inc
inc
test
cmp
xorl
xchg
xchg
mov
ret
pop
or
jecxz
xlat
enter
sub
out
pop
cmpsl
std
and
aam
and
iret
mov
add
xlat
divb
pop
iret
adc
out
mov
mov
shlb
pusha
inc
in
lret
sbb
fdivrp
out
outsb
adc
ret
scas
dec
mov
loopne
add
sub
mov
lret
xor
ljmp
movsb
add
jl
xor
sahf
pushf
nop
mov
data16
arpl
ja
movsl
push
mov
mov
shll
movsb
repnz
lods
push
aaa
mov
add
mov
shll
and
jbe
lock
arpl
arpl
adc
shll
sbb
orb
pop
pop
sbb
scas
jmp
popa
subl
mov
dec
jno
stc
lods
mov
xchg
jge
or
push
mov
cmp
cmpsl
dec
mov
and
cli
push
mov
das
mov
jnp
les
xchg
flds
addr16
jge
fidivrs
daa
adc
jnp
fsubrp
out
sysexit
int
xchg
or
enter
loope
out
dec
stos
jle
pop
int
movb
adc
int3
add
and
out
pushfw
shrb
xor
ret
fisubs
adcb
rolb
mov
cwtl
iret
lret
loopne
push
cmp
or
int
or
pop
mov
scas
push
jne
sub
arpl
fsave
cmp
push
mov
inc
in
jnp
clc
pop
rcl
mov
mov
stos
fimull
mov
js
fmuls
sub
fwait
xchg
scas
mov
enter
jle
xor
test
jp
je
add
or
cmp
into
mov
mov
jns
and
test
jns
lret
int
int3
cld
push
imul
bound
sub
stc
jo
inc
fwait
shr
test
sub
inc
test
sub
std
pushl
push
pop
fucomp
arpl
aas
push
inc
mov
mov
gs
xlat
sahf
add
dec
mov
in
or
mov
ja
into
test
and
cli
test
cmpsb
dec
jp
shrl
cmp
lret
rcrl
leave
pop
popf
jecxz
nop
push
sbb
in
xchg
loope
sub
xor
imul
icebp
inc
stc
fsubrs
fsubl
inc
lahf
daa
cs
or
out
jecxz
inc
addl
das
leave
mov
adc
jle
jns
mov
and
mov
sub
test
fwait
jne
shll
imul
aam
insl
jp
pop
notb
arpl
jnp
jmp
sub
loopne
xor
loope
subl
arpl
in
aam
in
int
cmpsb
inc
stos
sbb
dec
xor
cmp
cmp
aas
jmp
out
adc
jle
or
fsubr
test
daa
xchg
inc
call
cmpsl
flds
or
jb
ret
xchg
dec
xor
mov
jge
call
sub
scas
mov
push
pop
dec
inc
pop
pop
movsb
lret
inc
lret
decb
test
fsub
sub
xchg
adc
jmp
aas
bound
imul
hlt
push
in
cltd
lahf
and
das
xlat
js
test
mov
pop
mov
ja
inc
adc
inc
int3
jo
push
push
mov
aas
push
stos
xchg
cs
fcomi
clflush
xchg
std
sahf
out
dec
xor
and
dec
sbb
sti
pop
icebp
shll
inc
sub
pop
pop
push
jo
lods
outsl
or
jmp
stc
push
pop
fidivrl
negl
int
movsl
mov
addr16
mov
enter
jle
leave
lods
fldenv
push
and
int
inc
mov
xorl
ljmp
push
in
push
out
jns
jg
daa
mov
pop
add
push
mov
cmp
stc
xchg
ret
add
imul
repnz
stos
pop
xorb
and
pusha
int
xchg
xor
dec
out
clc
xor
fsubp
ss
cmp
cli
jl
push
pushl
cmc
imul
jmp
xor
shrl
jbe
sbbb
pushf
test
cmp
mov
insb
sub
inc
test
jg
add
mov
pusha
nop
rclb
sarl
outsl
std
mov
mov
into
mov
mov
lock
mov
and
mov
jne
sbbb
dec
jbe
sub
scas
lcall
rcrb
mov
mov
iret
sti
pop
shll
xchg
or
sbb
and
pushf
mov
ljmp
pop
adc
outsl
pusha
xor
shlb
insl
ljmp
jo
pop
mov
xchg
mov
int
mov
data16
mov
and
idivb
push
cli
das
iret
pop
mov
and
arpl
rorl
pop
daa
sub
mov
out
mov
add
cmpl
sar
imul
mov
pop
sub
es
arpl
icebp
mov
add
in
pushf
mov
rcl
outsl
outsb
ljmp
lret
insl
cmc
dec
flds
mov
xor
mov
std
jle
fs
jb
dec
incb
push
cwtl
mov
xor
jo
je
ret
rorb
lret
rclb
mov
mov
push
and
cmpsb
loopne
cmovno
lret
sbb
push
or
cmp
pop
dec
cmp
jnp
jp
sub
aad
shl
dec
push
mov
scas
mov
push
aad
xchg
push
pop
ficoms
sub
or
add
mov
insl
cltd
cld
das
mov
not
out
fwait
jo
imul
lret
dec
addl
loope
adc
fldl
in
xchg
jecxz
jmp
jo
test
out
gs
fcoml
lahf
mov
aaa
popa
mov
xchg
xor
jle
mov
stos
xor
mov
leave
jmp
pop
push
xor
out
int3
scas
push
inc
xor
sbb
pushf
dec
enter
dec
insl
inc
sub
dec
das
mov
scas
adc
push
das
or
ds
jmp
inc
scas
movsl
xchg
jno
mov
ss
fwait
pop
neg
mov
insb
fdivrp
in
pop
je
jno
pusha
sub
push
jne
addr16
lock
mov
dec
mov
add
dec
divb
ljmp
test
mov
inc
sub
inc
inc
sub
imul
invd
fmuls
xor
pop
stos
and
xchg
int3
mov
push
jle
stc
jle
adc
and
lock
gs
lds
jge
in
movsl
mov
aam
loopne
mov
mov
push
and
cmp
mov
mov
jmp
lds
out
ss
in
movsl
pusha
sbb
pop
mov
inc
pop
mov
or
aaa
imul
scas
aaa
mov
rcrl
xor
push
fmuls
mov
out
xchg
rolb
jge
cmpsb
sbb
dec
imul
aad
into
inc
or
lahf
mov
movl
shr
nop
mov
sar
pop
ret
fwait
sbb
int3
call
xchg
nop
push
dec
int
inc
push
and
cmp
jo
mov
das
cmp
sub
fwait
cltd
sub
pushf
xchg
dec
xchg
ret
sub
orl
lret
mov
add
stc
mov
inc
mov
pushf
cmp
jb
icebp
push
mov
mov
add
xchg
lahf
imul
ret
or
cmp
mov
push
arpl
pop
bound
shrl
scas
pop
push
cld
outsl
negb
icebp
add
mov
mov
imul
mull
icebp
lcall
xchg
mov
sbb
stos
and
mov
mov
lret
push
js
sbb
ret
stc
push
cmpsl
sub
pop
out
das
in
hlt
push
dec
aas
decl
pop
ljmp
xor
ret
pop
dec
cld
jo
mov
shrb
repz
adc
push
adc
cs
outsb
nop
cld
jle
gs
push
test
arpl
push
test
cltd
lea
and
jge
fbstp
ljmp
fsubl
and
mov
out
jo
dec
jne
jg
mov
sbb
add
insb
push
mov
test
pop
adc
fisttpl
ret
mov
lret
cmp
dec
xorl
cmp
les
mov
ds
xlat
insb
cmc
sbb
mov
jbe
sub
lods
out
iret
daa
cmp
push
lret
xchg
xchg
jmp
leave
mov
jg
jbe
jne
repnz
dec
jmp
xor
add
xor
inc
pop
and
in
mov
push
mov
cmp
jle
ljmp
scas
lds
je
imul
leave
into
xor
imul
rcll
push
addr16
push
adc
sub
pop
test
arpl
jne
sbb
cmp
adc
sbb
sub
int
xlat
pop
lods
test
shl
stos
push
push
ja
insl
movsb
pop
mul
cmp
pop
push
cmp
pop
ret
imull
int3
push
mov
cltd
insl
lds
and
mov
cmp
inc
addb
and
mov
pop
sbb
je
mov
jecxz
xor
inc
sbb
and
lock
adc
mov
xor
inc
sbb
push
push
imul
sbb
imulb
out
add
cmpsb
jb
jnp
jmp
mov
push
test
sub
xlat
push
inc
mov
clc
lods
je
lods
xchg
dec
sbb
fnstcw
lds
les
ror
push
xor
jle
test
mov
scas
fdivr
xor
lds
mov
or
inc
movsl
jb
dec
daa
dec
mov
pop
shlb
lea
aad
popf
mov
cmpsb
pop
mov
xor
cltd
mov
push
outsl
adc
mov
dec
adc
dec
dec
and
out
fmul
pop
xor
es
dec
add
xor
gs
cltd
ljmp
sbb
mov
mov
mov
mov
out
call
mov
sbb
nop
lahf
mov
test
mov
mov
scas
enter
cwtl
clc
sti
mov
fnstsw
push
addb
enter
movsb
fwait
xchg
test
es
inc
sbb
ds
out
mov
or
mov
lret
and
cmp
popf
out
and
sbb
inc
enter
xchg
jnp
sbb
xor
pop
mov
movsl
ljmp
jmp
out
sub
loope
or
adc
cmp
cwtl
lds
insb
rcrl
scas
pop
aaa
or
pusha
fsts
lret
mov
out
cwtl
shr
pop
add
mov
callw
push
in
movsl
adc
insl
jmp
and
mov
sub
gs
test
into
in
xchg
inc
loop
and
sub
push
stos
sub
jb
movsb
call
jno
mov
mov
divl
cmpsl
jnp
mov
cmp
dec
repz
jnp
jo
mov
mov
mov
adc
pushf
mov
sub
ljmp
je
mov
cltd
insb
push
int3
mov
lock
cmp
test
jecxz
lcall
stos
pop
xlat
pop
dec
negl
scas
sub
pop
xchg
sbb
cld
ret
lods
cmp
and
movsb
sub
nop
pop
shlb
test
push
mov
pop
inc
dec
iret
sub
and
fbld
shlb
movsl
mov
add
and
add
and
mov
xor
fisubl
xchg
notl
and
dec
xchg
inc
push
cmc
xor
mov
push
cmp
push
iret
lahf
jns
xor
xor
cmc
nop
inc
and
out
outsl
or
jb
jp
lea
inc
inc
sub
roll
adc
cmc
xchg
jp
xchg
movsl
mov
enter
int3
or
or
xchg
popf
xchg
sbb
or
dec
movsb
arpl
add
xchg
enter
fildll
adc
mov
ss
out
pop
les
imul
mov
nop
sub
movsl
mov
test
out
outsl
loop
adc
jmp
add
sbbb
jne
lahf
pop
inc
popf
cmp
js
xor
adc
or
das
das
popa
call
mov
mov
or
ret
adc
cs
cmc
adc
loope
jbe
enter
addr16
xchg
aas
or
testb
inc
fstps
mov
int
test
push
mov
add
iret
aad
jo
dec
cmp
subb
arpl
sub
push
repz
nop
xchg
int
add
and
xor
icebp
mov
mov
fidivl
icebp
ja
pop
cmp
or
mov
push
jecxz
mov
loopne
fsub
test
pop
scas
xchg
mov
out
std
push
data16
hlt
mov
movsb
jne
dec
adc
test
mov
je
fs
lret
add
lods
imul
call
mov
jle
lret
cmp
enter
xor
sbb
mov
add
or
aaa
lea
and
and
movb
ds
inc
data16
lods
sbb
adc
cld
xchg
ret
mov
and
push
cmp
std
shll
xor
pop
sub
or
call
jge
xchg
mov
push
sub
mov
push
sbb
xchg
or
and
repz
jnp
xor
sbb
dec
push
pop
inc
and
sub
pusha
dec
mov
call
je
push
and
mov
add
gs
and
les
stos
sbb
pusha
les
xor
push
and
leave
or
cwtl
mov
aaa
sahf
mov
sbb
pop
in
data16
pop
movb
out
lock
add
testb
xor
jnp
mov
pop
sbbl
mov
jp
xlat
lock
popa
in
pop
or
bound
mov
in
sub
repnz
cltd
insl
xchg
out
cmp
jb
pop
je
and
lds
xor
aad
xchg
sbb
mov
cli
inc
inc
imul
enter
pop
jp
ss
xlat
outsl
push
xlat
adc
pop
xchg
cmp
jecxz
or
orb
js
xor
pushf
push
cmpsb
inc
dec
mov
sbb
cmp
pop
rolb
insl
dec
cmp
lea
push
inc
jg
fmuls
and
add
and
and
jge
push
js
lods
cwtl
xor
or
aam
lods
data16
mov
bound
repz
xorl
rcrb
rcr
mov
jo
push
stc
ret
sbb
jnp
leave
xor
mov
push
stc
jnp
fwait
pop
scas
loopne
jns
mov
mov
push
or
adc
sub
int3
mov
mov
xchg
xchg
adc
adc
ds
fists
push
pop
and
mov
dec
mov
stc
ret
ret
inc
rcrb
std
add
repz
xor
adc
lret
lods
push
mov
shlb
pop
aam
test
add
jne
sbb
mov
xor
in
and
jle
jle
push
xorb
icebp
mov
push
lods
add
adc
mov
pusha
pop
mov
xor
dec
rcl
test
sarb
fidivrl
test
pop
cld
out
xchg
shrb
stos
jge
dec
shrb
in
movsl
fisttpll
dec
pusha
adc
add
adc
xor
pop
jb
fdivrs
sbb
xchg
mov
fadds
mov
js
mov
jne
cli
adc
cmpsb
leave
pop
mov
loopne
xorl
std
das
iret
xchg
mov
xchg
fsubrs
xchg
jne
jbe
sti
xor
push
add
and
inc
mov
mov
push
pop
jp
outsb
sbb
scas
out
sub
or
cs
movsl
mov
push
cli
adc
shrl
sub
jae
mov
inc
xchg
inc
out
and
push
xchg
imul
lods
stos
jns
xor
lea
dec
sbb
dec
ret
push
pop
andb
dec
cmp
lret
and
int3
sbb
mov
pop
fadd
inc
jae
shl
mov
ret
pop
sub
cmpsl
pop
imul
or
or
sbb
xchg
xchg
push
loope
mov
rclb
mov
testb
jne
icebp
mov
inc
mov
and
push
mov
fdivs
sahf
ljmp
adc
lret
js
arpl
pop
pop
inc
push
cmp
adc
imul
mov
add
pop
jo
arpl
mov
repz
inc
aad
or
cmp
push
testb
popa
and
inc
stos
dec
or
mov
push
inc
aad
xchg
ja
jle
jo
dec
mov
cmp
dec
push
rcll
outsb
test
incl
jmp
cmp
sar
and
lods
in
xor
mov
xor
jo
rcrb
in
cli
xchg
in
mov
jge
add
pop
in
add
mov
xchg
mov
mov
jmp
xor
sbb
sub
xchg
mov
into
popa
daa
push
daa
cwtl
jge
mov
outsb
jmp
jo
mov
les
push
xchg
cli
push
xor
inc
int
push
icebp
stc
jl
and
jns
les
fucomip
jbe
fistl
jo
pop
and
scas
es
data16
sbb
lcall
adc
insb
shll
and
dec
pop
pop
stos
dec
scas
jmp
cli
iret
adc
mov
leave
xchg
repz
call
cmp
test
in
dec
sti
mov
sbb
lcall
lods
xchg
shll
lahf
std
and
sub
cmp
xchg
mov
or
ja
xor
and
sub
out
cmp
xchg
rcll
add
xor
xor
mov
mov
notb
test
aaa
xchg
lds
add
or
xor
daa
dec
fdivrp
lret
aam
cwtl
jg
add
fisubl
out
mov
ljmp
pop
les
loopne
push
rcr
bound
pop
xchg
jecxz
aam
out
push
dec
jb
push
roll
sub
pusha
dec
sbb
dec
pop
xchg
add
mov
shll
ja
cmp
pop
inc
call
pop
fldl
mov
pop
out
adc
push
arpl
fdivs
push
inc
repz
lock
and
add
je
inc
xor
push
sbb
pop
mov
xor
mov
sub
ret
mov
mov
mov
test
push
ja
iret
adc
clc
jno
xchg
jae
shlb
sbb
dec
jno
mov
add
pushf
adc
testl
xor
cmp
test
movsb
cmp
sbb
out
jmp
cmpsb
push
adc
lods
rolb
test
lods
subb
and
movsl
fiaddl
repnz
movl
xor
test
ljmp
insb
rcrl
mov
je
ret
push
mov
ss
mov
daa
pop
mov
xchg
sub
das
repz
or
inc
lahf
jmp
inc
int3
cld
mov
outsb
nop
fsubrp
ficomps
adc
or
and
xchg
pop
addl
loop
test
pop
adc
or
mov
or
fwait
inc
lods
inc
and
sbb
fldenv
adc
add
pop
mov
xorl
ja
out
sub
push
in
ss
cmp
aaa
xchg
movsl
cmp
aaa
test
or
rol
add
out
test
xchg
out
pop
jo
push
out
sti
xor
lods
push
sub
sbb
xor
loopne
stc
lret
imul
or
loope,pt
mov
je
out
sbb
push
jae
and
jbe
nop
sbb
xchg
inc
cmp
pop
mov
jne
leave
mov
fs
adc
movsb
dec
pop
sub
dec
sbb
repz
lcall
adc
aad
and
jge
nop
xor
jo
pop
dec
and
stos
xchg
push
insl
dec
and
sbb
sbb
cmp
xchg
in
lods
xchg
xorl
push
daa
sub
ljmp
or
sub
jbe
cmp
imul
xchg
in
or
xchg
mov
pop
jmp
mov
cmc
movsb
movsl
ror
shll
sbb
dec
jae
push
shlb
fwait
into
cmp
jns
mov
xchg
inc
pop
and
outsb
jmp
and
in
js
sahf
nop
sub
repnz
subl
add
push
jle
xchg
pop
outsl
faddl
call
inc
sub
xor
hlt
test
sub
scas
cmp
dec
cli
cmp
xor
andl
pop
lods
sahf
pop
jge
push
leave
jne
mov
sbb
loopne
insl
fwait
xor
bnd
mov
daa
lds
shll
mov
fsubs
push
push
es
sti
inc
bnd
xor
sub
push
push
movsl
std
sti
imul
imulb
push
and
adc
es
cli
testl
push
pop
mov
ja
xor
mov
fnstenv
idiv
sbbl
xor
cmp
xor
sar
add
cmc
outsl
std
int3
jae
lret
cs
out
mov
xor
subb
inc
sbb
mov
inc
sbb
jmp
jge
cli
cmovno
cmpsb
dec
inc
jle
aam
push
cmp
lds
out
cli
sahf
es
and
sbb
hlt
mov
inc
jb
push
pop
and
sub
cmpsb
push
mov
aam
cwtl
into
xor
in
and
pop
or
in
push
rcl
cmp
fisubs
mov
cli
pop
or
xchg
cltd
rolb
sbb
test
mov
mov
pop
sbb
jns
sub
test
fs
int3
sbb
in
and
sbb
loopne
adc
push
cmp
add
xor
std
mov
mov
push
sub
out
push
jl
ja
xchg
dec
mov
insb
sub
pop
int
cmp
mov
shl
cmpsb
shlb
sbb
fisubrl
cmc
sub
push
jb
mov
test
push
push
clc
sub
sbb
cmpsb
movsl
mov
arpl
std
mov
sbb
adc
cmp
bound
out
setne
js
out
ss
adcl
iret
sahf
dec
sub
rol
pop
and
popw
cmp
and
into
imul
xor
movsb
or
imul
gs
push
or
rcll
fiadds
mov
repnz
add
mov
ret
or
push
insb
cwtl
push
jg
in
mov
mov
adc
xor
mov
in
popa
negl
xor
cmp
add
jp
clc
shll
sub
and
push
lods
mov
in
cltd
cmp
roll
jo
pop
xchg
and
out
rcr
insb
enter
mov
xchg
pop
insl
push
divb
in
xlat
mov
test
scas
push
dec
cmpsb
mov
icebp
hlt
stc
ljmp
imul
out
mov
arpl
adc
clc
xor
or
jecxz
and
clc
fildl
insb
out
dec
xchg
cmp
lods
lods
cmc
les
cmpsl
jae
mov
into
frstor
inc
cli
or
lock
gs
fidivs
and
arpl
and
xlat
sub
push
inc
in
sbb
outsl
fcomp
data16
pop
sub
mov
loop
in
pop
lea
shll
cmc
pop
es
iret
inc
mov
xchg
xchg
xchg
pop
mov
dec
loopne
push
popa
out
pop
dec
call
xor
and
bound
nop
mov
jmp
xor
and
adc
sub
mul
mov
out
mov
lock
nop
push
cs
sub
cltd
inc
enter
cld
add
xchg
dec
dec
testb
sti
loop
push
cmp
cmp
adc
add
or
push
aas
clc
pop
out
out
push
mov
inc
pop
imull
dec
xor
dec
in
add
xchg
adc
xchg
mov
out
jg
les
notb
push
and
cwtl
clc
ficoml
pop
sbb
mov
xchg
add
ret
xor
jns
sbb
shll
dec
mov
daa
pop
jbe
roll
add
mov
outsl
mov
push
xchg
inc
add
pop
mov
pop
shll
push
clc
mov
test
mov
pusha
or
jnp
rcll
mov
pop
push
add
adc
stos
pop
out
cwtl
dec
xchg
frstor
bound
test
adc
idiv
add
mov
lods
stc
and
cli
out
dec
enter
test
and
loop
mov
sbb
fimull
idivb
lret
add
cs
inc
jp
pop
nop
daa
xchg
mov
dec
scas
pushf
lcall
ret
or
cmpsl
lret
inc
das
push
mov
ret
popf
push
pop
mov
jns
push
idivl
stc
jns
mov
rorl
sub
mov
gs
mov
sub
mov
push
stc
test
mov
xchg
arpl
add
sbb
adc
pop
idivb
aaa
repnz
jmp
add
into
inc
add
mov
mov
je
ret
cmc
lcall
xchg
out
movsl
fdivs
xor
pop
inc
xchg
sarl
lret
out
sbb
les
pusha
test
xor
rolb
fcoms
cmpsl
lock
pshufw
sbb
pop
add
mov
mov
xchg
ds
lods
in
add
inc
out
pop
and
mov
mov
jne
loope
out
rcl
jb
dec
out
sar
aaa
inc
test
ja
inc
mov
fadd
cld
mov
and
sbb
inc
add
jo
rcll
push
push
int
aas
jo
mov
iret
pusha
repnz
popf
jo
mov
icebp
jne
int3
add
gs
adc
lods
xchg
mov
mov
dec
or
push
and
add
mov
gs
or
loop
call
test
das
jecxz
push
add
adc
cmp
xor
lds
in
scas
fdiv
int
dec
ret
bswap
addl
push
sbb
pusha
js
out
xor
adc
xchg
lahf
loop
je
leave
cmpsl
mov
inc
mov
ja
mov
cmp
ret
dec
fnstenv
out
sub
aad
stc
add
in
in
mov
xor
sbb
mov
xor
nop
sbb
xor
sbb
clc
sub
repz
pop
xchg
mov
pop
insb
fldl
into
addr16
xchg
cmp
aas
stos
mov
lcall
bound
clc
aaa
fsubrl
jge
in
jne
or
out
jbe
mov
popa
jb
adc
iret
imul
and
dec
push
pop
xchg
sub
cs
repz
sbb
shll
push
mov
in
dec
adc
or
lcall
xor
inc
out
jnp
in
fbld
adc
jecxz
fcomp
jl
clc
or
adc
and
sub
add
shrb
std
movsl
stc
or
repnz
sbb
out
fldt
movsb
daa
ret
dec
sar
add
cmp
sbb
ret
movsl
or
jmp
cmp
jae
push
popf
sarb
stos
pop
push
icebp
dec
pop
sbb
cmp
xor
aas
jne
aad
lods
pusha
cmpsl
dec
push
shl
sub
stos
sarb
addr16
loop
hlt
pop
loope
pop
xor
adc
jle
popf
js
inc
xor
push
mov
mov
inc
xchg
sbb
daa
sbbl
out
inc
es
sbb
outsl
pop
sbb
add
or
push
ficoml
or
add
je
movsb
sub
push
loope
movsb
jecxz
loope
jo
out
loopne
rcrl
fsts
xor
repnz
jmp
push
popf
mov
sub
gs
mov
jbe
aad
nop
xlat
popf
and
jns
push
cmpsb
mov
jnp
mov
ret
mov
fcomp
mov
or
lret
fmul
push
mov
xchg
mov
pushf
xor
lahf
fstpt
lahf
add
ja,pt
in
inc
adc
cmpsb
rol
movsb
pop
ds
mov
xor
inc
test
rcrl
dec
lods
adc
adc
fs
loop
cwtl
and
test
xor
rorb
dec
lds
mov
mov
pusha
call
sbbl
sub
in
jp
add
fcmove
xor
mov
pop
xchg
repnz
fs
adc
repz
out
mov
cmp
unpckhps
cmp
push
cli
cmp
dec
adc
sbb
sbb
subb
stc
sub
popa
scas
sub
inc
and
xor
jns
jne
jno
pop
jg
lcall
test
mov
iret
or
fsubr
clc
es
mov
and
cmp
push
aad
lds
mov
ret
mov
push
sti
test
mov
adc
xchg
adc
add
xchg
cltd
sbb
insl
adcb
push
jo
rolb
mov
lcall
sbb
mov
and
mov
sbb
adc
sbb
das
dec
xlat
inc
cmpsl
cs
out
aam
cltd
sbb
test
mov
push
into
jnp
jno
jbe
rorb
add
movsb
xorl
testb
sub
das
inc
jl
xchg
xor
mov
push
out
cmp
mov
or
gs
cmp
daa
jnp
call
dec
adcl
pushf
xchg
jge
mov
and
bound
lock
sbb
movsl
das
xor
sub
fs
in
mov
rcll
popf
and
daa
rol
jg
jp
lret
sbb
in
out
add
cmpsl
sub
mov
push
fists
mov
mov
test
or
xchg
insl
nop
pop
call
pop
popa
ja
dec
arpl
repz
push
mov
popa
dec
ja
fwait
mov
shr
and
adc
xor
inc
pop
pop
mov
adc
fsub
mov
or
int
lea
into
xor
mov
fimull
fadd
cmpsl
test
lds
pop
sbb
and
lret
xchg
jecxz
in
test
pop
push
mov
adc
sub
pop
mov
add
sahf
mov
dec
xchg
ljmp
out
movsb
scas
and
sahf
jge
cmc
mov
addr16
xchg
dec
aaa
lcall
fisttpl
jp
jmp
jl
lahf
iret
cmp
cmp
fistpll
mov
outsl
add
das
lret
in
sbb
es
cmp
insb
fcmovb
or
push
pop
dec
ds
cmp
addr16
int3
and
push
clc
inc
add
stc
pop
jle
mov
sub
call
movsb
mov
sub
adc
inc
popa
fadds
ljmp
popa
xchg
jg
jp
add
hlt
add
test
in
daa
lods
pop
sbb
in
lret
loope
js
jp
jnp
cmp
xchg
xchg
and
dec
xchg
sbb
xor
adc
shrb
lods
les
mov
xor
push
lods
arpl
adc
xor
movb
dec
into
sbb
es
mov
cmp
xchg
push
jge
push
roll
aaa
std
pop
jae
mov
outsb
cs
movsl
in
push
sbb
imul
aaa
ljmp
lock
xor
sub
pop
or
sbb
xchg
pop
xchg
xchg
adc
xor
cmp
push
test
das
xor
in
mov
pusha
insl
mov
in
mov
roll
rcrl
push
leave
imul
mov
leave
dec
mov
and
cli
popf
dec
js
dec
cmp
inc
xor
leave
adc
jae
sbb
imul
lcall
pop
neg
mov
pop
xlat
and
loop
inc
out
sbb
xchg
es
xchg
xorb
scas
inc
mov
cltd
mov
cmp
enter
std
inc
inc
rcrb
iret
mov
pop
mov
mov
or
jge
test
xchg
xchg
aam
or
aad
les
scas
xor
shlb
lock
pop
mov
add
jne
in
push
sub
aad
jno
in
mov
orb
jl
sbb
dec
fstpl
aaa
jno
shr
mov
adc
add
mov
cmc
mov
xor
cmp
pop
mov
sarb
xor
xchg
mov
mov
xchg
mov
lock
push
add
pop
test
cmp
jmp
enter
dec
lods
xchg
int3
fs
int3
mov
inc
lret
mov
xchg
or
xor
cld
js
sbb
gs
jecxz
aaa
sub
inc
insl
ret
push
xchg
ja
push
scas
int3
lcall
hlt
sub
mov
lds
sub
xchg
sti
fistl
mov
cmp
jmp
sti
out
jns
dec
loopne
ss
fmuls
ficoms
dec
xchg
and
andb
bound
fldcw
dec
push
adc
or
out
gs
push
outsl
cmp
fldl2t
fwait
jns
push
sub
jl
in
inc
push
jno
xchg
dec
or
test
lret
imul
push
aam
cmpsl
mov
or
sbb
lcall
fisubs
mov
lea
dec
xor
sub
shll
mov
outsb
dec
leave
jae
xlat
add
pop
lods
sbb
ret
cmp
mov
mov
addl
clc
pushf
sar
jp
inc
xchg
xor
dec
gs
test
dec
sbb
xor
sub
loop
sub
repz
mov
out
mov
jne
jl
movsb
cmc
movsl
adc
jle
cmc
in
lock
fwait
dec
mov
add
adc
ss
loope
xchg
lods
fstpl
push
mov
mov
jg
orb
test
cmp
add
sub
repnz
add
xchg
dec
repz
lock
sub
push
subb
and
sub
shr
inc
mov
and
adc
repnz
push
add
mov
out
inc
push
sub
sub
mov
add
xor
adc
mov
out
push
mov
cmp
inc
sbb
fadds
ss
shl
push
stos
dec
pop
push
js
int
xchg
inc
test
xor
repz
push
pop
or
inc
repnz
mov
sub
jo
idivl
test
or
push
mov
fisttpl
pop
sub
pop
lret
and
bound
xor
into
or
adcb
imul
out
hlt
fdivrs
dec
xchg
push
dec
xchg
sbb
fstps
pop
xor
mov
xor
mov
mov
pop
xor
data16
pop
push
mov
jne
call
cmp
mov
test
xor
inc
add
mov
dec
sbb
sahf
insl
mov
mov
out
aam
adc
push
xchg
ds
lahf
fdivr
xor
inc
scas
stos
jmp
mov
cmp
add
and
and
jge
push
lret
sbb
dec
mov
or
mov
pop
mov
lret
imul
xlat
outsb
inc
mov
xor
dec
cwtl
es
loope
add
jl
in
js
inc
pop
fimuls
test
push
ss
loope
and
mov
mov
cmp
lea
cmpsb
shrb
cmc
sbb
mov
scas
sub
inc
pop
add
dec
sbb
repnz
arpl
mov
stos
sbb
xchg
pop
lret
or
insl
les
add
jno
iret
lock
inc
hlt
push
push
inc
and
dec
fnstcw
mov
mov
dec
sbbb
jb
lret
mov
dec
adc
mov
rcrb
adc
fldl
stos
test
icebp
cmpsl
movsl
xchg
push
jo
movb
ret
mov
sahf
mov
push
rolb
cwtl
mov
mov
bound
rcll
xchg
cli
in
enter
xor
fsts
pop
jle
enter
and
push
stos
push
mov
or
add
shld
add
movsb
inc
dec
sti
test
inc
mov
cwtl
add
mov
cmp
sahf
xchg
mov
cmp
xor
repnz
push
insl
out
push
jae
xchg
xchg
sbb
cmpsb
mov
nop
packsswb
xorl
dec
inc
les
ds
jno
popf
rorb
push
xor
cs
pop
scas
and
imul
loop,pt
test
pop
lds
std
pop
jb
outsl
pop
repnz
addr16
mov
sub
push
adc
pop
ljmp
mov
push
clc
outsl
xchg
push
ljmp
pusha
js
xor
and
and
and
add
ret
inc
fisubrl
loopne
cmp
adc
mov
scas
repz
push
int
mov
loope
add
and
push
cmp
cmc
xlat
dec
popa
mov
je
fdivr
ja
std
inc
lret
ret
cmp
jne
jg
or
fwait
cltd
enter
iret
ret
cmpsb
sbb
imul
or
xchg
mov
leave
inc
jecxz
sbb
mov
and
xor
ret
ja
or
sbb
pmaddwd
mov
and
jp
dec
mov
cwtl
fcomp
outsb
pop
push
int3
pop
dec
enter
loop
xor
jb
lret
mov
aam
mov
lret
repz
jne
icebp
cmpsb
pop
lahf
jns
jp
sbb
sbb
and
dec
mov
push
cmp
inc
sub
mov
fiadds
pop
sar
outsb
in
mov
mov
int
addb
imul
fbld
sbb
insb
push
sbb
sbb
call
jno
sahf
mov
mov
andl
test
dec
inc
ja
loopne
pushw
inc
lock
shll
xorb
cli
inc
mov
jmp
mov
push
adc
daa
push
sub
lds
imul
fisttpl
in
adc
or
pop
fbstp
pop
pop
mov
cmp
sbb
dec
pop
jecxz
push
arpl
clc
lretw
xchg
or
xor
dec
sbb
dec
sub
or
pop
push
loopne
sbb
dec
xchg
xchg
sahf
mov
jl
dec
pop
shll
inc
push
adc
push
ret
xchg
xor
mov
and
popf
jecxz
loope
movsl
mov
xchg
cmp
push
cmp
push
pop
dec
mov
lods
adc
repz
cli
and
enter
pusha
movsl
cmc
nop
cmova
mov
add
ficoml
ds
nop
aam
sub
xor
into
cltd
pop
mov
out
addr16
sbb
jb
xor
mov
loope
or
stc
lcall
push
shlb
cmp
add
push
mov
cmc
arpl
fldl
inc
inc
jp
test
pushf
add
dec
push
mov
mov
dec
lds
hlt
cmc
pop
sub
dec
sbb
or
lock
mov
xchg
cmpsl
das
popa
out
sbb
fisubs
sub
adc
cli
bound
ljmp
pop
clc
mov
sub
dec
mov
cmp
lock
push
or
jl
sub
jns
lea
leave
mov
movsl
sbb
add
loop
insl
mov
loop
push
in
inc
out
test
jp
adc
mov
orb
pop
push
mov
aaa
call
adc
push
dec
test
fldenv
les
jge
xchg
rcll
test
rcr
loopne
pop
dec
pop
jnp
pop
aad
adc
jnp
cmp
nop
jns
fldt
lret
shlb
push
int
push
cmc
adc
and
cmp
push
cmp
setp
mov
sub
push
iret
push
das
popa
push
pop
nop
and
add
mov
es
mov
outsb
push
xchg
dec
aaa
dec
mov
incl
inc
mov
rcll
mov
movsl
mov
mov
jp
inc
cmpsl
pop
shlb
add
subps
jmp
jb
dec
or
or
outsb
cmpsb
adc
dec
repz
mov
movsl
fmull
push
pop
dec
aaa
mov
xchg
dec
rcr
daa
sub
cld
or
adc
fstpl
fimull
jmp
or
sbb
les
test
inc
xchg
dec
test
test
mov
sub
outsl
xor
ja
gs
loope
sahf
add
push
xor
mov
cli
cwtl
mov
or
bound
mov
stos
mov
add
push
outsl
negl
xor
ss
les
sti
xchg
lods
mov
movsl
mov
xor
arpl
in
shll
ja
jae
dec
or
dec
sub
push
pop
mov
adcb
dec
js
add
dec
push
int3
lock
sub
push
out
sbb
and
jg
pop
fisttpll
ljmp
sub
setle
stc
int
add
cltd
push
loope
rcll
mov
movsb
inc
cmp
fnclex
orb
xchg
mov
cmpsb
ds
jp
adc
imul
fisttpl
ja
mov
int
jbe
mov
stos
arpl
jae
mov
aaa
jbe
nop
mov
data16
adc
popf
inc
pushf
jmp
cld
mov
int3
and
inc
or
jnp
jle
or
jns
gs
les
xor
pop
cmp
push
inc
fiaddl
int3
daa
je
jmp
mov
mov
ret
test
push
mov
mull
lds
jno
inc
aas
daa
insb
xor
out
mov
in
mov
adc
inc
jnp
pop
loope
pop
leave
jne
sarl
rorl
push
sbb
lds
sbb
cwtl
cmp
push
shll
inc
ja
int3
cmpsb
and
ret
loopne
xchg
pop
cmpsl
pop
jnp
cmpsb
cmp
xchg
cld
scas
dec
sbb
stos
shll
daa
js
or
xor
cmp
add
push
subl
mov
pop
lock
ljmp
cltd
mov
out
aam
in
xor
rorb
cmp
ss
jg
pop
mov
ret
or
popl
mov
sbb
cltd
jo
pusha
pusha
popl
and
mov
insl
int3
adc
and
inc
icebp
xchg
push
imul
push
je
xchg
repz
adc
jno
divl
xchg
jmp
jno
pop
mov
push
shlb
sbbb
or
mov
sarb
rcrb
imul
or
imul
dec
mov
or
popl
ja
jle
test
push
fwait
outsl
push
aas
or
fnstcw
rcrl
mov
ds
pusha
wrmsr
sbb
inc
out
dec
aas
nop
icebp
in
iret
sbb
sub
ret
mov
jbe
repz
and
pusha
or
sahf
push
cltd
iret
mov
bnd
imull
dec
xor
inc
rorl
add
jnp
or
enter
outsl
scas
push
jp
mov
rcr
and
pop
daa
sbbb
adc
stos
lock
je
pushf
lock
adcb
insb
or
inc
mov
xchg
sbb
push
or
cmc
mov
sbb
cld
int
test
pop
jo
xchg
sbb
and
and
into
jmp
or
dec
dec
pop
daa
push
aas
insb
repz
jbe
or
pop
and
hlt
or
loop
cltd
shr
xlat
xor
test
aad
mov
sbb
pop
negl
out
or
ret
pop
push
push
lods
jle
adc
lret
mov
jae
add
sub
sbb
repz
adcb
sbb
mov
adc
lods
sbb
mov
movl
mov
adc
mov
bts
inc
loop
cmpsb
dec
pushf
pop
and
lock
fadds
xchg
cmpsb
jnp
adc
mov
int3
test
mov
xorb
sbb
jecxz
push
testb
adc
mov
in
loope
inc
jno
outsl
pop
push
aas
popf
cmp
or
test
sbb
outsb
and
movsl
pop
imul
add
sbb
push
mov
xchg
push
xchg
aad
int3
jl
enter
stos
xchg
pop
or
push
add
or
add
and
mov
adc
sbbb
jmp
add
add
jno
jmp
test
push
adc
cmp
add
jnp
mov
dec
fnstsw
sbb
lcall
dec
xchg
call
xor
imul
lret
js
inc
imul
sbb
loopne
mov
fs
int3
and
inc
xchg
sub
sub
scas
cmp
inc
xor
pop
sub
rcll
rcrl
ret
mov
push
add
mov
sbb
ja
mov
addr16
mov
jb
jp
add
cltd
mov
jl
test
sub
outsl
pop
add
lret
std
unpcklps
pushf
push
fdivs
loope
xor
inc
mov
mov
mov
sbb
mov
addr16
mov
cmp
dec
pop
jae
mov
dec
movsb
pop
ja
and
inc
jae
imul
iret
out
mov
and
lods
sbb
shlb
sub
orb
mov
in
push
lret
vcvtdq2pd
push
jo
sub
std
shll
shrl
sbb
cld
jl
mov
add
sbb
fs
cld
xchg
sub
sbb
movsl
hlt
shrl
loope
pextrw
sbb
dec
xlat
sbb
fisttpl
xchg
push
cs
sahf
dec
and
adc
push
cmc
bnd
popa
clc
lock
jmp
mov
fs
mov
stos
sbb
cmp
jmp
mov
pusha
and
lds
hlt
mov
fisubs
test
jl
xchg
adc
jno
int3
ja
sbb
clc
aaa
test
or
rol
add
test
jns
and
push
das
xchg
rcll
sbb
mov
xchg
push
les
stos
jne
daa
mov
icebp
addr16
movsb
inc
or
into
fiaddl
jae
fs
dec
push
push
sub
sbb
mov
mov
bound
sti
pop
push
loop
nop
adc
push
mov
xchg
xchg
mov
das
cmp
sti
sub
sbb
leave
pop
xchg
dec
mov
data16
pop
sbb
inc
pop
ljmp
repnz
lcall
mov
rclb
lret
jno
sbb
dec
pop
into
lret
xchg
sbb
imul
push
jg
iret
cmp
push
xor
mov
pop
std
inc
push
inc
stos
xor
pusha
push
and
in
cmp
pop
cmp
mov
insb
sub
int3
jle
les
xchg
lret
idivb
cs
jns
sbb
push
mov
pop
push
xor
pop
imul
int3
dec
stc
insl
mov
sbb
sub
ljmp
inc
cmp
and
pop
arpl
mov
aad
sti
xchg
and
cli
mov
incl
and
dec
push
jg
jecxz
repnz
aad
inc
mov
cmpsl
shr
pop
and
fmull
mov
out
insl
clc
jns
mov
dec
hlt
xchg
out
das
sti
shll
push
shl
sbb
pop
cmpsl
orb
out
mov
jle
xchg
jb
enter
lea
in
xor
cli
aam
in
mov
lret
es
sbb
push
push
mov
test
std
mov
lret
and
mov
cltd
and
xchg
daa
xchg
lret
sarb
pushf
stos
and
jne
rcrl
jl
pusha
jl
enter
imul
out
mov
and
sbb
mov
repz
lahf
cmp
lahf
popf
into
daa
mov
and
jns
pop
xorb
dec
pop
jp
sbb
adcl
leave
setno
xor
ljmp
mov
xchg
xchg
inc
testl
cltd
inc
and
shrb
pop
pop
lret
test
outsl
ds
insb
jg
lock
mov
repnz
push
mov
out
lds
test
cmp
jle
push
call
sahf
mov
loope
call
fs
or
cmpsb
xchg
std
dec
or
cmpsb
dec
lods
jns
imul
test
arpl
pop
jne
rorl
cmp
mov
or
inc
push
pop
repnz
jp
dec
jbe
arpl
shlb
mov
fwait
mov
inc
repz
sbb
pop
add
das
loop
outsl
pop
jbe
into
adc
xchg
out
rcrb
aad
add
pop
inc
push
in
mov
inc
xchg
enter
mov
push
mov
mov
jnp
loopne
mov
ret
jb
xchg
sub
sub
sbb
mov
inc
pop
lret
mov
cwtl
xor
fmuls
sbb
push
sbb
shlb
out
adc
add
std
adc
test
fisttpll
or
lcall
jbe
call
stos
out
fs
aam
xor
add
push
loop
fs
in
jecxz
fistpl
mov
and
sbb
sarb
and
or
test
jb,pn
sbb
adc
cltd
stos
and
stos
aas
pop
mov
fwait
or
pop
jne
push
and
int3
cmp
jns
push
jg
ja
mov
pushf
dec
cmpsb
insl
mov
add
cltd
test
int
jne
push
ljmp
pop
fcomps
mov
inc
inc
adc
out
pop
dec
dec
mov
mov
or
arpl
jnp
mov
fnstsw
sbb
testl
je
pop
enter
cmp
ds
mov
jae
pop
sbb
sbb
add
cmp
or
cmp
adc
or
xor
mov
xlat
add
std
outsb
ret
xlat
fs
cmp
cs
out
mov
or
in
mov
repnz
mov
arpl
mov
mov
inc
prefetch
or
loopne
and
mov
out
data16
test
pop
mov
push
mov
sub
cld
and
scas
or
add
cli
ret
dec
and
lahf
xor
push
ljmp
cmp
mov
cmpb
xchg
dec
lcall
adc
pop
gs
xlat
int
push
test
push
jg
pushf
xchg
divb
xchg
cmc
imul
das
cmpsb
adc
push
and
push
and
jecxz
nop
cli
js
lods
imul
jmp
fldz
mov
inc
into
and
jl
dec
repnz
xor
fisubrl
sub
push
mov
jle
mov
xchg
pop
std
push
sti
push
cmpsb
inc
rorl
push
add
xchg
xlat
pop
insb
sub
mov
fmul
ret
test
cld
add
adc
movsb
sbb
jo
rcr
sbb
out
xchg
pop
icebp
aaa
in
int3
push
cld
ficomps
xor
and
bound
sub
cmpsb
cwtl
push
adc
out
add
or
mov
aam
outsb
in
xchg
fisttpl
ss
pop
inc
test
fildl
fnstsw
rcl
push
inc
or
iret
sarl
sub
lahf
jnp
test
pop
adc
cmpsl
add
ret
cmpsb
stos
cmpsl
sbbl
and
in
ret
stos
in
cmpsl
imul
sub
scas
xor
push
pop
aad
sub
fdivs
cs
or
push
cmp
mov
fucom
icebp
int
lret
xchg
int3
push
orps
adc
mov
dec
aam
mov
int
push
scas
jmp
sub
mov
outsl
pusha
int3
sub
int3
xbegin
insl
imul
push
neg
sbb
xor
push
jne
jb
add
ja
xor
icebp
cmp
in
push
mov
sbb
and
jo
mov
cmpsl
shl
div
jg
pop
outsl
lods
sub
lea
pop
clc
aam
add
mov
inc
lods
add
jle
pushf
dec
cli
repz
sarl
out
push
inc
out
subb
int3
adc
xlat
in
and
leave
push
jg
jae
lret
ds
out
sahf
pop
lahf
out
and
push
ret
fstpl
xor
cmp
adc
cmp
and
out
hlt
and
mov
sub
dec
iret
repnz
push
push
pop
jns
adc
push
outsl
mov
sub
ja
test
out
dec
jecxz
cmp
loop
sub
fistpll
pop
pop
scas
sbb
cmp
fists
in
sbbl
mov
divb
cmp
sbb
sbb
push
lret
rcrl
lahf
push
push
adc
add
mov
out
xor
call
xchg
pop
xchg
in
fimull
cmp
xchg
pop
cmpsl
popf
jp
jmp
push
push
or
js
fsts
cmp
test
jae
stos
cld
sbb
mov
adc
xchg
leave
push
pop
mov
mov
mov
dec
mov
push
subl
loopne
fs
mov
xchg
lret
pop
bound
cld
rcrb
ljmp
mov
lahf
in
les
les
loop
sbb
les
fs
int
popf
int3
test
lods
imul
dec
lds
push
jmp
mov
mov
test
push
aas
je
mov
mov
mov
jns
push
jae
sbb
lahf
add
sbb
adc
xchg
pusha
adc
lods
cltd
int
inc
or
add
or
push
outsb
sub
add
pop
mov
leave
ljmp
fstp
lods
sbb
mov
pushf
sub
push
cmp
in
jns
ljmp
inc
pop
pop
jno
ss
mov
xchg
fcomi
cmp
mov
cmc
push
add
push
adc
outsb
mov
movsl
adc
cmpsb
ds
lret
into
inc
nop
call
or
data16
repnz
dec
leave
push
sahf
and
xor
inc
push
aam
ds
rorl
pop
ja
outsl
inc
pop
or
jnp
gs
pop
loop
aad
cmpsl
sar
test
dec
int
insl
push
and
sbb
clc
test
clc
clc
sti
lods
pushf
mov
pop
xchg
jns
mov
les
scas
push
xchg
pop
dec
inc
test
inc
aad
mov
addr16
dec
mov
adc
sbb
pushf
or
push
out
cmp
int
movsb
call
lods
adc
ja
cmp
xchg
xchg
std
nop
xor
jb
fcoml
repnz
lods
leave
xor
lds
stc
repnz
aam
jg
shlb
insb
mov
add
pop
and
shll
pop
add
sbb
out
sub
clc
mov
jae
pusha
test
aad
out
mov
loopne
jg
cmpb
insb
xchg
popa
inc
les
mov
adc
add
sub
imull
sub
inc
inc
xchg
cmpl
lods
mov
pop
inc
ror
xchg
loop
mov
shr
lods
cmp
push
cmovl
mov
aas
insl
lcall
mov
and
repnz
loopne
lods
inc
xchg
sbb
pop
sbb
and
or
jbe
jns
push
mov
loop
and
sbb
sti
push
pop
insl
add
bound
push
jo
xlat
lds
push
ja
lods
mov
xor
jae
jne
mov
xchg
or
jg
pop
sub
pop
clc
pop
cmp
imull
lret
pop
or
pop
mov
test
ficoml
rclb
fisubl
cmp
push
cmp
add
or
cmp
int
push
sub
mov
ja
std
inc
xlat
push
adc
mov
enter
imul
xor
jne
shll
in
mov
push
adc
pusha
lds
imul
addl
push
jno
xchg
mov
add
insl
xchg
push
mov
xchg
popf
lods
mov
fdiv
test
or
push
cmc
cmp
loope
insl
call
xor
jg
inc
cmpsl
jb
fstl
jge
cmp
mull
scas
cmpsb
push
sbb
mov
insb
xor
fs
incb
test
sbb
push
iret
cmp
adc
outsl
mov
add
out
xor
sub
push
jno
sbb
and
ss
lea
das
fstpl
adc
sub
scas
lock
shl
cli
jl
sub
clc
mov
aam
sub
test
and
push
sub
sub
and
imul
mov
add
inc
test
xchg
mov
mov
addl
dec
mov
lret
ss
inc
movsb
popa
mov
cwtl
xor
mov
in
cmp
xchg
xchg
jp
sbb
cltd
loop
xchg
lea
push
dec
pop
int3
ljmp
adc
stos
fisubrs
lods
mov
dec
jb
in
mov
mov
stc
outsl
fwait
push
jno
popa
ret
es
sbb
and
jmp
jne
push
inc
popf
shr
rol
stos
jns
ja
cmc
cmpl
xor
lods
daa
out
outsl
inc
mov
xchg
std
int
leavew
jns
sbb
mov
push
mov
cmpsb
jge
and
or
out
cwtl
sub
inc
dec
jae
add
bound
xchg
sbb
jnp
mov
jl
icebp
and
dec
les
pop
ss
test
lahf
int
or
push
movl
movsl
cmp
shrl
fldt
push
pop
imul
sti
jmp
hlt
push
cmpsl
jp
repz
data16
xchg
or
cmp
pop
cmp
sbb
loop
pop
aaa
or
mov
cmpsl
data16
fsubs
inc
jecxz,pn
sbb
test
adc
jecxz
cmp
repnz
test
int3
mov
daa
repnz
add
aaa
jmp
outsb
dec
stos
enter
out
jg
push
jle
cmp
ret
mov
add
mov
or
or
dec
rcrb
int
xchg
cmp
lock
lock
hlt
dec
js
xchg
xchg
sti
dec
pop
hlt
in
dec
mov
dec
aaa
ja
loop
sbb
stos
xchg
push
xor
pop
inc
in
add
mov
xor
lods
std
pop
mov
lds
push
add
stos
scas
push
fiaddl
lea
into
push
jne
sub
fildll
addr16
out
mov
lret
cmp
add
xor
iret
in
add
jae
lods
addr16
jne
mov
pop
sub
outsl
les
jecxz
jae
pop
rcrb
push
fsubr
popa
pop
shrb
ljmp
adc
fs
aaa
push
jge
pop
sbb
fs
xor
cmp
adc
dec
stc
sahf
mov
bound
xchg
jmp
mov
ljmp
add
dec
fistl
loopne
mov
imul
adc
cltd
hlt
jl
movsl
mov
outsb
cltd
jecxz
clc
inc
mov
lcall
mov
mov
ljmp
or
cwtl
xlat
jns
push
lahf
lret
or
loopne
aad
shlb
mov
mov
inc
leave
mov
jl
stc
je
jns
nop
pop
mov
in
adc
outsl
int3
add
dec
dec
in
jbe
jmp
xchg
pop
daa
ljmp
mov
and
push
xlat
push
mov
sbb
sub
sub
insl
int3
dec
std
push
scas
cmp
add
in
fimull
jmp
mov
dec
and
cld
dec
ja
xor
dec
mov
pop
orl
sbb
fadd
mov
imul
push
xchg
jne
xor
shr
aas
add
cmp
xchg
adc
sar
pop
fcomp
mov
loope
stc
adc
mov
mov
ja
popf
in
mov
cmp
jo
adc
xlat
xchg
xchg
aam
or
pop
adc
and
loop
and
out
and
fwait
pop
bound
add
jne
push
in
jge
gs
push
add
adc
xor
add
xchg
cltd
xlat
adc
in
push
loopne
ss
loope
sahf
shlb
icebp
push
adc
cmp
mov
xchg
imul
adc
addb
pusha
mov
test
dec
fidivl
cld
bnd
fisubrl
jmp
mov
aaa
xchg
push
mov
pop
add
lahf
ret
jb
arpl
ja
or
aas
xchg
in
cmp
sub
or
not
and
subb
inc
inc
xor
pop
mov
jecxz
pop
rcl
push
clc
push
mov
jle
mov
ret
movsb
or
cmc
std
ret
gs
mov
dec
jo
lcall
cwtl
jge
jp
inc
stos
and
inc
cmp
scas
dec
je
pop
loopne
inc
in
or
imul
xchg
jl
dec
ret
dec
jl
in
insb
mov
lldt
lret
and
mov
pusha
in
xchg
inc
cmp
dec
or
arpl
bound
loopne
xchg
or
push
sbb
lock
mov
push
scas
nop
sub
mov
test
mov
fucomi
js
dec
sub
mov
ret
sti
cmp
sahf
dec
cmp
in
repz
pop
pop
mov
or
jmp
xor
es
imul
adc
roll
inc
mov
sub
add
sbb
mov
add
jnp
adc
rorl
jl
adc
int3
clc
pop
adc
inc
xchg
in
inc
fdivs
gs
xchg
fldl
mov
xchg
mov
xor
or
xchg
pop
lds
test
xchg
inc
stos
cmp
das
or
mov
jmp
cmp
push
addr16
into
ficoml
and
pop
push
sub
mov
test
pop
lret
pop
neg
ds
xor
movsb
leave
fadds
pop
adc
shl
push
pop
dec
fwait
movsb
push
addb
dec
dec
dec
sbb
push
lods
mov
ret
cwtl
push
icebp
enter
mov
mov
add
repz
dec
insl
lock
mull
scas
lods
loop
aad
xlat
dec
jne
pop
push
pop
jne
or
and
push
pop
fnstenv
loop
jmp
addb
cld
pushf
and
adc
xchg
ret
or
jmp
xchg
xchg
push
inc
das
in
push
sti
dec
cmp
inc
out
ds
xchg
push
mov
sti
adc
lock
dec
adc
repnz
xchg
outsb
sub
sub
xor
lock
aas
lret
xchg
cmpsl
int
divl
int
fcompl
rcl
addl
mov
repz
insb
sbb
jecxz
mov
fistpll
ret
aas
pushf
pop
pop
movsb
cmp
dec
test
in
out
les
pop
ret
jb
das
jle
sub
and
inc
sti
pop
rorl
pop
rorl
mov
fisubl
add
adc
mov
inc
cmp
testb
outsl
xchg
sbbl
xchg
push
andl
jnp
pop
pop
and
inc
sbb
imul
addb
movsb
push
sbb
sub
loopne
test
outsl
push
aas
pop
orl
dec
fwait
push
xchg
or
lahf
xchg
or
sub
mov
fiaddl
loope
lods
es
mov
outsl
jl
addr16
xchg
insb
mov
ret
and
movsb
adc
push
ret
xor
push
cs
outsl
por
xor
push
ret
pop
fsubrs
add
fmuls
in
adc
cwtl
pop
jg
loopne
lcall
push
sub
lods
pop
ljmp
andb
aam
mov
pop
add
and
pop
aam
loopne
loopne
shlb
jmp
imul
fsubr
xor
lret
or
xchg
lds
jns
rorb
add
mov
jo
daa
push
sbb
fwait
and
pop
pop
sub
fcompl
push
xchg
jle
outsl
dec
lret
lahf
sbb
cmpb
stc
mov
dec
stc
mov
xchg
aad
scas
xor
adc
mov
mov
jmp
mov
call
mov
jmp
popa
ret
mov
pop
flds
push
mov
hlt
outsl
sub
int
icebp
in
push
pop
aaa
jnp
hlt
flds
mov
aaa
fcomip
pusha
cmp
cmpsb
mov
shlb
sbb
movsl
in
out
adc
fbstp
sub
xor
shr
lret
in
adc
xchg
and
push
popl
jae
jno
lret
andl
js
pop
adc
ds
dec
xlat
mov
fisttps
jl
imul
mov
lret
pop
jmp
adc
cmp
or
cli
stos
jae
filds
push
iret
xchg
dec
mov
pushf
xor
imul
xchg
out
pop
pop
sbb
cmc
xchg
ss
inc
fldenv
mov
repnz
dec
pop
inc
lods
dec
push
pop
ljmp
shl
add
xchg
mov
fisttpl
pop
xchg
inc
mov
out
pop
push
divl
adc
loop
pop
in
add
xchg
out
mov
test
loope
aaa
repz
fwait
and
in
cmpsl
adc
jo
js
ja
adc
inc
cs
inc
sbb
and
and
adc
mov
loope
call
clc
scas
or
push
adc
xchg
mov
mov
mov
insb
ljmp
cld
xor
jle
test
mov
in
fisubrl
and
xchg
sbb
mov
js
out
test
xor
arpl
dec
push
sbb
sbb
mov
dec
loop
pop
frstor
mov
idivl
mov
iret
loope
clc
call
adc
push
sbb
add
jbe
mov
popf
ljmp
adc
lods
jbe
and
pop
xchg
ja
xor
or
nop
leave
mov
cwtl
mov
mov
dec
gs
sbb
jmp
insl
int3
iret
cmp
out
shl
lods
mov
or
sbb
sbb
paddq
stos
pop
push
sbb
pop
lret
loopne
pop
sub
lret
jnp,pn
xchg
and
loopne
fwait
out
sub
out
sbb
push
pop
jmp
outsb
jnp
insl
cld
inc
fisubl
loope
push
in
pop
cmp
pop
das
sub
adc
adc
mov
shrl
test
popf
mov
mov
xlat
xchg
fsts
push
mov
adc
mov
aas
xchg
mov
nop
inc
mov
stc
aas
test
insl
dec
mov
lcall
and
sub
push
leave
gs
mov
push
test
mov
jo
clc
lahf
pop
imul
decl
lods
jge
or
or
mov
hlt
mov
out
bnd
mov
mov
or
sub
pop
adc
jb
cld
mov
subb
call
out
outsb
ja
pop
es
sqrtps
js
lret
nop
jmp
cmc
and
or
test
xchg
mov
cmpl
mov
pop
cld
dec
sbb
sbb
sar
sarb
lods
in
and
jmp
bound
sbb
xor
rol
inc
cmp
out
das
and
inc
movb
mov
scas
outsb
test
push
dec
and
or
push
imul
ret
idivl
imul
inc
loope
push
rclb
jge
lods
xchg
sub
jbe
jns
in
sub
xor
push
mov
bound
xor
repz
mov
cmpsb
or
jo
insb
push
mov
loopne
push
add
dec
push
mov
mov
bound
cmp
daa
nop
push
lret
repz
shll
nop
jae
cmp
int3
in
xchg
jno
mov
gs
test
add
inc
repnz
lcall
jb
push
pop
jae
sbb
xchg
mov
rorb
loop
xor
aas
xchg
or
mov
aas
mov
mov
add
add
mov
inc
push
sub
jl
aaa
pop
cmp
dec
bound
pop
push
imul
mov
jl
adc
aas
out
or
jge
js
adc
cmp
hlt
icebp
and
mov
lea
mov
pusha
out
les
xor
test
dec
scas
and
leave
test
adc
jns
inc
dec
cltd
mov
jp
sub
sub
inc
or
lods
and
xor
rcr
pop
movsl
pop
flds
arpl
cmp
jbe
outsb
xchg
pop
aam
cmp
clc
xchg
push
and
insb
mov
aad
xchg
cmpsl
pop
ds
and
mov
mov
gs
fbstp
xchg
xchg
jbe
pop
test
fldl
in
aam
loope
loopne
jle
sub
dec
stc
and
fstps
add
lea
inc
js
loopne
add
flds
test
pop
lock
sub
push
sbb
rcr
cmp
sub
mov
sahf
push
bound
mov
std
mov
inc
bound
pusha
ret
xor
and
pop
outsb
push
call
dec
out
lea
mov
hlt
fimull
dec
push
data16
or
push
inc
push
cli
sub
mov
fcmovu
mov
andl
outsl
mov
sub
sti
rorb
jmp
scas
arpl
lea
adc
jmp
mov
sub
push
mov
dec
add
adc
push
xchg
push
aas
mov
add
int3
dec
enter
in
fsubp
pop
outsl
rcrb
cmpsl
scas
add
imul
jle
mov
test
xchg
dec
test
shrl
arpl
xchg
jo
loopne
repnz
mov
lcall
or
and
push
loop
popa
iret
sahf
xor
xlat
sbb
pand
add
jns
jbe
dec
or
arpl
fildl
lcall
mov
adc
add
xor
fdivrs
cmp
sbb
ret
add
lods
inc
sti
jnp
in
popa
flds
hlt
xor
and
inc
xchg
cli
enter
out
jo
xchg
movsb
fldl2t
mov
pop
fs
cmp
cmp
movsl
mov
dec
clc
outsb
push
inc
notb
cltd
divl
or
adc
filds
cltd
mov
mov
or
ljmpw
sbb
cld
movsb
jmp
jl
out
int
ret
or
mov
in
push
adc
xchg
pop
add
mov
enter
out
clc
mov
lret
jp
mov
loopne
imul
hlt
int
xchg
stc
add
inc
lods
and
sbb
gs
test
push
lods
fiaddl
fiaddl
stos
push
jle
out
movsb
add
scas
dec
ss
mov
in
inc
out
and
clc
test
dec
vsqrtpd
rorl
cld
and
leave
mov
jnp
jge
fstps
jo
xor
add
and
mov
xchg
cmp
mov
mov
mov
popa
rep
leave
cmc
mov
test
push
cli
dec
mov
push
fwait
xor
and
push
lods
in
sar
imul
cmp
jno
pusha
fstpl
ror
xor
push
out
mov
mov
loopne
jge
aam
imul
lds
mov
mov
and
ret
sub
cmpsb
jecxz
lgdtl
bound
sti
leave
loopne
cs
sub
sbb
fcoml
test
xor
sbb
adcl
or
icebp
dec
xchg
mov
push
test
and
inc
std
addl
and
inc
sub
mov
cmp
lret
mov
jno,pn
out
mov
pop
fs
mov
cmc
mov
or
movsb
sub
out
aam
push
push
inc
out
loop
clc
cmp
ret
push
pop
icebp
mov
lret
adc
xchg
and
or
imul
imul
xchg
sbb
bound
xchg
xchg
lcall
xchg
inc
jecxz
xchg
cli
dec
test
pop
gs
pop
frstor
push
aam
jle
dec
fimull
jl
loopne
rcll
jmp
xor
lods
xchg
lret
xchg
addr16
bswap
pop
push
iret
lods
aad
fimuls
sub
xor
repz
fisubrs
arpl
subl
xchg
jno
jns
xlat
arpl
shrb
cmpsb
les
fisttpll
fcomps
push
xor
in
jge
push
test
ja
ret
adc
pop
xor
and
push
jne
mov
subl
adc
or
pop
movsl
dec
xchg
or
pusha
fadd
sbb
push
ds
xchg
daa
pop
sub
lds
pandn
rcr
lds
iret
inc
dec
xlat
xchg
jnp
pushf
mov
push
hlt
and
or
sub
cmp
rcl
adc
bound
lret
and
mov
sbb
loopne
out
out
mov
ret
cmpb
call
add
fsubrl
aas
mov
repnz
adc
push
cli
aaa
cmp
test
add
scas
mov
push
and
dec
repnz
bound
enter
call
and
sub
xchg
test
xchg
push
push
sbb
mov
icebp
bnd
shll
sub
pop
inc
sub
in
push
add
les
adc
aas
cwtl
jg
push
xchg
push
repz
icebp
mov
aaa
push
sbb
ror
pop
mov
inc
ds
sub
inc
adc
inc
mov
das
inc
and
rcrl
inc
popf
or
mov
sbbl
xor
pop
xchg
cli
sub
sar
sub
or
or
xor
jmp
jle
or
pop
int3
das
pop
mov
jo,pt
call
mov
sbb
adc
loop
out
in
xchg
xchg
aaa
mov
clc
test
jne
insb
pop
jecxz
adc
testb
icebp
xlat
repnz
jge
clc
or
mov
stos
popa
fsts
scas
lahf
out
cmp
sub
cmp
cli
or
cmpb
jecxz
jmp
loopne
je
dec
pop
or
mov
test
sub
loop
or
sub
mov
and
push
cmp
shl
js
sub
pushf
xor
add
out
sub
dec
pop
xor
mov
lcall
add
lods
fstpt
jns
test
lret
jmp
cmc
xchg
loop
adcb
repz
lret
mov
out
repz
out
insb
sbb
jg
cmp
cmpsb
sub
popa
je
insb
and
sahf
and
xchg
mov
pop
sahf
cmc
push
add
enter
and
mov
dec
fucom
shr
ss
inc
stos
cmp
pop
or
ret
jno
mov
stos
pop
cwtl
jae
sahf
inc
xor
fimuls
xorb
mov
es
or
mov
inc
or
jo
jecxz
out
in
andb
lods
mul
cmp
roll
aas
loop
ljmp
icebp
pushf
out
mov
dec
lods
imul
hlt
adc
mov
ficoml
add
out
bound
or
insl
lea
lods
mov
inc
test
and
jnp
pop
add
or
sub
int
hlt
cmp
les
into
jmp
xor
scas
or
lret
repnz
fistl
lods
mov
addb
aaa
add
or
cwtl
sbb
ret
add
xchg
ret
xchg
out
add
pop
repnz
ljmp
mov
jnp
mov
sbb
cmp
adcb
call
movups
dec
or
popa
int
mov
pop
jecxz
jle
repz
jnp
push
outsb
mov
xor
jge
je
dec
aad
loope
inc
fdivrs
cmp
push
push
push
push
add
sbb
or
jg
lock
data16
aaa
ret
movsb
aad
fimull
sub
or
adc
popa
shlb
mov
test
in
fwait
sbb
dec
jmp
adc
jl
inc
cwtl
sbb
fisubrs
lret
sub
push
shrb
mov
dec
mov
and
test
iret
push
jge
gs
in
stc
rcll
fwait
test
and
xor
test
es
add
mov
xor
mov
and
or
mov
jge
ficoml
mov
xorb
cwtl
aas
in
fidivl
ljmp
aad
mov
pop
mov
mov
repnz
add
push
int
mov
test
sbb
sbb
xchg
mov
test
and
mov
pushf
stos
test
dec
int3
cmp
call
jmp
mov
jnp
xchg
bound
and
dec
sub
add
inc
mov
imulb
arpl
or
inc
adc
iret
jge
push
pop
cmc
and
and
in
jle
xor
fisttpl
inc
jmp
cmp
insb
fcoms
jo
or
cmpsb
push
dec
jmp
cmp
sbbb
shlb
inc
fcoms
inc
gs
imul
shrb
xor
sub
fildl
xchg
pop
nop
loop
push
xchg
cmp
mov
cmp
cld
push
repz
adc
fs
sar
testb
dec
and
lea
int
out
add
es
test
sub
add
xchg
aas
dec
push
mov
xor
cmp
pop
stc
push
icebp
mov
add
les
clc
sub
or
movsb
cmp
mov
xor
ret
lcall
jns
sbb
mov
dec
inc
test
int
push
cmpsl
imul
outsb
cmp
jo
mov
jbe
cwtl
lock
push
push
push
xor
inc
ret
outsb
jmp
cmp
clc
lds
ret
dec
xor
inc
outsl
xchg
sbb
movsl
adc
pop
aam
cmc
push
rclb
int
or
aad
movsb
jo
test
lea
inc
aaa
xor
sub
hlt
adc
insl
xacquire
les
pop
enter
lock
mov
scas
popa
push
pop
jl
fidivrl
les
inc
cld
movsb
jg
jnp
outsl
rcll
iret
enter
mov
cmp
lods
push
or
and
imul
lods
pop
mul
cmp
sti
add
das
dec
mov
fstpl
and
push
push
outsw
out
dec
imul
mov
dec
cmp
xor
in
fsts
push
xchg
loopne
stos
addl
lret
orl
inc
mov
dec
mov
xor
movsb
out
xchg
lret
int3
xor
inc
inc
int
gs
dec
mov
xor
mov
lds
or
mov
ret
repnz
cmpsl
cmpsb
jmp
xchg
cmp
icebp
mov
testb
and
pop
leave
add
into
pop
cmpsb
cmc
push
mov
out
jmp
cmp
cmp
aad
clc
cmp
sbb
and
mov
add
fldcw
xor
fcmovnu
pop
mov
loop
lcall
xor
jo
xor
xor
notb
les
and
mov
addr16
pop
or
cld
dec
mov
mov
add
fiadds
sub
mov
cmpsb
lret
xchg
in
int
pop
test
inc
daa
outsl
sbb
cmp
push
cmp
adc
lock
mov
daa
pop
cmc
inc
xchg
mov
xchg
mov
adc
push
dec
adc
push
mov
cli
test
dec
roll
xrelease
dec
scas
cmpsb
sbb
popa
fidivs
mov
and
fnsave
lea
cs
mov
xchg
mov
loope
push
jmp
xchg
adcl
sbb
js
dec
leave
push
or
movsb
cmp
arpl
add
adc
daa
cmp
add
inc
leave
push
out
fstpt
fsts
xchg
or
and
scas
xchg
dec
mov
push
xor
cltd
rcrb
fs
jo
xchg
xchg
push
jae
jge
out
sub
jb
ja
pop
dec
mov
or
sbb
test
add
jbe
fcmovnu
pop
test
xor
mov
mov
xchg
mov
jg
mov
jp
add
dec
ficoms
and
scas
fmuls
cmpsl
insl
fmull
fcoms
cmc
push
das
jmp
loope
inc
push
sahf
jmp
xchg
scas
and
loopne
ljmp
mov
mov
mov
repz
fcmovne
xchg
cmpsb
insb
hlt
lahf
cmp
lock
test
sub
and
or
cli
in
int3
call
pop
data16
lahf
sub
hlt
adc
or
pusha
iret
outsl
cli
sbb
fwait
mov
pop
fcmovnbe
mov
or
xchg
pop
sub
or
gs
mov
stc
mov
out
mov
xor
pop
jbe
test
add
out
xor
cmp
xor
mov
jle
jle
movsb
sub
fcomp
cmp
xchg
outsl
arpl
dec
ljmp
test
in
mov
in
rcrl
jae
lock
sub
inc
repz
stc
nop
ja
inc
mov
je
pop
and
sub
xorb
pop
scas
dec
and
push
test
mov
fwait
push
mov
negl
push
push
adcl
xchg
ljmp
gs
adc
fidivl
cld
repnz
enter
outsl
out
xchg
cmpsl
cs
idivb
enter
ljmp
sbb
rorb
shl
aas
fstl
cmp
lods
sub
mov
addr16
aaa
mov
mov
rolb
cmp
scas
cli
cmp
lock
mov
mov
nop
sbb
in
loop
and
fmuls
or
in
mov
or
arpl
push
fists
add
popf
loop
push
mov
loope
xchg
jmp
xchg
mov
test
sub
ss
rcll
xor
call
inc
xchg
imulb
test
inc
cmc
repz
lret
mov
pop
push
out
push
push
pop
or
loope
lds
js
mov
jns
xor
out
mov
and
or
xchg
shl
dec
cmp
stos
jecxz
or
repnz
mov
sarb
push
call
dec
mov
dec
add
inc
les
call
out
jp
push
push
in
inc
pop
mov
lods
aad
ret
sbb
cld
pop
and
hlt
repnz
dec
inc
mov
in
fsub
rcrb
sub
dec
stc
fwait
sbb
push
mov
sub
test
scas
jle
loopne
popa
mov
dec
nop
add
insl
stc
mov
mov
les
inc
les
or
mov
js
cmpsl
push
std
clc
jnp
inc
add
jne
adc
movsb
pushf
shl
ror
sub
sub
ud2
dec
jns
mov
add
sahf
sbb
pop
pop
std
pop
add
cwtl
je
call
jmp
mov
xor
out
xorb
sub
es
popa
add
inc
mov
push
jge
sub
ret
mov
and
es
mov
lret
ss
cmp
es
xor
mov
mov
fcmovnu
in
add
roll
cmp
lcall
inc
addr16
or
sbb
repnz
dec
inc
mov
sbb
and
pop
or
ss
xchg
test
sarl
pop
xchg
sbb
jg
orl
sarb
or
jg
jne
rcrl
test
lea
sti
push
pushf
xchg
inc
jp
aas
xlat
adc
test
mov
dec
pop
dec
movsl
js
jae
xor
mov
addr16
test
sub
cmpsb
and
push
ljmp
mov
leave
fidivrs
stos
mov
inc
or
add
ret
mov
inc
add
inc
mov
test
popa
sbb
imul
aam
outsb
cwtl
push
pop
iret
inc
lock
xchg
fwait
jns
mov
adc
mov
data16
pusha
mov
hlt
mov
ret
or
pushf
xor
repz
jl
cmpsb
repz
add
push
test
inc
cli
jo
in
scas
repz
jnp
jns
sbbb
test
addr16
mov
add
mov
fidivrl
fimuls
cmp
in
add
xor
cmp
dec
push
and
jmp
cltd
inc
push
or
jae
sti
cld
xlat
dec
xor
test
ljmp
or
rorl
or
icebp
add
dec
add
orl
fstpt
sub
cmpsl
jge
aam
mov
push
bound
ror
cmp
cmp
dec
int
push
inc
jne
inc
pop
and
cmp
mov
fcomps
loop
xlat
mov
fmuls
ds
sahf
test
call
stos
pop
adc
push
pop
lret
rcrl
fcmovb
push
or
data16
xchg
in
insl
repnz
push
fstpt
mov
cs
movsl
lock
int
pop
out
ljmp
sub
mov
or
imul
or
shrb
arpl
push
test
jns
jnp
jl
dec
call
cmp
add
divb
ret
sub
shll
div
sbb
in
into
push
dec
jl
testb
mov
xor
lods
cmpsl
pushf
or
ja
test
and
orb
xchg
scas
and
jmp
lahf
ja
lock
xchg
dec
je
out
std
mov
cmp
fst
pop
and
or
push
movhps
pop
lock
adc
adc
cli
call
pop
repnz
add
lea
and
add
popf
ficoms
in
or
mov
xor
push
add
ja
mov
xchg
adc
sbb
fsubrl
inc
cmp
lock
clc
shr
shl
lock
icebp
jae
notb
ficoml
xor
sub
adc
add
repz
fsubr
mov
subl
mov
mov
sbb
lea
test
sbb
mov
sbb
jb
pop
jbe
icebp
cmp
pop
stc
push
out
repnz
fisttpll
sbb
sbbb
pop
pushf
sub
lea
sbb
shlb
cmp
movsl
or
movsb
xchg
xchg
fildl
lret
and
sub
or
lock
cmpsl
je
or
scas
cmp
scas
pusha
xor
int3
in
out
mov
sub
mov
ljmp
push
leave
loope
fidivs
push
testl
mov
inc
xchg
lret
inc
testb
mov
mov
fbstp
rcrw
bound
sub
xor
je
mov
push
adc
sub
mov
sbb
stos
rcrl
cmp
call
icebp
push
mov
dec
mov
mov
push
fdivr
mov
add
test
out
nop
jl
dec
push
xor
lods
iret
orl
outsl
xchg
adc
test
lods
mov
lret
pop
jae
cmpsb
xchg
sbbb
mov
scas
xchg
mov
xchg
pop
orb
jbe
jb
cltd
cmc
in
push
fs
mov
push
ljmp
push
sbb
mov
bnd
loop
cltd
mov
pop
add
outsb
loope
enter
push
mov
imul
fstps
dec
mov
leave
lret
xor
pop
movsb
mov
hlt
sahf
and
cs
ret
aad
stc
cli
and
adc
xchg
pop
aam
pop
push
adc
add
stc
add
scas
sbb
fsubrl
ljmp
dec
sub
out
fwait
sbb
jnp
lock
test
xor
xor
xchg
cmp
movsl
addr16
fcomi
xchg
adc
xchg
cwtl
jb
xchg
pushf
xchg
shrb
call
dec
add
cs
sbb
es
pop
fnstenv
lock
int
mov
out
jne
jbe
mov
mov
mov
adc
pop
adc
add
movsb
xchg
idiv
xor
add
push
and
push
xor
bound
idivl
bound
hlt
cltd
nop
imul
and
push
cmp
int3
sub
mov
fs
mov
lock
fst
pop
jo
test
adc
insb
movsl
sub
or
mov
cld
sbb
nop
and
repz
add
mov
xlat
mov
jmp
addl
icebp
dec
dec
inc
out
pop
mov
fwait
clc
je
orl
pop
jbe
push
outsb
ret
mov
pop
lds
int3
xchg
lret
cmp
insb
loop
loop
aad
adc
fildll
jo
inc
in
shll
aaa
and
cmpsl
xchg
sbb
int3
pop
dec
jl
add
push
jb
push
mov
sub
insl
pop
out
xchg
ja
test
jne
pop
sbb
test
mov
adc
xor
out
add
xchg
and
xchg
sbb
dec
sbb
addr16
mov
popf
out
mov
push
sub
rcl
inc
sbb
stos
subb
jl
push
test
pop
lods
cmpsl
ds
popa
test
mov
icebp
aaa
push
frstor
lods
mov
mov
pop
sub
inc
sbb
clc
shr
cmpsb
push
mov
sub
call
hlt
mov
out
cmp
cwtl
inc
rorb
sub
lret
rorl
loope
insb
push
aad
push
outsb
add
add
inc
stos
in
lock
pusha
push
loope,pt
ret
cwtl
push
orl
jecxz
add
xchg
jecxz
mov
mov
inc
xchg
les
fwait
sub
push
and
inc
int
sbbb
push
ret
je
sub
fs
inc
xor
repnz
pop
movsl
xchg
dec
inc
add
ret
mov
pop
mov
inc
sbb
inc
ljmp
pop
sub
push
fnstsw
adc
je
and
push
outsb
add
jp
sbb
cmp
pushf
decb
lods
out
jno
add
mov
jl
inc
cmp
outsl
popa
add
or
je
sub
pushf
xchg
hlt
inc
cmpsl
ds
xchg
mov
notb
mov
cmpl
dec
bound
and
mov
xchg
sbb
outsl
in
jo
push
ljmp
or
push
sbb
scas
mov
stc
jmp
in
add
jp
pop
mov
daa
pop
clc
xor
sub
add
int3
dec
adc
mov
and
push
andl
ret
push
jbe
mov
jb
incb
popa
sub
imul
loopne
mov
mov
pop
jle
mov
aam
jmp
adc
lock
and
int3
fs
popa
or
adc
push
adc
out
sbb
pop
adc
fldl
sbb
sbb
mov
ret
rol
mov
xchg
scas
lods
mov
push
out
pop
cld
imul
xchg
lret
jg
jo
test
loope
pusha
inc
xor
add
notb
mov
pop
xchg
pop
movsl
or
add
add
js
jns
enter
cmp
xchg
sub
push
xor
daa
lcall
std
scas
mov
push
xchg
push
pushf
mov
xchg
xor
xchg
das
add
sbb
popl
sbb
fcoml
adc
hlt
sbb
int3
test
cmc
add
push
fstps
push
push
push
sti
rcr
pop
daa
outsb
cmp
cld
bsf
adc
je
mov
xchg
sahf
jp
cmp
bound
adc
cmpsl
fldt
inc
in
sub
out
xchg
push
fildl
roll
movsl
ficomps
aaa
dec
xor
mov
les
fcoml
push
cmp
insl
daa
sbb
cmp
lods
mov
or
xor
pusha
mov
add
xor
adcb
xor
xor
loopne,pt
repz
ja
jp
icebp
mov
push
adc
popf
bnd
pop
loopne
lret
or
pop
pop
push
push
jl
dec
mov
mov
push
sub
mov
das
jg
out
repnz
or
pop
aam
xor
nop
ret
icebp
add
dec
xor
mov
inc
mov
stos
adc
pop
dec
adc
and
jns
adc
pushf
pop
push
jecxz
push
int
adc
mov
dec
sbb
jge
mov
jno
imul
xchg
sbb
pop
push
xchg
out
fwait
push
or
dec
mov
sbb
ljmp
sbb
cwtl
addr16
and
aam
pushf
lret
mov
jge
push
repnz
lret
mov
andb
mov
mov
rcrb
push
adc
fiadds
and
divl
je
mov
mov
jnp
and
out
pop
adc
jecxz
loope
ljmp
lds
fldl
pop
imul
mov
mov
cli
pop
dec
mov
jbe
xchg
push
cs
pop
pop
outsl
push
jg
mov
mov
movsb
test
rcrl
mov
roll
inc
adc
push
xchg
dec
mov
lcall
inc
add
fwait
pop
fs
mov
es
and
inc
jmp
jl
push
jmp
sti
aad
call
insl
inc
xchg
xlat
movsb
jmp
imul
imul
adc
inc
mov
std
stc
pop
cltd
xor
das
mov
push
cmp
popf
pop
das
and
rcrl
andl
bnd
xorb
xchg
jp
mov
outsb
hlt
into
pop
push
push
push
lcall
out
pop
jnp
mov
jg
xchg
or
add
fldenv
cwtl
ljmp
jmp
or
adc
rorl
jmp
sub
mov
xor
cld
or
dec
enter
jg
out
lods
movsb
xchg
add
xchg
inc
dec
xchg
adc
pop
in
outsb
pop
aaa
lods
call
sahf
rcrl
push
mov
aad
and
mov
fsubrp
adc
test
pushf
add
int3
jg
mov
lods
mov
push
jecxz
adc
mov
sub
jns
imull
mov
add
cmpsl
cmpsb
or
jmp
nop
cmpsb
das
sbb
jmp
or
call
inc
repnz
sub
rclb
icebp
mov
scas
hlt
mov
fdiv
mov
cmp
add
mov
lds
movsb
in
in
add
sbb
dec
cmp
cwtl
aad
mov
shl
jecxz
push
push
imul
ret
fdivs
inc
out
subl
or
mov
jmp
add
sbb
in
mov
cmpsl
cld
mov
in
cwtl
hlt
loope
dec
dec
outsl
mov
aad
enter
cmp
xor
inc
idivb
mov
sub
int3
aad
lds
xlat
lcall
pop
pop
add
mov
or
out
jecxz
aad
cmp
cmpsb
xchg
xor
add
std
pop
test
cmc
movsbl
sub
jecxz
test
jnp
jae
adc
sub
ja
or
adc
fcompl
loope
mov
push
call
mov
mov
vmovq
insb
push
es
cld
stos
arpl
sti
cmp
js
mov
pop
mov
lods
xchg
mov
lret
cltd
add
jg
enter
pcmpgtb
in
sbbl
aad
mov
ja
aam
cs
cmp
ret
mov
jb
jl
mov
lods
pushf
or
comiss
andl
xchg
pop
das
stc
inc
loop
fcmovnbe
adc
sbb
je
bnd
divl
jno
push
ja
fsubl
adc
ret
pop
mov
imul
or
repz
sub
dec
xor
pop
sub
inc
aad
in
dec
in
lret
push
sbb
push
adc
stos
inc
sub
lret
xchg
int
pushf
or
ja
imul
and
imul
cmc
jnp
ljmp
loop
cmp
inc
cmp
jns
fs
in
add
into
or
movsb
sbb
cmp
sahf
adc
std
and
movsb
jbe
shl
popa
lcall
fldcw
mov
xchg
mov
sub
mov
test
mov
push
lcall
dec
xchg
push
mov
mov
or
cmp
in
or
sarl
and
sbb
lea
jnp
negl
pop
mov
int3
into
mov
in
or
jg
aas
fidivrl
data16
mov
xchg
mov
jno
and
xor
pop
aas
xor
lret
fstpl
mov
cmp
sahf
out
cmp
mov
scas
mov
fs
lret
cmpsl
inc
test
push
xchg
dec
dec
gs
cs
add
ljmp
mov
out
dec
out
adcb
push
in
dec
mov
dec
jl
push
ljmp
push
jg
fwait
inc
add
je
add
mov
lds
dec
stc
mov
rolb
enter
test
icebp
mov
scas
sbb
mov
loop
push
and
mov
mov
cmp
cmpsb
cld
sbb
loope
leave
jecxz
lock
outsl
out
popf
push
dec
dec
pop
ss
loope
enter
mov
pop
xchg
fildll
dec
movsl
jbe
hlt
fwait
jnp
fwait
into
js
shll
pop
test
inc
or
jne
test
dec
pop
leave
lcall
sbb
in
inc
das
popf
jne
dec
pop
sti
fs
ss
xor
push
xchg
shr
and
dec
mov
jle
inc
cld
inc
cmp
lret
lods
or
mov
push
call
ja
dec
dec
add
mov
xchg
cmp
sbbb
cld
jmp
jo
adc
bound
pop
cmp
fwait
cmpsl
ficoml
inc
lods
cmp
fisubrl
inc
sub
mov
inc
mov
sbb
fimull
lret
lcall
lock
or
in
lret
adc
icebp
ljmp
mov
cmp
shlb
movsl
jb
flds
sti
movsl
mov
xor
jne
pop
inc
adc
mov
ss
and
std
push
rclb
hlt
mov
mov
mov
cltd
sbb
je
cs
popf
xor
jnp
pop
adc
xchg
jne
and
and
cmpsb
and
aad
insl
jb
les
leave
mov
ds
xor
fimull
mov
mov
cmpsl
cmpl
and
mov
aaa
enter
fbstp
sahf
mov
orl
adc
shlb
adc
sub
pop
rorb
pop
inc
push
ss
loopw
stos
mov
xlat
aam
scas
cli
inc
out
lock
pop
mov
test
mov
jl
xorl
push
cmp
sarl
mov
insb
sbb
ljmp
stc
call
mov
push
out
jb
cmpsl
aad
mov
fbstp
lea
or
rcr
jno
sub
mov
sti
xor
sbb
inc
rclb
mov
ficoms
adc
dec
cmc
iret
pop
mov
test
fistps
loope
fcompl
cmp
mov
jns
int3
cld
fs
and
jbe
cmc
or
popa
jns
or
ljmp
pop
mov
or
ficoms
mov
dec
cmp
cmp
not
and
imul
sub
xlat
lds
imul
push
loope
mov
jg
pop
mov
ds
out
jmp
pop
pop
fisttpl
test
mov
inc
mov
push
cmp
xor
push
xchg
xor
imul
mov
or
fs
enter
pop
out
jge
inc
cmp
js
in
push
mov
jnp
xchg
daa
test
shl
rcll
adc
rcrb
cld
addb
inc
test
push
ficoml
pop
fs
push
or
stc
icebp
xor
cs
or
adc
test
push
push
cmp
lret
jbe
and
mov
sbb
jbe
test
add
inc
inc
adc
test
jno
shrl
or
jne
xchg
jnp
jecxz
pop
imul
pushf
adc
icebp
out
xchg
xor
push
xlat
call
push
mov
and
push
leave
and
in
sub
add
ret
pop
pusha
or
ljmp
lret
pop
ret
adc
out
std
enter
lods
mov
cwtl
movsl
iret
pop
xor
cli
cmc
adc
in
aas
out
jno
icebp
sbb
out
movsb
leave
cmp
js
jnp
and
inc
fnstsw
sub
movsb
lcall
pop
out
aas
in
or
shll
cltd
lret
dec
ret
cmc
cmpsl
xor
cmpsb
mov
xor
mov
addr16
test
fdivs
lock
mov
cwtl
stos
std
leave
adc
fldcw
mov
cs
lods
or
shll
mov
test
std
sti
les
psrld
in
fs
xchg
mov
rcl
movsb
mov
scas
inc
insl
repnz
popf
loope
mov
scas
lock
xor
dec
fcoms
pop
enter
xchg
inc
jnp
sub
outsb
mov
and
in
and
pop
int3
cmp
cld
test
inc
lret
ret
xchg
xchg
ret
dec
stc
lret
arpl
add
nop
sarl
and
mov
enter
mov
mov
cmp
sahf
out
cltd
xchg
lods
or
cmp
je
aaa
inc
call
sbb
sub
sti
jmp
push
xchg
jp
jp
rcl
scas
mov
lods
jge
jecxz
js
mov
lock
mov
mov
xor
insb
inc
aas
mov
xchg
out
scas
jl
mov
add
shll
inc
outsl
mov
push
pop
loope
daa
std
xor
sahf
loope
cltd
push
cmp
jnp
add
loope
xlat
into
test
in
xor
cmp
out
mov
rolb
push
lret
xlat
jl
jmp
pop
lea
or
sbb
aad
inc
jp
pop
xchg
mov
jle
and
pop
inc
aaa
mov
arpl
and
push
sbb
in
mov
jbe
fsts
mov
je
sub
scas
xlat
mov
loope
cli
int
ret
sub
pop
and
out
push
dec
jge
pusha
subb
cmp
push
mov
mov
cld
cmpsb
pop
outsb
or
int
cmp
lahf
imul
jne
jno
addl
sbb
outsl
mov
lods
mov
add
xchg
jbe
int
mov
xor
adc
push
iret
pop
inc
and
xor
mov
arpl
inc
sbb
ljmp
aas
sub
xor
insl
xchg
xor
mov
sbb
xor
cmc
sub
sub
les
repz
into
mov
into
insb
dec
int3
popa
mov
or
xlat
dec
push
mov
scas
sub
lea
or
sub
shlb
aad
xchg
dec
in
repnz
test
addr16
dec
jmp
mov
dec
jno
push
push
and
jno
pop
outsb
movq
inc
mov
out
pop
dec
movsl
jmp
out
or
or
call
cmp
jns
or
adc
sub
or
imul
push
fdivl
dec
mov
fdivr
ret
inc
dec
cmpsl
in
cmp
or
fistps
repz
push
push
stc
sarl
mov
xor
lcall
pop
mov
mov
out
and
sbb
pop
loope
movsb
movlps
push
sbb
idivb
jecxz
sbb
cmp
xor
js
bound
jns
xchg
nop
imulb
in
sub
add
mov
les
jge
fs
stos
sub
mov
pop
push
call
push
mov
or
inc
ret
loop
cmpsb
std
int3
xchg
iret
push
lods
mov
sahf
cmp
xor
call
cld
mov
sbb
enter
mov
adc
aas
fmull
dec
scas
lock
mov
jne
jo
fdivl
les
mov
push
jns
mov
xor
sbb
fmuls
mov
inc
shll
sub
shrb
out
xchg
enter
mov
flds
jb
adc
fdivs
xchg
cwtl
dec
fwait
fs
aam
test
ljmp
xchg
adc
jl
lret
hlt
mov
outsb
sarb
ret
or
fld
pavgb
out
cli
push
iret
insb
loope
sub
gs
jae
dec
out
inc
popa
ja
jecxz
fiaddl
cmpsl
ja
xor
inc
pop
enter
in
push
data16
add
mov
fwait
nop
sbb
shl
in
imul
push
inc
sbb
in
out
test
jecxz
loope
push
jns
mov
or
cmp
adc
mov
cmc
scas
sbb
in
dec
sub
cmpsb
mov
fidivs
pop
and
push
in
mov
xor
sbb
cmp
test
and
xor
ror
ret
add
xor
and
xor
fdivrl
jne
dec
in
jl
inc
and
jne
cs
popf
fcomp
test
pop
and
push
scas
xor
bound
or
jp
push
ja
out
xchg
je
push
jp
aas
sbb
pop
sbb
sbb
cmp
pop
fcmovu
push
inc
xchg
xchg
add
mov
push
outsl
mov
mov
add
xchg
cs
cwtl
sbb
iret
cmp
popf
add
lahf
sahf
xchg
rolb
jnp
mov
addb
out
pop
add
and
jl
imul
sub
mov
add
mov
into
cmp
pusha
ret
loopne,pn
jg
sub
rcl
subb
push
add
xchg
loope
cmp
sahf
rol
mov
and
mov
gs
enter
test
jecxz
sub
jne
cltd
jl
or
dec
mov
sub
pop
mov
dec
xor
push
add
cmp
jp
sbbl
lods
sub
mov
push
into
ret
into
stc
enter
shlb
out
lahf
test
and
pop
data16
sub
lods
lret
jp
adc
sub
mov
adc
sub
sub
lods
js
mull
xor
pop
push
jns
sbb
lret
or
nop
imul
je
inc
testl
xchg
sub
push
lock
test
movsl
nop
dec
sbb
mov
xlat
std
cmp
push
in
outsl
test
sub
lods
xchg
sti
sbb
xchg
out
xor
in
or
lock
fwait
push
fs
adc
cmpsb
mov
shl
adc
push
pop
and
inc
idivl
push
cmp
push
xor
mov
je
cmp
aam
pushf
ljmp
test
fwait
pop
cmpsb
fiaddl
sbb
cli
pop
inc
xchg
cmp
mov
lret
cmp
lret
pushf
add
loopne
call
roll
dec
pop
xchg
and
jnp
mov
mov
shr
ss
shll
int3
adc
mov
cli
mov
pop
sti
int
or
les
shll
iret
or
adc
mov
sbb
sub
stos
iret
pop
int3
es
mov
std
cs
adc
icebp
dec
outsl
jb
in
adc
repnz
mov
push
mov
and
mov
mov
mov
pop
sbb
and
jns
int
ja
push
dec
outsl
aam
fisttpl
cmp
pop
mov
setnp
test
mov
pop
into
inc
movsb
xor
stos
pusha
pop
mov
loopne
jecxz
dec
ds
jne
inc
pop
mov
cmp
jns
xchg
pop
je
xor
imul
iret
sar
pop
push
and
pop
inc
or
mov
aam
and
fstps
out
loopne
in
dec
add
mov
mov
test
sbbb
sub
shlb
leave
xor
inc
addb
add
jbe
lea
test
jle
clc
xchg
pop
pop
or
sub
jle
sbb
push
repz
jmp
lret
in
inc
cmp
mov
pextrw
jae
mov
mov
mov
push
mov
pop
pushf
pusha
jno
jg
outsb
jne
int3
mov
mov
push
aad
add
xor
xchg
sbb
xor
test
imul
inc
jmp
repz
pop
out
cmp
popa
dec
fwait
pop
cmp
pusha
in
and
dec
icebp
pop
cmp
addr16
cmpsb
arpl
or
subl
ljmp
mov
inc
sbb
mov
mov
and
pushf
ds
xor
mov
shrb
jo
divl
psadbw
sti
inc
fdivr
or
sbb
or
inc
xchg
mov
push
mov
sarl
mov
in
dec
insb
cld
aad
test
lock
cld
xchg
mov
int3
or
mov
mov
arpl
mov
push
fldt
lahf
and
daa
pop
popf
mov
ret
mov
push
dec
or
pop
in
mov
sbb
xlat
dec
mov
mov
push
push
pop
nop
out
dec
test
bound
push
ret
add
incb
add
push
or
xchg
cmp
js
je
mov
sub
push
test
outsb
push
idivb
and
stos
inc
stos
xchg
pushf
stc
ss
mov
jbe
fisubrl
cmp
icebp
mov
out
cmp
xchg
xchg
daa
push
insb
dec
jne
push
adc
out
in
sbb
jl
push
or
insl
xchg
bnd
add
in
lods
mov
cli
jne
in
add
enter
dec
lods
je
cld
add
sti
jp
cmp
imull
xchg
sarl
mov
mov
add
adc
std
hlt
dec
jbe
or
pop
and
and
enter
mov
lods
mov
pushf
js
je
mov
or
std
jns
xchg
pop
pop
cltd
into
push
fs
xchg
fstps
out
ja
inc
cmp
shrl
imul
and
push
xchg
add
lock
fdivrs
sub
out
mov
xchg
lcall
sbb
loop
loop
bound
xchg
test
jle
xchg
mov
jg
push
fwait
rclb
daa
lods
pop
pop
lcall
and
lock
add
pusha
add
mov
xchg
mov
push
stos
mov
mov
adc
adc
enter
movsb
cs
push
pop
add
adc
adc
subb
bound
nop
ret
push
addr16
idiv
push
adc
mov
lods
cmp
mov
mov
loope
fs
and
movsl
cltd
sub
mov
lcall
gs
inc
pushf
sti
lret
push
and
sbb
add
xor
xor
into
fildl
xchg
push
mov
iret
rcll
mov
sbb
lahf
cmp
pop
out
cmp
push
xlat
test
lock
mov
pop
or
scas
lods
add
and
cmp
push
popa
or
add
cmp
sbb
pop
dec
adc
pushf
nop
mov
out
mov
or
inc
fwait
cmpsb
das
imul
mov
rorb
outsl
and
cmpsl
iret
fstps
leave
add
mov
push
mov
enter
jmp
addr16
cmp
sahf
sub
sbb
sar
hlt
movsl
inc
popf
es
lock
sbb
mov
and
sub
jmp
add
cmp
xlat
pop
add
stos
dec
jb
lods
dec
into
incl
int
loop
lods
loop
dec
mov
sbb
scas
stc
loope
fwait
je
cmp
jbe
add
stos
add
cmp
sbb
mov
sar
lea
fcomp
jl,pt
adc
call
test
std
jecxz
sbb
test
sub
dec
sub
or
fwait
popa
add
sub
mov
lret
sti
xor
stos
sub
jge
jns
notl
pushf
xchg
pop
fisttpl
jp
pusha
scas
mov
inc
scas
pushf
cmpsb
mov
dec
loop
es
sbb
popa
cli
xchg
test
pushf
in
xchg
inc
in
in
push
jns
and
pop
dec
cmc
out
inc
add
dec
clc
stc
cld
ljmp
out
ds
inc
or
mov
enter
cmpsl
and
xor
push
cld
fstpt
push
test
clc
xor
or
sub
popf
sub
das
inc
mov
sbb
push
fidivs
jmp
outsb
mov
insl
cmpsb
pop
or
xchg
xchg
sub
dec
pop
call
hlt
addr16
pop
call
xchg
and
fs
fnstcw
loope
cmp
add
scas
shlb
out
loopne
rcll
loope
test
inc
adc
push
mov
in
cltd
push
and
xchg
cld
mov
jae
push
pushf
int
ret
aas
dec
cmp
add
scas
pop
and
xchg
mov
subb
inc
repz
mov
add
ret
loop
sub
out
dec
xchg
out
out
adc
nop
xor
sub
ljmp
jl
divl
adc
lea
js
mov
lret
xchg
lea
push
lds
adc
xor
sub
mov
dec
mov
mov
jge
sub
jne
inc
cmp
lcall
pop
mov
and
mov
cmp
je
cltd
gs
inc
cmpsb
pop
dec
daa
dec
sub
inc
pop
jge
sbb
mov
test
sbb
fwait
and
pop
or
je
dec
insl
stos
jge
add
cli
sbb
int3
push
movntq
sbb
sbb
les
sbb
jae
lret
push
cwtl
test
xor
sahf
push
jns
outsl
and
xor
push
out
fcoms
adc
in
sbb
test
mov
pop
int
pusha
pop
popa
lods
push
mov
lret
cwtl
mov
nop
jns
out
sbb
clc
sub
push
jne
outsb
cmc
adc
sar
push
cmpsb
dec
push
into
xchg
insl
push
sub
leave
lahf
lods
enter
jns
xor
inc
adc
dec
xchg
mov
imul
test
mov
mov
sbb
test
stc
mov
rolb
or
inc
sub
call
aam
shl
cld
insl
sub
adcb
sub
ficoml
jns
mov
push
pusha
sub
sbb
les
pop
mov
dec
adc
inc
mov
imul
stos
push
std
call
jne
sbb
xor
ja
mov
adc
jb
or
dec
jo
btr
out
or
lahf
lcall
sbb
adc
jp
lret
mov
cmp
cmp
imul
inc
or
xlat
std
aas
mov
mov
push
jge
fucomp
xchg
add
daa
ret
fnstsw
pop
cmpsb
aad
clc
push
dec
js
lock
fadd
xor
aas
aaa
lods
pxor
int
arpl
bound
outsb
mov
pop
addl
xor
out
out
and
push
xor
repz
or
leavew
or
daa
and
or
sub
jmp
movl
pop
test
in
lret
mov
pushf
cmpsb
dec
fwait
add
add
faddp
push
ret
cmp
lock
and
sbb
mov
mov
xor
dec
out
fisubs
mov
test
mov
xchg
mov
inc
xchg
out
popf
arpl
jecxz
xor
push
out
dec
dec
cmpsb
shrl
es
in
add
fidivrl
movsl
pop
enter
sbb
fstp
mov
idivb
jno
pop
rcrb
lret
xchg
xchg
push
adc
inc
adc
outsb
dec
add
xor
push
cli
mov
sbb
inc
in
pop
outsl
mov
movups
inc
fwait
adc
loopne
minps
mov
dec
push
jno
adc
sub
rorl
inc
imul
pop
addr16
fisttpll
jecxz
cmp
mov
insb
jle
adc
mov
les
pop
or
gs
sbb
aas
sub
dec
fldz
stc
test
adc
or
mov
rol
popf
divb
mov
leave
sbb
pusha
idivl
mov
sub
pop
inc
lea
add
movb
sbb
testl
cmp
addr16
cwtl
push
movsl
inc
mov
pop
stc
inc
push
shl
push
push
push
cmpsb
push
xchg
fldt
pop
out
jb
cmp
les
data16
pop
sub
fbld
rolb
jo
movsb
push
jge
aad
movsb
adc
adc
test
cmp
iret
dec
outsb
out
jo
push
mov
push
lods
mov
xchg
cli
mov
stos
test
adc
mov
fwait
add
ss
dec
lock
lds
cmp
movsb
pop
insb
pusha
ljmp
dec
loope
jo
mov
pop
repnz
adc
fwait
mov
adc
push
sti
cmpsb
das
lea
cmp
mov
int3
jno
aam
loop
in
stc
xor
pop
cmpsb
std
or
leave
rcll
inc
lods
leave
lret
cmp
jp
add
sbb
inc
inc
es
pusha
ret
das
or
test
ja
mov
aas
pop
jmp
sbb
jae
or
or
mov
addr16
add
clc
mov
jae
xchg
cs
lods
sbb
mov
and
mov
cmp
or
notl
cmp
dec
daa
cs
sbb
and
sub
insl
jmp
sbbl
cmp
adc
stos
cmp
idivl
imul
or
out
pushf
scas
jno
mov
pusha
cwtl
add
xor
pop
adc
std
inc
xchg
mov
push
jno
js
call
cmp
pusha
pop
pop
js
sbb
sbb
sahf
push
xchg
and
out
mov
out
in
fdivl
jnp
fstps
fwait
sbb
daa
push
xor
outsb
mov
inc
xchg
mov
push
xor
outsl
add
lahf
iret
shlb
in
stos
mov
rorb
mov
push
ljmp
adc
mov
pop
outsl
inc
shrl
addr16
pop
jmp
stc
cmp
loope
lods
cmp
mov
cmp
adc
outsb
icebp
sbb
lods
cwtl
clc
add
jg
jmp
add
push
fstpt
jp
mov
pop
xlat
mov
test
mov
adc
dec
or
mov
pop
jae
dec
stos
jmp
int
mov
test
mov
dec
lods
stos
dec
add
testl
jp
ret
mov
adc
out
xor
js
jle
fs
in
gs
add
xchg
mov
lds
int
cmp
dec
je
js
cmp
add
call
ret
subl
adc
ss
dec
mov
fs
pop
sub
mov
xchg
mov
jg
sub
andb
mov
mov
xor
push
jbe
sbb
sahf
cmp
nop
push
jno
jg
cmp
mov
jge
popa
or
mov
add
in
out
scas
jae
insl
mulb
cwtl
stos
mov
stos
out
push
push
aam
popf
cmp
jb
cmp
sbb
cmp
f2xm1
xchg
pusha
fs
pop
mov
lcall
stos
xchg
xorb
push
imul
jmp
cmp
ret
cltd
lods
icebp
and
push
outsb
adcl
cmpsb
add
fucomp
std
jmp
arpl
shr
loopne
sbb
cmp
repnz
mov
mov
scas
push
mov
xor
popa
inc
cli
cmp
add
fst
cmpl
xchg
divl
out
rorl
pop
cmp
push
fcmovb
rolb
push
or
idivb
xchg
xchg
xlat
xchg
mov
and
sbb
push
mov
addb
jnp
pop
xor
dec
cmc
dec
fldenv
cmp
mov
mov
popf
and
cwtl
dec
xlat
mov
lods
pop
fisubrl
and
je
and
push
insb
arpl
iret
movsb
mov
or
gs
mov
pop
jl
data16
dec
pop
mov
push
cltd
pop
mov
cmp
jb
loopne
das
dec
shrl
inc
sub
bound
xchg
jg
aad
icebp
popf
cltd
sbb
mov
inc
lock
fwait
out
nop
cmpsl
cltd
iret
outsb
rcl
adc
or
pop
pop
into
mul
stos
pop
dec
xchg
in
bound
jne
ja
cmpsb
notl
lret
mov
mov
cld
and
fdivr
push
lcall
xchg
pop
inc
popf
negb
mov
std
mov
dec
jge
inc
sti
sbb
inc
mov
push
ret
out
lods
jb
xor
mov
sar
loope
push
cmp
pop
or
dec
cwtl
aaa
sub
add
fsubr
imul
popa
push
loop
je
pop
pop
jns
xchg
repnz
stc
mov
fsubr
push
mov
rclb
fs
insl
fistpl
xchg
int3
js
dec
iret
cwtl
sub
adc
jbe
fistpl
jle
push
mov
fildll
shrb
popa
or
inc
stos
jb
dec
mov
mov
mov
insl
xor
clc
mov
mov
ds
mov
daa
and
les
fsubrl
stos
push
lahf
adc
jecxz
repz
sub
sub
jl
cmp
mov
mov
and
gs
popa
push
mov
mov
mov
into
sub
sbb
mov
and
hlt
dec
out
fldt
loop
int3
es
jns
lods
aam
xchg
push
or
xor
ljmp
mov
sahf
push
sub
outsl
popf
pushf
repz
xor
popf
jne
nop
lahf
aam
test
cmp
add
fnstsw
ja
mov
iret
pop
jbe
mov
xchg
inc
cmp
in
push
lret
cmp
cmp
sbb
lahf
mov
pushf
stos
sub
rep
cmpsl
cltd
shr
push
xchg
adc
adc
dec
adc
jno
bnd
jmp
sbb
mov
fcomps
adc
cmpsl
cli
mov
movsb
mov
iret
jl
or
cld
xor
dec
xor
lock
sub
inc
roll
and
int3
xor
add
pop
lret
fnstcw
mov
pop
mov
dec
mov
or
pop
int3
ja
jge
mov
jge
test
xchg
cmc
aaa
xor
fdivrl
push
aad
pop
bound
adc
in
lock
pop
adc
loope
pop
rcrl
es
jmp
sbb
and
stc
mov
xor
sub
movsl
data16
filds
mov
inc
adc
out
lock
mov
or
rcr
repnz
pushf
mov
addb
jnp
dec
mov
push
daa
out
or
cmp
sarl
or
je
push
push
xchg
es
push
clc
mov
xor
scas
mov
gs
addr16
push
testl
test
jmp
les
mov
inc
loopne
daa
sbb
xor
add
fadds
mov
ret
fisttps
pop
xchg
xorl
aam
frstor
mov
shll
in
and
test
test
popf
add
loopne
sbb
and
lds
or
xlat
subb
jnp
insb
inc
or
repnz
fnstcw
adc
mov
shlb
mov
rcrw
push
in
mov
popf
xor
add
stos
xchg
out
cmp
ret
cwtl
cmp
mov
ret
test
loope
inc
cwtl
jg
shlb
in
test
out
mov
mov
mov
notb
xlat
lcall
pop
arpl
les
lods
sbb
stc
or
rorb
pop
or
xor
repz
nop
mov
lahf
out
jle
imul
pushf
dec
notl
sbb
xchg
or
jp
popf
mov
ss
xor
ficompl
fs
dec
jnp
lea
hlt
pusha
dec
aas
fsubl
notl
stos
and
fists
mov
fwait
bound
mov
sbb
test
push
adc
mov
shl
es
cmp
or
add
inc
adc
mov
loop
mov
out
inc
jns
dec
and
mov
xor
lea
cwtl
test
jmp
stc
add
adc
stos
test
aad
xchg
dec
mov
mov
shlb
ljmp
aad
jg
dec
frndint
aad
fistpll
add
mov
mov
push
add
adc
repnz
fcompl
stos
adc
mov
stos
cs
stos
mov
iret
test
jns
xor
lods
jae
ds
call
cmp
sbb
inc
mov
mov
cmpsb
push
inc
jmp
cmp
out
ds
dec
icebp
add
pop
movsb
ds
sti
jne
movsl
cmpsb
rorl
mov
sbb
mov
sub
cmp
pop
cmpsb
jle
pop
out
roll
test
xor
cmp
popa
lods
fists
addr16
into
lret
add
fisubrl
ret
int3
add
outsb
jb
xchg
inc
mov
jp
xor
xchg
sarl
sbb
xor
lods
add
cmp
stc
xor
push
jnp
mov
addr16
and
dec
and
ja
in
inc
enter
push
sbbl
push
and
int3
shrl
push
add
cmp
sbb
mov
sahf
fldt
sub
inc
or
pop
mov
in
add
add
mov
mov
push
cmp
lods
and
xchg
and
push
jbe
loopne
sbb
loop
mov
dec
adc
loope
pop
fcomps
push
popl
pop
shll
movsb
ljmp
in
arpl
xchg
stos
scas
jmp
push
in
out
push
lea
dec
movups
xchg
xor
mov
setne
in
iret
pushf
sti
mov
daa
mov
ret
push
push
cmp
and
sbb
cmp
inc
inc
test
mov
dec
adc
shlb
loop
cmp
cwtl
out
push
fcompl
scas
dec
stos
push
insl
push
imul
or
dec
or
sbb
pushf
cmp
fadd
add
test
and
fistl
mov
rol
and
in
dec
mov
stos
jmp
loope
out
cmp
fs
ds
ficoms
mov
mov
insb
inc
lods
out
stos
mov
incl
and
pop
inc
aad
jmp
movsb
ficoml
push
push
repz
imul
add
popf
pop
mov
mov
sarb
aad
mov
jmp
test
dec
lods
lret
inc
dec
mov
mov
jne
cmpsl
mov
addr16
data16
outsl
sbb
into
cmp
pop
loope
jns
mov
pop
sub
mov
pop
add
mov
stos
dec
je
leave
jecxz
fsubs
mov
les
movsl
xchg
adc
addr16
arpl
sbb
cs
sub
add
jmp
repz
pop
or
add
dec
jecxz
test
dec
shll
enter
mov
test
cmpsl
pop
mov
cmp
loope
leave
or
rep
hlt
inc
lock
pop
cmc
adc
icebp
into
scas
popa
cmpsb
lea
mov
and
pop
push
inc
into
in
dec
dec
bound
pop
cld
xchg
pop
dec
int
add
fildll
pop
sbb
popf
das
stc
jg
mov
add
cmp
clc
mov
or
nop
cmp
xor
testl
loopne
pcmpgtb
cltd
pop
push
test
and
fistps
imul
jbe
sub
shlb
mov
sbb
sbb
mov
dec
push
or
pushf
sbb
inc
pushf
xlat
or
cmpps
mov
imul
fstps
push
lods
push
lds
dec
fcmovb
push
mov
mov
pop
in
cmc
lret
nopl
push
mov
fwait
imul
outsb
push
mov
cmp
aaa
scas
cli
inc
outsb
dec
orl
cmpsb
or
mov
leave
jl
push
loop
xor
jmp
fwait
mov
sub
scas
add
loopne
rclb
stos
jmp
mov
mov
fistl
cmpsb
mov
inc
or
xor
adc
or
pop
pop
repz
and
adc
push
cmp
sub
cli
fisubs
inc
nop
dec
jno
sti
inc
iret
ss
les
rorb
jbe
dec
and
add
push
push
orl
adc
rol
mov
push
push
aad
jno
and
loopne
lcall
test
pop
sbb
jo
arpl
inc
mov
sbbl
mov
jg
xchg
dec
sbbb
push
adc
pop
xchg
pop
mov
mov
mov
push
push
dec
cmpsb
xlat
enter
mov
sahf
mov
cltd
loop
mov
pop
mov
mov
jns
in
mov
les
mov
mov
outsb
pop
sbb
xor
pop
lcall
add
js
jns
push
and
push
xchg
loopne
push
call
cmp
cwtl
incl
rcrb
ret
in
xor
or
jo
jo
or
or
fstpt
jle
movsb
push
in
js
xchg
and
jl
and
jmp
test
push
aaa
adc
pop
push
neg
stos
pop
adc
js
xchg
cmc
gs
xchg
mov
sub
jg
add
lds
bound
mov
popa
push
and
movsb
outsb
imul
das
cli
daa
mov
inc
xchg
idivl
lcall
aas
inc
sub
pop
outsl
inc
add
cmp
mov
ret
xor
push
fs
ljmp
inc
mov
scas
stos
and
add
jmp
push
push
or
push
or
adc
sti
shll
jecxz
add
xchg
std
push
dec
mov
and
leave
std
sbb
leave
jns,pt
mov
mov
mov
push
push
repnz
scas
fs
daa
mov
fmull
mov
add
bound
xor
aad
outsb
inc
imul
add
aad
jns
mov
adc
ds
jne
mov
add
xor
mov
pop
shrb
aam
add
inc
or
and
in
test
sub
out
shll
repnz
mov
cmpl
les
nop
sti
pop
in
out
sub
mov
fistpll
inc
mov
mov
mov
loope
mov
in
xchg
loope
ret
addr16
inc
push
cmp
imul
inc
fimull
ret
mov
mov
inc
imul
sbbl
cs
popa
ss
es
xlat
lock
jbe
arpl
jle
lcall
cmpsb
mov
stc
add
and
jecxz
mov
or
inc
xor
ret
cmp
mov
movsb
mov
inc
filds
jo
scas
pop
add
push
pop
xchg
fwait
leave
or
inc
pusha
pop
xlat
inc
ss
xchg
out
inc
dec
jg
pop
mov
dec
push
fsub
sub
push
mov
pop
jg
int3
inc
sti
loop
cltd
out
and
xor
test
movsb
mov
adc
enter
lahf
filds
xor
bound
mov
pop
add
inc
adc
lods
xor
mov
insl
mov
pop
push
or
daa
sbbl
lcall
add
xor
mov
imul
aam
sahf
dec
jecxz
mov
je
xor
ret
mov
jmp
outsb
imul
add
sti
xor
and
adc
sti
push
shll
js
xchg
stc
inc
hlt
xlat
outsl
loopne
push
pop
adc
adc
mov
aaa
jle
push
rcll
pop
jo
clc
fnstcw
popf
daa
lods
xlat
fstl
es
stos
cwtl
ret
xchg
jbe
jl
std
fidivrl
sub
ret
xor
dec
les
sti
inc
pop
mov
loopne
cmpsb
inc
jg
in
mov
mov
jo
adc
ds
sub
inc
jo
mov
ja
repz
and
pop
loope
push
sbb
nop
adc
sub
repnz
maxps
mov
shl
fadds
pop
dec
cmpsl
or
scas
cmp
mov
test
fistpl
cmpsl
imul
addr16
jae
bswap
sbb
push
ret
mov
sub
cmp
iret
add
fcompl
jo
and
or
or
loope
pop
sahf
lock
sub
in
popf
inc
inc
frstor
push
aas
xchg
iret
add
pop
arpl
mov
jmp
mov
pop
fstpt
mov
sbb
push
cmp
loop
sub
mov
rcr
push
pop
or
mov
inc
mov
xor
das
push
gs
xor
sbb
mov
pop
lret
je
repz
out
cltd
push
aad
repz
and
jge
test
sbbb
ja
outsb
addb
pusha
jmp
in
loopne
aas
cmp
jmp
pop
loopne
push
sti
rcrb
pushf
adc
enter
fwait
sub
cmp
mov
dec
orl
rclb
scas
jo
xor
xchg
lcall
in
push
pop
or
cmp
pop
mov
cmp
fcmovnbe
sarb
inc
pop
lock
out
mov
push
mov
jmp
and
jno
popf
adc
pop
subl
mov
popf
lock
sbbl
xor
stc
shr
xor
stc
dec
dec
pop
adc
mov
sub
mov
push
jmp
cmp
xor
jl
fwait
sub
push
xlat
mov
pusha
lcall
and
scas
pushf
dec
movsl
repz
and
xlat
fwait
ss
and
pop
outsb
sbb
and
ss
ljmp
scas
gs
mov
xor
sbb
das
fisubs
inc
inc
andps
xchg
into
and
sbb
push
dec
sbb
dec
sbb
jae
mov
test
in
or
leave
push
push
movb
mov
pop
push
inc
cmp
mov
nop
les
shll
add
repz
fs
mov
sbb
call
jge
mov
and
out
mov
insl
imul
xchg
stos
push
aad
sbb
adc
add
outsb
sbb
jmp
cli
mov
addl
ds
inc
daa
jae
adc
jbe
xchg
jmp
ds
adcl
adc
aad
sbb
push
outsl
mov
cmp
xchg
cld
lcall
dec
jae
and
pop
mov
lcall
or
jb
hlt
inc
aas
push
fs
scas
lcall
into
fs
addl
popf
bound
xchg
mov
or
mov
mov
jne
fildll
add
push
adc
iret
ja
lods
pop
cmp
push
shl
outsb
dec
imul
iret
out
cmp
jno
add
ljmp
push
or
adc
out
and
scas
ret
icebp
jae
mov
std
rcrb
and
mov
sbb
inc
and
stos
push
inc
xor
in
jge
aas
push
dec
out
adc
sub
outsl
out
outsl
adc
out
les
test
sbb
std
aaa
jmp
adc
in
js
xchg
adc
movsl
xchg
pop
mov
stos
lds
lret
jp
test
std
and
cmp
lcall
ds
test
js
and
xor
add
fbstp
movsb
mov
add
je
sbb
aaa
test
adc
sarl
jne
mov
push
sbb
fcmovnu
add
hlt
clc
stos
mov
mov
jns
mov
sbb
imul
dec
add
mov
mov
xor
js
pusha
int3
xchg
push
in
and
in
aaa
sbb
xor
inc
mov
out
in
jno
and
pop
and
push
ljmp
cli
jb
test
outsb
lock
mov
test
int
mov
add
sbb
paddsw
pop
lods
xchg
fwait
imul
or
aam
or
pop
repz
dec
imul
pusha
push
xor
cmp
cs
sub
ja
inc
data16
push
pop
jle
sub
pop
push
popf
hlt
sub
jecxz
leave
lret
out
arpl
fs
dec
fnsave
add
ficompl
mov
cmp
xchg
pop
jl
orl
jno
cmpsb
jecxz
push
iret
mov
fnstsw
pop
jg
in
push
push
or
jge
jmp
lret
inc
push
push
fisubrs
aad
les
xchg
out
dec
js
imul
mov
bound
sbb
mov
jecxz
int
jns
icebp
adc
sub
ds
cmpsl
ja
sbb
or
into
daa
loope
adc
sub
inc
pop
mov
aaa
nop
push
adc
movsb
inc
inc
dec
dec
icebp
xchg
into
stos
mov
out
ds
out
push
mov
lea
and
inc
inc
dec
inc
xor
icebp
icebp
xchg
sbb
test
stc
repnz
iret
mov
fwait
mov
pop
loop
sbb
lea
clc
fsubrl
rorb
sti
rorb
adc
fisubrl
or
test
loope
xlat
int3
stc
mov
bndstx
arpl
push
dec
push
cs
jmp
lock
mov
add
sbb
push
ds
ret
sub
dec
pop
and
idivl
jmp
sbb
data16
das
xor
push
xchg
sub
push
int
adc
cmp
aam
add
or
mov
roll
pop
inc
hlt
push
jnp
and
loopne
loop
lret
xchg
mov
test
pop
sub
int3
loopne
lahf
data16
repz
std
adc
out
inc
popa
mov
and
stos
xor
mov
jb
int3
or
push
aam
imul
test
or
stos
and
and
lock
sahf
xlat
pushf
sub
push
mov
xchg
loopne
clc
or
scas
xor
loopne
mov
je
rorl
sub
mov
out
std
lods
movsl
test
adc
aas
inc
imul
jb
test
and
push
shll
outsl
jne
push
mov
ds
or
sbbb
es
cmp
dec
fidivl
stc
mov
xor
mov
pushf
scas
ret
pop
pop
ror
rcll
push
mov
leave
lret
data16
lret
mov
mov
lret
aas
or
jne
xor
inc
jno
int3
dec
mov
push
outsb
sub
in
sysenter
add
mov
and
push
in
bound
push
inc
aaa
adc
leave
daa
ret
test
xor
push
or
lcall
jno
mov
icebp
mov
int3
pop
dec
dec
xchg
pop
addb
pusha
mov
dec
inc
sub
rolb
mov
cmp
xchg
daa
and
adc
iret
aaa
dec
jb
cmp
incl
dec
sub
insl
push
mov
cwtl
sbb
das
xor
lret
pushf
cmp
add
icebp
add
xchg
cmpsl
pop
push
cmp
xchg
sub
cmpsl
push
dec
in
out
stos
and
cltd
test
or
test
and
fcmovu
jns
movsl
jecxz
push
jbe
jmp
out
jl
nop
xor
lds
inc
adc
bound
jns
ret
test
test
dec
push
xchg
mov
mov
loopne
mul
sub
iret
int
jno
sbb
fs
sub
imul
mov
and
push
and
push
or
xor
roll
push
or
sbb
aas
lock
mov
fdivl
mov
sbb
js
xchg
and
addr16
push
sub
xor
xor
out
push
imul
xchg
sbb
sahf
lret
inc
jns
fcoms
fidivl
stc
cmpsl
fnsave
mov
in
or
lahf
testb
movsl
mov
cmp
pop
mov
fwait
stos
add
mov
arpl
mov
add
dec
ss
jne
sbb
pop
sub
in
bound
mov
xchg
lock
fwait
out
int
mov
arpl
sub
xlat
and
mov
dec
pop
repnz
mov
push
gs
mov
cmp
mov
xchg
ds
jns
ret
cli
cltd
mov
or
sbb
push
imul
mov
out
ds
cmp
es
mov
sub
gs
pushf
cwtl
mov
lea
or
je
dec
or
lcall
jne
jl
pop
jmp
popf
les
insl
sbb
andl
aas
ja
nop
icebp
jg
je
scas
lock
mov
lock
test
mov
adc
into
lods
xor
adc
jnp
fidivl
jl
sarb
jno
ljmp
icebp
pop
es
adc
out
pop
and
outsl
repnz
xchg
mov
pop
xchg
cld
mov
dec
leave
mov
xchg
test
sbb
pop
mov
adc
out
outsl
cmc
imul
xchg
lret
cmpsl
mov
idiv
mov
dec
faddl
xchg
loopne
loope
ljmp
and
iret
jmp
stc
int
mov
loop
inc
cmp
es
std
ss
sub
jge
fsubrp
lcall
stos
pushf
sbb
add
stos
xchg
xor
test
xor
xchg
xchg
inc
sbb
or
lea
divb
push
cmpsb
inc
imul
or
xchg
sbb
cmp
push
jmp
add
adc
outsb
push
push
or
cld
mov
pop
fwait
cmpsb
mov
sub
inc
fidivrs
lea
lds
lcall
adc
and
fwait
lods
out
add
add
stc
adc
sbb
lock
cmp
scas
push
jp
pop
xchg
add
enter
cld
mov
mov
xor
xchg
xor
mov
rorb
jns
sbb
pusha
xchg
add
mov
dec
xor
cmp
sbb
jg
add
shl
or
out
or
addr16
test
push
dec
pop
sarl
push
or
js
or
lret
fwait
push
jg
fwait
loopne,pt
mov
imul
ja
push
xchg
aas
daa
pop
addl
cmp
inc
mov
pop
ljmp
popf
lcall
fisubrl
mov
mov
clc
pushf
mov
and
in
sub
inc
sub
dec
pop
add
or
aaa
or
rolb
mov
test
pop
adc
mov
mov
cmp
ret
stos
adc
iret
mov
adc
adc
daa
scas
add
rcrb
mov
push
ljmp
mov
out
xor
imul
pop
inc
mov
fadds
pop
adc
push
cmp
std
sbb
icebp
dec
lea
inc
ljmp
push
add
mov
and
xlat
pop
int
sub
loopne
mov
andl
adc
xchg
dec
xlat
int3
sbb
repz
js
aam
and
cmp
dec
sti
cmpsb
lahf
push
fnsave
mov
into
xchg
sbb
jge
push
mov
and
mov
inc
lea
arpl
push
lods
push
inc
fisttpll
inc
mov
mov
push
push
xchg
bound
out
push
adc
xor
enter
iret
mov
hlt
repnz
sbb
fisttpl
dec
mov
es
push
mov
jo
into
push
imulb
imul
lea
push
les
cli
mov
jmp
adcl
in
or
dec
pushf
movsb
dec
add
cs
shrw
pop
jle
mov
inc
mov
inc
mov
insl
cmp
xchg
mov
pop
jle
mov
aad
xchg
push
mov
jns
mov
movsl
and
sub
xchg
iret
stos
ss
out
add
lcall
xor
or
aaa
imul
xor
xor
cmc
movsb
push
into
rolb
pop
mov
inc
test
nop
mov
fiaddl
fmull
bound
inc
push
mov
leave
cmp
add
cltd
sti
repnz
mov
and
dec
xor
fistps
addr16
push
mov
xor
jg
pop
sti
push
repz
jge
testw
aam
stc
fldt
cmp
call
xchg
jo
test
push
lds
js
lcall
into
lret
js
addr16
jnp
repnz
icebp
ja
add
cmp
and
int
mov
dec
insb
xor
mov
jne
push
sub
insl
xor
stos
sarl
sub
mov
ficoml
arpl
adc
xlat
pop
fisubs
sbb
pop
outsb
jmp
pop
clc
sbbl
stos
lods
fs
mov
bound
and
lds
das
movsb
cmpsl
inc
sub
sti
fs
call
pop
rcrl
push
std
sub
out
test
out
test
pop
rol
sbb
cltd
into
stos
pop
rclb
clc
pop
pop
or
mov
dec
mov
imul
cltd
aas
jnp
pop
cmp
and
inc
xlat
adc
leave
int3
mov
es
inc
xchg
or
and
or
fildl
int3
lret
cmp
lock
mov
jmp
ret
mov
add
mov
fisubrl
pop
popf
lds
push
push
pop
fmul
lods
xchg
xchg
sbb
test
stc
movsb
mov
inc
xchg
mov
xor
mov
add
popa
je
pop
or
scas
push
push
aaa
push
js
xchg
fistps
add
fldenv
shll
test
cmp
out
sarb
mov
push
lock
adc
cmc
mov
add
repnz
les
mov
xor
cmpsb
mov
loopne
out
test
mov
adcb
imul
xor
and
sub
aad
push
mov
notl
inc
inc
push
clc
std
stc
fnclex
sub
mov
hlt
mov
push
insl
mov
adc
addl
std
mov
push
repz
mov
mov
mov
xchg
ja
outsl
lret
inc
xlat
adc
sub
sbb
xor
test
dec
int3
dec
mov
sbb
mov
mov
sbb
rorb
incb
js
lods
enter
scas
jnp
stc
add
repnz
xchg
aad
test
sarl
roll
xor
pusha
inc
dec
push
or
add
mov
insl
outsb
sub
dec
in
in
cmp
add
popa
lret
mov
pop
pop
in
cmp
inc
cmp
push
pusha
insl
rorb
fistl
adc
push
lret
aas
mov
imul
lock
xchg
movsb
loop
add
fcomi
sbb
scas
xor
pop
lret
les
adc
and
sbbl
jae
or
mov
xchg
ret
idiv
loopne
xchg
pop
insb
lods
pop
popa
int3
addr16
inc
fldl2e
mov
decl
cmp
jnp
jmp
add
test
inc
sub
inc
bound
xchg
dec
push
xchg
cld
icebp
pushf
mov
pop
push
push
or
inc
add
push
mov
negb
mov
or
push
rolb
jmp
mov
cmpsl
out
fadd
fstpt
cmp
jno
push
popf
add
in
pop
test
outsb
cmp
jo
dec
and
clc
xchg
lods
aas
xor
xor
lock
addr16
inc
testl
xchg
adc
pop
cmp
lcall
mov
add
pop
fimull
jne
sbb
nop
mov
lcall
cmp
pop
cli
xchg
gs
adc
andps
mov
push
imul
repz
adc
pop
scas
clc
dec
jns
pminub
xchg
xor
and
ljmp
pop
inc
mov
sbb
lahf
inc
push
mov
adc
jg
movsl
clc
mov
or
loope
enter
lods
cmpsb
mov
inc
and
adc
ds
push
mov
adc
dec
movsl
rcrb
outsb
and
test
sub
add
or
repz
pop
imul
inc
adc
stos
inc
sarb
fsubrl
cmp
mov
in
ds
pop
sbb
xor
or
mov
xor
jl
cld
xchg
out
xor
addb
stc
mov
lds
les
pop
mov
loope
sbb
or
add
cli
and
add
pop
add
and
roll
mov
mov
lods
mov
push
in
inc
mov
cmpsb
mov
mov
rol
jnp
outsl
jl
dec
lods
dec
subb
repnz
mov
push
push
dec
loop
pop
in
sbb
cmc
mov
inc
lea
rcrb
xor
dec
adcb
sbb
popa
push
mov
sub
cmp
hlt
or
add
cli
push
mov
insb
in
mov
inc
mov
inc
mov
jg
cmp
lret
sub
sbbl
rcl
stos
and
leave
lea
or
sti
ret
int
hlt
jo
aaa
cld
push
sub
out
shr
cmp
or
imul
mov
pop
mov
pop
decb
and
xchg
ds
xor
outsb
movsl
xor
xchg
call
mov
pusha
andl
jge
test
gs
imul
js
pushf
cli
insl
arpl
cmp
pop
idiv
aam
repz
cli
jbe
aas
pop
jae
in
int3
aam
movsl
mov
and
inc
inc
adc
add
stc
mov
out
pop
jae
outsl
push
adc
jne
lcall
test
scas
fcoms
cli
jl
mov
and
shll
pop
clc
nop
fimuls
xor
add
adc
cld
mov
pop
in
add
push
push
gs
or
imul
cmc
ffree
add
xor
sub
insb
mov
inc
sbb
mov
xchg
imul
cmp
imul
es
pop
in
jno
pop
xchg
push
push
jge
mov
test
adc
mov
popa
push
sub
fst
les
aam
mov
push
mov
jne
mov
adc
cmc
xchg
fwait
xor
lods
cmp
lcall
push
jae
mov
rcrl
insl
aas
ret
xchg
jg
push
pop
sub
icebp
popf
adcb
and
jle
or
shrl
sub
sbb
and
xor
loopne
push
jo
xor
push
test
flds
mov
jns
dec
mov
sbb
imul
xor
adc
lea
dec
cltd
cltd
icebp
mov
jecxz
mov
scas
nop
and
fdiv
xchg
dec
jb
jbe
lock
scas
mov
or
outsb
outsb
inc
dec
xor
or
sub
jg
xor
mov
mov
iret
push
scas
inc
jp
test
sbb
test
inc
pop
mov
test
and
mov
or
lcall
outsb
out
movsl
test
lret
fistps
loop
test
add
jmp
inc
movsl
or
mov
push
bound
cld
roll
cmp
mov
fstl
movsb
push
mov
mov
je
xor
mulb
or
mov
jmp
or
and
movsb
mov
repz
fcompl
mov
and
xor
add
test
ja
or
mov
add
cmp
add
aas
xchg
add
and
fildll
sahf
add
inc
aam
dec
fs
addr16
inc
add
sahf
scas
inc
daa
and
sub
cmp
inc
in
daa
mov
out
mov
mov
add
and
mov
xchg
lea
das
aad
scas
rorl
jns
ret
cmpsl
sub
mov
push
dec
and
xchg
xchg
xor
lahf
inc
inc
scas
mov
inc
adc
fiaddl
sbb
cmp
xor
xchg
lods
lahf
adc
xor
subl
es
outsb
ljmp
movsl
lods
cld
mov
data16
push
jmp
push
loopne
dec
clc
cmp
leave
les
or
leave
cmpsl
sub
or
inc
mov
adc
dec
sub
fsubrl
sub
test
hlt
decl
scas
jo
mov
jp
jbe
mov
ljmp
jle
adc
dec
test
jl
fistl
sbb
adc
out
movb
jp
xor
mov
and
jle
dec
fldl2e
cmp
ja
into
shrb
and
fdivrs
pushf
push
pop
daa
lods
cmp
lcall
mov
xchg
sbb
adc
push
pop
dec
rorb
arpl
add
push
ss
out
call
jg
addl
pop
add
push
int
pop
ljmp
mov
cld
mov
cmp
jecxz
sub
push
dec
out
ret
inc
ja
mov
mov
push
testb
dec
daa
and
movsb
cmp
nop
scas
and
sub
pop
adc
and
mov
into
aam
jg
xchg
into
or
int3
dec
sbb
loope
cmp
popl
push
and
sub
sbb
xor
shr
outsb
pusha
xchg
dec
xchg
lcall
aaa
in
test
ficoml
inc
sbb
mov
xchg
add
ret
adc
cmp
push
out
dec
std
push
mov
push
push
ja
repnz
pushf
ja
rolb
cmp
imul
fisubl
shll
lods
push
cmp
out
xchg
mov
mov
rcrl
std
jg
insl
movsb
lcall
inc
push
mov
into
sbb
ss
adc
add
mov
mov
xchg
adc
or
subb
pop
jge
add
rcr
aaa
fidivl
out
ljmp
mov
inc
popa
ja
and
sub
std
pop
mov
mov
hlt
push
inc
ljmp
jae
in
mov
out
incl
jmp
popf
inc
shlb
inc
fistl
sub
lods
out
push
mov
xchg
es
arpl
pop
insb
sbb
sbb
jecxz
xchg
andb
in
jl
dec
roll
cmp
stos
dec
idivb
addr16
stos
pop
mov
xchg
and
jg
sub
pop
sbb
push
stc
push
cmpsl
sti
add
mov
out
cmpsl
jle
repz
out
idivb
jnp
fildl
xchg
adc
les
jmp
and
hlt
push
ret
lcall
adc
iret
dec
test
jns
xor
xor
out
sbb
mov
arpl
mul
jb
push
push
and
pop
xor
int
sub
sbb
mov
imul
sbb
subl
daa
jl
je
mov
into
pop
push
shll
sbb
scas
aaa
int3
in
inc
jle
pop
repnz
enter
imull
rcl
xor
ja
mov
pop
rcll
add
push
sti
shrb
jb
aas
cs
imul
mov
sub
stos
inc
sub
jno
mov
pop
sub
daa
test
push
sbb
lds
popf
aad
sbb
mov
fstpl
mov
call
jns
or
push
adc
shlb
hlt
push
sbb
jae
clc
inc
fwait
sbb
enter
jne
fisubs
push
dec
addr16
push
aaa
out
jns
adc
and
insl
inc
cli
mov
pop
or
mov
cmp
mov
lahf
lahf
das
out
jg
icebp
adc
jae
add
popl
aam
ja
lahf
into
xor
fwait
mov
push
lods
icebp
fnstenv
out
mov
cmp
and
dec
mov
inc
xchg
jae
mov
jmp
mov
adc
cmp
lds
pop
inc
xchg
sbb
gs
xchg
sub
push
adcb
adc
addr16
push
pop
jns
outsb
inc
adc
inc
lret
out
lea
in
pop
sub
bound
out
xor
pop
cmp
mov
mov
adc
add
mov
jb
icebp
popf
cmp
aad
mov
or
shrb
pop
in
mov
stos
ljmp
mov
or
adc
ret
jb
stos
in
pop
jb
sub
xor
sub
xchg
fucomp
pop
nop
notb
dec
xchg
ficoml
xchg
mov
loop
dec
and
push
or
sub
icebp
cwtl
mov
or
call
push
fbstp
inc
pop
sbbb
cmp
xlat
xchg
jne
pop
loopne
cld
mov
adc
inc
mov
jno
jne
mov
aad
cmp
jno
shl
outsb
dec
testb
sbb
adc
pop
mov
fildll
data16
mov
pop
outsl
push
inc
test
push
mov
xor
dec
lods
aam
je
testl
sbb
lcall
sbb
mov
mov
push
adc
scas
rol
jno
test
xchg
out
std
je
inc
les
in
jecxz
inc
inc
xor
push
lds
bound
add
test
js
test
stos
or
shrl
insl
leave
ss
aad
jnp
insb
inc
add
pop
mov
popa
pop
dec
faddl
subb
and
push
dec
sahf
pop
mov
xchg
push
push
xchg
mov
inc
and
jg
mov
pop
add
cmpsl
sbb
andl
adc
daa
das
ss
xor
arpl
mov
mov
les
and
mov
test
test
js
lea
push
mov
xor
stos
xorl
jb
sbb
sbb
jmp
loopne
fisubs
or
sti
adc
xor
mov
add
lcall
xor
in
mov
cmpsb
int3
pop
adc
imul
pop
push
or
hlt
hlt
lods
sbb
sub
xor
sub
jo
ja
push
fists
pop
xchg
popf
into
xchg
aaa
fistps
jnp
push
and
les
imul
pushf
mull
or
pop
bound
or
nop
jecxz
adc
push
lods
pop
fistpll
in
mov
sbbl
and
cli
insb
test
fs
cmp
ss
push
pusha
cmpsl
mov
dec
mov
mov
mov
mov
jle
pop
pop
xor
in
ljmp
nop
jbe
std
stos
mov
xchg
aad
mov
pop
pop
mov
pop
jle
stos
dec
jmp
insl
aad
fcmovne
mov
stos
push
in
in
cmpsb
mov
mov
adc
sahf
decl
jnp
pop
lea
inc
xchg
adc
enter
in
insl
stos
cmp
ret
pop
notl
ret
mov
popa
pop
jmp
nop
dec
pop
jge
inc
sbb
and
cmpl
insl
dec
lods
add
mov
add
push
jg
or
add
xchg
arpl
jo
leave
xor
inc
push
and
sbbl
je
call
jl
add
pop
scas
seto
js
je
fidivrs
sti
in
pop
ret
mov
xchg
outsl
pop
cld
fsubr
sbb
dec
push
cmc
jmp
adc
inc
lods
addr16
xor
testl
lock
push
dec
into
lcall
cmp
shrl
and
inc
jb
mov
mov
sub
hlt
sbb
rcl
outsl
push
mov
sub
popa
or
sub
test
or
mov
adc
pop
xor
adc
adc
cli
add
repnz
add
sub
pushf
push
cmp
gs
push
sbb
xchg
ficomps
inc
popf
jo
imulb
jmp
pop
inc
push
or
adcl
sbb
xor
adc
aas
jl
scas
pop
sbb
sub
nop
push
or
mov
xorb
mov
xor
xor
cmp
push
aad
xchg
jae
pop
inc
sbb
std
stos
dec
mov
mov
add
in
lcall
mov
les
cmp
mov
addr16
sbb
adc
mov
in
rcl
clc
movsl
inc
mov
sub
icebp
dec
mov
xchg
inc
jbe
subb
dec
sti
mov
and
add
test
cld
mov
jmp
ret
mov
dec
ret
mov
mov
addr16
adc
jns
andb
sbbl
decb
popf
adc
movsb
lcall
add
xor
mov
pusha
hlt
js
cmp
imul
xchg
mov
mov
mov
xchg
out
mov
mov
cvttps2pi
lods
ret
mov
clc
or
inc
leave
add
scas
adc
andl
cs
add
fwait
arpl
ds
out
dec
and
mov
inc
or
lahf
aam
fidivrl
rorl
testb
fdiv
cmp
emms
mov
pusha
xor
out
mov
aad
fistl
push
lret
mov
rolb
dec
mov
mov
pusha
adc
dec
insb
int3
sahf
orl
adc
in
sbb
push
jge
popa
mov
dec
movsb
stos
int
pop
jb
push
sahf
xor
jae
dec
fistps
pop
sub
cmpsl
inc
es
ljmp
orl
iret
lock
pop
mov
lods
add
pop
ret
xchg
xchg
ljmp
or
lcall
mov
xor
sub
outsb
in
cld
lahf
cmp
test
jmp
xor
enter
popf
or
push
sub
or
dec
xorb
sub
lret
mov
push
or
adc
sahf
int3
scas
scas
jae
test
test
iret
xchg
jne
push
lods
pushf
movsb
fbld
pop
test
dec
mov
or
adc
nop
call
lock
pop
shl
inc
and
test
xor
or
xor
lcall
adc
inc
add
pop
pop
sub
xchg
ja
jb
aaa
ss
adc
out
jp
ss
bound
jl
pop
mov
bound
fistpll
loope
lock
rorb
xchg
aas
mov
lret
add
stc
jbe
into
scas
out
cli
imul
sar
pop
insl
dec
push
popa
dec
repnz
js
xchg
lcall
xchg
mov
xchg
fstpl
pop
dec
testl
out
lods
lock
cltd
push
inc
pop
int
sub
stc
push
icebp
fsts
jl
add
addr16
daa
clc
and
push
test
cmp
jg
inc
mov
aaa
divl
jnp
xor
nop
push
addl
push
and
out
pop
movsb
sub
sbb
cmp
scas
ja
pop
and
mov
mov
iret
movsb
push
iret
ret
push
sahf
adc
ds
jp
sbb
sti
roll
test
sbb
adc
loop
aam
movl
lock
pusha
push
or
add
push
inc
xlat
xchg
mov
bound
movsl
cmpsl
jnp
lret
xor
push
pop
push
cltd
xchg
xorb
ljmp
mov
sbb
sub
dec
pop
lods
mov
mov
ror
enter
push
add
ret
scas
in
jmp
jmp
mov
jecxz
je
mov
lods
sub
bound
movsl
pop
cmp
adc
mov
and
stc
stos
push
iret
sbb
rcrl
fidivrl
pop
or
aad
aas
ds
mov
call
test
in
or
and
fsts
adc
int3
es
into
mov
dec
xchg
pop
fmuls
into
push
pushf
pushaw
or
js
sbb
adc
push
mov
arpl
idiv
sub
jnp
data16
rcl
outsl
pusha
je
ja
push
cmp
das
adc
scas
xlat
repnz
sub
lret
mov
sarl
ret
sub
dec
loopne
adc
sbb
rorb
sbb
jb
scas
fs
xchg
fcmovnu
shlb
mov
sti
scas
mov
mov
into
movsl
cmp
or
cmp
or
shlb
mov
int3
cmp
pop
mov
rcr
sbb
jg
fs
ja
daa
lahf
fwait
ss
rolb
dec
jle
in
sti
push
sbb
shrl
pop
mov
pop
cmova
adc
insl
sahf
fwait
loopne
sub
mov
loopne
inc
or
jg
adc
and
jmp
sahf
xor
lret
je
loop
or
push
psubb
pop
xor
outsb
push
in
lret
rcrb
lahf
seto
mov
pop
rcrl
pop
int3
loop
push
or
sub
je
das
jmp
fadds
sti
cli
test
lret
jne
pop
out
inc
or
xor
or
mov
push
and
testw
push
jb
mov
pop
scas
xor
mov
test
jno
lahf
mov
xchg
addl
gs
inc
outsb
push
jle
jecxz
test
ret
xor
dec
dec
popf
or
in
jae
adc
and
mov
mov
jno
movsb
jbe
pushl
dec
arpl
push
xor
sbb
mov
cltd
add
adc
adc
sahf
cld
cmp
cltd
and
jb
popa
lods
repz
test
shl
loope
adc
enter
mov
cltd
insl
arpl
stos
popa
movsb
dec
xor
pop
lret
push
mov
imul
cmp
add
mov
jmp
mov
ficoms
ja
ja
and
inc
out
push
and
lock
std
inc
inc
rcrl
ret
shl
popf
fwait
and
fcmovnb
aad
sbb
les
pop
push
insb
pop
mov
xor
nop
push
andl
lret
add
sbb
stos
adc
mov
jbe
sbb
fcomip
push
popa
pop
push
lcall
outsl
jp
lret
in
fstl
pop
dec
dec
xchg
jns
xchg
mov
fsubrs
mov
mov
push
daa
inc
mov
sub
sbb
mov
gs
js
jbe
test
lret
arpl
pop
mov
loope
repz
rcll
cmp
ficoms
loope
push
inc
gs
addr16
aaa
rcrb
sbb
inc
inc
xor
scas
or
in
push
fldt
sub
mov
into
mov
mov
mov
pop
cmp
dec
xor
xor
js
mov
clc
inc
mov
jns
push
xor
xchg
lret
shll
leave
push
pop
fld
je
vgatherdps
loop
iret
xchg
fsubrp
fdivp
jecxz
aaa
shr
mov
movb
xchg
rcrl
jle
dec
shl
roll
test
cmp
jmp
into
stos
clc
sub
sub
dec
sbb
repz
or
out
push
sub
jg
aam
and
adc
sub
repz
mov
lcall
push
and
test
std
adc
loope
orb
movsl
lcall
or
adc
pop
xchg
in
repnz
leave
icebp
xor
mov
out
adc
leave
adc
pop
pop
data16
or
fisubl
addb
push
sbbl
stc
or
lods
cmpsl
mov
sub
push
into
loope
pop
pop
les
xor
pushfw
je
or
rep
push
shlb
fdivr
push
pop
xchg
clc
adc
xor
outsl
aam
push
add
outsb
cmp
add
in
adc
add
push
pop
add
sbb
pop
cwtl
sbb
pop
xlat
push
gs
in
cmp
ror
mov
sti
push
sbb
inc
dec
aaa
imul
pop
inc
mov
jb
das
ret
push
push
pop
enter
sub
jno
shlb
into
lahf
aam
ret
xchg
mov
imul
dec
dec
sbb
out
cmp
mov
or
inc
loop
pushf
sbb
mov
push
in
inc
mov
sahf
lds
fistpll
imul
cmp
cld
xorl
xor
or
jbe
in
jg
lahf
jae
pushf
add
xchg
push
mov
cmp
enter
roll
lea
pop
push
divl
aaa
mov
jno
mul
dec
push
push
es
flds
lods
ret
inc
fcompl
aas
pop
pop
pop
sbb
fs
mov
arpl
lea
and
mov
adc
into
xchg
pop
inc
xchg
dec
pop
xor
fbld
adc
clc
stc
inc
cli
test
dec
cli
mov
pusha
pop
xor
xor
sbb
jb
loopne
or
scas
out
fadds
pop
jl
fisubrs
or
in
cmp
into
into
mov
ja
lret
sub
push
subb
adc
scas
or
into
movsb
and
sub
inc
mov
add
mov
pop
jnp
leave
popa
divb
ljmp
les
enter
sub
in
icebp
sbb
mov
jo
aas
add
jne
jo
pop
mov
dec
cmp
xor
add
jae,pt
in
shr
xor
inc
add
idivl
push
add
outsb
dec
call
stc
pop
sahf
icebp
adc
jmp
push
dec
aas
scas
arpl
mov
cmc
lret
mov
jl
stc
popa
lods
push
stos
and
pop
jns
sar
mov
push
jnp
arpl
mov
dec
push
fcmovne
fimuls
xchg
cmp
xchg
dec
repz
jp
imul
roll
dec
xchg
mov
loope
out
iret
lods
fmuls
jle
jl
add
loop
int3
push
and
and
dec
mov
push
cmp
pop
andb
rol
lock
fnstenv
stos
sbb
enter
or
insl
sbb
cltd
out
ret
nop
in
push
dec
fwait
and
pop
out
in
orl
cmpsl
mov
sub
test
sub
out
in
adc
lods
or
imul
pop
fnstcw
and
mov
sahf
jge
xchg
hlt
pop
jns
imul
adc
xchg
mov
les
push
pop
imul
das
push
jle
dec
adc
sub
add
push
lret
pop
pop
subl
mov
stc
add
cmp
mov
psubq
jp
xchg
rcrb
lcall
jl
add
test
loopne
sbb
enter
add
mov
pop
jo
push
cmpl
ds
dec
push
dec
stos
out
fs
fdiv
push
mov
mov
stos
push
scas
xor
fldl
or
dec
ja
push
adc
push
adc
scas
sarl
xchg
repz
adc
shlb
fmull
popf
cmc
mov
mov
cltd
das
jnp
clc
push
out
push
repz
popf
dec
cvttps2pi
cwtl
dec
pop
mov
mov
enter
lock
fdivl
pusha
push
dec
movsb
cmc
inc
add
stc
in
test
es
gs
fs
inc
mov
cmp
ss
xor
pop
inc
adc
mov
mov
sbb
jmp
xchg
sbb
push
or
icebp
mov
insl
dec
xchg
lahf
enter
mov
out
cmp
rcl
jmp
adc
ljmp
sub
push
cld
shr
movsb
int
into
ss
lods
jnp
add
test
mov
mov
xchg
xor
popf
fucomip
push
test
ljmp
fwait
mov
int3
in
in
and
enter
cmp
les
ljmp
jp
xchg
lahf
mov
outsb
xor
cmp
rcr
mov
mov
mov
stos
repz
ds
and
cld
jmp
stos
sahf
push
push
int
mov
xor
push
jo
push
popf
lds
mov
test
cmc
or
mov
or
sub
cmpsb
xorb
push
push
jae
test
sbb
mov
and
mov
les
adc
adc
inc
stc
aaa
lods
int3
rorb
xor
push
imul
adc
cmpsl
mov
mov
pushf
add
cli
subb
mov
fstps
fisttpl
cmpsw
insb
jle
mov
mov
stos
lcall
das
sub
lea
iret
dec
sub
mov
xor
xor
mov
pop
cmp
push
mov
mov
mov
pop
pusha
dec
cmp
imul
jle
bound
mov
adc
out
add
jbe
sarb
cltd
jmp
sarl
jno
push
xor
jo
xchg
jge
pop
lret
push
xchg
push
out
jl
xchg
push
shr
push
push
sbb
xchg
mov
insl
dec
mov
mov
mov
lods
xchg
push
add
or
mov
pcmpeqb
outsb
pop
and
xor
insb
and
inc
mov
pop
and
rcrb
out
or
xchg
stos
pop
ljmp
add
shll
xor
sbb
cmp
add
sbb
pop
std
pop
ret
stos
jge
in
dec
outsl
lods
outsb
loope
jg
leave
bound
mov
inc
aad
rcrb
lret
pop
push
cmp
mov
inc
repz
dec
insb
sbb
roll
add
pop
out
dec
mov
cmpsb
scas
xchg
pop
push
adc
pop
jecxz
xlat
scas
xor
adc
mov
cld
scas
pop
das
cmc
mov
insl
imul
add
sbb
out
xchg
jbe
jmp
push
push
xchg
jns
int3
dec
pop
pop
cmp
nopl
imul
fldenv
repnz
add
xchg
movswl
jo
push
dec
sti
xor
jbe
jo
imul
dec
insl
pop
movsl
ret
rol
int3
mov
cld
mov
adc
ss
lret
in
and
xor
push
dec
dec
iret
pop
xchg
arpl
mov
mov
imul
lds
lea
jg
lcall
les
pusha
test
scas
add
mov
in
pop
push
push
idivb
mov
dec
aad
scas
sahf
jne
push
test
loop
mulb
outsl
outsb
jle
cmp
pop
insl
xchg
pop
mov
shl
sub
jo
mov
dec
cmc
push
jnp
leave
dec
test
movb
push
pushf
mov
into
mov
push
leave
or
fildll
xlat
cltd
pop
sub
out
adc
pop
imul
mov
mov
jp
aas
mov
pop
mov
out
addr16
pop
mov
xor
pop
cmpsl
out
lods
adc
xor
sbb
rorl
cmp
and
pop
das
jmp
xchg
sbb
shll
mov
shrb
xchg
push
fmuls
mov
xlat
xor
enter
inc
cmp
cmpb
xor
enter
out
fidivl
xor
lds
rcl
cmp
popa
push
inc
mov
ficomps
jae
push
pop
adc
dec
jle
cmp
xchg
lcall
pop
ds
in
dec
xlat
cmp
ret
inc
in
fnstsw
dec
pop
cmpsb
dec
shll
cwtl
mov
mov
xchg
jecxz
mov
jbe
pop
cwtl
mov
out
cmc
leave
ret
out
adc
adc
orl
sub
xchg
mov
xor
shll
aaa
dec
loope
cmp
mov
gs
dec
dec
fsubrl
cwtl
test
insb
pop
mov
inc
jecxz
sarb
mov
lea
or
cmpsb
dec
mov
push
sti
adc
test
inc
outsl
arpl
inc
shl
and
and
idiv
adcb
mov
jo
pushf
push
insl
lods
movsb
and
mov
or
and
mov
mov
cwtl
mov
and
dec
xchg
add
push
or
mov
aas
rorl
mov
cmp
mov
sbb
repz
je
jbe
add
dec
lea
mov
fwait
mov
loopne
ret
cmp
cmp
mov
fstl
and
mov
test
scas
in
cmc
push
push
jmp
jl
shrb
aas
and
daa
sbb
push
mov
jns
xchg
mov
xchg
mov
push
shrl
cmpsl
into
xchg
jl
mov
inc
dec
jne
push
lea
repnz
faddl
nop
inc
inc
pop
mov
stos
lods
add
jge
mov
aas
cmp
add
fildll
hlt
repnz
or
sbb
cmp
inc
je
std
or
xchg
mov
mov
pop
or
add
out
sub
rclb
pop
insl
push
enter
into
in
loopne
sub
xchg
push
imul
fidivs
push
cmp
sbb
popf
xlat
push
jb
je
pop
xchg
outsb
adc
mov
js
fldenv
aas
ja
lock
xchg
in
stos
adc
popf
inc
fcmovbe
mov
sbb
mov
xlat
test
insl
dec
jl
in
pop
js
inc
and
jl
addr16
data16
pop
lea
loope
push
mov
add
pop
pop
stc
cmp
push
add
cmp
fldt
loop
int
dec
add
and
shrl
repnz
enter
add
das
push
mov
mov
pop
push
jne
add
adc
data16
sub
cmc
push
pop
outsb
xor
lock
outsb
out
stc
jecxz
lar
xchg
xchg
arpl
jecxz
popa
xor
inc
and
dec
les
pop
movsb
pop
cmp
dec
add
jno
dec
pop
stc
add
das
scas
mov
cmpsb
and
andb
test
repnz
repnz
mov
divb
xor
and
mov
jge
pop
xchg
jns
add
cmp
lcall
and
rcrb
mov
pop
sub
mov
aaa
xor
cwtl
or
imul
xchg
pop
rcl
fiaddl
add
lcall
loope
movsb
aaa
push
and
sbb
ret
jge
push
dec
jp
int3
lea
xor
push
out
xchg
inc
xlat
xchg
pop
cmp
mov
jmp
mov
xchg
add
fisubs
out
mov
sub
sub
xchg
cs
lods
hlt
inc
dec
lret
sub
jb
xchg
xchg
out
push
inc
test
xor
jle
std
addl
sub
jmp
dec
lods
xchg
fs
imul
in
or
mov
lds
outsl
out
xchg
sahf
pop
cmp
push
add
jecxz
fisttpll
mov
aad
outsl
imul
and
mov
push
rorl
mov
scas
cld
hlt
gs
hlt
cmp
sahf
inc
push
push
xor
into
ja
xchg
xor
shrb
popa
imul
dec
pop
sbbb
push
mov
push
sti
add
loopne
inc
mov
cltd
push
xchg
mov
pushw
push
inc
pop
lea
xchg
jb
js
xor
mov
cltd
ffreep
push
cli
rorb
int
out
hlt
jecxz
sbb
and
pop
fsubrs
bound
jae
xchg
mov
adcb
mov
and
add
xor
xchg
icebp
sbb
shrl
jg
ljmp
out
or
je
mov
enter
lock
pop
out
jbe
stc
push
pushf
shrb
fsubs
inc
mov
lretw
cli
sbb
mov
shlb
cmp
xor
pop
cmp
or
jp
inc
seto
out
mov
dec
and
mov
xchg
stc
shlb
inc
and
pop
mov
xor
addb
xlat
ffreep
addr16
sbb
daa
push
push
jge
add
mov
push
jp
inc
sti
push
cld
and
mov
jg
mov
adc
cs
lods
add
pop
andb
imul
in
fsts
int3
sarb
xor
and
sub
lods
aam
push
push
xlat
rcrl
jge
or
test
sbb
mov
iret
aaa
aad
push
int
push
in
jl
dec
mov
push
stc
inc
int
mov
cs
push
dec
test
mov
test
and
testl
push
pop
hlt
and
inc
jg
ret
in
and
pop
in
je
orl
fwait
test
test
push
aaa
das
aaa
fisubl
fsts
sub
sbb
int3
aas
out
outsl
and
sbb
xchg
je
mov
or
das
loopne
and
sarl
add
lret
jo
jnp
fcoml
sbb
or
ret
mov
xchg
insb
int
push
int
stos
pushf
pushf
push
fdivp
mov
jecxz
sub
mov
fwait
sbb
and
and
insb
pop
stos
addl
insb
push
mov
mov
jns
sbb
pop
cli
and
xchg
inc
sub
mov
jns
scas
inc
jb
clc
push
or
lcall
and
das
test
repz
xor
mov
dec
xchg
js
subb
xor
inc
pop
test
fwait
mov
clc
mov
push
adc
add
sbb
xchg
adc
sti
jno
pusha
repnz
stos
imul
dec
in
ljmp
daa
inc
loop
mov
mov
and
fbld
pop
add
pop
add
cmpl
push
fimuls
jp
dec
into
lock
xor
mov
pop
test
xchg
fisubl
mov
scas
jg
aaa
aaa
push
dec
sar
ja
lock
cmp
lahf
push
jle
rorb
mov
and
rolb
ret
xor
pop
fdiv
imul
add
out
sbb
cmp
pushf
jle
or
jp
jmp
aam
push
shl
mov
adcb
mov
inc
insl
cmp
mov
jnp
cmp
and
or
cmpb
out
inc
jne
xor
push
dec
pop
leave
push
clts
inc
lea
push
jbe
dec
and
stc
fldl
pop
xor
cmp
je
push
ret
sti
in
fbld
es
jno
and
xchg
mov
mov
pop
push
cmc
das
mov
jecxz
mov
shlb
xchg
sub
fistl
lea
dec
sarb
aad
ja
push
xor
jns
popa
mov
adc
rcrb
je
inc
pop
and
mov
insl
lock
and
jnp
lahf
pop
sbb
jmp
jae
repz
adc
mov
fs
mov
pop
and
cmp
pop
rcrb
movsl
shl
jb
notb
pop
jg
sbb
cmp
fwait
jae
jo
out
jle
insb
ljmp
dec
pop
das
imulb
sbbb
mov
mov
mov
nop
sbb
out
push
sbb
data16
and
pop
insb
mov
dec
fwait
pop
dec
or
push
mov
sub
cmpsl
scas
ret
inc
mov
jmp
and
xor
outsl
xor
lahf
imul
push
push
push
inc
xchg
xchg
sbb
iret
and
push
push
and
mov
fildll
int
and
aaa
sarb
sub
fsubl
adc
xchg
cmc
shrl
int
sbb
push
ficomps
mov
loop
mov
call
aad
push
mov
push
insb
fbld
or
test
sbb
stos
or
push
jbe
push
lahf
push
arpl
xchg
scas
mov
movsl
mov
mov
mov
dec
xlat
shrl
push
xchg
inc
sahf
inc
push
mov
pop
cmc
or
out
or
enter
loopne
or
loope
xchg
dec
pop
add
sbb
xor
pop
adc
ds
add
nop
jb
mov
or
and
sub
xchg
in
divb
mov
mov
sub
or
jl
inc
push
cmp
out
jae
fbld
aaa
and
push
jno
cmp
jae
lea
sub
xchg
jecxz
pop
xchg
test
scas
add
xor
pop
lock
in
jae
inc
cmpsl
pop
mov
sub
in
fstpl
imul
add
xor
add
jne
cmp
in
ret
push
iret
cmp
fldl
push
adc
into
lret
cmpb
popf
pop
sbb
inc
push
sub
sbb
lret
push
push
mov
sarl
or
je
insb
dec
pop
xor
jnp
repnz
mov
cmp
or
cmpsb
adc
adc
push
stc
sahf
cmpsb
aas
imul
jp
das
movsb
inc
jne
sub
int3
in
fldt
jmp
stos
sub
mov
in
loop
dec
jle
lcall
mov
das
ds
push
and
repnz
push
push
pop
into
imul
hlt
mov
cmpl
testb
in
aaa
push
sub
xlat
stos
xchg
adc
outsl
out
sbb
in
test
orl
loop
movsl
repnz
jb
mov
dec
mov
into
pop
adc
jl
xchg
bound
dec
mov
stos
xor
jg
outsl
mov
loopne
call
int
fildll
jle
push
jecxz
out
cmp
fs
mov
bound
inc
cmp
lds
xor
or
inc
popf
adc
or
mov
push
fldl
mov
xchg
outsl
movsl
lods
rorl
mov
out
adc
jbe
xchg
inc
cmpxchg
mov
push
scas
data16
dec
fidivs
add
push
adc
scas
push
sub
std
lock
mov
inc
mov
jle
iret
sub
mov
push
rcrb
xor
in
sub
push
cwtl
add
aam
xchg
jle
adc
icebp
jg
push
fs
add
inc
mov
sbb
push
repz
pusha
xchg
jno
dec
and
insb
mov
xchg
pusha
add
cmp
xchg
xor
call
xchg
pop
add
cwtl
and
jns
aaa
pop
inc
pop
and
sub
psubsw
mov
fsubrs
outsb
cltd
xor
xor
shrl
mov
lret
lods
push
inc
pop
sbb
out
out
pusha
iret
inc
sub
popa
sub
xor
movsl
sbb
and
adc
flds
js
test
aam
sbb
fcom
mov
mov
add
jl
mov
mov
sub
jne
cmpsb
out
lahf
and
push
xchg
fs
flds
inc
inc
mov
jge
add
or
imul
imul
pop
add
push
push
jmp
inc
pop
and
push
adc
push
lock
add
dec
jns
in
repz
mov
mov
fidivrl
outsb
repnz
loopne
inc
lds
mov
mov
lret
xor
push
pop
mov
lea
movb
or
je
jno
insl
mov
sub
xlat
and
xlat
bound
int
mov
and
and
test
ja
int3
test
mov
mov
ja
dec
ja
push
jmp
and
ja
lret
push
mov
daa
call
lcall
mov
xchg
icebp
pop
fidivs
negl
stc
les
stos
push
mov
and
fsubrl
dec
movsl
pop
out
ss
out
inc
xchg
jmp
sub
out
xchg
dec
pop
jmp
sbb
sub
in
push
call
mov
nop
int3
imul
stos
pop
out
adc
lock
lods
loope
sbb
fxch
xor
xchg
fbld
push
aas
pop
fidivrs
jmp
sub
hlt
jmp
xchg
je
mov
jae
outsl
int
xchg
dec
and
mov
cmp
scas
mov
and
jmp
fstpt
jbe
add
jg
cmp
add
test
xorl
negb
mov
fsubrl
out
pushf
and
mov
xor
out
les
js
add
clc
cmp
and
lret
daa
lods
xor
xor
inc
sbb
fisttpll
sub
inc
out
xor
ds
jge
mov
mov
jns
or
cmc
cld
pop
cld
pop
inc
jl
jae
fcmovne
insl
xchg
je
add
jl
dec
mov
mov
push
or
mov
push
add
hlt
rcrb
out
fsubl
gs
mov
gs
add
or
adc
fisubs
bound
mov
dec
notb
pop
pop
bound
xor
mov
fcmovnbe
or
mov
decb
jbe
xor
inc
sbb
and
dec
cmc
data16
sub
lea
sbb
rcl
std
adc
pop
inc
outsl
cwtl
repz
cwtl
shll
shrl
inc
mov
or
test
cbtw
sahf
or
out
gs
bound
movsb
movb
iret
aas
xor
sahf
mov
scas
jb
xchg
cmpsl
mov
cmc
mov
jb
push
mov
mov
jle
sbb
sub
loop
jae
sbb
jecxz
cwtl
aam
aam
cmp
out
daa
shl
xchg
push
ja
outsb
adc
xlat
jnp
fld
sub
fnstsw
scas
dec
inc
sarl
iret
jnp
mov
fimull
cmpsb
cmpsb
nop
repnz
bound
mov
mov
cmp
mov
imul
pop
imul
xchg
mov
mov
dec
jnp
xor
pop
cmp
cs
mov
mov
test
fwait
and
call
test
mov
cltd
xchg
test
or
insl
jbe
cmovnp
fcoms
xlat
mov
and
adc
ret
pop
fadd
jge
cli
dec
cmp
jae
jo
adc
dec
aaa
cmp
jg
arpl
mov
cltd
xor
mov
push
mov
shrb
lock
andb
mov
test
xorl
jmp
test
or
jnp
int3
mov
test
pusha
outsb
mov
push
sahf
push
mov
imul
xor
lret
frstor
ljmp
stos
ret
aad
sbb
repnz
xchg
cwtl
push
adc
sbb
out
aas
gs
mov
ljmp
cmpsb
pop
add
leave
sti
jecxz
xchg
mov
add
cmpsl
jno
mov
out
xor
adc
lods
repnz
or
push
arpl
pusha
jg
int
inc
ljmp
mov
int
or
mov
xchg
dec
stc
std
push
and
sub
dec
fdivs
aad
mov
out
fsubrs
sti
shrb
test
sbb
scas
xor
xlat
stos
jmp
stos
xor
jno
xlat
sbb
into
cmp
xor
xor
mov
icebp
jl
xor
pop
xchg
and
and
mov
mov
or
filds
imul
enter
adc
cwtl
pop
addr16
xchg
and
dec
lcall
hlt
dec
ds
int3
in
ret
mov
ss
cli
add
dec
iret
push
ljmp
out
dec
int3
fisubs
xchg
xchg
mov
lcall
mov
fs
push
test
cmpsl
addr16
lcall
mov
outsb
movsl
fists
stc
test
test
xor
shlb
xor
and
sbb
fidivl
xchg
and
push
rcrl
xor
jle
push
adcl
fcomp
sub
arpl
push
lods
out
dec
insb
call
mov
cmpsl
and
push
jbe
enter
add
or
and
std
push
out
mov
xorb
cltd
xorb
dec
cwtl
loope
pop
outsl
lock
cmpsl
mov
inc
lahf
icebp
inc
cld
movsl
adc
ds
outsb
imul
cmp
xchg
adcb
and
ja
int
jbe
pushf
jmp
das
jae
shrb
pop
dec
adc
sub
rorb
shlb
mov
and
pop
clc
movsb
inc
mov
pop
bound
add
shll
jae
cmc
mov
pop
push
rcrb
pushf
rcr
hlt
inc
lcall
lods
adc
cmp
inc
pop
xor
sbb
lods
dec
fcmovu
xor
int3
pop
flds
pop
push
repnz
and
adc
out
fisttpl
cmp
cwtl
repnz
cmp
pop
inc
fldl
enter
inc
adcb
add
xorl
repnz
test
mov
and
js
dec
sbb
das
adc
adc
sar
sbb
out
test
call
jae
stc
xor
ds
bound
test
repz
adc
movsl
test
jmp
cli
jb
ljmp
mov
jnp
ficoms
sbb
push
je
cs
aaa
dec
notl
pop
pop
push
push
test
rcrb
push
sarl
xchg
out
fld
pop
pusha
or
ss
fxch
push
shlb
notb
sbb
movsb
add
adc
jns
push
inc
sub
pop
movsl
outsb
popa
or
jge
mov
xchg
insb
pusha
mov
adc
mov
mul
adc
cmpsb
jg
mov
sbb
sbb
xchg
sub
adc
sbb
js
xchg
add
fwait
adc
cltd
not
fs
daa
call
push
push
aam
push
mov
jecxz
xlat
test
sub
push
xor
push
xor
int
std
loopne
pop
ds
fs
mov
xchg
sahf
fwait
jns
and
movsl
push
call
jge
fstl
or
jb
jb
pop
sub
push
arpl
and
movsl
in
outsl
stos
cmpsl
movsb
popa
push
pop
iret
pushf
push
lcall
hlt
std
mov
xorl
cld
in
lea
stos
cmp
or
ret
ret
inc
and
ja
or
sub
and
mov
lret
popa
push
ret
loopne
cmp
repz
adc
mov
ljmp
dec
aaa
push
sbbb
push
imul
enter
mov
ror
sub
xor
lret
fs
dec
fcmovnb
inc
test
in
mov
bound
mov
movsl
dec
cli
sub
icebp
fdivs
push
jno
jb
repz
or
inc
xchg
push
xor
push
pop
mov
adc
pop
add
or
xor
xor
loop
pop
xchg
adc
xorl
cmp
lea
mov
add
fsubl
pop
xchg
call
pop
int3
dec
cmp
push
xchg
jmp
push
sub
adc
or
fs
dec
mov
int
loope
pop
imul
push
xor
lahf
inc
aad
jno
dec
js
jbe
fnsave
push
pop
mov
outsl
push
sbb
pop
iret
pushf
gs
xchg
mov
cmc
bound
ss
popa
idivb
xchg
sbb
cs
xchg
mov
ret
rolb
fst
mov
xchg
or
push
xor
test
jne
sub
out
aam
test
aaa
dec
push
mov
cmp
jno
psraw
cmc
popf
sahf
or
inc
mov
cmpsb
add
xchg
decb
pop
popf
mov
xchg
pop
arpl
fistpll
sbb
lcall
lods
imul
stos
loopne
adc
jae
push
lret
gs
mov
adc
cmp
pop
fidivrl
js
pop
ja
cltd
int
mov
xchg
ss
mov
mov
mov
negb
out
dec
dec
inc
cmc
sbb
dec
int
inc
movsl
enter
mov
pushl
insb
pop
jb
ret
imul
lods
sbb
mov
lea
mov
cmpsb
jb
mov
fcmovnbe
inc
sub
dec
in
push
adc
mov
je
mov
or
repz
mov
mov
add
pop
push
sub
push
loopne
cmp
pop
ror
mov
aaa
mov
and
daa
clc
and
enter
repnz
inc
cs
data16
inc
push
repz
lods
cltd
push
add
iret
push
add
adc
pop
jl
mov
push
out
pushf
mov
adc
mov
and
mov
add
mov
mov
mov
pop
repz
dec
imul
shl
cld
mov
jo
out
xchg
fdivl
sbb
bound
dec
pop
xchg
insb
lea
pusha
cmp
pop
mov
popf
das
shrl
loop
nop
ja
lods
std
test
jle
cli
sarl
into
dec
shll
xchg
addr16
les
sub
cs
in
push
aam
mov
je
stc
test
push
mov
xchg
orl
inc
push
jb
shl
mov
mov
pop
push
test
int
jg
jge
repz
mov
jl
or
test
mov
inc
cwtl
push
filds
push
fsubrs
cmp
cwtl
xchg
mov
pop
inc
out
popa
xor
ror
jnp
cmpsl
imul
xchg
stc
fisubrs
cmpsl
lea
clc
cld
inc
sub
jmp
fdivs
imul
into
in
cmpsb
mov
lahf
mov
iret
arpl
lds
push
cmp
aaa
sbb
cmpsb
cmp
pop
mov
xchg
jno
mov
xor
cmp
sbb
inc
inc
roll
lret
xchg
jno
stc
mov
stc
push
daa
cli
test
xlat
mov
mov
icebp
popa
mov
sub
push
xlat
mov
mov
xor
jno
mov
push
sahf
push
inc
clc
sub
xchg
or
nop
xchg
mov
dec
mov
stos
jb
jmp
popf
cmp
mov
cmc
out
lret
or
test
arpl
hlt
daa
inc
sbb
ret
or
and
mov
push
faddl
xchg
mov
icebp
lahf
and
loop
mov
out
pusha
xchg
adc
test
jge
jae
in
add
cmp
adcl
shlb
cmp
sbb
ds
negb
lcall
cli
jnp
and
and
jg
faddl
dec
mov
lahf
je
sarb
stos
cld
jge
inc
cmpsb
ret
lea
cltd
test
xor
cmpl
jne
or
cmp
in
jg
jo
hlt
sbb
mov
es
mov
lods
adc
shrb
fimull
adcb
into
jecxz
adc
test
out
cs
popf
shll
xchg
add
mov
push
loop
sti
push
gs
test
mov
cmpsb
jnp
or
xlat
or
adc
jle
sbb
shlb
jge
aaa
sahf
mov
pop
insl
cwtl
lea
sbb
mov
in
jo
cmc
dec
call
or
lds
xor
inc
or
sbb
sub
jmp
ss
push
push
aas
pop
adc
sbb
inc
jmp
jb
ljmp
xchg
mov
cli
or
pop
sbb
jle
mov
dec
or
pop
icebp
pop
xor
xchg
test
lods
int3
out
int
mov
ja
pop
fnstcw
test
dec
rorl
mov
pop
jge,pn
or
icebp
fwait
test
mov
mov
cmpb
cmpsb
cmpsb
dec
xor
data16
pop
aam
or
subb
fildll
cs
xor
sub
mov
fmul
sar
jb
rorl
inc
push
test
mov
sbb
inc
aaa
cmpsb
jmp
fisttps
mov
mulb
addr16
lcall
sub
jb
pop
cmpsb
fwait
addr16
jg
shl
push
or
ror
adc
xchg
mov
js
gs
ret
push
mov
outsb
jnp
xchg
adcb
sub
in
push
and
inc
in
mov
outsb
inc
mov
push
ret
ss
dec
stos
jne
out
fisubrs
mov
jno
loop
test
xor
jae
sbb
cmp
pop
jbe
call
lock
xor
addr16
mov
and
inc
mov
lret
adc
cld
gs
mov
cmpl
cmpsb
mov
cmp
xor
movsb
stc
mov
movsb
dec
mov
outsl
cmp
lcall
mov
dec
xchg
stos
or
cmpsl
roll
std
pop
daa
xor
lcall
aad
adc
mov
lods
add
xchg
add
mov
insb
icebp
ljmp
adc
ds
xchg
mov
fdivrl
popa
repnz
sub
jo
inc
jbe
mov
dec
pop
scas
add
jnp
push
fcmovu
loopne
mov
bound
or
fwait
dec
or
mov
arpl
mov
add
adc
decb
test
out
dec
dec
repnz
ret
lret
int3
cmp
movsl
gs
out
popa
dec
clc
aad
push
push
fistps
dec
sbb
cmp
movsb
jo
mov
loopne
mov
mov
mov
lds
mov
mov
add
insb
subb
pop
mov
jle
jns
add
iret
rcl
jecxz
fwait
dec
stos
xchg
lcall
lea
xor
cltd
dec
mov
mov
inc
xor
loope
inc
fwait
sbb
aam
test
lods
stos
mov
dec
lock
dec
in
out
test
xchg
fisubs
popl
push
pop
pop
cmp
decb
push
aad
loopne
mov
loop
sbb
sub
mov
es
xor
lods
mov
fcmovu
sahf
add
ds
scas
adc
hlt
and
inc
jge
cs
sbb
mov
leave
shll
mov
test
cmp
pop
cs
imul
fsubs
loop
data16
push
shll
mov
jno
sbb
lret
xchg
scas
inc
test
and
lcall
jg
arpl
incb
lahf
inc
stos
test
xchg
xchg
shl
sbb
inc
pop
sti
mov
xchg
in
aaa
test
inc
pop
out
adc
sbb
insl
jmp
cmpsb
sbb
and
movsl
cld
iret
dec
mov
inc
fisttpll
addr16
cmp
mov
adc
or
cmp
dec
imul
arpl
into
idivl
mov
decb
cltd
in
sub
fwait
mov
add
xlat
mov
adc
aad
dec
adc
or
inc
jp
mov
loope
adc
adc
add
jnp
add
push
pop
loope
xchg
stc
and
pop
scas
movsl
stc
call
mov
loop
add
inc
cld
repz
pop
mov
and
pop
push
div
or
fldl
les
into
fdiv
lcall
jl
xchg
sub
pop
dec
sub
test
jle
daa
jae
repz
sbb
dec
fsubrl
outsb
stos
loope,pn
les
mov
sbb
lea
pop
pop
adc
cmc
pop
mov
gs
inc
xchg
jo
pop
ret
ficoms
pop
inc
mov
push
pop
loopne
movsb
sub
stc
cltd
dec
das
in
imul
sbb
mov
jb
leave
out
dec
rcrl
inc
roll
push
xchg
sub
mov
pop
scas
incl
std
mov
adc
sub
sti
sub
adc
and
xchg
add
in
pop
sub
pop
repz
jmp
dec
ss
add
adc
stos
rcl
ret
adc
mov
or
xor
cmp
push
imul
xor
jo
int3
add
jmp
shlb
lods
mov
push
daa
and
xor
andl
bound
pop
in
fists
in
les
std
stc
ficoms
dec
cmp
fistpl
xor
adc
movsl
push
mov
push
cmp
dec
adc
pop
and
fidivl
iret
out
in
aaa
dec
lahf
mov
daa
dec
aas
stos
ret
in
test
test
pop
inc
mov
xchg
pop
sti
xchg
mov
into
inc
loope
int
adc
lret
loope
dec
scas
lret
mov
jecxz
and
scas
arpl
pop
pusha
icebp
fsubs
cld
out
es
push
and
dec
pop
pop
sub
mov
sbbb
xchg
push
mov
pop
mov
cmp
jmp
out
ret
lods
dec
xor
adc
sbb
subb
in
jecxz
aam
test
in
jno
push
bound
inc
lret
inc
or
xchg
je
jle
in
fwait
cmp
fwait
jbe
daa
cmp
and
mov
out
sbb
out
outsl
sub
mov
into
adcb
jno
push
iret
dec
lods
cmp
jg
and
and
lods
mov
xor
mov
aad
pop
inc
inc
data16
jl
fisubs
push
lods
adc
jns
lods
add
sub
test
pop
mov
rcrb
xchg
lock
add
lret
sub
sub
or
jecxz
jno
mov
sbb
cld
xlat
mov
xchg
xchg
pop
or
pop
xchg
cmp
mov
sbb
loope
mov
outsl
xchg
ret
addl
adc
or
jb
pop
push
ja
xchg
aad
in
xor
es
int3
sarb
addr16
scas
iret
out
js
adc
jo
dec
adc
dec
incb
inc
stc
loope
fsubrl
adc
or
ljmp
in
cmpsl
cld
scas
or
dec
es
repz
in
pop
mov
mov
jecxz
je
or
mov
cs
nop
fidivs
pop
dec
xchg
mov
inc
out
sahf
mov
adc
ret
es
int
lea
lods
and
xor
fsub
fmul
insl
lcall
popa
adc
lahf
and
ds
daa
and
xlat
repz
or
dec
sbb
cmp
test
jle
adc
push
cmc
or
mov
add
aam
std
divl
cmp
xor
gs
out
jle
adc
subl
roll
aas
jno
jns
insl
les
push
loope
xchg
adc
dec
gs
in
sub
mov
push
hlt
shrb
test
fisubrs
fsub
xchg
dec
clc
rcrb
push
mov
pop
lds
inc
xchg
test
fwait
inc
sbb
bound
ret
jno
scas
out
clc
or
lea
push
in
xchg
jns
enter
pop
ja
adc
insb
mov
lods
sub
cld
pop
andb
in
andb
push
gs
push
dec
jge
out
je
inc
sbb
add
jae
xchg
out
xor
cmp
jp
scas
adc
mov
loopne
mov
dec
lret
pop
ror
sub
xchg
pop
sbb
ja
adc
imull
cltd
in
dec
in
int3
dec
inc
outsl
jmp
and
dec
or
ret
repz
popa
out
mov
rolb
sarb
out
adc
mov
xchg
pop
jge
sbb
lret
loop
and
lds
lcall
xor
lahf
add
dec
movsl
inc
dec
stc
push
mov
dec
mov
pop
mov
mov
adc
iret
fnop
int
scas
push
sub
cmp
les
sbb
add
mov
jns
fildl
rorl
nop
add
aaa
push
mov
jno
jmp
lret
rorb
in
aaa
add
jmp
scas
cmp
sub
xchg
mov
xor
je
imulb
mov
and
or
jl
je
insl
cmpb
shlb
mov
addr16
aaa
aad
lret
pop
sahf
jmp
xor
les
cwtl
hlt
lahf
stos
push
and
je
pop
pushf
mov
pop
out
test
aad
cmp
popf
dec
stos
xor
jnp
mov
out
mov
aam
out
dec
rep
mov
adc
shrl
mov
les
rcpps
push
ljmp
xorl
mov
and
aas
movsb
in
xchg
cmp
add
mov
mov
sti
rcll
imul
lods
jl
fdivl
loope
roll
sbb
sbb
loop
lock
fimull
push
movsl
inc
test
addr16
aad
xor
add
push
fldt
adc
jne
stc
negb
fwait
aas
push
lods
sbb
daa
lret
adc
dec
add
rclb
lods
adc
addr16
cltd
lcall
fdivrs
add
push
jne
dec
out
and
sbb
and
jne
lock
xchg
add
push
and
add
mov
rcll
inc
shll
aas
inc
in
and
out
lods
mov
sub
mov
mov
aaa
jo
fidivrs
pop
cmc
or
push
jmp
sbb
cmp
repz
int3
in
xchg
or
ror
or
inc
push
adc
lret
pushf
jo
sub
and
lds
ja
out
dec
shl
cmp
mov
outsl
jg
iret
add
push
aad
icebp
lock
dec
gs
outsb
repnz
js
push
cmc
cli
dec
pop
test
out
test
aam
in
stos
jae
cmovge
pusha
jbe
out
mov
stc
pop
imul
or
jg
jno
adc
mov
repnz
cmp
jle
cmp
adc
loopne
filds
mov
cwtl
jb
jne
test
fdivrs
mov
ljmp
test
fcmovnb
movsl
add
lds
movsb
rcrl
cs
pop
and
and
xchg
leave
subl
dec
sub
call
enter
mov
inc
mov
pop
testb
cli
aaa
es
test
fcos
inc
mov
sbb
das
cwtl
lret
mov
ss
sbb
mov
mov
pop
mov
sahf
lock
adcb
rclb
jns
out
pop
inc
mov
mov
cmp
and
push
jne
cmp
les
pop
or
jge
mov
cmp
dec
jp
pop
int3
hlt
testl
imull
sti
sub
arpl
adc
pop
and
repnz
xchg
out
adc
xchg
mov
mov
loopne
call
jle
bound
and
std
push
mov
sarb
add
inc
push
aam
mov
sub
arpl
dec
xor
fwait
pushf
or
lret
cmp
aas
or
pop
rcrb
pop
ret
loopne
xchg
cmpsb
dec
or
push
mov
stc
and
pushl
das
adc
arpl
pop
in
jp
mov
outsl
cli
mov
insb
lahf
fs
and
lahf
ljmp
mov
xor
rorl
es
pop
ss
dec
je
pop
cmp
add
adc
aam
and
sub
gs
sbb
xchg
mov
and
mov
jl
cld
mov
iret
ds
repz
in
fs
fildl
gs
jno
sub
dec
cld
arpl
sbb
xor
lea
xor
pop
xchg
mov
xchg
xchg
and
mov
adc
push
test
js
mov
sahf
addr16
mov
xor
addr16
xlat
inc
cmpl
aas
sub
pop
xor
sbb
inc
jb
sub
cmp
mov
and
ret
and
rcr
xchg
std
orl
arpl
mov
add
std
stc
js
cmpsl
movsb
xchg
cs
mov
inc
sbb
push
adc
ficompl
mov
es
ss
pop
or
mov
mov
push
rorl
sti
loopne
addr16
inc
rcrl
adc
mov
mov
sub
arpl
lods
addr16
mov
adc
or
subl
lret
int
mov
stos
push
outsl
cmp
es
xchg
dec
sub
adc
push
dec
mov
call
jbe
mov
mov
dec
push
repnz
cs
and
cmpsb
ljmp
rorb
push
xor
in
negl
cmp
or
iret
int
cmp
aad
dec
mov
push
loopne
mov
or
hlt
and
mov
pop
xor
cltd
or
imulb
xor
rcll
addl
mov
sub
cmpsl
adc
outsl
mov
insl
pop
pop
add
stos
dec
mov
add
push
mov
dec
dec
xor
jo
pop
jnp
jno
pushf
outsl
dec
lret
dec
out
shlb
jl
imul
push
xchg
mov
stc
pop
int3
leave
movl
mov
sub
test
add
add
roll
stos
lods
jge
ljmp
or
fsubl
and
adc
call
jmp
push
mov
loope
test
iret
cmp
fs
jmp
inc
jg
loope
pop
ret
and
xchg
xchg
cmp
bound
inc
mov
mov
loopne
imul
das
inc
mov
cmp
cmp
lret
pop
repnz
psubq
cli
xor
out
xor
je
jecxz
xchg
in
add
ja
mov
pop
jmp
outsl
shll
or
pop
sbb
popa
mov
insb
popf
sbb
xor
inc
or
mov
loope
mov
cmc
mov
in
iret
pop
ds
call
arpl
sahf
lea
or
hlt
cmp
xorb
call
rorl
lock
fsts
cwtl
xlat
std
roll
shrb
rcr
out
inc
loop
push
into
jbe
cmpsb
xchg
push
sbb
or
add
cmp
ja
out
mov
adc
negl
fucomi
stos
sub
jg
dec
ljmp
xchg
adc
sub
pop
repnz
into
pop
xor
pop
sbb
push
mov
add
add
push
jae
jg,pt
cmc
mov
outsl
sahf
xor
sbb
jmp
icebp
popl
aaa
negl
mov
lahf
xchg
xchg
cmpsl
enter
hlt
fucompp
mov
cmp
push
fs
cmp
sbb
data16
pushf
rcrl
pop
inc
out
fmul
popf
cmpsb
mov
xor
sbb
xchg
xlat
sarb
je
das
repz
les
mov
add
inc
sarl
out
inc
pop
or
bts
cmc
ret
add
pop
dec
xchg
sarl
mov
xor
sbb
push
shrl
into
sub
dec
jo
lods
repz
and
xor
inc
mov
push
loop
mov
scas
dec
movsb
lret
clc
lods
pushf
fstp
fs
or
fwait
out
mov
add
int3
pop
mov
arpl
aas
pop
adc
jp
je
outsl
sbb
or
mov
adc
ret
xchg
push
adc
inc
or
mov
pop
arpl
pusha
mov
aad
std
and
jb
in
test
add
je
adc
or
jp
pop
out
jne
xchg
imul
insl
test
fstp
out
and
ret
call
insb
xlat
jne
xchg
popf
ss
dec
testl
xor
rclb
rol
shl
push
xor
pop
popa
nop
cmp
xchg
sar
xchg
lock
and
jb
cmp
jno
ret
adc
pop
sbb
pop
adc
jle
ljmp
divl
stc
adc
lret
push
leave
cmp
out
push
mov
xor
xor
push
icebp
mov
xor
sub
insb
clc
inc
aas
ret
outsl
ljmp
loopne
bound
push
adc
push
cld
pop
add
gs
inc
mov
iret
daa
cmp
inc
cmp
repz
xchg
repz
add
js
test
xor
inc
push
inc
pop
fdivrl
mov
xor
jae
fs
je
lret
pop
add
mov
xchg
call
add
xor
inc
out
in
sahf
mov
ficompl
push
cmp
mov
rcrl
adc
dec
mov
js
push
movsb
cmp
or
test
mov
inc
loop
in
cmpb
sbb
cmpsl
or
ljmp
in
cmpl
mov
add
jb
fiaddl
test
aam
jmp
fcmovnu
int
push
inc
movsb
adc
inc
jne
outsb
je
cli
lods
jg
or
xchg
stos
jmp
inc
add
repz
fwait
adc
fimull
xor
xor
idivb
and
push
lahf
add
sti
add
mov
out
sbb
cmp
xchg
or
mov
mov
in
push
or
mov
popl
in
divb
xchg
mov
dec
add
leave
imul
bound
lea
out
loopne
sbb
fdivrl
push
repnz
imul
or
sub
mov
cltd
pop
js
lock
mov
mov
adc
decb
mov
jecxz
ret
sarl
dec
inc
test
mov
and
jl
lret
lock
xchg
fwait
cltd
shrb
lret
mov
push
shll
pushl
cmp
loop
mov
mov
test
adc
aam
lret
and
add
les
scas
outsl
pop
mov
paddusb
cmc
xlat
xchg
outsb
dec
ret
push
ret
test
push
clc
inc
xchg
movsb
int3
mov
inc
arpl
aaa
out
xchg
or
subl
pop
sub
fmulp
and
cmp
notb
sti
adc
movl
nop
sbb
rcrb
sbb
mov
test
xor
cmp
cmp
cmc
or
imul
cmp
pop
aas
mov
aad
jge
icebp
lods
lcall
mov
mov
js
add
loope
xlat
xor
out
hlt
mov
in
xor
add
cwtl
loopne
cmpl
xchg
cli
lock
or
cmovge
popa
flds
fucom
inc
sbb
movsl
push
sub
icebp
mov
lds
inc
rol
fs
cmc
stos
sbb
xor
mov
and
inc
add
int3
das
pushf
push
hlt
cmp
ficomps
aam
gs
jmp
pusha
out
inc
sti
shl
movsl
inc
fscale
je
into
popa
lods
mov
mov
xchg
adc
xor
and
stos
push
bound
hlt
cld
out
add
xlat
jae
mov
loope
outsl
gs
cwtl
push
testl
adc
xor
out
jae
movsl
jo
mov
pop
dec
inc
push
push
insl
ja
pop
xchg
mov
divl
jo
jmp
cmp
loop
insl
mov
dec
or
cs
jp
dec
lret
scas
fildl
inc
and
gs
notl
adc
sbb
lahf
pop
adc
insl
pop
daa
sbb
mov
and
in
dec
arpl
in
cmp
ds
dec
dec
xor
xor
es
sub
imul
fstpl
dec
les
lahf
ret
add
adc
jp
hlt
bound
pop
insl
sbb
das
std
aas
cmp
xor
push
aas
fisubrl
xchg
data16
int3
lods
dec
scas
xchg
ret
cmp
push
sub
das
pushf
xchg
loopne
mov
mov
or
sub
xchg
lea
or
out
jne
js
push
jecxz
stos
ror
xor
sahf
hlt
jl,pt
mov
adc
jb
cmp
jmp
ja
and
fbstp
jle
cltd
mov
mov
cmp
pushf
incb
or
adc
mov
pop
int
add
mov
movsb
push
xchg
insl
int3
mov
jne
xor
gs
dec
cmp
pop
call
lcall
mov
vpmacssdd
scas
push
sub
push
stos
sti
int
push
insb
out
cs
pusha
hlt
mov
mov
pop
je
xchg
mov
test
sbb
dec
mov
mov
dec
mov
jp
das
out
pop
rolb
aas
loope
sub
lcall
mov
push
mov
jle
fs
sbb
cmp
fnstcw
in
adc
out
sbb
fidivl
lcall
push
fnstcw
mov
xchg
imul
or
out
adc
sbb
jl
shlb
loope
ret
idivb
subl
dec
mov
into
jp
into
or
or
inc
into
push
scas
les
cmp
pop
push
jg
cmpsb
js
inc
jb
mov
fistl
js
push
pop
pop
dec
xor
sahf
ljmp
in
sub
xor
sti
testl
adc
adc
cwtl
xchg
int3
dec
mov
out
pop
pop
jno
xor
popa
scas
gs
leave
xchg
nop
loopne
push
pop
push
inc
xor
out
js
insl
or
mov
stos
mov
mov
sti
ds
jmp
sub
cs
mov
adc
shll
adcb
lds
in
bnd
sbb
mov
mov
jle
fists
jae
out
adc
fsubrs
adc
sub
inc
add
pop
sbb
jmp
sar
movsb
cli
and
aam
test
cs
mov
iret
xchg
inc
sub
xchg
icebp
mov
stos
mov
sbb
push
sahf
stc
movsb
dec
aad
scas
aaa
loopne
addr16
lea
and
adc
pushf
aad
rcll
cmp
fdivrs
ror
loop
daa
push
xchg
scas
dec
notl
push
and
cmp
in
cmpsb
cld
pop
push
xor
into
mov
mov
adc
loopne
outsl
sub
into
adcl
xchg
push
andb
xchg
or
cmpsl
mov
mov
out
test
enter
xchg
sub
inc
dec
jge
sbb
ss
cmp
adc
test
push
jp
pop
orb
and
lds
out
loope
mov
insb
xchg
fisubl
xor
in
dec
movsb
mov
mov
movsl
pop
les
adc
inc
mov
fcmovne
ret
into
push
iret
cmp
stc
out
jmp
cmp
pop
int
and
mov
or
mov
xor
sbb
adc
sbb
and
mov
or
push
aam
sub
pop
daa
push
dec
cmpsb
dec
pusha
mov
xchg
ficoms
mov
rclb
and
dec
mov
mov
dec
pop
aad
test
test
je
push
mov
pop
and
adc
fs
sti
andb
shrl
push
sub
aaa
jb
int
int3
hlt
sub
insl
int
jg
inc
mov
bound
gs
adc
mov
jbe
fldenv
cwtl
push
xchg
aad
sahf
insb
fbstp
xor
aad
jns
add
xchg
mov
lcall
aaa
or
aad
sti
sub
es
fbstp
jae
sbb
mov
adc
add
pop
pushf
je
dec
jb
nop
pop
sub
sub
pusha
bound
pop
enter
dec
push
clc
scas
xlat
call
sub
outsl
pop
mov
or
xchg
es
add
pop
int
pop
cmc
test
and
push
mov
addb
rorl
jae
sub
jno
jbe
xor
pushf
addb
push
cmp
pushf
cmp
ljmp
repz
pop
in
sahf
sub
xchg
push
imul
test
rcr
and
mov
inc
sarl
cmp
jg
lahf
add
icebp
inc
mov
cltd
iret
dec
sbb
cmp
mov
pop
jae
loopne
and
add
inc
adc
int3
mov
xor
lock
push
pushf
cmc
ds
data16
sbbb
fldl
mov
loop
pusha
out
xor
adc
dec
stos
stos
dec
cmp
sti
sub
outsb
pushf
cltd
aam
push
cmp
in
fistpll
mov
ja
in
mov
rcl
adc
sar
xor
ret
xchg
jae
enter
mov
cmp
push
lods
mov
sbb
add
idiv
test
out
scas
inc
mov
mov
push
in
sahf
and
sahf
fistl
lds
and
add
adc
pop
les
pop
out
sbb
push
push
cmc
xchg
idivb
psubd
inc
pop
mov
jl
and
xchg
icebp
cmp
in
mov
sti
imul
inc
mov
inc
in
nop
cmp
lahf
pop
adc
or
and
out
pop
bound
sub
data16
jns
mov
push
push
loope
xor
mov
out
lock
pusha
popa
pop
cmc
adc
jge
mov
mov
sahf
shl
sbb
or
mov
push
add
fnstenv
add
pop
int3
fbld
into
mov
dec
sub
pop
int3
pop
lahf
push
int3
scas
call
push
mov
movsb
mov
xchg
addr16
jno
cmc
call
scas
lret
repz
mov
add
add
xchg
sub
push
aas
fildll
icebp
lcall
mov
jo
xorl
ljmp
sub
stos
mov
jecxz
incl
xchg
fadds
lret
xchg
std
push
xchg
insb
mov
mov
xchg
xchg
lea
les
mov
xor
lea
out
sbb
and
repz
mov
mov
xor
flds
push
xchg
iret
sahf
mov
jecxz
jmp
in
inc
xchg
jle
jnp
mov
mov
jecxz
lret
cltd
loop
shll
jnp
aas
je
sub
outsb
push
inc
insl
xchg
icebp
push
out
icebp
adc
mov
pop
add
pop
xchg
rcr
mov
add
add
jb
sub
stos
add
jo
pop
arpl
repnz
push
cmp
jne
dec
std
push
mov
mov
inc
in
pop
popa
push
stos
cmp
pop
push
mov
cmc
ret
sar
cmp
out
push
mov
insl
jge
mov
xor
cwtl
pop
push
pop
cmc
repnz
xchg
xor
cmpsb
adc
lahf
jecxz
in
or
adc
xchg
ss
xor
out
xor
push
sbb
adc
hlt
mov
rorl
jo
mov
out
dec
decl
adcl
clc
movsb
pop
inc
adc
je
xor
fistps
mov
cld
in
subb
ss
fistps
loope
popf
and
sbb
cltd
jp
push
mov
fcomp
lret
xchg
or
loopne
scas
arpl
je
fwait
push
fldl
out
roll
and
pusha
or
pop
orb
jno
icebp
mov
int
adc
cmc
fstpt
sub
hlt
inc
jno
fwait
out
int
in
repnz
sarl
daa
or
out
cwtl
decb
pop
cmpsl
and
out
mov
lret
in
fstps
in
sub
mov
dec
xchg
mov
int3
ret
test
mov
push
pop
fdivrs
iret
mov
sub
xor
xor
pushf
pop
jg
outsl
mov
mov
xchg
imul
addr16
test
push
ja
fstps
popf
nop
xor
and
gs
dec
dec
and
jbe
sbb
imul
and
push
ljmp
pop
mov
inc
adc
movsb
mov
jns
dec
push
int
test
push
cmp
ret
clc
pop
adc
jns
das
cmp
mov
mov
mov
dec
imul
sub
lds
push
xor
dec
stc
sub
cli
pusha
aas
imul
fs
data16
lcall
int3
hlt
sbb
pushf
fsubl
dec
repnz
mov
stc
xchg
xchg
cmp
cmove
add
mov
sti
jae
mov
jmp
dec
pusha
popf
fistps
cmp
jnp
ljmp
fstl
and
lcall
nop
or
and
inc
outsb
jmp
mov
pop
inc
paddw
mov
dec
sub
fisubrs
data16
outsl
jg
inc
xchg
bound
insl
xor
pusha
ds
jmp
es
loop
mov
fisttps
push
xor
insb
sbb
pop
scas
scas
jbe
cmp
jmp
les
cmpsl
cmp
je
and
cmp
xor
rcrl
and
cmpsb
mov
nop
and
pop
jb
scas
fists
das
imul
test
movsb
ret
jle
outsl
movsl
cs
jge
sbb
test
xor
sbb
xor
jo
pusha
push
dec
jbe
cmp
pusha
jmp
cmpsb
lahf
cmp
mov
lea
adc
ror
cltd
jge
pop
subl
jle
jmp
jp
jmp
xor
and
aaa
ja
push
jl
add
fdivrl
adc
inc
enter
cld
int3
or
push
jnp
sub
jb
mov
cli
mov
xchg
or
sarb
sbb
jmp
jnp
mov
cld
stc
adc
shr
into
imul
add
les
lea
fsub
push
cltd
mov
jno
orl
orb
sbb
jmp
pop
xor
pop
inc
inc
mov
push
sahf
dec
jnp
fs
add
scas
mov
or
mov
insl
outsb
js
or
xchg
sub
pop
lods
jmp
js
ja
sub
or
mov
sahf
ret
sub
icebp
mov
test
inc
pop
out
or
lahf
xor
fnstenv
rorb
enter
in
movsb
sti
cmpsb
push
fists
js
dec
push
cltd
rcll
inc
xchg
jg
lahf
cmp
or
cwtl
fs
jl
sbb
dec
mov
mov
leave
jl
ja
call
sti
mov
out
imul
and
sub
sbb
cmp
adc
push
push
lret
jne
lds
and
mov
addr16
xchg
sti
adc
mov
dec
cs
orl
and
xor
push
inc
dec
push
jle
jmp
sub
sub
clc
mov
inc
pop
lahf
ret
sahf
out
mov
scas
adc
insb
insl
lcall
adc
test
jo
and
add
lret
nop
data16
lret
sub
jne
push
xor
lret
cli
push
mov
mov
movsl
in
xorb
mov
sub
sti
sahf
mov
jo
fstpt
in
int
imul
inc
add
and
adc
inc
movsb
sbb
sarl
bound
pop
pushf
jl
add
push
cmp
ja
adc
cmpsb
ss
mov
mov
add
add
int
ret
add
test
xchg
lods
mov
pop
pop
adcb
adc
jns
push
or
sbb
dec
cwtl
jg
popf
or
movsb
mov
sub
mov
sahf
lea
inc
jns
flds
mov
scas
les
gs
jae
dec
add
xchg
xchg
jecxz
ret
cmp
mov
xlat
insl
inc
xor
sbb
jg
mov
cmp
sub
scas
fdivs
xchg
dec
ds
subb
imul
aam
cmpsb
stos
push
out
fstpt
dec
call
sbb
test
xchg
cmpsb
iret
jp
movsl
cli
cmpsb
mov
js
fisttps
cmpsb
jne
sbb
xor
aaa
add
fcoml
sub
ss
xchg
cwtl
cs
test
aaa
outsl
or
movsl
in
xor
adc
xchg
cs
mov
leave
addr16
lret
divb
mov
jle
jno
mov
or
sbb
mov
dec
es
std
repnz
jmp
mov
jbe
cwtl
ss
or
inc
pop
insl
pop
jno
mov
jecxz
xchg
testb
mov
pop
cs
add
mov
popa
sbb
pop
push
sti
icebp
jg
fmull
stc
cmp
ja
data16
mov
sbb
pop
cbtw
mov
stos
imul
add
and
test
stos
dec
sbb
in
arpl
aas
cmp
jb
cmc
and
fsubl
pusha
mov
movsl
insb
xor
xor
ret
push
popa
into
pushf
mov
xchg
add
hlt
dec
mov
nop
jbe
fnstenv
test
inc
fcoml
cmp
xor
add
xchg
or
push
loope
mov
mov
mov
xchg
adc
imul
xchg
out
arpl
inc
xor
mov
mov
adc
mov
int
scas
sahf
mov
mov
aad
notb
mov
icebp
rorl
cmp
imul
and
dec
fwait
lea
push
dec
pop
out
cwtl
je
aam
xchg
fsubl
xchg
arpl
idivl
push
adcl
xlat
xchg
leave
cmp
dec
cmp
xor
mov
in
int3
lea
push
enter
not
jo
aam
clc
xchg
ror
push
pop
shll
mov
push
dec
in
mov
pop
jp
es
add
jne
mov
fsubs
fisubl
or
mov
lea
sbb
jo
fildll
ret
movb
inc
and
inc
hlt
pop
xchg
imul
add
add
ffreep
das
and
out
mov
mov
push
loopne
es
test
xchg
sbb
pop
sti
push
imul
sbb
mov
sbb
push
add
shrl
sub
in
stc
add
jge
xcrypt-ctr
cmpsl
pushf
push
aas
mov
ret
push
pushf
and
imull
sub
movq
or
aad
inc
sbb
dec
loopne
gs
jmp
out
out
test
insb
sbb
call
shll
movsb
fs
dec
orb
test
std
push
push
pop
dec
mov
inc
sbb
ficomps
sbb
cmp
add
je
inc
dec
adc
addr16
stos
dec
movsl
pop
in
add
dec
test
inc
cmpsl
cmovne
cmp
cmp
js
pushf
sub
mov
mov
pop
shll
stos
mov
adc
shll
ja
push
repnz
add
fistpl
sub
dec
cwtl
pop
sub
mov
sbb
inc
sbbb
mov
sbb
dec
movsl
ljmp
ror
dec
hlt
loop
out
sub
sub
sub
sbb
jl
cmc
push
das
cmp
mov
push
mov
push
dec
ret
insl
leave
mov
xor
pushf
aas
mov
stos
mov
adc
adc
rclb
std
ljmp
stc
mov
cltd
xchg
leave
mov
push
pop
test
pop
pop
test
div
clc
add
and
sbb
adc
ret
stc
adcb
jp
adc
cs
bnd
xlat
out
mov
sbb
mov
add
cmp
jb
sbb
roll
mov
or
adc
jge
pop
out
test
dec
push
fs
jb
jne
mov
rcrl
fucom
or
pop
popa
xchg
push
out
lret
cltd
sti
xor
ss
xchg
daa
sbb
mov
push
into
clc
jnp
adc
jg
jo
pop
xor
scas
jns
jmp
das
or
dec
jecxz
jae
inc
jbe
cmp
or
daa
mov
cmp
loop
mov
daa
testb
lret
xchg
fcoml
nop
stc
or
sbb
roll
sub
sub
stc
int
enter
push
clc
sbb
jne
mov
mov
jae
faddl
inc
fucomi
shll
rcrl
xchg
mov
adc
rol
pop
ja
and
xchg
rorl
cmpsl
fldcw
jae
inc
cmp
or
jl
sbb
shld
xchg
test
jo
out
push
test
mov
and
cs
in
pop
sub
mov
test
adc
out
jg
pusha
mov
pop
dec
jne
cmp
dec
insb
shrb
cld
mov
mull
stc
and
in
clc
mov
test
aaa
xchg
fldcw
jge
ljmp
jb
jo
aas
pop
mov
cwtl
pop
add
mov
jecxz
adc
pusha
fldenv
cwtl
dec
loop
sub
leave
imul
cld
xchg
mov
mov
inc
sbb
cmp
into
repz
icebp
leave
fisubs
push
xor
outsb
pop
xlat
testl
faddl
push
jg
movsb
aas
push
cmc
addl
and
scas
jp
roll
test
push
and
sub
mov
jmp
lea
mov
or
push
or
ficoml
and
imul
pushf
jae
mov
das
xchg
in
jmp
adc
pop
jnp
or
clc
dec
mov
xor
int
loop
or
cli
js
mov
mov
and
stos
jo
or
sub
popf
xchg
sbb
dec
rcrl
ds
clc
adc
ljmp
lcall
pop
xor
push
rcr
push
mov
xchg
pop
out
es
lret
fsubrs
fwait
adc
js
dec
fstps
push
adc
test
pop
subb
xor
mov
xchg
imul
mov
lods
shr
mov
jo
xorl
inc
pop
mov
cld
jmp
mov
dec
mov
cmp
or
cwtl
inc
dec
mov
mulb
sarb
cmpsl
xchg
push
je
push
movsb
inc
jecxz
cld
repz
jl
movsb
mov
add
dec
fnstenv
jge
add
addr16
cmp
out
das
in
xlat
aad
jmp
xor
push
jle
or
mov
sub
jg
sbb
lahf
mov
into
testl
fisubs
lods
adc
cmp
sbb
les
scas
and
in
dec
push
pop
mov
mov
xlat
loop
movsl
mov
outsb
mov
pop
popf
adc
cwtl
add
xor
pop
sbb
sbb
inc
sti
push
cmp
fbld
enter
mov
mov
cmpsl
jo
aas
out
clc
lahf
roll
xor
cmp
iret
sbb
in
pop
cltd
data16
aaa
xor
push
mov
jo
pop
fcomip
pop
pop
xchg
shl
xorb
scas
mov
and
movsb
gs
dec
xchg
mov
fucomi
fildll
and
xchg
jecxz
cmp
stos
mov
mov
sbb
push
sbb
push
scas
leave
xchg
push
es
int3
aas
pop
push
mov
gs
jae
fadds
imul
test
mov
fs
cmp
adc
shll
lretw
ficoml
mov
pop
mov
fs
je
adc
outsl
xor
pop
sahf
out
jno,pt
enter
es
add
jno
insl
mov
xor
sbb
fistpl
in
cmpsl
adcl
and
dec
in
in
or
push
pop
in
gs
adc
xchg
xchg
add
sbb
sbb
adc
fst
lcall
adcl
cltd
les
push
jp
dec
addl
pop
sti
test
add
in
call
ja
aad
jl
jae
add
inc
imul
jb
mov
dec
inc
aam
or
mov
dec
or
add
and
mov
jae
mov
fwait
aam
sub
pushf
inc
leave
jge
js
xor
jg
mov
cmpsl
mov
mov
dec
fldpi
and
mov
inc
xchg
xor
cmp
ss
mov
cmp
add
pusha
daa
ret
data16
or
mov
loop
shl
cmp
aad
or
loop
js
mov
mov
dec
xor
ret
xchg
pop
jmp
mov
ds
push
pop
sub
adc
daa
scas
push
fldl
loop
adc
repz
mov
cmpb
inc
pop
mov
mov
ret
into
add
les
adc
jmp
jle
mov
outsb
mov
mov
int3
lock
or
dec
inc
popa
and
lea
loop
jnp
add
das
js
cmp
sahf
cli
lret
and
or
bound
aaa
imul
sbb
xlat
ret
pop
scas
std
xchg
movaps
jmp
cmpl
arpl
cmp
adc
add
cli
mov
and
mov
dec
pop
call
es
pop
jno
and
pop
arpl
pop
js
cmp
mov
cmpl
xchg
cwtl
enter
inc
mov
in
lahf
ret
clc
adc
cwtl
lds
push
std
jbe
iret
sub
cs
sub
cmp
cmc
adc
dec
lahf
popa
xor
ds
jno
cmp
pop
and
sub
mov
pushf
dec
mov
push
scas
pop
sub
sar
xor
stos
jno
mov
ret
dec
cwtl
out
mov
aaa
sub
adc
xchg
cmp
out
arpl
repnz
call
add
je
mov
arpl
push
and
dec
andl
xor
sub
mov
je
outsl
mov
xchg
xlat
imul
test
jo
mov
xor
jge
cltd
out
sti
xchg
xchg
dec
mov
les
repnz
ret
mov
mov
loop
cltd
addr16
das
inc
push
pop
add
repnz
inc
xorl
repnz
scas
push
bound
push
inc
js
fs
je
in
jl
sti
cmp
adc
and
jmp
mov
mov
lcall
jb
mov
push
dec
push
xchg
xor
aad
shrl
add
es
inc
mov
dec
hlt
roll
and
outsb
test
insb
fnstsw
aaa
and
jecxz
dec
add
sar
or
or
push
int3
cmp
jo
xorb
ja
popf
loopne
mov
cli
cli
divl
pop
mov
pop
fmull
mov
fsts
out
mov
scas
push
fldenv
shll
repnz
popf
cmp
scas
inc
or
into
ret
inc
addr16
sub
cmp
and
aam
cld
jg
fs
hlt
cmc
adc
xchg
fcmove
imul
ret
in
add
xchg
adc
int
push
fiaddl
and
movsb
cltd
add
test
lods
in
or
xchg
bound
mov
jns
inc
xchg
and
or
daa
out
ss
imul
sbb
and
sub
arpl
pop
lcall
adc
mov
sbb
adc
inc
faddl
lea
mov
jne
push
and
es
and
fisubl
cmpsl
inc
aaa
div
mov
sub
movsb
rclb
push
imul
mov
cltd
jae
popa
jne
inc
in
xor
dec
mov
inc
fsubs
inc
loopne
iret
dec
rolb
inc
loopne
cwtl
adc
insb
xor
sbb
subl
loope
mov
outsl
xchg
inc
sub
adc
jae
dec
fcomip
rolb
fmuls
imulb
lcall
push
sahf
lcall
push
mov
add
sti
outsl
jne
scas
cmp
cltd
pop
lahf
fstpl
jae
pusha
loop
jns
cs
insb
daa
xchg
pop
mov
adc
and
sub
orb
lds
lock
rolb
or
or
lods
mov
fdiv
and
xor
sub
and
jge
push
js
sub
jp
pop
mov
filds
test
push
punpckhbw
fisubrs
jo
fcoms
repnz
jno
lea
sub
stos
imulb
cli
xchg
add
pop
push
in
gs
dec
dec
in
aad
jle
sub
fldenv
mov
sbb
fstpt
mov
mov
push
bound
repnz
sub
or
dec
out
sarl
sub
inc
daa
out
mov
or
test
in
bound
inc
lods
xchg
cwtl
pop
mov
sarl
test
sahf
loopne
mov
and
ret
sbb
test
pop
or
pop
jge
scas
pusha
insl
jne
jmp
fs
sbb
outsb
shl
adc
cmp
jge
bnd
pop
mov
pop
dec
sub
inc
cltd
lods
push
clc
int3
imul
into
pushf
aad
dec
push
mov
xor
arpl
and
ds
les
xchg
call
repz
xchg
fcmovnb
cmp
call
popa
sbb
add
push
pop
sub
cmp
push
sub
dec
repz
js
out
mov
ret
je
and
sub
fsubs
xor
adc
out
push
jmp
inc
lea
add
test
pop
push
cmpsb
in
inc
and
xor
pop
pop
cwtl
shr
stos
mov
inc
stos
lahf
push
stos
jne
cli
mov
push
inc
fiadds
jl
add
pop
sar
cmpsl
adc
jnp
ja
jg
shlb
fcomp
push
xchg
pusha
add
push
icebp
out
rcrb
ret
xor
and
adc
cmp
lret
hlt
xchg
bnd
sbb
add
sbb
adc
adc
test
mov
adc
adc
mov
lds
jmp
popa
dec
decb
push
pop
iret
aam
sbb
jp
lods
push
lds
bound
filds
stos
adc
and
sub
xchg
cs
lods
jmp
ds
inc
push
je
cmp
int
push
or
jmp
mov
mov
sub
jb
add
lock
clc
mov
ljmp
aad
addr16
dec
jmp
push
jle
cmp
cld
int3
fiadds
scas
call
rcr
aaa
enter
and
out
sbb
push
mov
in
dec
lahf
jle
jne
cld
fistpl
inc
subb
xlat
push
gs
add
stos
lds
xchg
lret
cs
nop
push
mov
shlb
lds
pop
scas
and
jmp
hlt
fiaddl
jp
arpl
add
sbb
into
or
neg
sub
insb
test
shll
cwtl
cmp
lcall
pop
mov
push
out
xchg
mov
test
jb
adcb
shll
push
scas
hlt
xor
daa
jne
sahf
pop
movsl
cli
add
dec
fadds
or
loop
scas
icebp
sub
pop
jle
push
push
fs
popa
les
dec
mov
in
aam
mov
xor
or
scas
mov
cs
inc
or
push
mov
out
es
inc
mov
sbb
sbb
shrb
loopne
mov
cmpsl
out
pop
mov
xchg
call
mov
scas
sub
fisttpll
and
test
and
aas
jmp
xlat
mov
mov
jne
pusha
dec
fdivs
mov
repnz
mov
or
add
mov
movsl
mov
jle
mov
jmp
sarl
xchg
jbe
aad
sub
subl
mov
add
lret
cmp
xor
sbb
bound
sub
and
cltd
xchg
rcll
ret
lea
test
sbb
lods
and
cmpsl
sbb
push
xchg
data16
and
pop
add
stos
sub
inc
pop
add
test
add
imul
outsl
sub
xchg
scas
sbb
xor
mov
mov
xor
jns
shrl
stos
fmuls
lods
imul
xor
popf
in
and
pop
aam
jnp
sbbl
dec
mov
xor
cltd
or
icebp
cmp
test
cli
adc
sbb
or
adc
xchg
mov
dec
mov
imul
xor
mov
pop
jle
cltd
cmc
ficompl
mov
outsb
scas
dec
leave
dec
cltd
in
xor
shrl
cld
cmp
push
and
in
dec
mov
rcll
ret
cmpb
cmpsb
mov
add
movsl
fmul
cli
movsl
cmp
mov
cltd
mov
outsb
aam
aad
fs
mov
pop
mov
adc
mov
push
or
sub
pop
and
je
int3
adc
cmpl
dec
xchg
push
dec
dec
repnz
gs
adc
sub
xor
xlat
pop
stc
and
pusha
cmpsb
cltd
adc
inc
inc
aam
test
insb
shrb
lahf
inc
mov
push
push
and
mov
inc
xchg
leave
test
mov
fs
inc
and
xor
orl
out
push
pop
test
adc
inc
push
push
addr16
sbb
pop
jecxz
xchg
xrelease
dec
in
jl
pop
ucomiss
pop
out
jecxz
scas
xor
aas
cli
sub
ror
pop
test
leave
or
daa
std
btr
fnsave
lret
ljmp
cwtl
notb
jns
xor
xchg
mov
lods
bound
sahf
xor
mov
dec
ja
jg
aam
shrl
add
inc
mov
int
mov
cltd
cmp
cmpsl
test
and
repz
ja
mov
jl
sarb
xchg
sarb
aas
sub
push
sahf
push
jb
pop
loop
dec
test
jle
or
cli
jae
and
lahf
pop
loope
outsl
xor
into
adc
xor
or
addr16
std
pop
cld
mov
xchg
ret
xlat
mov
mov
mov
sahf
aas
ret
adcb
je
aad
mov
and
insb
lods
fnsave
add
mov
cmp
push
in
stos
in
dec
sub
jmp
cmp
test
fsubl
sti
clc
sarb
pop
sub
adc
arpl
pop
fxch
fildl
ss
mov
bound
cs
shlb
loope
cmc
dec
xor
push
inc
in
je
xorl
push
jge
andl
popa
xor
push
lahf
and
push
add
dec
scas
or
cmc
xor
dec
xchg
jl
lods
fcomps
jnp
lods
xor
inc
or
inc
je
jecxz
and
loopne
sub
mov
aaa
nop
and
inc
aad
inc
movsl
jge
ljmp
out
adc
jmp
pop
mov
cmp
ret
mov
loop
je
xorl
mov
push
cli
push
setle
xchg
out
xor
xlat
bnd
pop
movsl
aas
dec
loopne
faddl
adc
sub
aam
outsb
xchg
mov
aas
dec
lea
lea
ja
xor
iret
stos
test
sub
dec
dec
movsl
leave
test
mov
clc
bts
daa
jb
add
inc
fnstenv
jle
xor
cmpsl
jne
sub
hlt
pop
mov
sub
lea
mov
movsl
jo
mov
rcl
inc
fs
push
push
mov
jmp
mov
pop
rcll
inc
in
jae
mov
mov
add
dec
in
fistpl
fcomps
repnz
mov
inc
rcrb
ficomps
inc
sahf
jmp
push
jno
add
das
jl
pop
xchg
call
inc
and
pop
cs
mov
inc
jmp
xorl
sub
adc
xor
add
add
addr16
dec
xchg
pop
push
js
in
push
insl
push
das
aas
xlat
imulb
push
sti
pop
sahf
mov
sub
mov
dec
xchg
hlt
sub
lock
push
sub
add
lods
add
out
test
and
jl
jecxz
xchg
jle
and
pop
sub
mov
mov
pop
push
adc
lahf
data16
stos
leave
fdivl
push
lods
or
push
jbe
call
push
cs
xor
mov
int3
aad
test
jge
sub
xor
push
lock
push
mov
insl
mov
xchg
mov
pop
mov
mov
push
pop
movsl
outsl
lahf
and
adc
push
jle
lea
mov
and
push
and
dec
jns
testl
cmp
push
mov
enter
inc
dec
sbb
sub
jmp
cmp
and
inc
in
add
jmp
xchg
xchg
das
addr16
push
out
mov
outsl
mov
pop
xor
fcoms
cmpsb
cmp
stos
rcrl
mov
icebp
and
push
pop
mov
fimull
jae
jmp
aam
outsl
mov
out
sub
adc
jle
and
mov
jo
cli
dec
xchg
es
xchg
int3
adc
out
loop
push
ljmp
mov
push
sbb
add
in
inc
mov
jmp
and
fwait
xor
fisubrl
push
dec
xchg
xchg
push
sbb
std
jle
fs
pop
cmp
and
push
imul
out
inc
add
out
push
js
sub
mov
xchg
fiadds
inc
push
aaa
mov
jmp
pop
xor
mov
dec
arpl
js
and
pushf
in
outsb
pop
ficomps
aam
lods
sbb
leave
xchg
popf
xchg
lret
mov
enter
mov
aam
inc
cmp
fcoms
or
popa
icebp
aam
xchg
pop
add
xchg
lods
pop
scas
dec
incl
rcll
insl
dec
iret
push
cwtl
push
in
shlb
mov
popf
lods
ss
pushl
lret
psrad
cmp
fiadds
pop
rorl
push
add
sub
les
je
aas
mov
cmp
aaa
mov
repnz
mov
xchg
addb
xor
adc
xchg
hlt
test
dec
xchg
mov
pop
test
pmaxsw
or
xor
mov
shl
and
adc
add
mov
dec
in
lock
shll
lods
dec
iret
aaa
xchg
jmp
loope
dec
movl
pop
jno
dec
push
jp
sti
mov
lret
dec
or
lock
cmp
int3
mov
cmc
shll
movsl
and
cmp
sbb
icebp
mov
inc
inc
loopne
xchg
lret
or
outsb
inc
mov
sahf
gs
bound
insb
bound
pusha
pop
lods
pop
mov
pop
or
inc
inc
adc
loopne
cmc
mov
or
bound
out
in
sub
cmpsb
dec
jmp
or
mov
out
sub
mov
movsb
and
and
fisttpll
lea
and
dec
jns
aas
jnp
add
clc
pop
bound
push
jae
ret
jno
lock
cmpxchg
movsb
or
cmp
jmp
push
insl
and
cltd
mov
fiadds
jl
pop
inc
loop
inc
mov
pushf
fiaddl
add
sbb
stos
idivb
sahf
or
loop
lods
add
and
stos
jmp
or
and
sti
xchg
rcrb
imull
js
mov
rcrl
cmpsb
cmp
jnp
in
add
xor
pop
mov
mov
xor
inc
mov
mov
xchg
sub
mov
xor
mov
adc
pop
test
xor
mov
into
push
rclb
sbb
sbb
inc
movsb
fisubl
js
dec
push
add
push
mov
clc
out
push
jmp
fnclex
aam
sub
stos
xchg
pop
scas
pushf
gs
clc
lods
adc
jae
in
push
fldt
add
test
hlt
scas
lret
lods
and
dec
sahf
ljmp
xlat
gs
push
test
jge
frstor
imul
mov
movsb
xchg
add
adc
addps
dec
out
mov
cmp
std
push
push
fimull
test
pop
or
test
sbb
cmpsl
cmp
sub
fidivs
lock
dec
mov
push
push
mov
xor
push
pop
mov
ljmp
add
cmpsb
in
jg
add
imul
ret
imul
out
fstps
cmp
sbb
xchg
pop
cld
dec
pop
push
xlat
and
mov
xchg
loope
test
xor
fwait
sbb
scas
in
dec
enter
rcll
in
cmc
push
xor
inc
cli
lods
loop
and
mov
push
outsb
repz
fcoms
mov
pop
dec
dec
pop
inc
xchg
dec
out
int3
mov
and
std
inc
xor
sti
das
jg
lods
cmp
rclb
cltd
xchg
add
pop
xchg
and
orb
push
dec
or
je
mov
fstpl
inc
mov
mov
mov
add
lods
lock
popf
mov
cmp
sbb
xchg
ljmp
insb
loop
pop
jno
mov
sub
pop
pop
mov
rorl
and
clc
lea
nop
subl
inc
sahf
push
sbb
mov
insb
mov
push
push
pop
lret
add
or
ret
cmp
es
fstl
cmpsb
mov
jb
pop
lea
ss
add
mov
iret
imul
xchg
sahf
push
add
pxor
and
loop
sub
lret
jne
xor
das
dec
fldl
inc
sti
xchg
notl
add
adc
add
cmp
dec
xor
push
sub
daa
adc
xor
ss
lock
fwait
cltd
addl
mov
pop
push
aas
mov
das
std
push
jge
xlat
xchg
sub
ficomps
inc
cmp
xchg
dec
imul
push
lret
jle
sub
call
inc
xor
jo
es
mov
xchg
popa
xchg
push
cmpsb
cmp
inc
jno
and
movsl
push
nop
sub
les
mov
aas
mov
and
adc
sahf
push
imul
mov
ds
stos
xchg
dec
inc
hlt
push
scas
dec
scas
push
hlt
pop
mov
cmpsb
sbb
xchg
jnp
xor
scas
je
or
xor
add
push
ja
xor
ss
mov
out
push
loopne
aam
cwtl
leave
mov
sub
imul
sarl
sub
lret
int3
mov
push
inc
int
shll
stc
dec
add
add
jl
stos
add
sbb
mov
pop
mov
pop
jno
int3
xorl
lret
mov
insl
jge
adc
aam
dec
repnz
ds
xchg
xor
dec
push
jae
pusha
stc
pop
js
pusha
jmp
icebp
sbb
xchg
or
jge
sbb
clc
cltd
sub
cs
mov
movsl
dec
loopne
enter
arpl
ds
cmp
or
das
mov
adc
cli
mov
mov
inc
push
ret
out
jnp
in
mov
dec
cmp
clc
aas
mov
xor
or
cli
add
popa
dec
mov
fisttps
xchg
mov
clc
lret
xchg
mov
movsb
mov
rolb
sarl
outsb
test
mov
mov
nop
fcmovb
mov
sbb
mov
xor
sbb
and
fwait
jmp
cmp
nop
cltd
cmpsb
inc
aaa
xchg
scas
xor
std
in
jge
push
gs
fcompl
arpl
add
cmpsb
xchg
addr16
adc
fiaddl
xchg
mov
cld
out
pushf
push
adc
cltd
pop
jg
sub
mov
leave
mov
insl
bound
popf
sub
mov
leave
nop
sahf
mov
cmpb
popf
cmp
aaa
mov
cmp
sti
pop
stos
icebp
fdiv
lret
add
inc
mov
dec
cmc
push
stc
inc
inc
scas
movsl
xchg
adc
mov
push
insl
cld
bndstx
enter
mov
inc
jecxz
out
mov
and
adc
inc
mov
stos
xchg
xchg
mov
aaa
lret
xor
and
mov
mov
nop
in
jge
sbb
int
and
cmp
test
xchg
out
inc
nop
xor
pop
jnp
lcall
lods
pushf
sub
clc
jge
ret
lds
inc
sbb
les
inc
clc
dec
ret
xor
lods
jp
pop
inc
pop
xchg
in
addl
cmp
sub
xchg
sbb
loop
and
cmp
popa
jecxz
stos
mov
adc
jg
int3
xrelease
lock
fcompl
xchg
fmull
xchg
and
inc
push
jge
mov
mov
ja
rcll
in
dec
out
js
out
and
fsubl
sbb
mov
scas
fwait
inc
aad
inc
add
push
sbbb
pop
jge
pop
or
int
fs
pushw
cmovns
add
pop
jmp
aas
sbb
xchg
fs
pop
jle
rol
jne
lods
ja
shl
sbb
mov
sbb
or
sub
out
loope
adc
mov
inc
add
fmull
std
xorb
inc
sbb
outsl
imul
test
fnstsw
rclb
mov
sti
xor
push
mov
pop
lds
orl
jg
cltd
xchg
iret
xor
into
xchg
dec
and
xchg
mov
xchg
lret
mov
ds
xor
cli
sub
mov
pop
adc
inc
and
cmp
mov
xchg
pop
in
inc
repnz
cmp
out
push
leave
sub
push
cs
mov
fadd
pop
aas
pop
sub
les
popa
js
aad
and
repnz
pop
popa
xor
data16
es
adc
xchg
inc
ss
mov
lahf
push
les
fwait
cs
sub
scas
leave
call
hlt
inc
jnp
pop
inc
int3
fwait
push
add
test
push
int
cli
or
les
fwait
jg
ljmp
inc
and
das
int3
add
in
std
enter
xchg
adc
and
loope
cmp
test
and
jno
lds
lea
pop
add
pop
rcl
loope
popf
mov
ljmp
imul
int3
xorl
dec
in
dec
jbe
or
pop
nop
and
movsl
or
stc
inc
and
pop
fnstsw
add
cld
cli
adc
cmp
icebp
inc
pop
mov
or
cmp
mov
push
imul
ret
call
mov
dec
sub
cmp
and
ljmp
aaa
jnp
hlt
jp
loopne
call
jno
mov
stc
or
sub
gs
jmp
jno
and
fisttpll
mov
add
in
add
jb
addr16
test
inc
jnp
xchg
xor
insl
adc
fistl
fsubrs
iret
xor
in
fdiv
inc
daa
fnstsw
pop
loop
push
dec
fidivrl
das
adc
sbb
cmpsb
cmc
adc
xor
and
fstps
or
scas
or
push
inc
daa
cwtl
movsb
jl
cmpsl
hlt
outsb
adc
in
cmp
inc
xor
arpl
mov
sub
lret
rcrl
cmp
aad
xchg
add
stos
lcall
pop
in
fbld
clc
rclb
cmp
aaa
push
fbstp
pop
sarb
pavgw
or
orl
jb
repz
add
in
scas
pop
sti
xor
mov
pop
cmp
popf
sub
jno
sbb
inc
mov
push
inc
inc
sub
cwtl
jno
jg
mov
js
push
pushf
lret
xchg
jb
adc
sbb
xchg
mov
pop
jbe
sub
aad
iret
pop
roll
test
push
inc
in
jo
xlat
aas
jbe
ret
mov
insb
mov
dec
aas
inc
mov
jne
jmp
mov
sbb
pop
fnstcw
mov
jns
popf
js
pop
movsl
out
data16
add
sbb
fldcw
jae
mov
in
test
icebp
adcb
cs
pop
or
and
ficomps
pushf
xor
xchg
sub
gs
lahf
sbb
pop
push
mov
mov
cmp
pop
mov
test
loop
mov
sub
sahf
inc
insl
sti
cmpb
insb
sub
stos
mov
mov
cmp
nop
push
test
icebp
cli
mov
lcall
add
in
scas
les
and
mov
movsb
add
adc
nop
xor
out
aam
aas
insl
or
scas
repnz
cmp
pushf
or
outsl
bound
cmpsl
gs
inc
lret
movsb
mov
jle
push
sti
dec
fxch
test
and
cmpsb
jae
ja
mov
push
lds
jmp
scas
popf
xlat
sbb
xor
or
dec
sbb
out
fmul
fildll
in
jnp
and
shll
jne
shlb
ljmp
addr16
mov
jae
mov
mov
dec
cld
or
mov
aaa
ds
fistl
icebp
shlb
mov
pop
xchg
sbb
xchg
jge
lcall
bound
lcall
cmpsl
imul
jmp
jg
sub
cmp
jmp
movsb
xchg
mov
mov
mov
in
fisubl
xor
jno
mov
outsl
stos
js
add
int3
je
dec
cltd
mov
rcr
call
adc
mov
js
lcall
xchg
pushf
mov
add
cmpl
and
loope
push
add
stc
in
add
jge
hlt
xlat
pushf
jmp
stos
imul
push
jbe
sahf
aad
aas
adc
addr16
jp
lds
adc
adcb
or
pop
movzbl
das
leave
add
nop
nop
rol
pop
fisttpl
ret
xor
dec
dec
fcomps
testb
filds
xor
xor
xchg
sbb
dec
cmp
das
adc
and
sbb
adc
repz
jp
stc
push
mov
imul
jo
lea
ret
and
mov
fsub
test
test
sahf
loope
cmpsl
cmp
inc
mov
sbb
and
sbb
bound
cmpsb
paddd
jnp
sub
bound
pop
mov
xlat
iret
xlat
xchg
push
jmp
aas
andl
fs
add
leave
xchg
mov
xchg
jns
inc
sub
mov
and
xor
add
add
fdivrs
sub
pop
inc
outsl
in
mov
cmp
or
jl
jg
lret
adc
cmpb
cld
out
add
aam
aad
adc
aam
inc
scas
inc
sbb
jae
bound
out
push
and
push
push
lock
xor
push
sbbl
mov
orb
xorl
arpl
popl
les
jge
movsb
int
lret
sbb
add
cmp
daa
scas
and
inc
fcmovnbe
inc
jns
cmpsl
or
in
inc
lock
fmuls
or
jnp
in
lahf
in
mov
sbb
or
inc
jmp
sub
cmp
xchg
jmp
in
xchg
ja
mov
je
mov
js
ficoml
data16
mov
fistps
outsb
mov
hlt
and
cmp
cli
outsl
cltd
pop
xchg
les
js
add
xchg
cmp
es
jp
cvtps2pi
lahf
loopne
lcall
int
xor
sub
or
mov
jp
mov
cmp
mov
aaa
mov
ret
cmp
into
icebp
dec
imul
rorl
pusha
rcrl
mov
sbb
hlt
mov
xchg
out
adc
mov
sub
inc
rcll
mov
xchg
and
arpl
lret
int
mov
xchg
jbe
fwait
sub
dec
shl
idivb
mov
fiaddl
add
inc
push
pop
scas
cmp
js
adc
aam
stc
pop
mov
lea
xor
frstor
cs
pop
sub
rclb
or
int
shl
sahf
dec
insb
icebp
or
push
les
ds
je
hlt
and
arpl
sub
jae
push
in
push
mov
push
lods
sahf
into
jns
pop
ret
mov
rcll
shrb
jle
repz
sbb
icebp
push
xlat
cmp
fsub
mov
push
psubw
outsl
addb
ficoml
sbb
insl
and
negb
mov
lahf
jno
push
popa
nop
enter
mov
test
xchg
mov
into
pop
mov
adc
xchg
xor
gs
pop
out
mov
cmp
dec
divl
adc
orl
jo
jp
sbb
les
daa
pushf
add
leave
nop
inc
stos
jmp
push
in
out
pop
push
mov
mov
sub
cmp
xor
repz
and
and
hlt
cmp
cmp
adcb
add
sbb
xor
mov
sbb
and
fisubrl
lret
mov
adc
cltd
add
dec
jge
cmp
or
and
movsl
and
incb
sti
xor
lcall
in
dec
shrl
xchg
pushf
add
movsb
dec
mov
cli
cmc
sub
sbb
or
or
mov
stos
into
inc
mov
sub
arpl
inc
dec
dec
pop
pop
out
nop
pushl
dec
inc
inc
rdtsc
xorl
xchg
lods
mov
adc
cwtl
or
push
jl
pop
lds
dec
add
push
or
xchg
and
sarb
pop
leave
mov
xchg
sbb
addr16
cltd
movsl
popf
jae
divl
iret
cld
int
mov
mov
push
mov
adc
push
cmp
enter
push
cmp
jp
sub
xchg
or
jge
outsl
jns
outsl
sub
add
push
xor
js
pop
mov
test
jo
pop
pop
inc
fdivrl
packsswb
jl
mov
stos
sar
imul
pop
stos
lock
ds
ret
ror
outsb
ds
ljmp
ljmp
cli
dec
lret
and
test
ret
loop
gs
insl
add
inc
xor
bnd
ljmp
js
add
mov
mov
stos
dec
leave
movb
fwait
or
hlt
push
ds
nop
add
jb
int3
aaa
mov
mov
xor
jecxz
dec
xor
dec
faddp
es
xor
jmp
inc
xchg
mov
dec
jmp
pop
mov
sbb
xchg
push
xlat
test
mov
adc
add
add
mov
fimuls
jge
lcall
sbb
push
and
rorl
insb
dec
add
add
or
lods
mov
mov
jge
loope
jo
aam
mov
or
rcl
ljmp
pop
and
mov
into
xor
dec
xchg
addr16
ds
adc
jno
mov
cli
fstpl
mov
ficoml
sbb
jp
cmp
dec
jns
xor
adc
sub
jl
sbb
adc
or
ss
and
mov
test
int3
xchg
jecxz
jge
dec
nop
pop
std
loopne
je
daa
mov
and
mov
dec
popf
enter
sub
ret
jns
ljmp
pop
pop
in
inc
out
ds
or
push
daa
fildl
inc
ss
stc
imul
push
mov
mov
sbb
in
mov
lods
movsb
loop
xchg
sbb
cmp
sahf
jg
ret
shll
add
scas
xchg
lock
mov
test
lock
add
subl
sbb
inc
or
stc
ret
push
ficomps
movsl
sbb
xchg
in
add
jmp
mov
mov
or
stos
dec
cmp
lods
cmp
add
notb
in
scas
jae
add
sub
sti
jmp
cmpsl
xor
scas
or
push
mov
mov
iret
imul
jns
mov
fldt
fildll
and
shr
jns
dec
push
call
stos
bound
mov
xorb
stc
into
fistpl
or
push
test
or
xchg
mov
xorl
sub
js
add
mov
mov
xor
test
movsb
shlb
shrb
jbe
inc
dec
ljmp
insl
mov
xchg
jns
cltd
jno
aad
testl
ja
jbe
sbb
xor
aam
cmc
jbe
loope
test
jnp
adc
movsl
cwtl
sbb
xchg
xor
push
bnd
inc
int3
mov
jp
test
push
adc
les
inc
jo
pop
mov
cmc
inc
sub
cmp
add
cld
stos
push
dec
out
rorl
cmp
xchg
es
mov
inc
arpl
ja
xor
insl
jg
add
mov
xchg
in
jne
sbb
inc
sbb
mov
mov
repnz
gs
cwtl
mov
jecxz
lock
sub
out
push
ja
push
mov
jecxz
add
out
mov
dec
mov
in
sbb
icebp
fucomi
dec
std
je
jno,pn
arpl
jecxz
rcl
cmp
cltd
fisubs
mov
pop
jae
cs
in
inc
pushf
adc
jge
icebp
xchg
xchg
cmp
xor
mov
std
mov
push
in
ja
sbb
mov
scas
xchg
push
mov
data16
sbb
and
inc
sbb
shl
xor
out
mov
dec
icebp
pop
pushf
call
inc
nop
mov
push
std
aam
push
or
hlt
cmp
js
push
dec
add
sbb
push
filds
xchg
adc
pop
pusha
pop
sub
sub
int3
xor
outsl
test
std
cmpsl
add
fidivs
insl
out
in
stos
inc
push
clc
outsb
fprem1
mov
fdivrp
mov
ret
cmpsl
subl
ret
sub
mov
fimuls
call
shll
pusha
xor
bound
shll
cmp
pop
xor
bound
idiv
scas
inc
dec
sarb
ss
lods
jnp
adcl
ret
and
imul
pop
loope
xchg
aaa
cld
sub
add
mov
sub
push
and
fwait
dec
mov
mov
stc
test
lods
jb
shlb
push
fisttps
push
pop
shll
in
enter
pop
jp
into
rol
xor
out
loop
jle
push
xchg
and
mov
push
cmp
ljmp
lods
pop
or
flds
push
push
stos
inc
or
loopne
adc
loope
outsb
cmpsb
add
mov
lock
mov
aaa
call
mov
cmp
loopne
divps
shlb
mov
push
push
inc
dec
mov
sub
push
je
inc
cmpsb
mov
int3
bound
loop
mov
dec
and
movups
rclb
ret
dec
pop
add
jns
test
movsl
in
inc
cwtl
stos
mov
movsl
lahf
xor
repnz
sub
in
add
mov
inc
pop
mov
inc
fidivs
mov
ficoms
aaa
xchg
cmpl
mov
cmp
push
and
push
lret
pop
sub
inc
scas
or
push
ja
pop
jo
jl
loopne
bound
sbb
jmp
push
xor
pop
fdivrs
jb
js
pusha
rcl
cmp
call
jb
es
stos
fiaddl
jp
jb
aam
ficoms
and
sbb
cs
pop
sub
mov
aaa
push
mov
xlat
out
dec
sbb
lcall
cmp
call
mov
push
cmc
je
or
xor
movsl
test
sarb
pop
das
cmp
cmpb
imul
or
adc
stos
lahf
sub
in
push
xchg
adc
negl
aad
rcll
xor
cld
movsb
mov
lret
out
add
mov
test
sbbb
add
and
cmp
add
or
test
mull
push
sbb
xor
leave
call
and
mov
xor
fnsave
add
and
outsl
xchg
and
movsb
xchg
dec
jle
sbbl
xchg
je
inc
aas
sti
gs
adc
stc
loopne
notl
test
int
in
stc
add
mov
jecxz
mov
test
sub
dec
arpl
add
sub
shll
pop
dec
iret
xchg
mov
sbb
sbb
mov
sbb
cmp
ret
insl
loopne
xor
sbb
adc
mov
mov
cmc
dec
inc
xchg
orl
je
test
jg
or
fs
adc
icebp
aas
and
cwtl
icebp
sbb
mov
adc
xchg
out
lcall
dec
mov
int3
add
jno
js
and
fdivrs
enter
xchg
in
in
inc
lcall
scas
xchg
push
insb
jnp
loop
dec
out
js
jmp
fsubrl
xor
test
xchg
in
outsl
sbb
aam
andl
mov
cmp
pop
insb
jb
insb
std
stos
inc
jge
jge
test
cltd
js
rcl
lock
pop
fsubrl
push
loope
out
push
dec
ret
or
lods
data16
out
ljmp
add
iret
pop
mov
mov
lea
aas
in
or
jl
mov
shl
adcb
cld
aad
push
mov
sub
push
ss
push
or
add
mov
rclb
sub
loopne
mov
mov
or
mov
pop
adc
out
dec
repnz
and
cmc
out
add
push
inc
inc
mov
jb
cli
mov
js
push
fisubl
mov
in
pop
int
call
js
imul
loope
pop
adc
sub
into
jo
inc
jmp
stos
shlb
vpmullw
sbb
mov
xor
stc
loop
pop
fnstenv
lods
jns
push
out
cmpsb
xchg
cmpsl
mov
sti
popa
sbbl
jg
sbb
add
arpl
push
add
inc
mov
fldenv
sub
cs
inc
inc
gs
ret
dec
mov
out
mov
fidivrs
outsb
sbb
test
push
and
in
mov
cmpb
or
xor
jecxz
and
sbb
mov
cld
dec
inc
mov
cmc
push
xor
jge
cmp
sub
rorl
lds
fists
ss
test
lahf
xchg
les
in
mov
jbe
push
mulb
imul
popf
pop
push
in
out
out
xor
addb
pop
scas
jno
jbe
lea
or
mov
fs
ds
mov
xchg
idivb
or
jne
insb
xor
mov
and
jo
jb
inc
or
jp
cmp
loope
nop
test
add
mov
mov
das
lds
mov
push
push
scas
test
mov
add
dec
push
insb
fs
ficoms
fcoml
arpl
enter
jecxz
push
xchg
fstp
pop
in
jge
stc
std
loope
in
popf
loop
pop
daa
inc
add
or
sarl
cmp
int3
jmp
sbb
aaa
popa
andb
gs
or
inc
and
inc
cwtl
dec
add
shll
pop
rorb
adc
outsl
inc
aad
xlat
jecxz
aam
movsb
cmpb
add
jmp
dec
sti
sub
jno
mov
inc
dec
fbld
cltd
cmp
jns
mov
bound
clc
clc
cmpsl
and
jle
out
dec
int
push
mov
cmpsl
pop
mov
adc
mov
mov
je
mov
out
cmpsl
mov
aaa
jg
jl
loopne
fldl
sarl
dec
fwait
stc
test
xor
in
stos
or
mov
push
mov
ret
in
xor
adc
sbb
shll
add
cltd
bound
dec
push
xchg
push
enter
nop
pop
jnp
andl
scas
jle
test
cld
cmp
leave
cld
shrb
jg
mov
xor
jo
repz
sbb
jmp
insl
sbb
push
cmc
ss
bound
mov
xchg
sub
pop
pushf
fsub
mov
fs
sbb
mov
fisttps
xchg
lret
jb
dec
adc
lret
or
cmpsl
popf
sub
sub
lea
xchg
add
les
push
and
and
call
lret
sub
arpl
mov
inc
gs
mov
lock
repz
xchg
ss
xor
push
fwait
mov
mov
xor
repz
push
and
popf
std
jge
cmpsl
mov
or
ret
fildl
sbb
scas
sub
sub
inc
adc
jns
xchg
das
pop
iret
es
ja
push
mov
inc
sti
mov
icebp
inc
sbb
xchg
pop
sbb
int
sub
pop
lret
ffreep
rep
out
stos
xor
movsb
outsb
push
out
stc
mov
mov
gs
les
sahf
mov
leave
outsl
cmp
bound
mov
mov
inc
pusha
or
das
fisubrl
jnp
or
mov
movsb
xchg
scas
pop
mov
cmp
jmp
cmp
into
push
jo
xchg
pop
clc
and
addb
pop
lahf
push
or
jl
add
mov
in
adc
cmp
xchg
addr16
pop
lds
or
call
dec
pop
inc
test
cmp
sbbb
ss
fsts
pop
mov
lcall
lret
lea
sbb
mov
jecxz
popa
flds
add
test
inc
or
sbb
or
mov
in
call
inc
icebp
mov
and
lret
ss
push
add
xchg
push
loope
and
xor
mov
mov
stos
outsl
mov
adc
jg
dec
insb
mov
xor
push
xor
add
ljmp
mov
sarb
cmpsb
insl
mov
int3
subb
jl
jecxz
push
xchg
pop
jl
pop
aad
popa
xor
pop
xchg
mov
cld
int3
in
out
inc
sbb
das
test
jp
jl
pop
xchg
sbb
sbb
sarl
mov
lahf
sbbl
adc
movlps
xor
sub
test
sub
loope
sbb
jle
ljmp
sbb
mov
mull
push
xor
and
lea
adc
or
iret
dec
ret
ja
daa
pop
out
xchg
pushf
and
and
push
or
ljmp
lods
mov
outsl
and
sub
mov
cltd
imul
sahf
ja
sbb
dec
mov
mov
jo
pop
cmpl
loopne
sbb
xchg
dec
ss
cmpl
in
fsubr
mov
mov
sbb
xor
inc
sbbl
add
mov
cmpsb
mov
std
imul
adc
push
insl
pop
test
lds
push
pop
cmc
gs
outsb
leave
inc
mov
dec
lcall
xchg
mov
sbb
shll
leave
xchg
lods
sbbl
xchg
mov
mov
inc
andb
add
adcb
push
aaa
or
cmp
cmp
cmc
pop
pop
in
mov
pop
add
movsl
adc
mulb
inc
ja
int3
cltd
mov
lds
and
and
arpl
adc
lods
add
test
mov
push
mov
jl
sbb
push
cmc
lret
pop
pop
test
imul
xor
rcl
idiv
mov
outsb
jle
pop
mov
lcall
decl
jle
iret
rorl
pop
inc
and
mov
and
outsl
mov
pop
repnz
xorl
popf
cmc
int
outsl
push
mov
jecxz
mov
jmp
xchg
hlt
dec
or
outsl
pop
lds
jle
ljmp
in
add
sbb
mov
xor
adc
mov
fmul
cmp
xor
or
in
mov
cmp
shll
ljmp
xchg
lock
dec
pop
sbb
aad
fdiv
jle
fbstp
stos
test
int
sub
and
sub
and
pop
xor
dec
outsl
cmpsb
mov
in
out
sbb
stos
dec
sbb
cwtl
fucom
or
test
sub
lea
insb
push
mov
cld
dec
push
rol
xchg
xchg
xorl
jmp
sbb
out
or
cltd
mov
imull
mov
mov
sbbb
sub
scas
and
inc
dec
pop
dec
push
jbe
adc
lret
sbb
push
data16
jno
daa
in
jmp
push
dec
mov
cs
ret
fdivrs
fldcw
icebp
push
shlb
or
lods
cwtl
jp
inc
mov
mov
sbb
inc
mov
popf
xor
sbb
lret
movsb
cmp
and
jno
aas
fistpl
fwait
sbb
iret
push
push
xor
xchg
sub
iret
shl
dec
xor
sbb
lahf
outsb
push
and
rcrl
insb
mov
xor
push
and
rcll
data16
xchg
sub
sbb
lret
pop
cwtl
sbb
xchg
sbb
psrad
loop,pt
jns
push
mov
add
insb
ret
sub
ret
or
jg
fcomps
loope
jno
sbb
inc
mov
hlt
xchg
out
leave
pop
mov
dec
cmpsl
out
add
cmp
sbb
popf
mov
push
loop
lods
fwait
sub
int3
call
push
add
mov
push
cltd
cmc
push
fyl2xp1
cmpsl
and
lret
push
or
jge
jge
fistps
mov
cs
cmp
pop
shlb
push
xchg
ja
dec
cmp
add
sti
insb
addr16
adc
fs
sbb
pusha
jmp
push
mov
rcll
and
scas
pop
add
jnp
fsqrt
aad
ja
push
repnz
and
stos
shrl
or
sub
cwtl
jmp
inc
adc
or
mov
pop
mov
mov
test
add
xchg
sahf
push
mov
xlat
cli
decb
das
outsl
adc
sbb
inc
iret
xchg
xor
insl
es
adcb
int
cmp
mov
add
loopne
dec
shll
cmpsl
mov
push
xchg
cli
mov
mov
mov
shlb
push
cmp
mov
insb
fistl
mov
leave
in
xor
lods
cmp
aad
add
mov
dec
fs
lret
subb
scas
inc
dec
aad
test
mov
icebp
jecxz
arpl
xor
insb
mov
loopne
das
lock
jbe
xchg
sbb
fs
sub
aaa
mov
dec
inc
int
pop
dec
cld
subl
or
jae
hlt
iret
repnz
cmp
sbb
addr16
aam
mov
in
sub
mov
int3
cmp
sbb
pop
inc
mov
imul
add
insl
scas
jecxz
mov
cmp
int3
push
in
sbb
ja
fstpl
adc
and
jnp
pop
addr16
in
mov
mov
add
bnd
inc
add
pop
ds
push
mov
in
dec
out
rcrb
adc
bound
or
push
stc
xchg
or
or
icebp
js
add
test
or
push
loope
mov
gs
lea
or
leave
or
cmp
stc
cmc
mov
repnz
xchg
and
sti
rcll
or
fnstsw
cs
test
sahf
sbb
inc
sbb
or
lea
jp
pusha
jns
jnp
adc
rol
cmpsl
or
push
or
mov
inc
jmp
lods
push
pop
dec
out
ret
pop
in
test
sbb
test
out
addr16
int
loopne
mov
in
inc
cltd
sahf
in
push
nop
daa
jae
dec
adcl
or
ret
lret
lods
push
mov
mov
mov
cmp
sbb
inc
jge
sbb
mov
cmovnp
xchg
sub
sub
xor
iret
add
je
fstpt
sbb
inc
dec
inc
push
add
mov
stc
icebp
into
mov
or
push
lret
jp
mov
lods
rclb
je
lods
mov
jle
add
addl
mov
popf
popa
xchg
xor
dec
mov
je
into
test
pusha
sti
xchg
inc
popf
call
iret
into
pop
out
mov
scas
sbb
inc
and
ja
incl
pushf
xor
ret
dec
fadds
sbb
test
rcr
je
aad
insb
xchg
js
adc
mov
push
cmc
cli
mov
jecxz
cmp
xor
push
push
adc
push
out
sub
jb
inc
mov
push
in
stc
dec
jecxz
sarb
push
xchg
outsb
das
sbb
mov
sbb
in
xchg
xchg
dec
mov
mov
sbbl
jmp
dec
inc
mov
in
out
jo
into
mov
cli
xchg
divb
shr
aam
sub
lods
inc
in
mov
inc
jno
pop
mov
sbb
or
ret
lret
fmull
pop
sbb
jo
test
push
es
mov
or
mov
push
arpl
pop
std
add
movl
sub
cmp
arpl
arpl
mov
mov
out
gs
xchg
mov
jge
or
mov
push
imulb
sbb
xor
ret
cwtl
pop
rcr
rcll
push
cmp
add
xchg
jno
mov
and
pop
inc
subb
mov
aad
or
add
jo
xorl
pop
outsb
mov
in
loope
jge
jo
adc
mov
mov
xchg
aad
lods
push
dec
cmp
loop
frstor
repnz
js
das
sahf
sub
xlat
dec
cltd
es
jmp
push
into
pusha
inc
inc
jp
aam
cmpsl
mov
inc
test
sbb
daa
xchg
and
mov
inc
rclb
mov
cmpsb
jb
and
sub
pop
cmc
sbb
and
pop
mov
xor
mov
shlb
mov
jp
mov
aas
pop
repz
push
fstpt
cmpb
test
mov
test
mov
inc
dec
shrb
in
jmp
and
shl
ss
imul
clc
mov
testl
mov
stos
mov
aas
scas
out
mov
repnz
jmp
rclb
jbe
adc
xor
ffreep
lods
add
je
adc
cmp
cmp
pop
pop
out
and
sahf
pop
pop
inc
pop
rclb
sbb
push
test
adc
inc
pushf
adc
int3
out
cmpsb
mov
or
jmp
mov
stc
ret
sbb
shrb
xchg
cmp
insb
cs
shll
loopne
cmp
std
cld
aas
mov
xlat
cmp
add
pop
aam
test
das
sbb
int
sbb
setne
sbb
xchg
lods
mov
test
xorb
das
cmpsb
fwait
adc
xchg
clc
mov
jno
push
cmpsb
fs
xor
out
lret
lds
in
adc
jp
jle
inc
push
adc
ret
ja
jbe
shrb
sub
lea
jo
adc
ret
or
test
adc
fwait
push
jecxz
and
in
push
imul
lods
jl
xor
sub
fwait
and
es
lock
mov
stos
and
lahf
sub
and
push
les
leave
add
loope
push
pop
mov
push
lret
push
dec
lock
leave
out
or
adc
out
dec
jne
jb
sbb
and
int
sub
sub
or
fiadds
push
test
xchg
mov
push
or
test
loope
out
and
mov
jmp
cli
pop
and
dec
cmp
scas
sti
loope
movsb
mov
dec
mov
sahf
fwait
xor
imul
push
in
aaa
sbb
jns
mov
pop
jns
cmpsl
sbb
sub
clc
test
adc
out
pop
push
mov
cmp
xor
push
sub
scas
sbb
jge
and
nop
dec
lock
cli
scas
loope
mov
lea
dec
xor
mov
aas
testl
adc
fstpt
shrb
negb
nop
out
lods
bound
fiadds
and
mov
out
mov
adcl
mov
xchg
lea
ja
xchg
daa
dec
movsl
mov
xchg
out
fisubrl
pop
in
jae
cmp
lea
lock
add
inc
cmp
sub
mov
lcall
mov
push
lahf
jns
iret
xor
shrb
out
xchg
in
sub
int
xchg
outsb
test
push
dec
lcall
and
imul
cmpsl
add
jp
push
in
jns
pop
mov
or
fwait
mov
jge
adc
and
jmp
sarl
fisubs
push
shll
icebp
arpl
arpl
mov
sbb
pop
jg
jae
int3
pop
scas
and
cmc
and
pop
sbb
adc
stos
mov
mov
test
jns
lods
es
mov
adc
jecxz
jmp
jge
ja
cld
push
sahf
add
inc
inc
jp
mov
pop
orl
rcll
int3
into
xchg
mov
push
repz
enter
jnp
sti
mov
or
aas
dec
adc
xchg
cmp
mov
data16
jmp
or
jns
xchg
adc
rorl
mov
pop
icebp
sti
sub
and
incb
dec
ss
outsb
insl
mov
mov
xchg
ja
cmp
jmp
loopne
idivb
gs
xchg
imul
fistps
pop
mull
or
push
cmp
daa
into
rcl
inc
daa
cwtl
mov
jne
pop
adc
adc
movsb
out
movsb
sub
sub
pop
fxam
mov
add
loopne
jns
mov
nop
imul
xchg
popa
jno
xchg
lahf
adc
in
addr16
repz
jge
mov
adc
cmp
xor
cmp
cmc
or
pusha
adc
pusha
jne
ljmp
cmpsb
add
pop
inc
inc
divb
js
scas
insl
ror
andl
dec
fwait
jp
dec
aam
cli
call
dec
je
xchg
jnp
cli
push
mov
ja
pushf
test
mov
mov
fnstenv
pop
ficompl
jnp
mov
ss
repnz
outsb
je
sbb
addl
inc
sbb
in
ds
adc
mov
xchg
js
ffreep
nop
pusha
pop
xlat
ffree
jns
push
clc
xchg
arpl
shrb
insl
in
cmp
jnp
call
pop
lods
outsb
test
shll
sub
push
jmp
jle
neg
mov
std
xor
ds
push
cmp
test
loope
pop
push
repz
mov
pop
lods
popa
mov
lds
jae
sub
jnp
jle
rclb
inc
out
cld
mov
pop
clc
sbb
imul
ret
mov
test
in
sub
and
or
repz
add
cltd
enter
out
in
adc
pop
imull
inc
pop
mov
xchg
adc
das
js
in
je
or
fildll
outsl
cltd
inc
xlat
mov
enter
inc
xor
fsub
lea
stos
insb
ss
pop
std
arpl
into
mov
mov
lds
ret
fstpl
shlb
xor
imul
pop
test
mov
jb
in
cmpsl
addr16
out
jb
mov
testb
mov
out
data16
add
dec
fnsave
mov
andb
popf
and
adc
dec
cmc
imul
push
sbb
xlat
std
movsl
sbb
shlb
movsb
fdivp
out
mov
push
sub
std
xor
aad
jb
mov
mov
fwait
in
out
iret
pop
subl
xlat
mov
mov
scas
scas
xor
cmc
sub
xlat
imul
mov
outsl
cmp
pop
jecxz
sub
mov
sub
jo
stos
inc
es
xlat
stos
ljmp
mov
pop
aas
into
cmp
arpl
mov
sub
enter
sub
and
fucomi
xchg
adc
cmp
fwait
lahf
push
mov
out
into
sarl
push
call
lods
or
or
in
lret
xor
je
ljmp
in
add
xlat
mov
pop
mov
lcall
mov
mov
sahf
or
add
xchg
and
push
adc
add
sbb
ja
add
sbb
xor
cld
ja
cld
sbb
and
sbb
lods
adc
cmp
pusha
decb
sbb
daa
jno
add
mov
xchg
mov
or
lret
mov
jmp
rcrb
push
xor
enter
sbb
xlat
mov
add
push
pop
insl
add
push
inc
enter
or
jno
leave
mov
jl
rcll
pop
push
lret
imul
add
or
push
notl
push
dec
or
or
bound
fcoml
sbbl
xor
js
testl
adc
xor
dec
mov
push
sub
xchg
pop
push
pop
mov
stc
mov
xor
test
fmuls
cmp
movsl
out
push
hlt
mov
arpl
out
addl
test
mov
divl
xchg
outsl
rol
cld
pushf
in
repz
push
in
and
ds
daa
mov
cld
in
shlb
mov
ret
jg
fwait
jecxz
or
add
and
mov
push
movsl
int3
mov
aam
je
mov
les
fcoms
pop
sbb
push
repnz
lahf
fisubrs
and
out
jmp
cwtl
adc
outsl
insl
fs
inc
adc
jbe
cld
xor
push
pop
mov
mov
pushf
unpckhps
je
sbb
in
adc
jmp
or
adc
test
fmuls
mov
mov
xchg
sub
lcall
mov
call
arpl
ret
mov
mov
cmp
or
js
sub
push
sbb
dec
push
or
into
cmc
cmp
sbb
scas
dec
inc
test
leave
or
pusha
inc
jl
xor
out
aas
jmp
mov
addl
mov
jo
jnp
mov
jp
ror
sub
dec
add
add
push
mov
inc
nop
xor
mov
xchg
mov
lods
repz
inc
jmp
pushf
mov
int3
sub
rcr
fbld
pop
push
enter
popa
repz
repz
ret
mov
xchg
ret
xchg
cmp
imul
cmpsb
add
mov
dec
orl
lret
or
push
push
inc
pop
aad
jmp
and
adc
hlt
jge
cmp
mov
dec
pop
nop
adc
mov
inc
and
push
loop
clc
and
mov
cmp
or
xchg
lcall
push
inc
mov
jns
out
cld
movsb
lahf
dec
xchg
out
outsb
dec
enter
sbb
call
mov
imulb
aas
push
jnp
movsl
lahf
pop
cmpsb
icebp
cmp
leave
push
mov
xchg
outsb
testl
jb
mov
adc
inc
sbb
enter
lock
cli
insb
push
pop
add
repnz
scas
sti
add
aad
xchg
add
push
xor
pop
mov
gs
xor
jno
insb
push
fistps
mov
cli
popf
sbb
pop
aad
and
dec
or
mov
fldcw
std
enter
dec
pop
lods
test
jns
sbb
mov
cltd
hlt
sti
fwait
dec
cmp
adc
sti
dec
in
jl
inc
imul
out
jb
dec
call
int3
cmc
adc
mov
mov
push
pop
fmull
cmpsb
in
mov
push
fwait
cmc
cld
pslld
cmp
aaa
pop
push
mov
arpl
fs
push
push
sbb
jae
cmp
dec
sti
and
cmp
testl
loop
adc
sbb
cmp
mov
pop
pop
mov
fcmovb
adc
mov
jecxz
inc
lods
leave
add
out
clc
shll
add
sbbb
loopne
mov
push
xor
stos
in
js
pop
jno
mov
cs
dec
jnp
or
xor
jae
scas
push
mov
jl
push
lret
divb
mov
inc
dec
mov
js
xchg
mov
dec
mov
rcr
sahf
mov
add
in
pop
sti
fcmovu
add
lea
add
pop
pop
ds
cmp
dec
cmc
xchg
cwtl
add
jae
sti
adc
sbb
icebp
scas
not
sbb
es
push
dec
mov
dec
pusha
add
dec
paddsw
je
mov
or
jmp
flds
inc
leave
pop
push
pop
rsqrtps
jae
loopne
or
pop
iret
adc
popa
mov
es
insl
scas
loope
cmp
xor
pop
dec
out
push
ret
push
cs
push
jge
xor
or
testl
adc
fwait
adc
fists
cmp
ljmp
and
cltd
push
dec
mov
lcall
in
scas
insl
fstpl
pop
jns
pop
xchg
jne
push
mov
fisubs
fimuls
push
cmp
dec
out
cmpsl
ds
adc
mov
sbb
pushf
cmp
das
movsl
sbb
mov
mov
sbb
push
mov
cmp
push
cwtl
lcall
sarl
jbe
bswap
mov
inc
sbb
fsubrl
mov
rcll
adc
in
and
vpsubw
mov
mov
mov
mov
mov
inc
lea
mov
dec
ljmp
xchg
rcrb
int3
jecxz
pop
mov
dec
repz
push
and
pusha
and
popa
test
incb
pop
dec
push
lret
dec
aad
test
aas
movsb
cmp
shll
les
or
stc
int
fidivrl
or
outsb
xor
sub
sub
jb
jge
mov
scas
je
xchg
cmp
cmp
cmp
imul
loope
in
fstpt
xchg
sub
mov
jmp
add
call
jle
inc
push
push
inc
push
fcmovbe
jnp
cld
add
xchg
fstl
icebp
xor
mov
rcrb
addr16
rorb
or
push
out
iret
in
adc
jno
inc
xchg
mov
call
cmp
adc
xchg
jne
aad
fidivrl
es
divb
popa
in
sub
movsl
cli
insl
sub
xchg
mov
mov
cmp
js
es
pop
jnp
inc
loope
jb
xor
das
jle
mov
mov
shll
and
or
dec
idivb
xor
dec
mov
pusha
mov
cmp
cmp
cmc
inc
insb
fstps
loopne
test
pushf
sub
sahf
and
hlt
cmp
xchg
loopne
or
inc
push
das
in
jmp
pop
ds
xchg
loop
push
testl
inc
pop
push
push
push
jg
lahf
sub
enter
mov
rorb
notl
ret
cmp
mov
mov
sub
das
fwait
and
repz
lret
push
and
fwait
stos
sub
pushf
sbb
sub
aam
jb
push
inc
jb
nop
fwait
cmp
or
js
mov
mov
lds
repz
and
jb
addr16
dec
xchg
aad
xchg
lods
pop
add
inc
cmp
push
leave
xor
add
subb
jg
lods
pop
std
repz
xchg
aaa
pushf
mov
fdivrl
push
lods
fidivrs
stos
clc
mov
fs
adc
sarl
dec
lret
cmp
fidivs
cmpsb
dec
push
xchg
outsb
js
dec
jg
sbb
adc
jge
ja
sub
cmp
dec
sbb
xchg
test
dec
lods
inc
pop
popf
mov
dec
sub
xchg
movsb
inc
sub
packsswb
jb
cld
stos
pop
insb
cmc
movd
cmpsl
insb
fincstp
je
pop
pop
jns
pop
inc
ss
insl
call
fnsave
test
shrl
insl
cmp
out
call
xchg
leave
jecxz
or
cmpsb
mov
fsub
push
inc
add
or
orl
add
in
pop
sbb
lcall
xchg
mov
arpl
and
or
sub
cmp
and
loop
insl
mov
mov
fisttps
sub
bound
pop
push
sub
inc
jmp
stc
sub
ja
push
mov
loope
adc
cmp
cmp
cmp
cmpsb
mull
repnz
inc
aas
mov
xchg
xor
push
pop
sarb
cld
ret
aad
rcrb
mov
shl
cmp
sub
xchg
in
xchg
mov
push
and
inc
push
mov
negl
mov
das
fs
mov
out
and
mov
jbe
jp
enter
test
jle
mov
push
add
rcrb
cmpsl
dec
mov
or
aam
mov
lret
mov
add
mov
hlt
daa
fwait
xchg
outsb
arpl
rcl
ljmp
lods
mov
mov
in
ffree
imul
dec
pop
aas
xor
icebp
in
lret
cmp
jl
in
dec
cmp
sub
add
adc
in
icebp
and
insb
sar
add
gs
dec
out
cmc
cmc
jno
out
xor
addr16
jne
xor
icebp
jae
mov
inc
xchg
pushf
jp
mov
imul
lret
es
or
jecxz
add
std
ss
jae
adc
inc
adc
adc
movsb
pop
mov
mov
inc
ljmp
hlt
rcl
adcb
push
cmc
sbb
mov
add
sahf
lock
inc
xchg
aas
mov
out
ss
scas
push
imull
addb
adc
fwait
cld
mov
test
jp
mov
push
cmp
pop
adc
cs
and
movsb
and
rcr
pop
mov
in
mov
imul
out
cltd
dec
in
fidivrs
popa
jl
scas
ss
mov
dec
xor
hlt
adc
ret
rcrb
mov
mov
aam
rorl
dec
test
mov
xor
shll
ds
mov
dec
xchg
aam
mov
and
dec
sbb
or
jno
jmp
or
lret
push
mov
dec
push
pushf
xor
subl
ret
leave
xor
and
je
addr16
xor
fadds
jbe
popa
push
cmpsl
mov
pop
icebp
or
mov
mov
imul
ds
in
inc
rorl
jge
and
and
jns
aad
loopne
push
mov
inc
xchg
fsts
cld
inc
push
and
adc
hlt
sub
sbb
jp
push
mov
clc
mov
jb
sbbb
andb
push
dec
sbb
int
adc
ret
data16
mov
inc
cmp
pop
outsl
or
or
jg
lods
int
ret
push
clc
shl
rcr
and
aaa
aad
jp
data16
mov
cmp
sbb
int3
xchg
iret
dec
je
aaa
cltd
outsb
mov
mov
lods
test
cmp
in
jae
leave
f2xm1
clc
jo
adc
scas
ljmp
les
or
jg
inc
sub
inc
sbb
jecxz
push
lods
cmp
cmp
jb
dec
cmpsl
leave
mov
out
cmp
pop
dec
out
movsb
rolb
aad
out
inc
lfs
push
mov
stc
mov
loope
repnz
adc
test
pop
jb
jmp
repnz
xchg
ljmp
sbb
cld
cmp
push
sub
outsl
pushf
out
movsb
hlt
lea
test
inc
xchg
jmp
in
push
push
mov
fcompl
mov
ret
cli
sbb
inc
jge
repnz
scas
cld
adc
insb
adc
ficoms
inc
fistps
or
popa
rolb
mov
out
xchg
bound
shrb
inc
je
pop
addl
outsb
sbb
add
movsl
xor
sub
movsl
out
mov
push
andl
or
mov
jbe
push
cmp
gs
mov
rcrb
rolb
and
mov
mov
pop
mov
adc
inc
push
pushf
sbb
sbb
xor
xchg
stos
mov
push
jecxz
iret
push
or
adc
stos
movsb
jno
outsl
push
loopne
int3
or
pop
int
inc
fdivrl
int
sub
imul
js
rcrb
insb
aam
mov
push
pop
test
fldcw
cmp
arpl
mov
or
test
dec
adc
stos
sti
ret
add
subl
leave
stos
cmc
ret
fildl
xor
pushl
loope
mov
cmovs
pop
jno
jge
shrl
adc
pusha
mov
jo
mov
or
mov
icebp
mov
popa
dec
inc
leave
mov
pop
sahf
mov
jno
ret
nop
jae
mov
jg
lock
adc
adc
xchg
loope
xor
cmp
punpckldq
or
cmpsb
fadds
cwtl
enter
xor
js
mov
and
enter
jo
fcmovb
xchg
sbb
xchg
stos
sbb
push
push
push
dec
pop
pmullw
push
out
mov
add
adc
xchg
push
xchg
inc
cs
and
fdivl
decl
notl
arpl
pop
mov
jb
adc
inc
ret
mov
scas
mov
rorl
jno
and
jp
loope
jno
push
filds
aaa
pop
cs
pop
add
mov
sub
out
jns
insl
push
mov
or
and
bnd
mov
inc
cmp
enter
cmp
adcb
push
and
xchg
mov
or
adc
or
mov
repnz
aam
or
aad
adc
push
mov
push
xchg
outsl
ss
icebp
inc
and
jno
test
idivb
sub
fidivrl
cli
ret
push
sub
add
dec
push
dec
les
int3
cltd
into
imul
sbb
in
push
jb
lds
stos
in
pop
arpl
call
jbe
je
fscale
mov
sub
pop
dec
int3
jge
mov
stos
sbbl
out
lahf
xchg
jb
jae
ror
movsl
add
cmp
ljmp
cwtl
insl
in
ss
mov
push
fcmovne
inc
std
push
add
push
in
lock
or
push
sbb
jo
inc
dec
movsl
xlat
jp
mov
cmp
mov
cmpsl
daa
bound
xlat
adc
rclb
jle
xchg
lea
push
sbb
sub
sbbl
or
xor
das
clc
sbb
enter
push
adc
cmc
add
push
push
shlb
stc
pop
and
enter
adc
inc
call
sub
cltd
mov
adcl
loope
mov
lock
je
neg
fcmovnb
pushf
xchg
push
inc
addr16
pop
cmc
cld
lret
pop
inc
nop
sub
nop
add
jecxz
shl
jp
lock
sbb
fimuls
inc
mov
jp
adcb
cmp
jmp
cmpb
add
sbb
push
mov
out
jmp
test
inc
test
mov
jge
hlt
mov
push
pop
bound
mov
cmpsb
call
cmp
cmp
jmp
fidivs
cmp
mov
out
roll
mov
loope
mov
inc
js
mov
or
inc
xchg
sarl
sbb
sbb
xor
and
jns
sbb
stc
repnz
sub
out
cwtl
lds
lea
xor
in
push
sahf
jno
mov
and
imul
and
insb
scas
btr
push
scas
lahf
mov
adc
adc
mov
loopne
loope
jo
test
jmp
cmp
adc
fidivs
inc
ss
cmp
mov
ret
pop
push
mov
inc
adc
pop
stc
and
ljmp
cmpsl
outsl
das
sub
arpl
fcompp
shll
or
ror
xchg
and
aaa
jl
jp
push
fistpl
mov
ljmp
xchg
cmp
adc
call
mov
inc
pusha
dec
aam
scas
cmp
pop
rorb
mov
adc
push
bsr
test
pop
sbb
xchg
cmp
xor
fcomi
cmp
imul
add
xor
jae
sbb
adc
jns
popw
xchg
and
lods
cltd
sbb
push
pusha
in
add
cmp
push
movsb
inc
xor
sbb
fwait
dec
xlat
call
shrb
dec
ficoms
sti
sub
sbb
push
sub
ljmp
enter
push
scas
fisubl
aad
cmpsb
lret
push
gs
ss
push
xor
fcomps
bound
push
sub
and
div
dec
pop
push
jno
xchg
jbe
sub
sbb
movl
loop
push
sbb
leave
sub
aaa
adc
mov
push
insl
outsl
mov
fdivrl
jl
jne
loope
loope
imul
gs
insb
xchg
std
mov
and
fucom
adc
add
pop
and
ret
mov
pusha
in
xchg
inc
mov
jmp
inc
or
mov
in
cmp
mov
fstpt
test
push
adcb
pop
stos
iret
jns
stc
cmovno
cmp
cmpsl
sub
jns
xchg
fadd
or
leave
mov
adc
aad
sbbb
stos
rcl
mov
sub
mov
xor
cmpsb
aad
mov
mov
jne
lds
sub
daa
fsub
mov
int
mov
aam
popf
mov
push
push
jmp
fneni(8087
out
cwtd
ret
pop
out
fisttpl
dec
sbb
dec
mov
or
or
mov
ljmp
mov
mov
jmp
inc
mov
push
add
shll
or
xlat
loopne
in
mov
bnd
aad
es
outsb
push
imul
xor
dec
mov
push
movsb
xchg
xchg
pop
mov
sbb
xor
fcmovnbe
pusha
push
fwait
mov
hlt
addr16
arpl
cwtl
shl
jb
or
cmp
rcrl
aas
inc
cmc
xchg
mov
sub
mov
jb
loopne
scas
jno
in
adc
mov
adc
je
pusha
or
das
cmp
mov
into
dec
push
in
add
addr16
cmpsb
pop
add
mov
aam
inc
sub
mov
es
loop
cwtl
sbb
jns
adc
or
adc
popf
addl
or
and
movsb
mov
mov
mov
cmp
add
rcrl
outsl
adc
push
and
push
dec
add
xor
scas
shlb
clc
lock
lea
or
or
cltd
pop
mov
icebp
dec
test
mov
jmp
outsl
and
xchg
xchg
jg
add
mov
jo
pop
adc
push
adc
jb
out
add
push
push
jb
dec
ret
mov
sti
mov
mov
mov
daa
insb
lret
jecxz
ret
sub
jbe
rolb
or
mov
test
rcrl
mov
mov
push
pop
mov
cmp
pop
aam
shlb
mov
shl
inc
dec
imul
xchg
sbb
es
sbb
adc
and
aas
pop
mov
mov
and
fnstcw
stos
int3
out
sbb
shr
mov
cmc
mov
mov
pop
and
xorb
push
ret
repnz
xor
mov
rclb
out
xchg
addr16
mov
outsl
loop
sub
pop
fmul
jo
push
sub
and
mov
pop
dec
enter
xchg
popa
pop
fidivrs
mov
mov
push
pop
mov
fadd
add
xor
adc
push
mov
sbb
cmp
push
xor
fdivp
iret
inc
inc
push
cmp
adc
cmp
cmovle
adc
idivl
gs
in
or
mov
mov
jo
xlat
shlb
mov
leave
addb
in
out
scas
popa
mov
into
iret
in
adc
or
xorl
inc
rcrb
sub
bswap
pushf
cmp
jnp
jge
xchg
and
enter
rcrb
xchg
in
in
push
dec
cmp
jo
insl
sarb
xor
movsl
sub
ret
adc
sbb
cmovl
dec
cmp
jl
ret
sahf
dec
adc
sbb
std
js
push
call
sbbl
mov
pop
dec
xor
ffree
jp,pn
sub
adc
loop
lcall
in
mov
icebp
scas
lret
ss
lcall
insb
imul
sti
mov
and
lcall
sub
fnstsw
push
and
insb
scas
mov
or
sub
add
ret
cmp
and
mov
int
mov
mov
xlat
mov
out
xchg
xchg
or
stc
rolb
orb
dec
and
xchg
mov
sub
in
lret
adc
ret
sub
loop
aad
xchg
adc
shrl
adc
mov
addr16
ss
stos
out
mov
inc
xor
mov
xchg
sub
sbb
and
pop
xchg
push
andl
jle
jl
cwtl
jle
inc
sbb
push
pop
xchg
jmp
rcrl
into
xchg
out
in
fisttps
mov
mov
xlat
pop
dec
and
cs
and
mov
call
loopne
xor
xchg
lock
jp
fisttpll
jecxz
addr16
pop
insl
data16
mov
sub
mov
add
popa
push
mov
inc
fldl
pusha
int
ficompl
add
sbb
scas
aad
fsts
or
xchg
faddl
jecxz
aad
push
les
icebp
xor
mov
xchg
cmc
pop
lahf
push
fbld
loope
icebp
sti
mov
or
mov
push
mov
out
imul
mov
mov
and
orl
in
sbb
lods
mov
push
lcall
movsb
dec
or
repnz
sarb
jne
or
mov
movsb
or
clc
adc
push
cmp
or
add
mov
clc
fmul
or
lds
dec
dec
adc
inc
jns
pop
add
xor
lret
sbb
int
jnp
sbb
iret
mov
push
xchg
push
mov
pop
cld
cmp
adc
addr16
pop
cmp
sbbb
pusha
xor
push
lcall
sbbb
iret
gs
ja
mov
fildll
dec
or
mov
mov
lcall
in
lods
loop
lds
imul
cltd
adc
mov
imul
loope
xor
lods
mov
mov
test
clc
fucomip
pop
sbb
inc
xchg
in
xchg
addr16
xchg
inc
jnp
shrl
outsl
clc
cmpl
jno
scas
xor
add
leave
xchg
xor
sub
test
adc
and
das
mov
bound
mov
cmp
push
xchg
mov
mov
aam
push
and
leave
sbb
push
push
clc
mov
in
cmpsb
xchg
dec
inc
or
aad
xchg
leave
push
lds
ret
and
les
xchg
sbb
je
loopne
pop
popa
mov
loop
aam
and
lock
outsl
dec
out
dec
push
adc
mov
mov
mov
xlat
sub
xchg
sbb
rorb
pop
test
pop
jg
out
jbe
add
lret
cmpsb
es
fsubrs
mov
push
insl
inc
inc
push
cmpsb
push
xor
fwait
dec
inc
je
daa
fdivs
adc
insb
push
hlt
movsb
inc
roll
sub
mov
mov
jb
cmp
and
jnp
cmp
out
push
adc
inc
inc
test
dec
pop
push
pop
sbb
mov
dec
loope
jmp
inc
dec
sbb
cmp
aam
and
test
outsl
lock
out
dec
and
jge
pop
push
jg
sub
out
pop
push
mov
mov
movb
ja
lahf
popf
adc
xchg
mov
adc
pop
std
das
xor
xor
sub
push
push
jmp
add
movsb
dec
push
and
mov
dec
cs
mov
in
adc
imul
pop
push
movsl
clc
dec
jmp
cmpsl
popf
sub
ja
outsl
test
xchg
and
xor
ret
pop
add
in
loopne
outsl
bnd
es
fstl
pushf
push
nop
and
fsubs
pop
add
sti
pop
cld
imul
scas
fstp
fs
add
popf
mov
scas
das
sbb
lcall
pop
cltd
les
jmp
add
pop
notl
es
ret
push
mov
sub
int3
adc
out
jg
pop
das
push
dec
lds
data16
shl
js
push
xor
sub
push
sub
gs
stos
gs
out
and
addr16
lods
cmc
pop
cmpb
loop
lods
and
fwait
movswl
es
mov
mov
cmp
jbe
jg
inc
pop
daa
mov
mov
mov
mov
push
ret
add
sub
xlat
xchg
loope
movsb
mov
fisubrl
mov
stc
pushf
inc
xor
mov
mov
test
dec
enter
sub
clc
les
inc
inc
das
js
sbb
pop
aaa
lds
fidivrl
inc
and
sbb
mov
jge
sub
sbb
mov
mov
mov
inc
add
lods
pop
or
pusha
sbbb
int
push
mov
repz
cli
sti
loopne
push
pusha
movsb
mov
mov
jp
mov
sub
loop
rolb
in
mov
add
jle
lret
dec
sbb
or
adc
jne
mov
mov
pop
lods
xor
lods
mov
nop
mov
lea
adc
pop
inc
nop
out
out
dec
adc
inc
bound
mov
hlt
pop
mov
sub
or
shll
pushf
int
js
das
cwtl
sub
ljmp
mov
jno
pop
rcll
cmc
test
jle
xchg
cld
sbb
fwait
je
js
andl
fnstenv
pop
pop
ficoml
aam
xchg
push
lds
fnstenv
xor
test
lret
orl
jb
scas
inc
lods
in
flds
bound
cltd
pop
inc
sub
movsl
jecxz
in
jge
lods
adc
cmp
fnstenv
push
stos
outsb
add
mov
hlt
mov
inc
cmp
in
dec
xchg
jle
rcll
psubusb
jae,pn
xchg
mov
cltd
dec
cli
push
sti
out
out
mov
fs
out
pop
add
inc
dec
inc
out
sub
insb
xchg
sbb
push
cli
xorb
movq
fwait
ljmp
cmp
jl
dec
xor
cmp
leave
jp
data16
pop
add
mov
xchg
cltd
movsl
jno
lods
add
mov
enter
fisubl
ret
paddusw
jno
jne
and
or
mov
dec
jp
mov
xchg
data16
ds
test
lret
xchg
mov
sub
daa
pop
int3
inc
lock
xchg
mov
and
faddp
pop
xchg
hlt
mov
addr16
and
inc
enter
mov
stos
ds
outsb
ja
rcl
dec
mov
xchg
fsts
pop
ffreep
fcmovu
sti
jl
inc
out
dec
pop
out
and
inc
scas
adc
mov
pop
cmc
dec
cltd
int3
outsb
cmpb
or
xlat
push
pushf
mov
push
aam
mulb
cmp
mov
add
mov
cmpsb
ljmp
or
add
jmp
push
sbb
add
rcrb
xor
inc
adc
movsb
or
pop
push
xor
cmpb
rclb
xchg
pusha
and
xchg
mov
movsl
scas
mov
jno
int3
jecxz
jle
pop
in
push
cli
dec
daa
popf
inc
mov
jb
mov
jp
jecxz
ljmp
lods
mov
ja
popa
mov
sti
dec
mov
mov
sub
popf
inc
xchg
cli
add
test
addl
jl
add
lods
addr16
and
add
xchg
xchg
fisttpll
fidivrs
pop
xchg
push
int3
xchg
es
pusha
sub
sub
dec
add
ja
jl
pop
test
fistpl
rorl
mov
movsb
dec
arpl
sub
pop
pop
lds
mov
push
cli
cmp
loope
outsl
shrl
push
jg
imull
daa
dec
in
or
mov
or
pop
push
jbe
sub
xor
and
pusha
pop
mov
sahf
xor
fisubrl
in
arpl
popa
data16
cmc
leave
inc
add
xor
jo
lcall
pushf
pop
pop
xchg
push
cli
mov
jne
inc
push
jecxz
out
ret
notl
push
lret
inc
xchg
mov
test
inc
scas
mov
shll
inc
cmc
pop
test
aas
dec
insb
mov
push
lahf
sbb
inc
jl
jb
cmc
fwait
cmp
cmc
stos
int3
add
sti
pushf
sar
outsb
cltd
pop
std
push
leave
pusha
and
addr16
add
mov
insb
cld
jno
icebp
mov
cmpsl
fucom
testl
and
in
pop
popa
test
pop
adc
sbb
jb
repnz
call
lods
xchg
testb
ljmp
lret
push
movl
cmp
inc
or
xchg
js
sbb
xchg
pop
cmp
cld
jecxz
fwait
cmp
test
inc
aaa
repnz
cwtl
and
bnd
pop
add
adc
shll
test
repz
inc
adc
mov
pop
lret
dec
sbb
shll
rorb
addr16
sbb
jl
sub
lret
jecxz
sbb
mov
sbb
daa
or
mov
or
or
jne
pusha
sub
mov
je
jecxz
mov
das
scas
lods
sub
fadds
sub
add
jmp
sbb
lret
push
add
int
jmp
in
fsubl
fistpll
gs
leave
test
fdivs
mov
xchg
cwtl
jg
lret
mov
in
repz
rcll
xchg
add
adc
mov
dec
sub
mov
popa
fidivs
cmpl
adc
or
mov
and
cmp
pop
out
mov
rol
sti
out
xchg
mov
inc
js
jg
sbb
sbb
fisttpl
dec
sub
dec
mov
inc
add
mov
inc
and
xchg
pop
loop
fiaddl
cld
sub
int
inc
xchg
mov
pop
sub
pop
mov
roll
mov
stos
or
xchg
fcoms
xchg
movsl
fs
mov
mov
lret
pushf
mov
movsb
add
pop
add
jecxz
into
imul
inc
mov
imul
push
popa
sub
add
inc
sbb
inc
cmc
push
or
insl
xchg
sub
add
cmp
cli
push
scas
cltd
inc
pop
xlat
dec
jmp
inc
pop
rcrb
stos
in
jno
sub
add
mov
push
fisttps
lcall
shll
js
ja
inc
add
adcl
xor
push
sub
dec
add
div
lret
cmc
icebp
sbb
jae
pusha
adc
inc
push
add
popf
and
aam
xorb
jo
mov
jg
mov
sti
push
popf
sub
loop
leave
inc
pop
mov
ds
cltd
mov
jp
cwtl
scas
stos
push
jl
jl
add
dec
dec
mov
and
or
pop
mull
cmp
pop
dec
adc
mov
aam
dec
pop
sbb
insl
fldcw
inc
imul
or
cli
gs
es
dec
in
add
jl
sahf
add
jl
xchg
cmp
js
icebp
loopne
in
xchg
pop
out
xor
sub
fnstsw
repz
adc
mov
push
push
daa
jo
sbb
mov
test
es
push
mov
mov
out
dec
mov
mov
je
adc
frstor
dec
addr16
test
add
cmpsb
mov
push
sub
sbb
dec
adc
addb
loope
pop
inc
and
or
out
std
push
jecxz
pop
jle
xor
jbe
icebp
jle
insl
pop
adc
inc
and
sbb
pop
mov
and
movsl
adc
push
jns
mov
outsb
fnstcw
jecxz
mov
sbb
out
sbb
push
or
add
je
leave
hlt
rcrl
test
cmp
scas
cmpsl
or
cwtl
mov
mov
mov
mov
sti
mov
shll
fs
or
xchg
push
push
xchg
sbb
xchg
bound
mov
xor
fdivrp
push
mov
push
mov
loope
stc
jge
jmp
inc
xchg
loop
out
testl
in
lea
xor
and
and
addps
dec
and
push
or
pop
inc
ret
aad
inc
inc
pop
les
ret
mov
mov
adc
aaa
popa
mov
or
xchg
pop
inc
pop
pusha
arpl
sbb
mov
lgs
orl
mov
xchg
cltd
popa
icebp
push
in
outsb
adc
loop
scas
movl
cld
pop
stos
out
add
rcll
and
inc
xor
cmp
jns
insb
jmp
inc
ja
enter
cmova
fwait
into
xor
xor
loope
test
test
cli
jo
lea
dec
jb
mov
out
jae
leave
xchg
cs
push
stc
out
sbb
inc
std
adc
imul
xor
repnz
sub
push
jl
pop
adc
ret
daa
mov
in
jo
jns
aaa
and
les
enter
in
mov
psrld
mov
ret
aaa
adc
or
adc
sub
inc
xor
fldl
mov
aad
jb
and
cwtl
clc
lcall
adc
daa
mov
mov
daa
mov
xor
jbe
hlt
mov
and
std
dec
mov
sbb
inc
cwtl
inc
and
inc
jns
pusha
cli
cmpl
cmp
clc
stc
dec
mov
aaa
mov
jo
add
jae
adc
loope
xor
jae
xor
push
add
mov
push
movl
loopne
inc
movsl
push
sub
pop
test
cmpsb
mov
mov
xchg
inc
pop
in
ds
inc
fcoms
fs
test
cmp
push
aas
cmc
pop
inc
pop
xchg
push
mov
jno
rcl
mov
pop
es
into
test
iret
xchg
cltd
adc
push
scas
cmpsb
xchg
adc
adc
popf
outsb
aas
adc
icebp
mov
inc
or
mov
sub
xchg
dec
dec
shrb
movsl
subb
imul
arpl
xchg
cmp
jp
clc
sbb
dec
add
or
jbe
jo
sub
push
stos
mov
jne
xorl
sbb
loope
pop
inc
push
cs
push
dec
rcll
add
jge
scas
outsl
sbb
adc
into
inc
add
xor
cmp
out
cmp
popa
add
ja
jnp
add
xor
xorl
aad
in
repz
outsl
push
int3
loope
mov
jge
mov
lahf
pop
jae
xchg
iret
xorl
cmp
jae
in
ss
cld
push
movsb
fs
test
xor
sub
inc
popf
mov
lcall
or
scas
mov
test
test
insl
cmp
test
shr
push
outsb
pop
sub
int
pop
aas
xor
lods
out
add
push
lahf
pop
clc
dec
sarb
or
xchg
fucom
adc
cltd
addr16
jmp
movsb
clc
cli
popw
pop
xchg
out
pop
or
in
sub
xchg
or
insb
sub
rclb
mov
stc
dec
out
xor
xor
dec
aam
ficomps
sbb
mov
add
outsl
pop
fcmovnbe
add
cmp
or
std
mov
xor
cmp
popa
sbb
rcrb
push
sbb
loopne
inc
xorl
rcrb
cld
pusha
push
or
xchg
push
test
int
mov
outsb
mov
sub
imul
shrb
mull
pop
icebp
add
xchg
adc
lea
lcall
jno
jg
stc
mov
rcll
pop
fstpt
xlat
daa
inc
xor
in
mov
sahf
or
and
mov
in
in
dec
pop
add
cwtl
push
push
push
xorb
pop
in
jmp
jge
push
notb
adc
daa
push
das
sbb
into
add
push
clc
mov
bound
cmp
and
scas
xchg
and
repz
push
cmp
jne
lock
ja
shl
repnz
lcall
mov
sbbb
mov
dec
pop
pop
ljmp
imul
mov
insl
jmp
mov
arpl
dec
cmp
andl
mov
test
loopne
jne
stos
xor
stos
outsb
push
xor
add
inc
shl
mov
sub
ss
test
lahf
in
stos
or
daa
sub
iret
ss
scas
fistps
daa
sub
jg
sti
stos
rcl
hlt
xor
cwtl
adc
mov
test
push
or
out
bound
fnstcw
pop
rcll
test
fnstenv
inc
mov
cmc
xchg
fwait
aad
icebp
aad
sub
pop
jno
xchg
mov
push
mov
sub
int
in
es
adc
dec
push
jae
icebp
sbb
jmp
ret
scas
inc
inc
xor
inc
dec
fsts
movsl
leave
aaa
push
mov
pop
or
mov
jg
iret
dec
loop
pop
sarb
loope
bswap
jp
stos
push
fsubr
and
push
pop
lahf
inc
push
or
dec
adc
leave
sbb
movsl
sub
out
loop
xchg
adc
aas
adc
sub
ret
inc
cmp
pop
test
jns
adc
dec
stc
test
sti
mov
sti
imul
mov
adc
outsb
addr16
mov
xchg
and
idiv
push
data16
mov
adc
and
jnp
mov
inc
push
aad
pop
ret
pop
pushf
clc
and
shrl
movsb
sti
pop
push
fs
je
fwait
mov
outsb
dec
add
inc
leave
xchg
dec
call
inc
push
cmp
add
call
and
mov
enter
jns
push
jbe
fmull
inc
clc
daa
jp
and
push
std
dec
cmpsl
imul
scas
enter
cmp
push
jne
inc
fidivs
jge
jns
inc
xchg
mov
and
jnp,pt
sub
and
cltd
outsb
xchg
xor
and
adcb
inc
lods
mov
fisttps
arpl
aas
or
xor
sbb
dec
test
rorb
pop
mov
push
int3
dec
arpl
push
fwait
push
mov
fistpll
test
xchg
push
shrl
push
inc
outsl
testl
lret
inc
icebp
or
jl
mov
jo
push
pushf
cmp
mov
ja
sub
jae
out
pop
mov
addl
xchg
lea
sub
jecxz
ds
lcall
add
movsb
adc
cmc
dec
mov
sbb
jne
into
lods
enter
loop
ret
adcb
in
inc
mov
cwtl
add
sti
shrl
rclb
in
pushl
inc
sbb
xor
outsb
cmp
and
movsl
insl
ss
sti
add
sub
sbbl
or
scas
movsl
push
pop
sub
mov
jmp
fs
dec
pop
lods
or
push
push
mov
and
fs
cmp
jno
ffree
inc
lea
inc
in
jl
dec
imul
outsb
sub
sbb
add
cli
sub
pop
lods
jle
push
imul
adc
fstps
out
int3
mov
imul
xchg
rorl
insl
loope
aam
push
test
xchg
jnp
mov
push
or
dec
mov
imul
jne
and
loop
jp
mov
aaa
fdivl
dec
mov
dec
xchg
push
int3
push
sub
cltd
dec
in
ss
mov
push
mov
lock
fstpl
ds
shrb
lcall
imul
jns
push
pusha
sbb
push
shlb
js
loope
pop
lock
sahf
sti
adc
push
push
xchg
out
jo
bound
sub
ss
sbb
xchg
bound
sti
jle
fstps
fs
jge
pop
aaa
jmp
das
clc
inc
pushf
call
js
test
mov
stc
dec
jmp
inc
xlat
addb
fdivr
dec
imul
cwtl
arpl
dec
or
cmpsl
jl
shll
dec
bound
mov
rolb
inc
rcll
or
jecxz
pop
lods
jbe
and
inc
jnp
cwtl
ja
jle
dec
pop
mov
lods
and
sti
loopne
jecxz
add
push
imul
sbb
cld
mov
add
mov
bound
les
fisttpll
loope
push
lea
adc
cwtl
xlat
cmp
lock
scas
fisubl
sbb
test
mov
mov
loopne
mov
ja
clc
dec
shrl
aam
mov
sbb
dec
mov
js
ss
dec
das
mov
jl
sub
adc
and
pop
sbb
dec
test
idivl
jno
pop
hlt
xchg
mov
loopne
test
ss
cmp
cmpsl
mov
push
fnsave
push
adcb
xchg
sub
mov
insl
cld
dec
mov
movsb
mov
xchg
aaa
shll
test
or
jne
rorl
jne
mov
test
inc
jge
pop
dec
call
mov
sub
mov
addb
mov
lds
test
inc
cwtl
cmp
mov
jns
lret
sar
shlb
add
sbb
rorb
je
cmp
xchg
movsl
cmpl
cmc
push
and
fstps
xor
jne
dec
in
loopne
and
pop
jns
sub
lods
mov
mov
ret
mov
or
das
pop
dec
repnz
sbb
and
outsl
dec
aad
xchg
into
push
pop
ja
loope
and
pop
sub
out
push
or
mov
sbb
jg
sbb
adc
cmpsb
pop
popa
mov
pushf
mov
stos
hlt
aam
mov
mov
or
cld
outsb
test
dec
cmc
insl
lcall
lock
dec
cmp
mov
push
out
stos
mov
push
inc
add
mov
notl
cli
cmc
or
ret
jne
xchg
fisubs
test
ret
adc
notl
aam
jmp
mov
xchg
sub
in
xchg
mov
fisubrs
pushf
mov
loopne
mov
jbe
lods
mov
adc
cld
push
ss
ret
out
cmpl
pusha
mov
iret
in
xchg
mov
mov
in
mov
xchg
les
push
rolb
es
dec
adc
mov
sub
je
inc
mov
ret
jo
sahf
fidivrl
mov
cmp
push
inc
or
aaa
insl
dec
sub
inc
xchg
enter
imul
jp
dec
ds
add
out
jae
jle
sete
ficomps
jae
call
or
imul
clc
ja
incb
and
jecxz
push
int
test
xor
or
xchg
cwtl
and
push
inc
dec
popf
cmp
mov
orb
popa
xlat
in
xchg
cld
insb
xchg
jge
mov
push
in
dec
iret
xor
or
adc
test
pop
lcall
out
loop
sub
aad
popa
iret
gs
mov
and
arpl
in
or
popa
pushf
jge
das
out
or
scas
dec
arpl
cmp
out
dec
add
shrb
jle
add
xor
cmp
dec
cmp
test
sub
mov
mov
fmuls
popa
xor
mov
shlb
jns
push
mov
and
fdivl
pop
push
fldl
pop
mov
icebp
ss
lea
xor
sbb
inc
jmp
iret
outsb
nop
incb
fcmovbe
imul
sti
mov
xor
cmpsb
and
pop
flds
dec
repz
inc
stos
das
movsw
cmp
adc
mov
movsl
mov
stos
sbb
pusha
xchg
add
loop
in
xchg
jle
ficompl
fldl
xchg
daa
xchg
pop
push
in
loopne
xchg
and
mov
cmp
sbb
aaa
imul
in
lahf
and
stos
inc
cmpsb
andb
fstpt
fs
adcb
cmp
in
sbb
pop
pop
mov
hlt
repnz
mov
sahf
fbstp
rorl
add
push
mov
sub
pop
inc
or
cmpb
xchg
pop
jle
xchg
add
mov
popf
push
test
and
leave
fucomip
pop
outsl
cmp
testb
dec
dec
call
sub
hlt
jne
stos
repz
fildl
cmp
ss
xor
ss
out
or
jns
and
jp
les
push
jae
aas
mov
mov
adc
pop
jg
sub
jae
gs
hlt
jge
mov
add
hlt
cltd
or
cmp
xchg
mov
xchg
ret
push
pusha
iret
xor
in
sbb
dec
int
and
cmp
aam
pop
adc
fwait
xchg
adcl
cmc
fiadds
lret
mov
jge
mov
xor
cwtl
shl
sbb
lret
dec
push
mov
push
and
sub
test
sahf
inc
jecxz
jo
testl
mov
mov
lods
dec
imul
mov
fmul
imul
mov
incl
pop
sbb
inc
lret
sahf
ret
das
or
jecxz
sbb
icebp
xchg
xchg
fsubl
jp
sub
add
cmp
jb
add
xchg
mov
pop
or
add
outsb
mov
mov
dec
xchg
and
je
lcall
and
clc
push
sub
shll
jg
out
jecxz
inc
insb
sub
mov
les
sub
mov
shll
dec
out
inc
mov
insb
add
enter
mov
jl
sbb
jnp
and
sub
ds
iret
jbe
in
sub
jge
mov
mov
jns
sahf
pop
repz
dec
lods
mov
xchg
loop
push
scas
ret
loopne
mov
push
repz
icebp
or
xor
pushf
insb
in
shrl
inc
sti
jne
inc
scas
pop
ret
and
and
ret
dec
movsl
leave
fcomps
cld
lret
sahf
push
jmp
nop
push
lahf
cltd
lahf
movsl
in
loopw
test
fnstcw
cwtl
sbb
cmp
dec
jmp
mov
gs
mov
push
ret
mov
mov
mov
test
add
out
loopne
xchg
cmpsl
aas
add
dec
and
inc
lahf
dec
ljmp
lock
fsubs
mov
ret
jb
xchg
movsl
daa
adc
xor
inc
push
cmc
sbb
push
inc
jg
out
scas
outsl
sub
xchg
ja
int
jecxz
dec
sub
xor
enter
push
imul
sub
stos
cld
mov
imul
push
popf
test
mov
mov
in
daa
testb
aad
daa
into
ja
and
jle
loope
rcll
xor
popf
pop
sub
adc
outsl
scas
cmpsb
sub
out
dec
dec
in
decl
aad
sub
and
sahf
dec
jo
mov
pop
mov
xor
cli
and
adc
insb
lret
inc
sub
jno
add
fucomp
add
or
mov
xorb
js
xchg
addl
outsl
and
push
push
and
jp
or
sub
xchg
sahf
cmp
adc
mov
lea
jbe
jb
push
test
cmp
scas
push
sbb
dec
dec
adc
xor
jle
sbb
je
xlat
pop
aas
fucom
mov
inc
ficoml
rcrl
inc
into
xchg
jmp
sub
sub
xor
cmc
nop
xchg
push
negl
mov
pop
xlat
inc
push
sbbb
push
loop
push
mov
mov
scas
stc
pop
adc
out
fcompl
mov
mov
cmp
dec
or
or
hlt
jmp
into
mov
shlb
fcomi
xlat
mov
mov
add
pop
dec
pop
lret
popa
enter
lds
outsb
icebp
or
enter
cmp
cmp
mov
xchg
imul
scas
std
push
adc
lret
call
pop
outsl
cli
add
aaa
inc
push
pusha
pop
fldenv
icebp
sbb
and
pop
mov
mov
sub
inc
pop
dec
shll
mov
lds
pop
loopne
imul
mov
subb
imul
ret
sub
sub
mov
dec
popf
pop
cld
ret
jmp
test
aad
jmp
sub
std
inc
outsb
bound
out
dec
adc
mov
shr
lcall
or
fists
rcrb
cmpsl
fnstcw
out
shrl
mov
aaa
dec
lods
std
xor
pop
ret
ret
cmp
cmp
test
adc
in
mov
dec
cmp
iret
cmp
sub
jo
jmp
stc
movsl
cmpsb
popf
lret
in
push
xchg
dec
cld
jns
cmp
inc
out
lods
push
inc
cltd
push
xchg
out
add
ljmp
mov
mov
mov
pop
out
sbb
cmovge
xchg
shrl
ficompl
inc
stos
in
jno
sbb
incl
outsl
inc
out
in
arpl
sbbb
mov
mov
jno
repnz
addr16
test
or
stc
push
insl
jns
pop
cmp
loope
jns
hlt
mov
jg
cmp
loop
adc
push
lcall
mov
int3
sub
xor
das
xchg
cmp
push
mov
gs
ret
daa
jne
bound
xor
mov
imul
or
jns
inc
cli
xor
add
inc
je
and
repnz
orb
rcll
mov
sbb
insb
cld
pop
test
jne
adc
lods
push
jae
jle
jo
call
xchg
add
inc
fcoms
insb
mov
pop
and
sbb
add
stc
xchg
push
cltd
pop
jbe
adc
push
js
repz
jge
icebp
mov
inc
xor
cmpsb
mov
mov
xchg
ret
sbb
test
mov
jle
xchg
loopne
xchg
stos
arpl
imul
mov
rcrb
mov
into
adc
cli
xchg
lock
xchg
and
inc
leave
movsl
test
cld
cmp
xor
repz
popfw
fcom
stc
inc
pushf
jg
out
lahf
add
js
xchg
jnp
xor
add
shlb
data16
mov
mov
add
add
xchg
jo
inc
sub
jne
std
jb
jp
jno
and
adc
les
negb
jmp
mov
cmc
pop
mov
push
add
xor
mov
cwtl
in
jnp
push
pop
inc
dec
std
mov
inc
push
xor
sahf
hlt
rcrl
jae
inc
lret
lock
xchg
call
adc
imul
xorl
data16
mov
jge
inc
adc
sbb
rolb
pop
push
or
jge
xchg
add
pushf
jecxz
test
push
jae
insb
rcll
pop
out
xchg
cmpsb
lods
or
sub
mov
das
inc
cmp
dec
dec
pop
addr16
std
std
aad
mov
mov
ret
rcrl
loopne
inc
jp
js
xchg
test
ljmp
mov
ds
pop
or
sarl
xchg
sbb
shl
jno
adc
add
jae
icebp
inc
outsl
dec
sbb
aaa
jne
push
push
loope
mov
sbb
lds
jb
jne
aas
xor
mov
sub
cmp
test
js
inc
repz
adc
or
test
movsb
jg
mov
jae
push
dec
outsl
adc
cltd
cltd
inc
bound
jg
adc
or
sub
cwtl
pop
inc
ljmp
jmp
stos
aaa
jnp
loop
out
cmp
dec
imul
in
into
cmp
scas
mov
xchg
repnz
push
ja
xor
push
pop
orl
pop
cmpsb
sub
and
cmp
mov
xchg
xchg
cmc
insb
dec
clc
rcrl
push
sub
inc
mov
lcall
pushf
push
test
push
inc
push
movsl
sbbb
pop
clc
mov
imul
lcall
fimull
xchg
ss
mov
lcall
mov
mov
test
mov
sti
inc
xchg
shlb
push
shll
push
xchg
in
fmull
mov
bound
pop
push
jne
ret
aaa
pop
adc
in
pop
call
enter
xchg
aam
notl
push
xlat
pop
cltd
stc
mov
popf
stos
mov
pop
lea
cmpl
fcomip
jle
movsl
js
mov
adc
insl
icebp
sbb
push
mov
jle
ret
pop
adc
das
aad
inc
pushw
dec
popf
aaa
push
dec
cs
push
jmp
fsqrt
cmc
push
movsb
push
mov
in
test
mov
inc
push
sbb
in
push
jne
mov
arpl
xchg
sub
inc
or
cmp
lds
insl
loop
pop
test
and
iret
icebp
jl
pop
xchg
mov
nop
push
pop
cmp
sub
stos
stos
cmpl
out
xchg
sbb
mov
out
and
clc
mov
insb
sub
leave
pavgb
adc
jp
jp
pusha
jnp
jge
mov
icebp
push
mov
nop
dec
test
stos
int3
mov
les
aad
mov
shlb
ret
push
rcrl
imul
push
pop
mov
mov
and
xor
testl
fdivl
testb
stos
pop
repnz
stc
or
mov
pop
and
pop
popa
add
cmp
push
in
xchg
or
outsl
xor
pushf
cltd
push
xchg
adc
pop
sub
cmp
add
lret
push
fdivrl
jnp
fisttpll
std
pop
call
sbb
cmc
mov
mov
push
pop
push
imul
cwtl
aad
jo
fldl2e
popf
sub
mov
add
inc
xor
push
xchg
mov
mov
push
and
repnz
stos
addr16
xchg
jmp
jbe
cmp
fildl
es
in
lret
mov
lcall
sbb
sbb
dec
push
mov
negl
push
inc
mul
dec
add
sub
lret
ljmp
les
repz
xchg
push
jno
mov
add
adc
xor
loope
lock
icebp
mov
adc
lock
dec
add
adc
lds
in
mov
cs
fstpl
or
fisubl
les
and
test
and
cs
mov
js
mov
fisubrl
push
mov
repnz
jp
out
int3
xchg
pop
mov
in
push
ret
mov
adc
sbb
std
jmp
push
push
push
mov
dec
xchg
xchg
or
mov
cmp
arpl
in
daa
sbb
bound
mov
mov
aam
movsl
sbb
mov
xchg
insl
push
hlt
loop
dec
lock
cltd
push
add
hlt
dec
sub
jns
iret
sbb
idivl
in
adcb
sbb
add
xchg
ds
mov
mov
in
pop
out
fs
cmp
lret
test
out
mov
cmp
lds
test
repz
cmp
sub
and
jnp
push
push
hlt
mov
xchg
cmpsb
in
pop
sub
inc
xor
push
pop
xchg
in
cli
push
adc
lock
int
cmp
cltd
jns
adc
scas
out
mov
int
dec
scas
push
jmp
dec
mov
push
cmc
add
sub
lock
mov
lds
mov
dec
popf
and
inc
loope
fs
inc
mov
push
inc
cmp
scas
mov
push
mov
mov
in
ds
stc
adcb
jg
lods
je
cmp
in
iret
pop
ds
inc
mov
into
or
je
and
push
mov
push
aam
push
movsb
cmp
push
cmp
xor
into
in
sti
cmpl
jge
lahf
cli
lahf
push
popf
mov
test
mov
jge
sbb
inc
fdiv
mov
jo
mov
cmc
mov
pop
stos
dec
mov
leave
cmpsl
je
and
mov
jno
in
nop
scas
out
mov
fidivrs
sbb
or
fs
les
pop
push
aad
lret
das
push
and
sub
loope
cli
loope
lmsw
jl
xor
adc
loop
xchg
mov
dec
inc
xchg
cmc
fisubrl
sub
loopne
aas
push
pop
inc
cmp
and
into
cmp
pop
jne
jl
out
inc
or
iret
pop
inc
adc
push
shlb
adc
cmp
add
xor
and
fs
dec
inc
cs
ja
popa
scas
inc
lahf
sbb
jmp
in
adc
and
xchg
mov
imul
mov
dec
xor
cltd
push
mov
imul
mov
jno
jns
dec
xchg
mov
dec
lods
jl
aaa
xchg
loop
pushf
push
pop
jne
or
out
or
cs
cmpsb
push
and
push
clc
sub
mov
mov
mov
clc
push
cmpsl
mov
mov
ss
xor
loopne
roll
cmp
sub
xor
push
iret
jge
xchg
aas
ret
push
cmp
lock
sbb
stc
out
cltd
repz
popa
orb
mov
mov
addb
out
adc
sub
test
xor
inc
scas
mov
das
out
mov
xor
test
mov
cmp
and
popa
fs
mov
aas
cltd
or
popf
xchg
mov
jns
sbb
lret
cmp
mov
ss
data16
dec
push
pushf
dec
int3
jae
adc
sub
lret
adc
inc
ret
push
stc
shll
popa
call
mov
aas
inc
sub
xchg
nop
sbb
rcrl
enter
into
jle
int3
mov
insl
mov
mov
mov
mov
dec
jg
aad
dec
sti
lds
dec
iret
adc
inc
inc
arpl
jne
scas
xor
inc
sub
xor
mov
cmp
add
loope
jmp
lahf
popf
subl
mov
adc
lahf
or
pop
bound
pop
sub
cmp
pop
inc
mov
add
mov
inc
cmp
cmp
push
inc
xchg
adc
add
cwtl
je
dec
or
xor
lahf
pop
mov
leave
pop
loope
out
xchg
mov
lock
mov
test
bound
loopne
ja
adc
ret
push
mov
loop
xchg
cld
es
cli
aaa
lock
movsb
and
popf
inc
das
cmpl
sbb
or
adc
mov
pop
test
mov
fmull
cmpl
push
cmp
scas
xlat
cmpsl
pop
rorb
adc
bound
fdiv
push
mov
mov
lcall
sbb
dec
aad
scas
stc
push
faddl
push
jb
and
fwait
imul
popf
mov
lret
outsb
xchg
cs
cmp
sbb
outsb
sub
pop
insb
or
mov
or
lock
scas
int3
cmpb
xor
sbb
cmp
adc
push
push
and
dec
mov
shrl
stos
in
fs
add
and
lahf
pop
or
jl
xchg
mov
or
movsl
into
std
lods
xchg
aam
aas
icebp
inc
push
jecxz
adcb
cs
inc
cpuid
std
mov
aad
dec
pusha
and
jge
addr16
and
pop
inc
and
push
jae
movsb
or
gs
out
xchg
imul
int3
test
sbb
arpl
jne
pop
jg
lret
in
lcall
imul
mov
lock
mov
dec
insb
push
adc
push
cmpsb
fs
and
push
pop
shlb
fcomp
notl
mov
sbb
lock
clc
mov
or
xchg
dec
push
rol
sub
jno
ljmp
mov
arpl
add
pop
outsb
cmp
test
cmp
js
dec
pop
sub
sbb
sbb
inc
inc
push
popf
sub
xor
dec
mov
lret
dec
sbb
push
rclb
ljmp
imul
or
nop
mov
cmp
push
mov
ds
push
push
enter
xchg
jecxz
jecxz
mov
outsl
ds
cltd
cmp
sbb
push
and
imul
out
rorb
xchg
xor
enter
in
pop
mov
xchg
cmp
popw
mov
fisttpl
popa
jle
push
cmc
xlat
dec
push
push
in
push
sbb
rclb
mov
imul
jecxz
out
jno
arpl
cmp
testl
ds
adc
xchg
ja
idivl
xchg
sub
mov
mov
sbbb
outsb
push
imul
call
pop
mov
cwtl
faddl
and
mov
mov
fstl
or
loop
and
mov
pusha
rorb
or
mov
mov
ja
repnz
pop
xor
pop
jle
xchg
enter
stos
inc
cmpsb
jno
jo
adc
and
pop
sub
insb
aad
fstp
pusha
adcl
mov
dec
inc
mov
cwtl
and
cwtl
ror
push
pushf
enter
ret
dec
sbb
sbb
aad
sbb
sub
dec
aaa
shll
pop
daa
jno
xchg
mov
icebp
sbb
push
aas
mov
sar
xor
fcompl
fwait
push
popa
test
into
push
daa
insb
push
pop
popf
lret
addr16
xchg
xchg
sub
xchg
pushf
push
aaa
out
sub
or
rolb
jnp
or
lods
jae,pn
sbbb
fisttpl
mov
cmpsb
sbb
lahf
int3
sbb
fmull
mov
pusha
push
in
mov
lret
or
or
ret
mov
push
aaa
xchg
dec
jnp
inc
or
stos
sahf
lahf
enter
mulb
icebp
pop
push
mov
pusha
xchg
repnz
xchg
es
das
mov
gs
int
mov
insl
ja
add
jns
cmp
add
or
aam
push
fwait
pop
mov
cmc
push
pop
xchg
sub
loopne
out
test
mov
loope
pop
into
add
sub
push
mov
gs
xor
sub
adc
push
mov
inc
popf
lods
js
dec
stc
idivl
aas
scas
sbb
sbb
das
stc
sbb
jg
push
xchg
ret
inc
insb
cmp
xchg
adc
stc
das
push
ret
sub
fcoms
shr
test
jbe
out
aam
fldl
push
mov
add
ret
lods
arpl
jmp
add
fldl
sbb
outsl
sbb
or
out
scas
mov
test
fsubrs
dec
in
xchg
pop
je
xchg
lahf
test
pop
jp
mov
jnp
jmp
and
cwtl
add
or
das
mov
mov
rcll
dec
nop
fists
mov
pusha
dec
das
insb
and
pop
cmp
pop
jle
xchg
or
ja
mov
pop
dec
sub
lret
and
xor
jbe
cmp
scas
push
xchg
mov
mov
into
daa
mov
lock
ror
nop
loop
pop
jo
pop
inc
sub
push
leave
std
jae
or
sbb
push
dec
mov
stc
mov
or
and
fnstsw
xorb
mov
loop
dec
movsb
or
rolb
call
popa
mov
fdivl
inc
and
push
pushf
sbb
testb
andb
add
adc
or
es
mov
fwait
cmp
and
adc
int3
sub
ja
pusha
add
push
dec
rol
stos
push
pop
dec
es
out
sti
xlat
outsl
adc
outsl
inc
inc
xchg
adc
les
movsl
outsb
jnp
int
adc
call
dec
and
popa
out
or
sub
lret
mov
push
pop
pop
xlat
test
aad
mov
xlat
add
or
repz
mov
pop
pop
aam
mov
xchg
jecxz
fsubrp
pop
jns
aaa
sub
out
and
je
inc
mov
pusha
mov
les
aas
popf
sub
mov
push
and
mov
shlb
cmpsb
test
lods
inc
imul
xlat
rorl
cli
sub
xlat
repnz
cmpsb
sbb
gs
enter
cmp
push
mov
pop
adcb
je
test
push
enter
stc
or
or
xor
sbbb
xlat
movsl
stc
mov
sarl
outsl
jae
xor
ljmp
pusha
cmp
push
arpl
pop
cmpsl
mov
fldenv
es
mov
lret
jo
fldt
in
pusha
cli
xlat
sahf
mov
xchg
adc
in
jecxz
or
pop
inc
mov
sbb
sub
jecxz
mov
push
lret
jge
dec
or
and
fimuls
sub
or
lea
mov
inc
sub
shll
push
int3
cwtl
push
xchg
adc
or
je
jge
push
stos
sub
mov
sub
cmp
xor
push
or
push
andb
in
lods
jecxz
sbb
dec
fwait
repnz
repz
lods
gs
and
mov
and
pop
xor
iret
xchg
movsb
inc
dec
add
movsb
in
xor
or
or
cmpsb
cld
jecxz
push
sbb
jnp
pop
test
inc
loop
inc
ret
push
xchg
fists
mov
dec
mov
vphadduwd
int3
js
mov
lcall
loope
jo
lods
pop
in
adc
lret
je
ret
subl
dec
imul
int
fwait
adc
cmpsl
sbb
or
roll
test
jnp
lea
xor
cmp
mov
sbb
adc
jbe
mov
xchg
fsubrl
imul
push
loop
aad
fcomps
outsb
mov
shr
outsb
pop
lods
fcmovnb
lods
push
pop
cmp
xchg
mov
push
repz
xchg
pop
pop
xchg
and
fs
push
cltd
data16
mov
pop
pop
sbb
xlat
out
push
mov
xchg
and
add
xchg
leave
mov
xchg
inc
aam
int
rcll
outsb
roll
add
and
jl
stos
dec
cmp
outsl
sbb
dec
xchg
jno
arpl
cld
test
jg
ficompl
stos
xor
sbb
inc
outsb
mov
cmp
dec
cld
pop
stos
movl
divl
jnp
pop
mov
jno
ljmp
sbb
jnp
or
popa
call
pop
inc
inc
xor
dec
xor
jp
sbb
jns
sbb
mov
mov
movl
jmp
std
push
dec
pop
dec
pop
into
push
xchg
fwait
or
sbb
outsl
and
mov
shrb
lock
pusha
lcall
into
nop
lock
dec
dec
xchg
js
add
int
inc
pop
iret
and
add
xor
pop
and
mov
outsb
rcl
mov
insl
cmp
int
cmc
add
enter
cltd
int
scas
les
cmc
mov
sub
rorb
ljmp
test
leave
ds
push
xchg
mov
xor
inc
lods
cmp
stos
das
dec
jno
jnp
and
unpckhps
and
int
test
dec
sub
scas
sbb
shlb
mov
aaa
jge
je
xor
sbb
sarb
adc
insb
lods
js
adc
or
sbb
or
mov
ss
xorb
rcrl
lea
push
xlat
repnz
push
fdivr
pushf
xor
xor
notb
jp
jbe
repnz
adc
scas
pop
mov
jae
cmc
stos
leave
cltd
lods
imul
scas
js
fmull
aaa
mov
std
push
jmp
mov
popf
sub
add
sbb
mov
mov
fisubrs
mov
js
data16
jle
repnz
sti
cmp
cltd
sub
fldl
mov
add
xor
dec
fwait
dec
inc
adc
dec
push
mov
mov
fwait
insl
in
lahf
mov
loopne
faddl
jmp
mov
mov
or
mov
hlt
cmp
sub
push
lock
mov
mov
sbb
les
adc
mov
fiaddl
nop
psubsb
lea
out
out
cmpsb
mov
lock
cmp
jle
inc
sbb
jmp
stc
sbb
push
pop
fwait
lods
sbbb
popf
pusha
jo
subb
inc
ja
mov
mov
outsb
stos
out
aam
iret
add
xchg
in
data16
jl
mov
push
ret
idivb
push
cmpb
mov
je,pt
stos
into
lret
in
add
dec
add
cli
std
or
out
mov
es
mov
addr16
pop
and
ret
adc
jne
mov
out
fstpl
jns
or
fs
push
fistps
clc
xor
mov
and
mov
mov
pop
scas
stos
add
cwtl
sarl
pop
mov
push
test
jns
mov
imul
or
call
std
bnd
shll
jae
test
shll
xor
outsl
push
icebp
adc
xchg
sbb
push
mov
jg
outsb
and
ds
sbb
mov
xor
aad
add
push
ss
test
jmp
daa
push
xor
cmp
aaa
in
mov
sub
pusha
and
pop
in
mov
ret
push
inc
test
dec
in
adc
daa
cmp
in
cmp
push
pop
push
in
inc
dec
and
mov
xchg
cwtl
dec
push
das
dec
cmp
mov
pop
mov
in
pop
lock
inc
adc
jo
add
cmp
lods
xor
adc
xor
call
daa
cmp
pop
out
inc
aas
lahf
pusha
xor
push
jae
call
testb
repnz
sbb
out
fdivs
repnz
xchg
addr16
pop
cmp
add
or
imulb
rcll
pop
lods
mov
scas
incb
inc
mov
cmc
test
repz
dec
cmp
add
jmp
add
fwait
jae
xchg
xchg
shll
les
in
imulb
cli
mov
push
out
xor
dec
mov
or
pop
rcll
pop
rcl
ret
rcrb
rorl
loope
and
jmp
int
jne
je
mov
mov
and
and
jbe
in
int
xor
rcr
insw
sahf
je
mov
xor
int3
test
xor
sub
repz
xchg
add
and
sub
gs
push
enter
cld
cld
or
addr16
cmp
shlb
jne
cltd
ja
add
ljmp
xorb
cmpsl
dec
mov
pop
mov
inc
lods
fs
repnz
sub
push
ja
cli
dec
sub
jo
ror
loopne
out
nop
push
add
out
hlt
xor
push
cmp
pop
add
mov
mov
popa
mov
mov
jmp
mov
movsb
les
inc
push
cmpsb
outsl
dec
xchg
stos
push
add
addl
lcall
leave
push
scas
pop
subl
push
lret
test
dec
and
test
sub
adc
add
iret
mov
int3
int3
out
pop
imul
enter
bound
cmp
mov
ss
xchg
test
sub
clc
sub
movsb
divl
ljmp
bound
mov
ds
cmp
cmp
aas
push
sbb
sbb
cmp
leave
mov
or
ja
cld
pop
jb
das
xor
pop
int3
insl
test
les
xchg
dec
sbb
lods
add
sub
jecxz
nop
lods
xor
lds
jp
pop
fs
pop
inc
and
icebp
movaps
adc
icebp
xchg
fildll
bound
xchg
pop
nop
rorl
adc
sub
xchg
lock
jmp
test
lods
pop
inc
add
adc
scas
sub
in
mov
xchg
int
jbe
add
int3
shlb
loope
mov
inc
sub
gs
test
and
rolb
mov
pop
sub
loop
hlt
inc
hlt
and
push
jle
jo
mov
sbb
mov
or
jb
leave
inc
mov
pop
and
and
movsl
repz
xchg
mov
pop
movsl
xchg
pop
notb
test
jb
or
in
stc
es
cmpsl
lcall
int
inc
stc
in
mov
cmp
mov
sub
cld
xchg
push
fwait
icebp
lea
daa
pop
push
add
add
cmp
outsb
leave
adc
pusha
dec
mov
ds
das
leave
lret
sbb
fbld
sar
push
nop
mov
mov
ja
movl
push
pop
insb
cmp
mov
cli
xchg
pmaxsw
dec
mov
ss
mull
inc
or
or
scas
daa
lds
push
loopne
jb
insl
mov
inc
in
add
and
test
cmp
and
xor
out
std
add
mov
fucompp
stos
int
jne
xchg
outsl
daa
pop
sbb
roll
daa
sti
hlt
jo
bound
sub
inc
push
pop
into
in
jmp
addr16
mov
pxor
jge
mov
in
dec
sub
jne
inc
aad
sarb
out
into
sub
pop
out
push
fdivrl
mov
ss
sub
sbb
pop
notl
das
call
sub
std
out
shll
pop
int3
mov
pusha
or
ficoms
mov
insl
int
jmp
ds
or
incl
mov
and
xchg
jne
adc
cmp
fwait
xor
mov
les
gs
cmp
jecxz
fistl
dec
adc
mov
aas
fsubrs
or
sub
jl
cli
dec
jl
icebp
mov
add
sbb
jg
push
popf
aas
push
adc
dec
and
mov
lea
mov
inc
imul
sbb
movsl
aam
pop
push
dec
lods
mov
fldl
adc
test
fwait
fwait
add
push
in
pop
dec
mov
dec
repz
inc
pop
push
sub
jp
sbb
push
faddl
sub
xor
cmp
sub
pop
or
dec
mov
or
mov
in
and
into
xor
push
xchg
pusha
push
imul
std
push
fstp
pop
outsl
jb
mov
fwait
xor
jg
and
aaa
push
sbb
mov
push
push
test
loop
lock
aas
jne
push
push
into
xchg
lret
shlb
push
push
and
ja
dec
into
inc
pusha
cmp
std
pop
movsb
mov
and
fucomip
pusha
dec
gs
std
cmp
pop
outsl
fsubr
mov
mov
insl
xlat
lahf
lret
inc
fstpl
ficompl
mov
ds
jo
cmp
sbb
pop
cmp
repnz
sub
arpl
inc
xchg
mov
xor
outsl
xchg
lds
rorb
out
lret
sahf
int
scas
bound
in
xor
mov
orb
mov
rorb
mov
scas
jle
push
test
out
cmp
sbb
mov
sbb
jbe
pop
xor
std
cmp
mov
stos
call
sahf
cltd
movl
lret
je
push
and
lods
inc
test
test
fsubrp
adc
push
inc
scas
xchg
lea
int
scas
arpl
sbb
cwtl
outsb
leave
jl
fcompl
pop
pop
test
std
sub
insl
inc
lods
mov
cmp
lret
cmp
jno
lds
inc
loopne
inc
loope
add
pop
and
aad
aad
lods
mov
loopne
shll
cmp
add
add
in
test
sub
sub
jbe
ret
cli
cwtl
stc
stos
arpl
xchg
sub
inc
addl
push
pop
cmp
push
sub
std
and
mov
cmp
sub
bound
push
sbb
jg
xor
cmpsb
cli
ljmp
call
loop
orl
mov
scas
dec
or
inc
sub
mov
xor
stos
shrb
inc
push
mov
mov
mov
add
movq
scas
aam
add
pop
inc
cmpsb
aam
mov
mov
or
xchg
test
fcmove
in
jl
dec
dec
mov
mov
add
lret
mov
ja
or
scas
xlat
pop
mov
lds
lds
stc
xor
lock
leave
cmp
scas
scas
adc
insl
adc
xchg
mov
xchg
push
daa
xorl
outsb
inc
dec
mov
inc
mov
cmc
mov
push
xor
gs
mov
or
fisttpl
ljmp
ds
push
insl
jmp
xorb
xor
dec
shl
mov
outsb
sbb
lods
ret
cwtl
sbb
or
xor
add
and
cmp
cmc
jl
mov
ret
int3
add
aas
sub
push
jmp
das
pop
sarb
and
mov
sbb
jns
subl
int3
jo
test
jne
xor
add
pop
dec
sbb
out
test
or
jae
and
inc
lret
call
sub
enter
into
dec
or
and
movsl
pop
inc
out
adc
push
outsl
and
pop
js
or
aas
xchg
mov
test
sbb
loopne
outsb
inc
inc
movsb
xchg
orb
iret
jae
lret
mov
nop
inc
push
mov
push
push
or
inc
pop
cs
sub
xchg
pop
cmc
add
icebp
mov
push
pushf
xchg
cmpsb
sbb
and
adc
xchg
repz
mov
je
sarb
in
popf
mov
daa
cmpb
movsb
inc
fmull
cli
fsubs
sub
testl
jbe
icebp
adcb
aas
outsl
and
lds
jle
inc
cmp
aaa
insl
movsl
scas
jg
das
ret
dec
sub
sub
pop
adc
push
int3
xor
xor
aam
ljmp
lock
or
jge
popf
fsubrp
pushf
popa
dec
xor
cs
ficoml
divb
pop
xor
xchg
repnz
pop
jno
loope
push
test
lea
das
jno
cs
ljmp
out
jg
idivl
mov
jns,pn
addl
pop
ret
in
xor
mov
repz
int
mov
mov
cwtl
scas
cmc
mov
sti
add
adc
xor
std
repz
dec
push
push
cmp
mov
sub
cmp
imul
das
add
cld
xchg
stc
ficompl
test
dec
push
test
mov
sbb
lock
sbb
xchg
jmp
add
lods
jnp
cmpsl
into
xchg
mov
xchg
popa
xlat
fcmove
push
fs
aam
xchg
pop
fnstenv
sbb
call
out
notl
or
sbb
movsb
adc
pop
mov
lock
mov
std
cli
mov
cmp
sbb
adc
add
sub
aam
cli
pop
test
jbe
mov
or
or
lds
rcrl
enter
xchg
adc
jecxz
es
rcrb
arpl
mov
mov
adc
dec
popa
cld
cld
cltd
dec
jnp
je
mov
mov
xor
iret
dec
sbb
std
cmp
cmp
inc
rorb
or
stos
int3
push
dec
sarb
outsl
jle
xor
dec
gs
cmp
xor
xor
sub
bound
ss
stc
mov
adc
push
dec
rcrl
cmpb
bound
sbb
lret
loope
pop
mov
pusha
xor
mov
add
loop
lret
sti
mov
loopne
cli
imul
shl
aad
pop
xlat
xchg
push
and
fadds
lret
pop
jp
mov
push
cmpsb
stos
in
push
aaa
pop
lock
pop
test
aam
pop
or
xchg
daa
je
dec
pop
pop
jns
and
popa
push
jg
sti
or
pop
fsub
inc
test
gs
movsb
das
fldenv
jns
jl
mov
sbb
xchg
in
neg
cmp
out
lods
cmp
xchg
push
loopne,pn
into
jle
pop
mov
mov
dec
je
ret
popf
cwtl
inc
cmp
or
out
in
xchg
icebp
decl
in
cmp
test
push
dec
jno
roll
stc
outsb
cwtl
cli
int
mov
add
repz
popa
stc
ljmp
jnp
sbb
aad
mov
test
leave
mov
out
dec
pop
lcall
jp
popf
ret
sub
adc
and
or
mov
pop
mov
sub
xor
jb
out
mov
push
pop
mov
imul
pop
test
hlt
add
xor
jns
into
mov
popa
sub
add
dec
rcll
xchg
push
fwait
xor
in
mov
lahf
xchg
jl
sub
sub
in
cli
xor
lds
or
pop
sub
and
imul
or
aam
subb
add
fsubrs
gs
sbb
std
nop
mul
xor
ror
sub
popa
ds
mov
test
insl
sti
orb
imul
push
imul
jp
gs
dec
jo
nop
enter
inc
push
insl
dec
sbb
pop
int
iret
push
fisttpl
xor
cli
or
push
sbb
aad
mov
mov
dec
out
cmc
jae
test
mov
sbb
cltd
mov
sbb
int3
cmp
mov
xchg
popa
fdivrs
outsl
inc
mov
jmp
sbbb
mov
insl
sub
xor
and
daa
inc
cmp
test
movsb
sbbl
inc
and
repnz
pop
cs
push
cmp
inc
dec
scas
mov
je
mov
xchg
test
jno
mov
cmp
xchg
cmp
fisubs
sub
and
fsubs
lds
xor
sub
inc
adc
add
mov
push
jns
lods
jecxz
jp
dec
inc
repz
pop
or
mov
mov
inc
cmpsl
push
xchg
rcl
je
push
sub
jecxz
xor
ss
adc
cmp
test
mov
push
pop
test
std
lods
mov
ds
push
pop
imul
test
test
popa
cmp
sub
jge
sub
cmpsb
sub
rclb
inc
out
jp
lahf
das
push
repz
popf
mov
mov
inc
sbb
adc
or
in
xchg
cmp
nop
nop
fs
rol
jmp
adc
lahf
jne
jbe
jae
decl
sub
cltd
test
add
scas
mov
cmp
adc
out
jl
pop
adc
scas
push
lcall
or
add
loopne
push
ret
xchg
mov
mov
mov
mov
mov
ret
sub
repz
mov
mov
out
push
mov
xchg
xchg
loope
dec
cmc
ret
pop
data16
push
push
jb
fiadds
inc
mov
in
pop
dec
adc
adc
imul
fnstcw
fildll
stos
xchg
inc
or
data16
js
inc
add
rcr
xchg
xchg
popf
jp
or
adc
sbb
cmp
movsl
cmpsb
jl
es
add
inc
xchg
push
and
push
or
dec
jecxz
sub
xlat
repnz
mov
mov
inc
rcrb
lahf
cmp
ss
subps
fcomps
add
push
and
jle
cmp
or
xor
fwait
pop
add
cmp
lcall
jb
xor
roll
imul
or
insb
add
or
hlt
pop
daa
mov
cld
test
lret
mov
cs
add
cli
dec
mov
lret
or
adc
cmc
pop
mov
data16
mov
adc
xor
les
ret
push
mov
jle
xlat
adc
lods
mov
push
pushf
jg
fnsave
fsubs
repnz
cmp
pop
push
mov
add
es
cld
dec
xlat
imull
mov
sub
mov
and
outsb
or
jb
or
out
inc
lret
or
sarb
into
or
loope
xchg
cmp
mov
mov
test
adc
adc
mov
and
inc
adc
mov
cld
pop
test
mov
push
imul
sub
and
xor
mov
and
dec
ljmp
add
or
jnp
subl
int3
jg
mov
dec
mov
lock
dec
mov
xor
imul
fdivl
mov
cli
mov
jo
inc
dec
jno
pop
lret
jp
push
in
stc
jl
call
pop
xchg
jnp
mov
rolb
out
movsb
je
into
jmp
movsb
adc
add
xor
inc
lret
scas
into
andl
xchg
cld
icebp
bound
inc
sbb
sub
xor
mov
cmpsb
dec
adc
dec
cmp
aam
mov
dec
je
in
or
insb
pop
xor
or
gs
push
xchg
push
push
sbb
push
inc
jmp
jl
je
xorl
into
aam
pop
fwait
insb
imul
adc
jle
push
mov
movsb
mov
rorl
sub
mov
dec
mov
jae
dec
int3
out
push
fdivl
popf
jae
mov
pop
pop
sbb
int
adc
adc
mov
cmp
out
push
test
lahf
xor
sbb
cmp
jp
dec
movsb
lds
xchg
pop
sbb
ja
jmp
fwait
dec
imul
in
mov
fiadds
loopne
loop
sub
shlb
add
cli
and
xor
pop
imul
and
pop
mov
push
pop
pop
daa
or
sti
insl
imul
cmp
stos
repnz
sub
cmpsl
in
push
aam
pop
test
insb
sub
pop
pop
sbb
sub
adc
push
and
call
add
xchg
add
into
xor
xor
xor
cmpsl
dec
mov
sub
xchg
push
push
mov
xchg
add
dec
xchg
data16
push
lcall
lahf
rorb
cli
push
cmpb
mov
rolb
jbe
or
popa
test
pop
mov
inc
daa
mov
pop
jno
in
rcrb
lret
fstps
stos
mov
xchg
out
pop
out
jns
xor
pop
shlb
ret
out
outsl
insl
mov
cwtl
cmp
ret
in
push
mov
lds
addr16
scas
xor
ja
pop
xor
mov
out
mov
fdivrl
gs
jbe
icebp
push
dec
pusha
and
lret
or
fisttpl
xchg
imul
cld
mov
shrb
ss
mov
jb
inc
xchg
jae
sbb
add
shr
repz
popf
aas
rorb
jne
cmpsb
sti
cld
les
push
jge
lret
test
add
sbb
cmp
xor
xchg
addl
jne
mov
int3
and
jns
mov
push
mov
mov
pushf
aam
jne
dec
sub
add
in
out
and
hlt
inc
insb
aaa
outsl
fsubr
stos
dec
add
loope
xchg
dec
xchg
or
pusha
enter
js
cmp
int
test
cmp
cmp
pop
sbb
movsb
les
and
xchg
data16
inc
dec
das
xchg
aam
push
jns
shld
in
insl
xchg
cmovno
inc
sbbl
cmp
scas
pop
xor
cmp
sti
push
in
les
icebp
adcl
imull
in
mov
push
jl
push
cs
movsl
adc
push
test
adc
arpl
lock
dec
test
lret
adcb
ja
stos
push
andb
or
addl
jge
add
out
gs
add
arpl
push
jl
sahf
add
xor
mov
sub
xlat
add
iret
inc
stc
mov
inc
xor
jg
and
xchg
sti
adc
xchg
pop
jb
das
mov
xor
imul
xor
stos
divb
daa
ljmp
sahf
inc
xlat
push
xlat
icebp
push
addr16
out
out
ljmp
inc
adc
jb
outsl
jbe
mov
sbb
nop
outsb
int
xchg
cwtl
shrl
pop
xchg
lcall
popa
pop
shrl
out
lret
fldl
inc
jnp
or
arpl
mov
ds
cld
mov
scas
sbb
pushf
out
mov
inc
fstpl
pop
scas
ds
sbb
repnz
mov
add
or
xlat
lret
dec
or
push
test
push
inc
arpl
loope
xchg
rcrb
dec
pop
scas
jno
call
pop
pop
out
gs
rcrb
and
aas
pop
pop
jns
jb
es
std
pop
xor
xchg
cmp
add
jmp
xor
cmp
ficomps
scas
std
sub
call
cmpsl
push
xor
dec
cmp
sti
ljmp
adc
mov
xchg
jne
dec
and
sub
icebp
mov
jmp
pop
aas
inc
xor
lcall
ret
mov
inc
sbb
jecxz
cs
fbstp
fnsave
popf
pop
mov
mov
jno
popfw
xchg
xchg
rorl
xchg
fs
mov
mov
and
cltd
inc
into
rorl
xchg
adc
or
stos
pop
cmp
and
lods
cmp
and
mov
ds
mov
inc
cmpsb
mov
iret
pop
sbb
xchg
cmp
mov
mov
pop
mov
adcl
xchg
lret
ds
and
cmpsb
inc
hlt
jb
add
test
or
es
sub
jmp
lret
popl
xor
or
dec
out
jl
imul
stos
popf
push
iret
xor
pop
cmp
clc
mov
cmpsb
popa
mov
sbb
into
cli
pop
xchg
or
aad
push
icebp
add
popf
in
addl
jl
sub
fimull
or
jle
jmp
push
inc
xchg
mov
nop
dec
lahf
xchg
dec
repz
jge
add
and
adc
xlat
cmp
das
std
pop
xlat
leave
mov
mov
pop
mov
loope
scas
enter
fmull
sub
fwait
mov
ja
out
pop
fsubl
cs
test
gs
lods
adc
inc
sbb
out
push
into
cmpsl
popf
mov
repnz
mov
in
xchg
mov
inc
inc
jnp
push
gs
xchg
dec
fldcw
add
sti
lahf
xchg
fisttps
lret
mov
lods
outsl
clc
call
push
fildl
or
or
jge
inc
repnz
andb
push
dec
out
mov
popf
mov
fnstcw
insb
ffree
fnstenv
sbb
dec
test
pop
test
in
sbb
inc
loopne
push
andb
pop
inc
mov
out
cmc
ds
shll
movhps
xchg
lea
mov
push
pop
xor
or
push
lahf
icebp
out
mov
inc
adc
mov
xchg
cmp
jns
packuswb
scas
jns
sub
mov
inc
push
test
sti
iret
lock
or
xchg
cmp
in
daa
daa
clc
jmp
ljmp
jns
negb
mov
sub
adc
pop
mov
clc
pop
push
in
sbb
ljmp
mov
cwtl
out
jp
sub
mov
cs
xchg
arpl
xchg
xor
outsl
faddp
jne
mov
dec
add
xor
or
lods
xor
ljmp
mov
in
stos
xor
mov
js
lods
xchg
pop
ret
cmp
test
push
jnp
and
dec
cmp
imul
aaa
sub
xchg
dec
popf
sub
sar
xor
pushf
jecxz
inc
or
dec
loope
push
icebp
pop
sub
jo
push
sub
bound
sbb
jns
cwtl
lods
scas
add
mov
loope
jle
repz
adc
das
faddl
jle
cwtl
add
cmp
and
add
jbe
dec
filds
inc
pusha
push
into
dec
mov
sub
cmpsb
pop
fistps
mov
adc
cltd
stos
ret
xchg
inc
or
xchg
lcall
xchg
aas
pop
mov
sbb
cmpsb
fildl
xchg
out
add
sti
andb
adc
sub
aad
scas
dec
rcr
cwtl
xchg
inc
out
pushf
lahf
aad
push
orb
pop
in
call
and
shlb
test
leave
pop
popl
jns
gs
jne
adc
push
dec
pop
mov
mov
aaa
movsl
pushf
test
imul
divl
or
xlat
dec
js
dec
fwait
pop
mov
cltd
sbb
mov
in
mov
mov
repz
mov
popa
jle
cli
test
add
push
stc
cwtl
std
mov
cmp
stos
into
adc
cmc
loope
mov
inc
imul
xchg
lcall
inc
call
inc
dec
aam
mov
in
inc
iret
imul
inc
push
sbb
scas
mov
or
aas
rcll
jne
push
or
and
inc
push
cs
mov
stos
mov
or
and
jg
int
clc
or
inc
unpckhps
mov
lock
lods
sub
jbe
test
or
cmp
imul
out
popl
mov
mov
addb
mov
jne
test
push
icebp
or
lret
test
push
adc
sti
addr16
xchg
fs
mov
scas
sub
daa
inc
sub
imul
jge
push
jns
mov
testl
pop
loope
dec
cmp
addr16
mov
fisubrl
dec
enter
clc
jns
or
jmp
test
push
in
xchg
xchg
push
ds
mov
xchg
sub
rolb
jp
push
iret
xchg
pop
xor
push
int
jmp
push
lods
xchg
push
and
add
mov
jno
dec
repz
test
xchg
in
cld
push
js
sbb
fwait
clc
cltd
push
pop
jmp
push
mov
das
sub
pusha
sbb
sbb
push
mov
insl
mov
cmp
ds
sahf
mov
imul
scas
ss
mov
cmpsb
push
pop
in
es
lcall
scas
popa
pop
xor
out
and
mov
inc
jo
xchg
push
mov
or
inc
mov
push
mov
push
mov
in
jle
lahf
xchg
dec
push
jb
enterw
dec
mov
imul
jg
stos
jl
push
out
push
mov
ljmp
lret
and
cld
lea
aas
jne
jl
ror
inc
sub
daa
out
hlt
or
cmpsl
mov
and
and
shrl
adc
xchg
das
cmp
enter
sbbl
xchg
cmp
in
ficompl
jns
xor
push
xchg
divb
inc
testb
rcrb
mov
mov
xchg
int3
sbb
shlb
insb
sub
add
testb
and
insb
mov
lock
sbb
fsts
es
push
dec
and
ljmp
xchg
push
xor
pop
ja
fsubrs
lods
int
imul
pop
mov
xchg
sbb
cmp
inc
daa
fldcw
dec
xor
mov
cltd
jmp
push
mov
mov
xchg
cwtl
ljmp
popl
mov
enter
flds
mov
into
mov
ljmp
scas
test
lea
int
jmp
mov
mov
mov
mov
adc
xchg
mov
mov
cmc
cli
fmull
dec
cmp
cmp
adc
sbb
movsb
sti
sbb
cwtl
lods
mov
jge
ja
hlt
out
sub
inc
in
nop
inc
jmp
into
bound
or
outsl
nop
adc
aad
cmp
dec
mov
mov
dec
fnsave
adc
js
jb
xchg
fistpl
adc
or
mov
xchg
js
aad
cmp
rorl
mov
or
push
push
lret
arpl
xor
jl
mov
jnp
ljmp
jmp
out
adc
repnz
cmp
rorb
sbb
sub
push
pop
fwait
mov
dec
and
mov
divb
sti
inc
cmovne
daa
js
cmp
add
sti
xorb
mov
mov
lods
push
xchg
fcompl
mov
lret
sbb
inc
adc
dec
pusha
arpl
and
sub
ds
test
adc
pop
cwtl
int3
out
ds
fwait
cmp
sbb
add
ret
leave
adc
push
adc
iret
xchg
dec
outsb
mov
jmp
sbb
int
pop
pushl
inc
rorb
sbb
cs
cmp
pop
jb
jmp
jle
or
in
or
mov
pushf
sbb
mov
mov
fwait
lea
adc
and
push
lret
mov
xchg
icebp
xor
inc
fdivrl
mov
mov
ret
push
xor
add
out
pop
adc
sub
and
rcrb
xchg
push
or
push
inc
loopne
mov
sub
xor
push
out
andl
mov
fidivrl
pop
lret
cmove
mov
or
sahf
out
mov
or
add
enter
mov
xorb
sahf
test
jo
lds
mov
bound
subb
mov
push
fdiv
adc
hlt
stos
inc
in
addr16
push
loopne
sub
fisubl
fs
call
ja
ret
xacquire
scas
push
inc
cmp
sub
in
insb
adc
and
std
inc
sub
fwait
inc
imul
jmp
jl
xor
mov
jmp
xchg
loope
test
test
aad
sarl
or
or
hlt
mov
cmc
jb
int3
std
lcall
fidivl
and
push
cwtl
hlt
ljmp
xchg
dec
out
jo
outsb
sbb
jp
lock
dec
adc
dec
or
add
cmpsl
or
arpl
roll
dec
jmp
fmull
addr16
pop
mov
lcall
mov
ss
add
out
mov
test
lods
fdivs
lds
mov
ret
mov
bsr
cwtl
push
sahf
mov
push
pop
pop
movsl
cltd
test
std
sahf
or
sbb
adc
ficomps
push
xchg
movsl
and
push
gs
push
xor
sbb
int3
mov
mov
pop
xchg
or
cltd
es
mov
int3
push
ljmp
repnz
scas
dec
ret
xchg
mov
add
dec
push
leave
leave
mov
or
cmpl
pop
push
icebp
arpl
ret
cli
xchg
rcrb
push
mov
pusha
fwait
cmp
adc
out
aad
sbb
lock
pop
mov
fcmovne
jl
sbb
adc
repnz
ja
in
pop
das
and
sub
mov
mov
jge
into
pop
lret
push
mov
ds
sub
push
cmp
mov
movsb
push
dec
call
jmp
jg
inc
repz
shrb
stos
jb
or
aam
shll
rolb
orl
incl
push
sub
negb
and
and
jbe
ds
stos
test
fsubs
adc
sbb
lea
push
and
sbb
aas
inc
cwtl
nop
lret
push
mov
and
inc
or
sbb
jge
inc
or
jl
loopne
mov
cmp
ds
pop
jecxz
aad
xor
sub
or
hlt
and
adc
xchg
or
loop
jne
mov
lcall
clc
adc
dec
sarb
cwtl
xchg
jb
out
pop
cmpsb
adc
jb
and
ljmp
int
shrb
test
popf
adc
adc
xor
xchg
loopne
rep
sbb
or
push
callw
fs
data16
jnp
or
mov
xor
ss
adc
mov
inc
jae
xchg
cmc
mov
xorb
push
fidivrs
mov
outsl
iret
dec
test
jg
add
cwtl
xchg
jne
stos
js
xchg
cmp
inc
push
subl
fs
sub
and
into
xchg
scas
or
pop
addr16
sti
das
jnp
lock
cmp
cltd
push
int
sbb
pushl
push
push
jp
outsb
jno
insb
loope
inc
fnstenv
jns
jae
sahf
mov
jle
and
dec
movsb
push
test
into
into
inc
xchg
pop
xlat
fcomps
bound
lcall
xchg
or
jle
xor
mov
pop
push
mov
and
jg
pop
js
lcall
jge
xchg
stc
xchg
dec
mov
jnp
adc
inc
xchg
ror
cwtl
mov
mov
sbb
lods
jle
cmpsl
scas
divb
or
lcall
jb
mov
lcall
add
ret
bound
rcll
testl
aad
inc
scas
or
idiv
sub
adcb
mov
pop
scas
fildl
mov
xchg
push
fs
push
dec
daa
sub
test
inc
sbb
push
pushf
in
mov
mov
xor
and
push
ja
or
mov
lds
push
je
adc
dec
cli
movb
arpl
mov
push
push
push
lock
rcll
fisubs
and
mov
push
add
push
sub
jns
sub
in
popf
dec
jmp
notl
sbb
jg
sub
adc
ret
add
mov
and
les
jmp
mov
mov
ljmp
testb
and
insl
out
pop
inc
loop
inc
inc
cmpsl
into
stc
push
lds
shr
leave
pushf
add
mov
inc
inc
outsl
cmp
mov
mov
cs
clc
outsb
dec
pop
cmp
jno
inc
pop
imul
add
or
insb
pop
pop
ja
imull
fs
cmp
orb
ss
loopne
mov
sti
ret
cmp
push
lock
icebp
movsb
push
jno
add
rorb
mov
push
test
sub
int3
jno
inc
cmp
cli
xchg
es
pop
mov
adcl
add
jns
mov
xchg
test
pop
pop
inc
sub
push
sbb
jg
rclb
mov
push
gs
add
out
xor
add
push
lahf
xchg
sbb
or
mov
xor
push
jp
dec
cmp
pusha
mov
je
pop
out
mov
dec
xchg
mov
inc
enter
mov
xchg
sub
and
push
pop
pop
push
xor
fsubrl
inc
dec
mov
push
mov
icebp
ds
xor
adc
sbb
mov
mov
testl
jns
jg
add
out
cmpsb
outsl
pop
mov
adcb
mov
lds
inc
mov
sub
mov
lahf
mov
sbb
in
lahf
jge
sub
imul
push
inc
outsb
push
daa
xor
jne
jg
jne
test
push
push
pop
xor
rcrl
jnp
xor
mov
pop
popa
mov
inc
mov
repz
jne
jns
cli
btcl
repnz
sbb
sahf
inc
dec
pusha
lret
and
fsubl
adc
fisttpll
in
jecxz
mov
xrelease
pushf
dec
sbb
lods
addb
pop
sbb
sti
stos
add
sbb
loopne
xlat
and
push
push
dec
ljmp
arpl
inc
push
mov
pop
je
jle
stos
mov
imul
scas
inc
aaa
in
sub
mov
fistpl
ret
sbb
int
pop
testl
and
cmp
imul
pop
icebp
sub
test
dec
xor
jmp
ljmp
insl
inc
data16
int
xchg
mov
fcom
dec
add
xchg
stos
std
inc
pusha
or
push
or
lods
cmc
lcall
lock
pop
push
clc
and
pusha
cmpl
lcall
cmp
movsl
mov
rol
pop
out
inc
pop
xchg
pop
test
lods
xlat
int
inc
outsl
sahf
imulb
pop
jnp
add
aas
inc
mov
add
fstpl
push
insl
cltd
sub
mov
popf
enter
pusha
pop
sub
sbb
jmp
jno
out
fstl
stos
push
mov
mov
dec
ja
inc
pcmpgtb
in
inc
es
sbb
mov
nop
push
in
movb
cmp
cmp
jb
or
or
xor
test
mov
xchg
sbb
push
xchg
lds
in
lahf
jbe
sub
andl
xor
mov
shlb
in
inc
mov
es
pop
aas
xlat
pop
jmp
jge
icebp
or
mov
cmp
mov
inc
and
xor
sbb
mov
test
insl
push
mov
sbb
adc
mov
insb
dec
cmc
rcl
lds
mov
sbb
lods
mov
dec
negb
xchg
pop
out
lcall
sahf
push
aaa
cs
pop
rclb
inc
add
push
je
fdivs
mov
addr16
push
mov
pushl
pop
inc
dec
xchg
jg
aad
push
push
cld
je
mov
jmp
clc
add
idivb
mov
int3
adc
lcall
mov
jge
jnp
fisttps
jge
xor
int
inc
sub
mov
sub
push
mov
mov
mov
je
push
pop
push
pop
push
fbld
imul
iret
push
test
xchg
jl
add
pop
and
and
lret
cmp
lods
inc
sahf
addr16
inc
lahf
cmpb
xor
and
cld
jl
hlt
sub
add
cmp
call
xchg
in
adc
adc
lods
out
jo
mov
or
jb
xor
mov
push
shlb
outsl
cmpsl
bound
outsl
rolb
imul
movsl
inc
xlat
pushf
lcall
rol
das
shll
dec
aaa
push
loopne
ret
shll
sti
jmp
xor
test
and
xor
hlt
rcl
and
pop
sbb
push
fadd
xchg
call
lods
pop
scas
rorl
movsl
sbb
jne
inc
jp
jnp
stos
ret
or
popa
sbb
pop
rcl
lret
shrb
scas
out
ds
add
sub
mov
sub
pop
push
fists
inc
mov
ror
and
ljmp
mov
mov
mov
subb
stos
push
outsb
data16
jg
ret
and
pushf
and
cli
xlat
data16
add
int3
popf
aam
push
fcoms
mov
xlat
jae,pt
mov
add
stos
sub
popa
fadds
cli
movsb
add
pop
movsb
xchg
cmpl
jecxz
faddp
xchg
mov
shlb
adc
test
xor
xchg
icebp
data16
jle
mov
cmp
lods
push
fnsave
jae
fwait
push
and
or
or
cltd
adc
push
mov
dec
mov
daa
xchg
xlat
jae
adc
aam
and
push
mov
adc
in
cmc
adc
stos
xor
pop
mov
push
jmp
jae
xor
cli
in
sbb
cmpsl
pop
out
sub
push
cmpsb
data16
nop
flds
fdivr
add
mov
push
lods
sub
or
loop
test
and
out
out
stos
stos
lds
lahf
push
in
in
pop
dec
cmpsl
mov
add
out
push
add
mov
push
sbb
int3
inc
xor
clc
clc
xchg
enter
fnstsw
mov
mov
mov
ljmp
mov
int
pop
fcmovu
ds
jno
jg
jns
push
xor
lods
mov
xchg
add
mov
xchg
fstpl
push
rcr
fwait
mov
stos
mov
imul
sahf
push
push
lret
stos
pop
cmpb
loopne
sti
push
add
mov
xor
repz
iret
jae
xlat
jge
jns
insl
cmpsb
std
call
inc
and
test
aad
mov
fcoms
jns
fwait
shlb
jg
dec
andl
cmp
sub
imul
sub
or
stc
cld
fsubrs
es
inc
rclb
outsl
add
push
push
scas
jl,pt
lods
add
cmp
jnp
sub
mov
test
mov
pop
dec
dec
push
mov
sbb
repz
and
jle
cmp
cmpsl
loop
mov
push
inc
insl
mov
mov
xor
loopne
push
into
dec
pop
xchg
ja
int
or
roll
jl
movsl
jae
les
adc
sub
cltd
push
test
stos
outsl
sbb
and
push
and
add
out
inc
pop
pusha
sub
add
push
push
enter
pop
je
cmp
pop
ds
add
push
xchg
imul
jmp
add
adc
push
mov
adcb
arpl
mov
fs
in
jmp
enter
mov
jecxz
fimuls
xor
add
jg
and
popa
fildll
jnp
ja
add
xlat
xor
cmpsl
lcall
loop
push
cmpsl
inc
jnp
jbe
in
mov
sub
cli
xchg
popa
sub
inc
push
pop
lods
out
mov
mov
aam
push
push
aam
pop
push
add
movb
out
inc
pop
sub
loope
adc
inc
cli
mov
mov
loope
pop
les
adc
xchg
out
jmp
mov
jb
scas
or
sub
mov
mov
or
jl
xor
lahf
popa
xor
sarl
out
les
cltd
outsb
testb
aaa
stos
push
sbb
push
jae
das
xchg
jp
mov
jns
popa
mov
sbb
and
mov
xchg
jle
sub
push
arpl
jmp
sub
xor
arpl
and
jge
movsb
ja
rclb
data16
loope
pop
and
js
pop
gs
mov
and
mov
or
xor
movsb
push
stc
jb
enter
rcr
ret
sbb
mov
lcall
mov
push
in
mov
mov
loop
and
cld
insl
and
lods
fcomip
scas
inc
xorl
mov
lds
dec
inc
loop
in
hlt
adc
adc
adc
add
int3
and
sahf
daa
call
popf
incb
push
mov
jmp
push
mov
arpl
orl
dec
xlat
mov
mov
fsts
pop
sbb
cld
dec
jo
rorl
mov
jg
loopne
mov
ret
es
adc
xchg
dec
cmp
pop
les
pop
xor
mov
mov
adc
xchg
xor
xchg
mov
pop
jg
pop
and
mov
fistpll
out
cwtl
jp
fsubs
xchg
js
mov
sbb
pop
jns
mov
pop
gs
int3
push
aaa
inc
js
in
xlat
rcl
xchg
fimuls
xor
fistpll
dec
mov
mov
mov
dec
clc
out
lret
mov
or
adc
xor
es
aam
mov
xchg
sub
test
inc
xor
xlat
loope
push
int3
jbe
jle
jge
fwait
jo
popa
sub
pop
and
nop
mov
jp
xor
sarl
in
gs
jl
jo
test
loopne
xchg
and
in
cltd
repz
outsb
and
stc
lods
cmp
mov
mov
and
pop
cmp
scas
push
mov
mov
mov
es
shrb
sub
jecxz
mov
gs
sub
pxor
cmc
mov
xchg
ffreep
fstpt
call
push
lret
pop
dec
adc
cmp
pop
icebp
mov
add
lahf
fwait
push
movsl
clc
lods
clc
div
add
add
faddl
cmp
lds
rcrb
xor
adc
int3
call
or
rcll
ds
movsb
mov
cmp
mov
sub
mov
pop
jae
insl
cmp
pop
test
cmc
std
mov
out
xor
stc
xchg
shlb
sbb
fdivs
fldcw
insb
stos
push
mov
cmpsb
cmpsb
ret
mov
sub
mov
add
xchg
int
pop
pand
sbb
jo
xchg
push
mov
fists
inc
orb
xchg
ljmp
mov
adc
cs
cmp
out
lods
jmp
sub
cmpb
sbb
in
jnp
fildl
dec
cmp
adc
ret
loope
dec
jp
mov
jle
mov
aas
fs
adc
pushf
cmp
mov
out
ss
out
cld
mov
xchg
rorl
outsb
xchg
pop
xor
push
push
sub
and
xor
mov
aaa
cltd
lock
cmp
popa
and
xor
or
les
jp
idivb
hlt
or
cmc
pop
sbb
adcb
xor
or
out
sbb
insl
sub
les
cmpsb
ljmp
push
rcrb
imulb
clc
addr16
pop
jae
pop
pop
dec
mov
mov
outsb
mov
lea
cmp
outsl
repnz
flds
pop
or
cmp
insl
jg
mov
and
xchg
rorl
push
cmc
push
fadd
push
clc
or
jo
pop
pop
js
sub
mov
adc
sarb
lret
dec
loopne
ret
adc
test
xchg
adc
rclb
xor
pop
fcmovnb
mov
roll
loop
sti
sbb
xchg
dec
std
jo
int3
aas
std
aam
imul
mov
addr16
or
imul
mov
and
int3
fisubs
test
int3
jl
add
sub
outsl
inc
pop
inc
mov
rcll
cs
and
enter
inc
fsubrl
hlt
dec
jae
xchg
arpl
mov
xlat
icebp
jno
loope
pop
pusha
fsubrs
xor
adc
push
insb
fcmovne
sbb
dec
xrelease
mov
jl
fmuls
loopne
femms
jecxz
inc
sub
push
pop
mov
pop
loop
into
sub
outsl
cmp
shlb
sbb
inc
add
es
xchg
pop
cmp
lods
lret
rcll
std
mov
mov
pop
xor
xor
popf
lret
adc
cmp
mov
cwtl
xchg
fwait
cmpsl
sub
in
inc
sbb
mov
andl
mov
loope
mov
add
or
shlb
into
popa
xchg
xchg
test
rorb
xor
cli
hlt
and
out
dec
and
jns
repz
cmc
mov
jle
xchg
jnp
sbb
aad
fcmovnb
push
mov
or
fldt
cmpsb
repz
rcrl
shll
xchg
jecxz
ja
dec
testb
cmp
outsb
jno
les
cli
adc
shrl
xor
push
push
mov
lock
ja
push
jbe
jns
movsb
movsl
ret
dec
shlb
xor
idiv
popl
lods
call
pop
mov
cltd
fmuls
sbb
sub
int3
stos
mov
dec
pop
leave
xorb
add
xor
cmp
sahf
mov
and
push
adcb
and
jns
clc
add
pop
sub
cs
pop
scas
test
mov
mov
jecxz
inc
push
push
cmpsl
pop
cmpsb
into
fcompl
lahf
repnz
inc
das
in
ss
mov
dec
xchg
lock
enter
pop
add
aaa
mov
jecxz
dec
add
sub
cmpsl
dec
jg
insl
ret
in
dec
in
xorb
ret
mov
lods
or
jne
loop
pop
cmp
and
xor
add
repz
dec
hlt
test
jle
mov
fsubrl
jnp
or
jne
cmp
test
mov
xchg
hlt
out
stos
popf
push
mov
loop
pushf
mov
lea
inc
xlat
aas
into
aam
adc
xor
jle
mov
lahf
out
pop
data16
xchg
pop
ret
mov
je
xor
dec
imul
xor
addl
cmpsl
int3
outsb
cltd
xor
mov
lds
cmp
adc
add
xchg
sahf
pop
jmp
push
lods
mov
ja
xor
ss
in
push
test
push
imul
or
rclb
xor
jb
mov
adcl
loop
in
sahf
loop
add
mov
icebp
lock
addl
adc
sbb
in
sbb
mov
rol
mov
dec
adc
int
in
jo
in
lock
and
das
jae
enter
out
pop
repz
addr16
loop
inc
fdivrl
pop
mov
ret
les
clc
mov
rorl
mov
outsb
outsb
fidivrs
mov
sub
sub
pop
loopne
aam
inc
pop
outsb
sahf
mov
mov
arpl
adc
jmp
bound
in
jno
lods
das
ds
popf
cld
data16
push
cwtl
arpl
inc
and
push
xchg
rcll
cmp
imul
cmpsl
arpl
sahf
aaa
xchg
loop
ret
inc
in
jae
cs
nop
int3
pop
or
xchg
cmp
jbe
fcoms
movsl
and
mov
pop
adc
cmp
sub
fistl
pop
cmp
pop
dec
add
test
xlat
push
dec
mov
jne
divb
sahf
js
out
rcrl
cltd
je
rolb
xchg
std
pop
not
bound
and
jecxz
je
or
test
ja
inc
pop
push
loop
mov
test
jle
lahf
adc
mov
and
xchg
and
sbb
push
or
sub
pop
jb
adc
xchg
out
fimull
push
leave
rorl
neg
adc
push
push
mov
add
stc
push
adc
mov
mov
push
repz
std
jge
bound
xchg
mov
out
shll
nop
adcl
inc
sub
inc
xchg
and
xor
adc
psubb
or
lcall
rolb
push
call
add
xor
sbb
or
pop
xor
xor
aas
push
xlat
mov
push
cli
cmp
pop
pop
add
sbb
jno
data16
jl
daa
xor
adc
cld
lods
xchg
xlat
arpl
popa
leave
inc
lcall
sub
je
js
scas
test
and
and
iret
sub
lods
iret
fimull
cmp
ret
cmp
movsl
jp
adc
pop
xchg
add
das
mov
mov
or
mov
mov
and
cmp
sbb
cmp
jle
lods
push
jecxz
lcall
insl
xchg
pusha
out
iret
jb
add
into
pop
scas
addr16
iret
cs
xor
popa
int3
je
mov
xor
sub
sub
add
mov
sub
in
cld
and
inc
cmp
shl
add
pop
or
push
imul
and
repnz
gs
popf
fnstcw
dec
and
fiaddl
adc
arpl
aas
sbb
jbe
fisttpll
fucomp
mov
out
xorl
lds
lret
push
cmp
hlt
dec
inc
add
xor
mov
sub
cmp
and
adc
sbb
insb
lret
lahf
imul
add
mov
pop
lock
jno
inc
adc
js
inc
xchg
xor
push
pop
rcrl
sti
pop
aad
out
cmpsl
test
aad
in
fsubrl
jns
dec
loope
adcl
and
xor
fnstcw
mov
in
stc
cmp
dec
dec
or
nop
xchg
testb
out
sub
ds
dec
fcomps
lds
out
mov
mov
xchg
lret
imul
lock
jb
jne
nop
cmp
aas
sbb
lock
adc
push
adc
mov
inc
xchg
popa
mov
mov
inc
outsl
mulb
xor
and
mov
gs
sbb
daa
sbb
js
out
jle
pop
clc
out
test
cmc
lcall
hlt
lea
ret
imul
jg
test
call
inc
call
jae
iret
mulps
jno
insl
push
adc
fdivrl
sbb
mov
fwait
insb
or
out
outsb
mov
push
xchg
pushf
cmp
lods
cmp
psraw
hlt
std
mov
movsb
icebp
notb
daa
in
cltd
mov
pop
sbb
int3
xchg
lret
jne
adc
js
mov
loopne
les
stos
mov
sti
adc
pop
cmp
jo
js
xor
js
cli
adc
arpl
lret
add
addb
rcrb
call
aad
jl
mov
xchg
dec
or
rcr
btrl
inc
es
loope
jne
sbb
fisubl
sbb
adcl
sub
cmp
push
pop
jnp
jp
cwtl
aaa
mov
mov
dec
call
inc
fdivl
test
mov
push
or
test
das
popf
push
ljmp
sti
lods
inc
dec
jnp
xor
jge
mov
sub
jb
sub
cmpsl
xorl
jnp
test
mov
push
out
sahf
sub
push
inc
jg
sarl
nop
jae
fadds
mov
cmpsl
jmp
cwtl
xchg
pop
in
out
aam
hlt
push
lret
leave
xchg
xchg
mov
mov
cwtl
hlt
xchg
add
sbb
mov
cwtl
icebp
add
lods
jmp
repz
out
loop
jmp
bnd
js
ficoml
subb
mov
loopne
add
cmp
je
add
sub
es
loopne
xchg
sbb
xchg
or
mov
popa
loope
mov
dec
outsb
lea
jp
add
mov
xchg
inc
mov
dec
push
in
push
fchs
push
jb
inc
mov
cmp
mov
das
jecxz
mov
xchg
gs
adc
pop
inc
out
pop
mov
jae
movl
in
mov
push
mov
push
into
mov
cmp
or
rcrb
lods
lahf
scas
dec
dec
jno
inc
xor
daa
insl
pop
movsb
test
pop
jmp
mov
subl
mov
bound
lret
aad
dec
int
bound
popf
pop
cmpsb
mov
cli
fistpll
lea
clc
rolb
inc
adc
lock
mov
or
daa
inc
push
outsb
repz
push
push
fs
xbegin
pop
jnp
mov
pop
mov
hlt
jge
cmc
jecxz
mov
sbb
rorb
dec
mov
pop
arpl
push
adc
cltd
popf
cwtl
push
and
mov
cld
out
sbb
gs
pop
clc
jbe
scas
xor
das
mov
pop
sbb
cwtl
hlt
sarb
mov
push
inc
cmpsb
mov
shlb
sarl
pop
push
push
xchg
sbb
cmc
cmc
ficomps
popa
enter
jb
sti
inc
fistpll
movsb
out
mov
loope
pop
push
lahf
ret
xchg
and
mov
sbb
les
in
and
mov
xor
sti
sbb
cmp
cmp
mov
dec
enter
stos
inc
imul
cmpl
clc
dec
or
pop
mov
inc
rcrl
xchg
cld
or
sbb
push
mov
adc
mov
movsb
add
push
hlt
pop
or
mov
jle
cmpsl
adc
shll
sahf
addr16
pop
dec
sbb
lret
cmpsb
repz
cmp
inc
push
fists
push
dec
and
mov
dec
mov
jmp
imul
xchg
pushf
xor
shr
iret
pop
fisubrs
dec
inc
push
dec
push
gs
sub
pop
loop
mov
test
movsl
ljmp
pop
mov
insl
push
xor
in
push
movsl
mov
daa
stc
mov
inc
mov
pusha
mov
sub
sbb
sbb
sahf
bound
and
out
pushf
jle
mov
test
decl
popl
push
loope
fadds
dec
and
adc
mov
push
cld
clc
jmp
push
sbb
fisubrl
loopne
adc
mov
push
divl
mov
mov
cs
fnstsw
and
xlat
ljmp
scas
pop
aaa
and
sub
pop
jmp
fadd
push
mov
inc
mov
add
xchg
mov
das
mov
xchg
jns
jge
sub
cmpsb
ret
or
add
jnp
fldl2t
test
mull
sub
in
xchg
test
lahf
sbb
cmp
xchg
jg
or
aam
push
enter
or
mov
lret
pop
popa
call
into
mov
stos
imul
push
out
mov
stc
daa
aam
mov
mov
jns
leave
ret
pop
xor
adc
or
mov
mov
outsb
outsl
adc
or
pop
jge
pop
jmp
push
mov
bound
adc
jbe
and
jp
movsb
sub
adc
test
mov
subl
mov
pop
jo
int3
or
fisubs
aaa
add
daa
rorl
lret
popf
scas
clc
lret
cld
mov
in
pusha
and
fsubrs
push
es
mov
adc
xchg
adc
testl
movsl
lcall
lods
push
jcxz
jnp
mov
adc
test
cmp
cli
loop
mov
jmp
into
js
inc
insb
in
lret
adc
push
sbb
fwait
cli
push
or
or
cmpsb
sbb
adc
loope
arpl
es
lcall
out
pop
sbbb
mov
cwtl
adc
fdivrl
add
jno
hlt
je
sti
dec
lea
faddl
mov
nop
in
cwtl
jo
lea
iret
cmpsl
stc
into
xchg
xchg
push
add
andb
in
inc
lds
cmp
xor
mov
mov
test
pop
jne
stos
jge
add
or
or
movsb
dec
pop
mov
mov
enter
cli
mov
test
inc
cmpl
dec
pop
shl
nop
xchg
xor
and
and
ret
repz
add
mov
inc
in
fsincos
ljmp
dec
xchg
lods
inc
fbld
bound
mov
ret
das
movsb
push
cwtl
shrl
xchg
cltd
pop
js
lcall
enter
rolb
or
pop
push
mov
sbb
stos
cs
inc
test
in
inc
icebp
mov
mov
sbb
fiadds
dec
addr16
andl
lds
xchg
subl
lret
pop
and
sbb
or
and
mov
push
push
cmpsl
aam
ret
push
push
bound
stos
cmp
jge
push
mov
inc
stc
mov
cmp
sub
xchg
xchg
rclb
cli
add
jae
fcoml
aam
push
sub
or
movsl
cs
add
push
fsubrs
jne
es
xor
mov
dec
sti
cmp
popa
test
out
jne
fstps
and
adc
pop
test
push
subl
jmp
pop
pop
and
sarl
in
insb
cwtl
dec
dec
cs
xor
into
inc
adc
jne
push
test
mov
pushf
sbb
shl
loope
clc
sbb
pop
lea
mov
rorl
inc
scas
sub
ret
jbe
sbb
aas
adc
daa
mov
push
dec
inc
call
je
aaa
pop
jb
test
and
imul
sbb
push
push
inc
loopne
or
fcompl
inc
mov
arpl
je
sub
cld
push
sbb
xchg
mov
jns
out
stos
mov
std
out
inc
leave
lea
fmull
popf
fldt
in
and
lods
mov
out
shll
lret
and
mov
dec
loopne
ds
push
lret
arpl
sbbl
mov
add
cmp
pop
or
dec
push
stos
inc
rcl
dec
adc
dec
dec
dec
mov
cmp
jle
pop
popa
mov
and
icebp
test
mov
jg
push
in
cli
mov
adc
gs
jmp
sbb
jns
stc
mov
jno
fisttpl
pop
pop
mov
in
lcall
or
push
adc
mov
cmpsl
loop
push
sti
insl
lds
jg
or
aad
lcall
in
das
scas
lret
pop
xor
stos
iret
pop
or
jle
aaa
pushf
push
mov
test
les
push
pop
sbb
jge
movsl
loop
sbb
or
sub
push
xchg
jl
lahf
aas
fmul
cmc
sub
xor
sahf
aad
jmp
stos
mov
lods
sbb
pop
cwtl
cmp
or
loope
jbe
push
lahf
adc
xchg
and
test
cmc
inc
pop
insb
pop
mov
mov
or
dec
ror
jecxz
push
add
dec
or
scas
pop
movsl
adc
xor
lds
std
cmp
notl
insl
dec
sbb
or
and
fsubrs
jno
dec
jb
mov
call
fbld
mov
xchg
add
lods
or
or
and
dec
ret
xchg
mov
xchg
cli
ret
fdivs
test
jge
dec
ljmp
sbb
repnz
push
out
inc
jl
call
stos
sbbb
out
mov
icebp
loope
imul
mov
mov
fisubrl
xor
add
add
inc
jecxz
mov
dec
lret
bnd
sbb
add
pop
fimuls
inc
add
mov
adc
shll
inc
lods
cmpsl
sbb
mov
out
jp
sub
mov
adc
push
xchg
iret
imul
xchg
adc
iret
cltd
dec
pop
ss
push
in
mov
in
jecxz
jno
adc
in
icebp
adcl
mov
mov
xor
iret
and
jo
mov
lods
add
test
lods
sarl
int
dec
mov
ret
ljmp
xor
cmpsl
test
mov
data16
stos
mov
pushf
mov
int3
fucomp
sbb
jbe
repz
xlat
andb
mov
xor
and
or
decl
scas
push
cmp
fildll
mov
das
mov
out
or
xchg
fistpll
mov
stos
ret
cmpsb
pop
ja
fcmovnu
add
sarl
jle
bnd
in
pop
test
iret
loop
push
lcall
lods
mov
pusha
aad
sti
dec
stc
sbb
daa
xchg
sbb
or
cmp
fistl
adc
dec
mov
sarl
jge
ret
mov
mov
insl
push
cmp
gs
fwait
add
inc
cli
dec
jbe
fcmovnu
sbb
out
lods
xchg
dec
imul
adc
shlb
add
jg
dec
jp
mov
mov
shrb
sarb
iret
cmpb
and
rcll
xchg
sbb
pop
dec
add
cli
pop
or
fwait
cmp
dec
xchg
mov
mov
aad
mov
pop
mov
xlat
push
clc
data16
jb
sbbb
repz
in
pop
ret
add
shrb
aam
inc
push
jg
xor
stos
clc
push
or
mov
adc
sbb
sub
inc
dec
movsl
fsub
dec
pop
stc
iret
int
add
jl
cltd
cmp
aam
push
in
adcl
insb
or
imul
xchg
fwait
imul
hlt
cmpl
or
pop
mov
mov
xor
rcr
mov
inc
mov
arpl
jbe
roll
iret
cmp
arpl
rorb
out
mov
cmpsb
addr16
icebp
popf
jge
pop
je
push
popf
shr
int3
mov
push
or
ja
and
mov
loope
or
cmpl
repz
jne
xchg
in
xor
int3
pop
cli
ret
mov
outsb
push
lods
or
outsl
jb
nop
xchg
jns
fiaddl
into
mov
jnp
imul
out
xlat
sub
outsl
jae
in
mov
sub
inc
lds
andl
pxor
mov
out
pop
push
mov
add
mov
addr16
scas
cmp
push
stc
stos
notb
mov
test
inc
cmp
jae
xor
inc
imul
push
push
aam
xchg
inc
mov
incb
pop
mov
ds
pusha
adc
push
push
int3
cmpsb
pop
pop
sub
je
aam
test
dec
lcall
test
pop
jl
shlb
mov
xchg
movsb
or
mov
shll
scas
jne
shll
mov
jg
fisttps
mov
hlt
cmp
roll
sub
sub
int
pushf
pop
pushf
scas
andb
cmpb
jmp
icebp
loop
cs
cmp
xchg
and
popf
mov
and
clc
and
sub
or
or
pop
mov
and
mov
mov
pop
push
jne
stos
push
xor
nop
mov
out
add
push
add
add
mov
fimuls
adc
inc
sahf
cli
cmp
paddusb
mov
dec
mov
push
or
pop
jp
enter
rcll
cmpsb
test
push
sub
cmpsl
lret
into
pop
decb
loop
add
pop
xlat
jnp
xlat
mov
test
out
push
mov
mov
in
iret
xor
fcompl
out
roll
dec
fdivl
sbb
jmp
add
xchg
inc
test
push
cmp
aam
out
fiaddl
movl
leave
lahf
xor
enter
cmp
jl
inc
in
cmp
stc
xrelease
xchg
in
stos
std
sub
mov
mov
and
jg
nopl
clc
push
daa
pusha
cwtl
hlt
add
mov
sahf
mov
test
push
repz
sbbl
jo
sub
fwait
mov
outsb
js
mov
rcl
in
push
xor
loop
jmp
subl
popl
inc
out
scas
jns
push
sbb
mov
mov
jne
xor
ficoml
xchg
aad
divb
xor
xor
adc
cmpb
push
aas
pushf
jmp
lods
sbb
sub
pop
dec
test
mov
outsl
lods
int3
adc
iret
add
add
add
rolb
push
xchg
mov
push
aam
lahf
or
test
test
mov
mov
imul
lret
into
ret
repz
lods
les
ljmp
test
xor
sbb
bound
inc
dec
xor
hlt
mov
addr16
mov
xlat
test
ret
je
out
push
cs
daa
jle
jne
sub
lret
sti
add
lcall
dec
xchg
adc
inc
jge
inc
push
into
jg
fwait
shll
sbb
imul
ds
xchg
mov
outsl
repnz
in
inc
pop
sbb
or
add
rclb
mov
add
movl
and
push
iret
fcmovbe
mov
cmpsl
jle
jge
xor
cmp
jnp
arpl
jnp
in
and
pop
rol
in
stc
pop
mov
fmul
add
cltd
test
or
in
ds
pop
aam
das
xor
dec
or
cmp
ss
push
xchg
stc
push
movsb
pop
xchg
jp
rcrl
cmpsb
insb
mov
loop
pop
jo
mov
lret
faddl
iret
ss
mov
fbld
js
or
xchg
mov
dec
xchg
lcall
or
adc
add
daa
fstl
or
xor
fidivrs
lea
scas
mov
push
jle
popf
idiv
roll
inc
adc
mov
push
cmp
loopne
scas
jnp
xchg
mov
lcall
adc
leave
les
pop
repz
sub
movsb
arpl
sub
in
cld
or
push
lea
push
cmp
das
jns
jmp
cmp
jne
adc
adc
xchg
sbb
sbb
rol
mov
and
dec
aas
push
cmp
lods
scas
lea
sbb
xchg
mov
cmp
sbb
mov
aam
inc
cwtl
insb
out
popa
xlat
daa
inc
fimull
pop
dec
xchg
jo
nop
cmpsb
bnd
adc
stc
lds
jle
test
ds
scas
mov
inc
or
add
pop
cmp
jmp
sbb
sub
imulb
xor
or
inc
mov
scas
mov
jmp
lcall
ret
mov
cmc
cmp
aad
mov
mov
sbbl
int
or
and
in
std
mov
mov
clc
or
loop
push
dec
lds
mov
ja
add
push
xor
stc
rcll
dec
mov
faddp
pop
testl
aaa
ds
addl
jp
or
inc
idivb
stos
cmp
sub
int3
nop
add
stc
sbb
and
in
push
pop
jnp
je
xchg
leave
icebp
arpl
loopne
insb
lret
cmp
aaa
mov
lods
lahf
out
mov
out
xchg
jns
push
nop
pop
cwtl
push
xor
mov
adc
cltd
mov
fnstsw
add
pop
sbb
sbb
pop
push
ret
insl
imul
ret
pop
sbb
and
roll
dec
xor
mov
dec
push
lock
sub
mov
xlat
cltd
push
push
push
lgs
lcall
test
lock
jmp
loop,pn
adc
dec
nop
or
push
repnz
jp
addr16
sub
lods
push
andl
sbb
rcll
sbb
jne
int
cmpsb
adc
mov
push
sbb
mov
popf
sbb
pop
and
test
stos
out
add
cmp
sbb
sbb
cs
out
mov
dec
adc
inc
lret
cmp
inc
adc
lcall
mov
enter
iret
mov
push
adc
dec
xor
loope
enter
xor
jb
mov
xor
and
sti
test
scas
std
add
fisubrs
mov
lods
mov
cmc
ret
mov
mov
test
jg
enter
mov
jns
xor
sub
sub
shrb
rcrl
lods
jp
sub
cmp
int3
mov
pop
pop
int
xchg
inc
stos
std
add
outsl
dec
int
daa
and
jne
sbb
int3
sub
shll
dec
mov
inc
adc
mov
add
aas
push
inc
mov
popl
in
inc
outsb
or
js
into
shrl
mov
fsts
cmp
xchg
push
mov
insb
and
icebp
xchg
out
daa
mov
fcom
push
stos
cmp
jge
movsb
leave
sarb
fcompl
scas
jmp
fbstp
imul
loop
inc
push
push
aaa
mov
jmp
cmp
ss
mov
insb
xor
xchg
sahf
push
fs
fwait
push
and
cltd
dec
push
mov
dec
outsb
ror
popf
out
scas
fidivrl
sub
loope
push
pop
out
es
add
jmp
mov
inc
dec
push
adc
inc
mov
jg
push
pop
neg
sbbl
push
dec
mov
iret
aad
shl
inc
fcoms
bound
xor
push
xchg
xchg
push
mov
inc
jb
std
mov
test
mov
jbe
xchg
ret
mov
add
push
push
dec
or
mov
orl
jl
push
inc
add
icebp
repnz
ret
jl
mov
out
ja
or
fisubs
sahf
popf
xor
add
addb
fs
jl
pop
adc
mov
sti
and
pop
les
xchg
and
or
xchg
addr16
adc
adc
pop
jne
bound
mov
mov
mov
pop
cmpsl
xor
mov
in
mov
sbb
mov
xchg
adc
xor
sub
cltd
mov
out
push
mov
cmc
inc
mov
jne
shrb
int3
adc
stos
movsb
and
in
test
add
fwait
sbb
mov
pop
ljmp
fwait
int
push
inc
enter
sbb
mov
sub
int3
or
mov
inc
push
mov
rorl
cmp
insl
rcrb
sub
divl
xor
lods
adc
les
mov
xchg
lahf
sbbb
jp
je
mov
mov
in
sbb
lock
ret
or
in
jns
loop
mov
sub
cmp
sbb
rcrl
stos
jmp
push
vunpckhps
cli
shrl
push
leave
stos
flds
jo
push
sbb
pop
push
cmp
movsb
or
pop
xor
dec
loop
pop
cmp
pop
push
xor
jne
ret
adc
dec
dec
jl
pop
inc
ljmp
imul
xlat
movsb
incl
sbb
inc
add
popl
sarb
mov
mov
lock
out
clc
inc
in
dec
jns
loop
int
or
addr16
sub
add
pop
into
sub
dec
imul
rcll
sub
inc
fiaddl
inc
cmp
ljmp
es
sub
out
movb
mov
add
xchg
mov
and
ss
ret
stos
or
push
popf
aam
dec
cmp
faddl
shlb
jns
pop
jnp
jecxz
mov
xlat
sbb
pop
jb
dec
sbb
mov
icebp
inc
push
mov
shll
adc
push
shl
pusha
add
inc
sbb
daa
cmp
js
mov
scas
xor
mov
mov
imul
aas
mov
or
orb
jp
daa
aad
jo
pop
mov
jno
lret
iret
or
jl
fiadds
lcall
outsl
dec
add
adc
adc
or
cmpsb
cmpl
mov
sbb
test
call
popa
cmp
inc
push
shlb
or
mov
mov
mov
xchg
shrb
mov
pop
xchg
sti
inc
cwtl
out
incl
and
data16
jo
adcl
lods
sbb
lahf
ds
lea
aaa
mov
mov
mov
dec
bound
es
cmp
inc
jge
inc
es
adc
nop
push
mov
test
mov
icebp
sub
loope
mov
pop
iret
cs
jecxz
inc
js
pop
inc
cli
inc
push
pop
sbb
test
stc
into
and
push
cmpsb
cmc
lea
in
push
xchg
or
shll
dec
les
fucomi
inc
push
push
mov
jno
sahf
mov
gs
fldcw
xor
sbb
mov
int3
or
jg
leave
adc
aam
stc
mov
test
xor
mov
push
notl
jp
lock
je
cwtl
lods
fwait
adc
ljmp
ja
pop
push
sub
jbe
fisubrs
repz
lcall
mov
mov
mov
out
scas
jnp
add
sbb
movsl
or
enter
xchg
and
out
adc
push
aas
lahf
loop
ds
imull
test
add
add
or
out
push
add
popf
nop
push
ds
or
cmp
aam
cld
ja
out
jl
notl
inc
ds
sbb
sti
decb
xor
mov
cmp
sahf
mov
ror
mov
insb
in
sbb
mov
addr16
mov
lret
sar
xor
mov
lcall
jno
into
sbb
aad
setb
adc
cmpsb
rcl
sub
and
and
rorb
imul
test
aaa
sbb
rclb
inc
mov
jae
int
push
std
dec
add
addr16
arpl
cmp
sub
jns
fcompl
fdivrs
cmp
pop
xor
mov
xlat
aaa
dec
jae
xchg
or
leave
mov
test
lock
es
lret
pop
fmul
mov
xchg
idivl
cmp
out
jge
jmp
mov
mov
sti
addr16
icebp
aam
inc
jns
mov
or
testb
or
sub
aaa
lcall
push
dec
push
cs
lret
push
mov
cmp
fcmovbe
xor
enter
fmul
sub
add
lods
or
mov
pop
pop
idiv
mov
mov
lds
movsb
arpl
cmp
inc
cmp
cmp
repz
repnz
jle
push
add
pop
xlat
cld
lcall
sahf
scas
cmp
lods
mov
aam
addl
mov
xchg
aam
std
or
mov
sbb
out
rclb
jb
push
xchg
dec
js
fistpll
mov
push
cmpsl
inc
jb
push
and
push
mov
push
mov
mov
mov
imul
lret
loop
scas
sbb
push
and
pop
or
ja
into
sti
jne
loope
jmp
or
add
rol
lods
out
shlb
push
inc
lret
push
jp
leave
subl
mov
dec
inc
sbb
jg
into
cwtl
jge
call
mov
inc
leave
fsubs
pop
leave
mov
jle
sub
movsw
pop
test
push
jno
xor
fsts
mov
pushl
push
cmp
iret
je
mov
movsl
jae
xor
cmp
dec
aad
ljmp
mov
xchg
rorl
leave
out
stos
gs
push
out
add
jp
inc
adc
mov
loop
pop
inc
xchg
xor
int3
in
jmp
and
mov
xor
push
int3
jnp
adc
pop
cmp
std
pop
rcl
pushl
sbb
xor
mov
stos
iret
in
cmp
jmp
xchg
mov
dec
pop
fidivs
pusha
jae
xor
or
int
push
nop
cmp
dec
mov
fdivrl
inc
adc
idiv
push
mov
push
fidivrl
lock
je
add
cmp
dec
inc
aaa
mov
inc
push
adc
cltd
inc
pusha
addl
lea
movsb
pop
pop
std
out
sbb
sbb
jmp
xchg
mov
jg
pop
cli
rcrb
and
cmp
out
inc
mov
add
push
dec
dec
pop
sub
pop
scas
scas
scas
xchg
out
aas
rcr
inc
or
orl
shr
jno
ffree
addl
shl
mov
sub
add
orb
sbb
hlt
dec
sub
movsb
xlat
sti
das
test
push
jno
mov
sbbl
pop
pusha
pusha
bound
cmp
push
sarl
in
mov
xchg
outsb
push
cmp
dec
hlt
cmp
sub
cmp
aad
popa
push
icebp
jle
lock
and
mov
je
mov
fisttpll
xchg
xorl
push
mov
in
inc
or
pushf
jmp
out
xchg
leave
sub
sub
imul
pusha
push
pusha
jbe
lcall
pop
nop
xchg
ret
loop
es
fcoml
shrb
cmp
out
cmpsb
cmp
sbb
mov
jnp
aad
shll
cmpsl
xchg
sbb
or
lock
xor
mov
sub
xor
dec
dec
push
mov
sbb
mov
repz
imul
cwtl
xchg
popf
mov
sbb
out
sbb
xchg
scas
xor
sbb
adc
loop
push
leave
out
xorb
daa
mov
movsl
mov
imul
cmpsb
fldcw
inc
cmp
aas
ja
mov
jecxz
add
int3
mov
adc
adc
jg
jb
adc
or
mov
jle
add
lahf
push
enter
inc
sub
dec
das
repnz
arpl
arpl
mov
stos
and
adc
dec
cmp
imul
rcrl
xor
push
push
lahf
cltd
xlat
dec
pop
les
out
mov
cmp
je
in
ud0
lds
enter
xchg
jl
cmpsl
jmp
fcmove
ja
mov
scas
push
int3
ret
pop
cltd
cli
cmpsb
fidivs
in
pop
clc
push
mov
mov
sbb
clc
aam
add
cmp
cli
mov
call
and
add
inc
dec
cli
xchg
cs
ljmp
iret
push
pop
xor
orb
mov
cmpl
inc
in
xor
daa
lea
xchg
dec
loop
dec
or
or
lea
jno
mov
push
daa
dec
inc
and
mov
andb
cmp
and
xor
xchg
ljmp
dec
ret
xor
push
xor
ljmp
jmp
xor
stos
pushf
add
aaa
insl
mov
xor
adc
nop
cs
sub
push
loope
push
cmp
rorl
ja
lea
pop
xor
imul
out
or
push
lret
daa
ljmp
xchg
cmpsb
mov
ljmp
out
mov
xor
or
cmp
jmp
xchg
jle
push
iret
pop
pop
lret
sub
jge
std
inc
aas
sti
sub
mov
pop
nop
inc
cmp
ficoms
les
jle
es
das
cwtl
mov
sbb
call
mov
ja
in
sbb
xor
jecxz
dec
out
adc
sarl
sahf
add
sub
in
out
pop
push
push
push
push
pop
int
add
mov
push
or
adc
test
dec
mov
sarl
fdivrs
insl
flds
jl
adc
mov
pop
loopne
sub
cltd
test
add
iret
push
or
xor
pop
cmc
xchg
mov
sbb
sub
sbb
insl
dec
dec
push
xchg
xor
jge
out
cmp
push
or
cld
xor
nop
lods
test
adc
xchg
repz
out
cmovl
ds
add
jg
test
je
aad
ret
dec
ret
pop
leave
pop
in
ret
ss
gs
sbb
mov
outsl
insl
cs
inc
ret
sbb
stc
inc
jl
push
stos
xor
jecxz
add
aad
or
adc
daa
push
fld
or
int3
or
jle
cmc
in
sub
add
inc
xchg
inc
xchg
arpl
sub
add
and
dec
xor
push
sbbl
pop
in
sbb
stc
pusha
sub
popf
popf
add
pop
xor
add
fistps
out
xor
cmpb
inc
test
mov
mov
mov
adc
pop
xor
mov
inc
ja
iret
cmp
mov
or
imul
pop
cmpsb
mov
pop
add
test
xchg
mov
insl
es
and
adc
pushf
sahf
inc
sub
push
sbb
and
test
aam
lock
and
imul
add
das
pop
imul
loope
jne
jae
pop
movsl
ss
cmp
js
ret
cmc
iret
shll
cmp
inc
inc
push
sbb
mov
sub
jg
lds
jo
in
std
pop
mov
adc
loope
mov
cmpsl
cld
dec
jb
inc
push
std
sub
fsubl
sti
inc
xchg
sarb
pop
dec
inc
jns
cltd
ja
bound
pusha
aad
fwait
sbb
std
sub
cs
lahf
pop
and
adc
xor
jecxz
xlat
push
fnsave
push
xchg
inc
adc
fsubrs
repnz
mov
and
cmp
movmskps
push
xchg
ljmp
in
xchg
mov
je
in
mov
sub
je
lock
in
and
pop
sub
sbb
fs
pop
adc
loope
mov
leave
test
mov
xchg
loopne
lcall
cli
rcrl
mov
cmp
cmp
mov
repz
sub
cwtl
xorb
das
mul
ss
cmpsl
into
xchg
pop
mulb
aad
ret
cli
mov
arpl
movaps
and
xchg
test
jl
inc
icebp
repz
push
std
cmp
mov
mov
in
cwtl
pop
out
sub
sbb
ds
popf
add
mov
cmpsb
ss
xchg
sub
fistpl
xchg
mov
les
xor
repz
lock
mov
shrb
push
cmp
lds
cmc
ljmp
inc
push
subb
pop
shl
xchg
scas
cmp
or
push
sub
jmp
negl
test
and
or
and
inc
inc
in
xchg
shl
cmp
mov
fstp
sbb
pop
cmp
mov
pop
push
dec
out
sbb
lds
lcall
add
stc
mov
icebp
out
cmp
dec
adcl
xchg
cmc
sub
aam
cmp
add
into
divl
lds
cli
js
jg
and
xchg
fdivrs
xorb
mov
dec
xor
sbb
cmp
fisubl
outsl
insl
loop
mov
xchg
xchg
andl
das
and
lods
cmpsb
or
jb
jp
dec
dec
movsl
mov
rcll
movsl
cwtl
inc
pushf
loopne
dec
inc
dec
sbb
push
push
add
in
push
xor
mov
rcrb
jl
into
icebp
push
xchg
stos
push
mov
rol
sbb
mov
addr16
xor
scas
xchg
push
inc
mov
and
pop
inc
cld
inc
xchg
inc
mov
push
loop
sub
sti
out
pop
aas
cmc
xor
dec
aam
pop
js
daa
jbe
stos
je
fnstcw
push
imul
sbb
jo
cmp
loopne
daa
inc
rcrb
fisubrl
xchg
push
and
in
push
pop
pushf
cltd
pop
cli
sbb
adc
or
adc
ja
add
adc
test
out
popf
xchg
negb
das
sub
sahf
dec
push
mov
mov
lea
mov
in
outsb
and
insl
cli
stos
inc
test
push
push
jp
push
pop
addr16
into
enter
in
ss
adc
scas
enter
mov
cmp
les
mov
movsb
cmpsb
cmp
pop
test
mov
mov
sub
push
mov
push
xchg
cltd
sub
and
xchg
mov
sbb
add
jl
pop
aas
rolb
mov
ror
xchg
mov
xchg
add
xchg
sbb
leave
out
addl
movsb
pop
incb
scas
insl
sub
out
mov
test
and
jp
es
mov
inc
jnp
sbbl
pushf
push
mov
rcrb
jle
popf
push
xlat
and
sahf
test
mov
xlat
mov
sbb
divl
sub
xchg
jle
in
imul
insb
push
inc
xchg
pop
loope
sbb
nop
mov
xor
js
lret
roll
adc
js
sbb
mov
adc
pop
jnp
sbb
inc
mov
mov
cmp
mov
into
rcrb
xor
jecxz
sahf
xor
sbb
mov
push
mull
int3
icebp
xor
mov
pop
test
xor
adc
mov
fldl
pop
fsubrs
xchg
repnz
mov
cmp
xor
gs
inc
add
pop
sub
outsb
mov
jmp
pop
push
in
ljmp
sub
hlt
jmp
aas
jecxz
push
mov
add
and
shrl
int3
xchg
cmp
sbb
and
testl
add
adc
clc
dec
mov
sahf
in
xor
fimuls
mov
and
aad
dec
pop
or
xor
mov
push
loopne
inc
fcomip
aad
rolb
adc
add
hlt
mov
add
popf
repz
sbb
lret
out
inc
jg
cmpsl
sub
shl
fisubrs
dec
lahf
daa
cmp
fs
mov
sub
push
cmp
test
push
mov
clc
mov
add
test
xchg
cmp
xchg
sbb
cli
fimuls
and
adc
jnp
pop
stc
sub
add
fimuls
or
jbe
sub
movsb
sbb
pop
insl
adc
jne
fistps
aam
movsl
ss
fs
push
inc
mov
xlat
popw
push
loope
inc
test
rolb
push
jecxz
leave
xchg
adc
add
jmp
add
cli
aas
or
dec
enter
jp
js
push
fs
cs
arpl
cwtl
sbb
cltd
cmc
pop
ds
inc
mov
pop
inc
push
pop
xor
and
and
stos
aas
xchg
push
adc
ret
mov
mov
scas
les
jo
popf
imul
jnp
stos
and
cmc
push
lret
dec
divb
sbb
adc
cmp
test
push
jb
fdivp
mov
sbb
imul
movsl
hlt
push
mov
add
test
xor
adc
mov
mov
xorb
sarl
imul
adc
mov
dec
fldl
cs
nop
mov
cmp
orb
and
mov
dec
insl
push
jno
outsb
fadds
aaa
sti
or
jmp
inc
stc
dec
sub
pop
adc
and
out
call
pop
stos
jno
adc
outsb
cld
bound
pop
push
mov
mov
pop
xchg
stos
int3
xchg
mov
mov
dec
mov
mov
xchg
loopne
daa
scas
rcrb
mov
movsb
pop
sbb
xchg
or
mov
lret
xchg
and
jne
ret
mov
in
inc
les
loopne
test
inc
addl
adc
fmull
mov
enter
pop
or
sub
cld
pop
xor
sub
jg
imul
push
cwtl
movsl
iret
mov
jo
shrb
popa
nop
dec
jmp
push
mov
jne
ja
xchg
lret
sub
inc
rolb
dec
xchg
int
push
mov
addl
popf
add
jo
icebp
jp
or
insb
push
jp
mov
cmp
sub
in
inc
test
stc
fbstp
cmpsl
add
mov
lods
ret
xor
inc
mov
ret
rclb
sbb
outsb
pop
xchg
imul
cmp
xchg
cltd
jo
add
xchg
mov
outsb
divb
js
decl
loop
add
enter
jb
ret
xchg
bound
flds
negb
out
frndint
and
or
inc
cmp
adc
sub
stc
xchg
jnp
push
and
pop
cmc
mov
mov
cld
mov
movsl
ljmp
jnp
pop
or
ret
xlat
leave
hlt
push
xchg
xor
mov
cmc
xor
scas
movsl
into
push
mov
mov
or
jnp
adc
mov
negb
push
and
inc
sub
jmp
jnp
sub
xchg
mov
add
mov
test
xlat
cwtl
or
sbb
sub
pusha
cli
mov
fbstp
xor
push
jb
clc
pop
cmpsl
nop
and
push
push
adcb
and
mov
popa
outsl
jo
cmp
mov
jp
xchg
xchg
fildll
test
or
cwtl
dec
popa
scas
add
rcl
add
aas
movsl
lds
mov
sbb
aas
shlb
das
lods
or
mov
ljmp
in
andb
imul
outsl
mov
cmpsl
push
or
sub
pop
sbb
cli
loop
call
repz
cltd
push
and
inc
sbb
cmp
movsl
mov
rcrb
mov
sub
stc
push
popf
lods
dec
std
subl
arpl
pop
shll
sti
out
inc
roll
xchg
lret
push
fistpll
jg
fmulp
insl
lock
xchg
xchg
dec
inc
push
ret
push
call
xchg
les
jle
ds
cmc
pop
testl
js
adc
pop
cs
dec
ljmp
push
fs
dec
jno
aaa
push
je
js
jno
lcall
std
lret
lret
mov
push
popa
and
adc
xor
test
push
lock
aaa
sub
hlt
jne
lret
sbb
scas
add
jg
or
stos
das
cli
lret
sti
jg
sbb
mov
mov
add
sub
mov
mov
mov
push
out
mov
cmp
lcall
mov
or
xchg
jp
and
fadds
test
insl
sti
sub
or
hlt
loop
orb
xchg
imul
outsl
lods
std
adc
xchg
sarb
or
add
int
push
addr16
add
push
scas
add
decl
aaa
xor
or
inc
div
jecxz
xchg
pop
and
mov
pushw
and
stc
call
popa
or
inc
cmp
clc
mov
lds
pop
cli
repnz
push
lret
nop
xchg
lods
sbb
rclb
adc
mov
adc
ss
inc
xchg
sbb
push
xchg
sbb
push
dec
ljmp
mov
adc
push
cltd
mov
mov
stos
mov
add
inc
adc
dec
stc
test
mov
das
or
sub
pop
mov
pop
dec
roll
dec
popf
xor
rclb
mov
mov
mov
int
test
pusha
xor
cld
scas
stos
test
adc
roll
cmp
or
add
scas
pop
lea
xchg
lahf
mov
addl
dec
xchg
lret
sbb
xor
jb
lods
ss
add
in
lods
push
addr16
jecxz
scas
roll
call
sub
push
movsb
cmc
icebp
imul
arpl
lods
je
or
test
insl
sbb
in
pop
notb
cmpsb
mov
das
lea
rolb
sbb
adc
clc
repnz
and
ss
sti
cld
push
mov
in
cmp
xlat
cltd
sub
mov
out
pushf
mov
sub
inc
sbb
pop
lret
jnp
cmp
add
xchg
xchg
out
jge
cmp
idivb
leave
cltd
dec
dec
pop
jae
aaa
mov
and
mov
jl
in
jmp
iret
adc
shl
lock
or
mov
ret
jl
jmp
imul
or
ror
out
outsl
insl
rol
cmpsb
or
sti
xchg
shlb
out
mov
push
push
mov
pusha
jle
ss
push
movsl
pusha
lods
lret
aam
jge
mov
cmp
inc
out
fimuls
pusha
leave
add
push
xchg
xor
sbb
cmpsb
adc
mov
jecxz
add
out
xchg
adc
xchg
cmp
push
test
push
push
xor
lcall
xor
xchg
jnp
lods
xchg
daa
jns
dec
daa
push
push
jns
sbb
dec
cmp
adc
jecxz
push
inc
shl
fidivrl
and
sub
adc
mov
jo
xor
jae
cmp
jle
aam
xchg
mov
pushf
out
push
les
imul
js
inc
lret
and
or
xchg
dec
mov
insb
test
sub
sarl
sbbb
push
out
push
aaa
movaps
mov
out
hlt
cmpsl
mov
dec
ret
out
xchg
cmp
sub
jle
and
push
in
pop
cmpsl
adc
sbb
push
aam
inc
scas
mov
mov
pop
mov
inc
lahf
jmp
mov
dec
add
jg
mov
push
mov
xchg
ds
push
fidivl
xor
add
push
and
jg
lahf
push
jb
stos
xchg
cmp
mov
insl
jno
sbb
pop
inc
ret
adc
mov
push
cmp
in
out
jl
movsl
fisttps
test
lea
adc
mov
xor
shlb
jecxz
ss
sub
gs
mov
xchg
sub
out
idivl
jo
imul
jg
out
xchg
jae
outsb
data16
push
fsubs
mov
rorl
incl
mov
incl
add
inc
mov
push
add
cmpsl
dec
cmp
add
repz
out
sub
dec
xor
stos
and
xor
mov
xchg
lret
jmp
xchg
lea
adc
adc
rcrl
scas
push
in
cmc
ds
sahf
pop
cmp
pop
cwtl
or
or
pushl
cmp
mov
and
cmc
push
popf
int
xchg
into
xor
sbb
mov
leave
fwait
cmc
leave
lahf
and
daa
cmp
add
pop
xchg
jnp
push
xor
daa
ljmp
dec
sub
or
or
test
jcxz
or
fdivl
cltd
push
sbb
adc
aas
aam
lcall
js
inc
push
and
scas
xor
jl
xchg
imul
mov
sbb
xchg
pop
mov
cmp
lret
test
pop
jg
jmp
push
fldt
outsl
jnp
jne
stos
mov
mov
xlat
mov
mov
fwait
push
enter
jne
mov
shlb
loope
mov
inc
fs
lahf
xchg
sbbl
bound
xor
or
imul
in
dec
loop
add
jae
out
rorl
shl
push
repz
jo
push
add
call
call
xchg
aad
imul
cmpsl
out
mov
cmp
inc
mov
aad
ds
popf
adc
and
cwtl
jnp
fdivl
stc
lea
in
and
jmp
adcl
pop
cwtl
js
icebp
adc
dec
rorb
adc
cs
cmp
dec
fcmovu
into
enter
pop
faddp
ds
lds
sub
aas
xchg
inc
mov
xor
rcr
mov
out
pop
adc
jae
ret
je
xor
jle
in
in
mov
movsl
sub
insb
sub
js
mov
sbb
insl
ror
clc
and
lods
fwait
cmc
push
push
jnp
imul
mov
clc
push
fld
sbb
nop
out
jae
sub
insl
xor
xchg
addr16
cld
mov
inc
mov
stos
pushf
scas
mov
push
adc
dec
mov
push
jge
mov
mov
sar
lahf
sbb
repz
jns
je
and
and
mov
inc
push
or
cmp
sbb
add
sub
sub
jp
and
lcall
pop
push
adc
cmp
mov
push
shrb
stos
ja
loop
add
pop
jns
aam
xchg
jle
add
xchg
lods
jge
jge
cmpsl
cmpsl
sub
fs
sbbl
insb
sbb
jmp
pop
sub
xor
inc
clc
lods
push
pop
mov
mov
mov
add
jle
in
xor
in
push
cmp
decl
or
xor
lods
imul
gs
leave
pop
enter
loop
aad
sbb
hlt
pxor
mov
adc
mov
jo
loope
shll
pop
xchg
push
int3
xor
sbb
or
clc
xchg
push
push
or
cmpsl
pop
pop
inc
rcrl
out
sbb
pop
adc
movsb
mov
repz
inc
adc
clc
daa
pop
adc
sub
test
mov
pop
inc
imul
ret
push
lods
mov
bound
mov
lods
xchg
ja
pop
dec
lods
stos
bound
inc
sahf
cmp
sbbb
pushl
repz
cmc
fistl
push
lret
xchg
mov
push
jne
test
inc
mov
mov
fnop
ret
in
push
pop
lock
jge
bound
insb
aad
rcll
add
cmp
shr
shrb
dec
sbb
sbb
push
jne
subl
ja
or
jns
mov
xor
push
outsl
or
xchg
jmp
std
mov
cmp
aad
lea
and
jbe
fdivl
es
xlat
test
inc
repz
fdivs
xor
imul
cmc
or
sbb
adc
push
pmulhw
xor
mov
xchg
andb
hlt
sub
test
and
insb
xchg
mov
xchg
aad
push
cmovl
and
mov
roll
stos
in
movsb
sub
mov
out
cmpsb
cli
filds
je
pop
sub
sbb
lret
outsl
xor
add
sub
imul
jne
mov
inc
stos
sbb
jp
std
adc
mov
cmp
xor
mov
insl
pop
shl
inc
xchg
ret
push
cmpsb
xor
push
inc
xchg
push
aaa
popf
sahf
jecxz,pt
and
push
rolb
push
and
aad
fstl
pop
push
mov
popf
mov
or
cmp
jnp
subl
fwait
cltd
insl
cmp
mov
xchg
test
std
mov
cmp
sub
push
push
cmpsb
popf
push
jle
scas
cmp
xchg
dec
jge
add
xchg
das
mov
jmp
arpl
repnz
int3
ja
call
sbb
mov
and
push
xor
adc
insl
mov
lods
inc
xor
mov
sbb
int
xor
mov
mov
inc
dec
push
mov
push
jmp
jp
and
inc
mov
add
popa
inc
push
dec
popf
cmp
fmull
and
mov
das
jb
pushf
popa
repz
hlt
add
mov
and
loope
mov
pop
jo
scas
fcomip
lret
cmp
sub
cmp
lea
inc
mov
aad
imul
rcrb
stos
js
jp
adc
insl
mov
inc
rcrl
scas
mov
adc
cld
jb
rorl
out
push
imul
mov
jae
loop
int
fs
push
in
xor
push
jecxz
jns
cmp
dec
test
fsubr
cld
sbb
fdivl
or
or
adc
subl
aad
fstpt
jno,pt
cld
movsl
inc
and
out
insb
mov
jl
call
pop
lret
adc
in
jg
ret
jnp
xor
stos
pop
dec
xor
push
inc
xor
ss
dec
xor
add
mov
shll
fimull
xor
sarb
lcall
fbld
mov
xchg
das
mov
jl
jle
xor
inc
inc
test
fwait
pop
mov
cwtl
push
ljmp
cli
push
fsubr
leave
sub
xchg
out
out
aam
jno
pop
pop
arpl
jae
jge
sarl
mov
std
clc
inc
lcall
sub
stos
xchg
mov
out
lcall
inc
mov
hlt
xchg
xchg
aas
sbb
sahf
inc
mov
xchg
jae
cmp
mov
adc
mov
ret
push
or
lea
movsl
sub
cmc
mov
scas
ljmp
jle
outsb
mov
pop
int
push
sub
iret
push
adc
repz
outsl
xchg
cld
sbb
fwait
sti
mov
jecxz
ss
xchg
sub
push
xchg
mov
mov
out
push
push
pop
out
add
push
test
fwait
jge
cmp
cmpsb
int3
out
push
mov
arpl
jecxz
pop
cmp
out
xchg
xor
xor
test
stos
xor
jnp
cltd
lds
sbb
std
inc
cmpsl
in
xor
test
sub
cld
push
in
sbb
repnz
jbe
inc
and
push
loopne
jl
pusha
mov
inc
cwtl
shll
cli
and
es
inc
clc
mov
mov
add
jle
pop
push
mov
data16
cmpsb
jae
subb
insb
fldt
cmc
mov
pushf
xor
sbb
iret
adc
mov
mov
xchg
fmull
and
in
xchg
push
into
dec
addb
std
lock
cli
mov
nop
movsl
mov
mov
rcr
mov
dec
inc
cld
lds
mov
aam
mov
outsb
ror
shrb
mov
loop
mov
aaa
jns
fcomi
les
push
jae
jl
push
call
jl
into
sbb
sub
shl
shr
mov
jg
jge
push
cs
mov
sbb
adc
repnz
int
ds
lahf
xor
cmp
into
ret
mov
push
xorb
ja
insb
dec
clc
mov
dec
dec
inc
data16
std
subl
and
jp
sbb
pop
dec
mov
test
shl
mov
icebp
push
xor
outsl
pop
mov
nop
mov
jmp
pop
sbb
push
fstpt
fcmovne
lahf
cmp
mov
lahf
lahf
adc
iret
xor
scas
dec
push
fcmove
popf
mov
mov
xchg
adc
lahf
add
jns
ret
inc
fwait
push
scas
and
push
adc
pop
mov
dec
inc
movsl
pusha
fs
lahf
loopne
or
inc
sub
ds
and
dec
data16
cmc
cmpsb
pop
jecxz
cmpsb
push
fsubs
ror
andl
fs
incb
jecxz
xchg
adc
fldpi
call
jl
xchg
inc
imul
push
in
dec
das
lret
xchg
test
insb
add
push
setb
mov
jo
pop
inc
xchg
lcall
pusha
imul
mov
sub
mov
push
dec
sbb
cmp
aad
adc
pmuludq
inc
jmp
xor
mov
insl
scas
push
notb
and
xchg
aaa
or
sub
xchg
in
jnp
pop
sbb
fwait
pop
cmp
xchg
ret
jb
mov
sbbl
mov
sub
pop
add
bound
out
add
sbb
int3
rcrl
mov
push
sbb
lcall
popf
xchg
or
and
adc
and
mov
int
les
adc
jle
arpl
mov
xchg
out
or
fstl
xchg
dec
push
and
sub
add
orl
in
push
xchg
scas
je
sub
hlt
sbb
js
jo
push
or
pop
xchg
shlb
cmc
cmp
lahf
sahf
add
scas
in
xchg
pusha
dec
push
adc
movsl
je
mov
pop
xchg
shrl
aas
aad
xchg
call
hlt
stos
or
rcrl
sarb
daa
dec
lods
fdivrs
push
outsb
dec
movsb
sbb
sbb
mov
xchg
shll
scas
pop
test
mov
stc
jbe
aam
sbb
dec
lcall
sbb
subb
gs
lock
repz
add
mov
mov
mov
stc
scas
adcl
arpl
dec
enter
push
cmc
test
dec
int3
or
jo
cmp
repz
push
dec
fimuls
out
pop
nop
lock
dec
les
adc
pop
adc
and
add
push
cltd
popa
rcrl
jo
cs
mov
and
and
sub
or
cmc
repnz
fcoms
cmpsb
lahf
xchg
pop
loop
pop
mov
dec
and
fldt
cmp
ss
sub
dec
int
sub
push
cwtl
insl
mov
mov
cmp
push
les
cmp
sub
dec
das
sub
dec
loop
mov
test
outsb
pop
not
push
add
incl
hlt
cs
mov
adc
xchg
or
or
mov
repnz
or
or
loope
pop
int
fsubs
adc
cmp
jno
add
push
dec
popa
aad
add
imul
dec
out
push
insb
mov
push
jmp
and
aas
push
lret
js
lea
pop
mov
out
xor
enter
xchg
dec
pop
xor
xor
push
repnz
jnp
das
shll
ljmpw
cld
jl
js
out
cmc
xchg
mov
loope
inc
in
lcall
sbb
lods
addr16
mov
dec
or
nop
pop
mov
pop
ret
out
pop
out
sbbb
mov
push
mov
cmpsb
sti
mov
stos
ljmp
cmp
in
pop
sbb
jae
jb
cs
lock
inc
mov
sub
mov
jno
xchg
sbb
push
js
mov
push
inc
and
xchg
lock
je
pop
xor
inc
fldenv
js
xor
add
imul
or
mul
test
call
or
fisttpl
or
push
cmc
xorl
inc
pop
adc
mov
fildl
jl
xchg
inc
pushf
test
mov
or
ja
fwait
les
cmp
sbb
jno
adc
push
test
mov
fdivrl
repnz
out
dec
cmc
mov
das
push
mov
std
pop
mov
in
jmp
sub
fmuls
test
stos
repnz
mov
and
sbb
push
in
lcall
jnp
jmp
in
cmp
add
jmp
ret
les
push
lret
mov
jae
cmc
or
push
push
outsl
mov
loopne
movsl
sub
xchg
sbbb
ret
cld
adc
popf
lods
mov
xchg
imul
jb
nop
mov
xchg
bound
add
pop
nop
lods
xor
adc
into
js
sbb
xchg
ret
pusha
fucom
inc
mov
outsl
and
lock
cmp
movsb
jnp
mov
mov
stos
jle
fbstp
stc
lcall
sbb
gs
sti
shlb
hlt
dec
test
movb
aas
int3
push
inc
jns
arpl
sub
adc
in
ret
xor
mov
mov
pop
sbb
add
jb
push
adc
or
ds
lahf
xor
and
stos
pusha
ja
in
paddsw
pop
inc
and
add
mov
icebp
icebp
aam
mov
mov
aas
pop
add
leave
movsl
pop
pop
rorb
loop
cmp
or
icebp
out
mov
ret
dec
outsb
adc
inc
jb
jns
mov
xchg
aas
xchg
outsl
pop
mov
dec
jl
std
cwtl
jns
cmp
lret
cld
neg
inc
jp
xor
cmp
fimuls
int
int3
fstpl
fwait
std
nop
mov
sbb
movsb
dec
xchg
cmp
bound
add
mov
xor
xchg
out
test
dec
mov
das
sbb
add
push
test
sbb
stc
lcall
jnp
push
xor
sbb
sub
imul
insl
mov
jo
mov
push
add
sbb
insl
mov
rcrl
cmp
ljmp
push
and
adc
in
lcall
pop
leave
inc
sub
xchg
cmp
cmp
js
mov
out
push
inc
xlat
fs
add
jp
icebp
test
or
jg
inc
jle
add
je
test
sbb
cmpsb
cld
jbe
pop
insb
out
or
push
inc
ja
cld
lock
rclb
jb
jl
push
xor
jbe
push
imul
mov
insb
fwait
in
cmpsl
sarl
sub
icebp
clc
sub
in
ret
adc
into
movsb
aaa
jo
rclb
stos
add
and
mov
mov
dec
sbb
push
addb
std
aaa
lock
mov
jne
pop
push
push
fisttps
movl
fs
leave
fisubl
cmp
adc
test
inc
sbb
gs
cmp
outsl
out
or
sub
mov
xchg
dec
arpl
mov
and
inc
rorb
pop
enter
inc
ret
mov
mov
jge
out
iret
popf
out
adcl
cli
adcl
xor
insl
mov
lods
pushf
inc
in
addr16
mov
mov
cmpsl
inc
bnd
fbld
pop
mov
dec
jb
out
shll
ljmp
jg
or
inc
push
aas
insb
stos
jae
test
mov
pop
in
icebp
rcrl
sti
mov
pop
lea
or
push
fidivl
jge
mov
inc
sarb
lods
mov
jecxz
sub
xchg
cmp
out
pop
add
lret
mov
adc
pushf
rcr
jg
aam
ljmp
js
lock
sub
int3
inc
xlat
sub
mov
js
lods
outsb
mov
repz
cmpsb
js
mov
fwait
xchg
shl
or
std
cmp
pop
pop
lahf
cmpb
rdtsc
movsb
sahf
cmc
push
mov
and
jp
xlat
out
cmp
mov
dec
sub
mov
mov
cmc
push
add
add
push
dec
add
scas
out
test
std
frstor
and
daa
rolb
ja
dec
es
fwait
and
push
test
bound
mov
ffree
jne
mov
in
inc
cld
test
bound
fcoml
mov
jl
mov
mov
cli
inc
lods
xchg
not
jecxz
inc
xor
ret
sub
mov
push
sbb
push
mov
pop
int
frstor
ja
mov
cld
or
mov
in
xchg
sbb
mov
rcrl
cmc
loopne
inc
inc
push
ret
mov
mov
mov
jb
mov
ds
push
jae
pop
movsb
dec
sub
xchg
or
rol
ret
mov
gs
ret
push
inc
or
ffree
or
sub
pop
adc
cs
fs
lret
mov
cld
ret
jae
adc
stos
cmpsb
ret
movd
dec
lcall
push
adc
imul
xchg
mov
test
pmullw
add
xor
test
es
cmp
flds
cli
test
and
dec
mov
lahf
jns
and
loope
cmp
cmp
mov
outsb
push
iret
ret
pusha
pop
add
cmpsb
pop
shlb
ficoml
sbbl
rcll
cs
or
mov
or
xorb
syscall
shl
cld
pop
xor
shl
push
leave
scas
loope
and
gs
sub
or
and
jp
andl
jecxz
mov
pop
pop
lock
pop
push
mov
sarb
inc
mov
xchg
lret
mov
inc
xchg
pop
out
insb
sub
les
xchg
dec
push
sbb
push
jae
cs
addr16
mov
jp
xchg
in
js,pn
imul
mov
subb
inc
fs
push
push
rorl
cmp
aad
jae
aas
push
mul
mov
dec
mov
xlat
int3
dec
cmpsb
jno
xor
jo
pusha
ss
je
in
inc
pop
das
pop
call
pop
xchg
push
ljmp
std
xor
xor
adc
sti
sti
ljmp
cwtl
mov
sbb
push
mov
add
dec
lahf
lcall
cmp
aas
bound
jecxz
mov
xchg
rcrb
push
dec
stc
cmp
and
scas
ret
test
push
jo
xorl
dec
or
mov
add
xor
jne
mov
jno
lock
cmp
pop
mov
pushf
sub
push
repnz
aas
shrl
push
insb
rcrb
or
mov
mov
xchg
and
mov
dec
js
addr16
pop
sarl
xlat
cmpsb
ficompl
lcall
js
dec
rcl
movsl
and
movsb
push
popa
cwtl
push
andb
xchg
notl
inc
lret
xchg
mov
fdivrs
add
decb
mov
or
mov
cmp
test
icebp
shrb
sbbl
cmp
stos
outsl
or
sbb
test
mov
or
out
fistpll
stos
adc
sub
sti
push
lds
mov
out
push
jne
add
sub
lret
wrmsr
pop
leave
fwait
pop
std
adc
fldcw
or
inc
sti
sbb
pop
ja
pop
scas
imul
and
xchg
sbb
fistps
xor
and
in
mov
ret
test
loop
jp
arpl
sbb
xor
ja
shr
and
mov
scas
sub
daa
inc
pop
dec
inc
pop
ds
insl
loop
pop
fistpl
lods
add
pop
mov
inc
mov
cmpsb
call
inc
xchg
fsubrs
fwait
inc
scas
jge
add
xchg
mov
and
rolb
mov
or
and
addr16
mov
cli
addb
hlt
arpl
pop
inc
mov
loopne
bound
pop
jb
mov
stos
inc
loope
jno
setg
mov
cmp
std
inc
jmp
mov
lcall
not
icebp
dec
fimull
mov
jbe
mov
ss
in
nop
pop
pop
pop
xchg
fwait
xchg
cli
mov
push
das
mov
sbb
popa
push
jle
ljmp
push
divl
or
in
jno
push
pop
mov
movsl
and
idivb
iret
fnstcw
xchg
das
jae
hlt
rolb
outsl
adc
sub
sbb
xchg
or
lret
add
mov
inc
pop
xor
mov
mov
arpl
ret
xor
aaa
ja
mov
jne
mov
jae
and
mov
jmp
jne
mov
cmp
nop
dec
jg
imull
jle
stos
pop
dec
data16
or
movsb
mov
mov
or
cli
cmp
mov
scas
jb
pushf
out
sub
int3
dec
cwtl
mov
stos
jnp
std
fnstsw
ret
push
xchg
or
mov
call
adc
in
roll
scas
cwtl
enterw
mov
fucomip
jb
loop
cs
mov
into
mov
mov
cwtl
push
xor
sbb
sub
test
je
into
jno
pop
push
push
fidivs
mov
repz
fs
or
filds
incb
mov
icebp
add
lahf
loope
aam
cmpsl
push
push
xor
jle
push
mov
dec
js
loop
xchg
loopne
test
das
ret
imul
lret
dec
fstl
std
mov
mov
flds
jbe
clc
data16
cmp
xlat
hlt
dec
jl
add
or
push
mov
popf
stc
sbb
and
stos
es
mov
cmc
xchg
cwtd
addb
lock
int3
inc
data16
leave
xchg
or
sub
jl
xor
jae
push
pop
xchg
push
imul
push
or
dec
sbb
add
hlt
push
ficoml
iret
mov
jmp
subl
out
push
cmp
sub
or
xchg
pop
push
ljmp
jbe
shlb
or
lods
mov
ljmp
iret
cmc
xchg
and
sub
lea
cmp
jo
loop
jnp
mov
mov
xchg
cwtl
mov
mov
pop
int
enter
push
pushf
popf
mov
inc
movsb
or
ljmp
xor
mov
sbb
int3
cmp
sahf
lret
inc
pop
push
and
xchg
divl
mov
mov
push
add
imul
shll
pop
mov
sub
cmp
iret
test
mov
out
fldl
es
and
xchg
inc
mov
mov
xor
enter
prefetchnta
jmp
clc
idivb
repnz
sbb
mov
repz
xor
sub
daa
dec
in
cld
decb
aaa
mov
std
addr16
push
mov
dec
das
dec
loopne
pop
push
dec
fs
mov
inc
stos
adc
push
push
jmp
and
or
test
rcrl
push
pop
clc
lea
sbb
orb
repnz
sub
pop
outsl
mov
pop
add
les
pop
mov
incb
orl
jle
pop
pop
test
and
hlt
pushf
cmp
push
ret
loopne
mov
fsubrp
and
daa
mov
daa
pop
repnz
nop
orl
mov
xchg
ret
repnz
jbe
aad
frstor
and
adc
and
repnz
dec
mov
orb
fs
stc
fisubs
adc
or
popf
and
jp
les
mov
iret
sbb
dec
stos
mov
cli
cmp
clc
in
mov
js
and
pop
cmp
movsl
and
cmpsb
lahf
push
xor
push
cmp
dec
jbe
lcall
inc
mov
or
mov
cmp
lret
sbb
mov
jmp
lds
adc
test
mov
test
mov
movsb
add
mov
cmp
mov
xchg
inc
out
mov
push
sti
or
cld
xchg
xlat
xchg
push
sbb
jg
aad
sbb
int3
xchg
jae
int
loopne
js
pop
xchg
ficomps
jns
hlt
and
jns
adc
jg
and
enter
pusha
test
in
loop
dec
shrl
cmp
pop
mov
lods
pop
pop
sbb
repz
mov
jb
push
cmp
add
loop
sbb
lret
fxam
add
cmp
jmp
lahf
fcmovbe
loope
push
rol
lods
mov
das
mov
scas
and
test
xor
push
mov
cmpsl
popf
push
bound
xchg
mov
nop
dec
mov
xchg
mov
and
dec
sbb
shl
mov
add
shl
popa
out
fimuls
mov
dec
dec
xor
stc
cmp
xor
popa
push
movsl
lahf
into
sub
cli
push
fcoms
loope
fdivr
and
push
lret
jno
les
and
dec
sub
nop
cld
dec
xor
sub
adc
mov
bound
pop
or
sub
in
outsb
int
fmuls
in
jp
push
add
inc
push
inc
xchg
out
inc
jp
pop
cmp
dec
insb
cli
scas
lock
push
xor
std
sti
cs
mov
mov
lea
fdivrl
mov
mov
push
mov
add
je
loop
mov
adc
sbb
pop
mov
cmp
pmaxub
movsb
sahf
mov
enter
in
mov
mov
test
das
xchg
cmpsb
pop
cmp
and
dec
pop
adc
cli
cmp
ficompl
cmp
xchg
fxtract
es
cltd
cmp
push
orb
lea
mov
cmp
mov
clc
inc
mov
mov
xchg
repnz
mov
pop
pop
sub
dec
out
jnp
hlt
sbb
test
jmp
fldcw
aam
ret
adc
pop
sbb
mov
ja
sbb
mov
pop
fwait
mov
rol
push
inc
movsb
js
xchg
xor
in
fcoml
stos
add
outsb
pop
mov
inc
lods
dec
sbb
insl
xchg
mov
xchg
shl
mov
bound
add
cmc
add
push
adc
mov
fdiv
cmpsl
xor
cmc
in
adc
data16
mov
cmc
push
int
dec
xor
mov
sti
jbe
cltd
and
idivb
test
cmpsb
add
adc
call
in
adc
inc
inc
data16
repnz
cwtl
cltd
popf
cmp
pop
add
push
push
jbe
add
add
mov
fcompl
sub
js
in
cmpsl
push
sarl
out
cld
sbb
test
xchg
sbb
ret
popa
mov
mov
jb
les
add
and
cli
adc
and
jo
hlt
sub
or
in
push
pop
sub
xchg
sbb
push
out
and
clc
outsb
push
in
mov
dec
loope
fs
pop
or
faddl
ret
or
fildl
add
adc
mov
add
jbe
push
jns
adcl
mov
jb
nop
cwtl
xor
push
negb
movb
dec
stos
inc
sub
add
call
mov
pop
lds
imul
ss
ljmp
mov
xchg
pop
sub
mov
mov
push
jmp
shlb
push
iret
testb
inc
scas
out
les
xchg
and
push
inc
enter
repnz
pop
push
fidivrs
pop
cmp
pop
pop
xchg
or
repz
sub
jne
rol
fistl
jno
xchg
lcall
adc
sbb
or
pushf
stos
mov
out
xor
lret
aas
loope
imul
in
push
pop
in
xor
fisubrl
lea
cmp
adc
icebp
inc
sbb
stc
test
push
rcr
sub
rolb
scas
xchg
push
clc
sbb
mov
jne
rclb
jae
cmpsb
jecxz
dec
jne
adc
arpl
aaa
jge
jl
push
stos
jnp
mov
fiadds
fbstp
push
imul
mov
fwait
test
push
jge
xchg
out
xchg
imulb
jnp
lret
pop
in
dec
movsl
test
xchg
and
int3
cmp
sbb
pop
mov
shl
lret
test
jbe
cld
add
rolb
test
push
dec
stc
ljmp
or
mov
iret
pop
xchg
add
aaa
push
xchg
lods
ret
add
mov
aas
push
int3
mov
xor
jp
test
or
fisttpl
out
dec
test
fidivl
sahf
sub
into
mov
insb
sub
cmpsb
and
fs
rclb
sub
stos
sub
bound
and
lret
out
popa
inc
fs
int
js
std
jmp
xchg
lcall
sahf
push
int3
flds
cltd
stos
loop
int3
xchg
sub
pop
add
pop
shlb
insl
dec
and
mov
cmc
dec
loop
rclb
stc
setns
and
mov
mov
pop
push
mov
in
mov
push
cmp
hlt
bswap
aaa
cmp
pop
leave
mov
or
pop
leave
sahf
insb
movsb
out
xor
in
std
push
or
mov
or
inc
inc
or
push
in
cltd
mov
mov
sbb
mov
ds
jmp
ret
push
lahf
fstpt
in
test
cwtl
sub
pop
push
xchg
or
sub
mov
stos
or
pop
inc
dec
xor
push
add
mov
sub
fistl
jae
mov
mov
xlat
insl
pushf
lcall
into
loope
pop
jns
xchg
in
in
mov
push
mov
mov
in
dec
push
xor
repnz
mov
mov
pushf
cmp
mov
nop
dec
mov
fisubrs
dec
out
pop
iret
or
fwait
std
push
fwait
gs
aad
test
sti
mov
adc
adcl
sahf
insb
iret
jle
movsb
pop
jge
sbb
outsb
lods
add
out
imulb
mov
sarl
cld
mov
and
mov
sub
xchg
arpl
xchg
clc
mov
in
repz
dec
mov
sub
mov
gs
fcmovbe
pop
imul
ret
inc
adc
or
bound
stc
addr16
scas
jl
in
xchg
outsl
fldcw
mov
or
cmp
jae
mov
fs
push
cs
gs
push
adc
mov
mov
enter
imul
add
outsl
loope
out
aad
addr16
cmp
cld
or
push
ds
mov
stos
xchg
mov
repz
push
ljmp
mov
outsb
fnstenv
sbb
stc
rcl
push
pop
mov
icebp
scas
or
or
in
dec
sahf
push
lds
push
movsl
enter
mov
xor
mov
mov
or
test
leave
jne
mov
out
add
jno
adc
pop
enter
push
mov
pop
jnp
mov
cli
test
loop
and
insb
jno
cmp
in
add
pop
lds
lea
imul
jb
xchg
xchg
hlt
mov
pop
sti
or
pop
scas
les
shlb
pop
mov
repz
xor
xchg
and
aaa
sbb
fstps
lcall
dec
cmpsb
xchg
aam
popf
add
aad
mov
jne
inc
mov
sbb
sub
sbb
into
das
sbb
js
jecxz
sbbb
pushf
lea
mov
icebp
inc
out
inc
jnp
add
aam
sbb
cmp
sbb
shl
bound
jg
and
data16
mov
xor
bound
push
xchg
cltd
lods
sub
or
fists
outsl
inc
andb
pop
xchg
in
mov
and
into
pop
xor
mov
js
xor
inc
pop
jmp
roll
sbb
lahf
mov
mov
mov
insl
xor
sti
imul
sub
inc
popa
test
jne
or
cmp
adc
or
mov
cmp
and
loopne
or
inc
lcall
lret
xor
pop
xor
mov
mov
mov
je
fcoml
mov
push
aam
pushf
xor
adc
test
pop
mov
mov
sub
out
hlt
jbe
pop
mov
sbb
mov
aas
lods
repnz
in
das
test
adc
out
cmpsb
push
cmp
ljmp
sti
jb
test
mov
sbb
mov
test
ja
std
push
popf
dec
pop
dec
or
cmp
xchg
ds
xchg
and
push
enter
mov
cmp
mov
dec
add
clc
dec
in
jns
popf
push
sub
xchg
rorl
sub
pop
dec
ret
sub
xchg
jle
or
xchg
inc
xlat
dec
fidivrs
call
fucomi
shr
push
sbb
and
and
add
mov
or
das
xor
push
cmp
stos
lret
push
std
xlat
mov
js
rorl
or
sbb
addr16
test
in
in
cmp
mov
enter
xor
add
xchg
popf
jb
movsb
fisubrs
push
mov
addb
mov
movl
add
movsl
mov
xor
pop
pop
sahf
pop
and
out
add
pop
add
and
or
cmp
push
mov
mov
mov
insb
leave
test
add
dec
dec
mov
testb
mov
pop
pop
and
daa
mov
mov
push
add
inc
push
in
cltd
adc
sahf
xor
jp
sub
sub
not
sub
pop
lret
imul
inc
push
movsl
add
cmp
daa
hlt
es
out
repnz
mov
je
ja
pop
push
arpl
ljmp
xor
xchg
outsl
pop
cld
pop
mov
pop
lret
sub
mov
roll
pop
loope
push
out
inc
mov
xor
xchg
add
ret
mov
repnz
pop
aaa
imul
dec
dec
imul
lret
stos
insb
cmp
lret
jae
mov
xor
fmul
push
add
jge
mov
aas
lods
test
mov
js
gs
or
repz
les
call
sub
pop
test
sbb
rcrb
sub
ss
nop
mov
iret
and
dec
sub
mov
adc
fistps
sarb
push
and
fnstcw
in
loopne
out
xchg
fstl
mov
decb
test
inc
aad
scas
shr
push
and
pop
sub
push
imul
fadd
mov
divl
jno
inc
aaa
mov
adc
stc
sbb
sub
jmp
fisttps
cs
sub
inc
mov
sbb
push
jmp
and
sbb
lea
mov
data16
insl
pop
rorb
add
and
pop
dec
mov
cmc
mov
xor
adc
add
test
cmp
pop
sbb
push
pop
lahf
fs
jnp
mov
xchg
into
lret
jge
cwtl
stc
testl
jl
pop
mov
xchg
adc
mov
mov
enter
imul
aaa
inc
ljmp
lock
mov
enter
test
add
or
shlb
das
mov
shr
cmp
imul
into
into
adc
int
iret
cmp
out
sub
pop
xor
lret
hlt
cltd
fcmovu
xchg
jb
push
pusha
or
dec
and
adc
js
repz
xor
adc
fs
jmp
cli
push
hlt
mov
sub
xchg
cmp
cmp
mov
mov
adc
lock
nop
adc
cmpsb
push
hlt
sub
push
pop
shrl
inc
cmp
xorl
mov
xchg
test
add
out
aam
dec
pop
or
mov
aaa
fcoms
addb
cs
inc
mov
jle
mov
shlb
call
add
data16
fistpll
loope
sub
adc
movsl
into
pop
mov
pop
mov
insb
add
rcrl
mov
mov
lods
adc
enter
out
jns
jg
sub
inc
loope
xlat
xchg
ljmp
adc
sub
mov
ljmp
push
push
insl
popf
mov
cli
cli
shlb
xchg
call
shlb
jb
in
push
cmp
sbb
dec
xlat
movsb
adc
pop
pop
push
rorb
hlt
and
shll
les
mov
dec
inc
lret
jne
cmpsl
xor
jmp
fstps
lods
lret
in
lods
je
sbb
jmp
loop
cmp
int3
sti
les
cmpl
sub
jp
adc
cwtl
mov
mov
pop
xchg
and
rorl
mov
out
add
sub
xor
out
add
or
outsb
or
bound
cld
mov
push
sbb
lods
and
push
movsl
and
test
lret
mov
outsb
subl
jno
xor
mov
cwtl
pop
bound
xor
or
je
bound
xchg
pop
and
adc
pop
or
pop
xor
and
scas
movsb
sub
fnsave
sarb
subl
lods
mov
fucomp
roll
popf
jge
movsb
push
jno
scas
add
js
sbb
movsl
fs
stc
rorl
cwtl
inc
lods
sbb
andl
pop
pop
sbb
aam
loopne
xlat
lea
fwait
imul
cmp
inc
in
popf
es
cmc
mov
adc
mov
cs
mov
movsl
push
jp
sti
xchg
push
ror
in
pop
aam
icebp
aaa
jns
loopne
in
movsb
sub
mov
mov
lods
in
cmp
ret
xchg
mov
push
push
dec
and
sub
add
jl
imul
fs
andb
dec
addl
cmpsl
clc
push
rcll
xlat
add
imul
loop
adc
mov
sbb
mov
dec
jno
js
daa
faddl
insl
push
adc
loopne
push
mov
lds
es
out
jg
push
jne
sahf
flds
and
push
data16
xchg
jbe
mov
lahf
nop
std
sub
icebp
arpl
mov
dec
out
mov
sub
test
xchg
push
iret
pop
lods
jecxz
sub
or
iret
sub
repnz
je
in
movsb
loop
pop
clc
clc
and
xor
gs
adcb
adc
mov
jle
xor
jno
stos
adcl
ret
dec
scas
insb
mov
sub
fiadds
xor
mov
mov
adc
cmp
or
mov
add
rol
scas
dec
in
call
mov
jne
stos
rorb
mov
mov
cmp
cltd
pop
in
xchg
nop
lret
repz
jecxz
mov
daa
daa
rcr
fstl
pop
pop
add
adc
sub
push
or
jg
lcall
and
mov
pop
aam
cmc
cmc
mov
push
or
test
xchg
and
sub
jl
mov
test
incl
cmc
jo
lahf
push
cwtl
jp
xor
addb
push
sbb
insb
cmp
lret
pop
test
adc
pusha
aad
push
fwait
cmp
pop
push
int3
scas
test
cmpsb
sbbl
jp
push
inc
fstl
push
out
mov
jo
cltd
test
mov
fcompl
jne
dec
or
and
pop
xchg
dec
test
jp
xor
jae
insl
jp
dec
or
mov
movsb
loop
cmpsl
std
cwtl
mov
insl
ss
cmp
jo
rcll
mov
fwait
adc
mov
mov
xor
test
push
scas
mull
mov
or
loope
inc
push
cs
lret
cmc
std
sub
mov
or
test
mov
adc
push
ljmp
loopne
ljmp
push
les
aam
std
daa
jmp
mov
mov
sub
xchg
cmp
jnp
aaa
jno
aam
into
fucomp
in
xchg
into
flds
fsubr
stos
pop
adc
int3
push
leave
fcomip
rcrb
lahf
dec
push
test
cmp
es
das
imul
xor
xor
mov
xchg
jnp
outsl
sbb
mov
pop
pop
loop
ja
push
xlat
pop
jle
pop
clc
inc
leave
push
ja
nop
pop
mov
or
dec
xchg
jo
jl
inc
movsb
xchg
subl
jns
adc
lea
mov
movsb
mov
jmp
repnz
or
sahf
daa
adc
push
mov
and
std
mov
jbe
jmp
arpl
sbb
stc
dec
or
pop
inc
or
lods
nop
jl
rcll
dec
xchg
in
in
loopne
mov
sub
movsl
push
jno
adc
popa
and
adc
mov
mov
in
dec
scas
lea
sub
xchg
xchg
nop
lock
pushf
pushf
clc
or
cmp
xchg
ret
negb
fs
push
lds
jbe
or
aad
rcrb
xchg
enter
lds
jge
mov
imul
mov
loope
add
xchg
mov
mov
lret
xchg
imul
jle
cmpsb
pop
add
jne
pop
ss
or
loop
or
xor
data16
loop
inc
scas
push
das
nop
mov
fs
in
ret
out
fidivl
ljmp
cs
test
mov
cli
sbb
jge
in
pop
xlat
cmp
mov
and
and
out
sahf
add
arpl
popf
push
loopne
popf
xor
mov
fstl
push
testb
or
aad
mov
add
pop
sub
or
clc
add
cli
dec
mov
in
test
enter
loop
insb
adc
or
jp
dec
insb
sbbb
mov
add
movsb
jbe
adc
adc
pop
aam
mov
jno
push
lret
loope
setbe
sahf
cwtl
dec
jo
stos
icebp
sbb
adc
fbld
xor
lods
mov
push
pop
rcll
shr
lcall
push
push
add
fcoms
cld
mov
sub
cmpsl
icebp
cmp
pop
cli
sub
inc
sub
push
std
mov
push
adc
hlt
jno
pop
lret
aam
xchg
test
inc
addr16
mov
aas
push
jne
cmpsl
jbe
mov
mov
stos
xor
ret
inc
insl
sahf
jne
mov
psrlw
xor
cld
dec
mov
or
cwtl
cld
out
and
addr16
enter
mov
jb
dec
pusha
cs
jb
fsubr
ljmp
ljmp
cmc
pop
mov
dec
adcb
adc
push
je
lcall
add
sub
out
and
aam
push
push
out
movsb
sbb
push
xchg
add
pop
stc
imul
inc
cmp
aaa
xchg
sub
insb
les
mov
sahf
xor
sub
in
jbe
cmp
and
rorb
inc
jecxz
imul
in
fadds
add
mov
movsl
cltd
pop
out
mov
pushf
xchg
in
add
lcall
stc
enter
insb
push
insl
hlt
add
xchg
loop
jl
mov
les
xor
adc
mov
mov
repz
cmp
ss
mov
stc
decb
cs
xlat
lods
lret
shr
pop
arpl
inc
sub
cmp
push
mov
xchg
sbb
push
or
fwait
pop
push
inc
adc
ret
cld
stc
sbb
adcl
or
mov
jae
scas
insl
add
sbb
or
les
hlt
add
test
sbb
arpl
adc
jnp
cltd
cmp
mov
jne
loopne
daa
add
mov
sbb
sub
inc
aam
xor
sub
testb
subl
rcr
dec
pop
pop
inc
xchg
add
inc
sub
mov
cmp
add
xchg
testb
push
cltd
cmpl
xchg
pusha
leave
ds
jae
iret
cmp
add
mov
jle
dec
mov
sarl
flds
into
out
xchg
or
add
push
push
dec
pushf
pop
out
sbb
mov
jmp
push
jmp
mov
dec
inc
sti
cli
mov
das
jbe
fdiv
xlat
xchg
out
cmpsl
enter
movsb
les
scas
xchg
fs
mov
or
mov
lods
decl
sbb
mov
push
imul
aas
and
aad
iret
ret
sub
arpl
enter
add
test
dec
mov
cmp
js
inc
sub
inc
repnz
arpl
cmp
fnsave
adc
push
adc
ret
pop
in
jne
mov
jae
xchg
adc
cltd
dec
jae
pop
cmpsb
push
mov
and
cmp
stc
aam
add
and
add
mov
ljmp
lahf
pushf
or
push
jnp
icebp
sahf
mov
xor
dec
mov
adc
into
aam
leave
fisttpl
mov
mov
sub
and
cli
scas
mov
loop
ret
mov
sub
cmp
sub
sub
mov
add
add
pop
das
mov
push
pop
xor
push
push
hlt
mov
push
inc
not
mov
arpl
mov
aaa
push
loopne
or
adcl
mull
cmpsl
lret
mov
int3
scas
lock
push
test
mov
sbb
or
mov
add
jmp
fmul
pop
and
hlt
in
jmp
shll
clc
das
insl
and
nop
outsl
mov
jg
push
cwtl
in
mov
adc
mov
cmpsb
hlt
filds
xor
sbb
mov
pop
lds
inc
imul
repnz
lds
mov
fisttpl
jmp
xlat
aaa
pop
or
push
ds
mov
aas
inc
mov
or
xchg
xlat
dec
adc
jge
test
dec
dec
leave
ljmp
cltd
fidivrs
dec
rclb
mov
inc
sbb
das
push
movsb
cmp
jle
add
pop
roll
insb
jns
divl
loop
xor
xor
pop
adc
add
jge
adc
mov
sti
jmp
sbb
lcall
sub
daa
push
adc
les
sub
inc
adc
les
push
xchg
in
xor
adc
outsl
add
inc
push
testl
pop
xchg
push
push
leave
mov
mov
pop
cmpsl
ss
scas
movsl
xchg
sub
xchg
push
ljmp
fdivrs
in
cld
fimuls
push
test
cmp
cmpl
push
sub
mov
mov
add
push
outsl
fidivl
ds
xchg
data16
ret
fidivrl
jecxz
mov
rclb
dec
mov
stos
and
push
nop
psrlq
cmpsl
ss
xlat
jge
dec
imulb
je
lea
sbb
leave
cli
inc
lret
inc
ja
iret
hlt
pop
testl
mov
adc
ja
mov
adc
jge
or
mov
ja
xor
sti
jbe
jno
push
mov
push
sti
aad
ljmp
or
je
push
jmp
insb
aaa
xorl
outsb
test
fldl
lds
cmp
xor
pop
jnp
out
and
add
cmc
imul
test
jnp
sarl
sbb
lds
inc
sbb
das
shl
xchg
mov
out
loopne
jae
aad
sbb
or
mov
adc
jo
cmp
pop
push
push
mov
comiss
lds
movsb
cmp
in
popa
and
hlt
push
cwtl
or
in
push
xor
outsl
jae
xchg
dec
int
scas
std
xor
call
stos
or
mov
out
jne
sub
fwait
xor
mov
jae
xor
add
imul
jnp
jbe
dec
jmp
pop
sbb
push
mov
test
push
mov
inc
lds
loopne
inc
adc
ja
mov
mov
rcr
inc
test
movl
lret
sbb
and
jge
testl
fwait
mov
sub
xchg
mov
and
xchg
decb
ljmp
in
xor
xlat
scas
xchg
inc
aaa
cli
mov
sbb
pop
xchg
inc
rdmsr
mov
mov
push
sbb
or
les
fistl
enterw
or
sub
mov
cli
fsts
std
inc
inc
lods
dec
add
lahf
repnz
fptan
sub
fbld
ffree
negb
or
push
add
leave
jp
pop
es
jecxz
xchg
pop
push
pop
mov
sarb
cmp
enter
push
sbb
mov
cmp
mov
fwait
scas
fwait
daa
xchg
mov
add
icebp
in
push
adc
shl
mov
mov
das
pop
add
inc
pop
les
lods
fnop
adc
push
or
out
mov
aad
or
dec
imul
insl
mov
dec
lock
pop
sub
shr
add
mov
repz
repz
mov
mov
arpl
fisttpl
cmp
push
fwait
hlt
jge
fdivl
mov
in
xor
cs
mov
lods
sbb
leave
shll
xchg
mov
add
aaa
sub
xor
aaa
adc
dec
insb
xor
fnstcw
std
data16
enter
fdivrs
loope
mov
push
jg
mov
mov
js
jo
adc
xchg
outsb
leave
fdivs
mov
dec
or
or
cmpsb
push
push
push
and
stos
int
nop
inc
mov
xor
push
insl
icebp
imulb
sarb
shl
sti
in
mov
mov
sarl
popf
pushf
icebp
ret
mov
in
ret
pop
xorl
sub
xlat
xor
sti
adc
adc
cmp
mov
in
inc
ds
daa
jae
fidivrl
jl
loop
arpl
inc
cmpl
mov
cmp
mov
addr16
addr16
imul
sub
dec
push
sbb
xor
add
clc
sbb
cld
mov
out
pop
ljmp
sub
sub
jle
jp
arpl
cmp
shrb
jl
pop
lds
dec
fisttpl
shl
les
dec
ljmp
or
imul
xor
aad
adc
inc
shrb
repnz
cmpsl
lret
dec
shlb
xor
in
xor
dec
pop
add
lods
out
or
out
out
mov
lods
aam
push
int
inc
dec
in
mov
mov
pop
cmp
inc
mov
jle
fwait
test
into
call
pop
idivb
push
or
call
xchg
push
cmp
add
jle
arpl
fwait
push
or
outsb
test
xchg
out
inc
fildl
scas
jns
sub
cmp
in
mov
outsl
in
sti
cmp
int
rorb
decl
cmp
push
sbb
cmp
imul
fadds
add
arpl
inc
sbb
adc
jp
stos
iret
shrb
hlt
test
pushf
jle
in
rol
mov
test
pop
adc
mov
das
fdivs
stos
scas
jle
inc
xor
jnp
sub
jle,pt
sbb
pop
inc
add
enter
out
pop
sarb
dec
sbb
push
cli
dec
fstps
or
inc
mov
mov
dec
shr
xor
pop
inc
sarl
jge
mov
adc
movntq
out
and
xor
add
mov
mov
rol
sub
cmp
dec
mov
dec
int
and
push
cmpsb
aaa
inc
mov
fstps
mov
ficomps
mov
outsb
push
int3
out
cmpsb
aaa
aaa
aaa
aas
test
movsl
xor
mov
xchg
sbb
scas
aas
mov
or
pop
inc
mul
dec
fldcw
cld
sbb
and
push
test
pop
loop
xchg
push
test
stc
pop
outsb
sti
inc
dec
andl
inc
insl
out
popf
mov
mov
test
test
popa
push
and
push
out
sbb
iret
lds
icebp
gs
prefetcht1
jg
cmp
std
mov
mov
daa
push
mov
mov
lret
mov
push
xchg
or
imul
or
xchg
add
movsl
cs
call
pop
xlat
lea
xchg
in
cmc
repnz
and
mov
idivl
leave
cmc
repz
dec
jns
or
clc
add
push
testl
xor
or
inc
cmc
loope
int3
fbstp
pop
int3
adc
pusha
mov
stc
pusha
dec
pop
test
fimuls
es
xchg
out
les
cwtl
push
lods
adc
and
inc
lret
pop
lods
dec
push
jae
xor
ds
dec
fsub
data16
jae
daa
xchg
sub
mov
mov
mov
xchg
mov
dec
push
ja
inc
les
mov
pusha
sub
sbb
jno
jnp
in
fcmovb
mov
test
cld
or
mov
cli
test
xor
cmpb
push
ljmp
cmp
cmc
fidivl
mov
cmp
jl
ficoml
mov
mov
cmp
outsb
mov
sub
jg
cmp
xchg
adc
lret
mov
fldt
cmpsb
pop
jbe
sarl
jmp
fcoms
fistpl
push
cs
jp
mov
xor
pop
inc
mov
jae
and
movsb
sbb
test
and
mov
into
inc
gs
call
mov
cltd
shlb
pand
inc
out
pop
popf
shr
xlat
jne
repz
clc
data16
mov
mov
pop
outsb
stos
ret
mov
arpl
jle
push
mov
cmpsb
dec
cmp
mov
cmp
jge
lock
fsubrs
lds
adc
imul
cmc
jo
aam
push
into
sub
dec
mov
outsl
add
and
subl
add
out
jmp
gs
dec
mov
pop
lea
pop
or
cmp
dec
mov
sub
mov
jae
jg
sbb
jle
cmp
jp
sbb
outsb
sub
inc
sub
rorb
bound
push
sti
pop
mov
pop
outsb
addr16
add
sub
pop
mov
mov
sub
push
sbb
pop
dec
mov
and
outsl
xchg
outsb
inc
pop
pop
adc
adc
call
cmp
addr16
add
bound
loopne
push
sbb
xchg
or
lret
push
cmp
outsl
loopne
pushf
mov
faddl
in
add
js
sub
pop
popa
fisttpll
popa
push
fwait
adc
inc
jae
cld
ret
lcall
mov
loop
fldt
ljmp
push
mov
jle
adc
adc
jne
je
loope
mov
dec
fwait
dec
rclb
jge
xor
cmp
pushf
pop
std
and
rorb
dec
aam
hlt
jbe
js
daa
pop
jns
ret
jbe
imul
dec
aaa
jno
fstp
ret
xchg
ret
fsubl
shr
pop
fildl
nop
pop
loopne
mov
cwtl
adc
shrl
xchg
inc
std
mov
or
imul
shrl
out
test
lock
push
inc
stos
fadd
in
cli
fsubrp
imul
xor
jmp
incb
mov
loop
add
adc
imulb
mov
pusha
jmp
xchg
jmp
adc
popf
cltd
loope
jle
sub
pop
aam
lods
loop
repz
pop
stos
dec
add
jg
dec
cmpsb
xchg
xchg
dec
addr16
cmc
addr16
mov
jl
xchg
and
clc
dec
xor
cs
sarb
out
enter
xchg
xor
mov
lret
jmp
gs
jg
mov
inc
out
xchg
shll
test
add
cltd
add
adc
pop
in
push
adc
int3
jne
test
pop
sbbl
fstpl
test
jb
mov
scas
push
dec
lahf
pop
mov
xor
lea
add
pop
mov
rolb
adc
mov
fiadds
push
push
xchg
fucomip
ja
cmp
stc
arpl
ds
jmp
in
xchg
scas
push
stos
jecxz
icebp
inc
stos
imul
imul
cmp
scas
mov
ja
fnstsw
cmp
inc
stos
in
or
lock
cmpsl
push
ficoml
xchg
sbb
cmp
popf
inc
jge
imul
mov
dec
xor
out
hlt
inc
lahf
jbe
mov
hlt
out
mov
fldt
pop
nop
cmp
ja
in
push
lods
adc
cs
mov
insl
int
mov
out
hlt
repnz
mov
add
es
imul
mov
dec
inc
xchg
add
mov
xlat
popf
xchg
jae
hlt
popa
lret
clc
ficoml
cmp
andb
inc
lds
sub
dec
and
arpl
push
and
sbb
cmp
aam
mov
stc
add
jns
dec
lods
push
and
xchg
mov
push
mov
and
and
and
aad
sub
adc
mov
mov
adc
icebp
repz
mov
or
pop
pop
cld
cmp
sbb
push
sub
arpl
and
xchg
es
and
push
lods
or
dec
pop
dec
imul
jne
mov
adc
in
or
or
fsubl
pushf
adc
sbb
sbb
leave
pop
mov
xor
movb
call
adc
loopne
and
push
pop
mov
sbb
push
ret
mov
jns
dec
jmp
push
push
adc
arpl
cwtl
push
sbb
cmp
aam
call
add
testl
pushf
rorl
pop
cmpsb
ds
shrl
cs
mov
idivb
jmp
outsl
cmp
nop
arpl
mov
sbb
inc
sub
pop
push
cmp
out
or
xchg
mov
cmpsl
ror
sbb
inc
shlb
inc
fisubl
xor
sub
divl
adc
insl
in
jmp
lock
jo
fidivrs
loop
sbb
iret
call
and
cwtl
das
es
xchg
xor
fistpl
lahf
cmc
xchg
cli
in
inc
icebp
push
arpl
fs
dec
fcmovne
mov
jb
in
xchg
or
jnp
xchg
mov
and
mov
imul
sub
fwait
sbbl
push
not
inc
xor
fdivp
add
shll
sbb
add
clc
sbb
cmp
mov
inc
inc
and
stc
jnp
out
ret
fisubs
stc
mov
mov
hlt
notb
pop
sub
and
sbb
stos
bound
xchg
fwait
lds
xor
dec
testl
movsb
bound
in
shll
call
scas
fcoms
jno
mov
or
gs
cmpsb
data16
cld
lock
js
pop
push
sbb
shl
aad
jno
test
fwait
mov
mov
in
jecxz
jecxz
xor
out
roll
cmp
vpminub
xchg
es
out
push
adc
mull
pop
das
enter
ret
mov
sub
dec
sete
mov
sbb
cwtl
outsl
loopne
shr
jecxz
cmc
and
add
pop
fisttps
lret
shll
stos
jae
popf
sub
adc
cmp
and
dec
mov
loop
pop
rolb
xor
push
in
call
lahf
inc
data16
loop
outsl
insb
pop
rolb
stos
dec
fsubp
pop
popa
cmp
inc
fcoml
push
out
dec
clc
ds
mov
sbb
popa
int
inc
inc
mov
and
into
aam
js
dec
dec
cltd
mov
int
mov
add
mov
out
fisubrl
adc
lds
xchg
in
jle
push
in
push
repnz
dec
insb
ja
idivb
or
mov
push
aas
inc
icebp
or
stc
sub
pop
add
mov
add
in
insb
aaa
mov
sub
or
rcrl
insb
imul
and
mov
das
mov
popa
mov
push
shll
fwait
add
dec
stc
ret
sub
jle
and
leave
or
arpl
int3
cmc
dec
or
lods
jecxz
xchg
cli
push
mov
jb
shrl
sahf
notl
or
xchg
and
mov
sbb
xor
jnp
lods
xchg
test
xor
test
mov
mov
mov
xor
dec
stos
fwait
test
jno
xchg
inc
jns
cmp
lcall
push
scas
out
add
addr16
adc
into
mov
push
adc
rcrb
cwtl
mov
jle
push
aam
test
cmc
mov
bound
loope
and
aas
aaa
sbb
dec
cmp
xchg
push
mov
add
test
lahf
adc
inc
lcall
shll
adc
pop
adc
inc
xchg
inc
popa
lea
int
inc
sbb
mov
xor
lcall
dec
push
cmc
cmp
es
mov
or
xlat
sbb
test
xor
sub
add
cmp
repnz
add
insl
pop
jge
ss
outsl
stos
adc
mov
mov
dec
xchg
fstl
shlb
lcall
lods
pop
pop
je
cmp
adc
inc
mov
and
test
mov
aaa
cmp
ds
pushf
adcb
push
les
daa
pusha
sub
fstl
pop
inc
js
out
fdivrs
add
ret
push
xchg
push
pushf
adc
jns
or
dec
aaa
cmpb
adc
cmc
mov
imul
xlat
sbb
in
and
jg
xchg
fsubr
out
sbb
imul
sub
fstp
inc
jl
mov
push
out
mov
das
icebp
add
xor
mov
xchg
push
popa
or
sti
pop
or
scas
dec
mov
xor
mov
xor
fsub
inc
add
xor
shll
int
mov
cmp
pop
push
or
jp
ljmp
mov
jmp
sbb
enter
mul
adc
push
pusha
pop
jb
lahf
pop
xchg
push
xchg
jmp
test
outsl
lea
mov
lahf
negb
loopne
add
aaa
jp
rcrb
mov
jg
xchg
dec
pop
add
popa
rcll
sub
fiadds
sub
cmp
aas
fs
adc
in
ret
inc
sahf
push
frstor
mov
cmpsb
shrb
subl
or
addr16
mov
daa
mov
dec
xchg
mov
fld
int
adc
xor
mov
cmp
gs
lock
ds
repz
cmpsl
stc
std
add
insl
xchg
mov
xchg
bnd
sub
jbe
mov
mov
sbbb
fstps
push
push
push
bound
out
push
and
insl
mov
cmpsb
mov
mov
call
pushf
cmp
sub
repnz
and
xchg
pop
push
int
cmc
push
xchg
xchg
ljmp
pop
mov
jbe
pop
cmp
incb
jp
dec
mov
xchg
and
out
mov
and
pop
lds
out
lea
int
pusha
jl
subl
xchg
mov
jge
sti
mov
cld
cmp
add
xor
jbe
xlat
or
xchg
jns
add
jge
sub
aam
jge
pusha
jb
lea
pop
decl
xchg
into
and
xchg
scas
mov
mov
push
mov
or
mov
jle
dec
cs
mov
mov
cmp
mov
clc
repnz
aaa
aam
movsb
inc
cmp
cli
js
xchg
sbb
xchg
les
js
xchg
add
fcmovb
lock
nop
xchg
xchg
xor
mov
and
fwait
sub
jb
ja
xorb
scas
adc
mov
push
sub
xor
cltd
mov
flds
adc
and
push
dec
into
dec
xor
daa
push
popa
mov
insb
pusha
push
hlt
outsb
jg
mov
or
sub
cmp
sub
mov
call
xchg
scas
sbb
jge
cmp
adc
jbe
ret
cltd
imul
call
sahf
jns
dec
push
add
mov
popf
cli
or
ficompl
jo
push
jmp
and
mov
or
lea
mov
mov
bnd
imul
pop
fildll
push
mov
xlat
les
js
xor
stc
pop
add
push
mov
mov
sbb
inc
sbb
jns
xchg
xchg
adc
add
fnstenv
add
mov
pop
stc
idivb
push
xchg
xchg
cwtl
or
int
mov
or
and
loope
inc
pushf
dec
add
jmp
mov
push
pop
sbb
mov
out
mov
dec
or
test
add
leave
imul
add
test
pushf
push
pop
mov
cmp
mov
out
pop
hlt
out
pop
push
orl
in
loope
and
es
add
jmp
pusha
jne
sarb
pop
adc
sbb
and
jno
jp
xor
push
sbb
mov
add
ret
ja
adc
test
popf
in
dec
mov
js
js
mov
jl
scas
mov
sub
add
dec
roll
and
xchg
sbb
popf
or
in
mov
aam
or
lods
das
lret
ja
mov
shr
sbb
call
fwait
test
pop
addr16
pop
mov
into
cwtl
push
or
adc
popa
or
and
mov
mov
cltd
scas
fdivrl
ret
js
adc
xchg
mov
jl
jo
aas
in
mov
mov
adc
pushf
push
mov
add
jae
pop
dec
lods
out
sub
cmc
push
and
aaa
cmpsb
cli
push
test
xor
pop
data16
popf
rorl
int
aam
popf
xchg
sub
sbb
in
stc
fmul
leave
and
loop
mov
or
shll
xchg
movsl
pop
adcb
ror
int
add
jae
xchg
push
scas
xor
in
test
or
push
push
fstpt
and
add
and
fcomps
xor
lret
dec
dec
popf
xor
outsb
shlb
js
dec
cmp
jne
mov
pop
dec
test
adc
fs
in
ficoms
mov
dec
out
not
jns
popa
pop
mov
mov
testl
jecxz
mov
pop
xchg
enter
scas
ss
lahf
and
rcll
pusha
adc
insb
mov
mov
pop
imul
sub
jne
inc
jo
cmp
push
and
test
and
aaa
mov
jp
outsb
shrl
mov
push
cmpsb
movsb
cld
lds
ret
ljmp
add
gs
aas
adc
stos
xchg
pop
xchg
dec
fs
cmpsb
or
mov
je
push
fmull
push
inc
mov
in
test
or
aas
in
cld
cld
aaa
or
insl
push
mov
add
aam
mov
int
dec
jl
xor
mov
pop
outsb
xor
or
addr16
je
js
mov
mov
popa
js
adc
mov
pushf
add
ds
orl
movl
aaa
add
icebp
or
jge
mov
push
pushf
mov
enter
loop
and
cmc
inc
cmp
and
bound
mov
sub
add
cmp
add
and
out
negl
dec
outsb
pop
lahf
mov
in
add
out
out
sub
adc
adc
cli
mov
pop
js
and
mov
sbb
mov
or
or
les
cmp
cld
lds
xor
das
xchg
out
testb
mov
push
sub
rcl
adc
fadd
sub
gs
nop
mov
popa
shll
pusha
daa
inc
pop
push
jl
daa
mov
in
imul
insb
lahf
add
pop
sub
fadd
mov
bound
rcrl
cmp
je
jecxz
shlb
dec
imul
pop
push
mov
add
or
dec
cwtl
arpl
outsl
mov
sbb
addb
and
enter
lret
inc
sbb
dec
cmc
pop
dec
inc
pop
jo
mov
jmp
mov
mov
clc
in
int3
cmp
mov
pop
cmp
mov
inc
add
push
push
adc
lea
cld
xchg
or
push
aam
mov
mov
cmpl
lds
sub
adc
lods
punpckldq
mov
jbe
out
push
mov
push
pop
packsswb
add
sub
xchg
adc
sbb
sbb
test
test
cmpsb
inc
push
call
mov
sub
or
adc
sbb
pop
push
dec
iret
mov
sbb
dec
mov
or
mov
dec
cmp
call
jb
sbb
or
or
mov
xor
add
sbb
xchg
stos
dec
cmpsl
imul
call
push
sbb
ja
insb
sub
dec
mov
filds
in
xchg
inc
lret
arpl
testb
jne
pop
mov
adc
sub
imul
jbe
inc
mov
mov
pop
or
xchg
mov
adc
cmp
sub
ss
add
fdiv
xor
jne
sub
pop
xchg
sub
cmp
cmp
pop
sahf
lods
mov
xor
sbb
mov
jo
lods
imul
lret
cmp
out
jge
push
cld
fs
sub
or
out
pusha
iret
scas
mov
or
pop
inc
push
outsl
icebp
dec
mov
jge
iret
jnp
pop
jl
add
ljmp
scas
pop
imul
addr16
ds
jbe
sub
lea
pop
mov
pop
jecxz
push
push
iret
push
mov
fs
pusha
in
clc
rolb
pop
pop
out
frstors
aaa
jecxz
mov
push
pop
inc
out
stos
leave
leave
fsubs
test
gs
xchg
mov
push
xlat
or
test
push
xchg
xchg
repz
push
lds
xchg
xchg
or
out
movsl
rclb
int3
push
loopnew
mov
ret
arpl
mov
mov
addr16
xchg
andb
pushf
cli
mov
lahf
pop
shlb
sahf
adc
pop
testl
ds
iret
inc
xchg
and
inc
test
fs
cltd
push
push
pushl
sarb
flds
data16
mov
and
subb
bound
pop
cwtl
jle
les
adc
pop
xchg
in
lods
sahf
mov
lret
mov
or
and
lods
imul
ljmp
imul
syscall
jg
sbb
popa
cmp
or
jne
popa
les
and
stos
lea
pop
fmul
shlb
inc
xchg
xchg
aaa
fdivl
mov
decl
movsl
jae
fimuls
add
rcrl
pusha
ret
xchg
cmpsb
push
fcoml
add
xchg
sub
ret
jb
or
mov
ret
nop
arpl
push
rcpps
mov
xchg
mov
fsubs
in
inc
sub
mov
push
std
stos
fwait
jle
cmpsl
stc
sti
out
nop
aam
dec
add
jp
xlat
or
jne
push
in
repz
fwait
cmpb
xchg
xchg
xchg
frstor
mov
cmp
xchg
out
xor
aaa
lahf
fs
cmpl
mov
movsb
jno
hlt
leave
stos
mov
mov
movb
pop
fsubrl
adc
jno
cmp
aaa
mov
inc
ja
push
adc
lods
rcrb
fistpll
pop
repnz
dec
push
push
push
repz
jb
cli
xchg
adc
jecxz
jno
mov
movsl
inc
push
xor
add
cmp
jge
mov
fs
mov
sub
les
lahf
sbb
int3
insb
rorb
ret
in
clc
nop
insb
sub
sbb
lea
cli
popa
or
pop
sub
pop
orps
sbb
mov
in
clc
mov
xchg
push
scas
mov
rcl
ja
test
fs
pop
push
clc
insl
fsubs
xchg
jle
jbe
pop
jne
mov
movsb
cmc
or
inc
fbstp
mov
outsl
aad
push
popf
add
jg
sarb
rcl
xor
or
test
jae
loop
cltd
je
jmp
mov
call
add
cmpsb
outsb
xchg
roll
clc
inc
rcrb
les
stos
mov
cs
jbe
xchg
movsb
push
adc
or
xorb
sub
icebp
stc
in
lds
inc
cmp
rol
push
dec
int
sbb
nop
imul
rclb
jnp
insl
in
xorl
loope
pop
lcall
xchg
mov
add
mov
dec
outsl
je
dec
pop
dec
cld
or
addr16
xor
lret
nop
xchg
or
loope
add
fxch
mov
mov
ja
fmull
jle
hlt
int
das
mov
mov
adc
cmp
pop
out
repz
xchg
mov
inc
inc
pop
shr
xor
mov
fsubs
push
push
lock
fisubrl
cmp
xchg
inc
cmp
movq
test
movsb
ljmp
fwait
mov
push
cld
cmp
jp
lret
out
mov
unpcklps
rcrl
hlt
fucomip
insb
and
jecxz
ficompl
leave
mov
pop
push
outsl
mov
xlat
adc
insb
js
push
cld
or
aad
mov
into
mov
push
xor
mov
imul
sub
push
push
jl
lods
cmc
idiv
lret
sub
xchg
xor
je
cld
jmp
outsb
mov
dec
pop
aad
sarl
xchg
sub
js
dec
jno
jmp
xor
fs
sahf
lods
out
inc
ja
leave
les
sarb
ljmp
xlat
xchg
inc
pop
rorb
cmp
roll
cmc
jno
fucomip
mov
pushf
out
cmp
mov
arpl
enter
mov
sub
in
mov
clc
mov
outsb
aam
inc
lcall
sbb
sbb
sbb
fsubs
int3
leave
jg
adc
dec
cli
add
lcall
cmp
cmp
xchg
lea
cmp
shr
xor
cs
mov
sbb
lods
scas
dec
push
dec
sub
or
enter
inc
mov
aam
incl
sbb
adc
dec
cmp
xchg
jmp
das
pop
mov
xor
gs
scas
sti
sub
nop
pop
cmp
test
jne
jmp
fstl
aad
or
jl
aaa
sbb
xchg
jle
daa
add
ds
stos
jmp
sbb
jnp
sbb
pop
mov
adc
nop
and
mov
negl
cltd
stc
cli
mov
lcall
ds
jl
push
out
xchg
inc
sahf
test
sbb
test
jmp
or
jmp
insb
mov
sub
cmpsb
pop
loopne
xchg
fildll
fisttpll
enter
cmp
dec
mov
cmp
cs
addr16
jle
sub
bound
push
popf
icebp
jmp
jnp
xchg
dec
dec
xor
testl
insl
jp
scas
icebp
push
xchg
and
or
mov
mov
dec
fiadds
jae
mov
daa
mov
repnz
push
pop
ret
iret
clc
lcall
imul
ror
mov
jb
pusha
xor
sbb
mov
shll
xchg
jno
push
in
xor
sbb
jne
or
add
lret
add
jp
std
test
maskmovq
idivl
xchg
sarb
arpl
in
repz
imul
add
lods
in
mov
mov
mov
repz
sbb
loope
dec
jg
jb
sub
stos
jecxz
mov
popf
roll
negl
enter
fdiv
mov
mov
xorb
aaa
icebp
mov
mov
mov
xor
nop
xchg
loopne
and
jae
lods
test
adc
xchg
and
xchg
mov
enter
repz
mov
adc
inc
aad
pusha
push
mov
xchg
sbb
lcall
fcompl
cmp
push
loopne
jns
mov
push
push
inc
pusha
inc
call
hlt
sub
jno
out
mov
xorb
mov
push
mov
es
push
cmp
xorl
inc
sub
xchg
xor
push
mov
jns
sbb
repz
cld
int
loopne
dec
mov
std
mov
xor
stos
mov
mov
into
sbb
dec
lea
mov
aas
pop
push
mov
adc
add
add
fiaddl
out
lret
in
cwtl
scas
cmp
push
fs
xor
xchg
in
cmp
push
lods
rorb
mov
gs
jmp
mov
lret
jae
enter
out
fmull
dec
ficoms
push
cli
xor
dec
mov
push
fisubrs
jno
add
and
cmp
vphaddubq
jp
std
add
into
popf
ret
test
cmp
xchg
clc
imul
scas
mov
sti
es
mov
mov
aam
sbb
int
int
jge
and
outsl
and
adc
mov
or
adc
adc
dec
dec
insl
sub
out
paddsw
pop
mov
leave
xchg
rclb
out
sbb
idivb
repnz
adc
pop
jae
pop
dec
push
data16
push
sub
dec
test
inc
sbb
fbstp
xor
xchg
jae
in
pusha
repnz
sbb
and
cld
mov
test
inc
mov
icebp
push
pop
in
and
lods
add
testb
stc
jae
sahf
dec
fdiv
dec
outsl
fldl
inc
xchg
push
mov
jl
sti
xor
push
mov
lcall
testl
nop
daa
repnz
cmpsl
insb
mov
cld
pop
sahf
push
mov
insb
jle
pushl
rcll
jb
ret
ja
inc
das
lea
in
jo
pop
cmp
jo
xchg
iret
sub
cmpsl
loopne
jl
adc
sti
pop
shlb
push
sbb
jae
xor
jo
push
push
xorl
xchg
pushf
mov
lret
pop
xchg
repz
xchg
rdtsc
push
std
sbb
xchg
clc
sbb
inc
and
fnstcw
cmp
push
mov
stos
rcll
loop
js
jle
xor
testb
jae
add
cli
ds
out
sub
je
xor
subb
xor
mov
adc
inc
xchg
push
or
out
cwtl
dec
cli
pop
pop
push
test
cmp
jmp
andb
or
pop
jae
push
xor
xchg
sub
push
pop
inc
cmp
mov
lods
test
les
int3
pop
test
mov
into
cmp
cmp
stc
mov
shrl
lods
ret
jle
cmp
lcall
repz
jbe
loopne
cmp
shrb
lea
repnz
repnz
je
mov
cmp
jmp
ja
inc
fiadds
idivl
iret
movd
outsb
cmp
lahf
or
or
pop
mov
js
push
push
stos
mov
mov
out
sbb
stos
sbb
daa
out
push
bound
jle
jecxz
inc
sbb
cmp
inc
addr16
sbb
xchg
sub
or
inc
xchg
jle
pushf
push
in
lea
sub
sarl
push
bound
dec
dec
mov
push
lock
xchg
mov
cmp
outsl
and
subl
pushf
and
dec
fsubs
sbb
mov
fxch
jb
subl
stos
cwtl
and
dec
mov
daa
inc
je
jecxz
mov
xchg
imul
loopne
jmp
insl
sbb
mov
fldt
pop
xchg
xchg
mov
aad
je
sbb
and
sub
push
fs
je
cmp
hlt
loop
or
mov
inc
imul
call
loop
andl
rclb
movsl
dec
leave
pop
mov
arpl
fisubrs
mov
ja
xchg
xchg
push
je
adc
scas
xor
push
cmp
xchg
lods
pushf
lret
cmpsl
pop
cmp
and
dec
push
pop
cmpsb
dec
orb
push
pop
push
fisttpll
sti
pop
imul
pop
add
push
dec
ljmp
lods
call
mov
adc
lret
inc
and
mov
xchg
adc
push
inc
in
pop
dec
roll
dec
dec
push
jp
mov
mov
aad
ss
xchg
xchg
xchg
dec
mov
adc
inc
xlat
jbe
mov
rorl
jg
dec
or
cltd
scas
shrb
out
scas
inc
jge
rolb
adc
xchg
mov
jge
sbb
push
mov
sub
mov
xchg
sub
mov
rep
das
xor
cmp
push
mov
mov
out
lret
sub
addr16
lea
xor
mov
push
xor
cmp
inc
dec
js
loope
ss
and
mov
fisubrs
fisttps
arpl
dec
loop
mov
xor
cld
dec
rclb
pop
sbb
add
mov
adc
xchg
sub
jmp
mov
dec
bound
lods
sahf
cmc
jb
lds
push
adc
popf
lods
or
lds
push
adc
test
int3
dec
lret
or
and
aad
jb
mov
repz
jmp
cs
pop
or
daa
stc
push
sub
sbb
lcall
inc
push
mov
add
fs
je
push
push
pusha
ret
rep
adc
sbb
lret
mov
inc
jmp
xchg
dec
enter
insb
inc
es
cli
pop
mov
sarw
or
adc
in
jmp
popf
and
lret
lahf
in
hlt
test
lea
movsb
mov
pop
cmp
sbb
jae
cmpsb
jp
call
or
ljmp
into
inc
inc
pop
xchg
pushf
orb
push
call
or
xchg
aas
shr
pop
pop
adc
ret
scas
dec
pop
mov
and
lcall
lret
ficompl
add
or
ljmp
push
mov
sar
out
fidivs
cmp
int3
ret
jmp
pop
push
xor
in
lret
jge
into
adc
into
jle
cmpsb
aad
popf
ss
cmpsl
xchg
push
insl
addr16
test
xor
sbb
ja
inc
adc
pop
xchg
std
lock
in
inc
mov
aam
sub
push
das
jp
mov
inc
cmc
test
pop
shll
inc
popf
xor
push
les
pop
xor
push
mov
aad
mov
popa
inc
ds
dec
jge
jg
sub
test
pop
stc
repz
imul
aad
cmp
std
cmp
ss
xor
xchg
mov
in
pop
and
or
jb
in
push
shrl
fidivs
in
xchg
push
fstp
lea
xchg
popf
cmp
lods
push
scas
pop
pop
cltd
scas
dec
inc
popf
mov
subb
gs
mov
mov
and
jnp
es
testb
dec
xor
test
or
aas
aad
mov
aad
cmp
out
push
pop
shrl
nop
xchg
sub
dec
sbb
int3
cmp
ljmp
hlt
xor
inc
leave
adc
pop
push
cmp
icebp
inc
movsl
and
push
mov
outsl
adc
jmp
jmp
fs
mov
hlt
mov
into
pop
jl
aam
out
sbb
mov
jecxz
jle
sti
sti
ret
inc
call
adc
sub
repz
inc
daa
pop
and
mov
mov
scas
xlat
lock
lods
jge
data16
or
jle
out
or
add
xchg
xchg
rep
xchg
xchg
push
dec
arpl
sub
inc
xor
fucomp
aas
adc
mov
sarl
test
daa
jmp
inc
lcall
and
cli
stos
xor
adc
ret
push
aad
mov
stc
pop
jns
xchg
fists
xchg
pop
scas
xor
jns
mov
jge
sbb
push
insl
cli
xor
popf
jmp
jae
push
mov
and
pop
jecxz
sahf
adc
xchg
xchg
cmp
sbb
rol
push
loope
mov
sbb
loopne
call
shrl
pop
xlat
cld
fnop
jb
mov
lahf
lods
shl
xchg
inc
adc
xor
sbb
addr16
jne
sub
lcall
sub
loopne
pop
pop
aaa
mov
testb
mov
or
sbb
pop
sbb
nop
jne
push
cmpl
and
sub
mov
jecxz
inc
scas
pop
sbbl
jno
out
bound
push
xchg
xor
inc
cli
mov
int3
sub
pop
decb
fldt
push
cmpsb
or
cwtl
mov
je
sbb
in
hlt
jmp
or
mov
fwait
jno
xlat
sti
pop
inc
icebp
add
enter
cmp
lock
inc
or
mov
leave
pop
and
lds
setno
mov
testl
ds
arpl
sbb
adc
and
push
sahf
scas
cmp
jecxz
adc
les
leave
mov
shll
dec
es
lods
inc
mov
mov
xor
and
outsb
cmc
adc
pop
popa
lods
and
xor
cmp
mov
loopne
sub
nop
lock
out
sub
jl
add
inc
enter
pop
rcrl
lods
sbb
sub
pop
or
mov
mov
jo
inc
roll
stos
sbb
addr16
or
push
cwtl
imul
cs
out
and
stos
and
adc
sahf
xor
jns
mov
mov
mov
ficompl
int
mov
inc
adc
outsb
pop
aaa
sbb
push
ror
add
aaa
mov
xor
add
ljmp
movsl
mov
fldpi
sbb
out
push
in
xchg
lds
xchg
push
hlt
sbb
sub
cmp
sub
xchg
cmp
jg
fldt
and
push
inc
mov
lds
pusha
scas
inc
aad
jbe
js
hlt
fsts
mov
inc
push
and
in
mov
xchg
push
stos
ljmp
fs
inc
xor
push
repz
jle
loope
and
mov
mov
lret
xor
dec
out
mov
les
push
pushf
lods
or
dec
dec
ljmp
bound
lcall
push
lods
test
enter
sbb
jae
mov
lods
sbb
inc
mov
in
dec
push
push
inc
cmc
jge
stos
test
jmp
fbstp
ret
or
pop
xchg
and
and
and
push
stos
jae
jae
xchg
das
mov
sbb
dec
cmpsl
shlb
rorb
lret
test
out
popf
adc
in
inc
sbb
aam
insl
xchg
mov
jl
mov
popa
out
push
inc
cmpsb
mov
gs
out
movsb
leave
divb
inc
ret
test
punpckldq
aad
in
lods
jge
pop
dec
jne
data16
insb
push
push
dec
add
lds
mov
adc
fs
repz
test
dec
mov
sbb
loop
pop
cmc
xchg
inc
cmp
jnp
sar
cmp
data16
js
sbb
les
cmp
mov
js
imul
in
ljmp
jbe
mov
mov
mov
or
gs
inc
testl
stc
push
popa
push
outsb
aad
sub
xor
add
and
push
mov
mov
out
dec
push
outsl
cmp
fisttpll
mov
add
dec
cld
lret
pop
lea
pop
jl
std
and
aam
cmp
adc
ret
pop
jg
jmp
cld
cwtl
xchg
mov
in
daa
movsl
loop
and
and
xchg
fwait
mov
leave
lds
aaa
inc
flds
push
cmp
in
jp
inc
cmp
int3
mov
mov
and
out
imul
sub
aas
and
inc
pop
and
adc
jg
std
sub
inc
add
stos
or
fwait
outsl
mov
stos
mov
jns
lods
cmp
mov
push
aad
add
mov
outsl
loope
outsl
push
retw
dec
cmp
xor
shr
cmp
mov
leave
aad
cmc
sub
fidivrl
call
mov
aam
dec
xchg
lea
mov
cmovg
pop
out
insb
push
mov
mov
jne
rcrl
outsl
sti
or
shlb
xor
push
call
push
out
pop
fs
mov
bound
cmp
cmp
ja
and
repnz
test
in
jg
xchg
pop
scas
shr
out
or
fwait
rcll
cwtl
mov
add
push
xor
jl
mov
pop
adc
movsl
adc
sbb
cmp
sbb
add
xchg
inc
sbb
data16
mov
outsl
in
mov
sub
adc
stc
sub
lods
in
xchg
xchg
mov
dec
inc
adc
push
jg
sti
sbb
xor
mov
outsl
mov
or
enter
jg
movsb
test
into
adc
mov
test
mov
fimull
imul
mov
in
iret
xor
stos
ljmp
lds
js
pop
sbb
jae
scas
lcallw
jecxz
loopne
jne
pop
add
stos
loopne
leave
lcall
inc
jle
cmpsl
repz
fwait
cmp
or
mov
sti
mov
pop
outsl
aad
push
push
fyl2xp1
push
bound
pop
add
mov
dec
xchg
mov
inc
test
lods
inc
push
sbb
adc
setge
scas
jb
je
sti
sahf
cmp
leave
sahf
xchg
inc
data16
inc
cmp
add
ficompl
ss
ret
cmp
cld
xchg
mov
mov
insb
push
mov
sbb
shrl
dec
sarl
pop
cltd
xor
sbb
cltd
mov
mov
scas
pusha
dec
clc
xchg
scas
outsb
jp
loopne
inc
push
jle
insl
pop
movsl
pop
fs
lea
hlt
mov
test
ljmp
fstpl
ja
stos
ret
mov
cmp
ficoms
stos
and
adc
mov
insb
push
inc
push
inc
push
scas
pushl
inc
daa
ja
cmp
outsb
dec
testl
scas
syscall
rclb
jno
pop
outsl
xor
inc
inc
es
call
inc
xor
test
shr
pop
cmp
xchg
stc
scas
lcall
lcall
sub
ljmp
in
xlat
add
xor
adc
xchg
lods
sbb
adc
adc
jg
and
das
sub
clc
mov
mov
and
jnp
ds
mov
fbld
clc
mov
or
mov
dec
outsl
dec
sub
shll
pop
mov
mov
dec
xchg
dec
addl
fadds
imul
sbb
or
ss
pop
sub
xor
bound
icebp
cs
pop
or
clc
jmp
jns
sti
push
rcl
push
scas
mov
test
xorb
outsb
sbb
sbb
mov
xor
xchg
and
data16
add
jp
pushf
sbb
jne
adc
repnz
scas
outsb
popf
in
lock
lods
lods
sub
pop
cmp
mov
add
jg
insb
jg
pusha
ljmp
insb
sbb
pop
fwait
inc
daa
jo
jecxz
inc
xor
enter
jl
ret
push
cmpsl
sbb
data16
inc
addr16
aas
popf
mov
fildll
gs
jnp
lds
xor
cmpsb
mov
decb
cmp
ds
mov
sbb
sub
inc
mov
shrb
inc
push
jbe
jne
sbb
out
dec
loop
ss
icebp
mov
xchg
out
cmp
mov
icebp
xor
cli
adc
and
adc
or
push
icebp
adc
pop
xor
ret
mov
movsl
mov
out
rep
xchg
stos
test
iret
dec
int3
call
psllq
pop
dec
bound
cmpsb
adc
clc
push
test
inc
jle
lea
push
movl
jns
pop
dec
out
or
test
lods
leave
lcall
sub
clc
loopne
sbb
pop
mov
fwait
insl
and
fistpl
notl
mov
jge
and
mov
dec
sbb
in
jecxz
repz
xchg
push
sub
push
sarl
jle
out
sub
bnd
jmp
cmpsl
xchg
cmp
stos
and
push
cmpb
add
test
or
cmp
push
fs
push
cmp
cli
mov
daa
es
js
xor
outsl
add
inc
mov
lret
data16
and
add
add
jne
inc
fwait
test
mov
cli
jae
fldt
stos
jo
adc
lcall
lahf
ret
sahf
in
mov
fdivs
push
inc
leave
inc
iret
loop
arpl
sub
movsb
hlt
jg
int3
jae
and
pop
mov
insb
xor
jno
pop
sub
pusha
das
jl
addr16
push
lret
rorl
repnz
imul
dec
xorl
pusha
cld
rolb
pop
icebp
int3
mov
test
cmp
sti
sub
mov
lods
push
sbb
andl
xor
cmp
jns
popa
dec
jbe
adc
xor
fxtract
sbbl
xorl
mov
aam
je
call
fistpll
push
icebp
stos
sbb
inc
pop
movsb
insl
cwtl
pop
push
sub
es
lds
lea
enter
sub
test
sub
inc
push
mov
pop
or
jge
cmpsl
cmp
enter
jl
loopne
dec
cmp
xchg
fbstp
or
jns
sbb
xchg
sbb
or
cmp
fwait
mov
mov
das
xor
pop
xchg
movsl
hlt
hlt
push
sub
test
sub
pop
push
jge
jg,pt
int3
lds
iret
adc
inc
loop
loopne
cli
jecxz
int
ret
je
cmp
and
inc
push
sub
xchg
xchg
pop
xlat
ss
jg
adcb
repnz
pusha
and
jl
arpl
add
in
je
fstpl
sub
cmp
movsl
lcall
daa
mov
aaa
sub
lods
mov
cmp
push
push
sbb
push
sub
test
popf
and
mov
sbb
ja
lds
sub
xchg
sub
push
pop
movsb
xorl
mov
sbb
pop
jbe
imul
in
jno
cld
loope
out
pop
sahf
fwait
inc
mov
nop
stc
dec
or
mov
adc
jg
sbb
arpl
adc
jne
xor
mov
stos
xor
mov
dec
das
rcrl
xchg
test
movb
std
fcmovne
xor
pusha
sub
repz
cmpl
jmp
ret
xchg
add
mov
cmp
jne
icebp
add
push
adcl
adc
rorb
fisttps
or
fstpt
aad
sub
movsl
cwtl
xor
aam
and
enter
adc
outsl
rorl
push
inc
or
insl
lods
ja
xor
hlt
xor
clc
repnz
xor
and
inc
stc
out
adc
jmp
lock
cmp
loope
int3
adc
std
roll
test
ret
adc
iret
mov
repnz
int
jle
loopne
loope
mov
mov
mov
call
xlat
movsb
pop
int
jno
clc
in
imul
add
lea
int3
sub
and
and
jl
or
and
mov
shl
mov
lcall
imul
pusha
lock
mov
inc
adc
lods
inc
xchg
jns
xchg
xchg
cmp
lret
sbb
sub
pop
mov
xchg
xchg
mov
test
or
dec
fstpt
sbb
movsl
adc
or
cmpsb
and
xchg
cwtl
jo
and
push
js
sbb
fadd
addr16
lds
xor
mov
inc
mov
lods
sbb
mov
push
mov
pop
inc
mov
nop
lcall
mov
add
js
lret
xor
mov
pop
sarb
and
dec
shll
gs
cmpsl
pusha
push
test
sbbl
push
jno
lods
or
inc
mov
push
mov
or
or
lods
stos
lret
dec
dec
or
cmp
sub
mov
cmp
mov
sti
mov
jl
into
adc
test
xchg
adc
mov
and
fwait
std
add
mov
mov
xor
sub
dec
jge
jns
mov
cmpb
gs
fsubrs
pop
ljmp
iret
mov
dec
lea
lods
or
pop
add
xor
dec
push
inc
sbb
je
and
jmp
mov
and
adc
sbbb
mov
leave
popa
lods
xlat
and
imul
mov
cmpsb
inc
xchg
adc
sbb
mov
sub
mov
imul
xchg
inc
dec
flds
loop
mov
jecxz
mov
sarl
sarb
aad
rorb
cmp
repz
out
sbb
inc
sub
out
xchg
cmp
scas
aam
dec
mov
mov
test
and
cltd
loop
cmp
rcrl
dec
insb
je
pusha
push
cltd
je
aaa
mov
cmpsb
ljmp
mov
stos
xchg
mov
jp
es
push
lock
sbb
push
in
pop
add
shll
inc
and
jno
ss
mov
pushf
sub
add
notb
xchg
push
push
in
mov
or
orb
ds
adc
fisubrs
xchg
shrb
dec
stc
mov
retw
xchg
mov
lods
xchg
jge
popa
cmp
ljmp
sub
into
shlb
pop
lock
inc
push
fnsave
js
xchg
mov
xor
dec
inc
notl
mov
rcll
lods
pop
das
jl
push
movsb
jbe
fs
arpl
ss
xor
sbb
push
adc
hlt
xor
pop
fwait
popa
xor
cmpsb
pop
add
cli
push
fs
fiadds
sub
push
mov
push
adc
xchg
sbb
mov
fwait
mov
insb
mov
scas
cmp
lcall
dec
mov
mov
and
aad
dec
mov
arpl
mov
sahf
cwtl
es
xor
adc
mov
test
popf
jns
imull
dec
les
adc
leave
sti
in
push
ds
in
xor
dec
push
dec
orl
lret
jne
mov
dec
mov
pop
int3
push
dec
jns
sbb
inc
mov
scas
pop
or
dec
das
iret
mov
jl
shlb
inc
xchg
pop
jle
mov
jb
ljmp
psubw
fistl
push
es
scas
test
nop
cmp
repz
dec
jb
mov
pop
fidivrs
jne
sbb
mov
sub
test
pop
int3
mov
inc
das
cli
shl
movsb
cmpsb
mov
sub
adc
mov
fimull
in
outsl
hlt
mov
je
mov
xchg
test
das
nop
mov
xchg
cmp
pop
inc
idivb
lret
adc
sti
js
push
dec
cmp
aam
loop
lret
push
dec
cmp
mov
pop
jp
loope
rcl
scas
xchg
xor
mov
popl
orl
and
bound
jno
js
mov
adc
lods
or
mov
xchg
adcb
in
jo
pushf
inc
xor
push
add
jle
push
enter
jg
push
mov
pop
inc
ljmp
sbb
lock
das
or
pusha
cs
mov
mov
sub
dec
lods
insl
decb
mov
pop
xor
xchg
clc
jbe
mov
inc
imul
sub
repz
cmpsb
ret
xchg
outsl
mov
cmpsl
sbb
das
jne
iret
xor
cld
mov
sti
les
stos
inc
lock
lcall
mov
dec
sti
pop
cli
xchg
or
or
ds
add
aad
push
push
cmpsb
lret
jns
sub
sar
loope
aad
sarl
addr16
in
es
loopne
inc
sarb
xchg
hlt
and
mov
imul
stc
dec
inc
cmpsl
add
orl
fsubs
adc
push
mov
jge
pop
xor
aaa
ret
imul
xchg
cltd
jnp
sarl
jne
ds
daa
fld
cmp
push
loop
pop
jmp
and
dec
mov
test
adc
cmp
dec
jne
xor
mov
cmp
mov
xor
mov
push
ss
pop
xor
in
inc
lods
fnstcw
adc
mov
jg
fldl
insb
jnp
push
cmp
mov
cmp
ret
or
fsubrl
into
adc
int3
sbb
mov
jl
inc
mov
icebp
sbb
dec
and
xchg
sbb
jg
mulb
xchg
ret
push
insl
lret
sbb
das
sbb
jmp
dec
mov
xchg
lods
popf
lret
jl
inc
stos
enter
push
adc
inc
lret
push
scas
adc
xchg
push
mov
mov
mov
scas
ss
add
hlt
iret
push
je
jbe
mov
add
fcoms
jne
mov
in
rorl
cltd
clc
icebp
inc
pop
movsb
or
jmp
ljmp
xlat
xor
adc
clc
cmp
and
ss
mov
mov
pop
fucomp
xor
test
insl
sbb
dec
stos
sbb
movsl
fwait
adc
orl
ljmp
mov
test
hlt
test
ja
inc
jg
sub
jmp
dec
dec
sti
fwait
testl
pop
sbb
out
loopne
out
lahf
mov
pop
shl
lds
inc
je
dec
fisttpll
stos
jge
addr16
int
aaa
mov
sub
inc
addb
jg
mov
mov
aam
out
into
stos
aas
popf
mov
xchg
addr16
jne
addb
out
inc
rep
push
ja
int3
jecxz
push
lea
cmp
inc
inc
mov
mov
or
inc
das
in
and
enter
fcmovnbe
clc
ret
cli
mov
jecxz
bound
loope
jo
or
push
or
mov
add
push
jns
mov
ret
pop
std
sub
test
out
fdiv
fldt
cld
mov
cmp
subl
adc
pop
jbe
sbb
aam
xchg
add
mov
inc
out
arpl
pop
inc
ret
adc
add
push
add
adc
xlat
xor
into
jl
ss
cmc
leave
mov
pop
ret
repnz
ficoms
sbb
ss
sub
clc
lcall
lods
inc
in
pusha
push
jo
pop
xor
jbe
lcall
jb
fsubr
sbb
lret
inc
dec
aad
pop
pop
xchg
or
sub
mov
adc
outsb
push
or
cwtl
roll
test
and
pushf
jo
jecxz
sahf
push
inc
jnp
mov
push
into
addb
data16
fstpl
rorl
pop
popf
ret
shl
fcmovnb
sub
jge
dec
pushf
out
sbb
adc
mov
mov
idivl
push
test
repnz
add
or
ljmp
shr
pop
lea
ljmp
jmp
sbb
jp
and
push
popa
mov
xor
out
stos
pop
adc
sti
pop
or
jo
ret
add
fnstcw
iret
std
pop
adc
jmp
gs
in
out
xchg
jg
push
push
fbstp
out
sar
out
ja
jno
mov
jne
push
xchg
and
xlat
les
pop
jns
icebp
loope
mov
ss
jb
shrb
out
ret
into
fldenv
ds
sbb
mov
add
xchg
out
adc
scas
adc
out
add
adc
mov
outsb
sbb
mov
push
bswap
xchg
mov
addb
sub
sahf
pop
outsb
int
dec
popf
cmpsl
setl
in
add
add
jmp
xchg
addl
push
out
test
fldcw
xchg
lret
loop
stos
mov
outsl
dec
sub
pop
jle
mov
in
gs
test
pop
or
or
mov
mov
rcrb
dec
lahf
cmpsb
sbb
pushw
and
lods
lock
sahf
pop
icebp
test
xchg
stc
popf
imul
dec
and
push
daa
mov
push
fisubrl
sbb
mov
inc
imul
jl
xchg
pmaddwd
sbb
fsub
daa
fwait
mov
sub
stos
xor
outsl
add
cwtl
dec
pushf
nop
jbe
notl
cmp
or
cmc
int
jmp
js
xchg
test
jb
jecxz
adc
pop
pop
jne
xor
cmp
lock
cmp
mov
sbb
cmp
mull
out
fsubs
or
mov
dec
lret
pop
fs
inc
popa
jle
repz
loop
push
push
test
imul
xor
jl
inc
iret
xor
jle
gs
sub
ljmp
iret
test
pop
fwait
inc
add
cmp
stos
addps
lods
mov
sub
xchg
cmp
pop
js
ret
mov
fimuls
or
cmp
xlat
pop
sub
xchg
das
push
inc
sbb
and
inc
mov
jae
xchg
mov
icebp
fld
pop
mov
lods
and
mov
cltd
lds
lret
aam
mov
add
mov
aam
push
pop
call
scas
pop
adc
mov
arpl
xchg
repz
adc
dec
movsl
mov
mov
out
lret
lods
dec
inc
aas
inc
cmpsb
add
test
pop
mov
jo
xor
mov
xor
andl
adc
clc
loopne
or
push
inc
out
jae
je
popa
jg
pop
fcmovne
dec
push
pop
in
nopl
cmpsb
or
rcrb
in
in
pop
ror
pusha
iret
gs
je
dec
add
mov
icebp
xor
pop
sub
fildll
hlt
orl
insl
and
data16
pop
in
test
or
mov
sti
mov
out
mov
push
pop
sub
pop
sub
rcll
pop
jnp
and
jbe
and
mov
inc
xchg
or
subb
cmc
out
rcrl
lea
push
outsb
push
mov
mov
es
add
add
mov
lea
pop
cld
test
add
repz
sbb
xor
test
adc
in
dec
inc
dec
ficoms
mov
in
mov
push
mov
xlat
add
rcll
in
and
mov
lea
mov
sbbb
sub
into
mov
sub
fidivs
mov
incl
sbb
xchg
fldenv
xlat
inc
call
jae
mov
xchg
jl
ret
lea
mov
or
mov
lock
stc
fwait
addl
jge
and
lock
stos
hlt
xchg
ja
das
push
xchg
pop
cltd
call
jg
cmp
mov
add
test
push
mov
fdivrp
fidivl
and
xchg
sbb
loop
jns
in
mov
cmpsb
bound
adc
xchg
out
mov
mov
testl
or
dec
mov
mulb
lods
push
or
movsb
mov
sub
inc
das
cmp
popf
orl
addb
arpl
pop
iret
ljmp
push
sarl
out
add
or
addr16
push
or
jl
fnstenv
int
dec
xchg
jecxz,pn
stc
push
nop
xchg
jg
push
xor
bound
inc
dec
bound
insl
jmp
sub
jne
test
or
iret
clc
adc
je
push
bound
ljmp
pop
sbb
movb
cmp
out
roll
jae
pop
in
subl
pop
jne
ficoml
mov
pop
mov
pop
sbb
fbld
popf
cmpsl
mov
adc
mov
jo
leave
dec
fldt
push
xchg
add
bound
push
or
or
xor
lock
in
xor
mov
sbb
push
fistpll
pop
incl
or
das
xor
enter
rcll
mov
into
xchg
movsl
or
lret
add
lret
insb
in
subl
int
mov
mov
mov
dec
pop
mov
fs
int3
fsubl
push
js
out
mov
pop
pop
stos
adc
xchg
or
dec
loopne
test
push
std
mov
mov
je
in
and
sbbb
jnp
jecxz
push
mov
cmp
jg
push
push
push
rol
cmpsl
mov
push
scas
jno
cld
fstpt
les
das
add
clc
mov
push
sub
xor
mov
jge
decb
xchg
dec
sub
nop
xlat
mov
sub
and
cmp
repnz
inc
cmp
sbb
in
jbe
xcrypt-ecb
cmpsl
dec
add
xchg
mov
aas
xchg
pushf
scas
push
loopne
push
cmp
push
enter
and
orb
scas
mov
dec
sarl
cli
mov
jbe
incb
into
add
inc
cli
mov
sbb
inc
pop
sar
sub
dec
push
mov
insl
enter
fcomp
rolb
out
ds
test
xchg
pop
jno
cltd
mov
inc
inc
or
jbe
lods
loopne
push
je
addr16
mov
sahf
bound
pause
hlt
inc
jbe
push
mov
mov
push
cmc
scas
stos
adc
jp
jns
nop
outsl
notb
in
das
sti
arpl
dec
hlt
test
cwtl
cmp
insl
mov
push
add
cmp
sub
adc
push
cmp
add
add
xchg
orb
dec
test
jge
and
fwait
xor
movsb
cmc
cli
shll
std
fs
adc
aas
je
test
inc
les
in
popl
in
mov
in
xchg
push
xchg
pop
jns
das
daa
cmp
or
outsb
push
in
adc
out
ds
jns
sbb
or
inc
lret
shrl
in
sbb
dec
push
fisubl
sysenter
sarb
push
pop
sbb
xchg
dec
outsb
mov
push
jo
shlb
and
rorl
sbb
xor
jle
and
push
in
out
push
imul
insb
jecxz
inc
sbb
adc
lret
mov
and
and
or
add
out
inc
insb
sub
popa
push
mov
std
adc
lods
inc
or
cmp
movsb
lods
pusha
andb
test
adc
repz
mov
lcall
adc
xor
and
arpl
pop
xchg
nop
xor
sarl
push
leave
int
cltd
ljmp
movsb
inc
jne
or
in
call
loope
addr16
lock
ljmp
fstps
je
sbb
lea
and
cmp
outsb
jae
nop
jno
in
in
add
int3
arpl
stos
scas
inc
fildl
jl
xchg
cmpsl
mov
cmp
icebp
repnz
lahf
in
or
mov
ja
mov
enter
mov
or
cmp
add
mov
inc
aas
xor
test
test
and
add
push
sub
pusha
data16
cwtl
fwait
adc
xchg
xchg
mov
aam
sub
add
push
imul
adc
pop
hlt
mov
stos
or
and
inc
in
sahf
stc
sbb
jp
arpl
cmpsb
and
jg
mov
mov
bound
and
dec
jmp
std
and
and
fstpt
out
pushf
in
enter
bound
jg
imul
loope
das
and
mov
mov
lcall
fnstcw
cmp
sbb
fidivl
cld
inc
inc
sbb
inc
ret
xlat
loope
adc
lret
shrb
pop
ja
and
pop
and
shll
inc
adc
mov
pop
mov
mov
pop
out
push
cmp
xor
xchg
sbb
inc
push
mov
add
sub
insl
mov
enter
mov
sbbb
sti
mov
imul
in
mov
addr16
and
pop
jp
cmpsb
je
daa
scas
or
and
adc
push
mov
lods
test
pop
push
stos
jle
or
xchg
pop
pop
cmp
xchg
iret
jbe
leave
testl
daa
dec
pop
test
lahf
pop
adc
push
outsb
es
or
cmpsb
push
setl
das
jge
iret
pop
pusha
test
sbb
jmp
pop
adc
lods
aaa
loope
pop
xor
jne
gs
mov
lods
push
mov
jnp
pop
and
inc
bswap
mov
popa
sbb
mov
repz
jmp
lret
xchg
sti
fstps
dec
fldl
xor
pop
in
shll
mov
test
mov
or
mov
xchg
stos
call
rcrb
outsl
into
xchg
sbb
shrb
ret
push
push
mov
fmul
mov
movsl
jno
sbb
inc
es
push
lret
mov
add
lret
push
nop
test
fs
lcall
das
divb
jb
movsb
pop
or
hlt
pushf
xlat
fildll
mov
xchg
or
inc
mov
outsb
inc
cmp
enter
lods
or
sub
shll
jg
shr
and
cltd
mov
push
andb
fistpll
jcxz
arpl
xchg
jbe
lcall
aad
test
fidivrs
icebp
push
sarl
scas
and
outsb
sub
fsubrs
pop
out
jg
or
lods
dec
mov
leave
sbb
adc
push
sbb
clc
cmp
out
mov
jmp
stos
ja
mov
pop
push
or
inc
adc
dec
scas
xor
mov
jmp
fdiv
and
std
int
or
mov
ret
jno
mov
or
jbe
fsubrl
mov
cmp
cmpl
xchg
push
jae
xor
sbb
sub
sbbb
pusha
sbb
sub
lock
sti
add
xchg
mov
ds
cmp
mov
pop
shrb
mov
pop
jbe
ret
ss
mov
push
sbb
xor
movsb
addr16
pop
dec
das
sub
shlb
out
or
ds
xchg
mov
sbb
leave
inc
in
push
mov
sbb
aas
xchg
pusha
jnp
addr16
sbb
lods
cs
test
push
jb
bound
xorl
jp
cmpsb
sarl
test
jl
or
xchg
mov
inc
jecxz
movsl
mov
mov
frstor
sub
loop
fwait
imul
cmp
movsb
mov
jnp
add
fsub
add
lods
jb
mov
stos
xchg
push
popf
movsl
sub
cmp
sbb
dec
ret
cmp
mov
xor
xor
data16
adc
sub
sbb
pop
lahf
xor
cmc
mov
cmp
xchg
sub
jo
fbld
enter
mov
adc
inc
bound
loop
or
jae
dec
ret
fidivrs
loopne
lahf
mov
jmp
std
xchg
shr
mov
and
xchg
pop
pop
cmp
movsb
rcr
xchg
jecxz
lcall
mov
mov
or
out
inc
outsl
xchg
and
std
sub
into
aad
orb
outsb
roll
mov
sbb
sti
push
clc
dec
in
add
sbb
pusha
and
frstor
lock
mov
mov
bound
test
push
int3
pushl
stos
inc
cmpsl
cld
jp
cld
push
clc
in
dec
sbb
push
ret
mov
dec
rclb
shll
lock
adc
test
or
lret
mov
pop
rcll
mov
xchg
push
push
sbb
ret
shrl
pop
inc
xchg
rorb
shr
sbb
dec
xor
adc
mov
jmp
sub
mov
loop
push
xchg
lret
in
pushf
fldt
cltd
insb
jne
pop
ljmp
lahf
je
xchg
scas
enter
add
roll
push
mov
lds
xor
subb
add
lock
inc
cmpsb
mov
cmp
add
push
or
sbb
out
cmp
cmp
pop
into
dec
aam
xchg
out
out
or
mov
out
insl
pop
xchg
sub
cmp
jnp
jg
lcall
out
fdivrs
xor
cmp
cld
xchg
repz
sub
mov
loopne
dec
cmpb
cmc
xorl
and
push
sahf
lahf
in
mov
xor
jg
sbb
sbb
add
ja
xchg
andl
fistps
adc
xchg
hlt
cli
in
cli
pop
and
mov
cmp
test
shrl
xchg
inc
jno
push
popf
dec
nop
aaa
sub
mov
or
cs
sbb
mov
lods
dec
jl
sahf
andl
iret
mov
divb
fildl
xchg
xchg
aad
push
lcall
ljmp
sti
aas
iret
mov
movsb
sub
pop
jns
cmpsl
mov
les
and
fcomps
mov
sub
jo
pop
dec
pop
jge
ja
movsl
sbb
out
cmp
mov
jo
and
adc
movsl
maskmovq
mull
leave
in
dec
call
pop
insl
jae
mov
nop
dec
ret
fstl
fiadds
pop
out
xchg
inc
in
push
add
lret
out
orb
sub
xchg
addb
or
mov
push
mov
adc
pop
clc
mov
dec
push
add
scas
mov
fistpl
mov
lds
gs
and
inc
sarb
xchg
fwait
mov
stc
or
enter
cmpsb
inc
lea
sbb
incb
mov
in
cmp
jmp
adc
pushf
push
test
adc
mov
test
jbe
sub
ds
cld
add
pusha
lock
cmp
adc
jnp
shr
stos
cmp
rorb
xor
inc
adc
cld
xchg
lea
dec
add
iret
outsl
lods
and
stos
cs
mov
and
sbb
mov
popf
mov
or
jl
pop
stos
negl
in
ss
push
mov
mov
jno
push
sub
jle
dec
lahf
pop
add
mov
je
movsb
and
shlb
inc
jmp
mov
bound
or
mov
shll
cltd
out
or
push
movsl
scas
push
and
mov
pop
or
push
ret
mov
rorl
mov
mov
sbb
xchg
fsubr
xchg
outsb
push
push
push
in
push
imul
popa
in
insl
out
dec
sub
fstpt
sub
sbb
jae
pop
mov
ret
mov
jl
and
and
or
stc
sahf
adc
xchg
sbb
mov
sub
enter
dec
imul
in
push
sbb
mov
jne
cmp
pop
inc
filds
pop
ja
add
adcb
imul
fbstp
cmp
mov
mov
or
lcall
out
ja
das
push
add
scas
fdivr
dec
testb
loop
mov
lods
loope
xchg
adc
add
test
stos
add
jg
dec
fsubl
sbb
and
and
mov
rorb
addr16
sub
inc
subb
fcomip
or
push
popa
fistpll
mov
or
xchg
push
out
add
push
push
call
inc
insb
or
jmp
in
insb
adc
loop
roll
test
jge
xor
pusha
sbb
mov
pop
subl
subl
icebp
sub
fadds
mov
scas
shrb
imul
fidivl
imul
in
push
daa
or
xchg
dec
xchg
and
mov
pop
je
int3
xor
loope
dec
sub
dec
test
scas
inc
cmp
sarb
dec
test
mov
xchg
mov
pop
in
mov
sbb
iret
test
lahf
into
mov
cwtl
mov
int3
xchg
test
sub
pop
cmpsl
pop
pop
movsl
mov
in
mov
cmp
mov
and
stos
mov
out
pop
or
subb
mov
lret
and
lods
push
push
inc
rcrb
cli
inc
mov
add
enter
cs
iret
pop
fiaddl
mov
mov
das
sbb
cmp
jmp
jno
push
cmp
sub
cld
sarl
das
lcall
dec
sub
arpl
ret
clc
inc
ret
push
int
popl
fdivl
push
xchg
mov
sahf
jno
imul
sub
inc
sahf
rorl
test
mov
lret
clc
scas
cmpsb
mov
popf
adc
clc
dec
jecxz
adc
pop
sub
xchg
lods
fs
enter
xor
dec
lods
popf
cltd
into
pcmpgtw
aad
es
jmp
xor
jl
imull
xor
fidivl
inc
sbb
sahf
cmp
pushf
cltd
jne
xchg
test
or
cmc
mov
clc
cmpxchg
outsb
js
dec
sbb
int
gs
pop
es
push
push
out
lahf
iret
inc
mov
mov
xchg
pop
mov
shrb
dec
outsb
stos
pop
mov
mov
aaa
sbb
inc
jmp
ja
clc
lods
mov
mov
les
xor
fiaddl
or
leave
out
mov
mov
mov
out
rclb
daa
mov
sbb
bound
aad
inc
sbb
jo
mov
cmp
push
sub
cli
push
xor
notb
push
jp
outsl
outsb
fs
sbb
mov
sub
mov
push
xchg
dec
add
je
xchg
sbb
out
jecxz
outsb
fldenv
repz
scas
lods
mov
inc
into
es
movsl
in
ds
frstor
sub
testl
iret
add
jmp
xchg
inc
lods
lret
ret
inc
pop
pop
or
push
lret
mov
mov
inc
into
xor
cmp
pop
push
inc
inc
jg
mov
pushf
out
andb
jp
adc
cmp
mov
imul
push
pop
pusha
insb
adc
idivl
add
cmpsl
adc
lret
sub
test
in
and
adc
ljmp
push
pop
arpl
push
mov
sub
popf
stos
bound
leave
iret
imul
jnp
add
inc
xor
push
movsl
adc
mov
pop
scas
sbb
inc
aaa
dec
mov
sub
data16
jae
push
push
xor
es
adc
stc
bound
cmp
decl
fstl
mov
enter
sbb
push
ret
pop
xor
adc
repz
mov
jno
pop
push
lock
out
push
cli
adc
insl
dec
fadd
jo
fucom
xor
pop
sbb
jbe
mov
pushf
inc
and
mov
add
sub
sarl
inc
mov
bound
sub
mov
xor
cmpsb
ja
clc
ljmp
cmp
loop
pop
adc
jmp
jge
cld
adc
add
add
mov
loop
cmc
icebp
mov
xchg
push
cli
test
sbbl
in
add
xor
cmpsl
mov
out
xor
in
and
push
xor
xchg
pop
mov
clc
add
hlt
lock
cmc
mov
pop
xor
cli
sub
adc
add
add
sbb
aad
fsubrl
js
push
xchg
clc
inc
movsl
lret
cmpsl
sub
pop
mov
call
fsubrl
dec
out
jb
sub
pop
movsb
test
jmp
lret
addr16
dec
jne
cld
fsubrl
or
pop
sbb
xor
push
out
mov
adc
xchg
fstpl
inc
cmp
rcll
push
dec
pusha
or
mov
cs
movsb
push
pop
push
cli
scas
inc
xchg
andl
les
jo
dec
sahf
sub
pop
cmpsb
mov
lods
test
mov
xor
inc
sbb
jg
cmp
stos
push
cmpb
mov
xor
aas
add
sub
xchg
aam
pop
sub
push
mov
aaa
and
or
sbb
push
out
dec
adc
add
jb
mov
in
jns
mov
push
pop
clc
popf
mov
popf
lcall
out
cs
jnp
dec
xor
mov
xchg
lods
add
ss
and
dec
sub
hlt
fnstenv
std
mov
push
dec
andl
push
and
or
cs
cmp
dec
mov
popa
scas
pop
pushf
push
or
inc
push
fwait
sti
and
jp
and
out
pop
push
lahf
xchg
insb
addb
push
cmp
loope
jecxz
mov
shl
icebp
test
cmp
inc
and
xchg
inc
sub
ret
adc
fwait
pop
sub
loopne
and
loopne
cmpsl
int
lods
adc
dec
adc
push
mov
int
shll
out
jg
out
sub
je
adc
je
imul
outsl
xor
popa
jne
gs
cmp
dec
add
fidivl
rcll
outsl
lret
jmp
mov
pop
test
cmp
fstpl
sbb
adc
or
lcall
ja
adc
pop
out
adcb
flds
ror
push
push
in
pop
notl
repnz
int
jnp
mov
cmp
addl
loope
dec
or
push
sub
cli
ds
jg
mov
cwtl
icebp
lahf
fwait
adc
add
in
sbb
adc
sub
out
cltd
jmp
adc
push
push
adc
dec
pop
fld
xchg
push
add
push
mov
lods
mov
pop
aaa
rcrl
insb
movsb
push
push
xor
rcl
jne
aam
mov
negl
or
stc
leave
jne
sbb
pop
bound
jecxz
jp
xor
bound
jecxz
dec
sbb
push
adc
negb
ret
dec
xlat
inc
shll
sti
int3
cmp
xchg
jge
push
sub
repz
pop
scas
movsb
iret
xchg
or
mov
push
jno
pop
lds
inc
inc
scas
dec
xor
or
imul
adc
jns
adc
orb
out
adc
sbb
or
addr16
xchg
andb
adc
pop
js
jno
lea
movb
insl
xor
fnstenv
push
or
mov
xchg
push
fsubrl
inc
jno
mul
addr16
in
aam
sar
stos
inc
rolb
stos
inc
jecxz
mov
or
pop
fcmovne
push
and
sub
cld
in
movsb
mov
shlb
add
lcall
add
adc
insb
std
out
jg
xor
nop
mov
arpl
lock
adc
sbb
aas
aam
cmp
mov
cltd
into
add
sahf
or
rcrl
jmp
data16
fadds
or
pushf
test
test
mov
jle
adc
pop
cmp
pop
xchg
fsubs
ss
lods
or
cltd
pop
gs
dec
enter
xor
add
push
dec
xor
jmp
cmp
hlt
mov
cld
addl
sub
adc
das
stos
lret
les
lret
jns
cli
push
xchg
aaa
test
out
mov
dec
cmpsl
pop
dec
ss
les
inc
xor
scas
out
push
adc
rol
movsb
jae
inc
mov
mov
pushf
xchg
or
jnp
mov
mov
js
inc
mov
xchg
sarb
fcomps
pop
mov
dec
popf
and
or
es
daa
out
lcall
faddl
mov
jmp
in
sub
add
adc
and
subb
and
mov
mov
xor
scas
scas
ja
nop
and
out
or
daa
mov
add
mov
js
movsl
setnp
mov
push
lea
out
mov
cmp
cmovp
cld
pushf
xchg
fsubrl
lahf
mov
test
fistpl
push
jg
lcall
adc
sahf
iret
insl
mov
clc
cmp
sahf
cli
imul
xor
add
sahf
inc
and
sarl
int
popa
sub
shll
mov
add
sbb
rcrl
stc
mov
mov
or
push
fs
nop
dec
push
mov
mov
and
pop
int
xor
sub
push
out
jle
shlb
mov
cmpsb
mov
je
push
and
lods
and
incl
pushf
and
movsb
scas
mov
add
shlb
sbb
iret
sbbb
jl
fnclex
incl
mov
testb
dec
cwtl
inc
push
call
daa
sub
pushf
sahf
add
pop
pushf
test
sub
jbe
push
insl
loopne
out
mov
push
dec
nopl
mov
sbb
mov
aam
or
push
into
cs
jnp
aam
adc
sbb
mov
das
xchg
inc
mov
cwtl
dec
inc
mov
dec
shlb
adc
xchg
lea
fs
adc
adcb
lea
and
mov
sbb
push
mov
jge
popf
pop
sbb
mov
test
sbb
shll
test
jge
inc
mov
inc
jecxz
loopne
idiv
sbb
loope
out
or
ss
ljmp
inc
push
negl
fdivl
test
or
sbbl
pop
movsb
push
ds
cs
lret
mov
adc
dec
add
ss
mov
add
sti
test
jmp
jmp
out
hlt
test
repz
int3
and
cmp
or
insl
cmpsb
sbb
push
push
mov
sub
pop
inc
and
lods
sahf
adc
andb
push
mov
pushf
scas
or
outsb
lock
push
loope
push
pop
inc
dec
mov
popf
adc
ljmp
mov
test
out
data16
jns
loope
aam
pop
sti
mov
rorb
std
mov
pop
fadds
jecxz
xlat
jmp
outsb
repz
xchg
lds
stos
mov
sub
popf
adc
push
sub
pop
and
push
xchg
test
mov
rorl
outsb
insb
mov
fbstp
xchg
fisubrl
push
repz
fs
pop
dec
mov
sub
inc
pop
les
xlat
stc
repnz
pop
cmpsl
mov
push
aad
or
mov
inc
cmpsl
jno
pop
and
sbb
xor
data16
fsubs
in
sub
sub
push
fs
fcoml
mov
mov
loopne
and
insl
nop
push
repz
jbe
fcmovnbe
arpl
jnp
adc
das
pop
ja
stos
pop
xchg
jne
xchg
popf
jmp
inc
push
add
pop
je
pop
pop
lds
sbb
bound
test
jns
scas
gs
cmp
loop
fdiv
inc
push
pop
sub
dec
arpl
ss
push
addl
rcrb
sub
adc
adc
add
mov
repnz
in
cmp
cmp
jne
xor
jecxz
mov
dec
popa
sbb
sub
jb
pop
mov
sbb
push
testl
dec
xor
push
mov
fwait
in
imul
leave
test
iret
iret
cmp
jb
and
jecxz
int3
sbb
fdiv
sbb
shrl
push
out
or
cmpsb
imul
pop
ror
mov
jns
imul
aaa
ja
xchg
data16
ds
test
faddp
add
shl
xchg
pop
pusha
in
cmpsb
call
int
push
movsb
push
jg
jne
nop
movsl
mov
aad
push
push
lea
lret
or
decl
mov
pop
outsb
imull
and
dec
sbb
inc
lret
push
dec
test
stos
mov
mov
sbb
mov
add
sub
mov
out
sahf
bound
iret
sbb
popf
or
test
mul
clc
pop
fistl
push
push
mov
cmpsl
test
add
mov
out
xchg
xchg
dec
out
hlt
nop
nop
lods
jnp
into
sub
call
pop
jl
xor
imul
jb
rorl
sbb
pop
test
jno
shll
add
push
jmp
movb
ret
push
ljmp
push
mov
orb
outsb
cli
mov
jns
sub
cwtl
or
imul
sub
push
stc
icebp
jno
dec
xchg
mov
mov
enter
mov
xchg
mov
cmp
add
insl
xchg
or
sbb
mov
xor
mov
xchg
movsl
sub
sbb
enter
mov
mov
sub
sahf
push
push
call
and
jb
pop
fidivrl
dec
pop
fnstcw
cmp
loopne
movsb
jmp
xor
out
repz
cltd
dec
loopne
subb
pop
push
jbe
je
es
sub
jne
jns
xor
fsubrs
mov
stc
cmp
or
nop
fwait
mov
insb
movsb
mov
xlat
mov
loop
mov
mov
imul
js
pushf
mov
dec
into
flds
enter
or
push
xchg
dec
pop
hlt
loopne
pusha
pushf
outsl
mov
mov
cwtl
mov
repz
inc
push
aas
push
jne
in
pop
push
pop
in
dec
in
ret
es
mov
mov
cld
push
shrb
xchg
or
out
push
dec
in
adc
loopne
push
cmpsl
iret
ss
mov
mov
lock
pop
xor
pop
adc
jmp
ja
mov
insl
sub
stos
in
dec
lahf
xchg
push
ror
pop
jle
ret
dec
jb
lock
xchg
sub
push
and
les
in
rorl
out
mov
adc
add
inc
cmp
insl
xchg
in
hlt
loop
mov
cmp
std
cwtl
fs
adc
test
pusha
mov
cmp
lds
andl
jae
lcall
or
aaa
pop
pop
scas
xor
lcall
stos
mov
imul
inc
sbb
sahf
and
push
stc
sti
pop
adc
add
sub
ss
sahf
imul
pop
mov
jge
sbb
push
push
ret
lods
fmull
nop
ja
repnz
xlat
cs
inc
xchg
andb
or
pop
pop
and
sbb
ja
out
inc
lods
pop
jns
sbb
xlat
sbb
sub
dec
stc
addr16
or
adc
js
xchg
lock
es
fs
fisubs
fcmovnu
aaa
testb
cltd
jmp
jge
sub
repz
adc
adc
jge
jae
pushl
call
xor
movsl
fwait
test
lretw
mov
repnz
aas
rorb
pop
jg
std
test
jl
leave
mov
jle
cmp
mov
add
push
decb
pop
dec
jge
push
pop
push
notl
outsb
xlat
jle
std
lahf
stos
lret
xchg
popf
rcll
lods
xchg
outsl
mov
stc
pop
sub
inc
push
xchg
jmp
stc
data16
xchg
push
stc
jnp
sub
xchg
cmc
inc
andb
lods
add
aas
mov
cmp
xchg
js
xor
add
movb
subl
and
sbbb
cmp
cmp
out
push
ds
call
add
fdivrs
cld
enter
adc
adc
dec
jb
xchg
lea
or
cld
popf
inc
mov
enter
mov
pop
push
xlat
and
std
xchg
xor
mov
or
cld
lock
mov
xor
int3
jae
ret
xor
ficoms
and
sbb
add
fdivrl
loop
jecxz
loopne
pop
inc
mov
je
aas
popa
jge
ss
bound
fnstenv
or
rcr
adc
movsl
dec
test
sarb
into
pop
push
pop
jae
lods
pusha
fs
movsl
xchg
add
adc
and
or
cmp
gs
mov
ret
lea
lahf
bound
push
inc
cmpsl
push
mulb
stc
pop
mov
jle
push
jo
and
cmp
loop
add
xchg
insl
ja
mov
fsubs
jl
xor
cltd
xor
imul
cmp
sbb
jne
lea
and
xchg
jmp
mov
cmpb
scas
lret
inc
push
loope
dec
pop
imul
jp
movsl
mov
icebp
or
scas
in
cmp
outsb
fistps
xor
or
push
fwait
or
and
add
push
inc
xor
dec
adc
shrb
imul
xor
outsb
cmpsb
or
bound
push
test
mov
or
rorl
xchg
jmp
mov
iret
mov
int
sahf
subl
mov
hlt
iret
js
loope
mov
jbe
imul
sbb
adc
sub
cmp
rclb
or
insb
xchg
push
push
jo
and
out
fimull
mov
lret
dec
and
pusha
fwait
mov
mov
scas
inc
add
xchg
add
mov
cld
or
inc
push
and
fidivs
mov
mov
and
hlt
pop
and
sub
add
enter
mov
repnz
aas
add
jmp
dec
in
lret
push
dec
add
add
lcall
scas
mov
cwtl
or
data16
inc
mov
mov
push
addr16
fdivl
andl
daa
mov
push
sahf
lret
dec
mull
pop
push
xchg
in
rolb
jb
sub
mov
mov
dec
pop
loop
aam
xchg
push
adc
sti
cmp
shrb
adc
mov
jne
ret
sbb
dec
sbb
jge
dec
and
push
pop
dec
sub
test
or
setnp
out
pop
cmp
nop
aas
imul
add
push
sti
xor
jo
scas
test
push
mov
cwtl
pop
xlat
xchg
pop
jne
inc
aad
adcl
jae
mov
xchg
jae
and
sbb
ds
fyl2x
adc
shrl
mov
mov
test
imul
fildll
xor
stos
adc
sti
jmp
movsb
cmp
adc
in
dec
gs
add
nop
and
repz
jmp
jbe
sbb
adcb
adc
xor
leave
add
add
leave
sub
jmp
inc
aas
pushf
dec
sbb
fwait
scas
add
cltd
inc
mulps
xchg
mov
je
inc
and
lcall
add
push
xor
jp
faddp
clc
push
add
fabs
mov
test
mov
outsb
rolb
or
mov
repnz
xchg
xchg
add
add
add
push
iret
push
xchg
jecxz
in
cmp
cli
pop
mulb
pop
sbb
inc
jb
fdiv
lods
mov
cli
add
push
mov
cli
adc
mov
adc
push
fcmove
orl
and
gs
loopne
leave
xchg
hlt
sahf
inc
xchg
or
fldl
lcall
lahf
mov
push
dec
cltd
add
outsb
xor
andps
mov
in
lods
fisubrl
mov
xchg
jo
jae
and
mov
xchg
cmp
sub
inc
mov
inc
dec
lds
push
jl
dec
mov
sbb
jle
insb
push
jne
out
xlat
push
lcall
inc
adc
jae
jns
lds
loopne
inc
stos
inc
add
pushl
inc
inc
xchg
mov
add
arpl
dec
cld
stc
je
cld
pop
fldcw
xor
fcmovnb
mov
pop
sub
mov
and
inc
int3
push
jnp
stc
xchg
cmpsl
repnz
inc
ljmp
or
sbb
stc
xchg
sti
inc
pop
adc
pop
mov
rcrb
mov
and
rcpps
cmp
or
or
ja
mov
mov
cmpsl
jecxz
push
lds
sbb
push
mov
push
pop
in
add
insb
in
jecxz
fsubrs
lcall
rcrb
je
ret
pop
sbb
movsb
movsb
dec
jecxz
cli
pop
data16
xlat
mov
lea
push
xor
dec
mov
or
imul
fsubl
xchg
cmp
stos
jne
inc
lret
adc
ret
shll
xchg
ljmp
lret
fstpl
mov
or
mov
enter
add
into
and
dec
ret
push
das
fbstp
clc
jge
push
push
pop
test
das
mov
leave
xorb
dec
jl
cwtl
sub
push
cmp
scas
mov
mov
pop
adc
in
push
adc
or
and
imul
jp
lock
add
jle
and
mov
iret
fdiv
push
adc
push
jne
fbld
inc
inc
ret
mov
fmul
fisttps
adc
mov
pop
xchg
in
cmp
mov
das
push
cs
cmp
repnz
sbb
jne
xchg
aas
aas
mov
arpl
sub
cmp
outsl
sub
ror
mov
pop
cltd
jne
adc
cltd
push
dec
cli
dec
ret
ljmp
shrl
cltd
cwtl
mov
or
repnz
push
cmp
nop
inc
pop
xchg
xor
inc
loop
fisttps
xchg
icebp
xor
pop
mov
cltd
iret
mov
mov
pop
sbb
jmp
cmpsl
pusha
repz
pusha
mov
ds
push
mov
mov
sbb
daa
dec
ret
or
into
push
push
add
lret
stos
fstl
jle
xor
nop
lret
mov
fabs
add
js
cmp
sub
dec
jecxz
push
push
lock
push
lods
shrl
mov
ds
pushf
js
xor
ret
xchg
ds
adc
fwait
push
test
lahf
repz
fdivr
mov
dec
je
insl
sbb
xchg
rcl
mov
cltd
insl
popa
sti
in
outsb
lods
fisubs
and
outsl
jns
add
mov
fstpt
adcb
cmpsl
dec
xor
jae,pt
or
inc
aaa
jp
xor
sbb
outsl
jns
loope
jmp
push
mov
andl
lods
jb
inc
mov
andl
and
pop
push
jbe
cmc
aas
dec
int
sub
jecxz
mov
cmp
mov
iret
cld
mov
inc
add
add
mov
mov
arpl
dec
in
test
clc
les
int
loopw
sub
fldenv
jle
push
xchg
and
fisttpll
stos
inc
popa
add
pop
repnz
gs
xor
xchg
jl
vmovhps
xor
mov
push
outsb
cmp
mov
loopne
pop
testb
outsl
fnsave
cli
in
ficomps
loopne
jg
addb
adc
cmp
imul
nop
repnz
cmp
add
imul
jo
push
in
xchg
sahf
rcrl
ds
inc
jl
repz
cwtl
add
sbb
movsb
nop
pusha
sub
clc
fildll
ss
rcll
xchg
out
and
arpl
inc
push
add
mov
jl
adc
sti
lods
or
push
lcall
cmp
sub
std
cs
lea
pushf
cmp
cmp
xchg
push
pop
sbb
rol
imul
test
dec
mov
cmp
sti
sbb
sub
in
and
or
stc
or
out
mov
mov
cmp
xchg
pop
rclb
xchg
icebp
in
arpl
mov
or
mov
cmp
pop
data16
inc
ja
fbld
or
fisubrl
pop
or
out
cmp
lock
cli
jne
jl
add
inc
fstl
push
push
lods
dec
inc
xchg
js
xor
pushf
repnz
mov
cmp
sar
jno
or
int3
add
aad
dec
mov
arpl
sub
ljmp
push
test
and
movsl
push
lret
jno
insb
loope
add
rcll
sbb
jg
jp
test
push
adcb
sbb
mov
insl
mov
idivb
popa
scas
imul
mov
cmp
test
pop
dec
cmp
sahf
sar
add
push
or
mov
dec
pop
jb
xchg
lcall
loop
cmp
or
pushf
xchg
cmp
std
mov
cltd
ljmp
inc
mov
push
push
shll
int
dec
jl
jns
shr
lcall
cld
or
mov
add
push
sbbl
mov
and
add
andb
jbe
sti
xor
repz
les
dec
gs
sub
ja
gs
mov
lret
add
jb
cmp
inc
mov
sub
dec
jle
push
jne
add
and
int
rcrb
das
cltd
sbb
jle
fwait
and
xchg
arpl
js
inc
les
imul
arpl
dec
push
mov
cwtl
mov
jno
mov
pop
call
nop
pop
xchg
xchg
adc
cmpb
bound
push
push
mov
adc
sahf
cmp
insb
mov
xor
pushf
inc
jmp
and
cmc
lea
aas
xchg
idivl
mov
xchg
stc
out
and
cmpb
lahf
jbe
fadds
add
jg
mov
ja
inc
and
movsl
add
pop
xor
push
mov
dec
and
dec
pop
jae
mov
stc
imul
enter
int
cmp
cld
cmp
add
test
or
into
clc
aas
inc
or
and
mov
jmp
cmp
ret
xor
push
pop
in
popf
inc
jae
test
add
movsl
pop
pop
test
cmp
push
xchg
arpl
sbb
pop
stc
jecxz
popf
jmp
call
lods
cmp
lret
xchg
cli
leave
ja
dec
out
jae
pop
loope
out
aas
cli
mov
jg
push
fdivrp
fucomp
mov
out
inc
scas
in
mov
fs
jmp
cmp
xchg
pop
mulb
cmp
pushf
mov
jl
repnz
sti
and
xor
jb
sub
les
pop
mov
inc
ljmp
shr
jo
jecxz
sbb
jl
popa
mov
pop
pushf
sti
cmp
lret
jmp
or
pop
inc
mov
icebp
cmp
pop
dec
pusha
push
lret
out
insl
cmp
push
popf
xor
xchg
addl
cld
jnp
xor
rcrl
stos
push
lea
aaa
and
stos
mov
cltd
mov
mov
push
movl
mov
cli
xchg
sub
jbe
mov
inc
push
cli
sbb
call
push
jmp
lahf
addr16
mov
push
dec
xor
inc
pop
dec
test
jge
and
insb
xchg
inc
loop
mov
push
test
fists
inc
sbb
sub
dec
ret
sbb
mov
cmp
inc
pop
jg
fstl
cmp
std
jo
stos
std
cmpsl
divl
pop
or
rcrb
incl
stos
fwait
jne
iret
mov
flds
sbb
add
imull
lock
in
push
faddl
adc
stos
out
sbbl
pop
cmp
mov
sbb
mov
jecxz
stos
and
inc
cmp
dec
mov
sarl
sbbl
jp
aaa
sbb
mov
pop
outsl
dec
mov
ja
add
mov
lret
jge
test
das
mov
pop
add
add
sbb
lock
fdivs
pop
out
into
pop
pop
xchg
fistpl
pop
stos
js
push
dec
out
pop
fimull
mov
mov
push
pushf
out
cld
inc
and
or
mov
das
iret
push
inc
cltd
jb
cmpsl
insl
popf
daa
pop
mov
mov
divl
lods
xchg
dec
cmp
sbb
mov
cmp
push
outsl
ja
test
outsl
lret
stos
push
arpl
push
filds
pop
sarb
inc
std
aas
mull
sub
pop
add
popf
out
adc
jbe
cmp
or
fldenv
ss
cmp
rcll
or
lods
loop
xchg
push
lret
and
jo
xchg
imulb
lcall
repz
pop
sahf
sbb
stc
pop
rclb
popf
dec
push
or
dec
push
flds
inc
or
stos
push
pop
or
das
sub
xchg
cmp
iret
cld
xor
lea
dec
sti
in
call
icebp
stos
inc
adc
and
loop
mov
fwait
jmp
loop
xor
shll
jle
mov
out
mov
test
icebp
sbb
stos
xor
call
add
xchg
push
dec
roll
and
xchg
xchg
dec
stos
insl
jno
fnstenv
loop
cmpsb
adc
scas
clc
xor
pop
fsubs
mov
jbe
mov
mov
sbb
and
pop
cmp
xor
dec
mov
mov
js
add
add
fwait
jnp
movsb
testb
add
jp
mov
fimull
jo
mov
mov
movb
icebp
lock
rcl
loope
es
adc
sbb
pop
push
repnz
std
sbb
xchg
fcomps
push
pop
out
jmp
shrl
outsb
dec
sahf
jp
inc
cmpsb
fists
ds
sub
test
mov
in
or
into
dec
stos
out
inc
add
mov
xchg
sbb
fmul
out
mov
xor
repz
ret
push
fsubr
push
mov
stc
int3
sub
fisubrs
xchg
sub
into
test
aad
out
add
fidivrl
gs
cmp
inc
adc
sbb
mov
int3
icebp
inc
out
push
inc
shll
add
xorl
loop
mov
sbb
faddl
les
fwait
jecxz
and
cmp
dec
jno
or
test
cld
mov
adc
mov
outsl
pusha
jmp
mov
aaa
xor
xchg
cmp
jbe
mov
mov
fcoml
dec
andl
lock
enter
rcrb
icebp
fdivs
mov
incb
jl
add
scas
js
rolb
mov
fdivrs
pop
mov
outsl
leave
rdpmc
ja
rcl
add
dec
fidivs
pop
jl
mov
lcall
repz
mov
push
movsl
dec
inc
dec
add
jg
roll
lcall
mov
cli
jb
or
pop
dec
sbb
mov
sbb
mov
out
mov
inc
out
and
repnz
push
mov
scas
jo
repz
and
dec
or
inc
outsl
xchg
imul
xchg
xor
aad
inc
scas
jmp
mov
dec
icebp
xchg
push
fwait
ss
pushf
mov
fdivrs
decl
xchg
mov
dec
xor
cld
sbb
sti
stc
in
pop
and
or
push
fidivrs
pusha
mov
std
or
mov
std
cmp
pop
sahf
push
pop
and
and
cmp
sti
sub
rol
cmpl
repz
inc
pop
stos
test
das
out
arpl
hlt
xchg
xchg
insl
mov
jle
cmp
pop
aam
mov
push
dec
bound
aam
insl
stc
inc
mov
popaw
xchg
and
cltd
or
imul
fdiv
mov
dec
inc
fmull
dec
lret
nop
dec
test
ds
pop
cmp
adc
lret
push
sahf
dec
adc
jmp
jae
cmp
repz
shlb
lret
fildll
sub
jno
sbb
popa
roll
push
dec
xchg
push
cmp
shlb
add
in
xlat
mov
push
das
repz
fs
xor
movsl
mov
push
inc
dec
xor
subl
push
inc
into
aas
daa
call
lods
mov
push
mov
pop
shrb
and
push
ljmp
adc
cmp
xor
aaa
sbb
cmpb
cmp
mov
xchg
pop
stc
pop
sub
adcl
ja
jmp
xchg
ficoml
pop
inc
lea
lds
push
push
mov
leave
lcall
cmp
sti
inc
push
negl
jmp
add
cmpsl
out
jecxz
jbe
in
ds
fstpl
std
mov
jns
test
iret
inc
shl
js
cmc
enter
lahf
inc
xchg
lea
lcall
xchg
push
lret
adc
push
ffree
mov
jno
mov
call
cltd
les
push
pop
sub
xchg
lcall
inc
mov
pop
test
pop
mov
pop
ret
dec
outsl
aad
ljmp
js
cmp
out
fwait
loopne
and
out
cmp
cmc
mov
aas
rorb
sahf
xlat
icebp
mov
jae
ret
scas
enter
or
fiadds
ds
and
addr16
xor
dec
sub
xchg
mov
rolb
mov
jg
dec
mov
push
orl
insl
rcl
push
mov
pop
imul
cmpl
sbb
add
xor
aad
or
lea
push
test
adc
mov
sub
fsubrl
js
lods
xchg
lods
xor
sarb
int3
or
dec
scas
inc
sbb
sar
bswap
iret
andb
cmc
mov
int
ljmp
adc
sub
sbb
jbe
adc
sahf
inc
es
adc
cltd
popf
lcall
in
push
xor
sbb
clc
daa
les
pop
lods
push
cmp
sbb
clc
mov
cmp
out
in
sub
mov
xchg
std
ds
sbb
mov
mov
mov
add
cld
or
or
aad
js
sbb
inc
lea
push
clc
ret
add
lcall
jno
nop
push
pop
push
mov
lea
dec
push
cmp
aas
jge
andl
movsl
scas
bound
out
lods
mov
lock
rcr
sahf
in
lcall
xchg
push
lea
jb
or
inc
xor
bound
outsb
cwtl
in
add
aam
jnp
mov
and
jmp
insb
les
andb
mov
push
jmp
fcoms
testl
cmpsb
add
sub
movsl
jnp
jl
sub
jg
push
add
push
lods
out
mov
cmp
push
pop
mov
mov
mov
inc
cli
mov
add
mov
idiv
js
fwait
inc
decb
sbb
loopne
sarl
fisubrl
out
shr
cmpb
pop
cmp
enter
in
push
and
fiadds
xchg
jmp
jnp
jl
and
into
fimuls
xchg
push
mov
jp
xacquire
pusha
xchg
jle
xor
xor
scas
out
pop
mov
fnsave
arpl
daa
mov
in
push
fdivl
dec
rcrb
into
xchg
lds
movsl
lea
ss
fisttpll
mov
jp
lcall
sbb
subb
fldcw
dec
mov
mov
dec
shl
or
dec
mov
sbb
push
enter
adc
shrb
jns
aas
dec
sbb
sbb
aam
roll
lret
xchg
rcrl
push
ja
nop
scas
stos
pop
icebp
jmp
inc
and
xor
pop
aaa
imul
mov
test
jecxz,pn
and
loope
pop
cmp
and
stos
push
popa
out
mov
push
inc
mov
cld
cmp
adc
fwait
xor
call
lcall
cmpsb
dec
adc
lds
loopne
pop
sti
mov
aas
cmp
jmp
pop
and
ret
mov
insl
ficoml
pop
cwtl
or
pop
push
testb
xchg
sbb
sub
lret
pop
cmpsl
test
popa
rcrl
lret
and
xor
orb
and
or
sub
out
mov
pushf
imul
pop
dec
jno
test
jle
test
lds
pop
sbbb
xor
inc
and
shll
fiadds
cmpsb
jo
sbb
push
dec
and
pop
fcomps
hlt
adc
addb
addr16
lds
fwait
je
fisubrl
mov
mov
in
cmp
rcll
insb
les
mov
popa
imul
push
adc
sub
xchg
or
cltd
push
test
xor
pop
pop
inc
rcrb
jp
popf
in
fidivrs
je
jle
add
or
inc
pop
xor
inc
mov
pop
arpl
addr16
dec
mov
je
dec
stos
push
idiv
stos
movsb
ljmp
in
scas
inc
ret
shlb
mov
mov
or
jge
jecxz
rorb
mov
pop
push
ret
ja
lret
and
adc
dec
loope
inc
add
sbb
pusha
jb
les
xor
cld
out
pop
mov
and
sub
or
mov
mov
cmp
mov
imull
sbb
cmp
and
sub
in
ret
xor
loope
sub
xchg
inc
pop
andl
mov
mov
nop
add
pop
pop
add
dec
inc
in
dec
push
inc
rclb
mov
enter
jne
outsb
xor
dec
add
xchg
divl
addb
pop
enter
dec
xlat
lds
inc
lock
cs
roll
sahf
rsqrtps
push
mov
jno
mov
adc
lretw
into
and
pop
cs
dec
push
enter
jecxz
dec
push
fnsave
sarl
fldl
in
scas
inc
mov
inc
jne
inc
shlb
iret
mov
inc
gs
ja
movsb
sbb
std
sub
jo
sbb
or
ljmp
fildll
inc
out
xchg
fiadds
ret
adc
arpl
enter
adc
loope
loopne
test
mov
adc
fndisi(8087
pop
cmp
sub
pop
or
movl
lret
jecxz
add
mov
sub
lret
pop
sbb
daa
push
imul
mov
cmp
ficoms
inc
out
pop
in
dec
int
push
add
aaa
fnstenv
rcll
loope
cmpsb
getsec
push
jnp
inc
cmp
fsubs
test
xor
test
je
fdivl
cmp
dec
and
cmpsb
in
mov
int3
cmp
cmp
mov
jnp
xor
push
mov
aaa
mov
mov
je
ja
xor
pop
cmp
enter
mov
outsb
and
mov
push
addl
xchg
into
mov
ja
std
ret
add
push
std
movsb
mov
and
mov
test
sbbl
mov
les
mov
test
stc
xor
and
sbb
inc
mov
outsl
adc
jl
pop
ljmp
or
imul
pusha
jns
into
mov
mov
imul
les
mov
jb
mov
xor
inc
cwtl
cmpl
xchg
aas
jo
movsb
icebp
outsb
daa
test
insl
push
mov
jo
mov
and
sbb
pop
inc
js
mov
sarl
shl
sahf
add
mull
imulb
leave
inc
push
lret
lret
lret
dec
sub
xchg
out
mov
inc
jae
and
mov
decb
adc
and
jo
test
mov
leave
xor
xchg
nop
mov
pop
test
lea
cltd
in
jmp
aam
iret
xorl
mov
dec
add
pop
jno
jecxz
fstpt
cli
fldl
mov
push
movsb
push
out
dec
or
xchg
fistps
push
loop
faddl
fsubl
jp
cld
cli
lods
lock
aaa
add
inc
and
clc
mov
call
and
dec
xor
les
and
add
sbb
cmp
cmc
mov
es
xor
pop
mov
aad
push
xor
or
xchg
repnz
cmp
imul
adc
into
mov
xor
adc
aad
mov
mov
cli
test
mov
cmp
addr16
js
movsl
das
jae
ret
jge
push
gs
xor
mov
daa
lcall
dec
sti
test
inc
add
lods
adc
mul
pop
leave
sbb
inc
and
dec
dec
mov
sub
adc
push
fldenv
mov
sti
mov
aaa
add
inc
cmc
fdivl
cmp
or
inc
int
ljmp
push
xchg
jbe
lods
adc
jle
repnz
lods
mov
ja
cmp
or
mov
and
xorb
sub
jl
xor
pop
add
add
repnz
dec
jl
mov
jle
inc
dec
adc
xchg
aam
mov
mov
in
xchg
push
push
inc
jg
push
or
loop
push
psubusw
call
sahf
popf
pop
inc
add
jmp
and
mov
and
pop
fs
xor
adc
js
sbb
popf
shr
shrb
movsl
jns
dec
xlat
jp
add
push
mov
cmp
inc
mov
aad
mov
xor
adc
push
adc
xlat
jns
push
mov
mov
mov
or
fisubl
in
xchg
inc
add
fs
mov
add
sub
dec
lahf
mov
loop
lods
inc
mov
inc
and
cltd
inc
mov
pusha
lock
repnz
push
cld
push
xchg
inc
fists
and
scas
inc
xchg
push
or
add
mov
pop
push
mov
mov
rorb
mov
std
mov
push
jo
xlat
pop
cmp
mov
push
xchg
lock
sbb
mov
call
or
out
sbb
ret
popw
popf
push
loop
pop
imul
sub
in
fimuls
mov
imul
in
loopne
aas
imul
ss
pop
inc
and
mov
xchg
xchg
stos
out
dec
dec
adc
xor
add
mov
rorl
aaa
xchg
hlt
or
pop
xor
mov
cmpl
adcl
fwait
add
movsb
sub
or
add
adc
jo
or
and
fistl
sub
cli
and
xchg
aas
mov
push
xchg
int
pop
fcmovnb
ret
idivl
movsl
sub
pop
jno
test
out
dec
sbb
inc
xchg
enter
push
cmp
jl
cmpsl
mov
std
cmpsl
fildl
mov
xchg
mov
ret
gs
hlt
jp
lock
rcr
adc
ret
mov
jge
lods
stos
jb
dec
repz
les
push
cmp
add
push
mov
or
out
inc
movsl
insl
call
inc
rorl
mov
inc
and
xchg
addl
sbb
push
or
aas
rcl
nop
cltd
pop
inc
dec
jnp
pop
xchg
cld
imull
push
imul
push
add
je
fcoms
dec
and
outsl
jle
icebp
mov
imul
mov
push
cmpl
ror
mov
jg
or
fisttpll
je
ficompl
cmp
mov
adc
nop
dec
mov
jecxz
sbb
fsubl
std
js
icebp
or
mov
adc
push
lods
stos
scas
mov
decl
jp
adc
fwait
aad
lods
sub
xchg
mov
pop
jb
mov
fisubrl
arpl
lret
push
pop
jno
add
clc
mov
cmp
pop
pop
pop
add
push
roll
rolb
in
and
dec
cltd
out
cmp
xchg
push
rol
jge
pop
dec
xchg
rol
cmpsl
enter
in
xchg
scas
loop
iret
push
mov
rorl
xchg
cltd
lret
xor
or
cld
rcrl
mov
data16
xchg
imul
cmc
mov
push
sbb
or
mov
cwtl
pop
data16
dec
push
dec
pop
enter
jge
pop
icebp
out
sbb
lret
mov
js
enter
lock
mov
and
xchg
add
mov
call
int3
fimull
mov
into
lret
pushf
cmc
fists
add
dec
and
jns
or
sub
mov
jmp
cmp
mov
sub
jg
pop
ss
jne
mov
and
in
pop
dec
fists
pop
iret
push
aaa
push
mov
xor
dec
sahf
jl
hlt
push
jo
inc
dec
jle
sub
enter
cli
jl
shll
pop
stc
fwait
pop
lahf
popa
jns
fsts
fsubrs
aaa
lds
stc
dec
dec
in
in
xchg
mov
out
mov
pop
mov
xchg
and
mov
xchg
mov
xor
xlat
fcom
dec
imulb
cmp
cmp
dec
dec
out
ficomps
dec
push
cli
in
mov
push
imul
jmp
xchg
int3
aaa
in
cld
inc
movsb
test
add
xchg
xchg
testb
dec
pop
adc
repz
mov
mov
adc
xor
das
cmpsb
stos
out
insb
ja
clc
mov
add
cmp
adc
or
lds
shl
sbb
add
xchg
dec
stos
push
subl
aas
fildl
push
out
lret
popf
inc
sbb
mov
and
in
pop
xor
inc
iret
xchg
sbb
outsl
mov
mov
decl
out
fcompl
ret
aaa
lods
mov
jge
gs
rclb
int3
push
sarb
addb
test
mov
pop
orb
cs
enter
stos
mov
andb
jae
daa
stos
int3
ret
mov
iret
pop
mov
test
test
fucomi
push
ds
push
mov
ljmp
jl
mov
loopne
insl
sub
das
out
leave
mov
stos
lahf
cmovne
movsb
ljmp
ds
mov
push
mov
dec
xchg
sub
jae
jae
jp
dec
pop
xor
fistps
loopne
inc
or
mov
jp
cmpsb
add
fwait
loopne,pt
jp
dec
dec
les
xchg
sub
mov
scas
xchg
pop
mov
jecxz
push
dec
inc
push
inc
adc
dec
sub
jle
ret
adc
mov
fbstp
enter
xor
add
outsb
cwtl
cwtl
gs
xor
push
test
je
push
cmpsb
pushf
xchg
dec
pushf
mov
mov
in
mov
xchg
sub
ret
cli
jne
pop
mov
jnp
or
test
sub
cs
pushf
or
ret
cmp
adc
cmc
mov
or
push
mov
adc
sti
aas
pop
aad
bound
fldenv
jno
or
push
xchg
mov
and
push
jns
mov
insl
lods
cmp
mov
push
bnd
mov
addl
movsb
mov
mov
pop
aas
and
addr16
adc
inc
aas
add
mov
mov
adc
lret
xchg
insb
push
mov
pop
hlt
inc
mov
out
mov
mov
rcrb
mov
mov
loopne
add
and
push
mov
dec
aam
outsb
xchg
add
lea
iret
imul
leave
dec
shlb
inc
bound
add
xlat
mov
xchg
push
aaa
test
insb
inc
sub
cmc
and
jo
mov
jne
xor
idivb
imul
ss
test
mov
in
adc
loop
mov
aam
xchg
mov
sbb
mov
vpmulhw
or
lret
mov
rolb
push
sub
shll
cmpsl
fwait
sub
fnsave
and
sar
xchg
aaa
jns
repz
jl
cmp
mov
sbb
push
jb
sbb
jb
inc
or
popf
rcr
je
jmp
jge
inc
pop
dec
push
xlat
cld
mov
call
adc
jns
xorb
dec
or
jp
mov
cli
adc
popa
call
cs
and
cltd
adc
sub
dec
dec
cmpb
jg
loopne
and
aam
cmc
subl
sbb
xchg
and
in
pushf
daa
jp
sub
push
outsb
push
mov
mov
aaa
push
pop
mov
es
or
les
shlb
daa
insb
mov
cs
rcll
dec
into
or
xchg
aas
sbb
pop
add
adc
nop
enter
enter
dec
fs
cmp
cmc
shlb
shll
dec
jl
popf
add
pop
not
mov
repnz
not
in
mov
xlat
push
jb
loopne
or
pusha
fwait
stos
pop
mov
loop
iret
bnd
loopne
paddsb
ds
popa
iret
out
dec
cmp
pop
mov
sahf
rolb
sbb
mov
addr16
sarl
inc
mov
or
and
push
pusha
mov
xchg
jno
popa
std
cli
cmpsl
pop
shrl
inc
call
push
daa
xchg
push
lcall
and
loope
clc
push
dec
adc
push
flds
xor
mov
and
test
daa
and
xor
mov
jbe
xor
divb
jp
xor
cltd
fs
addl
mov
rorb
adc
inc
push
jb
negb
and
out
mov
ss
cmpsb
cmc
mov
sti
in
movsb
xchg
xchg
lahf
jl
out
movsb
jne
cmpb
dec
jmp
outsb
rcrl
inc
sti
dec
mov
subb
add
jle
jne
sti
pop
xor
aaa
mov
rcl
push
xchg
int3
outsl
imul
pop
loop
pop
sub
dec
lds
dec
ret
popf
jp
cmpsb
out
adc
icebp
xchg
push
xor
cmc
iret
pusha
lds
stos
repnz
lcall
mov
popf
call
or
mov
adc
mov
nop
mov
int
inc
gs
pop
lock
xor
out
mov
inc
inc
mov
cmp
xchg
push
xchg
mov
or
pop
xor
popf
out
clc
xchg
mov
dec
jmp
gs
fnstcw
pop
popa
aam
fistpll
arpl
inc
push
mov
jne
push
divb
xchg
movsl
xchg
rol
imul
xlat
cwtl
negb
mov
dec
lods
push
jp
int
scas
mov
push
push
das
sub
clc
test
push
mov
js
js
fildll
pop
sub
jg
in
ficompl
mov
jge
mov
incb
call
pop
xor
icebp
pop
mov
vshufps
std
push
lods
pusha
outsb
adc
test
push
push
inc
mov
nop
sbb
mov
loope
or
xor
mov
scas
call
adc
mov
bound
pop
ret
xor
push
je
dec
xchg
movsl
xor
jecxz
insb
jne
arpl
jle
push
scas
shll
mov
cmp
enter
mov
fstl
shl
ja
daa
mov
mov
arpl
rcrb
pop
cmp
pop
dec
adc
scas
or
xchg
pop
mov
or
lahf
push
add
cmc
cli
insb
gs
pop
jg
xchg
mov
inc
loop
jbe
inc
lods
test
cmpsb
aad
lods
cmp
or
testl
stos
sar
scas
gs
enterw
jns
push
mov
fldcw
mov
stc
fistl
or
mov
repnz
mov
das
xchg
lret
ljmp
jnp
adc
xchg
rcrb
jb
inc
xorl
pop
lds
sub
test
int3
sub
add
sub
cmc
pop
inc
loopne
or
or
call
mov
jg
xorl
sbb
xchg
adc
cmpb
inc
xchg
in
fsubrs
mov
lea
out
mov
jno
aam
mov
or
push
lock
lcall
pusha
xor
fs
sbb
enter
dec
dec
aad
pop
add
aad
jecxz
out
pop
addl
dec
loop
scas
jmp
into
pop
pop
mov
mov
int
negb
cld
push
mov
mov
mov
or
xor
cwtl
loope
inc
xor
dec
mov
cld
subl
fwait
std
ror
pusha
or
mov
cmp
sub
adc
imul
arpl
push
mov
outsl
nop
pop
jbe
pop
mov
imul
mov
jge
xor
mov
jns
adc
popfw
push
xchg
int
pop
inc
hlt
or
add
dec
lods
mov
test
mov
pop
hlt
dec
xchg
out
pop
hlt
or
lahf
nop
aas
and
lret
sbb
fadd
insl
aaa
jle
pop
repz
add
popa
mov
add
dec
adc
icebp
mov
mov
in
mov
and
pop
add
pop
inc
xor
lods
mov
fisttpl
cmp
lods
vlddqu
cmp
les
xchg
or
pop
ret
imul
sub
and
cmpb
push
xor
mov
pop
bound
ds
mov
pusha
xchg
imul
sub
leave
add
int3
mov
mov
lds
push
insb
xor
sub
xchg
lahf
xor
or
lods
mov
rol
fisttps
outsb
jnp
pop
xor
cwtd
in
cli
test
jl
sub
jp
lds
ljmp
loopne
mov
out
sarb
jo
cmp
or
inc
mov
adc
lock
and
lods
and
mov
sub
or
inc
sbb
mov
push
jno
sbb
cmp
inc
jns
xor
fwait
cwtl
mov
dec
into
ds
insb
addb
sbb
adc
cld
xor
xchg
jb
fwait
xor
mov
or
pop
rcr
sbb
xor
push
sub
jnp
aaa
push
adc
cltd
das
movsl
dec
in
stos
pop
cmpsb
je
test
and
and
pop
xor
mov
mov
lock
sub
xor
adc
jp
leave
xor
repnz
dec
xorl
mov
outsb
es
in
add
ret
adc
sub
push
inc
sbb
xchg
fdivrl
pop
jmp
fwait
daa
fwait
adcl
adc
aad
mov
xor
js,pn
shrl
sti
adc
dec
clc
push
push
push
push
andl
insl
pop
mov
or
dec
addb
dec
sub
data16
mov
xchg
mov
jo
jmp
mov
mov
aas
mov
jg
sbb
push
shll
push
out
or
nop
stos
push
les
shll
or
mov
mov
inc
in
push
repz
divl
push
or
arpl
test
jne
push
push
aad
xchg
out
lods
decb
cmp
lcall
rol
jnp
push
add
int
sbb
xchg
fdivp
push
popf
loope
loop
pop
insb
ret
xor
dec
add
add
dec
fwait
int
dec
dec
movsb
jnp
lds
bound
daa
rcrl
mov
dec
icebp
push
push
out
daa
enter
fnop
mov
fsubrl
js
mov
cmc
sbb
clc
mov
ret
out
jns
xchg
jbe
data16
loop
add
adc
dec
jle
jo
dec
adc
add
sub
sbb
movsl
jo
arpl
cmp
ret
fwait
sbb
adc
cmpsb
add
xchg
stos
stc
xchg
jle
std
jo
int
adc
or
repz
std
test
pop
push
cmp
jae
xorl
ljmp
popa
mov
arpl
sbb
and
jecxz
scas
imul
data16
mov
movsl
adc
dec
insb
lret
sbbl
cmp
test
leave
fidivl
or
mov
stos
mov
adc
rclb
dec
dec
and
scas
push
xorb
fwait
out
into
leave
into
into
loope
mov
data16
cmp
mov
subl
js
inc
in
pop
cmp
sub
gs
push
aaa
mov
push
mov
mov
mov
add
fldenv
jge
and
daa
jne
repnz
popf
test
jp
jns
fnsave
outsl
test
iret
ret
push
scas
xchg
add
addr16
fwait
ljmp
jne
adc
in
outsl
in
pop
out
pop
sbb
aas
in
cmpsl
pop
out
sbbl
out
jns
xor
pop
ja
adc
shrl
leave
dec
fwait
mov
push
jne
jg
xchg
adc
push
cmp
mov
outsb
xchg
jne
inc
and
or
xchg
repz
lock
bound
dec
xchg
outsl
xchg
mov
push
leave
insl
jno
xor
aaa
js
inc
xor
insb
cmp
adc
pop
fdivrs
sub
mov
test
push
xor
mov
test
loopne
sub
pop
sti
pop
cmpsb
ss
inc
and
add
icebp
cmp
ljmp
rorb
pop
repz
pusha
jae
push
pop
fs
ljmp
xchg
lea
sbb
adc
push
hlt
lcall
inc
or
lcall
cmpsl
xchg
xor
sub
jnp
addr16
sub
xchg
ss
hlt
inc
jne
inc
shll
inc
fwait
xchg
dec
test
inc
mov
mov
pop
jmp
mov
add
jp
cltd
mov
pusha
pop
fildl
add
pushf
pop
push
cmp
push
nop
outsb
push
int3
or
ret
push
lcall
stc
in
mov
xor
mov
shll
sub
fistps
scas
stos
mov
out
rclb
xor
jno
iret
shrb
addr16
loopne
out
mov
test
dec
xchg
js
in
nop
test
pop
xchg
jecxz
add
rclb
add
pop
imul
bound
mov
xor
sub
sbb
orb
out
xor
loope
pop
dec
pop
cld
cmp
jmp
xchg
fwait
in
xchg
mov
push
test
add
ret
mov
push
mov
outsl
fsubs
call
pop
insl
dec
and
xor
in
xchg
xor
xchg
fs
call
fcmovbe
hlt
inc
iret
mov
rorb
lret
jb
push
mov
hlt
pop
in
lret
emms
out
inc
ss
pop
sbb
dec
push
loop
jne
mov
fdivrl
cmp
mov
push
call
jae
sahf
mov
dec
sbb
or
aaa
pop
fistpll
pop
and
xchg
jl
and
inc
lcall
jge
adc
dec
sbb
dec
mov
sti
cwtl
pop
and
xchg
out
sti
adc
lret
lcall
dec
lds
int
and
and
push
xchg
movsb
push
fsts
scas
incl
jb
mov
dec
mov
cmp
stos
ret
in
out
push
pop
jle
or
sub
xchg
test
xchg
dec
insl
gs
mov
mov
outsl
dec
pop
mov
xor
lock
mov
test
add
dec
push
xor
mov
pushf
mov
xor
jp
aas
loopne
sbb
and
push
lock
xor
data16
stos
jo
loope
scas
stos
mov
leave
push
or
mov
jge
loopne
dec
push
dec
add
dec
sub
jne
scas
repnz
jl
stos
or
mov
adc
int3
sub
or
cmpsl
cmpsb
mov
popf
sbb
clc
dec
sbb
or
add
mov
clc
mov
out
inc
xor
sub
pusha
jne
ljmp
mov
dec
xor
mov
sub
or
scas
jns
dec
xor
fdivrl
pop
rcrb
pop
in
cmpb
cs
lods
pop
sahf
sub
mov
notb
and
push
inc
negl
xor
cmc
push
sub
pop
stos
cmp
outsl
inc
and
imul
mov
cmp
dec
jno
icebp
or
xchg
rolb
in
imul
xchg
jl
lea
jge
push
into
fdivs
push
xor
sti
push
adc
in
and
add
xchg
scas
fimuls
arpl
dec
mov
xchg
bnd
arpl
jne
push
mov
sbb
cmpb
cmp
inc
dec
add
pop
jl
mov
xchg
push
mov
fsubs
fiaddl
jmp
dec
aad
movsb
movsb
data16
jmp
lds
lcall
and
adc
jne
dec
pop
add
xor
mov
jo
mov
lahf
in
imul
popf
mov
aaa
push
loop
dec
imul
push
jp
cmp
pop
jae
test
orb
mov
adc
push
xchg
or
icebp
dec
jne
aam
jnp
fwait
xchg
push
icebp
icebp
addr16
repnz
jle
fnstcw
sahf
movsl
popa
pop
lea
pushf
nop
test
sub
mov
jg
addr16
mov
dec
xchg
xor
outsb
loope
cmp
inc
fisubs
xor
inc
xchg
push
call
adc
add
cs
and
sub
cli
or
mov
addr16
mov
mov
push
repnz
jnp
mov
dec
cmp
lods
adc
and
out
xlat
scas
pop
shl
dec
pop
add
mov
movsl
cmpl
test
push
rcrb
cltd
dec
fwait
xchg
rsqrtps
mov
fdivrl
loopne
mov
mov
dec
add
pop
outsl
clc
ds
lds
and
xchg
mov
mov
adc
test
hlt
or
sti
sub
push
xchg
pop
jnp
push
xchg
inc
pop
jmp
sub
lock
test
jno
or
mov
xor
dec
das
pusha
jae
aad
mov
int3
sub
pop
cltd
adc
lea
and
sbb
adc
sub
fsub
cmc
mov
in
and
push
fnstsw
daa
fsts
scas
sbb
dec
adc
mov
out
cmp
xchg
ja
xchg
adc
std
cmpsl
cmp
sub
ljmp
out
imul
mov
int3
clc
dec
xchg
insb
stos
lds
or
inc
lds
jl
lahf
lock
in
in
fidivrs
mov
cmc
inc
pop
movsb
fucomi
das
orl
xchg
test
push
push
test
jge
ja
orb
ret
adc
ss
cmp
push
mov
pop
dec
jge
add
dec
or
cmp
dec
push
es
out
jnp
out
mov
jb
mov
jp
loop
jo
rclb
loopne
add
push
ret
outsb
inc
clc
sbb
call
mov
cmc
xor
pop
xor
in
sbb
dec
mov
scas
test
cwtl
cmc
test
outsb
xchg
pop
push
sub
sub
sub
je
ja
aaa
lods
inc
jecxz
cmp
icebp
mov
pusha
imul
test
mov
dec
push
add
inc
inc
pushf
inc
mov
jnp
stc
pop
mov
push
jbe
mov
mov
mov
or
dec
out
addb
test
xchg
or
dec
outsb
cltd
xor
sahf
aad
fists
cmpsl
xchg
repz
inc
lahf
test
cmpsb
lds
iret
daa
sti
aam
mov
fcmovu
xchg
adc
add
xchg
imul
or
adc
outsl
xor
fnstcw
js
das
gs
loop
mov
sub
subb
mov
mov
mov
in
jge
adc
fucomip
xchg
or
push
sub
imul
jne
adc
andb
fucomp
stos
fidivrl
bound
xor
inc
cmp
xor
insl
mov
push
sub
push
xchg
mov
lods
pop
popa
jae
jg
xchg
mov
mov
xchg
pop
cmpsl
outsl
movl
sahf
jne
lahf
inc
shll
xor
and
pop
add
in
lea
xlat
rorb
sbb
mov
leave
ret
dec
push
jmp
jne
loop
cmc
xchg
les
and
imul
mov
mov
gs
xor
cli
nop
push
push
mov
ljmp
lcall
bnd
aad
sbb
and
or
or
cmpsl
xchg
pop
ret
nop
adc
mov
or
loopne
or
xchg
mov
xchg
pop
in
dec
sub
movsb
mov
iret
aad
hlt
push
sbb
out
ret
lock
cmovns
mov
adc
inc
sbb
adcl
sub
push
mov
stos
pop
mov
xchg
cmpsl
sahf
add
or
test
mov
jbe
in
mov
lcall
stc
jge
jg
push
xchg
push
int
stos
scas
nop
popf
cmp
dec
xchg
adc
repnz
inc
sahf
sub
inc
cs
push
pop
dec
xchg
stos
mov
add
jp
adc
pop
je
inc
or
inc
int3
lds
fdivrl
xchg
jo
inc
inc
popf
out
nop
pop
pop
in
loopne
push
ss
addr16
jge
cmpsb
hlt
fcomps
jnp
ja
aad
cmp
jns
xchg
sbb
mov
mov
sub
dec
imul
jnp
jl
add
imul
icebp
xchg
xchg
nop
out
xchg
fsubp
fimuls
pop
adc
push
sbb
sbb
popa
push
xchg
sbb
fwait
cmc
or
cmp
jnp
sbb
out
sub
sub
es
push
xchg
aam
sub
mov
enter
stos
adc
jae
cltd
mov
or
sub
add
pushf
inc
push
mov
cltd
xchg
or
inc
mov
cmp
inc
addl
inc
mov
fcmovne
ret
pop
adcb
add
movsb
divb
add
movsb
icebp
jb
pop
inc
cltd
sbb
jnp
lds
mov
bnd
push
fisubl
stos
push
add
adc
and
mov
dec
sub
sahf
lods
addb
daa
std
and
pusha
out
incl
test
pop
addr16
shlb
movsl
xchg
out
das
roll
cs
rcr
dec
ljmp
loopne
lahf
pop
jge
xchg
je
lahf
shll
mov
inc
loope
mov
mov
inc
pop
mov
negb
mov
add
sub
xchg
mov
jnp
mov
cwtl
idivb
inc
xchg
mov
iret
ja
sbb
shll
fidivrs
add
outsl
incb
je
outsb
hlt
sub
jbe
jb
cmpb
dec
cmp
push
repnz
jl
cld
enter
or
lea
int3
sbb
mov
inc
xor
push
xchg
and
int
adc
jmp
ja
fildl
inc
push
jbe
popa
xchg
sbb
jns
fistpll
repnz
imul
jg
push
stos
pusha
cmp
fildll
mov
lds
in
or
faddl
inc
and
and
or
sbb
inc
and
ret
mov
aas
ljmp
dec
xchg
push
lret
mov
sbb
jl
jns
mov
int
arpl
sub
pop
loopne
sbb
adc
push
icebp
push
jg
mov
or
loope
xor
scas
pop
inc
dec
pop
push
inc
push
sahf
dec
xor
inc
pop
push
mov
cmpsb
cli
xor
sahf
sbb
bound
mov
in
lahf
adc
or
cmp
popf
stos
sub
xor
enter
lahf
cmp
in
dec
scas
data16
addb
add
mov
popf
and
jae
cwtl
mov
xorb
xor
and
std
outsl
aaa
or
inc
pop
jg
aam
sti
mov
mov
sti
icebp
cmp
mov
in
pop
sti
cmp
jb
mov
and
ss
pusha
add
cld
test
inc
add
pop
mov
loop
add
roll
jle
mov
sub
popa
inc
ss
test
pop
subl
ror
push
xlat
ret
lds
cmp
repz
outsb
push
ret
pop
test
mov
call
jns
mov
jg,pt
addr16
ja
ret
mov
mov
add
add
enter
subb
jle
cmpl
push
sbb
push
aaa
xchg
ja
push
iret
loope
out
xchg
out
pusha
iret
rorl
cmp
sbb
and
sub
and
daa
aas
mov
stos
scas
idivb
cmp
loop
subl
xchg
in
loop
jbe
cmp
cli
fucom
or
xchg
stos
arpl
pop
adc
jbe
sub
leave
ja
and
insl
rcl
dec
pop
mov
lea
inc
mov
pop
push
sub
out
cmp
pop
dec
or
loope
popf
shll
push
and
push
add
das
xchg
xor
xchg
hlt
adc
or
pop
mov
mov
add
sti
or
xor
mov
xchg
movsb
ja
inc
mov
jp
fmulp
daa
in
adc
sub
add
cwtl
in
pop
and
div
jb
mov
mov
loop
fimuls
andl
leave
sub
outsl
leave
mov
repnz
into
xorb
xchg
xor
mov
sub
pushf
std
mov
adc
das
insb
push
or
idiv
and
push
and
sub
sbb
in
movsl
adc
lods
pop
imul
xchg
pop
adc
add
sbb
sub
addb
in
push
mov
mov
adc
stos
jb
pop
adc
add
mov
push
adc
mov
xchg
xlat
adc
imul
sbb
jnp
outsb
movsb
test
loope
test
lea
adc
outsb
into
pop
stc
pop
add
jbe
mov
popa
out
xchg
mov
or
add
or
push
add
add
nop
cli
cli
scas
push
movsb
jbe
in
mov
movsl
lods
sti
mov
jne
adc
sub
test
ljmp
gs
scas
leave
rcll
inc
aad
xlat
mov
mov
mov
adc
mov
or
fstsw
add
mov
cwtl
mov
xor
nop
mov
add
gs
adc
mov
mov
clc
sbb
xor
cmp
sbb
movsb
popa
inc
cld
pop
and
jmp
push
jnp
cmp
add
xor
mov
push
lcall
je
xor
out
mov
pop
repz
sahf
push
addr16
dec
dec
dec
xchg
xchg
mov
xchg
mov
sti
adc
jb
cmp
mov
imul
mov
mov
test
jne
pop
int3
rcrb
divb
xchg
lock
test
cli
aad
push
push
push
sarl
out
pop
insb
jno
dec
ss
mov
popf
aaa
stos
pop
sbb
je
pop
shlb
mov
clc
and
popf
mov
cmp
cltd
cwtl
test
push
lods
mov
dec
pop
repnz
add
testb
iret
ret
data16
cmpsb
aam
in
nop
test
pop
roll
dec
mov
int
cli
dec
sti
lret
arpl
out
out
vmovss
cmp
sti
jmp
sbb
sub
test
dec
ss
popa
imul
jecxz
lret
cmc
jnp
mov
nop
sub
pop
sub
test
aas
repz
repnz
inc
fucomip
add
fs
pop
aad
pusha
pop
ds
push
dec
add
mov
movsl
adc
repnz
sub
out
jl
aas
call
xchg
push
mov
andl
out
pop
push
movsl
adc
xor
mov
scas
add
mov
push
ja
add
pop
cmpsl
mov
push
sbb
movsl
inc
adc
mov
cmp
inc
jb
inc
lcall
mov
or
jl
jbe
nop
pop
inc
in
jno
and
push
jnp
xchg
scas
aam
pushf
sbb
jle
inc
xor
jg
lds
push
bound
or
repz
push
push
xchg
fisubl
inc
xchg
cmp
popf
jecxz
cmpl
mov
leave
fcoms
jae
in
jae
sub
sbb
sub
cmp
push
orb
orb
mov
mov
ficompl
pop
outsb
imul
lret
push
xor
vfmsubadd132ps
ret
ds
mov
sbb
inc
daa
mov
in
sub
daa
fcmove
mov
mov
and
xchg
outsb
xchg
pop
jle
repnz
fisubrs
pop
or
ror
sbb
xor
ljmp
jno
bound
hlt
int
xchg
cmp
pop
dec
mov
dec
sarb
stos
dec
std
int3
jb
pop
jno
pop
inc
mov
add
movsb
sbb
mov
movsb
arpl
cli
outsb
in
test
movsb
popa
xchg
jb
and
jo
leave
lret
xchg
xor
dec
daa
and
pop
cmp
insl
and
mov
inc
jns
inc
sub
adc
in
sub
fyl2xp1
movsb
cmpsb
mov
or
not
jns
es
xor
cmc
rclb
outsb
sub
and
add
sbb
nop
ret
jo
inc
loopne
mov
push
xor
shll
pop
xlat
fwait
sub
mov
mov
imul
cld
sbb
fdiv
sbb
std
xchg
xor
pop
fcomps
mov
ja
mov
imull
sub
mov
iret
sarl
imul
mov
jbe
and
imul
addr16
cmp
push
push
fwait
sarl
int
sbb
mov
push
mov
rcr
cmp
je
test
or
imul
nop
pop
repnz
mov
imul
inc
adc
mov
and
rorb
cmp
or
add
orb
add
lcall
cmpsb
xor
aaa
test
mov
nop
bound
icebp
sub
es
dec
es
inc
cmpsl
icebp
aaa
cmp
and
push
push
xor
fidivs
loop
xchg
cmpsl
jb
sti
loopne
sub
dec
dec
jecxz
mov
or
push
mov
adc
fstpt
aas
push
cmp
mov
push
add
push
push
scas
mov
inc
and
test
cs
lret
loop
pop
faddl
cmpl
push
lock
in
popa
fucomi
inc
jmp
dec
push
icebp
test
mov
inc
inc
adc
mov
imul
ds
insb
mov
mov
sahf
das
dec
test
repz
push
movsl
sbb
in
fs
pop
pop
cs
push
andb
mov
ja
mov
cld
out
cvtps2pi
add
cmpsb
push
mov
push
cs
insl
dec
fcoml
rclb
push
xchg
xchg
out
xlat
int
push
pop
mov
enter
push
xchg
pop
or
loop
stos
xchg
and
add
insb
lret
inc
clc
adc
add
rorl
sub
scas
enter
xchg
out
mov
mov
out
stos
or
cmpsb
test
mov
in
hlt
and
xor
arpl
ds
aad
adc
iret
adc
inc
out
ja
inc
sub
or
mov
adc
add
es
sub
test
mov
loopne
dec
test
shr
mov
and
inc
addr16
test
iret
push
mov
rcrb
mov
aaa
in
lods
jg
jle
jnp
jne
negb
fnstsw
repnz
fisttpll
and
or
ret
push
fwait
or
sbb
in
xlat
jl
and
push
add
arpl
pop
lret
jnp
mov
mov
pop
push
pop
or
aaa
inc
add
ja
leave
mov
movsl
leave
mov
add
out
mov
xlat
cli
aad
daa
outsl
das
pop
insl
flds
xchg
and
leave
adc
icebp
shrl
das
shll
mov
fildl
scas
es
gs
neg
enter
in
xchg
xor
icebp
call
and
cmp
add
sub
sbb
ret
push
jne
leave
inc
inc
dec
cmp
xchg
and
lock
scas
add
repz
ljmp
sbb
roll
inc
pop
mov
fwait
or
nop
pop
mov
pop
jg
aad
and
cmp
mov
fimuls
push
mov
mov
push
nop
mov
pusha
inc
dec
out
repnz
ret
and
arpl
insb
push
inc
adc
mov
jl
fs
add
mov
fcoms
adc
xchg
das
out
stos
cmp
cltd
mov
cltd
icebp
outsb
popf
inc
push
pushf
pop
mov
lcall
xchg
xchg
mov
sarl
mov
sti
inc
and
or
loop
lea
lret
lock
sbb
cld
xchg
and
mov
mov
add
xor
jp
cmp
xchg
xor
cmp
cld
jae
rcl
pop
and
arpl
es
sub
ffree
cmpsb
scas
or
and
popa
aas
sbb
cmp
mov
jp
in
push
pop
ficompl
faddl
ja
test
adc
stc
jg
add
xchg
lret
mov
push
xchg
or
lods
in
movsl
in
add
ret
mov
out
sahf
xchg
xlat
jne
fstp
leave
aam
add
mov
inc
xor
mov
cmp
pop
fwait
xchg
lahf
cmp
pop
push
mov
div
popf
mov
pusha
sarb
imull
inc
pop
sbb
aas
ficoms
bound
loope
and
push
add
aam
fcmovu
mov
inc
insl
and
mov
push
push
xchg
add
daa
mov
lods
mov
lahf
out
or
nop
pop
in
decb
cmp
xchg
xchg
sbb
pushf
inc
cmp
xorb
and
jne
mov
xchg
call
add
mov
jg
ds
fs
mov
das
xbegin
add
jle
stos
jns
sub
iret
lea
out
dec
repz
adc
shlb
jb
outsl
lods
mov
lret
dec
mov
fldt
test
xchg
cltd
push
cmpsl
mov
push
push
les
jmp
cmpsb
loop
xchg
cmp
adc
scas
push
pop
sub
in
jecxz
aas
nop
sbb
or
push
mov
arpl
insl
out
mov
mov
push
lea
mov
lods
in
fisubrl
ljmp
mov
lods
scas
jnp
ficoml
lods
adc
sub
hlt
mov
xor
subb
leave
roll
shll
mov
dec
push
jg
jecxz
mov
sbb
pop
lock
ss
mov
pop
ja
mov
pop
outsl
cmp
add
cmpsl
cwtl
scas
cmp
pop
push
mov
jnp
sti
xor
push
rolb
push
cmp
sbb
or
js
sub
or
xchg
jne
mov
int3
push
add
cmp
loope
pushf
dec
xchg
aas
popa
and
dec
popa
push
jge
mov
ja
sub
andl
pushf
xchg
mov
test
jmp
or
sbb
scas
mov
js
inc
pop
pop
push
stos
movsb
mov
test
mov
sbb
jb
xor
adc
popa
push
xor
rcrb
mov
popf
and
sub
stc
mov
xchg
ljmp
test
mov
bound
or
cmp
jae
pop
ret
mov
loop
push
or
and
ljmp
mov
sub
js
mov
aaa
pop
vpackssdw
mov
jge
enterw
testb
outsb
push
sbb
in
insb
add
cmp
sti
mov
pop
cli
jl
sbb
dec
and
popa
pop
inc
into
sbb
or
ja
mov
dec
aaa
push
inc
clc
fildll
scas
or
push
sti
aam
mov
and
shll
jae
test
stos
xor
jbe
ffreep
add
mov
mov
cmp
dec
pop
fwait
pop
jle
ret
or
lret
movsl
jne
es
aaa
adc
inc
fdivp
dec
jnp
fimull
cmp
jmp
mov
testl
push
inc
xchg
cmp
mov
repz
adc
in
jmp
mov
push
aam
enter
lcall
and
js
xchg
xchg
test
xchg
jp
xor
push
lods
sbb
ret
push
sahf
dec
xchg
pop
shrl
subl
inc
lcall
popf
or
test
cmp
push
jno
mov
xchg
dec
pushf
mov
fdivl
push
xchg
xor
ja
xor
loope
mov
push
ret
inc
gs
xchg
lods
out
pop
xchg
leave
push
xchg
pop
adc
dec
xchg
dec
std
and
loopne
ret
mov
mov
push
push
pop
mov
pop
mov
jno
dec
pop
adcb
push
out
test
sub
push
and
inc
sbb
push
xchg
lret
ja
mov
rcll
jae
pop
lock
imul
push
scas
movsl
inc
js
or
sub
mov
cmp
sub
cmp
sarb
mov
mulb
add
adc
popa
lods
stc
push
cmp
movb
int3
rcrl
stos
or
jg
jle
enter
int3
mov
pop
cltd
jo
jns
lds
stos
stc
adcb
outsb
fs
cmp
add
aaa
xor
mov
jle
loop
out
js
aas
mov
pop
or
movzwl
inc
pop
cmp
ss
pop
pop
pushl
movsl
std
pop
sub
shll
out
andb
jno
in
xchg
inc
bound
mov
xchg
mov
fiadds
stos
clc
xchg
aam
xchg
jnp
sarb
test
pop
das
jle
pop
xor
jmp
jecxz
inc
popf
add
push
cmp
push
jecxz
mov
cs
jne
in
lret
repnz
or
std
xchg
mov
ljmp
sbb
stos
push
or
nop
dec
mov
dec
add
cmpsb
clc
fwait
inc
loope
add
out
repnz
popw
mov
mov
pop
pop
fists
xor
divb
sti
push
fistps
adc
loop
jle
jle
jp
inc
imul
lret
or
cli
cwtl
sbb
clc
cld
lret
cmc
xor
xchg
add
inc
cmp
mov
lcall
jecxz
lods
rolb
jne
sub
jnp
call
cld
aam
divl
sbb
sbb
sub
lahf
xor
and
gs
call
lret
cld
scas
lock
ret
and
dec
mov
lret
dec
push
test
and
rol
mov
sbb
cmp
jmp
sbb
scas
sub
add
add
mov
mov
pop
ret
dec
fdivs
popf
insl
sahf
sub
js
js
stos
iret
push
js
notl
dec
nop
sbb
loopne
pop
push
push
add
cmp
pop
loop
mov
es
nop
cmp
loopne
jnp
adc
xchg
jp
imul
out
clc
jbe
or
mov
daa
cmp
enter
pop
mov
dec
adc
adc
test
dec
popf
jns
xchg
nop
loop
outsl
mov
lret
push
sar
xchg
pushf
push
imul
xor
mov
or
int3
das
ret
stc
cmp
nop
popa
pop
add
stos
lds
std
rorl
flds
gs
push
pop
addr16
scas
cltd
sub
mov
pusha
ror
insl
pop
ja
repz
loopne
sub
mov
scas
mov
lahf
inc
xchg
mov
stc
add
loopne
stc
setp
xor
ds
cmp
dec
aad
jecxz
jae
jmp
push
mov
mov
mov
jnp
out
mov
pushf
add
adc
jno
adc
sbb
xor
pop
cmc
and
inc
ret
mov
mov
stc
pop
test
out
dec
add
lds
or
push
imul
jb
adc
push
lcall
das
cmp
shld
insb
pop
inc
daa
pop
sti
xchg
mov
repnz
icebp
mov
fs
and
ds
shrl
sub
or
mov
push
pop
lods
add
stc
mov
mov
pusha
scas
add
push
mov
icebp
sbb
inc
cmpsb
dec
xchg
notb
cs
dec
iret
dec
mov
cmp
ds
or
xlat
push
jo
xchg
or
loope
test
dec
adc
sub
and
xchg
pusha
outsl
mov
daa
push
or
mov
push
xchg
xlat
notl
leave
inc
and
js
fildll
or
jae
jae
dec
xchg
mov
cmp
divb
cli
adc
jo
inc
lahf
jg
andb
pusha
sti
pop
lock
mov
adc
dec
push
sahf
xor
sbb
pop
dec
icebp
iret
popf
enter
in
mov
daa
add
rolb
dec
lcall
push
pop
xchg
out
aaa
and
or
inc
push
inc
cmpsb
fnstcw
test
inc
stos
push
pop
xor
jle
test
in
lret
inc
pop
fcompl
mov
testb
xchg
pop
int3
push
sbb
fsubp
mov
add
pushf
mov
cmp
fcom
je
mov
dec
add
lea
push
lock
xchg
nop
jle
pop
push
push
xor
adc
dec
jp
push
and
scas
mov
adc
xor
js
divl
or
mov
or
dec
pop
add
push
in
loop
andb
jns
mov
add
loop
popf
call
inc
xchg
mov
lcall
nop
lret
add
addr16
mov
ret
sarl
cmc
or
mov
iret
iret
nop
lahf
xor
lcall
xchg
inc
add
arpl
mov
push
clc
cmpsl
psllq
dec
inc
lahf
add
sub
push
sahf
add
and
or
mov
mov
cmp
push
ljmp
pop
and
add
icebp
nop
inc
mov
jp
xor
arpl
mov
add
gs
dec
popa
mov
pushfw
jmp
xchg
icebp
ror
jns
add
fdivr
inc
mov
xor
rcr
sbb
int
aam
fcoml
dec
adc
adc
in
jg
pop
jb
ja
shll
mov
jl
push
shrl
xchg
cmpsl
je
cmp
fwait
sub
sbb
scas
push
mov
mov
push
es
push
mov
push
add
mov
xor
aad
dec
inc
lock
xor
aas
xchg
inc
bound
fdivl
xchg
sbb
mov
movsb
or
dec
push
movsb
inc
mov
addr16
mov
into
nop
int
mov
mov
aas
sti
pop
testl
mov
dec
and
in
pop
cmpsl
lcall
add
sub
imul
sbb
fldenv
scas
cmpsb
scas
push
mov
sbbb
sbb
sub
sbb
roll
repz
sub
scas
lret
test
xor
jo
arpl
add
in
ret
add
lcall
ljmp
rcll
les
adc
inc
and
stc
push
push
sbb
int
sarl
sub
fidivrs
mov
subl
mov
sub
xor
add
mov
or
xor
fstps
fcompl
cwtl
loopne
and
insb
and
xor
xor
sub
inc
ret
repnz
sbb
in
sub
pop
mov
xsha1
cmpsb
push
stos
xlat
cmp
lds
cmp
enter
inc
cvtdq2ps
adc
cmp
or
cwtl
xlat
bound
imul
clc
lock
jmp
aas
xchg
lret
jg
jne
mov
incb
xchg
dec
push
ret
fistpl
adc
push
add
out
test
mov
or
add
shrb
jmp
jp
mov
ds
lods
inc
cmp
arpl
xor
adc
push
cwtl
daa
xchg
cmp
xchg
mov
pop
or
lcall
ror
sub
adc
in
and
rol
cli
cmp
lods
lds
loope
xor
mov
jmp
arpl
dec
loopne
daa
repz
push
addb
xor
clc
mov
push
cmp
mov
call
jle
test
pop
test
ja
aaa
jne
cmp
int
or
sahf
or
sbb
mov
int
test
mov
push
and
adc
dec
xchg
sahf
jmp
test
daa
testb
cwtl
mov
dec
stos
sub
lock
jae
sti
push
push
ret
ja
adc
dec
cmp
pop
into
fcoms
mov
or
mov
pop
pop
aam
test
bswap
sbb
mov
dec
sbb
test
inc
cmpsl
xor
iret
lods
in
mov
push
or
push
les
add
mov
pop
scas
aam
mov
mov
bound
imul
sbb
or
xchg
mov
jge
jl
xor
lahf
dec
sahf
jecxz
cltd
jno
sbb
aam
adc
push
ja
out
or
imul
cld
fwait
arpl
daa
inc
insl
sbb
dec
in
outsb
stos
xor
ret
sub
mov
jl
rcrl
push
lcall
mov
mov
fisttpll
and
push
mov
stos
jl
mov
or
dec
push
mov
ljmp
sub
mov
add
int
cli
mov
shrl
orl
rorb
jno
movsb
pop
and
mov
or
jno
and
ss
jnp
mov
jecxz
shl
mov
jecxz
inc
popl
sub
adc
pop
or
pop
sub
cmp
rclb
in
imul
lcall
jge
stos
pusha
mov
stos
mov
leave
jp
divl
int3
jb
sub
adc
sbbb
ret
gs
cmp
mov
ja
jmp
dec
inc
push
xchg
popf
clc
sti
sets
xor
out
or
pop
add
xchg
ror
jb
scas
push
scas
sub
in
sti
and
adc
iret
stos
inc
inc
movb
xchg
push
mov
insb
test
lods
stos
mov
xor
jle
xchg
cli
jo
call
cmp
push
pop
gs
mov
stos
mov
icebp
jne
lahf
aam
mov
test
movsb
mov
push
cwtl
lahf
jno
pop
out
sbbb
dec
rcl
or
ljmp
adc
pop
sti
cmp
addr16
mov
fstl
jo
cmp
cmp
lret
mov
jne
or
push
jnp
cld
mov
mov
and
rcrl
push
rcrl
pop
or
into
in
mov
ja
test
jmp
enter
inc
das
fcmovu
fimull
jo
xchg
test
dec
xchg
ret
test
xor
push
push
xlat
mov
pop
dec
sbb
fnstenv
pop
loopne
mov
test
pop
pop
pop
aad
dec
mov
sub
rcrb
dec
adc
inc
xchg
mov
test
mov
push
push
push
cmp
or
push
fldt
int
xlat
aas
dec
pop
cmp
popa
int3
rcrl
sbb
jae
push
ret
jg
inc
cmpsl
mov
or
aad
jmp
jle
xlat
arpl
mov
mov
scas
pop
add
imulb
je
dec
or
lock
adc
mov
dec
stc
push
vmovsd
sbb
into
aaa
pusha
and
cmpsl
or
and
or
mov
or
cmc
iret
push
dec
or
movd
fnstcw
mov
cmp
push
push
test
inc
jne
inc
adc
xchg
jbe
xor
loop
fbld
sahf
xorl
sub
jo
out
inc
jge
push
mov
pop
ficomps
sub
mov
in
in
test
and
lcall
jmp
sub
pusha
shl
imul
rcrb
rorb
jp
pop
jnp
xor
pop
or
ss
andl
cmp
pop
xor
repz
out
cmpl
xchg
stos
cmp
add
mov
xchg
mov
fisttpll
adc
sub
push
adc
fwait
sub
mov
dec
rclb
inc
mov
lahf
push
inc
idivl
pop
pop
jbe
cmpsb
pop
sbb
insb
xor
xchg
popf
popf
ss
cs
cmp
adc
fcomip
sarl
es
subl
cs
pop
push
xor
lods
jle
cld
ret
sbb
gs
push
mov
push
leave
popa
dec
andl
or
int
in
sub
push
aam
shrb
scas
repnz
adc
insl
outsb
orb
loope
cli
mov
dec
mov
dec
xlat
ror
stos
sbb
or
pop
xchg
into
lret
mov
inc
js
pcmpeqb
lret
pop
mov
out
pusha
cmp
js
add
mov
jmp
rol
test
test
adc
jge
dec
pop
xlat
je
push
mov
push
push
xor
scas
bound
push
popf
into
push
mov
fsin
ds
cmp
insl
cmp
fwait
xor
hlt
imul
pop
or
add
mov
pop
xor
fs
and
and
icebp
cmp
and
cltd
roll
or
add
sti
jmp
and
sbb
dec
mov
decl
mov
xchg
sbb
adc
cmp
or
xchg
lock
mov
jl
xorb
push
xchg
cmp
sbb
repz
mov
push
pop
mov
mov
xchg
movsb
mov
and
mov
sub
movsl
add
add
in
pop
add
iret
leave
sbb
shlb
pop
jmp
add
mov
pop
dec
out
daa
add
add
negl
aad
ja
stos
and
cmc
adcb
pop
add
jp
fmulp
out
call
add
aas
les
inc
shlb
mov
push
jmp
xor
cld
mov
mov
cmp
sub
repnz
fwait
clc
ficompl
or
dec
int
cmpsl
cmpsl
daa
subl
dec
mov
in
cs
xor
rorl
dec
adc
jb
rcl
xor
out
stos
das
and
mov
out
cwtl
xor
jnp
enter
jne
rclb
rcrb
aam
add
filds
pushf
push
xchg
aas
push
jno
test
lods
push
mov
inc
fnstcw
pop
movsl
dec
ret
and
std
mov
fisttpl
xor
and
mov
push
ja
push
and
loope
pop
movl
mov
lea
dec
fidivrl
pop
pop
push
ds
sub
sahf
xor
push
jl
out
adc
adc
call
les
aas
xchg
int3
int
ror
lock
pop
movsb
xlat
pop
scas
mov
data16
jl
movsl
jbe
bound
daa
adc
mov
mov
ds
mov
fmuls
and
mov
movsb
mov
push
lods
bound
add
std
mov
push
out
pop
mov
pop
push
test
int3
repz
jns
cmpb
xchg
jmp
xor
dec
outsl
add
das
xor
roll
dec
movsl
cmp
mov
inc
or
or
stos
push
pop
pushf
adc
cs
out
mov
fsubrs
faddl
cmpsb
scas
jle
ss
dec
sub
jae
or
aas
xchg
xchg
inc
inc
xlat
cltd
xor
into
lds
adc
mov
xchg
mov
rol
and
call
ja
lods
xchg
leave
add
stos
mov
out
sub
jp
inc
push
push
fnstcw
hlt
jae
dec
dec
leave
es
leave
push
pushf
lds
das
fiaddl
ficoml
jae
inc
adc
xor
int
jbe
out
and
push
clc
insl
fwait
jnp
test
mov
sti
or
mov
sub
and
stos
out
cld
mov
dec
fcoml
test
fs
jl
cmp
gs
mov
cmp
sbb
xchg
xchg
mov
xor
mov
mov
jae
sarb
mov
mov
loopne
sbb
cltd
xchg
cmp
cmp
jge
leave
loopne
shlb
flds
test
js
sbb
and
pop
and
fcmovne
push
call
add
sti
aam
pop
inc
xor
std
jo
insl
xchg
cmp
pop
popa
nop
hlt
sti
push
rolb
sbb
mov
push
cmp
fisubrl
inc
mov
lcall
insb
nop
push
dec
or
emms
jecxz
jg
inc
out
popf
cwtl
imul
push
mov
rcr
push
outsb
cmpb
outsl
movsl
mov
push
jl
ljmp
aas
adc
mov
sbbl
popa
iret
cwtl
cmp
jp
or
inc
aam
pop
call
cli
fildll
cld
push
aas
add
aas
push
out
je
faddp
pop
bound
enter
xchg
mov
push
sbb
popf
movsl
call
adc
ficoms
je
push
test
lahf
sbbl
fcoms
or
dec
xchg
insl
cs
xorl
jnp
lret
lahf
mov
dec
popf
mov
or
je
push
lds
add
sbb
fisubl
push
dec
pop
pop
jmp
dec
in
mov
int
jle
call
cmp
lahf
add
mov
cmp
lock
aam
jae
addb
orb
mov
mov
pusha
in
mov
pop
mov
mov
sub
mov
and
test
xchg
jl
bnd
aaa
loop
mov
scas
std
lock
mov
mov
cmp
pop
jnp
push
pop
lock
xor
cmpl
test
shl
add
xchg
je
loop
mov
js
mov
sbb
jbe
xchg
adc
fs
out
push
pop
inc
sbb
lcall
jg
ds
imul
jl
test
and
jg
dec
jecxz
mov
shr
rcll
sub
add
sbbl
jmp
out
cli
call
jns
jle
xchg
fmull
fistpl
test
cmp
sub
or
cli
ljmp
lods
rolb
repnz
shlb
iret
sti
mov
mov
mov
jb
push
repz
dec
arpl
mov
xor
xor
out
sbb
mov
loop
cld
ficoms
dec
sbb
rcrl
jno
xor
xchg
rcr
fstpl
mov
es
test
adc
sahf
scas
sar
bound
mov
int3
push
xchg
mov
cs
int3
pop
lea
and
jle
femms
dec
xchg
mov
addr16
aam
and
dec
inc
lods
pop
or
cmp
lds
sub
data16
lea
incb
mov
or
sbb
push
jne
dec
adc
pop
aad
in
add
xchg
loopne
repnz
xor
jbe
and
or
rcrb
sahf
adc
sub
add
aam
das
add
test
test
es
loope
mov
les
clc
push
fdivrp
sar
cmc
sbb
aam
sbb
shl
push
test
pop
out
ret
sub
fstpt
push
imul
out
aam
clc
mov
and
xchg
sbb
mov
out
or
mov
aas
xchg
sbb
xor
imul
xor
imul
xorl
pop
pop
in
icebp
mov
jae
ficoms
repnz
fwait
nop
mov
and
aam
lcall
and
int3
xor
push
adc
sti
push
xor
pop
pushf
mov
mov
leave
roll
and
mov
out
sbb
notb
idivl
aas
dec
lret
cmpsb
sbb
inc
and
fists
add
xor
fs
mov
lds
sbb
mov
sub
xchg
mov
cs
xor
in
adc
iret
cltd
stos
push
mov
and
into
adc
pushw
push
enter
gs
mov
test
enter
sahf
add
hlt
pop
lods
daa
sub
push
or
int3
jge
fs
jae
or
and
loopne
add
pop
jl
sbb
test
sub
jno
jmp
or
ja
push
jnp
jg
sti
inc
inc
iret
popf
orl
pop
and
sbb
sbb
xchg
jne
mov
mov
pop
mov
sbb
test
add
inc
fldenv
and
out
sbb
or
incl
pop
fsubs
and
inc
gs
inc
fs
push
or
addl
into
mov
cmc
stc
sahf
test
movb
incb
stos
xor
push
loopne
push
add
add
pop
dec
xor
ss
sub
stos
lret
je
xor
sbb
fwait
sti
pop
jl
cmpsb
cmc
xor
ret
sub
and
jecxz
dec
push
add
insl
repz
scas
mov
jg
mov
lcall
popf
scas
sti
inc
mov
mov
loope
lds
or
sbb
mov
fs
dec
out
in
and
lret
jae
and
into
cmp
xor
addr16
mov
mov
or
jne
or
dec
pop
and
fnsave
inc
cmp
fstl
aaa
add
adc
mov
cmp
sbb
sub
test
mov
push
xorl
cld
imul
cmp
xchg
jl
sti
icebp
push
orb
cld
fisubs
pop
and
sti
addr16
idivb
pop
test
xchg
pop
fisubrs
out
addr16
or
xchg
hlt
out
outsb
cmp
cmp
mov
lods
mov
rcl
cltd
ret
mov
xor
mov
jno
fdivs
es
loope
cmpsb
out
sbb
mov
dec
out
mov
cld
shll
in
sub
ret
xchg
jge
mov
sbb
push
sub
ljmp
mov
aam
cmp
enter
ja
dec
ret
adc
jno
mov
out
leave
inc
jecxz
sbb
mov
divb
xor
adc
mov
sub
pop
lcall
add
add
mov
sahf
jns
clc
mov
push
push
divl
adcb
mov
push
shrl
push
cld
or
sbb
lahf
or
icebp
dec
mov
adc
sbb
clc
pop
mov
test
push
test
xor
xor
adc
pusha
jb
lods
pop
and
sbb
pop
sub
xchg
repz
imul
loope
dec
add
pusha
fs
leave
sub
stc
jb
or
mov
out
popa
pusha
mov
push
jne
jnp
je
dec
popf
jp
btr
pop
leave
jle
lods
xchg
test
ja
out
les
xor
xor
stc
test
sbb
sub
scas
dec
scas
negl
add
cwtl
sahf
xchg
pop
push
ds
cmpsb
xchg
pop
push
inc
xor
popa
cmp
or
loopne
inc
ret
jmp
mov
outsl
popf
mov
decl
aad
mov
pop
sbb
dec
aad
or
inc
ret
fsts
mov
adc
mov
popf
pop
rorb
and
add
sub
sbb
and
dec
cmp
scas
pusha
test
jae
inc
push
sbb
sub
xor
pop
sbb
cmc
bound
xor
fwait
adc
inc
lock
xchg
jae
divl
mov
adc
cmp
inc
add
or
movsl
rclb
das
insb
mov
jmp
shlb
dec
push
fnstenv
inc
cwtl
mov
adc
mov
dec
adc
stos
mov
dec
aas
inc
add
cwtl
dec
fisubrl
js
mov
lahf
adc
xchg
popa
xchg
rorb
mov
add
cltd
popf
icebp
es
aas
dec
mov
mov
enter
xchg
sub
push
dec
repz
push
dec
lahf
setae
fdivrl
jbe
pop
jnp
cmpsl
insb
movsb
cmp
jnp,pt
loop
xchg
xchg
test
inc
cmpsb
data16
test
xor
iret
inc
xchg
jge
and
pushf
shrb
cmp
push
loopne
pop
push
add
xchg
imul
mov
mov
movsb
jg
popf
mov
je
and
dec
xchg
mov
aam
push
test
jmp
bound
lods
mov
xor
pop
orb
fstps
fcomi
out
inc
inc
mov
inc
or
test
in
pop
inc
sub
xor
jb
loopne
mov
fs
lock
cwtl
push
jle
bound
pop
out
inc
cld
aaa
ds
insb
or
rcll
fdivr
and
sub
roll
in
stos
push
int
es
push
arpl
sbb
add
ds
loopne
pop
test
sahf
leave
int
xor
inc
xchg
pusha
pop
xchg
aad
sub
inc
movsb
hlt
push
mov
icebp
dec
ret
pop
stos
mov
pop
fs
fwait
xor
cltd
test
mov
test
addl
jl
mov
sub
out
lret
testl
daa
mov
jmp
into
and
enter
mov
das
or
jl
cmp
pop
mov
xchg
pop
int
push
cmpb
xor
iret
fstps
push
push
add
add
dec
add
lahf
stc
and
stos
mov
sbb
add
sti
ficompl
sub
imul
decl
sahf
jno
jnp
mov
and
lret
inc
mov
xchg
std
add
cmpsl
or
mov
push
daa
cltd
clc
dec
xchg
loopne
mov
mov
insb
push
das
jae
pop
inc
fmuls
insb
sub
repnz
add
sub
aad
mov
pop
data16
push
jne
movsb
jle
push
mov
pop
fnstenv
mov
dec
jecxz
subb
inc
movsl
fs
roll
inc
jns
or
jge
or
sub
xchg
xchg
add
sbbb
push
pop
into
sti
push
lret
inc
fwait
popa
mov
xchg
dec
mov
shr
xchg
and
xor
test
stc
adc
popf
jecxz
icebp
pop
int
loope
cmpsl
pop
mov
mov
pop
outsb
jb
lods
es
mov
orl
push
movsl
ss
fildll
aaa
pop
jge
xor
sub
push
data16
out
cli
movsl
jo
push
rcr
dec
das
sbb
adc
pop
fbld
jge
push
leave
jns
lods
mov
mov
pop
out
cmpsb
or
js
jne
and
xchg
into
or
mov
cmp
pop
jnp
or
mov
ja
pusha
fsubrl
pushf
push
loopne
iret
das
add
loop
adc
dec
mov
ficoms
fcoms
rcl
mov
fisttpl
pop
and
scas
aam
jmp
stos
leave
es
adc
mov
mov
stc
data16
pushf
scas
xchg
mov
xlat
xlat
aas
out
sub
inc
mov
cmpsl
cli
pop
popa
call
mov
aas
or
push
inc
sbb
mov
fdivrs
lds
jbe
sub
mov
add
mov
add
shlb
aam
lret
inc
and
lods
dec
mov
sub
loop
push
xor
jmpw
bnd
fsts
in
roll
and
mov
inc
loopne
mov
movsb
mov
and
xor
scas
lahf
into
imul
cld
daa
xchg
ret
mov
imul
inc
test
bound
jle
xor
lret
outsl
popf
dec
adc
aad
jnp
mov
ljmp
mov
sbb
mov
aad
out
enter
push
jecxz
sahf
dec
cmp
js
ljmp
jle
push
push
outsb
sahf
jae
sarb
sbb
addl
sub
bound
lods
ficompl
cmp
cwtl
hlt
aam
imul
mov
test
ss
je
jecxz
mov
ror
loopne
cltd
es
mov
dec
jne
jmp
in
and
and
xor
add
int3
test
repz
adc
cmp
fmull
pop
dec
mov
add
pop
rcrb
push
add
in
dec
test
das
push
xchg
dec
jecxz
mov
lret
clc
jp
dec
push
outsl
fsubrp
add
mov
out
out
dec
imul
cmpsl
mov
lods
mov
sub
add
mov
aad
mov
add
movsl
outsl
in
jp
xor
out
mov
stos
adc
mov
popa
gs
cmp
sbb
push
cmp
hlt
aam
test
aaa
cmp
push
imul
push
jo
mov
and
hlt
adc
jp
ss
mov
sbb
insl
mov
scas
cmp
or
dec
mov
test
xor
mov
sub
int
sbb
mov
add
cli
fcomps
xchg
jg
mov
aad
mov
jne
leave
cli
xchg
ret
cmp
inc
sbb
sub
ja
outsb
aam
repz
mov
cmpsb
int
roll
fisubl
fdivr
out
fstpl
xchg
pop
push
xchg
popf
jo
and
mov
add
std
loope
hlt
xadd
mov
aaa
jmp
std
ss
es
xor
jb
adc
xchg
adcb
stos
cwtl
ds
bound
or
push
test
pusha
lods
subb
aaa
pop
inc
sbb
ficoms
mov
cs
in
inc
or
inc
xor
push
mov
push
and
arpl
xchg
cld
movsb
jnp
inc
lret
cmp
insb
xlat
icebp
pop
sub
popf
mov
out
lahf
sbb
mov
aad
fs
fwait
jmp
adc
jge
popa
lea
cmp
into
pop
dec
xchg
jae
or
push
cmp
jmp
aam
dec
pop
xlat
lret
repz
mov
dec
sub
pop
sub
das
fldcw
daa
cwtl
in
mov
lcall
movsl
insb
and
pop
sbb
sub
adc
mov
ja
or
mov
jne
inc
jmp
leave
inc
cmp
in
movsl
sbb
pop
mov
sbb
iret
cmp
fs
jle
jne
and
push
and
push
ljmp
dec
and
popa
ret
out
fsubrp
xor
push
pop
jg
mov
loopne
jle
cltd
nop
add
inc
outsl
into
dec
into
push
fidivs
xor
lds
sub
cmpsb
sub
push
adc
shrl
mov
xor
xor
ljmp
add
jns
and
nop
add
popa
test
cmp
push
xor
inc
pop
cmp
cmp
cmp
mov
das
cli
cwtl
mov
pop
push
mov
or
sbb
jne
stc
mov
and
add
adc
sbbb
inc
cmp
add
fwait
push
add
insl
dec
imul
mov
cmp
jns
inc
iret
and
sub
adc
push
cld
mov
add
movsb
fmuls
test
cmp
lcall
test
xlat
repz
or
xchg
ror
sbb
sbb
inc
das
shlb
inc
test
jmp
cmp
movsl
dec
sub
movsl
inc
sub
xchg
jno
push
mov
loope
clc
xor
mov
push
sub
and
add
pushl
or
mov
cmpl
jbe
test
nop
push
cmp
popa
mov
fstpl
xor
sbb
fwait
orl
cmp
xchg
hlt
movsl
loop
in
add
and
jbe
dec
fs
loope
and
cmpsb
fxam
sub
in
les
repz
or
jns
xchg
mov
inc
pop
stc
inc
sti
repz
fidivs
and
push
popa
int
pop
sahf
xor
xchg
xor
flds
push
jmp
cld
hlt
xlat
les
mov
jbe
gs
jl
in
shll
xorb
jmp
in
testl
jmp
and
or
push
jge
adc
imul
sbb
push
movsl
bound
imul
movsb
aas
decl
mov
in
in
clc
popa
push
loop
stos
mov
cli
mov
insb
lahf
jne
nop
push
sti
scas
cmpsb
fs
cwtl
jp
mov
fsubrs
insb
dec
mov
int
mov
and
mov
lds
or
or
xchg
adc
dec
jno
mov
inc
mov
sub
pop
xchg
out
jmp
insl
sti
dec
mov
clc
pop
call
pop
jl
iret
test
shll
es
jmp
ja
sbb
adc
xchg
pop
popf
add
mov
jmp
fst
inc
dec
push
jg
popf
inc
lods
pop
xor
gs
scas
jmp
mov
cltd
imul
ljmp
xchg
outsl
add
movsl
add
enter
mov
loopne
xlat
sbb
lahf
cmpsb
adc
sbb
rclb
les
std
or
cs
js
ret
int3
and
add
xchg
loop
sbb
jbe
clc
adc
fbstp
fildll
cmp
and
popf
mov
cmp
movsb
inc
cltd
call
cmp
insb
sbb
popa
into
fsubl
jo
lock
mov
or
jne
ret
inc
or
cltd
dec
test
mov
or
push
ljmp
lea
jno
pushf
push
repz
enter
pop
and
cs
lds
add
shlb
sbb
adc
jbe
test
add
push
adc
dec
mov
jae
sbb
cs
dec
test
inc
sub
add
adc
push
repnz
cld
pop
dec
scas
jg
mov
adc
int
xchg
jge
lds
in
or
insl
push
in
push
cmp
mov
movsb
mov
jno
sub
cld
test
xor
shl
mov
shll
lods
nop
popf
mov
mov
stos
add
push
push
scas
lods
dec
in
sub
push
or
pop
adc
mov
outsb
jno
fbstp
aam
xchg
arpl
leave
loopne
iret
fwait
sbb
nop
test
add
pop
jae
pop
lret
addr16
cmpb
mov
pushf
inc
hlt
push
les
pushf
stos
mov
xchg
mov
add
pop
cmp
push
imul
mov
je
mov
pop
cld
shlb
stc
mov
in
outsb
out
insl
add
jbe
add
adc
in
add
cli
jg
enter
jb
push
xchg
mov
and
or
ret
imul
jecxz
iret
daa
leave
out
jecxz
dec
mov
scas
cltd
in
fldt
inc
sub
ficomps
pusha
leave
push
popa
xchg
out
aad
fwait
stos
sti
cmp
adc
mov
into
aad
inc
or
jnp
adc
xor
inc
clc
imul
lock
inc
daa
mov
jge
jo
mov
lods
push
mov
push
movsb
mov
fsub
xorb
and
xchg
and
nop
pop
mov
and
pop
ljmp
fisubs
sbb
es
call
lea
mov
add
dec
es
in
lds
mov
ffree
and
jne
shlb
jns
sub
jl
out
std
adc
std
mov
es
pusha
adc
jle
inc
sub
call
dec
orb
push
std
cmp
roll
jmp
pop
bound
sbb
pop
push
jge
insb
pop
mov
push
shll
lcall
mov
test
xorb
iret
xchg
gs
mov
and
push
jecxz
mov
push
ror
sbb
loopne
xor
das
iret
jne
mov
or
adc
mov
iret
push
loope
push
ret
push
out
shrb
mov
test
mov
adc
mov
jb
jle
push
inc
push
ljmp
mov
test
mov
cmpb
push
je
xor
pop
cltd
push
xor
cltd
inc
pop
lahf
iret
icebp
jno
jae
adc
hlt
testl
mov
in
mov
sbb
repnz
dec
jnp
xor
dec
out
sarb
roll
loopne
mov
insl
xchg
mov
out
mov
fadds
push
and
and
add
mov
sbb
loop
cmp
jge
lret
mov
cmp
jl
cmp
daa
arpl
jg
inc
push
cwtl
and
fwait
sti
sahf
xchg
rcll
fldl
fs
adc
inc
sub
pop
push
jmp
mov
xchg
fwait
jo
inc
cld
ja
das
push
outsl
cmp
data16
cs
insl
and
sti
outsl
mov
push
icebp
das
negl
adc
or
or
push
inc
loope
push
std
enter
and
popf
shrb
in
pop
out
mov
add
subb
fsubrp
dec
mov
loop
dec
lods
xchg
jge
or
cmpsl
jne
jnp
in
mov
rcrl
pop
jbe
adc
les
xchg
fisubl
dec
mov
pop
out
insb
repnz
sti
jno
std
pop
xchg
dec
fnop
push
aam
or
daa
jne
xor
push
bound
mov
shl
fisttps
insb
insl
popl
cmp
fiaddl
pushf
in
or
pop
shll
addr16
and
fsubrs
jnp
pop
rcl
testb
ds
shlb
mov
inc
mov
and
or
and
outsl
and
cwtl
mov
pop
mov
xor
pop
test
scas
add
or
mov
inc
dec
cli
mulps
jb
push
ret
mov
adcb
lret
cmpsl
outsl
and
jo
ljmp
test
rcrb
push
pop
cmc
or
mov
andl
stos
sub
pop
stc
lock
pop
and
test
xor
mov
ret
push
ljmp
mov
push
mov
and
mov
jb
pop
adc
cs
pop
mov
and
fdivl
inc
add
add
inc
sbb
scas
stc
cltd
jge
dec
sub
out
int
pop
add
adc
shll
mov
sub
pushf
rorb
dec
loopne
cmpsb
aaa
lods
mov
gs
jecxz
mov
cmp
add
xorl
pop
mov
mov
in
gs
pop
lods
mov
jo
aam
cld
addr16
push
in
shlb
lods
mov
pop
jp
out
lds
iret
mov
jp
mov
fbld
cmovb
repnz
dec
in
xchg
or
addr16
or
and
out
outsl
mov
addl
sbb
mov
push
lret
mov
faddl
xor
das
fs
mov
imul
es
shrl
and
pop
in
inc
mov
fldenv
and
mov
inc
in
and
mov
xor
cld
and
std
sbb
les
cmc
mov
dec
jle
repz
xchg
into
mov
daa
push
sub
lret
aad
fmul
lret
jge
rclb
shrb
test
mov
testb
mov
stc
ljmp
jae
pop
cmp
lahf
call
inc
outsb
test
stos
sub
xor
xor
add
or
or
inc
repz
mov
jmp
rcrl
loopne
mov
fnstsw
cmpsl
sahf
push
adcl
popa
sbb
cwtl
hlt
mov
xor
loop
jge
push
cmp
pop
arpl
mov
push
insl
in
rclb
xchg
sbb
or
je
movsl
das
ret
inc
xchg
ljmp
cmc
jg
out
sbb
xor
adc
xchg
sti
stc
out
stc
out
repz
into
inc
jbe
mov
jae
std
outsb
repz
int
adc
js
jp
or
inc
sbb
jo
mov
dec
push
repz
or
jne
cmp
mov
ss
mov
add
loope
outsl
clc
pop
iret
cs
xchg
adc
mov
test
sub
in
add
shrl
xchg
sarb
mov
decl
push
outsb
pusha
rclb
or
cltd
cmc
icebp
shlb
mov
cltd
and
mov
inc
test
inc
or
int
mov
jne
dec
cmp
jnp
mov
repnz
hlt
fsts
loop,pt
or
push
push
data16
popa
js
mov
cmpsb
sub
sub
mov
mov
inc
flds
imul
loope
shll
push
pop
dec
mov
and
xchg
ja
sbb
xchg
sub
testl
fsubs
xchg
jnp
scas
ret
xor
jmp
insl
cmp
push
pushf
cmp
fisubrs
or
lock
cld
inc
push
andl
data16
xor
and
lret
and
push
xchg
jp
pop
fiaddl
pop
call
mov
out
subb
into
jnp
push
push
mov
cmpsb
mov
ljmp
dec
or
movb
pop
xchg
mov
les
jnp
or
in
mov
hlt
test
push
dec
xchg
adc
or
jle
test
pop
cmovge
inc
mov
lock
popf
icebp
mov
dec
cmpsl
mov
rcll
sar
adc
inc
fstpt
mov
inc
mov
add
loopne
xorb
jne
bound
push
das
popf
jg
arpl
test
add
fxch
fcoms
cli
sub
pop
data16
fisubs
sub
aas
adc
mulb
mov
add
cwtl
or
jo
push
inc
cmovns
sub
jnp
insl
mov
or
push
movsb
shll
or
adc
add
lods
je
sarl
sbb
mov
ret
fisubrs
arpl
mov
push
lods
sub
mov
pop
ljmp
sbb
mov
mov
rcrl
in
out
mov
nop
sub
cld
hlt
push
cmc
mov
push
dec
cli
mov
adc
pushf
inc
jge
cmova
push
sti
dec
and
fiadds
imul
outsl
xchg
out
adc
jae
cmpsl
stc
adc
mov
fcmovnbe
lahf
sti
sub
int
push
mov
stos
loopne
into
jle
jge
jg
jmp
mov
adc
pcmpgtw
jbe
scas
in
adc
lahf
cmpsb
popf
outsb
jae
loopne
jbe
aam
inc
adc
xchg
lahf
aas
push
cmpsb
fidivl
sbb
loop
mov
mov
adc
xchg
sbb
push
dec
aam
inc
pop
leave
mov
push
push
inc
or
out
push
cmpsb
dec
mov
lea
repz
jge
cmp
mov
clc
pop
sbb
mov
push
jl
in
je
movsl
sub
jg
push
or
clc
ljmp
ja
xlat
scas
aam
leave
inc
sbb
cmpsl
insl
push
mov
addr16
add
lret
or
sbb
sub
lret
idivl
and
aad
jmp
sti
sub
push
jae
add
lea
xchg
sbb
dec
xor
into
xor
or
dec
jmp
lcall
test
pop
movsl
fwait
and
xor
sub
cmp
clc
shl
jbe
mov
call
xchg
lock
push
mov
out
sub
aad
sahf
sbb
add
jne
bound
loopne
test
loop
call
or
mov
jne
mov
lahf
mov
xchg
pop
mov
movsl
js
push
test
mov
mov
xorb
lret
insb
rclb
push
sti
and
xchg
leave
outsb
es
xchg
test
pop
dec
or
es
subb
mov
mov
push
dec
xchg
outsl
fcomps
cmp
pusha
cmp
iret
push
or
xchg
adcl
loop
jge
inc
adc
and
sti
popf
aam
xchg
popf
dec
jbe
ds
jne
fnstsw
insl
repnz
in
or
adc
cmc
dec
jne
cmp
movsb
sbb
and
test
movsl
fwait
or
movsb
sahf
pop
or
dec
cld
mov
adc
push
xchg
pushf
bound
imul
pusha
loopne
sbb
mov
push
and
addl
jmp
jg
xchg
ret
xchg
adc
xchg
lds
je
je
shll
mov
sbb
fidivs
test
push
aam
dec
cmpsl
push
jmp
bound
in
or
mov
idivb
in
inc
enter
js
mov
pop
and
dec
push
mov
mov
or
cmp
pop
testl
aaa
add
in
fists
jno
nop
xor
jno
xchg
xchg
das
mov
cmp
cmpsb
push
stos
jo
loope
insl
mov
mov
scas
push
scas
dec
jnp
sbb
fidivrs
mov
addl
lcall
icebp
xchg
xchg
push
pop
sahf
mov
cmp
aas
jp
sub
sbb
inc
push
out
cmp
arpl
jecxz
push
xchg
mov
in
dec
adc
lahf
ret
ret
xchg
fcompl
enter
cs
jns
jp
mov
cmp
test
adc
pop
rorl
xchg
and
push
sub
cmpsl
cmc
jmp
fildl
mov
jno
test
mov
addb
or
mov
ret
sbb
pop
mov
inc
test
pop
insb
fcmovb
dec
fwait
dec
ja
cli
adc
dec
mov
sarl
pop
cmpsl
or
add
in
stos
cmp
jl
xlat
sbb
mov
jno
dec
in
jecxz
adc
lods
movb
mov
jge
aad
add
jne
cmp
jae
rolb
insl
js
lahf
popa
icebp
or
sbb
xchg
cmp
dec
and
or
lahf
ror
lcall
nop
test
mov
pop
pinsrw
xor
push
and
xor
dec
cli
hlt
adc
lret
adc
jmp
mov
xor
xor
nop
and
mov
mov
gs
add
mov
mov
dec
imul
sbb
into
and
stc
dec
test
lds
cs
stos
push
rcll
nop
shll
cmp
jbe
jnp
or
mov
pop
loopne
xlat
sub
popf
ficompl
sub
and
popw
jle
sti
jmp
sub
mov
incl
push
lret
lcall
sbb
pop
inc
gs
aaa
adc
dec
out
mov
xor
imul
pop
lret
cmp
xchg
scas
mov
jnp
inc
mov
popa
sub
push
repz
loop
scas
aam
and
and
pop
mov
rcrl
cmp
hlt
adc
outsb
mov
jmp
mov
into
movsb
insb
pop
mov
scas
and
and
mov
lods
push
jmp
adc
incb
repnz
mov
adc
in
jo
mov
or
sub
inc
ret
ds
imulb
pop
dec
cmp
sti
cmp
faddl
ret
push
xchg
xor
iret
cmpb
mov
sub
fsubrl
inc
outsb
jbe
fs
dec
orb
mov
decl
orl
jb
push
add
mov
insl
cmpsb
xchg
popf
gs
xchg
add
sub
inc
or
test
ljmp
nop
add
inc
test
scas
mov
mov
aam
mov
mov
pop
push
es
js
clc
dec
mov
fisubrl
test
pop
insl
mov
pop
shlb
jecxz
out
mov
fwait
mov
push
xor
and
mov
add
dec
sbb
add
roll
dec
mov
xor
add
inc
ds
inc
lret
push
xor
imul
xor
loope
enter
dec
mov
loop
mov
loop
out
insl
outsb
lret
lcall
push
out
and
stos
inc
rcl
testb
cmpsl
adc
outsl
or
sbb
jno
mov
fimuls
stc
or
push
xchg
or
or
mov
outsl
icebp
pop
xor
pushf
inc
negl
sbbl
adc
adc
out
mov
sbb
lret
movsl
or
lret
lcall
fadds
sub
bnd
movsl
call
orb
xor
stos
fs
cmp
mov
xchg
push
and
sbb
jge
push
mov
pop
adc
mov
jle
mov
outsl
xor
or
out
ljmp
scas
mov
jge
inc
pusha
mov
push
cmp
push
or
xorb
jge
pushf
push
out
cwtl
mov
fs
filds
sarb
mov
int3
mov
nop
xchg
daa
sbb
xorl
pop
bound
jle
fsubl
push
push
sbb
push
inc
jge
fisttpl
xor
lea
loope
mov
inc
daa
lahf
xor
mov
stc
mov
roll
inc
sbb
outsb
xchg
ret
xor
mov
notl
in
sbb
mov
leave
adc
dec
std
cmpsl
or
mov
lret
xor
daa
lods
adc
xor
shll
lahf
sbb
lock
or
call
mov
sub
bound
cmp
lds
scas
scas
pop
jle
fs
xchg
ss
imul
mov
push
pop
aas
jmp
je
xchg
andl
dec
dec
pop
pop
xchg
aas
add
fsubr
movsl
xorl
es
aad
outsb
jb
xchg
jmp
pmullw
mov
pop
xchg
lahf
push
push
cmpsb
aas
xor
fstp
andl
fcmovnb
mov
dec
xchg
mov
or
push
jl
inc
mulb
push
sub
pop
cmp
daa
les
cmp
xor
jno
add
loop
movsl
add
jmp
test
pop
or
cltd
in
jno
movsl
mov
scas
cli
pop
insb
mov
push
movsb
popa
pop
pop
and
int3
sbb
shll
xchg
push
int3
sub
stc
xor
dec
inc
mov
fs
push
ljmp
je
jmp
sub
mov
dec
shll
dec
sub
je
pop
pop
shl
repz
flds
pop
mov
xor
or
out
or
test
cmp
xchg
dec
aas
cmp
stc
inc
scas
mov
lea
or
clc
mov
cmp
mov
shll
pop
add
js
aad
loope
lds
xchg
out
fisubs
out
mov
int
push
or
adc
fistps
pop
ret
ret
movsl
fstpl
mov
lds
push
fwait
jmp
inc
dec
imul
test
bt
cmp
aam
sbb
cmp
lods
cs
inc
sub
imul
lock
or
mov
push
subps
stos
jne
repz
pop
mov
pop
and
popf
bound
sub
les
test
sbb
jecxz
cltd
enter
loop
pop
mov
sub
call
push
or
fs
jg
cmp
daa
repz
xor
setl
int
in
sbb
push
jne
and
test
jno
ja
gs
test
in
cmp
fisubrl
mov
out
mov
mov
xchg
mov
xor
and
add
lock
scas
xchg
cli
outsb
andl
push
push
scas
sub
loope
jmp
gs
clc
mov
aaa
rcll
xor
lret
stos
xchg
cmp
and
test
xchg
push
idivl
mov
hlt
or
add
sbb
push
test
and
and
jbe
push
push
jecxz
and
rorb
aas
mov
or
cvtpi2ps
xchg
pop
test
pop
mov
or
cmp
mov
mov
pop
inc
inc
scas
add
into
dec
test
cmp
jae
movsb
xchg
mov
cmp
ss
out
aad
into
mov
subl
daa
mov
mov
push
popf
out
daa
dec
je
mov
cmpsb
mov
adc
jmp
shll
imul
data16
jecxz
shll
adc
pushl
loopne
push
pop
popf
push
loopne
xor
movsb
xor
in
inc
cmp
sub
sti
push
cmpsb
testb
repnz
pop
mov
cmpsb
outsb
mov
or
fs
mov
inc
das
inc
fadd
xor
fisubs
mov
mov
dec
loop
ror
dec
jo
divl
mov
sub
push
mov
stos
pop
bnd
jnp
orb
or
pop
test
dec
mov
xchg
pop
sub
and
stos
inc
mov
xor
into
sbb
je
sbb
sbb
clc
xchg
or
jecxz
rol
sbb
add
lds
cmp
cld
inc
out
jmp
or
xor
cmp
dec
inc
cltd
inc
add
stos
fstl
add
sbb
mov
out
add
testb
mov
dec
aad
int3
das
mov
inc
out
mov
add
scas
push
fldl
js
mov
ljmp
incb
jo
jp
cs
adc
mov
mov
jmp
add
fistpl
cmp
jp
repnz
mov
out
mov
add
cmc
jp
sub
lahf
subl
sub
imul
insb
inc
sbb
sub
push
jo
dec
xor
in
add
xchg
sbb
cld
jp
in
pop
xchg
lret
cmpsl
add
test
shl
sbb
adc
jbe
and
fwait
sub
pop
push
pop
aam
adc
mov
hlt
or
xor
daa
mov
lock
repz
xchg
xor
pop
xchg
aaa
add
ss
inc
and
mov
aas
dec
pop
test
xchg
iret
into
fistpl
jno
and
sbb
ja
std
jne
dec
in
scas
or
daa
cmp
leave
aaa
sbb
and
sbbb
pop
adc
or
movsl
cmp
dec
stos
jno
push
dec
icebp
cmp
adc
sub
inc
les
notb
adc
add
clc
dec
xchg
push
repz
cmp
int
adc
fucomp
out
jle
test
mov
insb
popw
jge
or
lods
xor
xlat
mov
gs
inc
ja
testl
enter
loope
dec
movsb
shll
mov
mov
cmp
lret
bound
es
cmp
cmpsb
sub
in
mov
movsl
cmp
adc
cmp
sahf
or
jg
xchg
sub
mov
push
hlt
cmc
xor
mov
or
ss
jle
jl
and
loopne
inc
jg
stos
pop
dec
push
adc
int3
out
dec
mov
push
cli
ret
pop
jecxz
das
inc
mov
pushf
insl
lahf
imul
inc
mov
dec
insb
iret
lds
sub
xchg
dec
test
pop
shll
in
adc
not
jns
and
sub
mov
dec
fucomp
icebp
xchg
sbb
loopne
push
push
mov
addl
pop
arpl
xchg
mov
jl
fsubr
xchg
out
jb
mov
push
mov
nop
popa
adcl
fldl
sbbb
mov
sbb
test
adc
ljmp
out
test
rol
jmp
das
adc
sub
ret
aam
adc
cs
add
lret
loopne
xor
test
sbb
pop
arpl
and
mov
loopne
push
in
xor
lods
xchg
cli
mov
ret
adc
dec
popa
sti
or
adc
bound
or
and
xchg
sbb
xor
shl
movsl
stc
sub
sub
int3
xor
popa
add
sarl
lods
push
pop
jno
mov
sbb
dec
loop
jno
push
xorb
stc
ja
shll
inc
fcompl
stos
lods
mov
xchg
cwtl
out
psrld
inc
dec
es
push
sar
cwtl
push
call
sbb
xchg
push
dec
fwait
xor
or
cld
mov
adc
into
adc
mov
mov
into
or
hlt
sbb
lahf
test
cmp
xor
adc
push
sbb
out
pop
jnp
fwait
dec
and
enter
clc
add
jno
shrl
aad
enter
jmp
pop
mov
es
and
loope
push
push
adc
fnsave
rcll
mov
mov
cmpl
ret
sbb
mov
xchg
jae
cld
sbb
xchg
test
adc
mov
loop
xor
shrl
test
sub
jp
cmp
adc
xchg
loopne
rcll
mov
popa
pop
inc
inc
mov
out
negl
cwtl
scas
ret
cmp
xlat
je
adc
mov
xchg
jmp
adcb
loope
in
movsb
jne
fistps
ds
in
mov
inc
sarb
je
fstpt
inc
push
dec
rolb
cltd
in
push
nop
push
cmpsb
mov
stos
jns
lods
sbb
xor
jmp
xchg
scas
fimuls
popf
inc
imul
jb
push
rorl
mov
repnz
sub
sub
mov
or
cmpsb
ljmp
repnz
mov
sub
cltd
pop
loopne
and
outsb
fidivl
mov
dec
mov
mov
add
push
xchg
ret
stc
jl
mov
lea
shll
imul
and
fildl
mov
loopne
push
or
lds
arpl
or
mov
enter
xchg
sbb
dec
gs
pop
or
mov
jp
xchg
or
inc
addb
fld
cltd
xchg
cmp
pop
add
out
cmpsl
xor
mov
iret
inc
cld
push
out
stos
in
stos
sub
insb
test
mov
sbb
push
data16
test
in
mov
push
fldenv
mov
je
sub
add
push
arpl
in
mov
idivb
mov
addb
scas
out
pop
subl
inc
outsb
mov
dec
stc
mov
dec
fwait
mov
or
xchg
ficoml
dec
and
sti
mov
movsb
outsl
sub
xor
push
out
daa
jbe
mov
pop
xchg
xchg
ds
icebp
mov
dec
mov
or
aas
arpl
and
mov
sub
push
int3
xor
je
or
adc
adc
stc
in
adc
mul
jp
fnstcw
inc
and
jecxz
into
and
and
lods
in
cmp
push
outsb
fldl
in
xchg
xchg
in
int
jae,pn
push
push
cmc
mov
and
into
mov
jmp
push
jnp
fsubs
into
adc
out
mov
cmpsl
mov
in
test
inc
lea
mov
cmp
arpl
cmp
xchg
mov
or
movsb
and
adc
inc
add
adc
outsl
push
push
xor
mov
faddp
fdivl
cmp
lds
mov
pop
scas
jle
xor
mov
jmp
fiadds
jbe
enter
popf
clc
jecxz
std
rcl
cmpsb
ljmp
jmp
out
imul
int
aas
mov
xchg
lret
sbb
adc
cmpsb
sub
mov
les
call
aas
sub
dec
imul
mov
cs
sbbb
test
fwait
adc
mov
mov
es
fs
cmp
js
enter
call
cmpsb
jmp
lods
dec
dec
xor
loop
rclb
xor
or
mov
push
ljmp
mov
cmp
daa
loope
sbb
add
xor
jg
call
xchg
push
lock
inc
std
inc
addr16
mov
clc
push
or
sbb
inc
jno
stos
dec
inc
or
dec
jp
lahf
int3
int
fwait
aas
stc
into
sbb
sbb
inc
or
loop
mov
inc
shll
mov
outsl
jge
int
sbb
inc
inc
movsl
lea
popf
add
add
xchg
and
testl
pop
lds
xor
mov
xor
inc
pop
ficoml
sbb
test
and
sbb
std
push
mov
or
mov
jle
sbb
mov
xchg
or
pop
fwait
adcb
mov
jae
dec
test
lret
out
test
aas
les
jne
push
cwtl
mov
cs
in
mov
loop
and
cmp
test
fistps
div
les
mov
loopne
cmp
js
mov
shll
xchg
sbb
jne
mov
mov
stos
cmp
sub
je
mov
loop
cltd
rcr
inc
inc
inc
call
shrl
popf
orl
std
subl
out
xchg
rcrl
push
cli
and
jp
sub
andb
imul
adc
call
jae
clc
lods
filds
add
enter
push
iret
inc
jnp
mov
dec
mov
ss
js
push
clc
sbb
dec
inc
jle
push
mov
cmpsl
icebp
mov
dec
pop
lods
add
loopne
mov
out
stos
das
and
mov
sbb
jmp
adc
jmp
xchg
fstpl
in
scas
mov
sbbb
stc
xchg
inc
mov
pusha
xor
adc
sti
xor
outsb
pop
insl
lock
jge
rcll
cli
jge
icebp
inc
gs
mov
inc
dec
enter
cli
ret
dec
xor
sbb
scas
adc
push
jbe
jge
push
inc
fnsave
stos
xchg
aam
mov
jb
inc
rorl
mov
and
mov
add
inc
pop
jne
pop
cmp
fisttps
adc
bound
lods
or
xlat
bound
or
mov
mov
lods
mov
add
lret
inc
mov
adc
in
ds
sbb
mov
pop
push
xor
pop
mov
pop
pushf
or
insl
inc
mov
adc
jae
scas
pop
adc
lds
add
lcall
xlat
into
jnp
mov
ds
xchg
sbb
jmp
jp
adc
xchg
jo
xor
lds
repz
cmpb
popa
inc
sbb
mov
lods
dec
lahf
ficompl
repz
bound
add
mov
mov
adc
jle
push
xchg
pop
movsb
pop
or
fidivrl
dec
out
xlat
daa
fsubrs
or
inc
scas
dec
outsl
fmuls
bound
outsb
les
fs
das
lcall
xor
in
arpl
mov
dec
ffreep
fdivr
adc
jmp
jno
sahf
scas
or
lret
dec
cwtl
lock
lret
cmpsb
pop
lods
clc
adc
add
int
inc
decb
notb
xor
adc
push
push
mov
mov
jle
lods
fucomi
pop
loop
xlat
xchg
push
add
mov
repz
mov
fwait
lret
lret
pop
lcall
imul
lock
jecxz
or
into
shll
pop
data16
push
jge
xor
or
daa
mov
xchg
rcll
leave
inc
clc
ja
test
pop
mov
add
cmpsl
and
cld
cmp
sub
sbb
adc
pop
outsb
cmp
or
out
loop
add
iret
out
mov
push
into
popf
jg
push
cli
push
lods
lods
add
cmp
mov
icebp
mov
lret
pushf
pop
or
mov
cmpb
xor
call
out
sbb
fdivrl
push
movsl
test
xor
outsl
push
pop
test
jl
or
push
nopl
jae
mov
jo
mov
mov
adc
sbb
xlat
mulb
lcall
pop
ret
inc
pop
mov
mov
adcb
sbb
jbe
cmp
mov
out
xchg
xor
insb
inc
das
call
outsl
xchg
and
pop
dec
leave
jnp
aas
sbb
push
push
or
sbb
xlat
xchg
loope
pop
nop
jnp
push
mov
xlat
sbb
outsl
cmpsl
je
xchg
adc
inc
in
test
cwtl
xchg
fdivrl
ds
mov
fsubrl
jne
xor
push
cmc
fisubs
fidivs
aam
sahf
scas
sbb
popa
and
jl
movsb
add
sub
fisubs
xlat
jecxz
and
movsb
mov
mov
mov
cmp
pop
push
fmuls
sub
mov
xor
gs
mov
fcmovb
cmp
or
pop
mov
rcr
orl
dec
fists
in
mov
outsb
cmp
jmp
arpl
fwait
ds
xchg
lods
lds
test
outsb
cmp
mov
or
and
xor
or
iret
or
nop
xchg
arpl
mov
bound
ss
mov
mov
leave
push
js
into
jl
movsb
icebp
mov
fs
leave
loope
inc
push
inc
out
add
lock
fdivrl
and
outsl
jne
push
sbb
jne
aad
inc
mov
inc
push
mov
subb
cli
aaa
xchg
je
sahf
daa
add
mov
addr16
loopne
je
call
fucomp
or
jmp
and
mov
test
iret
shl
or
inc
in
div
in
cli
iret
jg
bnd
test
aam
int3
out
pop
jns
add
mov
aam
mov
fs
cwtl
cmp
sub
int
pop
add
icebp
and
add
lock
lock
cmpsb
xor
jbe
push
je
mov
in
out
into
in
into
and
adc
xchg
sahf
add
inc
xlat
test
mov
movsl
jecxz
es
bound
stos
mov
cmc
lret
rcrl
out
outsb
fsubrs
call
and
jne
add
push
nop
iret
xchg
jecxz
ret
mov
test
and
mov
pop
jle
mov
cmp
cmpsl
es
mov
cmp
sbb
rclb
repz
test
mov
and
sub
xchg
cli
xchg
movsl
pop
push
push
sbb
rcr
lret
inc
and
es
mov
repnz
pop
loope
mov
push
adc
add
roll
enter
sbb
js
nop
stos
fdivp
movsb
jecxz
push
jae
xor
jo
ljmp
iret
ljmp
insl
loope
push
dec
add
into
jle
faddl
movsb
mov
and
mov
movsl
lret
imul
scas
sahf
lods
outsb
xor
imul
ret
lds
adc
adc
daa
sbb
or
and
mov
repnz
inc
dec
stc
push
xchg
mov
jno
or
movzwl
int3
xor
fsubrl
jbe
jnp
icebp
lret
sti
push
inc
int
and
ljmp
sbb
mov
es
add
and
push
xchg
mov
adc
mov
int3
nop
lds
ss
and
add
mov
mov
daa
cmpsb
mov
xchg
popa
xor
sub
jl
ror
cmp
repnz
aaa
daa
addr16
jnp
xor
ds
int3
ja
or
je
jl
inc
es
mov
cmp
dec
loopne
sbb
mov
mov
sbb
xor
enter
xor
les
xor
sub
xchg
jnp
dec
xor
jae
ret
mov
jne
pop
jg
mov
js
mov
loopne
ljmp
into
sbb
jno
jae
and
sbb
out
outsb
hlt
sbb
fadd
pop
dec
adc
insl
mov
movsb
jl
js
push
dec
or
insb
cmp
add
repz
mov
nop
scas
mov
shlb
sti
stos
cli
in
daa
jo
add
pop
call
add
xchg
jmp
push
cmp
push
mov
add
aas
je
dec
cmp
mov
cwtl
ret
pop
add
or
push
cmp
push
cmp
xchg
inc
lret
ljmp
fwait
fs
mov
fs
mov
cmpsl
ss
jle
push
ljmp
dec
mov
shl
jbe
mov
popa
xchg
lods
push
loopne
sub
jg
xchg
mov
sarb
push
and
sbb
ret
ret
mov
adc
subb
ja
mov
sarb
inc
mov
sub
scas
test
mov
xchg
imul
test
lock
movsb
clc
rcl
inc
sbb
lods
mov
insl
rol
push
push
scas
add
mov
cmp
test
mov
stc
int
push
out
stc
sbb
pop
pushf
sbb
call
je
leave
js
lret
fisubs
mov
push
inc
aas
mov
cmpb
or
dec
jo
fwait
lahf
push
cld
mov
mov
jmp
mov
cmpsb
in
mov
ret
pop
or
gs
push
jne
test
xchg
push
clc
xchg
jb
or
or
lods
ss
rcr
fcompl
jno
shl
jno
mov
loop
outsl
icebp
lret
xchg
push
test
mov
jl
sbb
sbb
pop
mov
scas
pop
or
clc
js
lcall
sub
insl
sub
test
ret
adc
lea
xchg
std
cmp
xchg
rcrb
call
mov
mov
adc
sub
push
cmpsl
nop
iret
mov
sahf
movsb
sub
fbld
pop
mov
push
adc
sub
cmpsb
inc
fprem1
dec
jne
das
adc
pusha
dec
mov
addl
dec
xchg
add
out
inc
out
inc
sahf
xchg
inc
mov
lret
push
mov
mov
hlt
push
sub
and
cmpl
dec
fisubrl
xor
pop
push
out
and
sti
dec
dec
sbb
and
out
push
movsb
jne
outsl
outsb
fwait
lret
adcb
adc
pop
xor
xor
pop
iret
out
adc
cmp
cmpsl
sub
or
cltd
es
ljmp
adc
clc
cld
push
sub
mov
xor
inc
add
inc
jnp
out
pop
ja
add
xorb
sbb
dec
popa
faddl
dec
inc
push
repz
loop
push
stc
loop
movsl
ja
icebp
adc
jecxz
movsb
fwait
pop
and
lret
rclb
push
cmp
mov
movsb
divl
and
mov
jb
jecxz
jno
mov
xchg
sti
int3
aaa
add
mov
sahf
in
cmp
xlat
cmp
roll
push
push
cmp
cmp
es
jo
sbb
adc
mov
into
sub
fs
cmp
jmp
pop
cs
cld
out
jo
rcrl
inc
mov
ss
imul
mov
stos
sahf
roll
dec
repnz
push
dec
adc
pusha
sub
jl
dec
cmp
int
mov
sub
or
hlt
dec
scas
je
push
lods
test
lock
dec
movsl
mov
stos
inc
testb
push
jecxz
add
sbb
inc
in
mov
add
xor
stos
pop
add
jnp
leave
add
mov
jg
faddp
sbb
out
repnz
sarl
or
jp
push
pop
popa
lahf
aad
insl
pop
add
sbb
arpl
mov
out
mov
jne
imul
lcall
testb
in
insl
xor
jbe
inc
pop
mov
adc
popa
mov
add
push
mov
cwtl
jl
imulb
les
mov
lret
sbb
cmpl
mov
lret
pop
into
or
pop
int3
inc
rcll
or
pop
out
pop
into
cld
push
stc
inc
in
in
add
sbbl
cs
fldcw
cmp
insl
pushf
aad
mov
invd
cmp
dec
mov
insb
xchg
push
mov
test
adc
sbb
lods
stos
insb
idivl
pop
fs
mov
mov
push
push
pop
nop
fadds
cmp
shlb
cmp
incl
fcomps
ret
push
aas
insl
xchg
test
cmpsb
int
fidivrl
inc
mov
pop
dec
aam
xor
loope
mov
lret
sub
add
push
call
popa
daa
mov
inc
pop
fstpt
xchg
shl
out
mov
adc
cmp
dec
mov
bound
prefetch
xor
je
cld
adc
jns
xchg
or
dec
icebp
mov
iret
sarb
push
insb
adc
jno
pop
jmp
lds
fmuls
pusha
movsb
ja
jae
xor
xchg
inc
xlat
arpl
cmp
mov
repnz
sub
gs
es
cmp
dec
push
jle
mov
add
inc
repz
subl
das
mov
scas
cmp
pop
mov
dec
insl
mov
xor
enter
xor
sub
jnp
mov
mov
les
xchg
sbb
pop
push
fcoml
scas
xchg
push
das
mov
icebp
mov
mov
mov
fldl
sbb
push
in
outsb
sbb
scas
ja
insl
ss
imul
in
adc
mov
jl
adc
jns
sub
pop
mov
dec
xchg
scas
test
fnsave
sbb
test
movsb
or
dec
xchg
xchg
push
push
mov
leave
ljmp
inc
mov
imul
popa
dec
add
pop
addl
mov
xchg
cmpsb
movsb
lahf
push
mov
cli
fldcw
xor
jb
fwait
adc
aad
sub
jecxz
pop
jmp
cmp
lcall
out
lods
push
push
fstl
das
hlt
sub
lods
pop
xchg
and
sbbl
pop
mov
push
jle
pop
movsb
mov
cli
dec
push
jo
adc
inc
imul
dec
fmull
jo
call
jecxz
push
push
sub
imul
pop
ror
stc
ret
sub
dec
lea
inc
call
push
test
sti
sub
fisttps
add
pop
loopne
jecxz
xor
inc
cmpsl
arpl
loop
out
adc
divb
jb
xchg
pop
mov
lret
sub
pop
pop
dec
adc
add
jns
in
mov
inc
jg
sub
mov
fcomps
jle
mov
enter
jnp
andl
xchg
lcall
sub
in
call
stc
cmp
lcall
mov
in
pop
or
mov
pop
pop
rclb
push
mov
js
pop
jnp
lds
jecxz
xor
mov
mov
insl
es
pusha
je
cmpsl
dec
adc
sbb
imul
int3
adc
pop
cltd
fnsave
lock
lock
mov
mov
aas
push
imul
scas
push
xchg
pop
or
movsb
dec
sub
sbb
pop
inc
or
or
inc
out
push
test
and
push
sbb
addr16
jg
or
inc
sbb
aam
mov
xchg
pop
cmpsl
xchg
aam
fisttpl
sbb
pop
dec
jge
mulb
call
pushf
cli
popf
enter
pop
scas
insb
aam
out
loope
cmpb
repnz
adc
lods
dec
ljmp
or
xchg
jl
rorb
scas
and
arpl
xchg
jnp
mov
add
jb
test
push
loopne
lret
xor
pop
sub
push
cmp
ja
insl
pop
inc
xchg
ljmp
cltd
mov
lcall
enter
ss
es
pushf
xchg
pop
dec
lcall
dec
stos
mov
jbe
pop
int
out
movsb
std
mov
push
add
imul
sar
arpl
add
sub
lcall
or
negl
std
out
adcl
in
dec
lret
and
pop
pop
stos
adcl
adc
cs
push
push
int
inc
mov
ret
fimuls
xor
loop
push
pop
sbb
lods
cltd
xor
fbld
jecxz
mov
or
icebp
pop
lea
sbbl
fdivl
sti
sub
mov
or
inc
push
jb
push
rorl
mov
lds
scas
xor
pop
cli
push
stos
leave
out
les
pushf
cs
data16
mov
outsl
add
clc
scas
es
movsl
mov
mov
ja
int3
pop
ds
sub
push
adc
and
pop
pushf
mov
sti
cmp
jb
push
test
pop
dec
loope
out
sub
popa
and
jne
dec
xor
repz
mov
mull
inc
call
lahf
jno
sbb
mov
scas
in
dec
arpl
push
mov
or
jp
mov
push
ss
add
into
aad
mov
cmc
mov
outsl
pop
mov
push
add
xchg
inc
xchg
jb
test
inc
loope
call
mov
cli
jo
xchg
pop
ja
jmp
in
repnz
scas
mov
xchg
out
sbb
test
andps
cmp
stos
mov
cwtl
cmpsl
and
in
pop
gs
add
sbb
mov
js
out
mov
fidivs
insl
ss
adc
movsl
xchg
lods
ret
dec
sbb
ficomps
sti
lret
jnp
dec
movsl
insl
inc
adc
sahf
push
xchg
imul
mov
mov
lods
sub
or
outsb
or
paddd
outsl
sub
sbbb
mov
repz
mov
arpl
and
xor
xchg
sub
xorl
pop
into
aam
sbb
popf
mov
jp
mov
sysexit
into
mov
mov
leave
movsl
lcall
add
jae
loope
sbb
call
pop
and
mov
inc
jecxz
adc
lcall
mov
ffreep
fildll
cmp
add
sahf
dec
mov
mov
xor
lcall
shrb
movsl
adc
enter
out
cmpsl
test
cmp
or
xchg
dec
inc
pushf
mov
jmp
mov
xchg
pop
or
cld
mov
jnp
jmp
mov
or
adc
js
and
push
sbb
adc
dec
jp
jns
jp
sbb
adc
push
sbb
sub
jbe
loop
mov
mov
fnstenv
out
js
outsb
sub
sub
mov
pushl
or
mov
in
call
pop
mov
mov
loopne
cmp
outsb
into
into
dec
aad
cmc
push
out
sti
negl
xor
xor
insb
leave
insb
cmp
jmp
lea
sbb
call
jns
fwait
or
lods
xchg
mov
out
sbb
mov
xchg
fs
pop
inc
je
xchg
xor
fdivrl
mov
mov
loop
lea
mov
xor
mov
mov
sbb
sbb
pushf
inc
pop
push
inc
dec
sbb
cli
push
push
inc
mov
or
xchg
mov
jne
adc
and
test
jle
cmpb
mov
icebp
into
xlat
dec
addr16
fucomi
xor
popf
add
lret
inc
push
xor
cmp
movsl
or
and
cld
arpl
fiadds
adc
das
clc
fcoml
repz
sarb
cltd
fldpi
shld
xchg
cmp
arpl
repz
adc
xchg
push
sub
xor
sti
dec
repz
fwait
push
pop
xor
insb
xchg
addb
pop
sahf
mov
fcmove
push
push
mov
sbb
add
inc
add
sub
mov
mov
in
push
lods
mov
hlt
inc
jb
scas
dec
fcomi
mov
ss
add
pop
mov
xor
xchg
mov
ja
jge
cmp
mov
lret
mov
fists
nop
in
mov
das
mov
lahf
pop
jbe
adc
cmovo
mov
pop
dec
mov
mov
int3
push
je
fcomps
jne
sbb
push
mov
and
dec
iret
je
mov
add
iret
jb
jle
add
adc
ja
jp
jb
mov
repnz
xchg
and
xchg
cmp
mov
mov
sub
in
loopne
in
cli
mov
mov
outsb
xor
arpl
mov
cmp
or
xor
js
inc
mov
add
sub
les
sub
push
cmp
scas
movl
xchg
repnz
lret
pop
loope
and
mov
popf
test
xchg
and
push
in
pop
insl
daa
movsb
movsl
loop
loope
scas
daa
cmp
stc
jge
mov
out
cmp
xchg
jno
daa
cmpsb
mov
dec
jg
lret
mov
xchg
leave
sbb
jno
test
fcmovb
mov
sbb
popf
inc
xchg
fwait
xor
add
add
cltd
pop
mov
addr16
aas
mov
cwtl
imul
jnp
dec
mov
dec
mov
das
sub
jnp
jb
rcll
mov
out
mov
or
push
pushf
inc
sub
cwtl
inc
jge
movsb
push
pop
loope
pop
int
dec
xor
adc
or
mov
dec
fstl
call
jg
jp
and
add
stc
push
dec
push
popf
pop
push
sbb
pop
data16
stos
sahf
push
jns
lret
stos
loop
xsave
mov
xor
xor
pop
and
fwait
incb
stos
add
xchg
sbb
rol
leave
out
push
cmpb
and
xchg
jnp
jge
mov
popa
pop
rep
das
mov
add
rorl
mov
rcrl
data16
push
repz
xchg
cmp
push
ja
push
stos
pop
repnz
mov
fwait
lods
rcrb
les
movnti
lcall
dec
js
addl
gs
faddp
lods
mov
clc
sub
aas
loope
add
mov
into
inc
rcrb
es
inc
fwait
outsl
jp
std
mov
insb
sub
data16
insl
int3
pop
xor
mov
fs
fcmove
cmpsb
push
dec
sbb
lods
xor
cmpsb
scas
and
cmpsb
jg
jo
adc
or
xor
mov
cmp
lcall
add
mov
inc
dec
adc
fsubrs
fadd
test
xor
cli
or
cmpsl
push
mov
shl
jae
les
xor
mov
mov
repz
pop
cmpsb
and
test
jl
lahf
mov
fldl
imul
mov
push
jmp
add
loopne
and
cmp
push
cli
mov
jne
dec
jne
test
fistpl
mov
mov
test
jb
mov
and
adc
add
into
xchg
mov
inc
imul
iret
das
in
imul
popf
add
mov
sbb
fildl
in
jp
rcr
xchg
or
out
leave
popl
jmp
fildll
sbbl
loope
ret
add
aad
lds
outsl
cwtl
imul
outsb
pop
test
or
xor
mov
out
xor
ja
add
and
mov
hlt
rorb
movsl
cmpsb
mov
adc
push
enter
xor
stc
aam
test
push
cmc
jnp
lods
imul
jmp
imul
dec
test
jne
mov
outsl
mov
mov
mov
or
clc
pop
mov
sbb
jnp
and
out
mov
pop
push
sbb
enter
jmp
stos
mov
pop
nop
mov
rol
testb
xor
push
cmp
ds
in
in
push
and
lods
dec
sarb
push
xchg
mov
add
jno
pop
mov
in
fisttps
sub
jns
lea
cmp
push
cmpsl
push
imul
lods
std
lret
sub
jno
jne
adcl
pop
add
lea
sub
adc
jge
lds
push
fcmovne
or
imul
sbb
je
cli
and
inc
mov
movsb
pop
sbb
das
pop
shl
sahf
ret
cmpsb
and
inc
add
lcall
xchg
les
aas
cmp
dec
aad
dec
fstpt
push
or
mov
nop
mov
mov
sub
testb
pop
pushf
into
outsl
jne
or
pop
xchg
push
insl
push
lret
and
pop
xor
fwait
xchg
idivl
jne
jae
pushf
rcrl
pop
and
repnz
testb
jnp
in
mov
and
out
jns
jl
xlat
xor
push
fwait
adc
insw
dec
loop
loop
fists
cmp
ret
xchg
into
or
mov
pop
stos
xchg
stos
cmp
ljmp
je
mov
loope
fisubl
mov
idivl
repz
mov
pop
dec
leave
push
sahf
sbb
fstps
enter
mov
jnp
stos
mov
mov
fcmovnu
dec
ret
jmp
add
pop
loopne
ret
aaa
je
ljmp
push
loop
mov
scas
shr
jae
and
mov
cli
out
mov
mov
sub
push
lret
pop
pand
fnstcw
inc
imul
xchg
adc
repnz
lahf
pop
subl
dec
xchg
fbstp
icebp
idivb
in
or
mov
xchg
das
clc
repnz
mov
out
jmp
fisubrs
test
jnp
or
xchg
mov
sbb
jno
not
iret
mov
pop
xchg
pop
sub
ljmp
in
mov
ret
cmpsb
and
inc
push
aaa
xor
mov
aaa
sarl
cmpsl
js
inc
xor
sbb
sbb
stos
dec
ja
sub
push
insb
pop
je
sub
or
or
mov
xchg
pop
jne
adc
mov
scas
stos
mov
jns
xchg
xor
push
pop
lock
cmp
push
dec
sti
cmp
push
popf
push
add
inc
mov
aam
js
pop
mov
aam
js
out
xor
rorl
mov
add
lods
push
jb
add
or
repz
and
in
pop
jno
jne
mov
in
pop
leave
nop
in
sub
pushf
mov
pop
movsb
inc
inc
lock
adc
jecxz
sub
mov
lret
cld
fnstcw
cli
in
dec
mov
stc
enter
or
mov
xchg
popf
loopne
xor
push
popa
sbb
loop
ljmp
xchg
filds
cmc
flds
xchg
push
sub
neg
pop
add
push
sub
xchg
les
pop
xchg
add
mov
jno
inc
xor
or
int3
cmc
mov
add
push
jmp
cmpsb
hlt
or
imul
jl
push
mov
outsl
jbe
mov
int3
subl
cmp
sub
mov
or
movsl
pop
dec
imul
cmp
test
repz
adc
dec
mov
clc
pop
xlat
or
push
test
push
xorb
and
jo
out
sbb
std
fldcw
adc
mov
fimull
pop
pop
jmp
lea
cmp
inc
sub
dec
sbb
out
and
or
aas
test
xchg
sahf
jne
cmp
pusha
std
dec
mov
loopne
pop
cmp
add
adc
cmp
xor
sub
dec
ds
cltd
sti
loop
jg
outsl
addl
push
popf
add
jl
ret
mov
jp
outsl
jp
add
inc
or
sahf
mov
mov
dec
rcrb
add
cli
fnstcw
xor
movsl
aam
out
es
dec
and
fldl
leave
pusha
std
xchg
push
mov
push
rol
jle
xor
pop
sub
in
cmp
nop
add
xor
xchg
pop
mov
rcrl
ror
xor
add
movsl
sub
fwait
or
das
mov
dec
in
adc
iret
sahf
daa
stos
push
dec
xchg
adc
js
outsl
insb
mov
mov
xchg
inc
xchg
in
out
dec
sbb
xchg
dec
jae
stos
imul
test
aad
or
push
sbb
stc
in
xor
decl
sub
shll
fcompl
mov
inc
scas
mov
sbb
jno
pop
inc
js
xchg
cld
jle
push
cli
jae
ja
into
sub
sbb
test
inc
push
pop
rcrb
insl
xchg
add
push
leave
rorb
js
insl
push
fsubs
test
dec
mov
icebp
xor
xlat
enter
adc
sbb
pop
repnz
or
stos
mov
xor
imul
es
shl
push
out
cmp
in
mov
sub
stos
lds
dec
mov
aas
fcompl
cmpsl
sbb
clc
mov
mov
ljmp
les
inc
out
xchg
fcmovnb
sub
pop
fidivl
add
and
stc
adc
out
lea
jmp
js
xchg
jae
xchg
push
das
inc
addl
jne
jnp
cmp
pop
mov
xorb
lea
xchg
jae
mov
subb
and
xor
push
out
gs
xor
xorb
rcll
push
sub
dec
aas
pop
cmpsl
ja
stc
test
imul
push
movsl
mov
loope
enter
inc
jle
out
jb
cmp
mov
or
shlb
lods
mov
lods
inc
xchg
xor
dec
mov
lahf
into
mov
xor
push
adc
insb
xchg
dec
cmp
call
dec
ficoml
arpl
jns
mov
rclb
xor
fdivrp
sbb
jne
lret
cs
dec
mov
mov
addr16
sbb
pop
leave
lcall
sbb
jno
imul
ret
inc
fs
insb
mov
xchg
aam
xor
testl
loopne
xchg
jmp
fcomp
sbb
les
xor
add
mov
fistpll
or
mov
jbe
fs
ss
cld
in
add
out
sub
sbb
lea
fidivl
dec
out
sub
and
sti
xchg
punpcklwd
pushf
add
movsl
push
and
test
cmp
loop
cmp
stos
call
out
jo
sub
call
adc
pusha
dec
in
sub
push
lret
dec
mov
rolb
sub
adc
mov
les
enter
add
push
xor
cwtl
stc
movsb
mov
daa
nop
mov
shll
xchg
int
cmpsl
push
push
loopne
pop
cmp
mov
fstps
lea
mov
into
addr16
or
and
pop
xchg
popa
test
sbb
xchg
sahf
lea
bound
inc
xchg
sbb
cs
jle
push
jg
int
fwait
jge
sarl
jle
jbe
adc
pushf
movl
lret
decl
add
jl
fldt
xor
fs
insb
call
aad
rcrb
lret
idiv
inc
scas
movsl
mov
or
xchg
addl
mov
mov
add
imul
fidivrs
adc
iret
push
stos
das
inc
sbb
or
push
push
negb
sahf
sub
push
pop
or
lret
mov
and
aam
in
ds
pop
fcmovbe
gs
sub
mov
into
mov
jns
test
test
mov
cmpsb
clc
dec
in
outsl
mov
jns
ljmp
mov
es
movsb
cmp
loopne
xchg
dec
or
imul
inc
dec
stc
add
shl
cmpsl
push
ds
mov
fstpl
add
jl
ja
repnz
adc
adcl
cmp
mov
and
xchg
xchg
data16
int
pop
or
dec
shrb
pop
bound
call
cmc
sub
xor
push
ret
pop
in
pop
repnz
icebp
push
out
xchg
push
loope
push
push
test
outsl
dec
cmp
jecxz
inc
in
push
and
pusha
cmpsl
in
cmp
out
sub
jecxz
inc
push
mov
pop
stc
lods
into
sbb
pop
popf
cmpsl
jb
negl
addr16
mov
sub
jne
push
pop
inc
cmp
inc
mov
inc
mov
adc
sbb
push
hlt
stos
push
into
rorl
test
dec
cld
sub
pop
sub
jl
sti
iret
sbb
and
lock
aad
fistl
int3
sbb
or
scas
jge
mov
cs
add
jp
sahf
pop
dec
sbb
movsl
or
sub
xchg
scas
push
call
shll
test
pop
or
pop
roll
mov
sbb
jae
pusha
inc
sbb
inc
insl
mov
mov
inc
mov
mov
mov
cmp
daa
cltd
xor
std
lds
xchg
insb
jge
clc
scas
mov
push
adc
enter
cmpsb
sti
sub
xchg
loopne
jo
sahf
je
out
cmp
gs
ret
in
movsb
lahf
mov
sti
mov
sbb
adc
lret
xchg
mov
sbbl
incl
mov
and
loope
outsb
outsl
jno
ljmp
cwtl
pop
gs
iret
jge
inc
mov
out
loop
lea
repz
sub
xchg
nop
imul
xor
push
rcl
mov
dec
inc
cmc
inc
popa
push
pop
sbb
popf
add
stos
sbb
pop
sahf
divl
mov
nop
push
xchg
pop
sub
jno
lods
mov
or
mov
scas
inc
xchg
icebp
outsl
in
sub
cmp
mov
dec
mov
iret
aam
mov
adc
and
push
inc
leave
mov
std
xchg
inc
xor
pop
cmp
leave
push
bts
aam
xchg
inc
cwtl
xor
add
sub
into
xorb
imul
imul
or
add
mov
dec
rorl
jne
in
fld
push
pop
pop
pop
pop
les
jno
mov
mul
nop
mov
sub
cmp
xchg
ja
pop
das
dec
jg
imulb
and
xor
push
jno
mov
sbbb
jl
mov
pop
sbb
in
jb
jns
push
jmp
ret
mov
xchg
popa
cmpsl
aas
out
xchg
pop
add
lds
xchg
pop
addr16
in
or
fistpll
mov
loopne
inc
adc
lock
call
pop
dec
fidivrs
mov
test
enter
nop
jg
lds
xchg
pushl
movsl
mov
xor
inc
inc
mov
xchg
pop
ret
xor
lock
sbb
aad
lods
lods
nop
mov
push
push
add
rcrl
sti
cmp
cvttps2pi
mov
add
into
jecxz
cmpsl
or
push
mov
xlat
cmp
sub
push
cld
fbstp
mov
mov
cld
xor
jnp
xlat
dec
fisttps
or
pop
sub
outsl
addr16
jne
movsl
mov
ficompl
mov
int
repz
test
dec
dec
nop
ljmp
int3
movsb
test
test
push
orl
leave
push
cmp
aam
jo
inc
inc
add
imul
and
pop
mov
pop
adc
mov
sbb
cmp
mov
dec
push
mov
test
repz
add
popa
and
mov
in
fcmovnb
aam
jo
pop
loope
push
je
xor
dec
cli
push
jl
cmp
add
inc
mov
sbb
pop
xor
enter
adc
repz
bound
cmp
adc
jecxz
mov
stos
pop
cmpsb
ret
fwait
lret
push
fucomi
mov
ret
pop
lret
imull
xchg
sub
ret
xor
cmp
pushf
mov
mov
sbb
or
cmp
pusha
pop
aas
and
sub
out
mov
negl
jnp
adc
cmc
popf
insb
sarl
push
jns
pop
in
rorb
mov
lahf
dec
jnp
sub
mov
xchg
loop
mov
jmp
or
and
test
test
jge
xchg
mov
and
enter
ret
xor
dec
idiv
cmp
sahf
clc
stos
sar
mov
setae
in
outsl
cwtl
fucomi
dec
mov
adc
adc
and
mov
pop
xchg
in
aad
mov
mov
in
aam
cld
jecxz
add
dec
mov
mov
std
sub
xchg
bound
xor
enter
xchg
nop
into
cs
mov
or
jmp
push
dec
pusha
xor
and
addl
lock
jmp
xchg
cmp
add
adcb
cld
fdivrp
lds
add
push
cmp
sbb
xchg
sbb
pop
jl
xchg
testl
fisttpll
inc
clc
test
fildll
addr16
loopne
ret
aaa
xchg
sbb
ja
sub
lcall
aas
adc
or
pop
shlb
fs
inc
cmp
orl
mov
ss
mov
pop
cld
mov
xor
scas
sub
adc
orl
or
and
cmpsb
add
fwait
repz
rorb
icebp
mov
scas
sub
or
push
rcr
mov
cwtl
mov
sbb
test
and
and
in
or
mov
lcall
jp
cmpsl
lds
push
xor
loope
inc
or
push
in
push
cmp
in
mov
dec
add
pop
jecxz
inc
xor
mov
fwait
in
mov
push
xor
cld
ficoms
cmpsl
push
xor
je
pop
ds
lcall
xchg
enter
test
lock
sbbb
sbb
lahf
xchg
sbb
and
or
js
mov
std
lret
lcall
pushf
js
les
sub
daa
or
sbb
xor
push
pop
jbe
mov
popf
cmp
popl
ja
push
xchg
jns
mov
push
movsl
mov
xlat
inc
inc
adc
xor
add
cwtl
cmp
testb
pop
arpl
or
mov
into
sub
sub
pop
jge
fimull
and
test
adc
insb
aam
fdivrl
and
add
inc
cwtl
addb
into
nop
inc
mov
out
call
jb
call
mov
and
cmp
bound
mov
sub
jo
aas
lock
popa
loop
xor
cwtl
xchg
mov
hlt
cmp
ds
icebp
mov
clc
shlb
out
insb
push
push
pop
pop
jns
push
mov
bound
cli
call
inc
push
push
inc
mov
icebp
stc
inc
insl
adc
inc
cmp
icebp
xchg
dec
aas
pusha
ds
mov
stos
call
ljmp
jmp
test
mov
or
imul
cli
inc
inc
out
xchg
jecxz
mov
ret
xchg
ja
dec
inc
or
negl
jno
aad
call
push
pop
sahf
jle
enter
mov
dec
mov
stos
js
cmp
xorb
sub
push
pop
and
mov
adc
lea
xor
xor
popa
mov
mov
fs
nop
pusha
or
jg
mov
and
sub
cwtl
push
test
int3
jne
rorl
mov
lods
test
pusha
les
cmpsl
add
jno
jecxz
jmp
in
or
xchg
mov
cmp
mov
sub
xchg
xchg
outsl
in
lock
mov
mov
je
aaa
push
in
jp
repnz
mov
out
aam
pop
xchg
push
test
outsb
loop
pop
out
pop
outsl
test
rol
sub
fsubs
xor
jae
adc
mov
mov
jge
lds
nop
mov
bound
cmp
and
and
mov
stos
cmpl
mov
mov
lcall
mov
sbb
pop
sbb
movsl
or
inc
jo
stos
mov
sbb
adc
inc
xor
cmp
push
adc
sub
jl
pop
iret
xor
shrb
mul
mov
push
push
outsl
sbb
faddl
add
not
scas
shl
int3
mov
cmp
inc
ss
cmp
les
dec
and
pop
ja
dec
cmpsl
mov
inc
pop
cmp
ljmp
mov
mov
in
scas
mov
push
inc
in
jmp
add
cli
sub
test
push
loop,pn
aaa
ja
mov
enter
fmull
hlt
and
inc
sti
adc
hlt
std
mov
movl
mov
and
mov
insl
mov
or
popa
lret
iret
movsl
lcall
xchg
pop
adc
mov
repz
xchg
jmp
jns
call
inc
out
outsb
les
fisttpll
daa
inc
aad
call
xchg
push
cmp
addr16
inc
xchg
xchg
out
sahf
ret
clc
sbb
fstpl
inc
aas
cmp
fdivs
cmp
cltd
xor
fwait
outsb
ret
cmp
pop
nop
insb
leave
dec
stos
les
xchg
enterw
out
xlat
xchg
shll
loope
adc
fistpl
jmp
aaa
sbbl
lea
cmc
push
mov
dec
mov
xchg
loopne
inc
gs
ffree
mull
stc
mov
stos
mov
loope
lods
data16
dec
pop
in
test
aas
push
sarl
jmp
cmp
and
or
adc
fidivs
add
sub
cltd
inc
mov
or
je
js
cs
in
out
or
or
test
popa
popa
dec
cld
or
clc
jne
inc
mov
nop
repz
pop
pop
add
push
mov
into
shll
dec
lret
pop
jg
cli
movb
xor
imul
xchg
sub
icebp
sbb
stos
sti
inc
jnp
and
shl
outsl
or
xchg
add
dec
adcb
xchg
mov
sbb
out
in
out
notl
pop
xchg
or
sbb
mov
imul
inc
add
add
ret
out
add
dec
ljmp
push
push
push
cmp
not
insb
push
sub
mov
xor
cltd
pop
add
enter
or
repnz
cld
xchg
and
lea
jae
aad
inc
xchg
sub
xchg
fs
pop
scas
mov
push
sub
pop
push
xor
cmp
outsb
fsubrs
mov
jb
pop
repnz
mov
out
ja
int
out
xchg
je
push
mov
daa
out
iret
jo
jg
fnstenv
loop
xchg
out
ja
cmp
xchg
mov
orb
adc
mov
repz
pop
sar
inc
out
out
or
shrb
adc
pop
loopne
add
mov
mov
ss
cmpl
mov
out
or
lods
sub
ret
out
dec
repz
xlat
pop
out
or
iret
fsubl
cmp
pop
aad
sbb
lret
dec
mov
scas
push
stos
sbb
testl
and
es
push
jl
pop
mov
mov
fyl2x
shrb
pusha
xor
fdivl
fisubrl
and
or
ret
rorl
fs
xchg
or
sub
xchg
pop
test
leave
xor
jnp
dec
push
sbb
push
into
pop
cld
jle
cmpsl
pusha
dec
adc
popa
outsl
pop
ss
sti
lret
inc
sub
rcrl
fistpll
cld
or
clc
or
es
stc
jg
xchg
adc
mov
push
and
push
sbb
fbld
aam
or
xchg
jle
adc
pop
sti
jnp
movb
add
fistpll
aas
push
fdivrs
cmpl
test
out
test
xor
xchg
mov
movsb
aam
push
push
inc
cld
inc
fidivl
rolb
xchg
repnz
xor
push
sbb
and
rcr
je
lds
lock
fldlg2
icebp
sti
js
sbb
cmp
loopne
lret
imul
andb
leave
paddusw
jno
dec
notb
cmp
push
inc
xor
fdivrl
mov
sub
cmp
cmp
pop
and
call
lret
sub
sbb
push
jg
or
out
cld
in
xchg
and
jnp
shrl
clc
push
insb
mov
repz
movsl
outsl
cmp
pop
cmp
adc
mov
insl
inc
punpckhwd
negl
daa
dec
mov
pop
mov
mov
aam
orl
rolb
jnp
fwait
dec
jne
pusha
stos
mov
fisubl
and
cmp
jno
pop
fstpl
popf
gs
fxch
scas
xchg
jge
cmp
xor
push
fidivrs
loop
stos
add
dec
sti
mov
leave
into
adc
into
call
int3
data16
js
xchg
nop
mov
icebp
jmp
push
mov
addr16
aad
jnp
pop
lret
xor
jmp
int
mov
jecxz
loope
loope
cmc
or
cmp
pop
scas
gs
popf
sbbb
cmpb
sbb
imul
fwait
pushf
mov
sub
xor
sub
bound
jae
ds
movsl
lcall
mov
int3
loope
jno
lea
xchg
push
pop
test
test
inc
pop
mov
sbb
hlt
bound
push
cmp
dec
mov
test
jecxz,pt
inc
inc
divl
mov
inc
cmpsl
int3
ja
fsubrp
sub
mov
enter
dec
or
mov
xchg
xchg
sub
jns
in
pop
mov
xchg
add
int
rorb
mov
mov
in
repnz
rcl
into
fmul
sahf
scas
jb
dec
es
xchg
cmp
adc
and
cmc
out
and
or
call
cli
sbb
xchg
adc
pop
sti
aad
mov
sti
aaa
jns
pop
jns
pop
cs
cmp
xor
push
cltd
mov
dec
sarl
bound
mov
in
cmpsl
mov
outsb
aad
cmp
scas
sbb
mov
sbb
push
into
scas
cmp
imul
push
sbb
jbe
dec
es
hlt
addr16
add
or
js
insl
in
fstp
push
mov
pop
mov
out
test
pusha
jg
mov
mov
mov
cs
xor
out
aaa
sbb
sti
add
jecxz
xchg
call
fsubl
popf
or
push
mov
dec
test
xchg
xchg
and
and
pop
mov
dec
mov
es
fldt
dec
hlt
cli
loop
les
into
cltd
inc
cmp
or
int
jbe
ljmp
jo
mov
bound
inc
cwtl
addr16
dec
test
mov
cmc
jle
idivl
arpl
push
adc
fs
xchg
or
cltd
dec
mov
icebp
daa
sbb
jne
dec
push
xchg
pop
jbe
inc
mov
pop
mov
incl
int3
jae
mov
and
in
jl
add
mov
push
ret
push
cltd
ficoml
and
add
popf
lods
mov
andl
daa
mov
imul
push
jns
sbb
fwait
sbb
dec
lea
stos
jle
cmc
add
mov
ljmp
popa
mov
mov
insl
daa
nop
xor
xor
dec
dec
xor
ljmp
fwait
mul
mov
pop
ja
xlat
divl
mov
jmp
or
bound
mov
sti
push
nop
rcl
adc
cmp
dec
std
int
sub
xor
es
add
jg
or
sarl
inc
add
mov
jmp
dec
out
xchg
push
jnp
xchg
dec
cmp
push
lahf
or
xor
xor
scas
clc
xchg
push
scas
jecxz
or
icebp
xchg
shr
cs
dec
insb
sbb
jnp
leave
pushf
pop
inc
outsb
lods
jno
push
mov
mov
icebp
addr16
out
adc
cwtl
pop
les
bt
sbbl
mov
inc
sbb
fstpt
test
mov
inc
cmp
xor
outsb
div
roll
xor
roll
divl
pop
fdivrp
mov
xor
jne
sub
mov
test
push
outsl
popf
mov
sbb
xchg
push
and
and
jns
lods
push
jle
out
pop
mov
fstps
jmp
or
fldt
mov
repnz
and
cmp
xchg
adc
out
aaa
ljmp
dec
jno
fcomps
mov
cld
cmc
ljmp
subl
bt
cmp
test
addl
push
insb
pop
lds
inc
pop
xor
mov
add
loope
daa
pop
data16
mov
push
push
xchg
adc
out
jno
test
push
push
ljmp
in
mov
xchg
adc
lret
push
in
je
and
mov
xchg
mov
mov
push
out
pop
lcall
dec
sub
repnz
lock
add
sub
stos
xor
push
sbb
lcall
fstpl
stc
andl
mov
sub
daa
adc
ret
inc
xchg
xlat
sub
mov
and
xchg
xlat
rorb
icebp
insl
cmpsb
inc
mov
in
xchg
xor
pop
in
cmpsb
mov
mov
xchg
xor
mov
dec
sbbl
and
pop
mov
popl
aas
scas
imul
ret
dec
fsubr
pop
clc
cmp
cs
push
and
jl
and
outsl
adc
les
fs
jno
jmp
inc
fldt
hlt
mov
adc
cmp
pop
xor
push
xchg
dec
add
sbb
outsl
test
lock
push
mov
mov
and
cwtl
mov
test
mov
adc
jp
aad
call
adc
cmp
movsl
jno
fs
cmp
xchg
inc
cmp
or
addb
jg
test
dec
sahf
sarl
and
insl
negb
xor
push
adc
pop
lods
sbb
add
cltd
cli
dec
mov
push
sti
jne
rcrl
mov
inc
repnz
mov
mov
dec
jg
lahf
movsl
sub
mov
mov
xor
mov
sahf
xchg
cmp
stc
repz
mov
add
jmp
push
lea
push
push
sbb
xchg
adc
lcall
shlb
adc
mull
sti
or
loop
pushf
inc
mov
icebp
fnstsw
push
mov
repz
mov
lods
jecxz
push
and
inc
orl
scas
insb
jo
scas
mov
sub
into
fists
fsubp
mov
incl
fs
xor
flds
les
mov
adc
lods
sbb
lcall
scas
add
insb
nop
mov
mov
jl
push
fs
call
rdmsr
lods
mov
cmp
mov
xlat
xchg
dec
jb
xchg
jo
pop
mov
cwtl
inc
add
fldt
jb
and
loop
mov
jno
push
std
xor
pop
in
mov
enter
pop
pop
pushf
add
mov
mov
in
and
push
xchg
das
mov
stos
pop
hlt
push
insl
jge
lret
xor
mov
mov
mov
lahf
mov
and
xor
xchg
jle
or
int
ficoml
test
mov
jo
ds
xor
sbb
inc
arpl
jmp
aad
jp
fidivrs
lea
jecxz
sbb
push
lahf
in
push
sub
fs
mov
push
lods
sbbl
xor
xchg
inc
rcrl
dec
sbbb
cs
aam
mov
sub
or
test
jecxz
outsl
hlt
dec
aaa
add
push
xchg
loope
jo
mov
cli
mov
lods
in
ret
or
or
fstpl
adc
xchg
jne
sub
add
cmpb
iret
test
repnz
mov
sub
out
mov
loop
or
mov
mov
repz
jb
jns
mov
mov
and
jecxz
push
roll
mov
xchg
into
sub
and
outsl
mov
push
shll
lcall
mov
ds
pop
cld
sbb
cmp
ret
adc
out
out
fs
popf
mov
push
sub
dec
mov
jp
ljmp
out
adc
mov
cltd
xor
xorl
mov
lret
xor
lods
ss
jle
pop
int
cmp
fdivrs
sub
imul
fs
in
xlat
out
int3
push
test
lret
ljmp
cmp
int3
test
stos
mov
loop
mov
negb
test
lock
cmpsl
andl
and
shrb
mov
outsb
ret
and
sub
fnstcw
sbb
es
cwtl
sbb
leave
and
ret
int3
out
xor
jne
add
fimull
jmp
lods
addr16
xlat
jge
scas
aaa
pop
inc
xchg
cmp
jmp
je
jl
push
or
mov
mov
pop
test
mov
or
cltd
adc
inc
push
sub
sub
cmpb
mov
dec
cmc
jns
sbb
xor
jmp
imul
sub
cld
sub
dec
xchg
jge
pop
adc
add
in
in
roll
sub
fsubl
daa
jo
popf
xchg
in
imul
int3
jl
subb
cmpsl
push
insl
xchg
in
xchg
inc
ljmp
jns
dec
scas
cwtl
hlt
jnp
xchg
mov
mov
adc
cmp
cmp
fs
std
repz
js
adc
or
mov
mov
jmp
mov
rclb
add
roll
movsb
add
shlb
cmpsl
imul
add
mov
sbb
sbb
cmp
push
adc
mov
enter
fst
adc
push
sbb
ljmp
cmp
xlat
ret
arpl
or
push
pusha
cmpsb
inc
int
shlb
test
aam
rolb
dec
lahf
arpl
sub
jge
cmp
add
clc
jbe
mov
pop
lret
arpl
sbb
loop
cwtl
sahf
adc
clc
mov
dec
leave
jg
sub
pop
loope
inc
rclb
jb
gs
pop
or
push
test
add
and
cmp
inc
cmc
xchg
and
mov
into
popf
or
push
stos
into
lret
pop
aam
into
enter
sub
inc
sbb
adc
push
in
or
cmp
pushf
jbe
je
inc
lret
out
push
mov
add
cmp
xor
subl
sbb
aam
push
mov
cmp
push
loope
and
loopne
mov
les
inc
scas
insb
xlat
insb
adc
cmp
jne
inc
xchg
adc
inc
jae
jl
shlb
dec
pop
lock
sbb
hlt
sub
mov
pusha
xchg
push
inc
mov
xchg
in
pop
pop
cmpb
jnp
lret
mov
repz
daa
in
popf
stc
shl
mov
fwait
jno
roll
jge
aam
cltd
and
xor
pop
iret
fmuls
ja
add
add
xor
shll
pop
fs
in
aas
ds
xor
fstpl
pop
jg
icebp
daa
push
dec
lds
add
mov
mov
xor
jg
push
in
aam
jg
cmpsl
cmp
aaa
cmpsl
inc
test
and
add
fistps
cmp
aas
ja
and
add
test
cmc
jbe
clc
push
or
adc
inc
adc
out
xor
mov
sbb
rclb
pop
hlt
popa
clc
int3
mov
call
arpl
mov
or
imul
pop
inc
repz
test
dec
leave
jmp
or
mov
mov
test
ljmp
loope
lea
nop
aas
mov
fldt
repz
outsb
subb
push
icebp
inc
stc
lret
out
xchg
dec
dec
lds
sbb
add
jl
es
sbb
or
xor
daa
mov
mov
lcall
test
test
loopne
sbb
std
sub
sbb
jge
pop
jp
push
sarl
sbb
mov
fistps
mulb
lcall
pop
xorb
add
into
not
jno
outsb
lds
test
adc
mov
aas
lret
jbe
push
mov
and
fucomp
sbb
lret
insb
xchg
add
mov
mov
jle
mov
data16
arpl
fldl
jg
fs
sti
scas
decl
inc
jp
add
pop
insb
insb
das
cmpsl
cmpsb
and
lds
inc
iret
mov
jbe
sti
loop
loope
pop
sbb
dec
jbe
pushf
fbstp
pop
jbe
ss
out
shll
xchg
mov
js
pop
in
cld
xor
fs
std
pmulhw
mov
mov
jmp
andb
addr16
in
aad
cli
stos
xchg
xor
push
push
xor
ljmp
outsl
pushf
outsl
negl
ljmp
sbb
cmp
in
js
pop
cmp
mov
pop
inc
test
das
xchg
jb
xorl
icebp
mov
xchg
mov
rcl
enter
cmp
cmpsl
add
aam
inc
aaa
mov
and
jp
inc
dec
mov
sub
lret
bound
pop
in
inc
cmp
mov
lret
imul
jp
stos
xor
stos
jmp
test
push
xchg
fldt
divl
fdivrl
sbb
das
mov
cmp
ja
cmp
xchg
or
cmp
lret
xchg
push
cs
cmp
cmp
fldenv
in
xchg
imul
adcl
or
inc
lock
mov
ja
and
arpl
outsl
cld
xor
cmp
inc
dec
fs
rclb
subb
icebp
out
push
iret
cs
pop
cmp
outsl
push
mov
in
mov
in
pop
sti
sbb
lret
jb
mov
mov
insl
pop
sbb
cld
inc
test
mov
dec
push
add
call
aam
sbb
aas
pop
adc
rol
adc
push
pushf
jnp
dec
fiadds
or
aaa
jg
addr16
out
jbe
mov
sarl
sbb
fisubrl
ss
pop
into
es
inc
sub
mov
test
pop
mov
cmp
add
jp
adc
incb
lods
mov
push
loopne
gs
and
cs
mov
mov
in
repnz
popa
pushf
insl
test
xor
loop
cmpb
inc
sub
mov
mov
cmpl
clc
sbb
mov
push
test
sbb
pop
cli
inc
lods
mov
insl
shl
push
fsub
testl
les
mov
mov
pop
sub
jno
push
xchg
cmc
push
mov
add
jmp
xlat
stos
or
inc
clc
pop
jecxz
jb
xorl
adc
and
cmp
inc
ja
sub
pop
mov
pop
mov
idiv
shlb
repnz
lods
out
cmp
repnz
movsl
lds
aam
ds
pop
notl
shr
ja
xchg
mov
les
xor
or
repnz
jle
lods
jne
cmp
adc
or
repz
xor
xchg
fcmovnu
lahf
ds
mov
mov
icebp
fstl
dec
adc
jle
push
add
sbb
push
xchg
pop
fucom
add
pop
sbb
mov
out
add
cwtl
mov
daa
call
xor
adcb
adc
rolb
lcall
test
jb
ljmp
mov
add
jb
leave
clc
iret
inc
jg
fdivs
ret
xchg
mov
mov
inc
stos
pop
mov
sbb
aas
inc
xchg
sarl
push
hlt
pop
xchg
lds
adc
fldcw
jns
fwait
xor
or
xor
hlt
repz
rcr
popl
outsb
mov
adc
clc
stos
inc
pop
sub
jge
arpl
inc
arpl
jge
orb
jmp
cmpsb
lock
mov
movsl
dec
popf
mov
pop
popf
mov
and
and
icebp
mov
out
je
sbb
mov
lahf
cmp
xchg
mov
jb
into
hlt
jnp
cwtl
imul
push
ljmp
ja
sub
cmc
xchg
pop
mov
mov
int3
push
into
fisttpll
fwait
jbe
cmc
xchg
shrl
fdivp
cmpb
lods
xor
cs
cs
std
sub
sub
push
sbb
in
inc
xchg
sub
and
jmp
sub
xchg
in
jl
out
imul
test
aam
xorb
sbb
adc
in
sub
dec
mov
mov
jge
idivl
mov
adc
xchg
push
nop
sti
cmc
dec
sub
push
jb
xchg
inc
scas
mov
jae
out
inc
aas
shrb
xor
out
adc
icebp
push
daa
adc
xorl
cwtl
loope
lret
ds
call
or
add
mov
add
add
push
out
sub
call
es
and
repz
mov
cs
sbb
jns
jg
dec
enter
test
test
xchg
pop
jge
inc
js
lock
sbb
inc
addr16
inc
jl
es
lret
fisttpll
fcoml
repz
fsubl
aad
lret
ja
dec
lods
repz
fmull
repz
jmp
ret
call
fiadds
movsb
imul
outsb
push
lds
dec
push
fdivr
cwtl
jno
out
scas
test
je
popa
and
out
xor
pop
inc
push
scas
inc
jb
in
mov
mov
leave
imul
pop
jno
stos
insl
sahf
loopne
adc
adcb
sub
and
mov
pop
test
sub
int
push
lods
insb
stos
mov
data16
lds
dec
arpl
cmc
jmp
outsl
jmp
or
outsl
call
fcmove
cmp
lods
xchg
mov
xor
jae
push
add
aam
iret
mov
inc
or
jmp
jl
mov
enter
test
dec
mov
inc
stos
xchg
loope
mov
mov
adc
mov
inc
push
int
scas
ret
cld
and
sub
cmpsl
cmc
shlb
lret
mov
push
sub
lods
push
dec
inc
ret
push
pop
test
inc
and
dec
inc
mov
lcall
cli
push
add
cmp
lods
popf
adc
or
pop
cmp
imul
fisubrs
cmp
xor
pop
imul
cmp
pop
xchg
add
cmc
pop
dec
insb
pop
out
cmc
std
fcoml
subl
push
mulb
std
mov
and
inc
xchg
inc
pop
mov
cmp
in
aad
shrl
pop
leave
mov
imul
sarl
pop
sub
and
xchg
push
or
adc
xorb
dec
cmp
call
movsl
movsl
je
jns
push
jno
pop
fistpll
xchg
test
sbbl
xchg
sub
scas
cwtl
mov
cmp
jge
sbb
lods
test
jne
push
popl
aad
lahf
adc
sub
out
pop
scas
fistps
xchg
daa
mov
cld
cmpsb
pop
in
jmp
rcll
lret
jmp
cltd
out
add
mov
test
pop
cmp
jle
shll
out
sub
fwait
mov
std
jne
arpl
or
fdivr
mov
into
ror
cmpsb
sahf
in
lcall
mov
leave
mov
pop
icebp
xchg
movsl
outsl
dec
imul
dec
xchg
jp
pusha
test
and
push
out
mov
pop
mov
enter
icebp
fdivl
loope
mov
adc
mov
das
mov
xlat
rcl
std
mov
mov
in
sub
mov
mov
or
ds
in
inc
jle
jmp
rcl
cmp
insl
inc
cmp
outsl
push
mov
xor
adc
fs
pop
push
push
jno
add
pop
div
mov
fdiv
mov
xchg
loopne
aaa
fldenv
sub
xor
and
and
mov
jmp
fsubl
jns
cmp
sbb
les
in
clc
repnz
push
push
or
repnz
addr16
fwait
and
dec
into
dec
aam
inc
xchg
lea
ficomps
nop
inc
mov
xchg
jmp
pop
mov
jl
jno
push
mov
dec
out
dec
mov
movsb
je
jg
lods
push
mov
xchg
or
or
mov
push
mov
stos
shll
add
iret
std
dec
scas
in
aam
andl
test
mov
dec
cmp
lods
cmovae
jne
dec
mov
fisubl
sbb
mov
cmpsb
outsb
dec
popf
pop
pop
xor
pop
cmp
dec
cmp
jge
outsb
jle
dec
imul
add
or
mov
cmp
popa
xchg
pop
clc
xor
push
sub
jl
mov
repz
fdivs
adc
idivb
out
xchg
cmp
test
mov
shll
inc
pop
add
filds
or
jg
lea
adc
add
cli
arpl
fisubl
xchg
into
iret
sub
stc
dec
jno
shll
mov
stos
stos
xor
sbb
pop
imul
xor
in
cmp
jno
fisttps
dec
jo
mov
inc
jecxz
lea
daa
and
pop
mov
scas
leave
aad
pop
shll
mov
cmpsb
hlt
add
les
jae
cwtl
dec
push
pop
fiaddl
push
jo
rcrl
gs
cli
sub
xchg
inc
sub
sbb
dec
or
bound
push
pop
pop
daa
push
jl
ret
sbb
dec
xorl
shrl
cmp
dec
mov
ret
repz
jp
sbb
in
repnz
jb
stos
sub
xchg
cmp
jge
xchg
or
sbb
stos
mov
jne
popf
out
aam
lods
bound
add
mov
or
sub
iret
jecxz
fsub
push
out
mov
fildll
imul
mov
call
pop
mov
popf
inc
sub
sbb
stos
dec
cmp
adc
jp
push
stos
outsb
mov
mov
pop
dec
adc
cmp
mov
jo
out
pop
mov
mov
fwait
loop
scas
outsb
sub
sbb
adc
jp
cmpsb
sbb
jns
xor
je
adc
dec
jno
inc
hlt
in
cmpsl
mov
inc
push
sarb
lret
addr16
jae
xchg
sub
int
leave
lret
enter
leave
sub
cltd
mov
xchg
xchg
fisubrl
jecxz
div
imul
shlb
aad
dec
loopne
push
daa
popl
inc
mov
das
pop
dec
iret
dec
pop
sub
push
aad
mov
cmp
xchg
lret
insl
pop
pop
dec
int3
scas
test
pop
hlt
insl
cld
loop
hlt
out
je
xchg
cmc
jle
ds
push
inc
xchg
mov
mov
xchg
faddp
fwait
mov
pusha
jp
mov
scas
dec
dec
fneni(8087
inc
bound
fs
pop
inc
jecxz
out
mov
in
sub
xor
push
popa
in
fildll
jno
test
xchg
iret
jmp
addr16
and
clc
enter
xchg
shll
ss
sub
clc
pop
push
scas
int3
es
mov
call
mov
adc
inc
mov
stos
add
push
xchg
dec
cmp
lods
popf
fists
inc
add
xchg
lds
adc
pusha
cmp
addr16
adc
js
xchg
jb
jbe
sarb
out
divps
mov
dec
push
pusha
pop
mov
sbb
test
mov
sub
add
jp
dec
js
mov
mov
imul
inc
fsubrs
mov
fdivrl
scas
jbe
imul
in
adc
and
add
push
fsubl
orl
pop
sarb
nop
call
or
es
add
mov
jle
cs
icebp
stc
cmp
iret
pushf
test
jmp
cmp
add
jl
push
addr16
xor
dec
arpl
pop
divb
sbb
cmp
pop
sbb
adc
lods
or
dec
aam
or
lea
push
fdivrl
inc
mov
shll
pop
test
mov
add
mov
xor
or
xchg
mov
mov
xchg
fmul
lods
pusha
xor
loope
jae
insl
idiv
ss
jno
push
sbbl
sub
sub
test
jo
data16
shrl
fwait
xor
stc
inc
ret
ljmp
rorl
icebp
mov
push
sub
imul
cmp
fcmovu
pop
fs
sub
lahf
fldcw
mov
or
jl
mov
lds
sub
arpl
sub
repnz
test
mov
iret
test
add
lods
idivl
outsl
mov
xchg
repz
xchg
lret
adc
pushl
mov
testl
mov
andb
das
sbb
inc
push
aaa
stos
aas
loopne
enter
inc
mov
lea
popa
addr16
push
insb
cmp
dec
sahf
push
les
cmpsl
cmp
into
mov
mov
cli
int3
dec
inc
inc
xor
lret
enter
adc
je
or
mov
add
xchg
clc
addr16
lret
pusha
cmp
cmp
add
push
notl
push
arpl
lcall
mov
clc
andl
popa
mov
in
outsl
mov
sar
jle
pop
push
mov
stos
xchg
or
jae
out
fstps
negb
mov
imul
xchg
xchg
cmp
adc
lock
cwtl
int
iret
sbb
or
in
lods
and
fldl
add
decl
fs
scas
call
imul
sub
test
dec
notl
iret
mov
adc
loop
inc
inc
xchg
repz
push
pop
ja
mov
decb
mov
push
pop
lahf
mov
les
jle
shl
push
add
insl
repz
fnsave
add
dec
outsl
enter
testl
hlt
mov
rcl
ds
xor
loope
sbb
scas
lock
test
adc
fdivrs
jl
aas
add
adcl
add
sahf
xchg
dec
adc
mov
lods
jecxz
add
imul
popa
push
sti
or
pop
arpl
hlt
fisubrs
decb
pop
gs
das
adcb
gs
std
and
sbb
xchg
loope
lods
in
gs
xlat
mov
sbbb
dec
loopne
xor
movsl
gs
sahf
or
stos
sbb
mov
adc
pop
orl
push
ret
fiaddl
inc
mov
push
mov
mov
mov
cs
adc
mov
xor
mov
or
mov
lahf
or
add
dec
mov
sarb
clc
jb
mov
rcll
mov
or
mov
movsb
mov
mov
cli
sub
push
sbb
sarl
sub
cmp
les
into
mov
jp
mov
aas
mov
pop
and
rorl
inc
stos
mov
push
repz
xor
mov
scas
lcall
pop
pop
or
popf
lahf
ret
repz
leave
cmp
aad
sub
out
andb
cwtl
sub
mov
and
sti
mov
mov
jae
inc
cmp
cmp
and
insb
fdiv
pop
sbb
pop
imul
addr16
into
into
mov
pop
push
stc
dec
jae
inc
fs
cmpsb
repz
pop
push
es
movnti
aaa
insl
faddl
dec
or
mov
pop
in
pusha
mov
cmp
ljmpw
dec
xchg
add
or
imul
sbb
push
cmp
pushf
xchg
mov
dec
sbb
xchg
shl
sbb
inc
and
addl
dec
mov
cld
adc
jnp
call
add
push
stos
adc
xor
or
push
fistps
rcrl
cmp
dec
sbb
jb
push
push
imul
rcll
add
test
xor
push
jmp
out
push
pop
ret
div
lods
or
icebp
dec
fldcw
stos
popa
sub
loope
je
std
xchg
pop
cmp
jne
outsl
pushl
js
mov
mov
push
incb
out
cmp
aaa
dec
sti
in
inc
cmp
pop
push
psubsw
pop
sbb
inc
jg
fisubrl
sbb
lds
stos
or
cmpsl
add
mov
sbb
push
adc
aad
das
ret
sbb
xchg
scas
out
xchg
cmp
leave
sbb
dec
pop
xor
rcll
and
push
or
dec
add
sbb
pop
divb
sub
roll
pop
pop
int3
cli
faddp
lods
daa
cmp
loope
cli
movsl
es
fwait
cmp
push
clc
inc
xor
fcompl
mov
add
iret
movsb
sti
hlt
cmp
mov
push
ret
roll
pop
cmp
ja
or
movsl
sub
pop
mov
in
movsb
push
fwait
lds
fsubrs
or
jmp
pusha
fidivs
aaa
es
movsb
xchg
addl
mov
pop
or
jb
xchg
out
in
adc
jae
xchg
test
xlat
sub
and
ds
das
jbe
inc
pop
jg
jbe
repz
nop
adc
clc
jge
cwtl
loop
xor
insl
dec
imul
mov
mov
inc
fcoml
xchg
loop
dec
xchg
cs
int3
jnp
ret
mov
pushf
xchg
jno
repnz
dec
das
imul
mov
insl
mov
out
das
pop
jg
fimull
push
sub
inc
inc
sub
insl
sbb
inc
jno
mov
or
pop
add
add
adc
adc
ficoml
jb
xor
mov
sbb
lret
adc
inc
test
not
insb
dec
xor
in
shll
push
in
push
test
cmp
fidivl
xor
and
pusha
jmp
sbb
call
pop
xor
jmp
xchg
scas
sarl
test
push
jae
mov
sbb
jg
add
dec
jmp
push
aaa
jle
ja
push
jae
cmp
aam
xor
dec
fnsave
pop
jp
js
push
in
sbb
sub
out
sub
mov
repz
xchg
sub
mov
mov
aaa
adc
pop
popa
jae
inc
xchg
push
insb
pop
scas
nop
inc
fsubrs
out
jns
and
add
rcrl
fistl
pop
mov
adc
jb
pushf
and
cld
jae
push
mov
xchg
push
xchg
pushl
cmpsb
mov
ljmp
jo
mov
out
sbbb
scas
cmp
push
cltd
jns
test
and
mov
pop
push
jge
dec
sub
test
out
sub
cmp
adc
jnp
nop
cmp
in
mov
sub
or
repz
jg
cs
and
aaa
jbe
loop
inc
push
jle
mov
adc
jmp
subl
xlat
xor
mov
pop
cmp
mov
adc
mov
lods
cs
xchg
or
jge
jecxz
scas
jnp
adc
xlat
ljmp
push
cmp
cmp
iret
xchg
divl
fcmovnu
les
mov
jg
adc
mov
inc
jmp
mov
cmp
sbb
or
mov
popf
push
dec
stos
pop
or
cmp
mov
inc
fs
addr16
icebp
lahf
xchg
push
outsl
jg
cmp
fisubl
cli
add
flds
in
mov
fs
mov
pop
andl
or
hlt
int3
jbe
pushl
pop
cmp
inc
inc
mov
push
jecxz
test
inc
mov
cmp
lcall
cmp
lds
inc
movsl
mov
insb
ja
popa
stos
sbb
add
push
stc
cmp
and
and
xchg
xchg
adc
pop
xchg
std
aam
jb
ja
lcall
js
jecxz
adc
sahf
aaa
jg
adc
loopne
push
fucomi
cs
insl
push
jle
jp
or
es
ror
aas
std
add
push
inc
imul
ret
inc
jp
add
mov
or
out
jbe
add
rol
movsl
ffreep
ljmp
repz
and
dec
fcoml
mov
loopne
adc
inc
jno
in
movsb
pop
test
push
and
mov
lahf
popf
rep
insb
pop
xchg
or
add
push
fbstp
pop
aad
cmpsb
dec
dec
lods
in
xor
or
aad
scas
mov
imull
jmp
sub
inc
fs
push
mov
push
std
pop
push
jg
sbb
pusha
pop
lods
ljmp
jns
mov
fadds
lods
push
es
loope
sarb
pop
cmp
sahf
addl
lret
lods
jl
test
xor
or
aaa
test
xchg
push
pop
pop
lret
cmpsb
mov
test
or
xchg
sub
push
fmuls
adc
xor
testl
dec
les
cmp
xor
test
cmpsb
dec
insb
and
sub
jge
xor
stos
dec
dec
iret
jg
adc
fbld
test
hlt
sub
mov
add
aas
pop
loopne
in
jmp
pop
loop
jo
mov
add
out
xor
fidivrl
sbb
imul
xchg
in
out
sbb
insl
pop
mov
and
movsl
pop
jb
cld
incb
push
xor
mov
jnp
and
lahf
clc
daa
inc
test
pushf
jmp
jne
mov
imul
mov
lods
lahf
pop
xor
movsl
push
in
cmpsb
xor
mov
das
xor
out
and
jmp
pop
pop
xchg
dec
shlb
xchg
fstps
sub
sahf
cli
fsubrs
mov
fmuls
pop
jo
or
and
push
mov
sub
pop
gs
and
scas
adc
enter
fs
ljmp
push
into
hlt
cmp
dec
mov
daa
pusha
pop
mov
pop
lea
lods
push
das
pop
out
shll
jno
mov
es
xchg
xchg
jae
mov
jb
sub
pop
mov
push
mov
sahf
push
xchg
pop
lahf
xor
mov
outsb
scas
lds
neg
push
fwait
xchg
cmp
insb
fwait
movsl
pop
enter
add
in
mov
adc
mov
ljmp
cmp
sub
mov
pop
jne
push
mov
dec
ja
inc
fisttpl
inc
push
repnz
test
or
adc
jl
push
mov
test
stos
jne
cmp
fildll
xor
mov
int3
and
fistl
push
pushf
mov
sahf
cmp
lock
aad
sub
push
int3
cmp
mov
leave
xchg
and
int
in
mov
test
fnstsw
stos
js
fwait
pop
push
xchg
inc
mov
lods
mov
xchg
mov
outsb
sbb
fisubrl
bound
xchg
fidivrl
adc
add
add
cmpsl
ror
js
sahf
adc
mov
pop
or
push
mov
and
mov
sbb
int
adc
je
jne
sbb
sub
pop
add
in
pop
mov
fisttps
add
addr16
imull
and
enter
add
insl
lret
out
mov
mov
scas
outsb
hlt
outsb
das
out
adc
or
push
mov
and
jno
push
fbstp
sbb
mov
pop
jmp
cmp
test
out
out
mov
shr
aam
jo
jno
mov
clc
out
xor
adcb
and
mov
adc
int3
ljmp
inc
insb
push
cwtl
sub
scas
sub
stc
loopne
jo
call
adc
push
xchg
xchg
pop
mov
mov
inc
pop
mov
jl
add
ss
mov
call
cmp
das
inc
movsl
loop
and
ret
mov
pop
iret
sbb
mov
jp
sub
cltd
sbb
add
mov
popa
lds
mov
xchg
ret
repnz
fiadds
mov
push
push
and
lahf
dec
or
sbb
lahf
leave
adc
fisttpl
xlat
adc
pop
mov
and
in
movsb
sbb
inc
scas
mov
dec
push
mov
fwait
pop
sub
clc
push
orb
adcl
idivl
jno
cmp
mov
sbb
add
ljmp
mov
push
pusha
dec
xchg
cmp
fsub
cmc
out
cmpsl
mov
shr
popa
cmpsb
cmc
inc
jno
or
lret
mov
dec
push
jl
cmpsl
subl
push
push
test
mov
gs
sbb
add
pop
bound
sbb
mov
in
divl
pop
stc
pop
test
pop
sbb
adc
mov
mov
sbb
addl
arpl
mov
jne
sub
xor
or
lods
adc
pop
jmp
jae
adc
mov
jbe
and
lock
int
and
jb
mov
and
out
loope
stos
stos
cmp
cmpsb
repnz
dec
mov
in
inc
mov
mov
add
mov
mov
sti
andl
sub
popf
lods
shr
leave
pop
pushf
mov
hlt
ljmp
mov
andb
mov
mov
outsl
sub
mov
mov
daa
into
pop
pop
aad
repnz
outsl
cmp
jl
xor
xorl
loop
ret
and
out
imul
cmp
inc
mov
icebp
lcall
or
mov
gs
jo
pop
cwtl
inc
mov
inc
jbe
pop
sub
inc
add
push
push
push
sub
inc
int3
scas
clc
push
sub
push
imul
incb
inc
push
inc
test
in
jecxz
fdivrl
aam
inc
jno
adc
push
jp
loop
jle
or
and
out
push
das
or
adc
jmp
mov
fs
sbb
adc
cwtl
imul
mov
sbb
dec
icebp
scas
sub
or
popa
mov
fcompl
pop
jge
or
sub
pop
iret
push
test
dec
fs
test
push
sub
mov
ja
cmpsb
xchg
cld
push
dec
adc
push
lcall
xchg
pop
add
shll
push
sbb
push
ret
pop
iret
adc
push
inc
and
test
enter
les
sub
ficomps
cwtl
mov
aas
icebp
and
lea
aas
sbb
cmp
popa
sub
xchg
xor
out
loopne
pop
push
adcl
ja
inc
mov
ja
adc
xor
loope
xchg
jg
stc
cmp
mov
push
decl
jg
addr16
xchg
xor
cltd
mov
das
clc
fucomi
mov
xchg
sub
repz
call
add
pop
shlb
fs
lcall
icebp
lods
mov
xchg
push
fwait
enter
in
lock
fchs
cmp
lods
loope
ds
out
imul
cmp
imul
push
add
inc
cmp
xchg
sbb
sbb
mov
lods
push
out
mov
enter
cmp
jbe
cmp
pushf
imul
mov
sub
call
out
daa
popf
out
je
jnp
std
out
mov
fidivrs
inc
mov
dec
shlb
fstl
mov
lret
inc
cli
sub
dec
add
loopne
cwtl
dec
and
bound
mov
rcl
cmpsb
in
cmpsl
xchg
jmp
xchg
and
sbbb
jg
js
xor
inc
xlat
fnsave
sub
mov
aas
jl
in
cmp
or
sarl
test
dec
shl
xchg
xor
dec
in
insl
sub
enter
and
nop
and
jge
cmc
add
fucomi
push
mov
pop
imul
sbb
jg
xorl
jmp
push
mov
rol
lods
arpl
pop
fisubs
xchg
fs
rol
scas
mov
rcrl
cmp
movsl
stos
fnstcw
xchg
repnz
scas
mov
clc
push
arpl
add
mov
pop
adc
mov
in
mov
les
fs
jo
jmp
xor
cltd
in
scas
or
mov
popf
jo
jno
mov
pop
cltd
in
cs
scas
xor
daa
mov
mov
iret
add
pusha
out
mov
movsl
sbb
dec
scas
add
js
jle
sbb
es
sbb
push
rolb
inc
jmp
lcall
stos
xchg
push
adc
pusha
icebp
outsb
shll
nop
mov
lret
hlt
outsl
cmpsb
pop
inc
mov
or
xchg
hlt
arpl
sbb
gs
sub
movsb
es
and
and
test
sub
adc
pop
jo
pop
das
aas
xchg
cmc
mov
add
pop
pusha
ret
lea
sbb
shr
lds
pop
dec
cmp
jl
mov
jns
ds
mov
mov
in
dec
test
fadds
push
test
jge
mov
lret
inc
sbb
out
xor
adc
sbb
jae
push
dec
sarl
icebp
fisttpl
fidivrl
xor
jnp
ficompl
dec
xchg
jge
xchg
jb
in
in
mov
loop
leave
jge
sbb
jae
into
ja
mov
pop
and
adc
int3
xchg
pop
sahf
add
mov
cmp
jns
sub
addl
push
dec
les
es
pop
fincstp
cmp
push
push
pavgb
xlat
into
fidivs
pop
test
adc
iret
and
cmp
sbb
rcr
lcall
jp
push
xchg
push
and
sub
fwait
pop
inc
hlt
pop
outsl
lret
mov
call
int3
mov
andb
stc
mov
jbe
adc
mov
xchg
mov
addb
jge
bound
pop
jecxz
iret
push
insl
popf
and
cmp
je
xchg
adc
push
lcall
cmp
jg,pt
xor
es
addr16
jns
pop
push
sbb
sbb
jp
out
add
mov
jmp
scas
das
jae
cld
inc
movsb
mov
or
mov
pop
sbb
push
enter
cmc
pusha
mov
pop
mov
or
or
mov
dec
loop
mov
jl
es
mov
hlt
loop
inc
pop
xchg
xor
popf
cmp
test
xor
sbb
mov
pop
scas
out
cmp
stos
sub
movsl
jecxz
mov
cwtl
sti
addr16
push
in
iret
jns
jp
into
dec
and
fstpl
push
jnp
int3
cmpsl
push
dec
in
or
xchg
push
leave
stc
push
push
xor
adc
pop
lahf
add
xorb
xor
sbb
pop
aad
data16
aaa
inc
jae
insb
mov
jns
mov
inc
adc
or
pop
xor
push
push
mov
enter
mov
dec
int3
fsts
loope
shll
mov
ret
mov
lsl
pop
gs
lods
into
xor
jl,pt
xor
ss
lret
dec
inc
or
and
insb
shrl
mov
inc
dec
mov
scas
ja
or
mov
stos
cmp
sbb
mov
lock
ret
and
adc
sub
aad
fmuls
pushf
out
ja
jmp
jle
mov
js
mov
xchg
mov
sub
jno
repz
jae
nop
sub
fs
ja
sbb
sahf
cmp
xchg
fxch
lcall
scas
orl
fsubs
pop
test
fdivr
push
pop
or
push
adc
jns
les
jbe
fidivrl
roll
push
outsb
add
repz
fcom
mov
dec
mov
iret
fnstenvs
cmc
je
mov
je
test
out
inc
or
into
and
xchg
fidivrl
jae
inc
xchg
mov
xor
insb
dec
ljmp
push
ljmp
inc
out
jle
pop
adc
adc
test
sbb
sahf
cmp
mov
and
or
and
in
outsl
addr16
pop
lret
jae
jb
mov
xor
sbb
es
lock
or
add
add
out
xchg
addr16
inc
pop
ficoms
inc
pop
mov
jbe
mov
insl
push
stos
mov
in
lods
inc
in
jae
std
sub
arpl
inc
xor
push
add
xchg
std
fs
mov
mov
mov
sahf
jne
inc
loop
or
test
loopne
pop
dec
orb
fldl
xchg
pop
push
cvtpi2ps
test
sbb
sbb
js
mov
or
in
ds
dec
and
mov
cld
loop
pop
leave
dec
mov
mov
push
nop
add
lret
mov
dec
xchg
ror
ja
nop
aaa
cmpb
push
push
xor
mov
adc
stos
fistl
xlat
add
add
lahf
cmp
mov
jae
mov
int3
push
inc
shl
arpl
lahf
sti
popa
ss
lret
pop
mov
jnp
sub
js
icebp
and
sub
jns
outsb
inc
mov
push
jnp
jmp
jnp
add
sub
icebp
inc
movsb
cs
pop
mov
jns
jno
adc
shrb
lods
xchg
out
movsl
imul
fistpl
mov
popf
sarl
js
ja
sbb
aam
or
fs
fnsave
sbb
lahf
adcl
lods
cwtl
cmp
pop
mov
add
idivb
xlat
add
xchg
aas
loop
pushf
mov
out
lea
fmull
xor
and
test
push
pop
push
test
fsubp
aam
js
aad
sub
or
push
cmp
sbb
fdivl
sbb
push
repz
incl
lcall
adc
pop
arpl
push
das
pusha
xchg
std
das
jns
fwait
adc
mov
sarb
add
cli
cmp
clc
push
sahf
inc
popa
add
push
les
gs
mov
xchg
xlat
and
out
cli
pop
cmp
dec
push
inc
repz
mov
leave
arpl
mov
js
cwtl
mov
aaa
bound
das
cmpb
sbb
cmp
jle
xchg
bound
or
lahf
mov
push
loopne
cli
adc
data16
mov
xor
negl
jle
mov
arpl
xchg
inc
mov
loopne
sbb
xchg
push
lods
jmp
xchg
pop
mov
aaa
test
xor
push
push
mov
mov
lahf
mov
inc
popf
std
push
mov
cld
sbb
adc
les
repz
fsubr
xchg
xchg
fdivs
cmp
mov
pop
ja
fstpt
jl
fwait
or
and
mov
xchg
cmpsl
aam
ret
cmp
sbb
pop
push
and
rcrl
lret
out
cld
lods
mov
std
out
add
scas
mov
push
and
fs
jp,pn
pop
mov
inc
pop
sub
test
out
pop
inc
xor
daa
loope
out
lods
xor
push
adc
jge
xchg
out
pop
jbe
or
pop
push
dec
cs
inc
xor
xorb
stos
sti
mov
je
push
add
fs
add
arpl
jl
es
or
addb
adc
jg
roll
xchg
lcall
mov
mov
lds
ljmp
stos
xor
in
imul
daa
leave
and
push
jg
mov
stos
sub
sub
fdivr
sbb
jmp
daa
mov
mov
jb
fabs
jno
arpl
mov
pop
ror
and
mov
add
adc
mov
xchg
pop
sub
es
in
iret
outsl
ja
adc
jp
hlt
jg
sub
adc
cmp
xchg
dec
lods
imul
gs
lea
xchg
adcl
hlt
xchg
add
sub
push
imul
dec
push
xor
push
lods
mov
pop
xlat
mov
or
int
dec
fwait
lds
jecxz
test
inc
jl
jnp
test
int
sbb
shlb
rorb
dec
mov
in
xchg
pop
pop
or
shrl
cmc
icebp
dec
cmpsl
sbb
adc
mov
jnp
cmp
pop
xor
lock
add
adc
or
and
mov
aaa
jmp
add
std
cmpsb
push
adc
hlt
xor
cld
pop
add
add
mov
sti
fisubrs
cmc
std
add
cmp
jp
cmpsl
rcrb
mov
out
out
movsl
sub
loop
sti
ljmp
aad
and
add
adc
jae
xchg
movsb
inc
clc
adc
dec
jns
cmp
bound
scas
jmp
mov
sub
imul
daa
sub
sub
ss
shlb
xchg
addr16
push
es
insl
in
adc
push
data16
cmc
ja
add
pop
pop
inc
xchg
add
fcomps
shlb
sub
rorb
sbb
bound
ret
imul
push
add
fnsave
adc
push
stos
xlat
xor
lods
cltd
jno
repz
fldl
fnstenv
xor
dec
push
sub
adc
repz
and
jle
int
imul
mov
xor
testb
cmp
ja
pop
mov
daa
cltd
push
fmull
add
sarl
into
xor
data16
int3
cmp
andb
jo
fisubl
mov
out
stos
sarb
in
mov
push
in
push
mov
pop
or
in
not
push
adc
cld
sti
jecxz
jg
sahf
jecxz
lret
test
ror
test
push
aad
or
mov
insb
subb
adc
xor
lods
xlat
inc
xchg
and
xor
adc
sbb
pop
loope
sub
dec
mov
lods
jl
jnp
test
xorb
xor
paddq
call
xorb
mov
fidivs
xor
xlat
sti
or
rcl
aad
pop
int
jg
jne
aam
mov
lods
xor
mov
xor
mov
hlt
mov
sarb
iret
clc
xchg
dec
psraw
aam
jb
push
xor
imul
sbb
dec
bound
test
mov
lds
loope
push
mov
pop
or
cs
add
add
add
insb
push
fimuls
stos
lods
sub
mov
daa
stos
jecxz
lret
mov
and
faddp
movsl
fldenv
es
jge
ja
and
iret
jg
jae
dec
aad
xor
mov
shrl
pop
pop
outsl
shlb
jo
call
push
vpaddsb
mov
scas
mov
mov
out
push
sub
push
mov
cmp
xor
pop
pop
mov
cmp
ds
add
cmp
ret
xchg
pop
scas
add
dec
inc
or
pop
jmp
js
add
cmp
xchg
lods
jle
push
aad
cmp
sbb
stos
mov
in
int3
push
add
mov
adc
pusha
outsb
js
dec
push
jbe
pop
mov
inc
shll
or
push
lds
pop
scas
sbb
in
xchg
out
pop
jl
dec
loopne
fisttps
cltd
testl
aad
lret
stos
cmpsl
xchg
mov
mov
mov
lcall
bound
neg
addr16
push
sbb
rcrb
shl
je
test
out
add
xor
push
pop
xor
xor
pop
in
inc
pusha
dec
jno
pop
mov
add
lret
xchg
fnsave
mov
std
je
dec
sbb
mov
push
sub
test
out
icebp
xchg
std
cmp
mov
pop
pusha
mov
aad
out
sub
inc
test
jp
mov
jge
iret
dec
pop
sub
and
mov
fcmovbe
sub
sub
in
adc
adc
push
dec
mov
fstps
xchg
mov
clc
cltd
aad
lahf
mov
push
in
jg
subl
subl
test
jno
sub
out
ficoms
push
repnz
inc
mov
or
adc
adc
fwait
push
jbe,pn
pop
ss
mov
xchg
push
and
pop
fimull
inc
inc
xchg
insl
add
imul
xchg
ljmp
push
sbb
test
inc
stos
mov
pop
arpl
push
sti
xchg
jge
es
xor
fildll
jge
and
jge
mov
sub
sub
push
mov
push
aad
jns
ljmp
jge
imul
adc
mov
cltd
jg
push
sbb
lods
lret
and
cmpsb
jecxz
sar
or
dec
mov
pop
fnsave
std
aam
add
sarl
aas
je
pop
test
xchg
int
push
push
sbb
mov
movsb
sbb
inc
jno
outsl
and
mov
loopne
fldcw
int3
mov
scas
movsl
adc
fmull
or
repz
push
push
mov
pop
mov
lods
test
and
mov
push
bound
push
mov
les
adc
stc
jo
loop
pop
sbb
mov
jge
call
adc
jns
lds
jbe
sub
push
stos
add
leave
lahf
les
daa
push
int
sub
aaa
fimuls
add
mull
ss
mov
test
in
daa
fdivrl
xorl
repnz
cmp
int
sbb
outsl
imul
clc
mov
sahf
sahf
addl
cmc
popf
div
mov
push
and
push
add
jecxz
inc
lods
sahf
ret
pusha
out
xchg
add
fstpt
out
fmull
pop
mov
cld
and
jg
mov
add
frstor
push
subl
fwait
mov
jl
mov
cmp
sahf
mov
push
fsubs
and
daa
sub
cmp
sbb
rolb
gs
icebp
push
popf
sbb
sub
outsb
outsl
gs
imul
imul
data16
pop
pop
push
inc
iret
in
icebp
cmp
stos
jo
ret
fwait
cs
lahf
sub
inc
lret
sub
push
sub
jns
jle
jmp
mov
jno
add
cmp
hlt
ja
push
pop
out
shll
test
out
ds
jne
push
mov
es
test
fidivrl
test
ret
and
dec
and
mov
inc
xor
test
pop
int3
xor
inc
sub
mov
cltd
add
xchg
adc
push
inc
repz
rcrb
add
pop
sub
imul
pop
arpl
jg
sarb
fstpl
dec
push
jg
mov
add
jns
cld
mov
fists
mov
mov
lret
repz
sub
sub
xor
cli
outsl
sahf
cs
cmpsl
popf
fildll
popa
fsubrs
fisttps
dec
xchg
addr16
jl
mov
ja
xchg
sar
cwtl
inc
daa
xchg
mov
leave
mov
aad
mov
ds
pop
jl
andl
add
xor
push
adc
bound
sti
mov
adc
mov
cld
ss
sbb
icebp
dec
es
inc
nop
lret
shll
ret
cld
movsb
push
lds
jns
ret
loopne
sbb
add
push
pop
dec
ret
lcall
sbb
sti
add
neg
or
int
sbb
mov
fildll
mov
add
inc
xor
cmp
loop
pop
test
stc
scas
movsb
adcl
dec
out
repnz
fidivrs
xchg
push
dec
int3
ss
repz
shrl
xchg
or
xchg
into
sbb
outsb
mov
pusha
addb
cmpsb
shrl
mov
push
repz
pushl
adc
jl
push
and
cwtl
push
or
aad
push
adc
dec
out
popa
push
dec
jbe
mov
sti
out
inc
fisubl
test
xorb
cltd
fwait
fidivrs
bound
fnstcw
inc
cmp
mov
iret
pushf
shr
lahf
xor
add
xor
jo
xchg
jp
sbb
mov
arpl
rorl
mov
aad
loope
notb
pop
addr16
in
notb
cld
pop
inc
dec
outsl
add
ret
sub
mov
inc
leave
test
nop
xchg
orl
subl
filds
shrl
movsb
xchg
or
xchg
sub
dec
fnstcw
js
sub
outsl
jle
pop
ljmp
mov
xor
add
xchg
sahf
dec
sti
cmp
hlt
pop
push
in
push
cmp
sub
test
test
mov
mov
mov
inc
mov
insb
pop
movsl
inc
push
shl
aam
add
pop
push
sub
scas
xchg
pusha
in
and
ss
mov
mov
pop
cmp
push
movsb
lret
mov
ja
pop
mov
div
lods
sbb
cmp
lods
sub
xor
int
push
push
sbb
xchg
or
cmp
jge
adc
mov
mov
cli
sbb
sti
fneni(8087
out
dec
movsl
add
inc
mov
cmpsl
mov
mov
out
xchg
sbb
add
leave
leave
movsl
add
sub
rol
aaa
mov
jp
mov
add
mov
stc
gs
loope
push
imul
sub
mov
lret
mov
call
decb
cmp
or
jle
jge
sub
imul
in
fmul
xchg
mov
mov
stc
mov
insl
ret
fstpl
push
sub
decl
ret
fsubl
xchg
inc
sbb
xor
pop
fwait
lcall
outsb
jb
sbbb
jmp
jns
mov
nop
arpl
dec
lea
xchg
fmull
adc
push
out
xchg
lahf
mov
jno
fdivl
leave
jb
test
fwait
xchg
je
xor
nop
aad
hlt
add
and
push
adc
imul
push
cli
inc
not
mov
cmp
nop
push
pop
push
sbb
xlat
pop
jne
add
cmpsb
in
enter
xchg
mov
dec
mov
rcr
cld
out
loop
dec
inc
jns
cmovne
iret
or
dec
add
adc
xchg
inc
int3
cmp
lds
push
popf
and
dec
pop
pop
cmpsl
into
pop
xchg
or
iret
iret
adc
xlat
push
dec
insl
mov
fmuls
sub
adc
sub
shr
push
popf
or
in
std
and
sub
call
push
negl
push
mov
xchg
test
loopne
mov
movsl
sarl
push
stos
lahf
fld
push
add
sub
mov
dec
or
push
adc
adc
xchg
cs
sarb
xor
mov
pop
mov
cmpsb
and
bound
jecxz
orl
mov
pop
shll
out
mov
xor
jns
pop
imul
mov
in
pop
out
pop
fdivp
movsl
fwait
pop
jno
icebp
addr16
or
sub
pop
in
and
ja
pop
push
mov
sbb
lret
fmuls
ja
adc
icebp
ljmp
sub
add
pushf
es
faddl
push
xor
test
lea
enterw
xor
dec
adc
mov
andb
xor
sbb
xchg
stos
dec
adc
pop
sbb
fnstenv
cmp
in
xor
imul
rclb
hlt
testl
arpl
fprem
mov
into
out
and
pop
and
rorl
mov
or
test
stos
or
fwait
dec
test
sub
xor
push
xchg
shr
sbb
loopne
xchg
aaa
insl
push
inc
ret
fistl
jg
lock
dec
std
pop
push
add
pop
sbb
jle
pop
xor
cmpb
int3
bnd
shl
addr16
test
cltd
adc
scas
xlat
mov
cmovb
mov
mov
push
leave
rorl
sbb
movsl
outsl
jnp
jmp
pop
mov
push
pop
push
mov
adc
jae
pop
sbb
cwtl
mov
in
push
nop
mov
mov
jbe
inc
push
iret
movsb
mov
push
xacquire
outsl
shl
or
test
sub
mov
cwtl
push
inc
sub
add
cmp
int3
andl
push
lods
push
push
std
or
cmpsl
jae
push
pop
loopne
sbb
outsb
sub
jnp
mov
pop
aas
mov
lcall
sarl
popf
fmuls
decb
in
cmp
mov
jbe
mov
push
aas
cld
fldcw
inc
push
out
add
stos
pop
mov
dec
mov
cwtl
jns
jb
adcl
xchg
push
lahf
addr16
lahf
inc
iret
lret
adc
jmp
dec
mov
jo
loope
jecxz
test
movsl
pop
mov
rcrl
std
push
sub
pop
mov
outsl
xor
fsubr
sub
cltd
sbbb
cmc
cwtl
inc
xor
fdivl
dec
dec
jns
mov
push
cmp
pushf
lea
and
push
inc
xchg
loope
mov
popa
dec
gs
and
aad
push
pop
aam
cmp
nop
cmp
pusha
xor
int
repnz
mov
cmp
pop
lret
lods
lret
pop
rol
pop
cli
insl
idivl
and
jns
repnz
out
outsb
jp
add
js
push
mov
std
inc
test
orb
xchg
and
insl
fwait
inc
in
data16
stc
decb
jne
rcrb
dec
or
test
jecxz
xor
aas
lret
lret
jb
mov
sub
push
sbb
and
inc
pop
lret
or
push
aaa
add
inc
jl
or
and
arpl
adc
mov
add
mov
mov
cltd
test
stos
sbbl
testl
dec
dec
xlat
out
sub
out
lods
push
idivl
insl
xchg
sbb
add
sbb
adc
mov
fldt
das
push
sub
xchg
fs
mov
xchg
fnstenvs
push
scas
cmpsb
xor
xor
add
icebp
add
bound
pop
or
movsl
and
dec
rcll
movsb
inc
sbb
scas
cwtl
and
fdivl
push
out
sub
dec
mov
inc
jne
xorl
jle
pop
int
and
pop
push
in
pop
outsl
and
inc
sbb
fsubrs
and
std
cmp
push
es
inc
mov
adc
mov
sar
bound
xor
iret
stc
add
sub
jb
sbb
jo
push
dec
ja
pop
sbb
xchg
adc
fimuls
int
xchg
jo
ds
addb
outsl
mov
cmp
ss
aas
xchg
fdivrs
jge
sbb
lods
mov
rclb
mov
movsb
add
fisubrl
xor
loop
imull
or
fs
les
pop
out
loop
lea
xchg
loope
loope
inc
fs
xchg
out
imul
fistps
mov
cmc
leave
and
mov
iret
sub
push
test
clc
sti
sub
rcl
cmpsl
lahf
nop
jbe
sbb
stos
inc
fmuls
psubsw
xchg
adc
sbb
addr16
inc
pusha
or
repnz
pop
or
adc
inc
push
and
push
pop
mov
lods
sti
shll
push
shrb
adc
ljmp
mov
inc
es
int
rol
ds
mov
rolb
imul
in
test
in
add
jge
fsts
jle
aad
sub
inc
pop
lret
ret
fistpll
jne
imul
es
jle
mov
xchg
or
ret
jge
mov
popa
shlb
mov
imul
adc
in
add
loope
bnd
jl
rcll
or
inc
dec
pop
ret
popa
pop
arpl
adcl
sbb
cwtl
test
inc
rep
fsts
insb
arpl
inc
adc
cwtl
cmp
leave
push
xchg
lods
push
jno
enter
cmp
movsb
js
inc
fistl
sahf
jg
je
lock
mov
xchg
incb
pusha
aad
out
in
xlat
fnsave
jg
bound
pop
inc
or
pop
push
or
cmp
fwait
nop
out
xor
lock
push
mov
xchg
inc
and
fisubrl
pop
add
xor
insb
mov
or
xlat
test
mov
push
xor
and
jne
sbb
iret
xchg
mov
leave
xchg
int3
leave
jl
mov
lret
inc
xchg
lods
cmp
and
mov
mov
mov
mov
sti
pop
popf
leave
stos
adc
cmp
mov
outsl
test
dec
cmp
mov
lods
jle
adc
sub
jl
lcall
xchg
flds
jecxz
xchg
inc
fcomi
lods
add
and
or
cmp
mov
inc
adc
ficompl
decl
mov
push
int3
or
xchg
push
mov
push
dec
jge
int
push
fnstsw
sub
inc
faddl
adc
test
jg
xchg
fldl
xorl
fimull
inc
inc
stc
push
jge
out
clc
loope
sbb
arpl
test
inc
jle
add
adcb
and
ja
adcb
pop
sub
pusha
mov
out
xchg
cmp
jbe
lock
mov
push
adc
lods
fildl
jg
leave
ja
js
push
and
lods
pop
lods
cwtl
insl
dec
jle
ss
mov
cmp
pop
sub
mov
push
adc
jo
or
push
sti
xlat
divb
loop
inc
xchg
xchg
in
jge
imul
xorl
hlt
outsl
cmp
xchg
xchg
fmulp
or
lahf
or
insb
adc
sbb
push
fstl
shll
push
jg
sar
int3
sbb
dec
je
fsub
lods
mov
add
adc
cmp
push
imul
dec
inc
inc
dec
pop
leave
xor
sar
mov
je
out
jg
insl
fcoml
adc
pop
mov
les
push
cli
xor
push
mov
repnz
mov
mov
stos
call
inc
add
inc
xchg
int
ds
daa
fsubrs
mov
pop
insl
into
push
lcall
xor
sub
and
dec
scas
pop
push
or
mov
mov
loop
outsl
outsb
jge
xor
sub
stos
sbb
add
inc
mov
lods
addb
add
test
cli
lds
or
into
int
mov
mov
add
cli
ljmp
rorb
rol
sub
add
and
jnp
jge
cmp
pop
sbb
xor
inc
mov
movsb
mov
cli
lret
xor
and
and
mov
xor
test
mov
ret
popf
out
je
fadd
test
and
xlat
fs
ds
cmp
jl
ja
aam
ficoms
inc
sub
sahf
in
iret
push
pop
mov
pop
add
jmp
xchg
pandn
jns
arpl
jmp
inc
sub
push
idivb
fdivrp
outsb
repz
inc
xchg
nop
scas
sbb
shll
adcl
inc
test
sarl
pop
inc
xor
and
aas
xchg
dec
popf
push
stos
leave
sbb
cmc
movsl
xorl
mov
shrb
mov
jns
mov
lea
push
mov
inc
sahf
cmp
mov
sub
mov
insb
push
dec
movsl
mov
cmpsl
lock
mov
mov
inc
lods
mov
out
outsb
mov
fistpll
out
rcrb
adc
inc
xor
xchg
mov
mov
lds
out
adc
sti
jb
das
out
jecxz
loope
mov
comiss
and
mov
or
push
fists
mov
sbb
fdivrl
sub
jmp
test
cmpsl
in
jecxz
sbbl
cs
xchg
fs
daa
mov
cli
lret
inc
pusha
pop
mov
lods
xor
lcall
add
lcall
int
daa
icebp
push
scas
pop
dec
cmpl
ret
ret
pushf
jnp
sub
jge
loop
or
and
stos
xor
out
fldcw
shrb
and
testl
clc
jo
and
push
push
insl
mov
mov
inc
add
or
loope
jg
ds
aam
aaa
jge
imul
or
and
pop
aas
test
adc
popf
push
dec
sti
pop
stos
lahf
iret
das
xchg
push
mov
adc
aam
mov
jbe
subb
xchg
bound
add
je
inc
ljmp
outsl
gs
mov
push
xor
push
mov
pop
testl
jo
adc
push
je,pn
xor
in
lods
xor
sbb
mov
sarb
xchg
mov
sbb
repz
adc
aas
sub
loop
or
stc
outsl
sbb
jg
outsb
test
mov
call
in
je
out
push
push
repnz
push
xchg
dec
addr16
add
hlt
andl
jne
cmp
mov
sbb
arpl
mov
jge
and
adc
out
outsl
ds
setle
xor
mov
and
xor
mov
testl
aaa
shrb
into
jg
xor
lea
imul
in
mov
mov
or
push
dec
clc
lahf
push
inc
xor
jbe
xor
pop
push
sbb
xorl
outsl
push
mov
popa
shlb
mov
aaa
dec
insl
and
inc
arpl
adc
xor
lods
cmp
sub
sarl
pop
ja
shll
and
add
outsl
sub
stos
jnp
cmp
fs
int3
ja
pop
and
stc
mov
test
pop
ja,pt
dec
push
add
mov
test
mov
or
add
call
jg
pop
mov
outsl
mov
fdivrs
leave
add
fwait
into
dec
jmp
sub
cmp
popf
pop
pop
int3
jle
ret
xchg
hlt
and
pop
mov
mov
jo
mov
adc
or
data16
sbbb
test
shl
ret
test
outsb
popf
sub
adcb
push
dec
out
in
xchg
push
sbb
jae
subl
xchg
pop
ss
xorb
xchg
or
negl
mov
and
das
mov
cwtl
adc
push
dec
and
mov
mov
mov
cmp
push
push
xor
pusha
in
or
add
int3
lret
sub
cmpsb
jo
xchg
cmpsb
pop
pushf
mov
fnstcw
dec
arpl
mov
jp
lret
fcom
popa
iret
aaa
adc
mov
shlb
int
cltd
pop
stos
cmp
pop
shll
cli
clc
mov
int
push
push
fsubr
fnstenv
xchg
inc
insb
fwait
rorb
add
popl
sbb
push
addr16
or
mov
les
std
adc
and
sub
mov
mov
test
hlt
les
pop
shl
mov
jns
jl
scas
mov
repnz
mov
mov
xchg
mov
sub
jl
movsl
push
test
aaa
cwtl
mov
fcmovnbe
cmp
lea
jg
ficoml
xchg
inc
roll
sub
or
addl
es
mov
push
movb
jae
test
mov
jbe
jns
xor
subl
inc
test
cmp
lock
pop
imul
iret
lock
xchg
mov
nop
scas
ror
int
inc
jb
jle
cmp
mov
enter
outsl
cli
insl
mov
daa
jns
ds
aad
movsb
test
cmpsb
inc
pop
js
insl
scas
loopne
scas
or
xor
je
fwait
dec
push
sahf
pop
sub
popa
xchg
and
ficoms
xchg
jne
or
rcrb
fnstsw
in
mov
sub
jbe
fisubrs
cmp
in
pop
outsb
push
aad
test
pop
ljmp
fwait
adc
push
lcall
mov
cmpsb
std
fldt
adc
loope
sub
insb
dec
dec
loope
push
mov
jo
hlt
inc
pop
xor
and
test
lahf
cld
xchg
test
lcall
and
add
daa
faddp
fnsave
pop
or
dec
inc
inc
inc
jbe
add
loope
out
push
mov
dec
int3
imul
inc
sahf
push
push
aas
mov
rcrl
rcl
mov
cmp
mov
icebp
outsl
mov
in
dec
shl
dec
frstor
popf
fwait
push
clc
sti
stos
rclb
push
popa
mov
pop
inc
ret
mov
adc
sbb
push
xor
cmpsl
jmp
xor
iret
mov
jp
add
and
jle
ret
sbb
imul
pop
aas
aam
leave
and
fwait
sbb
testl
jecxz
js
and
sbb
daa
inc
mov
movsb
xor
test
sarb
jbe
pushf
call
rcrb
ret
sbb
nop
sub
jecxz
push
hlt
fidivrs
sub
adc
out
mov
test
or
stos
mov
jecxz
or
lret
enter
sbb
adc
sbb
adc
jo
jle
mov
xor
mov
mov
push
and
inc
mov
inc
out
xchg
mov
lods
jb
pop
dec
cmp
stos
test
and
sub
data16
out
jbe
lret
or
mov
bound
lods
mov
fdivs
outsl
or
cmpsb
and
pop
jbe
lret
sub
dec
mov
mov
movsl
cwtl
addr16
mov
lcall
aas
jnp
and
test
jo
sbb
mov
dec
pop
insl
in
adc
ss
xchg
xchg
mov
aas
out
aad
test
mov
mov
dec
fcoms
pop
pop
add
cmc
mov
stos
mov
or
and
repz
push
and
aaa
xor
xchg
mov
cld
add
je
or
jmp
mov
aaa
sbb
dec
push
push
sbb
pop
add
pop
cmc
shlb
scas
inc
sub
fwait
mov
int
xchg
dec
sbb
aaa
movsl
dec
fistpll
fs
aam
jae
and
mov
inc
clc
pop
mov
nop
shl
cmpsl
pushf
ret
cmpsl
cltd
hlt
mov
push
cmp
adc
cmc
xor
cli
cmp
xchg
in
out
jbe
and
mov
cmp
mov
clc
jo
adc
in
xor
addr16
imul
adc
jns
inc
push
pop
mov
data16
nop
add
in
sti
xchg
jmp
mov
nop
fidivl
sti
push
or
idivl
scas
rorb
lock
dec
sbb
mov
jne
clc
rol
and
pop
xchg
xor
xchg
xorl
xor
shrl
mov
sub
jns
mov
stos
and
pop
jb
rcll
mov
jge
inc
in
mov
xor
mov
daa
jbe
pop
mov
iret
loop
sub
cmp
or
xor
pop
mov
sbb
mov
loop
or
pop
xchg
xor
cmpsb
add
push
ljmp
sub
addr16
in
pop
mov
mov
movsb
push
adc
ret
push
xchg
dec
je
push
add
mov
rcll
sbb
xor
imul
cs
jge
sbb
sbb
shl
popa
cmp
and
cmpb
xor
idivl
adc
imul
adc
mov
add
lret
push
fistpll
mov
insb
and
das
add
popa
or
xchg
jnp
pop
inc
in
lods
xchg
aas
rep
std
cmp
or
js
aad
push
dec
std
dec
sub
adc
daa
lcall
inc
mov
test
repnz
inc
adc
les
jnp
jb
sbb
pushl
dec
int
sbb
mov
pop
sub
repz
ja
iret
dec
adc
scas
push
iret
stos
cli
orl
push
push
mov
lcall
mov
sbb
stos
xchg
pop
jnp
mov
and
jne
cld
fisttps
xorb
subl
sbb
xorb
jg
fnstsw
nop
sbb
ja
outsb
in
or
ror
pop
push
pop
push
pop
add
outsl
aam
jecxz
inc
shrl
js
je
dec
fs
jnp
jno
xchg
pop
add
jne
pop
stos
add
cmp
cmp
mov
mov
clc
push
das
lods
into
andl
fisubrs
mov
fbstp
mov
inc
ror
or
sbb
dec
insb
fs
push
insb
mov
xor
push
mov
jle
jg
jle
sbb
inc
ret
jge
scas
cmp
adc
retw
and
cs
jmp
mov
dec
push
xor
cmpsb
sbb
mov
out
pushf
xchg
push
pop
icebp
lcall
xor
mov
jb
orl
movsb
mov
test
or
mov
push
push
out
repz
push
jns
fdivrl
dec
adc
pusha
cld
aad
push
and
push
or
mov
xchg
in
xor
dec
xchg
xchg
cmp
fisttpl
jo
sahf
or
pop
jne
cmp
adc
pop
jb
sbb
dec
xor
int
sub
or
xchg
loope
daa
jmp
inc
cmp
in
push
xchg
cmpsb
add
filds
sarb
pop
aad
loopne
lods
pushf
and
xor
ljmp
lcall
mov
cmp
pop
push
mov
std
cmp
mov
xor
insb
jecxz
xchg
pop
jg
and
jge
les
pop
inc
sub
cwtl
rol
sti
jo
lock
or
adcb
pop
cli
sub
xlat
jle
pop
pushf
cld
repnz
faddp
mov
je
jg
cs
pop
push
addr16
and
xor
sbb
sbb
jno
in
cmp
movsb
pop
jno
loop
test
xor
adc
sub
cmp
shrb
icebp
xlat
call
mov
fisubs
out
repz
mov
jge
addl
cmp
mov
mov
cld
mov
test
rorl
imulb
xor
cmp
stos
mov
cs
repnz
repz
dec
in
dec
out
divl
popl
scas
and
jmp
xchg
test
mov
sub
stc
rcll
or
stos
int
jo
sub
rcr
mulb
push
or
call
scas
cmp
dec
mov
movsb
cmp
sub
mov
sub
rcl
shrb
cli
sbb
call
pop
pop
rorb
out
negb
fs
xchg
cmp
jmp
sbb
pop
lret
push
sbb
icebp
sti
or
xchg
lods
dec
xor
and
arpl
mov
test
mov
jmp
arpl
fldl
and
cmp
pop
int
rolb
and
ficoml
loope
shrb
jge
dec
mov
mov
adc
push
js
rsm
pop
cmpsb
add
daa
lret
push
sub
leave
jp
xor
ret
inc
jg
mov
xchg
loope
out
fsubrs
repz
mov
mov
jae
aam
add
pop
xchg
shl
cmp
mov
pcmpeqw
sbb
mov
jae
out
lret
dec
inc
add
pop
ja
xor
mov
pop
fmull
mov
fmul
inc
mov
fs
jne
add
out
dec
mov
imul
aad
sub
pop
inc
inc
push
ror
lods
lahf
pop
mov
cld
dec
push
orl
sbb
fucom
push
aas
xor
adc
lods
sub
sub
xor
jnp
lock
add
arpl
pop
cmpsl
push
jae
push
add
imul
iret
mov
or
call
inc
mov
out
daa
fadds
cltd
inc
xchg
dec
roll
bound
mov
cmp
add
cltd
mov
mov
adc
mov
pop
cmp
out
inc
add
xor
cli
repnz
repz
mov
mov
bound
xchg
and
and
fdivrl
std
sbb
ffree
push
nop
push
cmpsl
shrl
push
nop
fwait
and
cs
jb
add
jnp
adc
xor
xchg
data16
adc
mov
xchg
jp
jo
lret
push
jnp
xchg
ds
cld
test
test
xor
imul
pushw
jge
dec
mov
call
cmp
pop
mov
subb
sahf
aas
in
jno
dec
cli
adc
mov
pop
push
and
inc
in
in
imul
shll
int3
adc
cmc
add
out
fcoms
add
dec
jmp
repz
xorb
sbb
lahf
addr16
jp
fcoml
and
fwait
add
mov
push
idivb
jge
js
roll
data16
push
imul
into
pusha
sbb
rolb
push
pop
scas
mov
outsl
mov
pusha
sbb
inc
imul
pop
in
push
or
movl
sbb
mov
pop
mov
fdivrl
insb
flds
inc
and
inc
mov
jo
gs
fisubl
subb
push
arpl
je
add
and
jb
rorl
outsl
in
fcomip
dec
and
push
test
ljmp
or
adc
rorl
push
mov
fistps
and
jecxz
mulb
imul
arpl
add
faddp
pop
mov
fldcw
cmp
xor
xor
jb
and
scas
mov
adc
mov
and
sub
sub
imul
mov
jmp
mov
and
aam
jns
xchg
mov
loope
jle
dec
sbb
mov
sub
hlt
pushf
inc
ja
adc
hlt
test
adc
cmp
movsb
xor
into
int3
mov
dec
enter
stos
clc
and
aam
lahf
cltd
mov
pop
in
outsb
ret
mov
iret
or
or
test
test
jp
push
push
push
sub
dec
scas
inc
push
and
mov
add
enter
mov
mov
mov
cmp
pop
xor
jmp
adc
and
fwait
add
pop
andl
inc
sub
fadds
in
push
cmp
mov
lock
test
out
or
pop
inc
scas
xchg
jae
stos
inc
push
repnz
cld
pop
or
sarl
add
pop
lods
daa
xchg
push
cmp
arpl
cltd
pusha
imul
mov
movsl
mov
cwtl
push
mov
sub
out
pop
xchg
mov
shr
lea
xor
or
jae
movsl
mov
mov
es
mov
pushf
arpl
xor
push
mov
and
aaa
pop
xor
add
leave
jb
jmp
xchg
xchg
jbe
lahf
ds
repnz
icebp
sub
lods
dec
mov
xor
icebp
stos
adc
inc
divl
xlat
add
sbb
aas
push
mov
fcmovnu
cmp
aaa
cwtl
push
rcrl
aaa
mov
mov
dec
pop
rcl
repz
xor
sub
push
mov
push
mov
fiadds
sbb
mov
fnclex
scas
in
in
ds
and
add
adc
cmpsb
aaa
inc
mov
mov
pop
pop
cmp
movsl
addr16
rol
mov
dec
aaa
divb
xchg
dec
mov
outsb
mov
pop
mov
out
out
dec
in
adc
pop
inc
out
mov
cwtl
jle
jmp
outsb
and
movsl
rolb
call
mov
xchg
inc
fcoms
mov
jo
cltd
mov
jbe
aam
sub
mov
dec
jno
adc
pusha
stc
mov
push
out
mov
cmpsb
ficompl
ficompl
pop
emms
adc
loope
inc
cmp
add
add
jbe
fwait
xchg
sti
adcb
mov
add
sti
inc
leave
ljmp
cmp
out
test
xchg
mov
popf
stos
cs
lods
mov
dec
xchg
and
cmp
adc
pop
pop
sub
fsubrl
sbb
mov
movsb
ljmp
ret
cmpsb
mov
mov
jp
test
xchg
mov
or
insb
mov
dec
xlat
rorb
lahf
int
sub
fistl
cmc
into
mov
ret
rolb
ljmp
dec
cmc
loop
sub
cmpsl
pop
inc
test
mov
ret
ljmp
call
and
mov
loopne
test
je
xchg
leave
movsl
fmull
mov
pop
adc
dec
fldl
sbb
jmp
mov
cs
fdivrp
fmuls
in
inc
cmp
lods
into
movsl
jp
loop
out
sbb
sbb
dec
je
sbb
loope
test
lods
ja
imul
addl
jnp
xorl
std
nop
inc
xchg
push
iret
lcall
inc
dec
mov
sub
mov
mov
fnstsw
xchg
fldcw
hlt
es
xchg
jno
adc
clc
xchg
je
mov
js
jno
in
xor
pushf
ja
jg
sbb
sub
data16
movsl
loop
cwtl
enter
inc
or
pop
cmpsb
mov
in
fnstenv
sub
sub
push
push
enter
es
mov
mov
mov
fwait
mov
mov
mov
ret
stc
adc
pusha
mov
xlat
adc
sahf
in
mov
je
mov
imul
les
rcrl
mov
or
or
sbb
je
mov
adc
jo
clc
lea
je
ja
and
push
inc
stos
mov
adc
sbb
mov
addb
cli
cmp
mov
daa
sub
loop
cmp
jae
jo
lea
dec
push
adc
fwait
mov
nop
nop
ret
jns
data16
xchg
hlt
inc
stc
in
xchg
mov
mov
xchg
cmc
pop
in
and
and
lock
je
xchg
or
aad
mov
cmp
aam
dec
xchg
ja
sbb
mov
je
dec
es
cmc
inc
aam
int3
shrb
push
add
mov
gs
cmpb
mov
jmp
aad
sahf
test
jnp
mov
jb
mov
mov
jne
inc
xchg
cmpsb
push
sbb
xchg
add
aaa
movsb
mov
test
inc
fsubs
adc
inc
xchg
notl
push
ljmp
das
lea
dec
ret
add
sti
inc
dec
je
inc
add
call
dec
mov
or
mov
sbb
clc
or
int3
sti
aam
shlb
ds
push
in
jbe
add
sbb
arpl
aas
lcall
decl
out
inc
adc
gs
add
add
xchg
dec
dec
mov
lods
ds
xchg
imul
jp
stos
int
and
push
js
mov
nop
push
push
or
imulb
out
divb
pop
loope
pushf
inc
xor
pusha
inc
ret
incl
pop
es
adc
adc
sbb
in
roll
pop
cmp
sub
cmpsb
daa
mov
pop
push
mov
or
lret
outsl
sub
mov
inc
dec
aaa
cmp
inc
jg
or
inc
pop
rol
mov
loope
dec
lods
js
adc
jb
stos
stos
vandpd
ljmp
lret
cmp
lret
xchg
shrb
mov
inc
xor
ljmp
lcall
pusha
mov
pushf
cmp
sbb
mov
mov
adc
xlat
mov
enter
lods
dec
ljmp
xchg
lds
icebp
fnsave
out
stc
xchg
cmc
fdivs
ds
cld
icebp
push
pushf
in
cmc
push
in
fs
or
sub
out
pop
mov
inc
lcall
mov
jmp
clc
int3
push
bound
sub
lret
cmp
call
push
cmp
cwtl
mov
pop
cld
pop
das
gs
xchg
movb
cmpsb
insl
loope
popa
cmc
add
arpl
jo
dec
jp
inc
scas
or
xchg
ja
aaa
jle
fs
xchg
jg
sti
roll
into
xchg
and
popf
cmp
xor
jecxz
imul
mov
mov
push
ret
lret
roll
jo
mov
les
imul
push
dec
or
jle
push
cmpb
sub
lahf
sahf
pop
shll
cmc
sub
mov
les
icebp
jo
pop
adc
mov
mov
cld
in
dec
in
clc
test
inc
cld
fwait
lods
arpl
sub
cmc
dec
or
dec
push
inc
jge
fdivrs
fistps
out
jo
jno
popf
xchg
pop
js
pop
aaa
jecxz
aaa
repnz
and
push
dec
idiv
movsb
mov
adc
aad
out
in
push
movsb
adc
enter
mov
insb
cld
push
jo
push
popf
add
lea
sub
arpl
push
shl
andps
aas
mov
pop
mov
mov
lods
movsb
fsubl
xchg
sub
xor
filds
pusha
jo
test
adc
cld
pop
stos
mov
sti
in
mulb
in
out
mov
jp
mov
cs
and
mulb
dec
fsub
mov
add
or
imul
xchg
pushf
fisubl
jb
mov
dec
aas
fcomp
adc
fcomi
pushf
movsb
cmp
ljmp
ror
aam
mov
mov
out
and
arpl
call
mov
lds
adc
into
jmp
fsubrl
cltd
test
gs
inc
popl
pop
cld
cmp
aaa
add
add
mov
ljmp
xor
cmpsb
movsb
xchg
fcoml
mov
fisttps
mov
lods
in
xor
lods
jno
rcr
ret
popf
jl
push
popf
std
jo
inc
pop
int
push
pop
cmc
push
lret
jnp
xchg
jmp
mov
jns
jbe
fbld
sub
and
clc
and
mov
jno
shlb
xchg
cld
sbb
mov
push
addr16
jnp
cmpsb
out
and
jmp
jae
mov
pop
ror
or
dec
mov
add
pop
adc
cmc
lock
lods
cmp
in
fcoms
cmp
dec
fs
aad
outsl
jle
rclb
dec
sub
sub
popf
mov
jae
pop
sub
mov
sbb
stos
dec
fsubl
or
mov
mov
mov
jb
outsl
ja
daa
cmp
push
push
and
sub
xor
rep
mov
or
jnp
jb
mov
sub
bound
mov
sbb
dec
and
popf
loop
xchg
outsl
xchg
sbb
fs
push
fidivl
adc
pop
pop
and
xlat
invd
add
bound
push
dec
add
mov
imul
int
sbb
dec
adc
sub
scas
popa
or
mov
xlat
add
sub
jae
jge
aam
pop
xchg
xlat
mov
or
inc
aad
sbb
sar
push
clc
pop
push
sbb
mov
push
icebp
cwtl
dec
nop
std
or
ljmp
mov
addb
mov
add
sti
dec
movsl
vphaddudq
mov
jb
xchg
pop
dec
mull
dec
sbb
sbb
sbb
das
cmp
icebp
dec
data16
sbb
cwtl
adc
cmpsb
in
call
out
push
stos
xor
in
cmp
sbb
popa
out
jo
mov
fistpll
aas
and
xchg
fiaddl
mov
jp
addr16
sub
xchg
or
add
pop
mov
adc
xchg
dec
ffree
lds
jmp
nop
mov
pop
xor
mov
fnsave
add
mov
repnz
xchg
fcoml
out
adc
mov
orb
stos
jp
testb
outsl
insl
fidivl
ljmp
push
test
test
xor
lods
aam
aaa
outsb
cmp
adc
stos
repz
mov
sub
and
in
dec
push
sub
mov
push
add
and
mov
sahf
idivl
cltd
or
fdivrs
orl
adc
test
xor
cmc
sbbb
mov
sarl
xchg
popf
clc
mov
lds
popf
inc
add
mov
ret
imul
cmc
push
jmp
or
bound
adcb
in
jg
mov
shlb
stos
push
and
dec
inc
inc
inc
dec
xor
fdiv
test
sbb
inc
xlat
add
adc
add
jo
fcmovnb
loope
xlat
jae
mov
xchg
sub
scas
adc
xchg
rclb
adc
or
or
mov
jp
push
sub
popa
add
push
mov
imul
push
or
mov
pop
es
mov
mov
into
and
icebp
xchg
push
pushf
dec
addr16
mov
or
adc
xchg
inc
jmp
xchg
mov
gs
mov
mov
cwtl
aad
and
mov
dec
mov
pushf
aad
jmp
fwait
jb
divb
jnp
outsb
inc
rolb
shll
inc
mov
jb
dec
or
rcrl
mov
fnsave
or
sub
in
iret
loope
lret
mov
fnstcw
sub
dec
sub
lret
sti
pushf
xchg
and
mov
repz
jg
push
mov
sbb
mov
adc
stc
js
stos
in
jo
cmp
push
xor
mov
and
push
mov
add
pusha
mov
or
cmp
mov
or
data16
pop
lcall
pop
shl
dec
fistpl
lock
mov
clc
sub
and
jl
lods
push
push
ss
push
dec
pop
pusha
adc
dec
pop
rcl
fwait
inc
adc
add
daa
lds
pushf
sub
inc
mov
add
push
not
das
fwait
add
idivb
jne
lock
popf
mov
or
lahf
xlat
test
negl
decl
push
jne
clc
adc
mov
repnz
ret
sti
xchg
insl
pop
xchg
cmpsb
sub
mov
fwait
pop
or
shll
fcoml
cmc
fildll
testb
mov
stc
fdivrl
call
mov
sbb
adc
lods
xchg
cmp
cmpsb
sarl
mov
lods
iret
int3
rcll
cmpsb
outsb
jecxz
test
jo
sub
mov
dec
dec
pop
push
sbb
mov
mov
out
add
jb
popf
inc
sub
test
aad
ds
inc
imul
adc
dec
loop
gs
inc
mov
jo
test
sti
pop
call
gs
popf
xor
in
lahf
jge
inc
mov
push
adc
inc
lods
in
repz
add
les
dec
addr16
dec
xchg
cmp
pop
mov
xor
inc
dec
lret
mov
push
fildll
dec
sti
add
push
add
lods
sti
pop
sbb
xor
imul
fisttpl
xor
ret
xor
or
jns
mov
xchg
movsb
push
or
add
pushf
dec
or
inc
clc
repnz
mov
mull
je
mov
arpl
dec
mov
xchg
lea
push
mov
mov
fdivs
popf
cmpsb
dec
inc
out
dec
orl
lds
lods
idiv
aas
jle
pop
pop
xchg
nop
cli
adc
adc
cmp
aas
xorb
cmovbe
pop
push
add
mov
nop
shlb
sbb
cld
arpl
js
in
insl
mov
dec
lds
aad
into
xchg
xor
xchg
stos
pop
cld
insl
lods
inc
repnz
sti
and
mov
imul
cmp
sub
adc
add
cmp
fwait
mov
mov
daa
cmp
pop
add
fdivrp
dec
add
out
cmp
mov
sub
mov
ja
pop
cmp
push
add
hlt
fisttps
popa
adc
mov
sub
sub
pop
mov
adc
dec
stc
pop
lock
xor
cltd
push
fbld
mov
jno
xor
xor
arpl
jecxz
mov
mov
xchg
pop
mov
pop
mov
sub
ret
outsl
fistl
mulb
cmp
mov
mov
and
cltd
cmp
add
xchg
pop
sbb
adc
cmpsb
cmp
push
hlt
sahf
xchg
movsb
dec
stos
xchg
jmp
in
and
aaa
adc
inc
xchg
adc
arpl
fcomps
insb
ret
xor
imul
popf
out
pushf
sub
inc
stos
xchg
loop
sub
arpl
cmpsl
mov
out
mov
cltd
or
aaa
xor
bound
lods
jl
out
aam
xchg
mov
sbb
adc
aas
cmpsb
insb
and
movsb
dec
jge,pn
mov
jns
repz
add
jmp
and
ja
push
jle
xor
or
mov
popf
adc
ret
xchg
outsl
mov
pushf
inc
pop
ljmp
push
mov
xor
pop
mov
xor
pop
lret
cmovl
and
mov
pop
insl
xchg
xchg
in
loope
pop
xlat
mov
pop
or
jns
fadds
cmc
subb
loop
sub
stos
mov
enter
dec
push
mov
test
dec
rcl
jns,pt
xchg
movsl
dec
not
imul
mov
and
pop
rcrl
cld
mov
stos
push
stos
cmp
mov
repnz
subb
lods
fs
repz
daa
cmp
push
adc
or
sbb
jp
sahf
arpl
scas
add
lret
insb
jbe
int3
mov
testl
cmpl
jbe
out
add
push
les
jle
pop
pushf
or
lods
rolw
int3
or
cmp
cmp
aam
arpl
xchg
pop
inc
lret
add
test
mov
adc
gs
jbe
fcompl
mov
xchg
cli
cmp
push
hlt
nop
xlat
cmp
cmp
fistl
les
ds
ljmp
pop
pop
push
rol
mov
stos
in
mov
iret
jp,pn
test
movsl
lock
in
push
jno
filds
and
ds
je
pop
pushf
testb
sbb
mov
test
inc
cmp
cmp
xchg
mov
loop
xchg
rclb
cmpb
call
hlt
adc
or
in
mov
imul
aad
cmp
pushl
pop
sub
into
pop
push
mov
dec
test
mov
jo
and
add
and
sbb
sbb
dec
fcom
sahf
rorl
push
faddp
sti
pop
cmp
inc
call
movsl
daa
mov
pop
push
std
daa
cmc
insb
inc
in
loop
jle
xorb
sub
or
fidivs
adc
stc
adc
cmpsb
enter
jae
arpl
push
push
into
out
ja
sarb
inc
cltd
das
ljmp
popa
xchg
fimull
test
push
sbb
push
out
adc
stc
mov
jge
lods
pop
daa
cmpsl
fs
rol
pop
shlb
js
or
mov
dec
sub
sub
push
test
inc
adc
xchg
mov
push
xor
add
in
add
ljmp
iret
pop
sub
push
xor
pop
lods
jne
inc
add
push
sbb
adcb
ds
dec
mov
mov
nop
sbb
mov
or
push
jmp
sub
sahf
inc
imul
push
mov
push
or
fldl
ds
jbe
cmp
call
mov
mov
imul
addr16
jg
aad
sar
inc
xor
inc
push
shr
jns
cmp
mov
sub
imull
sub
xchg
loop
int3
adc
or
outsl
hlt
movsl
mov
or
mov
daa
mov
dec
ret
push
adc
jno
insl
sub
xchg
daa
aaa
dec
inc
cli
pop
lahf
mov
mov
cmpsb
jae
push
mov
and
cmp
cmp
push
sbbl
jecxz
imul
xbegin
pop
jp
psllq
add
dec
rcll
jg
xchg
call
fnstsw
or
test
jecxz
stos
mov
adc
xchg
xchg
sbb
adc
add
pop
in
pop
sbb
lea
les
sbb
sub
mov
sbb
outsb
or
push
inc
fnsave
adc
mov
or
mov
dec
and
aaa
ljmp
sbb
inc
in
rclb
lods
ficoms
arpl
in
pop
sub
imul
inc
inc
cmp
sti
arpl
cwtl
js
shrl
stos
jmp
es
pusha
or
cld
scas
cwtl
adc
in
cmpsb
push
push
ror
std
mov
inc
gs
jge
push
push
shll
aad
sbb
jle
and
push
mov
pop
mull
pop
dec
fsubrs
xchg
rcrl
test
addl
or
fcmovb
adc
fstl
arpl
jle
subl
call
pusha
jecxz
pushf
lea
pop
fildll
cmp
jle
xchg
sti
int
xlat
icebp
jb
adc
xlat
incl
jp
dec
mov
push
hlt
cli
movsl
fldcw
and
lcall
inc
sbb
jno
test
loop
sbb
inc
inc
int3
cmp
and
xor
jns
pushf
lea
ret
push
ret
add
es
nop
inc
inc
mov
rorl
push
sti
sahf
mov
loop
lcall
cmpsb
jno
mov
mov
inc
mov
dec
xlat
lea
cs
inc
inc
roll
popf
nop
xor
cmp
ss
sub
jb
jno
jne
cmp
sbb
popf
cmp
mov
jo
js
and
or
es
jo
push
divl
frstor
mull
mov
xor
jne
je
adc
push
adc
nop
fsubp
lret
pop
shrl
jle
filds
out
lahf
lret
fldcw
dec
sbb
cld
cmp
lcall
jecxz
inc
push
inc
lea
aaa
mov
adc
xor
insb
xchg
imul
xchg
js
int3
sub
mov
adc
shlb
xor
hlt
ret
outsb
cltd
push
mov
mov
dec
ret
sahf
insb
nop
add
pop
insb
lea
inc
or
mov
movntps
insl
pop
cmp
and
add
xchg
dec
dec
popa
pop
insb
not
mov
in
lods
cmpsb
lahf
cmpsl
push
jno
into
addl
dec
stos
push
scas
or
clc
mov
xor
dec
adc
jb
add
les
mov
mov
xchg
sub
cltd
adc
jo
push
test
or
rep
push
lret
jnp
add
enter
test
aas
in
loope
jle
sub
aad
arpl
mov
mov
sub
pop
daa
js
arpl
jae
mov
xchg
inc
lock
jo
pop
daa
mov
cmp
mov
ror
aas
xchg
mov
aas
loope
sbb
add
js
push
ds
xchg
jne
int3
push
dec
fnsave
test
cld
sub
jbe
xor
adc
push
insb
xchg
push
or
cmp
stos
inc
mov
mulb
jmp
sbb
dec
lea
hlt
lcall
pop
fs
pop
dec
subb
xchg
add
and
lods
push
roll
inc
lret
and
push
bound
cwtl
or
ja
lea
pop
fsubrl
pushf
in
mov
mov
or
mov
sarl
cmp
sub
mov
xchg
push
subb
push
fcomp
test
ret
call
cmp
push
clc
push
loope
nop
cltd
lock
dec
pop
cwtl
andb
xchg
pop
jne
cmovne
jle
repz
adc
stc
mov
push
xchg
jecxz
add
dec
xor
ja
push
clc
orl
mov
add
xchg
jno
loopne
or
stos
jg
lea
push
and
ds
std
bswap
imul
insl
mov
sahf
mov
pop
mov
and
popa
aad
mov
push
mov
dec
out
jns
add
sub
icebp
stos
stos
scas
in
into
cmp
fwait
xlat
mov
lcall
sti
sbb
and
hlt
and
mov
into
pop
mov
pusha
pop
mov
lea
orb
push
cmp
daa
sbb
jp
je,pt
jne
mov
mov
daa
out
les
stos
pushf
gs
jno
int
cmp
sbb
fsub
dec
mov
pop
dec
outsb
cltd
cli
sarl
dec
ljmp
push
ds
pop
stos
out
shll
cmpsb
mov
push
leave
pop
movsb
int
cld
out
sbb
and
lret
pop
int3
mov
gs
jl
and
cmpsl
adc
cwtl
inc
push
xchg
inc
outsl
mov
scas
add
cmp
xor
into
lcall
pop
stc
or
xchg
cmp
mov
mov
mov
int
pop
adc
aas
int
mov
mov
js
repnz
or
ljmp
dec
adc
or
xorb
outsl
push
push
leave
sub
fistpll
inc
mov
aad
jge
mov
pushf
inc
xor
in
fnop
mov
dec
loop
sub
in
jge
ficompl
mov
inc
rcl
dec
cmp
icebp
dec
jmp
je
outsl
mov
push
dec
mov
in
jmp
add
leave
sarl
fisttpl
mov
lcall
dec
mov
out
out
fprem
bound
out
outsb
xor
lods
sbb
dec
xchg
adc
dec
sahf
xor
sbb
pop
lock
sbb
xchg
xor
mov
inc
jno
xchg
scas
icebp
outsb
and
test
lret
repnz
pop
pop
push
add
inc
dec
mov
mov
mov
inc
xchg
nop
xchg
and
push
xor
cli
fs
es
xchg
stos
or
adc
rcll
cwtl
jno
fwait
test
mov
stc
dec
mov
loopne
or
xchg
lods
lcall
fisttpl
mov
push
mov
add
cmp
lcall
xchg
ret
adc
lea
push
cmp
dec
negb
or
scas
pushf
jp
sbb
dec
cmp
and
ja
sbb
mov
into
sub
adc
adc
xchg
test
lret
xchg
ss
in
cs
es
shrb
adc
inc
jbe
push
mov
xchg
pushl
dec
sub
adc
adc
rcr
fs
dec
ss
and
int3
and
pop
js
cmp
stos
sub
cmc
out
lods
inc
xor
push
xchg
cli
fcmovbe
sbb
iret
mov
test
ljmp
xor
test
and
push
std
mov
insb
xor
or
adc
push
rolb
fisubrl
clc
push
mov
jae
mov
mov
in
cmc
mov
repz
jns
xchg
into
xchg
and
jmp
or
arpl
push
int3
daa
dec
cmp
int
mov
add
clc
cmp
ja
cmp
fs
lea
lea
data16
cmp
and
imul
jmp
push
comiss
sub
hlt
fdivrl
call
mov
neg
add
lds
and
push
loope
push
inc
jb
add
push
xor
mov
inc
inc
aas
shl
mov
leave
pop
mov
cmp
out
dec
add
cmovne
pop
test
xchg
xchg
inc
std
jb
push
stc
int
lcall
int
aaa
fstpl
mov
nop
stos
movsl
xor
dec
xchg
dec
fsincos
pop
aaa
mov
sbb
loop
push
jge
add
imul
sub
lea
test
pushf
xchg
xchg
mov
pushw
xchg
or
dec
xchg
in
sbb
push
gs
sbb
sbb
cmp
mov
add
cmp
sti
cltd
or
insl
icebp
aaa
std
mov
jne
lods
pop
fistl
rep
nop
push
jbe
sbb
push
clc
test
push
mov
out
ljmp
fsubs
mov
fcomps
inc
enter
push
imul
jae
scas
adc
add
gs
add
popa
scas
pop
xlat
adc
mov
mov
stc
inc
mov
lret
out
pop
cmpl
fidivrl
pop
xchg
push
adc
xchg
sti
out
xchg
lods
xchg
mov
xchg
pusha
adc
jns
dec
lahf
jns
outsl
cmc
in
mov
pop
ljmp
pushf
jns
pushf
push
jl
adc
jge
mov
test
out
or
sahf
pop
test
or
loope
subl
bound
or
xor
mov
aad
push
dec
and
bound
mov
mov
jecxz
dec
and
ss
adc
lds
je
mov
mov
sub
mov
into
lret
add
push
pop
mov
dec
inc
pop
jns
cmp
ficompl
icebp
xchg
xor
in
cmp
mov
inc
std
divb
mov
movsl
dec
clc
sub
mov
dec
cmpsb
int
add
sub
ds
push
mov
xchg
xchg
push
outsl
inc
ja
rcrb
inc
push
pop
pop
jp
out
xor
jo
das
popa
push
stos
cltd
adc
and
pop
out
xchg
into
lahf
test
or
mov
int3
xor
xlat
push
imul
outsl
pop
pop
movsl
dec
mov
mov
jmp
into
cwtl
pushl
rclb
mov
subl
cmp
popf
ja
dec
jns
popf
negb
xlat
test
arpl
je
mov
cmpsl
xchg
pop
lds
sub
jle
in
add
jmp
mov
hlt
mov
xlat
pop
repz
dec
imul
mov
mov
mov
mov
and
pop
cmpsl
pop
aad
cli
xchg
or
outsb
dec
xchg
repnz
mov
hlt
out
out
paddd
mov
test
icebp
fbld
js
xor
push
or
in
mov
inc
mov
cli
cmp
mov
divb
and
pop
iret
sbb
or
repnz
and
xor
loope
jmp
mov
insb
leave
adc
fxch
xchg
cmp
jmp
imul
pop
adc
inc
and
jl
addr16
xor
mov
stc
xor
lock
shlb
enter
dec
jno
jge
xchg
pop
pop
pop
jo
inc
mov
push
cwtl
jne
lds
sub
jg
push
testl
test
pop
jno
add
or
xor
xchg
int
lods
cmc
ret
xchg
cmp
das
dec
adc
addl
mov
sub
aam
sti
jg
popf
pushf
push
cmpl
je
sub
sub
or
lahf
hlt
jnp
xchg
scas
push
mov
mov
bound
push
call
jne
mov
ds
cltd
gs
pop
and
push
jnp
sbbb
mov
es
pop
and
mov
sahf
pusha
stc
fsts
lods
jge
jmp
mov
sbb
adc
push
out
xor
push
out
lock
roll
xor
inc
lods
mov
push
leave
jle
ret
movsl
orl
sub
xchg
shrl
adc
lods
adc
lods
addr16
fldl
icebp
je
xor
fwait
inc
pop
stc
push
cltd
add
xor
cli
call
sarb
jg
loop
push
mov
loop
popf
es
mov
adc
jns
adc
xor
xor
sbb
cmp
and
out
incl
hlt
pop
into
insl
inc
das
add
sub
dec
mov
or
mov
pop
rcr
sbb
mov
push
dec
ss
add
adc
icebp
int
mov
fisttps
scas
jno
mov
push
imul
push
fstpl
pop
hlt
jns
out
mov
lods
jno
mov
repz
sub
mov
adc
je
pop
sub
add
or
addr16
mov
jp
rorb
push
fwait
fwait
adc
xchg
inc
aas
shr
cmp
les
xchg
jmp
jmp
jnp
dec
popf
jno
enter
das
jo
test
pop
subps
loopne
hlt
stc
fmul
add
lods
mov
cs
xor
push
mov
push
inc
loopne
xor
cwtl
mov
inc
lret
mov
push
fsubrl
mov
shrb
mov
and
add
sub
xchg
cli
loopne
int3
dec
sbb
add
fcmovne
push
das
or
andb
in
in
mov
inc
jnp
addb
jns
lret
push
mov
cwtl
ljmp
imul
int
xchg
sub
fwait
jl
push
pop
lods
mov
adc
inc
into
add
lahf
push
cmp
mov
iret
push
mov
dec
sahf
jb
or
cmp
fstpl
bound
les
or
and
or
mov
push
aas
pusha
sbb
mov
movsl
push
adc
mov
jecxz
in
sub
inc
push
aad
stos
loope
stc
push
js
xchg
inc
fistpll
cmp
fdivrs
cltd
fimull
xchg
leave
repz
jns
inc
xor
push
adc
and
je
sub
pop
movsb
fmuls
mov
pop
adc
jp
xchg
cli
clc
cwtl
jae
add
pop
cmpsl
pop
mov
aas
xor
flds
insl
mov
jge
mov
xor
mov
mov
subl
divl
insl
pushf
out
pop
push
xchg
cmp
pop
mov
sub
enter
sub
adc
xchg
adc
arpl
pop
rcl
andb
and
pop
and
adc
xchg
sbb
movsb
das
sarl
push
ja
mov
iret
imul
test
mov
inc
dec
es
push
xchg
pop
xchg
dec
fwait
jge
aam
mov
iret
mov
aas
xor
insl
push
dec
cld
rol
push
push
mov
stos
push
mov
rcll
sub
push
or
pop
xor
outsb
dec
in
sbb
push
sbb
ret
xchg
xchg
test
sar
movsb
inc
add
sub
mov
mov
fstps
mov
pop
mov
sub
rcll
addr16
fbld
mov
subb
or
lret
jo
in
in
mov
shrb
dec
lock
js
adc
pop
cli
mov
pop
jle
icebp
adc
cld
or
icebp
xchg
dec
hlt
fldenv
jecxz
imul
fstl
pop
dec
es
rcrl
inc
test
cmpsl
mov
imul
or
sahf
xlat
mov
addb
outsl
add
lahf
sub
or
xchg
mov
sub
push
roll
shll
inc
push
fnstenv
add
dec
ret
sbb
inc
cmp
or
aaa
icebp
push
inc
xchg
and
adc
cmp
ss
rolb
xchg
jmp
aaa
cmpsb
jnp
test
xchg
adc
cld
jge
cltd
jecxz
jecxz
jl
dec
add
or
cmp
shll
dec
inc
pop
outsl
rorb
mov
sub
cs
test
in
popf
pop
cmp
in
movsb
jp
pop
fcoml
in
or
jge
outsb
cmp
pop
sub
mov
cmpb
mov
push
xchg
call
fwait
lods
pop
mov
ja
arpl
inc
and
cmpsb
ffreep
imul
mov
xor
test
ret
xor
sbb
fucom
pop
dec
sbb
lods
int
xor
ljmp
mov
loop
sub
jl
inc
scas
or
mov
pop
addr16
jno
hlt
xchg
push
in
sbb
jge
gs
add
mov
push
cmp
adc
clc
add
outsb
mov
xchg
lods
getsec
or
test
push
lds
dec
testb
loope
dec
push
shr
mov
out
sub
xchg
icebp
push
mov
int
adc
jle
dec
xor
loope
xchg
push
or
movsb
push
pop
jl
out
sub
push
movsl
sbbl
in
cmpsb
arpl
notb
inc
lds
mov
arpl
dec
inc
dec
idivl
leave
lds
mov
inc
ret
insl
aaa
add
mov
pusha
and
insb
push
jmp
sbb
imul
pop
mov
int3
sub
inc
in
fs
sub
inc
or
jle
out
rcll
mov
push
inc
test
js
xlat
ficoml
call
out
and
outsb
sub
pop
and
jecxz
xor
out
and
pop
stc
dec
cmp
xchg
push
call
int3
adc
xchg
dec
outsl
cltd
add
push
in
push
xor
cltd
test
push
pop
sete
sbb
and
out
and
jl
pop
xchg
addr16
bound
and
xchg
adc
mov
cld
sahf
xchg
inc
scas
fwait
add
sub
push
loop
ds
inc
clc
jbe
add
fs
sbb
dec
rorb
inc
inc
push
xchg
cmpb
inc
and
orl
int
cli
adc
cmp
rolb
mov
xor
mov
out
sub
js
cmpsb
test
icebp
mov
outsl
mov
mov
dec
sub
jle
movsl
ds
mov
jle
cld
aas
mov
mov
or
repnz
lahf
fwait
loope
pop
push
int
push
jbe
loop
sbb
fcomp
inc
mov
fimuls
jnp
sbb
or
loope
out
pop
lret
lcall
or
inc
fstpl
fnstsw
lds
lock
in
icebp
xlat
adc
shll
mov
and
and
jmp
mov
add
mov
fnstenv
sub
pop
or
xor
dec
mov
ljmp
shlb
test
pop
lcall
out
dec
aad
cltd
bound
das
cs
sbb
add
jno
inc
js
push
dec
pop
cmp
lods
fidivrs
jno
rorb
sahf
insl
scas
insb
cltd
dec
mov
in
into
push
ljmp
xchg
outsb
aaa
rcr
dec
sub
std
mov
pop
push
gs
inc
mov
jne
aaa
aas
loope
shl
std
xor
mov
and
popf
sahf
lahf
jb
xchg
xor
fcoml
insb
dec
add
sti
test
cmp
data16
add
and
shlb
sbb
adc
and
xor
lret
js
cli
dec
out
fnstsw
xchg
loop
adc
out
inc
push
dec
fiaddl
xchg
aas
push
and
pop
shlb
sarb
in
movsb
mov
addl
mov
mov
fwait
mov
fucomi
push
push
movsl
and
loop
fwait
or
fbstp
mov
cli
out
or
lods
scas
bound
sbb
and
xchg
rolb
inc
aas
jae
fldl
mov
cli
fimuls
and
sbb
mov
mov
xchg
push
icebp
jecxz
dec
mov
sbb
aad
out
lahf
sub
fs
inc
mov
fwait
xchg
sub
orl
and
and
sbb
stos
aam
pop
fisubrl
pop
or
stos
unpcklps
jle
xchg
sub
push
xchg
cmpsb
mov
into
xor
push
out
cmc
cmpsb
inc
pop
loop
fistpll
hlt
jns
jl,pn
popa
mov
out
adc
ja
out
in
jnp
cmp
loope
popa
jbe
std
inc
test
pop
sbb
xchg
test
movsl
imul
mov
push
pop
or
cs
lahf
inc
mov
std
movl
aas
add
fists
mov
or
movsb
daa
mov
les
or
jns
fwait
mov
push
jl
ret
add
cwtl
loop
xchg
fldenv
jb
out
out
mov
mov
xchg
sub
xchg
jg
pop
push
and
jl
add
push
mov
mov
cmp
scas
push
jmp
xorl
mov
out
sub
pop
xchg
subb
les
iret
cmc
ret
add
dec
mov
clc
add
sub
idivl
mov
mov
jbe
int3
xchg
addr16
daa
call
push
popf
ficompl
pop
out
xor
mov
mov
fdiv
sbb
jnp
jmp
repz
push
call
ljmp
fnstsw
sub
mov
xlat
jge
jo
xchg
gs
cld
sub
repz
inc
fucomp
push
bound
rolb
or
mov
in
xchg
mov
dec
popf
pop
dec
mov
mov
mov
mov
fs
cltd
lret
mov
leave
and
lahf
sbb
les
and
dec
sub
arpl
or
ljmp
cltd
rcrl
test
add
or
loopne
and
jg
out
push
out
xchg
sarb
insl
and
loop
pushf
adc
jnp
push
xor
mov
mov
or
adc
sbb
inc
test
lret
rorb
dec
inc
loop
popa
xchg
or
cmp
jne
sub
sub
lock
xchg
frstor
push
sahf
mov
imul
ret
in
rcl
sbb
cmp
inc
xor
mov
pop
cmp
jp
negl
pop
pop
lret
sub
pop
mov
dec
adc
nop
into
mov
mov
inc
sbb
push
stc
and
in
sar
ljmp
sub
aaa
cltd
fists
sbb
push
push
dec
fistpll
push
das
jmp
mov
mov
pop
and
xor
sbb
fs
cmp
in
add
add
dec
popf
out
xor
xchg
pop
jp
push
jecxz
lods
scas
stos
mov
pop
out
sub
test
cmp
div
adc
sarb
mov
jmp
pop
xor
push
inc
adc
mov
mov
lds
scas
sti
sub
mov
cld
icebp
repnz
inc
adc
add
pusha
jge
sub
pop
int3
stc
in
sub
jbe
in
arpl
mov
mov
xchg
dec
sub
in
pop
cmpb
xor
and
push
inc
jne
sahf
jl
mov
call
sahf
inc
aas
pusha
jge
enter
subl
dec
f2xm1
push
es
cltd
in
out
fsubr
lea
pop
jns
mov
sbb
lret
mov
pop
adc
sub
jle
add
cwtl
or
xor
and
mov
mov
sub
test
daa
cld
sti
lods
inc
jnp
adc
test
bound
cmpsb
adc
out
ficomps
cmp
adc
dec
cs
xor
imul
inc
fsub
arpl
sbb
xor
dec
filds
inc
lea
bound
aaa
aaa
inc
add
stc
sub
popa
mov
sahf
jns
and
mov
sbb
adc
mov
jnp
and
push
mov
inc
fsubrs
aaa
add
movsb
sbb
leave
call
in
mov
cmp
cmp
sbb
in
jge
shlb
nop
loope
fcmovnbe
push
loop
add
jmp
mov
xor
jmp
setp
add
stc
test
inc
jo
cmp
lods
or
cmpsl
ficompl
in
inc
cmpsl
mov
div
mov
and
in
or
mov
cwtl
xchg
les
into
mov
jne
dec
xor
movsb
idiv
xorl
or
push
movl
inc
add
cmp
xor
lcall
sbb
dec
into
loopne
iret
data16
ret
xchg
test
shll
in
mov
ss
cmpsl
ret
call
sbb
dec
pop
sbb
cmp
mov
xchg
xchg
and
fnstcw
or
adc
cmpsb
lods
test
lods
lods
ret
jmp
fwait
jmp
jbe
cmp
fnstsw
fs
and
mov
adc
add
mov
ret
push
es
scas
iret
clc
dec
cs
dec
adc
push
adc
jmp
out
pop
loopne
mov
mov
xchg
mov
add
or
add
stos
into
xchg
imul
mov
push
mov
dec
xchg
shrl
testb
imul
xlat
fwait
mov
mov
out
arpl
popa
das
dec
stos
outsl
and
push
adc
adcl
lods
push
repz
arpl
adc
int
loope
sahf
inc
scas
pop
xor
loope
add
in
rcll
or
fwait
mov
ljmp
rorl
mov
xor
dec
mov
mov
out
xchg
loope
add
mov
es
mov
push
and
ja
je
sbb
mov
jns
cmp
mull
stc
xchg
dec
out
pop
jns
imul
inc
cmpl
into
cmpsb
mov
mov
dec
mov
adc
and
pushf
sbb
push
lret
adc
sub
lret
sub
xchg
xchg
daa
dec
ret
lret
sub
mov
xor
sahf
cmp
dec
sbb
push
sbb
fcoml
fcompl
fistps
add
mov
pop
aad
mov
cli
cld
repz
das
mov
sub
pop
movsl
adc
push
xlat
cmp
jp
jl
out
iret
and
inc
data16
dec
xor
pusha
rclb
popf
dec
pushf
cmp
jbe
ss
cmp
int
nop
aas
dec
fcoms
mov
orb
rorb
fidivl
test
out
fcomi
jmp
into
test
in
fsincos
inc
or
sbb
fdiv
and
xor
jge
xchg
add
pop
test
mov
nop
repz
jl
ds
dec
test
add
mov
jnp
cmp
mov
fisubrs
clc
std
inc
inc
in
mov
adc
loopne
aaa
mov
jo
into
repnz
sbb
cmp
mov
repnz
pop
add
pop
scas
mov
push
std
add
sbb
mov
dec
sarb
hlt
cwtl
cmp
cs
jb
add
pop
je
loope
incl
imul
inc
dec
loopne
imul
mov
sbb
stos
jns
leave
xlat
fsubrs
dec
push
sub
add
mov
and
pop
movsl
loopne
pusha
cwtl
and
daa
and
jne
fldenv
lret
cld
pop
cmp
pop
mov
scas
and
ficoml
inc
cmpb
test
xor
mov
sub
lock
jmp
addr16
inc
iret
jle
in
add
pop
lods
adc
loopne
pop
inc
ds
frstor
cmc
out
cmpsb
inc
add
or
inc
sahf
jnp
daa
fimull
pop
andb
add
pop
das
or
int3
jecxz
in
or
mov
push
pop
sbb
das
dec
dec
and
adc
pop
insb
imul
lea
pusha
cmp
into
xorl
aam
xchg
shlb
in
fstl
push
jbe
repnz
jo
sbb
rolb
xor
dec
adcb
roll
cmc
js
subl
cmp
inc
aaa
jns
cmp
sub
cmpsl
adc
shlb
push
dec
and
add
cmp
out
pop
sbb
loop
add
rorl
stc
or
imul
unpcklps
xor
inc
push
bound
ljmp
mov
push
push
into
xor
sbb
ret
dec
dec
sub
jp
adc
scas
insl
rcrl
mov
sbb
xor
jmp
adc
pop
pop
lods
nop
adc
das
and
mov
les
xchg
dec
inc
adc
pushf
pop
cmp
xor
stos
jl
stos
mov
lock
mov
adc
xor
inc
push
ljmp
or
and
cmp
dec
jp
out
mov
lahf
pop
gs
insb
jge
test
cmp
mov
enter
cwtl
imull
fcmovu
mov
jbe
adc
cwtl
sar
ss
xor
nop
sbb
imull
popf
cmp
fmuls
mov
mov
lock
out
push
mov
xor
cltd
pop
lretw
pop
repz
aas
jo
shlb
xor
repnz
jmp
pop
and
adc
loopne
inc
sbb
pop
popf
inc
push
or
icebp
out
adc
mov
lods
jl
stos
es
sarb
cmp
pop
xorl
cmp
loopne
xor
xchg
adc
xchg
sub
mov
stos
imul
je
adc
es
mov
pop
push
inc
imul
scas
ret
int
xlat
ret
jecxz
outsl
fstl
mov
push
inc
pushf
jbe
sbb
fistpl
fstps
repnz
ja
xchg
mov
cmpsb
lods
sub
mov
xor
jl
and
sbb
cmp
insb
push
jb
ds
andl
cmp
nop
mov
inc
xor
adc
xchg
sub
mov
jmp
push
xor
mov
xchg
pop
movsb
jns
int
in
out
mov
dec
in
dec
std
pop
mov
nop
fbld
inc
addl
cmp
mov
adc
ss
std
int3
jmp
sbb
cmpsl
push
fwait
jbe
pop
sub
int3
pop
stos
push
rcrl
sbb
mov
popf
fwait
inc
and
dec
ja
and
rdpmc
push
and
push
fsubl
push
repnz
pop
scas
push
cmp
inc
aaa
out
xchg
mov
scas
fwait
scas
inc
sbb
or
in
aad
xlat
pop
fbld
xor
add
add
inc
scas
adc
mov
mov
sub
inc
sub
lea
lock
pop
test
loopne
cmp
sahf
xorb
inc
xlat
data16
mov
adc
sarb
shl
mov
jbe
adc
fs
lea
out
lcall
push
outsl
cmp
mov
or
gs
inc
outsb
or
and
or
mov
aaa
out
dec
ficoms
and
pop
sbb
mov
sbb
xchg
ret
xchg
jno
add
jl
jbe
std
mov
lret
push
xor
push
out
inc
aam
aas
mov
add
mov
bnd
cmp
pop
js
imul
push
push
lods
inc
jo
icebp
mov
dec
lea
testb
jge
testb
xorb
push
clc
inc
xchg
sahf
cmp
mov
insl
insl
imul
xor
out
repz
inc
inc
ja
test
xor
rcl
pop
pusha
mov
cmc
add
xor
mov
fiaddl
adc
mov
sbb
inc
js
dec
ret
lds
cs
xlat
push
mov
popf
sarb
sub
mov
mov
jmp
test
mov
fisttps
cmp
sar
push
push
rcr
sahf
movsl
xor
mov
and
shrb
call
sub
imul
push
sub
xchg
sahf
mov
adc
adc
cmpsb
cld
nop
mov
push
ljmp
repnz
mov
xchg
les
cmpps
nop
pop
test
mov
sbb
sub
jne
call
les
adc
mov
out
mov
inc
cltd
insb
mov
jle
shrl
xlat
loopne
xchg
rcr
mov
scas
mov
push
lods
sub
out
addb
scas
mov
push
stc
aam
lea
addr16
and
inc
fiaddl
cli
sub
dec
sub
xor
out
fdivs
bound
or
pop
jno
pop
pop
jae
inc
or
lret
mov
jecxz
sbb
and
aaa
imul
fwait
push
jns
adc
out
enter
pop
nop
call
lahf
sti
xchg
sbb
add
fcompl
push
sahf
dec
fistpll
imul
aad
andb
insb
push
lahf
lcall
aam
sub
cmp
stos
add
bound
xchg
rcl
xchg
dec
popf
mov
int
adc
fs
cmc
or
dec
mov
add
xor
in
cmpsb
pushaw
pop
pop
pop
adc
push
lea
decl
enter
arpl
mov
inc
pop
cmp
xor
dec
fnstcw
mov
iret
xor
pop
jbe
inc
mov
sub
jp
test
test
and
xchg
lock
loopne
add
pusha
fnstenv
cmp
add
aam
xchg
das
xchg
call
popf
movsb
enter
pop
mov
lods
leave
jge
xchg
add
outsl
xchg
mov
pop
ret
inc
dec
xchg
loopne
out
std
in
jg
mov
in
loop
sbb
pop
sbb
aad
jnp
sbb
inc
test
jge
dec
xor
into
adc
dec
jle
fdivrs
cmp
call
push
or
pop
push
or
push
pop
sub
fisttpll
or
lea
mov
pop
je
mov
out
xchg
dec
adc
and
mov
pop
mov
add
aad
add
pop
aam
mov
ret
popf
cld
mov
outsl
filds
push
fists
sub
loope
sub
or
rclb
cmp
or
pop
enter
push
add
and
push
jge
aad
push
mov
sti
cmp
scas
mov
out
ds
dec
rolb
iret
mov
sbb
ret
pop
in
into
or
in
sub
out
mov
or
mov
test
lahf
nop
and
sbb
xchg
je
mov
push
mov
push
ret
cmp
stos
ds
push
cmp
jp
jbe
jne
repnz
js
sarl
push
sub
rclb
mov
or
fstl
ja
fidivs
into
adc
lock
rolb
adc
mov
daa
scas
mov
ret
jle
cmp
mov
les
push
jge
test
add
xor
xor
cld
fcoml
negl
popf
mov
push
or
daa
mov
mov
outsl
mov
and
or
mov
dec
lcall
cmp
dec
mov
jmp
or
stos
or
push
adc
push
mov
add
push
insl
mov
or
and
pop
sahf
popf
mov
inc
xchg
cmpsl
cli
sbb
add
mov
out
jae
imul
dec
ja
add
push
push
add
dec
mov
mov
sti
pop
loop
test
pop
jecxz
xor
pop
ret
mov
jg
jno
and
xor
mov
cmpsb
cwtl
and
sub
xchg
mov
xchg
jle
xor
ljmp
dec
add
movsl
call
sbb
adc
add
inc
or
cmp
cmpsl
aas
movsl
ret
sti
dec
fcompl
push
mov
pop
jp
lahf
insl
pop
jp
jecxz
cmp
jmp
movb
push
movb
mov
sub
mov
imul
movsb
sub
outsl
xor
push
mov
mov
shr
pop
sbb
cli
xchg
cld
icebp
in
add
jne
sahf
adc
fidivl
cld
adc
xor
inc
scas
adc
in
dec
cwtl
xchg
loop
mov
pop
and
sub
xchg
cmpsl
push
mov
inc
jnp
add
cmp
or
xchg
into
add
int
pop
test
jg
mov
cmc
ja
out
cmp
stos
lods
xor
push
scas
fidivl
sarb
scas
cmpsb
roll
dec
ss
sbb
mov
mov
aad
cmc
cmp
mov
cmp
out
jg
adc
pop
xor
xor
mov
xchg
jne
pushf
xor
xchg
cmp
mov
lds
add
or
and
sub
adc
cwtl
imul
fnstcw
push
pop
aad
push
ret
sahf
aad
ja
or
adc
lods
sub
push
jl
push
jno
and
es
idivl
xchg
daa
movsb
inc
mov
pusha
jb
cmpsl
jecxz
fwait
jo
and
jg
popf
cltd
mov
inc
iret
iret
int
enter
or
or
push
loope
cmp
add
ret
jle
mov
movsl
addr16
pushf
ret
or
pop
mov
pusha
ja
or
inc
dec
adc
ljmp
cmp
stc
jae
out
xor
sahf
adc
adc
xor
adcl
call
in
jbe
jl
daa
std
fwait
sbb
xchg
sbb
xor
sbb
ror
xor
fidivrl
hlt
imul
int3
ret
xchg
mov
push
lret
idivl
push
and
or
data16
int
stos
or
cmp
iret
xor
pop
pop
sub
sbb
das
mov
push
xor
cwtl
lods
pop
sub
push
jno
mov
cmpsb
mov
push
push
jbe
sub
icebp
push
leave
push
stos
push
sahf
shrb
xor
popa
out
and
jge
jnp
das
cld
and
aad
inc
jno
push
push
mov
push
mov
mov
inc
xchg
iret
cmpsl
inc
test
iret
jae
dec
pop
movsl
inc
mov
imul
and
mov
jne
jp,pn
push
icebp
and
mov
sbb
jnp
mov
sub
push
rep
dec
clc
pusha
mov
pop
or
ficoms
and
mov
jp,pn
bound
insl
mov
iret
pop
fstpt
shrb
ficomps
movsb
xchg
xor
gs
and
and
mov
fwait
jmp
push
roll
imul
or
xor
mov
xlat
sub
jo
dec
iret
shr
aad
hlt
xchg
pminsw
ljmp
ret
dec
pop
divb
pop
in
xchg
jecxz
enter
and
fdivrl
mov
sti
stos
sub
fadds
outsl
cs
jb
inc
add
mov
and
jno
or
push
or
loope
sar
scas
lods
xchg
sbb
push
and
xor
inc
dec
push
sarb
mov
adc
movsb
mov
cld
push
popf
mov
sbb
add
jae
incb
movb
sbb
stos
dec
inc
mov
mov
andl
pop
ss
inc
cmp
std
popa
mov
testl
cmp
mov
and
cli
mov
pop
push
lret
dec
or
cmpsb
xchg
push
test
mov
sbb
jmp
sbbl
insl
push
ret
pop
je
sub
pop
jne
sbb
lds
movd
lret
fnsave
ds
dec
fldl
pop
sbb
in
lahf
loope
stc
mov
lea
call
jnp
out
or
ret
movsb
jbe
dec
out
push
inc
jle
xchg
sbb
jl
inc
jno
fs
mov
sti
jns
and
add
jecxz
loope
push
subl
sahf
xchg
fdivl
jmp
jp
and
push
lock
or
sbbl
insb
or
adc
movsb
int
mov
test
in
xor
ljmp
push
ja
pop
imul
fnstcw
inc
xor
cmc
cld
loop
sbb
and
jnp
stc
inc
out
imul
jb
jle
fldenv
xchg
repnz
sbb
and
dec
jne
rclb
push
gs
push
aam
xchg
fsts
imul
pop
jecxz
leave
repz
cmp
push
pop
bound
aas
call
jl
lock
dec
orl
jo
stos
push
fadd
pop
and
out
imulb
mov
jge
adc
insb
push
nop
lahf
inc
adc
sub
aas
inc
xor
outsl
inc
pop
rcrl
pop
movsl
movsl
shlb
mov
push
repnz
ss
out
outsl
popf
mov
call
jbe
or
push
mov
sub
mov
mov
inc
dec
adc
jnp
cmp
mov
mov
inc
fsubrs
popa
sbbb
pushl
aad
sar
dec
cmpsb
or
sub
push
push
or
mov
aas
sbb
jmp
cmpsl
adc
sub
adc
imul
iret
aas
lret
ret
jmp
mov
or
arpl
mov
mov
dec
xchg
subl
push
push
xchg
out
mov
insl
push
jne
out
mov
cmp
xor
ja
mov
repz
cltd
push
jg
pop
jp
int
jp
xchg
movsb
sbb
or
adc
lret
push
push
loopne
fstpt
jg
lods
outsb
xlat
cmp
shlb
dec
cmp
hlt
add
dec
and
push
mov
jge
daa
out
cmpsb
loope
mov
aad
jnp
mov
sbb
pop
shrl
jg
xor
and
inc
push
dec
mov
add
sahf
sub
iret
push
dec
mov
idiv
push
pushf
sub
arpl
dec
imul
shlb
popf
ffree
aad
mov
in
jmp
addr16
push
cld
xor
sub
sub
mov
test
xor
mov
cmp
or
push
test
jns
repz
cmp
in
cs
push
lret
int
lahf
mov
fimuls
stos
cwtl
mov
in
cmp
addr16
pop
pop
pop
call
jne
xchg
inc
pop
and
push
arpl
es
popf
xor
adc
mov
ret
xlat
rol
dec
in
roll
in
andl
stc
pop
ss
jmp
cmp
lret
arpl
jnp
dec
test
jg
stos
jno
shrb
repnz
scas
jne
and
xchg
mov
inc
push
pop
je
push
std
nop
cli
dec
jnp
pop
test
push
pop
inc
fcmovnu
stos
insb
mov
int3
mov
stc
iret
mov
clc
sbb
aaa
outsl
cmp
dec
push
mov
mov
insb
adc
pop
in
cmp
fsubl
incb
pop
sbb
inc
sbb
std
aaa
push
icebp
xor
mov
jl
and
dec
scas
add
stc
jmp
add
jl
xor
xorb
out
aam
lahf
inc
sub
dec
mov
and
mov
xor
add
loopne
push
sbb
notb
pop
pop
fstpl
lods
pop
je
out
inc
pop
mov
xchg
mov
lods
mov
loope
mov
rorb
sbb
inc
dec
int
and
mov
lret
shlb
add
adcl
mov
rcrb
sub
int3
push
jnp
xlat
sub
adc
add
outsb
aas
ret
sub
shrb
test
mov
rorw
adc
cmp
pop
pop
mov
jns
in
pop
popl
cmp
cmp
mov
dec
cmp
loop
xor
push
cmpsb
mov
mov
add
out
scas
les
leave
arpl
add
fucomi
cmpsb
pushf
adc
mov
inc
mov
mov
xchg
cmp
ret
scas
mov
push
pushf
dec
into
jns
popf
pop
loopne,pt
xor
in
mov
jl
andl
stos
roll
mov
cmp
out
addl
addr16
ds
mov
fisubrs
adc
add
xor
fisubrs
dec
and
pop
dec
push
dec
push
push
mov
cmp
ja
repnz
xchg
xchg
sahf
out
mov
push
and
arpl
pop
fildl
cmp
repnz
fmul
aad
outsb
mov
movsl
sbb
dec
jne
cmp
inc
xchg
fwait
iret
add
jbe
shlb
inc
mov
outsl
xor
aaa
gs
xchg
fsubrl
push
sarl
popf
jb
add
xor
jb
popa
cmpsl
ret
add
jo
add
int
or
arpl
clc
mov
xor
daa
data16
or
pop
fstps
faddl
cltd
sub
gs
sbb
call
arpl
in
mov
lods
in
mov
and
mov
shr
mov
je
mov
fs
jp
es
fcompl
pop
mov
fdivr
dec
inc
dec
sbbl
sbb
cmpsb
int
loopne
jae,pn
push
je
dec
and
jle
ljmp
in
notb
sbb
fucomip
mov
lahf
daa
dec
xchg
es
cmp
shlb
stos
and
sbb
cltd
jmp
adc
xchg
in
push
aas
sbb
cs
mull
mov
mov
inc
xor
cmp
ss
hlt
sbb
and
inc
popl
cmpsl
sbb
mov
mov
mov
jg
mov
add
xorb
mov
adc
mov
out
scas
pop
mov
mov
mov
aad
xchg
insl
inc
xor
fs
in
pop
outsl
and
mov
push
ror
sub
lahf
ret
inc
ret
push
fwait
xor
jns
adc
int
mov
test
mov
push
fidivl
dec
mov
push
fimull
push
or
jp
mov
imul
or
call
in
aaa
rorb
aam
sub
xchg
movb
push
repz
xor
xchg
lret
pop
push
mov
sbb
dec
aam
stc
stos
in
sub
xlat
movsb
bnd
cmp
test
mov
and
xchg
test
lahf
popa
sbb
or
push
repz
test
mov
push
or
mov
rcl
xor
in
and
nop
inc
lods
inc
loop
adc
adc
addr16
jo
and
lret
jns
dec
and
cmpsl
inc
cld
int3
out
lea
bound
subl
mov
add
mov
add
lea
sbb
call
jns
testb
jnp
dec
lods
mov
out
mov
cmc
mov
push
test
dec
mov
jo
scas
mov
mov
outsl
pop
cli
popa
sbb
dec
mov
push
jle
aas
mov
cmpsb
lock
mov
test
mov
test
call
inc
fwait
jae
in
sahf
test
fidivs
lcall
addl
pop
jns,pt
shrl
sbb
bound
iret
mov
add
pop
pop
push
sub
inc
leave
push
or
pop
cmpsl
gs
and
xchg
in
cltd
mov
push
testb
imul
lods
xchg
scas
mov
xchg
es
jp
sahf
cld
rcr
adc
adc
nop
pop
les
notb
or
sbb
out
int3
pop
out
repz
into
js
cmp
jmp
call
into
prefetcht2
push
cmpsb
stos
mov
pop
mov
dec
dec
and
push
cli
sub
outsb
mov
fcomi
call
xchg
mov
mov
dec
add
insb
in
and
shll
sub
pop
push
and
push
mov
or
xor
or
inc
cmpsl
push
add
loopne
xchg
shlb
divl
push
inc
ljmp
pop
jnp
insb
mov
pop
fs
pop
bound
test
jo
insb
push
dec
xor
adc
dec
int
and
cmpsl
push
fwait
loop
seto
insl
fwait
loop
adc
addl
pop
rcl
pop
fidivrl
fsts
adc
and
das
js
imul
or
mov
jle,pn
pusha
mov
je
andl
ret
xchg
ss
cs
into
mov
cmp
xchg
jbe
cmc
mov
pop
push
addr16
jo
andl
je
lcall
fbld
sahf
sbb
std
lret
lock
stc
mov
xchg
xchg
js
cmp
pop
ss
xor
and
stos
fsubs
dec
mov
xor
xor
jns
rcll
int
lods
outsb
sub
fstpl
dec
adcl
cmp
les
jecxz
pop
dec
shlb
cmp
add
lea
xor
popf
jl
push
add
or
pop
push
dec
pop
test
lods
leave
add
fs
icebp
or
mov
xor
nop
jbe
add
not
add
xor
pop
mov
inc
jb
cld
adc
dec
mull
xor
dec
adc
sub
dec
xchg
popa
ss
mov
xor
dec
cmpb
cmp
cli
fwait
ljmp
popf
jl
jge
mov
pop
xor
fildl
adc
aas
mov
fnstcw
jbe
les
dec
je
cmc
sbb
shl
lahf
test
adc
movsb
leave
fdiv
and
divl
stos
mov
movl
and
into
mov
idivb
orb
scas
subps
push
jp
test
jmp
dec
test
popf
arpl
cmpsb
pop
stos
cmp
andb
ljmp
mov
or
pop
push
insb
addr16
dec
mov
je
mov
fnsave
ja
mov
pop
dec
ss
sub
pop
cmp
jl
movsl
or
and
and
sbb
sub
sub
leave
adc
clc
or
mov
mov
es
ret
test
xor
test
ret
repz
sub
mov
xor
xchg
test
pusha
adc
push
mov
popa
mov
outsl
xchg
cltd
data16
push
jo
xor
adc
lock
pop
out
scas
gs
pop
adc
and
icebp
es
call
mov
cmp
iret
fadd
jle
arpl
repz
xor
jns
cltd
xor
or
cmc
stos
jb
in
pop
shrb
mov
imul
adcl
and
push
pop
sub
mov
lret
mov
lds
mov
and
dec
mov
fisubl
fists
jbe
cmpsl
shlb
sbb
mov
jecxz
leave
shlb
dec
pop
andl
mov
mov
sub
xchg
jno
push
pop
in
cmp
mov
lods
dec
sub
cwtl
inc
or
call
sti
jb
sbb
or
mov
inc
mov
lcall
adc
inc
imul
mov
mov
insl
pop
sbb
outsl
pop
jecxz
mov
pop
dec
pusha
orl
out
rol
mov
push
into
mov
mov
inc
rcl
mov
cmp
dec
lods
testb
fldenv
mov
shlb
jns
sbb
outsb
add
pop
push
push
addr16
ficomps
fisubrs
mov
cmc
pop
arpl
inc
cmp
test
mov
pop
pop
lods
ret
dec
jae
inc
sti
lret
lret
lret
jle
mov
nop
sub
or
adc
cmp
cmpsl
xor
imul
xchg
aam
aas
pop
pop
jmp
out
mov
cmp
shrl
add
and
jge
pop
test
test
and
popf
rolb
cmpsl
cmpsl
mov
push
fcomps
or
adc
pop
sub
cli
inc
inc
jns
rol
push
cli
call
lcall
sub
and
out
push
mov
or
push
ret
insl
icebp
cmpb
sbb
outsl
and
out
es
dec
pop
sbb
enter
adc
xchg
cld
mov
adc
mov
xor
push
fsubl
add
or
cmpsb
pop
push
add
aad
mov
xchg
mov
test
frstor
out
xor
ficoml
jmp
out
mov
test
cmp
ss
aas
inc
mov
sti
dec
push
mov
push
lock
scas
sub
sub
lods
push
push
dec
mov
dec
lock
fcmovnu
and
sbb
mov
and
mov
lret
cmc
mov
cmpsb
add
xor
xchg
cmpsb
enter
pop
mov
adc
jle
or
jae
je
clc
aas
mov
adc
ljmp
cli
inc
dec
xchg
stos
jnp
cld
movb
lahf
imul
inc
push
test
or
jg
xchg
cmp
int
mov
add
xchg
icebp
cmp
add
sub
mov
and
pop
xchg
adc
push
pop
cli
out
lea
cmp
lret
shl
lods
or
aas
xchg
mov
adc
mov
das
movb
pop
cmpsl
xor
fwait
repnz
clc
imul
les
cmpsb
push
xchg
das
decl
dec
rcr
push
fists
push
lcall
add
stc
push
dec
push
jno
ja
and
sbb
sub
jle
mov
addl
push
scas
cmpsb
push
inc
xor
pop
mov
mov
xchg
push
imul
das
cmp
mov
popa
cmpsb
mov
xchg
outsl
cli
addr16
mov
cmp
inc
push
addr16
ljmp
push
xlat
xlat
jle
sahf
dec
pop
or
or
int3
leave
push
mov
push
xchg
pop
fiadds
pop
roll
in
sahf
outsb
or
test
push
or
and
inc
xchg
push
rcr
pop
test
fimuls
push
mov
sbb
jmp
shrb
xchg
add
adc
adc
pop
adc
add
and
sbb
sahf
movsl
mov
in
cld
mov
add
leave
ss
mov
adc
decl
sbb
sub
leave
xor
sbb
out
adc
push
xor
insl
jmp
cmpsl
pop
out
or
push
mov
loopne
mov
test
pop
dec
shlb
xor
pop
xlat
cltd
mov
lret
mov
sbb
cmc
lret
loopne
push
push
adc
jmp
scas
mov
adc
cmpsl
fdivs
add
js
pop
out
fbld
lcall
mov
lods
scas
test
push
or
adc
xchg
jge
or
mov
bound
xor
jno
xor
sub
adc
ja
adc
xchg
insb
in
out
mov
repnz
jecxz
jg
pop
xchg
das
and
fs
nop
inc
cmp
cwtl
pushf
pushf
push
call
fsubrl
cmpsb
pop
fisubs
movsb
shrl
cld
pusha
push
lds
or
jle
jl
out
push
dec
test
jae
mov
movsb
add
cmp
ljmp
in
mov
and
pop
jge
popf
int3
or
dec
cmpsl
in
addr16
fstpt
xchg
mov
test
mov
cmp
mov
adc
jp
scas
jle
xchg
aam
push
push
dec
out
sbb
push
ds
sbb
xchg
rcll
movsb
push
or
jnp
lret
ret
push
popf
testl
das
cmp
dec
cmc
icebp
andb
mov
sahf
aam
movsl
sti
iret
or
mov
and
xor
push
int3
fsubrs
lret
mov
mov
ret
int
mov
pop
inc
sahf
mov
xchg
cmpsb
in
jbe
pop
jmp
xchg
dec
xchg
std
and
cmp
mov
cmc
or
jp
ljmp
out
mov
push
pop
stos
out
mov
test
insl
xchg
call
rol
mov
or
adc
bound
dec
xchg
daa
sub
outsb
push
test
inc
pmulhuw
xchg
out
fnsave
adcb
shlb
mov
aas
jo
or
xor
add
dec
icebp
push
mov
mov
xchg
mov
add
pop
lock
jb
lahf
cltd
in
out
push
in
mov
bound
or
cld
push
sti
mov
repz
sbb
jge
push
fwait
rorb
ja
fisttpl
xor
out
cli
dec
bound
shrl
push
nop
xchg
lcall
out
outsb
repz
ret
aas
outsb
add
jb
mov
pop
hlt
cmp
paddusb
mov
imul
icebp
and
test
sbb
repz
push
mov
pushf
fwait
mov
xchg
mov
inc
cmp
xlat
jmp
call
mov
push
or
cmpsl
cld
and
movsl
pusha
scas
push
cmp
jbe
rolb
movsb
xchg
cmp
push
adc
push
aas
in
movl
pushf
ds
sub
dec
lcall
mov
mov
dec
jo
adc
data16
aad
stc
ljmp
sbb
xor
sti
lods
pop
test
pop
xor
into
adc
and
cmp
test
sbb
or
sub
xchg
rorb
movsl
sti
popl
xor
push
rcrl
and
dec
je
outsb
call
mov
xchg
mov
jns
push
es
in
add
adc
jmp
inc
data16
cld
inc
clc
mov
xchg
loopne
scas
pop
ret
jp
inc
jb
mov
push
inc
outsl
notl
scas
inc
push
enter
fcoms
cmp
lock
xor
negb
xor
js
push
incb
jge
movsl
cmc
dec
and
sbb
dec
subb
aam
adc
iret
daa
jbe
push
fcmovnbe
sub
push
xchg
mov
pop
jmp
dec
pop
xchg
mov
mov
ljmp
and
push
jnp
adc
and
jb
push
or
mov
adc
daa
mov
sbb
fwait
xchg
mov
es
fst
pop
jno
pop
xchg
sub
std
aas
clc
sub
adc
cmpsl
lock
inc
and
cli
xor
js
xchg
lods
lret
cli
dec
sub
adc
pop
in
mov
or
mov
loopne
ret
hlt
pop
add
scas
fwait
mov
fisttps
lods
stos
or
xor
inc
loopne
mov
imul
shl
inc
insl
push
jp
jae
cmc
dec
xchg
fwait
adc
mov
mov
jb
imul
pop
lsl
mov
loop
dec
mov
repz
fwait
jle
pushf
imul
dec
and
sub
mov
lret
sub
xchg
fwait
jp
std
sahf
inc
mov
popa
data16
cld
push
shlb
cmpl
xor
lret
rorb
scas
pop
mov
les
mov
adc
enter
push
pop
popa
dec
mov
lods
pop
sub
scas
inc
pop
stos
sbb
daa
push
sub
iret
jne
push
cs
jnp
xchg
xchg
xor
test
cs
push
lods
jae
roll
push
pop
insb
outsl
jecxz
aas
sbb
mov
dec
es
add
cmp
andl
movsb
or
mov
mov
shll
sub
inc
fwait
lds
xchg
call
cmp
add
lods
shrb
aam
or
in
and
cmp
leave
ljmp
cli
lcall
lret
ljmp
mov
sub
xchg
pusha
dec
adc
adc
scas
repz
xchg
add
add
lret
add
imul
jl
or
add
mov
int
inc
aam
sbb
enter
clc
mov
dec
hlt
mov
pop
insl
mov
fdivp
insb
sbb
sar
dec
lret
inc
mov
sub
mov
fcoms
mov
mov
in
pop
in
sub
pop
mov
adc
insl
push
jmp
leave
lock
shl
cmc
push
cmp
pop
cmp
adc
iret
adc
mov
stc
scas
std
xorl
mov
into
dec
jae
mov
cmp
dec
call
pushl
sbb
jl
cmpsb
lea
stc
mov
test
sahf
push
lret
out
inc
dec
inc
adc
push
ds
or
nop
add
jnp
xlat
cmp
or
jmp
jge
test
adc
lcall
adc
adc
das
jne
sbb
neg
arpl
rcrl
in
outsl
ret
clc
push
rcl
nop
movsb
cmpsb
mov
nop
or
mov
idivb
test
lcall
sub
push
cmp
shl
les
jl
pusha
mov
loopne
push
arpl
dec
push
cmp
jmp
clc
icebp
mov
dec
pop
sub
out
sbb
inc
mov
lret
lret
stos
fstl
pop
es
lea
mov
aaa
jmp
push
cs
xor
jge
in
mov
adc
scas
sbb
push
push
inc
out
mov
jns
ficoms
xchg
fwait
mov
pop
arpl
and
sbb
imul
and
ds
mulb
sbb
mov
inc
fildl
mov
movsl
adc
jg
lcall
mov
or
sahf
mov
mov
mov
pop
adc
ret
sbb
fsubs
pop
daa
stos
insb
adc
mov
scas
ret
lcall
xor
jge
movsb
pop
mov
or
mov
sar
mov
and
cld
shll
mov
inc
mov
ret
jno
or
sbb
inc
mov
mov
and
rclb
mov
aaa
rol
add
xchg
mov
hlt
dec
mov
ss
rcrl
ja
pop
mov
dec
pop
mov
ficomps
sbb
and
frstor
adc
mov
inc
dec
sbb
les
dec
or
lods
xchg
dec
and
repz
ficoml
das
es
jmp
arpl
add
in
fcompl
mov
hlt
pandn
incb
mov
pop
ds
cli
push
stc
int3
jg
popf
les
jae
pop
dec
lret
jns
int3
push
jmp
aaa
mov
dec
bound
mov
mov
lret
in
in
in
add
enter
test
xlat
push
in
jecxz
xor
inc
testb
sbb
dec
and
in
test
pop
mov
ja
or
aaa
aad
add
xor
adc
sbb
or
xchg
pusha
inc
lods
stos
pop
mov
inc
jbe
jecxz
adc
imul
in
and
stos
and
cmp
popf
adc
icebp
cmc
and
jnp
inc
push
jo
mov
loope
sub
iret
xchg
sti
outsl
mov
inc
lods
fimull
fimuls
lock
cmp
inc
dec
shll
inc
sbb
push
mov
jl
enter
mov
xchg
lea
sbb
stos
clc
lods
dec
pop
repnz
outsb
jbe
inc
daa
or
lcall
push
ja
mov
in
sub
pop
pushf
movsl
xor
or
fbstp
movsb
loopne
mov
push
pop
adc
mov
xor
dec
adc
push
jl
cld
arpl
aas
mov
push
mov
xchg
test
mov
xlat
sbb
shrl
out
test
mov
pop
stc
insb
pushf
arpl
aam
jle
bound
xorl
fcmovnb
dec
test
sbb
or
test
data16
add
insl
ss
adc
inc
and
cmp
lcall
outsb
pusha
jne
or
shrl
pop
sub
lock
jp
pop
popf
cld
stc
mov
sub
xlat
es
xor
and
lods
mov
outsb
addr16
sbbb
inc
lds
mov
push
or
mov
push
dec
lahf
int3
adc
arpl
fistpl
fcmovnbe
stos
jns
mov
pop
js
shll
lcall
xchg
xlat
dec
mov
pop
nop
jbe
imul
je
jle
test
cmp
in
popf
xchg
gs
fisubl
mov
sbb
lods
cltd
cmp
or
clc
fcoms
hlt
cmp
lds
shrl
inc
jb
dec
aam
jle
xchg
loop
xchg
adc
inc
out
push
subl
xchg
ror
sub
pop
pusha
xchg
inc
addr16
loop
push
jo
imulb
ja
popf
insb
leave
fs
sub
outsb
mov
mov
js
sub
popa
inc
fists
mov
mov
in
shll
out
in
push
mov
fcmovnu
inc
sub
ds
es
and
sub
fs
pop
leave
fdivr
es
stc
inc
jl
ror
fcmovnb
sub
pop
xor
xchg
mov
sbb
lret
shlw
mov
orl
popf
jo
and
ret
and
out
pop
jp
cmp
inc
das
xchg
sbb
icebp
stos
cmc
inc
adcl
in
aaa
jmp
mov
jae
ret
mov
inc
fs
sbb
dec
and
arpl
mov
inc
aad
pop
mov
or
sbb
push
fdivrl
push
xor
mov
adc
pop
in
jg
div
stos
xchg
ja
inc
xor
out
cmpsb
mov
or
add
sub
movsl
and
mov
lret
adc
push
cli
adc
aaa
xchg
filds
stos
pop
xchg
or
popa
add
adc
mov
ficoml
or
dec
addr16
neg
pop
stc
hlt
sbb
mov
push
sbbl
adc
lods
dec
je
or
jae
mov
add
outsl
jmp
stos
imul
xorb
cmp
jge
jno
pop
and
cwtl
and
mov
addr16
movsb
jne
lock
xchg
mov
push
xchg
xor
or
push
jb
loopne
mov
lret
or
and
pop
lcall
enter
mov
inc
test
leave
xchg
or
mov
test
cmp
in
cmp
sbb
or
into
repz
sti
mov
stc
jge,pn
test
xchg
test
xchg
iret
mov
in
push
inc
fwait
xchg
add
lock
or
ret
jg
push
jne
cmp
ja
adc
into
or
xchg
mov
imul
dec
sbb
xchg
les
fiadds
xor
jns
cli
cli
ja
mov
sbb
xlat
lods
sub
push
cmp
nop
gs
jmp
sarl
and
arpl
lret
or
daa
sbb
xor
or
sbb
jns
and
adc
add
popf
pop
pop
push
cwtl
sti
outsl
in
xor
dec
outsb
or
pop
aad
aad
fsubl
jbe
pop
subl
or
push
sbb
mul
mov
decl
mov
mov
sbb
mov
mov
or
and
and
test
pop
sbb
stos
das
enter
push
jg
inc
xorb
mov
cmpsl
cmp
pavgb
add
mov
or
add
outsl
and
mov
add
dec
xchg
dec
inc
fldcw
lods
or
insl
dec
add
test
ds
mov
xchg
mov
mov
popa
sub
outsl
cmp
ficoml
adc
sar
sbb
and
push
push
and
jne
or
movb
aas
ds
lea
jb
jae
jg
pushf
or
jmp
ret
imul
int3
push
sahf
pop
out
mov
mov
xlat
scas
pop
outsl
shll
or
out
sub
push
imul
pop
jnp
outsb
lds
mov
xlat
shl
bound
dec
popa
sbb
and
loope
pusha
cmp
and
popf
pusha
push
mov
pop
adc
jge
test
rorl
mov
jae
repnz
inc
adc
hlt
std
icebp
inc
outsb
jp
mov
je
xchg
lret
les
xchg
ja
or
jg
dec
out
cmp
je
int3
lret
mov
and
inc
and
sbb
fidivl
mov
int
push
into
mov
xor
push
loopne
and
loop
mov
ror
xor
adcb
jae
adc
push
inc
outsl
nop
mov
mov
test
jbe
dec
insb
dec
sbb
jl
in
cwtl
dec
inc
xor
dec
stos
or
out
cltd
adc
dec
nop
push
ja
decl
cmpsl
adc
jg
cs
fnstcw
daa
dec
hlt
fsubp
xor
nop
repz
pop
cmp
or
jge
or
mov
std
xor
insl
ljmp
mov
xchg
adc
dec
pusha
fs
cmp
ja
nop
xor
sub
mov
pop
loopne
jg
leave
sbb
orb
or
mov
in
jae
fisubrl
or
dec
sti
rorl
cmp
jp
dec
sub
xlat
jbe
int
xor
stos
add
mov
stc
add
mov
dec
xchg
es
lods
aaa
inc
int
cmp
aas
sub
scas
mov
add
xor
adc
les
lds
cmp
jae
xor
adc
jo
out
enter
in
cmp
in
dec
das
daa
push
mov
mulb
test
add
hlt
sub
rclb
shlb
sub
inc
adcb
out
cmpsl
imul
icebp
mov
push
std
dec
cltd
inc
push
es
hlt
jp
mov
aas
pop
cmp
frstor
mov
jle
pop
mov
and
cltd
jne
and
add
and
jl
insl
or
aas
mov
sub
push
cltd
or
xchg
pop
mov
jnp
fstps
incb
cmp
ret
dec
sub
clc
dec
inc
dec
bound
add
pop
js
pop
movsl
lods
fidivl
pop
enter
scas
scas
loop
push
ficoms
fmuls
mov
cmc
dec
jge
into
loope
mulb
push
push
add
mov
arpl
inc
cwtl
push
mov
out
xchg
xchg
or
push
bound
lods
add
adc
icebp
loope
or
and
stc
adc
jns
fmul
push
inc
pop
push
sub
or
jne
les
mov
cli
jbe
repnz
jmp
pop
pop
roll
loop
addr16
cmp
mov
xor
std
jns
fucomip
loop
ja
fsubl
and
jecxz
and
mov
mov
mov
adc
mov
loopne
in
lret
or
fimull
pop
scas
fcos
cmp
ds
mov
mov
lods
cmp
cltd
dec
jnp
sub
lds
mov
insb
fnstcw
out
add
cltd
xchg
daa
sbb
add
addr16
dec
xchg
mov
sti
sbbl
inc
cmc
aam
fadds
sub
outsb
lahf
mov
mov
daa
xchg
mov
cli
push
test
scas
out
test
cmp
and
xor
add
add
jb
xchg
sahf
jo
and
sub
aam
mov
mov
das
jge
cmp
inc
push
mov
lock
pusha
movsb
or
inc
jne
enter
xor
sub
push
pop
or
les
fs
dec
mov
mov
out
push
pop
mov
pop
xchg
outsb
mov
cmp
adc
jmp
mov
sub
and
add
sahf
icebp
push
stos
bound
cmpsl
push
xchg
int
std
outsl
adc
mov
rcrl
pop
ret
xor
nop
pushf
push
aaa
lahf
xchg
push
mov
sbb
xchg
aad
sub
push
add
andl
out
mov
ret
negb
xchg
xchg
dec
sbb
dec
pushf
gs
add
popa
int
sub
test
adc
into
sub
cs
movsl
xor
ret
data16
push
xor
or
mov
sub
sahf
out
push
mov
mov
and
lods
bswap
outsl
notl
fisubl
pop
imul
mov
push
dec
xchg
call
repnz
pop
dec
pusha
aaa
xlat
push
push
or
in
lret
xchg
jnp
push
jp
dec
ja
adc
and
insb
push
fucom
stos
jecxz
xchg
jmp
cmp
sub
rcrl
xchg
bound
pop
out
inc
daa
je
cmc
clc
push
adc
loope
push
repz
cltd
fstps
scas
out
cltd
sti
icebp
inc
sub
inc
aad
add
push
cmpsb
and
inc
test
aas
mov
int
popa
ret
push
pop
cmp
adc
es
insb
and
mov
dec
outsb
div
scas
lock
push
or
mov
pop
mov
mov
loop
jno
inc
lods
and
mov
cmp
sar
cmp
aaa
dec
xchg
hlt
push
bound
insl
icebp
js
or
lret
sub
dec
inc
lea
add
adc
fsts
ds
xchg
mov
test
into
lods
rcrb
jg
sub
movsb
fistpl
push
mov
xchg
xor
addl
fs
xor
xchg
sbb
mov
sbb
lds
decl
shl
xchg
xchg
or
push
pusha
and
movsl
pop
mov
push
es
dec
fists
outsb
mov
lods
push
mov
in
pop
mov
dec
mov
inc
xor
jp
dec
call
idivb
stos
xchg
aam
sub
outsb
mov
push
or
stos
out
sub
sbb
mov
shrb
mov
push
pop
subl
mov
sbb
fiadds
lods
xchg
cwtl
push
sbb
aas
jnp
or
mov
pushf
or
jecxz
mov
aad
out
sbb
jns
je
roll
and
movsb
sub
andl
arpl
fcoms
jo
lret
or
cmpsl
adc
sbb
in
lahf
sub
roll
mov
arpl
cmp
pop
xchg
push
pop
sahf
dec
das
pushf
xchg
insb
insb
push
mov
stc
cmpsl
cmp
pop
jmp
sub
ljmp
pop
push
inc
hlt
imul
aad
pop
jns
insb
jp
jno
dec
rdmsr
pusha
repnz
mov
in
jmp
dec
decb
sbb
jmp
scas
sti
lock
adc
mov
and
or
into
push
popa
xor
jmp
out
stos
push
inc
xchg
in
xchg
out
mov
lret
xchg
cmpsl
movsb
xlat
out
rclb
push
adc
dec
ss
stos
jle
jle
in
add
int
jbe
mov
test
pop
mov
push
push
xchg
fdivp
mov
pop
mov
xorb
xchg
fistpl
xor
push
out
orl
fisubl
push
lods
push
push
jae
mov
mov
enter
fisttps
sub
inc
mov
push
or
movsl
add
fcmovnbe
cmp
loop
outsb
mov
and
in
out
mov
or
pop
mov
xor
mov
aad
notl
inc
push
add
cmpsb
mov
inc
outsl
testl
inc
cmp
sub
jo
test
xchg
lahf
dec
stc
sbbb
lret
ljmp
dec
nop
imul
xor
mov
loopne
cmovo
or
fstpl
movsl
subb
jg
roll
inc
pusha
dec
cmpsl
xor
adc
sub
push
daa
push
sub
mov
dec
cmp
daa
jmp
xor
adc
arpl
adc
xchg
xchg
mov
mov
fbstp
or
hlt
mov
dec
stos
loop
ja
stos
ds
out
xchg
cmp
add
std
fwait
pusha
fisubl
out
jne
dec
push
inc
jae
mov
xchg
add
fisubrl
pushf
pusha
xor
neg
lcall
inc
sub
loopne
idivl
jmp
pop
in
out
rclb
cmp
mov
lret
sti
loop
jbe
call
mov
cmp
outsb
add
cmpsl
lock
shr
das
xor
fwait
pop
cli
lds
inc
ss
lcall
cmp
sub
cmp
xor
mov
out
lret
loope
jmp
movsl
mov
push
xchg
sbb
xchg
movsb
pop
cmp
cmpsb
dec
add
xchg
test
push
xchg
mov
movsb
sbb
push
add
xchg
mov
loope
loopne
and
cmp
pop
mov
mov
dec
and
cmp
sar
scas
cmp
roll
mov
xchg
xchg
das
mov
movsb
sbb
mov
push
outsl
jp
cltd
popa
or
sbb
icebp
leave
dec
orb
and
and
nop
out
imul
in
lock
orb
cmpsb
jge
js
addb
jne
rcrb
or
sbb
add
jle
addb
dec
hlt
jl
xchg
insl
sbbl
rcll
pop
mov
fdivrs
push
add
cmpsb
add
out
pop
xchg
adcb
or
rolb
lret
stos
repz
out
add
mov
fdiv
and
sti
adc
enter
adc
shlb
mov
cmp
insb
ss
loope
fstpt
addr16
jae
and
sbb
jnp
push
and
mov
and
lods
or
mov
dec
mov
jp
inc
push
mov
jo
xlat
push
in
xchg
pop
inc
and
out
xchg
mov
sub
mov
gs
fs
xchg
inc
mov
hlt
ss
not
sub
push
imul
adc
xor
lret
jecxz
sub
cli
push
jbe
mul
aam
lods
imul
test
mov
fistl
cs
mov
lret
stos
ds
push
fiaddl
lods
or
cmpb
repnz
jnp
popf
ss
rorb
mov
pop
mov
stos
in
xor
ljmp
inc
scas
sbb
lock
fs
sbb
mov
push
aam
xchg
push
mov
adcl
push
aas
cwtl
xchg
xchg
inc
push
jge
bound
dec
mov
addl
jo
cmpsl
out
or
pop
test
fs
in
push
dec
lods
loopne
or
xchg
mov
shll
imul
vmwrite
xchg
fisubrl
sahf
cmp
pop
inc
add
fnstcw
lahf
jo
jg
into
and
insl
mov
lea
stc
inc
std
inc
fcmove
dec
xor
mov
jecxz
cmc
pop
jnp
adc
enter
or
xchg
xchg
and
addb
sbb
pushf
loop
pop
shrl
je
jp
inc
scas
xchg
jp,pt
jns
in
shlb
pop
add
fstps
push
add
pop
push
or
out
adc
mov
sti
orb
or
popl
mov
addr16
cltd
addb
xor
jae
sub
inc
aaa
movsb
enter
ja
loop
and
dec
mov
rorb
cmp
add
imul
shr
pushl
cmp
adc
inc
push
jo
out
ja
xor
cwtl
mov
mov
cmp
arpl
cltd
decl
mov
mov
push
cmpsl
dec
sub
insl
lret
dec
jb
dec
fdivr
add
imul
mov
inc
insb
aad
popf
jne
sub
insl
mov
divl
sub
pop
mov
mov
leave
sub
and
and
dec
cmpsb
into
es
fcmovnbe
or
xchg
or
cvtpi2ps
inc
popf
mov
mov
loop
xchg
xchg
adc
cmc
hlt
mov
orl
adc
mov
icebp
stos
fcmovnb
sbb
jg
inc
sbb
pop
repnz
pop
sub
or
dec
test
xor
in
test
dec
and
in
das
adc
mov
pop
outsb
cmp
or
adc
sahf
dec
flds
ret
cwtl
push
test
clc
xor
setge
inc
jb
pop
mov
adc
cltd
lret
fnsave
push
pop
scas
mov
jecxz
sti
or
add
loop
fdivrl
xor
xchg
in
test
jmp
les
pop
push
cmp
mov
jmp
mov
fnstcw
push
andb
and
push
sub
leave
cld
clc
cmp
cmp
repz
pop
xor
inc
iret
loopne
cltd
sahf
mov
xchg
ficompl
push
in
cld
jmp
add
or
push
repz
xchg
out
sti
stos
adc
insl
dec
pop
int
sub
ret
int3
mov
pop
stos
jb
ja
pcmpgtb
imull
fistpll
and
mov
fnstenv
add
pop
mov
cmp
xorb
and
imull
cmpsl
mov
repnz
rcrb
int
mov
adc
iret
mov
lret
pusha
cli
cwtl
lret
icebp
xchg
push
push
cld
push
or
pop
jae
mov
push
mov
movsl
roll
pop
ret
int
addb
pop
mov
dec
scas
test
pop
sbbb
aad
adc
cmpsb
leave
mov
lock
mov
cmp
or
cmpsl
les
and
pop
push
fsubs
enter
pop
popf
lea
lahf
cli
sbb
sbb
pop
cli
sbb
roll
add
movsl
mov
mov
jecxz
stos
enter
ljmp
das
scas
dec
mov
dec
cmp
leave
fisubrs
mov
js
addb
add
js
ss
dec
scas
imul
mov
and
sbb
leave
adc
inc
rcll
cmp
cmp
int
pop
cs
imul
das
push
push
lcall
loop
or
xor
fs
into
shr
outsl
loopne
xchg
scas
cmp
xorb
negl
sub
jmp
dec
cltd
dec
pop
repz
shlb
shrb
mov
cli
test
inc
repnz
ficomps
cmp
add
mov
or
int3
pop
dec
push
fsubrl
cmp
cmpb
add
jg
sahf
xor
jne
or
ret
shrl
mov
dec
addr16
cmp
jns
cmc
mov
call
sub
sahf
icebp
add
sbb
sbb
cmp
cmpsb
ret
add
mov
jmp
xor
popa
pop
jle
adc
shll
sbb
add
cmp
test
cltd
lods
sbb
xor
mov
jns
into
sbb
mov
push
mov
iret
mov
movsb
inc
mov
int3
pop
mov
sbb
cli
loope
fistpll
fisubrs
cmpsb
cs
mov
popf
mov
cmp
test
out
xchg
test
movsl
or
aad
push
xlat
xor
mov
mov
and
push
test
es
ftst
stos
sti
pop
jp
mov
pusha
xor
push
push
je
out
test
leave
imul
inc
xchg
andb
cmc
stc
stc
push
data16
aam
dec
sbb
into
xchg
or
cmp
pop
repz
and
cld
add
add
lcall
push
lret
lahf
addr16
push
sub
scas
mov
pop
movsw
xchg
por
xchg
add
sbb
adc
xchg
push
xor
inc
sti
lds
xor
aas
xchg
xchg
std
lret
rcll
outsl
cmp
xlat
add
iret
dec
push
mov
xlat
or
xchg
sbb
mov
mov
mov
xlat
stos
stos
push
movq
inc
and
mov
mov
sahf
xchg
cwtl
jb
mov
les
dec
xchg
clc
pusha
mov
daa
pushf
int
negl
icebp
mov
adc
sbb
in
xchg
and
jae
push
lds
dec
cs
hlt
inc
pop
add
repz
ljmp
fdivs
jmp
mov
push
addr16
inc
xor
lds
add
add
dec
or
std
mov
inc
popa
jecxz
ror
sbb
test
jle
xlat
xor
popfw
sbb
pop
xchg
xor
sub
pushf
lock
sbb
and
rcll
ret
lock
xchg
fs
enter
frstor
faddl
sub
mov
add
mov
ljmp
mov
shl
mov
lea
rcrb
xchg
push
movb
sbb
mov
jle
fwait
xchg
or
test
aad
mov
dec
and
jle
lods
xor
add
cmp
loop
dec
xchg
scas
jae
and
and
pop
cmpsb
dec
hlt
outsb
add
out
mov
push
pop
ja
push
push
mov
and
pop
jns
dec
jmp
mov
mov
pushf
and
ja
call
push
jbe
lods
mov
xorl
cs
xchg
int3
cwtl
rolb
push
std
mov
je
push
xchg
decl
push
pop
jl
in
cmpsb
push
sub
inc
or
jnp
aam
daa
sbb
mov
mov
scas
pop
and
push
movsb
je
sbb
cmp
jle
stos
push
test
mov
add
das
add
mov
push
cmp
ficompl
cmpl
out
xor
repnz
push
sub
insl
pushf
sbb
cmp
or
mov
xor
inc
push
mov
fwait
pop
in
lret
mov
stc
cmp
add
dec
rorb
mov
into
xchg
loop
sti
xchg
pop
scas
xchg
mov
out
iret
inc
int
push
adc
arpl
in
cmp
fldenv
xchg
sbb
cmp
cli
fistl
xor
jb
cltd
push
jo
out
hlt
cli
das
out
add
pushf
imulb
sub
fdiv
scas
push
or
out
stos
jns
cmp
sahf
int
xlat
push
add
arpl
ret
cwtl
push
push
mov
push
pop
ret
jecxz
loopne
xchg
push
push
orl
test
xor
outsl
fisubs
jo
fcomi
pop
test
xlat
jnp
outsl
jle
cmc
gs
iret
pop
inc
andl
mov
fwait
add
orl
je
adc
jecxz
mov
in
jge
in
loop
ljmp
jbe
sbb
cmc
sub
cli
or
adc
dec
iret
into
cmpsl
insb
pop
cmp
fisttpl
xor
xor
sub
or
ret
push
jmp
call
ret
js
sbb
push
cs
test
and
mov
movsb
mov
subb
std
enter
imul
dec
cmp
loope
mov
mov
std
out
mov
stos
pop
and
idivl
ss
daa
pop
lods
xchg
pop
xrelease
adc
ljmp
jge
testl
shl
xor
inc
testb
jg
mov
push
insb
sahf
popf
sub
mov
jae
sbb
lock
adc
ret
rorb
in
clc
xchg
pop
dec
je
gs
loop
sub
aaa
data16
out
sub
mov
jns
filds
push
sub
push
lahf
nop
push
out
jp
jo
inc
loop
fwait
js
je
sbb
pop
adc
call
fucomi
jno
dec
iret
sub
and
prefetch
or
clc
jb,pt
movsb
xchg
inc
xor
je
pop
dec
adc
jnp,pn
push
aad
jge
daa
push
sbb
lds
mov
mov
ja
out
xor
lea
xor
stc
loopne
adc
mov
xorl
mov
push
sbb
sti
mov
popf
ds
loope
in
sbb
xchg
das
cwtl
xorl
or
outsl
pop
xor
insl
stos
jno
push
movb
or
xorl
inc
add
ror
push
cwtl
and
pop
sub
das
leave
xor
pushf
cmpsb
push
mov
imul
cmpsb
scas
stos
pop
gs
inc
jl
std
lock
mov
cmp
mov
ljmp
and
mov
jge
push
ret
mov
or
jne
or
popf
sbb
movsb
and
sbb
nop
xchg
loopne
push
add
inc
jle
icebp
pop
mov
mov
lods
icebp
cmp
sbb
jne
out
inc
mov
push
inc
xchg
push
fildl
call
add
sarl
and
xlat
aad
or
pop
and
xor
clc
xor
pop
into
and
movsb
iret
imul
testb
rcrb
sbb
push
sub
pop
ljmp
pop
movsl
inc
in
sti
push
pushf
sub
filds
dec
aad
adc
rcrl
mov
test
out
scas
in
in
xlat
add
outsl
je
pop
lds
pusha
test
jbe
sub
xchg
repz
push
imul
mov
jl
or
inc
test
pop
stc
xor
fisubrl
insl
lcall
cld
adc
or
mov
lods
pop
adc
inc
iret
dec
idivb
icebp
adc
pop
aam
mov
insb
push
insl
pop
in
sub
lea
ds
fwait
xor
lods
orb
adc
pop
shl
loopne
adc
jmp
mov
rcrb
sub
shr
pop
jbe
ret
pop
sbb
loopne
aaa
lcall
mov
sbb
push
outsl
aas
les
test
rcr
jne
out
mov
mov
push
pop
add
dec
jg
mov
out
ret
cmp
push
addr16
and
mov
or
aaa
sti
pop
pop
push
shl
das
xchg
icebp
mov
cli
mov
js
fstp
push
lds
push
adc
mov
aas
xchg
rcrl
cmp
and
or
stos
cwtl
mov
fsubs
out
test
or
dec
sub
adc
add
das
es
xchg
pop
lret
mov
in
jne
jmp
dec
sti
xchg
lock
stos
cmp
cs
pop
dec
int
mov
adc
mov
mov
push
mov
mull
hlt
jg
cmpsl
push
clc
mov
test
roll
dec
lahf
lret
test
mov
pushf
push
insb
cmp
stos
jmp
repz
shlb
cmp
testl
xchg
and
and
negb
pop
fildl
jb
mov
push
rorb
xlat
and
xor
push
pushf
xor
lret
push
movsb
shlb
jns
gs
std
mov
mov
mov
aas
cmp
rol
stos
aam
jle
cmpsl
loop
jle
sub
push
mov
repnz
cli
call
xchg
or
movsl
mov
push
cmp
cltd
xor
or
fsincos
pop
ret
aam
shlb
out
mov
or
jae
mov
push
std
outsl
arpl
lods
loope
sarb
repnz
xor
mov
addb
lcall
jp
pop
mov
outsb
aas
fcoms
mov
cmpsl
es
xor
popf
jne
cmp
pop
scas
sub
cmpsl
and
divl
mov
xchg
leave
call
and
leave
je
or
or
or
dec
inc
sbb
or
dec
in
mov
movl
pop
and
push
sbb
ljmp
mov
cmp
push
push
outsb
stc
xchg
push
rclb
out
in
lock
mov
push
push
sahf
xchg
jge
stc
push
jne
iret
xor
cmp
cmc
popf
in
std
orb
jnp
adc
loopne
pop
and
test
push
hlt
adc
outsb
mov
pop
stc
dec
pop
fstps
or
and
hlt
jns
lods
jle
dec
pop
js
push
aaa
cmp
inc
mov
sub
and
mov
add
sbb
or
pop
mov
cmp
iret
loope
pop
cmpsl
cs
scas
jo
lcall
push
pushf
dec
test
inc
nop
sub
fldcw
inc
int3
testl
rorb
pop
xor
aad
add
pusha
jno
test
les
addl
nop
mov
jb
mov
mov
addr16
test
aaa
add
mov
cltd
aaa
lods
insl
xchg
dec
xchg
stos
sbb
sub
notl
mov
cmc
add
and
jge
nop
dec
jns
xchg
mov
push
sub
ret
ja
out
cltd
and
sbb
out
daa
int
insl
xchg
lods
in
shlb
jbe
xor
sbb
js
cltd
pop
ljmp
pop
sbb
fcomi
pusha
stos
sub
push
xchg
and
ret
ret
dec
rcrb
pop
js
fnstsw
cltd
cmp
mov
dec
scas
dec
popf
push
fcmovne
sub
dec
sarl
sbb
divb
loop
push
leave
repnz
fiaddl
leave
mov
or
dec
push
ret
mov
mov
notl
fwait
test
fs
push
lock
clc
xchg
xchg
jae
jno
into
push
imull
scas
cmpsl
in
mov
out
out
sbb
out
mov
repnz
push
jno
mov
xor
mov
cmp
stos
inc
test
mov
mov
mov
sarb
mov
test
int
xor
mov
pop
lahf
add
pop
jae
sub
ja
and
jno
push
lcall
xchg
in
dec
xlat
out
push
aaa
movsl
scas
mov
nop
ds
xchg
mov
stos
jbe
ss
addl
cmc
lods
sub
mov
outsl
jg
negl
test
imul
insb
push
aam
mov
subl
mov
push
lahf
in
cmp
dec
addb
outsb
inc
and
dec
inc
arpl
sub
inc
cmp
jno
inc
push
mov
les
xchg
mov
sub
pop
addl
fisubs
sbb
pop
stos
iret
pop
fisubrs
insl
and
adc
faddl
push
fldenv
jge,pn
fdivl
mov
inc
sbb
push
gs
and
mov
xchg
push
add
sbb
jns
inc
filds
stc
loopne
and
loop
sub
jecxz
insl
fdiv
cmp
sub
push
push
mov
test
subb
push
insb
mov
lods
sub
xchg
cwtl
jmp
lea
jge
dec
cmp
out
jns
lods
jmp
inc
test
cltd
jle
loope
test
and
ret
in
sbbb
or
or
cmp
rorb
jns
push
mov
and
xchg
popa
or
mulb
pusha
cltd
addr16
or
xlat
jo
fsts
xchg
adc
fstl
jnp
push
dec
stos
xchg
cmpsb
xchg
xor
in
orb
popf
pop
pop
lea
jnp
aad
shlb
data16
jb
jbe
adc
stos
mov
and
sub
pop
jnp
add
adc
push
and
out
mov
scas
sbb
rorb
lcall
jle
push
sub
call
xor
xor
sub
xchg
mov
cwtl
mov
adc
neg
jp
xor
loop
shlb
jge,pt
push
push
mov
dec
ljmp
out
sub
inc
popf
xlat
lahf
inc
aas
orl
sub
pop
sub
xchg
stos
arpl
cltd
pop
push
je
xchg
cmp
push
xor
dec
adc
sbb
js
repz
sbb
clc
loop
cmp
jae
adc
andb
pop
sbb
xor
sbb
movsl
adcb
loopne
loop
pop
xor
std
scas
jge
into
xor
push
arpl
lods
push
les
mull
cli
jne
fmul
sbb
sub
mov
mov
push
mov
mov
cmc
loope
cmp
icebp
dec
bound
ljmp
jl
int
mov
jbe
rcll
jmp
pop
mov
mov
jmp
out
out
push
mov
inc
lods
xchg
xchg
and
cmp
adc
push
movsl
xor
out
fwait
mov
pop
adc
popf
sbbb
enter
ret
jg
xchg
inc
call
fcomp
mov
hlt
pop
add
insl
jnp
scas
es
inc
fisubs
aad
jmp
sbb
and
xchg
inc
and
int
mov
outsb
push
test
fdiv
cmp
adc
adc
stc
test
adc
fisttpl
ret
xchg
or
jl
or
sub
mov
cmpsb
aad
jne
mov
and
insl
jno
lcall
mov
and
jle
pop
js
cli
push
xor
jl
in
in
dec
xchg
mov
jmp
or
pop
dec
inc
icebp
sub
mov
xor
lea
jmp
mov
push
jae
xchg
icebp
push
push
sets
push
stc
xor
unpckhps
or
cmp
adc
subb
shr
cld
jae
std
dec
out
or
sarl
mov
inc
arpl
xrelease
push
sub
out
sub
jnp
jns
in
std
inc
jge
loope
repz
sub
xlat
mov
ja
bound
test
cwtl
les
mov
popa
mov
xchg
push
jbe
mov
xor
sbb
mov
mov
cmp
jne
push
fstps
lds
mov
sub
ljmp
push
mov
negb
insl
xchg
mov
and
mov
cmpsb
cmpl
push
sub
mov
stc
adc
xchg
mov
inc
clc
negl
pop
push
adc
out
push
shlb
or
inc
pop
xchg
or
or
jmp
inc
test
mov
jno
mov
test
stos
pop
xor
enter
in
pusha
mov
jb
add
xchg
jne
mov
sbb
sbb
xor
push
cltd
mov
dec
push
xor
sub
jp
ljmp
xchg
mov
adc
clc
popf
mov
pop
pop
lahf
lret
mov
and
in
adc
cltd
and
rclb
mov
sbb
mov
and
xor
mov
movsb
mov
jbe
cld
xchg
nop
pop
pop
mov
dec
pushf
and
movb
bound
mov
fbld
pop
adc
and
imul
adc
sub
mov
adc
cli
inc
ss
lahf
jo
push
adc
test
adc
ror
add
movsl
cmpsl
sbb
sbb
xchg
or
out
mov
sub
xor
xchg
xorb
pop
sub
hlt
cmp
jecxz
es
xchg
mov
adcl
lock
mov
sbb
out
push
in
pusha
mov
test
and
mov
movsb
adc
jge
enter
mov
push
pop
mov
sbb
daa
outsl
fnstcw
jnp
rolb
inc
daa
fisttps
dec
leave
aad
cmp
fldenv
movsb
mov
inc
mov
lock
fdivrs
fxch
movsl
adc
sub
sbb
sar
sbb
mov
mov
dec
mov
dec
shll
jne
sarl
cmp
inc
lea
sub
mov
aam
adc
rcll
daa
fs
sti
fnstcw
or
and
jne
icebp
sbb
sub
cmp
repnz
out
sbb
mov
dec
xor
movsl
cmp
stc
add
inc
icebp
repz
dec
sbb
or
movb
sub
sbb
div
adc
sar
es
or
cltd
loop
pop
rcrb
xor
mov
pop
push
adc
daa
inc
sti
out
dec
push
ds
sub
dec
xchg
cli
dec
or
push
inc
xchg
pop
jmp
sbb
xor
dec
insb
xchg
jecxz
pushf
xor
into
mov
sbb
xlat
dec
mov
sub
push
sub
push
mov
pop
xchg
sub
pop
xor
push
and
mov
jmp
push
lods
push
xchg
orb
pop
cmpsb
outsb
loopne
jge
and
pop
cmpsb
test
pop
pop
int
pusha
sub
ja
imul
stos
add
dec
push
negl
sub
roll
pop
test
mov
jecxz
xchg
fwait
jmp
add
dec
aas
pop
insb
je
pop
js
test
lret
push
inc
xchg
inc
inc
int3
das
dec
mov
mov
shlb
xchg
sbb
and
add
add
adc
push
inc
in
ret
jg
stos
fidivl
pop
mov
pop
or
adc
and
mov
test
or
les
jp
xchg
cmp
and
dec
cmp
movsl
push
dec
icebp
dec
xor
or
sbb
xlat
xor
and
je
test
enter
inc
enter
adc
add
lock
or
leave
into
popa
mov
sub
shrb
cmpl
nop
fucompp
inc
int
in
mov
std
and
cmp
and
fisubrs
xor
pop
and
push
and
icebp
fucom
lahf
xor
scas
dec
aad
outsb
out
cli
pushf
imul
pop
pop
fldenv
shll
mov
or
inc
sub
push
xchg
imul
into
jg
scas
addr16
xlat
data16
inc
pop
lock
xchg
das
clc
out
add
cmp
jns
addr16
jle
in
repz
or
and
andb
sarb
lahf
cmpsl
pop
dec
jns
fdivrs
int3
xchg
ja
call
push
cmc
push
inc
into
icebp
leave
push
mov
cmc
sbb
push
jb
cmpl
jl
cltd
xor
aaa
pop
rcll
jp
sahf
test
cltd
shrl
jb
mov
jb
test
adc
xchg
iret
sub
jg
add
xchg
mov
inc
adc
fcoml
daa
xchg
pop
xor
rcl
and
stc
jne
ret
lock
shlb
popa
lcall
into
pop
cmpsb
lea
mov
int3
cltd
bound
aas
xor
fstl
rcll
idivb
or
adc
cli
sub
xor
jne
xchg
and
pop
aas
or
popa
sbb
das
cwtl
cld
adc
out
add
sub
mov
in
mov
cld
mov
mov
js
fstpl
mov
mov
outsb
adc
mov
jb
nop
adc
leave
push
notb
daa
sahf
inc
std
lcall
in
xor
pop
mov
sahf
xor
les
test
mov
fiaddl
adc
pusha
push
cmc
clc
cmp
stos
cld
mov
push
inc
ja
gs
sbb
pop
xlat
inc
bound
push
sub
into
lods
xor
addr16
xor
sti
inc
repz
mov
add
mov
and
mov
mov
loop
cmp
push
jmp
cmc
and
push
and
mov
push
inc
mov
pop
and
mov
xchg
inc
and
mov
jp
setle
mov
sub
mov
mov
inc
cmc
pushf
and
hlt
pop
dec
cmp
inc
cmp
sbb
mov
test
int3
cmp
or
dec
jmp
insl
adc
xchg
andb
aad
shlb
pop
cmpsb
dec
popa
repz
add
fistl
into
hlt
pop
cmp
out
adc
add
add
and
aam
inc
jg
aam
mov
xchg
sub
jnp
xchg
cmp
cmp
enter
jg
lea
inc
stos
jne
jg
inc
sbb
add
mov
cmovge
inc
dec
push
sbb
mov
push
cmpsl
mov
cmp
inc
adc
imul
mov
in
pop
das
push
into
pop
push
stc
idiv
aas
and
mov
push
popa
mov
aam
add
xchg
mov
push
sahf
and
mov
sti
mov
cmp
mov
push
push
inc
stos
xchg
std
out
sarl
insb
inc
inc
cmp
push
insl
subl
add
mov
insl
inc
mov
xchg
xchg
pop
fcmovb
dec
xchg
xchg
lods
loop
mov
jns
out
fidivl
out
sbb
lock
cld
xchg
aad
push
xchg
push
fidivrs
out
aas
and
mov
inc
adc
push
cmp
call
sbb
mull
mov
fsubrl
enter
fs
fldenv
ret
or
lcall
sub
pop
cmc
int3
aas
out
cld
data16
mov
lret
out
mov
aaa
mov
pop
xor
js
mov
pop
adc
cmpsb
dec
fs
test
jnp
mov
orb
popl
push
cmpb
movsb
xchg
xor
pop
inc
mov
push
dec
pop
test
loopne
inc
mov
inc
scas
ds
mov
lret
xchg
lahf
pop
jle
mov
and
xor
test
push
lock
dec
bound
fisubl
adc
pop
adc
pusha
aad
and
nop
sbb
sbbl
lahf
iret
xchg
dec
or
popf
mov
aam
out
dec
outsl
sub
dec
push
add
sub
sbb
lods
loop
pop
leave
popf
lea
cmc
cmp
movsb
out
dec
mov
filds
stos
sbb
xchg
pop
sub
inc
enter
sub
clc
mov
mov
jle
jp
jae
arpl
cmpsb
popa
mov
cltd
jge
popf
and
mull
test
into
jl
sub
fidivs
int3
xor
push
mov
push
mov
sub
ds
adc
cmp
lock
adc
cmp
int
std
rclb
jle
push
call
les
hlt
adc
cs
mov
inc
outsl
movsb
pushf
outsl
les
mov
xchg
or
mov
repnz
add
or
movsb
orb
out
sbb
push
cmp
daa
add
in
scas
jae
jae
adc
ss
outsb
cmp
jbe
and
imul
jg
dec
jle
movsl
or
popf
mov
ss
test
ret
faddl
mov
push
pop
xor
jg
push
mov
adc
mov
mov
arpl
dec
xchg
imul
fistps
xor
xchg
push
sub
inc
and
adc
arpl
sub
ljmp
cs
inc
subl
fcoml
ret
es
jmp
inc
pop
cmp
add
and
sbb
ja
ds
imul
mov
mov
clc
and
mov
or
outsb
lahf
mov
enter
push
aad
and
push
das
iret
jae
nop
xor
shlb
je
xor
lock
imul
popa
js
cld
imul
popa
mov
xor
or
mov
loop
add
icebp
fcomi
mov
pop
daa
jnp
inc
int3
push
push
cvtdq2ps
rolb
mov
movsl
push
mov
mov
xchg
fisttpl
mov
cmc
add
xlat
call
jns
push
or
mov
cld
das
sub
inc
cs
inc
outsb
cwtl
lahf
movsb
jmp
mov
out
cli
add
pop
lods
mov
push
jne
mov
aaa
pop
push
sub
cmp
mov
cmp
xchg
mov
imul
xchg
dec
dec
add
push
and
hlt
loop
in
jecxz
cmp
or
xor
ds
loope
outsl
outsl
insb
adc
mov
mov
imul
adc
cmc
add
pop
outsb
xor
mov
and
insb
xor
xchg
insl
sub
or
xchg
sub
fmull
cld
sub
nop
aad
cmpsb
adc
push
mov
inc
jge
dec
mov
lcall
scas
int
mov
inc
outsl
mov
jne
fldcw
and
aas
push
pop
ds
daa
shrl
pushf
sti
lods
stos
cmp
cmp
stos
mov
xor
rcrl
shlb
jg
push
mov
arpl
pop
inc
xor
jl
mov
lea
inc
daa
leave
cli
jl
dec
lcall
ss
fsubrs
inc
test
sub
mov
out
scas
fnstsw
roll
mov
ss
insl
fcom
mov
inc
les
lods
and
testb
cmp
sbb
in
jl
inc
xor
jmp
gs
or
movsb
pop
cmpb
aas
mov
jmp
fisubl
pop
xchg
rcll
jge
or
lcall
outsl
scas
lahf
pop
xor
je
jo
push
dec
int
mov
xorl
cmpsl
stos
dec
lret
xchg
and
xchg
mov
daa
and
out
iret
and
repz
and
inc
adc
add
aam
or
push
jg
fdivl
gs
mov
lock
adc
dec
mov
push
ds
xor
or
sbb
test
mov
fsubrl
aam
xchg
leave
enter
out
loope
or
jle
adc
mov
rorb
data16
cmc
dec
outsb
int3
or
pop
punpckldq
push
aam
mov
daa
xchg
std
int3
adc
enter
adc
sub
cli
and
sbb
in
jnp
repnz
cmpsb
lcall
sbb
jmp
js
nop
jmp
lret
jg
dec
pop
push
pop
xchg
loope
mov
lock
xchg
push
mov
push
in
mov
test
jae
subl
mov
push
sbb
cmp
push
mov
pusha
insb
repnz
pop
stc
int3
in
cwtl
cmpxchg
ljmp
std
outsb
mov
int3
mov
flds
pop
sbb
shlb
push
push
push
xchg
sti
lods
mov
cmp
call
hlt
cwtl
mov
clc
push
add
inc
int3
add
mov
xor
cmp
mov
scas
sub
lock
repnz
in
cltd
cmp
jg
lods
rcrb
ds
cs
sbb
xchg
sbb
push
jno
fmull
fwait
push
mov
aaa
or
enter
int
rcrl
ja
stos
inc
xchg
mov
inc
pop
pusha
dec
add
push
xchg
jp
movsb
jmp
ss
in
lods
mov
iret
inc
xchg
jb
inc
test
push
xor
lock
rorb
jo
mov
imul
in
pushf
cmpsb
mull
or
mov
leave
pushf
mov
scas
fildl
mov
in
cmpsl
push
ret
and
imul
mov
xchg
imul
popa
push
dec
movsb
pushf
jnp
repnz
pxor
icebp
call
out
int3
fs
pop
pop
or
pop
jecxz
add
in
sbb
dec
mov
dec
jecxz
gs
xchg
pusha
notl
mov
cmp
popf
cld
xchg
mov
rorb
pop
mov
pop
push
movsl
sbb
mov
out
out
movsl
adc
in
cmc
aas
or
mov
shlb
movsb
lods
add
fucom
movsl
mov
mov
imul
or
movsl
sbb
add
popf
pusha
outsb
xchg
lock
popa
inc
or
ljmp
push
and
pop
rolb
or
xchg
jb
loopne
mov
in
xchg
das
into
in
in
lahf
dec
sub
fstps
xchg
push
cmp
xor
sbb
int3
cwtl
stos
push
sbb
fnstsw
out
cmp
loopne
mov
loopne
lds
xchg
mov
pop
rclb
out
mov
jno
shlb
push
lcall
mov
adc
push
sbbl
push
stos
test
add
stos
das
or
jmp
xor
stos
pushf
xchg
dec
int
push
and
push
inc
test
sub
das
mov
jns
roll
out
jo
adc
jp,pn
pop
daa
fcoml
ja
jne
addr16
es
jne
jecxz
ret
sub
sub
and
and
pop
push
or
or
inc
push
notl
cmpsb
pop
lea
clc
xchg
jne
adc
push
aam
std
cmp
jb
test
arpl
aaa
fwait
jp
nop
ljmp
test
xor
ja
mov
sbb
ss
std
pop
sub
stos
sub
out
push
cltd
aam
outsb
sbbb
or
push
pop
negl
or
pop
inc
dec
sub
adc
add
sub
push
mov
shlb
add
push
add
sub
das
push
xchg
rorb
cltd
les
and
pop
fs
mov
fwait
aas
lea
sub
test
inc
fsubl
fidivl
mov
xor
dec
and
movsb
cltd
mov
loope
insl
xor
jne
fwait
xor
movsl
inc
and
mov
cs
fbstp
dec
or
cmp
mov
icebp
rclb
iret
aam
imul
mov
xor
jnp
push
mov
jle
push
xor
out
dec
pop
push
int3
repnz
pop
mov
cmp
jb
in
mov
adc
cltd
inc
test
jg
in
into
outsb
insl
sahf
adc
popf
adc
mov
pop
lods
ds
sti
cmpsl
pop
lcall
xchg
nop
orb
arpl
or
jmp
mov
jne
cmp
add
dec
mov
cs
add
insl
jecxz
mov
mov
xor
ljmp
pop
dec
pop
imul
lock
jnp
mov
jo
fcompl
cmpsb
add
inc
and
xchg
sbb
cmpsl
fucomip
bound
out
les
gs
push
inc
addr16
out
lret
aaa
pop
lahf
scas
int3
lret
cwtl
test
sahf
pop
sbb
pop
loope
sti
out
loope
cmpsb
stos
div
cmpl
jns
pusha
test
out
outsb
fstpt
inc
mov
adc
outsl
pop
mov
dec
or
push
test
lret
imul
mov
add
xchg
outsb
daa
test
outsb
inc
test
xchg
dec
xor
mov
xchg
out
pop
jnp
and
orb
scas
lock
out
push
mov
gs
leave
cmp
loope
repz
cwtl
mov
or
popa
xchg
push
add
push
fidivrs
sub
fnstsw
shr
sbb
push
inc
ds
mov
cmc
ja
mov
into
rcrb
xchg
ds
lahf
iret
int
sub
test
jp
out
popa
push
lcall
push
cmp
das
lret
push
cltd
dec
mov
or
mov
lret
or
scas
popf
std
sub
hlt
test
test
cwtl
cmp
mov
aaa
sub
fcomi
sub
xchg
fwait
xchg
aam
add
lahf
xor
pop
std
lahf
adc
scas
movsb
stos
pushf
mov
and
fstpt
dec
shlb
jnp
jns
pop
sarb
pop
jecxz
inc
lods
pop
aam
in
or
outsl
sbb
lahf
icebp
push
jecxz
cmp
aas
in
fildll
movsb
push
outsl
pop
mov
jg
and
mov
jns
jbe
push
repnz
loopne
dec
pop
mov
clc
shl
dec
xchg
movsb
outsl
jl
mov
mov
pop
fistl
movsl
int3
dec
test
dec
jmp
aam
and
push
xchg
adc
inc
sub
jb
xchg
push
iret
in
cmp
movsb
sti
sub
iret
xchg
cli
outsl
mov
dec
js
mull
jne
in
and
fcmovbe
sub
frstors
or
ret
hlt
mov
jp
mov
outsb
int3
ja
xchg
mov
and
inc
xchg
sbbl
add
inc
andb
lret
aad
bound
mov
cmp
inc
mov
xor
lods
shlb
mov
mov
imul
lods
sbb
hlt
stos
jb
hlt
fadd
shr
xchg
das
loopne
lods
call
test
cmp
inc
scas
or
xchg
xor
lock
inc
fimuls
cmp
call
loopne
in
inc
mov
cmp
outsb
adc
push
and
out
xchg
push
stos
inc
loopne
call
lds
mov
pop
insb
sub
fadd
repnz
nop
adc
leave
adc
nop
sub
push
mov
sub
add
rorb
popf
push
cld
pop
mov
cmp
in
push
shrw
push
xchg
es
fsts
enter
cmp
popf
pop
cld
mov
out
insl
add
inc
sub
mov
dec
and
aaa
xlat
adc
pusha
in
test
cwtl
or
insb
push
push
sub
mov
shll
jp
aas
jle
mov
fwait
lret
shll
call
mov
filds
out
push
aas
dec
lods
out
jg
das
es
in
push
jo
int3
pop
sub
into
pop
add
dec
sbb
sbb
sbb
fldt
ret
sbb
out
push
jl
add
out
idivl
push
aad
shl
dec
aad
enter
leave
stc
mov
or
push
sarb
adc
sbb
jle
cmp
mov
inc
or
inc
gs
adc
int
shlb
mov
pop
and
lock
inc
xchg
push
pusha
xchg
fwait
repz
in
repnz
pop
mov
jnp
outsl
pop
cmpsb
or
mov
ljmp
jnp
mov
xor
mov
sub
testl
jecxz
xor
stc
fisttpl
dec
pop
pop
adc
and
mov
mov
in
fwait
pop
lahf
inc
xchg
cmp
in
jo
pop
add
bound
mov
lcall
cmp
mov
xor
ja
cmp
call
sbb
mov
mov
int
int3
cld
rcrl
pop
mov
add
hlt
dec
out
xor
lret
sub
mov
das
push
pusha
lcall
jl
jp
mov
add
mov
cld
out
push
nop
jb
out
jne
lret
jecxz
cs
jno
mov
mul
mul
push
bnd
mov
lahf
pop
mov
adc
shlb
xor
mov
ss
imul
les
mov
in
insl
adc
scas
mov
imul
mov
push
mov
popa
mov
inc
and
out
dec
flds
mov
jae
xor
jl
xor
out
aas
inc
mov
lahf
inc
cltd
shl
inc
popf
pop
push
cmp
add
lret
pop
scas
xor
inc
and
jp
inc
push
add
push
sub
xor
aas
mov
mov
test
lret
stc
dec
in
mov
movsb
subb
insb
imul
addb
jno
shlb
cltd
daa
sub
pop
mov
jp
sbb
test
test
cmp
repnz
xchg
push
lock
lret
add
add
ljmp
lcall
add
insl
sbb
imul
mov
sbb
lret
cmpsb
sub
push
lds
nop
fs
fcoms
popa
imul
mov
int
push
xchg
mov
jns
pop
jg
mov
push
fdivr
orl
xchg
jnp
push
fisubl
movsl
xchg
mov
fiadds
mov
sub
mov
sub
fisttpll
sbb
loopne
bound
xchg
dec
pop
mov
cli
pop
sub
sub
push
sub
xchg
sbb
fsubrp
repz
jne
imul
xor
mov
cmp
fnstenv
lods
insl
adcb
sub
mov
lret
sub
sub
xchg
in
cmpsb
ja
adc
lock
adc
pop
hlt
sti
push
adc
and
push
popa
dec
addr16
nop
add
shrb
int
inc
dec
xchg
jge
pusha
rcl
lcall
dec
push
sbb
divb
loopne
mov
xchg
add
lret
mov
clc
xchg
dec
xchg
sbb
inc
pop
into
int3
mov
into
and
icebp
aaa
dec
add
testb
sub
inc
lahf
shl
mov
rolb
add
jb
push
add
pop
pop
scas
and
mov
pop
aad
ret
xchg
stc
nop
fyl2x
add
loopne
lcall
mov
pop
and
pop
ret
dec
mov
fs
fs
ljmp
test
lcall
push
leave
repz
iret
mov
ja
pop
adc
mov
jno
inc
push
xchg
subb
nop
icebp
add
popf
cmp
dec
arpl
int3
add
and
push
push
jns
shlb
mov
jecxz
inc
jmp
mov
out
cs
mov
fs
cltd
jns
mov
mov
inc
mov
xchg
or
sbb
xchg
clc
add
outsl
cmp
add
mov
cmc
in
repz
jmp
fwait
mov
xor
or
addr16
sbb
sbb
adc
cmp
push
jns
jle
xor
pop
pop
stos
popf
fstl
popf
aad
dec
out
xor
mov
in
loope
push
lock
jnp
out
lcall
mov
pop
ss
jg
push
cs
movsl
movsl
pop
cmp
cmp
push
aas
std
inc
add
repnz
jp
daa
and
mov
shll
clc
dec
cmp
negl
outsl
dec
aam
mov
mov
jno
scas
jne
cmpsl
scas
jmp
mov
and
dec
cmpsb
mov
and
clc
in
mov
pop
rcr
int3
inc
mov
cltd
shlb
mov
daa
adc
sbb
and
in
mov
lds
dec
insb
lret
mov
jp
subb
sbb
push
pop
or
mov
adc
add
sub
fildll
loopne
fcoms
enter
adc
enter
push
add
outsl
leave
mov
fsubs
movsb
in
cmp
fldcw
pop
aad
adc
xor
loope
out
shr
mov
test
pop
lds
or
insl
test
and
adc
mov
jecxz
push
dec
icebp
push
jge
jne
incl
inc
stos
cli
outsb
nop
jmp
mov
sub
out
fstpt
and
jmp
pop
or
jne
mov
in
stos
leave
sbb
and
mov
cmc
mov
mov
mov
sub
add
test
aad
mov
lret
sub
int3
ljmp
js
adc
cmp
adc
andb
les
sbb
test
fisttps
cli
mov
sbb
jo
jg
mov
adc
inc
cmpps
or
pop
or
mov
push
pusha
sbb
push
and
jb
enter
sbb
ljmp
mov
pop
dec
add
jo
sahf
data16
add
add
fimull
leave
add
rorb
sti
nop
xor
cmpsl
xchg
and
lret
movsl
sbb
adc
fisttps
mov
adc
pop
flds
lcall
push
or
or
and
rclb
lods
push
test
mov
popa
jecxz
mov
cmp
cwtl
mov
loope
pop
loopne
loope
lea
and
lods
shll
xchg
stos
xchg
es
jmp
cmp
push
call
jmp
adc
div
inc
les
test
push
xor
test
jnp
ljmp
inc
push
mov
add
insl
push
pushf
nop
dec
and
jae
hlt
subb
mov
dec
sub
lret
pusha
in
mov
lahf
fwait
es
adc
jne
jne
sahf
add
mov
fs
iret
mov
out
data16
pushf
imul
pop
lret
fmull
sbb
sbb
mov
fsubrs
cmp
jmp
and
mov
lock
insb
mov
pop
outsb
dec
test
push
dec
sbb
push
mov
rep
pop
adc
mov
pop
test
sub
pushf
pop
enter
ja
insb
mov
outsb
int
jl
lret
mov
push
jmp
xchg
call
push
shll
jl
les
es
adc
jmp
scas
mov
ja
in
les
setg
push
inc
cs
mov
or
inc
sbb
mov
loopne
pop
push
jb
jg
out
jbe
cmp
ds
int3
sbb
inc
pushl
out
insl
je
mov
stc
pusha
mov
fiaddl
pushf
or
addr16
filds
rclb
ja
mov
jecxz
fisttpll
rorb
push
jg
clc
fstpt
dec
or
jg
jl
xor
or
dec
imul
adc
shll
sbb
lcall
mov
jmp
int3
mov
jbe
push
ds
add
pop
scas
sti
lods
mov
test
bound
dec
clc
push
push
mov
sahf
mov
mov
add
mov
sub
or
xchg
cld
and
jp
xchg
cmp
inc
adc
adc
das
adc
cld
dec
popa
mov
shll
cwtl
xor
int
mul
leave
mov
xchg
test
dec
and
and
pushf
xor
sub
cmp
or
xchg
out
rcr
outsl
scas
rolb
out
inc
xchg
push
insb
sahf
in
das
in
fdiv
int3
imul
xlat
outsb
mov
bound
mov
nop
int3
mov
and
cmp
adc
cmc
jns
popa
mov
mov
push
or
push
dec
and
andl
lods
outsl
iret
dec
pusha
add
hlt
lret
in
sbbb
mov
pushw
push
add
mov
loop
faddl
xchg
jmp
stos
std
bswap
xlat
push
nop
shl
mov
lods
dec
aam
aas
aad
jo
jno
push
inc
add
rcr
lret
pop
add
lods
or
inc
sbb
push
jnp
int3
cmp
sbb
in
pop
mov
incb
lods
add
mov
rep
adc
addl
pusha
inc
sbb
mov
add
mov
push
js
sub
popf
adc
loop
adc
and
mov
fsubrs
mov
mov
pop
ret
jnp
cmp
sbb
xchg
cmp
das
rorl
push
sub
fimull
sub
mov
test
lods
mov
push
fcomi
sbb
shll
sub
cwtl
lock
and
fsubl
scas
das
int3
cmp
xor
mov
test
jne
xor
fidivl
dec
xchg
pop
adc
mov
sub
test
ret
xchg
xchg
aaa
les
mov
jle
push
add
dec
inc
enter
cld
jb
adc
in
ds
push
fidivl
sub
pop
leave
rclb
cltd
xlat
fcmovnbe
mov
add
js
pop
pop
mov
jecxz
dec
add
xor
test
push
in
mov
push
and
aad
add
mov
lock
mov
sub
jno
out
xor
jle
push
and
iret
push
pop
repnz
fwait
mov
mov
or
mov
loop
pop
xor
sti
loopne
rcr
cltd
shll
inc
loop
pusha
fs
dec
inc
shrb
rolb
jbe
adc
jnp
clc
ret
les
out
cmp
mov
jb
pop
pushf
xor
mov
inc
add
sub
lds
cmp
inc
lcall
mov
cmpsb
int3
mov
inc
pop
xor
lret
lahf
out
sub
shlb
rcr
mov
das
scas
fchs
pmaxsw
dec
fcmovne
cmp
mov
dec
arpl
xlat
icebp
std
negb
jle
jae
push
out
loope
jno
cmp
cmp
clc
popa
fisttpl
xchg
or
int
or
cmp
cmp
sub
in
adc
popf
leave
sub
mov
pushf
sub
and
or
and
adc
mov
jl
dec
popa
push
mov
jnp
cmp
nop
in
xchg
push
push
cs
pop
add
dec
mov
lods
insl
cmp
outsb
mov
push
xchg
ljmp
jl
push
movsl
push
xlat
int3
push
rolb
ljmp
into
mov
mov
in
outsb
inc
retw
mov
adc
push
std
adc
fcomps
in
rcll
insl
shrb
cmpsl
push
call
dec
push
xor
pop
fldl
sahf
push
ret
cli
add
add
lret
ds
mov
xor
inc
dec
notl
cmpsl
lock
push
daa
xchg
push
pop
push
stos
loop
cmpsl
not
enter
pop
adc
imul
sbb
out
sbb
mov
les
mov
jno
in
fsubl
je
popa
addr16
pop
stc
xor
stos
clc
adc
inc
ret
adc
lea
sub
add
adc
mov
aas
pop
inc
and
popa
mov
fs
mov
xadd
mov
fs
in
adc
mov
pusha
xor
incl
loop
or
mov
sub
sbb
sub
insl
addr16
push
mov
loopne
addr16
stos
push
lahf
xchg
jl
out
out
in
sub
insl
mov
fnstenv
inc
xchg
pop
sub
push
clc
stc
mov
xchg
add
int3
int
pop
int
xchg
xor
pop
test
shr
cli
shll
pop
add
dec
and
rcr
loope
lret
push
loop
mov
fisttpll
pop
jg
mov
jg
aam
into
std
dec
mov
dec
add
add
repz
sub
sbb
stos
popf
sub
jne
fiaddl
test
out
jno
pop
shrb
xor
pop
mov
add
jmp
adc
rcr
cmp
movsb
into
popa
iret
subl
arpl
fstl
dec
shll
test
fiaddl
xor
jo
imul
mov
add
jne
into
test
sbb
clc
test
cwtl
movsb
mov
sub
clc
stos
or
inc
cmp
insl
lcall
imul
enter
nop
dec
and
add
add
decb
mov
hlt
adc
iret
cmpl
shr
test
jle
xchg
testb
pop
movsl
lret
cld
sbb
or
fld
sub
ret
inc
out
xchg
add
jge
fsubl
mov
jle
imul
pop
jns
jno
movhps
fs
pop
stos
rcll
mov
push
pushf
lret
cmp
xor
mov
pop
pop
in
enter
fmul
sbb
and
repnz
cltd
mull
mov
mov
fidivl
and
ja
inc
nop
or
pop
js
stos
inc
mov
out
bound
mov
ss
dec
outsl
leave
add
inc
in
push
sarl
add
xor
cmc
pop
incl
imul
jp
rcrb
jl
ja
mov
xlat
ja
cmpsb
xchg
inc
cmc
sahf
mov
cli
sub
and
xor
pop
popa
pop
insb
dec
push
pop
xlat
shrb
mov
mov
rcll
leave
jecxz
inc
jo
pop
pop
leave
nop
sbb
lods
pop
mov
fnstenv
notl
mov
cmp
push
insl
sahf
mov
jns
cmp
fucomp
jno
imull
into
push
push
aad
add
add
sbb
leave
and
mov
or
loop
lea
popa
fwait
stc
dec
lea
flds
jo
mov
add
mov
inc
mov
xchg
push
arpl
inc
cmpsl
cmpb
jbe
fdivrl
xchg
ljmp
lods
lods
test
aad
je
fisubl
imul
inc
popa
rcrl
push
cmp
icebp
aaa
mov
push
insl
loope
adc
inc
insb
inc
into
movsl
leave
jns
or
orb
pop
lds
sub
push
sub
fwait
or
mov
cwtl
lahf
jo
adc
pusha
cmp
push
xor
ret
mov
lods
int
icebp
fwait
out
movsl
lea
sbb
movsb
jae
xlat
sub
push
dec
push
mov
mov
or
sub
sbb
popa
pusha
lods
pushf
lods
fbld
inc
add
inc
push
pop
and
sbb
sti
ljmp
fwait
loope
ljmp
mov
clc
repnz
xor
push
mov
adc
and
dec
out
jl
push
out
xchg
lea
jnp
out
lret
mov
clc
pop
cmp
push
hlt
aaa
inc
pop
cli
dec
mov
sub
fs
xor
cmp
or
ret
cmp
and
dec
rorb
ljmp
xchg
bound
cmpsl
aad
cld
insb
int3
ljmp
push
xchg
daa
inc
ljmp
scas
sub
repnz
sbb
dec
lock
gs
sbb
jb
orb
push
fwait
cli
mov
or
push
xchg
mov
or
mov
and
rcrl
pop
adc
lahf
jg
add
shlb
jmp
lods
mov
aas
add
adc
push
dec
sahf
outsl
or
iret
mov
test
movsl
mov
pop
pop
mov
adc
movsl
or
lods
jne
dec
out
xchg
mov
stos
cmpsb
scas
sbb
jecxz
cmp
sbb
push
insl
rorb
xchg
popw
fsub
jge
sbb
dec
push
testl
push
dec
and
lds
fadd
xchg
mov
stc
pop
jp
lahf
push
mov
mov
add
adc
jbe
push
dec
aas
nop
jle
leave
jp
lret
sbb
arpl
cwtl
push
out
dec
push
pop
jmp
xor
cltd
pop
xor
lea
stc
xchg
pop
mov
jb
gs
lds
test
jle
dec
push
mov
add
mov
pop
or
sbb
rcrl
ds
adc
popl
ljmp
cmpsb
pop
xchg
or
mov
test
inc
call
jle
jle
sub
inc
stc
stos
xchg
or
push
sti
cltd
and
sub
mov
cli
les
adc
ss
xor
es
mov
aad
inc
xor
and
imul
hlt
xchg
gs
js
dec
test
add
inc
inc
dec
add
mov
push
lea
call
jns
test
fstpt
in
jmp
mov
jecxz
adc
sub
int3
sub
cs
enter
rorl
femms
pop
push
pop
jp
fsts
mov
xor
insl
pop
rcrl
lahf
pop
mov
icebp
ret
lret
outsb
dec
jecxz
adcb
cmpsb
ret
sbb
gs
adc
sbb
out
iret
lret
and
cmpsb
mov
popf
jns
ja
fcompl
inc
xchg
push
inc
pop
aad
mov
inc
mov
inc
adcb
lahf
jmp
imul
mov
xchg
jge
popf
xchg
sbb
inc
popf
xchg
adc
nop
lret
cmc
xchg
rclb
or
cs
sub
pop
fidivs
push
pop
popa
push
mov
pusha
mov
push
lods
js
and
adc
xchg
add
push
jns
xchg
ret
inc
insb
fmuls
pusha
in
dec
add
icebp
rcll
mov
daa
leave
rorl
mov
leave
fldenv
inc
loop
jecxz
je
ret
ret
jo
mov
adc
push
jle
shrb
pop
lea
push
jle
daa
lock
jge
push
lret
jns
ret
fldl
pop
cmpl
std
pop
stos
sbb
ja
xchg
fstpt
sub
xor
xor
xchg
orl
nop
pushf
lods
addl
mov
mov
sbb
sbb
rcl
rcrb
sub
ds
fwait
and
in
adc
sbb
add
outsb
cmp
xorb
mov
mov
lods
js
mov
sbb
push
movsb
arpl
sbb
loope
cmp
jns
jp
mov
es
xchg
fisubrl
pop
xchg
out
lret
sbb
ficompl
lods
int3
cmp
test
pop
hlt
testl
out
add
hlt
aam
xchg
fld
ret
sahf
cmp
ret
out
pop
test
or
scas
jb
jmp
cmp
or
inc
movsb
mov
insb
js
add
add
sub
and
shlb
jnp
lret
call
sub
cli
push
shlb
popa
jno
xor
lock
jmp
mov
hlt
fnsave
mov
test
jg
rorl
jmp
test
repz
push
cld
or
sub
add
mov
jmp
mov
mov
mov
pusha
cmp
andl
inc
jne
lcall
adc
add
xor
adc
inc
cmpsb
xchg
and
adc
loopne,pn
push
idivb
dec
ret
out
fcoms
mov
or
les
sub
nop
pop
js
lds
jmp
sub
mov
push
in
mov
add
adc
and
lods
add
sarl
cmp
or
int
leave
adc
pop
js
int
enter
jnp
or
inc
xchg
xor
aad
js
test
aad
js
and
insl
cwtl
mov
mov
pop
daa
push
pop
ret
push
lods
cmc
sar
cli
fs
and
pop
xor
pop
cmpsl
or
inc
xor
bound
rcrl
jnp
xor
pop
sub
dec
jbe
out
mov
xchg
xor
jnp
aam
adc
jl
test
bound
shrl
and
mov
cmc
sub
sub
jge
push
lods
add
push
in
scas
fs
mov
je
lret
jo
test
test
lcall
adc
fildll
lds
push
mov
jne
loop
cmpsl
sbbb
lods
mov
sbb
push
subb
push
mov
shll
sub
mov
cs
xchg
inc
add
xor
repz
cld
pop
pop
push
inc
mov
sub
dec
rclb
lods
push
aaa
pusha
ret
jb
lcall
loopne
ljmp
lahf
stos
std
lods
inc
fwait
jo
pop
pop
int
mov
aaa
cmp
pop
mov
pop
push
fimuls
sub
mov
add
gs
lcall
and
adc
pop
outsl
orb
jnp
adc
icebp
xchg
cmp
rol
inc
arpl
and
pushf
jbe
mov
std
inc
adc
out
lds
push
mov
dec
ficoml
xor
mov
lret
ss
popa
add
in
daa
adcb
jecxz
jmp
pop
cmp
subb
idivl
jg
sub
mov
lods
lea
xor
dec
into
insb
aas
xchg
pop
or
movsl
outsb
stc
arpl
xchg
pushf
sarb
sti
andl
or
outsb
pusha
xor
xchg
into
movsl
mov
cmc
jae
cs
adc
dec
push
sbb
jns
out
and
sub
mov
daa
mov
mov
ljmp
sub
push
je
std
add
cld
lods
xchg
push
jge
popa
push
aas
imul
addr16
xchg
rol
in
in
iret
mov
mov
ret
fwait
dec
lock
clc
cmpsb
mov
and
cmc
jbe
sbb
cmpsb
cltd
mov
sbb
push
out
or
jbe
es
dec
out
sbb
outsl
sbb
mov
loope
mov
jmp
push
ret
or
scas
dec
lea
outsl
dec
pop
push
lahf
inc
into
jle
jno
loope
mov
out
les
xor
sti
insb
add
movsl
cmp
inc
icebp
mov
jne
xchg
addr16
cltd
xchg
jo
sub
mov
cmpsb
aam
dec
xchg
push
or
in
test
test
pop
sbb
push
adc
sar
push
mov
pop
inc
mov
pop
test
ficompl
bound
incb
inc
outsl
push
inc
pop
dec
mov
arpl
ljmp
inc
popa
lea
dec
scas
push
xchg
adc
sbb
adc
xor
insl
inc
cltd
xchg
fldl
cmp
sub
loopne
dec
ja
cs
dec
xchg
pop
jb
pop
ljmp
aad
lods
ret
mov
daa
cmp
sbb
test
sbb
fucomp
ljmp
cmp
lds
iret
jo
xlat
insb
inc
and
cmp
push
fsubl
sub
fisttpll
subl
add
inc
shl
outsl
adc
aam
js
mov
std
dec
push
lock
jge
leave
mov
hlt
loopne
pop
dec
dec
popa
push
sbb
stos
ds
mov
mov
dec
sub
es
or
jecxz
push
cmp
mov
shll
pop
jg
inc
hlt
inc
pop
dec
push
or
movsl
inc
hlt
in
sbb
loop
or
mov
jle
cmp
adc
jecxz
popf
les
and
pop
gs
jg
outsl
dec
jge
sub
sbb
mov
cmpsb
jnp
xchg
push
cld
shlb
xchg
dec
mov
xchg
mov
adcl
ror
sbb
pusha
add
adc
aad
sub
and
mov
ljmp
es
lock
jnp
cmpl
mov
xchg
mov
aas
test
mov
mov
and
les
add
fdivs
fnstsw
add
dec
stos
inc
mov
inc
dec
mov
pop
into
jne
out
stos
or
push
push
adc
mov
inc
push
push
adc
sbb
out
movsl
es
imul
pop
outsb
jp
test
xchg
scas
out
sbb
fwait
mov
daa
add
ret
jb
push
mov
mov
jmp
cmpsl
cmpsb
adc
lahf
sub
ljmp
dec
test
inc
sub
jns
or
inc
pop
inc
and
scas
mov
leave
mov
test
sbb
pop
imull
outsl
mov
mov
xchg
sbb
sub
add
aaa
arpl
xchg
add
psubusb
push
das
rol
sahf
das
les
bound
pushf
sub
mov
cmc
jg
sbb
pushf
add
movsb
pmulhuw
div
xlat
insl
movsl
outsb
sbb
in
and
sub
int3
das
cmc
clc
add
popf
xchg
ds
jne
adc
xchg
outsl
rorl
pop
mov
int3
add
jl
inc
mov
gs
sbb
mov
xor
jmp
adc
sub
push
and
adc
add
and
pop
jae
lods
push
add
cmpsl
aad
into
enter
aad
and
xor
jge
std
mov
bound
mov
jmp
sub
dec
mov
mov
inc
add
mov
push
jg
dec
out
push
adc
xchg
stos
daa
inc
mov
cs
mov
rcrl
out
push
fwait
xor
leave
hlt
pop
fmull
test
mov
mov
fldenv
jno
inc
pop
cmpsb
std
inc
iret
int
push
mov
push
jnp
incb
fwait
sub
sub
pusha
js
push
xor
dec
outsl
xchg
inc
rcll
mov
mov
sub
js
test
mov
insb
lods
add
mov
mov
movsl
xchg
mov
push
cmpsb
xchg
sti
xchg
sub
inc
add
ret
test
dec
mov
icebp
cmp
push
mov
ds
jmp
pop
dec
cmc
imul
stc
push
andb
in
mov
sbb
rolb
mov
mov
enter
sub
dec
ret
enter
pop
fucomi
adc
mov
inc
inc
push
ss
data16
mov
and
enter
pop
out
jne
inc
xor
add
loope
js
pop
jo,pt
scas
lcall
mov
out
mov
xchg
jno
stos
into
sub
hlt
jmp
or
adc
xchg
cld
sbbl
mov
adc
xchg
xchg
rcl
adc
xor
lret
mov
in
sbb
sbb
jnp
scas
dec
xor
arpl
mov
icebp
fisubrl
lret
cld
or
or
sbb
cmp
shlb
stos
in
pop
cmp
insb
lahf
ja
addb
je
neg
stos
jo
shrl
cltd
cmpsl
movsl
jae
movsl
mov
xor
adc
loope
icebp
out
dec
push
mov
pop
and
and
xor
filds
sub
in
cwtl
lcall
es
stc
add
sbb
not
mov
push
loop
xor
lds
sub
mov
cltd
or
daa
repnz
aad
push
mov
cs
push
ss
jg
inc
sbb
shll
mov
jmp
cmpsb
dec
cmp
lods
jae,pn
and
lcall
cmp
imul
mov
adc
jge
test
in
mov
xchg
cmpsb
ja,pt
aam
and
rorl
lods
dec
outsl
cmp
ficoml
mov
dec
repnz
xor
mov
mov
mov
add
jl
mov
mov
mov
stc
inc
xlat
mov
ror
fisubrl
cld
sub
adc
divl
push
adc
xor
or
push
lahf
jmp
pop
out
sub
mov
cmp
sbb
push
cmp
push
ljmp
idivl
sub
sub
dec
mov
xchg
pop
aaa
jmp
shll
fwait
sahf
fadds
or
sarl
les
mov
test
pop
test
in
icebp
out
jp
dec
cmp
lcall
add
out
sbb
pop
fs
push
dec
int
ret
cli
jns
dec
fisubrl
push
inc
pop
cli
sbb
push
in
scas
jmp
sub
xor
mov
dec
pop
push
les
adc
mov
xor
pop
mov
cmp
add
adc
dec
in
pop
or
push
pop
repz
pop
inc
out
lret
sbb
pop
push
push
std
xchg
fnstcw
sub
in
es
inc
sub
or
aas
and
inc
xchg
xlat
fisubrl
xchg
mov
mov
popf
fdivr
xchg
pop
test
das
fisubrl
loopne
pop
push
in
push
pop
push
jbe
test
ret
clc
adc
repz
inc
aad
int
iret
pop
or
push
mov
out
int3
lcall
ds
ret
push
in
jecxz
xor
inc
add
pop
les
mov
inc
jae
push
or
jae
inc
out
pop
sub
fs
loopne
rcll
popf
sbb
out
ja
jg
pop
int
adc
push
popa
cmpsl
xor
loopne
testl
adc
imul
adc
lahf
dec
shrl
push
and
push
aad
pop
add
popf
lret
decb
loope
mov
xchg
mov
xchg
dec
pop
sub
mov
and
push
out
and
and
mov
notl
push
sub
mov
dec
or
add
shll
mov
xor
in
xlat
or
roll
incl
aaa
ret
xor
int
xor
xor
cmp
jb
sub
push
lock
xor
in
dec
dec
and
fdiv
push
incl
dec
cmp
xor
push
fimull
adc
or
arpl
cld
push
inc
int3
pusha
jl
test
dec
mov
lahf
in
enter
ss
fisttpl
aaa
sbb
xchg
fimull
lahf
xor
stc
aas
dec
in
sbb
inc
dec
shll
or
test
xlat
ja
out
jge
fwait
hlt
shlb
mov
xorl
adc
icebp
add
cmp
mov
pop
xor
or
outsl
in
popa
ficoml
int3
test
cmc
sti
xor
lcall
fstl
mov
jno
int
push
cli
frstor
or
inc
hlt
lcall
xchg
test
cltd
xor
jp
sub
add
mov
add
jnp
xchg
xchg
mov
xchg
inc
roll
add
and
inc
test
and
inc
xchg
pushf
mov
sti
push
pop
and
sbb
pop
pop
mov
mov
xor
xor
cs
sbb
arpl
pmulhw
jg
xor
dec
movsb
vpsrlw
or
inc
icebp
pop
jge
call
jb
scas
inc
ficompl
in
sbb
test
mov
mov
inc
mov
pcmpgtw
mov
cmp
jge
out
cwtl
das
cmc
loopne
fcmovnb
lea
lods
jns
dec
cli
mov
mov
mov
sub
shrb
jae
imul
outsb
je
das
jb
movl
mov
or
adc
call
pop
add
not
out
cmpsl
loop,pt
and
loop
push
adc
xor
dec
mov
adc
cmp
mov
fsubl
xchg
in
sub
dec
sbb
sarl
xchg
repz
stos
jp
sti
or
jmp
movsl
jne
mov
push
sub
loop
push
hlt
daa
and
cmpsl
out
inc
pushf
xor
cmp
sub
fstps
shlb
jmp
jle
jl
inc
ficomps
sub
sbb
jnp
rcrl
inc
xchg
xlat
sbb
push
mov
outsb
cmp
jno
push
aam
push
xorb
icebp
jnp
bound
imul
xor
fiaddl
addl
in
or
mov
or
out
push
inc
iret
mov
inc
or
nop
dec
dec
lock
push
xchg
push
cmc
push
sti
add
fstl
aas
or
pop
repz
mov
in
inc
mov
push
pop
push
sub
in
xchg
or
sbb
mov
jne
jns
push
in
fwait
cmp
and
push
adc
xchg
jge,pt
gs
fbstp
and
and
insl
xchg
xcrypt-cbc
cmpsl
push
mov
pop
les
imul
push
ror
mov
mov
stos
dec
jle
adc
sbb
les
mov
mov
pop
clc
sub
mov
cs
and
iret
or
js
enter
pushf
fsubrl
imul
repnz
cmp
jae
shll
aam
mov
lods
stos
or
jge
fwait
pop
mov
pop
enter
pop
mov
test
adc
stc
scas
adc
lea
lcall
ret
pop
cli
stos
icebp
lods
pop
cltd
out
push
cmc
mov
iret
loopne
xor
mov
loop
and
stos
cmp
xchg
imul
call
or
sbb
imul
ret
sub
lods
xor
xchg
ds
dec
sub
iret
xor
jge
cmp
cli
mov
stos
cld
gs
or
pop
outsb
loop
js
pop
xor
inc
dec
lods
xchg
rorb
mov
cmp
mov
dec
mov
adc
xchg
xor
repz
and
insb
push
pop
inc
push
stc
loopne
pop
out
mov
pop
dec
lods
push
xchg
dec
add
insb
lock
roll
fwait
xchg
vpsubq
sub
and
testb
mov
push
or
outsl
and
mov
mov
or
ds
aas
lahf
pop
sub
loop
call
loope
inc
push
test
xor
mov
and
jae
inc
jno
mov
or
lods
push
adc
cmp
xchg
cwtl
jecxz
or
adc
loopne
and
out
mov
push
add
notb
aad
cli
mov
jo
xor
repz
or
loopne
shl
or
clc
pusha
outsl
xor
push
movsb
jbe
and
lock
negb
push
inc
jb
call
out
sbb
sbb
sub
mov
xor
mov
sbb
loopne
or
pop
pop
ljmp
ror
fxch
mov
in
adc
or
pop
mov
daa
rcrl
data16
jmp
movsb
imul
or
ljmp
test
cmpsb
insb
arpl
aam
int
push
popa
insb
clc
ret
mov
push
bound
pop
enter
jl
add
insb
adc
lcall
push
mov
xlat
movsl
push
in
pusha
pop
jg
jl
adc
popf
movsb
push
les
scas
xchg
jno
xchg
xor
cmp
imul
nop
iret
inc
lds
jge
cmp
dec
xor
sti
das
insb
loop
xchg
mov
push
cmpsl
sub
push
push
dec
dec
movsb
call
xor
lret
pop
dec
js
movsl
faddl
xchg
pop
xchg
in
xor
pop
and
mov
add
mov
repnz
push
mov
lods
incb
dec
or
je
mov
pop
dec
mov
lods
loop
push
popa
push
mov
jge
push
mov
mov
add
or
push
add
jae
ret
xor
filds
adc
and
fdivrp
dec
std
outsb
repnz
add
sub
xor
fsubs
xorb
dec
mov
dec
subl
pusha
dec
stos
dec
adc
int3
aad
iret
xchg
insl
lods
push
in
loop
push
cmpsl
sti
adc
mov
push
fisttpll
and
clc
fcoms
inc
rclb
and
sub
add
loop
xor
mov
mov
mov
sbb
push
xchg
scas
out
fildl
mov
out
out
cmc
cwtl
cmp
scas
sub
mov
xor
mov
and
add
repnz
and
pushf
sarl
mov
pop
add
push
gs
bound
pop
fs
jae
out
lock
popa
jg
cmpsb
xchg
sub
and
shll
mov
add
out
push
mov
sbbl
mov
mov
push
xchg
sbb
lock
clc
scas
jmp
stc
in
cld
cmp
fistps
mov
inc
mov
addb
imul
xor
in
xor
rolb
pop
out
leave
ljmp
pop
and
test
test
addr16
dec
stos
lock
dec
sub
pop
mov
and
sub
xor
pop
xorb
scas
leave
pop
mov
or
lods
jne
cmp
leave
sub
gs
push
xor
mov
jns,pn
mov
xlat
ret
pop
mov
dec
add
lret
and
dec
dec
mov
idiv
cltd
fisubs
push
shrb
cmpsl
mov
sbb
jl
jecxz
idivb
cmp
pushf
pop
leave
xchg
loop
scas
fwait
ljmp
and
test
cmp
lods
dec
add
bound
push
push
gs
shl
pop
shl
scas
pop
dec
dec
rcll
sub
sbb
out
add
inc
push
add
cmp
lcall
stos
pop
dec
movl
push
movsb
push
mov
lea
fisubs
mov
inc
push
mov
loop
and
insb
or
rolb
incl
cwtl
out
mov
mov
bound
xor
cmc
or
cmp
jns
or
movsb
inc
mov
add
fmull
and
pop
xor
pop
lcall
dec
xchg
jns
push
sub
outsb
adc
mov
inc
lret
out
sub
cs
mov
out
cmp
fwait
mov
rcrl
dec
dec
xlat
xlat
push
pop
lock
out
into
pusha
stos
xchg
loopne
push
mov
jg
daa
jnp
xor
shll
mov
xchg
xchg
cs
adc
ja
xchg
or
pop
adc
cmp
fisubl
fistpl
leave
outsl
insl
fmul
add
movsl
sub
xchg
pop
cmp
leave
cltd
fnstenv
add
popf
sbb
mov
inc
les
or
jle
push
push
dec
ljmp
sahf
repnz
xor
mov
push
xchg
inc
pop
inc
loop
xchg
pop
in
dec
das
mov
clc
sub
xor
rcll
cs
jecxz
rcrl
cs
sbb
lock
sbb
test
lahf
orl
nop
adc
sub
inc
mov
fnstcw
call
xchg
stc
sbb
fwait
in
xchg
popf
repz
jle
jnp
sub
mov
ds
sub
xchg
movsb
rorl
scas
push
pop
xlat
push
imul
xchg
adc
or
orl
iret
jp
sbb
mov
das
aas
inc
popa
cltd
xchg
shrl
ss
push
adc
lods
dec
cli
int
mov
neg
mov
push
xchg
shl
jle
arpl
lds
in
mov
xchg
push
repz
adc
push
adc
mov
sub
sbb
xorb
int3
rcrl
add
inc
sti
sbb
popa
aaa
negl
mov
pop
stc
mov
dec
test
push
mov
xchg
out
call
add
outsl
sbb
insl
fstl
sbb
cltd
mov
push
fcompl
shlb
scas
icebp
cmpsb
jge
adc
js
cld
shll
repnz
outsb
sub
inc
cmp
into
adc
xchg
fisttpll
lods
push
push
test
test
shlb
lock
inc
pop
das
push
add
xorb
xor
movsb
lock
and
mov
mov
or
stos
sarl
outsl
movsl
sti
lcall
inc
jmp
mov
pushf
sbb
out
in
into
lods
sbbl
scas
push
push
scas
test
mov
or
or
mov
sub
mov
inc
jl
hlt
adc
inc
push
xchg
test
testb
sbb
push
cmp
shlb
xor
lret
mov
push
xlat
repz
dec
xor
insb
dec
imul
test
out
pop
mov
xor
lds
cmpsl
aam
cmp
ja
aas
aaa
pop
std
cmp
ss
push
pop
popf
mov
xor
mov
jb
mov
addl
mov
cmp
cli
int
call
imul
ds
or
mov
daa
test
jne
iret
movsl
push
jl
test
add
popa
mov
mov
xlat
and
mov
test
push
push
negl
data16
int3
rcrb
ret
dec
lods
fisubrl
orl
lahf
jg
mov
push
loope
ret
inc
mov
fstpt
xchg
mov
pop
clc
adcl
lods
movsb
push
adc
aad
rcl
dec
daa
stos
pop
aas
pop
mov
into
cld
and
fdivl
inc
int
pop
out
xor
mov
ljmp
test
add
jmp
sbb
pop
inc
sti
mov
in
mov
jl
lods
add
mov
in
ficoml
sub
addr16
test
inc
xchg
cwtl
xlat
adc
mov
pop
rorl
rorb
sub
cmpsl
xchg
stos
scas
mov
dec
mov
in
loope
mov
adc
inc
call
jl
or
adc
add
dec
ret
mov
cwtl
or
cmc
clc
int3
push
sarl
xor
xchg
push
pop
or
int
xor
inc
repnz
pop
inc
and
inc
adc
sub
push
jno
jmp
sub
push
cmp
and
bound
xchg
fldl
imul
inc
stos
aad
ljmp
inc
sbb
sub
dec
dec
out
imul
sbb
dec
imul
std
inc
decb
pop
pop
sbb
cmpsb
or
cmp
cmc
sbb
mov
iret
or
add
inc
inc
popa
mov
jle
aas
popl
sub
push
mov
jae
cwtl
iret
inc
pop
ss
in
sti
cld
lods
jg
aam
outsb
sub
ds
outsb
jmp
sbb
xchg
add
mov
fwait
xor
cli
sbb
clc
ja
mov
adc
mov
sub
in
fcompl
push
ret
and
rolb
into
push
testb
roll
in
or
js
push
xchg
fs
dec
sbb
test
out
push
stos
lds
out
decl
mov
outsb
pusha
aad
lret
jbe
in
cmp
fisubs
pop
cwtl
gs
rcrb
clc
jnp
mov
cmp
pop
jno
push
movsl
and
mov
push
and
js
or
xchg
pop
jae
sahf
insl
pop
lods
sub
jo
into
mov
fsubrs
xchg
out
xor
mov
testl
jl
out
test
jl
ds
or
insb
aad
ss
mov
mov
push
lds
pop
out
fistpll
adc
stc
lret
pop
filds
call
cmpsb
fs
repnz
cmp
scas
fnsave
inc
fstpl
int
push
rorb
out
fsub
shr
and
iret
out
xor
cmp
pop
add
sarb
dec
push
adcl
dec
push
pop
in
std
jl
add
xchg
mov
pushf
adc
cmp
sub
fwait
imul
cmp
repz
jbe
repz
inc
mov
or
lretw
xchg
sub
dec
sar
sub
xor
test
jg
push
cwtl
sti
push
and
dec
pushf
add
test
aad
adc
and
inc
out
call
xor
scas
mov
ds
mov
dec
mov
les
push
push
inc
mov
nop
sub
jp
bound
jecxz
or
xlat
ja
rcll
int
or
out
mov
xor
mov
pop
sub
cmp
aad
and
shrb
mov
xchg
xor
jg
xchg
cmp
sub
and
fiadds
mov
xor
jo
pushl
aam
fisttpl
xchg
mov
out
push
push
mov
adc
push
shlb
mov
pop
lcall
mov
sbb
sbbb
clc
add
inc
mov
pop
mov
pop
or
lods
ss
repnz
sahf
popf
xorb
bound
in
cmpsl
pop
ret
mov
mov
and
jle
lahf
add
lds
lods
inc
iret
xor
pop
std
mov
mov
pop
stos
or
push
adc
push
push
add
out
loopne
sub
negl
inc
add
cli
repnz
add
xchg
fdiv
jb
pop
jb
push
push
mov
and
mov
lds
xorb
mov
adc
outsb
cwtl
or
push
cmp
pusha
pop
dec
loope
les
pop
gs
shlb
add
and
imul
ljmp
in
cmp
mov
fadds
push
jne
sbb
jl
push
cmc
pop
push
jae
sbb
incb
xor
pushf
leave
jmp
dec
jb
imulb
lods
lods
mov
je
sahf
dec
inc
testb
lods
sbb
and
rorb
push
test
xchg
pop
push
mov
and
fsubl
int
jle
pop
mov
mov
fldenv
adc
shlb
int3
ss
cmpsb
lods
addl
ja
and
push
xchg
int3
lcall
xchg
push
fwait
adc
pop
mov
xlat
and
jg
push
jl
adc
jp
dec
out
xchg
push
sbb
aas
mov
jle
ljmp
cs
movsl
xor
add
ljmp
inc
mov
xor
or
inc
adc
out
mov
add
add
jcxz
popf
dec
pop
adc
cld
or
rol
mov
add
out
sbb
gs
fidivrs
dec
xor
and
dec
xor
adc
add
inc
fs
cld
xadd
clc
and
lret
pop
shld
mov
xchg
mov
pop
add
push
out
cmp
adc
sub
lahf
imul
outsb
lcall
in
cmpsb
ffreep
xchg
lods
test
xor
pop
add
lea
sahf
sub
adc
mov
sarl
mov
jae
or
gs
jae
clc
lds
mov
pop
jae
jne
pop
insb
mov
or
movb
add
int
hlt
lret
stos
xchg
fnsave
enter
jmp
cmp
mov
pop
xorb
je
inc
and
mov
fdivs
push
or
jmp
push
outsl
sarb
mov
mov
insl
mov
fcmove
call
lods
mov
jno
rcl
inc
jbe
sub
sub
gs
jg
inc
mov
popa
xchg
pop
push
movsl
dec
push
mov
inc
sbbl
or
inc
popa
lea
pop
nop
cs
in
scas
outsl
lahf
in
dec
jne,pt
sub
or
xlat
cmp
xchg
sub
int
or
xchg
adc
mov
inc
fnstsw
es
mov
push
sbb
xchg
pop
inc
cmp
add
pop
stc
jmp
mov
pop
cmp
add
jecxz
test
jmp
mov
and
std
pop
mov
jg
test
jp
jg
dec
rorl
push
orl
rorb
xchg
dec
cmp
pop
mov
scas
test
mov
fcoml
hlt
in
out
inc
mov
mov
jmp
xor
out
js
inc
into
sub
pop
movsl
xor
mov
arpl
stc
xchg
sti
xchg
mov
aas
lahf
add
xchg
add
sbb
and
leave
dec
bound
mov
aaa
adc
sbb
mov
data16
sbb
jnp
out
pop
test
ds
pop
dec
mov
add
das
inc
inc
outsl
sub
or
pusha
rcrl
mov
stos
pop
jge
rcl
push
and
sub
pop
test
jecxz
insl
and
movl
push
inc
into
std
or
ss
adc
push
and
inc
arpl
fists
loopne
test
mov
or
cmpsb
addr16
xchg
mov
push
sub
pop
mov
pop
mov
movsb
push
jecxz
cmc
cmp
cmpb
inc
mov
xchg
mov
jne
cltd
xor
xchg
dec
push
lods
lret
frstor
and
jg
pop
inc
jno
xchg
scas
iret
cmpsb
cld
imul
neg
jl
and
pop
pusha
addb
lds
adc
jae
imul
je
lret
pop
dec
mov
test
out
sub
popf
sti
xchg
test
mov
js
stos
daa
push
pusha
sar
enter
aaa
and
xor
push
xchg
sbb
fistl
sahf
dec
pop
dec
mov
sub
mov
cld
cmp
dec
xor
sbb
pushf
loop
insl
mov
pop
or
pushf
push
lret
xchg
jb
mov
jno
pop
fisubs
js
push
stos
pop
movsb
xlat
inc
arpl
inc
xchg
jno
cltd
hlt
je
xor
push
movsb
aam
cwtl
fwait
das
negl
ds
cmp
pop
and
arpl
insb
stos
loopne
ja
push
pop
in
movsl
int
mov
and
pop
and
inc
popf
lcall
cvtpi2ps
mov
jmp
xchg
push
add
outsb
sbbb
ds
push
sub
inc
fidivrl
xchg
inc
lea
inc
rcll
or
adc
call
enter
subl
mov
fidivs
jb
das
cmp
mov
icebp
or
cmp
jmp
imul
repnz
and
mov
mov
pop
hlt
xlat
push
ljmp
jne
mov
push
jnp
mov
mov
pusha
jae
insl
jle
and
xchg
arpl
ja
popf
loop
jmp
call
cmp
test
aam
inc
aam
les
mov
loope
xor
or
clc
and
popf
jnp
jno
jnp
gs
test
iret
dec
adcl
xchg
sub
leave
xchg
js
fidivl
sub
sete
inc
lods
inc
mov
stc
sub
imul
cmp
ds
pop
add
nop
lods
in
mov
ret
mov
cmc
xchg
int
sub
adc
adc
jecxz
outsb
ja
jo
jge
sub
mov
xchg
lds
cmpl
xor
add
cwtl
xor
inc
mov
sarb
jbe
push
imul
mov
adc
cmp
int
inc
cmp
inc
push
in
lds
outsl
test
insb
cmpsl
mov
push
test
call
push
mov
mov
cmp
adc
sub
mov
scas
shll
imul
nop
jae
mov
inc
mov
xor
xchg
daa
mov
leave
dec
sub
cmp
mov
and
xchg
das
frstor
add
insl
push
cmp
sbb
aad
scas
mov
pushf
lods
sahf
stos
mov
lods
push
inc
out
cwtl
cmp
std
inc
iret
icebp
cmp
sub
clc
inc
sbb
into
lds
inc
sbb
mov
es
pop
xchg
sbb
mov
incl
pop
push
inc
ja
mov
add
push
pop
or
inc
pop
dec
adc
call
xor
and
std
mov
cmpsl
aad
cld
sbb
fwait
mov
xlat
test
xor
test
inc
inc
mov
ds
sahf
mov
in
js
mov
int
cmp
or
sahf
mov
hlt
push
das
add
and
mov
roll
xchg
data16
rcrb
push
pop
mov
js
shlb
cmp
cmp
or
insb
adc
scas
out
addr16
mov
jge
xchg
xchg
imulb
cmp
pop
mov
mov
or
in
ljmp
mov
jne
loopne
adc
pop
lahf
repnz
xchg
fistpl
nop
push
enter
cmp
pmaddwd
clc
xchg
mov
mov
cmp
xchg
xor
mov
outsb
fwait
sub
pop
fistpll
shl
jnp
in
sar
jg
xchg
lock
ss
inc
pop
sti
cmp
mov
lcall
loopne
stos
hlt
pop
aam
pushw
sbb
orl
dec
test
insl
jb
es
push
leave
or
mov
int3
lods
dec
mov
adc
xchg
es
sub
inc
lds
repnz
xchg
sub
sub
lcall
xor
rorl
pusha
hlt
mov
aad
popf
lahf
fistl
in
push
and
out
adc
lods
push
into
pop
mov
sahf
inc
ret
mov
add
shl
xchg
les
in
movsb
movsb
orl
cmp
push
je
push
pop
bound
inc
sti
int3
lahf
orl
out
clc
popf
mov
out
pop
push
movsb
mov
repz
mov
dec
jl
xor
inc
inc
add
cld
cmp
add
and
das
std
jle
mov
js
test
in
pop
scas
jns
add
movd
or
into
xor
repz
push
pusha
into
sarb
pop
push
push
data16
xchg
jg
imul
jl
loope
sarb
lods
inc
lahf
fwait
ja
push
std
sbb
ljmp
arpl
into
adc
lahf
int
loope
mov
cmc
mov
dec
pop
dec
dec
pop
sbb
mov
test
xlat
std
cwtl
sti
stos
std
mov
mov
cmc
add
mov
sbb
sub
test
fnstsw
pop
mov
pushf
or
popf
pushf
out
sub
mov
stc
in
xchg
inc
sub
mov
outsl
and
mulb
stos
inc
xor
inc
sahf
jp
jecxz
cltd
push
jge
add
das
cwtl
mov
stos
pusha
scas
dec
cmpl
cmp
mov
stos
add
pop
adc
mov
sti
pop
jne
pop
cmp
xor
mov
jmp
dec
or
pop
insl
lods
inc
jmp
call
mov
mov
jle
stos
mov
std
sub
sub
lret
inc
inc
xchg
jmp
adc
scas
insl
orb
scas
mov
in
lcall
js
jg
adc
pop
scas
sub
repz
das
dec
or
fdivrl
cld
push
test
loop
sub
les
movd
cmp
push
roll
xchg
adc
mov
stos
in
and
test
jg
aad
or
xlat
sbb
xor
pusha
jle
mov
notb
sbbb
push
mov
push
ror
icebp
pusha
sahf
aad
roll
ss
inc
jecxz
mov
fimuls
scas
insl
push
jp
jp
lock
mov
and
movsl
sub
sti
add
sbb
add
mov
jmp
dec
into
jnp
fcoms
pop
mov
sti
push
into
pop
dec
cli
arpl
stos
cltd
sub
jbe
cmp
lret
fdivrs
fsub
in
add
cmp
push
dec
mov
icebp
add
aam
mov
dec
arpl
push
or
dec
xchg
iret
lock
lret
inc
or
mov
loop
push
mov
pop
sub
iret
fsubr
xchg
in
mov
add
ret
cwtl
jo
addb
pusha
or
lahf
jp
popf
jno
xchg
jno
cs
mov
lea
enter
call
in
or
or
gs
leave
push
lret
cld
pop
push
dec
push
movsb
ss
test
in
aam
adc
push
fsubrs
popf
inc
inc
sub
sub
aad
mov
inc
push
xor
pop
sbb
aad
inc
push
cmp
or
pop
stos
mov
push
jbe
xchg
and
pop
popf
or
sbb
pop
iret
ljmp
cmp
push
xchg
push
nop
loop
rcrl
dec
mov
mov
add
aas
pushf
xchg
cmp
jb
add
or
and
cli
leave
add
nop
dec
in
push
test
cld
xchg
dec
xchg
pop
jl
add
fisttpl
movq
mov
sbbl
xchg
mov
xor
daa
add
sub
push
pusha
pmaxub
rcll
rol
and
aam
mov
aas
xchg
loop
lret
cwtl
adc
push
mov
sbb
jb,pt
test
and
leave
mov
or
adc
add
aas
dec
jecxz
jg
popf
sbb
outsl
and
fs
cltd
lret
inc
arpl
repnz
cmp
cli
outsl
xor
cwtl
dec
mov
popf
adc
jns
loope
pop
and
mov
sbb
mov
sub
dec
out
call
arpl
sbb
fadds
adc
insl
push
out
and
pop
jne
sbb
mov
push
xchg
or
mov
cmp
dec
lds
mov
in
sbb
mov
arpl
cltd
xor
test
mov
icebp
or
dec
add
ja
je
mov
cmp
jae
loope
mov
popf
jns
insb
in
cmp
inc
adc
loopne
cld
xor
inc
adc
rcll
lods
inc
out
push
shlb
jbe
adc
scas
bound
fildll
mov
inc
pop
mov
adc
pop
and
xchg
test
push
adc
in
sub
fwait
clc
xor
lock
mov
nop
xor
movsl
jmp
andl
gs
push
jmp
arpl
jmp
addr16
sub
es
lcall
loope
test
inc
fstp
repnz
xor
daa
push
mov
push
push
popl
inc
test
sbb
pop
adc
cmp
pop
cmp
cmpsb
mov
lahf
dec
scas
jns
and
punpcklwd
leave
adc
jae
loope
pop
out
xchg
pop
cmp
aam
das
ljmp
sbb
mov
mov
inc
aam
scas
loop
cmpsl
cmpsl
sbb
lret
mov
cmc
movsb
rcrb
and
and
pop
mov
adc
andl
aas
pop
enter
ror
adc
dec
push
enter
ret
mov
push
or
fistpll
xchg
mov
mov
cmp
push
scas
cmc
sar
insl
ret
add
leave
imul
mov
rclb
jne
xchg
mov
cmp
xchg
jb
iret
shl
mov
inc
xor
pop
jne
int3
sub
ds
test
popf
fdiv
xor
sbb
cmp
sub
mov
jp
loopne
fs
cmp
mov
xchg
mov
cmp
scas
in
aaa
int
jo
pavgw
adc
jo
push
pusha
shl
sub
fdivrl
adc
sti
ja
pushf
push
cmp
xchg
arpl
daa
dec
lock
dec
mov
dec
jmp
idivl
xchg
add
outsb
push
lahf
daa
repnz
pop
ljmp
mov
mov
or
adc
scas
push
pop
popf
rcrl
mov
or
imul
mov
int
mov
popa
cmp
dec
loope
ss
mov
cmp
push
out
cld
rolb
ljmp
mov
sbb
cld
icebp
xlat
mov
fisubrl
sub
pop
cmpsl
pop
sub
mov
cmp
cld
cs
jl
incl
ds
lods
push
and
stos
mov
push
outsl
lcall
dec
mov
mov
cmp
push
cmp
loope
sbb
adc
inc
inc
in
bound
push
or
pop
idiv
ljmp
out
adc
push
sub
loope
xchg
jl
adc
ficompl
cli
cmp
push
adc
xor
test
sub
in
xchg
and
enter
cmpsb
xor
xchg
pusha
ret
js
fbstp
sub
xchg
lret
testb
sbb
xchg
mov
mov
push
arpl
xor
aas
and
adc
xor
xor
testb
pop
push
xor
pop
add
daa
adc
inc
emms
mov
and
mov
testl
rcrb
or
fadd
shl
gs
movsb
adc
jb
lret
movsl
imul
rcll
mov
je
or
sbb
sub
push
enter
in
in
add
pop
push
cltd
and
outsl
or
xchg
popf
sbbb
je
bound
xchg
inc
adc
add
mov
aaa
loopne
push
mov
rcrb
mov
xchg
std
into
test
stc
pop
mov
mov
lea
test
ds
jne
mov
shrb
sbb
mov
cld
sahf
cmp
mov
add
out
je
jecxz
repnz
loopne
adc
je
dec
sbb
les
cmp
add
sti
jg
xchg
sub
inc
js
and
or
xlat
lea
data16
repnz
aad
xchg
mov
orl
push
insl
sub
adc
repz
movsw
pop
jae
cmp
lret
stos
xor
push
push
dec
and
ret
leave
sbb
inc
leave
jge
lea
jae
pop
outsb
add
popw
hlt
adc
ret
lods
out
testl
mov
pop
xchg
xchg
xchg
jecxz
sarl
lcall
lahf
cmp
xchg
jl
int3
test
sub
fbstp
lods
js
pop
push
stos
xchg
xchg
mov
pusha
mov
jne
icebp
pop
loope
in
pop
imulb
inc
jmp
xchg
mov
rcl
in
out
popa
push
inc
popf
and
popf
loope
ss
shrb
inc
outsb
aaa
xor
jns
mov
mov
aas
jecxz
iret
hlt
cmc
push
int3
lret
xorl
pop
shll
inc
aad
xor
sbb
fwait
pop
andl
cmp
add
repnz
rorb
test
out
icebp
lods
notb
push
adc
pop
jp
fbld
test
cltd
pop
and
mov
cmp
icebp
fisubrs
jo
ljmp
aad
std
test
jl
mov
inc
cmp
pusha
add
sbb
dec
pushf
push
push
cs
mov
out
xor
push
xchg
mov
pusha
pop
bound
int
mov
mov
mov
pop
add
repnz
je
add
dec
sub
pop
adc
and
clc
xorl
cltd
mov
adc
test
fdivl
jnp
sub
mov
sbb
hlt
push
dec
aam
xchg
jno
push
inc
jb
xchg
mov
into
jb
outsb
mov
jne
jge
xorb
jp
xchg
insb
std
fstps
jns
ljmp
mov
mov
dec
jne
out
out
mov
jno
jp
xchg
lcall
mov
aas
inc
sahf
cwtl
in
dec
xor
sbb
xchg
std
pop
xchg
push
iret
adcb
insl
imul
jae
pop
lods
mov
cmp
movsl
cmpsl
rorb
sub
cmpsb
inc
push
xor
add
inc
sarl
out
in
fistps
clc
fisubrs
mul
jb
and
dec
outsl
lods
in
pop
in
leave
mov
sbb
in
ljmp
adc
add
in
mov
cwtl
ret
cmp
sbb
sub
ljmp
dec
loop
pop
movsl
rolb
cltd
shlb
int3
lods
mov
fdivl
nop
repz
jl
sub
xchg
lret
aad
cmpsb
mov
faddl
gs
insb
push
add
push
sbb
lahf
lcall
flds
dec
sbb
push
mov
and
cmp
aas
xchg
xchg
mov
add
je
mov
jp
pop
adc
jns
enter
ss
adcl
sahf
fdivr
and
lret
inc
mov
add
jg
cwtl
dec
cld
pop
sbb
mov
inc
out
cmp
or
xor
mov
arpl
cmpsl
cmpsb
mov
aad
pusha
push
fists
push
or
in
mov
das
dec
es
ja
popf
lods
aaa
shll
or
mov
nop
lcall
inc
gs
jno
ds
sbb
pop
int3
imul
dec
and
mov
out
test
dec
int3
into
inc
inc
in
xchg
push
xchg
sbb
cmp
push
cmp
daa
stos
insb
dec
insb
jno
xlat
and
or
and
lret
movsl
mov
lods
and
or
mov
scas
pushf
mov
cli
add
pop
xchg
jp
jmp
sbb
xchg
loope
sub
xchg
scas
push
add
aam
xor
je
cld
out
dec
imul
push
mov
rcll
jbe
test
scas
in
mov
add
or
adc
xlat
loop
out
mov
test
jge
icebp
int3
inc
sub
mov
adc
xor
dec
xor
mov
push
cmp
xchg
ffreep
mov
pop
out
pop
pop
xchg
loope
cmp
in
jge
dec
adc
mov
out
jae
xor
dec
das
push
pop
addr16
repnz
cmpsb
cld
aam
adc
or
idivl
add
fisubl
add
jg
push
leave
or
rolb
je
dec
push
je
stos
cmp
dec
outsb
daa
push
inc
cmp
mov
shll
cmp
xlat
call
xchg
inc
mov
inc
push
fs
enter
orl
stc
aam
adc
out
jle
cmp
cwtl
loope
loopne
mov
pop
or
int3
hlt
jge
and
pusha
daa
mov
mov
dec
mov
leave
outsl
inc
xchg
cmp
mov
mov
mov
mov
jb
xor
hlt
nop
sbb
adc
into
sub
insl
dec
cmpsl
xchg
add
ffree
cmovp
or
xor
stos
ss
stos
cmp
dec
and
jnp
xchg
mov
stc
rolb
inc
jns
xchg
push
sbb
test
add
add
xor
test
rcl
call
scas
out
xchg
aam
outsb
xor
sti
sub
add
iret
loope
sahf
xor
and
jae
icebp
and
popf
xor
dec
adc
mov
jns
jo
into
sub
lods
jp
push
jmp
mov
add
in
sbb
mov
gs
outsb
add
sub
push
inc
xor
addr16
cmc
lods
subl
movsl
rcl
xchg
xor
jne
xchg
repz
loope
cmp
add
fwait
xor
dec
dec
roll
enter
and
lds
fwait
in
loop
dec
stc
shlb
or
add
ja
data16
or
enter
jns
xor
shrb
outsl
inc
add
cmp
mov
push
xor
push
mov
dec
jecxz
mov
jae
insb
sti
add
mov
mov
jmp
mov
pop
jmp
xor
pop
pop
loope
loope
adc
sub
in
in
dec
insb
stos
int3
outsb
dec
or
lock
outsl
pop
inc
cmp
push
mov
mov
fwait
insb
call
cmpsl
adc
or
insl
loop
and
daa
push
pop
int
daa
jmp
mov
or
es
and
push
dec
mov
aad
adc
pop
inc
xorb
jp
stos
ja
cmp
mov
movsl
orl
sarl
jne
sbb
in
cmc
push
mov
rcll
cmp
repnz
cltd
int
in
pop
fcom
adc
or
repnz
hlt
ss
and
js
sbbb
rcrl
cmpsb
pop
xchg
cmp
cltd
sub
addr16
sbb
dec
in
sbb
adc
add
repz
lcall
pop
fisubrs
dec
push
out
shll
rclb
js
mov
mov
push
cmpb
and
dec
nop
test
rcrl
dec
lret
scas
leave
into
or
loopne
push
dec
dec
jl
clc
cmp
xor
dec
je
xchg
icebp
jbe
xchg
sbb
and
mov
hlt
rcrl
aad
inc
xor
jmp
sbb
mov
inc
popf
jecxz
inc
add
ret
pusha
and
lcall
sbb
jne
and
les
lea
lock
mov
rorb
ljmp
in
mov
into
unpckhps
sarl
scas
lea
mov
push
insl
xchg
jecxz
pop
cmp
ds
repz
dec
xchg
add
into
loope
insb
mov
pand
std
xchg
ss
lock
add
mov
cmp
mov
scas
sti
repz
fs
mov
push
mov
jge
mov
popf
inc
inc
jle
add
lcall
xchg
imul
test
outsb
mov
inc
add
jle
in
insl
xor
into
aaa
cs
xlat
es
jo
xor
sbb
test
lock
mov
hlt
mov
call
sbbb
sub
and
rol
or
lret
xchg
push
and
or
pop
pushf
cmp
xchg
lret
bnd
idivl
je
rolb
js
les
dec
shlb
fdivrs
notl
pop
test
mov
out
lods
dec
rol
pushf
add
jnp
rolb
aaa
adc
sbb
mov
out
sbb
fisttpl
or
add
repz
mov
ljmp
daa
ja
aam
push
js
les
sub
dec
xchg
dec
ret
insl
mov
mov
test
mov
xchg
ret
sbb
scas
inc
add
lods
push
or
lods
push
movsl
jae
sub
arpl
add
add
xchg
and
gs
nop
scas
bound
movsb
shr
jmp
adc
mov
adc
jne
adcb
inc
lock
xchg
popa
xchg
add
lea
jg
sub
nop
ficomps
fs
push
les
jbe
pop
push
pop
cmp
out
aad
and
xor
and
ljmp
sbb
adc
xor
in
dec
aaa
out
or
adc
sahf
sti
push
setp
movsl
xor
aam
in
lret
cmp
sti
jg
mov
cwtl
negb
negb
daa
iret
cltd
mov
fsub
out
or
and
mov
jp
inc
or
inc
push
mov
cmp
dec
mov
mov
cmp
jns
leave
leave
ds
dec
addr16
sub
xchg
and
xor
movhps
mov
jbe
mov
pop
or
dec
cmp
add
shrl
mov
sbb
clc
jns
mov
cli
push
jp
mov
push
aas
xchg
mov
pop
dec
pop
arpl
jno
jno
aam
add
xlat
jg
jo
cs
push
mov
enter
mov
daa
jbe
and
test
cmpsl
decb
dec
scas
mov
lock
cmp
xchg
rcrl
loop
cmp
loopne
stos
in
lods
inc
push
movsbl
mov
add
out
mov
push
jl
and
cmpsl
int
cmp
jb
fisttpl
pop
js
lods
andl
pusha
push
mov
pop
cmpsl
fldenv
xchg
add
cmpsb
cltd
mov
or
testb
daa
add
popf
in
inc
xlat
pop
lret
cmpsb
add
adc
pushf
xor
jle
jg
inc
outsb
jmp
add
xor
fstpt
lea
shlb
push
inc
dec
notl
out
push
loope
push
movsl
call
insl
jnp
sbb
xchg
adc
rolb
mov
imull
movsl
icebp
mov
push
add
ret
dec
adc
adc
shrb
js
bound
pushf
pop
inc
sbbb
sub
cwtl
dec
and
in
sbb
sbb
shll
mov
jle
out
push
outsl
std
inc
inc
mov
fstps
xor
adc
mov
stos
pop
gs
movsb
jp
mov
mov
sub
rclb
mov
loopne
adc
jno
fwait
enter
outsl
jl
cld
adc
test
dec
mov
push
aam
jno
in
dec
inc
sbb
stos
pop
pusha
or
xlat
pop
cmp
loop
shlb
push
jmp
jle
or
push
sahf
fstl
sbb
dec
jge
shrb
pop
mov
cwtl
cmp
fiadds
pop
mov
mov
cld
sbb
sysret
idivl
insb
cmp
out
mov
enter
jge
out
movsb
fcoml
stc
sbbb
popa
pop
popa
pop
xchg
xchg
xchg
jb
add
imul
imul
jl
mov
push
fildll
ds
cmp
mov
arpl
push
xor
lods
dec
stos
xor
outsl
in
jge
add
push
imul
repnz
jnp
fmull
sbb
mov
popf
jl
push
inc
add
adc
fstps
sbb
int
mov
js
lcall
in
test
and
and
lret
stos
sub
lret
dec
sbb
decl
sbb
sbb
inc
sub
or
add
adc
nop
mov
test
pop
add
dec
ficoml
outsb
jge
xchg
in
cmpsb
mov
imul
pop
imul
test
ret
dec
mov
cmpsl
cmpsl
pop
inc
stos
clc
jle
lret
je
ret
test
rorb
faddl
scas
data16
pop
xchg
addr16
xor
in
mov
add
adc
xor
divb
pop
stos
imul
int
nop
adc
fwait
cmp
xor
stos
jne
jne
fadds
and
add
insl
sub
sub
test
add
mov
jg
or
pop
add
sbb
adc
mov
jnp
call
cmp
inc
bts
loope
orb
mov
shrl
fcompl
dec
sub
mov
jo
jp
jne
inc
loop
js
mov
nop
sbb
fisubrs
adc
xlat
mov
pusha
fidivs
sub
mov
pushf
fisubl
test
stos
sub
push
and
push
lret
scas
dec
gs
lahf
mov
dec
mov
rcrb
rcrb
imul
int
lret
addl
sbb
jne
out
test
lret
mov
cmp
pop
jmp
shll
jmp
js
and
mov
loopne
jle
sbb
repz
sub
clc
inc
xor
push
dec
repnz
mov
fs
gs
movsl
jge
adc
aaa
xor
mov
xor
iret
stos
js
pop
push
add
mov
fisubrl
lea
or
dec
les
lcall
scas
sahf
and
in
cld
cmp
or
ror
divl
icebp
push
mov
mov
push
ljmp
xchg
cmp
push
xchg
test
mov
add
jp
es
mov
negl
pop
add
pusha
xchg
dec
inc
jmp
jmp
sub
adc
test
insl
pop
loope
mov
rcrl
cmp
repnz
or
loope
pushf
cmp
cmp
lret
sbb
rcll
push
cmp
cli
adc
loope
xchg
mov
mov
scas
jl,pn
dec
cltd
popw
adc
les
inc
mov
sub
push
cmovbe
mov
mov
add
cli
sbb
stc
push
movq
sahf
xchg
or
fildll
leave
mov
adc
xchg
xor
divl
adc
in
mov
jmp
stos
insb
lds
cmp
jl
aaa
pop
mov
or
negl
test
dec
xor
dec
mov
daa
loopne
pop
mov
xor
in
out
pop
sbb
arpl
jle
mov
inc
out
insl
std
aad
pop
xchg
dec
clc
hlt
pop
addb
lods
push
sahf
out
xor
and
xor
inc
jl
lock
dec
mov
mov
or
jmp
push
dec
adc
push
mov
and
daa
shll
adc
out
pop
scas
cmp
lea
sub
testl
pop
inc
popf
icebp
push
mov
sbb
fistps
push
andl
jae
xchg
push
rcrb
mov
sbb
and
ds
mov
mov
mov
lcall
jp
jo
jecxz
jmp
mov
andl
inc
rolb
nop
sbb
add
xchg
add
jg
andb
add
cld
iret
mov
mov
cmp
push
aas
add
cwtl
adc
call
iret
aam
rclb
cmpsl
out
daa
cli
in
mov
and
sub
daa
cmc
jae,pt
ficoms
enter
mov
push
je
scas
rorl
inc
push
or
movsb
loope
mov
push
mov
add
jne
xchg
es
sub
pop
push
das
pop
sub
icebp
xchg
mov
mov
jg
inc
add
dec
stos
gs
sub
jbe
gs
add
add
dec
inc
adc
rorb
cmpsb
cmp
movsb
scas
mov
aaa
fs
loope
adc
xor
imul
cwtl
lods
daa
inc
add
sub
pop
jge
dec
fsubrl
lock
mov
sarl
in
subb
sub
mov
jge
shrb
xchg
add
sbb
inc
rol
roll
lcall
pop
add
ud0
sbb
insb
test
adc
stc
pop
xorb
push
push
dec
push
pop
lret
sahf
into
xor
ret
mov
in
adc
mov
jns
pop
sbb
addr16
inc
cmpsl
out
test
fstpt
iret
xchg
rcr
out
inc
repz
movsb
xchg
mov
je
mov
add
sub
push
pop
inc
cltd
fsubrl
mov
mov
inc
rolb
loopne
and
cwtl
lods
pop
add
cmc
cmp
fsubrl
xlat
ss
lds
inc
outsb
cmpl
loop
leave
add
push
mov
xor
push
and
push
inc
mov
ljmp
jge
mov
imul
add
jle
lds
xorl
pushf
adc
ljmp
inc
insb
lcall
mov
popf
jmp
pop
push
jp
push
loopne
js
or
xchg
push
cmc
adc
dec
mov
lock
stos
jnp
shrb
and
enter
fadd
push
ror
mov
xchg
repz
jno
xchg
jae
lcall
ss
jl
fidivrl
mov
xchg
lock
xchg
out
mov
out
hlt
dec
in
and
mov
fst
adc
rclb
add
and
cmp
mov
jmp
cmp
popf
pop
test
shlb
sti
and
sbb
movsb
ficoml
mov
in
ja
cmpsb
inc
push
sbb
shlb
flds
adc
movl
mov
xchg
add
repnz
callw
pop
mov
lcall
add
mov
xor
jb
fwait
out
int3
sti
lret
scas
aam
rcrl
or
iret
pop
sub
mov
push
push
xchg
pop
int
adc
sub
or
mov
pop
add
imul
add
cmp
insl
daa
es
cmpsl
mov
mov
push
jnp
and
shl
out
sbb
pop
inc
int
push
fiadds
gs
mov
xchg
sub
iret
insb
or
shlb
arpl
ret
sbb
jle
mov
fisttpl
daa
std
mov
lds
cmp
mov
mov
in
pop
scas
mov
lods
pop
jns
dec
pop
mov
adc
adcb
cmp
cli
arpl
cltd
loopne
pop
pop
sbb
ds
icebp
dec
jl
call
sub
in
in
xchg
repz
loope
jl
repnz
leave
not
jmp
push
sub
cmc
rcrl
and
lods
stc
outsl
mov
jae
cmpb
xchg
mov
cli
cltd
push
std
xor
or
jle
mov
cwtl
push
cmp
pop
ret
jmp
mov
xchg
andb
xchg
aad
and
cld
ja
mov
mov
cs
xchg
sbb
sub
pushf
lret
imull
nop
and
sbb
nop
mov
ja
inc
inc
sahf
jnp
or
lds
cltd
fsts
jg
cmpsb
xor
mov
shrb
inc
gs
test
xchg
or
xchg
mov
movsl
out
mov
push
mov
or
leave
adc
inc
stos
jae
xor
xor
mov
add
xchg
mulb
adc
sbb
sbb
sub
jno
sbb
mov
clc
test
rol
add
pop
add
push
out
shlb
fdivs
dec
jne
movsb
cmp
sub
inc
popa
cmp
adc
fnstcw
jp
add
mov
icebp
mov
sbb
stc
xchg
jg
sub
mov
adc
mov
add
mov
pop
sub
das
jae
lds
pop
sbb
mov
xor
bound
pop
fisubs
shlb
push
push
idivb
cmpsl
and
mov
addb
in
lahf
inc
stos
lahf
incl
dec
mov
sahf
sbb
or
je
mov
inc
mov
pop
scas
mov
lds
pushf
mov
mov
push
ljmp
mov
scas
lcall
aas
aad
xchg
mov
in
stos
sub
mov
cmp
rcl
sub
or
cli
adc
test
bound
xor
cmc
adc
mov
divb
dec
imul
daa
int3
jecxz
inc
and
call
xor
add
scas
out
push
popa
and
aas
mov
loop
xor
xor
pop
adc
inc
out
dec
bound
jge
ficompl
sub
fs
push
pop
inc
inc
int
and
inc
stc
out
xchg
push
imul
arpl
lret
jns
fildl
pop
arpl
icebp
std
aam
adc
aam
jae
push
loope
jle
or
mov
sti
addr16
or
adc
shll
movsb
enter
adc
popf
pop
jno
jecxz
das
jno
ret
add
mov
gs
lret
xchg
sbb
in
decb
fsubrs
fstpl
subl
push
lods
and
clc
mov
sub
cmp
and
push
stc
jnp
pop
popf
inc
out
and
cld
repz
sub
xor
adc
daa
inc
adc
ljmp
jne
faddl
scas
fs
lcall
push
call
adc
inc
out
adc
xor
dec
scas
aad
lods
lea
push
dec
mov
pop
ds
jne
std
sub
push
pop
jp
pop
pusha
pop
jne
xchg
frstor
dec
hlt
shlb
dec
sub
pop
mov
push
pop
xchg
cmc
into
je
dec
bound
mov
stc
push
stc
adc
rolb
loop
ret
outsb
pop
lods
xchg
pop
cmpsl
shll
pop
cmp
out
jle,pn
iret
adc
xor
adc
dec
movsl
pop
scas
movsb
or
jae
insl
es
stos
gs
mov
push
adc
mov
shrl
mov
jns
dec
pop
enter
xor
xor
cmp
stos
out
call
jo
and
daa
das
popa
jge
sub
ss
sbb
lret
mov
cs
pop
insl
aas
incl
sub
outsl
cwtl
test
sub
sub
adc
decb
sbb
les
fistpl
jno
lods
or
pop
sub
pusha
sbb
mov
jg
das
je
cli
and
shlb
mov
mov
inc
int
xor
or
and
or
aaa
pop
in
repnz
ja
xchg
mov
imul
clc
add
scas
sub
pushf
fs
ffree
jle
dec
mov
nop
fildl
xlat
loop
ss
pop
push
or
icebp
std
aas
lret
les
fnstsw
push
mov
xor
xchg
pop
aam
testl
push
test
sub
push
nop
and
adc
lods
fiaddl
rclb
xlat
jecxz
inc
fdivs
mov
push
out
ret
je
ret
sbb
mov
ret
ljmp
imul
sbb
mov
push
xchg
xchg
aad
sub
pop
dec
sbb
stos
sub
inc
shll
push
cmp
out
xor
mov
push
pop
sub
out
cmp
mov
mov
jle
cli
popa
imul
test
pop
dec
push
pop
out
and
cmpsl
jo
xchg
push
push
in
sbb
cmp
dec
mov
push
popf
in
sbb
sar
dec
ffreep
fdivr
adc
cmp
iret
out
xchg
cmpsl
addr16
sub
fstps
mov
test
pop
aaa
or
inc
jb
out
daa
xor
lds
jg
mov
outsl
jle
int
inc
inc
and
jp
in
aad
sbb
loopne
pop
jp
in
mov
lods
sub
stos
and
jne
loop
dec
xchg
pop
iret
dec
fcomi
insb
push
sbb
adc
mov
xchg
stos
and
mov
mov
sbb
add
push
cli
adc
sahf
das
xchg
pop
pop
dec
adc
mov
mov
sbb
jbe
insl
lods
scas
xorl
push
lock
outsb
std
and
outsb
xchg
repnz
enter
fsubrs
xor
repnz
stc
ljmp
popa
push
fldenv
ljmp
les
scas
call
or
iret
cmp
dec
xchg
add
lods
cld
repnz
sub
lods
paddq
jne
hlt
insb
pop
shlb
add
push
inc
mov
pop
popf
inc
andb
pop
div
adc
neg
loop
adc
mov
xchg
fistpl
loope
in
sbb
pop
sub
xchg
mov
adc
xchg
xchg
dec
inc
sbb
push
pop
out
aas
inc
enter
outsb
pop
mov
jle
iret
and
aaa
adc
not
xchg
add
insb
pop
mov
pop
xor
or
aas
mov
das
dec
dec
in
std
xchg
xor
mov
ljmp
ror
mov
in
dec
stos
dec
icebp
mov
inc
lods
cmp
jno
xor
stc
cld
pop
test
cmp
push
data16
jp
lret
xchg
pop
out
inc
out
pop
push
and
mov
push
pushf
pop
push
aad
sahf
shll
xchg
inc
cs
subl
mov
daa
and
mov
xchg
cwtl
in
sub
adcb
mov
rolb
pop
pop
pop
mov
xchg
adc
cs
lea
sub
loop
pop
push
dec
out
jle
push
xchg
jg
stos
dec
jle
outsl
xchg
loop
fs
jnp
ret
fcomi
aas
mov
mov
pop
lods
push
pop
or
mov
icebp
and
adc
aas
repz
adcb
cli
movsb
jmp
inc
add
ss
xchg
fnstcw
sbb
data16
icebp
push
fldenv
push
shlb
pop
in
bound
mov
dec
out
int
ret
inc
aad
and
adc
out
pop
fwait
jnp
mov
lock
fdivrs
lcall
stc
add
call
and
addr16
push
hlt
imul
ret
jmp
mov
pop
mov
sbb
or
out
ljmp
imul
out
sbb
inc
adc
jbe
mov
repnz
xchg
push
rep
sbb
pop
adc
or
pop
inc
sub
ret
cmp
fldl
adc
push
adc
negb
nop
loop
pop
cs
and
imul
arpl
lea
add
pop
mov
mov
adc
adc
mov
shlb
or
mov
pusha
push
aad
fwait
sub
push
ret
cltd
mov
pop
les
and
jmp
push
dec
mov
jge
and
imul
outsb
sub
push
xchg
mov
add
xchg
test
loope
ficompl
test
aad
imul
ror
cld
popf
dec
incl
and
jb
pop
insb
out
push
pop
ret
sbb
iret
sahf
inc
inc
adc
lods
or
mov
push
add
xchg
and
adc
es
out
dec
imul
and
push
outsl
sbb
cltd
orl
call
packssdw
xchg
pop
cs
dec
ds
mov
lds
fidivl
pushf
scas
loope
cld
lret
out
addl
unpckhps
lea
addl
add
adc
loop
loopne
dec
cltd
insb
or
inc
push
rorl
push
or
loopne
jae
dec
popa
mov
imul
idiv
shlb
jb
sbb
mov
push
xlat
nop
push
pop
pop
and
mov
inc
sub
xchg
dec
jmp
mov
inc
cld
push
adc
shrb
aas
shrl
iret
jns
dec
xchg
sub
aaa
pushf
add
add
rclb
pop
out
test
adc
mov
aam
mov
sbb
dec
jns
outsb
ret
lcall
sahf
leave
jp
sub
adc
mov
fmul
cltd
inc
mov
xlat
out
xchg
testl
int3
test
mov
adc
and
jne
mov
adc
jecxz
test
std
pop
inc
loope
inc
cmp
leave
insb
inc
push
stc
push
cmp
outsl
mov
pop
lods
push
mov
shl
cld
ds
in
inc
jmp
movsl
daa
ja
mov
and
ja
inc
gs
movsl
pop
cmp
mov
add
fstps
inc
add
jno
jmp
movsl
psubsb
cmp
repz
sub
xor
adc
out
into
and
loopne
mov
nop
int
insl
mov
imul
cmpps
dec
dec
xor
adc
xchg
jle
clc
lret
gs
leave
dec
pop
lods
cmp
ret
out
sub
loopew
jne
xor
add
pop
aaa
inc
rorl
iret
cwtl
mov
sbb
xchg
loop
xchg
xor
push
xchg
pop
xchg
jb
and
mov
movsl
sub
int
loopne
pop
push
and
pop
xorb
leave
and
lea
in
sbb
jl
mov
or
incb
jle
push
in
jmp
addr16
push
scas
xor
fs
mov
or
dec
jne
push
imul
ret
test
jbe
cmp
push
pop
jle
push
push
clc
adc
imul
lods
lcall
in
xchg
push
dec
cmp
dec
stos
outsl
cmc
push
jmp
inc
xor
mov
les
aad
mov
iret
ss
lret
arpl
jns
inc
add
ret
inc
xchg
pushf
adc
xlat
jle
fdivp
mov
xor
jne
clc
and
cld
stc
xchg
cs
cmp
lret
lods
mov
jp
jl
rcrb
or
and
push
ss
pop
mov
xchg
test
inc
push
push
aam
ljmp
cmp
mov
mov
and
mov
aaa
xor
sti
test
pusha
jo,pn
add
jge
bound
popa
jae
xchg
xchg
test
xchg
push
sbb
into
push
mov
push
cmpsb
shlb
xchg
xor
pop
adc
cld
cmp
pop
int3
int3
scas
nop
hlt
inc
ret
test
into
fwait
xchg
mov
or
push
push
cli
jnp
lret
fs
sub
xchg
inc
movsl
in
sbb
xchg
int3
pop
fmull
jo
and
inc
push
mov
nop
sbb
pop
pusha
loopne
out
mov
or
dec
sub
inc
out
frstor
out
insb
cld
out
and
lea
sub
pop
je
pop
push
lcall
bound
xlat
rclb
decl
sub
insl
cmpsb
and
pop
inc
sub
jbe
push
mov
out
dec
mov
sti
rclb
and
xor
pop
decl
adc
int3
fcompl
jg
mov
pop
cmp
std
push
data16
pop
adc
cmp
xchg
pop
out
pop
in
or
cmp
in
in
mov
sub
adc
stc
addr16
add
movlps
test
xchg
aam
xchg
xor
dec
fdivrl
movsl
loope
cmp
jecxz
and
adc
mov
lods
sbb
mov
adc
add
sub
cmpsl
xchg
shll
leave
and
pop
cmp
xor
xor
lret
insb
add
or
mov
popf
roll
sbb
movsb
xchg
mov
xchg
scas
mov
test
push
repz
rcrl
inc
insb
popf
into
dec
dec
pop
shlb
in
wrmsr
inc
xchg
fwait
into
scas
sarb
mov
ds
aas
mov
movsb
inc
js
mov
outsl
inc
ret
adc
jge
and
mov
and
cmp
inc
mov
or
mov
les
sub
in
sbb
das
or
xor
mov
ss
orl
jb
icebp
jnp
lods
push
mov
fnsave
xor
xchg
jne
cmp
cmp
imul
cld
popf
test
aaa
pop
add
insl
popf
out
inc
scas
movsb
mov
mov
mov
dec
jns
adc
fnsave
loopne
je
sahf
pop
aaa
lds
mov
jge
filds
jb
and
mov
shrl
sub
push
xor
cli
je
testb
pop
push
xchg
gs
fwait
jg
aaa
in
sbb
je
jnp
popl
xor
scas
js
fdivs
call
xchg
mov
lcall
in
movsl
push
dec
dec
clc
inc
dec
rolb
jle
mov
scas
mov
cltd
aam
mov
sub
shlb
push
add
jbe
pop
inc
pop
pop
lods
jg
jmp
mov
ja
leave
cmpl
dec
lods
add
fisubs
test
sbb
inc
xchg
leave
dec
ret
fbld
or
sbb
stos
test
mov
idivb
jp
dec
jb
enter
lcall
movsl
cld
int
enter
lcall
push
and
xlat
out
clc
fnsave
inc
mov
js
add
cmpsb
enter
push
mov
out
pop
jl
lret
mov
pop
test
pop
sub
jecxz
xor
test
push
insb
xchg
sub
lods
xchg
or
in
adc
mov
cmp
jo
clc
rcl
inc
add
cmp
lret
mov
fucomi
xbegin
cld
mov
xlat
xchg
sbb
or
std
aam
inc
ds
sti
cmp
and
push
push
int3
imul
jb
icebp
aaa
les
jno
pop
repz
mov
cld
lea
and
cld
shlb
mov
xor
pop
and
pop
mov
adc
icebp
and
andl
rcrl
mov
aad
mov
scas
and
push
outsl
pop
push
leave
int3
jns
add
adc
mov
push
push
mov
rcrb
cmp
pop
and
sub
icebp
lods
push
adc
jmp
mov
cltd
insb
cmp
out
jmp
hlt
loopne
fsubrl
push
dec
cmp
call
rcrl
enter
mov
popa
outsl
int3
jg
ja
out
out
in
cmp
or
jle
adc
or
push
jp
movsb
xchg
xchg
jb
cmp
jmp
mull
sub
pop
push
inc
lret
ret
or
in
lds
movsl
in
push
xor
lcall
xchg
pop
mov
mov
dec
mov
test
inc
in
push
sub
ret
pop
push
mov
fcomps
sbb
dec
sbbl
lods
push
loope
cmpl
add
mov
sbb
pop
inc
add
xchg
mov
das
stos
lds
dec
notl
pop
stos
mov
push
fists
das
pushf
or
push
lea
test
lock
dec
push
hlt
fadds
adc
cmp
push
lahf
sub
cmp
inc
faddl
xor
push
mov
push
jb
pop
sahf
xchg
mov
pop
call
push
adc
mov
data16
or
mov
nop
loope
sarb
daa
push
mov
bound
repz
orb
mov
lret
sub
adcb
add
inc
data16
jns
gs
test
jp
and
mov
jl
icebp
repz
ret
pop
dec
cmpb
jns
cmp
movl
adc
or
pop
and
aam
lods
inc
loop
xor
int
cmc
cmp
jne
fsubr
pop
cwtl
add
mov
andl
repz
mov
outsb
jp
adc
xor
ss
std
mov
int
jmp
push
dec
icebp
por
xchg
add
add
negl
xor
add
ficoml
add
scas
jne
adc
scas
outsl
xor
and
pop
push
outsl
in
jns
push
gs
fcmovu
fisubs
sahf
sahf
cmp
pop
out
or
icebp
mov
add
cld
mov
mov
loope
pop
xor
cld
daa
jge
test
sbb
nop
cli
pusha
dec
lods
nop
mov
fstps
adc
in
insl
shrl
dec
and
mov
in
in
test
fimuls
cltd
cmpsl
inc
cmp
daa
into
subb
and
adc
push
pushf
loope
arpl
pop
mov
pop
cmp
mov
jle
fisubs
into
mov
jnp
sbb
stos
decl
mov
jle
xchg
cmpsl
jl
jp
sbb
outsl
and
pop
xor
scas
repnz
cmpsb
cmpsb
test
push
aas
push
adc
les
and
je
xchg
inc
sub
gs
xor
mov
cs
push
sub
ds
mov
and
cmpsl
push
adc
add
mov
mov
push
fmull
in
jno
push
xchg
shll
lret
xchg
outsl
sub
cmpsl
xchg
icebp
addr16
cmpsb
in
and
shll
dec
sub
adc
cmp
or
push
sbb
inc
xchg
pop
scas
sub
shll
fnstenv
or
nop
inc
push
xor
out
jb
and
shll
repnz
sub
clc
test
loope
rol
pop
adc
into
fidivl
popf
cmp
and
mov
in
das
sub
cmp
pop
xchg
pop
testl
inc
push
mov
clc
pop
lds
and
js
js
xor
lret
fsub
mov
sbb
rol
mov
push
mov
push
pop
mov
sarb
push
enter
adc
mov
ljmp
mov
adc
xor
jb
pusha
shll
js
rcrl
xchg
dec
push
xlat
inc
inc
sbb
out
cmpb
mov
sbb
repz
daa
aas
mov
pop
insb
iret
dec
xchg
popf
add
push
and
jns
push
iret
add
xor
mov
fiadds
pop
mul
cmp
jae
into
xchg
stos
push
adc
out
mov
pop
push
push
jbe
in
das
mov
add
xchg
mov
mov
repz
jbe
scas
test
sbb
decl
sbb
mov
add
xchg
shrl
pushf
push
jle
shlb
pop
xor
mov
or
jno
js
sub
mov
cmpsb
fs
xchg
divb
pop
mov
cs
ja
mov
call
lock
add
loope
add
add
jns
sub
stos
popf
xor
insb
icebp
lahf
in
mov
push
sti
or
inc
dec
popf
xchg
xor
sysexit
nop
ss
xchg
sub
jle
sarb
jg
jp
push
dec
inc
jmp
xchg
or
jo
cmp
lods
ds
cmp
mov
mov
hlt
outsb
shl
sub
xor
fwait
jle
mov
repnz
stos
pop
fdivrl
and
cmp
mov
pop
pop
xchg
add
aad
and
cmpsl
or
mov
adc
cli
shlb
into
inc
and
lods
mov
inc
dec
lods
jb
cmpsb
aad
mov
idivl
ret
in
dec
cmp
xchg
leave
cli
dec
xor
pop
jmp
jmp
call
xchg
or
adc
adc
add
outsl
mov
push
movsl
inc
popf
gs
js
mov
jge
imul
test
cli
mov
js
xor
jmp
xchg
adc
or
test
ss
fwait
inc
add
jnp
jno
ss
cltd
mov
lret
mov
or
xor
nop
dec
xor
jl
xor
imul
jb,pt
sbb
and
jmp
leave
jae
fdivrp
adc
das
xchg
jo
in
loopne
xchg
aas
insl
jne
dec
xchg
stos
pop
sti
mov
cmp
scas
popf
lret
int3
mov
fisubrl
cmp
inc
insb
call
pushf
adc
pushl
pushf
dec
xchg
icebp
jno
xor
fldl
or
jo
xchg
jg
sti
out
inc
and
mov
xchg
lods
mov
and
mov
sbb
cmp
pushf
in
pop
incb
or
stos
pop
imul
scas
rcl
mov
push
je
dec
cmp
inc
inc
mov
sub
incb
loop
jno
and
daa
adc
xchg
xchg
mov
idivl
jb
add
ljmp
jb
movb
sbb
mov
jbe
stc
xchg
add
out
jae
mov
and
mov
adc
push
xor
mov
pop
xchg
jo
bound
sbb
fimull
fdivp
out
ret
jecxz
enter
adc
push
outsl
jle
aam
sti
cltd
ret
xchg
or
jno
shlb
sbb
mov
mov
inc
mov
out
call
add
sub
out
js
cmp
and
xchg
push
jle
sub
push
shl
cmp
pop
adc
std
rcrl
jne
fistpll
dec
lea
and
insb
jecxz
rcrb
push
pop
or
and
or
repnz
lea
cmpsb
mov
xchg
mov
repz
mov
jns
insb
sub
ret
ret
std
lcall
cld
adc
testl
daa
cltd
mov
test
arpl
push
sub
add
mov
mov
push
pop
dec
pop
inc
push
cwtl
imulb
sbb
and
and
cmpsl
xor
hlt
inc
push
mov
stos
jmp
hlt
xchg
pusha
test
fistl
fsubl
mov
cmp
je
push
js
inc
andb
cmp
dec
mov
xchg
cmp
push
ja
sub
stos
jge
mov
jo
or
mov
inc
mov
clc
jb
out
repz
inc
mov
outsb
xor
outsb
sub
mov
sub
adc
sub
xchg
and
scas
mov
shrb
add
cld
dec
mov
xor
iret
add
sub
sbb
push
fistpl
ret
jle
jp
or
ljmp
mov
and
xchg
sub
test
cmpsl
pop
sub
sbb
push
pop
pop
cld
pop
push
jg
add
rorl
mov
jns
and
mov
mov
stos
or
lds
cmp
cld
xor
push
and
add
or
xchg
test
repnz
enter
test
and
les
mov
bound
xchg
imul
mov
dec
mov
lret
std
and
movsb
add
dec
dec
mov
mov
cltd
pop
aam
das
mov
mov
or
hlt
push
sar
pop
push
xor
pusha
mov
fisubs
xor
jno
std
cmpsl
outsb
scas
int
pop
scas
outsb
in
ret
add
fnstsw
mov
add
call
fiaddl
int3
imul
stos
mov
xor
pushf
jno
mov
cmc
cmp
outsb
dec
add
mov
fld
and
in
into
add
out
outsb
xor
mov
mov
cmovb
dec
mov
mov
add
jmp
xchg
pop
fsubrs
stc
or
sub
outsb
fimuls
paddusw
rclb
repnz
cli
inc
pop
mov
mov
fs
cmp
cmc
test
cmp
xchg
cmp
arpl
ffreep
push
mov
cmp
fcmovnu
mull
sub
and
inc
aaa
pop
inc
shlb
cld
mov
lds
sbb
dec
iret
incb
cld
scas
mov
test
mov
cltd
pop
test
adc
pushf
adc
mov
or
inc
inc
push
fistpl
notl
sbb
shrb
dec
mov
outsl
mov
mov
lcall
ret
fadds
leave
xorl
rcl
out
push
jge
add
andb
outsb
dec
dec
lahf
shr
jno
movsb
push
inc
je
jle
xor
or
les
cmp
fs
repnz
ja
jns
loopne
shrl
cld
test
adc
stc
mov
hlt
pop
jne
inc
loopne
mov
mov
mov
rol
leave
sar
pushf
pop
cwtl
lret
jmp
andl
cmp
pushf
es
leave
xor
add
outsl
jb
dec
leave
in
adc
xor
jecxz
mov
push
dec
loope
dec
adc
or
push
dec
and
and
jno
pop
lea
sub
adc
mov
and
scas
inc
inc
jnp
adc
jge
dec
cmp
lret
dec
decl
je
pop
cmp
mov
pusha
sub
cmp
push
jg
pusha
addr16
stos
cli
aaa
iret
mov
loopne
cmpb
cmp
data16
enter
lret
mov
cltd
xor
imul
loopne
test
xchg
data16
dec
jg
aad
iret
dec
scas
icebp
not
out
imul
xor
repz
jmp
jl
lock
or
addr16
stc
pop
mov
insl
push
jecxz
sub
push
mov
xlat
out
jnp
dec
xchg
or
push
push
jecxz
sub
sub
testb
pusha
fwait
sub
mov
mov
fs
iret
in
lods
push
and
arpl
mov
je
jle
cld
push
lods
xchg
les
jae
in
aam
xlat
mov
add
and
mov
pop
or
push
sarb
rcrb
push
imul
cmp
push
into
and
std
rcrb
pop
fcomip
jecxz
in
call
lods
mov
sub
xchg
xor
popa
inc
xor
dec
jnp
push
push
pop
data16
adc
outsb
aam
mov
add
cmp
out
mov
je
es
push
inc
daa
int
dec
stc
test
movsl
adc
pop
scas
push
movsb
les
cmp
popa
pop
out
push
adc
into
pop
div
cmp
test
test
lea
and
sbb
repnz
xor
dec
cmp
into
push
pop
push
sub
cwtl
push
inc
adc
daa
mov
jecxz
xchg
shrb
xchg
out
pop
movsl
pop
xchg
pop
inc
mov
loope
in
pop
mov
outsb
lret
xchg
ret
xor
inc
fwait
cmp
dec
aaa
jo
xor
je
jo
xor
jg
xchg
mov
aam
sub
cmp
lods
inc
pextrw
imul
lds
push
jp
and
adc
mov
adc
push
je
movsl
std
dec
xor
push
or
xor
xchg
popa
ljmp
xorl
enter
cmpl
in
mov
mov
xor
sub
cmp
sub
ja
arpl
mov
rorb
insl
push
mov
pop
cmp
dec
hlt
mov
rcrl
jns
sub
ss
mov
inc
sub
mov
pop
test
push
lods
popf
or
push
push
jbe
dec
rolb
jecxz
fimuls
enter
mov
sub
in
cli
mov
lret
movsl
mov
out
inc
cmp
cmp
adc
mov
adc
fwait
mov
loopne
rorb
mov
outsb
sbb
push
push
out
frstor
inc
push
inc
out
xchg
mov
das
aas
bound
xor
lds
inc
mov
dec
push
adc
mov
movd
inc
loopne
mov
jb
scas
jge
mov
sbb
mov
out
cmp
aas
jl
rorb
mov
mov
fcmovnb
fcomp
xchg
xor
mov
dec
add
fxch
and
ljmp
inc
popf
das
push
outsl
stc
xchg
es
outsb
lret
fsubr
mov
xchg
in
or
lods
ds
push
sahf
jbe
je
in
dec
inc
mov
ss
push
adc
ja
push
sahf
rol
push
fildll
shl
call
xlat
jne
cmpsl
jbe
sbb
push
push
scas
cmp
xchg
add
mov
pop
rorl
xor
mov
arpl
add
xor
mov
and
inc
push
xchg
mov
xor
sahf
fidivl
mov
ds
cmp
mov
fisubrl
pop
dec
shl
out
leave
sub
int
inc
xchg
out
xchg
and
lock
adc
jns
or
pop
out
ficomps
xor
fs
sbb
jae
icebp
fldl
and
mov
dec
jbe
ret
repz
shll
ds
inc
dec
inc
push
scas
inc
inc
add
mov
pop
lods
ret
add
dec
push
in
adc
or
loopne
sbb
lcall
negb
nopl
push
rcll
sub
arpl
pop
push
mov
and
pop
sbbl
cmp
jne
cltd
xchg
insb
mov
lcall
fcmovnbe
xchg
outsl
out
add
push
and
lcall
cmc
mov
std
shrl
mov
push
mov
dec
ret
ljmp
pushf
in
imul
xchg
dec
inc
sbb
pop
out
add
pushl
ljmp
mov
fidivrl
jo
test
fwait
aad
repz
mov
and
fisubrl
imul
or
mov
sbb
imul
imulb
mov
mov
dec
cmpsb
pop
icebp
cmp
stos
notb
jmp
test
imul
js
hlt
add
cwtl
adc
daa
addb
adc
sahf
jp
fidivl
pop
pop
jg
aam
loopne
testb
jmp
xor
adc
jmp
inc
mov
xor
jns
inc
sbb
fildll
clc
out
pop
in
jge
shlb
mov
outsb
mov
scas
and
test
push
in
mov
and
sti
nop
dec
bound
jo
push
fstpt
fs
lret
add
je
mov
cmpsb
testl
out
dec
mov
mov
sbb
sbb
cltd
imul
ss
push
stos
cmpsl
pop
test
mov
mov
popf
xchg
and
pop
jns
shl
aaa
fdivs
jb
outsb
leave
dec
dec
ret
call
scas
in
and
es
inc
out
pushf
jb
rcl
stos
sub
sbbb
js
sbb
jbe
mov
cmp
inc
jle
dec
xchg
cwtl
popf
addr16
inc
stos
jae
cmp
cld
add
testl
jo
mov
nop
sub
nop
andb
adc
in
cs
mov
push
adc
xor
dec
xor
fsts
xchg
xor
cmp
loope
popl
cld
in
push
leave
mov
adc
sbb
test
sub
push
idivl
mov
dec
jnp
mov
mov
hlt
mov
cmp
out
pop
fmull
sbb
mov
mov
cmc
mov
and
push
sar
fdivs
jp
xor
lret
popa
sahf
ja
test
jge
mov
sbb
bound
scas
lahf
cld
out
mov
mov
inc
fidivl
or
pop
xor
jge
arpl
and
inc
lea
xchg
ds
imul
jl
sub
dec
shrb
and
fnstsw
neg
inc
fldt
dec
movsb
data16
repnz
cmp
cmpsb
jnp
nop
and
rclb
sbb
sub
sarl
push
push
mov
scas
insl
fistpll
test
pop
pop
enter
xor
jecxz
pop
mov
pop
cmp
or
inc
inc
push
xchg
xchg
pop
jno
adc
or
sbb
or
aas
inc
cmp
and
out
dec
mov
mov
adc
adc
das
lock
push
mov
mul
push
mov
pushf
xchg
jo
daa
pop
sbb
cmp
sub
das
hlt
hlt
jae
test
mov
test
loop
xchg
pop
sahf
or
gs
jae
xorl
push
push
call
or
outsl
cli
adc
ljmp
xor
aaa
int3
jl
and
int
outsb
aaa
pop
mov
push
ret
out
jl
fdivl
cltd
mov
dec
stc
jp
mov
sbb
pop
mov
stc
lock
bound
xchg
aaa
pop
add
rorl
xchg
sarb
pop
sbb
jecxz
lock
arpl
lods
out
rorl
inc
cmp
inc
xlat
iret
mov
adc
jns
jo
popa
adc
jns
xchg
mov
repnz
lds
inc
mov
mov
jno
mov
mov
dec
mov
mov
stos
out
pushf
add
sub
clc
repz
jo
pusha
or
fidivrs
jl
add
dec
aam
add
dec
xlat
fnstcw
call
dec
dec
cmp
push
jae
sub
roll
inc
inc
pop
adc
push
dec
inc
pop
orb
or
xor
enter
movlhps
xchg
xchg
les
mov
mov
xchg
pop
or
and
dec
and
repnz
push
sbb
sub
int3
sbb
arpl
pop
sub
insb
dec
mov
push
jecxz
add
in
scas
pop
into
mov
cmp
scas
sti
adc
jne
pop
cmp
pop
nop
sbb
scas
inc
insl
lods
pop
sbb
imul
scas
mov
cmp
add
lea
hlt
push
mov
xor
clc
sbb
cmp
mov
sbb
mov
cwtl
les
std
es
arpl
mov
add
mov
mov
test
inc
lcall
xor
test
imul
xchg
daa
das
mov
and
pop
mov
jl
adc
cmp
testl
mov
xchg
fs
lds
rorl
push
pushf
sahf
repz
ret
ds
fstpl
push
mov
cmp
xor
cmp
adc
mov
sti
sbb
mov
cltd
add
mov
and
or
je
push
call
inc
cwtl
sub
cmp
rcll
fildll
jp
adc
ds
mov
jp
lahf
in
movsb
mov
dec
std
cmp
frstor
loop
lods
xchg
sub
popf
push
pop
es
in
incb
jb
shll
inc
ds
mov
or
mov
imul
push
lret
lods
push
out
lret
xor
and
cwtl
xchg
push
movsb
adc
icebp
jp
add
pop
clc
hlt
lret
js
push
in
stc
xor
movsb
mov
das
scas
fs
and
sub
shlb
into
fdivrs
cld
in
cmp
xor
repz
mov
fimuls
jge
push
dec
adcb
xchg
and
xchg
add
mov
push
shlb
das
mov
scas
fiaddl
add
or
xor
stc
push
jmp
mov
es
test
dec
cwtl
or
cmp
mov
mov
bound
inc
dec
fisttps
movsl
push
movsl
mov
jae
movsl
add
lcall
cmpsb
inc
std
fcmovbe
in
stc
sbb
jecxz
inc
mov
sbb
popl
adc
js
pop
push
push
dec
jp
xlat
ret
in
or
push
daa
outsl
test
dec
adc
mov
int3
xor
xor
sahf
dec
je
clc
dec
orb
aad
dec
cmp
cmc
nop
lods
int
push
push
push
dec
lret
aad
add
xor
and
jo
adc
popf
adc
inc
add
mov
cmp
xchg
xchg
mul
dec
dec
fwait
cltd
mov
pop
test
outsl
push
loopne
xor
fs
cmp
iret
rcrl
inc
imul
lret
sbb
cltd
pop
mov
xor
mov
sahf
mov
aam
jno
cmc
testb
lods
or
cmp
leave
ja
jno
aaa
cmp
cmp
sbb
mov
pop
das
out
push
adc
je
cmpsb
scas
hlt
xchg
fistl
push
xchg
jbe
pop
cmpsl
pop
divb
pop
pop
ss
int
lahf
fisubrl
jge
imul
dec
iret
jno
arpl
add
xchg
jmp
pop
and
mov
fildll
lds
mov
xchg
cmpsl
lods
into
jnp
repz
pushf
xor
push
jno
imul
mov
ffreep
push
lahf
andl
and
repnz
call
popa
jno
mov
and
mov
dec
cmc
mov
loopne
adc
and
mov
in
xchg
inc
mov
lods
cmc
sbb
icebp
jns
or
and
or
lcall
in
sti
icebp
push
in
mov
cmp
push
shr
shlb
mov
xlat
leave
pop
rcr
std
out
adc
mov
neg
and
scas
clc
pop
in
pop
jp
jmp
lods
movsb
xchg
and
lea
sahf
xchg
cmp
mov
stos
in
jg
int3
xor
aaa
test
loopne
in
xor
mov
dec
js
or
out
cmp
add
add
in
movsl
cltd
rcl
clc
test
insb
xchg
cltd
mov
pop
jne
dec
mov
in
mov
insb
lcall
sbb
jg
aas
insl
test
sbb
ret
aas
ret
ds
cld
aas
jne
jg
int3
push
test
or
fdivs
push
add
sbb
xor
testl
mov
jl
stc
lret
sbb
mov
ss
pop
mov
ds
stos
aaa
xor
push
adc
dec
xor
adc
cmpsb
jl
fidivrs
cmp
push
js
sub
jb
js
adc
fimull
enter
ljmp
jle
sbb
int
or
dec
xor
out
ja
add
and
xchg
lock
stos
dec
out
lds
cmpsl
cmp
pop
inc
add
rorl
gs
cltd
pop
sbb
or
fsubr
mov
lahf
fsubs
jb
incb
xor
adc
repnz
jp
mov
cmpsl
daa
jne
sbb
stc
stos
or
or
rclb
jne
inc
les
jmp
cmp
and
test
mov
mov
push
xchg
vphaddwd
xchg
sub
repnz
dec
ja
and
pop
fcomps
fisttpl
mov
stc
mov
aas
sarl
cmc
xlat
out
testl
add
xor
push
mov
cltd
and
rolb
lret
mov
pop
add
mov
mov
ja
cmpsb
pop
fcomp
inc
xor
outsl
jo
das
fs
inc
stos
or
mov
dec
jns
lock
jle
hlt
cld
ret
mov
jg
mov
lret
cltd
lds
loopne
push
das
jo
inc
xchg
pop
insb
cmp
mov
push
frstor
cmp
inc
fs
mov
jbe
inc
imul
push
push
es
orw
scas
movsl
jmp
ror
cld
mov
lcall
sbb
repnz
dec
loope
out
adc
lret
sbb
push
rcl
lods
mov
mov
mov
mul
sbb
inc
sbb
leave
cmp
int3
arpl
push
pop
cmp
xchg
clc
in
and
adc
fistl
stos
adc
sub
in
dec
jge
dec
sti
in
mov
xor
enter
mov
mov
sbb
test
mov
jno
mov
ds
fildl
insl
ds
and
pop
mov
ret
push
imul
data16
mov
sub
insl
lret
adc
sti
mov
cltd
push
jle
mov
data16
vmaxps
movsl
into
jmp
add
mov
lods
clc
lea
mull
xor
push
lods
mov
push
xchg
jne
jmp
mov
cmp
and
and
jmp
jne
shr
fcmovnu
lcall
inc
pop
adc
push
hlt
mov
gs
xor
shrl
cmp
inc
and
dec
aas
jb
xchg
jge
test
jg
lods
jae
push
aam
stc
pop
adc
mov
sbb
dec
push
push
hlt
sub
fwait
push
ja
ret
lret
sbb
push
adc
xchg
mov
sbb
and
mov
lcall
nop
in
repz
jl
insb
cld
lock
inc
cmc
arpl
lods
jmp
adc
pusha
pop
test
loopne
xchg
sub
sub
subb
push
aad
stos
cmc
into
js
mov
ret
jmp
push
idivl
xor
mov
packsswb
xor
jnp
shl
std
push
add
andb
outsl
xchg
daa
subb
ja
xchg
jle
inc
pop
cmc
jae
lcall
sbbl
lds
subl
or
mov
dec
adc
xchg
jle
dec
in
push
pop
xchg
adc
test
aam
dec
dec
insl
xor
je
jle
scas
imul
xchg
dec
xchg
les
aas
mov
sub
jmp
repz
dec
lods
es
cmp
mov
jle
cld
jb
push
mov
pop
out
or
pop
call
iret
sbb
push
mov
fbstp
sub
loope
sbb
insb
mov
cli
xchg
sub
sarb
dec
lods
stos
sbb
aaa
add
inc
jg
inc
xor
inc
fdivr
lods
or
daa
push
adc
jmp
adc
push
mov
xor
add
std
pop
nop
rcrl
insb
pop
mulb
aad
pop
shr
les
xlat
stos
xchg
pop
sub
mov
or
push
out
adc
psrlq
stos
adc
and
mov
cs
jns
pop
ret
sub
mov
outsl
mov
and
mov
pusha
sbb
mov
aas
jmp
bound
icebp
js
jnp
add
jbe
xchg
fdivrp
sbbl
and
pusha
addr16
push
adc
adc
data16
in
enter
aam
daa
push
xchg
into
sbb
xchg
xor
cmpsl
aaa
fdivrp
lahf
dec
pop
sub
add
shlb
sarb
in
dec
sbb
mov
dec
call
in
jne
jb
mov
push
xchg
ds
push
sti
pop
mov
mov
push
mov
dec
xchg
and
std
ret
mov
cmpsl
std
lret
adc
sbb
hlt
lcall
pop
test
loope
sarl
clc
ret
aam
sbb
popa
and
or
scas
mov
es
push
and
cmpsl
aaa
mov
add
mov
cld
dec
cmp
dec
divb
fidivrl
ljmp
jl
push
xchg
push
jge
xor
jb
outsl
test
pop
cmp
inc
out
mov
adc
imul
aam
mov
daa
js
inc
mov
pushf
lea
js
push
into
xor
mov
xor
fs
daa
sub
adc
ljmp
lahf
mov
dec
adc
ret
adc
pop
push
inc
adc
into
fimuls
inc
lcall
xor
push
cld
inc
popa
adc
jle
mov
sub
mov
bound
sarl
bound
mov
mov
in
rolb
pop
pop
push
and
push
les
call
jae
inc
add
jb
lds
pop
add
mov
enter
push
sub
add
jp
add
divb
xorl
repz
sahf
js
ret
xchg
mov
xchg
int3
es
in
inc
mov
cltd
add
shrb
test
or
lret
icebp
sarb
jmp
jmpw
push
sahf
into
insl
ret
xchg
add
mov
fidivs
cmp
aad
pushf
inc
loop
dec
jne
pop
xchg
jge
push
adc
cmp
shll
fxch
adc
xchg
rcrb
dec
int
cmp
add
idivl
leave
int
mov
movsb
mov
cmpsl
jb
add
cmp
test
pushf
cld
les
stos
mov
fisubrs
xchg
insl
inc
in
cs
ror
lret
inc
jns
jnp
in
insb
sub
cwtl
dec
addr16
cltd
push
lahf
xchg
mov
pop
mov
xor
fisttps
aas
sbb
in
enter
pop
mov
xchg
insl
xchg
sahf
mov
push
mov
cmpsb
xchg
adc
or
sbb
push
jge
repnz
or
xlat
sub
adc
cmpsb
xchg
loopne
pop
dec
aam
movsb
in
pop
outsb
dec
arpl
xorl
cmp
test
jg
or
mov
xchg
mov
sub
sbb
lock
stos
mov
fsts
es
mov
sub
xchg
nop
or
push
xor
nop
fmul
cmp
aas
lds
fstpt
mov
sbb
sub
xchg
inc
add
jecxz
cmp
popa
inc
xchg
enter
pop
add
cmpsl
or
lds
ss
stos
ret
cmp
out
repnz
ja
dec
cmp
fistpl
std
jnp
or
cmp
jecxz
repnz
push
blcs
and
ss
and
jge
mov
jmp
shl
pop
incl
mov
push
or
push
cwtl
sar
and
lcall
shlb
pop
sub
xchg
push
outsb
lahf
in
mov
rol
dec
dec
ret
jmp
imul
arpl
repnz
cs
or
inc
cs
data16
rcl
movsl
sbb
sub
jnp
inc
jle
jmp
andb
dec
shl
xchg
outsl
xchg
int
xor
jo
int3
push
cltd
cld
adc
data16
neg
arpl
sub
shrb
mov
pop
sub
and
mov
jae
mov
sub
jbe
push
mov
jge
mov
das
icebp
aas
jo
xchg
icebp
ret
fs
test
stos
jge
scas
fcompl
xor
dec
jg
arpl
jl
orb
cmc
sub
fistpl
lods
stc
xor
test
nop
icebp
mov
imul
jmp
repnz
mov
xchg
out
pop
xlat
inc
jle
inc
cs
fidivrl
jg
xlat
or
and
add
mov
cli
call
jo
push
mov
nop
sub
xor
sti
iret
mov
mov
roll
nop
inc
cld
vcvtss2sd
mov
push
mull
jle
xchg
movsl
adc
xchg
pop
sub
fwait
ds
outsb
imul
jnp
mov
mov
clc
pop
lea
les
popf
jns
test
fisubrs
and
jae
adc
sbb
jnp
push
fiaddl
or
mov
and
jae
or
addr16
fcmovnbe
call
and
mov
lcall
mov
ret
jl
mov
cmp
jne
pop
mov
or
data16
shr
lcall
xchg
push
adc
xchg
or
sbb
hlt
out
mov
mov
test
rcl
or
lret
mov
dec
shl
ret
lods
data16
pusha
aas
jbe
int
jle
inc
pop
lds
xchg
mov
cmpsb
add
pop
arpl
xchg
xlat
lret
fadd
add
adc
mov
inc
mov
push
lea
in
ljmp
sub
repz
mov
fwait
push
dec
inc
mov
iret
inc
mov
adc
dec
je
lcall
fstpt
jnp
push
movsb
mov
mov
jb
pop
push
jle
rcl
mov
cmpsb
out
and
mov
add
push
movsb
jno
cwtl
fnsave
scas
loopne
xchg
insl
mov
cmc
cmc
filds
fs
pop
in
xor
sub
xor
or
hlt
aad
push
cmpsl
lcall
inc
ds
lock
das
stc
ja
xchg
mov
ficompl
fstps
orl
cmp
and
test
add
adc
inc
inc
inc
lods
mov
dec
ret
mov
jl
push
pusha
clc
mov
inc
cmpsl
pop
pusha
push
mov
fidivs
sbb
test
push
fstps
mov
fbld
mov
mov
in
pop
xor
punpcklbw
scas
sub
adc
xchg
cmc
mov
ljmp
vmovsd
push
push
or
stc
adc
cmp
shl
push
ja
test
pop
orb
or
test
jnp
addb
sbb
jo
jmp
jne
mul
xor
mov
cmp
pop
lret
push
into
loope
xor
xchg
jno
loope
imul
sbb
dec
sbb
dec
add
scas
sbb
stos
shlb
jbe
push
xor
inc
fistps
aas
inc
in
lds
cwtl
inc
push
sub
insb
mov
insl
in
iret
adc
or
adc
inc
das
lahf
pop
pop
mov
and
xchg
cltd
add
mov
fdivrs
inc
fsubrs
dec
mov
ficoml
sub
push
xor
jl
jbe
fimuls
jle
loope
scas
xchg
add
sbb
lea
mov
lret
or
and
fcmovb
inc
out
mov
mov
daa
repz
mov
in
loop
mov
lods
stos
icebp
divl
popf
aam
xor
fstp
scas
bound
pop
dec
js
fisttpll
dec
xor
dec
inc
adc
push
bnd
jno
rclb
pop
scas
push
pushf
mov
pop
sub
xchg
test
xchg
add
incl
sbb
adc
xor
insb
fbstp
mov
popa
jge
xor
sbbl
mov
das
mov
xlat
mov
pushl
dec
push
lret
clc
daa
sub
jecxz
xchg
dec
outsb
jg
or
and
sbb
inc
push
add
arpl
into
adc
ror
cmp
mov
mov
pushf
jbe
dec
adc
lret
push
dec
int3
addl
xchg
adc
mov
cwtl
push
push
jbe
clc
sub
xchg
sub
adc
dec
loop
shll
xor
insb
cmpxchg
push
cltd
call
xchg
pop
and
xchg
in
xor
dec
shr
cmpsb
stc
jg
in
fsincos
pushf
out
jae
out
push
mov
jbe
sub
popa
push
popa
xchg
out
lods
and
and
jmp
mov
call
gs
mov
mov
mov
ljmp
insl
mov
push
pop
push
aad
mov
adc
cmc
mov
add
cltd
fidivrs
mov
ret
mov
xchg
divb
idiv
push
mov
lret
imulb
sub
repz
or
add
dec
daa
jbe
cltd
loope
pop
fldt
pop
mov
inc
inc
aad
test
jp
loopne
mov
out
gs
iret
inc
add
or
jecxz
icebp
dec
sahf
pusha
add
mov
xchg
pop
in
call
lods
mov
sub
push
cmp
or
insl
add
dec
pop
sbb
pusha
je
inc
imul
xchg
jbe
int
and
std
popf
lahf
sbb
cmpsb
test
add
pop
xchg
mov
rorl
lods
negb
dec
arpl
pop
xchg
push
enter
lods
testb
inc
jo
les
xchg
jb
push
test
mov
mov
jnp
mov
sbb
lret
sbb
or
mov
cmp
inc
in
jmp
lahf
sbb
dec
xor
std
xor
sbb
lods
sbb
loop
xchg
pop
cmp
cmp
push
orl
inc
pop
sub
jg
adc
aad
mov
adc
movb
jbe
mov
fs
push
pop
arpl
push
mov
dec
sub
or
cmpb
xchg
mov
push
bound
pop
shrl
sahf
ret
aad
xor
sub
lcall
adc
jl
shrl
rol
inc
clc
jne
sub
and
popf
mov
pop
adc
fidivrs
or
jp
data16
push
ret
adcl
jg
dec
lods
mov
dec
push
mov
mov
sbb
stos
inc
cli
and
inc
xor
sbb
add
in
dec
aad
mov
jecxz
imulb
adcb
cli
xor
out
scas
ds
lds
and
inc
iret
es
adc
test
push
movsb
vpmacssdql
adc
xchg
push
jp
pop
jae
sarb
rcrl
mulb
lahf
popa
ret
cs
sbb
jle
xlat
add
in
fcomps
sub
into
fcomi
mov
and
dec
mov
xchg
addr16
xor
mov
xor
cmp
or
sbb
push
call
pop
and
or
js
mov
ja
jnp
dec
scas
and
inc
cmp
shlb
orb
ficomps
or
add
outsl
dec
adc
mov
dec
or
jp
rorb
xor
aaa
lahf
dec
xor
popl
stc
lahf
imul
faddl
jmp
cmp
fistpl
out
sbb
jo
jo
xchg
xchg
cld
sub
leave
sbb
adc
cli
ss
mov
sub
testl
pop
sub
outsb
xchg
dec
push
pop
xor
data16
pushf
jl
xor
fdivr
xor
dec
js
leave
in
dec
xor
iret
xlat
aas
data16
jecxz
or
enter
sub
outsb
jg
lea
or
sub
jg
inc
lods
push
lea
ret
loope
and
adcl
fisubl
lds
sbb
int
xlat
lods
into
pop
dec
js
adc
xchg
enter
mov
mov
gs
cmp
lcall
cs
lods
adc
loopne
pop
stc
pop
cmpsb
jb
test
loopne
xchg
push
int
xchg
pop
ss
sete
inc
in
pop
and
jmp
fstpl
xor
shl
ja
arpl
lahf
mov
xor
ja
xchg
outsb
loop
cltd
inc
mov
mov
nop
sub
and
jmp
and
shl
mulb
pusha
pusha
xor
fwait
addr16
xchg
push
jnp
arpl
and
push
ret
sub
or
ja
inc
xchg
loopne
std
pushf
pop
push
xchg
int
dec
push
popa
call
mov
sbb
lahf
pop
movl
test
inc
cmp
jg
adc
hlt
or
and
sbb
and
int3
sub
sbb
ret
or
push
sub
icebp
pop
or
xlat
inc
dec
scas
dec
jmp
es
test
stos
fisubs
add
pushf
loope
mov
mov
pop
imull
sub
xchg
std
dec
mov
repz
cmp
stos
sbbl
sbb
xor
js
sub
push
ret
jl
test
mov
jecxz
xchg
inc
sbb
in
add
into
cmp
pop
sti
js
repnz
sbb
sub
mov
fcmovu
mov
sub
cltd
inc
sti
adc
int
or
cltd
cmp
outsb
jge
lahf
ljmp
push
adc
xchg
in
add
es
insb
push
lock
sarl
out
fnstcw
add
loope
hlt
push
scas
add
lea
out
jge
loope
loopne
js
ret
fwait
cmp
xorl
adc
mov
in
mov
lahf
icebp
pop
adc
xchg
movsb
ret
sti
dec
push
push
jne
fnstsw
mov
decl
or
push
xorl
lea
mull
cmc
mov
xor
fcoms
push
and
pop
out
pop
in
jne
xor
or
xor
push
jp
sbb
cmp
add
mov
cmp
mov
adc
mulb
push
or
mov
mov
sahf
cmc
push
mov
lea
out
loopne
scas
gs
sbb
lods
cwtl
ret
and
or
and
dec
or
cmp
fidivrs
inc
mov
cwtl
jns
addr16
jno
popf
mull
push
fistps
sbb
popf
sub
mov
pushfw
mov
loope
popa
jmp
pop
pop
stos
jno
int
mov
aam
arpl
sbb
pop
outsl
pushf
jecxz
cltd
inc
pop
test
inc
sbb
in
cmp
and
inc
jns
pop
pop
mov
sbb
mov
ja
xchg
aad
or
dec
add
and
out
leave
ljmp
ss
inc
test
lret
lahf
lock
or
dec
xchg
mov
adc
push
add
movsl
pop
arpl
fbld
and
xor
and
mov
jnp
cwtl
iret
mov
push
push
mov
mov
and
or
rcrl
dec
in
in
jbe
inc
fcom
inc
dec
inc
cld
lock
sub
fdivl
sub
or
jns
inc
imul
xchg
mov
loop
ss
inc
mov
or
dec
xor
test
adc
xchg
pop
aam
out
xchg
and
mov
jb
pop
dec
pusha
ret
loopne
mov
hlt
test
jmp
inc
sbb
and
lcall
mov
sahf
ljmp
sbb
jo
dec
scas
mov
in
adc
sahf
push
mov
mov
push
cmpb
or
jo
cli
sub
xlat
jl
sbb
test
aam
mov
sub
fxtract
adc
jg
or
in
in
mov
inc
call
rcrb
dec
mov
or
in
jp
xor
popa
int
dec
js
aad
negb
test
push
push
sbb
sub
or
arpl
sbb
sbb
adc
pop
inc
idiv
stos
add
sahf
inc
jne
jge
xchg
adc
mov
add
std
sbb
les
inc
fwait
and
cmp
lods
pop
dec
push
and
imul
ss
push
mov
jb
arpl
es
jecxz
bound
jnp
rcrb
xor
push
popf
insl
data16
mov
jge
arpl
ret
cmp
or
int3
dec
dec
adc
mov
popa
dec
cmp
jae
xor
or
sub
or
test
push
mov
test
rorl
jno
jmp
loop
aam
push
fdivl
cs
enter
pop
mov
xchg
cli
add
or
xor
ret
mov
inc
ja
xchg
test
or
clc
or
outsb
and
push
jmp
jg,pn
cmp
bound
dec
inc
inc
sub
ja
mov
pop
adc
fs
inc
inc
sbb
popa
adc
les
push
pop
mov
adc
inc
or
xchg
insb
in
lcall
movl
fbstp
xor
pop
cmc
iret
lret
mov
sub
jp
ret
mov
add
sub
cmp
mov
and
cwtl
je
bound
sbb
shlb
test
or
or
movsb
lahf
lret
out
std
pushf
mov
test
dec
ds
in
pusha
cmpsb
outsl
fadd
in
repnz
aam
sahf
fidivrs
in
and
xchg
xlat
xchg
dec
mov
push
lock
add
fisttpll
dec
mov
ret
jecxz
jae
lahf
test
mov
sbb
loope
adcb
lahf
jg
add
data16
pop
cmpsb
xor
fwait
sbbl
testl
aaa
out
iret
cld
sub
pusha
mov
testb
jp
cld
dec
jne
push
ds
inc
mov
sti
jge
aas
pop
inc
push
pop
sub
addr16
pop
cmovl
or
orl
repz
xchg
pop
jmp
movsb
and
push
imull
jno
add
cmpsl
pop
mov
or
fsubrl
pop
push
xchg
push
fdivrs
add
sbb
outsb
repnz
ja
or
outsl
jge
xchg
aad
mov
in
jg
dec
shll
jb
inc
pop
or
cmp
pop
out
xor
movsb
fidivrs
jmp
int3
xchg
jecxz
nop
fwait
shrl
cmc
popf
ss
inc
cwtl
add
xchg
cwtl
lcallw
lret
sub
test
push
mov
decl
sub
outsl
jl
or
mov
je
ja
cmpsl
ret
movsl
popf
push
jb
xlat
cmp
call
xchg
daa
push
lret
pop
stc
mov
test
dec
xchg
jp
xchg
pop
or
pusha
adc
jae
leave
insl
int3
mov
bound
xor
fsubrp
push
nop
mov
es
jb
sbb
nop
loop
pop
or
test
imulb
sub
in
jl
sbb
xor
pop
pop
mov
push
mov
sbb
in
cmp
addr16
cmpsb
or
enter
out
out
mov
xor
or
insl
sbb
fs
xchg
xor
insb
popf
push
dec
cmp
jge
xchg
xor
dec
stos
outsb
sahf
push
pop
sub
dec
fbld
inc
mov
shll
scas
lea
pop
je
dec
dec
movsl
mov
insl
lahf
dec
pop
scas
pusha
jno
ds
mov
loop
pop
add
adc
pop
ljmp
cld
testb
pop
mov
jae
mov
popf
test
mov
les
mov
add
jno
daa
mov
lret
mov
sbb
insb
add
jge
cmpsl
jl
cmp
popf
mov
lods
adc
xor
push
inc
xlat
cld
flds
loop
cmp
pusha
in
lock
test
dec
movsl
out
inc
and
and
push
pop
fnsave
sbb
jecxz
jle
aam
dec
push
cmp
dec
dec
lret
jmp
out
pop
out
daa
das
test
jp
pushf
ror
inc
sbb
imul
repnz
sti
mov
dec
mov
inc
jns
test
xor
popf
add
stos
mov
or
push
inc
stos
loopne,pn
in
push
dec
lods
je
add
icebp
mov
and
ljmp
das
dec
in
push
pop
rorl
ret
xchg
inc
std
xor
aam
rcll
bound
test
mov
fwait
orb
imul
mov
sbb
std
mov
shll
inc
aad
mov
inc
push
mov
sub
in
push
or
shlb
adc
imul
mov
loope
xchg
jg
mov
or
push
gs
push
and
fstps
test
mov
shlb
in
scas
loopne
fcomi
inc
mov
shll
pop
add
stc
sub
hlt
testl
scas
xor
xlat
movsl
std
push
mov
shrl
lahf
out
and
fldt
repz
popa
dec
mov
ret
movsb
add
mov
cld
jecxz
fwait
scas
hlt
dec
jne
iret
or
sbb
dec
subl
jb
ror
inc
lods
push
lods
andl
dec
push
stos
std
cmpsl
flds
outsb
in
jo
ss
xchg
pop
xchg
xor
daa
adc
mov
mov
adc
jno
inc
cld
or
jne
mov
dec
pop
bnd
fld
ljmp
testb
data16
cmp
jno
stos
mov
scas
cmp
xor
addr16
iret
loopne
int3
out
jmp
pop
out
fdivrs
adc
nop
mov
movsl
jmp
mov
test
and
add
push
arpl
scas
xor
xchg
pop
shlb
ds
inc
push
adc
mov
push
and
aad
inc
pop
lock
mov
mov
insl
cmp
mov
adcl
leave
or
pusha
jnp
and
das
mov
mov
jl
add
leave
mov
iret
mov
lods
jb
mov
mov
das
dec
fcomps
cmp
cmpl
test
mov
lcall
imul
incl
mov
mov
adc
fs
pop
popf
daa
and
sti
int
mov
scas
mov
repz
adc
sbbb
pop
cli
or
pop
jb
cmpsb
lds
ret
pop
cs
test
call
sbb
fs
lahf
je
pop
inc
enter
mov
daa
mov
insl
jbe
mov
add
leave
jns
cmp
adc
stos
cld
into
push
mov
inc
fs
in
adc
xlat
ds
shlb
or
cli
ja
add
iret
jno
imul
leave
test
jb
adc
mov
sbb
cli
mov
fistps
mov
push
xor
imul
pop
pop
test
sbb
mov
mov
xchg
icebp
inc
fsubr
jecxz
aad
pop
aaa
cmp
fstpt
inc
into
jno
sbb
inc
pextrw
outsl
cwtl
xchg
inc
mov
out
pop
dec
sahf
cmc
test
leave
push
rolb
mov
xor
into
push
and
cmp
daa
xchg
jnp
mov
mov
dec
iret
xchg
mov
addr16
or
in
jo
jmp
lret
dec
sbb
jp
mov
incb
xor
daa
pop
xchg
popf
jo
jmp
test
push
pushl
xor
jmp
insb
rcrl
lock
in
mov
pop
inc
sbb
jne
lods
cmpsl
adc
adc
comiss
add
test
cmp
sbb
and
adc
negb
sbb
pop
jns
cs
call
stos
mov
and
add
mov
xor
call
call
jge
rcrl
xchg
mov
ret
jno
mov
xor
aas
outsb
xchg
enter
test
mov
inc
push
xor
xor
call
push
dec
pop
scas
xor
inc
xor
cmpsb
scas
arpl
and
push
mov
cmp
add
inc
daa
push
push
sbb
add
dec
adc
or
cmpsl
movsl
neg
or
push
jecxz
mull
cmp
sbb
xor
and
orl
int3
xor
enter
push
jno
and
movsb
gs
jecxz
aaa
inc
testb
and
gs
xchg
adcb
jo
insl
push
push
popf
rcr
sahf
jbe
aaa
popa
daa
pop
orl
call
add
push
ja
push
test
push
pusha
std
loope
mov
je
je
fwait
lret
lds
movsb
addr16
testl
sbb
sub
mov
mov
pop
fcomps
stc
sub
xchg
dec
stos
and
push
push
pop
cmp
or
jecxz
xor
bound
mov
js
test
jp
fstpl
mov
sbb
lret
pop
lea
int
movsb
dec
test
or
cmp
xor
sbb
xor
lods
cmp
stos
xchg
jg
pop
and
loop
jne
xor
push
je
ds
push
adc
push
or
mov
push
sbb
test
lret
ficomps
jns
orl
test
pop
fwait
mov
or
mov
dec
fsts
addr16
inc
mov
pop
cmp
pop
cmp
jecxz
mov
in
in
xchg
xor
pop
mov
adc
mov
je
push
jo
mov
xor
cmc
cwtl
add
xchg
and
inc
or
gs
stos
jae
cmp
fsubrl
adc
loop
fidivs
imull
pop
pop
add
sti
xchg
or
cmp
rclb
xchg
cld
adc
sub
fwait
dec
pop
int
inc
bound
add
mov
ss
mov
loope
cmp
jl
aam
pop
pop
pop
imul
xchg
inc
jno
ds
adc
ljmp
and
shrl
out
loope
insl
test
enter
jae
mov
push
enter
jbe
ljmp
xor
out
std
push
xchg
inc
and
andl
push
mov
fisttpl
repnz
jo
mov
cmpl
push
add
inc
das
jge
adc
jno
scas
and
pop
xlat
sahf
fistl
sub
lcall
lock
cli
xor
clc
lods
sbb
cli
push
imull
je
fsubs
stos
xor
dec
xor
push
andl
lret
loope
int3
mov
les
push
inc
mov
loopne
out
sbb
int3
mov
push
mov
cmpsl
mov
or
pusha
or
mov
lods
add
xchg
jns
xchg
push
cmpb
or
pop
iret
stos
sub
fldcw
loopne
mov
add
es
mov
xchg
ja
jb
ds
jne
mov
and
data16
sub
xor
hlt
jl
jnp
xchg
jo
or
jp
ss
mov
cs
insl
inc
pushf
lods
jae
stc
mov
or
ja
pop
fldt
repnz
mov
xchg
sub
pushf
sti
xchg
xchg
lahf
jae
xchg
sti
adc
jno
addr16
sub
iret
jl
mov
bound
pop
xchg
mov
push
pop
sub
push
push
xchg
negb
shr
ret
lods
and
jge
js
cmp
add
movsl
pop
and
lea
adc
movsl
mov
insb
addb
ss
aaa
dec
ss
sub
je
nop
gs
sbb
lea
mov
insb
push
das
sbb
xchg
out
inc
adc
cltd
inc
dec
cmp
imul
enter
nop
movsb
lcall
leave
iret
mov
fimuls
lea
sub
xor
ljmp
jne
mov
and
push
ficoms
dec
in
outsl
shll
fsubrl
les
ret
pop
aam
fisttpl
or
push
or
sub
fildl
push
es
orb
pusha
cmp
sbb
mov
mov
jmp
or
pop
push
into
xchg
out
jge
sarb
gs
dec
loopne
xchg
xor
clc
out
lcall
loop
clc
jae
or
ja
ljmp
mov
jl
cli
daa
mov
into
ljmp
insb
mov
pop
push
sbb
sbb
mov
in
sbb
loope
mov
or
xchg
addr16
pop
sub
mov
mov
cmp
rcl
xor
or
outsb
jle
add
incb
lcall
into
or
js
jge
sbb
jmp
sub
fisttps
add
inc
cmp
frstor
cmp
cmc
cmp
push
divl
xor
popa
fcoml
push
aad
int3
leave
jns
loope
jge
sbb
ret
ss
jge
and
les
mov
mov
out
mov
jb
in
or
ss
iret
push
adc
je
or
je
ret
add
push
and
into
adc
xchg
xchg
shrl
sbb
jnp
and
ljmp
sub
cmp
lcall
pop
and
fisttps
sbb
jae
out
test
int3
sbb
mov
pusha
adcl
mulb
push
ret
addb
pop
cmpsl
lcall
fdivp
mov
inc
int
adcl
test
or
sub
faddp
cs
les
ret
int3
aad
mov
cmpsl
es
ja
inc
daa
adcb
lods
movsl
test
int3
push
rcrb
es
incb
jg
mov
add
stc
mov
mov
push
pop
dec
adc
filds
jb
cltd
repnz
or
xor
or
xchg
mov
cmp
scas
mov
outsb
pop
xor
imul
cs
cltd
out
mov
es
pop
sub
pop
jae
addr16
cmp
mov
xlat
cmp
cli
pop
push
ja
mov
je
das
mov
jae
fsubp
testl
mov
add
daa
ja
xchg
js
in
cmp
pop
fiadds
loopne
lahf
mov
popa
cmp
jmp
and
cld
mov
mov
jb
imulb
call
lret
and
imul
inc
dec
bound
add
lret
cmpsb
fsubr
mov
test
or
rcrl
ljmp
orb
fimull
sarb
mov
adc
addr16
out
dec
movsb
cmpb
testb
push
sub
inc
mov
push
pop
lret
out
push
xchg
inc
add
mov
inc
and
fcmovu
xchg
push
cmpsl
out
pop
js
aad
mov
add
jbe
lahf
or
repz
in
out
mov
adc
pusha
inc
jp
and
add
sub
xor
mov
add
and
mulb
cli
mov
dec
xor
lods
scas
stos
imul
aaa
xor
adc
inc
push
and
addr16
mov
mov
out
fidivl
gs
aad
icebp
pop
jg
jno
repnz
mov
or
loopne
adc
xchg
out
pop
addr16
xchg
je
repz
repz
lods
jo
mov
pushl
push
addr16
xchg
mov
shlb
fmulp
jns
loopne
fsubr
pop
cmp
pop
fmull
mov
jg
mov
jae
cmp
test
push
pop
stos
incb
icebp
mov
bound
imul
sub
inc
sub
hlt
jp
loope
std
std
nop
nop
xchg
xchg
mov
push
test
cwtl
out
daa
sbb
lahf
bound
or
mov
les
xchg
pop
push
xor
int
iret
jmp
addr16
adc
jb
in
inc
test
xchg
aas
gs
push
int3
mov
mov
jo
imul
mov
sti
out
repnz
mov
test
xor
cld
stos
in
cld
xor
dec
sbb
shlb
xchg
es
jle
fmul
insl
dec
int
dec
cltd
push
in
sbb
mov
push
add
pop
sub
add
dec
jl
movb
xor
push
ds
and
or
inc
repnz
inc
lcall
pop
fidivrl
and
popa
jmp
mov
push
inc
mov
xor
repz
daa
addr16
fistl
bound
pinsrw
cmc
cmp
cmc
daa
aaa
aaa
fisubrl
ret
cmp
cmpsb
jmp
inc
sbb
sbb
mov
inc
rorl
sbb
xchg
imul
gs
ljmp
je
jno
xor
xchg
jl
pop
nop
dec
out
out
or
fstl
pushf
out
shrl
ljmp
shrl
mov
pop
mov
cmpsb
shlb
inc
movsl
sub
icebp
cli
dec
or
std
hlt
xor
inc
dec
in
cli
out
jne
imul
and
lods
cltd
xchg
or
bound
cwtl
rcr
dec
ja
faddp
sbb
pop
out
adc
push
mov
push
sahf
insl
mull
pop
scas
cmpsb
push
ds
jmp
imul
pop
lock
in
lret
idivb
mov
add
fucomp
cmp
movsl
nop
popf
and
dec
cmp
cs
lret
mov
std
push
lds
scas
leave
out
push
dec
jecxz
lock
ds
or
sub
and
and
ds
das
sub
adc
push
mov
cmp
imulb
loop
push
subl
les
into
sub
cmp
dec
in
icebp
lods
leave
xchg
lret
in
inc
mov
leave
pop
inc
mov
movsl
add
sub
lods
mov
mov
lcall
jae
fld
cli
or
cmc
testb
xlat
ja
xor
dec
push
jae
pop
idivl
cwtl
jmp
inc
xchg
movsb
std
clc
pop
xlat
test
gs
dec
jmp
imul
mov
push
push
jb
gs
dec
repz
testl
push
fsubrl
sbb
enter
ss
cmpsb
fsin
in
or
inc
ss
idivb
pop
push
test
sbb
adc
pop
test
outsb
arpl
sub
or
add
sahf
je
xor
les
or
movsb
fdivrp
mov
cmc
cmp
fs
cltd
fstpl
adc
xchg
jae
mov
cmp
pushf
push
push
js
inc
inc
sub
pushf
pop
mov
pop
in
scas
fldenv
pop
scas
xor
cmp
mov
push
push
outsb
loope
jle
popa
mov
sbb
push
cli
mov
cmc
aad
cmp
xchg
push
dec
sti
xchg
in
jne
stos
jp
cmc
and
ret
es
hlt
cmp
and
orl
fsts
cmp
fiadds
test
fidivl
test
ja
cld
and
jne
xor
lret
cs
pop
jb
aas
imul
xor
andl
xchg
loopne
push
inc
rorl
insb
dec
test
cwtl
out
add
cmp
insb
pusha
lds
and
cli
in
insb
sti
push
shlb
cmpl
xchg
and
jl
out
lret
mov
sub
sti
inc
leave
cmp
or
add
jne
dec
out
shll
repnz
ja
cmp
lds
enter
fisubs
adc
push
lea
lcall
pop
xor
addr16
pop
fldl
pop
std
in
divl
mov
push
cmp
add
lret
sti
adc
xchg
mov
mov
pop
mov
dec
sub
ret
ja
push
push
jle
mov
xchg
mov
pop
sbb
notb
pop
xor
jo
mov
cmp
cmp
pop
arpl
push
adc
or
xor
fadds
xchg
xor
or
ret
mov
mov
aaa
push
jg
jle
xor
test
faddp
stos
loope
dec
imul
lock
jne
lds
das
cmp
jnp
loop
test
movb
jo
in
mov
add
orb
out
lds
jno
push
outsb
clc
cltd
xor
xchg
mov
push
add
mov
out
fwait
mov
ss
loopne
adc
loopne
loope
xor
hlt
and
mov
ret
testl
pop
mov
lret
cmc
lret
dec
xor
add
clc
xchg
mov
test
fildl
sbb
xor
mov
lds
mov
xchg
imul
cli
enter
sub
inc
jle
mov
pop
mov
pop
add
adc
and
cmp
sarl
cmpsl
cld
lret
popf
jne
sub
sbb
sti
xor
insb
pushf
or
sub
push
or
or
add
jg
dec
je
movsb
pop
inc
cs
stos
inc
xlat
mov
xor
mov
lods
ja
dec
stos
popa
jae
jno
push
into
and
xchg
xchg
xchg
movsb
xor
mov
out
xor
or
decl
mov
xchg
aas
sub
mov
pop
in
cs
int
lret
push
ja
push
mov
mov
dec
in
aad
mov
jno
sbb
mov
ficoml
lret
dec
xchg
cmp
mov
movsb
xchg
or
out
mov
xor
jp
lods
push
ret
mov
cmc
cltd
cmc
adcb
and
outsb
mov
and
pushf
shr
out
pop
fwait
adc
addr16
aas
pop
add
push
pop
daa
imull
and
cs
pop
cld
cwtl
out
lahf
jge
movb
mov
cli
aas
jbe
or
or
je
add
ljmp
xor
lea
and
aam
push
push
add
xchg
pop
dec
lahf
push
mov
adc
stos
lods
scas
icebp
dec
dec
and
inc
jne
fisttps
mov
cmp
push
push
ss
jns
stos
movsb
and
jge
hlt
mov
clc
or
leave
dec
push
scas
lcall
cld
icebp
fcom
test
gs
test
das
rcrb
dec
dec
sahf
loop
sub
test
lds
cmp
in
dec
mov
cs
push
dec
and
push
mov
ljmp
mov
cmpsb
and
ds
pop
pop
cmpl
loopne
or
pop
cmp
adc
nop
mov
push
scas
int
lods
call
sub
or
dec
movzwl
jb
shlb
mov
sbb
in
cwtl
test
pop
mov
push
dec
test
jg
dec
scas
imul
lds
jae
mov
fists
mov
movsb
jp
fdivr
cmp
dec
or
ja
outsb
mov
jp
mov
pop
imull
or
hlt
jns
gs
movsb
ss
or
pop
inc
mov
aam
or
xor
sbb
repnz
sub
push
rep
pusha
lock
mov
push
or
mov
inc
pushf
and
xor
jl
jae
nop
notl
das
sbb
mov
push
decl
rsm
or
lock
xchg
pop
sbb
les
adc
push
or
out
out
ljmp
mov
mov
xchg
or
jbe
inc
push
jb
fisttpl
and
aaa
fwait
inc
push
fwait
popf
pop
xchg
cmp
sbb
in
mov
xchg
insl
mov
aas
and
sahf
incb
push
dec
sbb
pusha
jmp
pop
ljmp
filds
pop
xor
mov
pop
mov
xchg
aas
mov
dec
aaa
add
aad
xlat
add
jle
cmp
pop
aas
push
mov
sub
or
jecxz
pushf
inc
xchg
sarl
mov
out
mov
fcmovb
or
cltd
add
fadds
std
cmp
cmpsl
cmp
xchg
adc
ljmp
ret
ja
outsl
dec
stos
xchg
das
or
cltd
push
cmp
mov
xor
jmp
xlat
or
loope
cltd
mov
cmp
dec
jb
lret
imul
bound
pop
out
ljmp
add
outsb
rcl
xor
or
cli
into
cmp
jge
or
leave
js
jge
int3
add
iret
pop
dec
mov
mov
mov
sub
push
sbb
sub
out
pavgw
jl
enter
int3
in
inc
fimuls
jnp
aam
test
adc
mov
dec
cli
add
jg
or
inc
xlat
fbld
add
in
xchg
adc
mov
pop
aas
movsb
cmp
shrl
jbe
mov
outsb
adc
out
rcll
sub
mov
imul
aam
sbb
ds
cmp
sub
insl
or
sbb
scas
arpl
and
inc
push
jo
lahf
mov
push
stos
dec
and
sbb
mov
inc
jmp
jo
or
xor
fnstenv
push
les
out
shr
lods
ja
aam
call
xchg
lret
jp
lahf
lret
das
push
inc
cld
lcall
push
inc
dec
lds
lods
or
push
iret
xchg
mov
inc
sarl
das
pop
scas
aam
xor
daa
push
fstps
push
push
bound
sub
jo
or
decb
mov
add
cmp
test
movsb
inc
cmp
xor
ja
sub
cmp
add
mov
adc
cmpsl
jns
pop
cmp
es
fcoml
ds
lahf
cmp
cmp
out
pusha
mov
add
in
fidivs
fistl
inc
icebp
add
cmp
jbe
jmp
jecxz
push
dec
aas
sahf
mov
imul
xor
push
ds
jecxz
data16
cmp
push
xor
cmc
pop
pop
adc
clc
or
pop
xchg
dec
fcomps
push
mov
sbb
insl
xor
pop
add
clc
dec
rcr
loope
enter
or
in
fwait
sub
fimull
stos
leave
sbb
lret
mov
outsb
cmpsl
push
mov
inc
nop
mov
in
inc
pushf
sbb
jnp
mov
cmp
jmp
arpl
jmp
inc
and
les
cmp
dec
push
and
ja
xchg
roll
lcall
fidivs
mov
mov
and
mov
jle
andl
or
or
imul
cmp
add
jo
sbb
mov
pusha
faddl
cmp
aam
sub
pop
loope
pusha
arpl
pushf
cmp
aam
push
lock
frstor
and
add
xchg
mov
lret
test
cld
push
std
dec
enter
cmpl
in
inc
cmc
pop
cmpsb
sbb
add
mov
fsin
pop
lods
pop
fcoml
fsubrl
jne
sbb
faddp
add
sub
js
cmpsb
push
xchg
xchg
inc
pop
lcall
cmp
dec
inc
push
cmpb
jge
mov
sub
in
mov
push
loopne
aaa
div
inc
dec
pop
adc
add
clc
push
add
outsb
and
stos
inc
popf
push
ja
iret
sti
push
push
push
xor
adc
call
bound
xchg
js
dec
add
jge
push
enter
and
loopne
and
call
adc
in
pop
mov
mov
mov
out
xor
mov
repz
dec
push
aad
outsl
mov
push
adc
pop
lods
popa
aad
push
out
iret
dec
lods
xchg
popw
out
jnp
mov
sahf
lret
mov
inc
mov
adc
movb
sbb
test
mov
push
fwait
jbe
daa
out
sahf
into
xchg
scas
dec
pop
out
packuswb
imull
cmp
lahf
xchg
call
inc
popf
pop
add
std
mov
jle
into
rorb
mov
repnz
ficoml
sbb
popf
daa
pop
sub
jb
out
push
mov
cmpsl
jmp
mov
cmpsl
test
mov
sub
fldenv
into
scas
push
mov
insl
sub
jp
adc
icebp
pop
gs
sbbb
dec
add
jae
inc
adc
incb
sbb
nop
cmp
inc
gs
pop
pop
repnz
cmpsl
xorb
mov
jnp
or
lods
xchg
push
add
mov
xchg
and
or
mulb
mov
nop
bound
xor
fisubl
daa
loope
mov
bound
mov
leave
clc
cmp
mov
subl
test
ret
mov
add
or
lea
js
and
je
movq
lods
and
loopne
stos
aad
push
jle
loopne
hlt
or
stos
add
imul
lahf
jmp
mov
sub
and
stos
xchg
data16
loopne
push
and
mov
xor
mov
in
mov
sbb
test
pushf
cwtl
and
cld
sub
pop
mov
fucomip
inc
dec
call
cmp
in
imul
test
fwait
mov
jmp
or
lea
mov
test
or
pushf
shlb
jo
pop
mov
inc
roll
pop
jnp
out
mov
push
out
and
repz
in
test
push
or
cmp
cmp
jbe
sub
int
aas
out
add
xchg
sbb
shrb
jo
out
ds
mov
cmpsl
out
cwtl
lods
nop
loop
push
rcrl
dec
and
cmc
mov
inc
clc
push
ds
sbbl
inc
in
jns
cmp
dec
mov
dec
mull
cmp
scas
and
ja
jge
out
mov
imul
push
mov
pop
push
fistpl
outsl
jae
iret
push
je
out
ror
dec
push
dec
mov
xor
mov
push
lods
sar
and
adc
mov
jecxz
adc
fstp
add
and
aad
addr16
inc
mov
mov
lahf
mov
lcall
add
mov
popf
stc
into
push
outsb
jb
sti
into
add
mov
mov
sbb
dec
hlt
sbb
out
add
pop
hlt
or
cmp
addl
jb
pop
mov
aas
frstor
mov
fisttpl
dec
dec
addr16
into
and
push
mov
pop
cld
imul
inc
xchg
aam
lcall
xchg
cli
push
jbe
sub
ljmp
nop
sarl
or
cmp
pop
aaa
arpl
das
std
or
and
sub
jmp
push
mov
mov
or
cmpsb
mov
stos
jne
mov
jbe
inc
or
mov
aas
lahf
out
neg
sbb
out
stos
shrl
xchg
jns
mov
push
int
sahf
sbb
std
shlb
test
loope
int
xchg
andb
repz
nop
cli
jb
sahf
loope
outsl
rcll
xchg
cmp
insl
pop
and
ljmp
cmp
lods
divps
arpl
sub
loope
push
cmp
pop
cmp
or
dec
aam
rol
or
inc
std
fidivrs
mov
std
fldcw
sub
mov
jbe
inc
iret
cmc
and
aam
fwait
dec
fwait
inc
andb
lods
mov
ljmp
or
cli
adc
push
jbe
dec
cmpsl
cs
xchg
dec
sbb
jmp
fmulp
sub
mov
xor
enter
lahf
pop
mov
imul
fcmovnbe
gs
jge
push
jl
push
jne
int3
clc
js
mov
imul
mov
mov
xor
inc
mov
jb
xchg
adc
cmp
insb
pop
push
andb
jge
sti
clts
xor
cmc
aas
in
sbb
sti
outsl
jg
push
jmp
outsl
adc
jo
pop
aam
fnsave
adc
inc
xchg
shr
push
mov
and
insb
fidivrl
inc
mov
insl
pop
mov
dec
xchg
dec
cmp
and
stos
inc
movsb
outsl
sbb
or
mov
test
mov
sti
ljmp
js
outsb
inc
xchg
mov
mov
push
hlt
cmp
shll
sub
push
add
aas
repz
jb
inc
push
push
out
in
in
pop
movsl
stc
and
orb
sbb
std
cmp
mov
out
fnstsw
bnd
out
inc
mov
adc
inc
popf
inc
mov
clc
dec
fcom
push
sub
test
mov
cltd
insb
dec
bnd
jp
dec
xor
adc
or
cmp
adc
and
add
fldcw
les
jo
mov
push
cmc
cld
inc
xchg
arpl
sub
cmp
mov
hlt
xchg
fisubrl
popa
out
push
inc
lds
push
jne
or
fcmovnbe
or
cmp
xchg
enter
cmp
xorb
push
inc
cmpsb
imul
in
xor
lds
and
add
jns
cmp
inc
lret
xchg
pusha
inc
sti
adc
jb
in
arpl
xchg
fdivrl
adc
or
xor
xor
bound
jnp
dec
rorb
inc
add
or
push
lcall
mov
out
mov
xor
push
call
adc
test
sub
mov
mov
shlb
idiv
test
clc
js
aam
ja
sub
das
dec
and
sbb
test
cld
cld
mov
jp
lock
sarl
cmp
or
cmp
addw
push
out
push
and
mov
pop
jecxz
dec
movsb
fmul
xchg
xor
jl
push
movsb
jmp
es
sbb
insb
inc
sub
icebp
sub
ds
mov
addps
sti
out
in
fisubl
xchg
loopne
and
ffreep
push
imul
push
imul
popa
fwait
xor
adc
add
test
fcomps
cmp
mov
loope
jbe
daa
push
mov
sbb
test
scas
add
in
gs
adc
stos
inc
pop
jmp
cmp
and
gs
cmp
mov
sbb
std
dec
pop
mov
andl
adc
test
lcall
cmpl
adcl
adc
movsl
push
lret
jle
jecxz
xchg
lods
out
aas
pop
pushf
clc
sbb
cmpsl
pop
cltd
pop
inc
jnp
mov
in
lret
stc
mov
lods
mov
mov
ja
cmp
sub
mov
iret
jg
adc
xchg
pop
jle
jecxz
or
cwtl
fiaddl
inc
mov
popa
pop
out
mov
xchg
lret
push
in
mov
nop
pop
jns
adc
mov
inc
pop
or
data16
insl
inc
fwait
scas
xlat
mov
shl
xchg
sbb
in
mov
xor
and
out
jmp
mov
pop
lret
das
bound
dec
test
xor
dec
jbe
ja
les
gs
inc
in
out
or
mov
push
cld
dec
fs
cmp
inc
add
mov
test
out
dec
mov
sub
inc
cmpsl
insb
test
nop
fwait
mov
or
mov
shlb
mov
out
pop
iret
out
daa
addb
iret
add
lret
and
mov
out
lea
push
and
mov
loop
lods
dec
and
fisubrl
add
loopne
insb
pop
cmp
mov
lret
int
pushf
repz
or
lret
js
pop
inc
mov
jb
or
mulb
nop
das
or
push
xor
xor
dec
push
pop
jecxz
ret
mov
popa
inc
dec
dec
pop
icebp
sbb
mov
hlt
jmp
cmc
loop
dec
inc
lret
cwtl
pop
ret
test
lea
jae
sti
pop
inc
call
pop
fcomi
fadds
sbb
loop
test
or
js
cmp
mov
insb
pop
fdivrs
mov
inc
roll
sub
pop
dec
pop
cmp
xor
xchg
mov
xlat
fiaddl
faddl
or
popf
clc
jbe
into
gs
je
or
popf
jecxz
cld
cmpsl
xor
lock
cli
ja
out
daa
out
mov
aam
pop
pop
fdivrs
xor
add
pop
mov
push
iret
lods
popf
outsb
pusha
or
adc
and
jg
fists
inc
cli
cld
cwtl
push
jl
fsubl
aad
jmp
sahf
add
xchg
dec
cmp
aas
std
clc
pop
cmc
mov
int
and
lcall
sub
repz
adc
jle
inc
mov
shrb
mov
js
out
mov
addr16
jne
mov
incl
test
ja
mov
adc
cmc
les
xchg
jg
adc
cmp
inc
icebp
insl
mov
push
dec
in
pop
mov
loopne
mov
test
cmpsb
push
jecxz
cli
jnp
sub
popa
mov
aaa
aaa
gs
cmp
xchg
push
mov
pop
cmp
mov
or
and
jecxz
dec
jae
dec
mov
jecxz
movsl
xchg
outsb
sahf
or
and
mov
loop
call
das
lret
repnz
iret
push
daa
scas
jp
jp
mov
xor
pop
adc
popl
sbb
push
insb
insb
je
xchg
pop
repz
inc
or
lods
mov
into
movsb
je
scas
or
dec
sbb
mov
dec
inc
fbld
stc
mov
push
mov
iret
jne
push
lods
add
imul
lahf
mov
fwait
ret
cmp
xchg
test
out
xchg
sbb
leave
sahf
or
mov
cmpsl
lret
and
notb
repnz
subl
mov
cmp
xchg
ds
into
call
in
decl
push
out
clc
sub
fmulp
push
xchg
sub
leave
out
sbb
xchg
addr16
in
xchg
aam
lret
push
or
mov
sbb
movsb
ja
adc
inc
std
cmp
jmp
jmp
inc
subl
jmp
or
push
push
pop
jb
movsl
inc
std
cli
aam
mov
add
cmp
imul
add
or
aad
add
ss
cmp
aas
or
mov
add
dec
or
adc
popf
and
sub
xor
iret
or
stos
pop
xor
scas
fidivl
data16
hlt
out
or
mov
sbb
cmp
cwtl
push
ficompl
push
dec
mov
add
xor
fs
pop
cmc
pop
jmp
shrb
scas
andl
push
ja
rorl
arpl
add
jnp
cmp
aaa
mov
or
out
pop
push
lods
pop
adc
loopne
ja
fbld
or
lock
das
and
rcl
pop
in
jnp
arpl
mov
sahf
add
iret
mov
je
popf
jmp
lahf
cltd
or
xchg
aas
xchg
loop
in
xor
mov
sub
out
xadd
and
fisubl
lret
sbb
cs
imul
mov
stos
inc
cmp
jo
outsl
push
out
mov
clc
jle
cmp
hlt
sbb
mov
jg
mov
mov
lret
or
leave
add
lea
push
jle
pop
push
fidivrl
sti
sub
mov
inc
push
pop
icebp
or
inc
adc
ret
outsb
in
dec
pushl
mov
jne
sub
ljmp
jb
dec
jae
sarl
dec
popa
movsl
imul
mov
call
lea
sbb
mov
inc
in
andl
mov
jmp
mov
inc
adc
jbe
xchg
mov
xchg
enter
sbb
cmc
icebp
push
cmp
std
sti
push
lahf
fisubl
cmp
popa
enter
je
jge
and
inc
mov
bound
aam
jnp
rorb
push
mov
es
adc
and
shl
data16
cmc
mov
pop
lret
popf
jo
mov
sub
pushf
jmp
imul
xor
addl
idiv
dec
push
xchg
pop
cld
dec
jg,pt
loop
scas
inc
jge
lahf
out
mov
gs
adc
push
aas
int
les
push
jp
push
pop
addr16
jg
mov
dec
push
inc
in
pop
ja
hlt
dec
add
sar
arpl
sub
inc
cltd
scas
pop
push
inc
fs
int3
fiadds
push
popa
inc
sub
scas
cld
roll
into
push
pop
lcall
fldt
cld
rorl
dec
lods
dec
out
sahf
xchg
sub
test
add
push
fs
push
add
cmp
sti
in
rcrl
mov
sub
das
jae
adc
test
sub
aam
ret
fisubrl
dec
in
in
sbb
shll
inc
push
mov
mov
or
adc
aad
mov
js
xchg
lahf
popa
pop
mov
adc
push
pushf
jmp
stos
cmp
iret
fsubrs
popaw
aas
ss
jno
popa
mov
testb
and
enter
mov
sarb
adc
fcompl
xor
out
jmp
push
btcl
out
daa
or
xlat
add
pop
mov
xor
in
push
inc
and
shll
xor
rolb
push
xsave
pushf
shll
pop
sbb
mov
jbe
cmc
hlt
aam
in
jnp
repnz
ds
inc
outsb
pushf
shlb
js
mov
xor
iret
sub
push
aad
je
out
push
push
dec
mov
sub
xchg
mov
mov
sub
in
inc
mov
or
sub
call
mov
pop
lds
mov
jne
mov
and
push
pop
jl
xor
out
int3
pop
mov
lods
cmpsl
mov
lret
call
cmp
fldenv
dec
mov
idivb
mov
add
xchg
nop
out
add
adc
arpl
pop
hlt
cmpsb
popf
adc
mov
faddl
xchg
sbb
ljmp
fmulp
mov
outsb
pop
jnp
jge
sbb
pop
sbb
mov
mov
cld
push
dec
adc
sub
das
mov
popa
push
cmc
push
and
inc
push
add
les
imul
wrmsr
cmp
xchg
fidivl
cmpsb
or
jbe
lock
push
adc
loope
in
cmp
test
and
jle
adc
push
sahf
adc
adc
fimuls
mov
sub
inc
or
xchg
sahf
push
aas
cmc
mov
mov
pop
jb
cmp
or
pusha
inc
add
inc
outsl
mov
cli
xlat
mov
fcompl
push
xor
out
mov
push
bound
testl
xchg
jmp
xorb
lods
or
std
xchg
sbb
test
ja
xlat
jle
in
popf
lcall
or
mov
idiv
rcrl
insb
or
lcall
popf
lcall
or
mov
sbb
hlt
pop
jb
mov
xor
push
inc
jg
shll
inc
pop
jae
je,pt
xorl
inc
sahf
cs
mov
sti
sti
out
dec
sub
and
push
loope
push
mov
or
lock
dec
mov
sbb
je
ss
sub
repz
mov
inc
outsb
out
stos
sub
aam
sahf
shll
popa
cld
enter
stc
xchg
out
mov
imulb
in
outsl
add
and
push
imul
mov
dec
dec
push
scas
jp
jl
stc
pop
push
jo
sub
decl
dec
dec
mov
fcomps
cmp
stos
add
mov
into
in
xor
dec
adc
movsl
pop
pop
rcrl
xchg
push
mov
insl
mov
mov
mov
sub
lods
cmp
bound
and
dec
pop
sbb
pop
mov
sbb
das
fists
rcrb
push
push
jbe
test
jne
data16
cli
sub
add
pop
mov
pushf
sub
and
lret
lret
outsb
sti
sbb
push
mov
enter
add
jmp
popa
pop
push
cmpsb
xchg
pop
out
mov
cmp
lahf
addr16
xor
add
fbstp
cltd
mov
fdivs
test
ret
hlt
pop
dec
andl
sbb
pop
push
loopne
mov
jo
insl
fidivrs
mov
inc
push
out
clc
jne
push
inc
fmul
add
adc
in
std
jnp
lahf
sahf
push
xchg
inc
ret
cs
inc
int3
test
mov
test
mov
dec
push
push
xchg
jae
pop
add
jp
mov
jo
jno
xchg
wrmsr
enter
jge
push
out
inc
repz
call
adc
in
sub
decl
xchg
jae
push
js
pop
cltd
cmpl
add
idivl
enter
std
xor
mov
inc
lds
push
mov
push
jp
jg
cmpsb
or
enter
adc
sub
in
test
xchg
jb
lret
movsb
mov
or
push
adc
pushf
dec
insl
scas
sbb
push
andl
dec
push
sub
sbb
dec
int3
pop
inc
mov
push
xor
sub
xchg
push
xchg
and
iret
sarb
addl
stc
inc
cmp
out
aas
aad
push
sub
push
or
inc
sbb
mov
fstl
mov
outsl
mov
out
dec
int
jl
jae
test
int3
mov
cmp
mov
shlb
adc
mov
inc
in
mov
lods
sub
das
jl
add
xchg
loope
mov
dec
in
sbb
movsb
jle
mov
lret
loope
push
or
jge
inc
push
mov
popf
mov
jae
and
js
sub
jns
cmp
pop
outsl
int
mov
popf
clc
sbbb
add
sub
ret
enter
sub
lret
dec
ret
lods
inc
mov
mov
dec
int
adc
jae
adc
push
pop
pop
jl
mov
push
into
jg
mov
scas
mov
fstpt
sub
aaa
loope
std
pop
in
enter
xor
xor
push
xor
mov
pop
push
cmc
cmpl
pushf
xchg
jnp
in
pushf
mov
dec
xor
lret
push
mov
jne
jge
xor
jp
or
xlat
js
lret
and
xor
add
cmc
sbb
fwait
add
adc
repz
stc
sbb
int3
add
icebp
lahf
jns
fidivl
lcall
out
rcr
fcompl
xchg
sub
jne
cwtl
cmp
ljmp
lods
push
pop
or
ret
aaa
push
mov
jae
push
ret
pop
pop
cltd
sbb
addr16
cmp
jns
add
jo
rcrb
and
std
ds
add
ficompl
cwtl
dec
test
sub
inc
mov
stos
mov
lahf
aad
adc
fidivrl
inc
stos
mov
out
call
mov
jle
adcl
xor
nop
inc
push
das
adc
in
shlb
push
pop
cwtl
sub
cld
lcall
loope
aam
mov
iret
inc
cli
xchg
pop
jle
data16
sbb
cmp
pop
out
lock
out
stos
je
cmc
adc
test
xchg
jnp
lret
cmc
xor
bound
int3
dec
aam
lret
add
rclb
js
loop
xchg
push
loopne
mov
fnsave
push
pop
shr
xor
cs
pop
je,pt
pop
vmulps
push
inc
jge
mov
ljmp
adc
mov
fwait
xor
mov
mov
ja
mov
mov
out
test
pop
sbb
iret
rorb
imulb
outsl
aaa
push
stc
fstps
jns
loopne
into
fsub
enter
movsl
iret
sub
daa
mov
movsl
imul
push
lea
push
ss
cmp
dec
les
je
nop
sbb
xchg
fcmovnu
popaw
fidivrs
movsl
mov
adc
or
adc
in
mov
xchg
or
jle
loopne
push
fistpl
stos
ljmp
mov
inc
cli
mov
push
stc
or
adc
sub
sub
push
mov
and
mov
mov
mov
pop
mov
fwait
cmove
mov
xchg
cmp
xor
cmpsl
jbe
xor
in
sti
sbb
xchg
push
pop
test
in
movl
sub
dec
pop
psubusw
or
mov
adc
addr16
test
repnz
push
mov
outsb
frstpm(287
mov
andb
jno
test
fisubrs
lds
icebp
inc
add
int3
adc
xor
lods
int
lret
test
xchg
in
jns
pop
cmp
dec
fsubp
push
push
xchg
xchg
xor
cmp
jge
jp
aaa
sub
cmp
mov
add
lret
outsb
nop
and
cmpsl
mov
push
scas
jmp
ljmp
push
js
cli
or
sbb
adc
or
scas
inc
rcl
cmp
iret
pop
xchg
pusha
dec
jb
add
dec
pop
lahf
cwtl
loopne
and
pop
cli
dec
cld
add
cltd
enter
xchg
mov
mov
into
imul
dec
leave
imul
icebp
lret
sub
stos
cmp
test
sub
add
push
mov
xlat
in
or
or
cmp
jge
in
icebp
lret
decl
cli
fs
pop
push
inc
call
add
sub
mov
xchg
cli
or
cmp
sbb
sbb
dec
lods
pop
sub
pop
dec
fmuls
int
stos
jg
or
pop
lcall
or
inc
iret
xchg
pop
jmp
test
daa
fidivrl
stos
data16
pop
insl
cmp
and
loopne
aaa
ljmp
fcmovnbe
cltd
sub
xchg
jecxz
loop
repnz
dec
xchg
ret
pop
or
push
pop
sub
mov
loopne
leave
fwait
imul
nop
data16
push
cmp
sbb
jae
mov
int3
and
sti
push
add
mov
enter
loop
sbb
enter
and
popa
jb
stc
loop
xor
pop
xorb
xor
jnp
cmp
sub
in
das
add
dec
movswl
popf
cmp
lret
rorb
mov
ljmp
xor
push
mov
test
or
sub
aam
xor
in
in
lcall
xchg
loopne
mov
push
in
mov
mov
pop
pop
inc
push
fs
insl
push
xor
mov
call
fnstsw
or
pop
outsb
cmpsb
icebp
jmp
push
imul
nop
sti
das
leave
fsubr
pop
sub
mov
outsb
mov
ja
cmpsl
push
dec
inc
adc
ret
negb
testb
stos
sub
lods
jle
leave
pop
cmp
xchg
or
inc
xor
and
mov
lods
dec
out
popf
mov
das
jae
iret
mov
pushf
lret
hlt
adc
aad
testb
das
into
inc
push
fmul
mov
cmp
add
xor
pop
sub
xor
mov
cmc
pop
pop
das
mov
mov
add
jb
pop
lret
adc
adc
popa
ret
inc
push
push
inc
arpl
push
aaa
subb
test
and
mov
mov
incb
dec
push
hlt
add
pop
cmpsl
sub
sarb
data16
lea
or
add
ljmp
movsl
mul
xor
cwtl
iret
xor
and
cmp
jecxz
out
je
in
xchg
cs
stos
call
fcmovbe
addl
stos
jns
cmp
fimull
cmpb
pushl
xlat
jae
mov
xlat
xchg
mov
xchg
and
and
xchg
ret
hlt
arpl
mov
cli
shrl
mov
add
mov
loopne
add
xor
fdivs
pop
add
dec
and
movsl
mov
bound
add
adcb
mov
xlat
leave
pushf
mov
gs
mov
out
js
inc
repz
bound
pop
je
push
inc
sti
mov
pop
push
imul
sbb
mov
shll
stc
and
mov
sub
push
jnp
into
pop
repnz
jb
cli
cmp
adc
rol
sub
pop
or
dec
test
in
pusha
sub
xor
fisubl
xchg
or
adc
add
imul
xor
pop
mulb
movb
mov
jb
add
shlb
xlat
jg
test
imull
push
in
jnp
cmp
mov
and
rcrl
jl
xchg
test
mov
fisubs
jno
push
andb
jbe
push
aad
push
cmp
xor
cltd
and
sub
jmp
popa
test
jne
jb
sbb
mov
xchg
pop
xchg
cmp
jp
dec
pop
test
or
xlat
rorl
mov
sub
push
and
inc
mov
in
and
add
sbbl
popa
mov
adc
pushf
pop
ljmp
jns
and
sahf
sbb
mov
gs
nop
negb
aam
xor
mov
push
shr
pop
pop
aaa
or
xorb
fsub
and
cmp
dec
pop
fmulp
jmp
cmp
cmpsb
pop
cld
xchg
sub
push
add
pushf
mov
and
add
cmp
sbb
lret
push
hlt
cmp
and
mov
xchg
fdivp
or
jmp
sbb
flds
mov
inc
push
out
xchg
pop
data16
push
fidivrs
dec
stos
stos
sbb
pop
fwait
rcrl
loopne
and
xchg
daa
pop
into
add
jbe
cmpl
inc
mov
push
mov
inc
mov
xor
stc
xchg
adc
mov
mov
cmp
lods
dec
call
mov
adcb
mov
iret
dec
aaa
cli
cli
mov
xlat
sub
lds
fldenv
jae
shrb
xchg
mov
stos
mov
adcb
jg
in
sub
xor
or
adc
xor
mov
dec
mov
iret
jne
jnp
cltd
fisubrs
loop
cmpsb
ljmp
push
int3
sbb
add
cwtl
dec
cmpsb
xchg
loope
pop
xor
xchg
sub
pop
imul
rcrl
adc
sbb
dec
inc
movsl
pop
insl
jns
lods
arpl
jmp
and
mov
fsubrs
ljmp
sbb
dec
insb
cld
loop
lret
aaa
lods
mov
mov
mov
test
int
and
shrl
jo
lods
pop
lds
loope
pusha
cmc
dec
fdivp
lods
pushf
cld
xchg
cltd
nop
shrb
rolb
es
das
sbb
xorb
stc
mov
mov
bound
or
inc
and
pop
sub
jle
sub
xor
shll
push
js
pop
test
mov
xchg
xchg
push
dec
clc
mov
and
pop
pusha
dec
pop
fstl
jno
rorb
jecxz
cmpsb
mov
dec
dec
sub
mov
loope
push
pop
sbb
mov
xchg
mov
and
movsb
ror
cli
divb
rorb
and
aaa
mov
lods
les
ds
ljmp
cmp
or
and
aas
mov
jae
cli
dec
gs
adc
jae
aad
pop
jle
sub
pop
aam
aad
mov
xor
add
nop
xlat
mov
nop
sub
data16
fnstsw
mov
and
std
jns
xlat
xor
imul
mov
mov
add
sahf
pop
sbb
adc
outsl
pop
test
add
loop
out
mov
xor
sub
cld
push
hlt
or
fcoms
dec
add
stos
dec
or
int3
add
fs
lods
sbb
cmp
and
inc
xchg
push
sti
jb
ljmp
ficoml
outsb
jl
ret
jbe
incb
sub
sbb
inc
xchg
fwait
mov
repnz
dec
push
cs
out
das
outsb
std
nop
test
daa
adc
dec
jnp
sbb
outsl
das
mov
sti
inc
pextrw
push
add
mov
pop
out
add
cmp
mov
inc
testb
mov
sub
cmp
cmc
gs
std
mov
das
pop
add
jno
xlat
mov
dec
sarl
stos
pushf
sub
xor
dec
sub
adc
push
insl
inc
push
hlt
jp
jnp
out
aad
xchg
push
icebp
mov
int
out
sahf
fs
jbe
sub
xor
lcall
sub
and
cmp
outsb
push
and
cld
ds
or
push
pop
call
mov
pop
xorl
mov
scas
and
inc
loop
push
outsb
nop
push
frstor
sbb
pop
insb
mov
and
mov
lahf
cmp
test
imul
xchg
fmull
icebp
mov
add
jl
in
cmp
sbb
sbb
inc
add
inc
aaa
mov
lret
fcoms
stos
lcall
pop
cltd
popf
dec
push
xchg
sub
sbb
pop
xchg
jb
addl
aad
gs
cmp
cli
pop
push
ret
bound
fucompp
xor
dec
aad
shlb
jecxz
arpl
inc
call
jbe
dec
arpl
add
enter
cwtl
push
fstl
mov
ljmp
sbb
xchg
data16
lods
mov
xchg
addr16
and
xchg
aaa
or
push
or
call
cmp
push
mov
xchg
mov
mov
test
cld
sar
fwait
jecxz
pop
test
add
insl
stos
mov
scas
xlat
shl
in
jae
stos
dec
outsl
mov
std
inc
mov
into
cmp
fwait
sbbl
testb
insb
fwait
mov
or
outsb
jg
jp
cmp
inc
test
sub
mov
jge
push
mov
dec
adc
mov
shrl
dec
clc
in
out
lahf
or
add
jecxz
jae
shlb
pop
xor
test
xchg
fisubl
pop
pop
jmp
fsubl
xchg
mov
sbb
cmp
nop
stos
cs
pop
in
push
mov
test
in
pop
repnz
ret
mov
pop
out
mov
and
pusha
ficomps
adc
insl
aas
rcl
pop
fistpl
and
repnz
addr16
int
in
shl
cmp
scas
sbb
adc
fsubrs
fdivr
sbb
xor
sub
fists
xor
popa
stc
test
les
std
xor
mov
lret
lret
rcrb
mov
lods
xchg
jl
add
aas
lret
sub
std
mov
rclb
cli
and
cltd
cmp
or
lods
dec
clc
dec
loopne
mov
popf
pop
test
mov
mov
or
inc
fisubs
leave
je
into
ss
mov
add
ss
testl
lds
jne
sub
fbstp
sbb
testl
adc
out
xchg
mov
pusha
dec
mov
sbbb
inc
std
xchg
or
js
inc
rorb
leave
neg
jl
inc
das
movsl
rolb
out
adc
outsl
jl
ret
pop
mov
mov
xchg
mov
mov
movsl
xchg
dec
out
jb
popl
clc
sti
das
pusha
das
shll
addr16
inc
pop
mov
outsb
lods
movsl
xchg
mov
jae
fucomp
adc
jne
dec
pop
adc
or
cmp
std
mov
mov
ret
lea
xor
repnz
cmp
cmpsb
mov
sub
addl
rcrb
movsl
lods
ret
add
in
xorb
cwtl
cmp
idivl
pop
cmp
rclb
push
hlt
scas
cwtl
mov
sarl
idiv
enter
xchg
lret
inc
jle
jge
sbb
inc
sbb
mov
jge
xor
adc
fsubrs
pop
jle
fildl
cwtl
add
cmpsb
pop
jno
mov
add
mov
stos
test
insl
in
or
mov
out
rcrl
loop
adc
jp
dec
test
inc
mov
and
add
dec
adc
repz
sub
mov
pop
push
outsl
jp
sbb
inc
je
fisubs
jbe
dec
in
cs
sbb
mov
loope
aaa
in
cmp
jecxz
movsb
shrl
jge
imul
cld
jl
stos
test
adc
aas
gs
daa
xchg
ss
cmp
mov
fistpll
sbb
paddb
enter
stc
pop
fs
enter
imul
out
inc
mov
leave
push
es
xor
xchg
enter
test
xchg
mov
push
cmp
or
mov
jne
int3
bound
lods
inc
xchg
push
and
jle
cmp
ret
lds
mov
push
cmp
xchg
adc
and
cwtl
push
pop
iret
and
cmovae
fisubs
dec
movsl
xchg
or
jecxz
imul
arpl
xchg
pop
push
ja
cmpsl
cmc
mov
repz
add
jno
or
cmp
and
mov
jns
lods
lods
sub
mov
dec
lods
xchg
xchg
ss
and
pop
mov
das
mov
fmull
fidivrs
cmp
mov
movhps
js
mov
cltd
xor
sbb
pop
push
int
ret
cmp
ss
pusha
lret
xchg
push
xor
movsl
das
dec
fcomip
out
sahf
add
addr16
push
jecxz
xchg
adc
or
jno
cs
xchg
js
xor
xor
xchg
xchg
aam
jb
ret
xchg
or
dec
dec
cltd
mov
mov
jg
and
dec
int
fmul
adc
push
dec
in
xlat
cmpl
adc
push
mov
clc
sub
sbb
jo
cmp
pop
js
cmp
cmpsb
lock
dec
mov
inc
mov
push
mov
inc
lcall
push
dec
push
in
loopne
arpl
sub
add
adc
mov
testb
addb
mov
push
addr16
sbb
xorb
scas
inc
test
or
popf
lods
cltd
sbbb
jb
add
or
nop
mov
pushf
andb
pop
fst
negb
addb
scas
loope
int3
add
push
mov
xor
leave
adc
dec
and
and
cmc
pop
xchg
lret
push
cmp
xor
cli
daa
test
sub
enter
ds
sarb
pop
std
pop
pop
fadds
fsubl
out
subl
pop
adc
test
rclb
or
ja
mov
and
sub
sbb
nop
jns
xchg
ret
lds
pop
ss
mov
xor
das
mov
xchg
adc
jmp
cmpl
push
pop
out
fisubs
jl
ret
and
xor
fcomi
lods
sbbl
fs
icebp
jb
mov
mov
je
or
sub
insl
cli
pop
popf
cmp
xchg
cmpsl
addr16
push
mov
push
insb
gs
in
lods
outsb
inc
mov
jl
cmp
mov
pop
lret
mull
add
sub
cmc
xchg
sbb
add
call
mov
xchg
mov
lock
in
mov
push
sbbl
mov
xor
add
ds
aad
sub
xchg
sbb
scas
hlt
mov
ss
push
mov
add
int3
mov
inc
loop
out
sbb
mov
inc
push
das
mov
mov
cmc
inc
aas
jbe
out
jl
sahf
xchg
sub
xlat
test
sbb
ss
jge
and
sahf
push
cld
cmp
push
mov
lret
insb
ret
cmp
xchg
ds
rcrb
jno
jmp
shl
mov
incb
outsl
cmp
clc
mov
dec
xchg
jo
mov
sbb
dec
xchg
fisubl
dec
and
xchg
and
insl
sub
and
iret
and
insb
fwait
into
loop
jp
sbb
lret
inc
je
movb
pushf
fimuls
cmp
jne
inc
sub
repnz
inc
sbb
dec
and
pushf
mov
notb
out
aas
inc
xchg
pop
loope
pop
test
movsb
pop
jnp
fldl2e
int3
push
test
or
cli
xor
fsubr
iret
mov
insl
adc
mov
dec
add
mov
out
popf
push
sbbb
bound
nop
sbb
sub
jmp
ret
cmp
data16
add
mov
sub
jge
popf
pusha
fadds
adc
cmp
pop
pop
adc
or
lret
clc
das
dec
or
xor
loop
jp
sbb
push
test
into
mov
jnp
xchg
inc
pop
push
push
adc
loop
mov
cmp
jne
outsl
dec
xchg
outsb
fsubrl
sbb
clc
push
push
outsl
cmp
ja
xchg
jns
stos
jle
or
pop
stos
imul
sti
lcall
pop
and
xor
mov
or
enter
pop
repz
fists
mov
sbb
sbb
insb
inc
sbb
sbb
scas
notb
in
bound
mov
fwait
aam
jl
int
jle
xrelease
lea
push
ret
sub
cltd
adc
test
mov
out
or
jecxz
adc
cld
and
movsb
pop
xchg
mov
sarl
aad
and
test
mov
fiaddl
sbb
cmp
movsl
mov
ret
pop
arpl
and
xor
push
mov
cmp
lcall
pop
mov
lds
das
add
and
aaa
scas
mov
fisubrl
and
push
pusha
imull
hlt
lea
add
xchg
dec
and
inc
nop
add
inc
push
outsb
cmp
mov
jnp
mov
fsubr
adc
fdivrl
adc
mov
ficoml
push
cwtl
xchg
fwait
sub
sub
scas
pop
leave
fs
adc
jnp
cld
sbb
sub
adcl
pop
jmp
jbe
jmp
jnp
pop
sbb
out
out
jo
inc
xlat
xchg
mov
mul
cmp
or
pop
aam
jno
mov
add
lret
out
test
mov
lods
movsb
fcompl
in
in
sbbb
das
fucomip
arpl
call
xchg
xchg
pop
nop
mov
pusha
fcompl
sarb
mov
lds
shl
sub
mov
mov
jmp
mov
lds
push
cmc
iret
mov
jns
adc
jmp
arpl
pop
mov
mov
dec
sbb
fldt
pop
xlat
jle
adc
pop
scas
loope
xchg
scas
sub
ret
push
ret
add
push
mov
sbb
sub
xchg
push
or
or
mov
xchg
push
cli
movsl
add
sub
and
sbb
xchg
repz
sub
cmpsb
bound
fisubrs
fiadds
cwtl
loopne
xor
adc
shlb
inc
mov
js
movsl
lret
data16
jmp
test
in
and
fdivrp
pop
pusha
inc
xchg
and
jp
in
cld
mov
ljmp
lahf
loope
es
lret
sub
divl
enter
scas
inc
or
out
out
xchg
cltd
pop
xchg
lock
mov
daa
jne
jo
xchg
loopne
adc
loop
subl
xchg
std
movsb
xchg
push
icebp
add
outsb
or
rolb
mov
sbb
adc
xchg
fisubl
fiaddl
mov
inc
ljmp
inc
lret
mov
icebp
inc
mov
mov
scas
stos
jns
add
aam
aaa
dec
dec
xchg
cmp
into
sbb
add
sbb
xor
fidivrs
adc
and
pop
xorl
mov
insl
fidivl
mov
arpl
cmp
push
cmp
imul
notb
or
or
testl
xor
jl
sbb
mov
ret
ss
cs
sub
cmp
shll
jbe
pop
push
pop
popa
data16
add
pushl
pushf
leave
jae
ja
or
dec
shrb
push
das
int
into
fstpl
xor
lock
in
add
cld
loope
inc
scas
sub
jbe
leave
and
fwait
mov
mov
rclb
inc
pusha
bound
icebp
add
inc
jno
test
cltd
push
adc
push
xchg
inc
out
daa
xchg
out
dec
aam
cmp
mov
in
clc
cs
pop
std
hlt
adc
xorps
shlb
cmp
jecxz
mov
js
mov
dec
jmp
icebp
xor
mov
push
test
cmc
cs
mov
mov
jae
xchg
push
mov
fsubl
int
pop
in
adc
scas
mov
lods
addr16
pop
aas
dec
imul
fmulp
addr16
ljmp
push
sarb
loop
test
jg
fcomps
dec
popf
lea
cmp
int3
lret
mov
sub
lret
inc
dec
cwtl
inc
mov
nop
fnstsw
movsl
add
out
call
data16
cmpsb
ja
sbb
or
pop
push
nop
xor
mov
bound
pop
xchg
outsb
clc
push
in
mov
push
mov
in
stos
fbstp
mov
clc
mov
lret
shrl
dec
or
fcompl
push
dec
movsb
pop
cmp
add
push
adc
mov
mov
clc
call
shlb
adc
xor
xchg
push
xchg
mov
into
mov
jle
popf
nop
push
movsb
lahf
aas
lret
mov
js
idivl
sub
sahf
sbb
ljmp
mov
cmp
add
or
mov
fdivp
jne
insb
cmp
call
and
cmpsb
jp
cmpsb
jb
sahf
in
cltd
jl
jle
xor
repz
shll
movsl
sub
adc
in
dec
adc
dec
pop
pop
ret
mul
push
xchg
aas
sub
call
sub
xor
adc
xor
dec
sub
xchg
inc
push
adc
aam
test
arpl
pop
xor
call
jge
addr16
adcl
and
mov
nop
push
or
es
and
lahf
inc
jno
rorb
rcrb
insl
hlt
out
push
fs
jp,pn
add
in
push
sti
sbb
mov
rcrb
adc
mov
xchg
pushl
push
push
adc
enter
roll
xchg
push
adc
out
lea
mov
jmp
dec
add
mov
lea
dec
inc
jl
cmpsb
pop
adc
and
fidivs
cmp
sbb
imul
sbb
mov
mov
mov
mov
or
mov
sar
pop
push
loopne
dec
call
cmp
push
or
in
mov
mov
shl
dec
orl
into
pushf
xchg
pop
in
jnp
repnz
movsb
scas
iret
sbb
add
jmp
pop
mov
jne
cmpsb
bound
inc
xchg
test
movsl
arpl
or
addr16
xchg
add
dec
outsb
out
xor
movb
inc
mov
and
or
lret
in
xchg
repz
ret
inc
ljmp
inc
pop
lret
inc
push
xor
mov
sahf
mov
mull
adc
jp
fs
sub
pop
aas
mov
cmc
ret
cmp
jge
push
and
sub
xchg
gs
shll
mov
pop
lret
nop
xor
lcall
or
stos
or
adc
inc
sbb
cmp
das
pop
insb
inc
sub
cld
imul
xchg
stc
out
sub
jp
sahf
cmc
adc
stc
xchg
lret
std
pop
mov
test
in
cmp
dec
cli
xchg
pop
fs
mov
loope
std
popf
aam
out
rcrb
enter
add
cmp
sarb
jno
jg
je
nop
cmp
dec
mov
sub
adc
cltd
out
shrl
ja
pop
push
mov
lock
shll
inc
lds
add
stos
cltd
cwtl
orl
aad
aas
xchg
mov
adc
sub
xor
push
addl
pusha
pop
lds
or
ljmp
imul
dec
sti
xchg
pmaxsw
std
aas
inc
popf
hlt
out
jmp
test
movsb
push
add
call
mov
xor
adc
xor
arpl
testb
nop
cmpsb
xorb
hlt
mov
pop
cli
inc
add
sub
xchg
adcb
addr16
cltd
std
mov
xchg
pop
outsb
fisubl
xchg
clc
xor
cwtl
mov
sbb
push
or
lock
bound
mov
rcll
je
pop
popf
xchg
cmp
std
sar
xor
je
outsl
jnp
leave
aas
sarl
nop
mov
sahf
mov
push
push
or
test
fistpl
xorl
lea
repz
jl
imul
adc
loopne
cmp
cmp
js
and
rorl
ficoms
xlat
hlt
xchg
mov
cmp
cmp
jns
push
mov
push
aad
jnp
add
jmp
test
add
mov
jmp
lds
aaa
addr16
pop
loop
xchg
push
xor
lahf
cld
je
or
pop
sub
jecxz
xchg
push
adc
jmp
sbb
push
cmp
cld
xorb
in
and
sub
rol
cmp
dec
filds
lods
dec
inc
mov
push
sub
outsl
jg
mov
ja
inc
lret
jmp
es
pop
pop
cmp
adc
adc
sbb
sub
mov
ss
xchg
xchg
fs
jbe
jmp
jo
jbe
mov
stos
fisttpl
dec
jle
les
out
data16
pop
or
jmp
test
lds
inc
or
aad
mov
xchg
dec
enter
ljmp
mov
and
jecxz
or
lahf
adc
cmp
dec
mov
pusha
sbb
sub
xchg
mov
push
clc
lcall
outsb
pushf
mov
mov
sbb
dec
shrb
nop
inc
ss
cld
cld
add
mov
lea
jno
scas
fs
dec
repnz
shr
fsubs
dec
jo
inc
xchg
and
or
sub
outsl
mov
leave
cld
jb
xchg
xchg
or
popa
xchg
dec
int
out
ljmp
cld
cld
fs
shrb
and
call
imul
push
insb
mov
mov
sub
cmp
xorl
mov
sub
roll
lock
mov
test
out
jmp
lods
pop
dec
decl
fsubs
pop
outsl
push
in
lret
in
lret
mov
add
pop
ret
jo
jg
cmc
je
idivl
lock
add
mov
sub
mov
ss
mov
into
dec
jmp
adc
dec
rcrl
mov
mov
cmpsb
xchg
cmp
mov
sti
inc
xchg
test
imul
xchg
clc
movsl
sti
cmp
and
mov
out
ljmp
or
sub
push
and
test
mov
test
push
test
dec
int3
lret
hlt
fs
lahf
xchg
arpl
cmc
add
rorl
xchg
mov
ret
mov
fdivl
sbb
cmp
sub
mov
dec
push
add
imul
cmp
cli
bound
xchg
pop
mov
iret
inc
push
movsl
cmpsl
add
mov
fcomp
test
cli
int3
jns
xchg
fs
jo
js
jle
icebp
jge
mov
stos
fs
mov
ret
sub
repz
xchg
and
maskmovq
testl
clc
inc
mov
push
outsb
xchg
mov
ss
cmp
nop
mov
adc
movsl
lea
in
xchg
icebp
xor
and
mov
sti
or
lcall
add
push
sbb
insl
fisttps
lds
push
pushf
in
push
jno
push
xchg
xor
sbb
scas
fldcw
sub
inc
test
popl
pop
mov
adc
mov
and
cmpb
loop
faddl
inc
mov
inc
in
jl
subb
jnp
es
xchg
pop
pop
scas
stos
adc
cmp
shll
outsl
es
mov
jno
mov
lret
sbb
cwtl
jmp
inc
cmp
shrl
jl
mov
imul
aas
fucom
and
nop
ret
lods
sub
or
popf
in
int3
imulb
js
insb
and
mov
and
loope
push
lods
jae
dec
shlb
lcall
pop
push
mov
mov
or
call
aad
negb
or
cmp
pop
nop
jmp
mov
xchg
stos
cmp
mov
cmpsb
xchg
scas
out
push
cmpsl
xchg
scas
sub
and
adc
lds
mov
test
push
jge
mov
gs
mov
fsubrp
clc
xlat
int
out
xchg
imul
push
test
xchg
popf
sbb
out
mov
adc
pusha
jecxz
mov
inc
dec
mov
xlat
xchg
cmc
leave
add
adc
je
loop
add
es
jg
out
mov
dec
xchg
xor
xor
add
lock
add
mov
dec
iret
jle
push
sbb
rcrb
cmc
sub
enter
push
pop
shl
mov
ret
and
jb
nop
xchg
scas
std
inc
xchg
xor
and
cmp
sarb
pop
shl
sahf
out
mov
push
fdivrp
insb
outsl
sub
or
dec
dec
jmp
in
cwtl
pop
lea
lret
mov
cltd
jbe
pop
ja
shl
mov
sahf
push
jg
aaa
cmpsb
sbb
push
mov
ret
adc
dec
scas
out
repz
inc
loop
xchg
mov
xchg
add
mov
addl
adc
sub
and
outsl
mov
add
add
divb
xchg
ss
lret
fbld
in
mov
add
xchg
jb
ret
ret
sbb
cmpsb
in
xchg
inc
scas
mov
mov
pop
sub
push
daa
shl
int3
xchg
jmp
pop
xchg
mov
lock
pop
or
mov
sub
or
je
cmpsb
pusha
aam
jns
mov
sahf
lods
cmp
jecxz
lods
mov
sarb
out
lret
notl
jg
lret
jae
jg
push
popa
orl
rclb
iret
or
dec
jae
sub
outsb
lods
inc
pushl
push
out
shlb
push
and
int
push
cli
ret
sub
mov
inc
cmpsb
pop
rcll
orb
mov
xor
sbb
jp
jg
cmc
add
or
inc
mov
adc
sarb
or
pop
push
and
dec
insl
in
xor
lods
pusha
inc
nop
enter
loope
xlat
stc
inc
cmp
ja
fucom
mov
sub
sub
mov
mov
fistl
fwait
dec
pop
cmc
xor
ds
mov
mov
in
mov
mov
rcr
daa
adc
dec
mov
sub
xchg
das
push
lret
scas
lahf
push
nop
lea
xor
popf
repnz
xor
insb
pop
adc
adc
xchg
imulb
cmp
mov
push
pop
rorb
xchg
add
inc
test
xchg
xchg
cld
or
jo
or
stos
outsb
xchg
mov
fwait
movsb
aas
pop
push
push
loop
addr16
cwtl
jg
lahf
outsb
xchg
hlt
mov
pop
ret
adc
lea
pop
adc
test
out
out
sub
roll
mov
mov
fstpt
dec
sbbl
cld
shr
mov
lret
fstps
test
sbb
cmp
xchg
xor
outsl
adcb
or
push
movsl
ret
adcl
sub
notb
lods
pop
lock
cmp
or
xchg
pop
inc
test
icebp
addr16
lret
and
enter
xchg
mov
xchg
cs
js
cltd
cmp
call
or
push
mov
enter
sbb
add
shll
push
aaa
pop
lret
in
dec
inc
mov
dec
xchg
and
aam
jl
imul
sbb
push
lods
mov
fsubrs
imul
jns
jmp
jae
mov
push
fadds
int
xchg
scas
sbb
and
shrl
fstp
add
lds
ret
dec
punpcklwd
jbe
cmp
add
sub
lret
sbb
outsl
mov
hlt
jno
sbb
fidivs
xlat
adc
fldl
mov
outsl
add
stc
loop
sbb
adc
pop
stc
out
in
ds
out
hlt
adc
mov
mov
or
pop
test
iret
sub
cld
fldl
dec
repz
leave
test
adc
and
adc
out
jo
cmp
mov
fidivrs
leave
xor
push
call
addl
lahf
iret
push
mov
dec
pop
xchg
push
jl
and
in
ret
outsl
xchg
jns
mov
lods
mov
adc
ret
shll
in
push
add
mov
pusha
pushf
add
das
and
adc
ret
sti
xchg
mov
daa
jle
ret
mov
jg
jno
loopne
shrb
mov
lods
outsb
sub
mov
ss
dec
sbb
mov
call
cld
jb
les
xor
and
ret
repz
jns
movsl
inc
lds
adc
aas
sarl
loop
arpl
push
inc
mov
mov
sbb
mov
push
popf
cmp
pop
lds
nop
lcall
xchg
pop
jmp
push
in
cmp
push
loop
mov
or
mov
push
les
adc
push
adc
std
loopne
jae
int3
aas
inc
in
mov
sub
lock
bound
lea
aas
into
xor
xor
pop
les
pop
cmc
ljmp
cltd
data16
push
sub
and
mov
sti
cli
lea
jae
cmp
push
aam
xchg
sbb
mov
mov
mov
ja
or
mov
adc
cwtl
aaa
jo
push
push
imul
mov
sahf
jp
cmpsl
xchg
adc
xchg
mov
sub
daa
jge
imul
roll
ret
xchg
mov
imul
jbe
out
sti
sbb
xor
fadd
cmpsl
andb
and
mulps
shlb
xor
adc
push
push
cwtl
jb
sub
insl
idiv
mov
xlat
sub
push
out
push
mov
xchg
xchg
movsl
rcl
fcompl
push
xor
jbe
int3
jl
xchg
sub
hlt
ds
mov
push
mov
jno
sub
add
aaa
xor
fwait
cmp
jge,pn
out
push
aaa
sbb
jle
pop
sbb
dec
dec
cmp
and
mov
mov
sub
pop
push
filds
push
int3
jae
and
and
mov
addr16
sub
pushf
mov
hlt
cmp
mov
cmp
and
cld
sub
mov
shll
xor
pushf
cmp
dec
xchg
pop
test
mov
out
mov
mov
ret
and
fdiv
jmp
hlt
xor
cmp
js
or
jle
xchg
adc
xor
or
pop
adc
jg
jle
add
dec
add
and
cli
or
stos
and
out
inc
loopne
incb
jmp
adc
push
sbb
shlb
aas
mov
fsubrl
cs
and
adc
les
ja
xchg
dec
aam
test
cmp
stc
and
pusha
cmc
lret
lods
stos
dec
popf
jp
xchg
shll
jecxz
jge
jo
loopne
push
adc
sub
jl
push
rclb
push
out
mov
in
cmpsl
add
mov
iret
pop
push
sub
cmp
popf
pop
add
popa
push
dec
sbb
test
mov
or
adc
sbb
pop
scas
adc
stos
popa
jo
fstl
bound
pop
xor
nop
xor
rorl
push
mov
int
icebp
ffreep
mov
or
in
lcall
scas
jnp
lods
sbb
inc
nop
mov
fsubrs
popa
loop
pushf
call
adc
mov
test
lret
shl
mov
xchg
test
and
mov
bound
sbb
pop
add
cltd
sbb
test
xor
sub
lea
nop
mov
mov
outsb
mov
movsb
push
arpl
fidivl
adc
pop
stc
pop
pop
movsl
and
mov
xchg
mov
push
sub
insb
mov
pop
addps
push
loopne
enter
iret
movsb
jae
mov
xor
push
daa
loop
xor
cltd
pop
pop
push
adc
icebp
or
lret
cmpsl
jp
scas
fwait
iret
cmc
adcl
test
sbb
dec
out
lret
call
repz
stos
stos
mov
fldt
pop
dec
add
or
fstpt
mov
xor
xchg
out
ret
jecxz
or
mov
loop
inc
and
fwait
mov
inc
xor
jl
stc
lea
in
fadd
in
mulb
test
xchg
push
mov
adcl
jns
rcr
jmp
int
lahf
arpl
js
lds
cs
or
adc
push
xor
scas
inc
addr16
push
cld
xor
jle
xor
shll
loope
lahf
add
inc
aaa
mov
testb
call
xchg
enter
sbb
movsb
and
pop
push
sub
ljmp
cmp
repnz
mov
jno
pop
xor
adc
push
push
jle
testl
shll
aam
mov
jle
mov
mov
sub
inc
jg
cmc
sbb
add
scas
aas
mov
mov
movsb
mov
test
mov
dec
outsl
push
xchg
xchg
cltd
imul
movsb
test
aaa
pop
ljmp
pop
enter
dec
jmp
mov
enter
roll
push
push
cli
jmp
lds
aad
jl
test
je
jb
in
push
test
xchg
lock
ret
jnp,pn
lret
mov
cmc
mov
jg
negb
push
int
dec
pop
cmc
das
pop
pusha
push
addr16
jo
mov
mov
add
push
in
cmp
outsl
sub
je
aaa
jg
cmp
dec
test
sbb
mov
jle
and
int3
jae
dec
stos
jnp
pop
sub
mov
cmp
fsubrs
in
out
insb
sub
push
cmpl
xchg
mov
lret
push
jo
aad
push
rcll
and
pop
xchg
mov
add
movsb
and
movsb
jo
pusha
rorl
pop
nop
pop
cmp
fisubl
notl
das
sti
and
jp
loopne
sbb
xchg
movsl
push
outsl
jno
add
jle
gs
jecxz
adc
std
cmp
ljmp
in
outsb
int
pop
dec
cmp
mov
pop
les
in
jbe
sbb
std
testl
add
push
push
mov
mov
outsb
inc
in
cmpsb
test
repnz
repz
inc
rorb
fwait
mov
in
and
testl
imul
jmp
scas
in
ja
jp
out
pop
lret
filds
loop
movsl
xchg
sub
addr16
sub
jno
notl
fildll
test
jns
xchg
push
pop
add
mov
mov
dec
fucomp
movsb
cwtl
mov
orl
xchg
add
sub
data16
popa
fildll
push
loope
cs
in
or
cmpsl
inc
jae
pop
in
outsl
sarb
inc
ss
lods
pop
push
pusha
xchg
popf
call
out
cwtl
fiaddl
out
in
and
xor
fwait
xor
sti
mov
leave
cmp
pop
movsb
mov
ljmp
jns
mov
fadds
out
loop
scas
dec
add
mov
clc
inc
mov
stos
aad
mov
adc
stos
popf
std
jp
sahf
bound
dec
in
or
push
mov
and
outsw
pop
or
fs
adc
cmp
and
push
jg
bswap
insb
repz
jmp
ss
mov
sub
lock
inc
arpl
cltd
ja
xor
sbb
pop
loopne
insl
pop
inc
mov
and
inc
adc
push
and
mov
lret
xchg
jp
inc
xchg
lret
data16
pop
push
mov
jb
pop
cmp
xchg
mov
out
data16
pusha
stos
in
les
dec
fstpt
xchg
arpl
es
lock
mul
add
mov
add
mov
sbb
add
dec
lret
jg
add
mov
and
jns
inc
pop
test
sbb
adc
or
ds
jne
lods
into
inc
shlb
push
sahf
mov
gs
pusha
out
scas
arpl
jg
cli
push
pop
das
iret
cwtl
xor
pop
dec
mov
dec
repnz
mov
adc
xorl
cmp
in
mov
aaa
cwtl
popf
jae
icebp
mov
or
mov
stos
out
sar
mov
cmpsb
cmp
dec
or
push
icebp
cmp
lods
leave
mov
in
xchg
xchg
leave
repnz
addr16
push
ljmp
aaa
push
lods
jle
addr16
pusha
test
ror
pop
dec
sbb
add
sti
aam
or
cli
fists
push
divb
adc
cmp
jmp
hlt
push
outsb
enter
movaps
sub
loope
mov
mov
sarl
scas
mov
js
dec
mov
adc
mov
test
cmp
sub
add
insb
fsts
and
adc
dec
outsb
or
dec
pushf
in
jne
fwait
movsb
sar
sub
mov
mov
nop
add
rcl
sbb
xor
adc
or
in
xchg
out
cmp
orl
xor
test
fsts
inc
jbe
and
stc
add
add
ss
sbbl
gs
in
xchg
xchg
sub
xchg
and
mov
repnz
lret
out
test
push
inc
add
jbe
adc
pop
ljmp
pop
inc
cmpsl
hlt
push
lods
rcll
lret
fistpll
repz
xchg
dec
test
ljmp
jbe,pn
fcom
adc
pop
add
lret
jp
ljmp
pop
jmp
out
addl
nop
repnz
add
pop
aas
popa
dec
or
jl
mov
xlat
insb
cmp
adc
sarl
shr
test
or
push
das
add
xchg
test
add
cltd
enter
sub
lcall
sub
push
es
fs
das
or
out
and
enter
push
int
inc
bound
fbld
shll
imul
pop
popf
mov
dec
stc
pop
inc
sbb
ret
mov
in
or
jnp
sbb
outsl
xor
jnp
push
mov
aam
in
repnz
jmp
mov
aam
sbb
popf
test
stos
std
dec
shrl
and
push
fcmovbe
mov
sahf
xchg
mov
shll
cmp
std
in
mov
je
xchg
lret
mov
add
ret
and
xchg
psrlw
mov
push
pop
fistl
in
ds
out
sbb
les
jo
pop
mov
popf
sbb
xchg
sub
div
pusha
int3
outsb
rorl
mov
in
sub
bound
clc
mov
test
push
fiadds
int
and
mov
xor
lods
mov
shlb
xor
inc
mov
dec
sub
jnp
dec
data16
mul
mov
lahf
pusha
addb
ds
insb
out
mov
lods
pop
sub
aad
push
cli
and
gs
pop
inc
in
jle
cmpl
lahf
ret
mov
push
and
fidivs
mov
aaa
push
xor
sub
and
mov
sbb
daa
js
je
dec
pop
dec
push
enter
sarb
or
ds
popa
fdivl
sbb
ja
sbb
mov
aam
bound
movsb
jp
add
lahf
cmpsl
insb
in
pop
mov
adc
mov
mov
in
jno
push
shrb
ficoms
dec
sub
movsl
test
xor
and
idivl
add
shrb
sbb
sub
mov
gs
mov
scas
add
int
scas
inc
push
mov
rcl
in
jae
and
mov
adc
cmp
sub
test
mov
fisttps
jno
arpl
loop
sbb
mov
subb
cmp
xchg
mul
sub
ljmp
cmpsb
jne
ds
sub
xor
jb
loope
ds
lret
and
sub
cltd
adc
xchg
dec
cltd
loop
call
sub
stc
imul
jbe
orb
jle
mov
lock
xchg
jmp
dec
nop
inc
pop
xchg
sbbl
adc
aas
and
test
adc
je
cmp
aas
xchg
adc
sub
data16
xor
outsl
sub
andb
inc
cmp
loope
icebp
cmp
lcall
rep
cwtl
jl
lahf
mov
mov
jl
jmp
adc
lret
sub
pop
aad
lahf
cmpsl
sbb
add
repz
xchg
cs
int3
jb
mov
inc
mov
cmp
loop,pt
dec
pop
mov
popf
or
ja
mov
int3
out
inc
adc
mov
mov
dec
dec
lcall
iret
popf
cmp
push
adc
or
std
add
sbb
scas
mov
jne
movsl
int
jae
fstpt
mov
ds
push
jmp
jae
xor
rcr
mov
jge
jns
pusha
xchg
ret
leave
int
sbb
push
mov
cmp
inc
test
repz
pop
and
and
adc
ss
or
mov
lcall
xchg
jnp
orl
add
jle
inc
test
ja
jle
iret
js
cmp
pop
add
adc
adc
in
mov
sbb
lret
or
pusha
lret
dec
xor
lcall
mov
iret
cmpsb
xchg
ja
cmp
or
repz
xchg
push
shlb
shlb
inc
bound
push
iret
and
pusha
mov
mov
hlt
inc
pop
in
cmpb
mov
and
fldt
adc
and
dec
lea
roll
loopne
das
popf
sahf
mov
mov
ja
xchg
sub
xchg
rorl
sbb
xchg
test
dec
fs
adc
inc
lret
mov
or
mov
jecxz
sbb
loopne
mov
or
sub
std
pop
jecxz
adc
fs
clc
or
sahf
out
xor
jno
mov
mov
adc
or
enter
mov
adc
mov
shl
push
dec
or
aaa
lcall
mov
jle
nop
and
xor
xlat
hlt
pop
push
lods
ss
divps
lds
fidivl
xchg
test
jae
mov
aas
adc
jnp
mov
jp
gs
iret
xchg
stos
add
sar
xchg
sti
jne
sbb
cmpsb
shlb
fildll
and
ficomps
les
or
xor
sbb
shrb
pop
loop
ja
jns
push
pop
bound
jecxz
call
mov
jmp
movsl
dec
rolb
aam
shlb
xchg
jl
jg
push
xchg
jmp
jle
cli
mov
fcomps
inc
or
jecxz
dec
sti
hlt
sbbl
cmp
add
jecxz
xor
lock
mov
ret
mov
mov
cmp
mov
fisubl
pop
pop
pmaxsw
jmp
sub
testb
pop
loope
dec
push
sub
es
loope
mov
test
fwait
cmp
call
fldcw
arpl
arpl
add
loop
test
mov
lret
add
sahf
out
xor
cmp
jns
fistps
stc
pop
cmp
std
mov
imul
mov
mov
rolb
inc
sbb
adc
ficompl
test
cmpb
pop
scas
test
mov
out
out
loop
test
jmp
test
sbb
test
sub
xor
and
iret
out
mulb
jne
stos
add
jle
mov
jmp
js
push
push
mulb
adc
and
mov
or
leave
testb
adc
or
dec
lock
lret
mov
pop
cmp
das
jecxz
mov
lds
fistl
data16
rorl
enter
lahf
fimuls
jle
insl
pop
daa
lock
mov
push
es
aam
roll
jne
out
cli
sahf
add
xchg
xor
movsb
jne
iret
xchg
pushf
fcmovne
outsl
xchg
insb
ror
gs
dec
lods
insl
push
xrelease
popa
loopne
push
pop
sbbb
cs
add
fsubrs
iret
add
movsl
orl
mov
adc
add
movsb
inc
xchg
insb
mov
pop
push
sti
fwait
xlat
fistps
mov
daa
je
bswap
loop
xchg
mov
cli
sbbb
jle
insb
les
xor
adc
mov
mov
lock
xchg
dec
cmp
mov
mov
dec
cmp
push
inc
lret
int
and
cmp
or
sub
call
aad
push
sahf
mov
out
ss
sbb
xchg
mov
aas
fcmove
xchg
mov
dec
add
mov
mov
sub
bnd
adc
movsl
shrl
lcall
jbe
cltd
mov
lret
shrb
sub
push
xor
push
and
xchg
dec
fisttpl
xchg
movsl
jbe
inc
or
xlat
sub
lock
pop
mov
xor
loopne
out
or
stc
xor
imul
mov
pusha
mov
aad
mov
rorl
add
pushf
fisubl
inc
movsbl
imul
push
ret
insl
inc
push
push
mov
mov
das
data16
mov
fsts
mov
ret
hlt
mov
xor
mov
mov
gs
inc
movsb
sahf
sbb
in
xlat
cmpsb
mov
scas
nop
cmp
add
fistl
mov
fstp
jl
rorl
les
ds
xchg
in
popf
addl
dec
xchg
in
adc
sub
xchg
and
ficompl
cs
lds
stos
push
mov
cmp
mov
mov
mov
cmp
lahf
cmp
mov
cwtl
lcall
daa
lret
lret
das
mov
scas
sub
fdivrl
lahf
jp
lret
fidivs
mulb
and
ss
pmaxub
bound
fdiv
add
mov
daa
and
hlt
sarl
loopne
xchg
dec
sbb
jg
mov
cmp
push
mov
xor
mov
xchg
andl
jns
mov
mov
xor
lods
and
movsb
inc
int
push
xchg
jb
insl
lret
sub
mov
xor
cltd
clc
cld
and
cltd
jl
xor
das
imul
stos
daa
xchg
outsl
in
outsb
jge
or
cs
shrl
xchg
jmp
mov
xchg
adc
push
cmc
sub
push
xlat
mov
inc
jo
sti
push
in
sbb
and
push
faddl
add
stos
pop
dec
out
mov
fcmovbe
in
push
jle
cmp
loope
push
mov
mov
fnstsw
pushl
dec
addr16
pop
mov
dec
sbbl
mov
cwtl
inc
push
mov
aad
js
mov
in
pop
popf
loope
insb
addr16
mov
aam
push
call
mov
and
sti
add
adcl
cmp
insb
xchg
mov
test
inc
jge
pop
loope
cmp
cltd
sarl
cwtl
mov
push
jle
sbb
cmp
jecxz
incb
push
shrl
cmpsb
add
jbe
inc
pop
fldl
fcoms
pop
das
jno
xor
bound
xlat
jecxz
inc
cwtl
cs
mov
cmp
mov
cmpsl
movsb
jns
gs
jge
pop
bound
cmpsb
nop
or
jp
outsb
add
push
xchg
sbb
aaa
pusha
filds
jnp
push
inc
negl
mov
movsl
or
and
inc
and
mov
sbb
das
xchg
sub
test
pop
xchg
pop
cli
mov
and
test
and
ja
sti
sbb
aaa
fldenv
mov
adc
in
incb
sbb
sbb
mov
xchg
in
in
jg
fimuls
jns
and
push
iret
xchg
insb
rorb
insb
push
shlb
adc
add
loop
dec
popa
sbb
lcall
add
mov
aaa
test
out
mov
mov
sub
add
pop
insl
push
pop
lahf
daa
out
sub
xor
rcrl
cmp
ret
repnz
hlt
loope
push
out
cmp
xor
and
fistps
lret
mov
mov
ds
adc
gs
mov
and
fimull
js
popa
mov
stos
xchg
push
ret
xchg
aaa
aas
bound
roll
jp
out
push
pop
adc
in
imul
and
pop
data16
push
test
push
xor
ss
inc
add
xor
hlt
out
mov
xchg
adc
je
int3
es
cmp
mov
psraw
out
cmp
mov
es
lret
add
and
mov
adcl
out
dec
lahf
fistl
div
fisubrl
mov
aam
dec
shlb
push
imulb
xchg
in
leave
pop
lcall
cmp
cmpsb
in
pop
adc
pushf
jge
out
int
int
lahf
mov
sub
in
rorl
ss
addl
or
cld
cmpsl
dec
test
icebp
mov
push
adc
ror
mov
add
inc
jg
cmp
mov
mov
lahf
leave
cmpsb
into
lods
dec
pop
jb
mov
addr16
nop
decb
mov
fiadds
outsl
adc
ja
int
add
stos
jnp
andb
stos
xchg
daa
loop
cmp
pusha
shrb
out
loope
jmp
incb
test
push
xlat
cmp
xchg
cmovge
adc
mov
rorb
cli
jb
adc
cltd
pop
and
lret
xchg
rcll
fistps
dec
xor
and
xchg
xchg
add
cwtl
lods
dec
sbb
int
adc
pop
cs
add
dec
push
pop
into
rcrb
jl
jno
scas
add
push
fsubs
outsb
notl
pop
addl
lahf
enter
out
mov
das
sub
mov
imul
jnp
adc
or
in
repnz
dec
inc
nop
in
jle
out
or
dec
jl
popf
cld
sarb
pop
imul
dec
dec
jp
push
int
xor
testl
jnp
fimull
cmc
jp
daa
jbe
aad
cwtl
hlt
test
popa
orb
adc
mov
sub
pop
je
bound
and
and
gs
negl
inc
jmp
outsl
inc
out
nop
imul
gs
sbb
lret
mov
inc
xorl
mov
sub
cmp
xchg
call
pop
jecxz
or
push
stos
notl
push
movsl
jns
iret
xchg
cmpb
sub
push
fisubl
and
ja
sub
push
into
or
and
or
test
pushf
leave
xchg
loopne
sub
push
jle
and
jl
add
cmp
inc
in
push
dec
iret
xchg
xor
cmpsb
iret
jo
mov
sbb
aas
xchg
lahf
dec
ret
mov
outsl
hlt
in
fisttpll
jae
cwtl
les
fidivrs
mov
mov
lock
je
scas
mov
push
adc
cmp
push
iret
pop
or
outsb
stos
push
cmp
jge
rclb
lahf
icebp
in
pop
addl
jb
aam
aad
cmc
xchg
aad
mov
sahf
loope
xor
jne
fdivs
shll
xchg
enter
mov
add
scas
adc
lock
cli
cmpsb
enter
adc
cmp
loope
stc
add
lahf
rorl
mov
adc
js
popa
popa
mov
insl
lock
mov
mov
scas
push
leave
out
add
jbe
aaa
cmp
lods
push
lsl
nop
lods
insb
out
mov
aaa
lock
fcoms
pop
fstpl
or
idivb
dec
enter
loop
daa
xor
enter
loop
pusha
xchg
pop
or
jns
cli
fmull
pop
adc
jns
insl
pop
jns
dec
std
xchg
fcmovne
add
es
ret
fdivl
out
insb
insb
mov
push
mov
rcr
mov
or
test
cmp
mov
scas
push
mov
shl
push
fsubr
notl
fldt
aam
mov
cmp
jecxz
jo
cmp
pop
inc
adc
xor
xorb
push
adc
xor
cmp
cmc
push
adc
jbe
xor
adc
repz
imul
mov
mov
push
inc
jmp
fadds
sub
dec
jmp
sbbb
ja
inc
cmp
pop
or
int
dec
hlt
ret
dec
push
pop
data16
fmul
stos
push
inc
xchg
lea
ret
mov
pusha
add
xchg
jp
pop
xchg
mov
push
bound
push
imul
gs
mov
int
roll
cwtl
movsl
or
cwtl
and
inc
jns
dec
bound
pop
dec
test
pop
jmp
cmp
cltd
incl
xor
push
jp
mov
fs
sub
je
jp
dec
movsb
dec
pop
lds
xchg
inc
divb
mov
ds
imul
cmc
cmp
sbb
mov
mov
pop
div
xchg
fdivl
or
adc
hlt
dec
sub
mov
fsts
cmp
cwtl
into
fistps
lret
inc
test
mov
lock
repnz
outsb
out
cwtl
lcall
cmpsb
push
push
shrl
jl
sbb
add
leave
shll
adcb
mov
pop
inc
call
lret
aad
pop
mov
mov
cs
xchg
wbinvd
and
in
in
push
or
mov
push
jmp
mov
dec
mov
out
mov
pop
add
outsl
pop
push
mov
sub
xor
movq
pop
in
pop
cltd
fwait
shrl
bound
jno
jg
pop
mov
adc
sbb
jge
divb
mov
jecxz
icebp
pusha
mov
dec
lret
and
xor
out
lahf
push
sar
pop
outsb
adc
push
sbb
inc
cmp
mov
dec
pusha
lret
fwait
jg
stos
sar
scas
out
enter
cs
sub
add
jo
jnp
sub
in
xor
fsubs
ja
notb
loop
and
outsb
shr
stc
xchg
lret
lods
jnp
dec
mov
test
xorb
pop
mov
adc
inc
cltd
adc
add
pop
lret
jl
outsl
out
adc
hlt
lock
imul
dec
outsb
movsb
sbb
ss
dec
xlat
fs
pop
or
jge
fldt
mov
mull
and
out
dec
jbe
test
adc
repnz
sbb
shll
insb
dec
adc
xchg
xchg
adc
scas
jnp
push
jo
push
ficoms
adc
pop
enter
fst
sbb
scas
loop
lahf
add
imul
in
or
ror
sarb
mov
lret
xchg
mov
inc
and
sahf
add
xchg
div
push
scas
imul
or
mov
mov
stos
sti
cmpsb
pop
insb
adc
inc
adc
jmp
sahf
sbb
lcall
push
jb
scas
dec
movsl
add
mov
jbe
inc
sbb
pop
and
mov
xor
mov
shll
fs
mov
fwait
pop
xor
xchg
into
adc
cmp
inc
sub
stos
fmuls
mov
or
jbe
add
call
xchg
sbb
ljmp
lcall
test
push
icebp
inc
out
ss
push
in
movsb
std
cmpsb
aad
outsl
je
xchg
daa
in
push
int
push
dec
xchg
and
mov
xlat
mov
arpl
fstps
inc
pop
mov
xor
jb
mov
popa
lods
fdivl
decb
test
push
in
cmp
iret
cltd
or
add
out
ds
in
mov
adc
or
cwtl
aam
inc
add
fisttpl
inc
sub
xchg
sbb
mov
cmp
mov
outsb
fistl
lods
roll
popa
jle
sub
pop
shll
mov
rcrb
test
add
sub
and
mov
adc
mov
loop
sti
lahf
call
xor
cmc
sbb
call
aam
adc
pop
out
sub
push
jle
movb
push
mov
dec
ret
addr16
xchg
cmp
cmc
xchg
xor
mov
rclb
mov
pop
cli
iret
stos
lea
jge
pop
sub
sub
or
inc
mov
jle
jp
mov
in
inc
mov
icebp
repz
xchg
daa
loope
pop
or
push
fistps
lea
inc
fucompp
adc
inc
pop
sti
mov
cmp
sub
add
xlat
lret
dec
popl
pusha
in
lret
xor
sub
pop
in
test
mov
mov
or
cld
pop
leave
mov
push
arpl
int
xchg
push
out
pop
xchg
dec
ds
enter
push
sbb
aaa
stos
jp
mov
test
pop
or
jmp
cmp
xor
sub
sbb
cmp
js
jne
xor
imul
out
jl
or
call
orb
addr16
or
pop
sbb
adc
push
pusha
insl
mov
pop
push
adc
std
lcall
or
int3
or
popf
ljmp
sub
call
or
sub
xchg
xchg
fbld
adc
and
pop
adc
and
and
or
adc
inc
ss
stos
and
addb
int3
xor
and
xor
clc
or
xchg
push
inc
lea
popa
orl
and
and
mov
in
push
test
mov
incb
add
iret
scas
lahf
ret
imul
mov
call
sub
or
cmp
and
push
fstpl
push
hlt
jns
sbb
jbe
aad
or
mov
add
sub
mov
cmpsb
sbb
pushf
xchg
lea
xor
and
mov
xchg
in
pushf
mov
push
dec
incl
lea
loopne
xchg
mov
cwtl
lahf
push
cmp
mov
jl
dec
jae
cli
and
jl,pt
mov
pop
pop
loop
enter
push
sbb
and
dec
roll
sub
pop
es
xchg
in
sbb
mov
mov
and
dec
jb
das
dec
aaa
xchg
movsl
mov
pop
ja
xchg
cmp
je
cmpsl
sbb
mov
movsb
sub
push
or
popf
andl
adc
jnp
in
fistpll
mov
leave
sahf
aaa
inc
fsts
or
inc
pop
pop
filds
int
cli
cmpsb
ror
scas
fildl
jnp
loop
add
outsl
and
inc
testl
mov
pop
rcll
xor
leave
cmp
fisubl
clc
cmpsl
in
outsb
stos
call
shrd
cmp
data16
pusha
dec
xor
int
ret
mov
xchg
pmovmskb
mov
and
sbb
mov
ficoml
xor
hlt
inc
push
imul
gs
pop
aas
push
sub
inc
sbb
mov
lahf
xchg
sbb
fs
push
jne
inc
adc
out
mov
movb
ds
cwtl
mov
cmpsl
add
test
xchg
outsb
in
mov
push
xor
stos
cwtl
ficoml
mov
fidivrl
pavgw
inc
xchg
ljmp
jge
push
xchg
pop
push
push
lds
add
mov
aam
lea
insl
test
jae
loop
fcmovnb
aas
jp
pop
divb
pop
mov
stos
sub
movl
inc
xor
leave
sub
test
sbb
lods
dec
sahf
fs
pop
mov
mov
enter
daa
cmp
sbb
sbb
dec
lock
push
ret
loopne
adc
push
jnp
cmp
xor
cli
stc
dec
lods
rcl
std
mov
daa
push
in
fcmovne
ljmp
mov
ja
dec
dec
mov
xor
jl
sub
arpl
adc
insl
and
out
mov
mov
add
mov
movsl
test
mov
mov
xchg
adc
sub
icebp
cmp
rcll
mov
dec
sahf
adc
xchg
fnstsw
fnstcw
aad
mov
xor
test
mov
pop
test
out
enter
jne
cmpsb
fistpll
jbe
mov
jmp
shl
popf
push
push
xchg
push
adc
not
pop
clc
and
call
xlat
push
cmp
xchg
cli
aam
jno
loop
adc
pop
inc
insl
ret
hlt
mov
jg
mov
inc
sbb
xchg
test
push
jmp
movsb
sti
pop
mov
jmp
mov
inc
shr
roll
aaa
xchg
out
scas
xchg
mov
mov
loope
stos
pop
gs
inc
xchg
in
cmp
enter
mov
aas
mov
scas
or
fs
mov
iret
loop
pop
aad
mov
push
inc
jle
xchg
or
cld
pop
pop
jbe
in
test
ss
repnz
jno
lret
sbb
pop
test
shrb
mov
fcmovnbe
and
inc
xor
maxps
test
out
loop
andl
jnp
aam
insb
add
lcall
dec
jl
mov
call
js
add
je
std
dec
lcall
pop
adc
leave
mov
mov
loopne
adc
push
pop
fcoml
call
fisttpll
push
fistpll
mov
inc
sahf
inc
sahf
xor
fcompl
fstpt
lcall
iret
test
pop
aad
mov
adc
pop
sub
jp
shrl
and
sarb
xor
bound
mov
je
popa
rcll
jns
fldenv
cmpsl
pop
loopne
mov
das
lret
imul
ds
out
sub
addr16
cmp
in
insl
jns
push
lret
jo
fnstsw
pop
popa
lcall
inc
idivl
testl
pop
inc
cmp
in
jno
jecxz
pop
loopne
stos
stc
in
and
lcall
int
jmp
scas
adcl
lcall
rcrb
movb
mov
jge
push
stos
mov
jns
rcrl
mov
arpl
scas
stos
jecxz
test
and
shll
push
cltd
sub
sbb
out
mov
cld
pop
loope
fdivs
mov
mov
sbb
sub
xchg
loope
outsb
inc
rcll
cs
or
add
shll
scas
clc
xlat
dec
mov
cmp
push
or
dec
daa
insb
cld
mov
xor
xchg
outsb
cwtl
adc
inc
or
sub
stc
lods
negb
out
cmp
push
mov
mov
jge
cmp
mov
adc
lds
gs
aaa
jo
and
push
mov
test
fdivs
loope
insl
dec
mov
ds
data16
mov
add
mov
and
dec
xchg
mov
cs
push
clc
inc
adc
inc
insb
adc
and
popa
mov
sti
xchg
and
loopne
jle
adc
or
adc
and
xor
lahf
addr16
jne
sub
ss
and
cltd
test
ljmp
dec
or
sahf
mov
pop
aas
or
and
stc
xchg
mov
and
mov
es
fidivrs
bound
and
in
jg
stc
mov
loop
ss
mov
popf
insb
push
lret
pushf
jmp
adc
aaa
loopne
fwait
mov
pop
cmp
lret
add
sbb
pop
cmp
inc
push
bound
aaa
xchg
stos
xchg
rcll
outsb
aad
jo
push
movsb
mov
jbe
in
push
fsubrs
arpl
xchg
aas
aam
outsb
mov
pop
jmp
and
sbb
dec
aad
rcrb
adc
dec
mov
and
push
dec
push
nop
dec
pop
shlb
int3
pop
push
sahf
scas
mov
mov
mov
pop
notl
arpl
jno
cmc
pop
fstps
jne
or
aaa
jmp
fsubs
adc
add
push
xcrypt-ctr
cmpsl
sbb
loop
call
and
test
mov
mov
add
xchg
mov
lret
je
ret
push
inc
pop
and
jecxz
push
enter
clc
sub
popf
loop
cmc
inc
jnp
pop
mov
fst
mov
fists
add
jge
shll
into
cmp
inc
dec
mov
mov
sbb
jle
xchg
xchg
je
add
push
cmpsl
mov
mov
jge
nop
xchg
add
jmp
daa
mov
lret
cmpsl
out
testl
or
cmp
ja
sub
cmp
cmpsl
xlat
xchg
sub
xor
mov
jle
mov
into
fsubrl
lret
pusha
xor
into
mov
sti
mov
dec
adc
and
subb
aaa
pop
mov
sub
pop
mov
ficomps
andb
hlt
sar
add
cmp
rclb
add
stos
loopne
sarb
or
das
mov
jp
add
dec
outsb
adc
cld
jp
stc
movzwl
mov
and
sbb
ds
jg
fcomps
xor
gs
mov
std
push
or
das
rorl
fstpt
lds
es
push
xor
xor
inc
jno
out
pop
mov
mull
stos
loopne
sbb
pop
aam
add
dec
add
lea
add
in
stos
int3
cmpsl
jle
sbb
pop
jp
push
adc
mov
fdivp
rcrl
js
popa
lea
sbb
push
cmp
adc
into
dec
adc
mov
fsubs
inc
and
mov
fidivl
sub
and
ret
mov
pop
pop
test
pushl
or
daa
sti
jne
mov
pop
addl
fdivl
adc
lcall
add
movsb
mov
scas
xor
dec
dec
mov
adc
cmc
lret
push
pusha
adc
scas
adcl
mov
xchg
inc
mov
adc
test
mov
test
cld
sub
call
jnp
jmp
xchg
nop
or
xchg
mov
mov
and
arpl
or
jmp
adc
scas
adc
cmp
scas
insl
test
iret
jns
jmp
pop
add
icebp
dec
fnsetpm(287
xchg
je
dec
daa
int
lods
out
emms
pop
scas
imul
shl
jg
adc
add
leave
cmp
jge
push
cmc
popf
fnsetpm(287
out
fadds
push
shlb
out
pop
add
sti
ja
sbb
xor
loope
cmp
in
sub
stos
mov
outsl
sbb
inc
mov
out
add
push
sbb
add
adc
and
aaa
inc
xor
sub
mov
ret
jle
mov
jp
test
cs
out
loope
or
pop
push
push
or
add
daa
fucomi
dec
sub
sub
lcall
and
mov
aad
roll
mov
jo
cmp
sti
mov
push
pusha
xor
jecxz
dec
je
sbb
stc
cmpsl
sub
mov
push
dec
mov
add
push
and
xorl
pop
shlb
adc
loope
push
mov
jno
lret
inc
jecxz
pop
notb
push
inc
mov
es
insl
dec
sub
push
cmpsb
mov
jo
xor
fcoml
mov
mov
mov
sbb
xchg
cli
je
je
adc
shlb
inc
jns
dec
call
or
dec
imul
pusha
scas
mov
fwait
lahf
jns
cmpsl
add
outsl
mov
je
fnsave
rcrl
stos
repz
jmp
les
pop
jbe
dec
movsl
mov
test
xor
repz
mov
inc
mov
ret
add
sarb
xchg
pop
imul
insl
sbb
pop
pop
call
dec
dec
mov
mov
out
jle
push
loopne
enter
out
repz
outsb
rcrl
add
cwtl
pop
clc
jns
dec
test
push
inc
jae
or
fcomip
push
das
out
sub
sti
pop
pop
sbb
insl
add
mov
add
into
testl
frstor
out
push
movsl
js
adc
push
xlat
insl
xchg
or
in
daa
push
int
je
push
notl
dec
jl
or
xchg
ljmp
inc
push
lea
jmp
lcall
mov
pop
aam
imul
jmp
jl
xchg
sub
inc
xchg
dec
jae
pop
cmc
or
mov
lea
lds
aad
jae
push
and
or
cmp
or
fwait
xchg
aaa
subb
jno
sbb
movsb
pop
das
adc
jmp
fists
hlt
or
xlat
adc
jbe
mov
arpl
movsb
ret
mov
inc
or
mov
adc
loop
jnp
arpl
notl
and
cld
addr16
icebp
xor
mov
and
sarl
sub
mov
or
mov
adc
shll
xchg
pusha
pop
pop
adc
inc
aaa
aaa
push
icebp
push
into
out
les
inc
outsl
stc
jecxz
pop
mov
pop
xor
loop
inc
push
nop
mov
xor
adc
imul
sbb
dec
pop
cli
shlb
cmp
mov
and
bnd
loop
test
aaa
adc
out
jno
or
call
imulb
xlat
lret
sub
movsl
pusha
pop
and
cvttps2pi
mov
int3
ss
jmp
lock
popa
stos
hlt
in
xor
xor
xchg
cmc
inc
mov
sbb
inc
pop
fidivl
ds
into
imul
jae
adc
push
sub
push
into
or
jmp
xor
inc
dec
testl
jg
mov
add
or
shll
dec
push
mov
rcrl
pop
dec
xorl
mov
dec
movsb
outsl
stos
push
sub
mov
ss
ficoml
dec
scas
mov
and
and
rcr
mov
push
xor
es
pop
insb
sbb
cli
call
imul
inc
jg
sub
mov
mov
mov
pop
cmp
call
lret
jne
push
daa
jg
and
jmp
fildl
aad
ret
jmp
mov
push
mov
adc
test
hlt
sbb
pop
jbe
sbb
xchg
cmp
adc
push
pslld
and
pop
push
out
push
pop
add
add
push
hlt
cmp
adc
lcall
loope
std
or
sub
sbb
xchg
cli
aam
into
roll
int
mov
repnz
fcompl
push
dec
and
mov
jnp
lret
adc
sub
fcmovne
xchg
cmp
fcoms
jle
push
movsl
cmp
movsb
jnp
lds
icebp
int3
call
add
cmp
shlb
dec
xchg
movsl
iret
inc
gs
push
mov
pop
pop
xor
mov
cmpsb
xor
es
xor
movsb
lds
btr
sbb
lret
jae
test
icebp
js
sub
xchg
aaa
mov
test
scas
fimull
or
xchg
adc
aaa
cmp
mov
sbb
in
pop
addl
and
mov
add
outsl
daa
sarl
lea
sti
push
xor
mov
cmpsb
jo
dec
and
add
cmp
lcall
outsb
xchg
or
fisubrl
cmp
fs
cmp
push
testl
lret
ss
or
mov
lahf
sbb
push
push
adc
push
xchg
or
sub
xchg
push
cmp
test
fldl
pop
inc
rcr
xor
test
mov
pop
cmp
movsb
jge
xchg
in
dec
push
xchg
lock
sarl
push
or
push
mov
lahf
inc
xlat
loop
iret
clc
jb
jnp
ret
lock
in
rcrb
jae
idiv
lret
aaa
jns
lea
sbb
aas
int3
decb
mulb
cld
mov
inc
inc
pop
out
cmp
jno
aas
out
loop
jmp
aam
ds
aaa
and
mov
call
sub
push
cltd
pusha
inc
rclb
xor
dec
and
js
mov
andb
push
adc
pop
mov
in
xor
jnp
nop
lods
scas
inc
enter
jle
rclb
push
mov
je
test
cli
add
adc
adc
mov
mov
out
in
or
fistpll
sbb
scas
pop
add
in
lahf
shrb
jl
or
into
mov
lahf
push
imul
movsb
adc
mov
xor
jae
and
xchg
retw
xor
clc
or
jg
pusha
mov
jmp
pop
jecxz
clc
movsb
jmp
pop
sub
cmp
mov
test
push
cwtl
xchg
push
cmc
dec
push
mov
mov
mov
out
xchg
xchg
mov
or
jmp
subl
mov
push
out
or
popf
test
scas
ret
scas
fistps
test
repz
sbbl
xchg
std
push
mov
out
test
ljmp
stc
cmc
dec
mov
mov
icebp
sub
and
xchg
and
inc
sahf
in
and
mov
pop
in
inc
sbb
int
aas
lock
or
mov
shrl
bound
cmpsb
into
lret
int
std
xor
cmp
leave
cs
jmp
jecxz
cmp
add
xchg
add
outsl
test
pop
loopne
xchg
aad
mov
test
sbb
fwait
dec
or
dec
leave
mov
dec
adc
repz
pop
sahf
ds
pop
or
xor
xor
repnz
push
stos
push
sti
pop
lods
xor
xchg
dec
loop
pop
push
jge
stos
es
aaa
std
push
mov
mov
push
ds
in
outsl
in
push
test
pop
push
dec
mov
lret
sub
mov
and
dec
shlb
jge
xchg
outsb
sub
data16
cli
dec
xor
add
inc
push
add
or
out
sub
aas
mov
sbb
jnp
sahf
dec
idivl
pushf
out
jns
fcoml
mov
or
jecxz
adc
outsl
xchg
push
into
mov
jl
inc
sbb
push
lret
rcll
xchg
shrb
jo
int3
sbb
imul
mov
dec
test
popa
and
inc
or
add
dec
mov
clc
movsl
insl
add
or
xchg
ja
aas
lods
lock
lods
cmc
mov
add
mov
insb
or
sahf
or
jle
dec
iret
call
outsb
fbstp
enter
idivl
add
sbb
and
arpl
lret
mov
jge
js
ret
jmp
xor
adc
mulb
xchg
mov
into
fs
mov
lcall
fsubrs
lds
lea
inc
call
scas
jns
push
in
and
push
arpl
in
leave
repnz
mov
fisttpll
stos
push
push
repnz
mov
xchg
adc
pop
cld
lret
outsl
jne
sarl
imul
xchg
movl
add
sbb
and
subl
sti
xor
dec
pushw
in
popf
sub
cld
fstp
cmpsb
sbb
ret
or
in
jp
jns
mov
rcr
mov
or
xchg
popa
xchg
int3
sub
mov
sbb
mov
mov
push
xor
iretw
inc
sbb
xchg
and
adc
stos
popf
imul
ss
sub
add
fwait
mov
xchg
sbb
sbb
std
lcall
and
aam
sbb
push
setp
jnp
mov
and
push
loope
leave
ljmp
and
andl
xor
sbb
lret
shll
lcall
dec
lret
int
iret
andb
leave
lret
jl
loop
sti
jge
roll
testb
pop
aaa
pop
cltd
pop
sbb
shll
add
es
repz
lret
in
fdivrs
xlat
add
ficompl
shrl
or
sbb
adc
lea
lods
aaa
add
xor
popf
ss
inc
mov
sbb
jno
jns
lods
lock
fs
xchg
sar
ds
cmp
mov
stos
dec
int
inc
push
aad
push
sbb
mov
sbb
mov
ficoms
push
inc
sar
lods
pop
int3
ret
hlt
and
or
sbb
les
push
sbb
xor
inc
aam
jle
sub
idivb
pushf
testb
xor
push
test
mov
aaa
aas
mov
nop
test
rdmsr
and
gs
adc
hlt
out
es
mov
cmp
or
sti
inc
add
push
push
out
or
cld
pop
repz
dec
pop
dec
insl
mov
mov
sahf
pop
scas
mov
pushf
out
sbb
mov
mov
repnz
scas
pushf
outsb
ja
lcall
and
push
add
and
jp
push
lods
sbb
jb
ljmp
sub
loopne
mov
insb
sbb
ret
shrl
or
cld
mov
pushf
push
sub
enter
outsb
pushf
mov
int
jno
mov
dec
mov
loop
enter
push
repnz
repz
cmpsb
sbb
xchg
enter
hlt
xor
and
loope
mov
fistpll
push
andl
addb
insl
xor
filds
repnz
sarb
call
push
addr16
inc
push
pop
ret
cmp
cmp
sbb
mov
push
adc
int
cwtl
jmp
adc
jns
xor
and
xchg
ss
jns
mov
in
mov
mov
mov
arpl
int3
or
mov
aaa
sub
lods
sbb
in
mov
int3
orb
inc
jg
aaa
lds
ss
outsl
daa
adc
sbb
popa
and
aam
gs
sub
pusha
inc
pushf
movsl
dec
test
cld
rolb
fcom
into
sbb
movsl
add
push
mov
inc
in
sbb
add
in
sbb
pop
cli
sahf
stos
jecxz
and
out
pop
adc
mov
pop
mov
loope
xchg
mov
jg
iret
adc
push
test
cwtl
push
arpl
xchg
je
addb
outsb
jmp
cmp
xor
and
xor
cmovp
gs
mov
xchg
or
or
cmc
test
jb
jecxz
hlt
mov
lahf
fwait
mov
les
mov
bound
movsl
jns
sub
push
sbb
mov
cmp
xchg
ds
push
mov
dec
jmp
cmp
into
dec
mov
xor
inc
lock
mov
aas
test
pop
cmp
test
movsb
std
gs
xchg
mov
push
hlt
dec
int3
jb
outsl
mov
inc
push
xor
xchg
into
ret
xchg
mov
add
insl
cmp
leave
add
pop
inc
sarb
mov
loopne
into
stos
push
jns
test
jns
testb
cs
add
ss
fstpl
cmpsb
loopew
or
add
mov
ret
ficomps
int
xor
pop
out
ljmp
push
sbb
lcall
shl
mov
aas
xor
aaa
sub
or
cld
xlat
jno
in
das
inc
gs
lahf
movsb
sbb
inc
pusha
sbb
jmp
and
dec
je
aad
repnz
scas
stos
iret
les
adc
jecxz
sbb
lcall
lock
push
and
cmp
daa
dec
dec
xchg
inc
call
inc
cmp
test
int
and
lds
int3
jno
jnp
dec
push
out
jne
add
popf
xorl
out
sub
cmp
pop
loopne
loope
inc
sub
adc
mov
inc
out
jg
in
ret
sbb
popa
fxch
dec
xorb
add
push
mov
and
dec
dec
cmp
push
inc
data16
das
sbb
dec
mov
call
sub
fnsave
add
xor
sub
mov
andl
rcl
sbb
lret
cli
xchg
into
dec
lods
test
dec
push
and
stos
sbb
nop
dec
mov
fwait
xchg
mov
xchg
dec
in
shrl
cli
push
test
xor
and
lahf
or
sbb
aad
dec
mov
dec
leave
cwtl
xchg
sub
push
jecxz
cltd
fxch
arpl
arpl
sahf
std
cld
xchg
fmuls
das
loop
dec
adc
ds
insl
lock
jbe
mov
ja
jns
and
es
pop
daa
inc
push
ljmp
les
cmp
or
ss
jge
popa
inc
push
pop
std
imul
mov
xchg
inc
sub
daa
adc
lock
pop
and
lods
out
inc
std
dec
push
add
out
sahf
stos
pushf
andl
mov
cmp
fwait
add
in
jge
sbb
jl
mov
pusha
sti
mov
in
ret
or
cld
aad
and
addr16
inc
ss
or
xchg
sarl
jb
test
popf
push
inc
popf
shll
push
loopne
in
xchg
stc
popa
loop
imul
arpl
ss
iret
pop
sti
es
iret
std
pop
roll
lods
inc
adc
popa
subl
adc
mov
xchg
loope
pop
jecxz
push
push
jg
and
int
dec
dec
push
inc
ret
clc
jne
cmpl
outsb
movsl
out
les
lahf
inc
pop
stos
hlt
inc
xor
out
fidivl
frstor
loope
shll
inc
pop
cld
lcall
cmpsl
stc
push
sbb
jmp
addr16
mov
mov
push
imul
outsl
cmpb
fbstp
xchg
mov
xor
xchg
mov
dec
mov
mulb
js
sbb
sbb
shrl
jo
loopne
je
out
push
pop
aas
mov
pop
mov
ret
mov
mov
divl
and
adc
sub
xor
add
xor
mov
push
xor
int3
popf
mov
sbb
mov
or
adc
in
rcll
out
aam
aas
call
movsl
push
push
arpl
loopne
push
and
test
lret
cmp
xor
lret
cmp
add
loop
sbb
lret
sub
dec
xor
add
lret
int
lds
bound
popa
repnz
scas
mov
push
xchg
fstps
fwait
mov
cmp
xchg
les
mov
movsl
dec
mov
sub
push
add
loope
add
dec
xor
mov
hlt
popa
loope
je
hlt
leave
push
mov
sub
push
out
or
lds
mov
loop
cmpsb
pop
aas
mov
pop
and
cmp
stc
and
clc
inc
lcall
pop
cmp
xor
dec
in
repnz
inc
mov
lods
or
push
sbb
mov
es
jg
add
push
jecxz
sti
xchg
jno
iret
int
les
mov
add
hlt
mov
jno
stos
in
les
repnz
push
sub
xor
movsb
loopne
and
aas
or
dec
clc
sub
negl
xor
xchg
and
push
push
dec
sahf
push
mov
lret
mov
inc
jae
scas
push
aad
or
pop
mov
lods
cmp
jl
pop
pusha
das
pop
adc
mov
pop
sarl
and
movsl
or
nop
adc
cmc
cmp
pop
sub
lock
lahf
in
pop
popl
mov
cmpsb
add
add
std
inc
iret
int3
daa
push
enter
inc
cwtl
or
mov
or
pop
dec
push
aad
inc
and
push
mov
mov
out
mov
pop
adc
dec
leave
push
sbb
jecxz
inc
icebp
add
mov
gs
aaa
and
orl
or
sbb
mov
out
pop
loope
add
inc
xchg
mov
cs
imul
fists
js
lods
xchg
pop
jns
gs
and
push
in
jbe
mov
dec
cmp
loop
sbb
cld
iret
nop
enter
dec
pop
mov
push
fcmovnbe
adc
mov
or
addr16
pop
jae
mov
outsl
test
js
cmpsb
pop
mov
ss
push
nop
add
popf
jmp
gs
xor
sub
imul
rorl
inc
inc
lret
xchg
add
pop
xlat
mov
dec
dec
sti
lcall
popf
call
push
mov
and
push
jmp
decb
push
pusha
filds
add
leave
lds
jbe
mov
mov
jg
imul
nop
xchg
pop
jecxz,pn
pop
aam
mov
setne
into
pop
fmull
fnclex
push
fcompl
mov
and
mov
clts
mov
mov
fadds
sub
xchg
out
jb
adc
shlb
lods
shll
push
pop
mov
out
mov
movsb
push
push
inc
xchg
jp
push
ss
dec
mov
xchg
add
aaa
push
jne
aad
test
rcl
lds
js
rclb
ret
rcrb
jb
in
repz
xor
sbb
data16
mov
sti
mov
cmpsl
jae
add
imul
ss
rol
into
mov
fidivrl
jecxz
daa
or
cmp
scas
jge
addb
push
movsb
pop
mov
inc
push
jo
dec
cmp
inc
les
push
adc
das
stos
rcl
inc
mov
mov
sbb
push
lock
push
les
pop
addr16
mov
sub
dec
or
inc
mov
arpl
cmp
jns
lcall
mov
cmp
aaa
js
cmc
iret
xchg
pusha
or
xor
imul
jge
cmp
sbb
mov
lret
divl
gs
jg
cmpsb
add
rclb
imul
emms
xor
inc
rorb
scas
inc
out
mov
lea
loopne
xorl
cmp
mov
mov
sahf
xor
add
xor
addr16
ret
mov
jb
push
shrb
outsb
cli
sub
imull
lcall
mov
pop
jno
xor
sbb
and
dec
xor
jbe
and
nop
shl
push
mov
scas
and
dec
test
test
add
cli
jmp
shrb
out
inc
cmc
add
repz
or
call
fs
sbb
in
push
jae
mov
lret
push
frstor
push
jae
xlat
enter
out
push
mov
sbb
cmp
mov
stc
fwait
lret
or
dec
and
outsl
aam
mov
stos
jne
repz
push
mov
mov
xchg
mov
aad
addb
call
int
out
test
stc
adc
rorl
xor
jb
cltd
inc
movsb
add
and
mov
mov
iret
enter
add
out
aam
and
sbb
in
inc
in
je
mov
fwait
or
xchg
leave
shll
push
mov
pop
xchg
inc
ftst
sarl
loopne
std
mov
movsl
mov
or
stc
cmc
lahf
jge
mov
pusha
incb
das
sarl
mov
out
pop
mov
int
add
mov
stc
mov
stos
cmp
jae
mov
loope
adc
sbb
jbe
or
lods
cli
push
pop
add
lret
lea
push
repz
pop
stos
int3
mov
iret
imul
movsl
mov
fdivrp
idivb
xor
out
les
mov
cwtl
xor
cmpsb
ret
les
into
pop
imul
xor
pop
sbb
jmp
sub
pop
out
je
movsb
push
shlb
stos
cmp
mov
pop
jae
jg
push
std
mov
dec
push
scas
pop
aam
pop
sub
dec
sub
push
ret
inc
test
lcall
or
add
adc
fucompp
fistpll
stc
int3
ror
inc
mov
js
sbb
mov
enter
push
test
cltd
fwait
test
sub
mov
xchg
mov
cmpsb
dec
push
mov
stos
fnstsw
jg
sahf
mov
jo
adc
dec
das
in
mov
repnz
cwtl
mov
cli
imul
fsubrs
pop
push
out
and
or
push
pop
scas
dec
ljmp
add
popf
popf
mov
sub
fs
jns
aad
iret
cltd
adc
ds
dec
out
and
add
xchg
mov
rcrl
dec
mul
lahf
faddp
test
xor
xchg
dec
je
jge
adc
xor
ret
addb
aas
and
adc
iret
pop
mov
xor
les
dec
inc
jo
mov
repnz
jb,pt
or
cltd
mov
and
dec
aas
test
pop
das
xchg
dec
notl
or
xchg
aad
lock
movsl
sbb
mov
test
jge
ja
faddl
sahf
mov
mov
lret
dec
push
adc
pop
jne
ja
mov
insb
mov
clc
fdivrs
dec
and
mov
shlb
xchg
dec
into
xchg
pop
jnp
pop
test
rorb
pop
out
xchg
mov
data16
xchg
fsubr
stos
jmp
sti
stos
xchg
and
mov
xchg
sbb
test
sub
inc
cmp
jns
jbe
adc
lret
das
loope
pusha
sbb
xchg
add
imul
cld
pusha
or
outsl
jl
enter
jecxz
inc
or
mov
pop
ror
rclb
jmp
addr16
cmp
enter
and
push
xor
xchg
jns
repnz
mov
and
jl
idivl
inc
psubw
add
aam
std
mov
leave
hlt
stos
insl
inc
adc
icebp
sbb
xchg
inc
lcall
mov
jg
xchg
cmpsl
xor
push
mov
lock
jge
mov
movsb
dec
mov
sub
ror
mov
jnp
lds
jmp
mov
jnp
mov
xchg
les
cwtl
push
mov
cmp
cmpsl
pop
incb
and
lret
imul
cmp
jecxz
xchg
cltd
cmp
loop
jle
paddusw
insl
bound
mov
loop
ret
cli
es
les
or
fsubrs
jle
cmpsl
scas
outsl
sbb
xchg
scas
das
test
push
pop
dec
stos
lcall
cmc
les
dec
out
jl
ja
jns
dec
push
pop
dec
test
scas
jne
add
and
cs
arpl
mov
fstps
lock
cmp
lods
movb
popf
aad
and
dec
nop
or
adc
addr16
arpl
cmpl
jo
or
loopne
jl
in
loope
outsb
daa
repz
mov
cli
pop
push
mov
jns
sbb
shlb
jp
push
push
je
or
scas
cwtl
jecxz
shlb
xor
call
pushf
push
loop
jns
or
jbe
xchg
repnz
out
mov
fdivrs
cmp
sbb
sar
and
and
loope
inc
mov
inc
mov
aas
sbb
addps
stos
bound
daa
imul
js
imul
sarl
and
loope
js
lods
iret
push
nop
mov
mov
xrelease
gs
push
pop
rcrl
cmp
shll
jae
cli
xor
les
adc
add
jle
fistl
in
inc
and
loope
popf
mov
loop
sbbb
jnp
mov
lods
jecxz
enter
dec
jl
sbb
xor
add
cmp
movsb
sub
pop
aam
popa
mov
pop
and
sbb
inc
xchg
sbb
lahf
into
sub
fisubs
cmp
jb
or
sbb
insl
je
or
jbe
and
push
push
mov
loop
repnz
mov
daa
pop
test
adc
push
repnz
ja
inc
js
pusha
aas
xchg
jge
lds
mov
adc
in
std
in
popa
jmp
inc
cwtl
adc
pop
fsubrl
add
ret
insb
arpl
loope
mov
pop
negb
mov
in
mov
jle
rep
pop
loopne
mov
push
lods
cmp
xchg
push
outsl
pop
mov
mov
ja
mov
lds
in
sub
or
xor
inc
cmp
out
ljmp
xchg
je
subb
mov
repz
in
mov
mov
aam
out
decb
aaa
push
test
movsb
pop
ljmp
addl
test
sbb
rcrl
push
mov
push
in
stc
aam
sub
cmc
test
push
jnp
adc
mov
jge
pop
mov
sbb
cmpsb
mov
clc
sub
fdivl
jo,pn
and
popa
imul
jecxz
in
or
push
jae
dec
jo
jle
jecxz
and
fdivrl
dec
xor
inc
mov
test
mov
and
int3
insb
xorl
xchg
daa
pop
inc
pop
icebp
adc
add
xchg
push
add
mov
xchg
dec
xor
pop
in
test
aaa
lods
iret
mov
sbb
xor
leave
mov
in
adc
jo
mov
fstps
sbb
adc
inc
js
xor
outsb
mov
sub
and
push
enter
jnp
jbe
cmp
mov
jne
js
sbb
inc
jl
jae
xchg
xor
in
bound
stc
sbb
dec
fcmovnbe
sbb
jmp
jle
rcrl
jbe
std
ret
into
out
push
mov
pop
fldl
faddp
pop
sub
fs
icebp
cmp
out
je
push
in
int
scas
mov
push
mov
jmp
xor
jg
stc
fcoms
add
mov
daa
push
xor
adcl
jno
mov
pop
in
and
jbe
xorl
je
je
aaa
movsl
push
out
int3
cmpsb
loope
data16
cld
mov
push
adc
adc
call
cmp
mov
sub
cmp
xchg
dec
and
repz
fimull
and
pop
inc
pusha
aas
xor
mov
sub
cli
test
ljmp
out
sub
das
hlt
cli
dec
cmp
mov
cli
enter
pop
lods
xchg
xchg
mov
dec
inc
mov
pushl
addr16
jne
inc
je
and
arpl
and
sahf
dec
inc
push
mov
fistl
mov
add
out
pop
xlat
inc
dec
scas
stos
mov
xor
and
out
adc
adc
js
cmc
xchg
ja
inc
clc
ss
mov
int3
cmpsl
imul
call
mov
xchg
les
aad
and
mov
notb
in
mov
movsl
push
jne
sbb
xor
cmp
pop
mov
inc
push
insb
sbb
mov
dec
push
data16
dec
ret
mov
movsb
add
and
push
add
push
lcall
adc
mov
jg
rclb
jno
fsts
push
pop
or
and
inc
xchg
fyl2x
pop
gs
mov
sub
mov
enter
sbb
sub
scas
or
jecxz
outsl
into
cmpsl
in
xchg
out
mov
movsl
jb
pop
xor
fwait
repz
ljmp
cmp
push
xor
sarb
xchg
dec
jns
adc
test
fdiv
mov
ret
adc
jno
in
jl
dec
add
sahf
ret
cmp
outsl
fmul
inc
xor
aas
std
xor
jb
sub
shlb
inc
lea
clc
out
push
icebp
sarb
cmp
imul
mov
div
xchg
nop
and
and
scas
shlb
sbb
xlat
andb
xchg
pusha
psubb
sub
add
mov
or
push
ljmp
add
xchg
xor
movsb
jp
addr16
jno
xlat
or
arpl
mov
mov
je
mov
pop
imul
add
cltd
pushf
daa
xchg
cmp
mov
lahf
imulb
jae
inc
les
fstl
ja
add
popa
mov
mov
fidivrs
sub
lahf
jl
xor
inc
cmpb
and
je
ret
mov
cmp
add
aaa
imul
orb
mov
push
in
xchg
xlat
repnz
mov
in
es
inc
lea
out
fcmovne
mov
bound
std
out
fnstcw
inc
sbb
jo
cmp
rcll
dec
rep
mov
add
icebp
jecxz
pop
push
adc
add
add
mov
loop
mov
dec
adc
xor
enter
movsl
cmc
test
not
loop
mov
scas
lock
notb
cmp
xor
jno
or
mov
scas
not
pop
ljmp
mov
xor
mov
cmp
cmp
push
into
xor
cmp
in
int3
cs
xor
pusha
jb
js
pop
mov
int
inc
sbb
mov
add
jb
xchg
lods
loopne
push
mov
cld
cli
pop
mov
andl
xchg
inc
lock
loop
mov
xchg
out
inc
jne
mov
lahf
push
pop
cmp
pop
sub
jp
add
mov
repz
fldln2
mov
fsts
fists
jge
jo
orl
xor
mov
xor
and
mov
adc
adcl
mov
les
les
jge
mov
sbb
and
aaa
adc
xor
into
mov
lahf
imul
jbe
jnp
inc
rclb
lods
dec
hlt
hlt
push
jmp
pop
sbb
jb
into
jns
and
add
inc
or
sub
or
scas
daa
fs
jns
or
movsl
scas
pop
add
jp
cmpsl
mov
mov
push
test
cmpb
mov
ds
outsl
mov
fs
cmp
stos
jo
cmovno
shrb
mov
fstpt
mov
lea
xchg
lahf
gs
outsl
insb
enter
into
out
sub
insl
sub
outsb
loop
jp
cmp
jnp
jle
in
loop
hlt
insl
jo
or
hlt
adc
rcl
push
cs
psubusb
out
dec
dec
inc
or
inc
fsts
inc
push
icebp
xor
bound
inc
aaa
fisubrs
cmp
jmp
push
iret
mov
fimuls
popa
aad
mov
pop
jecxz
bound
mov
stos
inc
data16
xchg
scas
aad
dec
loopne
popf
xchg
cmc
mov
int
repz
inc
or
push
xchg
mov
mov
inc
sbb
mov
xchg
int
mov
add
and
pop
mov
cmp
push
jecxz
fidivs
xor
popa
jg
shll
pop
cmp
jle
addb
gs
nop
cmp
in
mov
push
add
push
pusha
xor
lds
sbb
jae
das
popf
cmp
lcall
aam
adc
lea
mov
push
xchg
aam
cmp
fisubs
adc
xchg
mov
loopne
aad
inc
shlb
add
mov
lea
add
mov
lcall
imul
sbb
adc
stos
iret
lcall
cmpb
stc
cmpsb
mov
push
clc
dec
sbb
in
dec
imul
push
in
sahf
xchg
popfw
rcrb
mov
mov
aaa
push
add
fstpl
psrad
cmp
pop
mov
lret
jae
mov
push
mov
popf
jl
jmp
stos
out
fisttpll
fadd
xor
lods
jo
fs
shrl
aaa
sub
jno
jnp
mov
lret
gs
repnz
mov
pushf
mov
pop
aam
cltd
push
cli
xchg
pop
mov
out
insl
sub
jns
ljmp
loop
enter
insl
sbb
sbbl
shlb
mov
int
xchg
pop
xchg
notl
sbbb
into
xchg
mov
adc
test
or
cmp
adc
mov
add
adc
mov
pop
pop
cmp
mov
into
push
int
daa
mov
mov
sub
xor
and
and
mov
inc
cmpsl
shrb
dec
adc
popf
jp
std
in
sub
imul
mov
leave
rclb
adc
push
push
jb
nop
mov
mov
mov
lods
pop
adc
push
les
pop
and
loopne
dec
dec
std
adc
fs
enter
std
cmpb
pushf
sbb
out
cmp
pushf
in
mov
fstps
mov
addr16
mov
lea
jnp
pop
mov
ljmp
push
repnz
rcrl
sbb
pop
xchg
mov
pop
mov
cli
and
pop
pop
les
lret
lock
jmp
fs
add
adc
mov
js
pusha
loopne
fs
pop
pop
push
lock
lds
and
aaa
mov
ja
les
mulb
and
xor
add
mov
sub
scas
push
popf
jo
insl
mov
int3
mov
inc
pop
push
jbe
add
in
xor
or
jecxz
xor
or
mov
or
mov
divb
loop
push
mov
or
scas
xor
pop
mov
push
out
lret
jnp
adc
imul
dec
inc
lahf
pushf
nop
mov
imul
out
nop
leave
mov
nop
fldt
mov
out
leave
or
or
push
mov
cmp
rorl
cmpl
inc
xor
jle
popf
jle
xlat
frstor
pushf
adc
lret
dec
pop
loop
pop
xchg
sti
sub
sbb
dec
shl
inc
jns
sbb
pop
adc
push
movups
rcrl
frstor
push
xlat
bnd
ss
mov
jge
pop
scas
mov
arpl
cmp
out
xlat
xchg
scas
mov
ja
dec
out
and
cmpsl
mov
js
insb
adc
sbb
xorl
mov
ljmp
ljmp
push
ffreep
or
sbb
fistpl
nop
ror
dec
dec
add
stc
lret
fimuls
sub
test
lods
mov
insl
lahf
xor
sub
notl
ss
scas
js
jnp
pop
iret
aas
sub
cmp
cmp
sbb
mov
es
cmp
in
or
loope
icebp
mov
mov
call
int
inc
and
xchg
bound
call
out
imul
lock
push
aam
sub
dec
jmp
pop
popa
add
out
xor
cmp
icebp
sub
cmp
cmpxchg
bound
jo
test
ss
pop
jo
jae
jb
dec
cmp
and
aaa
jbe
pop
cwtl
imulb
outsb
push
lods
jecxz
inc
sarb
mov
dec
sub
in
pop
pop
jmp
sbb
adc
sbb
xor
out
jnp
jne
movsb
add
test
adc
cmp
fdivl
inc
mov
mov
mov
sub
inc
pop
repnz
aaa
add
je
gs
loopne
inc
test
les
pop
cmpb
or
imul
ja
scas
sub
pop
push
sbb
jmp
sbb
lds
popa
bound
icebp
das
in
jae
mov
pmulhuw
pop
xchg
mov
cwtl
mov
shlb
mov
push
xchg
lret
jle
outsb
test
movsl
lods
addr16
into
mov
or
fisubs
fsubl
enter
scas
out
call
inc
cmpsl
mov
outsl
cmpsl
pop
shl
pop
outsb
or
mov
call
mov
xor
lret
test
pushf
jne
xlat
xchg
call
arpl
leave
lret
dec
or
push
xchg
les
mov
adc
sub
or
adc
fwait
outsl
nop
fwait
pop
ret
lock
mov
out
jmp
push
pop
sub
ret
pop
lods
push
xor
outsb
repnz
dec
out
push
sbb
sub
inc
mov
mov
test
pop
dec
pushf
icebp
pop
adc
fisttpll
fiadds
arpl
sub
dec
xchg
data16
pusha
mov
in
test
cmp
cli
dec
pushf
dec
xchg
rol
push
scas
fwait
cmp
adc
sub
pop
jg
cltd
sbb
test
cmpsl
pop
lock
push
aam
aam
into
mov
inc
pop
dec
adc
psraw
out
jnp
jae
sbb
push
addr16
sub
sbb
fldenv
jge
in
mov
or
jp
int3
pop
fs
inc
loopne
mov
adc
push
push
xchg
cmc
pop
dec
je
outsb
pop
jne
push
cmp
imul
push
or
mov
aam
neg
and
lret
das
out
scas
adc
rcr
pop
xorb
push
leave
arpl
aas
mov
inc
mov
arpl
int
mov
imul
ret
mov
mov
loopne
pop
push
imul
mov
rolb
and
jge
and
pop
fistl
sub
jae
notl
fcom
jl
insl
in
fwait
adc
and
mov
mov
rcr
jp
or
push
lds
mov
add
out
push
insb
in
rcll
loop
hlt
add
fs
add
cmpsb
xchg
mov
into
jp
addr16
sahf
push
sbb
xor
lahf
push
push
out
xor
adc
sti
imul
es
loope
jge
xlat
lahf
lods
in
loop
mov
aad
data16
int
fldln2
repnz
push
rcl
mov
mov
mov
jmp
jge
mov
sbb
bound
jae
mov
fdivr
lcall
sub
nop
mov
jb
push
fsubrs
xchg
push
xchg
imul
dec
jae
jns
and
xchg
inc
les
mov
fxch
ja
gs
adc
push
fidivrs
idiv
lods
repz
cs
loop
pop
cltd
mov
lcall
outsb
imul
ud0
jbe
adc
jbe
pop
add
push
sbb
dec
or
rolb
sub
mov
jnp
icebp
ret
jno
pop
imul
icebp
cs
pusha
pop
daa
clc
bound
scas
mov
scas
lea
orl
cmp
inc
lods
into
nop
inc
sarb
add
mov
fstl
test
push
paddw
lret
ret
sbb
dec
sbbl
jnp
rol
rcll
mov
jge
mov
aaa
push
mov
aaa
lods
mov
stc
or
lds
mov
flds
ja
and
mov
arpl
or
ljmp
sub
pushf
out
inc
loopne
pop
pop
imul
in
gs
test
ret
sbb
xchg
roll
cmp
sbb
fs
push
push
push
mov
jne
push
cmpl
sarb
dec
aas
cli
movb
rorl
add
push
xor
les
and
cmp
pusha
jg
xchg
push
dec
out
jbe
adc
xlat
push
xchg
mov
js
push
cmc
mov
imul
xchg
push
ds
lds
ret
scas
ret
jecxz
mov
push
mov
xlat
mov
movsl
push
nop
fstps
push
dec
mov
imul
jae
pop
and
popf
mov
jg
ret
test
pop
and
push
mov
in
add
iret
movsl
es
pusha
fs
mov
out
pop
in
addr16
push
mov
popa
daa
mov
ljmp
xchg
xchg
neg
lods
pop
jno
or
mov
xor
rcrb
dec
testb
rcrl
loope
pop
lods
or
cmp
xchg
mov
leave
mov
aas
sub
sarb
pop
adc
sarb
dec
fsubrs
int3
seta
adc
lds
cltd
cmc
push
fisubl
inc
or
lea
out
nop
or
lods
push
jge
and
inc
adc
stos
push
sbb
shlb
mov
fadd
adc
mov
push
adc
cmp
lcall
push
push
adc
stc
push
jle
dec
pop
xor
mov
add
cmp
hlt
ret
jg
je
aad
adc
jle
out
neg
and
mov
and
mov
and
pusha
mov
xor
xor
dec
pop
scas
js
adc
sub
icebp
movsl
adc
arpl
scas
xor
mov
mov
shrb
and
movl
jo
lcall
jb
aas
js
imul
mov
aas
mov
fisubs
out
pop
xor
xchg
cmp
xchg
add
das
out
mov
out
test
dec
stos
pushf
pop
jbe
aas
mov
data16
xchg
cmc
and
cltd
cwtd
aas
mov
loopne
xchg
out
add
fsubrs
push
pusha
push
pop
lcall
or
dec
mov
out
scas
data16
bound
inc
sbb
js
js
push
mov
and
pop
jno
fwait
or
mov
ret
mov
cmp
mov
cmp
loop
aaa
fwait
mov
lahf
cmc
stos
pop
cmp
cld
sar
sarb
inc
outsb
push
out
testl
fwait
mov
clc
loop
cs
push
jle
test
xor
movsb
pop
mov
dec
push
cmp
xorl
stc
pop
jecxz
sbb
push
test
mov
jo
ret
sbb
cmpsb
ss
inc
out
mov
sbb
dec
inc
pop
mov
inc
ffree
or
sahf
mov
mov
jp
xchg
inc
fs
loopne
in
cmp
popa
mov
mov
icebp
mov
inc
mov
mov
outsb
mov
jge
out
mov
pop
lahf
mov
xchg
push
mov
mul
dec
cmpb
hlt
fwait
mov
fnsave
and
adc
push
mov
popa
xchg
addb
xor
enter
dec
mov
mov
xadd
mov
cmpsl
inc
jns
stc
mov
pop
dec
mov
enter
repnz
cmp
and
and
sbb
or
inc
mov
sbb
lret
dec
adc
and
shll
sahf
je
jmp
jp
daa
mov
dec
pop
jmp
movsl
int3
xchg
cwtl
cmp
push
mov
orb
mov
push
inc
mov
inc
jae
int
lret
push
push
mov
cmp
mov
fldl2t
adc
push
ret
scas
sub
hlt
mov
sub
out
mov
cwtl
jnp
popa
sbb
cmp
data16
jne
les
mov
add
and
mov
mov
push
pop
push
daa
adc
xchg
ja
enter
mov
fimuls
scas
push
pop
push
sbb
mov
pop
inc
aad
or
lret
or
sbb
sub
mov
dec
in
mov
sbb
adc
into
and
jbe
loope
xchg
fwait
xor
xor
pushf
pop
and
pop
jns
movsl
outsl
lods
mov
fwait
mov
cmp
push
mov
cmp
cwtl
cmp
mov
les
cmc
fstp
rcrl
add
dec
mov
sahf
leave
pop
adc
adc
dec
mov
mov
dec
adc
shll
and
xor
mov
das
mov
call
lret
popa
mov
add
dec
add
faddl
lods
sub
icebp
push
sub
mov
pop
add
mov
ficoml
lea
fnstcw
fs
pop
dec
out
btc
mov
mov
sti
xor
adc
sub
fnstsw
xchg
dec
jp
sarb
mov
pop
pusha
loope
push
inc
push
cmp
lret
pop
mov
jbe
in
ret
out
add
loope
ds
xchg
loopne
loopne
cmp
dec
shrb
cmp
dec
pop
test
cmpsl
ja
mov
push
test
pushf
insl
mov
clc
movsb
imul
addr16
mov
mov
in
shlb
pusha
popa
add
test
mov
or
jno
insl
movb
mov
cltd
adc
and
imul
imul
out
dec
out
sub
dec
xor
icebp
sahf
mov
lea
or
xchg
cmp
mov
cmpsl
push
movl
insb
add
and
xlat
pop
inc
adc
aaa
pop
sbb
call
and
scas
mov
loop
add
aaa
cmp
out
inc
dec
push
lcall
xchg
hlt
mov
jl
xlat
aas
jb
adc
sub
cld
pop
and
add
call
mov
fbstp
outsb
add
cmc
add
movsb
xor
roll
gs
ja
xor
pop
lret
aad
dec
xchg
add
addb
xchg
dec
inc
inc
xor
test
and
aaa
es
leave
xchg
or
push
loope
mov
hlt
sbb
ja
fisubrs
negl
pop
push
fistpl
iret
out
popl
or
leave
insl
cltd
sbb
imul
jg
push
pop
andl
repz
sbb
cmp
call
stos
std
dec
outsb
or
pop
orl
xchg
mov
jge
into
inc
jmp
addl
xorl
push
cs
add
outsb
or
sub
add
xchg
popa
fsts
sub
out
fdivrp
xchg
mov
and
outsl
repnz
dec
adc
mov
fwait
pusha
or
std
aas
js
cli
movsb
xorb
xor
stos
loope
cld
ljmp
lods
adc
ds
enter
js
test
hlt
or
pop
dec
aaa
jg
mov
cmc
lods
jp
mov
adc
mov
push
ret
inc
fdivl
push
mov
mov
jmp
cmp
insb
xor
or
xlat
dec
mov
dec
mov
sbb
add
loop
imul
mov
pop
adc
gs
add
inc
push
add
call
inc
mov
out
add
es
pop
popa
sbb
inc
mov
xor
and
jecxz
call
push
cltd
add
sbb
mov
sbb
mov
pmaxsw
push
in
xor
fsubr
aas
or
xor
rcrb
jns
das
xchg
cli
xlat
sub
and
mov
jp
cmp
cli
lods
push
sub
loopne
addr16
cli
dec
mov
bound
sub
adc
lods
push
icebp
stos
icebp
inc
lcall
push
mov
aam
leave
cmpsl
repz
xchg
jmp
push
test
mov
mov
jae
rcll
mov
xchg
scas
arpl
popf
or
dec
pop
aad
cmp
push
inc
sub
dec
fcoml
jp
pop
push
jl
jns
aam
lods
inc
adc
xor
inc
stos
jle
loopne
sahf
sub
dec
sbb
mov
iret
sub
int
sbb
add
mov
cmc
sub
lods
imul
and
ror
test
adc
adcb
adc
imul
mov
cmp
mov
imul
mov
xchg
xor
jbe
mov
sbb
sub
xchg
mov
jae
add
fimuls
insb
pop
daa
dec
adc
outsb
ret
int3
lea
pop
jnp
or
jns
jns
xchg
mov
pop
lods
fistpll
mov
push
leave
mov
or
popf
add
pop
cmp
xchg
and
test
into
mov
or
xorl
jae
xor
loop
push
inc
loope
lods
test
add
je
fmull
roll
cmp
inc
stc
mov
inc
in
cmp
out
icebp
call
cwtl
mov
adc
sbb
into
add
push
adc
mov
xor
push
ret
mov
scas
pop
pop
pop
mov
outsl
std
repz
fwait
or
addl
mov
lahf
cmpsb
cbtw
jb
bound
or
arpl
xchg
adc
out
push
scas
insl
adc
cli
jp
clc
pop
clc
inc
adc
divb
add
cmc
add
rcl
jne
testb
mov
test
clc
sub
mov
aaa
out
out
lea
arpl
fwait
jp
ret
in
pop
cmp
fstl
and
cmp
mov
outsl
jbe
lahf
rolb
mov
pop
aad
call
mov
jecxz
stc
daa
push
andb
xorl
out
in
ljmp
jo
push
push
lret
ds
jg
imul
repnz
jne
das
rorl
sbb
mov
adc
pop
out
adc
xchg
movsl
pop
ljmp
out
and
call
dec
in
int3
stc
jp
std
outsb
lods
xchg
iret
adc
out
adc
shrb
aas
xchg
lock
out
xchg
push
push
push
xchg
xchg
lock
ljmp
and
dec
push
outsl
insl
jmp
pop
adc
pop
lahf
out
fs
stos
fidivl
xor
fdivrl
lods
adc
mov
xchg
adc
shlb
pop
adcl
out
adc
xchg
and
popa
inc
or
lahf
leave
mov
mov
or
fcompl
cmpsl
leave
mov
fdivrl
iret
inc
aas
sti
mov
test
xchg
test
stc
popa
pop
addr16
sub
mov
int3
inc
xchg
xchg
addr16
loopne
fdivrs
cmc
and
fwait
ss
decl
out
sub
push
mov
mov
test
xchg
je
xchg
movsl
repz
dec
bound
inc
mov
xchg
push
repnz
mov
outsb
das
je
jp
in
mov
lret
sahf
or
lock
jg
sub
incb
and
jnp
cmp
aad
push
mov
xorl
pop
stc
pushf
sahf
add
lods
cmp
fists
ret
xor
or
ja
cld
xchg
lods
pop
mov
adc
jno
jle
loopne
xor
popa
dec
je
jl
dec
mov
cmpsb
and
push
adc
into
jae
and
imull
push
icebp
add
push
pusha
cwtl
pusha
add
mov
xor
fmul
push
pushf
push
mov
jp
leave
inc
cwtl
push
sub
push
jns
dec
pop
shlb
loopne
sub
dec
mov
out
jl
gs
xchg
adc
xchg
pop
mov
xchg
pop
sub
insl
jp
dec
or
and
adc
dec
or
dec
and
mov
pop
cld
test
das
movsl
mov
data16
push
sbb
jbe
mov
xor
sub
das
xor
mov
sarl
mov
cmp
and
mov
push
out
fistpll
cmp
mul
rorl
int
pop
push
or
mov
inc
mov
mov
jecxz
jno
sarl
xchg
mov
lcall
add
test
clc
inc
je
sbbb
jecxz
stos
mov
sub
popf
sbb
insl
adc
js
dec
dec
out
sbb
imul
add
jb
add
fsqrt
inc
call
adc
or
xor
sbb
insb
popa
pushf
push
loop
jnp
shll
adc
xchg
iret
notl
pop
fcmovne
xor
mov
add
clc
outsl
dec
dec
je
rcrb
outsb
enter
or
xor
sahf
add
mov
int3
add
icebp
in
add
cmp
ret
dec
sub
sbb
shll
mov
int3
cmpsl
mov
sti
lea
adc
js
pop
fldt
nop
lds
push
scas
cmp
add
or
adc
test
pushf
clc
loope
dec
or
stos
push
dec
fbstp
bnd
sbb
rcrl
sbb
and
jle
in
and
xchg
inc
xchg
and
pop
fdivrs
aas
lret
xchg
movl
arpl
xchg
test
fcoml
scas
push
dec
jmp
xor
cmp
sahf
jle
or
or
mov
arpl
inc
lret
xchg
je
xor
and
mov
add
add
jb
inc
cmpsb
out
cmp
out
push
lcall
inc
mov
popf
test
adc
and
idiv
push
xchg
adc
cmp
lcall
shll
ret
in
ret
push
scas
dec
mov
sub
hlt
cmc
and
pushf
js
push
mov
outsl
scas
je
fstps
jns
inc
sub
xchg
push
dec
popf
aad
in
jecxz
test
lea
jecxz
push
sbb
push
pop
cs
jb
gs
jne
out
pop
ret
lahf
adc
pusha
or
fsubs
out
mov
sbb
out
adc
xlat
test
cmp
aas
lahf
xor
mov
scas
fisubrs
nop
or
sbb
adc
ljmp
lahf
add
push
outsb
cmpsb
fcomip
add
unpckhps
xor
xchg
and
jp
rcrb
out
addr16
mov
sub
std
fnsave
stos
div
inc
mov
push
mov
mov
mov
mov
mov
sbb
das
fwait
push
add
mov
add
rep
mov
adc
repz
pop
xchg
ret
imull
mov
repnz
and
cltd
arpl
jge
sub
loop
lds
cmp
lret
fcoms
daa
lret
int
test
lods
out
data16
call
adc
imul
xchg
fincstp
pop
test
or
push
xchg
je
push
cmpsl
sub
lods
jo
int3
jo
adc
jbe
push
sub
ret
mov
idivb
add
mov
and
cmpl
scas
push
or
xor
push
add
mov
pop
mov
xchg
lock
jae
sbb
pushf
out
inc
das
sbb
orl
jl
fpatan
xor
cmp
mov
mov
cli
sub
xchg
movb
push
add
push
push
movsl
loope
iret
adc
sahf
pop
mov
push
mov
inc
mov
pop
out
lock
es
out
or
sub
fdivrs
mov
aam
icebp
sbb
sbb
fildll
jp
test
pushl
stos
sbb
push
popa
jns
push
fidivrs
push
add
mov
in
loop
mov
fcoms
repz
dec
add
fimuls
and
adc
xor
loopne
adc
shll
cmpsl
insb
cmp
dec
daa
aad
and
lock
add
cld
and
cltd
mov
jle
inc
ds
mov
dec
push
int3
bound
pop
xor
sub
fnstenv
mov
mov
jnp
sub
aas
xchg
icebp
movsl
gs
mov
test
popf
sbb
sbb
shrb
cmp
and
xchg
cs
pop
nop
clc
pop
dec
cmpsb
xchg
outsb
sbb
dec
ret
push
stos
cmpsl
ret
pop
je
out
ret
or
inc
inc
insl
test
std
bound
lcall
mov
fidivrl
aaa
ss
xchg
sarb
and
fstl
cmp
push
xlat
jno
in
sbb
inc
popf
pop
mov
adc
jae
jge
cmpsb
push
or
pop
jb
clc
dec
mov
dec
fcomip
popf
aas
cld
inc
add
sahf
push
jne
jl
dec
jecxz
xor
xchg
mov
sbb
dec
jo
jp
adc
and
repz
sub
xor
add
aaa
test
lock
test
pop
inc
je
jle
adcl
cmp
mov
push
test
inc
into
dec
or
lcall
nop
pop
jg
push
sbb
sub
mov
xlat
in
movsl
out
mov
add
adc
jb
roll
xchg
xchg
cmpb
mov
jb
xchg
nop
and
nopl
jae
cmpb
mov
jmp
push
mov
hlt
jne
mul
ds
add
adc
or
jno
push
in
sub
push
pop
and
mov
pop
inc
dec
inc
push
xor
lods
cmp
loop
inc
xchg
mov
fucomp
cltd
adc
mov
subl
or
sub
pop
or
test
jb
cmpsl
adc
adcb
in
aaa
sub
arpl
data16
out
mov
out
lock
or
xchg
out
aam
jmp
divb
fcomps
lret
jbe
cltd
cmpb
mov
sbb
mov
xchg
daa
add
or
bound
cmp
stc
fimull
pusha
dec
fsubl
mov
add
pop
mov
inc
imul
add
mov
xchg
jl
fdivl
mov
std
inc
rolb
sub
pop
mov
out
jp
popf
push
push
jl
fsubrs
cltd
adc
push
push
imul
cmp
clc
or
ffree
imul
cmp
pop
imul
ret
ja
pop
lret
test
adc
enter
adc
je
ret
or
pop
jl
jno
cmp
stos
push
loop
jmp
dec
hlt
or
insb
or
dec
adc
stos
pop
add
adc
adc
mov
ja
int3
adc
cs
rolb
je
pop
add
mov
xchg
cmp
xchg
jne
fisttpl
push
and
cmpsl
mov
cmpsl
sbb
es
pop
aam
lret
add
stos
or
int3
orb
mov
sub
inc
fs
cmp
inc
mov
and
mov
cmpsb
xchg
and
jns
lods
or
add
jae
das
jne
or
inc
inc
cmpsb
mov
aas
aam
add
xor
mov
lcall
test
orl
dec
rcrl
mov
test
imul
ret
pop
dec
mov
pop
pop
mov
in
pop
das
adc
mov
cmp
fisubs
sbb
sbb
add
test
arpl
push
nop
cmc
repnz
fldl2e
mov
cli
mov
sti
out
sbb
cmpsl
or
shlb
mov
or
jnp
and
jno
sbb
pop
pop
mov
push
pop
test
jmp
sub
repz
push
arpl
dec
shl
add
lahf
test
mov
inc
jne
bound
mov
test
push
add
mov
xchg
xor
pop
dec
add
or
sub
fldl
sub
js
loopne
das
mov
add
les
outsl
or
sar
pop
pop
push
lcall
fadds
daa
pop
sub
mov
fndisi(8087
sub
adc
xorl
cmp
xchg
mov
xchg
out
and
scas
add
mov
cmp
outsb
loopne
mov
movsb
int
mov
sub
iret
mov
lahf
js
in
ss
xor
mov
movsb
jmp
push
sub
bound
adc
mov
leave
test
jp
call
cmp
mov
push
jl
fidivrs
aam
xor
pop
dec
imul
cmp
add
mov
sarl
fwait
es
ljmp
lods
mov
lods
mov
push
xlat
jae
inc
leave
imul
add
aad
out
pop
pop
adc
pusha
lret
in
and
xchg
jge
add
popf
nop
cmp
movsl
popa
pop
lret
mov
les
xor
outsl
jae
movsb
test
push
mov
popa
mov
hlt
dec
mov
mov
dec
outsb
lret
push
sub
in
sahf
call
sub
shl
js
pop
mov
arpl
dec
xchg
or
mov
sbb
lods
xchg
dec
lock
adc
ret
lret
sbb
ds
sub
mov
iret
pop
push
mov
fwait
jle
popf
lods
loop
ret
xchg
addb
cmp
imul
cmp
adc
ljmp
pop
cmp
adc
aas
test
lcall
adc
adc
lods
jmp
mov
dec
testb
and
enter
sbb
and
or
sbb
rorl
in
adc
inc
jae
stos
in
lret
aam
push
ss
jb
mov
pop
insb
jno
out
fs
frstor
jo
xchg
push
shrl
mov
or
mov
in
sub
sub
aas
inc
imul
cltd
into
sahf
dec
push
inc
test
or
adc
lret
add
mov
cs
out
add
cmp
inc
pop
lods
and
inc
les
scas
xor
loop
mov
aas
xchg
sub
inc
push
pop
add
mov
mov
jne
es
lea
mov
adcl
in
sbb
sub
push
gs
sub
outsb
outsl
sbb
push
mull
fs
mov
out
jmp
leave
loop
dec
fisttpll
push
es
popl
test
enter
std
movsb
or
push
xor
mov
mov
mov
cmp
push
adc
out
roll
xor
movb
jne
adc
jmp
mov
cmp
bound
mov
imul
xor
scas
movsl
bound
inc
sub
ret
jecxz
lock
or
push
sbb
pop
arpl
push
sub
or
jecxz
in
jae
arpl
int
out
cmp
pop
mov
and
aas
lods
mov
movntps
mov
push
push
jno
pop
negb
mov
dec
mov
and
push
mov
mov
push
cmp
xchg
mov
xchg
push
xor
xor
nop
mov
das
push
adc
xchg
roll
mov
xchg
mov
sub
push
dec
imul
repnz
sbb
js
jo
push
sbb
mov
in
xchg
les
sub
ljmp
repz
jb
outsl
push
inc
xor
push
sub
inc
sbb
arpl
lds
inc
insb
dec
adc
or
xchg
and
adc
les
ret
pop
mov
test
push
and
cli
jge
enter
outsl
sbb
adc
jbe
jns
ja
lods
mov
xchg
imul
imul
mov
call
bound
jne,pn
pop
push
push
cld
jb
xchg
push
dec
xchg
xor
or
or
mov
scas
movsb
scas
das
pushf
shll
mov
mov
mov
lods
cmpsb
nop
adc
fimull
jbe
adc
push
lahf
xor
add
rcrl
out
icebp
cmp
pop
lcall
pop
jle
imul
jg
es
mov
test
pop
or
lods
scas
mov
shll
in
mov
push
scas
dec
inc
imul
loopne
adc
cmp
aad
sub
inc
rolb
sbb
lcall
mov
adc
pop
outsl
popl
aam
cmp
out
mov
out
into
push
sub
mov
or
mov
push
mov
or
add
xor
mov
or
inc
inc
cltd
adc
and
cld
addr16
or
pop
movsb
mov
xchg
sbb
push
pop
add
xchg
popa
push
loopne
ss
sub
mov
gs
popa
jge
pop
mov
and
int3
inc
movsl
in
and
mov
lock
movsl
mov
cld
movaps
add
xchg
mov
negl
fs
lahf
mov
fadds
sahf
clc
inc
lcall
dec
jge
scas
rcrl
js
hlt
fsubrl
add
xchg
xchg
stos
repz
pop
arpl
cmp
dec
notl
add
adc
loop
aam
subb
loope
pop
in
pop
adc
sub
fdivl
or
lret
shll
lock
mov
cmp
inc
push
jmp
mov
xchg
clc
clc
movsb
or
push
dec
or
std
scas
xchg
mov
pop
sbb
xchg
mov
test
loop
or
aaa
mov
jp
aas
xor
faddl
test
push
or
xor
jbe
dec
ret
les
push
cltd
arpl
jb
cmp
ds
cmpsl
jnp
add
xchg
nop
mov
scas
mov
adc
enter
push
xor
mov
mov
sti
out
not
pop
or
mov
add
push
fisubrs
iret
push
pop
inc
icebp
bound
rsqrtps
add
and
xor
inc
mov
lahf
mov
loopne
push
xchg
mov
push
sbb
jno
xor
add
mov
or
sbb
sub
imull
repnz
push
mov
repnz
in
push
lcall
mov
outsl
lods
or
xlat
sub
call
les
dec
push
sub
mov
vmovntdq
aam
mov
ds
jge
mov
mov
mov
jmp
outsl
in
sbb
fbld
sub
fcoml
mov
scas
clts
imul
fcmovnbe
jnp
cmpsb
jge
in
movsb
xchg
leave
cmpsl
mov
pushf
outsl
inc
lcall
ret
negb
jmp
pop
mov
and
into
inc
inc
jl
xchg
mov
les
dec
in
lock
and
cmpsb
inc
fcompl
xchg
and
shlb
push
addr16
inc
pop
movsb
rorl
popf
mov
in
fidivl
or
loope
test
xchg
and
jp
xor
pop
or
aas
jo
fwait
mov
enter
fimull
or
inc
rcrb
dec
aaa
xlat
mulb
inc
mov
mov
and
and
nop
pop
sbb
jae
inc
mov
jle
out
mov
cld
cmp
add
stos
and
xchg
xchg
pop
test
cld
movsl
cwtl
dec
and
cli
add
inc
jp
fistps
xor
cmp
pop
adc
and
stos
push
mov
stos
out
xor
cmp
enter
aas
cmpsl
adc
push
cmpsl
add
xor
push
loope
mov
notb
cmp
adc
in
mov
mov
and
xor
jb
insb
jg
jge
lock
mov
ss
or
xor
xchg
sub
ret
subb
int
xor
inc
sbb
xchg
mov
out
pop
push
adc
push
orl
enter
enter
outsl
movsb
es
xor
loopne
inc
sbb
pop
pop
cmp
add
fnsave
pushf
repnz
movsw
jns
repnz
pop
sti
lcall
jb
or
sbb
inc
mov
xor
cs
repz
adc
ret
lods
add
ret
bound
or
add
lcall
add
sbb
or
adc
stos
xor
jno
sbb
fcom
cmp
bound
and
iret
pop
ljmp
mov
in
rorl
jne
je
or
mov
imul
pop
call
cmc
in
in
jecxz
int
add
int3
stos
sub
shll
scas
mov
inc
mov
mov
sbb
sti
lret
cmp
inc
cmc
xor
push
icebp
mov
mov
push
fwait
push
inc
push
xchg
ret
and
sbb
mov
fnsave
jnp
cwtl
out
jbe
subb
aas
jo
add
in
cmp
cmpsl
into
mov
or
adc
xlat
incl
push
or
sub
ret
mov
mov
fadds
jecxz
and
push
inc
jp
nop
fimuls
sub
lret
sbb
fldt
xor
and
jecxz
jb
inc
les
fwait
cmp
cmp
sbb
inc
sbb
stos
jecxz
dec
ja
adc
push
pop
xchg
or
cmp
cmp
lea
mov
mov
or
les
or
in
ror
cmp
pop
lret
push
cmp
inc
push
sbb
cltd
inc
or
nop
adc
xor
dec
cmp
jb
test
mov
adc
outsb
push
jp
fistpl
push
rcr
stc
jnp
jl
aam
testl
jge
les
xor
test
int3
inc
testb
icebp
insl
loop
xchg
not
jle
pop
mov
inc
lcall
clc
ret
lea
repnz
repz
das
outsl
mov
sbb
dec
pushf
cwtl
daa
inc
xchg
or
xchg
mov
int
fwait
sahf
popa
xor
test
push
inc
or
jnp
adc
in
adc
jb
rclb
jle
xchg
dec
cld
shll
cmpsl
pop
mov
fwait
repz
xchg
aad
sahf
sub
or
bnd
pop
pop
add
or
bt
xlat
push
bound
cmp
push
push
jle
lods
cs
jno
int3
pop
rcr
daa
pop
sarb
ja
xchg
mov
fwait
lret
and
jl
movsb
scas
fbld
xor
sub
mov
ror
lea
pop
cmpsl
or
fisubrl
ficomps
lret
jae
add
sub
xchg
into
cmp
sbb
pop
xchg
inc
jo
lods
mov
lds
sub
lods
add
sbb
test
inc
jge
gs
mov
syscall
add
insl
dec
inc
inc
filds
sbb
arpl
mov
and
mov
stc
xor
lods
orl
push
push
lods
ret
and
enter
cmpsb
jle
push
mov
add
sbb
lahf
xor
inc
xchg
dec
pop
pop
scas
loopne
lret
mov
cwtl
xchg
dec
call
or
xchg
jo
xor
aaa
adc
mov
imul
aam
cmp
ret
addr16
lods
jo,pt
mov
fwait
push
insl
stos
pop
dec
jg
lahf
scas
inc
xlat
xchg
push
xor
mov
push
push
scas
mull
mov
mov
mov
lahf
mov
out
fcmovnb
repz
mov
push
xchg
sbb
call
xor
in
js
inc
fs
insb
sahf
in
daa
shll
adc
addr16
adc
and
fiaddl
push
cmp
pop
out
int3
sbb
popa
sub
sub
or
repnz
pop
std
shrl
cmp
movsb
pop
popf
pop
dec
testb
mov
mov
aad
jns
pop
mov
imul
insb
jnp
cwtl
jo
pop
adc
add
adc
cmp
fists
push
fwait
shl
loopne
xlat
bound
gs
jns
lock
inc
jl
cs
les
pop
push
sbbb
cmp
mov
mov
pop
xchg
cmp
nop
cmp
adc
push
push
sar
push
stos
out
ficomps
insw
bound
and
push
xor
and
and
sub
add
shr
adc
xor
sarb
cmp
mov
adcb
mov
rolw
ja
ret
adc
int
insl
test
ja
mov
inc
outsl
push
xchg
inc
mulb
fldz
sbb
xor
sahf
aas
dec
mov
push
lahf
add
mov
in
stos
cli
lcall
lret
adc
and
jne
sahf
xor
pop
cmp
ret
int
xchg
scas
pop
or
mov
push
cmpsl
mov
push
jge
jb
arpl
push
je
lods
das
stc
sub
mov
cmc
dec
or
mov
fbld
fdivrp
iret
es
xchg
test
push
add
popf
gs
fs
in
jno
out
cmp
les
or
rolb
xor
iret
clc
mov
cmp
lods
xor
fs
shlb
cmc
add
or
js
xor
es
movsl
or
push
dec
das
into
add
ja
mov
jecxz,pt
inc
or
pop
pop
inc
pop
sbb
pop
sahf
jb
cwtl
inc
int
fwait
pop
xchg
mov
lds
daa
lods
les
cmp
push
add
cmp
repz
adc
mov
push
xlat
jg
out
inc
adc
rolb
call
cld
jl
shll
into
loope
ret
push
loopne
outsl
sub
dec
movsl
aaa
in
es
dec
test
pop
mov
xchg
cmc
pop
dec
lods
sbb
add
lret
ret
repnz
nop
or
movsl
jecxz
shlb
mov
ljmp
hlt
ret
popa
mov
ljmp
or
imul
pop
jo
xchg
and
pop
call
pop
in
call
jb
adc
sub
clc
jecxz
add
and
movsl
popf
push
pop
icebp
insb
or
aaa
inc
adc
cmp
add
pop
xchg
add
jns
sub
shll
dec
dec
insl
ret
js
inc
imul
xchg
mov
jge
stos
out
fwait
xchg
pop
pop
inc
mov
gs
outsl
xchg
sub
loop
into
outsb
xchg
sar
sbb
push
cmp
jmp
cmp
mov
lods
pushf
and
dec
cmp
hlt
shrb
std
aaa
shll
fcomi
mov
sahf
std
mov
xchg
pop
mov
shll
and
jbe
out
leave
push
push
imul
pop
leave
jmp
aad
enter
cmp
scas
pop
sbb
scas
adc
movsl
jb
in
mov
loopne
sbb
lret
shlb
pop
divb
shr
sub
dec
cld
arpl
mov
scas
pop
mov
adc
out
sbb
popa
lods
loopne
loope
in
incl
ds
or
push
and
mov
sbb
adc
jl
push
adc
mov
pushf
xor
adc
mov
push
mov
sub
popa
dec
mov
dec
insl
ss
sbb
sub
cld
das
insb
pusha
ret
adcb
dec
test
push
movd
adc
add
dec
adc
insb
addr16
lea
adcl
imul
adc
push
test
in
sahf
imul
call
push
sbb
les
pop
pop
add
sbb
push
mov
rorl
iret
in
clc
xchg
test
inc
ds
loop
pop
out
lods
cmp
jnp
stc
and
mov
push
dec
and
cmc
les
in
es
inc
xor
mov
test
jmp
leave
das
pop
scas
mov
dec
jmp
gs
mov
mov
outsl
lds
lret
dec
nop
pop
dec
insb
dec
pop
sub
dec
imul
add
fistpl
pop
into
pop
hlt
out
insl
subb
add
fwait
dec
mov
push
call
ret
mov
pushaw
daa
aaa
and
jg
push
stos
mov
fistps
jle
xchg
leave
cmpsb
push
inc
nop
mov
mov
xchg
cmc
sub
adc
cmp
fildll
ss
ds
ficoms
mov
sbb
cmp
xchg
mov
jb
cmp
testl
pop
sbb
pop
aad
sar
or
out
jecxz
add
add
into
xlat
add
mov
int3
cld
pop
dec
fdivp
jne
mov
sbbb
shll
in
test
bound
cmpsb
or
inc
push
adc
push
fdivl
sbb
ret
addr16
mov
xor
out
cltd
jmp
lea
iret
inc
repz
jecxz
sbb
push
ja
icebp
inc
push
dec
hlt
mov
leave
xchg
xor
cmp
pusha
dec
shll
jmp
jmp
xchg
testl
adc
rorb
mov
push
aad
stos
aas
inc
dec
dec
mov
popa
movsl
sub
jecxz
cmp
or
inc
push
mov
mov
jo
xlat
cmp
decb
push
jl
push
aad
push
stc
outsl
into
popf
push
sahf
jle
inc
icebp
sbbl
cwtl
leave
add
movsl
sbb
lcall
cmp
sbb
add
pop
fimuls
pop
jmp
cld
in
xorb
aas
inc
and
jmp
rolb
cmc
cwtl
sub
cmp
in
cld
and
or
jecxz
hlt
stc
popf
ja
jmp
mov
mov
add
and
or
out
sub
jecxz
dec
pusha
ret
xor
pop
arpl
inc
je
jns
and
or
mov
orl
cli
cmpsb
insb
aad
push
sbb
cmpb
add
xor
pushf
scas
or
push
pusha
out
lcall
jnp
cmp
test
mov
mov
xor
sahf
inc
dec
push
repz
mov
lcall
jle
dec
scas
adc
je
hlt
xlat
mov
scas
out
pop
mov
or
fdivr
mov
in
in
jne
dec
dec
cld
mov
lahf
sub
iret
popf
jnp
lret
mov
xsave
sub
mov
jb
fwait
push
testb
lret
aas
cld
rcrl
pusha
imul
mov
cmpsl
arpl
mov
xchg
cmp
cli
icebp
cld
ljmp
sub
pop
xor
push
inc
sub
inc
jl
out
add
mov
loopne
cmp
jbe
insl
mov
dec
sub
jae
lods
xor
cmp
gs
add
out
inc
push
dec
mov
push
xor
pop
cltd
push
xor
fwait
sbb
dec
cmpb
test
mov
push
cmpsl
dec
lea
xor
pop
les
pop
pop
inc
leave
in
test
cmp
push
add
push
aam
aas
push
pop
fldt
add
xchg
jae
jmp
insl
mov
in
sub
jno
xor
jne
jp
js
push
sbb
das
xchg
int3
mov
jbe
stc
sti
pop
incl
dec
inc
cmp
xor
fnsaves
sub
adc
test
clc
repz
adc
es
imul
jnp
mov
je
jbe
loop
jle
sbb
test
mov
mov
mov
out
lcall
jmp
loop
jne
pop
lahf
ret
xchg
pop
repz
push
ret
jecxz
inc
mov
fsubrs
jg
lea
inc
movsb
dec
test
inc
sub
mov
mov
dec
jp
mov
sarl
mov
jns
call
mov
xchg
jne
dec
sbb
out
add
ret
adc
into
aaa
pop
int
mov
cmpsb
lds
cmp
popf
pop
jae
adc
ds
repnz
sub
loop
movsl
insl
xchg
dec
mov
xor
mov
clc
lods
mov
sub
das
das
inc
mov
fwait
or
push
adc
dec
push
inc
insl
faddl
dec
xor
ds
mov
cmp
jl
cmc
fistps
fiaddl
lea
sbb
into
aad
dec
enter
push
mov
stc
mov
arpl
int3
ds
fldcw
popf
or
sbb
inc
lock
gs
inc
cld
cltd
xchg
jo
test
mov
mov
jge
bnd
sbb
arpl
ss
das
add
sub
push
sbb
push
aad
jnp
mov
out
cltd
stos
movsb
cmp
mov
clc
ja
ljmp
inc
pusha
outsl
scas
sti
lea
ret
push
pop
xchg
pop
imul
call
mov
jge
xor
mov
mov
push
sar
neg
sbb
scas
clc
and
xor
dec
cmp
shll
popf
sahf
pop
fstps
lahf
cmp
mulps
xchg
push
sbb
imul
mov
adc
notl
jo
ja
in
lcall
pop
ja
add
fs
movsl
pop
and
inc
xor
mov
icebp
add
addr16
int3
ret
xchg
jb
pop
in
fiaddl
add
inc
test
xor
daa
pop
sbb
jle
sbb
mov
ja
pop
jno
out
cmc
adc
rclb
fisubrs
jmp
out
addr16
sbb
jmp
stos
pop
orb
iret
das
leave
imul
lahf
pop
cmc
add
push
fstps
ss
mov
cmp
repz
push
sbbb
orb
sbb
xchg
loopne
dec
xor
and
pop
push
dec
lahf
and
adc
lahf
mov
rclb
dec
mov
mov
icebp
sbb
or
or
and
ljmp
mov
mov
jo
add
push
inc
sub
mov
xchg
call
mov
stc
xor
jbe
or
and
jl
aas
lds
cmp
xlat
jmp
cmp
xor
ret
push
popf
in
pop
sbb
adc
lea
jns
rcl
imul
enter
mov
rolb
mov
xor
iret
out
jp
stc
xchg
xchg
pop
pop
scas
fsts
mov
adc
nop
fildl
or
and
inc
inc
mov
xchg
mov
mov
fcompl
xor
nop
stos
fldl2t
xor
mov
xchg
mul
inc
mov
mov
stos
rcl
xor
cmp
push
push
dec
sbb
xchg
bound
add
jle
cmp
jnp
pop
adcl
cli
insl
or
mov
orb
and
or
andl
popf
fidivl
mov
inc
xorl
mov
mov
insb
stos
xchg
rcrl
sbb
fiaddl
andl
mov
jle
and
xor
fstpl
pop
pop
mov
push
pop
xchg
cs
fistpll
cmpsl
jl
insb
mov
lahf
gs
je
mov
pop
mov
shrb
je
or
or
pusha
sub
mov
xchg
add
filds
and
loop
lock
or
mov
dec
sahf
fiaddl
fimull
stc
pop
loope
pop
int3
in
push
test
adc
xor
cmp
andl
sbb
pop
sub
jo
ret
jb
in
shlb
lods
push
jge
jg
sub
inc
mov
and
jge
fs
dec
add
jge
mov
push
in
mov
mov
or
mov
daa
adcl
stc
loope
or
aaa
ljmp
pop
pop
scas
loopne
movsb
movsb
jge
in
dec
sub
pop
mov
mov
fcoms
mov
xlat
add
push
ret
loope
cmp
cwtl
push
add
sub
or
fimuls
lahf
frstor
pusha
lock
stos
cmp
arpl
pop
cltd
ficompl
cld
dec
cmc
adc
in
sub
jecxz
ds
jns,pn
into
ljmp
das
mov
outsb
popl
movsl
push
xor
cmp
rorl
sbb
add
or
mov
fildl
fucomip
mov
imul
fsub
push
cmp
fisttps
shlb
pop
gs
add
add
scas
cltd
divb
ret
je
cmp
sub
inc
dec
mov
clc
fistps
outsb
jne
xor
in
dec
jne
std
adc
inc
jmp
fstl
call
mov
mov
arpl
sub
pop
xchg
nop
sbb
sbb
jmp
xor
push
cli
or
mov
stc
pop
mov
mov
dec
jecxz
je
bnd
xor
fdivrl
out
push
cmp
pop
sub
fucom
rcr
push
test
inc
ret
fisttps
je
fistpll
int3
fists
sub
test
lcall
pop
addr16
dec
jno
adc
movsb
xchg
shrb
xlat
add
hlt
pushf
cmp
dec
and
mov
repz
and
in
movsb
or
sahf
hlt
pusha
sub
movsl
f2xm1
inc
loope
inc
xchg
xor
orl
gs
sbb
movsl
outsb
mov
sub
dec
loopne
xor
repnz
rcrl
insb
xor
add
pop
out
jg
inc
into
and
sbb
test
out
and
std
jns
or
movsb
xor
outsl
stos
mov
insl
dec
das
je
xor
and
lcall
jne
mov
fwait
lds
inc
pop
mov
mov
fwait
in
pop
movsb
stos
mov
jp
loope
fldpi
aaa
xchg
std
movsl
test
into
or
das
out
out
cmp
xor
adc
call
lock
and
xchg
sub
or
sbb
mov
insb
add
clc
dec
add
repz
adc
adc
decb
add
imul
clc
jno
inc
mov
xchg
cld
sub
sub
jb
inc
mov
xor
xchg
cmp
gs
gs
fcom
jge
mov
bound
incb
enter
aad
jns
push
subl
mov
aam
dec
cmc
popa
mul
pop
push
or
fiadds
mov
fcoms
mov
dec
mov
inc
inc
mov
aas
dec
jmp
jo
cmpl
inc
test
cltd
lret
cmp
xchg
jbe
jbe
mov
sub
test
sub
fcmovnbe
cmp
imul
pusha
ficoms
int3
in
jnp
cmc
js
xchg
mov
or
jg
push
ss
addr16
and
add
fimull
mov
pushf
lret
push
ret
sbb
push
in
and
int
sbb
movsl
js
in
fwait
mov
mov
ret
jl
jb
or
push
fcmovbe
in
push
mov
add
lcall
mov
shlb
jb
arpl
into
jmp
mov
add
and
dec
jnp
sbb
std
cmc
ss
lods
mov
ret
gs
subl
pop
call
loopne
pop
mov
fdiv
movsl
imulb
pop
dec
lods
test
mov
inc
mov
dec
pop
cmpsl
stos
pop
push
sub
mov
popf
or
push
sti
out
lea
inc
sub
addr16
pop
clc
xchg
cmp
cld
push
ljmp
test
sub
sub
xchg
daa
pusha
fdivs
pop
sahf
cs
sbbb
insb
cmp
cmp
jb
rolb
les
vmaxss
xchg
imul
sub
insl
es
jge
test
repz
adc
aas
sbb
push
xchg
push
cmp
je
mov
jecxz
fistpll
push
dec
aas
fwait
pusha
jo
loopne
and
adc
pop
dec
cld
jne
pop
xchg
cmpb
jnp
in
ret
push
dec
dec
pop
bound
pop
aas
sti
and
mov
mov
icebp
out
lret
mov
pop
xor
lahf
jae
sbb
clc
shlb
mov
jmp
rsm
outsl
dec
pop
cld
sbb
jb
int3
jo
xchg
ja
mov
int3
inc
rorl
push
sbb
addr16
xor
int
cmpsb
insl
dec
cmp
dec
push
mov
or
add
pushf
cmpsb
mov
mov
sub
mov
mov
mov
xchg
pop
daa
enter
shr
or
mov
lret
dec
and
fisttpll
pop
dec
jns
mov
lcall
in
mov
add
sub
add
xor
mov
cld
add
faddl
fistps
inc
jno
dec
std
xchg
jno
jne
hlt
mov
test
in
jg
jl
jg
jge
leave
movl
or
aaa
adc
outsl
mov
cld
scas
fldl
test
bound
xchg
xor
mov
iret
pop
and
mov
push
mov
sub
dec
jmp
and
and
cmp
jl
dec
add
neg
sbbl
insl
sbb
push
pop
mov
pop
imul
push
sub
or
or
je
cmp
mov
lret
fs
shlb
and
add
sbb
sub
add
leave
adc
inc
cmp
popf
mov
enter
xor
dec
xchg
lods
and
add
jle
sbb
mov
cmp
fbld
jb
jne
xchg
dec
daa
std
ja
stos
and
dec
shr
push
pop
cmp
adc
xchg
push
mov
adc
pushf
mov
ljmp
jbe
add
jno
icebp
fwait
stos
dec
imul
cmpsl
out
loop
test
dec
cmp
sub
out
xchg
fiadds
or
rcrb
inc
lret
lcall
push
dec
sbb
add
jl
xor
fst
add
push
lods
enter
aad
push
ret
cmpsl
ficomps
lods
addr16
test
imulb
int3
fs
or
in
sbb
mov
int
inc
dec
mov
in
scas
pop
cmp
lea
jecxz
ret
insl
inc
mov
adc
lcall
mov
adc
sub
jmp
cs
or
outsb
std
pop
lahf
lea
pop
movsl
sbb
in
decl
dec
jo
loopne
xor
paddusw
lahf
adc
mov
jp
imul
mov
sub
inc
mov
andl
lret
data16
aaa
outsb
sbb
jmp
cmpsb
repnz
xchg
dec
mov
aaa
mov
iret
pop
mov
xlat
sbb
arpl
into
mul
dec
or
dec
in
mov
adc
xchg
push
enter
cmpsb
pusha
lcall
push
cmp
jle
adc
push
adc
push
call
aad
repz
outsb
and
arpl
aad
movsl
sbb
icebp
jno
out
dec
cmp
and
xor
filds
sahf
popf
lret
mov
xor
add
pop
sub
aam
jecxz
cmpsl
rcrl
lahf
in
inc
xchg
imul
adc
mov
rol
sub
out
test
cwtl
xchg
aaa
fstl
jl
inc
insl
inc
xor
inc
cli
cmpsb
mov
inc
jmp
fcoml
aad
out
jo
cmp
jle
fwait
xchg
pop
lock
addl
mov
stos
fidivrl
cmp
int
lcall
lods
inc
and
je
push
xchg
adc
loop
cli
cs
lock
sbb
xor
lea
mov
xor
mov
stos
outsb
mov
and
test
mov
aas
sar
xlat
and
mov
das
flds
aaa
sub
in
dec
add
mov
test
and
cli
scas
lods
mov
add
fidivl
and
nop
or
and
add
dec
xchg
or
xchg
cmpsl
pushf
cmc
clc
in
addr16
sti
sbb
mov
aas
dec
xchg
iret
cli
scas
jp
int3
mov
inc
mov
inc
pmuludq
mov
push
xor
jb
ror
adc
xchg
sahf
mov
js
adc
mov
scas
mov
repz
imul
add
inc
cwtl
pushf
push
bound
rclb
movsb
lds
jmp
sarb
jo
outsb
dec
call
adc
lret
nop
push
notb
pusha
arpl
adc
popl
xor
lods
mov
xchg
lea
scas
and
add
rcl
jmpw
imull
sub
aaa
mov
fsts
outsl
sahf
mov
into
jno
mov
loop
adcl
xor
cmp
fs
ss
jnp
mov
mov
adc
adc
and
add
stos
in
lods
andl
inc
mov
mov
inc
jne
xchg
push
aam
rcrl
andl
dec
pop
pusha
gs
and
repz
icebp
pop
cmp
pop
jnp
ljmp
in
dec
stc
ljmp
push
dec
test
mov
rorb
xchg
inc
sbb
mov
lahf
jg
movsb
mov
lods
mov
shlb
pop
adc
xchg
push
mov
push
pushf
jmp
aas
gs
sub
sarb
cmpsl
sahf
push
addr16
and
inc
lods
mov
in
push
jno
mov
mov
repnz
jbe
jbe
std
fcom
push
aas
xorl
in
jae
push
mov
mov
fisttpl
add
mov
clc
sub
enter
push
fwait
idivl
mov
testb
out
xchg
inc
sbb
xchg
xchg
push
push
lea
cmpsl
jmp
in
aad
xor
fdivp
sbb
push
test
push
shr
loop
test
imul
icebp
mov
mov
aas
jb
adc
cltd
mov
cwtl
push
in
xchg
mov
mov
iret
lods
cmp
fldcw
mov
cmpsb
in
out
push
in
add
addr16
xchg
pusha
out
in
xchg
pop
test
push
bound
push
ficoms
mov
pop
subb
aaa
sub
cwtl
sti
add
mov
push
mov
or
in
aaa
cltd
add
or
sub
push
testb
cmp
jmp
stos
dec
loop
ljmp
ror
insl
subl
push
sbb
push
jg
test
mov
repz
push
dec
cmc
fwait
shrl
xor
aam
mov
jno
mov
out
pop
fwait
add
pop
jnp
push
add
lds
mov
add
cs
insl
lahf
lods
inc
xlat
cmp
xor
mov
xor
sub
stos
push
jbe
ret
xchg
pop
and
push
adc
fbld
rolb
mov
test
adc
insb
imul
imul
xchg
cli
mov
ficoms
cwtl
pop
jo
sar
hlt
sar
push
mov
dec
pop
inc
out
movsl
scas
shrl
push
mull
pop
add
pushf
xor
mov
inc
int
cmpsb
jle
mov
fcoms
aas
ljmp
fs
push
std
cmc
inc
xchg
cmpsl
mov
aad
jmp
sub
leavew
test
jl
out
lods
mov
and
js
negl
imul
adc
mov
xchg
dec
icebp
in
imul
sub
push
mov
or
push
jno
xchg
outsl
mov
rcr
imul
aam
movsl
jae
es
fcompl
mov
xchg
add
ficoml
shlb
push
mov
add
imul
dec
ret
cs
cltd
inc
push
add
and
mov
xor
pop
cmpsb
pusha
inc
iret
or
out
xchg
stc
lods
mov
push
pop
mov
sti
jae
dec
or
pop
push
lcall
jmp
cmpsb
flds
mov
push
out
popa
in
push
mov
push
mov
hlt
shlb
fs
jg
incl
mov
sbb
dec
adc
ljmp
mov
mov
pop
cmp
xchg
adc
sbb
dec
int3
shl
sbb
lret
jbe
int
xchg
inc
imul
test
mov
dec
add
cli
push
arpl
call
pop
cmpsl
mov
repz
jnp
loope
stos
push
imul
push
jae
mov
jle
cmp
push
pop
sbbl
or
jnp
fwait
ss
aas
push
std
out
nop
pop
jmp
lahf
jbe
insb
movsl
mov
xchg
fnstsw
mov
fs
and
ja
daa
scas
fistl
adc
jg
test
mov
push
shll
loope
nop
roll
mov
sbb
imul
sahf
fs
sbb
fadds
aas
sti
ltr
das
add
lock
mov
in
push
lods
pop
ja
pop
jbe
adc
gs
mov
jecxz
pop
push
repnz
push
lcall
and
mov
lods
cld
dec
fstpt
jle
xor
jns
aas
inc
sub
rclb
mov
mov
into
sbb
add
cltd
scas
mov
shlb
mov
jle
cmp
ljmp
add
loope
ss
push
mov
add
jecxz
cs
xchg
dec
popa
ds
jp
mov
mov
jns
pushf
in
jo
xchg
pop
and
pop
stc
lret
adc
push
sbb
icebp
ljmp
push
bound
cmpl
mov
jmp
mov
push
fadds
xchg
ret
dec
into
sbb
mov
mov
call
dec
outsb
pusha
imul
xchg
lcall
xor
leave
pop
sub
cmpsl
push
push
fdivl
add
hlt
and
xor
nop
pop
dec
dec
or
shrl
inc
js
mov
inc
jb
or
dec
aas
adc
add
outsb
push
cld
pop
sbb
cmc
int
push
and
jae
inc
sub
xor
adc
and
es
mov
cmp
sbb
xchg
pop
dec
xchg
mov
mov
mov
hlt
inc
xor
adc
insb
arpl
incl
and
mov
pop
pop
xor
ss
sub
or
xchg
arpl
hlt
push
add
aam
ror
jns
aas
addl
mov
push
test
add
sub
xor
ret
inc
sbb
test
fidivl
jne
mov
or
fsubp
fmuls
jecxz
dec
lods
ljmp
ret
sbb
adc
inc
inc
ds
loop
push
pop
mov
decl
cmp
cltd
dec
insb
ja
test
pop
xchg
push
lahf
mov
dec
in
or
inc
movsb
fistpll
clc
scas
shrb
jle
and
or
mov
dec
imull
sbb
inc
inc
mov
add
popa
and
and
push
pop
push
jnp
in
jbe
mov
adc
es
inc
push
gs
sub
lds
push
aas
cmpsb
push
loope
jbe
mov
adc
aad
mov
jl
scas
cmp
adc
outsl
push
xchg
stos
mov
jns
jg
pop
pop
aam
inc
adc
xor
lahf
clc
mov
inc
fs
pushf
orb
and
adcb
inc
mov
mov
xchg
ret
mov
rcl
xor
add
sahf
shl
in
dec
popa
das
fistps
pop
push
call
lret
ret
aad
mov
loop
call
sbb
push
cmpsb
rol
sub
sbbb
jmp
das
inc
movsb
lods
xor
mov
int
inc
andb
dec
push
fwait
cli
lods
and
xor
pop
mov
and
fidivrs
shr
test
lods
ds
xchg
loop
in
pop
mov
cmpsl
sbb
cs
stos
xchg
mov
sub
xlat
movsb
jg
mov
popf
out
fidivrl
int
mov
in
sub
and
es
mov
xor
insl
aas
mov
jno
sbb
adc
mov
dec
pop
dec
pop
sub
mov
mov
inc
stos
sbb
dec
xchg
cmpsb
add
test
mov
mov
mov
inc
sbb
call
push
lods
push
loop
into
xchg
outsb
push
inc
leave
fcompl
fstpl
and
mov
xchg
cmp
imull
and
jmp
xor
cmp
mov
js
or
and
out
adc
cmp
imul
aam
pop
mov
or
iret
adc
lahf
dec
jne
test
je
into
pusha
in
mov
jge
push
aas
pusha
addb
test
jo
adc
adc
cmp
stos
sbb
dec
xchg
add
roll
and
nop
divb
outsb
mov
in
mov
cmp
aas
add
mov
cmp
cmp
cwtl
mov
repz
into
jbe
sbb
dec
fdivs
mov
xchg
test
mov
pushf
cltd
dec
cli
clc
fbstp
mov
bound
mov
pop
push
xchg
and
and
jno
movsb
imul
mov
out
add
sub
or
fimuls
aam
jnp
icebp
bound
xor
hlt
cli
xor
push
cbtw
fisubrs
out
or
fcomps
sti
or
add
jle
or
lcall
add
mov
ret
ror
out
or
xor
lret
in
mov
ds
insb
adc
add
push
decl
cmp
lods
dec
pop
jle
gs
xchg
jbe
sub
mull
sahf
out
outsl
insb
fnstcw
stos
in
mov
fbld
repz
int3
inc
adc
icebp
cli
loop
movsb
jp
xor
addr16
movsb
and
xor
mov
cli
xchg
dec
xlat
push
pop
xor
imulb
xchg
icebp
fs
pop
push
or
popa
aam
or
sbb
rcrl
inc
fpatan
shrl
inc
addr16
xchg
sbb
inc
adc
inc
js
pop
cltd
mov
aas
xchg
pop
aaa
dec
cmpsl
adc
js
jmp
push
jns
or
imul
push
or
ret
fnstcw
cs
frstor
push
stc
dec
mov
fld
call
aas
lret
xor
sbbl
inc
xorl
cmc
adcb
cmpsl
pushf
cmp
xor
mov
sbb
aas
pop
mov
inc
sub
loopne
mov
sbb
xchg
hlt
push
mov
pop
sbb
fildll
mov
shlb
pop
cmp
daa
movsl
pop
cmp
adc
mov
in
dec
pop
dec
jbe
mov
sbb
lods
pop
shrl
fdivrs
gs
push
repz
out
arpl
aas
cmp
and
jle
jl
insl
movsb
loope
cmp
xchg
lret
cmp
stos
insl
inc
aas
mov
test
insb
scas
pop
mov
add
add
adc
push
cmp
je
cmp
xor
pushf
add
or
adc
jae
jb
loope
cmpsl
or
inc
push
push
ret
daa
pop
insl
dec
int
andb
jb
rol
mov
mov
add
jmp
loopne
mov
or
sbb
clc
mov
aaa
jmp
mov
in
jg
xorb
xchg
out
pop
pop
mov
push
push
repnz
push
jno
sbb
rorb
js
stos
add
mov
in
enter
ljmp
loopne
mov
sbb
cmp
xor
adcl
cmp
icebp
ret
pop
add
mov
xchg
push
es
xchg
and
inc
jnp
push
jecxz
orb
jbe
inc
mov
jmp
je
popa
popa
push
sub
pop
std
sbb
sbb
testl
push
mov
mov
mov
and
or
xchg
test
in
mov
arpl
out
imul
mov
in
fidivl
mov
cld
mov
pop
test
scas
xchg
dec
adc
lahf
jno
mov
pusha
mov
dec
xchg
add
mov
cld
ds
negb
jnp
les
pop
xor
ds
into
nop
push
cmp
test
xchg
jbe
fsub
or
pop
push
mov
cmp
mov
orl
and
ret
lock
add
sub
shlb
mov
push
jl
mov
or
jle
adc
in
fsubl
stos
pop
xchg
ret
pop
and
mov
sbb
test
jno
jo
movsb
in
add
loopne
repnz
pop
ret
insb
pushf
mov
push
pop
dec
aas
addb
sub
shll
cmp
add
pusha
js
push
dec
fsubs
add
jecxz
int3
or
orb
bound
cli
pop
loop
aad
ss
push
dec
adc
inc
mov
mov
pop
push
es
and
int3
mov
repnz
in
cmp
push
scas
mov
adc
add
xor
hlt
ljmp
sub
loop
hlt
push
ret
addr16
push
mov
fucomi
push
and
nop
ja
push
mov
adc
add
in
enter
push
fisubl
scas
and
out
dec
and
mov
or
mul
sub
cli
das
dec
stos
jno
jp
mov
inc
pop
nop
mov
sub
inc
adc
sbb
ja
push
fcmovnb
insb
xchg
or
push
push
outsb
fimull
xchg
int3
cmp
inc
mov
push
dec
xchg
rol
jl
les
add
cmp
jnp
add
scas
mov
xchg
push
aas
cmp
mov
pop
inc
sub
sbb
xor
insl
in
cmp
xchg
pop
mov
fwait
pusha
pop
and
sub
imul
pop
stos
sbb
sbb
jo
pop
mov
mov
and
or
pop
jne,pt
stc
dec
lods
dec
inc
jg
xor
jne
pop
mov
xchg
mov
pop
iret
xchg
hlt
lret
mov
add
daa
lret
sbb
inc
sub
sbb
popa
mov
mov
std
aam
pop
jo
inc
jno
cmc
jp
fnstsw
sub
mov
fs
loop
into
xor
xchg
fistpll
mov
xor
sbb
add
lret
dec
mov
cli
jns
cltd
aad
and
popl
add
xchg
aaa
xchg
ja
inc
dec
movsb
ret
and
pop
scas
dec
cld
ds
into
out
mov
ja
enter
lret
adc
notb
repz
xchg
sbb
or
or
cmp
int
inc
popf
loopne
repnz
cmc
ljmp
sbb
xlat
adc
dec
jp
sbb
lahf
pop
xchg
arpl
jmp
sti
ficomps
sbb
inc
std
inc
mov
jmp
sub
adc
in
int3
add
ja
aaa
mov
test
loopne
sti
adc
mov
cmp
inc
jmp
cs
int3
push
loop
inc
sahf
xchg
adc
mov
push
fdivrl
xchg
pop
push
insb
cmp
dec
and
in
jmp
outsb
push
xor
mov
les
jle
lea
or
mov
mov
push
ljmp
rcrb
shll
out
repz
ja
lock
push
ret
adc
mov
fs
adcl
cwtl
inc
sbb
inc
dec
cwtl
loop
xlat
jb
lea
addr16
loop
lods
outsl
lods
mov
lret
jns
ljmp
mov
ljmp
lods
aam
gs
xor
popa
je
popf
bound
leave
and
ds
lea
dec
mov
in
cmp
icebp
outsl
or
notl
and
js
insb
inc
cwtl
lret
adc
sub
xchg
call
push
adc
cli
mov
pop
sahf
pop
in
fldenv
pop
cmp
sbb
pop
jecxz
and
loopne
mov
dec
jmp
in
inc
xlat
jne
mov
gs
lret
lea
mov
push
cmp
inc
lahf
push
jmp
xor
push
dec
push
aam
in
jne
jo
add
and
lcall
xchg
aaa
and
lahf
jb
pop
push
mov
mov
pop
out
es
lcall
ret
std
or
fists
in
lods
movsl
int
xchg
arpl
mov
jle
scas
movsl
rolb
inc
rclb
cmp
cli
or
pop
mov
adc
xchg
std
xchg
fstpt
sti
scas
jl
or
jp
sub
out
ret
xor
fwait
xchg
jl
jns
cltd
mov
out
inc
mov
lcall
cs
xlat
and
aaa
xchg
loopne
jb
xor
cltd
insl
leave
pushl
or
mov
xchg
js
xor
sub
or
scas
jmp
psrad
push
lcall
mov
rcl
push
and
insb
add
and
popa
outsb
mov
fimull
les
js
pop
xor
push
mov
cmp
lahf
scas
inc
popa
shr
push
stos
or
jp
js
inc
mov
loop
cmp
inc
adc
pop
std
je
jl
test
push
clc
cmp
jno
or
cld
adc
cmc
iret
lcall
fmul
inc
mov
jne
adcb
ljmp
or
insl
cmc
je
cmpsl
jne
sub
rcr
cltd
shll
jb
ret
sbb
inc
aam
adc
scas
mov
mov
cmp
hlt
jnp
ss
in
jne
push
fisttps
in
not
pop
aam
imul
out
and
mov
ret
mov
adc
add
inc
add
popf
in
push
std
cld
xchg
or
cmp
push
mov
mov
mov
testl
and
mov
clc
adcb
sub
fs
cmp
fbld
xchg
jae
push
cmp
movsb
cmc
jno
pop
pushf
and
data16
stos
mov
pushf
loop
push
das
add
data16
aad
push
pop
rep
das
adcl
dec
repnz
popa
xchg
rcrl
push
fildll
pop
or
push
or
xor
mov
sti
call
rolb
inc
int
push
push
and
jmp
ret
mov
fnstsw
rcrl
jno
lods
in
fdiv
in
movsl
sbb
cmp
pop
inc
mov
adc
push
and
sbb
inc
or
add
push
mov
mov
xor
mov
movsl
incb
xor
inc
jecxz
scas
outsl
mov
repz
or
ja
pop
mov
dec
jg
out
ja
movsl
in
fldenv
cwtl
pushf
mov
fwait
lret
adc
ret
dec
je
and
jbe
mov
gs
inc
xchg
iret
les
pop
loope
cmpsb
pop
bound
or
icebp
sub
sub
mov
mov
out
outsb
mov
inc
and
cmc
lods
jbe
add
xor
fcomps
xchg
pop
shlb
mov
adc
imul
sbb
lret
xor
mov
ret
jne
xor
dec
jle
loopne
mov
scas
lds
std
in
and
xor
ror
in
xor
in
addr16
push
cwtl
pop
das
das
addr16
jmp
mov
outsb
and
add
daa
jns
sti
pop
xchg
loop
dec
sbb
aad
sbb
and
push
rorl
sub
out
and
sahf
xchg
push
mov
fwait
cmpsb
or
fisttpll
jmp
popf
repnz
lcall
fstpl
movsb
cmp
push
xchg
mov
fisttpl
subl
cmpsl
inc
outsl
pop
imul
pop
inc
addr16
pop
pop
sbb
fs
gs
imul
divl
or
fnstenv
jmp
and
sub
xchg
fdivl
lcall
xor
push
fcmovnu
je
nop
testl
lahf
jnp
stc
pop
cmpsb
inc
outsb
xor
stos
sbb
aad
rcl
jno
push
dec
lahf
xchg
dec
pop
jl
xor
out
cmp
and
xchg
sub
add
fdivrs
jmp
mov
pop
pop
cltd
lock
out
icebp
ficomps
xchg
std
and
push
push
cmp
aad
lcall
daa
add
or
sub
es
mov
ficoms
ret
push
sbbl
push
ret
sbb
pop
dec
sbb
mov
mov
scas
sub
xor
xchg
pop
test
movsl
adc
or
sub
cltd
mov
repz
pop
mov
mov
inc
jne
xchg
mov
xchg
pop
outsb
lcall
push
add
jno
out
cld
or
inc
xchg
inc
data16
aam
clc
mov
fnstsw
dec
cmp
das
sbb
mov
leave
adc
pop
in
int3
mov
mov
jns
out
loopne
filds
je
sbb
divps
pop
or
dec
push
into
mov
mov
jmp
mov
sbb
dec
lods
je
lock
cltd
cmp
mov
cwtl
push
mov
imul
stos
jb
dec
js
inc
repz
sub
jbe
jmp
mov
dec
pushf
cmp
mov
and
aad
inc
sbb
insb
mov
xchg
inc
js
pop
aas
test
js
out
or
aaa
pop
mov
repnz
or
out
clc
dec
jecxz
mov
in
gs
mov
loope
and
loop
add
fwait
out
in
rorl
inc
inc
sti
pop
jno
ret
mov
fwait
loopw
fmuls
push
mov
push
adc
mov
outsl
test
push
loop
pop
ljmp
scas
dec
xchg
jge
cmp
ja
cmp
daa
arpl
fcom
fstps
xor
nop
test
popf
xchg
cmp
mov
xchg
mov
ss
cmp
or
iret
lds
je
loop
push
mov
loope
inc
movsb
mov
faddl
test
mov
xchg
cmp
add
xor
cmp
dec
lret
jle
cmp
cmp
mov
lcall
cmp
add
inc
sbb
lds
clc
mov
jge
jmp
xorb
jbe
mov
stos
jbe
and
dec
jne
pop
popa
xchg
mov
pusha
btcl
inc
xchg
mov
or
pop
cwtl
in
dec
loop
rcrl
pop
nop
xlat
sub
jecxz
dec
sub
shll
lret
xchg
das
call
repnz
imul
mov
iret
cmp
jl
mov
stc
adc
insl
mov
lret
ja
adc
movsb
push
movsb
pop
or
push
pop
xor
dec
aaa
ret
into
mov
xchg
bound
sbb
dec
mov
das
fwait
ljmp
jecxz
jl
daa
andb
inc
int
fnstcw
loopne
mov
and
sub
pusha
adc
sbb
push
xchg
xchg
mov
mov
cmp
xchg
in
and
cmp
fadd
push
test
aaa
push
sbb
push
popa
or
pop
xchg
pop
push
inc
loope
cmp
arpl
mov
movsl
mov
add
setb
cmp
fdivs
out
nop
push
push
dec
cmpsb
insl
rclb
jae
das
sarb
call
rcll
nop
jp
jns
mov
push
xchg
and
cwtl
mov
aaa
fcmovb
aam
dec
mov
pop
ret
push
leave
mov
jp
push
sub
add
dec
nop
subb
sbb
test
push
mov
xlat
in
jae
cs
sarb
fisttps
mov
in
inc
bound
addb
mov
pop
and
jbe
cmp
mov
nop
or
adc
lcall
jl
data16
sbb
cmp
test
icebp
inc
fcomip
cmp
sub
or
adc
xchg
pop
jecxz
cwtl
mov
fldenv
and
cmp
outsl
fldl
fnstenv
lret
inc
mov
loope
mov
test
cmp
dec
cmpsl
adc
filds
push
das
call
mov
in
dec
mul
pusha
stc
lahf
outsl
mov
fwait
mov
mov
sub
pop
or
pop
and
jg
cmp
rclb
loop
mulb
or
mov
js
push
mov
sbb
jnp
push
adc
xor
out
push
call
lahf
jge
ja
push
sub
int3
cmp
cs
arpl
es
in
loopne
movsb
xor
cs
pop
hlt
dec
out
fdivr
sub
movsb
xchg
or
mov
cmp
leave
sub
cld
aam
push
adc
jp
push
gs
cmp
inc
sub
test
stos
jmp
mov
std
push
hlt
int
dec
pop
outsb
pop
sti
mov
movsb
enter
sbb
imul
sbb
popa
jae
stos
pop
cmp
aad
inc
mov
inc
inc
movsl
xchg
sub
mov
mov
mov
stos
ljmp
or
mov
cltd
and
insb
lods
jne
dec
and
mov
mov
sbb
std
insl
lea
enter
mov
pop
test
sti
mov
out
mov
jnp
mov
mov
loopne
sahf
sbb
mov
in
shrb
gs
movsl
add
mov
push
enter
mov
inc
test
push
mov
sbb
xor
pop
outsl
xlat
add
lods
jo
stc
xchg
ret
orb
stos
pusha
xchg
js
cs
imul
popa
jns
xor
stos
inc
mov
sbb
and
adc
dec
sub
add
je
gs
ja
push
add
cmp
pop
push
ror
dec
movsb
xor
idivb
icebp
push
shlb
jl
jg
pop
scas
cmp
mov
popf
push
sahf
xchg
ficomps
xchg
daa
xchg
push
test
add
jge
fdivr
sub
dec
mov
adc
inc
mov
lods
mov
sbb
push
rcrl
ss
mov
inc
outsl
sbb
orb
jmp
fldl
jne
in
or
dec
add
xchg
lds
lahf
sub
xor
sub
push
dec
out
xchg
sub
jo
fstl
pop
lods
or
lret
push
or
push
shll
sbb
arpl
lea
jmp
lods
int
rol
fdivrl
push
xchg
lret
ja
mov
mov
ret
xchg
and
or
inc
sub
gs
mov
push
or
lret
data16
xchg
rcl
dec
xchg
fisttpll
inc
leave
dec
cltd
add
sbb
adc
mov
xlat
sbb
in
jnp
fmuls
lcall
jmp
jge
jbe
pop
lret
mov
sub
inc
cli
xchg
call
ljmp
jg
pop
inc
loop
sbb
adc
inc
cld
lods
pop
mov
push
or
daa
xor
sub
sbb
and
inc
lods
push
mov
adc
push
mov
gs
jo
jge
or
cmovb
push
repz
jbe
rolb
or
mov
clc
cmc
mov
xchg
sbb
data16
mov
push
repnz
mov
adc
test
lds
push
fldenv
out
pop
int
aaa
mov
add
lods
std
push
popf
adcb
xor
inc
mov
es
fstpt
xchg
dec
popa
test
jbe
push
repnz
xor
jmp
mov
push
fdivrp
mov
cwtl
movsb
or
pushf
jnp
dec
xor
hlt
je
cwtl
mov
sbb
stos
and
sub
jae
lahf
int3
or
insb
call
rolb
pop
mov
mov
cmp
adc
add
repnz
test
aad
xor
mov
inc
loop
cmc
in
dec
xchg
mov
in
lds
inc
and
add
shll
push
adc
orl
sbb
sub
aad
fists
fsubl
nop
mov
xor
pop
iret
inc
pop
push
xchg
out
out
add
jbe
movsw
imul
scas
fcmovne
dec
fnstenv
outsl
jnp
cmp
pop
pop
pop
arpl
icebp
cmp
test
adc
adc
add
scas
dec
mov
clc
rcrb
push
pop
xchg
repnz
add
jp
lea
pop
push
pop
mov
sbb
cwtl
jns
cmp
popl
jmp
jmp
sbb
sbb
or
push
daa
fscale
js
insl
xchg
roll
lods
test
out
call
mov
loop
repnz
xchg
mov
add
sti
dec
mov
push
out
pop
inc
dec
fwait
push
mov
pop
ret
pop
jmp
fwait
sahf
add
test
add
xchg
mov
daa
mov
std
lret
dec
push
rcrl
and
stos
push
out
and
scas
dec
rcrb
insl
jne
inc
mov
mov
cmp
test
cmpsb
and
sahf
mov
cmp
push
sub
repz
icebp
scas
and
add
nop
or
adc
hlt
rep
xchg
lock
ljmp
inc
adc
adc
mov
scas
sbb
add
xchg
mov
cmpsl
es
scas
scas
stc
xor
addr16
xchg
and
xchg
push
dec
mov
jne
fabs
loope
mov
repz
or
repz
push
push
and
jmp
adc
sub
inc
pop
fcompl
jmp
imul
jbe
fnstcw
loop
cli
xchg
mov
lods
adc
aas
jns
cli
sbb
inc
cmp
out
sub
imul
mov
ljmp
push
adc
aad
mov
nop
xor
fcoml
sbb
out
push
inc
push
sbb
mull
into
push
insl
mov
inc
sbb
sub
cmp
adc
popf
add
cltd
pop
aaa
out
mov
cmpsb
loop
test
add
pop
and
push
pusha
push
dec
sbb
adc
pusha
and
nop
cltd
inc
shlb
xchg
jge
out
push
sbb
mov
inc
xor
sarl
fmuls
inc
scas
cmpsl
sti
xchg
mov
adcb
xor
lock
add
fdivr
sub
jb
mov
int3
jb
push
inc
xchg
addb
jecxz
mov
dec
cli
pop
adc
mov
jne
pop
clc
dec
push
xorl
stos
fwait
push
imul
ja
add
adc
lock
lock
xchg
jecxz
jge
shrl
pop
dec
gs
jbe
mov
sub
add
sub
ret
pop
xchg
xchg
daa
push
iret
inc
dec
out
sbb
nop
aam
cmp
cmp
mov
mov
sub
fcom
pop
jle
mov
data16
ret
sbb
sub
inc
pop
popf
cmpsb
nop
inc
mov
cmp
jo
sti
jns
xor
xchg
or
lret
jb
pop
cmp
and
int
fdivs
stos
js
rcr
sarl
mov
push
mov
int3
push
dec
rclb
shrb
pop
xchg
and
loop
fstl
js
aaa
mov
pop
inc
test
popl
mov
jl
daa
shll
xchg
movsb
fwait
pop
cwtl
out
mov
add
cmp
repz
add
cmpsb
xchg
sub
outsl
cli
cmp
imul
aas
pop
repnz
xchg
icebp
mov
iret
mov
push
adc
dec
gs
sub
scas
jne
aad
mov
int
ficoml
mov
adc
xor
sti
lods
jae
loope
cmp
iret
fwait
sub
adcl
pop
rclb
jae
dec
addr16
repz
lcall
sub
adc
das
imul
xchg
dec
lock
cli
xor
dec
xchg
in
sub
lcall
cmpsb
test
adc
and
movsb
cs
insb
out
test
fnstenv
jb
push
je
mov
inc
mov
push
mov
stos
push
fsts
lret
mov
scas
fld
outsl
push
jge
imul
xlat
mov
mov
sbb
dec
fwait
xor
inc
or
ret
pop
cmp
and
mov
xor
dec
or
fcomps
imul
fcmovbe
out
cmp
jmp
xchg
and
mov
cltd
push
ficompl
xchg
xor
std
add
fildll
xlat
and
notb
rorl
adc
adc
mov
jb
pop
jmp
mov
mov
cmp
push
and
add
ja
cmp
cli
cmp
aaa
mov
fdivrl
outsb
dec
sub
ljmp
int3
sar
insb
add
cs
push
jmp
xor
daa
xchg
loop
mov
inc
cmp
push
inc
dec
outsb
and
and
stos
ljmp
jecxz
jecxz
or
stos
push
and
les
inc
aad
cmp
add
cmc
rcll
rcr
mov
js
aad
jne
mov
cmp
lcall
insl
push
dec
lods
xor
fwait
dec
test
adc
push
iret
pusha
sbb
mov
jbe
pop
jge
setae
jb
mov
mov
scas
in
mov
adc
inc
scas
jbe
or
jb
add
stos
dec
scas
jmp
mov
cmp
outsb
das
dec
jmp
push
mov
sbbb
fwait
nop
test
mov
shll
jp
popa
sbb
mov
jns
cmpsl
iret
fstpl
inc
les
pop
xor
imul
sub
mov
in
cmp
add
rclb
jge
push
xchg
out
pop
push
stos
scas
pop
mov
int3
stos
mov
movsb
jge
pop
mov
shll
pushf
inc
xor
pop
jge
das
push
fwait
push
sub
cmpsl
jno
cmp
or
inc
rol
fwait
insb
xor
push
rclb
adc
sbb
test
xorl
imul
aaa
sbb
lods
xor
mov
test
xchg
rorl
loopne
in
jno
jne
jne
ret
sub
mov
insl
xor
in
sub
mov
jno
shr
xor
mov
repz
xchg
bound
push
daa
dec
loop
dec
xchg
add
test
dec
ret
jle
aam
mov
cs
mov
ret
cmp
jnp
sbb
mov
mov
imull
in
inc
adc
adcl
push
mov
or
iret
sbb
push
ret
xor
loope
roll
mov
push
sbb
out
inc
or
ror
mov
es
xor
pop
sub
mov
cmp
cmp
xchg
fldenv
jl
mov
pusha
push
xchg
fadd
leave
push
cmp
loopne
notl
xor
daa
pop
push
test
cmp
push
jle
testb
jecxz
push
jae
fidivrs
add
imul
iret
or
rcrb
insb
jl
inc
pop
xor
mov
mov
or
sahf
scas
outsl
mov
cmp
and
popf
movsl
pop
lahf
ret
jae
cltd
pop
cmp
mov
jecxz
lods
jg
push
movsl
push
rcl
and
sbb
arpl
aad
fadds
in
inc
imul
cli
xchg
test
dec
dec
jl
fstpl
or
jb
inc
test
jp
aad
jle
pop
leave
mov
popf
add
xor
xor
movsl
rcrb
mov
ret
and
fisubs
lods
test
dec
and
loop
inc
mov
data16
mov
jmp
dec
fisttpl
sub
mov
rclb
imul
out
data16
mov
lock
mov
push
mov
add
mov
fnstenv
jo
fistpll
fistpll
add
andl
stc
xchg
pop
sarl
push
mov
fcoml
xchg
outsb
cmp
and
push
test
aas
incl
xor
push
sbb
cmp
xor
inc
leave
test
cwtl
call
int3
ds
rclb
mov
pop
dec
xor
jno
cmpb
dec
gs
xchg
insb
repnz
cltd
loop
cmp
xlat
sahf
ficompl
cltd
inc
das
mov
mov
mov
lock
jge
out
fstps
jae
dec
sub
and
xchg
dec
sbb
mov
and
dec
push
jbe
mov
mov
push
std
in
mov
stos
stos
xchg
int
lea
fstps
add
sub
hlt
fnstcw
das
nop
push
sub
pop
mov
mov
inc
out
dec
or
jmp
mov
js
test
lcall
fldt
sbb
jns
jnp
inc
outsl
imul
and
in
sbb
push
xchg
cmp
jb
sub
mov
scas
aam
pop
outsl
cmc
repz
xor
scas
jle
test
jns
adc
sub
negl
xchg
sbb
mov
sub
bndldx
int
xchg
dec
roll
and
jns
popa
shl
data16
lods
imul
sti
push
xchg
negl
dec
and
jge
cwtl
mov
movsb
lret
xchg
insb
cmp
add
mov
dec
xchg
inc
arpl
aam
cmp
fadds
lods
in
jecxz
inc
jb
mov
inc
pop
mov
xor
iret
dec
lods
add
xchg
mov
out
stc
mov
insl
notl
sbb
inc
cmp
pop
xor
dec
stos
daa
xchg
mov
cmp
xchg
bound
mov
dec
xchg
inc
xor
inc
sbb
jl
mov
xlat
ja
inc
cwtl
loope
cltd
call
outsl
pop
mov
cmpsb
sbb
or
cmc
aas
pop
jge
jmp
and
jae
fbstp
pusha
mov
imul
jbe
sub
or
in
in
cmpb
imul
lret
jno
push
dec
fildll
cmp
push
push
into
jle
sub
call
sbb
icebp
outsb
out
sbb
jecxz
xchg
dec
and
xorb
cmp
arpl
jnp
pop
mov
xlat
jb
inc
push
cmc
mov
xchg
addr16
sub
push
adc
imull
pop
cltd
insl
stos
out
adc
lahf
test
mov
xor
jle
stc
mov
sbb
js
addl
fcmove
orb
sub
mov
scas
mov
rcll
jle
mov
enter
out
sub
repnz
dec
sub
mov
sbb
cmp
pop
dec
in
popa
in
xchg
movsb
jecxz
movsl
inc
add
int
pop
inc
push
dec
adc
dec
jg
mov
cltd
jl
mov
std
stos
lret
mov
dec
xchg
jns
lcall
push
test
sbb
cmp
dec
adc
mov
xchg
mov
sbb
fimuls
out
sbbb
icebp
and
notl
movsl
cwtl
pop
sub
sub
outsb
mov
mov
inc
mov
pusha
xor
inc
popa
push
jl
jo
test
ror
hlt
mov
enter
dec
push
lods
imul
mov
and
hlt
dec
adc
or
xor
out
popa
sub
insl
push
cmp
pop
mov
cli
sub
inc
pop
scas
mov
mov
pop
ret
jae
push
lds
adc
xchg
sub
nop
dec
mov
sub
lret
das
push
and
gs
les
sub
or
subb
mov
shlb
pop
jle
and
ljmp
jbe
insl
repz
mov
mov
ds
sti
movsb
iret
dec
bound
xchg
add
rorb
mov
mov
stc
sub
adc
adc
lret
stc
scas
add
adc
pop
cmpsl
hlt
push
sbb
and
sar
idivl
inc
xchg
mov
aad
adc
nop
ss
inc
iret
push
dec
jge
ja
xchg
cmpsl
dec
inc
xlat
jbe
rclb
out
sub
repz
in
outsb
cld
mov
jmp
ficoml
jns
les
mov
vpackuswb
fcoms
xchg
pop
aas
addb
xlat
jbe
enter
cmp
cmpsb
out
mov
mov
rorl
ret
fcomip
scas
jl,pn
daa
cmp
sahf
xchg
sbb
js
push
lahf
and
sarl
mov
sub
shrb
in
mov
dec
das
dec
cmpsb
mov
test
mov
leave
jnp
cmc
insb
popa
loopne
sbb
inc
xchg
adc
cmp
sbb
fwait
loop
adc
or
in
mov
mov
in
test
sub
pop
loope
in
imul
mov
or
xor
loop
ljmp
cmp
insb
cmpsl
scas
sti
dec
and
or
fidivrs
das
jnp
push
pop
mov
ret
fnstenv
dec
imul
ficompl
nop
jp
mov
xchg
sub
adc
testl
sub
jp
sbb
jbe
mov
pop
rcrb
subb
xor
pop
xchg
jb
or
jecxz
arpl
or
pushf
mov
rolb
mov
shll
repnz
subb
adc
mov
cmp
fwait
cmp
ljmp
repz
mov
jg
sbb
jl
outsb
mov
cli
add
push
dec
subb
std
dec
pminub
jb
scas
ja
out
leave
push
fcmovbe
adc
lahf
cmp
lock
movsb
sti
in
aas
leave
call
jp
mov
push
call
mov
bound
push
arpl
pop
outsb
jo
fstpt
sbb
ds
jmp
int
fcoms
in
pop
mov
lock
add
push
cmp
add
sbb
outsb
push
inc
in
lcall
fcmove
cmc
xchg
adc
adc
inc
jne
sar
pop
mov
sub
lods
fs
jo
mov
sub
dec
lret
inc
das
mov
add
inc
out
out
adc
lcall
roll
fcmove
out
inc
add
mov
lock
aaa
fildl
jae
es
movsb
loope
or
hlt
sub
stos
xchg
xchg
dec
mov
shrd
stos
int
rcrb
xchg
lods
mov
xchg
test
or
inc
add
mov
test
icebp
and
add
push
push
mov
fs
cld
test
mov
stos
cmp
popa
dec
xchg
outsl
in
les
lret
and
popf
addl
imul
orl
cmp
pop
push
test
icebp
fists
and
sub
jle
repnz
data16
ret
xchg
cmp
xchg
push
xor
mov
hlt
or
pop
daa
stc
adc
loopne
sbb
mov
arpl
sub
leave
add
fmull
jle
pop
and
cmpsb
jl
lret
pop
ljmp
pusha
lds
adc
mov
mov
je
lret
push
sbb
scas
fsubp
cmp
pusha
ds
and
dec
jae
fidivs
mov
xchg
les
pop
shrb
lea
fisubrs
loop
add
xchg
scas
push
cltd
or
mov
push
sub
mov
push
ret
data16
js
outsb
or
mov
test
test
dec
add
testl
rorb
js
jmp
and
jg
adc
add
xor
and
daa
rcrl
push
inc
inc
js
cmp
jmp
jns
xor
sub
fwait
pop
fcmovnb
sbb
jp,pt
mov
add
loopne
jnp
les
inc
dec
cs
jl
shr
fisttpl
negl
punpcklwd
mov
mov
sbb
arpl
movb
jmp
and
mov
dec
inc
sub
adc
mov
decb
data16
xor
loop
sub
mov
add
cmpsb
xor
fs
add
loop
iret
insb
jnp
lahf
lock
fmuls
rep
stos
lock
pop
outsb
stos
imul
mov
ror
das
repz
cmpsl
lods
inc
clc
add
shlb
push
cs
fisttps
in
test
mov
or
fstpt
jecxz
xchg
adc
ret
mov
out
jl
es
mov
insl
jne
sbb
jmp
push
mov
xchg
xchg
bound
dec
lds
sysexit
adc
or
push
mov
sub
call
rorb
jmp
fwait
pop
dec
mov
lods
sub
mov
mov
sub
jmp
pop
into
mov
sub
out
sub
pop
jl
mov
adcb
xchg
cmpsl
dec
jle
inc
push
mov
or
cld
push
scas
dec
dec
push
pusha
js
insb
outsl
iret
lock
lret
mov
movsb
xchg
mov
insl
inc
rorl
inc
or
inc
or
stos
and
stos
mov
and
sbb
jle
push
or
cmp
dec
xchg
jmp
or
jle
mov
xor
sub
fsts
sbb
dec
jmp
sbb
aad
and
xor
div
xor
jae
jne
mov
cmp
rol
jp
sbbl
xchg
outsb
js
fdivrl
jge
stos
lcall
xchg
ja
inc
push
imul
es
xchg
fidivrl
ret
add
mov
loope
xor
rolb
inc
cs
jo
mov
sti
mov
and
ret
and
adc
add
insb
cs
jnp
scas
movsl
xchg
sarl
xchg
fidivl
das
or
adc
test
xlat
imul
imul
scas
mov
sub
iret
jecxz
out
xchg
pop
adc
insb
dec
adc
outsl
xchg
jg
lods
mov
xor
arpl
in
mov
scas
test
and
jbe
cmp
fildl
arpl
out
pushf
or
dec
xchg
mov
add
addb
sbb
jmp
jle
inc
sbb
mov
inc
roll
imul
pop
cltd
scas
push
jle
xor
incb
pushf
pop
lock
xor
jl
cmp
loope
sub
int
push
jbe
add
nop
inc
outsl
iret
fwait
pusha
lret
mov
je
in
and
jo
ljmp
in
in
mov
push
add
pop
ds
fisttpl
jge
cmpsb
das
pop
out
jecxz
pop
inc
aam
mov
pop
fstl
fwait
stos
mov
mov
push
mov
cmp
add
fwait
aaa
lcall
sub
mov
fmull
movsb
push
fidivrs
mov
insl
dec
cmp
das
mov
cmp
mov
mov
push
pop
rorl
cmpsl
fmuls
test
movsl
popa
inc
mov
addb
inc
and
mov
and
cmp
pop
or
pop
iret
push
pop
and
or
mov
lods
xchg
push
and
cmpsb
sbb
or
pop
mov
jnp
mov
lea
adc
adc
mov
mov
jp
cmc
add
fldenv
cmpsl
int3
jns
or
scas
jbe
sub
jge
es
pop
mov
jo
fcoms
add
and
cmp
xlat
xor
test
cmc
nop
bound
data16
outsb
out
int3
std
into
dec
mov
add
addr16
aas
mov
sarl
decb
sbb
jle
rolb
cmpsb
pop
pop
fld1
mov
addl
sub
scas
in
jo
das
aam
notl
inc
dec
out
lock
or
mov
outsl
mov
fmuls
jmp
test
add
and
jmp
lcall
inc
mov
add
sbb
inc
xchg
pop
or
clc
sub
dec
dec
popa
or
bound
pop
lods
dec
xchg
jnp
xor
mov
dec
jno
sub
sti
jmp
mov
shr
inc
mov
pop
lcall
mov
shrb
jbe
fidivrl
mov
xor
mov
fisubrl
scas
lret
push
pop
mov
lcall
nop
out
xor
jnp
imul
mov
jecxz
jle
mov
xor
std
sahf
iret
sarl
or
popa
sarl
sub
int
inc
pusha
xlat
cld
inc
push
test
aad
loop
mov
inc
xor
jg
mov
lods
in
xor
jl
xchg
jae
xor
mov
mov
sbb
out
scas
dec
movsl
cltd
fstl
push
add
mov
xchg
mov
sbb
xchg
sub
adc
in
mov
cmp
ljmp
or
mov
add
inc
mov
xor
lods
fs
test
xchg
das
push
outsl
push
dec
jecxz
sub
loopne
xor
mov
pop
mov
push
mov
lahf
mul
push
cmp
mov
jge
mov
imul
mov
push
iret
das
xchg
insl
xchg
push
mov
and
jle
dec
call
cwtl
and
hlt
mov
out
cmp
xor
dec
out
or
clc
dec
in
xchg
push
adc
mov
aas
lods
out
and
jmp
push
inc
int3
jmp
sub
pop
loopne
jb
xlat
icebp
sbb
adc
sbb
xor
jp
xchg
mov
add
aaa
clc
add
test
mov
mov
add
out
add
fcom
into
adc
jge
pop
dec
out
pop
xorb
sbb
shll
mov
jae
data16
loope
mov
repz
jb
inc
and
ret
mov
and
jno
xor
sti
and
test
push
ds
repnz
imul
push
adcb
mov
test
ficoms
inc
dec
sbb
test
aas
inc
ja
adc
fstp
adc
in
test
push
ds
sahf
jecxz
aas
test
cmp
inc
dec
and
push
jg
jp
test
push
adc
adc
ficoms
sub
pusha
xchg
add
call
into
jbe
ficompl
push
outsb
or
or
and
jno
adc
mov
bound
adc
xchg
test
push
adc
add
lcall
je
xchg
push
inc
pop
imul
repnz
jmp
mov
fwait
adc
stc
test
fisttpll
enter
jns
les
int
jecxz
ret
dec
xchg
push
pop
movsb
fistl
jne
mov
test
pop
cmp
mov
inc
mov
and
frstor
inc
mov
push
xor
cmp
jl
jmp
imul
or
scas
cld
inc
shrl
push
arpl
xlat
or
inc
push
fimuls
mov
dec
les
push
dec
pop
fdivl
cltd
pop
inc
adc
shrb
cmpsl
xchg
in
cli
js
add
add
cmc
fs
mov
mov
or
loopne
mov
and
loope
pushf
xchg
xchg
and
jbe
jmp
push
dec
lahf
iret
insb
fnstsw
rcrb
mov
faddl
mov
xchg
pusha
sbb
dec
or
jge
mov
cs
xchg
add
adc
je,pt
jb
dec
sub
js
mov
stos
les
cs
jge
inc
cmp
and
mov
stos
jmp
add
fs
mov
or
sbb
mov
sub
or
les
inc
and
cld
jne
andb
sub
lcall
inc
fdivs
das
xlat
loopne
cmp
sbb
cmp
cmc
das
fwait
push
sub
and
mov
in
pop
cld
adc
adc
jg
sbb
and
sbb
sub
cmp
mov
hlt
stos
andb
ficomps
rorb
sahf
mov
ret
aas
pop
dec
lcall
scas
jnp
jmp
mov
mov
hlt
mov
scas
xor
insl
dec
pop
push
cmpb
add
cld
xor
xor
cmpsl
test
ja
dec
pop
decl
mov
lret
nop
pop
adc
mov
lret
out
xchg
sarb
leave
adc
fimull
in
prefetch
or
mov
jmp
sbb
hlt
dec
addr16
xor
adcl
and
andl
jmp
mov
fadds
jbe
call
in
shll
cmp
add
fbstp
imul
outsl
lret
jle
cmp
xor
mov
pop
icebp
pushf
jle
mov
push
xor
mov
test
pop
inc
aad
mov
outsl
pushf
pop
jae
hlt
dec
xchg
test
add
outsb
cmp
jmp
nopl
or
inc
shll
dec
jge
shr
cmp
jno
fdivrs
jmp
ds
mov
movsl
mov
xchg
fldl
test
andb
pop
pop
in
je
out
mov
fs
pop
inc
stc
hlt
add
pushf
cmp
cmp
inc
push
cmpsb
inc
out
sub
ret
repz
out
mov
jg
push
stc
push
push
pop
test
enter
jg
scas
sub
push
pop
sbb
or
cmp
dec
push
shll
or
dec
push
enter
jno
sbb
pop
xchg
pop
pop
imul
das
aaa
fwait
mov
ret
test
and
aam
shrb
ss
out
push
outsb
in
or
pop
mov
add
pop
mov
sbb
sub
out
mov
inc
or
out
push
inc
mov
scas
dec
lea
sbb
push
xorl
cmc
fwait
inc
rcll
scas
adc
mov
imul
jge
cltd
movsl
sub
fimull
pushf
fildll
movsl
xchg
aas
inc
mov
daa
adc
mov
jecxz
lret
test
jo
addb
sub
cmp
push
mov
pushf
sbb
cmp
jns
cmpsl
and
scas
imul
test
repnz
adc
cmp
jb
andb
fisttpl
mov
jno
mov
jns
push
icebp
or
ficoml
mov
inc
cmp
inc
sbb
xchg
adc
mov
mov
push
adc
push
dec
je
out
loopne
aaa
leave
xlat
mov
cli
xor
int3
sbb
pop
xchg
xchg
cmp
push
sub
iret
out
xchg
scas
je
pusha
out
push
outsb
or
mov
xchg
ret
pop
rolb
loopne
xchg
aad
pop
ss
out
adc
popf
dec
ret
in
scas
adc
and
lret
or
je
lds
inc
push
jmp
jmp
and
cltd
mov
scas
xor
cmp
push
fcmove
pop
jp
js
fs
mov
push
addr16
pusha
orb
cltd
fbstp
mov
xor
sbb
mov
pop
in
jb
pop
sbb
adc
mov
jo
ds
or
stc
push
fimuls
nop
stos
mov
popa
fwait
xchg
je
lahf
bound
dec
cmpxchg
addr16
jo
movsl
rcrb
add
rcrb
xchg
sub
sbb
jecxz
lods
add
push
push
sub
test
xor
bound
xor
xor
into
xchg
mov
ret
mov
cli
shr
jmp
gs
mov
shl
sub
in
adc
cmp
pop
cmp
jno
stos
inc
lret
adc
or
stos
fwait
hlt
add
mov
addps
fwait
out
es
jp
enter
push
addr16
inc
sub
ret
das
ljmp
mov
jecxz
pop
ret
shrb
mov
nop
jb
and
daa
rcl
sbb
aaa
cltd
sbb
or
jnp
mov
pop
movsb
sub
das
int
jne
shl
fisttpll
bsr
mov
insl
mov
sbb
aaa
jne
filds
cs
or
ljmp
sbb
mov
push
out
adc
or
iret
dec
mov
inc
inc
ret
push
mov
pop
cmpsl
lret
and
movsl
mov
sahf
push
push
fdivl
cwtl
lds
enter
add
xor
pop
jbe
aas
xor
jne
sub
pop
les
repz
shl
sbb
push
test
addr16
mov
or
aas
mov
xor
dec
ss
daa
imul
testb
sbb
ja
jge
lcall
dec
les
mov
iret
dec
arpl
scas
pop
push
bound
js
jbe
mov
dec
int
dec
das
data16
inc
cmp
jbe
sub
divl
pop
xlat
mov
jp
push
out
or
shlb
xchg
lea
clc
mul
push
push
xor
push
ljmp
mov
jne
add
adc
adc
test
push
les
jnp
enter
xchg
loope
cmp
aam
jne
test
push
nop
add
xchg
push
jle
jmp
idiv
xchg
and
jns
sahf
fwait
add
push
pop
xchg
jnp
xchg
inc
out
es
sub
mov
shl
fcmovbe
lods
push
outsb
xchg
mov
xor
in
sbb
mov
cmpsl
cmp
sbb
jbe
adc
mov
xor
out
pop
cmp
stos
push
inc
aaa
pop
xlat
imul
xchg
add
sbb
mov
data16
out
int
popf
xor
cmp
arpl
mov
jae
pop
sbb
sub
jecxz
or
cmp
pop
mov
insl
packssdw
pushf
mov
test
xor
or
pop
cmpsl
adc
lret
inc
mov
adc
or
daa
mov
mov
cld
jnp
or
jbe
js
test
cmp
mov
dec
ja
mov
lret
stc
movsl
repz
ret
gs
push
dec
mov
push
jecxz
mov
out
push
inc
inc
xor
push
mov
and
xchg
mov
pop
pop
out
arpl
addr16
and
jmp
dec
jmp
mov
fcompl
mov
popf
xchg
adc
xchg
scas
mov
in
add
cli
andb
mov
fdivp
fstps
mov
sbb
mov
pop
mov
in
push
cld
ret
aaa
aad
cwtl
addl
sti
scas
xchg
sbb
adc
xor
xchg
pop
test
jl
mov
mov
in
and
xchg
movsb
rcrb
mulb
insb
cmp
cld
dec
xchg
lock
iret
insb
mov
mov
mov
test
clc
mov
pop
out
hlt
pop
dec
outsl
scas
andb
call
or
mov
mov
aad
xchg
add
pushf
add
mov
imul
out
aaa
and
fs
loopne
popl
jle
fmul
push
jnp
mov
inc
jne
lds
scas
cld
xchg
in
dec
cli
pop
push
loop
mov
stc
inc
push
pop
inc
push
and
fdivrs
out
add
mov
repz
es
scas
add
sub
jp
sar
sub
fs
fsts
shll
sbb
in
add
jbe
and
xchg
rorb
shrl
xor
push
jl
mov
sub
hlt
push
xchg
xchg
sub
es
xor
aad
nop
push
cmp
aaa
imul
mov
xlat
and
inc
jle
test
xor
popa
push
pop
dec
enter
lea
jg
imul
popa
popa
jle
mov
mov
bswap
mov
ret
das
cmp
int3
and
insl
ljmp
add
cmc
jne
rorb
cli
fiadds
xor
xor
insb
loop
mov
jo
and
adc
mov
and
ror
lret
test
insl
inc
mov
sub
fidivrs
sub
cmp
les
sbb
cli
push
xchg
pusha
lods
dec
and
sti
push
push
adcb
mov
rolb
dec
fwait
pop
or
xchg
sti
in
dec
mov
rorl
sbb
cmpsl
or
mov
push
dec
mov
mov
mov
pop
jge
mov
cld
sbb
outsl
dec
sti
loopne
mov
out
and
negl
or
hlt
pop
scas
rolb
decb
sahf
std
inc
sbb
jnp
xchg
std
xor
lcall
pop
mov
and
out
jg
pushf
mov
ja
xlat
clc
out
imul
and
sbb
mov
xor
mov
inc
addl
enter
es
insb
call
out
mov
mov
shrb
sbb
das
fsubrs
mov
pusha
inc
or
idivl
mov
insl
jns
xor
mov
push
push
xor
out
std
mov
loop
dec
mov
frstor
mov
stc
or
add
cltd
and
dec
push
adc
jp
mov
pop
imul
cvtps2pd
and
and
inc
jl
xchg
dec
cmp
inc
jl
lock
mov
xchg
fists
mov
scas
lahf
fsubrl
das
addr16
inc
or
repz
sub
in
stc
test
aam
mov
iret
lea
cwtl
sub
pop
push
xor
adc
orl
jp
add
bound
aaa
mov
insl
cmp
push
shrb
mov
mov
fdiv
mov
dec
pop
dec
sbb
pop
stos
sub
out
jae
test
xor
and
mov
inc
pop
dec
std
mov
or
mov
int3
scas
inc
cld
cmp
mov
movsb
or
scas
xor
jb
adc
jecxz
dec
nop
pop
in
fs
push
xor
nop
mov
loop
push
sub
jle
mov
cmp
add
popf
popa
jnp
iret
faddl
je
stos
int3
aad
fwait
int
adcb
jne
xchg
or
xchg
push
adc
ja
jecxz
mov
sbbl
mov
cmpsb
or
adc
cli
punpcklwd
in
cmc
in
fildll
in
inc
dec
les
cld
jecxz
add
mov
cmpsb
xlat
mov
xchg
out
mov
roll
push
js
mov
push
js
loop
add
and
loope
sub
dec
scas
cmpsb
in
in
imul
or
mov
jne
mov
fsubs
ret
jecxz
inc
xchg
jns
push
popf
lods
movsl
int
out
lods
stc
xchg
loop
idivl
cs
loop
mov
mov
insb
in
addl
fstps
adc
ret
leave
push
ss
mov
repnz
add
jb
and
lds
movsl
test
jb
ds
jl
cwtl
ja
loopne
repnz
jle
popf
mov
int3
push
xor
jl
dec
clc
aas
mov
push
pop
jmp
xlat
sbb
and
fstps
pop
loop
test
pop
aaa
lea
inc
call
adc
cli
stc
pop
stos
pushf
jge
nop
xlat
xor
add
lods
push
fwait
addr16
sub
xchg
add
stos
rolb
pop
out
pop
push
lcall
jp
inc
sar
ret
je
dec
adc
xor
sbb
rep
stos
adc
or
mov
sub
jbe
mov
sysret
dec
mov
jp
mov
pop
stc
in
pusha
enter
aas
dec
ljmp
pop
imul
pop
mov
sub
xchg
mov
popf
sahf
push
mov
cmp
lcall
outsl
lock
add
adc
xchg
test
aaa
scas
pop
sbb
std
mov
fdivl
xor
in
push
hlt
sbb
addr16
xor
insb
insb
add
xchg
and
mov
mov
sbb
rcrb
inc
push
xor
jno
inc
inc
stos
shrl
insl
je
jle
cmc
in
lods
jmp
add
jge
cmp
dec
add
mov
clc
divl
in
in
mov
cmc
sbb
dec
xor
or
lret
scas
push
xchg
testl
xchg
test
daa
xor
ret
push
push
js
scas
aas
pop
sub
rorl
scas
xchg
mov
cmp
aad
push
clc
adc
ds
xchg
sub
fs
jnp
movsb
stc
xor
and
dec
push
sbb
add
lds
inc
lea
outsb
mov
xlat
mov
sbb
sarb
adc
jp
ljmp
js
jecxz
vmovd
loope
xlat
jle
loope
rorl
cmp
jo
xor
pop
dec
xor
imul
jbe
jle
in
outsb
insb
sbb
lcall
mov
xor
in
imul
jbe
push
les
jp
mov
pop
addr16
jge
or
pushf
ja
es
mov
mov
shl
imul
repnz
add
jbe
inc
mov
lods
push
push
pop
xor
dec
adc
shlb
cmp
cwtl
popf
push
mov
stos
and
jecxz
push
gs
in
inc
fcomip
pop
sbb
mov
sbb
testb
cmpsb
shlb
jp
sbb
and
insl
jo
xor
lahf
mov
xchg
add
dec
xchg
or
paddsw
ret
imul
push
jne
stc
sar
push
mull
ja
insb
cli
pop
decl
adc
mull
gs
out
rcl
popf
cmp
out
add
mov
mov
in
pop
loopne
jbe
xor
mov
and
mov
mov
or
les
xor
inc
out
pop
cmp
xchg
aad
test
adc
jle
sbb
cltd
test
adc
sbbl
popa
and
xor
sub
cli
cli
dec
mov
cli
sub
adc
loop
test
add
or
mov
push
icebp
sub
cmp
or
sub
mov
xor
add
inc
lret
push
adc
mov
loopne
mov
leave
add
dec
fdivp
cmpsb
mov
mov
test
push
sub
addr16
adc
push
test
inc
xchg
and
add
ds
adc
out
iret
jb
jecxz
cmp
mov
aam
fldenv
popl
loop
xor
ss
jge
xchg
adc
dec
push
jae
popl
or
xchg
xchg
daa
add
pop
fmuls
mov
mov
rcl
cmp
jns
mov
mov
outsb
and
lds
xchg
mov
pop
lods
into
mov
idiv
sarb
aam
divb
int
out
mov
jge
adc
lcall
fnstenv
rcrb
push
adc
pop
push
cmpsb
shrl
dec
push
push
cld
es
jae
repz
xchg
iret
out
fwait
cmp
mov
pop
sub
push
mov
dec
arpl
mov
cmp
bnd
nop
adcl
xor
scas
lods
push
mov
mov
inc
push
jbe
sbb
mov
int3
les
mov
xchg
dec
inc
lods
push
loop
sub
mov
sbb
inc
cmp
fbstp
dec
pop
lock
clc
xchg
adc
cmp
sub
push
mov
sub
in
sbbb
subl
adc
gs
fwait
jge
movl
and
outsl
rcrl
loopne
fwait
mov
out
roll
sbb
cwtl
inc
push
cmp
les
push
cld
test
xor
jmp
bound
or
sbb
in
and
imul
mov
sbb
jecxz
fcoml
and
push
popa
inc
dec
shll
xchg
and
leave
dec
daa
fwait
jge
ds
scas
mov
xor
mov
push
sub
test
orl
and
jnp
jnp
dec
sub
cmp
insb
cmpsb
int3
inc
push
test
sbb
lods
cmp
push
mov
mov
lock
inc
xor
mov
out
lcall
sub
les
lods
xchg
shll
dec
jle
inc
xchg
xchg
jb
sbb
inc
mov
inc
inc
outsb
cmp
or
xor
mov
jno
add
add
stos
mov
and
shlb
movsl
push
clc
test
inc
inc
out
cmp
arpl
lahf
push
sub
lret
popf
dec
and
ss
fwait
repnz
cld
pop
pushf
test
into
cmp
shll
push
pop
mov
sahf
pushf
mov
rcrb
add
and
and
mov
popf
test
je
xchg
cld
cmc
aas
daa
xchg
sbb
shll
clc
or
inc
pop
and
xchg
shl
test
loope
pop
scas
in
bound
dec
jae
addr16
aad
push
or
lahf
pop
arpl
push
jmp
sub
or
mov
cli
mov
lock
xchg
incl
jge
inc
dec
shlb
xchg
stos
repnz
mov
adc
mov
lea
jb
pop
pop
cmp
xor
lods
pop
push
or
mov
dec
or
icebp
lret
cmpsl
insl
adc
lods
out
into
call
cmp
mov
ret
sub
push
nop
sbb
or
movsl
sarl
or
add
test
mov
insb
and
shll
lret
sub
pop
add
cs
aam
mov
dec
incl
push
adc
imul
cs
mov
inc
loopne
push
ljmp
xchg
and
xchg
rcll
fcompl
dec
shll
clc
es
pushf
repz
pop
mov
cmovg
int3
add
xor
fmuls
cmpl
ja
push
adc
push
cmc
sbbl
push
push
out
sbb
sarl
mov
nop
mov
aam
loopne,pt
pop
dec
pop
sbb
dec
aam
loope
sub
jge
jbe
aas
and
das
ja
gs
adc
lds
cmpsl
jb
stc
fwait
pop
xchg
inc
test
mov
pushf
mov
push
stos
mov
outsb
sbb
mov
add
cmpsb
jge
in
pop
mov
xchg
jmp
scas
push
add
jecxz
mov
cmp
mov
aad
sar
repz
cmp
add
test
sbb
pop
popf
insb
jbe
hlt
cmp
popa
pusha
adc
push
data16
test
imul
xchg
fdivrp
and
jns
loope
xchg
push
cmpsb
lds
ja
adc
ret
sub
fldl
push
push
ljmp
mov
lret
mov
in
test
lcall
out
mov
aas
inc
loope
out
outsb
pushf
insb
dec
dec
mov
lods
xlat
pop
das
popf
xor
enter
inc
shll
push
mov
dec
push
push
aaa
sbb
and
inc
sbb
dec
dec
cwtl
xchg
cmc
aaa
adc
push
lds
jns
sub
xchg
loope
push
and
aas
ret
sti
cmp
add
sub
leave
das
sbb
and
out
add
mov
xlat
fsubs
adc
mov
jae
rclb
xchg
cmp
xchg
mov
shlb
ret
xor
or
mov
pop
and
rorb
push
sarb
adc
popa
mull
sbb
jg
sbb
insl
and
cmp
addr16
jnp
dec
mov
aam
scas
ret
int
mov
xchg
lds
dec
pop
sub
mov
clc
xchg
gs
pop
push
aam
sub
sti
movsl
das
ficompl
cmp
jmp
rcrb
jb
dec
push
sub
aad
dec
push
sbb
adc
xor
xchg
inc
pushf
cwtl
imul
cmp
dec
jmp
inc
fwait
jo
pop
mov
and
dec
xchg
cld
lret
xchg
icebp
pop
mov
addb
push
scas
inc
enter
imul
pusha
jecxz
lret
test
stos
mov
mov
or
imul
imul
in
scas
sbbl
jge
xchg
imul
and
scas
js
fsub
jno
fnstsw
cmp
out
out
movsl
xchg
es
les
insl
lods
mov
and
cli
nop
imul
decb
cmc
cwtl
mov
das
in
fs
push
xchg
jecxz
xor
jge
repnz
fwait
mov
mov
adc
xor
mov
cmp
fadd
fcomps
sbb
rcl
inc
mov
es
mov
mov
mov
sbb
dec
lock
aad
jns
loop
icebp
fbstp
lods
mov
mov
mov
mov
mov
sub
notl
repz
rcl
pop
lcall
cld
data16
inc
push
mov
add
mov
clc
inc
repz
jle
xchg
pop
inc
sub
shl
jp
jl
cmp
lods
divb
add
push
ret
in
push
in
fldl
add
sub
movsb
mov
stos
xor
or
loopne
scas
test
mov
mov
push
xchg
stos
push
ljmp
lcall
ret
pushf
jg
adc
mov
ret
int
inc
fs
addr16
pop
add
cs
adcb
pop
mov
mov
mov
sahf
lock
add
out
pop
cmc
sub
sbb
push
mov
adc
insb
add
push
clc
cltd
scas
add
push
es
sub
inc
aad
ds
mov
pop
push
or
pop
cmp
in
les
jmp
inc
mov
dec
stos
insl
mov
orl
outsb
in
xchg
cmp
inc
popa
mov
push
ret
adc
xchg
adc
cmp
ficoms
mov
inc
xchg
and
or
imul
mov
pop
adc
pop
push
and
adc
xchg
mov
mov
cltd
sub
es
lret
loope
or
xor
das
add
xlat
fisttpll
jns
callw
imul
cld
dec
nop
cs
rcrl
jmp
ret
fstl
jp
nop
or
mov
test
jo
mov
xlat
mov
inc
js
pop
add
push
pop
into
mov
in
test
bound
push
pop
arpl
mov
inc
xchg
add
sub
adc
sub
inc
test
int
ds
pushf
push
push
out
or
pop
dec
add
xor
cmp
dec
iret
cmp
repz
test
and
cmpsl
mov
cmpsb
adc
stc
jmp
sbb
mov
sub
and
nop
ficoms
adc
cmpsl
ficoms
lea
cmp
mov
in
aas
daa
pop
dec
in
dec
push
int
sub
adc
push
push
xchg
cmp
or
sub
add
xor
sarl
fisttpl
mov
xchg
adc
push
sbb
lahf
loopne
push
mov
xchg
push
xchg
inc
xor
andb
imul
ds
stc
xchg
mov
fs
pop
fists
fimuls
stc
imull
inc
mov
pop
add
adc
leave
jle
or
lds
mov
cmp
sbb
or
jg
outsl
cwtl
clc
xchg
fsubrs
xchg
or
mov
addl
lods
jle
mov
mov
iret
and
int3
mov
fwait
push
cmpsb
dec
insb
jge
cmp
icebp
push
push
arpl
mov
or
or
mov
push
jnp
jle
mov
sbb
loop,pn
xchg
mov
jb
popa
shrl
and
pop
pop
jp
mov
loop
flds
int
test
jae
rcrl
cmp
insb
lds
std
pop
jno
dec
pop
xor
push
pcmpgtd
pop
inc
inc
cld
ja
jae
cmp
loope
in
jae
shlb
int3
leave
or
sti
data16
or
or
push
jno
sub
and
push
mov
repz
shlb
jl
fmul
aam
pop
sbb
test
daa
mov
jmp
sub
add
mov
mov
xchg
testb
in
lret
std
aam
ds
sub
popf
cmp
lods
cmpsb
cmovl
das
into
push
mov
adc
cs
pusha
inc
ljmp
sub
sub
dec
stos
and
scas
scas
es
or
sbb
fistpl
cmp
test
push
jge
jne
cmp
ficompl
sarl
pop
mov
inc
stos
pop
rcl
push
mov
sub
or
dec
lods
jecxz
push
insb
repnz
sub
sub
int3
mov
lds
mov
ret
push
insl
push
icebp
data16
mov
and
sbb
lret
pop
lock
mov
sub
mov
in
cmpb
xor
xor
xchg
test
cmpsl
adc
or
push
bound
pop
in
pop
out
rclb
std
lahf
add
ds
cmc
aaa
icebp
ret
sbb
inc
adc
filds
aas
xor
test
sub
enter
push
test
push
out
sub
xor
es
stc
inc
fimuls
jns
mov
pop
bnd
sbb
mul
and
push
jno
lret
adc
lcall
movsb
push
pop
and
repnz
imul
add
lret
dec
or
jle
aaa
pop
xchg
es
addr16
fcomip
jecxz
jge
aas
ja
shll
sub
je
jl
xchg
jo
or
pop
xchg
add
pop
sbb
lock
ret
ficoms
je
outsl
mov
scas
pop
in
ja
push
mov
cwtl
xor
fmull
mov
pop
xchg
xor
sub
ds
mov
lcall
add
xchg
jle
popa
leave
or
gs
add
mov
sub
add
call
scas
outsl
sub
rcll
fs
call
in
sbb
repnz
jecxz
lahf
loop
mov
cltd
mov
rorl
dec
out
mov
loop
cmp
xchg
xor
sbb
ljmp
int3
pop
xchg
stos
mov
out
add
lret
bound
or
dec
sub
xor
cmpsb
jno
bound
addl
sub
mov
dec
inc
pop
cmpsl
shr
fwait
bnd
dec
enter
and
push
sub
ss
lods
mov
inc
lcall
mov
hlt
in
outsl
mov
adc
jae
mov
dec
sbb
clc
push
unpckhps
popa
mov
rorl
test
mov
cmp
lock
mov
xchg
jg
fistl
jno
insl
out
sahf
dec
add
sbb
jne
nop
push
aaa
fists
jecxz
sbb
icebp
add
sub
adc
inc
shll
sub
das
stos
out
test
cmp
shl
pop
pusha
xor
pusha
push
and
jae
test
push
or
clc
ds
popf
mov
sahf
sub
xor
out
movsl
or
int
cmp
movsb
mov
in
packuswb
xchg
ja
std
cmpb
lret
ret
xchg
movsb
inc
stos
mov
imul
out
push
pop
cmove
add
jo
nop
xchg
lret
cwtl
lahf
adc
jnp
jno
ds
xchg
inc
cmp
dec
call
cmp
ds
insl
jle
rcrb
lods
pop
xor
adc
mov
pop
imul
movsl
lahf
int
ja
adc
movsl
idivb
arpl
adc
daa
rclb
scas
movsl
out
popa
sub
mov
lcall
fisubrl
push
xchg
lcall
dec
imul
mov
inc
push
mov
push
or
mov
pop
lods
sbb
nop
push
jno
and
mov
mov
incb
push
test
dec
and
cs
fs
mov
xchg
jbe
or
adc
ss
imul
mov
push
adc
adc
mov
add
and
sub
mov
imul
mov
sbb
cmp
test
dec
in
lahf
mov
sub
lods
in
lret
loopne
pop
movsl
mov
rorl
fnstenv
insl
add
adc
lock
pmovmskb
add
mov
add
test
mov
xor
dec
neg
sub
add
dec
pop
inc
adcb
and
aas
jecxz
aad
xor
roll
inc
mov
lcall
sbb
lods
add
outsl
and
test
mov
dec
mov
push
bound
sbb
ds
test
xchg
cmc
pause
and
movsb
mov
lds
fnsetpm(287
sti
int3
push
mov
add
inc
insb
or
mov
movsl
cltd
ss
xor
cmp
pop
mov
stos
mov
cmp
cmp
notl
cmp
cmp
mov
push
and
jg
movsb
mov
fmulp
in
call
pop
out
mov
fwait
mov
pusha
test
pop
cmc
cmpsl
xor
cmc
push
testl
sti
lahf
pop
or
fildl
and
mov
mov
mov
inc
pop
jae
sub
mov
sub
fwait
loope
and
lods
sarb
jmp
or
mov
pop
xchg
xor
mov
aaa
cmp
sti
add
lds
cs
sti
in
dec
bound
or
jns
push
sbb
insl
xchg
sub
and
sub
mov
jns
mov
jmp
push
pop
sbb
pop
cmp
cli
mov
in
mov
cmp
push
pop
jae
les
dec
sub
cs
jg
sub
mov
arpl
or
mov
mov
sbb
mov
or
arpl
popf
xchg
mov
jnp
mov
ja
xlat
mov
movsl
adc
idivb
sbb
adc
mov
adcb
xlat
hlt
loope
mov
inc
imul
and
mov
mov
into
and
repz
pop
insb
in
add
push
js
testl
insl
mov
xchg
lret
iret
pop
xchg
arpl
mov
jl
scas
andl
jge
or
xchg
dec
mov
or
cli
mov
fidivl
dec
loop
nop
xlat
fucom
nop
fsubrl
lock
pop
cmp
popf
sub
aaa
adc
mov
cmc
pop
pusha
test
push
sub
rorb
dec
xor
mov
mov
inc
nop
lcall
mov
stos
ds
stos
fisttpl
cmp
sbb
add
mov
jmp
sbb
in
lret
dec
aaa
loopne
jns
mov
jmp
xor
push
cmc
push
add
ficompl
notl
fisubrl
enter
das
add
xchg
mov
dec
mov
lret
inc
and
or
and
xchg
jl
inc
or
stos
jo
jmp
add
lock
pop
jb
outsb
xor
cld
cmc
jne
xor
lock
lea
je
inc
jmp
dec
cmp
jl
pop
xchg
or
inc
add
rcrl
xchg
aad
lret
scas
xchg
mov
shl
xchg
dec
dec
inc
mov
hlt
test
cs
and
shrb
cmp
pop
dec
mov
outsb
or
adc
fcomp
out
scas
nop
xor
repnz
dec
jl
loopne
push
and
fmull
sti
movsl
sbb
sub
mov
cmp
fnstsw
or
imul
push
dec
jecxz
dec
mov
dec
pop
mov
mov
xchg
iret
xchg
mov
mov
lock
push
lcall
insl
sbb
sub
int3
insl
adc
adc
loopne
insb
xor
call
in
sahf
xchg
mov
std
jno
sbb
lahf
and
mov
sar
movsb
sbb
adcl
sub
sub
mov
sahf
loopne
ret
pop
or
inc
sbb
mov
push
frstor
add
cmpsb
pop
pusha
xor
outsl
test
cli
sti
sahf
movsb
push
hlt
pushf
mov
or
mov
mov
sub
pop
daa
mov
sbb
lret
mov
popf
loope
mov
jno
mov
in
stc
push
test
push
in
lahf
mov
shrl
sti
jbe
fimuls
cmp
pop
or
mov
cmp
aad
mov
aam
and
or
xchg
loop
mov
jmp
aas
xchg
mov
adc
sbb
sub
xchg
xor
dec
lods
pushf
xchg
fdivrl
aad
cmp
bound
cmp
mov
ljmp
dec
test
xor
movsl
lret
sbb
dec
or
loopne
mov
mov
cwtl
sub
into
inc
sbb
aam
mov
adc
iret
ljmp
inc
fadds
ss
inc
push
aad
sbbb
nop
push
lcall
push
rclb
push
xchg
xchg
stc
shlb
fsubrs
testb
add
mov
add
xchg
mov
fwait
inc
das
mov
sbbb
push
mov
sbb
sub
inc
xchg
nop
jmp
scas
popa
loopne
sbb
inc
jns
outsl
add
fists
sti
inc
and
push
jp
add
adc
loopne
cli
lds
pop
movsl
je
inc
pop
scas
jbe
push
adc
rorl
js
mov
mov
jbe
sbbb
xchg
dec
es
add
mov
arpl
jo
out
mov
or
imul
push
nop
mov
sub
push
cmp
inc
lret
or
pop
adc
xor
mov
loop
lods
xchg
jmp
inc
jmp
or
loope
jecxz
scas
sub
and
xchg
test
add
stc
xor
ja
nop
jo
sub
push
pop
mov
ss
xor
pop
cmp
or
popf
lods
ret
nop
xchg
imul
cmp
pop
sbb
mov
fldenv
or
xlat
fsubrl
in
sub
or
iret
cmc
fdivr
cmpsb
cmp
push
fnsave
repz
movsl
sbb
inc
rcrb
mov
pop
outsl
stos
not
roll
data16
mov
inc
add
mov
icebp
int3
cmp
add
movsb
in
pop
and
rol
add
aam
jbe
jae
fwait
inc
outsl
add
cs
and
mov
pop
data16
push
loopne
jns
repz
popf
das
dec
dec
push
mov
xor
sbb
inc
scas
sbb
mov
out
mov
mov
gs
addr16
fdivr
xchg
je
xchg
mov
xchg
movsb
mov
xchg
test
mov
hlt
mov
xchg
fsts
cmp
lret
cmp
xchg
xchg
inc
mov
out
lea
cmp
push
aam
pop
jo
mov
mov
sub
or
lahf
imul
hlt
daa
lahf
cwtl
test
ret
ss
insl
push
loop
push
in
add
adc
data16
mov
xchg
pusha
shr
lret
mov
stos
pop
xchg
lods
int
inc
movsl
cmp
test
out
je
pop
xor
fsubrl
cs
loopne
je
repz
pop
loop
jnp
mov
mov
push
pop
mov
jb
je
into
int3
jno
into
out
ficoml
fdivs
sub
jge
or
xor
addr16
fidivrs
xchg
sbb
into
xor
das
std
push
adc
xchg
cwtl
push
mov
xlat
fs
push
cmpsl
mov
xchg
fcom
cmpsl
in
jnp
mov
ret
aam
jecxz
push
ret
outsl
push
inc
pop
ret
js
sbb
xor
fdivs
inc
mov
ljmp
rcll
push
loope
lods
imul
into
into
repz
dec
bound
xchg
stos
or
in
cwtl
daa
dec
aad
adc
int3
lret
cmp
lahf
lret
cmp
and
sahf
add
into
lcall
aaa
imul
jbe
inc
dec
cld
fld
xchg
enter
pusha
push
leave
add
std
xor
aaa
mov
daa
sbb
cli
addr16
mov
dec
arpl
pop
loop
out
adc
dec
fstpl
ror
ror
movsl
jp
cmp
pop
xor
rol
jg
rolb
pop
mov
jmp
inc
dec
aad
test
scas
or
push
pop
pop
dec
add
aam
mov
out
enter
fstpl
mov
popa
or
ret
xor
sub
mov
mov
out
xor
ljmp
or
sub
sbb
repz
js
rcll
dec
pop
ljmp
mov
or
sub
inc
adc
jne
test
sets
int
cli
dec
dec
and
adc
xchg
je
inc
aas
loopne
adc
ret
and
int3
mov
stos
scas
or
mov
xchg
mov
pop
fsubrl
mov
int
imul
insl
lea
jge
in
addr16
push
xchg
ja
cmc
xchg
adc
pop
mulb
jnp
cli
out
mov
fcompl
dec
adc
dec
dec
in
and
push
mov
or
xchg
pop
iret
popa
inc
cmpsl
lods
add
xchg
or
dec
imul
in
sub
ret
push
pop
cmp
pop
pop
inc
rolb
cmp
push
push
jb
enter
imul
sbb
xlat
aas
dec
inc
pop
loopne
ja
sub
adc
sub
adc
mov
shr
out
xchg
insl
lahf
and
incb
repz
jp
cmpsl
sub
scas
je
mov
stc
mov
stos
out
lock
scas
fimull
push
lahf
stc
imul
pop
neg
scas
dec
imul
outsb
add
loope
in
jo
sub
ja
lock
cmp
adc
in
rcrb
push
aas
je
push
xchg
add
leave
inc
and
jmp
jae
push
jg
xor
mov
xor
xor
and
mov
mov
adc
push
adc
jns
in
inc
dec
rcrl
cli
inc
shl
dec
outsl
loopne
ss
sub
jae
loop
pushf
insb
mov
bound
jge
add
shlb
pusha
sbb
loop
sub
addb
aam
popf
dec
hlt
sbb
or
in
jge
add
dec
scas
and
inc
push
pop
mov
fs
std
xchg
ja
scas
cmp
sbb
nop
or
mov
mov
fmuls
sub
jbe
pop
jb
dec
fs
jmp
mov
jo
dec
xor
xorb
test
es
mov
out
mov
xchg
mov
adc
mov
in
adc
push
inc
cmp
cmp
hlt
test
pushl
cli
sub
fmull
test
fwait
mov
das
inc
or
dec
rcl
into
repz
repnz
bswap
scas
sub
xlat
hlt
sub
fsubrp
mov
imul
dec
stos
add
sub
jecxz
clc
xchg
mov
push
push
jnp
popa
test
imul
mov
adcl
ret
rclb
cmpsl
add
and
xchg
enter
xchg
inc
fwait
push
sub
daa
dec
test
es
jge
jg
add
in
aaa
loop
leave
push
fbstp
idivl
jo
orb
jle
xchg
lret
mov
sahf
ret
orb
cwtl
xor
xchg
cli
cmp
fldl
and
mov
mov
sub
mov
roll
ss
dec
mov
sub
test
stos
xchg
aas
jmp
adc
scas
cmp
inc
dec
inc
lock
sti
fimuls
ljmp
mov
xchg
pop
push
ja
mov
adc
mov
sub
mov
cmp
es
mov
pop
sub
add
das
and
inc
cltd
pushf
jne
into
pop
jl
fildll
mov
enter
xor
lds
sub
cmp
mov
add
dec
pushf
inc
xchg
and
gs
scas
jecxz
andb
dec
xchg
test
or
outsb
icebp
jp
xchg
lock
cs
mov
lahf
iret
lahf
rclb
in
test
mov
dec
mov
jecxz
cwtl
ret
xor
sbb
addr16
xchg
pop
push
inc
sbb
in
scas
sub
xchg
mov
test
jecxz
test
and
mull
loop
mov
test
pusha
in
leave
gs
sbb
pop
adc
cmpsb
mov
dec
rep
scas
imul
jmp
fsubrl
enter
jb
negl
jecxz
inc
mov
loope
mov
sahf
inc
out
mov
rcr
or
sub
mov
int
mov
or
jmp
jnp
pop
gs
inc
mov
subl
sbb
inc
mov
lds
pop
jmp
ss
loopne
and
mov
insl
jmp
mov
lds
adc
xor
cmp
call
xchg
xor
adc
out
add
add
push
or
push
in
jle
mov
sub
mov
inc
and
pushf
cmp
add
cmp
push
bound
aad
ret
add
adc
cs
inc
movsb
and
xchg
test
fwait
scas
das
shlb
hlt
xchg
sarb
push
xor
jo
xchg
shl
push
mov
lahf
adc
mov
leave
mov
mov
sub
jo
sub
inc
mov
pop
xor
fists
lahf
lret
repnz
sub
scas
sub
in
sbb
ret
mov
push
xchg
sub
adc
rorl
mov
add
iret
shlb
das
out
jl
pop
add
and
pop
adc
stc
mov
sbb
imul
or
insl
and
pop
jp
int3
pop
out
sub
add
popa
sub
cmp
scas
fwait
loope
jne
inc
lahf
push
clc
jge
cmp
das
fsubrs
xchg
add
mov
je
cwtl
movsl
push
mov
mov
addr16
jp
pop
push
sub
sbb
inc
sbb
or
out
mov
xor
fs
std
xchg
inc
or
sub
mov
stos
arpl
or
cmp
xchg
daa
imul
or
clc
cmpsl
pop
jle
mov
lods
xor
adc
xor
dec
jnp
lea
into
sbb
cmp
test
dec
sub
xchg
push
les
pop
aaa
loop
dec
aam
mov
imul
fdivl
xor
push
inc
dec
pop
jbe
stos
aaa
mov
dec
lock
arpl
enter
clc
or
pop
push
cmp
push
adc
sbb
test
ret
les
movsl
xchg
icebp
cmp
nop
cmpsb
loop
ja
arpl
jp
les
jae
or
dec
sbb
clc
stos
mov
mov
in
lods
xor
adc
cs
xchg
jb
test
ljmp
mov
push
fwait
dec
inc
xchg
fdivrs
int
movsb
add
ss
push
fsqrt
jl
or
roll
and
shll
gs
and
mov
mov
xor
addb
es
jmp
int
and
dec
ljmp
ljmp
add
lea
stos
cmpsb
ljmp
sbb
add
out
arpl
cli
pop
bound
sbb
mov
and
mov
ret
sbb
add
cmpsl
fdivr
clc
cs
cmp
shll
sbb
cli
cmp
js
and
lcall
bound
outsb
inc
cs
int
test
push
daa
repz
sub
and
xor
pop
leave
jp
cmp
sub
loope
sti
xor
adc
mov
idiv
add
daa
imul
mov
jge
mov
stc
nop
int3
pop
enter
mov
push
call
jp
xlat
xchg
xor
outsl
jne
cmp
or
cmpsl
mov
orl
sub
loopne
sub
lret
inc
xchg
xchg
pop
push
adc
hlt
fwait
pop
in
push
adc
nop
sahf
addb
fdivrs
jns
pop
outsl
out
in
dec
mov
push
sub
sbb
in
ret
xor
cmp
xchg
inc
imul
into
add
push
stos
ret
mov
shrl
ljmp
mov
arpl
push
int
inc
xchg
pop
jge
xchg
mov
insl
testb
cltd
clc
imul
xchg
hlt
inc
inc
inc
dec
hlt
and
jl
sub
out
out
pop
mov
movsb
test
repnz
out
xchg
or
add
pop
add
mov
xor
aaa
xchg
loopne
pop
push
mov
sub
or
xor
and
jae
leave
mov
xor
cld
add
insb
add
ljmp
in
add
xchg
cmp
fstl
int3
pop
ss
sbb
arpl
cmpsb
mov
xchg
mov
lcall
and
adc
jmp
lds
or
hlt
movsb
lock
fwait
xchg
idivb
dec
cmpsb
fistps
mov
gs
push
sbb
and
jne
inc
cltd
sub
mov
in
jo
test
add
sub
ret
dec
xchg
add
int
dec
pop
push
adc
je
lds
push
ds
call
aaa
mov
negb
fdivrp
movsl
or
pushf
mov
call
jno
loope
fisubrs
repnz
jp
cmp
lds
dec
mov
fstl
cmpsl
or
mov
nop
lods
cmp
lea
test
fidivrl
cmp
pop
xchg
and
imull
xor
js
push
fdivrl
and
push
mov
repz
cs
lds
pushf
sti
xor
xchg
imul
jge
push
imul
cwtl
push
cld
shll
xchg
les
pop
jne
mov
movsb
popa
pop
cmp
add
iret
pushf
pusha
repz
sbb
testb
std
mov
outsb
cmp
mov
out
in
jge
inc
mov
daa
jb
into
daa
jns
xor
mov
aad
sbb
int
xchg
fidivl
adc
int3
ljmp
add
push
repz
pop
and
xchg
fwait
insl
daa
xlat
push
scas
loop
lcall
adc
or
adc
scas
xor
mov
rol
daa
in
stos
enter
lods
div
jno
lea
pop
cmp
cmp
aad
movl
mov
lahf
stc
jbe
cmpsb
mov
lea
lods
inc
leave
inc
sbb
cmp
rcrl
push
lcall
imul
pusha
cli
repnz
aaa
mov
fs
push
aad
iret
or
nop
mov
inc
movsb
into
lahf
rcll
mov
adc
dec
push
add
push
dec
mov
xor
adc
mov
cmpsb
adc
mov
mov
xchg
xchg
aam
xchg
loope
insl
inc
add
pushf
cmp
sbb
ret
scas
mov
iret
and
aad
jbe
sbb
ret
push
std
inc
fdivrp
cmc
mov
std
aas
mov
outsl
push
adc
stos
inc
mov
or
test
enter
mov
lahf
ret
mov
in
ss
jmp
sar
daa
push
insl
notl
aas
loope
xlat
xchg
fmull
xor
inc
sbb
xor
and
rorb
adc
pop
fisubs
gs
jbe,pt
adc
or
in
scas
loope
test
sbb
pop
cmpsb
or
add
push
add
dec
cmpsl
jo
mov
das
inc
lahf
fwait
and
divl
in
xchg
mov
xchg
and
data16
lds
xchg
mov
enter
jmp
jl
fidivs
dec
adc
push
dec
lock
arpl
sub
negl
fwait
push
pushf
stos
xchg
lahf
xor
mov
push
lret
xor
mov
sbb
jnp
ljmp
adc
inc
int3
mov
or
pop
xchg
and
mov
movsl
hlt
in
es
sbb
xchg
push
jmp
push
out
enter
pop
push
jle
js
inc
push
xlat
adc
fisttpll
inc
xchg
ret
mov
jnp
jle
cld
pop
lods
pop
aas
pop
push
jb
subb
dec
sub
arpl
mov
mov
test
sub
in
dec
out
lret
lds
push
jno
mov
lahf
subb
mov
sbb
push
adc
rcr
push
arpl
outsb
lods
inc
imul
imull
jg
xchg
cwtl
and
or
jmp
mov
popa
pop
cmp
scas
xor
mov
xor
outsb
xor
movsb
fcomps
test
int
dec
gs
cld
jns
mov
xor
gs
jo,pn
xlat
mov
sbb
or
pop
xchg
xor
aad
adc
call
imul
dec
sbb
push
scas
push
mov
int3
add
insb
sub
xchg
jo
mov
orb
jg
xchg
call
or
or
jns
hlt
scas
push
push
dec
sub
lret
test
cli
sbb
les
js
mov
shll
lods
sub
jno
aaa
das
mov
jnp
mov
mov
cmp
xchg
into
lods
cmpsl
rorl
push
push
push
hlt
xchg
add
pop
gs
lahf
lahf
fisubl
outsb
clc
jecxz
jecxz
scas
out
adc
loope
cltd
dec
and
test
pusha
popa
lahf
add
idivl
mov
add
insb
dec
daa
sbb
push
sbb
or
cmp
or
fs
pop
arpl
jo
sbb
shlb
sahf
xchg
cmc
fcompl
jne
call
mov
or
test
scas
mov
and
rorl
sub
push
roll
insb
movsb
adc
jne
sbb
mov
sti
scas
cli
mov
mov
mov
into
and
sti
shlb
aas
push
lahf
rclb
xor
or
mov
mov
sahf
fdivs
scas
mov
js
test
cmpsl
insb
hlt
xor
push
loopne
add
out
cmp
xchg
xor
sub
shrb
mov
jl
jo
adc
jnp
repnz
mov
daa
push
icebp
in
push
jl
jg
jecxz
mov
xchg
inc
mov
cmp
jmp
lret
icebp
and
mov
repz
inc
sbb
adcl
test
lcall
pop
decl
incl
inc
add
in
cmp
int3
scas
xor
push
sbb
dec
aas
adc
or
movsl
sbb
incb
or
pop
fldl
ja
mov
aas
sub
push
fs
mov
inc
repz
or
bound
test
push
cwtl
mov
iret
loopne
or
adc
lea
test
inc
mov
addb
sti
rclb
mov
push
fs
sbb
into
imul
and
mov
fisubs
aas
out
jle
shlb
repnz
sub
pop
scas
fisubrs
sbb
loope
mov
pop
jl
push
popa
rcr
push
loopne
mov
or
cmp
cwtl
insb
inc
inc
push
cmp
mov
lea
lcall
test
ret
inc
pushf
jns
xor
scas
mov
in
or
insl
push
js
sbb
das
out
mov
iret
into
es
sarl
cmpsl
test
and
xchg
mov
xor
scas
aam
mov
dec
xchg
xor
cld
sbb
pushw
std
adc
imul
jbe
daa
dec
push
or
push
adc
mov
and
jmp
inc
repnz
mov
notb
mov
inc
sarl
loop
pop
xchg
subb
inc
int
movl
mov
icebp
rsm
add
lcall
push
xor
xor
int3
xor
xchg
add
loop
cs
adc
sbb
lcall
mov
cmc
add
push
addr16
jmp
popa
pop
aad
loopne
shrl
or
jbe
add
loop
xchg
ja
xchg
int
aas
pop
cltd
jl
jmp
jmp
mov
sbb
arpl
cmpsl
or
shlb
and
les
das
xchg
or
fwait
in
mov
xchg
push
es
fdivrs
lods
pop
xor
iret
jns
scas
mov
cli
decl
jns
jp
inc
jmp
adc
out
jnp
cmp
scas
and
std
fmuls
mov
mov
mov
sahf
cmpsb
and
ja
jns
idiv
add
xchg
movsl
inc
icebp
add
push
jg
and
jle
daa
sbb
imul
jne
push
jl
xchg
les
lea
loop
xor
in
dec
out
loopne
sub
pop
fwait
inc
adc
xlat
in
adc
inc
sub
addr16
cld
fs
ja
gs
sbb
ret
test
outsb
stos
pop
cwtl
mov
dec
call
fildl
ret
push
lret
inc
cwtl
pop
hlt
pop
popf
scas
sub
pop
cmp
data16
mov
cmp
imul
push
imul
subb
xchg
mov
add
pop
dec
pop
sub
push
test
cmp
bound
fs
filds
push
mov
int
das
mov
pusha
fsubl
mov
adc
out
cmc
inc
xchg
stc
incb
sbb
and
dec
es
lods
jp
sub
icebp
scas
jbe
dec
in
push
mov
pop
fdivl
push
imul
cmp
nop
fs
adc
cmp
push
xchg
push
mov
fidivrs
ret
cld
lds
iret
adc
adc
int
mov
cmp
push
std
enter
jmp
imul
hlt
aam
pop
fsubl
mov
out
adc
jmp
mov
jbe
push
sub
imul
gs
in
xor
mov
out
cltd
push
aad
add
and
jg
mov
sbb
out
hlt
outsl
pop
sahf
jmp
mov
arpl
jno
jne
sub
bound
cli
pop
push
sub
add
push
in
fisubrs
xor
notb
dec
pop
pop
popa
pop
outsb
stos
mov
ss
bound
sub
pop
adc
mov
inc
movsl
inc
cmp
test
xchg
cmp
call
and
xchg
mov
sbb
outsb
data16
add
aaa
push
and
scas
cwtl
in
cmpsb
test
imul
or
dec
call
insl
and
mov
and
test
fwait
bnd
or
adc
or
add
out
leave
fdivrs
mov
adc
flds
repnz
lods
daa
lea
push
loope
cwtl
xchg
jl
sarl
sbb
pop
cmp
stc
cmc
jno
sarl
out
xchg
jbe
in
loop
sub
mov
ss
lahf
jmp
pop
outsb
jmp
add
dec
or
jns
idivl
jno
and
data16
ficompl
pop
loop
popa
loop
fs
cli
sbb
mov
push
movsb
mov
lea
cs
xor
push
xorl
push
jo
push
and
xor
jmp
loope
clc
or
movsl
daa
jb
loope
inc
andb
push
xor
dec
imul
cmp
mov
movb
inc
arpl
jne
lret
inc
in
out
add
adc
xchg
scas
popa
movsl
mov
or
fildll
inc
mov
pop
fsubrl
mov
ja
shl
sub
hlt
outsb
inc
pop
or
insl
shrl
testb
es
inc
inc
push
xchg
cmp
iret
add
jo
movsb
mov
mov
cwtl
mov
sub
mov
cmp
or
jnp
lret
mov
sub
sbb
es
xchg
rolb
and
orb
daa
shll
jo
adc
dec
insb
mov
or
addl
and
push
stc
xor
fdivrs
inc
sbb
sub
cmp
inc
notb
push
xchg
push
pop
sahf
jns
jnp
or
jb
sub
stos
ret
jae
sti
mov
inc
popf
out
jp
in
or
cmp
pop
test
and
sbbl
mov
adc
dec
cltd
sbb
lret
jmp
add
jp
out
mov
sbb
xchg
lea
dec
js
xor
shlb
test
xchg
icebp
sub
dec
stos
sbb
sub
add
cld
shrl
push
inc
test
repnz
add
std
inc
roll
lds
pop
fsubs
dec
movsl
outsl
stos
mov
cmp
xor
les
inc
clc
or
mov
push
bound
sbb
enter
hlt
fidivl
int3
ss
inc
loope
dec
lock
inc
aaa
fistps
inc
aas
inc
or
mov
fwait
inc
out
sub
inc
popf
js
aaa
popf
jp
fdivr
rcrb
jno
or
mov
add
lcall
mov
iret
icebp
or
xchg
jae
addr16
imull
mov
das
xchg
aam
fildl
xor
in
lods
addb
shrb
icebp
ffree
mov
jp
mov
xchg
add
dec
mov
xor
cli
mov
leave
fs
shrb
insl
jo
leave
sub
jle
lds
popf
cli
pusha
cmc
inc
adcl
adc
sub
out
xor
or
orl
cmp
loop
mov
pop
jo
aam
mov
popf
pop
mov
sub
sub
lods
idivb
data16
dec
lods
daa
loopne
sbb
cmpsb
xchg
rcrb
rcr
push
push
ret
in
popf
lock
and
gs
ret
hlt
xor
ss
call
or
mov
mov
mov
jp
ljmp
xchg
sub
pop
clc
repnz
dec
mov
mov
mov
or
push
cmc
dec
pop
add
cmp
mov
pop
inc
out
mov
push
js
and
dec
add
add
inc
ret
sub
inc
in
and
das
cmp
test
add
push
lcall
adc
cmp
mov
in
xchg
cmc
out
xchg
jne
scas
fnstenv
push
mov
fnstenv
xchg
int3
pop
lods
mov
xor
ljmp
jl
call
out
test
test
cs
lahf
repnz
and
cmp
imul
xchg
in
sarl
aam
lock
enter
stos
fcmovnu
ss
jbe
outsb
or
adc
inc
scas
inc
or
add
dec
nop
dec
push
fsts
lods
imul
mov
mov
jge
pop
xor
fdivs
or
or
sahf
lods
and
cs
insl
pop
outsb
ret
or
fistps
jo
sti
pushf
sbb
mov
cwtl
popf
mov
jne
and
jae
pop
mov
sti
movsb
cmpsb
inc
push
cmp
testb
xchg
add
aas
inc
lods
add
xor
aas
sbb
adc
insb
rcr
lcall
dec
mov
push
and
add
fsub
arpl
ds
dec
loope
dec
das
pop
jmp
leave
add
adcb
or
mov
jl
addb
pop
fsubp
out
dec
push
pop
in
mov
dec
push
pop
jae
dec
xchg
adc
stos
pop
inc
repz
fidivrs
sbb
pop
push
loope
and
push
addr16
lahf
inc
in
lret
test
add
in
mov
jg
mov
mov
insb
mov
scas
dec
inc
mov
repz
mov
jecxz
pushf
jns
add
stc
xchg
pop
inc
jo
clc
loop
stos
jecxz
xchg
jmp
jae
mov
push
push
adc
ret
inc
add
xchg
lret
jne
into
or
mov
mov
insb
loop
aas
push
adc
push
push
jp
test
popf
fs
sub
add
dec
insl
frstor
js
mov
mov
sub
cmp
pop
cmp
hlt
jp
jns
cld
add
lods
addr16
mov
imul
sub
fsubrs
mov
mov
outsb
pop
lahf
and
aad
pop
or
add
inc
lds
sub
cli
xchg
pop
pusha
and
lahf
aad
sbb
gs
pop
cs
xor
jnp
dec
sub
inc
ffree
das
mul
mov
jecxz
cwtl
pushf
xor
mov
js
cmpsl
mov
fisttpll
pop
fildl
mov
add
or
test
popa
repnz
in
sub
mov
nop
out
mov
and
mov
movb
dec
mov
dec
sbb
dec
jnp
jo
or
sbb
pusha
into
fsubrl
inc
jno
push
or
add
movsl
fmuls
ljmp
lock
je
push
stos
fs
scas
push
xchg
repnz
and
jecxz
aam
ret
adc
jne
addr16
push
mov
push
xchg
mov
sahf
xchg
nop
pop
int
in
and
ret
test
aad
iret
ja
js
enter
xor
sub
or
dec
cmp
pop
or
push
xchg
mov
jl
gs
jns
dec
pop
and
mov
or
inc
mov
dec
mov
xchg
mov
xor
lds
pop
jg
js,pn
in
loopne
or
mov
aaa
std
jno
jp
int3
jne
adc
dec
icebp
je,pt
das
call
xchg
sbb
mov
inc
idiv
cmp
adc
adc
ret
lret
lds
xchg
push
xchg
hlt
inc
sub
icebp
ss
jp
dec
cmp
dec
stos
cltd
dec
repz
push
cmp
addr16
je
fildl
in
aad
aad
fs
mov
or
das
push
pop
test
xchg
pop
mov
cmp
mov
imul
add
mov
and
cli
ret
or
ficomps
inc
pop
daa
rolb
ficomps
cld
mov
daa
jl
lea
outsb
sahf
inc
std
shll
cmp
dec
dec
xchg
popf
mov
push
inc
cmpsl
popa
jno
ret
pop
adcb
push
inc
sub
aaa
sub
push
xchg
lcall
sbb
call
test
scas
mov
mov
daa
mov
cmpsl
adc
pushf
int
push
fs
fistpll
loopne
cld
fadd
push
in
out
mov
sbb
or
jge
dec
repz
pop
xchg
cs
jns
push
mov
cli
subb
stc
sbb
lret
roll
sbb
in
rcrb
pop
push
xor
add
pop
mov
cs
mov
incl
sbb
dec
jp
and
fnstsw
add
loope
and
rcrl
popf
push
test
xchg
xchg
jns
popa
cmp
movsb
iret
or
fs
mov
pop
test
pop
sub
and
clc
sub
loopne
dec
add
inc
insb
je
adc
arpl
clts
lahf
mov
aas
add
das
outsb
cmpsb
cmp
add
pop
idiv
or
xchg
cs
rorl
fdiv
adc
leave
adc
inc
sbb
fwait
cli
cld
push
jmp
call
outsb
fdivr
rorl
mov
mov
mov
xchg
pop
punpcklbw
es
mov
cmp
mov
lahf
dec
mov
and
scas
fisttpll
test
sbb
add
pop
jp
cmpsb
ficompl
jb
jb
mov
adc
shlb
or
icebp
stos
icebp
movl
xchg
hlt
lods
adc
jmp
push
dec
dec
arpl
cmp
mov
notl
xor
jmp
fdivs
movsb
fldenv
clc
insb
jmp
mov
rorl
mov
icebp
ja
inc
adc
sub
hlt
xchg
sbb
nop
xchg
dec
push
push
fwait
roll
sub
push
daa
shrb
mov
out
mov
or
out
add
or
fisttpll
push
dec
adc
dec
lcall
and
insb
push
xchg
cli
mov
push
or
sti
decl
jle
arpl
pop
add
jno
cvtpi2ps
scas
pop
jo
shlb
jne
in
cmp
lret
cmpsl
data16
hlt
or
xor
stc
call
sbb
aad
out
pop
jb
mov
mov
pusha
jb
push
jnp
and
xlat
cmpl
and
out
jle
mov
lahf
in
lret
in
xlat
xchg
mov
adcl
push
sbb
insb
sub
nop
popf
sbb
mov
and
cmp
sbb
outsl
dec
mov
mov
decl
dec
repnz
fbstp
mov
xchg
test
lahf
mov
hlt
test
cmpsb
ret
repz
leave
dec
sub
repnz
addr16
or
push
dec
andb
lahf
lret
push
add
jb
add
jmp
cmc
dec
insl
mov
out
xchg
mov
mov
in
repz
popf
out
or
dec
sti
add
mov
into
and
mov
test
and
stc
popa
mov
lock
jmp
sti
lock
adc
movsl
clc
jb
mov
push
dec
loope
divb
adc
cs
inc
mov
mov
xchg
inc
subb
or
iret
data16
cltd
in
notb
pop
adc
fstps
sbb
rcr
add
lahf
adc
sti
jmp
ret
or
pushf
scas
fdivrl
xchg
test
or
dec
mov
ss
add
push
mov
or
loop
pop
fwait
jb
iret
and
mov
or
in
sbb
dec
cli
pop
jns
out
aaa
xor
lods
and
mov
fistl
and
fimull
pop
sub
enter
inc
addr16
sub
pop
rol
ja
dec
outsb
dec
stc
mov
mov
test
cmpsb
cli
pushf
add
pushf
cmpsb
ror
les
mov
mov
sub
pop
int
repnz
pushf
insl
dec
lea
enter
mov
dec
inc
fisttpl
repz
fiadds
cmpsb
xchg
ret
mov
insl
mov
xor
adc
sbb
cld
call
sub
xlat
in
fisubrs
sbb
out
sbb
cmp
mov
lret
loope
jns
mov
push
or
cmp
cltd
ja
scas
pop
fstps
test
push
jns
mov
pop
mov
inc
jnp
das
test
and
mov
mov
xor
cmp
jl
inc
xor
xchg
into
movlps
cmpsl
jmp
xor
and
and
mov
outsb
sbb
movsl
cmpsb
cli
ja
mov
cltd
es
dec
jle
add
or
or
jns
cmpsb
jno
jmp
rclb
push
sti
mov
icebp
nop
std
jp
cmp
xchg
pop
cltd
dec
roll
bound
pop
jnp
cwtl
fdivr
hlt
add
xlat
lds
mov
cmp
pop
xor
lcall
outsl
lahf
cwtl
adc
mov
jb
bound
imul
cmp
mov
out
push
into
scas
sti
xchg
push
mov
mov
sub
push
out
push
mov
sbb
mov
daa
imul
dec
sub
mov
jbe
xchg
mov
inc
cmpb
xor
and
sub
outsb
test
pop
sti
and
xor
adc
nop
jne
leave
std
sub
xchg
add
sub
inc
out
cmc
sti
jns
pop
xchg
pop
mov
cltd
repz
aaa
lods
inc
mov
scas
adc
push
and
pop
sub
dec
cmp
loop
dec
inc
mov
mov
sbb
dec
loope
addl
sbb
pop
mov
jecxz
jmp
lods
fld
cmp
cs
mov
xchg
adc
cmp
xchg
scas
loope
pop
mov
sub
add
fiaddl
aad
jb
pop
pop
mov
add
les
rcrb
scas
xchg
jo
push
sub
in
in
in
sbb
mov
pop
fisttps
mov
pop
mov
cltd
bound
iret
mov
rcll
or
dec
cmp
ss
clc
dec
outsl
sbb
sarl
pop
pmaxub
lock
sub
adc
xor
icebp
fiadds
pop
adc
or
jne
divb
mov
rorl
movsb
rdpmc
pop
data16
sub
jno
das
mov
shrb
pop
xchg
adc
inc
ror
dec
push
jae
loop
jp
push
inc
fwait
pop
sub
outsb
xchg
lock
jnp
ds
fimull
aad
movsl
lcall
push
sub
icebp
lock
out
lcall
loope
mov
push
inc
les
add
das
fisubrl
outsb
mov
or
mov
lahf
fldenv
data16
cli
mov
lock
dec
es
and
xchg
jnp
mov
enter
lret
mov
mov
cmp
add
pop
idivl
sbb
push
mov
stos
and
push
xlat
and
mov
jmp
adc
addl
jb
lret
add
call
daa
push
jmp
lea
lahf
cmpsl
inc
xor
test
inc
push
jne
mov
or
icebp
pop
jle
and
inc
inc
pop
pause
fdecstp
cli
dec
pop
or
inc
imul
iret
sbb
or
pop
mov
outsb
pop
test
inc
xchg
je
ret
stos
inc
add
and
push
inc
mov
xchg
jnp
call
gs
push
xchg
jmp
rcll
leave
mov
sub
adc
mov
cmp
out
subl
inc
fists
push
mov
xchg
dec
shrb
or
jnp
fsubl
jne
sarl
cs
add
xchg
int
dec
fwait
mov
fwait
jbe
mov
pop
cwtl
mul
dec
out
xchg
jg
cmpsb
ljmp
xor
loop
lods
inc
push
cmp
imul
inc
sub
xchg
inc
xlat
xchg
push
push
std
sbb
std
imul
dec
mov
xor
fsts
xchg
mov
adc
push
and
mov
add
adc
iret
mov
ds
fistpll
lcall
dec
sub
lcall
cmpsb
jg
ljmp
jno
ds
movswl
test
jl
shlb
rorl
std
lret
xor
jmp
or
sbb
inc
in
out
stos
pop
mov
push
inc
loop
sti
push
cmp
dec
or
push
add
inc
adc
push
repz
sbb
lret
out
out
pop
sbb
jo
sub
xor
sarl
xchg
mov
out
mov
dec
dec
mov
inc
xchg
mov
pop
push
stc
add
je
xor
xchg
sbb
gs
and
xchg
leave
pop
xchg
outsl
outsb
sbb
add
pop
in
repz
cs
jbe
mov
shll
loope
arpl
mov
addr16
aam
ljmp
cmpsl
addr16
or
fwait
cmc
pusha
mov
inc
or
inc
push
iret
lock
arpl
jg
loope
dec
bound
pop
sarb
xchg
lahf
imulb
mov
jns
mov
inc
mov
mov
jmp
scas
sub
jmp
jno
cmp
ljmp
add
mov
push
js
pop
cmp
jmp
mov
leave
loope
push
scas
cli
or
movl
imul
cmp
shll
push
or
sbb
mov
fnstenv
in
xchg
lds
adc
ds
mov
rolb
fwait
cld
hlt
adc
outsb
sub
inc
push
push
or
push
mov
into
adc
jbe
adc
mov
aam
imul
jl
jns
inc
aas
sbb
imul
push
idivb
decl
stos
jp
jns
pop
lea
sarl
adc
mov
ljmp
pop
push
int3
notl
xor
push
add
inc
lock
leave
mov
jp
cwtl
pop
mov
mov
sbb
inc
xchg
xchg
push
or
sub
pop
mov
les
pop
mov
push
push
inc
in
jbe
jns
push
sub
dec
addr16
incb
rcrb
or
imul
cs
loop
inc
test
cmp
xchg
mov
test
cld
cld
add
fstps
pop
and
add
int3
mov
and
xchg
inc
scas
mov
jmp
push
pushf
sub
clc
int3
arpl
sub
lock
shll
and
dec
dec
sub
push
insl
shr
cltd
fadds
scas
test
addr16
sbbb
dec
sub
cmpsb
cmpsl
push
sbb
jecxz
cmc
sahf
sbb
aas
xor
nop
push
adc
push
fildl
ljmp
cld
jge
mov
data16
mov
ds
dec
mov
ret
ss
ret
ret
pop
add
and
mov
mov
jle
adcb
lds
fistpl
ret
std
jl
movsl
bound
jns
pop
ja
sub
aad
nop
cmp
popf
inc
xchg
pusha
mov
pop
jmp
jne
and
and
add
mov
sbb
cmp
cli
pop
push
movsb
cmpsb
xchg
test
inc
aam
inc
pop
push
mov
scas
pop
adc
add
xchg
adc
xor
ljmp
sub
push
add
fldcw
stos
daa
mov
cmpsl
fsub
fistpl
data16
xor
out
mov
sbb
mov
jg
cmp
xlat
pusha
ljmp
stos
test
pushf
jnp
or
jo
icebp
sti
mov
mov
adc
mov
sub
imul
outsl
push
push
adc
dec
xlat
mov
mov
sahf
and
shrl
loop
dec
stc
sub
mov
jne
adc
xchg
pop
out
aas
je
sbb
and
pop
lock
jmp
cs
push
dec
mov
test
push
aas
pushl
fmul
shlb
dec
out
int3
ss
mov
in
outsb
adc
stos
add
mov
test
adc
push
add
shrb
pop
push
sub
mov
cmpsl
rcrb
push
pop
adc
mul
outsb
mov
lds
loope
jle
or
xor
mov
bound
mov
ret
cli
mov
in
xchg
push
mov
stc
mov
jae
jle
xor
inc
push
arpl
push
inc
sahf
int3
outsl
inc
add
mov
push
jns
pop
test
gs
xor
nop
push
mov
add
ret
cmc
cmp
enter
aad
cmc
push
aad
mov
cmp
std
or
repz
mov
lock
test
sbb
dec
mov
mov
cmp
adc
cmpsb
mov
int3
inc
jne
xchg
fsubrs
push
subb
mov
mov
inc
cmp
adc
inc
imull
lcall
repnz
hlt
out
cmp
mov
addr16
pop
int3
dec
inc
out
mov
mov
sub
and
enter
out
push
mov
push
gs
sahf
std
movsl
cmp
jp
les
push
and
arpl
or
outsb
test
cltd
int3
push
push
hlt
jle
mov
and
push
xor
mov
mov
adc
sub
jmp
loop
pop
push
shll
sub
gs
xchg
clc
sbb
xchg
ret
pushf
add
iret
popf
mov
addr16
leave
push
or
xor
cmp
xor
pop
pop
pop
mov
mov
aam
sub
and
push
iret
mov
mov
pusha
dec
jecxz
fcmove
or
mov
cs
fsubr
ja
dec
or
mov
pop
or
mov
pop
push
pop
stos
pop
popl
mov
das
inc
sbb
push
cmp
or
pop
pop
test
inc
cmpsb
jecxz
add
test
mov
out
out
xchg
xor
movsb
fld
frstor
mov
out
les
xchg
aad
lds
test
xor
xor
lods
inc
mov
xor
icebp
aaa
jecxz
jle
jno
outsb
dec
loope
outsb
push
or
ljmp
outsl
bound
fucomp
dec
mov
not
xor
test
cmp
mov
orb
adc
daa
bound
mov
mov
mov
aaa
shrl
stos
ds
movl
mov
arpl
mov
mov
add
xchg
add
mov
mov
adc
imul
fisubrl
lcall
scas
lock
data16
fsubp
loopne
ret
dec
out
push
jb
jl
cmpsl
iret
testb
push
cmp
push
aas
loop
notb
ja
mov
or
addb
cmp
setno
and
clc
ds
xchg
or
xor
jbe
inc
daa
jns
cmp
mov
ret
in
cld
push
add
pop
orl
cltd
test
test
or
sbb
jmp
out
loope
andl
add
mov
add
jo
add
push
dec
pusha
iret
je
xor
arpl
inc
stos
inc
in
mov
adc
mov
sub
lods
lret
xchg
and
or
mov
daa
and
mov
mov
xchg
mov
mov
mov
pop
out
sahf
cmovo
mov
je
das
stos
lds
pop
sub
fucom
mov
popa
mov
add
lods
jns
or
push
icebp
inc
fsubrs
and
mov
lods
xchg
mov
push
xor
xlat
add
mov
outsl
out
xor
pop
loop
adc
cmp
adc
faddl
cwtl
or
cmp
ret
lea
cmp
clc
lret
cwtl
stos
sahf
inc
jnp
imul
imul
mov
pop
jg
and
xor
jno
mov
loope
fs
adc
inc
jb
mov
push
xchg
pop
std
sti
insb
addr16
push
test
mov
ss
xor
stc
aam
rcr
inc
mov
mov
decb
jge
hlt
adcb
push
ljmp
das
xchg
icebp
in
mov
jg
inc
scas
cmpsb
sub
movb
add
push
gs
in
and
inc
inc
and
mov
gs
adc
lods
clc
cmc
cmp
imul
or
sbb
mov
pop
rcrl
sahf
cmp
lahf
dec
andnps
lds
loope
inc
or
test
mov
je
pop
push
mov
test
outsl
sub
xchg
xlat
inc
pushf
rolb
cmp
or
or
xchg
clc
lods
adc
push
mov
out
xchg
inc
shl
mov
pop
push
xchg
test
int3
sarb
xchg
push
ja
cltd
call
mov
fstl
push
shll
jl
movsl
push
mov
cmpsl
push
and
sbb
pop
mov
test
push
aad
aaa
cmp
test
ljmp
je
ds
sub
loop
and
les
pop
or
push
mov
outsl
cmp
mov
inc
mov
and
aas
movsl
jl
adc
repnz
in
jb
outsl
pop
jecxz
scas
pop
push
test
push
pop
mov
out
cltd
cmc
test
sqrtps
out
je
paddsb
fwait
enter
jmp
and
xchg
push
cwtl
jle
gs
lods
sahf
mov
mov
push
pop
lock
jnp
xlat
in
stos
dec
push
pop
lds
std
xchg
adc
jl
ljmp
test
adc
cmp
jg
xchg
mov
test
ljmp
leave
sahf
aam
pusha
or
je
outsl
neg
xor
pusha
outsl
out
add
int
dec
push
mov
loop
loopne
mov
mov
jo
add
outsb
sub
fdivp
repnz
inc
mov
data16
mov
rcrl
jp
xor
imul
push
lret
pop
fistps
insl
sahf
push
push
fxch
pop
addr16
sub
dec
xlat
cmpsb
xor
loope
addl
test
inc
mov
push
aam
aas
xor
popa
rolb
ss
cmp
mov
fiaddl
daa
roll
pop
and
xchg
adc
roll
add
mov
xchg
jle
shlb
in
ret
or
pop
jmp
cs
mov
insb
fidivs
push
mov
divb
outsb
scas
xchg
daa
cmp
mov
mov
in
stos
rcrl
push
jnp
dec
mov
jae
pushf
fiaddl
sti
ret
sbb
fucom
lds
add
xor
divl
sub
and
sti
pop
mov
mov
adc
jmp
xor
add
call
movb
fisubs
mov
xchg
shll
insb
into
imul
loopne
mov
mov
and
insb
push
inc
pop
rorl
mov
insl
shlb
ljmp
clc
pop
call
xchg
sbb
dec
sarl
ja
in
xor
sahf
xchg
lea
and
mov
in
stos
mov
lea
add
shll
addl
and
inc
pop
fwait
push
sbb
sti
cmp
pop
scas
fists
xchg
pushf
jp
mov
cmp
popa
xor
push
gs
cmpsl
sub
inc
sub
inc
pop
pop
rol
xchg
pop
scas
dec
outsl
dec
push
cmp
arpl
jecxz
js
xor
cmpsl
in
out
adc
cmp
out
xchg
inc
data16
or
push
or
push
pusha
inc
push
xor
inc
daa
xlat
jmp
into
test
push
daa
int
jbe
jp
mov
push
ljmp
aas
repz
mov
leave
outsl
cld
sahf
clc
xor
sbb
ljmp
xor
movsb
hlt
dec
jl
in
mulb
pop
mov
push
xor
ljmp
sbb
sub
jnp
dec
pop
daa
rorl
mov
rclb
or
pop
or
fistps
psubd
and
lock
loope
mov
cmpb
mov
ret
sub
push
mov
or
jb
jg
mov
jl
and
pop
mov
rolb
leave
dec
pop
push
int
push
lds
mov
gs
jl
sub
mov
rcll
ficoms
int
popf
dec
rcl
push
lods
negb
mov
outsl
push
call
push
dec
mov
cld
inc
and
pop
es
pushf
xor
into
inc
mov
stos
in
fwait
inc
aaa
xchg
or
sub
push
je
cmp
stos
xchg
aaa
outsb
xchg
xchg
enter
mov
pop
add
aas
or
or
in
push
and
dec
pop
mov
xchg
ja
ds
aaa
icebp
clc
inc
inc
popa
sub
aad
jne
lret
add
lcall
test
cmp
or
andl
lcall
xlat
movsl
in
sub
movsl
mov
ja
shrb
div
das
and
jg
mov
xchg
das
xchg
dec
nop
push
xchg
xorb
enter
sti
sub
addr16
shll
sarb
nop
loopne
xchg
cmpsl
dec
shld
push
call
mov
fidivs
dec
push
mov
loopne
pop
test
push
jmp
iret
popl
sahf
out
inc
jbe
cmp
xor
movsb
imul
ret
lret
out
in
mov
sbb
fildll
sbb
and
mov
int
adc
in
das
mov
and
insb
in
in
sub
ret
push
xchg
loopne
jmp
cs
outsl
pushf
std
cwtl
shll
fldt
cwtl
stos
aaa
dec
fwait
sbb
and
pop
mov
push
pop
iret
sti
fidivl
sbb
lret
jp
push
mov
push
push
cwtl
xor
stos
push
ret
test
push
outsb
addb
fidivl
pop
jmp
jle
mov
std
in
out
ljmp
scas
sbbb
loop
int
cmp
inc
cmp
xor
mov
int3
sub
or
jle
fs
rcr
pop
xchg
mov
mov
fldl
mov
xchg
icebp
pop
ss
fimuls
cmpsl
add
andl
les
adc
or
imull
and
dec
push
mov
and
std
push
popa
xchg
ds
inc
js
int3
add
inc
sahf
in
mov
inc
sub
lret
push
pop
mov
mov
ss
mov
pop
cmp
sbb
into
adc
jmp
mov
sti
add
cli
dec
jle
shrl
adc
je
dec
cmp
mov
fxch
lret
stc
sub
cwtl
push
dec
movsb
rcrb
inc
leave
jno
les
cmp
sub
pop
adc
push
ds
out
out
cmp
and
clc
sbb
and
and
lahf
fists
jmp
sti
sbb
cmpsl
mov
gs
adc
xor
rcrl
popl
cld
arpl
fnstsw
inc
xor
int
jg,pt
mov
cltd
insl
cmpb
mov
das
fdivrp
cmp
or
or
es
mov
adc
xchg
jb
movsb
dec
rcll
cs
stc
dec
mov
dec
lods
mov
xchg
pop
popa
or
xlat
fiadds
testb
cmpsb
ds
cli
pop
addl
aaa
cmc
cltd
or
xchg
add
scas
in
aaa
pop
inc
mov
cmp
jg
pop
pop
xor
sub
push
repz
cmp
xor
into
stos
leave
pop
jl
lret
and
scas
mov
lahf
in
mov
inc
jns
and
xchg
loop
ljmp
mov
jno
push
jne
xchg
push
dec
and
cmp
or
leave
movsb
hlt
test
sarb
xor
cmpsb
out
jo
xchg
mov
outsb
in
ja
push
mov
xlat
imul
ss
int3
cs
mov
into
lods
add
mov
jne
inc
in
and
push
pop
pop
adc
movsl
imul
adc
mov
mov
mov
xor
pop
scas
jnp
pushf
push
ljmp
add
aad
push
inc
out
js
jl
mov
lcall
inc
jmp
test
pop
les
das
push
pusha
cmp
jnp
pop
insb
imul
sbb
jge
and
mov
das
jb
adc
enter
aaa
xor
mov
xchg
jo
movsb
dec
mov
mov
xchg
add
std
fsubs
mov
add
and
pusha
nop
lahf
xor
lret
mov
scas
jmp
rcll
sbb
pop
adc
sarl
filds
add
std
jmp
cwtl
or
jmp
mov
aam
jecxz
sbb
movsl
inc
aaa
aaa
incb
fcoml
pop
cmp
jne
lods
xor
xchg
pop
repz
xchg
cltd
in
cmp
push
dec
icebp
mov
sbb
sbb
daa
push
xchg
and
and
pop
jmp
lcall
inc
dec
out
fidivrl
repnz
incl
test
test
xchg
ffree
in
adc
jnp
mov
adc
icebp
pushf
mov
rorl
fimull
xchg
pop
xor
mov
incl
push
ljmp
std
push
dec
mov
es
outsb
rdmsr
push
das
in
sti
cltd
stc
out
jb
xor
jp
or
lods
fdivs
icebp
push
scas
xchg
pop
jg
inc
xchg
sub
lret
nop
pop
dec
inc
xor
repnz
xor
jmp
lret
fcmovnbe
js
hlt
cwtl
divb
fwait
lret
imul
push
sub
xlat
sub
in
dec
int
jns
sarb
or
pop
iret
cwtl
fimuls
dec
mov
adc
insb
stos
cmpsl
xchg
imulb
outsl
imul
cld
aaa
stos
js
js
dec
push
mov
sbb
sbb
mov
rorb
cmpsb
dec
pop
pop
and
push
addr16
clc
les
sub
mov
cmpsb
sub
out
or
sbb
cmp
jne
inc
das
xchg
orl
push
loopne
inc
mov
sub
jae
popf
repnz
mov
jecxz
fisubs
aad
insl
sub
out
add
in
pop
dec
stc
cmp
push
sbb
sbb
xchg
dec
dec
ss
sub
js
scas
or
stos
out
or
jmp
testb
popf
nop
call
pop
aaa
push
loope
push
add
stos
xchg
repz
adc
dec
mov
jl
filds
xor
push
jge
lret
jmp
aam
mov
fwait
dec
out
mov
sub
xchg
pop
mov
inc
push
inc
and
leave
mov
pop
lret
sbb
lods
jb
inc
out
xlat
inc
xchg
adc
stc
jo
or
insl
cmp
and
mov
cmc
xor
das
loope
jb
rcrb
xor
pop
lahf
push
call
mov
dec
or
xchg
out
fcompl
add
push
in
xor
mov
aas
cmpsl
xchg
test
sbb
jno
in
cmp
ss
dec
add
imul
lret
sbb
mov
frstor
mov
add
xchg
sbbb
sub
jmp
add
pop
inc
test
push
jp
call
sub
cmp
fiadds
add
into
jge
inc
mov
xchg
jle
insl
xchg
push
push
mov
jb
dec
sbb
rorb
lcall
aaa
sbb
or
xchg
cmp
je
ljmp
xchg
xor
xchg
int3
fcoms
adc
es
mov
iret
mov
pop
adc
mov
ret
imul
and
adc
mov
shl
cs
jo
mov
jno
aaa
pop
push
addr16
adc
or
xchg
or
dec
sbb
add
dec
aam
mov
fcomps
adc
mov
dec
and
or
out
add
cwtl
fisubrs
push
arpl
dec
dec
lret
in
xchg
push
lcall
outsl
mov
push
add
std
mov
cmc
loop
ds
lret
je
je
shl
adc
sbb
inc
adc
xor
pop
xor
vmread
and
data16
in
push
mov
out
jno
jp
std
aam
pop
mov
js
push
jne
fnsave
and
mov
es
int3
inc
jge
fadds
mov
cmp
sbb
outsl
xor
mov
fisubrl
loopne
push
cmp
gs
loop
les
mov
in
mov
clc
jmp
push
lock
mov
mov
or
es
or
scas
add
mov
add
mov
jmp
rolb
jg
jne
frstor
rcrb
adc
sub
call
test
dec
inc
lods
jb
lds
mov
xchg
mov
test
inc
sbb
lods
add
jae
ret
inc
or
shlb
mov
mov
dec
xor
in
mov
cmpsl
imul
adc
nop
lds
sbb
es
dec
add
int
or
fistl
repnz
xchg
push
mov
dec
aam
pop
and
sub
scas
mov
fcmovnbe
inc
aas
test
fs
mov
fsubl
shrl
and
addl
pop
inc
mov
and
mov
sbb
mov
andl
sub
mov
push
loope
xchg
jp
std
aad
xchg
out
mov
sub
and
stos
sahf
push
loopne
dec
and
pop
insl
add
xchg
push
ret
pop
xchg
mov
dec
mov
sbb
cmp
arpl
push
mov
movsl
mov
jp
sub
out
xor
xchg
sub
mov
loope
data16
pop
pop
pop
mov
fidivl
add
cmpsl
das
das
in
scas
push
sbb
and
in
mov
lcall
cmp
pop
popa
loope
push
cmp
xchg
xlat
gs
xchg
jp
pop
std
sub
sub
je
cmpsl
xor
cmpsb
js
mov
loope
jecxz
inc
sub
icebp
enter
ret
mov
dec
pop
fcmove
or
inc
sbb
loop
std
pushf
jl
mov
imull
dec
push
repz
loopne
lahf
or
mov
addr16
mov
pop
xchg
outsl
xor
sub
jns
pop
lods
in
add
lcall
jno
fistl
stc
andb
xchg
jge
in
push
and
shll
adc
rcrb
jecxz
sbb
sbb
sbb
faddp
lret
std
push
add
fimull
jl
pop
stc
mov
sbb
mov
pop
pusha
jecxz
fcompl
mov
into
sub
pushf
pop
push
push
cmpsl
out
cwtl
sbb
cli
loop
ss
cmp
popl
ljmp
lea
dec
movsb
cli
and
into
or
test
repnz
or
pusha
inc
push
mov
ljmp
mov
mov
push
push
repnz
adc
mov
imul
inc
mov
jb
xchg
jl
imulb
nop
daa
xchg
mov
pop
sbb
lods
mov
test
or
popf
ja
sahf
add
sahf
cmpsl
jecxz
in
jbe
call
mov
out
je
or
mov
inc
mov
push
fldenv
sub
adc
or
pusha
add
jle
sub
nop
jae
adc
je
pop
fdiv
out
cmpsl
push
sahf
imul
and
mov
push
cmp
mov
fwait
cs
xor
inc
stos
xchg
mov
lret
in
lock
lea
gs
push
xchg
add
orb
and
lods
mov
sub
sub
xor
mov
pop
lods
stos
sub
sbb
add
test
or
xchg
insl
lock
movsb
enter
es
aas
xchg
test
out
lret
and
sarb
je
jae
icebp
sbb
xchg
cmc
stc
jb
xor
negl
sarb
jns
or
pop
pop
sahf
mov
loop
and
xor
lods
jge
mov
insb
sahf
adc
fstl
shrl
xchg
out
or
jno
movsb
add
outsl
aad
mov
bnd
cmpsb
stos
mov
stos
sbb
mov
pop
push
dec
xor
add
cmp
ljmp
bound
mov
cs
stos
and
fwait
cmc
adc
xor
mov
adc
inc
outsl
and
add
push
imul
adc
cmp
xor
xor
outsb
add
mov
ss
hlt
and
jnp
sbb
or
out
cmp
rorb
lahf
sub
push
test
loop
jae
testb
and
sbb
push
jle
pushf
call
mov
js
mov
leave
jbe
lret
dec
aas
xchg
push
ljmp
test
push
call
jo
sbb
push
cmp
loopne
arpl
iret
out
push
lahf
call
push
ffreep
jae
pop
add
add
xchg
stos
push
or
mov
dec
cmpsl
adc
sti
sarb
sarb
ffree
sti
cmpsl
lret
or
repz
xchg
push
inc
jno
test
sti
mov
scas
push
and
cmp
loopne
or
inc
pop
sub
push
and
xor
push
mov
xchg
mov
test
cmp
jb
xchg
pop
dec
loopne
mov
add
adc
imul
jno
xchg
nop
movsl
aaa
repz
jns
jnp
push
test
dec
jb
mov
dec
mov
movsb
xor
loope
dec
add
imul
jnp
mov
pop
fistps
fdiv
jg
fistpll
les
mov
cmp
arpl
notb
gs
out
adc
xlat
add
lds
js
mov
das
adc
lret
int
adc
or
dec
dec
mov
stc
fldt
cmp
or
and
sub
dec
cmp
sti
int
xor
jg
push
loop
out
or
push
xchg
addr16
cmp
jecxz
dec
movsb
push
pop
mov
lods
xlat
xchg
or
mov
fcoms
pop
aas
scas
inc
push
add
int
andl
adc
in
sub
in
pop
pop
mov
push
adc
sub
or
mov
outsb
mov
ffreep
push
xchg
clc
mov
mov
movsb
shll
mov
inc
sub
sub
mov
call
testb
adc
ja
xchg
scas
and
je
inc
sbb
mov
and
mov
leave
dec
dec
cs
mov
call
jle
sbb
into
mov
in
mov
cmc
mov
lahf
add
or
scas
out
sub
pop
adc
orl
mov
xchg
movsl
scas
adc
js
pop
mov
aam
pop
cmp
shlb
lock
and
jb
cmp
inc
out
fisubl
in
push
fcompl
cmp
addl
lret
or
sub
mov
cwtd
and
pop
je
das
xor
mov
imul
xchg
lret
xchg
mov
in
rorl
xor
ja
cmp
sahf
mov
mov
fists
mov
xchg
mov
push
mov
pushl
cmc
test
mov
testb
cmp
sbb
arpl
or
lcall
ljmp
aam
adc
inc
mov
cmc
pop
das
xlat
lea
fcmove
cmp
stc
inc
test
pop
mov
jmp
xchg
adc
out
lea
stos
clc
xor
insl
mov
sbb
add
repnz
push
cli
lods
pop
loopne
and
adcb
jns
inc
pop
cli
fs
lock
orl
aam
insb
lret
in
jecxz
cmp
popf
add
add
test
and
popf
lea
fdivl
movsl
lea
aaa
lret
test
mov
pop
push
sub
aas
hlt
int3
fs
fidivrl
lret
enter
sbb
addr16
mov
enter
jg
cmp
cmp
jne
mov
add
into
rorb
add
and
xchg
pop
lcall
inc
jecxz
aad
movsb
test
mov
ljmp
pop
add
sbb
lret
out
and
ret
mov
in
cltd
ljmp
mov
push
push
xor
imul
outsl
or
jecxz
pop
loopne
xor
xor
mov
mov
cmp
jne
sti
xchg
repz
push
sub
dec
popa
gs
mov
stos
cmp
mov
fidivrs
ror
or
jle
push
sbb
cmp
clc
in
and
in
cwtl
jecxz
mov
call
nop
movsl
cmp
pop
mov
clc
cmpsb
mov
adc
pushf
mov
movsl
xor
xor
xchg
pop
jecxz
iret
pop
lret
cmc
jo
mov
shl
leave
mov
cld
adc
leave
add
and
and
push
enter
mov
inc
adc
xchg
cmp
movsb
sub
sbb
xchg
xchg
sub
pop
popa
lret
push
hlt
dec
scas
stos
outsb
out
cmp
pop
iret
in
ja
int3
cmpsb
and
push
cltd
repz
std
imulb
and
in
xchg
inc
mov
loop
dec
std
popa
int3
sub
xlat
lahf
pushf
mov
xchg
hlt
insl
es
ja
mov
mov
iret
bound
in
fidivs
mov
aam
out
shrl
clc
or
or
mov
in
imul
push
sbb
ljmp
dec
cwtl
das
loopne
jne
dec
xlat
pop
dec
mov
loop
shl
sub
or
adc
cmp
adc
icebp
sub
movl
pusha
int
mov
xchg
pop
loope
or
push
fisubrl
cmp
insb
fstl
getsec
xchg
sahf
mov
shll
jmp
xor
repz
addr16
aas
sub
fbld
or
in
js
stos
nop
mov
movsb
adc
xchg
dec
push
push
or
add
or
jmp
shlb
push
mov
cmp
cld
mov
ljmp
lahf
xor
cmp
push
add
imul
and
sbb
mov
adc
add
sub
dec
popa
pop
ds
sbb
mov
mov
pop
pop
pop
add
test
jecxz
jbe
push
cmpsl
dec
pop
xchg
fstpl
mov
decb
jnp
rcrl
fstpl
xchg
mov
stos
lret
pop
mov
rcrl
cmp
mov
sbb
imul
fwait
das
pop
sbb
lcall
in
sub
or
add
cmp
mov
dec
push
or
push
xor
stos
out
cmp
mov
and
movsb
rclb
jmp
int
into
stos
mov
cmp
aam
xchg
stc
and
testb
std
adc
add
sub
adc
mov
outsl
std
pop
cmp
jl,pt
adc
cmp
lods
cli
js
lods
mov
fldenv
xchg
pusha
mov
and
xor
lcall
hlt
iret
stc
out
sub
pop
sub
mov
cmpsb
push
repz
or
cltd
push
jle
clc
inc
pop
push
xor
pop
lret
dec
in
dec
xchg
ret
test
pop
out
popa
fstps
pop
pop
ret
jl
test
dec
or
loop
push
cltd
xchg
push
aas
mov
push
pop
dec
jp
sbb
in
mov
mov
cwtl
rcll
and
xor
repz
in
imul
ret
cltd
lods
aas
push
pusha
inc
lods
add
or
jp
sbb
js
xchg
daa
js
push
lods
gs
clc
mov
sbb
fdivl
aam
ja
cwtl
fdivl
push
mov
adc
daa
cltd
xlat
movsl
jne
mov
xor
sub
push
cmc
stc
flds
daa
loop
loop
push
cwtl
cmp
xchg
inc
add
shrl
fs
subl
cmp
ljmp
and
inc
push
rorb
mov
orb
cmp
subl
shrl
xchg
adc
sub
add
adc
push
pop
jl
push
or
rol
sub
push
jl
jb
xlat
imul
ss
adcl
sub
lret
cld
xchg
fdivl
data16
push
jp
fs
rol
sahf
sarl
fwait
ja
stos
imul
or
xchg
sub
sbb
scas
rolb
in
sbbl
push
jecxz
data16
jmp
sti
jae
pop
aaa
push
inc
ret
repnz
cmp
fcmovnb
sbb
push
pushf
rorl
sub
cmp
pop
das
stc
outsb
repz
stc
cmpsb
pop
ss
mov
jbe
ficoms
in
shr
shll
inc
stos
cli
add
jmp
dec
mov
testl
icebp
mov
sarb
into
adc
lret
int3
sbb
insl
lods
fisubl
fcoml
jno
pop
or
cmc
push
sbb
or
mov
and
shll
cmp
and
fs
arpl
mov
xchg
or
addb
ss
and
push
push
push
dec
jns
xchg
mov
aam
aam
jg
pop
xchg
pop
xor
data16
out
scas
fisubrs
scas
adcb
mov
pop
cmp
pop
mov
js
mov
lahf
jbe
es
and
pop
aad
add
push
push
mov
sub
jb
jl
insl
push
fwait
xchg
xchg
aad
leave
jne
jle
bound
test
fcompl
fcmovu
call
xchg
test
xchg
sbb
ss
stos
inc
mov
daa
add
jae
push
dec
inc
mov
inc
dec
smsw
pop
test
call
pop
or
pop
mov
roll
out
into
push
repnz
stos
cs
ficoml
mov
test
ja
or
int3
iret
in
andb
ljmp
sub
lret
dec
fadd
adc
jbe
movsl
loopne
dec
movsb
test
movd
sbb
xchg
sbb
fisubrl
stc
cs
std
push
sbb
add
add
das
xor
lock
fwait
int3
int
pop
pop
mov
pop
es
adc
shlb
lea
shll
inc
orl
cmpsl
mov
jg
mov
mov
jmp
fcomps
shll
test
gs
adc
sbb
fidivs
les
lcall
cmp
aam
xor
dec
add
pop
and
pop
push
push
movsl
inc
lods
sti
movsb
pop
adc
sbb
mov
fnstenv
jg
ret
test
or
mov
fcomip
mov
clc
mov
into
jbe
lock
or
inc
addr16
std
or
fwait
daa
loope
cld
cwtl
arpl
xor
sub
add
push
jge
movsb
stos
push
sahf
in
fmuls
push
test
imul
lret
sahf
sbb
jae
cltd
hlt
mov
cmp
push
xchg
jne
add
je
fsts
xor
xchg
daa
mov
cmp
mov
lea
mov
movsl
or
mov
sbb
push
faddl
movsb
dec
repz
and
test
insl
icebp
pushf
mov
mov
mov
mov
sub
mov
mov
inc
loopne
sbb
mov
fnstenv
sahf
fldt
and
repnz
add
movsl
addr16
cld
outsb
lret
repnz
aad
shll
popf
xlat
jo
xlat
xor
loope
cwtl
xor
js
push
mov
popf
sub
in
scas
inc
movsb
nop
mov
in
push
lcall
fcom
mov
repz
mov
dec
movsb
push
outsl
cmp
mov
jbe
loop
jg
arpl
xor
mov
xor
add
pushl
add
in
in
mov
sub
clc
or
push
push
fcomps
int
testl
test
pop
mov
or
in
sbb
mov
pusha
and
adcl
add
cmp
out
xchg
aaa
jo
scas
xchg
scas
adc
push
dec
xor
dec
dec
jl
adc
iret
jg
mov
int
loop
pop
cmpsb
stos
fimull
ja
bound
cmp
and
mov
pop
xchg
mov
es
sti
fsubr
add
mov
mov
sub
ja
aas
xor
inc
data16
jmp
push
dec
scas
test
push
ficomps
mov
add
sbb
xchg
movb
push
leave
lods
call
fimuls
and
jnp
pusha
dec
imul
sub
dec
mov
xor
mov
test
lods
sub
lods
arpl
cmpsb
and
mov
les
cmc
pop
ret
aas
mov
xchg
lods
fmull
fldcw
jp
mov
movsb
fistps
ja
out
ss
push
jl
into
outsb
inc
daa
icebp
in
daa
into
push
mov
lds
ret
fdivl
xor
cmp
xchg
and
jmp
pop
loope
mov
cmpsb
mov
mov
xchg
fimuls
mov
out
jb
cltd
push
imul
outsb
cld
sub
push
cmp
fsubl
xlat
mov
pusha
pcmpgtw
les
popa
push
add
dec
cs
adc
lea
inc
dec
add
mov
cmp
test
or
popl
testb
mov
xchg
cld
iret
pop
scas
push
test
pop
ret
out
mov
dec
lret
divl
decl
div
incl
mov
sti
cmp
int3
jne
mov
out
add
jno
jne
rcrl
mov
les
pop
shrb
xor
jo
aam
ret
stc
adc
es
or
dec
xlat
js
cmpsb
pop
adc
xor
gs
sbbb
and
xchg
mov
mov
dec
test
adcb
ljmp
test
int
hlt
ror
push
sbb
bound
adc
test
mov
in
imul
ja
stos
in
sbb
shlb
push
repnz
mov
popf
and
aam
shr
xor
dec
insb
shl
push
jg
in
sub
xchg
flds
or
mov
mov
jmp
cmp
xchg
cmpsb
sti
add
add
es
xchg
mov
jge
add
imul
scas
cs
jge
xchg
cmp
js
outsl
mov
notl
lcall
dec
rcll
lea
or
scas
arpl
jmp
les
add
insl
aaa
or
lret
adc
sub
xor
addr16
scas
and
add
fadds
lcall
fwait
jo
cmc
scas
jae
lea
lret
daa
jno
pop
mov
xorl
in
add
ret
jnp
das
aaa
dec
out
dec
pop
test
arpl
cwtl
or
pop
jp
int3
rcrb
cli
insb
push
jle
and
add
ud2
enter
push
aad
add
inc
lods
aam
xor
pop
adc
pop
test
loopne
jo
addb
or
and
pop
xor
mov
or
loope
js
sub
ret
call
sub
xchg
and
sub
pop
rclb
pop
sbb
inc
lret
xchg
pop
ret
xor
pop
mov
mov
lret
bswap
lods
fadd
or
imul
ret
test
and
repz
cs
cmpsl
sub
arpl
dec
jb
or
pusha
mov
and
pop
in
lds
cmpb
push
mov
add
call
rcrl
push
jmp
inc
mov
dec
imul
sub
mul
sub
pusha
movsl
out
das
imul
sbb
flds
push
test
jl
push
push
inc
gs
mov
sbb
mov
and
dec
lcall
push
test
ss
sbb
rolb
lods
push
xor
mov
movsl
mov
add
dec
xlat
mov
pop
fwait
xorb
xlat
mov
dec
and
xchg
xchg
movsl
imul
notl
pop
scas
push
add
dec
loope
aam
push
and
or
xchg
push
and
pop
or
push
jp
mov
in
and
outsl
push
jle
dec
out
pop
not
pop
cmovp
stos
addr16
jne
mov
fisttps
sbb
enter
jns
fnsave
jno
outsl
xchg
inc
jbe
test
fsts
cmpb
pushf
fnstsw
dec
and
mov
xchg
data16
sbb
arpl
clc
lahf
jb
mov
push
mov
mov
adc
leave
es
adc
in
pusha
add
fdivl
and
xchg
xchg
add
jmp
loop
sahf
sbb
je
fistl
push
mov
sbb
nop
jbe
mov
xchg
push
mov
cmp
xchg
or
pushf
fmull
inc
push
xchg
push
add
xchg
jns
and
push
cmp
ret
xchg
xchg
test
bound
in
and
sbb
and
outsb
lds
jle
xchg
mov
xchg
adc
inc
dec
cmp
jecxz
sbb
and
fnstsw
hlt
pop
daa
xor
sub
cli
push
jp
sbb
lret
inc
mov
data16
xchg
lahf
lret
leave
leave
add
push
pop
iret
ret
mov
test
xchg
popa
push
fwait
repnz
shl
setae
xchg
and
shll
stc
jae
rolb
or
cltd
or
mov
push
dec
andl
mov
jno
movsl
imull
mov
loopne
es
pop
les
lds
aad
loopne
xchg
insb
je
pop
dec
subb
int
ljmp
pop
outsl
hlt
loope
push
lds
in
shll
out
fdivrl
or
nop
cmp
mov
ja
icebp
mov
jmp
ds
fisttpl
ss
xchg
sub
imull
rcl
fbstp
mov
pop
rcrl
mov
xor
js
sub
stc
xor
popf
mov
ds
pop
hlt
xrelease
mov
insl
js
sbb
lret
in
push
dec
dec
jns
js
jl
push
lcall
push
mov
in
lret
scas
leave
movsl
in
lea
mov
xchg
movb
aad
sbb
cmc
lret
scas
out
data16
mov
add
rcrl
sbbb
xor
push
stos
in
dec
lock
or
push
lds
or
arpl
add
jnp
test
sub
fldl
mov
fst
imul
std
aas
add
aaa
mov
dec
loop
sbb
mov
push
jbe
lds
adc
aad
fwait
xchg
dec
das
test
mov
xchg
addl
push
dec
inc
xchg
dec
push
xchg
pop
negb
ret
and
pop
pop
std
xor
rclb
faddl
push
cmp
mov
add
and
inc
mov
mov
cmp
mov
push
inc
xlat
or
sub
push
cmpsl
jo
and
xchg
lcall
js
mov
jae
cwtl
jmp
xor
arpl
loopne
mov
dec
push
leave
out
insb
test
fbld
rcrb
jecxz
popaw
or
jne
imul
or
sbb
jnp
ret
scas
lret
sbb
adc
xchg
push
iret
mov
or
cld
xor
pop
imul
cwtl
sbb
mov
lods
inc
pop
sbb
jno
sub
xchg
rcr
lcall
mov
mov
cmc
sub
jmp
cmp
stos
push
mov
stos
daa
cmp
cmpsl
shrl
movsbl
xchg
movsl
push
outsl
add
cmp
add
aas
mov
arpl
push
inc
dec
adc
ljmp
or
mov
jae
push
imulb
subb
jns
push
xchg
add
xchg
sbb
lds
push
sub
ficompl
sti
test
cmp
outsb
mov
xchg
xchg
leave
in
mov
sahf
xlat
icebp
call
mov
pop
loopne
add
or
mov
cmp
scas
mov
into
xchg
scas
add
sub
jnp
pop
imul
pop
push
push
pop
pop
mov
movl
dec
fisubs
adc
lea
dec
xlat
rcll
mov
arpl
frstor
sbb
push
and
std
mov
jno
xchg
xorb
add
push
cli
pop
jb,pn
dec
mov
jg
mov
sub
fidivrl
add
sar
xor
xor
push
shl
test
idivb
xorb
test
fdivrs
or
repnz
stc
das
xor
loop
cmp
pop
pop
push
cwtl
mov
push
pop
les
or
enter
notb
pop
movsb
cmpsl
movsl
inc
push
fdivl
gs
cmp
aaa
frstor
adc
test
lcall
test
scas
cltd
lret
inc
test
popf
aas
sub
ss
jecxz
data16
ds
sbb
push
std
mov
stos
cmp
xlat
call
adc
andl
scas
jge
jp
lea
lds
fsubrs
pop
push
cltd
mov
push
stos
xlat
push
scas
xchg
fwait
shrb
test
lods
pop
cmpl
stc
sub
pop
in
stc
sub
jbe
daa
jb
sub
or
daa
mov
pop
jmp
fisttpl
in
push
out
flds
pop
cmpsb
ss
fucomp
add
sti
dec
pushw
add
mov
push
xchg
lea
fsubs
xchg
mov
mov
outsb
test
movsb
inc
xchg
nop
bound
stos
sub
sub
addb
cmp
addb
arpl
out
js
stos
or
adc
add
pop
xor
sbb
jge
sbb
inc
mov
imul
cmp
xor
ret
push
cltd
repz
cmpsl
push
push
or
aas
or
jge
xor
mov
inc
pop
xor
mov
popf
insl
ljmp
jp
in
cmp
mov
nop
sbb
or
mov
or
sub
cmp
sub
and
inc
inc
das
jns
fucompp
les
cltd
mov
push
dec
add
inc
or
mov
call
or
cmp
inc
ja
sbb
or
push
cmp
outsb
stc
je
mov
decb
xchg
dec
or
imul
mov
mov
mov
and
pushf
mov
mov
insb
outsb
mov
shlb
rorb
lcall
inc
sub
rorl
imul
mov
fwait
inc
add
or
sarb
inc
and
jo
adc
es
icebp
add
jae
les
pop
imul
addr16
imul
fwait
cmpsl
ss
out
insb
jge
mov
pop
out
loopne
sbb
xor
sti
pop
or
cmpl
xchg
es
ljmp
movsl
xchg
pop
pop
jecxz
dec
mov
das
test
push
in
push
xor
push
sub
add
mov
gs
ret
or
test
fs
ds
fisubl
pop
pusha
imul
dec
scas
fwait
and
imul
push
adc
shlb
jl
ss
call
push
scas
in
xor
jp
repz
jge
and
fidivs
pushl
dec
into
xchg
xchg
and
adc
cld
xchg
xchg
mov
pop
js
shlb
daa
or
push
ds
popf
xchg
sahf
mov
pop
mov
mov
cmp
sub
and
adc
cs
push
push
mulb
cmpsl
int3
fwait
cmp
push
pop
out
mov
pop
outsl
jg
jae
xchg
insb
cs
pop
dec
sarb
leave
push
inc
nop
or
imul
jb
test
dec
cmp
enter
pusha
and
mov
sbb
pop
ficoml
cltd
scas
pop
ja
insl
sbb
mov
idivb
aaa
xchg
or
mov
inc
xchg
mov
in
or
sbb
outsl
stos
movsb
out
pusha
leave
add
and
clc
push
xor
inc
in
and
cmp
pop
jle
lret
add
mov
jg
jl
jle
inc
cmp
xor
dec
fisubs
arpl
xchg
outsb
or
push
mov
adc
lcall
push
push
test
sbb
adc
sbb
insl
xchg
xchg
xlat
inc
negb
outsb
into
xchg
add
std
jecxz
mov
and
xor
dec
pop
mov
add
add
xlat
int3
or
mov
test
mov
adc
add
inc
loopne
sub
adc
out
dec
jne
jns
loope
cmc
lret
jo
xor
or
loop
test
bound
fstp
jnp,pn
xor
ja
in
imulb
mov
sbb
test
push
rol
icebp
ret
sbb
mov
dec
sbbl
stc
cmp
cmp
aaa
movsb
out
push
cmp
mov
push
scas
jno
dec
mov
dec
scas
sub
adc
pop
out
xchg
dec
sub
sbb
imul
pop
xchg
fmull
push
insb
test
sahf
outsl
or
lds
pushf
imul
add
inc
cmp
sub
out
add
ljmp
lcall
inc
push
in
push
or
adc
sub
mov
rcr
arpl
xchg
xchg
addr16
cmpsl
sub
add
cmp
mov
sarb
push
andl
pop
add
and
inc
jmp
mov
inc
mov
gs
sbb
addl
adc
lret
mov
mov
stos
pop
push
lods
stos
mov
clc
mov
mov
addr16
outsl
les
lcall
mov
shl
hlt
popl
fstpl
test
out
cli
mov
mov
pop
pop
pop
pop
xorb
lods
inc
mov
mov
jne
pop
push
das
sub
rorl
pop
mov
inc
and
sbb
cmp
or
gs
add
fnsave
leave
out
lea
jp
in
sbb
loop
push
push
adc
fidivrs
mov
das
outsb
xchg
shrl
ljmp
mov
cld
scas
push
dec
cmp
jno
and
adc
outsb
sbb
lea
imul
pusha
add
and
and
add
push
js
xor
jecxz
je
jbe
stc
les
push
mov
sub
pop
adc
pushf
jecxz
in
inc
and
adc
incl
pop
or
mov
shrb
pop
push
cmpsl
mov
testl
lods
cmpsb
pop
lcall
sahf
inc
sbb
int
cs
sub
leave
cmp
push
or
jp
xchg
mov
in
jle
ss
mov
test
jp,pt
inc
leave
dec
adc
clc
pop
mov
pushf
adc
xchg
popa
ss
add
pop
jo
xchg
sbb
pop
mov
cmp
test
mov
frstor
mov
or
in
or
xchg
mov
push
pop
and
out
cmpsb
add
cmp
std
sub
outsb
imul
dec
add
jno
mov
test
mov
add
mov
or
dec
xorb
std
xchg
movsb
jb
xor
sarl
fisubs
or
mov
jmp
cmp
sti
packssdw
or
stos
mov
imul
cmp
iret
data16
and
inc
or
hlt
sbb
jno
iret
repnz
ffreep
dec
dec
xor
adc
mov
leave
sub
mov
mov
test
push
cli
push
ss
mov
out
lahf
call
test
ds
mov
stc
cld
cltd
jecxz
mov
mov
loope
ret
es
repz
in
xchg
and
adc
inc
and
jb
xor
xchg
cmp
fsubrs
jmp
into
aas
dec
mov
add
pop
mov
in
pop
pusha
cmp
push
mov
loop
sti
js
lret
sbb
les
push
inc
fmuls
or
xchg
pop
lea
add
xlat
inc
lret
hlt
jne
jp
add
jbe
shl
mov
addr16
mov
mov
sbb
daa
inc
mov
xchg
mov
cmp
cmp
cli
gs
mov
enter
mov
shlb
jno
in
mov
dec
cli
rorl
mov
out
sbb
jle
cmp
loop
repnz
icebp
scas
cld
lret
hlt
ja
sub
push
push
or
adc
inc
lods
adc
pop
cmp
sbb
xchg
data16
clc
xchg
iret
call
js
xorl
mov
xor
push
or
dec
popf
or
pushf
xor
mov
fidivl
jns
arpl
shr
sub
sahf
jge
rcrb
mov
enter
mov
es
icebp
call
jmp
hlt
sbb
jno
out
ds
xor
and
nop
hlt
xchg
xchg
jecxz
cmp
xorl
repnz
out
stos
in
sub
rcll
dec
ljmp
lahf
mov
xor
sub
test
outsl
mov
mov
mov
stos
jbe
rorl
jae
lds
pop
lret
rcl
jns
xchg
push
xchg
adc
mov
fnsave
adc
add
adc
inc
aam
icebp
cmp
pop
out
or
mov
cli
xchg
xlat
pop
insl
addr16
sti
loope
in
nop
cwtl
adc
les
cmp
es
mull
mov
xor
test
mov
bound
stos
xchg
sbb
mov
xchg
xchg
jae
jp
movsb
jg
sbb
loop
jbe
pop
imul
aaa
mov
xchg
jle
sub
sarl
jno
prefetcht0
outsl
add
xchg
test
cmpsb
repnz
mov
dec
mov
push
stc
adc
cmp
add
jo
gs
arpl
jmp
xor
clc
cmp
mov
ret
shlb
dec
stc
sbb
insb
pusha
cmpsl
daa
stc
pop
dec
shll
pop
inc
jmp
icebp
cmp
sub
or
mov
and
ret
jae
jae
lahf
mov
in
jo
shlb
es
rorl
push
ljmp
push
xor
fldenv
or
xchg
ja
adc
mov
cs
shrb
cmp
mov
insb
xchg
nop
xchg
xorl
aaa
push
and
cmp
adc
decb
sub
sbb
sti
js
mov
and
popf
sub
add
mov
es
or
dec
jne
jmp
call
ret
fimull
mov
fstps
in
aas
jg
scas
and
xchg
or
in
sub
ss
push
push
pop
das
pop
mov
test
or
jo
pushf
es
or
add
lock
mov
mov
push
sbb
push
sbb
inc
push
jb
daa
stc
mov
les
int
pusha
pop
ret
adc
fcomps
out
cmp
ret
divb
jbe
xchg
outsb
cmpsl
mov
mov
testb
mov
cmpsl
cwtl
pop
add
push
pop
inc
xor
ret
pop
inc
xchg
shrl
pop
inc
int
push
sub
or
or
mov
sub
or
sub
mov
pop
pop
jne
lcall
mov
mov
inc
add
mov
push
mov
fildll
mov
add
mov
push
mov
sbb
daa
dec
inc
loope
stos
xchg
and
sti
icebp
js
mov
xor
jns
xchg
mov
aaa
lret
inc
sub
sub
imul
pop
mov
rol
aaa
xor
ljmp
pushf
pusha
pop
cmpsl
gs
cld
lret
out
aaa
cmp
jecxz
rcrl
adc
jmp
pop
cld
testb
mov
dec
xchg
fldcw
loope
out
bound
testl
sbb
bound
inc
xor
adc
mov
jge
movsl
popf
and
mov
inc
push
sbb
pop
mov
ljmp
sbb
mov
fists
xchg
mov
mov
jle
adc
aaa
test
imul
xor
daa
test
mov
lock
cwtl
rcrl
mov
dec
out
loopne
imul
mov
xor
and
pushf
aaa
sub
cld
lods
jl
xchg
cmp
popa
jl
fisubl
ljmp
mov
cwtl
repz
stc
jp
sub
xor
scas
sub
xchg
pop
push
mov
cld
push
xchg
fldenv
jp
and
cmpsl
rclb
inc
adc
shlb
jecxz
rorl
xchg
in
cltd
repz
sub
jg
pushf
jle
iret
sub
cld
orb
sarb
fcmovnbe
cs
mov
imul
or
sbbb
pop
int3
sti
mov
adc
in
xchg
leave
jg
out
push
roll
lea
cli
dec
dec
jge
stos
add
shrb
sub
xor
sub
div
popf
mov
rol
cmp
into
lret
xor
lods
dec
mov
mov
repnz
jp
gs
cwtl
movsl
dec
mov
pushf
push
xor
push
dec
fs
mov
sub
insb
xor
push
or
mov
mov
stos
add
jl
xorb
paddb
jmp
dec
roll
cmpsl
add
cmpsb
lea
or
arpl
insb
icebp
mov
mov
lret
add
jne
inc
mov
xor
xor
movsl
pop
dec
ds
cmp
test
dec
mov
ljmp
mov
lods
push
xchg
inc
mov
fimuls
xor
or
lret
jge
push
push
mov
mov
xchg
and
arpl
and
arpl
repnz
lret
cmpsb
shrb
sbb
xor
and
inc
imul
and
jle
adc
movsl
fbstp
aas
shlb
inc
rclb
imul
mov
jne
jg
sbb
xchg
mov
in
lock
mov
cltd
mov
inc
xchg
sub
pop
rolb
inc
in
mov
ss
jge
out
or
pop
sub
inc
jmp
or
inc
clc
cltd
push
sbb
pop
ret
jne
xor
push
pop
out
fs
mov
inc
dec
fidivrl
dec
test
xchg
fnstcw
jl
popa
mov
and
or
xor
cmp
cmp
dec
lds
cli
pop
cmp
xor
sub
and
dec
mov
imul
jle
cli
cmp
xor
push
out
jns
push
out
or
js
ljmp
jp
push
mov
aaa
popa
and
mov
bnd
mov
ret
je
mov
ja
cltd
jge
out
sub
mov
mov
test
mov
ret
sub
scas
mov
push
es
stos
inc
push
fidivrs
cs
xchg
fnstsw
mov
ja
inc
mov
and
loop
push
outsl
jmp
test
adc
insl
repnz
dec
jge
sbb
and
or
pop
inc
xor
ret
mov
xor
stos
scas
mov
push
shrb
test
mov
mov
int3
leave
adc
clc
out
add
clc
loope
rol
xchg
lea
iret
mov
stos
test
push
jle
insl
cld
insb
test
daa
or
xchg
adc
lret
jg
dec
sahf
shr
inc
jb
in
stos
mov
inc
scas
faddl
lock
xor
inc
mov
add
stc
test
jle
inc
push
sbb
jmp
jp
sbb
add
aad
dec
gs
xchg
cmpsb
int
enter
adc
or
push
out
add
shrb
sbb
lea
mov
push
sub
cmc
rcrl
fldl
inc
in
push
aam
push
std
add
les
out
ss
das
and
mov
pop
inc
test
out
jns
aas
jp
icebp
push
mov
inc
testb
push
push
out
mov
cwtl
cmp
dec
lahf
mov
dec
or
ja
stc
lahf
daa
push
test
jecxz
mov
xchg
stc
push
ja
fcmovb
fstl
das
mov
pop
scas
int
lods
pop
mov
repz
push
das
mov
fdivs
jae
lock
cmpsb
sahf
and
lock
mov
fnstenv
shrl
mov
xchg
adc
leave
dec
scas
xchg
hlt
pop
inc
lock
mov
jecxz
and
loopne
xchg
scas
mov
mov
leave
xor
out
sub
jnp
dec
push
dec
hlt
iret
test
lahf
jl
inc
icebp
jmp
addr16
mov
pop
addb
jp
shlb
sbb
pop
jmp
rcl
in
push
int3
cmp
cmc
flds
in
fs
sbb
test
out
jne
mulb
mov
faddl
cmp
mov
inc
mov
lods
loope
cltd
inc
add
std
imul
mov
enter
cli
daa
aaa
loop
insl
in
aad
mov
lock
int3
cmpsb
sbb
pop
ss
dec
in
jp
xor
movl
cli
xchg
xor
xor
jg
pop
popa
jbe
in
cmp
leave
sub
mov
pushf
pop
cmp
mov
xchg
out
pushf
mov
out
lret
pop
shrb
adcl
adc
test
adc
rcr
out
pop
dec
jp
out
add
out
je
out
or
negl
jg
and
xchg
adc
add
in
scas
sarb
push
clc
popf
cmp
push
iret
orl
lea
push
jle
les
sub
lods
ljmp
fnsave
push
das
rclb
dec
push
mov
sub
mov
mov
jbe
mov
gs
mov
or
in
pop
mov
cmp
sti
mov
push
jl
out
out
lds
fiaddl
jno
in
rol
jb
stos
lods
loope
fsubr
xchg
inc
repnz
inc
sti
cs
fildl
mov
or
pop
call
jmp
pop
je
repz
movsb
or
into
mov
or
pop
push
push
jne
fs
insb
push
and
cmp
divl
sub
adc
sbb
add
sub
sub
pusha
xor
mov
inc
jmp
adc
xchg
push
jne
orb
xor
mov
mov
dec
mov
call
rcrl
idiv
loope
inc
inc
insb
mov
mov
leave
mov
popf
fisubl
in
adc
jle
adcb
xchg
cmp
negl
out
xchg
aaa
clc
push
pop
es
mov
jbe
push
or
inc
or
push
jae
dec
sti
add
jle
dec
shll
out
jno
std
mov
fisttps
jecxz
clc
inc
and
test
fistl
add
aaa
push
popf
imul
imul
insl
sarl
incb
push
pop
dec
bound
icebp
push
mov
mov
test
pop
xor
scas
mov
lret
mov
xchg
addb
push
pop
sub
mov
adc
addr16
mov
bound
shrb
popa
mov
dec
lock
push
popa
push
xchg
push
inc
cmpsl
pop
popf
xlat
xchg
cmp
in
enter
in
and
movsl
dec
adc
mov
push
inc
fiadds
aas
loop
aas
sub
xchg
pop
lret
pop
cmp
push
xor
imul
loopne
fisubrs
xchg
subl
in
jmp
push
mov
aam
std
mov
push
adc
sbb
leave
ds
pop
lods
popa
pusha
cmpb
or
test
push
mov
pop
rcll
sbb
pushl
imul
jl
pop
jo
cltd
xchg
and
mov
xchg
fisttpl
sbb
cmp
ss
xlat
adc
xor
add
pop
jp
aad
lods
imul
pop
cs
imul
mov
fwait
sub
outsb
hlt
add
mov
ret
cmp
adc
sbb
adc
rcr
dec
cmpsb
or
pop
add
sub
int3
into
daa
int
insb
and
pop
xor
cmpsb
js
aas
mov
sub
mov
and
or
in
sahf
repnz
je
ret
mov
ja
lret
adc
add
lahf
jno
out
cmp
movb
sbb
cmp
lret
pushf
pusha
andb
pop
lea
mov
decb
push
xor
sahf
dec
or
in
lock
mov
aas
adc
jne
jae
mov
cmc
or
adc
stc
daa
lret
fbld
xchg
fisttpl
mov
outsb
mov
es
xchg
lods
nop
jl
stos
in
leave
push
inc
pop
aam
sbb
jp
subl
sbb
or
mov
jno
gs
jp
jg
dec
sbb
jno
pop
jl
scas
mov
jge
and
cli
cmpsl
mov
mov
mov
jmp
je
dec
pop
sub
xlat
mov
mov
stos
int
cwtl
leave
in
shrb
mov
or
dec
jns
data16
push
jg
filds
mov
jp
fsts
dec
ljmp
fwait
daa
push
xchg
fwait
std
jle
mov
cli
pop
shlb
xor
adc
test
rcll
int
loopne
xchg
jb
xchg
jecxz
mov
cmpsb
aas
mov
icebp
pop
test
loopne
aas
pop
push
out
andl
jp
xor
add
cs
sub
push
divb
inc
or
dec
into
jno
mov
repnz
loop
inc
pop
lods
push
sbb
pop
inc
into
std
int
lret
push
addr16
or
inc
pop
mov
pushf
cmp
cmp
test
adc
imul
mov
and
testb
out
xor
sahf
mov
cltd
lahf
scas
cmpsb
aam
push
aas
into
cld
adc
idivb
cmpsb
adc
cmp
in
je
test
mov
test
pop
arpl
jecxz
stos
and
xchg
xlat
aaa
movzbl
sbb
jbe
mov
fwait
movsb
ja
out
test
cltd
out
cltd
mov
jle
stos
or
fnsave
mov
inc
ror
enter
jb
iret
xor
int
or
and
mov
and
fs
or
orb
aaa
dec
pop
or
inc
cmp
mov
mov
push
jg
and
xchg
cmp
repnz
lock
mov
fstpl
mov
clc
stos
sub
hlt
andl
leave
jbe
xchg
xchg
test
mov
lea
popf
repz
jp
fnstcw
jecxz
bound
fldcw
mov
mov
inc
fbld
jno
bound
sub
stos
and
mov
inc
hlt
push
arpl
sti
rcll
mov
fistl
adc
and
pop
xchg
cli
es
jno
adcl
dec
inc
xor
xor
xchg
push
xor
notb
pop
push
lods
add
jge
push
cmovnp
mov
mov
andl
leave
in
std
mov
scas
sub
add
imul
aad
lds
out
lcall
cltd
adc
sbb
lret
repz
and
jg
popf
insl
jbe
mov
jno
dec
sub
sar
popf
shrb
jb
sbb
arpl
loop
clc
adc
lock
push
imul
int3
shrb
pop
or
bound
jbe
add
arpl
push
aas
or
push
jp
repz
mov
push
pop
cmp
push
in
mov
iret
and
sub
pop
jge
cmp
arpl
cmp
movsb
pop
addr16
lret
call
movsb
or
insb
addr16
mov
lods
mov
sbb
incl
lea
shl
xor
adc
or
push
or
xlat
push
jl
lea
sub
mov
pop
popl
lds
imul
inc
aaa
cmp
push
iret
popf
loopne
mov
cwtl
cld
jmp
jns
test
push
or
out
mov
jle
scas
push
fdivs
stos
pushf
cmpb
addr16
outsl
add
iret
push
sbb
inc
adcb
and
dec
add
es
push
sbb
sub
insb
push
cltd
lock
and
push
fldcw
mov
mov
in
mov
dec
pop
mov
inc
cli
xchg
cmpsb
mov
nop
loopne
sbb
rcrb
addr16
dec
das
stc
int
and
setb
xor
hlt
fiadds
rcll
add
push
ret
add
dec
iret
sub
xchg
xchg
dec
pop
cmp
mov
les
lret
test
xor
call
or
jmp
in
sub
outsb
cmp
in
xor
jnp
scas
xor
je
rcl
cmp
cmp
cmp
push
pop
sub
mov
push
stc
adc
dec
push
pop
xchg
cmp
mov
adc
nop
push
nop
pushl
cmovne
add
divl
xor
scas
adc
movsb
into
xor
pop
iret
xor
sub
mov
inc
mov
movsl
repnz
xchg
jmp
jae
mov
push
je
xor
xchg
and
add
movsb
inc
adc
add
sub
mov
jl
mov
nop
movsb
clc
popf
test
dec
daa
pop
push
or
push
dec
xchg
add
xchg
pop
pop
push
and
push
inc
sbb
and
insl
movsb
call
add
cmpsb
shr
call
or
mov
xchg
jg
mov
icebp
jg
loope
jge
movsb
adcb
and
bound
daa
loopne
fmull
fsub
xchg
mov
push
stc
es
rolb
shlb
call
fldcw
movsb
outsl
and
jo
shrb
iret
xchg
outsb
mov
outsb
adc
xchg
cmc
loopne
and
and
mov
lret
pop
dec
lret
scas
clc
loope
mov
ret
jge
popf
scas
mov
dec
jmp
add
fwait
jmp
xchg
sbb
vpsraw
sub
inc
mov
jge
js
mov
cs
repz
rcrl
cmp
pop
fnsave
or
pop
out
fwait
xchg
or
cwtl
jecxz,pn
aaa
xor
dec
jmp
push
insb
sub
outsl
xchg
movsb
mov
mov
out
pop
cmp
sbb
sbbb
repz
fs
lea
mov
fildll
pop
repz
js
movsb
cld
lret
cmp
into
dec
and
sbb
cmp
jb
dec
nop
xchg
in
add
out
xchg
mov
pop
adc
aaa
lret
xchg
movsl
cmp
xorl
add
movsb
leave
into
dec
ds
sub
and
stos
rolb
jle
push
fisubl
out
xchg
sbb
arpl
cmp
xchg
sub
subb
mov
xchg
xchg
sbbb
popf
or
enter
das
adc
dec
push
jle
mov
mov
icebp
cwtl
and
roll
fstpl
mov
or
in
repnz
push
out
loopne
imul
ja
movsb
jmp
dec
jne
inc
adc
sbb
mov
mov
and
mov
jnp
mov
les
mov
mov
daa
dec
fs
shrb
loop
pop
addl
adc
add
xchg
lods
pop
add
xor
out
xchg
adc
jle
shll
pop
jo
outsl
pop
sti
sbb
mov
xor
dec
mov
mov
mov
pop
fidivrl
fs
lods
sbbb
mov
fwait
cmp
imul
fistpll
mov
dec
rorl
ljmp
in
aad
sahf
bnd
jmp
loop
imul
addb
mov
jb
mov
mov
pop
daa
lock
leave
mov
sub
mov
mov
subps
sub
sub
xchg
jo
sub
fcom
add
cmpsb
leave
xor
shrl
rcll
popa
jecxz
ljmp
mov
hlt
xchg
outsl
cld
pop
cmp
sub
es
lcall
push
test
jo
xor
mov
cs
hlt
mov
pop
cmp
pop
xchg
cmp
pop
or
xor
xchg
call
pop
lds
popa
mov
mov
jp
orl
and
mov
sti
aad
or
jae
mov
aaa
xchg
imul
jecxz
lods
test
int3
inc
sbb
xor
les
push
inc
or
dec
arpl
or
cmpsb
pushf
inc
call
and
js
into
rcrl
imul
ret
add
cmc
xorb
xchg
test
push
and
inc
fs
loope
xchg
jmp
es
push
insb
ljmp
or
pop
into
sub
out
push
adc
pop
jecxz
push
mov
imul
cmpsl
pop
sbb
pop
iret
dec
js
rcrb
inc
mov
insl
sub
jo
lods
cs
out
hlt
cld
xchg
in
jle
pop
xchg
arpl
cld
imul
push
jecxz
pop
mov
sbb
scas
xchg
arpl
xchg
add
ja
dec
and
pop
dec
inc
add
stos
mov
xor
fnstsw
and
push
inc
jle
int
push
mov
cmpsl
bound
imul
mov
hlt
push
aam
pop
inc
dec
lods
inc
dec
pop
hlt
dec
mov
push
push
mov
clc
enter
cmp
mov
ret
sub
test
cmp
push
aas
inc
fiadds
xchg
sbb
mov
cmp
jnp
pop
into
adc
ljmp
mov
jmp
sub
and
cmpsl
ljmp
mov
clc
lcall
pop
and
mov
sub
push
sub
cmp
es
shrb
out
cmc
mov
cli
xchg
ja
dec
not
fidivrs
aaa
push
jo
insl
fcompl
jmp
mov
adc
xor
in
dec
fidivl
lea
push
mov
and
popf
outsl
test
pop
js
xor
aas
ret
mov
inc
loopne
or
cwtl
xor
ret
push
jmp
or
es
fdivrp
es
xchg
sbb
and
repnz
jecxz
clc
subb
lret
in
xor
mov
loope
aas
sub
ret
sbb
mov
dec
push
pop
push
loopne
dec
cmc
jge
add
call
outsl
in
cwtl
rcrl
add
pop
add
push
jmp
jle
xor
das
jg
std
mov
bound
or
add
dec
insb
sbb
inc
mov
cwtl
pop
imul
pop
mov
insl
mov
jg
idivl
jns
sbb
mov
push
mov
ret
pop
outsl
mov
lods
push
or
jg
push
and
mov
test
test
xor
adc
sahf
insl
xor
ret
xchg
xchg
ja
dec
sub
dec
shl
jecxz
dec
jae
and
pop
lret
jmp
lcall
dec
test
push
jb
or
jl
push
fisubrs
out
cld
push
adc
jns
add
mov
mov
outsl
dec
xchg
fcoml
fisttpll
lods
push
fstpl
fistpl
xchg
fcoml
test
ja
stc
jb
adc
add
es
fs
and
pushf
mov
pushf
or
xchg
lahf
aad
inc
enter
or
mov
lea
mov
imul
add
cltd
lret
mov
outsl
fwait
and
jns
movsb
bswap
push
rcrl
or
jg
pop
mov
test
les
mov
mov
mov
cmc
pop
adc
or
movsb
inc
loopne
push
xor
leave
mov
dec
push
aad
cmp
ds
mov
add
pop
out
inc
pop
or
pop
ss
stc
sbb
inc
xor
fdivrl
icebp
mov
cmp
and
xor
aam
lahf
mov
sbb
out
in
popf
xchg
scas
call
fstl
or
cwtl
aam
sub
adc
push
dec
and
jecxz
mov
xor
jns
inc
dec
sbb
outsb
cltd
add
cwtl
push
setae
popf
mov
xor
xchg
test
jo
frstpm(287
out
sub
pop
push
negb
ds
pop
jo
and
pop
je
loopne
faddp
pop
push
dec
mov
xchg
sbb
fsubrl
push
or
stc
int
cwtl
repnz
xlat
ss
lods
xlat
add
lahf
mov
mov
ficoms
out
pushf
test
jp
test
jecxz
js
sub
adc
pop
push
inc
js
mov
and
cmpsb
out
dec
pushf
hlt
sti
clc
pusha
xor
nop
add
aas
xchg
cs
pop
push
xchg
imul
movsl
mov
shl
sahf
xor
in
fcomi
xchg
lret
jl
jnp
sub
or
xchg
dec
jae
pushw
fcmovu
mov
arpl
mov
mov
and
cmpsb
lret
shll
inc
scas
movsb
scas
scas
xlat
mov
add
ror
in
sub
xor
or
stos
out
sarl
mov
add
call
stc
cmp
xchg
push
leave
sti
ljmp
aad
movsl
fwait
and
setb
xor
std
scas
popa
pop
ret
movsb
jle
inc
cmc
push
jbe
pop
rcl
mov
sbbl
loope
scas
iret
push
jp
sahf
movsb
adc
popa
mov
es
ljmp
adc
test
fs
loopne
xchg
daa
push
lret
mov
sti
into
add
mov
das
pop
fs
adc
test
push
adc
ja
xchg
loop
xchg
repz
jp
pop
in
mov
xchg
xchg
adc
fistl
xchg
in
lods
cmp
fmulp
lcall
pop
sbb
sbb
push
sbb
icebp
outsb
cmp
repz
xor
jle
addr16
ja
int
push
sbb
lea
jecxz
imul
in
xor
fdiv
push
popf
jb
fbstp
and
mov
push
sbb
scas
or
adc
pop
imul
out
dec
xor
fistpl
lock
shl
xchg
pop
loop
cmpsl
inc
and
pop
dec
lods
lret
sub
jno
dec
and
insb
mov
mov
fcomip
int
sbb
orb
cmp
mov
push
mov
daa
pop
insl
dec
les
movsl
xchg
sub
enter
jb
fcmovnu
dec
dec
push
into
js
daa
mov
push
cli
pusha
pop
fists
loope
mov
xor
enter
ja
pop
dec
aad
mov
mov
fiaddl
adc
mov
pop
lret
jg
add
inc
add
fucomp
aam
inc
cli
test
repz
adc
scas
xor
fsubrp
mov
pop
faddl
push
jl
xchg
outsb
or
das
push
insb
pop
sub
pop
mov
pop
sub
out
xor
xor
adcl
jp
or
ret
fs
lods
inc
push
fs
adc
sarl
movsb
insb
es
sub
mov
mov
das
stos
adc
xchg
xchg
push
pop
lcall
movsb
inc
sub
pop
inc
dec
pop
loope
cmp
jmp
xor
xlat
and
mov
bound
hlt
and
adc
pop
pop
sbb
fidivs
adc
inc
xchg
pop
jle
push
pop
ret
arpl
mov
jno
data16
push
adc
mov
aas
cmpsb
int3
fstl
push
adcl
fsts
aad
sbb
lret
mov
sti
decl
jb
mov
xchg
sbb
fwait
movsl
add
ljmp
movsb
in
pop
xchg
dec
fcompl
scas
insb
out
xlat
pop
insl
and
add
sahf
mov
mov
rorb
shlb
xor
imul
adc
imul
dec
mov
mov
sub
mov
xlat
lcall
adc
loope
mov
and
shl
add
incb
lahf
add
jl
cwtl
das
cli
push
stc
loope
mov
fwait
xchg
sbb
pushw
fdivrl
dec
dec
inc
ret
sahf
or
adc
cmpsb
negl
das
loopne
lods
mov
dec
fmuls
outsb
int
push
shrb
test
pop
into
outsb
nop
jnp
test
iret
xchg
mov
nop
movsb
xchg
cli
jns
pop
cmp
xlat
sub
mov
repz
fimull
push
mov
loop
pop
push
inc
sbb
add
fwait
insl
notl
movlps
mov
mov
fldl
inc
mov
scas
push
movsl
in
push
and
pop
orl
push
or
mov
div
xor
lods
xchg
lahf
mov
imul
mov
mov
inc
loopne
repz
arpl
adc
mov
ds
test
cmpsl
dec
jecxz
movsb
pop
shl
cltd
iret
je
lret
in
ds
jge
mov
jge
cmp
mov
pop
inc
ret
pushf
inc
outsb
adc
cmp
aam
mov
mov
incl
inc
ficoml
insl
cli
inc
pop
lcall
test
into
or
cmc
ret
push
stos
jns
gs
or
outsl
adc
in
daa
xchg
repnz
loopne
push
and
push
xchg
stc
and
pusha
sbb
fwait
ss
cmc
loopne
sub
psubusb
test
sub
jb
fstps
int
push
xorl
out
in
out
aam
lahf
daa
mov
std
fiadds
inc
mov
icebp
mov
popf
gs
cmp
fmul
xor
dec
and
shlb
push
xchg
sbb
xor
or
dec
pusha
add
xchg
mov
add
leave
movsb
pop
pop
pop
pop
jns
or
stc
sub
fsts
xchg
push
outsl
mov
xchg
out
aad
sarl
jbe
loopne
jle
movsb
fadds
scas
cli
pop
clc
xchg
xor
cmp
pop
mov
sahf
cltd
mov
out
sbbb
or
adc
cltd
test
push
mov
fmulp
xor
mov
pop
stc
xchg
mov
pop
mov
sbb
mov
repz
in
adcl
cmpsb
outsl
daa
cmp
daa
cmc
mov
jg
jle
dec
inc
dec
sbb
or
push
mov
xchg
ror
push
add
repnz
jge
add
and
out
inc
dec
mov
and
adc
icebp
ret
lret
jmp
xchg
dec
jns
inc
xchg
inc
ss
pushf
mov
clc
and
inc
fdivrp
dec
and
dec
push
jp
and
jle
jg
add
stc
daa
xor
dec
stos
movsl
inc
cmp
bound
pop
mov
cmp
mov
sub
adc
popf
ds
mov
aad
push
call
mov
stos
sbbb
sbb
push
rclb
out
dec
mov
outsl
push
pop
sti
push
sub
imul
and
cmc
fnstenv
sti
orb
push
jae
rep
xchg
ret
movsb
fldt
rorl
stc
fdivs
pop
mov
xor
or
xchg
call
pop
mov
xchg
test
push
ljmp
fwait
xor
int
add
repz
jp
nop
lahf
sub
jge
push
jmp
pop
fisubrl
daa
jecxz
xor
imul
pusha
movsl
lds
mov
pop
pop
push
jne
ror
out
in
imul
push
pop
xchg
sahf
jmp
cmp
mov
jbe
push
xor
mulb
test
test
test
daa
push
mov
pop
mov
and
or
sahf
popf
mov
mov
xchg
fdivl
dec
xorl
fisttpll
jb
add
or
mov
cs
scas
popf
dec
sarl
ja
sub
pushw
je
jg
jnp
mov
adc
cmp
push
add
lods
lea
fstpt
mov
sbb
dec
xchg
popa
xor
push
dec
add
insb
push
fldt
jl
ja
stos
ljmp
pop
insl
dec
and
stc
xor
sbb
lds
movsl
addr16
mov
outsl
pop
xchg
xor
mov
addr16
fwait
imul
cmp
xchg
ja
fistpll
cmpsl
xchg
testl
mov
push
movsb
mov
aad
jo
aas
cs
lret
mov
dec
outsl
cmpsl
xchg
pop
and
sub
mov
repz
mov
pop
xlat
pop
aas
jb
repnz
xor
pop
scas
or
popf
inc
hlt
jge
push
push
or
cmp
es
xchg
dec
mov
lret
pop
stc
ret
inc
xor
in
stos
aam
ja
je
jg
adc
xchg
sbb
xor
fldenv
xchg
push
div
jb
inc
sti
or
sub
sahf
popa
sub
pop
outsl
sbb
push
inc
pop
movsb
xchg
sub
cltd
pop
enterw
pop
fsubrs
push
into
inc
adcb
inc
add
lahf
adc
stos
popf
ret
dec
sub
std
pop
inc
dec
dec
test
sti
test
jo
sbbb
mull
or
nop
imul
mov
scas
mov
push
sub
shr
pop
mov
je
rorl
out
adc
or
add
lahf
xchg
scas
jmp
lret
lods
mov
loope
xchg
mov
mov
stos
hlt
popf
inc
stos
jae
push
call
push
sub
lret
push
arpl
cmpl
mov
outsl
aaa
jge
in
mov
js
in
inc
push
push
cs
lea
testb
mov
mov
ficomps
ret
pop
cwtl
pusha
fwait
dec
xchg
test
push
jp
cmp
mov
pop
insb
outsl
xor
or
out
push
inc
leave
xor
cwtl
xor
mull
fisubs
xchg
enter
push
into
stc
lods
shl
out
sbbl
aaa
jo
aam
insl
negb
bound
lods
int3
mov
mov
cld
pop
mov
std
in
jg
lcall
fneni(8087
out
retw
or
and
sbb
arpl
dec
pop
lock
mov
call
fiadds
xchg
xorl
dec
mov
imul
mov
add
fistpl
xlat
in
mov
xor
hlt
sub
adc
or
popa
xor
add
push
lds
std
mov
cmpsb
adc
xchg
ficoms
inc
push
mov
or
jnp
sbb
sub
cs
je
sti
add
fs
repnz
ret
mov
mov
shll
lods
mov
hlt
imul
stos
in
cmc
push
xchg
sub
jb
cmp
xor
arpl
fadd
ljmp
aad
popf
mov
and
add
add
ds
push
or
out
xor
ret
cwtl
xorb
aas
aaa
adc
mov
push
cmpb
mov
and
enter
dec
int3
xlat
jmp
subl
mov
in
sub
add
push
xchg
jp
mov
in
pop
rorb
in
dec
movsb
fdivs
add
ljmp
mov
iret
and
dec
lock
stos
mov
inc
addr16
add
xchg
and
mov
pop
shr
sub
lret
and
push
xchg
mov
pusha
outsl
xor
and
fwait
mov
xchg
nop
inc
lret
ds
ss
in
mov
add
sti
call
out
arpl
sbb
bound
pop
push
mov
arpl
sbb
xor
adc
cmp
rolb
fsubrl
aaa
mov
mov
ss
add
call
xor
aas
sbb
cld
mov
sub
frstor
jge
push
cld
inc
inc
sub
adc
jge
cmc
bndldx
cmp
in
outsb
dec
add
ret
lods
and
mov
cmpsb
sub
or
xor
roll
mov
mov
sub
stos
into
and
push
jge
and
int3
inc
loope
lea
in
sub
adcb
sti
jmp
add
das
idivb
movsl
xchg
adc
push
rcrl
push
aaa
dec
fisubs
data16
test
int
cmpsl
mov
insl
cltd
dec
xchg
frstor
adc
push
cltd
xor
xor
mov
and
cmpl
or
repnz
int3
loop
in
lret
cmp
dec
rorb
cmp
xlat
add
leave
out
jno
outsb
mov
out
int
push
inc
jbe
push
sbb
pop
gs
fisttpll
jb,pn
clc
arpl
out
add
lods
fildl
addr16
dec
lods
push
cmp
jp
icebp
fwait
sub
sahf
iret
lea
outsl
jg
lahf
jns
enter
pusha
and
and
repz
jb
int3
mov
jns
out
xchg
xlat
imul
and
mov
jbe
adc
int
dec
jle
xchg
xlat
push
push
push
xchg
adc
repnz
inc
jg
lcall
cmpsb
inc
xor
shrb
aad
cmp
fldt
mov
cmp
or
sub
leave
pop
sbb
or
mov
jae
mov
lods
lods
sub
and
pop
push
cmp
stc
and
xchg
adc
xchg
aam
int3
into
jge
and
fsts
int
add
leave
lods
cmpsb
into
mov
cltd
js
das
setb
lods
mov
pop
adcl
flds
dec
or
in
hlt
in
sbb
or
in
lea
dec
push
out
fwait
lret
or
sti
leave
clc
hlt
mov
cltd
mov
test
outsb
adc
xchg
jnp
xchg
dec
jb
mov
mov
pop
sub
adc
lea
xchg
aad
and
fldl2e
add
js
bound
into
out
mov
int3
push
jmp
sbb
lahf
cmp
lcall
mov
sub
iret
mov
adc
lock
jae
lcall
pushf
cmc
cs
lods
mov
adc
shlb
mov
js
movsl
out
dec
and
add
sbb
or
push
push
xchg
pop
xor
jb
pop
mov
dec
xor
add
or
add
pop
pop
ret
xchg
dec
xor
jp
aam
jb
pop
add
cmpsb
xor
test
int3
test
add
mov
xor
adc
jbe
or
xor
dec
int
jmp
mov
sarb
cld
or
inc
sub
pop
out
push
xor
sub
push
xchg
sbb
icebp
mov
rcll
loope
inc
dec
add
jg
mov
or
jns
addb
int
popf
xor
jle
aad
push
push
in
mov
fucomip
test
inc
or
push
or
jnp
push
adc
push
decb
mov
gs
xor
in
ljmp
xor
orb
cmp
mov
int3
push
jmp
je
pop
fdivs
push
pop
ss
inc
xchg
lock
cmp
push
and
jle
cmp
push
dec
test
add
mov
int3
movl
stos
xchg
mov
fcompl
jnp
push
out
push
sub
pop
rcrl
cmp
jo
int
fcmovnb
rorb
aaa
add
gs
mov
dec
xchg
sbb
jecxz
scas
inc
mov
insl
dec
mov
lods
sub
addr16
add
dec
fnstenv
ret
inc
rorb
lret
jle
inc
sub
inc
mov
jmp
out
mov
xchg
cmp
dec
ret
out
adc
scas
adc
pop
jbe
aas
movl
lret
mov
mov
pop
sbb
pop
loopne
adc
inc
in
jmp
ds
leave
loopne
in
repnz
mov
sub
cmp
mov
or
sub
aas
repz
stos
cs
shll
lahf
jnp
inc
xor
mov
xchg
lock
dec
stc
mov
dec
ds
mov
mov
out
mov
mov
repz
out
or
mov
rcll
jae
pop
bound
pop
xor
jle
popa
je
repnz
in
sti
fcoml
repnz
test
push
push
cli
out
icebp
clc
jg
popf
cmp
daa
lds
mov
pop
xor
and
movsl
cmpsb
lds
enter
test
jle
ja
pop
insb
sbbl
xchg
or
rcl
push
sub
mov
repnz
dec
cltd
cwtl
cmp
add
sbb
aam
add
xor
stc
and
outsl
mov
lods
in
jnp
aad
imul
jb
movsb
int
stos
lea
dec
dec
adc
daa
movsl
inc
shr
pop
addr16
sahf
xlat
je
xor
sub
neg
ret
sbb
push
pop
xor
cwtl
xor
mov
lret
outsl
push
lahf
sahf
addr16
xchg
outsl
sub
mov
imul
cwtl
mov
xor
shl
jbe
lock
stos
loope
clc
jmp
push
orl
test
jb
sarl
movsb
fisttps
mov
test
pop
mov
outsl
popf
stos
outsl
orb
push
sbb
jg
fsub
sub
jmp
pop
lahf
or
pop
stc
mov
pop
test
and
sbb
adc
or
scas
xor
and
fwait
out
add
rolb
cli
enter
sub
dec
mov
loopne
jle
inc
pop
inc
sahf
mov
rcrl
xor
lret
dec
pop
adc
or
cmp
jp
sbb
xchg
add
outsl
jl
and
jo
fisttps
cld
sub
push
in
call
sbb
add
in
loope
dec
popa
shlb
inc
fidivl
mov
xor
xor
das
inc
push
adc
pop
xchg
push
jo
ret
push
inc
dec
push
jecxz
ja
fisubs
daa
in
sub
add
xchg
lret
lahf
mov
stc
add
mov
xchg
push
nop
inc
xlat
cmp
lods
das
ret
popa
xchg
in
pop
cmp
add
jae
es
aad
gs
fstp
sub
cmpsb
test
cmpb
add
push
into
jecxz
mov
fiadds
adc
jb
or
scas
xor
ret
jbe
imul
dec
dec
hlt
mov
inc
cs
sarb
pop
xor
insl
push
cli
inc
cld
fstl
mov
sub
push
xor
jge
in
jmp
dec
push
adc
aam
cmp
sbb
sbb
negb
mov
cmp
jno
loop
cmc
xor
mov
mov
xor
inc
mov
pushf
test
imul
ret
pop
jne
jne
jb
scas
call
scas
adc
lock
jl
lcall
dec
loopne
icebp
xchg
jle
stos
sbb
xchg
sub
in
push
mov
in
outsl
mov
or
or
xor
hlt
adc
shrb
je
push
push
lods
outsb
lods
pop
jbe
mov
mov
test
cmc
jnp
int
int
testb
aaa
fwait
lcall
sbb
or
mov
leave
pop
jno
sub
jle
test
xlat
xlat
insb
cmp
aam
mov
dec
cli
and
bnd
rcrl
arpl
ret
lock
cmp
cld
dec
fldt
xor
das
daa
push
int
pop
hlt
data16
mov
pop
fucomp
or
fldcw
jmp
and
dec
int
cs
call
jge
cmp
pop
movsl
fldt
mov
sbb
movsb
xlat
enter
sbb
rcr
scas
enter
lretw
push
push
dec
inc
cmp
jle
add
ficomps
call
out
in
and
cmpsb
jge
mov
push
fistps
inc
scas
dec
adc
fcompl
jecxz
fnstenv
pop
push
pusha
lret
sbb
cmp
or
pop
in
xor
push
xchg
mov
xchg
ss
popa
xchg
and
or
jbe
sbb
cmp
mov
mov
mov
lret
adc
cmp
inc
scas
adc
adc
movsb
sub
xchg
dec
add
mov
cwtl
cmpsb
pop
popl
jb
sbb
lock
out
push
loopne
and
pop
fistl
xchg
in
enter
and
test
in
ja
fldl
rcll
lods
jnp
and
push
dec
jae
jae
lods
sbb
hlt
cli
aas
cmp
mov
cwtl
jmp
sub
dec
gs
pop
sub
bnd
adc
push
add
jmp
cltd
enter
xor
fcompl
mov
pop
mov
mov
call
pop
mov
mov
cwtl
ret
leave
ljmp
lahf
loop
inc
jae
cmc
enter
mov
pusha
repz
cmpsb
stos
imul
push
shll
dec
imul
mov
mov
js
cmp
mov
cwtl
lret
sub
add
stos
adc
mov
push
lock
es
xor
adc
pop
sti
dec
mov
loop
outsl
add
sti
pop
add
fsubrs
in
push
add
mov
stc
test
mov
inc
and
jo
xchg
stos
stc
dec
jmp
xchg
add
loope
inc
or
in
mov
cmc
das
jne
or
bnd
add
cwtl
imul
arpl
aam
xchg
mov
pop
fsubs
and
xor
push
jae
in
jmp
and
aaa
push
shlb
mov
loop
xchg
mov
cmp
inc
sti
out
aad
xor
aas
or
or
sahf
ja
daa
dec
cltd
int3
sub
mov
scas
cs
jmp
pop
and
mov
decb
dec
add
jecxz
xchg
jge
xor
cmp
inc
cmp
int
nop
inc
fldenv
mov
inc
ds
pop
call
inc
lods
test
xor
test
dec
orb
mov
mov
cs
jecxz
sub
xchg
into
jnp
mov
jne
push
add
push
imul
jle
jb
push
mov
push
pop
cmpsl
lock
jmp
movsl
dec
std
jmp
ljmp
mov
ficoms
jbe
pop
cmp
mov
add
dec
mov
sub
lret
packssdw
movsl
xchg
mov
dec
xor
cmpsl
dec
xchg
leave
push
loopne
cli
ja
lahf
cmp
loop
dec
insb
into
xchg
fists
xchg
ja
adc
ja
ds
xor
cwtl
xor
mov
add
orb
mulb
jp
fistl
mov
int
test
mov
gs
mov
add
call
sub
stc
iret
aas
icebp
or
pop
in
out
cmpsl
adc
dec
xchg
loopne
pop
jnp
push
test
push
add
pop
lahf
dec
fildl
pop
push
ds
aad
out
xchg
sub
fs
arpl
insl
outsl
adc
call
and
jns
das
xchg
add
mov
push
push
jge
or
xor
aaa
ja
testl
inc
hlt
and
les
sbb
sbb
insl
and
mov
arpl
and
out
je
push
stos
mov
rclb
pop
cmp
mov
cmp
insl
mov
inc
rol
lret
dec
xchg
jnp
addr16
push
jno
sbb
inc
jno
aaa
dec
shrl
and
fisubl
aam
and
push
add
xchg
fbld
je
inc
ficoms
mov
arpl
mov
adc
sar
in
shl
dec
jae
int3
test
call
sbb
addl
inc
cltd
cs
add
xchg
scas
pop
xchg
sbb
cmpsl
sub
mov
jle
push
in
addl
mov
mov
inc
or
and
fldenv
dec
lcall
nop
push
out
jne
xor
popf
adc
jge
jg
mov
xchg
loop
xor
inc
je
out
cmp
aas
mov
loope
fcoms
cmp
cwtl
shrb
aas
mov
mov
out
cs
jmp
or
sub
test
dec
jnp
mov
fdivrl
rolb
fists
cmp
test
mov
int
lahf
mov
push
icebp
sub
movsl
pop
pop
inc
pop
push
popf
sbb
xchg
jns
xchg
lret
xor
arpl
xchg
test
scas
pop
popf
cmpsb
dec
lea
pop
insb
cmp
outsb
mov
mov
test
lods
hlt
scas
ds
jg
js
or
in
pop
adc
push
mov
and
test
ds
lret
insb
int3
roll
xor
mov
mov
icebp
mov
mov
sub
imull
mov
insl
xor
stos
mov
sbb
xchg
inc
fs
loope
mov
fistps
adc
jo
in
or
cwtl
je
jmp
sbb
xchg
dec
lea
xor
in
lahf
xor
inc
xchg
pop
sbb
scas
addr16
fstps
dec
jnp
cmp
jae
push
insl
cmp
test
push
jge
mov
xchg
pop
adc
mov
in
push
add
sahf
insl
ljmp
xor
icebp
int3
loope
add
xor
mov
jmp
and
adcb
dec
stos
push
icebp
addb
add
inc
mov
sti
jge
sub
out
pop
cwtl
jno
cld
jecxz
inc
dec
pop
sub
xchg
sahf
xor
adc
jmp
in
in
jl
mov
push
insl
cltd
add
mov
test
orb
and
jne
test
and
ds
fnstcw
adc
shlb
xchg
mov
cmp
fldt
mov
sub
fimull
mov
cmp
jae
in
nop
movsl
mov
shl
push
das
sbb
cli
aad
jl
dec
out
enter
scas
in
cmp
pop
call
mov
mov
ret
rcl
add
fwait
cmp
aas
adc
imul
sbb
push
push
mov
loope
xor
cmp
and
adc
lods
pop
xlat
mov
fnsave
lret
push
clc
rol
std
push
add
inc
jmp
aas
stos
fidivs
sub
inc
mov
sbb
call
pop
cmpsb
fwait
stos
pop
and
add
xchg
pop
jl
mov
pop
movsb
add
mov
pop
cmp
stos
lock
cmp
inc
dec
mov
cmp
xlat
mov
scas
mov
les
add
mov
sarb
push
movsl
and
movhps
imul
jle
jge
lock
mov
gs
xor
push
xchg
sbb
xchg
cld
lahf
mov
movsb
inc
insb
mov
push
test
inc
push
loopne
and
bound
mov
cmp
jp
repnz
test
cld
dec
inc
and
jo
test
in
pop
mov
les
flds
loope
push
popa
out
jecxz
jae
or
jb
pop
cs
rol
cmp
jbe
xchg
cs
pop
arpl
inc
andl
dec
vmovss
loop
lods
cli
outsb
out
dec
lret
mov
pop
test
shlb
cmpsl
push
mov
in
fisttps
mov
orb
pop
test
popa
push
cwtl
cmp
xchg
push
sbb
or
cld
cld
in
adc
das
inc
sahf
fs
es
ljmp
or
fidivrl
jg
idivl
mov
mov
popf
pop
cmp
stos
push
rcl
sub
add
lea
adc
orl
and
popf
lods
fidivs
lahf
int
and
test
cltd
jecxz
jae
push
imull
outsl
clc
sub
xor
push
push
xor
aam
insb
cmp
cld
cmp
add
or
int
repz
int
pop
scas
push
cwtl
or
xchg
add
outsl
mov
aad
adc
xor
fst
js
pop
pop
pushf
loopne
je
cli
mov
pop
add
scas
jge
mov
xchg
mov
repnz
mov
ret
mov
stc
xchg
xchg
in
scas
sbb
aas
pop
dec
fidivrl
outsl
xchg
push
incb
inc
cmp
incb
shl
insl
sub
cmp
fstps
jae
push
xchg
push
xchg
call
fldl
push
repnz
and
push
or
sub
mov
addr16
mov
adc
push
repz
jns
pop
ja
enter
lcall
in
in
or
stos
pop
repnz
xlat
and
pop
shrb
xchg
mov
dec
jle
cmc
loopne
sub
cmp
push
mov
pop
push
in
scas
mov
outsb
sahf
testl
stc
mov
insl
or
sub
ret
dec
pop
push
dec
xchg
mov
movsb
fisttpll
pop
add
roll
aad
mov
cwtl
adc
mov
cmc
mov
imul
test
bound
jno
test
push
xchg
sub
adc
pushf
push
bound
pop
add
lods
cwtl
pop
mov
gs
lcall
pushf
inc
push
inc
sbbl
loope
cmpsl
insb
fcompl
sahf
or
mov
lcall
cmp
sbb
out
fimuls
push
cmpsl
push
xor
icebp
add
and
mov
imul
arpl
outsl
stos
adc
jnp
cmp
pop
and
sbb
aam
or
mov
outsb
or
inc
aas
movb
hlt
inc
mov
or
mov
adc
leave
mov
pushf
test
rcrb
pusha
add
xor
pop
jbe
add
push
cmp
leave
in
pop
sbb
xlat
ficompl
dec
pop
jnp
call
xchg
nop
test
cltd
jge
ror
cmp
nop
lds
mulb
xor
lahf
nop
mov
notb
and
cltd
aad
rorb
jge
fadds
jns
sar
mov
pop
aas
xchg
mov
xchg
mov
jge
test
jo
out
out
ret
dec
test
push
pop
push
lret
loop
jp
data16
xchg
add
push
enter
cli
mov
ret
aam
dec
stos
sbb
popa
and
int3
shlb
and
push
lds
in
push
lods
addr16
push
pop
iret
sub
jl
pop
sbb
mov
pop
jmp
adc
fidivrs
inc
rcrl
mov
test
jg
fs
push
fldl
mov
enter
imul
add
inc
sbb
popa
repnz
pushf
pop
pushf
and
pop
dec
lret
scas
hlt
test
sbb
pop
cld
loope
mov
enter
dec
orl
div
jg
bound
sub
addb
cmp
sbb
movsb
jp
ljmp
cli
adc
inc
sub
jb
arpl
lahf
pusha
mov
pop
scas
nop
cwtl
cmp
xchg
out
aaa
pushf
cmp
inc
nop
dec
lods
mov
loop
jbe
mov
and
int3
mov
sub
inc
mov
ret
push
pop
ds
inc
jle
mov
repnz
pushf
imul
mov
push
dec
cwtl
fsubrs
pop
inc
shll
adc
mov
or
adc
xchg
dec
aaa
lods
neg
gs
add
pop
mov
pushf
lea
add
hlt
lret
rcrb
stos
popa
xor
test
mov
adc
loopne
jle
xchg
jmp
js
push
cwtl
xor
test
push
shlb
jmp
mov
and
cmp
mov
lods
xor
and
cwtl
sahf
sbb
pop
test
jmp
sbb
ret
js
adc
mov
daa
inc
inc
js
pop
pop
mov
call
push
aaa
addr16
and
mov
pop
mov
insb
mov
pop
repz
and
out
scas
or
sub
sbb
mov
orb
gs
add
rcll
mov
loop
leave
ret
push
mov
lods
jmp
bound
push
ljmp
mov
insb
out
jp
dec
cmpl
dec
pop
into
and
mov
pop
lcall
jl
insl
pop
and
pushf
adc
outsb
pop
scas
cld
push
lods
test
mov
lcall
push
xchg
cmp
xchg
adc
or
push
stos
mov
int
test
incb
push
inc
or
lds
mov
xchg
inc
push
or
add
enter
inc
test
and
and
push
push
mov
push
cmp
mov
fwait
push
popa
iret
push
lret
push
and
pop
fmulp
cmpsb
das
pop
cmp
mov
cmp
mov
lret
shl
sub
or
dec
inc
add
test
inc
sbb
mov
insb
adc
lret
loop
mov
cltd
and
and
sahf
push
sti
jb
pushf
mov
int3
out
in
testl
in
jb
out
gs
cmp
push
sub
add
lret
sbb
push
jns
xchg
addr16
mov
add
in
mov
inc
insl
jb
add
mov
xchg
lret
test
cld
enter
mov
movb
sub
cmp
ret
adc
pushf
movsl
les
pop
mov
enter
mov
ret
daa
fnstenv
xorb
xchg
and
hlt
push
in
sahf
movsb
xor
outsb
or
adc
jo
pop
ljmp
jnp
cmp
jae
popa
xchg
test
out
rcl
cli
pop
inc
xor
daa
sbb
xchg
adc
mov
xchg
stc
iret
xchg
and
aas
cltd
inc
sub
dec
dec
mov
rcrb
pop
shlb
dec
xlat
push
push
xor
push
and
mov
out
std
add
xchg
scas
out
cmc
aaa
xchg
daa
fmull
sbb
ss
rcrb
sti
xor
push
mov
ljmp
push
mov
jg
jns
add
sub
sahf
nop
xor
gs
and
inc
jmp
xchg
xor
fistpll
rcll
sarb
in
push
repnz
lahf
cmp
fucomip
andl
rsqrtps
jp
call
iret
jl
jecxz
xchg
pop
and
test
into
stos
rcr
ret
lds
out
movsl
insl
mov
add
jecxz
in
std
mov
mov
fs
ja
fnsave
sbb
fbstp
xchg
xchg
es
xchg
fwait
pop
and
add
idivb
in
pop
mov
adc
outsl
jl
test
mov
push
out
out
fwait
inc
jmp
push
sub
cmp
stos
addr16
push
mov
mov
fnstenv
xor
ret
push
dec
sub
push
mov
push
mov
je
push
mov
add
dec
add
std
test
sbb
imul
int
push
mov
pop
in
mov
and
or
xor
lods
mov
cmpsb
jmp
pop
pop
jnp
mov
pop
mov
push
dec
xchg
sbb
add
mov
push
dec
jbe
dec
mov
pusha
mulb
push
xorl
push
dec
pop
clc
mov
nop
stos
or
and
mov
cmpsl
pop
mov
aad
mov
fsubrl
lret
push
xor
xor
loope
push
std
cmp
adc
in
pop
std
sar
mov
inc
mov
dec
mov
jmp
mov
mov
adcl
nop
out
nop
jb
rcl
jmp
jo
ret
sub
cltd
push
dec
inc
lods
push
ss
xchg
push
sti
xchg
xor
jae
mov
notb
movsl
xchg
mov
pop
mov
mov
ss
out
lds
out
clc
lcall
test
lret
xor
pop
fimuls
testl
add
lea
dec
scas
mov
scas
mov
inc
and
xchg
pop
push
jmp
ja
mov
inc
out
mov
jecxz
cmp
ficoml
in
leave
lret
jb
inc
cltd
add
cli
mov
and
cmp
flds
shl
fcomi
fs
xor
push
xor
sub
test
mov
mov
mov
jns
icebp
cltd
sbbb
lds
mov
lcall
mov
xor
or
xor
in
cmp
cmp
adc
dec
jmp
aaa
dec
push
sub
stc
movsb
gs
and
aad
ja
scas
std
scas
es
and
mov
ror
cmovge
ja
fnsave
pop
test
pop
dec
jae
push
and
mov
pop
cmp
push
mov
and
xchg
shr
inc
sub
jb
jecxz
fidivl
jg
inc
in
in
and
test
int
fisubl
in
fcom
repz
js
pushf
aaa
pop
inc
pop
or
es
or
xchg
xlat
sbb
or
fstpl
push
sub
in
enter
daa
in
fisttpll
cltd
sahf
dec
bound
ret
fdivrl
orl
hlt
daa
xchg
lcall
ror
mov
pop
lock
cmpsl
lret
outsb
mov
mov
mov
ja
sbb
xor
sub
inc
add
outsl
cmpsl
mulb
jmp
mov
and
pop
cmpsl
adc
fiaddl
insl
push
pop
inc
mov
flds
mov
mov
ds
lret
aam
xchg
jne
pushf
add
push
adc
cmpl
and
xchg
sarl
out
xor
fs
dec
xchg
pop
push
and
dec
jp
loopne
test
mov
xor
push
push
cmp
ss
mov
dec
je
jae
inc
out
icebp
jl
mov
sub
roll
call
mov
jnp
add
imul
rcrl
push
adc
sub
stos
inc
fdivrl
ret
or
cmp
mov
in
aas
clc
or
dec
fisubs
jo
stos
jo
cmpsb
call
push
inc
ljmp
jnp
xor
cli
cltd
push
xchg
mov
clc
sbb
aaa
daa
call
pop
repnz
lret
je
in
pushf
movsb
lock
push
sbbb
sub
and
repz
sbb
lcall
lcall
add
xchg
jno
imul
scas
test
cmpsl
adc
push
sbb
repz
hlt
xchg
push
or
xor
inc
stc
lcall
xchg
faddl
inc
fdivrp
repnz
cmp
jmp
dec
mov
imul
lock
adc
pop
inc
loopne
js
xchg
add
inc
xchg
scas
fisttpll
stos
fs
xchg
js
sti
sti
in
mov
inc
cltd
push
jne
sbb
fcompl
xor
test
adc
movsl
leave
dec
xchg
loopne
rol
jmp
call
adcb
xchg
out
inc
xchg
loopne
adc
inc
lret
adc
adc
ret
fmul
fnsave
mov
cmpsl
nop
lds
mov
sbb
das
out
mov
sub
test
cmp
or
add
hlt
insb
test
add
mov
add
xchg
ss
jnp
xchg
jp
std
pop
add
xchg
pop
popa
xor
pushf
aam
add
imul
xchg
xchg
das
aam
sub
test
test
shl
lea
sub
jae
lods
cmpsl
test
jnp
scas
jmp
test
jnp
xchg
repz
orl
movsb
sub
sbb
cmpsb
and
pop
pop
je
dec
ret
andl
cwtl
or
div
and
add
enter
js
push
or
xor
int
enter
lods
push
mov
jmp
cli
add
push
rorb
leave
aaa
xchg
jg
jb
lcall
push
xlat
scas
xor
mov
aad
jge
je
mov
movsb
and
inc
into
loopne
popa
dec
fiaddl
cwtl
lock
cmp
and
sbb
ret
mov
cmp
and
lret
jmp
pop
pop
mov
jge
es
shlb
mov
dec
js
mov
cltd
sub
cs
lret
outsl
pop
xchg
inc
loop
jns
xor
ljmp
in
mov
mov
out
pop
fwait
and
lods
mov
or
cwtl
fists
push
icebp
dec
mov
jmp
lods
sbb
jl
adc
popa
ror
data16
stc
mov
fwait
stc
dec
cmpsl
je
or
outsl
aam
popa
inc
aad
rorl
mov
sbb
test
xchg
fwait
iret
xor
push
or
xor
test
rorb
jnp
mov
dec
ja
mov
js
mov
add
enter
js
or
sub
stc
mov
cmp
jecxz
out
inc
mov
or
push
outsb
xchg
or
pop
xor
rclb
mov
loope
rclb
xor
les
mov
ds
scas
inc
pop
test
push
mov
int3
mov
fidivrl
sub
enter
sub
push
loop
dec
or
scas
and
xchg
and
lds
aad
enter
stos
jg
sbb
lock
pop
repnz
pusha
cmp
sbb
or
mov
pop
lock
add
and
jns
xchg
adc
pushf
xchg
push
data16
ds
or
push
ret
inc
int3
and
shll
rcr
cli
ds
hlt
cli
and
or
scas
lods
orl
mov
popa
dec
jl
cmpsb
scas
mov
add
jp
dec
cmp
dec
cmpsl
pushf
inc
sbb
dec
adc
or
into
pop
in
mov
lcall
test
xchg
pop
mov
xor
or
test
jp
add
adc
out
xor
das
leave
and
lret
leave
add
jbe
mov
xor
data16
mov
push
xchg
pop
fisttpll
bound
daa
mov
mov
fwait
jno
or
xchg
insl
out
lods
loope
movsb
jmp
aaa
out
push
ss
ljmp
push
adc
adc
call
jl
movb
add
iret
adc
or
lret
sub
lahf
cs
mov
mov
scas
xchg
xor
mov
adc
and
mov
sbb
cld
lds
xor
mov
insl
loop
fistps
cmp
ret
loope
push
sbb
bound
rep
mov
pop
and
sub
jp
mov
cmp
fs
sbb
jno
add
arpl
cld
mov
sbb
push
in
xlat
sbb
out
inc
sub
adc
std
ds
push
push
out
or
mov
loopne
add
push
inc
in
lret
pop
mov
bound
xchg
xor
hlt
rorb
sti
nop
cltd
lret
pop
xor
ljmp
outsb
movsl
sbb
and
shrb
xchg
push
inc
push
cmp
jae
mov
insl
hlt
outsb
mov
cltd
cltd
jp
fs
inc
mov
pop
cmp
inc
pop
lock
jl
pop
das
adc
rorb
pop
rcrl
lds
stos
test
pop
mov
jo
mov
lahf
outsb
rorl
loopne
in
jo
push
call
shlb
sub
ret
xor
imul
cld
cltd
movsb
adc
and
jbe
rcll
push
mov
inc
dec
add
pop
mov
loope
xchg
sbb
jae
aad
data16
mov
popa
mov
out
jae
mov
loopne
pop
sbb
popf
cmpsb
imul
stos
aas
mov
jno
icebp
mov
out
imul
int
lods
stos
fidivrl
sbb
xor
imul
in
xchg
jmp
rclb
fistps
dec
mov
out
sub
inc
pop
stos
adc
sti
jbe
cmp
mov
add
push
pusha
mov
mov
mov
pushf
int3
imul
push
cmp
inc
push
loop
xor
jp
sbb
insb
fildll
xchg
lea
sbb
and
sub
movsl
aaa
rorb
mov
jnp
pop
mov
pop
jle
rorl
jl
pop
test
or
adc
cmpsb
jne
repz
adc
inc
pop
imul
cld
lret
lods
sbb
lods
or
jg
cmpsl
or
out
in
pop
dec
mov
into
stos
sub
aad
pop
sub
xlat
add
neg
adcl
dec
je
out
mov
cmpl
into
es
jno
pop
mov
mov
dec
in
bound
cld
je
movsl
fwait
divl
pop
mov
or
push
sbb
out
xchg
xchg
dec
pop
push
add
arpl
lret
into
cmc
mov
mov
pop
imul
inc
call
cmpsb
fldl
imul
or
add
inc
popf
inc
add
enter
lods
imul
xchg
or
cmp
call
std
mov
scas
fimull
dec
dec
sbb
sbb
xchg
adc
inc
xor
mov
testb
xchg
adc
lock
das
xchg
subl
popa
aaa
jae
cmp
mov
icebp
sti
push
adc
xchg
nop
test
add
lcall
sbb
lds
dec
nop
pushf
cmc
sarl
fsubs
pop
ds
sbb
out
sar
out
sub
or
jbe
insl
inc
data16
mov
loope
jp
sbb
fidivs
sti
repz
push
pop
sti
xchg
shlb
xor
ja
adc
test
lcall
and
lds
je
cli
mov
sub
sub
mov
in
repnz
stc
cmc
and
inc
hlt
cmp
movsl
enter
mov
dec
loopne
lock
inc
sbb
mov
xor
xchg
sbb
mov
jl
js
ss
sbb
adc
jge
repz
jb
jno
mov
and
mov
jge
jle
outsl
dec
stos
repz
cmp
adc
pushf
push
jecxz
sub
cmp
sbb
adc
cmp
push
or
aad
mov
clc
adc
inc
inc
ds
test
mov
ret
cmp
and
arpl
leave
test
daa
sub
pop
xlat
clc
xchg
cwtl
enter
add
js
testl
testb
cld
mov
popf
pop
loopw
and
stos
mov
xchg
xor
jns
push
and
jl
add
dec
lods
pop
arpl
movsb
dec
dec
mov
notb
dec
pop
cmp
cmp
cmp
xor
out
aaa
mov
mov
mov
push
stc
movsl
cmpb
dec
or
imul
es
idivb
dec
sbb
jge
pushf
icebp
adc
mov
fwait
jle
mov
enter
inc
in
lret
add
sbb
cmp
inc
adc
sti
popa
iret
test
jo
xchg
out
fistl
push
insb
or
mov
xor
inc
mov
icebp
lods
inc
dec
fimull
fwait
mov
call
sub
mov
jb
rcr
xor
adc
decl
orb
pop
sub
jo
jmp
push
mov
pop
sub
pop
cli
psubusw
mov
les
daa
std
lret
sbb
int3
add
xchg
dec
out
stos
or
xlat
dec
mov
imull
jge
or
mov
adc
sub
adc
fs
cmpsl
cs
sub
and
lret
mov
aad
hlt
rolb
orl
push
cmc
mov
mov
std
shr
stos
jg
mov
and
inc
push
loope
ss
ficoms
scas
adc
lcall
faddl
sub
or
test
mov
xchg
mov
sub
cmpsl
insl
inc
fnsave
jle
and
mov
push
sub
scas
jnp
fs
adc
cmc
xor
sarb
popa
push
jge
adc
enter
mov
fsubp
push
push
cld
jno
mov
mov
push
movl
and
inc
pop
out
test
mov
cmp
jns
xor
out
add
mov
xor
add
sbb
mov
sub
data16
inc
mov
adc
std
mov
ficompl
gs
add
enter
in
dec
add
push
mov
jae
mov
adc
movsl
adc
xchg
pop
pop
mov
notb
xchg
xor
mov
shlb
sbb
icebp
push
or
inc
mov
clc
xchg
sbb
mov
and
sub
mov
push
cmp
out
adc
mov
mov
inc
sar
sub
pushf
dec
lret
dec
call
pop
aas
pop
cs
or
insb
mov
xchg
mov
push
out
sub
dec
inc
test
push
pop
dec
mov
pushf
inc
sub
imul
sbb
scas
push
leave
mov
outsl
push
mov
jl
push
fwait
xor
mov
in
push
idiv
movb
and
adc
scas
hlt
arpl
test
adc
ret
push
push
mov
add
push
cmp
js
out
xor
sub
mov
imul
rolb
dec
sbb
fisttpl
and
push
jnp
pop
pop
arpl
ss
xchg
jne
cmp
jg
xchg
and
pusha
ss
mov
sub
fucomp
xchg
dec
lahf
insb
out
xor
enter
daa
mov
lods
jle
jge
adc
popa
dec
pop
xchg
lds
add
lea
push
sub
xchg
mov
push
sub
xor
jp
inc
lret
mov
lods
leave
fstps
sub
jl
rorb
push
aas
xor
fbld
addr16
adc
sbb
mov
or
mov
push
mov
mov
test
or
pop
pop
add
ror
lcall
cmp
sbb
ret
movl
notl
jae
xor
and
addr16
insb
cli
les
and
cld
dec
out
mov
pop
ret
and
mov
pop
repz
mov
cmpsb
lret
cmpsl
les
dec
mov
sub
repz
sti
cmp
shll
sti
jo
pop
pusha
jnp
ret
lret
cmp
jge
or
pusha
addr16
mov
push
ffree
mov
push
ljmp
inc
mov
adc
lcall
adc
cs
lcall
aas
mov
addl
push
mov
jbe
fisubrs
mov
jle
mov
mov
loop
jae
aam
repnz
negl
pop
xchg
and
mov
mov
movsl
fnstenv
adc
push
data16
outsl
lods
sub
insl
sbb
mov
push
rorl
idiv
dec
clc
jge
lods
outsl
jge
dec
sti
mov
lcall
loop
sbb
mov
loopne
dec
nop
adc
jg
mov
pop
out
sub
loopne
push
dec
cmc
mov
and
sahf
mov
das
cmpb
repz
stos
or
ret
pop
dec
push
test
push
stos
ss
cld
sbb
dec
js
or
ja
or
ds
ja
xlat
mov
lock
mov
fcomps
and
test
in
pop
sub
fcompl
pop
test
scas
add
push
adc
jnp
sbb
dec
mov
cmp
in
cmp
mov
ds
data16
lcall
dec
cmpsb
jbe
push
push
sarl
sar
pop
dec
fimull
xchg
xchg
repz
and
scas
imul
rorb
lcall
adc
arpl
jp
mov
sarl
inc
aaa
dec
aas
xor
clc
jmp
and
rcl
mov
or
dec
jl
push
sbb
fbstp
adc
shrb
lods
jae
xor
adc
ret
mov
xchg
dec
leave
push
xchg
std
jnp
out
fscale
aaa
inc
movsl
stos
arpl
and
add
dec
dec
and
push
movsl
xor
in
dec
jp
or
jecxz
jge
iret
in
ds
mov
mov
rcrb
into
sub
rorl
loope
mov
stc
push
enter
push
pop
das
sbb
sti
stos
sub
or
push
dec
jle
cmpsl
or
sub
lret
pop
xor
or
mov
mov
lret
std
dec
pop
or
inc
into
mov
xlat
test
dec
cmp
les
dec
pop
xor
shl
xchg
outsl
call
inc
ss
ja
jbe
inc
leave
data16
inc
mov
xchg
or
jns
test
shlb
add
pop
xchg
push
cmp
dec
jns
or
lret
mov
jae
dec
push
bound
lods
aad
jp
outsl
outsb
fnstenv
and
mov
pop
daa
daa
sub
nop
adc
and
nop
out
mov
mov
sbb
out
cld
lahf
mov
mov
push
sub
dec
addr16
out
xchg
lods
pop
mov
pop
sbb
pop
out
stos
cld
lea
fisubs
cmc
rcrl
pop
cmp
test
aad
mov
or
xchg
jnp
pop
imul
in
leave
shl
xor
shlb
mov
call
dec
lcall
xorl
xchg
sub
and
sub
movsb
das
and
sub
mov
xchg
cmp
push
xlat
sbb
jnp
insl
cmpsl
and
ss
jne
adc
decl
add
pop
ror
pop
mov
ja
loop
xor
stc
push
push
les
xchg
out
fldenv
test
orb
out
scas
in
inc
inc
mov
push
aaa
xchg
cmp
cmpsl
or
pop
pop
cmp
mov
jecxz
ds
adc
test
into
adc
pop
icebp
pusha
lods
mov
into
insl
pop
pop
xor
push
push
in
insl
dec
insb
xchg
add
dec
jns
aas
ss
inc
push
dec
jne
fisttpll
stos
and
cmc
cmpsl
imul
insl
sahf
and
cmc
andb
push
sbb
push
push
addb
dec
xor
xchg
out
mov
pop
add
imul
cmp
jno
js
in
outsl
cwtl
mov
test
test
iret
adc
and
cs
loopne
repnz
dec
rcll
push
pop
mov
hlt
adc
in
jns
lret
cmp
dec
data16
int3
out
jg
pop
xchg
add
or
je
or
mov
mov
cs
mov
adc
leave
cwtl
data16
sub
test
push
repz
icebp
lret
jmp
mov
idivb
sbb
mov
in
cmp
cmp
xchg
repz
pusha
imul
or
iret
xor
mov
test
xchg
shl
imulb
push
ds
jmp
aad
sub
inc
jns
std
aam
push
jae
xchg
mov
or
inc
fs
cld
mov
les
enter
inc
sbb
mov
mov
push
jle
jns
adc
in
mov
stos
pop
pop
idivl
clc
repz
sub
and
out
inc
mov
outsl
mov
lret
out
inc
pop
mov
into
push
sti
cwtl
or
lret
es
cmpsb
in
addr16
stos
xor
pushf
jno
out
mov
jle
sub
add
sub
aad
jg
jg
lret
nop
cmpsl
int3
rcl
inc
sub
lahf
out
es
iret
icebp
lds
fimuls
sbb
pop
enter
sbb
pop
add
addb
incl
xchg
xchg
pop
icebp
popf
rclb
and
mov
mov
stos
aad
pop
inc
lcall
mov
pop
rclb
xchg
sub
test
xor
adc
test
inc
add
shl
stos
and
xchg
negl
outsl
or
sbb
pop
enter
mov
or
insb
lret
in
cs
cmp
notb
outsb
jmp
jbe
sub
ja
mov
icebp
loop
cmpsb
jg
mov
daa
adc
sub
sub
cmp
lret
mov
push
dec
and
test
sub
sub
push
negb
xchg
mov
aaa
xor
push
lds
andl
ficoml
xor
mov
sbb
dec
cmp
das
test
and
push
sbb
fcoms
inc
inc
out
bound
aaa
xor
out
jl
es
cmpsl
mov
stos
dec
inc
stos
add
jns
lods
mov
push
push
cli
xchg
cmc
sahf
inc
xor
shlb
add
scas
and
mov
lds
aas
xlat
pop
arpl
mov
push
cltd
outsb
in
adc
rcrl
fistl
push
push
push
adc
jno
sahf
les
aam
popf
add
inc
xor
cmp
call
movl
insl
mov
test
pop
push
nop
add
jno
pop
bswap
adc
jo
jnp
nop
pop
mov
lret
in
out
cmpsb
insb
out
push
xchg
clc
je
push
notb
push
imull
pop
jp
dec
repz
xor
jge
aaa
cmpsb
push
or
jp
or
in
iret
mov
lods
pop
out
fisubrs
sub
jae
shlb
sbb
je
or
adc
inc
cltd
pop
ss
hlt
inc
mov
or
add
mov
ds
and
jl
ret
and
mov
andl
aam
cmp
sti
popa
repz
ret
cmp
test
xchg
mov
mov
mov
dec
xlat
std
jnp
mov
cli
add
popa
int3
adc
add
stos
movsl
cmpsb
jns
cld
dec
scas
push
popf
dec
pop
cmp
fsubl
lods
cmc
dec
pop
push
xchg
stc
iret
inc
out
xor
dec
mov
xchg
sti
mov
dec
xlat
addr16
mov
xchg
mov
cmp
out
jge
jbe
lret
sarl
hlt
test
jge
daa
cmpsb
pop
ss
repz
fnstsw
movsb
daa
lahf
test
shll
pop
mov
sub
sub
pop
and
rclb
and
cmp
icebp
cmp
test
dec
testb
subb
jge
hlt
push
sub
cmpsl
jmp
push
dec
cmpsl
rolb
fnstenv
cmpsb
pop
push
or
cmp
outsl
js
sub
movsb
je
lret
gs
shll
xor
jne
sub
push
notb
je
outsl
mov
ror
cmp
xor
jnp
inc
sbbl
sahf
mov
push
push
jp
xchg
xor
ret
mov
mov
dec
add
sbb
and
inc
dec
lcall
insb
xlat
dec
pop
cmpsb
rol
push
sub
adc
mov
scas
mov
out
cltd
outsb
pop
add
pop
in
enter
pop
cmp
or
repnz
and
sbb
cmp
movb
insl
xor
xchg
adcl
sbb
pop
imul
popf
int3
sub
push
inc
adc
adc
push
lock
dec
jne
and
dec
movsl
xor
sub
fldl
fs
xor
mov
xlat
and
repz
mov
mov
outsb
sbb
outsb
xor
xchg
sub
pop
mov
lods
dec
in
sub
cmc
lods
test
mov
repz
mov
sub
adc
call
dec
sub
fisttpll
movsb
adc
gs
adc
fsts
add
cmp
xchg
hlt
jge
pop
inc
or
sub
movsb
ds
call
lods
cmp
dec
cs
adc
jmp
addr16
test
popf
popf
jl
mov
rclb
xor
in
dec
repnz
push
inc
cld
inc
xor
add
cltd
lods
lods
loope
jne
jp
lock
call
xor
shll
call
adc
pop
jb
test
jmp
push
popf
mov
push
xorl
jno
int
fnstsw
lret
sub
pop
xchg
push
xchg
in
out
mov
add
adc
stos
sbb
aam
cwtl
dec
lea
gs
addr16
inc
fcmovb
not
iret
test
sub
in
sub
scas
mov
int3
leave
pop
xchg
inc
cmp
insl
jecxz
xor
hlt
add
aam
popf
sti
dec
rorb
cltd
loop
cmp
sahf
sbb
sub
mov
push
mov
or
test
insb
divl
adc
inc
cs
mov
or
ret
inc
pop
movsb
clc
add
test
sarl
enter
dec
dec
sahf
inc
cmp
sub
cmpl
sarl
lret
xor
sub
aad
pop
mov
add
lcall
scas
mov
mov
cmp
jae
adc
ret
xor
ret
and
dec
inc
dec
jle
mov
repz
les
xchg
and
fs
fwait
push
cmpsb
out
inc
jae
or
jl
mov
mov
jne,pt
fs
clc
push
andb
fcoms
loopne
mov
fs
fisubrs
xor
adc
jmp
test
adc
mov
scas
mov
jl
aad
imul
push
dec
sbb
iret
push
outsb
movsl
rclb
push
sahf
cmp
mov
cs
jae
hlt
clc
stos
jmp
lods
add
dec
pop
sbb
jne
push
das
loop
gs
and
push
and
sar
push
xor
out
mov
xchg
ds
jecxz
push
fucomp
shlb
push
mov
lcall
shr
out
inc
mull
push
leave
inc
sbb
cld
ds
iret
loope
cs
dec
xchg
or
test
rclb
lock
cmp
pop
mov
daa
lret
xchg
outsb
pop
lock
mov
imul
fmull
in
jno
jnp
daa
es
jne
aad
stc
mov
and
leave
cmpsb
insb
outsl
lahf
scas
ja
xchg
lret
lahf
add
push
sub
loopne
out
and
jno
outsl
mov
jnp
int
pushf
lahf
pop
lcall
lcall
cmp
icebp
pop
and
lds
jecxz
out
jg
std
mov
pop
lock
add
outsb
sbb
cmp
leave
int3
scas
sarb
or
jb
test
push
jmp
inc
shlb
adc
pop
ds
jne,pt
xlat
loope
mov
orb
mov
xlat
adc
inc
mov
adc
mov
add
les
orb
and
sub
scas
scas
imull
in
es
inc
sub
inc
mov
ds
add
test
and
inc
je
cmp
shlb
sbbl
int3
sub
test
or
sti
or
fdivr
adc
cs
xlat
scas
fcoms
mov
pop
push
rcrb
push
aad
sub
call
push
cmp
out
sarb
sbb
arpl
fnstsw
getsec
jns
mov
mov
and
xchg
shrb
fcmovb
inc
and
add
mov
push
andnps
xlat
or
or
inc
add
out
or
and
sub
mov
enter
xor
push
or
push
cmp
add
xchg
mov
ljmp
pop
scas
rolb
mov
fldt
incl
jnp
xchg
push
sbb
mov
out
jmp
jns
and
or
mov
mov
xor
loop
aam
jmp
call
mul
cmp
mov
out
in
aad
nop
rorl
arpl
add
jle
xchg
jnp
stc
cmc
shl
dec
pop
adc
loope
cmp
push
adc
shlb
sti
jp
mov
fisubrl
mov
add
xor
enter
nop
fs
jbe
mov
sbb
in
xor
pop
push
xlat
lods
push
mov
sbb
sbb
and
cmpb
std
fisttpll
out
cmp
xor
sti
push
mov
fisttpll
mov
out
push
mov
enter
add
adc
jge
sub
sbb
jl
jmp
stos
movsb
fcompl
ljmp
mov
xchg
outsb
fiaddl
icebp
sbb
pop
pop
outsb
mov
dec
jle
cltd
dec
into
pop
add
mov
outsb
shlb
call
mov
add
cmp
mov
lret
mov
faddl
jbe
loopne
lea
jbe
push
ja
icebp
pop
sub
rcrl
or
and
push
les
and
jp
jecxz
cmpsb
cmp
pop
cld
fwait
or
pop
mov
stos
ret
xchg
push
fwait
pop
loop
add
xchg
push
pushf
sbb
sbb
shrb
or
mull
ficoms
lods
stos
adc
in
xchg
test
sub
jne
xchg
je
mov
mov
mov
fistps
mov
shr
sbbl
jb
dec
mov
loope
pop
or
fidivrl
inc
adcb
nop
sbb
and
cmpl
mov
mov
shll
add
in
jl
imul
lret
shll
icebp
xor
dec
mov
push
inc
fsts
and
dec
ljmpw
inc
mov
mov
mov
mov
cwtl
outsl
in
mov
gs
jle
daa
int3
jnp
dec
int
fdivr
scas
ror
lcall
add
pop
mov
mov
mov
mulb
mov
jp
ficoms
jp
adc
leave
jo
adc
scas
repnz
ds
lcall
mov
fldenv
pop
mov
pusha
es
lret
jae
insb
int3
loopne
popa
jle
add
dec
xchg
lock
pop
jecxz,pt
add
popf
lret
adc
mov
fmuls
push
or
pop
imul
fdivs
mov
mov
test
outsb
or
andl
jle
xor
sub
or
xlat
scas
lods
pop
push
movsl
pushf
cmp
gs
sti
dec
shrl
movsl
cli
adc
sub
cmc
test
rclb
outsb
daa
mov
movsl
xor
in
xor
faddl
mov
lods
pop
jg
ror
int
adc
sub
outsb
and
lret
ljmp
rclb
pop
enter
jecxz
icebp
ljmp
rcll
mov
pusha
scas
mov
sbb
dec
test
push
xchg
cmp
cmp
pop
stos
or
cmp
cld
ret
xor
mov
subl
call
icebp
nop
lret
jecxz
arpl
sti
inc
pop
test
lcall
cmc
push
jl
ds
adc
sbb
imul
xchg
fsubs
daa
sbb
mov
xor
xchg
xor
inc
adc
pop
pop
pop
out
test
popf
fbstp
jmp
icebp
ja
cwtl
cmp
xor
mov
icebp
test
sbb
adc
push
dec
daa
and
mov
fistpll
push
hlt
mov
dec
imul
sbb
pop
adc
and
lret
kandnw
loop
pop
cmpb
aam
xor
sahf
int3
xchg
cmp
outsl
int
mov
pop
mov
imul
mov
fstpt
jns
ds
imul
les
movsb
xchg
push
pop
aad
enter
out
fidivrs
mov
ret
repnz
repnz
push
arpl
testb
jns
add
loopne
mov
mov
add
sub
push
push
call
mov
adc
xor
repnz
sub
dec
icebp
cmp
pop
and
jp
pop
cmp
cmp
sub
incb
hlt
xorl
in
fcmovnb
push
ret
lods
inc
cmp
inc
add
packuswb
and
xchg
cmc
bound
mov
cmpsl
lds
or
cmp
pop
mov
push
xlat
outsb
cmp
jmp
shl
pop
add
imul
push
int
xchg
outsl
hlt
xchg
mov
and
or
das
pop
mov
xor
sete
sti
mov
test
xor
icebp
mov
adcb
fucomi
sub
out
dec
mov
lods
jnp
ret
sub
xchg
dec
or
ret
ds
mov
dec
jnp
std
lcall
push
or
mov
pop
out
push
inc
sub
negl
fsubr
or
push
cmpsl
xchg
xchg
push
pop
rcrb
mov
imulb
out
std
ja
ss
ds
xor
sub
jmp
dec
lods
scas
sub
mov
jnp
inc
pusha
pop
test
mov
inc
jae
cltd
xchg
pop
dec
mov
test
push
outsb
xor
scas
ud0
fstpt
mov
push
pop
dec
sbb
aad
inc
push
scas
add
mov
sub
fdivl
hlt
jmp
jb
xchg
dec
xor
lret
xlat
outsb
xchg
pop
xor
or
aaa
arpl
cmp
mov
psubd
lock
ret
pop
les
nop
inc
movsl
cmp
inc
and
lods
vmovsd
push
loope
ja
imul
cmp
inc
sahf
repnz
cld
lea
dec
add
push
adcb
inc
adcl
addr16
xchg
and
jmp
cld
nop
popa
cmp
pusha
push
xchg
pop
xor
add
mov
das
jge
inc
add
ja
fidivs
imul
orl
or
fcoms
inc
or
jns
lret
lock
xor
mov
test
xor
mov
pop
movsl
ljmp
pop
loopne
scas
and
add
test
push
xor
pop
jo
push
leave
mov
inc
dec
mov
mov
mov
and
bound
jl
fcoms
int3
nop
enter
dec
fnstsw
fsubs
and
jp
xor
mov
dec
dec
dec
or
fiaddl
enter
pop
jp
jne
cmp
ret
cmpl
inc
loopne
hlt
sub
pop
mov
jge
cwtl
and
lods
mov
jmp
gs
stos
icebp
popf
sub
das
inc
cs
adc
mov
in
cmpsb
sub
mov
fidivl
inc
mov
in
enter
call
mov
inc
rolb
fidivs
js
popf
lcall
lcall
dec
clc
fidivrs
jae
jecxz
jl
xchg
jle
popf
jl
xor
andl
movsb
adc
mov
loopne
lret
test
ss
sbb
clc
pop
ret
aaa
sub
dec
mov
inc
clc
lahf
jae
aaa
sbb
subl
fsubs
pop
sbb
mov
pop
in
adc
jmp
loop
and
incb
push
xchg
cli
ror
mov
pop
push
cmovge
mov
and
sub
push
orl
xchg
int3
or
out
imul
mov
xchg
gs
popf
arpl
in
loopne
shrl
mov
push
or
stos
andl
sub
push
lea
dec
and
xchg
test
lret
addb
sbb
mov
sbb
in
repnz
fwait
adc
sbb
fidivrl
pop
sbb
outsl
mov
repz
jmp
idivl
mov
and
jbe
jnp
pop
sub
pop
fsubrs
jae
push
pop
or
insl
lahf
cs
inc
pop
add
mov
add
jno
pop
test
mov
xchg
adc
mov
ret
mov
pop
cmpsl
je
imul
dec
lret
pop
sbb
imul
jns
cmc
sub
mov
stc
adc
inc
push
push
bound
push
add
inc
aad
pop
xor
xchg
cwtl
xchg
ficoml
stos
bound
out
test
cs
pushf
xchg
jb
aad
pop
lahf
das
movsb
adc
xchg
mov
fwait
iret
lahf
jne
cld
cmp
push
arpl
mov
jg
insl
sbb
rcll
bnd
sarb
and
jp
test
data16
mov
subl
loope
or
leave
int3
cmpsb
jmp
adc
mov
adc
xlat
mov
push
test
sti
insb
mov
lret
pop
xchg
xchg
pop
sub
jno
outsl
pop
pushf
or
adc
cli
jae
daa
ds
fnsave
or
pop
mov
lcall
mov
push
mov
adc
jne
inc
or
push
push
add
jge
inc
dec
inc
mov
hlt
sbb
xor
loop
in
pushf
pop
and
test
das
jb
xor
or
dec
and
pop
arpl
or
push
imul
jecxz,pn
push
shlb
lea
cwtl
mov
rolb
ss
push
pop
lahf
xor
xchg
pusha
mov
add
dec
mov
mov
dec
aad
stos
jmp
mov
fisubrs
cmpl
fldcw
push
lret
cmc
pop
rolb
jnp
and
les
pop
stos
setae
sbb
je
lcall
popa
xchg
mov
mov
mov
popf
shl
mov
adc
push
jne
add
in
mov
ret
push
in
orl
push
push
mov
insb
add
lock
movsl
aam
and
push
inc
jns
cmpsb
gs
adc
ret
insb
orb
dec
xchg
xchg
or
xchg
inc
jnp
jp
push
xchg
jnp
cmpsb
pushf
incb
ds
or
ljmp
push
flds
xchg
mov
cmp
bound
mov
fstpt
idiv
pop
jl
loopne
push
test
and
les
aad
pop
adc
addb
outsb
and
dec
mov
push
jns
std
inc
lahf
icebp
xlat
add
and
xchg
sub
xchg
pop
je
popf
nop
inc
scas
sbb
mov
cli
es
push
cli
cmp
idiv
aas
jg
mov
push
mov
push
test
mov
xchg
ret
das
push
aaa
mov
push
dec
xor
jb
movsl
pop
push
dec
jo
loopne
push
and
fadds
mov
aad
sub
mov
rdmsr
mov
push
in
mov
jecxz
push
test
aaa
movsl
and
test
subl
mov
jl
insb
push
pop
pop
imul
mov
nop
inc
adc
int
and
jb
mov
mov
mov
in
or
arpl
sub
xchg
pop
and
int3
imull
icebp
cwtl
push
mov
xor
lahf
movsl
icebp
loop
inc
ret
dec
add
cwtl
scas
pop
and
bound
jae
fistl
addb
movsb
pop
mov
or
push
xor
mov
int3
notb
mov
add
jle
add
mov
xchg
movsbl
lods
cltd
cmpsb
sbb
mov
mov
icebp
push
repnz
push
jl
in
sar
movsl
xchg
push
push
daa
adc
mov
add
lahf
ds
pop
orl
out
xor
or
jbe
stos
fisttps
jns
lock
adc
pop
and
xchg
mov
pop
int
or
cmpb
pop
push
xchg
cmp
js
in
pusha
js
pop
shl
inc
mov
jbe
xor
fisttps
jo
add
add
fucomip
fucomip
inc
mov
call
int3
adc
lret
enter
push
push
std
int3
inc
sbb
jmp
jb
hlt
push
das
cmc
and
popa
mov
mov
scas
inc
cld
jo
add
jns
cmp
pop
jb
xor
dec
stc
cmp
ja
add
pop
cmc
mov
jno
mov
push
aaa
jae
mov
mov
pop
push
jmp
aas
out
and
test
xor
lcall
inc
xchg
mov
fisubl
mov
pop
repnz
pop
jecxz
iret
mov
xor
cmc
xlat
mov
push
push
xor
shl
in
shrl
sbb
add
lock
pop
into
testb
mov
mov
or
fidivs
xor
int
dec
insl
push
es
ljmp
xchg
mulb
vmovapd
dec
bound
repnz
and
ljmp
mov
inc
xor
adc
jmp
jo
pusha
jno
cmpsl
push
mov
push
jne
add
push
mov
jo
imul
or
mov
clc
cmp
mov
xor
push
stos
ss
and
pop
insb
jp
and
push
jl
shld
scas
pop
cmp
inc
sub
push
je
dec
mov
sbb
jo
jl
or
fstp
je
push
fmull
push
ficomps
out
mov
and
mov
inc
xchg
mov
ja
pop
sub
sahf
hlt
fnclex
subl
shrb
add
lods
imul
call
popf
incb
shr
add
dec
or
jno
lret
mov
mov
ret
ficomps
fwait
cld
xchg
dec
mov
test
xchg
adc
icebp
jge
jns
mov
add
or
jnp
cld
outsl
call
push
icebp
mulb
loopne
addb
mov
mov
sub
lods
paddq
or
rcl
adc
sub
xchg
mov
pop
pusha
loopne
mov
fs
fsubr
xchg
add
ds
insb
jp
adc
sub
xchg
loope,pt
les
jmp
les
fwait
adc
and
andl
ds
fwait
fs
aas
fs
sbb
mov
xchg
jns
jbe
mov
mov
in
cmp
dec
cli
outsb
dec
jae
xor
mov
pop
out
imul
cmp
sub
orl
jne
and
pop
lret
inc
mov
les
pusha
pop
pop
cld
ret
add
or
or
js
dec
inc
fs
in
pop
mov
cltd
jp
popa
inc
or
fsubl
xchg
fsubs
loope
sti
push
movsb
sub
insb
xchg
xchg
sub
nop
mov
into
push
mov
rolb
stc
dec
addr16
and
ss
add
lea
jmp
cld
jge
loope
jecxz
adc
xorb
inc
sub
inc
and
xchg
inc
ja
scas
mov
and
cmpsl
or
cmpsl
inc
outsl
cmpsb
dec
stos
mov
pop
ret
mov
dec
ret
lahf
mov
popa
mul
stos
aam
imul
outsb
mov
pop
or
out
push
daa
push
clc
cltd
mov
pusha
mov
pusha
pop
xor
test
inc
fisubs
add
incl
iret
enter
adc
add
inc
inc
xchg
jg
aad
jo,pt
inc
mov
not
xor
or
incl
add
xor
fdivrl
das
cmc
bound
fstps
jo
add
sub
fnstcw
pop
cltd
push
or
jp
inc
lds
rclb
mov
jp
jbe
ss
jp
mov
dec
mov
push
cmp
cmpsl
popf
fistpl
xchg
loop
and
test
push
aaa
lret
mov
push
adc
insb
sarl
xor
adc
adc
cmc
pop
ret
lds
sahf
add
pop
xchg
inc
daa
xor
mov
jae
sub
in
or
test
fwait
xor
outsb
repnz
push
fldl
mov
sbb
jmp
int
adc
je
gs
sub
inc
test
or
fimuls
xchg
out
cmp
mov
and
dec
and
hlt
loope
xor
leave
lods
push
xchg
cmpsl
xchg
rorl
push
inc
stos
lcall
jno
jns
sbb
ljmp
push
fs
out
leave
dec
pop
popa
xchg
mov
nop
aas
jge
sbbl
insl
pop
push
cmp
mov
add
ret
in
xchg
imul
enter
sub
addr16
xchg
jp
inc
lods
jne
and
mov
cmp
test
xchg
in
je
movsl
mov
or
lods
pushl
in
dec
xchg
xchg
push
fisttpll
or
mov
aam
sub
scas
lods
cmp
lods
dec
idivb
push
xor
icebp
enter
inc
in
cmp
fwait
or
sub
xor
pop
and
adc
or
std
addr16
repnz
std
lock
ja
push
insb
stos
xchg
jno
cs
nop
xor
and
outsl
js
arpl
dec
add
inc
mov
fs
subl
mov
scas
int3
outsb
ss
xchg
pop
push
pop
and
lret
or
aam
sbb
adc
pop
push
mov
loopne
cld
mov
jno
out
mov
jnp
xchg
or
mov
inc
xor
xor
aaa
push
insb
mov
jno
in
inc
mov
xchg
mov
je
jae
sbb
jo
sub
sub
mov
and
in
pop
push
xchg
out
jb
mov
sbb
adc
push
or
lock
clc
sahf
or
pop
rorb
icebp
mov
sti
pusha
scas
pop
movsl
xor
aaa
mov
xchg
fidivl
jbe
shl
and
cmc
daa
push
lods
cmpsb
pop
test
cmp
imul
pop
push
test
xor
lcall
movsb
icebp
loopne
insl
pop
fcompl
fmuls
cmpsb
sub
arpl
push
push
rcrb
andb
inc
mov
jns
xor
insb
leave
lods
dec
stc
sbb
jns
or
cmp
fsincos
push
jecxz
cmp
lds
jle
out
jne
sbb
and
sbb
call
xchg
push
fs
icebp
push
mov
into
sub
or
mov
sti
adc
sbb
mov
enter
pop
jmp
insb
popf
cltd
test
repnz
lcall
push
mov
pop
cwtl
jecxz
sub
pop
fnsave
mov
pusha
icebp
xor
mov
xor
and
lcall
xchg
adc
in
dec
icebp
cwtl
filds
mov
inc
sbbb
pushl
stos
xor
mov
ss
sub
adc
push
push
leave
xor
mov
cwtl
enter
mov
dec
stc
scas
cmp
or
inc
insb
clc
ss
lock
pop
sbb
outsb
cmpsl
xor
mov
es
stos
lods
js
lret
aaa
cmpb
arpl
mulb
mov
test
leave
push
movsb
mov
and
or
outsl
lret
loope
mov
xchg
lahf
sarl
lods
pushf
rorb
xor
leave
addr16
dec
test
es
ljmp
subl
cmpsb
xchg
xchg
dec
add
push
jo
push
sbb
cmp
aad
cmp
mov
jmp
roll
popf
cmp
ficoml
jle
push
shlb
ret
mov
and
fistps
test
ficomps
xor
cmp
ret
not
fcoml
jnp
lcall
int
mov
dec
fnsave
xor
push
adcl
daa
out
push
arpl
push
fisubl
add
lea
jne
inc
mov
fiadds
dec
mov
ds
data16
jno
outsl
sbbl
pop
dec
pop
cmp
arpl
inc
pop
lods
mov
dec
inc
push
cs
push
push
in
inc
sbb
mov
call
mov
dec
mov
add
ret
adc
lcall
out
mov
push
jbe
mov
jge
shlb
cmc
xchg
ds
cmp
out
sub
xor
std
pusha
jge
insl
js
mov
repnz
ja
inc
adc
inc
pop
test
int
cmp
sub
dec
outsl
jbe
pop
sbb
or
cmp
sub
mov
enter
sbb
add
rcll
nop
or
jne
lcall
jbe
pop
add
pop
push
push
dec
lahf
loopne
mov
cli
das
push
out
add
clc
jmp
mov
adcl
ds
js
jb
outsl
int3
orb
xchg
add
push
jg
adc
lock
mov
or
mov
lret
pushl
jge
jle
jp
lds
sbb
test
lahf
xor
clc
mov
xchg
mov
testb
add
push
adc
icebp
inc
xor
test
or
and
ja
ja
dec
mov
ret
stc
pop
jl
mov
jg
push
inc
push
push
mov
scas
out
int3
push
push
xchg
fnstenv
lahf
adc
xor
and
movsb
mov
sbb
or
jge
cmpsl
cmp
test
mov
mov
sti
nop
push
pop
push
and
jl
or
std
mov
rclb
int
jg
or
xor
rcll
dec
fst
inc
mov
enter
movsl
lret
pushf
jnp
dec
xor
fdivr
cmp
imul
faddl
push
int
in
aam
lret
sub
imul
sbb
pop
fwait
rcrl
ds
sub
sub
aad
call
and
sub
jb
cs
jmp
jno
xor
in
mov
push
into
xchg
mov
mov
or
sub
ds
jecxz
inc
mov
adc
pop
sbbb
inc
imul
dec
mov
or
push
xchg
push
mov
dec
gs
dec
loop
inc
dec
push
aad
in
cmp
das
xchg
pop
xor
sbb
pusha
or
or
inc
ficomps
cltd
scas
insb
sub
or
in
dec
dec
ret
add
dec
mov
sbb
fsubp
lahf
jmp
mov
xor
jp
fidivl
mov
test
hlt
mov
mov
stos
sbb
cmp
call
mov
sub
sub
jecxz
or
jbe
add
sub
dec
push
out
pop
xorb
and
aaa
pop
stos
mov
iret
xorb
lock
and
stc
jmp
and
gs
push
dec
mov
loopne
push
cmp
push
cmp
push
insl
lds
notb
pop
or
jbe
inc
mov
xor
int3
xchg
aaa
out
cmpsl
cmp
lods
mov
mov
imul
add
and
aas
add
jne
sarb
testl
inc
iret
je
mov
fcmovb
imul
cmpsl
shlb
enter
cmpsb
test
add
scas
adc
loop
sti
aad
jecxz
dec
pop
iret
or
aas
roll
fldl
clc
or
xrelease
divl
imul
pop
sbb
add
test
stos
loopnew
fnstcw
push
push
mov
and
cmp
mov
sahf
inc
xchg
mov
or
xchg
leave
es
or
lods
mov
xchg
jnp
inc
mov
ja
sahf
pushf
and
ficompl
ja
pop
xchg
adc
mov
setb
repnz
mov
push
rcrb
cwtl
pop
and
mov
cmpsb
pusha
je
xchg
mov
push
xor
pusha
pop
or
or
push
pop
xor
fcompl
mov
insb
test
inc
daa
cmc
cmp
pop
lds
mov
stc
fmuls
push
movsl
xchg
mov
nop
adc
pusha
mul
std
int3
push
out
insl
pusha
data16
pop
sub
pop
lods
sbb
pop
cmp
add
or
push
push
xchg
pop
push
mov
and
adc
jae
add
in
and
mov
mov
and
jbe
pushf
cmpsb
dec
push
lcall
mov
sub
xchg
push
mov
popf
sbb
arpl
std
dec
inc
lret
and
mov
ret
sbb
jns
dec
push
mov
and
outsb
mov
xchg
aad
sbb
xor
adc
jge
xchg
out
cli
xchg
inc
mov
jns
int3
sub
dec
lcall
cmpsb
xchg
add
shlb
ficomps
dec
add
mov
inc
cmp
xor
push
in
jno
mulb
jl
frstor
cmp
xor
fs
out
inc
mov
fsubrl
das
pushf
adc
push
aas
pop
and
mov
pop
fldcw
out
mov
cmp
lcall
int3
xor
xchg
sbb
lret
sbbl
adc
outsl
ret
sbb
ret
jae
icebp
cltd
outsb
ret
int
div
xor
loope
stos
or
adc
dec
stos
scas
pop
mov
iret
pop
sti
mov
addl
sarb
sbb
mov
jae
cmp
data16
sbbl
adc
mov
sbb
scas
pop
xchg
inc
add
ss
xchg
mov
inc
dec
push
cld
inc
jb
lret
lods
cmp
adc
fidivrs
or
out
mov
push
xchg
adc
shl
dec
in
fwait
aad
mov
adc
gs
ja
push
or
pop
mov
mov
jecxz
rorb
jo
repz
jecxz
ja
aaa
loop
push
pop
popa
mov
movsl
fcoml
pop
jecxz
xchg
call
push
sti
jge
aad
dec
in
sub
jle
xor
jne
scas
shrl
lds
sbb
cmpl
pop
sub
shll
enter
xorb
sbb
pushf
fstl
or
fsubl
mov
aas
gs
add
mov
jmp
jle
mov
outsb
andb
or
push
mov
aaa
test
in
pusha
movsb
test
ret
insb
out
pop
imul
test
push
fbld
mov
mov
fs
faddl
pop
inc
xchg
scas
bound
jecxz
xor
sar
psubq
pop
ret
pop
xor
pop
insl
sbb
push
jb
cmp
fst
adc
cli
sub
adc
sbb
cmp
movsb
sub
jp
pop
fs
mov
aam
mov
xchg
je
das
xchg
lock
push
and
rorl
pop
xor
cmpsb
mov
mov
ja
mov
bound
sbb
negl
divb
jge
ds
sbb
push
cwtl
pop
sbb
mov
add
insl
add
sub
jp
aaa
xchg
cmp
rolb
xor
mov
fstp
mov
dec
lods
pushf
push
sub
xchg
dec
notl
sbb
movsl
cmp
mov
cmpb
outsb
push
inc
jno
sbb
fcomi
movsb
jb
dec
popa
adc
mov
mov
pushl
mov
loopne
pop
dec
inc
ret
rcrb
insb
push
inc
in
sub
mov
jecxz
mov
mov
mov
push
pop
sub
out
jb
rcl
xor
cmp
add
das
and
xor
cmp
add
cmp
jno
jge
sub
sahf
popf
sbb
jecxz
insl
cmp
mov
adc
jg
cmp
mov
lods
mov
movb
frstor
inc
les
jns
pop
sbb
add
ja
pop
mov
notb
sub
mov
xor
popa
aam
and
inc
push
and
aaa
inc
je
add
xchg
iret
gs
xchg
fnstcw
cmpsl
xchg
pop
leave
push
sub
test
fsubl
sub
pushf
rcr
cmp
fildll
jns
mov
shll
pusha
xchg
push
loope
inc
pushf
add
pop
xchg
xchg
mov
rcrb
dec
dec
inc
sbbb
or
es
push
and
mov
dec
mov
push
dec
xor
mov
lea
push
adc
add
sub
xor
pop
rolb
subb
test
sti
push
test
call
inc
lret
call
mov
sbb
add
fisubl
adc
ret
xor
fmul
add
adc
inc
rorl
mov
bound
movsl
outsb
adc
pop
cwtl
insb
lret
les
sub
insb
jg
adc
lahf
jge
jecxz
popa
push
inc
imul
mov
and
dec
fdivs
or
movsb
aaa
iret
pushf
cmp
mov
lock
repz
ds
inc
jmp
xchg
cmp
mov
add
out
cmp
cmpl
cmp
in
rclb
adc
fadd
stos
es
mov
xchg
arpl
test
mov
out
aam
hlt
jns
mov
xchg
jp
outsb
std
push
ds
in
sub
push
les
sahf
and
mov
clc
or
push
fwait
inc
imul
push
fadds
jno
adc
xchg
sbb
inc
lret
jge
fimuls
outsb
sbb
jp
clc
or
xor
clc
jle
lea
push
fucomip
mov
jo
daa
adc
adc
xor
adc
sub
xchg
in
jmp
cmp
xchg
fdivl
pop
mov
jle
xchg
popf
pop
test
push
cmp
mov
add
inc
fdivs
jns
jge
xor
adc
add
push
sahf
and
add
ficomps
fisttpll
push
and
int
in
sub
mov
sub
lret
dec
or
leave
sub
les
leave
xor
arpl
cmpsl
sbb
pop
mov
xchg
js
test
iret
xchg
out
jecxz
in
mov
stc
nop
adcl
jo
ror
xchg
test
pop
andb
dec
push
xchg
adc
jo
negl
imul
jmp
shll
mov
inc
loop
pop
cs
mov
xor
sub
pop
scas
jg
cmp
popf
outsb
or
orl
ja
jle
out
bnd
mov
sub
push
rcr
in
pusha
push
cmpb
mov
movsl
idivl
xchg
pop
jp
cmp
clc
ret
test
andl
hlt
testl
inc
in
in
mov
mov
shll
sub
out
xchg
mov
cmpb
add
cli
pop
and
jno
xor
outsl
sub
push
lods
std
sbb
mov
pop
out
pushf
push
enter
imul
add
inc
jnp
cli
mov
xorl
xchg
cli
jnp
pop
mov
sub
fcomip
aam
in
adc
repz
add
cs
xor
sti
cmc
mov
pop
mov
rcr
xchg
out
pop
lods
outsl
adc
mov
movsb
int3
sbb
or
mov
add
mov
das
mov
scas
clc
shr
out
mov
xchg
out
dec
sahf
xchg
pop
jne
lret
or
dec
xchg
add
and
loopne
dec
and
iret
inc
jb
movd
into
add
jne
mov
dec
inc
pop
je
clc
push
mov
scas
cmp
jne
pop
sahf
stos
cmp
loope
or
push
testb
xchg
push
sub
sub
jae
insb
lods
or
pop
shll
loop
loopne
dec
hlt
ficompl
aad
mov
mov
xor
pop
call
mov
mov
out
clc
pop
jp
or
idivl
xor
lret
pop
mov
gs
cmpb
lea
cli
loope
jg
lcall
dec
push
ret
jle
aaa
out
ficomps
jne
lods
and
imul
and
pop
repnz
mov
jge
mov
ffreep
mov
push
rcr
mov
adcl
pusha
mov
xchg
push
push
imul
lret
insl
jecxz
or
fwait
push
lahf
gs
mov
out
push
dec
adc
fistpll
mov
gs
pusha
cli
shrb
cmc
shll
pop
repnz
xor
inc
fildll
out
add
cwtl
popa
add
push
push
add
imul
data16
jl
scas
iret
out
clc
lcall
xchg
cs
call
jnp
stos
clc
iret
push
gs
dec
cs
lods
cwtl
jmp
cmp
jb
movl
in
push
mov
mov
repz
sahf
and
xor
add
push
jae
lahf
ds
dec
cmpl
js
dec
jle
or
in
ret
push
pop
or
xor
into
lods
mov
outsb
cmp
xchg
and
adcb
hlt
inc
stos
test
mov
fsts
gs
pop
sub
rcll
lock
mov
dec
cwtl
fwait
pushf
pop
out
mov
lahf
xchg
push
mov
pop
dec
jecxz
xchg
cs
add
and
popf
jnp
xchg
lea
aas
ja
sub
pop
mov
cwtl
roll
dec
pop
aam
jg
addb
mov
mov
add
mov
inc
popa
push
push
xlat
push
cmp
stos
je
sti
jmp
xchg
in
pop
aaa
sub
dec
sub
ds
inc
xorl
movsb
cmp
out
in
icebp
add
xor
imul
inc
mov
mull
idivb
push
scas
xlat
adc
sub
nop
clc
inc
pop
test
xor
fldt
jnp
push
and
xlat
pop
xchg
push
iret
sbb
outsb
pop
push
xchg
sarb
movsl
rorl
loop
outsl
rorb
and
inc
imul
ljmp
or
xor
je
jecxz
xchg
xor
cmp
mov
mov
inc
jnp
mov
jno
mov
cmpsb
pop
out
aad
jb
adc
push
fiaddl
xor
clc
pushf
xchg
lock
push
popf
mov
mov
push
xchg
cs
mov
lret
aaa
fwait
int3
adc
mov
pop
cmp
addb
xchg
in
mov
cli
sbb
dec
push
inc
fbstp
push
mov
fistpll
add
inc
fwait
call
push
pop
aam
iret
mov
dec
add
shrl
jbe
mov
pop
iret
mov
mov
adc
jg
fld
xchg
mov
movsl
shlb
outsl
dec
sbbl
mov
pop
pop
mov
and
and
pusha
push
sbb
inc
cmp
xchg
shlb
cli
jp
in
inc
sahf
inc
xchg
jmp
or
cs
js
xchg
shufps
xchg
mov
loopne
cmp
aam
jnp
loop
mov
movsl
enter
imul
jnp
rcrb
jae
push
or
dec
mov
iret
sbb
jo
fimuls
and
test
or
imul
and
test
cmp
ja
mov
clc
xchg
mov
lock
out
xor
cmp
sbb
add
addl
fadds
lods
pusha
or
dec
adc
push
jp
js
fsubs
cmpsb
fistpl
or
shl
inc
es
daa
ret
xchg
mov
gs
das
push
cmpsl
push
aaa
lock
in
scas
sub
cmp
mov
out
push
mov
xchg
aad
test
pop
inc
out
adc
data16
je
jl
mov
sti
sbb
xchg
je
dec
cmpsb
pop
das
test
into
push
push
mov
es
insl
fwait
out
inc
imul
stos
into
lods
pop
jbe
mov
sub
xchg
mov
int3
xchg
pop
mov
sub
xor
cmp
jg
cmp
sbb
jb
je
jo
adc
or
in
or
cmp
movsl
adc
sub
mov
push
mov
mov
inc
lods
iret
cli
int3
push
sub
loope
negb
sbb
cwtl
jnp
add
jo
sbb
ss
shll
mov
xchg
fstpt
jge
adc
testb
dec
dec
fcomps
pop
out
les
leave
cmp
ds
xor
mov
hlt
xor
or
mov
aaa
sbb
jge
pop
push
loop
xor
cmpb
xchg
das
cmp
std
das
push
pop
loop
sub
jnp
dec
cld
rcrb
and
jmp
call
cmp
ljmp
cltd
xchg
jmp
loope
xchg
dec
inc
aam
movsb
add
push
cwtl
daa
cld
push
pop
push
sub
adc
or
ret
dec
push
jg
jg
repz
or
ret
repnz
mov
mov
adc
xchg
inc
mov
sub
lret
sti
xchg
sbb
and
pop
lret
mov
repnz
imul
out
mov
pusha
pop
adc
jnp
mov
int3
outsl
mov
scas
stos
or
mov
sbb
mov
add
pop
lahf
xor
test
pusha
dec
stos
sbb
xor
lahf
stos
ljmp
sbb
test
mov
lahf
adc
lock
cmpsb
addr16
or
js
and
mov
fsub
xchg
scas
popf
push
push
xor
fisttpll
mov
popf
xor
push
xor
pushf
dec
inc
xor
jnp
and
sbb
rcrl
call
in
and
hlt
aam
sbb
fsubrl
jo
pop
jl
lods
dec
cmp
je
pushf
sub
sbb
mov
add
fimull
pushl
subl
mov
call
xchg
sbb
das
xor
das
jge
fisubl
popf
mov
ljmp
fsub
rolb
in
movsl
sti
movsb
mov
lret
inc
scas
jb
inc
out
xchg
lods
jp
push
mov
cli
ret
cmpsl
pusha
dec
add
mov
inc
xor
push
cmpl
sbb
mov
movsb
movsl
cmpsl
jl
push
xchg
push
int3
mov
push
mov
xchg
daa
repz
sub
mov
inc
mov
sti
inc
rol
lods
push
fsubl
cmpsl
dec
or
jae
and
adc
and
popa
add
aam
mov
cmp
xor
push
mov
rcrl
popf
sbb
test
mov
outsl
inc
xchg
shlb
lods
lcall
pop
insl
inc
xor
and
cmp
mov
adc
adc
in
mov
sub
cmpb
fs
pusha
push
mov
scas
pop
imul
imul
ret
insb
add
sub
inc
outsl
pop
fstenv
pushf
mov
pop
fdivr
dec
scas
in
shl
jle
sub
xchg
cmp
push
sbb
daa
push
mov
xlat
xchg
and
push
call
clc
and
pop
cltd
xchg
xchg
push
adc
pop
jge
sub
or
in
rorb
bound
shlb
inc
out
stos
lock
cmp
jno
sbb
jne
and
sbb
cs
xor
lret
sub
loop
cs
cmpsb
jmp
mov
adc
insl
mov
fcomps
testb
mov
jb
mov
shrl
inc
fdiv
and
adc
ljmp
scas
ds
dec
sub
scas
xchg
aaa
lahf
bound
popf
fisubl
adc
jo
ret
lret
bound
mov
dec
sbb
test
or
xchg
shlb
data16
loopne
out
mov
and
inc
pop
scas
mov
testl
mov
sbb
ret
fcmove
enter
add
das
add
sbb
fwait
pop
fsubs
sbb
out
pop
ret
mov
fdivrl
add
jbe
and
xlat
popa
test
mov
dec
add
and
jbe
iret
pushf
dec
and
pop
mov
fcmove
and
and
lahf
gs
jmp
mov
stos
and
sub
or
iret
repnz
ss
sub
jne
add
xorl
jge
dec
and
xchg
or
adc
ret
dec
add
scas
pop
call
es
dec
popa
rcrb
inc
cmp
sti
xor
xor
and
je
dec
shrl
ret
inc
mov
je
sub
loope
adc
or
xchg
dec
xchg
test
dec
dec
xor
stos
iret
xchg
mov
sub
lret
push
sbb
jmp
and
in
ret
ljmp
leave
xchg
add
add
lods
sti
iret
js
insl
mov
aam
or
lods
icebp
add
fldl2t
xchg
push
mov
mov
repnz
inc
inc
pushf
push
mov
add
ret
or
cli
loopne
iret
cmpsl
jmp
pop
sarb
dec
loope
sti
nop
or
and
or
pop
out
mov
dec
or
mov
jmp
loop
jne
jns
mov
push
and
jb
jmp
out
and
test
test
int
cli
cmp
jne
sub
xor
push
and
cwtl
in
push
and
hlt
and
adc
or
or
hlt
loope
in
clc
pushf
xchg
sub
xchg
imul
mov
xchg
cwtl
dec
inc
jb
push
sbb
dec
sub
and
pop
ret
cltd
sub
jl
cwtl
mov
out
out
fld
mov
fistpl
ss
mov
stos
pop
fistpl
or
shll
adc
andl
insb
cmp
mov
xor
int3
jno
aam
imul
fisubs
cmp
mov
bound
cmp
add
in
andps
push
repnz
inc
int
mov
loop
xchg
adcl
mov
xor
or
mov
sub
ret
inc
push
mov
js
std
xchg
push
dec
or
scas
pop
or
and
mov
nop
pop
and
xchg
imul
inc
imul
stc
xchg
cmpsb
out
push
push
pop
sub
jp
std
mov
ja
mov
rcrl
cli
push
xor
push
insl
aad
outsb
mov
pop
test
push
jne
hlt
push
lret
adcb
insl
sarl
mov
xor
std
int3
dec
int
jl
aad
mov
pop
cwtl
mov
add
dec
pusha
test
repz
pop
lock
int3
ret
dec
xor
and
mov
imul
in
jo
xchg
out
cmpsb
daa
pop
push
push
loopne
cltd
in
xchg
fcomps
jae
fildl
dec
pop
and
jmp
xor
in
pop
push
or
add
add
jp
roll
cmp
iret
stos
inc
add
jnp
rcl
shl
jmp
mov
hlt
imul
xchg
shld
stc
dec
stc
mov
and
push
adc
sub
adc
addl
xchg
or
nop
sbb
decb
jge
jmp
and
movsb
cwtl
ds
lret
mov
adc
sub
jge
mov
cs
int3
ss
aam
test
inc
or
push
mov
cmpsl
jmp
mov
sti
mov
leave
jecxz
inc
jmp
stc
cmp
sub
out
inc
xor
cmp
push
pop
shlb
ret
popf
movsb
cmp
mov
pop
mov
cmpl
lahf
mov
or
push
sub
dec
arpl
scas
xchg
pop
and
xchg
out
add
add
dec
lret
lods
cmp
dec
incl
push
push
lods
mov
mov
mov
sbb
cmp
xchg
loope
outsb
out
pop
mov
mov
xor
stos
shll
ret
add
jo
fdivrl
ja
add
inc
or
sub
pusha
pop
sub
loopne
sub
cld
inc
mov
arpl
sub
addb
sahf
andl
cmpsl
xor
pop
popf
jnp
fcmovb
xor
add
hlt
pop
push
test
inc
enter
ds
or
inc
push
add
xchg
add
loope
mov
add
rcrl
adc
in
cs
sbb
fistl
in
jp
or
dec
cltd
sub
icebp
jg
dec
rorb
push
jg
or
cmp
sti
mov
or
dec
mov
fld1
sub
cmp
fiaddl
std
movsb
xor
add
sbb
jecxz
cmp
cld
lods
push
inc
lods
mov
cmpsb
addr16
xchg
jg
lods
adc
lods
fmul
ds
push
cmc
push
ss
ss
add
mov
sub
mov
or
dec
cld
mov
cmpb
mov
xor
inc
pop
xor
jae
push
jnp
mov
das
and
leave
and
scas
fs
arpl
stos
pop
test
cmc
movsb
out
push
stos
ret
pusha
jb
xchg
sbb
and
jno
aaa
inc
popf
pop
xor
jne
mov
es
adc
in
push
pop
jl
mov
loope
jg
hlt
sub
aaa
push
push
imul
jg
lods
rcrb
das
fs
push
or
in
cmp
add
cli
or
sub
int3
mov
pop
adc
aas
shrb
popa
jmp
xchg
xchg
lret
mov
movsl
test
sbb
or
aad
push
mov
jmp
dec
je
and
flds
pop
addl
lock
sbb
sub
push
in
fistpl
loope
mov
xchg
bound
dec
data16
in
movsb
out
dec
aas
test
hlt
les
lea
cmp
inc
in
push
jmp
into
out
ljmp
pushf
or
mov
popf
inc
mov
cld
or
mov
dec
inc
aaa
xchg
aaa
adc
dec
out
clc
mov
and
mov
adc
jge
sub
out
mul
push
fnstsw
mov
and
xor
insb
std
in
lds
sub
sbb
xchg
cmp
pop
movsb
sbbb
arpl
scas
cs
js
jb
in
iret
push
in
sbbb
jge
push
andl
mov
jecxz
cmp
adc
add
gs
xor
adc
jg
ljmp
stos
repz
test
icebp
add
test
jb
pop
nop
dec
cmc
cmp
fbld
mov
xor
dec
add
pop
push
mov
testb
xchg
scas
pop
fcomps
push
repnz
or
sub
call
jno
adc
lods
out
stos
aad
add
mov
ret
shlb
adc
or
mov
jbe
pusha
and
imul
jno
and
jae
add
sub
lahf
pusha
daa
clc
jle
hlt
sar
mov
int
or
pop
lret
arpl
fcoms
loop
lock
mov
xor
xchg
fwait
fs
sub
std
addr16
lret
mov
imul
and
stos
mov
sbb
lods
push
das
std
loopne
into
scas
push
pop
lea
stos
mov
and
push
scas
ret
mov
inc
scas
jnp
mov
pop
mov
mov
xchg
xchg
aad
jp
ds
push
pop
test
arpl
lcall
or
xor
mov
ja
aad
jae
push
adc
test
jl
jg
stos
add
and
xorl
ds
loop
mov
addl
aas
adc
mov
aas
sbb
mov
xchg
mov
cmc
lret
ljmp
hlt
or
dec
sbb
into
xchg
dec
mov
mov
out
stc
push
pushf
cmp
js
in
lret
mov
and
sbb
jle
pop
xrstors
iret
pop
inc
xchg
in
jp
or
push
imul
stos
lods
aam
mov
call
mov
sub
fnstcw
mov
cmpsb
jo
and
std
cmp
xchg
wrmsr
repnz
or
ficoms
jl
sub
sbb
test
cltd
data16
sub
lcall
xchg
ja
stos
loopne
mov
jle
out
push
mov
lds
jns
mov
stc
clc
in
movb
push
xchg
and
iret
repz
insl
loop
or
xor
add
mov
mov
sbb
add
fsts
xor
pop
sub
out
les
adc
adc
das
jmp
jno
popa
jmp
cld
cmpsb
sub
xchg
sarb
scas
push
add
push
cltd
inc
mov
inc
cmp
xchg
in
mov
pusha
cmpsb
je
inc
pop
adc
lock
call
inc
jb
shrl
sub
fidivl
xor
lock
or
mov
pop
push
push
cmpsb
pop
rorl
sti
mov
cld
mov
fsubrp
adc
fidivrs
andb
jecxz
mov
cmpsb
popa
or
push
lret
lret
sub
test
lret
fcomp
sarb
ds
les
rorb
test
shlb
sbb
jno
jl
push
sub
add
xlat
and
push
mov
test
ret
leave
jo
pop
xor
sub
jae
adc
mov
cltd
lods
int
and
dec
rcr
or
dec
xchg
call
call
popf
rorb
mov
xlat
das
faddl
sbb
imul
imul
jns
push
aad
mull
dec
jno
jns
es
push
xor
test
pop
cmp
dec
std
shll
adc
std
stc
int3
push
push
dec
hlt
lahf
out
xlat
sti
fistpl
ds
jno
inc
pusha
test
inc
push
push
mov
insl
xor
repnz
add
or
popf
inc
lods
pop
je
jg
cmc
xlat
mov
rcr
fucomip
pop
jecxz
push
iret
cli
icebp
cld
adc
inc
mov
movsb
cmp
in
jno
inc
lds
xchg
xchg
cmc
pop
cld
les
inc
mov
add
jo
stc
rcl
inc
inc
psrad
inc
pop
clc
fdivp
dec
inc
bound
test
push
inc
dec
daa
mov
mov
and
sbb
mov
jg
and
enter
dec
xchg
test
inc
jno
add
aad
and
mov
or
inc
lcall
lea
mov
out
push
imul
push
pop
cmp
pop
dec
cmpsb
push
es
ljmp
push
add
dec
mov
dec
addr16
nop
add
ret
in
adc
push
scas
push
and
mov
push
mov
and
mov
jmp
xchg
movsl
mov
mov
xchg
jmp
movsl
pop
mov
mov
lahf
pushl
jae
in
ret
cs
std
dec
pop
push
pop
mov
mov
cwtl
jnp
fiaddl
pop
mov
add
cmp
pop
add
inc
scas
es
jg
pop
dec
add
push
push
mov
add
pop
stc
sbb
icebp
test
xchg
jp
and
and
and
jne
repnz
sti
dec
shr
in
or
clc
les
jge
xchg
mov
mov
loop
xchg
pop
lcall
ror
xchg
push
aas
mov
inc
fisubrl
xor
xor
push
ret
jno
ja
dec
repnz
lahf
pop
pop
fcompl
mov
incb
sub
pop
sbb
jbe
rorb
adc
push
pushf
in
push
call
popl
jge
jno
orl
test
sbb
addr16
xchg
test
xor
mov
or
rclb
pushf
fisttpl
pop
es
inc
flds
rcrl
pop
cmpsl
out
add
adc
scas
lea
and
sahf
cmc
cmp
clc
pop
loope
mulb
dec
inc
inc
les
in
xor
lcall
push
bound
push
xor
in
fisttpl
pop
addb
das
add
mov
push
xchg
popf
xor
pushf
add
dec
test
sbb
lcall
push
mov
out
dec
ud0
jmp
jnp
pop
dec
and
and
stos
add
cmp
xlat
add
jg
call
push
in
mov
push
add
pusha
les
dec
daa
adc
sbb
mov
jbe
fidivs
and
out
ja
and
jecxz
ss
ds
bound
call
leave
arpl
jecxz
inc
or
push
push
fs
int
mov
cmpsb
clc
xchg
inc
call
cmp
out
dec
dec
inc
je
or
cmp
shlb
sbb
lea
dec
sti
sbb
pop
jae
cmp
loope
jl
je
cmp
pop
or
mov
jns
and
push
mov
mov
lret
xor
push
mov
ret
int3
inc
out
sub
xor
mov
cmp
mov
or
and
pop
out
push
adcl
mov
push
out
cwtl
sub
addr16
stc
aam
cmovl
stos
lods
dec
lret
mov
cli
adc
cli
mov
pop
movsl
out
mov
xor
mov
sub
insb
xchg
sub
jae
js
xchg
dec
movsl
add
dec
push
push
insb
push
mov
lcall
mov
add
div
or
xor
inc
ret
popf
and
out
shlb
stc
mov
fldcw
pop
lock
cld
pop
xlat
xchg
lods
fwait
and
xchg
aas
outsl
outsl
mov
pop
push
andb
inc
pop
stc
push
out
lea
in
inc
or
push
sub
fdivr
pop
cmpsl
or
xchg
jge
repz
lret
mov
pop
rol
test
pushf
dec
xchg
mov
xor
push
and
out
add
xor
sbb
stc
pop
inc
cli
pop
stc
pop
sbb
ds
out
nop
sub
inc
bound
in
add
and
bound
pop
sub
scas
outsl
mov
roll
jo
popa
sub
pushl
lods
dec
in
out
jg
lahf
rcr
sbb
pop
mov
add
mov
fsts
into
arpl
mov
fprem1
sub
out
adc
sbb
aaa
clc
test
cmc
test
and
addb
dec
popf
mov
xchg
mov
out
lods
cmp
mov
jp
or
ret
shrl
sub
dec
hlt
in
jb
jecxz
cmpsl
mov
imul
sbb
je
inc
dec
cmpsl
scas
stc
daa
push
jbe
int
or
add
fsubrs
inc
ficompl
and
inc
outsb
dec
inc
xchg
add
mov
iret
xchg
jns
lahf
dec
cmp
pop
xchg
int3
push
mov
or
jp
js
xchg
pop
cmp
faddl
pushf
ljmp
push
cwtl
jns
mov
movsb
mov
add
in
sub
aad
lods
cwtl
jbe
pop
rcl
push
cs
jl
ljmp
pop
adc
bound
mov
lret
fldln2
pop
push
sahf
xchg
ljmp
pop
mov
fmul
jbe
inc
xchg
pop
pop
mov
fmul
push
movsb
xchg
mov
sub
sbb
mov
jmp
dec
push
adc
push
lahf
xchg
cli
xor
inc
jg
scas
clc
into
enter
or
popf
adc
mov
jl
insl
adc
data16
sbb
and
or
das
pop
add
dec
loopne
dec
push
movsl
and
in
aad
ficoms
cmp
mov
adc
mov
mov
jg
imul
mov
adc
test
lret
test
fistpl
popa
neg
movsl
scas
daa
in
xchg
orl
aad
call
sahf
pop
test
cld
lret
mov
push
aaa
push
dec
adc
mov
std
mov
dec
test
imul
loopew
fcmovnu
ficoml
pop
iret
lods
loop
mov
std
out
loopne
add
aas
jb
inc
or
dec
mov
and
cmc
pop
push
sub
sbb
pop
shll
orb
jnp
adc
aas
xor
sbb
movsl
cld
out
xchg
lock
outsl
xor
pop
rclb
xorb
out
fwait
hlt
popl
daa
ret
jge
popf
pop
inc
mov
mov
jns
nop
or
cmp
mov
pop
mov
mov
in
test
les
insl
and
mov
movsl
mov
jno
mov
dec
add
imul
push
filds
shlb
dec
test
xchg
add
cmp
inc
mov
addr16
sub
inc
pop
js
inc
das
stc
icebp
stos
dec
jae
clc
out
sbb
or
add
adc
xchg
les
test
sbbl
incl
in
xor
push
sbb
pop
push
pop
mov
lods
mov
mov
out
xchg
in
fs
mov
pop
mov
movsb
mov
or
sub
fimuls
movsb
out
sahf
inc
push
mov
add
icebp
pusha
mov
imul
lea
cmp
andl
cmpsb
add
fs
inc
inc
xchg
dec
mov
sub
cmp
pop
fidivs
mov
std
pusha
xchg
mov
jnp
push
and
adc
jb
add
std
data16
cmp
or
push
int
and
and
pop
push
aas
push
sahf
dec
add
push
stc
mov
jge
fnsave
sbb
adcl
rolb
mov
dec
pop
sbb
or
xor
mov
and
mov
in
lret
ret
sarl
push
fcoms
outsb
outsb
insb
dec
mov
jmp
jo
addb
mov
push
rorl
fcomps
scas
orl
push
aam
mov
mov
loop
cmpsl
movsl
repz
xor
jbe
inc
pop
add
or
insl
jne
mov
dec
mov
xchg
ja
jne
jae
insl
push
out
imul
iret
shrl
loop
insl
adc
sbb
addr16
sbb
pop
iret
cmpsl
idivb
cmp
adc
pop
add
push
js
mov
dec
and
mov
pop
cli
xchg
push
add
scas
hlt
cmpsl
lret
or
sbb
xor
push
ficoml
xchg
xchg
mov
push
xor
push
mov
adc
adc
rcl
lds
mov
into
mov
nop
fs
push
mov
push
nop
imul
js
mov
lcall
inc
xchg
mov
mov
aad
sahf
in
push
cmp
mov
ja
pusha
and
push
int3
jnp
data16
mov
lret
xchg
int
enter
pop
adc
ds
arpl
add
mov
cmp
icebp
jp
pusha
push
dec
mov
lods
xchg
push
int
pop
call
push
out
aas
and
cmp
int3
loope
jmp
jae
inc
in
stos
iret
nop
inc
dec
sbb
mov
outsb
fs
fucomp
xor
sbb
shlb
aam
jbe
xchg
js
pop
in
insl
add
xor
inc
ljmp
in
ss
and
loopne
mov
dec
testb
int3
rcrb
dec
xchg
outsb
insl
mov
test
lret
mov
aam
sub
cmp
add
fiadds
or
or
cmpsb
pop
pop
lods
jge
inc
ja
dec
sub
inc
daa
add
addr16
pop
mov
movsb
mov
push
lods
inc
icebp
outsb
fnstcw
stos
lret
fisubl
mov
nop
pop
cmp
adcl
mov
dec
shrl
subb
mov
push
iret
or
in
pop
insb
sbb
ja
jns
shrb
xchg
in
sub
movsb
iret
lret
add
mov
lods
ljmp
jns
jnp
loop
or
sbb
adc
ss
jmp
and
pop
into
sub
rolb
inc
shrl
daa
mov
cmc
dec
sub
ret
sub
mov
or
fcoms
push
mov
sbb
call
inc
push
xchg
jne
subl
arpl
mov
dec
leave
mov
sbb
fsubr
fcmovnb
out
or
nop
mov
addr16
lret
jge
shlb
pop
lahf
mov
mov
add
mov
in
xchg
pop
int
cld
mov
es
je
sbb
imulb
incb
pop
lods
add
push
and
aaa
sub
mov
fstpt
addr16
movsl
jmp
aad
jbe
jno
flds
ret
mov
cmc
dec
lret
pop
and
or
bnd
arpl
imul
xchg
loope
das
pop
pop
sbb
push
and
xchg
pop
sub
fildl
decl
mov
lock
or
outsb
pop
xchg
inc
mov
push
int3
fsubrl
xlat
es
pop
add
js
and
scas
or
bound
inc
sti
xor
and
les
pushf
adc
adc
push
jl
xchg
incl
icebp
addr16
or
mov
cli
dec
out
push
pop
das
inc
pop
lods
popa
dec
rolb
mov
xchg
sahf
adc
adc
out
add
add
bnd
pusha
out
out
les
mov
mov
push
jne
fidivl
pop
inc
or
inc
and
arpl
nop
scas
push
imul
out
sbb
xorl
std
hlt
pusha
jp
jle
and
mov
repnz
pushf
movsl
mov
in
mov
in
fstps
aad
cmp
lret
mov
push
test
pop
jp
cmpsb
repz
mov
dec
jmp
pop
or
jecxz
inc
cld
lds
movsb
xchg
leave
mov
mov
xor
fsubr
aam
xchg
stos
dec
stos
ja
mov
in
pop
sbbb
ret
adcl
aam
fisttpll
out
test
ret
call
push
test
or
mov
movsl
and
out
push
cmp
cwtl
bound
cmp
push
mov
mov
mov
adc
subl
repnz
cmc
clc
lret
jo
js
inc
xchg
lods
jmp
push
das
stos
jg
out
lods
jge
inc
enter
sbb
je
addr16
repnz
xor
popa
mov
cmpsb
inc
aad
test
xchg
mov
cmp
stos
imul
or
ror
lahf
lahf
lret
sbb
adc
dec
push
pop
mov
add
dec
aaa
sub
shll
xor
add
in
push
or
cmpsl
je
adc
xor
xor
call
jle
cmc
mov
sti
imul
pop
movsb
jge
fidivl
testl
sub
stos
imul
sub
jne
movsl
sahf
notb
loop
xchg
jo
adc
pushf
add
adc
push
mov
cmp
je
push
mov
in
adc
aaa
repnz
cs
inc
insb
cmp
hlt
sbb
bound
push
inc
pop
stos
sbb
dec
enter
cmpb
cmp
movsb
mov
out
aad
addr16
addl
out
push
aaa
test
xchg
jge
iret
lds
xchg
xchg
push
nop
daa
clc
xor
mov
dec
sbb
sub
popf
xchg
push
popf
lahf
stos
cmp
lds
mov
mov
or
mov
jp
push
dec
clc
xchg
inc
rolb
mov
test
mov
mov
loopne
cmp
fstps
mov
cmpsl
push
adc
adc
lods
sbb
stc
mov
push
jae
and
xchg
std
das
add
dec
dec
movsl
add
xor
into
mov
loope
dec
inc
mov
outsb
and
mov
icebp
out
iret
pop
repnz
lahf
outsw
nop
mov
or
movsb
lret
sti
xor
cmp
fwait
cmp
push
jo
cmp
lret
sbb
jle
jmp
mov
aaa
push
sbb
fwait
sub
cmpsl
mov
mov
mov
insl
mov
arpl
cmpsl
or
sbb
movsb
mov
fs
push
or
push
sub
xchg
adc
in
cmc
sbb
cmp
shl
xor
fstl
inc
sbb
loopne
aas
pop
pusha
daa
subb
xor
add
mov
push
jae
mov
cs
fcmovbe
sbb
pop
mov
jmp
lds
xor
insb
cmp
mov
popl
mov
mov
mov
or
sub
rcrl
dec
xor
xchg
dec
lock
das
in
fidivl
push
pop
pop
dec
mov
lahf
push
cmp
mov
cmp
pop
insl
out
loopne
push
enter
les
loop
enter
mov
ficomps
ret
call
adc
dec
mov
jne
cwtl
mov
pop
sbb
insb
dec
mov
dec
ret
jmp
je
mov
sbbb
and
test
pcmpeqb
inc
push
into
lea
fisubrs
data16
xor
xlat
pop
in
mov
je
lcall
repz
incl
insl
or
push
jmp
push
cmc
js
and
push
loop
outsl
and
scas
sbb
popf
leave
test
cld
or
stc
loopne
mov
xchg
mov
inc
xchg
and
cltd
push
aaa
adc
mov
lds
int3
insl
add
jle
lcall
cmp
jg
jp
sbb
cmpsb
xor
adc
or
dec
xor
repnz
mov
add
cld
mov
sub
popa
insb
mov
and
ret
scas
dec
or
jbe
lahf
or
push
iret
outsl
push
or
sbb
mov
stc
cmp
aas
rclb
pop
mov
cmp
jecxz
jecxz
iret
mov
cwtl
adc
push
xchg
imul
fs
ret
lcall
jecxz
dec
mov
outsb
dec
push
push
push
or
lods
xor
data16
lock
jne
jge
imul
or
imul
into
in
xchg
push
enter
lcall
pop
in
mov
imul
dec
mov
pop
cmpsb
test
scas
iret
mov
pop
mov
imul
iret
je
jnp
fdivrs
jg
loopne
test
mov
mov
in
add
sbb
stos
pop
cmp
loope
dec
xor
fistps
mov
mov
clc
mov
popf
and
adc
cmp
mov
xor
repnz
sub
scas
aas
push
cmpsl
mov
or
outsb
rolb
mov
push
inc
and
imull
das
inc
fistl
loope
pop
xor
jns
int3
jle
push
mov
inc
cmc
pusha
xchg
setle
lcall
data16
aaa
mov
jne
faddl
mov
scas
sahf
adc
mov
inc
jno
jno
xor
and
rolb
aam
mov
inc
xor
sar
mulb
gs
outsl
rcrb
fdiv
mov
fyl2x
sbb
addb
inc
call
mov
and
jp
mov
cmp
call
push
pop
and
xor
pusha
sub
mov
xchg
pop
adc
pop
popa
xor
cmpsb
pop
sbb
das
or
mov
dec
in
popa
jmp
js
stos
hlt
daa
test
cmp
icebp
mov
add
xor
out
pusha
clc
cmp
hlt
leave
inc
mov
lahf
and
inc
sbb
push
mov
rcrb
cltd
sub
outsl
push
xor
sub
jecxz
into
int
pusha
fs
push
push
cmpsb
push
addr16
repnz
or
mov
iret
dec
mov
lock
insl
mov
sbb
cld
sub
jno
decb
ss
shlb
ror
icebp
cli
insb
sarb
dec
xchg
mov
inc
mov
ja
sahf
cwtl
ficoms
fsubrl
sbb
dec
insb
mov
xor
jnp
je
pop
addl
and
rorl
adc
push
popa
ljmp
lahf
mov
cwtl
pop
iret
sbb
sbb
arpl
dec
sbbl
into
add
jle
in
jbe
dec
xchg
aaa
pusha
std
cmpsb
mov
push
iret
cmp
in
xchg
add
jmp
pop
daa
mov
clc
mov
movsl
jp
loopne
mov
mov
or
jmp
jns
out
dec
push
fdivs
jg
pop
stos
sbb
mov
inc
add
push
stc
jmp
scas
push
push
pop
cltd
pop
movsl
jb
call
pop
lret
loopne
push
mov
fcomps
fdivrs
fdivs
outsb
pop
xchg
add
imul
add
dec
mov
daa
and
mov
and
lcall
into
pop
push
hlt
adc
je
cwtl
std
into
pop
out
inc
repz
inc
pop
lahf
mov
loop
jo
dec
pop
or
add
pop
inc
add
sbb
jg
js
adc
test
shrl
fisttpl
push
loopne
stos
dec
and
mov
cmp
filds
pop
mov
test
cmp
or
sub
aas
mov
dec
sub
mov
cld
sub
insb
and
lods
xor
pop
fcom
gs
mov
pop
jecxz
inc
repnz
pop
popa
jbe
push
pop
cmp
and
mov
out
push
das
cmp
sbb
mov
aaa
xchg
js
addb
mov
sahf
mov
cmp
in
in
in
enter
inc
sahf
mov
adcb
sub
das
fisttps
bound
mov
std
pop
loop
pop
or
xchg
xchg
outsb
dec
ret
negl
pop
int3
cmp
xorl
pop
and
sbb
and
pop
jmp
sbb
push
cltd
xchg
and
jno
out
aad
outsb
sti
ja
mov
fcomps
pop
cltd
repnz
adc
aas
ret
sbb
dec
fsts
rolb
adc
in
adc
push
je
or
fisubl
and
cmpsb
cmp
loope
ljmp
xor
push
jbe
icebp
adc
add
adc
lret
mov
das
inc
imul
cmp
out
add
push
sbb
sbb
fcomp
pop
push
mov
or
inc
mov
lock
push
jne
cld
add
popa
addr16
cmp
cmc
cmp
rcll
out
dec
popfw
cmpsl
mov
pop
gs
dec
mov
inc
sbb
lods
lret
psadbw
dec
sbb
int
cmp
clc
mov
ljmp
xcrypt-ecb
cmpsl
int3
sbb
mov
xor
add
pop
das
daa
xchg
dec
cs
out
icebp
mov
dec
loope
lock
mov
flds
lock
mov
xor
xlat
jecxz
sbb
lcall
inc
aaa
negb
push
add
push
out
stc
and
and
fnstenv
aas
popf
popf
cmc
push
cmp
adc
outsl
test
aas
sub
inc
sub
pop
mull
push
mov
jns
es
push
imul
sub
das
xor
jnp
xlat
dec
pop
aaa
es
inc
outsl
pop
aam
pop
lret
outsb
enter
or
push
jl
repz
lods
sar
repz
test
xlat
pop
adc
or
lcall
movsl
jae
push
cmpsl
cs
xor
shlb
adc
loopne
pushf
out
movsl
lret
inc
test
dec
jae
sbb
sti
and
insb
outsl
shll
jae
fldl
pop
mov
sub
inc
and
push
lcall
je
mov
jge
js
adc
inc
imul
mov
aam
xchg
pop
pop
cmp
dec
sbb
idivl
lods
cs
jmp
jns
dec
hlt
out
or
lods
or
push
push
sbb
mov
mov
ja
sub
sub
xlat
lahf
mov
dec
aad
xor
mov
aam
sbbl
and
iret
cs
fistps
dec
nop
push
js
ds
push
xlat
fdivs
les
int3
out
fstpl
gs
fldcw
loop
xchg
pop
push
mov
or
ficomps
test
in
and
nopl
jnp
pop
das
fcoms
orl
imul
cwtl
insl
pop
ds
sahf
call
test
rcrb
fs
mov
push
insb
dec
mov
int
xorl
cmp
mov
lret
mov
inc
cmc
and
out
mov
cmp
nop
out
adcb
out
xor
push
sub
xchg
mov
mov
es
push
fisubrl
push
inc
lret
cltd
arpl
loop
xchg
dec
xor
mov
out
push
sub
and
mov
pop
fcmovnb
dec
gs
xor
jecxz
dec
sub
jnp
outsl
int3
repnz
xchg
enter
fnstsw
cmc
jmp
jne
sub
jnp
xchg
push
sbb
lds
fisttps
push
mov
cmpsb
inc
xor
jge
das
jmp
test
cmp
or
add
insl
jbe
repnz
xchg
jg
jmp
in
mov
lods
je
lea
dec
xor
mov
insl
and
cmpsb
xchg
mov
adc
mov
push
fwait
or
inc
arpl
fwait
and
adc
fidivrs
inc
jbe
jl
enter
xor
xlat
lods
and
ds
fmuls
es
jmp
push
test
nop
dec
and
not
imul
shl
adc
das
lock
les
data16
es
and
test
es
leave
pushf
sub
xchg
sub
push
inc
cmp
in
roll
pop
sub
fstl
scas
mov
test
into
push
ja
add
jp
push
test
pushf
cli
dec
mov
test
cmp
setb
clc
enter
xchg
cltd
mov
xor
pop
adc
testb
mov
xlat
fstps
mov
cld
mov
mov
rcrb
andl
ret
push
enter
cmpsl
ja
dec
rorl
repnz
pushf
bound
arpl
dec
xor
rclb
pusha
mov
mov
insl
inc
add
xchg
jle
dec
and
pop
aas
jl
in
into
sbbb
push
dec
filds
jp
add
icebp
sbb
loope
dec
testl
dec
add
sbb
cmp
cld
push
xchg
test
sbb
das
lds
push
mov
push
sbb
xor
popa
add
movsb
fdivs
mov
inc
adc
sbb
stos
lods
dec
test
loop
jbe
aaa
xchg
mov
mov
mov
int
cwtl
cwtl
adc
popa
ret
fmul
dec
mov
popa
call
loop,pt
jmp
sub
clc
sub
aam
add
divl
add
jmp
nop
sti
fdivrp
aad
fcompl
in
or
fstps
jp
inc
fdiv
jno
mov
cmp
lock
xchg
or
sbb
outsl
xchg
jo
fmull
cmp
xchg
in
xchg
sbb
mov
sbb
jnp
xchg
notb
jecxz
and
div
mov
outsb
or
jbe
jo
pop
push
adc
cld
mov
pop
lock
stos
mov
mov
bound
adc
inc
cli
lcall
jnp
pop
or
dec
mov
fldt
dec
push
nop
cmpsl
cmp
push
mov
xchg
outsb
mov
icebp
adc
scas
jns
dec
mov
ja
and
push
cmp
stos
pushf
pop
ds
inc
or
add
std
cmp
adc
in
jnp
test
cltd
adc
pop
call
push
lret
fistpl
and
ret
daa
jae
and
cmp
fs
or
inc
pop
push
jge
das
push
xchg
and
sbb
or
xchg
or
xor
push
test
dec
lcall
sbb
ja
mulb
ds
or
ja
jecxz
xchg
sub
xlat
sbb
inc
add
or
mov
clc
dec
push
test
ljmp
jno
xchg
cmpsl
push
test
and
or
mov
xchg
sbb
sub
enter
inc
jns
mov
call
test
inc
cmc
je
pop
aas
out
adc
insb
sub
jno
xchg
out
sahf
pop
mov
scas
je
push
cmp
inc
hlt
jbe
aam
sub
jnp
sbb
xchg
jmp
or
mov
xor
xor
scas
in
out
mov
or
pop
add
push
jl
pop
xchg
jmp
roll
sti
popa
inc
jb
dec
sbb
push
clc
cli
jg
lcall
pop
cmp
icebp
aad
jmp
repnz
stc
out
xor
cmc
mov
cmpsl
cmpsl
pop
xchg
imul
sub
sti
stos
sbb
sub
sub
pop
xchg
mov
rorl
cmp
mov
pop
out
cwtl
inc
push
lock
jg
xor
and
ljmp
xchg
mov
and
dec
lahf
in
adc
sbb
imul
arpl
aam
push
mov
mov
xchg
push
arpl
int
bnd
cwtl
add
aas
test
subb
xor
ljmp
xorb
pop
add
dec
or
lock
mov
pop
pop
xor
adc
in
arpl
movsl
pop
insl
sub
lcall
jp
dec
mov
xchg
inc
clc
inc
fwait
lret
in
xor
mov
mov
mov
idivb
and
adc
push
xor
sahf
sahf
ja
shlb
aaa
jp
mov
sub
out
lcall
rcl
cli
icebp
mov
sbb
xor
or
and
cmp
stos
lret
push
mov
aam
mov
into
sar
add
je
lret
push
int
jae
push
lret
push
rclb
sbb
cmp
imul
outsl
in
inc
cmc
imul
sbb
sub
inc
imul
fbstp
jae
sub
inc
pop
sbb
xor
cwtl
outsl
push
rclb
out
cmp
fimull
nop
sahf
mov
orb
cmp
cltd
xchg
xchg
add
push
gs
pop
cmc
cli
in
xchg
lcall
sub
xor
xor
lods
aad
popa
jo
mov
sbb
sti
aas
imul
pop
add
fs
push
xor
push
inc
ljmp
or
xor
mov
mov
jnp
jge
adc
insl
cmpsb
cmpsl
or
loope
idivl
and
lret
pop
loop
insl
push
push
push
xor
pop
push
outsl
fcompl
push
es
dec
add
sahf
loopne
push
test
cmp
js
mov
push
mov
mov
pop
xchg
movsb
cmp
repnz
cmpsb
cmc
into
inc
mov
movsl
outsb
rcl
mov
push
or
stos
jle
scas
fisubs
add
push
mov
clc
sub
inc
pop
push
mov
imul
inc
arpl
cltd
sbb
or
push
js
add
popa
jae
sbb
add
lea
add
inc
cmpsb
iret
std
arpl
add
fists
push
inc
jbe
sub
or
mov
and
mov
int
and
cmp
dec
jp
ds
inc
add
hlt
mov
ja
add
pop
dec
js
cwtl
ret
pop
test
pop
clc
incb
js
add
mov
jmp
xchg
jmp
data16
fs
fwait
mov
stc
pop
lcall
fbstp
cmpsb
imul
mov
jo
pop
adcl
test
inc
inc
sub
add
cld
mov
mov
in
inc
or
pusha
int3
mulb
pop
outsb
push
enter
aas
int
mov
push
shll
cmp
add
push
jl
sbb
cmp
cmp
push
imul
xor
test
in
pop
shl
xor
or
inc
xor
push
cwtl
sti
mov
cmc
or
or
add
icebp
xor
dec
in
mov
cmp
stos
push
fwait
add
cs
pop
pop
dec
sbb
cmp
add
out
add
mov
pop
insb
lcall
and
xchg
jmp
mov
mov
inc
insl
shlb
dec
push
mov
pop
out
rcrb
movb
push
cmp
aas
clc
pushf
and
mov
sbb
xchg
sbb
adc
cli
pop
pop
xor
mov
adc
fidivl
cmp
push
xor
mov
add
or
jbe
xor
xor
aaa
into
and
jnp
pop
lods
into
testl
das
adc
xlat
inc
pop
xor
inc
out
dec
pop
jmp
xchg
inc
jmp
cmp
xchg
mov
jbe
or
and
lret
mov
imul
nop
jmp
std
fucomp
cmp
aam
sub
ja
cmp
movhps
in
push
or
mov
push
pushf
fidivl
mov
ja
push
inc
mov
sti
imul
movsb
jo
mov
cmp
ds
lock
xor
movsb
jae
jnp
sbbb
mov
jle
jle
hlt
pop
jno
outsl
cwtl
cld
pop
inc
mov
mov
pop
out
fbstp
xor
dec
fildl
sbb
jmp
loopne
out
int3
inc
lds
ret
add
mov
jg
push
mov
jno
xchg
fstpt
cmc
ljmp
cwtl
clc
cltd
loope
xchg
pop
xchg
mov
rcl
repnz
pop
ja
fiadds
mov
sbb
lahf
scas
add
pop
jl
paddw
repz
push
clc
jle
jg
cmp
cmp
add
imul
cmp
adc
icebp
loopne
cmp
xor
push
ret
xchg
incb
dec
cld
roll
mov
sbb
push
sbb
testl
push
mov
and
fstps
mov
fistps
xor
movl
outsl
test
adc
fcompl
inc
sti
mov
or
rcr
xchg
ret
mov
cmp
xor
sti
test
and
xchg
xchg
jmp
jns
fimull
scas
inc
inc
cld
jecxz
add
lock
leave
insb
mov
mov
ljmp
add
push
pop
cltd
ja
adc
mov
mov
adc
jle
fstps
shl
cmp
lcall
jnp
imul
mov
inc
fdivr
add
jbe
test
stc
pusha
repnz
arpl
adc
jns
xchg
fistpl
outsl
jne
data16
sbb
gs
shrl
rcrb
push
mull
push
in
add
mov
jmp
and
xchg
xchg
stos
xor
adc
pop
mov
sar
ffreep
dec
add
mov
int
xchg
data16
adcb
jecxz
push
leave
out
jecxz
or
sub
test
or
fisubrl
sbbw
repz
mov
cmp
push
jnp
and
push
js
movsb
int3
sbb
jae
loop
push
aam
mov
rcll
popf
clc
sbbb
jg
or
mov
fwait
or
sub
test
mov
and
lea
jno
or
cltd
mov
sbb
in
push
add
mov
les
pop
decb
mov
shll
dec
xchg
pop
xor
dec
rcrb
and
xor
jecxz
test
push
cmp
pop
mov
js
push
cmp
add
pop
push
aaa
mov
jecxz
aam
test
sub
mov
lret
aad
pop
mov
bound
lahf
cmpsb
test
jb
xchg
mov
movsl
adc
pop
cld
sub
lock
insl
fsubl
add
and
dec
jmp
dec
pop
pop
jne
out
mov
lods
iret
pop
and
cmp
out
das
mov
inc
fstpt
loop
cmpsl
and
sbb
sbb
in
je
loope
repnz
dec
outsl
mov
stos
push
xchg
scas
dec
cmp
scas
pusha
movsl
and
repnz
inc
insl
inc
cmp
pop
fldcw
shlb
rcrb
and
push
shlb
fwait
xor
test
fwait
and
inc
ds
mov
out
mov
cltd
mov
xor
sub
cs
int
jmp
imul
jnp
mov
adc
dec
fisubrs
xchg
mov
outsl
decb
jmp
data16
das
xchg
xchg
mov
ret
cmp
idivb
mov
scas
das
add
mov
test
jne
sbb
repz
lea
jecxz
or
jmp
arpl
mov
shr
mov
xor
lods
and
adc
prefetch
ja
jae
repnz
mov
sbb
mov
cmp
xchg
mov
std
data16
fisubl
jp
loope
rcl
clc
adc
jnp
stos
or
push
adc
aam
pusha
or
xchg
out
sub
cs
sbb
subl
loop
pop
sbb
lcall
jae
or
push
outsb
loopne
adc
fistpl
mov
add
push
call
in
lods
mov
jg
aaa
pop
mov
dec
popf
mov
inc
mov
cwtl
sub
pushl
sub
subb
mov
adc
xor
pand
test
xchg
xchg
jmp
call
lcall
pop
js
dec
ljmp
rcl
cmpsb
add
inc
xchg
lcall
push
mov
mov
mov
add
popl
ficomps
mov
dec
or
dec
out
sbb
jnp
cs
pop
xor
push
mov
cmc
out
push
in
pop
ret
and
cmp
or
sbb
inc
adc
adc
lahf
outsb
pop
xchg
mov
push
cmp
shlb
sbb
outsl
push
bnd
adc
push
pop
pop
les
subl
xchg
cmp
lahf
cmpsl
jg
and
jp
ljmp
out
rorl
test
out
gs
mov
xchg
push
or
fnsave
mov
insl
mov
int3
mov
fsubl
test
rcrl
or
adc
adc
and
sub
cmpsl
jecxz
mov
push
mov
inc
cmp
mulb
add
pop
out
push
les
cmp
sti
test
pop
clc
ret
dec
in
fsubrl
aas
and
lods
fists
mov
fwait
xchg
mov
adc
test
dec
mov
mov
sub
sbb
xor
mov
aaa
icebp
lcall
in
inc
mov
das
in
lea
pop
sub
fldcw
lock
mov
dec
mov
imul
xor
mov
loope
fnstcw
push
lds
fadds
dec
mov
in
cmpsw
sub
cmp
jne
mov
sbb
int3
mov
adc
pop
push
sbb
push
nop
punpcklwd
in
push
mov
add
mov
imul
hlt
lods
add
ficoml
fsubl
dec
push
das
mov
add
xchg
push
outsb
cmp
cmpl
mov
mov
mov
inc
sbb
js
fstpt
jae
icebp
add
mov
imul
sub
mov
cli
jb
add
js
insb
aam
test
scas
inc
imul
mov
mov
lods
test
je
jno
push
pusha
mov
pop
test
fisubrs
sub
mov
add
xchg
hlt
cmp
shlb
and
fimull
in
sub
call
ljmp
jno
sub
sti
jmp
lods
clc
loopne
rcl
dec
xor
arpl
adc
les
sub
testb
outsb
sbb
cmp
sbb
fdivrs
lcall
jo
stc
mov
pop
flds
cltd
fs
and
or
fs
ljmp
sbb
shl
and
jb
cmp
mov
sub
cs
mov
cmp
adc
cmp
mov
xor
in
lock
addl
dec
mov
repz
xor
dec
and
loop
lcall
xor
rolb
lods
int
iret
add
sti
das
pop
mov
lock
dec
cli
push
jmp
leave
out
lea
sub
cltd
mov
shl
in
sarb
jge
cmp
loop
imulb
xchg
sub
or
adc
push
jo
scas
jecxz
mov
pop
cltd
fisttpl
sub
outsl
pushf
mov
imul
dec
movsb
stos
push
xchg
movsl
sub
fs
jne
or
and
mov
inc
movlps
mov
mov
xchg
jl
pop
mov
fimull
mov
mov
cmp
jge
xor
adc
mov
and
aaa
mov
loop
mov
imul
aad
sub
mov
repz
sbb
in
adc
das
mov
cld
fildll
mov
pop
xor
cs
and
sub
imull
fistl
and
out
loopne
mov
popa
fistl
test
add
mov
sbb
add
push
sbb
cwtl
into
mov
or
xchg
jo
inc
movsb
cmpsl
jecxz
add
sub
ret
into
fisubrl
xchg
test
xlat
cmp
jo
dec
and
xor
mov
ret
sbb
and
mov
push
cmovle
fcmovb
push
jno
stc
stc
nop
inc
dec
enter
pop
sub
and
js
in
xchg
not
add
loope
ret
jo
lea
imul
pop
mov
ffreep
pmulhuw
push
mov
test
jbe
test
jl
push
ret
mov
addl
and
inc
jl
xor
jno
push
xor
and
mov
sbb
iret
inc
jmp
or
push
test
adc
out
in
mov
hlt
popf
dec
inc
addr16
mov
sbb
fs
mov
push
cmp
and
cwtl
push
inc
stos
sub
lahf
daa
fcomps
data16
dec
push
mov
int3
fdivp
mov
mov
cmp
movsb
jb
aam
dec
push
outsb
dec
jecxz
divl
bound
jno
xchg
mov
ret
iret
jns
or
or
nop
adc
clc
add
xor
jae
daa
mov
in
bound
mov
mov
xchg
stos
outsl
sub
dec
das
jmp
pop
test
lods
jl
push
cmpb
fisubl
or
xchg
xor
mov
sub
aas
dec
pop
jae
mov
jnp
adc
out
adc
jne
lea
stos
iret
cmp
test
cmp
bound
jbe
ret
jbe
dec
adc
ss
stos
or
ljmp
shrl
push
stos
lods
lahf
shll
jecxz
push
and
ss
pop
fcompl
jp
and
dec
test
xchg
inc
loope
fcoml
enter
push
ss
aas
add
mov
stc
add
inc
rcll
mov
popf
lahf
inc
cwtl
enter
xchg
stos
xlat
out
push
mov
cwtl
arpl
pop
adc
inc
ljmp
sarb
mov
or
adc
fsubrl
out
test
pushf
push
mov
movsb
adc
adc
cmp
repz
insb
cmp
sbb
adc
cmp
cmp
inc
or
mov
push
arpl
loopne
and
test
xor
into
sbb
fdivrs
lcall
pusha
enter
jnp
lret
fisttpll
imul
int3
fsub
iret
hlt
orb
outsb
dec
aaa
push
sub
sub
in
inc
dec
test
adc
dec
loopne
mov
fnsave
sbb
mov
stc
outsl
dec
and
pushf
add
cmc
sub
pusha
add
mov
cld
or
jae
fdivrs
fcompl
enter
or
mov
dec
sub
xor
mov
mov
je
out
sbb
sbb
je
mov
ljmp
lahf
push
dec
sbb
sub
outsb
outsb
ss
shlb
jno
loope
xor
cmpsb
icebp
call
shll
rorl
jnp
mov
jecxz
adc
xorb
sbb
das
jo
lock
mov
insb
xchg
jo
jb
xchg
cmpsb
push
ret
call
mov
push
or
mov
xor
xlat
adc
cmp
rcll
cli
outsl
xlat
push
subb
pop
lock
jno
addr16
push
xor
aad
mov
xchg
cmp
inc
dec
dec
push
jo
addr16
cmp
xchg
pop
es
inc
or
inc
cmp
mov
push
or
sti
mov
jno
sbb
fidivrl
fs
gs
pop
hlt
andl
mov
dec
ss
inc
xchg
sub
iret
shll
or
addr16
scas
jns
outsb
push
inc
in
and
sbb
push
ret
xchg
fmulp
in
aaa
cltd
gs
shlb
insl
push
and
aaa
jp
imul
cmpsb
jg
sti
xchg
or
sub
sbb
jecxz
test
or
sarl
mov
cmp
lcall
inc
push
cmpl
mov
xchg
repnz
aad
rorb
adc
dec
xor
fs
sub
das
pop
int3
pop
mov
or
lret
jle
or
hlt
jge
and
in
pop
jae
scas
mov
dec
mov
fxch
in
scas
push
gs
xchg
mov
mov
add
pop
add
lea
jecxz
sub
and
out
repz
xchg
push
push
cmp
dec
loop
mov
sbbl
jne
mov
repz
cwtl
popa
cli
adc
xchg
leave
add
stos
not
test
inc
add
gs
jle
jb
test
xchg
fstps
add
add
cld
fwait
ror
pop
sbb
stos
or
adc
xor
sbb
cmpsb
mov
and
mov
xchg
jb
mov
outsl
imul
cmp
mov
repz
jns
lret
xor
xor
cmp
lock
push
repz
dec
push
xor
jp
int
jnp
mov
mov
in
xchg
xor
mov
add
inc
xor
mov
gs
pop
shrb
mov
xchg
insb
popa
mov
xchg
sub
pop
xchg
sbb
adc
sbb
insl
mov
mov
arpl
adc
add
jecxz,pn
scas
loope
popa
iret
xchg
pop
mov
ret
jmp
pop
xchg
inc
test
cmp
push
jae
xor
stos
sbb
subb
popa
pop
xchg
xchg
inc
xchg
mov
sub
cltd
mov
xchg
dec
lds
dec
sub
push
inc
dec
dec
in
and
jp
adc
scas
out
jo
add
rclb
out
orl
xor
in
and
fs
cmpsl
js
sbb
lods
lahf
js
inc
fildl
rolb
xor
push
arpl
jne
jle
mov
cmp
jg
xchg
inc
or
xor
testb
dec
cmp
das
lcall
dec
jae
xchg
dec
and
sarb
mov
cmp
aam
aam
push
movsb
or
test
mov
mov
aad
imul
std
neg
or
movsb
pop
lsl
pop
mov
stos
ficomps
pop
sbb
mov
shrb
jecxz
pushw
outsb
sub
sti
xchg
add
lea
pop
lret
dec
fstps
and
notb
scas
ja
dec
test
add
test
mov
cmpsb
xor
icebp
pusha
roll
and
inc
lahf
and
xor
adc
pop
mov
std
daa
push
xorl
int
fisubrs
arpl
adc
xorl
fidivrl
mov
xchg
fwait
test
jp
adc
addl
push
xor
scas
in
jno
cmp
jg
adc
or
inc
cwtl
dec
xor
mov
fidivs
ret
out
std
fimull
inc
pop
jg
sbb
pop
movsb
fsubrp
into
xchg
idivl
popa
inc
mov
pusha
cmpsb
and
pop
lret
out
pusha
pop
repnz
inc
dec
inc
dec
loope
push
mov
fnstenv
add
shll
jecxz
sbb
nop
insl
ret
push
imul
jl
les
cmc
inc
std
mov
ret
mov
insb
cmc
xorl
insb
pop
in
jns
adcl
ret
and
cmp
jae
call
inc
lock
ficomps
fucomp
dec
stos
pop
aaa
adc
dec
loope
sbb
test
repz
lahf
cmp
adc
mov
popl
in
cmpsl
pop
imul
cmc
mov
jecxz
mov
sub
xor
scas
loope
inc
mov
in
and
inc
and
ja
inc
xchg
es
adc
fisubrs
int3
adc
shrl
sub
pop
fwait
pop
xor
test
addr16
jbe
loope
xlat
push
xchg
jg
cmp
pop
or
scas
nop
pop
fisubrs
mov
sub
and
in
cs
shll
out
xor
inc
pop
jbe
xor
xor
cmp
cmp
mov
icebp
insl
jae
mov
cmpsl
int3
add
cltd
cltd
jp
aam
jns
xchg
les
inc
xor
push
testl
shll
xor
leave
loopne
sbb
pop
icebp
dec
jmp
icebp
clc
dec
xchg
cmp
daa
push
shll
rolb
scas
mov
ds
jno
outsb
notb
push
add
add
xor
jns
sbbb
ja
outsb
cltd
sub
xor
push
inc
out
mov
push
cmp
stc
aam
sar
or
jb
testb
js
jmp
inc
int
pop
fistpl
dec
mov
mov
daa
dec
adc
stos
xor
add
pop
jae
cmpsb
mov
jecxz
div
jp
xchg
pop
xchg
ret
movsb
cli
jle
mov
sbb
into
jle
sub
ret
xor
nop
mov
push
popf
or
addr16
jge
cmp
jg
xor
xor
jo
jl
incb
cmp
mov
mov
cmp
in
push
cmpsl
mov
into
or
rcrb
lcall
inc
dec
jbe
cmpsl
std
stc
xchg
in
mov
jl
xor
pop
sub
repz
mov
xor
or
lret
fs
sbb
pop
xchg
sti
icebp
call
mov
in
xchg
ds
cmpsl
vmwrite
inc
lret
jmp
mov
dec
xlat
lret
inc
aam
es
test
imul
mov
ljmp
mov
pop
shlb
test
mov
movsl
enter
or
inc
xchg
pop
pop
test
lock
popa
notl
loope
ds
ss
daa
xlat
mov
es
loopne
paddq
scas
dec
push
testb
dec
and
and
jg
dec
mov
adc
mov
repz
sahf
cltd
out
cltd
sbb
inc
out
clc
shll
stos
push
popf
addr16
cwtl
jns
inc
pop
dec
lret
outsl
mov
mov
sbb
test
jnp
outsl
cmpl
jne
incb
test
cmp
and
mov
repz
addr16
fnstsw
adc
adc
and
jle
dec
out
pop
mov
cmp
imul
call
sahf
fs
bound
add
mov
iret
out
jne
sub
jno
mov
test
sar
cmp
aad
mov
lret
mov
std
call
into
pop
mov
sub
add
dec
pop
lret
iret
test
push
sbb
sbb
subb
xor
sub
mov
nop
push
sub
js
push
adc
frstor
push
and
stos
mov
popf
xchg
pop
popf
dec
loop
loop
in
jno
add
mov
inc
insl
xor
loop
or
pop
mov
and
ficoml
jp
mov
cmc
cmp
sub
or
mov
aas
in
xor
jae
aas
adc
xchg
das
xchg
jl
decl
push
ljmp
stos
movb
aaa
cmc
adc
mov
and
xor
popa
mov
mov
loope
push
add
aam
sbb
add
icebp
sbb
sub
adc
ret
test
cmpsl
push
arpl
and
dec
mov
enter
sti
mov
stc
xor
fmuls
jmp
push
and
push
sbb
aam
pusha
in
and
test
and
cmp
cwtl
push
popa
push
ds
test
inc
lcall
mov
inc
mov
cmc
inc
cmc
sbbb
dec
fisttpl
mov
cltd
aaa
mov
pusha
mov
mov
dec
pop
rolb
push
int3
push
inc
popf
sub
and
int3
cmpsl
push
sbb
in
mov
out
fstpl
adc
sbb
xor
andb
cwtl
push
mov
adc
jge
idivl
jne
xlat
xor
mov
les
xor
dec
rcl
stos
jbe
repnz
subb
cmp
and
dec
add
mov
dec
push
jle
sub
mov
xor
aas
sbb
lods
xor
mov
leave
jmp
add
les
add
sar
push
popa
in
jnp
stc
jp
lret
jg
sbbl
pop
mov
cmp
xor
das
cmp
sar
mov
pop
inc
test
xchg
lods
mov
or
adc
rol
cmpsl
in
lcall
stc
lea
fs
repz
cmp
aam
ljmp
mov
inc
dec
cmpsb
dec
push
into
adc
std
or
cmp
movsl
sbb
pop
lret
mov
jecxz
int
or
je
int3
mov
cmp
xor
dec
aad
add
sahf
fisttpl
adc
push
stos
and
fwait
int
jne
aad
cld
or
aas
in
cld
mov
scas
lret
ljmp
pop
push
dec
push
mov
adc
dec
jo
xchg
out
xor
mov
adc
rcrl
xor
out
loop
cwtl
gs
lahf
popa
nop
mov
in
pop
cmp
popa
and
adc
inc
cwtl
mov
das
je
pop
dec
leave
jp
and
push
pop
or
pop
mov
xlat
adcl
xchg
pusha
inc
test
add
xchg
in
repz
insb
shlb
push
sbb
fisubl
add
push
adc
jnp
jl
aam
into
cmc
mov
adc
pusha
sbb
mov
loopne
fidivs
or
stc
aam
dec
inc
mov
call
ret
fwait
or
lahf
add
fcompl
xchg
xlat
add
fdivrl
out
movsl
mov
lahf
jbe
sbb
cwtl
outsb
enter
aam
mov
aaa
mov
xchg
clc
out
jg
xor
test
pop
lods
add
sub
sub
xchg
pop
jecxz
repz
and
xlat
jmp
ret
mov
or
mov
cmpsb
hlt
pusha
mov
cmp
push
cmp
iret
jae
mov
adcb
int3
in
sbb
fmul
mov
je
xchg
in
sbb
sti
lahf
xchg
jmp
cld
and
lret
incl
fisubrl
xchg
mov
aad
jecxz
mov
jge
cltd
cwtl
call
or
test
in
into
cwtl
fistl
jae
pop
lcall
jne
sub
and
std
lahf
cwtl
mov
dec
xchg
ja
push
aaa
cltd
insl
sub
adc
dec
inc
es
push
imul
jbe
mov
imul
rcr
out
xlat
roll
cwtl
bound
inc
arpl
push
es
leave
fs
int
in
push
insb
ja
or
pop
insl
mov
int
xchg
stos
pop
cmp
pop
xor
flds
nop
jg
pop
out
cld
hlt
pop
jge
cmp
mov
pop
movsl
xchg
in
push
mov
repnz
or
cmpsl
dec
fists
hlt
mov
mov
add
fsubs
jns
adc
int
and
and
cmc
push
mov
xor
inc
aam
cmp
imul
jle
jno
inc
jg
cwtl
and
push
std
pop
inc
call
sub
pop
repnz
out
inc
insb
push
push
imul
cmp
mov
int
xchg
scas
aad
cld
out
mov
fwait
sbb
inc
sbb
mov
inc
cmpsb
jno
jno
pop
add
mov
adc
mov
and
cmc
xor
pop
pop
push
push
call
add
orb
add
movsl
fdivrp
pop
dec
mov
adc
sbb
adc
rorb
add
out
aam
mov
pushf
mov
fs
cmp
aas
test
mov
jg
fdivrp
inc
xchg
ds
lahf
into
jg
sub
lret
cmp
fs
or
loopne
jbe
pop
jg
flds
cltd
rcrl
pop
lret
in
into
hlt
xchg
mov
lods
jnp
sbb
xchg
cmp
in
or
out
jmp
jns
mov
cmp
or
xchg
adc
fisubl
or
cmp
pusha
inc
xchg
mov
cmp
cwtl
call
mov
lea
test
inc
fbld
dec
fidivl
xor
dec
sbb
loop
sbb
inc
dec
hlt
sbbl
in
in
xchg
or
xor
xchg
jae
fwait
pop
adc
icebp
dec
test
push
repnz
xor
cmpb
dec
ds
add
jne
mov
and
adc
pop
inc
jbe
pop
inc
ret
push
cmp
pop
mov
pop
push
mov
dec
xchg
mov
and
mov
cs
aam
jmp
jl
inc
xor
sarl
or
stos
das
pop
pop
jle
mov
pusha
test
out
pushf
dec
jns
test
insb
cmp
push
or
or
rolb
xor
stos
call
sbb
cli
push
imul
push
repz
inc
movsl
adc
push
fprem1
mov
loope
jg
xor
aam
dec
pop
push
sub
jecxz
in
stos
andb
dec
push
out
jmp
mov
scas
xorb
mov
xchg
subl
and
push
pushf
pop
lret
imul
aam
push
adc
imul
mov
loopne
cmp
fists
imul
inc
cmp
xchg
cs
test
aaa
jb
cmp
ljmp
stos
push
popf
repz
int
mov
fldt
xchg
mov
pop
mov
mov
fwait
xchg
cld
xchg
gs
mov
ret
mov
push
notl
mov
loop
or
jg
jp
mov
popa
fs
push
or
jo
js
mov
fs
shl
or
movsb
test
cmc
repz
jne
ljmp
subb
cs
cmp
xchg
pop
cld
sub
repz
pop
cld
arpl
dec
inc
cmpsb
out
inc
sbb
xchg
add
int3
shrb
aaa
pop
push
les
mov
scas
insl
dec
out
inc
jmp
mov
push
fwait
loop
loopne
push
hlt
imul
xlat
stos
dec
pop
mov
cmp
js
adc
mov
fsubrp
cmc
inc
jecxz
daa
mov
push
int
stos
incl
into
push
sbb
and
sub
push
sub
rorl
jecxz
imul
add
xchg
add
mov
in
sbb
pop
std
push
lods
mov
jmp
adc
mov
fidivrs
lret
outsl
cld
jle
psraw
in
pop
jne
xchg
and
jle
out
push
test
ljmp
xchg
and
adc
out
aaa
cmp
lock
cld
dec
inc
sbb
call
sub
inc
push
sbb
insb
movsl
inc
repz
sub
cs
cmp
mov
sub
dec
inc
add
jmp
gs
dec
jle
xchg
mov
mov
and
xchg
outsb
or
xchg
aam
fidivl
out
sbb
fsts
dec
adc
pop
imul
cmc
push
pop
movsb
sbb
je
or
inc
scas
dec
repnz
int3
in
push
imul
pusha
adc
ret
pop
cmpsb
mov
mov
mov
xchg
insl
imul
cmp
in
push
arpl
scas
push
jge
jbe
pop
rorl
inc
outsl
rcrb
int
fists
lods
je
jbe
aad
movsl
addr16
repz
popf
shlb
test
mov
std
mov
pop
daa
loopne
lods
mov
call
jns
js
inc
cltd
jo
sub
mov
inc
sbb
enter
xchg
xor
cmp
lcall
enter
out
imul
sub
daa
mov
inc
pop
pop
fwait
push
sbbb
push
fdivr
int
jnp
imul
push
or
xor
sti
data16
jo
push
xchg
pushfw
mov
xchg
jo
dec
inc
icebp
test
xchg
ss
mov
dec
xchg
cmpl
jo
mov
xchg
dec
xchg
mov
jae
sbb
and
aaa
xor
hlt
and
sbb
dec
and
push
push
lret
imul
sub
call
repnz
ret
inc
dec
movsl
xor
inc
xor
jg
mov
sub
mov
cwtl
dec
cltd
sbb
xor
mov
iret
pop
daa
rclb
imul
insb
icebp
sbb
mov
xchg
adc
mov
mov
pop
jmp
inc
sbb
imul
add
xchg
xchg
push
into
adc
push
mov
bound
iret
mov
out
outsb
xchg
insl
jg
push
outsl
ja
inc
ss
push
push
push
dec
ds
mov
stos
nop
es
imul
xchg
insl
inc
out
jne
insb
xchg
nop
iret
inc
push
les
jnp
xchg
pop
add
add
in
and
and
frstpm(287
fwait
mov
sub
adc
enter
mov
mov
cwtl
xor
repz
adc
dec
pop
pushf
push
sub
jle,pn
rorb
push
in
inc
cmp
adc
mov
int3
xchg
mov
loopne
jg
and
add
and
adc
movsl
add
dec
or
shlb
sahf
adc
loope
pop
push
pop
pop
mov
jmp
mov
pusha
add
mov
fwait
test
outsl
xchg
lcall
add
dec
cmp
xorb
sub
mov
call
cmp
cs
movb
xor
xchg
xchg
adc
mov
pop
adc
push
mov
shl
xchg
sahf
outsb
cmp
inc
pop
and
test
call
cmp
or
ds
insb
mov
xor
jl
rol
stos
jae
stc
cwtl
sub
mov
cmp
ja,pn
fldcw
shll
pop
daa
mov
aaa
dec
enter
sub
pop
addr16
cmp
cltd
inc
inc
dec
leave
insb
mov
sbb
out
cs
dec
add
sbb
add
xchg
std
adc
sub
fwait
xor
or
push
incb
js
inc
cmp
add
fistpll
sbb
cmc
rolb
pop
pop
cmpsb
fadds
adc
std
movb
nop
add
sbb
stc
pusha
mov
xchg
js
out
push
pop
add
movsb
fwait
inc
repnz
sbb
leave
sub
dec
popa
or
lds
dec
mov
pop
mov
scas
adcl
addr16
jb
push
mov
or
arpl
add
adc
push
or
imulb
fisubs
jns
cmp
lods
sub
adc
testb
sbbb
push
je
imul
push
lahf
rolb
mov
aam
or
mov
push
jg
test
test
clc
push
and
pop
cmc
mov
test
or
push
push
dec
cwtl
and
fdiv
lea
es
movsl
pop
aad
push
aad
mov
fsubrs
les
xlat
dec
mov
xchg
and
sbb
mov
cmc
ss
test
sub
into
arpl
add
pop
and
jae
xchg
stc
sahf
pop
aaa
mov
mov
int
testb
ja
and
shl
inc
stc
shl
jb
out
fldl
jle
repnz
push
jnp
movsb
outsb
sub
fisubrs
gs
jae
pop
shrl
mov
stos
lcall
xor
pop
push
das
cs
jp
mov
in
or
int
or
in
push
push
push
ljmp
je
adc
arpl
adcl
mov
xchg
outsl
or
inc
and
dec
fadds
cmp
decb
xchg
mov
cmp
mov
lods
mov
fwait
insl
mov
rolb
xchg
xchg
inc
sub
mov
xchg
ret
jnp
xchg
or
mov
in
push
rclb
jecxz
aad
push
stos
lea
ss
icebp
clc
icebp
push
mov
inc
cmpsb
in
das
xor
xchg
ja
or
adc
not
clc
mov
sbb
mov
daa
hlt
cs
cmc
enter
in
mov
inc
push
in
in
jmp
pop
sbb
test
sti
mov
cmp
repz
in
cli
sub
sti
ficompl
into
mov
cmpsb
xchg
mov
mov
sbb
add
or
out
push
lcall
sahf
mov
scas
sub
or
popf
fisubrs
bound
and
imul
add
movsb
jmp
cmp
cmp
jl
loop
js
andl
jmp
loop
gs
arpl
loop
add
ret
in
or
xchg
mov
test
js
jl
stc
je
push
xchg
jmp
dec
mov
lea
dec
mov
dec
loopne
sub
stc
cld
in
clc
push
fdivr
add
aaa
out
cmp
push
push
adc
test
xchg
jmp
negl
std
cltd
push
std
mov
mov
sub
adc
sbb
sub
inc
push
mov
flds
dec
adc
pusha
clc
out
stc
push
int3
xchg
and
hlt
and
push
jnp
das
push
data16
lret
cmp
and
lods
sub
hlt
popa
dec
repz
outsl
hlt
imul
mov
nop
iret
xchg
in
xchg
pop
cmp
push
test
adc
push
fisubrs
dec
inc
xor
dec
xor
aas
xchg
addr16
outsl
inc
mov
cmp
push
xchg
ror
mov
fistpl
adcl
aad
and
mov
push
inc
jl
ss
bound
andl
mov
sub
out
cmp
cmp
jae
dec
shll
loope
add
or
jnp
inc
xor
fldl
pop
ret
adc
std
jnp
jo
int3
dec
imul
push
aaa
jno
xlat
addr16
or
jmp
fcoml
mov
jne
ljmp
mov
pop
repnz
mov
pushf
int3
fbstp
mov
mov
inc
dec
mov
cmove
add
mov
mov
xchg
loop
cmp
out
dec
push
lock
push
jg
test
dec
pop
mov
pop
shr
push
aas
cmp
test
repnz
jo
add
jge
jae
out
in
push
outsb
aas
dec
jp
int
jnp
or
int3
cmpsb
inc
test
mov
cmovle
rclb
lea
outsb
mov
inc
shr
push
push
repz
add
fwait
dec
sub
mov
call
dec
minps
rolb
cmp
in
sub
dec
jno
push
lahf
testl
repz
push
dec
shlb
loopne
mov
repnz
cmp
out
repnz
and
pop
mov
aam
dec
mov
push
cmp
pop
sti
fnstenv
jg
xchg
shr
or
lock
cli
rolb
dec
xchg
lock
cli
sbb
cmc
in
punpcklbw
and
sub
push
and
movsb
jp
and
jg
loope
pop
loope
outsl
pop
pushf
out
push
sahf
add
insb
xchg
mov
dec
cmp
pop
je
or
xchg
sarb
ret
scas
or
mov
cmpsl
jl
adc
push
imul
mov
push
xor
fs
dec
repz
int3
pop
jno
mov
fsubl
pmulhw
add
sbb
lret
mov
sbb
pop
push
xchg
and
mov
ret
or
push
andl
cmp
lcall
out
cmp
cld
rorl
cmp
mov
imul
fiadds
add
mov
nop
divl
jmp
lcall
and
sub
mov
arpl
pusha
mov
xchg
adc
cltd
dec
fmull
incb
ds
xor
mov
out
mov
repz
aaa
ljmp
hlt
nop
movsb
or
push
push
cmp
lock
mov
or
inc
jp
in
and
dec
fs
mov
pop
mov
sbb
pop
push
push
xchg
jl
mov
mov
cmp
ret
inc
mov
aam
out
outsl
repz
in
ss
mov
cmp
mov
andb
rep
xor
mov
call
test
or
xor
stos
addr16
scas
hlt
xchg
mov
or
sub
sub
arpl
cld
push
divl
out
mov
jg
and
outsb
in
out
mov
je
fcompl
jle
pop
imul
shr
sub
int
or
sub
dec
inc
sbb
push
into
movsl
add
sub
rcrb
pop
stos
lret
fsubrp
sbb
jmp
iret
mov
ss
mov
jge
std
push
popa
push
mov
imul
out
lods
mov
add
add
out
sahf
and
dec
addb
cmp
cli
mov
stos
scas
sub
mov
jo
andb
cmc
xchg
sbb
nop
idivb
pushf
mov
fstps
jno,pn
xchg
xor
in
cmp
jge
sbb
inc
dec
pop
pop
fs
inc
adc
hlt
mov
sarl
xor
mov
cmc
fimull
pop
data16
movl
pop
xor
cmpsl
dec
dec
dec
ds
aas
push
insb
decb
adcb
mov
out
cmpsl
push
add
cmp
push
ret
lret
addl
aam
in
addb
fwait
pop
cmp
scas
fs
push
int
sub
into
xchg
xchg
es
sahf
lds
arpl
mov
je
push
jae
xor
cltd
sbb
ficompl
xchg
mov
loope
mov
dec
popa
jmp
dec
xchg
loop
aaa
aam
aam
cltd
mov
fiaddl
test
stos
cmp
cmp
test
rcrl
push
loopne
xchg
jmp
pop
mov
bound
sub
jne
mov
and
mov
dec
pop
enter
sbb
in
iret
arpl
cmp
clc
xor
in
fldcw
stc
repz
jo
sub
popa
inc
or
ss
test
bound
in
xchg
xor
aas
mov
xchg
lock
or
jbe
jb
lods
mov
push
add
mov
jl
pop
xchg
fs
add
fldcw
test
sbb
dec
or
dec
xor
loopw,pt
add
pop
mov
roll
cmp
sbb
inc
xor
ljmp
cmp
push
repnz
jae
mov
cmp
movsl
fstps
out
xchg
mov
movsl
push
cmpsb
dec
dec
fdivrl
xchg
or
movsb
jg
lcall
out
in
ss
mov
xor
bound
and
test
push
inc
and
mov
pushl
xchg
test
cmpb
outsb
sarl
fidivl
mov
push
dec
decl
xchg
pop
sub
push
arpl
mov
sub
and
sub
aam
push
loop
or
pop
adc
inc
jne
inc
or
lods
inc
in
sbb
ja
out
sbb
icebp
pop
jo
or
or
test
test
out
repz
sub
pop
lcall
lods
xor
fldt
in
mov
jge
pop
dec
loop
lahf
and
cmp
repz
jp
adc
pusha
into
gs
xor
fisttpll
push
push
stc
sbbb
push
es
mov
mov
mov
out
ret
pop
xlat
cld
cmpsb
cld
sbb
outsl
and
mov
adc
repz
dec
out
xchg
xor
popa
pop
loope
mov
fcmove
rep
mov
adc
test
adc
mov
mov
movsb
addr16
js
test
sahf
cltd
jno
mov
dec
sbb
and
adc
add
add
push
mov
cmpsl
mov
icebp
rorl
iret
pop
loop
mov
inc
lret
loopne
adc
test
inc
xor
ret
mov
in
fabs
in
push
aad
jg
fcmovu
cs
iret
cld
mov
mov
jnp
daa
inc
test
pop
fbstp
jmp
mov
xor
cltd
jmp
daa
sbb
mov
arpl
mov
push
jb
ja
mov
icebp
int
push
jno
inc
push
pop
or
mov
ljmp
sub
je
add
dec
aaa
lods
jmp
gs
repz
push
xchg
shlb
rolb
je
ret
loopne
scas
and
mov
mov
cmpsb
les
sbb
push
push
pop
push
pop
test
xchg
outsl
adc
enter
aas
pop
and
dec
loopne
jbe
inc
add
out
pop
and
xchg
or
dec
loope
push
sub
add
call
ret
sub
dec
sub
push
mov
mov
push
call
add
ret
push
jl
out
pop
aas
scas
mov
dec
shll
push
fcompl
loopne
outsb
xlat
dec
lahf
xchg
xchg
cmp
test
divps
or
jmp
sub
ret
stos
popa
test
cmp
jle
pop
imul
cli
add
push
adcl
mov
std
pop
jge
xchg
adc
pop
in
pusha
adc
popf
and
shll
cwtl
sbb
push
mov
and
cwtl
out
mov
enter
adc
outsl
push
fidivrl
sahf
mov
in
inc
test
mov
outsb
push
dec
aam
dec
ss
push
lea
leave
dec
pop
mov
int3
inc
cld
sbb
in
lahf
dec
dec
cmp
pop
push
mov
aas
xor
inc
into
xor
ss
lds
imul
movsl
xadd
insb
out
in
inc
fldenv
dec
fisubrl
lret
mov
cli
aas
and
pop
mov
add
pop
jbe
popa
call
ror
add
sti
jne
ret
and
push
out
inc
cld
ret
jmp
sbb
fmul
leave
add
cli
in
shrb
call
jl
cmc
cmpsl
push
mov
sbb
pop
mov
mov
icebp
xlat
or
movsb
fnstenv
cwtl
xchg
into
mov
pop
xchg
shl
jb
add
mov
pushf
sbb
sbb
scas
jo
mov
sub
stc
sub
xchg
insl
fcmovu
push
and
push
insl
pop
jbe
pop
ds
xchg
shll
push
push
cmpsl
inc
sub
cmp
push
jge
sahf
enter
int3
ret
cmp
ss
xchg
pop
rorb
imul
cmp
pop
pushf
xor
or
movsl
sbbb
pop
loope
mov
mov
push
or
insl
xlat
add
sub
ss
dec
cld
lods
sbb
in
push
cli
xchg
icebp
push
in
stos
scas
jecxz
ret
out
clc
pop
cs
repnz
cmpsb
adc
andl
stc
or
push
mov
xor
fidivl
divl
ror
repnz
out
xchg
repz
fidivl
xchg
sub
repnz
sti
fs
pop
lea
inc
dec
shl
mulb
push
add
das
push
and
fdivrl
xor
fs
jl
stos
rolb
mov
and
repnz
enter
adc
push
loopne
fidivs
or
sti
cmp
push
filds
out
addb
in
push
in
or
xor
incb
jno
sahf
mov
mov
hlt
and
testb
mov
pop
xchg
call
or
jne
lret
mov
repnz
push
add
fcoms
fs
inc
dec
xor
jge
pop
jecxz
mov
lea
or
insb
xlat
fcoml
scas
inc
add
and
stc
jmp
cmp
sbb
icebp
dec
jno
or
xor
push
cmpb
jae
push
pop
in
pushl
pop
mov
dec
mov
mov
mov
xchg
sub
fstps
lods
dec
jno
int
sbb
pop
jl
push
sub
xorl
inc
cwtl
push
mov
or
sarb
bound
xor
in
fwait
push
fdivr
pop
das
jae
or
movsb
pop
test
and
cmp
imul
lahf
mov
sbb
or
xchg
shll
aad
mov
gs
sub
sar
mov
movsl
imul
ret
dec
mov
rorl
jae
mov
es
dec
pop
add
dec
pop
and
fucom
sahf
out
div
xchg
add
mov
in
repnz
sbb
sbb
mov
ret
adc
sbb
clc
pmulhw
decb
push
cmpsb
or
or
xor
andb
ss
addl
mov
inc
cwtl
int
xchg
jnp
ret
or
sub
in
in
hlt
pop
xor
push
aad
add
fdivrs
fstl
jne
xor
incb
gs
sti
out
push
add
or
pop
mov
cmp
xchg
mov
and
cmp
pop
and
add
adc
test
mov
pushf
mov
loope,pn
pop
pop
adc
or
mov
fstl
sbbb
aaa
push
xchg
inc
lods
add
insl
daa
rcrl
jbe
cmp
sub
cmp
call
pop
cli
cmp
add
inc
sbb
mov
mov
mov
push
dec
add
fstpt
test
lret
loopne
es
push
mov
or
cltd
lods
cwtl
movsb
add
js
dec
scas
mov
sub
in
jo
scas
sbb
pushf
mov
and
enter
out
into
jne
imul
es
fsts
into
pop
pop
jnp
ljmp
xchg
dec
sbb
mov
sgdtl
push
out
cwtl
mov
dec
mov
or
push
dec
xchg
fistl
scas
jl
dec
pop
orl
imul
mov
arpl
cwtl
sub
add
add
insb
scas
sub
pop
or
lcall
mov
dec
add
inc
sub
repz
cmp
jecxz
fidivrl
xor
insb
inc
repz
lret
push
adc
scas
in
loop
cld
loope
fnstenv
sbb
sarb
pop
iret
mov
push
ja
stc
gs
jnp
mov
imul
xor
sub
insl
icebp
jbe
lock
mov
insl
js
fimuls
insl
pop
in
jle
rcll
ds
test
addb
shlb
push
sbb
test
and
rcr
mov
mov
adc
mov
jnp
cmpsb
lds
sbb
lcall
fisubrl
movsl
dec
mov
rcrl
xchg
int
push
inc
pop
in
push
dec
pop
xchg
mov
jg
test
stos
movsb
pop
call
sbb
add
add
jne
inc
insb
shr
je
fcomps
push
inc
repz
sbb
mov
xchg
sub
ljmp
scas
pop
test
in
sbb
lock
mov
in
adc
shl
push
fistpll
flds
mov
ret
or
add
scas
shll
daa
inc
loope
cmp
scas
jb
imul
enter
outsb
pusha
cwtl
out
mov
pop
popf
cmp
xlat
inc
xchg
xchg
aad
push
fadds
repnz
cltd
jg
xor
stos
adc
jg
or
pop
pop
lds
xchg
sub
jg
fdiv
pop
add
push
jmp
lcall
jg
out
pause
add
loopne
xlat
mov
pop
sbb
sbb
fwait
dec
ss
int3
dec
mov
outsl
loop
jne
imul
mov
sub
push
cmp
rcr
adc
mov
or
mov
jno
push
test
adc
fdivs
cmp
or
ffreep
lds
xor
pop
aas
inc
imul
xlat
pop
aad
push
in
jmp
add
cmpsb
ficoms
sbb
dec
pop
mov
add
mov
das
mov
in
aaa
lret
push
imul
loope
add
dec
das
jg
subb
jmp
into
xor
push
fimull
call
jnp
mov
cmp
mov
les
dec
bound
push
inc
pop
sbb
out
xchg
or
xchg
inc
aad
push
in
in
in
mov
movb
cmp
inc
fidivs
add
and
imul
das
popa
cli
mov
push
xchg
pusha
in
xchg
dec
sahf
add
push
cltd
sub
pusha
pop
fistps
inc
pop
pop
or
xchg
pop
jl
push
loop
add
mov
in
sub
hlt
and
outsb
out
call
xchg
iret
orl
imulb
push
pop
jbe
repz
jnp
imul
inc
js
mov
lods
jge
sbb
mov
fdiv
outsb
cmp
lcall
xchg
lahf
pop
sub
xchg
fnstsw
inc
cmp
inc
adc
xchg
ret
add
inc
fcomps
sti
push
lret
pop
lods
or
and
xchg
xor
cli
jp
leave
mov
fwait
sub
sbb
adc
fiaddl
stos
pop
cmc
adc
fdivl
push
fadds
push
sub
pop
outsl
push
adc
aam
push
stc
inc
mov
xor
pop
and
test
sub
dec
sbb
push
add
ret
jmp
sarl
hlt
test
xor
adc
outsl
dec
or
test
mov
lods
xchg
inc
fiadds
or
jg
push
xor
ret
pop
scas
loopne
pop
or
dec
fdivs
repnz
arpl
pop
call
cld
push
rorl
pop
inc
xchg
mov
aaa
pop
insl
test
pop
fcoml
es
mov
or
xor
sub
je
mov
xor
popa
ja
or
loope
cmp
adc
or
ret
in
and
dec
pop
insl
stos
std
lods
nop
rcrl
push
xchg
imul
xchg
ret
add
data16
shr
inc
jbe
push
mov
int3
or
inc
and
out
in
inc
jge
lahf
loope
mov
lods
pop
rcr
sub
xor
imul
cld
decl
sub
cli
dec
sub
push
push
jnp
jo
insl
or
adc
add
mov
fxch
loope
test
or
ja
mov
xchg
jo
fdivrl
ja
inc
les
mov
push
fsubs
push
jnp
imul
in
imul
cltd
sbb
ficoms
mov
imul
push
scas
popf
std
dec
push
ror
jg
jo
inc
les
mov
sbb
es
sbb
ret
sub
andl
adc
lret
mov
lds
xchg
or
sub
popf
insl
les
sub
roll
ja
mov
fisttpll
or
bound
sbb
jns
lods
push
sahf
test
aas
mov
mov
pop
or
jecxz
mov
out
cmpsl
cmpl
decb
xchg
xchg
dec
cmc
ror
pop
lea
jg
inc
loopne
jae
sub
loopne
clc
ss
fwait
pop
leave
xor
add
mov
loopne
lods
mov
mov
dec
aad
push
or
xchg
sub
or
sti
in
int3
pop
jb
jecxz
mov
mov
dec
imul
je
mov
in
imul
add
mov
and
imul
ret
outsl
adc
sub
outsl
dec
inc
in
dec
cmp
pop
mov
sub
pop
in
shlb
lcall
jle
or
xlat
ret
leave
rorb
mov
test
leave
ja
cmpsb
loope
add
ret
lret
lahf
aad
push
push
daa
bound
mov
jl
orl
jo
cs
cmp
imul
mov
bswap
mov
mov
adc
aaa
sbb
add
movsl
jle
mov
bnd
jge
and
lahf
scas
jbe
dec
push
arpl
xchg
pusha
fiaddl
fs
mov
jnp
mov
pop
cmp
sub
xor
bound
test
fs
push
pop
mov
movsb
paddsw
jno
push
cmp
add
outsb
popa
adc
cld
adc
push
xor
jbe
or
lods
mov
imul
mov
sti
fsubs
mov
mov
fnsave
mov
cmp
cmp
sub
mov
cltd
cmp
fnsave
mov
inc
mov
cmp
push
pop
aad
and
mov
add
adc
lea
in
xchg
xchg
outsl
cmpsb
cmp
sbb
cltd
in
out
out
pop
nop
pop
sar
pop
xchg
mov
inc
or
pop
lods
jb
scas
loopne
fildl
sbb
das
jge
out
hlt
mov
inc
fiaddl
xor
jb
in
ljmp
rclb
xor
adc
inc
idiv
mov
or
mov
daa
push
ja
xorb
pushf
adc
into
mov
or
pop
std
xor
sti
add
arpl
iret
test
ja
jbe
sbb
stos
int
cmc
xchg
aam
mov
popa
jns
hlt
call
jae
in
scas
sti
push
add
sub
sub
mov
sbb
outsl
rcr
repnz
fnstenv
sbbl
into
mov
in
dec
pop
push
cmpsb
call
inc
andl
cmpsb
push
jecxz
pop
cli
into
inc
cmp
or
rclb
pop
cmpl
test
cmp
mov
inc
push
daa
jne
xor
je
jg
jmp
scas
imul
test
loope
rolb
pop
enter
fdivrl
jae
dec
xchg
or
ret
icebp
or
outsl
ror
fwait
mov
and
jns
or
jmp
cmpsl
addl
pop
pushl
jbe
mov
test
clc
sbb
andb
ds
in
movsb
mov
into
lods
adc
jmp
and
sbb
idiv
inc
pop
jne
push
loopne
into
sub
pop
inc
sub
jp
sti
jmp
add
dec
sar
mov
adc
pushl
jg
inc
mov
sub
test
jnp
pushl
pushf
cmp
pop
dec
loopne
mov
movsb
fcompl
sbb
scas
loop
mov
sub
js
pop
fidivs
add
push
or
xor
cmp
xchg
jge
in
std
shl
inc
xchg
jg
int
sub
push
and
jp
xchg
cmp
cltd
out
mov
add
push
scas
addr16
mov
xchg
outsl
mov
cmpsb
movsb
pop
push
push
rclb
xchg
adc
in
inc
aas
mov
mov
mov
movsl
xor
test
fldenv
jae
or
pop
imul
jne
outsl
insl
jbe
sub
es
out
mov
dec
std
popf
insl
in
jnp
add
or
sub
sub
bound
push
lret
add
lcall
xor
dec
adcb
in
call
pop
stos
mov
cmpsl
xor
incb
push
out
xchg
loopne
inc
aaa
cmpsb
das
dec
bound
add
mov
cld
mov
lcall
loop
outsl
add
inc
cmpsl
sub
inc
xchg
imull
stc
sbb
sub
leave
outsl
in
dec
pop
idivb
lret
xor
sbb
iret
in
pop
scas
and
mov
push
xchg
icebp
jnp
dec
cmpxchg
pop
js
pop
test
outsb
shlb
lds
popa
call
imul
insb
adc
add
cmp
xor
lds
cmp
hlt
bound
sub
mov
popf
xor
push
outsl
shll
push
test
loope
les
cmpsl
sub
das
dec
xchg
jmp
push
sbb
xchg
ficomps
push
xchg
data16
mov
insb
bound
xor
xor
fsubrl
scas
insl
addr16
loope
repnz
mov
or
push
scas
outsb
sub
push
pop
mov
mov
mov
popa
cmpsb
cwtl
inc
add
mov
pushf
jmp
sub
out
ret
xor
lock
cmp
or
fs
cwtl
pop
sub
lock
sahf
fldenv
push
or
lods
mov
pop
xchg
repnz
into
sbb
loope
dec
inc
ret
pop
loope
adc
cld
leave
popf
loop
add
movsb
adc
aam
inc
mov
nop
sar
pop
inc
loope
loope
jp
push
dec
adc
push
sbb
sbb
or
imul
orb
sub
jge
sbb
jg
sbb
mov
jp
xor
mov
xor
sub
xor
inc
aad
addl
out
sub
jg
fistps
loopne
inc
mov
pop
jmp
push
jle
fistpll
jle
mov
pop
sbb
jb
adc
movsl
sub
mov
push
xchg
cli
jae
mull
push
ljmp
mov
test
sbb
int3
sti
mov
adc
inc
pushf
push
jp
lods
sbb
adc
xor
lahf
jns
call
jmp
xlat
ss
push
xor
repz
jbe
push
sbb
inc
mov
testb
xor
push
pop
xor
inc
pop
les
pushl
fcomps
mov
bound
mov
jo
dec
xor
fcomps
rol
xchg
push
adc
adc
and
das
inc
fbstp
add
pop
inc
lea
loopne
test
into
mov
mov
jnp
iret
pop
fsts
mov
sub
sbb
sub
pushf
inc
dec
fs
jmp
adc
push
jne
inc
sbb
push
add
or
adc
jno
out
dec
lret
fwait
std
xlat
and
popa
xchg
inc
addl
imul
aad
mov
out
adc
add
xor
gs
mov
movsb
je
les
mov
mov
adc
xchg
in
aad
dec
mov
pop
cmc
adc
ja
pop
adc
int
push
sbbl
fdivs
xchg
sub
add
pop
xchg
and
mov
js
js
jns
call
shrb
mov
add
push
xor
cli
sarl
jb
xor
adc
mov
insl
iret
data16
cmpl
pushf
fists
add
dec
clc
push
inc
push
test
mov
jge
xchg
scas
pop
out
or
or
cs
xor
subb
cltd
and
dec
cmp
inc
jle
inc
jge
iret
icebp
xchg
int3
mov
inc
mov
inc
ret
add
test
or
dec
push
int
js
in
lret
pop
or
sub
mov
adc
shll
push
mov
cld
push
mov
dec
inc
and
mov
xor
fiaddl
pushf
les
push
xchg
dec
dec
arpl
jg
mov
ret
inc
push
out
or
arpl
test
stos
mov
push
iret
inc
xchg
fstpt
inc
add
jo
cmp
sub
jmp
jg
inc
pop
insb
jmp
std
out
fdivrl
jns
xchg
xchg
icebp
stos
adc
xor
push
or
xor
lock
shl
mov
mov
xchg
enter
adc
add
jg
out
mov
movsb
testb
xchg
cmpl
sub
scas
pop
popa
xchg
add
rorl
xchg
dec
push
cwtl
pushf
or
or
ja
insl
mov
mov
sbb
lea
cld
cld
jmp
lea
mov
scas
and
out
mov
pop
arpl
subl
gs
sbb
jle
jne
test
in
push
roll
push
jb
adc
sub
push
arpl
sub
shll
mov
sti
xchg
gs
lea
das
push
daa
sbb
pop
mov
lret
ud1
push
or
jg
sub
mov
popf
ret
dec
mov
mov
lahf
mov
fsubr
mov
jle
inc
push
xchg
popa
fisttpll
pop
jns
pop
pop
dec
int3
out
into
lock
lret
fildll
rorb
testl
push
in
arpl
rorl
cld
pop
adc
insl
cld
jno
xor
stos
addb
call
out
or
mov
adc
or
ret
xchg
xor
inc
push
pop
icebp
cli
and
psrlq
jbe
in
sti
or
push
out
mov
push
repnz
push
xor
ss
test
in
xchg
push
mov
in
leave
andb
icebp
inc
scas
mov
test
add
pushf
bound
loope
jns
mov
adc
sbb
xchg
cmpsb
sbb
inc
dec
xor
mov
dec
sbb
sub
outsb
jb
ss
dec
adc
cmpsl
mov
sti
mov
test
and
sahf
and
into
aaa
add
movsl
aam
ds
enter
and
lea
stc
lods
add
jecxz
jo
push
jl
sar
fcmovnb
aam
jmp
js
in
lret
add
xor
lock
rdtsc
lcall
mov
add
test
push
divb
daa
mov
adc
es
cmp
leave
enter
adc
mov
xlat
mov
sbb
mov
sbb
pushf
mov
filds
xor
inc
mov
pop
mov
mov
cmpsb
or
sbb
jns
rcl
sbb
cmc
xchg
ret
push
iret
adc
dec
pop
fmuls
insl
repz
push
andb
out
shrb
stc
pop
rcll
mov
into
xor
lea
mov
out
les
and
push
jg
cmc
cmp
lock
nop
cmpsl
aad
mov
out
cmp
cmpsb
and
cmp
aam
cltd
adc
rclb
rorl
rcl
aaa
call
add
push
test
pop
mov
mov
shrl
in
sbb
shll
inc
mov
sbb
out
call
xor
mov
in
cmp
push
fildll
je
dec
and
mov
inc
popf
xor
pop
inc
xchg
in
sbb
stos
insl
cwtl
bound
fs
or
out
push
scas
push
push
inc
pusha
mov
iret
dec
and
pop
shll
lret
inc
pop
mov
rcl
xlat
xchg
hlt
dec
fwait
aad
mov
xchg
ret
stos
xchg
repnz
mov
mov
adc
cmp
ds
scas
sub
dec
aas
push
stos
outsl
inc
test
jae
shl
push
push
mov
addr16
lcall
outsl
adc
hlt
out
or
pop
jno
and
mov
add
or
movl
dec
mov
int3
xchg
xor
push
repz
or
xchg
xchg
loope
cld
lcall
xor
push
cmpsb
add
test
cmp
jge
faddl
push
les
cmc
mov
out
das
jp
cmp
mov
lods
js
dec
imul
mov
dec
mov
fdiv
push
dec
dec
cmp
fsubs
mov
stc
dec
aas
outsl
mov
les
cmp
jno
popa
jae
sbb
out
xor
rcll
cmpsl
adc
xchg
imul
xor
cmp
lret
add
or
pop
fwait
or
adc
ss
fs
fdivs
test
cmpsl
cmpsb
cld
repz
push
lods
mov
mov
adc
shlb
es
sub
cwtl
xchg
bound
cmpsl
add
scas
jge
lods
aas
lds
push
rcrl
sub
cs
shll
sbb
pop
pop
in
roll
adc
cmp
inc
addb
mov
jno
xchg
aad
ret
rol
jb
in
fbstp
jb
shl
ror
or
cmp
lahf
adc
cmc
xor
mull
xchg
inc
cmp
mov
cmc
shr
ss
push
outsb
add
inc
scas
adc
jo
push
mov
mov
pop
sahf
adc
addr16
mov
sub
lcall
fadds
push
xor
jae
mov
and
pop
ja
dec
fiadds
jb
fdivs
lods
mov
sub
mov
std
int3
in
add
test
pop
mov
adc
in
push
mov
or
or
and
mov
cwtl
mov
in
insb
xchg
in
cmc
lds
inc
add
lret
mov
dec
gs
rcr
loopne
cmp
test
les
jmp
push
adc
push
cli
icebp
pop
dec
jmpw
inc
enter
addl
push
insb
xchg
push
inc
xchg
aaa
xlat
les
xchg
mov
ret
ds
ret
test
mov
hlt
jge
insb
adc
scas
cwtl
lret
mov
scas
lcall
xchg
enter
push
or
add
cs
sub
idiv
cmp
aas
mov
je
movsb
and
xchg
iret
cmc
dec
fs
sub
pushf
inc
adc
xchg
pop
hlt
sbb
test
xchg
xchg
jb
lock
ret
fwait
mov
inc
push
js
test
adc
mov
repz
xor
or
inc
xchg
adc
in
adc
loopne
jge
nop
mov
dec
jbe
mov
mov
nop
daa
scas
pop
and
push
add
pop
test
adc
add
mov
mov
in
roll
gs
leave
jp
aaa
add
bound
lcall
adc
pop
je
stos
dec
add
insb
sub
lea
mov
push
add
jp
je
inc
jmp
shll
xlat
pop
inc
or
adc
cmp
fildll
popf
push
adc
jecxz
sbb
mov
adc
lret
lds
pop
mov
cmpsb
icebp
pop
push
in
add
cmpsl
jne
sahf
push
pop
sti
jae
lea
jg
icebp
push
add
in
shlb
popf
icebp
fwait
xchg
sar
push
cwtl
lret
mov
pop
fwait
dec
out
test
mov
pop
push
rcl
or
push
out
shlb
dec
mov
cwtl
push
mov
cld
cli
cmp
pop
cmp
sbb
sbb
es
jae
jg,pn
jno
outsb
push
bound
aaa
andb
xor
jno
adc
cwtl
addr16
lock
mov
fisubl
ud0
sbb
dec
inc
cmp
outsb
inc
lret
pop
push
xchg
add
sbbb
xchg
fnstcw
je
cli
enter
lret
sub
sbb
dec
cli
pop
mov
popf
adc
out
mov
cmp
xchg
xor
xchg
mov
rep
jle
push
mov
inc
adc
aas
mov
jl
mov
push
lahf
loop
fsubrp
arpl
ljmp
cmpsl
push
jae
test
push
mov
cmpsl
enter
out
sti
inc
lret
stc
in
push
sub
pop
dec
fimull
cmp
mov
xor
jbe
dec
cltd
dec
inc
jnp
in
popa
out
mov
mov
ret
adc
jl
loopne
inc
popf
aam
and
adc
dec
std
pop
pop
cmp
push
mov
mov
je
ds
aaa
ret
xor
ds
and
adcb
int3
pushf
js
outsb
lds
and
roll
ljmp
ljmp
repnz
mov
repnz
sbb
sub
lcall
pop
inc
dec
add
fmuls
or
mov
mov
pop
push
cmp
es
jl
fimuls
and
push
mov
mov
es
sarb
fstpt
xor
in
add
mov
sbb
fst
push
js
add
in
mov
push
xchg
lods
pop
in
mov
andb
rorl
scas
scas
mov
pop
lahf
pop
jmp
in
push
rorb
movsb
rcl
call
xchg
jp
pop
sub
mov
mov
out
sbb
or
into
lock
pop
inc
sbb
dec
pop
cld
add
int3
jns
push
shl
lods
add
scas
aas
stc
xchg
mov
mov
push
aas
adc
popa
outsb
sarb
adc
xchg
adc
add
pextrw
pushf
sbb
pop
xchg
adc
aad
push
add
cmp
inc
sbb
cmpsb
ljmp
sbb
mov
push
in
out
fisubl
push
push
mov
or
cmp
bnd
out
adc
jle
push
f2xm1
adc
int3
or
scas
lods
daa
in
test
aas
stos
push
inc
sub
test
sti
cmpsl
sarb
mov
sbb
into
in
subl
rcrb
mov
addr16
xlat
inc
leave
inc
leave
repnz
shrl
sbb
inc
add
int3
fs
sbb
sarb
sub
and
ss
jmp
push
push
stos
mov
les
rcrb
and
outsb
push
mov
push
daa
jne
mov
mov
pop
call
dec
into
jge
sbb
sub
dec
outsb
pop
xorb
or
ror
ret
dec
add
outsl
fwait
inc
movsl
es
dec
mov
hlt
xor
std
data16
jnp
or
aaa
push
jb
xlat
rep
movsb
rorl
cld
inc
cs
pop
xor
ss
loope
dec
arpl
sbb
push
andl
call
ret
loop
aas
xor
inc
rorb
pop
fisttps
scas
push
cmp
jecxz
stos
fadds
nop
mov
xor
sahf
inc
xchg
leave
faddp
xor
xchg
aad
lods
sbb
inc
subb
mov
dec
int
push
sti
pop
pop
push
adc
fwait
mov
outsl
pushf
insl
xchg
es
jg
mov
jns
lret
push
mov
jl
push
add
mov
jnp
inc
dec
pop
cs
dec
aam
lcall
mov
xchg
vmovsldup
stos
mov
mov
xchg
aad
push
push
leave
mov
mov
mov
aas
mov
cmp
mov
lcall
add
mov
std
sbb
cli
jle
in
repz
mov
nop
fistl
dec
pusha
mov
pop
pop
mov
aad
push
jno
jecxz
iret
call
xchg
fwait
lahf
jb
call
mov
pop
fwait
pop
mov
jp,pn
lret
xchg
ret
and
sarl
inc
xchg
das
adc
jno
out
or
inc
push
sub
adc
repz
cmp
negb
cmp
decl
jns
cwtl
adc
pop
sbb
jb
daa
in
scas
push
in
scas
ja
or
push
ds
xor
sub
rorb
test
xor
sbb
int
xchg
loop
push
inc
dec
and
sub
dec
movsl
jge
movl
xchg
aad
jmp
push
jmp
or
sbb
lahf
xchg
add
mov
or
jge
push
loop
ret
mov
adc
pop
dec
pop
mov
lcall
mov
loope
adc
jp
insb
movsb
lcall
fwait
mov
push
scas
out
jp
xchg
pop
and
mov
jg
xor
xchg
repz
add
loop
les
xchg
add
movsb
sub
mov
jl
xor
arpl
int3
jo
sbb
into
leave
fsubrl
data16
mov
scas
jbe
mull
pop
addr16
inc
adcb
mov
jno
mov
mov
sbbl
push
cmpsl
pushf
mov
stc
and
pop
fisttpl
inc
out
fwait
aam
jp
repz
cld
popa
pop
sub
mov
or
ljmp
push
clc
mov
loope
jne
cwtl
dec
fnstenv
pop
mov
testl
cmp
mov
pop
mov
adc
fsin
or
xor
fidivrl
stc
xor
sub
dec
dec
mov
sti
shlb
iret
cmc
xchg
push
js
mov
cmp
jge
and
pop
inc
dec
ret
stos
mov
popa
scas
push
push
adc
mov
les
push
out
lods
adc
pop
fsubrl
add
or
pop
mov
pop
mov
popa
ljmp
sbb
dec
sub
xchg
shl
adc
jle
das
repnz
mov
bound
pop
xor
mov
notb
dec
cmp
inc
gs
ret
mov
jmp
sub
shlb
aam
cmp
mov
movsb
fwait
fwait
mov
push
jge
push
cmp
sarb
insb
pop
jae
movsb
push
movq
mov
or
inc
add
adc
and
stc
fs
es
pop
adc
pop
mov
aaa
cltd
inc
xor
sub
dec
pop
cmc
fsubrs
add
jl
sbbl
cli
sub
jecxz
loope
cld
lock
mov
push
arpl
popa
adc
repz
repz
out
cmp
mov
cld
mov
xor
push
push
push
loope
xor
mov
roll
push
mov
insl
dec
in
mov
dec
fiadds
stos
leave
mov
outsb
sub
sbb
outsb
mov
repz
insb
sub
push
and
push
inc
pusha
imul
movsl
mov
cmpsb
mov
jne
rep
xor
xor
add
cmp
mov
sti
and
fldenv
mov
es
and
fadd
xor
inc
jle
sub
or
dec
jae
lock
pop
fucomp
mov
cmp
icebp
lods
movsl
or
add
cmp
lods
xlat
cld
pop
mov
outsb
dec
popf
inc
xchg
je
lods
insl
dec
outsb
pusha
mov
orl
mov
sbb
jbe
cwtl
sub
jge
push
add
dec
jo
jge
mov
cmpsl
jg
mov
sub
mov
leave
or
shr
ficoms
ds
add
jecxz
xchg
add
cs
or
jne
pop
out
jl
repnz
jb
adc
in
adc
inc
adc
cmp
aad
push
sarl
or
data16
sub
cmp
sub
xchg
xlat
fstl
sbb
add
xor
jecxz
pop
cmp
jmp
in
lret
mov
mov
cmp
adcl
out
aam
xlat
xchg
mov
test
mov
sahf
leave
jl
cmp
ret
cltd
push
in
dec
scas
jmp
push
cmp
push
cmp
jge
pop
loopne
gs
add
xor
mov
sbb
mov
fcmove
or
mov
lret
sbb
and
pop
inc
sub
pop
fsubs
sbb
xchg
jge
mov
inc
sbb
pop
dec
xchg
loop
out
std
cli
sbb
jle
aas
sub
sbb
shll
fcomps
pop
insb
and
pop
lcall
lret
in
add
mov
add
test
xor
mov
es
repnz
dec
sub
lret
or
xor
mov
xor
and
ljmp
jns
mov
int3
mov
movsb
sub
sarl
popf
out
and
aam
push
sbb
stos
fwait
add
nop
mov
cmp
inc
test
inc
cmpsb
add
out
mov
leave
mov
shr
xor
es
inc
adc
cmp
and
clc
sbb
aas
xlat
mov
dec
inc
dec
das
jnp
cld
stos
sub
lock
xorl
pop
sbb
mov
sub
fwait
bound
xchg
ja
lods
push
out
or
cmp
pop
repnz
loope
cmpsb
int3
inc
pusha
xor
outsb
int3
stc
push
xchg
lea
push
adc
and
push
cmp
lds
pop
sbb
loop
cltd
mov
mov
ficoms
fs
sub
insb
sahf
cmp
add
adc
sub
xchg
dec
roll
push
nop
cmpb
sub
jl
fdivrl
test
pop
and
mov
lahf
test
sarb
pop
scas
inc
push
sbb
stos
xor
cmp
shrl
stos
jnp
add
or
xchg
push
cld
mov
push
xchg
xor
in
push
or
out
mov
popf
dec
xchg
notb
imul
adcl
jbe
or
add
in
out
mov
fldcw
pop
add
cmp
rorl
inc
scas
push
int3
or
rol
xchg
cmp
sbb
adc
mov
stos
mov
xchg
fcmovu
in
pop
mov
jnp
pop
push
lret
xchg
and
cld
or
loopne,pt
insl
ja,pt
mov
repnz
add
je
ljmp
sub
pop
or
jno
aam
sub
arpl
jns
loopne
pop
sub
pusha
test
repnz
sub
mov
jmp
call
cltd
arpl
pop
dec
inc
fdivr
or
sbb
inc
adc
inc
push
push
cltd
or
lret
push
inc
cltd
mov
adc
jle
cltd
add
xlat
psubq
test
sbb
scas
mov
cmp
add
ret
repz
lods
adc
cwtl
add
lea
jae
pop
dec
cmp
mov
scas
ja
out
out
jno
pusha
sahf
and
loope
push
lcall
dec
xchg
ds
push
adcl
js
cmp
push
push
pop
mov
xor
push
add
sbb
enter
and
push
pop
adc
dec
add
xchg
add
cs
push
aaa
push
nop
cmp
push
xchg
jae
sti
into
mov
aad
fimull
test
inc
into
mov
adc
aaa
add
sub
jae
pop
and
mov
and
dec
punpcklwd
dec
jge
jp
clc
cli
jmp
inc
cs
xchg
loop
or
adc
cs
sub
push
push
out
xchg
mov
sbb
jmp
repnz
fcomp
movsb
subl
jle
adc
jp
in
addr16
sbbb
or
mov
insb
in
out
bound
js
mov
mov
sbb
sub
pushf
lea
jns
inc
fs
add
add
adc
lods
arpl
lahf
jmp
aaa
cld
aam
mov
fbld
xchg
aam
into
mov
mov
mov
jns
daa
cltd
jecxz
cmpsl
lock
dec
jmp
lret
pop
push
adc
jle
sub
cmc
sahf
popf
push
call
add
pusha
orl
inc
lret
pop
add
cmp
cmpsb
sti
xlat
xchg
popf
pushw
push
xchg
xor
xchg
and
pop
or
test
add
in
or
iret
adc
jl
sbb
lahf
addr16
stc
cmc
cld
mov
push
jg
dec
mov
mov
sbb
sarl
add
xor
cmp
pop
add
popa
sbb
notb
pop
push
lcall
lock
xchg
jne
aaa
jne
inc
lods
pop
stc
push
fisttpll
rcl
xor
push
mov
cmp
push
aam
std
rorb
gs
mov
mov
outsb
add
test
loop
jnp
xorl
mov
testl
popa
lahf
mov
je
mov
shlb
mov
push
aam
shll
cmp
adc
mov
push
cmpsl
xor
or
sub
pusha
sbb
mov
xor
aad
sub
push
scas
sbb
fnsave
or
lret
bound
sub
xor
add
inc
jle
jl
dec
pop
mov
xor
xchg
test
jns
int
lcall
mul
or
scas
lods
jbe
sub
and
cld
sub
out
in
sti
xchg
sbb
test
js
test
mov
cmp
sbb
push
pop
mov
sbb
test
xor
mov
jb
push
outsb
and
pusha
stos
adc
pop
hlt
cs
mov
ret
lock
repz
jmp
int3
add
cmc
testb
adc
fsubs
xchg
jb
pop
lds
cmpsb
fisttpll
pop
pop
jnp
xor
pop
dec
scas
mov
xchg
out
in
and
subl
adc
xor
pop
add
mov
xorb
cmp
test
bound
mov
adc
nop
and
outsb
push
int
cmp
cmpsb
cmpsl
pusha
arpl
filds
push
sbb
or
jl
xor
sub
pop
mov
cmp
push
aaa
arpl
aam
or
fdivl
mov
stos
dec
inc
addr16
aas
dec
cmpsl
mov
push
sahf
mov
xchg
jb
lods
mov
bound
and
js
adc
rol
mov
mov
mov
insl
push
repnz
insl
or
gs
sub
mov
dec
out
cmp
mov
xchg
pop
and
stc
cwtl
and
sub
movsl
aas
push
test
or
jge
ja
inc
dec
push
cwtl
xchg
out
pop
and
lds
inc
cmpsl
cli
iret
leave
sbb
jp
out
aam
and
xrelease
or
inc
and
or
adc
pop
fsubrl
insl
sub
mov
ja
fdivrl
fwait
push
adc
mov
addb
in
sti
sti
cmp
dec
outsb
sbb
xchg
inc
push
pusha
mov
add
inc
and
push
ret
dec
inc
aas
icebp
jns
jecxz
cs
ds
sarl
or
jp
xchg
adc
jge
sbb
imul
mov
dec
pop
cltd
scas
out
imul
jns
add
adc
add
mov
imul
pop
lock
faddl
lods
or
xchg
ja
lock
or
jmp
iret
and
rcrl
jo
popf
imul
mov
dec
pop
out
notl
je
jp
inc
in
push
pop
stos
scas
adc
sbb
popf
fdivs
push
and
cmp
sbb
in
aaa
mov
decb
jl
in
pop
ss
push
pop
sbb
mov
or
add
add
fsubr
or
lcall
adc
cltd
push
xchg
js
jb
aad
std
rcrb
stos
mov
ret
orb
jns
adcb
pop
scas
in
ficomps
jge
push
lahf
push
mov
push
adc
xor
pop
fs
or
fs
sub
cs
pushf
cmc
add
es
adc
xor
xchg
and
mov
xchg
xor
andl
lcall
cmpsb
int3
out
mov
xor
pop
data16
or
xor
icebp
enter
das
ret
push
loope
mov
sbb
or
cmp
or
les
test
imul
or
and
js
pop
ljmp
rolb
aas
vpmacssdql
xchg
push
movsl
repz
int
pusha
inc
xchg
cli
pop
and
mov
dec
je
cmpsl
add
out
in
inc
divl
je
out
push
fistps
inc
dec
addr16
pop
cmp
pop
inc
xchg
sbb
lret
dec
dec
jae
fs
dec
mov
xchg
sub
push
and
cmp
das
jb
mov
adc
and
mov
fisubrs
mov
mov
mov
test
stc
out
jno
dec
and
sub
xchg
or
subb
sahf
test
int
nop
fs
in
mov
into
shrb
loop
mov
pop
cmpsl
test
add
push
xor
out
cmc
mov
sub
sub
lret
xlat
fstl
aas
arpl
test
sarb
enter
aad
and
cmpsb
shrb
stc
dec
push
cmpsl
sahf
jle
xchg
xchg
dec
cmp
sub
orl
dec
sub
cs
jmp
fldenv
ret
cs
test
xchg
mov
dec
cmp
insb
jb
push
rcrb
in
cmp
push
adc
add
mov
jl
and
test
mov
out
or
in
pop
mov
mov
cmp
movl
clc
test
push
dec
outsl
test
sbb
pushf
pushf
aas
arpl
mov
mov
mov
inc
outsl
xor
notl
data16
jge
jns
mov
in
not
cmp
repz
adc
inc
lea
inc
pop
cld
add
add
int3
pop
ds
mov
sbb
pop
aas
mov
jmp
shl
ror
pop
lea
push
mov
cmp
repz
dec
push
repnz
adcb
inc
xchg
lock
pop
push
xchg
punpckldq
jmp
scas
fbstp
jle
or
jl
scas
sahf
mov
xchg
pushf
es
aaa
test
jge
cmp
idivb
mov
sub
loop
xchg
sub
cli
xor
cltd
ds
sbb
jge
sbbl
rcl
ret
jo
lahf
je
xor
and
inc
dec
pop
mov
lods
mov
insb
outsb
push
mov
mov
mov
xchg
leavew
lea
pop
xor
cmpsl
js
and
jp
fistpl
xchg
std
inc
mov
mov
adc
mov
mov
out
xlat
xchg
lods
orb
dec
jnp
test
xchg
mov
push
adc
jne
in
jo
popa
dec
mov
mov
rol
and
push
int
jnp
cmp
sub
jnp
mov
mov
mov
shl
pusha
aas
push
inc
lods
jno
dec
movsb
ss
jno
arpl
dec
mov
cmp
call
mov
adc
mov
push
dec
adc
in
adc
cmp
push
push
inc
test
cld
arpl
mov
inc
mov
divb
mov
sti
jmp
call
mov
xchg
push
mov
xchg
pushf
xchg
push
lea
mov
and
push
sahf
jbe
jae
xchg
push
sub
xor
mov
outsl
dec
in
dec
imulb
imul
adc
arpl
test
loop
sub
xlat
xlat
add
xor
mov
loopne
jnp
mov
cli
int3
or
xchg
push
lds
addr16
sbb
xor
jl
rorl
sub
or
add
cmpsl
ljmp
aam
mov
into
stos
dec
dec
xchg
xchg
inc
movsb
push
add
xchg
addl
mov
sbb
xor
inc
frstor
pop
out
popf
push
mov
cli
arpl
in
aaa
bound
xorl
and
icebp
addr16
dec
add
ret
in
and
jno
pusha
sbb
outsb
in
hlt
cltd
cmpsb
push
cmp
ljmp
add
daa
pop
inc
popf
fwait
jae
sub
add
xor
mov
push
out
subb
sbb
mov
popf
dec
cltd
adc
scas
and
movsl
sub
je
lret
popf
jbe
mov
fisubrs
hlt
in
mov
js
enter
movsb
ficompl
jg
pop
leave
leave
mov
adc
and
mov
and
sbb
mov
push
es
inc
xor
aaa
or
jg
pop
pop
xor
push
add
inc
lock
push
fcomp
in
push
aas
idivb
gs
jmp
mov
jg
jnp
lret
mov
mov
jns
lcall
cwtl
sbb
inc
xorb
push
mov
mov
mov
xor
mov
cli
int3
lods
cli
daa
aad
adc
xor
js
cmp
xchg
cmp
inc
fildll
push
mov
xor
adc
test
mov
inc
and
loopne
call
jecxz
mov
lret
fbstp
mov
insw
xorb
mov
sbb
lret
lahf
and
lret
jl
aas
mov
adcl
in
mov
ss
push
mov
subb
adc
adc
inc
loope
xchg
movsl
inc
popa
in
sub
xchg
fxch
test
adc
cmp
sbb
xor
push
xchg
shll
xor
jg
pop
test
add
cmp
adc
add
push
push
push
push
pop
negb
sbb
push
jg
into
mov
push
mov
fildl
and
cmp
scas
cmpsl
or
outsb
in
mov
bound
mov
push
mov
sub
dec
dec
sbbb
popf
push
inc
out
inc
cmp
xchg
out
cltd
jne
fidivrs
call
xchg
loopne
add
mov
test
xchg
cmp
in
xlat
ficoms
shlb
mov
push
faddl
xchg
push
orb
fs
sbb
and
jnp
fisubrl
sub
sub
push
stos
or
mov
loopne
shr
sbb
sahf
sbb
sub
add
inc
xchg
push
mov
cmp
dec
ret
cs
popa
ss
xchg
ret
iret
sub
test
inc
test
xor
sbb
xor
adc
xchg
cmp
xchg
push
xor
ja
mov
int
adc
fbld
dec
or
scas
test
add
xchg
add
ror
adc
or
sub
push
xchg
and
aad
hlt
cld
add
pop
jae
or
enter
mov
mov
inc
stos
xchg
jge
mov
mov
push
lret
jmp
jns
fistpll
mov
les
stc
repz
ficoml
imul
cmp
cmp
sbb
push
pop
pusha
movsb
gs
jge
fnsave
into
mov
stos
xor
in
jns
mov
sbb
hlt
add
jbe
stc
jnp
int
jae
outsb
bound
cmpsb
movsl
js
orb
cmp
pushf
and
adc
add
iret
std
add
dec
mov
es
xor
or
fsubl
sarl
pop
xor
popa
sar
pop
test
mov
sbb
cmp
xchg
sbb
lea
incb
cmp
out
out
sbb
stc
mov
cli
mov
jbe
pop
movsb
push
pusha
movsb
push
mov
hlt
xchg
shrl
and
sbb
mov
xor
mov
push
lods
cwtl
scas
movl
sub
outsb
test
jmp
lds
mov
scas
dec
mov
push
mov
daa
iret
mov
mov
in
mov
jbe
inc
lds
pop
cwtl
dec
mov
pushf
cltd
je
fsub
xchg
mov
cmp
sbb
cmpsb
add
iret
loopne
stos
rclb
mov
loop
jle
push
das
xor
adc
in
gs
movsb
and
loope
scas
cs
aaa
loopne
adc
fstp
dec
and
addb
sub
xchg
cmp
cld
push
xchg
mov
dec
mov
sbb
mov
xorl
repnz
sti
pmovmskb
dec
jl
pop
mov
jnp
ret
pop
sbbb
mov
xor
push
cld
add
repz
popf
nop
stos
out
fwait
mov
ret
stc
lahf
jno
out
loop
or
pop
cmpb
mov
loopne
pop
push
dec
cmp
sub
mov
mov
andl
pop
push
adc
push
int
test
aam
push
jecxz
xchg
add
mov
je
jbe
movsb
sub
cmp
sarl
inc
scas
ljmp
mov
add
and
pushf
incb
fildl
add
xor
mov
lret
lea
xchg
popa
pusha
ror
add
dec
add
inc
ss
jl
add
sbb
outsb
push
lods
and
aad
xchg
aad
cmpb
repz
cmp
jo
fs
and
vpcmpeqb
mov
push
cld
xlat
dec
repnz
jns
add
ret
fstpt
dec
in
call
movsb
push
pop
xchg
dec
test
xlat
data16
mov
in
cmp
mov
arpl
pop
sbb
jae
pop
lahf
pop
push
jo
int3
movsb
mov
pop
and
jnp
xchg
popf
sub
shr
xlat
or
int
mov
push
mov
sub
orb
fstp
fcomi
ljmp
addr16
add
add
ljmp
mov
xor
push
jle
outsb
loopne
and
test
or
add
sbb
or
lds
mov
rorl
clc
xlat
or
notl
cmpsl
aaa
mov
and
mov
fnsave
js
dec
push
cmp
adc
xchg
or
rcr
imul
mov
push
ja
call
cmp
ficomps
cmpsb
lret
rolb
jae
pop
imul
sbb
sarb
xchg
mov
xor
repz
lret
cmp
out
jns
push
cmpsl
jne
and
xchg
fcmovnu
sbb
fadds
xor
sbb
out
and
adc
sbb
push
cwtl
fcomps
fwait
inc
popf
jns
dec
or
mov
imul
xor
outsb
sahf
lret
add
inc
pop
iret
push
testl
push
sub
add
mov
adc
push
pop
push
and
imul
test
pop
cltd
mov
cmp
mov
mov
jl
jnp
cmp
dec
in
orb
and
daa
dec
in
push
mov
jg
mov
mov
xchg
es
or
jecxz
pop
mov
leave
stos
push
insl
maskmovq
divl
jno
jnp
out
pop
xchg
pop
mov
hlt
push
sub
lods
push
inc
test
inc
mov
cltd
pop
xchg
loop
xchg
inc
movsl
fsubl
inc
push
insl
pop
mov
inc
mul
test
dec
int3
loopne
addr16
inc
clc
scas
ja
cmp
scas
outsb
js
fcoms
jg
ret
cmp
popa
adc
lds
xchg
ficoml
cltd
adc
mov
jge
dec
out
pushf
mov
add
sbb
adcb
rclb
pop
mov
jnp
movsb
aad
add
mov
sbb
push
and
jae
adc
or
xlat
enter
lods
cli
pop
xor
dec
or
insl
jnp
out
and
stos
xor
xlat
mov
dec
imull
cmpsb
ds
cmpb
jo
js
add
mov
out
into
ja
addr16
and
mov
pop
adc
je
mov
sub
out
imul
add
into
pop
imul
sub
dec
sbb
dec
mov
iret
mov
stos
jg
add
leave
inc
sbb
aaa
cli
adc
or
je
leave
cwtl
ljmp
mov
loop
sahf
xor
mov
pushf
cmc
nop
icebp
cwtl
mov
and
pushf
in
jbe
mov
pop
inc
aas
out
cltd
dec
fldl
jp
inc
mov
push
ljmp
sbb
ret
sub
mov
ret
scas
call
pmuludq
jne
popf
cmp
jne
add
test
lods
in
aam
aas
jmp
and
add
outsl
pop
popa
mov
sbb
test
pop
sub
dec
push
xor
imul
lret
jo
mov
xchg
pop
dec
fnstsw
iret
mov
jne
mov
pushf
add
adc
xchg
push
xchg
pop
cwtl
push
mov
jg
sbb
insb
insl
and
inc
jae
ret
inc
sbb
mov
mov
jle
gs
mov
aaa
mov
adc
lret
in
jnp
cmp
in
cwtl
jb
mov
xchg
mov
repnz
xor
push
jae
mov
add
cs
mov
mov
dec
sbb
repnz
cmpsl
cmp
pop
fidivrs
xlat
sbb
cmpsb
xchg
dec
sahf
jnp
xlat
js
sbb
stos
fnstenv
jl
faddl
or
fdivs
sub
jae
out
test
arpl
xor
popf
push
loop
imul
jmp
fmuls
sub
subl
stos
cmp
fdivrl
imul
lods
outsb
xlat
jbe
dec
mov
leave
and
push
dec
cmpsb
loope
mov
js
ja
xlat
xchg
stc
mov
and
loope
outsb
push
into
rdmsr
xchg
loopne
jle
sub
pop
mov
out
ss
pushf
push
jecxz
jnp
clc
xor
push
rcrl
std
xor
add
lret
dec
sub
pop
leave
xor
fiaddl
aam
lret
iret
dec
movsl
aad
jb
gs
and
pop
shll
insl
mov
jp
call
pop
mov
push
mov
inc
inc
movsb
test
movsl
ret
add
aaa
mov
std
lods
lds
jb
dec
dec
sbb
mov
and
adc
add
xchg
add
hlt
cmc
jb
inc
cmp
imul
call
push
idivl
scas
mov
repz
xchg
nop
es
gs
mov
test
fisubl
cwtl
pop
jo
xor
and
sbb
pop
das
mov
cmc
dec
insb
cmp
orl
sbb
pop
fwait
cmp
push
addr16
popf
xlat
jle
inc
int3
jecxz
jecxz
add
subb
mov
test
xor
mov
loop
adc
xlat
std
cli
sbb
lds
mov
xor
mov
pop
push
or
dec
dec
arpl
add
cmp
pop
pop
mov
lret
outsb
lret
cmc
sub
add
and
mov
sub
or
cltd
sub
idivl
sub
and
ja
fs
mov
lcall
jmp
stc
dec
cmp
push
sbb
jae
lods
mov
mov
out
aaa
sub
pop
lret
jns
push
dec
lcall
daa
lds
loopne
fstl
dec
icebp
pop
push
test
leave
inc
mov
push
outsb
jl
mov
jne
ljmp
outsl
outsb
mov
lcall
stos
test
pop
sahf
pop
pop
lock
shll
push
dec
mov
pop
jmp
jns
lcall
jno
in
xchg
call
mov
stos
mov
cmp
outsl
mov
mov
lods
stos
sbb
cmp
mov
push
lea
jbe
pop
sbb
jecxz
dec
repnz
xchg
pop
inc
sarb
rcr
xlat
jnp
lret
adc
jb
ljmp
mov
in
lods
adc
push
testl
inc
mov
inc
shlb
cmp
jne
push
push
mov
js
xchg
sbb
imul
push
sub
sbb
pop
mov
in
sub
add
pop
sbb
inc
xchg
adc
pop
mov
push
and
sub
fisttps
ja
xor
lock
jb
mov
sub
loope
jnp
sub
ljmp
ja
je
add
inc
jnp
fdivrs
or
out
push
mov
je
sub
cmpsl
inc
js
sbb
and
ljmp
loop
movsl
push
jbe
or
push
in
call
sahf
sub
stos
add
outsb
or
push
xchg
aam
mov
mov
mov
or
adc
das
mov
cld
and
push
mov
or
mov
jle
les
sub
add
popa
adc
arpl
repz
ss
arpl
mov
cmp
pop
movsb
std
pushf
mov
push
pop
xchg
sub
nop
mov
dec
fistl
fwait
cmp
adc
cmpsb
mov
pusha
cmpsl
adc
mov
sbb
les
addb
mov
je
push
push
cmc
mov
faddl
xchg
in
xor
inc
cwtl
jg
rol
pinsrw
cmp
add
lock
cs
aam
imul
mov
stos
mov
xchg
xor
mov
aad
push
or
fwait
sbb
add
shlb
sbb
mov
addr16
lret
cmp
mov
inc
mov
mov
fs
subb
fstl
sub
and
mov
xor
cmp
rorl
sub
push
ret
aad
inc
and
dec
ja
loop
loope
rol
jne
popf
lret
movsl
or
imulb
cld
or
pop
outsb
lcall
fwait
xlat
sahf
fcoml
insb
imul
lds
mov
notb
addr16
push
pushf
popl
repz
pushf
xchg
xchg
dec
sub
cmc
mov
xor
fwait
adc
ja
mov
pop
and
cmp
and
pxor
jg
int3
cmc
cmpsb
cwtl
mov
xor
sbb
scas
jbe
dec
pushf
pushw
jge
fisubrs
icebp
mov
js
imul
es
lods
inc
cwtl
jmp
push
mov
icebp
icebp
dec
jle
mov
xchg
push
sbb
std
or
fadds
jo
mov
imul
cmp
mov
mov
jp
lcall
jbe
cmpl
call
push
xchg
xchg
shr
pop
insl
xor
inc
jns
lods
ljmp
push
inc
cmp
push
icebp
mov
addr16
add
sbb
outsb
ret
push
mov
in
push
sub
out
xchg
js
cli
push
dec
inc
mov
pop
inc
jecxz
imul
into
out
sti
shrb
dec
dec
lret
addr16
lods
shlb
adc
pop
cli
shl
pop
lret
pop
ss
add
imulb
dec
sbb
lcall
sahf
jle
adc
push
add
outsb
inc
and
mov
mov
insl
mov
std
mov
inc
lret
mov
lds
repz
xchg
adc
adc
fdiv
out
sbb
addr16
xchg
mov
cmpsb
shlb
ret
mov
lods
in
lcall
rcll
lods
lea
mov
cs
sbb
sub
inc
scas
mov
enter
jnp
imul
data16
or
pop
pop
xchg
cs
aam
xor
mov
lret
pop
lods
or
aad
mov
inc
add
fidivl
xor
aam
mov
add
pop
mov
call
push
pop
xor
test
cmp
xor
popa
jbe
inc
rcll
movsl
push
or
cmp
fiadds
mov
in
inc
and
or
out
and
scas
cmp
pop
dec
out
rol
jg
xchg
lcall
jle
pop
js
imul
sbb
subb
cli
xchg
popa
fdivs
ret
sti
shl
xchg
mov
scas
mov
pop
dec
inc
data16
mov
pop
jnp
push
data16
jnp
adc
incl
dec
lret
shll
mov
sahf
adc
sbb
lds
insb
gs
pop
push
pop
ss
lret
sarb
iret
mov
in
pop
ja
out
fmuls
paddw
or
insl
mov
add
sbb
cld
clc
gs
pop
out
pusha
loope
outsb
dec
push
sub
sub
jg
add
sub
dec
icebp
ror
dec
mov
pop
sbb
fsubrs
dec
sbb
mov
aam
and
cmp
pushf
adcl
das
movsb
pusha
sub
sbb
mov
notl
push
jmp
leave
outsb
inc
jmp
push
pop
pop
push
leave
dec
clc
in
fidivrl
mov
enter
jl
cli
cmp
add
mov
test
add
data16
dec
xchg
add
adc
test
and
mov
popf
mov
sbb
inc
inc
scas
dec
pop
xchg
inc
xchg
pusha
pop
add
sbb
jae
dec
inc
xlat
aaa
jbe
cs
inc
scas
and
mov
xchg
dec
push
mov
cmp
sub
shll
push
pusha
xor
jb
sti
ds
sub
dec
int3
push
sbb
push
pop
mov
jns
stc
negb
pop
outsl
jae
mov
movsb
sbb
and
dec
stc
mov
mov
or
rolb
jae
inc
scas
lahf
ret
jnp
push
mov
hlt
sub
fldt
jmp
inc
add
cmp
push
lret
es
pop
popa
pop
and
int
and
movsl
adc
nop
jge
cmp
cmp
push
fldenv
adc
jo
add
add
mov
cmp
in
mov
xor
sbb
or
test
sbbl
lret
push
loope
mov
jbe
add
dec
xchg
test
pop
cmp
dec
sbb
pop
pop
add
inc
addr16
sbb
and
mov
dec
push
mov
mov
popf
fiadds
mov
jno
push
jmp
or
sub
fs
mov
and
repnz
push
js
fdivrs
mov
mov
adc
mov
dec
aas
push
push
mov
xchg
fstps
aad
shl
push
loopne
movl
jno
push
icebp
adc
cmp
or
decl
sub
stos
mov
in
aam
cltd
pop
push
jle,pn
jmp
jo
mov
cltd
outsl
mov
xor
pop
aaa
inc
fisubl
ss
add
jecxz
es
push
xor
test
inc
push
daa
std
pop
sub
in
inc
mov
cld
jp
aas
call
adc
inc
pop
jge
pop
mov
ret
hlt
imul
paddsb
push
insb
insl
movsb
push
xchg
cmp
dec
int
mov
mov
and
and
xlat
mov
in
mov
xchg
pop
push
mov
push
pop
rcll
insl
test
pop
movsb
cmp
pop
pop
pop
xor
je
dec
out
sbb
add
loopne
pop
pop
imul
add
cltd
xchg
dec
jae
and
daa
mov
cmp
insb
movsb
jecxz
mov
in
fs
aaa
addb
cltd
inc
dec
dec
xor
push
outsl
sbb
out
sbb
sbb
xchg
push
sub
mov
or
and
mov
orb
arpl
xchg
pop
xor
out
and
fldt
stos
stc
dec
adc
in
mov
push
adc
and
psubsw
xchg
adc
pop
rcrb
cmp
leave
es
fmul
sarl
sub
mov
mov
mov
cmpsl
jns
rorb
cmp
lods
xchg
je
outsl
leave
add
dec
outsb
and
stos
test
out
or
out
enter
cmp
lea
jmp
incl
push
rorl
pop
dec
loopne
and
test
in
mov
fmull
fxch
jno
bound
aad
aam
loop
sbb
xchg
and
adcb
movsb
mov
dec
jge
lea
sbb
call
rcrb
xchg
mov
mov
xchg
xchg
mov
mov
jmp
cmc
stos
dec
inc
dec
sti
sbb
dec
inc
lds
dec
inc
mov
or
pop
and
scas
into
sbb
jo
or
mov
cmp
jecxz
frstor
fsubrl
pushf
inc
inc
popl
cmpsl
ret
jae
and
fcomp
mov
sbb
mov
pop
les
das
or
int
fs
sub
out
cmc
adc
adc
gs
push
pop
cmp
push
mov
pop
xchg
filds
mov
je
add
dec
mov
mov
xchg
hlt
adc
pop
int
es
add
test
addl
lock
scas
mov
into
or
aaa
mov
or
and
push
and
movsb
sbb
fsubl
mov
mov
mov
bound
push
fidivrs
and
aas
lcall
mov
sbb
aas
and
fimuls
xor
pusha
scas
mov
fsubrs
popa
decb
jp
in
notl
or
popa
jns
mov
xor
dec
pop
pop
xchg
ret
mov
cmp
notl
leave
stc
pop
mov
nop
addb
sub
orb
ret
nop
xor
pop
push
cmp
stos
add
mov
dec
adc
xchg
stos
std
fildl
jb
jb
mov
test
nop
cmp
xor
addr16
xor
xchg
bound
push
jl
lahf
and
inc
mov
sub
push
inc
push
out
pop
jmp
push
xor
xchg
es
pop
cmp
cmpb
cli
mov
cld
shlb
fstps
xor
add
push
mov
test
enter
inc
mov
pop
push
cmp
and
arpl
aas
scas
ljmp
lret
daa
call
mov
inc
aas
fdivr
je
lds
mulps
pop
push
in
stc
jmp
iret
arpl
cli
push
fisubrl
push
sbb
imul
test
ja
jo
dec
xor
adc
sbb
lds
or
and
mov
sbb
pop
pop
pop
or
jg
jno
lea
xchg
sub
pop
add
mov
rcr
mov
stos
cltd
bound
scas
dec
inc
mov
rcll
sahf
daa
jl
pop
fiaddl
stc
adc
mov
divb
jp
and
xchg
adc
stos
call
jae
out
fstl
rcrl
fwait
xchg
or
daa
jns
mov
daa
xchg
push
push
arpl
je
mov
jbe
sub
xor
stos
sbb
insb
mov
movsb
dec
cmp
fisttpll
movsl
shrl
arpl
sbb
mov
adc
push
nop
jl
stos
int
cs
call
ja
gs
ljmp
mov
movsl
inc
sbb
mov
into
mov
inc
arpl
push
sti
ja
enter
sub
sti
or
pushf
and
jo
jbe
mov
xlat
loope
std
js
and
popa
clc
mov
lods
and
out
mov
hlt
int3
js
rcll
int3
arpl
cmc
pop
dec
insb
cmp
adc
sub
jnp
cli
mov
enter
mov
sub
push
fucomi
xchg
sbb
dec
jno
in
ljmp
push
iret
enter
mov
lahf
aam
inc
pop
mov
xchg
jnp
cmpsb
pop
gs
test
fnstsw
orb
sbb
nop
push
xor
mov
mov
mov
xlat
loope
mov
xlat
int
cmpsl
pop
inc
push
std
fwait
add
mov
jno
mov
lods
out
fmuls
xchg
sub
rclb
cmp
jno
cltd
pop
hlt
and
out
call
or
rorl
roll
inc
out
sbb
dec
out
fucom
or
in
lods
mov
jle
cmp
lods
pop
add
pop
jae
hlt
nop
cmp
lea
mov
test
dec
imul
dec
push
mov
add
mov
dec
dec
mov
data16
dec
test
aam
fcomi
mov
fiaddl
gs
and
and
adc
mov
stos
xchg
andb
jae
stc
lods
sub
pop
mov
gs
daa
mov
xor
xlat
in
jecxz
stc
shl
cmp
adc
jg
jge
mov
imulb
jb
mov
ret
add
leave
pop
sub
lret
sbb
lcall
imul
dec
aam
dec
or
and
mulb
lahf
mov
fs
dec
or
fldt
fisubs
mov
jle
push
jle
xchg
out
cmpsb
out
xchg
inc
movsl
lods
pop
jp
movsb
daa
aam
sub
add
add
xor
push
inc
outsb
mov
js
cwtl
test
push
add
pop
daa
or
xchg
dec
test
xchg
stos
push
das
das
sub
push
push
dec
jmp
iret
rcrb
inc
ret
sub
cwtl
dec
or
jg
jnp
movsb
dec
xorb
jge
repz
xchg
mul
jge
jb
xchg
leave
sti
cmp
ret
push
push
stos
jle
jno
test
fnstcw
movsl
dec
pop
gs
pop
xorl
andl
enter
lods
fdivs
aas
pavgw
loope
or
mov
sbbl
jns
incl
sub
mov
mov
fwait
test
punpckhbw
jnp
and
cmpsl
stos
fxch
mov
fcmovnb
or
xchg
mov
ss
mov
movsl
lods
lret
inc
shlb
jge
mov
gs
ret
cmpsl
ds
mov
int3
jg
push
inc
pop
mov
idiv
imul
movsb
xchg
mov
and
outsl
in
push
mov
js
addl
inc
sti
inc
imul
hlt
jg
add
in
sub
enter
xchg
inc
ret
and
or
jge
call
xchg
iret
fisttpl
aad
dec
mov
cs
and
jo
cs
sub
push
addr16
insb
pusha
in
push
push
aas
pop
arpl
add
push
pop
pop
push
das
repnz
andl
pop
js
cli
pop
int3
or
and
push
mov
aam
mov
lret
dec
sub
pop
mov
mov
and
mul
test
mov
insb
cmp
xlat
popa
mov
lret
out
cmp
jne
or
sub
loop
sbb
loope
xchg
int
into
ret
pop
jg
outsb
cmp
and
shll
dec
shrb
addl
push
pushf
pop
iret
cwtl
add
aas
push
mov
gs
add
or
jns
mov
ljmp
push
and
push
je
sbbb
popf
adcl
add
add
xlat
pop
jne
lahf
out
cld
fs
xlat
ljmp
cltd
add
mov
cmp
adc
mov
scas
loopne
les
imul
int3
inc
fildll
adc
adc
xor
inc
in
mov
stos
pushf
push
jl
mov
mov
out
imul
mov
mov
fnstenv
fmull
sbb
inc
sbb
orl
std
inc
movsl
shlb
outsb
clc
pop
les
fcompl
test
pop
test
fwait
out
push
inc
lods
dec
sahf
push
cmpsl
les
ss
sbb
xor
adcl
and
pushw
out
mov
imul
cmp
jp
test
ljmp
or
sbb
mov
jmp
jmp
int3
xchg
sbb
push
fdivs
add
lahf
fcomps
loopne
or
mov
inc
in
and
jle
cli
loopne
lret
mov
iret
rcll
mov
ljmp
push
imul
dec
lds
mov
inc
mov
shlb
cs
lods
inc
or
shrl
dec
shll
lcall
imul
adc
jmp
rorb
cmp
ret
cmpsl
ret
jno
fs
mov
mov
jno
cwtl
arpl
push
and
jae
mov
mov
insb
int
jl
jge
arpl
stc
std
sub
and
rolb
aam
ret
add
push
arpl
cmp
pop
cmp
sbb
imul
hlt
out
xchg
mov
jae
pop
or
aas
les
sub
shrl
scas
roll
int
mov
js
push
inc
pop
pop
push
push
lods
add
jns
jle
push
add
lea
lcall
push
pop
mov
adc
lret
jge
pop
or
dec
add
pop
scas
sti
add
out
testl
adc
cmpsl
aaa
jne
jl
adc
ret
arpl
mov
inc
adc
notb
fwait
mov
push
push
pop
push
inc
add
or
cwtl
cltd
out
sub
in
ss
add
mov
lea
ret
movsb
fdivrl
insb
mov
push
loope
insb
popa
add
int
data16
pop
imul
push
inc
adc
vsubsd
scas
insl
outsb
jne
mov
cmp
mov
mov
ds
pop
inc
mov
adc
jmp
xor
mov
leave
jmp
bound
mov
jp
and
daa
call
fimull
inc
jmp
lcall
jp
push
push
test
jge
decb
mov
jbe
stos
lea
out
add
inc
cmp
movsl
and
stos
xor
lahf
cmp
aas
dec
dec
hlt
cmp
add
clc
js
imul
repnz
jl
call
rcl
test
pop
mov
ss
iret
in
fildl
mov
ljmp
dec
add
and
stos
in
negb
out
ljmp
pop
fisttpl
leave
push
xchg
ret
push
out
movsl
lds
loope
jnp
addr16
xor
imul
pop
and
add
cld
cmc
pop
bound
push
mov
test
shl
sub
adc
sahf
out
sar
movsl
adc
push
sub
out
ds
mov
lods
insl
xchg
mov
sbb
sub
dec
shll
negl
pop
fdiv
dec
inc
sbb
fisubs
out
xchg
mov
push
adc
xchg
dec
jns
inc
mov
dec
fnstenv
test
cli
add
dec
mov
dec
mov
and
ret
pop
pop
out
mov
push
lods
fidivl
les
int
addr16
jno
pop
dec
addb
push
fwait
inc
lret
push
in
cmc
pushl
jp
js
bound
and
cli
xchg
test
jg
mov
out
dec
and
adc
mov
mov
hlt
stos
jns
xchg
aam
mov
shll
mov
ds
imul
and
jecxz
or
or
out
xchg
and
or
mov
js
sbb
scas
xchg
mov
mov
lret
xchg
cwtl
mov
cmpsl
pushf
or
xor
mov
push
add
cmp
mov
ret
shlb
pop
jno
lea
cmp
cmc
mov
or
jae
sbb
dec
xor
dec
fs
pop
stos
mov
mov
nop
add
add
mov
push
xor
dec
subps
dec
sub
mov
or
push
inc
fdivrs
test
add
lds
jns
scas
outsl
cmp
mov
stos
addr16
and
and
jmp
push
pop
mov
adc
xchg
lahf
test
jbe
js
ds
aas
in
add
lock
sbb
and
and
pop
dec
mov
jecxz
add
cmpsl
movsb
xor
call
push
xchg
and
fcompl
cmpsb
push
mov
jmp
fstpl
cld
adc
sub
fisubrs
jp
mov
daa
popl
nop
cmp
adc
mov
ret
pop
add
mov
jnp
xchg
xchg
stc
pop
cmpsb
js
jne
jb
test
cs
cld
mov
jl
and
fcomps
xor
js
mov
lcall
hlt
iret
xchg
inc
mov
and
adc
shrb
xchg
out
cli
mov
sbb
mov
add
pop
std
jmp
fdivrl
rorb
lea
insb
data16
inc
mov
shr
cs
cmp
fists
inc
mov
insb
and
push
outsb
movsb
imul
es
lret
loopne
mov
dec
inc
lea
inc
stc
push
fwait
aas
pop
movsl
mov
lds
xchg
sub
and
jo
addb
or
add
or
jle
sbb
sbb
sar
out
xlat
dec
and
add
rolb
bound
cltd
bnd
mov
in
adc
negb
das
add
and
xchg
ret
and
inc
hlt
fwait
inc
cmp
mov
sti
dec
xchg
pushf
das
inc
cld
faddl
mov
sbb
js
mov
sbb
icebp
pop
shl
loop
mov
inc
pop
pop
xchg
dec
jge
scas
js
in
cmpsl
leave
mov
mov
cmp
sti
push
cmpsb
sbb
shrl
loop
push
cld
inc
push
push
jmp
cmp
ss
popf
jl
rcll
pop
mov
jno
mov
and
adc
rorl
inc
or
iret
xchg
pushf
inc
mov
pop
gs
pop
stc
xor
cltd
push
xor
push
mov
gs
xor
dec
loopne
aad
sbb
aas
daa
pop
fbstp
inc
pop
nop
cmp
push
or
or
sbb
push
xchg
lods
ja
out
pop
mov
sahf
xor
cmp
sbb
ja
inc
pop
call
jp
and
notb
scas
cmp
test
shlb
and
mov
adc
stc
xchg
lods
inc
addb
dec
jle
or
testl
lret
xchg
daa
dec
pop
inc
xor
stos
pop
inc
fldcw
clc
pop
adc
out
mov
adc
pop
loope
gs
xor
mov
fadd
mov
dec
shr
jns
and
pusha
in
andl
inc
sub
and
into
int3
in
ljmp
das
mov
sbbl
cmpsl
lret
cltd
lahf
xchg
in
push
xor
mov
fildl
aaa
rorb
mov
sbb
jbe
mov
addr16
inc
fnstenv
dec
and
pop
adc
andl
xchg
add
fwait
sub
das
jns
aaa
mov
in
es
pushf
jo
popf
sti
jmp
sahf
cld
loopne
fs
fadds
cmp
lock
mov
pop
cmp
push
ja
or
bound
push
jns
add
mov
sub
sub
mov
jle
test
inc
inc
lret
stos
hlt
mov
sbb
rcll
cmpsb
jae
loopne
push
adc
inc
lcall
sbb
in
loopne
aam
pop
shrl
jle
mov
or
add
test
test
cmpsb
jle
in
cwtl
call
pop
loope
mov
ja
leave
push
rolb
and
mov
inc
gs
xchg
jmp
push
movsb
pushf
aas
iret
dec
cmp
sahf
xchg
dec
sti
ret
or
insb
fwait
pop
cmpsb
lds
out
icebp
jne
lea
mov
sahf
sti
or
sub
lods
xor
nop
outsl
cmpb
jns
mov
add
mov
and
or
testl
std
and
push
cmpsb
xchg
insb
mov
or
mov
les
test
inc
sbb
push
adcl
dec
xlat
jnp
nop
mov
dec
arpl
mov
lds
jno
jp
push
cmp
pop
pop
cmp
sub
imul
push
sti
adc
push
sub
bound
das
lahf
cli
cmp
xchg
outsl
clc
aam
das
jle
stc
mov
mov
xchg
imul
adc
divl
push
adc
lock
aam
pop
int
fwait
imul
aad
shll
test
not
outsb
or
inc
ljmp
arpl
test
jno
mov
or
inc
in
sbb
push
push
mov
bound
inc
push
dec
adc
push
clc
xor
arpl
push
jmp
ret
popl
imul
sub
ja
hlt
mov
dec
mov
add
add
aam
mov
xchg
mov
xchg
sti
push
and
nop
pop
push
cmp
hlt
outsb
test
mov
push
and
test
ret
movsb
test
mov
mov
cmp
or
jns
push
mov
mov
nop
outsb
add
scas
stos
jecxz
push
pop
andl
je
and
jge
aad
cmp
xor
inc
inc
cmpsb
jge
jae
aam
pop
add
sub
add
jg
fbstp
and
inc
add
imul
and
sbbl
ljmp
or
shll
and
adc
add
ja
adc
dec
jnp
daa
bnd
int3
cmp
mov
inc
sbb
mov
jb
stos
push
push
lock
stos
repz
mov
mov
test
clc
add
in
pop
xor
pop
dec
pop
cmp
cmp
es
enter
int3
push
cmp
dec
out
dec
inc
jmp
sbb
or
xchg
filds
push
int
out
cmp
sbbb
cwtl
jne
sti
les
push
cmp
test
popf
xchg
hlt
mov
adc
mov
push
dec
and
add
std
jne
xchg
pop
add
xchg
stos
jnp
cmp
in
icebp
subl
sbb
push
sub
sbb
mov
mov
dec
inc
mov
jno
xchg
popa
push
push
mov
xchg
mov
lods
pushl
dec
push
sub
jmp
cli
mov
adc
pushf
push
pop
sub
dec
ja
jmp
lods
insb
inc
ficoms
hlt
lahf
dec
push
insl
fwait
mov
mov
jle
loopne
jg
loope
xor
sub
movsl
dec
aam
sbb
loopne
cmp
enter
cmp
stos
lea
int3
cmpsl
outsl
idivb
sub
cli
adc
in
outsl
push
xor
mov
lods
leave
push
rclb
adc
xchg
adc
xchg
cwtl
lods
xor
jbe
ja
fstps
sub
test
cli
mov
push
jne
add
imul
shlb
lods
enter
push
incb
idivl
or
lods
filds
pop
push
or
enter
xlat
jns
xor
push
jle
shll
cmp
xchg
push
test
shll
jge
aad
and
mov
mov
dec
and
cmp
add
mov
cmp
or
lret
mov
pop
cmp
and
sub
clc
cmp
mov
or
jp
mov
jl
jo
pop
xchg
cmpb
mov
jbe
mov
test
sub
das
push
stc
stc
mov
mov
mul
int3
push
repnz
gs
cmp
push
in
bound
pop
cmp
dec
sub
popf
cmp
push
fldcw
push
inc
idivb
cmovp
xchg
jmp
push
mov
and
hlt
ret
push
sub
push
dec
sbbb
pop
or
fidivrs
iret
jae
mov
into
mov
xchg
mov
xchg
and
inc
sbb
sti
adc
movaps
cmp
xorb
stos
mov
daa
test
sti
mov
mov
dec
fsubr
dec
mov
shll
add
aaa
adc
sbb
xchg
pop
imul
clc
aas
jg
push
jne
fwait
and
aam
popa
lock
data16
fmuls
mov
bound
mov
cmp
push
sub
jmp
dec
std
pop
int
and
xlat
and
test
rclb
daa
and
jno
mov
push
push
push
repz
xlat
ljmp
fstpl
or
sbb
sti
and
jns
dec
jp
adc
jno
mov
sbb
pop
adc
int
adc
mov
inc
sub
popf
add
cmp
mov
stos
gs
imul
pop
in
stos
inc
pop
mov
fwait
push
stos
jg
cli
dec
scas
pop
rorl
mov
insl
fistpll
xchg
cmpsl
int
adc
cmp
fwait
test
insb
jae
mov
fistps
mov
clc
mov
pushf
or
mov
adc
add
and
mov
cmp
nop
jnp
iret
pop
sbb
mov
xor
sahf
sbb
scas
outsb
sub
pop
push
add
inc
xchg
jno
pusha
mov
lcall
mov
pop
lods
inc
mov
push
cmpsl
pop
pop
cld
sbb
push
fidivrs
adc
scas
iret
inc
or
sub
push
outsl
pop
xor
sub
cltd
cmp
stos
jle
mov
loop
xchg
mov
shl
or
cmc
daa
inc
push
call
or
push
out
lret
cs
mov
sub
add
jb
sahf
or
fcompl
jle
mov
cwtl
fnstcw
inc
rcrb
pop
jl
push
bound
mov
iret
cmp
cmp
mov
pop
aaa
mov
outsl
mov
test
inc
xor
fmuls
out
mov
daa
test
xor
jg
cld
xchg
pop
loopne
jbe
dec
neg
ljmp
or
xchg
jge
add
sbbb
stos
cltd
in
stos
xchg
inc
std
ret
out
sbb
mov
xchg
lcall
mov
dec
mov
out
mov
or
pop
cld
adc
mov
mov
hlt
adc
aad
cmp
testb
mov
xchg
sub
insb
xchg
jmp
ret
lods
in
in
sub
in
jnp
cmp
sbb
xchg
ja
je
cwtl
loope
inc
adc
cmp
shlb
and
cmp
add
add
jb
in
pop
jb
bts
outsb
and
ljmp
push
popf
fistl
jge
test
dec
dec
xor
rolb
sub
popf
push
inc
and
in
lret
fcomi
jae
lret
orb
jnp
pop
mov
and
push
add
pop
xor
mov
js
and
lods
aaa
test
mov
lcall
rcpps
fwait
stos
cmp
shlb
stos
mov
xor
outsl
xchg
cmp
jb
jmp
lods
push
push
sbb
inc
daa
test
insl
jp
cmp
jp
xlat
pop
sub
xor
or
cmp
int3
mov
or
jo
imul
lock
in
cs
fucomi
cli
cmpsb
xlat
and
jo
in
mov
fcmovne
mov
jns
push
xor
leave
pop
arpl
mov
sub
jl
mov
mov
mov
mov
pop
je
push
aad
mov
shrl
loope
mov
mov
cmpsb
jecxz
mov
xor
jno
out
pop
dec
mov
dec
popa
pop
imul
lods
pop
pop
xchg
imul
insb
gs
outsl
dec
cmpsl
je
stos
outsb
shrw
inc
je
pop
xlat
shr
aam
xchg
jbe
sbb
mov
icebp
in
out
in
lret
fisubl
test
adc
pop
xchg
add
sbb
das
cmpsb
test
dec
sbb
inc
andl
cwtl
daa
lock
icebp
decl
or
mov
or
das
ss
push
pusha
mov
fnstenv
cmpsl
repz
aam
cmp
cli
es
fadds
jmp
test
int3
sub
push
shrb
xchg
mov
addb
int
pinsrw
cmp
leave
shlb
sahf
and
fistl
adc
mov
pop
addr16
pop
dec
sub
mov
push
mov
xchg
sbb
pop
xchg
cli
push
inc
adc
fwait
jp
xchg
fucomip
cmc
mov
mov
scas
xchg
cmc
add
mov
test
cmpsb
outsl
dec
mov
je
dec
daa
test
cs
pusha
in
mov
pop
mov
pusha
sub
cmpl
stos
fdivrl
fcmovu
xchg
insl
jmp
mov
cwtl
add
adc
xor
cmp
mov
inc
popa
jl
iret
inc
cmpsl
mov
mov
sbb
arpl
xlat
dec
jg
xchg
lea
dec
fbld
adc
xchg
xchg
sbb
enter
outsb
push
pop
int
xchg
xchg
fcoms
inc
push
pop
cmp
mov
adc
adc
inc
dec
ret
pop
packuswb
nop
ja
ja
push
test
inc
and
mov
mov
cmc
aam
roll
rcrb
negl
fstpl
inc
cltd
mov
lret
adc
repz
push
out
mov
in
shl
pop
xlat
jo
push
xchg
mov
fnstcw
stos
jbe
rorl
vpmacsdql
loopne
std
or
inc
in
inc
add
cld
jnp
mov
mov
popf
sub
in
jnp
leave
jbe
or
popa
cmp
pop
jp
aam
movnti
adc
cmpsb
mov
inc
pop
fucomp
lret
mov
jg
xor
mov
jge
mov
fcoml
inc
push
mov
jae
pop
inc
outsl
push
ljmp
sarb
xchg
pop
rcrl
lahf
adc
sbb
aas
xlat
out
and
mov
add
rcrl
sbb
lock
sbb
loope
pop
int3
inc
mov
js
ror
das
jle
loopne
jp
ds
and
adc
add
clc
cwtl
adc
cmp
out
jnp
mov
in
mov
pusha
pop
push
addr16
jg
icebp
gs
push
cmc
decb
adc
lock
and
push
out
sti
mov
xchg
mov
clc
mov
aas
cmp
addr16
fcoms
mov
cmp
jecxz
ja
sub
ficomps
push
pop
xor
jp
inc
inc
cmp
in
daa
or
outsl
sub
addr16
das
add
dec
fs
push
shll
and
movsb
in
inc
or
jge
icebp
insb
and
fdivrl
aam
push
mov
mov
out
inc
cmp
dec
scas
jne
add
sbb
aam
fsub
inc
add
mov
or
mov
rcll
xchg
cmpb
sub
subb
into
loope
sub
cs
cmp
push
add
xchg
sub
jb
push
pop
popl
push
out
add
ds
fdivl
or
xor
divl
and
cmp
sub
cmpsb
jmp
jae
push
mov
movsb
push
mov
dec
and
loop
push
or
stos
adc
pop
pop
jecxz
loope
shlb
sahf
lds
repz
pop
mov
cmp
int3
scas
add
repnz
daa
adc
vpcmpgtw
cmc
and
and
adc
enter
xlat
roll
imul
push
fdiv
pop
test
jae
outsl
int3
ffree
daa
stos
imul
outsl
xchg
mov
lret
popa
add
stc
and
imul
aas
dec
cmc
outsl
inc
sbb
add
and
lahf
call
push
mov
in
fisttpl
insb
add
xor
mov
std
aam
pop
repnz
jle
cmpsb
pop
inc
clc
movsl
pop
popl
push
sbb
push
int3
aas
dec
cmp
pop
xor
out
and
pop
or
push
mov
roll
cmp
jecxz
jb
cwtl
scas
lods
leave
fldl
sub
hlt
push
xchg
aad
pop
cmp
xchg
fdivrs
addr16
in
adc
into
je
bound
or
mov
sbb
xor
inc
jp
cmp
scas
lods
icebp
scas
ljmp
arpl
push
mull
xchg
gs
jbe
sbb
sub
mov
mov
aas
or
pop
mov
sbb
jae
icebp
and
sub
shr
jne
jp
push
cmc
lret
lahf
ret
push
sbb
js
out
push
mov
or
aam
in
orl
pop
sbb
flds
and
aas
or
insb
dec
cmp
inc
je
mov
mov
pop
cli
adc
icebp
mov
mov
imul
stos
mov
xor
dec
dec
jno
repnz
mov
inc
out
dec
cs
add
jmp
mov
ljmp
in
test
ret
push
negl
call
pop
repz
or
and
filds
mov
jo
sbb
xchg
mov
out
lock
out
xor
xor
movd
cltd
adc
and
cmp
shrb
add
leave
ret
push
iret
ss
inc
imul
pop
xchg
aam
loop
adc
mov
xchg
pop
in
pop
pop
cld
xchg
mov
sbb
jno
loop
movsl
loope
cwtl
icebp
hlt
ret
adc
pop
fdivrl
pop
xchg
push
jge
xor
loope
add
jge
cmp
push
das
xchg
leave
sub
lock
scas
insl
mov
cs
addb
fwait
int
and
push
lret
and
out
xchg
mov
and
inc
inc
lahf
and
insl
inc
inc
shlb
xchg
aas
fcomp
push
and
ret
icebp
sub
dec
inc
inc
mov
faddl
dec
out
jp
mov
or
rorl
push
or
repz
xor
fldcw
fisttpl
push
inc
lods
mov
cmp
jnp
cs
popf
xchg
adc
xchg
lock
in
jecxz
sbb
jns
bound
inc
leave
mov
lods
jge
add
push
bound
mov
cltd
movsb
or
test
sbb
dec
data16
push
sub
out
icebp
push
cmp
xor
and
cmp
mov
inc
iret
xor
push
xchg
inc
mov
es
adc
jl
mov
dec
loopne
or
adc
aaa
push
lahf
inc
dec
faddl
push
cltd
popf
push
orb
imul
xor
shr
es
cmp
cbtw
sbb
xor
or
add
andl
and
mov
fs
pop
mov
test
ret
mov
ret
sub
push
adc
mov
lcall
or
dec
stos
push
dec
or
mov
cmpsb
bound
lahf
push
lods
jne
fwait
icebp
cmpsb
into
test
xchg
xor
and
das
cmpsb
or
push
push
movsb
cmc
lret
xlat
repz
lcall
movsl
aad
test
mov
inc
pop
push
sub
xchg
loope
mov
pop
and
rcll
and
insl
inc
xchg
mov
push
ljmp
das
push
sbb
and
push
je
std
lret
rcrb
add
and
cltd
mov
sbb
loop
mov
pop
rcll
pop
enter
imul
or
add
out
loope
mov
in
das
push
pop
loop
mov
lret
sub
icebp
ljmp
jg
scas
mov
push
lods
xchg
mov
or
or
pop
jno
movsl
mov
sarl
inc
stc
insl
push
mov
lea
xlat
or
jae
push
xor
dec
xchg
push
mov
jecxz
pushf
stos
xor
sbb
les
repz
dec
mov
loop
stos
jo
dec
mov
lock
ror
and
or
fists
popf
fimull
and
mov
mov
sbbb
stc
loope
out
es
in
xor
sub
mov
insl
popa
lahf
arpl
ss
jns
mov
dec
mov
xlat
out
cmpsb
popf
and
popf
mov
fsts
mov
sub
cmp
mov
push
test
clc
or
jae
push
xor
sti
inc
sbb
xchg
das
sub
sbb
fsubl
push
jmp
scas
leave
sbb
inc
sub
stos
cmc
sub
in
clc
mov
daa
cltd
sbb
sbb
fsts
mov
pop
sahf
xorl
pop
jnp
cmp
xchg
aam
pop
outsb
dec
sti
inc
pop
popa
inc
xor
cmp
mov
sbb
add
je
sub
pop
adc
sub
das
fistl
lret
in
in
mov
dec
mov
ss
or
call
les
int3
aas
call
gs
jbe
push
fst
fucomip
jl
ja
in
loopne
insb
push
sub
xchg
cmpsl
shl
mov
mov
add
lahf
xor
das
mov
add
cmpsb
xchg
xor
sbb
push
clc
leave
out
inc
cmpsl
test
cmp
and
jecxz
and
pop
test
adc
jmp
mov
sub
lret
outsl
gs
and
pop
mov
fisubs
lcall
xchg
fcmovne
or
sahf
jb
pushf
jp
int3
test
loopne
das
in
in
loope
inc
lret
pop
lods
sbb
or
cli
nop
dec
jl
andb
in
sbb
aam
aam
jle
leave
xor
add
shlb
adc
xlat
jno
inc
push
mov
lret
bound
addl
xor
inc
adc
cmc
ficoms
sbb
ds
inc
int3
aaa
stos
dec
mov
addr16
pop
pop
inc
xchg
push
cmpsl
adc
arpl
push
adc
mov
pop
hlt
movsb
dec
dec
jne
in
jge
fisttpl
inc
dec
xchg
insl
fsubl
inc
mov
fdivrl
frstor
mov
in
sub
mov
mov
js
pop
mov
mov
shl
pop
sarl
mov
add
cmp
mov
mov
inc
das
loop
icebp
out
cld
mov
add
aaa
rorl
dec
lahf
jmp
mov
pop
jo
lahf
mov
jg
add
je
fisttpll
or
or
in
movsb
jb
dec
add
add
adc
ret
mov
jns
xchg
into
decb
sbb
aaa
mov
in
out
sti
inc
adc
or
popf
mov
test
pop
push
add
mov
jp
sub
pushl
lods
sti
outsl
lea
jle
mov
mov
stos
mov
jle
push
xlat
sub
divb
in
test
mov
inc
lret
int
or
insl
movsb
jo
insb
lock
iret
int
rcrl
mov
inc
push
inc
imul
and
add
jae
xchg
das
lds
inc
pop
push
out
mov
xorb
lock
pop
jnp
mov
testb
jnp
adc
insb
inc
pop
inc
mov
mov
mov
ret
cmpsb
lahf
or
adc
jp
loope
fisttpl
in
cmc
dec
call
rcr
lock
mov
dec
jbe
fsubrp
out
dec
or
mov
dec
and
sbb
cmp
jnp
movsb
gs
cmpsl
das
loope
sar
dec
mov
xor
cmpb
jg
pop
push
dec
xor
adc
add
add
mov
mov
lcall
sub
loope
inc
inc
xlat
hlt
mov
aas
mov
pop
pushf
jbe
cld
aad
int
int
nop
mov
xor
cmc
gs
fsubrl
cld
aam
sub
jns
xchg
int3
xchg
push
xchg
xor
pop
sbb
jne
mov
enter
aas
dec
loop
lods
xlat
mov
cmp
add
dec
sub
lea
mov
iret
and
mov
mov
scas
or
insl
lock
jbe
jmp
movsl
cmc
rol
push
dec
mov
popf
xchg
in
repz
add
nop
sbb
xchg
in
mov
dec
dec
pop
fldcw
inc
mov
mov
in
jb
cmpsl
clc
sahf
loopne
enter
outsl
icebp
or
and
imul
cli
push
xor
jmp
xor
jnp
cwtl
clc
fldcw
xorb
lds
mov
mov
popf
cmp
inc
inc
dec
push
loope
out
dec
sub
pop
dec
cltd
xchg
lcall
or
jg
int3
cmc
fcompl
imulb
cmp
xchg
popa
mov
xor
cmp
xchg
lods
daa
ror
push
push
push
sub
sub
jg
push
xor
orb
or
pop
jae
data16
cmp
rolb
and
push
lahf
sub
push
test
xor
or
outsb
scas
dec
cmc
fadd
js
data16
in
dec
cmc
das
js
jmp
push
fisubrs
xor
lods
movsl
and
mov
cmpsl
pop
lock
dec
in
lods
les
add
pop
movb
test
orb
and
xchg
xchg
and
cmp
adc
lea
iret
and
ljmp
mov
rorl
xor
cmp
adc
inc
dec
jb
out
sub
test
popf
xchg
nop
add
dec
dec
loopne
aam
arpl
cmc
loope
mov
dec
dec
pusha
adc
ljmp
and
xchg
lahf
in
mov
push
fnstcw
nop
out
cmc
push
xor
je
dec
pop
clc
cmp
ds
sbb
jb
mov
xor
test
outsl
test
movsb
inc
popf
icebp
lock
dec
outsl
dec
and
shlb
bound
and
cmp
repnz
inc
cli
adcl
ljmp
daa
dec
scas
xchg
inc
adc
jno
push
dec
lds
push
gs
insb
jo
mov
out
nop
in
in
adc
sti
aaa
ss
movsb
mov
aas
rcr
cmpsb
loopne
sub
push
dec
aaa
pop
cmc
mov
pop
sub
leave
lret
aad
in
ret
sub
mov
mov
sub
pusha
imul
mov
fistpl
xchg
or
mov
insl
inc
mov
adc
push
nop
sub
adc
decl
push
movsl
pop
shr
mov
xor
sbb
test
ficomps
aaa
add
adcl
inc
cltd
push
fcmovu
loop
cmp
test
repnz
add
popf
jo
mov
test
push
clc
stos
sub
divl
and
cmpsl
sub
jne
loopne
arpl
je
mov
jp
shlb
loopne
ficoml
xchg
repnz
das
inc
push
bound
cmpl
push
sbb
clc
mov
and
inc
or
cmp
loop
out
lcall
scas
sbb
fldenv
je
mov
loopne
sarb
xor
into
in
xchg
insb
add
test
rorl
inc
pushf
rorl
inc
mov
mov
cmp
outsb
add
sub
scas
scas
ret
inc
dec
push
mov
xchg
xchg
not
nop
or
add
iret
int3
pop
scas
sbb
push
mov
push
popf
lds
movsl
sahf
aaa
mov
addr16
xchg
xor
xchg
and
mov
shrb
inc
cmpb
jbe
or
adc
sub
and
imul
mov
push
cmc
pop
gs
sub
int
or
or
and
jmp
or
hlt
rcr
hlt
out
jecxz
xor
cld
adc
mov
pop
or
xchg
add
movsl
popa
mov
add
fnstenv
mov
lea
xchg
insl
xor
cmp
rol
xchg
mov
sti
aaa
rorl
xor
frstor
fldcw
int
into
push
ret
test
lret
imul
jge
mov
dec
push
push
int3
pop
aas
xor
and
dec
adc
jmp
cmpsb
lahf
andb
into
movups
cmp
ja
lods
inc
xorb
lret
data16
cwtl
call
push
test
shll
aam
cmp
popf
pushf
xchg
fistpll
orb
pop
mov
push
mov
sbb
fdivrl
jmp
mov
xor
jl
test
cwtl
loope
cwtl
lret
inc
push
mov
pusha
push
xchg
movsl
lds
cmp
mov
sub
std
insl
pop
mov
mov
mov
pop
repz
inc
push
xchg
int3
das
pop
shrb
imul
inc
lret
js
cmc
rorb
mov
dec
push
out
mov
push
loope
aad
and
xchg
arpl
and
shr
je
bound
sahf
hlt
das
adc
test
test
add
scas
pusha
or
xlat
das
push
stc
gs
sub
jae
sbb
pop
push
push
sahf
dec
addr16
pop
mov
mov
inc
mov
pop
and
jnp
xchg
add
sbb
push
pop
jo
mov
outsb
test
lock
loop
xchg
sub
inc
push
data16
pop
repnz
jp
enter
mov
test
push
or
fwait
mov
sub
fs
dec
cmp
les
sub
or
ja
mov
adc
push
xor
mov
xor
callw
dec
mov
shlb
jno
pop
andl
nop
icebp
sar
cmc
lods
or
aam
faddl
fnstcw
pop
leave
jl
and
lods
mov
test
lret
mov
lock
cmpsl
popa
mov
adc
fidivrl
or
fbld
popf
insb
add
xorl
mov
popl
lret
inc
dec
jbe
mov
pop
mov
dec
mov
sbb
iret
sarb
pop
mov
push
dec
dec
sbb
cltd
jns
jo
enter
cmp
icebp
adc
pop
scas
jmp
sahf
addb
inc
insb
repz
fisubrl
dec
xchg
testb
add
or
cmp
mov
daa
cmpsl
pop
sbb
dec
mov
push
pop
pop
fs
mov
xchg
lret
sti
vpmulhw
add
mov
daa
lret
xor
adc
fsubr
push
in
in
sbb
into
add
mov
or
std
fst
add
mov
xor
jae
jp
push
sahf
sbb
aaa
std
insb
lods
adc
lods
pop
adc
jmp
hlt
insw
pop
flds
int
xchg
mov
stos
sbb
fwait
push
mov
mov
iret
xchg
and
popf
sub
fchs
mov
aam
mov
dec
sub
adc
fwait
mov
jno
pop
adcb
jmp
out
cld
jno
pop
mov
dec
jle
in
push
test
aad
add
popa
fwait
xchg
push
adc
sub
hlt
in
adc
ds
loopne
push
aaa
pop
push
int3
sbb
insb
sbb
cmp
xchg
sti
pop
push
mov
lcall
out
push
mov
push
sbb
outsl
leave
sub
data16
adc
xor
stos
aad
and
inc
or
addb
outsl
add
cwtl
sbb
xchg
ljmp
out
out
orb
add
jp
mov
jecxz
sub
and
mov
mov
xor
push
rep
cltd
sub
or
pusha
addr16
iret
xlat
jge
mov
mov
bound
sub
jg
movsb
ds
inc
inc
push
orl
pop
lahf
push
mov
int
cmc
dec
pushf
ds
pop
es
pop
cmpl
faddl
ljmp
icebp
jno
xchg
cmp
dec
inc
pop
sbb
xor
fistps
xor
xor
imul
and
push
adc
dec
movhps
sbb
sarl
sbb
rorb
fsts
and
out
pop
inc
dec
jle
pop
sarl
cld
sub
mov
cmp
lahf
pop
int3
repnz
out
xorb
add
imul
xor
int
sbb
xchg
cli
orb
xchg
inc
add
add
pusha
jne
mov
flds
out
cmp
aas
add
loop
xor
shlb
jno
xchg
adc
sbb
mov
jp
dec
loope
aas
mov
or
aad
jge
cmp
outsb
ja
cmpsb
ljmp
repnz
mov
jae
addb
jge
in
lret
fdivrs
push
dec
loopne
nop
jecxz
dec
fidivl
jmp
dec
insl
test
pop
out
mov
lock
stc
jnp
jge
and
popf
nop
insl
insw
dec
and
adc
mov
jnp
xor
push
cli
addl
jbe
out
or
sbb
pop
loop
outsb
push
mov
sti
jge
dec
xor
adc
and
ret
imul
rorb
xchg
aaa
jp
ret
push
sub
fcmove
push
sub
pushf
xchg
xchg
xor
adc
xchg
nop
add
fs
pop
dec
mov
mov
fxch
mov
mov
push
pusha
and
je
lea
inc
rclb
stc
mov
gs
adc
sti
mov
repz
int3
shlb
lcall
imul
jmp
or
enter
push
cmp
xor
pop
add
sub
or
mov
addr16
popf
and
sub
in
adc
rclb
push
jecxz
lock
push
xchg
jbe
test
mov
or
aad
mov
dec
outsb
lret
daa
icebp
push
sbb
out
pushf
movsl
nop
adc
into
cmpsb
sbb
sbb
mov
mov
mov
push
out
ret
xchg
mov
lods
cmp
or
repz
add
mov
fistps
mov
pop
loope
mov
pop
jp
push
nop
aas
lods
and
xchg
in
pop
rcll
xchg
cmp
sbb
fs
inc
mov
pop
scas
les
sbb
cmpsl
sbb
data16
ja
outsb
push
shll
jmp
sub
lcall
xor
subb
sub
xchg
bound
sarl
push
push
lea
lea
insb
mov
adc
sbb
test
xor
sub
loop
xor
adc
cltd
cmp
adc
mov
ret
sub
lods
ret
push
xchg
mov
push
and
xchg
gs
jb
rorl
dec
lahf
gs
jl
mov
movsb
or
add
nop
int
jnp
je
pusha
cld
in
push
sub
cmc
xor
dec
cmc
xorl
jmp
jg
xchg
add
dec
jmp
loop
or
iret
js
insl
sub
int
inc
stos
scas
daa
cli
gs
or
push
xchg
lods
xor
jle
push
mov
and
mov
sub
rcr
movb
popaw
stc
leave
and
xor
in
xchg
cmp
inc
scas
adc
jle
dec
scas
das
cs
call
ljmp
or
incl
jns
cmp
add
fsubrs
ficompl
fdivrl
outsb
jmp
rorl
sub
fimuls
cltd
jge,pn
jmp
adc
mov
arpl
mov
push
jle
add
jae
es
ret
cmp
cwtl
cmovl
lahf
mov
test
int3
sub
sahf
mov
clc
cwtl
out
inc
pop
in
dec
mov
in
pop
cmp
jo
xorl
sbb
jno
stc
sbb
js
ror
aas
jmp
stos
push
dec
ret
imul
je
decb
mov
cmp
movsb
dec
push
sub
pop
sbb
dec
mov
shlb
dec
fnstsw
movsl
add
es
jne
out
sub
inc
fs
jmp
fs
push
push
jo
mov
rcrb
inc
shrb
mov
mov
sub
aaa
adc
call
pop
adc
xchg
or
mov
lods
sahf
fadds
ljmp
out
shl
xchg
fs
out
dec
xchg
pop
inc
out
jne
sbb
inc
pop
jl
xor
or
xor
xchg
sub
push
push
in
mov
push
inc
cld
ret
adc
js
cmpl
lods
push
sbb
ret
aas
ficoml
pop
sbb
sub
js
inc
xor
fwait
rolb
xchg
jno
and
pop
mov
mov
add
xchg
cld
scas
daa
dec
data16
add
mov
imul
fstpt
jg
sub
imul
popa
mov
xor
out
inc
sti
addr16
fsubrl
dec
cmc
pop
ljmp
mov
pop
mov
dec
xchg
lock
cmp
ret
std
or
jns
dec
add
cli
mov
popa
icebp
sbb
xchg
into
aam
loop
clc
mov
lret
inc
shll
and
mov
xor
sbb
jl
mov
scas
test
stos
js
ds
mov
clc
mov
in
xchg
adc
insl
aas
notb
xchg
insb
inc
sti
sub
xor
cmc
dec
inc
xor
cli
fwait
add
push
rcrl
loope
dec
xlat
je
or
shrl
add
int3
ret
mov
mov
insb
into
mov
add
push
mov
adc
cmp
psrad
out
ljmp
and
aaa
mov
sti
xchg
mov
pop
xor
inc
jg
gs
ret
popa
pop
inc
stos
xor
sbb
and
lods
ss
jb
test
adc
xchg
ds
inc
lcall
out
adc
fcoms
mov
aas
jno
jp
mov
jno
sarl
popf
inc
mov
push
jb
rcll
xchg
mov
pop
inc
mov
dec
xchg
push
jle
dec
cltd
mov
jmp
cs
fwait
xchg
add
idivb
sahf
inc
out
adc
jnp
out
sbb
or
repz
loope
push
pop
and
cmpsl
mov
mov
mov
sbb
addr16
cmpsb
cltd
inc
stos
and
pop
sbb
push
outsl
add
ret
or
dec
nop
cmp
fdiv
fs
sub
pop
scas
ret
dec
outsl
jbe
jbe
rcrl
mov
in
jno
xlat
mov
sbb
iret
jo
and
sahf
popa
xor
repz
icebp
lcall
push
sahf
incl
push
dec
addr16
lcall
fldl
data16
dec
test
mov
inc
and
nop
orl
or
in
mov
xchg
mov
add
mov
stc
sbb
adc
jge
pop
jnp
lea
shll
lods
out
xchg
sahf
xchg
jg
sbb
in
js
lcall
sub
mov
out
sub
hlt
jno
xchg
push
sti
or
add
notb
test
loope
jne
popa
mov
xchg
movsl
call
inc
lock
mov
fwait
jbe
mov
mov
pop
lds
cmp
aam
mov
stos
ds
dec
aas
push
mov
leave
fwait
les
xchg
pop
inc
sub
dec
ss
pop
sub
mov
sub
jae
bound
jbe
adc
xchg
pop
push
pop
loop
pop
outsb
ss
popa
imul
mov
lds
std
cmp
inc
lret
loop
push
pop
insb
fst
sub
rol
loop
data16
neg
out
inc
inc
pop
add
pop
jae
pusha
adc
cmpsl
out
repz
mov
adc
aaa
fimuls
test
dec
mov
jno
push
jb
sti
and
add
mov
bound
fcompl
push
leave
pop
leave
mov
imul
sti
sub
push
push
mov
movb
dec
pop
js
dec
push
sub
and
sbb
lds
loopne
and
push
inc
push
sbb
gs
dec
pop
dec
bound
cmpsl
mov
dec
and
dec
or
sbb
xchg
or
inc
aad
lods
and
jne
sti
xor
aam
enter
cmp
push
pop
adc
test
insb
mov
xor
and
outsb
lcall
lock
fidivl
inc
mov
subl
mov
lret
test
xchg
gs
cmp
sahf
lock
into
cmc
insb
cmpl
jne
aaa
pushf
jo
xor
testl
andl
or
mov
sub
shrb
jl
or
add
jne
adc
xchg
roll
push
mov
stc
sub
dec
pop
mov
in
jne
jbe
xchg
sub
sub
mov
dec
stos
mov
stos
std
mov
filds
ja
aas
inc
add
cmp
loopne
addl
xchg
fs
ret
fldt
push
dec
or
jae
sub
insl
push
jns
add
popa
pop
push
pushf
mov
xchg
call
xchg
sahf
and
rol
pop
sub
rorl
ret
mov
inc
loop
push
xchg
and
mov
icebp
mov
fmuls
cmpsl
jno
inc
popa
jle
sbb
ljmp
and
out
mov
and
jmp
sbb
pop
int
adc
pop
mov
rcr
nop
shrb
jg
inc
pop
xchg
jae
imul
or
sbb
daa
dec
mov
test
xchg
or
lods
call
mov
ss
sbb
and
inc
pop
stc
or
sub
ljmp
arpl
and
rcrb
xlat
and
movsl
xchg
fdiv
mov
pop
mov
push
les
out
cmc
cmp
andl
cmp
leave
jge
mov
les
and
sahf
shll
and
test
inc
push
mov
inc
mov
ret
push
cli
push
sub
call
in
pusha
scas
xchg
fisttps
mov
loope
and
shlb
jl
or
push
lds
ja
gs
int
lods
mov
or
dec
adc
add
cwtl
int
xchg
shl
iret
lods
fdivs
subl
mov
jo
xor
adc
mov
lret
jecxz
jmp
pop
sub
test
or
pop
adc
cmp
jnp
pop
test
movsl
dec
insb
popa
pop
xchg
or
mulb
movsb
hlt
int3
pop
gs
pop
daa
xchg
or
add
jl
sub
mov
jmp
mov
jb
das
out
shrb
mov
mov
cmp
mov
mov
or
jge
aad
jg
call
dec
xchg
inc
pop
outsb
sub
or
popf
push
xor
sbb
inc
movsb
aad
push
push
adc
xchg
sbb
test
pop
subb
cmp
stos
ljmp
push
cltd
loop
jle
pop
ss
clc
inc
addr16
imul
dec
int3
jle
xlat
aad
pop
into
enter
or
or
push
jno
je
mov
add
dec
test
push
in
mov
cmp
sbb
aam
shlb
mov
loopne
shl
out
mov
xchg
inc
pop
sahf
ret
out
pop
adc
adc
jp
ja
sub
dec
inc
in
ffreep
sub
out
xor
push
arpl
add
jb
imul
and
lahf
xchg
lods
fists
sarb
outsb
cmp
imul
jp
dec
int3
cltd
push
cmp
lds
in
fidivrs
ss
jmp
das
push
xchg
inc
jg
fmull
mov
add
jae
mov
shlb
jb
fmull
hlt
jle
mov
popa
cltd
sub
pop
ret
pop
and
mov
loopne
mov
inc
out
jae
push
and
icebp
sbb
das
mov
lods
movsl
subl
jo
js
or
sbb
pop
loopne
and
jg
sbb
push
jg
mov
not
inc
sub
cmp
pusha
andb
shll
pushf
rorb
jns
inc
notb
push
movsl
fld
dec
mov
in
xlat
and
add
fwait
inc
sbb
jp
ret
mov
fucomip
and
add
push
outsb
push
notb
stc
fisubrl
das
add
imulb
adc
push
add
cs
je
movl
pop
clc
jae
repnz
movsl
pop
shll
dec
pop
mov
test
jnp
and
pop
sbb
mov
pushf
fdivl
mov
lss
xor
jnp
or
jge
outsb
add
adc
inc
lods
cltd
add
mov
push
push
and
roll
cmpsl
add
in
js
cli
sbb
dec
call
xorl
pop
cmp
dec
jo
sub
push
xchg
or
sub
push
lock
and
movd
test
std
aad
push
test
cli
and
sahf
lods
inc
push
test
push
stos
dec
or
cmp
and
lcall
jle
push
in
out
retw
add
dec
ret
aas
ss
inc
sub
pusha
and
inc
push
xor
insb
mov
ja
cmc
lods
stc
outsb
mov
movsb
xor
mov
push
roll
xor
int3
jb
outsb
push
sahf
adc
shr
dec
lcall
test
pop
push
sbb
sbb
pop
jno
in
aaa
pushf
out
adc
jmp
lret
pusha
addb
pop
out
dec
mov
mov
inc
lahf
lock
cld
mov
jbe
pop
inc
lcall
pop
scas
xchg
mov
mov
rolb
mov
adc
repz
jge
pusha
fsubrl
mov
jae
les
jno
xor
mov
jl
jne
mov
push
push
pop
cmp
test
adc
dec
xlat
adc
cmpsl
push
out
lret
rol
cmp
cli
adc
std
and
call
sub
jo
add
sbbl
loopne
sahf
rorl
adc
arpl
outsb
mov
push
pop
and
shlb
jmp
in
outsl
xchg
inc
sub
jae
push
pop
gs
mov
sbb
mov
bnd
jg
xor
xor
imul
icebp
sub
and
fldl
movsb
push
sbb
data16
adc
push
faddl
in
adc
mov
dec
push
inc
mov
inc
mov
repz
mov
mov
test
lods
cmp
jns
negb
rcrb
lea
mov
imulb
sbb
lods
xlat
and
dec
push
cmp
adc
in
push
xor
push
sbb
in
popf
sbb
ss
sbb
lods
cmc
pop
mov
fdivs
pop
sbb
stc
mov
xchg
jecxz
jecxz
add
xchg
es
dec
sub
gs
adcb
jbe
xchg
jne
aad
xor
in
in
mov
mov
or
lahf
add
lret
out
test
imul
xor
pop
stos
movsl
fisttpll
sub
mov
rcr
cld
int3
pop
loopne
in
out
scas
inc
scas
xlat
out
dec
push
sti
out
in
jle
js
adc
jnp
pop
mov
push
xchg
hlt
pop
aam
pop
rcrl
in
movb
pop
stos
mov
ja
dec
rcrw
jbe
or
lock
inc
popf
push
pop
xchg
nop
stos
scas
xchg
adc
ja
sbb
das
scas
imul
lods
sub
adc
mov
cmp
test
xchg
in
sahf
pushf
aas
lods
xchg
into
jmp
jg
aaa
test
jo
shr
shll
push
inc
dec
dec
ja
fnstsw
pop
cmp
insl
and
mov
in
out
lcall
scas
mulb
xchg
add
nop
popa
rclb
mov
scas
das
inc
pusha
or
das
dec
sub
sub
test
aaa
ljmp
fstp
into
mov
xor
stos
xor
mov
int
pop
push
subl
cmp
movl
pop
pusha
rol
or
hlt
rcrb
cmp
lods
mov
fsubl
sbb
pop
mov
and
dec
repz
jbe
lret
lods
cmpsb
xor
loop
enter
xchg
or
inc
lcall
pop
sbbl
sbb
mov
mov
jmp
jecxz
cmp
imul
mull
pop
aas
mov
popa
fistpll
pusha
cli
jae
shll
sbb
rdpmc
or
subb
pop
inc
sub
insb
lds
retw
iret
mov
jl
or
mov
rcrb
sbbl
jo
lret
pop
xor
into
movsl
ljmp
mov
repnz
jnp
dec
aad
push
cld
roll
cmp
cmc
jmp
jns
cmp
push
sbb
mov
and
mov
aas
sahf
shr
imul
loop
mulw
iret
sbb
mov
and
ret
adc
push
xor
hlt
cld
dec
in
repz
sbb
pop
jle
mov
push
xchg
push
mov
cmp
push
jo
daa
bnd
sub
sbb
dec
addr16
lahf
mov
int3
push
or
nop
add
adc
jp
or
push
jl
sub
dec
adc
dec
cmp
xchg
jl
inc
mov
sbb
jg
mov
icebp
mov
dec
xchg
adc
sub
push
sub
ret
lods
loopne
imul
mov
sti
jne
outsl
or
pop
in
xor
lock
fildll
pop
clc
sub
or
in
test
mov
aad
and
cmpl
out
jmp
jns
push
out
int3
cmp
push
movsl
loope
xchg
ss
jmp
pop
lahf
jle
ss
lds
notl
inc
sub
sub
outsb
aas
movsb
addr16
mov
cld
repnz
es
mov
ja
add
adc
mov
out
adc
xchg
movsb
xor
push
outsb
adc
pop
cwtl
popa
out
mov
mov
sbb
xor
jnp
xchg
jl
out
stc
and
pop
xchg
aam
mov
mov
js
cmp
cmc
jbe
mov
outsl
inc
sub
test
aaa
fcmovnu
pop
mov
and
xchg
test
adc
outsb
std
lods
and
lods
lcall
imul
pop
sub
or
sbb
jbe
jbe
std
rorb
stos
in
and
mov
adc
in
jns
or
or
mov
or
xchg
sub
jnp
es
and
xor
cmc
ss
inc
insl
xor
lea
mov
cmp
inc
mov
test
dec
pop
fstpt
inc
lock
testb
inc
cli
icebp
sbb
out
aaa
mov
add
add
mov
insb
inc
aam
popf
ljmp
mov
jbe
adcl
push
mov
pop
lea
inc
dec
inc
aas
jmp
push
loopne
mov
pop
xor
pop
mov
sub
mov
scas
jae
xor
xchg
cli
out
push
mov
inc
out
iret
insl
adc
ss
outsl
loop
dec
out
jbe
addr16
or
or
xchg
sub
push
and
inc
std
adc
push
insl
repz
stos
adcb
test
mov
scas
push
xor
imulb
popa
jl
xor
mov
xchg
popf
cmc
mov
xorl
rcll
ljmp
stc
in
ret
repnz
shr
jns
mov
sbb
xor
mov
stos
sub
shl
mov
lods
mov
and
push
hlt
xchg
push
stos
xor
cltd
into
cmp
mov
cwtl
xchg
shld
inc
loopne
or
mov
ljmp
pop
jnp
cmp
and
lcall
jb
sbb
sbb
cli
fwait
cmp
pop
jno
jl
lds
push
in
dec
aas
jns
jge
das
sbbl
loope
xor
fisubrs
xchg
add
jmp
add
stc
mov
lods
jmp
xchg
movsl
loopne
push
dec
leave
in
inc
mov
xlat
mov
cltd
dec
daa
sbb
xor
es
lea
dec
xor
sub
pop
cmp
scas
rcrb
jl
mov
and
int
repz
pop
pop
add
mov
pop
test
mov
scas
cmpsl
xor
and
ds
test
sbb
ljmp
add
rolb
dec
leave
imul
pusha
popa
out
rorl
jp
xorl
or
inc
mov
pop
and
push
out
popf
xchg
jo
mov
in
outsl
ret
jae
push
sub
lods
inc
cmp
shlb
or
addr16
xchg
mov
xor
ljmp
cmpl
test
jb
repnz
fbstp
ljmp
fwait
hlt
cld
hlt
jb
pop
push
aas
xchg
push
mov
out
fs
mov
pusha
repz
xor
dec
repz
dec
stc
mov
unpcklps
sti
mov
sbb
dec
hlt
jle
dec
cld
dec
mov
add
xchg
jne
js
dec
dec
mov
push
hlt
dec
aas
or
das
scas
loop
call
int3
les
lods
dec
mov
fwait
cmpsb
enter
inc
inc
jmp
mov
sbb
xchg
adcb
fldenv
mov
enter
outsb
jnp
mov
jmp
out
bound
imul
scas
adc
adc
loop
fucomp
sbb
js
repz
fisubrs
rclb
or
pop
mov
adc
jl
fstl
idivb
mov
add
fildll
in
int3
les
inc
out
push
incb
sub
fisubrl
pushf
icebp
fwait
sub
clc
mov
xchg
scas
or
push
les
scas
mov
mov
inc
xor
es
int
fmul
xor
dec
mov
cmp
xorb
adc
mov
mov
xchg
outsb
add
pop
jne
insb
pusha
popa
add
int3
orl
inc
lret
test
shl
xor
mov
xor
scas
dec
outsl
out
outsl
sti
pusha
inc
rclb
lcall
ret
mov
mov
cmp
xor
pop
nop
out
pusha
lahf
js
imul
mov
xchg
int
inc
fbld
sbb
outsb
shl
call
cmpw
xchg
cmp
mov
mov
loopne
sbb
daa
dec
and
adc
add
mov
std
fimuls
rorl
icebp
sub
inc
fimuls
stos
cmp
push
push
pop
cmp
icebp
push
jno
negb
cmpsb
xlat
into
dec
repz
or
add
cmp
push
es
dec
imul
mov
and
sbb
bound
pop
jae
push
sbb
pop
pushf
les
push
arpl
adc
xchg
push
push
dec
add
xlat
push
je
pop
shll
sub
gs
xor
push
pop
mov
stos
push
push
and
mov
fcmovbe
and
clc
arpl
dec
pusha
movsl
adc
js
imul
test
mov
subl
sbb
dec
pop
dec
mov
pushf
pop
jo
adc
cmp
loope
loope
inc
add
xlat
jno
adc
jle
les
out
xor
aam
or
cmp
xchg
shl
test
mov
jne
cmc
jno
fs
sub
jecxz
mov
push
loope
cmp
push
sbb
jmp
pop
aas
fisttpl
dec
mov
jecxz
int3
push
push
fs
xor
and
in
mov
mov
inc
add
add
push
mov
xor
jle
outsb
cli
inc
imul
ror
jne
jecxz
call
mov
filds
out
cld
sub
push
push
inc
cmc
inc
jg
in
movsb
xchg
mov
sub
jp
daa
jmp
sbb
iret
jmp
cmp
and
sahf
xchg
push
xor
in
out
cltd
sar
out
xchg
maxps
pop
sub
test
lea
jno
fidivrs
in
aaa
mov
cwtl
fidivl
jmp
out
les
repz
addb
cld
ret
push
fisubs
dec
cmc
or
push
adc
orl
stos
sbb
fcoml
fidivrs
pop
push
pop
test
scas
lahf
dec
sbb
in
std
jns
ds
adc
push
notb
push
ret
mov
negl
inc
je
aas
mov
push
fwait
dec
sbb
pop
push
add
lods
push
mov
sbb
shrl
iret
jns
adcl
les
inc
notl
sub
or
jle
mov
jnp
and
add
je
daa
jo
pop
aaa
shlb
imul
sahf
dec
mov
mov
sbb
pop
fs
xchg
mov
inc
sbb
mov
jno
ror
idivb
popf
pop
jp
loope
inc
mov
out
testb
or
in
mov
mov
fisubl
ror
nop
adc
pop
sti
and
add
xor
dec
inc
pusha
jns
sbb
jb
enter
adc
push
sbb
jns
mov
xor
jle
pop
cld
popa
out
andl
sbb
imul
push
adc
mov
iret
js
mov
mov
xchg
sub
ret
ljmp
cmp
jo
cmp
idiv
cltd
sub
call
mov
pop
push
ror
and
xor
pop
lds
xchg
inc
push
add
and
mov
xlat
pop
mov
aad
insl
pop
xor
pusha
adc
and
out
seto
in
or
shl
aaa
out
loopne
lods
imul
sub
add
test
sub
mov
addr16
mov
jg
mov
mov
movsb
iret
jnp
sti
add
sti
adc
mov
dec
in
mov
sub
xchg
xchg
icebp
stos
test
fistpll
mov
and
mov
aaa
mov
fxch
lret
jnp
lret
ss
das
sti
fs
lret
push
push
pop
lret
test
ret
dec
mov
lds
inc
dec
dec
or
test
loop
outsb
inc
inc
or
gs
mov
jmp
jnp
repz
out
cmpsl
lahf
repz
pop
cmp
xor
mov
pop
inc
fnstcw
cmp
add
pushl
xor
xor
push
sub
dec
xor
xchg
sbbb
in
mov
inc
push
pop
mov
int
xor
cmc
lret
imul
inc
xor
inc
jae
xor
jmp
pop
sbb
mov
out
fldenv
mov
push
stos
imul
shlb
and
nop
push
scas
repnz
mov
cmp
out
andl
leave
push
popf
popf
sub
mov
in
and
fldl
in
pop
sbb
movsl
rcrb
mov
out
test
jl
mov
xchg
jne
repz
inc
mov
inc
cld
dec
imul
or
xchg
xor
pop
pop
sbb
dec
out
xchg
mov
mov
add
pusha
mov
ja
es
orl
jp
mov
cmpsb
sub
add
cmp
or
mov
sub
jb
pop
mov
adc
int3
xchg
lods
icebp
sbbb
add
add
sti
pop
xchg
out
xchg
inc
insl
subb
inc
aas
jl
push
fiadds
pusha
push
push
pop
outsb
or
push
les
call
loopne
in
add
and
rcrb
outsl
cmp
scas
xor
dec
and
lds
sub
or
shll
jge
icebp
stos
sbb
loop
xor
das
jmp
push
jl
xchg
jge
dec
negl
add
out
es
xchg
mov
inc
fst
stos
push
mov
adc
jns
ret
mov
dec
push
jl
aaa
cltd
repz
dec
sub
movsl
xor
sarb
xchg
push
cmp
mov
mov
popf
aam
pop
imul
hlt
mov
dec
lcall
out
movd
mov
pop
and
push
shlb
cmp
cmp
sub
iret
cwtl
addb
pop
xchg
add
sub
rorl
push
sub
jg
adc
lret
shlb
ljmp
rol
cld
xor
movsb
fcomps
jl
add
fs
xor
adc
divps
push
xlat
addr16
and
cld
push
jo
stc
cmpsb
jge
or
and
mov
sub
jl
xor
lods
sub
jno
adc
into
lahf
inc
sahf
xchg
mov
cmp
inc
fs
xor
in
hlt
or
rclb
cmc
mov
out
mov
mov
sbb
sub
sbb
and
jne
cwtl
cmpsl
cwtl
xorl
repnz
jg
imul
lret
adc
dec
dec
jg
les
jne
out
inc
outsb
mov
add
sbb
stos
orb
adc
push
or
in
pushf
imul
lds
dec
call
bnd
faddl
out
mov
mov
mov
or
notb
mov
ljmp
out
fdivrl
push
dec
out
mov
js
aaa
pop
pop
addl
xchg
sub
mov
xor
mov
lret
mov
outsl
mov
decb
mov
mov
repnz
add
dec
add
pop
aas
fcmovnbe
dec
xor
dec
insl
inc
notl
iret
push
fwait
cmc
ljmp
cli
cmp
mov
pop
fldcw
ss
mov
das
out
ljmp
sub
adc
aam
loopne
dec
mov
pop
adc
repnz
lret
dec
xchg
mov
mov
lods
insb
or
jo
push
pop
sbb
mov
mov
adc
mov
cmp
mov
sub
add
mov
cmp
xor
repz
call
out
lea
cli
movsl
cmp
iret
mov
jne
clc
cmp
sub
push
clc
or
ret
clc
pop
repnz
dec
test
cmpsl
mov
fcom
stos
insl
stos
or
lcall
pop
mov
push
cmp
dec
divb
push
and
lock
es
dec
cmpsl
daa
fdivrs
ss
adc
pop
nop
fwait
mov
sbb
dec
call
push
lret
or
sub
inc
lahf
mov
add
imul
push
jecxz
and
sbb
aas
fisttpl
push
add
int3
inc
add
shll
adcl
shrb
das
xchg
xor
cld
dec
jae
mov
jno
cli
mov
cmp
loopne
lock
enter
xor
stos
or
cmp
pop
loop
xchg
push
add
addb
push
inc
mov
inc
lret
stos
jmp
adc
and
mov
imul
dec
in
mov
enter
cmpsl
push
push
enter
lock
xorb
lret
int
push
cmp
test
jne
xor
std
mov
add
and
ds
lock
sbb
repnz
jb
es
fsubrs
cld
mov
or
push
sub
loop
iret
mov
loopne
pop
sub
xchg
mov
fsub
fisubrs
xor
mov
aad
out
sbb
inc
mov
cmpb
jge
cmp
add
cld
inc
push
push
add
cltd
inc
lock
test
mov
fists
cmp
mov
add
adc
adc
notl
test
int3
mov
or
test
loop
pop
call
jo
inc
repnz
into
int
cmovs
xor
pop
inc
sub
cli
inc
loope
add
loope
es
movsl
mov
leave
test
orb
adc
ret
je
pop
lcall
out
sbb
or
push
loop
mov
scas
fidivl
popf
add
insb
sbb
add
inc
lods
mov
jb
push
aam
fbstp
or
or
pushf
fwait
inc
add
sub
xchg
das
jp
pop
push
ljmp
and
mov
ret
dec
add
cmp
lcall
push
xor
adcl
stos
jns
lds
jno
and
jo
or
mov
add
ds
lcall
out
mov
jl
insl
fcoml
daa
out
add
sub
mov
cwtl
scas
movsl
inc
icebp
test
jge
add
rcrb
dec
js
mov
stos
arpl
push
xchg
sub
and
leave
pushf
sbb
outsl
pop
xchg
mov
inc
inc
xlat
mov
pop
out
sub
jmp
mov
jg
out
cmp
xchg
pushf
xchg
push
push
jg
push
mov
adc
lret
dec
push
test
adc
mov
mov
dec
dec
sub
loopne
enter
cwtl
hlt
xchg
add
dec
daa
xor
dec
xchg
push
ror
pop
xchg
mov
dec
mov
mov
cs
jns
test
jbe
xchg
test
dec
aad
setg
push
xor
ret
insl
jge
mov
fdiv
rolb
fimuls
cmc
lods
in
and
mov
push
mov
iret
xor
mov
push
jle
sbb
std
inc
int3
lock
cmp
push
addl
in
lods
sti
jnp
add
test
xchg
dec
ret
xor
shl
sub
dec
dec
fcoms
fwait
ds
and
or
jp
mov
nop
insl
push
movsl
mov
pop
add
add
icebp
fsts
and
ljmp
xor
popa
lds
test
stos
cmpsl
js
push
mov
jg
dec
mov
jns
mov
dec
jge
negb
loope
mov
inc
sbb
in
shlb
mov
adc
aas
sbb
push
push
fiaddl
push
pop
push
pop
mov
mov
je
enter
jmp
and
pop
cmp
movsl
insl
lods
sub
jno
add
clc
loopne
add
idivb
sahf
adc
push
jmp
aad
loop
mov
aas
cmp
adcb
sbb
lret
mov
pop
jnp
push
in
imul
aad
into
jmp
lods
or
mull
or
imul
dec
cmpb
xor
pop
adc
xchg
dec
inc
pop
rcrl
test
scas
cmpsl
cmc
dec
arpl
push
mov
jge
das
jne
sbb
xor
or
dec
out
pop
idiv
stos
mov
cli
pop
cmc
loopne
lods
mov
test
mov
sbb
lret
pop
clc
hlt
fidivrl
mov
icebp
or
add
cmc
cmp
or
xchg
jmp
push
imul
jg
loop
xchg
and
jno
mov
or
outsl
push
cmp
push
jnp
adc
jl
fucompp
mov
psllq
rorl
das
pop
xchg
xor
sub
jecxz
aad
add
inc
ficompl
push
sub
xchg
negl
adc
lcall
fcoml
push
or
insl
mov
add
adc
popa
sub
xor
fs
sbb
push
testb
mov
fisttpll
xchg
mov
and
push
push
lods
dec
decl
xchg
lods
push
xchg
jbe
sub
mov
addr16
std
roll
pop
sbb
cs
xor
mov
inc
sub
frstor
and
dec
and
scas
rcrl
insb
dec
cmp
or
iret
xor
cwtl
sub
repz
pop
inc
popa
in
dec
je
enter
xchg
hlt
cmp
jae
aam
mov
mov
add
cmp
pop
inc
inc
loope
sahf
sbb
ljmp
addr16
cmp
and
push
lahf
jo
test
fcomi
mov
push
sub
jg
jge
lods
add
mov
push
xlat
pop
imul
or
in
sub
shlb
loop
out
adc
mov
shrl
lds
sub
push
int3
pop
jb
xor
loop
stos
and
es
sbb
inc
data16
jmp
icebp
sub
jp
mov
lds
lahf
inc
dec
imul
in
dec
dec
or
fadds
jg
rcll
jne
add
cmp
movsl
outsb
dec
inc
xor
imul
pop
mov
cs
mov
add
jo
xchg
jns
jmp
mov
call
repnz
pop
jl
jle
cmp
in
pop
mov
or
pop
add
aam
pop
testb
hlt
push
outsb
dec
mov
mov
push
notb
fnstenv
xor
test
out
inc
xor
in
xor
mov
xor
adc
or
scas
and
or
pop
rcll
push
bound
mov
shll
jp
xor
mov
lahf
or
pusha
lds
sub
cmp
dec
and
cmp
push
jle
sbb
mov
push
sub
std
mov
inc
add
lock
sbb
lcall
jo
stos
inc
xchg
fbld
ret
and
sub
mov
fwait
bound
mov
dec
and
fadd
add
xor
cli
leave
adc
mov
dec
out
sbb
movsl
fdivr
jge
dec
stc
lods
pop
push
lock
push
sub
outsl
add
sbb
in
xchg
ret
inc
xchg
movsb
cli
inc
push
push
push
fwait
icebp
mov
mov
push
fcmovbe
adc
popf
fldl
je
cmp
cmp
adc
mov
cwtl
mov
cmc
mov
lret
test
sbb
and
testl
jno
in
scas
mov
scas
cmc
testl
fcompl
adc
rol
jle
imul
pop
fisubrl
and
sub
icebp
sti
hlt
sbb
cmc
lret
inc
std
mov
clc
jmp
cltd
icebp
sbb
jb
pushl
sbb
sbb
test
adc
ss
loopne
ret
adc
push
cmp
fdecstp
push
add
cli
inc
rcrl
or
xchg
or
int3
xor
adc
js
enter
pop
xchg
stos
movsb
loopne
pushf
imul
data16
test
add
jne
xor
xchg
gs
fisttps
jne
push
aad
mov
je
adc
mov
sub
xchg
out
dec
xchg
xlat
mov
push
sbb
pusha
mov
mov
mov
sub
cmp
mov
scas
mov
repz
nop
and
aam
pushl
jae
or
iret
jo
xchg
popf
xchg
leave
cli
and
cli
inc
jnp
inc
mov
and
ds
push
sbb
lahf
cmp
adc
sysret
dec
fwait
sub
into
pop
cs
jae
sbb
jecxz
arpl
xor
outsl
nop
negb
xchg
gs
dec
out
sub
lods
push
mov
repnz
add
fistl
aad
mov
ret
mov
movsb
inc
lods
pop
push
mov
addl
add
shrb
and
pop
dec
push
mov
fbld
les
mov
xor
roll
mov
and
xor
enter
cs
fstps
sbb
mov
fwait
sbb
inc
xor
js
roll
and
mov
ret
mov
cltd
repz
mov
out
insb
mov
call
mov
and
inc
adc
icebp
xchg
xchg
orb
mov
cmp
stc
lock
adc
sub
xchg
pop
hlt
pop
cltd
int3
push
out
je
cmp
cld
cmp
out
sub
pop
and
rolb
sbb
fidivrl
pop
mov
jno
pop
sub
lahf
lods
push
imul
shrb
xchg
nop
fmulp
push
nop
leave
jo
xchg
out
push
push
adc
xchg
sub
xlat
or
dec
leave
pop
frstor
push
sbb
imul
mov
or
repz
cmp
rcrb
mov
jbe
adc
jbe
jle
jo
mov
jnp
push
aaa
push
lret
sub
mov
sti
ss
xchg
es
icebp
mov
dec
inc
fs
hlt
cmpb
std
out
push
or
icebp
int
data16
or
cmc
rclb
dec
inc
xchg
jnp
dec
sbb
outsb
jne
pop
push
popf
cmpsl
adc
mov
cmp
cmpsl
popa
notb
sahf
adc
mov
pop
into
gs
fstps
dec
pop
inc
popa
mov
mov
push
dec
push
sub
sub
call
rcrl
repnz
mov
push
dec
pop
jns
shlb
adc
cs
pop
push
repz
rorl
call
dec
es
mov
push
xor
adc
hlt
mov
rcll
xorl
cmpsb
hlt
daa
aaa
cmpsl
push
scas
rcrb
fwait
int
dec
fnstcw
into
movsb
test
sahf
push
push
sub
mov
or
dec
lods
xchg
shr
adc
in
out
test
mov
jnp
out
xlat
in
dec
nop
add
and
jne
jge,pt
fwait
loop
adc
popa
mov
dec
out
insl
cmp
outsl
push
scas
xchg
adcl
mov
dec
stos
cli
pop
mov
sub
inc
push
dec
xchg
xor
repz
inc
arpl
push
fwait
xor
push
incb
leave
mov
loop
mov
or
iret
push
or
jle
test
in
dec
sbb
and
fsubrl
inc
into
ret
sarl
pushf
push
lods
dec
sbb
sub
sub
lahf
or
mov
ret
in
pop
aaa
insb
xor
out
or
jae
mull
outsl
bound
push
jno
sarl
cmc
jecxz
mov
xor
loop
popf
mov
loope
jmp
gs
cmp
jne
jbe
mov
fwait
jmp
sub
push
add
sub
iret
or
push
scas
sub
notb
popa
leave
inc
ds
outsb
and
outsb
aad
mov
sub
aam
jae
leave
inc
mov
jl
xchg
or
xchg
xchg
pushf
hlt
push
loopne
enter
das
sbb
sbb
pop
outsb
insl
in
push
aas
out
icebp
not
xchg
xor
rcrb
pop
xor
lcall
iret
dec
aaa
iret
movsl
stos
push
cmpsb
push
stos
in
pop
sub
icebp
adc
movsl
push
add
mov
mov
cmpsl
call
xor
lock
outsb
mov
cmp
ss
push
out
mov
cltd
test
mov
iret
lahf
jmp
shrl
cltd
pop
push
les
jbe
xchg
cltd
outsb
insl
in
cmc
sbb
cld
and
jnp
in
mov
sub
shll
pop
sub
ja
loope
fadd
push
xor
xchg
ljmp
sbb
cli
das
add
push
lds
aad
roll
push
fcomps
push
mov
gs
stos
mov
add
out
mov
dec
push
push
cmp
movl
gs
cmp
inc
aaa
push
or
push
lea
and
pusha
jnp
pop
xchg
rcrl
mov
mov
mov
call
fwait
lahf
lcall
mov
xor
xchg
not
jbe
inc
inc
popf
mov
fidivs
notl
inc
das
jmp
jl
ja
stos
lods
shll
inc
pop
popf
rolb
push
xchg
popf
cmpsb
fsubr
sub
and
or
pop
jmp
ret
mov
mov
subl
mov
dec
cli
ds
je
mov
in
sbb
sbb
jmp
leave
test
popf
shlb
repnz
das
inc
cld
fstp
int
pop
inc
out
jbe
mov
fidivrs
sub
out
push
insl
xchg
int3
decb
es
push
ss
mov
into
cltd
fdivs
fwait
mov
rorb
repz
leave
mov
leave
xor
and
dec
jp
enter
jg
pop
xor
lods
stos
shll
stos
and
push
inc
mov
sbb
adc
aad
addr16
and
pusha
dec
adc
in
mov
xchg
je
std
fmuls
push
pop
adc
cli
cmc
int
sbb
xchg
mov
inc
inc
mov
out
mov
js
xchg
xor
mov
data16
insl
xlat
xor
lahf
xchg
xchg
pop
lds
push
fmul
inc
inc
mov
dec
mov
xchg
fiaddl
xchg
int
mov
mov
push
xorb
adc
cmp
cmp
out
sbb
and
push
js
lods
pop
aaa
stos
xchg
leave
xlat
jbe
cmp
fcomps
mov
push
pushf
fs
mov
adc
divb
fsubrp
stos
pop
mov
or
in
adc
ljmp
sarb
pop
pop
inc
xlat
les
je
repnz
orl
arpl
mov
data16
stos
movsb
mov
inc
int
loope
mov
int
stos
ds
aad
int
pop
push
inc
mov
adc
outsb
or
scas
dec
pop
jle,pt
dec
xlat
jns
mov
adc
push
add
pop
sbb
push
and
push
sbb
sub
mov
lahf
data16
stc
hlt
ljmp
lds
stos
jmp
test
sahf
sub
pop
negl
dec
lds
lods
in
loope
mov
adc
cwtl
push
dec
adc
mov
adc
jp
sahf
jle
aas
sub
in
or
adc
sbb
push
add
dec
sub
repnz
jl
je
jnp
lods
jle
push
stos
mov
jbe
stos
or
ljmp
pop
cmp
dec
dec
sub
dec
test
jl
mov
aas
and
ja
mov
sub
sub
sahf
out
xor
cmpsl
test
lahf
outsl
jp
and
cwtl
and
jl
stc
test
out
mov
rolb
aam
int
cld
popa
faddl
ss
cs
mov
inc
fisubrs
or
lods
aaa
movsb
addl
dec
pop
or
jbe
xchg
insl
mul
lret
and
loop
out
push
pop
dec
jnp
stos
mov
xchg
and
mov
mov
xchg
call
dec
daa
int
aaa
adc
roll
ret
mov
mov
sub
cli
in
pop
fistl
iret
rorb
gs
rcll
jnp
mov
pop
mov
fisubrs
xchg
lahf
inc
cmc
inc
cmpsl
mov
daa
sbb
es
nop
jae
imul
jmp
push
sub
jge
push
out
inc
or
popa
xchg
imul
aad
jl
push
shll
sbb
sbb
mov
dec
int
in
xchg
mov
out
out
stc
xchg
sub
jl
inc
push
or
in
sbb
xor
fwait
mov
push
sbb
cltd
jne
xor
ret
pop
scas
nop
xchg
dec
inc
push
sub
incb
es
das
enter
int
push
adc
pusha
movsl
sahf
sarl
add
jl
add
cs
scas
and
int
add
stc
dec
push
js
into
data16
pop
das
lahf
mov
popl
push
xchg
push
mov
jb
push
sub
loopne
outsb
xchg
cmp
pop
mov
scas
jb
jg
push
xchg
fisttpl
jnp
test
and
lea
xor
lock
sbb
in
sbb
lret
lods
movsl
cmpsb
stos
xchg
lds
cmp
inc
lahf
dec
jle
test
sub
loope
aad
push
addr16
aas
cmp
dec
pop
cld
cltd
inc
stc
aam
repnz
cmp
sti
fsub
les
fidivs
mov
mov
out
hlt
loop
pop
sbb
mov
or
daa
add
mov
push
cmpb
mov
and
xchg
lods
ret
push
push
xchg
sbb
test
adcb
dec
sbb
lcall
cmp
in
movb
jle
jb
imul
cwtl
mov
cmp
push
fdivl
loopne
xchg
lret
stos
repnz
mov
lock
jmp
cmc
inc
mov
scas
pusha
test
xchg
xchg
aad
or
insb
mov
sub
lods
push
and
mov
push
aaa
dec
cld
sbb
cmpsb
mov
mov
jle
gs
cmp
in
das
inc
mov
movsl
xchg
adc
cs
xchg
sti
pop
ret
int
mov
mov
mov
dec
in
xor
push
lret
jo
and
or
pusha
mov
dec
xor
enter
and
pop
orb
or
mov
xchg
clc
xor
fcomi
xor
icebp
mov
push
mov
add
cltd
fdivl
dec
inc
jne
inc
xor
stos
dec
dec
lret
and
out
sbb
cmp
dec
jno
mov
pop
xchg
fildl
aam
pop
lock
jecxz
pop
and
push
or
sbbb
mov
xchg
arpl
inc
add
out
jge,pn
stos
xor
adc
loop
and
mov
dec
xor
push
dec
cmpsl
mov
fidivrs
jl
dec
sub
sub
arpl
cmp
repz
xor
decl
pop
pop
xchg
fbld
xor
lds
scas
and
push
jb
xchg
ret
pop
add
call
cmpsb
in
xchg
cmpsl
cmp
cmp
mov
cmp
pop
mov
daa
mov
lea
repz
fnsave
xchg
out
cli
imul
pop
imull
stos
dec
mov
push
jne
jecxz
lods
xor
mov
push
test
lds
push
repnz
loope
jae
pop
sbb
mov
jne
mov
int3
mov
push
js
cmp
stc
test
fstps
loopne
xor
les
fistpll
fidivl
mov
sub
lret
and
out
or
je
popa
js
movsb
fsubrl
adc
xor
jbe
pop
ss
pop
and
or
xor
jp
cmp
pusha
xor
xor
in
arpl
andl
cmc
or
xchg
xchg
inc
mov
add
ss
pop
and
jl
sarl
lods
daa
push
mov
loope
mov
pop
sub
or
shrl
dec
and
in
aaa
inc
aas
and
or
xchg
push
insl
repnz
daa
pop
jo
mov
add
daa
and
sbb
dec
mov
pop
xchg
pop
pop
lretw
out
push
out
ja
mov
cmc
and
xor
xchg
xor
mov
sub
cmp
cld
lods
push
sub
test
dec
inc
cmpsl
mov
icebp
je
iret
fdivl
imul
out
push
out
int3
push
test
in
cmp
bnd
cmp
push
push
pusha
pusha
test
pop
rcll
and
rorl
incb
stos
pop
lods
sbb
les
arpl
mov
outsb
push
adc
movsl
cltd
sbb
xor
xor
xchg
cld
in
mov
jle
test
ljmp
jo
gs
lods
mov
xor
adc
cwtl
ret
fcompl
mov
mov
iret
rolb
out
xchg
or
sbb
lahf
aas
sbb
ss
stos
mov
ret
gs
xor
arpl
sub
lock
das
xchg
and
push
aad
test
push
pop
dec
xchg
push
xor
loopne
jl
push
lcall
xlat
scas
push
mov
movntq
inc
cltd
or
jge
call
lret
sub
stos
and
das
js
push
pop
popf
jp,pt
test
out
aad
pusha
scas
sub
loop
pop
daa
adc
in
inc
sar
stos
fsubs
mov
mov
jno
mov
movsl
cmp
and
sub
jbe
popa
mov
pop
cmp
push
pop
test
pop
xlat
jl
pop
ljmp
inc
inc
xchg
and
pop
ret
test
mov
rcrl
jb
pop
push
pop
xchg
popf
mov
inc
push
fwait
dec
mov
pop
fisttps
fcmovne
pop
dec
mov
adc
lock
insl
lds
stos
andb
pop
pop
mov
rol
stos
and
lret
xchg
inc
jno
es
leave
inc
mov
or
pop
cltd
sub
jns
gs
outsl
dec
mov
repz
mov
mov
mov
cmc
sahf
dec
aad
pop
fidivrs
sar
sarb
inc
sbb
ja
fadd
sub
dec
popf
jno
jecxz
fwait
jmp
sbb
lock
or
push
xlat
inc
adc
sbb
mov
repnz
push
inc
daa
sbb
fstl
or
loope
dec
push
lcall
div
and
loop
add
aam
movsb
cmp
ficompl
aaa
mov
jnp
lret
inc
or
ret
cwtl
sub
push
nop
jb
in
adc
push
sbb
ret
add
in
aam
dec
cmpsl
or
leave
cmc
inc
mov
adc
leave
subb
aas
sub
mov
dec
fwait
loope
scas
mov
in
mov
mov
mov
mov
jg
cmp
mov
xchg
js
adc
test
loop
push
fisubrs
xor
inc
adc
xchg
je
stos
adc
iret
fs
mov
stc
lret
mov
jo
psllw
ljmp
push
and
push
or
scas
dec
fs
cli
mov
jl
jns
xchg
push
sbb
lret
add
push
cmpsl
out
jecxz
xor
push
cmp
call
push
mov
xchg
cs
addr16
push
cmpl
xchg
pusha
add
xchg
addr16
jne
mov
xchg
xlat
sbb
aaa
xor
dec
fimuls
ds
jmp
cwtl
add
xchg
rolb
andl
xchg
int
cmpsb
cli
ljmp
push
int
test
mov
xchg
pop
lahf
in
stos
fdivrl
pop
jne
sbb
jbe
xor
les
and
addr16
scas
loope
lahf
movd
loope
movsl
nop
xor
into
sbb
mov
loope
push
ds
dec
adc
inc
sbb
gs
xchg
addr16
push
loope
movsl
cmp
push
insb
repz
mov
pusha
dec
and
in
out
lahf
or
enter
pop
dec
add
jae
xor
inc
aad
push
ljmp
in
pop
popf
andl
add
int3
out
mov
jae
subl
lods
adc
ljmp
push
rcll
lods
cli
inc
and
cmp
popa
sbb
jb
mov
cmp
aam
scas
shl
xlat
mov
jl
test
movsl
xchg
jne
push
mov
fsts
xlat
sbb
inc
fcoml
sbb
mov
cs
dec
lds
mov
sbb
mov
ljmp
jno
xchg
out
or
rcrl
pop
sbb
mov
scas
movsb
shlb
popa
test
adc
dec
pop
sub
adc
cwtl
pop
xchg
repz
lahf
repz
xorl
push
push
xor
lods
addr16
pop
xchg
or
fists
lock
in
mov
loopne
mov
xchg
rclb
lahf
lock
fs
jge
mov
imul
pushf
xchg
ds
addb
insb
jmp
insb
dec
and
push
push
negl
rorb
or
mov
call
xchg
inc
cli
filds
mov
mov
adc
sbb
loopne
mov
sub
pop
loopne
xor
mov
xlat
loope
push
nop
mov
jb
into
mov
sub
lahf
pushf
les
movsb
push
xchg
popf
jae
and
push
jae
loop
in
pop
outsl
jno
dec
fucomi
add
inc
xchg
mov
inc
ret
lods
mov
loop
xor
dec
ja
xchg
push
mov
sbb
movsl
in
push
repz
test
push
xor
jle
push
adc
in
add
movsl
rorl
into
xor
push
shrb
popf
lods
xor
hlt
dec
lods
dec
popf
arpl
bound
ja
add
in
out
repnz
mov
ja
sub
sbb
xchg
icebp
das
cli
or
mov
rcrb
or
lds
mov
dec
dec
clc
cmp
popf
lcall
mov
test
xchg
xchg
mov
push
pop
sbb
out
sbb
pusha
xor
or
sarl
ss
je
xchg
sub
daa
jnp
inc
push
mov
xchg
adc
sub
testb
js
bound
mov
add
stos
xchg
jl
push
mov
cmp
mov
sub
pop
push
mov
lods
xlat
xlat
inc
int3
icebp
jno
rorl
fstpt
bound
and
icebp
dec
jbe
push
mov
add
pop
inc
icebp
sti
jbe
sub
xor
xchg
dec
out
and
xchg
mov
lret
test
jp
xlat
out
sbb
dec
rorl
inc
jmp
jae
add
and
adc
xor
pop
push
ss
je
addr16
ja
incl
cmp
inc
sbb
xor
dec
imul
lahf
add
push
jnp
mov
xor
cmpsb
push
loope
mov
int
fistpll
call
aam
enter
pop
out
push
inc
mov
mov
cli
and
in
xchg
lahf
pushf
jle
inc
into
pop
scas
loopne
pop
fnstsw
cmp
inc
ljmp
xlat
mov
fcmovne
mov
sahf
test
or
dec
loop
into
cli
pop
rorl
addb
push
jg
push
out
ds
out
xor
adc
sahf
clc
sbb
dec
pop
insl
std
out
push
std
insl
cmp
loop
xchg
out
push
lret
mov
shlb
pop
mov
lods
jge
enter
jb
fadds
cmp
pop
outsb
bswap
push
insl
shrb
gs
aas
sub
mov
cmp
lahf
fdivl
push
jecxz
sarl
pop
int3
jmp
arpl
outsl
cmpsl
loope
sub
jle
pushf
jl
inc
je
and
dec
jecxz
mov
pop
sbb
pusha
xchg
xor
repnz
neg
in
daa
push
dec
imul
insb
cmp
pushf
sub
jae
fidivs
sub
xchg
bound
xor
pop
or
inc
mov
pop
sub
leave
inc
cmpsb
sti
mov
xlat
or
fists
xlat
call
int
pop
hlt
imul
mov
add
pop
cwtl
pop
push
loope
std
and
enter
lret
xchg
repnz
sub
push
mov
jb
shr
push
dec
xor
push
in
sbb
je
pusha
push
adc
jg
mov
insb
fldcw
lock
mov
inc
mov
push
out
in
push
icebp
adc
dec
cli
dec
mov
jno
mov
addr16
push
repnz
icebp
sahf
in
out
cmp
sarl
mov
pop
subb
push
jmp
jge
mov
bound
mov
int
jmp
lea
dec
in
fistpll
fisubrs
js
inc
aas
or
enter
ja
inc
or
xchg
pop
inc
sub
cwtl
pop
out
xchg
jne
push
ret
add
lahf
push
icebp
inc
test
sbb
lds
jmp
pop
dec
cwtl
mov
add
lahf
mov
mov
cmp
test
push
test
mov
rcrl
pop
sbb
leave
xlat
xor
jl
cmpb
sbb
lahf
push
aaa
push
std
cmp
repnz
xchg
push
push
xchg
movsb
mov
jp
cltd
inc
gs
std
js
mov
jecxz
aas
test
mov
add
add
jg
xchg
xor
mov
lcall
push
push
test
xor
lret
xor
insb
in
ret
pop
lods
pop
sub
or
xchg
pop
lods
jo
or
ret
adc
xchg
mov
jno
cmp
popa
scas
push
call
enter
into
cmp
or
leave
fstps
stc
or
jo
decl
mov
cmc
mov
lods
mov
xor
add
and
sbb
stos
decl
lea
mov
fisubrl
fmull
pop
pushf
enter
js
test
in
cmp
outsl
loop
jmp
mov
cmp
imul
push
fucomip
jno
ret
in
mov
pop
enter
and
gs
push
testl
movsl
int3
je
int
in
xorl
xchg
dec
lds
dec
xor
dec
shlb
sbb
repz
sbb
jl
sbb
pop
pop
inc
push
in
push
adc
and
inc
jl
lret
sbb
out
mov
std
mov
test
lahf
inc
std
xchg
push
leave
rcl
mov
dec
in
push
sbb
sbb
pop
scas
mov
jns
push
test
mov
mov
jle
inc
into
push
data16
jmp
cmp
jb
test
pop
dec
dec
mov
push
fwait
xor
mov
test
mov
loopne,pt
cmp
orl
fisubrs
jg
test
loope
adc
jle
adc
cwtl
xchg
andl
dec
divb
or
cltd
aad
xor
test
push
sbb
mov
inc
loope
aas
pop
pop
pop
and
divb
fsub
xchg
jo
out
sub
inc
add
xor
das
mov
ljmp
mov
ja
inc
lcall
add
lret
loop
clc
dec
xor
bnd
clc
inc
ljmp
pop
dec
aam
dec
call
inc
xchg
loope
cmp
sub
push
pusha
push
pop
or
push
scas
int
popl
mov
fwait
jbe
hlt
enter
icebp
jp
fcoml
sub
add
ja
lock
addr16
das
lods
sahf
lods
movsl
or
pop
sti
testb
add
mov
std
xchg
xor
fidivrl
add
js
dec
js
inc
fistps
icebp
cmp
push
adc
test
push
cmp
adc
add
cmp
popa
lahf
imul
sbb
add
dec
and
push
push
test
bound
mov
es
dec
mov
bound
movsl
mov
repnz
inc
pop
pop
lret
loope
outsl
fcmovne
cmp
mov
mov
imul
add
not
and
push
sbb
ss
movhps
leave
lcall
std
pop
push
push
gs
cwtl
xor
sbb
aam
add
push
lret
hlt
sti
lods
xchg
lahf
popa
cbtw
and
cli
pop
push
add
nop
ss
enter
call
iret
or
out
sahf
dec
jb
cmp
mov
dec
jl
testb
and
movsl
and
pop
pop
into
mov
and
sbb
mov
ss
das
mov
jno
fs
mulb
ljmp
enter
adc
push
or
adc
add
test
mov
push
andl
dec
and
sub
mov
and
jle
and
push
mov
jle
cld
pop
sbb
notb
imul
daa
and
icebp
lock
je
sarl
xchg
inc
xor
pop
fcoms
mov
mov
mov
je
in
mov
mov
push
icebp
or
pop
shll
and
cmp
rcrl
mov
adc
pop
jno
jae
loop
sbbb
pop
inc
pushf
orb
or
in
imul
xchg
inc
imul
aaa
jp
cs
mov
push
sub
mov
ds
xchg
outsb
dec
popf
dec
push
in
mov
jbe
mov
addr16
xor
das
add
or
pop
mov
cmp
pop
fsts
xlat
sbb
or
inc
lret
fsubrl
inc
ss
out
jns
in
mov
in
cmp
insl
add
nop
icebp
jo
xchg
or
dec
cmp
or
add
push
xchg
loope
mov
inc
xor
sub
insl
pusha
xor
stos
loope
push
fistps
inc
mov
mov
out
loopne
pushf
lret
xchg
outsl
mov
adc
adc
add
dec
pop
divl
js
ds
jge
cmp
mov
mov
sub
in
push
jb
scas
hlt
jle
stos
push
test
dec
mov
in
fcomps
and
fsubrs
xor
fnstsw
imul
adc
inc
cmp
xchg
push
les
mov
arpl
xor
xchg
mov
fisubrs
mov
inc
pop
bound
xchg
jo
cmp
rolb
add
lods
test
lcall
or
pop
cmp
adc
push
sbb
xchg
test
inc
out
loope
lahf
and
repz
outsb
divl
lods
or
out
jp
xchg
pushf
and
int
lahf
in
ja
lret
jnp
scas
nop
fbstp
or
xchg
push
mov
dec
lods
add
push
notb
out
jb
insb
std
iret
fcoml
cld
pop
jb
ret
push
push
out
cmpsl
xchg
call
fbstp
lds
outsb
sbb
popa
or
outsl
lret
getsec
adc
scas
push
sbb
cmp
sub
fistpll
mov
clc
outsl
cld
inc
or
ret
adc
pop
or
and
aam
add
repz
add
cmp
pushf
sub
mov
shll
int
jno
xchg
dec
inc
insb
and
movsb
pop
sarl
insl
adc
int3
roll
mov
inc
fstps
inc
lcall
inc
pop
inc
into
push
clc
push
insl
xchg
aaa
lcall
cltd
insl
sbb
pop
lds
shlb
sarb
aas
test
jno
mov
pop
imul
adc
ret
push
iret
pop
pop
out
jp
movsb
sub
jb
pop
pop
rcrl
mov
std
test
ss
jbe
inc
imul
mov
sub
push
lock
cmc
ja
mov
into
aad
call
mov
repz
rclb
adc
jp
push
dec
lods
xchg
test
loope
xor
pop
inc
test
mov
aad
push
add
fwait
mov
cmp
push
mov
fsubrs
push
sub
sub
jmp
sbb
push
xor
jne
out
insl
fldenv
shlb
in
stos
xchg
insl
das
fwait
add
shl
test
dec
push
lock
cmp
dec
jmp
movsb
lret
scas
push
xor
clc
lea
adc
stos
ds
lock
lods
loop
daa
stos
xchg
fdiv
cli
rcll
addb
mov
pop
mov
add
xor
xor
pop
iret
out
pop
add
fdivl
jmp
mov
xchg
cmpsb
into
mov
xor
hlt
shlb
or
icebp
movsl
xor
out
adc
adc
sub
repnz
jge
fdivrs
mov
in
pop
in
mov
cmp
pushf
dec
and
mov
in
fs
les
dec
mov
sti
outsb
xchg
aas
das
loopne
dec
test
testl
cmp
outsb
int3
fldenv
and
jg
mov
jns
outsb
jne
aad
xor
mov
sbb
ds
lock
push
decb
sub
and
or
xchg
jnp
fs
clc
sbbl
mov
mov
adc
pop
push
loope
enter
nop
aas
and
fwait
leave
dec
data16
and
out
repnz
int3
and
sbb
test
ret
push
add
roll
test
pop
divb
in
jmp
jno
xchg
incl
push
int
cmp
test
mov
xor
in
push
sbb
sbb
mov
xorb
inc
lods
inc
pop
shll
sbbl
std
js
repnz
das
ja
sub
xor
inc
jns
in
pop
aaa
push
xchg
sub
or
cmp
pop
jg
jnp
push
mov
jge
jle
mov
popf
dec
adc
jle
loopne
cwtl
push
mov
mov
cli
inc
dec
data16
push
out
xor
mov
dec
aaa
inc
jg
mov
stc
lcall
les
pop
inc
inc
inc
jl
ljmp
mov
aad
xchg
xchg
aaa
or
idiv
movsl
mov
out
push
cltd
xchg
fbstp
in
aad
xor
fidivl
and
inc
mov
adc
mov
fistpll
cmc
push
lahf
insl
and
loop
ja
fbstp
pop
sbb
dec
and
lds
mov
xchg
popf
outsb
das
xor
xor
jnp
push
mov
into
push
insl
mov
fistps
xchg
lea
mov
mov
xlat
add
xor
push
xor
call
and
lcall
hlt
jo
cmp
fadd
or
loope
loop
dec
jle
fnstcw
pop
stos
or
test
lods
and
filds
inc
mov
pop
mov
push
out
das
test
mov
lods
cmpsb
repnz
in
rorl
mov
inc
movsb
nop
stos
pop
scas
or
jmp
add
pop
out
cld
pop
cmp
int
inc
jnp
mov
lcall
subl
sar
pop
inc
stos
jmp
ss
xchg
ja
repnz
hlt
leave
mov
adc
je
jbe
data16
dec
test
orb
loope
hlt
push
dec
xlat
or
xchg
or
and
inc
aas
mov
in
inc
or
adc
stc
loopne
ds
mov
dec
inc
xchg
dec
dec
pop
sub
into
and
or
ja
xchg
jns
xor
xchg
iret
xchg
jns
shl
cmp
xchg
cs
adc
sbb
and
les
or
fiadds
mov
xchg
leave
out
jg
lds
dec
mov
pop
pop
inc
iret
sub
jne
mov
push
in
xor
insl
sbb
dec
add
xor
jbe
rcll
cld
es
int
movsl
fistps
outsb
pushl
outsb
dec
jmp
pop
aas
std
add
push
dec
insl
mov
xor
in
sbb
jno
orb
out
std
push
mov
xor
test
sbb
cli
sarl
dec
or
or
adc
inc
fisubs
notl
mov
mov
dec
dec
sbb
bound
mov
popa
mov
imul
movsb
mov
dec
xchg
sub
rcrb
inc
push
add
mov
jns
xorl
aam
sub
in
mov
test
cmp
aad
mov
mov
insb
push
imul
addr16
daa
or
inc
jl
lcall
inc
out
loope
cli
sub
mov
lcall
add
mov
test
jge
adc
push
inc
fbstp
cli
mov
push
das
sbb
in
mov
jmp
rep
sbb
cli
cli
xchg
sbb
movb
mov
push
pushf
adc
mov
mov
push
stos
notl
and
lods
lret
cmp
ss
cli
mov
bound
jbe
push
mov
or
lock
jecxz
inc
enter
push
mov
das
fsts
std
sub
sub
and
adc
jp
inc
mov
insb
jge
xchg
sub
push
pop
mov
mov
pushf
xor
xchg
mov
lock
int3
cld
out
or
insl
and
stos
ret
testb
mov
std
push
lds
rorb
sbb
fldt
lret
dec
dec
pop
pop
push
push
xchg
or
sbb
ja
repnz
jge
inc
pop
out
sub
outsl
cmp
xor
shl
stc
inc
push
cmp
or
push
adc
push
mov
sbb
ret
push
divl
adc
dec
mov
insb
cmpsl
jmp
or
adc
adc
mov
shlb
sahf
imul
fisubrl
int
add
mov
jo
dec
sar
in
shlb
cmp
push
mov
xchg
in
shlb
cmp
cmp
xor
cmp
adc
bound
or
mov
ret
dec
jecxz
jmp
pusha
add
repz
fimuls
pop
leave
jno
push
jb
pop
xchg
push
adc
inc
jb
arpl
adc
or
scas
sub
cmp
mov
jnp
xor
lret
pop
dec
rorb
cmp
push
and
ja
cmp
jae
iret
mov
cs
out
xor
xor
mov
lcall
xchg
sub
push
mov
fwait
scas
adc
sarb
shl
shrb
fs
cld
in
je
shrl
jmp
push
dec
mov
xchg
or
shlb
enter
int3
push
shll
bound
push
inc
adc
jae
mov
and
cmp
or
repz
popf
inc
dec
out
aaa
jns
test
insl
stos
jp
sbb
vpunpckhdq
sbb
out
vmload
inc
mov
xchg
inc
xchg
lock
int
rcrl
or
stos
inc
jp
int3
dec
or
or
fists
repz
leave
sub
pop
sbb
sub
loop
repnz
cmp
dec
movsb
aam
adc
mov
ret
test
fstpl
fsts
test
jmp
add
rcrb
int3
sbb
ret
jb
sbb
mov
loop
imul
jl
mov
jg
xor
iret
shl
outsl
add
into
addr16
push
in
dec
cmpsl
or
outsb
aas
aaa
xchg
sahf
test
pop
mov
adc
je
loopne
sub
push
mov
dec
nop
sbb
cmp
lret
fisubs
inc
iret
sub
ja
syscall
sub
in
xlat
cld
pushf
adc
stos
imulb
or
mov
mov
loop
repz
aaa
cld
sbb
mov
push
orl
add
into
mov
or
push
loope
rol
or
cmp
iret
mov
repz
xorb
mov
mov
cmc
mov
and
loop
inc
ret
push
hlt
daa
lret
pop
hlt
mov
dec
mov
lret
repz
fildl
lock
std
sub
push
lea
dec
inc
loopne
pop
lret
lock
push
sub
clc
pop
in
lods
inc
popf
sbb
pop
adc
int3
pop
cmp
push
leave
lcall
lods
std
mov
jno
mov
lea
lock
jmp
xchg
rcl
movsb
out
xchg
leave
je
cmpsb
inc
mov
mov
scas
xor
cmp
xor
clc
xchg
xor
repz
cmp
mov
mov
mov
addr16
popa
sub
adc
cmpsl
stos
adc
js
mov
sahf
lret
inc
pop
jns
fstps
jb
sbb
or
cmp
repz
cld
mov
setbe
shl
push
pop
sub
test
pushl
movsl
fs
stos
dec
xchg
pop
xor
jecxz
xor
mov
or
popa
xchg
xchg
mov
bound
or
das
imul
sahf
inc
mov
or
fmull
icebp
inc
inc
pop
test
mov
mov
xchg
add
in
in
xor
dec
xchg
std
movsb
and
mov
cli
xor
xor
lahf
jne
mov
push
stos
fcmovb
cmp
pop
dec
dec
shr
call
popa
imul
mov
jecxz
into
cld
cmp
sbb
xor
scas
and
inc
inc
notl
pop
jge
and
loop
push
inc
mov
stos
cwtl
loope
icebp
bound
mov
fisubrl
out
aaa
dec
sbbl
fcomps
or
sbb
ds
adc
ds
push
out
lds
lock
call
aas
dec
outsl
push
je
jne
call
dec
outsl
and
popa
pop
adc
xlat
lods
or
shll
subb
inc
mov
stos
cmpsl
mov
dec
and
stos
shlb
sub
test
jecxz
out
ret
popa
and
loop
jbe
insl
ljmp
out
xchg
and
es
xchg
bound
loop
test
mov
mov
pop
xor
mov
movsb
lods
ds
or
dec
daa
add
enter
sbb
xchg
push
push
ds
sub
bound
daa
jmp
enter
mov
push
lock
lret
add
cmp
and
and
loop
imul
and
into
into
aas
in
fmul
cltd
and
push
mov
mov
shll
sbb
inc
js
adc
stos
stos
stos
xchg
rcrl
int
mov
mov
push
xchg
add
data16
ret
sub
pop
dec
mov
ljmp
jb
lods
mov
dec
dec
lds
and
push
pop
into
dec
out
rcll
xor
fld
js
test
test
cmpsb
int3
push
gs
popf
mov
mov
sbb
nop
push
pop
idiv
rcpps
lcall
cmpsl
dec
push
nop
out
fdivrl
xor
or
sahf
mov
xchg
out
push
lock
mov
jns
cmpsl
push
adc
movsl
sub
into
xchg
daa
cmp
into
xchg
das
xorb
jge
or
divb
sti
fcoml
push
iret
pusha
adc
movsl
outsb
pop
xchg
sbb
dec
shr
mov
leave
bound
push
cld
jg
push
lock
js
icebp
mov
xchg
idivb
mov
test
cwtl
adc
jecxz
int3
sub
popa
and
mov
xchg
ds
xor
icebp
jecxz
inc
dec
lret
push
fstpl
scas
int3
inc
mov
cmc
sbb
imul
adc
cs
scas
daa
in
pop
insl
inc
jne
xorb
out
dec
daa
jg
push
loope
test
inc
mov
mov
pusha
pop
pop
inc
xor
hlt
loope
orb
fcmovu
cwtl
sub
sub
mov
nop
mov
sub
adc
and
push
popl
add
push
jge
mov
lea
jecxz
out
daa
mov
out
cmp
mov
in
pop
add
mov
and
mov
jle
loope
sbb
std
stos
dec
mov
push
cmp
and
mov
pop
mov
test
jl
lods
movsb
dec
mov
sbb
sub
arpl
int
xchg
ficomps
push
mov
mov
adc
mov
jmp
inc
pop
aaa
iret
mov
jecxz
mov
mov
cmc
push
pop
loope
sbb
mov
push
push
ljmp
sub
lods
xchg
mov
xchg
and
xchg
dec
dec
adc
nopl
or
fimull
add
ss
rcl
mov
inc
test
xor
xor
pop
xorl
fmul
jp
sti
cwtl
aam
andl
xchg
addr16
inc
cmp
fidivrl
adc
xchg
movsb
sub
testl
lret
data16
cwtl
inc
addr16
jnp
sbb
gs
enter
or
fwait
leave
push
mov
fs
mov
fadd
jo
xchg
stos
jg
test
sub
xchg
pusha
sbb
cmpsl
imul
ret
add
pop
xor
movsb
scas
pop
inc
sub
btr
aam
jbe
pop
jnp
insl
in
fwait
or
cmc
add
or
xor
out
loop
sahf
cmp
mov
cmc
push
sbb
jbe
push
fidivs
inc
sbb
adcl
inc
clc
pushf
cmp
loope
aad
pop
push
xchg
dec
imul
sub
addb
out
mov
sub
inc
in
jae
jp
movsl
sub
inc
push
pop
xchg
mov
aas
push
xlat
jb
inc
mov
dec
xchg
jb
push
mov
jnp
lcall
xchg
stos
cmpsl
jg
inc
leave
xchg
pop
jae
xor
popa
pop
inc
clc
dec
in
push
cmp
daa
sub
pushf
and
rclb
cmp
ljmp
xor
popf
jno
pop
xchg
or
inc
loope
call
mov
bound
fsubrs
insb
pop
add
cmp
cld
pop
xchg
lock
cmovs
cmp
lret
lret
test
add
roll
in
and
aaa
mov
loope
popa
xchg
dec
test
scas
sub
push
test
scas
imul
push
stc
enter
push
icebp
cmpsl
inc
repz
in
ret
ja
push
dec
jl
cs
imul
push
mov
loope
fwait
ret
sub
xorb
sub
ss
mov
add
push
js
adc
pop
pop
fs
scas
add
jmp
inc
data16
mov
and
cmpsb
jg
pop
cmc
cld
cmc
sbb
mov
add
in
das
pop
sub
pop
dec
pop
push
push
mov
cmp
adc
add
in
and
mov
fisubrl
je
mov
add
js
repz
ljmp
xor
aad
mov
fwait
mov
fbld
add
push
jbe
dec
mov
lret
mov
sahf
jne
cmpsb
test
cmova
and
mov
add
cmpsl
stos
push
push
sti
fiadds
pop
and
pop
fldln2
pushf
ss
fwait
sahf
mov
cli
aas
dec
sub
shl
pop
mov
js
adc
fadd
and
out
popa
leave
in
add
add
scas
inc
add
fdivl
adc
pop
sbb
jae
and
xor
inc
inc
imul
lds
mov
inc
inc
ret
inc
ja
cld
xchg
nop
out
xor
aas
cmp
loope
fists
xor
movb
jne
or
in
imul
sub
test
sub
mov
cmp
ds
sub
adc
push
cld
fidivrs
xor
add
fwait
rcll
add
or
pop
je
into
into
call
outsl
sbb
jb
mov
pop
orb
aam
push
ss
and
cwtl
jnp
bound
or
stos
xchg
lock
jns
fidivl
roll
cmp
lods
outsl
ret
or
and
pop
adc
or
lret
pop
push
sub
xchg
sbb
push
les
mov
adc
inc
out
xchg
xchg
adcb
lods
shr
jno
pop
out
xor
int3
shl
jmp
ss
mov
pushf
cmp
aaa
mov
push
es
push
insb
dec
mov
call
adc
xchg
push
rorb
popa
outsb
xchg
mov
test
out
mov
mov
stc
fidivs
mulb
mov
nop
push
aad
push
sub
pop
cmp
imul
mov
fidivl
cli
cltd
push
cwtl
adc
fcomp
jge
pop
and
pop
fs
pop
jbe
xchg
jae
dec
sbb
jb
sbb
lret
aad
je
mov
or
daa
mov
sbb
jbe
mov
inc
iret
inc
stos
mov
lret
dec
arpl
mov
cmp
lods
repz
int
aaa
jmp
hlt
and
add
mov
xor
cmp
gs
xchg
ss
mov
xor
mov
orl
iret
cli
jle
mov
pop
cmp
inc
jbe
or
jno
fsubl
cmp
mov
cld
outsb
xor
jno
dec
ja
ret
xchg
sbb
movsb
bound
sub
mov
leave
push
mov
addr16
push
push
sbb
jo
xchg
ficoms
sahf
xor
lock
cmp
jp
jl
les
mov
xchg
push
jge
mov
inc
lcall
cltd
aaa
jl
lds
sub
addl
lds
add
push
sbb
pop
and
push
dec
lret
lods
hlt
and
mov
fnsave
mov
iret
lea
sbb
aas
jl
ja
mov
mov
aas
cmc
inc
ljmp
xchg
movsb
sbb
repz
stos
jle
hlt
mov
shll
or
pop
lock
das
ret
imul
mov
jne
out
mov
adc
fstp
fstpl
add
test
pop
xchg
inc
jle
iret
int3
push
clc
sbb
cs
daa
scas
jp
mov
push
iret
cwtl
inc
jb
sbb
repnz
outsl
adc
xchg
and
loope
jmp
jmp
stos
je
mov
cmp
jmp
mov
add
xor
and
and
lcall
cmpsb
dec
push
mov
fwait
add
sub
mov
mov
inc
cld
push
sub
addr16
pop
jle
dec
push
sub
push
ss
add
cmp
xor
adc
push
push
inc
jb
test
arpl
cltd
xchg
fldl
pushf
push
cmpsl
sbbl
ljmp
xchg
add
sub
mov
dec
lret
xor
add
sub
adc
xchg
lea
xor
push
mov
mov
cmp
push
nop
push
ret
inc
xor
add
dec
xchg
data16
flds
call
lods
push
lret
mov
and
add
inc
mul
and
lahf
pop
ja
mov
int3
mov
mov
sub
or
int3
lds
cmp
pop
jb
and
mov
inc
dec
push
lahf
and
pop
movaps
mov
stos
dec
sub
add
inc
dec
jno
in
arpl
mov
cmpsb
addr16
scas
cs
dec
sub
out
test
push
mulb
pop
push
pop
dec
dec
push
ss
jg
and
int3
bound
pop
rcrb
sub
jno
in
add
jb
sbb
dec
aam
xor
inc
mov
xchg
daa
testl
aas
adc
xchg
incb
dec
in
push
cli
test
lret
data16
push
mov
fs
sbb
pop
and
lea
jg
lret
movsl
xchg
ja
int
mov
pop
adc
lret
jb
adc
mov
or
roll
or
cmp
push
sub
call
std
cmp
jmp
loop
stos
call
test
icebp
inc
push
xchg
add
mov
jmp
mov
lahf
mov
push
imul
das
js
nop
mov
ror
pop
push
sbb
sarb
push
stos
jo
fistl
cmp
mov
test
and
mov
out
daa
lds
movsb
fwait
int
push
aaa
enter
test
aam
jns
xlat
dec
lret
mov
sbb
iret
loop,pn
inc
inc
or
or
popf
mov
or
sbb
xchg
jmp
fsubr
bound
pop
into
xor
imul
mov
repnz
add
push
sbb
xor
loope
or
popa
add
dec
in
xor
xchg
popa
mov
or
sbb
push
xchg
adc
enter
stos
add
call
int3
or
cmp
inc
imul
into
mov
mov
mov
lods
cmp
mov
cwtl
mov
aad
adc
cld
cmp
adc
aas
cmpsl
addr16
mov
mov
mov
xchg
push
mov
outsl
cmp
pusha
push
dec
mov
inc
fdivrl
loopne
lret
fdivl
cs
xchg
pop
jg
cmp
dec
loopne
xor
mov
adc
ret
out
jmp
jecxz
gs
and
lret
data16
enter
jo
rcrl
outsl
rorb
mov
mov
fwait
jg
mov
cmpb
add
rcl
xchg
mov
mov
xchg
adcl
pop
xor
and
add
dec
sbb
or
insl
mov
popf
enter
pop
pop
ds
mov
cmp
add
jns
lods
mov
aaa
mov
call
push
xor
ds
inc
div
std
pop
test
fdivp
hlt
and
ficomps
mov
icebp
and
mov
pop
stc
or
int3
outsl
insl
das
mov
xor
mov
pusha
scas
stos
cmpsl
icebp
push
dec
scas
mov
leave
sbb
sti
cmp
mov
scas
or
in
stos
pop
jle
imul
sub
into
je
and
mov
cs
insb
xchg
push
inc
push
xor
adc
rclb
dec
in
push
fisttps
pushf
jae
adc
out
filds
in
sbb
je
std
jno
mov
loopne
and
out
dec
pavgb
nop
xor
shlb
test
cmp
xchg
mov
roll
ret
sub
push
inc
cmp
dec
add
dec
bound
fsts
mov
sbb
sub
mov
pushf
addr16
outsl
push
adc
mov
xor
outsb
jb
push
imul
push
addr16
inc
push
xchg
int3
adc
imul
cmp
add
push
fwait
es
fistpl
insl
daa
mov
adc
ret
add
push
daa
rolb
xchg
jno
rcrb
mov
xchg
test
popa
mov
mov
xor
aaa
jmp
jmp
mov
sbb
inc
and
adc
int3
push
jae,pt
les
call
mov
es
dec
mov
out
popf
ret
xchg
sbb
xchg
mov
in
ja
sbb
lret
and
and
out
pop
inc
sub
fldcw
test
jecxz
es
jne
test
mov
hlt
lods
ds
and
test
ljmp
or
mov
loopne
mov
mov
inc
cmpsb
sub
jmp
mov
ds
and
mov
insb
cltd
and
in
ss
mov
pop
push
adc
ja
xchg
ds
xchg
mov
stos
push
mov
stos
push
jb
mov
sbb
mov
aaa
push
dec
lcall
mov
mov
or
mov
stos
out
pop
pop
in
or
jl
fisubl
pop
cmp
test
push
push
xor
and
mov
push
inc
fwait
pop
xor
dec
push
mov
push
hlt
mov
stos
mov
shr
sub
aaa
pop
in
iret
mov
shl
push
adc
jmp
lret
xchg
popa
jb
xchg
imul
cmp
mov
xchg
jle
push
inc
xchg
mov
inc
push
push
test
mov
add
jmp
aaa
int
dec
dec
rcll
scas
icebp
ljmp
push
test
push
rcll
sysret
stos
xchg
mov
loope
mov
fnsave
jo
inc
pop
xor
xchg
and
mov
and
jb
or
loope
jl
dec
mov
xlat
divl
dec
inc
or
ja
dec
add
imul
mov
mov
sahf
push
in
inc
xchg
outsl
cwtl
xchg
test
push
roll
and
and
pusha
cmp
rcrl
mov
mov
push
jp
pop
pop
adc
fucomp
in
stc
aad
or
push
pop
sub
ds
sbb
mov
ret
mov
outsb
cmp
jecxz
jl
jne
sub
pop
or
jb
sub
jl
mov
mov
test
lock
mov
pop
testb
cmp
fbld
in
or
or
wbinvd
ljmp
bound
sbb
add
mov
loope
push
xchg
jmp
adc
pop
lock
push
dec
sbbl
pushf
popa
xor
dec
pop
cmp
jbe
insl
and
mov
repz
iret
dec
sbb
xchg
int
push
push
in
adc
aam
ja
pop
mov
cmpsb
ret
fstl
xchg
js
stc
push
cmp
aas
out
and
ffreep
push
mov
leave
dec
cmp
int3
cmp
lahf
js
mov
lcall
fldcw
hlt
fisttpl
xchg
lcall
imul
sti
xlat
mov
or
fcomps
lock
xlat
test
int
fwait
cmp
sbb
sub
icebp
jns
out
push
movsb
mov
mov
sub
mov
sub
je
mul
mov
push
in
adc
dec
pop
mov
hlt
ljmp
and
sub
adc
and
mov
and
inc
scas
push
dec
jno
rorb
jns
lods
ss
xchg
out
shrl
clc
inc
hlt
ficoms
int3
out
push
mov
add
scas
ja
sbb
adc
cmpsb
jg
scas
and
fidivrl
sbb
xor
pop
xchg
push
mov
lahf
cwtl
outsb
faddl
mov
mov
fidivs
pushf
or
into
in
in
mull
mov
int3
jbe
adc
loop
test
mov
das
ljmp
sbb
xor
ljmp
ret
jmp
cmp
shl
mov
outsb
push
sub
js
aaa
and
add
out
into
test
fisttps
pop
lods
into
or
dec
push
adc
push
sbb
das
cmp
into
push
xchg
mov
pop
sbb
or
stos
adc
inc
cmc
ret
or
inc
outsb
push
roll
rcll
mov
inc
insb
mov
xchg
push
outsb
cwtl
aam
ja
xchg
stos
fcmovnbe
ror
ficoml
inc
dec
fsts
add
jne
inc
movsl
inc
ja
push
add
ret
out
xchg
data16
sbb
adc
addr16
mov
jl
test
sbb
xchg
add
ret
lods
inc
enter
ror
jne
adc
roll
lcall
fcompl
jl
fldl
push
xchg
inc
sti
jle
sub
outsb
sti
inc
sbb
mov
sub
imul
mov
fcoml
mov
ret
inc
mov
hlt
push
xchg
or
movsb
mov
dec
scas
cmpsb
hlt
add
pop
push
xor
pop
pushf
js
cltd
push
sbb
xor
dec
ja
and
sub
std
cli
imul
sub
dec
and
pop
inc
hlt
loop
mov
push
ret
cmp
add
aad
lret
dec
mov
pop
bnd
adc
mov
gs
leave
test
sub
cmc
aad
xor
daa
filds
sbb
test
nop
xchg
push
sbb
subb
fsubrl
ret
sub
lock
jmp
xor
clc
ret
pop
or
xor
xchg
mov
inc
xor
jge
clc
fldt
adcb
mov
dec
lahf
movsl
or
stc
inc
mov
int
out
mov
lcall
inc
test
jmp
fcmovne
or
test
jl
test
fldenv
push
lock
push
in
ror
dec
aas
imull
call
pop
sti
xchg
aas
xchg
ret
je
adc
cs
mov
imul
mov
or
sbb
fcoms
pop
sub
repnz
jae
add
stos
std
mov
cltd
mov
fisubrs
mov
dec
push
mov
imul
and
ret
ds
aaa
je
insb
cmp
xchg
sbbl
or
push
mov
aam
mov
lret
das
jge
dec
mov
inc
mov
outsl
aas
sbb
mov
mov
lea
jnp
pop
dec
xor
icebp
sbb
jecxz
dec
dec
sub
in
mov
aad
mov
gs
mov
daa
addr16
fistpl
xlat
fildl
iret
test
ja
pop
push
pop
inc
sbbb
adc
bound
sbb
std
icebp
adc
test
add
testl
pop
pop
inc
mov
cmpsb
sub
out
pcmpgtb
push
icebp
push
mov
in
dec
negb
lret
xchg
push
decl
aaa
lea
push
daa
addr16
xchg
sub
sar
dec
dec
jle
scas
cmpl
adc
cmp
movsl
lods
pop
fisubrs
xadd
lret
jb
mov
and
xlat
gs
xchg
xor
push
pop
jp
adc
std
fucomp
data16
jecxz
pop
stos
xor
loopnew
pop
fs
mov
sub
out
add
cmp
or
mov
and
cmp
pop
xlat
mov
nop
test
lds
shrl
mov
mov
cmp
push
add
dec
test
aad
xor
inc
out
ja
dec
and
cmp
xor
fildll
loopne
mov
repnz
mov
add
mov
iret
push
test
xor
out
addl
mov
xchg
inc
std
fdivrl
mov
and
in
loopne
pop
ds
wrmsr
call
mov
xor
stos
jns
outsl
jmp
repz
cs
xchg
les
or
pop
into
ss
push
jg
xor
leave
mov
add
xor
cmc
sbb
mov
sbb
adcb
arpl
and
aam
mov
out
mov
xor
ja
pop
sub
or
addb
imul
mov
scas
mov
lods
rcrl
pop
push
push
shll
ja
fcompl
and
insb
mov
in
push
insl
int
fwait
and
cltd
aad
cwtl
fcomps
or
addr16
sub
lock
xchg
clc
stos
lods
adc
mov
nop
fwait
xchg
sbb
enter
mov
mov
out
pop
xor
jno
cld
icebp
and
jae
inc
iret
add
mov
enter
lods
movsb
mov
sub
shl
dec
popa
das
mov
ret
sub
inc
arpl
xor
push
rol
cmp
ss
pop
loop
and
jns
adc
mov
pop
sub
inc
movsl
out
jne
and
cmp
fwait
dec
rorl
push
stos
and
cs
xor
mov
movaps
sub
fdivrp
sub
je
push
mov
or
pop
mov
adc
ret
in
mov
inc
std
cmpsl
jl
push
pop
ret
mov
sub
fsts
insb
inc
dec
jg
imul
dec
and
repz
in
out
xor
shll
in
adc
inc
xchg
roll
jle
ficoml
adc
and
pop
ret
out
jmp
mov
fstps
xor
sub
add
or
loop
mov
push
hlt
adcl
mov
or
inc
push
push
test
sbb
pop
mov
aaa
insl
and
pop
jnp
cmp
sub
movsl
imul
mov
adc
add
xlat
adc
rcl
cmc
enter
dec
sub
pop
dec
aas
push
pop
push
popl
les
ss
xchg
rclb
out
and
inc
pop
scas
movsl
daa
xor
dec
push
stos
jo
jo
mov
xor
in
xchg
ret
leave
icebp
imul
push
repz
dec
lret
idivb
push
pop
ret
xor
dec
in
adc
push
arpl
jp
fstp
stos
mov
sub
mov
push
fisttpl
aad
es
pop
stc
jle
daa
and
popf
cmp
fwait
es
lret
mov
clc
fisttpl
sti
jecxz
scas
std
jne
imul
cwtl
mov
sbb
pop
or
xchg
sbb
out
cld
sub
idiv
enter
sub
mov
or
arpl
sbb
faddp
dec
aas
adc
push
xor
jmp
jne
mov
or
mov
iret
push
cli
or
inc
lock
sbb
pop
xchg
sarb
cmp
add
out
mov
xchg
pop
popf
pop
sbb
out
test
mov
push
pop
or
add
cmpsl
call
sti
adc
pop
int
rolb
inc
jns
cs
inc
lods
in
into
iret
outsl
push
or
mov
cltd
inc
inc
in
hlt
xor
adc
dec
mov
pop
fs
dec
mov
mov
push
inc
cmpsl
adc
inc
outsl
repz
cmp
je
cmp
adc
jnp
mov
jp
pop
cmc
jno
or
ss
pop
roll
out
push
in
xor
mov
scas
jecxz
pop
iret
clc
ret
jg
adc
push
mov
mov
adc
sbb
sbb
inc
push
pushf
stc
pop
movsl
xchg
sub
jmp
fisubrs
subl
rclb
mov
jge
test
sbb
lret
xchg
lea
lock
test
out
mov
inc
test
out
xor
adc
movsb
xor
std
test
loope
ret
mov
lret
gs
jns
xor
sub
cmp
ss
push
inc
and
sbb
arpl
sti
xor
subl
sbb
sbb
and
clc
hlt
test
mov
pop
icebp
xor
leave
mov
adc
mov
cltd
stc
and
in
cld
sti
lods
or
inc
inc
jle
pop
push
lahf
das
mov
filds
or
test
lret
mov
dec
mov
in
test
jp
pop
add
sbb
inc
lcall
ss
cmp
sbb
and
pop
lahf
xchg
or
xor
fdivr
repz
mov
adc
pop
jnp
stos
mov
mov
in
in
inc
mov
lea
and
xor
push
jo
or
sub
dec
or
jns
js
das
insb
in
pop
jae
mov
repz
push
and
addr16
xor
pop
jp
test
dec
sbb
rcrl
xor
or
in
enter
dec
test
sub
mov
inc
in
dec
fwait
mov
or
add
and
into
and
mull
lcall
outsl
repz
in
cmp
stos
into
sti
inc
mov
mov
fmul
dec
orb
inc
inc
jns
lea
fs
bound
pop
sub
movb
lcall
xchg
notl
out
mov
bound
sahf
in
add
aas
mov
mov
int
inc
outsb
push
cltd
bound
iret
push
jg
mov
dec
mov
fmull
xchg
inc
jmp
fldt
cltd
dec
sbb
repz
jecxz
cmp
dec
dec
lcall
ret
dec
addb
sub
xchg
lods
jno
or
ret
sarb
jge
pop
aad
pop
arpl
daa
pop
lods
test
sbb
jecxz
arpl
mov
inc
lret
ss
inc
gs
inc
insb
adc
jbe
sub
cmp
call
insb
std
cli
faddl
lods
cli
mov
fildl
mov
inc
inc
xchg
insb
xchg
rolb
popa
mov
mov
shr
fiadds
in
pop
bnd
jmp
mov
cwtl
in
ss
gs
or
mov
jecxz
jo
xchg
cwtl
cmpsl
out
sbb
dec
shll
fwait
out
mov
dec
insl
scas
repz
std
xchg
and
push
add
enter
test
mov
push
pop
mov
pop
xchg
inc
push
cltd
xor
sub
test
mov
ss
adc
jge
add
jnp
dec
sti
fwait
xchg
mov
cmp
fisubrs
scas
addl
dec
popa
and
test
sbb
and
std
sub
dec
mov
lods
popa
push
test
out
jl
in
push
push
mov
cmp
add
dec
jl
mov
add
cld
or
ficomps
test
dec
insl
dec
mull
mov
dec
aam
aam
inc
dec
sub
sub
stos
pop
add
mov
aam
push
lea
pop
call
dec
subb
pop
mov
xor
cmp
addr16
sbb
jmp
dec
sub
or
or
movsl
shlb
lds
cmc
xor
hlt
lret
popf
nop
jae
mov
cmp
inc
jae
or
push
cmp
outsl
sbb
ljmp
lahf
mov
pop
sub
loope
mov
sbb
xchg
mov
jnp
shrb
pop
sub
fwait
push
jae
sahf
nop
js
push
fdivl
mov
or
inc
jae
dec
cld
jmp
and
push
cmc
mov
out
ja
rorb
call
xchg
and
in
cltd
scas
jne
mov
mov
fbld
jb
jae
xchg
mov
ljmp
pushf
jecxz
lods
adc
mov
jb
ret
push
sbb
mov
std
cmpsl
inc
and
fidivrl
je
inc
xchg
int
lea
mov
inc
and
stos
bswap
dec
lods
cmp
jne
shlb
daa
das
int
push
stos
push
int3
jmp
xchg
stc
and
push
pop
lcall
add
sbb
mov
xor
rorb
mov
dec
mov
and
fbld
push
jmp
into
xlat
adc
xchg
and
stos
jo
pop
loopne
aam
cmpsl
xchg
xchg
jge
imul
outsb
jmp
mov
inc
pop
push
or
xchg
mov
push
push
add
data16
xchg
mov
test
insb
das
cli
es
or
rep
out
add
and
imul
notl
pusha
mov
and
neg
jle
clc
mov
ss
mov
test
sub
xor
icebp
xor
or
out
dec
mov
out
movsl
lods
lods
popa
jo
clc
mov
xlat
cwtl
and
mov
or
mov
adc
inc
stos
sub
cmp
dec
ret
jecxz
lahf
lret
sbb
mov
add
lret
mov
jmp
adc
daa
mov
and
or
loop
or
xchg
sbb
sub
mov
and
sbb
xchg
jecxz
mov
cmp
rorl
mov
enter
imul
cmp
cmpl
push
sub
push
pop
jmp
inc
and
and
dec
ds
rorl
out
das
nop
jmp
adc
push
push
sbb
cli
mov
imul
shlb
rolb
fucomp
lret
pop
addr16
das
in
push
lret
sbb
popa
pop
ret
dec
add
push
fsts
in
and
add
rcll
iret
in
and
mov
call
dec
add
shrl
test
dec
mov
cmp
mov
mov
add
icebp
into
push
lock
negb
fs
adc
jl
jl
add
cmpsb
shr
adc
add
dec
lcall
clc
mov
cmc
mov
sahf
xor
jae
sbb
loope
sbb
xor
xor
outsl
test
dec
insl
jb
gs
sub
sbb
loopne
mov
outsl
loope
or
dec
pop
repz
pop
adc
mov
cld
loope
lret
push
je
loopne
sub
mov
shrl
rcll
hlt
jb
pop
xor
icebp
insl
lods
xchg
xchg
in
push
sbb
fidivrs
scas
sahf
outsl
out
or
inc
push
ret
sbb
dec
jp
xor
xor
and
sub
cmp
push
and
push
int3
aad
dec
sahf
ss
push
lds
popa
sub
jbe
push
sub
sti
lods
cs
mov
or
test
arpl
cmpsl
xor
dec
ror
push
pop
test
lret
pop
repnz
xor
jmp
mov
jecxz
in
nop
xor
imul
std
jl
sbb
bound
jb
cmc
push
pop
xor
std
xchg
xchg
jae
push
and
les
push
outsb
add
jnp
ret
test
inc
sbb
adc
das
mov
bnd
xchg
psubsw
clc
mov
es
jle
ljmp
mov
inc
fildll
data16
insl
mov
lea
fisubrl
inc
jb
into
faddp
int3
cmp
std
cwtl
and
aaa
mov
xorb
lahf
dec
add
jg
lahf
imul
jmp
mov
dec
jge
jg
aad
jecxz
scas
out
cltd
daa
seto
out
mov
sbb
into
popf
jecxz
mov
gs
fistpl
xor
rcl
bound
int3
cmp
inc
das
pop
mov
jo
mov
fmulp
imul
icebp
insl
jns
sbb
push
pusha
std
sti
ret
mov
add
nop
pop
repnz
call
jecxz
inc
sbb
jmp
das
add
fidivrl
pop
adc
mov
lret
sub
notl
sub
inc
or
dec
std
loope
lds
shll
pop
xchg
frstpm(287
in
mov
add
test
mov
es
or
mov
push
test
sub
push
mov
fs
dec
push
push
xor
loop
lods
mov
aaa
fnstcw
fsubrs
xchg
push
loopne
xor
mov
insl
loop
mov
sub
cld
dec
rolb
into
push
mov
inc
xor
add
lods
pop
mov
xchg
dec
inc
adcl
and
inc
dec
add
jp
jg
adc
mov
push
jbe
in
mov
js
add
nop
xchg
mov
xor
push
test
cmp
sbb
mov
scas
xchg
test
out
sbb
cltd
dec
jmp
mov
mov
int3
sbb
dec
shll
sbb
mulb
cmpb
xchg
pop
pop
jg
jg
bound
cmp
fldln2
and
call
pop
add
cmp
das
cmpsb
fwait
push
je
scas
sub
ljmp
mov
jno
inc
loop
sub
xor
jg
incb
ds
shl
int
lret
adc
flds
cld
jmp
cmp
jae
push
enter
mov
test
and
mov
xchg
cmp
xor
dec
or
or
mov
cmp
push
daa
rolb
test
pop
cltd
not
adcl
insb
and
or
jecxz
fisttpll
outsl
inc
xchg
push
lds
loope
inc
fcomp
xor
xchg
push
pop
add
fimull
in
sbb
lahf
leave
pop
cmpsl
sub
inc
dec
xchg
sahf
jnp
push
cli
bound
adc
dec
mov
sahf
mov
dec
push
add
andl
sbb
jb
repz
shrb
lcall
inc
shrb
es
xchg
dec
ss
out
aas
jae
fs
in
in
sbb
popa
xor
out
test
out
push
push
cltd
iret
shl
into
les
in
mov
sub
lret
jl
push
idivl
jle
mov
js
cltd
mov
clc
inc
fwait
lea
dec
mov
mov
sbb
inc
jbe
push
stos
in
cmp
push
ss
inc
cmp
lock
jp
pop
lods
or
cld
psrlq
test
add
or
rcrl
addr16
lret
cmp
fsts
lcall
ds
mov
sarb
xor
sbb
int3
sub
cld
mov
inc
sahf
daa
mov
loope
sub
dec
sub
and
cmpsl
sbb
xlat
outsb
inc
jl
mov
icebp
or
pop
xchg
or
cmpsb
cmp
add
push
sahf
xor
jp
es
push
push
fs
push
dec
push
and
push
in
fidivs
out
inc
or
add
and
hlt
dec
and
jno
mov
pop
push
bound
jns
fbstp
into
xor
enter
flds
cmp
ss
mov
sbb
repnz
cmc
push
mov
add
and
insl
icebp
shl
int3
mov
hlt
sar
adc
loop
xchg
sub
mov
push
rcl
or
adc
and
test
mov
data16
and
cs
xchg
lret
dec
cmp
mov
inc
mov
xchg
repnz
jne
push
nop
sub
imulb
mov
lods
or
js
dec
aaa
out
stos
imul
ficompl
enter
roll
jne
xchg
jp
imul
lock
and
rcr
and
and
ja
ret
add
daa
jb
push
cmc
mov
out
shlb
clc
and
out
jg
and
lret
rcl
jae
in
loope
fwait
jbe
inc
rorb
je
fcompl
into
push
push
xor
notb
pop
jns
cld
insl
arpl
inc
aaa
add
fiaddl
sub
adc
xchg
inc
out
test
pop
mov
xor
add
ja
fsubr
and
jp
imul
ds
cs
xor
add
mov
pop
dec
jne
sub
xchg
adc
adc
ja
stos
loope
fistpll
mov
adc
rcrl
pop
lods
mov
int
in
pop
shlb
mov
add
mov
push
enter
imul
inc
loopne
adc
mov
adc
ds
test
in
mov
mov
out
sbb
adc
dec
es
leave
and
popf
xchg
cs
or
xor
cltd
scas
xchg
mov
mov
mov
xlat
and
lret
mov
test
lret
pusha
mov
dec
mov
shlb
leave
cwtl
pop
xor
cmc
mov
testb
movsb
cmp
pop
xchg
pop
adc
ljmp
call
mov
jl
cwtl
jmp
scas
stos
rorb
jnp
lock
pushf
push
imul
in
push
xor
ljmp
insl
inc
imul
sahf
jg
jge
cmc
mov
insb
pop
aad
xor
adc
sub
inc
dec
popf
inc
push
movsl
add
movsl
push
movsb
cmpsb
ja
enter
pop
popf
in
loope
sbb
or
rorb
add
mov
sbb
xchg
add
sub
cmpsb
jno
jle
dec
xchg
jno
xor
mov
adc
jmp
mov
adc
xor
adc
loopne
pop
lods
rcl
adc
push
enter
icebp
mov
and
adc
dec
pop
enter
pop
movsl
dec
dec
aam
lahf
lods
movsb
lret
cmp
pusha
add
xor
in
push
dec
mov
aam
test
or
je
dec
call
lcall
fbld
jmp
pop
int3
jae
popf
xchg
jmp
mov
outsb
ljmp
mov
push
xlat
or
insl
insb
jno
mov
and
mov
dec
adc
ja
sub
lret
int
mov
push
lods
mov
sti
hlt
dec
das
adc
jp
loope
les
adc
jl
int3
jnp
inc
pop
sbb
cmpb
sub
dec
dec
sahf
pusha
ret
test
popa
add
aas
ss
dec
ds
les
pop
adc
mov
stos
jae
jle
ds
arpl
mov
push
pop
int3
adc
movsb
or
adc
mov
mov
icebp
mov
lods
das
out
addr16
mov
mov
mov
mov
xor
jns
dec
repz
add
mov
ret
adc
cmc
xchg
in
int
pop
push
pop
adc
mov
sub
mov
xor
lods
cmp
sahf
in
cwtl
test
inc
push
cmp
cmp
lret
std
sbb
mulb
into
sbb
test
test
fadds
loop
rcll
outsl
mov
mov
add
sbb
sub
aaa
mov
adc
inc
cwtl
outsl
jae
lea
iret
nop
mov
cmp
push
adc
and
lods
popf
pop
mov
ss
pop
sub
stos
shll
test
push
xor
dec
push
outsb
push
in
testl
cmp
test
jmp
mov
pop
pop
add
mov
push
std
rorl
test
out
outsb
xchg
mov
shlb
add
cmp
test
inc
mov
shr
mov
fdivrp
inc
je
js
movsb
push
inc
inc
into
adc
loopne
mov
sahf
xor
mov
cmpl
add
addr16
and
xchg
gs
sub
adc
jns
je
pop
test
bound
scas
pop
push
imul
inc
mov
add
cmp
cli
xchg
mov
fists
adc
out
sbb
mov
arpl
xchg
fnstenv
inc
dec
xor
xchg
aam
nop
lahf
out
mov
mov
call
push
xor
mov
arpl
ss
mov
mov
or
pop
push
aam
mov
and
sbb
pop
and
push
pusha
xchg
loop
jb
in
cmpsb
lea
sarb
lcall
pop
xlat
sbbl
sub
jne
pop
out
cmp
xchg
and
push
push
push
jecxz
jp
in
out
or
push
cwtl
push
sub
xchg
es
imul
sbb
stc
popa
xchg
in
push
lcall
jnp
es
sbb
xchg
xchg
pushf
loop
sub
push
xchg
or
cli
cmpsl
mov
jbe
mov
sbb
jb
xchg
cmp
shlb
dec
mov
jae
mov
stc
xor
dec
sub
xchg
sub
dec
lods
out
jno
clc
pop
jns
insb
shrb
xor
lret
push
out
nop
jae
dec
xchg
adc
ds
xchg
or
jne
aaa
xchg
add
push
xchg
mov
cmpsb
xchg
pop
push
data16
or
cltd
jg
or
lret
jne
lods
jno
popf
ficoms
sub
int
jge
out
mov
dec
mov
scas
jns
xchg
enter
out
imul
sbb
jnp
adc
xchg
mov
push
into
push
scas
cld
leave
mov
ljmp
std
add
sbb
xchg
dec
or
das
movsl
in
pusha
adc
adcl
arpl
xchg
push
negl
or
pop
adc
sahf
rorb
xor
pop
or
imul
jp
jp
in
add
subl
fdivl
jge
movsl
out
lret
stos
fisttps
push
repnz
push
dec
and
push
and
mov
push
lret
insl
dec
pushf
stos
cwtl
mov
push
mov
lods
inc
adc
mov
insl
loop
jb
and
aam
jo
icebp
xor
mov
adc
arpl
adc
add
gs
pop
dec
inc
pop
push
aaa
in
xor
clc
adc
dec
dec
mov
fs
icebp
loop
test
mov
pop
add
rcrb
adc
jbe
dec
lock
loopne
arpl
mov
and
xchg
xchg
add
not
pop
insl
add
dec
xor
xlat
inc
xlat
cwtl
jecxz
pusha
out
int
add
sbb
pop
test
xchg
scas
sarb
mov
stc
inc
cli
imul
cmp
ljmp
ss
pop
insb
xchg
inc
jbe
and
mov
fs
push
fisubrs
inc
adc
and
jbe
push
jle
fimuls
mov
insb
fistpl
and
pop
fstpl
movsb
mov
jp
fidivs
loop
ds
out
in
mov
push
pop
sbb
stos
clc
add
cli
mov
push
pop
outsb
cmp
mov
adc
pop
insb
out
ja
mov
adc
repnz
inc
insb
push
clts
popa
sub
jge
xor
pop
mov
sub
dec
iret
inc
adc
jge
xor
adc
lods
sub
add
inc
mov
jle
movsb
xor
shr
ret
or
mov
inc
cli
adc
imul
xchg
cmc
push
popf
inc
jmp
adc
popf
scas
xor
sub
xchg
xor
jns
add
mov
jb
movsb
movb
sub
subl
dec
popf
push
dec
sbb
pop
pushf
sbb
or
das
subb
mov
jecxz
pop
sbb
loope
in
mov
xorb
repnz
test
xor
dec
mov
jecxz
ret
sub
adc
fistpl
push
pop
and
cs
iret
mov
adc
push
mov
cmc
jl
mov
xchg
jno
sub
loopne
xorl
jno
push
mov
push
pop
jo
mov
cmpsb
mov
cmp
sbb
push
cmp
xor
jmp
fst
into
sarl
mov
sub
push
cmc
dec
pop
iret
push
in
leave
fisubs
dec
push
xor
iret
hlt
or
mov
sub
in
xor
xchg
ja
mov
cmp
jmp
push
inc
mov
fisttpl
fstpl
or
test
jno
adc
xor
jns
dec
jmp
aam
mov
xchg
fldt
arpl
sub
js
sbb
mov
adcl
jl
mov
pop
rcl
push
xchg
sti
cs
fnstcw
push
inc
add
xchg
inc
xor
outsl
jns
lea
pop
fmull
cmc
cltd
and
cwtl
in
sbb
jmp
test
ljmp
data16
pushf
jmp
inc
jne
imul
or
out
ds
sub
nop
andl
std
and
jbe
jns
pop
sbb
push
or
and
cmp
adc
pop
xchg
add
lret
mov
push
aam
jns
or
test
or
xor
loop
mov
mov
ret
xor
rclb
pop
mov
jns
fbld
lods
sti
imul
ljmp
ret
cmpsl
jge
mov
sahf
xor
mov
sbb
jmp
sbb
inc
pop
test
push
jns
inc
xlat
fcomps
dec
jmp
mov
xor
int3
out
ret
dec
sub
mov
push
fwait
sub
pushf
imul
popa
mov
mov
addr16
lret
jge
xchg
jge
lock
xchg
mov
rclb
mov
loope
mov
or
jg
or
jnp
xor
sub
sbb
xchg
push
dec
fidivrs
out
andl
jp
out
mov
xchg
imul
loop
nop
mov
jl
xchg
imul
dec
jmp
or
xor
ficoml
inc
add
sbb
addb
dec
pop
adc
je
pop
mov
mov
adc
jge
les
or
xchg
push
es
dec
jge
in
dec
fildll
cmc
into
mov
xchg
fldlg2
outsl
daa
xchg
jo
fildll
xor
and
fpatan
stc
dec
sub
sahf
repnz
xchg
mov
mov
int3
leave
add
pop
push
repz
adc
cmp
jecxz
and
ret
outsb
sbb
push
and
inc
sarl
fs
outsb
push
outsb
jb
jo
jnp
add
imul
daa
addr16
pusha
push
mov
lock
add
shrl
mov
mov
cmp
xor
pop
jo
call
add
jge
adc
das
adc
std
sub
and
pop
sbb
inc
inc
sub
push
push
aam
sub
push
or
call
push
add
or
sarl
mov
mov
mov
movsl
jmp
ds
sbb
dec
out
gs
inc
inc
xchg
stc
mov
jo
sar
adc
cmp
dec
push
js
sbb
imulb
insl
fidivrl
aam
sahf
sub
xor
cmp
sbb
ss
ror
test
and
nop
test
jo
push
pop
mul
ret
fyl2xp1
es
mov
call
rep
push
jnp
fstpl
stos
icebp
push
adc
sub
int
jmp
popa
cwtl
in
sub
mov
jl
fdivrl
repnz
mov
inc
xchg
movsb
fcmovnb
mov
fstl
movsb
xor
inc
push
inc
fisubrs
std
mov
mov
js
test
fs
cmp
jnp
leave
fisttpl
mov
mov
out
nop
test
push
cld
adc
xor
mulb
xor
push
or
mov
je
shl
mov
and
ret
sbbl
cmp
mov
mov
sbb
xchg
mov
inc
add
xchg
lods
int3
pop
loope
mov
lret
les
ror
pushf
orl
out
inc
dec
in
into
aaa
inc
cmpb
out
fsubrs
push
mov
data16
imul
xor
or
mov
hlt
push
call
scas
cmp
pushf
hlt
inc
cmp
clc
lret
mov
dec
fidivl
insl
outsb
inc
cld
pop
adc
push
ds
stos
sub
test
pop
mov
push
loope
xchg
mov
cmp
imul
or
cmpsb
jns
sahf
cmpsb
sbb
fcomi
mov
cmpsl
and
mov
mov
jae
xchg
push
scas
je
out
mov
adc
sbb
into
ds
mov
enter
xchg
mov
pop
out
fwait
pop
popa
fimull
fadds
sub
out
pop
mov
std
les
jmp
sbb
mov
or
jle
popf
lret
orl
push
and
push
or
mov
cmc
femms
inc
aad
push
cmc
fnstcw
mov
insl
fisubl
pop
ret
push
push
mov
push
mov
sbb
ds
sub
dec
inc
jmp
daa
inc
sbb
cmc
mov
push
jne
pusha
and
push
mov
cmp
in
out
push
jns
inc
pop
mov
push
jl
jae
mov
jmp
dec
leave
xor
cwtl
jno
push
sbb
xchg
jg
sbb
inc
loopne
hlt
fidivs
inc
je
or
out
xchg
and
clc
fidivrl
repnz
cmp
fbstp
pop
out
push
pusha
pusha
frstor
xor
ss
jecxz
aaa
mov
jns
es
and
pusha
fdivr
jmp
or
sbb
movsb
mov
dec
dec
add
mov
mov
out
into
loop
shrl
push
mov
gs
fists
sub
pusha
add
das
fldl
and
sbb
addb
out
adc
imul
mov
push
fwait
cld
ss
fbld
and
adc
sub
pusha
daa
push
sub
pop
call
stc
in
imul
dec
add
lea
dec
push
fadds
cmpsl
mov
pop
sub
push
push
mulb
mov
into
or
push
adc
leave
cld
mov
mov
xor
dec
fiadds
inc
in
pop
jmp
inc
je
mov
push
es
aad
and
into
push
sbb
pop
repz
xor
xor
in
inc
jle
mov
stos
out
repnz
ja
subb
fstpt
int
lcall
gs
mov
adc
outsb
stc
push
mov
fdivl
add
fimuls
mov
jmp
cmpsl
pop
jecxz
dec
repnz
xor
cmp
mov
xchg
jle
jae
mov
push
push
lcall
xor
fabs
dec
push
mov
imul
mov
fisubrl
iret
movl
lahf
popf
xor
push
movl
dec
dec
mov
jb
in
mov
mov
sbb
pop
enter
inc
and
pop
lods
aam
lahf
popa
mov
xchg
adc
pop
jnp
push
movsl
dec
fistps
jne
add
push
jg
js
inc
and
and
sahf
fstpl
pop
test
pop
test
jl
flds
add
cli
push
jb
xchg
add
and
daa
adc
lret
daa
jmp
xchg
push
js
adc
mov
mov
inc
repnz
jecxz
mov
lret
and
das
or
mov
dec
outsl
mov
mulb
fimuls
and
lret
cwtl
jl
fldenv
lahf
icebp
mov
rcll
add
aam
cmpl
jl
cmp
pop
xchg
push
lds
or
sbb
xchg
mov
lahf
mov
bound
xor
fs
jb
mov
mov
mov
gs
insl
adc
das
loopne
cmp
xchg
dec
nop
gs
adc
or
idivl
dec
fs
adc
clc
pop
test
jle
loop
lods
sti
jle
mov
inc
lds
sbb
inc
das
inc
int
outsb
mov
mov
les
fmul
add
dec
or
inc
fstpt
jle
fidivs
ds
jp
xchg
xchg
push
inc
jg
scas
pop
sbbl
outsb
jo
das
fstpl
mov
hlt
sub
sbbb
jge
cmpsl
cs
jb
les
sahf
xrelease
lcall
cmp
ljmp
xorl
pop
es
jp
mov
inc
adc
loop
ljmp
xlat
in
test
inc
mov
mov
add
jecxz
subl
add
dec
xchg
pop
lret
pop
inc
mov
jg
sub
daa
dec
and
xchg
jmp
jnp
in
aas
gs
push
rorb
jo
mov
push
inc
not
je
cmp
out
cli
mov
pop
xor
inc
mov
push
cld
jmp
xchg
xor
push
mov
and
xor
mov
data16
jb
aam
hlt
sub
cmpsb
jnp
and
insl
push
fidivrs
pushf
or
add
fisttpll
outsl
mov
add
fadds
pop
xorb
dec
sbb
fs
mov
faddl
aas
mov
dec
jnp
shr
and
into
test
ret
sahf
xchg
roll
mov
dec
je
xlat
add
arpl
jle
out
repz
lret
xorb
add
je
cmp
rorb
daa
and
nop
enter
std
cmp
sub
pusha
fbld
into
lods
xchg
mov
inc
cmp
das
outsl
jno
mov
sub
imul
cmp
push
pop
std
push
stos
mov
sbb
stos
add
or
movsb
sub
movsb
clc
push
test
cmp
inc
sbb
push
in
bound
and
mov
repnz
mov
jmp
mov
sbb
lods
stc
sub
es
mov
into
sti
fisubs
pop
rcl
lcall
mov
rcl
jno
xor
cmp
xchg
pop
enter
ss
lds
cld
gs
je
hlt
iret
stos
rolb
int3
add
movb
int3
xchg
cmp
shrl
ljmp
adc
std
imul
mov
subb
cmp
adc
shrb
and
in
fwait
lds
clc
mov
sbb
pop
inc
lahf
xchg
fs
leave
out
aam
test
repz
pop
shl
out
mov
imul
or
jge
aad
lahf
in
mov
test
jb
xchg
in
movsl
dec
pop
jno
lea
xchg
shl
mov
adc
add
jbe
je
sahf
nop
dec
std
jp
mov
jle
out
ret
enter
js
dec
jae
jecxz
rorl
pop
xor
xchg
xor
or
imul
adc
pusha
jp
push
shll
ret
push
addr16
cmp
jge
roll
testb
movsb
repnz
adc
mov
scas
mov
or
sub
iret
pop
aaa
stos
out
outsb
cmp
movsl
cld
loopw
stc
imul
mov
lods
pop
cmp
dec
imul
push
les
cld
jno
adc
icebp
cmp
cmpsb
aaa
mov
clc
scas
mov
insl
pop
and
stos
out
mov
or
enter
nop
mov
mov
divl
data16
mov
lods
mov
aaa
pop
mov
mov
mov
cmp
test
daa
dec
outsl
xor
or
rorb
sub
adc
stos
call
xlat
jo
scas
xchg
sarb
mov
or
imull
and
sub
mov
aad
mov
mov
inc
adc
rclb
mov
and
fstpt
lcall
iret
push
clc
jo
clc
pushf
adc
aas
jle
in
xor
daa
imul
mov
lods
cltd
leave
negl
pop
in
out
insl
lods
daa
loope
aad
loope
sbb
push
mov
jmp
push
mov
arpl
shr
mov
mov
and
jmp
add
insb
cmp
xchg
test
out
push
aaa
cli
mov
sbbb
sbb
pop
xchg
mov
in
adc
mov
mov
nop
fildll
xchg
xlat
lods
mov
jne
int
sarb
sub
add
test
jle
sti
loope
out
popl
mov
in
icebp
cmp
add
pop
outsb
xchg
inc
mov
adc
sub
js
sub
cmpsl
dec
imul
mov
mov
mov
xchg
fwait
adc
sub
loope
and
aad
mov
imul
inc
rcll
pop
or
imul
sbb
imul
mov
test
xor
sbb
pop
mov
sti
fisubrl
and
inc
cmpsb
pop
js
aas
mov
cmpsl
add
xchg
mov
or
ljmp
mov
xchg
cli
clc
jmp
in
xchg
pop
lea
call
lock
cmp
pop
aaa
jnp
fwait
fcomps
outsl
sti
jmp
fnstenv
lods
int3
push
pusha
push
addr16
mov
xlat
or
cmovns
out
aad
mov
lods
hlt
cs
and
push
xor
xchg
outsl
jg
mov
xor
adc
push
jb
push
lret
arpl
xchg
pop
inc
jge
and
mov
jge
inc
clc
mov
fcompl
mov
jecxz
push
sub
mov
pop
loopne
sub
sti
sbbl
adc
mov
outsb
ret
insl
pop
lcall
cmp
std
or
pop
xchg
in
mov
scas
es
sub
outsl
cmpsl
xchg
mov
fs
lock
xor
or
mov
pop
imul
or
fs
ret
aad
dec
push
mov
and
pushf
jne
push
mov
xor
add
jl
lahf
push
xchg
mov
lcall
push
cmp
push
int
xchg
and
or
mov
jl
stc
inc
into
ds
add
subl
push
xor
pop
movsl
sti
mov
jno
jecxz
ret
movsl
push
cltd
add
add
loopne
testb
add
mov
mov
mov
xchg
popa
lret
add
jmp
adc
adc
mov
sub
aas
push
stos
mov
out
sahf
mov
add
cmpsb
cmp
shll
add
ja
pusha
pop
sub
inc
es
sub
aad
mov
sub
mov
jbe
mov
cmpsb
mov
mov
mov
vpsrad
inc
add
add
pop
mov
sub
add
xchg
nop
adc
cmp
ljmp
jno
sbb
xchg
cld
mov
cmp
iret
mov
add
mov
ds
mov
mov
cmp
add
sbbl
mov
cmp
xchg
cs
cmp
inc
sub
push
ljmp
sub
push
mov
push
mov
sbb
aas
add
iret
jle
enter
mov
or
arpl
jmp
push
sahf
jbe
jl
mov
and
xor
adc
inc
mov
fidivrl
jns
pusha
or
fwait
sbb
call
or
sub
pop
xor
xchg
outsl
mov
pop
outsl
dec
dec
mull
or
cmp
push
gs
sbb
xchg
lds
adc
sbb
add
andb
movsl
xor
rcrb
je
in
jne
add
lcall
push
sbb
subl
std
lds
push
out
xchg
sti
and
insb
loope
lret
add
aaa
xrelease
adc
popf
mov
pop
outsl
cmp
loop
pop
test
jbe
sub
sub
pop
push
xchg
clc
lock
xchg
sarb
fsubr
xor
or
shlb
outsl
ss
mov
call
dec
ror
ja
sti
pop
mov
push
rorb
inc
cmp
sub
pop
lock
sarl
fwait
sbb
pop
adc
cmp
dec
jb
clc
push
mov
push
loopne
js
mov
inc
test
or
pop
xlat
adc
sub
into
jbe
repz
fistps
outsb
cmp
or
fucomip
inc
movsb
mov
adc
shl
aaa
jnp
std
or
loope
xchg
lcall
movsb
imul
mov
mov
push
jns
int3
shr
pushf
dec
cs
flds
ljmp
jmp
jge
pop
xor
sbb
movsb
lods
lods
push
dec
pop
inc
testb
mov
cmpsb
out
add
cmp
mov
ds
orb
gs
test
xorl
jmp
push
mov
jno
sbb
xchg
cmp
lret
mov
imul
int3
das
dec
enter
enter
dec
mov
mov
cli
or
leave
loop
add
lea
cmpsl
daa
ficomps
lret
lahf
movups
dec
pop
push
dec
in
aas
mov
mov
int3
aas
xchg
and
pop
or
adc
mov
call
pop
adc
test
pop
sbb
add
cld
xor
jmp
xor
sbb
les
popa
test
fldenv
stc
pop
fstpl
inc
call
jns
notb
sub
in
lock
imul
movsb
sbb
jae
add
loop
lret
sub
fidivrs
add
negb
lods
icebp
mov
out
imul
in
mov
je
movsl
mov
subb
stc
mov
mov
xchg
jle
sub
orl
push
jnp
rcrl
pop
cmpl
ret
fidivl
aad
dec
fwait
imul
adc
test
pushf
adc
inc
xor
mov
mov
and
dec
mov
fdiv
push
leave
mov
jle
xor
inc
add
and
cld
loope
ret
je
je
jno
ret
ret
fstpt
rcl
data16
cld
negl
rorb
test
xchg
pop
popa
jmp
out
jne
andl
jmp
shl
in
xchg
cwtl
lret
popa
aad
dec
and
jmp
mov
xchg
inc
shrb
outsl
jp
aad
nop
jo
or
adc
cmp
jns
out
sbb
loopne
xchg
sbb
dec
jo
dec
cmp
mov
dec
ja
js
shrl
sbb
xlat
std
mov
cmpsl
xchg
shrb
ljmp
dec
cmp
in
jns
pop
out
add
insb
mov
jmp
das
mov
jno
or
and
fidivrs
test
sahf
test
pop
xor
xor
jp
push
or
mov
xor
add
push
cltd
sbb
mov
or
or
daa
inc
and
ret
loop
adc
cmc
insb
xchg
int3
gs
push
mov
fnstcw
xor
sub
xchg
xchg
dec
in
dec
ds
and
test
insb
std
or
push
mov
jg
shr
inc
xor
andb
pushf
jb
dec
mov
sub
sbb
outsb
sahf
xchg
loop
jecxz
adc
mov
xor
ljmp
in
lret
in
push
ret
cmpsb
je
sub
mov
aad
dec
mov
shl
sbb
repnz
xchg
jl
mov
dec
out
dec
xchg
push
sbb
loop
add
insl
fidivl
cwtl
insb
dec
pop
dec
popf
lods
fstpt
mov
sbb
inc
jno
push
push
pop
xchg
adc
imul
inc
jmp
jecxz
movsb
shl
pushf
add
out
out
mov
jp
icebp
inc
rcrb
or
nop
xor
ret
add
frstpm(287
roll
mov
loop
push
inc
xchg
push
pusha
in
sub
jno
push
mov
push
xchg
and
int3
xchg
sti
repnz
sti
dec
cmp
imul
movsb
test
inc
js
mov
ret
fdivl
jl
jo
out
es
sub
adcl
dec
out
mov
jae
xor
mov
adc
jb
into
arpl
roll
imul
wrmsr
xchg
xchg
or
add
push
dec
or
jbe
cltd
add
pop
or
je
repnz
xchg
cmp
dec
andl
xor
cmp
or
lahf
outsb
xchg
pop
push
lea
inc
mov
sub
lret
jmp
fdivrl
jb
jp
and
bound
fsubl
jbe
xlat
inc
push
inc
xchg
nop
mov
and
iret
jno
iret
int3
xor
pop
cli
minps
loop
icebp
in
or
inc
in
cmpsb
dec
mov
push
sbb
push
enter
jnp
push
mov
dec
jecxz
shll
mov
jo
stos
fldenv
cmp
imul
fistpl
and
xor
inc
fldl
insl
add
loop
push
out
pushl
or
scas
sub
stos
ret
out
sub
pop
inc
jp
xchg
int3
xchg
ljmp
sbb
push
xchg
mov
fisubl
mov
ret
test
rcl
outsl
xchg
pop
enter
xor
cmc
test
cmp
adc
add
mov
lea
push
inc
iret
cmpsb
mov
jp
and
pop
dec
out
pop
imul
pop
mov
sarl
sbb
mov
lcall
imul
ret
lahf
mov
stc
adc
lds
jg
sbb
shl
outsl
add
cmp
repz
ds
cltd
jmp
cmpb
mov
outsb
cmpsb
aaa
dec
adc
mov
mov
mov
sub
inc
adc
mov
cmc
adc
or
pop
stc
mov
add
addb
xchg
and
dec
sbb
jne
mov
xchg
mov
out
pushf
je
lahf
leave
fiaddl
dec
add
mov
xchg
jp
push
ret
or
aaa
mov
ss
inc
std
xchg
sbb
enter
and
mov
ds
fld1
cmp
rolb
out
mov
push
loopne
bound
pop
in
loopne
inc
pop
mov
notb
insb
int
insl
leave
xor
fs
cmp
sbb
push
pop
or
fwait
inc
adc
scas
jb
int3
mov
rcrl
lcall
mov
cs
js
fwait
pop
cmp
add
xor
xchg
mov
leave
pop
adc
sbb
cld
mov
fcomip
shll
lods
arpl
inc
xor
lds
adcl
movsl
pop
sub
push
add
sub
test
mov
gs
insb
in
shlb
pop
movsl
mov
lds
scas
daa
sub
shl
fldt
arpl
mov
add
jb
mov
lock
fidivrl
xor
insb
mov
lods
inc
push
outsl
enter
push
imul
pop
clc
jb
cmp
fistl
aam
dec
or
xchg
and
and
dec
mov
rcrb
mov
arpl
in
cs
sub
fbld
sub
inc
lods
adcb
call
rcrb
test
jl
xor
xchg
inc
inc
mov
push
sub
mov
in
movsb
pop
je
rcrb
outsb
cwtl
fs
lods
or
push
inc
lds
movsb
adcb
cmp
and
mov
ljmp
mov
ss
sarb
push
call
sbb
cli
inc
mov
mov
sub
mov
rclb
cli
xor
cwtl
subl
mov
lock
loop
pusha
fstp
and
jae
jg
cmp
imul
mov
divl
popf
cmpb
lods
mov
cmp
lods
outsl
cmc
lea
fimuls
mov
cltd
pop
push
jo
push
aaa
mov
shr
cld
fidivrl
jge
jns
or
imul
xor
repz
jecxz
jp
lcall
into
iret
mov
les
test
lea
shrl
mov
pop
ret
push
sbb
test
icebp
int3
adc
imul
sub
pop
jbe
cmc
jns
xor
mov
push
xchg
rcrb
xchg
inc
pop
pop
and
testw
outsb
lock
out
add
sar
movsb
mov
dec
cmpsb
in
mov
icebp
loop
inc
xor
dec
xchg
xor
test
xchg
arpl
in
mov
insb
dec
dec
xor
aaa
inc
jne
shrb
adc
jl
sbb
add
dec
sar
mov
xchg
adc
jg
adc
ds
imul
fisubrl
push
ret
jb
xlat
xor
imull
js
sbb
add
and
or
test
pop
sub
push
push
mov
xor
mov
test
mov
repz
cmp
sbb
fstps
insl
push
ficoml
inc
aad
push
inc
or
fiadds
add
fsts
inc
cmp
pop
pushf
mov
lds
lahf
adc
std
shlb
cmp
loop
push
icebp
daa
in
inc
lds
jle
cmp
push
out
pusha
push
cmp
fidivl
jge
dec
jbe
imul
push
jo
add
jg
adc
xchg
ljmp
lea
leave
dec
cli
das
mov
push
sbb
es
shlb
dec
jecxz
sbb
jno
fwait
adc
pop
pushf
pushf
outsl
push
adc
pop
mov
mov
shlb
inc
repz
inc
jae
js
shlb
aas
aam
push
sub
mov
rcl
add
jmp
mov
lock
pop
cmpsb
testl
add
cwtl
lds
aad
ss
sub
cmc
mov
addr16
movsl
adc
mov
jno
js
add
adc
dec
movsb
fwait
xor
not
push
lret
or
inc
push
add
shll
or
cltd
cmp
test
ret
jb
pop
movsb
orl
icebp
add
jg
dec
dec
xchg
imul
scas
ficoml
daa
push
ss
stos
push
mov
xlat
call
adc
sub
dec
ret
sar
lahf
mov
push
mov
and
imul
std
add
fldl
mov
jecxz
std
mov
insb
sarb
jbe
gs
dec
into
in
stos
push
adc
addr16
movsb
mov
mov
push
pop
sbb
jp
movsb
mov
mov
ljmp
xchg
lods
int
ret
xor
pop
loope
sub
jae,pt
js
cmpsl
fistps
sub
scas
mov
movsl
fmull
pop
mov
idivb
xchg
leave
shl
push
inc
xchg
pushf
lock
jmp
push
or
sub
jmp
sahf
in
into
cmp
push
mov
mov
mov
mov
arpl
push
bound
aam
clc
mov
adc
or
cmpsl
jp
fnsave
xor
lds
daa
ds
ja
faddl
xor
scas
push
sbb
cmpsb
cmc
mov
mov
das
imul
jo
cld
sbb
pop
jge
sub
push
mulb
adc
je
scas
mov
lock
inc
cmp
cli
push
dec
sub
int
ss
jg
movsb
pop
popa
cwtl
mov
fcoms
pop
add
cwtl
inc
or
ror
movsb
cltd
dec
ret
lods
cmpsb
fisubl
lds
mov
xor
fxch
inc
addb
mov
sub
push
addb
jg
pop
cmp
aam
out
popa
int
call
mov
out
dec
lock
pop
hlt
mov
mov
mov
outsb
repnz
dec
mov
push
mov
cmpb
mov
insl
jge
outsl
aaa
mulb
push
pop
sbb
jb
xchg
loop
test
fnsave
mov
arpl
push
push
mov
movsl
jo
andb
icebp
push
cwtl
adcl
adc
pop
xchg
lret
leave
pop
or
inc
adc
dec
push
shrb
cmp
pop
call
mov
jbe
test
inc
dec
mov
addr16
aam
repnz
mov
ret
insb
rcll
sti
test
ret
pop
out
jp
fld
repz
in
jmp
les
add
cmp
adc
mov
mov
mov
cmc
mov
cmc
adc
iret
inc
or
rcrl
mov
cmp
mov
aas
push
xchg
leave
lea
sbb
jns
lds
cmp
js
push
cmp
adc
lods
sub
fwait
loop
pop
das
push
dec
adc
mov
jg
in
sti
nop
add
shll
mov
push
outsl
xchg
shrb
movsl
push
mov
mov
adc
bound
pop
jae
ja
lock
or
add
mov
fcomps
mov
or
es
inc
mov
popa
jb
lahf
lods
js
dec
out
out
sahf
jb
divl
sarl
inc
enter
xchg
pop
jne
cwtl
sbb
sub
test
sbb
lds
mov
jae
out
movsb
inc
jg
sub
lods
fidivl
es
shlb
sub
sbb
xchg
sub
mov
sub
add
jbe
mov
inc
pop
and
pop
inc
ret
mov
mov
mov
arpl
scas
insb
mov
xchg
jge
jg
push
lcall
jl
cmc
nop
sub
mov
push
cmp
jo
test
or
rorb
ret
inc
outsb
xor
inc
push
inc
in
imul
jg
aas
jo
push
pop
jmp
ret
add
scas
scas
repnz
pop
jns
adc
sarl
push
pop
rcl
mov
test
aaa
sub
xchg
cmp
inc
add
and
in
stos
jg
cmc
add
or
xor
cmpsb
jmp
pop
push
push
stos
mov
mov
addr16
dec
jno
mov
ss
dec
sti
cmp
cmp
mov
mov
lods
cld
dec
dec
inc
pop
in
pop
mov
dec
xchg
outsb
ds
popf
xor
pop
ds
or
addr16
stos
aaa
xor
xlat
dec
jmp
fwait
mov
adc
or
jbe
cmp
jne
dec
pop
pushl
jae
cmp
clc
subb
cmpsb
or
mov
aas
jmp
pop
ret
xchg
mov
cs
xchg
stc
arpl
mov
push
jp
inc
imul
pop
mov
movsl
inc
cld
xchg
ja
push
jne
sbb
js
hlt
psubd
out
dec
xchg
inc
xchg
call
aas
mov
jecxz
imul
dec
jae
loopne
mov
xor
stos
lods
ffree
rol
stos
jno
lods
shll
lock
inc
mov
or
mov
mov
popf
loop
test
pop
gs
cwtl
lcall
fbstp
push
lret
or
lret
add
and
mov
hlt
sahf
int3
dec
iret
pop
ds
xchg
xchg
es
rol
jbe
dec
push
fs
dec
icebp
cli
push
and
mov
mov
pusha
add
jo
push
fnstcw
xchg
imul
movsl
mov
pop
sub
sub
jl
ret
rcr
int
in
xor
std
shrl
push
sub
clc
lcall
in
jl
fcompl
pop
pop
rol
and
gs
cmp
pop
lret
jns
mov
insl
mov
call
lahf
mov
lds
lea
orb
aad
xor
movsb
or
outsb
pop
jbe
cmp
mov
push
aad
inc
jb
xor
add
jne
shll
fdiv
lea
mov
insl
pop
pop
pop
add
ds
jg
fnsave
lahf
push
lret
je
and
inc
fs
sbb
rolb
insb
mov
dec
jne
push
je
jecxz
inc
mov
xor
add
popf
adc
mov
daa
fildl
cmc
fnstcw
pop
sarb
mov
push
inc
addr16
xorl
stos
cmp
xchg
popf
mov
adc
pop
pop
out
daa
stos
mov
cltd
mov
in
insl
out
mov
lock
and
int3
subl
shlb
mov
push
stos
adc
sub
ret
popf
pop
int3
lret
rol
fldt
fildl
pop
dec
xchg
in
pop
out
sbb
loopne
adc
and
inc
into
out
je
les
cmp
aad
cmpsb
sub
sbb
sbb
sub
dec
and
int3
xorl
sub
sub
xor
add
sbb
mov
and
int3
clc
decb
jecxz
in
fimull
fcompl
inc
jns
xchg
jecxz
or
sub
popf
mov
sbb
xchg
sbb
clc
xchg
loopne
loop
and
sub
push
add
sbb
cld
test
xor
pusha
lcall
into
aad
add
in
mov
jbe
dec
clc
mov
pushf
aad
cld
push
pop
dec
dec
cmp
mov
mov
mov
imul
mov
cmpsb
adc
sbb
mov
pop
inc
ljmp
lock
testb
ror
ss
out
fst
dec
xor
mov
xlat
xchg
lcall
push
xor
inc
je
cmp
test
inc
cmc
fs
pusha
fimuls
push
push
mov
stos
sbb
xor
gs
loopne
mov
xchg
aas
outsl
sub
or
jle
fcompp
mov
popf
loop
jb
cld
mov
mov
xlat
enter
jle
jl
xor
jg
adc
mov
xchg
xchg
imul
repz
mov
pushf
sarb
and
xchg
sarb
xchg
mov
push
jge
rcl
inc
pop
mov
mov
mov
and
ds
adc
mov
and
imul
in
push
ret
mov
shr
push
mov
aas
mov
lods
mov
sub
lret
fcmovnu
cwtl
or
xchg
ljmp
push
orl
xchg
push
ss
jecxz
into
or
add
mov
pop
sub
test
xchg
es
mov
fsubp
test
cli
scas
or
xchg
mov
mov
orl
push
inc
jne
sub
fwait
mov
out
adc
or
cmp
push
shlb
pop
inc
mov
je
in
jb
outsb
adc
push
xchg
test
outsl
les
mov
inc
dec
fcmovnb
ja
int3
bound
sbb
jae
sar
sete
pop
mov
decb
push
mov
fsubrs
cmp
pop
xor
jb
xchg
repz
sbb
mov
insl
sti
scas
sub
adc
or
jae
stos
dec
arpl
addr16
fstl
sub
xor
int
sbb
mov
inc
daa
mov
or
outsl
pop
mov
sub
xor
mov
sub
arpl
and
inc
mov
shr
mov
xchg
notl
aas
jne
js
rcrl
mov
mov
xchg
cmp
cmpsb
scas
push
mov
test
pusha
inc
pop
mov
xor
mov
and
and
push
dec
push
outsb
test
insl
xor
and
sub
jo
mov
and
xchg
xchg
or
fs
add
push
sbb
ret
jl
ljmp
movsl
pop
xchg
mov
jb
icebp
jne
jae
sti
mov
adc
cmp
call
popa
sbb
jb
stos
pop
xchg
movsb
cltd
adc
xchg
rclb
ret
aad
pop
scas
jp
mov
mov
mov
cmp
adc
subl
adc
dec
xchg
inc
inc
mov
scas
pop
in
pop
in
xchg
push
jg
std
and
leave
idivb
aad
xchg
loop
aas
test
cltd
fstpl
iret
and
cmc
adc
js
loope
fcompl
push
jne
pop
popa
pop
mov
xchg
cmp
sbb
push
push
pop
popa
sbb
testl
jns
icebp
enter
mov
adc
adc
mov
jge
mov
shll
xchg
pop
movb
mov
push
lds
mov
cs
ja
dec
test
and
cmpl
or
data16
loop
jge
addl
jo
mov
addr16
adc
or
mov
test
in
xor
out
in
icebp
pop
inc
sbb
repz
dec
sbb
add
mov
and
sub
lods
imulb
movsb
fimull
pop
add
pop
aas
repnz
fmulp
pop
imul
inc
arpl
iret
stc
int3
push
daa
mov
test
lds
push
aaa
data16
fbld
bound
jg
cmpsl
jns
jno
dec
mov
nop
stos
sete
jne
add
hlt
xor
std
xor
divb
jae
imul
in
test
or
mov
ret
arpl
inc
and
mov
movsl
mov
jae
push
gs
mov
and
push
sub
and
xchg
xor
data16
xlat
lods
pop
stos
mov
mov
lock
test
adc
mov
fdivr
in
sub
rorl
je
loopne
xchg
and
push
sub
xchg
mov
jns
cli
dec
mov
push
dec
xchg
jb
lock
xor
es
insb
mov
js
jmp
xchg
and
push
xchg
mov
push
fcoms
sbb
mov
nop
insb
jp
repnz
xor
and
dec
lahf
jno
fstps
sub
sbb
cmc
push
inc
mov
push
ja
dec
add
stos
add
rclb
lods
jbe
mov
cmp
pop
adc
imul
movsb
add
out
sub
arpl
xchg
arpl
imul
lds
out
movsb
push
aaa
mov
adc
and
aaa
cmp
loop
jecxz
pop
sbb
jg
push
test
mov
lock
lcall
fisubs
xlat
sbb
aas
push
ret
xor
and
or
sarb
fdivs
xchg
mov
cmpsb
fsubr
inc
mov
nop
lock
or
mov
push
rcrb
and
aam
cmp
test
rolb
les
or
jne
push
push
add
pop
push
pop
cmp
cmc
and
je
jge
push
xchg
cmc
pop
jae
push
rcll
mov
out
jne
dec
xchg
and
jns
je
pop
lea
repz
mov
mov
push
or
dec
scas
imul
mov
mov
mov
sbbb
or
je
shrb
mov
lea
add
shrl
ds
test
aaa
sbb
adc
mov
arpl
out
mov
call
mov
xor
mov
cmpsl
inc
cmp
push
aas
sbb
inc
pop
shll
or
mov
shr
lret
mov
jns
cs
fwait
or
leave
rcrb
push
sub
movsb
lea
push
sub
imul
push
add
in
mov
outsl
jno
aaa
les
jne
mov
stos
gs
and
xchg
xchg
mov
clc
cli
push
dec
fucom
dec
dec
sbbb
mov
adc
shrb
push
dec
shll
xor
or
adc
lahf
adc
mov
test
jns
and
push
sub
sbb
stos
out
adc
std
inc
xchg
cltd
fwait
repz
jae
scas
mov
mov
fdivrl
sub
insb
mov
jne
enter
cli
push
or
push
mov
mov
jne
pop
cmp
test
adcb
orb
xorb
loopne
adc
mov
pushf
and
ret
add
cmp
sub
mov
fisubrl
cmc
or
push
mov
mov
push
outsl
mov
fildl
jns
hlt
adc
pop
add
push
js
jbe
addr16
xchg
pop
outsl
cmp
or
fisttpll
pop
les
js
enter
push
aam
aad
push
pop
jne
rolb
dec
pop
sbb
fwait
mov
ss
loop
bound
dec
pushf
pusha
ja
fistpl
pop
mov
fimuls
adc
add
push
leave
mov
pushl
repz
inc
sti
in
adc
aaa
dec
fimull
lahf
cmp
lahf
fcomip
cmp
mov
dec
mov
repz
loopne
fwait
test
pop
loopne
sub
cmp
add
stos
mov
outsb
add
mov
jecxz
push
pop
xchg
add
pop
ret
pop
jnp
movsb
lcall
js
sub
movsb
push
cmp
test
xor
pop
sub
cld
add
jl
xchg
jns
test
enter
fldl
dec
add
into
popf
in
insl
fnstcw
xchg
sub
mov
add
pop
pop
cmp
test
push
popf
mov
sbb
mov
out
pop
or
mov
loope
sub
arpl
pop
aaa
dec
xchg
decl
xor
adc
inc
pusha
cmp
les
aaa
mov
pop
inc
popa
dec
xchg
xor
fsubl
inc
rcrl
dec
out
lret
in
add
adc
repz
and
mov
insl
add
std
mov
push
pop
or
in
pop
sbb
push
dec
in
int3
mov
js
xchg
push
cltd
push
mov
xor
and
filds
mov
cs
adc
mov
mov
addb
addl
adc
mov
adc
jnp
lret
lret
xor
test
lods
jb
orl
popa
pop
jbe
insl
xor
fnsave
mov
xor
fbstp
sub
scas
push
les
adc
pusha
inc
lock
or
push
adcl
addb
test
iret
mov
addr16
sti
inc
cmp
and
push
adc
popf
jns
lods
aad
cmp
call
inc
lea
nop
add
pop
int3
xchg
mov
add
inc
xchg
shrb
jp
sbb
mov
sbb
adcb
mov
push
enter
loopne
push
scas
loope
push
add
icebp
lcall
inc
jle
mov
repnz
mov
xor
push
sbb
and
mov
mov
pop
repz
rol
fdivrs
pop
pop
aas
xchg
out
imul
inc
pop
and
inc
add
adc
outsb
stos
lahf
sub
cmp
sbb
xor
sbb
cld
or
jno
cmpl
pop
jmp
loop
lock
sbb
or
sbb
gs
mov
mov
addr16
push
or
int3
sub
pop
cmpsb
and
data16
out
out
inc
ja
xor
in
mov
popl
in
push
shlb
pop
lock
out
test
aaa
mov
cmp
les
mov
pop
lcall
inc
push
imul
test
xchg
mov
ret
or
mov
iret
cmc
iret
lock
pop
gs
sub
push
jne
push
xor
cmp
mov
inc
dec
xor
jo
inc
pop
test
lahf
jge
int
pop
leave
mov
push
rorl
loop
cmpsb
or
insb
xorb
mov
loope
insl
inc
imul
sahf
in
mull
loop
repz
xor
sub
sarw
or
shrl
clc
outsl
jmp
adc
mov
stos
decl
and
pop
jmp
lahf
and
pushl
pop
movsb
mov
add
sbbb
in
adcl
adc
subb
sbb
cltd
aaa
mov
popf
or
xor
or
ljmp
das
inc
xor
cmp
out
add
xchg
dec
rclb
das
xchg
mov
filds
loop
loope
aaa
lahf
jmp
and
xchg
loopne
cmp
cmc
negb
push
cwtl
dec
sbb
cmp
add
movsl
pop
std
sub
test
cmpsb
dec
dec
subl
push
outsl
inc
mov
cmp
shlb
scas
xchg
cs
jle
pusha
inc
aas
outsl
and
mov
enter
mulb
jbe
inc
nop
lods
xchg
mov
mov
pop
push
pusha
dec
mov
add
xchg
and
jno
xchg
loope
enter
mov
jl
ljmp
std
or
pop
sbb
push
dec
pop
dec
inc
addb
and
mov
jno
out
pop
sub
xlat
xor
mov
lods
jb
mov
sbb
jecxz
mov
addb
pop
lock
push
inc
jmp
or
gs
pop
out
jne
adc
loopne
outsb
test
and
inc
fldt
lds
mov
aas
outsl
loop
sarl
xor
mov
sub
lods
roll
cli
popa
aam
push
pop
or
in
jl
cld
jae
punpckhbw
jmp
xchg
mov
mov
rcll
rcrl
mov
subl
or
ret
cmp
or
mov
push
addr16
xchg
mov
pop
jb
xor
lds
jns
shrl
sbb
add
jns
jo
inc
jb
add
and
and
addr16
jb
pop
les
in
mov
cmp
aad
fs
adc
push
and
fxch
pop
std
jmp
sbb
cmp
js
ss
fstl
mov
lcall
ss
mov
mov
cmp
xor
iret
mov
dec
stos
xor
mov
mov
mov
push
jp
cmpsb
lahf
sub
jo
loop
sub
cs
mov
jbe
and
stc
fisttpl
int3
add
cltd
insb
roll
pop
push
pop
pop
outsb
xchg
xchg
xchg
add
fstpl
xchg
rol
mov
add
lcall
cmc
daa
hlt
sbb
xor
pop
pop
jp
mulb
lahf
jo
lods
aaa
jg
dec
int3
xor
popa
push
jbe
or
dec
and
jl
cmp
xchg
lret
push
arpl
loope
lods
push
movsl
popf
xchg
outsl
sbb
fisubs
shll
fadds
xor
fstps
xchg
push
push
data16
push
ja
ja
lea
js
pop
and
cmp
inc
adc
and
inc
cmp
pop
and
das
push
pop
test
inc
lods
mov
in
lods
sub
sub
js
insl
mov
jle
dec
and
fidivrl
pop
in
add
inc
je
pop
lahf
movsb
xor
cmpsl
mov
in
enter
ret
mov
sarb
xchg
enter
pop
rorb
pop
jbe
sahf
push
lods
lcall
mov
imul
jl
test
xchg
mov
ja
bound
xor
mov
mov
orb
inc
popa
mov
dec
dec
mov
fmul
add
int3
inc
dec
pop
dec
aam
cwtl
mov
sub
mov
test
sbbb
jns
stos
push
adc
cmp
out
fs
ljmp
pop
stos
dec
addr16
sbb
cmpsb
jns
sub
pop
in
xor
mov
iret
dec
sbb
outsb
inc
adc
pop
js
mov
movsl
cmpsb
ss
xor
lcall
roll
fmuls
scas
inc
pop
mov
inc
insb
xchg
sbb
pusha
and
mov
repnz
js
pusha
jle
push
mov
fs
rcrb
aad
cwtl
xor
cwtl
je
test
and
stc
sahf
mov
gs
adc
pop
fcmovnb
movsl
pop
lods
cmp
sahf
dec
loopne
inc
bound
dec
push
adc
and
pcmpeqw
stc
inc
xchg
cmpsl
mov
ja
push
insl
jg
mov
sbb
adc
or
out
inc
clc
jle
popa
mov
mov
insb
xor
insl
aad
sbb
lret
mov
xlat
pop
loope
xchg
aad
test
fmuls
jp
sub
ffreep
jns
nop
jp
pop
aas
ds
push
or
cmp
imul
arpl
push
ss
jmp
fs
andl
and
sahf
shl
inc
mov
xchg
push
adc
inc
cmpsl
add
mov
jmp
mov
pop
sbb
das
insb
repnz
or
xorb
xorl
and
push
arpl
dec
fsubs
in
mov
mov
mov
fwait
ja
enter
and
pop
push
mov
mov
jne
dec
movsl
mov
iret
xor
dec
out
icebp
mov
fisubrs
lods
bound
stos
ljmp
xor
scas
addb
pop
adcb
mov
je
pop
fstpt
inc
xchg
adc
or
dec
out
pushf
pop
ret
pushf
ljmp
andl
push
fs
jne
dec
dec
jbe
jae
push
leave
add
inc
mov
mov
sbb
pusha
cld
fists
fsubl
pop
sub
jle
lcall
out
lods
lcall
fdivl
push
insl
in
mov
out
mov
push
adc
pop
sub
mov
jecxz
mov
adc
or
imul
mov
push
dec
and
es
jne
popf
cld
lds
xchg
in
pop
in
jne
test
xlat
leave
mov
or
inc
mov
cmc
mov
sub
push
imulb
push
adc
test
das
mov
shrl
into
mov
push
jbe
movl
or
mov
push
sbb
inc
daa
stos
pop
mov
popa
inc
adc
xor
push
in
bound
sub
sub
or
pop
push
subl
mov
and
inc
js
and
fs
bound
pop
push
mov
sub
mov
cmp
pop
push
nop
adc
sbb
mov
movsb
xor
push
or
ja
mov
mov
push
cld
sub
imul
hlt
imul
mov
lret
add
add
loopne
pop
xchg
jge
fbstp
xor
add
cmp
sbb
mov
fstp
repz
push
or
jg
mov
inc
jmp
repnz
outsb
push
pop
xchg
sahf
fs
sbbl
call
and
jl
mov
into
inc
mov
stc
xchg
dec
adc
scas
pop
push
out
add
test
insb
add
or
cmp
sti
pop
fidivrl
fnstsw
sub
add
mov
lahf
xchg
mov
jb
ror
or
and
jl
inc
cmpsl
jo
or
fisubs
sub
mov
les
cltd
sub
jg
gs
lds
out
inc
pop
inc
loope
rcr
sbb
xor
mov
negb
lock
popa
mov
inc
xchg
popa
imul
sbb
push
and
jae
push
stc
ret
les
push
jge
mov
push
stc
cmp
data16
lds
push
inc
scas
in
xchg
and
cmc
test
sbb
dec
jecxz
ja
fimull
rcl
jnp
or
jl
lcall
mov
push
add
mov
in
or
inc
pushf
call
stos
out
sbb
in
daa
mov
add
push
sbb
xchg
andl
jo
inc
int
pop
in
std
xor
pop
add
inc
orl
cmpb
fldt
dec
jnp
and
xchg
test
fwait
dec
mov
in
sahf
es
sbb
ret
xchg
and
lock
xchg
inc
arpl
jle
out
les
jnp
test
stos
cli
pop
icebp
dec
in
call
fsts
cmc
imul
push
mov
mov
adc
data16
pop
jp
xlat
add
cmp
aaa
mov
jge
cmc
mov
cmp
jae
scas
data16
pop
lock
loop
out
lret
inc
fmull
lods
xor
add
jge
mov
sbb
or
cmp
leave
cmc
dec
sar
xchg
cs
and
insl
sbb
pop
dec
adc
out
sub
sub
push
je
imul
les
push
mov
out
outsl
aam
clc
dec
inc
push
subl
out
je
popf
xor
jmp
cwtl
inc
push
out
std
pop
add
aaa
das
testb
movsl
cmpxchg
push
addr16
aas
mov
sbb
adc
push
cs
rorb
outsl
push
jns
jg
test
mov
jb
das
stc
lret
fwait
daa
int
or
sub
or
inc
fldcw
ret
cmp
or
sub
or
pop
add
jecxz
mov
xor
jge
fbstp
int
setns
lock
addl
sbb
push
xchg
and
ja
mov
dec
and
decl
inc
xchg
loopne
pop
cmp
enter
les
clc
pop
mov
pop
call
mov
inc
pop
fnstsw
shlb
push
sbb
sbb
enter
add
push
mov
lods
or
or
cmp
notb
test
pop
test
cmp
xor
push
inc
mov
testl
int
into
mov
js
pause
test
pop
loopne
xor
fists
daa
call
jne
fiadds
push
cmp
pop
push
push
lea
xor
cmc
iret
lods
dec
cmpsb
test
in
mov
lock
mov
cmpsb
or
sbb
es
hlt
jge
pop
jmp
scas
js
xor
adc
sbb
xor
xchg
xchg
in
mov
mov
ficoms
mov
popf
push
jg
addr16
in
push
dec
leave
in
sbb
loop
addr16
loope
xor
stos
fstl
jecxz
imul
xor
jl
fcom
out
in
mov
cmpsb
inc
les
or
filds
out
hlt
int3
jne
fwait
mov
sub
int3
xchg
test
cmp
or
sbb
mov
cmc
data16
mov
pop
fsubrs
adc
rcll
push
xor
int
lods
push
test
stos
sti
xchg
leave
imul
arpl
mov
seta
xchg
sub
call
xlat
bound
mov
xor
mov
mov
fs
cmp
cmp
fdiv
scas
aas
jne
rolb
mov
cwtl
mov
dec
ja
cmp
inc
loope
stos
cmp
cmpsl
out
movsl
lods
xchg
nop
push
loopne
jno
leave
cltd
mov
xor
enter
dec
add
pop
sub
aad
aad
sub
push
or
nop
adc
mov
pop
nop
or
pop
inc
or
push
jbe
inc
adc
jmp
scas
mov
ds
inc
xchg
iret
or
out
lods
adc
out
push
mov
push
lds
sbb
fcmovbe
insl
mov
push
outsb
test
push
lods
mov
daa
cmp
popf
loope
add
pusha
out
int
mov
cmc
addr16
leave
lahf
mov
orb
or
imul
inc
sahf
push
xchg
mov
mov
xchg
mov
imul
mov
sbb
mov
aaa
mov
pushf
dec
loopne
mov
icebp
and
icebp
push
sbb
push
into
popl
jbe
leave
orb
adcl
mov
lods
or
mov
jbe
rcrl
fimull
leave
psraw
add
push
inc
rorb
mov
or
gs
jno
and
out
xchg
cmp
movsb
jnp
arpl
or
sub
jge
and
arpl
pop
lds
xchg
jo
mov
daa
mov
ljmp
mov
out
fldcw
pop
je
fsubs
sahf
inc
out
xor
jno
mov
lret
xchg
fsubl
mov
or
outsb
pushf
mov
dec
mov
dec
push
or
cld
insb
and
out
cmp
sbb
jns
cmp
jl
hlt
orb
seto
xor
push
repnz
inc
sbb
and
ja
hlt
pop
adcl
ja
imull
jle
cmp
xchg
test
jae
ljmp
pop
and
mov
and
push
btsl
and
mov
test
outsb
jo
outsl
std
jmp
jns
push
add
sbb
mov
subb
shlb
mov
cmp
xchg
sub
out
mov
fmulp
add
iret
add
push
xchg
dec
cs
adc
nop
push
push
mov
rorl
sub
icebp
pusha
aaa
scas
push
test
shll
insb
cmpsl
or
sub
xor
inc
ja
fisubrl
and
mov
jno
cmp
adc
mov
jmp
jno
xor
sbb
icebp
xchg
or
xor
dec
jmp
call
addr16
or
or
leave
call
icebp
pushf
int3
inc
outsl
repz
mov
push
add
stos
bound
mov
xchg
mov
cmc
test
inc
mov
jge
gs
rol
ret
and
ljmp
jp
dec
or
in
jge
mov
es
adc
jecxz
frstors
out
xor
inc
adc
fs
xchg
mov
or
adc
push
movsb
or
or
sub
sub
mov
sbb
adc
push
je
pop
ljmp
dec
jnp
mov
hlt
sub
mov
lret
cwtl
pop
out
dec
cmp
jmp
jle
add
sbb
or
ret
loop
jbe
movsl
mov
cmpsb
movsb
je
filds
repnz
mov
jb
das
insb
inc
shll
imul
cmp
xor
cmp
leave
movl
jmp
test
cmp
add
outsl
test
stc
jmp
dec
dec
popf
add
fcmovu
fdivrl
ja
aam
push
or
les
mulb
or
sub
nop
sbb
push
push
out
mov
cmp
in
xor
leave
fdivl
inc
dec
sbb
cmp
scas
pop
getsec
fnstcw
das
pop
test
fisubl
movsb
or
dec
mov
xchg
bound
into
fsubrl
jnp
lcall
gs
push
mov
loopne
mov
loopne
sbb
cmpsb
int
jno
loopne,pt
dec
cmp
das
sub
in
jnp
cmp
cli
lret
push
inc
jle
cmp
je
sqrtps
stos
xor
cmc
popf
icebp
sbb
loop
push
les
pop
or
jo
repnz
scas
jmp
fcompp
jecxz
clc
insb
or
lea
jg
lret
add
and
xchg
adc
mov
popa
popf
jae
subb
fisubl
ficompl
movsl
mov
adcl
sub
adc
sbb
push
les
hlt
cmp
lds
sub
jno
cmp
adc
movsl
aad
loope
negb
cmp
pop
repz
cmc
xor
push
pushf
stos
in
shl
stos
fbstp
adc
mov
jmp
ret
adc
xchg
enter
add
data16
mov
mov
jns
cmp
orb
arpl
push
pop
aas
cmp
push
jp
hlt
clc
mov
or
and
jle
adc
jmp
inc
push
imul
xchg
ljmp
push
jne
scas
outsb
pop
mov
jge
mov
sbb
xor
rcrb
mov
test
adc
sbb
je
and
sti
xchg
shll
pop
es
mov
lods
leave
out
in
mov
mov
fnstenv
mov
jbe
push
stos
lods
aas
or
cmp
sbb
push
or
sub
add
fcmovne
arpl
add
xor
mov
push
lret
pop
dec
mov
stos
xchg
adc
test
and
movsl
repnz
stos
mov
push
jge
jo
fsts
arpl
ret
push
fdivl
sub
and
lcall
push
xlat
or
or
cltd
cmp
lock
inc
fimull
or
sub
cs
jno
mov
inc
fdivrl
dec
jnp
mov
inc
sub
xor
mov
jecxz
mov
mov
or
jl
ficoms
sarb
flds
adc
dec
jg
cmpxchg
mov
mov
or
repnz
int3
daa
movsb
imul
xor
push
lds
cmp
push
add
adc
cmp
clc
dec
sarb
jno
sbb
cmp
scas
das
test
pop
add
stos
add
mov
fcom
ss
mov
sbb
daa
pop
jecxz
adc
jns
lret
out
andb
ret
cmp
inc
cmc
xchg
mov
mov
inc
mov
in
mov
mov
mov
mov
cld
bound
xchg
or
loope
jno
test
shrl
jb
pop
mov
shlb
test
inc
in
aam
xor
fsubrl
test
push
enter
repnz
push
adc
test
jg
sarl
mov
pop
adc
ret
out
inc
sarl
pop
mov
mov
or
xchg
xchg
and
js
out
aas
push
dec
in
pop
cli
mov
rcll
inc
xchg
pop
aas
lods
das
cmp
int3
rorb
pop
and
stos
in
dec
sub
js
pop
mov
push
fwait
repz
test
adc
loopne
enter
loop
jecxz
arpl
fmul
mov
sbb
xor
mov
enter
loop
push
sbb
and
fcompp
sahf
lods
mov
xchg
xorl
icebp
xchg
inc
xchg
mov
aam
outsl
scas
adc
push
lcall
pushf
ss
xor
lret
iret
lods
mov
adc
stos
jge
jp
adc
hlt
mov
sbb
lock
mov
mov
sub
cmpsl
and
push
xor
pop
pop
or
sbb
cmpsb
fsubl
inc
out
push
jo
pop
fbld
rcrl
and
stos
nop
cmp
inc
push
pop
xchg
push
mov
sbb
pop
cld
stos
xor
inc
cmp
insl
fimuls
jns
xchg
imul
sub
neg
inc
jg
jb
imul
xlat
mov
jmp
aas
and
pop
data16
mov
lret
xchg
in
pop
sub
aaa
scas
xchg
dec
push
shrl
xor
aaa
gs
je
jge
loopne
addr16
in
pop
ucomiss
sbb
stc
dec
loop
scas
pop
dec
fs
addr16
cltd
dec
mov
ds
mov
jo
insl
cmp
and
aam
idivl
or
push
ds
sub
aas
lods
cmp
cmpsb
dec
cmp
lcall
cs
sub
dec
adc
psrlw
xchg
mov
push
cmp
and
pop
mov
int3
or
aas
mov
sbbb
pop
add
mov
imul
push
cmp
js
mov
dec
adc
and
or
ss
les
stos
out
dec
testb
push
into
aad
test
ret
cld
ja
mov
cmp
sbb
push
cmp
xchg
pop
movsl
test
sbb
inc
cs
adc
pop
adc
fwait
or
xchg
mov
xor
icebp
cld
and
out
push
stc
std
jno
xchg
lods
enter
dec
push
dec
aas
push
rolb
out
xchg
cli
sti
ficompl
inc
rorl
leave
mov
dec
push
enter
mov
sbb
inc
sbb
dec
sub
scas
sbb
xor
test
test
shlb
fneni(8087
movsl
push
int3
jno
frstor
ret
in
push
and
js
les
pop
pop
xor
lcall
mov
or
inc
sub
lret
aas
sahf
dec
icebp
jl
sarl
movsl
xchg
mov
lods
add
ds
test
jmp
int
mov
ljmp
jbe
mov
adc
sub
pop
jge
xchg
mov
ja
mov
scas
andl
outsl
jbe
mov
pop
test
sub
sub
adc
xchg
jno
mov
and
notb
mov
hlt
roll
dec
pop
xchg
shlb
jnp
gs
sub
aam
in
call
pop
push
in
cld
icebp
pop
xchg
xchg
add
jb
dec
mov
xor
decb
or
sahf
stc
enter
fs
outsl
sub
aaa
inc
scas
insl
outsb
jmp
mov
test
and
pop
push
pop
popa
movsl
rolb
or
clc
sbb
outsb
jge
and
imul
imull
mov
push
addb
mov
adc
mov
mov
fisubs
jecxz
push
sbb
jge
push
xchg
es
inc
js
arpl
outsb
mov
imul
dec
shrl
cmp
jns
lea
mov
js
xor
shll
ja
jno
popa
movsb
mov
jp
add
pusha
push
jecxz
icebp
and
mov
xchg
outsl
lock
push
sub
jno
cli
jge
icebp
add
mov
mov
and
ret
jle
jge
daa
stos
ljmp
cwtl
inc
mov
sub
xor
inc
out
push
xchg
clc
shl
jns
or
or
sbb
outsb
xchg
push
testb
pop
xchg
mov
pusha
idivl
in
mov
mov
xchg
xor
scas
push
repz
and
mov
imulb
int
lods
inc
pusha
sbb
fildll
and
lahf
sbb
mov
hlt
pop
push
mov
roll
xchg
rorb
ja
cwtl
dec
mov
sbb
fwait
inc
outsl
cmpsl
pop
stc
and
aas
bound
or
xchg
mov
fs
jmp
cmp
jo
je
gs
mov
xor
test
rorb
loope
sub
imul
in
sbbb
add
adc
test
mov
jns
jbe,pt
stc
sub
popa
dec
sub
lods
out
inc
ljmp
icebp
in
int
out
aad
repz
sub
xchg
filds
fistpl
mov
cmp
cmp
adc
push
adc
shlb
loopne
imul
cmp
fnstcw
lods
and
inc
in
pushf
cmp
arpl
xor
jl
cli
cli
arpl
cwtl
xor
jo
movsb
mov
mov
cmc
or
cmc
push
mov
addl
insl
roll
fistpl
pushl
xlat
push
sub
stc
out
or
loop
sbb
mov
mov
jns
lods
push
enter
push
cmpsl
addl
cmovp
rcrb
jle
sbb
jbe
popa
aas
lret
test
scas
mov
add
xchg
mov
lahf
mov
mov
sbb
fs
in
imul
rcl
std
gs
fdivrs
imul
mov
cld
mov
aaa
pop
or
inc
inc
mov
mov
cmp
pop
sbb
leave
sub
shrl
mov
pop
leave
cmpsl
and
or
int3
mov
add
sub
push
sbb
xor
call
pop
add
mov
repz
sbb
push
mov
mov
fcomps
sub
mov
xchg
mov
add
in
ds
outsl
dec
jb
mov
cs
or
add
outsb
mov
jge
ja
fnstsw
pop
xchg
push
cmp
in
dec
dec
pop
mov
xchg
popf
into
dec
jnp
ds
xor
shrl
mov
mov
addb
sbb
lcall
pop
decb
xor
and
cmpsb
fnstcw
rolb
negl
movsb
fwait
adc
rcll
jp
lret
cltd
adc
xchg
cmc
dec
inc
clc
bound
pop
lea
outsb
leave
mov
daa
scas
shrl
dec
mov
les
lea
mov
sbb
es
fisttps
lods
arpl
lret
cld
lcall
dec
movsl
xchg
pop
jnp
iret
flds
dec
fisubrs
and
cwtl
pushf
outsl
daa
xor
sbb
lock
out
orl
push
mov
sbb
adc
ja
xor
sub
in
sbb
in
std
movsb
mov
leave
das
addl
and
push
lods
testl
gs
jle
iret
mov
add
xchg
add
aas
cmp
jg
inc
xchg
xchg
loop
fucomi
and
rcl
mov
sbb
mov
ss
push
fwait
mov
jge
mov
mov
imul
psubusw
push
hlt
xchg
xchg
mov
pushf
fwait
dec
jo
pop
jns
adc
lret
sbb
bound
fimuls
stc
inc
dec
xor
call
jb
mov
jmp
loope
jmp
jno
sub
cwtl
xchg
mov
jae
add
cmp
cmc
and
rcll
mov
push
mov
jno
rcll
pop
push
test
dec
idivb
int
out
stos
loopne
fisubrs
inc
test
and
xchg
faddl
mov
cmp
jge
daa
aad
imulb
loope
pop
xor
pop
jge
jae
jbe
pop
mov
dec
clc
lds
and
lahf
adc
mov
add
movsl
mov
lods
scas
dec
shrl
sub
mov
sahf
je
pop
fwait
mov
outsl
das
mov
or
out
sbb
nop
pop
jle
leave
xor
adc
mov
loope
jae
and
cmp
mov
insl
movsl
push
jo
dec
lahf
fiaddl
insl
aam
mov
push
dec
fsubrs
out
into
loopne
mov
ds
jecxz
and
pop
inc
add
stos
xor
outsb
cmp
test
lahf
inc
loopne
mov
fidivrl
jl
mov
or
stc
xchg
cmp
ficompl
mov
lret
stos
add
cli
stc
lret
cs
stos
jp
insb
mov
xchg
repnz
pop
pop
mov
popf
adc
inc
and
push
mov
shrl
fnstsw
xchg
cli
int3
imul
push
xor
pusha
fists
sti
jns
sub
mov
sbb
push
les
cmp
je
movl
mov
add
hlt
lods
xor
cmp
stc
lcall
add
push
fs
sbb
mov
inc
xor
subb
push
imul
bound
lret
inc
in
pop
fsub
pushf
in
xlat
out
push
stos
int
inc
adc
sti
xchg
dec
sbb
sub
cmpsb
les
movsb
adc
cli
out
sbb
lock
mov
jnp
pop
cmp
jb
in
pop
xor
int3
mov
scas
jne
movsb
mov
mov
adc
insl
mov
js
jbe
fidivl
push
pusha
add
mov
adc
mov
ret
jnp
xor
stos
mov
pop
and
stos
cmc
js
dec
sti
xchg
or
mov
je
adc
push
pop
xchg
and
dec
mov
nop
ljmp
das
and
in
and
ret
out
dec
test
test
adc
cmpsb
icebp
ficomps
lcall
pushl
pop
and
fsubs
cmpsb
push
xor
into
dec
jo
push
push
push
jle
push
mov
and
pusha
cmp
sbb
sub
repz
dec
cmp
icebp
das
cwtl
mov
nop
icebp
sbb
fdivs
sub
out
mov
pop
fs
lods
ficoml
push
nop
ss
jo
pop
dec
scas
cltd
fiaddl
mov
lock
gs
cmpsl
pcmpgtw
sti
or
pop
test
or
xchg
scas
and
dec
inc
sub
add
loope
cmp
push
sbb
out
push
mov
fldcw
jns
loopne
push
arpl
aas
lahf
lods
cwtl
xor
cmp
mov
mov
cmc
inc
pusha
cltd
test
mov
lods
pop
inc
cld
or
push
mov
test
call
aam
arpl
dec
jns
push
fsubs
mov
mov
into
movsl
in
aas
pop
mov
pop
add
adc
adc
inc
add
imul
jmp
add
dec
outsb
mov
cmc
sub
out
mov
loopne
push
xchg
sub
pop
pusha
and
push
or
stos
ljmp
enter
xchg
sub
aas
push
mov
das
movl
enter
adc
popf
imul
inc
mov
jno
xchg
push
cmp
push
sbb
cmpsl
xor
in
fnsave
or
inc
test
push
push
or
mov
fbstp
xchg
xor
pop
jle
push
mov
in
xchg
dec
mov
xchg
jnp
in
add
lret
push
xchg
mov
fs
std
into
pop
fdivr
push
shrl
or
inc
cli
idiv
jbe
outsl
inc
hlt
lret
ljmp
inc
test
int
jb
roll
out
icebp
add
bound
fidivrl
inc
push
mov
test
fidivs
sarl
xchg
out
cmc
fiadds
sbb
imul
mov
fmulp
jbe
inc
cli
add
adc
lret
out
adcb
mov
cmp
mov
dec
pop
push
lods
dec
test
xchg
push
ds
xchg
sti
or
daa
push
xchg
stos
stc
aas
cmp
xchg
incb
mov
sbb
imul
fcmovnu
mov
mov
mov
cmp
movsl
popf
pop
sbb
push
push
jp
adc
push
js
dec
mov
or
pop
out
push
cmp
js
sub
or
ljmp
icebp
fcos
outsl
pusha
push
shl
paddsw
adc
rorl
mov
es
ret
sub
pop
mov
cli
enter
push
enter
pop
int
int3
xor
mov
cs
int3
idivl
adc
sub
aam
andb
dec
mov
mov
add
xor
push
jno
icebp
loopne
pop
lret
mov
aaa
lods
ficompl
loop
mov
pop
adc
xor
shl
push
and
pop
rorl
test
xor
jno
scas
test
icebp
dec
or
mov
lret
test
ja
fisubrl
loope
push
xchg
sbb
or
out
jno
jp
outsl
or
les
xor
loope
mov
js
and
data16
push
jmp
outsb
push
daa
les
sub
mov
pop
aaa
jge
inc
mov
and
xor
and
enter
sahf
xchg
fs
mov
sub
mov
pop
fcomi
adc
xchg
out
icebp
xchg
test
xchg
add
cmpb
pop
mov
sbb
out
jmp
mov
ret
enter
cs
ss
cmp
sub
call
push
in
push
in
popa
and
cmpsb
sub
aas
cmpb
aad
pushf
aas
call
test
dec
int
lcall
in
and
cmp
gs
xchg
push
cmc
cwtl
push
lret
jns
inc
xchg
push
mov
push
das
push
add
enter
js
movsb
mov
add
movsb
adc
in
test
mov
subl
rep
out
inc
stos
daa
gs
add
inc
lea
and
mov
pop
stc
mov
insb
jmp
mov
dec
lret
out
aaa
or
inc
jmp
and
xchg
push
aam
sbb
sbb
les
adc
mov
les
sti
outsl
ret
adc
test
pcmpeqd
add
jle
dec
xchg
mov
inc
dec
jbe
lahf
loope
mov
iret
adc
loop
mov
and
imul
cmp
aas
imul
mov
and
aaa
rcll
dec
pop
lds
jae
push
pop
dec
mov
cltd
mov
frndint
iret
fimuls
sbb
add
jmp
push
jmp
mov
dec
jmp
fnstcw
sbb
js
sbb
out
inc
ss
out
adc
mov
jne
into
lods
mov
mov
xor
outsb
test
adc
jns
repz
je
push
sub
data16
stos
inc
xchg
add
push
inc
inc
lcall
sbb
xor
xchg
xor
cmpsb
cltd
xchg
in
aas
xor
push
stos
push
push
pop
fs
dec
xlat
stc
adc
xchg
adc
mov
int3
mov
andl
inc
test
xor
pop
sub
jecxz
ss
and
mov
sar
jno
mov
jb
push
test
shll
push
inc
incb
jmp
mov
sbb
sbb
iret
push
sub
std
and
xor
sbb
fistl
out
mov
jnp,pt
mov
ficomps
and
lods
insb
mov
push
shrl
jb
into
inc
push
push
cmpb
push
test
xchg
mov
add
int3
jne
jno
subl
adc
jns
fstpl
lret
mov
or
xor
and
mov
fs
lahf
iret
sub
jae
js
cmc
push
es
aas
and
mov
imul
add
xchg
pop
mov
and
test
arpl
sub
fcompl
sub
mov
jnp
sti
cld
mov
adc
js
test
test
or
push
pop
xchg
fildll
xchg
mov
orb
mov
mov
mov
sarb
xchg
sub
dec
add
pop
mov
clc
and
and
mov
orl
and
xchg
inc
xor
fs
outsb
sub
dec
cmp
into
sti
xor
or
add
dec
sbb
pop
push
test
cmp
ljmp
xchg
inc
ficoms
push
add
lcall
pop
pop
and
xorl
out
jo
lret
leave
loopne
popf
sbb
aaa
xchg
and
rcrb
int
pop
ljmp
icebp
inc
pop
sub
test
mov
cmpsl
pop
outsb
stos
mov
xlat
mov
and
sub
cld
cltd
push
hlt
imul
or
dec
or
into
imul
dec
mov
mov
lea
and
mov
out
lret
and
xchg
gs
iret
dec
movsl
mov
test
push
mov
and
mov
adcb
add
push
lock
imul
subb
push
mov
push
popf
cmp
xor
test
adc
push
mov
or
xor
push
mov
jmp
scas
andl
xor
test
mov
in
cmpsl
fnstcw
push
je
xchg
jns
fistps
push
add
fisttpl
cld
or
mov
pop
jl
sub
and
jge
xor
jmp
cltd
invd
imul
aas
scas
xchg
aam
pop
cmp
stos
cld
pusha
test
inc
rcrb
cmp
mov
mov
jae
inc
mov
xchg
adc
mov
xchg
inc
xchg
out
add
pop
mov
pop
pop
outsb
add
jge
clc
add
aas
xor
sbb
movsb
rcrl
mov
aas
xchg
into
int3
push
push
pop
dec
call
pop
loope
popf
repnz
sbb
out
cmpsb
repz
sbb
inc
out
add
js
imul
and
or
push
lcall
jmp
and
popf
jmp
mov
xor
sub
rcr
and
imul
lods
sbb
xchg
pop
push
pop
leave
xchg
sarl
fimull
mov
cmpsl
out
js
add
cmpsl
mov
dec
add
ss
xor
call
jnp
mov
fiadds
out
inc
inc
adc
inc
dec
xchg
push
mov
in
ja
mov
repz
andb
out
xchg
mov
xchg
pop
out
add
pop
in
cmpb
icebp
xor
xor
jge
mov
scas
sbb
mov
and
in
adc
pop
sbb
pop
add
jp
mov
shlb
add
les
stos
scas
inc
out
mov
loope
sti
jge
cmp
pop
dec
sub
imul
js
jmp
dec
sbb
and
cli
pop
jle
shll
jno
push
arpl
ja
les
es
cmp
mov
sub
cmp
stc
in
add
loop
jmp
jb
loopne
iret
xchg
stc
mov
dec
mov
test
pop
sbb
pop
rorl
pusha
daa
add
add
jecxz
push
je
inc
xor
ss
mov
pop
or
idiv
or
jmp
adc
sti
mov
iret
fisttps
push
movsb
call
fwait
inc
loopne
inc
cmovo
pop
pushf
adc
or
push
add
imul
lcall
ljmp
cmp
push
mov
inc
and
aas
and
sub
clc
inc
popa
lods
adcb
fldcw
ss
or
cmp
subb
pusha
ds
xchg
in
sbb
dec
mov
add
or
aas
and
in
jmp
dec
adc
outsb
in
insl
outsb
sbb
out
scas
lods
jne
adc
gs
repnz
jmp
loop
gs
inc
add
outsl
cmp
add
jge
repz
gs
insb
mov
lea
sub
shrl
xor
fidivrl
negl
and
fsubrl
les
pusha
pop
pushf
inc
incl
adc
push
mov
pop
jge
push
clc
fstl
loopne
adc
shl
sbb
sbb
and
lods
fiaddl
jb
xchg
fwait
sub
imul
hlt
orl
inc
cmpsl
mov
sbbl
xchg
test
cli
je
xchg
cmp
pop
out
js
add
aad
rcrb
es
lret
mov
movb
inc
mov
inc
int3
test
and
sbbb
and
pop
push
les
sub
lahf
stos
subb
jnp
stc
mov
out
ret
in
push
movsb
push
insb
or
inc
je,pt
in
xchg
and
mov
cwtl
scas
adc
inc
hlt
cmc
ja
or
das
mov
in
das
js
or
out
inc
into
pusha
cltd
lds
push
jns
loop
fsubrs
out
lods
iret
jg
fst
fdivs
xchg
xor
clc
mov
test
push
in
mov
xchg
pop
in
out
jne
das
cmpsb
das
mov
xor
rep
les
sbb
es
ja
sub
mov
jmp
add
mov
jmp
sbb
and
outsb
outsl
dec
fildll
test
sbb
sbb
nop
and
or
das
sbb
and
xor
jge
shlb
inc
call
data16
icebp
pushf
in
sub
sub
cmp
lds
xor
jno
inc
inc
aas
cld
push
mov
int3
es
add
push
dec
sub
in
xchg
pop
mov
mov
mov
dec
daa
lock
lock
out
imul
into
ficoml
movl
test
or
jnp
mull
sbbl
pop
pop
fs
jno
add
mov
mov
inc
popf
jb
fnsetpm(287
adc
int
notb
mov
mov
xlat
jecxz
fisttpl
jg
ljmp
cmp
and
les
movl
xor
pop
inc
movsl
lret
sbb
data16
push
sahf
lea
pop
in
xlat
sbb
xor
sbb
fimuls
je
xlat
movsl
xchg
cmp
mov
inc
rcll
jb
or
ds
aam
pop
out
pushf
dec
dec
loop
in
jecxz
mov
push
dec
or
outsl
jge
mov
fidivrl
jl
mov
sub
mov
cltd
cld
cwtl
stc
lock
arpl
nop
enter
add
icebp
push
and
inc
out
mov
jecxz
push
lahf
xor
and
mov
loope
mov
imul
andl
push
jo
and
pop
lods
pop
jg
mov
repnz
add
jo
push
hlt
mov
or
inc
adc
dec
ljmp
mov
int3
xor
xlat
out
lret
pop
fsubrl
jmp
mov
call
or
push
cmp
pop
daa
push
mov
and
adc
pop
add
sbb
arpl
lret
popa
or
adc
mov
add
push
jno
pop
ret
sub
hlt
add
pop
jg
shll
xor
jne
stos
push
adc
push
and
loope
add
aaa
pop
aaa
or
scas
jb
push
in
dec
stos
adc
iret
or
cmp
mov
pop
imul
lret
push
sub
mov
leave
xchg
outsb
sub
fidivrl
cli
test
jmp
xor
iret
fistpll
mov
or
jg
push
pop
shl
loopw
dec
nop
cmp
jle
cmpsb
push
cmp
push
enter
fstpl
dec
sbb
lock
push
cwtl
pop
or
push
jge
cltd
lds
adc
sub
dec
bound
xchg
dec
mov
popf
jnp
xor
mov
mov
xor
inc
insb
int
mov
push
lds
idiv
loop
into
mov
pop
dec
add
pop
jmp
lea
adc
sub
add
icebp
lret
inc
or
in
scas
insb
hlt
stc
test
popa
jmp
call
lret
mov
mov
mov
out
test
fbld
aad
cwtl
pop
mov
fstl
and
sbbl
adc
dec
insb
hlt
fidivrl
mov
call
mov
mov
fildl
inc
pop
mov
inc
pop
in
inc
mov
add
je
add
sahf
int
daa
push
add
jno
dec
jl
or
leave
es
add
xchg
cmc
push
jno
add
popa
iret
lea
jns
xor
xor
gs
cmp
lcall
imul
jge
adc
cld
or
mov
iret
jo
into
sbb
and
push
xor
push
sub
lret
lea
inc
addr16
mov
mov
xchg
xor
cltd
push
mov
mov
ret
lods
jns
aas
stos
xchg
push
or
dec
lret
jle
dec
lret
add
inc
pop
orb
pop
in
pop
push
addb
add
inc
push
popf
scas
mov
lods
popa
push
jae
and
xchg
mov
cmp
sbb
xchg
and
xchg
jns
out
push
aad
cmp
dec
fistps
popa
push
fsubrs
push
or
stos
jo
movsl
xchg
sub
inc
or
in
repnz
outsl
cltd
insl
clc
mov
mov
paddsw
or
sbb
mov
stos
test
sbb
jle
lea
pusha
cmp
adc
je
sti
adc
mov
push
rolb
dec
push
icebp
leave
and
rcl
in
out
jno
xor
fisubl
out
dec
outsl
xor
push
mov
add
lahf
pusha
pop
mov
dec
and
and
js
add
test
jbe
daa
inc
xchg
jno
lods
insl
pop
ret
das
shll
jg
leave
ret
and
out
aaa
inc
fildll
call
adc
dec
clc
and
push
mov
cmpsb
mov
ss
hlt
push
jmp
and
lahf
loope
lret
outsl
cmpsl
cmp
iret
decl
or
lock
iret
lret
mov
mulb
jp
dec
test
fsubrl
scas
fdivrp
push
add
jb
cld
sbb
sti
call
xor
dec
jecxz
push
cs
ds
push
xor
shrl
stos
and
sbb
inc
lea
jne
negb
daa
jmp
cmp
aas
arpl
inc
or
les
stos
scas
movb
fsubl
test
mov
mov
adc
ja
icebp
cs
mov
cltd
jle
test
jl
jl
in
xchg
stos
or
cltd
xor
cmp
clc
roll
push
lods
ret
and
in
sub
jg
mov
adc
movsl
lahf
stos
mov
push
adc
rcrb
clc
pop
sub
sbb
xchg
and
jbe
push
pop
test
mov
sbb
jns
cmpsb
subb
cmp
shl
sub
cmp
push
mov
xor
xchg
fcmovnb
push
mov
cmp
movsb
and
jns
add
test
int
testb
or
push
movb
mov
xchg
into
bound
push
imul
insb
les
ja
sbb
sub
addl
xchg
les
cs
cmpsl
iret
lret
into
sar
xchg
test
mov
daa
into
fdivrl
pop
inc
or
pop
push
pop
inc
test
cmp
mov
in
add
rcr
andb
push
inc
mull
movb
mov
incl
add
loop
ret
fcomps
cld
add
cmovp
aad
repnz
nop
out
push
cmp
jbe
dec
inc
xchg
mov
outsl
push
ss
push
sbb
xor
mov
lea
inc
cmp
lahf
rcrl
adc
xor
mov
xchg
nop
lock
jne
dec
mov
mov
inc
movsb
cld
dec
fstpl
loope
mov
mov
test
flds
dec
movsl
dec
jnp
scas
out
das
inc
out
jmp
pop
and
cmc
nop
addr16
jo
cli
add
mov
mov
push
push
jbe
mov
pop
xorl
cltd
mov
sbb
fnstenv
push
xchg
adc
or
dec
mov
in
mov
pop
sahf
stc
sbb
adc
rclb
jbe
adc
and
in
out
ffreep
jno
test
add
add
adc
pop
push
dec
clc
xchg
mov
cmp
mov
jae
xor
xor
jg
mov
pop
cltd
lcall
std
das
xor
fdivl
in
cmp
and
loopne
sbb
imul
jmp
adc
dec
xchg
jge
push
decb
notb
and
shrl
aas
inc
stos
rcr
movsl
xchg
nop
lret
shrb
cwtl
rclb
jecxz
std
ss
xchg
ljmp
shr
lods
inc
pop
test
in
xor
jns
dec
adc
sahf
leave
fstl
pop
cmc
dec
cmpsl
loope
dec
xchg
dec
outsl
cmp
cwtl
andl
inc
js
fstps
sub
xchg
je
mov
out
inc
jp
xchg
push
sbb
adc
in
or
out
mov
cmp
in
test
mov
inc
sub
add
mov
cmp
das
mov
daa
lock
lret
rolb
shlb
icebp
out
pop
ret
ret
test
out
add
int
xor
fldcw
loopne
jg
mov
or
mov
add
out
insb
xchg
mov
mulb
mov
repnz
lods
inc
inc
int3
clc
jo
iret
stos
popa
addl
mov
mov
mov
add
lods
sti
mov
or
jmp
pop
sarb
in
and
xchg
mov
les
pop
and
rorb
and
movsl
mov
add
lret
mov
push
pop
fisubs
lret
imul
sbb
or
xchg
das
pop
lret
adc
das
in
sub
xchg
popa
aas
and
push
sub
cwtl
pop
insb
mov
or
roll
stos
pop
loopne
scas
jp
cmpsl
aad
push
outsb
inc
or
jno
sbb
pop
mov
addr16
inc
sar
adc
pop
jecxz
mov
cmc
pop
push
bound
sbb
test
popf
ljmp
adc
cltd
cmpsl
ljmp
push
inc
push
push
scas
pop
loopne
xchg
pop
push
mov
in
sbb
jle
mov
andb
cli
push
jne
ss
add
negl
gs
out
ret
movsl
test
bound
or
inc
jl
jg
push
inc
xor
mov
jecxz
jae
les
and
jle
ja
cmp
jno
adc
pop
push
call
pop
shll
ret
notl
mov
or
push
push
xchg
sbb
clc
fdivl
jb
int3
and
jmp
mov
shrb
into
call
pop
test
or
clc
push
and
mov
cmp
fstl
stc
add
rclb
xchg
add
bound
outsl
test
cmp
pop
stos
dec
xor
cmp
lahf
les
repnz
ss
subl
push
ret
leave
or
push
or
sbbl
mov
push
mov
mov
jmp
iret
jb
cwtl
push
aam
in
fnstcw
cmp
cmp
popa
loopne
repz
data16
sub
mov
lods
int
out
fstps
xchg
in
jge
cld
or
inc
orb
fisubs
repz
jge
movsl
dec
add
cmpl
mov
sahf
es
test
cmpsb
or
xor
in
xchg
jo
aam
fwait
mov
push
lret
mov
mov
outsb
mov
ljmp
cmc
pop
arpl
push
adc
xor
jg
xor
imul
or
mov
fists
mov
out
int3
pop
xor
adc
pop
fwait
ja
mov
mov
lcall
xor
sub
cli
in
subb
push
jo
adc
movsb
in
loopne
sbb
ljmp
jle
xchg
mov
dec
or
fidivrs
jae
or
inc
push
pop
iret
add
movsb
push
in
cmc
sbb
sbb
test
or
jmp
add
inc
inc
xchg
adc
dec
dec
leave
mov
divb
push
jne
push
xchg
jbe
das
add
mov
mov
andb
xchg
lods
xor
and
inc
nop
pushf
sbb
insl
je
out
fdiv
icebp
inc
or
jp
mov
andl
xchg
push
jns
arpl
jp
cmpsl
int3
and
ret
mov
popa
mov
xor
bound
scas
mov
jmp
stos
loopne
dec
push
mov
rolb
dec
inc
ljmp
scas
gs
test
push
jbe
mov
push
sbb
lock
jae
xor
pop
loope
lds
pop
pop
add
loop
cmp
fcoms
adc
push
mov
fwait
shld
dec
loop
pop
in
test
jb
cmpsb
out
inc
jno
add
push
and
push
pop
push
xor
jecxz
xor
lcall
sub
imul
dec
pop
lcall
aad
nop
out
shrb
push
pop
jp
popa
mov
adcb
aad
jge
mov
or
int3
ds
push
sbb
cmp
repz
xchg
xchg
inc
rorl
sbbl
push
adc
cs
div
fildl
mov
jl
mov
sti
test
or
loopne
sub
pop
mov
hlt
testb
dec
aas
xchg
and
and
jp
sbb
call
imul
aaa
pop
mov
push
fbld
xchg
fisubrl
cli
inc
cmpsb
fiadds
aaa
arpl
aaa
popf
xchg
addl
fs
add
in
xchg
sbb
fmull
je
nop/reserved
out
cmpsb
cmp
pop
call
or
rol
inc
mov
sub
scas
clc
cmp
insl
mov
ljmp
sub
mov
sub
cs
pop
dec
test
dec
pop
ljmp
mov
lea
add
loopne
inc
mov
lcall
add
popl
ds
adc
mov
mov
outsb
lea
scas
inc
mov
mov
cmp
mov
adc
ljmp
mov
ljmp
into
add
push
movsl
aaa
jp
orl
jl
mov
notl
sbb
repnz
mov
movsl
add
push
sub
imul
cmp
repnz
pop
std
lds
mov
ja
cwtl
sbb
mov
aad
outsl
aam
sbb
lods
testl
adc
xor
mov
inc
jbe
lds
mov
nop
and
popf
and
rolb
sbb
mov
adc
out
sbb
mull
mov
lcall
mov
cwtl
loope
pop
arpl
lock
cmp
mov
mov
in
jbe
ficoml
jo
dec
mov
scas
lret
shl
fisttpl
mov
insl
pusha
xlat
leave
cmp
dec
out
rclb
add
hlt
stos
or
cmp
mov
add
push
inc
test
clc
int
fisttpl
iret
hlt
arpl
dec
mov
lret
shlb
les
loopne
out
shll
mov
enter
rcrl
mov
in
inc
mov
or
leave
push
xchg
or
aam
leave
std
mov
sub
fisttps
mov
movsb
inc
or
paddd
push
pop
xor
popa
xorl
cmpsb
dec
loope
fisubrl
sub
cmp
aad
xchg
dec
scas
mov
scas
xor
jg
das
stos
adc
sahf
or
mov
je
xor
aaa
repnz
sub
aam
jno
pop
jb
jge
popf
adc
and
cmpsb
mov
jp
pop
shlb
jge
enter
bound
lret
pop
push
fnstcw
mov
mov
or
scas
and
std
cmp
in
in
leave
push
adc
xchg
pop
popf
xchg
and
sub
outsl
xor
or
cmpsl
cld
cmp
ja
mov
rorl
in
outsl
ret
mov
jae
repnz
iret
shl
dec
popf
pop
push
inc
pop
push
push
push
outsb
dec
adc
xchg
out
jno
xor
inc
cmp
xlat
in
fistl
cmp
sbb
popa
lahf
jbe
xor
or
inc
jmp
call
adc
mov
xchg
inc
add
int3
xor
cmp
in
dec
sti
repnz
xchg
sahf
lock
lea
in
das
in
jb
xchg
push
rolb
mov
sti
in
and
das
cmp
cmpsb
push
mov
or
das
bound
pop
es
in
push
les
mov
out
stos
sub
pop
shll
sub
jle
mov
fisttps
scas
cs
shr
ds
mov
sarl
bound
or
out
pop
and
lock
jae
dec
mov
cmp
adc
cmc
outsl
inc
lret
out
mov
xchg
or
mov
bound
loope
fisubl
mov
mov
enter
mov
js
iret
rolb
cwtl
inc
xchg
outsb
or
mov
xchg
repnz
mov
mov
lods
jbe
push
fimuls
repnz
cmp
int
cmpl
into
inc
or
aaa
cli
sub
cmp
pop
adc
cmc
cs
fisttpll
daa
sub
out
data16
cmpsb
xchg
cwtl
popa
jecxz
sar
clts
repnz
or
dec
ljmp
inc
hlt
xchg
mov
adc
test
jns
push
in
cmp
ljmp
jmp
js
xchg
adc
arpl
rclb
pop
pushl
sbb
stos
hlt
lcall
fsts
cli
sahf
push
imul
adc
lods
mov
fisubl
adc
rorl
js
mov
mov
and
cmp
movsl
pop
jno
dec
mov
adc
test
or
sbb
mov
push
cmp
cmpsb
jo
or
jmp
cmp
in
in
sub
in
sub
mov
iret
adc
inc
xchg
leave
repz
xor
push
pop
es
push
es
popf
popa
repnz
xchg
jns
or
stc
or
lds
sub
pusha
in
adc
mov
push
and
xor
dec
imul
add
dec
jmp
inc
nop
movsb
sbb
fadds
hlt
fldenv
out
cwtl
js
lret
xchg
lea
push
out
in
cmp
inc
and
lods
addr16
lods
mov
push
sub
je
jbe
mov
popf
jne
data16
and
mov
push
cmp
fnstenv
test
mov
jne
or
cmc
pop
imul
dec
lret
cmpb
faddl
push
rcll
hlt
es
and
inc
dec
repnz
jmp
jge
cmp
add
lds
adc
dec
cmp
shlb
test
cmpsb
into
sub
push
dec
fsub
lea
inc
pop
out
addr16
mov
cltd
ss
sub
aam
aaa
mov
in
lds
insb
and
ds
and
andb
mov
sub
xcrypt-ofb
cmp
push
xor
popa
mov
add
repz
sbbl
das
jmp
sbb
add
aam
inc
cmp
repnz
and
push
cmp
inc
inc
bound
mov
push
cmpsl
jae
mov
dec
cmpsb
ret
ret
mov
out
fwait
push
in
movsb
lea
mov
sbb
sbb
in
imul
pop
inc
pop
push
ret
and
pop
or
je
mov
out
mov
addb
cmp
push
cmp
insb
mov
outsb
and
aad
cli
push
pop
and
pop
jb
mov
je
sub
imul
jnp
dec
ljmp
lds
xor
cmp
cwtl
mov
mov
xchg
test
and
repnz
in
mov
mov
popa
outsb
dec
inc
data16
stc
icebp
and
outsb
jl
xchg
jge
cmpsl
xor
jne
cmp
inc
std
inc
int3
sub
test
sbb
xchg
aaa
jbe
add
inc
push
cwtl
push
dec
outsb
and
dec
sbb
fwait
mov
shrb
xor
scas
repz
inc
movsl
lret
and
mov
iret
sub
loopne
jle
das
dec
rcll
inc
push
jns
mov
rorb
rcrb
pop
arpl
loopne
or
xor
fs
shl
popa
and
pushf
lcall
sbb
and
jmp
shll
adc
pop
dec
adc
pop
lahf
adc
jo
test
mov
icebp
movl
in
stos
hlt
pop
xchg
into
fwait
jge
sbb
insb
aas
enter
or
lcall
jbe
lahf
mov
fsts
notl
adc
mov
sbb
xchg
daa
adc
rol
into
imul
leave
pop
scas
stos
pusha
mov
sbb
sub
sbb
and
ret
ss
dec
push
sbb
out
test
icebp
mov
add
sub
or
add
jecxz
fwait
xchg
jno
fsubrl
mov
out
xchg
mov
adc
ds
jb
inc
add
jmp
lock
mov
daa
rcr
repz
cmc
mov
testl
cli
and
rorl
stos
clc
cmp
mov
inc
sbbl
mov
xchg
mov
shl
cmp
test
mov
dec
inc
push
mov
or
mov
std
lods
cs
jecxz
jb
repnz
fisubrs
sbb
push
inc
lods
stc
popa
cmc
cmp
dec
mov
inc
call
lds
dec
dec
mov
fs
jle
ret
cli
inc
and
and
loopne
daa
jl
incb
mov
mov
nop
dec
notl
fidivrs
repz
cmpsb
js
orb
insb
adc
sub
jb
lcall
lock
dec
adc
adc
bound
adc
in
add
and
inc
leave
ret
jne
jae
pusha
mov
test
andb
sti
mov
dec
mov
test
call
jmp
xor
push
mov
cld
sbbl
sbb
lea
test
sbb
sbb
push
jbe
xchg
push
ficompl
lock
sub
xor
xorb
mov
or
lcall
jl
jl
popf
jae
or
fisubrl
lock
pop
push
mov
in
aam
mov
shlb
js
cmp
pushf
inc
pushf
push
push
mov
out
fisubl
push
cmp
clc
in
jnp
cmp
data16
gs
add
mov
xchg
je
aas
adc
fists
pop
mov
mov
push
inc
mov
daa
mov
enter
push
sbb
xchg
sbb
sti
out
rcrl
or
mov
call
jecxz
cltd
into
mov
lret
mov
xor
jp
add
frstor
shlb
dec
inc
jne
sub
fwait
mov
fisubl
jne
into
in
mov
and
repz
syscall
jle
subb
sub
jbe
push
imul
aas
dec
cmpsl
lods
jbe
mov
stc
xchg
pop
movsl
lahf
cmp
jb
test
loope
cmp
jb
adc
jmp
cmpsb
add
push
and
iret
ja
data16
mov
daa
dec
add
mov
mov
pop
push
xchg
mov
pop
dec
repnz
in
pushl
cmc
pop
fs
fisttpl
and
mov
in
imul
jo
les
cltd
pop
test
jmp
mov
push
mov
mov
scas
cld
outsl
cmp
inc
jns
and
inc
inc
push
add
adc
mov
jle
jp
pop
int3
jb
addr16
mov
sti
in
notl
pop
incb
in
and
rcrb
pop
mov
scas
push
fimuls
stos
mov
xor
aam
cmp
mov
cmc
or
jno
dec
push
jns
out
test
mov
dec
cmp
xlat
lods
xor
xchg
and
add
nop
idivb
ja
adc
hlt
aaa
scas
xchg
xchg
adc
lahf
loopne
ret
cs
and
popfw
mov
shrl
jp
popl
add
inc
ds
xor
jnp
aam
jp
mov
fidivl
mov
mov
in
outsl
fsub
mov
loop
pop
adc
pop
daa
out
inc
inc
mov
std
insl
repz
out
sub
divl
xchg
dec
adc
sahf
or
test
push
aad
mov
repz
xor
pop
fimuls
mov
filds
sahf
jnp
in
cmpb
dec
fdiv
mov
adc
es
xor
and
push
cmpsl
stos
and
aas
call
push
popa
or
mov
sbb
pop
sbb
fiaddl
in
cmp
pop
mov
std
icebp
out
je
inc
jle
idiv
sub
test
inc
lea
mov
pop
scas
pushf
jne
insl
nop
rcl
clc
scas
test
repnz
cltd
imul
push
flds
cmp
lret
sahf
xor
pop
or
cli
jp
xor
mov
cmpl
call
iret
push
adc
adc
es
loop
nop
cld
insb
sbb
jne
or
add
pushf
divl
hlt
dec
lea
or
roll
mov
movsl
jne
je
aaa
and
or
lods
aaa
sub
inc
repnz
dec
pop
aam
jge
bound
xor
pushf
imul
inc
cli
ret
rcrl
ret
adc
cld
cmpsl
jb
add
add
cmpsl
jl
dec
dec
lret
jmp
sbb
aad
stos
and
bound
sub
aam
testb
aaa
int3
jecxz
cmp
sarl
popa
push
jnp
adcb
xchg
dec
sub
bound
xor
or
mov
out
pshufw
mov
lods
call
in
int3
mov
movsb
fsub
loopne
mov
push
jns
fistps
in
in
pop
jb
sub
out
adc
pop
ret
or
incl
rorb
std
clc
xchg
mov
jle
ljmp
cmp
inc
push
dec
lret
fldt
sub
or
dec
mov
cmovnp
std
pop
bound
cmpsl
sbb
out
in
pop
or
icebp
out
in
or
mov
add
fsubrs
lock
xor
in
xchg
pop
ficoms
or
hlt
push
icebp
jnp
inc
push
pop
pop
sbb
add
lds
mov
or
and
sub
loope
mov
jecxz
shr
and
jp
incl
push
jg
clc
in
fcoml
data16
nop
mov
cltd
fidivrs
jecxz
mov
dec
sahf
mov
sbb
repz
push
cmc
inc
mov
mov
lock
pop
addl
cmp
shlb
mov
aad
pop
enter
xchg
rcrl
push
aam
dec
insb
xor
xor
cmp
fstpt
and
mov
cmp
roll
mov
push
in
test
push
xor
lahf
les
test
in
ret
sti
push
and
xchg
mov
xchg
call
pop
or
sbb
add
and
test
addr16
mov
xchg
jmp
dec
mov
jbe
mov
or
js
dec
pusha
test
test
fdivl
imul
sbb
jge
iret
add
mov
sub
inc
or
out
mov
push
jo
clc
inc
lcall
inc
add
inc
and
dec
cmp
leave
or
mov
fsubl
and
inc
and
imul
inc
cmp
daa
call
cmp
mov
sbb
dec
xchg
push
push
xchg
cmp
in
mov
jno
int
loope
orb
shlb
cmovnp
cmp
jp
les
cwtl
xchg
pop
stc
push
or
cs
push
in
or
mov
rcrb
push
pusha
jecxz
cs
es
iret
xor
es
cmpl
hlt
xchg
insl
call
in
lcall
in
bound
dec
repnz
in
lods
call
jno
inc
fistpl
mov
add
xchg
sbb
ljmp
ds
in
add
loope
lds
ds
insl
push
das
push
add
clc
out
dec
addb
xchg
xchg
mov
sahf
push
xorl
repnz
jno
xchg
jae
jle
push
sarb
movsb
push
ja
in
orb
sub
dec
sbb
cmpl
or
mov
addr16
ds
out
or
movsb
test
pusha
mov
arpl
xchg
inc
inc
in
mov
pop
dec
or
jnp
push
lea
mov
shrd
insl
or
bound
mov
scas
pop
js
out
pop
lods
test
gs
xchg
add
fdiv
mov
jae
xor
mov
mov
mov
dec
lock
jb
cmp
int3
repnz
leave
jbe
outsb
stos
ljmp
aas
add
es
mov
inc
inc
xchg
mov
sub
lret
or
fmuls
mov
aas
inc
insb
adc
xchg
mov
hlt
and
outsb
jle
sbb
adc
cmpsb
mov
jmp
dec
cmp
cmp
jbe
xlat
jge
andl
xchg
mov
jl
insl
mov
scas
xor
aas
jmp
imul
mov
push
sub
bnd
dec
cs
inc
dec
mov
addr16
sahf
fs
xor
leave
ds
popf
gs
cmp
fistl
rolb
sti
nop
xchg
mov
pop
sbb
dec
adc
push
fiadds
xchg
lahf
cmp
dec
lahf
mov
mov
movsl
repnz
inc
stos
add
pop
rcl
xlat
jecxz
xchg
jne
js
sub
mov
pop
dec
jne
sub
std
jp
rcl
jp
xor
sbb
and
sub
fbld
cltd
out
adc
addr16
jno
test
pop
jb
jp
xchg
lds
adc
dec
insl
sub
adc
subl
cmp
mov
shr
mov
adc
inc
and
push
sub
lret
out
fisttpll
add
sahf
inc
mov
test
mov
dec
jno
mov
addr16
mov
push
daa
imul
and
int3
xchg
or
sbb
mov
and
nop
out
dec
mov
pop
cmpb
sbb
out
test
loop
mov
ss
stc
mov
or
jmp
pop
mov
xchg
cmp
mov
xchg
repz
lahf
mov
add
nop
ja
pushf
push
insl
add
inc
mov
rcrb
insl
push
jnp
test
stos
fucom
shll
pop
xchg
cld
fistps
jp
sti
aas
mov
push
inc
add
andb
xor
sahf
ficoms
add
ret
cltd
repnz
out
testl
ds
test
pop
inc
es
adc
sahf
xchg
and
jg
sbb
sbb
mov
gs
push
lods
adc
nop
cmp
cld
pop
and
inc
jne
and
cmp
pop
pop
jno
add
add
sti
inc
insl
je
cmovge
insl
xchg
decb
push
xchg
into
xchg
iret
lret
test
repz
cmp
lds
lea
rcrl
lahf
sbb
pop
repz
jo
pop
mov
fwait
sbb
push
bound
mov
pop
notb
mov
ret
push
and
hlt
fldl
fwait
mov
jl
fidivl
xor
add
and
in
sub
aad
loope
adc
ret
mov
xchg
adc
mov
out
je
scas
mov
popa
xchg
aam
add
aam
inc
addl
mov
notl
icebp
xor
fstpt
orl
xchg
cmp
jge
icebp
sarl
iret
adc
xchg
adc
push
push
hlt
pop
dec
addr16
lock
in
jg
movsb
leave
or
iret
lcall
out
scas
hlt
arpl
jp
insb
insl
xlat
mov
test
loopne
sbb
dec
insl
jns
pop
jae
mov
testl
fdivr
arpl
adc
xchg
mov
lret
cmpsl
mov
fldcw
pop
push
pushf
arpl
lds
loopne
addl
cmp
push
faddl
inc
xchg
cmpsb
popf
ret
and
lcall
ja
lods
outsb
dec
mov
out
sbb
les
xlat
cmc
cmp
xlat
cltd
shlb
imul
das
addr16
sub
outsl
add
and
add
add
or
cmpsl
sbb
jnp
out
push
add
xchg
das
in
call
test
jns
aam
cmpsl
aad
popf
rcll
adc
push
mov
mov
fldcw
insl
mov
add
mov
stos
imul
sar
pop
push
pop
test
push
mov
dec
dec
jnp
les
mov
loop
jl
mov
rclb
or
jecxz
out
inc
mov
push
rcl
cmp
insl
and
cmp
mov
xor
jl
and
push
ds
repnz
sar
pop
shl
pop
and
push
cmp
pop
pop
ficompl
shl
in
xor
fildl
or
lods
push
aad
mov
inc
jg
cmp
icebp
sub
sbb
cld
or
or
push
lods
sub
mov
xor
mov
xchg
xchg
jb
or
loop
sbb
and
sub
xchg
lds
mov
pop
stos
pop
inc
enter
fidivl
subl
cmp
xchg
mov
insb
add
in
ficoms
or
aas
and
ljmp
int
in
lock
popf
in
xchg
insl
xor
xchg
in
test
jl
leave
dec
mov
xchg
rclb
mov
or
outsl
adc
mov
lretw
addb
jecxz
rclb
xchg
jno
std
cmp
mov
cli
jp
pop
stos
sub
mov
ror
arpl
shrb
cld
xor
shlb
push
jns
clc
pop
repz
in
rcrl
insl
or
pandn
scas
jmp
hlt
push
movsb
in
mov
inc
insl
mov
inc
scas
daa
stos
insb
cmp
add
sub
nop
and
cmp
lods
dec
data16
or
and
popa
xchg
pop
fldenv
movsb
dec
mov
mov
mov
adc
cwtl
cltd
mov
stos
test
inc
fnstenv
xchg
dec
mov
jmp
adc
jae
jl
call
cmp
mov
dec
sbb
pusha
lods
mov
sbb
or
imul
cld
faddl
cmpb
and
pusha
outsl
pusha
out
jo
shlb
movsl
insl
add
les
pop
sarb
sub
mov
sub
arpl
les
jp
pop
insl
mov
fists
lds
jno
es
pop
add
inc
jp
ffree
outsl
outsl
lahf
mov
push
in
add
out
pop
int
add
stos
mov
fwait
xchg
lods
dec
popa
mov
dec
sub
stos
push
inc
out
cmp
xor
and
add
dec
cwtl
pop
push
jne
sub
adc
xor
js
jmp
shlb
jnp
in
ret
sub
cmp
adc
imul
dec
cmp
pop
aaa
sti
cmp
sahf
or
cld
sub
xlat
mov
into
or
dec
pop
cmp
dec
dec
xchg
test
jae
mov
inc
rorb
ficoml
movsl
adc
mov
scas
orb
add
sti
xchg
popf
ds
or
sub
and
repnz
cwtl
dec
mov
jmp
mov
call
in
mov
pop
jb
mov
lock
add
jbe
insb
mov
bound
cmpb
scas
xor
stc
addr16
lds
imull
aam
adc
gs
cmp
inc
push
or
fwait
mov
into
jmp
or
sub
cmp
adc
sarl
aaa
lods
aad
dec
mov
in
lcall
leave
mov
and
inc
and
into
xchg
lret
xor
cli
jmp
outsl
jmp
daa
cmp
divb
pop
push
mov
inc
je
leave
push
test
lret
test
fcompl
mov
movsl
loop
xchg
das
pop
push
mov
push
dec
sbb
dec
xchg
ficoml
lahf
cld
xchg
push
call
sub
push
jae
outsl
add
jb
sbb
mov
add
fmulp
pop
dec
push
dec
repnz
mov
scas
xchg
sub
adc
repnz
fdivs
jmp
adc
xchg
ret
pop
sbb
xchg
adcb
fisubrl
movsl
mov
cmpsw
and
lds
faddl
push
pop
mov
xchg
enter
pop
repz
xchg
out
adc
add
imul
js
and
adc
mov
cltd
mov
shrb
scas
lock
outsl
xlat
add
fsubs
mov
cltd
mov
insl
in
xor
inc
jp
lcall
leave
sub
inc
pop
push
orl
adc
xchg
enter
and
sbb
sub
pop
popf
test
push
mov
test
jb
adc
pushf
pop
movsl
and
loopne
mov
pop
cs
rcll
call
arpl
sbb
inc
inc
movl
jl
push
insl
sbb
pop
dec
stos
jno
or
aad
fs
in
cmp
aas
movsb
imul
je
rol
inc
add
aam
sub
addb
lds
xor
loop
std
push
ror
xchg
xchg
cmpsl
mov
pusha
push
insb
fstps
cwtl
test
push
adc
xchg
in
pop
enter
mov
jmp
aam
sti
or
ljmp
repnz
xchg
xchg
push
lock
into
lret
pop
ret
mov
jmp
rcrl
imul
xchg
adc
fcmovb
push
inc
dec
stc
dec
xchg
push
lds
stc
jno
mov
adc
add
cmpsb
out
mov
dec
cmp
jmp
add
ror
clc
xorl
or
jecxz
sub
in
insb
cltd
shll
xchg
dec
inc
fists
xchg
int
push
test
cmp
xchg
pop
push
lahf
out
cmp
in
int
dec
mov
addr16
fs
jo
xchg
adc
and
jge
sbb
ss
das
pop
xor
sahf
push
xor
idivl
in
shr
movl
push
push
in
imul
je
or
test
xchg
filds
push
push
cmpsb
rolb
test
adc
sub
aad
imul
pop
lcall
cli
cwtl
mov
cmp
push
mov
int
sub
adc
aaa
repz
push
mov
scas
test
dec
lock
and
aas
xchg
fcomp
pushf
xorl
pop
rorb
fs
flds
sbb
add
out
orb
aaa
cmc
fwait
inc
mov
add
push
mov
and
mov
movsb
fcoms
xchg
test
shl
sti
pop
icebp
xchg
cli
jmp
stc
xlat
xor
stc
lods
scas
lret
sahf
pop
imul
pop
mov
loopne
sti
xchg
xchg
mov
pop
mov
lret
outsb
cwtl
rcrl
mov
sub
or
jns
inc
out
fsubr
xchg
adc
aad
jbe
sub
push
push
int
fdivrl
xchg
mull
nop
jne
adc
jle
fwait
sub
pop
or
pusha
and
pop
mov
test
pop
mov
cmpsl
movsb
lret
jae
rcr
sbb
pop
out
in
push
out
jnp
icebp
xchg
pop
sti
cmp
dec
xor
lds
and
push
lcall
popl
inc
mov
or
sti
xlat
pop
mov
lcall
and
fs
mov
sbb
leave
lcall
pop
inc
mov
outsb
clc
cmc
push
leave
inc
jmp
jg
or
nop
push
leave
subb
inc
stos
and
dec
inc
out
mov
pop
fidivl
jno
fidivrl
cmpsl
icebp
mov
js
sbb
push
or
mov
pop
sbb
add
hlt
loope
mov
jnp
rorl
repnz
push
mov
xlat
pop
sarb
popa
cwtl
pop
sarb
subb
cld
add
mov
push
stos
out
sub
mov
push
jno
stc
out
or
fs
outsb
stos
aam
sbb
jmp
aad
mov
mov
pop
jo
shlb
sub
adc
add
pop
iret
adcb
dec
loop
fnstenv
and
mov
fucomp
cmc
cmpsl
lds
push
aad
mov
jo,pn
repz
dec
leave
out
mov
loop
mov
into
adc
or
jbe
dec
es
or
aad
dec
mov
movsl
cmp
inc
xor
jo
int3
pop
mov
cltd
cmpsb
loope
movb
mov
adc
aaa
sbb
pop
push
push
call
push
test
add
int3
dec
sub
cld
lods
std
lcall
adc
rolb
mov
sub
cmpsl
dec
mov
iret
adc
or
sbb
fldl
push
and
jg
push
push
sbb
or
push
test
cmp
inc
movq
push
sub
sarb
lods
sbb
mov
push
out
push
or
xchg
sbb
jns
adc
insb
gs
ds
sub
test
dec
fsubr
in
fidivrl
js
lcall
cmp
aas
les
inc
mov
hlt
outsb
push
xchg
mov
push
pop
jno
dec
jl
mov
pop
ss
arpl
popa
stos
xor
movsb
aad
pop
int
cmp
pop
icebp
cltd
movsb
loopne
enter
xor
ljmp
ja
testl
push
sub
dec
in
add
popl
or
rcrb
and
gs
sti
jl
adc
ret
movsl
popf
lret
dec
les
push
pop
and
pushf
icebp
into
xchg
push
dec
xor
lahf
mov
cwtl
jnp
popa
pop
jmp
jecxz
jb
jg
mov
enter
in
dec
fyl2xp1
cmc
add
mov
xlat
mov
adc
loope
mulb
inc
inc
stc
xor
inc
jae
in
icebp
fxch
fwait
daa
push
mov
arpl
out
mov
dec
incb
jmp
and
push
clc
and
mov
or
jg
mov
les
in
lret
movsb
fnsave
sub
mov
add
mov
adc
rcrl
cli
inc
push
ret
and
pushf
mov
add
orl
std
adcl
cmpsl
jecxz
dec
popf
stos
add
es
jae
les
lock
add
sti
inc
movsb
inc
out
out
jp
es
jae
mov
pop
data16
inc
mov
push
enter
aad
rorb
mov
lods
adc
push
xor
imul
jae
add
ret
adcl
jecxz
push
sub
idiv
repnz
lret
mov
je
in
cs
out
bound
sbb
xlat
aaa
fimull
inc
and
mov
inc
inc
jne
or
pusha
lods
sub
jl
or
mov
cmp
xlat
lods
mov
mov
or
and
cmpsl
addr16
jp
flds
dec
cmpsb
mov
push
mov
mov
adc
aad
push
xor
and
mov
push
mov
mov
sbb
fs
add
mov
xchg
enter
xchg
clc
movsl
mov
cmp
sarl
shll
arpl
nop
sub
loop
cwtl
push
mov
mov
scas
scas
sti
dec
push
sub
jecxz
nop
jmp
sbb
dec
clc
and
mov
add
fcoml
arpl
mov
cltd
aam
jns
add
jge
rcr
lods
jge
mov
push
xor
xor
fdivrl
adc
ljmp
sbb
sub
std
iret
jbe
xor
sbb
inc
cmc
in
andb
lock
sub
out
adc
lahf
push
gs
sbb
jo
xchg
xor
jmp
jl
cmpsl
inc
outsb
or
popa
jbe
mov
hlt
out
mov
insl
xchg
xchg
mov
pop
jp
call
in
push
ret
leave
pop
bound
push
leave
jle
es
sub
sub
ds
movsl
outsl
cmp
call
ljmp
inc
cli
add
and
fildl
rorb
popl
cli
dec
cmp
cmp
push
xchg
mov
movsl
mov
dec
ja
dec
xchg
sbb
xor
cmp
push
push
push
rorw
cltd
sbb
addr16
mov
fsubl
sub
pusha
sbb
cltd
mov
mov
or
sbb
inc
cmpsb
and
jge
add
push
out
xorl
inc
mov
icebp
cwtl
dec
push
xchg
adc
and
xor
data16
arpl
popa
dec
mov
movsl
out
lahf
inc
mov
mov
xor
ds
add
pop
adc
popa
push
outsb
pop
shr
pop
push
lds
push
jle
lcall
and
adc
jmp
push
adc
pop
dec
inc
orb
pop
pop
xchg
pop
in
inc
ja
daa
ret
mov
xorb
or
jge
mov
adc
push
das
movb
rcrb
jg
ss
cmpsl
cmpb
aas
mov
arpl
adc
push
xor
cli
cmpsl
dec
scas
es
ret
andb
dec
mov
dec
enter
andb
shrl
dec
cld
or
lods
pop
inc
iret
mov
data16
or
roll
push
out
dec
imul
push
push
xchg
inc
pop
xor
repnz
in
sbb
mov
test
xlat
ljmp
mov
loope
out
jmp
lock
test
inc
ret
sbb
fwait
shlb
out
or
sbb
cmpsb
push
cmp
pop
mov
push
iret
dec
xchg
mov
cmc
jnp
lods
sahf
int
std
sub
cmovno
js
ficomps
cmpsl
stc
mov
into
adc
or
in
adc
sbb
int3
in
pop
inc
lods
push
xor
xor
daa
sbb
mov
sti
shlb
lods
stc
xor
dec
pop
stos
enter
sub
pop
pop
loope
mov
repz
lret
adc
in
aam
cmp
movsb
push
adc
ss
test
and
and
rcr
lcall
adc
push
jp
jne
imul
xlat
or
bound
inc
or
lahf
push
mov
jno
jo
jno
in
sbb
or
mov
jp
fcoml
data16
mov
jge
push
or
add
sub
push
and
jno
lea
mov
aam
xor
inc
xor
xor
inc
mov
sub
cmp
xchg
fs
dec
mov
push
and
leave
sbb
dec
gs
js
mov
or
mov
cld
dec
push
push
js
sub
stc
adc
lcall
inc
lods
cmp
dec
loopne
push
or
dec
out
test
out
outsl
outsl
sub
cmp
jl
std
sbb
adc
mov
xchg
xchg
mov
test
cltd
ljmp
or
xorb
sub
mov
jb
ljmp
movsl
mov
push
mov
inc
test
mov
rol
pop
les
and
addb
scas
dec
push
jp
das
ror
sbb
push
shll
loope
adc
push
out
ret
rolb
frstor
fs
testb
push
pop
pushf
adc
jnp
adc
andb
fildll
rol
xor
in
cltd
sbb
push
cmp
mov
sub
fwait
mov
popa
test
inc
fs
stos
movsl
inc
mov
movswl
and
mov
pop
xchg
or
xlat
xor
rolb
push
std
push
xchg
mov
int3
and
mov
cmpsl
mov
int
push
jle
push
sub
sahf
pop
jl
mov
push
arpl
push
xor
mov
mov
jge
sti
aaa
mov
fs
nop
xor
jge
imul
lret
in
mov
in
rcrb
xchg
inc
mov
adc
dec
sbb
ss
xor
pop
mov
movsb
mov
shll
cmp
add
xor
xor
dec
fisubrs
cld
sub
fidivl
repnz
adc
out
aad
lcall
stc
mov
sbb
adc
aad
sahf
loope
xor
flds
add
int3
sahf
lret
push
into
movsb
xchg
mov
jnp
mov
fisubrl
sub
xchg
jno
or
jae
mov
pop
mov
xchg
and
mov
rcll
inc
out
jecxz
lods
lds
dec
xlat
and
mov
add
repz
pop
cmc
dec
mov
dec
cmp
sti
xchg
pop
push
iret
int3
or
mov
dec
shlb
add
cld
ds
fcmovbe
and
push
jbe
imull
lcall
aad
jae
jge
lahf
and
imul
sbb
mov
push
adc
xlat
fucomp
push
push
fstp
icebp
ficompl
inc
jge
xlat
movsl
adc
sbb
xchg
xchg
cmc
test
xor
test
arpl
add
inc
shrl
scas
jne
jne
inc
cwtl
xlat
sarb
into
pop
adc
pop
orb
test
cmc
psrld
into
pop
push
ret
mov
mov
push
js
je
push
lret
in
xor
ljmp
test
dec
fcoml
add
fidivl
test
pusha
jns,pt
mov
xchg
imul
out
pushf
jo
jg
sub
mov
or
mov
inc
or
scas
mov
pop
jle
jmp
dec
dec
movb
imul
xchg
jl
outsl
push
rorl
lahf
mov
dec
loopne
xchg
lret
jmp
sti
addr16
mov
adc
and
lods
lcall
or
addr16
in
rclb
jp
fldcw
stc
sbb
adc
mov
push
adc
cmp
sub
or
mov
cmp
shrb
insl
rcrb
inc
outsb
inc
in
rcl
lcall
stos
xor
shll
fisubs
repnz
je
or
sub
shlb
or
adc
cmpsl
aaa
inc
jle
jge
call
sub
sub
sbb
imul
imul
push
cld
mov
cmpsl
xchg
dec
fmuls
inc
dec
xor
or
jb
ret
jae
bound
loopne
add
fidivs
cmp
iret
push
mov
dec
ret
lar
sahf
mov
adc
jb
cltd
sub
push
or
and
cmpsb
imul
or
sub
not
sub
pop
mov
data16
test
test
insb
shlb
add
call
sbb
mov
mov
clc
gs
pushf
sti
stc
pop
inc
out
adc
sub
outsl
mov
mul
mov
mov
mov
mov
push
inc
scas
mov
pop
pop
shlb
stc
add
in
and
mov
adc
jge
movsl
and
rcrb
cmpsl
iret
mov
or
and
out
movsl
cli
dec
and
loopne
xor
sbb
mov
idiv
xor
mov
push
leave
cbtw
stos
jl
mov
mov
dec
adc
ljmp
das
into
ret
mov
mov
xor
mov
es
sbb
and
enter
fs
and
jp
sahf
data16
into
sub
loop
mov
xor
jo
cltd
sbb
jb
stos
out
cmp
mov
imul
out
inc
int
gs
mov
jnp
leave
or
loope
fs
je
fdivl
leave
mov
jne
push
push
xchg
push
popf
movsl
cmpsl
sub
pop
sub
mov
jbe
icebp
pop
xor
mov
dec
push
sti
pop
jae
jnp
cmpsb
xchg
sub
dec
imul
js
outsl
or
or
movsl
in
ficoms
in
test
leave
out
add
rcrb
fwait
push
shrl
fsubrl
xchg
arpl
fisubl
lock
and
push
rorb
mov
icebp
pop
pop
mov
mov
adcb
loope
es
scas
mov
test
std
xchg
pop
rorb
out
das
pop
add
lcall
je
in
sbbb
mov
int
movsl
mov
dec
adc
lods
xor
dec
jbe
jle
pop
mov
cmp
push
adc
scas
inc
cmp
xchg
add
stc
lcall
xor
fbld
int3
mov
aam
in
mov
adc
fcomps
ret
push
repz
mov
rcrb
nop
clc
into
loopne
popf
cmp
sub
xlat
je
adc
mov
pop
aas
aad
inc
xchg
sahf
shll
loop
jnp
ds
outsl
adc
cld
jecxz
test
fwait
pop
sbb
mov
dec
push
pop
test
int3
or
jbe
push
xchg
push
rolb
pop
fadd
cmp
fisubrl
jl
shll
push
aad
mov
cs
sub
sbb
mov
rcrb
cmpsb
mov
scas
and
fcmovbe
mov
shlb
cltd
push
sub
push
sbb
lret
je
movsl
sbb
or
aas
pop
xchg
inc
mov
xchg
ds
jns
sub
inc
orb
xor
test
inc
fstl
outsl
fs
cmp
gs
stos
and
aad
cs
xchg
scas
sub
lret
cld
xchg
xorl
inc
aad
in
add
pop
mov
lret
pop
mov
in
fs
into
mov
push
push
cmp
dec
xchg
outsl
inc
fldt
leave
sbb
shlb
cmp
jo
or
pop
cmp
sbb
dec
xchg
repnz
xchg
das
mov
test
in
ja
dec
dec
add
mov
xor
push
or
mov
sahf
jecxz
dec
mov
xchg
pop
mov
push
repz
sahf
inc
mov
xor
adc
fstps
adc
arpl
adc
pusha
jecxz
jae
ljmp
lods
pop
jnp
pop
push
repnz
jbe
pop
orb
test
xchg
fdivrs
and
pop
pushf
push
cmp
fimull
lods
fsubrp
mov
lock
push
cmp
jl
cs
mov
mov
mov
mov
mov
mov
ret
inc
mov
mov
xor
addr16
fs
pusha
cmp
push
add
sub
aas
cmovge
jp
ja
test
jecxz
icebp
sub
cltd
fistps
xor
pop
pop
jle
pop
mov
xor
stos
cld
mov
jp
shll
jno
pop
mov
roll
nop
mov
cmp
ja
inc
in
push
pop
mov
rorl
xor
dec
fsts
xchg
call
je
inc
iret
insb
cmc
inc
add
das
lcall
clc
push
inc
mov
cmp
and
or
xlat
lock
inc
inc
mov
add
sub
cmp
add
lret
icebp
addr16
icebp
stos
dec
mov
xor
stos
cld
cmpsl
pop
push
loopne
lcall
pop
or
inc
ret
mov
test
and
sub
jns
push
mov
mov
aaa
scas
jb
or
jmp
in
and
jl
adc
sbb
inc
cmp
pop
jge
daa
fildl
cld
rclb
les
int
cmp
pop
mov
dec
dec
xchg
cmp
sarb
nop
xor
add
add
jnp
pop
nop
leave
mov
and
fs
pusha
stc
into
ljmp
mull
mov
daa
sbb
shr
pop
push
cmp
mov
imul
dec
ss
adc
pop
into
mov
push
inc
sub
stos
stos
mov
xor
xchg
mov
outsl
ficoml
inc
out
aas
fwait
lret
adc
hlt
fbstp
paddusb
sar
xor
imul
data16
stos
addr16
repz
sar
inc
subl
out
cmp
jg,pn
je
outsb
psubusw
ror
roll
sub
inc
shlb
add
pop
sub
mov
in
mov
sti
leave
mov
stos
fnsave
test
inc
gs
pop
movsb
cmovg
cwtl
sub
jmp
mov
les
push
mov
xchg
mov
mov
pop
pop
fnstcw
fldenv
jmp
mov
adc
insl
cld
shlb
jp
ljmp
push
pop
xchg
push
mov
or
dec
add
jge
lods
cld
lods
fsub
pop
cli
xchg
pop
xor
fcmovbe
test
pop
int3
push
mov
mov
pop
jnp
hlt
stos
xor
out
rorl
shll
cmpl
stos
mov
xor
mov
inc
int
or
leave
xchg
and
xchg
push
adc
jl
pop
xlat
addr16
pop
loop
pop
jmp
clc
fdiv
cmpsb
sub
scas
lds
repnz
fistps
xor
lret
sub
add
aaa
xchg
xchg
scas
scas
inc
xor
xor
sbb
imul
xor
sub
push
and
mov
pop
fcomps
push
and
cmp
push
in
in
or
negl
pushf
fdivl
pop
mov
fdivrs
sub
fsubr
adc
inc
std
mov
div
aas
ds
lea
mov
sbb
mov
aaa
xor
cmp
arpl
mov
les
incb
stc
sub
pusha
or
js
decb
test
sarb
cmp
mov
cmpsl
inc
jge
das
and
sub
sub
outsb
and
and
sbb
jbe
arpl
and
jl
xchg
repnz
fs
mov
pop
cmp
outsl
or
sub
mov
xchg
jge
insb
or
jne
inc
mov
xchg
inc
addr16
loope
fs
xor
xchg
pop
jle
ds
cmpsb
ljmp
sbb
in
jmp
xchg
popa
adc
xchg
or
adc
bound
xor
or
fcoms
dec
out
dec
ucomiss
mov
and
or
add
pop
mov
mov
push
sbb
data16
xchg
sbb
cmp
dec
stos
in
frstor
push
out
aaa
rcll
or
lods
sbb
test
xor
out
adc
ljmp
cltd
jno
lock
test
push
fmul
out
arpl
cwtl
sub
jle
inc
jl
adc
lea
xor
jmp
push
test
jg
mov
lret
dec
cmp
xorl
and
leave
fmuls
loop
cmp
push
cmpsl
mov
mov
test
scas
jge
ss
aam
movsl
adc
pop
jl
xlat
je
cmpsl
sbb
adc
fdivs
adc
movsl
popa
in
add
ret
mov
addr16
xor
shll
pushf
mov
push
push
xor
sub
dec
ss
jno
and
in
int
mov
pop
pop
push
inc
jmp
movsl
jmp
mov
shlb
push
adc
sub
mov
adc
pop
sbb
jge
test
int3
or
ror
int
and
stc
cs
jbe
dec
and
and
adc
and
test
insl
shrl
jnp
push
in
std
popf
inc
aaa
xchg
xchg
imul
adc
mov
sub
xor
rcrl
mov
loopne
push
fimull
pop
stos
jne
cmpsl
pop
sbb
outsl
mov
out
cli
lods
mov
loope
out
aas
jmp
repnz
mov
cld
mov
lock
push
bound
scas
inc
xchg
jmp
aam
jp
fsts
data16
pusha
inc
xor
or
dec
or
daa
out
les
inc
sbb
loop
cmpsb
sbb
adc
loope
insb
int3
xor
jns
clc
mov
movsl
hlt
mov
fwait
pop
test
inc
aaa
popa
add
lahf
mov
shll
push
mov
dec
repz
fldcw
push
dec
push
data16
pop
jo
repnz
stos
jecxz
les
mov
xchg
nop
push
stos
mov
xchg
mov
cmpb
fs
adcl
stc
ss
pop
sbb
fldl
jecxz
iret
mov
sti
sbb
daa
or
int
subl
jne
ja
out
adc
push
jmp
mov
aam
xchg
xor
push
mov
fcomps
adc
adc
inc
mov
sbb
pop
and
dec
push
shlb
js
cld
cmpsb
sub
adc
or
cwtl
pop
nop
sub
xchg
xor
pop
push
sbb
pop
sbb
sub
push
lahf
jmp
add
outsl
xor
dec
mov
fsts
mov
inc
shlb
pop
loop
sbb
inc
dec
sub
fucomip
je
adc
lock
movsb
ds
out
add
rolb
sub
out
sbb
and
mov
xchg
adc
mov
cmpsl
inc
dec
pop
sbb
fs
dec
dec
jmp
jae
xlat
aaa
lret
ljmp
or
fldl
inc
scas
adc
daa
sbbl
pop
or
pop
adc
fnstcw
jbe
pop
jmp
dec
scas
pop
pop
ds
xchg
pusha
push
mov
test
mov
test
outsb
rcll
fs
imul
ja
jmp
mov
popf
test
add
add
dec
fs
push
pop
je
in
push
iret
lahf
sub
cltd
sub
or
lds
xchg
icebp
testb
xlat
lea
cmp
int
lret
repz
aam
insb
inc
inc
dec
je
mov
je
lahf
push
push
push
add
jne
test
aam
dec
mov
push
sub
xor
repz
lea
out
xchg
add
sti
mov
notl
jo,pn
and
pushl
pop
cld
leave
movsl
in
negl
and
clc
out
stc
loop
jo
das
test
popa
mov
scas
call
ljmp
lret
in
inc
pusha
cwtl
ja
in
int3
mov
sub
ret
popa
fwait
push
mov
subl
sub
dec
std
fldcw
sub
fsubrp
jbe
xchg
aam
test
xchg
push
sahf
in
into
stos
sahf
popa
adc
or
dec
or
inc
adc
inc
xchg
jge
stc
lds
pop
movsl
sub
out
mov
nop
mov
repnz
push
xchg
mov
lods
data16
cltd
mov
andl
xchg
cmc
xchg
ror
pop
jae
stc
imul
sbb
and
scas
loope
push
pop
out
jbe
ja
mov
cs
mov
decb
iret
xchg
dec
aad
dec
mov
jmp
jae
and
dec
inc
cmp
and
cmp
cs
dec
xor
mov
mov
sub
cmp
sbb
sti
mov
push
popa
cmp
mulb
mov
push
fs
jmp
mov
cwtl
lret
pusha
cmp
test
xor
mov
scas
pop
sahf
clc
push
psrld
mov
pop
lret
mov
mov
inc
loop
mov
mov
sub
movsl
xor
sbb
xchg
fiaddl
push
fwait
and
cmp
imul
leave
jno
imul
dec
fadds
pop
cmp
daa
jne
mov
inc
hlt
div
pop
and
dec
inc
stos
das
outsb
popf
cmp
push
sbb
jl
jge
mov
sub
rcll
cmp
push
jnp
xchg
outsb
inc
cmpsb
mov
ljmp
enter
dec
mov
jb
pop
add
subl
mov
cmp
jl
sbb
leave
xchg
lods
add
popf
aas
xor
sti
fs
add
dec
or
mov
pop
out
mov
mov
pop
ja
and
addr16
in
xchg
push
cmp
adc
xchg
dec
mov
pushf
xchg
mov
rcl
dec
ficoms
shll
and
inc
mov
repnz
aam
popa
and
clc
fistl
mov
lahf
dec
out
daa
das
pop
inc
mov
repz
fiaddl
and
ret
sbb
xchg
mov
bound
fwait
xchg
int3
imul
xor
sbb
mov
and
icebp
pop
jnp
mov
jecxz
dec
leave
dec
mov
push
lea
addr16
mov
out
aam
adc
aam
daa
mov
push
popa
fcmovbe
pop
sar
imul
mov
jmp
mov
inc
mov
sub
jno
int3
mov
inc
xor
int
pusha
in
dec
movsb
outsb
das
test
neg
cmp
push
outsl
ja
xchg
push
mov
sbb
in
stos
jno
ljmp
mull
test
sub
fldcw
inc
pop
sbb
adc
pusha
inc
sbb
mov
xchg
mov
jp
inc
ja
in
in
mov
movsl
lahf
lret
jno
push
loope
mov
gs
jl
insl
push
call
add
mov
out
and
fimull
popf
lds
call
popa
jg
pop
pop
stos
sbb
mov
dec
push
xor
test
jns
or
mov
add
test
je
inc
loopne
scas
in
sbb
sti
aas
jae
divl
je
xor
jl
xchg
and
cmp
in
dec
aaa
push
push
fidivl
cwtl
xor
pop
fisubl
scas
daa
lds
and
lret
inc
inc
pop
mov
jmp
jbe
pop
push
dec
in
addr16
cwtl
das
das
push
fucom
push
fwait
les
jl,pt
stos
sub
add
shlb
xchg
cltd
out
out
sar
out
loope
or
jno
fwait
dec
jmp
es
sbb
mov
ds
or
cli
bound
lock
mov
fmuls
clc
pop
mov
aaa
mov
xor
shl
aaa
xchg
shlb
add
sub
sbb
jae
mov
jecxz
dec
mov
and
sub
roll
add
loope
test
mov
test
dec
pop
outsb
insb
repz
cmpl
or
in
mov
cwtl
popf
mov
dec
add
ret
cwtl
add
mov
faddl
fnstcw
sbb
sbb
xchg
jae
lret
push
xchg
das
mov
lock
aaa
inc
out
add
adc
dec
cmp
mov
and
mov
aaa
gs
add
mov
nop
popa
stos
sarb
test
mov
loope
jg
leave
fildl
les
jmp
dec
inc
xchg
or
mov
pop
push
fisubl
push
bound
loop
shlb
jl
xor
dec
ss
call
hlt
mov
out
pop
cld
add
test
jp
xor
call
push
and
sbb
insb
sbb
mov
iret
dec
sub
xchg
mov
icebp
cmp
arpl
pop
add
mov
cwtl
dec
add
rcrl
xor
aaa
aad
sub
pushf
inc
xor
out
mov
sub
xchg
stos
ja
jnp
pop
xor
and
mov
scas
inc
adc
mov
cmc
and
cmpsb
bound
cld
popa
or
call
jns
stos
stos
mov
and
mov
mov
mov
hlt
fdivs
sbb
mov
hlt
out
scas
sbb
xlat
xchg
popa
pop
cmpsl
inc
inc
rcrl
jecxz
rcrl
fninit
repnz
cmp
ret
out
scas
sbb
scas
test
adc
sbbb
aas
xchg
pushl
and
jp
loopne
or
mov
xor
test
or
xorb
and
pop
pop
bound
pop
sub
xchg
sbb
pushf
mov
pushf
shl
fwait
test
mov
jg
popf
lods
fcomps
clc
das
dec
out
nop
in
lods
insb
push
loop
sub
aam
mov
lds
mov
aaa
in
insl
pusha
stc
int
inc
lahf
xor
mov
fnstenv
jno
mov
or
jnp
cs
mov
rcr
jp
mov
pop
inc
movsl
iret
mov
in
add
or
jnp
aaa
xchg
adc
call
mov
fnsave
xchg
mov
lock
mov
or
and
mov
dec
sbb
gs
adc
outsb
jo
mov
lret
enter
scas
sub
pushf
mov
fldl
aam
pusha
push
dec
fimuls
sub
mov
sub
push
mov
sbb
mov
or
test
adc
hlt
iret
jecxz
add
pop
cs
mov
push
pop
dec
fisttpl
jecxz
inc
cmpsb
cmp
mov
roll
dec
dec
xchg
mov
movsb
jbe
lret
cltd
imul
inc
int3
xor
roll
out
cmpsb
lahf
cmpsb
xor
xchg
out
out
xchg
ljmp
shl
sbb
push
addr16
not
jns
into
stc
and
mov
fnstenv
cmp
jne
lret
adc
add
mov
lods
xor
fbld
push
cmp
or
jl
cmpl
lds
sbb
xor
adc
out
or
into
je
fs
mov
sub
sbb
and
popa
sub
lret
loope
cs
cmp
mov
pop
mov
sub
movsl
js
jmp
xchg
orl
mov
mov
aad
inc
dec
ret
test
jne
out
xor
adcl
shlb
aam
stos
andl
push
dec
pop
pop
cmp
in
rolb
idivb
cld
add
insb
lahf
pop
loop
rcll
stos
fidivl
out
std
and
pushf
js
lahf
loopne
lahf
rolb
int
or
loopne
daa
fsin
rorb
inc
in
mov
add
or
add
sub
movsl
sti
pop
leave
les
push
mov
mov
mov
lret
cmp
jmp
mov
xchg
insl
jl
bound
cmp
dec
sub
mov
mov
scas
cli
xchg
pop
xchg
inc
cmc
pop
outsl
adc
clc
out
lret
adc
xor
xor
dec
jecxz
mov
push
test
std
jl
push
or
inc
jbe
pop
and
divb
xchg
jnp
adc
jbe
xchg
sub
jo
dec
push
inc
mov
pop
mov
xor
mov
test
test
decl
cmp
jge
repnz
mov
dec
lahf
and
fisubrl
pusha
xor
movsl
mov
imul
out
movsl
jecxz
jbe
mov
cmp
daa
cmp
jle
cmc
outsl
cmp
imul
push
push
insl
out
imul
jnp
sub
xor
and
pop
jae
lds
andb
out
popa
in
fistl
in
xchg
inc
cwtl
mov
pop
push
sub
popf
or
fstps
enter
mov
mov
je
xor
mov
inc
mov
lds
cmpsl
xor
jno
or
adc
stos
add
sbb
pop
pop
aad
ret
and
adcl
ror
mov
fldcw
icebp
arpl
add
movsb
movsb
and
xchg
ret
cmp
mov
shlb
add
jecxz
inc
lds
pop
rol
inc
jbe,pt
push
pop
fisubs
outsl
repz
nop
sti
jne
push
fwait
xchg
stos
out
and
mov
fsubr
ficompl
jo
movsl
imul
jle
push
pop
mov
fstpt
mov
daa
fcompl
test
fcoml
adc
loopne
push
pushf
sbb
sbb
sub
adc
out
loop
in
mov
test
loopne
jg
or
jl
push
mov
decl
inc
mov
je
inc
enter
hlt
mov
filds
mov
xor
xchg
mov
popa
adc
jnp
rcl
jge
ja
rolb
out
mov
xchg
xchg
scas
lods
out
shl
push
fisubs
mov
insb
adc
add
call
negb
or
mov
sub
inc
jmp
push
mulb
es
jmp
loope
jbe
push
sbbb
test
test
push
pop
cmpb
sub
loop
rcll
cmp
or
icebp
cmp
js
xchg
push
pop
add
fiaddl
cltd
push
pop
mov
pop
xor
xchg
or
nop
aam
push
out
add
fisubl
mov
sbb
gs
or
mov
mov
and
dec
int3
pop
sbb
loopne
das
jno
ftst
and
push
dec
jecxz
xchg
or
mov
pop
mov
ljmp
sub
mov
cmp
les
loope
cld
add
test
or
and
xchg
mov
push
loope
in
dec
scas
andb
cmpsb
xchg
jle
not
scas
cli
sub
test
adc
xchg
jnp
xor
adc
pop
out
dec
cmp
fcoml
inc
cs
and
and
in
sbb
adc
mov
js
adc
inc
fnstsw
inc
pop
hlt
notb
jp
mov
or
iret
loope
test
mov
inc
mov
enter
aaa
or
jne
xor
mov
mov
push
jmp
xchg
add
and
rolb
repz
lds
and
shrb
mov
cwtl
sbb
pop
int3
js
std
push
ja
icebp
ljmp
pop
ret
popf
lahf
mov
xor
add
or
mov
imul
scas
ficoms
fbstp
lret
mov
xor
insl
out
ja
mov
lods
add
sub
lret
fsubrl
shll
ret
push
mov
mov
stc
mov
test
imul
mov
into
lods
pop
test
xchg
add
test
movl
cmp
rcrb
sub
pop
jns
or
add
hlt
xor
jne
adc
pop
mov
test
inc
jnp
fldl
push
test
xchg
cmp
sub
pop
push
cmp
bound
sbbl
mov
inc
xchg
shl
cmp
push
inc
xor
mov
push
andl
sub
inc
rorb
fcomip
inc
fs
xchg
mov
std
mov
xor
arpl
mov
fcmove
andb
sub
xor
dec
iret
or
rcl
cli
inc
sbb
mov
mov
adc
xchg
mov
shrl
incb
test
outsb
scas
ja
cmp
and
mov
sarb
hlt
mov
inc
jmp
lret
test
stos
sbb
scas
sub
scas
icebp
and
shrb
adc
fs
xorb
out
stos
int3
mov
jae
mov
sub
roll
test
mov
jae
je
aaa
mov
js
fs
aaa
jecxz
scas
test
stc
cmp
sti
addl
pusha
add
cs
in
out
cmpl
es
and
scas
mov
xor
ja
push
and
lock
jge
inc
das
outsl
iret
inc
push
adc
xchg
outsl
loope
es
sbbl
inc
xchg
cwtl
lea
cmp
stos
or
or
movsl
pop
mov
mov
add
in
mov
adc
lock
mov
lret
lock
outsb
lret
inc
add
sbb
push
lcall
pop
js
cli
fcmove
and
in
push
aaa
pop
dec
imul
xchg
je
fdivr
loop
push
ja
repnz
inc
mov
jns
inc
sub
sub
orb
add
in
inc
sub
std
pop
adc
adc
mov
mov
mov
add
cwtl
cwtl
push
test
mov
cmp
push
dec
pop
pop
sub
xchg
fsts
decl
push
les
add
cld
pop
dec
sub
dec
shll
mov
imul
and
cmp
pop
pop
cld
adc
stos
mov
loope
mov
push
testl
shlb
stos
pop
nop
dec
adc
mov
loope
push
scas
mov
fisubrs
cmp
out
fadd
sub
icebp
jecxz
and
push
mov
mov
sbb
push
mov
cmp
jmp
mov
sbb
dec
mov
es
jns
ret
test
or
jne
dec
in
shlb
or
xchg
les
sub
add
fists
outsb
push
jg
lahf
jns
fstps
call
repz
out
movsl
sbb
xchg
mov
int3
std
mov
sbb
aam
sbb
or
in
adc
and
dec
cltd
dec
out
sbb
int3
in
push
sti
mov
outsb
je
push
xor
cltd
xlat
call
fwait
jle
adc
mov
movsl
pop
cmp
adc
fildll
nop
out
mov
push
in
cmp
icebp
xlat
mov
cli
mov
mov
or
cmp
test
xchg
insl
jno
rol
mov
ret
xchg
notb
lret
mov
ljmp
xchg
xchg
jmp
test
push
fsubrl
shll
sub
cmp
mov
shrl
pop
ret
enter
gs
xchg
xchg
les
inc
outsb
rolb
push
fst
out
jg
ds
sbb
push
or
or
imul
cmp
mov
sbb
adc
jp
ja
sub
mov
icebp
fisubrl
out
fisttps
pop
lock
jle
stc
mov
pop
repz
cmp
dec
inc
fucom
xchg
pop
loopne
xor
mov
xchg
sbb
xchg
push
jp
dec
lock
lahf
cmp
mov
or
aas
out
ds
mov
ja
lea
insb
subb
xchg
cld
add
xchg
mov
jbe
jmp
jo
arpl
addb
in
mov
jne
xchg
pusha
add
jnp
mov
insb
hlt
pusha
mov
xchg
mov
push
xor
pop
lret
mov
out
lret
sub
je
bnd
jo
cld
rorl
cmp
pushf
aad
rol
sub
sbb
cltd
or
dec
push
add
mov
sub
fcom
xchg
test
aam
arpl
jp
in
adc
scas
inc
fiadds
lret
ldmxcsr
mov
nop
cmc
or
data16
inc
test
dec
jg
inc
fdivr
push
cmp
fcomps
es
test
or
enter
cmp
sti
ljmp
dec
jnp
xor
movsb
sti
std
scas
dec
insb
cs
push
push
dec
in
outsb
imul
rcl
add
pop
aas
int3
int3
jmp
negl
fs
enter
cmp
inc
repnz
dec
in
and
sarl
inc
into
pop
pop
mov
int3
inc
pop
dec
cli
pop
out
bound
mov
and
es
cmp
mov
jb
mov
cmc
sub
cmpsl
fwait
mov
loopne
aam
sub
push
and
and
lea
fnstenv
lods
cwtl
and
jmp
sbb
subl
pop
cmpsl
mov
int
mov
lea
ja
notb
insl
xchg
stc
mov
nop
outsl
cli
sti
insb
push
sub
or
lods
and
pop
xor
ljmp
arpl
out
das
jne
add
cmp
inc
mov
insl
js
cwtl
adcl
adc
fs
sbb
xchg
mov
add
adc
clc
xorb
dec
clc
or
cwtl
pusha
lea
xor
popa
scas
push
adc
pop
scas
xchg
rcl
lds
mov
inc
lret
mov
cmpsb
rclb
out
outsl
scas
loope
add
sahf
pop
gs
mov
jge
jo
xchg
xchg
xchg
sub
cmp
pop
adc
mov
cmp
dec
sub
sbbl
stos
adc
lock
movl
mov
aaa
push
test
adc
iret
and
inc
cld
add
push
and
pop
test
mov
jo
xor
das
xchg
js
shll
jmp
mov
shlb
mov
sbb
ret
pop
jb
adcb
aad
addr16
mov
sbb
adc
mov
dec
je
bound
pop
or
cmpsb
sub
mov
jae
mov
mov
pop
std
arpl
mov
xchg
or
xchg
cmp
out
movsb
mov
and
pusha
test
xor
or
cmpsl
movsb
stos
out
das
dec
gs
call
iret
hlt
repz
xchg
jg
sbb
pop
pop
rclb
sub
icebp
xor
test
adc
add
ret
or
dec
ja
mov
enter
scas
imul
adc
jg
imul
cwtl
imul
cmp
out
and
pop
or
outsb
add
mov
cmp
jle
cmc
mov
js
test
jo
push
mov
movsl
out
hlt
pop
mov
bound
repz
in
outsb
add
shll
dec
push
shrl
imul
sbb
pop
fists
push
and
bound
xchg
in
jmp
arpl
jle
scas
insb
lahf
pop
icebp
push
xchg
pop
jmp
mov
cmc
xor
jo
imul
sbb
and
cwtl
pop
push
dec
add
xchg
out
xor
into
or
cld
lcall
in
lcall
and
gs
xchg
mov
aaa
aaa
cmpsl
jecxz
mov
pop
pop
lcall
xchg
lcall
mov
rorl
aad
and
push
lcall
sub
pop
in
pop
mov
dec
mov
fnstenv
in
push
jnp
mov
xor
dec
inc
sub
xor
stos
cmp
pop
int3
mov
add
fistps
and
imul
dec
dec
dec
leave
in
adc
repnz
jae
mov
lock
loope
in
xchg
fidivs
cld
pushf
cld
aam
pop
jns
shll
pop
and
mov
cwtl
mov
push
mov
lds
aad
mov
mov
mov
push
mov
cmp
dec
cmpl
test
xlat
ret
jae
inc
jge
dec
ret
jecxz
es
mulb
mov
cmp
push
xchg
mov
cltd
imul
mov
mov
addl
adc
gs
testl
outsl
xchg
xchg
iret
inc
mov
jo
mov
xor
and
fwait
sar
dec
ds
rcr
jge
xchg
adc
mov
jp
ja
lock
cmpsl
pop
or
mov
mov
repz
push
lds
pop
sub
out
or
push
mov
xchg
adc
jle
and
adc
xor
fucomi
pop
addr16
xor
test
cmpsl
mov
sbb
push
out
mov
mov
loopne
aaa
pop
jo
lret
in
lret
push
mov
jmp
fildll
mov
add
popa
aas
pop
fwait
decl
jae
inc
enter
add
or
mov
fdivp
jo
pushf
out
mov
jmp
xor
pop
bound
fidivs
call
leave
test
pop
add
inc
imul
sbb
jg
add
pop
addl
push
xchg
mov
insl
mov
jnp
mov
xchg
insl
outsl
mov
fsubrl
or
es
lret
mov
mov
pop
mov
mov
mov
leave
cmc
faddl
repnz
rcrl
loopne
sub
test
or
jb
leave
jbe
mov
add
mov
xor
add
pop
cmp
in
and
dec
rcl
rcrl
sub
pop
xor
pop
shll
mov
orb
out
push
mov
push
stos
in
mov
in
or
pop
or
cmp
test
fiaddl
fucom
mov
push
popf
sarl
int
xchg
xor
mov
add
sti
xchg
inc
aad
sbb
jp
cmp
mov
mov
popl
cmpsb
pop
lcall
dec
jp
jp
inc
out
sbb
shll
cbtw
xchg
adc
outsl
xor
mov
cmpsb
push
sub
mov
imul
mov
sbb
mov
sub
shl
sbbb
mov
dec
jbe
add
movsb
movsb
test
insb
lret
lods
jb
inc
in
and
fsubrs
adc
nop
jno
call
cwtl
pop
mov
and
dec
pop
xorl
divb
cmp
insl
push
aas
adc
mov
mov
ret
mov
adc
mov
iret
mov
ja
push
jp
nop
mov
jo
jns
lahf
mov
push
fscale
rcll
sbb
sub
das
loop
test
add
in
dec
pop
repnz
icebp
imul
sub
pop
mov
mov
aas
pop
and
add
mov
pusha
pusha
call
xlat
jno
in
pop
pushf
pusha
aam
cmpsb
push
push
mov
ljmp
and
mov
movsb
cmp
and
xor
data16
xchg
and
loop
aam
cmp
pop
lahf
and
push
jg
add
jmp
mov
std
cwtl
mov
movb
fsubr
int3
insb
cmp
fbld
test
fs
mov
adcl
sbb
mov
ja
jmp
mov
mov
xor
enter
xor
and
pushf
into
jge
xor
push
and
mov
xor
fbld
push
jb
mov
sbbb
test
inc
sbb
and
rcrl
cmpsl
xchg
repz
mov
sbb
cmp
insb
pop
jl
and
lret
pop
pop
mov
pop
add
jl
imul
scas
and
sub
ljmp
jne
mov
xor
jge
mov
pop
or
out
mov
push
lods
sub
pop
addr16
mov
sbb
popa
shlb
pusha
xchg
add
hlt
js
add
sarb
mov
dec
ds
jmp
mov
mov
les
jmp
cmp
mov
sub
dec
les
idivl
fnsetpm(287
adc
xchg
mov
cmpsl
sahf
xor
dec
and
xchg
cmpl
pop
cli
cmp
dec
or
push
loope
testb
inc
cld
sub
inc
pop
repz
xor
add
fld
je
pop
imul
mov
aas
rol
clc
cmp
in
dec
fs
iret
cmp
xor
mov
and
shlb
xlat
mov
addl
lcall
fcmovu
test
lds
push
mov
stc
cmc
cmp
hlt
sub
popf
enter
sbb
jg
int
cmpsb
dec
pop
jecxz
dec
notb
jmp
mov
xchg
hlt
movsl
mov
std
add
mov
ljmp
les
ds
and
xor
jae
in
or
xor
imul
fadds
adc
push
dec
add
adc
push
jbe
leave
data16
shlb
mov
in
cld
adc
addr16
and
js
mov
xor
jns
cld
xchg
mov
add
lahf
mov
mov
adcl
pop
pop
mov
xor
cmp
xchg
pop
xchg
pop
sbb
inc
call
stos
jo
or
mov
paddsw
shrb
dec
cmp
cmc
imull
mov
rcrb
in
lcall
lods
lods
add
adc
cwtl
push
ljmp
push
mov
cmp
pushf
arpl
jl
sbb
cmp
sub
add
insb
sub
jp
stos
jl
test
cwtl
and
ret
call
mov
ljmp
movsl
or
mov
test
jl
insb
out
and
leave
sbb
pop
push
jmp
into
sub
sbb
sti
out
jecxz
sbb
sbb
xchg
ret
test
fcoml
inc
imul
or
fdivrs
hlt
xor
fisubl
jecxz
bound
jmp
loop
dec
sahf
xor
mov
xchg
mulb
fisttpll
lahf
popl
mov
cmc
js
and
in
scas
aad
inc
push
mov
pop
mov
mov
movsl
push
pushf
xor
nop
sub
dec
fistl
dec
fstps
mul
pop
inc
fidivs
and
jge
pop
xchg
add
inc
mov
push
inc
popf
icebp
mov
je
mov
cmpsb
mov
mov
lahf
cmpsl
sub
aas
push
ficoml
mov
dec
or
iret
movsl
mov
mov
dec
jecxz
xchg
clc
fstps
out
jne
sbb
sub
movsb
mov
sbb
outsb
ss
mov
leave
push
dec
push
mov
ljmp
out
insl
mov
lret
rol
fidivs
jge
mov
addr16
pusha
sahf
movsb
or
and
ds
jno
pop
stos
mov
sbb
jb
loopne
mov
adc
jecxz
pop
lock
cltd
or
xchg
adc
js
fists
pop
ljmp
inc
mov
xor
rcl
and
pop
inc
rcl
outsb
cs
leave
mov
inc
xor
adc
xchg
lods
scas
inc
in
lods
out
rclb
fwait
rorl
jge
mov
add
dec
movsb
mov
sbb
sub
sbb
hlt
mov
push
repz
inc
imul
dec
loope
push
xor
stos
push
pop
jge
testb
mov
frstor
aam
mov
xchg
sbb
jecxz
adc
xchg
shrb
rcl
testb
je
bound
and
xchg
xchg
pop
jb
fstpt
in
aam
imul
mov
inc
xor
imul
jg
push
inc
jnp
pop
and
in
push
mov
ss
lds
insl
cltd
xchg
je
jge
dec
nop
std
iret
mov
gs
sbb
ret
mov
cmpsb
mov
cli
mov
cwtl
in
stos
jl
in
fimull
call
jnp
sbb
int3
ret
cwtl
dec
xor
push
test
lahf
subb
xlat
cmp
rorl
jecxz
mov
aad
stos
pop
test
outsb
andl
jne
into
jae
or
or
mov
dec
adc
dec
int
xor
test
dec
out
push
mov
xor
mov
jg
mov
enter
jae
and
pusha
in
mov
in
ljmp
or
push
push
negl
mov
jae
std
mov
pop
adc
sub
cwtl
testl
mov
push
inc
pop
scas
in
mov
inc
out
repnz
js
in
inc
jb
and
cli
aam
neg
xchg
mov
xchg
inc
add
pop
movsl
les
lds
orl
nop
push
iret
push
jmp
sub
lret
add
cmpsb
mov
push
cwtl
adc
pop
pop
mov
adc
adc
addb
pop
jno
adc
inc
outsb
mov
sbb
pop
jns
and
aaa
xchg
dec
inc
daa
loop
pusha
dec
cmpsb
inc
lret
mov
mov
insb
addr16
cmpsl
inc
fwait
xchg
mov
movsb
cmpsl
psllw
adc
cmp
popa
repz
popf
push
call
imull
pop
test
mov
inc
js
sub
mov
dec
test
mov
test
jl
push
into
mov
imul
inc
mov
insb
pop
push
jl
ljmp
jb
sbb
xchg
scas
cmpsl
rcrb
rcll
cmp
hlt
xchg
mov
xchg
fsubrs
xchg
xchg
mov
clc
cli
shr
pop
fnsave
add
imul
cmp
cwtl
cmp
std
jle
out
jmp
adc
mov
and
pop
sbb
dec
fbld
movsb
bound
push
imul
or
add
les
sbb
mov
cwtl
jle
inc
jb
mov
xor
sbb
cmpsb
dec
or
out
sbb
out
add
push
roll
mov
push
cmp
out
or
pop
lret
mov
push
pusha
ds
sbb
pop
repz
xor
push
cltd
xor
xor
sbb
push
jmp
in
and
mov
inc
scas
cmp
add
dec
push
and
fiadds
outsl
leave
push
lea
sub
inc
mov
cmp
adc
dec
daa
xor
scas
mov
test
jb
arpl
adc
in
jmp
xchg
sub
inc
aam
sub
mov
loope
call
mov
insl
mov
inc
or
popf
test
sbb
push
data16
stc
jno
add
jne
jge
or
sbb
cmp
scas
jmp
shlb
je
cli
pop
push
mov
das
dec
nop
outsb
stos
inc
fwait
push
mov
rcrw
mov
daa
fiaddl
loopne
add
stos
stc
loop
jbe
aaa
push
stos
int
cmpsl
add
push
push
pushf
les
push
or
aam
cli
neg
mov
sbb
or
lret
xchg
add
push
rorl
dec
sbb
outsl
je
addr16
aaa
sub
cli
dec
roll
test
cli
adcb
sbb
inc
or
add
cmp
lret
pop
incl
ss
lret
pop
sub
cmpsb
mov
pushf
jne
cwtl
cmpsb
mov
cmpsb
mov
mov
sbb
mov
cmpsb
ficoms
jp
push
and
add
fidivrl
out
call
arpl
prefetch
sbbl
gs
dec
pop
std
test
pop
add
inc
xchg
enter
adc
cmp
loope
and
mov
xor
add
test
out
add
jmp
adc
push
lcall
cmp
addr16
cmpsb
jbe
pop
cmp
lds
insb
mov
stos
inc
ja
sub
jns
inc
xchg
inc
pop
xor
and
int3
push
in
stc
cmp
mov
insb
stos
das
push
mov
movsl
test
mov
or
daa
in
xchg
push
cwtl
imul
insb
fdivrl
push
std
aaa
negb
cmp
adc
fbstp
es
cmp
negl
movsb
jge
mov
adc
clc
popl
inc
pop
imul
cmp
movb
add
sbb
sbb
xor
ljmp
icebp
pop
or
aaa
stc
in
loopne
stc
icebp
outsb
lcall
sbb
dec
mov
mov
xor
lcall
or
sti
jo
xor
mov
imul
ss
lds
jne
push
sbb
add
into
das
mov
xor
lret
shl
and
pop
adc
aas
or
sub
push
cmpsb
ds
repz
mov
xchg
sub
mov
xlat
mov
and
stos
addb
xchg
mov
shlb
cmp
fstl
jecxz
test
je
out
into
repnz
dec
outsb
gs
cmp
push
jns
lret
bnd
ss
ds
outsl
repnz
ret
push
orb
test
or
sub
loope
int3
fists
xor
cmpsl
pop
xor
frstor
sti
aas
pop
enter
sub
jnp
push
sahf
cmp
in
sub
push
nop
add
hlt
or
sub
xlat
push
xchg
and
ljmp
ds
lea
mov
call
fists
pop
push
cmp
dec
scas
test
enter
inc
mov
sub
mov
or
ljmp
notl
iret
shll
jnp
fucom
out
jae
push
dec
ljmp
pop
xor
out
and
in
cmp
push
sbb
lods
in
lea
inc
cmp
mov
or
or
in
lods
add
add
cld
clc
jno
jge
mov
jnp
les
dec
xchg
push
loope
xor
adc
test
cmpsb
lea
out
xchg
pop
cwtl
mov
lahf
aaa
adc
lds
sahf
or
inc
push
mov
inc
mov
cli
sbb
insl
leave
sbb
and
mov
xor
scas
icebp
inc
loope
sarb
mov
ffreep
insl
xchg
pop
mov
add
jae
in
mov
cmp
lods
pop
adc
aad
mov
aas
iret
ret
outsb
push
dec
or
and
fists
movsb
mov
fsts
sahf
inc
mov
dec
xchg
out
call
push
lds
outsl
pop
fmuls
leave
dec
orb
mov
lds
popf
int3
push
leave
fisttpll
stc
inc
fs
gs
fs
add
or
ds
lret
add
mov
fmull
gs
push
into
fsubl
daa
emms
and
sbb
jmp
push
lock
xor
pop
inc
gs
xchg
rcrl
sbb
xchg
push
and
mov
jl
test
xchg
jle
push
inc
popf
hlt
pusha
popf
push
rcrb
insl
or
es
stc
push
test
pop
jb
adc
pop
out
and
sbb
adc
sub
ljmp
shll
in
imul
pop
cmp
and
sbb
hlt
insb
cmc
jge
cmp
xchg
test
adc
ss
fs
mov
mov
je
mov
idiv
mov
stos
lret
add
sub
jge
add
mov
pop
test
pop
cwtl
ret
stos
adc
fstl
xor
fxch
in
stos
lcall
inc
sbb
cmp
in
xor
pop
jbe
inc
mov
int3
lret
mov
xor
cs
jb
mov
pop
test
fiadds
shl
sub
cmp
inc
cmp
in
inc
int
icebp
fsubrl
bound
arpl
hlt
inc
jns
daa
push
jmp
inc
mov
push
ret
jp
stc
push
shlb
js
dec
scas
push
mov
gs
jnp
push
decb
jno
enter
sbb
sub
jmp
xor
mov
sbb
movsb
cld
push
or
cmp
sub
test
adcl
cmpsb
adc
mov
fcomp
scas
xchg
sub
dec
push
lods
and
iret
or
ret
jno
mov
add
pop
std
inc
or
data16
or
add
aas
icebp
jno
insb
push
out
xchg
scas
pop
ret
or
inc
insl
incb
jle
popa
inc
loopne
push
pop
loopne
nop
cld
mov
jno
or
xchg
je
stos
shlb
xor
mov
in
loope
jp
xchg
mov
xchg
xlat
insb
dec
call
shll
pop
fldt
jle
dec
pushf
xchg
shrl
stos
jp
pop
lcall
hlt
pop
sbb
jbe
stc
idivl
cmpl
aad
adc
cs
inc
jae
popf
test
out
mov
push
leave
mov
pop
mov
mov
or
shll
mov
and
in
push
mov
inc
dec
lea
repnz
push
mulb
and
xor
dec
aaa
and
ffree
push
bound
icebp
or
je
push
dec
rcll
out
and
inc
inc
add
ret
pop
int
shr
sahf
and
push
test
push
lods
imul
sbb
mov
ret
xor
movsl
cmp
xchg
in
loope
cmp
xchg
jae
ret
jnp
mov
mov
adc
in
xor
xor
xchg
std
sbb
js
adcl
fimuls
mov
dec
fcmovnb
mul
inc
ljmp
jnp
outsl
push
cmpsl
sbb
je
mov
mov
xchg
dec
rcrl
mov
leave
dec
adc
xchg
lods
mov
push
scas
lods
mov
sbb
out
inc
jb
mov
punpckhdq
cmpsb
icebp
cli
mov
xor
arpl
dec
push
pusha
mov
enter
sarb
mov
push
jbe
test
mov
mov
les
jo
data16
lock
rol
cmp
jb
test
dec
xor
enter
cmp
jbe
stos
or
jo
or
mov
inc
ljmp
aas
mov
out
shrl
mov
cwtl
fnstsw
movsl
mov
pushf
mov
mov
jle
mov
lcall
cltd
inc
test
enter
jo
sbb
lret
jno
jl
dec
sbb
mov
ljmp
movsb
or
add
lret
sbb
push
dec
stc
dec
jl
add
sahf
into
dec
mov
mov
cmp
push
xor
loope
scas
pusha
scas
jne
repnz
cld
mov
rorb
push
popa
pop
jns
pusha
or
pop
pop
and
adc
in
pop
loopne
lods
leave
inc
xchg
clc
pop
mov
stc
ss
or
or
sbb
lods
and
jl
push
dec
lahf
pop
bound
mov
cld
cmp
xchg
subl
or
cmc
add
out
sti
cmpxchg
fcmovne
fcomp
mov
bound
inc
mov
sub
xchg
pop
jge
sub
popa
cld
call
jp
cmp
mov
lea
xchg
insb
stos
fs
adc
mov
insb
jge
jge
fbstp
and
sbb
push
cld
test
pusha
sbb
push
push
mov
leave
repnz
pop
repnz
xor
scas
mov
adc
in
dec
mov
push
mov
stc
loop
add
jl
mov
lret
test
cmp
and
sbb
out
lods
negb
addr16
shlb
adc
ret
and
or
mov
or
xchg
aas
ljmp
dec
or
cmc
test
and
idivl
adc
pushf
cmpsl
lcall
cmc
cltd
dec
jns
int3
cmp
push
jnp
pop
icebp
fisttps
dec
fsts
jae
mov
aas
arpl
jmp
mov
les
mov
cmp
dec
popf
or
adc
cmpsb
jbe
jmp
pop
pop
das
mov
pop
dec
adc
cltd
outsl
adc
mov
pusha
cld
xor
insb
popa
mov
xorl
push
push
xchg
add
cmpsl
inc
enter
jne
dec
inc
data16
loope
jne
shl
test
stos
ja
bound
notb
mov
or
push
and
mov
std
loopne
movsb
enter
mov
mov
lock
cli
leave
or
xorl
and
pop
ret
jne
leave
lret
ret
xchg
jge
repnz
loope
inc
jp
pop
shll
movsl
jp
sbb
out
cltd
mov
mov
jo
or
flds
xchg
sarl
sub
adc
call
pop
in
jb
xchg
mov
jns
push
dec
pusha
xchg
jnp
sbb
test
fsubrl
jbe
fs
xchg
push
loop
ds
mov
add
xor
cwtl
lods
inc
sub
fldz
mov
cmp
inc
cmpl
fisttps
fnstenv
jns
imul
cld
mov
or
adc
xchg
pop
xor
test
add
sbb
sub
xorb
xchg
loopne
fidivs
cmc
sahf
cmc
add
test
push
call
ljmp
sahf
mov
je
xchg
jmp
add
lret
cld
mov
mov
insb
mov
les
pop
imul
and
cwtl
push
xlat
or
jl
scas
jnp
mov
xchg
jb
iret
mov
xor
xor
cmpsb
out
dec
push
pushf
and
push
lock
mov
xchg
hlt
daa
hlt
je
cmp
jle
adc
or
mov
shrl
sub
adc
xchg
mov
push
jge
mov
fiadds
xchg
call
popa
sbb
insl
ret
xchg
jns
mov
pop
stc
pop
mov
ja
iret
mov
mov
pop
xchg
xor
mov
pop
adcl
ret
repz
scas
jnp
enter
cmpsb
cmpsb
mov
shr
cmp
enter
popa
movsl
shrb
cmp
popf
mov
xor
mov
sub
inc
lods
add
notl
arpl
or
ror
inc
push
dec
mov
pop
lods
negl
jo
sbb
hlt
sub
aas
mov
mov
outsl
inc
jp
test
cmp
adc
es
push
fwait
dec
rol
push
cmp
adc
push
cmp
cmp
insl
mov
inc
scas
sbb
ds
adc
outsb
sub
sbb
xor
jne
mov
or
push
adc
ret
imulb
xchg
mov
xor
popf
sbb
mov
mov
mov
xor
and
lahf
repnz
shrb
fsubrs
pop
jne
mov
cmp
cmp
out
std
mov
enter
push
mov
rcl
xchg
pop
sub
shll
dec
fdivrs
out
fwait
pop
cmp
fisttpl
mov
push
cmpsb
xchg
jg
jno
xchg
lds
mov
dec
mov
outsl
fwait
cwtl
clc
push
into
jb
lret
les
in
or
cltd
dec
push
and
lret
mov
dec
xor
xor
pop
dec
xchg
xchg
cmp
sbb
mov
fcompl
inc
pop
jp
idivb
inc
jnp
xor
into
jecxz
jmp
dec
push
push
outsl
hlt
push
add
mov
cmp
ret
out
and
sbb
mov
shll
sbb
sbb
ret
pop
or
fistpll
imul
enter
je
test
dec
sbb
lds
mov
mov
fcompl
jno
mov
dec
out
sbbb
mov
and
lcall
add
xor
in
js
jne
adc
ss
or
popa
les
jp
test
addb
inc
cwtl
aas
adc
icebp
sub
scas
shrb
sbb
lcall
lea
add
jbe
mov
movsb
fxch
jno
add
aad
adc
ds
dec
scas
dec
mov
or
dec
and
mov
jbe
lods
cmp
pop
lods
push
sbb
inc
out
sahf
add
push
inc
insl
xor
testb
icebp
pause
mov
mov
cmp
push
jbe
gs
mov
push
loop
repnz
outsb
repnz
in
bnd
pop
stos
scas
or
pusha
xchg
or
mov
xchg
lret
jge
pop
and
icebp
adc
testb
xchg
mov
inc
int
popf
add
aam
or
xchg
test
sete
cmp
in
inc
insl
mov
lea
and
add
fidivs
test
ds
lcall
nop
push
lcall
hlt
movsl
insl
mov
aam
lahf
xchg
jo
cwtl
jnp
fsubr
mov
jb
ret
insb
fdivr
stos
xchg
aas
rolb
js
mov
add
pop
jno
add
dec
pop
scas
jno
dec
gs
jae
lock
adc
and
pop
xlat
ficoml
push
inc
sbb
jecxz
pop
hlt
sbb
icebp
loopne
sahf
leave
pop
sbb
lods
lods
add
push
sar
inc
inc
aas
jne
jb
divb
aad
inc
mov
ljmp
ja
cltd
rorb
mov
sbb
sbb
mov
repz
pop
pop
or
xor
stc
xor
dec
mov
dec
mov
dec
dec
xor
xor
cmpsl
orl
jbe
pop
push
ljmp
xor
lock
jb
lcall
jae
shll
xlat
in
hlt
mov
sbb
sahf
roll
xor
add
rorb
cmc
inc
mov
rol
adc
mov
dec
shr
xchg
ljmp
pushf
pop
or
roll
je
and
mov
inc
adc
xchg
mov
xchg
mov
loopne
mov
adcb
jmp
push
adc
push
mov
cmpsl
jo
outsl
mov
fldcw
pop
sub
sbb
or
into
jecxz
or
xor
jo
test
ud1
jno
pop
sbb
lcall
sub
jae
clc
stos
xlat
xchg
aaa
repz
cmp
push
cltd
shrl
mov
fs
sub
daa
fsubs
dec
frstor
sub
xor
cmc
sub
fdivrl
pop
jno
mov
jp
repnz
lods
sbb
push
dec
test
int
cmp
pop
cmp
jnp
fdivl
jmp
subb
negl
fistl
enter
mov
jae
std
ss
lret
imul
inc
hlt
or
mov
and
enter
aas
adc
lcall
vpminub
xlat
inc
pushf
mov
dec
ja
dec
xor
popf
mov
mov
outsb
dec
jle
test
cmp
inc
fnsave
mov
mov
lret
ret
mov
mov
push
add
or
mov
std
jge
adc
sub
sti
mov
mov
cmpsl
cmp
sub
stos
aas
fisubl
pop
daa
push
sbb
dec
int
push
pop
add
pop
pop
ljmp
add
dec
and
adc
push
addr16
icebp
mov
jns
rorl
xchg
add
jge
mov
ljmp
jle
mov
outsb
sub
add
mov
cmp
pop
mov
dec
push
push
sbb
fiaddl
icebp
ror
push
cmp
icebp
stos
jge
sti
decl
out
ret
scas
testb
pop
stc
add
out
mov
arpl
sub
push
lea
add
fimuls
fdivrs
mov
lea
inc
enter
inc
andb
out
lock
push
pop
push
push
out
mov
xchg
mov
xchg
pop
iret
imul
subb
cli
ljmp
popf
test
xchg
cltd
ret
and
cmp
loop
out
add
mov
ljmp
and
sbb
popf
out
jns
mov
and
xlat
daa
cwtl
dec
mov
cltd
ret
aaa
jns
addr16
or
dec
xchg
cmpsb
jg
out
jle
mov
or
insl
xchg
xchg
in
and
mov
mov
popa
pop
push
or
lods
xchg
mov
popa
mov
mov
mov
rolb
pop
push
sbb
or
scas
add
fcomps
pop
jo
addl
lret
stos
fwait
movsl
jb
lret
mov
les
mov
je
lds
jo
out
pop
xchg
ljmp
sbb
inc
in
cmp
outsl
jnp
mov
xchg
repz
or
dec
je
sub
pop
push
fs
push
ret
mov
cmp
pop
xchg
or
add
daa
popf
inc
or
lret
lods
xor
movsl
testb
inc
sbb
clc
rcl
mov
add
dec
nop
test
out
sub
sarb
outsb
mov
test
jo
out
cmp
push
add
cmpsl
inc
mov
sti
inc
mov
into
mov
xor
out
push
push
sbb
push
pop
hlt
data16
movsl
jae
mov
jge
dec
push
mov
sub
leave
xchg
and
int
rorl
int
shl
jmp
dec
cmp
fnsetpm(287
sbb
lds
xorb
data16
adc
adc
lret
xor
pusha
and
sub
imul
cmp
add
popf
xor
add
ret
rcrb
xchg
mov
push
or
in
lret
jp
jg
inc
int
sbb
xchg
aam
cmp
push
mov
icebp
mov
dec
adcl
mov
ja
sbb
adc
pop
pop
or
inc
add
mov
mov
aad
inc
sub
mov
adc
sub
stos
ja
pusha
or
mov
in
sub
jmp
and
add
int
cmc
dec
mov
ficoml
jmp
push
sub
dec
sbb
fcmovnbe
mov
orb
stc
je
leave
mov
inc
jmp
push
aam
mov
bnd
enter
inc
popf
clc
inc
push
add
popf
jne
je
fstpl
stc
int3
xchg
mov
or
or
sbb
loopne
jno
inc
fldcw
mov
xchg
icebp
sub
mov
imul
jmp
inc
out
cmpsb
sbb
xchg
dec
push
mov
test
ret
std
mov
rcrb
or
mov
test
mov
rcll
out
jp
ljmp
jo
stc
mov
pushf
mov
adc
inc
clc
push
or
je
cmp
fimull
dec
dec
pop
test
or
dec
push
pop
sbb
mov
mov
test
pop
es
lahf
lahf
aas
mov
xorl
in
jb
bound
jp
out
push
push
inc
aas
add
clc
arpl
jle
out
leave
fistl
movsl
repz
repz
pop
aas
and
jns
and
xor
and
mov
popf
out
cli
repnz
add
cmp
mov
mov
outsl
adc
popf
push
xor
test
xor
cltd
inc
fistpll
int3
xor
adc
inc
and
add
jne
jg
mov
sub
pusha
mov
push
popa
push
dec
lret
repnz
and
fnstcw
fstps
mov
es
jb
jge
push
jo
test
or
push
test
dec
cmpsl
pop
xchg
xlat
mov
sbb
dec
ja
ror
inc
xchg
mov
push
xor
mov
clc
jo
push
mov
add
and
jl
jle
jmp
sbb
and
insb
xor
xchg
inc
xchg
pop
jge
and
pushf
lods
test
cmpsb
sub
sbb
movb
mov
hlt
hlt
lock
push
dec
cwtl
ljmp
pop
jl
mov
mov
je
sub
std
jae
ret
stc
enter
inc
loope
or
int
stc
es
rcl
into
es
sub
push
pop
ret
out
add
into
into
std
lods
outsb
mov
cli
mov
out
inc
xchg
xchg
push
fimuls
cmp
js
movb
jmp
es
lds
push
jns
add
decl
sbb
inc
nop
out
pop
fwait
test
cmpsb
test
test
fldenv
and
pop
inc
pop
jmp
pop
lret
flds
loop
sub
or
call
jno
xchg
mov
dec
jp
insl
sti
cmpsb
jns
insl
xchg
mov
cli
xchg
mov
test
inc
and
dec
inc
adc
arpl
dec
out
jecxz
loop
jg
sbb
add
aad
mov
add
sbb
lods
dec
stos
pop
jmp
dec
je
adc
mov
xor
out
or
aam
add
stc
or
push
in
scas
lahf
lock
adc
enter
sbb
xor
rcll
dec
xor
adc
jl
in
sub
jb
scas
xchg
xlat
inc
gs
aas
fldt
jge
mov
adc
popa
rcll
pop
add
bound
fimuls
mov
jmp
mov
mov
pop
mov
rorl
std
call
cld
arpl
fwait
xor
mov
lea
pop
push
test
mov
mov
repz
fistl
mov
dec
xchg
and
mov
mov
fucompp
jmp
stos
pop
shlb
or
test
jecxz
lcall
cmp
out
xchg
jle
fimull
loopne
ja
dec
pusha
xor
jb
pop
and
mov
stc
stc
clc
inc
inc
mov
cmp
out
inc
xchg
pop
movsb
push
movsb
mov
jge
imul
fiadds
ds
pop
add
flds
inc
ret
ret
mov
andb
ja
mov
nop
rcrl
sbb
jnp
dec
cld
aad
jge
lods
pop
pop
push
gs
sbb
xlat
push
in
cwtl
jle
test
push
shl
daa
imul
clc
es
pop
add
push
lcall
imull
xchg
popf
mov
push
lods
sbb
pop
nop
cmc
in
push
roll
leave
sbb
add
adc
cwtl
outsb
gs
inc
inc
inc
fs
add
jo
fistl
pop
adc
fwait
lcall
daa
jns
out
mov
dec
loopne
sbb
add
out
inc
and
sub
icebp
fsubl
std
push
jmp
ljmp
outsl
inc
daa
pop
fwait
sub
xorl
xchg
test
stos
repz
aas
fiaddl
or
pushf
jecxz
lahf
mov
sub
fwait
add
int3
or
inc
adc
sbb
xorb
push
mov
cmp
ror
test
lret
cmc
stc
push
and
and
sub
nop
rcrl
jmp
push
iret
mov
xchg
shl
nop
scas
div
in
popa
enter
sbb
add
sbb
sbb
sahf
sbb
sub
int
sub
mov
das
xorl
push
loope
adc
andl
mov
xchg
mov
xchg
add
stos
subl
mov
and
xor
mov
aaa
xchg
cmp
inc
xor
mov
add
andl
push
adc
fsin
sbb
and
cmpsb
push
test
iret
bound
inc
test
lds
dec
mov
imul
lock
push
pop
out
mov
addr16
stos
loope
push
mov
pop
ljmp
inc
addr16
lret
jp
cmpsb
int3
mov
test
das
xor
stos
mov
jae
out
mov
xchg
cmp
xchg
mov
lods
xchg
inc
xchg
ret
aad
aad
fwait
mov
lahf
adc
cmpsl
je
mov
repz
scas
or
cmpsb
pop
xlat
call
pop
mov
ss
inc
lea
mov
loope
ret
aam
jnp
push
sbb
xchg
jae
mov
push
into
push
out
add
cmp
xchg
movsl
xor
loope
out
inc
jae
xchg
jnp
mov
or
aas
out
ljmp
je
stos
xchg
dec
clc
cmpb
jge
data16
pop
mov
sbb
lods
lret
test
rorb
aas
xchg
push
jge
jg
aam
mov
outsb
push
call
lock
cmpb
mull
rorb
cmp
add
fiadds
mov
xchg
adc
xor
ss
das
insl
into
jno
pop
push
stos
or
movsb
xor
sbb
ja
loopne
sarb
enter
mov
lret
test
cltd
mov
pop
dec
mov
or
ss
xchg
lds
in
in
cwtl
pop
bound
mov
add
inc
inc
add
imul
ret
push
pop
shrb
int3
fbld
mov
xchg
xchg
xor
filds
frstor
adc
mov
xchg
xchg
imul
pop
jne
clc
mov
fildl
mov
sarb
call
and
pushf
insb
mov
xchg
ja
lret
lcall
mov
adc
sbb
stos
movsl
jns
sbbl
sti
push
les
xor
ror
mov
insl
adc
push
add
dec
insb
in
addr16
fstpt
inc
mov
jo
xchg
imul
shrl
shll
mov
fwait
push
fucomip
movsl
add
imul
int
jns
scas
inc
scas
mov
iret
nop
repnz
add
mov
mov
push
rcrl
adc
dec
aam
aas
out
jmp
test
lahf
pusha
shrb
pop
xchg
aad
lahf
lret
inc
shrb
mov
fsts
loope
outsl
cmp
out
loope
jecxz,pn
and
sbb
addl
push
mov
repnz
sub
sbb
popa
shll
jne
aas
mov
fdivs
dec
jno
sbb
enter
das
jb
add
fs
xchg
jb
fadd
mov
mov
mov
or
loopne
cwtl
sti
insl
ret
cli
in
imul
lods
sbb
adc
lcall
cmc
movsl
lahf
clc
outsl
mov
pop
fcmovnu
std
test
insb
pop
cmp
xchg
cmpsb
dec
movsb
inc
icebp
xchg
cltd
xchg
or
rcrl
fadds
sahf
push
dec
xchg
add
push
or
sbb
xchg
jp
cmp
out
adc
sub
jbe
pop
mov
adc
push
loope
lds
punpcklbw
cmpl
push
push
insl
xor
adc
into
lods
lahf
mov
push
cmp
ror
push
mov
jb
movsl
jne
std
test
sbb
and
outsl
mov
popf
lahf
out
or
shll
mov
int3
push
test
push
or
shrb
push
push
xchg
ret
inc
cmc
in
cmp
movsl
pop
aaa
stc
sarl
inc
add
xor
and
mov
dec
aam
push
jg
and
fildl
loop
ficoms
test
nop
arpl
ljmp
or
jb
inc
lahf
mov
clc
sti
dec
push
or
mov
xor
lock
ljmp
data16
sub
int
xchg
lret
imul
fsubs
lcall
cmc
lds
or
out
push
daa
dec
dec
les
cld
pusha
popf
pop
arpl
jge
nop
testb
rolb
push
inc
mov
imul
das
jnp
mov
sub
and
or
repnz
movsl
xchg
pop
pop
xor
nop
and
xor
push
sub
rcll
cwtl
inc
pop
mov
sbb
sarl
mov
nop
sub
lds
jnp
xchg
pop
cmp
sbbl
jl
sub
cmp
or
mov
aad
mov
xchg
jge
xchg
dec
dec
stos
std
test
and
pop
mov
xor
xchg
movsl
mov
pop
mov
pop
into
test
push
int
arpl
add
pop
and
or
and
jg
mov
push
popf
incl
loopne
cmp
sub
sbb
pop
jae
add
je
psrad
or
jp
imul
loop
adc
les
and
ret
imul
pop
cwtd
xchg
adcb
imul
das
fists
fwait
jns
out
loope
mov
dec
adc
loope
xlat
adc
mov
inc
leave
cmp
jecxz
pop
xor
aaa
testl
int3
inc
cmp
push
cmp
sub
mov
cwtl
data16
sub
insb
cmp
out
and
add
and
sarb
test
xorl
push
mov
mov
jp
mov
cmp
fs
inc
adc
pop
add
scas
testl
stc
gs
dec
dec
pop
push
mov
lock
xchg
xor
ret
clc
mov
fld
jl
out
out
aam
and
imul
loop
in
shll
dec
dec
aaa
sbb
insb
xorl
pop
sbb
or
pop
arpl
xchg
xor
mov
cmpb
sti
in
mov
push
mov
outsl
pop
fadds
out
mov
dec
ficoml
daa
call
rcr
lret
call
shll
xor
push
fisttpl
mov
out
call
stos
cmp
inc
sti
sti
icebp
mov
int
jp
mov
adc
das
lret
xor
adc
dec
andb
je
push
or
add
jb
jne
stc
lods
or
xchg
add
call
adc
lret
lahf
fs
movsb
dec
xlat
mov
cld
xor
sbbl
arpl
inc
cltd
dec
hlt
push
movsl
jg
and
bound
shll
lock
call
xchg
popa
sub
jg
xchg
cmp
xchg
jne
data16
shll
push
mov
into
out
insb
xor
xor
jbe
cmp
xchg
fistps
in
daa
daa
dec
out
popa
sub
in
cmc
and
sub
or
test
adc
mov
and
ja
xchg
imul
dec
fcoms
cmc
insl
aad
subb
and
mov
pop
mov
adcl
jne
cmpsl
mov
shll
push
adc
fisttpll
push
testb
pop
ja
stc
clc
jg
std
in
sbb
sub
cs
mov
jge
and
mov
inc
and
or
daa
pop
inc
leave
scas
mov
out
and
and
mov
enter
fdivrs
ja
jl
lahf
pushf
out
or
xchg
push
cmc
ret
push
das
or
cmpsl
nop
popf
mov
lret
or
stos
shrl
and
sbb
xor
pop
mov
lods
sub
mov
dec
cmp
jle
jns
push
mov
mov
int3
std
loopne
ret
push
pop
call
and
xorl
add
xor
jmp
leave
mov
cmp
fidivrl
std
scas
scas
out
jne
dec
punpckhwd
fwait
call
test
adc
dec
cli
stc
aaa
add
into
add
aam
jmp
repz
ret
popf
mov
aaa
inc
lods
sbb
mov
repnz
sar
cmpsl
adc
pop
jge
inc
scas
mov
and
cmp
push
adc
ffreep
popaw
mov
test
out
sub
je
pusha
aas
or
mov
inc
mov
ljmp
sbb
cld
dec
aad
pop
jmp
cmp
rolb
sbb
add
scas
aam
xchg
sbb
jns
js
push
push
xchg
fisubrs
paddsw
dec
mov
addr16
notl
push
fidivrs
xor
mov
cmpb
cli
les
mov
jne
sub
mov
jl
adcl
test
xor
and
insl
pushf
aas
xor
jle
in
mov
and
ficompl
or
es
cwtl
cmp
test
lcall
sub
sbb
addr16
test
cli
xchg
sti
push
notb
nop
ror
xor
fdivs
inc
mov
adc
xor
mov
mov
mov
movsb
into
push
daa
pop
sub
lock
xchg
lods
xchg
iret
scas
pop
add
outsb
cld
hlt
or
pop
sbb
sub
shl
cmc
or
and
subb
shl
push
xorl
cmp
adc
cmp
in
arpl
xlat
xchg
testl
adc
mov
dec
out
stos
cmpsl
cli
mov
pop
rcrb
xchg
scas
adc
or
jo
jmp
xchg
daa
iret
mov
mov
mov
es
mov
into
jne
xor
lret
dec
dec
fsubrl
mov
nop
scas
mov
jle
or
movsb
or
cmc
pop
ds
dec
loopne
mov
push
jno
fisttpll
in
inc
cld
imul
repnz
mov
xor
daa
pop
dec
nop
cmp
xor
jl
pop
shrb
inc
test
mov
add
xor
fcomi
add
mov
hlt
xchg
and
ud2
push
shrb
jae
mov
lods
xchg
pop
jle
adc
and
add
shlb
push
insb
mov
inc
shll
pushw
imul
mov
push
dec
sbb
xchg
daa
pop
xor
rorb
mov
pop
ss
add
das
dec
jge
lock
popa
fld
sbb
fmull
in
mov
dec
pop
int3
les
dec
shll
xorb
rclb
sub
pop
mov
pop
out
mov
cld
xor
push
sbb
mov
jae
outsl
mov
jno
jp
pop
xchg
sbb
mov
sti
aad
dec
push
fistps
push
dec
add
lods
movsl
or
in
je
xor
push
stos
test
dec
inc
repz
sbb
in
movsl
mov
stos
or
mov
inc
out
dec
int3
add
mov
clc
pop
sarb
gs
ret
cld
imul
mov
inc
and
adc
loop
adc
fists
or
and
ljmp
decb
cmp
jle
xchg
je
sub
pop
xchg
in
outsb
push
sub
mov
in
inc
insl
fucomi
push
notb
cmp
push
imul
mov
add
add
repnz
or
fwait
in
inc
and
push
je
inc
out
xor
imul
inc
and
mov
lea
fimull
repnz
subl
jno
and
stos
xor
daa
data16
inc
movsl
mov
aam
xchg
or
jno
addb
fldl
mov
xchg
dec
rolb
cmp
inc
or
repnz
jnp
sbb
add
pop
iret
mov
pop
and
adcb
jmp
jg
jecxz
ds
insl
dec
jecxz
int3
push
xchg
je
sti
or
addr16
mov
mov
aad
cmp
rol
outsl
mov
mov
jmp
inc
nop
mov
sub
sbb
out
jns
adc
mov
pop
mov
xchg
and
lock
dec
cltd
push
jno
test
lea
fstpl
jmp
call
test
sub
push
cmp
mov
pushf
into
daa
cmp
aaa
vxorps
aad
fs
push
out
dec
insl
jecxz
inc
negb
add
push
add
in
mov
add
adc
pushf
outsb
xlat
pop
into
pop
cld
popf
sub
shl
rsm
dec
dec
mov
mov
xor
inc
sahf
add
inc
cmp
lds
lods
jl
or
aas
enter
movsb
cmp
mov
fstps
ret
dec
mov
movsb
pop
jae
mov
leave
int3
movups
or
dec
xor
out
hlt
xor
sub
xor
clc
stos
jo
push
lods
popa
mov
xchg
dec
jg
push
jno
fisubrl
outsb
cltd
ret
dec
mov
cmp
adc
mov
cmp
stos
push
ljmp
hlt
cmp
inc
std
cwtl
imul
dec
movsb
pop
setno
xor
and
lods
mov
stc
push
push
cmp
add
xor
xchg
cmp
sbb
add
xlat
lods
jb
jo
inc
adc
stc
scas
imul
fsubr
add
ja
cwtl
mov
cmp
mov
jmp
sub
push
leave
mov
int3
iret
out
js
adc
dec
outsl
mov
ljmp
in
imul
jno
hlt
jb
leave
adc
mov
outsb
lahf
lret
out
dec
push
dec
cmpsl
and
mov
outsb
sub
mov
or
filds
cmpb
push
adc
out
decl
movsl
xor
xchg
pop
pop
dec
or
or
nop
jge
xchg
in
xor
int3
and
pop
loop
dec
jecxz
sbb
sub
addr16
mov
add
pop
inc
or
push
andl
jae
sub
adc
cli
xchg
mov
pusha
mov
pusha
lret
add
lods
arpl
jmp
outsb
xor
leave
adc
enter
mov
les
push
ret
cwtl
sbb
jp
ss
pop
mov
or
leave
popf
in
ret
icebp
loop
movsb
cld
fs
cltd
data16
andl
adc
ret
inc
lret
adc
imul
mov
add
std
loopne
mov
in
cmpsb
ljmp
out
push
xor
imul
test
test
aaa
rclb
loopne
shrb
lret
sbb
dec
ljmp
dec
mov
stos
cmp
xchg
jb
shrl
sbb
mov
cmp
pop
fisubs
out
outsl
or
das
or
jge
push
fwait
stos
xlat
inc
icebp
lea
push
xchg
cmp
cmp
mov
push
loop
jbe
mov
icebp
xchg
iret
inc
or
pop
js
add
xchg
mov
mov
out
cs
ret
out
lcall
mov
xchg
mov
xchg
iret
mov
scas
adcl
fisttpll
pop
rolb
insb
mov
mov
scas
cmp
jecxz
add
test
mov
divb
out
stc
pop
and
or
stos
fsubrp
or
mov
sahf
fcompl
mov
sub
in
pop
jno
cmpl
fisttpl
sub
aas
add
xchg
inc
ss
mov
xchg
fdivs
cltd
push
ja
push
insb
fistps
adc
inc
je
jb
test
es
jno
push
xor
cmp
rcrb
or
jmp
lods
add
jle
mov
dec
cmpsl
pop
jno
mov
push
jb
xchg
xlat
xchg
out
mov
pop
jne
lahf
fstpt
mov
push
sub
ja
dec
sbbl
addr16
out
adc
add
fwait
sahf
in
adc
add
je
stos
arpl
loope
out
xor
cmp
rcrb
stc
mov
pop
dec
pop
add
test
xchg
or
pop
nop
arpl
jl
lea
and
mov
add
lcall
inc
push
jae
loope
into
jmp
shl
and
rcl
xchg
aaa
lea
cs
dec
mov
push
pop
fnstcw
push
jne
xchg
rcll
mov
cmp
jbe
xchg
inc
dec
inc
dec
cmc
sbb
stc
iret
sbb
pop
add
stos
stos
xor
mov
inc
dec
pushf
lods
iret
adcb
jnp
adc
adc
inc
adc
call
ret
popf
dec
xchg
insl
outsl
cmc
negb
sbb
pop
rclb
sbb
test
aas
imul
sbb
call
lods
dec
call
ret
fucom
mov
sti
in
dec
loop
aas
inc
xor
shr
push
pop
mov
test
mov
popf
mov
js
adc
outsb
stos
paddb
pop
call
aaa
mov
shll
pushf
mov
jno
mov
sti
jb
sub
addl
pop
cmpsl
test
jo
fimull
shll
cltd
in
mov
pop
xchg
iret
in
leave
pop
adc
lret
mov
pop
pop
jne
push
fwait
test
or
pushf
xor
dec
fwait
dec
jne
adc
jmp
jns
mov
stos
adc
popf
add
mov
jne
lea
sti
cmpsb
sbb
sar
add
and
adcl
out
mov
add
out
test
sub
ljmp
xchg
shl
sbb
push
movsl
and
enter
xchg
stc
jmp
sbbb
push
sarb
mov
imul
fcmovbe
sarb
dec
sbb
push
fbstp
or
pushf
js
pop
jg
adc
mov
loopne
lds
fdivrp
cmpsl
pushf
std
loope
fiadds
or
scas
mov
lods
outsb
add
push
jl
dec
movsb
loop
push
mov
hlt
pop
push
je
and
pushf
sbbl
les
mov
or
push
add
mov
iret
ret
sahf
jns
out
loopne
mov
test
push
fcoml
stos
inc
or
jmp
clc
aam
mov
and
int3
loopne
cmc
xor
mov
adc
jno
pushf
jnp
nop
jge
add
iret
or
into
or
jg
adc
jge
jg
jp
cmpb
mov
ret
fnstenv
cld
rcrb
inc
outsl
push
stc
shll
stc
pop
pop
lods
or
cltd
aam
and
mov
mov
dec
pop
leave
das
xlat
inc
pop
adc
xchg
dec
js
dec
cmp
push
notb
xchg
jle
push
jl
test
outsb
inc
mov
push
or
jnp
roll
cmp
into
jp
cmc
loope
inc
ja
push
push
dec
jne
adc
scas
fsubrs
mov
pop
das
mov
mov
or
jmp
divl
cmp
cli
in
adc
arpl
add
jo
adc
sbb
jle
jmp
or
inc
dec
test
out
lret
or
popf
sbb
xor
decl
data16
aam
ja
mov
adc
das
leave
xor
pop
aaa
lock
test
mov
sub
jne
outsl
subb
scas
je
jle
cli
push
or
sub
aas
xor
ss
xorb
jmp
in
dec
push
enter
mov
mov
xor
call
sbb
arpl
push
mov
test
sbbb
loope
mov
loopne
fnstcw
mov
xchg
xor
inc
push
test
jl
cli
test
insb
fldl
cmpsb
cmp
inc
stos
add
stos
add
sbb
xchg
mov
mov
rcrl
or
jge
fldt
mov
test
cmc
testb
xchg
pop
or
fisubl
addr16
and
cwtl
and
inc
iret
inc
pusha
dec
pop
and
into
mov
test
and
sub
popf
lfs
or
xchg
add
pop
xchg
pop
in
sbb
lcall
icebp
mov
mov
bound
xchg
or
jl
iret
arpl
dec
lds
in
xchg
pop
gs
push
pop
mov
jae
xlat
mov
vmwrite
repz
sti
sti
jl
call
jno
jmp
loopne
sub
jb
jns
enter
xchg
outsb
adc
mov
xchg
push
cs
xchg
xor
push
nop
push
repz
add
mov
or
mov
sbbl
je
daa
push
pop
leave
and
cli
in
adc
inc
roll
jno
sbb
jno
add
cmp
dec
stos
dec
mov
call
mov
push
pop
mov
bnd
mov
inc
jne
dec
je
xor
inc
lods
sbb
daa
fs
and
fcmovb
stos
pop
and
ljmp
daa
adc
and
ljmp
mov
lcall
mov
es
int
or
mov
out
lret
mov
sti
add
das
in
or
lea
shlb
aaa
rcrb
dec
pop
xor
or
fsubrl
mov
sbb
and
xor
pop
shlb
cmp
sbb
mov
sahf
scas
inc
and
andb
adc
lret
fists
es
mov
inc
int3
aaa
jl
cmpb
lea
test
subb
cmp
sub
out
repz
jmp
lods
es
push
cmpsb
push
jnp
sbb
pop
neg
pop
or
decl
pop
cmc
push
xlat
cmp
sbb
or
mov
lret
rolb
add
shlb
sub
lahf
testl
push
movsl
jnp
lods
mov
insl
cwtl
mov
sar
and
leave
scas
adc
add
sub
mov
insb
mov
fnstsw
decl
cmp
xor
add
ret
xorl
in
fdivp
out
xor
mov
aad
jno
int3
push
cmp
idivb
in
jecxz
xchg
and
sar
sbb
mov
out
jb
lret
mov
adc
xor
addr16
flds
xor
addr16
in
mov
outsb
mov
cwtl
adc
aas
addb
or
adc
xor
inc
dec
bound
out
mov
pop
insl
xchg
rclb
cmp
in
mov
cmc
push
sub
imul
icebp
xchg
jnp
jns
mov
pavgw
data16
jo
loopne
int
inc
adc
mov
enter
addl
push
enter
jbe
ja
push
xchg
jl
push
ret
cmc
mov
das
movsl
jno
jecxz
lods
xor
add
and
jl
loope
cmc
push
nop
sub
cmp
cmp
jg,pt
arpl
dec
xor
or
mov
fs
xchg
xchg
imul
inc
iret
gs
push
or
jae
mov
adc
jb
lods
dec
inc
pushl
xchg
in
jb
add
sbb
jle
cmp
fimuls
fdivr
mov
and
inc
pop
scas
jp
cwtl
lea
add
pop
mov
pop
jecxz
push
xlat
mov
outsb
mov
push
and
jmp
nop
dec
xor
xchg
add
loope
out
out
cmp
inc
cmp
loopne
adc
cmp
push
jae
sbb
mov
sbb
lahf
pop
pushf
rcr
jo
mov
push
inc
lods
dec
scas
loop
push
push
insw
cmp
gs
test
test
mov
test
cmpsl
scas
icebp
ret
popf
pop
ret
lahf
dec
adc
incb
push
pop
lods
pushf
stc
cs
pop
rclb
loope
mov
mov
or
jl
cmp
and
mov
mov
leave
xlat
or
jmp
push
arpl
rcr
mov
pop
sbb
insl
scas
or
pop
push
sub
lock
or
inc
test
sbb
xor
inc
loop
insb
cmp
cltd
sar
bound
outsb
xchg
jne
push
test
stos
test
xchg
and
fbstp
mov
movsl
jo
lcall
jnp
pop
xchg
sahf
mov
popa
stos
shll
inc
jnp
sbb
dec
jmp
stos
hlt
out
cmp
popa
xor
and
lock
xor
mov
xchg
jns
fsubr
aam
xor
xor
test
cltd
mov
sub
mov
in
pop
icebp
mov
fs
xchg
jns
out
std
cmp
stos
outsb
dec
xor
aad
rolb
dec
dec
jecxz
inc
outsb
test
or
mov
xchg
inc
sbb
xchg
sbb
xor
enter
pushf
ffree
jmp
pop
jge
lods
sbb
jne
dec
adcl
mov
icebp
daa
jle
jnp
jbe
push
ljmp
lds
sbb
sub
dec
rolb
cmpsb
inc
cld
pop
and
inc
fadds
sti
adc
ffreep
cwtl
xor
stos
or
js
out
orl
mov
out
mov
mov
ja
xchg
jb
and
xchg
ja
imul
int3
and
mov
in
and
cmpsb
ret
iret
mov
jl
mov
pop
mov
daa
fsubrl
adc
cld
mov
je
lret
lea
aad
lods
sub
cli
mov
fs
inc
add
adc
dec
push
pop
outsl
enter
stc
nop
shll
inc
cmc
or
sub
adc
mov
cmpsl
mov
and
sbb
leave
rcl
jge
clc
pop
testb
inc
jmp
adc
shl
call
or
sbb
sahf
mov
aam
and
xor
pop
enter
lods
inc
mov
into
pop
jae
loopne
cmp
push
dec
mov
in
jne
jmp
push
lock
sbb
sti
jnp
das
popa
sub
adc
and
lret
jge
push
jns
out
mov
jnp
fs
je
mov
mov
mulb
popf
inc
lret
lahf
sarb
jae
loop
sub
out
das
cmc
arpl
inc
mov
mov
cwtl
mov
mov
cli
jb
mov
and
jnp
add
adc
mov
sbb
fildl
fldln2
inc
test
insb
sub
icebp
jl
dec
in
sub
loopne
lock
pop
xor
notb
and
mov
in
sub
lods
fidivl
mov
popf
inc
icebp
jbe,pn
movd
or
rol
fistl
cwtl
shl
call
jp
pop
xor
dec
or
mov
push
add
test
lods
in
adc
and
scas
fwait
jae
mulb
shlb
insb
pop
aam
pop
hlt
enter
lods
sub
sbb
mov
mov
pop
adc
push
orl
popa
clc
sti
push
mov
nop
or
sub
and
sub
aas
mov
jmp
push
sub
adc
clc
xor
cmp
insl
sar
push
push
orps
xorl
or
mov
ss
in
sqrtps
aas
adcb
xchg
xchg
leave
in
pop
xchg
pusha
dec
inc
sbb
movsb
inc
adc
cld
mov
sub
loope
xchg
nop
sbb
push
adc
pop
outsl
xchg
cmp
loopne
xlat
insb
adc
ficoms
or
ja
repnz
iret
cmp
xor
add
mov
aam
aaa
andl
pop
mov
dec
lahf
nop
sub
hlt
arpl
and
imul
int3
ljmp
sub
mov
push
ret
int
shll
fldenv
mov
jg
into
jnp
xor
aam
mov
cmc
sbb
je
out
sbb
sbb
or
rcrb
cmp
or
sbb
lcall
or
mov
mov
mov
cmpsb
sub
mov
lods
mov
fwait
sti
cs
outsb
pop
cs
mov
stos
test
dec
addr16
cmp
cwtl
jmp
ds
jp
pushf
fisubl
fwait
mov
rcrb
in
sahf
aad
mov
and
adc
mov
ja
cwtl
mov
mov
adc
mov
je
in
fmuls
outsl
addb
adc
nop
jo
dec
cltd
lret
pop
dec
mov
mov
jmp
imulb
int
sub
imul
cmpsl
adc
mov
jp
aad
pop
fwait
scas
scas
test
xchg
dec
add
rcrl
inc
mov
xchg
inc
out
jl
push
cmp
and
or
out
jmp
add
inc
push
cmpsl
dec
cwtl
and
std
sahf
and
mov
sub
fmull
psubusb
aad
add
cmpsl
mov
in
mov
lods
cwtl
push
sbb
adc
push
dec
add
pop
sbb
dec
pop
cmp
mov
dec
mov
pusha
mov
movsb
lods
pop
movsb
mov
mov
cmp
fidivrl
sti
gs
pop
push
lods
dec
orl
movsl
inc
test
sub
cmp
out
xor
ret
mov
xchg
rcrb
add
mov
jns
sbb
inc
sbb
xor
cmp
ret
int
inc
leave
sarb
push
xorb
call
fsubrs
mov
inc
jg
jo
push
dec
aam
scas
stc
sarb
xchg
test
push
push
mov
cld
gs
xchg
push
enter
leave
cwtl
int3
lea
stos
subb
lea
jecxz
test
loopne
mov
out
add
sub
out
xchg
push
inc
xchg
leave
push
out
pusha
xchg
add
mov
pop
jno
mov
daa
dec
sub
and
inc
xor
pop
stos
jae
fdivp
into
popf
fimuls
loop
sbb
add
fwait
clc
fwait
and
sbb
xchg
loopne
scas
lret
es
fisttpl
push
add
lahf
in
insb
pop
popa
jo
push
mov
sbb
xchg
clc
mov
push
js
out
push
and
and
and
dec
jb
pop
mov
lods
push
inc
sub
xlat
cld
fadds
orb
or
add
jge
popl
pop
push
xchg
aad
aaa
and
mov
out
xchg
and
mov
lcall
mov
pushf
out
sbb
js
push
and
mov
mov
lret
sarl
jne
xor
xor
pop
cmp
sbb
mov
push
add
leave
icebp
pop
aam
pop
mov
mov
repz
incl
adc
andb
xor
lret
pop
icebp
inc
xchg
cwtl
dec
mov
aam
push
loop
shrl
mov
lahf
pop
je
popa
add
sub
cmp
sub
iret
aas
xchg
or
iret
mov
mov
dec
mov
nop
mov
out
xor
jne
or
cmpsl
aam
in
xchg
fs
mov
scas
negl
test
add
popf
push
cmp
pop
daa
fwait
add
shll
dec
xchg
in
stos
pop
lret
stos
pop
inc
add
pop
std
data16
and
cmp
xchg
pop
push
in
and
das
or
cmc
daa
rol
xorl
fldl
adc
fcomi
mov
pushf
push
sub
sub
mov
push
push
aam
loop
leave
cmp
xor
pop
dec
in
cmp
lret
aas
xor
mov
rclb
mov
jecxz
or
cmp
dec
cli
adc
sub
sub
inc
adc
insl
and
ss
mov
rolb
loopne
out
push
mov
lahf
pop
mov
mov
sahf
cwtl
add
and
push
shrl
push
test
dec
jb
xchg
inc
dec
and
outsb
cs
lock
sbb
dec
push
push
es
mov
cmp
sub
dec
loopne
repnz
sarb
push
xchg
sbb
cs
fadd
mov
mov
out
enter
call
mov
pop
clc
mov
rcll
ja
movsl
mov
dec
ror
pushf
hlt
sub
out
repnz
aam
adc
jg
mov
cmp
mov
sbb
pop
hlt
add
popa
pusha
andb
loope
or
or
lods
xchg
xor
mov
in
fimuls
les
vmread
sub
sar
xchg
inc
jmp
jo
sbb
cmc
rorl
scas
jmp
sub
lret
mov
sub
sbb
cltd
out
sbb
adc
popa
cmp
xorb
sub
icebp
scas
leave
inc
push
repnz
lret
fiaddl
add
mov
data16
push
incl
sbb
pop
sahf
mov
mov
lcall
bound
nop
icebp
xchg
or
mov
fsubs
sub
or
in
rorl
jae
jmp
movsl
ds
push
dec
xor
push
push
jno
nop
outsb
dec
test
and
testb
mov
sti
inc
mov
lgs
dec
xchg
push
rcl
pop
negl
mov
scas
mov
xchg
inc
mov
cmp
xchg
arpl
int
sti
das
xchg
shrb
jmp
loopne
adc
push
mov
cwtl
and
mov
xor
test
lret
sub
int
es
pop
negl
jae
adc
in
xchg
jecxz
adc
imul
notl
fdivrs
cs
and
mov
sub
xchg
lret
cmp
pop
push
add
mov
movsb
dec
loope
add
mov
insb
adc
test
rol
cmpsl
jnp
sbb
stos
stos
or
negl
cmp
test
sbbb
xchg
js
fistpl
mov
loopne
dec
jo
dec
mov
out
and
inc
out
jb
loope
in
mov
mov
out
jmp
std
xchg
shlb
sbb
aad
sbb
xlat
jle
mov
adc
insb
out
aaa
in
inc
insl
fstpl
add
sub
call
or
sbb
mov
popf
cwtl
xchg
subb
outsb
mov
add
push
and
sbb
in
xorb
in
add
xor
outsw
inc
add
fndisi(8087
xor
pusha
sub
xchg
hlt
std
push
mov
dec
cwtl
roll
mov
sub
mov
insl
jns
adc
sub
xor
pop
outsb
scas
pop
in
mov
iret
xor
pop
pop
or
dec
in
faddl
sbb
call
mov
in
nop
jg
xor
stos
mov
jae
ficoml
loope
fistps
cli
xchg
mov
dec
movsl
scas
cmp
or
push
add
xlat
lret
adc
ret
cmp
push
sub
sbb
mov
or
xor
or
inc
xchg
notl
andb
jbe
int
jmp
scas
daa
jl
or
cmp
ficoms
ljmp
mov
pop
out
add
das
movsb
mov
dec
leave
lock
xchg
hlt
pushf
outsl
arpl
pushf
in
fmuls
mov
aad
adc
cmp
leave
inc
popf
jp
fcomp
mov
das
mov
sub
cmc
sub
addl
jge
sub
out
lods
sub
xor
sbbl
cmp
jb
and
outsl
mov
inc
sub
mov
es
imul
push
xor
sbb
push
pop
push
adc
repnz
aaa
in
mov
xor
inc
bound
push
jmp
enter
xor
or
sub
mov
test
or
es
stc
or
es
pop
pop
jle
dec
push
sbb
or
jb
repnz
in
jg
and
popa
cmc
adc
mov
dec
lcall
mov
lods
adc
test
mov
cld
mov
jo
mov
mov
jo
jbe
jns
stos
shl
jecxz
pop
and
aam
rorl
aam
hlt
push
jecxz
jae
in
xor
add
out
cmpsl
and
sub
mov
jmp
xchg
xor
je
xor
sbb
and
and
add
call
xchg
cmpsl
xor
mov
inc
ficoms
add
jge
or
outsl
jp
sti
sarb
and
pop
jnp
inc
cmp
jmp
jle
pop
xchg
test
je
test
je
or
movsb
divl
xchg
notb
repz
jno
jae
mov
cmpsl
inc
icebp
xor
push
xchg
push
or
sbb
and
cmp
push
inc
and
jns
lea
stos
fcompl
aaa
push
ds
mov
fistps
xchg
pusha
jnp
jmp
mov
pop
cmpsl
jg
arpl
mov
in
adc
jae
sbb
cli
out
movsl
leave
js
fidivl
fistpll
aad
add
lds
cmp
shll
pop
popa
outsl
xchg
sub
pop
dec
sarb
dec
movsl
insl
fldenv
out
scas
sbb
insb
cmp
lea
loope
addl
sbb
mov
ja
setno
ja
push
jge
ret
or
jmp
mov
cmp
les
rorb
shll
loop
and
or
js
aaa
int
je
pusha
lods
addl
sub
add
dec
int3
mov
push
cmp
jle
leave
adc
jb
mov
xchg
fs
pop
or
inc
sti
pushf
out
push
sub
stos
stc
out
addr16
sahf
cwtl
jb
cltd
shrl
test
mov
into
fdivr
mov
mov
add
sbb
in
mov
out
scas
inc
adc
xor
or
daa
sbb
mov
js
ja
jae
and
fbstp
cmp
mov
clc
stos
cld
cmc
and
dec
out
popa
pop
lods
stc
imul
mov
push
stos
mov
enter
scas
jge
or
jg
in
and
loope
std
outsb
jle
dec
movsl
pop
mov
or
es
cld
pop
sub
testl
dec
mov
pushf
and
repnz
cmpb
loopne
rorb
jae
aam
cmp
and
mov
xor
dec
icebp
inc
push
xchg
cmp
mov
movsl
inc
jmp
outsl
orb
roll
inc
adc
stos
dec
ficoml
stos
outsl
jg
scas
mov
icebp
enter
scas
xchg
shl
fidivs
and
xlat
mov
sbb
mov
xlat
sahf
mov
sub
xor
repnz
pushl
cmc
mov
xchg
xchg
lock
sbb
mov
inc
dec
cmp
es
cmp
sbb
mov
enter
stos
mov
das
mov
mov
sub
mov
cmp
inc
mov
inc
cmpsl
jno
stc
aaa
and
dec
sub
mov
cmpsl
pop
xor
rcr
push
imul
mov
mov
cmp
lret
pop
dec
dec
dec
lcall
push
out
scas
or
roll
push
and
shlb
in
loope
ljmp
mov
imul
cmpsl
jp
jge
inc
push
or
clc
test
xor
test
gs
rcrl
cpuid
add
add
popl
xor
mov
mov
stc
xor
addb
mov
lods
idiv
mov
daa
pop
out
mov
mov
call
sbb
mov
nop
clc
jno
orb
cmp
adc
clc
sbb
sbb
cmpsl
aad
test
cld
xor
and
test
loope
pop
inc
xor
mov
into
and
adc
ficoml
jne
mov
dec
push
xchg
cli
lods
cmp
or
mov
jg
orb
imul
incb
cmp
pop
std
out
stos
pop
sub
shlb
sub
push
add
cmp
adc
jne
adc
gs
out
jp
icebp
mov
pop
daa
pushl
es
push
jge
jg
movsb
cmp
dec
jbe
inc
sub
in
in
xor
and
outsb
sbb
inc
pop
rcrl
out
xchg
cmp
loop
mov
hlt
mov
adc
xchg
push
lret
ds
rclb
sub
cmp
mov
sub
add
rcrb
es
dec
adcl
cld
jecxz
mov
pop
push
xchg
or
cmpsl
inc
mov
rol
mov
adc
movsl
ret
mov
xor
xchg
or
mov
rol
push
clc
add
test
in
test
xchg
cmpsl
icebp
dec
pop
push
inc
fisttpll
sti
mov
adc
sahf
sub
inc
sbb
jae
xchg
mov
mov
adc
lahf
jae
pop
xchg
mov
gs
cmp
cmp
js
rclb
mov
out
add
mov
or
inc
push
add
sbb
mov
mov
ret
add
fnstenv
adc
sbb
adc
fidivrl
jmp
sub
mov
mov
pop
lret
nop
mov
int3
inc
xor
pop
cmp
inc
rorl
clc
push
lahf
sub
sub
lds
or
mov
jo
xor
cmp
xor
adc
inc
sub
lret
mov
pop
sub
adc
adc
in
dec
pushl
jne
cld
out
pop
sbb
adc
sub
bound
js
mov
cmp
out
add
aam
popf
fsubs
outsl
inc
in
movsb
mov
inc
orb
mov
jno
sub
adc
pop
aas
pop
sub
push
mov
dec
out
dec
xchg
pushf
cmpb
imul
add
jmp
jmp
xor
push
sbb
sbb
add
movsl
nop
cmp
test
fimull
or
scas
mov
cmp
bound
and
nop
ljmp
cmpl
test
hlt
jp
insl
leave
dec
in
dec
insl
subl
push
adc
outsl
das
mov
and
jb
and
lret
dec
jl
dec
iret
adc
ljmp
shll
inc
orb
xchg
cmp
scas
lods
js
sahf
and
fbld
pusha
push
das
xchg
lret
pop
pop
outsl
sbb
xchg
js
sbb
pop
pop
je
adc
les
xchg
mov
fdivs
mov
les
loopne
sahf
inc
xor
jb
cmc
jmp
lcall
or
pushf
cmpsb
or
xchg
sub
sbb
sbb
aam
mov
mov
xchg
sbb
cmpsb
cli
pop
xchg
and
gs
add
into
test
icebp
dec
sbb
push
movsl
incl
notb
fucomip
mov
fstl
jne
push
inc
insb
lds
push
push
xchg
jno
inc
sar
add
lods
imul
cmpsl
sbb
add
jno
push
shll
xor
ja
add
adc
or
call
push
xchg
pop
pop
popa
xor
mov
pop
push
cmpsl
adc
ficoms
xchg
mov
xor
mov
xor
in
addr16
stos
push
pop
pop
shlb
ror
inc
test
mov
or
lahf
pop
jno
and
in
cmpsb
inc
jl
iret
das
mov
xchg
cli
enter
pop
jl
dec
or
add
pop
imul
inc
shl
test
fnstsw
dec
dec
sbb
cli
cmpsb
sbb
sbb
sahf
mov
adc
flds
inc
repz
lods
xchg
mov
mov
rcl
aam
rol
out
cmc
sbb
or
cmp
push
pushf
sbb
push
fisubrl
repnz
in
mov
xchg
fistps
sbb
fldcw
into
pop
cmpl
popf
mov
adc
mov
mov
enter
roll
aas
mov
mov
xchg
jg
out
sbb
imul
mov
cwtl
rorb
cmp
fcmovbe
push
and
iret
sbb
test
sbb
xchg
sbb
daa
sbb
insb
movsl
and
in
xchg
je
loope
mov
push
adc
fcoml
jg
jge
xchg
xor
pusha
mov
xorb
inc
mov
cmp
push
jnp
sub
mov
cli
sub
mov
test
mov
jnp
inc
int
pushf
lcall
xchg
cld
xor
add
pop
xor
mov
pop
aas
jo
icebp
movsl
ret
cmc
push
push
sbb
xchg
push
dec
add
xchg
cld
dec
repnz
pop
aaa
or
inc
icebp
push
leave
inc
push
enter
decb
iret
cwtl
imul
cli
les
dec
pop
mov
shlb
aam
in
dec
and
xor
aam
ret
xchg
mov
xchg
lods
push
sbb
push
sub
mov
mov
ja
sub
mov
stc
pop
paddd
sahf
imul
inc
mulb
and
sbb
inc
inc
gs
sub
jmp
pop
andl
cmp
or
fcoml
ss
adc
notb
hlt
mov
adc
or
mov
ret
ret
mov
push
or
add
pusha
aaa
push
adc
jnp
lods
ja
xor
cmp
mov
xchg
test
loope
sub
repnz
insl
or
dec
inc
bnd
xor
add
cmp
push
arpl
cmp
lods
xor
pop
aam
cmp
loope
pushf
push
lods
cli
xchg
adc
and
int
or
arpl
pop
roll
adcl
mov
xchg
jne
pop
fstpl
mov
in
fistpll
xor
mov
or
mov
repz
movsl
lods
push
xor
sub
mov
pop
and
inc
mov
sbb
push
jae
into
add
imul
xchg
jl
mov
in
cs
mov
push
decb
push
add
dec
push
mov
repz
inc
adc
rorb
pop
mov
lods
nop
pop
std
das
pop
and
mov
mov
in
lds
cltd
mov
sub
jecxz
shrl
mov
adc
adc
ss
or
call
pop
mov
ret
mov
lds
mov
mov
call
popa
das
std
cmp
and
negl
mov
loope
enter
adc
lret
int3
xchg
dec
mov
jb
je
test
mov
or
in
insl
out
mov
fsin
add
out
shlb
mov
lock
jnp
repnz
ds
leave
sub
push
insl
icebp
adc
in
jno
sarl
leave
in
jo
pop
shl
sbb
shrl
dec
mov
pop
inc
into
mov
mov
or
lret
jne
pop
jmp
std
inc
push
or
pusha
adc
shll
add
cli
mov
xor
ljmp
lea
cmpb
jns
ss
inc
hlt
dec
and
mov
pop
mov
rorl
and
pop
leave
fdiv
icebp
cmp
pop
insl
jno
rcrb
xchg
cwtl
lods
lret
push
add
pop
adc
mov
rorl
pop
xor
dec
int3
dec
push
movsb
cmpsl
xchg
mov
fisttps
ds
add
push
jbe
and
adc
enter
es
addb
dec
and
xchg
jne
xchg
daa
cmp
xchg
fs
loopne
jmp
push
repz
iret
and
test
mov
xchg
adc
sbb
cmp
fnsave
push
enter
aad
pop
jne
mov
pop
cmp
jg
mov
aad
ret
pushf
or
in
or
mov
sub
dec
xor
pop
jmp
jge
imulb
clc
adc
popa
sti
mov
dec
push
mov
sub
mov
jge
and
psllw
dec
add
stos
mov
mov
sub
es
add
cmp
mov
out
fisttpll
xchg
add
and
pop
push
push
push
xchg
push
inc
roll
mov
xor
xor
mov
cmp
or
inc
mov
arpl
sti
fnstenv
adc
je
mov
in
in
dec
push
outsl
sub
pop
sbbb
notl
pushf
mov
add
dec
cltd
and
clc
adc
jecxz
adc
and
cmp
jecxz
or
mov
fdivl
lds
xchg
fmull
xchg
pusha
cmp
cld
pop
movsl
lock
bound
adc
push
mov
inc
sahf
push
push
mov
inc
pusha
in
pusha
fdivrs
push
mov
js
dec
add
insb
daa
push
jns
scas
mov
pushl
push
or
arpl
jmp
sbb
ljmp
or
inc
insb
xchg
jno
insl
push
and
mov
push
nop
mov
dec
insl
push
dec
pusha
mov
aam
jo
sub
rorl
add
inc
ja
cli
je
outsl
call
push
xor
xor
mov
push
in
dec
fisttpl
icebp
adc
and
and
cli
xchg
gs
inc
cmp
mov
push
or
inc
in
jnp
xchg
sarb
pusha
pop
dec
pop
fidivrl
popf
xor
push
or
pop
lods
jp
push
shr
and
push
and
stc
dec
in
fists
and
addr16
scas
loopne
push
pushf
popa
imul
xchg
mov
stc
adc
mov
mov
jmp
jmp
xchg
mov
stos
push
outsl
test
shll
fsubrp
push
enter
addb
arpl
lods
ret
in
movsb
lret
mov
testb
mov
jle
sub
xor
cmp
cli
aam
retw
fcmove
mov
jle
jbe
ja
std
rcrb
or
or
out
fsubrs
jle
lds
add
mov
xor
movsl
pop
xor
mov
gs
xchg
add
stos
fisttps
pop
jecxz
mov
add
or
and
mov
xor
or
cli
jecxz
imul
mov
push
push
fildll
int3
mov
cmp
inc
add
push
xor
rorb
outsb
stos
fiaddl
ds
test
ficompl
lods
insb
movsb
std
xlat
mov
xchg
mov
xchg
mov
cmc
pop
rorb
dec
dec
insb
int
pop
jne
cmp
sbb
mov
sub
cmp
inc
mov
add
nop
inc
pop
into
ret
jg
xor
mov
fisttps
dec
mul
cmp
cmpsb
popa
xchg
mov
bound
aad
out
lea
sub
call
cmp
nop
mov
adc
stos
inc
mov
push
shl
mov
mov
mov
or
dec
into
xchg
cmp
popa
lahf
aas
lcall
pusha
and
in
mov
xchg
cmpsl
mov
sbb
ja
sbbb
aas
mov
mov
ret
addl
xor
ljmp
leave
adc
mov
mov
loopne
imul
and
and
inc
sub
add
xor
shll
ss
hlt
xchg
test
lcall
mov
stc
adcl
xor
sub
sbb
adc
inc
lahf
mov
and
pushf
pop
sub
push
int3
add
pop
cmpsl
inc
jbe
sbb
js
or
data16
jno
sub
ret
xchg
fadds
xor
fldenv
push
push
lahf
cmp
push
das
lods
hlt
popl
movsl
out
lret
cmp
mov
pop
dec
call
inc
dec
daa
call
scas
sahf
in
jmp
lret
lds
mov
lods
xchg
aad
popf
iret
cmc
inc
out
imul
js
out
repz
in
lods
bnd
mov
dec
js
mov
in
out
inc
adc
jmp
in
movsl
pop
ret
pushf
ja
add
jo
lds
aam
dec
fmull
xchg
xchg
jg
cs
jle
dec
dec
mov
xchg
sti
orl
adc
pop
mov
out
xchg
shlb
and
mov
sbb
loopne
ret
lock
mov
adc
mov
push
inc
ret
mov
xchg
push
mov
or
sbb
shl
cmp
sub
inc
mov
pop
jo
inc
or
mov
stos
adc
mov
dec
cmp
in
mov
insb
out
repz
xor
leave
sarb
mov
jl
pushf
popa
mov
nop
movswl
shl
rcl
lret
das
adc
data16
int3
jbe
jae
test
cmpsl
ret
iret
fmull
cld
sti
jge
into
test
inc
insl
xor
lods
or
out
ljmp
mov
fwait
push
les
cmp
inc
fists
and
mov
stos
dec
mov
push
jmp
imul
sbb
ds
push
enter
imulb
enter
into
mov
js
aas
pop
sar
popf
dec
cld
cmp
inc
jle
in
inc
pop
adc
cmpb
inc
sbb
add
loopne
jg
and
xchg
gs
cmp
xorl
mov
pop
daa
rolb
xor
cltd
xor
std
jbe
es
out
aaa
dec
xbegin
fstpl
dec
xchg
inc
loopne
in
jbe
push
pop
or
int
inc
push
loopne
pop
aas
jnp
je
ss
xchg
jns
stos
push
cli
in
and
scas
cwtl
clc
pop
mov
xchg
add
adc
nop
cmpb
aaa
xor
fdivl
into
inc
xchg
aas
popa
adc
xchg
mov
cmp
pop
inc
push
clc
mov
xchg
xor
je
sar
lock
push
lret
aad
hlt
imul
sbb
movsb
inc
push
inc
xchg
ret
out
dec
fs
test
mov
hlt
lock
or
std
insl
dec
outsl
sbb
sub
jl,pn
jne
cmp
pop
clc
add
dec
or
cmp
sub
icebp
sub
xchg
xor
xchg
icebp
jo
addr16
div
in
popa
mov
mov
aad
ja
sub
lods
mov
pop
pop
mov
adc
jbe
scas
andl
add
in
fimuls
arpl
cld
stos
pop
jnp
ljmp
adc
in
pop
pop
jb
fmull
es
lea
shll
push
adc
stos
sub
push
xchg
push
push
enter
and
xor
mov
shrl
mov
out
daa
mov
pop
sahf
outsb
sbb
adc
lods
add
mull
inc
test
mov
lcall
push
jae
movsl
push
pop
test
or
push
pop
push
in
pop
andb
jecxz
push
jg
aam
js
movsl
xor
testb
and
mov
cmp
leave
mov
xchg
std
dec
pop
xchg
xlat
inc
jmp
call
rclb
dec
fsubrl
xchg
icebp
imul
pop
push
push
daa
jbe
xchg
hlt
cs
lret
aad
or
enter
jo
cld
xor
ds
int
icebp
inc
subb
jg
movsl
aad
cmp
daa
cmp
push
das
gs
mov
out
shll
into
push
sub
repnz
mov
inc
leave
mov
insb
mov
jmp
testb
cli
inc
pop
xchg
pushf
in
cmpsb
inc
sub
stos
enter
loope
imul
jnp
or
cmp
sub
mov
sub
push
jg
or
loopne
jp
inc
pop
mov
cmp
pop
enter
cmp
sbb
inc
fwait
enter
mov
in
adc
int3
leave
test
sub
mov
cmp
iret
or
sbb
or
push
or
cmpsl
mov
js
sub
int3
stos
enter
jo
cmp
mov
xchg
les
lahf
cltd
cmpsb
ret
mul
or
gs
test
pop
mov
rolb
js
test
fwait
pushf
lock
sub
jmp
into
push
mov
subps
xchg
dec
pop
mov
mov
push
mov
add
push
stos
adc
jmp
lea
lahf
cmpsl
and
dec
test
pop
popa
and
fsts
test
jns
iret
iret
fbstp
and
fistl
jmp
jmp
adc
dec
or
inc
push
mov
sub
lods
cmpsb
xchg
push
icebp
jmp
in
cltd
shr
stos
das
loopne
test
fistpl
pop
or
dec
out
adc
pop
andl
inc
or
or
fiadds
pop
insl
insb
mov
repnz
mov
mov
or
xchg
rorl
roll
jg
or
mov
mov
mov
xor
rdpmc
aaa
lds
xor
aaa
sub
adc
sbb
and
xor
scas
jbe
popf
mov
mov
push
stc
or
sbb
iret
pusha
mov
sub
and
leave
mov
aas
out
jno
cmpsl
inc
jbe
test
adc
lock
iret
into
nop
loope
xor
inc
leave
rcrb
lcall
repz
add
arpl
mov
jbe
mov
nop
and
push
push
inc
ss
push
leave
inc
sub
orb
ds
popf
push
mov
ficompl
cwtl
mov
mov
or
mov
mov
jl
push
test
es
mov
les
sub
outsl
pushf
xor
lret
mov
jmp
mov
imul
sbb
in
in
psubusw
test
add
mov
jbe
cltd
mov
movsb
jnp
cwtl
push
movsb
mov
jmp
sbb
stc
mov
mov
dec
cmpsb
inc
or
fnstcw
mov
popf
mov
xchg
pop
push
sarl
mov
jo
add
and
push
int
out
addr16
cmp
in
mov
cmpsb
out
push
shr
nop
jae
cmp
rorb
or
sbb
mov
pop
por
mov
dec
aaa
mov
inc
out
xchg
inc
jno
xor
dec
aas
pop
test
adc
jno
inc
outsl
std
outsl
push
test
cs
fmull
xchg
and
mov
test
fistps
scas
out
mov
pushf
insl
xor
mov
sbb
daa
xchg
dec
mov
push
and
jp
sti
loopne
test
inc
je
sbb
and
adc
jl
push
sub
fcmove
cmp
dec
ret
stos
out
adc
in
adcl
add
xchg
xchg
inc
mov
popaw
mov
out
notb
or
pushf
xor
jnp
mov
lea
pop
ss
aad
out
jg
cwtl
int
das
xor
dec
aas
add
int3
cmp
lds
scas
add
pusha
dec
iret
jnp
dec
clc
mov
xor
mov
bound
jae
mov
mov
mov
push
divb
jbe
cltd
xchg
pop
dec
xchg
sub
int
mov
movsl
sbb
jp
cmp
call
in
mov
lret
movsl
lods
rcrl
cmp
scas
nop
ljmp
rcrb
inc
push
in
push
fildl
xchg
nop
lahf
fsubrl
ja
sub
scas
arpl
popa
insl
xor
cvttps2pi
scas
loopne
dec
mov
inc
or
ret
mov
xor
popl
imull
outsl
pop
loope
rclb
mov
adc
test
movsb
push
mov
sbb
push
xor
push
out
pop
ret
mov
pop
out
push
dec
out
out
shrb
inc
push
cmp
and
pop
and
decb
and
push
push
push
jl
push
xor
daa
jl
aad
inc
push
aas
dec
test
ljmp
out
push
adc
cmpb
sub
push
xor
in
imul
movsl
adc
push
ror
inc
fisubrl
add
ljmp
pop
push
mov
push
gs
cmp
out
or
sbb
xlat
mov
push
sub
out
xchg
inc
shlb
cmp
mov
dec
pop
in
pop
inc
pusha
out
imul
inc
ret
jp
cmp
fidivs
repnz
jae
popa
mov
cmpsb
jb
jge
sbb
fwait
pop
cmp
jae
cmp
dec
call
bound
and
mov
pushf
dec
jns
xchg
xor
call
ret
push
mov
ficompl
notl
imul
mov
mov
loope
daa
xchg
and
mov
flds
cmp
in
jl
adc
aaa
test
idivb
out
cmc
push
test
add
sbb
inc
jb
out
gs
jge
movsl
and
xor
mov
nop
xchg
mov
cltd
push
push
lcall
mov
xor
das
repz
sub
xor
adc
cmpsl
stc
jnp
jo
mov
aam
pusha
divl
scas
push
adcb
std
lea
jle
cltd
imul
jge
iret
xor
imul
inc
les
cmc
je
sbb
xor
push
mov
mov
xchg
mov
in
mov
sbb
in
cld
mov
xlat
cmp
xor
js
xor
push
adc
xchg
dec
push
ret
push
cmp
fcomps
mov
push
cld
xchg
inc
add
adc
cli
insl
repnz
jmp
or
pop
je
ret
cmp
loope
bound
push
lret
mov
in
insl
mov
jge,pt
xor
loope
popa
ljmp
mov
dec
push
xor
int3
pop
mov
andb
dec
fsubs
gs
sahf
lret
mov
flds
sbb
out
inc
xor
cmp
mov
lcall
call
push
cmp
out
add
inc
xor
or
mov
mov
or
mov
inc
xor
and
jns
jg
mov
inc
inc
sbb
fists
push
cmpsl
pop
push
imul
sub
scas
xor
xchg
in
enter
and
mov
or
cmp
imul
pop
xchg
or
std
jo
cmc
sub
in
daa
movsb
orl
and
loop
movsl
pop
iret
inc
adc
lock
test
jp
fst
in
mov
cmc
imul
addr16
iret
loop
xchg
imul
jmp
movsl
dec
cmc
cmp
xchg
lds
enter
rcrl
enter
xchg
out
out
jmp
fs
mov
ljmp
sbb
lods
arpl
pop
lods
ret
adc
xorl
mov
add
int3
jge
in
fs
dec
push
adc
mov
pop
cmp
xlat
out
inc
inc
cwtl
cmp
das
test
insb
insl
inc
sahf
ja
or
dec
push
mov
adc
xchg
xor
call
push
in
inc
rclb
cmp
xor
outsl
lahf
shrl
adc
cmpsl
pop
mov
adcl
mov
inc
jle
nop
mov
mov
pop
mov
dec
jg
ss
inc
jecxz
push
out
sbb
xchg
rolb
fs
cmc
mov
cwtl
rcrl
push
dec
pop
ret
das
sbb
rcll
call
sub
sub
mov
icebp
xchg
int
inc
jne,pn
mov
jno
dec
lock
sti
test
int
sub
sbb
sbb
jns
jo
outsb
ljmp
jae
icebp
or
mov
sbb
out
sbb
std
adc
orb
add
mulb
test
stc
sbb
jb
leave
jecxz
sbb
jl
sub
jno
out
stc
cmp
add
out
idivb
popa
enter
fcmovne
lock
jne
mov
dec
nop
dec
bound
cmp
and
incb
sbb
jg
sub
cmpsl
dec
cmp
cmp
fwait
dec
jg
add
mov
rolb
inc
sbb
rcrb
cmpsb
ja
push
cmp
call
in
jle
and
xlat
in
sub
in
je
test
test
loopne
lock
popf
or
mov
pop
jecxz
mov
mov
in
inc
rcl
imul
push
arpl
fwait
popa
fcmovbe
xchg
mov
lds
cmc
pop
rcll
sahf
and
cmp
jns
xor
sub
outsb
ret
xchg
ss
sbb
mov
push
jle
lcall
inc
test
jo
sahf
inc
lods
mov
jae
dec
rcr
insl
sub
sub
rcrl
or
addr16
xor
movsb
aam
jb
or
shll
popl
jecxz
loope
out
adc
or
ficompl
ljmp
adc
lret
inc
es
iret
cli
dec
push
or
add
enter
mov
in
bound
loopne
cmp
mov
mov
or
jmp
xchg
add
push
ficoml
sbb
dec
adc
sarb
cmp
outsl
mov
test
je
xchg
xchg
dec
outsl
outsl
cpuid
fstp
insb
and
fisubl
add
fistpll
add
push
stc
test
xlat
or
fwait
and
sub
sbb
sub
xchg
dec
cwtl
mov
cmp
jne
ffree
sbb
inc
sub
push
push
into
xchg
enter
pop
insb
pop
dec
movsb
or
in
mov
icebp
aad
push
stos
xchg
lea
jmp
mov
imul
sub
test
les
pop
sub
aaa
subb
sbb
xchg
stc
addb
inc
xor
xor
mov
js
adc
movsl
movsl
dec
shl
push
xchg
stos
inc
xorl
fwait
js
and
lcall
and
loope
cmp
xor
pushf
lret
add
fisttpl
jle
in
mov
mov
mov
xor
leave
repz
sub
lret
out
push
shlb
mov
outsb
dec
inc
mov
push
xor
add
fwait
std
mov
int3
xchg
data16
fnstenv
cli
bound
sub
xchg
sub
pop
xor
scas
mov
dec
bound
scas
jge
les
or
inc
fildl
dec
xorl
add
sbbb
sbb
mov
jl
aam
bound
inc
fsubs
xchg
testl
and
push
adc
negl
in
imul
loopne
push
sub
push
in
or
test
mov
ljmp
es
xchg
std
cmpsl
mov
popf
imul
leave
pop
inc
pop
pushf
sub
lret
xor
jmp
cmp
xlat
pop
xor
ds
push
cmp
mov
push
pop
sahf
or
pushf
pusha
push
jmp
fldcw
push
into
neg
push
fidivrs
xchg
cmc
pushf
lock
xchg
sarl
pshufw
arpl
pop
sti
aam
out
mov
nop
lahf
rcrb
data16
mov
pop
sbb
mov
pop
pop
dec
cmpsb
push
inc
cmp
xor
daa
pop
mov
gs
inc
cltd
idivb
cmp
cmc
nop
xor
lds
bound
sahf
xor
or
pop
ss
ja
and
in
jecxz
arpl
pop
jg
fstpl
out
xor
aad
lahf
inc
or
popf
add
pop
ficoml
test
or
pause
sub
imul
xchg
inc
sti
ret
sahf
jp
cmp
cmp
push
sbbl
pop
cs
xor
pusha
sub
xor
xchg
dec
mov
mov
loope
mov
sahf
lahf
or
fldt
pop
dec
jnp
lods
out
mov
adc
inc
mov
es
pop
cs
xchg
jp
jo
add
gs
call
adc
and
loop
mov
push
sbb
push
aam
hlt
je
sub
add
cltd
add
push
daa
insb
xor
xchg
mov
dec
dec
movsb
mov
mov
xchg
pop
xchg
addb
clc
fs
outsl
and
jecxz
es
push
xchg
fistl
mov
adc
movsb
push
lods
xor
sub
test
jle
pop
cmpsl
mov
and
pusha
mov
lret
cmpsb
cmc
sub
loopne
or
dec
not
repz
mov
or
lea
xor
fs
gs
cmp
mov
xchg
es
pop
je
cmp
xchg
in
je
pop
or
nop
std
mov
lahf
or
rcrl
pop
adc
cmp
aad
adc
add
sti
adc
das
das
adc
adc
and
add
adc
jge
mov
outsl
out
sbb
jp
xchg
mov
pop
xor
cmp
adcl
arpl
popf
lcall
pop
cmpsl
dec
imul
mov
out
push
roll
jl
push
xlat
jno
xlat
inc
sub
jne
push
xchg
lret
mov
andb
sub
repz
fdivr
jmp
mov
mov
shrb
clc
mov
mov
dec
lds
mov
idivl
je
les
cmp
movsl
int
sbb
pushf
cmp
push
sahf
mov
pusha
and
add
sub
stos
into
pop
and
mov
push
sub
ret
dec
cmc
mov
cmpsb
and
movsl
negb
sub
push
mov
inc
aaa
es
sub
repz
mov
or
cli
roll
adc
jmp
ret
add
adc
or
xorb
sub
add
xchg
xchg
test
push
mov
inc
jg
jl
jg
fwait
imul
mov
add
adc
cmpsb
ret
das
xor
mov
lahf
stc
jns
sbb
xchg
test
cmp
lds
ss
in
dec
fcompl
mov
add
mov
dec
out
cwtl
xchg
decb
push
cmc
xchg
sbb
jno,pn
insb
fidivl
lahf
and
dec
cmpsl
adc
jmp
lds
and
cmp
push
lret
int
jns
in
jmp
mov
pushl
repz
loop
cmpsl
lret
or
mov
mov
mov
divb
cltd
xchg
aas
xlat
fcoms
movsl
sub
loope
sub
or
push
dec
adcb
or
or
push
push
xchg
fnstcw
imul
std
es
sub
fsubs
jnp
jb
dec
rcr
push
jl
adc
cmp
or
mov
push
xchg
push
add
shrb
hlt
mov
add
fwait
mov
mov
ret
stc
sbb
jbe
inc
stos
lahf
lcall
in
loop
cmc
std
insb
dec
pop
xchg
ss
pushf
sbb
cwtl
movsl
jmp
out
imul
or
xor
adc
in
pop
cmp
cs
lret
or
mov
loope
in
fwait
repnz
or
out
mov
daa
pop
push
add
mov
in
scas
cmp
add
xchg
xchg
pushf
mov
js
mov
mov
adc
and
out
xor
push
mov
dec
lods
lods
scas
inc
adc
aas
int3
xchg
popa
ret
xor
sbb
cmp
scas
mov
jle
and
cli
leave
cmp
mov
in
idivl
jmp
sbb
inc
loop
cmpsb
stc
fstl
outsl
mov
int
xchg
push
pop
mov
pop
inc
add
pop
pop
dec
mov
stc
push
int3
or
push
popf
push
mov
xchg
sbb
lods
mov
loope
cwtl
into
mov
pop
sub
lods
cld
and
and
xor
in
test
pop
or
pavgb
cmpsl
cwtl
xor
mov
push
sub
daa
xchg
or
das
push
ret
cwtl
pop
mov
pop
push
cmpsb
adc
or
andb
inc
mov
push
adc
sahf
rol
movsb
stc
loopne
imul
sbb
xchg
stos
inc
in
lock
scas
dec
dec
add
or
xlat
xor
cmp
pop
mov
jg
sub
xchg
sbb
sub
xchg
pcmpeqw
add
lea
lock
xchg
cld
xchg
mov
sbb
adc
scas
mov
test
fistps
lcall
dec
dec
xchg
in
mov
roll
arpl
xchg
cmp
mov
ud1
mull
fistps
out
sti
lds
cs
pusha
test
dec
leave
call
insb
push
dec
fwait
addl
ljmp
sarl
dec
sub
sbb
mov
test
bound
xor
and
cmp
loop
or
loopne
out
cmpsb
jl
xor
lret
stos
roll
out
cmp
xor
jns
ds
daa
dec
jne
mov
sbb
dec
rol
and
mov
cld
add
inc
das
daa
xor
es
dec
adc
adc
lods
lahf
scas
cmp
adc
or
add
mov
shll
dec
mov
add
inc
rolb
push
and
dec
test
leave
nop
xchg
xchg
mov
cs
xor
jo
pop
stos
sub
xor
mov
push
mov
test
adc
movsb
out
adc
or
mov
and
ja
mov
loop
out
pop
loope
and
cmp
leave
rolb
cmc
sub
cmp
xchg
mov
mov
lret
cs
xor
push
fwait
sahf
pop
jg
dec
leave
dec
mov
mov
dec
cmp
shrl
movsb
cmp
push
jno
jmp
jno
mov
xlat
fidivrs
jp
pop
add
xchg
inc
dec
sub
leave
adc
inc
xlat
xchg
push
xchg
mov
shrb
dec
adc
lds
test
lcall
inc
sbb
xchg
in
push
pop
push
dec
ret
icebp
out
mov
out
lret
cmpsl
dec
iret
cmp
xchg
js
xchg
shl
sub
sbb
out
std
ror
dec
or
cmp
pop
leave
dec
add
pop
loop
pop
cld
push
test
push
jecxz
mov
cmpsb
js
cltd
mov
add
popa
push
std
jbe
pop
shr
mov
jno,pt
xlat
data16
test
cmc
aad
mov
inc
fcoml
repz
aam
ret
xorl
fst
inc
in
inc
sbb
dec
inc
jmp
call
dec
sbb
jb
cmp
sbb
sbb
or
mov
mov
stc
les
aaa
into
dec
pop
insb
ficomps
out
sbb
cli
std
fwait
icebp
xor
mov
int
inc
gs
jl
xor
fsubrs
repnz
fdivrs
in
dec
subb
nop
fidivrl
ja
std
mov
sub
and
ja
xor
push
add
in
inc
mov
orl
es
ss
pop
repnz
cltd
add
ret
pushf
fidivrs
xchg
dec
or
jns
fnstcw
call
mov
sub
or
aaa
imul
or
rcr
enter
jae
fcmovne
out
lea
mov
cs
inc
ljmp
lahf
aad
mov
pop
repz
mov
aam
movsb
shll
popf
pop
daa
mov
in
scas
scas
inc
in
xor
fistps
scas
daa
lock
xchg
call
or
xor
xchg
inc
je
inc
loop
dec
lds
fs
out
or
call
xor
cltd
jns
scas
in
adc
cmc
movsb
cmp
dec
and
mov
cmp
push
iret
pop
adc
dec
and
or
add
jns
and
ds
imul
or
lods
inc
pop
sbb
inc
jne
pop
xchg
mov
add
iret
jo
inc
ljmp
mov
lock
mov
sub
and
mov
adc
fmull
shrb
sbb
xchg
pop
push
popf
lcall
jbe
daa
or
lret
ret
xchg
mov
sub
adc
addl
les
inc
lcall
addr16
dec
mov
mov
outsb
sbb
fwait
pop
movsl
repnz
ja
leave
aam
xor
sub
je
sbb
jbe
mov
aaa
out
fwait
jae
inc
fists
sub
mov
cmc
sbb
mov
jecxz
loopne
lret
pop
jbe
cli
insb
nop
icebp
pop
test
xchg
ret
push
stos
dec
xor
jbe
daa
mov
adc
adc
inc
pop
mov
mov
adc
sub
cmp
es
ss
fmul
adc
test
test
jp
loope
and
fimull
out
cmc
inc
into
jne
pop
adc
insb
lahf
xor
test
loop
mov
fdivrl
pop
shll
push
add
mov
leave
fistps
popa
xchg
mov
fbld
test
xchg
cmp
mov
jne
sar
mov
cmp
mov
sbb
xor
jb
inc
dec
mov
lea
dec
mov
push
cmpsl
cmp
in
fcomps
dec
es
or
push
cld
insb
fdivs
jns
xor
push
sbb
dec
ret
xlat
lret
and
push
jo
shlb
jl
add
out
jmp
insl
out
rcll
inc
aaa
sub
jo
aaa
xchg
arpl
pop
push
cmp
je
add
jge
lcall
test
xchg
cmp
adc
inc
loope
adc
fcomi
gs
daa
outsb
int
ja
xor
lret
cwtl
loop
dec
push
push
pop
cmp
adc
and
daa
pusha
cwtl
outsb
inc
dec
dec
sbb
fists
test
cmp
jge
pop
xor
push
es
fstpl
stos
aas
insl
stc
sbb
pop
outsl
pop
data16
stc
int3
adc
lea
sub
lea
std
push
dec
daa
cmp
dec
sub
mov
mov
dec
push
add
vpsrlw
push
in
push
and
adc
dec
dec
aad
fcomps
push
lret
pusha
outsb
mov
arpl
inc
lods
daa
push
cli
mov
add
jbe
mov
xchg
loope
popa
add
hlt
cmovbe
out
and
cmc
or
jae
jp
and
xchg
loope
jmp
lock
loope
sbb
test
fmuls
cs
inc
sbb
adc
cmpsb
inc
out
mov
orl
xor
aas
cmp
cmp
jl
imul
ljmp
dec
adc
cli
in
ret
cmpsl
pop
fdivs
ficomps
xchg
pop
outsb
adc
daa
xchg
push
push
lea
pop
insl
je
sti
loopne
ret
xor
lret
and
lret
mov
sub
fsubl
cld
and
sahf
andl
mov
xor
leave
cmpl
push
jecxz
pop
push
lods
inc
xchg
and
xorl
std
pop
push
cld
mov
inc
mov
out
or
cld
pop
lock
cwtl
mov
dec
inc
jmp
xchg
adc
mov
inc
mov
sti
out
and
or
jnp
lret
loop
out
movsl
push
mov
lea
loopne
mov
push
sbb
mov
frstpm(287
insl
mov
test
pop
cmc
sub
daa
pop
loopne
mov
mov
mov
dec
in
sbb
xor
enter
xor
dec
lret
xchg
ret
iret
sti
mov
test
inc
mov
fdiv
sbb
nop
lcall
xchg
sub
out
push
fucomi
fwait
icebp
jecxz
pop
int
cmp
cltd
inc
mov
pop
mov
sub
daa
cli
sbb
idiv
xor
imulb
or
xchg
mov
mov
repz
xchg
sbb
in
icebp
mov
adc
cmp
and
sbb
inc
inc
jecxz
in
sbb
aas
lock
iret
push
xchg
xchg
mov
xor
out
and
mov
ds
inc
movsb
pop
xchg
repz
xchg
and
mov
cmp
dec
sub
ljmp
stos
jo
xchg
out
push
cltd
add
lods
outsb
cmp
test
sti
mov
aas
push
cmp
cmp
aas
xor
das
ja
arpl
pop
mov
leave
sahf
popa
cltd
inc
cmp
js
cmp
push
adc
pusha
in
rcrl
or
sub
ret
dec
add
sbb
popa
es
or
lret
add
mov
mov
insb
xlat
xchg
sbb
test
in
sbb
jno
lahf
pop
mov
hlt
xchg
xchg
fsubr
add
pop
cs
mov
jae
ja
mov
and
push
push
inc
mov
gs
cmpsl
push
cmpsl
fildll
inc
lcall
sbbl
lods
jecxz
enter
cmp
icebp
mov
sub
call
inc
es
mov
insb
sub
xorb
hlt
inc
pop
pop
mov
pop
pop
add
jle
sub
adc
cmp
dec
sti
movsl
orl
shr
fstpt
jp
xorb
adc
pop
addr16
mov
cmp
test
imul
int
and
or
adc
inc
xchg
mov
aad
pop
ss
ljmp
cmp
ret
sbb
movsl
outsb
add
add
and
xor
lahf
add
call
popa
sbb
or
iret
jmp
in
clc
test
fstl
lock
test
gs
push
clc
mull
test
cld
les
out
sub
dec
inc
lret
lea
dec
frstor
rorl
nop
insl
adc
mov
xor
out
ja
jnp
lret
cs
repz
xchg
mov
pushf
movsl
jle
mov
jo
shrb
fmull
bound
dec
xlat
jmp
xlat
sahf
loop
dec
scas
dec
fwait
ljmp
mov
mov
sbb
sbb
cld
into
jnp
push
imul
cmp
mov
mov
pop
dec
nop
mov
adc
lahf
mov
mov
mov
inc
inc
out
adcl
and
fstps
rcrl
addl
mov
dec
mov
cmp
daa
shll
testb
arpl
mov
mov
loopne
shll
in
out
inc
mov
outsb
jmp
inc
inc
call
pop
xor
mov
xchg
sub
popfw
xor
in
dec
add
jb
punpckhwd
leave
sbbb
es
iret
fldenv
rcl
inc
push
cmpsb
mov
and
lcall
repnz
xchg
jae
mov
sbb
mov
push
es
mov
pop
iret
sub
rcrl
mov
jmp
inc
sti
mov
cmp
or
fdivr
xchg
inc
add
lock
mov
loope
das
jle
rcrb
jbe
cld
xor
mov
sti
inc
xchg
jbe
push
cltd
sub
pop
fpatan
mov
lret
and
cmpsb
xchg
sarb
mov
xchg
pop
js
add
les
push
addl
add
sub
push
cs
mov
inc
fistpl
ds
cwtl
dec
xchg
das
jl
push
cltd
movsb
sub
or
aam
test
mov
addr16
es
cwtl
aaa
xor
adc
js
sbb
sti
inc
sbb
js
mov
jnp
inc
mov
scas
pop
pop
cmp
mov
inc
cmpsb
or
pushf
jnp
xor
inc
arpl
push
push
insb
add
cmp
in
pop
mov
dec
mov
add
fs
shll
mov
repz
in
les
ret
imul
adc
push
std
push
scas
jecxz
orb
sub
xchg
imul
sti
aad
mov
scas
push
lahf
adc
cmp
and
lods
jbe
xor
lock
sub
mov
sub
or
shl
mov
push
mov
mov
cltd
inc
cltd
mov
cld
xchg
repz
call
jl
fs
sub
add
cltd
nop
pop
jp
jle
clc
ret
mov
dec
sbb
inc
popf
icebp
add
gs
js
and
xchg
punpcklbw
push
mov
cmp
xchg
mov
pop
rcrb
testl
lahf
and
enter
inc
sbb
stos
clc
shl
inc
loop
pop
sbb
adc
arpl
fs
mov
mov
jg
cmp
jnp
push
sar
loop
or
es
pop
cmp
sub
std
xchg
daa
pop
pop
pop
fwait
mov
enter
std
sahf
test
jb
int3
ficompl
mov
jnp
adc
pop
pop
mov
xchg
jae
or
iret
jecxz
pop
lods
dec
pop
mov
push
xchg
cmp
xchg
inc
fdivs
in
aas
or
mov
adc
in
lret
push
inc
jo
lea
xor
push
mov
cs
pop
push
cld
sub
inc
pop
int3
test
sub
je
aaa
sbb
out
mov
xchg
mulb
and
mov
call
movsb
popf
dec
rep
mov
pop
sarl
xorl
xor
jae
fs
lods
push
popa
aad
xchg
imul
cmp
popa
push
rcll
pop
fdivrs
cmp
test
mov
pop
or
test
es
imul
pusha
into
repz
call
ja
popf
mov
or
pop
pop
mov
push
sbb
sub
test
pop
js
pop
push
xchg
movsb
pop
mov
cltd
popa
xor
imulb
iret
xor
das
leave
jmp
clc
bound
outsb
push
scas
out
je
inc
adc
fistpl
aaa
repz
fwait
mov
mov
aaa
enter
dec
dec
and
fadd
mov
fnstenv
sbb
cltd
data16
hlt
and
sti
jecxz
scas
xchg
inc
daa
stc
in
mov
into
rcrb
push
cmc
adc
rcrl
xchg
push
fnstenv
push
mov
dec
mov
cmp
les
jae
dec
sub
dec
push
daa
je
pop
sub
cwtl
imul
pop
xchg
mov
cs
add
cltd
and
push
imul
in
or
mov
adc
inc
sbbl
das
jge
jecxz
add
add
add
push
pop
xchg
imul
movl
mov
xor
add
dec
mov
inc
add
or
cltd
inc
cmp
dec
je
inc
int
leave
add
jle
mov
jne
hlt
mov
ljmp
lock
xor
jb
test
sahf
jge
mov
add
adc
pop
mov
in
lds
sub
fbstp
cmp
jae
sbb
jecxz
sub
lods
add
sbb
clc
repnz
xor
mov
xor
lods
std
movsb
hlt
mov
and
jnp
cmp
es
test
push
mov
icebp
and
testb
fistl
mov
push
pop
icebp
xor
mov
sbb
pop
jne
hlt
ljmp
cmp
or
ret
pop
mov
lcall
sub
xlat
jnp
stos
cmc
jg
iret
add
push
in
std
add
lret
sub
mov
and
fcomip
mov
mov
mov
xlat
pushf
xchg
add
xchg
sub
shrb
pop
dec
out
xor
mov
repnz
xchg
xor
jge
subb
add
sub
gs
loop
dec
mov
enter
push
pop
sahf
dec
mov
movsb
out
xor
xlat
aam
fmull
add
aaa
push
or
subb
sbb
sbb
rsm
mov
mov
jnp
subl
xchg
lret
jle
xchg
dec
clc
jnp
jae
dec
pop
or
cmp
hlt
and
or
dec
adc
or
imul
sub
leave
aaa
pop
out
cld
cmp
mov
fisttpll
fsubp
or
int
xlat
dec
mov
xchg
add
and
dec
push
jae
inc
sbb
or
jbe
and
aaa
cli
gs
jp
aad
inc
lods
stc
dec
dec
test
fstpl
in
sub
movsl
adc
add
aam
call
sahf
dec
pop
xchg
xchg
pop
and
mov
sub
rcrl
lret
mov
or
stc
fcomps
jbe
pop
and
into
xor
mov
iret
push
push
xor
je
xlat
nop
and
mov
xor
ljmp
xchg
adc
inc
test
adc
pop
cmpsb
mov
adc
stos
lret
sbb
adc
sub
int
xor
sbb
add
mov
cmp
pop
outsl
lret
sbb
jecxz
sarl
cmp
inc
sbb
sub
mov
out
push
test
cli
adc
push
cmpsb
add
int3
add
repz
mov
adc
adc
sarb
mov
adc
mov
daa
push
mov
in
iret
addr16
sub
and
stos
pop
int3
sbb
loopne
dec
aam
add
dec
fnstcw
fnstenv
add
sahf
cltd
pop
jecxz
adc
and
lcall
movb
push
jb
pushf
and
call
aad
dec
xor
into
loop
ja
loope
xchg
or
mov
lahf
scas
push
inc
fldcw
xchg
sub
and
je
sub
push
jbe
push
std
cmp
inc
xchg
in
jns
mov
cmp
adc
stc
decl
inc
sub
xchg
pop
cmp
call
and
out
das
cmp
test
pop
mov
enter
lret
pushf
fs
xchg
arpl
mov
cwtl
ror
dec
add
cmp
idiv
adc
mov
add
inc
shr
mov
test
xchg
shl
shll
jo
call
jle
mov
popa
scas
mov
push
mov
xor
test
and
hlt
lods
loopne
lods
and
pop
repnz
lods
mov
cmp
sub
sbb
and
mov
lcall
pop
roll
mov
leave
jecxz
add
and
sub
xchg
fsubr
in
cmp
cmpsb
in
sub
mov
add
mov
push
bound
mov
mov
add
sbb
pop
sub
cmp
cmp
cli
testb
cmp
add
rorb
dec
pop
div
inc
rcrl
cltd
xchg
clc
ja
inc
xor
fisubrl
ds
pop
shl
mov
jno
push
push
js
mov
pop
mov
mov
ja
cmp
pop
aad
and
mov
outsl
lret
add
incl
cmpsl
cmp
cld
push
out
sahf
dec
mov
psubd
fs
sbb
adc
roll
inc
add
out
or
nop
cwtl
jae
add
cmp
pop
jo
mov
push
mov
clc
xor
xchg
pop
lods
das
sbb
sub
mov
in
push
popf
cmp
pop
popf
loop
jmp
in
pushf
mov
pop
xor
xchg
jg
scas
xor
repnz
sbb
or
push
dec
cmp
jl
push
push
mov
imul
or
jns
mov
push
std
jns
push
sub
shlb
cmc
xchg
or
orl
and
pop
jb
fsubrs
mov
aaa
rcl
movsl
test
filds
inc
test
iret
push
cmp
adc
in
mov
seta
jb
or
mov
dec
mov
popa
inc
pop
inc
adc
lret
std
xchg
cld
add
sub
sbb
leave
repnz
or
xor
pop
push
mov
pop
iret
adc
sub
ljmp
pop
lahf
dec
xchg
es
mov
and
orl
aaa
xor
cld
xchg
cwtl
jne
bound
fidivl
stc
sub
cmc
arpl
xchg
dec
arpl
cmpsb
mov
pushf
mov
ljmp
dec
add
in
std
push
xor
push
jb
xchg
pushf
bound
das
pop
cwtl
inc
push
lret
lret
pop
dec
mov
inc
sub
pop
enter
rolb
push
sbb
sbb
stos
cmp
jb
out
int
int
rol
push
pop
adc
fidivs
nop
cli
push
dec
loope
ss
movsb
sbb
or
lret
out
xor
and
hlt
adcl
scas
pop
cld
in
xchg
sbb
ret
pop
test
lods
inc
popf
jne
cmp
xlat
cld
ss
ds
sub
push
sbb
je
push
pop
xchg
push
xchg
xchg
or
mov
jmp
dec
jnp
adc
add
add
fucomp
inc
out
mov
ds
xchg
fwait
pop
push
sub
hlt
lahf
pusha
in
stos
push
jmp
add
repz
sbb
add
inc
bound
sti
loope
popa
cmp
call
add
inc
xchg
and
cmp
fsubp
jle
idivl
sbb
sbb
lea
xor
andl
cmp
jecxz
push
or
subb
enter
ret
or
mov
ds
icebp
js
dec
sbb
pop
and
call
mov
stc
push
mov
pop
out
ret
xor
xor
pop
mov
addr16
mov
call
cmp
mov
movsl
or
lds
jnp
fwait
nop
mov
js
lcall
movsl
cmp
push
mov
je
pop
insb
aaa
cmc
mov
fnstcw
adc
pop
sbb
in
into
outsl
add
or
lret
loopne
ds
in
mov
add
dec
mov
xor
leave
sti
xchg
push
daa
ljmp
xchg
cmp
fwait
xchg
fsts
insl
dec
lcall
or
and
pop
mov
ljmp
aam
in
pop
popa
and
mov
xchg
dec
inc
adc
test
sti
in
lock
in
pop
lahf
mov
sbb
jae
enter
rolb
mov
sbb
lds
mov
aam
and
cwtl
jle
xor
bnd
dec
test
pop
add
std
and
xlat
loope
cs
mov
call
lods
hlt
or
fidivrl
aaa
gs
insl
rcr
xor
push
out
cmp
fistpll
jmp
lock
in
xchg
pop
imulb
mov
scas
fmull
mov
pop
pusha
ss
sbb
xor
or
ret
mov
fsts
iret
push
push
outsb
js
or
mov
in
adc
rdmsr
mov
int3
leave
and
outsb
pusha
cmovnp
mov
add
jge
movsb
outsb
scas
and
icebp
mov
pusha
adc
iret
xor
xor
push
and
outsb
push
sbbb
lret
sbb
or
xchg
push
mov
pushf
or
cmp
add
xchg
dec
sub
and
xchg
test
jnp
mov
in
jg
scas
js
nop
adc
mov
shl
popl
add
cmc
or
ja
scas
sub
mov
test
fstl
pop
icebp
adcl
daa
push
dec
inc
and
outsb
cmovg
stos
push
andb
or
ds
aad
in
xor
add
mov
or
sti
leave
movl
push
fst
inc
cltd
jmp
out
rcrb
cmpsb
rcrb
loopne
cmpsl
loopne
rclb
xlat
mov
movsl
ret
adc
das
dec
or
int3
outsb
and
insl
insb
loop
mov
xchg
jae
scas
pusha
das
lret
sbb
addr16
lahf
adc
in
dec
mov
mov
inc
add
or
fwait
cmp
cmp
xchg
data16
pop
insb
push
rclb
mov
ret
push
inc
fwait
mov
pop
xchg
roll
shrb
sbb
test
inc
out
adc
lods
rcrl
cmp
popf
inc
pop
test
daa
scas
mov
push
nop
sub
jbe
or
in
xchg
popf
cmp
fnclex
adc
xchg
or
fdivr
fwait
stos
rcrb
daa
dec
bound
les
aaa
or
push
lahf
xlat
cmp
int
adc
inc
adc
push
cld
add
mov
test
cmc
mov
mov
jg
xchg
push
outsl
jl
sbb
cmc
cmpsb
inc
aaa
xchg
iret
push
inc
lret
loopne
in
pop
mov
addr16
push
inc
xor
les
pop
je
cld
xchg
cmp
xor
movsl
enter
mov
mov
sub
cs
arpl
popa
int
sub
lock
add
aaa
fildll
mov
lret
fwait
cmc
sbb
inc
mov
push
pop
mov
pop
push
icebp
inc
lock
sbb
sbb
ljmp
jae
jge
or
sbb
xchg
sbb
mov
lds
xchg
fldl
pop
in
push
xchg
lods
scas
pop
adc
imul
lock
or
pop
cli
pop
lcall
jns
pop
push
es
push
or
inc
stos
mov
sub
ljmp
mov
dec
lcall
sub
pop
xlat
in
hlt
jno
sbb
mov
inc
out
jmp
xorb
gs
mov
mov
movsl
xor
test
sti
mov
xor
je
push
bound
jmp
ret
cmc
insb
mov
lahf
xchg
adc
and
adc
call
outsb
sbb
push
cwtl
xor
push
fst
jbe
jmp
mov
xchg
xor
jae
scas
jno
imul
mov
dec
popf
mov
rorb
or
inc
pop
icebp
in
imul
push
push
aad
rclb
fwait
xor
loopne
inc
mov
push
mov
ss
cli
adc
loop
mov
aad
subb
je
ljmp
dec
in
ljmp
mov
mov
xchg
faddl
sub
mov
xchg
dec
sbb
aad
dec
push
fcmovnu
pop
fistl
jle
jg
push
dec
add
shlb
mov
jecxz
push
sub
pop
in
idivl
inc
dec
xchg
mov
pop
jbe
iret
push
aas
mov
xor
ja
imul
arpl
lret
push
mov
sub
cmp
jp
sbb
adc
or
adc
insl
mov
lea
stos
add
pop
push
outsl
cmp
fwait
cs
stos
je
and
mov
xchg
adc
cmp
pop
dec
push
fisubs
cmc
ret
insl
xchg
test
dec
insb
cmp
lods
ret
push
cmpsb
sbb
jns
std
mov
push
adc
out
or
and
out
clc
xchg
xchg
je
and
stc
lods
xchg
jl
cmp
mov
cmc
mov
xlat
xor
sub
loopne
or
sub
sbb
outsl
or
in
mov
inc
cmpsb
pop
fmul
sub
loope
mov
fsubrs
inc
push
dec
mov
fdivrl
lods
sub
pop
adc
stc
and
add
lret
mov
jle
xchg
lcall
pop
pop
add
and
les
inc
inc
mov
call
rorb
jns
out
rcrl
in
push
loop
mov
lods
lahf
adc
push
scas
mov
ja
cli
cmpb
xchg
add
push
xor
mov
push
add
addb
leave
xor
xor
xor
xchg
mov
or
int3
shrb
dec
xor
je
jl
divl
out
and
or
mov
fwait
cmpsl
push
clc
pop
and
dec
popa
testb
out
push
sub
roll
out
lret
and
inc
cmp
leave
cmp
mov
mov
inc
cwtl
andl
jbe
push
pop
pop
or
add
jl
enter
mov
mov
pusha
data16
dec
sbb
outsl
mov
mov
jnp
mov
dec
lods
ljmp
cwtl
mov
mov
div
in
test
push
sub
fcomps
add
les
pushf
push
clc
mov
jns
data16
sbbb
mov
mov
or
addb
sub
adc
lcall
dec
dec
test
jnp
pop
cmp
or
add
dec
xchg
pop
push
sub
shrl
sub
mov
xchg
mov
gs
mov
sbb
jecxz
lods
dec
sbb
push
das
incl
ja
cmp
add
mov
xlat
mov
and
and
mov
or
mov
cmpl
hlt
loopne
mov
mov
mov
jg
repz
daa
fmull
or
arpl
push
push
mov
das
mov
leave
push
push
lods
shlb
cmpsb
pop
outsb
loop
fs
pop
leave
sbb
pop
push
xor
test
add
in
addr16
adc
pop
push
and
jns
jg
sbb
xchg
lret
inc
out
sub
rclb
inc
out
push
mov
loop
and
cmpsb
inc
loope
sub
pop
mov
xchg
ljmp
adc
iret
adc
and
clc
mov
jno
mov
or
cmpb
jbe
jbe
lds
lea
negb
sbb
cmpsb
shrb
xchg
jb
or
rcrl
xchg
adc
sbb
mov
insl
ret
out
std
or
push
jnp
adc
lret
dec
jecxz
outsl
enter
mov
sar
in
xlat
inc
out
xor
mov
rorl
mov
cmp
jnp
dec
xchg
push
imulb
lret
test
cmp
sub
fdivrl
mov
cmp
or
xchg
enter
and
add
pop
bound
xor
daa
add
mov
mov
fists
inc
lret
mov
pop
xor
xchg
or
daa
hlt
ret
testl
adc
push
mov
sub
cmp
adc
inc
scas
leave
dec
jb
lods
rcll
sti
stos
cmp
push
popa
sbb
setp
popaw
cmp
out
fldt
mov
fs
sub
mov
gs
xchg
pop
repz
lock
js
lcall
idivl
cmp
shl
loopne
and
dec
jl
lret
insb
xor
push
in
jb
add
insl
dec
mov
jne
cmpsl
scas
jmp
imul
dec
fldl
adc
adc
pop
fwait
clc
fnstcw
push
subl
sub
pop
push
ret
mov
jl
fcmovb
aaa
adc
xchg
xchg
inc
dec
jmp
test
inc
fdivrp
push
mov
sub
inc
movsl
ret
repnz
arpl
jecxz
sbb
aaa
cmp
outsb
insb
and
frstor
outsl
out
mov
imul
or
fmul
fldcw
xor
xor
jo
lret
inc
mov
and
out
push
cmp
sub
push
cmp
idivb
push
or
cmpsb
test
vpcomd
out
sub
pop
fwait
addr16
mov
jl
and
jecxz
mov
sahf
ficomps
cmp
xor
dec
xchg
ret
mov
pushl
fdivl
adcl
sub
das
jbe
xchg
stos
add
push
repnz
fdivl
dec
xchg
pushl
lcall
jle
cs
cmp
sub
ds
pop
mov
xchg
lds
push
pushf
inc
stos
out
insb
cmc
cmc
lods
rolb
in
bound
movsb
adc
fwait
andb
jb,pn
mov
xchg
and
inc
mov
ljmp
pop
lret
xchg
push
loopne
jge,pt
daa
out
xchg
push
rcrl
fs
inc
sarl
clc
add
add
mov
xchg
push
cltd
fnstenv
scas
inc
mov
adc
push
jo
daa
dec
push
sahf
push
fimull
xchg
jecxz
xchg
pop
pop
scas
das
enter
mov
push
fwait
pop
cld
les
aas
movsb
out
and
cmp
mov
call
dec
rorb
stos
and
stc
mov
mov
pusha
dec
gs
fldl2e
es
xchg
pop
pusha
or
jo
in
push
mov
or
popf
jmp
mov
loop,pn
cmp
mov
stc
mov
inc
mul
jg
cmp
mov
fmull
and
xor
cmpsb
in
loope
adc
pusha
jbe
cmp
xchg
sub
inc
aas
cmpsb
into
div
mov
jnp
cmp
mov
jne
movsb
add
fadd
mov
jae
xor
stos
shrl
xor
stos
dec
ret
mov
popf
std
mov
jle
insl
pusha
cmc
jno
into
mov
xor
pop
lods
mov
dec
cmp
outsb
and
jl
leave
filds
xor
mov
cmpsb
fnstsw
jne
mov
aam
mov
sub
int
outsb
mov
in
mov
jno
test
and
or
jge
pop
ret
rcrb
movsl
or
or
arpl
rolb
mov
sub
jo
shll
sub
fnsave
pop
mov
cmp
hlt
loop
scas
ficompl
cmp
dec
add
push
push
test
sbbl
repz
sbb
cmp
rep
push
cmp
xchg
pop
cmp
addb
rclb
push
push
push
jb
mov
rcrb
lods
scas
pop
jbe
in
call
loopne
dec
push
and
pop
dec
outsb
jae
mov
jmp
sub
mov
out
xchg
and
xchg
pop
enterw
pusha
ret
push
imul
insl
lahf
jb
dec
lahf
cmp
test
cmpsl
push
sub
inc
dec
movsl
jmp
ja
mov
cld
enter
dec
hlt
push
sub
xchg
pop
sbb
int3
sti
pop
mov
mov
xor
mov
loopne
sbb
insl
test
mov
xor
mov
mov
cmp
xor
and
mov
inc
enter
inc
cs
pop
je
mov
mov
nop
into
cmp
fidivrl
loopne
stos
pop
sub
and
sub
out
mov
lret
push
lahf
mov
jmp
jnp
fidivrl
push
mov
ficoms
testb
inc
inc
ja
bound
scas
mov
cld
or
aaa
jns
sub
cmpsl
and
mov
int3
addl
adc
dec
out
sti
or
add
out
mov
pop
pop
sub
rcrl
ret
mov
add
sahf
jae
bound
add
jg
hlt
test
mov
pop
jle
adc
clc
sbb
in
push
lods
fld
mov
xchg
in
cld
dec
add
mov
adc
inc
cmp
cmp
clc
adc
inc
mov
rcrl
pop
lahf
leave
hlt
fwait
mov
mov
mov
add
pop
push
jbe
push
stos
fisubl
mov
jno
cwtl
inc
push
out
or
jae
adc
rorb
nop
scas
cltd
jns
cs
rcl
sbb
in
insb
push
lds
pop
xor
xchg
orb
sbb
fildl
or
sub
mov
fwait
repnz
mov
xchg
sbb
das
cmp
int
fldl
inc
lods
push
dec
test
cli
xorb
inc
into
and
mov
les
lea
movsb
outsl
jmp
and
mov
pop
mov
lods
aaa
cmp
cmp
jno
std
mov
mov
fadds
mov
adc
je
jge
mov
jo
mov
cli
jecxz
mov
sbb
inc
pop
fs
decb
rorl
mov
mov
xor
xchg
cmp
je
jmp
mov
pop
push
test
out
dec
dec
add
xor
xor
sarb
addr16
inc
or
push
push
cmpsb
jb
enter
add
popf
jmp
mov
rorl
inc
and
push
xlat
xor
fnstenv
dec
icebp
loopne
jl
push
fninit
push
popa
xlat
lcall
aaa
out
mov
sub
jbe
mov
bound
push
mov
push
add
xchg
mov
pop
sbb
sbb
dec
jg
adc
or
leave
add
cmc
adc
inc
xchg
bsf
inc
pop
cmpsb
xor
cli
sbb
mov
out
ljmp
and
add
test
push
mov
or
inc
cmpsb
sbb
imul
ret
jle
push
mov
xchg
stos
adc
in
daa
push
adcl
and
xchg
lret
jno
je
bound
psrlq
bound
adc
iret
mov
mov
add
push
sbb
mov
sahf
mov
and
adc
ret
dec
xchg
push
addl
lret
stos
into
sub
subl
mov
push
xchg
mov
mov
mov
hlt
rcl
cmc
mov
xor
and
lock
jne
inc
jne
sub
or
or
xchg
aam
sbb
fwait
xchg
enter
jge
mov
ja
jne
adc
push
mov
jg,pn
xor
clc
push
dec
dec
pusha
pop
insl
pop
adc
shl
and
xor
add
ss
fcompl
stc
mov
outsl
out
iret
push
mov
mov
ret
jle
mov
scas
imul
popf
sbb
cmc
jle
push
dec
mov
and
mov
movsb
adc
adc
fimull
rcrb
inc
push
or
jp
mov
mov
mov
stos
pop
adc
and
mov
add
mov
mov
xor
pop
inc
jge
mov
lock
pop
arpl
dec
pop
lret
icebp
xchg
mov
xor
movsl
aad
cmpsl
pop
sub
pusha
aaa
sub
push
std
ret
mov
imul
add
mov
push
push
ret
out
jae
xchg
mov
fs
pop
lods
cld
and
enter
mov
cli
inc
loop
mov
inc
push
sarl
clc
cli
mov
outsl
jle
cmp
adc
testl
lcall
pop
add
inc
or
movsl
dec
xchg
xor
leave
mov
fcmovnbe
into
mov
addr16
adc
xor
mov
addb
xchg
sub
cmp
sti
xor
push
and
adc
loop
add
ret
mov
cmpsl
mov
pop
hlt
mov
lret
fwait
stos
pushf
punpcklbw
lret
loopne
jecxz
test
adcl
test
jno
dec
push
mov
lock
mov
add
inc
jl
addr16
iret
daa
stc
mov
mov
sub
jno
cmpsb
mov
cli
sub
cltd
cmp
sahf
mov
nop
sbb
insb
into
pop
sbb
mov
fistps
dec
aad
xchg
sti
pop
daa
loope
or
out
into
xchg
das
cmpsl
andl
ret
enter
in
enter
inc
cmp
stos
fistps
mov
aam
sub
pop
sti
cmp
stc
or
pop
test
dec
inc
jb
scas
rorl
adc
xchg
xor
cmp
test
jae
out
and
mov
fidivrl
aaa
lock
jmp
cmp
gs
bound
xchg
in
test
lods
mov
push
sub
je
jo
stc
jbe
cmp
lret
add
xor
xchg
pop
cmpsb
jl
call
mov
xchg
ja
loope
pop
inc
clc
out
xlat
enter
add
xor
or
adcb
fcomps
push
mov
jns
mov
mov
mov
dec
mov
jmp
xchg
push
repnz
xchg
imul
lcall
jge
aaa
pop
in
dec
in
sub
pushf
out
mov
lret
out
dec
cmp
outsl
sahf
in
ror
jg
test
cmpsb
sbb
push
pop
pop
loop
mov
sub
sub
popa
loop
xor
sbb
push
dec
inc
and
clc
inc
out
rorb
nop
sbb
jae
dec
and
mov
mov
mulb
std
out
add
or
push
fists
xchg
dec
sub
dec
inc
jl
out
pop
mov
inc
mov
aad
push
dec
or
test
ja
roll
mov
out
add
hlt
cmp
sti
and
out
inc
insl
fwait
sbb
jne
icebp
or
mov
pusha
dec
push
pop
fistl
movsb
jo
xor
lods
mov
mov
pop
pop
out
xchg
stos
ljmp
sbb
enter
push
ds
in
cmpsl
xor
push
jo
aas
int
jecxz
in
inc
int3
and
cltd
dec
rcrb
pop
repz
aaa
sub
enter
adc
push
js
jne
scas
mov
addb
les
dec
subps
mov
pushf
ljmp
les
fsts
and
addr16
inc
jl
out
mov
int3
sbb
hlt
cmc
adc
clc
sbb
addr16
ljmp
or
in
inc
outsb
mov
mov
dec
scas
inc
movsb
andb
add
cs
add
xor
call
or
or
bound
int3
loop
lcall
test
lods
inc
push
arpl
imull
fnstenv
pop
aas
inc
fistpll
cmc
call
mov
lret
cmp
scas
outsb
or
xor
xor
mov
pop
jbe
push
dec
mov
bound
imul
in
mov
jb
mov
xor
mov
jle
cmc
jb
fstl
divb
xor
mov
mov
add
ljmp
and
inc
outsl
or
xchg
notb
loop
xor
movsl
or
add
enter
xchg
decl
or
negl
sub
xchg
xchg
iret
push
lret
jb
lret
sbb
in
cwtl
setl
push
imul
hlt
inc
imul
adc
add
fstps
icebp
sarb
cld
sbb
xchg
div
push
lds
mov
std
mov
rcl
push
fidivs
xor
stc
les
inc
xor
xchg
fidivrs
mov
jge
icebp
adc
das
shrb
hlt
fcmovb
inc
cmp
int
or
add
dec
add
and
mov
mov
gs
andb
enter
lods
or
and
push
cld
adc
ret
adc
movsl
inc
adc
adc
xchg
xor
out
or
sti
lock
fidivrs
push
enter
ss
and
cli
stos
cmpsl
mov
imull
mov
mov
sbbb
push
mov
rcr
lods
fs
mov
push
insl
push
leave
push
push
jne
rclb
jge
ud2
xchg
stc
cmp
test
mov
ror
push
xor
mov
push
mov
ljmp
or
jge
das
es
clc
sub
cwtl
int3
jo
stos
test
addr16
and
je
mov
mov
xor
inc
rcr
push
stc
rclb
pop
mov
xchg
gs
in
pop
sti
push
sbb
cwtl
cmc
fcompl
fcompl
inc
into
pop
stos
in
or
cwtl
push
into
fdivrp
imul
jg
mov
inc
lods
es
imul
xor
cmpsb
or
pop
push
jns
push
jg
xlat
faddl
xchg
jae
push
fs
xor
das
xchg
mov
movsb
pop
pop
pop
and
inc
aas
mov
movsl
or
movsl
dec
ret
test
pushf
pop
inc
es
pop
xchg
dec
fisubrl
rorb
dec
mov
jecxz
inc
add
and
fimull
or
dec
popf
out
sub
outsb
cmp
inc
sub
mov
orl
inc
pop
cwtl
adc
in
fstps
sub
lock
pop
jbe
xor
sbb
sbb
jg
xor
or
jle
lods
js
adc
mov
inc
cmpsb
jmp
sub
cmp
mov
push
shr
fsubs
xor
adc
add
out
mov
pop
pop
testl
and
jmp
pop
push
out
test
cs
mov
cmp
jecxz
inc
fdivp
jge
arpl
aam
mov
addb
cmc
sub
inc
lret
cs
xor
mov
xor
mov
lea
pop
mov
addr16
test
xor
mov
or
mov
xlat
add
xchg
cmpsb
mov
lock
sub
repnz
arpl
pop
adc
pop
dec
or
jno
xor
dec
push
mov
in
adc
sbb
cmpsl
mov
add
cmc
out
add
mov
push
repnz
loop
repnz
imul
loope
push
test
lret
sbb
push
movsl
pop
addr16
imul
shlb
aad
int
xor
inc
add
mov
mov
in
loop
movsb
adc
gs
mov
inc
xchg
mov
xchg
mov
inc
jnp
xchg
dec
pop
cmp
sbb
push
int3
push
jmp
lds
in
loope
sub
push
pop
lds
sbb
dec
or
mov
ret
mov
cmp
cmp
mov
inc
pop
test
mov
jno
xchg
rclb
in
inc
shlb
push
dec
mov
push
push
mov
xor
int
nop
out
xchg
inc
loope
xchg
in
rolb
into
ljmp
mov
call
movsl
mov
loope
in
pusha
out
and
pop
sbb
bound
pusha
int
cmpsb
mov
repz
inc
jno
mov
xchg
dec
aam
adc
dec
ret
push
xlat
jnp
ss
lods
loope
xchg
leave
xchg
adc
and
mov
xchg
and
lock
fwait
sbb
pusha
adcb
push
and
xor
rclb
sub
push
lcall
outsl
mov
orb
fcmove
movsb
push
inc
mov
cmp
repnz
push
cmp
sub
fimuls
jb
sbb
stc
imul
ljmp
and
xchg
or
mov
inc
cld
dec
adc
fists
out
or
ja
xchg
fistpl
js
inc
sbb
scas
fwait
sbb
aad
clc
enter
mov
jnp
dec
add
fisubrs
lahf
lock
jge
push
lods
add
test
xor
out
sub
jg
mov
cmpsl
cmp
ret
je
shrl
daa
loope
inc
bound
jo
scas
mov
pop
test
mov
aam
jb
sbb
insb
mov
clc
jae
or
push
fidivrl
je
nop
and
loope
mov
lods
imul
mov
adcb
or
popf
movsb
jp
mov
ds
test
push
fsubrl
dec
imul
add
outsl
sub
dec
dec
mov
or
aad
pop
jbe
mov
jb
xchg
pop
enter
mov
xor
pop
mov
add
sub
or
jmp
imul
fwait
mov
mov
imul
sbb
or
or
andb
and
pop
cltd
test
cmc
sbb
inc
xor
sub
fs
fldl
es
ficoms
loop
int3
xor
stc
mov
pop
pop
xchg
dec
sahf
cmc
daa
mov
inc
cld
pop
dec
xor
jno
mov
xor
jge
cld
xlat
mov
lret
in
mov
jle
test
mov
mov
jg
cltd
cmpsb
sbb
adc
pop
jae
push
mov
mulb
aam
sub
mov
rcll
ret
xchg
hlt
xchg
call
inc
iret
ret
push
mov
mov
subb
lock
stos
icebp
push
aaa
or
dec
cmp
push
test
pusha
pushf
inc
mov
and
loopne
and
or
push
push
into
fs
pop
cmp
dec
mov
leave
mov
xchg
cld
cwtl
aaa
sbb
mov
into
push
cltd
adc
adc
push
sbb
inc
cld
out
cmp
cmpl
mov
sbb
lods
icebp
pop
int
cmp
jge
nop
out
mov
adc
pop
ja
jno
jnp
dec
sub
add
lea
insb
push
imul
xor
adc
mov
inc
pop
fs
mov
xor
jg
cmpsb
fistpll
leave
popa
mov
mov
xor
add
adc
pop
dec
inc
shl
outsb
repnz
int3
xor
pop
xor
add
or
mov
cmp
cmp
inc
je
inc
dec
fstpt
popf
ljmp
mov
cmp
les
in
pop
push
out
clc
lret
sbb
pop
mov
xchg
repnz
dec
cmp
lahf
sbb
ljmp
out
mov
push
mov
leave
repz
mov
or
xor
xchg
sub
pop
jp
dec
mov
in
pop
dec
pop
fnsave
mov
xchg
test
pop
push
mov
leave
mov
ret
cmpsl
sahf
sbbb
rcr
sbb
push
pop
push
insl
scas
add
pop
mov
cmp
outsl
arpl
and
or
orl
push
aad
andl
test
popl
pop
jecxz
pop
out
inc
mov
andl
cmpsb
hlt
push
repnz
fisttps
mov
jle
loopne
push
sub
pop
rcrl
mov
lcall
jne
ret
lock
mov
cmp
mov
inc
mov
dec
add
out
movl
xor
out
mov
push
add
pop
mov
or
push
aaa
popf
pop
mov
xchg
dec
rclb
xchg
lret
sub
xchg
movsl
lods
pop
mov
and
nop
sti
les
lcall
jmp
fstl
clc
sbb
sbb
lods
mov
fsubrl
lcall
test
cmc
jle
cli
adc
dec
add
aad
fsubrl
fisttpl
jnp
dec
or
xchg
mov
and
jp
sbbb
shrb
insb
ljmp
push
out
dec
add
cwtl
dec
cld
or
mov
mov
jle
aad
jb
sarl
ljmp
dec
test
xor
sti
cmc
cs
cltd
rcll
push
jmp
push
pop
mov
cmp
dec
arpl
inc
out
lret
pop
loope
mov
mov
mov
mov
ror
enter
out
add
cmp
movsb
das
cmp
push
rcrl
inc
in
xor
add
lahf
jmp
push
lea
push
jns
iret
or
fiaddl
jecxz
imul
xchg
aas
imul
dec
sbb
lods
imul
pop
inc
imul
movsb
mov
jae
add
mov
ja
inc
shlb
test
and
mov
pop
ja
add
es
pop
aam
insl
das
loope
xchg
sub
sbb
fdivrs
cmp
mov
fildll
imul
adc
and
add
pusha
arpl
mov
cmp
jb
notb
adc
mov
gs
in
sar
nop
fs
or
dec
mov
popf
shlb
dec
out
or
sahf
sub
mov
popf
outsl
xchg
in
xchg
repz
movsl
pop
pop
pop
adc
mov
stos
orb
xchg
aas
and
mov
mov
cmpsl
aas
jle
hlt
or
movsb
movsl
xor
sahf
jne
jae
adc
or
xchg
lea
subb
imul
pop
scas
mov
jg
inc
push
adc
and
ljmp
popf
stc
popf
push
cli
mov
in
jae
or
lock
lea
and
pop
inc
pop
add
ss
xchg
rolb
mov
insb
xor
lods
shrb
mov
mov
lret
scas
mov
dec
mov
pop
or
jo
divb
fisubrs
push
push
lock
shl
push
ds
or
les
mov
jg
aaa
and
or
inc
arpl
out
mov
xor
jge
and
dec
pop
or
sub
fldenv
mov
cmp
ror
push
jg
gs
bound
jg
imul
fwait
subl
cltd
enter
xchg
cmp
out
out
es
in
imul
push
notl
jg
dec
pop
rolb
in
pop
loopne
icebp
loopne
inc
in
sub
mov
rclb
cmp
lods
xchg
jl
xlat
mov
faddl
and
or
cmp
mov
sub
roll
xchg
out
subl
jo
testl
mov
aam
jp
cmp
dec
mov
cli
xor
cli
mov
sbbb
mov
sbb
or
nop
mov
aaa
lock
add
pop
scas
stc
cmpsb
arpl
nop
in
shlb
loopne
inc
lahf
adc
lcall
sbb
sahf
jae
mov
outsb
lock
cmp
xchg
push
das
dec
dec
push
sarl
sub
sub
and
pop
fcom
stc
test
adc
or
imul
mov
repz
orb
and
push
sbb
fidivs
xor
mov
or
sarb
sbb
push
cmp
sub
xor
jp
cwtl
loopw
fdivl
adc
test
sub
int3
fwait
into
sub
sub
aad
repz
mov
das
jg
push
int3
enter
cltd
inc
sbb
jns
cmp
test
test
adc
and
add
daa
pop
mov
lcall
ja
lods
mov
push
pop
mov
push
lea
push
mov
inc
fistps
stc
adc
subb
lahf
jp
orb
pop
jo
mov
sbb
pop
lcall
pop
enter
les
add
mov
jmp
mov
ss
lret
or
sbb
loope
std
cmpsb
test
or
testl
rcr
aaa
pop
test
shll
xchg
mov
dec
push
ret
push
and
dec
pop
pop
mov
xlat
insl
inc
or
mov
std
ja
mov
push
pop
jne
inc
or
mov
or
and
jmp
cmp
pop
call
test
mov
cmp
and
push
inc
ror
add
mov
mov
cltd
jbe
in
fsubrl
aas
pop
push
fnsave
sbb
jecxz
cmp
or
inc
lea
sbb
rclb
or
cli
inc
pop
push
divl
jae
or
popa
cmp
push
mov
pop
jl
mov
dec
cld
add
aas
inc
out
mov
outsl
jg
jle
ja
lea
adc
aam
aam
mov
sub
jne
imul
sbb
xor
in
inc
or
xchg
loop
xor
xchg
jns
mov
pop
or
push
inc
imul
nop
adc
imul
je,pt
pop
das
inc
pop
or
shl
jb
xor
loop
adcb
xchg
pop
mov
int3
int
add
jno
fs
inc
jmp
sub
push
dec
ja
addb
lea
in
mov
iret
cmp
dec
mov
aas
adc
push
fldenv
jle
push
xor
jbe
in
mov
xorl
and
aam
sti
xchg
les
pop
jmp
pop
push
in
subb
insl
lods
fst
jns
mov
adc
mov
imul
sub
adc
fdivr
cmpsb
pushf
mov
push
cmp
fcom
nop
popf
shrb
mov
cli
jp
cmp
outsl
push
mov
pop
rcrl
xchg
outsl
test
lods
je
jae
movsl
dec
lock
xor
add
pop
lds
shrl
popa
data16
push
mov
jg
pushf
xchg
mov
cli
lret
cmpsb
mov
mov
lods
fisubl
mov
ljmp
pop
mov
ret
movsb
sub
lea
shll
mov
int
enter
fcoms
add
scas
lods
push
lea
jne
mov
mov
xchg
frstor
lcall
leave
xchg
xchg
push
pusha
mov
and
push
lret
ror
xor
adc
movsb
sub
and
iret
paddq
fldcw
mov
test
adc
in
push
jle
in
stos
js
cli
adc
mov
mov
popa
sbb
inc
negl
sbb
mov
push
add
push
pop
push
xchg
xor
push
and
mov
xchg
cli
add
rcrl
std
xor
xor
mov
mov
pop
sbb
inc
sbb
repnz
dec
xor
pop
pop
sub
push
sarb
popa
out
jb
inc
jns
ja
aad
scas
xor
arpl
repz
jge
test
add
xor
bound
std
nop
mov
popf
rclb
push
idivl
cmp
fs
movsb
dec
loopne
aam
sbb
add
sbb
mov
push
adc
sub
xchg
sub
inc
movsl
data16
dec
dec
loope
jne
insb
jbe
sbb
addr16
push
dec
imul
fcmovnu
sbb
adc
ss
repz
sar
push
add
in
idivb
and
xor
cli
roll
sbb
mov
mov
mov
shl
insl
daa
std
xlat
and
stc
sub
inc
adc
aaa
jmp
sahf
into
bnd
or
sub
jno
icebp
inc
add
in
mov
xor
in
popa
jmp
lahf
cmpsl
js
loope
stos
push
mov
insl
xchg
lods
fsubrp
jmp
mov
in
sbb
cmpb
nop
dec
mov
cs
xchg
sub
dec
sbb
movsb
xchg
pop
xchg
or
xchg
in
ret
and
std
add
das
sbb
out
jle
rcrb
andl
add
jb
jnp
mov
data16
subb
lcall
cmp
mov
std
imul
lods
cmp
sub
fdivrs
scas
in
inc
and
out
push
mov
xchg
movsl
test
xor
stc
insl
xor
iret
cld
xchg
pop
cli
dec
inc
les
pop
lock
xchg
mov
dec
movb
cwtl
push
add
scas
xchg
push
icebp
sub
pop
les
mov
jmp
mov
popa
rcll
sbb
or
loop
imul
jmp
leave
mov
popa
push
lcall
ret
cmp
pop
inc
and
adc
adc
mov
push
mov
fcoms
pop
fiadds
pop
clc
jecxz
test
int3
scas
add
outsl
pusha
mov
bnd
rolb
inc
xchg
dec
fisubrl
rolb
std
dec
pop
fisubrs
push
xchg
ss
adc
ss
test
mov
les
pop
test
divps
inc
in
jge
cmp
sub
inc
fstpt
pop
lods
push
add
cmp
test
mov
push
jp
cs
inc
cmp
sbb
andb
dec
dec
cmc
sub
sub
pop
inc
inc
pop
sbb
test
push
fimuls
cmp
int
call
scas
lock
dec
nop
movsl
test
mov
sti
lods
nop
lods
lods
push
sahf
rcll
push
dec
aad
jmp
and
jb
in
sti
mov
sub
sub
mov
add
sbb
and
mov
jae
loopne
loopne
or
dec
lret
cld
inc
sahf
jecxz
popf
in
test
pushf
popf
pop
mov
mov
test
adc
pop
cwtl
adc
data16
rcrb
push
clc
aad
and
jge
jmp
fcmovnu
and
cli
add
clc
lea
cmc
pop
fsubrl
imul
shll
lods
sar
test
lock
lahf
int3
in
mov
cmpsl
fnstsw
mov
sub
js
jmp
out
notl
aam
push
dec
cmpsb
mov
stos
cmp
lock
mov
je
xchg
fwait
push
outsb
inc
lods
mov
jle
leave
jp
es
sbb
fadds
out
std
jo
ja
pushf
ret
ja
inc
adc
xor
shlb
popa
out
sbb
jg
dec
mov
adc
pop
iret
inc
pop
sbb
or
xchg
adc
jo
shlb
push
inc
add
ds
movsl
jl
mov
leave
jg
ret
mov
and
aaa
ret
sub
xchg
inc
pop
insb
out
jb
push
push
lret
fsubrs
sub
pxor
pop
xchg
outsb
and
dec
test
pushl
xor
sbb
stos
imul
clc
aaa
popa
cltd
lods
mov
pop
out
and
clc
lds
pop
sbb
lods
sub
adc
jno
or
mov
pop
jp
in
adc
dec
shll
xchg
add
mov
mov
fsubr
mov
lret
push
push
jmp
jge
ljmp
xor
dec
es
stc
ret
and
xor
dec
cmpsl
add
lods
imul
jle
push
push
pushf
push
xchg
cmp
mov
daa
xchg
jg
mov
dec
lahf
pop
leave
movsb
sbb
out
mov
mov
pop
xchg
mov
dec
xchg
jle
les
movsb
gs
mov
dec
adcl
and
push
test
mov
sti
ljmp
inc
mov
ljmp
inc
mov
icebp
int3
stos
adcl
push
call
inc
xchg
pop
repz
sbbb
mov
and
mov
jno
inc
aad
cmp
mov
sbb
push
cli
inc
inc
add
sub
mov
mov
cmp
fwait
mov
sbb
or
shl
mov
mov
call
xchg
dec
xor
call
shl
mov
cmp
or
push
scas
lods
pop
mov
push
mov
or
inc
jb
jo
hlt
gs
pop
data16
daa
mov
aam
push
push
pop
imul
iret
add
idiv
cmp
push
icebp
mov
out
dec
nop
jge
movaps
push
push
lds
push
adc
jns
fnstsw
cmpsl
cli
mov
ret
ffreep
add
adcl
movsl
jl
mov
imul
ret
stos
outsl
sub
sahf
shl
std
fwait
sarb
add
jle
inc
out
lods
xchg
mov
adc
scas
and
cmpsb
repnz
mov
dec
mov
ffreep
jge
xlat
mov
leave
stc
push
or
push
dec
outsb
hlt
testl
popf
pop
je
inc
cmpsb
bound
jbe
fisttpll
push
jne
int
inc
ljmp
insb
movsb
repnz
xchg
xor
fimull
jb
mov
sbb
decl
iret
mov
sbb
add
dec
mov
repnz
cmpsl
mov
cmc
cmp
push
stos
push
pop
pop
dec
and
dec
inc
xchg
mov
arpl
push
int
out
jle
call
aaa
push
ljmp
lods
push
in
sbb
in
or
adc
inc
rcrl
roll
psubw
xchg
push
loope
sub
inc
es
aaa
mov
stos
mov
sbb
gs
fimull
sub
aas
pop
out
mov
jbe
push
xor
add
cltd
adc
pop
pop
aad
loope
stc
mov
mov
into
and
mov
nop
xchg
sbb
int
rcl
sbb
push
jg
je
stc
fwait
pop
and
pop
lahf
gs
stc
dec
push
mov
jp
jp
neg
dec
cmpsb
lret
scas
push
enter
mov
pop
stos
push
sbb
cmp
repz
add
lea
mov
adc
lret
sub
or
sbb
pop
jno
popl
pop
insb
fs
cwtl
inc
int3
add
js
and
out
outsb
lahf
jl
popa
or
loop
add
cmp
mov
push
sbb
xchg
iret
ret
sub
lcall
faddl
sbb
inc
mov
and
mov
loop
xchg
add
imul
pusha
mov
popf
dec
push
lea
hlt
mov
xor
xchg
push
aad
mov
jg
mov
fdiv
xor
xchg
xlat
cmpsb
es
cmp
out
in
sub
lods
aad
popa
jno
push
add
pop
addl
cmp
mov
insl
sub
movl
out
ljmp
ret
mov
and
dec
sub
pop
lods
cmp
in
xchg
mov
inc
scas
sub
cmp
mov
inc
or
mov
fimull
sbb
push
xchg
cmp
push
xor
push
sub
lret
and
lret
xchg
push
mov
in
pop
mov
jo
movsl
mov
arpl
push
cmpsl
push
pop
inc
les
imul
mov
out
fsubrp
fdivrl
mov
movsl
push
pushf
insl
and
push
mov
arpl
lods
fsub
mov
imul
fisttpll
jnp
sbb
mov
cmp
rorl
cmp
data16
and
mov
xchg
jle
add
popa
jne
test
iret
ss
push
ds
and
push
dec
mov
lods
xor
hlt
fnstsw
xchg
pushf
in
shl
adc
sbb
xor
in
andl
push
jmp
push
push
push
pop
insl
cmp
or
cmpsb
and
rcll
xor
adc
fwait
add
insb
push
test
es
out
nop
or
das
fs
mov
inc
cmp
pop
push
sub
movsl
jg
jo
and
insb
insl
and
push
sub
mov
push
fmuls
clc
fwait
pushf
pop
jns
xor
mov
xchg
push
dec
mov
call
mov
call
scas
aam
test
cmp
jae
sub
jb
sti
shrl
pop
lods
jmp
adc
jne
aas
in
cld
jo
and
sahf
mov
mov
cmpsb
pop
mov
repnz
pushf
jecxz
cmpsb
daa
push
or
ror
pop
pop
dec
and
mov
addr16
test
dec
inc
mov
sub
insl
pop
mov
or
in
sbb
ja
or
inc
sub
jmp
les
out
lahf
mov
in
test
add
paddq
ljmp
ror
mov
cli
movsl
mov
shll
adc
mov
ja
push
clc
dec
push
mov
push
mov
loop
fistpll
adc
push
xchg
out
push
xchg
int
jecxz
fst
xor
push
out
push
push
xchg
imul
push
sub
cmpsl
mov
cmp
mov
sbb
or
or
popa
or
add
xchg
jne
mov
icebp
or
bound
sbb
and
push
cmp
or
sub
adc
lcall
call
movsb
flds
fnstcw
mov
sub
push
hlt
in
fs
popf
push
push
shlb
sbbl
mov
lock
pushf
mov
mov
xlat
fistpl
dec
push
ja
gs
popl
bound
adc
lcall
push
jle
ds
pop
adc
dec
xor
lds
out
sub
or
jb
or
jle
or
aas
stos
mov
stc
push
mov
xchg
jo
pushf
pop
js
mov
fists
push
sub
mov
adc
mov
js
or
mov
mulb
inc
iret
std
jmp
jne
fnstsw
or
leave
imul
fistpll
jb
out
dec
push
out
stos
mov
xchg
mov
cmc
pop
jne
jcxz
out
push
mov
mov
inc
cmp
push
and
insb
imul
mov
stc
or
and
or
repnz
sub
and
das
loopne
jle
dec
lds
mov
mov
xlat
xchg
lods
incl
test
xchg
cmc
rcll
in
or
movsl
jb
pop
fcoms
jl
icebp
lret
daa
mov
jo
jno
mov
cmp
xchg
dec
xor
imul
xchg
test
loope
int
jnp
lret
inc
out
mov
lahf
movsb
mov
lea
mov
mov
loopne
sub
mov
mov
jb
in
int3
aaa
bound
imul
xor
bound
jns
dec
insb
pop
cmp
push
mov
push
scas
cmpsb
js
je
mov
mov
jge
adc
xor
mov
movsb
push
adcl
repnz
lcall
movsb
cld
cmp
sbb
dec
mov
aad
or
in
test
jno
out
push
fadd
mov
mov
sbb
jmp
mov
daa
push
test
push
mov
lods
adc
cltd
scas
test
out
nop
loop
push
std
sahf
jecxz
xchg
pop
movsb
addl
les
rcrb
mov
stos
aaa
nop
in
in
fdivs
leave
jae
aad
mov
lret
iret
push
fnstsw
mov
lea
adc
jge
adc
push
push
sbb
fwait
jg,pn
sub
adc
out
push
out
and
or
insb
dec
lahf
js
fwait
push
jge
mov
push
cmp
and
out
mov
xchg
cwtl
insb
mov
imul
xor
xchg
outsb
mov
ljmp
ret
aad
pop
hlt
dec
xchg
jmp
sub
repz
lods
inc
inc
inc
push
inc
dec
inc
data16
testb
push
inc
cmc
sub
mov
pop
jmp
es
mov
mov
ds
call
fistpll
nop
mov
icebp
cmp
xchg
enter
lcall
lahf
jns
mov
push
call
cmc
das
lret
mov
sbb
and
icebp
in
in
mov
xor
push
pop
cmp
mov
or
call
cmpsl
or
mov
hlt
sub
jnp
jae
mov
mov
out
stos
shrb
popf
inc
into
dec
js
arpl
push
jle
std
xchg
in
jg
shl
cld
lahf
cmp
in
or
push
fldenv
hlt
jbe
pop
icebp
mov
xor
lock
outsb
pushf
add
pop
enter
sbb
dec
push
jmp
lods
push
push
out
shll
pop
ja
and
pop
addr16
push
sarl
lahf
popl
roll
push
lock
sbb
ret
out
jge
cmp
push
xchg
jo
repz
jae
fs
lods
das
into
movsb
les
adc
mulb
jecxz
jae
sbb
xor
and
pop
loope
dec
insb
loopne
stc
out
mov
cmpsb
dec
xchg
mov
lcall
pop
mov
cltd
aam
adc
cmp
in
cmp
out
mov
add
xor
pop
cmp
scas
ja
dec
inc
sub
mov
negl
dec
sbb
scas
add
dec
jbe
mov
lret
imul
je
mov
xor
cmp
pop
xchg
sbb
jecxz
xor
popa
adcl
aam
lcall
cmp
dec
adcl
cmpsb
adc
mov
push
les
je
or
xor
popf
jg
mov
pop
xor
or
adc
mov
out
pop
mov
xchg
loopne
cs
inc
mov
push
and
mov
mov
push
loopne
lea
movsl
into
popf
sbb
scas
mull
xchg
sub
push
mov
cmp
push
xor
mov
mov
movsl
int3
pop
jne
loopne
sbb
sbb
xchg
jl
std
jl
mov
or
mov
aaa
push
xchg
xchg
test
mov
cmp
dec
mov
dec
out
ss
lods
fcoms
nop
xor
sbb
in
sbb
outsb
push
adc
mov
orl
daa
data16
xor
icebp
xchg
sbb
rol
test
sub
add
sub
adc
shrl
mov
mov
or
add
es
jb
lcall
dec
std
mov
and
mov
sub
fisubl
ja
cld
daa
mov
lahf
cltd
adc
and
lods
sbb
mov
jmp
dec
xlat
pop
xchg
adc
push
jl
dec
dec
rcr
scas
sub
inc
xchg
out
test
inc
xlat
xorb
lret
mov
pop
adc
imulb
push
pop
ficompl
push
fistl
aaa
xchg
push
mov
adc
aaa
cmp
shl
mov
cmpsl
pop
enter
divb
jo
inc
outsl
lcall
scas
jg
addr16
aam
dec
xor
or
jmp
jge
les
push
out
sbb
mov
lea
sub
sahf
xchg
je
ret
mov
and
xchg
mov
dec
mov
mov
fisubl
mov
pop
out
in
dec
mov
sbb
dec
jmp
js
insb
or
mov
cmp
sub
test
addl
cmp
int
mov
js
inc
dec
popa
rcl
mov
jns
fidivrs
ret
fdivp
addr16
xchg
nop
mov
loop
scas
out
push
imul
and
jle
xchg
lret
cmp
xchg
ret
pop
sub
inc
dec
xchg
sbb
enter
into
or
pop
push
fwait
xchg
fmull
loope
mov
mov
lock
push
test
ud1
add
pop
mov
repz
jne
cmp
lock
repz
sub
mov
cwtl
xchg
xchg
mov
or
inc
insb
xor
hlt
mov
lret
pop
inc
cmp
xchg
int3
add
push
ds
cmp
mov
nop
or
ja
les
adc
jmp
push
out
sub
outsl
adc
test
inc
dec
mov
cltd
xor
mov
dec
adc
sbb
xchg
sbb
mov
int3
rorl
mov
scas
mov
pop
in
mov
shll
mov
cld
mov
push
inc
push
mov
or
orb
loope
adc
pop
adc
out
lods
stos
aam
lret
nop
repnz
push
in
scas
mov
sbb
std
cmc
in
lcall
aas
jns
jb
gs
cmp
test
mov
mov
cmp
ss
sti
mov
stos
outsl
nopl
mov
imul
sbb
push
mov
int
rolb
rorb
adc
cmc
fimuls
shrb
xlat
xor
xchg
rcl
sbb
push
es
and
xchg
jg
leave
popf
addr16
ret
jecxz
sbb
cmpsl
inc
imul
jge
aam
and
ja
sarl
cmp
mov
inc
adc
cmp
sub
lods
fwait
fs
xor
or
outsb
cltd
fldt
push
out
movsb
movsb
lcall
add
mov
pop
sbb
mov
sbb
mov
sti
fstpl
xchg
xchg
gs
mov
sub
inc
sti
lret
push
mov
inc
rcrl
mov
xchg
inc
inc
inc
ljmp
jb
das
and
fstpl
xchg
loop
mov
push
loope
adc
adc
fisubl
cmp
cmp
pop
ss
inc
arpl
test
xor
incl
adc
icebp
lods
fsts
cmp
insl
push
loope
push
mov
stos
pop
pop
daa
push
xchg
nop
dec
cli
mov
push
cmp
dec
jae
and
dec
push
cmp
in
lcall
jle
xor
popa
push
out
fisubrs
dec
mov
xor
sti
xchg
fsts
jmp
push
aad
jae
arpl
mov
inc
sbb
and
iret
flds
or
dec
cld
lds
popf
mov
mov
lods
nop
add
jge
dec
add
xor
fsubl
gs
pop
inc
cmpsb
lock
scas
cmc
or
lret
addl
push
mov
jle
push
rorl
les
cmp
popf
sub
jecxz
dec
xchg
out
xchg
pop
loope
je
nop
push
or
push
mov
xchg
cli
popa
dec
addb
push
mov
call
fisttpll
jmp
inc
mov
hlt
or
cmpl
ret
cmp
add
or
or
fbld
jb
cmp
adc
test
ret
repz
mov
or
push
int3
mov
cmp
test
popf
adc
mov
imul
adc
cmp
xchg
aas
arpl
testb
push
jo
mov
cmpsl
mov
inc
push
ret
adc
rorl
xchg
xlat
les
test
add
push
jl
roll
cmp
int3
or
mov
sub
push
sbb
and
mov
mov
outsb
mov
ret
mov
call
adc
xor
push
lods
rclb
dec
xor
fdivrl
int
fs
jb
lahf
jne
insb
sub
in
fdiv
mov
sub
test
and
mov
sti
iret
sub
dec
or
mov
mov
adcb
fdivrs
pop
add
xchg
lret
or
adc
pop
xor
push
cmp
das
insl
fsubrs
cmc
repz
or
fwait
pop
dec
stc
ja
nop
test
jp
lcall
mov
outsl
test
sbb
pop
jbe
int
js
int3
adc
add
outsb
push
xor
fsubr
enter
or
out
pop
dec
jle
cmp
cmp
dec
hlt
in
cmpsb
mov
mov
jno
sbb
iret
in
xorl
mov
sub
mov
mov
push
fistpl
push
xor
das
add
jae
test
cmp
hlt
xchg
adc
xor
dec
enter
test
add
push
gs
jnp
divb
lods
xor
call
xchg
movsl
out
xchg
les
repz
mov
xor
stos
ficomps
push
mov
pop
insl
test
push
push
ja
push
add
sbb
dec
add
dec
mov
add
sub
jnp
into
push
push
std
mov
add
cmpsl
aas
pushf
xchg
rcrb
lods
ret
fnstenv
jnp
clc
stos
ss
in
sbb
xorl
imull
test
cmp
daa
lods
adc
fistpll
adc
repz
cmpb
jnp
pushl
cltd
lock
mov
and
mov
jae
xchg
or
mov
mov
leave
jb
loope
and
add
jge
xchg
jns
pop
das
scas
xchg
mov
jmp
mov
fsubs
xorb
push
add
adc
sub
lahf
aas
adc
mov
add
daa
xor
insl
add
out
adc
fs
inc
push
std
mov
icebp
sbb
xlat
push
and
cmp
lcall
mov
call
push
pop
mov
push
in
jb
dec
iret
mov
test
stc
mov
sub
fnstsw
jnp
and
mov
ret
adc
dec
xchg
mov
sti
leave
leave
pop
inc
addr16
xor
daa
bound
pop
hlt
aam
mov
mov
cmp
push
in
aam
mov
xor
out
jmp
sub
stos
lods
mov
sub
loop
mov
mov
xor
push
pop
hlt
jecxz
fwait
loopne
mov
inc
pop
out
aad
inc
push
pushf
mov
xchg
mov
xchg
insl
aaa
mov
cmpsl
fisttpll
stos
mov
fbstp
negb
sub
data16
int
and
cli
fcoms
cli
ds
and
popf
lods
dec
xchg
sbb
or
jno
mov
and
and
testb
movsb
sbb
add
fldl
pop
mov
sarb
hlt
or
ret
or
sahf
jb
aad
jecxz
pop
sbb
addr16
in
movsl
sarl
cmp
push
mov
scas
adc
popl
sti
fwait
andb
mov
xchg
jae
sub
jl
push
xchg
jbe
repz
fadd
in
inc
lock
and
pop
adc
pop
fisttpll
aam
loopne
fcom
inc
pop
xchg
sbb
mov
lock
andl
inc
and
sub
adc
in
pop
cmp
inc
outsb
mov
shr
jno
pushf
rcll
xor
cmp
inc
xchg
ljmp
test
fsts
xchg
dec
jle
inc
scas
sub
icebp
dec
and
mov
adc
mov
push
sub
mov
cmp
and
aas
sub
mov
inc
jecxz
dec
in
popa
adc
dec
imul
fs
mov
loopne
jne
sub
or
mov
xorb
pop
addr16
add
popf
xor
gs
ljmp
pop
lea
push
lcall
lret
subl
mov
mov
or
mov
pop
push
ja
cwtl
add
xchg
scas
mov
out
xchg
out
imul
js
add
xchg
inc
adc
call
sub
orl
pushf
adc
dec
daa
in
aad
mov
pop
mov
and
test
push
cltd
mov
and
or
es
sub
lcall
lret
int
add
and
cmp
pop
ljmp
scas
and
outsb
shl
iret
inc
push
test
lcall
pop
pop
or
cmc
xor
jge
or
push
cmpsl
out
arpl
out
mov
out
ss
pop
dec
dec
sbbl
sub
or
sar
cltd
ljmp
popa
and
or
lcall
popa
pushaw
lods
xorl
sbb
lds
lock
jnp
fidivrs
aam
dec
out
rcll
dec
push
add
xchg
mov
pop
or
pushf
addr16
ficompl
ret
cli
fdivrs
mov
mov
pop
cmpsl
aaa
rorb
mov
mov
scas
cmp
loopne
ja
ficompl
out
pop
jo
data16
dec
insl
ror
arpl
mov
in
inc
push
fstps
mov
rcrb
or
sub
movsl
outsl
mov
mov
and
loope
mov
sbb
loopne
out
rorb
je
xchg
or
push
sbb
sub
int
push
inc
mov
mov
push
movsl
mov
jge
push
push
pop
mov
mov
ret
xchg
nop
mov
rorl
jp
cmp
mov
sub
cs
in
ja
xor
and
push
mov
add
mov
mov
fs
cmp
push
inc
jmp
sti
dec
or
test
popa
jbe
hlt
xlat
mov
jge
sbb
mov
stos
sbb
out
sub
in
or
mov
cmpl
insl
lods
cmp
jnp
xchg
pop
push
rorb
mov
dec
dec
mov
mov
arpl
mov
fdivrl
movsl
inc
out
pop
pop
leave
in
mov
pop
cmp
cmp
movsl
pop
and
pop
es
sti
inc
in
sbb
decl
mov
roll
fstpt
mov
gs
shr
fildll
pop
in
ficoml
xchg
cmp
aaa
inc
or
decb
xor
sub
pop
adc
outsb
imul
js
das
dec
xlat
pop
test
ja
repnz
add
ds
xchg
or
mov
lds
orl
pop
push
nop
add
mov
sub
insl
cli
lret
lcall
push
sti
ret
negl
filds
inc
add
lahf
adc
xchg
jmp
or
fsts
xor
mov
testl
int3
xchg
xchg
push
nop
jno
and
aaa
lods
in
into
or
xchg
and
lret
xlat
shlb
or
jo
jmp
push
pop
insl
out
mov
mov
test
pop
fwait
jg
testl
daa
cmp
out
push
out
ret
mov
js
cld
fcmovnbe
and
jo
int3
push
xor
sub
std
mov
sub
or
cmpsb
pop
sahf
sahf
and
mov
dec
pop
shlb
ret
shrd
mov
test
and
jge
out
ja
loopne
repnz
pop
push
fstl
loope
sbb
popf
ret
or
and
cmp
sbb
mov
out
lret
xchg
cmp
add
hlt
pop
cmpsb
jne
push
std
jb
cwtl
popf
mov
jbe
jle
and
nop
lods
fldenv
movsl
cmp
out
test
std
cmc
sbb
xchg
sbb
stos
and
in
mov
fadds
iret
cli
sbb
sbb
dec
jno
in
sbb
dec
popf
test
xchg
aam
or
and
adc
mov
mov
push
imul
out
es
stos
fnstsw
mov
and
inc
mov
scas
lock
imul
add
pop
cltd
repnz
sti
lahf
inc
decb
ds
xchg
pop
test
out
roll
xor
scas
lcall
and
xchg
filds
rol
add
loope
stos
mov
enter
mov
jg
push
sahf
ret
out
inc
js
jmp
iret
mov
mov
cli
lcall
cltd
and
inc
fisubrs
icebp
icebp
fisubrl
out
outsl
dec
inc
xchg
push
xlat
inc
hlt
stc
enter
daa
mov
xor
loope
sbb
out
mov
or
add
into
mov
dec
sbbl
mov
dec
cmpsb
mov
inc
adc
jge
jae
rolb
and
xchg
mov
out
leave
out
repnz
jae
shr
cmpsb
es
add
and
hlt
imul
stos
inc
fistl
add
loop
cmp
out
ds
sbb
cmp
mov
cs
xchg
cmpsl
push
sbb
ret
push
mov
pop
pop
cmp
jmp
lock
outsl
ljmp
add
call
repnz
pop
in
cli
xchg
push
mov
bound
test
fcoml
adc
pop
jae
ret
stos
xor
insl
mov
mov
icebp
add
jmp
xchg
test
cmp
dec
lret
shl
daa
orb
das
loop
push
out
jg
mov
aam
add
push
ds
xchg
pusha
dec
ret
xor
ficompl
mov
fcmovbe
mov
hlt
movsl
jnp
fs
dec
call
addr16
out
lds
mov
sub
cmpb
dec
test
xor
dec
aam
shr
xorb
rorl
imul
aam
in
pop
fdivrl
and
out
cmpsl
insl
or
stos
xchg
sbb
mov
ret
mov
inc
jecxz
fidivrl
icebp
add
aam
int
push
jns
and
out
fildl
xor
arpl
xchg
ljmp
loope
cmp
lock
mov
out
push
sub
cmp
test
movsb
loope
nop
out
filds
int
dec
mov
fldcw
sbb
out
cltd
sbb
fmull
jno
lahf
iret
adc
pop
xchg
jno
orb
and
xor
sbb
mov
das
aam
cmp
pusha
or
lea
pusha
mov
fnstsw
mov
adc
sub
movsl
adc
fsubl
shrl
pop
lahf
lds
push
popa
sbb
mov
jle
jecxz
ret
in
ss
sub
cwtl
mov
pop
jnp
mov
mov
gs
cmp
outsb
enter
push
daa
es
in
ss
cmp
mov
pop
xchg
sti
dec
loop
dec
and
sub
push
pop
jnp
cmpsl
jnp
jl
dec
dec
or
sbb
jle
fcmovnb
enter
loope
push
mov
push
cmc
aam
loopne
pop
fisttps
mov
xchg
test
cmpb
lcall
arpl
insb
aas
movsl
xor
adc
mov
les
xchg
mov
pop
addr16
in
adc
fisttps
add
mov
add
cmpb
xor
cs
into
pop
sub
decb
dec
sti
jle
js
lds
out
enter
stc
push
stc
sbb
push
push
test
push
mov
icebp
or
mov
pop
mov
and
ss
sahf
sbb
push
addr16
xchg
xchg
test
cld
dec
jbe
je
cmp
mov
call
pop
ss
xchg
movsl
jns
in
mov
pushf
xor
or
popf
in
inc
fistl
xchg
arpl
jnp
cmpsl
and
xlat
and
shll
push
in
out
rcr
or
in
fnstenv
enter
js
imul
nop
repnz
testl
cmpsb
push
xchg
jle
xorb
mov
cmp
lds
mov
mov
fldl
aam
adc
clc
push
push
gs
inc
sti
in
gs
adc
mov
xchg
adcb
rcrl
xor
cli
inc
call
xlat
push
nop
mov
int3
div
and
roll
cwtl
push
aam
in
cmpsl
fcomps
jp
out
mov
sti
test
stc
add
and
adc
adc
stos
movsl
sub
shlb
cli
loope
shlb
outsl
lcall
cmp
sub
inc
cltd
push
pop
ret
cmp
cmpsl
ja
xlat
test
mov
and
lret
lret
add
insl
dec
cli
in
pusha
mov
jmp
sub
shll
shl
outsl
out
cltd
and
jb
jb
and
mov
adc
cmp
pop
and
push
test
in
in
sub
sti
jbe
or
popf
sbb
jp
ja
xor
sub
sub
jnp
and
sbb
fistpll
xchg
filds
mov
fwait
stc
inc
mov
lahf
cmp
pop
mov
xchg
jae
xor
sbb
pop
xchg
sbb
pop
jns
pop
aad
and
pop
andl
shll
icebp
mov
cmp
sub
addr16
outsb
call
lea
lret
mov
pop
cmp
gs
mov
fidivl
mov
out
push
call
mov
mov
cmp
mov
inc
js
sbb
stc
sub
mov
pop
dec
loope
jns
repnz
cltd
shrl
xor
xchg
in
lret
jp
cmp
cmp
cwtl
xchg
fistps
mov
mov
movl
and
aad
imul
notl
cmp
jecxz
mov
jns
push
adc
lahf
into
lahf
dec
lcall
rorl
je
push
insb
dec
cmp
pusha
cmp
in
xchg
xchg
push
push
or
pop
lret
rcrl
sub
push
lahf
xorl
outsb
or
add
sbb
xor
test
sbb
xchg
and
inc
pop
rorb
jno
mov
mov
aam
repnz
mov
test
inc
jmp
lds
test
and
outsl
fwait
mov
inc
stos
outsl
pop
leave
dec
push
scas
jg
pusha
or
cmc
data16
popa
stos
pop
mov
aas
add
pop
faddl
inc
addr16
in
enter
loop
stos
out
xor
jnp
rcl
sbb
or
cmp
loop
shrd
popf
in
and
jno
roll
xlat
jp
mov
mov
test
pop
stc
dec
scas
push
pop
inc
sbb
sbb
popa
cmp
ror
push
xchg
dec
ss
hlt
bound
pusha
mov
dec
mov
xchg
repnz
cwtl
sbb
ficoms
mov
pop
je
xchg
pop
idivl
inc
pop
xor
mov
sub
xchg
or
gs
mov
pop
out
mov
hlt
stc
jbe
xchg
pushf
jb
mov
cmpl
xor
pop
push
xchg
shlb
imulb
fldt
mov
push
sbb
and
xor
fcmovb
cs
add
fstpt
sub
lock
out
push
or
cmp
rorb
sbb
lock
lret
int3
ret
aas
jl
out
add
cltd
dec
jmp
add
mov
inc
fistpl
inc
mull
sub
sbb
lods
dec
inc
cmp
incb
pop
push
cmpsb
shll
fnstcw
mov
sbb
imul
mov
cmpb
adc
daa
push
cmp
inc
arpl
loope
insl
call
push
stos
test
sbb
dec
mov
and
inc
fsubrs
rorb
push
inc
fdivs
mov
jnp
mov
in
dec
cmp
lock
jo
and
mov
sbb
fmuls
mov
movsb
psubsb
repnz
repnz
test
out
pop
js
int3
sub
mov
std
addr16
add
das
aad
push
inc
sbb
in
icebp
mov
dec
add
rorb
cli
inc
jbe
pusha
jnp
adc
insl
push
mov
cmpsl
ja
add
movsb
daa
test
scas
xchg
cmp
adc
dec
cmp
or
movsl
je
jp
fldcw
andb
sub
adc
jnp
movsl
clc
push
adc
xlat
pop
mov
enter
out
jle
clc
cld
out
dec
movsb
rcrb
xlat
xlat
xlat
and
data16
pop
dec
cmp
fimuls
mov
sbb
jnp
sub
add
mov
fisubrl
sahf
sbb
ds
cmp
stos
mov
daa
das
out
mov
xor
sub
shrl
inc
je
das
mov
add
xchg
aam
stos
sbb
dec
pusha
lods
mov
dec
sbb
in
xor
lahf
pop
dec
mov
jae
rcr
iret
outsl
stos
xchg
sti
xlat
mov
sub
pop
pop
cmp
pop
test
orb
out
mov
cmpsl
jbe
imul
cmp
adcl
xchg
xchg
mov
xor
fsubs
pop
insl
pop
stos
and
mov
sub
and
iret
cmp
inc
movsl
inc
dec
lds
inc
loop
test
pop
lods
ja
dec
adc
xchg
sub
cli
out
lods
dec
leave
or
stos
sti
test
push
popf
in
in
repz
pop
popa
add
iret
lods
incl
out
clc
mov
xchg
out
dec
lods
xor
mov
add
cltd
or
lock
ret
dec
pop
daa
imul
imul
pop
movsl
dec
inc
xor
in
adc
or
adc
into
lcall
push
dec
xchg
mov
fmull
sub
xchg
movsb
test
enter
mov
pop
push
inc
out
jb
sub
in
sbb
pop
cmpsb
hlt
mov
cmpsb
sub
add
int
das
xlat
fdivl
or
push
fwait
sarb
xchg
rcr
loope
into
lret
mov
jp
adc
sbb
mov
and
mov
xchg
sub
jl
ret
pop
sbb
sti
pushf
sbb
pop
mov
jnp
push
inc
js
xor
in
pushf
or
jbe
stos
out
and
pop
sbb
in
cmp
jnp
fidivrs
mov
jo
pop
rclb
in
mov
xlat
lods
mov
lods
das
out
orl
or
out
push
inc
aaa
pop
cwtl
out
shrb
test
mov
add
fnstenv
sbb
cmp
out
jecxz
inc
aam
dec
das
outsb
push
adc
cmp
sbb
cmc
mov
nop
and
sub
shrb
rclb
add
jbe
xor
gs
int3
lods
dec
ret
mov
pop
daa
or
inc
jo
cmp
xchg
xor
in
push
lret
xchg
jmp
repnz
lret
popf
pop
sbb
cmp
jmp
mov
dec
sub
in
out
test
cld
or
add
jecxz
fstp
xchg
adc
ja
jl
ljmp
jo
imul
sub
pop
fiadds
insl
cs
jo
push
repz
mov
jne
sbb
dec
inc
adc
mov
lret
sti
pop
pop
pop
leave
imul
aad
ret
daa
mov
cmp
add
aad
loop
mov
mov
jge
and
push
mov
sahf
shlb
lret
jb
fcmovbe
sbb
jns
push
mov
sbb
arpl
xor
icebp
fidivrs
les
or
xchg
mov
push
aam
aad
xlat
stos
adc
pop
mov
outsb
das
xchg
xor
popf
jmp
add
fucomp
lods
int3
call
gs
push
mov
jg
fmuls
popf
adc
sbb
mov
xchg
jno
rolb
rcll
xor
loopne,pt
insl
mov
and
xor
add
mov
bound
popf
sbb
add
adc
aas
mov
scas
pop
or
popa
sbb
mov
mov
idivl
fistps
mov
adc
sub
outsb
jg,pn
jo
cmpl
push
push
arpl
jecxz
add
in
les
sbb
pusha
pop
xor
movsl
lret
or
fwait
loopne
insl
hlt
pushf
subb
xor
mov
or
lods
aas
push
fwait
sub
sbb
jle
add
cmpl
push
popf
jge
sub
sub
xchg
sbb
popa
push
mov
cmp
iret
repnz
mov
and
gs
dec
test
jl
in
dec
pminub
lods
fucomp
shrl
out
jno
lods
shlb
mov
jb
or
push
jl
and
hlt
jle
mov
inc
push
xchg
in
test
dec
jb
adc
gs
lods
fldt
xor
rclb
mov
test
fadds
repnz
xchg
mov
clc
mov
int
ret
xlat
clc
add
push
fldcw
and
adc
rcll
std
pop
dec
push
shrl
out
or
cld
cs
mov
push
dec
cld
mov
mov
jg
dec
inc
int
cmp
inc
lahf
add
add
cmpsb
sbb
shrl
mov
pop
jns
xor
or
arpl
push
je
lcall
mov
je
loop
je
not
lret
xchg
cltd
add
out
aaa
push
call
xchg
nop
and
dec
jae
pop
xor
xlat
mov
nop
hlt
stos
sbb
cmc
add
jle
rcr
je
dec
sbb
add
loop
add
jmp
rol
int
inc
mov
mov
rep
or
lock
pop
in
lret
or
movsl
pop
js
add
inc
aaa
xor
fbstp
mov
shll
pop
sub
sbb
andl
lcall
lcall
sti
outsb
push
xchg
daa
xcrypt-ctr
cmpsl
ficompl
cmp
xor
lods
push
xchg
xor
in
stos
jg
clc
outsb
lcall
and
cmpsl
aas
push
loop
cwtl
fsts
adc
stc
mov
jo
inc
std
cwtl
add
mov
push
scas
xchg
pop
or
imul
jecxz
push
ss
arpl
dec
daa
repz
sub
sahf
or
sub
push
dec
add
nop
test
mov
popa
cltd
mov
cwtl
ljmp
dec
cmp
push
bound
fwait
int
sub
push
inc
xchg
cmp
cmp
lea
sbbl
out
lcall
popf
sbb
flds
inc
push
fdivl
ss
and
sub
lea
sub
fstpl
lock
xor
fstl
lcall
jno
adc
push
push
fistpl
and
sbb
jmp
fs
jb
cltd
mov
shll
leave
into
or
mov
jle
test
cmpsb
add
call
jmp
adc
scas
ljmp
test
in
jg
fistl
inc
enter
test
xchg
ror
pop
in
lods
cmp
add
das
orl
add
into
pop
arpl
aad
and
testb
pop
movsl
push
push
ja
push
mov
cmp
in
sub
dec
ja
cltd
mov
fsubrs
pop
mov
mov
pushf
lret
std
in
js
rorl
adc
push
or
in
push
sub
dec
cmp
cmp
in
mov
dec
add
mov
test
mov
in
adc
pop
das
sub
test
cmpsb
cmpsl
iret
fnsave
hlt
outsl
xchg
ja
data16
lret
cli
dec
pop
imul
sub
cltd
xor
outsl
push
add
dec
add
cmc
pop
xchg
mov
push
and
ret
test
xchg
loope
or
lcall
pop
rorb
inc
hlt
aaa
cmc
shll
subb
jle
sahf
insl
jbe
insb
inc
clc
jo
cltd
cmp
pushf
xchg
add
or
aad
ljmp
jle
sarb
sbb
jg
dec
lods
pop
jmp
hlt
mov
in
loopne
fnstsw
das
sbb
out
or
call
test
loope
or
loopne
lcall
xor
add
inc
outsb
ret
lods
sarl
pop
and
icebp
ret
jp
push
mov
jge
or
out
pusha
inc
loope
push
mov
fcmovb
jne
lcall
add
repnz
les
hlt
jg
cld
ds
push
es
pop
xor
inc
mov
decb
popa
and
shrb
dec
sub
cs
hlt
pop
movsb
incl
pushf
idiv
fs
pop
cwtl
jg
adc
fnstenvs
xor
ror
mov
out
sub
push
mov
call
ds
sar
fwait
mov
lea
stos
aad
cli
xchg
test
movsl
mov
pushf
or
jge
mov
cmp
outsb
ret
add
icebp
ss
pusha
dec
jge
lcall
loopne
push
into
imul
pop
and
mov
add
into
add
arpl
mov
cltd
inc
sbb
ror
add
ljmp
movsb
mov
pop
pop
mov
jl
mov
lock
daa
popf
mov
xchg
das
mov
fldenv
shl
xchg
and
dec
mov
add
sar
cmp
mov
xlat
scas
or
out
pop
cmpsl
pop
mov
jle
sub
into
jne
addl
lahf
cwtl
stc
std
hlt
addb
int
cmpb
out
and
cs
popf
xor
mov
pop
mov
xchg
mov
lods
cld
jle
scas
arpl
popa
fisubrl
arpl
xchg
xlat
push
dec
das
xchg
sti
or
insl
sbbb
or
or
push
mov
inc
stos
mov
cmpsl
jb
call
and
mov
and
pop
cmpsl
pop
jle
fcompl
bound
sbbl
mov
lock
mov
jo
mov
outsl
das
jg
inc
add
adc
cld
adc
inc
lahf
xor
in
and
push
xchg
lods
test
outsb
adc
fisubrl
cmpsb
rclb
scas
jmp
push
xor
push
cld
mov
mov
cmp
clc
test
and
mov
or
stos
stos
dec
jle
push
xchg
sub
push
scas
leave
pusha
not
xor
sub
add
or
js
test
in
ds
mov
inc
lcall
mov
cwtl
js
pop
pop
outsl
push
mov
sbb
daa
int3
pop
jl
pop
push
shlb
xchg
jne
xchg
clc
push
push
leave
mov
jecxz
mov
add
jle
pop
call
insl
int
lods
pavgw
incl
test
mov
leave
rcrb
out
inc
shlb
gs
scas
rclb
mov
into
inc
dec
xchg
mov
inc
or
sub
ret
xlat
in
mov
je
lcall
add
or
fidivrs
mov
mov
fildll
xchg
sbb
mov
cmp
mov
sub
pop
out
scas
addb
sahf
sbb
in
test
jecxz
repz
push
jne
jmp
cmp
jg
sub
ljmp
cmp
adc
xchg
arpl
jno
cmp
dec
icebp
inc
sub
popa
stc
into
test
fcmovnb
jg
adc
test
push
ret
cli
sahf
ficompl
mov
shll
pop
loop
adc
jno
sub
cmp
cld
push
lahf
adc
fwait
stos
in
test
movl
idiv
sbb
mov
jp
adc
cmpsb
int
inc
sbb
mov
jnp
scas
sbb
testb
lds
add
cmc
mov
mov
out
mov
inc
push
scas
push
xchg
clc
std
adc
mov
push
pop
inc
dec
jmp
sbb
adc
scas
sbb
jmp
call
data16
ds
fwait
repz
or
sub
mov
add
xchg
and
jp
enter
push
dec
das
imul
stc
pop
and
icebp
push
cli
shl
ffree
adc
push
movsb
xor
jne
adc
mov
jge
and
sbb
test
orb
call
add
scas
add
movsb
sbb
fsubs
into
dec
xor
pushl
push
stc
add
pop
or
mov
sub
xor
test
jbe
das
aaa
pop
mov
sbb
je
mov
jge
cmp
jb
sub
mov
jo
xlat
repz
addl
loop
lds
adc
xor
movsl
xor
mov
insb
cmp
push
sub
shlb
loop
shr
stc
adc
xchg
mov
sbb
scas
mov
add
sti
movsb
cli
daa
sbb
push
mov
cli
jbe
popa
outsb
mov
arpl
leave
cmpsb
outsl
jbe
mov
jno
push
dec
xlat
pushf
sub
push
fisttpll
push
push
xchg
mov
lods
in
lock
dec
test
fdivr
insl
adc
faddl
ja
mov
sahf
mov
mov
fldcw
mov
out
add
add
test
sub
lods
or
addr16
out
fildll
jae
fisttpl
sbb
xchg
sti
imul
jecxz
jne
aam
popf
outsb
inc
pop
adc
adc
cmp
jbe
mov
insl
pushf
nop
dec
rcr
clc
aaa
js
outsb
xchg
mov
insb
jl
adc
sbb
fcompl
xchg
nop
fwait
popf
aam
test
pusha
push
push
scas
push
mov
lods
jp
sub
mov
sbb
sub
rcrl
or
imul
shll
sub
leave
mov
fisubs
rolb
adc
xorl
cmp
icebp
decl
inc
pop
fdivrs
pop
insl
test
xor
fimuls
mov
lods
fsubrs
pop
lret
fcomi
sub
stc
xorl
sbb
int3
jl
sub
cmp
fldenv
btsl
jp
push
or
and
xchg
pop
aad
add
xchg
mov
cmc
mov
dec
roll
jmp
cmp
and
jno
movsl
out
es
pop
push
cmc
xchg
pop
addr16
inc
js
decl
test
leave
fcompl
insl
stos
in
cli
pop
inc
outsl
je
stos
or
xor
lret
or
std
dec
push
mov
push
movsb
je
int
fistpll
jb
repz
lcall
jne
xchg
inc
test
inc
cwtl
loop
mov
daa
cmpsl
cltd
jnp
mov
mov
cmp
inc
pop
repnz
mov
pop
out
jne
dec
mov
cmp
into
xor
mov
mov
out
lock
cli
out
enter
push
cmpsb
gs
pop
shlb
dec
je
xchg
lods
cmp
mov
leave
cmp
pop
lcall
push
scas
fnsave
lret
dec
cmpl
xchg
addr16
fsubrl
lods
es
push
scas
dec
les
and
stc
jp
add
cltd
pop
test
adc
ja
insb
adc
shrl
jnp
je
or
insb
pop
stos
cld
dec
sarb
fsubr
mov
mov
push
test
and
aaa
scas
jb
push
test
shll
push
or
lods
insl
lods
in
inc
je
popf
mov
dec
and
outsb
daa
das
loop
jle
fildll
sarb
inc
loope
lcall
xor
mov
outsl
ljmp
or
adc
push
sbb
shll
cmpsb
push
lcall
push
jle
stos
sbb
and
xchg
add
test
sti
cmp
pop
popa
in
popa
jg
adc
inc
rolb
xchg
cs
imul
push
sbb
push
sarl
push
pop
cmpsl
push
rorw
mov
fisubrs
out
jae
add
pop
leave
lods
adc
cwtl
sub
inc
dec
push
ret
or
inc
lret
ja
fidivrs
mov
movsl
push
xor
jnp
dec
and
xlat
arpl
push
or
shrl
icebp
pusha
and
xor
cmp
fldenv
lcall
xor
addb
sub
cmp
mov
sbb
and
outsb
pop
push
push
aas
gs
push
mov
adc
jmp
movsl
cmp
mov
movsl
dec
loopne
and
out
scas
mov
cltd
push
xchg
xchg
sbb
jns
movl
dec
popf
push
rcrb
fldcw
aam
push
imul
pop
jl
daa
mov
cmc
mov
aas
hlt
imul
mov
pop
js
inc
cmp
mov
xchg
jle
fidivl
sbb
test
movntq
enter
cmp
mov
xor
fxch
lods
push
cmp
je
rolb
pop
lret
xor
subb
pop
scas
mov
cmpsb
mov
jmp
add
movsl
adc
cmp
insl
push
movsb
mulb
imul
mov
pop
movsl
pop
packssdw
push
mov
adc
stc
in
in
ljmp
add
sti
cmp
insb
ds
jno
or
mov
outsl
adc
orl
jne
or
imul
stos
lret
sub
add
sub
xchg
imulb
jmp
shlb
imull
mov
enter
cltd
nop
fdivrs
in
mov
push
inc
mov
jmp
adc
sbb
js
jbe
loop
fabs
jne
dec
mov
pushl
push
daa
jle
shr
fisttpll
insl
inc
pop
pop
movsl
dec
jp
mov
xchg
sbb
mov
les
in
jne
loop
mov
jne
add
jnp
mov
add
lcall
jl
mov
adc
xor
xchg
loope
add
xchg
out
lcall
call
fisttps
push
fdiv
jbe
push
inc
mov
xor
mov
xchg
addr16
pop
sbb
jo
movsb
dec
push
icebp
mov
xchg
sbb
xor
push
ret
mov
into
cmpsl
xor
aam
pop
sub
mov
cmpsb
lret
sub
push
push
push
pop
stc
in
repz
jmp
or
push
cmpl
jnp
cmp
lret
int3
out
mov
sub
jl
mov
pop
cmpsl
or
in
xor
mov
sbb
test
xor
cli
sub
sub
xor
pop
sub
adc
test
push
fwait
inc
xor
jg
mov
inc
push
repz
and
rcr
cmp
adc
cwtl
inc
popf
xor
scas
test
iret
notl
rcrb
cmp
add
test
cmp
cmc
outsl
or
sbb
push
mov
or
aam
sub
enter
sti
ljmp
iret
adc
xor
mov
orl
jge
mov
lret
leave
stos
mov
mov
inc
popa
out
insb
mov
dec
inc
sbb
push
fwait
or
sahf
mov
and
ficoml
push
mov
push
movsl
pop
insl
sub
ljmp
push
mov
sub
push
adc
mov
jmp
pop
nop
jecxz
jge
xor
push
add
or
sahf
jns
inc
jo
sahf
mov
push
cmp
cld
sti
imul
mov
std
roll
outsb
call
jmp
in
fmuls
xchg
clc
loopne
enter
jno
xor
js
and
or
imul
and
inc
enter
and
jg
mul
pop
push
xchg
mov
fstps
test
int
pusha
cmp
sbb
clc
add
adc
mov
inc
add
sbb
cmp
dec
xchg
mov
mov
inc
lods
dec
nop
or
out
mov
pusha
es
jo
lahf
andl
leave
mov
push
popf
mov
out
lret
pushf
addr16
sbb
pop
mov
jae
mov
stos
in
mov
movsb
dec
sbb
push
push
mov
cmpsl
add
add
inc
mov
inc
pop
pop
das
xchg
sahf
std
and
ret
mov
xor
hlt
fistl
je
dec
repz
or
int3
inc
xchg
pushl
mov
bnd
sbb
mov
add
mov
sarb
sbb
outsl
adc
ret
loop
movsl
insb
sub
ret
xlat
stc
pop
add
das
push
xchg
mov
in
aam
push
add
adc
mov
push
cld
leave
add
call
popf
xor
fwait
cltd
xchg
jne
dec
lds
test
lods
xchg
push
or
repz
jo
pop
jge
call
pop
call
cli
mov
sub
ret
and
xor
mov
push
push
jge
xchg
pusha
shl
xor
ret
test
adc
push
sub
xor
pushf
add
pop
jl
pop
pop
shll
fdivr
ret
subl
or
in
imul
and
test
xchg
mov
mov
mov
and
push
test
sar
inc
inc
nop
cwtl
jg
and
mov
enter
push
add
mov
xchg
addl
cld
dec
sub
inc
mov
pop
incl
dec
cmp
mov
dec
push
cmpsl
repz
pop
data16
das
add
jne
rcll
cmp
loope
sub
xlat
and
lret
out
mov
je
stos
cmp
add
pop
cmc
addb
shl
jno
mov
out
add
xor
inc
adc
mov
push
cmp
scas
add
push
fdivrl
pushf
push
sub
fdivrs
inc
sbbb
loope
stos
repnz
add
movsl
add
sub
cmp
fnstcw
push
mov
shl
xchg
incl
ss
sbb
jo
sub
decb
pushf
mov
mov
test
lds
hlt
pusha
jp
orb
call
cmp
lret
xor
insb
sahf
dec
cld
cmp
cmp
push
or
mov
into
inc
adc
cmpsb
nopl
in
scas
out
pop
mov
xlat
fs
faddl
iret
pop
push
mov
dec
decl
jge
cli
aad
outsb
aad
push
mov
ret
and
rclb
inc
add
add
ucomiss
xor
and
jle
and
add
hlt
aam
adcb
sti
pop
sub
scas
stc
cs
stos
and
jb
xchg
pushf
push
inc
cs
fsts
sbb
jmp
mov
sub
adc
xchg
push
and
cli
sbb
push
pop
jmp
pusha
jle
lcall
add
mov
adc
xchg
push
stc
adc
jns
inc
xchg
mov
add
push
das
dec
popa
inc
aaa
inc
and
xchg
enter
mov
fwait
jp
or
push
xchg
pop
rorb
leave
xor
lret
stos
scas
dec
jp
add
sbb
and
dec
cmp
lcall
xor
addr16
inc
gs
push
in
xchg
dec
pop
incb
sbb
jl
mov
enter
gs
outsl
mov
lret
fwait
adc
and
test
iret
mov
or
ret
pop
fchs
pop
mov
push
xlat
jb
mov
mov
cltd
sub
repnz
cmpsl
xor
aaa
xor
jno
insb
pop
mov
jl
lods
jne
mov
mov
xchg
pop
ljmp
cmpsb
sub
dec
and
add
add
out
pop
push
adc
inc
fldl
or
out
stc
jns
gs
mov
mov
lret
loope
stos
or
das
jl
int
shll
push
push
adc
mov
dec
xor
nop
push
into
pop
inc
ret
push
add
sahf
pop
jge
sub
inc
jo
sbb
cmp
call
iret
mov
sub
in
scas
repz
ret
jg
rcrb
lds
sbb
lods
sub
pop
pop
push
repz
roll
mov
sbb
add
enter
push
rorb
xchg
pop
adc
push
lret
jne
adc
or
out
push
dec
mov
fstpt
dec
addl
call
sub
push
inc
xchg
mov
fistpll
sub
pop
mov
sub
push
pop
pop
stos
stc
pop
sti
call
xchg
std
movsb
push
in
out
lds
cmp
sti
or
mov
pop
dec
cmp
repz
mov
mov
push
bnd
push
clc
ret
dec
lret
lods
inc
outsl
inc
sub
pushf
out
stos
inc
and
sub
xor
insl
push
test
adc
or
or
cli
ja
cmp
pop
inc
cld
xchg
sbb
in
xor
shll
repz
gs
sub
clc
mov
les
out
xchg
aas
xor
xchg
xchg
mov
ja
mov
jno
xchg
and
les
dec
cld
jb
mov
inc
imulb
ljmp
adc
and
in
mov
mov
cmpl
pop
aam
cli
inc
sub
jnp
lods
dec
into
mov
pop
out
addr16
ss
std
stc
xchg
xchg
adc
jae
sub
xorb
pop
jne
ds
push
ljmp
sub
in
inc
arpl
js
cmp
cmc
mov
lahf
out
mov
mov
lahf
int
outsb
push
mov
sbb
loopne
fbld
insl
out
mov
sbb
sahf
mov
jp
popa
jno
sti
inc
fiadds
xor
gs
mov
jmp
sub
xor
or
jge
int
or
scas
mov
jg
je
mov
std
add
dec
sub
ret
jo
xor
scas
icebp
push
dec
inc
scas
mov
pop
push
addb
cltd
xchg
pop
pop
in
arpl
jp
rclb
jg
jne
fwait
pop
pop
xorb
or
pusha
mov
sbb
dec
add
push
mov
pop
pop
and
xor
sbb
dec
pop
jmp
mov
push
jl
dec
cltd
adc
cwtl
jmp
sub
repnz
test
xlat
imul
test
xlat
loop
ljmp
pusha
cmpsl
xor
sub
and
jecxz
cmp
mov
nop
clc
sub
jp
out
sub
jecxz
mov
sahf
out
gs
adc
inc
data16
mov
fcoms
jb
mov
pop
jg
inc
out
aas
aaa
mov
push
cmc
inc
faddp
jb
jmp
sbb
cmp
jl
ficoms
scas
fnstenv
push
out
cmp
fdivrl
aas
cmp
mov
lahf
xchg
scas
mov
push
pop
xchg
insb
clc
sbb
mov
mov
mov
cmp
xor
cwtl
stos
insl
xor
sti
rep
iret
pop
lods
dec
pop
jecxz
fstpl
mov
fldt
and
iret
cmp
clc
jae
push
mov
rolb
xor
enter
xorb
fsubl
test
mov
adc
jno
mov
xor
push
mov
jle
stos
aas
stos
outsl
mov
movsl
xchg
fsts
sahf
ss
inc
loopne
dec
jno
loope
lock
pop
or
push
cmc
mov
dec
jl
lea
add
pushf
pminub
cmp
mov
pusha
mov
ret
ljmp
lret
adc
cmp
pop
insl
inc
xlat
int
adc
sbb
mov
xor
add
lds
pushf
jle
pop
incb
push
leave
movsl
lods
fwait
mov
mov
vpcmpgtw
ds
sbb
cmp
movsl
or
scas
xchg
into
jmp
popa
push
sarl
movsl
cmc
xchg
mov
std
jmp
ljmp
out
out
mov
in
loop
sbb
pop
call
cmpsb
jmp
call
push
in
sbb
lock
int3
xor
dec
push
jbe
jecxz
mov
push
xchg
mov
decb
mov
in
jae
cli
test
arpl
loopne
lea
mov
fcmovb
stos
cmp
stos
sahf
mov
cmp
in
or
in
adc
loope
stc
add
lret
xchg
mov
mov
sub
sbb
outsb
test
repz
sti
push
xchg
lfs
es
cwtl
mov
jne
and
nop
rolb
mov
out
inc
sbb
and
mov
inc
fdivs
push
ss
push
mov
and
and
cmpsl
dec
jbe
gs
lret
inc
pop
push
sbb
outsl
or
fcmovbe
cmpsl
pushl
pushw
ja
ljmp
adc
cs
pop
sarb
mov
lahf
je
mov
adcb
cmp
push
push
xor
test
sahf
inc
mov
sub
cmpsl
xor
arpl
push
addr16
jl
out
ja
aad
mov
sub
leave
fldt
xchg
imul
inc
aaa
inc
add
push
xor
scas
enter
mov
xchg
icebp
movzbl
sbb
or
jmp
xchg
into
fdivrs
push
out
cld
aaa
xchg
push
adc
mov
in
add
imul
mov
jecxz
xchg
mov
adc
repnz
mov
or
inc
shl
xchg
xchg
jo
xchg
jno
test
stc
sti
sti
push
lret
xchg
xor
mov
and
divb
fmul
xchg
push
lahf
punpckhdq
ljmp
je
cmc
divl
pop
inc
adc
inc
int
inc
sbb
into
ret
cltd
sbb
popa
xor
push
xchg
add
or
jge
jae
data16
jg
lret
lcall
add
jg
into
push
ds
sbb
jne
iret
ss
mov
jecxz
icebp
sahf
mov
lret
jp
dec
mov
xor
add
inc
cmc
in
call
xor
inc
jge
pop
movsb
pop
mov
icebp
js
cmp
push
ljmp
xor
xor
cmpsl
ja
ljmp
movsb
icebp
cmp
xchg
lods
push
mov
cmp
xor
and
sbb
loop
push
xchg
dec
das
mov
cmpsb
mov
inc
icebp
inc
jae
lea
shlb
test
or
sbb
mov
ret
test
dec
cltd
mov
ret
sub
out
loope
xchg
push
sarb
or
jns
loopne
cmp
aas
dec
inc
hlt
mov
mov
data16
inc
mov
ret
xor
movsb
leave
fnstenv
xlat
jmp
mov
in
cmp
cmp
lret
jb
fists
insb
shl
push
cmc
fwait
xor
xchg
inc
cltd
cmp
and
sub
in
inc
dec
pop
mov
test
sbb
and
cli
add
fildl
inc
mov
test
and
and
cmp
push
lock
push
sub
xchg
data16
andl
loop
popa
mov
push
push
mov
jns
push
add
mov
lods
addb
out
sarb
lods
aad
jle
cmp
xchg
xor
cltd
mov
cmp
sarb
push
mov
pavgb
xchg
ss
pop
inc
test
in
dec
stos
adc
inc
roll
jno
ja
mov
push
es
or
in
jne
clc
aad
xchg
jmp
mov
cmp
stos
pusha
add
ja
or
or
mov
push
sbb
sbb
sbb
test
push
pusha
icebp
decb
pusha
mov
nop
scas
jle
repz
mov
fwait
sbb
xchg
scas
and
sahf
xchg
mov
jp
push
andb
add
pop
inc
repnz
inc
mov
push
nop
sarb
shrb
std
adc
lds
sbb
pop
icebp
and
mov
dec
in
or
and
inc
push
popa
pop
sbb
loopne
mov
push
outsb
shl
dec
mov
dec
sub
es
adc
adc
jle
inc
cmp
aad
push
adcb
icebp
mov
pop
faddl
insl
sbb
pop
pop
fsubs
inc
repnz
mov
into
add
outsb
data16
xchg
xor
loop
xchg
mov
stos
add
xor
fldt
cmp
ss
xor
outsb
lcall
stos
subl
mov
mov
pop
or
adc
and
adcl
xor
les
mov
push
adc
scas
mov
into
mov
lock
add
push
dec
sbb
jae
jns
test
cld
adc
add
pushf
negb
movsb
negl
stos
popa
xorl
cmp
cmp
cmp
lods
add
jbe
loope
nop
and
clc
and
sub
jle
pushl
dec
dec
and
cmp
dec
test
ret
daa
add
addl
xlat
fs
cmp
dec
xchg
xchg
fcomps
sbb
mov
xchg
loop
add
push
jns
ljmp
out
dec
mov
arpl
adc
aad
shr
mov
mov
shlb
xchg
sub
outsl
add
fs
jb
lret
test
pushf
xor
ret
outsb
test
adc
loop
in
dec
adc
cmp
mov
jne
test
pushf
cmpsb
adc
loopne
popf
mov
inc
stos
arpl
mov
add
movsl
and
dec
fisubl
pop
orb
fldt
adc
and
nop
inc
sbb
outsl
lcall
jnp
xor
xchg
push
in
out
xchg
iret
push
pop
dec
mov
lods
mov
push
pavgb
movsl
mov
popa
jno
fs
mov
push
sbb
mov
xor
mov
popa
and
push
xor
sbb
insl
pop
inc
jle
fnstsw
leave
jecxz
dec
push
mov
pop
sub
bound
jmp
or
sbb
aad
jno
std
mov
pop
or
loop
nop
xor
add
stc
test
aad
inc
out
scas
xchg
pop
cmp
insl
pop
xchg
sub
fsub
xor
in
xchg
rclb
aad
sahf
lods
inc
cmp
scas
mov
xorl
repnz
push
add
int3
hlt
push
test
pop
mov
sub
test
xchg
mov
xor
mov
xor
dec
sub
sar
add
fdivp
jge
popa
outsl
sub
fbld
push
sub
add
test
scas
adc
dec
lahf
cmc
pop
negb
ss
sbb
sub
mov
rcrb
or
push
aam
shr
dec
xor
js
subb
rcrl
or
lcall
std
bound
cs
out
cmpsl
push
push
nop
xor
shl
repz
in
pusha
mov
movsb
repnz
dec
pop
sub
jae
in
lahf
mov
sahf
mov
test
pop
dec
xorb
mov
adc
aaa
notb
mov
clc
aad
xchg
out
ja
pusha
int3
bound
sbb
stos
imul
adc
and
dec
push
cli
mov
jb
fsubs
jae
mov
adc
adc
jae
aam
roll
ds
mov
leave
dec
push
push
inc
dec
dec
daa
loope
inc
test
xchg
dec
stc
xor
xchg
rcll
inc
xlat
sbb
sbb
dec
mov
outsb
out
push
or
jecxz
push
pusha
pop
inc
dec
jno
shrl
xchg
adc
dec
cmp
mov
mov
jo
cmp
and
sbb
sub
and
rcrb
sti
out
mov
jmp
xchg
call
mov
cmp
cmp
scas
ret
out
mov
mov
add
fcmovnb
insb
andb
leave
into
mov
mov
add
cld
and
mov
inc
lret
dec
lret
mov
sub
and
or
pop
lock
cli
dec
test
shlb
insl
and
nop
roll
addl
push
mov
xchg
xlat
arpl
fbld
xor
push
cmpb
daa
pop
dec
mov
mov
mov
fstl
aam
pop
cmc
out
sbb
test
mov
popa
imul
in
mov
pusha
out
push
dec
movaps
push
or
sub
rolb
rclb
sub
subl
mov
lods
mov
or
cmpsl
lahf
jae
orb
nop
mov
xchg
adc
jge
cmp
push
or
and
push
mulb
push
add
leave
gs
lret
aam
movsl
into
aas
cwtl
cmp
test
lret
push
jns
mov
pusha
imul
cmp
xchg
sub
data16
cwtl
and
lret
insl
mov
movsl
hlt
loope
jmp
and
lret
imul
and
mov
mov
addb
jae
or
mov
ljmp
inc
pop
xchg
sub
cmp
adc
xor
jno
adc
xchg
cli
aas
add
mov
aam
cmp
movnti
lcall
cmp
jo
pop
mov
and
test
ficompl
pop
jl
and
dec
mov
ljmp
mov
ds
push
push
sub
mov
mov
vmread
mov
sbb
or
aam
roll
test
imul
xlat
sbb
test
sbb
cmp
mov
mov
xorb
pusha
jle
mov
in
cmp
jp
inc
cmpsb
inc
adc
out
movsb
and
jno
outsl
add
lahf
mov
scas
out
fisubrs
and
xchg
test
and
pop
or
jecxz
lods
es
daa
test
fildl
mov
lahf
inc
fadd
jns
clc
out
lret
loop
lods
enter
ret
jecxz
jae
xor
inc
xor
mov
xor
dec
sahf
pop
mov
test
inc
es
mov
add
mov
push
mov
pop
push
jle
inc
push
mov
inc
sbb
dec
sti
cmc
mov
pop
inc
cmp
arpl
sub
fwait
in
aad
mov
cli
xchg
or
xchg
ds
push
dec
inc
pop
or
icebp
pop
fisubrs
inc
sub
mulb
mov
xor
sbb
inc
in
adc
icebp
or
outsl
test
popf
add
pop
pop
lods
inc
int3
pushf
fcomi
sub
divb
fs
das
mov
into
mov
in
mov
mov
das
cmpsl
lret
xor
lret
popf
pop
imul
sbb
arpl
mov
stos
es
adc
popa
out
lahf
cmp
inc
pop
test
inc
mov
rorl
xor
fwait
inc
cmp
das
arpl
das
das
pop
lds
popa
push
jb
rcll
daa
icebp
movsb
nop
movsb
inc
stos
mov
push
adc
ljmp
test
jle
into
and
cmp
push
jnp
and
jno
lock
adc
sbb
jmp
stos
notb
inc
sub
sbb
or
dec
ss
xlat
cmp
push
jl
mov
lock
scas
jns
leave
imul
dec
push
addl
call
xor
or
aam
jp
or
cmc
sahf
xchg
gs
test
xor
test
into
push
inc
call
clc
push
mov
mov
lahf
cltd
mov
fidivrl
mov
or
and
addb
sbb
nop
mov
push
jo
and
je
out
cs
push
scas
aaa
insl
push
pop
and
das
jmp
xor
pop
xor
mov
arpl
fildl
inc
inc
dec
and
hlt
mov
sbb
push
nop
or
testb
inc
in
or
fs
xor
sub
cmp
aas
lds
cmp
dec
int3
jl
pop
fs
add
outsb
cmpsb
jns
out
add
inc
sbb
test
movsb
fisubrs
lret
jns
mov
cmp
push
sbb
rclb
into
rcl
mov
fldl
push
mov
xlat
mov
stos
adc
mov
pop
adc
out
pop
pop
push
push
pop
aad
out
fcmovnbe
jle
and
dec
gs
ljmp
out
push
adc
aas
lret
mov
ljmp
jbe
inc
sbb
pop
int
xchg
or
js
xlat
jge
rorb
mov
xchg
repz
loop
sub
mov
xor
jp
push
rcrl
jb
push
pop
nop
mov
push
add
cltd
out
push
mov
xor
xor
cld
inc
adc
ja
xor
in
dec
xor
movsl
jae
test
repnz
in
or
js
push
cmc
dec
lcall
aas
cltd
mov
testb
scas
dec
dec
dec
cmc
daa
int
jmp
call
sbb
sub
and
mov
sub
add
lret
and
add
or
jl
pusha
fbstp
cmp
cmc
jne
jnp
rorl
xor
dec
loop
xlat
shl
ds
pop
mov
iret
push
adc
sbb
adc
mov
jecxz
lock
popa
add
mov
xor
jmp
dec
das
or
inc
inc
push
lretw
dec
cli
mov
dec
jns
sahf
loop
jo
ret
mov
stos
addr16
mov
insl
dec
or
inc
insb
xor
int3
fldenv
xchg
dec
in
mov
fsts
jb
ja
mov
inc
mov
imulb
add
movsl
xchg
les
sub
les
outsl
mov
pop
add
push
jnp
cmp
das
xor
or
inc
mov
cmc
mov
add
sbb
jg
lret
adc
imul
xor
aas
sbb
ret
mov
ds
mov
cmp
scas
push
lret
pushf
fcomps
mov
lock
adc
xor
aam
ret
inc
scas
sti
mov
mov
scas
lock
inc
or
mov
data16
sub
push
xchg
scas
push
push
mov
jae
xchg
xchg
into
in
in
xor
lods
lcall
cltd
push
adc
mov
xor
mov
inc
lds
and
loop
lods
mov
jl
push
or
repz
xchg
lcall
les
adc
or
xchg
aaa
inc
lret
insl
addl
and
inc
sub
pop
push
out
fxch
pop
adc
pop
xchg
int3
pop
test
leave
out
pop
std
jnp
mov
imul
fmul
push
lea
data16
jno
cmpsb
or
pop
dec
int3
popa
mov
lahf
pop
call
lods
sbb
or
cmp
lock
ds
mov
les
jmp
mov
dec
ficoms
jge
and
std
xchg
fidivl
xor
or
gs
xchg
sbb
sub
lods
jae
cmp
out
scas
hlt
inc
mov
jge
sbbl
cli
xor
or
nop
mov
and
and
ret
call
mov
and
cld
test
aas
out
std
push
cmp
dec
fldt
sbb
call
fsts
fidivrl
mov
mov
sub
jp
subl
lahf
or
sub
xchg
or
inc
mov
jne
insl
out
pop
hlt
in
or
add
movsl
outsb
scas
outsb
mov
loop
adc
mov
out
lret
inc
cmp
push
mov
xchg
cmpsb
push
int3
rorl
cltd
jle
fwait
iret
adc
cli
xor
adc
cmp
lret
add
push
and
in
xchg
rcr
jno
jo
adc
popf
into
ljmp
xchg
xor
subb
jbe
movsb
adc
xor
repz
lcall
dec
sbb
ljmp
push
sbb
fsts
inc
bswap
aad
movsl
int3
mov
jge
out
sub
insl
sub
icebp
iret
cltd
nop
addr16
imul
ja
je
or
sub
jg
call
std
aaa
sbb
sbb
xchg
leave
int
inc
shll
sbb
jp
mov
jle
testl
or
inc
jecxz
push
adc
lods
jno
mov
mov
stc
xor
ja
xchg
mov
adc
pop
xor
cs
fimuls
jecxz
mov
mov
mov
xor
ret
xor
in
sub
xor
leave
lret
insl
cwtl
push
fcompl
add
mov
cmp
and
out
cmc
stc
aad
sbb
mov
rolb
mov
test
add
dec
adc
sub
and
and
shll
repz
push
jbe
data16
pop
popa
pop
mov
icebp
in
bnd
mov
xor
or
jbe
xchg
xor
outsb
jnp
jmp
inc
stos
loop
and
call
ficomps
nop
fidivrl
push
cli
insl
inc
popa
mov
mov
push
mov
or
or
mov
xchg
push
sbb
and
fisubl
jne
sbb
or
jmp
ret
xor
mov
adc
sbb
inc
lods
test
loopne
push
iret
dec
por
jle
mov
mov
das
sti
out
pop
int3
adc
out
mov
mov
daa
leave
mov
stos
inc
decl
jb
xchg
sbb
push
xchg
ficompl
cmp
call
add
and
sub
jno
repnz
push
mov
repz
notl
cmp
lock
mov
lcall
je
das
add
sub
sub
inc
xchg
rolb
mov
lcall
push
add
repz
mov
push
sbb
mov
jns
dec
ret
push
rcrb
popa
inc
lods
ffreep
addr16
outsl
mov
pop
jp
or
mov
shll
push
sub
sub
fwait
jecxz
ret
addl
lret
ret
add
mov
jne
and
jg
sbb
imull
jne
push
sbb
mov
pushf
lock
add
sti
inc
jo
inc
and
xor
rolb
sbb
adc
rcr
pop
test
jl
imul
daa
pusha
clc
pop
xor
fs
stc
xor
ja
sbb
inc
or
sbb
add
lds
sbb
int
ja
push
xchg
pop
ss
jns
out
fwait
shl
pop
push
inc
inc
mov
mov
dec
push
loopne
lret
in
aam
outsl
mov
pushf
push
std
sti
mov
sub
sub
shrb
or
mov
dec
popa
sahf
mov
xor
scas
inc
fnstsw
push
es
ficoms
rdtsc
xchg
insb
sub
cmp
stos
sti
popf
xlat
je
pop
lret
cld
fcmovbe
mov
ljmp
jge
mov
jp
lds
xor
leave
insl
stc
mov
push
sbb
gs
incb
sbb
push
pop
sbb
mov
mov
xor
test
inc
int
push
xlat
stc
push
mov
push
and
clc
pop
add
gs
out
dec
inc
pop
mov
and
sub
mov
enter
mov
icebp
pusha
jbe
dec
ret
adc
lret
sti
stos
dec
pusha
dec
fnsave
or
pop
mov
jno
cs
cmp
cli
pop
iret
jo
jo
stc
arpl
xchg
xlat
jns
test
add
dec
lods
fs
aaa
cmc
dec
inc
lock
lock
jae
lea
ficoms
cmp
lods
outsl
or
fidivrs
ljmp
sub
adc
rolb
push
xor
jmp
push
test
lds
lcall
mov
push
add
in
add
pop
aaa
jp
cmpsl
inc
pusha
add
js
iret
xchg
enter
mov
sbb
push
rcrl
call
rcr
jae
fildll
fmulp
mov
fwait
imul
pop
push
adc
sub
pop
add
sbb
lds
xchg
xchg
movsl
out
add
loope
stos
pop
pushf
mov
call
rcrl
aad
clc
inc
fistps
stos
lds
sbb
push
imul
jne
mov
sarb
sbb
sub
add
jno
adc
lcall
and
adc
rcrb
or
sbb
mov
cltd
inc
xchg
or
scas
xchg
cmp
and
out
cmp
push
leave
xchg
arpl
sub
das
in
push
mov
cmp
cmp
jo
loopne
mov
adc
ja
daa
sub
jne
add
adc
nop
add
push
and
cmpsb
insb
outsl
sahf
mov
or
xchg
cmp
jne
xchg
call
xchg
aas
popf
jge
repnz
insl
xor
shll
ljmp
cmp
xor
clc
es
das
add
dec
shrl
adc
sub
gs
imul
inc
mov
add
aas
mov
mov
xlat
jae
imull
sahf
fld
or
jl
int3
shrl
loopne
cmp
loope
push
mov
xchg
inc
rcpps
jg
repz
xor
xchg
jp
push
out
xchg
cld
das
pop
shrb
xor
or
addb
pop
push
in
aas
pushf
push
xchg
dec
push
lret
pop
out
sti
and
add
imulb
loop
les
jle
sub
add
ljmp
subb
fsubr
cmp
inc
mov
sbbb
cmp
dec
loop
mov
imul
jnp
icebp
xchg
pop
cwtl
cmp
sbb
fldl2t
les
sbb
pusha
scas
arpl
cmp
aas
jg
into
or
push
xchg
dec
imul
push
arpl
decb
jg
hlt
dec
cld
add
dec
arpl
enter
jl
mov
mov
pushf
mov
es
dec
jle
out
aad
je
xor
inc
aad
push
xchg
mov
pop
icebp
fstpt
xchg
pop
lret
mov
into
loop
jecxz
mov
push
cmp
lods
cld
imul
dec
popf
xor
ficomps
inc
cmpsb
icebp
push
xor
in
icebp
out
lods
fisttps
andb
incb
mov
out
mov
jo
dec
fdiv
xchg
sbb
clc
mov
push
fs
push
xchg
cmp
stos
ss
lret
mov
test
jbe
out
push
push
repnz
hlt
push
mov
sahf
mov
scas
jl
loope
sbb
cmpsb
mov
pop
fnstenv
mov
inc
aad
test
fisubrl
push
xchg
cli
aas
movsb
or
jne
loop
cld
mov
sub
mov
cld
pop
mov
cmp
push
inc
gs
push
aas
pop
push
cmp
shlb
mov
lods
pop
addr16
fadds
orl
ret
scas
mov
mov
cld
stos
cmpsb
arpl
les
rclb
sbb
out
andl
add
xchg
adc
sbb
dec
dec
test
fsubrs
mov
adc
dec
mov
jo
push
xchg
mov
dec
int3
push
out
and
and
out
push
xor
push
fcmovb
std
jg
inc
push
int
aaa
add
cmc
pusha
adc
in
mov
repnz
in
adcb
jb
lret
stos
mov
xchg
pop
fiaddl
add
sub
and
insb
jb
pop
sub
xchg
aad
jge
fisttpll
scas
xorb
pop
mov
mov
mov
inc
inc
dec
mov
and
xor
decl
out
pop
incb
mov
into
aas
shlb
pop
int3
lock
fsubl
hlt
jo
mov
stos
rolb
push
or
cmp
or
mov
test
outsl
push
jp
bound
push
jne
mov
push
cmp
push
imul
cmp
sar
mov
das
dec
push
mov
xchg
inc
and
sahf
xor
stos
inc
aas
in
jmp
xor
xchg
jbe
xor
dec
inc
int
or
or
shrl
hlt
dec
out
inc
shll
mov
js
cld
das
stc
inc
ljmp
sti
adc
js
inc
pop
xchg
loope
push
push
call
inc
rorb
mov
or
jge
into
lods
and
mov
addl
jnp
xor
sti
xchg
imul
stos
imul
mov
lahf
sbb
mov
icebp
and
pop
jg
loop
push
jecxz
sti
pop
pop
scas
gs
ret
bound
shll
data16
sub
mov
jecxz
xor
jmp
push
pop
adc
imul
mov
cwtl
ss
movsl
and
cmp
enter
les
iret
rcll
arpl
imul
cltd
cmpsb
mov
fmul
mov
out
xchg
and
or
rcrb
cmp
inc
popa
pop
mov
add
shr
sti
and
inc
cmp
lret
dec
xchg
test
popa
test
out
cmp
mov
push
cmpsl
lea
lret
mov
mov
xor
lds
ret
out
call
push
sahf
jbe
addr16
int
sahf
sahf
jp
sbb
jl
jns
push
daa
push
fcoml
xchg
popa
mov
mov
lods
sbb
cmp
push
pop
inc
pop
data16
push
cmpsl
dec
add
fs
cmpsl
cs
mov
cltd
mov
mov
aad
cmp
push
push
ja
imul
mov
mov
jl
xlat
mov
out
repz
pop
lcall
mov
call
lds
lahf
lods
sub
into
cmpl
test
push
add
pop
arpl
bound
daa
filds
and
or
insb
push
xor
rclb
dec
jge
add
push
movsb
sbb
cmpsl
mov
add
scas
xchg
sarb
sbb
pop
sbb
mov
lods
lahf
xor
or
push
es
xor
adc
aad
fiadds
add
int
add
or
mov
sahf
lret
pop
nop
outsb
pop
pop
sub
mov
out
fwait
inc
flds
daa
push
sarl
in
add
fs
jmp
xor
iret
mov
in
adcb
andb
xchg
aam
insl
and
and
int3
addr16
xchg
inc
in
xor
mov
mov
mov
iret
pop
enter
and
cld
popf
inc
inc
into
in
jbe
out
adc
faddl
fstpt
fsubrl
and
cmp
mov
clc
cmpsb
movsb
and
stos
dec
int
imul
jl
shlb
push
fwait
and
fs
fcomip
bound
enter
xchg
jmp
imul
inc
adc
insl
std
mov
fcomps
push
cmp
data16
dec
xchg
fcoms
mov
std
or
xor
ds
cmpsl
ret
jge
dec
adc
mov
lret
cmp
clc
std
loope
jo
xlat
cmp
ja
outsb
sahf
in
aam
mov
in
nop
mov
push
sbb
scas
and
cmp
and
lock
cmpsb
jge
xor
aad
stos
aad
xlat
shlb
mov
shll
jecxz
int3
inc
add
cmp
loope
popfw
jno
inc
pushw
pop
nop
push
mull
sbb
push
sub
jg
push
xor
add
repnz
addb
or
sti
mov
out
xchg
pop
lret
test
pop
jl
stos
cwtl
scas
sbb
loopne
lods
or
xor
mov
fdivrl
or
add
lret
cli
stos
lcall
repz
stos
iret
pop
stc
das
inc
push
jo
push
or
loopne
push
lds
add
lods
jge
or
lods
adc
subl
inc
mov
adc
je
test
jb
lcall
cmp
int
mov
scas
test
cld
xchg
mov
mul
sbb
mov
pop
pop
mov
or
jne
es
sti
fwait
pop
das
dec
cmp
and
lea
inc
sbb
sbb
inc
dec
pop
iret
mov
cmp
popa
fadds
cs
jecxz
mov
cwtl
xchg
inc
mov
fs
test
outsb
mov
lods
mov
add
adc
movsb
cmc
inc
loop
push
loop
jo
pop
mov
adc
cltd
inc
scas
mov
jg
sti
test
pusha
mov
out
or
and
icebp
mov
int
sbb
insb
fsubl
pop
in
lds
addl
lret
divb
or
sbb
pop
mov
fnsave
dec
pop
lcall
out
inc
sahf
mov
data16
nop
and
movsl
shrb
je
loope
lods
es
dec
and
je
ljmp
adc
ret
pop
add
mov
pop
ljmp
clc
jp
sahf
std
sar
divl
dec
xor
aas
add
mov
hlt
and
testl
mov
pop
scas
inc
test
adc
and
cmp
add
enter
push
pusha
cs
cs
out
cli
inc
push
push
fcompl
push
pop
repz
and
fwait
int
lcall
std
aad
mov
out
mov
cs
bound
mov
lods
sbb
dec
adc
mov
dec
jg
mov
in
xchg
cmp
cltd
adcl
les
sti
nop
xchg
fcom
icebp
insl
repz
gs
pop
push
scas
dec
pop
xor
mov
push
out
lret
pop
leave
pop
out
cmp
sti
inc
xor
pop
jl
das
pop
enter
insl
sbb
push
jb
sbb
xchg
data16
loopne
add
insb
das
mov
ficoms
jnp
xor
xor
xor
mov
in
adc
fcoml
xchg
lock
sub
pop
xchg
std
xor
outsb
inc
or
fcomp
and
jno,pt
lods
movsb
lea
or
fdiv
sub
aaa
xlat
or
shlb
into
xor
stos
aam
or
xchg
xor
test
orb
dec
repnz
adc
out
popf
je
dec
stos
cmp
mov
shr
decb
jmp
cwtl
jle
pop
sub
test
imul
mov
sbb
loopne
push
movsb
js
fists
cli
sub
lret
pop
int3
xchg
adc
mov
hlt
sub
sub
sahf
sbb
jle
sahf
and
xor
xor
mov
ljmp
leave
sub
mov
frstor
fsubl
push
pop
adc
je
cli
push
cli
cmc
in
pop
pushf
loopne
push
loopne
lret
pushf
arpl
or
cs
and
mov
pop
or
cmp
pop
xor
mov
push
adc
xchg
pop
das
pushf
and
pushf
in
or
mov
fbld
inc
movsl
jns
data16
out
movl
fwait
hlt
cmpsl
xor
nop
sbb
cli
inc
icebp
test
jbe
mov
dec
dec
jmp
imul
sub
cmp
lret
fs
mov
cs
jo
call
fidivrl
add
push
and
lret
cmp
ret
outsl
dec
jge
pop
cmp
jl
cmpsl
sbb
push
sub
pop
popa
pop
xor
jle
jg
jns
outsb
jmp
adc
adc
subb
aad
adc
fs
push
mov
ret
sarb
adc
add
mulb
rorb
dec
int3
call
jle
aas
aas
in
pop
push
arpl
xor
fwait
dec
xor
out
fldenv
xor
leave
enter
dec
leave
popf
sbb
popf
gs
insb
and
jle
cmp
daa
je
mov
or
push
xor
pop
outsl
sbb
push
inc
sti
cs
test
jecxz
adc
sbb
idivb
mov
or
loope
rorl
clc
aaa
jg
cmpsb
xchg
shll
outsb
mov
jne
dec
or
int3
imul
add
add
call
mov
test
popa
mov
out
aas
cmpsl
aas
lahf
clc
les
xchg
lea
subb
gs
cmpsl
stc
loopne
ds
aaa
and
iret
leave
dec
arpl
push
repnz
scas
lock
jnp
outsb
test
test
jl
jp
rclb
add
mov
lds
imul
aad
jl
mov
lds
add
repnz
mov
sbb
daa
or
xor
leave
pop
loopne
mov
call
mov
sbb
mov
pop
sbb
pop
pusha
movsb
in
pop
and
cmp
adc
or
bnd
mov
mov
and
je
cmp
jl
es
mov
mov
add
fildl
shrb
std
mov
jp
dec
out
pop
push
lods
mov
jge
int
mov
aaa
mov
imul
mov
fildll
jl
push
dec
iret
aam
int3
dec
push
das
lcall
xor
cmp
adc
inc
pop
fists
mov
push
repnz
ja
cmp
mov
popf
cmp
daa
sub
add
aad
int3
pop
add
pop
push
jnp
cld
pushf
jmp
add
movlps
push
mov
aas
std
add
aas
or
pop
xchg
jne
jmp
push
pop
outsb
add
rol
ds
dec
pop
mov
sub
jle
cwtl
push
dec
jecxz,pt
lods
addr16
push
dec
into
scas
ds
addr16
xor
inc
mov
mov
inc
imul
mov
mov
pop
xchg
pop
pusha
fsubr
call
mov
movsb
sub
sub
sbb
push
cltd
cld
mulb
dec
fdivs
test
addr16
int3
hlt
aas
mov
rcr
push
and
in
pop
cmp
jmp
aaa
xor
aam
pop
in
cwtl
in
inc
push
loopne
push
fdivl
aad
nop
in
and
inc
inc
pop
pop
dec
mov
mov
into
dec
add
mov
ds
js
mov
test
lds
das
lsl
jae
lret
pop
imul
rolb
aas
paddusw
das
xchg
stos
mov
jns
fs
mov
lret
scas
sub
cmc
inc
aad
push
mov
ds
bnd
add
sbb
dec
fldt
out
dec
and
ret
ret
cmp
adc
push
adc
femms
std
stos
jp
mov
sub
div
push
cmp
xchg
fucomip
outsb
gs
and
aad
mov
int3
mov
jecxz
cmp
dec
or
cmpsb
mov
addr16
inc
and
fistpll
scas
adc
ret
outsl
fs
lods
popa
mov
jnp
jno
lret
cmp
pusha
pop
scas
mov
cld
loop
fst
ds
push
adc
pusha
inc
push
lds
repz
movsl
push
sub
push
cld
std
or
add
popf
repnz
xchg
mov
and
rorl
push
push
sub
inc
dec
and
fldenv
push
popf
dec
push
addr16
enter
scas
aaa
and
or
and
stos
xor
xchg
push
xchg
mov
seto
orl
icebp
xor
sbb
and
xchg
jge
xor
pop
call
xchg
subb
das
xchg
jg
loope
adc
notb
test
cs
sbb
lock
push
movsl
push
lahf
loopne
scas
in
loopne
adc
addl
fwait
cwtl
jle
sbb
dec
rolb
lret
xchg
pop
stos
xor
out
mov
mov
sub
jae
push
pusha
int3
push
insl
ja
lret
mov
movsb
fsubl
or
pop
daa
ss
out
xor
xchg
adc
testb
mov
in
mov
mov
cltd
cwtl
fmul
jp
jg
lock
mov
iret
cmp
mov
imul
inc
rclb
sbb
push
cmp
cli
jne
shrl
stos
sbb
inc
push
sbb
and
or
jae
sbb
icebp
mov
pusha
push
and
lret
add
fildll
xorb
out
add
sub
test
dec
xlat
fstpt
in
push
cmpsl
repz
nop
out
and
jl
stos
xchg
sbb
imul
add
repnz
cmpb
lds
inc
shr
fnstcw
out
cwtl
dec
inc
aas
add
in
fbstp
dec
sbb
clc
in
sti
pop
xchg
lahf
fucom
fiaddl
insl
sbb
pop
push
ror
jl
lods
scas
aaa
stc
xor
hlt
sti
inc
aam
iret
mov
jne
nopl
into
cmp
fmuls
mov
xchg
dec
xchg
subb
xchg
scas
sub
lahf
les
xchg
xor
js
call
psrlw
or
adc
ljmp
aaa
jg
xchg
jne
pop
hlt
cmpsl
or
popf
inc
test
lock
jne
pop
mov
scas
jnp
jmp
dec
lods
xchg
push
mov
ss
sub
aaa
xor
popf
mov
fimull
daa
in
ficompl
loop
mov
push
rcl
imul
mov
and
lods
mov
sbb
lret
sub
les
push
cmp
sbb
loop
cwtl
inc
add
in
nop
mov
shrb
mov
insl
jmp
jle
aad
add
mov
mov
inc
fwait
loopne
fsub
ds
mov
sarb
aam
mov
out
bound
jmp
lods
jg
and
mov
imul
dec
daa
mov
test
iret
cld
cltd
mov
mov
sti
and
xchg
pop
pop
fidivrl
int3
out
adc
mov
repz
pop
insl
cwtl
sub
cmpsl
ret
pop
ja
mov
lods
adc
mov
daa
xlat
inc
fimull
fistpl
ljmp
inc
mov
cmp
jg
ret
mov
xorl
push
lret
or
loop
leave
incb
fnstsw
sub
push
push
lret
stos
xchg
aas
ja
and
push
arpl
xchg
xchg
fsub
jno
jle
dec
mov
fildll
pop
sub
xchg
in
jge
cmp
les
or
or
xor
test
push
xor
out
cmp
jle
sub
or
mov
rcl
sub
and
mov
pop
fpatan
repz
out
cmpsl
cltd
fdivs
cmp
mov
sbb
dec
xor
push
pop
rcrb
fwait
or
add
mov
jns
xchg
jg
jne
stos
jmp
out
sbb
push
sbb
xlat
rcr
in
std
insb
jmp
leave
fdiv
loop
push
ljmp
leave
lds
add
cmp
ljmp
cmp
icebp
jno
int3
and
int3
mov
mov
rol
mov
nop
add
int
repz
ja
data16
mov
jmp
imull
mov
into
xchg
adc
xlat
ds
or
popw
sub
push
pop
adc
pop
cmp
and
sub
imul
add
xchg
mov
push
dec
mov
inc
pop
stos
push
loop
mov
lock
mov
mov
xchg
movsl
bound
nop
mov
jb
dec
das
add
inc
fxam
or
push
mov
fstl
out
fisttpl
movsl
jbe
lods
ficompl
icebp
js
fxtract
cmpsb
sbb
inc
jnp
enter
incb
ss
mov
lcall
fsts
roll
cmpsl
ljmp
dec
fbstp
xchg
sub
sbb
mov
sbb
sbb
and
jmp
cmp
leave
cmp
push
out
jl
and
pop
jae
pop
pop
xchg
xlat
push
adc
test
sbb
xchg
fwait
cmpsb
cmpsb
inc
das
mov
pop
adc
inc
in
ret
lret
das
pop
xor
inc
inc
out
add
test
mov
mov
cmp
out
data16
sub
cmpsb
lret
mov
fcom
lock
mov
mov
arpl
pop
in
rcrb
sub
lock
push
fisubrl
inc
fidivrl
imul
xchg
scas
aad
inc
sbb
add
mov
in
cmc
in
add
test
ja
push
sbb
dec
popf
jbe
inc
fldt
fidivrs
adc
and
dec
mov
adc
fs
jno
inc
out
mov
push
mov
mov
mov
cmp
test
dec
pop
les
or
fsubl
add
cmp
into
pop
dec
mov
xchg
rolb
je
fstl
adc
movsb
test
leave
pop
loope
inc
sbb
mov
mov
jecxz
jbe
sub
and
inc
push
mov
stos
add
call
movsb
test
fstps
loopne
or
inc
dec
mov
sbb
ret
les
popf
lea
aas
imul
lods
adc
mov
inc
jns
jecxz
pop
xchg
test
popa
out
sub
pop
cld
jne
or
lret
inc
pop
loop
mov
icebp
mov
mov
inc
fnstenv
sbb
add
iret
test
hlt
test
scas
pop
mov
push
jno
or
and
cmp
push
gs
jl
jmp
mov
outsb
mov
jae
push
inc
adc
lahf
adc
mov
js
dec
xchg
js
xchg
loope
push
cmpsl
ret
pop
or
jle
mov
nop
xor
andb
rcr
in
int
outsb
cmpb
imul
mov
or
add
jp
orb
xchg
gs
in
loopw
sub
out
mov
ss
js
lret
mov
mov
lea
rcrb
push
inc
sbbl
outsb
mov
rcll
mov
test
pop
lds
and
or
out
jo
or
mov
outsb
ja
jbe
nop
adc
jge
or
outsb
push
jno
inc
mov
aas
sti
dec
push
push
in
cmp
push
mov
clc
adc
push
push
mov
mov
scas
aad
stc
dec
shlb
or
out
fdivrs
sbb
mov
lods
enter
mov
out
movsb
daa
mov
shrl
movsb
nop
or
lods
mov
or
jle
test
inc
nop
in
stc
mov
adc
test
sub
push
or
and
gs
jle
loope
pop
outsl
je
ficompl
mov
fwait
mov
or
push
loop
push
ret
in
sahf
test
mov
add
mov
mov
dec
dec
rsqrtps
pop
lock
jg
mov
pop
or
pop
leave
fisttpll
jmp
add
aas
fcomps
test
mov
push
jge
xchg
test
lods
ljmp
cmp
fstl
and
cmc
sub
or
or
addr16
sbb
mov
scas
in
jle
lahf
loope
adc
add
fisubrs
push
xor
gs
stos
test
mov
xchg
fisubs
lret
hlt
enter
sbb
and
shlb
pushl
xchg
js
sbb
sar
mov
jae
jae
loope
xchg
pop
inc
shl
mov
sbb
lock
fwait
pop
movsb
mov
mov
daa
ljmp
xor
mov
jecxz
push
sub
fsubrs
imul
add
rcr
daa
jne
lahf
out
sub
xchg
mov
lahf
popf
ja
repz
imul
out
jl
jo
sbb
mov
adc
or
stos
cmpsb
ds
daa
mov
icebp
leave
inc
je
stos
insb
lahf
stos
int
mov
xor
neg
fildll
fiadds
jbe
scas
mov
insb
fistpl
inc
dec
dec
mov
jecxz
pop
jbe
cmp
sub
push
js
fmull
inc
loope
dec
ja,pn
mov
sbbb
sub
mov
mov
sbb
and
inc
inc
aaa
scas
dec
mov
aad
push
cmp
dec
adc
daa
pop
sbb
ljmp
add
mov
subl
out
in
mov
dec
sbb
sbb
test
sbb
fcomps
jp
outsl
sti
ficomps
cs
insb
adc
dec
jmp
icebp
mov
lret
mov
and
rclb
push
pop
push
pusha
xchg
and
pop
inc
xor
pushf
clc
and
dec
in
mov
add
loopne
cmpsb
jae
push
or
adc
adc
sbbb
xor
cmp
sub
insl
inc
cmp
cs
add
pusha
jo
mov
pop
filds
xchg
in
loopew
xchg
popa
movsb
and
data16
mov
xor
jns
cmp
cmp
cmp
jp
and
sbbb
cwtl
lock
lcall
ror
call
dec
mov
add
fistps
clc
je
adc
dec
popa
shlb
sahf
sub
call
shll
int3
dec
mov
int
stos
push
mov
add
sub
adc
sub
sbb
jns
xlat
pop
adc
lret
daa
jbe
out
repz
jae
jns
xchg
adc
fwait
cmpsb
popf
sbb
mov
push
insl
jp
repnz
mov
test
imul
cmp
or
push
in
jmp
push
jmp
add
and
hlt
lcall
sub
ja
mov
mov
mov
sbb
lea
pushf
test
insl
mov
fsts
insl
cmp
or
or
sbb
mov
push
mov
jnp
pop
repz
loop
cmpsl
ljmp
fnstsw
pop
push
push
sub
cmp
mov
dec
inc
cmpsb
and
cmp
sub
dec
imull
scas
test
mov
pop
sbb
adc
jle
jns
pop
outsl
add
es
pusha
fisubl
and
add
xchg
call
sub
mov
mov
lret
pushl
pop
rol
sub
test
fs
ss
and
outsl
scas
fs
add
jecxz
test
jmp
rolb
mov
lret
push
insl
dec
ret
xorl
xchg
cmpb
cmp
dec
pop
loop
data16
sbb
scas
add
push
pushf
and
push
aaa
nop
xchg
scas
mov
mov
pop
xor
andl
into
jnp
fcomps
stc
lret
out
adc
sbb
xchg
pop
dec
lods
mov
test
ss
outsl
icebp
xchg
dec
bound
mov
jb
dec
outsb
lods
dec
jecxz
push
mov
jbe
xor
mov
dec
adc
divb
adcl
cmpsb
mov
je
sub
mov
cmp
push
cmp
andb
lret
jb
xchg
pop
fmul
adc
nop
insb
mov
mov
mov
idivb
xchg
cmpl
mov
push
lods
jp
inc
pop
sbb
xchg
or
pop
pop
or
push
dec
inc
jnp
inc
or
sub
pushf
mov
adc
cltd
scas
push
loope
sub
sbb
jo
dec
dec
js
test
mov
push
ja
les
gs
ds
and
sbb
or
and
xchg
mov
dec
pushf
jno
je
mov
insb
sub
das
jns
call
pop
sub
sbb
pop
iret
inc
jle
mov
or
lret
xor
push
mov
cli
pop
fcoms
jbe
mov
fidivrl
popa
push
loope
movsb
sbb
sbbl
ja
sbbb
pop
int
lret
arpl
mov
out
push
fwait
xchg
roll
jecxz
test
sti
mov
adc
aaa
or
add
adc
sbb
dec
rcrb
jmp
xor
aad
xchg
mov
rorb
aas
int3
xchg
mov
cmpsl
sti
lahf
and
out
rclb
pop
mov
inc
sub
fs
adc
sti
mov
xchg
cmc
stos
pop
xchg
push
push
pop
dec
xchg
inc
out
adcl
cld
pop
push
ja,pt
mov
sbb
icebp
rcrb
jns
andb
cmp
lock
push
sub
dec
or
pop
mov
pop
out
test
pop
fwait
sub
mov
pop
adc
push
aad
pop
dec
adc
pop
clc
sbb
loopne
popa
and
push
jb
popa
sbb
sbb
xor
mov
pusha
mov
mov
aad
add
or
push
test
out
icebp
aaa
pop
push
pop
adc
dec
js
cld
jno
filds
mov
cmp
ret
dec
js
fcmovne
dec
cwtl
fcmovnu
jae
pop
das
mov
add
mov
inc
daa
in
movsb
je
sar
push
mov
jnp
add
es
or
aam
adc
and
js
pop
cwtl
push
mov
ljmp
xor
pop
adc
jne
adc
push
jl
fadds
dec
frstor
pop
sub
das
mov
sbb
andl
in
pop
and
sub
jb
fsts
in
loopne
aam
dec
cmpsb
push
pop
adc
loope
sbb
adc
dec
adc
sarl
cmp
stc
lcall
repz
and
mov
mov
sbb
xchg
pop
mov
inc
xor
pop
fwait
ret
loopne
push
jns
shlb
ja
fwait
add
inc
jbe
xor
repz
scas
in
cmpsl
jne
jmp
mov
jae
jnp
xchg
loope
icebp
rcrb
xlat
mov
aam
and
mov
arpl
ret
scas
adc
sbb
push
lock
sbb
push
sbb
push
stos
das
cmc
jnp
adc
add
cmp
mov
insb
mov
or
xchg
xor
dec
pop
or
mov
xor
pop
xchg
jge
mov
dec
push
ss
jge
add
ss
fldcw
test
stc
sbb
lods
inc
aaa
push
mov
loop
adc
iret
divb
mov
andl
div
or
or
shlb
xchg
int
inc
jne
stos
loope
mov
int
pop
les
std
pop
inc
mov
popf
mov
or
push
xchg
leave
xchg
cli
lahf
jmp
lret
xchg
xchg
fwait
mov
adc
scas
invd
jno
dec
into
mov
fstpl
pop
and
inc
sbb
sti
test
push
pusha
shll
les
mov
pop
out
lock
shr
inc
jnp
lahf
pop
imul
in
xchg
out
push
int
lahf
jmp
or
mov
adc
lods
jnp
inc
push
add
cmp
pop
add
repnz
movsl
rcll
or
dec
mov
popf
cld
jmp
sbb
push
xchg
ret
int3
ja
pop
cmc
aas
xor
dec
mov
dec
outsb
mov
lock
cmp
fistpl
mov
add
daa
fsubrs
jb
addb
xor
fisttps
pushf
dec
and
cltd
out
lods
dec
xchg
test
sub
jp
mov
bound
cmc
in
pop
out
cmp
xchg
push
std
cmpsb
dec
lret
icebp
xor
dec
testb
fmul
cwtl
and
xchg
xor
xor
imul
fidivrs
fdivs
jmp
push
inc
in
pushf
out
arpl
jl,pt
or
jp
sub
lahf
add
insb
cmp
dec
xchg
xchg
dec
mulb
add
and
sub
push
pop
loopne
adc
fiaddl
mov
pop
add
sbb
rorb
in
sbb
gs
push
icebp
ljmp
jle
cmpsl
mov
inc
es
enter
pusha
or
jbe
xchg
add
add
insb
sub
hlt
pop
loop
inc
in
stc
push
fistpl
dec
int3
sbb
insl
shll
and
adc
add
aam
adc
jnp
lds
mov
jecxz
int
mov
dec
mov
in
clc
insb
daa
adc
cld
pop
orb
dec
mov
jle
mov
movsb
mov
lea
cmp
xchg
in
scas
sub
xchg
mov
sbb
dec
and
push
push
xor
pushf
mov
xchg
and
mov
hlt
lock
mov
mov
xlat
stos
aam
cwtl
push
xchg
inc
add
push
imul
add
dec
pop
aam
fwait
mov
or
xchg
int3
inc
cmp
fsub
and
dec
in
sahf
orl
out
pop
mov
pushl
inc
in
and
int
xlat
lcall
stos
int3
inc
inc
sub
fwait
aad
xor
inc
and
lahf
ficoms
lahf
cmc
ja
sub
push
es
xrelease
push
notl
sub
pop
int3
popf
xchg
aad
add
xlat
jp
jns
sub
xchg
cli
ficompl
xchg
movsl
adc
push
ret
inc
lods
stc
sbb
mov
mov
add
pop
cmp
leave
cmpb
fucomi
sti
cltd
jp
push
jge
xchg
mov
or
lods
ret
dec
or
jecxz
stos
sahf
sbb
pop
fcomi
lds
popa
out
mov
add
mov
mov
pushf
xor
stos
shrl
clc
pop
test
in
cwtl
jae
push
es
sbb
mov
inc
rcll
sub
adc
iret
mov
push
cmpsl
jnp
mov
insb
loope
and
or
into
outsl
lods
leave
out
insb
aas
mov
mov
imull
fnstsw
xlat
sahf
inc
cld
sub
incb
sbb
jb
xchg
push
out
pop
inc
add
imul
adc
push
cs
xchg
stos
dec
jnp
dec
and
repnz
jmp
push
out
dec
sub
pop
insb
mov
or
push
pop
sbb
out
call
sbb
dec
mov
mov
and
inc
fwait
mov
repnz
imul
pop
cmp
in
pop
cmp
add
cmp
mov
flds
popa
sbbb
fcompl
mov
jae
cmpsb
inc
adc
stc
inc
push
sub
repz
mov
xchg
mov
lahf
push
mov
popa
sub
xchg
cmpl
and
pop
mov
repnz
add
xchg
nop
test
shlb
mov
xchg
push
sbb
cwtl
pop
cmpsl
or
in
pusha
frstor
xchg
and
es
pop
add
adc
jbe
in
test
jne
xchg
mov
ret
xor
mov
mov
inc
sbb
mov
sbb
fisubrl
adc
push
outsl
adc
je,pt
sub
xchg
push
rcrb
mov
xchg
xchg
push
and
push
clc
sub
addr16
repnz
outsb
pop
mov
roll
fdiv
xchg
cld
sub
inc
fs
push
and
xchg
fwait
popf
cmpsl
jae
mov
jbe
dec
push
stos
fisubrl
inc
popf
sbb
pop
ja
je
jle
es
mov
mov
inc
fildl
ret
xchg
xchg
and
aas
les
lcall
cmp
xchg
and
xor
push
ss
stos
ljmp
fdivrl
lock
data16
xlat
inc
fildl
or
or
clc
push
jle
xchg
push
pop
into
xor
pop
insb
daa
mov
out
xor
add
icebp
lcall
pop
cmpsl
jbe
lods
mov
movsl
rorb
xchg
stos
jno
xor
loop
xor
xor
mov
jno
and
aam
sub
int
rclb
inc
shll
xchg
imul
in
sti
push
cmc
pop
pop
ja
leave
int
sub
or
bound
adc
sahf
mov
jo
jg
or
cli
or
sahf
and
xor
iret
mov
push
das
hlt
arpl
mov
sbb
xor
xlat
mov
xchg
xchg
test
cmpsl
cmp
xor
hlt
pop
fucom
or
xor
mov
outsb
mov
mov
or
popf
in
cmp
add
push
xor
sahf
aas
outsl
jno
or
sti
mov
fcomps
sbb
pop
fisttpll
lods
pushf
dec
lcall
xchg
daa
jbe
mov
std
and
bound
loope
inc
in
pusha
sbb
jg
pop
add
pushf
jb
xor
pop
push
cli
insb
push
push
shrb
xchg
call
sub
pop
ljmp
xchg
rcrl
push
cmp
ret
dec
mov
or
test
xlat
jo
cmp
or
out
inc
sub
dec
sub
imul
hlt
sbb
loopne
movsb
sbb
inc
std
jns
jp
pop
or
cmpsl
adc
pop
sbb
inc
rolb
jmp
xor
xchg
mov
fst
dec
shll
adc
mov
cmp
cmc
mov
and
inc
mov
xor
sub
cmp
jno
rolb
xor
push
cs
sub
cwtl
mov
cltd
into
push
cmpsl
push
int3
outsl
stos
daa
shrd
js
cmp
jmp
push
mov
ret
test
dec
push
jo
cmc
andl
lock
mov
fcmovnu
mov
inc
push
div
daa
pop
jg
sahf
fwait
xor
sbb
rcll
sub
arpl
mov
add
fnsave
pop
bound
test
mov
and
sub
std
stos
xor
mov
scas
push
pop
popa
pop
xor
push
or
add
mov
xor
repnz
leave
stc
dec
nop
sbb
movsl
mov
iret
cmp
sbb
js
int
cli
and
leave
jne
cwtl
ljmp
stc
sbb
sbb
jo
or
mov
sbb
sub
or
jecxz
or
add
scas
mov
negl
sbb
addl
sahf
popf
xchg
outsl
sbb
push
stc
repnz
into
jp
pusha
pop
int
mov
aam
xlat
mov
or
cli
out
and
push
fistpll
lahf
lds
in
xor
leave
mov
dec
out
lds
loope
inc
dec
aam
pop
add
sub
or
cmp
dec
inc
sub
add
xlat
add
ret
bound
pusha
iret
fwait
js
sbb
fsubs
xchg
sbb
out
cmp
dec
arpl
pop
inc
lea
test
cli
dec
bound
mov
dec
cmp
pop
dec
push
incl
jno
cmpsl
jb
cld
je
pop
shrb
sub
add
adc
mov
mov
mov
into
and
je
mov
pop
sahf
xor
lret
loop
cmp
push
outsb
cmp
out
imul
push
pop
rcrl
enter
pop
insl
rcrl
jl
stc
addr16
sub
stos
imul
lcall
fldenv
aam
add
orb
js
mov
daa
mov
xchg
dec
je
add
fisttpl
fdivrs
out
push
lea
scas
jae
outsl
shr
ret
stos
push
scas
repz
aad
je
out
sub
loope
test
mov
scas
pop
push
push
rorb
pop
fnstenv
stos
iret
push
xchg
mov
adc
ja
shll
cli
or
pop
sub
and
mov
xchg
and
hlt
adc
fwait
jb
addr16
or
stos
mov
pop
sbb
jmp
jae
gs
or
lock
sub
pushl
mov
andb
js
imul
sub
push
sahf
mov
cwtl
icebp
in
divb
xchg
xor
nop
cs
push
xor
je
mov
je
inc
in
dec
mov
pop
neg
mov
rolb
jl
push
or
stos
das
cmp
aaa
push
jg
pushf
pop
out
sbb
adc
scas
mov
jbe
movsb
pusha
mov
lea
inc
lods
ss
insl
gs
push
push
imul
sub
add
inc
fldcw
into
push
xchg
pop
add
xchg
jae
push
or
test
xor
jnp
jecxz
xor
push
in
sti
aad
fsubrl
cmpsl
cmp
test
push
sbb
xor
dec
out
fwait
mov
xchg
inc
pop
mov
or
iret
push
jae
shr
add
cld
jmp
frstor
pusha
jae
mov
mov
outsb
cmp
in
lcall
movsl
cmc
jge
xchg
xchg
out
pop
jnp
ds
pop
mov
dec
and
ds
xor
push
out
mov
es
incb
test
sbb
sarb
nop
dec
mov
cmp
lods
loop
sub
sarb
push
rol
jl
xchg
dec
das
fstl
jl
faddp
jns
nop
add
jne
xor
sbb
mov
andb
push
stos
test
les
pop
jae
add
and
inc
xchg
sub
aaa
es
push
xchg
fisubrs
scas
repz
dec
add
jmp
jmp
in
popf
jno
fistl
mov
fisttpl
inc
iret
ja
rorl
dec
mov
lahf
sub
imul
and
sub
push
stc
adc
lds
and
rorb
movsb
mov
xor
test
mov
pop
test
stos
mov
inc
jne
add
inc
add
mov
icebp
mov
add
dec
add
test
movsb
in
or
and
lret
and
dec
pop
ret
pop
jne
out
cmp
es
rcrl
shrb
ficompl
xchg
in
in
out
or
inc
lret
scas
mov
jnp
std
decl
and
call
sbbl
or
inc
ficomps
cli
inc
mov
push
sti
mov
cmpb
int3
and
in
pop
dec
es
adc
xchg
aam
arpl
insb
xchg
aam
push
adc
dec
dec
arpl
es
gs
cltd
into
mov
aam
cld
pop
jb
xor
mov
cmc
mov
sub
dec
add
lods
pop
orb
xor
fiadds
push
sub
into
dec
call
cmpl
divl
movsl
inc
lea
int3
mov
sbb
repz
loop
sbb
jge
inc
icebp
sbb
jae
addr16
push
xchg
jmp
addl
inc
aas
ficoms
int
orb
test
pop
inc
jle
sub
arpl
jmp
out
push
popa
or
mov
icebp
cmc
xorl
add
xor
dec
cmpsl
iret
xorl
or
add
mov
rcl
xorl
icebp
mov
movsl
lret
xor
or
sbb
cs
push
inc
add
out
stos
push
and
mov
dec
sbb
sub
es
out
adc
xchg
int
movsb
jne
std
xchg
add
xchg
out
scas
sub
setge
imul
inc
cltd
cmpsl
das
xor
and
xor
jp
xchg
pop
cli
notb
clc
aas
xor
mov
jae
jnp
sbb
sub
or
and
or
aam
xor
push
rorb
iret
or
cmp
adc
xor
ret
cmp
movl
movsb
stos
mov
fnsave
fidivrl
xchg
xchg
aad
adcl
rcll
cmp
pop
aam
sbb
stc
fs
dec
cld
divl
add
mov
jp
mov
lods
les
cmp
insb
xchg
jb
ret
dec
dec
sub
cmp
jge
xchg
sub
dec
or
dec
mov
test
fidivrl
push
fwait
inc
xlat
int3
push
cmc
sub
aas
stos
pop
aad
xchg
cmp
fs
les
pop
or
into
andl
jns
pop
jne
lret
test
push
fs
adc
mov
sub
scas
in
fs
cmp
push
loope
nop
xor
push
outsb
push
popf
fs
shrb
push
or
daa
add
cmpl
mov
adc
scas
jge
out
xor
or
dec
cmp
arpl
push
inc
mov
dec
scas
xchg
daa
and
push
inc
shr
adc
insl
je
add
clc
xchg
sub
cltd
mov
pop
jle
aas
and
rcll
add
adc
mov
or
cmc
mov
push
or
inc
popf
lea
mov
adc
orb
mov
movsl
and
pop
dec
mov
dec
mov
cmp
fcomp
pushf
mov
adc
test
es
pop
inc
lahf
loop
xor
stos
jne
dec
xchg
pop
adc
loopne
test
or
inc
enter
sti
xor
je
mov
enter
enter
mov
insl
mov
fsts
cs
cmp
push
std
jo
push
jle
mov
mov
cmpsl
dec
push
iret
test
icebp
jb
arpl
cmp
push
movsb
sub
popf
adc
shll
add
xchg
xor
orb
cli
insl
sbb
imulb
bnd
fidivrs
dec
movsb
push
xchg
cmpsb
jns
dec
divl
insl
mov
push
js
adc
push
sbb
enter
push
jge
xchg
sub
xchg
jno
xor
or
out
pop
xchg
aad
into
fcomp
sbbb
mov
inc
dec
lods
enter
cmc
mov
push
dec
sub
insb
jl
mov
jns
mov
pushf
test
insb
fscale
call
outsb
inc
push
lds
xor
arpl
push
mov
and
ret
inc
shld
add
bound
or
adc
add
xor
in
aas
lahf
mov
lock
movsb
dec
mov
rcl
lods
push
out
add
jecxz
sub
mov
stos
scas
inc
jg
incl
inc
fs
pusha
mov
test
cli
cmp
into
ds
pop
fisubl
jmp
ss
andb
adc
cmp
mov
fdivs
mov
je
lea
xchg
cmp
mov
test
xchg
push
mov
add
and
adc
jae
sub
cltd
dec
mov
dec
mov
jne
mov
xor
imul
pop
and
add
inc
xor
push
outsb
in
sbb
xchg
cwtl
out
test
aad
mov
and
enter
lret
test
in
jmp
push
sub
inc
adc
int
cmp
jmp
insl
cmpsb
add
sub
mov
hlt
xchg
into
push
lret
or
out
lods
loope
push
lcall
test
das
add
mov
test
lods
mov
mov
mov
adcl
or
and
ds
icebp
divb
fstps
sub
jmp
out
pop
fcoms
sub
test
stc
inc
imul
mov
sub
jno
cli
mov
leave
xchg
add
mov
or
push
andl
test
std
dec
jp
imul
outsb
leave
fistl
cwtl
or
mov
mov
fstpl
xor
jbe
rorl
adc
lahf
xchg
lret
repz
jne
mov
mov
lcall
mov
xchg
mov
push
xor
or
push
jb
mov
dec
sbb
xor
repnz
lret
call
movsl
test
lods
push
adc
sbb
jbe
nop
in
add
lret
iret
mov
das
jbe
push
mov
js
mov
scas
mov
scas
or
mov
shl
and
adc
les
scas
cmp
mov
int
bound
pushf
out
sub
xchg
loopne
in
ret
nop
fnclex
stos
cmc
mov
sbb
xchg
mov
lret
loopne
scas
data16
push
and
jmp
sarl
dec
repnz
incl
mov
xor
test
xchg
fwait
dec
js
pop
mov
sbb
mov
pop
fstps
shlb
push
in
dec
push
cltd
mov
shlb
pop
cmp
shlb
xchg
ja
lcall
test
cmc
out
xchg
leave
push
stos
ret
push
fld
movsl
jecxz
dec
pop
test
mov
jns
dec
fwait
xor
xchg
enter
dec
xor
cmp
scas
loopne
nop
jge
jmp
sbb
arpl
or
leave
mov
in
sarb
aad
sub
adc
dec
push
popfw
insl
sbb
add
jne
repnz
outsb
pop
iret
bound
imul
or
mov
mov
jns
daa
rolb
jne
div
pop
sub
aaa
xlat
xor
dec
js
cltd
add
inc
sub
xchg
push
sub
dec
testl
movsb
dec
mov
icebp
sbbl
and
push
inc
jle
pop
push
mov
scas
lret
jmp
cmp
cmp
or
es
idivb
mov
sub
outsb
ret
push
push
pop
lods
repnz
aaa
repnz
mov
sub
push
bound
cmpsb
cmp
lds
insl
dec
nop
iret
dec
int3
gs
xchg
test
int3
data16
inc
mov
fildl
sbb
mov
mov
out
fmuls
loop
imul
inc
jg
arpl
subb
fdivr
mov
mov
out
push
and
loop
jo
jmp
pop
push
xor
adcb
sub
jno
pop
icebp
sub
xor
mov
push
sub
push
std
shll
loop
int3
mov
xchg
jne
adc
mov
xchg
ret
jg
dec
or
push
mov
push
pushf
test
jge
cld
lcall
sbb
cmp
and
adc
inc
xchg
dec
mov
xchg
call
negb
cld
adc
mov
sub
jle
mov
lcall
out
mov
shll
xor
push
test
out
gs
or
sbb
cmc
push
sqrtps
imul
in
sub
int3
movsl
in
mov
cmp
stos
aam
xor
mov
out
out
xor
fwait
dec
cmpsb
sbb
aaa
sbb
arpl
xor
dec
adc
jg
std
and
subb
mov
addl
jo
inc
dec
insl
or
xor
out
dec
mov
cmc
push
jmp
scas
inc
lea
xorb
gs
shl
mov
cmp
in
popa
pop
ret
jle
imul
xor
add
clc
stc
fs
mov
lds
in
jl
push
xlat
pop
ret
dec
mov
pop
cmp
mov
popf
out
stos
sbb
sbb
pop
ret
pushf
test
pusha
pop
testb
xchg
data16
out
mov
or
or
lods
add
mov
mov
cmp
shlb
rorb
bnd
mov
ret
xchg
or
repz
movsl
mov
xchg
jb
mov
test
les
loope
adcl
pop
mov
xchg
sbb
lahf
mov
dec
insb
mov
ficomps
mov
cmp
fidivl
repz
sbb
pop
cwtl
enter
ret
inc
lea
mov
insl
cmp
jp
mov
mov
push
inc
pop
push
mov
mov
mov
xchg
mov
inc
std
mov
mov
lea
push
add
push
xchg
push
jmp
or
cmp
and
out
xchg
mov
jnp
adc
and
cmpsl
jbe
xchg
bound
sub
inc
dec
or
xchg
bound
test
pop
ja
dec
push
std
sbb
sbb
inc
pop
in
test
sub
inc
jge
cmp
pop
std
lods
mov
xchg
outsl
sahf
sub
scas
cmp
push
in
lock
jl
sub
or
cmp
jae
mov
roll
hlt
mov
cltd
xor
adc
add
push
rolb
pusha
das
shl
outsb
addr16
xchg
imul
jle
pop
mov
rorb
lahf
fstl
ret
pop
rcr
sbb
outsl
stos
cmc
sub
xchg
dec
ja
aad
pusha
divl
cwtl
and
popf
sbb
stc
sub
dec
cmp
and
pop
jne
add
fmull
pop
sbb
fs
xchg
sub
mov
inc
mov
cs
and
mov
mov
push
xchg
add
xor
mov
push
rclb
sbb
and
mov
sbb
movsl
scas
sti
xchg
mov
and
nop
je
sbb
mov
sbb
orb
mov
aam
notb
add
repnz
or
dec
ljmp
xchg
xchg
in
adc
xor
out
adc
test
cwtl
gs
scas
nop
push
pop
cmp
in
mov
orl
adc
add
nop
jno
pop
mov
loop
scas
mov
loope
or
push
fucom
movsl
insl
jb
jno
add
pushf
lret
mov
xor
inc
or
in
fcomps
rcl
aam
int
pop
and
xchg
inc
icebp
add
mov
dec
pop
push
into
cmp
lret
push
lods
mov
out
sti
outsb
jnp
push
or
in
mov
cltd
dec
mov
push
pusha
and
outsl
pop
and
sub
imul
adc
cs
loopne
jmp
fstps
roll
xor
xchg
ja
cmp
mov
repz
shll
movsb
ror
or
es
xchg
and
sbb
ds
sub
mov
int
mov
push
aaa
ret
lea
xchg
int3
xchg
mov
arpl
sbb
shr
imul
int3
stc
fs
scas
push
lahf
inc
pop
cmc
in
inc
shl
xorl
out
sbb
test
notl
int
inc
or
push
cmp
dec
pop
mov
lret
sub
cmp
push
xchg
xor
outsb
jecxz
sbb
stos
addb
rcrb
and
lods
bound
cmpsl
mull
sub
xor
mov
or
scas
pop
mov
mov
jmp
fadd
dec
or
mov
pop
push
pop
aas
movb
adc
jmp
push
push
out
push
xlat
sub
shll
movsb
cltd
mov
dec
xchg
jo
shll
movsb
sbb
aam
mov
push
xor
jnp
cs
outsb
xchg
dec
sbb
shll
in
push
je
mov
xchg
roll
inc
rep
out
push
jge
push
adc
or
sbb
stc
lea
cmp
mov
and
sarb
and
mov
mov
mov
xchg
in
push
adc
or
pop
or
hlt
or
xor
cs
and
in
insb
cwtl
adc
xchg
mov
and
les
adc
ss
sti
or
int
lahf
sbb
inc
cld
cmp
cmp
mov
fwait
inc
mov
cltd
cwtl
adc
int
push
xor
call
arpl
pop
repz
or
sbb
pop
repnz
xorl
lret
fisubrl
add
sub
jns
mov
lret
inc
xlat
dec
jge
scas
aam
loopne
popa
ret
mov
push
jl
iret
dec
ret
cmp
mov
jge
sbb
gs
int3
pop
cmp
scas
in
adc
stc
sub
repnz
orl
and
add
mov
cmc
sbb
mov
ret
fwait
lcall
and
pop
rol
cltd
aad
jno
shll
pusha
lock
lods
mov
mov
test
or
xchg
clc
cld
mov
gs
add
push
icebp
mov
mov
xor
mov
sub
mov
cmpsl
fucomip
int3
and
rolb
adc
test
out
mov
jnp
out
or
data16
mov
push
xchg
mov
mov
adc
test
or
stos
mov
pop
pop
ja
lea
insl
loopne
lahf
in
mov
sahf
mov
nop
ret
pop
call
addr16
mov
jge
inc
std
or
pop
fisubrl
push
push
xlat
mov
cmpsl
cld
mov
int3
pusha
add
das
pop
inc
clc
sahf
cmp
push
jns
xchg
mov
dec
xchg
and
fwait
mov
dec
out
sbb
fimull
lods
xor
int
aam
dec
bound
fwait
call
adc
mov
mov
fcomip
das
popl
jl
imul
lds
or
lret
dec
jns
rorl
pop
inc
xor
xor
lds
dec
sbb
mov
jb
mov
pop
dec
jmp
repz
mov
xchg
repnz
inc
mov
leave
adc
testb
mov
out
rolb
ret
xchg
repnz
movsl
jne
ja
pop
lods
sbbl
push
pop
xor
inc
ljmp
dec
std
jne
push
mov
lock
or
or
push
xchg
fcomps
iret
push
fistpl
insb
rcrl
imul
shl
mov
cs
adc
sub
ret
dec
mov
and
ja
shrl
jae
int
jp
or
fists
adc
sbb
cwtl
roll
adc
outsb
or
jl
inc
xchg
cltd
sub
inc
ret
pop
xor
rorl
xchg
aas
add
dec
mov
push
rcrb
scas
jno
mov
enter
in
push
and
rcrl
insl
popf
cmpsl
jae
dec
movsl
mov
orl
mov
push
stc
nop
cmp
in
popf
sarb
aas
mov
aad
adc
insl
pop
inc
sbb
aas
xchg
ljmp
fmuls
push
popf
sub
jbe
push
stos
das
scas
inc
testb
jmp
outsb
dec
cmc
add
jo
lret
pop
xchg
lds
mov
sbb
out
xchg
xor
xchg
push
pop
jmp
ja
jg
or
cmp
aad
lea
pushf
or
test
add
je
sbb
or
lret
mov
les
aad
and
sbb
out
adc
test
mov
cmpsl
push
push
sahf
inc
sub
leave
push
aas
xlat
xchg
jp
pop
inc
ljmp
adc
loope
xorl
imul
ret
sub
fstps
add
xchg
add
dec
cmp
inc
dec
cmp
xlat
call
rclb
aas
shll
aas
push
adc
inc
pushf
dec
sbb
xor
movsb
sbb
cmp
in
jbe
nop
lods
and
sub
shr
push
xchg
into
inc
divl
call
mov
fdivrl
and
jnp
pop
cmp
cli
mov
jne
call
lret
mov
fldt
push
jge
jge
lea
add
cli
js
dec
cmpsb
arpl
outsb
xchg
inc
mov
shlb
cli
aas
or
mov
sub
inc
cmp
mov
jmp
filds
ret
adc
sub
mov
call
dec
leave
push
push
dec
xor
push
push
and
sbb
bound
repz
popf
xchg
jne
push
ret
ja
push
mov
data16
mov
inc
push
jp
pusha
scas
xchg
int
adc
inc
push
and
sahf
ss
inc
shlb
mov
xor
es
mov
and
sub
cmp
mov
add
xchg
pop
sbb
sbb
mov
imul
xlat
pop
popa
test
mov
xchg
data16
mov
xor
add
inc
cmpsb
jg
and
push
adc
xor
or
pushf
in
int3
inc
shll
cmpl
sub
xchg
aam
dec
dec
mov
lahf
je
mov
lret
decb
lret
sahf
data16
cmpl
loope
ret
outsb
mov
push
pop
fsts
or
adc
push
pop
cmpsb
enter
cli
pop
pop
rorl
lea
ret
cmc
in
fidivs
nop
lds
xchg
push
xchg
fbstp
andl
pop
ja
hlt
ds
xor
mov
fsubrl
out
cs
xchg
test
into
jno
mov
cld
xchg
stos
mov
mov
stos
pop
fst
cmp
je
aad
dec
and
rcrb
and
call
leave
inc
and
inc
das
js
andl
cmp
xor
sub
mov
in
pop
jmp
andl
mov
adc
cmpb
data16
add
jns
gs
mov
arpl
nop
int3
fwait
cmpsl
jb
cwtl
movsl
lods
add
nop
and
jge
mov
mov
jg
in
sbb
and
adc
daa
fdivs
aas
jno
sbb
inc
fdivs
je
xor
or
es
mov
in
inc
lret
inc
and
mov
lock
roll
pop
adc
pop
repz
fcompl
insl
pop
jne
scas
xor
fcmovbe
xor
cmc
jecxz
cwtl
sahf
std
mov
repz
ss
sub
jae
int3
ret
xor
dec
roll
insb
call
pop
data16
popf
push
aaa
rcr
adc
sahf
and
dec
push
outsb
and
pop
lock
daa
push
clc
gs
jge
pop
js
out
pop
xlat
mov
mov
mov
jmp
test
push
test
rcll
loopne
jns
jle
pushf
cmp
out
jno
ror
pop
fsubr
fists
mov
fnstsw
inc
aas
add
mov
es
or
lods
dec
es
inc
fildl
or
pop
fcmovne
xor
or
mov
imul
dec
sbbl
fstpl
push
add
scas
cli
or
sti
sbb
jno
das
mov
adc
xlat
dec
cmp
dec
adc
jns
pop
imul
stos
add
xor
sub
and
lahf
pop
cmp
les
mov
xchg
sub
mov
cltd
pushf
pop
and
and
repnz
das
cs
push
mov
mov
je
aam
mov
sub
sub
setne
cli
test
pop
and
icebp
fmull
enter
subb
dec
iret
ficoml
in
pop
imul
aad
loop
sub
sbb
bnd
js
mov
jne
sbbb
push
xor
or
xchg
lods
cwtl
and
jne
inc
xor
cmp
jbe
js
and
imul
pop
loope
movsl
and
cmpsl
mov
aas
push
sahf
push
sub
insl
rorb
sub
test
cmp
sbb
adc
sub
aaa
in
out
test
push
lods
adc
rcrb
subb
out
and
dec
loopne
jnp
sub
pop
cld
je
xor
imul
push
mov
lds
sarb
sub
stc
xchg
sub
pop
popf
insl
cwtl
mov
sbb
push
inc
sub
lahf
pusha
ret
or
inc
shl
fcoms
lock
aas
aas
loopne
xchg
push
jns
lock
mov
lds
mov
add
mov
jmp
push
push
ljmp
fldcw
and
cli
stc
pop
imul
mov
push
push
pop
jg
xchg
push
ja
lds
pop
sbb
adc
push
xchg
pusha
add
aas
iret
cmp
inc
xchg
jns
cs
xor
add
xchg
mov
mov
ja
shl
cld
mov
std
int
xlat
cmpsl
jl
jge
pop
adc
or
cmp
test
add
ljmp
andb
out
add
jnp
imul
lcall
into
enter
fucom
stos
dec
cwtl
push
cmp
inc
sub
aas
jge
cmp
pusha
mov
sbb
ret
sub
in
aam
jmp
js
jge
sti
ljmp
ret
fcompl
pop
stos
push
jo
into
pop
lcall
or
and
shll
popl
push
and
push
out
loope
sub
cmpsb
fs
add
in
or
xchg
fadds
mov
test
arpl
movsb
and
pop
hlt
in
push
pop
jns
imul
cwtl
mov
push
dec
push
pusha
movsb
dec
sub
pop
cmp
sbb
inc
and
inc
leave
jns
scas
add
ret
cmpsl
mov
lock
xor
inc
loope
xor
mov
cmp
std
dec
cld
cli
mov
jne
xor
push
shl
push
inc
test
add
into
sti
call
pushf
add
scas
xlat
mov
push
aaa
or
xor
pop
pop
test
cltd
sub
dec
mov
adc
xor
lahf
mov
sbb
inc
test
pop
mov
insb
ja
add
ss
insb
popa
ljmp
sarb
add
push
iret
ret
lahf
into
cltd
test
lods
inc
cmc
cmpsl
call
xchg
push
xchg
xor
pop
daa
inc
fwait
ret
mov
ljmp
xchg
mov
leave
insl
stos
and
sub
scas
push
test
fistpll
push
xor
fsubrs
add
pop
test
add
add
mov
ljmp
push
xor
aad
jae
es
scas
push
dec
sahf
daa
fwait
xchg
rol
sub
mov
cmp
jbe
nop
or
xor
pop
push
cld
hlt
sub
xchg
pop
lret
inc
nop
pop
or
fwait
mov
cmp
movsb
scas
fst
mov
xor
fdivrp
mov
inc
jp
jecxz
mov
jb
cltd
pop
shll
jo
std
or
outsl
fidivs
or
mov
push
pop
jns
pop
jmp
mov
test
ja
ds
fwait
jae
push
aaa
nop
inc
push
in
mov
ret
aas
and
loopne
mov
xor
lret
outsl
das
jl
loopne
shrl
sbb
mov
or
xchg
push
adc
std
movsb
dec
fimuls
jp
mov
nop
and
pop
adc
xor
jne
faddl
iret
jno
inc
xor
push
mov
mov
mov
sbb
mov
mov
push
inc
or
jae
lahf
inc
test
xchg
sub
repz
mov
and
push
or
gs
arpl
popf
mov
rcll
outsl
cmc
pop
vlddqu
and
stos
jae
sub
inc
enter
cmp
adc
jge
push
cmp
ja
inc
fwait
ds
inc
sub
cmp
aas
out
pop
mov
int3
jmp
mov
fisttpl
ljmp
pause
sbb
cltd
js
std
sbb
jns
ret
adc
incl
cmp
and
jmp
hlt
mov
pop
adc
mov
movsb
and
xor
insl
mov
mov
inc
xlat
jb
sbb
gs
popa
jecxz
repz
stos
cmp
les
cwtl
add
lahf
scas
mov
xchg
mov
jge
cwtl
sbb
shrl
js
mov
push
into
in
jns
xor
mov
addr16
mov
adc
inc
fisttps
inc
aaa
jle
adc
leave
xchg
and
fisttpll
bnd
cmp
hlt
jnp
mov
in
jmp
fs
adc
pop
jg
data16
mov
cmp
arpl
jne
das
adc
push
and
fnsave
jae
cmc
cmc
in
sub
pop
sbb
jle
sbb
sbb
icebp
adc
fsubrs
sub
sbb
test
jnp
or
movsb
ror
fisttps
aam
cli
sbbb
sarb
xor
aas
lcall
fs
movsb
jno
push
popf
dec
add
or
repz
aad
lods
fldt
mov
stos
add
jne
rorl
cltd
pop
and
dec
cmpl
pop
cmp
test
jle
mov
mov
ret
sub
cs
rclb
push
push
nop
ret
les
sbb
cmpsl
dec
dec
mull
lret
int
and
cmp
out
adc
sbb
hlt
into
addr16
push
inc
xor
or
inc
xor
cmp
stos
mov
movhps
mov
lea
shll
push
mov
jecxz
enter
inc
mov
aas
repz
out
and
or
mov
sahf
inc
push
push
xchg
sbb
call
out
cmpl
mov
fstp
jle
ret
mov
iret
adcl
jp
lods
and
pushf
fcompl
cltd
mov
pop
pop
jmp
cmp
jns
enter
stc
imul
sub
ja
jo
inc
sub
or
cwtl
das
mov
fucomi
fdivrs
lret
aas
outsl
cmpb
mov
xor
jmp
ret
into
orl
sub
inc
xor
cmpsb
gs
push
pop
inc
loope
repnz
dec
mov
sbb
xchg
xlat
je
adc
nop
jno
pop
or
loope
fs
push
mov
push
jecxz
bound
cmp
je
shlb
insl
in
mov
je
jne
outsl
cmp
enter
mov
mov
cli
jo
ficomps
pop
inc
sub
xlat
bound
out
mov
inc
ror
mov
pop
rorl
pop
adc
fidivl
arpl
outsl
orl
das
ds
mov
push
testb
addr16
jo
sar
in
in
xorb
mov
push
dec
fdivl
test
mov
repnz
xor
push
add
iret
mov
ret
mov
dec
dec
cmp
jle
filds
sbb
ja
push
nop
sub
lahf
mov
xchg
test
sub
push
repz
lret
popf
xchg
loop
or
arpl
push
inc
or
inc
push
call
adc
and
xchg
popf
aad
stos
test
fs
sahf
stc
repz
jg
test
xchg
sbb
xchg
scas
sahf
cmp
dec
jnp
sahf
inc
pop
shl
push
cld
outsl
insl
and
jns
jno
ja
jo
arpl
imul
cmp
movsl
out
push
xchg
addl
pop
repnz
jne
inc
rorl
cmp
jae
ret
or
pop
adc
sbb
cmpsb
xor
jno
sub
les
ret
cltd
int3
mov
repz
ficoms
cmp
adc
fcomps
popf
sti
popa
js
pop
xor
adc
int
jle
lea
push
sub
movsl
push
ja
in
divl
adc
stc
ja
adc
rcll
pop
mov
xchg
xchg
ja
push
dec
xchg
shll
mov
or
mov
movsb
and
cld
mov
insl
and
mov
in
fcmovb
jns
pop
xor
dec
or
xchg
stc
pop
jmp
jecxz
pop
adc
imul
fnstcw
jo
popf
mov
mov
push
xchg
adc
shl
mov
jns
inc
adc
lret
nop
pop
lret
out
and
mov
nop
push
insb
jge
out
gs
mov
aas
movsl
mov
cmp
fisubl
lcall
bound
ds
xor
mov
sbb
add
inc
insl
stos
jnp
ljmp
shlb
std
pop
aaa
xchg
mov
rcpps
cmpsl
cmp
sub
scas
mov
test
xor
xchg
imul
xchg
jmp
push
push
iret
inc
test
mov
dec
imul
in
adc
inc
rcl
movl
cmp
mov
into
jne
mov
icebp
shrb
setae
push
aaa
sbb
ficoml
add
mov
je
scas
fs
push
or
inc
or
push
jo
xchg
mov
push
mov
sub
or
xchg
xchg
mov
sbb
xchg
lods
jae
popf
stos
stc
call
jecxz
jp
push
add
adc
jmp
mov
cmpsb
outsb
ljmp
cmpb
lret
xorl
aaa
xor
stos
leave
xchg
fdivl
add
leave
es
shrb
cli
fstl
jle
xchg
jae
incb
adc
pop
jae
ret
enter
mov
sub
sbb
dec
mov
and
out
andl
inc
and
mov
dec
out
sahf
cmpsb
into
dec
icebp
jl
mov
xchg
inc
popa
adcb
jp
inc
scas
test
faddl
mov
add
add
into
mull
adc
shlb
jge
sbb
push
fidivs
scas
inc
mov
jmp
mov
leave
stos
adc
scas
shrb
fisttps
mov
dec
jo
data16
and
xor
cmp
mov
dec
repnz
cmp
jae
push
jecxz
sahf
add
outsl
arpl
rclb
push
testl
pop
sbb
pop
mov
mov
sub
fldl
pop
fwait
movsl
sub
push
xor
movsl
and
out
push
pop
xor
ficoms
and
fimuls
inc
cld
mov
loope
mov
aas
mov
pop
add
pop
push
pop
scas
mov
out
ret
shlb
push
test
mov
add
or
insb
shll
loope
adc
cmpsl
rolb
or
mov
jp
faddl
cmp
aaa
repnz
push
xchg
or
mov
push
loop
fstpl
cmp
jae
nop
fwait
sti
jmp
sbb
pop
lret
xor
and
shrb
mov
subb
ss
divb
pop
movsb
shlb
mov
repnz
stc
pop
jge
sbb
stos
sti
shl
cmp
xchg
lret
pop
das
mov
add
aas
pop
dec
dec
xchg
mov
mov
inc
and
xor
xchg
add
cltd
cli
leave
dec
out
in
lahf
lahf
and
mov
jle
lcall
mov
mov
jns
out
sbb
sti
jg
scas
jp
push
mov
call
std
ljmp
sbbb
les
push
iret
add
popa
sahf
pop
and
jno
inc
ljmp
fimuls
jg
jb
orl
lds
xchg
sbb
repz
jae
leave
ja
fildll
sub
cmp
gs
cmp
popf
aaa
lods
pop
xor
lods
and
js
rorl
aam
mov
sarb
mov
cmp
call
adc
mov
and
jecxz
jl
in
arpl
out
sub
stos
int
loope
mov
sub
mov
movsl
stos
jae
les
push
mov
flds
cmpsb
into
daa
mov
sahf
fildl
pop
sti
cmp
sbbl
and
imul
repz
pop
pop
sbbl
es
pop
iret
loop
push
and
jg
out
inc
das
pop
mov
push
adc
out
cld
pop
dec
cmc
movsl
mov
sar
xor
dec
dec
repz
dec
cmc
inc
and
jns
sbb
les
repnz
and
in
cmp
mov
jo
outsb
mov
and
or
ljmp
int3
mov
mov
daa
mov
rcll
sub
lds
or
lret
xor
push
fsubrl
lods
xor
js
and
out
jg
mov
imul
push
jbe
sub
mov
imul
divb
ljmp
shrb
mov
in
push
lods
mov
mov
push
shrl
adc
and
lods
bound
inc
xor
fstps
xchg
and
insb
ret
das
jb
xchg
jl
adc
insl
pop
push
std
outsl
mov
outsb
jp
sti
lds
test
adc
fidivrl
into
mov
test
dec
add
cmc
lds
cltd
sbb
mov
hlt
lods
arpl
movsl
pop
ds
ret
lret
sbb
rcl
insl
fnsave
icebp
test
popf
outsl
leave
push
push
jns
in
shrl
mov
rcrb
mov
jp
jge
push
sbb
mov
sbb
lods
jbe
sahf
mov
arpl
cmpsb
and
in
pop
mov
cmp
pop
or
xchg
pop
adc
loope
sub
push
pop
xlat
mov
pop
xorl
dec
cld
sbb
dec
in
sti
push
xor
cmpsb
push
dec
jns
push
clc
cmpsl
gs
pusha
popf
mov
in
shlb
mov
jnp
xchg
push
imul
push
js
mov
jle
mov
inc
stos
mov
dec
push
xor
fadds
fadds
mov
inc
aad
push
loopne
ret
inc
mov
loope
push
inc
call
push
jbe
adc
loop
icebp
cwtl
dec
xchg
iret
cmp
shl
xchg
imul
adc
add
push
ror
fisubs
push
pop
sbb
pop
mov
fsts
and
mov
je
int3
xor
adc
and
add
sbb
xor
mov
cs
fisttpll
cmc
mov
xchg
out
inc
int3
jno
pop
fsts
out
push
cmp
push
int3
bound
push
flds
mov
sbb
out
mov
shl
sub
and
lret
insl
mov
mov
cmp
jne
adc
dec
xor
div
pop
pop
aad
mov
mov
out
pop
jl
sub
add
pop
jnp
test
mov
cmpsb
add
pop
imul
test
cmc
add
jo
or
pushf
outsb
das
stos
mov
cmc
xor
fisubrs
ljmp
sbb
fbld
cmc
inc
inc
aad
ljmp
test
pop
sbb
call
inc
inc
lahf
inc
fsubrl
mov
mov
int3
aad
mov
add
inc
sbb
mov
sbb
mov
pushl
ret
arpl
arpl
imul
daa
mov
jae
insl
sub
xor
mov
into
dec
xchg
add
ljmp
movsb
daa
ljmp
repz
xor
out
popa
and
dec
xchg
mov
inc
fsubl
std
lea
movsl
dec
add
imul
and
xchg
xchg
fstpt
mov
lea
decl
cmp
and
cmp
push
xor
jecxz
int
inc
sarb
add
push
sub
jne
adc
and
mov
jbe
sub
and
and
shl
xor
push
aam
loopne
push
ss
mov
sti
test
xchg
test
mov
mov
lahf
mov
sub
mov
jnp
add
jg
xchg
mov
cmpsb
pop
xchg
jne
lds
je
jg
mov
inc
jl
push
push
cmp
outsb
mov
inc
fisubl
vpaddd
cmpsb
hlt
test
mov
std
movsb
idivb
or
xorb
sub
push
insl
cmpsl
sub
xchg
dec
mov
inc
push
mov
lods
fldl
imul
es
pushf
mov
outsl
pop
adc
sub
js
lock
xchg
dec
nop
in
sbb
jae
sbb
je
push
push
jnp
xor
fmull
fst
dec
sarb
cmp
js
arpl
sbb
dec
mov
mov
mov
jle
mov
and
adc
push
std
mov
push
ret
inc
xchg
je
aas
nop
gs
scas
xchg
movsb
std
pop
cmp
stc
lcall
and
int3
xchg
sub
fbld
mov
xlat
int
decb
ret
outsl
lds
ret
sbb
stc
mov
sbb
add
ret
std
jbe
bound
xor
cmp
xchg
rcrl
stc
mov
xlat
sahf
test
adc
push
sahf
adc
les
sti
icebp
cs
imul
sub
fildl
pop
xchg
sbb
sar
pop
mov
out
adc
imul
push
sbb
sbb
enter
or
dec
cwtl
lock
add
mov
ficomps
inc
fdivl
lds
dec
dec
lret
pop
loopne
dec
sbb
clc
scas
call
pop
and
sub
fcmovb
push
xor
iret
test
and
int3
add
lret
imul
adc
jmp
cld
stos
or
and
std
mov
pop
jnp
dec
cli
cld
stc
inc
xor
hlt
add
jo
push
inc
int
ret
mov
mov
lret
shrl
inc
xor
xor
clc
xchg
cs
iret
xchg
cmc
mov
out
push
call
add
in
sarl
fisubrl
data16
outsl
jne
in
outsl
pop
popa
into
pop
int3
xchg
pusha
cmp
mov
dec
cmp
int3
icebp
jle
int
inc
xchg
mov
push
mov
xlat
jg
mov
aam
pop
jo
clc
jmp
mov
movsb
push
sbb
pusha
fnstenv
cli
std
adc
inc
push
hlt
mov
inc
jno
jecxz
mov
cltd
and
adc
add
cltd
mov
xor
mov
inc
inc
xchg
dec
cltd
mov
cmp
movsb
sub
mov
xor
aaa
and
clc
pop
dec
adc
gs
pop
imul
test
popa
out
pop
mov
in
sub
mov
out
inc
aaa
outsl
leave
pop
xchg
nop
adc
pop
mov
clc
xchg
aam
je
push
dec
adc
rol
neg
fistpl
out
pop
cli
shrl
adc
out
mov
jno
jbe
popf
mov
mov
xchg
add
push
out
xchg
pop
or
push
frstor
fwait
sub
inc
jbe
xorl
inc
scas
jg
nop
fsub
mov
mov
add
repz
mov
rcl
loopne
icebp
aaa
jno
ds
flds
addr16
loope
and
fdivl
adc
test
adc
mov
cmpsl
inc
xchg
mov
sahf
inc
and
cltd
add
cs
mov
xlat
sub
pop
xlat
push
bound
and
mov
push
jbe
aad
fwait
mov
xorb
push
mov
into
mov
fidivrs
jmp
insl
mov
mov
dec
or
aas
jmp
xchg
lods
mov
iret
or
in
pusha
das
fidivrl
push
cmpsb
stc
push
in
inc
mov
nop
stc
stos
in
ficoms
lods
jns
dec
jle
add
fs
inc
jno
add
xchg
sahf
repnz
jge
push
xchg
cmp
dec
inc
imul
loopne
icebp
repz
popf
mov
xor
dec
xchg
jmp
pusha
mov
imul
mov
or
jnp
outsb
jp
int
sub
sbb
lds
in
cmpsb
insb
xchg
lret
ja
fcomps
popf
mov
or
mov
inc
or
scas
stc
or
mov
cmp
cltd
mov
xchg
sahf
push
addr16
mov
arpl
sbb
cmc
cmpsb
cmc
lret
pushf
cltd
call
shrl
iret
popa
cmp
jns
dec
cltd
ffreep
jle
scas
add
add
nop
je
xor
pop
push
or
mov
test
stc
movsl
inc
into
out
scas
pusha
into
fistl
sub
xchg
subl
add
mov
stos
lds
pushf
rcrb
frstpm(287
arpl
xor
sub
mov
push
shll
popa
iret
pop
in
xchg
shlb
daa
dec
popa
mov
popf
cld
dec
sbb
mov
lret
jns
add
call
inc
dec
pop
dec
addr16
in
inc
hlt
xchg
sarb
lock
or
cmp
shrl
inc
push
or
sbbb
dec
push
sub
daa
xor
adcb
mov
push
inc
xlat
outsl
mov
xchg
call
loop
subl
fxch
and
mov
test
lea
dec
stc
mov
leave
dec
or
push
mov
imul
mov
inc
mov
outsb
dec
lcall
sbb
push
int3
jbe
mov
add
shl
inc
xchg
aad
dec
mov
roll
dec
shll
inc
cwtl
and
mov
jns
mov
test
sbb
xchg
push
loope
in
pop
shll
inc
loope
outsb
inc
lret
movsb
xor
push
and
test
adcb
sub
jg
leave
fisttps
dec
adc
test
sbb
ficoml
inc
and
pop
jo
or
jl
mov
jle
cmpsl
mov
or
inc
shlb
stos
mov
iret
sub
stos
iret
jno
daa
mov
decl
outsb
arpl
xor
fimull
add
daa
aad
xor
pop
mov
jo
hlt
subb
mov
add
sbb
inc
sub
mov
xchg
cltd
add
mov
std
stc
lahf
pop
outsl
into
mov
inc
adc
arpl
insb
les
mov
scas
mov
or
addr16
cmp
mov
add
mov
xor
mov
push
add
ud1
or
into
inc
leave
mov
mov
aam
outsl
jae
and
popa
sbb
push
mov
aaa
push
shll
in
mov
out
lret
movl
or
mov
test
mov
jae
adc
sahf
loope
in
xor
dec
rcrl
outsb
ss
mov
rorb
inc
pop
inc
in
inc
jp
mov
dec
sub
insb
test
jmp
adc
fistps
repz
jae
xorl
lock
ds
push
leave
lods
sub
sti
cmpl
jecxz
cmp
ja
repz
push
cs
ret
mov
push
daa
test
sbb
mov
fcompl
data16
sbb
add
inc
pop
lds
xlat
icebp
lret
mov
mov
pop
orl
add
xor
xchg
jge
cltd
pushf
sar
sub
arpl
push
int3
mov
or
cmp
repz
or
cld
arpl
dec
xchg
stos
repnz
int3
adc
stos
dec
lret
clc
and
jecxz
daa
cld
jmp
xchg
rcl
subl
rorb
pop
sbb
cmp
fisttps
fldl
xchg
int
faddl
push
xor
loope
xor
xchg
aas
dec
inc
leave
in
outsb
mov
xor
and
mov
jnp
xchg
xlat
gs
outsl
jbe
jmp
adc
inc
ljmp
neg
movsb
adc
jmp
jnp
mov
inc
lcall
dec
xor
call
shlb
loope
and
dec
arpl
jns
dec
pop
dec
inc
or
mov
xlat
jns
fsubs
sub
mov
jno
adc
mov
pop
lds
imul
xchg
inc
bound
xchg
out
adc
enter
dec
dec
inc
sub
jb
andb
xchg
ret
cmpl
jns
inc
lret
icebp
dec
insb
mov
fwait
pop
cltd
mov
xchg
int3
cltd
mov
xchg
push
inc
mov
add
jae
push
cli
xchg
sub
jae
sub
aaa
stos
lock
inc
inc
mov
dec
dec
out
jo
fldcw
pop
add
xchg
ss
inc
jecxz
leave
daa
fistl
pop
fdiv
jmp
push
inc
mov
fwait
icebp
jp
outsl
or
ljmp
inc
mov
lcall
inc
int
enter
add
mov
call
mov
push
mov
ds
daa
mov
daa
ret
fisttpl
movsb
dec
and
cld
push
cmp
ror
pop
jnp
loope
imulb
mov
pop
add
mov
xchg
pop
insl
xor
jg
cmp
ret
dec
cli
push
xchg
repz
jle
fldcw
aaa
inc
or
and
clc
addr16
push
add
lahf
je
aad
lcall
mov
push
ljmp
inc
mov
idivl
or
dec
mov
mov
cs
adc
cmp
pop
cmpsb
stc
aad
and
pusha
add
lds
popf
ja
pop
dec
cs
stos
mov
aas
ss
leave
in
pop
jl
lods
int3
jbe
jge
jmp
sub
sub
pop
aam
xchg
cmp
push
mov
iret
or
cld
pop
sbb
js
mov
in
test
nop
add
test
fimuls
leave
cwtl
jne
lea
das
mov
or
mov
lcall
les
loope
sbb
adc
add
dec
jl
jne
sbb
xchg
cmp
cmpsb
scas
je
jl
and
and
xchg
dec
in
andb
rcrl
loopne
enter
jge
stos
icebp
jge
daa
xchg
shl
out
out
mov
push
icebp
test
lret
pop
mov
aas
aas
jnp
movsb
scas
and
test
mov
mov
add
jmp
push
push
jbe
jge
cmp
cwtl
mov
pop
sbb
cmp
fcom
and
iret
pop
ljmp
outsb
dec
notb
test
fldl
fiadds
cmpsb
mov
dec
mov
stc
inc
daa
and
or
psubw
sub
pop
mov
das
imul
mov
lret
rorl
dec
jl
sbb
cmp
mov
mov
mov
fwait
ds
adc
sub
mov
ret
inc
ror
lcall
mov
sub
pop
mov
cltd
jbe
jg
and
cmp
mov
inc
inc
in
nop
or
mov
dec
jb
mov
incl
orb
pop
and
add
or
dec
test
daa
sarb
pop
mov
bound
adc
lret
inc
mov
push
adcb
rorb
and
into
dec
and
int
test
xlat
pop
inc
mov
and
mov
aad
shrl
loope
repz
pusha
out
add
mov
ss
in
xor
stc
aam
mov
out
test
xchg
inc
mov
flds
pop
repz
inc
push
das
jae
inc
cli
enter
bswap
push
jmp
fstps
ret
push
mov
xor
movsl
add
mov
fcmovnu
movsb
mov
fdivs
jns
xchg
in
cmp
pushf
fwait
pop
scas
sbb
in
orb
adc
div
call
sbb
pop
cs
cltd
lret
fdivs
loop
dec
and
push
ds
das
sbb
in
pop
adc
xor
and
inc
sub
inc
popf
mov
fiadds
out
xchg
xor
inc
lds
xchg
loope
mov
ret
xlat
orb
push
adc
insb
or
aad
cmp
lret
and
xlat
repz
test
fcoms
dec
dec
push
je
mov
mov
push
gs
mov
scas
adc
jecxz
inc
aad
mov
sbb
push
insb
xor
scas
ss
cmp
ss
mov
mov
movsb
jmp
fs
or
mov
jg
mov
mov
inc
dec
and
push
add
lods
faddp
sbb
ret
xchg
nop
popf
push
push
push
std
in
js
xlat
mov
lcall
es
lret
inc
push
jecxz
dec
int
lret
mov
jne
cmp
jae
inc
stos
les
xor
fists
movsl
push
push
or
imul
xchg
mov
mov
or
add
inc
or
mov
insb
in
dec
shl
mov
mov
addr16
add
mov
pop
or
inc
test
jbe
dec
and
pop
std
out
inc
push
test
push
and
aam
fidivrs
leave
in
shlb
or
sahf
lret
cmpsb
arpl
dec
mov
lcall
fisubrl
stos
not
fwait
and
or
sbb
aam
pop
xor
jo
out
repz
fisubrl
mov
popa
test
xor
lea
je
xlat
push
aas
mov
cld
repz
mov
icebp
sbb
sbb
cwtl
stos
jg
in
sub
arpl
push
cmp
test
jbe
cmp
push
stos
loop
cltd
sub
lcall
pop
jle
cmp
inc
repnz
or
popa
sbb
cwtl
sbb
inc
stc
jp
outsl
out
dec
fadd
ja
pushf
cli
ds
adc
pusha
add
cmp
inc
repz
sbb
out
xor
xchg
leave
pop
ret
and
out
jge
and
idivl
nop
pop
xor
pusha
fs
aad
dec
lock
scas
bnd
push
pop
cld
mov
and
mov
mov
sarl
cmp
or
mov
mulb
cmp
push
and
push
js
sbbb
scas
dec
ja
shl
xchg
mov
xor
mov
cmp
int3
fidivrl
fisubs
loopne
inc
and
shrl
mov
pop
vmovaps
fsubl
ja
stos
aaa
loope
shrl
dec
je
and
jb
push
dec
nop
paddusb
enter
enter
shlb
xchg
xor
mov
inc
imul
pop
adc
lods
push
inc
icebp
notb
outsl
mov
movsb
sub
push
int
sbb
mov
loop
popf
loopne
adc
lahf
and
divb
jbe
movsb
push
hlt
pop
insl
xchg
mov
push
mov
mov
adc
mov
test
sti
inc
mov
loopne
subb
clc
dec
outsb
jae
xchg
rcll
push
cmc
insl
pop
psadbw
out
bound
movsb
iret
fsubrs
mov
pop
xchg
outsl
int
push
mov
inc
mov
adc
rcll
or
mov
mov
lahf
mov
sub
sub
and
pop
popf
jne
mov
call
scas
sti
pop
popa
pop
mov
cli
out
popa
fsubs
cwtl
imul
push
insl
rclb
sbb
shll
cmpsb
mov
and
stos
mov
idiv
push
or
jecxz
push
andl
jle
sbb
sub
mov
xchg
pop
and
and
mov
aaa
ja
shlb
nop
xchg
iret
jecxz
insb
push
sub
in
stos
cli
fcoml
dec
stc
or
sub
in
sub
dec
sub
and
roll
loop
pop
mov
and
mov
sbb
addr16
mov
mov
or
sub
das
aad
movsl
sbb
iret
movsl
add
out
dec
jnp
mov
xlat
sbb
xlat
sahf
xor
dec
inc
repz
pop
mov
cli
and
dec
adc
pushf
and
stos
loop
xchg
lods
ds
pop
addb
cld
scas
sbb
xchg
jg
lret
cwtl
mov
xchg
aad
into
mov
out
mov
jp
pusha
push
mov
cmp
push
shll
push
push
or
incl
push
xchg
xor
aaa
popf
mov
and
xor
ret
mov
js
in
cli
jecxz
xchg
push
pop
xor
mov
push
xchg
inc
pop
out
scas
repz
add
faddl
sbb
in
cwtl
xchg
dec
sub
xchg
jno
xor
insl
insb
xor
mov
fldcw
divl
test
dec
cmp
sbb
sbbl
inc
outsb
and
inc
int3
push
adc
sti
push
sbb
movsb
test
mov
es
mov
or
push
mov
loopne
push
mov
mov
jg
out
sar
es
xor
mov
lods
xchg
jge
sbb
inc
fistl
js
push
fmull
or
in
sub
inc
imul
iret
aas
mov
mov
adc
and
pop
jo
mov
in
andb
mov
jno
jp
imull
test
pop
popa
mov
fldcw
pop
mov
fnstsw
push
scas
and
jo
iret
or
add
push
mov
inc
push
push
fimuls
xor
lret
xlat
mov
out
fstl
arpl
and
adc
cmpsb
xlat
dec
arpl
sahf
loope
sbb
outsl
or
and
sahf
aad
in
std
push
mov
add
pop
add
adc
mov
push
push
adc
sub
dec
out
inc
xchg
sub
sub
adc
mov
mov
mov
js
aam
inc
fs
aad
and
test
dec
adc
mov
out
push
adc
jno
mov
leave
call
mov
or
sub
rcr
inc
mov
xchg
sub
popa
cltd
push
aam
out
sub
fdivrs
rcll
mov
or
pop
lds
xor
cs
out
dec
int3
push
and
test
mov
push
pusha
aas
and
adc
mov
frstor
das
adc
in
inc
push
and
stos
add
hlt
mov
dec
xor
cmc
icebp
cmp
lods
xor
xchg
ds
xchg
dec
adc
scas
sbb
pop
sbb
sbb
sti
mov
dec
cmp
dec
pusha
mov
or
popf
aam
out
scas
movsb
jnp
dec
push
lds
sub
sub
repz
mov
adc
cmp
outsl
xchg
mov
fwait
cmp
fistpl
insb
add
xchg
mov
into
loopne
in
add
jb
les
popl
jb
or
dec
mov
inc
lods
pop
mov
push
daa
repz
pop
cwtl
push
or
or
rorl
add
push
int
les
xor
xchg
push
ss
pop
loop
and
cmpsl
add
inc
imul
pop
repnz
fiaddl
pop
or
inc
pop
or
mov
xlat
sbb
dec
es
imul
xlat
and
jne
jecxz
cmp
mov
loop
and
push
and
jecxz
mov
cmpsb
add
test
dec
loopne
mov
jns
or
push
mov
movsl
adc
int3
int
leave
jnp
gs
sbb
cwtl
stc
push
xrelease
leave
daa
lahf
popa
out
je
std
data16
jae
cmp
dec
rorb
mov
lcall
sbbl
cwtl
lea
int3
adc
lcall
xchg
fabs
sub
cmp
test
push
jo
arpl
mov
fwait
ds
lret
sub
adc
xchg
scas
jg
mov
sbb
inc
fmuls
xor
pop
or
push
dec
mov
sbbl
mov
add
xchg
pop
jle
inc
stc
cmp
mov
sub
jno
adc
cmp
lahf
imul
or
sahf
mov
cmp
lea
stc
mov
loop
stc
or
pop
pop
es
aam
push
and
test
mov
inc
inc
push
iret
and
stc
ret
std
or
lods
xor
jo
movsb
lcall
lods
out
cmp
sub
fstps
mov
stc
mov
push
inc
jge
mov
dec
sub
add
sub
test
push
sbb
cmpb
pcmpgtd
out
adc
test
in
js
xchg
cmp
pop
mov
mov
cmp
push
xor
out
or
and
in
rcll
jnp
icebp
add
jg,pt
loopne
and
push
pop
movsb
add
orb
lds
das
stc
leave
inc
xor
xor
sti
ljmp
jo
andb
fs
sti
rclb
nop
jns
bound
xor
inc
xchg
inc
xlat
clc
repz
mov
push
fldenv
das
sahf
dec
pop
mov
icebp
mov
ficoms
test
and
mov
in
cli
popa
adc
pushf
sahf
lods
sarb
ds
hlt
adc
jbe
jb,pn
rorl
xchg
mov
inc
push
push
mov
jns
push
sar
daa
stc
and
rorb
xor
pop
mov
rclb
jae
adc
mov
jecxz
inc
lahf
lock
sbb
cmp
out
inc
popf
xlat
std
jbe
dec
clc
xchg
scas
ficomps
or
push
jae
sub
mov
dec
fcoml
or
ret
popa
cmpsb
mov
jb
mov
aam
adc
popa
imul
mov
cmp
sti
fcomp
mov
cmp
pop
push
in
mov
fstpl
inc
inc
hlt
lret
notb
and
or
loop
mov
decb
addl
push
loopne
sarl
in
inc
jbe
in
push
out
aad
mov
fwait
push
aaa
mov
fs
push
xchg
vdivss
int3
dec
out
fmuls
push
cli
fsubl
rolb
pop
aad
popa
mov
dec
scas
mov
xchg
das
movsl
stc
hlt
and
sbb
sbb
mov
mov
insl
dec
fstl
xchg
out
jno
jb
rolb
cmc
lds
fdiv
adc
xchg
xor
jle
gs
cmp
jb
mulb
xchg
mov
xor
inc
insl
test
arpl
mov
movsl
fnsave
ljmp
inc
pusha
cmp
dec
fcomps
mov
inc
sub
mov
push
inc
or
das
push
cmp
fcompl
xor
mov
cmp
mov
stos
out
xor
neg
lock
push
xchg
adc
cmp
jb
pop
sbb
movsb
push
movsb
inc
jg
lods
mov
int3
pop
imul
inc
repnz
stos
dec
inc
lods
sub
insb
jle
aam
or
enter
repz
inc
out
inc
xor
add
mov
testl
or
test
pop
repz
lock
jnp
fnsave
adc
adc
imull
mov
or
or
stos
push
jnp
imul
rorl
cli
pop
into
adc
stos
add
push
enter
stos
rol
ja
das
iret
adc
cli
int
mov
sbb
call
outsl
jbe
push
icebp
sub
or
rclb
push
mov
notb
aaa
pop
xchg
dec
roll
aad
out
jae
cwtl
cli
inc
sti
pop
mov
or
in
xor
loope
cltd
dec
cmp
xchg
repnz
sbbl
jae
xlat
pop
or
jns
fildl
add
test
insb
in
push
addr16
scas
xor
loop
mov
xchg
pop
or
cmp
nop
adc
mov
or
xchg
in
in
out
divl
and
js
or
enter
fldcw
xchg
mov
sub
idivb
inc
ret
imul
inc
pop
jnp
fs
fimuls
lock
clc
and
cmp
sub
arpl
stos
or
lock
push
jl
mov
scas
fbstp
or
test
pushf
leave
and
cmc
mov
lds
adc
sti
adc
cmp
into
sahf
adc
stos
dec
in
push
dec
aam
mov
sbb
loopne
jecxz
in
push
cld
adc
xchg
in
out
das
ret
mov
cli
mov
push
cmp
cmp
sbb
xchg
ds
dec
inc
xorb
aas
in
mov
jp
jecxz
rcrb
sub
div
aam
push
inc
lea
aaa
push
xchg
mov
mov
mov
or
jne
arpl
sub
jne
xor
jb
aam
ljmp
out
icebp
orl
clc
dec
sbb
xchg
ret
pop
push
adc
inc
subl
sbb
stos
ret
jmp
cmp
arpl
mov
mov
addl
ret
sub
jnp
sbb
cmp
pop
imul
cwtl
in
aam
dec
pop
data16
les
cmp
xchg
test
jns
inc
stc
fnstcw
push
decb
xchg
mov
xchg
lret
test
ret
and
popa
push
dec
jle
adc
add
jno
sub
ss
bound
pop
mov
cmp
mov
lock
xchg
cmp
and
mov
arpl
das
mov
fwait
popf
nop
jb
daa
mov
and
outsl
popa
and
je
int3
sbb
imul
sub
add
aam
pop
iret
rcll
xlat
scas
loopne
adc
test
pop
popf
adc
pop
in
dec
fs
sbb
add
add
and
push
mov
fadds
jecxz
adc
lods
and
test
jb
push
jnp
add
incl
sub
lret
lret
jne
sbb
jo
pusha
pop
je
iret
cmp
mov
jne
loope
sub
loop
lret
aad
lret
sbb
cs
outsb
lret
cmp
add
es
mov
pop
mov
je
in
in
xchg
fbstp
ret
xchg
pop
mov
pop
mov
push
arpl
arpl
push
add
sub
cmp
cmp
jge
mov
jge
test
fiadds
mov
aam
xchg
mov
ret
sbb
add
sbbl
cli
loopne
mov
xorl
ds
popa
sub
push
dec
nop
lds
adc
icebp
pusha
inc
ss
xor
fildll
xchg
cs
jl
orb
pop
jno
push
popa
cld
mov
add
pop
lds
mov
outsb
ss
jecxz
add
mov
data16
mov
cs
movsb
pusha
cmp
jbe
push
sbb
popf
xor
push
xchg
and
xor
pop
and
xlat
fdivp
sbb
jle
xchg
clc
mov
sbb
and
adc
aad
aas
out
imul
outsb
xorb
sbb
sbb
std
mov
and
test
pop
push
insb
lahf
cs
test
or
icebp
je
jnp
sbb
popf
push
inc
jbe
mov
jge
push
test
dec
pop
mov
popf
push
mov
outsb
lods
ds
xchg
inc
ja
ficoms
mov
jl
xchg
xor
mov
jne
in
in
lahf
lahf
fisubrs
outsl
sub
iret
jo
mov
test
pushf
roll
xor
mov
dec
mov
stos
mov
mov
inc
fcoms
jmp
les
jo
adc
adc
fdivr
xor
mov
mov
lea
out
aas
movsb
xchg
push
sbb
clc
inc
dec
push
jp
mov
fidivs
and
pusha
out
lret
lds
add
shrl
decl
inc
das
fstpl
ret
loopw
mov
js
cwtl
imul
dec
mov
adc
add
xchg
jg
loopne
int
popa
xchg
aaa
psllw
jo
cltd
add
xchg
mov
int3
dec
jnp
das
pushl
xchg
or
test
aam
push
lock
pop
cli
jae
movsb
shl
adcb
sbb
test
adc
sbb
jne
xor
popf
test
sbb
sbb
std
out
sbb
pop
out
fwait
int3
dec
or
test
sbb
shlb
mov
rol
inc
push
into
repz
fisubrs
fstl
cmp
mov
shrb
sbb
adc
fiadds
dec
inc
inc
adc
xor
aaa
stos
jo
and
push
test
xchg
mov
adc
mov
xchg
pop
mov
les
cmpsb
jp
push
push
jecxz
pushaw
cmovo
aas
push
push
cmp
pop
pop
mov
cmpsl
cli
fldt
mov
iret
xchg
rcl
xchg
add
push
js
outsb
out
out
popf
jb
int
cmc
inc
push
cmpsb
and
sub
push
cwtl
mov
flds
mul
and
imul
mov
cmp
jecxz
xor
sub
mov
clc
cmp
repz
push
fbld
int
push
jecxz
push
popa
shll
mov
lods
mov
arpl
fimull
and
mov
xchg
test
rcl
je
sub
xchg
lahf
add
test
in
mov
push
jg
shll
sub
adc
rcrb
sub
mov
iret
stos
inc
cmp
mov
ret
ss
mov
popf
push
pop
pop
mov
hlt
push
xchg
cld
loope
mov
xor
and
sahf
scas
icebp
cmp
jp
loop
xchg
jmp
imul
aaa
xchg
addr16
or
daa
repnz
ljmp
jle
push
xor
push
fucom
cmp
les
std
fdivr
ror
push
ja
and
mov
das
scas
aad
scas
in
cmpsl
cli
mov
shl
add
aam
add
xchg
stc
sbb
shl
jl
xchg
cmp
outsl
ss
fidivrs
cmp
xchg
jbe
dec
jae
xchg
lcall
aad
and
jbe,pt
push
rolb
push
rcrb
mov
fisttpll
and
dec
rcll
xor
dec
mov
hlt
dec
insb
or
mov
lcall
in
rcrb
push
lods
js
bound
dec
lea
xor
iret
cmp
arpl
clc
out
aad
out
fs
jmp
adc
xlat
ficompl
in
cmpsb
adc
lret
movb
cmpsb
mov
jmp
mov
xor
dec
scas
aaa
pop
ret
dec
xchg
call
inc
mov
aaa
mov
pop
pop
pop
jl
jbe
or
scas
xchg
and
push
movsb
daa
add
pop
xchg
push
mov
dec
adc
push
jo
shrb
cmpsl
or
dec
xchg
mov
aam
jl
mov
push
add
xchg
outsb
xor
jnp
push
mov
or
cld
xlat
pop
out
ret
shrb
sbb
inc
fdivl
loope
dec
add
sahf
sbb
arpl
cmp
int
stc
pop
dec
out
sbb
xchg
int
fs
push
sbb
shr
and
inc
adc
leave
jecxz,pt
in
xor
xor
mov
ljmp
mov
stos
std
add
mov
xor
cli
dec
xchg
inc
xlat
mov
cmp
mov
push
jbe
pop
fisttpl
xchg
cmp
cmp
bound
stc
lock
inc
and
inc
jl
ljmp
fsubrl
cltd
pop
je
mov
mov
jns
fidivrl
ret
or
pop
sarb
cmp
loope
dec
sbb
mov
cmp
mov
jnp
aaa
fs
push
cmp
ja
jl
in
fdivr
pop
lds
mull
jns
jae
push
popa
test
leave
sub
mov
mov
outsb
xlat
inc
xor
mov
cmp
subb
into
xor
jbe
movsb
fiadds
cmp
xchg
inc
filds
mov
mov
jle
xor
mov
mov
mov
out
je
push
xor
mov
mov
fidivrl
xor
in
js
push
call
pop
and
cmp
add
sbb
test
inc
cmp
loop
int3
mov
add
xor
mov
movsb
pop
add
adc
sbb
mov
xchg
jne
mov
fstpt
js
sbbb
xor
xchg
mov
sti
add
push
push
or
cmpl
push
mov
ret
mov
and
repnz
pop
push
outsb
aas
mov
lret
and
mov
stc
shr
push
aaa
out
pop
inc
dec
dec
mov
test
mov
xchg
dec
jnp
dec
std
cmpl
cld
test
dec
dec
dec
leave
and
insl
and
fbstp
stos
enter
add
in
sbb
push
sub
sahf
pop
les
imull
les
mov
pop
cmp
js
int3
fbld
cwtl
in
in
pop
fwait
imul
out
or
outsb
or
push
cmp
fcoml
xchg
sahf
add
int
xchg
mov
out
loop
sbb
iret
addl
sti
pop
popf
and
push
push
mov
cwtl
std
bswap
imul
div
mov
into
lcall
cwtl
mov
push
inc
jmp
pusha
mov
push
add
das
xor
sub
sbb
mov
adc
inc
cltd
jg
inc
add
fisttps
mov
jnp
push
faddl
lock
aad
cli
jle
in
out
dec
adc
daa
ds
mov
addr16
xchg
lea
sub
mov
mov
xor
and
sahf
lret
scas
pop
mov
jge
pusha
orb
int
sbb
jno
movsb
ds
es
testb
nop
sbb
xor
inc
cmp
and
mov
loope
dec
pop
and
std
in
notb
push
negl
lret
and
jl
xchg
add
xchg
jle
divl
popa
jae
arpl
inc
jo
out
pop
push
add
imul
fadd
sarl
cmc
dec
push
pop
pushf
sbb
fistps
lret
fidivrs
mov
jbe
push
iret
imul
xchg
pop
sub
test
mov
xor
mov
shr
mov
fcompl
ja
or
and
mov
mov
mov
lds
mov
sub
sbb
sbb
cmp
int
add
xchg
out
jo
mov
add
dec
leave
aad
stos
test
daa
or
dec
push
fnsave
jg
dec
lds
dec
mov
rcrl
subb
and
jecxz
or
loope
or
inc
dec
out
xor
cmpsl
in
int
and
cwtl
enter
mov
scas
jg
cmpsb
fisubs
lods
add
je
sbb
in
repz
in
sub
jnp
pop
les
jl
je
data16
jno
adc
or
dec
sbb
cmp
mov
inc
out
xchg
jg
xlat
in
aad
int3
out
lea
shll
mov
lock
fsubp
mov
rolb
js
data16
insl
push
imul
and
clc
aaa
cmp
testb
nop
sub
psraw
cltd
add
std
xor
inc
nop
fmuls
ret
in
push
jne
inc
cmp
xlat
cwtl
cmp
jo
cmc
shlb
mov
sahf
or
mov
cltd
inc
jno
adc
les
imulb
rcr
test
push
jecxz
int
dec
aas
sbb
pop
scas
pop
jl
mov
inc
in
or
out
add
push
imulb
push
loopne
jbe
dec
out
jg
cmp
leave
sarl
loopne
dec
push
jne
cmpsb
sub
xchg
aad
xor
mov
leave
add
dec
cmpsb
mov
sbbl
push
jmp
push
xchg
popf
push
in
push
repz
add
and
mov
jg
fcomip
dec
add
popa
jb
inc
mov
inc
mov
cwtl
and
pop
adc
pop
jle
cwtl
sahf
addr16
xchg
hlt
aam
jg
out
sbb
dec
or
mov
out
jnp
add
mov
sahf
mov
sbb
shll
inc
or
adc
ret
lret
stc
notl
adc
pop
fs
loope
gs
pop
leave
insb
popa
cmp
jle
fimull
or
add
jno
incl
or
fstpl
or
sbb
mov
in
push
jmp
adc
mov
stos
dec
aad
ret
insb
adc
push
xchg
popa
mov
adc
mov
leave
jne
stc
jl
dec
data16
xor
lcall
negb
repz
and
cmc
xor
mov
cmc
ljmp
mov
imul
xor
pop
bound
or
mov
jno
sub
jnp
outsl
mov
fs
mov
js
ljmp
sub
shlb
testb
test
cmp
lods
pop
outsl
and
jne
add
cltd
dec
call
hlt
int
jecxz
add
cld
inc
fdiv
sbb
cmp
push
push
scas
mov
andb
mov
pop
jnp
mov
test
mov
push
xor
ret
inc
mull
insb
push
in
cwtl
xor
mov
fld
push
push
cmp
dec
hlt
call
sbb
inc
cmp
inc
bound
jecxz
xchg
xchg
add
jns,pn
pop
movsl
fs
dec
fcompl
sub
lcall
pushf
fsubl
add
mov
push
pop
add
into
stos
insb
dec
lret
addr16
xor
push
xor
add
add
jnp
adc
sub
push
repnz
inc
mov
es
icebp
loop
testb
mov
or
punpcklbw
sbb
pop
sbb
push
scas
aad
jnp
pop
cmpsb
hlt
dec
loope
test
push
mov
outsb
push
add
dec
dec
inc
in
xor
push
cmp
add
lret
cmp
mov
mov
js
jbe
int
jmp
push
ds
sbb
divl
mov
or
push
inc
inc
mov
shlb
int
adc
lret
outsl
jge
out
decl
rcrb
push
xor
xor
jecxz
jp
pop
sbb
pop
push
das
arpl
jnp
adc
cmpsl
pop
out
pop
mov
push
repz
fwait
jae
pop
ret
das
test
inc
inc
mov
pop
outsl
test
mov
jo
pop
rorb
in
cmpl
in
lds
cmp
dec
hlt
mov
dec
in
lahf
loope
sahf
das
xlat
mov
popa
and
fstl
insb
jno
cmp
cmp
icebp
stos
lds
jb
cli
push
cmp
insb
sbbl
push
inc
xchg
enter
pusha
pop
mov
fwait
fwait
pop
fwait
jnp
and
outsb
dec
mov
sbb
mull
inc
shlb
fisubl
int3
jg
push
ret
inc
xor
lret
bnd
pop
or
and
jle
xchg
jg
cmp
bound
in
es
iret
shll
int
sub
sub
pop
andb
test
sbbl
push
mov
bound
mov
rorb
push
js
out
mov
inc
push
lock
fisttpll
adc
cmp
cmp
pop
push
cmp
adc
inc
push
jnp
sub
test
and
dec
push
call
xchg
pop
xlat
add
sbb
into
push
loope
xchg
pushf
cmp
rolb
pop
outsb
mov
sub
push
jo
lock
dec
adc
test
in
sub
dec
jl
jo
cmc
dec
push
stc
lahf
bound
mov
inc
pop
out
sbb
mov
push
xchg
cli
lods
inc
dec
push
mov
test
jl
sti
pushf
xchg
or
sub
xor
icebp
shlb
nop
xor
sbb
mov
and
push
jmp
lret
jp
jg
inc
xchg
enter
push
mov
int3
stos
sbb
push
jae
jbe
pop
and
lret
fs
adc
fstl
insb
dec
es
lret
xor
and
into
movsb
jb
and
adc
jo
call
and
das
push
cmp
stos
outsb
pop
add
push
pop
faddp
add
push
popf
jg
fiadds
fwait
nop
fnstenv
xor
mov
cmp
sbb
xor
ja
es
iret
push
sti
push
mov
ret
out
loope
xor
add
dec
inc
mov
add
xchg
sarb
int
or
pusha
in
addr16
ja
sbb
lea
mov
cld
mov
cmp
cmpsl
inc
jb
and
mov
aad
push
or
add
dec
arpl
push
xor
out
sbb
arpl
cmp
fbstp
add
movsb
enter
shll
es
pop
lods
jge
lods
xchg
jle
shrb
cmc
inc
xlat
add
enter
scas
push
loopne
pop
add
and
ja
orl
dec
sub
lcall
cmovne
sub
push
aaa
lahf
jp
cmp
test
fcomps
cli
push
cld
mov
mov
in
cmp
dec
scas
sahf
int3
cmpsb
push
loope
ret
test
and
popf
or
dec
jae
push
add
fwait
add
dec
adc
repz
lods
dec
ss
inc
xchg
jge
dec
mov
inc
dec
out
clc
jae
bnd
push
add
pop
xor
cmc
and
loope
sbb
mov
imul
and
push
mov
in
mov
or
xchg
es
fadd
mov
pop
jno
xor
mov
add
inc
push
xor
stc
aas
push
sbb
and
mov
inc
aaa
ret
sti
in
rol
mov
push
pop
cmp
pop
movsl
es
iret
xor
xchg
clc
imul
jae
orb
aad
pop
jbe
in
inc
movsl
inc
mov
bnd
xchg
ljmp
add
ret
clc
aad
jg
test
jnp
daa
adc
ficoml
dec
jg
rcrl
sub
testb
insb
rcr
scas
dec
and
std
jbe
fs
lds
test
mov
icebp
adc
xor
aam
fucomp
stos
inc
lcall
es
dec
cmp
orb
fldenv
pusha
adcl
pop
js
in
daa
ret
pop
aaa
fcmovb
bound
imul
cld
popf
aas
xor
rolb
push
mov
add
sbb
xor
push
scas
call
push
mov
jp
xor
leave
or
pop
sbb
and
call
inc
or
fnstcw
outsb
and
das
dec
out
or
pop
mov
adc
add
jno
mov
lock
xor
mov
lock
xorl
xchg
ja
mov
ljmp
xor
fisubs
stos
outsb
sub
insl
jbe
mov
push
fildll
and
xchg
mov
cmp
call
push
test
nop
cmp
sub
ficomps
add
mov
xchg
outsl
pop
xchg
cmpb
rol
addr16
xor
gs
rolb
push
mov
jecxz
adc
loop
mov
mov
cmp
add
fisubs
and
sahf
mov
push
jecxz
adc
in
pop
mov
stc
mov
jno
pop
gs
ret
mov
adcb
out
xchg
ljmp
fxch
cmpsl
fsub
push
mov
cld
push
mov
cmp
xchg
pop
cmp
scas
daa
inc
lcall
pushf
xchg
mov
aas
or
xchg
xor
sbb
push
push
cld
and
and
sbb
cmp
sub
cmp
cs
mov
jle
add
lahf
ss
push
adc
loopne
out
fsubrs
sub
xchg
imul
stc
jmp
sar
dec
popa
add
shll
mov
test
js
mov
orb
xchg
jnp
gs
xchg
nop
add
mov
sbb
gs
inc
mov
mov
popa
lret
push
push
dec
and
fdivrl
in
dec
dec
lahf
or
es
add
loopne
mov
inc
xor
rolb
fucom
lods
orb
mov
push
adc
shl
mov
push
out
adc
mov
mov
sub
pop
in
push
lock
ljmpw
lods
fsts
aaa
aad
or
cli
push
inc
int
iret
popf
mov
clc
lcall
dec
sete
sahf
cmp
cwtl
jl
dec
shrb
xchg
mov
and
sti
add
aam
push
fstpt
xor
add
lods
es
jae
loope
je
insl
shll
ljmp
sbb
dec
cli
sbb
cltd
mov
cs
lea
dec
cmp
stos
push
aas
jg
add
inc
or
lcall
xor
xor
adc
es
dec
jbe
mov
pop
test
or
xor
mov
fwait
xchg
sbb
mov
cmp
sub
or
mov
adc
xor
add
ljmp
scas
loope
in
xchg
inc
add
lret
jo
movsl
jp
xor
jbe
and
int3
sbb
jle
mov
lock
adc
lods
push
mov
hlt
lock
cli
jmp
cwtl
je
in
push
call
fdivs
jb
pop
in
popa
icebp
outsb
daa
bound
ljmp
push
push
mov
xorb
lret
cli
or
insl
inc
test
popa
rorl
negl
lods
push
pavgb
loope
jg
repz
adcb
dec
jle,pn
insl
jno
pop
pop
xchg
sub
push
pushf
das
dec
lock
fdiv
js
xchg
in
cs
filds
les
pop
cmp
xchg
xchg
sarl
adc
adc
pop
mov
repnz
lret
cmpsb
movsb
cld
jmp
pushf
sbb
mov
mov
lret
add
into
adc
popf
aas
lret
add
cwtl
pushf
or
cmp
fcoml
push
push
pop
cmp
mov
cli
mov
lahf
or
fwait
pop
jo
and
and
shlb
jnp
aas
ds
mov
fucomi
and
adc
test
jg
not
mov
mov
lds
lahf
andl
xor
andl
scas
dec
mov
push
out
xchg
inc
cs
mov
aam
lret
xor
cmp
repz
sub
inc
test
and
ret
mov
pushf
lahf
inc
pop
jmp
sub
jecxz
icebp
test
test
movsb
xchg
aaa
test
in
clc
shl
dec
sbb
cmp
sub
out
ljmp
adc
dec
jae
cli
xor
cld
inc
jmp
int
xor
pop
daa
push
jecxz
cmp
stos
das
dec
pop
sub
int3
les
pop
daa
xchg
xor
insb
inc
outsl
fldl
add
mov
adc
dec
bound
cld
stos
loopne
mov
int
xor
mov
jne
jno
pop
vpcomuq
add
movsb
paddusb
lock
jnp
or
pop
cmpsb
addb
sub
or
jae
scas
pop
js
and
stc
xor
scas
mov
mov
xchg
ja
or
mov
add
imul
test
std
aam
push
cmpsb
pop
add
adc
push
sbb
mov
shll
jbe,pn
mov
in
cmp
sub
cmpsl
scas
pop
scas
add
pushf
add
inc
out
outsl
das
cmpl
dec
repz
icebp
xor
rorb
subl
mov
fwait
and
mov
sub
and
mov
cmp
and
push
jecxz
lahf
ret
or
jl
xlat
jae
movsl
xchg
int3
insb
aaa
pop
arpl
cmp
xor
std
xchg
jmp
scas
xchg
fldt
jle
lret
negb
inc
or
sbb
mov
fmul
adc
sub
and
jp
lret
call
adc
lods
inc
orl
mov
notl
jne
nop
xor
xor
pushf
sub
xor
xor
and
addb
mov
leave
sbb
push
cmp
popa
mov
add
je
pop
and
mov
xor
fdivl
push
aas
sbb
shll
jg
bound
mov
xchg
sub
or
pop
pushf
mov
fsubrs
add
push
pop
sub
jae
scas
push
xor
xchg
pop
cmpsl
xlat
mov
pop
or
sbb
ljmp
xorl
test
test
push
jl
cmp
mov
adc
xchg
mov
enter
stos
cmp
cmp
adc
int
sbb
mov
inc
xchg
inc
or
xor
xor
loopne
xchg
lods
xchg
adc
add
sbb
xchg
push
cld
xchg
out
or
add
push
in
jle
sar
sti
dec
mov
mov
pusha
mov
adc
adc
lahf
xchg
xchg
cs
adc
shrl
xchg
leave
out
repnz
aas
sbb
add
inc
or
lahf
and
adc
iret
and
xchg
cmp
jge
push
ret
cld
pop
loop
mov
pop
and
imul
pop
ret
int
sub
push
xor
loopne
pop
jnp
int
jo
and
add
cwtl
jno
fsubrl
iret
test
adc
mov
pushf
ud0
out
sbb
push
stos
and
out
rorl
lods
lds
push
lds
cmp
out
xor
xchg
popf
sub
xor
movsb
cmp
lcall
push
jge
xchg
jae
cmp
jmp
aas
popf
nop
sbb
je
pushf
ja
jnp
pop
in
mov
test
out
outsl
jo
jg
xchg
mov
mov
mov
repnz
std
test
fdivl
mov
xlat
aaa
movsl
dec
pop
or
test
cltd
imul
dec
jb
stos
cmp
jo
push
nop
xchg
rcrl
adc
sahf
inc
lods
adc
sub
repz
nop
add
dec
cmp
lahf
inc
push
mov
pop
mov
xchg
jne
ret
cmp
xchg
mov
nop
jne
sub
sbb
pop
in
pop
stos
add
sub
mov
pusha
push
or
push
pop
push
push
sub
sbb
pop
pop
and
cmp
pop
xchg
dec
lahf
push
cmp
mov
mov
cld
mov
outsl
jnp
lods
lock
movsb
out
add
and
push
int
icebp
adc
daa
mov
outsb
inc
test
notl
mov
aad
cld
js
sub
ret
mov
mov
cmp
jle
mov
test
and
int
into
cwtl
cmp
dec
and
sbb
jle
mov
movsb
aas
jno
push
and
int
aad
loope
int3
xchg
cltd
mov
push
lea
mov
and
inc
and
mov
mov
dec
test
push
sti
jmp
pop
js
lods
cmp
shrl
rclb
out
pop
adc
lahf
cltd
mov
cmp
jp
adc
mov
mov
call
mov
je
pop
cmpsb
jb
cmpsb
mov
out
enter
clc
ljmp
or
xor
push
sbb
inc
dec
int
push
cmp
ja
fwait
enter
sbb
mov
repz
jmp
mov
in
push
pusha
rorl
xor
xchg
in
bound
arpl
cld
mov
movsb
int
mov
fdivrl
lret
add
xchg
mov
pop
add
dec
imul
pusha
out
rorl
add
mov
xchg
inc
push
mov
push
aam
insb
mov
mov
ret
jnp
xor
jp
testb
xchg
mov
icebp
sub
arpl
mov
shrb
and
push
or
and
notb
xor
mov
xorb
repz
adcb
push
and
loope
imul
or
xchg
cld
fsubrl
cmp
dec
pop
mov
das
mov
out
test
sti
clc
shlb
push
sub
xchg
mov
repz
mov
rcll
clc
xor
bound
or
cmc
pop
inc
loope
inc
jmp
pop
or
lea
cmc
jge
inc
les
push
in
xor
sbb
ljmp
repnz
outsb
not
cmpsl
sbb
sbb
sub
adc
pop
dec
repnz
xor
es
jbe
ss
pop
in
inc
mov
jl
push
rcl
sub
test
out
pop
mov
xor
sub
and
push
loop
cmp
xor
and
mov
aam
dec
arpl
shl
test
mull
push
andl
shrl
inc
jl
loop
inc
outsl
inc
lcall
mov
cs
insb
fdivl
shrb
ret
mov
adc
dec
ret
imul
pop
cld
and
aas
testl
imul
dec
data16
xor
ror
mov
mov
rolb
iret
lret
xor
add
sub
hlt
xor
ffreep
cmp
jae
lcall
test
pop
or
xchg
push
or
mov
mov
daa
mov
push
push
fdivrl
cs
pop
push
sbb
push
in
dec
cli
xchg
aaa
ja
mov
or
gs
pop
mov
and
xchg
nop
arpl
cmpb
cmp
lods
lods
lahf
mov
addl
aam
int3
test
and
scas
or
pop
inc
fdiv
cmpsl
mov
push
jnp
xchg
xchg
outsb
mov
pop
adc
dec
loop
movsb
mov
aam
mov
cmp
pop
lret
add
cmp
lret
mov
cs
mov
cmp
mov
inc
mov
push
mov
loop
adc
xlat
pusha
ds
mov
xchg
jmp
fsubr
jns
mov
pop
pop
add
xchg
rcr
pop
sbb
sub
sub
out
repz
sub
dec
ja
cs
cmp
push
cli
jmp
lods
inc
add
inc
loopne
aas
clc
dec
pop
dec
les
adc
mov
jmp
out
mov
push
in
cmp
fsts
mov
pushf
test
sub
mov
pop
fwait
lcall
or
test
aaa
test
push
pop
sbb
es
cld
adc
push
sahf
inc
sub
es
icebp
pop
stos
mov
xor
pop
inc
pop
mov
out
push
cmp
lret
pop
xor
repz
movsb
pusha
xor
push
add
xchg
and
add
and
push
lret
sub
fisubrl
ret
inc
mull
xchg
sub
pop
hlt
xchg
sti
lcall
xor
add
sbb
add
push
dec
cmp
rcl
subl
test
outsl
sahf
mov
mov
out
xor
out
decl
jge
iret
adc
int3
scas
inc
inc
push
or
sub
add
push
dec
jns
jo
sub
and
cmpsl
jns
inc
inc
sbb
pop
ss
loop
sub
ds
or
ja
dec
dec
pop
mov
fs
and
add
push
outsl
mov
stc
push
in
scas
cmp
and
mov
lock
mov
into
cmp
jnp
xor
ret
inc
ljmp
into
aas
aad
xor
push
adc
std
mov
imul
mov
xor
testb
jle
push
cmp
insl
mov
mov
sti
in
add
and
xor
mov
fstpl
mov
jp
nop
sub
pop
sbb
add
leave
dec
sub
test
sub
inc
inc
cli
popa
sar
fnstcw
mull
aaa
xchg
xor
lds
lcall
xor
push
mov
ret
and
in
ss
mov
dec
xchg
sbb
aam
mov
icebp
fcoms
or
sub
mov
hlt
add
addb
mov
cmpsl
pop
dec
sarb
mov
mov
push
fs
lahf
dec
scas
nop
push
xchg
mov
in
xlat
stc
cmpsl
movsb
xchg
xchg
cmp
sub
push
pop
pop
scas
repz
adc
ja
pusha
push
movsb
push
push
je
inc
and
fwait
add
mov
push
inc
faddl
mov
pop
rcrb
neg
xchg
sbb
or
scas
and
mov
aad
aam
pop
call
add
fldl
popf
fisubrs
fwait
pusha
adcb
and
sub
rclb
lea
pop
pop
push
das
loop
addr16
or
loope
mov
fdiv
inc
loop
add
insl
sub
out
das
push
jge
rsqrtps
dec
dec
jne
fisttps
inc
xor
pop
sub
jmp
loop
mov
out
cmc
stc
lcall
mov
mov
orb
cs
rcl
test
jg
dec
dec
mov
mov
repz
aam
arpl
jp
sahf
pop
dec
push
hlt
subb
mov
fistpll
and
lea
daa
aaa
dec
inc
sti
in
shlb
or
adcl
pop
mov
xchg
loope
sub
xorb
add
hlt
xor
ljmp
decl
popf
popa
scas
jae
sub
das
jno
daa
push
mov
cmp
jmp
std
sahf
jnp
dec
sub
fcmovb
inc
sub
out
adc
shll
push
popa
inc
dec
mov
mov
xor
push
mov
dec
mov
fisttpl
fcos
mov
inc
lock
xchg
sub
jl
movsl
test
adcl
rorb
in
mov
leave
insb
xchg
pop
jno
sub
call
fmull
mov
inc
imul
inc
popf
test
xor
or
xor
notb
xor
cmp
xchg
cmp
push
and
pop
mov
inc
dec
pop
daa
lds
hlt
mov
sbb
fisubrl
adc
sbb
sbb
popa
mov
xchg
xor
xlat
bound
test
iret
inc
pop
push
lods
fsts
or
xchg
jmp
jno
fwait
lret
xchg
ja
clc
bound
xchg
cmp
imul
adc
lock
mov
mov
out
push
jno
mov
dec
xorl
lahf
into
aas
test
mov
add
outsb
cmp
loopne
cmp
movl
inc
lea
mov
add
rol
cmp
add
sbb
xlat
addr16
jecxz
push
inc
shrb
jle
aam
pop
in
popf
add
mov
lods
imul
es
lahf
mov
insb
or
xchg
xchg
push
and
in
xchg
lea
mov
cmp
jnp
movsl
xor
inc
pop
out
test
mov
fisubrl
fsubs
sub
movsl
les
jp
inc
sub
mov
loop
outsl
push
cmpsl
mov
and
clc
fdivrl
push
cmpsb
and
cmp
push
pop
mov
icebp
test
popf
std
loopne
push
push
fsubr
dec
cltd
cmp
push
mov
test
popa
insb
mov
fimuls
lahf
insb
xchg
sahf
test
push
xor
pusha
std
lea
add
mov
and
jo
dec
sbb
cmp
inc
aaa
sub
movsl
push
stc
lods
ret
mov
jmp
sahf
inc
int3
mov
sbb
push
push
xchg
lea
mov
push
cmp
out
or
repz
in
imul
jle
jecxz
ds
push
call
mov
cwtl
jno
lret
jbe
push
adc
outsl
scas
add
mov
stc
ja
dec
cld
movsl
sub
and
in
xchg
pop
insb
roll
clc
push
mov
pusha
push
mov
dec
fildll
loope
dec
cmpsb
push
std
es
sbb
movsl
fildl
push
adc
push
adc
aas
mov
jb
hlt
mov
in
adc
adc
repnz
xor
push
sbb
insl
jb
inc
xor
or
rcrb
and
lret
loop
stos
outsl
and
bound
pop
into
mov
sahf
stos
fisttpl
pushf
mov
mov
aaa
dec
stos
test
cli
sub
aas
pop
adc
dec
sub
sbb
enter
jo
stos
aam
cmp
or
or
push
repnz
push
out
ret
in
lcall
insb
std
adc
add
dec
sahf
addr16
popf
push
dec
ds
pop
sub
bound
shll
jo
xchg
jne
je
push
imul
adc
pop
outsb
fldt
sbb
xor
fdivrs
lock
inc
sub
xorl
and
inc
cld
lods
jo
fadd
repz
outsl
mov
sbb
aaa
push
nop
mov
mov
pop
jl
mov
stos
dec
cli
push
inc
sbb
ret
out
arpl
in
cmp
sbb
mov
inc
lahf
mov
scas
int3
cmc
fisttps
out
add
ja
lods
daa
in
out
xchg
inc
nop
sbb
sarb
hlt
in
sub
jae
repz
daa
in
scas
lods
int
decl
xchg
mov
push
shl
pop
pop
xchg
mov
push
or
add
cwtl
adc
add
push
sbb
xchg
lds
xchg
mov
cmp
aad
mov
adcb
out
mov
fmul
repnz
xchg
cmp
adcl
pushf
stos
scas
pop
sbb
dec
sub
pop
jmp
inc
sti
and
bound
imul
in
fmuls
sbb
adc
jg
les
xchg
cli
insb
sub
fbstp
idivl
sub
inc
orps
outsl
lods
adc
jle
jp
adc
insl
mov
pushf
xor
nop
or
jmp
dec
jg
das
cmp
insl
cmp
add
adc
clc
test
fistpl
aad
sarl
lcall
stos
cmpsb
and
jne
sub
inc
pop
adc
dec
pop
inc
push
fsubl
mov
mov
mov
mov
fcoms
repz
mov
cmp
enter
push
out
movsl
pusha
inc
sbb
roll
add
mov
add
loopne
fisubrs
mov
loope
fdivs
mov
test
pop
mov
mov
pusha
hlt
cmc
pop
xchg
jg
pop
add
sub
stc
nop
es
or
xor
jg
shlb
aas
push
push
inc
dec
cs
push
mov
call
insl
xchg
cwtl
xchg
inc
mov
packuswb
pop
scas
mov
in
add
shll
add
mov
pushf
psrlw
aas
movsl
cld
mov
sbb
pop
in
lcall
mov
imul
and
test
imul
push
int
cmp
mov
rolb
ud0
dec
mov
push
insl
push
mov
push
cltd
fistl
pop
or
add
xor
and
dec
cmp
mov
cmp
pushf
pop
popf
sub
das
mov
xor
mov
pushf
divl
mulb
lret
xor
dec
push
push
test
les
pop
repnz
inc
sub
in
xor
and
fidivs
xchg
jl
push
sarl
or
sub
inc
sbbb
jbe
mov
push
lods
sub
aam
test
cmp
mov
sbb
int3
xchg
and
cmpsb
push
mov
movsb
aam
mov
pop
lods
inc
dec
cltd
mov
lret
lods
das
sbb
pop
cmc
mov
sub
pusha
inc
inc
or
or
pop
lds
jae
xchg
pop
mov
inc
iret
or
aaa
icebp
sub
jne
and
ja
faddl
dec
xor
iret
test
sbb
aam
push
xchg
call
std
shll
push
xchg
adc
clc
std
js
inc
repz
mov
call
xor
out
stc
fldpi
add
jne
daa
imul
or
addps
adc
adc
sub
mov
mov
mov
xor
mov
idivl
sub
inc
inc
inc
out
xor
push
fwait
lods
push
fists
and
mov
out
rorl
xchg
cs
pop
mov
fdivrl
sbb
test
sbb
out
dec
enter
sub
lds
pop
xlat
xor
lds
push
xorl
adc
sarl
sub
or
sub
adc
fnstsw
pushf
icebp
shll
cmpl
loopne
or
ja,pn
and
ds
hlt
xor
call
mov
out
or
orb
and
mov
sbb
pop
cmc
imul
adc
lret
popf
jmp
pusha
inc
cmp
stos
and
and
mov
adc
mov
test
loope
jns
cmp
ret
out
dec
out
mov
insb
popa
mov
jg
lret
adc
xor
mov
out
fsubl
adc
es
test
hlt
sbb
shr
into
xchg
les
in
xor
cmp
and
pop
mov
sub
cmp
call
loop
sub
mov
pushf
add
popf
ret
shlb
mov
jnp
jp
pop
daa
mov
dec
lcall
repnz
and
stc
lret
push
in
fs
lds
push
jmp
mov
cmpsl
cwtl
dec
push
adc
ljmp
scas
lahf
cli
ss
cmpsb
cld
or
lcall
movsl
and
fidivl
mov
lods
mov
mov
mov
lock
loope
cmp
out
and
ss
cs
mov
xchg
mov
and
lods
and
sub
cmp
mov
jns
test
aas
pushf
pop
adc
addb
loope
add
call
bnd
fiaddl
or
cmpsl
pop
mov
fisubrs
mov
add
pop
sbb
xor
mov
notl
sti
das
cmp
cmpsl
push
gs
or
and
mov
mov
fists
sub
repnz
mov
cmp
push
inc
push
xor
clc
testb
cmpl
in
xchg
fstl
ja
fbld
imul
xor
add
cmp
adc
je
gs
insb
jne
fdivrl
cmpsl
lret
loop
imul
sarb
jns
movsl
stc
cmp
or
mov
and
cmpsb
stc
aam
sbb
es
inc
jmp
inc
imul
les
xchg
lock
mov
or
mov
cwtl
divb
or
jecxz
test
add
or
jbe
pop
pop
inc
lds
loop
hlt
mov
jae
adc
jo
push
mov
sbbl
mov
xchg
jnp
sub
outsb
aaa
daa
xchg
scas
lods
sbb
inc
xlat
pop
adc
jb
sbb
add
es
mov
ljmp
test
outsb
sub
ror
lcall
ret
ja
cmpsl
sarb
jecxz
mov
sti
jecxz
imul
pop
popf
ljmp
add
push
or
mov
in
cmp
mov
add
sub
jo
imul
ret
cli
xor
je
or
pop
fmul
mulb
ret
aad
stos
xor
and
dec
xchg
fstpt
push
mov
pop
out
and
and
dec
fidivs
std
sti
mov
cld
leave
lea
test
iret
sub
inc
sbb
fists
sbb
sti
xchg
xchg
xchg
popa
fwait
cltd
filds
sub
mov
ret
inc
adc
clc
les
cmp
imul
fs
mov
dec
sbb
adc
xor
or
and
sub
dec
fsubs
add
push
orl
pop
mull
std
test
rclb
in
sub
movsb
xchg
mov
sbb
insb
fsubl
jbe
insl
and
clc
dec
ss
sbb
repz
repnz
mov
in
mov
imul
jge
out
mov
cs
nop
lods
adc
mov
mov
mov
push
add
push
dec
ret
mov
stos
mov
out
movsb
pop
cld
fcoms
idivl
fnstenv
insl
adc
fildl
jle
das
sub
sbb
int
stc
dec
jg
pop
nop
or
out
mov
xchg
xchg
fs
dec
dec
xor
gs
int3
mov
fisttpll
mov
add
pusha
fwait
mov
xor
or
lcall
jae
xchg
cmp
daa
or
aas
xor
pop
add
mov
cmpl
imul
dec
jp
cli
std
daa
lret
inc
adc
fbld
jno
sbb
gs
pop
das
dec
sub
into
and
dec
push
lock
insb
or
cs
jno
pushl
outsl
stos
rcpps
cmc
faddl
adc
sub
iret
adc
popf
fsubl
sub
ficoml
pop
cmpsb
loop
pop
lahf
xchg
mov
xor
int
sbb
sub
jle
xchg
dec
add
repz
or
push
mov
mov
sub
mov
xchg
js
mov
std
jno
clc
jge
xor
test
int
std
dec
mov
hlt
dec
sbb
cmpsb
loop
and
fld
pop
xor
push
pushf
ficompl
imul
jg
nop
pop
sbb
and
inc
lods
ja
sarl
sub
jmp
aam
ljmp
jmp
xor
testb
mov
test
outsb
dec
movsl
adcl
lods
lahf
inc
sbb
jb
in
loop
push
ss
mov
pop
dec
mov
sub
push
in
arpl
jmp
mov
sbb
in
xchg
pop
jno
push
jmp
dec
fdivs
cmp
add
xchg
mov
in
insb
lret
add
cmpsl
cmp
add
pop
pushw
push
loop
cmpb
or
insl
js
in
xchg
fdivrs
pop
cmpsb
inc
adc
icebp
push
mov
fsubs
pop
jmp
mov
or
and
mov
dec
aam
add
loopne
sbbb
cmp
shll
movsl
into
std
add
cmp
outsb
mov
out
outsb
sub
or
push
cmpsb
add
loopne
xor
xchg
adc
xchg
mov
xchg
xchg
push
movsl
mov
scas
lods
mov
and
orb
jne
inc
aas
jo
xchg
enter
ret
shrl
mov
insb
xchg
lret
push
jecxz
xchg
cmp
mov
dec
jne
in
adc
loope
fpatan
sbb
jne
fs
sbb
popa
xor
adc
pop
ret
les
test
lock
jg
shr
sbb
dec
cmp
mov
adc
divl
or
inc
or
inc
sahf
in
imulb
or
push
test
jo
dec
xor
jae
popa
insl
cmp
and
adc
fimuls
xor
rcll
inc
add
xor
data16
daa
dec
fwait
mov
inc
mov
xchg
xchg
fidivrl
cmp
push
sub
cmp
jbe
jmp
call
cmp
lret
pop
scas
xchg
mov
ret
lret
dec
movsl
pop
jmp
shr
mov
adc
mov
sub
cmp
push
mov
adc
pslld
add
xor
mov
cltd
add
out
subl
iret
iret
or
in
mov
in
fnstsw
neg
add
dec
xchg
inc
cli
push
sbb
push
test
jns
loope
nop
pop
push
fdivrs
pushf
int3
test
xor
push
mov
aad
sbb
lret
inc
jg
cmp
pop
mov
fnsave
fisubrl
mov
sbb
arpl
mov
subb
mov
push
adc
fs
xor
aas
add
cwtl
call
jae
inc
lock
test
sub
push
and
jge
xchg
rorb
dec
out
dec
mov
fwait
dec
aad
roll
jns
in
jae
inc
jae
xor
push
int3
mov
psadbw
in
xor
mov
mov
lret
scas
jl
negl
std
out
bound
add
adc
pop
das
jno
xor
int
mov
jno
mov
aad
lcall
rcl
inc
js
mov
push
cmp
mov
push
pop
repnz
cmp
jge
fisttps
jo
sub
mov
cmpsb
rcrl
into
and
sub
push
test
pop
je
xor
sub
pop
mov
mov
mov
pop
aas
repz
das
bound
sahf
and
ficoms
cmpsb
sbb
mov
fcoml
loop
ret
jp
outsl
and
push
xor
or
mov
imul
incl
fidivrl
jbe
add
xchg
aas
bound
mov
jne
jns
popf
push
imul
shlb
clc
lods
adc
adc
test
xor
push
cmpsl
ss
adc
in
jmp
and
iret
sahf
into
or
xchg
adc
lret
cmp
cmp
outsl
cmp
xor
xor
mov
jmp
jae
pusha
xchg
mov
adc
int3
enter
push
sub
push
cmpsl
pop
les
testb
or
cmp
push
subl
rorl
dec
rcrb
mov
into
leave
mov
les
cmpsb
cmp
clc
mov
jmp
fidivs
jbe
jge
ret
xchg
xchg
adc
sbb
stc
adc
out
sbb
leave
pop
sub
sahf
push
pop
scas
mov
xchg
in
mov
sub
mov
cmp
popa
jge
dec
mov
xor
xchg
std
jo
push
cmp
arpl
les
inc
mov
mov
adc
outsb
fdivr
push
loop
rcrb
outsl
sbb
xor
decl
xchg
or
out
ja
loope
rclb
cmp
je
iret
mov
pop
cmp
add
cmp
pop
sub
jne
stos
pop
scas
addb
lock
push
cmp
mov
sbb
lods
mov
aaa
xchg
mov
lret
sahf
sahf
xlat
push
fcomps
push
inc
mov
cmc
fidivrs
adc
sub
stos
and
out
push
fcoml
js
push
arpl
pop
mov
enter
jge
movsl
mov
jae
cmpsb
mov
sbb
mov
cs
lea
aam
in
in
xchg
xchg
mov
sub
lea
and
sbb
inc
popl
fwait
fs
adc
sahf
inc
xchg
pop
sbb
faddl
test
mov
mov
shll
jns
xchg
add
fs
into
rorb
add
cmp
and
xchg
js
push
xchg
jb
mov
fldt
scas
fdivrl
pop
jo
cmp
add
leave
cmp
fwait
xlat
cmp
adc
jbe
inc
xchg
pop
out
xchg
adc
and
cmp
adc
rcll
pop
dec
jmp
xor
push
clc
inc
rorl
or
cmpl
aad
js
lcall
inc
sbb
push
mov
adc
ret
lods
out
inc
cmpsl
or
movsl
adc
jmp
enter
inc
pushf
ret
loopne
add
lock
stos
decb
add
sbb
xor
pop
test
negl
xor
sub
xor
lods
les
adc
fcmovu
jae
in
lret
in
arpl
ss
lds
push
fnsave
movsl
xchg
jae
int3
jbe
xchg
andb
jle
xchg
jb
enter
xchg
pop
xchg
sbb
pop
movsl
and
push
jnp
sub
daa
ja
movsl
xor
sbb
adc
cmp
je
dec
cmp
jae
aaa
push
push
ja
js
icebp
jg
mov
cli
sbb
dec
xchg
add
mov
xor
stos
dec
and
dec
lcall
or
adc
sub
mov
and
or
ljmp
mov
outsl
add
js
adc
sbb
xchg
dec
cmp
out
and
repnz
sbb
push
dec
adc
jle
push
dec
adc
cli
mov
push
and
hlt
test
loop
or
jge
push
jo
xor
or
jb
jecxz
pop
mov
data16
fwait
loop
cmpsb
or
mov
das
pop
mov
add
nop
adc
inc
lock
jnp
dec
std
mov
les
or
ret
mov
adcb
and
int3
pusha
movsb
mov
pop
stc
out
scas
sbb
scas
xchg
scas
fcom
cmp
lret
popa
call
dec
jg
frstor
mov
inc
add
xor
cli
push
mov
cmp
fsubl
out
push
push
jg
ja
cmp
test
scas
mov
mov
sarl
ja
jp
scas
nop
xorl
fld
stc
jmp
jle
mov
pop
out
lea
lcall
or
sub
lock
jp
sbb
das
xlat
jnp
lea
ret
jecxz
fimuls
js
lea
scas
xchg
inc
std
dec
inc
and
xchg
push
pop
mov
fdivl
lock
stc
mov
or
leave
lret
add
mov
jle
into
dec
shlb
shr
xor
fisttpll
inc
shlb
xchg
loope
and
fwait
loopne
push
daa
cmpsl
push
push
psrad
push
sbb
push
sub
jns
mov
jmp
ss
loope
into
mov
out
insb
cmp
xor
dec
sub
movsb
scas
mov
pop
mov
cmp
xchg
mov
mov
push
aad
push
fsub
rcr
mov
int3
clc
int
adc
jo
das
dec
loopne
fistpl
cmp
in
lods
loope
mov
inc
sbb
mov
pop
cwtl
psubsw
mov
mov
pop
std
repnz
mov
push
in
cmp
pop
test
test
adc
pusha
mov
mov
sti
pusha
mov
mov
and
pop
call
jbe
xor
stos
into
fsubrs
dec
iret
ds
sub
inc
addl
mov
jmp
and
nop
loopne
fwait
mov
cmpb
cmc
enter
pop
xor
mov
mov
cwtl
jnp
into
dec
mov
aad
cmc
cmp
mov
out
xor
jb
mov
pop
js
int3
xchg
popf
rolb
mov
lds
negl
sbb
mov
lods
sarb
jae
xchg
mov
add
adc
popf
push
lahf
ret
gs
xlat
jne
call
xchg
mov
clc
setb
shl
cmpl
ljmp
jbe
test
sbb
popa
ss
add
sahf
cmp
push
lret
mov
add
sbb
xchg
fmull
pop
outsb
sbb
adcl
push
cmpsb
ret
jecxz
sbb
call
pop
mov
sbb
pop
pusha
sub
xchg
aaa
mov
repz
scas
mov
movsb
xchg
xchg
pop
mov
lods
inc
push
cmp
push
adc
sbb
les
inc
hlt
in
mov
adc
nop
das
jg
test
xor
ret
roll
clc
aaa
inc
mov
jbe
insb
fstp
loop
shrb
rcr
jnp
popf
pushf
xor
stos
imul
or
mov
xor
cmp
cmpsl
clc
pushf
rcrb
fadds
out
push
insl
lods
in
inc
cmp
in
insl
jle
or
xchg
sarl
sbb
mov
and
push
jecxz
lret
sub
jb
lea
lods
mov
daa
push
adc
ret
push
cmp
movsb
cmpsl
movsb
lds
movsl
mov
xlat
sub
pop
shrb
adc
mov
dec
out
leave
insb
xchg
test
and
mov
int
fdivs
shll
push
jge
aaa
xchg
add
shll
push
mov
and
ret
cmc
stc
sub
sbb
sub
jo
ss
add
pop
push
sub
mov
adc
sbb
rcl
imul
xor
test
aas
xor
cmp
test
inc
xchg
push
cld
out
adcb
and
inc
call
mov
adc
pop
push
mov
pop
push
push
mov
icebp
div
mov
dec
sbb
test
inc
mov
hlt
hlt
sub
test
ret
xor
test
push
jnp
xor
mov
fcoms
xchg
mov
pop
push
xor
sub
out
mov
repnz
mov
add
cli
inc
aas
mov
bound
adc
sbb
sub
shll
cmp
mov
inc
mov
fwait
test
ss
mov
std
sub
inc
dec
sbb
inc
cltd
mov
scas
ret
filds
out
test
xor
cmp
leave
push
dec
lods
inc
inc
sbb
lods
cmpsl
stos
push
fwait
lret
pop
xchg
pop
jl
das
xchg
pandn
scas
sub
and
ret
cmp
rorl
sub
push
fcoml
sbb
pop
lcall
ret
xchg
add
mov
dec
cmp
mov
xchg
add
imul
gs
rclb
cmpsb
xchg
xor
jno
xchg
in
xor
daa
push
repz
adc
fdivrs
pop
xlat
ret
adc
fsubrp
dec
pop
inc
or
lock
sbb
in
lcall
insl
iret
mov
mov
scas
verw
mov
lock
adc
push
jecxz
mov
jo
xchg
mov
data16
ds
dec
cltd
sbb
and
xchg
sub
sub
xor
jnp
inc
stos
in
pushf
iret
or
mov
or
jmp
shlb
je
jge
fmuls
in
add
jmp
mov
xlat
xor
inc
inc
add
xchg
rol
push
cmpsl
mov
enter
lock
shrb
outsb
int
lret
add
fs
in
cld
pop
mov
lret
add
mov
imul
into
out
xchg
xor
sbb
loop
hlt
sti
mov
jbe
pop
cltd
pop
cmp
mov
push
xor
push
add
das
or
mov
sub
fsubrs
xchg
adc
sub
lahf
hlt
shl
xchg
inc
aaa
rcll
popf
dec
cmp
adc
cs
out
pop
ljmp
xchg
xor
out
pushf
fistl
aam
push
aas
ret
jl
mov
out
jle
xchg
aam
pushf
adc
pushf
sub
mov
out
scas
mov
mov
dec
jg
inc
in
dec
call
movsb
xor
push
cmp
mov
mov
ds
hlt
in
push
xchg
in
xlat
rolb
dec
pushf
fsub
sub
loope
out
add
sbb
sub
jns
movsl
bound
ds
test
dec
push
loope
add
loop
xchg
mov
dec
dec
js
aad
cli
mov
das
mov
inc
mov
sbb
je
mov
dec
repnz
shlb
test
lea
neg
popf
je
mov
rcl
xor
fstpl
fwait
enter
xchg
pop
fnsave
scas
scas
mov
push
or
mov
jg
int3
cmp
fnsave
lods
out
dec
push
cmpsl
ror
adc
nop
sub
call
xchg
daa
or
ja
or
push
out
dec
sti
mov
cs
mov
cmp
dec
ret
mov
and
bound
adc
fnstenv
fsubrl
shl
adc
cld
data16
xor
sub
cli
dec
inc
bound
add
dec
push
stos
xor
xor
insb
lea
push
pop
mov
add
jmp
dec
cmp
scas
mov
xor
lods
notl
stos
std
popf
lret
cmpsb
or
xor
jne
adc
xorb
push
aaa
les
js
jg
push
dec
pop
xor
dec
inc
fsubrl
add
xchg
mov
imul
aam
sarb
je
ja
jne
lea
scas
inc
cmp
pop
ljmp
lods
andl
mov
add
xor
pusha
in
inc
mov
mov
arpl
movsl
pop
popf
adc
call
icebp
std
sub
scas
xor
xor
stos
rorb
jnp
icebp
inc
int3
push
mov
push
fisttps
cld
xor
push
jne
pop
jne
repz
xor
insb
mov
fnstcw
jo
dec
jmp
sbbl
sbb
mov
push
ret
and
push
out
xchg
imull
cmp
adc
daa
and
and
inc
addr16
pop
int3
or
jno
cmp
jecxz
test
sti
adc
xchg
out
lds
fdivrs
dec
dec
fsts
xchg
dec
stc
push
test
leave
push
and
test
cmc
addl
inc
mov
add
cmp
xor
or
stos
cmc
mov
xor
jo
sub
pop
mov
lahf
dec
cmpsb
mov
xchg
jnp
sahf
lahf
aaa
fimuls
ret
cmp
cmpsl
adc
sub
lret
lock
add
mov
lret
iret
ja
ret
loope
in
jns
jmp
pop
out
xlat
fsubp
ret
cli
aas
test
les
out
xchg
clc
push
jns
mov
mov
mov
push
in
andb
push
in
add
xor
xor
xorb
mov
jl
imul
pop
cmp
pop
jle
and
xor
lret
scas
sbb
cltd
das
mov
sbb
add
dec
mov
stos
stos
stc
or
out
imull
cmp
xlat
pop
stos
xor
popa
in
push
mov
sub
sahf
xchg
adc
shlb
cwtl
dec
lcall
cmp
mov
enter
sbb
pop
push
incl
rcrl
in
gs
add
pop
inc
mov
out
ret
stos
sbb
jle
sahf
roll
push
js
int3
fdivrl
pop
cmp
mov
hlt
jno
flds
iret
mov
idivl
mov
push
jbe
clc
add
dec
aad
cmp
cli
and
insb
sbb
int3
cltd
xor
fstps
in
mov
xor
inc
dec
dec
pop
stc
add
dec
je
test
popf
sub
cmp
mov
dec
adc
pop
jg
addr16
add
scas
insb
or
out
sbb
int3
adc
xsaves
cmc
dec
loop
push
test
daa
cmp
jp
sbb
lret
fsubrs
and
stos
lods
rcrl
pop
ja
js
les
addr16
addr16
lahf
shrl
out
out
cmp
sub
mov
scas
jle
xchg
out
pop
inc
movsb
test
cmp
inc
cmp
and
or
inc
mov
clc
ret
sti
dec
mov
sbb
cs
jbe
shl
ret
mov
jne
notb
or
test
scas
mov
shll
push
push
xor
cmp
mov
xor
jne
jle
or
inc
xor
xchg
lret
sbb
loope
add
cmp
dec
xchg
xor
outsb
mov
fsubrp
test
sbb
and
repnz
or
push
inc
mov
push
and
inc
xor
das
xor
ja
mov
xchg
pop
ret
dec
lret
lods
testb
jb
pop
mov
scas
add
xchg
jecxz
addr16
smsw
rolb
movsl
movsl
mov
inc
dec
pop
jmp
add
shrb
nop
cwtl
shll
cmpsl
fsub
xor
in
out
sbb
sub
out
imul
push
push
cmp
ret
xor
in
repz
or
push
outsb
pusha
sbb
mov
in
adc
aaa
sub
mov
jecxz
testl
cmp
and
mov
mov
pop
sbb
dec
hlt
push
fwait
cwtl
ja
xchg
mov
fs
sub
hlt
sbb
xor
sbb
hlt
adc
or
or
jbe
jnp
leave
outsl
aad
outsb
in
jnp
push
ret
jecxz
cmp
call
lea
mov
cli
loop
and
jg
sub
outsb
push
das
xorb
mov
fwait
cld
jb
sbb
mov
adc
xor
out
cmp
mov
testb
iret
call
stc
jg
mov
leave
and
lret
int
sbb
scas
cmpsl
leave
xchg
notl
mov
sub
inc
scas
in
repz
jmp
outsl
sbb
out
cmpsl
clc
inc
mov
pop
sub
rep
in
stc
jne
fmull
ret
xlat
jae
add
popa
jb
sbb
sub
adc
mov
fldcw
jnp
pop
xchg
push
int3
push
xchg
sbb
nop
push
jecxz
arpl
out
fists
mov
push
xchg
jbe
divl
insl
cmp
loopne
xchg
mov
daa
jmp
cmp
dec
lea
test
lcall
jb
push
in
xchg
aad
xchg
mull
outsl
jge
add
xor
shrb
pop
and
xchg
mov
mov
icebp
mov
out
sub
inc
sbb
inc
and
xor
rcr
movsl
mov
xlat
dec
ret
inc
ljmp
repnz
cltd
movsb
scas
ret
push
sahf
je
das
cmpsb
in
popf
jl
jne
jg
or
push
mov
enter
adc
daa
mov
in
add
or
mov
pop
mov
sub
jbe
mov
dec
dec
das
mov
test
lret
pop
hlt
push
cmp
icebp
push
adc
leave
add
mov
cli
out
fs
cmp
xor
divl
sbb
iret
jne
xchg
pop
sbb
ds
xchg
into
std
jg
leave
fcmovnbe
adc
mov
push
insl
cmpsl
out
pop
jbe
jae
int3
mov
adc
inc
out
fmuls
push
xchg
insl
call
icebp
pushf
jg
popa
jl
jns
and
jmp
and
test
mov
sub
rcrb
mov
cmp
mov
inc
mov
loop
inc
xlat
leave
clc
imul
add
adc
cmpsb
xchg
dec
out
icebp
push
xchg
gs
std
inc
sbb
out
push
or
je
icebp
xchg
and
insl
loopne
lcall
cltd
push
enter
jo
push
js
sbb
int
mov
mov
in
push
and
inc
lods
in
loop
push
xor
pushf
pop
out
mov
inc
stc
pop
xlat
add
push
movsl
popf
jno
inc
sti
cs
jge
xor
add
repz
lock
inc
mov
test
push
jno
jo
push
scas
data16
inc
push
sub
rcrl
jno
fs
pop
adc
stc
dec
xor
xor
popf
outsb
adc
sub
cmp
push
cmpsl
sbb
mov
daa
in
jo
jne
mov
aad
outsb
mov
lcall
or
jle
leave
mov
repz
mov
stos
sbb
or
outsb
xchg
mov
call
mov
adc
aad
test
dec
ret
in
mov
fstps
shlb
in
cmc
mov
mov
in
cmp
js
pop
mov
addb
pusha
xchg
leave
sbb
pop
pop
xlat
cmp
ret
xor
and
in
push
cmp
dec
mov
in
inc
or
jo
mov
adc
cmp
jp
andb
mov
outsl
mov
in
into
mov
aam
sub
push
mov
sub
gs
mov
xchg
pop
and
mov
push
mov
cld
or
shrl
js
insb
daa
xlat
andb
xchg
jne
cmp
push
jle
jae
dec
loopne
push
push
cmp
test
push
sbb
js
in
pushf
cmp
sbb
ja
add
aad
pop
fstps
insb
mov
das
push
pop
xor
or
adc
icebp
pop
or
je
inc
nop
pop
mov
push
popf
ds
cmpsl
sub
push
stos
enter
icebp
or
adc
cltd
fcmovu
negl
mov
inc
cmp
pop
imul
mov
cwtl
dec
mov
inc
cmp
out
jl
xor
mov
mov
push
push
mov
adc
fimuls
cld
pop
dec
repnz
adc
adc
cmp
adc
jne
or
pop
call
mov
sub
inc
mov
push
mov
push
jmp
mov
push
add
mov
add
int
mov
mov
sahf
sub
sahf
ja
testl
push
cmp
add
out
mov
nop
mov
popa
shr
int3
dec
dec
pop
dec
adc
rcll
push
cs
and
cli
mov
mov
out
ljmp
push
cmpb
mov
pop
pushf
and
negb
insl
mov
cmp
or
repnz
fnsave
push
ret
adc
add
std
cmpsl
push
clc
test
mov
add
ja
shr
fimull
cmp
outsl
or
mov
fwait
xor
mov
push
rcr
lea
gs
cmp
and
shll
or
or
unpckhps
sahf
inc
aaa
call
test
jle
cmpl
xor
xchg
popa
and
ffreep
out
scas
jecxz
popa
lret
pop
test
inc
pop
sbb
inc
scas
cmp
clc
dec
jl
outsb
jecxz
or
stos
mov
and
out
lret
xchg
xor
scas
cs
pop
mov
and
inc
int
movsl
push
or
icebp
hlt
cmp
roll
scas
inc
and
dec
loope
out
mov
ljmp
and
mov
clc
inc
adc
leave
dec
in
or
in
xor
push
lods
mov
std
pop
xchg
jge
fidivrl
dec
in
add
jb
mov
stos
addl
xor
fnsave
sub
pop
sub
mov
fldl
fcoms
sub
bound
mov
cmp
pusha
das
dec
jnp
int
add
pushf
lea
daa
mov
into
push
or
pavgw
push
in
push
in
cmp
leave
je
and
out
icebp
sti
xchg
pop
adc
push
shlb
outsl
mov
xchg
das
adc
cld
call
mov
mov
pushf
stc
adc
cwtl
xor
lods
or
jg
pop
loopne
sbb
or
xchg
pop
ja
adc
pop
cmp
paddq
xor
push
mov
or
and
lods
testb
jns
mov
fdivrs
jae
pushl
pop
daa
fldenv
push
cmpsb
lods
dec
jb
shrl
notl
push
lock
xchg
mov
and
or
js
fsubrs
push
mov
orl
test
bound
mov
shll
and
jo
repnz
dec
imul
jmp
and
xor
rorb
nop
fildll
test
xor
or
sbb
cmp
ja
cmp
fs
push
cmpb
pop
pop
mov
mov
jno
fisubl
and
mov
in
mov
int
and
test
sbb
xor
adc
jmp
and
fwait
jg
sbb
inc
loope
cwtl
cli
rcr
xlat
adc
repnz
into
mov
mov
mov
sbb
mov
push
cmpb
pop
lcall
add
vpcomw
push
jae
or
insl
stos
mov
mov
mov
sbb
popa
stc
fstps
out
aad
push
in
sbb
aad
in
lahf
xchg
nop
mov
movsb
lret
push
pushf
push
push
xchg
lret
movsl
std
lret
std
add
in
add
jmp
pop
sub
rclb
and
mov
adc
pop
imul
test
leave
xor
sub
xor
das
repz
pushf
and
xchg
int
jge
movsl
xchg
fwait
jg
or
shll
rcrb
mov
leave
inc
fnsave
or
int3
mov
push
dec
inc
push
mov
cmpsl
xor
leave
hlt
test
sbb
mov
xchg
bound
add
pop
frstor
sbb
nop
in
sarb
mov
outsb
popf
leave
push
bnd
mov
cltd
xchg
aam
jmp
mov
repnz
in
rcrb
or
in
jns
cmp
les
mov
or
jecxz
ret
pop
es
lods
rolb
cmp
lea
mov
sbb
fcmovu
or
mov
or
out
push
xor
cwtl
mov
push
icebp
xor
xor
push
aam
xor
pop
mov
mov
sbb
data16
and
in
fcompl
jg
mov
out
ss
dec
cli
mov
xchg
mov
add
mov
lcall
inc
cmp
or
jp
adc
and
popf
push
push
mov
fadd
adc
add
jnp
xchg
fiaddl
enter
fildl
inc
and
aaa
cmpsl
xchg
xchg
mov
sub
idivb
movsl
mov
in
dec
xchg
mov
cmp
xor
sbb
pop
jmp
and
outsb
in
lock
fists
dec
cmp
dec
xchg
into
gs
repnz
sti
xor
xchg
cmp
mov
pop
sub
es
inc
test
cmpsl
and
mov
jnp
roll
adc
or
rclb
scas
fsubp
xchg
xlat
cmp
or
test
nop
jo
outsb
xchg
xchg
sbb
jae
rcll
dec
cs
sub
mul
loope
xor
inc
scas
lods
out
loope
pop
ret
xor
jg
push
pop
inc
sbb
ds
cmp
lret
mov
pop
mov
inc
mov
cmp
rolb
sub
mov
and
scas
adc
daa
xor
sbb
insb
add
cmp
mulb
test
loope
push
cmp
lea
dec
cs
push
add
outsb
sub
adc
popf
fildll
add
push
ljmp
daa
xchg
xorb
xor
sbb
pop
xor
add
sbb
or
mov
mov
and
dec
add
movl
fisttps
cmpsb
in
lock
sbb
mov
das
pminub
mov
lods
popf
sbb
adc
and
lea
xchg
mov
outsl
pop
mov
xchg
mov
outsb
enter
lock
cld
movsl
rclb
loope
out
cmp
popa
jb
add
sbbl
sub
insl
jbe
out
fcomi
out
jo
inc
pop
lret
dec
mov
in
mov
movl
add
test
nop
and
repnz
xchg
inc
fstpl
or
out
inc
xor
outsb
push
mov
inc
adc
jnp
jae
jp
jl
mov
adc
pop
xor
cmc
cmpsl
nop
cmpsb
cmpsb
dec
push
ret
cmp
dec
dec
lret
loop
sbb
add
or
adc
fildl
mov
mov
aad
mov
sub
xchg
jecxz
insl
faddl
lret
or
jns
shlb
test
dec
jmp
aas
jmp
outsb
pop
test
push
incl
cmp
icebp
out
in
dec
imul
push
je
pop
in
fstps
dec
daa
mov
xor
sbb
adcb
aam
push
fistpll
nop
mov
xchg
xor
jg
adc
mov
movsb
pop
or
push
leave
mov
repnz
loope
or
dec
cli
ss
sti
inc
sub
fldlg2
mov
or
lock
dec
movsl
cli
mov
icebp
dec
jecxz
jge
inc
adc
fsubl
add
and
gs
dec
mov
cltd
cmp
data16
mov
rcl
mov
add
ret
and
into
mov
inc
push
jge
loopne
cmp
jno,pt
iret
dec
or
lcall
js
test
mov
call
cmc
lcall
jge
or
and
es
lcall
lret
dec
add
jbe
pop
arpl
test
adc
dec
jge
push
mov
imul
pop
fimull
jecxz
pop
ret
fwait
xchg
xor
pop
jns
jno
lods
adc
push
in
or
jge
mov
and
cmp
jmp
idivl
cmp
dec
xchg
mov
xchg
faddl
fsub
xor
fisttps
dec
leave
inc
mov
in
jns
enter
aas
and
sbb
clc
daa
xor
mov
sahf
add
shrl
icebp
icebp
or
outsb
mov
push
or
orl
das
insl
test
rorb
dec
mov
cwtl
mov
inc
cwtl
or
push
aad
push
fistpl
push
push
mov
out
mov
lahf
ret
aam
and
push
out
into
adc
scas
push
sbb
into
mov
cld
negb
push
test
push
xchg
movsb
sbb
movsl
in
out
push
mov
cmp
movsl
and
rclb
sub
adc
jecxz
scas
jmp
sbb
mov
sub
or
dec
add
out
mov
and
ror
cmpsl
lret
jle
icebp
nop
sbb
outsl
and
enter
mov
sbb
inc
cmp
movb
sub
and
mov
cmpsl
cmp
jl
push
add
pop
dec
add
ret
mov
rcr
cmpsl
dec
pusha
mov
stc
imul
inc
adc
cmp
divb
jbe
stos
mov
adc
push
fxam
mov
push
push
jmp
cmp
cmpsl
mov
sub
cli
and
pop
loopne
js
clc
jo
shlb
xorl
mov
pop
jb
sub
jmp
aam
adc
out
push
xchg
xchg
mov
xchg
in
mov
mov
xchg
add
decl
jecxz
mov
fs
enter
pop
mov
and
stos
cmp
xchg
loop
or
mov
xchg
iret
sub
dec
xchg
lret
pop
pop
dec
aad
xlat
repnz
push
outsb
push
test
int
pushf
xchg
fmuls
push
aaa
imull
in
popa
imul
sarl
aaa
mov
mov
mov
push
lods
movsb
xor
sbb
sub
add
dec
aas
lahf
inc
jecxz
mov
iret
cli
mov
popf
xchg
loop
hlt
fnstenv
lcall
mov
jp
iret
stc
mov
jae
aaa
cmp
mov
mov
xchg
cmp
test
push
test
les
add
mov
pop
push
daa
push
adc
push
into
mov
dec
enter
mov
out
je
addb
mov
and
popa
pop
repnz
cmc
inc
push
testl
mov
inc
xlat
jecxz
push
in
mov
mov
imul
leave
and
mov
pop
lods
fwait
xor
jae
pop
cmpsb
ret
cmpsb
mov
or
sub
mov
pusha
mov
sarb
pop
fwait
andb
daa
push
adc
outsb
inc
xchg
mov
inc
and
push
int3
cmp
or
add
and
push
pushf
sti
shll
or
xor
ret
insl
in
push
push
icebp
xor
sub
jo
pop
jmp
js
es
xor
mov
or
mov
pop
rorl
es
mov
lods
test
test
adc
mov
mov
movsb
mov
icebp
pusha
sbb
lods
dec
dec
cs
push
fidivrl
mov
fdivrl
mov
outsb
mov
cmc
inc
stos
je
mov
jl,pn
inc
mov
pop
divl
jecxz
shll
pop
jae
imul
lds
or
lahf
rclb
loope
and
rcrl
and
int
fs
repnz
sbbb
mov
loop
sub
inc
pushf
inc
dec
dec
cmpsb
popa
add
push
mov
cmp
xchg
popa
insb
imul
and
or
xor
dec
push
or
lret
sahf
ret
negb
aam
icebp
lock
imul
mov
lret
sbb
mov
inc
scas
scas
pushf
adc
arpl
int3
pop
add
mov
pop
jp
ret
fidivl
jp
sub
xor
push
and
lods
add
test
or
arpl
ret
pop
sub
mov
xchg
inc
out
push
loope
lea
cmpsl
xor
inc
out
scas
jnp
cmp
jnp
dec
pop
jle
mov
and
cmp
cmp
add
xchg
pop
stc
shlb
movsl
pop
cmpsb
xchg
cmp
lods
aaa
clc
pop
ljmp
push
mov
test
add
push
xorl
xchg
dec
mov
add
outsb
lds
jbe
fisubrs
movb
test
inc
pushf
and
repz
inc
inc
sub
outsl
scas
stc
repnz
xchg
loopne
jle
jmp
ret
daa
sub
shlb
fstl
test
arpl
fidivrs
scas
aam
and
push
sbb
and
out
mov
int
mov
jno
loop
pop
sahf
mov
and
sub
insl
xchg
mov
dec
lret
and
shrl
out
mov
mov
clc
insl
lea
mov
cmp
push
mov
adc
jns
rcll
jmp
mov
add
adc
std
xor
stos
shrl
into
mov
mov
push
subl
addr16
xchg
mov
adc
into
xchg
push
loopne
gs
incb
or
inc
push
mov
pop
adc
dec
mov
icebp
outsb
mov
popa
in
fs
les
add
lcall
test
sub
fnstsw
dec
popf
jl
dec
mov
add
mov
mov
dec
sbb
add
sub
push
add
mov
and
dec
scas
insl
into
mov
lods
push
out
add
mov
jge
jns
setno
sbb
gs
cld
lahf
inc
jmp
popa
dec
sbb
xchg
imul
std
adc
scas
add
mov
push
mov
or
sub
pop
mov
jbe
push
ret
je
mov
movsb
adc
sahf
inc
mov
sbb
and
and
mov
addr16
shrb
ss
lds
hlt
jae
pop
cmpb
inc
push
sub
xor
push
hlt
fcompl
adc
scas
cmp
jnp
orl
jo
loope
aaa
xchg
jnp
addr16
lea
fnstsw
rol
ret
push
pop
mov
jle
fcmovb
test
sahf
pop
js
stos
into
inc
jbe
movl
stos
cmp
pop
mov
jno
rcl
adc
cwtl
push
push
jp
lea
mov
pop
shrb
scas
and
mov
dec
cmp
sahf
mov
mov
or
cld
and
jnp
call
push
dec
pop
movsl
push
mov
or
cmc
ret
hlt
push
daa
jnp
out
test
add
scas
stos
xor
dec
rcrl
out
out
aaa
in
inc
lahf
inc
mov
faddl
adc
cmp
lock
push
or
lods
inc
scas
sub
inc
cmp
jns
jbe
dec
sub
push
repnz
add
jmp
cwtl
js
adc
mov
add
or
aas
sbb
xchg
add
adc
stos
inc
pop
inc
fdiv
cmpsl
stc
fisttpll
pop
dec
fidivl
fsubp
jecxz
fcompl
data16
jo
testl
std
mov
pop
xchg
mov
pusha
inc
sbb
out
xchg
repz
fists
and
pop
mov
jne
and
sub
lahf
adc
xor
repz
cmp
dec
mov
inc
pop
jo
in
lock
inc
jo,pt
cmp
sbb
dec
frstor
lahf
sbb
cs
mov
sarl
ljmp
hlt
jbe
pop
shll
daa
pop
xchg
scas
loop
lea
jmp
adc
add
cmpsb
mov
jno
and
outsb
in
mov
loopne
shrl
push
pop
sub
xor
cmpb
adc
dec
push
inc
fneni(8087
jmp
jge
inc
ret
or
and
out
fldenv
pop
scas
pusha
cmpb
jnp
ss
mov
inc
jg
xlat
pop
out
jo
insl
mov
jge
data16
xor
push
nop
pop
jno
pusha
cld
push
cmp
pop
popf
sbb
sbb
or
adc
sar
pop
adc
sti
enter
jmp
cmp
ljmp
xchg
movsb
out
pushf
or
repz
push
cmpsl
ja
rcr
xlat
mov
cmp
add
pop
in
add
xchg
xchg
aas
js
jmp
adcl
shlb
fstp
xorb
mov
repnz
and
lcall
and
nop
sbb
inc
xchg
inc
jns
xchg
pusha
loopne
shll
adc
fwait
xor
add
jl
loop
push
jno
in
pop
sti
pusha
inc
mov
mov
repz
scas
cld
dec
jb
cmp
push
push
pop
adc
adc
arpl
jecxz
dec
adc
push
push
mov
sbb
jp
sub
push
xor
jg
rcrl
loopne
fldcw
or
mov
and
xor
popf
negb
inc
pop
xorb
test
sbb
inc
pop
or
or
sbb
pop
pop
sbb
out
iret
or
insb
popa
in
mov
mov
gs
cmpb
cmp
mull
cmp
xor
ja
pop
mov
fisubl
dec
pop
sti
add
jno
ss
daa
mov
inc
pusha
roll
fcomip
pop
sub
mov
sahf
aam
cmc
xchg
pop
adc
jge
addr16
jecxz
lods
mov
repnz
dec
mov
mov
scas
push
not
int3
call
inc
xor
es
inc
incl
fbstp
shll
lds
xchg
sbb
shll
push
mov
mov
push
push
add
xchg
and
mov
pop
xlat
shl
dec
add
mov
test
pusha
ret
adc
mov
leave
inc
push
addr16
jne
fsub
jb
jp
call
call
and
scas
out
add
push
add
popa
sbb
sub
xchg
jns
sbb
xchg
jne
repnz
sbb
fwait
jge
testl
add
push
push
xor
mov
jo
lret
das
scas
cld
pop
clc
pop
sub
jne
test
and
and
ds
jb
mov
jno
xlat
adc
cmpl
cmp
mov
and
mov
sub
or
cltd
int
int
imul
loopne
fwait
dec
adc
sbb
xor
sbb
push
mov
je
jns
jns
jle
inc
cmp
rcrb
inc
shrb
pop
jo
enter
bound
into
pop
loope
mov
sbb
jns
imul
stos
gs
push
in
sbb
push
xor
movsb
ja
bound
adc
mov
lret
and
cld
mov
sbb
push
outsl
enter
shlb
pop
test
pop
jecxz
inc
jp
xchg
lret
imull
enter
cld
xor
lahf
jo
xchg
inc
jno
push
jl
xchg
xchg
stos
pop
lahf
aas
adc
jne
push
mov
cmp
mov
add
out
hlt
jne
and
xchg
sti
clc
cmp
cmc
sub
push
cmp
pop
out
adc
ss
daa
imul
adc
fwait
je
or
lods
xchg
adc
inc
addr16
cmpsl
cmp
fidivrl
roll
inc
lcall
ja
rcrl
or
and
dec
cmp
cmp
sarl
inc
add
cmp
fwait
inc
pop
pop
and
inc
jl
pop
leave
subl
mov
and
movsl
push
dec
lds
mov
push
mov
jnp
shr
pop
pop
movsl
jbe
mov
push
xlat
lods
jne
jmp
xor
aam
pop
xor
fimuls
lds
adc
cltd
cmp
xor
cmp
call
fldenv
mov
mov
adc
xor
and
cmp
cmp
adc
add
stos
xchg
movl
pop
push
dec
mov
jne
fdivs
cmp
mov
int3
loop
pop
repz
add
dec
xor
cmpsl
arpl
rcrb
pusha
adc
fbld
mov
lret
out
js
sub
lock
in
jb
pop
cli
add
mov
mov
sub
push
sbb
adc
pusha
ja
jo
das
adc
or
pusha
inc
shrb
push
js
dec
pop
ror
cmp
dec
xchg
outsb
mov
mov
adc
les
fisubl
call
negb
add
jecxz
xchg
das
inc
add
fadds
in
loopne
test
cmp
lods
adc
and
xlat
pop
adc
ret
mov
stc
add
stos
jo
iret
sub
and
and
fcomps
mov
inc
push
dec
dec
adc
mov
pushf
ficomps
jg
jo
aas
sti
sbbl
shrb
push
xchg
lock
es
inc
jns
jecxz
jg
notl
stos
clc
sub
jle
test
jp
sbb
stc
fs
out
scas
push
mov
psubb
ret
xchg
sbb
pop
adc
mov
inc
xor
lret
sub
and
lods
daa
ficomps
xchg
in
loop
outsb
cmp
jo
xrelease
cld
lds
cmp
mov
bound
mov
inc
inc
and
push
lods
mov
add
xchg
adc
in
xor
or
jecxz
and
push
test
mov
adc
ljmp
dec
jp
int3
faddl
sbb
jae
outsb
jmp
out
mov
xchg
xor
inc
adc
rcrl
mov
out
cmpsb
movsl
or
xor
pop
in
out
cli
sbb
ljmp
sub
pop
adc
pop
fldcw
and
jmp
scas
gs
pop
jg
test
outsl
or
xchg
and
fdiv
aaa
mov
and
pop
dec
icebp
xor
sub
sub
mov
mov
adc
fldcw
pop
or
sbb
addb
sti
sub
mov
and
xor
sub
cmp
mov
adc
testl
lcall
arpl
pop
cmp
mov
mov
lds
or
push
inc
sub
adc
sti
lcall
idivl
fs
mov
xlat
enter
cmp
sbb
adc
dec
movsb
pop
push
xor
mov
inc
add
stos
push
xor
inc
and
push
loop
out
mov
mov
adc
xor
jo
xchg
jnp
adcl
jno
in
mov
jnp
and
repnz
xchg
jge
xchg
lods
int3
jae
jnp
or
rcrl
test
mov
pop
loop
pop
mov
mov
inc
out
rolb
lods
rcl
sub
mov
adc
scas
lcall
fdivrs
pop
ja
aaa
inc
test
adc
push
jo
add
test
push
aas
lock
xchg
jp
sub
mov
clc
int
inc
into
sub
xor
ljmp
stos
xchg
pop
ficoml
decl
pop
cmp
or
mov
xchg
push
cmp
shrb
andb
jno
push
xchg
pusha
push
dec
add
mov
inc
dec
mov
daa
cmpl
das
lods
inc
mov
jge
mov
mov
imul
mov
lods
mov
cmc
aaa
jo
dec
pop
ja
or
adcb
cmp
jmp
mov
aas
cli
mov
push
mov
enter
hlt
pop
and
inc
or
inc
dec
fistpl
repz
push
xor
inc
xchg
adc
add
mov
push
imul
sub
push
xchg
in
movsl
dec
mov
cs
loopne,pn
test
std
int
into
popf
sbb
pop
cmp
addr16
jnp
sbbb
lcall
leave
data16
mov
mov
pop
push
mov
nop
inc
mov
adc
sbb
xchg
jns
cltd
hlt
aad
mov
sub
out
pop
jle
repz
adc
dec
xchg
cs
fcompl
cmp
mov
inc
xor
sbb
add
cmp
adcl
or
sub
divb
cmp
pop
out
outsl
push
cmp
ret
std
push
stc
daa
fcomps
mov
repz
in
test
mov
loop
into
or
lret
cmpsb
call
cmp
bound
adc
cwtl
int3
fistpll
shl
loopne
ret
test
pop
add
mov
or
pop
sahf
lahf
and
mov
in
shlb
jmp
fdivrs
std
flds
inc
out
ret
jnp
test
insl
jns,pn
jae
jne
and
or
inc
jge
add
movsb
jbe
inc
sub
je
ffreep
mov
leave
mov
push
adc
or
in
stc
rorl
stc
xchg
inc
out
pop
fimull
dec
ret
mov
pushf
es
or
mov
mov
mov
inc
add
sbb
out
push
in
daa
adc
sbb
fistl
and
hlt
cmp
adc
lds
cmp
in
push
jne
inc
add
js
std
bound
dec
push
xchg
sahf
push
insl
gs
inc
and
inc
xchg
jno
push
sbb
fucomp
sub
outsl
dec
dec
mov
loopne
xor
nop
fnstenv
mov
xorl
mov
shll
pop
pop
loop
divb
jecxz
fdivl
add
sbb
clc
mov
in
sub
addr16
cmp
hlt
call
xor
jecxz
pop
or
push
mov
flds
mov
inc
out
xchg
aas
dec
lods
popf
sub
psrad
jp
repnz
cwtl
outsb
ljmp
lods
clc
or
lahf
inc
stos
bound
inc
pushf
dec
insb
mov
loope
stos
xor
pop
xor
outsb
push
lock
push
sti
mov
jne
les
dec
xchg
or
jl
dec
ja
mov
mov
jge
xor
lahf
jne
inc
enter
fcomi
mov
cmp
inc
and
or
loop
gs
mov
jmp
and
out
push
push
pop
push
adc
stc
mov
mov
inc
sar
aas
xchg
cld
out
sbb
add
sbb
adc
xor
mov
mov
je
sbb
add
test
lret
jbe
pop
xor
loop
repz
lret
daa
nop
pushf
jl
cwtl
data16
push
enter
jmp
push
sahf
int
push
jb
mov
mov
stos
fcomps
xchg
ss
sbb
jbe
pop
into
adc
dec
scas
pop
cs
xchg
and
xor
mov
push
xor
sbb
fidivrl
add
dec
mov
aaa
movsb
and
push
in
js
xor
filds
repnz
push
scas
pop
int3
jp
xor
add
pop
ss
pop
inc
push
cld
test
add
mov
push
lret
repnz
jo
and
test
sahf
cwtl
and
das
and
xchg
cmovae
sub
mov
xchg
add
int3
sbb
aam
sub
dec
mov
cmp
xor
push
pop
xor
mov
inc
outsb
repz
sti
enter
popa
or
fidivrl
call
lahf
cld
mov
pop
jne
negl
insb
adc
ja
outsb
iret
sbb
int
ret
xchg
mov
jecxz
and
lret
mov
fs
mov
lds
xchg
jb
cli
pop
mov
mov
ret
mov
push
test
adc
mov
adc
negb
loop
pop
int3
rclb
push
insl
loop
popa
add
push
sbb
pop
xchg
stc
cld
dec
push
lahf
adc
fists
push
push
cmp
cwtl
add
test
push
sbb
test
push
mov
mov
sub
je
sbb
stc
xchg
jl
notb
xorl
das
fwait
add
pop
or
lods
jecxz
or
mov
pop
and
mov
or
lock
add
and
and
add
sbb
adc
es
fisttpll
mov
call
mov
nop
sbb
repz
fcmovnbe
dec
aam
into
jne
xchg
sarl
sub
movsl
or
dec
iret
mov
push
mov
mov
data16
dec
push
dec
xchg
lds
in
loope
push
es
xor
subl
xor
push
neg
mov
push
mov
pop
shll
dec
and
inc
and
or
sub
in
add
dec
test
test
fidivs
pushf
cmp
fdivs
dec
inc
pop
mov
push
xor
push
jno
fnstenv
sarb
xchg
daa
scas
aam
ret
push
loopne
sti
clc
in
addr16
test
mov
loopne
push
shlb
xchg
mov
mov
cs
cltd
mov
sbb
mov
xchg
mov
adc
mov
sbb
pop
mov
cmp
sub
mov
jecxz
stos
mov
scas
add
fistpll
pop
cltd
jae
repnz
fsubrs
pop
jge
push
ja
imul
cld
hlt
pop
out
outsb
test
sub
xchg
xor
fsubrp
aas
js
xor
call
sbb
aaa
cmp
hlt
and
lods
in
xchg
xlat
inc
cmp
leave
gs
mov
es
lock
in
xor
xchg
iret
mov
mov
fcoms
adc
enter
mov
jbe
push
dec
cmc
loopne
popa
nop
bound
test
ljmp
insl
fwait
push
roll
lea
adc
addr16
xchg
cmc
mov
outsl
sub
xlat
outsb
jb
pop
dec
icebp
outsl
ret
mov
loopne
cmp
outsl
out
dec
sub
dec
sti
stos
mov
sbb
lock
aaa
lret
stc
cli
aaa
loop
mov
cld
dec
pop
push
je
dec
and
in
aas
dec
xchg
aam
jb
mov
test
fnstsw
gs
into
sarl
add
icebp
cmp
mov
xchg
out
mov
add
sarb
int3
jp
or
inc
fcomps
pop
iret
xlat
pop
mov
outsl
mov
aam
jbe
test
pop
fdivrl
pop
add
push
fidivrl
pop
sub
fmuls
sub
out
jmp
rep
jbe
push
mov
jne
ljmp
test
fildll
andb
rol
rolb
mov
or
call
or
addr16
xlat
xor
lods
and
lahf
xchg
add
adc
cmp
hlt
outsb
or
add
add
sbb
jge
mov
push
jno
stc
sbb
cmpsb
test
inc
jg
test
test
out
inc
loop
adc
clc
shl
iret
ja
dec
push
fsubs
sbb
out
orl
xchg
xor
cmp
dec
push
jg
lcall
aaa
dec
pop
ffree
mov
lret
mov
repz
popa
xchg
dec
jo
in
movsb
insb
xor
mov
xchg
lock
call
mov
mov
and
lods
icebp
idivl
std
or
xor
push
xor
into
iret
imul
test
test
sub
lret
mov
fistps
push
pop
lret
out
mov
xor
or
xor
std
jbe
pop
xchg
push
add
sub
movsl
xor
cmp
xchg
mov
jne
nop
lahf
jl
dec
scas
push
xchg
mov
loopne
rcrl
pop
in
jp
jmp
imul
lock
sub
lods
sub
dec
push
adc
fwait
pop
mov
aad
subb
fmulp
sub
jecxz
inc
insl
rclb
mov
push
gs
dec
add
or
insb
into
mov
jecxz
lcall
frstor
and
nop
das
cmpsb
insb
jl
push
push
in
insb
add
fs
sti
push
repz
js
nop
xchg
jmp
and
pop
cmp
scas
sbb
push
cltd
and
and
rorl
xchg
insl
inc
mov
push
das
pop
push
mov
insl
mov
xchg
enter
inc
add
push
std
dec
cmp
or
out
add
xor
cmpsb
aaa
fwait
pop
loope
and
jns
cld
jge
add
outsl
aad
mov
stc
incb
jbe
jns
stos
stc
adc
aad
out
pop
jbe
mov
movsl
jno
xchg
mov
mov
and
push
mov
mov
lahf
cmp
frstor
movsb
pop
dec
mov
addr16
in
dec
jl
out
lock
mov
rcrl
int3
jno
adc
add
mov
ljmp
cld
xlat
popa
adc
inc
adc
ret
movsl
add
sbb
sbb
jae
lcall
cltd
fwait
push
sahf
lds
js
inc
mov
psubd
lds
add
cmp
jno
mov
mov
adc
subb
add
xor
rorl
aam
fs
aas
mov
dec
mov
mov
loopne
sub
jecxz
insl
xchg
ret
or
pop
pop
xchg
repz
fbld
movb
xchg
fstpt
push
sbbl
dec
bound
adc
and
stos
mov
sub
push
aad
xlat
fiadds
aas
inc
add
mov
dec
mov
mov
loopne
shlb
jae
cmp
enter
inc
and
stos
in
repz
pop
enter
add
inc
repnz
hlt
testb
pop
nop
cmp
sahf
sub
js
aam
idivb
cmp
mov
neg
mov
sub
and
mov
sti
test
mov
dec
xor
mov
adc
jbe
andb
xor
sbb
or
gs
xchg
les
push
incl
sub
cmp
loop
aas
movsb
fisubrl
shl
sbb
mov
sub
fsubs
rorl
fnstenv
loope
xor
lea
lds
or
nop
mov
testb
lock
cmp
stc
xor
mov
or
test
stos
fwait
jp
imul
mov
jns
sbb
or
sbb
mov
pop
divl
push
scas
test
push
inc
adc
mov
ret
push
fidivrs
or
mov
fildll
clc
out
frstor
lods
into
movsl
fs
xlat
pop
fidivrl
rclb
pusha
out
insl
jb
punpcklbw
jo
dec
or
or
mov
leave
mov
inc
sbb
out
lret
out
sbbl
jo
and
xchg
dec
xchg
lcall
inc
lea
dec
idivl
nop
xchg
gs
fidivs
inc
ret
movsb
test
mov
lods
and
push
mov
call
mov
sti
pushf
adc
mov
fnstsw
mov
xchg
aam
mov
xor
popf
mov
dec
repnz
je
mov
push
push
repz
cmpl
mov
fmuls
dec
jge
cltd
scas
fildl
push
sub
pop
pushf
stos
sub
pop
sbb
push
jp
inc
push
notl
pushf
bound
mov
jg
insb
cmc
dec
add
out
dec
imull
mov
lcall
ja
popa
std
lret
xor
or
or
sbb
xor
push
out
jae
fstpl
push
jno
bound
mov
daa
in
fs
mov
vfmsub231sd
icebp
xchg
fmull
mov
push
xchg
aaa
xlat
adcb
jbe
les
xchg
xchg
or
mov
push
dec
xchg
scas
xchg
inc
mov
jns
cmp
jg
push
xor
mov
pusha
outsl
std
dec
inc
paddw
xchg
in
mov
jae
stos
cmp
sub
inc
mov
xchg
adc
std
and
xor
sbb
jge
inc
push
fucomip
aas
fstps
popf
pusha
jns,pn
fcomp
repnz
push
mov
imul
dec
mov
sahf
fcoml
cli
movsl
loopne
push
popa
lds
fwait
je
fcom
mov
fcmovnu
push
mov
inc
sbb
jg
sub
call
xor
adc
aad
stc
mov
test
test
movsw
xchg
add
popa
ljmp
into
int
daa
mov
push
in
mov
stc
mov
aaa
lret
loope
xor
ficomps
ljmp
adc
clc
bound
and
pusha
fdiv
jl
mov
mov
cwtl
add
sbb
cltd
mov
popa
cmpsl
mov
mov
int3
sub
jne
adc
cmpsb
mov
shl
nop
adc
and
inc
ret
lret
popa
jl
cmp
xchg
mov
mov
adc
mov
lret
push
adc
or
repz
xchg
les
enter
fdivrl
pop
popf
push
lea
mov
cmpsb
rol
adc
xchg
orl
mov
nop
fs
xchg
xlat
jbe
leave
stos
shlb
inc
insl
pop
sub
shlb
mov
pop
lods
stc
or
jo
test
mov
mov
into
cmp
int
jg
in
sub
lods
jmp
sub
mov
test
mov
xor
hlt
aad
dec
leave
jecxz
scas
lods
mov
rcrl
pop
adc
out
push
shr
mov
jbe
daa
scas
jbe
sbb
rol
repnz
or
dec
stos
mov
sub
mull
inc
xchg
pop
int3
or
sub
aas
lahf
jge
js
popf
fs
sub
mov
or
pop
cli
inc
lds
lcall
cmpsl
pushf
xor
je
sti
push
xchg
xor
mov
pushf
mov
xchg
and
sahf
xchg
in
pushf
lret
roll
sbb
fisubl
call
dec
in
sbb
mov
mov
dec
or
cs
jns
push
loope
add
pop
test
movsb
and
jecxz
in
lock
mov
lods
cld
and
dec
jl
pop
adc
out
push
and
test
lahf
cmpsb
mov
cld
sbb
andb
xchg
add
fisubl
jbe
gs
and
idivb
mov
lahf
and
insb
in
dec
fstpt
and
out
inc
lret
mov
and
in
sbb
ret
jae
aaa
jbe
add
negb
cmp
mov
mov
push
je
loop
leave
inc
xorb
cmp
les
ret
jmp
cmp
dec
int
dec
and
fwait
mov
fldcw
popf
aaa
jle
push
jo
in
sub
lods
stc
inc
bound
push
cmp
out
addr16
pop
jp
loop
jge
add
aas
xchg
aaa
inc
in
data16
repnz
cmp
jge
xor
rcr
mov
fldenv
or
inc
mov
cmc
push
lcall
dec
sahf
lret
cltd
test
in
jbe
pop
push
popa
mov
inc
imul
stc
cmpsl
push
adc
div
lds
out
pop
or
lcall
cli
mov
xchg
test
and
xchg
cs
mov
jge
adc
xor
stc
aas
xchg
std
jmp
adc
sahf
pop
lock
clc
pop
insl
movsl
sahf
push
jno
in
rorl
dec
cmp
pop
inc
ljmp
fadds
sbb
jns
sbb
push
push
sub
lds
mov
movmskps
mov
inc
sbb
scas
lods
mov
or
push
sub
mov
insb
push
pop
cmp
shl
sti
ljmp
add
push
imul
inc
xchg
cltd
jno
mov
mov
inc
scas
clc
cmova
cmc
sbb
into
push
cmp
fidivrl
add
in
fs
jb
pop
and
xchg
fwait
push
sbb
insb
hlt
jge
mov
sbb
dec
jge
jmp
scas
lock
sbb
mov
addr16
int3
sti
adc
push
in
pop
mov
fs
insb
std
test
cmc
in
test
repnz
mov
cmp
sub
jmp
cmp
jge
push
test
sbb
out
sub
nop
pop
adc
xor
push
add
cld
mov
sub
mov
or
sub
cmc
sahf
and
ret
push
pop
xchg
insl
pushf
mov
mov
loopne
ja
repz
clc
sbb
daa
arpl
stc
cwtl
lods
fcmovb
pop
xchg
dec
inc
js
lods
aad
pushf
sub
or
or
lods
push
dec
ja
inc
aas
aaa
pop
ja
and
mov
cmpsb
mov
out
inc
sbbb
jb
rcr
dec
and
mov
inc
mov
call
out
js
jb
adc
jae
ret
arpl
pop
xor
mov
inc
xchg
fdiv
sub
add
loop
ficompl
das
inc
mov
ljmp
pop
cmpl
push
in
adc
sbb
fs
int
insb
call
hlt
xchg
cmpsb
push
je
and
xorb
pop
imul
ja
outsb
ljmp
aaa
pusha
in
jo
sbb
cmp
addr16
xchg
aad
rcll
leave
scas
outsb
cld
push
pop
pop
push
sub
sbb
mov
pop
sub
xchg
divl
pop
std
inc
rcrl
in
adc
ret
mov
pop
xchg
int3
sub
addr16
ds
push
clc
sbb
out
mov
mov
aaa
ja
push
ja
ja
jg
mov
adc
outsb
aaa
in
jns
aad
mov
hlt
movsb
jmp
jl
push
jl
aad
lret
lret
add
mov
mov
jl
imulb
push
adc
xor
addr16
scas
ja
das
and
addb
ret
lcall
add
lods
cltd
js
dec
fwait
ljmp
stc
pushf
test
imul
paddsw
and
popa
test
inc
mov
mov
jp
daa
out
arpl
ret
lea
dec
loop
pop
cltd
mov
pushf
sti
jmp
sub
xchg
xor
mov
in
jmp
jecxz
out
stos
test
and
pop
dec
jnp
ja
mov
sbb
or
cmpb
mov
pusha
loopne
jo
loopne
mov
aas
out
sbbb
mov
sbb
mov
mov
das
gs
adc
push
bound
clc
stos
fldl2t
fbstp
xchg
lds
mov
cltd
cltd
lret
aaa
out
cwtl
inc
inc
add
mov
xor
xchg
push
lcall
ja
ss
shr
or
adc
jmp
sti
xchg
adc
scas
imul
mov
mov
lods
stos
xor
dec
int
inc
jns
sub
repz
fsub
adc
mov
jnp
insb
mov
pushaw
push
jns
mov
mov
out
sub
mov
mov
in
mov
movsbl
test
jmp
push
dec
test
sub
cmp
test
insb
inc
jge
mov
xchg
insb
icebp
lret
dec
sbb
cmp
dec
mov
test
push
cli
ffreep
pusha
and
lret
mov
push
mov
stos
adc
repz
cmp
push
aas
andl
sub
fnsave
xlat
mov
imul
ret
addr16
push
ds
out
inc
enter
xor
rcll
xchg
dec
xor
mov
repnz
cmp
sub
xlat
mov
and
cli
jmp
adc
das
es
sbb
test
cs
lcall
lret
in
inc
pop
cltd
out
in
sarb
xchg
gs
call
xchg
js
mov
inc
jmp
mov
imul
mov
test
shlb
je
stc
lahf
push
sub
shr
fstpt
cmp
sub
push
push
mov
mov
cmp
cld
fmuls
push
stos
test
sub
add
xor
add
popa
mov
mov
push
mov
mov
xchg
push
mov
cwtl
cmp
jmp
in
jno
add
fistps
dec
int3
out
daa
repz
mov
mov
imul
je
in
popa
cmpl
add
ljmp
push
dec
lret
push
mov
sub
aaa
and
push
push
fs
mov
cmp
cmp
aaa
in
xor
pusha
int
cli
lahf
hlt
xor
jmp
jae
mov
push
or
cltd
ret
and
xor
or
pop
lock
sbb
or
cmc
push
je
sub
mov
ret
in
dec
jp
add
sub
push
adc
mov
jmp
lods
cvtps2pd
mov
fmuls
in
popa
or
ss
and
xchg
mov
jge
cld
add
lea
sbb
and
adc
sbb
mov
or
mov
sbb
or
es
pop
mov
inc
sbb
mov
fiaddl
mov
je
int3
mov
dec
inc
in
in
gs
sub
gs
inc
or
mov
es
push
jnp
mov
xor
or
mov
adc
adc
dec
sub
cltd
bound
out
add
movsb
popa
mov
xor
mov
jns
push
loope
pop
sub
fs
inc
sub
data16
inc
lods
lcall
in
dec
sbb
jp
gs
shll
mov
xchg
xlat
data16
mov
sub
jno
rclb
pop
out
dec
mov
movsl
xchg
lret
add
ljmp
scas
ret
mov
popf
enter
jge
cmp
test
inc
lcall
lahf
push
insl
outsb
gs
sbb
or
rclb
in
jecxz
lret
mov
rcll
add
rclb
sub
add
jns
push
data16
fdivs
sbb
xchg
hlt
iret
cmp
js
xorps
sub
imul
jg
pop
ret
push
adc
lods
jl
pushf
fwait
ss
push
lahf
sbb
fs
sti
lcall
dec
and
cltd
mov
jo
pusha
xchg
push
fsubrl
shr
inc
push
adc
inc
inc
or
xchg
mov
shll
mov
sub
dec
dec
insb
fsts
shlb
stc
mov
mov
add
xchg
jle
jae
stos
push
pop
sub
cwtl
mov
leave
cmpsb
cmp
sbb
sbb
ds
jmp
pop
push
mov
xchg
out
nop
stos
sbb
inc
sub
aad
insl
aad
or
rcl
jg
ret
cvtps2pi
xchg
stos
imul
xor
bound
xchg
xor
lods
cli
mov
jb
cmp
push
mov
mov
xor
cmpsl
mov
int3
je
xor
jae
cli
aad
frstor
push
adc
imul
pop
rcr
mov
or
ret
and
sub
je
sbb
sub
mov
add
sub
xchg
push
enter
loopne
out
xchg
sub
mov
sbb
aas
inc
rclb
js
cmpb
sub
in
add
lock
inc
jne
sti
lea
cld
stos
jl
mov
mov
fistpl
cltd
xor
jbe
sub
lds
mov
or
mov
add
fsub
mov
stos
xchg
int3
mov
fstpl
stc
adc
mulb
cwtl
cmp
adc
es
scas
xchg
cltd
fsubrs
add
lea
jno
push
add
pop
push
sub
or
jle
cld
adc
loop
dec
jnp
fcoms
movl
and
pop
jb
jge
stos
mov
and
test
addb
inc
pop
loopne
call
incl
xchg
pop
jle
cli
les
cmpsl
sub
sbb
lcall
mov
fdivp
ljmp
xchg
daa
fs
jne
loop
jb
xchg
fadds
sbb
push
jecxz
subb
dec
push
mov
insl
aas
sub
test
test
lock
sbb
scas
xor
mov
lret
movsl
push
and
out
in
flds
mov
insb
sbb
cmp
mov
jl
sub
or
add
mov
add
out
adc
pushf
pop
fcoml
je
add
jbe
jl
lods
mov
stos
dec
inc
pop
sbb
mov
ret
mov
mov
iret
fld
sub
jnp
xor
sub
inc
popa
repnz
mov
loop
sarb
ja
test
jecxz
addl
andl
ja
mov
mov
xor
push
mov
lock
push
cmp
out
and
xchg
mov
std
cltd
sarb
pop
mov
ds
push
movsb
lock
icebp
pop
sarb
mov
pop
sub
ja
in
shrb
sbb
jo
and
jge
adc
jb
mov
pop
std
lock
test
xchg
shll
jecxz
rolb
negb
or
cltd
cltd
in
add
aas
xchg
in
bound
je
ret
mov
mov
int3
and
mov
pop
adc
adc
stc
jno
hlt
dec
in
rorl
mov
xchg
mov
mov
imul
push
mov
iret
enter
mov
xor
xlat
add
xchg
sbb
and
mov
xchg
and
add
push
push
js
fisubrl
sub
jmp
mov
fstp
sbb
aas
add
aas
ret
stos
subb
jnp
loopne
push
out
xchg
movsb
sbb
rolb
jecxz
add
xor
sbb
dec
js
mov
mov
sbb
sub
jmp
ja
pop
les
jb
dec
clc
pop
sti
pop
adc
pusha
and
fcomps
xor
jb
cmpl
jns
mov
push
and
dec
sbb
add
sbb
stc
scas
adc
and
in
nop
in
mov
mov
add
orl
pop
xor
jb
loope
aad
insb
lds
dec
out
add
push
fimuls
mov
xor
pop
out
arpl
mov
mov
into
std
jb
cli
xchg
sub
pop
adcb
dec
gs
out
data16
add
movsl
aaa
icebp
lret
dec
jge
fcomps
lock
push
sbb
fwait
cwtl
sub
fsts
pop
xor
fwait
mov
jno
pop
mov
add
imul
push
mov
push
stc
add
in
insl
sbb
cs
les
cmp
add
or
sub
idiv
mov
sub
mov
movsl
pop
int
call
and
lcall
adc
filds
mov
pop
push
cmp
sub
adc
push
xchg
call
xchg
xchg
in
dec
jne
jmp
ja
in
adc
pop
mov
push
and
push
jmp
sbb
mov
sti
fimuls
es
inc
sub
mov
add
sbb
mov
imul
clc
mov
adc
cmp
mov
aad
dec
fmulp
add
lahf
cli
xchg
jmp
and
scas
mov
lds
add
push
adc
sub
push
push
push
push
sub
int
mov
sbbb
mov
jle
out
push
or
ret
mov
adc
das
sub
cld
test
dec
push
aaa
xchg
fldcw
or
jno
push
ds
mov
pushf
lods
and
call
xchg
sub
xchg
dec
xor
mov
shll
gs
lds
add
mov
dec
mov
mov
daa
es
cmp
xorb
add
scas
loope
xchg
int3
in
pop
les
xchg
pushf
test
dec
cmp
aam
stc
dec
repnz
stc
push
mov
popa
cmp
movsl
jo
or
mov
out
mov
add
jge
lret
cmp
movsb
movsb
push
cwtl
iret
sbbl
movsb
bound
push
insb
and
leave
push
cmp
xor
mov
add
stos
pop
mov
enter
call
rolb
shl
mov
repnz
jle
out
mov
adc
ret
ja
int
xchg
rorl
mov
int3
fdivl
pop
push
xlat
xchg
sahf
mov
add
xor
arpl
lcall
test
xchg
jl
adc
cmp
shr
xchg
jns
xlat
call
dec
push
xchg
adc
mov
jb
scas
xchg
pop
filds
popa
cmpb
outsl
adc
clc
or
cmc
mov
lods
in
adc
jne
icebp
add
call
mov
mov
in
pushf
in
jp
xchg
jl
int
and
fisttpl
jb
imul
fcompl
adcl
rcr
and
adc
add
leave
loopne
cmp
pusha
stos
mov
popf
pop
xchg
ds
imul
xor
roll
lods
pop
pop
push
jecxz
xchg
and
xchg
popa
scas
mov
inc
xor
add
adc
mov
sti
pop
cmp
and
jbe
loop
negb
adc
stos
loope
cld
hlt
adc
dec
insl
out
shll
call
in
xchg
insl
addl
sbb
push
in
push
and
or
popa
cltd
xchg
mov
push
jno
cmp
loop
add
inc
cmp
mov
sub
fbstp
add
rorl
mov
xor
scas
clflush
jp
inc
bound
pop
fldt
cmpsl
or
inc
in
test
mov
sarb
pop
lods
or
pop
lock
testb
stos
je
sahf
insl
pop
repz
lcall
and
rcrb
bnd
in
xchg
and
fldl
in
adc
and
shrb
and
and
ljmp
push
lcall
adc
mov
dec
out
mov
std
adc
std
mov
xchg
inc
push
fsubl
cmp
push
jb
loopne
mov
call
sub
cmc
mov
jl
mov
insl
push
imul
test
push
test
xchg
or
fwait
and
sub
add
bound
sbb
add
sub
leave
cmpsl
imul
imul
imul
nop
cmpsb
ret
fistps
ret
shlb
mov
push
jl
sub
sub
adc
or
mov
mov
mov
rorl
out
rdtsc
cmp
pop
push
push
iret
mov
aad
xor
arpl
mov
dec
sbb
pop
ret
dec
lret
clc
movsl
add
sbb
movsl
and
std
mov
imul
scas
mov
cld
cmpsl
aas
cmpb
inc
mov
mov
or
sti
jg
repz
dec
mov
fs
push
cmp
loope
sahf
mov
inc
aaa
pop
jnp
sub
pop
jae
icebp
cwtl
out
add
in
iret
jnp
cmp
mov
ss
mov
rorl
cli
sbb
not
cmp
jnp
es
push
outsb
fwait
mov
fs
add
sub
pop
sub
cmp
mov
call
shr
and
ret
fsubs
subb
dec
pop
fcoms
loopne
popa
stos
pop
dec
ds
sbb
add
loope
or
xchg
push
clc
add
add
jl
xchg
and
mov
adc
jg
pushf
mov
mov
sub
add
mov
adc
dec
pushf
sub
mov
sbb
or
mov
add
cmp
add
imul
xor
in
mov
and
xor
adc
xlat
jne
cld
pop
cmp
test
out
decb
and
mov
adc
fbstp
jle
xchg
fldenv
and
movsl
push
daa
mov
repnz
mov
incl
mov
loope
cmp
xchg
imul
pop
fdivrs
lds
jle
out
shrb
imull
push
sub
out
ss
data16
lahf
daa
je
mov
push
lret
data16
aas
pop
in
enter
rolb
xlat
and
pop
in
push
xchg
pushf
push
cmp
cmp
aas
mov
daa
cmpsb
adc
add
iret
mov
stc
outsl
xchg
test
sub
repnz
adc
xchg
loope
or
xor
lods
cmp
iret
cmpsl
notb
pusha
or
int
mov
or
rcl
ret
das
mov
sbb
fmuls
jp
inc
push
xor
cld
dec
in
fldl
jecxz
mov
ja
mov
hlt
lock
call
sub
loopne
jno
mov
lods
pushw
push
jle
jae
mov
jae
aad
push
xchg
test
loopne
rcrl
aas
ret
stc
out
inc
sub
inc
dec
mov
inc
and
jne
add
out
fildll
add
mov
mov
xor
mov
aas
out
dec
mov
xchg
clc
std
adc
lahf
mov
leave
pop
add
push
lret
jmp
daa
lods
or
and
pop
inc
jmp
pop
pushf
jbe
jg
adc
xchg
inc
mov
jo
fwait
push
dec
mov
push
mov
sarb
jo
sti
test
inc
jl
jo
or
dec
inc
ret
mov
sub
or
cli
push
loop
push
fadd
mov
ret
movsl
loopne
aas
outsb
test
lret
aaa
aam
lods
insb
mov
bound
pop
push
mov
sub
mov
push
rcr
jecxz
lea
sahf
std
inc
jbe
inc
dec
jg
popl
xor
lock
mov
xchg
sbb
call
xorl
inc
push
test
pushf
adc
push
cmp
shll
pop
dec
or
sbbl
mov
scas
je
mov
push
inc
add
inc
mov
jecxz
aad
sti
popa
add
inc
out
ds
add
cmpsl
and
xchg
adc
xchg
rep
jg
xchg
mov
sti
mov
cmp
push
mov
xchg
leave
outsb
mov
inc
inc
inc
cmpsl
xchg
lret
inc
sbb
push
div
mov
jmp
ljmp
inc
arpl
add
popa
fsubr
pop
adc
lcall
stos
xchg
push
ljmp
adc
aad
xor
jl
sub
pusha
jbe
jmp
xlat
mov
repnz
cmp
and
fwait
cmp
pop
mov
hlt
imul
push
lahf
aam
lret
pushl
das
pop
lahf
pop
jo
out
stos
and
mov
lret
sbb
add
inc
xchg
js
out
mov
push
push
aas
xor
pop
add
btr
xor
jl
xor
outsb
or
pop
mov
bound
add
imul
or
sub
mov
ret
insl
lea
in
xchg
scas
cmp
xchg
dec
loope
dec
mov
cmp
outsl
jl
jmp
add
fs
rcrb
mov
xchg
push
adc
mov
stos
imul
adc
rcr
out
in
ss
mov
push
cmp
pop
jle
arpl
jge
dec
mov
jno
dec
movsb
push
cli
pop
push
push
outsl
mov
lods
insb
test
sarl
and
and
arpl
or
ss
addl
and
out
jecxz
scas
std
fsubrl
test
fs
mov
adc
pop
mov
mov
fs
push
mov
fwait
sbb
pop
sti
scas
out
enter
and
lea
loop
jns
push
or
test
or
test
mov
stc
das
jl
cmp
cmp
xchg
int3
jge
in
jle
enter
pop
cli
jp
or
pusha
movsl
jge
decl
repz
push
ds
das
lahf
pop
or
jle
es
cmp
andl
loope
mov
mov
add
cmp
cmc
testl
nop
fisubrs
stc
dec
mov
push
mov
xor
and
sub
jae
stos
subl
add
sub
scas
nop
testb
mov
xchg
icebp
add
sbb
sub
push
add
fiadds
mov
pop
or
fnstsw
bound
jle
and
pop
jecxz
cmpsb
mov
ljmp
mov
cmp
mov
jle
mov
inc
ss
push
cmp
bound
inc
ret
sub
mov
pop
aam
cld
orb
std
jno
lret
mov
sub
push
pushf
pop
pop
das
shrl
jo
iret
push
jae
popl
jp
rorl
sub
jle
stos
mov
jb
rol
stc
cwtl
nop
adc
adc
and
push
mov
jge
in
push
inc
push
out
cmp
data16
push
out
arpl
cld
push
cli
mov
mov
sbb
dec
loop
jb
xchg
sub
cmp
add
movsl
pushf
repnz
lcall
mov
xorb
xchg
fcomps
iret
mov
cmp
movl
cmp
leave
xchg
fsts
or
push
ret
dec
das
jo
push
push
pop
dec
addr16
dec
insl
rclb
cs
jns
push
arpl
orb
mov
ss
mov
ror
insl
fnstcw
test
out
add
dec
jge
out
jae
cmp
mov
out
jl
pop
mov
stos
xchg
repnz
add
jbe
gs
sub
movzwl
icebp
sub
es
inc
movsl
pop
lret
test
dec
popf
push
sti
and
fistps
pop
xor
test
mull
out
inc
ss
insl
push
adc
or
or
push
out
iret
faddl
mov
sub
dec
mov
daa
push
loopne
aaa
test
push
fstps
aaa
in
pop
or
push
insl
imul
jle
mov
inc
add
iret
cmp
inc
dec
das
aaa
or
add
loopne
and
and
xchg
adc
mov
call
xchg
mov
pop
jbe
mov
js
push
pop
lahf
push
fwait
movsb
lods
xchg
sti
daa
fimuls
test
and
pop
dec
adc
inc
sub
orb
popa
xor
ds
shlb
in
jnp
and
aam
xor
gs
sbb
ljmp
in
dec
fisubrs
adc
fbstp
bound
xchg
sub
lahf
jl
insb
ljmp
orb
mov
or
inc
add
inc
scas
rol
nop
ret
call
push
adc
ret
pop
cmp
sbb
cmc
mov
addr16
pop
fcoml
gs
enter
sub
test
adc
les
pop
or
xor
std
or
mov
jle
add
stc
push
mov
add
or
scas
or
imul
dec
add
mov
and
add
sub
add
jg
pop
or
sub
shll
add
sbb
stos
xorb
xchg
test
mov
leave
dec
lods
xlat
push
hlt
popfw
inc
btc
pop
cmp
dec
xchg
push
push
arpl
movsl
xchg
clc
mov
mov
inc
xor
sbb
xchg
xor
adc
sbb
dec
in
outsb
adcl
cmp
lds
add
jno
jmp
nop
nop
call
dec
jge
pop
xor
pop
leave
scas
jle
lods
push
xchg
and
jl
mov
out
aam
pop
push
ja
inc
and
mov
or
sbb
scas
inc
add
aad
call
mov
push
addr16
ret
xchg
mov
adc
fists
das
add
xor
cmpsl
push
enter
ss
pop
jle
or
sub
loopne
dec
sub
icebp
fdivrl
xchg
xchg
add
dec
scas
aad
mov
in
or
ret
mov
jae
dec
sbb
jle
in
mov
leave
mov
pop
mov
inc
mov
in
jo
in
rcl
frstor
push
test
xor
inc
mov
pop
mov
xor
or
xlat
push
popa
aaa
or
outsb
ret
psubq
fldl
jno
add
data16
sar
inc
insl
or
inc
fs
loope
ret
fs
xchg
fs
scas
pop
cmp
and
mov
jl
fistpl
rorb
sbb
and
insl
pop
ljmp
dec
mov
adc
hlt
mov
addr16
xchg
call
adc
xchg
push
cmp
rcrl
dec
rcr
cmp
fisttpll
pop
das
jg
adc
inc
inc
sub
adc
jns
roll
lea
xchg
jle
leave
adc
push
xchg
test
arpl
test
pop
add
push
mov
in
sub
lea
popa
cld
xor
pop
pop
and
cmp
sbb
lret
cwtl
and
push
push
pop
loopne
hlt
and
ret
inc
xchg
mov
jns
jb
and
rorl
push
xchg
adc
pop
sar
adc
test
pusha
lcall
fcmove
sbb
lret
jae
mov
push
push
sub
dec
insl
xchg
cmp
xchg
scas
mov
lcall
sub
dec
pop
xor
pop
or
outsb
jne
fdivs
pop
sarb
insl
xchg
int
xchg
ret
or
jle
pusha
scas
add
popf
test
cmp
inc
adc
mov
hlt
out
movsb
mov
popf
fwait
dec
inc
xor
cmp
inc
push
or
push
mov
xchg
dec
inc
cs
fnsave
arpl
out
test
aas
shl
jno
fildll
loop
ljmp
rcrl
cmp
cwtl
mov
jb
push
out
cmpsb
test
sbb
fnstcw
jbe
pop
pop
mov
push
lods
shrl
icebp
ficoml
loope
stc
and
pop
inc
mov
push
xchg
jne
out
sbb
cmc
push
fisubrs
dec
pop
xor
or
cmc
dec
push
push
adc
or
xor
cmp
pop
mov
dec
xchg
mov
adc
sub
sub
xchg
ja
icebp
in
push
or
mov
roll
cmpb
jb
mov
dec
sbb
movsl
sarb
in
sbb
or
ljmp
in
xchg
xor
inc
mov
in
adc
xchg
icebp
xor
sbbb
aaa
lods
fiadds
dec
xor
pop
lock
sbb
mov
fiadds
mov
fsts
out
xor
and
jp
push
clc
ret
testl
push
popf
adcl
ffreep
test
mov
mov
lock
popa
xor
cs
or
test
hlt
js
xchg
popf
inc
js
xchg
mov
jmp
inc
addl
bound
pop
repnz
jg
cmp
repnz
sbb
lock
in
mov
cwtl
out
out
fmull
mov
add
clc
jl
pop
imul
sub
fldcw
test
inc
mov
jp
sbb
push
insl
divl
sub
outsl
popf
enter
bound
and
das
leave
and
add
inc
cmpsb
loope
cli
pop
add
jmp
push
ficompl
jo
sub
push
inc
push
lods
sbb
jle
fwait
in
adc
add
das
lret
cmpsb
pushw
mov
fs
mov
ljmp
out
sbb
cltd
sarb
mov
loopne
push
sub
and
and
es
jp
mov
mov
mov
jecxz
pop
cmp
pop
mov
mov
stos
pusha
sbb
pop
rcl
scas
adc
push
push
xchg
mov
inc
pop
xchg
test
xchg
sbb
fstl
rcll
shlb
inc
fisttpll
mov
outsl
dec
popa
imul
lret
pop
shr
sub
jecxz
pop
loop
notl
std
adc
cltd
mov
pop
cmpsl
shrl
adc
xchg
in
add
outsl
sarl
push
aad
pop
sar
adc
in
inc
xor
sbb
cmp
pop
xor
faddl
rclb
cmp
pop
lods
fdivl
mov
and
jbe
rcrl
int
lds
loopne
ror
mov
mov
aas
xchg
repnz
aas
aad
aad
clc
lcall
xchg
inc
and
inc
sub
jecxz
xchg
pop
call
inc
sub
inc
and
cmpsb
filds
pop
jbe
mov
dec
inc
pop
out
xlat
movsb
hlt
enter
or
daa
fadds
xchg
pop
fs
jle
jnp
sbb
popf
push
imul
mov
cmp
xchg
das
fistpl
sbb
inc
ljmp
push
mov
pop
sbb
aad
daa
std
push
sbb
fdiv
dec
cmp
push
rorl
push
push
aaa
sbb
aas
arpl
mov
add
cmc
fs
inc
dec
jl
ret
mov
lahf
inc
lods
aaa
sbb
add
mov
mov
imul
lds
ljmp
inc
add
pop
int3
dec
push
sbb
adc
xor
push
mov
icebp
push
inc
imull
xor
insl
call
pop
inc
aad
loopne
add
xchg
sbb
mov
into
mov
addl
add
outsl
rorb
pusha
xchg
jle
int
stos
adc
or
int
scas
pushf
push
aad
stos
sbb
mov
testl
dec
int3
dec
loopne
xchg
inc
aas
or
mov
inc
aam
push
roll
out
out
add
stos
lidtl
ljmp
pop
aam
fwait
mov
jae
fst
adc
pop
jg
cld
sarb
add
pop
xor
push
sub
add
ret
out
stos
xor
aam
and
xor
mov
dec
jecxz
pop
inc
xchg
subb
mov
not
negl
dec
push
aam
out
adc
leave
clc
or
stos
repz
mov
lock
and
outsl
pop
data16
pop
dec
loopne
rcrl
inc
mov
push
stc
mov
daa
cli
movb
xchg
inc
test
sarl
lods
out
jns
stos
sub
xchg
xchg
cltd
imul
and
mov
xor
es
gs
pusha
fcmovb
push
or
sbb
add
insl
sbb
lds
popa
jl
mov
out
push
sub
jae
cmpsl
mov
aaa
rcll
fst
mov
out
outsb
xchg
subb
sub
cmp
sbb
bound
bnd
imul
sub
sub
cltd
rol
mov
loope
aaa
mov
mov
imul
inc
add
ljmp
add
hlt
scas
jne
cmpl
sahf
sbb
and
daa
mov
data16
stos
stos
mov
xor
shll
pop
add
cltd
dec
xor
add
jmp
cmp
pop
sbb
xlat
mov
xor
inc
rol
icebp
mov
stos
ljmp
mov
jmp
and
push
sahf
popa
cmc
mov
test
dec
mov
packssdw
add
call
int3
cwtl
adc
incl
es
ret
or
insl
rorl
jb
icebp
cmpsb
aas
push
into
add
jne
lret
xchg
sub
mov
jo
push
lcall
movsl
in
pop
std
jecxz
add
lods
out
bound
or
dec
jns
and
dec
xchg
and
idiv
call
in
dec
adc
push
or
adc
xor
jne
outsb
mov
daa
lods
mov
call
aas
int
and
out
jne
insb
jp
sbb
js
out
inc
mov
mov
and
push
cltd
lret
ret
cwtl
jb
lret
sbb
lods
jo
pop
adc
cli
daa
lcall
jge
xchg
or
push
and
pop
and
shlb
jmp
incl
aam
jnp
cmp
pop
outsl
jbe
call
and
neg
loopne
dec
call
cmpsl
dec
hlt
mov
cmp
mov
insb
mov
sbb
sahf
push
inc
mov
test
roll
sub
sahf
loope
cmpsb
pop
jbe
js
xchg
notl
mov
nop
sti
xor
addr16
loope
out
scas
cltd
das
pop
mov
xchg
scas
sub
sbb
sub
dec
add
mov
mov
xchg
and
sub
xchg
dec
mov
imul
dec
jo
mov
gs
dec
xchg
leave
mov
sahf
das
xor
adc
faddl
movsb
xchg
imul
and
lds
inc
mov
mov
data16
in
test
xchg
dec
sub
jbe
xchg
push
push
mov
or
mov
movsl
test
xchg
cltd
inc
xor
mov
andl
test
jno
rcll
inc
stos
cmpsb
sbb
outsb
pop
or
and
push
lret
xor
mov
jno
fdivrl
mov
divb
and
loop
xor
adc
repz
mov
aaa
and
imul
inc
std
sahf
and
mov
or
xchg
sbb
mov
pop
sub
dec
test
cmp
loope
loopne
jge
push
and
addr16
push
jp
aam
int
ret
and
inc
inc
in
shlb
inc
repnz
mov
outsl
clc
and
loopne
sbb
in
cmp
pop
cli
lock
or
jp
cs
push
sbb
pop
mov
daa
jbe
mov
pop
sbb
and
push
lods
mov
cmp
sbb
sahf
inc
xchg
shlb
jmp
mov
subps
cmp
das
fadds
nop
fs
out
push
pop
or
mov
xchg
icebp
push
lea
xchg
and
mov
pop
mov
out
in
mov
mov
cmpsb
mov
cmp
mov
icebp
sbb
fs
xchg
out
ret
sbb
fldcw
in
movsl
adc
xchg
popf
xor
fstps
jg
xchg
xchg
pop
fsts
xor
jb
inc
mov
inc
addr16
fisttpl
pop
ds
mov
mov
stc
or
add
push
mov
daa
aas
xchg
lods
xchg
jmp
adc
aad
ds
sub
stos
mov
xor
gs
out
out
jnp
cmp
pop
cwtl
jmp
mov
shlb
sti
pop
arpl
cmp
push
and
push
dec
pop
sub
loop
in
fldt
mov
jg
mov
xchg
mov
sub
in
ret
push
or
aam
fwait
inc
or
out
mov
cli
cmp
inc
je
lcall
mov
test
inc
mov
pop
add
push
movsl
mov
jne
rolb
and
mov
outsb
test
sub
pop
arpl
js
sahf
insl
movsl
pop
jmp
mov
push
adc
jns
loope
rcll
dec
lret
cli
pusha
das
mov
and
ljmp
mov
pop
inc
push
lds
je
outsb
add
jbe
lds
loope
out
pop
stos
mov
popf
movsb
pop
add
pusha
imul
sarl
mov
test
cmpsb
bound
fcoml
mov
or
jge
inc
jp
cmp
xor
andb
or
outsb
mov
es
loopne
jle
loop
add
xchg
pushf
aam
inc
jnp
sbb
and
jl
scas
ss
les
jns
or
shlb
push
jecxz
std
fdivrs
les
pop
das
out
pop
ret
test
xlat
xchg
dec
xchg
mov
lahf
pusha
cmc
dec
iret
dec
popf
adcl
or
mov
fcompl
outsl
inc
sbb
sub
add
adc
call
stc
sti
cmp
lds
iret
ds
pop
in
add
addl
dec
movb
sbb
scas
xor
fucomip
push
and
mov
sbb
cmpsl
push
fcomip
and
fs
inc
lahf
inc
imulb
test
enter
sbb
roll
pop
insl
xchg
cmp
fildll
ljmp
loope
xor
jg
addb
movsl
pusha
shrb
lods
pop
aad
sbbl
pop
xor
repz
push
fcoml
sbb
lods
cmp
scas
aas
jbe
mov
lods
jne
pop
rcrb
sbb
nop
adc
shll
ret
dec
shrb
ljmp
xchg
or
adc
jge
add
cmp
adc
dec
xchg
test
ds
cmp
adc
mov
mov
dec
pusha
fwait
cld
lret
cmpsb
xor
std
mov
das
into
sbb
cwtl
cli
lock
mov
mov
and
xchg
aas
fldenv
jle
jp
imull
mov
cmp
mov
outsb
pop
add
cmp
push
int3
fsubrs
and
mov
sub
xor
jp
dec
popf
lods
gs
jnp
or
or
xlat
cmp
push
inc
das
aam
loope
out
cmp
push
inc
mov
sbb
adc
mov
cld
sub
hlt
pop
ret
mov
int3
enter
repz
jo
ds
push
mov
and
fs
inc
sub
sbb
mov
dec
sbb
mov
pusha
pop
and
mov
leave
hlt
pop
jnp
out
std
aam
bnd
pushf
and
sub
int
mov
cltd
addr16
test
and
mov
int3
cld
inc
xor
popf
dec
aam
cmc
cmp
popf
sub
and
addr16
rcr
vmptrld
sbb
outsb
adc
and
dec
divl
mov
aaa
popa
loop
pop
mov
imul
fs
push
test
lock
mov
negb
mov
pop
test
xor
cmp
sub
lea
loop
jnp
shll
dec
mov
cmpl
cwtl
mov
jae
out
dec
fs
push
fldt
push
mov
push
cmpl
out
dec
aaa
sub
xchg
and
scas
inc
push
xor
or
test
jecxz
mov
pop
xchg
mov
and
roll
and
stc
lret
push
push
jmp
stos
add
pop
mov
pop
xor
stos
jne
shlb
icebp
push
sbb
ds
ret
mov
scas
enter
xchg
and
or
jge
test
add
jno
js
jnp
xlat
lret
xchg
cmp
jnp
mov
ret
mov
repz
mov
repz
popf
or
push
xchg
pushf
movsb
mov
push
in
sbb
orl
adcb
pop
test
jmp
rorb
push
adc
sbb
add
mov
dec
inc
pop
popf
imul
je
pushf
mov
mov
adc
push
jo
in
add
mov
pop
jl
inc
mov
jle
add
test
push
call
jecxz
xor
or
imul
inc
xor
fisttps
add
ret
xchg
test
comiss
xor
fisttps
in
add
jb
ret
dec
fnsave
pop
mov
xor
clc
pop
jne
lret
xor
xor
push
nop
shlb
lcall
sbb
or
xlat
jo
mov
inc
fstl
cmpl
xor
cmp
and
pop
inc
inc
out
popf
inc
test
ret
sarl
xchg
mov
loop
les
cmp
cmp
mov
dec
add
pop
dec
stos
loope
jecxz
cmc
pop
sbb
movb
fiadds
daa
or
add
push
je
lds
dec
out
fst
scas
neg
and
aas
mov
mov
cli
add
prefetch
or
add
insl
jb
sub
daa
sahf
add
mov
add
mov
jno
iret
cmpsl
cmpsb
divl
movsb
jecxz
and
xchg
sbb
push
sbb
pop
pushf
xor
js
jne
notl
xor
jbe
adc
dec
das
lret
shl
test
dec
push
xchg
inc
push
and
in
sub
fdivr
jl
fldcw
mov
popl
test
pop
jnp
push
ret
loop
or
test
lea
xchg
cltd
andl
imul
mov
outsb
jb
nop
inc
adc
je
mov
test
ret
xchg
mov
cmpsl
lret
pushf
mov
stos
mov
push
shl
lcall
in
jne
pop
iret
test
adc
push
sti
call
xchg
xor
pop
and
push
xor
fmuls
dec
shrw
sub
lds
cli
fyl2x
push
stos
sbb
sbb
pop
mov
ss
or
aad
scas
inc
jg
sar
aaa
sbb
lret
xchg
stos
add
push
jecxz
jnp
pop
in
cmp
inc
jp
inc
push
jne
mov
sbb
rolb
pop
test
roll
rol
adc
inc
call
mov
pop
cmp
cltd
sbb
loop
cld
dec
adc
hlt
ljmp
push
sub
stos
fdivp
jno
mov
sbb
cli
xchg
pushf
mov
test
inc
pop
cmc
outsb
or
lods
in
dec
hlt
loopne
data16
pop
iret
mov
mov
dec
in
add
mov
ret
outsb
xchg
inc
jl
lcall
sbb
sbb
imul
push
outsl
dec
stos
inc
cmp
or
mov
inc
popa
xchg
add
xor
test
dec
stos
and
aaa
mov
inc
bound
jecxz
in
add
xchg
sub
cmpsb
xchg
ret
ret
fmull
sub
xor
loop
cmp
mov
cmp
jo
xchg
pop
out
and
out
lret
sbb
sbb
je
jecxz
mov
pop
push
xchg
jne
mov
mov
lock
or
imul
icebp
stos
int
push
and
enter
lret
testl
ds
mov
inc
xorl
xor
inc
daa
rorl
cmc
ja
dec
or
leave
in
cmp
add
jp
dec
std
jge
stos
dec
pop
outsl
mov
test
adc
or
mov
mov
jo
push
mov
cli
push
or
loopne
outsb
pop
orl
sbb
ss
xchg
or
shl
add
int3
pop
subl
mov
xchg
nop
or
mov
addr16
test
mov
xchg
cwtl
dec
cwtl
lret
idivb
in
push
aam
jo
enter
pop
pop
mov
mov
push
aas
inc
sub
into
mov
lcall
dec
pop
inc
enter
stos
mov
test
cmpb
push
jbe
insl
leave
fistl
std
jmp
fwait
xorl
dec
outsb
insb
std
cmp
mov
jo
push
arpl
mov
shl
or
cmp
sub
lcall
mov
adc
dec
jl
cltd
das
push
pop
jae
shlb
sarl
pop
push
sub
aas
and
ret
dec
into
pop
mov
xchg
lret
push
pusha
and
push
xor
insl
xchg
into
outsl
push
pop
xchg
or
xchg
int
stos
scas
int
cmpsl
mov
jle
push
cmp
dec
jno
lret
movsl
andl
fwait
ds
and
test
lea
xor
jo
in
into
mov
or
das
mov
stos
jmp
cmp
pop
fildl
out
cld
es
xor
dec
inc
and
clc
testl
imul
outsb
dec
testl
shrb
mulb
pushf
loop
jmp
das
dec
mov
ja
cld
gs
sub
stos
fldcw
cs
out
xor
pusha
push
aaa
in
daa
movsb
stos
xor
add
jle
pop
repz
mov
xchg
or
cltd
sbb
cmpb
repnz
sub
sbb
mov
lea
fstpl
mov
int
movsb
clc
test
addr16
cld
ret
es
test
scas
cld
mov
mov
mov
test
mov
jno
out
xchg
mov
jno
fisubrs
sbb
mov
xor
jle
roll
fstps
jbe
ret
popa
dec
iret
sbb
push
mov
jo
dec
outsl
cmpsb
mov
and
inc
lock
jno
add
xor
repnz
adc
cmp
xchg
jnp
xchg
mov
cld
mov
mov
xor
jno
shrb
cmp
jnp
mov
jnp
shll
dec
jb
mov
ja
adc
ret
pinsrw
andb
lret
nop
pop
das
arpl
push
push
jmp
sbb
lret
lock
cmp
cld
dec
lock
mov
add
push
jbe
cmp
push
or
push
pop
dec
mov
xchg
mov
sahf
add
jb
rol
lret
adc
dec
jecxz
push
jo
cmp
mov
imul
movsb
stc
rorb
popf
jae
adc
int3
xor
mov
cmpsb
fsubp
push
inc
and
sbb
jmp
inc
push
std
ss
testl
gs
push
add
js
movsl
lock
pushf
mov
clc
adc
imul
add
push
mov
or
pop
and
push
xchg
in
add
js
inc
sbb
ss
std
shl
faddl
sbb
pop
jo
sti
lcall
aaa
sub
mov
or
mov
adc
add
fwait
shrl
mov
scas
gs
adc
ret
pop
test
js
ljmp
adc
test
stos
sbb
jg
xchg
push
push
mov
cli
inc
push
das
rorb
jmp
xor
loope
mov
loop
or
cmpsl
and
xor
jmp
xchg
push
out
mov
call
pop
repnz
pushf
push
push
jo
arpl
add
sti
and
int3
xchg
jno
mov
je
rorl
inc
imul
pop
inc
xor
hlt
push
jp
mov
mov
cltd
xchg
cmp
push
sbbl
pop
fnsave
mov
inc
iret
adc
ljmp
push
xor
call
aad
add
adc
push
rclb
push
inc
fidivs
scas
mov
jno
bound
jb
jns
adc
adc
jl
outsl
push
xlat
es
mov
stos
ljmp
adc
fistpl
ds
arpl
rorl
add
xorl
jno,pn
dec
scas
push
cltd
mov
push
mov
add
inc
fstl
ljmp
mov
jnp
data16
imul
inc
xchg
insb
scas
xor
mov
into
ja
and
pop
xor
outsl
xor
je
cmp
xchg
xor
sbb
lret
nop
rcr
js
dec
mov
pusha
aaa
in
push
fnstcw
jno
add
and
mov
jae
or
mov
icebp
jno
testl
pop
inc
jecxz
ss
xchg
mov
arpl
ss
jge
fbld
aas
aaa
jmp
add
jle
leave
scas
shrl
mov
repz
adc
mov
std
mov
lock
movsl
repz
cmpsb
or
mov
jo
les
stos
lds
jb
add
pop
loopne
test
adc
push
scas
pop
scas
xor
xor
dec
dec
ret
cmpsb
int
xor
mov
int3
pop
and
outsl
xchg
add
mov
scas
mov
mov
mov
enter
mov
insl
cli
ljmp
or
fistl
out
mov
sbb
inc
xchg
cld
xchg
in
xor
ss
sti
fidivl
lret
dec
hlt
mov
xchg
repnz
or
push
mov
jns
adc
rolb
and
fistpll
scas
mov
fiadds
enter
out
fwait
cmp
out
inc
adc
out
mov
repnz
dec
ficomps
or
bound
push
pop
shll
push
lods
push
es
jae
xor
jnp
sub
sti
lods
jne
inc
arpl
lea
lahf
data16
mov
or
xchg
or
out
xor
insb
mov
or
adc
xchg
out
test
ds
push
bound
jne
sbb
cli
adc
push
mov
repz
lods
push
sarb
xchg
sbb
cmp
in
test
dec
sbb
inc
inc
repz
outsb
sub
cwtl
add
dec
jmp
les
mov
push
mov
cmp
movsl
inc
cmp
mov
dec
repnz
in
sub
mov
sbb
and
and
in
and
pop
test
mov
mov
mov
adc
pop
inc
bound
or
imul
mov
push
mov
imul
cmpsl
mov
jnp
xor
mov
mov
stc
loope
negl
mov
ret
pcmpgtw
push
cwtl
mov
roll
cmp
ljmp
jne
inc
mov
mov
daa
pop
leave
pop
not
pop
jae
adc
jmp
xor
aas
bound
ja
out
mov
int
sti
jmp
scas
and
dec
pop
lods
rorb
cmpsl
jo
fdivs
mov
popf
push
pop
push
cwtl
dec
mov
lea
leave
push
xor
pop
jmp
dec
rolb
mov
push
filds
dec
arpl
adc
lock
dec
cmpsl
es
hlt
leave
movl
or
gs
sbb
and
add
aaa
add
or
xchg
push
notb
mov
cwtl
scas
inc
mov
dec
movsl
js
push
mov
out
dec
and
jmp
inc
xchg
adc
adc
inc
dec
ret
cmpsb
cmp
adc
dec
sub
sub
pushf
lds
aad
push
int
jb
call
jb
ret
call
xchg
xchg
out
xchg
ds
gs
popf
ret
cld
xor
cld
dec
repz
out
xor
push
inc
xlat
dec
hlt
xlat
pop
mov
cltd
imul
jmp
test
bnd
xor
test
inc
ret
fisubrl
test
jns
shll
shrl
fwait
jmp
shl
push
in
push
or
lods
mov
iret
sbb
ret
cmp
pop
mov
jne
popa
xchg
fcmove
add
sub
and
dec
jl
loope
xor
push
neg
dec
out
add
hlt
add
dec
xchg
loopne
add
pusha
ss
fbld
mov
insl
lea
xchg
mov
jl
mov
cmp
xor
ret
ljmp
std
in
jl
inc
aas
insl
shrb
or
adc
lahf
es
inc
mov
cmp
xlat
xchg
cs
jp
loopne
jne
pop
mov
int
lret
cmp
dec
imulb
stc
pop
pop
or
cmp
xchg
cli
into
loop
gs
and
imul
pop
dec
movsl
dec
inc
aas
adc
or
scas
repz
adc
mov
inc
sub
fadds
mov
icebp
mov
mov
jae
lods
mov
in
ret
push
sbb
mov
cmp
es
dec
mov
outsl
and
bound
jns
adc
mov
clc
cltd
xor
sub
sarb
jb
jb
xchg
ljmp
bound
shll
scas
lods
sbb
push
xchg
mov
insl
scas
mov
int
mov
rorl
add
pushf
leave
int3
sub
mov
mov
dec
jecxz
sahf
jo
push
xchg
jp
or
inc
arpl
insb
adc
icebp
pop
or
sub
or
mov
sbb
jbe
lahf
push
and
pop
mov
pop
jmp
aam
cwtl
loopw
aam
inc
sbb
popa
outsl
int3
int
jmp
sti
mov
mov
jnp
mov
clc
mov
fldl
add
bound
lods
and
test
push
lret
lret
add
jp
jae
ret
sahf
inc
outsl
shlb
xlat
cwtl
fldcw
iret
push
fmull
fldcw
dec
sbbb
fiaddl
dec
int
jnp
stc
add
xor
jecxz
add
mov
in
mov
mov
insb
sub
insl
push
arpl
mov
sarb
xchg
stos
mov
repz
jle
pushf
jo
test
aaa
mov
jae
sahf
mov
adc
scas
movsl
cltd
cmp
cmp
mov
and
cli
push
inc
ror
cmp
insl
into
jnp
fdivrs
adc
mov
pop
add
jno
icebp
fidivs
xchg
dec
mov
pop
pop
jl
lods
cmc
jp,pn
mov
movsb
xor
pop
jns
mov
sub
into
inc
and
xchg
rcr
inc
push
xchg
in
sahf
ret
mov
loop
movsl
and
cmp
stos
or
in
rolb
and
arpl
push
lds
nop
lods
mov
nop
sahf
sbb
loopne
push
add
pop
insb
mov
cwtl
xchg
popa
mov
cmpsl
arpl
out
fidivs
inc
outsb
sbb
int3
inc
xor
mov
jae
sbb
pushf
test
cmp
pop
shlb
add
xchg
into
aaa
aas
dec
shll
or
xchg
or
cwtl
hlt
test
add
sahf
add
dec
or
rclb
aad
mov
mov
push
adc
outsl
aad
scas
and
mov
jge
inc
xchg
test
jecxz
sub
and
xor
and
loop
or
dec
aam
rep
leave
mov
mov
cmp
outsb
es
insb
in
mov
test
ret
pop
adc
adc
mov
aas
les
and
pusha
repnz
bnd
sahf
aam
pop
repz
push
cmp
in
in
adc
adc
jl
ss
push
movsl
rcrl
push
cwtl
mov
push
sub
and
bswap
pop
adc
xor
and
inc
leave
insb
not
ja
inc
sub
lret
test
pop
pop
add
sbb
push
cmp
out
ljmp
int3
sbb
and
cmp
repz
sbb
fdivl
and
jbe
dec
cmp
mov
sahf
popa
mov
adc
mov
inc
and
cmc
pop
gs
dec
ja
cmpb
jb
jle
pop
push
testb
lock
jnp
cmpsl
mov
xlat
outsb
push
stc
push
mov
insl
fsts
dec
mov
loopne
or
push
imul
ds
xchg
jnp
pop
ja
les
pop
mov
jmp
cmp
dec
mov
jne
enter
sbb
popf
sbb
rolb
out
jb
add
pop
lock
sbb
add
sbb
lea
mov
push
sbb
cmp
mov
js
in
cmp
and
aam
xchg
adc
subl
or
pop
push
or
mov
cmpsl
mov
sbb
je
inc
push
push
sbb
fiadds
adc
mov
push
sub
sti
imul
push
pushf
in
or
repz
push
outsb
mov
adc
dec
or
test
sarl
xchg
xor
or
jne
inc
sub
rorl
cmp
shll
sarl
sub
cmp
pop
pusha
add
sbb
andl
cmc
mov
mov
dec
add
push
mov
or
int
and
insb
aad
mov
adc
les
mov
sti
in
popf
movb
pop
aas
jl
popa
mov
movsl
lret
xchg
sub
or
and
xchg
fisubrl
and
pause
das
jbe
dec
xchg
jmp
shrb
cwtl
hlt
sarb
pop
dec
lock
subl
xchg
bound
loopne
jge
cld
stos
ja
push
push
sti
call
fsubp
leave
setns
psubsw
fdivs
sbb
dec
add
xchg
xor
sub
mov
add
std
fbld
xor
xor
or
inc
mov
rcrl
fadd
lret
mov
cli
and
setns
push
push
push
mov
push
insl
xor
lods
xchg
fsubrl
xor
xchg
mov
pop
lret
addb
inc
mov
sbb
dec
cmp
dec
inc
jne
imul
push
pop
jo
inc
icebp
add
pop
idivb
es
leave
or
ja
jg
dec
mov
jp
jg
loop
call
sub
pop
cmc
cmp
clc
cmp
xchg
adc
hlt
jl
imul
dec
rcl
insb
mov
push
and
in
fs
add
or
sbb
jne
mov
push
mov
xlat
push
arpl
mov
int
xchg
dec
out
in
jl
rcr
adc
xor
dec
in
lods
rcll
add
sub
xchg
mov
mov
insb
in
push
adc
xor
mov
sbb
cmp
mov
clc
pop
inc
inc
pop
mov
ror
cmpsl
xor
ljmp
dec
dec
loop
fadds
jge
lcall
fildl
and
add
movsb
pop
rcl
outsl
or
sub
dec
pop
or
push
mov
imul
clc
sub
ljmp
dec
movswl
lods
or
insb
sub
fwait
shl
add
mov
or
mov
and
fldcw
idiv
pop
mov
sbb
sub
cmpsb
mov
sbb
fsts
ds
loop
adc
dec
test
add
hlt
in
xor
mov
testl
push
sti
pop
jmp
jne,pt
jle
sbbb
in
mov
sbb
hlt
test
jne
mov
push
push
ret
movsb
xor
test
inc
mov
sub
popf
adc
dec
in
mov
push
fstl
mov
mov
xchg
icebp
xor
push
rcrb
in
test
mov
cmp
inc
loope
mov
jp
rorb
inc
pop
loop
mov
xchg
sub
enter
and
pushf
adc
mov
xlat
mov
pop
inc
xchg
ffree
push
rol
push
fsubrp
jbe
cmpsl
mov
push
or
push
mov
push
pop
les
stos
and
sub
nopl
push
push
pop
aad
mov
push
jl
fnstcw
adc
imul
movsl
mov
mov
add
dec
or
push
sub
mov
pop
pushf
inc
test
stos
cmpsb
pavgb
divl
and
loope
pop
in
ljmp
scas
inc
mov
jecxz
popl
xchg
sub
lods
test
out
fisttps
xchg
mov
negl
lret
or
fwait
mov
jg
push
movsb
xchg
frstor
push
int3
test
xchg
sahf
xor
mov
inc
lds
sbb
sbb
adc
mov
movsb
xor
test
xor
xchg
mov
shl
test
push
cmp
push
mov
lss
xchg
out
das
adcl
mov
or
fistpl
xlat
bound
stos
sub
daa
jb
jg
cli
dec
add
imul
xor
addr16
imul
insl
js
xchg
in
xor
xchg
sub
mov
push
sub
cld
or
pop
sbb
loopne
dec
cmp
xor
nop
out
xchg
jnp
mov
sbb
inc
push
pop
leave
sti
das
or
popa
push
lea
out
daa
mov
jne
and
dec
out
testb
repz
es
pop
sub
pushf
add
loop
test
cmp
icebp
mov
enter
push
jne
pop
inc
sbb
repnz
dec
addr16
xchg
daa
push
mov
push
push
mov
cli
aam
jne
mov
dec
jnp,pn
pusha
mov
lret
stc
sbb
cmpsb
jge
call
inc
pop
mov
leave
mov
mov
cmpsb
imulb
lods
and
out
frstor
lods
push
mov
rol
add
roll
aam
cltd
pop
xor
and
pop
adc
imul
das
mov
addl
stos
jnp
clc
insl
scas
rep
add
jecxz
push
in
hlt
push
push
mov
pop
div
jnp
adc
sbb
inc
and
in
push
imul
xchg
mov
pop
fisttpl
scas
dec
mov
clc
mov
cmpsb
lret
int
add
push
sub
test
sahf
jns
les
cmp
psrlw
sub
push
js
loop
repnz
push
gs
repnz
movsb
push
sahf
dec
or
cmp
mov
cmc
adc
dec
shll
lock
pop
xor
mov
mov
mov
enter
ror
cmc
adc
mov
xor
cmc
mov
pop
shll
addr16
sub
pop
sub
sbb
pop
or
xor
xchg
lds
sub
stc
gs
out
clc
rcl
inc
nop
ds
stos
mov
pop
std
mov
mov
leave
das
mov
mov
dec
push
loop
sarl
repz
push
inc
clc
cli
xchg
dec
jmp
inc
sti
out
push
sub
cmp
inc
cmp
mov
or
dec
dec
sar
push
lea
or
test
in
push
jbe
mov
jns
lret
add
jb
sub
lock
sarl
pop
inc
test
outsl
dec
mov
push
orl
insl
cmp
and
push
pop
adcb
mov
cmp
pop
sbb
cli
jnp
xchg
sbb
or
jae
push
shlb
subl
mov
pop
jo
cmp
mov
jp
pop
addb
dec
xor
js
jl
int
or
adc
jae
test
les
movsb
adc
xlat
mov
adc
or
pushfw
sbb
push
mov
addr16
jno
lds
and
daa
outsb
in
mov
rcl
test
jno
push
push
enter
sub
cmp
mov
mov
scas
pop
and
mov
sub
mov
rcl
out
ret
or
push
sbb
pushf
dec
push
pop
adc
bnd
mov
push
scas
pop
cmpl
loope
push
jne
or
enter
or
xor
ja
xchg
jbe
jecxz
out
test
fdivs
push
int
jo
sahf
xor
xchg
sub
mov
mov
inc
and
dec
mov
sbb
repz
repz
fs
ret
addl
inc
jne
xor
insl
aaa
lret
ret
cwtl
push
mov
inc
push
insb
push
jp
test
sahf
cmp
jnp
mov
in
sbb
jle
out
sub
lahf
mov
add
inc
push
pop
jno
push
mov
sbb
mov
cmp
insb
sbb
add
sub
mov
jo
jae
dec
mov
add
jbe
pop
xlat
or
mov
xor
and
push
in
movsl
movsb
addr16
into
mov
mov
aaa
pop
jge
cmp
fistpl
out
fwait
jmp
adc
xor
jl
lcall
lods
and
xor
mov
xor
je
arpl
inc
adc
or
daa
push
cwtl
adcl
shll
lds
scas
or
test
fisttps
cmc
hlt
jbe
rcl
mov
push
add
popa
jns
xchg
cmp
in
or
cmpb
inc
dec
jmp
cmp
mov
sub
add
or
cli
lock
cmp
rcr
dec
mov
or
or
xor
stos
xor
loopne
ss
lret
push
and
andb
jecxz
enter
shlb
jmp
pop
jns
aaa
pop
xchg
xchg
push
sub
mov
jo
out
xchg
jo
loope
inc
jge
sbb
jecxz
jno
leave
push
imul
and
test
lods
mov
pop
xlat
jo
aaa
pop
daa
dec
test
mov
or
and
push
les
sub
aaa
addr16
sub
outsb
xor
mov
push
mov
test
xchg
bound
lods
ret
push
dec
shrb
push
mov
inc
adc
sub
incb
stos
push
rclb
mov
ror
mov
cmp
xchg
push
pusha
orb
inc
adc
sub
ret
mov
cwtl
jnp
ret
adcl
mov
sub
push
mov
mov
int
pop
out
push
fsubrl
imul
add
mov
xchg
mov
dec
gs
push
enter
fstpl
daa
inc
mov
jo
sub
xchg
lcall
adc
lods
ror
sub
test
es
and
cmc
lods
ds
fwait
mov
push
or
add
fidivrs
xor
mov
cli
int
cmp
xchg
dec
push
js
shl
xlat
enter
scas
mov
push
jno
mov
insl
mov
adc
xlat
xchg
ja
in
sbbb
lock
cmc
in
sbb
cmp
imul
mov
loopne
or
jge
jbe
push
es
xor
testl
pop
test
or
or
cmc
mov
push
test
pop
xchg
push
add
roll
jnp
pop
mov
cmp
shl
mov
or
out
es
pop
fcompl
int
cld
aas
pop
jns
cld
rorb
sbb
lcall
daa
test
mov
addr16
emms
lcall
mov
xor
lea
push
sbb
mov
push
sub
sub
std
jno
mov
mov
and
dec
pop
cmpsl
mov
sbb
mov
cmpl
cmpb
sub
roll
jnp
rorl
lods
xor
jne
sbb
loope
inc
rolb
negl
frstor
loope
cmp
and
aam
mov
mov
pop
into
mov
aas
leave
in
stos
sbb
mov
outsl
xchg
sub
and
dec
mov
pop
push
cmp
in
jns
mov
or
and
aad
mov
mov
sub
shlb
repnz
mov
push
add
push
mov
adc
adc
cmp
sub
leave
dec
lods
pop
imul
sub
shrb
ret
mov
sbb
out
cmp
lret
push
adc
outsl
mov
pop
ret
andb
add
rol
and
cmp
ret
jp
jbe
xor
loope
mov
push
sbb
fdivs
ljmp
jae
adcl
mov
lods
sbb
mov
xchg
popf
imul
sub
icebp
test
jecxz
push
push
fwait
sahf
orl
je
xchg
vrcpps
cmpsl
cmpsl
call
jecxz
pop
in
dec
mov
rcl
shlb
popf
sti
cmp
adc
out
outsl
mov
sbb
scas
stos
gs
xchg
mov
xchg
insb
ret
inc
fwait
cmc
push
sub
mov
mov
push
jmp
jg
aaa
ss
out
cmp
xlat
mov
mov
mov
mov
mov
add
insl
movsb
xchg
push
not
lea
mov
push
jg
mov
push
jne
je
pop
mov
mov
add
pop
test
daa
lahf
aaa
or
das
mov
lods
out
hlt
cmp
aas
out
outsl
sbb
xchg
push
dec
sbb
pop
dec
test
addr16
mov
cmpsl
xor
adc
dec
sub
lcall
sbb
inc
mov
dec
daa
movsb
mov
lds
sub
pop
or
jns
xchg
xor
cmpl
negb
pusha
push
mov
stos
adc
inc
push
movsb
cmp
mov
xchg
dec
xlat
push
test
lcall
jle
adc
xor
inc
fmuls
movsb
and
mov
lock
lea
push
sbbl
inc
dec
in
or
jle
and
cmp
lret
cmp
les
push
and
xor
out
aaa
stos
pop
cmc
sbb
aaa
xchg
or
mov
test
mov
xchg
xor
fwait
sub
push
cmpsl
imul
jg
insl
mov
cld
aam
mov
outsb
pop
mov
or
add
movsw
pop
cmp
out
test
mov
lret
push
pop
sub
push
push
in
int
mov
push
mov
dec
sub
push
sbb
jge
mov
fdecstp
jp
sbb
and
and
push
outsb
mov
and
in
sbb
push
jnp
aam
jbe
rcl
cmp
push
mov
pop
inc
sbb
repnz
xor
inc
mov
dec
pop
nop
popa
scas
mov
mov
ds
shrb
stos
test
stos
mov
cwtl
loop
sbb
xlat
xor
push
mov
in
test
dec
pop
mov
and
pop
mov
push
cmp
into
jae
sbb
sbb
rol
mov
idivl
dec
inc
cmp
or
scas
ljmp
pop
fnsave
ror
inc
rcrb
cmp
inc
adc
pop
test
push
pop
out
push
push
inc
fnsetpm(287
push
mov
loope
push
xor
pop
mov
mov
imul
test
mov
sub
mov
fnstsw
cmp
pop
xlat
mov
bnd
sbb
push
fwait
dec
mov
pop
push
je
jae
repz
sbb
ss
pop
out
stc
push
int3
add
fadds
jecxz
and
movsb
popa
mov
push
mov
pop
xchg
adc
push
lods
sar
mov
jne
lea
cmpsb
iret
incb
jp
test
mov
aam
sbb
cmp
inc
push
or
ljmp
jnp
jg
stc
icebp
jns
push
mov
dec
jp
out
mov
cwtl
push
jle
jl
sbb
adc
xchg
aas
aas
cwtl
mov
iret
xor
inc
jge
add
and
or
repz
pop
add
popa
pop
mov
jae
mov
ss
inc
adc
sub
sbb
clc
xor
xor
inc
shl
xor
mov
dec
mov
xor
mov
adcb
xchg
cli
dec
ds
and
sbb
enter
js
dec
stos
fmuls
or
mov
xchg
scas
or
push
pop
into
mov
adc
rclb
pop
repz
cmp
sub
inc
in
push
push
into
adc
mov
mov
mov
scas
aad
mov
lds
jp
dec
fdivr
iret
cmp
mov
push
sbb
cli
scas
imul
sti
inc
inc
insl
sub
push
mov
mov
xchg
push
cmp
xlat
and
sti
iret
mov
cwtl
inc
inc
fcmovb
rcrl
shlb
inc
inc
nopl
xchg
jle
push
daa
cmpsb
sub
loop
or
gs
je
fmull
sbb
sbb
test
dec
xchg
fisttpl
movsl
pop
dec
mov
adc
loopne
scas
in
sti
or
int3
out
test
pushf
push
pop
mov
test
lods
btr
add
mov
sub
sub
pop
clc
lret
mov
out
xchg
mov
shlb
push
add
xchg
adc
push
pop
sarb
out
icebp
mov
shll
ja
cltd
in
sbb
in
pusha
popf
aaa
pusha
repnz
push
cltd
pop
iret
test
xchg
stos
jnp
xchg
mov
mov
into
sub
mov
xchg
fnstsw
ret
sub
insl
repnz
mov
sub
fcmovnb
ljmp
cmp
iret
push
aad
dec
push
negb
sarb
loopne
inc
lods
popf
and
lea
mov
std
xchg
cmp
mov
and
jne
cmp
and
divb
out
jno
popf
mov
fs
scas
aad
xchg
mov
push
fiaddl
mov
loope
fbstp
xchg
decb
mov
imul
into
mov
sub
int3
sbb
shrl
inc
push
arpl
les
adc
xor
bound
mulb
pop
popa
shrb
sbb
stos
addr16
hlt
cmp
rorb
push
push
leave
jmp
jno
xor
or
movsb
push
enter
fwait
leave
roll
mov
ret
mov
xlat
rcr
xchg
push
mov
push
stc
inc
les
movsl
inc
jecxz
sub
adc
aas
jl
pop
push
fnstsw
out
lock
stos
sbb
xchg
loopne
arpl
stos
inc
inc
jno
aam
fwait
in
pop
fwait
addl
out
mov
jno
push
dec
cltd
lahf
xorb
mov
je
inc
rclb
lea
jns
fs
mov
jmp
das
les
mov
xor
mov
pop
notl
add
cmc
add
in
cmp
xor
sbb
insb
es
fidivs
dec
push
inc
fsincos
cmpb
shlb
aad
adc
hlt
xlat
ss
cmpsl
inc
inc
push
cmp
xchg
hlt
add
lret
aad
mov
gs
stos
mov
add
and
arpl
sbb
pusha
aad
push
push
jle
jmp
mov
cltd
iret
sbb
jle
sbb
pop
leave
rcrl
pop
loopne
mov
mov
ss
or
lcall
lds
sub
mov
jo
xorl
fwait
sahf
cltd
lea
aaa
push
xchg
aaa
sbb
cmp
inc
sbb
insb
in
sbb
shlb
push
sbb
and
pop
fwait
out
pop
adcb
jmp
in
cmpsl
lahf
cli
xor
out
jle
lods
sbb
ret
lret
aas
dec
sub
je
adc
inc
gs
pop
xor
test
or
int
lea
divb
pop
and
popf
sbb
add
cmp
jge
pop
repz
lret
inc
inc
or
movsb
push
or
sub
sbb
adc
jl
mov
std
mov
jb
scas
dec
cltd
lea
test
popf
test
push
sbb
lods
jmp
sahf
sbb
lea
mov
in
jl
sbb
sbb
cltd
sub
lea
mov
in
pop
dec
leave
mov
xorl
test
xchg
aaa
jno
sbb
aam
and
and
loop
cmp
add
mov
test
enter
mov
imul
iret
rcrl
jle
fcomps
cmpsb
and
inc
push
insb
in
jo
pop
fwait
add
punpcklbw
loope
fsub
push
clc
mov
jo
jg
mulb
xchg
pop
and
pop
clc
fldt
pop
in
out
dec
out
dec
cld
inc
mov
les
jnp
xchg
pop
jb
sbb
dec
cmc
mov
push
mov
xor
fs
dec
xchg
inc
mov
adc
xchg
inc
dec
or
in
mov
lcall
xchg
mov
and
clc
and
push
jl
jnp
sbb
or
mov
pop
loope
mov
ds
sub
jmp
or
punpckhbw
lahf
fldl2e
xchg
jo
pop
je
cmp
test
dec
imul
jmp
jl
sti
into
ret
sub
imul
lock
xor
xor
inc
or
mov
mov
or
mov
push
push
repnz
ret
sahf
xchg
add
aaa
loope
shr
lcall
and
in
dec
faddl
push
fldl
jno
fbstp
outsl
mov
push
mov
xchg
fs
inc
jno
loop
sub
sbb
and
or
sub
jnp
lahf
mov
addr16
nop
push
inc
adc
fistpl
xor
addr16
les
pop
and
xchg
andb
xchg
mov
xor
pusha
cltd
xchg
fs
ljmp
inc
cmp
inc
jle
ja
cmp
and
imul
dec
cwtl
mov
jmp
jle
in
shlb
mov
imul
mov
sti
outsl
jge
negl
fstps
sub
fiaddl
in
jge
dec
aas
xchg
insb
popf
sub
mov
shll
xor
fsubp
cmp
lock
xchg
negl
ficomps
testb
adc
add
les
xor
pop
rcl
lret
adc
mov
or
js
std
ljmp
das
pop
mov
imul
fwait
inc
mov
adc
ror
mov
mov
fldl
pop
xor
leave
add
in
gs
xchg
aaa
outsb
fsubr
mov
stos
xor
add
jl
mov
sbb
gs
shlb
aam
sbb
mov
mov
shlb
mov
out
pop
sbb
and
in
in
call
dec
dec
jmp
ret
sub
jae
mov
inc
movsl
sub
jmp
ret
dec
bound
xchg
lahf
lock
pop
mov
std
jo
xor
xchg
lret
pop
roll
es
push
cmp
cmc
cmpsb
repz
leave
int
je
aas
dec
insb
adc
dec
popf
mov
mull
or
and
shlb
mov
inc
test
fdivl
shll
push
jge
stc
xrelease
add
sub
jl
daa
lock
or
xchg
lret
sub
lods
jno
and
and
std
jno
and
cmpsb
adc
push
movsb
movsb
fucomp
pushf
in
shlb
fdivs
ds
inc
xor
scas
ret
or
sub
pushf
fwait
ds
movsl
es
sub
test
dec
mov
and
inc
sub
sahf
xlat
fwait
jge
mov
scas
arpl
mov
dec
pop
mov
rcrl
mov
subb
cmpsb
repnz
add
popa
push
test
cmp
pop
cmp
mov
xchg
repnz
pop
icebp
mov
ficompl
fucomp
push
lock
xchg
test
jne
adc
dec
xor
pop
mov
stos
xlat
adc
pop
fmul
xor
fldl
stos
or
insb
arpl
scas
cmp
bound
jbe
xor
mov
mov
pop
mov
jb
mov
xchg
jb
add
dec
sbb
cmpsb
dec
test
or
jmp
jle
xchg
jb
ffree
and
add
shrb
les
insl
sbb
sub
pop
int3
mov
imul
sub
sbbb
lcall
adc
in
dec
mov
jbe
pop
jno
cli
popf
mov
cmp
pop
or
movsb
fcoml
loop
or
inc
push
push
leave
jge
add
inc
ja
arpl
gs
fldcw
mov
mov
aaa
mov
mov
shl
cmp
mov
and
sarl
jg
pop
mov
jae
jns
mov
jno
cmovne
jle
push
inc
cmpsb
cltd
hlt
xor
shlb
orb
jno
test
movsb
std
dec
test
ss
push
mov
stos
adcb
insl
sbb
outsb
das
adc
xchg
xor
xchg
aad
adc
shlb
dec
int3
jmp
in
jp
es
cltd
lock
jp
cli
mov
dec
aaa
pop
xor
push
fcmovnbe
cli
mov
ds
fmuls
push
jmp
rorb
xchg
fdivs
xchg
pop
xor
movsb
mov
sahf
in
lods
pushf
xchg
add
push
xchg
mov
imul
mov
ret
iret
jnp
outsb
leave
leave
repnz
xchg
mov
inc
ret
cmpsb
pushl
shrl
xor
mov
int3
in
adc
cmp
adc
push
xor
imul
jge,pn
inc
pop
lods
fsub
cmp
loope
ss
xlat
shl
sbb
inc
add
xor
std
jo,pt
jmp
outsb
jb
gs
jecxz
mov
pop
stos
dec
jmp
in
hlt
mov
xchg
cmpsl
loop
cmp
jecxz
jne
push
bound
test
xchg
xchg
clc
pop
popa
add
cli
pop
pushf
cwtl
xor
sbb
imul
mov
jle
into
pop
and
ljmp
jp
cmp
sbb
push
cmp
inc
mov
inc
mov
mov
outsb
imul
and
inc
sub
mov
mov
mov
cli
jge
stos
cmp
stos
fmull
test
out
lods
or
inc
enter
mov
inc
or
in
icebp
jl
xor
jge
adc
in
mov
popl
push
xor
mov
mov
repnz
ret
ss
clc
xchg
fs
ljmp
test
sarb
into
je
fimull
test
scas
dec
xlat
popf
pop
xor
subb
popf
push
enter
dec
fadds
dec
pushf
jo
mov
je
push
or
lock
ljmp
lock
daa
lds
push
and
xor
rorl
out
lcall
ficompl
fbstp
lds
pop
mov
pop
in
stc
push
iret
ss
jmp
in
js
lcall
mov
and
lock
fidivrs
sub
dec
fwait
out
or
loope
mov
lods
or
loope
xor
lods
insl
push
mov
ja
add
dec
rcrl
and
or
out
sub
jns
add
out
cmc
sub
dec
cmp
jecxz
jl
loope
dec
add
dec
adc
mov
dec
mov
mov
call
pop
sahf
dec
sti
xorb
lea
xchg
cmp
rcl
cld
enter
mov
popa
addr16
test
sbb
dec
adc
push
mov
lock
adc
aaa
cmp
mov
jns
stos
shl
repz
xor
fs
addl
mov
sub
jle
add
outsl
inc
das
lea
sbb
ret
popf
mov
xor
rcrl
testl
cmpsl
mov
enter
leave
ja
inc
test
pop
out
out
popa
lods
dec
int3
adc
push
or
cmp
jbe
adc
mov
mov
aad
adc
movzbl
or
pusha
popf
jmp
or
cmp
and
xchg
push
xchg
cmpsb
popa
xor
cli
andl
cmp
adc
adc
push
daa
sub
or
popf
ret
cmp
xor
stos
add
punpcklbw
popa
add
pop
sbb
clc
jp
mov
push
jno
sbb
cltd
lods
mov
std
jns
pop
sqrtps
cltd
mov
in
adc
scas
adc
adc
xchg
and
aam
ss
mov
pop
mov
leave
pusha
or
stc
stos
jnp
push
mov
cmp
and
ss
jb
adc
fnop
pop
xchg
aam
inc
outsl
jecxz
lds
mov
cli
xor
and
jg
cmp
cmpsb
mov
add
bound
js
adc
and
jno
das
or
ds
lds
bound
cmp
sbb
cmp
pushf
int3
stos
mov
lock
jle
cs
into
in
jmp
imul
mov
leave
jne
pushf
js
lock
add
adc
xor
xchg
call
push
jno
xchg
jne
repnz
lret
mov
int3
or
cltd
rol
sbb
stos
dec
mov
js
decl
mov
les
cmp
adc
sbb
loopne
mov
roll
mov
adc
repnz
mov
xlat
shl
jmp
xor
and
fadd
adc
dec
pop
jne
xor
push
xchg
mov
push
jle
or
sahf
add
push
rorb
sbb
push
notb
mov
sbb
sbb
mov
das
and
test
mov
pushl
out
cmp
xor
pop
imul
and
repz
std
mov
ret
repnz
xchg
inc
jp
lea
xor
insb
mov
push
into
rcl
mov
mull
dec
test
and
daa
out
shr
cli
jnp
and
fbld
adc
cmpsb
lea
or
add
lods
int3
mov
push
pop
ja
xchg
mov
pushf
adc
or
fs
cwtl
pop
push
sbbl
stc
stos
int
mov
inc
ret
jl
push
popf
pushf
cmp
jns
in
mov
js
aas
pop
or
cmpsb
mov
add
add
add
add
push
mov
cmp
aas
and
add
in
dec
imulb
fidivrs
ds
aas
int
or
out
sub
ljmp
mov
jns
xor
fdivrp
test
push
and
xchg
push
xchg
int
and
mov
fiadds
push
scas
iret
fimuls
aaa
test
cs
inc
mov
adc
add
push
and
add
dec
push
jb
inc
sbbl
js
xchg
gs
clc
cltd
mov
jl
sbb
loope
mov
cltd
sub
rcll
xchg
mov
pop
mov
sub
loop
outsl
xchg
data16
test
sub
cmpsl
or
inc
xchg
into
shrl
sbb
lods
dec
clc
out
jl
xor
call
ret
subb
push
test
cwtl
test
xlat
mull
inc
adc
testb
repnz
adc
and
jmp
lods
rclb
enter
xchg
mov
cmp
pop
mov
pop
or
test
bnd
imul
fs
or
mov
pop
movsl
sub
cmpsl
rcrb
push
push
push
fnstenv
movl
add
scas
mov
jle
cmp
or
fsubrl
js
push
pop
insl
pop
sbb
mov
mov
sub
and
jmp
out
push
test
or
mov
push
cmp
xchg
cs
xchg
popf
addr16
mov
les
out
je
mov
jmp
adc
or
push
daa
or
rcrb
dec
ret
pop
cmpsb
mov
and
pop
lock
and
push
js
sub
pop
stc
ljmp
addl
cmp
xchg
pop
xchg
sub
jle
jnp
add
sub
xor
jp
mov
add
xchg
cmp
mov
or
stos
xchg
add
adc
sub
pop
or
lock
and
mov
xor
mov
inc
dec
mov
test
scas
push
mov
fldl
jno
jge
or
shll
lcall
jmp
call
and
loope
mov
rcrl
jg
loope
jp
nop
hlt
push
cwtl
int3
fdivrl
fdivrs
lcall
fs
push
or
arpl
or
mov
std
jo
les
imul
mov
sbb
mov
arpl
popa
out
pop
lcall
adc
cmpsb
imul
cmp
test
cmpsl
insb
dec
call
sbbb
jg
xchg
movsl
fdivs
xor
push
add
or
sahf
mov
or
or
daa
scas
xor
mov
es
dec
out
test
jecxz
daa
loopne
xchg
pop
dec
outsl
adc
pop
xchg
sbb
shrl
push
xchg
aad
ds
stos
sbb
sbb
mov
push
scas
popf
push
xchg
test
sub
adc
push
cmc
popf
fwait
jns
push
xor
pop
cld
lahf
lahf
cld
enter
adc
push
push
xchg
sarl
dec
and
xor
scas
xor
jne
adc
add
add
xorb
push
push
xchg
xchg
imul
mov
xor
sub
mov
pushf
idivl
subb
in
sbb
loopne
and
shr
pop
gs
sub
xor
xchg
mov
loopne
fcompl
xor
xor
in
cmpsb
push
and
out
cmpb
pop
addr16
ja
pop
inc
push
push
dec
nop
stos
subb
and
jg
push
movsb
fs
cmp
jg
xlat
cmp
mov
int3
xchg
pushf
mov
adc
stos
dec
mov
pop
add
test
pop
pop
mov
adc
push
sbb
and
out
je
cmp
lods
mov
repz
dec
scas
ret
fmull
mov
dec
sahf
sbb
out
fistpl
mov
add
xor
sahf
add
cld
test
push
test
jae
cmp
lahf
push
inc
lret
mov
fs
repz
fadds
add
es
fcmovbe
sbb
clc
les
leave
fwait
jae
xchg
and
inc
pop
or
dec
dec
pop
fnstsw
pop
fcmove
push
push
daa
dec
mov
outsb
stos
jo
jb
sbb
xor
mov
or
shl
sbb
in
shll
shll
and
inc
mov
xchg
mov
insl
imul
les
push
mov
cld
sub
cmp
adc
jecxz
jnp
test
out
insb
jmp
nop
and
mov
gs
cmc
std
sub
out
arpl
jb
mov
test
fildl
dec
dec
cwtl
pushf
icebp
loope
push
xor
int3
test
mov
jg
cmpsb
imul
sbb
sub
mov
shrl
call
xchg
sbb
rcll
sbb
icebp
mov
jno
jecxz
das
jns
addl
xor
outsl
and
mov
push
cltd
or
fcmovb
cltd
add
andb
jbe
mov
inc
gs
mov
sti
add
jg
mov
daa
lds
cli
sub
push
sti
jmp
js
ficomps
iret
std
ja
pop
sub
rcrl
lret
jnp
je
inc
xchg
pusha
dec
inc
nop
nop
jg
pop
ljmp
sbb
sub
push
mov
std
add
outsl
and
mov
mov
scas
inc
imul
mov
insl
push
loope
int
cld
adc
sbb
push
jg
or
or
pop
mov
xor
cmp
mov
jmp
mov
mov
xor
loop
add
xor
jno
adc
cmc
pop
fs
jno
ret
scas
cmp
push
mov
cmp
push
mov
mov
lods
mov
pop
test
inc
xor
sub
lods
sub
mov
sbb
cmp
dec
jmp
add
fisubrs
das
push
std
cs
je
in
jg
inc
push
push
sub
jecxz
int
lods
aaa
pop
or
addr16
cmp
fsubrl
in
pop
in
dec
repz
or
pop
jne
call
cld
lods
pop
sbb
clc
imul
test
inc
push
sarb
sbb
mov
dec
lods
inc
mov
je
in
into
stos
fdivrl
ret
popf
push
scas
dec
inc
js
cmp
and
out
test
mov
je
cmpb
mov
addb
popa
adc
into
lret
sub
ja
ja
inc
jo
mov
mov
int3
dec
notl
in
mov
xlat
xchg
hlt
lcall
sub
lock
imul
icebp
mov
mov
xchg
mov
aas
cmp
out
mov
or
sbb
pop
push
jle
stos
js
inc
pop
adc
test
arpl
jecxz
push
in
mov
lds
aas
cltd
push
adc
jns
push
out
int
sbb
and
mov
inc
xchg
ja
loope
cmp
mov
ret
adc
and
add
fbstp
and
push
shrl
xor
nop
in
dec
sarl
sub
mov
jl
sub
xor
lods
inc
xorl
fmull
push
scas
mov
into
mov
and
jne
sbb
sar
push
jmp
and
lcall
sub
mov
mov
sub
gs
or
jg
lods
dec
jmp
popf
les
daa
inc
ljmp
xor
pop
mov
adc
jle
cmp
cmpsl
mov
and
or
in
call
jns
repnz
xor
daa
into
push
ja
das
and
mov
movsb
adc
ljmp
dec
leave
mov
out
insb
into
lret
ja
loopne
sbb
add
dec
sub
out
and
inc
in
jge
mov
jae
cld
fucomip
mov
sub
push
dec
pop
and
fidivrl
mov
insb
sub
test
repz
fwait
stc
mov
fstps
jo
adc
clc
and
test
xchg
aam
cmp
loop
add
xor
adc
fmull
jge
rcl
insb
xchg
loopne
xor
push
adc
sahf
cmp
xchg
sub
mov
or
test
sbb
outsb
cmp
adc
mov
lods
fdivrl
or
fidivrs
cld
test
jnp
jne
xchg
mov
leave
cmp
pop
dec
in
pop
mov
loope
mov
push
cld
inc
gs
outsl
sbb
jne
xor
dec
xor
xor
xchg
out
jge
nop
xchg
cwtl
jl
xor
inc
jnp
adc
or
jl
xchg
mov
push
fsubs
fucomi
adc
lock
mov
xchg
addr16
out
jle
lods
xchg
ret
jns
in
lods
add
xor
movmskps
pop
rolb
jp
pop
adc
mov
addr16
out
je
mov
into
fidivl
pop
shll
xchg
jb
jmp
cmpsb
jmp
jns
movsl
lret
aam
pop
ret
jb
mov
sub
and
jne
mov
mov
push
xor
shrb
gs
stc
outsb
cmpsb
push
and
outsb
out
insb
inc
cmp
pop
push
cli
mov
cltd
jg
in
ret
cmp
in
inc
xor
dec
jmp
fidivl
lcall
mov
jb
int
mov
push
adc
imul
mov
das
scas
xchg
cmp
or
mov
lock
filds
scas
stc
mov
mov
lret
dec
push
imul
mov
sbb
loope
push
mov
lods
arpl
cmp
les
fs
cs
imul
xchg
js
out
xchg
mov
push
push
bound
cmp
loopne
mov
das
inc
stc
add
stc
or
dec
add
test
arpl
sub
mov
insl
jno
icebp
mov
inc
sbb
pop
rorl
inc
test
das
int3
mov
sub
sub
cld
xor
push
les
add
test
dec
and
and
push
jns
shrl
ror
mov
adc
pop
cmpsl
in
pop
shrl
mov
sub
inc
pop
ja
xchg
sahf
fdivs
push
push
push
jle
movsl
xor
jae
int3
sub
push
movsb
rcll
negb
jmp
out
mov
test
aaa
cmp
shlb
test
adc
xchg
lods
cmp
test
mov
aad
or
fiadds
or
adc
lds
ret
outsl
int
cmc
out
out
out
sbb
cmp
int
ds
leave
cmp
adc
jecxz
out
lea
outsl
xor
xchg
pop
cmpsl
fwait
jae
mov
cmp
and
cmp
cmp
jg
cmp
cmpsb
xor
aaa
xchg
jb
pushf
xchg
sub
insl
lret
or
xchg
jne
faddl
mov
push
cmp
mov
into
jmp
in
imul
nop
insb
in
xchg
xchg
jmp
bound
out
and
push
mov
pushl
pop
lds
mov
sbb
push
cmpl
into
and
aaa
ljmp
in
ret
add
mov
and
cmp
cmp
lods
adc
int
leave
in
pop
cmp
xchg
fcomps
push
aaa
sbb
pop
add
aad
into
push
pop
mov
jae
int3
insb
loop
sub
dec
sbb
in
aad
jg
and
mov
sub
sub
pop
aaa
icebp
shll
mov
test
imul
mov
pop
mov
call
lock
mov
in
sub
cli
lcall
lret
xchg
jns
lret
imul
adc
adc
pop
je
aas
sbb
mov
mov
push
movsl
shll
and
xlat
fwait
test
mov
pop
lcall
ja
ret
mov
out
out
xor
pop
scas
ja
addr16
cmp
lods
jns
and
in
lea
jge
fwait
xchg
mov
inc
jbe
pop
test
arpl
push
mov
cmp
cmp
pusha
adc
xchg
mov
sbb
and
sahf
mull
sub
in
not
adc
call
add
push
push
mov
movsl
and
add
je
push
repz
hlt
dec
pop
mov
xorl
and
or
sbb
jp
fisttps
mov
jns
sub
lds
push
mov
hlt
leave
fstl
sahf
test
pop
fwait
hlt
cmp
dec
jns
mov
dec
sahf
jl
xchg
repz
fdivl
mov
aas
pushf
ja
stos
pop
lret
test
cmc
push
xchg
aas
push
hlt
lret
push
cmp
mov
adc
fnstcw
out
imul
add
aam
mov
aas
mov
call
out
mov
scas
aaa
pop
jno
cld
shlb
and
dec
mov
aam
addr16
rcll
cmpsb
jnp
cwtl
adc
xchg
xor
sub
mov
mov
pop
xor
movsl
test
mov
sub
repnz
fwait
or
jns
xchg
mov
ds
out
dec
xchg
scas
cmp
push
xchg
push
movsl
fstp
push
lods
repz
sub
js
xor
inc
daa
inc
push
and
out
cmp
push
and
cmp
and
xchg
jno
imul
inc
stos
adc
inc
aaa
insl
dec
hlt
add
in
jge
fisubrs
les
jecxz
test
lret
push
mov
cmpb
mov
xchg
cmpl
repnz
xchg
mov
dec
scas
test
push
mov
mov
cmpsb
sti
hlt
xchg
mov
cmp
repz
icebp
inc
push
push
lock
imul
je
jg
pop
sarb
xor
or
call
mov
in
dec
sub
fcompl
push
std
mov
pop
cmp
push
cmc
out
orl
ror
sahf
cmp
push
cmpsl
xchg
jo
and
aad
pop
mov
idivb
xchg
cwtl
xchg
pop
sbbb
xchg
movsl
loopne
mov
adc
decl
xor
pop
notb
jno
dec
inc
dec
enter
push
sub
mov
adc
pop
hlt
jp
sbb
int3
jae
mov
cs
inc
imul
addr16
cmp
jae
push
xor
cwtl
jb
loope
in
in
sbb
fcoml
jmp
js
and
push
adc
or
lcall
ds
dec
outsl
movsl
fnstsw
movsb
lcall
mov
inc
jmp
sub
sarl
xchg
fstl
data16
pusha
testb
pop
jl
or
xor
sbb
mov
xor
addr16
aaa
pop
rorl
enter
sub
addr16
jp
sti
daa
lahf
or
adc
lds
cmp
aad
add
or
and
jns
mov
insl
push
push
dec
jne
test
or
mulb
xlat
cmp
icebp
xlat
mov
stos
sbb
insb
inc
push
insl
stc
mov
jp
rol
daa
nop
mov
xorb
cmp
shrl
xor
pop
clc
sbb
lds
jp
jle
dec
add
sub
lods
imul
lods
push
hlt
popa
lahf
mov
ljmp
jae
xchg
dec
mov
xor
cs
incb
xacquire
mov
fnstsw
ficoml
cmp
out
jl
mov
sbb
lock
or
out
dec
ret
pop
nop
sub
mov
or
pop
leave
cltd
movsbl
negl
aam
xchg
push
mov
xchg
inc
sub
and
or
mov
in
cli
jle
sub
mov
ret
movsl
xchg
mov
in
mov
repnz
fnstsw
jmp
mov
cmp
add
sub
int
arpl
push
mov
nop
roll
roll
or
xchg
xlat
outsl
shrb
xor
jno
loope
popl
subb
pop
lret
fwait
std
pop
in
push
push
pmullw
clc
flds
pop
jmp
xor
jp
mov
sarl
sbb
push
xor
ret
adc
icebp
xchg
pop
and
or
int
insl
test
mov
enter
insl
ds
jg
movsl
rol
mov
jbe
movsl
add
mov
xchg
int3
mov
fdivs
les
jbe
xlat
and
test
push
andb
push
ret
jae
pop
sbb
bound
insl
dec
add
cmpb
daa
fcmovb
addr16
dec
ljmp
int
test
test
mov
cltd
mov
ja
sbb
add
jl
jo
ficoml
mov
nop
inc
mov
ss
leave
imul
in
das
jo
cld
add
xchg
pop
jge
sbb
vaddpd
sbb
push
pop
add
mov
pop
dec
mov
inc
adc
cmp
push
std
mov
cmp
hlt
and
jmp
dec
ljmp
push
ds
add
sbb
dec
hlt
sbb
mov
sbb
mov
scas
lods
js
and
push
mov
jo
mov
lods
cmp
and
ss
arpl
sbb
out
ds
mov
fldl
dec
adc
out
adc
xchg
add
fistpl
es
xor
mov
push
repz
cmp
aam
cld
adc
xor
aaa
sti
mov
mov
js
add
pop
loope
lock
jns
aaa
in
xchg
pop
xchg
stc
negl
jecxz
outsl
push
mov
inc
test
scas
dec
inc
xor
push
ret
fcom
lret
mov
gs
xchg
mov
das
jp
add
mov
int3
push
push
scas
addr16
fsubr
stos
aad
jne
ret
sub
stc
inc
cmc
pop
adc
insl
xchg
xlat
pop
mov
neg
adc
pop
mov
mov
and
aaa
jle
xor
in
cmp
and
sub
rep
shlb
inc
mov
cmc
xorb
sbb
pop
stc
ds
add
xchg
xor
mov
push
xor
js
ds
flds
hlt
test
cmpsl
lods
insl
cmp
movsb
loop
nop
cmp
out
fisttps
mov
cmc
movsb
pusha
mov
inc
and
jl
mov
xchg
loop
iret
mov
cld
push
xor
and
out
push
add
and
imul
outsl
sti
sub
push
and
popa
aaa
in
cmp
jne
jmp
add
push
pop
mov
ret
and
daa
aas
insl
mov
jmp
subl
jo
fildl
das
jns
lods
jae
sbb
cmp
jge
popa
pop
loop
bound
jl
mov
out
fsubr
xor
inc
fisubs
pop
test
sub
ret
jns
clc
xchg
dec
push
jp
adc
testb
dec
int3
cmp
fdivs
scas
mov
insb
push
mov
loope
xchg
sbb
xchg
in
cmp
mov
mov
or
jnp
cmp
mov
jmp
and
jmp
fyl2xp1
jmp
and
jge
mov
outsb
mov
cmpsl
mov
adc
fwait
mov
dec
pop
int3
jmp
das
in
dec
mov
push
fildll
pop
mov
jmp
ljmp
loopne
loop
xor
aaa
sbb
sub
add
sbb
cltd
or
imull
iret
jno
idiv
das
repz
aaa
mov
pop
gs
iret
adc
and
adc
adcb
xor
test
adc
pop
inc
insb
mov
je
das
loope
scas
mulb
stc
or
scas
xchg
loopne
jge
lods
xchg
push
lock
add
mov
stc
inc
mov
loop
dec
and
mov
jp
lret
fdivs
adc
sbb
rol
jle
sub
into
jne
loope
inc
loop
push
jae
jnp
xor
cltd
mov
lea
dec
shl
das
inc
and
shr
sbb
ja
popl
cmp
pusha
cltd
jl
aam
jg
jge
dec
cwtl
adc
popa
inc
in
and
mov
loop
test
in
fiaddl
xchg
cli
jp
mov
mov
xor
push
adc
adc
jg
das
jmp
outsl
mov
sub
dec
test
sahf
push
fistpll
xchg
adc
in
mov
sub
inc
jmp
push
mov
mov
cwtl
cld
push
jae
pop
fmul
cmp
test
mov
ss
pop
mov
out
fs
jmp
scas
cmpl
imul
jnp
out
in
xchg
lret
add
mov
cld
pop
push
lcall
sub
mov
jecxz
push
fiadds
xlat
aad
je
leave
mov
mov
and
cmp
jo
arpl
or
jne
jbe
repz
lcall
in
in
push
dec
xor
mov
lods
stos
in
je
arpl
dec
lds
popa
and
jnp
inc
push
dec
lods
push
inc
jnp
sub
jmp
cmp
aam
cwtl
mov
cmp
sbb
adc
xchg
push
inc
icebp
mov
in
jge
pusha
test
mov
mov
sub
xchg
mov
mov
lods
sub
cmp
jge
lret
iret
pop
adc
pop
mov
mov
pop
push
insb
push
test
pop
adc
loopne
and
mov
jb
push
fs
sub
cmp
inc
icebp
pushf
sar
daa
and
xor
orl
push
mov
js
sti
mov
scas
dec
push
shrb
ret
and
mov
icebp
imul
aaa
icebp
out
pop
mov
xchg
xor
jnp
fcoms
arpl
xchg
sub
jmp
and
push
ret
jge
mov
sbb
leave
xchg
mov
ja
cs
ds
sbb
sbb
out
test
lret
jae
repnz
cmp
mov
cmp
mov
adc
stos
outsl
jae
stos
ds
add
jae
and
cli
dec
adc
pop
decl
movsl
in
and
in
jg
or
add
adcb
pop
movsb
sbb
mov
sbbb
adc
or
mov
pop
xor
push
lret
push
dec
push
mov
push
jmp
ds
or
pop
push
xchg
xor
push
ljmp
cmpsl
cld
lea
cmp
and
mov
pushf
pop
push
stos
jbe
xchg
mov
mov
jns
jecxz
fcoml
cld
push
mov
nop
mov
or
int3
adc
in
push
nop
loop
icebp
js
dec
ja
gs
in
xor
cmp
xor
cmpb
pop
cmp
inc
jae
andb
pop
aaa
repnz
inc
and
shlb
std
jb
dec
inc
out
sbb
jno
pop
fmul
cmpsl
and
mov
mov
pop
push
mulb
sub
out
pop
scas
dec
dec
mov
aas
cmp
lcall
out
mov
fcompl
push
sub
dec
add
pusha
test
adc
fsubrs
out
mov
mov
notl
jne
mov
into
fisttps
mov
loope
jl
adc
mov
inc
sar
cmp
out
pop
fsubl
adc
push
cmp
pop
and
jmp
fdivr
push
jne,pn
xor
pop
adc
cmc
bound
in
push
shll
arpl
jne
dec
in
popf
xor
ljmp
add
fs
mov
or
inc
faddl
in
popa
lock
and
sbb
ret
mov
test
sarb
scas
mov
xchg
popa
sbb
sti
pop
into
hlt
fsubr
push
sahf
adc
mov
stc
jno
inc
xor
fisubs
ds
mov
jecxz
mov
jp
je
sub
cli
mov
dec
test
mov
loopne
test
pop
adc
sbb
mov
or
or
mov
lods
and
insl
imul
mov
cwtl
repnz
cld
outsb
scas
and
add
add
nop
pop
mulb
iret
jge
add
xchg
xchg
imul
dec
cmc
cmp
sub
gs
mov
dec
adc
ja
push
add
adc
dec
push
ljmp
dec
outsb
scas
inc
int
out
sub
lock
jmp
xchg
inc
or
cs
and
cld
adc
lods
test
jo
inc
mov
mov
push
pop
sahf
mov
or
int
and
out
pop
addr16
lods
ss
push
dec
es
adc
xorb
mov
mov
cmc
dec
cmpsb
inc
push
jecxz
das
and
in
pop
jge
mov
push
push
lds
arpl
call
xor
out
not
pushf
out
inc
ficomps
test
xchg
fs
sbb
loop
aas
adc
dec
mov
sar
arpl
sub
enter
jbe
xchg
in
lahf
stos
jle
rcl
pop
push
icebp
ja
push
lds
jae
insb
and
xchg
jae
dec
mov
sub
mov
cmp
outsl
data16
scas
pop
jbe
sti
mov
mov
daa
add
push
rcll
repz
jb
fcoml
pop
mov
pop
inc
ds
je
mov
pop
cmp
sub
pusha
cmp
jae
testb
mov
push
aad
aaa
rcrb
aaa
xor
rorb
mov
mov
pop
scas
cmp
shrb
subl
add
dec
nop
dec
sub
mov
mov
mov
push
mov
or
aad
cmp
pop
and
pop
jb
lret
inc
mov
dec
decb
lret
adc
inc
cmp
inc
fistpll
push
lfs
outsl
and
stc
clc
insb
or
inc
orb
or
mov
jmp
in
or
and
sbb
dec
push
fimuls
and
xor
sbb
xchg
xor
or
idivl
xor
push
ja
outsb
lret
in
in
mov
push
sub
mov
negb
push
mov
sbb
push
pushf
lea
out
ss
push
call
sub
push
or
fisttpl
das
mov
jns
or
scas
sti
xor
xor
into
push
xchg
shlb
xchg
mov
sub
cmp
push
push
loopne
pop
mov
jo
or
movaps
sbb
shr
mov
adc
lret
mov
inc
jge
cmp
adc
rorl
insl
mov
xor
loop
jg
cmpsl
mov
test
je
pop
and
shll
adc
xchg
push
jno
mov
cmpsl
mov
xchg
aad
jns
pop
pop
dec
repz
rcrb
and
and
or
jl
add
xor
jb
push
decl
dec
das
stos
mov
not
jns,pn
and
std
shll
and
xchg
in
popa
push
aaa
popf
popf
pop
add
shll
scas
inc
lds
cmp
bnd
aad
mov
xchg
cmp
lret
fistpl
in
inc
mov
bound
sbb
sahf
and
push
sub
xor
inc
cmp
jb
cltd
ret
pop
xchg
fwait
mov
xlat
in
or
addr16
outsb
fnstsw
xchg
scas
adc
int
out
jg
lret
add
icebp
inc
sbb
and
xchg
lret
add
dec
sarl
and
and
dec
imul
pop
cmp
hlt
test
pop
stc
test
jecxz
sbb
and
cmp
dec
xlat
mov
shll
fimull
jbe
xchg
adc
stc
xchg
popa
or
aad
cli
sbb
push
cmpsb
mov
dec
sbb
lcall
mov
pop
out
jmp
mov
mov
repz
in
in
jnp
test
hlt
stc
movsl
dec
adc
adc
daa
das
pop
fsts
xor
or
in
mov
sub
fcompl
mov
icebp
ret
add
out
sub
sbb
andb
out
idivl
rorb
int3
insb
pop
lret
mov
push
imul
push
daa
inc
fdivl
dec
mov
pop
push
inc
jmp
mov
scas
sbb
cmp
out
out
dec
cmc
cwtl
faddp
dec
int
mov
and
sbb
xchg
lea
shll
mov
jge
dec
pop
test
addr16
jb
pushf
out
jmp
out
push
pop
adc
mov
xor
dec
lods
sbb
fstpt
cmpsl
mov
pop
or
fcmove
jg
and
cmc
inc
sub
popa
mov
jmp
es
sub
jge
imul
scas
push
sbb
or
jp
fcoms
push
test
jl
daa
xor
lcall
stos
das
ficomps
outsb
mov
push
popa
shl
test
in
mov
imul
mov
lock
fstps
popf
test
push
xchg
sub
xchg
cmpsl
insb
sub
and
ret
bound
repz
dec
cmp
shl
push
inc
cmp
call
jp
cli
loope
and
mov
sbb
rol
test
sbb
repnz
jmp
xor
fisubs
push
cs
mov
stos
aad
jle
pushf
mov
shlb
mov
imul
test
mov
push
inc
sub
mov
mov
cltd
xor
add
sub
add
sbb
stos
push
mov
ror
insb
out
xor
imul
jb
es
fneni(8087
adc
add
test
pop
jle
and
addr16
or
fucom
cmpsb
lock
cmpsb
mov
inc
pop
push
aad
cltd
sub
push
mov
in
pop
pop
mov
inc
cli
adc
aas
or
add
mov
sub
sub
rol
das
and
movb
gs
das
mov
push
imul
clc
out
sar
fs
sahf
insb
push
and
xor
lds
mov
sub
push
pop
sbb
outsb
cmc
insl
in
xchg
mov
cmp
daa
lods
lock
mov
cwtl
jne
out
stos
pop
jb
out
cmp
dec
icebp
mov
cvtps2pi
daa
test
imulb
xor
xor
jp
dec
leave
out
or
imul
adc
dec
insb
ficompl
imul
pop
adc
mov
ret
adc
js
sahf
cmp
leave
out
pushf
pushf
lock
into
outsb
or
addr16
dec
xchg
test
fldt
in
je
shr
xchg
test
or
adc
or
data16
sbb
mov
pop
cs
pop
fwait
lea
xchg
or
shr
sbb
std
ja
xchg
dec
out
imul
mov
jne
cmpsl
sarl
push
rol
push
inc
lock
mov
jbe
inc
or
popa
lods
inc
in
jne
arpl
lea
gs
xor
mov
or
es
xor
std
dec
fcompl
inc
inc
push
data16
add
mov
jge
mov
pop
popa
pop
scas
std
mov
arpl
push
lret
aas
stos
mov
or
cmp
pushf
sub
mov
movb
iret
lret
mov
adc
mov
clc
mov
or
pop
lock
sbb
mov
insl
lcall
fs
movl
call
leave
and
out
xchg
movsb
cmp
fiadds
dec
aam
cli
jge
jle
push
mov
ret
xor
mov
aam
movsb
hlt
leave
xchg
inc
pop
out
pusha
pop
add
mov
movsl
test
lea
add
or
mov
fisttpl
cwtl
sub
cwtl
ret
je
leave
dec
clc
cmp
cmpsb
pop
xchg
jge
out
xchg
inc
inc
dec
mov
mull
mov
aas
iret
jne
es
pushf
movsb
mov
in
xor
dec
xor
popa
outsb
mov
leave
pop
jecxz
outsl
xor
insb
imul
popf
add
fstps
xor
int3
loop
mov
movups
int3
test
mov
clc
psllw
mov
adc
icebp
and
pop
sbb
push
mov
daa
fsts
pop
imul
mov
imul
movq
pusha
inc
scas
enter
jg
adc
pop
inc
push
nop
movsl
adc
repz
adc
push
nop
mov
jmp
push
andb
out
pop
rorl
icebp
aaa
sub
inc
dec
scas
pop
push
cld
fwait
xor
cmc
sbb
adc
dec
jle
iret
or
xchg
jl
les
dec
push
inc
mov
dec
mov
lret
dec
cld
fs
mov
std
mov
outsl
mov
lods
adc
xchg
and
inc
or
pusha
repnz
je
mov
repnz
clc
and
out
f2xm1
and
test
jl
mov
in
pop
and
fisttpll
pop
mov
mov
jnp
test
inc
pop
add
insb
xor
andb
arpl
cmp
jecxz
fwait
mov
jmp
test
arpl
push
inc
pop
adc
aaa
xor
popf
stos
adc
je
mov
mov
mov
mov
jg
enter
test
dec
test
pop
leave
jbe
cltd
xor
testb
arpl
inc
mov
sub
insb
inc
mov
mov
inc
add
add
sub
mov
push
jl
nop
sti
mov
std
loopne
add
insb
adc
jb
mov
sbb
in
push
or
mov
scas
pop
xchg
jnp
jmp
movsl
or
push
cmpb
sbb
ret
imul
cli
js
inc
sbb
jnp
cmp
outsl
adc
std
push
sub
mov
cli
mov
mov
mov
add
fstpl
imul
pop
mov
ret
mov
push
pop
push
sub
js
add
pop
stos
mov
dec
sub
stos
pop
repz
xchg
mov
jbe
mov
mov
push
xchg
dec
xor
or
jne
sarb
lods
pop
sbb
ss
aas
iret
mov
shl
push
cmp
out
das
mov
cmp
sub
sahf
rorl
aaa
dec
or
jnp
loope
push
jl
clc
or
mov
movb
adc
shl
stc
mov
cmp
xchg
in
cmp
mov
add
ficompl
sbb
std
add
push
fildll
rorl
mov
mov
loopne
mov
mov
jnp
dec
dec
pop
or
inc
add
rorb
movsl
adc
or
pop
push
push
mov
outsb
gs
fldt
or
icebp
out
sbb
xchg
sub
pop
ja
jmp
or
push
movsb
ljmp
pop
push
pusha
xchg
jl
pop
lcall
sub
push
dec
movsb
orb
jae
mull
data16
push
fwait
fs
xor
js
xchg
jg
test
lret
pop
sbb
jecxz
cmp
jae
in
fnstenv
cmp
xchg
js
insl
dec
sti
pop
fdivrl
or
push
enter
addr16
jl
xchg
in
and
jle
scas
sarl
ficoml
aad
jbe
push
insl
xchg
scas
mov
cmpsl
stos
mov
add
xor
cli
outsb
xor
icebp
mov
loopne
or
inc
nop
and
js
xlat
sahf
sbb
cmp
aad
sbb
sbb
andl
mov
sub
aad
loopne
leave
adc
sbb
dec
lock
mov
sbb
fisubrl
call
pushf
adc
scas
jle
xchg
pop
outsb
cmp
lret
or
lea
cmp
inc
dec
xor
in
insb
into
int
jp
dec
cmc
jge
lcall
xchg
and
in
xlat
loopne
mov
sbb
inc
cld
in
es
cmp
in
xchg
xorl
sbb
clc
jl
into
shlb
mov
or
int
inc
cmp
sahf
test
scas
adc
loope
bound
dec
cmpl
mov
scas
inc
add
imulb
mov
dec
jo
insl
adc
stc
stos
sbb
xor
dec
mov
inc
cltd
scas
mov
int
mov
or
divl
mov
test
aam
les
sbb
mov
stc
xor
or
sbb
out
xor
and
add
mov
cmpsl
shlb
fcompl
in
xor
scas
xlat
rolb
jnp
xorb
xor
mov
add
dec
enterw
es
fdiv
mov
outsb
mov
es
mov
cmp
mov
enter
aad
and
or
add
xchg
stc
dec
xchg
jo
dec
xchg
cmpsl
cld
jp
add
testb
jmp
mov
gs
xor
inc
jno
sub
lea
es
negl
push
addr16
mov
in
aaa
ja
mov
inc
push
sub
xchg
jae
test
xor
dec
xchg
mov
rcrl
mov
outsb
filds
xorl
push
add
aas
push
cmp
mov
movsl
enter
jge
out
xor
mov
and
and
xor
lods
adc
adc
ja
je
adc
inc
aam
cmp
sbb
stos
iret
cmpsl
imull
cmp
enter
iret
out
xchg
mov
mov
xor
cmp
mov
jmp
movsl
jno
nop
aas
ss
push
jbe
imul
inc
add
aas
sub
push
mov
iret
inc
push
cltd
xchg
scas
test
lret
popa
sti
or
in
xor
sbb
add
xor
and
and
jp
or
cmpsl
mov
mov
rcl
ja
repz
test
mov
mov
cmpsl
sub
xor
shrl
cmpsb
and
inc
mov
push
roll
pop
pop
adc
push
and
pop
inc
xchg
and
fcom
push
mov
pop
push
addr16
lds
stos
xor
xchg
leave
ret
push
xor
xchg
clc
stos
xchg
push
lods
cltd
jbe
push
pop
and
xorl
cmpsb
in
faddp
je
jle
jae
push
fwait
jmp
test
cmp
jg
loop
pop
pop
inc
loope
loopne
jmp
cwtl
inc
dec
sub
stc
cmc
and
add
push
mov
cmpsl
call
imul
inc
scas
or
shll
jae
test
sbbl
xchg
daa
xorl
and
popa
les
test
pop
jl
addr16
mov
push
xchg
cld
add
xchg
cli
aam
adc
enter
mov
inc
sub
in
sbb
sbb
in
mov
aaa
psraw
xor
scas
js
mov
mov
imul
pop
and
mov
mov
pop
lret
test
mov
je
scas
dec
push
mov
mov
add
ffree
and
ret
in
pop
js
outsl
icebp
ret
mov
das
outsl
cmp
inc
sub
lock
pop
outsl
xchg
leave
out
lea
dec
sahf
inc
fwait
aas
and
mov
inc
ficompl
ffree
adc
mov
mov
xchg
repz
add
nop
mov
loopne
xor
lock
inc
sub
lret
shrb
shrb
mov
xchg
push
sbb
call
sub
clc
ljmp
push
xchg
mov
mov
xor
dec
cmp
sub
pushf
outsb
ret
sub
lret
xchg
mov
xlat
aad
dec
mov
xchg
hlt
fnstcw
push
push
lock
xor
jne
shrb
in
lods
mov
xchg
sti
adc
jle
xchg
mov
jae
icebp
push
fwait
push
inc
jmp
inc
daa
push
jl
rcll
mov
cmp
xchg
xchg
mov
popa
enter
scas
rcrb
pop
cli
xchg
out
stc
lcall
insl
aam
adc
sub
push
mov
jae
push
call
dec
into
adc
insl
loope
inc
adc
icebp
enter
fistps
jle
cmp
aad
adc
xor
pop
push
or
push
push
jge
mov
adc
ret
or
jle
incl
cmp
pop
push
mov
mov
xchg
mov
into
mov
mov
mov
cmp
push
push
icebp
mov
jo
push
xchg
loope
and
xor
iret
adc
mov
subb
cwtl
ret
movsl
or
mov
testb
push
jb
mov
cmp
xchg
aas
and
push
sbb
and
jge
mov
or
xchg
cmpsl
iret
cmp
pop
mov
adc
fwait
ljmp
lods
adc
lret
sbb
sub
popa
xchg
fsubs
sub
mov
push
xchg
test
test
ficoml
cmp
dec
add
push
sub
fstl
mov
adc
cmp
sbb
jb
jge
mov
subb
xor
mov
ds
mov
xlat
sbb
dec
jmp
cmpl
outsl
cmp
jo
fisttps
inc
mov
xchg
testb
dec
subb
mov
sarb
loopne
mov
jle
popf
dec
add
test
jmp
sub
mov
add
test
std
subb
pop
push
push
mov
insb
test
or
xchg
dec
dec
pusha
mov
bound
sub
or
cld
shl
xchg
xor
aas
mov
pushf
mov
lods
sbb
xchg
out
dec
sub
pop
movsl
scas
and
in
fiadds
adc
and
mov
cmc
test
and
cs
mov
cmpsb
xchg
insl
jb
sti
push
idivb
loopne
push
add
mov
lea
and
testb
aaa
mov
inc
cld
stos
add
fbld
leave
mov
lahf
clc
out
jne
mov
fbld
outsl
cmpsb
hlt
sarb
push
or
insl
xchg
out
sbb
stos
rcrb
cld
adc
lods
or
or
jb
psubsb
adc
jmp
sbb
les
fdivl
cltd
pop
clc
sbb
jne
xchg
mov
mov
dec
negb
xlat
negl
addr16
cltd
shlb
sti
popa
mov
inc
jmp
ja
mov
subl
push
fadd
push
enter
jl
insb
ljmp
dec
movsb
xchg
xlat
cld
xchg
pusha
subb
outsl
mov
loope
test
xor
inc
iret
sub
incl
clc
shl
movsb
add
mov
mov
mov
int
adc
in
pop
sbb
hlt
xor
xchg
jge
xchg
int3
out
or
xchg
test
mov
and
or
rcll
inc
fs
lcall
test
xchg
jl
mov
or
in
or
aaa
mov
and
lds
mov
lods
mov
call
outsb
or
add
push
sti
sti
cld
adc
dec
lods
das
add
out
out
push
xor
pop
out
sar
shlb
sub
cmpsb
push
pop
ret
scas
out
add
lods
cs
jg
ficompl
cwtl
cld
jae
stc
or
scas
into
and
sbb
cwtl
cld
outsb
mov
inc
mov
cli
ss
pusha
mov
adc
mov
sbb
test
outsb
lahf
rolb
sub
xchg
imul
sub
push
fidivs
aad
mov
push
dec
leave
je
in
lahf
mov
jns
in
pop
subb
movsl
insb
pushf
sbb
xchg
arpl
ss
or
cmpl
mov
inc
mov
sub
push
testb
test
stc
nop
pop
jnp
js
sbb
out
icebp
push
test
daa
inc
pushl
lds
nop
and
jmp
dec
dec
mov
dec
pop
cli
add
daa
nop
mov
pop
dec
push
push
jmp
adc
push
push
xor
cwtl
outsb
ror
push
push
repnz
xlat
lcall
call
xchg
mov
popf
shlb
pop
fsubp
push
pop
into
loope
cltd
pop
fldt
scas
push
bound
mov
cmp
cltd
shll
pusha
popl
mov
push
data16
cmc
test
pop
pop
cmp
outsb
and
ja
adc
mov
pop
push
fisubrl
insb
movsl
push
xlat
clc
aam
das
cld
mov
fucompp
rclb
dec
imul
fcomps
ljmp
pop
push
lds
out
xchg
push
aas
test
dec
arpl
stc
std
xchg
cmpsb
dec
loop
jecxz
and
std
push
mov
mov
aam
test
sub
test
sub
ss
push
data16
int
or
or
jl
iret
jbe
rclb
sbb
jbe
mov
repnz
in
fstps
cmove
or
lea
add
sbb
negb
mov
cmpsl
aad
pop
xchg
jp
lret
pop
mov
push
les
adc
push
sub
or
adc
mov
mov
dec
push
xchg
sub
and
test
popf
adc
xor
sub
loopne
icebp
and
or
scas
xchg
mull
mov
xchg
mov
xchg
or
mov
jnp
mov
sbb
push
add
addr16
scas
stc
stc
inc
mov
adc
mov
push
rorb
movsb
xor
ficoml
inc
and
xchg
aaa
jp
insl
fsubr
or
jecxz
pop
pop
add
out
mov
popa
mov
fs
mov
mov
notb
mov
mov
fisubl
cmp
xor
push
jno
xor
jp
popf
fcmovne
sbbb
in
cwtl
inc
push
repz
lock
adcb
mov
dec
dec
sub
loope
mov
out
pop
out
inc
scas
jnp
je
test
mov
cwtl
repz
dec
sub
js
pop
cltd
inc
out
xor
add
mov
jg
mov
push
push
mov
push
sub
mov
mov
out
sbb
push
movsl
xchg
test
push
sub
push
fwait
mov
outsb
adc
ret
cmp
leave
push
int
mov
jmp
ljmp
cltd
shrl
scas
xlat
in
adc
jo
jnp
out
arpl
push
insl
or
addb
and
xchg
xor
add
cli
lock
mov
sub
aaa
jp
push
in
xlat
inc
inc
and
test
int3
iretw
pop
xchg
adc
fisubrs
push
jns
addb
sub
inc
scas
js
fadd
and
lds
xor
lret
adc
mov
repnz
frstor
add
push
cmpsl
xlat
and
pop
and
mov
adc
and
mov
je
cmp
out
imul
xor
mov
call
dec
xor
mov
cmp
test
imul
push
ljmp
ja
es
mov
xchg
push
adcl
sbb
ds
pop
or
lret
into
mov
jns
lods
flds
dec
cmp
mov
mov
push
jle
mov
cmp
out
pushf
fimull
cs
cmp
xor
cmp
push
mov
add
sub
enter
pop
mov
xchg
in
cltd
xlat
gs
push
sbb
movsb
pop
push
xchg
lods
sahf
push
int
sbb
dec
cmp
nop
adc
lods
mov
lret
movsb
jns
mov
or
pusha
outsb
bound
cli
mov
mov
inc
mov
adc
clc
idivl
push
pop
push
xchg
adc
addr16
pop
or
push
or
mov
mov
mov
mov
mov
sbb
fst
rcll
mov
outsl
addb
pusha
cmpsl
clc
inc
imul
iret
stos
xchg
xchg
mov
mov
imul
add
push
std
sbb
aas
jmp
and
xchg
jbe
in
jmp
add
xchg
test
xor
cli
xor
push
xchg
in
push
pusha
mov
mov
dec
or
outsb
cli
xor
inc
ret
cltd
jmp
insb
sub
xchg
dec
enter
dec
inc
addr16
subl
and
add
aad
jae
or
jae
ret
lcall
push
mov
sbb
xchg
in
mov
aad
jbe
or
add
popf
push
cmp
or
lods
movsb
pop
gs
shl
shr
xchg
data16
xchg
jge
mov
push
push
and
inc
pop
mov
cmp
jge
js
pop
xor
sub
neg
sub
cmp
or
sub
les
lcall
sub
pop
jg
inc
jge
je
and
push
test
mov
lret
fidivl
lds
add
cld
frstor
and
and
inc
test
add
push
mov
dec
test
lcall
aaa
xchg
cmp
js
movsb
jp
cltd
or
jnp
and
icebp
test
and
enter
adc
mov
adc
sbb
cmp
xor
sbb
inc
jle
loope
mov
xor
pop
xchg
pop
loope
shl
aad
mov
push
adc
into
je
xchg
jno
jge
loope
sti
out
aam
mov
std
dec
xchg
mov
cmpsl
sub
sbb
lcall
hlt
lock
arpl
mov
mov
div
adcl
cld
jne
inc
xchg
pop
cmp
mov
fisubs
jb
mov
ljmp
pop
into
outsb
pop
je
jg
nop
outsb
or
lods
imul
push
ret
mov
pop
out
pop
xchg
mov
std
icebp
in
pop
push
cmp
cmpsb
popa
mov
imul
jge
sbb
lods
or
xchg
pushf
data16
arpl
xchg
jp
sbbb
inc
dec
ss
or
cmp
adc
sbb
adc
cwtl
or
and
cmpsl
addb
mov
mov
enter
add
xlat
dec
push
push
and
jo
dec
shll
jno
pop
push
sar
jns
sbb
mov
and
movsb
sub
push
fbld
jmp
adc
ds
call
mov
popf
sub
xor
movsl
mov
sbb
adc
mov
jo
adc
jo
pop
cli
inc
push
inc
icebp
xchg
lret
sub
pushf
fiadds
arpl
les
ja
inc
dec
bound
add
xchg
or
sub
loop
stos
mov
jmp
mov
rdtsc
cmpsl
leave
jp
js
es
xchg
lock
fidivl
and
push
xor
outsb
dec
pushf
icebp
inc
dec
xchg
pop
movsl
add
cmp
movsb
sbb
das
add
jae
inc
jb
aam
dec
loope
sub
pop
test
aaa
xor
iret
jl
and
orb
adc
add
xchg
stos
rcrl
adc
fs
mov
and
mov
xchg
pusha
push
repz
and
jecxz
inc
nop
cs
int3
mov
mov
sub
mov
mov
pop
add
xchg
mov
cwtl
push
add
xabort
idivl
push
scas
or
out
insb
pop
or
ss
push
sub
push
mov
das
pop
out
arpl
cmpsb
jmp
push
dec
les
push
add
fildll
mov
xor
jmp
inc
sub
mov
cwtl
mov
ljmp
push
subb
adc
test
dec
lret
lret
sbb
push
sub
cmpsb
or
dec
shrb
popf
dec
sub
push
out
cbtw
lock
fwait
xchg
in
sbb
les
adcb
cwtl
xchg
dec
or
mov
mov
fldenv
and
xor
pop
xor
cmpsl
cmc
pop
int3
ret
inc
xor
push
lock
push
arpl
shlb
cltd
or
jp
cwtl
cmp
loope
aad
jecxz
push
cmp
lret
sti
rclb
mov
hlt
cmp
mov
addr16
xor
sub
push
mov
inc
int3
ljmp
punpckhdq
and
pushf
insb
fs
jo
xchg
sub
push
or
lcall
dec
mov
mov
mov
xor
ficompl
mov
jnp
je
lock
clc
aaa
jge
mov
xor
cmpsl
push
jae
imul
add
mov
icebp
adc
scas
cmp
ja
mov
adc
repnz
cli
inc
sbb
sub
inc
xchg
aas
pop
in
ljmp
nop
fwait
cmp
jnp
divl
or
hlt
ljmp
imul
scas
jne
out
cmp
push
sub
pop
test
or
mov
ret
pop
adc
mov
adc
pusha
xor
sub
xor
push
shlb
pop
das
inc
push
dec
jne
mov
cs
pop
loope
roll
test
and
mov
xchg
imul
or
fs
movsb
jl
jno
orb
imul
pop
pop
inc
aad
mov
xchg
fdivrs
int
mov
push
jo
stos
in
xchg
repz
inc
lahf
mov
adc
jno
pusha
sbb
ljmp
in
sub
sahf
inc
sub
adc
in
movsb
pop
fildll
mov
outsl
adc
inc
jp
mov
push
dec
mov
push
adc
sub
add
hlt
sbb
jmp
mov
sub
dec
and
fsts
mov
inc
lret
dec
addr16
jne
andl
mov
add
xor
loop
or
aad
imul
push
cmp
or
adc
repz
rclb
test
mov
sbb
and
shr
push
aad
xlat
lcall
gs
call
jnp
xor
jle
push
push
fadds
mov
push
js
jmp
or
scas
sbb
adc
mov
cmp
jae
out
ret
incb
lahf
jecxz
mov
sarl
cmp
pop
or
jo
fbstp
pop
test
mov
aas
nop
add
add
aam
lods
xchg
dec
ret
pop
repz
mov
adc
pushf
fst
decb
inc
sbb
arpl
jl
jb
mov
fisubs
mov
lcall
mov
out
xchg
mov
jmp
lcall
into
push
repnz
push
mov
sarb
mov
cmp
ficoms
test
cmp
inc
rorl
and
outsl
inc
loop
or
or
shll
mov
in
repz
adc
jbe,pt
cmp
fdiv
shrb
imul
and
push
fwait
clc
pop
les
ds
bound
push
fadds
pop
jns
push
movsl
fsubr
das
call
std
jbe
movsb
pusha
roll
mov
loopne
ret
sub
xchg
lock
add
test
xchg
xor
cmpsb
pop
int3
les
xchg
add
repz
in
pop
jge
lds
mov
outsb
lds
imul
mov
imul
stos
test
xchg
adc
adcb
ret
out
and
arpl
mov
push
loopne
push
hlt
fmuls
adc
test
adc
adc
stos
dec
or
out
dec
test
lods
notl
cmp
outsl
mov
aas
pop
cmp
pop
xor
out
scas
ja
scas
int
rclb
inc
sbbb
pop
ljmp
xor
inc
sahf
bound
mov
outsb
sti
xor
popa
jne
cmp
int
iret
cmpsl
or
rcrb
popf
rcrb
cmpsb
xlat
jmp
mov
loope
jb
imul
cmpsb
and
add
scas
mov
ret
cltd
sub
pop
sub
mov
loopne
sarl
inc
imul
mov
ror
and
mov
movsb
fcmove
fnstsw
lret
push
adc
dec
fcmovnu
inc
sahf
push
cmp
andps
push
daa
mov
xchg
sub
loope
xor
hlt
push
sub
cmp
je
test
incl
aad
jmp
test
push
sub
fwait
xor
std
cmc
stos
imul
inc
fwait
iret
shl
lret
pop
out
mov
jl
movsb
hlt
pushf
adc
call
les
push
clc
inc
int
stc
or
mov
aad
mov
xor
js
mov
je
lahf
adc
gs
imul
ljmp
and
fsubrl
mov
jno
in
movsb
fcomi
adc
xor
push
xchg
mov
pop
mov
xchg
out
jmp
jae
sahf
jg
test
setns
ficoms
lea
xor
pop
loopne
mov
and
xchg
inc
dec
fucomip
cli
dec
mov
xchg
xchg
xor
in
push
xchg
in
xchg
dec
mov
aad
cmp
push
pop
add
sub
gs
pop
xchg
out
jecxz,pt
jno
fnstcw
mov
popl
xchg
fld
sahf
mov
repnz
xchg
add
out
push
push
or
retw
push
aas
xchg
das
and
out
daa
mov
inc
fisttpl
sub
xor
inc
out
in
test
lcall
stos
stos
jno
ljmp
into
movsb
loop
sub
mov
inc
in
sarl
adc
push
rep
push
mov
cmp
or
inc
mov
data16
mov
sub
mov
add
cmp
jae
cmpsl
clc
mov
mov
scas
inc
je
dec
pop
bound
enter
inc
js
or
and
into
jl
push
sahf
lcall
or
loopne
repz
jns
dec
and
daa
sub
insl
ret
sahf
sti
xchg
or
adc
or
pop
inc
lods
mov
ret
daa
mov
sahf
inc
insl
add
rcrb
shlb
mov
xchg
rorb
mov
xchg
imul
sbb
dec
or
ds
arpl
in
or
rorl
mov
dec
cmp
repnz
sti
sub
and
pop
adc
sbb
jp
add
sub
mov
jb
jmp
pusha
push
test
xor
test
mov
repz
leave
xchg
mov
xchg
mov
cmpsl
pop
fwait
and
jno
or
stc
inc
and
mov
aaa
stos
push
in
or
int3
jnp
lcall
loope
inc
fldenv
bound
cmpsb
mov
leave
and
repz
jne
inc
ja
ljmp
out
test
lock
test
loopne
sbb
inc
in
adc
pop
and
aas
pop
in
std
mov
sar
push
dec
inc
inc
and
pop
cmp
xlat
test
add
fstpl
xor
pop
xor
andl
imul
ss
mov
in
pop
rorb
dec
add
mov
in
jle
pop
sti
nop
sub
cmp
and
mov
jl
add
mov
cmpsl
test
mov
icebp
gs
push
adc
daa
enter
or
ja
inc
xlat
sbb
test
xorb
sub
jmp
and
cltd
mov
cwtl
cmpsb
mov
xchg
push
cmp
sbb
mov
jb
jns
inc
sbb
lahf
pop
adc
fildl
pop
rorb
decb
sbb
or
or
icebp
pushf
ljmp
mov
push
mov
sbb
and
mov
jnp
sti
ds
xor
mov
js
shrl
cmp
mov
int
movsl
sub
arpl
in
lock
or
lcall
ljmp
sbb
aaa
sarl
lock
ficomps
inc
add
inc
dec
push
addr16
lcall
pop
inc
mov
xlat
sub
lods
stc
stos
popa
imulb
shlb
pop
xchg
fwait
cmp
leave
push
nop
adc
pusha
sub
roll
repnz
testl
jle
and
iret
and
ret
sarl
adc
and
pusha
push
mov
push
cmp
and
mov
cmpsb
ja
ret
mov
lds
xchg
das
push
sub
pop
mov
je
sbb
adc
into
adc
mov
sub
aaa
cmpsl
mov
insb
lahf
je
sub
mov
push
js
mov
inc
pusha
mov
and
mov
jge
ror
push
aam
out
jno
pop
xchg
sub
jecxz
rep
imul
push
sub
cmpb
adc
and
or
xchg
xchg
pop
mov
adc
inc
test
movsl
inc
mov
and
push
mov
cwtl
jb
adc
ret
mov
daa
jnp
add
cmp
or
ficompl
xchg
scas
inc
arpl
filds
dec
pop
lcall
stc
push
mov
frstpm(287
mov
cmp
stos
js
jno
dec
lds
pop
dec
and
out
sub
adc
mov
dec
add
or
sbb
sub
inc
sbb
cmc
sbbl
inc
popa
aas
dec
jge
mov
stc
iret
mov
in
cld
and
ja
fwait
push
ljmp
repnz
lcall
movsb
inc
out
inc
adc
in
adc
int3
shll
fsubs
mov
fistps
mov
mov
adc
rol
dec
fsubl
and
out
adcl
cmp
add
dec
xchg
sbb
fnstsw
les
xor
sub
bound
loopne
inc
push
sbb
xor
out
inc
pushf
or
and
jno
ds
xchg
fists
jp
cwtl
cmpsl
mov
jns
enter
in
in
cwtl
repz
add
push
mov
jbe
ja
xchg
add
xchg
stc
cmp
lds
nop
outsb
out
add
insb
cmp
add
gs
shlb
and
out
mov
lock
lds
xchg
je
or
sub
adc
inc
mov
in
int
jl
cmc
insb
stc
xchg
pop
xor
mov
outsl
ja
fisubrs
pop
inc
andb
sub
adc
lods
call
fadds
dec
loope
mov
int
stc
out
aad
stos
mov
mov
mov
cs
push
into
sbb
fadds
xchg
mov
push
add
sbb
rclb
xor
dec
fisubrl
call
loop
or
aad
inc
pop
push
fwait
inc
push
cli
lahf
dec
mov
sti
aad
and
add
in
xor
std
pop
sti
lret
dec
shll
inc
adcb
mov
or
cmp
fisubl
xor
out
out
enter
jbe
inc
and
pop
sti
or
dec
nop
pop
xor
mov
lods
mov
popa
adc
mov
in
inc
and
jecxz
cltd
test
icebp
sub
scas
rcrb
xchg
mov
mov
stos
icebp
and
testl
cli
mul
xor
sahf
nop
loop
notl
push
dec
loopne
es
xchg
jle
repnz
push
lret
bound
push
nop
fbld
dec
in
mov
dec
sti
mov
inc
and
inc
dec
iret
cmc
js
pop
clc
shl
aas
out
add
dec
pop
fwait
lret
jge
shrb
aad
inc
xchg
sub
pop
aam
inc
repz
mov
popa
mov
push
push
xor
hlt
lret
sbb
cmp
sahf
movsl
inc
sub
lea
and
adc
adc
inc
pusha
outsb
jp
cmp
add
addr16
xchg
pop
ja
clc
mov
push
ret
cmpsl
outsb
and
jns
push
nop
hlt
ss
sbb
xchg
aam
mov
sub
inc
icebp
xorb
rcrb
negb
leave
lahf
lods
adc
pop
push
fidivrl
cltd
mov
in
sub
cs
hlt
sbb
mov
jg
aad
dec
in
adc
sahf
aaa
jmp
insb
jmp
inc
aas
out
ret
cs
push
pop
in
scas
imul
nop
or
xchg
cmc
cmc
adc
loope
arpl
jmp
movsb
inc
xor
xchg
push
xlat
mov
das
xchg
mov
mov
pop
sti
push
push
xorl
aas
push
fnstcw
mov
aas
xchg
mov
lods
out
pop
cmp
popf
fdivs
mov
cwtl
and
push
xchg
pop
mov
jbe
insl
adc
push
stos
subb
dec
pop
testb
push
loop
push
les
cmp
fsubl
xchg
sbb
xchg
cmp
sahf
and
jo
ret
cmp
lds
data16
sti
lds
xchg
adc
dec
mov
stos
movsl
call
push
subl
mov
aad
mov
push
fsts
jbe
mov
stc
sbb
mov
cmp
cmp
imul
sbbb
mov
pop
rorb
das
in
test
test
push
lds
bound
cmp
aam
jno
in
xor
add
pop
pop
sub
inc
mov
sub
mov
cmp
out
cmp
or
mov
dec
mov
icebp
pop
shlb
cmp
and
fisubrs
mov
mov
sahf
fldl
xorb
es
xlat
pop
or
lret
and
adc
adc
adc
test
cld
sbb
mov
sub
add
inc
stc
leave
sahf
data16
xor
lea
xor
and
movsl
adc
push
sub
and
rorl
add
sbb
and
sahf
dec
jle
insl
jne
mov
mov
push
stc
addr16
add
test
sub
loopne
leave
add
insl
or
push
xchg
ljmp
loope
sbb
ljmp
stc
dec
pop
dec
jo
loopne
mov
pop
popf
stc
scas
lea
cmp
and
int
popf
das
inc
mov
sbb
pop
shrb
int3
ja
out
add
leave
jle
push
shl
into
or
sbb
inc
mov
rcrb
or
ret
push
mov
scas
xchg
aas
sbb
ja
add
cmpsb
out
outsl
jg
sub
pop
gs
and
call
sub
call
test
je
mov
inc
xchg
and
adc
test
jne
jb
mov
shrb
mov
popl
jmp
in
push
outsb
test
pop
mov
ret
mov
and
xchg
aad
mov
push
lods
sub
pop
lds
pop
ret
pop
mov
aad
out
sbb
inc
out
jge
lds
or
mov
test
cmp
inc
sub
in
rorb
aas
sub
pop
sbb
xchg
out
mov
pop
test
fsubl
adc
loopne
loope
cmp
dec
pusha
sbb
inc
adc
mov
adc
mov
cld
adc
pop
pop
out
cmpb
mov
fistps
imul
arpl
push
fsub
gs
dec
outsl
outsl
cmpsb
push
add
add
sbb
sub
cmp
and
pop
cmp
outsb
loopne
lods
sub
dec
add
xchg
push
idiv
mov
jns
mov
sti
popa
push
mov
in
push
or
add
dec
mov
cmc
cmp
pushl
mov
mov
push
xchg
cmp
mov
movsb
pushf
or
jg
enter
jbe
jne
adc
movsl
jg
xchg
add
lret
sub
insl
mov
mov
ljmp
movsl
or
adc
add
push
push
push
scas
cmp
out
inc
cli
or
mov
xchg
leave
inc
int
clc
stc
adc
enter
mov
subl
lcall
das
in
mov
insl
rorl
ret
pop
sub
test
lret
arpl
mov
jmp
mov
xchg
pop
jg
iret
lods
movsb
out
hlt
pop
xchg
loopne
and
and
jl
mov
inc
pushf
inc
add
mov
loope
ljmp
test
inc
idivb
dec
test
fdivl
mov
inc
outsl
push
cli
sbb
jns
fsubr
js
lret
jle
sub
mov
xor
push
das
pop
dec
or
hlt
dec
xchg
rcll
pushfw
out
mov
movsl
ret
pop
sub
adc
insl
xor
fcoms
data16
icebp
jecxz
rorl
push
lods
add
test
stos
mov
and
nop
rclb
xchg
scas
jnp
push
iret
xor
xor
iret
in
push
rcll
add
test
outsl
les
mov
shrb
sahf
add
push
sahf
pop
ja
mov
jb
pop
orb
inc
call
push
aad
pop
cmpsl
lret
test
fisubs
or
sti
cmpsl
jne
dec
outsl
adc
int
inc
leave
lea
lret
jge
inc
data16
adc
in
mov
mov
or
addr16
outsb
or
pushf
loopne
ficoml
push
lds
loopne
and
movsb
dec
lods
xor
fsub
je
pusha
mov
jo
and
cli
cmp
sbb
push
jecxz
dec
jg
stc
push
scas
popf
dec
adcl
sub
cmpsb
add
jo
lcall
cli
arpl
dec
xchg
adc
dec
daa
cld
sbb
and
imul
push
sahf
cmp
outsl
xchg
in
xchg
mov
sbb
or
pop
pusha
imul
xlat
arpl
mov
and
xchg
mov
sub
xor
push
pop
aaa
dec
aaa
movsl
subb
jne
cltd
ds
cmp
sub
lret
out
cmp
and
imul
jae
push
test
jp
add
adc
push
scas
mov
cmp
mov
inc
enter
mov
cmp
mov
xor
daa
jge
lret
cld
mov
pop
dec
mov
mov
and
mov
pop
or
xchg
fstpt
inc
pop
mov
cmpb
adc
data16
out
pop
pop
insb
cmp
pop
xchg
push
popa
in
out
pop
inc
call
jge
pop
pusha
adc
int3
sub
daa
mov
call
cmpsb
push
aad
lds
imul
push
loope
sti
sub
add
push
ret
or
std
cmp
mov
mov
push
sbb
sbb
pusha
lret
rolb
pusha
mov
sar
and
imul
jge
out
pop
push
or
jne
dec
das
stc
dec
es
lock
sbb
fistl
sti
sub
sbb
xchg
xor
sub
jg
jecxz
out
dec
bound
js
movsl
pop
arpl
cmc
xor
mov
test
pop
or
fwait
ret
fsqrt
mov
fldcw
xchg
mov
adc
sub
or
fidivl
lock
xor
out
mov
xchg
lret
add
or
xchg
jnp
adc
and
cmp
sbb
mov
jne
frstor
push
scas
xchg
mov
mov
mov
pop
mov
push
lds
gs
ficoms
mov
jb
xor
stos
pop
jmp
jnp
out
loop
inc
xor
sbb
xchg
xor
mov
add
fwait
je
loope
fldcw
insb
sarl
sbb
rclb
cmc
jle
pop
pop
jge
inc
dec
jl
cmc
aas
repnz
add
dec
pushf
mov
add
fildl
add
rcrb
imul
sbb
cmp
push
scas
sbb
jno
and
ret
fwait
or
movsl
pop
aas
mov
pushf
mov
xor
adc
daa
mov
cmp
sbb
jno
sbb
pop
mov
aas
jmp
aaa
xchg
and
and
je
lret
in
sub
xor
pop
in
sub
js
aam
pushf
xchg
dec
xchg
push
cs
mov
pop
lods
dec
mov
in
test
wbinvd
sub
pop
test
cmpsb
pushf
loopne
sub
sub
imul
cld
jl
dec
shlb
lds
adc
shrb
repz
push
xchg
ret
loope
repnz
xor
add
mov
mov
adc
cmpsl
xchg
xchg
inc
ds
lods
mov
imul
ret
or
nop
push
push
mov
lods
jl
out
pusha
dec
dec
push
clc
xor
fs
movsl
loopne
push
or
cmp
ljmp
xchg
push
inc
stos
das
ja
pop
push
psubd
push
test
push
sub
ljmp
jg
fcompl
jae
inc
sbb
idivb
call
or
xchg
aas
mov
adc
sub
scas
movsl
push
lret
pushf
lahf
cs
sbb
mov
movl
xchg
fnstenv
cs
out
rorb
sbb
sub
push
mov
stc
insb
out
testl
loope
mov
xor
sub
push
cmp
and
xor
outsb
mov
repnz
sub
mov
out
cmp
dec
stc
inc
aaa
jg
ficomps
xchg
movsb
mov
int3
mov
jne
out
sub
mov
js
pop
iret
pop
xchg
sub
dec
test
popf
and
int3
aas
out
scas
flds
push
jecxz
pop
sub
aas
xor
inc
in
dec
sub
into
dec
sub
xor
icebp
or
inc
loopne
pop
mov
push
mov
movb
jle
xor
jnp
pop
lret
sbb
popa
rep
xchg
jbe
sahf
popa
mov
fadds
sub
std
mov
dec
xor
mov
das
push
sub
out
std
filds
pop
xor
je
mov
loop
into
pop
jns
loopne
inc
outsl
in
lret
repz
leave
add
mov
les
fists
push
shrl
fldcw
sub
pop
sub
cs
adc
and
push
cmp
fdivrs
dec
jnp
mov
cmc
push
mov
mov
insb
or
jne
mov
pop
movhps
cmp
mov
lcall
cmp
dec
add
cmp
mov
mov
push
rcrl
xchg
and
jne
fwait
xchg
mov
xchg
inc
pop
mov
xchg
jns
push
lds
and
add
insb
lcall
mov
and
push
clc
mov
push
cmp
test
into
pop
leave
sbb
mov
out
pop
test
ret
ljmp
std
hlt
pop
cmc
imulb
pusha
leave
lods
xchg
cmpl
and
xor
ja
sbb
xor
inc
btc
movsb
mov
insl
or
sub
aas
xor
add
subb
or
inc
and
pop
shlb
or
nop
scas
jo
out
xchg
sub
fistl
jge,pn
out
push
jmp
push
std
sbb
cmp
or
nop
mov
ja
dec
mov
test
adc
pop
clc
sbb
loop
imul
push
jp
pop
mov
dec
cmp
cli
fildll
sub
lock
add
xor
cs
pop
mov
ljmp
inc
fiaddl
push
jbe
mov
lods
fmulp
les
jo
push
dec
mov
jmp
xchg
mov
je
ss
inc
cmc
jns
call
or
rolb
inc
mov
xor
dec
lret
xor
xor
orb
lea
loopne
stos
out
shl
jno
sarl
inc
sub
movsb
test
out
mov
sysexit
imul
and
pop
stos
fiadds
fistl
stos
lea
out
push
push
add
mov
fldl
lret
jge
pop
mov
add
lds
adc
ja
dec
cli
add
scas
add
jmp
push
mov
hlt
mov
mov
push
mov
xor
int3
popl
mov
mov
dec
insb
arpl
jno
sub
sar
fcoml
pop
ja
sahf
je
cmp
in
mov
add
popa
inc
xchg
dec
clc
jge
out
sub
sub
int3
add
testl
dec
imul
stc
sub
inc
pop
push
pop
std
sub
and
cmp
push
and
out
nop
pop
stos
jns
push
popf
lahf
sub
in
cmpsb
add
inc
add
das
popa
mov
mov
popf
inc
or
mov
sahf
push
dec
sub
int3
sub
in
int
jecxz
cwtl
sbb
sarl
repnz
test
adcl
js
outsl
push
lods
mov
sub
sub
and
mov
jb
insl
lret
xchg
adc
mov
xchg
popfw
jp
jmp
sbb
adc
inc
mov
push
sbb
sub
push
repz
lret
arpl
imul
out
aaa
icebp
arpl
outsb
lcall
mov
mov
jge
call
cs
scas
or
inc
xchg
xorl
cmpsl
or
push
xchg
mov
ret
xor
test
jns
frndint
jo
vpaddw
mov
ljmp
cmp
mov
insl
sar
adc
fcomi
xor
adc
imul
mov
pop
sub
pushf
mov
inc
fldcw
mov
xchg
ljmp
xor
scas
bound
imul
pop
dec
adc
aad
repz
leave
pusha
mov
leave
lret
movsb
jmp
mov
pop
mov
and
aaa
jbe
xchg
clc
test
sbb
mov
pop
add
and
inc
pop
mov
dec
push
rorb
movb
pop
stc
pop
or
cwtl
hlt
hlt
inc
imul
jecxz
mov
test
stos
inc
sbb
mov
push
aam
jmp
mov
mov
ficoml
or
mov
lcall
jmp
sahf
mov
dec
xchg
or
pop
or
js
adc
lret
decb
xchg
adc
adc
loop
push
pop
fsqrt
lahf
xor
and
mov
lock
in
cmc
mov
xchg
jmp
dec
fisttpl
dec
push
push
add
fxch
pop
std
popa
into
outsb
push
int3
add
xor
sti
ret
cmp
cs
int
sub
pop
les
jbe
xchg
mov
je
lea
sbb
testl
push
fsubp
sub
sti
jge
inc
movsb
mov
adc
stc
fsts
push
in
sbb
pop
add
xor
sbbl
inc
sub
or
adc
sbb
mov
cmpsl
imul
pop
fs
ficompl
ljmp
mov
outsl
mov
xlat
push
or
mov
add
scas
daa
mov
fisttpll
stos
mov
stc
sahf
call
add
mov
jg
push
add
stc
mov
sbbl
mov
pop
shrl
into
lahf
or
pop
fbld
fdivrl
bound
in
scas
ljmp
fs
xchg
out
dec
popf
out
sbb
adc
dec
adc
jnp
fs
in
sbb
shlb
sbb
cmpsb
pop
shll
cltd
inc
aaa
push
les
sub
sbb
and
aad
stos
cmp
jmp
pop
pop
mov
insb
lock
jp
cmp
test
or
imul
dec
mov
sbb
out
push
scas
cmp
out
cmp
xchg
test
xor
pop
out
dec
jle
push
mov
mov
adc
push
push
xchg
add
sbb
and
clc
xor
jp
mov
out
fs
jo
inc
and
jp
ret
mov
xchg
data16
out
insl
push
push
ret
aad
test
jmp
dec
test
mov
add
mov
sub
mov
cmp
push
push
movsl
sbb
adc
xchg
in
jmp
int3
add
add
insl
aas
jg
sbb
jbe
es
inc
xor
js
negl
add
sbb
pop
lahf
jmp
cmp
and
mov
dec
sub
lods
sahf
std
push
loop
sbb
loope
sbb
lods
push
aas
daa
lods
inc
js
shr
sbb
inc
pop
aam
repnz
jl
add
xor
mov
sub
dec
dec
xor
insl
loop
lods
iret
and
loope
xchg
sbbl
adc
xchg
loope
or
out
movsb
push
mov
mov
adc
repz
mov
add
inc
and
popl
insl
pushf
ss
and
lods
pop
mov
popa
stos
cld
rolb
ds
push
cwtl
lret
cmovp
movsl
add
stos
mov
std
xchg
ljmp
pop
cmp
inc
adc
cmp
push
jp
or
jb
lret
jle
sub
xchg
aam
aad
std
vmwrite
xor
cmp
mov
jp
shl
push
pop
add
xchg
cmp
or
mov
leave
imul
jns
xchg
lds
subb
test
dec
in
push
repz
shrb
and
sahf
add
sub
add
imul
in
cmp
jp
jge
imul
push
add
sub
and
mov
adc
jae
xchg
mov
dec
imul
mov
shrb
sub
cmpsb
and
test
pop
adc
or
cmp
imul
loopne
gs
sbb
movsb
leave
inc
cmp
dec
dec
into
cs
fisttps
cwtl
fwait
bnd
lcall
imul
lcall
pop
mov
jns
push
pushf
sub
fs
rcrl
out
mov
aam
outsl
bound
adc
adc
je
gs
and
les
sbb
aad
jnp
ret
dec
sub
loop
push
aam
out
and
popa
xor
mov
stos
mov
push
out
lcall
xor
jbe
cmpsb
xchg
or
stos
incb
inc
jp
mov
lods
add
loope
pop
push
sbb
add
dec
hlt
inc
xchg
shll
mov
push
imul
pushf
cmpps
sbb
and
inc
lock
rcr
out
ljmp
ret
mov
mov
sub
fisubs
jns
lahf
jmp
aaa
cmp
divb
cmpsb
stos
les
enter
adc
xchg
or
pop
cmp
inc
and
rcrb
jb
cmp
in
loopne
add
divl
inc
stc
inc
das
cmp
and
pushf
sbb
sbb
inc
mov
cmp
int3
das
repnz
xor
dec
aad
test
loop
inc
mov
std
aam
pop
mov
mov
xor
insl
or
mov
out
jno
ds
fldcw
rorb
dec
add
cmp
lock
sarb
rcrb
pushf
lahf
enter
sub
dec
adc
add
sub
jnp
adc
inc
movsb
xchg
inc
cmp
cwtl
mov
pop
les
loopne
fmul
loope
mov
fisubl
ror
xlat
add
and
pop
cmpsb
movsb
fwait
add
inc
jae
into
insl
lods
int3
pop
xor
loop
mov
jmp
fistpl
inc
xchg
dec
ja
or
jne
mov
pop
jl
lds
and
adc
pop
sub
xchg
add
fldenv
mov
out
aas
cltd
iret
mov
mov
imulb
leave
insb
test
in
fcomp
cmpsl
clc
repz
aas
add
imul
sahf
out
xchg
add
mov
dec
or
jg
rcrl
scas
pop
jle
aad
fldenv
ret
mov
stc
push
push
mov
mov
shr
fisttpl
push
sbb
nop
test
repz
popf
pop
xchg
fcmove
and
out
cld
fiaddl
ss
adc
stc
cli
xlat
mov
test
mov
sti
test
in
jmp
sub
xchg
mov
or
jp
repnz
mov
dec
add
test
divl
jp
in
or
xor
mov
mov
je
inc
fidivs
test
int3
dec
lcall
dec
out
aam
gs
movsl
iret
mov
les
cmpsl
cmp
aaa
xor
es
jno
or
movsl
mov
mov
out
xchg
and
xchg
lcall
add
push
and
push
or
or
out
aad
shrb
push
bound
inc
push
or
jmp
inc
cmp
jns
stos
push
shl
jp
inc
daa
xchg
jl
aaa
std
pushf
dec
sahf
cmc
jns
and
sbb
mov
pop
add
pusha
mov
ficomps
xchg
mov
mov
adc
fisttpl
lret
mov
sub
mov
ss
add
sub
inc
lds
push
cld
cmc
lds
ret
int
jecxz
add
jbe
fwait
add
sbb
fisubrs
in
js
lock
lock
andl
out
roll
out
and
cmc
fdivp
fldt
and
out
or
push
sbb
fnstcw
xchg
pop
test
outsl
in
pop
or
pop
sub
inc
dec
cmpsl
adc
mov
enter
push
inc
rcl
xor
out
enter
mulb
notb
movsl
rclb
xchg
jno
mov
mov
divl
adc
sub
pop
cmpsl
ds
push
dec
add
jnp
mov
and
dec
push
or
fstps
lods
mov
dec
ja
cltd
xor
arpl
mov
inc
push
or
jle
rcrb
mov
xchg
pop
bound
sbb
daa
sub
or
sub
mov
les
xor
dec
sbb
pop
sahf
scas
dec
mov
mov
mov
xor
xor
dec
fdivrp
pop
sbb
pop
push
mov
mov
into
push
jg
jnp
mov
int3
test
es
mov
push
movsb
mov
popf
sbb
sub
add
hlt
jno
inc
jbe
and
sub
sub
xor
iret
or
sbbl
ja
js
lahf
scas
push
pop
seta
insl
testb
jns
lock
xor
or
pushf
pusha
jmp
int
add
jnp
lods
jb
gs
xlat
sub
daa
sarl
sbb
out
outsb
and
pop
adc
jmp
test
cmpsl
stc
inc
lock
xor
sbb
les
or
add
jp,pt
insl
push
rorl
movsl
int3
movsb
push
cmp
in
xor
repz
jmp
test
sub
enter
shll
sub
stc
sbb
cmpsl
stos
bound
in
push
loope
je
lret
clc
insl
xorb
lahf
popa
shll
ret
xor
xchg
xchg
and
sahf
push
int3
in
or
xchg
out
or
movsb
hlt
xor
ja
fdivrl
out
int3
push
xor
sub
pop
sti
divl
repz
fnstenv
push
push
out
mov
cpuid
mov
lahf
mov
cmp
js
or
call
jo
lea
pop
push
mov
mov
mov
ror
jno
and
mov
inc
cld
add
into
ds
inc
xchg
push
fldl
xchg
add
hlt
pushf
adc
mov
ficomps
push
insl
add
outsl
cmp
inc
call
lcall
sub
es
cmp
cltd
sarb
mov
inc
sbb
inc
repz
out
loop
inc
pop
loop
push
mov
fists
mov
xor
mov
rcr
and
mov
mov
fs
push
xchg
adc
pusha
inc
jae
push
pop
pop
lret
lea
sbb
mov
popa
mov
mov
jnp
in
test
dec
and
cmpsb
fnstenv
out
inc
dec
hlt
mov
mov
in
jns
das
lods
idivb
inc
jb
push
mov
xchg
test
daa
testb
out
dec
add
cli
popf
add
xchg
pop
xchg
mov
sarb
add
outsb
jmp
mov
insb
xchg
das
lea
pop
mov
mov
insl
test
std
in
and
push
xchg
popa
mov
ja
outsb
adc
subl
rcrb
insl
push
xchg
sbb
mov
mov
loope
xchg
out
sbb
out
cwtl
out
mov
cmp
sub
mov
and
add
testl
dec
adc
mov
addl
sub
jbe
mov
pop
repz
mov
rclb
push
sbb
and
popa
cmpsb
pop
pop
xlat
fidivs
fbld
aam
fidivl
addr16
fldt
mov
cmp
out
jmp
jo
movsl
mov
sbb
hlt
les
cli
mov
xlat
cmp
inc
mov
xor
or
sbb
mov
xchg
add
fistl
out
pop
xchg
sub
adc
aaa
leave
adc
test
pop
cmp
dec
sbb
cwtl
or
cmpsb
push
add
data16
dec
mov
in
call
push
xchg
hlt
lcall
mov
pop
mov
xlat
jo
movsb
test
pop
leave
in
or
jge
int3
das
lea
hlt
test
sub
mov
push
add
push
lock
dec
dec
into
or
std
mov
cmpsl
stc
adc
xchg
sub
push
cmp
jp
sarl
and
popa
mov
repz
out
mov
jmp
es
xor
dec
sbb
pop
pushf
lret
lahf
fidivrl
mov
dec
push
lock
shll
xor
xchg
inc
add
jbe
pop
fs
xor
fistpll
adc
push
xor
jp
xchg
add
das
xor
daa
jp
pop
int
ret
and
push
imul
sub
lds
xor
lock
cmp
xchg
sbb
sti
test
add
push
lods
add
xchg
cmpsb
add
push
int3
jl
dec
out
push
mov
jo
popf
cmp
dec
mov
dec
cltd
jb
sbb
jecxz
insl
jle
rol
push
and
xchg
cmc
lahf
xchg
lcall
hlt
jecxz
stc
subl
int
and
xchg
fstps
lret
jb
adc
fst
js
sub
loop
and
cwtl
mov
cmp
fstl
popf
xorl
icebp
and
jecxz
mov
push
dec
pop
mov
push
pop
cs
imulb
add
sbb
cltd
cmp
cmp
cli
shr
cld
sbb
pushf
test
mov
lods
pop
outsl
push
mov
shl
cmp
jmp
dec
jge
das
sbb
mov
stos
iret
mov
lods
sub
int
test
mov
push
jb
es
das
or
hlt
push
sub
sbb
sbb
les
sbbb
leavew
fwait
dec
jge
and
cmp
pop
pop
aas
jmp
mov
pop
outsb
mov
mov
mov
and
ficoml
loopne
in
xchg
cmpsb
rclb
sti
subb
push
int3
test
out
sbb
inc
stos
fbld
pop
cmp
aad
jns
fsubl
clc
das
out
cmpb
daa
ljmp
mov
adc
ljmp
and
repnz
xchg
sub
or
mov
hlt
sbb
out
dec
xor
sahf
aaa
lds
mov
adc
lahf
addr16
addr16
jbe
dec
fimuls
fisttps
inc
pop
scas
loope
mov
iret
lcall
bound
lret
test
xchg
fmull
rcrl
cs
inc
push
sarl
xorl
dec
pop
pop
mov
mov
ss
shrl
sbb
cmpsl
bound
into
xchg
fdivrs
and
push
mov
push
pop
rcl
adc
jo
sub
das
push
mov
aam
jmp
data16
mov
outsb
sub
or
cmp
jecxz
imul
into
or
je
call
xor
pop
sahf
jmp
fs
out
inc
sbb
dec
shlb
mov
push
ret
pop
sub
insl
ja
cmp
sub
mov
arpl
leave
stos
adc
mov
dec
in
scas
into
adc
add
dec
xchg
inc
push
mov
fstpl
cmp
out
cli
sub
xor
nop
and
lea
call
or
pop
dec
repnz
mov
jmp
mov
sub
movb
cmp
cwtl
out
fimuls
jl
mov
std
je
lahf
pop
xchg
js
sub
sub
ljmp
scas
movsb
outsl
loop
out
add
jne
lret
inc
push
push
dec
push
loopne
add
pop
dec
xlat
fdivl
push
ret
shr
loopne
cmp
out
js
add
lcall
adcb
rcrl
sbb
ljmp
daa
bndstx
fcmovu
ja
lcall
add
inc
mov
mov
loopew
jle
jo
sub
cli
jecxz
lods
cmp
cmpsl
data16
adc
pusha
add
inc
mov
test
mov
jmp
inc
aaa
cmp
jge
ret
sbb
fsubrl
mov
setae
movsl
leave
jge
inc
pop
xor
mov
aam
daa
mov
std
pop
xchg
xchg
jecxz
out
stc
mov
jmp
mov
push
push
jl
fldl
dec
inc
es
dec
imul
in
fsubrl
iret
std
andb
mov
adc
push
push
pop
push
add
loop
jo
out
leave
lahf
movsl
push
sahf
mov
push
mov
and
dec
scas
cltd
mov
xor
or
or
je
pop
push
mov
repz
cmp
jmp
aam
jns
pop
xchg
xchg
ss
and
icebp
mov
out
xchg
in
std
xchg
ss
stc
adc
mov
arpl
xchg
iret
enter
and
in
stos
or
push
push
xor
pop
cmp
xlat
or
pushf
xor
xchg
sbb
cmp
inc
int
js
and
push
hlt
out
push
or
mov
mov
dec
push
or
dec
cmp
cmc
xchg
and
push
cld
cmp
scas
cmpsl
aam
pop
stos
imul
fwait
push
loop
xchg
xchg
jne
mov
push
mov
xlat
dec
sub
inc
and
mov
es
jp
cmp
jp
inc
aam
mov
mov
mov
inc
sub
push
push
orl
loope
mov
jae
mov
daa
or
pop
xor
add
daa
es
je
jnp
add
push
call
xorb
pop
mov
xchg
lock
jb
aaa
cmp
repz
lret
jae
jne
push
hlt
int
sbb
adc
imul
mov
cmp
or
imul
fdivrs
fstpl
push
mov
cmp
mov
das
adc
adc
adc
mov
sti
xor
xor
repz
xchg
dec
repnz
inc
in
shlb
push
in
repnz
stos
sbb
mov
inc
mov
test
sub
cmpsl
xor
xchg
push
push
cmpsl
popa
ja
ffree
mov
gs
je
jmp
popa
pop
adc
inc
inc
inc
sub
shlb
scas
xor
pop
rsqrtps
sub
jmp
or
shrl
std
mov
out
push
cld
inc
add
xor
jmp
xor
ljmp
inc
add
xchg
sub
mov
mov
stos
imul
test
add
push
nop
cmp
and
xchg
mov
xor
xlat
xchg
fwait
push
inc
es
and
aaa
xchg
hlt
push
adc
test
lods
or
mov
ds
fdivr
push
xchg
loope
xorl
xchg
hlt
cmc
wbinvd
cwtl
dec
dec
fdivrs
xchg
popa
je
bound
into
inc
out
inc
jecxz
sbb
sub
aas
rorl
and
cs
outsl
add
sarb
adc
call
sbb
push
out
cmpsb
in
pop
inc
sarb
movsb
or
in
adcb
insl
gs
jnp
out
sbb
jns
sti
lcall
cmp
sbb
push
adcl
les
decb
enter
insl
push
je
hlt
movsl
or
stos
loopne
add
inc
xchg
and
add
arpl
ret
adc
mov
add
add
fwait
ret
and
imull
jle
stos
pop
mov
popa
mov
fucom
adc
divl
jmp
lods
xor
xchg
ret
dec
in
cwtl
xchg
scas
cld
in
subb
iret
pop
pop
add
add
into
sub
inc
mov
sub
mov
sahf
stos
sahf
xor
data16
stos
pusha
fldt
std
data16
into
in
pop
fs
pop
or
or
xor
ret
adc
stos
dec
or
mov
bound
mov
and
xlat
jp
push
test
sub
fcomps
pop
lock
inc
jg
push
add
adc
pop
jns
adc
jbe
mov
mov
mov
pop
sbb
fndisi(8087
dec
jno
jmp
pop
fldcw
sbb
push
aad
jo
fisttpll
cmp
xor
inc
mov
pop
out
fiadds
leave
xchg
arpl
adc
adc
xchg
or
dec
pop
aam
popf
ret
popf
cs
jo
cld
and
cmc
add
insb
ds
repnz
movsl
iret
insb
scas
lea
adc
imul
cmc
mov
movsb
cltd
nop
cs
jns
push
lahf
pop
bound
fcomp
repnz
scas
xor
movsl
jns
popa
adc
rdtsc
mov
mov
popa
and
xchg
mov
shlb
test
ss
aad
loope
sbbb
sti
les
popf
pop
xchg
jmp
cmp
hlt
sub
sub
out
pop
pop
sbb
bnd
mov
es
roll
out
lcall
lret
adc
inc
xor
xchg
nop
xchg
or
popl
scas
popf
lods
fwait
ja
cmp
cmpl
sbb
xor
cltd
sub
flds
ret
push
push
stos
jecxz
cmpsl
mov
std
xchg
xchg
outsl
sbb
push
enter
movsb
adc
adc
sub
push
ja
inc
lods
cmp
jecxz
imul
and
in
push
cmp
cmp
sahf
ja
add
jle
cli
addr16
sub
xor
add
cs
cmp
sub
pop
mov
shlb
scas
call
xor
fimull
xchg
lods
push
in
jae
out
mov
sbb
xlat
stc
fidivs
repz
ds
call
xor
sbbl
scas
es
imul
jbe
adc
jle
stos
mov
jmp
and
xchg
dec
repz
xor
lods
mov
xor
sbb
xchg
cmp
fistpl
adc
cmovnp
adc
push
cmp
sub
lahf
xchg
leave
mov
sbb
adc
jne
into
cmpsl
ret
fisubrs
jle
dec
dec
inc
mov
shll
xchg
push
test
add
mov
stc
mov
mov
xchg
addr16
outsb
repnz
mov
scas
dec
das
jns
movsb
sti
rorb
jecxz
dec
cmp
sbb
inc
call
lea
cli
sub
out
jo
push
roll
es
push
xchg
ja
sub
lods
mov
jns
negl
inc
cld
pop
dec
cli
jge
insb
xchg
rcrb
push
fcoms
insl
inc
pushf
ds
pop
mov
rol
stc
aam
pop
testb
push
fdiv
rorb
shlb
js
jo
dec
mov
test
outsb
mov
out
and
subl
pop
mov
cmp
mov
movsb
enter
pushf
jne
stos
iret
push
xchg
test
in
cmpsb
lcall
int
rcrb
cli
jg
out
pop
inc
mov
xchg
and
jecxz
cmpsl
push
pop
nop
repz
jg
add
inc
add
add
fcmovnbe
cwtl
sbb
out
push
loop
js
lds
jle
pop
pop
dec
mov
xlat
pop
pusha
jle
sbb
and
sub
mov
add
mov
sbb
nop
call
je
inc
stos
push
pusha
repnz
adcw
adc
or
mov
add
rclb
or
sub
adc
sbb
mov
push
dec
outsl
xor
pop
out
shrb
fmuls
out
shlb
xchg
shr
cmp
outsb
enter
les
sbb
pop
xchg
or
fidivrl
fwait
or
xor
rcrl
push
adc
adc
add
xor
out
cmpsl
enter
shlb
mov
rclb
sbb
lret
bnd
add
std
jmp
loope
ficoms
add
cmp
or
sub
push
push
mov
pop
add
not
mov
aad
aas
fwait
dec
notb
out
add
rcl
data16
int
sub
lret
divl
adc
sarl
lret
pop
decl
pop
mov
xchg
and
test
xchg
mov
jge
dec
mov
inc
push
jmp
xchg
mov
xor
imul
cmp
inc
add
rcrb
aam
fnsave
dec
fnstcw
push
lock
jae
or
sbb
xchg
xor
xchg
dec
cmp
add
call
mov
insl
flds
mov
push
or
inc
loopne
arpl
push
xchg
ret
test
xorb
out
repz
jg
jns,pt
sub
and
mov
jmp
jge
cmp
mov
fcos
ss
je
icebp
out
loop
xchg
lcall
int
scas
fisubl
jl
mov
fistpl
es
jne
add
aad
cmp
out
es
xor
inc
adc
mov
clc
sub
push
mov
repz
xor
shlb
fisubl
sub
fadd
int
cwtl
insb
fldenv
xchg
sbb
push
mov
outsb
ds
xor
mov
and
gs
jp
jg
inc
sbb
insl
stos
or
sbb
adc
pushf
jne
out
outsb
pop
icebp
push
es
adc
insl
mov
mov
and
push
xor
cmp
xlat
dec
mov
jecxz
and
das
movsb
push
out
sahf
mov
lret
jmp
adc
pushf
or
sti
sub
out
add
pop
add
div
or
fists
mov
jge
movl
leave
mov
dec
xchg
pop
stos
mov
and
lret
ds
fcomps
xchg
adc
push
cli
les
adc
and
ret
xlat
mov
or
gs
add
shlb
xchg
and
lds
js
fisubrs
lock
fcom
mov
fmull
shr
dec
int
jbe
mov
adc
mov
jnp
popf
je
xchg
pop
mov
jno
jl
test
repz
data16
mov
lahf
je
mov
fnsave
cmpsl
pop
mov
push
mov
pop
sbb
or
mov
jg
ret
xor
outsb
jle
jp
or
add
jmp
dec
mov
fdivrs
jecxz
ficompl
pop
push
xchg
add
push
lret
hlt
hlt
jmp
out
jge
push
in
push
jl
rol
add
mov
sbb
cmp
push
jmp
fisubrs
roll
lcall
hlt
out
lds
or
add
aas
outsb
jbe
inc
sbb
pop
mov
sub
movsb
fwait
mov
mov
lock
sub
lahf
xchg
ss
push
jle
lcall
jne
inc
int3
nop
sub
push
or
gs
xchg
fisttpll
cmpsb
scas
jmp
test
notl
hlt
sahf
xchg
xchg
sub
scas
mov
mov
pop
icebp
xor
dec
push
out
flds
aaa
push
jecxz
xchg
out
pop
in
sbb
dec
ja
jg
mov
in
sub
dec
das
mov
jge
xchg
jg
jg
xor
mov
out
adc
insl
fimuls
mov
adc
jge
shrb
cli
cmpsb
or
dec
cvtdq2ps
rcrl
jne
dec
mov
sub
or
sub
cs
or
inc
jge
dec
fldenv
push
pop
sub
data16
add
ljmp
inc
dec
aas
cli
pop
popa
xlat
push
mov
mov
pop
fldcw
dec
and
in
cli
movsl
out
das
addr16
xchg
int
aas
inc
dec
inc
fucom
cli
or
ret
ficoml
nop
dec
adc
xchg
or
push
fwait
imul
inc
inc
fisubl
cmp
xchg
flds
adc
negb
rcrl
dec
test
sub
inc
or
cmp
clc
push
rolb
cmp
mov
adc
icebp
out
push
add
lods
push
xchg
repnz
xchg
mov
or
or
fistl
mov
pop
cmp
sub
xchg
sub
stc
pop
xchg
int3
dec
mov
or
jno
dec
icebp
fistps
test
or
imul
ss
xor
adc
loope
cmp
cmp
outsb
xlat
clc
movsb
mov
ljmp
fisubl
push
pop
repnz
fwait
cltd
incl
xchg
outsl
mov
addl
mov
aas
fimull
jno
push
enter
pop
insl
fwait
scas
adc
aaa
insl
jbe
jo
lods
js
cmp
jnp
pop
inc
outsl
hlt
scas
and
jecxz
pop
aad
sbb
pop
mov
jo
loope
mov
sub
loop
sbb
dec
addb
loop
and
movsb
shlb
jl
mov
das
xor
cmpsl
lds
push
dec
adc
adc
xorb
ljmp
mov
dec
push
mov
ss
out
stc
adc
ret
xchg
insl
jmp
sbb
fwait
or
or
imul
lret
sti
xchg
mov
cmp
xor
sbbb
inc
push
and
loope
aaa
push
mov
shlb
sub
popf
enter
mov
dec
insb
fistl
push
and
lds
mov
ja
jge
add
ja
sbb
jns
lret
loopne
xrelease
test
out
push
ja
test
cli
cmp
mov
stc
rcl
adc
inc
jl
pop
popf
call
sbb
cmp
aas
jb
pusha
mov
fsubs
pop
aas
fisubl
push
adc
push
insl
push
push
mov
rorb
mov
jle
sbb
mov
xchg
mov
or
in
movsl
popa
lods
mull
or
pushf
sar
bound
cmp
xor
shll
stos
cmpsl
cltd
pushf
mov
ja
add
xchg
int3
mov
rolb
aas
inc
mov
mov
mov
test
xchg
sub
out
jo
pop
ds
fisttpl
and
cld
push
popf
cmp
or
push
imul
mov
rcrb
cmp
add
xor
xchg
adc
arpl
xchg
loop
xchg
loop
inc
and
push
adc
in
xchg
pop
add
mov
mov
mov
xchg
push
sub
aad
in
adc
jl
push
mov
mov
mov
jecxz
jae
loopne
pop
seto
ja
push
mov
lahf
jnp
sbb
cmp
sbb
sub
hlt
out
push
ss
inc
inc
out
mov
push
fistpl
int3
inc
loope,pn
addl
or
mov
loop
xchg
mov
sti
loope
jmp
jo
scas
mov
or
fdivs
pop
jne
lret
fwait
jnp
lock
or
fwait
jge
cmp
pop
sbb
mov
cmp
push
xchg
inc
add
lcall
pop
inc
cmp
sarl
dec
outsl
push
mov
je
imul
jg
push
movsb
inc
fdivs
lcall
mov
subl
sbb
addl
sbb
jmp
pop
pop
cs
jae
jl
ja
jp
xchg
flds
add
fmul
cmp
lods
stos
dec
add
std
in
xchg
aad
sub
mov
out
scas
orb
jo
jge
mov
ret
mov
xor
lret
push
imul
dec
pop
push
sbb
pop
ja
cs
sti
lret
xchg
mov
cmp
and
imul
mov
lds
adc
cli
aad
xlat
ds
cmp
cmp
shll
push
mov
inc
jle
ret
sbb
jbe
ljmp
mov
pop
out
sbb
div
lret
push
repnz
lods
sti
ret
pop
ja
cmp
mov
push
int
jp
clc
mov
adc
and
pop
pop
into
subl
enter
in
xor
call
or
pusha
mov
mov
push
sub
cmp
loope
insl
mov
inc
lret
add
and
sub
xchg
lock
mov
inc
xor
xchg
dec
push
cmp
sbb
cld
push
or
mov
out
jle
sub
jmp
pop
leave
cmpsl
stc
push
lahf
mov
xchg
ds
in
std
inc
jl
inc
sahf
mov
das
aad
pop
xchg
int
addr16
out
adc
cmp
mov
popf
les
push
mov
test
jg
and
jp
pop
xchg
lret
sbb
adc
sub
repz
aas
and
cmp
adc
pop
jnp
loopne
lahf
sti
jge
pop
jmp
stos
jb
push
fcomps
in
repz
loop
or
insb
imul
and
mov
add
and
pop
sub
jb
rorl
ja
push
lahf
pop
lods
pop
leave
xchg
mov
sbb
movsb
std
aad
ljmp
jbe
cmp
pop
mov
cmp
inc
mov
aaa
nop
sub
and
mov
xchg
leave
mov
les
mov
dec
sub
insb
std
fldt
mov
into
aam
addr16
iret
daa
push
pop
and
pop
les
stc
sbb
mov
stos
fmull
cmp
js
pushf
xchg
jns
aam
cli
add
in
aaa
mov
sbb
ret
lods
and
lret
push
push
shl
cmp
sbb
das
pop
xchg
out
and
stc
cmp
mov
rcr
sbb
dec
in
mov
cbtw
pop
pop
data16
rorb
cld
adc
es
adcb
push
dec
insl
into
push
inc
insb
mov
insb
outsb
fldt
and
xor
and
test
insb
dec
repz
mov
or
mov
loop
outsl
xor
mov
push
loop
cmc
das
les
mov
aam
xor
clc
stos
mov
jae
fwait
in
lock
add
jnp
aad
inc
or
jbe
addr16
in
or
sub
nop
cmp
lret
popa
or
movsb
sar
sahf
sub
adc
pushf
dec
and
and
dec
xchg
mov
jnp
das
or
adc
dec
xchg
xchg
add
mov
pop
subl
pusha
shrl
aam
inc
cmpsb
int
push
out
popf
cmp
jb
in
stos
pop
xchg
dec
test
push
and
jns
test
fwait
stos
xor
lods
dec
mov
aad
cmp
shlb
int
std
ret
pop
add
sbb
rorl
imul
cli
mov
orb
addr16
mov
adc
ja
scas
cmpsl
push
jb
jp
shl
pop
mov
movsb
out
mov
fldl
int3
and
xchg
addr16
pop
xor
cmp
push
movsl
sti
inc
xchg
popa
dec
cmp
mov
push
pop
mov
xchg
test
pop
cmp
aad
loop
rolb
adc
ss
out
sbb
pop
mov
push
arpl
sahf
xor
push
sub
fdivrl
popf
jae
scas
jbe
insb
shlb
pop
push
les
psubsw
pop
jae
pop
nop
and
mov
cmc
xor
adc
ret
cmp
adc
scas
xchg
stc
xchg
fcmovne
in
scas
out
mov
mov
addr16
adc
fsubr
lea
push
push
push
sahf
jno
fsub
aam
xor
dec
outsb
inc
mov
and
and
mov
pop
ljmp
inc
and
lret
inc
xchg
jo
add
cmp
dec
je
filds
add
or
cwtl
in
pushf
fwait
dec
xchg
xchg
stos
xlat
dec
in
mov
decl
mov
cltd
cwtl
test
loop
and
lods
push
cmpsb
popa
add
pop
xchg
ror
add
fdivrs
add
loopne
mov
pusha
inc
int
mov
inc
xchg
loop
add
xor
call
xchg
pusha
lret
arpl
add
ror
xor
imul
cs
daa
inc
push
push
push
leave
sbb
and
sbbl
mov
inc
cltd
pop
imul
xchg
push
jle
loop
rol
bndstx
cmp
mov
iret
faddl
jns
enter
aas
mov
or
pop
jbe
not
sbb
add
inc
lods
idiv
jle
and
inc
jle
cmp
and
cmp
pop
dec
not
inc
push
jnp
xchg
pop
enter
fnsave
push
push
leave
jecxz
stc
mov
pop
push
xor
loopne
outsl
and
jg
mov
inc
test
mov
lret
xchg
daa
mov
shll
leave
mov
test
enter
daa
inc
mov
inc
add
pop
repnz
lea
xchg
pop
cmpsb
mov
jmp
add
push
stos
loopne
jne
mov
scas
out
and
cmpl
mov
insb
sub
fscale
and
std
cs
out
and
pop
shll
subps
xor
test
dec
lods
and
loop
pop
jae
sahf
jo
sbb
mov
xchg
pop
js
dec
jae
and
repnz
cwtl
rclb
incl
shlb
mov
jno
ret
or
pop
or
insl
imul
pop
or
mov
fdivrl
out
pusha
std
dec
lcall
jns
mov
fistpl
and
sub
arpl
aas
fs
xor
sbb
push
and
into
xor
dec
and
mov
leave
push
test
sub
push
add
dec
xchg
xchg
mov
in
inc
cmpsl
push
adc
lret
in
mov
out
shll
aam
sbb
subb
xchg
out
inc
clc
das
mov
shrb
push
lods
int
test
and
jno
rol
jg
movsl
mov
jg
aas
adc
icebp
lea
pop
arpl
test
cmp
dec
jp
sahf
xchg
arpl
dec
vmovlps
pop
pop
cmp
cld
cld
and
jle
cmp
into
fdivs
pop
inc
mov
inc
test
mov
add
xchg
loope
jnp
je
mov
repz
xor
mov
push
movsl
out
andb
push
cmc
cmp
inc
rcr
rorb
loop
aam
xor
loopne
test
aaa
ja
rcr
mov
es
clc
lahf
loopne
leave
ret
add
and
data16
inc
inc
jnp
js
jo
and
push
xor
enter
lahf
push
jg
pop
ret
lock
shrl
ret
jmp
fisubl
pusha
xacquire
scas
mov
mov
inc
adc
mov
mov
lahf
pop
and
out
pop
in
ja
arpl
in
dec
aaa
add
push
mov
mov
jecxz
pop
insl
cwtl
mov
in
les
sub
adc
data16
mov
rcrb
push
sbb
les
add
dec
pop
xchg
or
adc
adc
mov
cmp
xor
js
ja
fwait
mov
push
xchg
pop
mov
mov
lea
loopne
and
xchg
xor
aaa
ljmp
pushf
in
sbb
enter
roll
lods
sub
iret
dec
inc
ret
sahf
movsb
vcvttss2si
lea
into
clc
lcall
mov
xor
xor
jmp
arpl
fadds
stos
cmpsb
ret
outsb
popf
xor
sbb
cmpsb
mov
divl
fdivrs
inc
mov
mov
and
mov
cmp
dec
pop
xchg
dec
mov
shll
gs
inc
mov
cmovl
fs
xchg
cld
notb
sub
pop
fdivs
sar
push
loope
xor
xor
xchg
sub
stc
les
lahf
ja
in
fbld
mov
outsb
js
das
movsl
pop
pop
fcoms
xor
repnz
pop
inc
jae
mov
rcll
sbb
cltd
cltd
sub
pop
push
lea
add
dec
push
mov
mov
mov
repz
scas
jnp
adc
fldl
leave
inc
int3
cmp
mov
jl
add
push
andl
or
push
out
push
loop
enter
push
xor
movsb
pop
into
dec
sub
add
andb
sub
es
lock
add
call
imul
jno
ret
mov
jg
xchg
rorb
jbe
cmpb
ljmp
dec
push
mov
fidivl
and
dec
adc
lods
outsb
test
push
cmpsb
lods
dec
daa
lret
or
idivl
shrb
and
loope
xchg
push
xchg
sbbb
dec
xchg
movsb
mov
inc
test
cmpsb
cmp
push
ret
or
scas
push
imul
adcb
ds
mov
ljmp
ljmp
mov
repnz
inc
add
push
pop
inc
jl
cmp
push
inc
shrb
movsl
sar
jb
icebp
fisubl
mov
in
cli
inc
outsb
das
xchg
dec
cld
in
fbld
int3
lcall
mov
xchg
cmp
cld
xchg
stos
sarl
cwtl
push
jbe
xchg
ret
fcmove
cltd
rcr
push
mov
sub
int
bound
aas
nop
xor
mov
insb
xchg
cmp
loopne
lea
cmp
out
testb
in
call
mov
pop
leave
dec
out
in
fsubs
ret
adc
outsb
lahf
push
shlb
ss
sub
mov
aad
and
sub
mov
xor
cmpsb
ljmp
insl
mov
sub
pop
fs
loope
andl
add
add
xchg
cmc
mov
mov
mov
enter
test
xor
mov
add
fadds
cmpsl
mov
mov
inc
popf
mov
lcall
gs
jl
cld
inc
add
push
iret
iret
nop
jg
les
jae
or
jmp
pop
aad
jae
mov
pop
xchg
cld
push
adc
sbb
insl
les
aam
inc
push
aam
in
andl
lds
add
in
insl
inc
out
cltd
xchg
sahf
fists
std
insl
add
xchg
js
pop
cwtl
ret
jmp
jg
adc
das
mov
and
cld
push
mov
sub
push
xor
imul
ss
push
gs
push
addr16
pop
mov
push
jb
fs
xor
mov
xor
fistpl
test
sbb
iret
ret
adc
push
mov
fcmovb
adc
inc
inc
int
pop
sbb
inc
jns
mov
jg
daa
idivb
push
bound
mov
outsb
popf
mov
lods
test
call
in
movsl
pop
mov
fcomps
stos
sbb
mov
mov
mov
push
mov
sarl
jp
pop
icebp
or
sbb
in
pushf
shl
test
adc
jecxz
dec
cmp
pop
add
push
cmpb
rcrb
push
popa
mov
nop
iret
pop
ss
icebp
loopne
leave
in
das
pop
mov
lock
je
pop
lahf
mov
cs
clc
out
pop
add
cmp
rcr
pop
aad
push
cltd
sub
ds
and
test
fdivrs
dec
ljmp
loope
or
sti
add
push
insl
in
rclb
mov
jnp
xor
and
cmpsb
adc
dec
insb
shrb
jae
sbb
jb
mov
jl
and
cli
or
xorb
dec
fcoms
jle
movsl
mov
cmp
jbe
ficompl
cmp
out
in
jb
xchg
xor
jae
fnsave
pop
xor
push
add
and
adc
lcall
enter
jge
jge
scas
outsb
orb
cmpsl
mov
push
out
daa
js
daa
sub
sbb
mov
aaa
jbe
or
push
jnp
sbb
cmp
in
ljmp
mov
or
push
jne
insl
incb
mov
inc
xor
insb
and
sub
out
dec
jmp
jmp
pop
hlt
mov
xchg
test
push
jbe
jb
push
xchg
aas
sbb
sbbb
push
dec
pusha
icebp
mov
push
in
cmp
repnz
mov
stc
xor
pop
cmp
mov
fwait
stos
jmp
cmp
dec
js
call
xchg
inc
sbb
mov
push
jle
sarb
cs
repz
pop
mov
mov
inc
cld
mov
and
lds
cld
movsl
vpmaxub
xchg
jo
inc
clc
pop
jae
mov
adc
jae
push
aaa
cld
push
pop
adc
sub
int
cmp
push
jp
shll
jb
jecxz
leave
sbb
xchg
mov
into
jge
push
xor
sti
pop
lret
jbe
mov
jmp
out
push
shll
dec
sbbl
popa
pop
mov
negl
jb
into
adcb
cmp
xor
mov
pushf
inc
xchg
adc
fwait
out
sub
xchg
xor
dec
unpckhps
lret
add
sarb
pop
adc
inc
jmp
xchg
rorl
cltd
fs
into
paddsb
dec
xor
mov
int
xor
jg
add
clc
xchg
cwtl
push
fldcw
mov
mov
insb
cmpsb
mov
leave
mov
dec
mov
test
cmp
xchg
popa
add
xchg
xorb
xor
ret
and
cmc
outsb
je
lds
gs
in
inc
ret
ret
sbb
dec
je
xchg
imul
lods
fbld
mov
insb
out
popf
mov
shlb
shlb
push
in
dec
into
rcll
add
fdivrs
pop
dec
jmp
fisubs
jge
dec
cmpsl
dec
jle
fldenv
cmp
pop
jl
mov
jne
cmp
inc
jne
sbbb
add
add
mov
push
and
inc
mov
into
imul
mov
mov
jecxz
pop
test
test
rcrb
add
aas
adc
in
icebp
dec
iret
and
in
stc
sahf
xor
sub
jmp
push
imul
and
xor
out
jl
shlb
cs
xchg
lahf
pop
nop
or
movsb
popf
push
cmp
cmpsl
je
aad
sbb
mov
scas
adc
push
jo
cmpsb
xor
inc
lods
or
push
mov
jl
mov
sbb
imull
sbb
xchg
repz
mov
lods
sbb
mov
jl
and
xor
xlat
test
add
test
dec
and
push
mov
mov
outsb
ja
call
div
popf
fists
loope
pop
jae
call
into
sub
cmp
adc
jge
out
jbe
rcrl
fidivrl
inc
cmp
in
and
jle
lock
push
testl
fmull
fstps
fmul
loopne
and
mov
and
push
mov
stos
sub
push
dec
xor
hlt
scas
ret
movsb
lods
movsb
shl
iret
push
loop
dec
cmp
icebp
mov
adcb
add
xchg
cmp
and
add
mov
lcall
loopne
jecxz
fidivs
into
sbb
jbe
std
stos
mov
sbbb
negb
add
adc
dec
pop
add
pop
mov
in
push
fildll
cmp
faddp
shlb
in
iret
push
xor
movsl
mov
repz
fdivs
push
ljmp
shld
hlt
dec
xchg
fnstsw
mov
lods
mov
pop
dec
in
dec
or
test
fidivrs
pop
clc
testl
xchg
push
sub
ret
mov
and
mov
sahf
pushf
adc
loop
repnz
pop
negl
jp
int3
stos
stc
sub
lods
push
rcl
leave
xchg
mov
fcomps
adc
cmp
imulb
adc
pop
sbb
icebp
sbb
mov
ror
ret
outsl
or
push
jnp
and
or
mov
xchg
mov
xchg
cltd
xchg
push
mov
imul
mov
xchg
or
inc
add
mov
pop
dec
inc
mov
lods
push
sbb
mov
arpl
adc
sbb
push
popf
int
sub
sub
sub
mov
dec
push
pop
loopne
popa
push
mov
loop
lods
js
aam
sbb
imul
push
mov
mov
push
push
xchg
test
add
mov
scas
dec
ret
sub
xchg
xchg
int
mov
iret
ljmp
push
nop
mov
sbb
stos
mov
sti
cmp
dec
stc
aad
or
cld
jb
mov
scas
loopne
mov
ljmp
mov
cmp
and
push
or
shll
sbb
sarl
add
roll
pop
mov
cmp
andb
xchg
lods
lods
rorl
test
cwtl
dec
add
gs
test
mov
xchg
out
sahf
int
negb
mov
mov
dec
out
cmpl
add
nop
xchg
add
arpl
rclb
icebp
addb
cmpsb
dec
xchg
shll
inc
loope
adc
cmpsl
sti
mov
inc
popf
sbb
int
fstl
js
mov
add
push
in
mov
scas
jne
mov
lahf
mov
and
ret
loopne
xor
rcrb
js
xchg
push
xchg
push
push
js
movsl
inc
scas
loopne
fsubrs
scas
sbb
je
call
and
mov
loop
shll
popa
xor
fwait
mov
scas
fisubrl
fsubrs
cmp
in
push
sub
lods
in
inc
sbb
push
clc
dec
je
xor
sbb
mov
sub
push
cmp
cmpl
out
mov
std
xchg
je
inc
scas
orb
popaw
popf
iret
dec
sub
test
mov
mov
insl
incb
push
mov
sbb
cmp
mov
loopne
add
jl
mov
pop
cmpb
adc
and
movlhps
rcrl
jns
xchg
push
mov
fsts
or
loope
cmp
sub
adc
xchg
add
pop
psrlq
popa
mov
in
xchg
push
dec
test
div
je
repnz
out
and
push
aas
or
enter
mov
pop
cmpsb
mov
xchg
data16
popa
or
pop
mov
in
mov
iret
xor
outsl
lret
push
sarb
or
sbb
es
mov
push
pop
insl
arpl
push
xor
mov
or
out
lods
mov
add
out
mov
push
lea
mov
fstps
stc
and
add
or
shll
adcb
in
arpl
adc
push
and
jmp
xchg
out
inc
jge
push
xor
int
pop
mov
adc
mov
adc
dec
push
lock
jbe
push
fucom
cmp
pusha
dec
loopne
adc
test
lock
loop
fdiv
sub
hlt
ret
or
adc
mov
jb
outsl
add
jnp
xchg
pop
xor
ficompl
push
add
dec
out
cld
je
mov
div
pusha
stc
sti
mov
jb
lods
cltd
sti
dec
push
dec
into
sbb
mov
pop
xchg
mov
add
lds
mov
inc
inc
or
lods
pop
inc
mov
push
push
cltd
add
je
data16
mov
jae
push
mov
pop
sub
or
xor
pop
movb
mov
mov
aam
xor
add
fstl
push
or
jg
inc
daa
jo
adc
adc
pop
outsl
and
loopne
adc
xchg
sahf
pop
movsb
pop
add
mov
test
xchg
mov
and
xchg
je
les
mov
outsl
dec
negl
xor
scas
jg
sub
dec
mov
js
inc
jo
outsb
jge
pop
sbbl
xor
addr16
or
push
pop
popa
aam
sbb
jb
push
sti
jno
fdivs
push
cmp
push
test
cmp
negl
push
es
ljmp
fcmovb
or
push
pop
adc
mov
pop
xchg
cmp
jnp
xchg
inc
mov
ja
mov
push
xchg
sub
add
subb
lea
add
xchg
popf
aad
xor
int
gs
mov
cmp
subl
and
movl
mov
shl
push
int
xlat
insl
mov
mov
fwait
jbe
icebp
fucomi
mov
js
fdivrs
push
lds
push
in
sub
inc
cmp
add
mov
div
scas
ret
xchg
jle
mov
xor
jbe
mov
mov
popf
aad
inc
push
out
dec
or
sub
fistpl
adc
lods
mov
jnp
mov
jg
lcall
aaa
dec
mov
xor
xchg
in
ret
gs
pushf
int3
in
pop
in
loope
pop
and
icebp
or
pop
dec
icebp
fiaddl
jp
jmp
pop
les
addr16
cmp
ror
out
popf
xchg
dec
dec
jae
rclb
dec
lods
stc
lcall
into
dec
cmp
cmp
clc
out
sub
sub
cmpsb
xchg
insl
in
mov
fsubs
ss
pop
cmpsb
xchg
movsb
ret
xchg
xchg
cwtl
repz
dec
mov
xchg
jns
int3
enter
and
popf
xchg
mov
mulb
std
jb
and
in
adc
and
xchg
popf
imul
jo
or
lcall
stos
mov
inc
das
sub
pop
std
leave
xlat
mov
fwait
pusha
mov
fiadds
push
aad
aaa
sbb
xor
in
jns
ss
mov
inc
and
jne
pop
ret
test
lea
xorl
ret
adc
push
push
int
pop
and
sbb
hlt
sbb
sti
pop
mov
jo
cmc
fs
dec
daa
xor
je
pop
cmp
divl
loopne
adc
shll
iret
lock
iret
pushf
loop
or
gs
lar
dec
dec
cwtl
cmp
add
hlt
pop
popa
cmp
arpl
sub
inc
pop
pop
sub
fcompl
mov
je
popa
and
flds
ljmp
mov
sub
icebp
and
or
jl
dec
and
pop
inc
mov
or
jp
mov
sub
rcll
ljmp
test
pushf
ret
xchg
lock
sarl
sbb
cmpsl
xchg
jne
mov
xor
fcom
cmp
jo
sbbb
add
or
xchg
push
mov
inc
addr16
xchg
and
mov
dec
push
inc
lods
pop
inc
outsl
push
pop
fs
xor
sbb
inc
test
loope
or
hlt
mov
xlat
or
mov
dec
jne
jmp
jl
js
and
in
addr16
call
stos
dec
lcall
repnz
pop
and
sbb
jge
adc
arpl
jno
dec
sarl
xchg
movsb
sbb
mov
dec
bound
mov
mov
into
mov
xchg
push
or
or
mov
lods
xchg
inc
cmp
jmp
and
push
jmp
lcall
adcl
dec
cltd
push
dec
jp
jp
rolb
addb
jno
pop
sbb
imul
pushf
jecxz
imul
lock
pop
cld
aaa
lret
orl
shl
and
cld
adc
xor
xchg
fs
xor
outsb
mov
test
pop
test
sbb
insl
xchg
mov
out
out
cs
xchg
lret
mov
pop
push
sub
int3
movsl
mov
and
mov
xor
out
cmc
or
xchg
mov
jmp
gs
xchg
les
fimull
or
outsl
dec
mov
push
xchg
add
fdivl
repz
repnz
cmp
pop
mov
pop
lock
lods
in
inc
in
inc
sarb
mov
cmp
mov
xor
fstps
dec
cltd
and
mov
rclb
cltd
mov
and
add
push
xor
add
push
adc
outsb
add
in
sarb
pushf
pop
dec
popa
and
or
inc
pop
nop
stos
daa
pop
lock
jmp
leave
adc
bound
push
jno
dec
push
lods
adc
imul
icebp
cld
jne
cmp
imul
mov
mul
mov
sub
imul
mov
cmp
push
jo
inc
outsb
sbb
pushf
pop
dec
cmp
jmp
push
in
cmovl
dec
pop
mov
roll
test
bnd
and
jp
ds
ds
push
mov
ret
dec
and
in
sbb
data16
inc
in
fdivr
jecxz
nop
xor
mov
fdivp
push
push
cmp
sub
arpl
jb
push
jecxz
aam
call
mov
loop
sub
push
add
es
dec
xchg
int
aad
push
pop
jns
push
push
sub
jp
dec
movsl
cs
mov
in
xchg
or
sub
pop
mov
sbb
cmpb
mov
lret
jb
jl
xchg
xor
sbb
adc
push
aad
cmc
fistps
sti
pusha
or
jmp
xor
call
and
cld
add
bound
xchg
jl
js
movb
shrl
clc
mov
or
int3
pusha
adc
mov
cmc
cltd
push
out
imul
pop
mov
arpl
jle
mov
sub
and
into
fldpi
dec
mov
or
fisubrl
mov
mov
imul
xlat
jge
jl
int
nop
or
sub
les
sbb
les
pop
xor
push
dec
fsubl
mov
inc
test
push
adc
in
add
jae
inc
xor
inc
cltd
xor
test
icebp
add
iret
popf
cmp
xchg
sbb
push
je
pushf
push
adc
outsb
fstpt
and
lods
dec
mov
xor
ror
addl
pop
pop
out
push
pop
xor
ja
scas
and
sbb
or
xlat
mov
mov
sub
sub
or
lcall
push
dec
test
ret
cmp
cmpsl
mov
mov
fiadds
cmpsb
inc
sbb
in
push
pop
pop
and
es
push
and
jp
and
mov
push
inc
or
dec
inc
scas
inc
lds
pop
and
jae
jb
xchg
cli
add
or
in
rcl
in
lea
mov
out
test
mov
rolb
call
xor
pop
mov
xchg
cld
xor
add
sub
xor
movl
mov
decb
push
loop
adc
arpl
xor
shl
outsb
fldl
mov
pushf
aaa
shll
and
lret
insl
insl
out
aas
sub
xor
cmpsl
sti
xor
fnsave
push
add
sbb
in
inc
ret
ljmp
stos
mov
adc
cmp
jl
add
ja
mov
jne
stos
xor
pop
push
or
push
dec
push
xlat
jp
dec
dec
fldcw
push
cmp
aaa
pop
dec
inc
int3
jae
inc
mov
hlt
lods
jle
addr16
fimull
push
cmpsl
mov
dec
stos
cmp
jmp
out
ja
mov
pop
mov
sub
pushf
scas
fstl
and
ret
int3
inc
or
or
mov
inc
insl
sub
popa
test
xchg
mov
push
mov
and
xor
fxch
inc
cs
les
aad
push
sub
jp
int3
inc
aas
jle
js
lock
clc
jp
ret
nop
into
imul
test
cli
xchg
sbb
icebp
and
pop
cmp
sbb
lea
pop
cli
xor
pop
cld
test
xchg
fistps
ja
mov
nop
inc
in
loop
or
rcll
gs
xchg
adc
mov
xchg
inc
lret
fstpt
std
cmc
and
in
bound
sbb
int3
and
lods
scas
insb
jno
inc
jle
add
mov
fbld
mov
push
mov
jae
pop
outsl
pop
addl
insl
pop
jp
sti
int3
jl
inc
push
mov
adc
adc
adc
adc
aas
fcompl
pop
push
int3
lret
cltd
mov
push
add
aas
idivb
cmova
mov
in
imul
mov
xchg
nop
jp
sub
cmp
mov
jnp
adc
or
lret
sbb
dec
lahf
repz
sbb
fcmovne
xor
insb
or
push
movsb
ja
scas
insl
int3
jns
cmpsl
fxch
or
mov
lahf
jp
cs
lret
and
aas
lcall
loopne
out
enter
stos
repnz
dec
pop
ss
pop
dec
vucomisd
in
lret
cmp
mov
inc
fcomi
add
test
mov
rorb
and
push
mov
jne
mov
jns
shll
in
insl
iret
xchg
push
in
rcrb
push
sbb
into
sarb
movsl
mov
dec
xor
jae
stos
sub
jmp
movsb
iret
ja
in
scas
mov
mov
pop
add
push
mov
cmp
xor
inc
stc
gs
pusha
pop
fs
stos
lods
arpl
or
cmp
xchg
movsl
fdivl
pushf
add
aaa
mov
repz
bndstx
scas
data16
add
dec
gs
ret
inc
inc
mov
sub
sub
lock
adc
cmp
outsl
push
pushf
outsb
out
jae
ljmp
push
dec
push
ds
aam
fsubs
cli
pop
shlb
scas
test
in
fstps
sarb
clc
in
mov
push
or
xor
lahf
bound
push
in
dec
mov
pop
adc
xchg
or
movsb
lahf
lods
pop
outsl
cmp
hlt
or
imul
push
jmp
cmp
inc
pop
mov
scas
push
clc
dec
or
int
xchg
clc
fldt
mov
sbb
mov
out
dec
shll
lods
dec
addb
lock
lds
fs
lret
lret
and
and
dec
adc
jge
add
sbb
in
and
inc
jno
jne
pop
popa
xor
lods
icebp
xor
push
into
in
xlat
bound
imul
scas
icebp
mov
cs
pop
xor
js
clc
lret
jo
arpl
outsl
inc
in
add
push
and
mov
xlat
icebp
sbb
pop
insb
sbb
xor
sbb
scas
cmp
enter
inc
stc
jns
inc
movsb
nop
lock
sbb
gs
hlt
in
je
adc
inc
adc
inc
shl
jbe
leave
insl
pop
jle
jl
xlat
popa
cwtl
push
cmc
jg
jp
stc
fstpt
ds
out
dec
mov
push
mov
or
cld
lahf
lods
adc
leave
scas
test
sbb
xor
mov
inc
cmp
data16
fisttpl
jnp
test
mov
dec
mov
popf
aas
jge
fadd
cmp
loope
and
shl
hlt
shll
pop
cltd
dec
dec
inc
mov
lock
mov
fs
dec
pop
inc
or
cmp
pop
clc
lea
aas
lret
mulb
dec
insb
mov
lcall
test
test
mov
sbb
mov
cmp
mov
rol
aas
ret
and
mov
sbbb
das
mov
arpl
pop
xchg
xchg
dec
ds
shll
inc
ret
adc
pushf
or
sarl
xchg
or
jge
push
sahf
mov
cmp
sbb
adc
jge
repz
lret
push
repz
jp
sbb
clc
std
sahf
in
mov
jl
lods
into
push
cmp
in
movl
gs
jl
xchg
mov
or
pop
sahf
fs
lods
les
mov
jnp
dec
lcall
or
jne
icebp
xchg
jb
xor
outsb
xor
shrb
insb
jo
scas
push
mov
stc
loope
jle
xchg
lock
js
dec
jne
xchg
stos
pop
inc
sbb
and
push
cld
add
xor
mov
add
cmpsl
in
mov
enter
push
iret
popf
and
cmp
ds
in
inc
push
push
test
out
dec
mov
mov
sub
std
movl
dec
jle
fcomps
popf
enter
sbb
mov
add
cmp
ljmp
sub
fcmovb
popa
arpl
mov
test
xchg
mov
xchg
rolb
dec
xrelease
jle
mov
dec
ljmp
jb
gs
cltd
push
or
lret
jl
pop
xlat
lods
repz
mov
stos
add
fs
or
test
add
lods
add
fisttpl
push
ret
dec
or
scas
or
xchg
inc
mov
mov
xor
xchg
or
or
imul
xchg
jbe
cmc
lret
mov
and
inc
mov
jecxz
lea
popl
pop
sahf
jno
mov
test
in
rclb
sbb
fidivrl
inc
mov
das
push
insb
mov
jb
and
or
lock
add
mov
ja
jmp
inc
sbb
fcompl
test
or
fdivrs
xor
das
testl
movsl
dec
xor
or
dec
mov
or
cwtl
icebp
into
and
rcr
inc
call
rcrl
addb
and
push
shlb
out
lea
push
stc
dec
pop
stc
xor
mov
or
call
and
xchg
mov
fbstp
or
xor
pop
xchg
sti
cmp
or
nop
mov
ss
adc
fcom
pop
test
cmp
lea
lods
push
or
fs
cli
rcll
xchg
adc
add
fisttpl
inc
in
pop
loope
jge
sub
fnstenv
dec
adc
adc
adc
jae
pop
and
dec
mov
add
mov
mov
sub
mov
pop
lds
xchg
fldln2
out
mov
roll
scas
push
mov
bnd
outsl
les
push
sub
mov
cmp
jp
fwait
call
sbb
stc
test
or
cltd
lahf
dec
cmp
mov
hlt
inc
mov
data16
scas
xchg
xor
xchg
jge
xchg
mov
fldenv
xchg
pop
pop
mov
nop
push
sahf
sbb
inc
xor
ret
aas
and
out
nop
scas
test
mov
aas
lods
xchg
sub
shr
jns
imul
icebp
lea
sub
shll
out
lods
adcb
mov
and
or
pop
push
cli
scas
cmpsl
add
out
adc
xor
pop
and
xchg
xchg
outsl
inc
inc
add
aad
dec
and
add
xor
inc
xchg
rcll
movsb
data16
ljmp
mov
scas
shl
lods
xchg
shlb
call
addr16
shll
pop
lea
mov
sbb
sub
fmuls
lret
or
jno
sub
inc
jge
dec
jecxz
and
lock
loop
cmp
push
sti
out
mov
andb
mov
aam
insb
jp
add
orb
rorb
and
clc
add
xlat
dec
push
jl
lret
mov
jp
adc
gs
stos
and
aaa
int3
adc
adc
adc
fsubs
inc
mov
rcrb
outsb
out
data16
sbb
dec
inc
je
aaa
mov
fwait
inc
inc
mov
movsb
pop
stc
in
dec
push
xor
into
mov
cmpsl
or
shrb
sbb
fsubs
pop
adc
jl
jne
imul
outsl
les
mov
sahf
mov
mov
jmp
lock
xchg
xchg
xor
stos
clc
icebp
jle
mov
aaa
adc
adc
and
add
popa
pop
sbb
or
push
xchg
pop
in
ja
es
psrld
fimull
push
cmp
dec
xor
addr16
add
inc
mov
imul
or
shlb
ret
arpl
clc
pop
cmpsb
mov
cltd
imul
stos
aad
pop
mov
ficomps
xchg
push
js
jnp
inc
cmpl
loop
push
pushf
in
pop
cmp
cmp
pop
xor
bound
jecxz
jg
inc
jmp
cli
int
push
and
pop
inc
or
lock
shrl
decl
fisubl
lock
jp
dec
xchg
in
push
sbb
in
add
mov
movsb
loopne
jns
dec
scas
and
repz
in
in
into
insb
mov
loope
pop
lahf
insl
pop
cmpl
out
sbb
and
rcrl
je
xchg
daa
xchg
enter
sbb
push
dec
mov
pop
jb
sub
ret
sbb
xchg
ret
fwait
lods
or
and
jb
imul
adc
pushf
repnz
nop
mov
dec
lds
mov
lcall
sbb
mov
fidivs
pop
pushf
cmp
lahf
movsl
cwtl
or
cmp
and
sbb
mov
jb
into
cmp
lcall
push
mov
icebp
popa
or
das
fadd
mov
jnp
sbb
cmpsl
or
movsl
xchg
in
ljmp
inc
in
out
imul
stc
fs
or
loope
or
pop
pop
mov
jne
add
pop
sbb
pop
lock
lods
fisttpll
iret
or
fsubrp
scas
inc
outsl
cwtl
out
mov
outsl
mov
xchg
cmp
ret
out
xor
push
push
push
push
lds
xor
adc
xor
add
xor
adc
xlat
js
mov
dec
int3
jmp
icebp
jge
out
jb
or
cmp
mov
lret
dec
inc
je
xchg
ror
jmp
out
iret
data16
into
loopne
or
mov
vpunpckhdq
add
push
jmp
rclb
shr
js,pn
mov
int
mov
push
jge
push
outsb
adc
push
inc
mov
xchg
adc
aaa
xchg
sar
mov
jne
inc
or
sub
mov
mov
adc
imul
add
push
stos
hlt
mov
jle
pop
dec
and
lods
mov
inc
ffree
sbb
jmp
adc
push
jg
lods
lahf
or
pop
popf
mov
int3
xor
lret
jge
push
mov
mov
xchg
repz
movsl
js
xor
inc
adc
imul
loope
insl
out
add
cmpsl
mov
popa
jecxz
mov
mov
jecxz
xor
cwtl
out
adc
mov
mov
roll
jae
and
adc
rcrb
insl
aaa
or
icebp
insl
mov
sbb
packuswb
push
xchg
xchg
jg
sub
add
adc
arpl
into
test
sbbb
mov
int
andl
rorl
sbb
cli
pusha
cli
mov
inc
mov
sub
pop
lret
sahf
into
cwtl
xchg
cmpsb
jmp
popa
push
xor
mov
xchg
repz
pop
mov
movsl
lahf
dec
inc
shrb
mov
loopne
pop
mov
fwait
xchg
mov
jno
test
mov
pop
sbb
add
dec
push
dec
lret
fcomip
mov
out
jno
aaa
test
call
adc
mov
sub
mov
and
shl
loop
les
push
dec
in
subl
pop
push
xbegin
pop
jno
mov
shlb
int
mov
aad
sub
or
shl
rorb
inc
mov
inc
testb
dec
sub
popf
ljmp
inc
add
mov
cmpsl
lret
out
cmp
xor
or
stos
cmp
push
pop
xlat
dec
insb
ss
ret
sub
dec
cmpl
jecxz
and
cltd
sbb
repz
fistpll
mov
xchg
ret
adc
jb
xor
lods
gs
jb
call
mov
inc
sar
or
imul
int3
xlat
into
stc
test
rcr
cmpsb
shll
fmuls
iret
movsb
fcoms
mov
add
adc
lods
add
icebp
ret
dec
bound
rcr
lahf
adc
mov
roll
mov
sbb
fsubp
pop
xchg
pop
clc
add
test
iret
test
mov
shl
adc
mov
adc
imul
sub
xor
fidivl
pop
mov
into
add
mov
push
test
jae
roll
inc
pusha
mov
add
pop
aam
fidivs
testl
add
mov
mov
adc
out
orl
inc
push
sub
mov
push
mov
mov
shlb
xchg
jb
push
mov
in
fbstp
sbb
pop
pop
inc
mov
mov
push
es
outsl
pop
fxch
icebp
dec
cld
xor
pop
pop
dec
xlat
add
hlt
or
scas
sub
or
mov
insl
sub
or
or
dec
pusha
out
cli
cmp
push
and
jl
rcrb
push
cmp
imulb
inc
xchg
rclb
repnz
cs
bound
sbb
test
inc
test
xchg
rorb
sub
ja
js
lods
mov
test
jl
add
push
ja
jp
aas
push
inc
push
cwtl
cmc
and
inc
mov
ljmp
mov
mov
or
jbe
sbb
fcompl
dec
bswap
sub
cwtl
sbb
mov
pop
ret
push
mov
out
mov
inc
imul
addr16
pushf
and
js
push
lods
mov
mov
xor
in
popa
and
sub
in
stos
js
lcall
loopne
ficompl
jb
mov
jp
jb
dec
loop
lds
xlat
push
jb
add
fildll
fldl
mov
push
loop
mov
push
testl
lods
fnstcw
and
and
push
call
add
fimuls
or
bound
rcl
xchg
jp
push
cltd
stos
add
pop
fmul
adc
sbb
je
repnz
divl
cmp
out
and
out
mov
jl
pop
xchg
pusha
notb
mov
out
cmp
mov
pop
and
jl,pt
pop
mov
and
sbb
fs
jle
shrb
push
inc
loop
inc
xchg
andb
aam
hlt
shr
imul
mov
lea
in
out
adc
or
mov
sbb
and
out
pushf
jle
add
hlt
into
dec
loope
divps
into
jmp
orl
dec
out
sub
push
mov
xor
std
les
scas
cltd
xor
cmp
push
push
test
pusha
cmp
mov
outsb
sub
pop
and
imul
cwtl
add
and
in
cmpsl
leave
jo
loope
lret
push
sarb
jo
ret
push
xor
xorb
add
rcll
xchg
inc
ja
dec
or
mov
scas
sub
lea
push
clc
pop
test
je
cmp
sbb
ds
inc
es
test
add
mov
in
test
cld
out
leave
incl
push
pop
jnp
in
xor
cltd
sbb
cmp
or
xor
lahf
outsl
mov
test
insl
fnstsw
negl
cli
in
in
pop
mov
adc
jmp
push
dec
inc
jae
adc
data16
loopne
sti
lea
push
jle
inc
inc
and
cmpsb
push
jnp
repz
cmp
ret
push
jge
mov
cwtl
fcompl
xlat
enter
repnz
xchg
loope
dec
add
out
mov
add
mov
cld
xorb
imul
jg
cwtl
inc
jmp
outsb
jo
imul
imul
jbe
cmc
dec
movsl
test
cmp
lcall
roll
fwait
pop
cmp
mov
popl
mov
push
push
dec
test
jnp
and
or
fiaddl
out
push
lea
sahf
mov
lea
cltd
cmpsl
adc
add
push
cli
pusha
cli
mov
and
pop
lock
jo
mov
and
dec
mov
icebp
jle
cmpsl
lock
cs
pop
pop
int3
dec
dec
ror
sbb
pop
add
scas
lahf
mov
push
fildl
dec
pop
adc
aas
scas
jo
push
jp
xor
pop
enter
push
mov
inc
cwtl
push
xchg
and
mov
lods
xchg
cmpsl
cmp
adc
dec
mov
fwait
lock
shr
push
int3
cwtl
push
outsb
les
sbb
jo
jmp
js
repnz
mov
enter
mov
or
shll
inc
in
and
popf
inc
ret
mov
sahf
mov
pop
jns
cli
pmulhuw
loopne
fstps
sbb
mov
out
in
test
adc
in
stos
in
fisubs
scas
int
fcomps
and
inc
sahf
mov
mov
les
loop
fildll
cmp
lcall
repnz
mov
ljmp
icebp
aam
ljmp
jp
test
adc
mov
movsb
gs
mov
jg
jp
notb
iret
aas
je
pushf
int
ljmp
dec
cmp
adc
xlat
test
inc
xor
push
fbld
imul
cmp
pop
daa
subb
mov
aaa
shr
lds
pop
fwait
cmp
inc
pop
mov
aam
into
and
mov
lds
xchg
mov
sete
nop/reserved
push
mov
push
mov
and
push
dec
loop
sub
add
sub
pop
adc
dec
sub
iret
lcall
mov
sub
mov
outsl
pop
fmuls
icebp
inc
stos
dec
test
js
out
imul
xchg
sub
mov
mov
mov
cmp
push
dec
repnz
fistpll
rcrl
fbld
inc
jg
std
mov
and
cltd
dec
js
addr16
movsl
or
aaa
rcrl
dec
jp
xchg
pusha
mov
adc
bound
xchg
cli
dec
adcb
test
jno
aad
add
cmp
and
fdivrl
dec
lahf
das
and
and
std
jmp
jp
insb
or
movsb
dec
and
mov
inc
mov
xlat
jno
stos
jecxz
cmp
jl
ja
or
fs
mov
jnp
mov
addr16
call
jnp
sbb
adc
mov
pop
pop
sar
pop
mov
adc
mov
imul
in
outsl
repz
or
jno
and
xlat
jmp
sub
stos
sbb
xchg
test
repz
xchg
jbe
mov
mov
sbb
pop
ljmp
inc
jnp
adcl
jge
pop
rcrb
push
fdivs
scas
xor
lods
sbb
dec
in
fadds
int3
jo
mov
in
mov
sub
add
or
jmp
fbld
or
or
flds
dec
aas
inc
in
sahf
pop
pusha
mov
jmp
fdivp
ret
movsb
loope
and
out
or
xor
test
xchg
mov
lcall
xor
into
fsubrp
scas
add
jno
or
sub
adc
ret
cmp
sub
decl
sub
test
mov
mov
inc
bnd
pop
mov
adc
pop
bound
mov
mov
pop
popf
push
jb
inc
fcmove
sub
jecxz
test
pop
outsl
dec
fs
dec
icebp
loop
jge
xchg
sbb
sub
push
sbb
jne
push
and
call
inc
sub
jae
cmp
cmpsl
rorl
lahf
sub
add
push
xor
outsb
pop
pop
sub
in
sbb
ss
jge
dec
fldl2t
pop
or
nop
mov
roll
dec
shl
xchg
inc
pop
cwtl
jbe
faddp
inc
pushf
ja
movsl
add
outsl
mov
dec
insl
or
xor
pop
add
loop
or
ret
xchg
push
mov
roll
stc
out
cmp
in
mov
mov
cmp
je
push
movsl
mov
inc
or
add
into
add
in
idivl
fidivrs
in
ja
push
dec
dec
sbb
cmp
cmp
mov
mov
add
ret
and
xor
xchg
and
test
and
jno
push
lcall
add
or
xor
in
stos
inc
addr16
jb
stos
test
jle
xlat
or
rep
add
pop
or
add
push
movb
fs
daa
stc
dec
cmp
adc
aam
cltd
ror
or
jle
inc
lods
and
jp
cmpsb
pop
dec
push
dec
adc
and
adc
xchg
fldt
aad
add
jle
push
pop
inc
ja
mov
imul
inc
repnz
inc
xchg
pop
cmc
lds
int
negl
test
pop
xchg
add
inc
addr16
cmp
imul
sahf
adc
movsl
jl
scas
mov
aam
xchg
xchg
test
mov
icebp
ret
pop
and
movsb
mov
shrl
lods
scas
or
push
popl
mov
xor
add
mov
popa
adc
dec
jne
dec
insl
popa
jp
inc
ret
cld
sbb
xor
sbb
call
and
jnp
outsb
push
push
mov
adc
xchg
xor
mov
cmpsl
sbb
in
lret
outsb
fsubrs
push
loopne
les
imul
ffree
cmp
cli
lock
stc
fstps
je
xor
imul
push
sarb
out
ja
mov
pushf
pop
dec
test
test
push
mov
scas
inc
pop
lcall
bnd
hlt
push
pop
adc
inc
test
lcall
dec
rcll
and
pop
adc
sbb
dec
movsl
aam
push
pop
jbe
cmpsb
into
bound
lret
out
dec
test
loop
dec
pop
xchg
jo
sub
hlt
mov
adc
add
addr16
jnp
jmp
push
pop
jge
cltd
mov
fdiv
push
call
pop
sahf
jmp
ds
leave
xchg
adc
push
popa
dec
clc
mov
xchg
jbe
inc
ret
cmc
int
das
cli
jle
sub
xor
xchg
push
adc
mov
adc
xchg
call
pop
les
je
pop
out
add
jns
pop
adc
divb
xchg
mov
addl
xlat
xor
ljmp
pop
dec
xor
out
push
fimuls
jmp
hlt
in
or
xchg
jno
idivb
addr16
xchg
rorb
cmp
out
dec
pop
fidivs
sbb
loop
xchg
push
xchg
test
jns
icebp
sarb
shll
jmp
or
lahf
cmp
cmp
pop
imul
out
mov
push
or
jae
mov
ss
pop
xor
sti
mov
aas
cld
movsb
pop
negb
lea
int
xchg
fs
cwtl
stc
addr16
mov
das
fldenv
adc
push
or
pop
ret
sbb
push
fimull
je
pushf
movsb
cmp
and
dec
push
mov
sbbb
mov
fiadds
push
pop
and
loop
mov
into
imul
insb
add
and
fbld
das
fdivs
xchg
jns
and
or
pushf
mov
call
into
fsubl
mov
pop
stos
mov
add
outsb
inc
pop
mov
test
xor
cwtl
popa
xchg
mov
cmc
jecxz
outsb
jecxz
pop
cs
addr16
test
sbb
iret
inc
fs
push
mov
in
cmp
inc
inc
pop
es
in
insl
lods
leave
nop
stc
pop
sahf
pop
hlt
jg
es
sbb
or
sbb
cmp
push
in
loope
mov
cmpsl
jmp
outsl
loopne
fistpll
pusha
daa
xchg
ljmp
cld
js
jne
pop
ds
jecxz
test
add
push
aaa
iret
inc
fcmovb
and
addr16
dec
xor
cmp
cmp
lret
pop
es
outsl
adc
loope
sub
dec
lea
cmpsl
addr16
loop
pop
ljmp
pop
cwtl
scas
dec
push
pop
dec
jae
addr16
mull
data16
movsb
push
and
stc
and
ret
pop
test
dec
loop
jo
int
data16
rcpps
inc
movsb
add
push
subl
mov
stos
add
push
inc
mov
jbe
xchg
cmp
fstpl
xchg
les
test
das
adc
sub
out
dec
sbb
mov
loop
jno
sbb
insl
sbb
test
mov
daa
mov
sbb
mov
lds
dec
and
xchg
mov
pop
je
movsl
lea
jnp
and
and
popa
stc
pop
jne
lds
shlb
add
mov
mov
adc
mov
shrb
adc
sub
aas
aaa
xchg
fnstcw
stc
mov
push
sarb
or
and
sub
mov
xor
pop
movb
pusha
lds
inc
inc
stos
xor
dec
mov
mov
jle
push
loope
adc
jg
pop
inc
fucomp
xchg
cwtl
insl
jbe
adc
mov
rcrb
mov
in
sbb
mov
adc
cmpl
xchg
mov
mov
sub
icebp
sub
xor
cmp
mov
mov
out
add
add
out
xchg
push
pop
cltd
jne
adc
jne
insl
sbb
xorl
pop
push
ret
mov
pop
adc
adc
and
adc
imul
cmp
data16
stos
pop
inc
sub
xchg
push
js
mov
jae
out
mov
adc
fistl
mov
in
scas
sbb
lods
inc
cmp
pop
sbb
cmp
ds
enter
and
je
jns
movsb
xor
add
xchg
push
pop
cld
jle
out
sbbb
ja
jl
or
fidivrl
xchg
out
int
outsl
in
lock
sub
fsubrs
jle
push
push
jb
add
mov
pop
push
and
mov
sti
lock
xlat
mov
adc
scas
sub
sub
ja
adc
mov
xchg
dec
pushf
ljmp
push
int3
jmp
add
int
inc
popa
or
cmp
inc
shlb
dec
fisubl
loope
ss
dec
in
xor
sub
or
cmp
outsb
ja
mov
rcl
xchg
add
add
daa
lret
sbb
cmp
xchg
mov
aad
ja
inc
pop
or
scas
mov
loopne
jle
pop
jnp
xchg
mov
jmp
inc
cmp
add
test
jns
fmull
xchg
sbb
pushf
scas
pop
sub
inc
inc
mov
or
les
dec
lods
mov
and
mov
mov
push
mov
inc
divl
ret
dec
xchg
scas
popf
jae
hlt
ret
out
add
sub
push
jb
mov
and
inc
pmulhw
aas
mov
mov
out
mov
js
jg
jg
sbb
rorb
mov
xor
push
loop
xchg
inc
std
mov
dec
fldt
stc
mov
lods
sti
imul
ja
dec
ret
and
and
push
inc
imul
rol
scas
and
and
push
aas
repz
sbb
jnp
aaa
insb
cmp
scas
das
sub
mov
repz
cli
cmp
jecxz
lret
int
cmpsb
adc
sbbl
loope
pop
inc
fdiv
adc
mov
ja
stos
lcall
addr16
bound
and
scas
mov
out
jl
in
or
xchg
fists
cli
sbb
jne
and
jge
mov
out
sbb
cmpsb
test
fs
std
xchg
cmp
pop
cmp
popa
stos
out
repz
sbb
js
lahf
test
cmp
out
loopne
add
mov
fdivs
jno
repz
arpl
push
jmp
repnz
int3
and
dec
xchg
mov
xor
push
stos
sbbb
insb
fisttpll
push
and
shll
pushf
mov
push
sahf
ljmp
jecxz
into
push
add
fwait
pop
adc
or
ljmp
jbe
mov
mov
ja
xchg
and
ja
mov
dec
ljmp
lods
stos
push
cmp
cmpsl
lret
push
dec
scas
add
jg
les
xor
daa
xchg
sets
mov
fsubrl
jns
dec
shlb
sub
jns
or
lock
dec
mov
cs
ja
pop
movsl
enter
ret
cs
shlb
nop
pusha
adc
jbe
or
and
loope
mov
mov
pop
sbb
xchg
testl
xor
cmp
push
pop
loope
loopne
imul
push
push
mov
add
jns
out
cmpsl
outsb
jg
mov
icebp
xchg
dec
mov
mov
push
pop
sbb
out
lods
inc
sub
dec
incl
cld
xorb
xchg
clc
cmp
cmp
lock
inc
mov
das
into
fnstenv
mov
scas
inc
and
rolb
mov
cltd
repz
test
and
and
jbe
les
rcrl
lahf
cmc
icebp
shr
mov
xor
jb
jmp
mov
cmp
cld
lcall
das
adc
push
sbb
ds
push
stos
sub
push
sbb
xchg
int3
mov
test
out
mov
ds
jnp
and
arpl
lahf
out
or
pop
mov
popf
jecxz
mulb
mov
aad
xchg
clc
ficoml
scas
xor
popa
bound
cmp
jns
pushf
xor
adc
loop
lea
add
mov
adc
adc
or
adc
pop
ljmp
lret
sahf
psllw
mov
xchg
lock
cli
mov
xor
cmp
xor
sbb
out
sbb
pushf
ja
loope
xchg
inc
pop
jmp
xchg
loope
ja
movsl
pop
rcll
clc
push
mov
and
fnstcw
int3
or
iret
andl
jne
jne
xchg
mov
lahf
into
stos
adc
addb
popf
jmp
mov
decl
pop
lods
adc
mov
mov
addb
adc
les
mov
shll
mov
cwtl
test
dec
cmp
sub
add
mov
or
dec
sbb
int3
ja
into
jnp
jge
std
shl
cmpsl
enter
mov
inc
adc
adc
jp
fsubp
mov
test
cld
xchg
and
xor
lret
push
sub
mov
mov
sub
mul
frstor
enter
adc
xchg
xchg
mov
int3
sahf
jae
pop
sahf
mov
mov
mov
lds
fidivrs
pop
push
negb
mov
test
mov
mov
into
push
add
test
dec
sub
add
cs
dec
mov
adc
popa
arpl
add
mov
cmp
mov
cmpsb
int
scas
loop,pn
lret
xchg
fstl
pop
pushf
cmp
sub
out
cwtl
lea
sbb
push
add
leave
xor
pop
push
popf
aad
jmp
xchg
les
div
cmp
sbb
std
clc
divl
mov
add
adc
cmc
fdivrl
mov
add
mov
mov
xor
addr16
jo
stc
test
cmpsb
sarb
mov
insl
ret
add
out
lcall
jg
in
pop
dec
jb
jp
cmp
adc
inc
in
test
loopne
notl
pop
add
add
ret
and
cs
add
insl
mov
daa
lds
cmpsl
cmpsl
lea
cmp
insb
lcall
imul
test
test
jo
inc
mov
das
nop
in
mov
mov
shll
or
cmpsl
pop
lods
cmp
loope
fwait
movsl
sti
int
int3
or
lods
sahf
ja
loope
mov
push
dec
sub
ljmp
and
cld
movsl
fwait
cmp
mov
gs
test
rcr
pop
inc
lds
sar
or
mov
dec
or
push
test
sahf
jae
ret
xor
lret
push
push
stos
add
shll
add
or
outsb
lcall
mov
fwait
mov
adc
mov
and
addr16
movsb
pavgw
jae
cmpsl
movsb
clc
shlb
dec
inc
adc
cmp
loope
mov
data16
daa
lods
or
fnstsw
dec
incb
or
jb
fdivp
pop
cli
jl
sbb
pop
fisubrl
jnp
loop
adc
stos
mov
mov
mov
ja
decl
cld
in
lock
mov
xchg
sbb
adc
xchg
mov
sub
mov
pop
cli
jo
or
sub
imul
sub
lods
xchg
pop
aaa
lods
xor
push
test
mov
sbb
sub
iret
add
repnz
sub
sbb
adc
aam
or
adc
pop
cs
incl
xchg
lods
inc
fs
cmp
fiadds
into
in
std
ret
jae
lahf
jno
or
dec
sbb
mov
fcoml
xchg
push
jne
sbb
pop
pop
adc
add
insb
xor
xchg
add
cmp
jmp
xchg
loopne
jno
shll
xchg
loop
adc
addb
jge
sbb
movsl
in
mov
shl
mov
lahf
ljmp
stos
imul
leave
pop
mov
sahf
shrb
push
mov
xchg
xchg
idivb
test
cmp
inc
orb
std
rcl
jns
lods
dec
cltd
adc
loope
push
imul
push
in
xchg
out
mov
jb
test
int
adc
dec
clc
xchg
mov
mov
sbb
sarl
test
push
jecxz
sbb
cltd
fdivrs
pop
fdivrl
fucomp
jg
jae
jl
pop
mov
xor
adc
push
pop
jae
in
pop
nopl
or
cld
push
stos
push
inc
push
aam
inc
cmp
sbb
stos
mov
sub
js
int
ret
aaa
cmp
lea
bound
data16
or
insl
sub
fs
int3
sbb
jmp
fildl
mov
out
gs
xchg
lret
jns
stos
imul
xor
pop
push
pop
mov
out
scas
out
out
mov
inc
test
dec
call
cmc
and
mov
push
cs
mov
out
je
inc
xchg
mov
ret
pop
ja
nop
mov
and
inc
inc
push
mov
adc
mov
adc
inc
loop
xchg
and
adc
mov
and
addl
ss
or
loop
cmp
orl
pop
dec
pop
iret
inc
mov
push
ret
jne
mov
or
inc
add
jge
loop
int
dec
sahf
setbe
xor
adc
ret
nop
cmp
adc
out
push
push
addr16
sub
cmp
push
je
mov
push
icebp
mov
rolb
lret
dec
xchg
mov
cmp
push
clc
sahf
mov
imul
divb
push
test
out
xor
pop
sahf
mov
movsl
repz
int
sub
loopne
pushf
sbb
jns
push
mov
push
lret
bound
int
cmp
jns
dec
in
adc
aam
jns
fildll
movsb
xchg
in
adc
das
lods
in
pop
ds
gs
setg
out
jle
ja
cmpsb
jge
push
or
arpl
icebp
sbb
sbb
push
sub
pop
cli
sub
clc
bound
repz
fistps
inc
sbb
cmp
popf
repnz
test
cli
idivb
stos
cmc
cmc
test
adc
inc
pop
arpl
pusha
lods
mov
test
in
mov
adcb
xor
andb
jecxz
dec
push
mov
cltd
arpl
sub
mov
adc
movsl
clc
es
cld
jmp
xor
movsb
cmc
add
fst
and
jb
pop
xchg
insl
in
shrw
fisubl
mov
lret
push
orl
addr16
out
jle
cmp
or
lds
enter
shrl
subl
sub
mov
jecxz
lods
inc
pop
mov
inc
adc
gs
pop
movsb
loope
test
adc
or
xor
lcall
mov
shl
push
aad
les
insb
push
dec
sub
mov
dec
outsl
push
xchg
mov
mov
insl
iret
mov
xor
outsb
or
adc
inc
push
or
in
pop
mov
loope
mov
call
cld
mov
lahf
loope
and
lret
nop
data16
jb
xor
and
mov
mov
xchg
lret
ss
xchg
call
popf
out
sub
push
xorl
sub
xor
dec
arpl
std
mov
mov
add
push
or
in
mov
clc
add
adcb
xchg
cwtl
daa
inc
sub
popf
hlt
lods
mov
jecxz
mov
sti
push
jecxz
dec
iret
int
cld
pop
movb
cwtl
mov
imul
mov
out
xchg
inc
push
and
dec
mov
cli
out
mov
lret
xchg
mov
cmp
test
lods
aaa
clc
xchg
jo
lret
inc
aad
leave
jge
push
add
imul
imul
mov
dec
fnstsw
fs
dec
insb
xor
ds
mov
pushf
mov
scas
pop
bound
sbb
pop
pop
mov
lahf
xchg
jecxz
or
jbe
mov
mov
push
jno
sbb
pop
mov
js
dec
add
fxch
mov
dec
push
filds
or
mov
pop
icebp
shrb
sub
cmpsl
jp
cmp
fwait
cmc
in
mov
clc
cmp
lahf
data16
pop
xchg
js
xchg
call
rcr
jge
mov
mov
int
xor
int3
add
mov
jbe
decb
fisubl
or
mov
daa
test
pop
pusha
xor
or
sub
pop
pop
lds
sahf
fsubrs
stc
outsb
mov
inc
sti
jp
or
xor
stos
sbb
push
xchg
fdivrs
roll
lock
cmp
mov
cmpsb
adc
and
fsubrl
lds
pop
and
xchg
or
or
push
mov
sub
lret
dec
sub
mov
inc
test
outsb
das
js
or
pop
cmp
and
xor
cmpsb
aam
adc
cmp
popf
dec
inc
adc
push
iret
cmp
dec
push
test
mov
mov
sbb
repz
leave
addb
roll
pop
mov
jl
inc
je
or
dec
cli
mov
sbb
test
ss
add
and
repnz
sub
sub
lods
out
xor
fnstsw
mov
test
push
popl
mov
in
xor
jns
jne
lret
adc
cmp
cmp
jbe
push
fadd
addl
mov
inc
scas
iret
pop
fwait
jbe
rorb
inc
jecxz
int3
push
inc
in
ret
mov
js
stc
add
ret
add
leave
xchg
sbb
mov
cmp
jg
mov
mov
and
xor
stos
or
jl
jp
lea
cwtl
mov
or
fdivrp
addb
out
or
jmp
ljmp
mov
inc
es
out
xchg
cltd
dec
stc
push
loopne
cs
push
sahf
cmp
dec
xchg
into
lods
fdiv
pop
hlt
int3
mov
daa
int3
jb
lods
sub
sbb
in
sarb
pop
inc
gs
jmp
sbb
add
and
into
or
lods
je
fbstp
movsl
xchg
in
xchg
jns
inc
pop
adc
shrl
and
aad
jbe
repnz
dec
adc
mov
cmpl
and
pop
bt
int
les
in
pop
mov
inc
push
cli
lods
pop
in
pop
dec
xor
das
pusha
ja
sbb
fiadds
cs
dec
jmp
inc
test
dec
xchg
cmp
decl
push
inc
dec
mov
cltd
negb
xchg
xchg
jno
xchg
cwtl
lea
das
dec
stos
and
sbb
sbb
into
ds
inc
push
pop
or
je
movsl
ss
mov
xchg
fmuls
lock
xor
cmovns
aad
and
push
xlat
nop
insl
outsl
je
push
cmp
cmc
repnz
add
ror
mov
in
adc
xchg
les
xchg
jl
ja
int3
loope
or
push
jle
inc
call
push
sbbl
ss
add
sbb
jnp
push
mov
mov
stos
jb
nop
mov
pop
lret
sbb
push
icebp
fcompl
fistpll
mov
mov
repz
xchg
xchg
pop
adc
push
scas
or
cs
fidivrl
imul
ss
push
push
repz
jae
inc
roll
lcall
lret
dec
lods
gs
sti
test
out
pop
jne
push
arpl
adc
test
popa
pop
lahf
xor
jmp
loopne
movsl
jbe
mov
mov
adc
mov
cmp
and
mov
call
cmp
mov
and
or
mov
mov
lret
inc
stos
or
and
repz
cmpsb
dec
mov
mov
xlat
or
lea
dec
loope,pn
mov
adc
mov
or
int3
addl
jns
mov
sub
cmp
es
sti
xor
sbb
fdivs
loop
push
imul
testl
jle
out
push
ret
xor
cs
test
iret
mov
pop
adc
or
rcll
sbb
pop
pop
mov
or
jmp
ds
pop
mov
rcr
mov
shll
mov
mov
ljmp
xchg
test
xor
jg
jae
sarb
and
push
pop
xchg
ljmp
test
cld
iret
cmp
in
stc
arpl
push
xchg
jmp
insl
fcomps
xchg
lret
es
test
sbb
imul
into
ljmp
dec
mov
fwait
lds
test
insl
imul
dec
dec
pop
mov
mov
inc
sbb
or
push
sub
out
mov
add
mov
jns
insl
xchg
adc
push
in
jg
pop
sarb
psrld
in
and
pop
adc
fnstenv
and
fimuls
lods
pushf
jp
test
sub
add
loop
adc
pop
inc
sub
xor
int3
mov
jg
cs
mov
out
xchg
xor
cmp
fxch
inc
loopne
ret
or
mov
ja
outsl
or
insl
sub
jns
xor
and
mov
mov
enter
mov
fisubl
sub
insb
pop
incb
mov
cmp
inc
mov
sti
lret
or
pop
negl
out
dec
mov
sahf
icebp
mov
push
fadds
inc
aad
repz
push
push
inc
stc
dec
addr16
xor
mov
jmp
insl
int
jg
or
adc
push
pop
inc
sbb
rcll
pop
lds
push
pop
dec
pop
mov
sbb
add
jmp
ds
and
sub
mov
fldenv
dec
jne
test
iret
out
and
pop
cwtl
stos
sbb
xor
aad
fists
jno
push
cli
mov
dec
add
mov
xchg
xchg
mov
mov
dec
cwtl
push
mov
push
mov
sbb
jmp
dec
fidivrs
test
lret
aaa
lods
fsubl
push
ljmp
mov
sbb
and
scas
cmp
xchg
xacquire
je
and
mov
sub
cmpsl
into
repz
dec
cmp
cmpsl
push
add
sbb
sti
sub
sbb
adc
addl
sbb
pop
shrl
push
xchg
adc
push
imul
jle
subl
mov
lret
mov
mov
pop
mov
cltd
pop
in
in
lock
scas
insl
movsb
or
repz
mov
sbb
cltd
xchg
sub
pusha
inc
or
lret
int
push
add
outsb
jae
daa
test
xor
je
xchg
lret
xchg
scas
mov
sub
mov
mov
icebp
jge
test
shll
ret
or
adc
jo
stc
out
adc
mov
push
pop
int3
loopne,pn
cli
ss
into
test
xchg
stos
sub
dec
or
push
ficompl
jmp
cmp
iret
mov
mov
pop
pop
in
pop
clc
xor
or
test
enter
push
pop
cli
pop
dec
jb
into
gs
inc
out
aad
sbb
ret
scas
cmpsb
sbb
rclb
jmp
dec
adc
jg
push
les
scas
push
xchg
xorl
mov
inc
pop
fcoms
or
lahf
std
test
adc
push
push
call
mov
mov
stos
push
stos
leave
into
into
scas
shll
push
add
ja
cmp
add
jns
out
xor
mov
push
and
test
inc
pusha
pushf
cmp
lret
mov
hlt
aam
or
or
inc
mov
dec
and
sbb
xchg
lret
fnclex
sar
decl
mov
repz
sbb
xchg
add
cmp
js
inc
pop
cli
mov
xchg
or
inc
adc
sub
repz
decl
jne
push
stos
nop
sbb
insb
and
sbb
jnp
es
cmc
loop
and
inc
inc
mov
call
xor
sti
pushf
mov
fsub
xor
adc
imul
loopne
repz
push
add
lds
stc
jge
sbb
fldt
popa
adc
jg
xchg
in
insb
daa
push
push
xlat
cwtl
inc
fld
adc
xchg
mov
repnz
mov
push
sahf
pushf
mov
mov
dec
push
stos
xchg
sub
call
push
xor
fbld
into
push
push
ljmp
xchg
push
fnsave
adc
stos
xchg
xchg
cmp
fcomps
daa
xor
xor
push
in
int3
adc
nop
pop
cmp
stc
dec
mov
pop
or
mov
dec
sbb
jne
rorl
and
mov
divl
aas
imul
jbe
push
fwait
je
push
lds
or
test
js
sbb
negb
rorb
mov
xor
test
fcmovbe
mov
add
dec
out
loope
cld
sarb
test
mov
dec
add
shll
xor
inc
jg
pop
adc
pop
cmc
jno
xor
repz
shlb
xchg
int
push
int
jmp
jecxz
in
xchg
inc
outsl
mov
into
ret
orb
aam
repz
xor
pop
xchg
loopne
lahf
mov
fists
gs
pop
pusha
stc
out
out
jge
lret
out
movsl
iret
sbb
shl
nop
stos
jae
lret
popf
sub
pop
xor
ds
pop
or
cmc
out
loopne
adc
jbe
jp
outsb
xchg
cltd
mov
clc
enter
cmp
dec
mov
mov
nop
ljmp
mov
lods
mov
stos
dec
sbb
cmp
loope
adc
addr16
dec
pop
xchg
add
mov
bound
rcr
mov
sub
adc
dec
sahf
int
xorl
inc
jb
aaa
stos
mov
jp
add
push
mov
xor
inc
popa
add
dec
cmp
pop
bound
xor
and
lret
ja
call
je
subl
enter
pop
fs
test
jns
std
cmc
fbstp
push
sbb
bound
inc
push
lds
daa
inc
cmp
xchg
mov
jmp
fisubrl
mov
sbbb
dec
xor
mov
push
pop
xchg
repz
stos
cwtl
hlt
cmp
int
xchg
frstor
nop
es
out
add
xor
mov
js
addr16
std
xchg
or
and
lods
ljmp
jl
mov
dec
cmp
dec
push
and
stos
inc
jo
inc
sub
int3
push
out
cmp
outsl
inc
hlt
pop
mov
mov
pop
lods
cmc
sub
sub
out
mov
jo
sti
or
mov
sbb
loop
pop
mov
push
imul
jnp
sbb
and
outsb
mov
je
cltd
cmp
sti
jp
inc
aas
adc
ret
or
push
enter
pop
cmovne
addr16
sub
divb
ret
and
cmp
fnsave
scas
and
je
pop
mov
jl
loopne
push
sar
or
adc
xor
adc
inc
icebp
fcmovnbe
sbb
leave
push
add
ss
outsl
cmp
mul
cmp
js
jno
mov
push
ret
leave
inc
cs
sub
jb
enter
dec
jle
mov
call
sub
das
dec
mov
xchg
sti
mov
stc
sub
jge
sub
ret
repz
xchg
lret
sub
js
loope
aad
sahf
xor
je
aam
jns
shlb
imul
pushf
fsubs
cmp
inc
subl
jae
push
in
mov
mov
push
adc
sbbb
lds
filds
xlat
add
pushf
pop
gs
or
and
adcb
pop
mov
and
jno
pop
mov
popf
dec
ss
push
imul
out
cmpsl
icebp
add
neg
dec
pusha
push
ror
jle
mov
xchg
mov
cmp
cmp
testl
insl
leave
fwait
out
cmp
or
inc
ljmp
dec
add
inc
js
mov
sub
jl
ds
dec
das
lret
roll
add
adc
loope
popa
mov
cmpsb
fwait
dec
ret
xchg
push
stc
or
gs
mov
fildl
ss
cli
stos
fiadds
fbld
movsb
mov
mov
mov
sbb
mov
loop
imul
xor
scas
outsw
jp
mov
jne
scas
jmp
xor
lret
in
bound
ja
cmc
mov
mov
mov
pop
int
push
xchg
dec
push
push
push
sbb
jbe
xchg
test
pop
jle
xchg
loope
scas
or
mov
adc
mov
sub
push
pop
scas
sbb
and
jae
arpl
inc
adc
ss
cli
in
jbe
mov
mov
dec
mov
cmp
push
mov
ljmp
shll
or
hlt
into
fisubrl
xlat
flds
sub
leave
ss
test
rorb
sti
fists
mov
jb
cld
sysret
ret
and
cmp
in
and
push
mov
arpl
mov
xchg
scas
sub
xchg
push
sbb
jnp
fdivrl
sbb
aam
cld
dec
pop
dec
jo
or
or
cmp
in
imul
lods
jmp
lods
int3
and
scas
pop
imul
jbe
shrl
out
stc
and
sbb
sbb
sbb
out
mov
aaa
mov
pop
in
aad
cmpsl
sub
test
les
inc
and
aaa
jb
or
xor
cmpsb
in
ret
cs
mov
les
adc
lds
cwtl
push
test
out
adc
mov
enter
jae
add
test
cltd
mov
xor
call
push
jl
jl
cli
and
adc
add
les
mov
xchg
mov
data16
jns
or
xor
mov
jmp
and
outsb
inc
xchg
lret
aad
inc
jne
subb
loopne
lods
in
mov
xchg
jg
push
notl
dec
lock
rcl
leave
std
outsl
negl
inc
dec
pop
das
inc
aaa
ss
pop
out
xchg
cmp
cmp
jle
aad
and
popa
mov
fnstsw
pop
mov
std
in
int3
xchg
jb
ljmp
pmovmskb
dec
test
mov
ret
xchg
ljmp
xchg
sub
xchg
jg
lock
popf
inc
stos
lahf
push
test
stos
jecxz
inc
ret
imul
mov
or
dec
xchg
push
mov
dec
in
xor
push
mov
cli
cmp
shrl
std
xchg
lea
stos
repnz
mov
rolb
push
sub
in
stos
mov
jno
in
jp
test
das
pop
push
push
mov
jmp
sub
jp
int
imul
xchg
fadds
cmp
inc
imul
fucomp
and
scas
pop
xor
jp
mov
add
out
mov
sub
mov
or
sub
push
loopne
add
outsb
lock
daa
push
add
sub
mov
test
data16
jmp
jg
mov
leave
dec
mov
fistpl
in
fisttpl
ret
ret
adc
lods
aaa
sub
jae
andl
mov
scas
clc
sbb
cmp
jnp
pusha
cmp
cwtl
or
movsb
mov
mov
insl
pop
xor
jge
inc
jne
divb
lds
dec
jno
jae
inc
and
xchg
xlat
dec
dec
and
inc
add
repz
push
scas
loop
les
push
and
repz
test
movb
mov
fsubl
dec
or
mov
inc
in
push
iret
cmc
mov
jo
les
jbe
mov
js
sahf
sahf
pushf
fnstcw
pop
push
or
cmp
pushf
xor
je
jns
jbe
scas
sub
adc
frstor
stos
cmp
mov
icebp
shlb
xor
stos
test
movsb
pcmpeqd
lahf
fs
inc
loopne
jge
lret
pop
and
cmpsb
scas
imul
jbe
int3
add
inc
sti
arpl
push
inc
lcall
imul
lret
push
insl
xor
or
test
cmp
xchg
or
hlt
mov
sbb
inc
stos
loope
jecxz
fs
dec
jmp
bound
mov
jns
fwait
push
test
mov
and
addr16
nop
testb
mov
jmp
mov
pop
xchg
dec
out
xor
cmp
xor
ds
pop
loopne
push
mov
sub
out
outsb
out
mov
jne
jns,pn
jp
lds
cmp
dec
rcr
sarb
nop
or
cld
lea
fisubrl
arpl
roll
sbb
mov
cmpsl
ds
repnz
sbbb
mov
adc
aaa
leave
scas
push
adc
jmp
dec
insl
pop
hlt
push
paddq
cmpsb
cmp
adc
lahf
push
sbbl
fstl
fimuls
jae
into
lock
lock
mov
mov
fstps
push
jp
mov
xchg
and
xchg
int3
int3
xor
mov
xlat
gs
mov
gs
pop
add
xchg
pushl
add
ljmp
outsl
push
pop
stos
aaa
sbb
xor
stc
inc
leave
pop
in
mov
pop
test
inc
mov
jle
sbb
inc
push
mov
iret
or
aam
std
inc
aas
add
das
les
es
push
inc
mov
push
inc
or
jl
xor
pop
out
arpl
test
dec
xor
push
push
rsm
fwait
iret
daa
xchg
lods
add
and
in
or
mov
and
mov
subl
aas
loop
sub
dec
xchg
call
jne
jb
pop
xchg
cwtl
sub
out
iret
pop
arpl
jle
pop
aas
jecxz
or
dec
imul
popa
push
xchg
ret
lock
in
and
or
jecxz
push
popf
lea
xor
jmp
sbb
xchg
lret
sahf
imul
dec
dec
lock
into
testb
mov
mov
out
sub
jp
push
fsubp
mov
pop
aam
push
push
mov
push
cld
mov
adc
call
xchg
ret
mov
mov
jl
fld
dec
stos
push
out
jmp
in
mov
jbe
xchg
jmp
in
arpl
jbe
mov
add
push
mov
outsb
adc
mov
sbb
sbb
sub
fdivrl
mov
and
loop
cwtl
push
dec
pop
insb
jmp
push
xlat
xor
mov
mov
and
shll
cld
imul
mov
orb
cmpsb
pop
push
dec
ret
jge
int3
jbe
in
cmpsb
movsl
or
lcall
adc
xchg
or
jg
outsl
fxch
inc
andb
jne
aam
adc
call
lods
lods
ljmp
in
xor
rcrl
dec
sub
push
faddp
imulb
mov
ret
out
sub
mov
pop
int3
mov
lea
dec
mov
pop
push
mov
jb
stos
decb
or
out
adc
push
hlt
pop
add
pop
mov
add
stc
push
adc
clc
cltd
std
cld
xor
xchg
push
push
xlat
pop
mov
fistpl
or
lea
or
mov
test
jle
cmp
inc
adc
cli
add
popa
xchg
test
dec
loopne
orb
adc
mov
mov
lret
fiadds
or
and
xor
stc
dec
ds
shl
mov
pop
fimull
sbb
or
or
fisttps
mov
sahf
fnstcw
push
push
in
push
stos
and
push
mov
or
in
pop
mov
inc
xchg
add
adc
in
out
mov
and
or
pop
lods
jp
addb
gs
push
arpl
inc
fnsave
test
rolb
int3
mov
push
enter
or
or
lret
push
push
mov
and
test
xor
cmp
mov
imul
rorb
ret
mov
fldt
stos
inc
inc
mov
data16
sarl
es
xchg
shr
fld
int
ret
mov
mov
lods
or
hlt
add
mov
aas
or
cmp
pushf
push
xor
fmuls
lock
add
and
sahf
sub
jg
subl
fnstcw
jg
jmp
cmpsb
lods
mov
push
call
mov
out
fsub
add
andb
in
dec
xor
push
mov
and
lret
mov
and
in
jle
in
dec
jns
cmp
jae
rclb
int
mov
xor
shll
push
lret
aaa
mov
fisttps
movl
dec
xor
addb
pop
push
stos
adcl
pop
cmp
imul
inc
mov
jns
and
pop
je
lea
insb
fmuls
addr16
or
daa
inc
xor
daa
cs
lods
sbb
leave
xor
pop
insb
outsl
sub
pop
sbb
aaa
fisubl
sbb
mull
xchg
jg
and
insl
into
push
pop
mov
mov
das
adc
mov
pop
outsl
sbb
es
adc
outsl
cmovb
xchg
push
incb
pop
pop
inc
xor
adc
xlat
pop
cmpsb
dec
clc
nop
mov
mov
into
cmp
lods
popa
jno
sub
mov
push
jno
sub
push
cld
out
cwtl
js
inc
sbb
or
mov
add
jbe
fwait
jb
mov
xor
int
iret
pop
outsl
or
mov
mov
shl
xor
sbb
sbb
cltd
les
in
decb
push
ja
mov
inc
cmpsl
cmpsl
dec
adc
sbb
push
inc
dec
mov
fsubl
adc
outsb
sub
imul
xor
es
ret
cmp
repnz
lret
push
mov
ja
mov
pop
clc
les
cs
scas
aas
mov
out
xlat
push
xlat
push
cwtl
test
cmpsb
pop
fisttpl
pop
inc
xor
dec
pop
lcall
je
nop
or
mov
jae
aam
mov
sub
mov
jg
cmpsb
out
mov
mov
mov
mov
pop
or
push
stos
sub
dec
mov
push
in
lock
sub
iret
pop
adc
cwtl
out
sbb
jns
sub
cmovne
sub
js
out
stos
mov
clc
movsb
test
sub
in
dec
sbb
js
and
cltd
dec
in
and
xchg
mov
test
cwtl
pop
push
mov
test
pop
rcrb
jbe
mov
xor
pusha
adc
inc
lods
xor
daa
add
lcall
jmp
jge
iret
insb
inc
push
int3
cmpsl
dec
sub
mov
mov
loop
push
jmp
ljmp
pusha
xchg
fidivrs
mov
dec
and
mov
mov
xchg
loope
pop
pushf
mov
dec
inc
movsb
cwtl
enter
mov
push
sbb
push
mov
mov
mov
adc
rep
imul
push
in
js
or
nop
ss
xchg
aad
xchg
ss
jle
popf
outsl
arpl
nop
cmpsl
xor
push
loope
inc
sbb
fiaddl
mov
jmp
outsl
push
call
cmp
sub
movsb
iret
or
mov
pop
jno
loopne
adc
jbe
cli
mov
jne
inc
lfs
push
iret
mov
insl
dec
xor
jnp
out
lcall
lods
dec
clc
iret
nop
cmp
push
dec
sbb
cld
mov
inc
xor
repnz
xor
add
cltd
or
cltd
je
jmp
cltd
mov
jp
je
jmp
jp
xchg
jae
rorb
mov
xchg
mov
push
pop
test
lds
mov
adc
test
fwait
outsl
aaa
and
sbb
arpl
nop
out
lret
jl
mov
cmc
adc
call
aaa
aaa
mov
inc
push
push
adc
cmp
insb
mov
xlat
adc
dec
dec
push
push
dec
adc
adc
adc
leave
adcb
movsb
pushf
outsb
mov
fucomi
jno
outsb
fs
out
mov
push
sbbl
ja
jb
or
push
test
arpl
pop
or
sub
or
pop
lods
fidivs
xchg
cmpsb
cmp
int3
dec
xor
fcomps
stos
jne
xor
pop
add
roll
cmp
divl
mov
jo
dec
push
push
xor
loop
in
mov
mov
sarb
lock
aam
cwtl
push
divb
out
cld
sub
dec
jl
xchg
std
out
enter
pop
arpl
outsb
xor
xlat
pop
jl
das
popf
and
cmp
jb
xor
cltd
stos
int
mov
sbb
and
and
and
stc
xchg
inc
mov
fwait
xchg
icebp
int
pop
inc
xor
xor
xor
ret
insl
in
repz
fwait
gs
outsl
inc
sbb
or
sbb
pop
dec
jb
fcoms
sti
mov
cld
push
dec
jecxz
push
insb
data16
dec
mov
lahf
xor
test
push
loope
pop
add
push
pushf
add
mulb
xchg
test
nop
out
iret
repz
sti
cmp
aam
inc
pusha
addr16
imul
nop
popa
fbstp
inc
ret
jmp
adc
fisubrl
adc
dec
cmp
andb
jmp
out
pop
mov
sub
lods
lahf
incb
adc
mov
idivl
jne
cwtl
pop
popl
mov
loopne
lds
push
xchg
cmpsb
dec
sarb
push
jb
sub
in
or
rolb
push
test
jne
ffree
mov
add
clc
adc
sbb
pop
add
inc
into
mov
push
xor
sarb
and
rcll
dec
jb
mov
sarb
dec
mov
roll
push
cmp
mov
push
popa
xor
sub
stc
negl
ss
repz
ret
adc
mov
or
aas
lahf
xchg
stos
and
push
cltd
ror
lcall
hlt
insb
push
sti
sbb
iret
xchg
jp
mov
movsb
cmc
mov
pop
repz
pop
sub
leave
adc
jle
dec
rorl
cmp
movsl
xchg
or
lret
mov
push
dec
stos
push
pop
fidivs
fldcw
clc
pop
dec
outsb
in
and
out
cmpsb
inc
arpl
inc
jge
popa
test
fwait
cmc
fisubrs
xor
push
and
out
mov
sbb
pop
neg
lahf
mov
cwtl
dec
and
aad
std
mov
gs
das
or
mov
xor
cmc
dec
dec
xchg
dec
icebp
xor
into
ss
jle
lret
add
stos
test
mov
dec
jle
lret
cmp
mov
into
sub
and
in
shrl
and
test
shll
jo
in
addl
sbb
imul
sub
mov
aam
mov
add
loopne
adc
xchg
cmp
jp
dec
cwtl
fnstenv
clc
sub
mov
sub
add
mov
add
xlat
and
aam
fwait
jmp
out
call
pop
xchg
lcall
iret
les
add
mov
stos
mov
das
sub
arpl
or
mov
xor
sub
std
xor
testl
out
cmp
mov
pop
shll
jle
adc
sti
jmp
cmp
mov
hlt
and
inc
mov
aas
pop
ds
pop
lcall
inc
pop
das
mov
mov
rcrb
loope
mov
les
push
jnp
fadds
fnsave
mov
cmc
inc
or
xor
mov
mov
rolb
shlb
jg
arpl
push
xor
jne
push
adc
inc
push
lcall
mov
jne
cld
or
pushl
cmp
stc
add
mov
lcall
push
popa
xor
mov
add
push
xchg
and
aas
jnp
adc
jge
jne
das
loop
rorb
rcr
arpl
in
dec
jae
sbb
or
lea
aaa
sbb
inc
fisttpll
imul
inc
sbb
pop
icebp
movsb
xor
adc
ret
imul
lods
xchg
mov
jmp
into
mov
dec
mov
lret
insl
xchg
and
push
mulb
cmpsl
cmpb
loop
add
pop
sub
pop
imul
lock
and
pop
xchg
inc
scas
jne
or
ret
lcall
dec
shrl
add
cmp
jle
adc
mov
into
test
das
addr16
dec
cmpsl
stos
push
pop
inc
dec
pop
dec
mov
fwait
cmpsl
int
mov
push
stos
and
mov
or
pop
mov
add
int
cmp
inc
xchg
and
in
inc
mov
xor
insb
push
dec
sahf
inc
cld
pushf
pushf
pop
es
sti
cli
inc
cmp
inc
mov
push
or
dec
dec
lods
sub
adc
mov
hlt
mov
movl
xor
call
iret
pushf
sub
push
jle
movb
mov
mov
mov
pop
mov
sub
sbb
xchg
out
mov
jle
pop
xchg
fs
lods
xchg
lahf
fcomi
cmpsb
clc
dec
xor
enter
rorl
xchg
xchg
inc
pop
mov
sub
out
punpckhdq
out
mov
jae
imul
dec
jns
adc
jge
push
or
bound
ret
ds
mov
mov
arpl
shll
test
outsl
data16
dec
jno
xor
test
mov
fisttpll
popa
push
cwtl
pop
push
and
cmp
cmp
jb
cmpsl
push
repnz
in
insl
mov
xchg
inc
dec
jb
fdivl
jnp
inc
xchg
mov
xchg
sahf
out
inc
not
mov
add
test
movsb
lcall
or
dec
popf
dec
and
adc
dec
aaa
xchg
in
fisttpll
ret
push
inc
push
pop
shlb
aad
in
sbb
out
repnz
xchg
sar
push
jno
xchg
lea
ret
int
and
or
incl
push
lret
mov
pop
sbb
mov
jecxz
mov
or
and
pop
mov
addl
inc
negb
in
pop
and
dec
out
test
jecxz
arpl
outsl
addr16
rcrl
test
cmp
cld
sub
aas
aaa
cli
mov
sbb
xor
test
mov
xor
jl
adc
arpl
out
in
xor
fxam
or
sub
ds
aas
stos
out
test
dec
loope
divl
jg
pop
jnp
push
popa
lret
mov
movsl
pop
inc
pop
into
inc
mov
sub
inc
fucomi
lea
loope
or
ja
dec
xorb
inc
push
bound
hlt
clc
xor
inc
inc
dec
insb
adc
mov
xchg
fisttpll
in
cmp
xor
push
xlat
in
fisubs
mov
dec
movsb
mov
ljmp
push
mov
ss
lods
imul
push
add
jbe
push
pop
jno
adc
adc
pop
mov
dec
hlt
mov
leave
imul
into
es
rclb
in
xchg
arpl
outsb
clc
es
call
rol
add
test
gs
cmp
and
sbb
pushf
push
cltd
jne
add
in
adc
sub
out
mov
jl
add
leave
adc
jecxz
xor
out
inc
pop
fucom
imul
mov
pop
into
int
shll
push
mov
sbb
popw
push
mov
mov
mov
cmp
rol
and
enter
ss
xorl
cs
inc
fs
leave
adc
mov
dec
jmp
and
mov
pusha
lret
ljmp
mov
movsb
cmp
push
and
cmc
pop
mov
push
push
add
mov
aad
add
and
inc
and
out
dec
cltd
add
repnz
cmp
sbb
inc
jp
cmpb
mov
xchg
in
lret
iret
mov
pop
stos
xchg
sbb
jmp
mov
aaa
xchg
sub
fsubs
int3
andb
add
or
testl
mov
loope
mul
inc
sub
sbb
jmp
cld
das
addb
outsl
outsl
pop
cld
fdivrs
add
mov
cmp
pop
mov
xor
and
scas
xor
lods
sub
xor
add
arpl
int
mov
push
xchg
imul
jl
into
aam
mov
pusha
pop
xchg
jb
test
or
movsl
mov
shrl
adc
call
dec
cmc
repnz
mov
mov
fwait
mov
xlat
test
inc
sub
dec
shrl
paddusb
inc
addr16
jb
loope
ss
inc
mov
in
repnz
loope
push
cwtl
pop
pop
ja
mov
adc
dec
inc
pop
stos
lock
or
xchg
push
bnd
cmp
nop
xor
xor
jo
xchg
in
addr16
jno
pop
shlb
mov
push
push
fcomps
xlat
xchg
stos
dec
out
mov
ficompl
inc
mov
inc
pushl
or
ja
out
data16
scas
sbb
ret
test
sub
movsb
cmp
loopne
jae
push
out
and
lds
mov
jns
xchg
jmp
pop
pushf
sub
or
jno
enter
sbb
test
pop
cmp
insl
in
lock
mov
cli
out
iret
and
jne
outsb
cmpsb
ss
xor
subb
mov
pop
xchg
scas
xor
pop
fcmovnu
stos
push
pop
fninit
cmp
sbb
imul
push
push
popa
xor
cli
pop
fcmovu
insb
int
mov
xchg
xor
adc
loop
adc
cmp
lret
filds
pop
cli
sbb
mov
or
cld
xor
xchg
cli
or
mov
aaa
stos
arpl
push
in
dec
pop
mov
jecxz
ror
or
or
loope
push
mov
cmp
push
arpl
test
add
lret
cmpsl
push
je
push
jnp
aaa
adc
cmp
or
push
push
ret
lods
pop
je
adc
imul
cltd
or
or
repz
leave
cmpsb
mov
loope
outsl
das
and
dec
and
shl
test
repz
icebp
cltd
jbe
fwait
imull
bound
enter
and
mov
addb
mov
scas
es
std
jge
out
add
testb
hlt
inc
mov
int
inc
hlt
cltd
mov
xor
aas
xchg
fcmovnb
mulb
cmp
xchg
test
sub
test
cmp
mov
adc
xchg
pop
add
mov
mov
ficompl
or
or
mov
dec
mov
pop
outsb
xchg
scas
jbe
push
test
pop
sarl
mov
faddl
adc
fsubl
mov
jp
jg
sbb
lret
fildl
arpl
add
rorb
shll
repz
and
dec
testb
add
pop
cli
inc
mov
ret
fcoms
xchg
lea
imul
rcll
repz
jne
cmp
scas
dec
sub
popf
lods
ss
out
fs
lahf
fwait
mov
cmp
dec
dec
mov
or
and
xchg
mov
movb
mov
out
insl
push
cmpsb
cld
mov
out
out
jns
push
dec
mov
add
sbb
iret
cld
call
xor
pushf
rclb
arpl
jmp
jae
imul
loop
jle
gs
adc
add
mov
mov
pop
jg
call
sbb
xor
insb
shrb
mov
cmp
inc
or
jae
lret
mov
xchg
jo
jo
xchg
ja
and
repnz
fadd
ds
imul
pop
insl
mov
pop
mov
int3
andb
repnz
pop
lods
pop
out
outsl
repz
int3
adc
jnp
popf
mov
pop
xchg
lea
bound
in
mov
mov
or
repnz
inc
dec
out
xchg
push
loop
decl
pop
xor
push
mov
jle
and
rcrb
add
mov
sbb
mov
jmp
cmp
sbb
inc
mov
lret
push
dec
in
mov
outsb
mov
movsb
push
popa
xchg
mov
push
dec
pop
insb
adc
sub
ss
lods
call
adc
jg
js
inc
sub
push
jmp
ljmp
scas
mov
in
fimuls
or
mov
ror
cli
dec
cs
jno
pop
test
lahf
add
xchg
mov
test
decb
lock
clc
cltd
ja
inc
adc
repz
xchg
xchg
xor
mov
cld
cli
out
sahf
xchg
iret
rorb
lods
notl
gs
stos
stc
add
mov
mov
jl
imul
add
push
dec
pop
mov
gs
insl
pop
mov
lret
and
sarb
jecxz
xlat
sub
cmp
add
cmpsl
mov
jecxz
push
adc
cmpsb
xchg
xchg
cmc
mov
call
sub
jns
sub
fsubr
sub
cmp
aam
pop
aaa
xchg
pop
and
jmp
xor
add
pop
xor
inc
lods
nop
cmp
mov
jb
jmp
into
clc
add
roll
jg
flds
or
inc
std
mov
pusha
std
xchg
xor
clc
sbb
in
adc
cmp
xor
cmp
sbb
xor
mov
mov
insl
fcoms
cltd
int3
mov
js
arpl
xchg
jo
in
popf
lret
pop
and
jmp
pop
inc
cmp
je
shrb
aas
mov
insb
mov
into
rcrl
ds
imul
loope
bound
ss
shlb
jo
xlat
ja
lea
int3
insb
lret
xor
frstor
pop
cmp
sbb
aas
and
xor
mov
aas
rcl
ss
inc
pop
push
mov
lods
icebp
add
cld
push
stc
and
pop
or
cwtl
fdivp
aas
test
popa
nop
loope
lock
fistps
xchg
or
xchg
dec
ss
sub
sti
loop
cltd
jae
push
xchg
cwtl
cmp
pop
inc
lods
pop
fisttpll
aad
cld
movsl
pop
and
inc
lcall
gs
xchg
cmp
insb
fmuls
mov
dec
mov
mov
jnp
les
lret
or
sahf
xlat
mov
popf
repnz
and
inc
out
mov
movaps
lahf
rcl
or
xor
out
jb
dec
in
je
mov
cmp
frstor
mov
shlb
fcmovnu
xor
mov
mov
push
mov
lods
sbb
int
sub
mov
rorl
popf
mov
es
adc
out
jnp
in
in
mov
cli
ja
xor
adc
out
dec
sahf
pop
imulb
xor
sbb
loopne
cmpsl
std
call
xor
ret
cmp
cmp
or
cltd
inc
mov
sarl
clc
test
or
pop
mov
fwait
test
add
mov
sti
sub
test
xchg
push
pushf
lahf
mov
clc
ljmp
jmp
sbb
loope
mov
mov
cmp
ror
mov
loope
imul
fiadds
push
pop
imul
adc
xor
adc
lods
iret
sbb
ljmp
mov
adc
dec
mov
mov
outsl
les
mov
jne
inc
inc
xor
mov
ljmp
sub
inc
push
and
cmc
push
lret
testb
ss
aam
xchg
pop
stos
movsl
aad
sti
mov
sub
adc
jecxz
mov
dec
scas
cld
enter
sbb
cmp
pop
sub
mov
rcr
scas
mov
pop
mov
mov
int
xor
jmp
cmp
pop
push
mov
addr16
dec
clc
fldcw
pop
push
lahf
xchg
add
mov
into
mulb
adc
leave
sbb
jno
xchg
push
pop
cmp
mov
and
ret
add
or
and
fsubl
jnp
jbe
mov
and
xor
mov
lods
or
enter
pop
and
pusha
mulb
pop
pop
mov
in
inc
mov
xor
stc
je
and
sbb
add
out
sub
jmp
inc
imul
or
sub
aam
loope
js
adc
addl
jle
and
jae
addr16
jbe
jmp
pop
dec
and
cli
sbb
inc
xchg
lock
push
mov
cmpsl
inc
push
sub
lds
cli
jmp
jo
in
jmp
shl
out
xchg
mov
loope
ja
xor
movsb
jecxz
jp
pushf
sbb
loop
add
lea
pushf
iret
fstl
xor
xor
ss
add
cmpsl
pop
aaa
xchg
lahf
inc
xchg
aam
out
add
roll
dec
dec
push
and
lahf
adc
sub
mov
sbb
inc
jb
fstl
inc
call
adc
popa
lock
mov
mov
pop
jae
cs
inc
sbb
shll
sub
lret
out
movsl
out
nop
cmpsl
repnz
popa
xchg
fistpl
divl
push
nop
jg
adcl
mov
pop
mov
push
or
enter
aas
xor
jmp
bound
xchg
pushf
pop
xor
mov
outsl
int
and
rcrl
and
lods
xor
dec
sub
and
pop
repnz
jp
aam
sub
mov
je
mov
mov
mov
or
cltd
and
push
and
push
repz
and
pop
xchg
insb
mov
popa
ja
ds
mov
jg
sbb
out
inc
inc
js
cmpsl
push
inc
out
cmp
ja
sbb
and
inc
aaa
fs
mov
xchg
mov
les
les
movsb
inc
jg
gs
mov
inc
dec
lcall
push
gs
scas
shrl
ret
outsb
mov
xor
mov
jl
mov
in
mov
jg
mov
sbb
and
fstpt
push
sub
fsub
sub
jnp
xlat
icebp
push
scas
fldt
push
das
in
xchg
or
sbb
ljmp
push
popa
pop
inc
ffree
in
cmp
jmp
dec
push
push
in
pop
mov
and
xlat
lcall
sbb
js
aam
mov
enter
stc
pop
jnp
test
or
dec
lret
jl
jns
jbe
jge
adc
xor
xor
pop
out
jp
xchg
push
in
sahf
mov
xor
jae
sub
or
sti
mov
lods
sbb
test
sub
call
add
sub
es
loop
jo
shrb
cmp
dec
scas
sbb
in
xchg
daa
mov
sbb
shr
insl
xchg
or
lea
cmp
sbb
jne
cli
aam
leave
stos
scas
lahf
xchg
les
jl
and
push
pop
mov
fstpt
arpl
and
scas
sbb
shll
push
inc
mov
jnp
and
data16
int
xor
xchg
cld
scas
and
imulb
movsl
cmp
lods
mov
cltd
xchg
inc
push
adc
or
es
dec
imul
adc
imul
mov
sbb
imul
imull
call
jp
xlat
arpl
mov
xor
xor
mov
mov
fisubrl
mov
std
xchg
pop
shlb
push
sub
movsl
movsl
test
mov
pop
mov
cs
or
push
push
ror
pop
shll
xor
pusha
jb
sub
jo
test
nop
shl
dec
jo
out
int3
ret
insl
and
ds
push
sahf
mov
jge
lcall
notb
jb,pt
mov
push
pop
jo
hlt
bound
stos
dec
fdivrl
pop
jp
test
stc
sarl
add
mov
cmp
jmp
pop
enter
push
pop
and
cwtl
jp
mov
pop
adc
cwtl
scas
or
inc
mov
aas
test
dec
mov
jns
mov
inc
xchg
fdivl
rorl
pop
and
jb
ficoml
push
test
xchg
fwait
mov
enter
faddp
scas
jno
push
popa
xor
mov
xor
xchg
andl
mov
sub
call
dec
das
xor
enter
xor
mov
add
mov
xchg
ror
xchg
ret
rcrl
xor
cli
mov
mov
mov
dec
or
mov
dec
movsb
mov
cmp
ja
or
outsb
aas
mov
shl
cmp
cmp
cmp
mov
push
pushf
out
xor
sub
and
adc
stos
dec
mov
fisttpll
je
push
inc
xchg
mov
push
push
in
pop
testb
and
xlat
push
push
adc
shrb
out
out
mov
adc
sub
dec
adc
adc
test
fs
icebp
lods
into
ja
pop
aaa
shlb
jecxz
adc
inc
pop
cmp
clc
adc
int
cmp
mov
push
scas
mov
mov
ror
mov
lret
xchg
xchg
inc
nop
push
adc
dec
lods
mov
jle
mov
xchg
testb
jecxz
push
xchg
in
fldt
orb
inc
in
shlb
ret
xor
cmp
fwait
jle
int3
hlt
insl
pop
call
inc
inc
ror
inc
mov
rcpps
into
hlt
mov
adc
fstps
push
sbb
enter
xchg
cmpsl
push
ret
rorl
arpl
dec
ds
mov
int
sub
adc
jmp
insl
add
cli
xor
xchg
adc
xchg
out
and
cmc
test
stos
jae
adc
xlat
stos
dec
popa
out
and
clc
iret
popa
push
jmp
pop
testl
and
sub
sarl
mov
cli
fcoml
std
and
xchg
pop
jmp
push
pop
nop
loop
cmp
scas
sub
push
mulb
dec
lock
or
adc
push
imul
jnp
cld
fsubrs
xchg
mov
xlat
rolb
jno
repnz
rol
lods
dec
stos
push
jbe
std
fs
loop
push
hlt
pop
xorb
xchg
cmc
popa
xchg
std
shrb
or
les
pop
icebp
loope
mov
sub
loopne
shrl
add
add
popa
dec
bound
in
jmp
fs
test
xor
addr16
cmpsb
in
adc
fs
cmp
cmp
cltd
ja
or
cmp
loop
lea
dec
shl
lret
in
mov
and
xor
or
jo
mov
xchg
repnz
jne
cmp
test
mov
add
dec
mov
lods
rcrl
loopne
out
and
add
shlb
les
mov
sub
jo
lahf
addb
jo
cmp
lret
out
push
mov
add
jmp
add
insl
hlt
shll
cwtl
push
lds
cmp
in
arpl
dec
jl
movsl
and
cmpsb
xor
jp
bound
mov
xchg
inc
push
lret
cmpsl
or
mov
and
xchg
fimull
xlat
rcrl
cmp
cld
lea
and
xchg
std
movsb
cmpsb
test
outsb
pop
das
orb
js
mov
mov
jle
imul
inc
mov
xor
xorl
bound
fsubr
cltd
mov
icebp
mov
or
push
push
pop
jle
fsubl
mov
cmp
xchg
add
mov
xor
cs
roll
gs
pop
cmovne
pcmpeqb
daa
mov
inc
mov
dec
sbb
out
lcall
aaa
out
es
cli
xchg
sahf
test
cwtl
and
or
subb
ror
inc
pop
push
stos
loope
push
out
lock
jp
sahf
pusha
insb
cmpb
xchg
stos
in
icebp
sbb
mov
mov
lcall
mov
cs
pop
std
aas
dec
sub
xor
mov
fisubs
mov
pop
adc
mov
mov
fldcw
shll
cmp
adc
icebp
and
sbb
sbb
mov
mov
sub
jae
bound
and
push
cmc
lods
lahf
sub
jl
pop
test
aad
jmp
aas
roll
repnz
pop
or
imulb
aaa
cmp
and
mov
daa
shlb
sbb
std
add
flds
push
icebp
mov
sub
inc
mov
mov
dec
pop
xorb
leave
test
add
add
or
sub
loop
push
mov
cs
adc
fdiv
and
dec
xchg
cwtl
xor
mov
inc
out
nop
in
add
aam
pop
sub
inc
lods
sub
dec
mov
imulb
cmp
into
mov
inc
mov
int3
push
cwtl
stc
or
fdivrs
pop
cwtl
sub
adc
imul
xor
xor
loopne
scas
ss
inc
fs
imul
out
stos
cmp
xchg
cmp
add
jge
xlat
inc
jmp
ljmp
mov
jmp
in
lods
cli
dec
inc
mov
inc
sub
xlat
repnz
xchg
mov
push
push
push
rclb
mov
and
xchg
add
inc
loop
push
pop
push
fdivrs
ljmp
cmp
mov
cmc
dec
out
or
inc
ljmp
jle
divl
xchg
cmp
aaa
mov
jnp
pushf
call
test
lds
fdivrl
push
adcb
push
inc
in
addr16
cmpsb
int3
in
xor
mov
adc
loopne
mov
les
aaa
pop
xchg
jmp
inc
std
stos
in
lods
inc
xor
inc
jp
ret
orb
aas
scas
in
jne
sbb
push
push
leave
nop
outsb
aam
pop
ds
mov
cmp
pop
mov
jno
pop
out
and
out
mov
pusha
loope
inc
fsubrl
or
ss
nop
mov
shrb
push
and
je
sbb
xchg
das
pop
cmp
ret
and
movsl
fdivs
test
and
shrl
imul
xor
test
fldcw
lds
pop
ret
adc
dec
imul
into
popf
daa
inc
pop
push
das
mov
xlat
repnz
mov
cmp
xchg
and
mov
loope
jl
out
out
mov
ljmp
cmpl
in
lds
dec
jmp
jno
push
lret
or
inc
or
stos
outsl
outsl
in
jle
movsb
ljmp
cmp
sbb
mov
cmp
test
mov
cld
pop
jbe
sahf
push
sbb
sahf
lahf
fwait
pop
aam
sub
imul
pop
or
repz
adc
mov
cmc
cs
cmp
out
mov
dec
mov
imul
mov
pop
sub
out
int3
push
cwtl
icebp
cs
insl
lock
popf
mov
dec
cmpsl
mov
cmc
lea
mov
sbb
fwait
pop
aaa
pushf
sub
sub
orb
scas
cmpsl
dec
daa
sub
mov
mov
test
inc
add
lods
mov
rcl
stos
push
pop
clc
dec
cmc
cmp
jo
cmp
mov
int
pushf
arpl
sbb
scas
clc
add
sarl
ret
mov
inc
and
aam
out
in
dec
es
jg
mov
test
xchg
cmp
jns
je
xchg
popa
imul
xorb
sbb
or
insl
lods
xchg
fmul
icebp
jp
xchg
xchg
test
push
daa
fsubrs
push
push
xor
push
pop
cmp
xor
cmpsb
cltd
sub
pop
xchg
inc
addr16
imul
pop
jnp
aas
sar
and
js
clc
lods
pop
sub
sub
inc
push
out
in
mov
sub
or
xlat
lret
push
inc
subb
mov
into
xor
fsts
inc
or
imul
sahf
push
scas
xchg
insl
xor
push
inc
mov
sbb
jno
mov
pop
xchg
pusha
xor
sub
and
jg
and
push
sbb
mov
xchg
andb
dec
sbb
iret
fistpl
pop
add
flds
xchg
das
xchg
and
jp
fdivrs
mov
jp
adcb
mov
dec
orl
sub
add
test
mov
pop
fimuls
sbb
in
dec
and
xor
cwtl
adc
je
xchg
sub
cmp
pop
aam
std
cli
jne
js
fbstp
loope
jge
lahf
test
sbb
jo
jne
shlb
and
stos
pop
addr16
push
fnstsw
scas
stc
stc
pop
test
pop
mov
pop
aaa
mov
pop
loopne
adc
xchg
xchg
out
adc
testl
lods
dec
push
cmpsb
lcall
fnsave
adcb
mov
and
pop
mov
pusha
cmp
sub
pop
or
or
xor
sbb
push
repz
inc
rorl
sub
mov
mov
mov
inc
xchg
pop
leave
shl
push
lcall
lds
sbb
mov
sub
mov
idivl
scas
dec
rcrb
and
insl
lcall
popa
mov
pop
inc
enter
jae
inc
clc
mov
sbb
int3
sub
sub
jo
sbb
and
xor
sbb
or
pop
fldl
mov
stc
aaa
xchg
push
sub
mov
test
xchg
add
mov
mov
sbb
popf
mov
call
jbe
data16
push
jne
cmp
aaa
push
fs
mov
jae
mov
mov
mov
outsb
lahf
repnz
cmp
adc
nop
fucomp
and
das
in
hlt
repz
xchg
or
push
push
outsb
and
je
or
sbb
test
enter
mov
inc
mov
test
andb
jb
lods
lds
jp,pn
mov
out
ja
xor
jecxz
pop
int
push
lcall
jmp
orl
add
adcb
jle
mov
popa
icebp
push
ss
inc
push
stc
fistpll
hlt
jne
imul
int
je
nop
lods
fadd
test
mov
les
add
lret
in
dec
jl
fwait
mov
lret
or
jmp
xchg
add
bt
das
xor
sbb
addr16
mov
jo
insb
adc
xchg
loope
mov
aam
int3
sbb
sub
fs
sub
call
jnp
outsl
decl
push
and
add
and
shlb
cmp
xchg
aaa
fst
out
pop
js
les
lea
cmp
daa
jbe
call
dec
adc
xchg
push
es
pushf
loopne
jbe
dec
inc
adc
mov
notl
mov
int
into
add
mov
mov
arpl
jecxz
dec
hlt
int
and
adc
push
leave
mov
cmp
mov
insb
ret
mul
rorl
adc
iret
push
out
sub
push
fldenv
aaa
lret
lret
inc
insb
ret
cmpsl
in
ret
jb
arpl
jnp
sti
fisttps
mov
jecxz
bound
jns
lea
insb
mov
add
xchg
mov
subl
xor
test
sbb
xchg
pop
aaa
gs
adc
shl
in
std
test
mov
sbb
or
jge
imul
push
mov
mov
xchg
imul
xchg
lds
mov
inc
cmp
in
aam
pop
sbb
sarl
in
push
lods
rcrb
inc
cltd
sahf
insb
lds
andl
js
neg
xchg
mov
push
jb
xor
push
cmp
xchg
inc
cmpl
and
fimull
mov
and
add
insb
sub
popf
mov
popf
orb
xor
xchg
inc
dec
jb
pop
rol
in
add
loopne
sbb
mov
outsl
mov
dec
add
dec
jns
scas
pushf
dec
in
ret
ret
sub
pop
insb
mov
sub
and
sub
jo
pop
mov
lock
push
addr16
mov
xchg
xchg
or
lret
inc
sbb
fistps
cmp
cmpsl
fnstsw
push
cmp
adc
je
jecxz,pt
movsb
push
xchg
in
addb
popa
push
mov
adc
push
insb
std
mov
loop
mov
insb
icebp
and
mov
inc
push
sbb
mov
gs
sbbl
inc
outsb
xchg
insl
lret
and
jnp
dec
sub
and
cmpsb
xchg
aam
mov
add
ret
push
orb
fsubr
cmp
pop
cmp
popf
fsub
lods
clc
lahf
xor
inc
xor
push
cltd
mov
xor
aam
mov
insb
cli
push
lahf
ss
outsl
add
inc
xor
int3
mov
xorb
andl
sub
je
gs
add
jecxz
pop
in
mov
aas
and
sub
clc
dec
mov
lea
test
pop
sar
add
pop
fwait
clc
pop
xlat
cwtl
push
or
or
lahf
enter
xor
jbe
into
insb
xchg
out
bound
outsb
pop
sbb
outsl
push
insl
scas
aas
js
or
lock
repz
pushf
add
mov
sbb
pop
sti
lret
scas
sarb
je
out
fdivrl
mov
icebp
mov
add
xor
orb
jle
ljmp
mov
cmc
js
lock
lds
adc
out
roll
push
js
pop
fisttps
aad
add
ret
dec
lcall
or
in
mov
fistl
pop
sub
xor
or
mov
and
sub
lea
lock
adc
mov
cmc
cmpsb
movsl
lcall
ret
sub
popa
mov
pop
mov
lea
loope
andl
cmp
pushf
adc
mov
jo
cmc
rcll
push
mov
ficompl
bound
fisubs
fs
daa
ret
repz
mov
xchg
addl
rcl
inc
neg
pop
inc
test
mov
rcrb
or
subb
and
add
dec
xor
cli
pop
and
clc
scas
xchg
sbb
jno
xchg
aad
and
es
mov
in
gs
inc
pop
jno
jbe
adc
jb
je
pop
mov
jns
imul
cli
fs
mov
ficoms
cmp
stc
jecxz
pop
sub
dec
adc
mov
mov
xor
mov
jbe
mov
cmpsl
inc
push
sahf
outsl
jne
xor
sarb
rclb
cwtl
pop
sbb
and
repz
icebp
insl
aas
stos
incl
es
jge
xchg
cs
in
jae
mov
sub
std
incl
dec
mov
data16
xor
rclb
sub
xor
popa
cmp
andw
jg
sarl
pusha
fisttpl
mov
pusha
and
mov
mov
int
sahf
pop
cmc
mov
pusha
sub
and
sbb
sub
enter
lods
fisttpl
movsl
shll
inc
out
xor
mov
mov
and
cmp
jg
pop
das
xchg
and
shll
movsb
into
loope
or
test
adc
sub
imul
imul
xchg
out
andl
pop
cmp
ss
inc
iret
int
dec
xchg
orb
lds
add
test
fsubl
mov
add
loopne
cmp
outsb
insl
hlt
pop
push
jmp
add
xchg
out
and
push
aad
jae
aad
push
je
mov
cwtl
test
jo
cltd
mov
jb
out
test
lods
add
daa
std
push
loope
xchg
jg
dec
into
push
pop
mov
push
dec
or
mov
pop
cltd
sbb
test
add
cmp
jb
mov
les
add
int
mov
pop
fscale
test
mov
sahf
dec
imulb
sti
dec
pop
into
mov
addl
xor
jl
inc
xchg
inc
mov
add
mov
popa
xor
sub
psubsb
ljmp
jo
cmpsl
xchg
mov
mov
out
xchg
adc
test
and
mov
rcr
popa
in
mov
fs
dec
dec
aam
jmp
gs
out
push
cld
xor
fnstsw
mov
mov
faddp
icebp
insl
int
imul
rep
fmuls
dec
pop
pop
fs
movsb
xor
xchg
jg
cmp
aas
adc
sahf
stos
js,pt
sub
adc
mov
cmp
sbb
mov
es
pop
cli
mov
rolb
loope
call
push
mov
push
push
ret
jns
subb
adcb
xchg
cmp
in
test
mov
add
sub
les
orb
ret
testb
jb
jnp
les
xlat
imul
xchg
aad
in
or
mov
adc
cli
jle
inc
push
pop
stos
sbb
shlb
cmp
cmp
stc
or
movsb
clc
fs
jno
cli
and
dec
mov
ss
jp
adc
or
jnp
insb
sarl
cs
mov
cld
jecxz
push
mov
mov
pop
and
mov
add
cmp
and
dec
jae
or
jae
lods
ret
sahf
dec
mov
in
int
adc
xor
addr16
or
jmp
xchg
or
loop
xor
cltd
mov
fdivs
dec
mov
cli
fidivrl
into
mov
xchg
jns
xchg
and
mov
shll
xor
ljmp
cmp
repnz
push
out
loope
xchg
cmpl
nop
xchg
mov
or
mov
in
inc
pusha
in
insl
xlat
outsb
insl
faddl
inc
dec
scas
push
in
popf
xor
fisubl
lods
test
shrl
xchg
adc
in
fstps
sbb
int
inc
cld
adc
adc
add
cltd
pop
jg
xchg
mov
fsubrp
mov
int
cltd
out
inc
mov
mov
and
insb
pop
repnz
out
rcrl
jp
iret
fbld
xchg
sub
adc
shlb
data16
mov
popf
xor
cli
adc
stos
push
or
cmpsl
jo
repz
mov
shrb
inc
call
xchg
and
shll
cmp
es
in
into
scas
clc
loope
xchg
sbb
pushl
push
jmp
sub
push
fistpl
pop
push
xchg
xchg
cmpsb
jne
pop
mov
push
push
xchg
or
or
xor
enter
js
lds
pusha
popf
nop
cmpsl
xchg
stc
cmp
push
outsb
sbb
sbb
pop
and
xchg
mov
repz
xchg
jae
subl
lods
test
mov
push
int3
adc
ljmp
loop
je
lock
outsl
fbld
and
and
push
aam
js
lds
fbld
inc
int
cld
pop
lcall
divl
sbb
fldcw
fwait
scas
stos
insl
dec
jp
xchg
adc
in
loop
mov
fnstenv
fimuls
out
jle
xchg
cmp
adc
out
sbbl
dec
leave
lcall
lahf
enter
mov
andb
leave
leave
add
push
loopne
movsb
and
stos
incl
pusha
nop
es
sbb
das
sub
jne
jg
notl
or
xchg
mov
cli
nop
jno
daa
enter
pop
xorb
subl
in
fcoml
pop
mul
or
ds
icebp
push
adc
leave
pop
inc
inc
adcb
das
sbb
pop
xor
sbb
cltd
cmp
cmp
adc
mov
jle
add
or
sub
in
iret
test
mov
dec
jle
add
stc
testl
and
shl
sub
cmp
jnp
cmpsb
sahf
outsb
xchg
dec
mov
shrb
mov
scas
mov
cli
adc
push
ret
dec
faddp
in
subb
pop
imul
dec
adc
pop
inc
xor
xchg
or
sbb
and
xchg
mov
arpl
popa
lahf
iret
fs
bound
cmp
fmulp
xor
jmp
pop
out
pop
mov
mov
pop
dec
arpl
sarl
mov
rorl
cli
icebp
add
les
ja
addr16
mov
push
jl
push
ds
xlat
add
rcrl
sbb
mov
js
ret
push
sbb
xchg
aaa
je
sbb
outsb
enter
mov
xchg
push
cmp
in
cmp
xchg
mov
pop
andl
push
shlb
mov
jg
cmpsl
shll
test
mov
mov
pop
xchg
add
test
cmpsl
fiadds
or
and
mov
movsl
push
sub
mov
adc
fisttps
add
ss
mov
sbb
mov
hlt
sub
cwtl
and
out
cmp
test
push
xor
xchg
sbb
dec
dec
adc
xor
insl
mov
and
jle
es
ss
mov
xchg
movl
jmp
les
mov
pop
dec
mov
int3
adcl
mov
sbbl
fwait
cvtpi2ps
cs
add
shrl
gs
sub
out
fwait
sbbl
xchg
movb
stos
inc
leave
mov
popf
xor
cs
std
scas
scas
pop
xor
dec
jns
jmp
jmp
stos
ss
dec
xchg
popf
test
xor
sub
shl
aam
mov
push
pop
sbb
loop
dec
dec
repnz
pop
jmp
push
and
mov
push
dec
cld
or
sub
jb
cwtl
inc
push
mov
fmull
test
cmp
xchg
push
dec
push
test
stos
dec
cmpsb
les
inc
scas
frndint
lea
cmp
test
adc
fs
xchg
outsb
sub
loop
fldl
dec
xlat
jge
test
or
push
sahf
in
push
lods
scas
pop
insb
insl
sub
mov
pop
lock
sub
das
negb
xor
xor
pop
cmp
and
jle
cs
out
int
out
jmp
in
xchg
or
add
js
mov
push
xchg
fimuls
fimuls
sub
add
dec
add
imul
andb
xor
into
pushf
iret
js
jmp
pop
and
lods
fidivs
push
inc
ds
outsl
jecxz
hlt
push
vcvttsd2si
xchg
dec
cltd
push
loop
scas
mov
xor
hlt
pop
sysexit
int3
sti
ror
dec
insb
gs
jl
mov
mov
xchg
push
ficompl
cmpsb
ds
xor
mov
repnz
repz
test
fs
cwtl
movsl
push
les
je
cwtl
sbb
dec
stc
jmp
pop
jno
mov
inc
inc
test
or
mov
shl
jmp
sub
xchg
ljmp
cmpsl
lahf
inc
movsl
and
xor
inc
addl
imul
push
js
outsl
iret
ljmp
mov
jmp
mov
mov
add
cltd
push
dec
adc
outsb
jbe
in
mov
lea
xor
mov
jmp
in
call
sahf
aaa
into
lea
nop
in
std
sti
xchg
jb
pop
insl
mov
xchg
cltd
dec
push
loopne
nop
fidivrl
icebp
aas
jae
test
in
std
in
lret
jmp
pop
lock
or
push
int3
xchg
clc
stos
cld
loop
adc
inc
xor
ret
mov
add
pop
xchg
xor
cmp
sbb
pop
pop
pop
int
mov
ja
jb
jbe
xchg
pop
inc
fimuls
pop
shll
popa
stos
movsb
movsl
std
lret
lods
push
mov
xor
test
lahf
cmpsl
mov
xchg
dec
out
data16
cmp
data16
push
test
mov
mull
leave
cmp
xor
lock
or
pop
lds
jo
mov
das
sti
push
in
push
stc
loopne
lret
dec
mov
cmp
push
cwtl
rclb
ret
aam
sub
sub
pop
xor
push
pop
pop
nop
iret
loope
fs
xor
cltd
jge
jmp
hlt
js
and
cwtl
fnstcw
adcb
xchg
sbb
jp
jb
push
sub
mov
iret
insb
inc
lods
dec
push
nop
cmp
shll
push
sbb
ficoms
insl
or
inc
sub
sbb
repnz
sbb
xlat
stos
dec
stos
mov
loope
iret
andb
cmp
jns
push
leave
adc
gs
xchg
stc
and
mov
les
xchg
push
and
cmp
out
out
push
sbb
insl
popf
movl
push
pushf
out
ret
push
ss
lods
cmpsb
dec
mov
add
sub
push
jl
lods
xor
jecxz
xor
mov
inc
fsubrs
push
xor
jmp
adc
push
rcrl
or
push
or
jle
gs
fcoml
jno
cmp
jle
aad
bound
jecxz
mov
fstl
mov
xchg
sbb
mov
iret
cmpsb
add
add
xchg
pop
lahf
mov
mov
cmp
fs
add
shl
mov
xlat
call
pop
jp
out
push
and
sub
ja
cmpsl
sub
or
xchg
sub
inc
out
or
pop
or
aaa
std
and
push
outsb
repz
nop
or
jbe
call
or
jg
sbb
pop
js
in
mov
jecxz
xchg
popa
pop
data16
gs
jne
pop
in
shl
cmc
scas
cmpsb
push
mov
es
mov
lcall
fsubrl
cmpsb
in
out
push
repnz
jo
clc
movsl
xchg
pop
in
sbb
adc
xchg
outsb
movsl
add
iret
cltd
icebp
out
mov
scas
gs
insb
mov
adc
popa
dec
fsubs
clc
lahf
jge
sti
std
jmp
push
jnp
or
adc
pop
incb
cmp
pop
shlb
dec
leave
lret
out
xor
add
cmp
or
nop
jne
imull
jnp
movl
mov
mov
cmp
add
adc
sti
mov
pop
jle
push
repnz
sub
pop
movsb
negl
lods
cmc
pop
push
into
and
out
addb
loopne
or
dec
push
jns
ds
fstpl
inc
push
dec
inc
inc
es
cmp
jle
adc
add
ficomps
lods
mov
jmp
jge
pop
jb
cmc
jecxz
rclb
lods
push
mov
lea
xchg
popf
loop
push
mov
xchg
cmp
sti
push
outsl
push
lcall
stos
cmp
fdivrs
leave
icebp
in
pop
in
inc
and
enter
bnd
ss
scas
cmp
mov
mov
cmp
scas
cmpsb
xor
aam
cmpsl
dec
cltd
push
push
test
insb
scas
sti
mov
out
shlb
pushf
ja
ja
das
or
ret
sub
mov
cmp
push
add
aam
ret
in
cmp
mov
shlb
sub
inc
sub
xchg
rcl
out
cmp
les
in
in
insl
mov
dec
lock
mov
jge
jb
push
cmp
dec
mov
test
xor
mov
sbb
sub
and
jnp
insl
mov
cmp
lret
or
push
mov
subl
inc
sahf
cmpsb
imul
push
int3
cwtl
push
or
ja
add
and
and
stos
push
subl
jge
xchg
mov
sarb
pop
push
nop
xlat
rolb
mov
adc
mov
inc
mov
cs
pop
jne
lock
mov
daa
xor
cmp
sub
xchg
jmp
jmp
jmp
fsubrl
add
mov
sub
xchg
or
mov
loope
adc
bound
ja
mov
in
inc
imul
es
xchg
mov
mov
movsl
and
adc
icebp
jmp
out
mov
ljmp
sub
xor
scas
mov
add
jae
xorl
cli
bound
cmp
cmpsb
jo
je
pop
insb
inc
and
mov
jo
adc
jg
loope
subb
push
fcoml
cld
scas
andl
jl
dec
or
pusha
mov
js
mov
mov
adc
xchg
jnp
or
mov
fldt
std
aad
mov
icebp
aam
and
pop
push
mov
je
xor
mov
cmp
stos
xchg
sub
jnp
pop
push
push
subb
push
pop
lods
xchg
int
loopne
bound
fmull
xor
xchg
fimuls
addr16
xchg
pop
lret
lods
sub
das
loop
cmpsl
mov
and
sub
scas
and
jmp
mov
push
add
cld
mov
pop
inc
pop
flds
xchg
jb
cmp
movsl
jl
jno
mov
hlt
movsb
sub
jmp
push
mov
out
aam
xchg
orb
pushf
push
in
and
or
mov
inc
dec
xchg
test
movsl
mov
dec
shrl
and
lea
mov
push
cmc
and
out
dec
jmp
xchg
mov
rcll
js
sbb
movsb
pop
int
jae
sahf
mov
mov
aam
outsl
out
mov
jbe
and
leave
std
rcrl
lcall
cmp
mov
push
inc
mov
sub
push
clc
stos
adcl
mov
sbb
cltd
pop
push
cld
and
out
jb
cli
dec
int
adc
add
std
xchg
jmp
mov
stc
iret
or
lds
mov
scas
xchg
lods
and
add
pop
insb
inc
sub
icebp
aaa
mov
dec
int3
test
sbb
xchg
sbb
or
dec
addl
xor
jb
lcall
sbbl
fistpll
iret
mov
ja
jg
nop
dec
cmp
lret
shll
add
xchg
jecxz
add
cmc
jo,pn
pusha
rcll
xchg
mov
pop
dec
jne
fisubs
xor
or
add
and
push
lret
sbb
icebp
hlt
add
adc
xor
pushf
inc
stc
ret
cmp
xorl
inc
inc
lahf
xor
test
mov
or
negb
mov
jbe
in
push
imul
add
pushf
jae
sbbb
cmpsb
or
je
fdivr
sarb
push
xor
push
ficoml
roll
xchg
xchg
push
jae
xchg
push
or
mov
daa
lcall
push
stos
xor
lret
push
outsb
mov
inc
pop
inc
insl
or
mov
dec
mov
ss
stos
or
add
rorb
jno
enter
lods
movsl
or
cli
nop
test
stos
test
repnz
sub
pushl
xor
leave
jae
dec
xor
cmp
stos
fs
repz
xor
ljmp
add
push
ljmp
outsl
sub
xchg
int3
cmp
mov
or
mov
call
popa
mulb
sbb
jns
pusha
loopne
xchg
pop
sbb
pushf
sbb
lea
pop
jp
xchg
dec
mov
xor
mov
xchg
jae
pop
xchg
popf
fisubs
mov
test
xchg
pop
dec
mov
pop
inc
cmpb
mov
dec
mov
push
cmpsl
stos
iret
sub
aaa
dec
clc
and
sahf
push
cmp
stc
push
idiv
shrl
in
jns
cs
mov
mov
push
push
sub
and
stc
mov
leave
aaa
aaa
iret
movsb
xlat
dec
cmp
mov
mov
movsb
in
jo
add
sbb
testb
adc
jl
dec
loopne
pop
sbb
cmpsb
push
ficoml
loop
jle
push
cli
imul
je
and
ja
or
iret
cmp
hlt
lea
decl
sub
inc
mov
call
and
sub
jnp
xchg
and
rcrl
add
or
int3
fists
rorl
call
push
mov
mov
push
xor
mov
push
inc
mov
mov
ret
ss
push
pusha
repnz
or
ss
loop
mov
iret
stc
pop
jae
lods
lods
push
ja
lods
lods
mov
lret
xor
into
and
mov
add
loop
dec
cld
cltd
cmpsb
mov
jge
sbbb
lahf
loope
and
jno
add
fsubrs
push
aaa
sbb
sub
jmp
sbb
aas
ljmp
xor
outsb
hlt
inc
pushl
add
out
mov
dec
mov
sbb
mov
enter
lds
dec
cmpsl
out
pushf
in
mov
sahf
gs
adc
mov
adc
sarl
inc
add
mov
jnp
push
mull
jnp
outsb
jmp
mov
mov
sub
jb
cmc
sub
mov
and
and
daa
xchg
lcall
mov
insb
clc
and
inc
pop
cmpsl
xchg
adc
jno
mov
or
jp
xor
inc
aas
dec
or
out
es
jno
testb
or
and
pop
sub
inc
out
inc
xchg
add
push
stos
jnp
arpl
mov
ret
stos
int
inc
sub
inc
add
pop
incl
outsl
cmp
add
dec
pop
lea
shl
jb
sbb
jmp
xchg
loopne
inc
sub
les
insl
push
sti
fcomps
cmp
repnz
push
mov
jne
cwtl
sti
fdiv
aam
pusha
fcomps
mov
repz
adc
cmp
jp
adc
mov
xchg
call
xchg
inc
sbb
fmul
sub
mov
and
xor
inc
xchg
std
mov
inc
sarl
cmp
int3
pop
push
fstpt
dec
and
sbb
mov
ficoml
outsb
or
mov
adc
fidivrl
mov
jg
xor
add
mov
jge
pushf
cld
dec
push
pop
vpshlw
flds
jmp
sbb
lods
sub
dec
sub
lret
pusha
fstpt
sub
lods
aaa
test
inc
mov
lret
dec
addr16
xchg
dec
sbb
add
push
inc
jbe
outsl
shll
or
test
mov
xchg
inc
movb
pop
rcrl
sbbl
call
fst
je
add
xor
nop
mov
std
popa
sbbl
mov
and
jle
pushw
insb
and
adcl
inc
cwtl
fwait
mov
insb
mov
mov
lret
mov
sbb
ja
arpl
rorb
movsb
push
or
out
mov
aam
jge
push
imul
in
imul
pushl
xchg
ljmp
cmpb
lcall
xorb
scas
mov
sti
into
ljmp
jno
mov
jmp
inc
aam
mov
movsb
adc
icebp
sub
je
lea
sub
pop
mov
ffreep
cmp
dec
leave
or
xchg
andl
cmc
mov
push
mov
repnz
pop
dec
push
in
cmpsl
or
aad
xor
frstor
jb
push
adc
xchg
pop
pop
lret
pop
or
ss
mov
xchg
jno
aad
xchg
or
xchg
adc
decl
stos
push
or
push
dec
insl
stc
ficoml
cltd
int3
mov
jae
dec
fsts
mov
ds
nop
sbb
inc
and
dec
add
insl
outsb
out
fucom
mov
push
mov
int3
adc
jmp
ret
xor
push
sub
mov
push
push
push
rcrb
or
sbb
inc
or
cmpsb
pop
pop
push
test
cmpb
mov
jns
inc
test
mov
popl
sbb
mov
xchg
mov
push
inc
pop
stos
jb
nop
cld
test
mov
pand
addr16
loop
adc
shrl
cmp
cli
xor
jge
aam
repnz
mov
xchg
fiadds
lea
mov
cltd
xor
insl
jb
hlt
pop
cmpsl
xor
insb
imul
lock
into
popa
adcl
add
or
cmp
sbb
mov
xchg
out
sahf
xor
sbb
es
dec
fstpl
mov
mov
in
jge
shr
cmp
fistpll
inc
clc
jnp
jmp
jge
jecxz
stos
stc
mov
ss
and
mov
xor
test
cmp
cli
aaa
jo
cmpsl
loop
dec
shr
daa
hlt
jnp
out
dec
repz
dec
inc
mov
in
daa
inc
jle
cmpsb
popf
dec
sbb
enter
fistpl
aam
icebp
out
or
dec
mov
insl
xchg
cmpxchg
pop
mov
mov
mov
and
inc
addb
mov
fistl
dec
test
aam
mov
mov
or
stos
int3
cmpb
mov
mov
inc
add
repnz
pop
cmp
mov
mov
cltd
popa
in
pop
push
mov
pop
test
jg
loopne
das
push
or
data16
cmp
ret
push
lock
test
mov
mov
cld
roll
mov
insl
mov
arpl
lods
xchg
sub
leave
push
nop
test
imul
mov
or
cmpsl
push
add
or
mov
mov
outsl
stos
jle
mov
arpl
mov
push
inc
stos
jecxz
sbb
jge
push
pop
or
jl
adc
xchg
mov
cwtl
aad
mov
lret
add
out
mov
pop
fwait
push
fimull
clc
dec
orps
xchg
das
movsb
roll
mov
ds
mov
jb
adcl
das
mov
xor
xlat
popf
push
mov
pop
aaa
ds
xchg
aas
mov
in
xchg
push
popf
cmp
mov
dec
cltd
aaa
ljmp
imul
rolb
fwait
cmpb
xchg
insl
mov
mov
cmc
insl
adc
mov
je
inc
mov
dec
jecxz
out
fsubrl
cmp
neg
ja
fwait
lret
adc
arpl
jp
sub
fs
cmp
in
xchg
dec
ja
jecxz
cltd
push
lock
xor
out
xor
mov
test
incl
out
sub
pop
mov
sub
dec
out
dec
pop
int3
inc
loop
xchg
movmskps
in
icebp
sub
inc
dec
fldt
ss
rorl
dec
mov
xchg
shrb
pop
out
dec
into
or
mov
bnd
in
sbb
jl
push
sbb
xchg
adcl
mov
je
xchg
dec
rdtsc
push
mov
mov
jp
mov
xlat
les
jns
dec
loop
mov
std
notb
add
push
lods
add
and
out
jle
orb
lcall
mov
int
bnd
pop
jnp
sbb
call
pop
lret
in
pop
cmpsl
jae
inc
je
dec
push
and
mov
fs
hlt
jb
insb
into
and
bound
ljmp
mov
imul
jae
push
insb
or
inc
push
fnsave
dec
cmpsl
div
lcall
js
mov
and
cmc
out
mov
push
outsb
jle
or
lahf
data16
rolb
icebp
pop
cmp
and
and
mov
lea
sarb
xchg
imul
repz
nop
adc
push
popa
ret
dec
cmpsl
movsb
mov
jnp
cmp
bound
mov
jg
or
jge
je
add
std
mov
mov
or
jns
lret
enter
imul
jmp
push
lods
lret
dec
jle
cli
jg
pop
pop
mov
push
xchg
or
insl
lahf
jge
jne
aas
lcall
ja
and
fdivl
inc
aam
mov
outsl
adc
cmp
cmp
jmp
mov
into
jmp
push
mov
pop
and
mov
jg
mov
xchg
sub
jp
sbb
rorl
cmp
jecxz
lds
jne
sbb
es
pop
xchg
and
daa
and
jp
imul
mov
in
adc
sub
jb
add
loopne
push
pop
sahf
sbb
jle
lret
in
sub
rcrb
outsl
nop/reserved
mov
dec
jns
dec
jno
or
jnp
adc
shll
or
clc
pop
fsubs
mov
lock
mov
sbb
pop
lock
mov
lods
sbb
jle
pop
mov
lahf
rorl
pop
aaa
inc
push
sub
cmp
subb
jo
inc
pop
pop
mov
cmp
push
in
jg
lcall
pop
lret
pop
sbb
add
out
add
cmpsl
movsb
push
jp
hlt
cmp
mov
in
inc
mov
dec
ret
jbe
rcl
lock
xchg
mov
mov
jp
repz
pop
inc
push
inc
test
pop
inc
test
pusha
loope
dec
inc
dec
test
xor
insl
shl
mov
daa
mov
scas
stc
das
and
or
aaa
aaa
outsb
stos
repnz
inc
lret
ret
cmp
and
inc
cmc
imul
or
call
push
fnstenv
jne
lea
xor
mov
fsubr
xlat
push
and
test
test
loop
mov
mov
mov
into
lea
sub
cltd
adc
repz
pop
fldenv
pop
rorl
fsubrs
pop
push
imul
int
inc
cld
dec
dec
int3
insb
add
pushw
xor
pusha
test
and
cmpb
sbb
das
adc
icebp
pop
mov
lcall
push
call
jns
test
xchg
push
mov
fsubp
nop
js
and
sub
pop
mov
clc
xlat
or
and
imul
hlt
xorb
sub
movsl
dec
stc
push
pop
ficoms
dec
int3
mov
ss
lret
sub
mov
dec
out
mov
bound
xor
in
imul
pmaddwd
pop
xor
iret
xor
inc
movsl
mov
loope
jge
sbb
xchg
loopne
imul
cmp
movsl
scas
adc
lret
lcall
sub
testb
imul
cmp
sbb
and
inc
jecxz
sbb
lods
adc
jno
fwait
adc
xchg
cmp
clc
loopne
push
mov
lods
adc
gs
push
imul
popa
inc
es
inc
xchg
mov
cs
mov
mov
mov
mov
mov
stos
test
iret
sbb
mulb
dec
mov
mov
jns
pop
sti
mov
jbe
test
xlat
stc
mov
xor
adc
outsb
pop
ret
inc
test
xchg
adc
test
aad
and
in
fcomps
clc
loop
jmp
cmp
sbb
lret
mov
cmp
lds
shrb
sub
jb
cmp
test
xor
cmp
mov
es
mov
pop
sbb
xor
pop
inc
bound
loopne
cltd
or
inc
fs
xor
ljmp
into
loop
sbb
stos
in
pop
test
or
lret
add
imul
mov
dec
ror
ss
push
mov
push
xchg
cmp
sbb
rcr
mov
and
mov
nop
inc
xchg
enter
ret
stc
popl
push
fdivs
out
int3
jp
aad
or
pop
add
dec
call
push
lods
in
mov
addr16
dec
addr16
dec
or
add
xor
cltd
jle
subl
fwait
sub
mov
lret
or
mov
mov
push
ficoml
cmp
xchg
jl
mov
xor
mov
jb
sub
cmpb
mov
mov
and
or
mov
cltd
das
jno
es
insb
fsubs
dec
lcall
sbb
fs
fdivrl
adc
pop
in
loopne
pop
ret
mov
and
inc
mov
or
xor
xor
fs
cmp
aaa
push
popa
jg
testb
jl
int3
sbb
lcall
jnp
sub
lods
inc
or
in
mov
xchg
push
sub
imul
out
stc
fwait
sub
test
ror
lret
test
add
enter
cmpsl
fcoms
out
iret
das
dec
mov
xchg
popf
test
cltd
jle
xchg
pop
mov
shlb
leave
fsubs
fwait
dec
das
test
negb
out
mov
or
sbb
mov
push
add
xor
or
inc
bound
mov
stos
or
and
in
mull
xchg
pop
dec
test
or
mov
xchg
test
out
xchg
mov
jnp
or
std
cltd
rcrl
ret
popf
cld
fs
cld
rcr
pop
mov
cmp
test
and
cmp
scas
sbb
ds
in
fdivrl
repnz
jp
outsl
xor
scas
aas
lret
in
mov
mov
xor
sub
cmpsl
mov
adc
add
aas
movsl
push
cmpsb
int
inc
aad
and
adc
pop
mov
push
in
jl
cld
nop
repnz
push
and
shlb
movsl
ret
add
push
movsl
mov
loope
push
andb
or
sti
jle
rolb
stc
fsts
jns
fstps
inc
fwait
sbb
or
push
jne
or
addr16
cmpsl
loop
movsb
iret
nop
jae
lea
pushf
outsl
mov
add
fwait
inc
cwtl
mov
dec
mov
ljmp
jno
mov
fistl
scas
int3
test
pop
outsl
adc
add
rcr
roll
ja
iret
stos
daa
popf
mov
out
mov
stos
xchg
dec
cltd
cld
push
mov
adc
cmp
mov
inc
push
dec
lret
stos
or
sar
jno
popa
jns
jbe
sti
repnz
fisubs
sbb
pushf
xchg
cmp
leave
cmp
loop
push
dec
ja
cltd
mov
add
mov
call
int
and
mov
fistpll
and
lret
cmp
cld
xlat
popa
xor
loopne
stc
push
or
lods
sarl
sub
sub
xor
lods
int3
scas
cmp
jne
out
jb
aas
cltd
mov
mov
sub
push
and
pop
lret
xchg
mov
adc
or
movsb
push
iret
arpl
lcall
popa
test
adc
jne
ss
push
add
fcomps
addr16
mov
mov
jne
out
add
mov
iret
mov
mov
js
loope
enter
ficoml
mov
cmp
xchg
mov
xor
adc
dec
inc
ss
pusha
adc
or
stc
jle
adc
dec
push
ljmp
xchg
icebp
into
add
xlat
adc
pop
ret
and
call
or
leave
xor
lods
cmp
jbe
jge
adc
inc
mov
scas
and
fcomps
scas
flds
push
mov
mov
repz
or
je
lret
pop
cs
pop
icebp
jmp
mov
push
shlb
mov
int3
xor
adc
sti
xchg
outsb
data16
push
in
das
or
fisubl
mov
movlps
mov
outsl
clc
pop
sub
sahf
ljmp
jnp
sub
or
out
insl
lods
sbbb
xor
push
rcrl
and
and
lods
cmp
cs
mov
shll
push
pop
xor
dec
mov
and
sahf
es
and
outsl
sarl
and
adc
imul
adc
xor
fstl
stc
mov
adc
cmpsl
arpl
bound
orl
leave
push
in
lahf
ret
in
push
fs
mov
jmp
add
sub
xor
xchg
aam
xor
xor
frstor
andl
test
scas
xchg
and
add
into
decl
in
push
cmp
mov
or
mov
clc
sbb
add
shl
adc
jns
icebp
or
jno
mov
xchg
push
aaa
mov
dec
jg
les
sbb
jbe
mov
push
lock
sbb
call
loop
call
or
data16
xchg
push
add
mov
inc
push
cmp
pop
lods
dec
pusha
lret
pop
lea
mov
mov
inc
es
out
jmp
add
lock
cmp
out
add
or
daa
cmc
xchg
outsl
pop
sbb
jmp
jecxz,pt
mov
mov
lea
or
loopne
or
xchg
outsb
bound
mov
xchg
xchg
in
fdivs
test
int3
rclb
movl
mov
outsb
jnp
aaa
scas
or
scas
test
ret
hlt
or
jbe
mov
push
sbb
xchg
in
mulb
and
rorb
jge
mov
dec
or
leave
fists
dec
movsb
addl
imul
adcl
mov
mov
pop
push
xor
sbb
pop
xchg
dec
fwait
leave
loop
icebp
pop
push
push
mov
and
sbb
loope
gs
ret
and
push
daa
push
fstps
sbb
enter
jp
pop
repnz
cmp
in
or
pmaddwd
cmpsl
adc
subl
mov
or
inc
pop
xchg
pop
cli
inc
loope
sub
je
int
push
daa
ss
ja
cltd
pop
mov
pop
pop
jns
stos
outsl
std
inc
dec
fistpl
rcl
jg
push
ljmp
xor
movsl
in
cmp
in
scas
add
dec
xchg
ds
movsl
int
bound
and
or
pop
sub
pop
xor
mov
jo
sbb
out
ficoms
fnstenv
jno
mov
pop
ss
int3
dec
dec
js
jecxz
shl
xchg
push
mov
daa
rcrb
mov
loopne
cmp
mov
and
ja
push
cmp
popf
std
xchg
inc
stos
mov
jge
mov
cmc
mov
mov
hlt
jb
adc
ret
stos
call
mov
xchg
push
loop
cli
xchg
push
insl
adc
lcall
pop
sbb
mov
xor
mov
xor
ljmp
aas
jns
loope
add
dec
cmpsl
movsl
adc
lock
ss
jle
or
jp
lahf
popf
mov
repnz
das
std
mov
insb
xchg
out
adc
push
xor
pop
fcom
xor
xor
mov
sub
call
jne
loope
mov
lods
pop
xlat
aam
add
sbb
shrl
ljmp
loope
out
int
jo
mov
adc
leave
cmp
in
inc
test
adc
shlb
cmpsb
aaa
scas
xor
fbstp
ficompl
push
aaa
xor
sbb
adc
fwait
adc
pusha
nop
imul
jo
sbb
dec
clc
shll
fmuls
inc
sub
scas
fs
ljmp
jne
std
jge
xlat
das
bound
pushf
cmpsl
jmp
push
mov
jle
dec
jg
imul
jae
pop
in
inc
xlat
sarl
iret
jle
addb
les
ret
movsb
mov
push
cmp
sub
shrb
push
mov
jne
jae
adc
pop
scas
pop
mov
inc
cmpsl
arpl
cmp
push
add
js
mov
cmp
xor
inc
lock
push
or
pop
nop
push
inc
sbbb
pop
fs
insl
cmpsb
hlt
mov
or
push
cmp
fisubrs
decl
not
dec
jae
ffreep
jns
xchg
rorb
stos
fwait
jbe
jp
in
mov
sub
jbe
in
cmp
jmp
xchg
sub
jb
pop
cmp
leave
sbb
pop
dec
repz
xor
movsb
inc
add
leave
mov
mov
add
xchg
out
aas
in
clc
enter
push
mov
pushf
and
xchg
into
mov
addr16
int
lock
dec
mov
lret
sub
cmpsl
adc
inc
inc
mov
cltd
xlat
sub
push
push
dec
and
imul
xor
cmp
scas
and
pusha
cmp
xchg
les
in
mov
fsubrp
jg
push
xchg
cmp
xor
pop
inc
ret
std
mov
sub
xor
mov
lods
pusha
hlt
aas
mov
dec
push
jbe
push
mov
orb
xlat
lahf
ss
outsl
pop
push
mov
shrl
dec
xchg
sub
xor
aaa
jne
lret
sub
std
mov
sbb
fnsave
fsubp
jp
mov
pop
dec
mov
fwait
scas
sti
push
ss
cmp
sahf
nop
mov
insb
cmp
cld
dec
daa
lahf
mov
dec
push
push
sbb
cmp
fldz
es
inc
hlt
iret
mov
push
std
push
int
push
cmp
fdivs
mov
js
cmpsl
mov
insb
test
pop
ja
test
push
dec
int3
hlt
mov
sti
cmp
pop
shrl
jle
sbb
ret
mov
xchg
mov
rolb
and
mov
aad
xor
ds
cmpsl
test
sbb
dec
ja
mov
sbb
int
arpl
jns
lock
stc
es
lea
cmp
dec
sti
pop
fbstp
jge
sti
add
jle
xchg
pop
add
test
popa
test
popa
inc
ljmp
pushf
cli
sub
inc
jbe
imul
push
xor
test
cmp
push
jno
pop
mov
in
push
add
insb
and
mov
mov
pop
imul
andl
jl
mov
jb
lock
ds
cmpsb
or
lret
mov
stos
cltd
mov
movsl
xchg
nop
jl
sub
push
in
movsb
andl
js
testb
jo
cs
dec
sbb
mov
xor
fcomp
rcrl
shll
cmp
std
mov
jne
daa
or
aam
mov
jo
xchg
ret
adc
inc
into
js
in
add
inc
add
aas
rcrb
imul
push
add
push
fidivrs
subl
sub
adc
inc
push
xchg
cs
pop
jbe
or
xor
scas
in
enter
mov
and
xchg
into
cltd
out
mov
popa
ss
movsl
push
cmp
outsl
pop
pop
dec
rcll
inc
xchg
mov
dec
pop
sbb
lahf
pop
daa
jl
mov
inc
sbb
push
subb
sahf
loopne
cmp
sahf
add
lods
mov
inc
insl
mov
push
dec
push
testl
sub
mov
xchg
gs
mov
lods
cmp
aaa
pop
leave
lods
mov
inc
mov
adc
jl
ret
imul
add
int3
repz
outsb
mov
scas
jle
add
pop
cli
or
out
pushf
imul
ljmp
push
stos
jmp
mov
xchg
xchg
daa
fwait
sub
sahf
loope
add
fs
push
mov
mov
xchg
imull
jne
or
icebp
mov
in
xchg
outsb
jo
js
push
lock
nop
inc
rcll
inc
mov
jmp
daa
dec
loopne
jne
cmp
and
mov
mull
test
sbb
pop
xchg
bound
rcr
mov
pop
jecxz
or
jecxz
clc
cmp
inc
jbe
push
jmp
insl
fsts
xchg
repnz
shrb
loopne
and
mov
sub
and
inc
lret
jbe
push
enter
jecxz
pop
xchg
cmp
dec
sbb
adc
mov
daa
adc
cmc
push
lahf
popf
jno
mov
add
mov
adcl
sub
fistl
adc
mov
cmp
fucom
adc
shrl
fstl
mov
add
std
jmp
rorb
jne
es
jmp
and
je
add
jmp
mov
mov
insl
fsubl
inc
pop
mov
xchg
in
sbb
cmp
mov
test
lock
sub
adc
aaa
jne
dec
or
and
gs
loop
dec
jb
mov
inc
fucomi
mov
cmpsl
xlat
int
cmp
jne
xchg
imul
cli
jns
mov
mov
jle
xor
fs
sahf
add
out
xor
and
jne
clc
les
sub
push
jno
mov
jp
es
in
mov
aam
insl
mov
outsb
dec
sbb
dec
pop
fsts
mov
xchg
inc
lods
arpl
xchg
inc
bound
and
pop
in
mov
in
sbb
fwait
or
mov
shl
push
imul
dec
int3
arpl
negb
mov
lret
stc
cwtl
outsb
sbb
movsb
and
xor
ja
pop
sub
sarb
jbe
cld
mov
incw
push
xor
xchg
add
inc
dec
adc
inc
lahf
xchg
jl
popf
les
roll
repnz
push
push
push
mov
loopne
aaa
popf
push
scas
jp
lcall
xor
or
idivl
ret
push
mov
push
adc
ret
scas
pop
daa
mov
xchg
xchg
gs
sahf
or
push
mov
ljmp
insl
popa
mov
js
inc
xchg
pop
lods
xor
add
xor
lods
mov
dec
xchg
lret
adc
xchg
jnp
adc
push
add
je
inc
xor
xor
lea
movsb
sbb
push
imul
mov
xchg
jnp
aas
loop
sahf
roll
out
xor
mov
inc
mov
lods
mov
sub
mov
aam
stos
mov
out
sbb
sbb
sub
into
xchg
pop
cmc
push
lret
pop
idivl
inc
pusha
cmpsb
fadds
push
in
sahf
xchg
pop
testl
fisubs
mov
mov
mov
fs
jl
pushf
xchg
xor
mov
pop
mov
cmp
push
adc
test
add
sbbl
add
and
jle
hlt
ret
testb
cmp
daa
mov
js
out
add
fcoml
outsb
hlt
xchg
and
repz
out
push
rcrl
int
mov
sahf
icebp
xor
and
fdivrs
lea
idiv
lock
push
add
loope
in
add
into
ljmp
mov
clc
ret
out
mov
test
bound
xchg
sub
jnp
int
lds
inc
push
ret
aaa
test
fcoms
into
or
xchg
mov
cmpsb
cmpsl
icebp
cmpsl
imul
aad
pop
insl
jp
mov
paddsw
jge
cld
sti
shll
pushf
mov
dec
mov
sbb
mov
xchg
pop
sbb
push
push
add
popf
repnz
popl
arpl
loope
clc
cmp
jge
es
test
icebp
mov
insl
cmpsb
jbe
inc
lds
xchg
or
aaa
dec
inc
xchg
push
rclb
fs
in
push
sbb
test
aad
jge
cmp
inc
or
fsub
mov
pop
lock
sbb
cwtl
xchg
mov
shll
repnz
inc
movsl
add
cs
mov
sbb
dec
rcrb
popf
mov
mov
cmc
fistl
mov
jo
mov
fisubl
roll
rcll
cmp
aam
lcall
adc
jne
sarb
stc
jb
sub
mov
pop
mov
inc
inc
jle
sbb
imul
add
mov
fisubrl
rcll
inc
sub
dec
stc
movsb
sbbl
fidivrl
mov
jp
repnz
adc
clc
sub
insb
mov
out
or
push
or
nop
jecxz
scas
ljmp
pop
mov
mov
mov
jb
es
mov
movsl
dec
adc
addb
cld
dec
loopne
xchg
cmp
jge
xor
sti
jo
insb
pusha
scas
repz
sbb
scas
fs
push
xor
aad
outsb
adc
adc
fwait
incb
and
bound
dec
imul
jbe
inc
xor
jg
arpl
or
cmc
aam
addl
daa
ret
pusha
aas
pop
test
out
mov
call
icebp
fdivrl
out
lret
loopne
cmp
sub
in
insl
sub
sti
mov
repz
shr
sbb
mov
pop
ljmp
pop
mov
adc
fidivs
dec
cs
inc
out
fucomp
leave
in
aaa
sbb
sub
pusha
sub
cli
add
les
push
call
dec
xchg
jecxz
call
xor
stos
sbb
es
test
pop
fwait
mov
inc
push
cmp
mov
es
ds
orl
sahf
repnz
sahf
pop
lods
xchg
movl
adcb
jne
xor
jg
pop
push
dec
nop
add
lds
adc
clc
mov
adc
cltd
mov
gs
clc
call
fisttpl
dec
or
cmp
cbtw
fistpl
enter
cmpsb
sub
rorb
xchg
jp
or
mov
adc
arpl
cli
or
scas
scas
jb
jg
lcall
xlat
loopne
ret
in
or
inc
pop
pusha
xchg
dec
cmp
sbb
jmp
loope
pop
ds
insb
in
mov
inc
fcomi
icebp
push
xor
sub
aaa
js
out
clc
pop
dec
adc
popf
fs
pop
sub
lods
push
aad
stos
out
lret
int3
mov
adc
add
jmp
loope
popf
imul
push
inc
lcall
xor
jmp
sahf
adc
jl
cmp
push
add
scas
into
jle
mov
dec
mov
test
cmp
mov
std
mov
pop
pop
cmp
pop
mov
mov
dec
shrb
and
ds
movsb
adc
orl
push
lcall
xor
enter
leave
ficoms
add
loop
divb
into
add
loopne
rcrl
cmc
in
aaa
mov
aam
xchg
sbb
enter
pop
lds
sbbl
pop
cmc
gs
incb
call
or
hlt
cmp
cmp
xor
clc
xlat
xor
inc
push
or
or
xlat
inc
rorb
mov
scas
jle
push
jle
int
adc
push
xor
mov
dec
sub
pop
fwait
out
push
mov
and
sub
data16
lret
xor
cld
sbb
ds
not
lahf
cmp
mov
ret
mov
xor
and
enter
stos
test
test
or
pop
inc
arpl
scas
in
icebp
sbb
frstor
mov
in
and
fidivl
jg
aad
out
add
in
pop
sub
lahf
shlb
mov
adcl
mov
mov
cli
popf
bound
inc
xchg
popf
aam
dec
sbb
aaa
pop
mov
lahf
inc
xchg
mov
in
ret
iret
in
inc
jge
insb
daa
mov
pop
sub
orl
aas
cmpsl
push
xor
ds
and
mov
mov
cmp
adc
es
iret
pop
je
jbe
mov
mov
addr16
mov
sub
cmc
adc
stos
cmp
sub
add
pop
testl
dec
dec
cmpsb
xchg
push
je
xchg
sub
iret
out
pop
pop
jge
outsl
addl
jmp
or
ficompl
xchg
adc
cmp
imul
out
jmp
cmp
cwtl
iret
pop
rcrl
xchg
jae
mov
adc
dec
lods
je
mov
lret
pushf
hlt
add
jno
imul
test
test
mov
inc
loop
fistl
dec
jmp
dec
call
inc
imul
xlat
movsb
adc
mov
mov
sbb
repnz
push
pop
push
inc
mov
shrb
outsb
fistps
cmp
jg
jno
sub
imul
and
adc
sbb
inc
movsl
or
xor
xchg
push
mov
and
push
jp
cltd
pop
inc
imul
loop
inc
cmp
dec
push
push
fwait
loopne
in
setnp
pop
jb
mov
inc
repnz
adc
nop
sbbl
xor
scas
nop
mov
daa
sbb
loope
loope
jo
in
xchg
add
mov
adc
mov
or
cmp
out
add
pop
aaa
adc
imul
addr16
inc
lret
jb
roll
adc
test
jae
lods
push
adc
jae
lods
inc
sub
fwait
imul
inc
sarl
fs
adc
fldcw
imul
in
cmp
push
popa
ret
pop
sahf
inc
mov
rclb
mov
jl
in
jg
jl
popf
mov
insb
mov
pop
jne
jnp
mov
xor
pop
call
lret
in
gs
loope
std
or
xchg
mov
repnz
fiadds
lret
leave
pop
pop
aas
movb
insl
sbb
xor
into
fiaddl
lcall
jns
sub
lahf
add
subb
in
pushf
out
adc
add
or
mov
scas
and
lahf
popa
lret
mov
leave
cwtl
rcrl
fistpl
jb
jge
sbb
aaa
repnz
xor
int
push
dec
mov
out
rolb
mov
jns
cmpsb
jne
and
nop
mov
out
cmp
dec
inc
and
gs
repnz
enter
arpl
outsb
or
dec
popf
xor
sub
loope
push
add
push
add
inc
xchg
xor
inc
mov
pop
into
shlb
test
lret
js
je
cmp
dec
shrl
test
jmp
xor
jge
push
imul
fcoms
shrb
popa
and
fdivrl
pop
push
fmull
test
and
inc
lea
push
dec
test
adc
sub
fdivp
stos
jle
mov
and
jno
out
inc
adc
push
scas
inc
fcmovnb
jmp
mov
data16
lret
fldenv
je
inc
icebp
mov
test
mov
inc
test
jno
xchg
and
add
rorb
or
jl
movb
xor
xchg
in
fwait
scas
inc
mov
mov
adc
xchg
popa
lea
pop
dec
mov
hlt
push
mov
sahf
clc
mov
mov
push
push
or
test
push
sub
out
fdivrs
push
in
js
fwait
mov
or
subb
mov
repnz
mov
xor
adc
out
dec
pop
add
push
sahf
ret
mov
inc
sbb
mov
dec
cs
jno
mov
cmc
mov
ljmp
fnsave
repnz
and
stos
cld
sbb
call
mov
adc
pushf
aas
adc
xchg
popa
fadds
fs
xor
sbb
ret
jg
fsubs
sbb
or
sub
xchg
cmpsb
ret
push
es
adc
out
lcall
sarl
push
mov
lret
adc
repnz
nop
lret
test
cmp
add
hlt
mov
or
cmc
inc
dec
call
push
les
push
sbb
mov
and
js
int3
dec
sub
mov
repnz
int3
daa
shll
mov
xor
pop
sub
cmp
gs
inc
das
pushf
push
xchg
add
mov
icebp
mov
les
lret
mov
and
aad
outsb
or
fwait
jle
mov
movd
sub
mov
add
cmp
arpl
mov
mov
or
lock
pushf
pop
xor
push
das
dec
loope
in
mov
outsl
sub
insb
pop
popf
ds
mov
or
add
xor
inc
lcall
ficoml
push
mov
xchg
inc
pop
lret
ljmp
addr16
ret
lods
mov
and
outsb
insl
faddl
cmpsl
in
cmp
xchg
pop
out
jae
sub
aaa
xor
and
push
pop
xchg
aad
and
push
data16
dec
xchg
fs
adc
repz
and
cmp
les
mov
ljmp
rorb
sbb
stos
enter
mov
cmp
mov
cmp
mov
push
icebp
fisttpl
lcall
push
in
cmpsl
mov
je
outsl
test
or
imul
aad
fbstp
or
es
mov
dec
test
pop
mov
lret
push
or
in
ja
test
sbb
cltd
sub
dec
aaa
or
dec
flds
jge
xor
pop
and
sbbb
insb
out
roll
pushf
dec
fldl
sbb
notb
dec
inc
out
daa
inc
sub
enter
or
out
ja
into
xor
incb
dec
fmull
inc
lods
push
call
pop
jne
gs
in
clc
loopne
mov
sbb
inc
loopne
xorb
insl
inc
inc
adc
sbb
mov
fadds
inc
ret
push
push
rcrb
flds
mov
cltd
and
sub
pop
xor
mov
js
push
repz
lods
push
repz
jecxz
or
popa
std
push
frstor
fs
aaa
xor
fwait
push
addb
loopne
cmp
aad
sbb
movsl
dec
push
xor
arpl
pusha
jmp
in
cwtl
js
jbe
sbbl
mov
sub
repz
lret
lods
mov
imul
test
pop
imul
jmp
pop
int
xchg
addr16
and
addr16
mov
add
mov
testl
incb
not
inc
xchg
les
repz
pop
cli
enter
shrb
ret
xor
pop
sbb
cmp
icebp
mov
cmp
push
into
push
std
fs
pop
imul
dec
and
xchg
cwtl
mov
movsb
dec
int3
test
push
dec
js
push
decb
pop
inc
inc
sarb
aad
test
cmc
push
or
adc
or
xlat
ja
repnz
inc
sbb
inc
jb
bound
inc
bound
ljmp
xor
cmp
jne
movsb
xchg
imul
lcall
inc
adc
sub
lods
sar
push
orl
mov
lea
imul
gs
aaa
xchg
adc
fdivr
pop
enter
jecxz
pop
xorb
pusha
cmc
loope
in
cmc
pop
scas
inc
dec
aas
sub
mov
mov
jle
sti
mov
sub
sbb
add
jmp
daa
xor
sub
adc
popa
sbb
sub
xor
mov
in
pop
pop
xchg
jbe
lds
jb
fidivs
xor
add
push
int
movsb
mov
cmc
fimuls
sub
insb
push
mov
sub
icebp
sti
adc
ror
popa
loope
adc
rclb
or
mov
rcll
popf
jp
push
fnstcw
pushf
xor
and
push
add
inc
mov
cmp
jb
add
negl
das
cld
aam
fidivs
mov
aam
jp
mov
out
or
push
movsl
pop
sbb
cmp
bound
cltd
mov
add
inc
mov
shlb
or
pop
jo
lahf
and
mov
ficoms
out
mov
cwtl
mov
loope
clc
ss
push
stos
cwtl
xchg
sub
bound
neg
ror
add
pop
mov
push
outsb
cmpsl
adc
and
sub
outsb
es
in
xor
in
leave
pusha
inc
and
add
mov
out
or
dec
daa
stc
dec
and
xor
sub
and
push
inc
sahf
xchg
adc
mov
pop
call
adc
xchg
in
pop
lock
shrl
insb
dec
sbb
xor
aaa
shrl
call
pop
adc
xchg
pop
int
pop
insl
negb
je
cltd
mov
lret
add
dec
hlt
pop
adc
sbb
sbb
testb
xlat
hlt
push
mov
insl
or
mov
xchg
push
adc
fbstp
or
mov
xchg
test
pop
mov
fimull
and
xlat
xchg
and
icebp
xchg
loopne
mov
push
mov
fs
leave
inc
scas
iret
fnstsw
cmp
xor
stos
loopne
mov
out
push
adc
jnp
mov
inc
insb
fimull
sti
lods
and
add
cmpsl
adc
cmp
lret
sbb
in
ljmp
xchg
mov
sbb
ds
enter
add
dec
pushf
aad
iret
push
jb
pop
push
jmp
sbb
loop
dec
fdivr
mov
xor
jl
mov
out
mov
mov
fldpi
test
jecxz
mov
sub
and
fwait
push
popf
andb
adc
jnp
and
jmp
push
outsl
test
lock
insl
push
shlb
xchg
pop
stos
lcall
fs
xchg
call
test
fbstp
repnz
cmp
imul
jg
sub
or
orb
xchg
xchg
add
enter
sbb
mov
ljmp
add
clc
xchg
push
shll
je
outsb
fcomip
cmc
or
dec
mov
popa
push
ret
sub
movsl
leave
out
xchg
sub
shlb
lret
push
pop
adc
repnz
xor
cmpl
popf
add
fs
jge
lahf
lahf
add
xchg
scas
stc
into
mov
push
lahf
cmp
mov
hlt
cmp
mov
imul
mov
push
pushf
loop
out
pop
test
lds
or
dec
int3
shll
cli
inc
cltd
pop
push
sub
aam
cs
jbe
and
lret
sbb
fs
incl
dec
aas
fldenv
xor
jne
outsb
fcomi
cmp
push
push
pop
pushf
pop
jae
jp
push
adc
dec
bound
mov
push
movsb
popa
sarl
xor
xchg
adc
and
stc
inc
in
xchg
mov
mov
je
adcb
cmc
inc
enter
xor
xor
lcall
cmpsl
push
addl
xlat
pop
inc
leave
shrl
push
add
xor
pop
cli
rorl
and
sbb
aad
pop
inc
dec
mov
movsl
mov
ja
push
ds
cwtl
mov
jno
sbb
mov
inc
jbe
popf
jp
push
mov
mov
mov
repnz
mov
jbe
icebp
sahf
dec
cmpsl
push
push
lret
popf
adc
add
fcmovne
sbb
xlat
add
icebp
pusha
sub
rcr
lods
or
popa
cmp
cmp
rorb
addb
mov
jl
ret
pop
ret
movsb
and
dec
sub
add
fnstcw
scas
lret
pop
outsl
sub
adcb
sbb
mov
out
lcall
push
and
insb
mov
xor
nop
hlt
arpl
aad
in
mov
fdivrs
pushf
shr
out
stos
aaa
je
and
js
das
jg
push
in
mov
xor
mov
and
and
leave
in
lea
lret
or
sub
cmp
jecxz
std
dec
scas
sbb
sbb
insb
and
adc
fsubl
repnz
out
or
outsb
cld
inc
xchg
repz
adc
mov
and
jecxz
pop
ror
push
jp
mov
leave
add
vpmacssdql
js
repnz
jp
out
js
andl
jmp
or
loopne
mov
call
out
cwtl
clc
gs
dec
aas
adc
int3
jg
shr
cmp
fcomi
fldt
cmp
or
pop
push
fwait
outsb
test
ds
jnp
shlb
aaa
cmp
jle
stos
push
ret
and
adc
or
mov
outsl
cmp
iret
cmp
inc
cmc
sbb
dec
mov
and
lret
mov
add
dec
imul
cmp
nop
insl
or
jecxz
out
inc
push
push
mov
xor
or
xor
nop
pushf
cmp
dec
and
mulb
add
aas
rcl
pop
cmp
mov
sub
mov
ds
pop
jne
xor
mov
int3
pop
sub
push
xchg
repz
pop
xchg
test
add
fdivrs
pop
sub
jnp
ficoms
sbb
pop
lock
frstor
adc
out
stos
fs
dec
and
jecxz
cmp
dec
cmp
popf
pop
int
shll
jne
call
pop
mov
xchg
inc
mov
lahf
adc
pop
lret
cmp
mov
inc
js
ss
repz
add
jno
aaa
jb
or
sub
sbb
cmp
hlt
stos
fadds
pop
add
aad
cmpsl
clc
and
xchg
mov
out
and
jno
push
and
sbb
dec
cmpsb
sub
jp
xor
rcrl
pop
and
cmp
cltd
mov
pushf
loopne
out
jl
call
cld
add
adc
shll
repz
ja
stos
stos
jmp
imulb
jb
int
test
and
pop
out
iret
shrl
sti
jb
stos
lret
mov
je
sbb
cmp
popf
cmc
cli
and
pop
xor
xor
fnsave
xchg
inc
fcompl
setne
arpl
sbb
std
movsb
jae
dec
inc
rclb
popf
fisttpll
xchg
sub
mov
push
in
inc
enter
xor
sub
mov
ror
inc
add
or
adc
mov
stc
cs
push
out
loop
loope
leave
push
sub
mov
das
jb
scas
test
xchg
jnp
dec
es
stos
sbb
sub
jl
sub
out
xchg
mov
scas
pop
mov
jnp
mov
in
ret
insb
repz
mov
cmpsl
and
daa
pop
nop
mov
lret
loopne
into
iret
cwtl
xchg
push
mov
clc
or
jns
cmp
aad
inc
lods
cmp
add
add
jo
mov
jp
fldt
jnp
inc
daa
jb
xchg
push
ljmp
pop
mov
mov
inc
in
clc
xor
hlt
xchg
or
or
test
rorl
popf
shl
int
sbb
ret
lock
or
and
pop
or
pop
stos
lds
dec
outsl
cmp
sub
dec
mov
stc
std
push
dec
xor
jae
leave
pop
push
in
push
aaa
dec
sub
gs
ret
push
dec
mov
push
out
mov
bound
mov
lahf
ss
xor
in
cmpsb
xchg
stc
jo
xor
int3
sbb
hlt
dec
imul
sahf
mov
and
aas
stc
leave
xchg
xchg
xchg
xchg
jmp
cs
test
ret
inc
mov
inc
adc
ret
int
and
fwait
int
jle
mov
das
dec
in
mov
mov
sub
inc
fs
and
pop
cltd
inc
add
std
lret
and
inc
inc
jae
in
push
cmp
mov
int3
jl
and
aaa
cmp
jle
loop
in
divl
nop
lcall
jle
add
push
mov
in
xchg
sbb
arpl
mov
fcoms
mov
jmp
pushl
rsm
dec
adc
jno
jmp
ss
dec
rorl
dec
test
mov
addr16
mov
es
outsb
jno
add
push
push
lahf
sub
mov
jb
pop
mov
out
notb
inc
rolb
mov
mov
clc
rolb
dec
xchg
shl
movsb
lcall
mov
int3
fidivs
mov
clc
cld
push
pushf
jge
jmp
jno
push
aam
ficoml
or
lods
pop
out
iret
sub
ljmp
push
loop
mov
mov
int3
and
mov
ljmp
xor
out
xchg
mov
mov
adc
add
xchg
insl
fadd
inc
push
aas
push
cmpsl
ja
push
inc
ja
dec
ficompl
mov
adc
cmp
mov
inc
into
ds
iret
inc
xchg
xchg
lock
mov
pushf
mov
lods
daa
dec
andl
mov
test
ja
or
pop
cwtl
fisttps
and
inc
outsb
test
inc
ret
jo
fisttpl
pop
mov
and
iret
inc
cmp
repnz
mov
jecxz
dec
roll
cmpsl
xor
sbb
jb
jnp
jmp
imul
mov
or
or
mov
or
movsl
cmp
gs
lods
push
sub
xchg
dec
cltd
lds
sbb
imul
cltd
pop
sbb
test
popf
adc
clc
outsb
pop
dec
repz
cwtl
ret
lds
xchg
out
mov
push
fs
xor
stos
add
into
sahf
cmp
sbb
inc
adc
sbb
lret
sbb
bts
std
or
daa
xor
call
inc
jge
outsb
xchg
mov
cs
repnz
lods
inc
adc
inc
sub
jp
fyl2xp1
repnz
or
mov
lods
cmpsb
pop
pop
xchg
sbb
cmp
out
mov
sub
or
data16
xchg
std
lods
stos
sbb
loopne
jl
lret
or
testb
mov
push
in
inc
aaa
sub
jl
mov
add
add
out
nop
mov
gs
sbb
mov
es
mov
push
negl
sbb
push
scas
fptan
inc
mov
mov
out
inc
adc
shl
mov
sbbl
fs
daa
cmc
xchg
mov
dec
push
mov
adc
imul
sahf
pop
xor
adc
dec
xlat
enter
cltd
dec
mov
cmp
and
jae
leave
sub
aaa
ret
xchg
aam
pop
rcrb
jae
mov
dec
jl
loop
js
xor
sbb
mov
ret
das
mov
pop
fildll
sub
lcall
adc
or
mov
lds
test
mov
xchg
push
adc
inc
sbb
dec
cmp
mov
jno
jp
cmpsl
cld
fstl
rcl
pop
jnp
ret
or
xchg
adc
jmp
or
cmpsb
dec
lds
xchg
subb
into
rclb
testl
mov
cmpsb
nop
mov
cmpsl
mov
imul
sbb
in
sbb
add
push
and
leave
std
adc
mov
or
xchg
push
and
cmpsl
std
sub
jo
mov
mov
mov
pop
jb
cmpsb
mov
scas
movsb
push
iret
popa
cmp
mov
xor
es
jge
notl
xchg
mov
aam
das
sbb
fists
mov
inc
cld
xor
adc
data16
sub
idivb
shl
scas
enter
mov
dec
fimuls
rcll
call
cld
pushf
test
lcall
rcrl
mov
push
ror
and
fidivrl
pushf
sub
sbbl
test
jo
push
outsb
push
add
add
fadd
xchg
pop
cld
push
jecxz
in
sub
lcall
movsl
stos
mov
xchg
push
outsl
push
push
fcomps
pop
add
lds
inc
jb
fidivl
sarb
cmp
fistpll
sub
icebp
jmp
imul
jne
bound
xchg
pop
loop
adc
xchg
fiaddl
cmp
test
and
es
idivl
in
lahf
xor
pop
push
or
in
mov
scas
xchg
inc
fmul
inc
inc
sbb
cmp
cmp
fbstp
sti
mov
fsubrl
pop
cmc
popa
push
inc
arpl
data16
push
pop
mov
cmp
daa
mov
lcall
aad
adc
aad
sbb
ret
push
daa
mov
sti
pop
sbb
pop
pop
pop
stc
mov
sub
in
or
mov
pop
popf
in
inc
addr16
lcall
gs
das
jge
cmpsl
cmp
xor
addr16
es
test
hlt
add
mov
sbb
movsb
inc
out
pop
xor
xchg
xlat
notl
arpl
cmc
xchg
pop
call
dec
sbb
dec
sub
push
in
pusha
fs
out
stc
jp
and
mov
dec
xchg
cs
push
xchg
jp
mov
cmp
aas
cwtl
rolb
cltd
adc
adc
pushf
pop
xchg
push
call
hlt
mov
jp
sbb
jmp
scas
popa
dec
outsb
test
jnp
sub
fsubrp
std
std
sbb
fisttps
mov
push
aad
fisubl
aam
lods
fucom
popf
sbb
jns
xchg
into
shl
mov
pop
cld
adc
mov
sti
scas
pop
mov
sub
stos
sbb
pop
movsl
test
scas
leave
jbe
mov
push
movntq
out
ret
xorb
roll
ret
les
dec
repnz
mov
xchg
cmp
sub
xor
lcall
ret
lods
test
push
pop
adc
inc
pusha
aaa
cmovge
sti
popa
sub
jno
inc
push
stos
sub
mov
pop
fadd
push
cmpsb
push
mov
or
mov
push
push
lret
scas
stos
sbb
in
adc
add
scas
incl
out
jmp
in
test
aaa
or
sahf
cmp
pop
lock
lahf
aas
imul
lds
pop
out
ret
xlat
add
dec
and
lcall
int3
aam
mov
test
iret
jns
daa
cwtl
aaa
push
mov
jno
dec
cwtl
aas
mov
xor
lret
orl
sub
divl
and
add
std
repnz
add
push
jb
dec
loopne
addr16
xor
jns
movsb
push
inc
into
scas
in
xchg
fs
stos
pop
pusha
dec
mov
cs
stos
in
rcrl
cmp
pop
pop
iret
mov
xchg
roll
pop
mov
mov
push
pop
outsl
fcmovne
inc
andb
add
loope
ljmp
fistpl
pop
cltd
adc
sub
nop
jg
in
pop
mov
xor
jns
mov
sub
addl
inc
pop
xchg
push
lods
xor
mov
rcl
push
leave
sub
mov
shll
sub
xchg
xor
jl
mov
fisttpl
push
fs
or
jne
inc
out
andb
jle
mov
repnz
jne
es
hlt
jecxz
sahf
pop
lcall
mov
shr
subb
cwtl
js
mov
roll
xor
mov
push
std
fnsetpm(287
sbb
stc
ljmp
and
fwait
dec
test
push
and
and
bound
pop
xchg
and
sti
xchg
mov
pop
lcall
mov
mov
xchg
and
idiv
pop
push
dec
or
repnz
fildl
out
cmp
mov
pop
subl
mov
dec
and
lods
outsl
jecxz
push
mov
sbb
repnz
fstl
mov
fs
inc
fisttps
cmpb
xor
stc
mov
jmp
jnp
loope
or
into
mov
or
cmp
jae
dec
or
jp
mov
sbb
and
or
outsl
stos
lods
fsubp
stos
sahf
push
dec
push
push
aas
lods
dec
dec
rcrl
das
xchg
dec
dec
mov
pop
adc
repz
popa
sub
or
into
add
adc
xor
les
push
in
mov
pop
jg
jnp
push
cmp
push
ja
pop
aaa
pop
int3
jo
adc
mov
and
sti
std
xchg
in
mov
icebp
fisubrl
xor
shll
inc
cs
stc
inc
shrb
adc
outsl
lahf
fucomp
popf
xchg
scas
fwait
mov
les
inc
mov
inc
lock
std
push
xlat
adc
in
push
push
adc
push
int3
mov
add
mov
adc
xlat
pop
lea
cmc
mov
adc
or
mov
or
inc
movsb
sub
das
add
pusha
push
mov
inc
push
ret
pop
xor
mov
sbb
dec
cmp
hlt
add
test
cvtps2pi
cmp
or
insl
jbe
xchg
imul
and
in
and
into
xor
mov
dec
xlat
dec
enter
dec
dec
xor
jl
xor
int3
sti
cmp
xchg
and
dec
adc
mov
shll
lds
pop
fwait
mov
cmpsl
in
pop
cmpsb
imul
out
outsl
sub
inc
lahf
cmp
sub
push
frstor
stos
fs
xchg
mov
pushl
dec
cmpsl
or
negb
jb
inc
lahf
mov
push
clc
mov
movsb
daa
xor
adc
inc
or
xchg
adc
pop
sbb
test
repnz
jne
cmc
shll
cld
push
mov
imul
xchg
inc
mov
pop
xchg
outsb
xchg
mov
or
mov
cmc
pop
fucomi
in
lds
push
fdivs
aaa
dec
insb
sub
sahf
cs
xchg
addr16
pop
and
mov
test
pop
add
pop
cwtl
sbb
mov
sbb
cli
pop
sub
iret
adc
mov
shll
ljmp
std
cwtl
cmp
jb
icebp
repnz
icebp
mov
ljmp
ja
int3
dec
sarb
mov
mov
loope
std
dec
fidivrs
nop
inc
mov
mov
es
adc
mov
xchg
roll
push
les
sahf
cmp
xchg
mov
in
in
mov
mov
leave
fldt
cwtl
scas
mov
outsb
jb
dec
insb
xor
rolb
push
mov
test
adc
adc
test
js
pop
and
fidivs
jmp
mov
loope
das
mov
cs
mov
mov
ljmp
fnstenv
and
imul
arpl
pop
push
lds
and
cmp
ss
addr16
fmulp
push
mov
js
js
fcoms
jb
loopne
bound
jg
test
fstpt
jle
push
jb
repnz
cli
and
sbb
daa
mov
aaa
or
ljmp
dec
adc
scas
lds
sbb
gs
xor
scas
leave
les
cmp
cmp
mov
cmc
insl
enter
xchg
push
sbb
jo
mov
add
add
push
idivb
sarb
jbe
mov
adc
mov
pop
adc
aas
jp
or
fisttps
pop
jns
cmp
insl
mov
pop
jl
sti
clc
mov
xor
lret
jns
fcomps
push
mov
push
fwait
cmp
mov
jnp
icebp
mov
mov
jb
cmpsl
ret
scas
les
sub
sub
mov
add
fwait
lret
fisubrs
adc
push
ficomps
data16
mov
fucomp
jecxz
in
xlat
scas
mov
sub
in
sbb
subb
pop
add
inc
roll
nop
mov
popa
cmpsb
lcall
jnp
js
sbb
sub
ss
imul
ljmp
pusha
mov
mov
dec
jecxz
jl
push
or
push
sbb
testb
ds
jmp
xchg
xchg
call
push
fsub
hlt
outsl
out
inc
in
push
gs
push
sbb
jl
inc
pop
outsb
out
clc
ss
xchg
mov
dec
dec
addb
dec
cmp
add
mov
xchg
cmpsb
jl
push
lods
pop
aaa
aaa
aam
xor
nop
jg
repz
mov
stos
inc
mov
or
fs
rcrl
cmp
xchg
adc
mov
cmpsl
shlb
or
or
fimuls
lods
or
push
sub
dec
inc
stc
mov
pusha
bound
xchg
pop
mov
in
lcall
add
xor
aaa
mov
jne
sub
jnp
or
clc
or
pushf
cmp
mov
pop
in
or
push
ss
push
jl
mov
cltd
sti
sbb
adc
shlb
lds
test
imulb
push
scas
sub
pop
aas
popf
sbb
lahf
xor
adc
sub
imul
cmpsb
in
jge
jg
scas
or
cmp
divl
sub
fdivs
xchg
inc
pop
jg
sub
or
jecxz
push
stc
fimull
repz
and
inc
adcl
push
dec
scas
xchg
gs
call
sbb
lahf
dec
mov
cs
cmpsl
ret
arpl
adc
repz
fildl
inc
cld
push
cwtl
push
out
cmp
js
mov
push
and
add
loope
fnsave
inc
aad
push
das
cmpsl
outsl
aaa
pop
sbb
mov
jne
imul
sub
jle
loopne
popa
aas
mov
ljmp
add
loopne
or
fildl
imul
aas
pop
xchg
cs
jg
lock
shl
sbb
pop
xchg
popa
testb
cmp
and
enter
das
jmp
or
in
daa
push
lds
mov
and
outsb
repnz
lret
cmpsl
dec
fcmovnu
dec
in
mov
lcall
mov
test
mov
adc
mov
mov
cmp
inc
lods
jne
cmp
ss
aad
pop
sub
sbb
cmp
into
push
mov
jg
sub
imul
mov
lret
mov
push
push
mov
enter
jb
mov
push
jle
dec
xchg
dec
in
dec
cmc
mov
cmpsl
cmp
xchg
ret
jne
mov
push
ficompl
imul
jnp
jnp
inc
jns
movsb
and
aaa
daa
and
add
push
push
mov
xchg
subw
mov
and
dec
add
insb
jecxz
pop
mov
mov
push
pop
sti
cmp
mov
and
cmpsl
inc
andb
in
or
xchg
out
js
rcl
mov
fldcw
jl
loopne
inc
ljmp
shl
ss
pop
arpl
outsb
dec
lret
jo
repz
stc
je
in
mov
and
fs
imul
xor
sbb
pop
push
cwtl
int3
add
mov
jno
pop
jo
adc
inc
cmpl
jg
and
ret
xor
in
shll
pushl
cli
stos
or
pop
mov
clc
push
xor
jns
jb
mov
push
cmp
mov
sub
in
dec
lret
in
xchg
adc
shrb
dec
dec
inc
mov
dec
xchg
push
rclb
pushf
jno
outsb
pop
add
mov
hlt
inc
cli
or
aas
in
test
lret
jns
cmp
outsb
rclb
push
mov
lea
in
and
xor
jmp
aaa
mov
cmp
out
cmp
xchg
repz
lret
mov
out
mov
jns
jno
mov
addr16
xor
call
or
jb
hlt
cmp
pushf
inc
push
stos
call
jnp
dec
xchg
fisttpll
sub
rcl
hlt
jg
jge
bound
pop
cltd
in
cmp
ret
pop
cmp
leave
dec
lock
lret
add
loope
inc
mov
imul
jmp
rclb
mov
xchg
cmp
mov
in
js
fstl
ss
push
scas
lahf
mov
bnd
mov
add
stos
lcall
jo
cmp
push
cmp
inc
xchg
mov
sti
dec
cmc
mov
or
leave
mov
or
fsub
jns
jo
mov
loop
push
mov
dec
cmp
dec
sahf
int3
sbb
out
cmp
xor
rdtsc
jo
cmc
inc
and
pop
sbb
cmpsl
cmp
sub
mov
push
pusha
insb
mov
sub
jge
sqrtps
out
loop
inc
das
enter
test
jno
pop
roll
nop
lods
cmpsl
fmuls
addr16
testb
add
sbb
adc
daa
stc
cmp
int
test
ss
push
shl
or
arpl
and
bound
fwait
jb
mov
outsb
je
das
fs
inc
and
pushf
mov
and
int
sub
addr16
out
dec
dec
inc
adc
mov
xchg
mov
or
push
sbb
aas
sbb
stc
sti
fwait
sub
sarb
or
idivl
dec
ljmp
rol
andb
in
mov
mov
ljmp
xchg
or
pop
inc
add
xchg
rolb
mov
or
mov
jmp
push
mov
push
pop
es
in
cli
mov
cmp
add
add
xchg
mov
mov
clc
adc
jl
dec
scas
mov
xchg
pop
xchg
mov
loopne
cs
xor
lods
repnz
dec
inc
out
adc
cmc
mov
mov
xorb
cmpxchg8b
lret
mov
mov
call
in
ja
dec
cmc
js
hlt
mov
dec
jbe
test
fsubs
popf
adc
mull
sbb
mov
add
mov
js
jl
mul
inc
mov
pop
pop
lret
std
xor
pop
mov
dec
dec
mov
pop
mov
in
push
xlat
pshufw
push
lds
mov
cld
test
out
enter
pop
loopne
decb
add
mov
jmp
ja
in
notl
cli
iret
mov
lahf
xchg
xchg
sbb
or
arpl
inc
push
adc
push
cmp
cltd
pushf
lcall
imul
push
aad
and
cmp
pop
mov
es
cwtl
syscall
inc
lahf
or
dec
cmp
mov
hlt
insl
sub
or
mov
int
mov
into
jl
fsubs
jmp
sarb
cmp
xchg
orb
ss
movsb
mov
dec
lret
out
adc
repnz
cmp
sub
push
jge
xor
lahf
push
or
xchg
xchg
inc
icebp
mov
jl
inc
fnstenv
mov
nop
in
dec
cwtl
and
shlb
in
stos
jg
pushf
mov
sahf
scas
xchg
addr16
inc
mov
sahf
cltd
sub
cmp
loopne
in
jecxz
xchg
cmp
add
fisttpll
mov
jnp
push
fstp
loope
sub
scas
jb
dec
push
or
arpl
repz
jg
pop
push
movsb
xchg
mov
data16
jno
mov
jl
lock
stos
and
mov
pop
mov
stc
in
add
int3
test
mov
ja
ret
jne
test
sbb
int
sub
cmp
data16
adc
rcrb
sbb
iret
inc
adc
popf
gs
lret
sub
sub
dec
xchg
inc
cmp
dec
push
and
pop
sti
mov
add
mov
push
int3
push
dec
ja
sti
inc
ret
std
notb
pop
mov
push
xor
sbb
pop
mov
pop
insb
stc
pop
jo
insl
adc
mov
jmp
movsb
jle
cmp
xchg
ja
pop
test
jmp
or
ds
sarb
mov
pop
mov
iret
sbb
xchg
icebp
push
rolb
dec
mov
repnz
imul
cli
mov
mov
addr16
xchg
test
xchg
pop
xor
pop
adc
imul
cwtl
add
or
jl
jnp
sbb
cmp
icebp
stos
fsubl
and
mov
jmp
pop
test
call
xor
out
sub
mov
jge
fldcw
fsubs
push
add
cmpsb
aaa
ljmp
add
sahf
movsl
jle
add
out
mov
pop
jmp
mov
out
adc
mov
inc
xor
lcall
mov
xor
enter
and
pop
lock
daa
lahf
sub
lock
aad
xchg
add
out
fwait
jecxz
jbe
loop
fmull
pop
push
negl
mov
cld
fwait
pop
sub
je
fwait
sbb
sub
ds
pop
mov
jge
stos
jae
jmp
jns
and
jge
inc
pop
movsl
sbb
aam
subb
pop
inc
xor
fsubs
xchg
mov
shl
cli
cmp
push
push
dec
ffreep
movb
and
or
nop
inc
push
push
mov
shlb
loope
and
mov
leave
mov
je
cli
sub
das
jg
lods
movsl
je
lock
jl
scas
mov
push
dec
negl
cmp
sarl
in
ret
and
ja
mov
ret
fimull
into
test
jae
repnz
xor
mov
sbbb
cmc
cmpsb
jb
dec
cmc
popa
popl
sarb
stos
in
sahf
data16
push
fidivl
inc
stc
jbe
mov
and
pusha
jo
int
daa
mov
xchg
inc
dec
cltd
xor
jb
lock
add
sub
inc
js
outsl
mov
negl
in
pop
cltd
xchg
loopne
pop
pop
add
pop
xchg
pop
ret
and
jo
nop
sub
pop
sbb
cmp
mov
add
cld
addr16
repnz
or
in
sub
mov
aas
or
jns
pop
pop
jbe
mov
int3
data16
ss
mov
outsb
pop
push
xor
dec
adc
mov
mov
xor
mov
dec
fidivrl
int3
shl
inc
out
or
inc
dec
mov
push
clc
and
sub
sarb
int3
and
jg
mov
xchg
cmp
pop
lcall
add
sbb
jo
aaa
into
pushf
and
pop
jno
in
jmp
imul
pop
push
pusha
test
push
or
fidivrs
popf
stc
sbb
mov
cmpsl
xor
sbb
jle
mov
cmp
cmpsl
aaa
shrb
lock
adc
push
sbb
mov
add
incl
dec
pop
mov
daa
ret
sbb
xchg
fcmovu
ljmp
aas
orb
popa
lret
loope
ret
loopne
jb
sub
lods
lods
jno
or
lods
add
pop
xor
or
gs
aam
outsl
out
pushf
lock
pop
ja
int3
cmp
dec
pushf
adc
inc
rcrl
cmp
push
sahf
cltd
jno
popa
dec
xchg
icebp
ljmp
xchg
xchg
dec
xchg
jns
cld
into
sahf
mov
xchg
in
push
cmp
and
movsb
jnp
mov
lahf
data16
shll
xor
test
jl
mov
mov
sbb
jne
in
push
xor
push
lret
mov
outsb
dec
pop
sbb
xchg
jle
sub
in
xchg
mov
jecxz
test
std
mov
cld
test
imull
sbb
test
outsb
stos
mov
popf
clc
add
pop
push
cld
les
scas
ljmp
sti
sbb
cmpsb
mov
sbb
fidivs
mov
les
in
cmp
icebp
xchg
ljmp
fwait
or
int
test
hlt
push
inc
jae
and
mov
sahf
mov
mov
and
aas
ret
cmp
xor
sti
xlat
inc
mov
mov
sbb
cmp
xorl
pop
in
push
test
push
mov
pop
jecxz
and
fwait
adc
lock
test
sbb
push
ffree
inc
pop
dec
scas
inc
jo
mov
fstpl
into
cld
mov
cmp
std
popf
in
pushf
push
lock
leave
xor
mov
cmpsl
pusha
insb
movsl
inc
sub
mov
fadds
dec
dec
sbb
jge
fnsave
sub
into
cld
mov
mov
mov
shrl
mov
ret
pusha
ljmp
je
pop
stos
or
imull
orl
push
popf
das
out
xor
cmp
ss
test
lahf
lock
mov
cld
das
aam
inc
mov
and
push
add
or
xchg
into
add
hlt
sbb
pop
gs
enter
jg
das
xchg
pop
cmpsb
rclb
aam
xor
lahf
pushf
lcall
jns
ret
daa
xchg
repz
inc
sbb
sub
rcrl
push
cmp
pusha
sbb
es
adc
mov
pop
push
pop
sti
xchg
js
shrb
jne
lret
div
inc
rorl
addb
pop
inc
xchg
in
nop
mov
mov
adc
fldl2t
jl
ja
sbb
xchg
scas
movl
mov
mov
sbb
push
mov
ret
dec
cmp
add
repnz
aaa
gs
lea
or
pop
std
cmp
pop
lret
cltd
lods
idivl
mov
or
aaa
and
xor
data16
aas
int3
mov
lods
enter
movsl
add
inc
adc
pop
movsb
lea
fidivrs
jae
jecxz
lahf
into
ss
icebp
std
cmp
jo
push
pusha
lahf
sub
mov
xchg
sub
or
xchg
adc
ss
dec
sbb
inc
or
ret
pop
add
loop
ja
and
imul
inc
inc
outsl
hlt
xor
insl
fcompl
mov
aad
int
movsl
mov
js
std
or
sbb
cmpsl
cmpsb
popf
jno
lods
xchg
pop
arpl
lea
hlt
dec
cs
jno
addr16
cmp
or
dec
das
push
scas
jno
sub
sti
xchg
scas
data16
sub
xchg
sub
aad
mov
iret
xor
pop
jle
rorl
push
inc
shlb
inc
mov
xchg
rorb
ja
xor
cli
out
add
inc
movsb
jp
test
push
bound
fldenv
lods
jo
arpl
sbb
dec
movsl
movsb
or
scas
ret
daa
movsb
pop
xor
call
xchg
cmc
int
enter
jno,pn
xchg
scas
imulb
sbbb
push
adc
sbb
xchg
outsb
adc
mov
pop
jno
es
pop
adc
mov
pop
push
and
outsb
jne
movsb
sbb
test
test
imul
js
adc
das
jo
jmp
cltd
lods
fwait
push
rorb
daa
dec
ret
inc
mov
aaa
add
jmp
lahf
ret
push
pushf
xor
pop
adc
pop
push
fsubs
lcall
test
xchg
dec
push
aam
xchg
movsb
fdivrl
push
adc
icebp
push
popa
dec
dec
mov
lods
push
push
push
roll
adc
scas
test
mov
inc
outsl
std
mov
add
lcall
xor
loope
test
push
mov
dec
xchg
xor
mov
mov
inc
sub
stos
ljmp
rorb
inc
pop
mov
loop
int
mov
jge
scas
jge
iret
leave
mov
sbb
xchg
and
js
adc
stc
and
pop
fsubl
mov
insl
or
push
push
sbb
imul
pushf
ret
lret
cmp
and
dec
cmp
rcrl
push
mov
in
jle
pop
sub
push
popl
cmpsl
pop
int3
fsubs
repnz
inc
and
inc
and
xchg
xor
loopne
adcl
jmp
loop
insb
sub
inc
inc
or
mov
movsb
hlt
push
imull
fistpll
jge
add
push
add
push
in
jl
bound
gs
jns
dec
insl
jbe
add
jbe
popf
imul
les
repz
mov
out
xchg
idivl
enter
sbb
cmpsl
mov
lods
jg
xor
ljmp
sub
pop
addb
inc
push
xor
in
dec
jne
pop
dec
and
pusha
lcall
xorl
mov
or
inc
lods
jmp
cmp
test
mull
or
mov
xor
xor
pop
cmc
cmp
adc
jmp
pushf
cmp
cli
inc
shl
add
xchg
jbe
repz
dec
xchg
jg
adc
cmp
repz
sbb
push
fidivrl
and
dec
or
dec
pop
les
jae
cld
mov
decl
dec
cmpsl
dec
test
cld
push
in
clc
xchg
lods
sahf
or
push
lret
adc
pop
inc
dec
mov
jnp
js
mov
out
add
or
repz
pushf
inc
dec
mov
inc
lock
sbb
rcrb
idivb
movsl
add
jle
test
push
jns
push
and
adc
jp
sbb
aaa
loop
test
jno
adc
pop
int
scas
jecxz
inc
mov
mov
xor
mov
inc
out
mov
xor
test
adc
mov
cli
inc
icebp
jo
stos
aas
inc
and
or
inc
fwait
lock
fistps
mov
xchg
push
loopne
fs
fisttpll
push
inc
es
iret
cmc
xor
and
pusha
lock
outsb
data16
lret
add
insb
rorl
cld
stos
cmc
insl
push
andnps
scas
pop
sub
mov
and
add
andb
dec
jmp
aad
push
jg
sbb
adc
aad
mov
xchg
mov
pop
clc
in
lock
sti
sub
leave
jb
int
lret
nop
push
sbb
dec
daa
mov
push
cmp
xchg
lods
xchg
sub
cmp
ja
and
dec
mov
out
xchg
jl
pop
push
or
stos
sub
in
dec
decl
enter
movsl
test
jmp
fisubrl
xlat
adc
jg
ret
mov
inc
mov
xor
sti
pop
fsts
push
outsb
dec
or
sub
fwait
outsl
cmp
mov
sbb
outsb
or
xchg
out
pushl
ds
or
mov
pop
insl
outsl
jne
iret
mov
call
mov
shl
add
xchg
sub
gs
addr16
fidivrs
jmp
lods
mov
fcmovu
ret
sub
sbb
jmp
xlat
mov
or
or
aad
jns
out
jbe
mov
les
cs
int
test
int
rorl
dec
push
rcll
lods
xchg
adc
scas
insb
or
imul
loope
lock
out
sbb
insl
flds
sbb
sub
enter
lret
sbbb
call
fdivrl
jle
jmp
aaa
or
popa
ss
xchg
and
mov
ficomps
popa
sahf
movb
fldenv
lret
lret
loop
out
dec
jbe
mov
lods
cmpsl
test
xlat
adc
mov
je
add
or
sbb
xchg
and
jmp
jae
add
and
push
out
in
lcall
cmp
or
jne
mov
push
and
out
out
and
sub
loop
nop
ja
mov
jle
inc
or
daa
inc
rclb
xchg
sbb
aaa
or
mov
jbe
adc
sub
xor
add
jns
adc
scas
add
jl
lods
mov
sbb
mov
or
inc
mov
mov
test
clc
adc
mov
lret
ss
inc
inc
arpl
lods
add
movsl
xchg
adc
inc
leave
inc
test
or
nop
daa
loop
xor
lods
add
hlt
inc
lret
xchg
hlt
xor
daa
outsl
add
push
cmpsl
shll
sub
daa
call
push
sub
lods
cs
mov
icebp
jae
xor
out
neg
mov
push
sbb
loop
fdivl
mov
test
push
lds
lea
fstpl
pop
movsl
and
aam
push
inc
inc
idivb
int
popf
fmuls
cmp
xchg
arpl
fdivrl
pop
mov
and
loopne
adc
out
pop
dec
jno
cmpsb
lret
fwait
fs
jge
push
push
hlt
inc
cmpl
mov
cs
push
mov
add
mov
add
add
inc
stc
mov
cmp
cs
pop
lret
popa
leave
subl
push
data16
or
push
jbe
repnz
xor
enter
js
orb
xchg
sbb
int
aad
pop
adc
sahf
inc
stos
pop
and
xchg
pop
clc
or
insb
inc
packuswb
jg
inc
insb
ja
in
out
enter
cmp
push
push
sbb
fildl
mov
cmpsb
jns
xor
stos
je
sub
sbb
inc
roll
and
mov
push
js
sub
lea
cmp
adc
or
jl
pop
xchg
jmp
mov
mov
push
insb
fimull
pop
or
xchg
jb
dec
in
pop
sbbb
movsl
aaa
push
lcall
shr
mov
aaa
movsl
pop
jo
sbb
ret
dec
push
mul
addr16
testl
cli
mov
mov
inc
lods
sbb
jmp
xchg
push
cld
add
jle
xchg
sub
testb
push
sub
pop
sbb
mov
xor
popf
or
in
lods
adc
sbb
dec
adc
dec
pop
mov
pusha
fadd
xchg
pop
pop
inc
adc
sbb
push
fcoml
mov
xor
test
ja
iret
bound
sbb
divl
popa
lock
dec
jne
lods
push
test
sbb
aad
scas
repz
mov
or
faddl
or
dec
inc
data16
movb
inc
ljmp
imul
bnd
test
add
rcr
cwtl
cld
jne
mov
xchg
adc
xchg
pop
xchg
dec
and
inc
faddl
lret
in
pusha
dec
rorb
mov
jle
cmp
sbb
ljmp
xchg
lret
out
in
jmp
pusha
cmc
hlt
pop
sub
push
jecxz
aas
jl
in
push
or
dec
cmpsl
xor
jbe
cmp
jge
inc
repz
sub
divb
or
and
and
andl
lcall
sbb
jecxz
lret
ss
or
mov
mov
enter
fistl
and
sub
insl
jp
jmp
int3
mov
cmpsb
sub
loopne
movsb
aam
add
fnstsw
das
push
mov
cmp
push
clc
push
mov
mov
scas
cmc
iret
bound
out
imul
xor
cmp
fcoml
add
xchg
mov
pop
mov
and
adc
gs
xor
test
jmp
sub
mov
and
push
inc
sbb
xchg
mov
dec
enter
repz
test
dec
int3
cmpsb
cs
scas
mov
push
repz
fbld
xor
push
daa
sbbl
out
lahf
push
push
das
add
loop
mov
addr16
in
mov
stos
cltd
out
xchg
xchg
les
mov
jnp
jle
test
cmp
xchg
lret
test
push
orb
mov
sti
dec
xor
pop
out
mov
sbb
lret
test
mov
jmp
lock
jp
loop
sub
ffreep
push
clc
scas
cli
and
lods
hlt
pop
mov
testb
xchg
in
jle
mov
test
shlb
and
inc
jl
popaw
insb
addr16
sub
ror
cmp
in
cmp
insl
filds
and
in
push
pop
push
xchg
lahf
adc
outsb
imul
cs
jecxz
cld
iret
negw
mov
mov
inc
sbb
push
sub
aas
fbstp
pop
repz
pushf
jae
xchg
mov
aam
fldt
mov
inc
and
addb
xor
fidivrl
mov
sbb
in
jmp
in
dec
xlat
testl
pop
cmpsb
outsl
mov
daa
test
mov
jbe
clc
shr
jle
pop
inc
jno
push
mov
cmpsb
and
ljmp
pop
mov
call
dec
lcall
jp
jne
push
imul
sub
mov
xchg
jmp
fsts
mov
xor
sub
lods
inc
or
cmp
lods
test
adcb
pop
push
or
mov
stos
inc
and
push
mov
push
into
lods
lret
jl
mov
les
inc
lods
cs
add
movsb
cmpsl
pop
adc
lret
cmc
cld
int3
or
int
sub
or
mov
xchg
push
sbb
cmc
idivl
adc
inc
jb
mov
sub
sbb
mov
sbb
cmp
inc
and
mov
xchg
jo
mov
test
rolb
push
mov
add
and
enter
lret
aaa
addr16
jbe
cmp
movhps
mov
fmull
push
jmp
and
lahf
lods
mov
repz
xor
or
es
mov
paddd
out
push
xor
mov
repz
aas
loopne
or
loope
ja
xor
and
les
jae
pop
stos
jecxz
mov
mov
idivl
loop
add
cmp
fs
fadds
mov
mov
js
sub
in
cltd
push
iret
pop
call
cmpsb
sub
xchg
out
push
push
movswl
add
jo
outsb
jbe
xlat
jbe
dec
mov
arpl
pop
lea
cli
xchg
cli
pcmpeqd
or
sub
xor
addr16
add
in
inc
and
cltd
inc
mov
sti
adc
push
scas
cmp
sub
dec
shll
mov
push
and
jmp
insb
inc
pushf
aad
mov
adcb
and
sub
std
and
call
mov
cmp
adcb
jb
fadds
mul
jmp
sbb
inc
sub
add
cmp
lods
mov
imul
xor
clc
enter
sub
and
cmp
jp
mov
fcomip
mov
and
fidivl
push
int3
cmp
push
aad
pop
mov
hlt
jnp
stos
mov
or
lret
mov
jge
in
idivl
outsb
into
xchg
daa
push
or
repnz
jg
and
pop
mov
lods
mov
xor
and
sbb
pushl
sub
mov
sbb
hlt
add
add
dec
lret
aaa
adcl
in
or
aad
or
addl
xchg
sbb
mov
popf
scas
push
repz
mov
mov
cmp
cmp
in
dec
lds
clc
or
les
outsl
push
xchg
or
test
bound
sahf
push
movl
xor
jno
mov
mov
das
mov
xchg
dec
and
dec
imul
cmpsl
subl
movsl
or
shll
xor
out
test
xchg
inc
enter
push
out
or
mov
mov
pop
int3
mov
mov
jo
xchg
dec
stc
or
cltd
jge
jb
mov
cmp
adc
popf
cmc
data16
std
decb
or
xor
xlat
push
idivb
clc
push
sar
mov
outsb
lods
outsb
push
jnp
jge,pn
cmpsb
mov
push
lds
xor
add
loope
lahf
mov
push
repz
xchg
pop
or
mov
jle
dec
out
gs
enter
push
sbb
xor
xor
loope
inc
jb
xor
xor
ss
lods
jle
jb
jbe
fimuls
push
fnstsw
nop
cmp
xor
sub
pop
lret
cmp
push
stos
cltd
xchg
icebp
add
int
mov
inc
fucomip
movsl
fldl2e
dec
adc
pushf
push
cli
imul
mov
mov
push
push
fsts
and
ja
mov
fstpl
fistpl
cli
enter
sub
xchg
mov
adcb
out
ret
cmp
int
pop
inc
ljmp
aad
mov
dec
pop
push
fildll
sti
js
imul
and
sub
xor
data16
sub
cmpsb
inc
rclb
mov
fcmovb
cmp
mov
pop
jns
mov
push
jne
inc
cli
inc
cli
or
xor
adc
inc
shrb
push
out
mov
insb
test
mov
fsubl
and
jb
pop
push
addr16
outsl
pop
sar
push
jae
cmp
mov
jns
adc
cmp
pop
lcall
jmp
or
dec
jmp
out
pextrw
jle
xchg
pop
repnz
sar
push
fcoms
dec
mov
pop
out
sub
mov
mov
push
arpl
cmpsb
movsl
test
xchg
push
pop
adc
je
push
stc
outsb
sbbb
push
sub
adcb
sub
cmp
dec
push
in
push
jo
hlt
pop
xchg
sub
and
mov
std
push
pusha
aad
movsl
repnz
fs
les
fldl
ret
lret
mov
pushf
dec
sbb
aas
cltd
ljmp
insb
scas
mov
sbb
cld
testb
sbb
outsb
scas
cmp
inc
les
xor
mov
push
cmp
sbb
push
mov
sbb
sbb
and
jb
mov
or
fistps
js
xchg
mov
adc
div
imul
arpl
shl
in
cld
es
repnz
orb
xchg
adc
lods
mov
push
push
push
repz
in
cmpsl
inc
push
mov
sahf
ljmp
notl
jg
out
sbb
pop
call
push
inc
and
sbb
lea
adc
jmp
inc
pmulhuw
push
mov
pushf
or
jns
sbb
fisttpll
lret
or
outsb
dec
push
pusha
adc
movsl
add
xchg
sbb
fsubrs
cmp
inc
cs
ds
adc
inc
testl
cmp
daa
jmp
dec
daa
mov
out
inc
jno
mov
addr16
ja
xor
adc
jg
push
push
fnstsw
pop
movsb
lahf
adc
xchg
mov
icebp
test
insb
subl
jge
mov
inc
stc
mov
fs
mov
inc
data16
jle
pop
mov
cmp
adc
xor
jecxz
pop
adcb
jb
pop
xchg
push
inc
push
jecxz
mov
lea
hlt
imul
mulb
bound
adc
pop
xor
jo
push
inc
idivl
dec
xchg
push
push
cmpsl
lret
mov
inc
inc
daa
scas
inc
and
rcll
push
add
sahf
or
ficomps
lcall
testl
bound
movsl
cld
xchg
sbb
and
jnp
clc
sub
mov
inc
lahf
out
imul
mov
cltd
add
dec
cmc
jnp
and
sub
sub
pop
in
and
outsl
fcomi
add
sub
out
ficompl
scas
lods
cmp
mov
xchg
dec
jb
mov
hlt
std
dec
hlt
fcmovnb
push
test
in
rorb
scas
pop
and
jnp
sarl
pop
push
movsl
fimuls
loop
rolb
xor
lret
into
lcall
je
sbb
jmp
negb
je
add
sub
sbb
mov
shrl
xor
jnp
jl
movsb
sub
jo
sub
insl
pop
mov
adc
sbb
pop
adc
add
fwait
repnz
sbb
ljmpw
mov
or
xorl
mov
xor
ffreep
add
mov
insb
loop
sbb
shl
or
add
ljmp
cmpb
xor
sarl
push
pusha
push
les
inc
in
out
dec
rclb
mov
sahf
jb
cs
ret
sub
adc
fadd
jge
sub
or
pop
jl
enter
enter
lea
mov
inc
push
mov
inc
mov
mov
sub
loope
sbb
xchg
icebp
jg
xor
lods
xchg
jo
aad
xor
subb
movsl
dec
push
xchg
dec
jmp
mov
sub
lds
ds
mov
pop
and
std
pop
lods
jno
ret
jb
xlat
cltd
dec
sub
es
negb
adcb
fdivs
pop
jae
sbb
jmp
repnz
in
shll
outsl
shll
stos
xchg
mov
fdivrp
clc
and
ljmp
adc
add
mov
outsb
mov
nop
out
out
in
ss
xchg
xchg
or
mov
add
ror
and
jle
push
repz
xchg
inc
dec
cmp
les
cltd
stc
mov
cmc
out
adc
add
pusha
adc
in
aaa
mov
dec
bound
add
scas
cwtl
pop
fnstcw
rorl
hlt
mov
push
rolb
lods
mov
push
adc
loopne
xchg
sub
ss
data16
lret
inc
outsb
clc
stc
out
dec
mov
mov
pushf
and
insb
aam
daa
daa
mov
push
pop
jmp
sbb
outsl
jne
mov
inc
sub
jae
scas
sbb
sbb
stc
adc
sub
sbb
jg
xor
add
jp
out
js
js
inc
loopne
push
sub
jbe
inc
mov
xchg
lds
sub
xchg
jnp
sub
adc
mov
aad
pop
add
scas
repnz
fistpll
wbinvd
jo
fstpt
cmp
cmpsl
mov
adc
shrb
adc
inc
mov
adc
popf
adc
sbb
shll
and
jmp
adc
fcmovnu
stc
and
cmp
sbb
jbe
sbb
popa
jne
bound
in
adc
sub
stos
loop
popf
outsl
push
add
xlat
in
cmp
movsb
mov
dec
jl
cmpsb
ja
lret
repz
mov
xor
dec
loop
xchg
into
daa
cmpsl
and
in
mov
or
mov
push
push
jnp
xor
fs
jne
jno
insb
aas
adcb
outsb
pop
js
loope
push
sbb
push
add
xor
cwtl
aas
es
lods
rcl
nop
sub
sbb
jmp
pop
cmp
push
xchg
pop
popf
mov
add
inc
pop
pop
add
xchg
pop
push
scas
push
xchg
xor
pop
ror
sbb
daa
hlt
and
pusha
movb
shrl
xchg
stos
mov
roll
sahf
and
into
popf
jmp
push
or
ss
ljmp
xchg
sbb
mov
inc
xor
stos
sub
scas
pop
shlb
jae
ljmp
fldcw
add
loopne
and
sub
xor
dec
daa
and
adc
fidivrl
movsl
mov
jae
jne
stc
sbb
sbb
pop
cmp
and
mov
cmp
aad
pop
inc
scas
adc
mov
call
add
pop
into
dec
inc
addr16
outsl
cmp
jp
mov
mov
sbb
push
enter
mov
sub
rolb
jg
popa
push
loope
jmp
adc
andl
mov
rcll
xor
push
int
xorl
mov
outsb
mov
sbb
xchg
notl
lcall
xor
cwtl
xchg
mov
je
xchg
jmp
xchg
jmp
cmp
rorl
and
adc
pushf
and
mov
shlb
or
movaps
js
adcl
lcall
mov
popa
daa
add
add
addr16
ss
out
inc
icebp
movsb
pushl
lcall
jmp
jbe
ljmp
in
dec
pop
sti
add
bound
stos
in
inc
sub
js
jns
push
adc
ljmp
push
xchg
into
adc
test
fimull
imul
push
insl
push
fstps
pop
ret
adc
into
pop
shlb
or
cmc
sti
or
orb
mov
or
call
or
imul
ret
das
out
negb
mov
lret
add
mov
mov
push
add
popa
jg
shll
pop
push
inc
inc
dec
cmpsb
push
in
inc
xchg
popa
sbb
adcb
mov
xor
in
cmp
sub
sub
add
cmpsl
pusha
inc
sbb
mov
adc
cmp
cld
cmpsl
popf
pop
push
sti
jl
or
int3
mov
decb
jb
fsts
bound
and
addr16
jno
jecxz
das
or
lock
dec
sbb
pop
loope
ljmp
jne
xor
sbb
push
dec
inc
sub
sub
subl
and
in
or
and
cmp
push
pop
or
xchg
jg
xchg
and
sahf
out
jae
ret
xchg
mov
test
clc
jae
aam
add
movsb
jecxz
popa
mov
push
gs
test
and
imul
scas
sarb
shrb
stos
aas
or
jno
mov
cmpb
push
fadds
clc
fildl
ret
repnz
pop
jge
fistl
insl
dec
jmp
enter
inc
jmp
fsubrl
into
jle
cmc
sub
jnp
push
push
or
mov
adc
xchg
popf
push
scas
sbb
lods
scas
loop
int
or
dec
push
xchg
sub
xlat
into
or
xchg
mov
stos
mov
pop
jle
or
cltd
push
nop
xchg
dec
dec
push
xor
frstor
iret
mov
add
cmp
outsb
pop
push
cmp
xor
outsl
movsl
jle
ficomps
lods
insl
mov
cmp
mov
jge
int3
mov
cwtl
jmp
movsb
xchg
in
push
ljmp
push
test
mov
xor
cwtl
mov
fcomps
jb
mov
movsl
lret
cltd
mov
mov
cmp
arpl
leave
cmpsb
dec
dec
iret
loope
sti
arpl
cltd
cmp
cmpsb
hlt
repnz
pop
push
pop
jg
mov
push
xchg
cmpsl
or
xor
fcmovne
subl
mov
test
je,pt
mov
dec
push
lcall
pop
mov
adc
jl
push
sbb
mov
xor
enter
inc
xchg
jle
sub
movsl
subb
std
test
sbb
movsl
jle
mov
mov
call
sarb
xchg
cmp
fistl
hlt
or
insl
insl
bound
jbe
lods
xorb
ficoml
xor
rorl
repnz
lahf
mov
mov
cmp
add
sahf
push
mov
mov
and
pop
fcomip
jnp
xchg
mov
sbb
pop
out
jecxz
aaa
push
pop
lcall
push
lea
je
cwtl
dec
xor
cli
fnstenv
stos
lahf
addr16
mov
dec
cmp
incb
lcall
mov
ja
cmp
in
xor
mov
dec
or
les
mov
xchg
push
aad
pop
insl
jmp
cmp
or
imul
mov
push
jecxz
cmp
lcall
mov
fidivrs
pop
mov
repnz
jecxz
adc
mov
adc
stos
mov
fwait
and
test
or
and
mov
movsl
xchg
and
inc
lahf
andl
cmp
add
adc
cwtl
sbb
bound
outsb
scas
cld
or
aad
icebp
lods
rcll
xchg
fdivrp
jl
mov
sub
jg
jns
jno
fidivs
xor
xchg
mov
repnz
dec
push
fidivs
mov
adc
pop
mov
or
sbbl
mov
roll
stc
stos
cli
jae
push
mov
lds
cmc
jnp
ficompl
cs
sub
add
dec
cmp
lahf
mov
xchg
fmul
add
das
inc
in
sbb
adc
out
sti
xor
adc
ss
adc
dec
aas
imul
dec
std
int3
xchg
fnstenv
dec
test
mov
push
es
fs
ljmp
inc
aam
je
dec
int
int3
push
mov
sub
pop
mov
mov
iret
xchg
in
inc
fsubrs
fwait
xchg
popf
or
dec
scas
fs
or
pop
sub
packssdw
or
xor
sub
push
outsl
jb
arpl
sub
mov
mov
es
lods
mov
bts
xchg
add
push
dec
push
push
sub
mov
push
je
xchg
push
fiadds
xor
movsb
fistpl
adc
in
lds
pop
cmpsb
mov
mov
aad
push
mov
jp
cs
dec
push
lods
xchg
ret
cmpl
shll
cmpsb
mov
loope
movsl
pop
cmp
dec
xor
jo
mov
out
mov
out
inc
subl
inc
jbe
lods
in
cmc
mov
or
shrb
cld
mov
out
dec
adc
std
cmpsl
mov
jmp
das
adc
lock
imul
aad
rcr
or
test
cmp
daa
stc
fiaddl
add
jbe
sub
das
and
fstpt
out
or
mov
push
stos
jb
add
pop
cmp
cmpsl
adc
xchg
test
xor
sti
ret
inc
sub
mov
mov
ljmp
xchg
das
data16
xor
outsb
or
sub
dec
dec
sarb
movsl
mov
pop
sub
push
outsb
adc
mov
add
jp
add
inc
or
pop
mov
roll
loope
rcrl
mov
add
shll
or
shlb
sub
nop
movsl
lock
add
dec
mov
push
mov
adc
pop
rol
adc
in
xchg
test
mull
and
jne
pushf
add
mov
mov
dec
xlat
xchg
test
cmp
cli
cmpsl
ficompl
and
ljmp
sbb
in
inc
and
fdivrs
or
hlt
stos
adc
mov
jae
cli
xchg
xchg
push
cmp
mov
cli
jo
and
mulb
aam
or
cs
dec
jge
xchg
scas
loope
fdivs
cmc
ljmp
divl
or
stos
repz
xchg
jnp
lahf
sarl
cmpsl
cmp
mov
pop
jg
sub
add
mov
lahf
lea
jmp
scas
dec
sub
test
scas
cmpsb
sub
or
add
add
mov
jmp
in
test
loop
fs
ja
add
ret
add
push
insl
xor
out
and
ret
jmp
inc
add
imul
adc
loop
mov
jo
ss
push
add
jl
inc
jle
dec
cltd
push
lcall
xor
push
out
jmp
jl
lock
test
ljmp
loopne
pusha
add
scas
into
jp
pop
xchg
mov
mov
rcl
push
mov
adc
mov
push
in
mov
mov
push
mov
xor
test
bound
pop
push
rolb
fistl
xor
ss
aaa
mov
adc
out
xchg
lods
pop
add
mov
xchg
mov
int3
cmp
bswap
push
jge
xchg
push
push
dec
mov
idivb
in
jmp
jae
xchg
xchg
mov
int3
loop
mov
xor
fmulp
xor
repnz
lods
outsb
rorb
popf
fucom
lods
aaa
and
xor
mov
rorl
ljmp
ret
fmull
stos
ficompl
cmc
mov
adcl
push
lcall
loop
js
cltd
xchg
aaa
lcall
adc
mov
dec
add
jne
lods
add
dec
cli
lock
jecxz
lcall
pop
pop
add
mov
cmp
jbe
enter
rclb
inc
jle
inc
das
mov
icebp
in
push
mov
ret
push
pop
mov
les
rorb
adc
push
lock
fs
mov
push
fs
addr16
ret
adc
cmp
ret
lcall
mov
xlat
cmpb
cmpl
jno
movsb
push
push
mov
loopne
std
jns
lea
ljmp
jle
jmp
popl
xor
cmp
pop
mov
movq
cmp
push
ret
cmp
add
mov
add
sti
fs
jbe
sbb
push
ret
sbbl
push
cmp
shll
loop
pop
inc
ss
outsb
cli
ficoml
inc
cmp
mov
inc
and
sbb
aaa
or
cmpsl
and
mov
jno
inc
inc
adc
push
dec
add
xor
dec
fdivs
ss
fwait
fs
mov
sub
subb
xchg
cmp
lahf
out
jmp
mov
inc
int
xchg
aaa
mov
mov
and
rorb
popa
in
dec
sbb
and
jmp
jle
test
pop
push
mov
pop
jmp
daa
or
fadds
jo
or
fnstsw
inc
and
jnp
aam
adc
and
add
xor
ret
inc
pop
inc
mov
mov
add
pop
add
mov
test
fdivrl
mov
aaa
xchg
insb
dec
mov
mov
inc
mov
int
je
out
popf
xlat
xchg
cwtl
pop
mov
xchg
int3
xor
cmp
mov
in
in
or
push
cmp
push
aaa
imul
repnz
std
cmp
and
add
xor
fildll
and
fwait
mov
dec
mov
mov
aaa
sbb
add
mov
sub
sbb
jnp
int3
jno
out
mov
mov
mov
jb
or
je
mov
add
add
lret
mov
in
inc
bound
push
or
xchg
rclb
in
cmp
fmuls
arpl
outsl
jnp
xchg
mov
mov
mov
into
jns
sarb
cmp
lret
xor
andb
sub
ds
push
add
loop
sbb
inc
xor
inc
sub
and
mov
jecxz
mov
lcall
enter
mov
mov
bnd
test
pop
inc
pop
mov
aam
popf
xorl
inc
adc
jge
popa
xchg
xchg
jnp
pop
jle
inc
push
xchg
xchg
dec
mov
add
sbb
sbb
add
mov
stos
mov
or
daa
mov
std
pusha
mov
decb
mov
in
clc
repnz
pop
lods
pop
xchg
sbb
xor
mov
mov
sbb
adc
cwtl
stos
pop
jge
outsl
test
cmp
add
xor
test
cltd
adc
mov
xor
inc
adc
jbe
cld
and
int
int
push
je
int3
mov
cmpsb
cmpsb
push
cmpsl
call
sbb
push
inc
cmp
xor
or
jae
cmp
and
mov
loop
test
xor
add
jmp
shrl
cmp
inc
out
or
dec
testl
out
dec
pusha
aad
jecxz
pop
mov
mov
cmpsb
or
lret
inc
inc
and
stos
insl
xchg
push
int3
adc
pop
pop
in
or
rcr
shll
push
jmp
mov
sbb
frstor
out
xorl
sub
scas
repnz
sbb
push
test
pop
cmp
sub
mov
push
inc
cmc
stc
stc
sbb
mov
cmp
inc
jmp
add
inc
push
push
cwtl
lods
movsl
pop
pop
pop
jp
std
in
loope
ja
mov
imul
mov
outsl
loopne
sub
loopne
arpl
pop
mov
imul
rol
adc
cli
sbbb
pop
push
xchg
mov
adc
pop
das
add
pop
stc
lods
pop
add
sbb
pop
es
je
mov
mov
or
insb
int
inc
lods
test
mov
out
sbb
cld
in
or
shl
add
fs
rcrb
sbb
mov
jmp
pop
mov
lds
jb
shrb
mov
mov
scas
inc
test
jg
push
mov
sbb
inc
cli
push
jae
dec
sbb
adc
cld
insl
pop
mov
xchg
enter
mov
xor
pop
test
fiaddl
jbe
mov
jmp
sub
jbe
inc
movsl
pop
or
cli
cmpsl
aas
adc
rol
lods
push
in
movsb
pop
sbb
push
mov
or
ja
adc
push
data16
inc
sub
gs
dec
pusha
stos
mov
push
lods
xlat
std
shl
sarb
pushf
push
cmp
jae
dec
cli
pop
cld
leave
and
push
mov
pop
out
push
xor
add
mov
mov
ss
mov
shlb
or
lret
jmp
in
add
pop
mov
shll
adcl
mov
inc
mov
incl
out
popf
nopl
lock
cmp
sti
pop
ja
outsl
adc
pop
addb
inc
cmp
and
push
xor
adc
sbbb
push
and
mov
mov
jl
mov
rcrl
jo
pop
cmp
ja
notl
xor
cmpsb
repz
xor
jnp
or
mov
data16
shl
cld
movsb
js
cs
pop
sbb
xchg
iret
pop
cmp
ja
mov
je
pop
divl
push
add
or
xor
jle
fisubl
mov
test
lret
cmp
aas
imul
pop
sbb
pushl
mov
xor
xor
dec
negb
lcall
push
aaa
jb
fsts
xor
inc
mov
pop
add
mov
fmuls
jns
lret
insb
inc
pop
sahf
addr16
aaa
ret
ret
sbb
pop
sahf
bound
mov
loope
sti
rcll
mov
mov
in
add
or
push
js
mov
fsincos
in
mov
pushf
and
pop
shrl
lfs
dec
mov
shr
enter
fldt
inc
stos
pushl
mov
gs
add
sub
jb
mov
jae
xor
sub
or
pop
mov
bound
jne
fcoms
pop
icebp
jns
fisubrl
push
jns
sub
mov
cwtl
pop
inc
sub
pop
in
adc
dec
xor
lods
jb
stc
scas
cmp
push
lret
cmpsb
sub
in
inc
sti
imul
ret
loope
int3
bound
pop
add
orl
lock
shrb
out
adc
xchg
cmp
inc
lods
movsb
cmp
dec
fidivrs
push
loopne
rolb
xchg
adc
cmpsb
pop
inc
add
mov
pop
inc
mov
xchg
data16
sub
mov
faddl
pop
stc
ds
dec
stos
adc
xor
cwtl
mov
iret
in
adc
mov
shll
mov
add
sbb
adc
pop
call
add
push
cmp
inc
movsb
inc
test
pop
pop
insl
mov
out
mov
and
sahf
ljmp
ja
sarl
out
inc
mov
sti
jae
lcall
testl
movsb
mov
push
scas
jecxz
cmp
pop
ficoms
sti
and
je
enter
clc
cmpb
jo
popa
sbb
les
fsubs
lods
popf
xor
jbe
sub
adc
jge
hlt
je
data16
jge
mov
push
jmp
bound
and
std
push
movb
add
xchg
xlat
and
aad
js
aaa
xor
aas
push
push
out
xchg
push
in
movsb
sbb
sarl
repz
dec
cmpl
testl
adc
mov
push
mov
adc
jge
and
filds
add
fwait
dec
dec
js
leave
ret
mov
dec
loope
mov
push
fildll
or
add
push
lcall
adc
jo
pop
mov
inc
in
mov
sub
push
test
mov
aaa
adc
loop
and
mov
les
cmp
jbe
xor
jmp
scas
sub
dec
inc
cmpsb
cmp
or
cmp
aas
jno
jbe
xchg
mov
mov
inc
into
pop
push
pusha
cmp
mov
or
int3
adc
imul
sub
xchg
xchg
adc
iret
sub
pop
dec
and
gs
adc
pop
fdivr
aad
fimuls
mov
jecxz
inc
sbbb
call
lret
jb
or
in
fisttpl
sub
push
xor
ja
insl
orb
adc
xchg
mov
pusha
movsl
aaa
aad
and
and
lret
pop
mov
inc
lahf
jns
add
or
out
push
lods
mov
dec
imul
jnp
sub
shlb
add
cmpsb
sub
dec
mov
and
lret
xchg
sub
pop
pop
dec
movsl
fucompp
je
fs
stos
loop
je
int3
mov
es
sub
fwait
add
dec
xlat
cwtl
clc
jbe
push
inc
push
pop
push
dec
push
aad
in
jno
sbbb
test
addr16
mov
xor
add
lods
mov
je
sbb
fidivs
js
mov
pop
mov
bound
adc
dec
jle
push
or
jbe
loopne
hlt
test
mov
xchg
jmp
loopne
adc
ljmp
push
scas
aad
mov
fmuls
les
push
or
add
mov
and
push
shrl
into
xchg
adc
mov
push
je
aaa
and
movsl
adc
or
pop
rclb
xchg
or
sub
arpl
jo
imul
jp
lea
xlat
adc
bound
mov
mov
sbb
cmp
adc
call
push
dec
xchg
pop
jnp
xor
pop
cli
mov
lock
idiv
sarb
push
test
inc
cltd
and
push
into
test
adc
and
sbb
sub
xchg
aad
into
sbb
jle
js
stc
jnp
mov
add
jmp
sahf
xchg
std
mov
gs
inc
mov
addr16
add
mov
pop
aam
mov
adc
push
dec
loope
sub
mov
out
test
sub
cmp
adc
cmp
cmpsb
jmp
ljmp
mov
mov
xchg
push
mov
mov
in
stos
adc
and
sbb
mov
shlb
jp
push
push
add
jno
cmp
pop
or
mov
scas
jae
ret
insb
add
pop
in
rol
fcomip
and
fsubp
push
insb
mov
cmpb
das
sbb
mov
lods
mov
pusha
sbb
cmp
rorb
or
das
push
lcall
jnp
dec
cwtl
or
inc
or
cmp
or
jmp
xor
icebp
adc
int
sbb
mov
push
sbb
shl
sbb
push
xor
das
or
mov
xchg
inc
loop
outsb
das
pop
andb
cmp
mov
cs
sti
movsl
hlt
lods
cmp
add
cmp
test
punpckhdq
and
mov
sub
and
jns
rol
pop
add
adc
add
xlat
out
jne
xchg
call
cmp
int
cli
aas
or
adc
mov
das
cmp
repnz
sub
mov
sbb
add
push
jmp
jne
sbbb
inc
mov
rcll
aam
insl
cltd
xor
sbb
or
push
push
mov
push
and
pop
popf
lods
push
mov
or
loope
and
rcrl
and
movl
call
mov
adc
lahf
addr16
jg
sub
jb
inc
repz
xlat
add
adc
xchg
jge
dec
cwtl
mov
xor
xor
cmpsl
rcll
mov
mov
lods
jmp
mov
clc
testl
sbb
std
inc
push
cmc
and
subb
xchg
cmp
sub
ljmp
xor
arpl
arpl
cld
inc
mov
das
incl
sub
shl
in
jo
fdiv
aam
xchg
mov
cmp
mov
inc
jp
mov
gs
leave
std
ds
orb
shl
in
inc
mov
fsubrs
or
loopne
mov
jo
push
cmp
or
mov
add
xlat
jg
add
popa
fstpl
jae
push
mov
jb
sub
mov
in
lret
cld
xor
das
mov
fs
xchg
mov
jecxz
and
fstl
and
sbb
lahf
mov
mov
xchg
sbb
std
in
bound
xchg
pop
mov
sub
jge
loopne
aad
into
mov
clc
dec
jno
pop
scas
push
insb
into
pusha
cmp
popa
sbbl
mov
push
push
adc
fcoml
jge
jbe
or
jb
push
sbb
xchg
inc
andb
or
push
push
jecxz
jecxz
mov
sbb
jnp
mov
ficoml
shlb
les
dec
sub
xchg
cpuid
push
wrmsr
add
sbb
inc
dec
jmp
dec
ret
mov
das
loop
ljmp
ret
adc
xor
and
pop
test
add
dec
dec
mov
mov
mov
add
in
mov
or
dec
test
movsb
sub
or
push
push
xchg
pop
xchg
or
lcall
jbe
imul
cltd
sbb
sbb
sbbl
shrb
jbe
xlat
fidivrl
adc
and
cmp
sub
push
and
mov
test
bound
dec
leave
push
or
test
push
dec
popl
jmp
fucomp
scas
xor
mov
sbb
mov
mov
xchg
lds
and
xor
sub
outsl
imul
jge
icebp
fldenv
xchg
or
jecxz
iret
loop
push
fldt
xor
add
dec
insl
jb
jg
dec
std
push
repnz
mov
hlt
xchg
mov
std
das
jl
jbe
or
pushf
mov
xchg
cmp
fisubs
test
mov
push
pop
lds
icebp
and
cli
aaa
in
mov
mov
test
ss
add
cwtl
sbb
dec
or
inc
xlat
pop
xchg
add
cmp
ds
inc
mov
pusha
push
std
cmp
lods
fwait
popf
ret
xchg
add
shl
pop
sub
or
aas
adcl
pop
enter
push
xchg
dec
in
lock
adc
jle
push
sbb
mov
pop
leave
mov
pop
push
xor
popa
xchg
leave
or
outsb
mov
js
jmp
push
cli
push
fdivrs
enter
repz
cmp
test
jle
into
dec
in
loopne
ja
daa
xor
sbb
add
and
aas
loope
jmp
add
sti
mov
rcrl
lock
push
mov
push
xor
cli
pop
jmp
outsl
or
aaa
shll
mov
mov
pop
cld
test
mov
pop
mov
jle
aas
fdivrl
mov
mov
movsb
pop
push
addr16
jg
insb
mov
in
cmp
mov
ffree
inc
mov
outsl
xor
dec
dec
popa
repnz
push
movsb
mov
pop
loopne
jae
xchg
scas
sub
shrl
insb
lahf
lods
xchg
push
test
sbb
mov
mov
lahf
adc
lea
cli
data16
mov
js
test
and
mov
jae
fbstp
sub
adc
outsl
in
mov
mov
mov
pop
push
jo
pop
xlat
sbb
lods
imul
cltd
fisttps
ss
cmpsb
mov
push
cltd
sti
cltd
imul
scas
cwtl
xor
cld
jbe
sbb
scas
add
jmp
fwait
andb
xchg
das
push
push
xchg
mov
inc
test
pop
cli
aaa
jle
test
fsts
xchg
insb
mov
pop
mov
insl
sub
jne
cmp
in
jbe
add
enter
adc
rorl
mov
ljmp
rcll
jo
ds
mov
scas
push
push
push
cmpsb
add
sbb
cmp
ficoml
mov
cmp
clc
fwait
stc
adc
pushf
call
out
mov
push
jbe
shl
je
mov
popf
ficoms
jo
rcrb
xor
lret
pop
faddp
xchg
ds
sbb
inc
enter
movsl
lds
insl
add
sub
sbb
xor
outsb
cmc
push
dec
xchg
mov
jno
insl
adc
jl
adc
inc
and
lock
pop
lds
int3
jecxz
scas
shl
add
fdivl
xchg
roll
test
xor
testb
mov
sub
cmp
pusha
mov
ss
mov
xchg
and
or
add
sbb
arpl
pop
adcl
jae
mov
in
pop
pop
clc
dec
xchg
addb
imul
push
negb
jo
xor
adc
aaa
jb
lea
jae
push
popf
dec
movsb
movsb
sbb
rcrl
xchg
pop
imul
pop
aas
dec
dec
dec
ljmp
mov
jae
ja
xor
mov
cli
mov
mov
mov
int3
cltd
add
dec
mov
loop
or
jns
sti
mov
or
imul
xchg
mov
aad
mov
pusha
mov
fwait
icebp
iret
sbb
mov
mov
cld
jnp
shl
pop
lcall
xor
cld
xorl
jle
aad
and
jb
xchg
imul
ucomiss
cmpsb
dec
sub
addb
lods
or
push
jnp
sbb
pop
sub
sbb
dec
mov
repz
xor
push
pop
mov
mov
push
dec
idivb
cmc
ret
pop
fxam
imul
or
cmpps
cmp
sub
repnz
or
data16
jbe
in
pop
fnclex
hlt
in
jbe
nop
or
std
outsb
add
cld
add
repz
pop
mov
cmp
lock
dec
clc
cmpsb
sbb
cmp
imul
and
pop
xchg
push
xlat
push
push
movsb
inc
out
lds
mull
lock
stc
add
loop
loope
jge
leave
and
jmp
shrb
push
push
mov
arpl
fwait
lods
pop
movsl
scas
jae
outsl
aas
sbb
and
dec
jae
jbe
in
and
xchg
bound
jo
add
movsl
mov
test
ss
jae
outsb
fwait
xchg
jp
pop
mov
pop
faddl
in
in
dec
mov
or
das
lret
insl
xchg
sbbl
fisttpll
scas
cmpsl
out
mov
pop
insl
ficoml
pop
hlt
jge
xor
lret
ds
aad
loop
pop
sbb
fwait
scas
fdivrl
test
mov
loop
imull
sbb
test
jg
pop
mov
outsb
cmp
xchg
lods
xor
pop
data16
dec
ficoml
mov
inc
dec
popf
sbb
imul
fsubrl
xor
out
jecxz
sbb
mov
xor
inc
add
inc
lea
ja
int3
dec
and
adc
ret
lret
lret
xchg
add
incl
mov
subb
js
xchg
jge
scas
repnz
dec
mov
mov
dec
and
push
inc
jl
cld
rcll
dec
das
pop
imul
repnz
pop
push
add
add
adc
cmp
subb
xchg
adc
cltd
test
subl
add
hlt
push
adc
scas
xchg
adc
jl
cwtl
xor
sbb
insl
cld
data16
mov
push
aad
daa
add
imul
inc
inc
mov
mov
shlb
addl
movsl
rorb
fsts
mov
cli
stos
out
icebp
clc
jle
cmp
movl
mov
sub
cmp
popa
add
fnstenv
add
hlt
mov
mov
repnz
mov
push
mov
cmp
test
sbb
push
xor
xor
xlat
out
repz
mov
repnz
cmp
pop
lea
loopne
lods
test
mov
inc
xor
in
xor
inc
xor
dec
pop
lahf
inc
lea
adcb
cmc
es
js
ficoml
test
imul
ficoms
xor
iret
test
test
xor
int
mov
jne
adc
lds
movsl
movsb
or
iret
adc
fcos
mov
pop
lret
bound
sub
dec
sbb
mov
or
repnz
pop
and
sub
jecxz
idivb
mov
xchg
xor
fwait
sub
sar
aaa
mov
or
xchg
mov
bound
pop
push
ficoms
ds
mov
repnz
lcall
inc
int
repz
fisubl
imul
push
jae
cmc
jge
bound
xor
xchg
js
int
sarb
mov
jb
loop
xor
js
loope
inc
xchg
jmp
subl
cltd
in
clc
adcb
jb
int
xor
into
lds
cmp
lret
and
or
inc
mov
imul
out
dec
jbe
loop
jle
lea
dec
add
mov
dec
add
jns
test
pop
movsb
sub
or
fisubrl
je
push
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
add
fsubrl
jp
dec
mov
es
xchg
mov
jo
scas
clc
inc
scas
sbb
mov
lods
scas
push
mov
mov
testb
popa
hlt
cltd
insb
fs
xlat
aad
jmp
xchg
xchg
loop
imul
push
jns
or
int3
in
jmp
arpl
fildll
mov
orl
cs
and
or
ds
test
mov
lret
cmp
jle
fimull
bound
pop
dec
inc
test
cmc
xor
ret
insb
lds
movl
leave
or
xor
pop
hlt
aaa
cld
jge
add
insb
inc
test
sub
jno
push
cmc
mov
lods
es
fsubl
call
mov
xchg
jmp
icebp
insl
daa
push
push
mov
jecxz
xchg
rolb
xchg
pop
pop
aam
dec
jecxz
cs
inc
sub
lea
in
fcomps
repnz
xchg
mov
push
je
push
iret
lcall
in
mov
aaa
ret
icebp
je
mov
mov
sub
sbb
mov
gs
dec
cmpsl
test
sbb
shrb
lods
dec
mov
or
jns
rcrb
scas
in
xlat
adc
xor
mov
add
stos
push
add
add
add
pop
add
inc
xchg
iret
lods
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsb
add
insl
