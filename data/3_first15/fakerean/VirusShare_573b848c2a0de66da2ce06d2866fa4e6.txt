push
push
call
andl
push
push
call
pop
pop
movl
jmp
xor
inc
ret
mov
movl
xor
inc
call
ret
push
mov
push
push
push
push
xor
sub
mov
mov
mov
mov
and
jns
dec
or
inc
cmp
jne
cmpl
jle
mov
imul
lea
mov
xor
jmp
test
jne
cmp
jle
mov
xor
lea
mov
sub
mov
addl
and
rol
add
inc
cmpl
jb
pop
mov
xor
pop
inc
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
mov
cmp
jae
mov
add
mov
add
mov
mov
jmp
leave
ret
push
mov
sub
push
push
call
push
call
mov
cmpl
jge
push
call
mov
mov
push
push
call
cmp
jne
movl
jmp
mov
xor
mov
pushl
mov
mov
call
pop
cmp
je
lea
jmp
call
test
je
push
push
push
call
mov
mov
or
mov
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
cmpl
je
mov
mov
jmp
movl
mov
xor
divl
mov
push
mov
neg
sbb
and
push
pushl
call
mov
push
pushl
pushl
call
add
push
call
push
call
mov
mov
push
call
leave
ret
int3
int3
repz
jae
neg
jmp
push
push
push
push
push
xor
rcll
fwait
jge
test
testl
call
xchg
pop
push
punpckhdq
mov
inc
imul
stc
mov
in
pop
xchg
jnp
lock
mov
outsb
dec
cmpsb
stos
pop
jmp
jno
dec
int
test
movsl
push
cmp
mov
fisttpll
jmp
out
fldenv
sub
cs
aaa
jb
cli
adc
divb
pop
pusha
in
scas
scas
testb
mov
out
xorl
jne
push
sbb
lret
mov
aaa
cmp
imul
stos
mov
xor
push
jmp
loopne
insb
test
pop
mov
aam
cmpsb
or
jae
dec
std
sbb
lds
add
mov
push
ficomps
adc
sbb
xchg
test
out
or
xor
dec
mov
dec
ds
adc
dec
sub
push
cmp
lea
or
pop
pop
add
pushf
rclb
cmp
adc
cwtl
inc
or
mov
test
dec
pop
pop
lock
mov
push
xchg
sbb
pop
dec
fcomps
pushf
andl
pop
mov
dec
adc
test
sub
mov
scas
xor
ljmp
pop
cmp
cmp
xor
sub
jb
sub
fcoms
sbb
pop
aas
js
or
mov
sahf
or
gs
nop
lea
aas
xor
data16
gs
push
mov
stos
inc
fistpl
mov
pop
sarl
gs
jp
pushf
loope
mov
popf
mov
sbb
lds
mov
jg
lods
and
fildll
push
jp
mov
shrl
fisubrl
je
jnp
mov
notb
cmp
lods
push
adc
and
aas
cmc
push
jmp
test
push
sbb
dec
into
iret
and
cmp
jo
int3
scas
jmp
add
mov
mov
or
inc
xchg
sbb
jecxz
out
or
sub
mov
insb
mov
les
or
int3
cmp
jg
mov
lret
imul
inc
adc
icebp
popf
loope
adc
adc
mul
mov
mov
adc
push
cli
jle
sbb
outsb
sub
out
and
or
push
out
mov
lods
jle
sbb
cltd
or
cwtl
shlb
fldl
pop
out
repnz
aad
rclb
sub
sbb
or
scas
fstps
ret
fstpl
test
or
sub
sbb
gs
test
sub
mov
cmp
ljmp
push
insl
daa
insl
icebp
inc
iret
cmp
inc
cmpsb
orb
cwtl
mov
mov
sbb
popa
sbb
fiadds
shlb
out
sub
push
sbbl
mov
push
add
xor
jno
sbb
cmp
sbb
iret
add
or
adc
stos
jnp
mov
imul
leave
inc
pop
pusha
xchg
jmp
movntq
adc
xchg
jmp
xchg
jmp
inc
sbb
fadd
inc
jl
ffreep
xchg
jle
xchg
mov
insl
and
or
movsb
mov
jmp
bound
mov
jge
ret
xchg
outsb
addr16
lea
jle
mov
xorl
test
pmaxsw
loop
push
push
out
xchg
push
jl
jmp
xlat
dec
jns
inc
push
cmp
xor
xadd
nop
hlt
ret
mov
fadds
imulb
dec
jbe
mov
pop
les
ds
sbb
push
mov
vandpd
cltd
movsb
add
adc
jbe
jb
das
cltd
jecxz
adc
inc
dec
xor
mov
push
push
out
sar
jmp
pop
push
mov
outsl
inc
mov
outsb
cs
cwtl
mov
out
ret
das
xchg
lods
lret
mov
inc
bound
fneni(8087
adc
pop
mov
push
and
sarl
sbb
or
loopne
ret
pop
in
jb
mov
mov
dec
shrl
sti
inc
aad
pop
scas
pop
mov
mov
jmp
adcb
cwtl
pop
adc
loope
jge
int
inc
fwait
cmpsb
cmc
cvtps2pd
iret
or
mov
push
movsl
cmp
lods
xor
pop
push
cs
push
or
icebp
ror
jle
aaa
inc
and
mov
jne
sub
in
iret
arpl
test
imul
lcall
adc
movsl
daa
push
push
pop
lds
insl
fwait
mov
cmp
es
es
xor
cmpsb
out
pop
add
jbe
mov
lcall
or
cltd
outsl
jp
jp
jge
mov
orl
xchg
fcomps
mov
mov
adc
test
stos
sahf
movsl
dec
cmp
push
lahf
xchg
add
scas
ret
insb
aad
sub
test
int3
sti
insb
std
add
dec
push
add
mov
inc
fwait
mov
test
clc
dec
xchg
xorb
int3
data16
xchg
push
cld
pop
mov
fiaddl
inc
pop
int
push
lret
pop
xor
call
xchg
mov
cmpsb
stos
mov
jp
clc
std
and
fidivrs
pusha
aas
imul
adc
pop
ljmp
aas
pop
imul
and
jecxz
xor
rclb
xchg
dec
sub
pop
ljmp
jge
icebp
adc
push
and
mov
sbb
xchg
mov
cmp
sub
or
mov
jbe
push
je
test
mov
xchg
sbb
fisttpl
jb
out
das
jecxz
leave
xchg
in
sbb
rorl
ja
std
xchg
mov
jne
mov
add
lcall
mov
mov
jne
and
xchg
dec
lods
pop
sub
lret
icebp
mov
push
inc
cli
mov
aas
cltd
mov
xlat
roll
leave
into
scas
stos
or
mov
aad
cs
pop
push
or
push
icebp
xor
inc
fnstcw
mov
jne
sub
cmc
jnp
xchg
inc
push
test
test
sbb
stc
mov
fidivl
fs
mov
adc
ss
mov
fistpll
or
pop
fs
aaa
sbb
or
outsl
adc
push
cmp
jle
add
mov
add
bound
pop
jae
jecxz
sbbl
stos
fisubl
int
push
inc
leave
out
fists
sbb
adc
or
test
insl
sbb
stos
sub
mov
test
es
ds
xor
pop
shlb
ljmp
mov
cmpsl
cmp
adc
and
and
dec
ljmp
xor
lret
inc
xlat
jmp
or
xor
adc
shl
lea
sub
hlt
bnd
push
lods
fimuls
jp
pop
loop,pt
jbe
subl
fcoms
fadds
ja
ret
lea
pop
outsl
shll
into
lcall
subl
add
inc
cmp
lods
negl
cwtl
xor
lods
rolb
dec
xor
shlb
mov
lcall
push
cwtl
push
lock
nop
and
sub
in
das
or
inc
adc
scas
xchg
push
inc
xchg
loopne
dec
inc
test
nop
clc
sub
push
sub
cmp
dec
lahf
cmp
subb
mov
inc
jecxz
mov
andl
lea
js
aad
test
and
aaa
push
dec
das
clc
lea
push
shlb
test
or
ret
ljmp
xor
insl
xor
xchg
movsb
notl
mov
xchg
dec
cli
ret
inc
mov
das
inc
cmp
xchg
insl
xchg
aad
sub
gs
and
fsubrl
pop
mov
mov
das
shlb
std
and
sbb
push
movsb
mov
add
iret
stos
mov
cmc
and
mov
aad
mov
gs
pop
sub
dec
sub
stos
call
out
add
bound
cmc
fsubr
gs
fwait
push
in
fadd
cmpsb
pop
jno
sub
adc
sti
sub
xchg
inc
int
std
popa
bound
push
mov
lods
xlat
jle
pusha
mov
xchg
add
pop
dec
xchg
fwait
or
std
and
mov
push
test
xor
out
adc
xor
pop
xor
mov
pop
ljmp
fwait
mov
mov
mov
adc
sub
lds
pop
add
iret
sub
add
addl
int
jecxz
add
inc
fstpl
and
xor
pop
les
sub
mov
adc
in
aam
inc
into
sub
cli
push
test
jle
push
scas
or
adc
out
pop
pop
and
lods
mov
and
sub
jl
jnp
pusha
mov
push
in
xchg
test
not
mov
lret
clc
movsb
add
fisttpll
mov
fisubl
inc
int
mov
mov
or
jno
enter
mov
pop
mov
push
adc
mov
loope
ficoms
int
adc
into
pop
ss
stos
repz
push
dec
sbb
sub
pusha
loopne
orl
push
out
imul
scas
cmpsb
push
dec
inc
push
mov
and
jnp
add
ja
in
push
loopne
mov
pop
cmpsl
sub
jecxz
lock
push
out
xor
bound
mulb
in
xlat
pop
negl
xor
xor
mov
pop
sbb
or
outsl
enter
shlb
push
cmp
xor
sub
sahf
cltd
jecxz
dec
ja
int3
jne
inc
inc
mov
sub
adcl
sbbl
stc
cmpsl
sbb
or
std
icebp
int3
aad
pop
and
push
adc
mov
mov
hlt
xor
in
fiaddl
and
pop
push
repnz
cmc
or
jnp
sbb
test
mov
mov
fimull
push
push
push
lea
into
mov
cli
addr16
sarb
lds
outsb
imul
gs
loopne
pop
mov
aad
or
xchg
push
movsb
lock
dec
xlat
les
dec
xchg
daa
ds
ret
out
pop
orb
leave
or
test
outsb
std
mov
int
inc
mov
sti
les
add
lcall
sub
mov
cmpb
imul
repz
push
leave
pop
and
sahf
jb
mov
pusha
lods
push
push
loope
cmp
int3
fisubl
mov
or
enter
stos
xor
fdivrs
mov
adc
cmp
lods
sub
cmpsb
jnp
jl
fists
pop
inc
in
xor
xchg
sbb
scas
push
xor
in
xor
push
enter
or
jns
jmp
mov
popf
nop
insl
cmc
mov
bound
pminub
scas
push
pop
xor
mov
mov
mov
jbe
stos
mov
pop
pop
add
jmp
cmpsb
adc
cmp
nop
ja
jge
mov
outsb
dec
dec
mov
add
inc
inc
push
add
dec
jne
outsl
adc
mov
adc
pop
xchg
push
ds
sahf
sub
stc
dec
push
push
inc
cmp
stos
mov
mov
aaa
cs
sub
xor
mov
dec
cltd
sbb
mov
jbe
fs
mov
int3
mov
push
call
fsubr
pop
scas
lahf
test
and
mov
push
cmp
les
jecxz
scas
cmpsb
pop
xor
lods
sbb
pop
dec
dec
mov
test
ss
jno
les
mul
push
cmpsl
in
inc
rolb
jl
sub
adc
movsb
fcmovbe
int3
je
in
mov
mov
fidivs
push
mov
sub
cmc
xchg
ret
out
cmc
adc
xchg
mov
sahf
stos
rol
push
ds
or
lcall
inc
cwtl
icebp
inc
js
and
js
dec
test
sbb
dec
test
ficoms
in
iret
mov
mov
ljmp
mov
add
add
cmp
mov
xor
popa
xchg
test
sub
dec
lock
lret
xchg
leave
jg
les
mov
rcll
inc
clc
hlt
xor
mov
adc
mov
insb
andl
adc
mov
cmp
jbe
pop
lock
in
and
sub
add
lret
sbb
cmp
test
sahf
inc
jecxz
out
and
jae
push
xorl
xor
movsl
stc
push
pop
lds
cmpsl
or
cmpsb
scas
adc
into
jnp
test
xor
cwtl
mov
jg
sub
jnp
jl
sbb
mov
aam
pop
jno
dec
mov
iret
popa
fwait
jb
mov
and
int3
stos
jge
adc
xor
movsl
aaa
fldenv
xchg
mov
lds
hlt
sbb
dec
lods
std
mov
mov
pop
fucomip
scas
orb
enter
pop
or
je
mov
mov
aad
enter
mov
nop
or
pushl
bt
cvtpi2ps
test
fistps
ss
and
sti
pushf
mov
aas
cmp
cmp
push
pop
jnp
inc
scas
dec
in
ja
xor
jle
pcmpgtb
shrb
mov
cmp
inc
inc
dec
das
mov
imul
pop
in
loopne
cmp
cmp
inc
push
sbb
mov
icebp
push
cmc
fdivrl
enter
hlt
pusha
mov
dec
or
sub
popa
inc
daa
es
cmp
nop
lods
mov
and
hlt
xchg
aam
lcall
or
inc
shll
filds
mov
adc
rorb
jmp
ljmp
mov
or
loop
push
ds
repnz
mov
sub
loop
jecxz
pop
add
hlt
jecxz
pop
scas
into
mov
fiaddl
shll
pop
in
or
push
or
and
repz
cli
movsb
or
sub
pushf
sub
inc
frstor
xchg
push
sti
cmp
lea
xchg
negb
jecxz
les
push
jmp
int
movl
jno
fcoml
addr16
in
insl
mov
push
dec
or
mov
cmpsb
mov
das
lret
sbb
add
mov
inc
mov
fildl
or
insb
inc
cwtl
lret
xchg
add
ds
inc
add
sahf
int
sub
es
mov
out
push
pop
add
inc
iret
pusha
dec
insb
aaa
mov
mov
cmp
sbb
add
test
pop
jl
pop
scas
pop
xchg
divl
fstp
lret
jmp
cwtl
xor
ret
xor
loop
mov
lods
mov
scas
std
push
jp
jl
out
and
jnp
pop
popa
ficomps
pop
sub
xor
xor
arpl
pop
sub
cld
or
lcall
cwtl
dec
shll
xchg
dec
std
inc
mov
xor
loope
lret
mov
jbe
mov
cmp
sbb
and
insl
ljmp
or
movsl
cltd
sarb
enter
cmp
dec
mov
rcrb
xchg
jbe
sbb
mov
iret
mov
adc
jge
fimuls
mov
mov
fbstp
test
sub
pop
xorb
clc
sarb
scas
push
cmp
jae
rcl
pop
jnp
aad
lock
mov
sahf
bound
adc
mov
or
adc
mov
jae
xchg
inc
inc
jne
arpl
fwait
insb
outsb
movsl
and
fwait
mov
and
push
jne
inc
pop
cmpsb
dec
setbe
and
inc
bound
push
cmp
add
or
mov
dec
lock
or
lahf
mov
out
sahf
adcl
mulb
addr16
shlb
xchg
mov
subl
repnz
roll
add
leave
sub
jl
and
les
add
addr16
sub
test
inc
addl
xor
repz
loop
sub
inc
clc
inc
xchg
mov
pop
cmpsb
es
xlat
jo
dec
scas
mov
push
and
es
sub
ret
jp
adc
mov
negb
dec
adcb
loope
sbb
movsb
mov
inc
sbb
outsl
xchg
cmp
cmpsl
xlat
sti
sahf
xchg
cmp
sbb
mov
lret
push
les
inc
xor
loope
push
in
dec
stos
mov
repz
mov
xor
mov
stos
popa
xchg
xor
outsl
sub
cmovnp
lods
adc
mov
push
adc
mov
movsb
or
and
mov
ds
dec
add
dec
mov
and
stos
mov
mov
lahf
rcll
xchg
loopne
addr16
add
mov
pushf
sbb
add
mov
mov
out
mov
or
xor
inc
xchg
lret
mov
mov
xchg
adc
bound
shlb
aas
inc
std
inc
inc
sahf
insb
push
stos
cmp
dec
fistps
aam
add
clc
lods
loop
les
aam
xor
enter
inc
jbe
outsl
jae
or
loop
add
adc
and
jle
imul
mov
adc
in
jecxz
and
or
popa
std
into
pop
sub
pop
lret
jnp
ja
fistl
sbb
pop
cmp
inc
lcall
shlb
imul
push
xor
jecxz
push
imul
orl
mov
add
pop
mov
or
insl
jnp
test
cmpsl
dec
or
stc
or
out
decl
pop
mov
out
iret
lcall
stos
push
mov
add
es
and
dec
xchg
add
cmp
ret
pop
loop
repnz
sbb
push
or
mov
outsl
push
sbb
cwtl
scas
stos
sub
mov
jg
repz
mov
fidivrs
in
sbb
aaa
shrb
orl
imul
xor
xchg
adc
push
inc
mov
fnstsw
or
aad
mov
inc
fsubs
rcrb
inc
outsl
enter
es
mov
insl
push
mov
push
pop
xor
inc
fisubs
mov
and
sub
stc
rcrb
xor
adc
push
mov
lahf
pop
out
nop
sub
sbb
inc
mov
ficompl
jl
shlb
insb
pop
mov
data16
and
dec
data16
lods
jne
adc
int3
mov
adc
fstpl
pop
loopne
xchg
or
mov
test
data16
cmpsl
lods
adc
arpl
in
jmp
mov
aaa
inc
push
aam
ret
lods
adc
pop
mov
mov
pop
aaa
fdivrl
jne
les
fs
mov
stc
cltd
jl
das
cli
or
mov
cwtl
outsb
fstl
in
rcrl
pusha
dec
mov
add
xor
add
xchg
add
into
jl
hlt
adc
pop
or
push
sbb
dec
xchg
testb
popa
loopne
push
push
pop
and
dec
ret
loope
movsl
js
in
int
fisttpll
jne
es
cmp
lds
push
sub
inc
adcl
loope,pn
ljmp
add
mov
bound
mov
mov
inc
flds
movsb
sub
test
pop
call
mov
push
repz
clc
movsl
jns
lods
fs
xchg
sahf
dec
divb
cwtl
inc
out
fldenv
cld
cmp
test
mov
pop
push
icebp
or
jle
and
xor
sbb
jl
xor
mov
xchg
xchg
fld
in
jb
jp
sbb
jae
cmovnp
pusha
inc
and
mov
inc
pop
idiv
dec
mov
mov
push
lods
sub
sbb
dec
lods
fucomip
add
jbe
jo
lret
cmp
pop
cmp
lods
fcomps
pop
and
addr16
scas
lea
jbe
pop
dec
mov
movsl
push
fsts
stos
rcrl
pop
inc
xchg
sbb
push
shlb
push
dec
pop
mov
jmp
cmpb
mov
adc
lods
inc
mulb
pusha
mov
xchg
into
repz
aad
adc
es
add
and
sar
xor
jp
loop
dec
and
or
insl
add
scas
mov
ficoml
mov
test
add
mov
leave
mov
pop
cmp
fcoml
sbb
scas
xchg
loopne
or
pop
inc
fwait
in
clc
test
mulb
fadds
fldcw
popa
inc
nop
cmp
lock
and
and
adc
neg
loope
pusha
pop
pop
cmp
and
popf
pop
sbb
xor
lahf
dec
iret
jg
mov
and
push
lahf
mov
out
cs
pop
int
and
cmp
je
inc
iret
pop
fadds
sub
or
add
xchg
mov
xor
mov
lock
enter
mov
rclb
cld
lock
push
xorb
xchg
loop
pop
dec
mov
jns
pop
jmp
ja
mov
push
std
pop
xchg
enter
push
dec
out
adc
jo
icebp
cs
mov
xchg
and
mov
loop
mov
cmc
nop
inc
pop
lds
andb
cld
sbb
imul
push
insb
insl
imulb
mov
and
out
es
sarl
inc
sub
and
ja
cwtl
je
testb
icebp
fmulp
cmp
lcall
mov
and
mov
sub
fidivl
pop
xlat
das
arpl
cwtl
mov
aas
repnz
mov
lock
mov
addr16
ret
lods
mov
addl
lock
mov
mov
xchg
fcmovb
jne
mov
jmp
sti
xchg
dec
rclb
fwait
ja
data16
mov
push
inc
movsl
dec
scas
or
int3
mov
mov
lock
sub
scas
mov
mov
fwait
stos
xor
push
mov
popa
aaa
jmp
movsl
pop
cld
loopne
add
in
aaa
andb
cmp
mov
inc
adc
jb
ss
out
xchg
cmpsl
mov
inc
mov
pusha
jne
adc
test
ss
pop
popf
rcl
je
mov
fsubs
and
push
int3
scas
loope
sub
xchg
pop
push
mov
adc
xchg
dec
dec
fs
arpl
adc
pop
mov
push
dec
sarl
or
sbb
sub
or
pop
sbb
jp
aad
loope
lret
fmull
leave
and
mov
clc
adc
mov
pop
idivl
mov
cmp
or
push
sbb
int3
jbe
loop
pop
stos
ljmp
rcll
pop
mov
pop
mov
fidivrl
mov
jne
fs
test
daa
fcmovbe
stos
pop
xor
or
xchg
ret
sbb
xor
pop
mov
int
push
out
push
ret
imul
or
inc
ja
and
xchg
movsl
not
jg
addb
lret
pop
pop
dec
mov
pop
test
jle
cmpl
sub
or
xor
ja
xchg
rcrl
fs
cmpsb
mov
or
int3
sub
cmp
clc
dec
mov
sub
jb
ss
fsubl
push
cmp
aas
repnz
lret
mov
mov
mov
cmp
addr16
cmp
mov
xchg
jl
xor
arpl
stos
dec
pop
pop
mov
mov
test
shl
aas
int3
and
fidivrs
repnz
mov
inc
and
addr16
repz
mov
xchg
sbb
mov
shr
push
lahf
aad
rcll
adc
lret
cwtl
lret
mov
cmp
push
adc
ud2
mov
fcoms
add
daa
xchg
jp
mov
pop
fs
pop
mov
movsl
sub
push
pop
fwait
test
jle
jg
out
and
lcall
mov
and
inc
dec
loopne
mov
jg,pt
sub
jne
sahf
jne
sbb
adc
adc
cli
into
inc
mov
push
push
aas
movsb
inc
sbbl
ljmp
xchg
in
push
xchg
out
dec
pop
into
fisubrs
rcr
insl
cmp
fsubrs
xorl
adc
loope
or
inc
add
cmp
push
push
xchg
cmp
paddq
nop
sarb
xchg
cmp
std
and
cli
adc
and
cmp
mov
repnz
inc
and
notb
dec
xchg
int3
testl
pop
mov
pop
inc
sub
imul
call
lcall
push
mov
mov
hlt
inc
inc
ret
cmc
push
adc
dec
arpl
sub
or
mov
sti
and
inc
cmc
sub
fsubp
fs
add
and
sahf
and
inc
mov
and
insl
and
mov
mov
jle
mov
es
inc
push
jns
pop
xchg
dec
inc
sbb
in
or
jns
mov
jae
shrl
adc
fwait
xchg
push
dec
mov
mov
xchg
or
ficoml
cmpl
in
cwtl
sti
mov
inc
inc
andb
push
pop
jo
dec
add
jne
mov
test
out
xor
sti
or
scas
push
or
adc
jnp
dec
icebp
push
xor
mov
add
pop
and
call
les
je
fcmovne
rolb
push
add
cli
aad
das
push
mov
or
pop
lods
repnz
xor
test
cmp
bound
or
dec
dec
dec
jns
and
jb
pop
xchg
mov
pop
inc
mov
push
stc
mov
or
and
fldl
bound
inc
ret
std
fisubs
das
sbb
adcl
mov
mov
fisttpll
popf
add
dec
ret
xor
cli
push
arpl
popf
cmp
lcall
adc
bnd
mov
xchg
and
aad
mov
inc
fists
mov
cmp
inc
mov
loope
fadd
mov
ret
cmp
jl
andb
lret
pop
idivl
pop
jbe
cld
dec
push
cwtl
adc
ret
jmp
loope
cld
and
xchg
xor
jns
pop
xchg
dec
rcrl
es
cmp
in
xor
test
jnp
call
mov
ss
popa
xor
add
dec
fnstenv
jmp
jecxz
iret
jge
dec
mov
int
daa
popl
nop
test
sub
out
xor
mov
or
gs
lock
ljmp
mov
mov
mov
dec
loopne
adc
stc
hlt
cli
inc
stc
clc
cmp
scas
addr16
out
push
fsincos
add
adc
and
mov
mov
loope
gs
mov
enter
pop
negb
push
jmp
push
ret
or
repz
lret
sahf
cmp
fcompl
inc
jp
sahf
fisubrl
dec
add
xor
and
imul
fildl
mov
lret
xchg
in
pusha
stc
and
cli
jp
push
rorb
mov
fcoml
mov
sub
popa
gs
add
mov
in
mov
dec
jg
lock
and
adc
neg
cmp
pop
das
lret
sahf
cmp
mov
and
dec
ja
add
inc
jae
xor
pop
mov
imul
dec
ret
cmovs
pop
xchg
push
cltd
lock
inc
cmp
ja
imul
cli
dec
dec
jp
cwtl
lds
psadbw
test
xlat
or
dec
movsb
cmpsb
divl
mov
aam
lods
ret
sbb
jg
inc
arpl
mov
mov
bound
push
stc
inc
icebp
out
js
pop
fcmovnu
loopne
push
push
insb
cld
add
repnz
pop
fs
xchg
daa
jae
mov
and
into
mov
adc
mull
adc
fsub
mov
pop
add
pop
mov
xchg
xchg
xchg
ret
pop
sbb
mov
cltd
ljmp
inc
push
pop
dec
cli
push
xchg
shlb
mov
scas
fcmovbe
mov
scas
mov
push
and
cmp
fdivs
jle
cli
mov
dec
leave
add
xor
add
movsb
lock
out
sub
mov
ret
adc
mov
push
or
mov
lcall
cmpsb
stos
scas
insl
mov
mov
out
jae
or
lock
cmp
jle
jmp
dec
mulb
xcrypt-ecb
cmpsl
dec
pop
inc
scas
cmc
pop
cld
std
add
mov
mov
popa
daa
sbb
mov
dec
lcall
movsb
xor
xor
sub
hlt
cwtl
pop
jp
xchg
or
outsb
test
lods
scas
psubsw
aad
adc
popa
rcr
mov
jmp
cmpsl
xchg
sbb
fsubr
pop
fwait
adc
dec
cld
push
dec
out
decb
and
mov
nop
stos
inc
push
mov
fiadds
in
pop
enter
loop
pop
ret
sub
out
pop
mov
cmp
sub
mov
cmp
std
popa
sub
adc
into
std
aam
and
pop
into
jbe
pop
xchg
push
cmp
in
or
in
cli
adc
lahf
mov
mov
inc
rcrb
in
or
cli
cmpl
sub
addb
repnz
jmp
push
loop
dec
call
mov
cmc
sbb
fldl2t
adc
mov
inc
iret
cmpsl
sub
push
sbb
pop
xchg
sub
scas
pop
flds
sti
lcall
stos
dec
adc
pop
fldt
repnz
inc
insl
subl
out
aas
adc
and
cmp
xchg
sbb
xchg
jl
in
lea
add
test
popa
inc
xchg
and
test
sub
cmp
cmp
jae
out
pop
adc
lcall
out
ja
mov
inc
xor
inc
pop
mov
push
jnp
push
add
fsubrs
mov
cmpsb
jae
xchg
popf
mov
int3
je
sub
js
or
push
cmp
mov
fisubl
xchg
loope
dec
fdivl
add
aad
pop
test
je
jg
jl
iret
punpckhwd
and
aas
jecxz
xlat
imul
push
ja
movsl
mov
test
sbb
push
cltd
adc
repnz
add
fisttpll
lret
and
mov
fnstcw
cmp
lock
xchg
dec
idivl
mov
push
into
and
sbb
pop
mov
mov
cltd
psrld
sti
ljmp
mov
push
aas
movsl
out
lds
pop
aam
stos
add
jnp
adc
cmp
cwtl
xchg
sub
ror
and
push
pop
js
push
mov
andb
int
fcoms
sub
cmp
mov
iret
pop
sti
fcmovb
pop
pop
call
aas
addr16
pop
push
mov
in
pusha
loope
mov
addb
pop
xor
rcll
mov
sbb
cwtl
sti
jns
adc
mov
mov
adc
jb
sbb
pop
xchg
xchg
or
adc
pop
scas
les
cli
sbb
mov
mulb
xor
cmp
ljmp
push
adc
mov
inc
imul
insb
test
jbe
mov
popl
lods
fsubrl
pop
or
ss
sub
jae
bound
ljmp
bound
repnz
adc
cmc
popf
lock
pop
jae
mov
or
push
sarb
push
sahf
fldt
mov
andl
jno
xchg
scas
jae
in
data16
mov
rol
fdivl
test
sub
or
pusha
inc
cmc
ret
bound
ss
or
cli
cmp
push
loop
cli
pushf
mov
jp
fcom
addr16
dec
mov
dec
pop
sahf
inc
xchg
fists
rcrb
jmp
int3
xorl
fdivrs
push
cmpsb
into
xlat
in
push
std
mov
aaa
testb
xor
das
jp
out
aad
aam
pop
cltd
mov
fdivs
mov
push
arpl
add
push
aad
data16
vmwrite
mov
aas
sub
cs
popf
fs
adc
aas
mov
adc
ret
jbe
rol
inc
outsl
adc
out
add
or
mov
push
hlt
cld
cmc
sbb
sub
sub
inc
mov
pop
inc
pop
arpl
ds
cmpsl
pop
mov
loop
das
hlt
lahf
mov
and
inc
sbb
lds
adc
and
sub
xor
push
xchg
popf
mov
dec
mov
mov
nop
sbb
add
loope
push
mov
xchg
jle
loopne
aas
dec
sub
push
std
stos
cld
fists
jmp
and
pop
pop
loop
lret
imul
in
cmp
arpl
nop
ret
rcl
jl
adc
arpl
or
ret
push
test
mov
loopne
dec
call
std
pop
ljmp
popf
jo
je
jge
int3
out
mov
mov
xlat
lea
fsubs
not
frstor
scas
and
repz
or
inc
cmpsb
mov
fst
lea
xchg
lods
lods
loopne
nop
xchg
cmp
faddl
cmc
jle
scas
jne
iret
lock
push
sahf
adc
loopne
sub
dec
call
movsb
xchg
add
mov
sti
pop
outsb
dec
popa
repz
xchg
frstor
pop
inc
push
loopne
scas
ja
xchg
sub
sbb
pop
mov
jge
mov
dec
jns
data16
lds
mov
mov
sbb
adc
cmp
sbb
dec
jo
in
cwtl
je
sahf
sbb
mov
adc
sub
mov
xor
mov
pop
repz
pop
cmc
mov
pop
dec
add
inc
out
and
ret
adcl
push
out
pop
add
lret
incl
push
xor
push
mov
fcom
dec
push
mov
pushf
sbb
lods
loopne
imul
das
mov
mov
bound
pusha
cltd
pop
shl
xor
test
iret
inc
adc
pushf
push
das
push
in
sarb
sti
data16
out
mov
pushf
bound
push
ret
pop
inc
orb
sbb
lcall
test
inc
xchg
ljmp
fwait
mov
xchg
jle
jecxz
and
call
adc
xchg
andl
mov
clc
jecxz
cmpsb
ret
out
fcompl
mov
dec
push
popf
andl
fwait
or
shlb
ret
or
xor
pop
pop
cmpsb
pushf
jns
lods
mov
ja
push
pop
mov
lret
lahf
cli
add
adc
inc
mov
inc
fsubr
sar
cld
fbld
js
or
cld
shl
enter
call
sub
into
jmp
out
ret
add
ret
hlt
mov
pop
add
jle
xchg
push
push
sysexit
mov
sbb
cmp
mov
add
repnz
test
push
inc
and
insb
inc
inc
ret
and
not
and
es
lret
cmp
add
je
push
ror
cmpsb
inc
or
lcall
cmpsl
lods
sbbb
shrl
es
lcall
push
adc
cmp
pop
into
popf
mov
into
loope
cmp
shr
inc
daa
fdivrs
icebp
and
dec
mov
mov
mov
sub
fwait
jle
test
jnp
mov
shlb
repz
mov
mov
scas
sbb
sub
sbb
lahf
dec
mov
push
mov
xchg
imul
repnz
jle
dec
pop
shrb
sarl
dec
add
out
and
add
mov
sbb
mov
push
mov
sbb
scas
orl
push
sti
cmp
sahf
out
test
lds
adc
cmp
inc
jno
es
inc
sahf
dec
aaa
cld
adc
and
push
mov
mov
mov
mov
js
sar
into
xor
jbe
pop
inc
fidivrs
xchg
sbb
sub
add
test
shl
cmp
xor
push
cld
data16
or
loope
and
adc
repz
add
sbbl
lods
cwtl
add
add
xchg
pop
adc
lret
iret
jbe
sar
mov
sbbb
lcall
stc
xor
fidivs
fstpt
scas
xchg
pop
fmuls
in
int
pop
mov
mov
jae
mov
mov
pop
dec
mov
jae
sbb
fstpl
sbb
sub
out
nop
push
xlat
jbe
and
andl
into
test
stos
sub
pop
mov
or
pusha
xor
mov
xor
mov
lcall
cwtl
inc
pop
nop
scas
cmp
jo
int3
sbb
ljmp
jnp
rolb
es
xchg
dec
scas
scas
dec
jb
lds
test
clc
or
bnd
out
xor
cmp
sbb
inc
push
jb
or
xor
je
cmp
cwtl
xchg
mov
bound
ja
adc
push
leave
mov
push
xlat
out
ss
iret
lds
sbb
adc
aaa
lret
pop
test
mov
repz
push
lea
cmp
popf
add
ljmp
sbb
pop
adc
or
jge,pt
dec
xchg
xchg
inc
sti
into
mov
xor
xchg
fistpll
enter
inc
adc
ret
clc
test
mov
and
test
push
lret
dec
pusha
xchg
into
pushf
loope
push
ljmp
daa
adc
rol
adc
sbb
jge
mov
sbb
add
xchg
sbb
sbb
push
add
in
adc
popa
jne
sahf
fs
push
cltd
sub
push
dec
aaa
xchg
lock
aad
sub
cld
lds
lds
hlt
hlt
movsb
stos
fnsave
cld
lret
inc
pop
inc
xor
jg
push
filds
jae
test
add
jp
add
sbb
xor
xchg
xchg
outsl
outsb
jl
into
and
stos
xchg
cmpsb
addr16
gs
cmpl
daa
insl
imul
jp
test
push
ds
inc
push
aaa
xchg
imul
jl
push
xchg
out
in
pop
in
cmp
lea
mov
aas
out
test
in
loope
mov
fsubrs
push
mov
mov
push
push
insb
enter
jne
int
push
in
ds
daa
xchg
pop
push
cmp
push
add
in
add
pop
les
push
lcall
jmp
cmpsl
repz
cmp
sub
clc
movsl
push
lods
mov
push
std
out
popf
or
inc
jno
ret
testl
mov
fwait
and
dec
jb
sbb
xor
addr16
dec
inc
mov
pop
xor
mov
aam
cs
cmp
push
pushf
cltd
push
sbb
js
mul
lahf
or
mov
jge
push
insl
rcrb
xor
xor
jmp
outsb
push
mov
into
add
dec
add
jmp
lock
pushl
repz
aaa
jno
aad
insb
jecxz
lods
inc
xchg
inc
pop
pop
pop
pop
inc
add
rclb
mov
shrb
dec
pop
sarl
jg
jg
scas
jmp
popa
xchg
mov
pop
int3
xchg
mov
cmc
aad
push
arpl
test
xchg
lock
gs
mov
sti
sbb
mov
loopne
inc
cmc
pop
mov
xchg
dec
sbb
and
gs
sub
mov
jecxz
adc
mov
mov
shl
hlt
mov
cwtl
mov
ljmp
jmp
and
xchg
js
adc
daa
or
out
or
test
add
adc
jbe
call
iret
xor
mov
loope
pop
jl
jns
mov
test
xor
cmp
xor
shll
movsl
xor
aas
pop
movl
pop
int
mov
adc
mov
jnp
sub
adc
fimull
sbb
lods
jb
mov
imul
xchg
sub
sbb
out
sub
movsb
out
sbb
test
sub
xor
mov
clc
lcall
jnp
fsubs
mov
add
push
clc
mov
cmpsl
nop
push
out
xchg
mov
inc
push
mov
push
repz
mov
call
jno
add
cld
nop
add
imul
stc
push
sahf
das
imul
adc
gs
and
pop
rcl
clc
add
inc
inc
mov
push
inc
mov
fildll
js
mov
dec
add
sahf
pop
fbld
pop
sbb
pop
nop
dec
add
pusha
mov
add
popa
jg
cmp
scas
mov
stc
push
nop
enter
out
xlat
data16
pop
dec
inc
pop
mov
lret
orb
sub
mov
outsb
push
mov
in
ljmp
sub
int
and
xor
pop
adc
sahf
imul
push
aad
stc
and
jmp
repnz
pop
mov
js
sbb
inc
jnp
sbb
cmc
jmp
add
mov
aas
mov
loopne
hlt
arpl
test
dec
inc
fcomps
inc
aaa
in
sub
shl
loop
out
stc
clc
dec
sbb
out
hlt
pop
mov
bound
paddsb
test
pop
movsb
mov
shll
into
push
dec
imul
dec
scas
inc
mov
shll
lods
and
push
adc
cld
aaa
fucomp
pop
jno
rcrb
sbb
jo
and
nop
mov
les
fsubl
test
into
cmp
fucomp
incb
mov
cli
in
mov
cmpsb
inc
in
pop
jno
outsl
push
lcall
movb
movsb
icebp
pusha
loop
aaa
xchg
cld
jle
xchg
jmp
jo
sub
and
jne
jno
loope
mov
cltd
fsubl
xchg
test
ret
or
orl
and
xor
loopne
lds
push
movl
xor
pop
xor
std
mov
lcall
jae
xor
xchg
jecxz
jecxz
roll
cmp
jge
jge
adc
js
leave
push
mov
cltd
cmp
inc
call
gs
fbstp
in
mov
in
inc
dec
das
pop
xlat
xchg
mov
arpl
mov
xchg
mov
sbb
sub
insl
xchg
lret
fbld
adc
or
add
rorb
add
loop
ficoms
lahf
xchg
mov
cmp
lcall
lahf
and
pushf
mov
daa
sahf
lret
xchg
int3
or
loopne
repnz
mov
xor
int
arpl
arpl
inc
push
adc
inc
dec
xor
add
fiadds
addr16
xor
lea
xor
pushf
in
outsl
cmpsb
mov
inc
xchg
xchg
pusha
outsb
fisubrs
push
add
adc
sub
dec
pop
cmpsb
sbb
push
dec
sbb
lods
fcomp
out
adc
or
xor
and
jmp
imul
sbb
andl
mov
shrb
or
jno
adc
sti
push
das
jb
adc
ds
cld
pushf
jns
pop
shrb
add
fcompl
jecxz
out
xor
push
fisttpll
jmp
adc
mov
and
push
repz
idiv
fnstsw
std
shlb
iret
push
data16
in
or
pop
xchg
jg
out
and
add
aam
mov
subl
roll
push
jecxz
test
stos
xorb
stos
mov
mov
mov
out
mov
dec
in
fnstcw
sub
cltd
or
fwait
dec
mov
xchg
xor
sarb
push
push
pushf
fmulp
dec
dec
test
out
mov
call
pop
sahf
movsl
jge
push
jb
xor
add
stc
jno
and
gs
or
mov
adc
mov
or
sti
sbbl
and
fstps
mov
test
stc
cld
lcall
out
lcall
fisubs
and
repnz
jne
out
sub
pop
hlt
das
fdivl
and
mov
cmp
mov
scas
into
or
inc
xor
mov
dec
pop
inc
lahf
adc
xchg
cwtl
jle
sbb
adc
mov
or
pop
or
and
sbb
pop
or
cs
push
sub
jecxz
mov
mov
mov
test
or
adc
ljmp
dec
jle
adc
xor
andb
iret
mov
inc
int
xlat
les
aad
out
cmp
fwait
add
leave
cs
movsb
inc
repz
or
cmpsb
js
mov
sbb
mov
dec
cmpsl
adcl
icebp
js
rcl
or
ja
cmp
das
mov
xchg
ljmp
clc
into
je
pushl
out
jge
sti
sbbl
pop
dec
mov
add
jl,pn
mov
mov
sti
dec
jle
pop
lahf
mov
je
mov
dec
sub
pop
xchg
mov
xchg
out
aas
mov
js
call
sbb
popf
add
sahf
icebp
aad
jp
mul
pop
push
lahf
mov
pop
ret
adc
adc
icebp
sti
jg
push
sub
in
pop
enter
sub
push
cltd
push
arpl
xchg
fs
xchg
lahf
sbb
pop
in
imul
pushf
xor
mov
jge
addr16
es
cmpsl
jns
repnz
xchg
xlat
jns
or
or
bound
repnz
cwtl
subl
ja
push
jo
dec
xchg
enter
aad
xchg
sub
add
push
fimull
pushf
xchg
xor
inc
iret
dec
jne
sbb
aaa
sub
and
rcrl
insb
mov
je
jb
inc
jno
cmp
mov
and
lret
fsubl
imulb
ret
in
adc
ja
lret
movsb
out
add
inc
ficomps
cmp
push
jg
daa
inc
or
jae
lock
cmp
or
cli
cld
pop
lcall
loop
jnp
and
test
jp
rcl
shrl
inc
outsl
pop
adc
pop
and
xlat
dec
out
sbb
pop
cmp
or
jmp
fists
rsqrtps
sti
int3
shufps
nop
or
popf
lcall
dec
cmp
xor
fisubl
inc
mov
mov
fidivl
jae
mov
mov
xchg
fdivl
mov
jnp
pop
jg
lret
lahf
mov
hlt
pusha
incb
call
cltd
mov
repz
dec
inc
xchg
leave
ljmp
mov
lret
sub
and
mov
dec
fisubs
iret
and
mov
stos
sub
mov
mov
and
inc
mov
dec
addb
xlat
adc
call
pop
jo
mov
mov
jbe
fdivrl
xchg
jg
loope
xor
repnz
or
js
push
clc
mov
out
sub
mov
jbe
pop
ret
lret
xor
sbb
fcompl
mov
sub
sbb
mov
xchg
xchg
test
pop
fisubs
xorl
addb
sub
popa
add
shlb
xor
add
mov
ret
fsubs
scas
mov
jl
cli
cmpsb
cmpb
fwait
aas
push
pushf
arpl
pop
andps
nop
or
xchg
xchg
jle
push
push
fcompl
sbb
and
mov
adc
push
cs
mov
pop
mov
jle
jge
xchg
adc
fs
push
outsl
mov
decb
push
dec
daa
scas
xchg
in
jmp
mov
pop
pop
dec
lret
cmp
dec
int
mov
push
mov
jno
or
nop
mov
mov
inc
insb
ret
int3
mov
shl
subl
scas
xchg
push
mov
clc
jnp
nop
mov
js
mov
fisubrl
in
push
mov
cmp
pop
dec
adc
test
call
xchg
cmp
sarb
mov
out
xlat
and
cli
mov
sub
out
out
cld
add
xor
aad
add
mov
sub
frstor
sti
mov
mov
inc
sti
repnz
jae
sbb
test
add
outsb
in
mov
pop
and
cmpsb
mov
aaa
imul
lods
clc
cmc
cmp
jmp
cmpsb
or
fstpt
adc
push
push
ret
xorb
sub
mov
inc
and
mov
mov
jno
rol
repz
mov
mov
xchg
scas
mov
les
out
mov
and
gs
add
pushf
sarb
insb
rclb
jge
and
mov
aad
in
dec
mov
sub
xor
mov
cmp
insb
in
out
mov
stos
dec
popf
add
insb
cltd
pop
mov
jb
enter
int
fsts
arpl
cmp
sub
es
xor
inc
nop
pop
jne
pop
cmp
xor
and
sub
ret
or
scas
lds
xor
inc
fistpl
jmp
jl
insl
xchg
scas
mov
test
ljmp
jp
jecxz
push
push
fcompl
xchg
or
movsb
xor
sbb
cs
insb
cmp
loop
popa
je
in
xchg
or
sbbl
adc
cwtl
inc
xor
add
mov
sub
push
add
stc
mov
pop
mov
xor
and
or
cmpsl
sub
pop
js
mov
in
push
or
subl
insb
arpl
mov
jg
negb
and
mov
test
sub
mov
gs
push
cmp
inc
cmp
icebp
or
mov
push
daa
cmp
inc
push
stos
ret
ficoms
jo
mov
push
insl
inc
xor
mov
fwait
mov
push
sub
in
bound
and
sub
testb
hlt
jne
jb
mov
addr16
inc
mov
cmp
jl
add
push
add
inc
fnstcw
lock
push
xchg
dec
inc
xchg
addl
xchg
push
fists
test
loope
jo
jbe
sub
dec
lret
rol
out
insb
lcall
xchg
shrl
cmpl
fdivs
std
push
lods
and
in
int3
inc
lock
or
ret
stos
pop
jo
push
cmp
lcall
test
into
aaa
mov
loop
adc
in
push
out
sbb
cwtl
add
and
push
sbb
sbb
lret
mov
mov
jnp
shll
add
subl
call
cs
nop
xchg
mov
adc
mov
mov
xchg
xor
dec
adc
sti
fscale
cmc
inc
popa
aad
es
mov
dec
sub
pop
jb
xchg
mov
mov
jg
in
adc
ljmp
adc
data16
adc
mov
test
push
pop
call
movl
dec
sbb
dec
mov
xchg
sub
mov
bound
mov
jo
dec
or
adc
jns
and
xchg
aad
test
std
inc
push
mov
adc
repnz
aad
mov
push
mov
int
push
add
sbb
addr16
gs
mov
aas
cmp
push
push
jmp
ret
mov
xchg
push
lods
xor
sbb
insb
adc
repnz
mov
stc
in
cs
push
pop
insb
std
jnp
jl
dec
js
sub
inc
scas
push
mov
incl
testb
inc
jg
push
mov
dec
gs
sti
lcall
push
test
or
adc
cmpsb
xchg
inc
add
movb
sbb
icebp
or
subl
mov
lods
adc
push
xchg
notl
je
push
jecxz
mov
push
mov
lock
clc
adc
daa
popf
push
negl
repz
add
mov
loop
jl
mov
sbb
dec
loop
sub
imul
pushf
dec
inc
das
xlat
inc
pop
insl
cmp
mov
jb
pushf
push
cmp
enter
fldenv
adc
add
xor
dec
popf
adc
mov
lods
push
aam
inc
test
aas
popa
js
xchg
stos
rolb
fdivr
xchg
imul
stos
loope
mov
xchg
mov
push
push
push
scas
xchg
aaa
cld
outsb
test
lahf
fwait
inc
arpl
mov
lret
arpl
cmpsb
mov
or
cmp
or
adc
mov
call
adc
test
push
inc
inc
test
insb
arpl
jg
push
sbb
enter
sub
test
adc
aaa
adc
or
scas
xchg
outsb
fwait
dec
orb
pop
dec
jp
push
xor
or
mov
sbbb
mov
test
or
icebp
cmp
or
mov
je
ret
add
mov
push
xchg
fsubrs
sbb
mov
jp
xor
dec
bound
mov
mov
xadd
jno
clc
jno
cmpsl
push
aam
addr16
lret
cmp
cmp
cld
push
negl
int
inc
pop
sbb
and
mov
fcmovbe
mov
xchg
sub
mov
div
or
mov
jno
or
mov
sub
rcl
pop
lret
jb
les
sbb
xorb
cmp
xor
enter
and
jnp
loope
and
and
mov
cmp
dec
pop
lret
cs
cmpsb
mov
in
push
inc
fnstcw
pop
mov
loope
cmp
cwtl
pushf
inc
push
ja
mov
movsb
aas
jae
mov
rcll
out
inc
in
lds
jne
and
jl
das
aam
jo
dec
rorl
cli
pop
and
inc
cmp
mov
add
movsb
aad
lcall
jge
add
cli
dec
repnz
pop
mov
rcrl
jae
or
gs
pop
movsl
add
mov
ret
mov
or
and
stos
xchg
jmp
iret
pop
enterw
jge
aaa
xlat
cmp
fcoms
or
mov
fwait
mov
add
popa
fistl
iret
inc
or
lds
lcall
jns
push
push
into
jg
jmp
jmp
or
cmp
jge
mov
jmp
lods
xadd
std
stos
xor
mov
ss
pop
mov
adc
nop
jo
xchg
add
lretw
cmp
xchg
aad
sahf
aam
ret
push
dec
fiaddl
js
mov
daa
es
idiv
jmp
iret
clc
std
cld
scas
and
adc
and
push
adc
fisttps
lret
loopne
push
mov
mov
cltd
push
aad
xchg
sahf
scas
bound
push
movsb
out
ja
sbb
adc
add
enter
in
push
xor
jb
dec
push
add
outsl
pusha
es
dec
pop
jmp
insl
inc
rolb
jae
mov
out
adc
inc
movsb
andb
cmp
mov
roll
incb
add
inc
jl
add
icebp
cmpsb
push
pop
cmpb
mov
jno
mov
fstpl
pop
mov
rolb
jl
xchg
leave
xchg
cmp
jb
mov
arpl
mov
sbbb
daa
dec
add
inc
sarl
mov
das
push
aam
loop
in
ret
icebp
fistpll
mov
cmp
fidivs
in
sub
in
js
cli
mov
mov
mov
lret
cmpsb
xchg
aam
add
xchg
ret
inc
jecxz
add
mov
and
push
pop
sub
sahf
in
xor
xchg
cmp
push
icebp
imul
mov
jnp
pop
push
mov
sbb
repz
inc
aas
push
inc
leave
sbb
sub
jb
pop
loopne
imul
inc
test
xchg
rol
fisubl
and
popa
test
loop
add
cmpsl
pop
xchg
pop
mov
pop
mov
pop
ds
add
loope
pop
pop
inc
aas
xchg
popa
inc
dec
or
lds
xchg
pop
mov
sbbl
aaa
xchg
sbb
enter
jbe
mov
pop
pop
inc
lcall
push
jnp
sub
call
jp
fwait
dec
xchg
xchg
mov
lea
pop
xchg
dec
popf
notb
mov
rclb
jge
in
dec
mov
xchg
cmp
jmp
sub
jg
sbb
or
ds
sbb
enter
dec
mov
adc
lahf
in
fimull
inc
mov
cli
add
fstps
repz
out
insb
and
loop
jp
fidivs
adc
test
pop
cmpsb
imul
or
scas
pop
cmc
dec
enter
mov
dec
pop
fstp
ror
push
mov
fisttpll
imul
cmp
mov
sar
xchg
jb
xchg
roll
dec
inc
push
mov
mov
xor
xchg
push
cmp
call
outsl
adc
inc
add
push
add
sub
xor
in
jno
ja
xchg
and
jnp
mov
cltd
clzero
loop
shrl
lret
scas
pop
push
push
lret
aas
insb
and
stos
aam
psubq
dec
push
in
fnsave
gs
shll
cmp
shll
xchg
dec
adc
setno
pop
les
das
sbb
fcmovnbe
js
push
int
shrb
fldcw
jb,pn
std
je
mov
outsb
jmp
dec
imul
push
xchg
adc
nop
lea
lret
lods
out
ror
mov
add
add
xchg
or
addl
inc
cli
mov
dec
popa
add
sub
mov
push
rcl
fwait
sbb
scas
stc
jmp
into
xchg
mov
jne
aad
mov
xchg
out
ja
mov
cmp
xchg
cmc
fs
xor
mov
xchg
fwait
out
mov
inc
mov
cmc
xor
out
jbe
iret
stc
or
and
xchg
xchg
cmpl
mov
jle
sub
dec
pop
out
pop
or
mov
mov
sbbl
mov
fcomi
mov
jno
cmp
popf
aam
sarl
mov
js
shr
add
jb
mov
in
xor
mov
mov
nop
jg
xor
call
aaa
ffree
lret
push
and
iret
das
sub
dec
dec
inc
inc
in
sub
jb
mov
je
out
mov
xchg
imul
jbe
push
ss
xchg
mov
xor
and
xor
or
push
jge
sub
mov
xchg
icebp
or
stos
test
xchg
push
stos
rcrl
scas
sbb
rclb
daa
mov
and
and
mov
outsb
jmp
mov
inc
push
push
sarb
sub
mov
movsb
gs
push
ljmp
cmp
rclb
sub
push
cs
sub
sahf
into
das
sub
fidivrl
in
mov
jp
sub
arpl
aas
mov
hlt
in
add
cmp
pop
dec
inc
pop
movsl
xor
jno
inc
rorl
ret
mov
add
pop
inc
repz
int3
jb
jbe
aas
and
nopl
pop
fildll
mov
inc
cmp
or
sbb
out
imul
push
jmp
mov
jp
cmp
mov
adc
cmp
ror
aas
xorl
mov
loope
push
cmp
add
or
negl
das
out
push
mov
sub
sbb
mov
jmp
sbb
imul
cmp
sysret
mov
xor
sbb
ficoms
mov
out
ret
pop
iret
xchg
jbe
dec
inc
imul
push
dec
int3
pop
lret
xlat
add
xchg
xor
rcrl
sub
jmp
shrl
xchg
or
movsb
in
out
pusha
lock
pop
cmp
cwtl
xchg
loop
data16
ljmp
stc
or
add
scas
push
sub
bound
arpl
mov
dec
inc
lret
imul
loope
sbb
ret
rcll
push
leave
xchg
jp
call
fdivrl
in
add
dec
sbb
popa
mov
xchg
popf
orl
lcall
adc
dec
mov
push
cmp
or
out
mov
sahf
pop
xchg
cmp
dec
push
jmp
add
sub
cmp
jmp
pop
aaa
pop
mov
inc
push
push
jmp
lret
lcall
jg
sub
jge
cmp
and
push
add
imul
sahf
les
mov
aas
jne
cmpb
or
add
lea
imul
enter
fsubl
stos
ljmp
push
ret
popa
icebp
movsb
sahf
ds
sarb
lret
fidivrl
pmullw
inc
mov
adc
fdivrl
cli
repz
jp
insl
sar
xor
mov
lahf
add
je
xchg
and
jb
jns
dec
push
sti
mov
jbe
xor
out
sub
jle
mov
push
jmp
xor
decb
adcl
cmp
push
das
fwait
mov
pop
push
mov
sbb
sbb
pushf
pop
adc
pusha
pop
inc
xchg
test
pop
push
inc
out
stos
fcomip
push
aam
jne
or
out
dec
adc
adc
or
jo
aaa
xchg
cmp
mov
sbb
testb
hlt
pop
test
scas
jle
sub
dec
cli
in
pushf
stos
sti
cmp
or
test
cli
lret
sub
leave
pop
cmpsb
addr16
sti
jne
outsl
aaa
and
cmovbe
in
jnp
pop
shr
sub
rorb
xor
cmp
int
xor
xor
loope
inc
in
and
orb
jge
std
int3
mov
jnp
bound
pop
jge
repz
in
jl
jns
arpl
cmpsl
add
fisttpl
cmp
sahf
int
lds
imul
vsqrtpd
adc
out
push
pop
call
xor
cli
jno
out
sbb
sbb
adc
out
dec
mov
ds
ret
pop
fnstsw
mov
stc
add
shrl
or
jno
pop
or
mov
dec
fs
jp
mov
mov
sub
sbb
pop
lods
pop
repz
push
xchg
and
push
push
sub
insb
jle
out
or
or
pop
aad
pop
imul
mov
out
loopne
sub
push
or
insl
inc
aas
cmc
sahf
out
and
shlb
mov
add
jbe
pop
fcmovne
jb
inc
mov
cs
fistl
int
dec
stos
jo
js
test
jg
int3
dec
fsts
pushf
les
inc
in
popa
and
inc
or
int
repnz
idivl
adc
sub
jo
test
in
ret
lea
sub
jo
outsl
adc
push
aam
jle
and
dec
and
mov
adc
xchg
sbb
icebp
dec
sub
push
push
popf
pushf
sbb
mov
popa
mov
push
pop
xchg
inc
cmp
cmp
pop
cmp
shlb
sbb
and
cltd
fstl
pop
cltd
mov
pop
pop
imul
adc
or
pop
and
sbb
mov
sahf
outsb
mov
cmp
inc
outsl
jb
mov
aaa
cmpb
mov
andb
xor
shll
pop
cmp
jmp
pop
mov
xchg
scas
dec
sbb
sti
xorb
mov
fs
xor
sbb
repnz
in
inc
push
jo
sbb
dec
inc
ret
cltd
das
hlt
cmpsl
dec
sbb
std
jne
pop
cmpsl
push
xor
adc
aas
testb
adcl
stos
divl
push
push
cli
imul
add
add
orb
sub
mov
out
fisubs
push
fildll
leave
faddp
adc
sub
mov
mov
push
xchg
rolb
push
pushf
lods
jg
sbb
inc
ret
gs
mov
lcall
rolb
mov
je
std
sbb
js
inc
insb
lea
jae
fwait
and
das
pop
inc
mov
mov
cmp
dec
das
pop
popa
inc
test
imul
stos
daa
mov
into
and
jecxz
inc
push
push
hlt
sub
insb
cs
push
fmuls
mov
sub
or
ds
in
dec
test
pop
push
lods
xchg
mov
call
xor
and
fs
lds
dec
or
jecxz
and
stc
pop
mov
push
cmp
addl
pop
sub
jae
push
imul
push
lret
and
pop
mov
adc
out
insb
sbb
mov
cmpl
loopne
jb
fnstsw
sbb
repnz
movsl
ret
in
mov
loopne
xchg
lret
xorb
pushf
int3
add
flds
add
es
pushf
jg
xchg
add
inc
dec
mov
dec
pop
pop
push
loop
add
or
fdivrl
dec
shl
in
subl
lret
push
fildl
mov
and
inc
repz
js
pop
fs
xchg
add
enter
sbb
enter
jg
cmp
movsb
push
xchg
out
ror
push
push
add
popf
sbb
push
mov
enter
pop
jnp
jb
data16
rolb
xor
stc
pushf
mov
pop
xor
test
cmpsb
xchg
sbb
mov
test
arpl
push
sub
lahf
in
inc
inc
stos
out
sbb
out
xchg
adc
xor
mov
mov
in
mov
or
push
ljmp
mov
out
fsub
lahf
adc
and
not
jle
enter
or
icebp
push
cmp
sub
movsl
cli
push
sbb
lods
mov
repnz
andb
fsub
xorb
jecxz
jno
fadds
and
loopne
rcll
push
jge
stos
push
scas
lods
aaa
xchg
push
aas
addr16
aad
xor
jnp
jnp
jns
sub
stos
mov
cmp
fistpl
ret
test
add
imul
mov
loopne
repz
mov
into
lcall
cltd
mov
cmp
pop
mov
mov
or
es
sahf
jae
fildll
push
add
xchg
sub
inc
sub
sub
ja
out
mov
xor
repz
test
sbb
jle
push
sbb
mov
fwait
loope
int3
cmp
movsb
jecxz
lar
sti
sub
lea
pop
pop
es
fcompl
pop
xchg
sub
lods
pop
cwtl
pop
scas
cmp
std
dec
and
fcmovbe
lock
rcll
xor
cmpsb
mov
dec
cmc
dec
andl
loope
adc
sbb
jno
test
imul
stos
in
subl
xlat
push
pop
insl
push
fwait
add
push
jge
mov
mov
adc
insb
pusha
arpl
lods
pusha
ficoml
addr16
or
lds
sub
fcomps
add
xchg
imul
out
fptan
js
sub
inc
in
lret
dec
imul
scas
lds
cmpsl
rol
insl
cmp
jg
or
test
lahf
and
ror
mov
mov
mov
jae
mov
cld
icebp
adc
xor
test
sbb
xchg
fdivrp
jle
cmpsb
outsl
cmc
jbe
jp
rclb
inc
outsb
push
nop
and
into
jmp
out
dec
shl
push
mov
sbb
cmpsl
add
clc
or
imul
aam
xchg
les
push
mov
push
push
jno
mov
dec
xor
mov
ja
gs
hlt
mov
lret
pop
adc
xchg
rolb
imul
xor
and
jecxz
test
aam
sub
xchg
sti
out
cwtl
jl
shll
dec
push
stos
sbb
add
mov
jae
sbb
mov
push
pop
sub
mov
fisttpl
cmp
leave
mov
adc
ficomps
cmp
inc
adc
nop
movsl
or
pop
dec
fwait
mov
jno
mov
subb
xor
mov
addr16
outsb
int3
out
xchg
les
push
jl
jno
test
adc
fcmove
jne
arpl
add
mov
sub
test
aaa
pop
mov
or
stc
decl
shlb
sub
lock
std
jle
xchg
pop
jno
in
inc
dec
inc
dec
lcallw
pop
inc
fistpll
cwtl
ret
push
xchg
xchg
ror
jnp
or
cmp
iret
mov
cmp
add
inc
popa
xchg
mov
or
push
cmp
insl
ds
testb
push
or
test
pop
xlat
mov
iret
inc
xchg
mov
inc
insb
push
cmp
into
cs
aam
or
out
push
push
fisttpll
std
repnz
dec
inc
xor
push
dec
jbe
cmpl
sbb
nop
pop
push
rorl
test
mull
xchg
inc
adc
mov
cmpsb
push
dec
mov
cmpsb
sbb
enter
mov
fs
push
mov
shll
rclb
cmp
fincstp
jbe
ja
xor
mov
mov
int
pop
lret
and
out
pop
insb
mov
mov
rcl
jne
push
int3
js
xor
xchg
idiv
mov
inc
xchg
stos
jecxz
cmpsb
loopne
cwtl
loop
out
ljmp
test
popa
lcall
clc
lcall
cmp
mov
out
adc
sbb
xchg
jbe
fldt
hlt
aam
pop
daa
push
movsb
call
cwtl
lea
or
gs
loope
addb
or
mov
mov
mov
xchg
ficomps
repnz
ja
in
mov
cmp
jmp
loope
push
rcrb
mov
or
mov
xchg
psllw
xor
cltd
push
adc
mov
and
lock
or
and
pop
mov
mov
nop
ja
xor
xchg
and
pop
and
cmpsl
jmp
xor
outsb
mov
idivl
xchg
mov
repz
inc
je
je
dec
pop
push
mov
imul
fldenv
test
inc
aad
decl
les
mov
inc
pop
pusha
or
hlt
popf
aam
cmp
cmp
and
nop
push
jecxz
repz
lods
and
jo
adc
insb
sub
sarl
repz
loope
or
push
fcompl
idivb
and
pop
ss
dec
cwtl
inc
dec
lret
push
xorb
mov
mov
stos
push
sbb
mov
xchg
mov
lock
scas
pop
js
call
jae
sub
fmuls
add
cs
lods
out
test
inc
bound
scas
sti
adc
cmpsl
fwait
jne
roll
addl
outsb
jae
ficompl
ret
cld
stc
add
jg
orb
gs
shll
xorl
push
jnp
stos
mov
loopne
dec
pop
or
popf
int
movsl
push
mov
ja
and
mov
cmpb
push
outsl
xchg
cmp
shrb
push
out
xor
mov
arpl
ja
test
nop
aad
push
sub
jb
nop
je
js
dec
xchg
es
xchg
dec
imul
jp
or
in
addb
mov
fs
dec
call
jl
arpl
add
adc
in
addr16
mov
xchg
adc
das
rcrl
fdivl
cmp
sti
sti
xor
sbb
or
xchg
ds
xor
ficomps
jne
jne
aad
mov
jle
mov
nop
dec
int
cmpsb
rcrl
test
int3
cmp
jl
imul
inc
or
push
xor
mov
int3
test
fadds
pop
aam
or
repz
mov
lods
stos
gs
out
pop
jg
jp
int3
out
inc
mov
jne
rcl
xor
pop
popa
lret
add
popf
xor
push
and
fistl
sbb
pop
and
inc
popf
ljmp
and
lea
mov
sbb
aad
pop
outsl
mov
loopne
fsin
ljmp
clc
out
jns
pop
daa
ds
xor
imul
adcb
bound
int
pop
stos
popa
xchg
xor
lods
sbb
and
pop
arpl
add
sarb
lods
cmp
add
cmp
xchg
shlb
repnz
test
pop
outsb
push
mov
fucomp
scas
sbb
lods
and
movsl
inc
adc
stos
popf
hlt
mov
inc
cmp
outsb
stc
imul
dec
push
add
or
lock
mov
repnz
addr16
js
ret
aas
outsl
lods
push
in
rol
dec
jp
lahf
out
negb
out
or
mov
sbb
push
sbb
les
inc
and
mov
mov
push
xor
pop
aad
leave
out
sbb
pop
add
mov
pop
sbb
pop
filds
leave
mov
pushf
adc
shr
jmp
jecxz
aam
sbb
jne
push
pop
and
fistpll
out
adc
imul
lods
inc
jl
cli
sbb
pushf
or
push
jb
sbb
or
icebp
and
test
lret
rcr
test
push
jle
pop
pop
cld
adc
daa
lret
out
xchg
out
fldenv
sbb
dec
leave
fwait
inc
fsubl
jbe
sub
jmp
fwait
int3
fwait
mov
insl
scas
xor
adc
mov
in
fldt
cwtl
in
fs
push
push
ficoml
or
ss
iret
sub
adc
sub
loop
or
xchg
mov
jnp
outsb
fildll
dec
ja
mov
add
xchg
pop
pusha
fisttps
xor
sub
popf
lret
stc
cli
mov
dec
add
stc
jae
dec
jnp
sbbl
and
jge
jne
test
mov
imul
pop
dec
mov
cmp
push
pop
call
dec
rolb
or
cltd
int3
fsts
sbb
jo
test
addr16
jo
jno
les
call
ret
mov
pop
push
stc
ljmp
je
push
push
aaa
cmp
mov
scas
xor
adc
stos
xor
xor
pop
push
mov
adc
push
sub
test
repnz
arpl
fldl
sub
or
mov
stos
fldl
test
fnstenv
das
pusha
out
cmp
cmp
cltd
jne
call
inc
xchg
leave
jo
addb
and
pusha
mov
add
clc
pushf
mov
ljmp
lret
cmc
nop
pop
jp
sbb
mov
int3
and
aad
test
loop
sub
or
es
jle
mov
aam
and
jp
ljmp
push
stos
out
jmp
push
mov
push
sub
push
aaa
push
ja
dec
lods
pop
add
out
xor
inc
outsl
sbb
mov
xchg
or
fcoml
mov
pop
cli
mov
mov
ljmp
int3
sbb
hlt
mov
test
xchg
stc
in
es
inc
lret
aaa
lret
or
nop
lds
movsl
jbe
jne
popa
mov
mov
add
jne
add
outsb
xchg
iret
xor
shlb
pop
out
xchg
sti
dec
mov
mov
stos
dec
sbb
push
addl
mov
lods
scas
nop
jno
and
scas
inc
and
xchg
sbb
mov
xchg
mov
test
bound
mov
xor
add
or
adc
mov
scas
inc
andb
pop
mov
aaa
out
sbb
cwtl
cmovno
mov
or
mov
push
sub
xchg
cmp
push
test
xor
mov
xlat
cld
xchg
hlt
cmp
je
adc
mov
ds
jg
lea
jp
les
xchg
cmp
pop
pop
mov
adc
dec
jne
loop
or
jb
out
cmp
aad
imulb
inc
ret
jne
xchg
jecxz
cmp
fistpll
sbb
jecxz
lods
push
push
fcoml
pop
sbb
out
add
sbb
lahf
call
es
push
ret
jge
pop
xchg
ja
sbb
mov
mov
out
or
cmpsb
insb
mov
mov
ja
mov
in
filds
test
mov
mov
js
sbb
lock
adc
lods
rcll
pushf
fisubs
aad
fisttpll
test
dec
clc
sub
xchg
shr
mov
imul
and
mov
cmp
inc
aam
pop
jbe
jmp
fidivrl
fidivl
or
adc
sarl
ret
xor
js
add
inc
cmc
sub
jl
loop
ds
dec
outsb
stos
hlt
xchg
pop
mov
loopne
cmc
dec
fs
dec
jp
cmp
or
roll
xchg
in
mov
jns
pop
and
in
sti
je
pop
adc
pop
out
mov
mov
cwtl
rcrl
cmp
inc
push
jb
add
and
xchg
fcmovb
add
mov
icebp
in
xchg
inc
pushf
push
loopw
lret
cmp
jl
cmp
out
push
and
adc
push
jecxz
in
aam
mov
and
pop
pop
in
add
fsubrs
jns
addl
sub
int3
dec
fcoms
cmpb
pmaddwd
mov
pop
pop
in
stc
push
sbb
dec
popf
or
lcall
imul
mov
jo
sti
xorl
pusha
loope
stc
xchg
loopne
xchg
outsb
imul
inc
popf
jnp
or
and
jge
xlat
je
xchg
lcall
filds
int
ficoms
pop
loop
mov
leave
test
jnp
cmpsb
fnsave
rorb
xor
dec
mov
je
push
mov
test
and
push
or
sub
shlb
xor
jae
popa
mov
cmp
popf
inc
cmp
dec
or
lret
sub
inc
fistps
mov
out
or
xchg
mov
dec
fwait
or
bswap
and
outsl
test
mov
setno
call
mov
subb
cmp
jnp
or
xor
or
sbb
cwtl
int
xchg
repnz
cmc
inc
fldcw
fs
push
and
inc
insl
jne
test
sub
call
in
out
in
dec
adc
test
iret
fcmovne
and
es
mov
out
insl
fisttpl
in
not
lods
sub
sub
fucom
mov
push
cmpsl
ljmp
std
cmp
jne
stos
pop
push
inc
arpl
lods
adc
xchg
repnz
lret
mov
rorl
lds
into
shll
fsubrs
sbb
lret
push
dec
push
shll
or
lret
push
push
in
sbb
mov
call
test
leave
sub
jg
iret
outsb
mov
jl
and
cmp
or
in
gs
pop
cs
lcall
stos
cmpb
rolb
dec
push
or
adc
pop
jge
xorb
mov
sub
lock
je
aaa
mov
mov
aaa
je
jb
or
lahf
mov
push
pop
ficoms
lret
icebp
outsb
adc
out
inc
iret
mov
mov
loope
aad
repnz
pop
lds
pop
fstps
lods
or
shlb
push
cmp
fsubr
inc
mov
cmp
inc
out
mov
jno
xor
insl
adc
je
dec
fld
cmp
sbb
xchg
push
ss
jecxz
or
jae
jmp
jp
movsl
pop
push
jmp
enter
cmpsb
cwtl
scas
test
popf
test
lcall
rcll
jecxz
imul
push
or
jnp
repnz
imul
arpl
scas
cmp
and
test
sub
ret
int3
inc
jae
and
hlt
add
es
or
jns
stos
mov
adc
xlat
cld
jno
mov
mov
ds
pop
jae
test
mov
fsubs
std
sti
mov
je
sub
int
bound
daa
decl
and
lock
cmp
sbb
dec
idiv
add
mov
pop
mov
push
xchg
jg
inc
cmp
lret
lods
test
inc
in
jge
mov
inc
mov
mov
ljmp
int
loop
bound
inc
jns
out
pushf
xor
add
dec
jmp
sub
add
imul
imul
enter
sub
pandn
jno
cli
repz
test
mov
repz
cmp
fiadds
clc
loop
jecxz
xor
mov
and
add
popa
test
push
dec
xchg
adc
adc
out
xor
add
mov
ret
mov
movsb
popf
dec
gs
inc
xchg
cmp
or
mov
or
inc
rorb
pop
clc
add
jmp
and
mov
das
xorb
leave
sarl
rclb
ret
int3
lock
lret
pop
or
add
pop
lcall
pop
and
lret
jbe
sarl
pop
mov
mov
xchg
inc
test
push
push
or
sbb
push
js
daa
inc
pop
push
pushf
jnp
pop
int3
pop
jp
hlt
das
push
js
cmp
pop
jmp
pop
and
mov
xchg
imul
test
sbb
or
mov
dec
lods
lea
leave
cli
push
xchg
lahf
loope
fs
out
xor
mov
test
mov
and
mov
mov
std
sub
xor
push
add
sbb
cmp
dec
js
fistpll
fimull
imul
mov
xor
push
sub
adc
dec
push
xchg
mov
jmp
pop
pop
aad
adc
ja
push
sbb
les
add
lret
sub
inc
out
and
cs
add
leave
popa
mov
in
mov
fucomip
sbb
enter
jne
or
lods
cmpl
out
inc
mov
xor
test
rorl
dec
bound
test
enter
call
push
push
cmp
xor
mov
mov
mov
mov
repz
inc
fs
cwtl
out
xor
aad
cmp
jp
lret
mov
lcall
add
test
stc
adc
pop
addr16
push
pushf
lock
lods
fisubl
sub
and
out
jle
push
jp
and
xchg
mov
add
jg
lea
repnz
loopne
fwait
popf
aad
lcall
je
dec
call
popa
inc
push
xchg
insb
xor
loop
in
lea
sub
xor
cmp
jl
cmpsb
mov
jne
xor
leave
shufps
lret
cmpsb
or
cld
sti
out
mov
cwtl
cmp
cmc
sbb
xor
pop
insl
into
aad
fsubl
out
sbb
push
jnp
and
adc
mov
inc
jg
arpl
popf
cltd
sahf
xchg
sub
jno
mov
xchg
mov
popa
adc
dec
out
xorb
mov
ljmp
nop
rcl
jl
sub
addl
ljmp
jns
out
int3
cmp
push
push
sub
fdivrs
loop
ja
int3
push
insl
movsl
lock
jg
add
mov
xor
imul
movb
pop
xchg
imul
push
lds
cmp
es
fstps
mov
iret
lods
push
lahf
in
test
jnp
adc
arpl
add
inc
or
jecxz
and
pop
push
and
sub
pop
dec
xchg
cmpl
and
out
addb
inc
push
cmp
adc
cmp
dec
cmpsb
stc
outsb
fildl
adc
mov
sbb
sbb
push
xchg
xchg
adc
mov
pop
dec
iret
jae
andb
into
and
popf
dec
sub
pop
shlb
addr16
ljmp
adc
out
outsb
data16
jo
mov
cld
dec
fdiv
mov
out
pop
lret
mov
mov
push
xchg
pop
xorb
icebp
mov
adc
leave
or
sahf
jnp
es
xchg
sbb
or
hlt
mov
cwtl
js
xor
aas
mov
aad
imul
cmp
test
mov
je
mov
xor
test
add
int3
out
push
jg
ret
mov
aad
push
cmp
lds
inc
jg
jle
mov
dec
or
addr16
cmp
xchg
call
decl
add
jne
pushf
in
enter
mov
jne
push
in
ret
xchg
xchg
cmp
daa
xor
cwtl
mov
int3
iret
rol
pop
mov
mov
add
data16
add
jl
rorl
xchg
push
and
jae
dec
outsl
sbb
xor
call
inc
dec
scas
leave
mov
lret
and
xchg
pop
lods
sbb
imul
mov
jmp
or
inc
adc
dec
xchg
cmp
adc
cmp
add
cmpsb
rorb
adc
sldt
ds
sub
call
rep
cmp
addr16
or
mov
cli
aam
inc
hlt
je
rcl
scas
std
std
jb
add
sbb
das
ljmp
es
out
jmp
pop
sbb
sub
and
add
push
sub
test
sub
xchg
mov
mov
push
adcl
sub
or
mov
repnz
dec
lock
jp
mov
jnp
enter
rcl
jg
test
jge
sbb
mov
mov
dec
xchg
aam
or
jae
inc
enter
iret
orb
call
adcb
nop
and
shrl
nop
cmpsl
sbb
repz
loop
mov
push
dec
shlb
outsl
cmp
dec
push
sub
sub
lds
stos
movsl
cltd
arpl
loope
popf
mov
sti
pop
stos
rcrb
sub
loope
fidivs
dec
dec
stos
mov
xor
xor
mov
or
xor
mov
andb
pop
or
adc
pop
xlat
add
cmpb
xchg
aas
dec
sub
xor
lods
clc
movsb
in
jb
cmp
pushw
and
cmp
icebp
mov
mov
dec
popa
pop
inc
lods
test
cs
mov
push
adc
add
add
sbbb
or
xor
sbb
lret
adc
mov
inc
sub
mov
gs
ret
popa
push
cmp
or
inc
and
pop
jns
mov
adc
cmpsb
cmp
dec
sub
xchg
jl
add
outsl
insl
dec
xchg
shl
add
dec
adc
push
out
lahf
popa
lret
gs
inc
imul
lcall
aaa
fistl
mov
sbb
mov
jnp
ret
incb
fidivl
xchg
hlt
inc
push
jno
sbb
jnp
pop
sti
test
inc
adc
daa
and
adc
lret
shlb
mov
lea
jb
inc
std
insl
push
sbb
xchg
mov
sbb
sbb
fnstsw
cs
fnsave
push
aas
iret
add
add
pop
test
and
icebp
or
rorl
aaa
cmp
fdivs
xchg
xchg
sbb
gs
push
imul
xlat
mov
mov
sbb
fstp
xchg
sub
orl
fwait
addb
sbb
jno
aas
aas
aaa
js
ret
shrb
fnstcw
std
aad
jae
inc
aam
stos
popf
sbb
dec
xchg
repz
notl
shrb
mov
jo
or
mov
and
iret
fwait
lcall
add
push
das
sbb
fs
inc
cld
add
pop
enter
addb
das
pop
cmp
lret
test
mov
dec
inc
fwait
jnp
sti
sbb
mov
pop
insl
adc
xor
repz
xchg
push
outsb
arpl
adc
adc
leave
inc
cmp
lods
fisubrs
cld
out
pminsw
adc
sbb
inc
stos
out
push
mov
push
movsl
sbb
sub
cmpsl
inc
xchg
pop
mov
and
lahf
push
mov
push
and
sub
lcall
scas
or
push
push
lret
adc
shll
nop
leave
lahf
adcl
in
int
pop
adc
scas
mov
ret
dec
fistps
xchg
dec
sbb
repnz
xchg
cmpl
gs
mov
xor
popf
adc
mov
inc
dec
rol
sbbl
push
shrb
or
fs
xchg
mov
mov
add
dec
js
add
fistps
loop
out
mov
jp
out
or
test
adc
movsb
or
insb
int3
jmp
add
fidivs
stc
mov
jno
cmpsl
loopne
mov
fnstcw
inc
cmp
mov
xchg
test
lods
jl
test
inc
testb
inc
push
mov
push
jno
inc
negb
sub
mov
cld
iret
mov
cltd
gs
fnstcw
sub
mov
test
push
mov
add
fwait
in
int
xchg
fwait
add
nop
xchg
xor
push
pop
cmp
xor
fcoms
jns
out
int3
idiv
aaa
pop
bound
inc
mov
mov
inc
scas
daa
mov
jecxz
jb
pop
daa
push
std
sub
push
push
sbb
rolb
stos
pop
push
inc
push
sbb
pushf
adc
push
inc
sub
add
inc
sti
push
mov
pushf
pop
fisttpll
bound
daa
mov
and
sti
inc
mov
fiadds
xchg
outsl
test
inc
subl
jecxz
mov
mov
xlat
cmp
push
inc
ror
sub
mov
dec
shll
je
inc
pop
out
fstps
pop
lcall
dec
shl
dec
sahf
xor
pop
mov
subb
add
pop
sbb
push
adc
and
lcall
std
mov
daa
pop
int3
jnp
inc
roll
mov
loopne
push
addb
inc
jl
sub
filds
dec
stc
les
jo
or
sarb
aad
cmc
sbb
push
cmp
lret
adc
pop
or
pop
cmpsb
push
test
inc
mov
testb
mov
adc
fistpl
nop
push
int3
pop
fbstp
mov
clc
in
sub
push
lods
mov
cmc
pop
je
pop
cmpsb
xchg
cli
and
rcl
and
sub
lret
xorl
dec
in
mov
adc
test
mov
insb
mov
inc
sbb
dec
xchg
out
inc
scas
fdiv
or
jecxz
inc
outsl
mov
mov
repnz
sub
lea
mov
mov
lea
cmp
mov
mov
mov
push
js
xor
stos
pop
loop
adc
jae
bound
adc
dec
jge
mov
mov
adc
test
into
cmp
std
ss
icebp
js
ja
mov
int
aas
lret
mov
sbb
mov
cld
dec
insl
jne
lea
pop
jo
rorl
cmc
lret
aad
ss
les
jp
sbb
xchg
insl
aaa
mov
mov
pushf
and
inc
dec
iret
es
xchg
ja
or
jno
pop
clc
aaa
add
mov
movsl
rcrl
pushf
rcll
lret
jl
dec
push
loop,pn
adc
inc
sub
add
jns
inc
push
add
jns
sbb
mov
shll
xchg
andb
aas
jae
scas
fiadds
xchg
mov
ljmp
sub
popa
clc
dec
xorl
lret
mov
test
sub
ljmp
xchg
jae
popf
push
es
mov
sahf
movsl
lods
jnp
sub
xor
mov
jl
sbb
push
daa
push
add
sub
and
shlb
add
push
jmp
and
bound
xorl
mov
daa
ret
fmulp
jmp
mov
push
lcall
jmp
or
jmp
lods
mov
lods
outsb
pusha
popf
adc
push
push
pushf
lret
cmpl
loope
pop
pop
mov
js
adc
cmp
mov
mov
lods
mov
test
sub
out
add
rclb
mov
movsb
les
push
push
inc
mov
lods
lcall
icebp
into
and
sub
movsl
add
inc
mov
test
test
iret
mov
push
insb
arpl
xchg
into
xor
adc
mov
inc
inc
fwait
push
dec
inc
push
sbb
ss
pop
cmc
push
cmc
adc
lcall
fnsave
mov
mov
pop
push
outsb
inc
fldenv
add
xchg
dec
lods
lcall
cmp
or
mov
int
dec
fnstsw
jp
scas
xchg
push
loopne
repz
test
inc
fsubl
in
shrb
sbb
xchg
xchg
repz
lahf
push
and
mov
out
rcll
push
jne
call
cmp
xor
or
sub
arpl
mov
add
sti
sub
dec
mov
push
jne
loop
aas
pop
scas
cmp
jmp
popa
std
mov
mov
sti
pop
xor
pop
in
pop
fchs
inc
mov
dec
hlt
loope
je
fcompl
add
pop
mov
scas
dec
loopne
fwait
fwait
lods
push
std
xor
push
jl
xchg
pop
enter
je
lcall
push
es
aas
and
push
movsb
ljmp
and
pop
scas
into
or
mov
inc
jp
mov
sub
imul
sub
sarl
xchg
jp
shl
cwtl
xor
xor
fwait
push
jp
in
lods
movsb
push
pop
add
mov
lret
xchg
jl
sarl
out
add
shlb
dec
lods
fnsave
stc
into
add
xchg
sbb
out
mov
lcall
popf
push
sub
cmp
push
fdivs
cmp
in
test
adcb
mov
js
push
jle
and
je
popf
stc
push
or
jecxz
push
lods
in
movsb
js
mov
jmp
mov
call
es
insb
push
pusha
rcll
mov
mov
out
mov
pop
mov
imul
into
popf
mov
dec
test
shrb
mov
inc
rcl
and
sub
jecxz
and
out
xchg
pop
jge
pusha
sub
dec
sub
mov
xor
rcrb
mov
loop
outsb
imul
stos
xchg
in
jecxz
push
call
inc
ret
pop
sub
popf
push
dec
aad
aas
fs
mov
notb
sbb
mov
cs
dec
int
rolb
lcall
popf
incl
icebp
sub
arpl
or
sub
cmpb
add
int3
repz
mov
inc
mov
and
mov
xchg
cmpsb
adc
ljmp
sub
es
aam
in
loopne
pop
mov
shlb
cmp
ja
and
loope
popf
popa
dec
jecxz
cltd
movsl
bound
ss
mov
pop
out
jb
jle
adc
inc
mov
gs
sub
pusha
imul
andb
cwtl
push
out
jns
dec
xor
add
push
pusha
cmpsb
xor
pop
or
es
daa
mov
sub
in
in
inc
imull
add
xor
lea
sbb
sahf
into
add
movsl
dec
int3
arpl
fbld
stos
pop
loopne
ds
shll
adc
aaa
ljmp
lods
adc
cmp
into
fucomi
outsl
aas
icebp
mov
mov
call
push
dec
int
mov
fs
adc
adc
popa
pop
lcall
jge
cmp
jg
fstpt
sbb
dec
mov
inc
out
in
into
xchg
dec
push
pop
cmc
js
mov
pop
stc
stc
mov
insb
mov
leave
pop
dec
cmpsb
cwtl
leave
imul
mov
push
inc
pop
jl
lahf
dec
xchg
shrb
xchg
mov
jecxz
cmp
dec
call
lret
pop
sbb
cwtl
aas
sbb
insl
in
repz
mov
test
gs
lods
les
out
pop
fisubl
test
andb
push
leave
fcoml
ljmp
stos
dec
dec
stos
icebp
aam
inc
and
test
test
jmp
cs
sub
xchg
pop
ja
xor
xor
xchg
ret
jp
ja
lahf
cwtl
jmp
mov
pop
pop
ret
ficomps
sbb
aad
rep
cmc
incl
into
ds
std
jmp
lahf
mov
mov
lahf
mov
mov
cld
cmp
mov
or
ss
cmc
mov
and
xchg
jo
sar
lcall
pop
and
pop
xchg
orl
mov
fmull
push
push
arpl
fstpt
xchg
leave
cmp
outsl
cld
cwtl
gs
movl
push
xor
pop
lcall
into
rcrb
xchg
or
rcll
ret
xchg
jae
sti
jns
jle
cmc
ret
sub
popf
jno
cltd
repz
xchg
je
scas
lcall
loope
addb
pop
add
nop
out
test
je
nop
inc
stc
scas
adc
movsb
mov
adc
movsb
aaa
jmp
inc
test
and
mov
dec
mov
mov
sbbb
sti
in
and
xor
inc
mov
push
jbe
add
test
popa
cmp
ret
fdivrl
orl
sub
ret
mov
push
add
sbb
insb
jns
mov
and
lret
add
and
or
sbb
loopne
sbb
dec
lret
lret
stos
inc
and
imul
xchg
repz
gs
stc
add
mov
pop
cmp
jp
outsb
mov
adc
and
add
lds
xchg
stc
inc
inc
lock
and
mov
xorb
or
push
xor
scas
jmp
or
cmp
nop
dec
mov
test
cmpl
cmp
daa
inc
ficomps
xchg
push
dec
ljmp
mov
fwait
subl
rcrl
arpl
not
mov
adc
xchg
mov
mov
sbb
cli
cmp
lods
or
push
jb
fdivp
hlt
adc
sbb
lds
outsl
hlt
adc
test
pop
push
sub
adc
inc
xchg
movsb
inc
sbb
lcall
sbb
and
and
push
xchg
pop
movsl
cmp
pop
mov
and
sahf
call
xchg
rclb
adc
int3
das
in
jbe
test
jne
addr16
jge
movsb
stos
pop
jo
daa
pushf
xchg
rol
xchg
sti
fwait
sbb
pop
je
ljmp
adc
addr16
mov
pop
stos
inc
jb
bnd
pop
cwtl
adc
lods
add
adc
lret
add
into
mov
push
pop
cmp
fwait
insb
lds
sub
lret
ret
test
leave
hlt
rcrb
add
jmp
orb
cmpsl
dec
mov
xlat
cmp
mov
divl
push
mov
xchg
or
imul
sbb
stos
pop
mov
add
mov
push
xor
lret
js
addr16
add
loop
jge
cwtl
jge
sub
mov
out
in
out
js
sbb
ret
mov
insb
in
mov
jp
add
ret
mov
lret
jnp
stc
xor
xchg
pop
add
pop
fdivs
cmp
lret
xchg
mov
jg
jb
inc
faddl
lea
loop
and
and
and
ds
pop
sbb
push
ret
repnz
jge
js
test
mov
or
sbb
imul
fdivs
shll
xchg
add
add
repz
pop
cli
sbb
pop
mov
xchg
repnz
lret
push
aad
xchg
and
sbb
sbb
jnp
sub
movsb
ja
out
adc
lds
cmp
pop
jmp
stos
mov
dec
cli
jo
push
sub
and
sbb
push
shr
out
arpl
mov
aas
das
jg
mov
adc
pop
jnp
int
jno
dec
cmc
hlt
add
sub
push
and
or
repnz
lea
mov
sbb
aad
adc
icebp
les
jne
sbb
iret
imul
xchg
cs
lar
subl
popf
cltd
add
jp
sarb
xchg
rorl
stc
mov
cmpsl
call
stos
in
xor
cwtl
loopne
cmp
lcall
icebp
push
mov
loopne
fldt
mov
mov
cmpsb
mov
sbb
xorb
cwtl
jne
pop
xor
dec
lcall
sbb
jb
jo
ret
out
mov
cwtl
cmpl
in
imul
das
outsl
data16
hlt
jle
rol
sub
cmp
jge
mov
jae
jecxz
mov
pusha
std
xor
andb
fldcw
notl
sbb
lods
in
loopne
clc
mov
ja
add
cmpsb
inc
sarl
imul
cltd
jle
pop
or
xchg
clc
sub
xlat
cmp
scas
mov
popa
xchg
or
inc
and
mov
adc
jge
and
scas
xchg
loop
in
dec
aas
sbb
sub
aaa
xchg
fdiv
int3
loope
xlat
jae
mov
mov
inc
xchg
enter
lahf
shrl
jle
cmp
adc
or
aam
adc
push
jbe
mov
mov
push
jo
mov
fdivl
adc
test
aad
inc
mov
push
ja
jne
add
xor
xor
out
lret
iret
add
test
push
stc
or
cmc
xor
adc
aaa
pusha
fbld
sbb
insl
scas
add
rdpmc
add
mov
sbb
adc
cmp
pop
mov
aas
jle
pushf
jbe
inc
fwait
popf
cmp
int
ss
add
lcall
mov
push
je
andl
imul
mov
xor
iret
mov
xchg
jmp
sub
mov
xchg
dec
cmp
cmpsb
repnz
xor
mov
adc
and
lcall
test
jmp
in
xor
dec
sbb
mov
mov
jb
add
cmpsl
mov
fldl
xor
and
cmp
flds
push
icebp
cmp
jg
xchg
std
or
xchg
test
in
add
sbb
and
mov
test
out
mov
test
push
insb
xor
das
aad
adc
sub
mov
loope
jg
dec
lahf
inc
cmp
mov
xor
aaa
pushf
push
insb
push
mov
jmp
sub
mov
jo
cmp
inc
jne
rcrb
push
mov
push
sti
jg
sub
inc
xor
imul
and
aaa
cltd
sub
sbb
or
push
or
push
jmp
mov
out
dec
mov
sbb
mov
mov
in
std
pop
stos
rcl
std
mov
push
pushf
out
das
sub
sub
mov
mov
push
add
sub
dec
mov
and
loop
fmuls
xor
fmuls
dec
and
ret
loope
cmpsl
push
lahf
fs
rclb
jae
inc
xchg
clc
inc
mov
lea
add
notb
cmp
or
lods
out
repz
out
test
push
xchg
call
push
xchg
data16
loop
mov
jnp
cmpb
clc
cs
test
add
adc
insb
sub
and
mov
aam
add
push
and
fs
ffreep
jno
mov
sub
scas
vmread
cmp
scas
sahf
or
in
arpl
mov
insb
or
cmp
xor
mov
xabort
jb
dec
in
pop
mov
bound
lods
lods
loop
loopne
push
aaa
aaa
push
push
outsb
xchg
mov
lcall
cmc
es
sub
imul
aad
dec
in
xorb
pop
mov
cmpb
sti
dec
lods
sbb
imul
inc
insl
jg
daa
clc
scas
scas
add
mov
inc
add
xchg
aad
sbb
dec
adc
sahf
pop
mov
inc
in
test
sahf
sbb
ret
lahf
mov
jb
cli
jge
aas
mov
cs
adc
cltd
popf
lret
mov
dec
out
clc
aas
add
jo
and
lea
pop
add
bound
add
sti
call
sub
test
in
jmp
cld
dec
int
je
mov
push
jno
xchg
call
mov
mov
pusha
push
inc
jmp
into
in
mov
pop
pop
loope
xchg
mov
mov
mov
mov
pop
adc
jle
xchg
xlat
gs
mov
cmp
cmp
mov
or
fwait
add
mov
in
fadd
adc
leave
ss
add
imul
pop
mov
jno
or
ret
movsl
addr16
rcrb
fwait
jle
cli
mov
shll
push
mov
inc
cmp
pop
jle
cmp
add
xor
in
xadd
lods
mov
dec
pop
cmp
jns
stos
push
mov
inc
pop
mov
push
mov
cmc
push
inc
push
sub
ja
mov
xor
pusha
xchg
ljmp
add
jns
inc
pop
adc
inc
xchg
movsb
into
popf
jecxz,pn
fwait
pop
mov
mov
daa
lcall
sub
out
ja
adc
js
enter
stos
jle
fnstcw
jecxz
out
movsl
dec
fbld
lods
xchg
imul
sahf
jno
ljmp
pop
imul
fldl
push
in
out
insl
das
xchg
pop
popf
add
push
mov
fstpl
jne
arpl
mov
pop
imul
scas
loope
cld
fisubl
sti
rcrl
in
popf
pop
out
xchg
shrb
fdivrl
lds
fcompl
sbb
push
gs
mov
sub
mov
jge
push
int3
out
or
lcall
add
imul
rclb
cld
fs
or
stos
sbb
das
mov
scas
push
mov
inc
jle
pop
mov
lods
lds
pushf
mov
ljmp
or
pop
mov
out
pop
addb
push
stc
cs
in
dec
cltd
push
xor
daa
inc
clc
div
inc
push
dec
pusha
push
add
push
jg
lcall
test
mov
out
xor
or
sbb
sbb
xchg
ss
shlb
ret
rcrl
nop
add
mov
inc
pusha
cmp
sbb
ljmp
adc
xor
push
int3
mov
outsb
in
inc
xchg
aas
jbe
pop
xorl
push
int
js
push
shll
jmp
xlat
repnz
adc
push
sti
das
add
push
pop
outsb
or
shll
in
push
xor
daa
call
loop
jmp
or
pop
mull
aas
jno
pop
push
or
or
mull
dec
into
push
sbb
jnp
xor
sahf
pushf
pop
ret
std
dec
xchg
pop
mov
nop
je
xchg
ret
push
sub
cs
test
sbb
add
nop
and
jne
or
mov
push
or
xchg
ret
cltd
sbb
or
mov
xchg
outsl
in
jp
xchg
in
imul
aam
pop
ret
lea
mov
cmpsl
iret
xchg
pushf
ja
dec
test
insb
mov
test
lret
push
xor
and
jmp
and
inc
cmp
pop
lret
shll
out
mov
divb
stos
lds
addr16
fisubrs
shrb
adc
cmp
sbb
pop
jge
shl
push
and
addr16
jge
adc
jb
pushf
popa
imul
or
sbb
inc
ja
xchg
lret
stc
xchg
out
leave
push
roll
fwait
push
xorl
jp
mov
aam
sbb
cld
xchg
pop
jmp
lcall
or
mov
andb
dec
mov
loope
inc
lods
int
xchg
push
pushf
test
adc
add
xchg
call
add
xor
scas
mov
mov
lahf
cmp
dec
jns
popa
sbb
or
dec
in
cli
jns
mov
scas
jno
push
lds
in
mov
ljmp
mov
push
test
mov
sbb
pop
bound
and
cmpsl
insb
cld
pop
sti
mov
or
push
mov
mov
lret
sbb
mov
fcmovnb
add
cmp
insl
outsb
sub
popf
pop
cmp
cmp
ljmp
arpl
ret
dec
and
rcrl
pavgw
aam
js
and
aas
insb
jg
out
dec
pop
js
adc
add
mov
lret
xor
aas
stos
dec
mov
jle
dec
cli
lods
fmull
and
das
xchg
rcrl
stos
scas
mov
xor
and
or
cmpsb
and
mov
std
out
cwtl
mov
pop
lock
fbld
sub
stos
stos
sbb
inc
dec
jbe
and
pop
scas
orb
or
jge
sbb
pop
pop
cli
sbb
mov
ret
and
jmp
loope
test
popa
adc
adc
add
xlat
stc
xor
add
orl
aas
push
callw
out
insb
dec
xor
mul
mov
or
les
or
mov
sbb
bswap
fs
push
push
mov
ficompl
mov
mov
movsb
push
push
stos
jno
sub
mov
fists
fimuls
xor
xor
dec
jp
sub
xchg
xor
dec
mov
adc
xlat
mov
push
mov
mov
xor
pop
sbb
cwtl
in
cmp
outsb
in
pop
add
je
hlt
and
rclb
les
in
mov
xchg
xchg
rolb
inc
pop
popf
pusha
push
push
mov
jl
xchg
or
pop
push
push
cmpsl
insb
stos
sub
pop
pop
sbb
sahf
cli
xor
out
lods
js
sbb
push
jno
jo
pop
in
sbb
pop
test
adc
cwtl
cmp
cmpsb
dec
xlat
jge
aad
xor
and
sbb
mov
adc
fistpl
mov
cmc
popf
mov
es
pand
mov
mov
xchg
lahf
nop
aam
xchg
mov
xchg
jbe
sahf
aad
popf
addb
aad
jp
pop
cmp
iret
xor
dec
push
repnz
ret
mov
aaa
pop
les
push
iret
or
xchg
and
out
push
imul
shrb
fstps
dec
outsl
dec
outsb
pop
jmp
cmpsl
sbbl
ljmp
mov
cmpsl
add
fldenv
pop
mov
or
daa
mov
cmp
sub
add
scas
addr16
fmuls
xchg
adc
push
orl
and
out
xchg
xchg
fdiv
addr16
jle
cmpsb
mov
mov
mov
or
add
imull
lahf
lea
fmuls
pop
cmpsl
insb
ja
ljmp
out
mov
dec
arpl
loopne
inc
jo
in
mov
lods
sbb
mov
xlat
rorb
and
cmp
inc
mov
sbb
and
fists
xor
jae
ffreep
push
xlat
jno
addl
ljmp
adc
xor
ret
test
mov
pusha
lods
jb
and
cmp
loopnew
fnstenv
sub
jg
icebp
push
jl
or
outsb
push
sbb
not
or
pop
fs
je
stc
push
pushf
xor
je
xor
mov
scas
rolb
pushf
fs
xor
and
sbb
iret
lret
adc
xchg
pop
push
xchg
push
sarl
jb
orl
je
dec
push
lods
mov
fwait
adc
test
pop
sbb
shlb
adc
clc
add
clc
xchg
mov
shll
adc
insl
out
movsb
stos
int3
adcl
rclb
out
enter
mul
outsb
push
cmpsl
and
bound
icebp
loop
outsl
pop
push
push
std
inc
lock
and
cmp
frstor
adc
cwtl
sbb
ja
rcr
push
fwait
addb
ffree
jnp
pusha
and
gs
in
out
jae
mov
divb
dec
scas
aas
mov
mov
test
push
arpl
loopne
decl
imul
stos
push
and
dec
adc
es
idiv
cs
and
pop
mov
add
pop
push
outsb
lcall
int
out
cmp
add
fimull
inc
fnstcw
arpl
data16
sub
stc
insl
cmc
dec
pop
jnp
in
outsl
sahf
cmp
jecxz
iret
ljmp
xchg
rcr
fs
sbb
mov
repz
inc
xor
rol
repnz
xchg
fcomps
ds
jbe
leave
mov
adc
in
jae
add
adc
cwtl
fisubrl
cmp
sbb
mov
mov
xor
std
enter
clc
pushf
xchg
js
xor
subl
add
inc
or
mov
inc
jbe
dec
jo
xor
mov
mov
and
in
and
xchg
jmp
mov
mov
test
add
cmp
mov
mov
popa
sbb
sahf
pushf
mov
inc
adc
divl
adc
push
pop
mov
test
adc
cmc
lret
dec
jmp
inc
dec
mov
jbe
lcall
mov
inc
mov
and
xlat
jns
cmp
ficompl
arpl
repnz
xor
cmc
mov
or
lret
mov
jp
addr16
xor
fimull
in
daa
xor
sub
xchg
sti
xorb
push
inc
mov
imulb
mov
add
out
sahf
push
cmpsl
pop
mov
pop
lcall
sub
lret
adc
clc
ror
jns
and
das
add
insl
cli
cmp
repnz
xor
or
sbbb
jb
mov
test
jo
ds
andl
inc
xchg
xor
stos
add
mov
movsb
dec
cmp
test
pop
outsl
fisttps
mov
lock
xor
rcrl
adc
dec
fucomi
sti
cld
aad
push
rcrl
fimuls
stos
add
or
fdivs
jb
js
cmp
stc
cs
fdivrp
inc
dec
aas
int
xor
gs
dec
xlat
mov
adc
cmp
mov
inc
fisttpl
mov
xor
push
sbb
cmp
mov
fdivl
out
xor
sub
pop
mov
rorl
insl
mov
cmp
insb
mov
mov
pop
idivb
incl
mov
dec
lea
addr16
je
adc
xor
push
idivl
mov
sbb
outsb
sub
sub
arpl
mov
js
or
xchg
cmp
stc
inc
es
pusha
push
std
test
mov
xor
jp
or
add
lea
push
mov
mulb
les
dec
test
mov
jp
loop
scas
cmpsb
jle
stos
pushf
jl
xor
jle
jle
push
cs
icebp
push
adc
sub
jae
xchg
cmpsl
pushf
dec
pop
sbb
pop
push
fbstp
xor
jno
or
pop
or
mov
sbb
lds
fistps
add
mov
mov
popa
jp
insl
es
ss
mov
insl
dec
pop
test
pop
jmp
ud1
imul
xchg
lcall
fucomp
add
jns
bound
aaa
sbb
mov
dec
inc
insb
push
xchg
sub
mov
xor
and
dec
xchg
and
push
fwait
int
nop
sahf
aas
rcrb
push
xchg
stc
aaa
fistpll
mov
aad
sbbl
pop
and
xor
xchg
repz
inc
sub
push
les
jns
dec
pusha
push
adc
rolb
mov
cmp
fiadds
push
es
lahf
bnd
pop
mov
cmpsl
dec
or
push
sub
in
insl
jae
gs
sbb
sub
jne
xor
icebp
pop
sub
fldt
fstp
pop
mov
lock
cmpsb
bound
or
sbb
cs
jns
mov
xchg
xchg
nop
lods
push
lds
push
sbb
dec
lods
cmpb
inc
or
push
dec
je
testl
rcr
stc
lcall
call
sub
cmp
xchg
and
inc
adc
push
mov
icebp
es
ljmp
pop
mov
pop
jg
cwtl
adc
xchg
xchg
cmpsb
outsb
je
adc
dec
hlt
and
mov
imul
xchg
pop
sbb
mov
or
rorl
lds
push
jecxz
rcr
inc
mov
cmp
sub
bound
pop
aad
mov
sbb
lock
xchg
aam
cmpsl
out
cwtl
pop
arpl
or
xorl
loopne
int3
cli
dec
loopne
ror
mov
sub
fbstp
insl
ljmp
pop
add
adc
idivl
mov
lods
stos
mov
mov
push
or
repz
movsl
addr16
mov
push
je
roll
pop
sub
xchg
push
in
dec
lock
je
xor
ja
lock
xchg
subb
xor
xchg
add
jne
scas
icebp
xchg
iret
enter
adc
pop
or
cmp
sahf
pop
movsl
and
xor
loop
jb
adc
aas
jno
imul
lock
mov
inc
xor
mov
push
loope
push
out
stc
loop
dec
aam
inc
pusha
push
out
aas
mov
je
imul
push
xchg
xchg
push
in
xor
adc
lds
push
dec
mov
xchg
fwait
mov
mov
test
pop
or
xor
adc
push
sti
xchg
xor
adc
cltd
data16
fucomp
lods
lcall
dec
mov
ja
popa
cmp
inc
cs
xorl
enter
xchg
mov
jno
pop
pop
or
cmc
loope
out
shll
imul
xchg
fs
mov
mov
xchg
sbb
mov
pushf
xor
mov
daa
daa
std
mov
into
movsl
xlat
fs
stos
xchg
sahf
push
out
mov
push
out
xchg
xor
addr16
pushf
pop
shrb
or
sarl
daa
mov
and
das
sbb
jmp
sti
loope
ss
test
xor
lods
in
jb
inc
push
pop
cwtl
loope
xor
inc
shlb
test
sbb
push
rorl
xor
test
xor
jle,pt
mov
sub
dec
push
stos
std
mov
pop
dec
leave
dec
repz
jle
sti
pop
xchg
data16
ucomiss
cmp
xchg
mov
pop
scas
aaa
and
sub
je
adc
int
mov
sub
pop
imul
cmpb
rol
xor
ficompl
js
sbb
mov
cwtl
cmpsb
repnz
mov
dec
cmpsb
shr
fs
ret
inc
sub
cld
cmpsl
rolb
int3
daa
xchg
les
sarl
inc
loope
sbb
sbb
jne
mov
inc
mov
fbstp
jmp
into
mov
in
mov
test
lahf
test
push
stos
push
cli
lahf
sub
push
push
dec
pop
xor
outsl
add
div
pop
repnz
test
xchg
or
or
or
add
shll
jl
shlb
fsubrs
frstor
dec
mov
xor
mov
inc
sarb
jl
lea
cmc
outsb
fsubp
jnp
outsb
push
pusha
cld
sub
fisubs
jle
mov
mov
cmp
lret
cltd
test
xchg
xlat
mov
scas
jo
push
pop
or
jb
mov
cld
js
adc
xor
cmp
dec
push
xchg
divb
sub
xor
jge
pop
int3
push
popf
dec
push
jns
add
dec
mov
pusha
adc
sub
sub
push
cmp
cltd
pop
sub
daa
leave
ljmp
xchg
arpl
cmp
mov
repnz
add
adc
xor
push
cwtl
push
sub
and
xor
lock
adc
cs
ljmp
pop
pop
sbb
bnd
pop
lods
jg
lret
scas
pop
ss
rcr
mov
pop
xchg
inc
jns
lods
popa
aaa
dec
testl
dec
popl
jbe
fsts
in
jp
mov
jbe
fldt
mov
pop
aam
test
jae
cmc
xor
mov
xor
les
fwait
jnp
pop
xor
xchg
or
in
push
je
sbb
mov
xor
sbb
orb
mov
pop
test
in
js
getsec
mov
jo
mov
icebp
js
dec
inc
jo
jno
rol
jge
cwtl
stc
test
jp
sahf
nop
je
adc
outsb
push
add
arpl
shrl
xor
fstl
dec
lret
jns
cmpb
cwtl
xlat
sub
push
sbb
sub
loope
fwait
cmp
cs
divl
fwait
pushf
addb
add
push
mov
jae
decb
cmp
pop
leave
and
pop
je
std
pop
test
cmpl
enter
push
fildl
pop
mov
scas
nop
repz
mov
xlat
mov
xor
sbb
mov
hlt
std
pop
addb
mov
pop
loop
cmpsb
jns
stos
mov
iret
rorl
push
filds
push
je
push
das
outsl
dec
cwtl
pop
push
pushf
push
mov
in
iret
jne
pop
mov
xchg
inc
fmuls
fstpl
sub
cmp
xchg
xor
add
mov
sbb
popa
js
arpl
xchg
idiv
lahf
ret
adc
in
xlat
mov
push
adc
imul
add
clc
xlat
loope
and
pop
rorb
dec
scas
push
inc
push
imul
adc
push
lahf
add
jns
mov
add
inc
mov
pop
addr16
ret
xchg
das
lods
pop
lods
push
bound
cmpsl
pusha
dec
inc
push
inc
arpl
das
ljmp
stos
out
adcb
and
pushf
ss
sti
fs
lods
cs
pop
xchg
xchg
adc
pop
mov
std
dec
or
and
pop
pop
inc
data16
cli
movsb
pushf
sbb
xor
cli
enter
es
jno,pt
int3
ss
jle
lds
jp
push
and
and
sub
push
jle
pop
pop
iret
push
test
stc
xlat
sbb
nop
xor
push
mov
dec
ret
mov
inc
ja
into
pusha
int3
gs
sub
adc
fs
mov
mov
add
inc
xchg
pop
test
mov
lods
cwtl
cmp
lahf
cli
sti
add
add
shlb
xchg
push
push
ds
loope
inc
or
loopne
or
das
xchg
ja
or
lret
in
sbb
es
pop
outsb
int
add
jbe
aaa
test
clc
push
inc
push
xchg
push
clc
decl
mov
ja
mov
adc
pop
push
inc
jecxz
and
insl
and
mov
push
dec
pusha
cmp
leave
out
in
jmp
mov
push
adc
sub
push
push
repz
outsl
add
in
lahf
push
adc
xorl
and
testl
cmp
scas
sbb
lock
push
pop
add
pop
test
mov
lret
and
andl
lahf
in
stos
mov
pop
imull
mov
das
cltd
lret
jno
outsb
aam
pop
add
xor
inc
dec
clc
push
sahf
js
std
mov
or
fstpt
mov
xchg
xor
lods
adc
pop
std
insb
add
and
add
scas
or
movb
sarb
xor
movsl
mov
add
daa
cmp
call
sti
in
es
push
push
icebp
test
lcall
mov
hlt
subl
jno
pop
adc
aam
mov
jecxz
or
xor
ljmp
int3
mov
pop
es
cmp
xadd
icebp
out
gs
push
sbb
or
xchg
lahf
outsl
movsl
jle
lds
jecxz
adc
adc
mov
or
fdivs
or
int
rclb
or
fimull
scas
mov
gs
jle
fmuls
xor
or
test
mov
push
sbb
cmp
and
or
push
fsubr
adc
outsl
add
jle
xchg
hlt
ljmp
pop
test
cmpsb
xchg
inc
pop
icebp
nop
aad
outsb
lock
fiaddl
inc
dec
pop
int3
xor
inc
mov
ret
inc
mov
push
loopne
mov
xlat
adc
and
cmp
jecxz
lcall
fstl
xchg
add
add
aam
jnp
ljmp
adc
lods
push
enter
in
movsb
cmp
cld
ror
scas
insb
push
mov
loope
outsb
mov
pop
filds
xchg
mov
inc
dec
dec
add
rcrl
ss
ljmp
inc
ss
xchg
bound
jp
enter
stos
add
hlt
push
cmp
cmp
mov
xchg
ror
pop
add
jecxz
pop
inc
addr16
shr
popf
jb
mov
xor
push
mov
xor
pop
jne
inc
dec
inc
pushf
dec
jne
icebp
jmp
packssdw
inc
fiaddl
mov
nop
fwait
add
sarb
mul
in
in
add
jge
stos
push
je
ljmp
scas
or
test
push
ret
mov
sar
bound
cmp
mov
int
movsl
clc
jnp
shrl
movsb
mov
lods
in
xchg
mov
jne
cmp
dec
xor
pop
ja
sub
pop
cwtl
int
mov
jge
pushf
sbb
popf
ss
lcall
jle
test
sbb
loopne
jg
pop
punpckldq
adc
pushf
sbb
mov
je
outsl
lods
xor
ds
mov
xchg
dec
fwait
jg
xchg
out
adc
and
jbe
pop
cmpb
or
in
and
xchg
xor
ret
es
lds
stos
into
pop
repnz
cld
loop
jle
lcall
mov
into
mov
xchg
cmp
inc
cmpsl
nop
xor
jl
xchg
mov
testb
xchg
addr16
jno
fcmovu
mov
flds
mov
push
scas
jne
or
ljmp
add
loop
lods
loope
test
cmp
jne
and
mov
pusha
shll
imul
in
xchg
push
cmp
add
mov
mov
add
jl
pop
jns
xchg
stc
pushf
ret
ret
clc
dec
sbbb
push
shll
out
inc
pop
lods
sbb
rclb
lea
jne
int3
adc
aad
cmpsb
mov
cs
xchg
mov
sbb
ficomps
add
and
in
in
jno
into
shll
mov
sub
and
sub
movsl
mov
test
fbld
jns
lods
cmp
hlt
or
aad
repnz
cmp
clc
subl
fnstcw
cmp
lea
add
das
jno
fsubs
push
adc
movsb
call
repnz
xor
cmp
in
ss
xor
lahf
call
sub
push
dec
rcpps
mov
addr16
gs
mov
jle
inc
jnp
aad
mov
cmpsb
hlt
ss
dec
test
xchg
ljmp
cmp
mov
aaa
test
test
filds
das
movsl
insl
andb
andb
stos
stos
cvttps2pi
daa
xlat
inc
mov
insl
out
repz
in
lahf
inc
nop
dec
imul
into
and
inc
sub
lret
into
dec
jl
xchg
out
xor
data16
ficompl
inc
xor
rcll
mov
mov
fistpll
pop
add
sub
stos
and
mov
or
outsl
xor
xchg
das
add
mov
mov
and
fidivrl
xchg
imul
xchg
iret
aam
jmp
daa
mov
pop
das
jnp
xor
xchg
mov
inc
fidivl
dec
arpl
jo,pt
pop
adc
sub
mov
or
and
push
lahf
push
popf
push
xchg
jle
adc
adc
decl
adc
cmc
xchg
mov
add
xchg
xchg
lret
add
and
and
inc
rcll
or
adc
ljmp
mov
clc
sub
lock
scas
mov
cmp
mov
inc
xchg
insl
mov
sub
pop
jecxz
fildll
pop
dec
mov
mov
fldl
rol
sbb
mov
pop
aaa
icebp
lret
mov
xor
inc
push
mov
aas
clc
fxch
mov
inc
push
mov
sbb
add
dec
xchg
xlat
pop
push
outsb
push
push
fsubrl
call
adc
orl
mov
jnp
inc
inc
jmp
add
sbb
pop
shlb
pop
add
adc
sub
rclb
mov
mov
or
pushf
nop
mov
into
rorl
xor
jg
movsl
aad
pop
insb
push
xor
pop
sbb
je
mov
xchg
pop
xor
xor
cmp
jbe
and
out
aas
sbb
sbb
mov
push
jmp
xchg
rcrl
mov
cmp
push
test
and
iret
xor
cmc
mov
or
dec
xchg
mov
adc
mov
sbb
mov
je
jno
mov
out
mov
scas
or
stos
leave
xchg
test
vmovlps
jo
repnz
mov
cmp
push
mov
ffree
imull
pop
mov
inc
hlt
xor
or
mov
in
dec
or
aam
sbb
mov
jecxz
ja
jmp
ja
aam
cltd
dec
nop
clc
lcall
gs
sub
mov
cltd
xchg
rorb
idiv
add
into
out
dec
jp
sub
loopne
xchg
mov
xchg
cmpsl
or
fisubs
fisubs
mov
xor
lods
push
lret
sbb
das
int
test
mov
inc
dec
sub
ljmp
shl
jns
xchg
xchg
jb
je
push
fists
mov
rclb
mov
jo
lds
sub
adc
mov
loopne
push
call
pop
scas
rolb
dec
xor
sbb
sub
gs
cmp
adc
xchg
aad
cmp
mov
or
test
jl,pt
clc
cmpsb
add
popf
es
add
bsr
aaa
loopne
sbb
xor
push
outsl
adc
mov
outsl
push
shr
sbbl
movsb
mov
xchg
xchg
sub
ja
xor
nop
out
adc
jmp
push
jmp
sbb
subl
stos
arpl
xchg
sar
mov
std
leave
repnz
ljmp
pop
sbb
fildll
adc
imul
xor
adc
inc
jg
cmp
je
in
sub
shrl
cmp
inc
inc
cmpsb
nop
add
popf
or
or
fsincos
mul
popf
pop
cli
jne
enter
lret
filds
inc
popf
sbb
ja
mov
fmull
mov
or
mov
sbb
xchg
add
insb
sub
jnp
scas
cli
and
bound
dec
out
jle
test
test
in
inc
mov
pushl
fidivrs
lds
sbb
pop
xchg
jp
adc
xor
pop
push
js
cmp
test
mov
mov
jmp
push
dec
or
sbb
cmc
movsb
fdivrl
add
jo
adc
mov
test
push
xor
and
pop
and
push
sub
in
roll
mov
push
xlat
mov
loopne
ja
xchg
loopne
scas
pop
fsts
add
fiaddl
enter
in
cmp
ds
mov
xchg
add
adc
shll
dec
fldenv
pop
or
int3
fdivrs
dec
push
mov
cs
popa
cld
xchg
lods
enter
pop
in
or
mov
ffreep
in
push
xchg
ret
mov
jecxz
movb
pushf
pop
cld
jb
js
push
ja
jp
push
pusha
push
push
sahf
mov
cs
or
sbb
ud1
mov
inc
xor
push
adc
or
adc
fwait
push
jmp
addb
jmp
xchg
lods
push
into
jno
adc
clc
jbe
jnp
sub
push
sub
adc
pop
fadds
lahf
gs
cmp
fldcw
inc
lods
jno
mov
jb
scas
cli
cmp
int
add
mov
add
cmp
aam
mov
add
mov
sub
leave
push
in
in
call
in
mov
pusha
push
into
popa
int
mov
scas
pop
xor
lock
test
inc
loopne
adc
fisttpl
filds
add
cwtl
je
pusha
gs
xchg
test
aad
fwait
popf
add
push
mov
adc
xor
pop
fwait
in
arpl
rorb
out
imul
inc
sub
popa
jmp
jne
jne
stos
inc
cmp
repnz
xchg
ret
sti
aas
or
push
add
push
xor
pop
dec
pop
xchg
xchg
adc
lcall
enter
cld
popf
inc
arpl
sbb
into
cmp
jo
mov
pop
add
fldln2
cmp
pop
or
enter
sarl
and
jmp
or
sbb
pop
mov
mov
orl
dec
jmp
mov
sub
sbb
dec
jo
mov
outsb
addr16
cmpsb
mov
push
out
pop
add
hlt
mov
hlt
push
mov
xor
std
out
fcomps
pop
mov
mov
adc
mov
cld
push
push
stos
popa
and
out
pop
dec
out
add
and
mov
insl
xlat
js
fsubs
mov
add
imull
and
mov
int
push
leave
mov
dec
bound
push
icebp
dec
idivl
pop
in
push
xlat
loope
outsl
stc
aam
sub
dec
adc
das
add
xchg
je
push
sbb
cmp
lahf
xor
add
mov
ljmp
jae
mov
pop
mov
cmpsb
push
es
mov
pushf
stc
test
pop
daa
mov
dec
cld
jb
movl
sahf
and
ljmp
mov
cwtl
mov
sub
loop
test
mov
ds
mov
aaa
mov
call
es
clc
xor
arpl
inc
pop
lahf
dec
popf
fistl
ds
sub
cmc
xor
addr16
loopne
mov
xchg
push
iret
mov
cmp
divb
jp
bound
mov
push
push
pop
push
sti
or
cmp
xchg
gs
bound
data16
jl
add
add
push
les
pop
std
add
dec
sub
sub
mov
push
jmp
pop
push
jmp
or
andb
dec
dec
js
loop
push
dec
test
lahf
jle
dec
add
hlt
pop
fdivr
mov
xor
fdivrl
lds
sub
sar
pop
movsl
sub
stos
mov
xor
jmp
fcmovne
pop
mov
jg
jns
in
mov
out
mov
adcb
xchg
xor
insl
iret
inc
sbb
jno
or
mov
jae
jno
cwtl
add
xchg
addr16
adc
dec
cmp
or
pop
jl
repnz
adc
dec
cmp
into
cltd
sahf
sahf
or
push
inc
imull
or
jae
test
mov
adcb
cmp
pop
push
cltd
scas
and
xor
jmp
or
pop
jno
inc
fidivs
cmpsb
mov
jl
out
or
movsl
add
fisttps
adcb
push
mov
cmp
movsl
cmp
popa
xchg
dec
test
mov
adc
enter
pop
cmp
jbe
dec
loop
and
insb
aaa
xor
jae
push
push
call
or
xor
hlt
imul
int
and
int3
push
fidivs
jne
dec
jns
loopne
xor
sub
xchg
cmc
mov
or
xorb
gs
adc
or
mov
test
or
inc
adc
push
std
lods
mov
push
rcr
daa
ret
xchg
leave
repnz
cmp
sub
imul
sbb
in
jmp
imulb
fwait
lea
in
mov
push
xchg
dec
inc
addr16
adc
jns
xchg
xor
rcll
dec
xlat
adc
dec
mov
test
sbb
jbe
out
imul
arpl
test
repnz
das
fldt
mov
lods
test
sti
out
sbb
xchg
push
cmp
jecxz
pop
arpl
pop
xrelease
movl
mov
and
popa
ds
rcll
push
push
popa
inc
lcall
mov
mov
lea
sub
lret
sbb
xor
loope
fisubrl
les
imul
push
lock
mov
stc
mov
shll
xlat
out
lret
or
ds
nop
inc
or
xor
adc
aas
cwtl
rolb
imul
mov
xchg
push
sbb
nop
sub
cmpb
mov
enter
pop
nop
sar
jmp
dec
cmpsl
je
jns
xor
add
xor
xchg
push
sub
push
stos
dec
mov
push
fs
mov
pop
mov
lods
dec
aam
push
mov
in
fisubl
inc
jecxz,pt
xor
cmc
sahf
inc
int3
mov
mov
xor
imul
mov
shl
aad
sub
nop
xlat
loopne
inc
inc
imul
scas
pop
xchg
sub
mov
xor
push
lods
cmpsb
inc
jne
dec
push
in
and
xlat
dec
pop
and
xchg
cmp
and
dec
in
imul
or
lcall
xor
pop
xor
sbb
adc
lea
outsb
dec
faddp
pop
xchg
pop
out
dec
insb
push
fimuls
push
sar
shrb
mov
jno
mov
stc
aas
sbb
jae
jg
mov
dec
loopne
pop
mov
ja
out
arpl
jle
jge
xchg
cmc
adc
clc
mov
mov
dec
push
lret
aad
inc
enter
icebp
stc
fcomip
std
test
addr16
shl
es
lds
sbb
cmpb
cmp
ss
clc
repz
int3
cmp
mov
lcall
cmp
sub
fwait
cmp
rorb
push
ficompl
cltd
add
or
cltd
sbb
popa
cwtl
inc
push
ror
mov
int3
mov
push
ss
movsb
xor
push
lods
sbb
xor
test
add
bound
ja
add
add
pusha
push
push
xchg
inc
leave
dec
pop
xlat
ljmp
dec
scas
add
xchg
cmp
rcrb
rclb
mov
xor
jnp
das
xor
repz
loope
inc
scas
and
sbb
xchg
adc
inc
or
pop
inc
cmp
lods
aad
jnp
inc
pop
gs
push
or
sbb
adc
mov
icebp
das
cs
dec
out
outsb
push
movsl
ret
out
pop
jmp
xchg
loop
pop
rorb
dec
push
inc
fdivrl
shrb
imul
sahf
adc
out
sub
sbb
stos
sub
dec
jmp
jg
add
dec
cmp
fidivl
mov
pop
je
int
add
push
mov
inc
cmpsb
icebp
xchg
cmp
outsl
aad
ljmp
and
or
ss
sub
push
xchg
cmpl
sub
add
pop
pusha
push
mov
add
mov
pop
jne
jae
jne
sbb
lcall
push
jge,pt
shlb
dec
cmp
gs
jo
insb
inc
pop
mov
xor
mov
mov
jge
cltd
mov
leave
lods
inc
out
pop
gs
loope
jp
dec
mulb
shrb
pop
ficoms
and
pop
dec
stc
mov
cltd
sub
jmp
les
hlt
scas
loop
negl
or
jge
lods
in
sbb
xor
mov
jbe
dec
jmp
clc
mov
push
xorb
push
js
stos
out
inc
sub
pop
and
daa
push
inc
lea
loope
into
push
pop
or
add
aas
xchg
adc
scas
ret
dec
inc
cmp
pushf
jno
jnp
xor
sbbb
dec
mov
push
jmp
rcrl
addl
cs
mov
rep
or
shlb
and
xchg
and
stos
xor
call
mov
or
lods
or
adc
or
pusha
lea
cmp
push
push
imul
inc
test
xchg
ficomps
mov
cmp
mov
add
ret
push
out
cmpsl
leave
xchg
adc
xchg
mov
ja
adc
mov
es
out
insb
mov
push
xchg
adc
or
jmp
mov
or
imul
and
inc
inc
sbb
bound
xor
lahf
mov
push
dec
mov
call
xor
pop
add
mov
iret
fwait
inc
pop
out
out
xor
pcmpeqd
iret
andl
add
fsts
pop
inc
sbb
adc
sti
lds
addr16
jnp
add
inc
sahf
dec
idivb
addr16
xlat
fcmove
xchg
cltd
mov
rcl
icebp
ds
pop
xor
scas
mov
sub
fisubs
mov
mov
call
outsb
jecxz
mov
mov
stos
insb
xor
jne
xchg
mov
xor
movsl
or
jecxz
ret
jno
roll
sub
fistl
addr16
pusha
fldt
mov
dec
mov
pop
mov
icebp
aas
adc
stos
data16
out
mov
subl
sbb
lock
mov
cmp
cs
mov
push
pop
aam
popa
das
sub
in
push
mov
push
addr16
mov
fidivrs
arpl
iret
test
dec
ss
xchg
outsl
pop
cwtl
enter
orl
mov
sbb
clc
fdivl
push
jae
js
pop
and
jno
test
insl
add
daa
cmp
sub
inc
inc
lds
fbld
iret
pop
dec
fs
xlat
push
fnstenv
clc
push
pop
sbb
jecxz
adc
fadd
sahf
int
cli
adcl
jns
mov
ret
inc
repz
jle
aas
xchg
add
jle
jnp
add
sarl
int
xchg
in
dec
test
test
rcrl
sbb
loopne
ficomps
loop
out
adcb
les
jg
call
pop
popa
cmp
idivb
std
lret
mov
xor
jle
adc
cmpsl
fdivs
test
pop
pop
jle
jmp
ljmp
mov
test
cld
mov
out
and
dec
aam
inc
sbb
lcall
mov
loope
jg
lods
lret
lea
mov
out
jo
add
popa
jo
xchg
cs
in
repnz
cs
jge
push
scas
and
mov
sti
adc
jl
stos
cmp
jo
test
popa
and
sbb
loope
mov
cli
add
ja
mov
push
lret
pop
notl
sbb
mov
cmp
inc
mov
mov
inc
cmp
syscall
je
sbb
pusha
es
js
jp
dec
push
fdiv
loop
sbbl
inc
or
lret
push
popa
dec
adc
cmp
cmp
lcall
pop
jp
jnp
dec
xorb
jns
jns
sbb
stos
ja
and
mov
enter
mov
bound
sahf
leave
icebp
add
aaa
push
cltd
insl
and
aaa
out
stos
in
jae
aaa
popl
mov
cltd
std
push
cs
and
add
and
add
inc
je
adc
in
stos
sti
and
add
mov
in
shrl
push
test
jmp
pop
cli
aaa
and
push
sbb
mov
or
or
negl
inc
aad
addr16
sbb
cmpb
rcrl
xchg
sbb
sbb
movsl
loope
loopne
dec
ret
push
push
sar
popf
mov
out
pop
sbb
sbb
dec
jnp
jne
outsb
mov
sarb
or
ljmp
add
cmp
mov
pusha
jecxz
loop
jg
xor
stc
push
mov
imul
jb
inc
out
dec
fimuls
add
sub
sbb
jae
jne
adc
test
mov
cmp
sbb
test
movsl
mulb
iret
stos
dec
out
loopne
enter
aas
out
cld
jns
rdpmc
add
pop
in
dec
pop
pushl
test
pop
fmul
sub
add
aam
adc
adc
jnp
ds
mov
repnz
rcr
addl
pop
jns
pop
lods
jge
lret
ret
fistl
jl
sbb
popf
or
std
adc
xchg
adc
cmp
mov
inc
ffree
in
cli
cmpsl
mov
jle
in
outsb
or
hlt
and
jmp
and
data16
sub
mov
ffree
mov
add
sub
lock
jbe
cmp
inc
hlt
and
push
mov
push
js
jb
lods
repnz
cmpsl
sarl
adc
cmpsl
cmp
cmp
bound
daa
mov
xchg
shr
scas
loope
pusha
adc
bound
add
lret
test
fcomps
clc
mov
int
cmp
sbb
int3
jo
cmpsb
ljmp
cmp
push
aad
punpckldq
and
ds
pop
push
jno
add
imulb
scas
stos
out
sbb
push
push
mov
hlt
cltd
lea
cmp
loope
push
imul
sbb
mov
icebp
jns
cld
call
or
mov
xchg
fiadds
icebp
xor
and
or
mov
add
cmp
or
fildl
dec
add
or
int3
cld
stos
mov
mov
jp
sbb
add
mov
ja
call
sub
and
std
pop
mov
sub
enter
mov
jg
fwait
add
lock
cmp
rorl
sbb
lret
pop
repnz
and
mov
push
adc
loop
adc
xchg
push
mov
or
mull
int3
das
in
hlt
pop
push
in
int3
sbbl
jae
inc
daa
andl
sub
aam
scas
xor
rolb
mov
xchg
xor
lods
repz
xchg
fimull
inc
xchg
xchg
into
mov
pop
mov
aad
xchg
sub
fcomps
out
outsb
movsb
push
movsb
dec
enter
scas
push
fnstsw
popf
mov
pop
mov
xchg
dec
call
fdivrl
xchg
mov
lret
nop
cmpb
xchg
enter
ljmp
icebp
or
pop
dec
arpl
add
fldcw
or
ja
inc
bound
repnz
cmpsb
aad
aam
inc
sub
xlat
repnz
call
sbb
aam
mov
sub
sbb
out
jl
add
or
push
pop
add
mov
cs
xchg
xchg
dec
std
dec
pop
adc
pop
outsl
pop
inc
das
inc
mov
add
cltd
repz
sbbb
mov
gs
repnz
xchg
and
xor
pop
mov
mov
call
insl
cs
imul
or
mov
push
jmp
out
mov
fadds
xor
pop
and
aaa
das
jnp
xor
aaa
repnz
out
shll
xchg
leave
jge
xor
sbb
imul
mov
cltd
fcmovnbe
push
sbb
mov
cmp
add
ret
jno
dec
jg
mov
mov
in
arpl
nop
stc
cwtl
ja
stc
push
lock
insb
bound
xor
in
lds
cmp
inc
add
js
mov
insl
mov
test
stos
cmp
mov
mov
inc
in
dec
pandn
dec
jmp
push
aad
sbbl
pop
sub
fcmovb
test
sbb
or
or
imul
cli
jae
cmp
sti
mov
aam
and
jl
sub
push
push
mov
bound
sbb
sti
xlat
or
fistps
dec
mov
ss
in
xor
push
cltd
clc
push
lods
push
ficomps
xlat
fcoms
push
fcomps
les
xlat
iret
sahf
mov
pop
mov
or
es
je
pop
adc
sub
adc
dec
negl
loopne
outsb
insl
pop
out
mov
xchg
repnz
push
xor
enter
rclb
lret
mov
xor
add
push
inc
sub
push
fimuls
jle,pn
or
pop
popa
leave
sbb
fiadds
pop
push
xor
enter
and
fisubrl
stc
mov
adc
and
movsb
add
decl
cmp
cmp
aad
mov
sti
mov
push
cmp
pop
fdivr
or
clc
and
pop
shll
aam
fistl
or
popa
xor
push
incl
sbb
lock
mov
ja
out
jbe
mull
push
lods
inc
ret
das
int
xchg
or
frstor
int3
ljmp
fcoml
mov
mov
jmp
jnp
or
and
xlat
lds
repnz
inc
xchg
aad
ret
adc
sbb
enter
les
stos
imul
adc
cld
add
mov
scas
out
lahf
ret
mov
xchg
scas
dec
insl
loop
mov
lods
jge
and
fwait
add
xlat
arpl
into
imul
out
jge
push
dec
xor
and
mov
addr16
push
inc
cld
es
out
mov
fstpt
out
or
sub
out
xor
or
cmp
out
rorl
ret
mov
mov
pop
push
jae
repz
test
mov
imul
jbe
fs
out
lret
mov
jl
leave
outsb
and
dec
xor
insl
jbe
shlb
mov
push
pop
cmp
add
pop
dec
jmp
mov
aas
shr
inc
pop
ret
es
lret
pop
test
push
sbb
addr16
cmp
stos
jmp
ret
push
fiadds
push
or
jle
or
xchg
jl
fdivrl
outsl
mov
rclb
mov
inc
sbb
cmc
mov
scas
ja
cwtl
stos
int
pop
leave
mov
roll
incb
sbb
clc
cmp
xchg
pop
mov
mov
fs
sbb
je
in
dec
dec
sbb
cmpsl
insb
add
inc
mov
ds
dec
add
and
inc
xor
lret
lds
adc
or
xlat
fbstp
push
scas
out
faddl
xchg
popa
sbb
push
shl
outsl
sub
addr16
adc
adc
inc
sub
mov
xor
add
pop
fadd
mov
ljmp
shl
jecxz
push
pushf
loope
sbb
push
jecxz
lds
les
mov
inc
jle
mov
outsl
cmp
int
clc
insl
rcl
ja
pop
idiv
js
inc
mov
xchg
mov
mov
into
xchg
leave
push
test
mov
xorb
inc
das
mov
loop
pop
xor
setp
fildll
ret
jb
sub
or
loopne
sub
jp
mov
fistpll
cli
mov
jmp
in
jge
mov
xor
popa
ds
push
daa
xor
push
inc
sub
mov
stos
mov
inc
pop
lock
adc
mov
aam
dec
int3
mov
and
sub
je
daa
or
inc
out
imul
jp
add
clc
xlat
pop
insb
adc
dec
adc
mov
fldlg2
push
jge
out
inc
xchg
add
push
dec
pop
test
inc
sub
es
stos
xor
hlt
lcall
dec
pop
rorb
in
pop
gs
pop
sti
fwait
callw
mov
adc
insl
pop
es
pop
test
pop
xchg
call
xchg
inc
mov
loop
mov
fwait
xor
in
cmpsl
cmpsl
out
inc
jp
inc
lcall
incl
and
jl
jge
enter
and
js
xor
cmc
mov
dec
je
stos
call
in
add
mov
or
and
xchg
fsts
stc
ss
lea
movsb
cmp
das
daa
shll
mov
jae
add
inc
fwait
xchg
xor
fmuls
lcall
notl
adc
xor
cmpsl
sbb
inc
xor
sahf
movl
scas
in
lcall
mov
mov
xor
stos
cwtl
and
das
outsb
xchg
repnz
sti
jmp
rcrl
mov
repz
iret
std
cmp
xbegin
inc
inc
pop
add
xor
int
clc
sbb
andl
xchg
xor
repz
or
mov
push
lods
lea
mov
xchg
rol
call
cwtl
cmpsb
jb
mov
xor
incw
cmp
nop
mov
ljmp
add
out
jne
aad
adc
mov
pop
shl
dec
das
ss
xor
pop
inc
adcl
enter
leave
dec
cmc
les
enter
aam
dec
stc
movsl
push
sbb
mov
add
xchg
mov
sbb
inc
imul
test
sub
hlt
push
or
cltd
xchg
pop
add
xor
and
daa
jne
adc
test
ss
xor
jge
adcb
ficomps
int3
pop
pop
and
hlt
movsl
jg
mov
jle
lock
mov
lods
lock
shrd
in
mov
repnz
push
mov
mov
jne
ss
or
add
pop
push
incb
pusha
xor
in
mov
repnz
cmp
xchg
jecxz
xchg
inc
dec
pop
fisttps
mov
and
fnstenv
fisubs
mov
dec
push
lods
add
fwait
orl
mov
jecxz
movsb
mov
imul
cmpsl
test
sbb
in
and
sahf
ljmp
hlt
jo
cwtl
ds
sub
dec
cmp
xchg
fstl
dec
in
mov
in
in
clc
sahf
mov
sub
pop
mov
cmp
popa
fbstp
bound
inc
mov
jle
je
mov
das
cmpb
dec
sbb
into
jle
or
cwtl
rorb
xchg
xchg
adc
movntq
push
sbb
fdivrl
sbb
movsb
lds
test
xchg
aaa
ss
dec
push
xchg
sbb
or
cmp
mov
xchg
test
out
mov
add
lret
pop
mov
sti
mov
mov
leave
push
push
fbld
mov
push
pop
adc
and
dec
lret
ljmp
or
rclb
fisubrs
mov
push
xor
test
call
or
loop
into
add
ja
jns
cmp
test
sub
rep
jecxz
sbb
or
and
cmp
std
jmp
fmuls
inc
and
and
andl
mov
addr16
sbb
add
out
and
cltd
imul
insb
paddq
sub
jae
jp
inc
mov
sub
xor
adc
stc
xchg
mov
pop
mov
daa
or
add
cmp
pusha
movsl
xor
outsb
mov
out
jl
adcb
lcall
cltd
shlb
push
fbld
enter
arpl
roll
sbb
cmp
dec
jge
jge
mov
adc
mov
imull
ljmp
jb
ss
push
jo
add
jmp
push
lret
sub
fcomi
sti
lret
je
test
aam
int
out
mov
sarb
movsl
pop
xchg
inc
ljmp
idivb
jmp
cmp
mov
in
adc
adc
pop
call
test
mov
cli
rcrb
mov
sub
cmc
sbb
jnp
les
loope
mov
or
gs
int3
outsl
idiv
push
mov
adc
rorb
xchg
cmp
xchg
test
xchg
adc
outsl
nop
fwait
mov
shlb
push
ret
nop
fisubrl
mov
jg
data16
clc
and
mov
mov
cltd
arpl
jb
xlat
jns
sbb
mov
jae
rorb
mov
xor
out
call
or
pop
fdivr
subb
in
jecxz
lds
mov
xchg
dec
inc
iret
or
fsts
les
sbb
out
push
mov
jecxz
ljmp
sbb
add
sub
push
mov
lret
pop
js
push
stc
imul
sahf
sbb
mov
into
mov
fildl
adc
call
fsubl
and
jbe
and
cs
testb
dec
sub
pop
cmp
pop
add
jb
mov
out
movsb
xchg
jle
jae
loope
cmp
pop
leave
dec
sbb
dec
gs
xor
push
mov
xchg
test
scas
lcall
aas
xchg
sbb
addr16
mov
dec
pop
lret
lods
jmp
movsb
call
arpl
addr16
pushl
fldl2e
or
pop
jbe
jbe
push
adc
cld
cmp
testb
pop
push
or
push
xor
mov
clc
rorb
or
mov
aam
cmp
sub
ffree
cmpsl
sahf
push
pop
clc
mov
pop
pop
gs
stos
dec
or
add
push
or
push
xchg
pop
xor
xchg
sahf
xlat
jp
and
mov
dec
movsb
dec
push
sbb
sbb
jno
out
out
es
jbe
sbb
ja
in
nop
mov
or
jnp
jo
jmp
xor
imull
xlat
lods
enter
lods
lahf
fnsave
push
loopne
jo
in
enter
pop
pop
in
pop
cmp
inc
jb
mov
ret
fs
iret
mov
cmp
les
test
popf
ficompl
mov
cwtl
mov
pop
out
repnz
hlt
scas
xchg
aad
rolb
pop
pop
mov
enter
fdivrp
inc
jno
inc
add
sbb
das
out
jbe
imul
add
jle
push
pop
or
loopne
icebp
and
sbb
jmp
cltd
mov
cmp
subb
pop
cmp
movsl
movsb
push
sti
cmp
mov
pop
and
mov
lahf
lds
dec
cmpb
repz
mov
jo
pop
mov
pop
jmp
outsb
sub
out
pop
loopne
pop
xchg
shlb
jbe
adc
and
xchg
add
adc
pop
imul
dec
mov
adc
call
fimuls
icebp
mov
dec
cld
add
or
jmp
ds
fdivrl
push
cmc
xchg
outsb
push
and
jnp
ret
popf
inc
std
jnp
jnp
aaa
shll
faddl
ret
test
insl
mov
xchg
mov
add
repz
in
rcll
dec
push
or
mov
dec
inc
xchg
cmp
icebp
dec
dec
out
add
or
inc
cs
jne
ret
cmp
mov
and
mov
cmc
enter
push
dec
cld
jnp
rorb
loopne
fwait
int3
inc
sub
xchg
mov
out
mov
inc
sub
add
outsl
pop
inc
inc
aas
or
stos
stos
shll
and
push
ret
popf
movsb
lods
sbb
or
fwait
xchg
cmp
fwait
mov
scas
mov
loop
pop
lcall
lret
push
pop
push
push
icebp
cmp
cmpsb
or
shr
popf
push
pop
hlt
fstpl
add
std
and
xor
call
cld
lahf
or
jns
sbb
lea
push
dec
and
xlat
push
rcrb
mov
mov
cli
or
gs
or
insl
mov
sbb
jmp
mov
rcl
dec
jno
and
cmp
ds
mov
ss
mov
cs
lds
jmp
dec
add
sti
out
ss
ret
or
xchg
adc
pop
xchg
cmp
pop
sub
lock
out
ds
testb
cmpsl
pop
push
decb
out
mov
push
mov
dec
mov
mov
pop
pop
stos
and
addr16
inc
nop
fmuls
shrl
adc
shlb
xchg
push
pop
or
stc
xchg
das
addr16
sbb
inc
cli
sub
dec
in
sub
pop
fimull
add
jbe
xor
loope
and
ds
in
jmp
sbb
push
cmc
jo
push
pop
mov
test
lods
inc
pop
pop
mov
and
sub
push
add
and
mov
repz
pop
jge
xchg
fs
add
sub
sti
push
adc
xor
loop
adcb
pop
pop
sub
push
mov
adc
push
pushf
sub
push
jnp
dec
adc
add
andb
xchg
mov
xchg
jle
pop
ss
cmpsl
cltd
mov
jo
es
sbbb
fisubrs
add
mov
fwait
lods
pop
xor
pusha
push
dec
out
cmp
shrl
mov
push
pop
outsb
pop
iret
les
jbe
inc
mov
xlat
mov
mov
jge
or
mov
sub
repz
addr16
daa
inc
scas
jl
jg
ljmp
xchg
inc
sbb
sub
mov
dec
ds
push
sub
mov
xor
stos
iret
inc
sub
jbe
scas
mov
cs
sub
push
sbb
push
jno
outsb
sub
aam
inc
sbb
cmpsl
fwait
lods
addb
hlt
sub
mov
jg
and
fs
fisttps
mov
pusha
push
mov
inc
aas
shlb
pop
pop
cmp
cmpsb
or
push
jo
mov
stos
pop
fnstenv
lods
push
mov
insl
outsl
pushf
xchg
and
shlb
sub
add
xchg
mov
mov
mov
out
fadds
adc
mov
outsl
mov
divb
or
cmp
cmpsl
push
insb
insl
subb
sbb
movsb
push
mov
mov
ds
sahf
aas
cwtl
mov
or
and
pop
xchg
pop
lcall
mov
test
andps
test
out
mov
mov
incl
cmc
in
mull
lret
cmp
mov
xchg
push
push
push
mov
jae
test
lret
rcll
cmpl
aam
pop
jecxz
add
cmp
cmpsl
aam
fnstenv
sub
cmpsb
lcall
pop
int3
mov
stc
iret
insb
popa
and
jne
cs
mov
scas
adc
sbb
add
es
add
cwtl
inc
or
push
or
add
daa
adc
cwtl
pop
mov
jl
sub
or
loop
inc
gs
jns
test
inc
aam
cmpsl
fcmovb
xor
push
clc
xor
in
cli
mov
xchg
mov
and
das
mov
xchg
cmp
fisubrs
push
and
stc
pop
push
push
jns
mov
cld
aam
imul
outsb
xorb
push
jns
sbb
xor
and
lcall
pop
mov
ljmp
je
mov
or
sbb
into
lret
ja
pusha
jmp
ljmp
sbb
cmp
mov
push
push
fstps
inc
adc
jbe
and
push
adcb
arpl
xchg
and
cmpsl
or
mov
out
adc
mov
lock
dec
cld
push
cwtl
add
cltd
pop
clc
cmp
xchg
out
push
pop
mov
xchg
hlt
inc
pop
and
or
test
lea
ret
or
mov
sbb
arpl
mov
lret
nop
in
cld
and
fld
push
fsubs
psubq
ja
push
jg
int
enter
push
icebp
cld
lret
mov
arpl
out
dec
xor
repnz
lcall
pop
rolb
pop
adc
push
icebp
add
ja
popf
and
movsb
mov
and
stc
cs
pop
arpl
inc
xchg
out
mov
cmp
ret
gs
repnz
push
cmp
mov
or
sbb
stc
sub
adc
jge
pop
test
gs
mov
addl
mov
adc
enter
js
aam
inc
loop
repz
adc
mov
iret
or
adc
rcrb
add
popa
in
daa
outsl
mov
stos
cld
loopne
push
mov
sub
aam
sbb
sbb
and
adc
xchg
vmptrst
mov
sbb
pop
and
xlat
cmp
rep
lods
cmp
rol
movb
stos
xor
adc
add
lods
je
pop
loope
jne
inc
das
cmpsl
outsb
sahf
pushf
test
pop
testb
mov
add
in
int3
inc
jmp
in
sub
arpl
and
sbb
fnstsw
popa
ds
mov
push
lea
pop
pop
sub
jne
pop
push
xchg
loopew
repz
add
pop
inc
mov
out
mov
lcall
aad
enter
pmuludq
ret
xchg
pop
insb
mov
xor
jne
xchg
xchg
sbb
aad
jo
push
fnstenv
mov
sbb
jl
daa
lcall
imul
sub
roll
jmp
pusha
lods
cmpsb
arpl
fcmovnbe
mov
repz
repnz
mov
or
pop
or
pop
cmp
pop
mov
sbb
subb
lock
lea
in
test
arpl
mov
xchg
int3
ss
push
mov
or
outsl
subl
xchg
cmp
xchg
mov
aaa
scas
adc
or
jnp
stc
dec
mov
adc
lahf
xchg
cmp
add
test
subb
inc
inc
add
sub
lea
repz
negb
dec
xor
mov
inc
push
aam
dec
pop
dec
inc
js
mov
cmp
or
in
pop
mov
sbb
sub
push
or
repnz
or
aaa
scas
popa
stos
or
fcmovb
xchg
ret
jbe
scas
mov
mov
pop
int3
inc
gs
test
jno
push
xlat
xchg
mov
xchg
int
inc
out
dec
movsbl
and
inc
iret
lret
pushf
jge
xchg
sub
repnz
ret
adc
push
lods
loop
addr16
testb
xlat
fbstp
pop
mov
gs
mov
fcom
mov
xor
cmp
mov
js
leave
pop
int
push
xlat
inc
push
iret
pop
out
dec
imul
popl
mov
fs
push
jo
dec
sti
mov
xchg
loope
cmpsb
mov
iret
pop
sub
nop
add
cmp
xchg
push
mov
lods
movsl
inc
int3
in
sarb
loopne
popa
fiaddl
not
sbb
jne
mov
nop
sub
sti
jg
lea
imul
add
sub
push
and
dec
xchg
xchg
iret
data16
in
mov
test
stc
mov
lret
out
daa
mov
xchg
push
jae
fstps
es
int
fldcw
into
push
jge
test
aad
sub
lret
pop
out
insl
movsl
dec
xchg
push
aam
push
dec
ds
insl
or
stos
adc
test
push
jp
add
scas
fildl
mov
or
push
mov
mov
fs
fcomps
jae
fwait
loope
imul
in
stc
or
push
enter
sub
or
xchg
xchg
cmp
jl
inc
aas
cld
pop
cmp
fnop
stc
xchg
pop
jl
push
mov
sahf
inc
leave
pop
xchg
aas
push
movsl
xor
add
mov
stos
xor
sub
lfs
push
push
repz
adc
outsl
cmp
scas
out
inc
xor
iret
ja
adc
cs
inc
xchg
aaa
negb
stc
inc
inc
scas
popl
lret
mov
cs
sbb
clc
outsb
mov
test
cmp
pop
sahf
mov
aad
aam
push
aaa
repz
jmp
ljmp
or
mov
stc
rorl
jecxz
jb
minps
sbb
mov
mov
movsl
cmp
loopne
jns
and
mov
hlt
addr16
faddl
dec
ljmp
fs
outsb
xlat
sbb
adc
out
and
enter
mov
mov
into
int3
dec
mov
inc
jne
leave
pop
sub
sub
cs
ljmp
lods
push
fcomip
imul
loope
mov
mov
add
and
nop
cwtl
jle
pop
into
daa
pop
mov
iret
push
insl
test
test
fwait
jns
dec
jno
pop
call
or
mov
or
dec
ficoml
in
icebp
jle
xor
mov
push
cs
test
rcl
into
and
daa
pusha
movsl
addl
and
push
add
fisttpll
dec
negb
inc
imul
xchg
frstor
dec
mov
cmp
xchg
outsl
dec
and
stc
hlt
fwait
mov
iret
rol
lea
jns
sbb
push
inc
in
sbb
popf
pop
mov
dec
adc
jne
push
jmp
push
or
push
pop
push
jmp
int
xor
xor
outsb
lahf
ja
mov
imul
cmp
dec
sti
xchg
or
lahf
jg
and
loop
cs
out
ss
addr16
sbb
lret
loop
and
scas
mov
ss
sub
xchg
xchg
movl
mov
sub
lahf
mov
push
or
mov
sahf
js
and
mov
movsb
adc
call
cmpsb
test
inc
cltd
inc
push
pop
push
fsubrl
dec
in
push
jo
mov
popf
adc
pop
stc
pop
jecxz
inc
fsubrl
je
iret
dec
fldl
imul
movl
repnz
cmp
enter
insl
or
js
popf
dec
pop
pop
clc
jne
lret
es
jmp
inc
dec
sarb
lea
inc
out
pop
lods
push
mov
dec
in
sub
sub
std
push
out
adc
bound
and
cmp
test
inc
daa
lret
mov
call
filds
push
gs
loop
jle
sbb
xchg
add
lahf
arpl
xchg
in
push
dec
mov
inc
insl
imul
mov
pushf
enter
ljmp
sbb
es
cmp
cmp
mov
sub
into
sub
sub
stc
test
mov
cli
mov
add
sbb
mov
pop
sbb
push
dec
mov
pusha
sysret
lahf
insl
push
push
aad
jnp
ljmp
sub
sub
fnstenv
jns
dec
dec
enter
dec
mov
inc
cmp
das
push
jp
mov
mov
mov
add
mov
test
sahf
das
push
dec
punpckhwd
pop
dec
arpl
aaa
clc
outsl
mov
jmp
addb
xchg
out
stc
jbe
sub
insl
xor
jbe
cmp
inc
pop
mov
xor
push
jb
lahf
add
lock
cmp
lcall
jne
push
dec
out
fisttpl
daa
sbb
sub
mov
iret
es
dec
mov
mov
mov
cmc
sbb
icebp
push
xchg
fisubs
add
and
cmp
fsts
popa
cmp
lcall
stos
dec
push
pop
bound
std
decb
mov
mov
sbb
stc
cwtl
pop
xchg
mov
negw
mov
aas
or
jecxz
jp
jge
loope
sbb
jg
dec
jne
lods
mov
loopne
fstl
daa
fs
xor
sub
push
lret
xor
mov
inc
xor
cmpsl
push
fidivl
ss
jo
es
pop
test
dec
imul
fs
aam
imul
cwtd
aaa
in
daa
scas
rorb
aas
xchg
xor
fmul
jbe
adc
scas
dec
in
icebp
imul
xchg
fsubl
out
or
mov
or
dec
lods
sub
pop
sbb
out
mov
xor
inc
fwait
sbb
pop
in
call
imul
addl
jnp
xor
lods
xor
das
xchg
gs
fcmovb
fwait
or
mov
jge
cmp
cmp
cmp
call
in
imul
cmp
aaa
repz
outsb
lds
popw
movsl
xor
sbb
jo
bound
int
push
add
out
arpl
mul
out
xchg
test
ja
ljmp
mov
repnz
roll
lret
sub
mov
emms
cmp
dec
out
les
xchg
xchg
cmp
cmp
mov
push
popa
push
mov
xorl
iret
test
clc
or
pop
scas
or
dec
imul
xor
and
fnstenv
aaa
fldt
aas
arpl
add
sbb
dec
jno
pop
in
xchg
imul
stos
add
dec
jmp
sub
sub
push
xchg
shl
inc
sti
cmp
dec
aad
mov
scas
or
ja
xchg
and
mov
lret
test
xlat
sbb
sbb
lods
shrl
inc
andl
push
xor
and
mov
mov
dec
sbb
and
cs
adc
dec
pop
sarl
aad
jo
leave
add
popa
repz
out
imul
cmpl
addb
scas
mov
dec
xor
cmp
xlat
cmpsl
aad
vxorps
cmp
outsl
mov
mov
sub
jne
cwtl
pop
xor
rorb
in
mov
stos
mov
daa
stos
mov
sub
xor
sahf
stc
loope
out
mov
fwait
jecxz
cmp
jecxz
ret
pop
aas
mov
jno
pop
pusha
xchg
pop
fiadds
xchg
out
fimuls
ret
addr16
push
dec
and
inc
xchg
outsl
pop
cmpsl
pop
xchg
push
dec
jle
movsl
push
outsl
test
jl
mov
cmc
mov
outsl
ljmp
lods
movsl
dec
and
or
mov
mov
dec
xor
cmp
cmpsl
and
and
aaa
iret
cmp
dec
sub
movsl
aad
hlt
sub
mov
adc
dec
fmul
in
sbb
push
xor
lods
push
sbb
push
int3
mov
iret
mov
xlat
mov
jbe
ds
rol
mov
and
repz
aaa
fs
cld
push
jg
out
inc
sahf
dec
jp
dec
in
jl,pn
rclb
negl
jge
or
dec
sbb
xor
aas
and
in
or
jge
push
jo
mov
cmp
push
sbb
sarl
aaa
mov
rclb
push
dec
inc
lock
adc
sub
cwtl
movsl
addl
mov
cmp
xor
sbb
nop
test
cmpsb
sbb
push
jbe
xorl
mov
std
out
adc
cmc
mov
scas
dec
mov
xor
jg
adc
mov
sub
aaa
and
jge
div
pop
in
push
clc
pop
mov
test
sarl
imul
pop
inc
lret
enter
mov
inc
pop
out
aas
or
mov
cmpsl
sbb
cwtl
push
scas
xor
dec
mov
mov
lcall
pop
and
cmp
sbb
inc
rolb
sub
jb
pop
in
stos
nop
mov
dec
jle
mov
mov
popf
int3
fnstsw
loopne
and
in
daa
mov
repnz
pop
pop
cmp
out
push
mov
add
pop
add
out
in
jecxz
mov
aaa
push
orb
jge
pop
bound
push
scas
popf
fiadds
stos
mov
sbb
sub
mov
and
cmc
and
mov
and
in
incl
nop
pop
cli
xchg
aam
daa
jo
dec
fisttpl
cmp
push
idiv
adc
xlat
push
xchg
dec
data16
fsubrs
test
loop
dec
xchg
mov
push
pop
pop
sbb
lahf
lds
test
push
repz
inc
adc
inc
scas
xchg
push
into
fs
sub
xchg
scas
pusha
shll
pop
fnsave
and
mov
sub
sbb
xor
into
sbb
clc
cmc
sub
repz
data16
pop
cli
adc
sahf
push
cmp
mov
add
xor
bound
stos
iretw
adc
fistl
dec
test
dec
adc
daa
stc
les
test
push
ja
inc
sub
fucom
ja
mov
nop
jp
iret
adc
loopne
iret
out
pusha
lret
dec
mov
in
dec
js
andl
movsb
dec
aaa
movl
inc
mov
stos
sub
das
add
push
add
inc
cmpsl
xlat
xchg
and
loopne
rcrl
jecxz
and
das
orl
adc
xorl
out
cmp
jnp
repnz
das
cmpsb
jge
cld
bound
addr16
inc
mov
repnz
hlt
push
jg
scas
mov
jg
inc
push
scas
xor
sbb
mov
pushf
xlat
shl
push
ret
push
mov
in
jg
add
jbe
mov
mulb
adc
xor
pop
mov
mulb
test
adc
xchg
addr16
test
lret
rorl
dec
fcmovnu
sub
pop
cwtl
loop
shlb
jle
in
adc
push
jnp
dec
fwait
dec
arpl
in
sahf
imul
adc
pop
push
cmpb
and
in
sbb
and
loopne
pushf
scas
pop
scas
outsb
cmp
jle
popf
xchg
cmp
inc
or
mov
mov
sub
mov
std
cld
repz
xor
call
inc
dec
ror
movsb
je
or
test
and
test
lods
leave
pop
into
cmpsb
inc
testl
add
out
mov
std
cmpsl
pop
cwtl
jbe
test
add
inc
cmp
js
jl
arpl
int
sbb
mov
mov
notb
and
loopne
adc
pop
xchg
jle
rcll
xchg
test
sti
push
push
push
cwtl
xor
push
cmpsl
sub
push
xchg
fisubrl
insb
jnp
sub
pop
cld
cs
lds
gs
lret
adc
dec
aas
icebp
lcall
in
cmp
add
inc
ss
and
call
and
push
push
adc
clc
ret
mov
or
iret
pop
dec
hlt
int3
ret
xchg
andps
mov
call
in
imul
add
xor
add
sbb
mov
leave
in
cmp
sub
add
test
lcall
sub
adc
nop
lock
jecxz
pushf
mov
scas
or
lds
das
nop
int
jg
aad
jg
mov
mov
les
lret
cmpb
push
imul
or
sub
outsb
adcl
test
lods
push
sbb
pop
add
stos
inc
shl
jp
mov
filds
pop
dec
push
icebp
lods
scas
and
sub
mov
jae
lret
sahf
int
jmp
ds
lahf
mov
js
push
fdivrs
mov
pop
lods
cmp
fmull
cld
pop
dec
dec
sahf
call
je
pop
sbb
roll
repnz
test
hlt
aad
lahf
cmp
xor
lock
adc
xchg
sbb
xor
mov
push
int3
out
dec
push
movsb
push
inc
lock
dec
mov
cmp
mov
dec
cmpl
ja
jnp
int3
out
dec
fnsave
insl
adc
es
jle
pop
sub
xchg
add
and
test
add
push
push
xchg
ja
notl
sbb
shll
fucomi
into
inc
test
in
fisubl
lahf
cmp
cmp
dec
or
add
and
testl
popa
xor
fstl
sub
leave
and
xchg
lods
cmpsl
ljmp
filds
cmpsb
out
jo
subl
aad
pop
xor
dec
sbb
pop
pop
shll
cmp
jne
pop
outsl
ljmp
rorb
mov
test
inc
ret
in
loopne
jb
xchg
jge
mov
fists
jno
int
movsl
lods
mov
pop
mov
push
cmp
xor
cwtl
and
shll
push
cld
xor
sbb
lock
cld
sub
pop
xlat
pop
stos
xor
std
pop
mov
test
xor
jg
and
add
xor
pop
push
mov
out
in
xchg
add
cmpsl
and
pop
filds
loop
xchg
stos
push
cltd
xchg
xchg
adcb
fs
popa
scas
lds
inc
ret
movsb
dec
hlt
mov
sbb
shll
push
lods
add
or
movsl
cld
shlb
in
imul
iret
cmp
ds
push
std
mov
mov
xor
xchg
dec
add
push
shll
std
jnp
cld
ror
leave
and
mov
bound
add
imul
arpl
or
test
test
ja
push
xchg
bound
rcl
je
sub
or
xorl
fwait
pop
mov
scas
das
and
pop
push
bound
jae
jg
andl
inc
pop
movsb
cmp
xchg
push
out
xchg
pop
test
jns
negl
mov
adc
imul
add
imul
sub
xchg
fisubrl
push
cmc
lods
das
add
add
xchg
data16
mov
mov
jbe
ret
das
dec
sub
lret
push
rcrb
mov
cmp
pop
xchg
push
call
iret
shrb
cld
inc
and
test
ds
aad
popa
scas
les
mov
xchg
xchg
repz
adc
cmpsl
jbe
fcompl
sub
jp
or
dec
push
sbb
popf
in
pop
in
jge
mov
ja
ljmp
iret
mov
fisttpl
add
lods
stc
jns
dec
or
repnz
adc
scas
jecxz
dec
pushf
mov
mov
mov
and
xchg
lcall
push
icebp
imul
in
and
cmp
jge
xlat
mov
cwtl
pop
addr16
mov
sub
jl
jg
popa
fsubrs
repnz
test
pusha
pop
imulb
inc
repz
jmp
add
sti
daa
faddl
out
jle
fucomi
out
mov
pushf
sub
xchg
inc
ljmp
pop
ficoms
add
pop
jmp
repz
inc
xor
adc
leave
fs
cwtl
mov
clc
ja
lds
mov
or
rorb
movsl
jae
xchg
xor
push
shl
inc
test
and
inc
dec
aam
jmp
lcall
push
insb
outsb
adc
shrb
cmp
imulb
popa
cmp
aas
movsl
sub
lea
cwtl
dec
ret
data16
ret
push
xchg
cmp
bound
adc
ds
fnsave
ret
test
std
jmp
lock
push
xchg
xor
aad
mov
pop
and
loop
pop
xacquire
cli
mov
mov
push
int
out
test
mov
mov
xchg
adc
pop
rcll
stc
mov
push
aas
and
movb
in
in
lods
iret
arpl
aaa
lods
out
adc
int3
lds
and
cmp
push
add
fistpl
mov
loop
or
xchg
jle
xor
mov
xchg
cs
add
lret
sbb
ret
pop
movsb
repz
add
out
lds
add
mov
add
fists
adc
and
sti
mov
push
test
cli
push
int
jecxz
dec
out
dec
addr16
add
roll
test
pusha
test
popl
mov
and
jno
negl
out
sbb
scas
or
push
push
outsb
pop
add
sbb
or
jns
dec
adc
jns
cmp
les
into
enter
push
repz
xorl
xorl
inc
inc
aaa
jb
xor
inc
sbb
out
xor
fwait
mov
sbb
movsb
jnp
add
sarb
rclb
or
cmp
jl
cmp
fldcw
leave
imul
scas
mov
cmp
jnp
or
push
mov
out
imul
fcoml
icebp
bound
stc
mov
mov
xchg
outsl
cld
call
decl
lret
mov
or
orb
sbb
xchg
xorl
xchg
pop
or
mov
mov
sub
rorl
cmp
ficoml
add
sbb
adcb
call
jns
mov
push
inc
jecxz
mov
push
pop
pop
shrb
xchg
lods
mov
fdiv
jne
jo
xchg
jl
int
fbstp
push
in
rol
jecxz
add
lds
loopne
mov
push
loop
inc
subl
repz
addr16
mov
mov
imul
push
sbb
pop
pop
mov
lods
and
xchg
and
cmpsb
aaa
jp
lods
push
xchg
push
push
cmp
pop
cmpsl
arpl
or
in
adc
cmc
mov
pop
imul
pushf
and
iret
out
mov
inc
and
pop
mov
loop
test
insb
and
add
inc
adc
in
mov
lcall
pop
jg
in
jb
scas
das
xchg
jbe
xor
inc
sti
add
std
or
pop
enter
testb
stos
adc
sbb
dec
std
pushf
or
test
xchg
insl
mov
cli
mov
icebp
mov
shl
or
or
push
push
mov
mov
sub
fldcw
ja
je
push
xchg
add
je
mov
leave
test
ret
inc
outsb
sub
cmp
in
addl
call
in
imul
cmc
loopne
dec
pop
sub
cmpl
pop
xor
test
pop
jne
scas
or
clc
cmp
lret
mov
sbb
cmp
out
cmpsb
test
hlt
stos
inc
or
sbb
jg
adc
ljmp
sbb
jg
insb
in
add
cmp
mov
xchg
sti
scas
cmp
push
mov
pop
push
popf
shll
push
and
sub
shlb
push
shrl
push
mov
lock
or
and
adc
jecxz
dec
jge
sub
aaa
gs
sti
cmp
mov
shr
in
inc
mov
sub
pushf
mov
stos
out
push
lret
inc
xor
fstps
pop
movsl
sti
adc
mov
dec
ja
sbb
jp
jl
push
mov
or
ljmp
and
cmp
inc
mov
lock
insb
and
fidivl
ss
or
jl
pop
pop
les
push
pop
sub
gs
mov
rol
test
insl
jbe
inc
aam
pop
mov
ja
xor
xchg
adc
ret
cmp
sub
jle
stos
mov
xchg
cmp
fnstcw
xchg
mov
mov
int
outsl
jl
push
and
adc
sti
inc
push
mov
fcomp
imul
sbb
adc
stos
xchg
lds
mov
adc
mov
sbb
pop
or
jg
ror
mov
mov
shrb
xor
inc
mov
or
jo
or
in
scas
sbb
jl
inc
pop
int
mov
and
outsl
cmp
sub
jmp
mov
inc
dec
rcl
jp
loope
add
and
enter
sbb
test
jne
test
es
or
xchg
mov
pushf
jo
fcomps
and
cmp
ss
leave
ret
xor
rorb
leave
cmp
xlat
loop
push
and
repz
int
push
cmpsl
cmc
inc
int3
jp
dec
in
adc
sbb
push
ret
movsl
ja
lds
test
cwtl
pop
shl
fs
cmp
sub
add
mov
insb
rcrb
rcrb
loopne
pop
nop
orl
adc
sub
mov
pop
add
push
jmp
stos
in
sbb
jbe
sahf
sbb
xlat
fs
rep
add
dec
adc
push
mov
shlb
aaa
push
and
gs
addr16
lock
pop
mov
xchg
or
xchg
lods
ficoms
punpckhbw
add
mov
sbb
mov
dec
or
pop
pop
adc
lds
out
popf
enter
das
sub
sti
sbb
shll
repz
mov
cmc
mov
lock
data16
jmp
xchg
jbe
shll
or
mov
or
fistpll
mov
fadd
hlt
sub
sarb
ss
shll
call
xor
sar
xlat
bound
in
bound
and
jb
jle
jns
push
mov
into
push
inc
xor
insb
mov
mov
pop
add
mov
aas
sbb
and
push
loope
lds
hlt
in
arpl
pop
inc
stos
dec
mov
mov
imul
mov
sub
fs
mov
and
lods
in
xchg
and
add
mov
jp
push
and
inc
and
out
mov
dec
push
mov
js
jp
insb
add
clc
xor
test
adc
sub
popf
adc
sub
aad
lock
push
jle
inc
xchg
test
arpl
mov
jmp
xchg
mov
dec
or
lock
push
xchg
sbb
adc
jno
sbb
or
dec
mov
imul
mov
and
mov
push
out
and
inc
inc
arpl
shrl
outsb
mov
mov
repz
fst
ljmp
loopne
xorb
mov
ljmp
arpl
imul
pop
pop
inc
pushf
mov
add
push
jae
in
leave
movsl
daa
loopne
cwtl
jp
aas
sub
xchg
cmp
jo
xchg
nop
xor
add
in
sbb
sbb
mov
and
jno
into
fucom
mov
lods
mov
inc
mov
leave
sahf
dec
call
lea
or
xchg
dec
pop
dec
imul
xchg
ret
push
fisubrl
loopne
ljmp
fwait
sub
fisttps
xor
in
add
add
out
das
dec
inc
dec
test
fwait
pop
mov
pop
mov
fisubrl
jle
jne
int
mov
mov
loopne
jo
scas
loop
mov
mov
gs
rclb
cmp
gs
jae
lret
mov
xor
out
jns
cltd
or
and
push
and
or
xor
arpl
lock
out
adc
adc
shlb
sbb
push
ret
mov
xor
xorl
fcomps
pop
xor
cmp
adc
or
movsb
or
adc
cwtl
aaa
add
cld
inc
xchg
cs
int3
mov
rorb
enter
mov
jl
sti
mov
push
lret
leave
mov
ret
xchg
jmp
xor
or
pop
imul
popa
cli
clc
cmpsb
mulb
jecxz
bound
sub
pusha
jmp
movsb
xchg
ror
push
and
das
adc
cmp
icebp
sbb
push
adc
push
add
popa
jbe
lret
mov
movb
xchg
outsb
xor
inc
ljmp
push
cmp
fdivl
jo
pop
lock
cmp
mov
cmp
shrb
lea
and
mov
lods
sub
cmp
pop
cmp
jp
jl
mov
add
rorb
imul
pop
xchg
pop
mov
push
cmpl
neg
cmp
xchg
dec
stos
mov
fcoml
icebp
inc
mov
enter
mov
adc
popa
in
mov
stc
fcmovne
arpl
insl
push
push
adc
sub
popf
jge
sub
pop
int3
or
in
popl
jbe
xor
shll
sub
jb
lcall
sahf
jmp
dec
orl
test
call
pop
sbb
pop
mov
push
repz
mov
insl
iret
es
popa
mov
or
add
fnsave
xchg
jp
dec
icebp
lcall
fcmove
adc
or
les
cmpb
or
mov
fdivrp
fists
insb
loope
leave
test
pop
jl
test
sbb
pop
aam
mov
aam
out
jecxz
cltd
mov
mov
call
jno
andb
push
push
jbe
mov
mov
push
mov
mov
sti
pushf
adc
js
add
mov
xor
shrb
cmp
jo
inc
popa
loopne
sbb
lea
test
inc
lret
movsl
xchg
add
jp
push
push
sub
orb
iret
cs
repz
gs
inc
insb
xchg
stos
stos
push
test
loopne
jle
sub
fs
push
mov
mov
ret
lret
pop
jno
leave
cmp
adc
mov
mov
js
cwtl
and
repz
call
bound
fnstsw
fcompl
dec
sarb
loopne
pushf
cld
push
loop
addb
in
cmp
out
cmp
add
fsubs
movsl
sub
call
xchg
sbb
pop
and
lret
jae
mov
dec
sub
add
xchg
cmp
push
fsub
cmp
andl
repnz
xchg
movsl
es
cs
shll
jb
shr
pop
add
pop
call
xlat
js
mov
pop
add
fbld
cmp
fstl
lea
add
mov
cmpl
jns
fwait
cmp
push
mov
and
push
cmp
orb
mov
stos
imul
cwtl
cmc
bound
cmp
inc
cmp
leave
mov
jne
std
and
in
and
jp
in
sub
loope
jp
sbb
cmp
jp
add
xor
pushf
mov
call
nop
roll
pop
int3
loope
cmp
cmp
push
fiadds
icebp
adc
les
fstps
jecxz
inc
jecxz
pusha
mov
scas
std
xchg
outsl
test
cli
xchg
in
jns
faddl
mov
cmc
jb
cmpsb
mov
inc
out
cli
mov
into
push
adc
and
pop
aaa
push
fbstp
push
std
repnz
insb
and
mov
push
ret
dec
in
adc
ret
add
xchg
test
push
mov
push
xlat
adc
add
cmp
rcrl
jg
into
sub
and
mov
cmp
call
push
sbb
aaa
cmp
sub
sbb
pushf
test
fxch
sub
int
lods
pusha
test
jns
subb
cmpxchg
icebp
out
inc
ljmp
pusha
sub
mov
dec
ss
jo
sbb
pop
cld
int3
lds
rorb
sbb
and
jg
xlat
push
xor
push
xchg
add
sub
andb
hlt
cmp
jne
lret
dec
mov
daa
sahf
rep
jno
fs
inc
push
mov
rolb
in
bound
data16
sub
adc
adc
lret
lcall
lret
sub
and
jmp
add
in
int
push
subl
nop
inc
pop
jg
hlt
sarl
out
mov
cltd
and
sbb
mov
aas
push
fmuls
fldt
dec
xchg
lods
push
mov
xchg
adcl
xor
lahf
daa
imul
imul
pop
pop
xchg
fists
push
fsts
xor
and
xlat
sti
xchg
inc
push
adcb
fistps
shr
xlat
xlat
push
xchg
pop
xchg
xor
call
xor
push
inc
xchg
ret
movsb
fdivl
jae
stos
int3
mov
arpl
out
mov
push
jmp
rol
loopne
lea
lea
mov
sbb
sub
js
pop
and
push
ss
sub
push
jns
pusha
sbb
mov
pop
fs
adc
jge
mov
sbb
inc
loop
or
ljmp
and
sbb
fmulp
sbb
out
fisubrs
fiaddl
mov
outsl
aam
pusha
popf
call
and
jns
lock
pop
sbb
pop
adc
mov
add
arpl
cmp
xchg
xor
notb
shrb
cmp
cmp
repz
les
leave
ret
sbb
dec
mov
xor
jb
jge
jl
adc
xchg
sahf
int
push
add
or
xchg
pop
and
scas
mov
ja
xchg
fisttpll
int
dec
inc
in
push
insl
movsb
mov
or
sbb
mov
jnp
and
jnp
mov
outsb
or
fxch
clc
aas
in
test
mov
pop
mov
and
jp
pop
cmp
inc
pushf
ficomps
ss
sbb
push
push
lcall
dec
out
or
fcompl
jo
jo
shrb
lcall
adc
stc
mov
xchg
inc
add
and
sbb
and
xor
pop
sbbb
enter
pop
dec
inc
ficoms
ljmp
test
inc
leave
mov
push
inc
cmp
int
out
push
sbbb
jecxz
push
je
sbbl
in
dec
cs
sbb
repnz
dec
cmp
std
das
xor
sub
dec
ret
daa
rcll
cmpb
dec
sbb
adc
and
sub
sarb
loope
jnp
ror
or
inc
pop
mov
scas
jge
mov
lret
cld
fstl
or
cmp
addr16
and
mov
fs
gs
adc
pop
cld
mov
jnp
scas
cmp
inc
sub
lock
pop
mov
ja
and
inc
loop
shrb
inc
push
mov
dec
mov
jmp
jo
mov
sahf
jl,pt
pop
imul
mov
ljmp
push
mov
or
xchg
xchg
mov
popa
pop
cmc
in
ja
jecxz
icebp
adc
cmp
std
lock
mov
hlt
cltd
mov
sbb
mov
inc
aas
fimuls
stos
stos
jmp
adc
jne
popa
stc
mov
aad
loope
adc
daa
mov
stc
ret
shl
mov
cmp
test
loope
push
mov
lahf
adc
xchg
lds
mov
aam
ja
in
xor
mov
inc
out
jmp
push
lock
divl
pop
pop
push
fildl
fnstsw
inc
loope
scas
cmpsl
cmp
ret
or
pusha
les
add
xchg
mov
les
testb
movups
mov
shll
dec
jl
add
rep
cmp
ljmp
movsl
push
ds
lret
in
lds
clc
aaa
jle
pop
xchg
or
sbb
pop
mov
into
dec
jl,pt
xor
imul
adc
lcall
ret
mov
cmp
push
pop
hlt
lods
pop
sub
jbe
mov
les
inc
scas
ret
inc
lods
inc
popf
mov
jae
cmp
jge
fisubl
mov
dec
dec
out
and
push
decl
icebp
addr16
sahf
adc
fcompl
inc
pop
cld
push
dec
adc
idivl
or
mov
decb
prefetch
pop
add
jbe
popf
sbb
ja
mov
mov
movsw
nop
das
jno
xor
and
and
std
lods
test
das
push
je
mov
or
cwtl
add
rorb
ficomps
add
pusha
push
pop
pop
gs
in
sarl
push
push
sbb
mov
cmp
cmp
inc
icebp
shll
lret
or
mov
inc
mov
adc
sbb
sbb
dec
adc
pop
and
std
and
cwtl
repz
dec
push
arpl
jnp
movsb
mov
int3
mov
imulb
sbb
imul
int3
pop
sub
movsb
sarb
push
jo
lahf
xor
or
lock
cs
mov
and
hlt
enter
or
int
add
and
push
adc
sub
orb
int
cmpsb
bnd
ja
mov
xchg
add
xor
pop
lds
pop
pop
bound
sbb
mov
and
push
mov
push
lret
dec
jg
dec
pop
scas
push
xchg
cmp
scas
pop
call
mov
test
cmp
jmp
cld
imul
push
js
addr16
xchg
call
xchg
push
xor
inc
adcl
or
sbb
idivb
jge
xchg
mov
mov
out
cmp
mov
sbb
pop
push
ficoms
inc
andb
das
insl
and
ljmp
aas
jnp
pop
arpl
clc
mov
pop
data16
xchg
popa
xchg
mov
lcall
fidivrs
leave
and
ss
push
pop
push
xchg
mov
jmp
pop
pop
ds
in
push
arpl
xor
sub
push
add
aad
ds
faddl
push
nop
lret
and
mov
in
test
pusha
nop
test
pop
sbb
into
jmp
das
cmpsl
xchg
je
adc
or
out
push
dec
rol
imul
adc
inc
pop
xor
jmp
jae
filds
insl
es
in
daa
cwtl
je
lds
inc
aaa
repz
iret
mov
inc
je
adc
imul
mov
mov
sbb
lahf
xor
adc
xchg
and
inc
inc
adc
jge
gs
repnz
xchg
lahf
xchg
dec
aaa
aaa
push
add
push
xchg
dec
inc
mov
mov
and
mov
maxps
scas
in
dec
in
call
cmp
outsb
cmp
xchg
pop
jmp
add
cmp
jns
xor
mov
sbb
pop
inc
mov
mov
sub
pusha
jae
cmp
jg
sub
mov
addr16
out
pop
rcrb
push
jno
insb
repnz
or
fnstsw
idiv
das
mov
push
pop
mov
dec
add
fsubs
jmp
clc
and
dec
into
xchg
cmp
mov
lock
jnp
ljmp
pop
imul
jmp
movsb
mov
dec
or
aad
jmp
mov
sub
or
jmp
lcall
jnp
and
out
icebp
xchg
xchg
jae
out
mov
xchg
xor
jne
aam
mov
movsl
test
inc
push
xor
jge
insl
aas
fs
push
loopne
shll
ja
mov
std
cpuid
or
pop
orl
fidivs
xchg
and
fldt
xchg
fdivs
xchg
xchg
xlat
mov
scas
pop
pop
add
xchg
dec
lods
jb
push
xor
cmp
js
cmp
jl
mov
loope
cmp
test
xor
lea
push
inc
add
add
mov
iret
popf
adc
std
xchg
xor
loope
xor
xlat
adc
std
fidivs
adc
pop
pushf
xor
cmp
push
stos
mov
push
xchg
movl
cmp
in
fs
leave
xor
andl
xor
shrd
cmp
sbb
test
sub
je
sub
repnz
test
test
and
scas
inc
pop
push
and
orl
aam
jb
jo
sbb
mov
out
lock
jp
out
add
dec
jmp
mov
inc
cld
ficompl
je,pn
lret
jno
call
or
test
inc
mov
outsb
pop
push
pop
les
pop
mov
sbb
xchg
lods
inc
inc
fbld
sbb
lock
sbb
or
cmp
fsubr
adc
pop
mov
leave
imul
xor
push
inc
mov
mov
out
xchg
in
sbbb
dec
ret
andb
fcom
cmpsl
xor
sbb
into
pop
push
jns
or
movsb
imulb
mov
add
push
push
cmpsl
pusha
fbld
mov
mov
jns
out
adc
std
cmovne
stos
lods
inc
lcall
inc
fisubrs
lock
and
inc
insl
pusha
cmp
imul
sbb
lock
aad
xor
push
sub
rcrl
mov
mov
sbb
xchg
sub
lret
frstor
in
scas
xor
dec
cmpl
mov
mov
push
loop
popa
mov
pusha
xor
mov
test
sub
push
into
std
jecxz
mov
sahf
rol
adc
cli
aas
outsb
je
movsb
xor
lahf
leave
fisttpl
adc
ds
mov
mov
mov
out
xor
inc
in
arpl
fimull
or
sub
mov
mov
andb
mov
sub
es
insb
pop
mov
push
js
xchg
iret
dec
mov
inc
inc
int3
pusha
and
sbb
out
enter
push
mov
cmpsl
pop
insl
or
jns
outsl
cwtl
xchg
fnstenv
lods
jb
cmp
out
cmp
mov
sarl
std
test
mov
test
fsubs
and
dec
mov
adc
or
mov
mov
fdivr
jne
jb
cmp
xor
and
jbe
pushf
fcomps
into
xchg
add
shl
jb
enter
fidivrl
xchg
or
or
out
out
mov
mov
in
cmp
cmp
and
xchg
imul
in
pushf
fs
gs
pop
cmp
and
push
andl
iret
sub
dec
shr
fcompl
xor
ss
cs
pop
imul
movsl
sub
push
xor
pop
xchg
call
push
pop
out
fldcw
dec
jp
xchg
push
cmpl
add
movsb
dec
mov
js
or
dec
mov
cmp
add
ljmp
in
mov
aad
test
loop
cmc
call
xchg
das
nop
cmpsb
dec
jl
add
movsb
mov
xchg
jmp
out
aam
xor
lea
sbb
push
cmp
cmc
mov
or
cmp
cmp
cmpsl
lea
pop
ljmp
out
and
negl
cmp
inc
lahf
popa
mov
cli
pusha
out
fldl
mov
mov
inc
aam
popa
pop
daa
daa
aam
sbb
xor
jmp
xchg
jnp
mov
out
std
xor
lret
push
sub
and
cmp
aad
xor
outsb
mov
mov
into
or
adc
mov
testl
loopne
add
mov
ja
clc
inc
add
xor
jg
inc
test
add
add
add
dec
push
idiv
and
sbb
loopne
inc
dec
aaa
popf
mov
ret
push
add
ret
leave
push
mov
addr16
popl
sbb
add
lods
scas
push
rorl
mov
lds
cmpsl
xor
pushl
dec
imul
cmpsb
inc
dec
xchg
dec
mov
inc
xchg
push
fs
mov
xchg
xor
test
aas
fadd
cmovne
cmp
mov
fdivrp
sbb
scas
sbb
out
idiv
and
cmp
or
add
dec
xchg
rdmsr
push
bound
shr
ljmp
push
sub
movsl
addb
push
adc
sarl
jecxz
shll
aas
in
rcl
mov
adc
push
pop
inc
mulb
fcompl
pop
xchg
fs
aas
push
scas
lock
incb
pop
push
sbb
movsl
jl
inc
add
push
mov
jne
lret
mov
xchg
jae
addr16
call
inc
std
aad
scas
negl
scas
or
sbb
or
xor
es
mov
sbbl
fisubl
popa
loop
or
loope
fldcw
aaa
cmp
mov
mov
out
mov
rolb
rcrb
ficoms
sbb
xchg
jecxz
jnp
jns
dec
repz
xchg
jmp
pusha
sbb
arpl
mov
fimuls
addr16
push
push
xorb
jle
jg
push
iret
jne
inc
cmp
push
push
push
xor
jno
lret
movl
rolb
mov
xchg
addb
dec
adc
dec
jno
paddsw
out
xorl
mov
mov
mov
push
cld
fnsave
push
insl
test
pusha
xchg
dec
jne
dec
in
jge
outsb
in
pushf
andl
push
and
sub
decl
lods
shlb
jnp
shlb
loopne
aad
lock
push
xor
and
out
scas
gs
adc
sbb
lahf
cmp
int
lods
bound
lods
fisubrl
jno
out
out
add
jecxz
push
repz
arpl
jmp
insl
sti
cltd
out
mov
xor
repnz
add
adc
mov
add
jmp
push
imul
jbe,pn
in
pop
and
sbb
mov
aad
in
sbb
inc
jae
xchg
jo
bound
test
mov
ss
lcall
out
js
cmpsl
xor
sbb
incb
or
fsubs
pop
movsl
jg
cmc
cmc
sbb
clc
test
je
mov
or
nop
popf
and
dec
mov
mov
mov
call
fcomp
ret
xchg
ds
pop
and
sub
mov
scas
add
shrl
repnz
aas
pop
add
jae
ljmp
out
insb
test
push
in
pop
push
ret
addb
repz
lahf
inc
mov
jle
pop
lods
repz
cmp
add
aam
outsl
xchg
add
jmp
scas
scas
mov
es
negl
fwait
enter
mov
inc
cmp
xchg
gs
cmpsl
dec
sbb
mov
sbb
mov
jmp
rclb
jne
stos
stos
xor
loope
sub
jge
dec
add
shll
movl
test
jo
rcll
cmpsb
pop
outsl
dec
test
imul
mov
mov
aaa
clc
pop
pop
mov
pop
outsb
cmp
imul
xor
hlt
inc
cli
fisubrs
jg
push
sbb
dec
fsubrl
sbb
aaa
xchg
popf
add
dec
sbb
sbb
jge
stc
mov
loop
sbb
adc
data16
enter
popl
pusha
push
testl
xchg
js,pt
pop
xor
push
mulb
mov
movsl
insl
lret
movsl
pop
es
movsb
divb
xlat
pop
xor
lods
das
fldl
dec
jno
mov
loope
push
and
push
lret
int3
adc
add
aad
inc
and
movsb
push
popa
dec
adc
int
push
rorb
jae
aam
js
or
stos
popa
sub
test
inc
jle
popf
push
outsl
out
movl
mov
lret
jecxz
pusha
mov
mov
cmp
lret
jl
fdivl
mov
into
into
dec
xchg
aas
dec
popa
aas
pusha
inc
jnp
jb
mov
jno
das
sub
and
add
imul
aas
out
fldt
icebp
or
repz
clc
mov
int
inc
cs
cs
bound
scas
mov
rcrl
rol
movsl
push
mov
cltd
popf
ret
out
and
and
jae
pushl
loop
movsl
xchg
jge
push
loop
ds
jb
subb
mov
mov
ljmp
je
inc
push
or
bnd
xchg
cltd
dec
cltd
push
ja
dec
jo
cmp
dec
gs
dec
inc
dec
add
cli
jge
ret
jns
repnz
das
jno
fwait
pop
sub
push
mov
push
jl
mov
adc
cmp
pop
xor
movl
in
jae
in
outsl
mov
mov
push
out
or
jns
xchg
pop
rcr
icebp
mov
sbb
dec
xchg
lret
mov
icebp
mov
int
das
outsl
data16
cld
adc
mov
pop
loop
dec
divb
add
fmull
outsb
xchg
cli
sub
js
test
adc
cmp
shll
jmp
xchg
lods
in
std
or
jne
adcl
icebp
js
fs
roll
aas
cvtps2pd
iret
mov
subb
inc
fdiv
dec
or
ficomps
cltd
push
cmp
loop
repz
mov
inc
gs
cld
repz
inc
adc
mov
cmp
stc
dec
test
fstpt
repnz
pop
aam
jne
jns
in
test
mov
dec
inc
mov
push
cs
mov
mov
push
and
xor
iret
and
fsub
xchg
pop
fnstsw
mulb
and
adc
sbb
mov
aas
sar
jb
mov
add
push
push
daa
rdmsr
add
add
js
push
rcr
sub
dec
pop
cmc
loopne
pop
ret
add
sub
addr16
push
xor
and
lock
fldt
imul
inc
movsb
sahf
fsubl
xchg
aaa
push
fisubrs
imull
aaa
fnstenv
test
or
mov
jl,pt
and
mov
cmp
or
clc
in
cmp
mov
sub
adc
lret
gs
push
mov
or
adc
loope
dec
cld
into
sub
call
adcb
ret
rolb
loopne
mov
lock
nop
jecxz
lret
sub
mov
mov
out
aaa
push
mov
mov
mov
call
in
lea
cmp
sar
mov
outsl
scas
xchg
push
push
pop
nop
movsl
jnp
jns
cmp
imul
dec
adc
sub
dec
xor
in
ljmp
xor
addb
pop
imul
dec
pop
sub
push
dec
cs
int
std
sti
aad
iret
flds
adc
jne
or
sub
int3
xor
xor
xchg
fs
lods
sbb
repz
xchg
inc
mov
pop
cmp
mov
jmp
mov
jno
pop
sub
inc
loope
lret
aam
push
adc
dec
lahf
mov
and
shrl
sbbb
mov
sbb
es
je
mov
in
add
lcall
cmc
mov
mov
or
and
fsubs
xchg
mov
lock
xor
xchg
mov
xchg
ja
stos
mov
test
lods
aam
stos
or
xchg
jno
scas
push
ja
jo
mov
sub
cmpl
pop
cli
daa
mov
clc
adc
xchg
sbb
cmp
or
push
push
pop
lcall
mov
daa
es
jnp
daa
push
adc
imul
push
imul
loop
iret
cs
stos
scas
xor
sub
je
cwtl
jns
xor
mov
xor
push
dec
lods
jb
and
jge
fs
and
inc
cmp
mov
negl
xchg
shl
divb
pop
loop
lret
dec
inc
bound
xchg
and
dec
ja
bound
mov
js
in
fcmovu
xor
cltd
inc
cmp
pop
out
add
cltd
les
mov
jno
cltd
sbbl
mov
or
dec
stc
sti
push
pop
dec
push
cmc
add
jecxz
inc
cmp
and
aas
bound
xor
pop
jo
ljmp
xlat
cmp
imul
icebp
mov
es
stos
mov
bound
lahf
aas
jnp
sub
mov
push
jbe
cltd
je
inc
jge
mov
out
add
ljmp
sub
xor
mov
xchg
loop
jmp
das
pop
fnstenv
aas
sbb
scas
push
rorb
push
xchg
adc
jnp
ret
add
or
push
push
xor
insl
hlt
push
lret
out
in
pop
cmp
or
add
cmp
mov
mov
cmpsb
fimuls
cmp
cmpsl
fisubl
in
stc
leave
inc
lcall
cmpsl
add
test
cltd
inc
and
or
out
enter
cmpsb
inc
loopne
xchg
sahf
mov
xchg
or
push
js
cs
dec
out
inc
test
inc
xchg
jae
dec
add
inc
cmp
fdivr
clc
sbb
mov
sahf
sbb
cmpsb
cmpb
in
mov
mov
and
xor
sub
mov
mov
mov
fs
jbe
gs
icebp
inc
movsl
testl
pop
ljmp
push
mov
jecxz
pop
ss
mov
inc
push
fcmovnbe
mov
cld
hlt
jge
add
jg
jg
mov
pop
push
mov
ret
inc
or
sbbb
or
cwtl
add
dec
js
mov
mov
lret
frndint
sub
test
mov
out
icebp
sbb
mov
xor
mov
mov
shrl
push
sub
int
into
inc
mov
jge
or
loop
sub
mov
mov
movsl
decb
jge
fwait
jae
std
dec
lea
and
loop
cmpsl
cltd
ret
arpl
loop
or
lods
es
ret
cmpsb
jo
stc
js
loop
fstpl
mov
xchg
push
mov
push
adc
lret
or
subb
roll
std
ljmp
add
fistpll
xchg
cmpsb
add
gs
xor
pop
jecxz
fwait
lods
mov
xor
fcom
clc
ds
xor
jne
out
lahf
jo
adc
push
add
ret
cmp
and
mov
xchg
in
shrb
jl
or
int
mov
jmp
mov
cmp
loope
out
enter
xor
popf
jb
in
push
xor
shlb
cmp
les
or
jge
or
sub
add
mov
and
aam
inc
orb
movsb
fwait
add
mov
inc
fsub
push
adc
mov
xor
cltd
cmp
mov
xor
jbe
jp
mov
lock
scas
stos
ljmp
in
fs
dec
aas
aas
outsl
ds
or
movsb
jo
out
ret
add
out
lods
sub
inc
enter
push
popa
mov
mov
xor
test
scas
pop
dec
sub
pop
xor
lret
imul
ret
jg
out
fidivs
xor
hlt
jge
rcrl
dec
out
lahf
and
cltd
dec
jns
mov
pop
sarb
cmc
fdivrs
ret
decl
or
add
mov
xlat
shrb
adc
push
push
ret
and
jl
mov
int3
das
mov
fcmovb
push
mov
or
mov
mov
sti
mov
pop
cwtl
lcall
ljmp
gs
push
addl
mov
sbb
jecxz
dec
pusha
sbb
fisubs
fcompl
dec
cmp
testb
lret
push
pop
adc
arpl
cmp
dec
add
mov
pop
pop
icebp
dec
sub
into
clc
push
or
push
and
nop
popf
out
xchg
in
adc
xor
ljmp
xor
add
pop
cltd
push
sbb
mov
sahf
push
mov
mov
ja
cmp
sub
mov
mov
adc
pop
repnz
and
les
mov
add
clc
repz
xchg
in
mov
xchg
shll
push
clc
dec
stos
frstor
add
lret
mov
pop
mov
mov
jno
das
gs
mov
mov
sarl
outsb
xlat
push
stos
addl
jmp
shlb
pop
imul
xchg
dec
pop
xchg
jp
loopne
xorl
orb
das
imul
cld
test
gs
ss
ljmp
mov
pop
xchg
test
in
or
push
jb
adc
xor
lret
cmovae
cmovae
imul
jae
movsl
add
subb
jp
mov
mov
xchg
cmpsb
inc
popf
rcl
xchg
xchg
jl
out
dec
mov
std
inc
enter
pop
cmp
mov
scas
dec
out
in
cmp
adcb
mov
std
xor
xor
xor
pop
ror
lods
mov
jecxz
mov
and
jo
cmp
int
repz
lock
jo
push
mul
sub
out
call
mov
nop
add
lds
inc
jle
xchg
pop
imul
std
pushf
lock
int
mov
xchg
xchg
xchg
dec
rcll
mov
inc
loop
mov
and
pop
add
loop
mov
mov
stc
push
cld
push
bound
imul
cmp
cli
nop
sbb
enter
cmp
jnp
sbb
inc
push
and
cltd
inc
fsubrs
sbb
jge
inc
aaa
lret
iret
daa
scas
mov
jae
pop
mov
xchg
xchg
xchg
sub
ljmp
mov
inc
popa
call
lret
push
lock
fstpt
cmpl
aas
fidivs
shl
inc
xchg
dec
pop
testl
jns
stos
inc
fxch
lea
in
loope
adc
fldz
or
dec
cmp
dec
and
fucomip
cmp
idivl
sbb
das
cmpsl
push
enter
insl
pop
jne
std
mov
and
cwtl
sub
insl
sbb
cmp
inc
sub
xchg
shlb
xlat
rorb
hlt
pop
insb
cltd
data16
dec
imul
push
cmp
add
seto
jle
lods
popf
sti
cmp
xor
mov
mov
sbb
dec
lret
popa
inc
mov
fmull
clc
xchg
fsts
pushf
loopne
int3
and
rcrl
in
xchg
add
mov
jl
out
mov
popf
pop
int
mov
imul
mov
sbb
pavgw
pop
fnstsw
xlat
lods
je
lahf
xchg
jle
xchg
fisubs
jns
xchg
sub
dec
in
mov
ss
in
mov
js
dec
fucomp
push
push
jmp
jne
pop
movsb
pop
mov
int3
stos
push
loop
add
js
aam
or
mov
addps
ror
jg
fdiv
mov
xor
push
jl
or
or
es
add
push
xchg
es
nop
or
ficomps
xor
push
ret
inc
out
nop
into
mov
add
test
cmp
push
loop
sub
pusha
push
notb
out
aad
or
rol
pop
rol
adc
pop
loope
sub
cwtl
mov
mov
lds
push
dec
mov
jae
inc
mov
mov
mov
mov
xchg
inc
mov
mov
dec
xor
push
lods
mull
xor
sbb
sub
imul
test
sbb
jnp
cmc
jecxz
out
xchg
ret
xor
cwtl
ret
xchg
adc
rorl
lcall
imull
inc
or
cwtl
cli
sbb
clc
arpl
leave
xchg
and
dec
jae
test
inc
scas
imul
dec
pop
lcall
shll
cltd
scas
push
loopne
test
pop
add
cmpsl
jno
inc
es
and
cld
cli
ret
rolb
jae
pop
fistpl
out
xchg
sbb
and
je
negl
ja
and
aam
shrl
ret
and
cli
cmpsb
adc
data16
sub
dec
cmpsl
pop
fistpll
pop
cmp
xchg
mov
loop
outsb
dec
cld
cltd
cltd
addr16
xor
out
mov
adc
jnp
jmp
pop
lods
stos
sub
lahf
cli
push
and
cwtl
push
jae
gs
cwtl
sub
push
push
jle
and
and
dec
setl
push
add
movsb
add
mov
xor
jns
pop
pop
xor
cmc
lods
ret
lahf
xchg
push
sbb
pop
out
pop
dec
outsl
imul
mov
mov
aad
aaa
push
dec
xor
mov
in
sub
mov
in
xor
scas
push
mov
mov
and
mov
mov
jne
and
sbb
lcall
in
cs
imul
push
jno
pop
jmp
mov
mov
test
and
movsb
clc
push
int
push
pop
xchg
mov
rcr
lock
test
in
cli
jno
push
and
mov
and
repnz
dec
jl
ret
pop
xchg
push
jp
add
and
mov
outsb
sbb
popf
clc
idivl
dec
pop
imul
mov
fists
in
cli
adc
push
mov
sub
jg
repz
inc
xchg
jno
cmpsl
or
subps
mov
mov
xchg
ss
inc
adc
insl
mov
enter
sbb
stc
and
out
sub
das
incl
xchg
imul
sbb
fwait
shl
or
cltd
jb
jb
fldz
pop
sub
adc
add
push
add
sub
sub
mov
sub
push
push
push
push
xchg
lret
insb
push
sub
cmpsb
inc
push
jne
pop
push
or
aad
or
sbb
xchg
hlt
repz
fnstenv
jecxz
hlt
lea
jmp
insb
mov
fcoml
outsb
imul
add
xchg
outsl
pop
or
push
pop
mov
mov
push
loope
icebp
add
jp
test
pop
out
adc
sub
cmp
daa
sbb
loop
xchg
jns
inc
sub
pop
xchg
cmp
push
push
cld
out
popf
mov
ds
jmp
cmp
pop
mov
mov
sbb
lea
mov
xchg
ja
mov
lods
stc
insb
mov
push
sti
stos
test
iret
leave
ss
dec
test
shr
outsl
add
sahf
and
ss
mov
sub
dec
js
out
dec
aam
enter
sbb
orb
inc
rcll
cmp
sub
push
mov
adc
inc
push
fcoms
mov
inc
push
test
add
cwtl
jle
aaa
sub
mov
jmp
sbb
or
push
xor
mov
jnp
repz
ds
inc
pop
shlb
lods
sbb
fwait
dec
jg
sub
and
shlb
sbb
inc
fldl
mov
jne
popf
loopne
pop
ret
pushf
mov
xchg
sbb
inc
and
jmp
jmp
shrl
push
pop
inc
or
stc
dec
jnp
lea
icebp
mov
sub
jecxz
dec
movsb
shll
xor
push
push
push
fistpl
in
pusha
stos
push
inc
xor
int
scas
jno
test
mov
mov
icebp
aad
xor
xlat
test
push
xor
add
push
adc
sbb
push
insb
inc
jle
lret
testb
lcall
or
push
dec
hlt
cmp
xchg
fsubr
outsl
jb
jp
or
cmpsb
lock
mov
out
hlt
lds
repnz
mov
enter
sub
into
andb
imul
push
xor
sahf
stos
daa
jno
call
or
js
jo
fsts
mov
stos
sbb
gs
push
push
adc
xor
test
jno
lret
cld
cltd
insl
or
out
cmp
mov
or
lcall
or
push
adc
mull
pop
mov
or
xor
imull
or
test
push
xchg
pop
dec
add
mov
xchg
pop
addr16
pop
gs
clc
fs
jmp
or
insl
and
test
xorl
in
dec
insl
mov
xchg
ret
xchg
inc
cld
les
push
inc
std
add
xor
subb
jno
xchg
mov
scas
dec
aam
inc
dec
aam
lds
and
mov
arpl
add
sbb
das
adc
leave
mov
dec
push
stc
and
addl
inc
sarl
les
or
out
jno
arpl
fidivs
push
dec
std
stos
test
push
inc
repnz
jne
push
push
xchg
mov
lds
stc
cltd
mov
jbe
nop
mov
leave
xor
pop
cwtl
movsb
cs
jg
adc
jge
out
pop
test
icebp
mov
fdivr
test
mov
add
inc
cmp
jg
andl
adc
push
jne
int3
or
push
lods
xchg
out
nop
pop
fstpl
jge
pushf
sbb
cld
cld
push
sbb
jge
cltd
jp
popl
jecxz
movsb
inc
xchg
mov
dec
sub
mov
push
repz
imul
dec
popf
mov
insb
mov
xor
or
lods
mov
call
popa
icebp
jno
dec
pop
repnz
push
pop
orb
push
push
mov
jecxz
and
imul
push
mov
jns
jb
or
out
test
fs
add
pop
je
leave
jae
es
jo
inc
lock
lret
sti
lock
test
dec
push
popa
aaa
push
mov
inc
jp
mov
dec
jl
inc
xchg
or
in
push
js
out
in
in
xchg
das
out
in
bnd
push
add
aad
inc
stos
shlb
cld
xchg
fs
int3
push
stos
cmp
fiaddl
popf
movsl
aam
inc
inc
int3
mov
xor
sbb
adc
jecxz
and
data16
xchg
mov
sbb
or
sbb
inc
js
test
cmpsb
and
push
cmp
and
call
mul
sbb
mov
sbb
loop
adc
icebp
mov
scas
add
ss
mov
mov
inc
pop
mov
shl
mov
nop
idivl
gs
mov
sbb
ja
pop
sarl
js
sub
xchg
dec
adc
adc
mov
add
sbb
fimull
ja
ljmp
cltd
sbb
mov
sahf
ss
scas
call
mov
xlat
sub
pusha
jns
movsb
and
push
aas
lahf
add
add
or
repnz
scas
xor
int
cltd
push
and
out
jo
notl
outsl
pop
repz
sarl
or
scas
push
leave
in
daa
cmp
mov
jae
and
ficoms
pop
add
dec
shll
dec
push
sub
xlat
pop
in
pusha
push
lcall
into
xor
sbb
jecxz
sarb
cs
ficomps
icebp
push
sbb
stos
jge
sbb
mov
insl
ret
jecxz
ja
push
iret
es
cmp
clc
pop
add
shl
dec
sub
dec
adcb
xor
mov
jp
ss
sbb
pop
sti
sbb
sbb
sbb
mov
xlat
js
jo
nop
inc
ret
daa
and
add
jmp
sub
fs
out
push
nop
mov
jno
inc
imul
add
cmc
fidivrl
lods
pop
jno
xchg
rorl
cwtl
fcmovnu
sahf
test
mov
cmpsb
std
xorb
add
push
xor
and
daa
add
cmc
push
test
adc
lahf
roll
jge
or
lock
es
adc
and
xor
ds
mov
dec
outsb
sbbb
ljmp
les
shlb
dec
test
in
dec
popf
add
mov
pop
popa
xor
lret
out
inc
inc
push
sbb
ja
out
xor
lret
mov
int3
jp
mov
icebp
push
xchg
popf
lods
clc
push
push
mov
xor
int
jg
mov
jbe
lods
sbb
shr
ljmp
adc
push
sbb
and
ja
aam
mov
in
cmpsb
cmp
mov
loop
mov
scas
pop
imul
mov
in
loopne
jg
jmp
fs
popf
push
shlb
nop
dec
or
and
xlat
xchg
insl
xor
int
xlat
or
jae
ret
stos
mov
clc
or
push
inc
in
jle
popf
int
stos
scas
adc
pushf
cmp
movsl
out
mov
mov
aaa
shlb
mov
mov
movsb
xchg
xor
shl
lcall
pop
dec
ljmp
addl
lret
sarb
mov
icebp
xchg
out
cmp
aas
pop
sbb
add
std
popf
fimull
into
mov
mov
clc
sbb
fdivr
inc
mov
sbb
popf
lret
mov
in
xor
adc
jns
mov
xor
rcll
ljmp
xor
call
fdivr
dec
stc
mov
mov
mov
nop
decl
cmp
mov
lods
stos
xor
rorb
fcompl
add
mov
gs
push
xchg
int3
cmp
cmp
cmp
addr16
lcall
inc
pushf
scas
das
nop
aaa
ss
adc
scas
inc
repnz
xchg
mov
lods
mov
cmp
in
sti
sub
shr
lock
cmc
cli
add
ds
pop
iret
dec
pop
jns
xor
cmp
sbb
dec
adc
clc
cli
cmp
sbb
and
sbb
fists
add
fs
ljmp
test
inc
jns
push
ljmp
xor
add
mov
imul
aaa
lock
addr16
or
out
es
divb
ja
push
add
push
sahf
add
xchg
lret
mov
fwait
sbb
add
mov
lcall
xchg
xor
sbb
stos
push
or
xlat
or
movsl
dec
xchg
xor
sub
addr16
addb
mov
xchg
pop
cmp
jmp
sahf
mov
xor
daa
idiv
imul
mov
pop
arpl
out
mov
cmp
int
push
fstps
sbb
stos
pop
add
and
test
dec
gs
adc
testb
add
jmp
and
mov
xchg
in
jb
repnz
sti
add
ss
gs
mov
pop
gs
and
orb
push
mov
sbb
loop
xor
push
add
test
push
xchg
push
jecxz
mov
or
mov
dec
cmc
inc
adc
popa
mov
and
lcall
dec
cs
mov
call
jp
fiadds
iret
lcall
ficoms
mov
add
insl
jno
adcl
decl
sahf
daa
adc
orl
jnp
int3
jae
popl
xor
fistpll
cld
mov
xchg
push
dec
sub
jo
arpl
jnp
je
mov
mov
adc
lock
jl
arpl
pop
dec
in
sub
sahf
pop
push
cmp
cld
ret
mov
lods
into
cli
pop
xchg
cs
es
sbb
mov
mov
leave
push
push
mov
outsl
mov
loope
sbb
mov
test
pop
inc
dec
inc
cmp
sub
add
stos
pop
jnp
jmp
loop
das
xchg
inc
mov
xchg
dec
clc
or
iret
sbbl
push
sub
sub
fstpl
adc
add
int
mov
cmc
push
neg
shrl
jae
cld
cmpsb
lret
mov
lahf
mov
dec
jbe
dec
test
lock
cld
pop
sbb
or
jne
dec
push
movsb
sub
mov
mov
pusha
scas
out
iret
cmpsl
test
cmp
sub
orl
stos
push
loop
inc
out
mov
xor
jg
test
cmpsb
jbe
mov
pop
push
xor
ja
out
int
arpl
bnd
jno
xor
jae
test
jge,pt
xchg
add
mov
pusha
cmp
std
ja
pop
push
pop
addb
or
adc
jae
xchg
test
lock
cmc
xchg
mov
sarb
or
adc
cmp
jns
mov
cmpsb
mov
adc
pop
inc
movsb
data16
sub
and
enter
sbb
dec
out
pop
xchg
sub
add
mov
xchg
jmp
loop
popa
jo
repz
mov
movsl
pusha
fadds
enter
and
fs
out
jbe
add
mov
push
les
pop
rorl
iret
mov
shrd
add
mov
sarl
int3
jg
inc
fucomp
and
mov
scas
int
outsl
mov
aad
loope
sbb
and
daa
ret
push
outsl
nop
fwait
cmp
push
fsubl
push
sub
xor
imul
subl
testb
in
pop
xchg
iret
subb
push
xor
jecxz
scas
ss
mov
dec
out
inc
push
inc
insb
sub
add
adc
inc
and
test
lcall
mov
sti
insb
fcompl
fisubs
sahf
mov
pushl
fcmovnbe
addr16
fidivrl
dec
imulb
mov
rol
dec
call
ret
loop
ljmp
test
jle
and
pop
add
and
xchg
mov
add
or
xor
into
or
fldt
jnp
sub
pop
loopne
iretw
pop
out
mov
dec
xlat
inc
les
cmovle
dec
sub
frstor
scas
push
and
push
imul
jle
popf
pop
jo
sbb
push
inc
cmpb
xchg
movsl
inc
jle
stc
mov
cmp
cmpsb
mov
dec
fs
add
add
mov
dec
js
pop
push
cltd
sahf
add
mov
aad
call
or
mov
aaa
cltd
mov
dec
pushf
adc
add
sbb
icebp
in
xor
inc
popa
xchg
inc
sti
sarl
pop
add
pushf
enter
dec
push
arpl
cmp
movsl
div
mov
aad
cmp
dec
addr16
sbb
dec
data16
cmp
pop
jle
xchg
lret
data16
pop
add
push
rcrl
test
lea
add
mov
ret
gs
fprem
imul
and
and
lods
mov
in
hlt
push
inc
xor
sbb
sbb
daa
mov
pop
addr16
mov
js
jae
push
test
mov
popf
test
xchg
cmc
sub
fidivs
mov
nop
xchg
sahf
rcrl
push
and
mov
or
sarl
iret
mov
xchg
adc
lods
ja
push
and
mov
pop
sbb
sub
mov
dec
push
xchg
or
insb
fs
cmc
jo
pushf
bound
push
pop
shrl
inc
scas
enter
test
inc
pop
xor
lods
mov
ret
mov
mov
fadd
sarb
popf
and
sub
dec
gs
pop
xor
fucomip
xor
cmp
mov
inc
ja
push
mov
cmp
aam
jbe
or
xchg
loop
std
mov
es
add
das
pop
repnz
in
or
push
mov
jo
repz
loope
xchg
pushf
sub
xchg
inc
jae
push
shlb
xor
pop
out
push
push
adc
add
fnstenv
outsl
in
popf
out
fidivrl
mov
dec
cwtl
xchg
add
cli
stc
xchg
push
jae
xchg
mov
std
sbb
lahf
xor
mov
insl
adcl
xchg
stos
leave
out
aas
xchg
sub
jg
inc
sar
outsl
mov
inc
cltd
inc
iret
push
mov
aaa
into
adc
mov
cmp
lds
lods
stc
jne
cmpl
xchg
adc
adc
fdivrl
xchg
into
and
push
jns
repnz
fadd
inc
xor
into
mov
sub
mov
mov
pushf
cwtl
aas
pop
xchg
fwait
sub
push
lcall
scas
cs
addr16
call
sahf
out
rcrl
out
sbb
aaa
mov
jbe,pt
les
ljmp
xchg
jnp
and
fisttps
dec
sub
lods
je
nop
lcall
mov
aam
jl
in
jmp
jge
xor
cmpsl
pop
inc
test
je
push
or
cld
dec
lds
xchg
inc
adc
mov
adc
inc
inc
enter
dec
cwtl
mov
iret
out
cli
rcrl
sub
in
lret
arpl
imul
inc
and
lret
adc
jmp
insl
push
sub
pop
test
cmp
jecxz
loopne
daa
fsubs
inc
sbb
jg
jp
cmp
xchg
aas
sub
and
int3
add
inc
adc
test
clc
popf
jle
and
out
je
mov
fs
in
iret
aad
fs
jecxz
insb
dec
fcomps
rolb
loope
cmovne
call
ja
or
lret
fdivs
push
hlt
outsb
push
or
int3
inc
decl
mov
lahf
jbe
out
fbstp
jecxz
dec
insl
scas
cmc
fsubs
or
add
sub
addb
sub
mov
mov
cmp
daa
or
ret
dec
ja
test
cltd
pop
mov
rcll
push
inc
sar
scas
mov
stc
xchg
inc
test
mov
and
xor
test
nop
inc
dec
adc
out
pop
ficompl
lahf
xchg
pop
xor
test
rolb
clc
call
sbb
xchg
push
dec
dec
jmp
pop
ss
inc
int
ss
aad
test
cmpsl
or
sbb
pop
mov
lods
jo
outsl
pop
dec
repnz
dec
adcb
cltd
jae
adc
pop
pop
ret
add
xchg
sbb
mov
jle
push
jno
sbb
bound
ret
dec
fildll
ljmp
sbb
mov
lods
movsl
inc
pop
adc
popf
mov
pusha
mov
and
or
data16
pop
jmp
je
pop
mov
push
aas
add
std
jb
adc
push
mov
dec
inc
mul
cmc
or
mov
or
inc
pop
das
sbb
mov
lods
mov
aam
repnz
mov
jb
or
mov
and
sub
or
dec
mov
rorl
jbe
repz
inc
mov
call
xchg
xchg
add
jno
test
mov
movsb
jb
je
fisubrs
inc
cld
or
and
lds
sub
add
jnp
andb
sbb
pusha
test
insl
mov
test
jmp
xchg
pop
les
cmp
mov
addr16
movsl
xlat
jb
hlt
jge
sub
repnz
ja
jnp
stos
call
js
incl
jmp
leave
sbb
and
aas
or
mov
pop
sbb
lock
lds
movsb
lcall
adc
out
outsl
mov
mov
or
insl
jl
xchg
and
xor
icebp
pop
or
insl
sub
xlat
pop
out
mov
push
xor
and
adc
jg
pop
test
mov
popf
popa
or
repz
push
jns
mov
popa
lock
pop
dec
ret
andb
adc
pop
pop
lea
iret
push
mov
cmc
and
adcl
sarb
add
mov
dec
mov
mov
test
mov
jb
dec
lret
mov
ret
pop
addr16
lret
dec
jbe
pusha
mov
mov
xor
inc
dec
xchg
xor
aam
lods
push
and
mov
jge
add
ljmp
movsl
out
cmp
xchg
loope
filds
sub
outsb
cld
in
das
rcrb
push
push
mov
cmpl
dec
addr16
jne
or
fsubs
push
sub
fucomp
xchg
push
jb
call
in
outsl
aad
rolb
cmp
repnz
sbb
aas
das
pop
out
push
icebp
xchg
xor
jge
mov
jmp
iret
shlb
pop
xor
push
sbb
xor
mov
sarl
mov
andb
shrb
jle
lods
jge
push
mov
cli
popa
das
aam
xchg
sahf
ja
jae
fnstsw
and
shll
cmp
cmc
add
jmp
pusha
sub
shlb
xor
add
push
or
popa
xchg
aad
mov
xchg
repz
mov
int
sub
sbb
outsb
ret
loop
adc
popa
es
sub
inc
xchg
xlat
jne
push
pop
shlb
and
repz
fldl
loop
jnp
and
insb
imull
out
das
push
mov
rcl
sub
je
dec
mov
pop
testl
fistl
pop
fimuls
and
or
add
ret
push
lcall
gs
dec
cmp
adc
pop
test
test
xchg
leave
out
cmp
outsb
mov
add
fnstenv
xor
mov
adc
bound
aas
xor
bound
adc
or
mov
ljmp
or
enter
lea
sub
inc
xchg
push
inc
and
sub
shl
insb
and
ljmp
mov
cltd
cmpsl
xchg
cmpsl
cmp
fstp
xlat
add
fs
pop
mov
jecxz
dec
dec
rcll
pop
or
pop
arpl
mov
cmc
out
movsb
pusha
cmp
ds
cld
mov
xchg
cmp
xchg
int3
mov
fmuls
jmp
in
or
in
js
data16
push
ds
mov
jge
aaa
push
cmp
sub
add
sbb
mov
dec
xor
clc
int3
movsb
xor
xor
mov
adc
jnp
sbbl
sub
inc
dec
sar
nop
and
notb
dec
sbb
jno
xchg
inc
jo
testb
inc
push
cmp
xor
dec
cmc
xchg
sbb
in
xor
jbe
dec
xchg
xor
xchg
mov
xor
sbb
sub
call
jge
les
mov
pop
xor
shr
and
ficomps
popa
jo
sbb
sti
cmpsl
xchg
xlat
jg
mov
outsl
mov
mov
cli
mov
mov
push
jmpw
inc
sub
imul
loop
jmp
sub
jecxz
inc
decb
sbb
sti
push
pop
dec
lret
xchg
loopne
cltd
out
jle
pop
test
fldcw
loope
test
pop
xlat
gs
rcll
pop
dec
adc
insl
loop
test
push
cwtl
dec
sub
arpl
mov
xor
pop
outsl
cltd
mov
sub
inc
or
or
mov
mov
std
test
push
jno
sti
ja
adc
arpl
jbe,pn
shrb
insb
scas
pop
std
inc
fmuls
push
mov
popa
mov
in
adc
jmp
mov
jecxz
dec
insl
and
xchg
cmp
xchg
adc
bound
and
sbb
pop
jle
cmp
inc
and
adc
or
xchg
mov
imul
jo
push
or
aas
out
rol
lahf
shll
ljmp
xor
lods
pop
jb
add
push
ret
cmc
icebp
inc
push
sbb
push
aam
inc
out
adc
test
add
push
test
pop
mov
hlt
pop
xor
xchg
adc
addr16
insl
inc
aam
test
mov
lret
shll
mov
sbb
in
in
cld
insb
out
mov
mov
imul
ja
mov
jp
pop
fimuls
lcall
inc
loope
insl
mov
cmp
inc
iretw
mov
inc
pop
push
fsubs
scas
loop
and
push
cld
inc
xchg
testb
mov
and
pop
xor
scas
aas
fs
fbld
testl
pop
scas
imul
gs
iret
je
cld
push
mov
loop
lea
mov
lcall
incb
add
jl
add
fdivr
mov
nop
or
imul
sti
sbb
inc
dec
mov
and
fldcw
sub
cmpsb
dec
sub
jns
fcoms
mov
lods
jmp
outsl
mov
xchg
imul
test
or
mov
and
fidivrs
lds
xorb
shrb
xlat
xchg
test
popf
xchg
xchg
repnz
lock
popf
fists
mov
mov
clc
insb
jne
shr
adc
pop
in
dec
cmpsb
jl
dec
sahf
adc
int
cmp
pushf
into
hlt
test
jb
or
ja
fcoms
mov
mov
outsl
jle
fptan
add
pop
out
inc
insl
rorl
or
jmp
jecxz
testb
xchg
mov
xchg
arpl
cmpb
adc
rcrb
cli
adc
inc
lret
mov
or
hlt
in
pop
into
xchg
jae
xor
add
inc
repnz
push
jmp
dec
xor
movsb
cltd
jnp
ljmp
and
pushf
sarb
enter
loope
mov
xchg
inc
jae
scas
jb
fsubs
cwtl
aaa
and
mov
cmp
divb
xor
cmpsb
push
rcl
pop
insb
imul
es
nop
jnp
and
pusha
inc
or
pushl
out
outsb
cwtl
arpl
inc
movsl
jb
cli
shll
sbb
addb
lret
lods
sbb
inc
adc
cmpsl
addr16
imul
ret
mov
adcb
xor
push
loope
push
aam
shll
and
pushf
xor
add
xlat
add
or
in
pop
mov
rorl
pushf
decl
jnp
mov
xchg
insl
adc
sub
xorb
jl
mov
jmp
pushf
push
sub
and
addb
adc
jnp
movsl
pusha
jmp
lods
xchg
add
dec
test
mov
push
mov
sub
cld
or
pop
imul
adc
adc
jmp
les
add
xor
ja
test
out
fdivs
pop
pushf
xchg
jbe
cmp
mov
mov
dec
push
add
loop
mov
rclb
jo
xchg
add
xchg
sbb
pushf
lret
out
cmp
adc
inc
dec
push
lret
inc
scas
or
and
outsb
inc
xor
mov
adc
stc
xchg
adc
pusha
loope
dec
stos
cmp
rol
idiv
ljmp
cmp
insb
adc
bound
rcl
pusha
rorl
popa
inc
push
inc
pop
rcl
adc
xorl
std
mov
mov
jne
inc
cmpsb
jecxz
frstpm(287
in
jb
lcall
sbb
je
test
fmul
jl
lcall
lds
pop
adcb
fstpt
imul
push
mov
push
push
cli
pusha
jb
test
ljmp
jno
pop
imul
loope
xorl
push
lea
jo
lods
pop
stos
sbb
ds
outsl
sbb
lock
sub
xchg
scas
mov
inc
out
push
pop
mov
inc
rolb
jmp
cld
sub
leave
out
or
jno
lret
fisubl
lds
enter
mov
cmp
jbe
in
jecxz
xlat
add
cmpsb
xchg
mov
mov
movsb
repz
pop
cmpsb
xchg
in
sub
mov
mov
add
int3
push
inc
aad
test
xor
aad
fidivrl
adc
fsubr
mov
cld
insl
fmuls
scas
cmpsb
mull
lcall
add
out
xchg
cmc
sti
jg
daa
sarl
hlt
adc
mov
gs
cwtl
das
sub
inc
jae
in
xlat
lock
and
pop
pushl
add
mov
and
rcrl
clc
rcr
mov
rcll
mov
lods
fdivrs
pop
push
mov
ret
mov
test
mov
mov
in
sub
in
jne
push
aad
mov
stos
in
pop
jecxz
push
push
js
cmpl
stos
fcmovne
inc
pop
mov
popf
xchg
or
sub
mov
pop
pop
fcompl
in
xchg
in
out
scas
int
sbb
pop
mov
leave
idiv
lret
cltd
add
imul
mov
sub
mov
leave
push
mov
xchg
push
push
dec
and
idivl
dec
xchg
mov
xor
stc
addb
rclb
in
jmp
xlat
int
mov
mov
sub
mov
dec
pop
cmp
push
daa
pop
lahf
push
sub
and
jmp
sbb
jmp
mov
sar
lret
bound
mov
add
push
insb
ljmp
iret
scas
or
pop
sub
test
adc
test
shld
sbb
rorl
aam
or
dec
hlt
push
pushf
cmp
push
sub
push
jecxz,pn
push
sub
pop
mov
xchg
fiaddl
cltd
cmpsb
jno
enter
ss
data16
mov
jmp
call
push
push
scas
inc
push
fs
sub
push
outsl
repz
mov
mov
rep
std
jp
shll
inc
cld
lods
fwait
adc
inc
aaa
divb
mov
xor
dec
sbb
xchg
sub
aad
inc
shl
dec
pop
sbb
mov
lods
mov
sbb
arpl
mov
or
add
lds
push
cs
insl
and
mov
in
and
out
test
xchg
mov
sbb
aad
daa
mov
cmp
mov
mov
or
adc
mov
push
pop
daa
psubusb
adc
lods
and
test
push
mov
fucomi
imulb
lods
add
xchg
popa
and
inc
dec
add
repz
cmpsl
int3
jecxz
or
dec
shrb
movsb
in
xchg
testl
pop
xchg
int
roll
inc
in
adc
test
dec
scas
nop
stc
pop
jp
loopne
subl
addr16
push
std
push
adc
lret
rolb
xchg
push
andb
je
stos
dec
ret
inc
jbe
pusha
lea
pop
or
and
ret
jns
scas
mov
jp
adc
inc
fwait
sub
cli
push
ja
pushf
inc
jg
rol
cli
sub
xlat
lea
push
fs
adc
adc
in
cmpsb
imul
inc
or
shl
mov
adc
inc
jns
clc
or
adc
je
push
push
sub
aas
loope
cmpsb
push
pop
push
push
icebp
loop
mov
add
mov
xor
sbb
mov
leave
dec
pop
inc
mov
dec
mov
mov
popf
test
dec
mov
mov
int
adc
xor
pushf
inc
mov
sub
mov
addl
mov
sbb
out
in
inc
scas
pop
nop
filds
out
dec
xchg
stos
std
movsb
aad
pcmpeqb
and
or
mov
jns
cmp
dec
xor
xchg
rcrl
or
xor
push
jns
push
mov
cs
dec
sbb
out
aaa
xor
xchg
jge
dec
inc
nop
sbb
lds
sub
ljmp
push
repz
ds
scas
sbb
jecxz
shlb
pusha
in
rol
add
add
inc
loopne
add
jns
mov
daa
lret
cmp
outsb
xor
fbstp
sbb
jo
add
pop
fwait
dec
and
or
dec
ljmp
sub
xchg
leave
rcll
jnp
iret
ret
ret
hlt
daa
and
xchg
in
ss
push
jbe
jp
push
lret
mov
xchg
mov
push
sbb
sub
xchg
mov
sbb
sarl
dec
in
aad
repz
mov
aad
lods
jmp
mov
mov
push
in
vmwrite
cld
xchg
outsl
scas
mov
pop
movsl
lods
fsts
mov
mov
pop
loopne
cs
sub
call
push
pop
jne
or
stos
inc
ret
jnp
lea
lcall
std
jle
jge
fildll
cmp
stc
in
mov
cmpsb
mov
stos
ret
ret
call
or
lcall
push
scas
add
sub
cld
movsl
outsb
mov
int3
xchg
cmp
jp
xor
mov
mov
leave
adc
xchg
rolb
ret
movsb
fnstenv
faddl
movsl
cmp
jae
shrb
bound
add
sbb
xchg
aad
in
sub
daa
mov
mov
pop
jno
mov
jmp
sbb
adc
mov
mov
mov
scas
jns
pop
mov
push
scas
ret
and
insb
movsl
mov
ds
and
pop
dec
std
push
or
sahf
out
jmp
or
rcrb
and
and
jae
or
pop
or
mov
xor
aam
rcl
std
addr16
adc
out
addr16
fmull
add
adcb
cli
call
add
sbb
pop
sbb
jae
into
push
sti
adc
scas
sub
lret
mov
sub
cmc
mov
xchg
pop
jns
ja
lds
fildl
or
int3
das
mov
pop
push
in
adc
or
movsb
push
jg
aaa
vpsubusb
push
push
loope
mov
lahf
rcrl
popf
push
or
add
cmpsb
ljmp
cmp
adc
int
mov
out
out
test
fdivrl
movsb
jp
leave
push
xchg
add
in
ss
in
std
add
int3
out
mov
xor
in
pushl
add
fsubl
pcmpeqd
aam
push
dec
loopne
or
inc
and
cltd
adc
inc
push
fmul
dec
nop
pop
ds
iret
mov
xchg
test
mov
dec
xchg
mov
and
mov
xchg
cmp
aas
dec
lahf
ficoms
cmc
sahf
mov
aam
les
push
inc
out
mov
and
xchg
dec
or
jle
outsb
mov
loope
addl
cltd
mov
and
lods
cwtl
subl
and
push
push
aam
repz
in
adc
movsb
mov
mov
mov
test
add
orb
daa
push
adc
xlat
add
outsb
popa
ss
cmc
xor
fsin
sbbl
stos
loopne
or
ret
and
xor
lock
mov
js
mov
pusha
rcrb
and
dec
or
pop
mov
andl
mov
xor
dec
jns
mov
js
push
mov
mov
pop
mov
jecxz
push
push
inc
sub
inc
jb
xchg
mov
icebp
sbb
xor
sub
loope
js
imul
push
jns
test
pop
mov
stos
nop
mov
in
bound
mov
sub
cmp
lods
out
sti
xor
leave
inc
nop
fisubrs
jmp
xchg
xchg
cmpsb
or
inc
stos
imul
pop
adc
pop
add
nop
dec
push
stos
sub
dec
in
mov
xor
pop
xchg
ljmp
mov
adc
rorb
jecxz
pop
fstpl
adc
in
inc
pop
imul
push
mov
ljmp
imul
ror
jg
sub
fwait
push
mov
or
xchg
lds
sub
jae
mov
add
adc
xor
aas
hlt
les
scas
in
and
xlat
and
push
jns
sbb
push
sub
mov
sub
sti
pop
movsl
cltd
in
and
sub
adc
xchg
sqrtps
xor
xor
mov
sbb
cltd
aas
lcall
xchg
push
push
dec
xor
jge
jmp
int
shrb
inc
insb
push
call
push
sbb
mov
mov
mov
jle
stos
fdivrs
orl
and
imul
in
dec
lods
pop
mov
adc
test
inc
out
stc
lock
movsb
jl
in
jbe
pop
xor
fidivs
pop
and
icebp
dec
xchg
xchg
std
jb
nop
imul
sbb
jecxz
and
push
xchg
and
mov
sbb
out
sub
xor
lods
lcall
js
push
xchg
or
pop
inc
pop
cmp
rclb
stos
add
jo
lods
pop
xorl
sbbl
pop
fsubs
clc
add
xchg
and
cmp
ja
out
push
jns
in
fcomip
data16
mov
test
aaa
push
test
mov
inc
int
loopne
cmp
lds
dec
popf
stc
je
fisttps
imul
mov
or
mov
or
hlt
into
repz
std
mov
xchg
es
push
shll
pop
scas
mov
cmp
fildl
sbb
jne
add
push
or
mov
pop
sbb
xor
shl
and
mov
scas
cmp
leave
clc
stc
sub
repz
jnp
jg
push
cmpsl
sub
sub
pop
call
into
and
jb
sub
mov
sub
test
mov
jmp
aam
sarb
lea
sbb
cmp
or
mov
aam
mov
test
mov
pop
mov
xchg
mov
mov
jle
std
mov
mov
mov
test
mov
dec
in
maskmovq
notl
xchg
test
sahf
xor
hlt
dec
insl
int
les
add
ds
fsubr
nop
mov
daa
ficoms
push
inc
inc
insl
int
mov
ret
stos
and
idivl
xchg
insl
sbb
mov
popa
and
push
mov
jle
xchg
adc
xorl
pop
inc
lret
mov
and
lods
and
shrb
paddsw
jle
mov
sbb
or
mov
repnz
repnz
adcl
cmpsl
adc
pop
fbstp
lock
pop
jecxz
mov
pop
out
cmp
fists
in
ror
popf
jo
cmp
jnp
adc
and
xchg
push
lea
pop
add
or
loope
outsl
pushl
xor
setno
or
cmp
add
rorb
inc
in
xchg
add
jae
mulb
lds
cmp
flds
mov
stos
dec
fcompl
test
mov
adc
pop
pop
lret
pop
shll
pusha
jg
movsb
sub
and
fcmovnbe
outsb
cwtl
divb
lahf
ds
jno
inc
add
inc
inc
adc
sbb
adc
loopne
outsb
mov
cld
add
lcall
pop
or
xor
pop
scas
or
mov
pop
orb
lret
add
sub
das
dec
scas
popf
lahf
mov
cmc
push
pop
jl
pop
fsubl
pop
pop
xor
xchg
xchg
and
pop
sbb
adc
cltd
aas
xor
or
push
push
pusha
and
fcomi
into
pop
stc
cmc
fdivr
pop
push
cwtl
pop
cmp
lods
bound
cltd
test
mov
lea
jns
outsb
sbb
push
andl
outsb
movsl
mov
push
fwait
scas
pusha
mov
data16
cmp
jbe
mov
clc
and
das
mov
push
movsb
push
push
add
hlt
into
jge
gs
mov
mov
jno
ja
push
pusha
jo
jno
xchg
inc
js
xor
push
outsb
in
popf
pop
push
pop
jp
xchg
das
cmc
add
push
mov
xchg
add
sub
xchg
dec
leave
lahf
in
andb
mull
testl
xchg
or
out
cmp
movsb
and
les
stc
xchg
aam
jae
les
xchg
ret
cltd
push
cmp
mov
or
cmp
insb
rclb
xadd
repnz
inc
scas
movsl
jns
jle
jmp
rorl
ss
sbb
repnz
in
xchg
imul
jno
or
mov
sbb
movntps
icebp
outsb
jle
xor
adc
xor
jbe
mul
mov
mov
push
push
fs
cmp
mov
xor
fdivr
mov
push
js
out
ljmp
and
or
xchg
pop
dec
adc
rolb
push
leave
sarl
add
push
inc
dec
xor
pop
push
cmp
pop
rol
imul
mov
push
mov
adcw
repnz
cmp
call
inc
imul
add
shlb
push
mov
cmpsb
movsb
cld
or
mov
mov
je
xor
in
push
jb
mov
sbbb
cmc
xchg
in
outsb
add
out
ret
xchg
fimull
ret
shll
pop
adc
jno
movsb
push
mov
mov
mov
js
nop
push
mov
in
cmpsb
push
das
rorb
pop
in
cmp
ss
adc
pop
inc
or
jle
movsl
mov
and
frstor
xchg
mov
inc
shll
mov
cwtl
jp
js
test
mov
push
sub
fisttpl
notb
pop
push
or
jae
inc
insl
xor
scas
push
dec
xchg
mov
push
sahf
cli
inc
adc
das
sbb
xchg
mov
cmpsl
sub
in
cmp
dec
xchg
cmp
cmp
loopnew
ret
sbb
mov
add
negb
inc
adcb
lods
push
cli
sbb
dec
cltd
sbb
loopne
ret
add
inc
and
inc
mov
repnz
xchg
enter
mov
sbb
incl
out
xor
imulb
aad
fs
push
add
dec
scas
fadds
push
inc
jo
sub
in
pop
mov
mov
adc
push
push
lret
andl
cmp
cli
outsb
and
sbb
and
mov
incl
les
lret
adc
push
cmc
insb
or
ljmp
loopne
adc
jb
sub
push
lret
rcrl
addb
insl
sbb
insb
nop
sbb
scas
insb
icebp
sub
repz
aas
mov
or
mov
test
or
xor
notl
popa
adc
popa
fisttpll
test
cmp
mov
rcrb
jo
xchg
and
mov
mov
adc
xor
fisubl
or
and
lods
and
cmp
fs
dec
cmp
mov
mov
mov
arpl
ds
adc
cmp
jbe
mov
loope
enter
cmpsb
jb
lcall
mov
out
cli
xchg
pop
jne
sbb
cmc
mov
sub
jne
adc
sub
shrb
xor
sbb
push
fidivs
out
out
lea
xchg
popa
insl
rorb
pop
divl
decl
pop
dec
cwtl
cmp
mov
ficoml
cmp
pop
xor
adc
leave
inc
sbb
xlat
aaa
shll
and
outsb
ja
test
mov
lods
mov
mov
pmaxub
sahf
pop
in
inc
mov
scas
loop
inc
jno
movsb
xchg
jge
ss
out
data16
fs
adc
mov
es
aam
outsb
movsl
mov
outsl
fisubrl
push
imulb
arpl
adc
push
mov
lds
lret
ss
cmpl
out
or
jge
xor
mov
aas
and
arpl
push
divl
lds
clc
jno
in
repz
repnz
jecxz
scas
sbb
adc
fisttps
popf
insb
test
inc
sub
jp
push
int
adc
insb
push
and
movsb
mov
out
jae
fwait
sub
sbb
jmp
dec
lret
test
push
ds
mov
mov
mov
scas
stc
push
fwait
jo
negl
cmp
xchg
cmpsl
mov
xor
push
xcrypt-cbc
cmpsl
xchg
xor
mov
jae
int3
mov
ja
shlb
fs
jge
rcrb
sub
jb
cmc
in
test
adc
mov
adc
jecxz
cltd
push
out
xlat
popa
loope
push
ret
cltd
add
aas
xchg
js
fldenv
repnz
mov
jmp
mov
or
les
pop
sbb
mov
xor
pop
pop
fildl
movl
jae
stos
inc
pop
clc
fists
sbb
pop
std
xchg
pop
mov
jo
arpl
test
sbb
lahf
xchg
mov
push
mov
fwait
pop
mov
bsr
scas
cld
jl
and
and
cmp
push
mov
in
jl
sub
addr16
lret
pop
push
sub
mov
jno
mov
add
xlat
movsb
add
filds
jne
es
repnz
in
mov
push
mov
add
mov
mov
add
mov
xor
sti
mov
fs
mov
imul
std
mov
insl
add
add
outsb
addr16
adc
pushf
xchg
and
sbb
dec
fists
orl
hlt
outsb
outsl
inc
shlb
or
or
jno
adcb
ja
or
fists
rcrb
mov
jge
lret
cmp
cpuid
sbb
js
cli
sub
negl
fisubs
mov
cld
into
in
pop
jge
out
or
xchg
mov
and
bound
mov
push
popa
pop
repz
fwait
xchg
cmp
dec
or
sub
out
stos
insl
mov
mov
rol
pop
repnz
rolb
mov
incb
fcompl
movhlps
pop
mov
push
dec
das
add
adc
out
ja
fistpl
jge
addb
gs
inc
jne
adc
push
and
stos
xor
or
std
pop
cmpsl
rcll
stc
fldcw
es
sub
mov
addl
es
test
mov
xor
loop
nop
imul
int3
push
cld
stc
jl
outsb
callw
cmpl
jecxz
fwait
fwait
lret
cmp
and
lret
add
ljmp
leave
stos
imul
xchg
insb
mov
cwtl
push
sahf
inc
mov
inc
cmp
test
frstor
inc
inc
popf
mov
sbb
jle
cli
push
fldt
sbb
xchg
mov
fwait
movsl
ljmp
mov
cmp
fidivl
decb
xchg
and
bnd
jge
adc
pop
jmp
cmpsl
dec
mov
pusha
mov
pop
add
xchg
js
and
fmulp
add
stos
dec
add
mov
bound
push
fs
or
xor
or
xor
pop
cmc
stc
out
jae
dec
sahf
rol
and
xchg
xchg
pusha
sahf
in
movsl
xchg
lret
mov
jbe
xlat
jns
mov
push
mulb
lods
add
faddl
mov
imul
and
mov
fcom
outsl
push
cmp
in
fisubs
ljmp
or
jo
bnd
push
push
lock
add
ret
stos
fidivl
push
inc
popf
jge
jns
jg
xchg
scas
cwtl
mov
clc
out
mov
sar
pop
dec
lret
das
mov
xor
iret
push
test
mov
out
ss
push
dec
add
std
push
out
rclb
dec
or
sbb
inc
in
dec
push
add
insl
fbstp
out
loopne
dec
in
mov
negl
sti
test
loopne
add
sub
mov
pop
and
mov
add
sub
movsl
mov
pop
mov
repnz
mov
and
out
pop
xor
pop
icebp
loope
js
arpl
adc
jo
mov
cmpsl
mov
cli
mov
adc
or
shlb
xor
loopne
clc
inc
in
outsb
fs
xchg
sbbb
int
loopne
aas
mov
push
sub
add
cmpsb
cmp
cmp
ret
and
cld
shr
lds
outsl
and
adc
ret
loop
xor
std
fmul
inc
lea
hlt
cmpsb
or
push
jae
andb
bound
les
push
cmpsl
ret
sub
sub
inc
jns
lret
insb
movsb
add
push
jmp
xchg
and
es
nop
inc
stos
das
insl
or
mov
push
cwtl
fs
bound
and
arpl
jb
dec
in
pop
sub
jg
iret
push
sbb
mov
push
fistl
mov
ja
imul
sub
mov
mov
aaa
lcall
mov
jl
and
pop
xchg
lahf
out
stos
cmp
xchg
popa
jp
aad
jb
jl
ror
movsb
xchg
popa
int
push
addr16
add
lds
inc
jno
cmp
sbb
lods
inc
fcoms
test
add
lea
mov
aad
inc
or
icebp
mov
stos
xor
adc
ljmp
call
bound
cmp
data16
outsl
out
not
and
push
fisttps
popa
push
jns
cmpsb
jns
es
push
and
push
aaa
pop
lahf
std
or
pop
and
lahf
push
push
xor
repnz
xor
in
push
mov
dec
fcmovu
mov
push
ret
into
js
stos
lods
pop
rcr
repz
rep
mov
outsl
outsb
mov
xor
xor
pop
fwait
out
push
mov
xor
mov
sbb
lods
dec
add
inc
dec
jb
movsl
mov
cmp
fcompl
fs
adc
and
ljmp
dec
push
rcll
xor
mov
sahf
movsb
adc
cmpsl
test
cltd
sbb
test
jo
mov
mov
adc
mov
pop
lret
add
ret
xchg
icebp
add
aad
cmp
stc
xor
push
push
jle
or
call
adc
sbb
push
xor
mov
sti
adc
xor
adc
out
std
mov
aas
roll
addr16
out
rolb
mov
outsb
pop
cmc
jge
das
aas
sub
fsubs
push
cmp
subl
sahf
and
sti
outsb
popf
popa
iret
sahf
nop
data16
mov
cmp
cmp
or
std
mov
pop
adc
iret
icebp
bound
lret
stos
jb
fwait
jecxz
sub
lods
pop
add
mov
or
ljmp
xchg
jbe
aad
sub
xor
outsl
pop
xchg
mov
push
addr16
shrb
inc
aas
fadd
sbb
sub
jmp
out
or
loop
jne
push
add
xlat
pop
add
scas
jg
cli
ljmp
and
call
jmp
add
mov
dec
dec
dec
fstps
lret
arpl
lret
push
mov
lahf
cmp
add
test
jns
lods
push
cwtl
pop
or
or
pop
xchg
movsl
call
shll
mov
jp
call
or
and
jle
pop
add
adc
adc
or
mov
sub
fwait
sahf
or
std
fldl
sub
aaa
insb
push
aas
leave
stc
pop
inc
sub
movl
sub
jnp
inc
xchg
push
lahf
or
push
mov
test
pop
stos
lea
xor
rorl
mov
dec
xor
fstl
pop
out
push
aam
fsubl
pop
int3
dec
jle
out
aad
test
fstpl
and
sub
cs
xchg
into
push
jmp
jae
sub
shrb
add
pop
rolb
sti
imul
add
stos
popf
inc
xor
js
cld
push
fisubs
push
xchg
out
in
jno
mov
cmp
pop
mov
ret
cmp
cmpsb
es
inc
aad
add
jb
xchg
sub
pop
aas
dec
lahf
fmul
xor
and
xlat
sbb
mov
push
dec
mov
enter
sbb
lods
and
test
mov
lcall
ljmp
lcall
imul
movsb
xor
pop
shlb
or
push
push
ds
pop
fldl
push
cltd
push
lods
pop
mov
cld
mov
dec
push
rclb
inc
push
jge
xor
nop
sub
inc
pop
mov
jmp
add
cmpsl
popf
cmp
mov
cli
adc
subb
mov
in
xor
ret
add
mov
in
loop
jbe
jns
clc
pushl
dec
loop
cmp
out
pusha
or
out
jle
cld
xchg
mov
enter
ljmp
sbb
sub
movsb
out
iret
sysret
jecxz
fsubrp
ja
call
sub
mov
subl
push
cmpsb
mov
outsl
ret
jne
mov
sarl
and
pop
inc
mov
test
inc
adc
and
dec
mov
je
ss
mov
sarb
sti
xchg
int3
jo
mov
jg
add
mov
sub
les
sbb
xchg
add
adc
hlt
add
inc
adc
sar
cmc
arpl
xor
dec
stos
sub
mov
mov
sub
loopne
or
mov
mov
aas
sub
in
test
xor
scas
in
or
das
stc
es
loopne
outsl
sub
dec
movsb
aad
test
lret
xchg
jg
les
test
mov
adcb
sub
inc
jp
fisubs
dec
sbb
stos
push
xlat
popa
sub
enter
cmp
xchg
mov
cwtl
and
inc
fisubrs
testl
cmp
jle
into
and
adc
mov
push
jns
test
sahf
mov
push
insb
and
ja
push
in
mov
icebp
mov
push
or
cld
or
rolb
scas
cwtl
jno
fcoml
js
dec
ret
lcall
fs
in
push
jmp
test
and
test
pop
push
cmp
xor
xchg
lods
xor
sub
xchg
dec
sbb
xchg
testb
cmp
pop
and
inc
fs
faddl
hlt
cld
adc
jb
xchg
test
fcompl
out
sub
or
aas
in
mov
or
dec
jb
add
mov
lods
ja
in
test
inc
cli
adcb
cmpsb
adc
stc
and
ficoms
insl
and
pop
adc
cmp
pop
push
mov
lcall
daa
and
out
inc
inc
push
cmp
push
ljmp
inc
and
jp
in
rorb
cmc
repnz
lods
pop
movsl
fs
daa
jbe
in
xchg
hlt
lods
push
mov
repnz
xchg
xchg
jg
xor
fildll
icebp
xchg
or
das
outsb
imul
bnd
xor
cwtl
insl
shrb
imul
scas
sarl
xchg
push
imul
ret
insl
out
jg
add
idivb
cld
push
push
dec
mov
negl
mov
mov
jl
sub
aas
outsl
fs
mov
lea
jle
inc
adc
lods
bound
and
mov
int3
fdivrp
dec
fidivs
clc
mov
cltd
mov
push
enter
sbb
push
push
cmp
loop
sub
cs
pop
and
dec
mov
mov
inc
shll
test
and
aam
fdivl
push
insb
aad
pop
ljmp
fiadds
pop
enter
and
stos
ljmp
daa
scas
ja
inc
sbb
fbstp
clc
shrl
out
dec
pop
icebp
mov
stos
push
scas
addb
popf
add
jp
jae,pt
jno
push
sti
add
addr16
das
sahf
jp
fs
mov
cmc
fwait
out
jmp
inc
imul
push
pop
pop
dec
cmp
push
add
sti
sbb
fstpl
push
xor
sar
into
in
mov
cmp
xchg
or
pusha
rcl
test
mov
les
dec
iret
push
repz
mov
jnp
push
dec
push
xchg
lds
mov
mov
inc
cmpsb
outsl
jg
lea
cmc
sub
add
push
sub
sbb
std
xor
cmpb
and
xor
test
or
xchg
lret
mov
add
outsl
imul
adc
mov
mov
cmp
pop
bnd
mov
mov
push
add
idivb
pop
mov
jbe
push
mov
cmc
dec
inc
or
movsl
push
inc
xor
xchg
xchg
out
fsts
dec
aam
cmpsb
pusha
add
jge
push
int
xor
inc
scas
inc
outsl
fcmovnbe
data16
outsl
mov
lods
cld
xor
fcmovnu
cmp
mov
cmp
and
lea
stos
stos
ja
ret
cwtl
ret
out
cmp
add
pop
or
and
fwait
push
push
xor
shrl
rclb
test
and
stos
mov
mov
scas
fidivl
sti
inc
stc
lods
jmp
mov
fidivl
bound
mov
into
push
dec
clc
es
ret
dec
add
adc
xor
jnp
aaa
fidivrs
loop
test
test
cli
daa
jecxz
fistl
pop
xchg
push
lcall
ja
inc
sbb
jno
ret
test
out
push
or
mov
enter
cli
mov
call
popf
cwtl
pop
push
pop
mov
mov
mov
jmp
shrb
or
mov
andb
mov
js
mov
fisttpll
sbb
add
sub
push
rorb
mov
xor
pop
dec
bound
insb
xorb
mov
loopne
outsb
jp
dec
incl
sbb
add
sub
jle
fildl
dec
and
push
pop
imul
push
lcall
adc
push
in
add
loope
fimull
pop
mov
mov
add
loope
pushf
sarb
jecxz
sub
and
bound
dec
dec
sbb
dec
stc
inc
insl
pop
ret
aad
xor
sub
sti
sub
mov
jge
xlat
xchg
leave
shrl
sti
xchg
dec
jg
xchg
push
push
sub
popa
sub
sub
pop
arpl
shrl
dec
mov
cmp
pop
adc
pop
in
and
dec
cmp
idivb
insl
xor
cmpsl
and
or
adc
in
test
gs
popa
add
rol
push
gs
sti
or
dec
cmpsl
xor
mov
mov
mov
and
pop
xchg
mov
sti
jns
mov
ds
jmp
pop
push
jmp
xorb
cmp
adc
gs
js
push
clc
xchg
mov
hlt
or
pmovmskb
sbb
and
cmc
cmp
push
sahf
mov
xor
das
mov
pop
mov
adc
sbb
orl
fidivs
aam
adc
sbb
mov
or
pop
mov
fs
cmp
jl
adc
sti
jae
jns
ss
subl
and
js
ljmp
arpl
jno
repz
popf
mov
in
push
rcll
gs
ficompl
pop
cmpsb
cmp
mov
fwait
in
jnp
inc
jb
pop
sbb
inc
filds
pushf
mov
out
scas
pop
xchg
ret
xor
jne
lcall
push
mov
mov
mov
inc
xor
test
je
adc
pop
lea
jecxz
rorb
insb
and
fists
dec
adc
ficompl
jecxz
xor
mov
inc
cmp
mov
mov
dec
fsubrl
lret
bound
cs
daa
xchg
mov
andnps
mov
sbb
push
shl
push
add
and
je
push
and
test
mov
xchg
inc
or
push
test
inc
daa
shrl
sub
mov
jle
cmp
int
sbb
pop
test
mov
js
in
lcall
adc
mov
ss
sbb
test
or
dec
push
inc
lea
aam
clc
insb
fstpt
mov
or
repz
dec
addr16
out
dec
inc
sbb
outsl
mov
sarl
das
mov
rcrb
dec
mov
jno
cli
ds
pop
in
mov
insb
mov
xchg
loope
je
inc
data16
pop
test
pushf
imul
test
add
mov
aas
or
dec
mov
insb
imul
xor
mov
in
push
cli
sbb
adc
jmp
outsl
xchg
jle
mov
nop
ficoms
popa
pushf
push
lea
popa
jb
es
idiv
cmp
loop
and
sbb
aad
jle
mov
incb
cmp
pop
lods
aad
fisubs
inc
sbb
test
mov
xlat
lock
std
add
pop
pop
outsl
lods
sbb
xor
jns
rcll
fidivs
aas
mov
dec
imul
push
rcr
loopne
sti
outsb
mov
mov
pop
loope
push
pop
fisttpll
cld
lcall
arpl
push
mov
cmc
mov
xchg
jbe
mov
mov
sahf
fadds
stos
cmp
enter
cmp
pusha
dec
repnz
jg
fadd
fwait
pop
rclb
mul
and
pop
push
shl
ret
mov
sub
in
xchg
loopne
jbe
loopne
xchg
xchg
mov
inc
sub
dec
outsl
mov
clc
sub
or
ret
lods
inc
repnz
bound
jo
adc
lcall
sub
decl
into
popa
cmp
cmp
bound
dec
mov
dec
arpl
pop
lds
lret
push
lds
and
adc
aad
lcall
popf
ja
push
inc
cli
scas
filds
scas
nop
insb
ljmp
adc
pop
xchg
xor
add
inc
xor
xchg
jg
lret
push
fidivrs
ret
mov
jo
mov
or
push
shll
mov
fldt
adc
fisubl
pop
adc
movl
or
aaa
loope
xor
aad
push
into
loop
test
loopne
and
adc
cli
xor
jmp
pop
inc
stos
cld
lods
pop
or
add
das
lods
into
arpl
xchg
addl
clc
or
imul
les
cld
sbb
inc
xchg
cwtl
mov
jecxz
sbb
sar
xchg
mov
xor
out
and
fiadds
lods
aas
out
pushl
xor
test
pop
mov
dec
sbb
addr16
fwait
loop
mov
push
addr16
push
stos
shlb
mov
and
pop
xor
push
jae
push
outsb
cmp
adc
mov
sub
mov
repnz
je
dec
dec
enter
into
out
mov
loop
stos
pop
inc
and
cld
adc
mov
push
test
dec
xorb
fs
movsl
add
out
and
into
mov
bnd
imulb
add
jnp
lods
sti
int
shll
out
out
imul
fs
add
clc
outsl
sarl
lea
loop
nop
dec
xchg
aad
int3
xchg
subl
in
lods
push
popf
jmp
mov
mov
xchg
xor
xchg
jge
or
in
addb
adc
enter
cmp
aad
jb
idiv
push
bound
push
cmpsb
xchg
inc
neg
or
sbb
aad
insb
fbld
vlddqu
mov
jmp
mov
loope
fstpt
dec
int3
call
jp
movl
jb
lret
cli
dec
xor
dec
movsb
xchg
jbe
decb
jo
cmpsl
lahf
imul
dec
imul
dec
frstor
mov
das
sbb
adc
popf
addl
cmpsb
ljmp
cwtl
lret
add
test
adc
or
fcompl
add
jae
nop
fnstcw
shrb
inc
xchg
jo
mov
into
dec
idiv
cmp
outsb
pop
mov
ret
xchg
jo
data16
cmp
cmp
or
loope
ficompl
jae
out
rcrb
or
or
push
dec
adc
hlt
jnp
ret
ljmp
iret
mov
arpl
sti
jp
sub
in
xor
mov
push
bound
fwait
ret
xor
mov
or
addr16
in
push
popf
dec
cmp
jmp
jle
add
mov
aad
add
pop
hlt
js
adc
pop
pop
data16
fcompl
outsb
jp
inc
fldt
push
sub
movsl
xor
add
mov
mov
jae
stos
insl
jo
hlt
ss
add
rcll
lea
test
inc
cltd
xor
and
popa
fwait
shlb
jge
jmp
mov
into
outsl
cmpsb
iret
mov
imul
ds
in
xchg
dec
aas
push
outsb
sub
adc
mov
lea
push
gs
ss
dec
push
sub
arpl
sbb
mov
dec
cmp
pop
mov
insl
sub
sub
or
jp
cltd
mov
inc
jl
add
push
and
xor
adc
or
mov
lock
mov
mov
xor
enter
adc
dec
mov
add
cmp
rorb
pop
ficoms
or
xorb
push
xor
sub
push
mov
pop
cmp
mov
neg
sbb
mov
fbstp
hlt
cli
mov
lret
popf
ret
mov
cmpsb
cmpsb
shll
into
add
xlat
lods
outsl
insb
push
das
sub
jb
push
adc
leave
jl
sbb
or
sub
push
in
mov
jmp
stos
int3
xor
jbe
icebp
lods
jmp
jae
inc
rcl
mov
dec
push
sub
mov
test
iret
mov
or
lock
test
cmp
jle
inc
rclb
dec
xor
cmpsb
cmp
xchg
fildl
outsb
mov
add
mov
and
lret
push
xor
mov
push
add
adc
mov
and
aam
fwait
push
push
jmp
push
insb
add
dec
or
jp
xor
test
jb
fs
and
dec
mov
push
lcall
add
in
mov
js
icebp
jo
scas
dec
pop
xchg
mov
jb
or
mov
or
jp
jge
mov
loop
add
sahf
std
cmp
or
and
loop
or
cmp
add
sub
mov
push
push
mov
fildl
mov
adc
fnsave
and
fisttpll
cmpsl
push
or
cli
fstpt
lods
mov
andl
fcoms
test
dec
cmc
add
sub
cmp
pop
jge
xchg
cltd
push
jp
inc
fidivl
jo
iret
add
ljmp
hlt
pop
ss
inc
mov
cs
out
adc
in
jae
daa
mov
xor
insl
mov
roll
inc
push
or
aaa
js
adc
popa
cld
jp
or
je
pop
xchg
jae
mov
xchg
or
push
pop
mov
sbb
gs
popa
inc
daa
scas
das
mov
pop
adc
lcall
adc
lret
orl
fcomps
and
cmp
loop
xor
dec
int
xor
shll
cmp
sbb
mov
jne
mov
popa
mov
adc
xchg
call
test
enter
fcmovb
jo
cwtl
insb
jo
hlt
jno
rep
popa
mov
and
in
out
lods
xchg
pop
test
mov
loope
dec
addr16
mov
outsb
adc
jp
mov
stos
leave
mov
fwait
mov
leave
lret
inc
aas
sbb
push
stos
sub
subps
jnp
sub
cwtl
stos
or
stc
cld
test
jp
cmp
or
sti
psllw
pop
xchg
xchg
adc
out
les
mov
adc
jbe
mov
mov
xorl
shlb
xor
sub
jns
enter
push
mov
ljmp
mov
mov
fcmovu
shlb
adc
mov
adc
xchg
mov
scas
pop
jge
and
fldenv
das
push
nop
sub
and
ljmp
ss
cltd
xor
push
insb
cmp
mov
push
bound
cmpsb
inc
adc
xor
gs
xchg
repz
or
lret
push
lods
jns
mov
mov
mov
jnp
outsb
mov
add
in
push
loop
pop
cmpb
xor
mov
je
sti
sarb
cltd
sub
and
cmp
xor
int3
inc
push
loope
xchg
out
in
jb
fsubl
push
loopw
sbb
pop
loop
neg
ss
scas
mov
mov
mov
std
pop
mov
adc
push
lret
insl
inc
adc
clc
sub
push
jl
pop
call
call
pop
outsb
push
jbe
fwait
orb
not
ss
add
loop
nop
leave
fbld
sbb
xchg
xchg
fsubs
jmp
clc
pop
jl
and
mov
rolb
out
imul
in
xchg
in
push
fs
push
jp
aas
adc
es
cmp
orb
jb
lods
jne
adc
out
and
sbb
cmp
incb
sbb
stos
mov
gs
fisttpl
push
not
test
pop
xlat
add
inc
mov
ret
pop
sbb
add
int3
insb
daa
in
fadd
call
imul
push
mov
cmpsl
scas
or
dec
aaa
adc
in
lret
cmp
mov
jmp
dec
shll
in
movsl
jp
push
jmp
dec
and
jb
aaa
loopne
cmc
push
repz
inc
push
jmp
repnz
ja
jg
das
mov
fs
daa
subl
out
adc
inc
and
leave
mov
nop
sub
mov
stos
out
cmp
mov
jo
call
daa
jo
movsb
outsl
jp
fsubl
arpl
leave
xor
jl
or
and
xchg
dec
xor
adc
popa
int
loopne
and
push
xchg
daa
notb
add
and
push
mov
movsb
add
push
stc
stos
stc
mov
cmp
pop
sbb
cmp
daa
rolb
cmpsb
push
cmc
push
je
push
jns
mov
sub
cld
clc
in
sbb
push
movsb
and
mov
inc
insb
xor
fidivrl
mov
bound
hlt
insb
loop
pop
test
and
fs
and
mov
push
or
fs
das
or
pop
rorb
mov
add
mov
and
cmp
jmp
xor
mov
repnz
clc
in
xor
xor
sub
jge
cmp
aad
push
jno
insl
sbb
cli
sbb
mov
cmpsb
mov
aam
pusha
xor
pop
es
xor
mov
popa
call
xchg
mov
inc
jne
mov
in
inc
movsb
pushf
cmp
popf
insb
das
mov
fwait
sub
pushf
outsb
mov
in
add
sbb
bound
test
cld
scas
inc
dec
sub
cmp
pop
mov
mov
pop
add
sarl
faddp
subl
push
fsub
xor
lret
int3
andb
addl
rcrl
mov
or
mov
add
hlt
push
lret
mov
pop
daa
stos
std
push
cmpsl
rclb
sbb
xor
sbb
fisubs
lcall
dec
ljmp
pushf
mov
lods
jne
movsb
xchg
or
push
xchg
push
mov
repnz
inc
mov
sti
add
jp
dec
adc
adc
scas
sbb
and
insl
cmp
scas
jo
call
pop
mov
push
les
jmp
xchg
add
idivb
sti
stos
es
das
push
mov
outsb
mov
inc
in
dec
es
addb
xchg
add
and
in
pop
cwtl
repnz
lock
add
pop
pop
in
sbb
mov
xor
push
pop
ljmp
mov
sahf
data16
sahf
mov
data16
mov
adc
pop
icebp
aad
sti
fs
je
in
add
mov
mov
dec
rcrl
stos
test
sti
mov
add
jp
inc
test
mov
mov
inc
cmpsb
adc
and
cs
xchg
cmpsl
sbb
das
aaa
scas
jnp
test
add
push
repz
jecxz
adc
imulb
dec
sub
loope
outsb
cld
jbe
fcoml
std
data16
stos
sub
aam
cmp
mov
push
repz
test
pop
jl
scas
inc
cmp
fst
adc
inc
mov
ret
jb
enter
mov
push
cwtl
call
inc
jg
leave
adc
mov
lahf
popf
std
mov
daa
rorl
into
mov
int3
movsl
je
dec
sub
andl
jbe
fadds
loope
cwtl
ret
movsb
xor
adc
fistl
xchg
in
sub
fwait
gs
and
subb
add
and
aas
rorl
pop
es
mov
adc
xor
dec
push
mov
imul
push
fdivs
nop
je
js
out
cmp
mov
hlt
adc
push
adc
lods
outsl
cmpsb
icebp
jp
stos
retw
inc
rcrb
arpl
ss
andb
xchg
int
lret
ljmp
scas
push
scas
sub
jno
push
xor
pop
popa
jmp
xchg
adc
or
cmc
test
dec
xlat
test
fiaddl
aas
pop
adc
loope
mov
js
repz
xor
scas
je
mov
cmp
pop
push
mov
fcoml
andl
mov
daa
ja
insl
add
shl
pop
dec
jne
sub
mov
xor
xchg
inc
mov
cmp
mov
cld
or
xchg
shl
adc
mov
adc
cmp
dec
dec
xor
ficomps
jge
xor
cld
rcll
loopne
pop
adc
jge
add
jmp
imulb
xchg
ss
mov
jne
filds
sub
imulb
notl
cmp
lcall
mov
ret
inc
aaa
mov
xchg
pop
mov
pop
mov
pop
xchg
or
sub
adc
pop
or
push
cmp
imul
mov
loope
rcll
push
and
push
cmp
and
sbb
popa
das
sti
lods
adc
popf
aaa
je
sahf
and
sub
stc
scas
outsb
arpl
jmp
int3
std
fldl
ds
push
pop
inc
lea
dec
xlat
int3
pop
sbbl
or
cli
in
insl
adc
xor
mov
xor
adc
sbbl
mov
xchg
imul
mov
cmc
lds
dec
pop
pop
sbb
and
cmpsb
in
push
xchg
jae
mov
sti
sbb
mov
nop
enter
std
xchg
nop
add
add
push
movsb
mov
rorl
cltd
inc
mov
pop
cmpsl
push
push
in
jmp
dec
lret
xchg
repnz
adc
aas
sbb
pop
xchg
mov
je
test
andl
out
xor
mov
xchg
mov
push
mov
cld
mov
clc
adc
movq
movsl
adc
xlat
lods
dec
faddl
jno
movb
pop
jmp
pop
mov
in
loope
jg
jb
fwait
cmp
call
or
fistpll
loope
jecxz
jne
push
mov
pusha
iret
mov
and
out
sub
and
sub
outsl
negl
mov
xchg
out
mov
sar
xor
stc
or
inc
outsl
je
cmp
jae
movsb
mov
dec
mov
mov
jg
jecxz
push
icebp
out
add
shrl
jg
pop
loopne
gs
in
push
pop
mov
sub
mov
fstpl
pushf
and
test
loop
push
or
dec
mov
inc
add
xor
mov
outsb
xor
mov
frstor
jmp
insb
xchg
jge
ja
arpl
mov
sub
rcrb
pop
and
pop
ss
icebp
lea
stos
call
stc
or
pop
dec
and
xchg
pop
pop
adc
or
daa
cmp
fs
pop
mov
addb
test
out
jl
sbb
lea
lock
xchg
lods
loop
adc
in
gs
jmp
mov
cld
pop
cmpb
pop
mov
mov
xchg
pop
pop
ficompl
pop
fildll
mov
fstpt
add
aas
pop
shl
jl
jle
jb
or
mov
jmp
dec
shlb
mov
aam
push
add
ss
xor
fwait
jns
cmpsl
pop
add
pop
call
jg
and
imul
or
jge
stos
mov
ljmp
mov
jno
mov
scas
sahf
inc
and
jmp
mov
sub
xchg
xor
movsl
movsl
das
mov
in
loop
fstps
js
xor
arpl
jnp
cmp
xor
pop
ss
inc
shr
repz
dec
jp
jg
dec
mov
ror
xorb
jmp
je
and
ljmp
push
aad
push
mov
fwait
and
lcall
push
scas
add
add
ds
xchg
push
es
jmp
loopne
dec
call
and
movb
test
outsb
loop
add
push
and
push
or
mov
fisttpll
adc
fists
leave
xor
fs
mov
cld
std
aaa
fcompl
or
and
adc
cmp
sbb
repz
shll
ja
mov
add
cmc
add
mov
mov
les
push
or
sub
out
es
pusha
jae
out
enter
xchg
outsb
inc
and
and
lahf
add
mov
mov
mov
pop
mov
jne
inc
add
out
jecxz
ja
mov
sarl
add
cmp
in
mov
test
or
push
sub
das
fmull
mov
push
sarl
out
pop
adc
stc
std
insl
and
out
adc
pop
mov
insb
insl
fs
aad
mov
xchg
inc
mov
ljmp
sub
std
inc
or
rorb
dec
jecxz
cli
jb
mov
test
cltd
sub
fucom
xchg
mov
xor
cmpsb
shr
cld
sub
test
mov
push
sub
add
stos
sub
sbb
lea
mov
cltd
andb
js
xchg
xor
out
cltd
stos
xchg
xor
and
test
mov
andb
add
push
sub
out
mov
subl
mov
adc
mov
iret
dec
sub
push
push
or
dec
clc
or
das
lods
stos
and
movsl
add
and
rol
sbb
out
popf
jl
mov
push
xor
mov
jmp
nop
test
bound
les
mov
das
dec
add
dec
popf
dec
jecxz
cwtl
dec
xor
inc
mov
nop
push
in
stc
sbb
pop
jmp
les
in
push
loopne
shr
mov
and
pushf
lds
test
dec
add
adc
dec
es
adc
psrld
adc
xlat
mov
mov
dec
adc
outsb
insl
cmc
mov
int3
mov
mov
push
rcrb
imul
hlt
jo
jge
inc
push
ja
lock
scas
shrl
push
cmpsb
je
add
cltd
push
jno
shrb
inc
out
addr16
cmova
stos
fnstenv
sub
or
mov
divb
popl
je
inc
clc
xchg
adc
sub
inc
xchg
ljmp
bound
fcmovnbe
xor
mov
insb
addl
mov
rdpmc
shr
pusha
sbb
push
ljmp
xor
sub
sub
dec
sbb
xchg
jne
test
outsb
outsl
jmp
dec
cmp
inc
das
and
mov
out
xor
cwtl
xor
xor
test
pop
hlt
subb
fldt
repz
jge
repnz
lock
icebp
pop
inc
and
inc
iret
filds
pop
mov
jae
push
add
ds
arpl
mov
cltd
and
movsl
jmp
jnp
sbb
push
orb
adc
insl
and
jmp
jl,pt
cltd
insb
in
xchg
stos
sub
in
scas
nop
pop
xchg
push
mov
xchg
pop
stos
ss
jno
add
fstpt
lret
sub
sub
add
push
cmp
jg
addr16
xor
bnd
pop
mov
out
mov
dec
shr
pop
mov
mov
pop
push
jecxz
or
leave
cmp
pop
pusha
pop
outsb
push
sbb
jge
dec
jge
sub
into
ja
les
lret
inc
adc
out
xchg
mov
shlb
inc
or
sbb
sub
fnstcw
add
pop
imul
je
dec
push
inc
push
shll
icebp
or
stos
inc
popf
sahf
sbb
xchg
jmp
xchg
mov
pushf
hlt
fisttpl
insb
decl
xchg
sarl
dec
cmp
sbb
gs
adcl
lcall
and
cmp
push
lret
in
pop
sbb
lea
sbb
or
cmp
fidivs
pop
push
lea
ja
stos
hlt
sbb
ret
into
jecxz
cli
sbb
add
cmp
push
stc
enter
sbb
xor
mov
sahf
je
adc
dec
jb
out
add
addr16
push
dec
lods
aad
or
sbb
push
add
jg
push
pop
pop
cmp
rcll
lret
test
adc
dec
or
repz
pop
dec
mov
std
lods
sub
fdivs
lret
or
shl
adc
or
pmaxub
rolb
mov
sub
movsb
outsl
lcall
loop
jl
xchg
jne
data16
adc
mov
lret
inc
ss
sub
push
mov
test
mov
mov
jne
dec
jne
dec
inc
pop
sahf
mov
mov
pop
and
pop
insl
push
addr16
pop
arpl
outsl
jmp
jno
push
jg
dec
jne
sub
jg
or
dec
sub
cmp
rcl
shlb
xchg
or
aad
adcl
aaa
xlat
cli
dec
dec
or
inc
push
jge
adc
cmpsl
cmc
jo
push
std
xchg
rclb
shr
ljmp
push
scas
fldcw
mov
lods
add
fiadds
xchg
outsb
inc
addr16
fdivrl
xor
xor
cli
mov
jle
out
sbb
out
mov
sub
ret
inc
icebp
data16
js
mov
pop
dec
jno
les
dec
shll
mov
jge
dec
xchg
cmp
shll
fcomps
into
mov
push
fsts
fs
into
adc
add
mov
add
scas
mov
and
mov
lods
dec
adc
add
pop
sub
test
mov
adcb
xor
lcall
or
jo
push
mov
gs
sub
fwait
stos
cmpsb
cmc
pop
adc
lock
mov
clc
pop
cmp
cmp
mov
xor
add
decb
iret
jg
xor
adc
fwait
pop
and
sbb
enter
ficomps
inc
leave
sbb
add
cld
sbb
adc
das
sar
cmp
outsl
mov
popa
sub
dec
jp
sbb
addl
jp
cmc
lret
adcb
cltd
inc
pushf
dec
xchg
rorl
notl
push
into
inc
ss
push
cmpb
mov
outsl
jb
add
shll
add
sub
out
xchg
fildll
add
gs
adc
add
adc
mov
or
jle
outsl
lret
mov
inc
int
jmp
js
cltd
sub
out
sub
push
or
out
sarl
jecxz
inc
mov
hlt
arpl
mov
inc
and
add
mov
dec
or
and
enter
xor
mov
or
insb
inc
push
push
in
mov
xchg
das
notl
hlt
dec
fdivr
xchg
shll
push
pop
add
call
lds
and
shll
push
lret
adc
aaa
adc
push
pop
dec
pop
xchg
or
push
push
add
jns
bound
push
out
arpl
shl
xchg
pusha
rorb
push
pop
jecxz
mov
push
sub
ret
stos
cltd
xchg
adc
inc
xchg
iret
adc
xchg
dec
xchg
push
jbe
out
test
js
das
lods
mov
inc
test
jo
inc
and
xor
call
jne
jnp
cmp
jnp
aad
push
sub
cmc
or
insb
rcr
test
out
repnz
inc
pop
cmp
int
lahf
adc
sub
pop
fwait
js
add
test
data16
es
jg
inc
loope
inc
jnp
cmpsb
into
dec
push
add
in
jmp
insl
incl
addl
fs
shrb
sbb
inc
cmpsb
lret
add
aad
pop
lds
xor
inc
in
pop
and
es
add
add
sti
mov
push
das
stc
popa
add
jno,pn
pop
or
stos
test
xchg
aaa
hlt
and
in
lods
mov
lods
jle
mov
popf
imulb
and
sbb
jae
xor
mov
adc
js
imul
cmp
in
push
out
repnz
or
inc
call
hlt
shl
out
ja
add
mov
std
iret
pushw
outsl
insb
sbb
pushl
aad
jg
rclb
cmp
es
je
ds
adc
fsubp
xor
sahf
inc
or
jg
add
repnz
add
xor
test
rol
jbe
dec
push
push
add
insl
xor
mov
stc
add
fdivrl
mov
lea
insl
loop
mov
cmpsb
inc
test
xlat
add
aam
or
lods
adc
in
pop
jno
popa
adc
je
push
les
mov
int3
cmp
or
pop
outsb
clc
or
lods
jp
xchg
xchg
into
xor
and
push
mov
shl
out
xor
popf
cwtl
nop
jge
adc
out
pop
cs
push
idivb
mov
or
leave
mov
dec
sub
shrb
mov
pop
je
push
mov
mov
jg
loopne
sub
push
fmuls
xor
mov
shrb
out
sbb
jns
and
mov
insl
in
mov
adc
aas
jp
lret
or
mov
add
jp
push
mov
shrb
adc
int
mov
test
jmp
and
inc
inc
inc
movsb
decl
ja
jl
sub
lea
sub
mov
sbb
xchg
pop
mov
je
repz
std
jnp
fdivrl
fidivrs
scas
cmp
shrb
xor
and
sub
int
mov
and
dec
push
shr
dec
ret
jmp
add
outsl
mov
test
jg
push
xchg
sub
pop
scas
or
dec
sbb
dec
addb
inc
in
inc
dec
xchg
icebp
notb
pop
sub
push
mov
fdivrl
pop
pusha
stos
pop
mov
push
ret
out
repnz
push
sbb
sbb
lret
hlt
cmp
test
jbe
push
loop
decl
pop
lock
push
jo
out
add
push
lods
dec
out
aad
add
cld
xchg
out
enter
scas
int
inc
pop
out
and
sbb
mov
dec
rolb
sub
mov
sub
cltd
inc
mov
pop
es
dec
xor
in
ljmp
or
mov
pop
data16
mov
fdivl
call
sub
mov
jmp
jp
xor
shll
adc
popa
sub
inc
push
add
lods
pushf
xor
test
adc
aaa
cmp
int
jmp
mov
shrb
push
and
loope
stos
nop
stos
or
jecxz
ds
fsubl
and
push
sub
adc
aam
incl
ret
sub
cmpsb
adc
pushf
cli
cmp
xchg
popf
push
or
adc
movsl
gs
fwait
xor
adc
mov
insl
and
cmpb
sbb
pop
mov
mov
mov
dec
or
push
lret
ds
push
pop
cmp
sbb
sub
sub
push
test
fs
lds
gs
outsb
inc
adc
clc
and
fsubrs
cmp
repz
jle
inc
mov
popa
inc
sub
jg
push
out
pop
mov
add
or
mov
cmp
scas
mov
add
cmpsl
adc
adc
int3
popl
fildl
xor
enter
jg
insb
bound
inc
repnz
mov
or
and
adc
pushf
sub
lock
nop
arpl
cmp
jge
aad
pop
fwait
cmp
jmp
fstpl
adc
sbb
ds
mov
mov
popa
cs
push
sbb
cmp
out
imul
mov
dec
mov
cwtl
jg
int3
in
nop
pop
push
cmp
jae
leave
inc
es
mov
cli
push
push
arpl
add
insb
mov
jae
xchg
pop
stos
add
lahf
mov
test
stos
push
push
aaa
add
add
mov
dec
jle
int
and
jnp
push
ret
xor
and
stos
adc
rorl
lahf
repnz
push
or
mov
dec
push
cmp
xchg
cmp
call
sbb
cwtl
push
dec
fs
adcl
movsl
pop
jecxz,pt
jb
enter
mov
mov
push
or
rolb
add
xlat
aaa
dec
cmp
pop
jae
sbb
xor
and
rol
daa
adc
mov
ret
add
into
cmpsb
and
cmp
imull
fcmove
inc
aam
adc
mov
popa
and
push
sub
fldt
mov
push
imul
or
call
gs
push
cmp
mov
sub
mov
arpl
xchg
or
lock
and
repnz
dec
std
adc
nop
movsl
aad
jmp
test
fld
repnz
aad
cwtl
aaa
add
aas
add
cmpsb
lods
dec
decb
dec
jo
imul
push
inc
pop
int
xchg
stos
cld
jo
sahf
add
popf
or
test
cmp
in
movsl
push
fcoml
dec
dec
sbbl
hlt
dec
cmpb
pop
ficoml
inc
cmc
addb
sub
cmp
pushf
clc
int
bnd
jo
in
push
or
movsb
test
je
adc
in
mov
cmp
lods
jae
jae
and
xor
lret
add
and
fwait
or
pop
fsubrl
ljmp
arpl
loopne
push
aaa
in
jae
das
outsl
dec
mov
ret
shll
dec
call
rcrb
gs
or
ret
sub
dec
lahf
scas
in
or
xlat
pop
adc
lret
mov
cmp
into
imul
xchg
push
mov
andb
test
cwtl
cmp
or
rorb
cmp
ja
out
adc
mov
adc
mov
faddl
mov
pop
mov
imul
mov
mov
cwtl
jmp
jecxz
sub
repnz
rorl
in
push
pop
fsubrl
repz
fiaddl
inc
pop
roll
xchg
jmp
sbb
in
test
adc
aas
dec
cmp
inc
das
dec
xor
cwtl
ret
and
pop
add
test
sub
into
loope
int3
lahf
dec
jg
in
cmp
and
fs
shll
popa
imul
pop
xor
jecxz
sbb
incl
ja
arpl
inc
lock
adc
inc
in
push
inc
lds
or
sahf
dec
add
pop
xor
inc
nop
pop
scas
xlat
sbb
xchg
int3
outsb
or
push
xor
icebp
testb
data16
nop
xor
lods
dec
sub
jle
std
mov
jnp
jl
xor
shr
outsb
std
fs
xor
lahf
aaa
adc
test
mov
sub
pushl
mov
adc
lock
fisubs
xchg
cmp
pop
loope
lds
adc
jb
xor
repz
addl
testl
out
data16
rcr
in
or
xchg
adc
push
cli
imul
lea
mov
ret
in
xchg
mov
sub
inc
lret
adc
pusha
sbb
inc
cwtl
stc
jne
shll
mov
xor
add
cmp
and
sbb
movsb
ret
inc
es
movsb
popf
sub
sbb
mov
fs
sbb
dec
or
fldenv
jae
xchg
scas
mov
push
push
aad
fnstsw
fdiv
mov
aaa
lret
push
divl
or
scas
std
mov
mov
movsl
inc
or
pop
lock
int3
scas
fsubrl
loope
cs
xor
push
js
js
xchg
adc
mov
cmp
test
lcall
mov
mov
xchg
jbe
test
int3
mov
pop
fisttpll
add
ret
push
mov
inc
jb
or
fldcw
pop
ffreep
dec
popa
cmpsl
inc
out
push
push
jmp
adc
into
dec
mov
mov
shlb
fsubs
cld
add
int
mov
testb
add
outsl
mov
negl
pop
nop
sub
adc
pop
inc
leave
jne
xchg
mov
out
ljmp
out
dec
std
jno
xchg
mov
movb
and
pop
popf
lret
and
sub
sbb
int3
push
leave
sub
dec
fwait
call
cmp
add
add
mov
movsl
stos
or
mov
fcom
adc
mov
cmpl
push
stos
aad
aam
pop
mov
in
aaa
lcall
xchg
cmpsb
pushf
das
das
fsubr
cmpsb
sub
cmp
cltd
push
sub
test
subb
adc
mov
jno
sub
ljmp
adc
sub
sub
xor
push
cmp
scas
push
frstor
xlat
or
out
xchg
pop
jo
scas
sti
dec
xchg
dec
xor
scas
aad
and
mov
shl
mov
mov
pop
fwait
fwait
mov
sti
sarl
addr16
ret
scas
icebp
xor
pusha
fisubrs
jp
jg
stos
lcall
pop
or
and
repz
mov
mov
push
add
fwait
push
sbbb
je
int
sub
gs
jb
ret
lret
ljmp
cmp
rolb
dec
mov
push
stos
fs
adc
sbb
dec
jnp
out
insb
xlat
shll
test
mov
mov
inc
pop
out
out
jg
lods
xlat
gs
xchg
xor
xor
dec
fsubrs
fwait
cmp
jmp
xchg
cs
out
repnz
dec
in
mov
das
xor
or
out
jb
push
test
shrl
or
stos
outsl
mov
sbb
ds
out
xchg
lcall
xor
inc
addl
sarb
add
pop
leave
rorl
lea
pop
stc
pop
push
xlat
or
pop
and
mov
mov
jb
push
xchg
in
repnz
popa
dec
or
ds
aad
jecxz
movsl
push
in
pop
outsl
aam
pop
adc
lcall
bound
cmp
test
push
sbb
das
add
sbb
pop
or
adc
xor
push
pop
cmp
and
mov
addr16
mov
or
mov
stos
mov
insb
mov
push
enter
jb
sarl
je
mov
imul
fdiv
pop
daa
divb
pop
mov
imul
xor
mov
inc
and
push
mov
jecxz
xlat
aam
sub
dec
testb
or
xchg
push
cmp
pop
notb
in
sbb
mov
lock
rorl
aas
les
aas
jp
outsb
adc
xchg
push
testb
jle
or
mov
or
outsb
test
les
out
xor
jg
je
fs
fdivrs
lods
fsubrs
repnz
adc
daa
mov
test
jecxz
stc
insb
pop
vmread
jae
xchg
data16
push
mov
xchg
stos
ret
mov
sbb
dec
sub
cwtl
movsb
mov
sbb
pop
int3
jbe
xchg
stc
sbb
mov
xchg
aaa
in
stos
jle
mov
fidivs
sbb
jae
leave
add
fs
data16
data16
jo
inc
mov
repnz
std
decb
dec
into
scas
rolb
jecxz
notl
xchg
int3
sarb
xchg
push
fwait
shlb
hlt
and
pop
and
inc
jecxz,pt
add
lret
in
adc
cmpsb
outsb
jl
jnp
imul
movsb
lret
adc
mov
jns
int
sub
popa
dec
xchg
ja
mov
dec
cwtl
shll
mov
mov
push
js
cltd
lea
lods
testl
outsl
or
xchg
repnz
xchg
je
clc
gs
out
xor
hlt
mov
dec
dec
sbb
pop
cmp
push
mov
aad
cmp
jb
and
mov
push
sbb
shll
clc
xor
sahf
icebp
mov
mov
sbb
dec
aaa
dec
inc
sbb
and
daa
mov
daa
jg
popf
xor
repz
jl
xor
cmpsb
lcall
xorl
jg
roll
push
sti
scas
push
aam
jmp
mov
stos
pop
test
push
sub
decb
aas
mov
fisubs
in
lcall
cmpsl
and
lcall
jbe
jmp
sahf
bound
stos
shlb
ds
inc
add
add
xor
repz
arpl
push
or
cmp
cmc
jae
dec
les
int3
xor
fisubs
imul
leave
adc
icebp
mov
inc
out
outsb
sub
cmp
repnz
sub
test
scas
push
cmpsb
mov
pop
pop
jecxz
out
push
scas
jns
and
cltd
popf
test
mov
iret
pop
fst
add
cmpsb
mov
jne
js
mov
mov
leave
into
sbb
jbe
div
pop
test
sub
nop
gs
imulb
in
out
sbb
push
push
mov
test
push
xor
sbb
jmp
push
cmp
or
cmc
mov
dec
pop
sub
fistps
adc
bound
rorl
rcll
push
aad
stos
or
jl
inc
mov
nop
fcoml
mov
popf
fs
sbbl
cmpsb
clc
lret
sahf
pop
lea
imul
popl
mov
mov
sub
aaa
enter
scas
ret
dec
push
mov
mov
mov
imul
les
pop
mov
je
sti
pop
mov
add
cld
gs
pop
sub
movsl
xor
sub
jg
mov
aaa
or
sbb
dec
cmpsl
adc
push
lods
into
outsb
stos
aad
inc
fidivs
add
xor
call
pop
icebp
out
mov
push
int
int
mov
sub
fwait
test
sub
fildll
xor
pop
les
push
sbb
rcl
fwait
adc
adc
loope
out
pop
mov
roll
sbb
pusha
shlb
fcoms
mov
pop
jl
mov
es
aam
push
adc
pop
lret
dec
mov
int3
or
int
mov
int3
and
inc
adc
int3
cmp
push
mov
dec
cwtl
into
sub
adc
mov
mov
pusha
inc
test
inc
je
enter
in
push
mov
lock
sahf
cmp
inc
es
cmp
or
cmp
dec
call
inc
insb
gs
cmp
repnz
dec
rclb
js
adc
jo
xor
and
js
js
inc
push
ret
adc
mov
and
dec
mov
lock
add
pop
dec
iret
ffreep
out
push
test
jne
js
into
sti
pop
sbb
jl
sbb
loop
test
nop
ret
cmp
cwtl
out
inc
out
mov
scas
clc
fnstenv
lahf
cmc
xchg
test
mov
je
fs
sub
insb
addr16
outsb
lret
add
fidivrl
pop
ljmp
pop
pusha
out
cwtl
pop
cmp
daa
inc
test
ret
mov
imul
popa
xchg
mov
scas
or
addr16
mov
or
or
mov
out
jnp
aad
icebp
fwait
pop
cs
mov
mov
pop
call
dec
xor
sahf
sbb
cmp
add
inc
add
lret
inc
jnp
push
fidivrl
jmp
jle
inc
pop
sbb
lret
cmp
data16
es
pushf
pop
or
popf
icebp
cwtl
dec
ret
out
xchg
push
cmpsb
mov
hlt
shlb
mov
fidivrl
mov
inc
sub
adc
mov
not
mov
test
and
jo
shl
sub
clc
add
push
lock
movsb
ja
out
mov
pop
out
xor
jg
cmc
pop
sti
xchg
adc
pop
sbb
xchg
aas
mov
imul
push
dec
push
sub
lret
xlat
sbb
jle
dec
xor
je
repz
loop
xchg
or
xchg
outsb
push
lds
add
push
fcomi
test
cmc
add
mov
rolb
aas
mov
push
iret
pop
add
ds
scas
jecxz
fdivrp
mov
sbb
mov
hlt
mov
repnz
dec
fcoms
icebp
out
sbb
fdivr
cmp
cmp
in
jne
jns
ss
add
or
push
mov
lcall
sbb
punpckhwd
add
shr
sti
and
mov
jge
lea
lods
sub
add
pop
popf
mov
add
cli
cmp
dec
nop
ja
adc
cmpsb
scas
adc
cmp
fidivs
dec
sbb
ret
enter
movsl
shll
xor
cmp
in
pop
inc
fimull
push
hlt
jno
std
je
das
call
into
and
cmp
pop
mov
push
pop
into
aaa
cmp
push
fildl
test
inc
mov
pop
mov
mov
xchg
test
imul
mov
stos
add
cltd
out
or
ss
ja
jp
inc
ds
inc
inc
or
jecxz
repz
xchg
jp
data16
mov
mov
mov
in
dec
shll
mov
data16
cmpsb
xchg
shl
and
test
stc
sub
add
mov
push
lret
test
fisttpl
xor
and
adc
mov
and
or
lock
mov
popf
fimuls
out
push
rol
push
std
sub
push
cli
and
das
addb
cmp
stos
mov
inc
mov
push
sub
cmp
mov
aad
shlb
jne
mov
fcmove
or
jae
push
mov
lods
mov
xor
jp
gs
add
das
mov
mov
mov
test
std
imul
pop
ficoms
in
lahf
lahf
add
std
nop
into
out
push
imul
sub
repnz
cmp
xchg
or
adc
jae
sti
jo
insl
inc
sahf
repnz
adc
enter
out
dec
mov
mov
movsl
in
mov
shl
cli
iret
mov
repnz
insb
movsl
rep
pop
adcl
mov
mov
pop
sbb
and
test
aam
dec
out
push
sbb
jp
xchg
xchg
jne
pop
and
test
mov
mov
subb
pop
adc
mov
sub
jo
bound
jnp
mov
fsubr
dec
movsl
sub
add
inc
leave
jmp
pop
adc
sahf
xchg
xor
push
ljmp
popa
add
test
cmp
jmp
loop
mov
nop
lods
dec
pop
jo
jbe
xor
mov
lahf
jns
scas
push
jmp
aaa
test
cmc
xor
popf
dec
xchg
outsl
xor
dec
push
pushf
stc
add
push
push
inc
cmp
fsub
mov
lret
enter
inc
mov
in
or
call
out
jbe
lods
orl
mov
mov
push
mov
sbb
fisubl
out
sbb
mov
addr16
daa
sub
lea
and
test
out
push
lret
inc
outsb
jo
add
push
mov
inc
lds
dec
mov
or
stos
gs
jnp
push
xchg
aam
cmpsb
pop
push
dec
jecxz
das
test
popf
mov
sbb
mov
lods
clc
scas
and
outsl
xor
and
popa
jecxz
fnstenv
sub
sub
sarl
sti
decb
scas
jp
inc
mov
and
dec
loop
push
cli
mov
insb
std
mov
mov
lods
mov
ss
pop
clc
sub
inc
xchg
xchg
dec
cmpsb
sub
dec
xchg
sbb
gs
lret
mov
pop
jge
cmpsl
or
fldl
add
or
xor
sahf
repnz
push
cwtl
push
jne
sub
sbb
mov
scas
sbb
fidivl
pop
pushf
inc
sbb
popa
roll
jnp
jo
dec
add
sbb
add
adcl
nop
mov
pushf
arpl
cmp
insb
mov
dec
mov
xor
xchg
iret
jg
test
or
jp
mov
fldt
sti
pop
jp
scas
adc
add
popa
push
decl
pop
inc
insl
and
sbb
jecxz
cmpb
mov
fwait
nop
sub
push
bound
mov
xchg
sbb
je
test
loopne
scas
inc
push
jle
pop
or
test
add
mov
add
mov
test
scas
jnp
jb
sahf
cmpl
xor
mov
cmp
push
hlt
or
outsl
xchg
xorb
in
sbb
stos
jnp
fistpl
jl
out
pop
push
pop
adc
shll
mov
adc
pop
mov
mov
lret
add
fstl
pop
into
sub
lea
xchg
dec
mov
hlt
negb
lret
das
scas
jno
and
call
test
pop
in
std
dec
inc
lods
repnz
push
xor
push
in
or
ret
sarb
dec
fstpl
xchg
out
lods
inc
or
enter
push
mov
and
ffree
sahf
mov
mov
shlb
cmc
mov
and
fmuls
jbe
jnp
fidivrs
add
dec
sub
adc
repz
mov
and
imul
and
cmpsb
xorl
notl
cmpsb
pop
xchg
cld
repnz
pop
adc
mov
pushf
inc
movsl
das
inc
pop
inc
jae
add
stos
add
mov
ret
ja
movsl
sbb
pop
xchg
shr
data16
sti
lret
pop
pop
cli
push
les
addb
movsb
inc
inc
mov
shlb
push
lods
mov
out
pop
pushf
inc
mov
push
bswap
hlt
adc
loop
sub
jmp
xchg
add
ficomps
fistl
in
lods
mov
sub
sub
dec
add
push
fwait
push
adcl
inc
lock
inc
sbb
sbb
or
ret
xorb
addb
je
jecxz
cmp
fisttps
rorl
bnd
test
mov
pop
shrb
roll
xchg
call
dec
std
adc
mov
sbb
jmp
lock
and
jnp,pt
cmp
clc
pop
cmp
jnp
mov
loop
or
scas
mov
out
jecxz
das
aas
es
jne
mov
push
xor
cltd
loopne
push
push
jns
jns
nop
in
push
aaa
in
push
dec
cmp
pop
mov
insb
mov
gs
cli
fldt
mov
mov
lcall
mov
push
inc
sbb
add
in
mov
aaa
scas
push
cs
lahf
neg
mov
cmp
les
jmp
mov
std
fdivrp
dec
loopne
pop
and
xchg
lret
enter
adc
decb
add
xchg
pop
je
loope
sbb
push
xor
push
in
sbb
or
adc
dec
and
mov
fadd
fstps
nop
jo
fistps
cs
mov
testb
test
and
fwait
push
pop
mov
leave
pop
jae
test
sub
mov
xchg
dec
push
push
mov
je
int
sbb
mov
pop
inc
mov
add
js
and
sbb
in
sub
fwait
sarl
imul
sub
scas
sub
lds
sub
es
mov
mov
pusha
imul
aad
int3
cmovae
push
or
loope
sub
pop
mov
lock
jmp
sub
cli
lret
mulb
ficompl
jns
inc
out
or
lea
test
fldenv
mov
mov
inc
mov
jecxz
jns
sbb
sub
and
cld
test
jecxz
xchg
pop
ss
loope
sbb
xor
js
das
xor
stos
and
es
xor
adc
sbbb
mov
pop
outsb
ja
js
dec
cli
int3
mov
pop
xchg
aaa
call
mov
dec
out
pop
test
xchg
mov
jne
mov
mov
int3
jo
mov
lods
jp
dec
or
sbb
imul
into
mov
std
push
fmull
test
push
loopne
mov
and
into
lret
xchg
sbb
xlat
cs
cmpsl
mov
pop
stos
leave
push
cmpl
push
push
lock
xchg
sub
xchg
mov
xchg
xor
xor
mov
sbb
push
dec
movb
pushl
call
fisttps
lock
sbb
mov
pop
jae
out
into
aaa
fstl
inc
popf
sahf
inc
mov
mov
mov
int
notb
bound
xchg
push
cmp
imulb
lret
sub
dec
fisttps
inc
mov
lret
iret
imul
nop
int3
push
mov
ds
xchg
sub
movsl
adcl
ficoms
mov
jbe
xor
xchg
into
push
les
push
jo
ret
icebp
cmc
push
jno
pop
cmpsl
push
arpl
pop
inc
cmp
push
sub
jae
inc
loope
sbb
lahf
int
std
fs
fs
pop
adc
ds
xor
out
bound
xor
inc
js
rolb
add
pop
and
ja
cmp
lea
fbstp
dec
xchg
or
dec
out
add
test
adc
and
cmpb
xchg
enter
rorb
pop
cwtl
fstps
shlb
int3
popa
xor
outsb
test
jns
sbb
sbbl
mov
sub
addl
cmc
push
mov
ja
sub
int
inc
inc
pop
jbe
sahf
pusha
gs
push
jae
mov
jge
jns
or
lahf
push
add
lret
or
jb
mov
xchg
adc
fs
dec
mov
rcrb
sub
cmp
xchg
mov
jecxz
add
pop
idivl
imul
lds
cmp
aam
scas
scas
mov
inc
dec
cld
jecxz
xchg
push
test
icebp
dec
lret
mov
icebp
xchg
adc
xor
scas
fcmovbe
sbb
add
mov
or
sbb
fucomp
sub
xchg
les
fistps
cmp
jecxz
and
lcall
neg
sub
push
sbb
outsb
xor
je
adc
pop
lods
cmpsl
mov
in
pop
iret
bound
in
jecxz
push
arpl
lods
sbb
jmp
test
sub
adc
nop
mov
fcoml
decl
push
popf
pop
ljmp
rcrb
call
mov
ljmp
sub
pop
pusha
pop
js
xchg
cmp
out
inc
or
sub
jno
mov
jbe
ret
pop
and
mov
mov
out
adc
pop
jno
stos
jg
xchg
dec
scas
pusha
dec
aaa
mov
add
inc
dec
loopne
jno
dec
lods
mov
mov
negb
adc
sbb
cwtl
pop
mov
mov
leave
fwait
cmc
pop
fbstp
adc
pusha
scas
fdivl
jecxz
push
xorl
sahf
pop
inc
xchg
jns
imul
sbb
shl
add
xor
xchg
adc
int
and
shll
lods
shlb
dec
push
xlat
adc
or
inc
pop
mov
mov
adc
add
fistps
mov
outsl
sbb
push
mov
test
dec
leave
xor
adc
out
lret
cmp
xlat
sbb
lret
cltd
faddl
inc
cmp
cmpsl
pop
and
cmp
pop
aam
cmp
rcrl
push
jecxz
mov
cmp
add
jno
and
imul
movsb
mov
jge
push
mov
pop
pop
cmp
cmp
add
cmp
subb
and
add
aaa
xchg
or
and
inc
inc
sti
mov
aaa
sbbb
adc
jo
lcall
cmp
lods
jg
nop
pop
fistpl
outsb
enter
insl
push
xorb
or
dec
jne
mov
sti
xchg
pop
or
mov
jp
push
lahf
insb
fwait
loopne
pop
cmp
into
mov
std
jbe
xchg
popf
mov
or
iret
mov
pop
push
push
pop
inc
sub
insb
cmp
adc
enter
push
and
out
add
xor
mov
ja
into
mov
in
inc
mov
adcl
insl
testl
push
lock
gs
xor
dec
nop
cmp
clc
cmp
xorl
and
mov
and
dec
lcall
test
sbb
push
adc
sahf
std
movl
das
pop
dec
cwtl
pop
gs
leave
push
fldl
loopne
push
add
or
mov
nop
int3
sub
cmp
sbb
xchg
dec
add
popf
lods
loope
loope
xchg
xor
fwait
std
push
fsubs
stc
mov
or
fdivp
stos
jg
mov
jp
jg
lods
xchg
add
jp
cmp
push
fbld
mov
mov
ds
mov
pop
pushf
adc
popa
movsb
gs
ret
or
jp
xchg
popf
into
fcomps
dec
jo
nop
out
dec
xchg
and
jns
int3
lock
mov
xor
xchg
cs
in
mov
insl
ror
ud2
sbb
inc
adc
mov
cmp
add
cli
test
mov
pop
sarl
dec
dec
cmp
sub
mov
mov
dec
ss
jmp
sub
jp
xor
jge
pop
test
cmpsl
stc
test
and
pop
lock
add
mov
mov
adc
ret
add
cli
test
cmp
pop
cltd
fwait
cld
jne,pn
mov
ficomps
cwtl
sub
mov
and
lea
pop
inc
fwait
mov
in
data16
mov
pop
add
scas
in
xor
mov
pop
es
repz
inc
adc
jnp
push
inc
mov
or
dec
sbb
jbe
ljmp
dec
sbb
cmovns
pop
dec
addr16
sarl
lods
ret
ret
cs
cmc
pop
push
mov
sbb
adc
popf
inc
cmp
mov
pushf
inc
in
and
rorl
mov
xchg
imul
sub
cld
lret
and
jns
adc
loop
inc
push
out
sub
and
sub
mov
mov
mov
pop
add
dec
jecxz
dec
rcrl
jbe
cli
call
sub
int
push
sub
inc
add
cmc
enter
jp
pop
dec
or
push
mov
push
mov
lock
jg
add
aaa
jnp
repz
test
test
xchg
testl
sbb
nop
xchg
mov
or
jge,pn
adc
in
pop
lahf
or
xor
mov
push
aad
sub
pushl
std
mov
push
sub
mov
push
icebp
jns
cwtl
loope
test
sub
movl
jns
test
mov
test
pop
dec
lcall
cmp
mov
jae
xlat
mov
cwtl
dec
pop
mov
shlb
mov
dec
aas
push
loop
and
or
add
lahf
in
mov
test
insb
mov
cmpsb
aaa
stos
stos
add
or
add
imul
je
or
cli
out
mov
pop
push
jmp
das
icebp
fcoms
movsl
test
idivb
or
int3
inc
repnz
outsb
xor
addr16
ds
sarb
cmp
cmpsb
cld
jle
push
push
mov
std
mov
outsl
pop
fs
xchg
negl
inc
adc
dec
mov
decl
lea
test
fwait
lock
loope
or
call
enter
lcall
add
inc
test
in
sbb
loope
fistpll
pop
dec
jecxz
or
mov
mov
dec
cmc
clc
mov
test
push
movsl
lock
out
inc
out
jbe
hlt
sub
hlt
js
and
sahf
call
fisubrl
xor
mov
ret
stos
les
cmc
pop
in
sub
testl
xchg
and
mov
push
stc
jl
lea
pop
shll
lret
dec
adcl
mov
lds
es
jmp
jp
mov
mov
test
cwtl
push
jbe
push
jno
push
sbb
and
cmp
aad
rorl
pop
add
add
outsl
shll
pop
fstl
xchg
dec
jnp
or
or
add
lds
pop
cmp
push
outsb
andl
dec
outsb
add
dec
pop
icebp
xor
adc
mov
iret
push
hlt
mov
loopne
inc
pop
push
lods
loop
pop
xor
in
fimull
aam
cmp
xor
repz
dec
fld
mov
lahf
clc
fisubrs
sub
flds
dec
dec
mov
xlat
cmp
imul
mov
das
lahf
pushf
mov
mov
mov
or
sahf
dec
sub
push
std
mov
or
daa
scas
pop
xchg
xor
sbb
fildl
in
rcrb
pusha
xchg
shll
enter
and
jo
call
dec
mov
pop
stc
or
into
or
mov
or
testl
je
out
lods
pop
dec
xchg
inc
popa
inc
sbb
insb
inc
jecxz
and
or
pop
es
lds
mov
bound
mov
outsb
dec
or
mov
add
adc
int
imul
mov
and
fsub
jecxz
push
push
cmp
repnz
sbb
rclb
push
pop
pop
mov
cmpl
fbstp
popa
mov
lcall
mul
cwtl
imul
es
sbb
jb
push
scas
cmp
pop
push
sbb
xchg
sarl
pop
push
imul
sub
loopne
jp
add
jmp
or
scas
imul
push
inc
xchg
mov
and
inc
mov
jne
enter
daa
test
add
leave
pop
mov
dec
lods
sarb
or
or
lret
jmp
enter
sarl
sbb
cmp
loop
out
mov
out
clc
dec
jge
aas
aas
sbb
mov
sbb
mov
lret
sub
xchg
push
jae
clc
and
iret
lods
mov
push
xchg
mov
push
pop
pop
hlt
cmp
shl
push
dec
cli
pop
mov
call
ret
ror
jo
popa
in
loopne
pushf
adc
lret
dec
sub
pop
pop
lret
imul
leave
pop
sub
add
sub
pop
jmp
inc
cmp
js
scas
mov
mov
sahf
cmp
nop
or
jne
arpl
cli
cmp
mov
nop
mov
insb
testl
mov
mov
mov
fisubs
stos
or
ret
pushf
push
popa
jnp
repz
aas
or
jnp
rcrb
aaa
hlt
clc
call
and
int
cmp
imul
sbb
jge
xlat
mov
jmp
movsl
xor
cmpl
pop
and
sbb
ror
fists
out
shll
xor
xchg
pop
cmp
cli
xor
sbb
cmp
jecxz
cmpsb
xchg
inc
xchg
cli
sbb
pop
fs
jno
test
cmp
in
adc
data16
add
push
call
add
pop
rcl
push
cmp
push
xor
add
test
inc
xchg
sub
fildl
fisubrl
push
movsb
lret
arpl
ret
lahf
rorb
adc
in
cwtl
pop
jnp
and
loop
fisubrs
in
pop
mov
cwtl
sbb
push
mov
sub
stc
lds
or
push
addb
cmpsl
push
inc
test
inc
and
cmp
or
adc
unpcklps
and
dec
sbb
pop
roll
mov
pop
pop
jge
fistpl
cwtl
push
test
jecxz
gs
or
pop
rcl
in
pop
int
sub
subl
jge
add
pop
fdivrp
ror
mov
mov
mov
fdivrl
pop
and
aaa
sbb
shrb
cwtl
mov
inc
cmpl
sbb
in
adc
xchg
adc
jnp
xor
jb
inc
in
mov
jnp
cmpb
mov
push
jp
test
pop
int
cltd
enter
inc
xor
fstl
xchg
mov
push
out
jns
sub
hlt
lret
call
inc
push
cld
into
xchg
cmp
pop
push
popa
into
mov
movsl
jo
mov
shll
and
cmpsb
adc
stos
fisubs
sub
loop
adc
push
fistpll
lds
fisubrs
fiadds
cmp
scas
mov
xor
sbb
test
fs
fisubl
push
mov
rclb
bound
xchg
xlat
push
jl
xor
xor
popa
sbb
mov
popf
or
stos
dec
mov
pop
sub
and
fstpt
xor
ja
hlt
dec
ja
and
or
adc
stos
push
and
add
xor
jmp
sbb
mov
testb
sub
xlat
jns
in
sub
sub
push
pusha
sub
or
cmp
or
sar
icebp
ret
data16
aad
mov
mov
daa
dec
std
fnstsw
xlat
stos
wrmsr
mov
cmp
cld
mov
rcrl
pop
lock
dec
xor
sub
fmuls
pop
and
enter
mov
lods
sbb
mov
es
xor
cmc
lret
in
mov
adc
sub
lcall
or
cwtl
call
je
lock
mov
mov
dec
jmp
push
inc
dec
ret
scas
cs
pushf
cmpsb
pop
loopne
out
mov
jbe
and
push
push
mov
mov
das
daa
push
mov
sub
mov
repnz
imul
enter
nop
or
enter
stos
idivb
aam
dec
lahf
or
mov
pop
scas
test
ljmp
loopne
fdivrs
gs
jbe
in
das
jo
clc
mov
sub
test
inc
cwtl
or
in
divb
orb
or
add
ret
call
dec
in
mov
stos
mov
das
rcrl
jnp
into
mov
sub
adc
mov
jmp
sub
lock
outsb
dec
test
jp
ffreep
adc
leave
shlb
adc
jb
pop
jb
stc
cmp
cmp
pop
in
mov
shll
xchg
push
mov
scas
or
push
sbb
dec
aaa
dec
cmp
fistpll
nop
popf
mov
sbb
lahf
jmp
fstpt
outsb
stc
out
jne
and
mov
jnp
cmp
cmc
outsb
jno
inc
les
mov
dec
mov
shrb
mov
lret
push
mov
in
sahf
sub
pushf
lahf
outsl
decb
addr16
jg
ret
ss
xchg
or
adc
aad
mov
push
jb
sub
mov
adc
pusha
pop
cmp
mov
mov
cmp
pop
stos
sar
adc
in
xchg
cmpsb
cmp
and
ss
mov
lahf
mov
cmpsl
add
inc
das
lds
cld
adc
mov
inc
inc
call
aas
push
jb
and
insb
xchg
xor
bound
jp
dec
jl
add
loope
lret
mov
movsb
repz
xor
xchg
loopne
pop
jmp
test
xchg
dec
inc
add
xor
std
sub
icebp
call
daa
xchg
rcr
cltd
mov
neg
pushf
and
add
imul
inc
push
xchg
dec
adc
xor
sbb
cs
ficomps
mov
jmp
mov
cld
mov
jo
std
cmpsl
pop
repz
shll
xchg
mov
rclb
in
cmp
add
mov
aad
mov
mov
xchg
inc
fldenv
mov
in
add
push
dec
xchg
jne
jp
mov
stc
stc
movsl
pop
imul
xor
xchg
scas
frstor
daa
and
cmpsb
push
mov
rcrl
roll
fiadds
cmp
xlat
rcll
jle
pop
insl
cmp
pop
jae
sbb
mov
mov
mov
push
test
sbb
shr
mov
mov
inc
es
cld
inc
mov
filds
cmc
add
cmpsl
xchg
aaa
add
in
mov
cli
movsl
adc
xor
adc
dec
gs
jae
dec
sbb
arpl
push
push
mov
jo
fiadds
cmpsl
bound
sbb
andb
jnp
and
jne
dec
ret
jg
loop
cltd
movl
out
popf
sub
adc
dec
in
mov
and
std
addl
cmp
jbe
cmp
xchg
jge
arpl
dec
cmp
aam
and
jb
dec
fdivr
into
sbb
sbb
xorb
or
das
data16
pop
xlat
adc
or
lret
mov
pop
jnp
mov
jbe
dec
outsl
adc
adc
inc
stos
fistpl
jle
repnz
into
loopne
xchg
or
adc
lods
lret
push
sub
pop
and
push
std
rorb
or
jmp
and
ja,pn
imul
cmc
pop
push
jge
cs
lahf
jmp
das
pop
xchg
add
mov
sub
fdivrl
lds
clc
xor
mov
js
adc
loopne
test
inc
add
cmp
daa
mul
cld
jp
js
cmp
jbe
pop
nop
jge
in
sbb
and
adc
push
add
jmp
mov
paddq
adcl
and
lods
jg
mov
or
add
mov
xor
scas
lcall
andb
loop
inc
call
in
call
imul
cs
mov
jb
xor
jne
adc
loopne
push
sar
pushf
jo
outsb
mov
add
pop
mov
movb
push
or
adc
sahf
xor
popf
shlb
and
adc
imul
inc
fwait
ljmp
inc
fdivrp
lods
shlb
and
xchg
dec
adc
dec
mov
adc
inc
fsubrs
test
sbb
cltd
cmc
and
mov
das
inc
nop
movsb
pop
dec
out
test
inc
sti
push
xor
sahf
jb
mov
push
rclb
xchg
dec
cmp
mulps
mov
cmp
repnz
in
jge
hlt
pop
xchg
pop
in
repnz
and
nop
int3
mov
test
sub
push
inc
push
or
orb
js
addb
repnz
pop
fisttpl
xor
cmp
cmpsl
and
out
mov
jge
sbb
adc
into
push
das
ss
outsb
jns
cltd
loop
or
jp
mov
xchg
test
outsl
mov
hlt
aad
notb
cmp
jne
sbb
jno
mov
adc
sbb
pop
daa
or
xchg
sub
mov
dec
sbb
iret
sbb
in
fisubrs
wrmsr
ds
movsl
push
dec
enter
jnp
scas
add
mov
jnp
jp
sub
mov
test
cmp
sbb
and
les
cmp
pop
nop
cwtl
cmp
xchg
push
sub
lds
add
call
lcall
push
aad
mov
xchg
pop
shll
popf
pop
adc
xchg
sub
cmp
fcoml
xor
ss
js
mov
mov
lret
xchg
rolb
stos
ds
lods
mov
xchg
xchg
repz
mov
xchg
pusha
leave
mov
loope
rcrb
js
arpl
push
fs
mov
sub
popa
bnd
fbstp
sbb
push
fadd
inc
ficomps
sbb
sbb
cmc
jl
fldl
out
mov
mov
ja
js
cmp
mov
rcrl
pushf
add
mov
pop
cmpb
pop
dec
mov
inc
les
je
push
xchg
xor
scas
add
jecxz
gs
sbb
push
fnsave
sar
jns
arpl
lods
pop
fdivrs
dec
in
dec
addr16
pushf
cmp
pop
and
mov
sub
fstps
jne
aas
mov
ret
gs
je
push
adc
mov
xchg
push
mov
or
pop
xchg
cld
sarb
xor
mov
imul
mov
lods
popl
jno
ret
inc
sti
cs
add
sub
cmp
inc
pop
cltd
shld
fdivl
xchg
loope
jnp
sub
fisubl
and
loope
ficompl
sub
pop
insb
dec
mov
mov
cmp
fstl
dec
hlt
les
movsl
movsl
mov
addr16
sbb
pushf
adcl
jmp
mov
sub
mov
dec
pop
ja
mov
dec
fadd
lock
loope
aas
mov
mov
cmpsl
jnp
xchg
lea
cmp
lds
xchg
fwait
pop
cld
jns
sar
xchg
divl
movsb
add
cs
push
sarl
ljmp
push
nop
sarl
xor
jnp
add
repz
test
mov
cmc
fyl2x
lcall
outsl
cmp
hlt
insb
or
bound
xchg
fsts
mov
pusha
push
das
jb
loop
test
in
pop
push
dec
sub
cmpsb
and
push
imul
mov
lahf
enter
repnz
sarb
inc
pop
dec
fadds
jbe
repz
xlat
test
dec
test
cmp
icebp
rcll
stos
js
into
lods
shll
xor
push
lahf
dec
xchg
push
stos
mov
popa
adc
cltd
rolb
sbb
rcrl
fistpl
cmpl
jne
jl
xor
lock
fstps
lret
aaa
xchg
jmp
pop
push
and
fwait
cltd
pop
lds
xchg
outsb
sarb
insb
in
cmp
cmp
popf
push
mov
xchg
sbb
cli
xor
push
imul
ret
mov
mov
loopne
adc
inc
js
orb
in
mov
fbstp
xchg
jmp
jg
fwait
mov
pop
xor
out
push
bound
fucomip
mov
scas
cmpsl
mov
push
mov
sub
clc
mov
adc
in
pop
mov
and
aad
mov
cmp
cmp
mov
stos
adc
xchg
dec
push
jmp
test
testb
cmp
test
cmp
jl
outsb
sub
mov
sub
and
mov
repz
lret
adc
daa
ds
ror
cmc
nop
andb
add
xchg
xor
pusha
mov
lcall
cmp
sbb
cld
int3
adc
mov
xchg
sbb
stos
nop
jno
fcomps
push
mov
cmp
push
pop
jno
sahf
pop
mov
iret
sub
sbb
and
lock
sbb
in
mov
sarl
push
mov
shrl
vpmulhw
out
xor
call
lock
daa
mov
nop
leave
jmp
xlat
sbb
cli
mov
sbb
and
sti
aad
inc
leave
jmp
dec
push
sbb
out
shlb
or
push
inc
adc
mov
push
shr
mov
std
sub
pop
jl
call
push
imul
cmp
jne
mov
stc
imul
test
add
js
popa
mov
mov
fcompl
push
jmp
lcall
inc
xor
inc
sub
dec
fsts
push
fimull
mov
jg
lret
hlt
in
xor
sarb
push
aaa
mov
inc
loopne
in
jmp
sbb
sbb
jge
mov
sbb
icebp
cmp
inc
pop
jp
scas
mov
mov
pushf
adc
addr16
test
invd
cmpsl
test
insb
fcoms
inc
xchg
lods
push
ficompl
in
or
adc
sub
out
push
arpl
sub
mov
addr16
sub
push
les
xor
mov
aam
sub
adcl
fildll
je
xor
cs
cmpsb
adc
mov
andb
std
pop
mov
push
and
dec
jne
jmp
jmp
aas
mov
fnstsw
dec
nop
add
add
jp
arpl
xor
out
lods
loopne
ret
pop
sbb
push
int3
cli
mov
mov
addr16
pop
add
mov
sbb
pop
adc
int
push
cmpsl
stc
out
insl
inc
sbb
lret
dec
mov
aaa
mov
in
andb
lea
lcall
and
xchg
in
xor
stos
pop
arpl
inc
xchg
les
jno
pop
sub
mov
mov
jae
add
cs
rorb
lcall
frstor
ret
seto
mov
push
aas
ds
cs
flds
jge
inc
in
and
int
sbb
xchg
push
ljmp
lods
daa
inc
pop
jg
or
adc
push
mov
shlb
pop
sbb
aam
and
push
push
loop
mov
fwait
lock
add
dec
test
xchg
clc
pop
cmp
xchg
pop
sbb
sbb
andl
gs
cmp
es
sub
push
fimuls
shll
mov
inc
cld
mov
fsubs
gs
adc
les
mov
mov
subb
cwtl
cmp
sbb
mov
rorl
aaa
in
fistps
jno
or
movsb
mov
pop
sahf
add
jne
xor
cld
pop
inc
add
lret
inc
or
add
pusha
repz
mov
dec
and
test
or
lret
xchg
inc
in
inc
in
filds
stc
imul
and
movsb
lret
xchg
mov
iret
xchg
dec
cmp
pop
push
nop
sbb
stc
sbb
aaa
fisttpl
xor
mov
push
cmp
xlat
pop
rolb
push
shll
dec
xchg
inc
testl
xor
inc
and
jle
jecxz
cmp
movsb
push
jo
ret
xchg
cltd
jo
ss
imul
dec
test
gs
inc
jo
or
mov
push
cld
dec
outsb
les
fcoml
mov
aam
jbe
xor
mov
out
mov
cli
stos
aaa
xor
lret
inc
pop
ds
mov
adc
push
mov
ds
mov
push
shl
out
inc
adc
push
jmp
inc
fsubrs
mov
popf
repnz
cmp
insb
jns
xchg
shr
cmpsl
pop
fs
imul
cmp
xchg
jmp
jbe
out
mov
push
cltd
scas
icebp
fistpll
pushf
push
outsl
hlt
and
lea
ljmp
mov
xor
add
lcall
sbb
sbb
pop
js
and
xchg
dec
push
testb
in
add
xchg
sbbb
sti
and
cmp
inc
lahf
push
test
mov
aaa
xlat
les
aaa
mov
mov
sub
mov
push
flds
push
lea
dec
jnp
adc
out
mov
loopne
mov
push
dec
push
jcxz
or
sub
icebp
jne
sub
add
inc
inc
mov
jg
cmp
xor
stos
or
outsb
pop
incl
add
mov
out
nop
outsb
push
pop
adc
jne
mov
leave
push
in
push
mov
add
lret
mov
daa
sbb
orl
push
pop
aaa
sub
lea
inc
dec
xor
jns
xlat
dec
shrb
and
pop
lds
mov
cmp
dec
jo
mov
int3
les
aad
lock
or
or
or
dec
pop
jl
lret
fs
in
ss
test
cmp
pop
xchg
and
stc
repz
fadd
rorb
push
xorb
clc
mov
int
xchg
jmp
cld
loope
push
loope
sub
or
jno
jp
adc
mov
sub
and
mov
mov
out
sbb
push
test
dec
cmp
loopne
push
xor
mov
lods
mov
fidivl
out
pop
mov
dec
lods
fisubrl
push
imul
mov
jnp
shrb
insl
test
add
pushf
out
ret
xor
daa
pop
sub
xlat
in
xlat
dec
sbb
fwait
or
lahf
fwait
addr16
adc
push
mov
cltd
stos
repnz
xor
push
pop
inc
jns
dec
sbb
outsl
push
imul
in
mov
mov
pop
enter
adc
push
pop
out
push
fisubl
mov
and
push
les
xor
or
popa
push
fisubs
inc
jno
push
out
bound
in
pusha
aaa
cltd
out
lahf
aas
mov
lds
mov
insl
stos
push
mov
pop
repnz
add
xchg
jno
jne
inc
xchg
add
mov
push
aad
js,pt
sbbl
push
fidivrl
jp
subb
cmp
aad
test
push
cmp
xchg
idivb
int
mov
mov
dec
jno
test
fucompp
int
in
out
lds
int
inc
cmpsb
jo
test
ljmp
mov
clc
aam
out
fsubrs
xchg
add
and
inc
push
mov
xchg
adc
shl
or
out
fwait
or
mov
dec
loop
jl
xchg
ljmp
push
fs
into
mov
movsl
pop
cs
out
xchg
int3
dec
scas
es
sbb
lock
rolb
xchg
enter
js
into
jmp
adc
out
mov
aam
mov
cmp
call
xor
inc
pop
cld
je
pop
jg
cwtl
jbe
jle
pop
mov
dec
repz
subl
pop
add
mov
jns
pusha
ret
das
pop
push
cwtl
mov
xchg
and
and
mull
cmp
or
sbbb
mov
and
popa
dec
sbb
scas
mov
int
sub
mov
and
stos
js
or
jmp
cmpsl
das
add
and
jl,pn
int
cmp
imul
das
mov
hlt
cmp
enter
sti
dec
lods
in
or
loope
sbb
int
add
push
subb
cmp
inc
pop
add
imul
sbb
xchg
lea
mov
repnz
cmp
adc
notl
popa
jbe
fs
insl
std
and
pop
push
loope
scas
out
shl
out
fwait
test
out
jo
jp
push
cmpsl
lods
sub
adc
scas
push
or
adc
sti
pop
notb
shll
rolb
inc
das
leave
stc
cmp
movsb
sub
and
jno
in
push
fucomp
jae
imul
cwtl
pop
xchg
inc
sub
scas
jg
arpl
ja
arpl
dec
gs
fcomp
mov
daa
push
dec
pop
jl
mov
sbb
in
mov
cld
dec
adc
sar
scas
fistpll
mov
stos
pop
call
xchg
add
imul
jmp
rorb
pushf
mov
repnz
cmp
sbb
bswap
add
dec
lock
dec
inc
push
mov
mov
les
pusha
test
push
jmp
add
mov
push
add
cmc
and
xchg
jmp
jns
xchg
test
notl
dec
cmp
mov
in
mov
cmp
pop
and
dec
push
addr16
pop
js
cwtl
dec
negl
mov
ret
ja
push
insl
sbb
gs
adc
and
scas
shlb
sbbl
push
pop
in
les
loope
adc
inc
pop
add
inc
cmp
pop
outsl
scas
aaa
mov
push
mov
subb
pop
int3
mov
xor
lea
cmp
adc
pop
movsb
mov
mov
fdivs
sbb
mov
rdmsr
les
fcoml
dec
fnstenv
pop
enter
sbb
pusha
adc
cmp
nop
jecxz
rcll
jne
fildll
sahf
in
adc
test
insl
cmc
cmc
sbb
movsb
jno
push
xchg
std
shlb
popa
push
fmull
mov
dec
int
dec
cmp
xlat
les
cmp
mov
mov
jns
popf
fwait
ds
mov
or
pop
sbb
mov
mov
dec
ljmp
movsl
jle
inc
and
add
or
pop
and
cli
jmp
pushf
xor
cmp
mov
push
faddl
test
cmpsl
xor
ljmp
cmpsb
inc
xor
inc
add
xchg
scas
icebp
aad
inc
in
outsl
mov
push
xlat
mov
pop
mov
push
movsl
fsubl
or
mov
cmc
or
adc
outsb
stc
jmp
sub
push
jb
lods
cmp
mov
xchg
andl
cmp
in
cmp
dec
dec
cmp
or
aad
push
mov
hlt
sbb
cs
rclb
jle
jae
je
mov
lds
shll
add
inc
lock
dec
push
outsl
stos
mov
int3
aam
xchg
pop
mov
in
add
fcmovb
mov
xchg
pop
popf
cmp
rclb
or
hlt
mov
mov
int3
fs
mov
push
mov
fiadds
and
roll
and
or
mov
repnz
leave
sar
adc
stos
mov
sti
mull
jp
cmc
mov
lods
mov
std
imul
sahf
mov
mov
test
fwait
popa
sub
push
sti
jbe
je
sbb
sub
push
loopne
xor
mov
imull
dec
js
push
loop
ljmp
mov
adc
xor
mov
call
mov
movsb
xorb
pop
mov
jl
insl
filds
jo
mov
jno
popf
fcom
push
push
pushf
mov
in
repnz
in
testl
sarb
push
pop
icebp
enter
mov
into
dec
leave
adc
pmaxub
call
dec
out
adc
out
fisubrs
sbb
push
rcl
fsts
cmpsb
aaa
cwtl
adc
out
test
xor
addr16
movsb
mov
mov
sub
and
sbb
add
inc
fcomip
imul
jb
cwtl
sbb
addr16
cmc
pop
pop
jl
mov
cmpl
in
dec
push
cwtl
xor
add
fldenv
nop
int
dec
xor
inc
jecxz
jb
cmpb
jmp
cmpsl
loope
push
adcb
shl
jmp
jo
test
xchg
mull
aas
arpl
bound
icebp
jl
scas
cli
mov
pusha
adc
cld
xchg
inc
sbb
ja
fcmovnbe
fistps
outsl
jb
int
ss
popa
bsf
mov
jmp
adc
sub
mov
mov
xchg
or
jmp
xchg
push
cli
insb
out
int3
inc
nop
mov
xchg
rorl
or
pop
xchg
xor
ljmp
into
push
jmp
pop
out
sub
imulb
xlat
sub
jae
shll
out
hlt
inc
cmp
jne
sub
pop
fs
in
or
pushf
lods
cld
push
and
in
je
sbb
je
mov
divl
and
mov
ljmp
mov
push
iret
jb
pop
jmp
jae
pop
xor
ret
jnp
jo
dec
mov
rorb
push
mov
and
ret
stos
and
out
jne
cmp
mov
shrb
and
add
addb
out
jns
leave
movsl
push
fdivs
test
pop
inc
inc
movsl
in
lahf
enter
or
pop
xchg
cmp
lock
hlt
sbb
cld
scas
repnz
pop
lds
das
jne
gs
lcall
in
lods
imul
test
in
fs
push
fcmovbe
adc
int3
xchg
adc
mov
bound
ficomps
ss
xchg
pushl
xchg
popf
cmp
push
cmp
rolb
out
ficomps
lahf
enter
mov
je
ss
push
xchg
pop
sbb
xchg
mov
rclb
loopne
jnp
push
lods
mov
pop
sub
xchg
movb
divb
xchg
jbe
frstor
pop
cmc
subb
scas
sbb
lods
jecxz
pushf
jecxz
mov
inc
sbb
sahf
push
and
sbbl
pop
push
fwait
dec
sub
je
int
pop
out
in
cs
mov
aad
fst
and
mov
push
add
dec
add
leave
loope
cmp
fs
hlt
adc
xor
mov
xchg
xor
mov
xchg
cwtl
cmpb
add
mov
xchg
std
cmp
ss
pop
mov
mov
mov
pmuludq
add
andps
ljmp
mov
sbb
insl
shrb
xchg
jne
out
testb
call
ficoml
rcrl
lods
inc
push
dec
je
shll
leave
dec
daa
xacquire
lcall
hlt
jnp
outsl
push
sub
add
pop
dec
div
lcall
pop
enter
pop
lahf
add
std
arpl
jno
cmc
mov
gs
arpl
jmp
and
sti
into
shlb
outsl
pusha
cmp
inc
test
retw
roll
mov
mov
add
cmpsb
test
out
sbb
cmpsw
mov
xchg
and
bound
cmpl
sysret
cmp
iret
add
pop
push
jno
adc
cmp
inc
hlt
lods
xchg
mov
js
das
mull
jmp
jge
sub
lahf
xor
out
sbb
pop
std
and
in
lds
shll
or
or
ljmp
fisubl
jl
mov
push
cmp
sti
mov
add
push
cmc
and
dec
and
loopew
or
push
xchg
inc
xchg
faddp
shrb
and
inc
lret
mov
push
mov
pop
cltd
dec
xor
sub
addr16
inc
adc
add
xchg
bound
mov
push
repnz
mov
push
fldl
push
sahf
pop
enter
push
cmp
xor
jb
push
test
pusha
cmp
jne
pop
fistpl
jecxz
cmp
shlb
out
push
clc
jmp
jnp
fistl
out
test
mov
fisttps
out
jne
movsl
push
pop
icebp
cmp
sub
stos
jge
mov
xor
add
sbb
cwtl
xchg
jmp
or
daa
aaa
sbb
push
sbb
xor
shlb
dec
xor
into
add
push
outsl
cmp
mov
adc
cmp
insb
fsubrl
fadds
cmpsb
pop
sbb
sbb
mov
mov
lret
xor
xor
xchg
fildl
cmp
pop
adcl
cltd
push
popa
arpl
mov
test
and
mov
adc
dec
outsl
repz
hlt
add
insb
nop
shll
clc
aaa
push
and
adc
test
fstpl
leave
inc
andb
ss
test
adc
push
dec
jne
repz
sti
cli
in
add
dec
lds
adc
dec
scas
test
cmp
fists
scas
sub
lret
cmp
dec
and
push
or
or
adc
fsubr
mov
das
push
rcr
mov
xor
aam
mov
testb
out
jo
enter
jp
pop
mov
aad
ljmp
fsubs
cmpsb
je
test
hlt
in
scas
inc
out
fmuls
test
stc
push
inc
rcl
adc
dec
js
fs
call
imul
leave
sub
fmulp
sbb
lods
fildl
movsl
xlat
enter
push
push
fwait
scas
and
push
and
mov
test
loopne
sub
jmp
sbb
outsl
aad
xlat
sbb
cld
adc
or
xchg
pop
adc
jmp
fidivs
sub
aas
mov
mov
movsl
sub
sbb
mov
aad
imul
test
mov
pop
jno
clc
cld
inc
cmpsb
insl
js
inc
xor
or
clc
hlt
loop
xlat
loopne
out
hlt
cmp
ds
movl
mov
pop
jns
or
xchg
sbb
mov
dec
out
orl
nop
das
adc
aaa
push
push
imul
scas
cmp
aaa
scas
clc
jnp
mov
inc
enter
mov
repz
cmp
sti
xchg
adc
mov
shlb
mov
dec
pop
inc
cs
push
sub
addb
in
mov
push
xchg
into
or
clc
pop
frstor
add
pop
mov
addr16
std
data16
lcall
hlt
adc
cld
inc
jb
push
push
bound
pusha
and
test
mov
out
addb
ret
lock
push
cmpl
popa
jne
inc
mov
sbb
out
das
dec
ljmp
and
add
iret
cmp
dec
jnp
testl
sub
pop
push
mov
scas
shr
push
out
push
mov
push
int3
inc
ficoml
mov
fdivrs
push
sbb
xor
add
arpl
pushf
sbb
filds
fstpl
aam
cmpsl
xchg
jecxz
mov
jae
subl
jno
xchg
outsl
add
push
nop
xor
lahf
subl
add
scas
pop
fsubrl
and
pop
xor
jnp
imulb
xchg
xor
cltd
add
arpl
out
roll
jbe
or
xchg
je
push
gs
inc
push
jae
out
push
mov
jmp
test
hlt
dec
pop
cmc
adc
sub
dec
addr16
add
push
into
or
in
cwtl
shlb
mov
cmp
and
cmp
out
scas
sub
ss
or
sub
add
jo
shll
test
je
mov
enter
int3
jns
enter
sub
test
mov
sub
and
and
incb
jnp
dec
lcall
addr16
test
insl
push
mov
negl
mov
into
pushf
popa
lcall
mov
dec
in
enter
dec
fbld
mul
xchg
lret
cmpsb
insl
add
sub
push
stos
or
inc
xor
mov
push
out
pop
cmc
xlat
jl
call
pop
ret
sub
xchg
mov
mov
fs
xchg
pop
sbb
and
sahf
out
push
in
sbb
pop
cltd
loop
xchg
sub
xor
inc
or
fldcw
test
out
mov
xchg
push
push
jp
imul
mov
lea
stc
push
pop
xchg
gs
imul
roll
inc
lds
hlt
fnstenv
jecxz
ret
shrb
stos
cmp
inc
jl
test
push
adc
ret
xchg
movsl
push
jnp
loope
xor
jne
mov
adc
out
mov
ds
and
dec
das
scas
shrl
mov
mov
test
fwait
cmp
mov
mov
loop
xchg
lds
dec
mov
out
push
dec
or
pop
rcrl
in
sub
dec
cmpsb
pop
push
out
lcall
in
xchg
mov
adc
dec
jmp
cmc
imull
nop
inc
adc
into
add
and
adc
sbbb
repz
out
pop
lcall
pusha
jae
out
xor
xchg
call
push
xor
out
les
sbb
lods
movsl
gs
jnp
mov
out
push
iret
jb
push
pusha
out
outsb
dec
repnz
xor
lahf
dec
jecxz
inc
out
out
clc
sub
mov
xchg
mov
into
jae
hlt
pop
xlat
ficomps
test
add
mov
xor
cmpb
shll
ss
test
inc
pop
xor
popa
xchg
mov
mov
ss
cmp
and
jns
sarl
xchg
adc
pop
pop
fdivrs
leave
jge
add
pop
repnz
fstl
or
jne
jp
out
xor
movsl
mov
and
xor
mov
and
inc
lds
lea
loope
pop
movsb
jo
dec
das
loop
or
adc
pop
xor
outsl
mov
jnp
popf
outsb
mov
scas
leave
jle
sub
mov
pusha
dec
mov
imul
loop
dec
pop
divl
pop
add
pop
pushl
movl
movsb
xlat
shl
into
lahf
add
push
fisttpl
fldenv
loop
stos
lea
sbb
and
stos
mov
loope
das
dec
adc
leave
xchg
mov
mov
cmp
sbb
lods
bound
xchg
jbe
add
int
sarb
sbb
inc
xchg
out
cmp
xorb
pop
cld
mov
adc
xor
ds
mov
xor
mov
test
cmc
cli
mov
out
mov
insl
bound
std
pop
adc
cmpsl
pop
pop
mov
es
xor
imul
push
and
std
pop
mov
pushf
xchg
in
xor
enter
and
cld
jae
sbb
dec
and
roll
into
sbb
inc
inc
movsl
adc
lret
cli
cmp
pop
add
dec
sar
sub
pop
inc
mov
dec
shll
andl
or
mov
mov
dec
das
faddl
add
cmc
adc
hlt
xchg
sub
leave
push
sbb
outsl
push
jne
inc
mov
mov
push
pushf
shlb
nop
push
pop
and
aas
dec
lret
xchg
adcl
sahf
int3
pushl
mov
mov
cmp
popa
jg
mov
shll
lcall
xor
outsl
pop
cmp
mov
stc
stc
adc
dec
out
pop
cmp
jecxz
stos
lock
cwtl
adc
clc
or
repnz
inc
pop
or
sub
xchg
fldenv
addl
mov
jno
dec
dec
sahf
iret
pop
jno
incb
negb
sti
nop
mov
popf
and
inc
imul
push
jnp
pop
lcall
mov
shlb
adc
aas
add
adc
push
mov
into
lret
jmp
mov
and
out
xchg
notl
mov
inc
mov
lret
mov
mov
icebp
movl
fs
inc
xlat
mov
mov
lods
insb
je
int
pop
test
out
push
inc
mov
inc
xor
add
mov
test
daa
xchg
xor
pop
popf
xorb
inc
jge
lods
ret
adc
ds
inc
xlat
jnp
xor
gs
int3
jb
mov
sub
lahf
pop
loop
repnz
imul
cmp
fdivrs
xor
dec
push
push
inc
jbe
xlat
add
push
insb
mov
sub
inc
jb
scas
mov
scas
pop
daa
xlat
loop
mov
lea
and
fwait
jecxz
ljmp
jle
in
inc
cmc
mov
movsl
int3
insl
add
xchg
push
xor
jmp
scas
pop
out
fstl
sbb
arpl
enter
or
loopne
ret
jecxz
jb
shr
lods
test
push
and
ret
cltd
scas
icebp
sbb
add
stos
jb
nop
pusha
pop
or
dec
out
cmpl
add
lods
dec
jmp
mov
sbbl
rolb
or
fimuls
lods
jg
add
jne
adc
mov
mov
sub
popa
push
loop
sbb
or
xchg
call
and
jecxz
or
lret
mov
test
js
arpl
fadds
add
nop
lds
mov
pop
sbb
mov
mov
mov
add
mov
or
ret
pop
pop
imul
sbb
push
jmp
pop
sub
xchg
dec
cmp
lret
sbb
outsl
cmp
stc
pop
das
push
cmp
push
push
repnz
and
rcrb
loopne
add
sarb
mov
mov
or
rorl
push
cmp
aam
das
mov
xchg
insb
fisttps
jae
mov
mov
xchg
xor
dec
push
dec
pop
pusha
aaa
mov
xchg
dec
xchg
add
pop
mov
imul
jge
out
push
lcall
add
sub
xchg
cmp
push
cmp
fidivs
lock
clc
std
cmpsb
cmp
cltd
jb
xor
mov
ret
fdivrl
mov
or
fcoms
mov
fcomi
xchg
icebp
push
ret
adcb
ljmp
fmuls
sub
rolb
lods
mov
or
mov
sbb
cmpsl
adc
sbb
jg
push
sub
sub
mov
rcrl
fwait
inc
sbb
ss
cli
lock
inc
sbb
mov
pop
push
es
int
cli
dec
xchg
cld
ret
cmp
leave
adc
sub
push
inc
cmp
adc
fucom
xor
push
dec
lret
xchg
out
es
push
sbb
mov
pusha
push
scas
cmp
push
aam
sahf
sbb
mov
ficomps
jo
sub
xchg
xchg
loopne
int
jbe
xchg
and
adc
mov
in
ss
lcall
imul
xor
add
outsb
inc
inc
inc
shr
push
cmp
shr
mov
mov
mov
push
push
in
or
mov
fs
xor
pop
pop
int
daa
fiaddl
clc
movsl
test
imul
les
sbb
dec
ret
gs
ficoms
int
jns
cmp
push
sbb
jne
sbb
push
hlt
xchg
sbb
sahf
ret
leave
cli
cmp
or
sub
mov
mov
lods
mov
and
scas
mov
out
mov
lock
cmp
inc
std
jge
add
pop
jae
or
mov
xor
pusha
or
inc
and
sarb
cld
movsb
clc
stos
adc
inc
mov
into
icebp
call
cwtl
scas
cwtl
in
xor
cli
cmpsl
sub
jl
pop
jo
push
ljmp
les
sub
sbbb
call
jmp
push
inc
in
inc
pop
lds
repnz
scas
or
or
lahf
sub
push
pop
call
xchg
jbe
or
insl
fimull
pop
int3
sub
xchg
push
mov
jbe
and
xchg
push
mov
pop
icebp
div
iret
hlt
mov
inc
adc
xor
push
int
and
pop
pushf
out
or
pusha
pop
mov
cli
lret
outsb
lret
dec
aam
arpl
lcall
inc
in
insb
les
mov
inc
dec
push
inc
sbb
sub
daa
ret
int3
dec
das
mov
add
pop
xchg
fwait
ret
pop
popa
push
insb
or
je
push
lahf
mov
out
addr16
lock
jmp
mov
inc
cmpsb
mov
imul
dec
jno
xor
movsb
pusha
jo
daa
fcoms
mov
pop
add
xorb
ja
aas
lods
movsl
push
bound
in
cmp
cmp
xor
lock
xchg
or
jns
shl
shrl
lds
jb
jp
pusha
test
pop
mov
push
xor
cmp
sar
jp
loopne
dec
push
sbb
mov
mov
lcall
pop
jno
movsb
xor
shlb
stos
arpl
daa
mov
inc
addb
pop
gs
test
cmp
or
dec
je
jmp
leave
pop
push
push
aad
adc
in
sarl
gs
movsb
xchg
xor
ret
stos
xor
jge
or
mov
loope
sbb
lods
push
icebp
lea
and
inc
mov
push
cltd
inc
popf
lods
mov
shl
mov
fistl
dec
stos
dec
inc
inc
inc
jbe
hlt
sbb
jns
addb
aas
inc
daa
out
sbb
inc
xchg
cld
daa
repz
xchg
fwait
in
add
out
out
sarl
push
out
dec
roll
jp
dec
test
sub
push
cmc
push
or
jns
jo
push
fiadds
fcmove
push
fdivp
icebp
jg
scas
insw
xchg
and
shlb
sub
ret
adc
inc
sub
cli
jb
imul
mov
lcall
bsf
mov
mov
nop
imul
and
call
and
leave
pop
pushf
out
dec
mov
and
js
je
and
lods
and
push
dec
sbb
inc
sub
fadds
mov
fldt
bound
incb
fwait
push
push
add
stos
out
cmpsl
nop
pop
stos
sbb
iret
sarl
ret
jecxz
hlt
mov
stos
push
mov
jge
jmp
push
push
aaa
or
xchg
adc
push
jle
faddl
pop
fwait
xchg
cltd
sahf
sub
pop
jno
dec
js
inc
and
test
mov
push
push
adc
mov
pop
int
test
movsl
test
and
fwait
test
stos
xchg
adc
mov
and
sub
pop
gs
pop
imul
aad
mov
jp
push
or
js
js
xchg
jo
pop
cmp
add
rol
ds
push
dec
addr16
xchg
inc
xor
adc
mov
ss
outsl
xor
mov
les
fs
mov
sub
decl
sti
cmpsb
xor
cmpsb
sbb
loop
fadd
data16
cltd
imul
pop
sub
xchg
pop
fsts
mov
push
push
mov
cmp
mov
cld
push
add
lock
sub
xor
lea
ja
add
les
fadds
popf
inc
push
push
mov
mov
adc
loopne
jp
in
jg
in
mov
push
inc
js
sti
pop
push
xchg
xchg
insl
shrl
mov
push
push
ret
rclb
fsubl
mov
jmp
fwait
cld
add
orl
loop
fs
add
push
clc
in
push
fcoml
js
imul
cltd
pushf
in
mov
add
push
imul
jo
or
and
pushf
mov
or
insl
sub
push
outsb
hlt
dec
xor
mov
pop
mov
hlt
fdivs
xchg
pushl
imull
jl
jae
and
shll
xor
xor
andl
js
mov
xchg
mov
loopne
and
inc
mov
enter
pushf
mov
and
repnz
jl
cmpsl
dec
xchg
xchg
mov
jns
dec
pop
pop
in
inc
inc
pop
pusha
xor
loopne
mov
push
cli
enter
or
pop
je
mov
xchg
jl
cmp
mull
addr16
adc
cmp
inc
rcl
push
ret
stos
in
jl
fwait
mov
inc
fidivl
hlt
fs
or
imul
push
outsl
sbb
adc
jp
mov
loope
les
mov
mov
xor
pop
insb
push
jl
add
sbb
popf
in
icebp
jl
adc
xlat
or
mov
or
test
push
xlat
cltd
xchg
sbb
lods
xchg
imul
sub
sbb
inc
xchg
sbb
mov
lods
add
cmpsb
enter
xor
stos
mov
aas
scas
add
sbb
add
jle
stos
cmp
mov
jecxz
clc
loop
leave
out
movsb
scas
jns
mov
call
mov
cwtl
sub
out
int3
xor
int3
mov
iret
movsb
in
movsb
notb
in
fadds
ss
mov
cli
jmp
inc
imul
jg
adc
adc
mov
fs
in
js
vpcmpgtb
inc
pop
push
mov
insl
aad
push
mov
es
lods
xchg
sub
cmp
pop
lods
aad
add
lods
pushf
adc
lock
fstl
inc
loopne
xchg
dec
std
jmp
xorl
neg
imul
adc
aad
jnp
pop
popf
xlat
ret
sub
mov
cbtw
mov
push
gs
out
pop
sbb
mov
aas
push
pop
pop
stc
mov
test
div
hlt
fld
leave
cmc
sbb
mov
cmp
push
sahf
and
cmp
jle
jne
cs
jecxz
pop
test
pusha
pop
ds
arpl
mov
cmp
scas
sub
push
lret
cltd
out
lods
out
vpsubsb
push
mov
add
popf
xchg
sbb
notl
imul
jecxz
or
fisubrs
sbb
jne
jns
jae
outsl
xor
mov
jg
or
test
pop
mov
cmp
sti
popf
insl
outsb
adc
pop
xchg
lock
ds
data16
mov
and
nop
cwtl
std
adc
inc
cmp
mov
jbe
xchg
mov
mov
adc
push
or
add
shll
jecxz
aad
xchg
test
add
push
inc
pop
sbb
jle
fadd
lret
ljmp
lret
clc
cmp
cmpsl
cltd
sahf
int3
xchg
jns
dec
adc
cltd
std
add
out
dec
in
arpl
inc
push
mov
and
xchg
bound
add
sub
lods
mov
insl
jno
sahf
pop
or
stc
cmp
add
jmp
xor
lds
inc
inc
dec
cmp
mov
mov
pop
inc
rolb
pusha
add
mov
scas
cmc
push
pusha
xchg
xor
inc
arpl
and
xchg
push
test
gs
lods
xchg
cmpsb
sbb
or
mov
pop
aaa
jge
ret
lahf
add
sub
xchg
cmp
insl
ss
pop
push
test
xor
jns
inc
sbb
cmc
xor
mov
pop
roll
inc
jge
shll
insb
sbb
dec
push
mov
les
xorl
add
xchg
scas
addr16
sub
call
push
mov
mov
or
sub
sbb
jns
cld
adc
cltd
pop
data16
fbstp
popa
sti
and
clc
aas
lcall
lods
or
loope
lea
pop
jmp
cmp
fwait
jbe
push
adc
je
and
mov
or
je
push
or
dec
pushw
mov
les
jne
icebp
add
inc
mov
xchg
adc
sahf
and
add
mov
mov
mov
in
xchg
dec
dec
add
cmpsb
xor
cmpsb
cli
inc
cltd
or
xchg
les
mov
mov
inc
or
adc
xchg
sbb
enter
mov
inc
addb
sbb
addr16
orl
in
clc
dec
dec
add
pop
dec
in
mov
adc
imul
movsb
add
iret
ja
aaa
cmp
pop
sbb
jne
ss
jo
sub
stos
push
inc
shrl
lea
imulb
xor
push
insb
dec
inc
or
into
push
xor
int3
adc
out
mov
jl
rolb
clc
jecxz
jne
and
test
inc
fcompl
mov
jbe
jae
jmp
ret
add
adc
out
nop
adc
cmpsb
mov
stc
mov
mov
std
incl
sbb
fprem
cmp
push
std
js
cli
cltd
enter
cmp
into
or
xor
rcrl
xlat
mov
jo
xchg
mov
dec
push
in
roll
sbb
loopne
push
dec
xchg
mov
in
ljmp
inc
dec
add
cmpsb
xor
mov
xorl
sbb
insl
pop
sbb
dec
jo
cmc
fistpll
bound
lock
test
xchg
jno
leave
js
mov
movsb
cmpsl
shrl
rcrb
test
fs
dec
jp
add
popa
inc
sub
adc
dec
jns
jmp
lea
and
xlat
jo
addr16
sbb
leave
or
pop
dec
inc
lds
xchg
adc
and
inc
lock
inc
add
inc
test
pop
cmpl
dec
add
inc
mov
icebp
imul
sti
loop
ss
adc
jle
jecxz
aaa
inc
sbb
out
movsl
ja
jno
pop
arpl
cli
adc
push
push
sub
lods
negb
push
pusha
jo
xor
dec
mov
movsl
pushf
mov
mov
lcall
pop
xchg
out
cmc
add
stos
add
adcl
jns
nop
sbb
jbe
sub
and
in
jnp
or
sub
or
push
xchg
iret
sub
stc
cmp
lods
push
aad
and
add
xor
xchg
cmc
sti
mov
mov
pop
test
mov
cmpsl
or
lods
push
xchg
out
adc
xor
jmp
jns
mov
xlat
scas
push
fs
aas
addl
mov
dec
insb
out
sbb
xor
mov
das
int3
lret
push
mov
lea
lods
jge
cmp
xor
int
or
mov
push
add
push
dec
test
jmp
mov
sarl
xor
clc
cmp
push
cmp
inc
insb
push
jne
xor
pop
pop
rcrl
push
and
hlt
aam
inc
mov
insb
mov
dec
es
in
push
pop
call
movsb
cmp
xor
call
jl
xchg
inc
sbb
xor
adc
jmp
icebp
rorl
xchg
dec
xor
xor
fstl
mov
sub
fiaddl
pop
sbb
jns
sub
mov
faddp
jl
dec
pop
cvtdq2ps
test
fwait
popa
test
add
mov
ds
cmpsb
ljmp
pop
mov
das
jge,pt
push
popa
loope
in
sbb
push
mov
not
loope
xchg
call
sub
sub
xchg
stos
jbe
mov
and
adc
gs
add
inc
mov
and
ja
je
outsb
xor
movsl
xor
js
fs
mov
cwtl
orb
inc
add
fldl
push
clc
or
and
xor
clc
ds
sbb
cmp
cmc
mov
ss
repnz
shl
adc
sub
dec
mov
ja
mov
leave
cld
jno
cmp
xchg
mov
ficoms
jb
adc
pop
shr
mov
xor
cmpl
sar
dec
movsl
rcll
cmpsl
stos
push
mov
fadds
adc
xorl
push
notb
or
add
and
bound
scas
push
lods
mov
inc
pop
inc
xchg
mov
into
xor
call
mov
in
jp
nop
ret
sbb
je
inc
enter
and
pop
ret
lods
mov
mov
hlt
aad
pop
lret
push
movsb
jo
stos
adc
call
popa
lea
leave
push
xchg
cli
in
xor
pop
push
or
pusha
jne
add
enter
pop
or
push
xor
adcl
imul
mov
mov
or
add
adc
push
jge
je
data16
cmp
gs
xchg
rdtsc
push
add
ss
cs
cmp
cmpsl
xchg
aaa
or
push
repz
fisubl
mov
dec
ficoml
sub
cltd
out
fwait
movsb
stc
popa
and
sbb
lret
push
lea
inc
lahf
mov
xchg
jns
add
xchg
inc
js
sub
jg
add
fsubs
jno
ret
add
xchg
xchg
add
divb
nop
pop
jb
jmp
mov
mov
lds
inc
andl
inc
xchg
dec
in
mov
outsl
shlb
rcr
shlb
cmp
inc
pop
jmp
cwtl
addr16
adc
inc
pop
add
je
insl
adc
add
adc
std
es
xchg
and
xlat
inc
into
adc
pop
loopne
add
outsb
jmp
push
aas
xchg
into
or
xchg
adc
inc
hlt
loop
add
xchg
ret
sahf
mov
mov
out
pusha
and
in
sar
outsl
cmp
adc
call
sbb
pop
cmp
mov
mov
inc
lret
lcall
arpl
adc
cli
jae
shlb
or
pushf
pop
sarl
dec
std
es
daa
sbb
test
pop
xchg
in
jb
xor
push
out
out
dec
dec
repz
je
movsl
flds
iret
outsb
xchg
add
aad
pop
dec
test
add
fnstcw
idivb
cmp
sbb
stos
xor
cmpsb
lcall
or
lock
cli
or
jmp
ret
mov
or
gs
int
pop
cmc
testb
scas
cmp
out
mov
pop
fwait
adcl
cwtl
mov
stos
pop
xchg
repz
call
mov
mov
stc
jge
or
hlt
fiaddl
mov
mov
lret
in
int
daa
and
sbb
leave
lcall
pusha
icebp
aad
leave
aad
mov
mov
daa
jp
roll
dec
fs
pushf
mov
xor
pop
lods
fidivs
in
sbb
test
std
and
mov
incb
pop
or
jge
rolb
int3
mov
les
or
sub
hlt
cmp
fnstsw
add
arpl
loope
mov
cmp
lds
pop
icebp
lods
and
daa
fdivl
loopne
cmpsl
sahf
sbb
stos
loope
jge
popa
pop
push
daa
or
and
dec
idiv
fs
ss
popa
sub
jb
leave
rcrb
cmp
push
cltd
sbb
sbb
xchg
cltd
sbb
mov
add
adc
nop
and
test
lahf
jo
mov
loop
pop
xchg
push
xor
ja
cmpsl
pushf
or
xchg
into
and
stos
adc
mov
movl
xchg
push
jbe
dec
pop
stos
fcoml
fiadds
mov
pusha
nop
mov
jmp
jns
out
pop
insl
stos
stc
fbstp
xchg
leave
daa
stos
gs
or
lods
xor
scas
ret
pop
dec
outsl
sbb
or
pop
sahf
pop
out
in
push
inc
xchg
out
push
lea
out
loope
lret
out
push
cld
add
fists
cmp
adc
ffree
loopne
sbb
mov
shrw
pop
xlat
sbb
pop
jg
popa
out
jle
inc
jae
xlat
test
test
int
lahf
inc
xorb
dec
idivb
jp
push
sti
ret
dec
stc
dec
xchg
test
add
aam
dec
lret
sar
jb
pusha
out
or
mov
ds
adc
hlt
cmp
mov
push
pop
test
js
jns
inc
xchg
sbb
cltd
jecxz
pop
into
mov
mov
dec
add
jge
into
xchg
sub
sub
loopne
mov
gs
and
mov
outsb
adc
mov
jae
inc
sub
cltd
ljmp
mov
dec
dec
and
xor
dec
dec
cmpsl
mov
add
iret
popf
addr16
xchg
int3
daa
int3
dec
jnp
cmpb
aas
dec
mov
popa
xlat
movsb
dec
mov
loop
bound
cmp
and
mov
fisubrs
mov
xor
stos
sub
jno
cmp
sbb
push
cmpsl
mov
ficomps
pop
test
sbb
les
add
test
stos
mov
enter
stos
or
dec
xchg
and
je
iret
or
lds
adc
pop
xor
out
cwtl
aas
xor
push
mov
dec
insb
ror
jns
push
inc
xchg
cmc
or
pop
cmp
cltd
dec
test
insl
mov
xor
ja
and
adcb
xorb
inc
int
sarb
aad
pop
jmp
or
mov
repz
mov
jnp
sub
and
xchg
push
cmp
jbe
mov
scas
mov
fwait
xor
jo
or
scas
test
roll
push
xor
ja
sbb
in
pop
cmp
lret
xchg
repz
xchg
push
jno
mov
xchg
sub
adc
arpl
jb
push
xchg
in
adc
dec
and
cli
xor
jmp
sbb
ja
cltd
fdiv
cmpsb
push
rclb
xchg
int
les
rep
stc
ljmp
cmp
push
xchg
pop
inc
adc
inc
dec
jbe
je
stos
add
or
stc
ds
loop
lea
mov
sbb
cmp
es
pop
push
std
leave
hlt
xchg
cmp
cmp
or
sbbl
xor
gs
cld
aas
clc
aas
je
lock
jmp
push
dec
jl
lods
jle
mov
fnstsw
pop
push
mov
int
ljmp
pop
es
mov
sbb
jge
adc
pop
push
fbstp
pusha
jg
xorl
mov
je
rclb
dec
ret
cmp
jns
sub
movsb
pop
stos
xchg
jno
cld
adc
mov
arpl
test
cmp
popa
push
pop
test
jp
movsb
cmp
and
mov
loop
cmp
scas
decb
mov
push
pop
sbb
push
sahf
jns
adc
push
ja
mov
and
out
popf
jns
pop
jl
daa
clc
mov
rcrb
rorl
mov
rcrb
mov
or
adc
out
push
mov
and
mov
outsl
xor
xchg
rcll
insb
sarl
dec
cli
and
lret
jae
dec
lock
mov
imul
pusha
mov
and
or
jecxz
xor
inc
mov
scas
mov
xlat
cmpb
lret
repnz
add
or
push
repnz
fmuls
or
cmc
adc
lret
fidivl
dec
xor
fs
xor
or
out
negl
add
lahf
sbb
pop
xor
xor
dec
xor
cli
mov
sub
jl
loope
in
push
lcall
add
fdiv
mov
in
mov
jno
mov
repz
adcb
pop
cld
call
jns
mov
rorl
and
pop
or
pop
sub
mov
fadd
adc
adc
jg
int3
mov
cmp
daa
shll
and
mov
fdivp
popl
push
lret
pusha
inc
arpl
vphaddwd
sbb
out
scas
cmpsb
and
cmp
lea
mov
pop
shl
jl
faddp
xor
psllw
mov
sub
jo
int
clc
int3
sbb
cli
or
mov
mov
mov
add
rcrl
fists
mov
lea
fisubrl
ds
punpckhbw
out
nop
insb
int3
xchg
outsb
call
loopne
mov
fildll
movsb
mov
jmp
cmp
in
inc
xchg
sbb
loope
clc
jp
icebp
xchg
cmp
lcall
dec
xchg
out
lods
data16
mov
inc
jle
sbb
xchg
cld
aas
int
sub
test
mov
aas
faddl
pop
gs
jnp
aad
fcmovu
mov
mov
inc
pop
bound
and
int3
popaw
mov
fcmovu
pop
dec
aad
dec
and
lahf
mov
xor
enter
into
dec
cld
pop
mov
inc
jl
pop
clc
jg
fcomp
jg
ds
pop
and
sub
or
push
dec
jl
xchg
sbb
repz
mov
jo
js
rcrl
ljmp
mov
mov
cwtl
dec
dec
mov
inc
cwtl
andl
test
inc
das
js
test
jg
push
pushf
out
cltd
push
out
stos
scas
mov
fdiv
clc
push
mov
sbb
inc
dec
daa
inc
repz
cld
and
orl
dec
mov
repnz
pop
xchg
mov
insb
and
xchg
jns
and
insl
and
jmp
and
add
je
pop
shll
jnp
cmp
jne
insb
dec
inc
cmpsb
and
pop
inc
cli
push
pusha
pop
scas
mov
jb
jl
adc
repz
dec
or
push
fisubl
jecxz
inc
xor
ret
mov
inc
scas
xlat
in
inc
jo
sbb
rcll
jle
inc
mov
sbb
imul
repz
cltd
jp
call
and
bound
and
into
lods
imul
jge
cmpb
lcall
push
add
les
dec
add
or
ret
dec
jp
test
negl
ror
lahf
mov
lods
mov
push
inc
xor
hlt
and
push
or
sbb
mov
sbb
cmp
hlt
or
sbb
std
stc
inc
inc
push
test
mov
and
inc
add
in
pop
add
insl
xchg
or
add
out
scas
pop
sub
cld
test
outsl
xchg
jbe
inc
pushf
inc
out
and
stos
loope
dec
jecxz
xchg
fsts
pop
fidivrl
and
roll
outsb
inc
dec
outsb
psubusb
push
dec
in
sti
nop
test
jecxz
roll
sub
mov
jmp
pop
or
dec
dec
adcl
adc
sahf
or
pop
pop
out
and
orl
mov
sub
mov
dec
add
out
cli
add
lods
cmp
push
cmp
std
xchg
sbb
push
and
push
jle
mov
aas
das
test
hlt
jg
jle
fstenv
vmovapd
repnz
and
and
lods
sub
push
xor
or
adc
pop
push
mov
mov
mov
cmpsb
adc
mov
lahf
shlb
ja
mov
sbb
push
fstpt
outsb
sub
rcl
sahf
lahf
adc
pop
pop
jmp
aam
dec
imul
xchg
xchg
outsl
dec
incb
xor
movsb
or
ret
and
inc
mov
add
xchg
decl
dec
enter
and
out
aam
idivl
subb
pop
xchg
aaa
pop
inc
inc
int3
inc
pop
mov
je
push
out
push
popf
jmp
test
xchg
dec
add
fstps
cmp
mov
lahf
push
aam
sbb
mov
scas
xor
dec
popfw
addr16
mov
test
xor
hlt
es
adc
xchg
lahf
ja
rclb
mov
mov
xchg
push
dec
pop
and
leave
loope
ja
es
add
sbb
filds
and
rcrl
jle
idivl
add
and
inc
sbb
mov
lods
xchg
movsl
fwait
or
jecxz
pop
call
jbe
adc
lahf
and
rorl
xor
loop
xchg
mov
or
fcoms
pop
inc
lea
out
mov
ljmp
xchg
imul
shll
popa
mov
repz
rcll
cli
adc
mov
mov
push
gs
and
out
mov
lahf
and
add
lret
ficompl
adc
mov
jle
jne
xchg
outsb
das
add
fmul
ljmp
or
loop
out
call
and
ret
sbb
or
das
ret
fildl
jg
cs
fs
ret
cmp
out
push
or
sub
mov
mov
or
mov
ret
mov
stos
aam
push
jmp
mov
inc
inc
mov
ret
mov
or
stos
ficompl
aad
jne
dec
fisubrl
sub
outsb
in
xchg
aad
faddl
mov
test
rol
xchg
cmc
cmp
inc
cmpsb
jmp
dec
insl
xchg
xchg
das
out
sub
add
shrl
add
outsl
cmp
mov
or
js
ss
add
jg
shld
aaa
jp
mov
push
xchg
xchg
pop
jb
jge
mov
sbb
push
mov
xchg
and
fucomip
neg
adc
lea
fsubrp
outsl
push
mov
imul
push
mov
mov
addl
xchg
push
in
push
in
out
add
enter
daa
mov
fidivrl
arpl
and
mov
fwait
inc
pop
mov
dec
int
jns
push
addr16
push
test
hlt
ficoms
jno
mov
jge,pt
mov
test
mov
daa
cmp
xchg
fwait
sti
xorb
leave
fdivs
idivb
lock
loopne
dec
rcrl
push
pushf
add
cmc
rcrl
cmc
add
push
push
jnp
movsb
xchg
pmaddwd
subl
out
add
xchg
xchg
mov
daa
push
ss
push
icebp
sar
sub
lock
insb
lret
mov
fildl
stc
mov
pop
xchg
shlb
call
popf
arpl
xchg
mov
pop
jl
in
inc
pop
lods
inc
mov
bound
mov
stos
xchg
arpl
loope
rorb
inc
xor
lret
push
repnz
dec
and
subl
and
mov
lods
pop
fcoml
jo
xchg
lret
andb
lcall
es
mov
stc
rcll
lret
clc
adcl
or
jecxz
sbb
mov
loopne
pop
lds
scas
hlt
xorl
mov
js
cmp
cmpsb
or
or
aam
insb
ja
das
pop
movsb
loop
mov
cltd
in
inc
mov
iret
movsl
pop
adc
pop
jns
cmp
dec
scas
cmpsl
sbb
dec
or
xchg
add
xor
cmpl
sbb
add
fwait
pop
sti
test
mov
jg
jle
inc
and
sbb
push
mov
push
mov
and
call
sbb
push
sbb
inc
mov
or
in
xchg
dec
js
xchg
ret
mov
aaa
xchg
ror
cmpl
jno
lock
mov
mov
mull
mov
aas
and
loop
adc
pop
cmp
aaa
movb
shrl
sub
inc
push
adc
xor
insl
xchg
sub
pop
shll
or
orl
fimuls
lods
notl
jae
jmp
add
inc
inc
sub
push
fildl
mov
ret
mov
repz
mov
adc
aas
inc
loop
cmp
and
mov
add
fisubrl
stc
rcrb
mov
lret
push
push
mov
mov
mov
cmp
loopne
mov
pop
fxch
cmc
cmp
add
pop
dec
dec
and
fidivrs
lret
aam
insl
adc
pop
pop
jg
push
clc
sbbb
xchg
jno
adc
and
out
xchg
adc
push
sub
cld
add
je
push
pop
jb
fstpl
incl
outsb
xchg
lahf
or
sub
or
mov
ret
mov
jo
cmc
or
cmc
or
jecxz
daa
xor
out
inc
sbb
inc
jle
cmp
adc
ja
mov
mov
and
in
rcrb
mov
scas
add
xchg
test
xor
dec
sub
mov
cmp
test
jge
fidivrl
lahf
add
cmc
mov
dec
adc
lahf
push
xor
mov
mov
xor
or
mov
pop
pop
gs
fidivrl
inc
add
xor
sbb
movsb
or
into
enter
add
out
and
cmpsb
addl
lret
cmpsl
and
dec
sbb
mov
push
adc
stc
gs
mov
xchg
pop
sub
jle
push
dec
test
cmp
xchg
push
test
movsl
mov
icebp
or
movsb
xchg
test
or
inc
dec
push
jae
inc
push
mov
xor
adc
gs
jno
fwait
mov
pop
sbb
and
rcrl
stos
ds
push
imul
xchg
cli
and
pushf
adc
fwait
addr16
and
jnp
cwtl
xchg
and
mov
adc
les
dec
inc
scas
cwtl
inc
bound
push
ror
dec
pop
mov
out
gs
in
stos
aam
aaa
lds
xchg
jecxz
cmp
mov
dec
pop
jge
adcl
sbb
sub
jo
lods
repnz
xor
lods
das
mov
fs
das
lret
js
jno
xor
push
add
les
sbb
and
pop
pusha
xor
outsl
mov
sub
out
xor
in
push
mov
in
push
imul
lea
shl
mov
add
inc
inc
jne
mov
ret
inc
add
pop
sti
andl
xchg
out
mov
pushf
cmp
popa
jp
adc
orl
inc
aaa
idivb
jnp
pop
mov
mov
mov
mov
pop
xchg
add
or
clc
mov
mov
cld
dec
enter
dec
add
and
jae
jecxz
mov
les
or
push
mov
mov
call
mov
or
pop
sbb
stos
std
and
call
inc
test
add
movsl
repz
sbb
das
mov
adc
ret
cwtl
daa
jmp
dec
int
cmc
movsl
pop
sbb
mov
aad
add
das
call
setp
mov
dec
enter
fwait
jmp
add
cwtl
jl
jne
pop
imul
mov
arpl
popf
xchg
or
pop
int3
shrl
push
inc
clc
adc
xor
test
xchg
inc
cmp
mov
dec
ss
pop
push
shlb
aad
ficoms
pop
add
fdivl
gs
lock
push
cmp
ds
out
sahf
mov
rol
in
scas
jle
adc
xchg
aaa
ficompl
shlb
push
test
xlat
push
ret
mov
pusha
in
cld
xchg
jg
inc
pop
sti
pop
in
mov
mov
fmul
mov
xchg
cs
push
into
xchg
mov
push
les
lock
movsl
out
mov
icebp
mov
lds
stos
sbb
mov
xchg
or
jl
and
pushf
inc
pop
in
or
mov
nop
mov
scas
dec
xor
xchg
dec
and
adc
repz
push
xor
ret
hlt
negl
jnp
jge
sbb
cwtl
dec
cld
inc
iret
ret
icebp
stos
push
sbb
xchg
test
jb
xchg
cmp
jl
js
int
call
iret
pop
movsb
xchg
hlt
outsl
decb
jp
dec
adc
xchg
sbb
cli
movsb
cmpsb
inc
out
repz
inc
sub
cld
inc
cmp
test
arpl
sarl
jp
icebp
pop
cmp
mov
jg
mov
cmp
cmp
dec
jbe
idivl
bound
xchg
clc
in
fs
xorl
cmpsb
cwtl
add
dec
stos
or
dec
ss
push
test
ja
push
imulb
mov
ficomps
lock
mov
hlt
jecxz
sar
test
loope
sub
aaa
and
jne
cli
push
scas
outsb
fcomps
stc
or
xchg
mov
lret
inc
sub
cmpsb
sub
xor
jp
jp
push
imul
into
jl
pop
pop
addr16
arpl
cmpsb
xchg
mov
je
cli
pandn
dec
imul
sbb
push
pop
xor
mov
rorb
out
lret
pop
sbb
push
inc
xchg
xor
dec
lcall
stc
push
inc
cmp
popa
fsubl
mov
jne
fisttps
pushf
xchg
int
add
das
sahf
mov
out
jecxz
and
in
jb
or
test
cmpsb
loope
xor
cmp
lcall
or
sbb
lahf
leave
xchg
shl
and
and
ss
daa
or
xchg
inc
sbb
xor
fstp
xorl
movsl
test
sbb
int
cmp
adc
ds
xlat
sub
jmp
or
jecxz
mov
stos
sbb
test
sahf
pop
sub
adc
stos
out
out
cmc
xchg
jne
cmpsb
sahf
inc
je
jg
jmp
mov
xchg
repnz
int
jbe
loop
imul
test
cld
enter
gs
and
pushf
fdivrs
out
stos
jg
les
imul
mov
or
dec
push
icebp
insb
jl
lock
xchg
mov
adc
rcrb
add
out
or
pop
lods
test
or
iret
lock
hlt
or
jecxz
lds
ss
jmp
adc
jl
xchg
mov
cmpsb
xchg
dec
cmp
pop
test
and
mov
sbb
dec
je
gs
sarb
icebp
cmp
cmpsl
push
adc
out
xchg
pop
lods
dec
pushf
shrb
lahf
bound
mov
pop
jbe
mov
fistpl
add
push
push
test
dec
pop
sti
pop
and
jne
sub
cmpsl
xchg
ret
inc
sbb
or
pop
daa
dec
or
push
rclb
test
mov
pop
aad
mov
out
add
push
xor
adcb
icebp
ret
lods
pop
cmp
aas
aam
xchg
xchg
lcall
insl
mov
push
pop
sbb
or
pop
mov
sahf
bound
jbe
cs
xor
dec
incl
add
je
sub
fists
cld
add
sbb
hlt
mov
insb
mov
test
insl
bound
repnz
add
jo
call
test
xchg
dec
outsb
and
cmc
stos
movsl
movsb
ds
mov
call
add
ss
and
pushl
int3
lret
mov
rorb
push
lods
mov
jle
test
fwait
push
xorb
test
xor
adc
testb
jp
popa
nop
xlat
xchg
cwtl
add
adc
jo
cltd
xchg
lea
hlt
in
addr16
dec
adcb
subb
jle
aad
add
add
test
clc
adc
jl
popf
pop
ja
subb
out
or
les
pop
shlb
ja
enter
das
test
insb
inc
enter
push
out
sbbl
outsl
fucomi
pop
pop
fs
stos
scas
hlt
xchg
inc
dec
push
jge
gs
shr
add
pop
xchg
add
lret
out
mov
insb
loop
test
mov
popa
dec
adc
xchg
dec
cmp
or
lcall
stc
mov
jbe
mov
xchg
lret
jecxz
add
jmp
jbe
scas
int
pop
in
arpl
arpl
and
mov
ja
bound
loop
or
das
inc
dec
adc
pop
or
mov
mov
push
pop
scas
jo
sub
fimull
hlt
rcl
jecxz
mov
inc
fdivp
enter
pop
jg
cmp
lods
shll
fiadds
outsl
negl
ss
and
xchg
xor
add
cmp
xor
dec
test
std
sub
repz
xor
popf
mov
cld
addr16
cmp
and
daa
mov
push
cmp
mov
or
gs
cmc
jae
ret
xchg
jp
push
mov
daa
or
sti
mov
jle
fistl
enter
es
fldt
stc
xor
xor
jne
mov
xchg
test
sub
fdivs
in
inc
xchg
push
cmp
mov
lret
mov
dec
pop
subl
push
ret
test
dec
jns
lds
inc
mov
or
xchg
xchg
rolb
rcrb
push
xor
mov
sbb
sysret
daa
adc
cmc
sahf
fmuls
adc
xor
fs
jne
mov
mov
push
insb
xchg
shll
sbb
and
loop
sbb
sbb
mov
out
xchg
xchg
int
clc
mov
sbb
addr16
dec
pop
stos
fadds
push
mov
lds
push
out
cld
fldenv
aaa
cld
test
pop
test
xor
or
in
lret
pusha
mov
fdivp
mov
cmp
int3
xlat
cwtl
jne
ret
push
pop
mov
dec
mov
adc
and
inc
movsb
les
imul
inc
cs
mov
xchg
int3
mov
jne
lods
mov
mov
cmpsb
and
stc
insl
in
dec
add
int
jmp
add
lcall
test
bound
rclb
stc
and
out
int
mov
mov
dec
movl
int
adc
push
push
pop
mov
lret
xchg
mov
fs
mov
mov
xor
jecxz
imul
add
jp
pushf
mov
dec
sbb
data16
xor
scas
data16
sbb
inc
in
cmp
mov
addr16
mov
xor
jne
dec
inc
fisubs
pop
es
sbbl
mov
flds
cld
jo
pop
xchg
call
sbb
xor
in
push
dec
mov
dec
lret
scas
call
dec
mov
loop
ret
out
sbb
mov
or
aam
push
add
xchg
fsubr
jmp
mov
aaa
in
inc
mov
mov
and
repnz
mov
fdivrs
mov
push
dec
mov
or
mov
add
xor
scas
and
pop
mov
sti
repnz
cld
push
push
test
xor
es
cmpsl
int3
pop
mov
dec
imul
imulb
ja
lret
adc
inc
sub
mov
add
mov
mov
cmpsb
ljmp
jle
lcall
add
and
cmp
mov
addb
frstor
jp
sub
adc
jmp
fnstenv
mov
sbbl
mov
cmp
int
je
add
jg
iret
mov
cwtl
stos
mov
sbb
and
push
into
mov
jns
cmp
inc
lods
fidivrs
pop
xchg
fstp
mov
jecxz
sub
xchg
lret
sbb
sbb
mov
cmc
pusha
out
popa
push
insl
cmp
loope
xor
mov
jge
or
jo
cltd
xlat
xchg
mov
pop
std
stos
in
or
lcall
imul
cmp
sahf
sub
sbb
inc
ja
in
mov
fwait
rcll
dec
fistpll
test
push
fcmovu
fildll
test
sub
stos
subb
add
imul
or
popf
sbb
stos
push
movsb
mov
ljmp
mov
xchg
push
imul
push
jl
aam
jno
xor
imul
mov
loop
in
lods
mov
aas
jb
aaa
sub
imul
lcall
je
cmc
pop
les
gs
cmpsl
outsl
out
and
dec
out
and
sbb
xlat
push
aam
les
jmp
orb
xchg
outsb
xchg
dec
mov
push
push
inc
xchg
xchg
cmp
push
mov
xchg
jb
adcb
jns
lcall
pop
or
jmp
gs
in
not
scas
divl
outsb
repnz
push
adc
aam
push
stos
mull
insl
or
pop
dec
in
clc
pop
cmc
sub
cmc
mov
fwait
pop
push
mov
add
ljmp
sbb
movsb
pop
dec
fildll
lods
add
scas
jno
inc
ret
inc
pop
jge
mov
jl
xchg
xlat
lods
mov
sbb
inc
push
inc
pcmpeqd
sbb
add
inc
andl
or
mov
jle
insb
or
cmp
xchg
xchg
stos
pop
test
jmp
out
pushf
pushl
cmp
andl
loopne
or
outsb
push
sub
mov
arpl
fcoml
jns
fldenv
mov
push
movsl
stc
cltd
mov
imul
enter
inc
jo
sti
xchg
push
pop
mov
cld
loop
xchg
aas
mov
mov
mov
rcrb
cmp
out
out
push
mov
mov
jo
nop
movsl
mov
and
push
add
jge
xchg
inc
add
jbe
call
mov
mov
adc
push
rolb
sub
sarl
fstpl
movsl
jle
out
cli
enter
or
ds
ds
jnp
push
mov
fldcw
xchg
into
idivb
jge
out
pop
sbb
mov
xchg
mov
mov
iret
and
mov
scas
rorb
imul
xor
push
loopne
jae
divb
lret
push
clc
push
inc
sub
push
shrb
fstpt
dec
xchg
or
ret
outsl
lds
hlt
enter
jno
and
push
lods
add
sti
push
sub
leave
cmpsl
sbb
repz
in
cli
fisttps
xchg
xor
bound
fadds
scas
mov
clc
mov
lods
pop
xor
popa
inc
xchg
xor
cmp
mov
outsb
and
jbe
shl
xchg
mov
mov
bnd
dec
sbb
mov
dec
sbb
dec
xchg
mov
in
inc
push
mov
lahf
fisubs
lcall
insl
dec
lock
xor
mov
insl
xor
add
cmp
cmp
imul
int3
jecxz
inc
pop
lea
pop
dec
cmp
and
inc
push
or
push
mov
out
add
and
adc
imull
enter
xor
jmp
xchg
xchg
pop
xor
xchg
jecxz
push
and
popf
addb
adc
rcl
xor
push
cmpsl
popa
idivb
hlt
rclb
push
push
xchg
cmpsb
jns
in
subb
xchg
fildl
bound
mov
ds
xor
sub
cmp
out
int
or
in
pop
cmpb
shll
pop
xor
adc
fwait
lahf
and
push
pop
pop
push
mov
adc
add
jno
dec
fistpll
imul
jb
cmc
push
in
in
pushf
xor
data16
fnstcw
push
mov
push
outsl
cmp
iret
loop
lods
cmp
addr16
arpl
in
inc
daa
mull
push
lea
mov
xor
xchg
sub
ljmp
test
bound
inc
inc
mov
lret
xchg
loope
inc
add
mov
pop
pop
popa
mov
mov
inc
roll
inc
xchg
or
fdivrl
imul
out
mov
inc
or
adc
inc
inc
jecxz
fcmovnbe
sbb
out
jne
inc
mov
jae
jns
and
adc
adc
push
test
or
iret
sub
sti
pop
push
jb
aaa
inc
loopne
insl
sub
push
dec
inc
aaa
imul
lods
shrb
mov
or
int3
lds
dec
mov
hlt
insl
dec
dec
or
sahf
push
and
and
gs
clc
aam
or
outsl
mov
cld
jae
mov
and
adc
out
sbb
pop
mov
loopne
pop
xchg
repnz
push
mov
movntps
sub
push
mov
fidivrl
adc
dec
call
pop
push
jnp
mov
cmp
sbb
adc
adc
adc
pop
xchg
inc
rolb
sarl
jp
test
aad
push
cs
lods
jg
push
mov
xor
add
pop
lret
jp
mov
push
sub
xchg
add
js
rorb
push
jno
dec
or
lods
inc
cmp
scas
das
dec
adc
std
jle
leave
sbb
sbb
or
scas
out
out
loop
cmp
cld
xchg
subl
scas
shl
jb
sub
popf
jl
pop
cmp
mov
mov
jmp
fdivrs
fstpl
push
xor
insb
leave
fwait
std
add
xchg
xchg
and
outsb
push
bound
int
rcll
add
add
mov
push
add
movsb
div
cmp
das
sub
mov
daa
xchg
fcmovnu
popf
jae
push
cmp
loopne
aas
ljmp
push
filds
inc
fucomp
xchg
gs
dec
imull
bound
inc
loop
pop
pop
jle
fsubr
inc
aad
jae
iret
dec
je
jg
iret
jle
je
cmp
repnz
sbb
mov
es
sbb
push
and
cmp
arpl
and
les
and
inc
pop
movl
movsl
sub
fwait
pop
push
mov
roll
adc
push
arpl
jmp
inc
push
xor
dec
cltd
sub
cmp
inc
int3
fmulp
mov
and
insb
jbe
xchg
jg
mov
sahf
sub
pop
pushl
stc
testl
pushf
pusha
and
dec
data16
shlb
int3
in
jecxz
cmp
inc
jp
mov
add
test
jg
pop
mov
adc
test
xchg
or
jg
xchg
mov
ror
fldcw
dec
lret
xlat
pushf
mov
sbb
cmp
dec
es
aam
hlt
in
daa
fsts
es
int3
xor
xchg
hlt
imul
or
xchg
jno
inc
or
in
mov
dec
ljmp
out
iret
push
push
lea
bound
into
fnsave
mov
daa
jns
rorl
and
lock
dec
outsl
fcoml
jo
arpl
repnz
clc
aas
movsl
and
fsubrl
outsl
xorb
cmpb
cltd
adc
jg
xlat
jmp
jbe
arpl
loopne
mov
mov
outsl
jmp
mulb
mov
lea
add
jge
add
add
subl
jne
in
pop
bound
add
stc
cmp
movsb
xlat
cmpl
sahf
cmpsb
out
fwait
rcrl
mov
adc
scas
mov
xor
pushf
mov
xchg
or
xchg
adc
cmc
neg
bound
inc
lahf
pop
cmpsb
add
push
loop
repz
and
add
nop
outsl
imulb
in
loop
xchg
inc
sbb
xchg
jmp
jns
out
xor
bound
jge
std
scas
pop
lds
sahf
add
outsb
scas
or
mov
sub
aad
cmp
cmp
movsb
je
lcall
mov
loope
mov
xchg
cmc
mov
adc
fsubl
cs
insb
adc
xchg
leave
sub
mov
ss
movsb
in
lahf
xchg
push
adc
push
adc
pop
hlt
lea
jnp
sbb
popa
fsubrl
gs
mov
push
out
pop
out
pop
jg
or
and
lds
notb
pusha
xchg
stos
dec
inc
adc
push
jle
push
push
fbstp
stc
push
sbb
mov
and
mov
mov
in
jmp
xor
push
sbb
arpl
popf
mov
jae
popl
rcr
in
push
fists
push
clc
int
inc
add
shll
or
lock
or
dec
xchg
and
dec
ror
test
inc
leave
dec
in
push
loop
das
sbb
cmp
rcll
ds
or
test
shll
loope
repnz
js
cmpsl
out
insb
cwtl
and
or
xchg
mov
add
lea
adc
add
mov
mov
iret
jb
loopne
and
xor
hlt
xor
fdivr
jnp
ss
mov
adc
mov
adc
and
imul
add
sbb
ror
jg
in
push
mov
aam
jle
jmp
push
push
xor
xchg
cld
mov
lret
hlt
in
mov
sbb
xchg
stos
fnstenv
rcr
xlat
mov
in
mov
xor
leave
add
fisttpll
lret
adc
mov
add
mov
sub
bound
adc
inc
pop
loopne
fsubrl
mov
mov
dec
repz
jno
daa
pop
rcl
into
mov
xor
aad
push
and
pop
in
rolb
jbe
add
clc
jmp
xchg
mov
movsb
adc
add
addb
mov
test
jp
cmp
xor
and
stos
jmp
subb
mov
in
xchg
jno
push
push
imul
sbb
and
cmp
test
xchg
out
daa
xchg
in
arpl
test
xor
or
scas
scas
pusha
push
jb
out
pop
je
cmpsl
imull
jne
lret
cwtl
int
movb
out
inc
jae
shl
add
inc
sub
push
jmp
xor
push
fnstsw
rol
lods
and
pop
cmp
xor
mov
std
xchg
and
xor
pop
mov
adc
mov
jne
gs
adc
ds
push
fwait
clc
push
inc
das
cmp
mov
aas
jle
inc
cmp
aam
sbb
es
lret
adc
out
in
xor
outsb
not
mov
js
mov
pop
sbb
cmp
xchg
popf
adc
mov
in
pop
add
sub
scas
ss
arpl
adc
insl
xchg
add
xchg
in
mov
stos
mov
mov
xchg
adc
xchg
lock
and
pop
sahf
pop
lret
test
pop
xchg
mov
cmpsb
int3
fstpt
dec
cmc
into
outsb
fbld
jge
or
inc
std
and
je
jl
sub
lods
out
add
sti
imul
aam
in
or
imul
push
loop
loop
test
loop
lret
push
jmp
stc
lahf
insl
push
push
adc
xlat
pop
mov
mov
inc
scas
pop
gs
jns
sbb
je
xchg
enter
mov
ret
lds
mov
adc
push
out
push
rorb
fs
jp
popa
pop
jecxz
push
movsb
mov
insl
jmp
stc
fs
adc
jmp
sbbb
daa
add
add
shll
xchg
lahf
idivl
movl
jp
dec
mov
jne
inc
adc
scas
inc
xlat
loopne
inc
sbb
add
cmp
xor
add
sub
sbb
mov
jmp
jo
addr16
shr
stos
xchg
imul
neg
push
push
sub
test
sti
loop
and
sti
mov
mov
mov
push
dec
loopne
xor
shrl
jecxz
lret
sti
inc
loope
dec
out
jb
mov
ss
xorb
add
and
and
jle
push
pop
les
mov
cmp
mov
in
and
push
icebp
negl
pop
fs
inc
sti
lods
dec
sbb
popa
and
es
add
xchg
mov
mov
add
aaa
cltd
fldt
outsb
fistps
adc
jmp
popf
loopne
xchg
notb
ss
jg
xchg
cmc
dec
jb
mov
pop
fdivs
fidivs
loop
dec
pop
sub
mov
sub
scas
fidivrs
arpl
sbb
loope
es
dec
test
test
push
rcl
push
xchg
ja
and
fisttps
repnz
cmp
rcll
test
cmp
pop
push
jno
xchg
adc
popf
rolb
cmp
mov
inc
xchg
sub
pop
fcoml
mov
test
push
mov
mull
fidivrl
int
mov
das
pop
xor
push
daa
out
dec
into
xor
scas
mov
and
sub
xchg
pop
xchg
sarl
jle
sahf
sub
or
imul
xchg
cmp
adc
xor
lret
pop
cmp
push
aad
mov
or
out
loopne
adc
cmp
es
hlt
xchg
stos
mov
fisubl
pop
and
and
test
subl
loop
cld
fisubl
sbb
js
fcomps
inc
data16
push
add
sub
push
test
aam
mov
pop
or
push
and
or
jge
div
int
in
lret
or
stos
lds
in
negb
mov
imul
sbb
adc
into
sbb
pop
mov
and
xor
push
test
dec
xchg
xor
jmp
movsb
add
sbb
push
jb
pop
inc
jg
daa
mov
jmp
sub
cmp
pop
mov
vshufps
push
iret
stos
sbb
ret
jg
lahf
xor
faddl
xchg
je
cmp
mov
jb
bound
cmp
and
sbb
test
jmp
ficoms
xor
add
jmp
jae
dec
insb
pop
push
add
aas
and
sahf
movsl
jno
xor
xlat
loopne
jns
mov
xchg
out
es
pop
adc
push
or
loope
mov
cmpb
push
or
xor
notl
mov
ljmp
aaa
jbe
dec
push
lods
cmp
push
dec
fwait
add
fcoml
push
loope
dec
imul
fcmove
inc
sbb
fsubrs
xchg
mov
aaa
adc
hlt
int3
scas
loope
pop
and
das
xchg
test
jae
enter
push
filds
dec
pop
mov
jo
jbe
xchg
fiadds
adc
cmp
scas
int3
mov
push
aas
test
shll
dec
mov
xor
in
enter
sbb
mov
push
inc
sub
pop
repz
jmp
mov
fs
int
pop
and
lret
add
sbb
xchg
aad
loopne
and
push
hlt
sub
dec
push
sbb
xor
push
sbb
cmp
outsl
ja
jo
push
ljmp
sbb
xchg
cld
movd
sbb
pop
jae
dec
xor
mov
jo
in
mov
mov
mov
push
add
mov
cmp
add
fidivs
push
pusha
mov
cltd
mov
pop
loopne
mov
and
aam
ljmp
cmp
mov
cmpsl
or
adc
push
mov
loopne
mov
pop
sbb
mul
bnd
insb
jle
add
in
pop
sub
and
jl
dec
dec
clc
in
sbb
pop
cmp
xchg
ret
push
int3
test
stos
mov
mov
dec
inc
andb
mov
and
or
xor
cs
repnz
rcrb
xchg
sbb
mov
lods
ror
add
loop
das
or
sahf
stos
loope
pusha
loopne
pop
jge
arpl
xor
pop
sti
push
push
dec
push
pushl
subb
jb
shll
ss
dec
cmp
pop
call
sahf
outsl
out
xchg
xchg
sub
les
push
hlt
ret
addl
lds
ret
lods
mov
jmp
cld
aas
jl
sbb
cmp
push
pop
cmc
hlt
les
cmc
or
sar
pop
or
stos
push
push
loop
and
lcall
add
add
inc
mov
ds
jle
pop
outsb
adc
lods
loopne
mov
insb
xchg
fs
and
cs
push
pop
sub
ret
into
in
mov
inc
mov
shrl
jno
pop
stos
pop
shll
pop
shrb
mov
lods
out
sub
jae
xor
out
jge
frstor
sti
sbb
pop
sub
mov
sbb
sti
xchg
cmp
addr16
jbe
cmp
mov
out
jecxz
loope
insb
pusha
add
gs
sbb
cmp
push
es
inc
adc
and
out
sar
mov
inc
out
insb
in
xchg
adc
in
stc
or
or
aad
lds
mov
mov
in
mov
pop
pushf
and
negb
fsubrs
mov
and
or
jg
enter
fsubrl
sbb
movb
dec
pop
bound
js
test
mov
mov
push
dec
pop
shl
mov
shufps
fcmovnu
xchg
inc
inc
ret
fxch
daa
mov
and
popa
sub
xorl
or
xchg
jmp
out
add
pushl
shr
jne
ret
or
sbb
mov
fcompp
mov
negl
aas
nop
mov
dec
mov
in
repz
adc
sub
shll
inc
and
iret
xchg
sub
jp
mov
mov
sub
xchg
ret
fdivs
loopne
lahf
cmc
adc
add
jge
add
mov
in
dec
push
pop
lods
mov
test
sub
jae
ja
cmp
and
jg
push
fwait
test
fs
daa
repz
mov
cwtl
lcall
inc
jnp
mov
xchg
mov
arpl
roll
mov
lret
pop
add
jb
add
sub
out
xor
shrl
popa
pusha
repz
mov
insl
fsubl
push
addl
and
cmp
stc
inc
loope
popf
xor
mov
mov
outsb
mov
movl
pusha
enter
sbb
inc
sub
in
jne
jmp
lods
mov
insl
dec
push
or
adc
imul
dec
sbb
push
test
pop
cmp
dec
xor
jg
push
test
ja
imul
push
hlt
test
lcall
and
test
xchg
insl
dec
cwtl
fstl
jg
adc
mov
mov
out
xor
cmp
and
movsb
adc
pop
mov
add
xchg
mov
jg
cld
push
arpl
adc
jmp
in
pop
mov
arpl
adcl
pop
jno
inc
sub
loopne
icebp
xor
jo,pt
pop
mov
popl
es
jnp
mov
ljmp
bound
aas
and
xchg
cs
leave
fdivrp
mov
push
loop
mov
jno
mov
push
dec
add
sub
inc
inc
into
jae
jecxz
in
test
mov
jo
enter
aad
ljmp
shll
lods
or
imul
or
roll
xchg
lds
adc
add
inc
mov
loopne
fcmovbe
jg
lods
inc
std
leave
fs
es
scas
add
jbe
jns
out
sahf
mov
add
or
out
push
xor
daa
pop
int
or
cltd
push
test
adc
add
lea
add
add
adc
movsl
ret
aas
adcl
imul
mov
push
f2xm1
fcomps
bound
mov
pop
loope
mov
cmp
rolb
fs
mov
or
mov
fnsave
xchg
sub
jb
xor
dec
loopne
adc
sbbl
dec
shrl
rol
outsl
ror
out
mov
xchg
ljmp
ffreep
or
pop
repnz
mov
hlt
mov
sbb
repnz
xor
flds
into
inc
enter
add
inc
jbe
in
mov
push
pop
in
add
lahf
lcall
xchg
inc
insl
lahf
call
cmc
sub
outsb
adc
into
dec
and
push
inc
lds
aam
icebp
sbb
mov
add
repz
outsb
jge
mov
fadds
lock
int3
adc
call
adc
rcrb
div
rcr
lahf
sti
pop
adc
shlb
movsb
movsl
jg
push
scas
inc
lahf
xor
out
jecxz
push
sbb
int
add
jp
xchg
leave
sbb
addr16
loope
fmull
cmp
cmp
dec
pop
dec
adc
loope
int
pop
mov
std
out
lret
in
hlt
add
inc
repnz
mov
rcrl
xchg
xchg
sbb
pop
mov
in
mov
mov
lret
sub
outsl
mov
pop
push
sbb
pop
push
and
push
pop
pusha
notb
push
mov
xchg
test
ja
ds
lock
cwtl
in
out
cmp
or
xchg
stos
jae
mov
mov
pop
fwait
in
xorl
cwtl
jae
jnp
cmc
scas
scas
psubsw
sbb
dec
and
test
mov
inc
and
lcall
out
lret
or
pop
xor
fs
repnz
cmp
out
mov
push
bound
pop
stos
inc
or
subl
xor
idivl
clc
and
ret
jp
push
push
icebp
ret
mov
fs
dec
sbb
loop
aad
es
fisubrs
jbe
shlb
in
or
ja
popf
mov
inc
out
or
add
push
int
adc
dec
movsl
jbe
enter
cmp
pop
test
inc
loop
push
adc
add
int3
push
mov
mov
push
xchg
mov
sbb
loope
sub
pop
iret
mov
add
fnsave
loop
lock
cmpsl
push
hlt
mov
pop
shll
stos
lahf
std
jmp
push
mov
das
int3
aad
test
and
inc
jge
sbb
sar
xchg
dec
es
lret
sar
pop
push
xchg
xchg
cmpsl
sbb
dec
mov
les
sub
mov
int
outsb
ret
inc
inc
sbb
mov
sbb
add
leave
adc
and
repz
popa
imul
xor
int
inc
jnp
rolb
mov
ficoml
sbb
nop
fisttpll
adc
neg
fsubr
call
sbb
jae
push
cmp
mov
mov
test
iret
xor
les
arpl
fdivrl
inc
and
repz
inc
in
mov
imul
push
sub
hlt
inc
insb
push
dec
out
leave
fmull
fdivl
in
push
and
push
mov
sub
cmp
fwait
stos
ljmp
push
mov
jb
aam
enter
outsb
pop
sbb
or
pushf
adc
xchg
lret
xor
pop
pop
leave
dec
sbb
pop
xor
daa
gs
xor
dec
aaa
outsb
ss
lea
int
cmp
in
or
pop
dec
gs
jg
decb
pushf
je
push
ljmp
push
sub
mov
and
xor
imul
addl
out
les
imul
push
mov
sbb
inc
ror
sub
pop
jle
fmul
movsl
inc
add
fst
sbb
mov
fbld
adc
push
mov
pop
mov
push
push
data16
pop
sti
repz
add
data16
pushf
gs
mov
leave
inc
lods
mov
jne,pn
mov
js
pop
lahf
or
pop
push
mov
adc
mov
jmp
or
xchg
mov
xchg
fdivrl
add
xchg
rdpmc
nop
iret
aaa
or
jecxz
push
push
les
movsl
xchg
adc
cmpsl
fbld
mov
mov
mov
push
out
test
insl
mov
mov
jp
lcall
xor
dec
and
inc
in
sub
jb
and
shrb
into
stc
rorl
aad
pop
ds
adc
xchg
jne
mov
and
lret
push
pop
and
loop
ss
sti
adc
inc
sub
xor
fldcw
xor
addr16
mov
popa
lret
cmc
inc
ret
dec
loopne
push
loopne
test
es
inc
mov
cmp
inc
jbe
std
shr
dec
or
mov
es
iret
sub
cmpsb
movsl
or
cmc
sbbl
leave
lahf
inc
or
pop
mov
lea
push
inc
push
fsubrl
cltd
pop
cs
xor
sahf
lret
add
insb
jmp
nop
cmpsb
movsl
pop
cmpb
or
stos
inc
mov
scas
mov
sub
lcall
mov
stos
pop
mov
xchg
mov
xor
pusha
in
xor
hlt
lods
dec
test
jp
ds
cmpsb
fstl
loopne
cmp
rcr
repnz
addr16
push
incb
outsb
mov
fdiv
data16
add
stos
mov
scas
xchg
xor
adc
enter
jg
push
test
sar
add
mov
push
pusha
jne
enter
stc
push
clc
in
fiadds
repz
cmp
testl
adc
out
dec
push
sbb
mov
sbb
inc
popa
mov
es
ss
lret
mov
push
sub
jl
icebp
pop
mov
sbb
adc
je
out
adc
cmp
das
mov
xor
les
jne
dec
pop
fucomip
and
mov
mov
test
ret
aam
cltd
shll
and
pop
out
push
mov
jecxz
and
sub
pop
xor
or
mov
mov
push
into
xchg
jns
pop
cmp
int
dec
fists
cmp
sbb
aas
add
xchg
fmul
dec
mov
push
enter
leave
jle
push
lea
iret
popa
jb
jnp
in
movsb
cmp
add
add
sub
imul
movsb
xchg
xlat
fsubrl
cmp
es
dec
popa
incb
aaa
pop
pusha
mov
leave
add
mov
clc
ret
stc
push
sahf
movsl
xor
lods
xchg
mov
jns
xor
xchg
sti
inc
dec
sub
ss
out
cmp
callw
dec
lar
test
add
pop
push
popa
xchg
mov
out
mov
daa
fdivl
push
cmpsb
sti
loope
rclb
pop
mov
mov
ret
inc
add
mov
out
pop
add
and
inc
cmp
mov
fstpl
mov
addr16
shll
loop
cmp
mov
and
xchg
cmp
jb
add
sbb
clc
fsub
add
pop
fnsave
int3
and
movsb
inc
adcl
cmpsl
ljmp
xchg
stos
mov
mov
mov
jo
dec
outsl
inc
dec
inc
arpl
lea
mov
sub
pop
fidivrs
mov
mov
in
out
add
je
push
xor
push
mov
stos
shll
popa
xchg
lock
inc
sarl
in
fxch
bound
in
mov
cwtd
sti
mov
dec
icebp
test
out
repnz
ret
ret
in
stos
sahf
dec
pop
bound
daa
add
jno
stos
push
xchg
mov
fs
call
out
mov
dec
loopne
inc
dec
cmpsl
pop
pop
push
jo
rclb
dec
sbb
mov
fs
dec
mov
push
dec
in
pop
lods
dec
mov
leave
dec
mov
rcrl
sbb
roll
sahf
sub
mov
mov
lret
and
cmp
popf
cld
jmp
lock
lahf
mov
push
mov
or
in
shll
pop
icebp
or
mov
fwait
push
mov
xchg
xchg
mov
dec
fwait
mov
arpl
inc
fdivp
ret
mov
jno
pop
clc
lcall
mov
add
es
jbe
sub
xchg
sbb
das
cmp
out
pop
add
insb
mov
pop
shr
aam
shll
insl
pusha
fnstsw
adc
js
push
ljmp
mov
mov
ds
insb
outsb
sbb
repz
scas
sti
iret
cmp
mov
lds
in
js
lret
mul
adc
push
loope
jge
push
xchg
fs
pop
testb
insb
push
loop
pop
push
add
mov
ret
jge
add
adc
clc
ret
xchg
jp
cs
jecxz
pop
mov
inc
jg
lahf
dec
call
divb
sub
pushf
and
pushf
pop
fidivrl
ja
and
mov
out
mov
push
or
aad
lock
cmpsl
xor
mov
add
jae
add
mov
sbb
mov
dec
sub
mov
mov
mov
outsb
das
ds
dec
inc
cwtl
and
rcrb
out
add
mov
xchg
mov
jmp
in
xchg
test
mov
inc
pop
and
jecxz
int
fcoms
sub
cmp
or
mov
aad
fnsave
pop
cwtl
adc
das
jl
dec
mov
or
into
xchg
dec
nop
scas
and
pop
cmpsl
xchg
pop
mov
pop
mov
fs
inc
xchg
lahf
lods
mov
jb
pop
inc
into
xorb
incb
mov
movsl
rcr
gs
insb
ljmp
das
inc
xlat
ja
loope
mov
dec
inc
into
pop
add
inc
pop
or
sti
jns
mov
mov
inc
lods
jmp
push
add
sbb
add
pusha
mov
mov
mov
inc
adc
cli
adc
ja
dec
iret
jg
outsl
xlat
addl
dec
sbb
cmp
test
or
repnz
je
and
scas
out
cwtl
lret
cmpsl
pop
aam
lret
jecxz
mov
lret
gs
adc
in
mov
icebp
mov
std
jne
movsl
scas
mov
ds
add
jg
jb
fldt
in
mov
test
sbb
movsb
mov
jg
or
cmp
jg
std
and
call
inc
dec
xor
mov
sbb
movsb
xchg
rcll
fisttpl
xor
fisubrs
push
mov
jne
and
xor
jge
mov
daa
mov
mov
pop
xchg
mov
es
lods
or
xchg
nop
inc
out
scas
mov
in
mov
dec
jns
inc
mov
fs
in
cmc
rorb
jp
mov
and
mov
out
idivl
xchg
xchg
fidivrs
ljmp
sbb
call
fiaddl
lods
mov
aaa
jmp
ss
out
dec
mov
push
mov
pushf
and
in
mov
outsb
call
cs
pop
mov
push
lods
nop
and
movsb
or
out
pop
addr16
test
push
pop
fs
rorb
push
js
cmp
test
ficomps
hlt
pushf
dec
js
pop
mov
loop
dec
jmp
add
or
jecxz
sahf
xor
scas
mov
xchg
into
test
and
clc
out
xor
mov
mov
pop
sahf
push
testl
mov
inc
mov
loopne
mov
push
mov
sbb
punpcklwd
andb
imul
ljmp
mov
and
xor
pushf
out
pop
xchg
pop
and
in
out
cmp
dec
sbb
jae
cwtl
jnp
jnp
sub
cli
mov
int
and
negb
outsl
fisubrs
adc
loope
mov
fcoml
cmpl
ret
js
call
aad
and
sbb
sub
inc
ret
hlt
add
out
and
xchg
or
mov
outsb
lods
push
aas
idivb
daa
out
mov
pushl
and
adc
shrl
ds
sub
outsl
add
adc
andb
nop
sbb
lods
repz
cmp
mov
imul
mov
dec
xchg
dec
outsb
mov
loop
mov
jnp
push
roll
mov
and
jne
mov
popa
mov
fwait
mov
out
cwtl
rcrb
mov
xorb
in
cmp
mov
mov
les
push
stos
xor
inc
iret
dec
les
mov
rclb
add
xor
cmp
lcall
jnp
or
sub
loopne
enter
mov
jns
add
mov
jp
jnp
ret
sbb
shlb
loop
adc
in
out
shrb
sti
add
stc
cmp
rcrl
inc
mull
int
lret
mov
lcall
xchg
aaa
xchg
les
mov
aad
nop
imul
dec
and
mov
nop
fistpl
and
inc
stc
pop
sbb
jno
jnp
ficoml
xlat
mov
mov
xchg
sahf
sbb
pop
mov
rcl
pop
js
lea
cmpsb
push
xor
arpl
mov
int
data16
xorl
les
jl
hlt
xchg
lock
inc
pop
lret
sbb
push
in
jo
pop
or
rcll
pop
mov
xlat
xchg
jmp
pop
fiadds
cs
pop
shr
popf
dec
and
es
ljmp
adc
ret
and
mov
jp
mov
pop
fstps
rorb
sbb
xor
inc
jb
mov
inc
pop
pushl
lods
repnz
dec
sbbb
shll
cmpsl
in
outsl
or
dec
xchg
fcomps
enter
stos
ds
andps
pop
es
cmp
cmp
cmp
lds
outsl
imul
xor
dec
mov
int
pushl
mov
das
cmp
test
jmp
loope
imul
mov
loop
test
loopne
movsl
inc
loopne
jmp
in
or
aad
cmp
and
ljmp
rorl
jp
mov
sahf
lods
mov
aas
hlt
in
and
mov
outsl
pop
rcll
cmpsl
ficomps
cmp
fimull
lds
add
pusha
sub
or
sbb
inc
jo
aaa
repnz
ljmp
sub
jl
xor
sbb
and
int3
jae
jge
fstpt
xchg
sub
data16
pop
push
sar
dec
push
stc
xor
add
mov
pop
jo
mov
and
out
test
cwtl
xorb
mov
jg
xor
data16
lret
movsb
jl
prefetchw
or
cmp
stos
or
in
cmpsl
sbb
repnz
and
or
addb
pop
enter
nop
ja
jnp
fs
dec
jns
ret
enter
and
ret
rcl
add
ja
sbb
inc
out
dec
jnp
jo
pushf
push
outsb
scas
sub
sbb
xlat
fistpl
push
push
ret
xor
dec
sahf
out
sahf
outsb
pop
daa
push
jnp
movnti
jnp
sarb
imul
test
outsl
and
pop
sub
shl
mov
subl
xchg
je
aad
sbb
hlt
inc
and
loopne
stc
cmpsl
mov
pop
pop
mov
mov
mov
aad
stc
fstps
fstpl
pushl
mov
lahf
jb
mov
sbb
adcl
xchg
fidivrl
mov
pop
hlt
dec
mov
ret
enter
lods
sub
sbb
arpl
enter
mov
leave
pusha
fincstp
inc
iret
push
stos
xchg
xor
adc
inc
into
fistpl
inc
cld
inc
pop
inc
es
imul
insb
insl
mov
sbb
ja
imul
ss
jae,pt
cmpsb
scas
jno
arpl
mov
out
mov
iret
js
jbe
int3
pushf
mov
mov
push
inc
aas
test
test
fwait
hlt
push
jge
mov
sub
jmp
jo
jge
jge
test
sti
mov
lds
fistpl
lods
subl
scas
fsubrl
pop
cwtl
xchg
ret
inc
ja
adc
movsb
cwtl
mov
mov
lea
stc
adc
enter
jg
adc
das
push
out
xor
xor
lret
repz
in
in
pop
mov
adc
jae
cmc
push
pop
sbb
lock
push
mov
dec
ljmp
fdivrl
aas
sbb
pop
fildll
cmp
push
fbld
fs
pushl
test
adc
ss
push
xor
popf
ss
jno
rorl
pop
cmp
mov
stc
scas
push
push
and
in
push
inc
in
adc
push
mov
repnz
pusha
cli
sub
imul
cmp
loope
ret
push
xchg
adc
outsl
or
pop
aaa
jmp
jl
push
mov
ljmp
push
xlat
or
test
pop
mov
rcrl
adc
push
pushf
xchg
mov
cmp
xchg
lea
pop
dec
mov
dec
mov
lret
and
je
sub
iret
pop
call
int
sbb
cmc
popf
notb
xchg
stos
das
push
in
in
adc
lahf
cld
bound
fisubrs
inc
jbe
jl
add
gs
ja
scas
in
jg
sahf
push
mov
pop
negb
mov
outsb
movsl
imul
fwait
pushf
sbb
nop
fldcw
mov
int3
in
push
jbe
push
mov
ret
ret
mov
rcrb
pusha
out
into
fsubs
fmul
cld
cs
mov
jo
cltd
frstor
add
imul
stc
pop
js
dec
clc
cmc
dec
push
inc
in
or
inc
xlat
xchg
int3
lcall
mov
ret
inc
cwtl
sbb
ja
or
icebp
vpaddd
jnp
adc
ljmp
lods
and
lock
mov
imul
dec
pop
fldenv
std
test
fsts
mov
gs
shlb
inc
mov
mov
mov
insl
sbb
stc
mov
mov
push
jne
scas
pop
mov
sub
nop
sbb
mov
jmp
adc
out
and
testb
sub
push
jbe
push
sahf
ljmp
rcrw
ret
dec
sub
scas
lock
xadd
sub
adc
add
sub
dec
hlt
lock
test
cmp
insb
ljmp
mov
pushf
popa
or
jecxz
push
scas
enter
in
jo
xor
jno
mov
loop
mov
out
jns
dec
push
jmp
or
mov
dec
push
sub
mov
add
jg
lods
repnz
enter
or
push
aam
fwait
lret
test
mov
mov
push
pop
mov
arpl
cmp
jge
lret
lret
add
sub
test
mov
mov
or
xor
addr16
adc
je
stos
xchg
sbb
bound
ret
std
add
out
inc
push
mov
int3
aas
mov
pop
mov
push
pop
rol
ret
add
aaa
ds
dec
icebp
mov
arpl
add
push
jle
mov
sahf
inc
sbb
lret
in
add
gs
ds
aaa
icebp
repnz
test
loop
cmpsl
scas
pop
mov
sub
push
sti
imul
pop
pop
jmp
lcall
rcrb
bound
dec
sub
and
cwtl
push
mov
outsl
dec
mov
scas
scas
push
bound
cli
aaa
xchg
idivl
popf
lea
data16
leave
pushf
sar
sbbb
xchg
push
out
sub
sub
mov
aaa
fldenv
lods
push
mov
jbe
add
faddp
or
sbb
es
enter
gs
mov
dec
cltd
xchg
cmp
cmp
lcall
mov
loope
sbb
fnstenv
test
adc
sbb
xor
shrb
mov
xor
dec
mov
xchg
fsubs
mov
stc
sarl
pop
aad
call
rcrb
pop
mov
xlat
mov
adc
sbb
adc
xor
addl
or
dec
cli
rcll
add
jne
xor
or
or
jge
xchg
pushf
or
fildl
jns
xchg
lock
loop
jb
loop
inc
in
push
xchg
xor
call
into
adc
inc
or
sub
fld
or
jmp
lods
sub
fiadds
out
pop
lods
dec
cmp
sbb
add
cmp
lea
or
mov
test
popa
out
sahf
inc
hlt
dec
dec
rcr
outsb
add
pushf
cmpsl
mov
mov
cmp
xchg
decl
add
mov
jg
push
add
lret
pushf
test
jo
mov
mov
mov
or
fiaddl
sbb
mov
mov
or
jno
imul
in
test
stos
jge
cmp
mov
mov
sub
rclb
lcall
pop
lods
mov
push
nop
jle
insb
daa
jecxz
pusha
stc
lds
outsl
mov
mov
xor
cmc
and
out
mov
ss
data16
lods
cld
dec
aad
mov
cmc
int3
das
push
out
add
data16
adc
mov
sub
imul
jecxz
mov
cmc
adc
faddl
rcrb
pop
repnz
cs
mov
and
and
mov
jo
aas
pop
mov
lret
push
iret
aas
enter
jge
rcrl
out
sahf
imul
jno
mov
jae
stos
outsb
jbe
jnp
call
jecxz
fs
mov
inc
test
pop
jge
sub
ret
xchg
loop
leave
cmp
mov
adc
rcrb
jae
xchg
inc
jne
in
call
orb
mov
cmp
gs
outsl
jl
pusha
stos
repz
mov
xchg
dec
sub
sbb
mov
cmovs
in
mov
mov
sbb
mov
pop
adc
stos
pop
dec
jne
pop
outsb
je
cmp
mov
jle
mov
aaa
or
sub
movsb
outsb
adc
sbbb
arpl
mov
jnp
jnp
shl
fbstp
xchg
aad
js
add
repnz
fiadds
sbb
mov
rclb
pop
test
push
fs
cmc
pop
xchg
lcall
cmp
mov
mov
jmp
movsb
sahf
dec
aad
in
dec
jge
fs
inc
xor
cltd
cwtl
sbb
add
test
mov
ret
pop
arpl
lret
cmpsb
pop
sarl
clc
pop
fisubrl
jo
pop
and
aad
or
cmp
ljmp
stos
in
sti
xchg
adc
fwait
pop
jle
jne
jmp
sub
dec
sub
and
dec
jb
movsb
push
sbb
pop
test
push
jmp
mov
lods
mov
sub
popa
jo
sub
and
jne
pop
jb
movl
lret
mov
dec
dec
push
jp
jno
lret
imul
aam
repz
outsl
jp
sti
inc
icebp
inc
ss
mov
cmp
insb
rolb
cmp
jmp
inc
pop
test
fwait
imul
and
loopne
adc
ja
pushf
imul
mov
mov
jl
fisubrl
sarb
shl
mov
xorb
je
cmpsb
clc
push
jmp
mov
mov
sbb
ds
vphaddudq
ss
orb
cld
sub
mulb
and
test
notl
iret
or
mov
or
pusha
pop
leave
jne
adc
loope
mov
jmp
mov
stc
add
dec
cmp
stc
sub
xchg
cli
pop
daa
adc
adc
xor
rcll
lret
mov
rcrl
xor
sub
add
xor
clc
cltd
insl
js
das
cmp
in
adc
cmp
ret
insl
fadds
mov
rorb
fidivrl
roll
lahf
imul
and
ja
loope
xchg
fcmove
inc
inc
dec
scas
daa
int
push
into
idivl
mov
mov
dec
ljmp
jnp
pop
xchg
je
adcl
icebp
sub
std
das
js
in
pop
out
clc
dec
addb
arpl
sub
jns
rorb
ret
insl
cld
loopne
dec
ds
mov
call
jmp
daa
cmc
inc
or
adc
lods
xor
sti
mov
push
inc
or
imul
lahf
pop
int3
mov
mov
data16
fildl
mov
xor
lods
push
loope
mov
faddp
inc
in
mov
fmuls
mov
mov
jmp
sbb
and
sbb
mov
xchg
daa
jg
mov
lods
rcrl
pop
ljmp
lcall
pop
or
inc
test
xlat
or
cmp
das
mov
push
sub
movsb
mov
jnp
outsl
jecxz
dec
pop
fisubl
adc
push
sbb
cmp
loopne
divb
add
mov
sarl
or
push
addr16
sub
lea
imul
xor
and
or
leave
aas
adc
and
insb
cld
inc
dec
adc
inc
nop
mov
scas
sbb
ljmp
fldt
shll
jae
data16
cmp
mov
cld
add
jo
loop
les
pop
push
inc
fnsave
cmp
mov
mov
push
daa
push
pop
mov
mov
outsb
jle
and
ret
movsb
jle
arpl
mov
adc
sub
out
cli
adc
push
pop
adc
mov
jo
notb
sbb
push
fs
mov
xlat
mov
xchg
pop
pop
daa
std
fld1
sub
mov
icebp
mulb
popa
notb
or
or
sbb
lcall
dec
mov
outsb
shl
fidivrs
sbb
sub
out
xchg
iret
fistpl
push
jne
repnz
test
lea
mov
sbb
stos
pop
jbe
arpl
out
in
test
push
popf
scas
in
dec
sti
dec
push
ret
lods
push
mov
mov
push
inc
xchg
push
xor
inc
pusha
and
push
sahf
fdivl
cmp
rcll
mov
mov
lcall
mov
jno
gs
mov
mov
pop
scas
stos
dec
mov
sub
mov
aaa
repz
xor
jmp
mov
sub
add
inc
push
shrb
insl
inc
outsl
mov
les
pop
imul
xchg
sbb
push
pop
rcrb
dec
pusha
imul
pop
push
mov
adc
lahf
jb
es
movsl
dec
imulb
stos
cmpsl
fs
xor
add
xchg
popa
fbld
sub
js
pop
arpl
sub
shlb
mov
insl
lahf
jmp
push
jle
in
add
jecxz
push
push
sub
ret
add
test
sahf
mov
or
jb
aad
js
cmp
push
enter
mov
lret
adc
je
imul
push
pop
cmpsl
notb
shl
mov
aas
sub
mov
jecxz
out
ds
sbb
mov
mov
pop
push
sbb
lret
bound
lea
enter
adc
iret
fbld
aas
idivl
xchg
fiaddl
mov
or
out
outsb
shl
xor
pusha
push
out
cwtl
fiaddl
pop
push
push
adc
aad
dec
mov
prefetch
cltd
push
cld
push
fdivs
xor
dec
sbb
shll
loope
inc
js
adc
jo
imul
dec
xchg
xorb
call
xor
gs
xor
lcall
xchg
pop
xor
icebp
and
mov
pusha
test
dec
push
mov
adc
sbb
imulb
repnz
cltd
int3
rorl
outsl
test
cwtl
jge
cmpsb
stos
in
test
push
add
pusha
push
sbb
push
popa
and
lds
sub
lock
sub
enter
mov
outsb
push
sbb
mov
add
pop
dec
add
fnsave
and
adcl
jno
xor
aaa
repz
push
sub
in
xlat
das
xchg
cmp
mov
movsb
sub
rol
sarb
cltd
xor
cs
ss
mov
mov
fnstenv
je
mov
cld
adc
rorl
sub
icebp
push
mov
arpl
xor
sub
push
insb
or
xor
xlat
bnd
popf
jbe
bound
xor
mov
mov
fcmovb
mov
adc
mov
test
scas
repnz
sub
jg
mov
mov
mov
inc
add
jge
pop
add
ret
pop
xchg
cmp
sbb
popf
movsb
push
jecxz
sub
dec
push
notb
mov
inc
sti
sti
or
push
xchg
push
iret
out
das
adc
clc
jg
sbb
or
les
jno
push
mov
test
popf
test
dec
cmp
stos
push
xor
fcomp
xchg
ret
mov
pop
stc
fstpt
out
dec
aas
jae
sarb
or
outsb
imul
cmp
inc
int3
and
rcrb
movsl
sub
dec
xorb
test
or
scas
mov
pop
shrb
int3
xchg
cld
into
pop
lods
xchg
mov
addl
clc
ss
push
mov
mov
or
imul
cpuid
lods
ds
xor
cld
push
inc
mov
sub
mov
push
inc
rsqrtps
sbb
mov
ja
repz
inc
fdivrl
sbb
testb
mov
leave
mov
faddl
cmp
add
in
loop
jg
shrb
jb
hlt
shlb
imul
xchg
mov
lahf
mov
mov
push
clc
and
jb
outsb
xchg
insb
sahf
mov
xchg
aas
xor
sbb
lea
jbe
test
dec
sbb
pushf
push
je
push
xor
popa
add
xor
pop
outsb
xor
outsb
jae
shll
cmp
ja
iret
xor
adc
es
sbb
fwait
lahf
scas
inc
lds
ss
sahf
pop
out
shlb
into
out
cmp
xchg
test
gs
sbb
enter
sbb
jecxz
xchg
add
cmp
inc
mov
leave
pop
dec
bound
adc
inc
in
xchg
aam
pop
push
repz
and
mov
fidivs
stos
dec
pop
ret
adc
push
pop
dec
out
ret
push
push
jne
add
sbbl
sti
mov
arpl
sbb
push
xchg
lods
lcall
xchg
mov
mov
mov
js
xchg
clc
push
aaa
mov
sbb
inc
add
jge
mov
out
add
jae
jg
xchg
pop
mov
shlb
pop
mov
mov
nop
jmp
and
xor
mov
pop
add
mov
shl
movsl
inc
das
and
fidivs
mov
pop
add
jo
mov
ret
cltd
add
fdivp
fs
leave
push
sub
js
data16
jno
outsb
or
out
stos
or
push
shrl
movsl
lret
mov
and
sub
out
outsb
jg
cltd
aad
cmpsb
cli
popf
mov
push
adc
inc
cmp
dec
fwait
test
ret
pop
add
xchg
shl
cmp
lods
notb
enter
fidivs
xor
imul
xor
cmp
cmp
repz
cltd
mov
cmp
fbstp
out
or
clc
or
or
xor
and
fcmovne
mov
into
out
pop
aad
jno
lret
aas
inc
xor
rorl
mov
loop
arpl
cld
sub
jmp
push
inc
aam
fistl
pushf
pop
jge
lds
movsb
int3
pop
out
inc
mov
or
fadds
mov
jge
inc
pop
cmp
add
adc
dec
or
jg
jecxz
xor
push
or
push
cmp
addr16
inc
lret
add
sub
xor
ds
movsl
jle
icebp
loope
xchg
cli
xor
jmp
xchg
gs
add
sahf
sub
outsb
inc
clc
sub
or
rorl
cmpl
fdivrl
into
out
leave
fisubs
aaa
outsb
outsb
in
das
arpl
aas
push
popa
ret
pop
call
xor
lret
and
sub
jo
sahf
repnz
sub
cmp
lret
shll
xor
sbb
and
out
mov
cmpb
add
pop
adc
int
inc
inc
scas
iret
jp
out
pusha
out
fucom
dec
ljmp
popf
je
int
cmpsl
jle
shrl
mov
mov
stc
xchg
mov
cmp
imul
cmp
push
enter
mov
xchg
aas
xor
outsb
aas
mull
sbb
or
push
ret
sub
out
into
cltd
std
mov
inc
flds
fistpll
add
leave
lret
lret
out
push
test
dec
and
sbb
in
loope
dec
sar
lahf
sbb
jp
loopne
and
sbb
les
and
ds
cmp
mov
xchg
test
mov
pusha
in
lods
mov
daa
dec
and
in
pop
push
and
das
sub
and
test
ss
imul
js
push
test
cmpsl
and
xor
inc
les
cmp
pop
cli
outsl
or
shrl
popf
sub
push
inc
sbb
dec
sarl
pop
cmpsb
add
pop
sub
add
sahf
lret
pop
fwait
mov
mov
bound
xchg
mov
and
mov
lods
in
pop
xor
sahf
mov
insb
imul
pop
and
jge
addb
jo
pop
mov
mov
jmp
jecxz
mov
sti
mov
add
addl
stos
push
movsl
cld
or
pop
stos
data16
or
mov
in
ja
rclb
dec
popf
inc
cmp
lds
jl
out
sbb
push
filds
and
and
or
push
ljmp
std
mov
or
push
nop
pop
stc
icebp
push
lock
shll
test
loopne
lret
sbb
jp
lods
adc
adc
hlt
xlat
push
fldl
push
jb
xchg
insl
adc
dec
sbbb
leave
in
jecxz
add
inc
jbe
daa
stos
adc
call
push
mov
sbb
mov
mov
rcrl
stos
lret
pop
cli
cmc
xor
in
push
dec
cmpsl
cltd
xchg
das
les
lret
and
inc
ljmp
xchg
xlat
call
pop
jne
xor
adc
loopne
mov
repnz
lret
int
dec
in
inc
imul
jo
mov
fstpl
mov
mov
lcall
dec
call
sbb
les
das
rolb
rorb
or
xlat
jno
inc
jb
dec
mov
lds
xor
fstpt
fnsave
outsl
jnp
sbb
sub
push
daa
loope
add
xchg
out
add
jge
mov
decl
sub
and
xchg
add
pop
pusha
inc
pushf
push
js
or
insl
adc
xchg
cmp
je
pop
inc
adc
fadds
add
int3
pandn
dec
into
fnsave
adc
pop
dec
add
sub
mov
xor
and
sahf
shlb
sarb
mov
push
pop
subl
jle
xchg
xchg
xor
or
fmul
xchg
dec
sbb
adc
adc
jnp
stc
xchg
xchg
negb
dec
leave
and
je
mov
incb
cmovle
inc
rorb
fistpl
and
scas
mov
jnp
insb
inc
and
push
js
push
ja
mov
scas
mov
aad
pop
cltd
cmp
xchg
lods
jne
mov
daa
mov
mov
adc
sbb
mov
mov
xor
add
scas
add
test
or
insl
xchg
sbb
or
les
pop
aad
lods
or
mov
and
scas
enter
call
add
lret
xor
shl
dec
mov
mov
add
iret
insb
xlat
les
inc
mov
mov
push
sub
lcall
hlt
mov
mov
pop
dec
fnstcw
imull
outsb
leave
repnz
sbb
add
sbb
dec
push
sub
mov
jns
push
adc
in
lret
iret
sub
add
stos
xor
fistl
cld
jmp
hlt
jne
mov
add
push
cmpsb
imul
jle
mov
jne
cmp
mov
mov
dec
repnz
stos
sbb
jge
ret
inc
inc
xor
push
gs
xor
cs
lock
jmp
sbbl
stos
xadd
pop
jb
outsb
mov
jnp
push
add
adc
jg
aad
fistps
xor
dec
mov
scas
and
sti
loope
or
ljmp
mov
dec
xlat
shll
stos
fcmovne
pop
xchg
cld
movsl
mov
stos
push
xor
outsb
out
sub
les
pop
movsl
jmp
in
mov
dec
addb
cmpsl
stc
sbb
ret
scas
cmpsb
ljmp
out
mov
xor
insb
adc
ret
sbb
bound
addr16
xchg
mov
xchg
pop
sbb
ljmp
loope
incb
xor
cmpsb
out
rcrl
inc
pop
push
cmp
sbb
jbe
bound
sahf
inc
mov
imul
shrl
xchg
jg
test
ljmp
cwtl
or
pop
pop
fwait
std
fisttpll
clc
je
repnz
cmp
cmpsb
fcmovnu
ja
repz
test
pop
imull
lock
inc
fdivp
sbb
pop
sahf
es
ds
and
xchg
imul
inc
and
sar
or
sub
push
pop
mov
mov
or
rolb
jnp
in
and
and
dec
in
ja
mov
add
ja
sub
ret
gs
dec
jle
jns
mov
xchg
popf
adc
test
dec
mov
ja
jp
mov
cld
fsubl
fwait
xchg
jnp
sub
add
dec
jno
movsl
ret
push
lock
lret
hlt
sub
or
or
adcl
jnp
mov
std
fwait
fs
pop
dec
lds
outsb
or
cmp
lahf
push
movsb
fists
aad
lods
xor
mov
xchg
mov
inc
lods
mov
or
lea
arpl
out
std
push
push
mov
js
sub
jmp
and
add
sbb
pop
cld
rorl
xor
sub
push
es
jb
mov
mov
adc
pusha
push
mov
mov
pop
xorl
repnz
loope
hlt
sub
pop
jmp
push
mov
int3
sub
cwtl
lock
test
cmp
inc
testb
popf
push
inc
rcll
or
push
cmp
xchg
jno,pn
aas
xor
or
insl
pop
cmp
scas
stc
loope
outsb
cltd
movsb
lret
imul
add
push
sbb
das
jne
jnp
cmp
into
sub
out
fstpt
in
enter
pop
dec
movsl
sbb
in
in
test
or
clc
xchg
es
xchg
xchg
sarb
in
test
test
imul
pop
cmp
clc
dec
or
mov
cli
xchg
add
loop
mov
lret
aaa
aad
mov
ss
rorl
imul
popa
cwtl
adc
scas
dec
lcall
mov
add
aad
in
cmp
sti
push
adc
jge
dec
push
mov
in
out
dec
jns
insl
add
mov
add
inc
ret
sub
cwtl
xchg
mov
sbb
jmp
adc
stc
mov
in
or
mov
into
mov
int3
lret
inc
sbb
adc
je
lret
ljmp
xlat
cwtl
jmp
sbb
clc
test
or
aas
adc
pop
dec
lahf
fbstp
scas
into
stos
inc
lret
mov
pop
pop
mov
fcomps
xchg
pushf
divl
into
ret
pop
and
adc
pop
inc
sarl
push
in
insb
outsl
cs
xchg
push
sbb
imull
ja
sbb
jo
shrb
mov
sbb
fidivrl
mov
sub
sub
push
lea
cli
daa
dec
jge
mov
dec
out
addr16
jae
cmp
in
int
and
jl
and
adc
xor
and
pop
xchg
sub
push
jmp
jns
or
xchg
add
xchg
sbb
adc
inc
cmc
call
cld
outsb
pop
mov
and
mov
mov
xor
and
cmp
mov
stos
fwait
sar
cmpsl
pop
adc
jmp
or
outsl
xor
cmp
bound
out
cmp
hlt
mov
or
sub
inc
scas
gs
imul
add
orl
movsb
aad
loope
dec
adc
mov
sbb
out
pop
adcb
sub
test
inc
orb
push
rorl
inc
adc
mov
push
mov
dec
add
inc
mov
imul
mov
loopne
sbb
jo
lret
and
xchg
int
bound
xchg
push
inc
popa
xchg
dec
add
imul
cltd
lock
jge
or
cwtl
out
cmp
jl
adc
cmp
scas
je
insl
jp
add
dec
push
xchg
dec
and
inc
daa
insb
xchg
cs
ret
mov
lock
rcrl
push
push
nop
inc
test
jecxz
jno
fwait
movl
iret
push
push
dec
push
stos
jbe
mov
cmp
imul
sub
sub
xchg
out
xor
fs
out
cmc
outsb
mov
call
or
jl
jb
je
add
imul
dec
lret
lods
xor
stos
and
sub
int3
push
mov
sbb
test
or
cli
orb
fstpt
lret
insb
dec
mov
leave
test
cmp
aad
pusha
rorl
xor
dec
stc
sbb
xor
jmp
jo
lcall
pop
lods
pop
loope
mov
mov
dec
adc
rcrb
std
adc
ss
dec
cmp
mov
enter
popf
decb
mov
lcall
aaa
aad
xchg
rorl
cmovl
sub
call
mov
jl
fadds
std
sub
ljmp
repnz
cmp
jmp
clc
inc
sub
insb
add
orl
sbb
xchg
addl
and
mov
dec
outsb
jae
out
mov
sub
ret
mov
cmp
in
inc
jp
fsubp
dec
xchg
lret
sub
mov
loopne
pop
cld
mov
inc
mov
mov
push
xchg
movsb
scas
lret
and
in
movsl
cmpsb
loopne
stc
ds
lahf
sti
cmpsb
pop
out
mov
add
jmp
push
popf
rcrl
pop
aad
adc
mov
adc
jne
scas
iret
pop
cmp
push
pop
push
dec
popa
jae
adc
jbe
scas
dec
fidivrl
jl
mov
cmp
dec
scas
mov
and
sti
and
stc
sahf
test
leave
pop
fcoml
fcmovne
nop
rcr
test
loopne
push
add
lahf
pushf
fcom
jge
iret
xchg
insb
jo
out
sub
mov
prefetchwt1
std
repz
adc
lcall
xchg
in
jnp
dec
add
lods
jl
dec
out
insl
fcomps
movsb
push
rorl
inc
sbb
and
xchg
adc
or
out
fwait
jbe
outsb
repnz
ret
push
jge
add
jmp
mov
add
or
out
popa
cmc
cmpsb
dec
addl
and
sbb
int3
ret
jmp
or
or
fistps
movsl
fisttpll
shll
stos
add
adc
sbb
add
add
push
lock
jno
pop
sarb
pop
pushl
je
cwtl
scas
dec
daa
lahf
mov
cmpsb
roll
jg
sub
adc
sbb
aad
dec
test
dec
popa
insl
adc
pop
inc
add
repnz
decb
or
add
dec
push
add
leave
aad
aas
popa
ficomps
test
fisttpl
ds
repnz
popf
inc
das
arpl
mov
stos
jle
dec
ficoml
cmp
add
xchg
push
pushf
and
and
aas
sti
push
sbb
jl
daa
stos
mov
out
ds
push
inc
into
pop
add
and
mov
loope
adc
jmp
and
cmp
mov
or
fidivl
or
push
aam
mov
mov
movsb
loope
loop
mov
mov
subb
inc
mov
mov
add
shrl
or
fbld
xchg
push
loop
xchg
dec
or
ret
push
jne
or
add
pop
jl
and
or
mov
push
imul
cmpsb
xchg
out
cmp
cmp
sub
push
clc
add
sbb
dec
sbb
scas
xor
sub
lock
sbb
xor
pop
inc
loope
mov
lods
jbe
test
sub
aam
imul
orl
pushf
xchg
les
sub
aas
sub
rcl
pop
xor
mov
push
int3
movd
xor
cmp
sbb
push
and
enter
xchg
pop
push
in
int3
mov
mov
pop
inc
jo
and
ficoms
add
xor
pop
test
inc
adc
xor
fldcw
cmc
mov
add
orl
sahf
cli
mov
pop
add
lahf
sbb
out
in
shrb
aaa
mov
mov
out
cld
sub
into
jno
add
dec
dec
les
jnp
add
cmp
cmp
mov
out
add
pusha
movsb
in
mov
pop
sbb
mov
adc
sub
rcl
repnz
cwtl
inc
enter
sub
adc
sbb
add
and
push
xor
je
ss
mov
fscale
sbb
into
push
sub
pop
psrlw
out
push
pop
fwait
cmpsb
roll
mov
imul
stos
or
push
lock
xchg
inc
xor
mov
jae
movsb
scas
dec
std
std
fnstenv
in
and
arpl
and
dec
jae
xchg
rcrb
test
add
popa
movsl
test
sti
sbb
xchg
cs
repz
xchg
add
shrl
popf
incl
les
lret
add
jl
das
pop
xor
xor
scas
arpl
push
mov
out
cld
in
call
iret
mov
movups
sbb
in
test
movswl
ret
imul
bound
and
fadds
inc
scas
push
add
lret
sub
sti
mov
and
inc
or
jae
int
test
xor
inc
or
daa
mov
mov
out
pop
and
jns
sbb
pushf
inc
movsb
cmp
mov
mov
lret
xlat
bswap
push
cmp
sub
dec
push
mov
dec
sbb
icebp
inc
and
pop
push
sar
pop
cmp
mov
leave
notl
cmp
das
push
lock
push
jb
lock
add
adc
cmpsl
lock
test
ja
pop
inc
rcr
dec
stos
xlat
cmp
mov
jp
sbb
sbbb
mov
pop
stc
pushf
xchg
stos
pop
cmpsb
jb
adc
jecxz
mov
cmp
mov
test
push
or
lods
mov
cmp
sbb
test
push
or
pop
push
mov
sarl
mov
bound
add
push
add
adc
push
sbb
mov
add
jbe
popa
pop
movsl
and
adc
arpl
icebp
add
nop
icebp
loop
adc
inc
shrl
call
add
lods
sub
in
sahf
adcb
jg
leave
fs
out
mov
ss
pop
loop
loope
in
or
jne
xlat
jns
pop
movsl
lea
add
outsb
fwait
jae
cltd
test
repz
out
ljmp
lea
lret
jns
sub
js
inc
inc
cwtl
adc
xchg
adc
xorl
pusha
out
mov
add
arpl
aas
push
out
ret
ret
insb
dec
add
scas
jmp
cmp
rolb
sub
xchg
aaa
es
imul
pop
in
test
out
dec
dec
inc
mov
iret
mov
lcall
lock
xchg
fcmovne
loopne
cltd
mov
jl
xchg
sbb
je
dec
rcll
or
xor
aam
daa
push
pop
js
es
push
mov
xchg
stos
sbb
push
das
sti
cmp
aas
es
cmpsl
ljmp
mov
and
pop
scas
test
test
nop
imul
add
and
jge
dec
xchg
loop
sub
mov
xchg
jne
xchg
movsb
arpl
mulb
hlt
pop
mov
mov
lds
pop
xchg
dec
jp
popf
mov
xlat
cld
sarl
add
jecxz
mov
jo
movsb
insl
xchg
nop
pop
lret
dec
test
dec
adc
mov
ljmp
jl
jle
mov
push
jg
aam
dec
sbb
mov
lea
push
mov
lret
or
adc
xor
and
mov
sbb
inc
cld
loop
add
daa
ljmp
lods
sbb
dec
push
inc
cwtl
daa
js
push
sbb
leave
stos
lods
or
sub
les
push
xorl
xor
test
dec
fmuls
inc
pusha
jge
xchg
cli
int
cli
stc
nop
mov
and
pop
push
pop
jmp
mov
pcmpgtw
mov
aam
pop
pushf
sub
jmp
pop
xchg
cld
pop
jecxz
fbld
mov
into
movsb
adc
or
in
fwait
movsl
dec
and
cltd
loopne
cld
add
aam
shrb
lds
into
xor
cltd
add
adc
cmpsb
je
js
movb
push
pop
insl
jmp
cmc
lock
pop
ss
lret
out
mov
jbe
stc
mov
jo
push
in
sbb
xor
fisttpll
mov
fs
ret
int3
push
jb
push
push
dec
fwait
call
jne
clc
rcrl
xchg
addb
sarl
mov
sub
pusha
cmp
xchg
sbbl
pop
cmp
pusha
sub
dec
fdivl
mov
mov
xor
pop
adcb
popa
enter
mov
testl
pop
mov
push
sti
push
sub
decl
xor
dec
loope,pn
mov
jne
cmp
mov
jp
cmp
xor
lahf
pushf
dec
into
mov
xchg
out
add
test
cmp
mov
dec
lds
ret
mov
ja
jl
scas
mov
mov
ret
sub
inc
cld
lahf
out
jb
out
call
in
fwait
std
into
jne
and
ljmp
cmp
pop
call
xor
out
imul
xchg
add
int3
pusha
data16
xchg
cmp
push
xchg
aaa
int3
lret
inc
test
fildll
xchg
or
rolb
mov
mov
dec
mov
int
insb
cmp
mov
pop
jb
stos
pushaw
sbb
inc
sub
fsubl
lcall
ret
orl
mov
cmp
stc
add
xor
popf
xchg
sti
push
ret
dec
pop
mov
cmp
sahf
ljmp
xchg
mov
adc
fwait
xor
je
js
xchg
sar
imul
pop
mov
imul
mov
shll
ficoml
mov
repnz
xchg
push
test
dec
and
stc
xor
int3
int3
or
xor
xchg
add
hlt
cmp
cli
xchg
push
mov
daa
icebp
lret
dec
xor
dec
dec
mov
pop
cli
testl
and
pop
mov
dec
or
inc
cltd
mov
aad
or
cwtl
mov
cmpsb
mov
jno
push
pop
jbe
dec
xor
cmpsl
mull
lret
add
mov
or
fwait
mov
ljmp
ljmp
mov
loope
and
xor
bound
cmp
sbb
call
jb
mov
test
out
aas
and
out
inc
xchg
daa
testb
or
roll
xchg
popf
inc
sarl
dec
ret
sbb
push
and
dec
pop
mov
cld
push
out
push
fidivl
mov
testl
and
aaa
sub
sbb
pop
cmp
add
push
mov
adc
fisubl
scas
clc
adc
mov
cli
or
xchg
mov
mov
and
fs
iret
icebp
ret
clc
mov
aad
dec
fwait
inc
dec
pop
jle
sub
jp
push
mov
ds
dec
xchg
pop
inc
test
leave
or
or
adcb
push
pop
lcall
sbb
cltd
xchg
fstps
adc
lret
inc
cli
or
insl
push
and
mov
mov
aad
inc
arpl
aad
icebp
out
in
mov
add
xchg
dec
call
outsl
lret
jp
stos
jo
add
cli
mov
scas
sbb
pop
out
rorb
les
in
xchg
mov
fldt
scas
cmc
jb
xchg
cmp
bound
ret
pop
shll
jp
popf
dec
sub
mov
in
ljmp
mov
mov
jne
adc
inc
pop
repnz
lock
rolb
xor
je
stos
mov
cmpsb
les
mov
xchg
aaa
loope
icebp
sbb
sahf
xlat
cmp
pop
jae
sub
pop
icebp
mov
cmp
aas
call
adc
or
stc
xor
popa
js
xchg
sub
xor
dec
inc
sahf
lea
int3
mov
cmpsl
mov
int3
dec
inc
dec
sbb
sbb
push
sub
adc
adc
sub
push
pop
int3
inc
jmp
test
js
lcall
shr
mov
shlb
insl
sub
cld
lock
xchg
push
stos
cmc
xchg
pop
pop
inc
mov
inc
imulb
in
or
mov
push
and
sti
xor
jbe
push
pop
mov
outsl
imul
hlt
add
lcall
jne
jne,pt
inc
xchg
mov
mov
les
xchg
pop
fistpl
fwait
insl
testb
mov
addr16
or
clc
jmp
dec
mov
and
mov
jle
and
nop
fsubrl
pushf
stos
addr16
dec
add
pop
push
ficompl
inc
mov
call
cltd
bswap
out
pop
add
adc
lock
hlt
or
adc
xchg
sub
cld
or
mov
pusha
dec
movl
insl
jne
inc
xchg
mov
addb
hlt
shll
dec
pop
dec
mov
pop
out
mov
xchg
jl
adc
mov
xchg
outsl
inc
push
mov
inc
das
imul
pop
or
movb
cwtl
mov
inc
jns
ror
cmpsb
fdivrs
pop
cwtl
orb
mov
jbe
sahf
pop
sub
fldcw
movsl
push
cmp
repnz
test
ficoml
imulb
pusha
sti
ud2
dec
insb
xchg
mov
shrl
jp
insl
fldcw
dec
rol
pop
insb
test
xor
bound
jb
dec
push
lock
notl
test
js
mov
xchg
add
out
sbb
sbb
lahf
push
inc
in
jl
scas
and
add
push
repz
les
jbe
int3
jnp
inc
lcall
dec
push
jle
fsts
loope
gs
imul
int
or
jmp
sub
add
add
fldt
daa
rcrb
xlat
fs
xor
or
mov
rorl
leave
cwtl
nop
cld
pop
jno
and
lret
xchg
dec
mov
mov
dec
xchg
or
sub
lret
ja
or
ss
cmp
cmc
fists
sbb
xlat
pop
call
fdivp
movsl
out
cmc
cmp
int3
sar
fmull
dec
push
insb
jnp
cli
es
cwtl
pop
test
pop
inc
mov
jmp
sbb
mov
leave
nop
pop
jmp
xchg
iret
and
fimuls
ss
clc
jmp
test
cmpl
es
cmp
cli
pusha
xchg
push
scas
lret
stos
dec
push
xchg
les
xor
stos
cmpsl
movl
int3
arpl
xlat
iret
adc
fcmovne
in
sbb
xor
pop
sbb
dec
daa
sub
jp
mov
cmc
ds
imul
notl
cli
mov
pushf
sbb
jbe
insl
das
add
lcall
add
clc
or
push
fstpt
add
inc
pop
push
adc
xchg
mov
dec
add
add
adc
lahf
repnz
xor
adcb
add
xchg
mov
rorb
add
sub
daa
leave
in
dec
lret
push
mov
popf
pushf
inc
sbb
cmpsl
shr
dec
mov
add
and
mov
dec
jo
popf
dec
mov
pop
popa
cmc
cmp
outsb
push
mov
stc
adc
mov
jmp
add
das
sub
addr16
lock
or
sahf
bound
mov
sbb
cltd
fcomps
push
shlb
push
das
outsl
or
sub
in
and
repz
mov
stos
inc
cmove
xchg
pushf
mov
mov
scas
pop
lock
xchg
jns
or
out
pop
push
outsb
add
hlt
jp
mov
lea
data16
nop
jecxz
xchg
out
movsb
sahf
inc
int
inc
pop
addr16
xor
testl
inc
xchg
mov
imulb
cmp
cld
shll
cmp
sbb
jnp
mov
repz
hlt
jns
pop
les
cli
and
adc
lret
xor
out
mov
aas
sub
pusha
jo
out
mov
mov
das
js
fisttpl
in
pop
sub
fdivs
jne
pop
cltd
out
outsb
movsb
arpl
divb
and
cli
ror
fildll
pop
aas
ret
lea
adc
cwtl
ljmp
call
jp
cli
sbb
fstps
jbe
inc
fwait
sbbb
cmp
iret
sub
xchg
movsb
aad
cmp
sub
xor
mov
cmp
push
in
mov
mov
sub
enter
lcall
cmp
inc
adc
loop
stos
jecxz
inc
fld
mov
js
mov
les
rclb
outsl
xchg
and
int
fists
mov
inc
mov
loope
inc
mov
fadd
rol
inc
icebp
es
push
movb
cs
insb
add
xor
not
fsubp
or
mov
aad
sbb
or
push
test
xchg
adc
hlt
test
imul
lods
mov
dec
aas
inc
xor
stos
adc
fs
cltd
scas
loop
xor
popf
cmp
cmp
push
pop
mov
mov
int
test
popa
daa
mov
push
mov
leave
xchg
and
cwtl
daa
sbbl
sub
shrl
jns
rcl
inc
inc
xchg
cmp
mulb
aam
jne
jecxz
inc
cs
lea
mov
add
xor
jo
rcrl
jle
adc
repnz
xor
les
xchg
xchg
out
mov
xchg
dec
in
xchg
xchg
and
sub
test
into
pop
stos
jnp
or
adc
fcmovnu
add
cmpsb
adc
aad
cmp
dec
aam
and
int
xchg
mov
jae
sbb
mov
xchg
in
mov
dec
std
aam
cmp
mov
push
sbb
mov
aad
sbb
in
lret
jnp
push
popf
jne
cltd
xor
test
mov
xchg
xchg
sbb
push
ret
lret
int
mov
jecxz
data16
cmp
push
mov
lret
push
pop
sub
shrl
push
in
add
mov
sub
adc
ljmp
loopne
stos
sbbb
cld
xor
icebp
int
jo
push
pop
stos
dec
loop
push
shlb
or
or
and
ja
sbb
push
popf
stos
push
popa
or
xchg
sbb
mov
cmp
mov
adc
adc
mov
fisubrl
xor
test
push
cmpsl
jp
push
add
ss
mov
pop
push
push
repz
push
lods
jns
stos
cmpsl
notl
sbb
je
mov
adc
hlt
mov
add
aad
dec
mov
cmovg
daa
jbe
jl
outsb
mov
pop
push
test
and
xor
push
loopne
pop
inc
sahf
or
pop
xchg
ret
mov
inc
test
jp
mov
loop
js
ds
shrl
hlt
lea
sbb
and
inc
aaa
aam
push
mov
decb
gs
pop
repnz
ficoml
jno
enter
push
pop
icebp
xchg
data16
lcall
mov
mov
les
jb
iret
shll
incl
adc
mov
xchg
aas
je
imul
sbb
or
jl
mov
aaa
inc
flds
lret
dec
les
mov
call
mov
insl
cmp
and
sub
push
and
or
sbb
xchg
push
nop
stos
test
insb
dec
pop
mov
cli
mov
pop
cli
inc
cmpsb
hlt
mov
fs
insb
das
dec
mov
insl
mov
dec
xor
cs
push
adc
and
ret
mov
out
aad
lahf
mov
fsubl
inc
add
inc
mov
lret
jb
in
js
dec
xor
sub
xchg
jecxz
and
xor
adc
lahf
dec
out
or
dec
jecxz
pop
cmp
shll
cmovs
mov
xor
ret
lods
sbbl
test
and
in
sbb
imul
daa
and
sbb
cmp
mov
ljmp
gs
mov
mov
outsl
sub
jle
inc
jbe
ja
sub
mov
xchg
in
jl
mov
jbe
inc
arpl
ret
add
test
sub
dec
lcall
dec
aad
push
int3
rcrb
outsl
les
mov
jg
adc
xor
loope
sarb
rcr
int3
repz
dec
sub
je
dec
sarl
cld
lret
and
popf
dec
call
call
loop
xchg
push
push
lcall
mov
scas
dec
and
add
jno
ret
nop
nop
push
cwtl
out
out
shrl
xor
pop
cld
push
leave
enter
adc
jbe
jne
sbb
call
push
jp
popf
dec
mov
sbb
xchg
or
loop
sbbb
out
push
cld
leave
push
insl
pop
shlb
stc
das
int3
sahf
sahf
dec
jb
pop
fldt
pop
jmp
xor
mov
movsb
cmp
lods
xor
das
xor
jge
cmpsb
sub
jno
pop
jb
push
test
pop
mov
xchg
test
push
push
icebp
insl
xchg
arpl
ret
mov
lock
inc
sub
cmpsl
call
xchg
testb
sub
mov
ret
das
add
cmp
mov
lock
xchg
icebp
xor
hlt
cmp
xor
push
xchg
xchg
inc
sahf
mov
in
ja
mov
xor
test
aam
push
sub
jnp
mov
call
popa
push
enter
mov
cmpsl
es
mov
mov
in
inc
cwtl
lret
test
xchg
lahf
lcall
pop
pop
inc
jnp
dec
mov
and
notb
push
lcall
icebp
push
rcrl
mov
dec
jae
and
lods
ret
push
addr16
pop
in
xlat
pop
mov
jmp
or
das
xor
add
pop
inc
insb
push
ljmp
jg
push
scas
sub
push
scas
stos
imul
push
inc
mov
push
fnstsw
push
dec
dec
adc
enter
pop
decl
pop
lds
dec
testl
gs
int
rorl
adc
and
shll
mov
out
pop
mov
and
fldcw
iret
insl
test
mov
and
or
add
nop
or
ret
das
imul
adc
cmp
and
push
push
sti
cmp
gs
in
jae
fs
jecxz
push
outsl
add
pop
insb
sbbl
or
stos
ja
outsb
out
lock
popf
dec
mov
call
cmp
add
aam
icebp
or
inc
mulb
xchg
lret
push
test
cmpsl
push
hlt
mov
lahf
sbb
lds
fcmove
or
xor
imulb
sti
test
xchg
movsl
scas
dec
cmpsb
cmp
movsl
inc
fs
or
xchg
lcall
gs
lock
ss
pop
clc
add
jne
cmp
push
ret
mov
add
xchg
sub
mov
add
popf
leave
fistl
add
mov
push
bound
mov
push
mov
inc
stos
cmp
inc
int3
into
test
push
pop
xor
fcoms
xchg
inc
movsl
sarl
aam
lods
iret
nop
xchg
gs
adc
sbb
stc
stc
lcall
test
or
push
pop
xor
pop
std
cmp
bound
adc
add
dec
idiv
loopne
lret
in
jae
je,pn
jmp
xchg
pop
inc
sbb
inc
lea
mov
mov
cmp
add
jno
mov
jo
mov
lea
mov
dec
xchg
movsl
cltd
icebp
or
xor
push
popa
imul
push
outsl
into
out
addr16
mov
incl
lret
mov
and
jecxz
notl
pop
shll
mov
sub
fistpl
test
push
add
dec
mov
xor
xchg
out
mov
pop
add
adc
jmp
aas
out
lods
out
adc
inc
ret
cmpsb
mov
int3
inc
mov
clc
sti
push
mov
xchg
sub
stos
js
fsubp
xchg
daa
pop
xchg
sub
enter
scas
xchg
or
and
daa
add
pop
fcomps
in
cltd
lock
leave
push
mulb
xlat
add
pop
mov
outsb
jle
inc
or
aaa
dec
lods
pushf
xor
and
adc
inc
ret
jbe
iret
fsubs
sbb
pop
pop
in
mov
xchg
jecxz
loope
inc
push
xchg
aad
call
sub
movsl
rclb
pop
and
push
loope
hlt
adc
cmpsl
movsl
dec
fdivr
dec
mov
sbb
stos
xor
aas
ficomps
test
mov
cmpsb
mov
pop
ljmp
movsb
int
mov
mov
xchg
sbb
pop
jns
add
or
push
jecxz
pop
jmp
xchg
jnp
jne
cli
dec
jge
rorb
cmpsl
insl
repz
and
xchg
cmp
negb
shlb
and
adc
mov
pop
sub
pop
mov
add
sub
dec
insb
xor
adc
loope
addr16
in
imul
inc
popl
ss
cli
mov
addr16
and
inc
mov
cmpsl
stos
in
ljmp
xlat
fidivl
and
or
loop
add
into
mov
scas
lea
pop
mov
fcomp
and
push
fsubrp
jo
iret
xor
fnstenv
xor
out
mov
fidivl
nop
add
add
lahf
sub
imul
fisttpll
mov
push
les
xor
cltd
add
and
adc
mov
push
add
and
add
pextrw
mov
mov
inc
lcall
push
adc
push
test
sbb
jecxz
sbb
lock
or
shlb
arpl
test
xor
shll
lret
fimull
insl
test
loop
dec
xor
cmp
cmc
jle
out
mov
orl
and
push
call
out
nop
les
jnp
repnz
cmp
dec
sti
or
xor
add
aaa
scas
loope
stos
shl
pushf
in
loop
dec
xchg
mov
inc
xor
inc
cltd
fwait
pop
mov
mov
mov
jl
mov
dec
cwtl
rorb
jmp
dec
rclb
mov
icebp
inc
scas
shlb
lcall
push
jno
cmp
movsl
mov
mov
inc
add
jle
dec
pop
dec
cmp
es
add
inc
aad
test
ud0
push
and
inc
xor
mov
mov
jbe
or
or
xlat
or
jl
pop
test
shrl
dec
enter
adc
xchg
loop
or
ds
mov
or
pop
lcall
popf
sbbb
mov
stc
out
fs
iret
lret
xchg
sub
icebp
addr16
icebp
pop
outsl
daa
adc
rclb
xor
pop
cmp
mov
insb
scas
mov
push
mov
xchg
cld
subl
cmp
clc
pop
cmc
add
cmp
clc
adc
das
jbe
std
lahf
push
inc
mov
pushf
scas
fsubrs
out
int
sub
pushl
cmc
sbb
stc
shlb
jg
rcrb
in
in
aas
daa
aad
ljmp
or
stos
sbb
sbb
cli
xlat
movsl
fistps
mov
arpl
imul
test
dec
flds
popf
pushf
add
dec
cmp
and
scas
cmc
jmp
cwtl
daa
into
add
ljmp
int3
arpl
fs
lret
sub
scas
dec
dec
insl
pop
adc
dec
in
mov
mov
addb
mov
stc
les
movsl
sbb
push
or
add
out
lds
cld
cwtl
add
jo
ds
mov
and
mov
and
adc
pop
lods
xorb
sti
cmc
mov
cs
xchg
add
mov
subb
cmp
aaa
xor
into
adc
push
loope
mov
cltd
sub
test
test
andl
jnp
push
lret
arpl
push
insb
mov
push
xchg
sub
aaa
daa
jl
out
mov
and
lods
mov
subl
jns
add
sarb
andb
test
pop
cs
dec
mov
push
jge
sbbl
sahf
push
sarb
or
push
pop
push
mov
pop
mov
add
mov
lcall
mov
scas
and
mov
ja
fsubs
sub
inc
pop
push
push
notb
pop
lcall
mov
enter
cwtl
mov
cmp
mov
inc
jbe
add
shl
paddb
mov
stos
xchg
jno
inc
xor
xchg
aas
adc
gs
shrb
hlt
test
xor
mov
je
push
out
stos
stc
gs
sub
cwtl
xchg
inc
jp
xchg
jle
std
cmp
mov
mov
pop
jbe
lcall
adc
or
inc
data16
mov
and
jbe
adc
mov
xor
outsl
pop
adc
frstor
das
sub
or
mov
mov
dec
lea
jbe
rcr
out
ja
movsb
add
aad
cs
xchg
sti
mov
ret
dec
arpl
or
xor
mov
mov
mov
jo
cmp
popl
push
push
aas
pushl
test
dec
icebp
int3
fdiv
shrl
mov
inc
mov
sub
jb
sahf
dec
dec
and
dec
outsl
outsb
push
lods
lcall
pop
adc
inc
jns
jecxz
lea
pop
sti
dec
outsb
push
fcom
push
ficompl
pop
and
out
mov
xchg
adc
cmpsl
enter
loopne
or
mov
test
in
xor
pop
lahf
jl
xchg
inc
in
mov
pushf
leave
pop
or
cmp
out
addr16
int3
dec
cmp
jp
int3
mov
nop
adc
mov
dec
repnz
aam
push
std
pop
or
push
and
call
mov
pop
sub
adc
pop
add
repnz
cmpsb
lds
lret
mov
int
xchg
xchg
add
mov
xor
xlat
dec
push
fwait
lret
adc
add
lods
repnz
mov
mov
rcll
xchg
push
seta
mov
sub
jmp
or
inc
loop
and
add
xchg
cs
mov
adc
jo
fdivp
loop
mov
clc
xlat
fst
leave
inc
fimull
pop
ficomps
xlat
popa
adc
cmp
aam
mov
jno,pn
or
popa
xchg
xchg
js
jp
pusha
cmp
xorb
data16
sub
and
push
jl
xor
cmp
inc
mov
inc
lret
jp
rclb
gs
pusha
test
mov
sbb
in
imulb
and
mov
adc
xlat
push
push
mov
add
sbb
rcrb
push
movsl
xchg
cld
or
fwait
sub
push
clc
fs
cmp
stos
hlt
cmc
in
sub
lcall
and
inc
fnstenv
sub
fninit
mov
insb
movsl
sbbb
lea
in
sub
pop
jns
test
xor
mov
repz
dec
dec
stos
shl
push
ljmp
out
adc
push
lock
stc
jmp
and
jne
mov
xor
fwait
pop
mov
dec
mov
std
addr16
jo
ljmp
int
std
and
fdivrl
popf
int
and
xchg
push
dec
insl
test
imul
pop
ret
sbb
popf
pop
push
sub
adc
mov
inc
cmpsb
pop
and
out
imul
xchg
pop
mov
xchg
sub
inc
popf
je
mov
test
mov
mov
sbb
clc
xor
lods
jle
cmp
mov
sbb
dec
jge
shlb
and
and
dec
xor
out
sub
mov
dec
sub
mul
fsubl
stos
mov
es
cmpsl
pop
ret
mov
enter
lret
sbb
inc
mov
cld
icebp
negb
or
push
push
ljmp
movsb
call
test
incl
cmp
xchg
push
cltd
lock
sbb
ja
mov
push
dec
rcrl
bound
clc
or
int
mov
add
mov
mov
xchg
lret
dec
adc
std
loop
hlt
xor
sbb
add
add
cmpb
mul
pop
mov
cwtl
add
fstps
mov
bnd
aad
leave
push
pushl
and
nop
decb
mov
incb
jge
push
push
dec
adc
int3
add
scas
lahf
in
call
mov
add
test
or
jecxz
adc
sub
outsl
xor
test
lea
xchg
pop
jg
pop
push
jge
out
sbb
movb
dec
push
and
fstpt
out
sti
mov
das
sti
fdivrl
mov
fwait
push
ds
js
lods
jnp
sub
std
jecxz
cmp
jbe
jp
or
test
lret
test
mov
test
add
mov
imul
out
popa
push
pop
sub
flds
inc
sub
insl
out
adc
jle
repnz
popa
xchg
sub
ja
insb
push
mov
mov
add
cmp
std
sti
cs
fadds
sti
jmp
cmp
in
loope
sarb
sbb
sar
pop
lock
hlt
mov
adc
sub
ret
addr16
sbb
adc
push
loopne
add
jo
mov
jnp
mov
jecxz
push
pop
sahf
cmp
xchg
cmp
jmp
out
in
cmp
sub
sub
mov
insl
mov
pop
mov
das
adc
frstor
mov
outsb
xchg
loopne
lea
ficoml
mov
test
imul
mov
add
mov
add
sbb
btc
push
mov
xor
insb
sarb
jge
int
jnp
jne
pop
xor
push
adc
inc
jae
xor
xor
out
cmp
xor
push
add
orb
mov
mov
dec
cwtl
lcall
pop
out
add
adc
outsl
mov
adc
xchg
aaa
cmpsb
sbb
mov
sbb
orl
nop
repnz
mov
outsb
xor
pop
adc
xor
nopl
jecxz
mov
pusha
and
dec
mov
cld
ret
lret
scas
and
cmp
pop
les
xchg
addr16
iret
sbb
movsb
rcll
push
adc
mov
mov
rol
leave
cmp
pop
jle
add
aam
cmc
pusha
out
and
pushf
repz
sub
daa
stc
xor
nop
fistpl
xchg
inc
cmpsl
mov
sub
or
mov
xor
mov
sbb
loope
cmp
pusha
jae
push
jns
push
cmp
movsl
dec
lret
xchg
push
inc
insl
loopne
mov
cmp
mov
dec
mov
fucomi
sbb
outsb
mov
icebp
ror
dec
pop
out
repz
pop
lret
mov
test
or
loope
mov
and
aas
xor
scas
repnz
popf
cmpl
or
int3
subl
outsb
jbe
aas
ja
aad
push
push
jns
icebp
inc
ficomps
sbb
repz
imul
mov
jne
imul
les
dec
or
fiadds
xor
movl
fwait
leave
pop
stos
mov
jns
lcall
sub
cmpsl
lods
and
and
cmp
cmp
mov
fwait
dec
push
and
inc
push
and
fcoms
or
mov
jne
in
add
lea
stos
sub
lahf
add
sahf
mov
mov
gs
add
sub
and
sub
scas
pusha
shll
cmp
je
inc
mov
and
arpl
test
orl
stos
dec
sti
mov
xor
jae
sahf
dec
xchg
in
or
xchg
test
jo
lods
cmpl
add
push
lods
jecxz
outsl
neg
add
mov
nopl
xchg
fs
fwait
push
mov
inc
jle
icebp
adc
adc
sub
adc
push
sub
mov
fdiv
or
gs
add
neg
xchg
iret
adcl
and
cmp
sarl
int3
in
adc
push
dec
cs
cld
ss
ds
aam
mov
jnp
fiadds
pusha
mov
mov
mov
stc
or
mov
cmpsl
push
sub
stos
push
add
jge
sub
dec
test
movsb
ss
imul
and
mov
mov
and
into
cmc
outsl
add
sub
shll
mov
mul
je
sti
insl
push
fiaddl
pop
adc
mov
fninit
xlat
pop
ljmp
mov
xor
ret
jns
call
pusha
stos
ljmp
push
ljmp
and
xor
arpl
movsb
dec
fstl
cmp
jno
jo
cld
xchg
sahf
lret
std
cli
adc
cli
and
mov
leave
call
adc
xchg
cmp
shlb
lods
ret
pop
sbb
sbb
insl
dec
or
lret
and
ret
mov
gs
in
fnstenv
xchg
xchg
pushf
sub
cld
mov
fsubrs
push
inc
xchg
mov
adc
add
mov
mov
mov
jecxz
push
add
movsl
xor
mov
pop
stos
into
mov
cmpsl
inc
dec
bound
in
fldenv
push
xchg
dec
cli
add
ds
lods
leave
pop
pop
add
mov
daa
mov
jmp
aas
mov
addr16
or
cmp
dec
mov
lock
jmp
out
arpl
popa
push
pushf
imul
mov
pop
jp
push
xor
xchg
jns
xchg
cmp
loopne
cs
loop
lds
jle
in
dec
rcr
mov
adc
sbb
bound
xor
into
test
call
cli
es
bound
test
imul
dec
shlb
inc
in
jno
jg
je
xor
and
test
pop
dec
ss
pop
lahf
out
rcrl
cld
push
jne
jecxz
jns
lods
arpl
adc
inc
mov
call
mov
fidivs
jo
xchg
std
fwait
insb
sbb
scas
inc
pop
mov
push
jp
cld
pusha
dec
push
in
add
and
ljmp
out
xchg
int
cs
jne
jno
in
or
sub
into
out
pop
lret
cmp
divl
add
and
pop
je
jo
stc
mov
fsubrl
xor
xor
fadd
pop
adc
fimuls
loope
adc
cmp
and
push
aas
ret
out
in
ljmp
xchg
in
loope
cmp
out
mov
insb
jnp
cli
jmp
std
lds
js
mov
not
out
mov
pop
xorl
xorb
pop
jle
inc
enter
adc
ss
xchg
and
bswap
loopne
in
mov
mov
icebp
fisubl
add
push
jp
xchg
and
push
imul
insb
push
test
xchg
xchg
dec
add
or
cmp
xchg
fimull
mov
xchg
lret
dec
loop
clc
jp
inc
xor
cmp
mov
pop
or
cli
sub
inc
mov
int3
xor
xor
and
xor
inc
dec
pop
lea
jmp
movsl
xchg
mov
out
mov
add
lret
mov
push
in
shrb
fmulp
idivl
sbb
cmpsb
call
push
cmc
ret
xor
push
lahf
pop
or
xchg
nop
mov
mov
loope
xlat
push
mov
addr16
and
pop
testl
leave
sarb
mov
push
bound
enter
orb
push
mov
mov
add
jle
push
out
icebp
inc
imul
sahf
inc
sub
xor
inc
sbb
pop
or
push
insb
push
pop
loope
fwait
hlt
cmp
jg
fldl
imul
popa
out
aam
addps
repnz
filds
adc
jae
fistps
loope
xor
push
out
sub
adc
inc
mov
imul
pop
shll
setbe
xlat
xor
fsubs
jp
cmpsb
popa
loope
jae
jl
iret
es
test
int
xchg
cmc
mov
test
test
cmp
and
sub
data16
mov
pop
pop
or
jle
movsl
jne
push
mov
pushf
jp
inc
push
jbe
sbb
in
shlb
mov
ljmp
cmc
mov
mov
and
pop
lret
pop
adc
pxor
lcall
rcl
fidivl
cmpsb
lds
mov
inc
xchg
or
lret
pop
je
xor
push
fcmove
mov
jne
lret
add
pop
pushf
adc
mov
imul
cmp
sbb
shrl
mov
out
push
dec
movsb
pushf
and
push
lds
sbb
int3
int
xor
sub
mov
xchg
or
stc
jae
mov
inc
mov
lock
jmp
and
out
jns
mov
dec
pop
enter
fcmovnb
enter
arpl
pop
ret
push
sub
loopne
mov
aam
test
sti
add
xor
xor
or
jne
ror
nop
mov
add
xor
adc
cmpsb
or
js
ficompl
add
in
aad
xchg
aad
repz
imul
xchg
test
dec
cmp
lods
jo
mov
jg
repz
jns
int
ret
scas
sub
sub
repnz
push
pop
test
jae
sbb
rorl
les
lods
xor
mov
shrl
ja
ficoms
popf
mov
or
and
test
cmp
mov
dec
leave
xchg
adc
imul
nop
sub
push
cs
sub
xor
scas
cmp
cli
jl
mov
cltd
and
and
dec
ret
pop
in
aaa
adcb
push
rorb
pop
filds
mov
sub
jns
adc
hlt
pop
add
out
xor
addr16
arpl
pop
xchg
int3
and
mov
fbstp
data16
pop
sahf
mov
push
unpckhps
jbe
into
jne
sbbl
add
dec
enter
jb
pop
and
jnp
jp
aaa
jo
orl
xchg
icebp
adcl
sbb
cmp
lods
mov
pushf
jmp
frstor
cld
mov
subb
and
push
rclb
sub
out
xchg
ss
pop
or
push
lds
in
pop
test
fdivrp
ficoml
int
test
movsl
jae
mov
mov
push
pop
lret
aaa
and
lret
push
sbb
data16
imul
mov
jp
fisubrl
cmc
int
xchg
mov
ja
push
mov
int3
dec
ja
xchg
ds
pop
mov
xchg
xchg
jo
repnz
pop
push
lcall
inc
mov
xor
adc
stos
mov
ljmp
push
ljmp
js
and
pusha
inc
xor
pusha
jecxz
lcall
leave
les
movsl
popa
ljmpw
sub
iret
pop
or
sub
push
call
lods
sarb
std
push
xor
and
ds
aam
push
cmp
push
rep
out
add
mov
xorl
jbe
lea
inc
push
imul
mov
inc
mov
mov
sub
imul
inc
cltd
or
pop
cwtl
ss
ja
sbb
mov
out
aas
cltd
mov
mov
pop
push
fisubs
and
movsl
add
add
cltd
pop
mov
test
hlt
sbb
insb
ja
mov
pop
cltd
test
and
mov
cmp
stos
mov
jle
sbb
push
in
test
dec
and
lods
inc
mov
push
dec
jp
or
rorb
je
pop
sbb
mov
pop
add
sub
jbe
adc
or
inc
lcall
negl
loope
jmp
inc
mov
push
xor
dec
xchg
out
cmp
jmp
mov
icebp
adc
jb
testl
pop
test
inc
xor
push
sbb
sti
mov
enter
mov
add
and
adc
imul
dec
adc
xchg
mov
inc
push
and
popa
xor
loopne
rcll
push
jno
popf
sbbl
mov
fisttpll
xor
mov
push
mov
fs
xchg
arpl
fidivrl
fsubl
or
jae
jns
xor
clc
or
adc
movsl
addr16
adc
test
lcall
lahf
cmpb
aad
xchg
lods
xor
lods
push
rcll
fwait
sub
sbb
xor
pop
jl
daa
sbb
mov
adc
cmpsl
cld
scas
stos
dec
loopne
push
cmp
es
add
aas
xchg
push
bound
shlb
in
add
lcall
add
or
ljmp
or
mov
mov
insl
hlt
push
inc
lret
pop
jnp
or
mov
xor
int
icebp
dec
or
mov
ss
sbb
fwait
cmp
or
push
faddl
pusha
xchg
fidivs
jo
ret
dec
mov
cmp
and
test
inc
mov
and
out
cld
pop
nop
shl
aam
stos
push
pop
lods
and
dec
pop
push
jo
cmpsl
aas
fdivrl
mov
mov
popa
and
cmp
add
pop
xor
fmull
sub
stos
xchg
pop
arpl
xchg
mov
or
adc
push
cli
int3
jae
inc
dec
aaa
dec
adc
setp
pushf
jle
inc
sbb
clc
das
gs
dec
add
pusha
jmp
xor
sbb
test
dec
test
mov
mov
adc
bound
inc
popf
lret
add
clc
outsb
add
inc
xor
sarl
push
xchg
fbstp
vminps
std
negl
and
out
out
out
shll
sub
fistl
cwtl
pop
mov
xor
movl
sub
inc
scas
ds
test
push
pop
int
cli
jno
and
mov
je
dec
cmp
pop
es
cmp
push
sub
sahf
rol
cmpb
jge
mov
xchg
xchg
outsl
aaa
xor
test
adc
loop
pop
mov
movsb
sub
call
sbb
push
cmpsl
and
mov
ficomps
outsb
cmpl
pop
push
mov
ljmp
dec
jg
jno
mov
add
adc
lds
pusha
xchg
xor
sti
js
cmpsb
cs
icebp
movl
rorl
js
fnstcw
fwait
lock
adc
test
add
call
iret
adc
and
dec
push
mov
ds
cmp
aad
iret
outsb
lahf
loopne
sti
mov
lods
mov
and
adc
mov
jns
or
sub
int3
dec
pop
xchg
cltd
push
pop
lds
enter
mov
pop
inc
jnp
or
jnp
sub
out
mov
jge
cmp
sbb
mov
mov
lock
jae
mov
test
cltd
dec
enter
push
lds
out
aam
ret
out
xor
fdivl
sahf
loopne
jo
cmp
pop
sub
inc
inc
pusha
fdivrl
cli
cmpsl
popa
dec
mov
jge
test
add
sbb
adc
loop
xchg
aam
sub
rol
lcall
loope
fdivrs
fldenv
or
in
xor
lds
cli
cmpsl
xlat
adc
add
xchg
jle
mov
and
dec
mov
rcr
hlt
sbbl
mov
inc
ljmp
fcoms
pop
fsts
out
negl
outsb
jae
mov
pop
add
int3
addb
cmp
add
movsl
cmp
jb
jbe
outsl
mov
mov
xchg
test
jb
sahf
loopne
pop
push
xchg
adc
and
pop
mov
test
or
test
outsl
cmp
xchg
out
lret
std
in
push
mov
cmp
jmp
cmpb
adc
frstor
jb,pt
or
pop
cmpsb
dec
imul
call
push
push
sahf
mov
sahf
shll
aam
sbb
push
cmp
xor
push
cltd
mov
imul
loop
and
cmc
inc
add
test
fldt
movsb
inc
push
aad
outsl
loop
mov
ja
aas
es
mov
stos
movsl
lods
adc
dec
pushf
scas
repz
sbb
imul
mov
in
into
pop
icebp
decl
rorb
fucomip
xchg
lahf
data16
test
lds
push
imulb
in
lods
rcrb
lea
and
in
sahf
cmpsb
jg
dec
imul
push
pop
das
clc
jnp
mov
shll
push
leave
or
jle
aam
push
pop
inc
sub
arpl
add
and
aad
lea
sbb
xor
pop
shlb
inc
lahf
cwtl
loope
arpl
or
xor
pop
cld
out
ret
les
ja
xchg
ret
mov
pop
sbb
sbb
inc
in
clc
mov
push
xor
push
dec
or
fildll
aaa
inc
add
xor
dec
inc
mov
iret
push
mov
mov
ficomps
xchg
imul
add
cwtl
stos
cmp
xchg
push
out
dec
push
adc
out
xchg
imul
mov
cmp
inc
stc
jg
xchg
add
das
mov
cmp
push
outsl
scas
push
pop
in
cmp
nop
mov
hlt
or
xchg
rclb
mov
leavew
fcmovu
mov
mov
mov
sub
test
nop
adc
imul
fstpt
insl
sbb
cli
inc
push
leave
paddb
add
pop
shll
loope
out
in
fxch
xchg
aad
xchg
imul
mul
cmp
xor
movsb
test
mov
je
gs
inc
mov
pusha
mov
xchg
pop
cltd
mov
adc
jl
push
mov
mov
adc
mov
xchg
test
lea
in
pop
test
push
dec
loopne
pop
in
sarb
pop
sbb
notl
push
push
enter
nop
adc
iret
jo
test
icebp
jge
xlat
inc
lock
and
mov
rcll
jecxz
or
mov
or
add
cmp
cmp
call
mov
clc
enter
mov
inc
add
pop
dec
mov
jl
lahf
in
jle
dec
test
mov
cmpl
xchg
dec
push
pop
loopne
or
idivl
mov
mov
push
or
js
lea
incb
push
rcll
ret
ja
adc
jge
lret
xchg
push
or
popf
sub
add
mov
scas
scas
cltd
pop
adc
cmp
fists
sahf
int
into
sar
add
lcall
es
jno
sbb
mov
inc
fisttpll
imul
rcl
mov
add
das
xor
sbb
mov
movsl
outsl
das
aad
in
sub
es
dec
xor
cmp
addb
push
lahf
subl
push
sar
sub
inc
andb
repz
sbb
sbb
insl
push
pop
add
cmp
notb
pop
cmp
push
mov
shrl
iret
insb
mov
fldl
mov
sti
mov
or
nop
in
inc
sbb
xor
jl
testb
hlt
imul
fs
mov
inc
lds
cld
dec
and
iret
repnz
loopne
or
movsb
pushf
loop
ds
inc
inc
fldt
sub
loopne
mov
adc
loop
jno
sub
cli
loopne
ror
test
sti
je
sub
xchg
ret
mov
and
fldenv
leave
les
sub
into
mov
sti
adc
lcall
push
daa
xor
add
mov
fcmovnbe
insl
fstpl
iret
pop
scas
xchg
xchg
push
xor
aad
add
sbb
add
repnz
negl
insl
inc
fwait
ret
mov
and
jns
jge
add
dec
in
hlt
push
aam
sub
dec
lods
xchg
js
or
cwtl
push
jns
inc
in
popa
arpl
bnd
cmp
sbb
jnp
add
es
and
jo
imul
pop
in
push
into
arpl
sub
sti
loop
ljmp
push
and
mov
cmp
mov
adc
icebp
fildl
jo
in
adc
sub
xor
scas
sub
loope
sub
dec
jo
cltd
jbe
mov
les
cmp
dec
jae
imul
test
xchg
mov
insb
iret
mov
add
lds
xchg
dec
rcll
xchg
push
jno
xor
jne
dec
xor
cwtl
fbld
int
mov
xor
jg
fwait
jp
jbe
bound
addr16
enter
pop
mov
inc
cmp
and
pop
push
pop
stc
sub
dec
inc
movsl
call
sbb
jno
jne
mov
pop
inc
sub
lea
out
sbb
adc
pushf
and
sti
gs
jbe
xor
dec
xor
add
cwtl
add
fldenv
xchg
popf
cmp
lcall
iret
int3
xor
out
jp
sub
out
je
mov
mov
adc
ja
fildll
cmp
sub
xchg
fildll
call
push
aaa
into
pushf
jns
scas
lods
adc
scas
mov
jmp
adc
mov
xor
jecxz
mov
sub
fs
adc
repz
in
sub
js
lods
pop
out
jbe
or
enter
leave
adc
push
loopne
jmp
sahf
sub
and
loop
cmp
lret
movsb
sbb
in
in
cmovo
stos
cltd
fdivl
sahf
das
testb
leave
arpl
js
jno
cmpsb
aad
fistl
pop
xchg
jae
movsl
or
mov
nop
pop
fdivl
lock
enter
out
int3
push
out
mov
add
rorb
and
jmp
inc
loop
sahf
jp
push
lahf
dec
dec
mov
insl
or
jne
lods
cmpsl
aas
xor
sbb
out
mov
pop
pop
sbb
dec
popfw
testb
sub
ss
jnp
rolb
jg
int
mov
mov
adc
or
sub
inc
test
adc
orb
js
pop
adc
push
sub
lods
lret
push
movsb
push
ja
addr16
icebp
sub
pusha
and
cs
imul
mov
lcall
lret
fmull
push
pop
xor
cwtl
lea
inc
into
inc
imul
inc
mov
les
mov
movsl
out
out
iret
pop
cmp
pop
sbb
hlt
cmp
push
jp
cltd
mov
pop
ljmp
lret
mov
jns
repnz
mov
fs
test
or
scas
mov
inc
jns
aas
lcall
xor
mov
jbe
stos
or
mov
jne
sbb
sbb
cmp
xor
ficompl
cwtl
lea
pop
pop
xor
pop
xchg
lds
leave
mov
sbb
lea
es
pop
push
inc
and
pop
fiadds
jg
adc
clc
mov
and
adc
int3
pop
adc
cmp
ss
stos
ret
mov
arpl
jb
lahf
sbb
jns
sti
mov
bound
cmp
xchg
outsl
xchg
rcrl
in
lret
inc
pop
push
jb
push
mov
cmp
adc
ds
fwait
test
dec
jns
pushf
and
nop
pop
jl
bound
and
stc
popf
insb
xchg
ret
insb
leave
xchg
cmp
sar
dec
jo
subl
movl
fcoms
xor
fbld
and
test
stc
sahf
mov
js
or
mov
addl
out
call
add
add
cmpsb
fcmove
cltd
xchg
es
aad
adcl
xorb
dec
inc
sub
xchg
mov
fwait
into
adcb
cwtl
cmpsl
sbb
leave
ss
sbb
fidivl
ret
mov
mov
lret
xchg
xor
mov
das
xchg
inc
dec
dec
pop
sti
fimuls
dec
inc
cmp
or
push
jne,pt
push
inc
xor
xchg
out
mov
xor
in
stos
xchg
xor
sbb
mov
inc
jg
sbb
aam
pop
mov
inc
inc
rolb
arpl
push
js
into
sbb
cs
add
add
bound
pop
mov
dec
jae
pop
dec
add
cld
mov
mov
cs
jp
ljmp
xchg
subl
inc
inc
sub
pusha
push
movsb
pop
pop
fwait
mov
lods
mov
xor
mov
pop
cwtl
iret
pusha
out
mov
pop
div
lods
push
into
xchg
jns
loope
rcll
dec
and
inc
push
xor
lea
jge
les
in
fwait
aaa
pop
mov
jle
scas
jp
bound
fnstsw
add
lahf
fldenv
and
data16
xchg
xor
hlt
lret
or
out
jno
sbb
and
inc
mov
aas
test
icebp
js
sti
arpl
sahf
mov
jae
xchg
sbb
test
mov
xor
xor
push
jno
sbb
test
jae
sbb
xor
lods
ss
imul
cmp
fdivrs
mov
subb
jl
shrl
cmp
inc
add
jecxz
jle
xchg
mov
xchg
iret
dec
out
shr
shr
mov
and
mov
sub
pop
call
or
pusha
lods
testl
sbb
rolb
jp
out
add
sbb
mov
pop
jmp
push
lea
mov
mov
in
mov
sbb
aaa
jno
ret
or
pop
add
cmp
adc
cmp
frstor
movsl
out
test
test
jecxz
loop
dec
push
inc
ja
or
and
dec
scas
and
add
xor
add
scas
push
adc
ja
imulb
lcall
and
enter
pop
out
hlt
imul
das
popa
das
gs
sarb
test
jb
outsl
fsub
jmp
aas
scas
cli
pop
sbbl
out
jo
inc
insb
mov
and
fs
add
ret
mov
fsub
mov
cmc
mov
jle
add
xchg
xchg
js
stc
nop
inc
mov
inc
dec
imulb
addr16
mov
mov
stos
test
aaa
aaa
push
cmpsb
stos
scas
xchg
test
xchg
push
out
data16
mov
pop
test
sub
sbb
addb
ret
mov
mov
mov
outsb
push
or
add
pop
xlat
sbb
adc
add
mov
sti
clc
mov
dec
insl
push
xchg
flds
cld
jns
cmp
pop
movsl
rorb
les
inc
pop
add
lret
lahf
insl
ror
dec
xchg
popa
pop
ficompl
jl
jl
inc
adc
call
test
outsb
adc
push
lods
jne
add
mov
psubsw
or
mov
lret
mov
js
and
cmc
mov
push
jp
jbe
cwtl
and
scas
sysret
dec
scas
xchg
dec
mov
lret
dec
and
jp
dec
out
pusha
ljmp
mov
push
cmp
pop
dec
xor
call
ret
addb
sub
adc
outsl
mov
jnp
sbb
lahf
jecxz
aad
repz
mov
dec
or
cmp
xchg
sti
cmpsl
dec
sbb
jbe
xchg
andl
jno
dec
outsl
andl
push
mov
or
jbe
rorl
or
lahf
push
test
aam
pusha
icebp
ret
adc
pop
das
mov
xchg
pop
pop
xor
mov
into
popf
sbb
xchg
pop
daa
xor
pop
mov
xor
adc
push
cmp
repz
xchg
sbb
sbb
mov
add
push
inc
aas
movsl
xchg
clc
mov
scas
mov
fsubrl
xchg
int3
outsl
pop
lock
mov
lods
lea
xorl
mov
xor
add
mov
lods
pop
mov
inc
call
iret
inc
mov
xchg
mov
xchg
lock
cmp
adcb
jmp
jl
nop
or
mov
pushf
xchg
lock
sti
ror
insb
mov
inc
mov
mov
inc
jno
aaa
mov
movsb
mov
mov
jecxz
sub
push
adcl
out
inc
push
scas
test
mov
inc
leave
std
inc
jno
stos
pop
lahf
sub
es
sub
stos
lea
xchg
pop
call
dec
arpl
xchg
es
fldpi
sbb
mov
sbb
jl
out
pop
dec
xchg
xchg
cmp
stos
je
sbb
aas
adc
fildl
dec
incl
cmpb
ljmp
imul
aam
into
das
in
daa
inc
fnstenv
xlat
add
inc
jge
adc
mov
pop
push
scas
mov
mov
pop
stos
scas
aas
pop
in
adc
mov
addr16
pusha
test
aaa
pop
iret
das
push
sets
jnp
or
incb
cmp
sub
xchg
cwtl
fdivrp
ror
outsb
jecxz
arpl
hlt
mov
orb
xchg
hlt
and
aam
pop
arpl
filds
stos
stos
popa
cld
fwait
dec
rcrl
daa
adc
dec
and
aam
cltd
std
push
sbb
cmc
inc
adc
les
call
mov
dec
mov
jmp
cwtl
mov
imul
cli
cmp
das
or
lret
fldl
inc
sbb
xchg
int3
xor
sub
jbe
jle
fwait
leave
mov
xor
push
mov
dec
inc
stc
lock
popa
sub
in
mov
dec
enter
mov
inc
push
dec
push
jb
mov
sub
nop
sysexit
out
adc
jns
xor
dec
push
jecxz
test
adc
popa
sbb
mov
mov
rcrb
jb
sub
mov
xor
dec
push
cmpsb
inc
icebp
movsb
rcrl
add
subl
dec
xor
or
sbb
cmc
call
cwtl
nop
xchg
insb
inc
aad
sar
cmp
push
inc
sbb
nop
loope
sub
fsubp
dec
xor
sub
pusha
es
iret
pop
in
jge
test
mov
rcrb
sub
fwait
ds
arpl
mov
data16
pushf
popa
xchg
xchg
outsb
adc
loopne
andl
inc
icebp
orb
mov
xor
fldcw
mov
ret
popa
cmc
and
lcall
sub
mov
je
out
xor
in
in
nop
mov
loope
jg
ret
pushf
push
mov
mov
jp
loop
and
icebp
arpl
or
std
push
test
push
push
stc
inc
jg
sub
nop
int3
out
lahf
jecxz
mov
clc
inc
jp
lea
int
icebp
out
and
jnp
add
xor
xchg
xchg
scas
push
or
dec
xchg
aaa
ja
xchg
mov
xor
call
cld
lods
imul
mov
popfw
jne,pt
into
int
sub
mov
xchg
out
jmp
roll
mov
ret
and
mov
xchg
pop
xchg
icebp
dec
movsl
das
mov
ret
cmp
jb
outsb
push
and
nop
stos
push
les
pop
or
xor
mov
iret
sbbl
cmp
mov
sbb
rcr
addr16
cmpsl
and
cmp
andb
xor
jl
test
stc
aaa
add
arpl
dec
sahf
scas
sub
add
xor
ljmp
loope
mov
outsb
adc
loopne
shl
loope
add
les
push
test
mov
mov
dec
mov
fstpl
out
sbb
stos
test
push
jle
xlat
mov
cmp
mov
popa
add
mov
cmp
movsl
push
inc
js
add
fldl2t
sbb
or
and
stos
jle
mov
jmp
outsl
add
push
jge
sbb
das
jo
add
es
sub
dec
out
sub
pushf
jmp
lea
sub
clc
in
inc
fstpt
lock
iret
sbb
xor
inc
xchg
andb
sub
cld
push
push
push
xlat
adc
scas
xchg
fwait
xchg
adc
jbe
mov
add
adc
gs
stos
or
enter
or
cld
xor
ret
jb
dec
pop
mov
outsb
cltd
leave
inc
fstpl
loopne
jg
or
pop
lock
int3
jae
sbb
sub
cmpsb
push
mov
ds
jl
jle
add
xor
cmp
pop
push
xchg
dec
ja
call
aam
in
dec
mov
sub
shll
mov
cld
xchg
outsb
sbbl
mov
aas
call
pop
pop
clc
push
adc
sbb
nop
lret
pop
inc
jne
into
lret
stos
repz
iret
mov
mov
adcb
sbb
shll
cltd
xor
fistps
in
mov
mov
sahf
lods
fistpl
out
push
xchg
sti
xor
test
jne
adc
movsb
inc
popa
fs
les
xor
int3
nop
sbb
mov
jle
mov
arpl
mov
rcll
mov
adc
in
jmp
mov
mov
xchg
inc
mov
cmp
jno
push
int
xor
repz
imul
fldenv
mov
inc
xchg
aaa
pop
xchg
cs
aam
mull
loopnew
scas
into
mov
mov
lahf
rorb
div
mov
sub
push
cmp
gs
push
cmp
int3
in
rclb
dec
cmp
add
jns
sbb
in
test
and
push
push
mov
in
add
mov
cmc
jecxz
xor
fistps
cld
test
out
inc
mov
push
in
sbb
sti
xor
jae
xor
cmc
xchg
jb
icebp
xchg
xchg
sar
in
adc
inc
iret
add
jno
jno
mov
out
fisubrs
adc
enter
mov
add
inc
daa
push
scas
jge
fsubs
shrl
xor
mov
rol
xor
pop
mov
shlb
sbb
add
mov
adc
outsb
jl
mov
jmp
xor
sub
mov
cmp
es
jne
sbb
imul
stos
rorb
mov
mov
cmpsb
popf
dec
pusha
mov
cmp
loopne
inc
imul
xchg
or
mov
jne
xor
push
lret
aaa
out
lods
xor
sbb
jne
jl
dec
cmp
push
in
xor
arpl
push
rorb
stc
jg
inc
fwait
adc
push
cs
mov
fidivl
fsubl
push
repnz
mov
push
xchg
lods
xor
sub
jbe
in
or
clc
mov
cmp
scas
cld
jo
bound
out
aam
dec
inc
sbb
pushl
lret
lret
mov
push
arpl
pop
popa
mov
scas
lret
jecxz
push
push
hlt
insl
mov
hlt
dec
pop
and
fwait
inc
dec
xlat
cmp
out
xlat
loopne
mov
fsts
fistpll
jnp
lahf
arpl
mov
mov
out
and
inc
jg
inc
mov
cmpsl
xor
movsb
inc
pop
scas
lahf
cmc
fcmovu
inc
stc
mov
or
sub
imul
addl
mov
aad
push
mov
adc
pusha
daa
sbb
dec
jmp
rcl
icebp
in
cmc
mov
adc
loop
sub
mov
add
jmp
or
pusha
rcll
cmp
hlt
popl
inc
and
mov
in
ds
fnstcw
lods
loop
mov
push
in
cmpsb
or
xchg
xor
or
pop
out
pop
icebp
cmp
mov
or
jns
jecxz
push
xor
test
sub
push
ljmp
mov
xor
mov
xor
mov
ss
jbe
call
je
fwait
into
mov
call
mov
scas
mov
pop
pop
out
adc
jle
xchg
ss
loop
shr
push
adc
test
dec
or
sbb
les
popa
sub
pop
adc
add
faddl
push
imul
mov
orl
adc
add
rorb
ja
add
iret
adc
push
mov
movsl
gs
sub
jp
es
arpl
adc
or
inc
pop
push
stc
arpl
xor
mov
aaa
call
xor
xchg
gs
shlb
push
in
or
xchg
ficomps
cmc
sub
mov
cmc
mov
repz
mov
loopne
cld
jne
inc
mov
or
clc
and
push
std
addr16
xchg
repnz
data16
cmpsb
fsts
fmul
test
lret
or
lods
outsb
or
mov
out
push
cmp
stc
adc
jb
jnp
ret
inc
addb
lcall
je
sbb
or
xchg
xor
push
into
jge
std
mov
stc
lea
xchg
jbe
ret
and
mov
and
into
nop
into
sub
dec
sahf
push
xchg
out
jb
xorb
in
les
out
test
dec
jg
orl
xchg
pop
ret
pop
pop
add
pop
imul
aad
sub
sahf
ret
or
mov
les
adc
bound
and
cld
and
insb
mov
cmc
xchg
insb
jle
imul
jp
push
jle
pusha
jbe
sbb
mov
jo
insl
sub
jle
push
jp
leave
shrb
inc
add
in
into
in
jo
lret
inc
test
xor
orb
aam
xor
push
push
ret
popa
mov
push
pushf
sub
inc
fiadds
bound
jb
mov
mov
mov
mov
cwtl
pop
jl
push
inc
mov
xor
mov
inc
push
pushf
aad
push
dec
in
fwait
loop
pop
dec
dec
push
cmp
adc
mov
enter
cmp
faddp
push
cmp
std
xor
icebp
xor
push
loope
or
push
xor
xor
cld
sbb
cmp
lea
iret
xorb
imul
rcr
movsl
lods
sbb
test
add
pop
mov
xchg
dec
pop
mov
xlat
jnp,pn
push
gs
lcall
push
repz
xor
push
dec
test
and
sbb
inc
cmp
test
lret
pop
hlt
loopne
orl
mov
mov
xchg
pop
mov
or
lcall
pop
loop
and
mov
dec
or
mov
sti
icebp
fadd
push
movb
and
add
test
or
test
sub
mov
add
inc
sahf
cli
cli
jns
negb
incb
push
insl
pop
mov
arpl
mov
mov
jo
add
aas
pop
imul
dec
call
and
and
inc
lea
movsl
in
add
repnz
xchg
in
fists
push
mov
clc
stc
pop
dec
mov
cmp
fisttpll
mov
mov
pop
xor
iret
mov
sub
jnp
xchg
pop
pop
sbb
or
pop
testl
and
add
mov
adc
sub
push
stc
shl
aas
sahf
movntq
out
adc
divl
ret
fbld
cmpsl
or
inc
scas
lock
popa
dec
push
mull
pop
dec
ljmp
jge
xchg
mov
mov
hlt
push
push
mov
dec
inc
jp
shrb
sbb
sub
jns
sub
dec
test
jle
mov
icebp
in
push
xor
jge
int
stos
ds
jle
cmp
pop
fcoms
lahf
test
or
jnp
pop
push
adc
out
out
inc
xor
sub
push
aaa
das
pop
push
mov
and
ret
xchg
ja
pusha
jb
mov
xor
pop
push
cs
push
lods
mov
leave
popf
mov
push
outsb
hlt
ffree
mov
and
fwait
mov
cmp
aaa
hlt
stos
cmp
sbb
cwtl
clc
inc
inc
mov
jb
ljmp
add
repz
pop
adc
mov
xor
mov
popf
bound
jae
inc
add
xor
mov
xor
lea
andl
mov
lock
out
psrad
and
dec
aaa
mov
mov
xor
mov
mov
data16
shlb
lods
push
push
push
adcl
mov
mov
repnz
es
xlat
sbb
dec
data16
icebp
inc
xor
call
mov
outsl
popa
test
rorb
sahf
mov
aam
rorl
mov
mov
dec
mov
pop
jb
imul
fldcw
mov
int
push
and
mov
pop
dec
push
adc
shl
fxch
ja
mov
addb
fs
imul
mov
jae
and
jl
mov
xor
nop
sub
ss
pop
in
jp
mov
lods
fcoms
xchg
rcl
cwtl
push
dec
rcr
mov
cmp
call
scas
mov
fs
imul
adc
sti
inc
clc
mov
movsb
jle
pop
cltd
subb
pop
sahf
and
jo
ret
pop
push
pushf
rorl
and
and
es
out
aaa
leave
pop
sbb
inc
hlt
jl
fwait
movsl
push
inc
adcl
jp
or
lret
inc
inc
addr16
xor
mov
addr16
dec
out
mov
and
or
mov
out
sub
pop
add
xchg
daa
into
cs
sbb
jae
sbbl
sub
insl
cmc
arpl
and
pop
adc
test
push
xchg
sub
mov
inc
cmpsl
sbb
pop
movsl
pushf
jno
inc
push
jl
jl
lcall
dec
imul
test
dec
or
xchg
xchg
mov
cmp
imul
rclb
adc
fsubl
lret
cmp
popf
fcompl
and
xchg
sub
ret
mov
pushf
addr16
mov
jg
fdivs
or
lock
cli
add
cltd
xchg
xchg
aaa
inc
stos
sub
xchg
or
cmp
repz
data16
jns
mov
and
or
fadd
and
out
adc
enter
add
out
cld
stc
or
insb
mov
xchg
push
insb
mov
pop
mov
into
or
pop
pop
jmp
sbb
dec
fistl
testl
push
mov
cmc
aaa
inc
adc
pop
mov
jno
mov
mov
and
shlb
lahf
xor
pop
mov
mov
and
mov
jl
mov
jle
ja
or
stos
xchg
inc
jnp
in
ss
mov
pop
es
les
push
xlat
daa
mov
fsubs
test
inc
and
xchg
mull
fcmovnu
xor
jns
lea
sti
inc
mov
push
into
lods
iret
es
adc
ja
in
cmpsl
xchg
fildl
das
mov
pusha
and
out
mov
clc
test
mov
lods
ficoml
test
insl
or
and
insl
add
xchg
push
in
cmpsb
out
lods
push
xor
icebp
addr16
jno
lret
popa
push
ret
clc
sbb
inc
xor
fwait
dec
fiadds
add
add
or
jp
fdivrs
in
imul
xor
push
jecxz
loop
push
jge
add
iret
and
icebp
add
jne
popa
mov
dec
xor
fildl
mov
daa
push
mov
add
in
mov
xchg
mov
and
fidivl
addb
bound
cmp
xchg
mov
and
in
add
add
dec
add
xor
inc
incl
cmpsb
rcrl
pop
push
leave
repz
dec
adc
mov
add
xor
mov
cmpsl
jmp
sbb
push
jg
ljmp
and
mov
fdivrp
add
cmc
rcrl
test
test
push
leave
clc
icebp
dec
loopne
mov
jb
cmpsb
pop
aas
sub
push
int
sub
add
sti
pusha
dec
repnz
loopne
sub
mov
lahf
xor
add
aas
mov
mov
mov
nop
fnstsw
arpl
mov
in
mov
hlt
in
fs
push
ret
ror
add
xor
cmc
out
loope
inc
cs
mov
mov
mov
cmp
fldenv
mov
int
mov
addl
mov
repz
ss
or
aam
mov
std
rcr
pop
push
push
adc
or
dec
adc
imul
and
push
mov
sbb
xchg
int3
lods
popf
mov
sub
icebp
push
push
pop
lods
std
inc
pop
inc
jle
cmp
enter
lret
int3
js
rcll
stc
mov
mov
dec
std
mov
inc
scas
pop
mov
ja
pop
or
sub
cmpl
inc
pop
xor
jecxz
hlt
mov
mov
add
mov
nop
jecxz
inc
sub
loope
adc
loopne
jge
mov
mov
mov
outsl
mov
push
aad
or
pop
in
dec
scas
fnstenv
xor
out
dec
testb
or
push
mov
clc
or
mov
sub
sarl
cmp
mov
push
cmp
into
je
lds
xchg
xchg
stc
sbb
in
xor
mov
pop
xchg
mov
or
pop
cmp
pop
hlt
cmp
cmp
and
push
aad
push
mov
or
lds
add
sub
pop
rorb
add
add
pop
int3
stc
xchg
cmp
mov
xchg
mov
sbb
inc
and
sub
and
filds
or
divb
sbb
add
push
mov
sub
loop
rclb
cs
sahf
lret
pop
shll
push
xchg
test
pop
in
loopne
mov
jp
test
dec
xchg
sub
clc
adc
cmc
cs
sbb
jecxz
fstl
sbb
mov
bound
xor
push
aas
mov
stos
idivl
popa
test
mov
ss
mov
into
inc
dec
jle
in
arpl
lret
fiaddl
push
les
mov
je
fldl
sub
mov
or
in
add
out
lods
and
dec
xchg
mov
jle
jmp
and
bnd
xchg
clc
popf
shrb
jle
pushw
sub
mov
xor
cmp
ds
push
cmpl
faddl
sbb
cmc
jmp
adc
iret
nop
fimuls
std
icebp
cmp
les
xchg
mov
aaa
push
es
push
mov
mov
ret
mov
popf
cwtl
pop
leave
and
sbb
dec
inc
and
es
mov
mov
xchg
or
rorb
mov
fimull
decb
loopne
adcb
pushf
sub
enter
mov
and
mov
mov
sbb
adc
push
das
or
pushl
in
aad
xchg
fidivrs
dec
hlt
popf
imul
sub
icebp
cs
inc
dec
test
inc
addl
sub
scas
adc
clc
ret
cmp
mov
notb
pop
jmp
outsl
loop
ss
and
sbb
ss
je
arpl
clc
xchg
in
cwtl
mov
in
mov
movsl
loope
or
sbb
xchg
dec
imul
test
fldcw
mov
mov
jmp
inc
popa
pop
lods
sbb
xchg
aam
jae
addl
jbe
outsl
mov
movsl
jge
into
lea
dec
mov
mov
das
jns
leave
jns
pop
inc
push
or
imul
loopne
insb
and
mov
sahf
mov
shll
mov
outsl
cmp
inc
fists
out
dec
dec
movsb
int
pop
test
subl
popf
inc
loop
push
push
pop
les
jb
sub
ljmp
pop
int3
adc
scas
sahf
outsb
mov
xchg
sahf
rcrl
popa
addb
jnp
outsb
jmp
xor
es
sbb
stos
lret
adc
test
in
pop
test
int
dec
les
lock
sahf
inc
jne
imul
das
sbb
jne
mov
jnp
cmp
imul
dec
add
cmp
jo
mov
cld
int
sub
out
sub
jl
enter
loope
outsb
and
sub
shl
mov
mov
enter
rcr
xor
enter
jnp
sbb
cltd
add
or
popa
mov
xchg
add
popa
or
push
dec
pop
lods
jp
add
mov
shrl
cs
fdivrl
es
imull
fcompl
std
in
xchg
dec
test
aad
ja
inc
xor
push
in
imul
add
fs
mov
xlat
mov
jmp
sbb
push
jg
or
xchg
add
push
mov
outsl
lods
stos
rorl
mov
jl
shrb
lcall
mov
lcall
pop
insb
sbb
dec
out
push
lahf
test
inc
loope
aaa
push
les
ja
out
jno
or
pop
into
mov
mov
jne
popf
aam
mulb
push
call
lods
sbbl
ljmp
push
or
jl
inc
ret
inc
pop
jo
mov
popa
insb
into
adc
inc
push
cmp
sbb
subl
and
mov
aam
sbb
in
pusha
mov
sbb
cmp
push
push
inc
xchg
pop
aaa
inc
pop
xorl
pop
aaa
enterw
cmp
sbbl
jge
mov
lods
adc
adc
aaa
aas
mov
pop
xor
mov
in
mov
xchg
nop
and
mov
cltd
inc
xchg
loop
push
lret
push
js
cmpsl
xor
sbb
bound
push
dec
imul
jp
dec
xlat
cmp
outsb
fs
or
jp
sbb
mov
insl
sbb
test
roll
add
fsubrs
int3
outsb
insl
icebp
or
sub
adc
jbe
imul
push
out
push
jo
clc
aad
out
fxam
jae
out
jne
scas
inc
in
in
and
sub
pop
repz
sbb
push
push
js
test
add
daa
fs
pshufw
and
and
xor
nop
xchg
jns
out
addl
jo
scas
in
lretw
pop
loopne
xor
xchg
pop
pop
fmull
mov
scas
out
cmp
jge
lea
popf
sahf
sti
xchg
pop
cmp
jne
sti
div
jle
add
add
add
push
bound
xchg
in
loopne
sbb
arpl
inc
sub
adc
or
sbb
aas
push
inc
dec
and
push
test
in
addr16
nop
stc
idivb
push
sbb
loopne
pop
out
cmp
sub
and
xor
sbb
cmp
jecxz
dec
js
inc
adc
nop
dec
mov
dec
jle
sub
pop
mov
stos
pop
addr16
cmp
xchg
pop
dec
jb
mov
pop
sub
movsb
mov
rorl
add
and
les
js
enter
rcrl
popa
jmp
data16
jo
mov
loope,pn
lods
imul
inc
fadds
pop
jle
cmp
fwait
xchg
sbb
push
jnp
sahf
stos
xor
adc
xchg
jnp
sahf
xchg
movsb
mov
adc
fstps
mov
xchg
fmull
repz
sub
mov
mov
pop
jo
aam
shrb
cltd
push
iret
cld
arpl
icebp
call
jns
mov
sarb
pusha
test
inc
xor
sub
movsl
or
xlat
adc
inc
gs
call
scas
cmpsb
push
imul
and
mov
test
js
jne
or
or
jne
and
sbbl
cs
push
dec
inc
lods
xchg
lcall
jecxz
inc
or
shl
push
xor
data16
enter
aaa
fwait
scas
mov
xor
std
pop
inc
inc
into
fldt
daa
or
stos
xchg
test
repz
out
cmp
sbb
add
xchg
rorl
jns
pop
add
in
into
insb
pop
or
mov
dec
in
adc
mov
insl
xchg
pop
fwait
addr16
pop
std
xchg
or
add
pushf
ret
lods
inc
sbb
sub
nop
popa
fidivrs
mov
push
cltd
lret
es
js
mov
das
insl
mov
push
mov
lahf
imul
ret
jl
inc
adc
popf
in
xchg
mov
bound
repnz
data16
cwtl
adc
mov
js
imul
xor
loopne
sub
add
lahf
push
mov
sahf
xorb
pop
mov
push
jge
cmp
add
movsl
out
fcomps
movsb
and
clc
or
and
inc
shrl
jecxz
js
cs
adc
out
lret
ret
dec
outsb
imul
fisubrl
lret
pop
cs
stos
lock
cmpsl
push
inc
adcb
aaa
ficoml
hlt
jg
ja
add
daa
adc
sub
pop
loopne
or
dec
into
cmpsl
aaa
sub
outsl
mov
mov
sub
push
jae
jmp
dec
mov
mov
mov
cltd
add
sub
mov
dec
lcall
dec
cmpsb
adc
pop
mov
inc
xor
data16
jmp
sahf
nop
sarb
daa
xor
mov
push
push
pop
and
out
jp
popa
jle
lods
and
loop
inc
pop
clc
ret
cmpsl
push
push
ret
in
push
push
enter
lock
xorb
cmp
adc
inc
sub
fwait
cmp
imul
sahf
rcl
pop
mov
mov
xor
push
out
cmp
jge
insb
sub
rorl
subb
pop
xor
sub
cmp
jmp
mov
in
sbb
outsl
repz
ret
mov
pop
and
push
outsl
mov
mov
rcrb
cmp
aam
scas
pop
in
repz
xor
fldt
xor
and
mov
adc
fucom
icebp
pop
inc
mov
pop
stc
loop
jo
lods
push
pop
lret
or
fstpt
and
repnz
sub
ss
sub
mov
jmp
call
adc
daa
adc
jne
out
push
dec
pop
inc
xor
leave
ret
test
or
shrb
push
xor
sahf
fisubs
aaa
jmp
mov
out
add
pop
dec
cvtpi2ps
sbb
add
je
sbbl
sub
sub
mov
loop
lods
scas
addb
sahf
xor
inc
bswap
sahf
sub
std
enter
mov
adc
inc
push
push
xor
inc
ss
sub
dec
jl
mov
popa
dec
rolb
mov
cmp
and
cmpsb
negl
jp
loopne
xorb
pop
in
mov
mov
mov
pushf
lcall
xchg
mov
add
inc
adcl
mov
push
sbb
fwait
dec
adc
das
push
orb
xor
cmp
sub
push
push
sbb
cmp
mov
in
fbld
cmp
flds
out
mov
ljmp
jg
out
sbb
xchg
jae
es
lret
repnz
jb
pushf
and
jp
lcall
push
push
and
or
shlb
mov
lds
fcoms
insl
testb
outsb
test
movsl
jb
push
pop
push
pushf
dec
pop
lret
mov
gs
or
xchg
insb
inc
dec
xchg
fbstp
sub
int3
das
xchg
cmp
cmp
out
int
xchg
jns
inc
and
loop
and
push
jmp
lcall
sbb
cwtl
mov
mov
notl
mov
insb
out
push
popa
or
sub
push
imull
rcl
mov
mov
cs
mov
dec
sub
pushf
rcrl
rclb
and
aad
sub
add
mov
sarb
cmc
fstp
popw
xor
and
xorb
addr16
shll
outsl
outsl
paddw
add
or
scas
stos
les
adc
sub
mov
or
in
fists
mov
lds
inc
push
sahf
mov
pop
xchg
jno
cwtl
xchg
int3
sub
dec
les
outsl
insl
outsl
jne
scas
out
shrb
mov
xor
fnstcw
dec
jle
enter
and
xlat
cld
push
aad
pop
out
push
std
fiaddl
lods
and
popa
adc
or
in
pop
push
xchg
jle
push
xchg
mov
lods
enter
sub
or
sub
dec
jo
xchg
fdivrl
add
fisubs
les
mov
ss
push
outsl
sahf
or
sub
add
fisttpl
inc
add
jmp
lret
jmp
loop
stos
push
enter
popa
sub
mov
or
in
f2xm1
lods
xchg
pop
mov
mov
mov
cmp
fldl
into
sub
aam
mov
jecxz
int3
lcall
mov
lahf
ljmp
cmp
std
sahf
pop
pop
xchg
icebp
xchg
mov
sbb
lret
sub
mov
loop
stc
out
lock
out
rolb
lods
push
notl
add
in
js
fucomi
std
cmp
jns
std
filds
adc
sub
inc
pop
sti
cmpsl
in
int
xchg
and
fmulp
sbbb
push
in
pop
jbe
sub
leave
test
loopne
test
xchg
push
push
jp
sub
dec
fcomi
or
sbb
pop
pusha
insb
or
fcmovnb
jg
sub
mov
std
dec
data16
lods
in
loop
xchg
imul
clc
jo
imul
and
push
mov
mov
outsl
mov
out
jb
mov
js
out
push
push
popf
stos
dec
out
mov
mov
daa
mov
cli
cwtl
inc
mov
adc
adc
sbb
adc
test
cmpsb
mov
insb
insl
push
add
fnstsw
push
aaa
mov
xchg
fwait
rorb
sbb
icebp
jnp
cmp
dec
mov
ss
jae
and
lds
mov
ds
das
out
addr16
jmp
adc
jo
in
push
arpl
ljmp
inc
ret
mov
cs
imul
mov
add
xchg
or
loope
std
shlb
fcompl
iret
push
pop
pop
jae
ficomps
xor
xchg
mov
lret
ljmp
sti
loope
movsl
cltd
dec
jle
jbe
pop
or
call
lret
outsl
cmc
jae
fisttps
repz
out
mov
inc
aaa
sbb
out
mov
xchg
cmp
pop
fildll
arpl
xchg
pop
lock
push
fidivs
inc
mov
fisubl
int3
loop,pn
and
out
ljmp
lahf
jmp
jne
sahf
add
mov
push
xlat
pop
ljmp
xor
lds
test
adc
or
aad
or
jge
adcb
dec
add
cmp
cmp
nop
aad
sub
mov
jne
outsl
jae
test
pusha
mov
lcall
mov
dec
icebp
out
js
xor
jno
pop
or
mov
in
stc
xor
ds
lahf
cs
mov
inc
popf
or
das
dec
dec
aad
add
lret
out
jne
out
push
test
inc
in
dec
pop
movsb
nop
hlt
inc
sub
pop
mov
nop
dec
xor
pop
dec
xchg
inc
or
jle
pop
or
cmp
into
not
ret
mov
jno
fbstp
sub
sub
sub
cli
arpl
pop
dec
mov
mov
ret
mov
add
arpl
ds
xchg
shll
inc
cmpsb
add
aam
jg
push
mov
out
inc
add
repnz
and
js
in
xor
sub
insb
mov
lods
mov
mov
lret
idivb
pop
imul
xchg
mov
fimuls
test
xchg
jge
push
es
jl
popa
push
and
aam
xlat
adc
dec
inc
xchg
fistl
cmp
movsb
jnp
push
fldcw
cmp
xorb
ficomps
jecxz
xor
adc
xor
xchg
jne
mov
dec
xor
sub
das
imul
cmp
inc
addl
stos
pop
add
mov
dec
int
idiv
or
test
push
lock
in
xchg
lcall
je
mov
pop
or
lret
xor
aam
sub
insl
fbstp
ret
outsl
and
inc
rcl
mov
outsb
push
push
adc
dec
les
fisubrl
call
push
shl
sbb
loope
pop
cld
xor
das
fimull
xchg
scas
mov
in
aaa
or
test
addps
nop
dec
dec
ret
lret
dec
xchg
pushf
mov
inc
inc
jnp
adc
fsubr
mov
int3
out
jb
mov
fucomip
hlt
jge
aad
fistl
jbe
cmpsl
loopne
enter
jp
loope
inc
push
xchg
js
jbe
lret
ja
stos
test
mov
cwtl
cwtl
dec
push
mov
sbb
pushl
loopne
gs
jmp
enter
mov
aam
sbb
subl
mov
sub
xchg
pop
out
in
cmpsb
pop
mov
inc
sbb
mov
dec
adc
adc
sub
sahf
pop
in
mov
test
lcall
fcmovbe
dec
imul
stc
aad
push
jecxz
dec
test
decb
mov
mov
icebp
and
sbb
repz
xchg
add
pop
das
inc
out
xlat
in
js
fldenv
jb
fstpt
incl
in
imul
mov
mov
adc
mov
outsl
inc
mov
arpl
repnz
mov
in
clc
cmc
push
xchg
lea
xor
sub
phsubsw
movsl
or
lea
push
pop
out
pop
mov
not
jne
mov
cltd
inc
aad
xchg
cmp
sbb
inc
out
mov
adc
out
mov
fs
fildl
sarl
stos
popf
insb
and
in
ljmp
cmpsb
or
gs
mov
ja
xchg
repz
movsl
sbb
and
cmc
in
mov
imul
dec
mov
add
jmp
jno
repz
out
aas
adc
mov
in
aas
jle
fwait
add
lods
xchg
mov
mov
out
scas
flds
sbb
inc
cltd
out
jmp
xchg
cmp
adc
pusha
loopne
pop
adc
cmp
xor
lret
int
xchg
loope
cmp
adc
loope
lret
and
or
sbb
addl
jb
in
add
pop
fwait
vorps
imull
jae
nop
mov
xchg
or
xchg
js
xlat
cli
adc
dec
imul
jl
add
push
scas
fwait
sub
dec
in
cmp
dec
das
nop
arpl
xchg
es
xchg
mov
mov
vxorpd
jb
mov
sub
pop
pop
inc
push
mov
jns
stos
push
mov
xchg
dec
and
scas
ja
fmul
cmp
push
rcl
mov
or
push
cmp
sub
sbb
push
shrl
cmp
inc
xchg
mov
addr16
fmull
mov
divl
f2xm1
sbb
xor
or
mov
popa
aad
sbb
shlb
or
inc
and
mov
jae
rolb
cmp
idivl
out
pop
sub
ret
notb
cmc
mov
mov
jns
into
lahf
dec
xorl
add
push
es
xlat
push
fimuls
add
cli
cltd
push
bound
dec
mov
cmpsl
iret
add
xchg
adc
popf
nop
movsl
jp
inc
xchg
insl
daa
in
xchg
dec
mov
and
pop
dec
ds
mov
pop
mov
int
xor
sub
pusha
dec
inc
in
stos
adc
xlat
and
dec
inc
insl
lods
mov
xor
xlat
fxch
stc
pop
jae
into
stos
out
mov
xchg
cmp
or
sbb
cmp
lods
call
outsl
hlt
stos
jne
hlt
pushl
adc
xchg
sbbb
leave
adc
mov
cmp
adc
fs
fnstsw
clc
push
rcll
inc
sub
mov
ljmp
xchg
xlat
xchg
iret
dec
scas
dec
sti
enter
mov
and
lock
mov
or
push
sub
dec
fdivs
out
mov
stc
out
push
xchg
jo
inc
mov
or
repz
in
aad
cmp
and
add
fdivr
sbbl
mov
jle
mov
xchg
jg
fstpt
mov
cmp
rorb
ljmp
jmp
jnp
aas
cltd
inc
add
pop
imul
out
cmp
mov
ret
push
mov
ss
insb
mov
popa
adcb
push
pop
xor
call
adc
add
mov
mul
sub
into
lret
mov
repnz
sbb
add
pop
jnp
sahf
clc
push
sub
pop
popa
mov
in
shl
std
jns
xchg
clc
inc
push
jg
jmp
nop
nop
test
xor
ret
aaa
jb
or
pop
imul
lahf
xor
mov
xor
push
and
jg
and
push
mov
stos
daa
xor
test
cwtl
mov
lods
jne
out
inc
xchg
and
mov
sbb
js
mov
xchg
imul
cmp
in
xlat
icebp
fisttps
mov
aam
add
mov
dec
mov
ror
xor
lea
jno
push
dec
jb
pop
sub
inc
scas
mov
arpl
icebp
repz
dec
es
mov
loope
xor
cmp
jmp
in
jbe
add
imul
push
push
adc
mov
xchg
inc
pop
cmc
sbb
ret
push
dec
or
sub
mov
inc
sbb
cmp
sub
jp
lods
sbb
movb
scas
mov
dec
int3
lcall
scas
das
andb
jge
fldenv
call
xchg
loopne
imul
mov
mov
test
sub
xchg
ret
and
pop
insl
adc
nopl
cmp
xor
or
and
dec
dec
pop
outsb
pop
jecxz
xor
jb
movsl
add
enter
jge
shll
mov
pop
jg
or
das
addr16
mov
jge
mov
sub
push
mov
dec
xchg
addr16
pop
push
bound
pusha
cmp
in
fdivrs
mov
xor
pop
popa
pop
cmp
scas
jmp
pop
and
adc
push
mov
sub
push
jmp
es
aas
mov
jns
push
xchg
xor
imul
cmc
insl
adcl
pop
movsb
popf
and
loop
aam
sbb
test
cmp
pop
xor
aam
mov
cmp
inc
or
clc
push
xchg
enter
ret
pop
orl
xchg
rclb
sahf
cmpsb
xchg
jno
inc
inc
adc
mov
loope
sub
xor
sub
sbb
shrl
ss
inc
sub
movsl
stc
inc
int3
xchg
push
aad
cmp
adc
push
cmp
xor
and
aas
push
add
in
insb
mov
push
into
hlt
rol
pop
lods
cmp
dec
icebp
into
cmpsb
stc
mov
jno
and
in
aas
mul
test
in
mov
nop
cmp
ljmp
mov
xor
jno
jns
insl
aaa
xlat
fildll
nop
push
add
insl
call
lods
lods
pop
inc
icebp
les
cmp
cltd
out
adcl
jo
mov
jb
cmp
sti
sti
stos
xor
mov
xchg
in
loop
pop
pop
jle
aam
cwtl
lds
aam
insl
xor
call
test
mov
jmp
mov
movsb
ds
lcall
sub
xlat
and
mov
insb
jecxz
cmpsb
stos
or
jb
repnz
xor
test
das
movsl
dec
mov
mov
mov
fmuls
jb
inc
mov
ret
mov
xor
jl
jecxz
mov
mov
sbb
jnp
pop
shlb
push
fidivs
movsb
adc
call
stc
and
dec
fbld
sub
jns
sbb
dec
rolb
ds
inc
push
aaa
scas
xchg
fsubl
imull
inc
into
jg
pop
fdivl
dec
mov
loopne
mov
test
mov
daa
out
and
mov
push
jle
sbb
test
pop
inc
jbe
addr16
in
sub
push
notb
movsl
jp
xlat
xor
xlat
loope
cs
int
jle
xchg
das
mov
das
in
mov
popa
ja
pop
pop
lods
scas
mov
cmp
das
dec
mov
pushl
lock
fimull
roll
out
sub
jge
mov
and
xchg
and
aas
sub
inc
jge
cmp
mov
and
sbb
adc
out
repnz
aam
sbb
inc
dec
lea
jbe
ss
sahf
gs
sbb
mov
ret
mov
outsb
mov
es
fidivrl
fimuls
push
cmp
sbb
sahf
mov
lret
sbb
loope
stc
inc
mov
scas
sbb
push
test
shll
fdiv
clc
jecxz
xchg
aad
fstpl
mov
push
enter
adc
jmp
mov
mov
xchg
pusha
jl
in
xor
fs
out
xchg
pop
dec
scas
shl
pop
mov
cmpb
movsl
inc
shl
aad
inc
pop
mov
cmp
push
and
out
leave
sbb
jnp
outsb
js
and
leave
sbb
lea
add
inc
out
jnp
fwait
add
repz
and
jb
jo
rcrb
into
adc
cli
mov
fucom
pop
add
pop
mov
pop
mov
pop
outsl
lds
in
and
jb
jle
push
and
dec
mov
loop
hlt
mov
stc
lcall
xor
cltd
jns
xchg
inc
ds
xchg
out
in
mov
jp
or
ret
std
pop
jo
sub
popf
inc
popf
popa
ret
pop
test
cmp
pushf
jnp
pop
push
int3
mov
push
xchg
icebp
xor
dec
icebp
ja
out
lcall
lds
ret
ljmp
inc
push
cltd
mov
adc
ret
stos
lds
mov
mov
xchg
lods
adc
dec
clc
add
test
frstor
inc
push
cld
cmpsb
jno
cmpsb
push
pop
lret
dec
push
adc
ds
dec
pop
pop
and
push
lods
imul
insb
cmp
adc
sbbb
push
and
out
fwait
gs
sbbl
jge
dec
sbb
into
shl
mov
imul
sahf
stos
add
je
movsl
addr16
mov
sub
mov
fwait
jae
xor
rcll
push
inc
es
xlat
pop
mov
shl
roll
ss
lret
inc
rcll
mov
cld
pop
cs
sarb
add
add
jno
sub
xchg
lea
pop
repz
fcmovbe
cltd
mov
mulb
and
rcr
add
mov
cmp
push
in
mov
inc
sbb
sahf
mov
shrl
xor
or
imul
xor
lods
xor
jecxz
mov
fistl
inc
sbb
mov
scas
mov
dec
push
and
icebp
iret
dec
test
jnp
pop
stos
shrl
std
cmp
stos
jb
das
sub
in
push
out
imulb
addr16
nop
mov
push
std
push
shll
dec
push
adc
xchg
js
adc
notl
lock
and
sbb
add
xor
xchg
sbb
jnp
xor
inc
ljmp
scas
pop
mov
cmp
lods
mov
fcoms
movl
loope
int3
iret
daa
loope
std
int3
pop
add
dec
and
pop
inc
jo
repnz
pop
adc
cmp
cmp
jp
fcmove
mov
sub
jae
and
stos
sbb
jecxz
mov
and
adc
je
mov
push
adc
ret
jmp
dec
hlt
cmpsl
adcb
mov
sbb
pop
test
mov
and
stos
cwtl
popa
jmp
dec
cmp
jne
jl
lcall
push
dec
dec
es
jnp
lock
mov
inc
xlat
pop
out
cmp
nop
outsl
fdivl
xchg
les
mov
ret
push
jl
loopne
fbld
dec
inc
lret
ds
dec
or
shlb
call
nop
sbb
mov
add
add
ret
mov
adc
pop
clc
outsb
push
addb
ds
rorl
push
scas
add
xor
stos
cmp
insl
lret
inc
add
mov
xchg
scas
xor
mov
rorl
lret
cmp
dec
pop
sub
mov
shrl
mov
pushf
sbbl
xchg
adc
lods
or
negl
xor
xlat
out
lcall
lret
orl
ffree
and
cmp
mov
pusha
inc
js
sub
add
or
out
xchg
xor
insl
adc
push
mov
jg
sahf
jl
jb
clc
sub
movsl
fisttpll
loopne
push
inc
mov
bound
cwtl
and
pop
push
cmp
shrl
or
push
iret
scas
lods
cmp
xchg
adc
mov
push
fsubs
fsubrp
xor
ljmp
pop
mov
fcoml
and
cs
xchg
test
cmp
rorl
cwtl
arpl
and
cmpsb
jae
fdivl
ficompl
lahf
pop
sub
jns
daa
cmp
push
les
cmpb
repz
cmpsb
jo
mov
ret
fimuls
pushf
lods
cmpb
inc
lods
cmp
push
pop
scas
iret
int
or
inc
xchg
jnp
in
out
aam
add
test
nop
mov
adc
fsubr
hlt
and
in
call
test
mov
xor
dec
jb
sbb
lock
fdivrl
mov
jge
stc
or
sub
rolb
pop
add
sbb
xchg
pop
adcb
idivb
scas
cmp
mov
adc
pop
cld
in
push
push
adcl
jmp
push
jno
roll
and
dec
fiaddl
adc
push
addl
ds
shrl
mov
xor
and
jnp
add
sahf
mov
lcallw
inc
aam
push
push
dec
loopne
xor
sbb
pop
xor
lret
arpl
pop
jo
lea
inc
and
jecxz
push
in
dec
jg
xchg
cmpl
fisttpl
loopne
jecxz
inc
jb
pop
jle
scas
outsb
push
outsl
insl
inc
mov
add
dec
int3
add
mov
pop
test
ds
inc
sub
mov
sub
mov
jl
enter
cmpsb
push
mov
dec
xchg
mov
adc
mov
repnz
and
out
cmp
xor
scas
cmp
cmp
pop
xor
add
stos
subb
push
movsb
add
lods
lea
test
stos
dec
jecxz
jle
hlt
mov
sub
das
push
cwtl
in
sbb
jp
sub
and
jmp
movsb
ja
push
sub
mov
mov
or
dec
out
out
jg
mov
sbb
movsb
call
call
xor
push
nop
in
or
nop
or
push
in
jp
inc
jns
xchg
cmc
dec
out
sbb
xchg
test
adc
push
ljmp
jge
adc
pusha
xor
lods
or
arpl
jbe
or
sahf
dec
and
inc
pop
int3
decb
jp
in
mov
ficomps
sub
inc
sbb
pop
mov
sub
sbb
xchg
or
jg
mov
pushf
and
push
aas
jmp
out
xlat
montmul
cmpsb
add
inc
mov
popf
leave
outsl
shlb
mov
lock
xor
out
inc
jb
inc
push
andl
push
stos
xchg
mov
shl
or
add
shlb
rcll
push
push
sbb
lea
test
rorb
insl
jg
orl
lods
jne
test
pushf
lods
hlt
in
repnz
adc
push
ljmp
pop
out
mov
xchg
outsb
or
lods
dec
stos
cmp
mov
push
fstp
adc
pop
lods
adc
push
orl
sub
sbb
sub
cmp
stc
idiv
add
mov
or
push
mov
mov
notb
pop
nop
in
data16
stos
mov
mov
fdivrs
sub
pop
xor
stc
stos
cmp
add
dec
pop
add
pop
jle
or
or
dec
jnp
sub
dec
jbe
inc
pop
pop
aam
sub
mov
push
nop
js
arpl
dec
and
mov
or
addr16
adc
push
imul
mov
cmp
scas
div
scas
pusha
hlt
xor
int
jo
lret
jecxz
loope
imul
aaa
dec
mov
mov
pop
leave
pop
in
mov
mov
mov
push
ss
addr16
repnz
and
and
mov
xor
push
cmp
mov
bound
xchg
aaa
sti
loop
dec
add
xchg
and
or
loopne
je
add
xchg
int3
push
or
adc
add
popa
insl
jp
mov
dec
push
cld
dec
cmp
sub
mov
or
sbb
inc
insb
aad
mov
sub
dec
push
mov
out
sub
imul
jmp
bound
lods
scas
enter
idivl
push
lcall
xchg
and
jo
pop
and
cli
push
ret
orb
or
pop
xor
sub
xor
insl
xor
icebp
mov
dec
push
lahf
mov
cmpsb
adc
call
mov
mov
js
fwait
push
pop
movsl
std
sub
jg
call
jmp
mov
rorl
mov
dec
insb
lahf
push
xor
and
ja
mov
fs
jae
popf
ljmp
or
in
or
pop
xchg
inc
movsl
sbb
xor
dec
inc
adc
jae
xor
insb
test
sub
jp
fiadds
movsl
inc
inc
repz
and
ss
cmp
cmp
das
addr16
mov
cs
int3
sbb
hlt
fs
mov
les
jmp
adc
sti
lds
jno
xchg
iret
pop
adc
stos
add
cltd
xchg
mov
inc
add
xchg
mov
aam
mov
jb
icebp
xor
fldt
das
xor
xor
mov
popa
sbb
and
js
adc
dec
aas
cmp
subl
outsb
or
in
ds
pop
cwtl
xor
in
sarb
movsl
inc
mov
out
fstps
lcall
or
std
mov
mov
adc
rcll
out
dec
negb
mov
add
mov
leave
inc
and
push
cmpsb
and
cmc
mov
lods
xchg
mov
lods
jge,pn
push
mov
cltd
in
faddl
cwtl
xlat
pop
stos
ljmp
cmpl
push
js
sub
ror
stos
push
pop
test
testl
insl
push
inc
dec
add
cmpsb
add
xor
mov
insl
fistpll
pop
out
loopne
dec
push
inc
mov
cs
in
sbb
test
ficompl
test
jae
or
fwait
push
addr16
push
rorb
mov
les
mov
push
cli
mov
mov
cmc
hlt
loop
pop
lret
jbe
int3
test
mov
ret
rcpps
or
add
jnp
daa
and
ja
sub
cmp
pop
daa
xor
in
jne
mov
jno
lds
xchg
xor
sbb
inc
testl
xchg
and
lock
cli
mov
dec
mov
mov
rclb
push
xchg
pop
pop
xchg
jno
adc
pop
inc
es
push
popl
xchg
cmp
fadds
dec
add
mov
pushf
scas
insb
jecxz
push
cmp
pop
xlat
pmaddwd
mov
in
loop
movsl
and
jecxz
push
ja
push
dec
inc
lret
test
rcrl
jecxz
stc
or
icebp
sar
pop
sub
dec
adc
es
push
jl
imul
negl
cmpsl
and
popf
dec
mov
mov
sbb
pop
inc
fldl2t
jne,pt
dec
lods
flds
nop
mov
or
shll
pop
std
orb
les
lock
mov
push
mov
scas
xorb
outsb
in
push
cmc
fwait
repnz
push
xchg
daa
pop
in
jbe
call
iret
mov
adc
cltd
adc
adc
cmpsb
xchg
or
mov
pop
pushf
dec
inc
or
cmp
cmp
mov
push
add
inc
cmp
pop
imul
xchg
les
ljmp
imul
fs
jle
add
pop
ds
arpl
pusha
xchg
sarl
mov
les
rolb
cltd
test
jns
lret
xor
out
stos
jno
gs
fidivs
sub
adc
xchg
cmc
pop
int3
sar
sahf
cli
repz
ret
jge
or
aas
mov
pop
mov
int
les
ja
pop
lds
fistpll
test
push
jle
dec
sub
bound
loopne
pop
fcoml
jbe
ret
sbb
addb
jmp
xchg
jp
mov
mov
ja
xchg
fsubrs
xor
mov
or
loope
lock
jg
insl
jo
fwait
das
ds
push
or
call
or
ss
adc
in
mov
shlb
mov
ret
xchg
jge
lock
lods
and
iret
pop
push
inc
jge
cmp
xchg
leave
leave
rolb
fnsave
cmpl
pop
mov
sbb
imul
mov
gs
repz
addb
repnz
cmpsl
mov
lds
jbe
loope
fisubrs
sub
sbb
cli
test
jno
jne
mov
pop
test
jl
cwtl
sahf
xor
xor
push
out
lret
xchg
mov
in
xchg
scas
insb
xchg
xchg
inc
sbb
or
mov
adc
test
pop
cmp
adc
or
sahf
inc
sahf
loop
xchg
out
test
and
daa
stc
pusha
xchg
cmp
sbb
movsl
nop
dec
insb
push
fs
bound
sbb
adc
in
jae
inc
in
adc
or
xchg
aaa
rclb
jns
dec
pop
pop
and
rcrb
jb
icebp
mov
cli
mov
fidivrl
testb
mov
add
les
out
sbb
sti
pop
sbb
add
xor
push
in
add
mov
test
pop
loopne
nop
cmc
dec
jp
arpl
sub
mov
negb
mov
add
sub
fdivs
fdiv
push
adc
push
push
leave
in
xchg
inc
iret
add
and
lods
or
cmp
jge
ljmp
daa
call
jbe
fstpt
pop
jecxz
sub
jge
mov
stos
adc
mov
in
jecxz
lds
hlt
pop
scas
jle
and
std
imul
jb
jle
fsubrs
cli
mov
jl
aaa
mov
xor
mov
xor
sbb
xchg
xor
jnp
mov
or
pop
pop
sub
push
pop
icebp
icebp
iret
and
arpl
adc
and
fyl2xp1
scas
loop
mov
mov
dec
adcl
mov
jmp
bound
pop
addl
subb
stc
mov
in
push
mov
pop
aaa
in
and
enter
stos
cld
pop
mov
push
arpl
cmpsl
sbb
in
add
adc
xor
lock
iret
push
cmp
mov
dec
mov
mov
int3
add
jae
test
icebp
ss
cmp
je
jmp
lods
sub
flds
xchg
mov
and
xor
mov
push
add
clc
mov
or
mov
pushf
xlat
iret
jp
ret
mov
ljmp
pop
dec
jae
fadd
ss
fwait
lds
adc
pop
loopne
lret
inc
adc
cwtl
and
adc
ret
cmpsl
ljmp
repz
inc
andb
movsl
movsb
lret
mov
popf
jb
mov
mov
push
jge
cltd
inc
enter
dec
adc
fs
sti
mov
lcall
adc
lock
jl
xor
in
sbb
lock
add
nop
push
nop
mov
movsb
sub
push
iret
test
cmp
out
jbe
fcoms
add
pop
add
stc
mov
fsubrl
test
push
mov
dec
sbb
mov
sub
pop
cmp
loope
xor
lods
jp
lods
idiv
dec
sbb
add
xor
inc
jg
aad
ljmp
outsl
or
test
dec
adc
es
ret
adcb
testl
push
sahf
jo
add
test
mov
push
mov
cld
cmp
iret
pusha
jo
adc
rol
xchg
mov
decl
xlat
imul
dec
jo
push
push
xchg
sbb
loop
pop
cltd
xorb
jmp
addr16
xchg
and
push
dec
push
aaa
push
fiaddl
int
jns
push
repnz
pop
pop
mov
inc
cmp
jle
aas
mov
shrb
push
stc
mov
push
icebp
dec
mov
bound
inc
xchg
iret
sbb
ror
repz
xor
es
mov
paddusw
adc
mov
js
sbb
rcrb
dec
cwtl
cwtl
in
fildl
aas
jnp
xor
push
pop
xchg
out
push
dec
jmp
mov
add
sbb
out
dec
jg
or
push
cmp
pop
pop
mov
insb
mov
dec
call
cmc
lret
test
and
movsl
dec
and
es
aam
ds
xchg
mov
and
dec
adc
cmp
inc
testl
jns
sbb
jle
jmp
mov
and
loopne
repz
mov
call
xor
or
addb
mov
rol
movsl
sti
xor
inc
push
push
lcall
jb
mov
in
bound
push
inc
mov
iret
out
xchg
fisttpll
insb
inc
pushf
outsl
jmp
test
or
shlb
cmpsl
loopne
cli
fdivrp
jp
pop
jns
jg
lcall
das
pop
jmp
gs
and
js
fidivl
test
insb
clc
push
xchg
push
mov
ljmp
call
shrb
daa
insl
loope
lods
mov
push
ss
sbb
adc
push
pop
mov
inc
jle
xchg
jne
and
test
sbb
adc
test
adc
xor
jg
jnp
fsubs
jno
push
movb
mov
jecxz
loope
xchg
fnstcw
add
jb
stos
mov
or
out
or
test
mov
pusha
lods
movb
inc
push
xchg
out
add
xor
pop
push
ja
cld
shr
fidivl
insl
or
inc
es
jle
cmp
cld
sbb
sarb
xchg
fisubs
sbb
dec
rcrb
dec
lret
addl
adc
xor
loope
imul
or
cmp
hlt
clc
cmp
add
xor
add
cmp
dec
push
insb
inc
add
cmc
sub
sahf
ja
push
aad
sub
add
pop
mov
inc
dec
mov
sbb
movsb
or
xor
dec
mov
stos
sub
stos
imul
pop
xlat
jae
aam
fistps
jg
or
lock
testl
inc
inc
out
inc
stc
mov
lret
mov
cmp
cmc
inc
mov
adc
xlat
xchg
and
decl
xor
dec
lea
in
sub
sub
push
mov
aad
push
sbb
or
add
aad
mulb
ljmp
pushf
lcall
cwtl
daa
mov
popf
into
adc
inc
outsb
arpl
call
fs
dec
fnsave
push
jg
nop
in
sbb
dec
xchg
add
sub
fisubl
adc
icebp
bound
cmp
and
jno
jns
movsb
push
std
test
inc
xchg
out
adc
pop
mov
push
frstor
pop
das
imul
xor
adcl
jae
dec
xchg
ss
int
dec
fld
mov
and
cmc
add
imul
ret
xor
mov
xchg
fldt
test
ja
dec
mov
mov
inc
cmp
xlat
pop
out
and
push
pop
fcoms
outsl
xchg
push
jg
jle
pop
add
mov
test
or
in
out
dec
xor
push
mov
inc
add
inc
jmp
shll
les
or
in
and
mov
shll
jne
xchg
jg
jg
cmpsb
jnp
pusha
lahf
push
jecxz
or
xor
rorl
jmp
daa
mov
or
lock
out
inc
xor
shll
in
add
adc
xor
testl
ficompl
pop
xor
adc
mov
cli
mov
ficomps
mov
sbb
call
inc
ds
lahf
aam
sub
bound
sub
sub
loope
xchg
sub
sti
mov
push
mov
dec
aad
mov
jge
xor
test
xor
mov
pop
mov
std
data16
dec
jnp
dec
cmpl
enter
leave
mov
push
movsb
call
sahf
pop
mov
lret
iret
push
cmp
fimuls
or
daa
repz
xlat
mov
xchg
adc
outsb
scas
push
sub
fldcw
push
in
cmpsl
test
sub
mov
or
or
pushf
cmp
add
roll
adc
data16
jne
mov
sbb
test
jmp
adc
sub
mov
jae
xchg
imul
sbb
adc
rol
jno
das
push
dec
inc
mov
push
sub
mov
mov
adc
and
push
incb
mov
je
addl
fiaddl
pop
or
mov
lret
sbb
into
or
cmp
lds
xor
jbe
cmp
mov
mov
mov
jae
call
cli
and
xor
fists
push
lret
clc
sbb
pop
nop
iret
ffree
and
push
rcrb
pop
dec
mov
xor
jmp
in
sbbb
or
push
adc
or
dec
lds
mov
mov
cmp
add
sbb
into
sti
call
repz
imul
sti
out
mov
cmpsb
inc
mov
mov
in
notb
or
out
std
lock
pop
test
xor
aaa
dec
in
mov
int3
addr16
push
insb
pusha
in
pop
add
pop
push
int3
pop
xchg
roll
lret
pop
jbe
insb
add
or
xor
and
add
frstor
fld
lock
and
add
out
adc
shrb
aaa
sub
bound
mov
adc
cmp
outsb
loopne
rorb
sbb
dec
cmc
xor
sbb
xchg
in
inc
scas
add
xchg
in
jl
add
cmp
mov
pop
sbb
push
cmp
ljmp
mov
add
mov
fistl
test
jae
add
int3
pusha
js
and
lahf
fdivs
fsubrs
mov
jge
mov
lret
ds
ja
out
ss
adc
lods
fwait
popf
add
cmp
pop
js
sbb
dec
mov
or
or
cmc
sahf
orl
push
fisttpl
jno
mov
adc
cmpsb
cmp
mov
test
jne
fstpt
xor
sub
jmp
fcmovnbe
xor
adc
jnp
popa
jae
sbb
iret
shl
cmpsl
xor
add
arpl
rcr
cmp
popa
std
xchg
jp
pop
dec
stos
push
fs
pop
aam
subl
mov
push
mov
sub
jmp
jnp
addr16
orl
es
sbb
out
iret
xchg
call
mov
pop
jb
aam
dec
jmp
aas
sbb
sub
and
cmp
jno
push
adc
pop
adc
lock
icebp
add
aaa
mov
sub
fs
xchg
xor
std
pop
jge
cld
cmpsl
jp
inc
ret
popf
mov
loopne
xchg
push
mov
pop
iret
stos
mov
pop
add
push
ret
jp
mov
pushf
or
inc
lret
mov
inc
dec
jbe
test
loop
sbb
jne
test
xor
sbb
xor
and
push
sub
iret
sub
in
dec
push
mov
add
dec
push
and
movl
bound
xor
and
cmp
pop
mov
push
sti
sub
aam
in
push
inc
cmc
xchg
mov
ja
pusha
nop
ret
xchg
in
cs
mov
push
pop
dec
adc
enter
add
pop
lock
mov
mov
sti
gs
imul
addb
scas
sbb
add
out
and
jp
movsl
add
sub
mov
ds
mov
enter
xchg
xchg
sub
xlat
ljmp
and
out
cmp
imul
push
mov
push
int3
sub
std
add
push
sub
cltd
arpl
clc
lret
add
dec
and
mov
clc
inc
dec
test
lds
cltd
mov
jno
cmp
sti
sbb
ret
sub
cmpl
je
inc
jp
int
cmpl
pop
int3
in
xor
dec
aaa
push
cmpsb
stc
or
sub
push
dec
test
or
mov
push
or
in
adc
popa
popa
inc
jb
sbb
pushf
mov
sbb
stc
mov
xchg
pop
cmp
sub
sub
push
lock
iret
loopne
jle
jb
popf
movntps
psubd
out
test
das
ret
xlat
orb
push
mov
push
inc
icebp
cmc
data16
sti
andl
aas
inc
fsubr
mov
pusha
je
daa
mov
jl
fsubrp
mov
out
imul
and
pushf
dec
arpl
iret
lock
popa
scas
sub
lret
jle
hlt
es
xchg
dec
rcrl
and
sbb
jg
sub
jmp
daa
cwtl
pusha
inc
cmp
stc
cmp
in
bound
dec
or
cmp
cld
testb
rorl
xchg
push
push
rorl
mov
enter
mov
outsl
jb
or
fadd
pop
adc
fldt
sbb
mulb
ljmp
fnstenv
call
adc
sbb
mov
add
inc
aaa
daa
jg
jbe
movsl
adc
outsl
mov
mov
and
es
cs
mov
xor
xor
scas
and
pop
dec
icebp
movsl
rcr
xchg
fisubl
pop
cwtl
gs
cld
add
rorb
outsl
cld
and
mov
add
mov
and
add
lods
add
mov
dec
xchg
sarb
cmpsb
push
jmp
pusha
and
mov
lods
mov
pop
psubsw
in
inc
sub
mov
ljmp
sub
stos
push
dec
or
dec
dec
add
outsl
fwait
jo
dec
xchg
adc
sub
sbb
lret
push
pop
into
push
xor
into
cmp
mov
push
shlb
pop
cltd
lock
jle
in
push
lea
mov
xchg
push
mov
test
jae
and
lods
out
pop
shll
push
lret
mov
mov
sub
or
inc
xchg
fpatan
in
mov
into
pop
lret
add
inc
lock
or
push
xchg
cmpsb
push
icebp
enter
mov
out
or
sbb
out
out
fisubrs
call
jnp
jle
les
xchg
enter
popf
pop
loope
jge
mov
shlb
ja
lock
inc
pushf
sub
xchg
cmp
ss
loope
shrl
mov
sti
adc
lds
mov
push
movsl
push
es
jl
popf
test
imul
pop
mov
pushl
popa
cmp
adc
push
add
adc
es
aam
in
pop
pop
sub
cmp
jp
dec
das
inc
aas
add
pop
data16
xchg
push
mov
mov
jp
dec
in
and
sbb
jb
sti
mov
test
jb
loop
lcall
aaa
and
adc
add
mov
sub
pop
mov
inc
jmp
jne
outsb
add
and
xchg
negl
mov
insl
xchg
sbb
xor
je
adc
scas
ds
pop
xor
sub
pop
arpl
push
and
adc
scas
pushf
in
sbb
iret
popf
popf
stos
mov
cmp
xchg
push
mov
loopne
pop
into
sub
repz
punpcklwd
and
popf
push
sub
jbe
adc
xchg
add
cmpsl
cld
xchg
and
cmpsl
and
and
mov
in
nop/reserved
gs
jae
in
dec
shlb
in
fdivrl
mov
ret
subl
xchg
push
pop
roll
je
subl
das
or
ja
push
dec
pop
cltd
lahf
cli
xchg
and
lds
fcmovnbe
xchg
movsb
test
jb
dec
adc
adc
in
sti
inc
inc
scas
mov
repz
stos
test
lds
stos
sub
pushf
add
aas
imul
leave
push
repnz
cmp
ds
into
test
iret
bound
incl
mov
stos
pop
repz
or
aaa
mov
dec
inc
jle
xor
xor
jo
cmp
pusha
sbb
add
imul
xor
out
paddusb
push
mov
lcall
mov
mov
xchg
pop
or
hlt
jl
clc
lods
cli
adc
in
daa
in
mov
cwtl
aad
icebp
testb
cmp
outsl
in
mov
ret
jmp
xlat
in
mov
sub
xchg
mov
push
idivb
sbb
orl
gs
mov
sub
push
fadds
add
mov
push
and
jecxz
mov
xchg
push
add
out
and
jnp
adc
push
pop
ss
sub
je
jae
cmp
lea
push
aam
mov
cltd
inc
or
das
xor
data16
xor
fadds
repz
pop
xchg
in
repnz
test
shlb
mov
mov
subb
enter
cmpsl
movsb
lret
xchg
arpl
cmpsl
jne
dec
lock
push
daa
jp
mov
mov
mov
into
lea
call
mov
xor
and
adcb
jns
or
call
out
scas
rolb
dec
sub
cmp
cmpsl
cld
pop
or
outsl
mov
out
jg
sahf
test
outsl
xor
roll
iret
dec
mov
leave
or
mov
rclb
xchg
ss
mov
xchg
ret
inc
stos
out
test
inc
xor
jl
push
insl
test
lret
in
cmp
movsl
cmp
mulb
inc
push
fiadds
mov
mov
xchg
repnz
dec
jmp
je
and
xchg
arpl
sti
idivb
aad
add
adc
mov
push
inc
cs
addr16
adc
les
dec
add
iret
xchg
leave
mov
or
js
mov
popa
ds
dec
sbbb
xchg
xor
cmp
xchg
add
movb
dec
add
scas
inc
and
pop
cmp
mov
jge
push
pop
sbb
adc
push
test
jae
jmp
iret
retw
testb
out
icebp
cmp
pushf
jle
leave
icebp
pop
in
cmp
add
call
xchg
imul
dec
push
mov
and
pop
mov
aas
pop
xchg
cmp
mov
inc
sub
cmp
xor
lock
mov
xchg
pop
sbb
int3
nop
rolb
add
xor
cs
andb
add
dec
xlat
repnz
pop
call
push
and
push
scas
adc
test
outsb
add
lds
pmaddwd
add
xor
test
xorl
inc
in
stos
mov
inc
push
lea
mov
pop
movsl
sahf
test
inc
aaa
stos
jns
negb
cmp
jecxz
lret
push
dec
xlat
inc
fwait
push
mov
int3
lahf
fisttpll
arpl
jmp
mov
pop
popf
movsl
popf
cwtl
cmp
outsl
jb
scas
cmp
les
mov
sub
jns
sarb
loopne
or
fadd
shlb
fnstenv
loopne
outsb
push
push
insb
sbb
mov
aam
mov
mov
jno
dec
mov
sub
cmp
test
addb
cmp
xchg
cltd
pop
nop
les
and
mov
sbb
stos
aas
jp
cmp
in
or
jae
push
sahf
push
adc
sbb
mov
sbb
add
daa
mov
filds
jge
pusha
jno
and
outsl
icebp
lods
pusha
loopne
push
out
add
push
arpl
mov
fldl
or
stos
adc
push
ja
out
dec
fcomps
add
ja,pt
ds
icebp
fnstsw
fbstp
aaa
inc
enter
mov
shlb
out
ja
daa
aas
sbb
orb
mov
es
sub
mov
sbb
add
arpl
sbb
lret
dec
xchg
cmp
jp
jnp
or
push
mov
notl
mov
das
dec
popf
les
sbb
out
mov
push
repz
lret
adc
test
and
mov
jb
jg
xor
call
lods
inc
add
pop
pop
and
xlat
xor
sbb
ret
lahf
add
sbb
orl
xorb
push
sti
xlat
shrb
outsb
cld
int
mov
or
cli
and
fwait
outsl
push
and
mov
iret
stc
or
rcrb
faddl
data16
cmpsl
movsb
lahf
imul
mov
adc
fistl
cmp
add
pop
inc
cmp
cmp
sbb
pop
addr16
mov
xchg
dec
cmpb
lds
ss
sahf
mov
dec
xchg
sub
cmp
das
rol
arpl
stc
inc
and
xor
push
dec
lods
mov
sub
jmp
das
hlt
jmp
lahf
jmp
adc
mov
fwait
sbb
jge
cmpl
jmp
push
inc
dec
sahf
pop
jl
mov
in
ljmp
jo
mov
aaa
sarl
or
fists
js
clc
adc
adc
sub
leave
jo
in
lea
lret
push
mov
lcall
ret
gs
out
ret
sbb
fcmovnb
mov
xor
pusha
nop
dec
cwtl
aas
and
push
mov
jns
jne
test
pop
push
pop
mov
in
icebp
dec
jmp
mov
push
pushf
or
shr
lea
adc
xchg
scas
int
fists
call
loope
mov
sub
xor
hlt
push
pushf
std
sub
or
add
pusha
dec
cmp
dec
or
pop
sbb
jge
adc
push
adcb
ret
cmp
and
pop
andb
mov
add
xor
int3
or
adc
cld
test
adc
jnp
cwtl
pop
mov
jb
xor
adc
lcall
rolb
cmp
push
fwait
inc
aas
sbb
pop
mov
or
popa
insb
dec
je
xchg
cmpsl
sti
xor
out
cmp
loope
push
pushf
outsb
and
sti
xor
add
cmp
pop
and
in
mov
push
fcoms
mov
outsl
push
push
mov
movsb
and
sbb
xchg
repnz
call
and
add
cmc
sub
sbb
cmovp
mov
sbb
shlb
faddl
mov
fisubs
lahf
push
test
test
divl
dec
cmpsl
sbb
mov
scas
jge
and
mov
int3
adc
xlat
inc
pop
and
jmp
andl
adc
lahf
dec
rorb
lahf
test
pop
shll
mov
xor
jne
cmp
add
sbb
popa
hlt
jb
loope
add
or
dec
aad
inc
cs
clc
push
fwait
jae
xlat
or
cmpsb
aam
jmp
mov
rclb
adc
mov
adc
inc
push
jno
pop
repnz
arpl
add
stc
cmp
icebp
loop
in
outsl
mov
cli
out
testl
aas
push
in
ljmp
mov
or
pushf
mov
hlt
jmp
sub
mov
jle
and
add
movsl
lret
repz
mov
jo
fs
fwait
push
mov
push
out
pop
and
adc
cmc
xlat
fidivl
inc
jnp
loope
inc
rcll
addl
jno
in
adc
or
popa
dec
mov
leave
push
or
pop
sbb
mov
and
mov
test
pushl
fildl
rclb
insb
mov
xchg
push
inc
ret
xchg
push
insb
das
mov
xor
adc
mul
sub
jge
frstor
jmp
mov
scas
cli
pushf
jne
sub
push
sbb
imul
nop
xchg
cmc
xchg
shll
sub
push
adc
dec
movsl
sahf
cwtl
xor
jb
xchg
stos
shll
shlb
popf
scas
inc
pushw
push
push
xchg
imul
addr16
inc
in
or
lods
jle
add
push
lods
xchg
daa
jl
jnp
insl
negb
push
jno
inc
add
lahf
adc
sub
cmp
aaa
push
movsl
in
sbb
xchg
fsubs
push
xchg
icebp
fwait
sahf
imul
sub
out
push
ffreep
mov
pop
pop
cmp
sbb
fcoms
sub
daa
sbb
ficoms
ds
inc
test
loope
imul
hlt
xchg
mov
into
test
and
dec
lea
and
adc
xchg
inc
fnstcw
jae
inc
jmp
das
jmp
int
mov
sarb
adc
or
sub
dec
fsubrl
fcmovne
mov
adc
push
and
dec
fwait
mov
and
fdivrs
and
push
lods
lea
hlt
pop
cmp
loopne
pop
lcall
xor
pusha
xchg
mov
mov
sub
jmp
imul
mov
xchg
ficoms
jge
loop
cwtl
pushw
pop
push
test
inc
mov
enter
lcall
xor
cmp
or
loopne
bound
mov
iret
mov
ss
gs
inc
sbb
adc
scas
inc
mov
outsb
and
push
cmp
imul
pmulhuw
xchg
clc
sbb
push
mov
enter
adcb
mov
xor
adc
aam
cwtl
jle
out
jmp
lods
adc
xlat
arpl
sub
sbb
faddl
mov
out
iret
dec
insl
es
into
ss
fstps
shl
adc
lock
gs
mov
lahf
clc
cmpb
out
vsubpd
pop
insl
mov
aas
test
testl
fldl
jns
sub
jbe
iret
fldenv
shrl
jae
lods
xchg
andb
loope
jo
out
scas
xchg
aad
sti
lret
rolb
clc
popa
icebp
mov
bound
iret
add
mov
ss
sti
les
repnz
push
adcb
xchg
and
pop
pop
popf
shl
mov
fmul
fnstenv
cmp
and
mov
outsb
mov
lcall
mov
xchg
and
inc
cltd
push
mov
push
pop
xor
xchg
dec
int3
nop
js
sub
ljmp
pop
inc
loopne
adc
xchg
pop
aam
pop
lods
xlat
inc
pop
int
add
addr16
adc
and
cmp
mov
in
lahf
and
in
movzwl
sbb
repnz
fnstcw
fs
lock
cmp
std
sbbl
scas
pushf
sbb
add
mov
mov
mov
popa
xchg
lea
out
inc
push
bnd
sbb
xchg
or
rolb
das
iret
into
mov
inc
sbb
sub
pop
icebp
adc
cmpsb
push
add
cmp
xor
xor
push
or
xchg
push
pop
rorl
jns
fndisi(8087
push
in
int
lods
sub
fwait
xor
or
pop
stos
andb
imul
shrb
or
aad
jnp
pop
mov
pop
insb
or
mov
jge
xor
xlat
leave
or
mov
shll
xor
jo
insb
xchg
push
jge,pt
adc
sub
xor
pop
mov
cmc
push
fisttpll
and
sbb
into
jb
movsl
out
xchg
ficoms
xor
clc
mov
dec
cmp
pop
stos
rclb
cmp
inc
adcl
pusha
push
xor
insl
jb
jg
cld
lahf
jmp
aad
rolb
add
push
dec
push
iret
daa
add
mov
lds
or
lea
xchg
sbb
iret
jle
ret
and
lret
push
sbb
jnp
jns
mov
shll
out
xlat
adc
cltd
adc
movb
mov
dec
popa
sub
dec
mov
mov
xchg
test
mov
test
cmp
mov
clc
in
and
push
popf
inc
pop
and
rcrl
sub
dec
bswap
sub
push
repz
arpl
xor
adc
cmp
pop
mov
ja
push
pushf
leave
xor
sub
loopne
cmp
cltd
add
and
loopne
mull
sub
and
ds
jecxz
pusha
in
pop
and
mov
fimuls
into
sarb
sub
pop
cli
icebp
adcb
mov
pop
je
cmp
push
ds
inc
push
dec
push
xor
inc
inc
scas
int3
fs
add
cmpsl
lods
adc
push
lods
popf
test
push
jecxz
fmull
jo
sti
dec
mov
les
mov
ficomps
push
mov
push
sbb
sar
daa
mov
jmp
inc
mov
and
jbe
jno
sbb
addr16
int
lret
xchg
push
sbb
testl
incb
push
movsb
xor
in
dec
adc
lea
push
pop
stc
mov
adc
xor
inc
cmc
repz
jns
adc
rcr
jb
mov
leave
add
inc
les
sbb
shl
mov
push
add
mov
pop
aas
mov
fisttpl
jl
xchg
sbb
cli
popl
test
out
mov
cmpb
out
dec
dec
xor
xchg
ljmp
stos
fdivr
sub
push
add
jecxz
ds
fildl
push
mov
sub
adc
ss
mov
jb
lock
mov
jp
mov
cltd
ds
or
and
jg
pop
sbb
hlt
sbb
dec
dec
sti
loop
nop
ljmp
xorl
divb
pusha
sub
jne
mov
inc
fsubr
int
movsl
and
out
sbb
mov
push
or
xor
lret
mov
test
decb
mov
jnp
or
imul
lret
insl
jbe
add
imul
xchg
push
repz
movb
inc
stos
into
dec
pop
push
xchg
lods
inc
je
in
cld
test
ljmp
jno
or
jnp
clc
outsb
inc
icebp
pop
pop
xchg
es
into
push
jg
ss
addr16
cmc
and
add
mov
data16
test
sub
xlat
pop
jae
mov
add
mov
push
xor
fwait
sub
lds
push
xor
sub
xchg
nop
add
daa
call
int
push
std
sbb
sbb
sbb
shlb
icebp
pop
sbb
rclb
mov
xchg
pop
fidivl
std
sti
or
sahf
pop
pushf
mov
fwait
gs
xor
xor
and
push
jecxz
jno
add
push
sbb
adc
jge
shrl
filds
movsl
fistl
xor
divb
cmpsb
in
or
and
mov
lcall
jb
andl
fsubs
movsb
xor
mov
sbb
or
pop
movsl
rcl
or
mov
mov
dec
jl
repnz
repz
mov
or
das
out
cmp
sarl
jl
outsb
fstpl
lcall
inc
inc
insl
mov
addb
push
mov
sbb
orl
std
cmpb
test
sbb
dec
lcall
push
repz
mov
movsb
add
mov
jnp
in
sub
gs
add
pop
jbe
inc
iret
fidivrs
jns
jne
pop
jmp
adc
imul
aas
pusha
or
jns
mov
scas
mov
mov
daa
pop
add
ljmp
lds
add
ljmp
or
lods
xchg
testl
adc
insl
mov
out
inc
jle
push
xchg
adc
cmpsl
sti
movsl
add
or
add
adc
loope
inc
and
xchg
xor
subb
adc
inc
and
inc
fcmovu
popf
movsl
dec
adc
cli
cltd
push
pop
roll
cmp
mov
mov
insb
mov
mov
loopne
cmpl
add
xchg
or
loopne
cli
inc
jmp
loop
adc
pop
gs
call
test
push
or
push
cli
dec
jge
andb
add
push
or
sbb
aad
mov
and
dec
push
scas
jne
jnp
mov
push
pop
xor
mov
das
sti
sbbl
aad
and
lret
push
jp
das
inc
shrb
dec
add
subb
ds
fmuls
ja
movsl
popa
imul
xchg
cli
xorb
popa
fidivl
pop
sub
mov
push
cs
jg
fcoms
xlat
and
imul
addr16
lods
dec
xchg
inc
add
add
rclb
int
mov
loop
inc
jecxz
enter
jne
sbb
cld
push
sarb
movsb
add
sarb
sbb
shlb
lods
js
ljmp
icebp
sarl
mov
mov
xchg
dec
into
mov
mov
ret
fdivl
dec
xchg
dec
mov
aaa
ret
fdivrs
xchg
cmpsl
dec
roll
add
xor
jg
jge
cmp
adc
jae
int3
push
jb
je
push
pop
and
and
lcall
insb
xchg
lcall
xor
inc
and
ret
lods
sub
loope
daa
inc
fs
mov
jo
ds
push
orb
cmpsl
test
pusha
inc
xor
clc
inc
ss
sbb
push
cwtl
adc
outsb
daa
and
jb
lock
push
loop
xchg
sbb
lret
adcb
js
js
pop
daa
dec
xor
mov
and
popf
mov
dec
out
sbb
lea
fcmovb
xor
mov
push
xorl
mov
ds
mov
push
test
push
push
movsl
in
sub
pop
mov
and
sahf
out
rol
pop
dec
push
push
cld
jmp
fisubs
pop
or
jmp
scas
jg
sbb
and
jmp
pop
push
adc
and
sbb
orl
add
sti
test
inc
jbe
inc
out
add
sub
ss
cmc
mov
add
fldcw
hlt
call
xchg
xor
lahf
jo
pop
stos
scas
xchg
in
iret
cmp
or
cmpsl
cmp
jge
adc
push
cltd
imul
lahf
inc
daa
jge
out
pop
xchg
inc
nop
jne
mov
or
sub
jle
sti
roll
fiadds
loopnew
loop
pop
clc
aam
push
sbb
arpl
add
or
push
dec
jecxz
push
iret
jecxz
mov
and
push
jp
in
arpl
test
stos
mov
arpl
cltd
fiaddl
mov
test
test
cwtl
fldl
lret
jl
inc
fwait
lds
push
push
ret
mov
adc
in
adc
sbb
dec
fwait
mov
push
outsb
test
sti
out
movsb
pop
pop
and
xlat
add
js
mov
push
push
and
dec
jmp
push
jg
adc
pop
dec
setl
lods
jno
ret
sarb
test
xor
xor
out
pop
pop
inc
icebp
test
xor
out
cmc
ficoms
xchg
jle
lods
pop
jbe
xchg
dec
stos
je
int
scas
jmp
jmp
and
pop
ret
popa
cli
lahf
lret
mov
inc
inc
rcll
or
dec
mov
stos
adc
pop
jne
adc
nop
ss
or
aaa
rcll
out
mov
lret
mov
fcmovnb
and
pop
fldt
mov
mov
sub
adc
jecxz
jne
sbb
pop
mov
fcoms
adc
ljmp
loopne
call
jp
adc
pop
cmp
mov
sarb
cli
sahf
xchg
push
and
divb
lds
int
push
enter
inc
dec
xlat
cltd
lods
ret
cmovns
outsl
aaa
test
mov
gs
in
popf
sub
loopne
sahf
jo
mov
arpl
cmp
adc
jp
fistpll
lcall
sbb
jle
fdivrl
ret
pop
push
jp
lahf
xchg
out
dec
inc
stc
cmpsb
xchg
jl
ds
cmp
lahf
sub
stos
mov
movsl
xchg
stos
dec
mov
lret
ss
push
callw
jo
imul
leave
popf
add
mov
es
pop
push
and
mov
jp
das
mov
add
out
aas
scas
aas
fs
cmp
mov
adc
sbb
adc
mov
inc
mov
out
addb
mov
data16
mov
das
dec
mov
aam
xchg
jae
shrd
mov
cli
loopne
arpl
movsl
mov
xchg
push
fs
inc
arpl
mov
nop
pushf
sbb
pop
repnz
cmp
inc
sbb
cmpsl
rcl
xor
mov
ret
bound
add
lahf
bound
fwait
dec
pop
mov
jbe
sub
sbb
add
dec
push
insb
stos
pop
movsl
or
lods
cmpsb
push
mov
push
insb
cli
imul
dec
lcall
and
mov
push
daa
insl
inc
int3
ljmp
loopne
xchg
aaa
sbb
sbb
insl
inc
jmp
ds
inc
imul
jp
loop
xor
or
sub
out
cwtl
mov
sub
aam
fwait
lret
aad
inc
sbb
xchg
ds
shll
fimull
fisubrs
jno
pcmpgtd
mov
inc
test
push
out
mov
pop
test
adc
lods
adc
fisttpl
push
jge
and
add
addr16
cltd
in
cld
xor
pop
dec
push
push
lret
xchg
push
les
add
inc
outsb
mov
mov
movb
cld
mov
push
movsb
xor
pop
pushf
div
mov
pushf
ja
cmp
mov
test
fdivrl
mov
push
push
jl
adc
sub
daa
loopne
fcoms
pop
mov
push
inc
ss
jnp
lret
je
neg
mov
dec
jecxz
loop
in
test
cmpsb
cmp
lret
movsb
push
es
insl
push
jne
dec
loope
pop
pop
sbb
in
push
out
mov
or
xchg
mov
sbbl
int3
mov
xor
inc
dec
fmulp
icebp
push
mov
push
arpl
not
or
outsb
xchg
pop
test
sarb
cltd
mov
lcall
and
ret
inc
imul
into
jae
ret
push
repnz
sbb
add
mov
mov
ficoml
les
adc
add
stos
test
xchg
and
sub
add
inc
insl
add
ficoms
cli
cmpsl
xchg
sub
xchg
mov
mov
mov
cltd
aam
inc
sbb
addr16
fs
jb
pop
ds
xchg
sahf
sahf
pop
jne
out
inc
pushf
lcall
out
adc
scas
lds
scas
cs
jnp
aas
sub
iret
sub
push
repz
into
fdivrs
stc
mov
scas
push
mov
popa
sub
dec
sub
cmpsb
cltd
xchg
sub
out
aas
inc
inc
imull
or
inc
cmpl
cltd
leave
lea
xchg
inc
jle
dec
push
lods
mov
mov
jge
sub
xchg
enter
cltd
fdivr
cltd
mov
mov
mov
inc
xchg
data16
sub
inc
mov
orl
stos
push
pop
flds
mov
fs
adc
roll
mov
out
adc
and
fldt
mov
aad
inc
cmp
mov
mov
out
les
lcall
out
and
sub
and
nop
and
fxsave
outsl
and
ljmp
sub
out
add
add
int
dec
and
inc
lcall
jno
lods
lahf
fs
sub
test
hlt
mov
push
cli
cmp
sub
fsub
sbb
or
std
pop
dec
pop
pop
dec
sbb
ret
pop
mov
movsb
jge
xchg
in
add
push
fstpt
xchg
test
add
mov
aad
mov
fdivs
loope
mov
mov
sti
mov
lock
repnz
aas
lods
xor
adc
out
jne
mov
and
mov
add
pop
mov
pop
imul
jno
xchg
and
xchg
scas
jb
xchg
sti
stos
push
push
cmp
out
sbbb
je
pop
xor
cmp
jo
ds
pop
cmp
dec
mov
clc
push
sub
and
jns
lods
push
orl
push
mov
fs
test
pop
sub
dec
rolb
jl
test
sahf
rolb
nop
mov
dec
mov
ret
shl
pop
stos
shl
imul
mov
jecxz
shrl
outsb
in
or
mov
das
jmp
inc
xor
leave
and
push
mov
mov
xchg
or
data16
loop
cmpb
adc
inc
daa
cmp
lock
mull
mull
popa
inc
aas
js
and
mov
loope
outsl
jg
nop
mov
and
cmpsb
ror
outsb
mov
xchg
pop
jne
push
popf
ret
add
dec
lahf
dec
add
and
fs
mov
ja
inc
sarb
inc
and
in
sbb
inc
iret
push
sbb
sbb
sbb
inc
or
inc
sub
or
adc
sbb
add
pop
movsl
inc
and
int3
setns
xorb
dec
and
xchg
mov
fmuls
lret
sub
and
jg
or
xchg
bound
jae
jb
fs
movsl
test
lock
ss
sub
ljmp
str
cmp
sbb
ret
cmp
mov
mov
outsb
adc
push
sar
cmp
and
xlat
iret
jae
test
sarl
clc
lcall
xchg
sbb
lea
mov
lret
das
xor
dec
mov
arpl
jae
pop
js
roll
push
sbb
mov
add
data16
add
sub
and
orl
cmpb
imull
sub
outsl
mov
div
cwtl
cmpsb
mov
add
push
aaa
inc
test
shl
or
push
xchg
adc
push
sub
ljmp
out
adc
lds
movsb
loopne
mov
sub
stos
js
xchg
jns
inc
xlat
leave
xlat
mov
jge
sub
rcll
mov
mov
cmp
cmpsl
clc
sbb
pop
fdivs
stos
jns
leave
outsl
mov
jmp
cmp
pushf
mov
pop
xchg
mov
mov
mov
lods
std
adc
xchg
push
dec
xchg
pop
push
sub
inc
or
cwtl
ret
fdivrl
push
scas
lahf
mov
mov
lea
mov
mov
sbb
mov
sub
and
jae
je
fsubs
sub
mov
repnz
in
dec
inc
call
bound
arpl
adc
es
sub
mov
loopne
or
mov
mov
fs
in
mov
arpl
dec
jb
popa
jle
inc
cmpsb
jge
imul
mov
sub
fwait
shrl
cmp
imull
cmp
mov
imull
dec
int
mov
jmp
lret
lret
mov
ficoms
jbe
arpl
sbb
cmp
xor
pop
push
es
aam
jge
enter
and
inc
fidivl
ljmp
add
idivb
cmpl
push
xchg
lret
adc
inc
out
push
pop
mov
jb
cwtl
in
shll
dec
insb
inc
fists
daa
hlt
das
mov
pop
call
aad
sub
mov
outsb
ljmp
addb
shrb
dec
test
pop
mov
out
hlt
bound
xor
pop
insb
mov
xchg
push
jmp
mov
jo
je
fmuls
push
sbb
into
popa
cmp
lock
or
xor
push
mov
pop
outsl
add
leave
mov
idivb
cli
movsl
mov
ret
dec
enter
push
xlat
addr16
cs
adc
inc
sub
scas
imul
cmpsb
aas
push
or
mov
xchg
iret
pop
movsb
mov
sbb
and
jecxz
dec
or
add
xchg
push
mov
push
cltd
sbb
repz
and
ss
sarb
push
pop
cld
iret
inc
mov
ja
mov
pushf
or
jl
movsl
dec
adc
outsb
call
push
mov
xlat
add
fsubrp
mov
jno
data16
mov
lret
shr
adc
std
sub
les
cmp
cmp
mov
dec
xlat
push
jmp
push
dec
shll
add
sarl
pop
add
das
mov
and
jmp
stos
mov
jb
aad
loopne
movsb
fnstenv
cli
inc
cmp
dec
mov
mov
pop
ljmp
pop
out
dec
add
jp
xor
pop
cltd
popf
in
add
cmpsb
lahf
inc
loop
dec
mov
dec
mov
int3
dec
sub
pop
jg
out
mov
inc
lea
jbe
popf
daa
jl
push
lock
xor
jbe
scas
sub
rolb
and
enter
xor
ljmp
outsb
cmp
pop
mov
rcrl
push
mov
dec
inc
insb
and
popa
pop
data16
lods
clc
out
cmpsl
popa
push
xor
sarl
pop
dec
in
lcall
push
add
icebp
pop
loopne
icebp
jo
pop
lahf
mov
pop
push
sub
gs
frstor
sbb
idiv
mov
jae
xlat
sub
mov
cld
mov
mov
inc
push
std
cld
outsb
dec
rorl
lds
sub
cwtl
cmpsl
push
or
adc
dec
jne
and
xchg
dec
fs
add
jl
in
xchg
dec
fidivrl
lret
andb
cmp
or
pushf
daa
lea
adc
xchg
repnz
ds
faddp
xchg
inc
movsb
mov
cmc
lock
xor
mov
notl
stc
hlt
pop
jno,pn
pop
push
lods
loopne
aad
ja
rclb
daa
push
lea
ss
popa
in
movsb
loopne
inc
cmc
lret
mov
mov
daa
pop
mov
xchg
call
fcomps
stos
or
mov
push
xor
dec
pop
adc
lcall
sbb
addr16
fcompl
jns
lret
add
cmp
gs
sub
aad
ret
cmpsl
out
or
ljmp
sub
mov
cwtl
das
push
lahf
dec
loope
je
cld
int
bound
clc
xchg
dec
pop
lds
loopne
std
xchg
jp
add
lds
cmp
mov
pop
pusha
lahf
in
sbb
sub
push
aas
xchg
cld
popa
xor
add
inc
or
mov
mov
aas
jmp
xchg
addb
inc
lods
mov
add
inc
pop
lcall
aas
test
aam
mov
inc
les
push
xchg
adc
cmpsl
iret
out
mov
cwtl
lods
or
jmp
add
cmp
sub
or
and
xchg
rcr
jp
ljmp
mov
add
outsb
push
sub
pop
push
js
dec
xlat
push
dec
pop
and
xchg
fxch
push
shr
sti
mov
fisttps
adc
push
mov
pop
shrl
lret
mov
addr16
js
push
or
sub
fcomp
xchg
adc
jg
and
cmp
push
inc
cmp
nop
fsubrl
cmp
les
xchg
lods
jns
mov
out
frstor
mov
push
or
mov
int
subl
stos
cmpsb
mov
in
dec
enter
xorl
cltd
sbb
popa
or
addr16
test
js
insb
mov
in
xor
iret
add
negl
xchg
cs
fnstcw
pop
mov
cmp
cmp
push
call
xor
lcall
cwtl
inc
xor
jns
scas
mov
and
push
fs
fldenv
xor
or
lods
popa
in
shrb
jne
jp
mov
xor
pop
out
loope
ret
jge
mov
jecxz
add
jno
movb
bound
dec
mov
cld
and
jne
or
pop
xchg
and
daa
pop
xchg
jmp
sbb
frstor
xchg
cld
cmc
cmpsb
mov
scas
rolb
mov
pop
stc
in
pop
cli
jmp
lods
or
in
adc
cmpsb
cmp
add
add
arpl
je
and
push
inc
stos
daa
xor
xor
xchg
adc
push
mov
inc
push
sti
shl
xor
movl
in
aad
add
mov
fwait
stos
int
or
mov
or
aas
clc
pop
ja
lret
dec
mov
pop
cld
xchg
add
and
cmp
stos
popa
and
nop
cld
fcoml
cmc
xchg
inc
jne
or
fisubrl
sar
pmaxub
xchg
out
xor
jle
into
pop
scas
fisubl
out
into
cmpsb
pop
jae
jno
cmp
push
popf
mov
leave
and
add
mov
add
ret
mov
mov
ja
loope
icebp
call
std
pop
xor
std
test
xchg
lds
mov
pop
cmpsl
push
lods
popf
cmpsl
lcall
aam
push
pop
push
sti
push
lahf
ret
out
add
sar
xor
pop
cmpsb
insl
dec
and
cmp
dec
jl
pop
dec
mov
data16
and
pop
dec
call
cmp
nop
vpaddw
xchg
push
shlb
push
lcall
adc
shll
addr16
inc
xchg
pusha
inc
mov
lret
sbb
dec
mov
inc
pop
dec
mov
gs
jbe
in
pop
jg
mov
cmpsb
sbb
inc
or
fcmovnb
int
js
pop
push
adc
cmc
test
data16
mov
in
sbb
ss
aas
add
inc
xchg
repz
mov
sub
js
lods
daa
cmp
enter
scas
aas
aam
cli
mov
ret
cmp
mov
and
and
lahf
adc
lods
sbb
inc
ja
test
test
jbe
jo
jnp
mov
gs
aam
popa
clc
sub
out
flds
test
pop
imul
sub
adc
xchg
xor
notl
cmp
cli
jne
or
cmp
pop
movsb
bound
imull
pop
mov
addr16
arpl
pop
xchg
aaa
cmpsb
mov
mov
lcall
pop
sti
out
das
jle
pop
adc
cwtl
mov
jl
push
aad
sub
push
xchg
insl
es
arpl
inc
xchg
dec
sarl
xchg
aas
imul
loopne
fimuls
out
inc
aaa
out
ja
ljmp
adc
cmp
movsb
jmp
mov
test
pop
cmc
and
out
rorl
sbb
loopne
sti
cmpsl
lret
adc
dec
push
movsb
ss
inc
lods
jmp
jbe
mov
sub
mov
adc
mov
or
fidivs
out
insb
mov
push
loope
xchg
outsb
add
pop
push
xchg
mov
and
rcr
leave
les
int
scas
or
mov
pop
dec
jmp
rorb
xor
xchg
das
push
add
xchg
and
leave
or
nop
shll
dec
adc
loop
mov
jmp
add
into
fists
pop
repz
aam
and
arpl
xor
dec
inc
mov
add
jno
rorl
dec
xchg
movsl
jmp
push
jo
ds
dec
shll
out
sub
faddl
into
scas
jbe
clc
xor
push
mov
rcl
popf
jo
pmaddwd
or
cltd
and
outsl
mov
or
adc
mov
movsb
sub
inc
mov
or
dec
jb
jo
imul
xor
pop
das
int
es
adc
cmp
mov
cltd
fsubp
scas
dec
inc
rol
mov
pop
fbld
pushf
stc
stc
or
push
push
mov
xor
scas
push
mull
sahf
pop
pop
lret
in
iret
push
fs
inc
in
loope
mov
pop
jns
cwtl
fisttpl
lahf
loop
or
lret
xchg
xchg
loop
testb
pop
xchg
add
push
add
test
aaa
xor
sbb
mul
mov
mov
fimuls
pop
sub
pop
or
sub
ds
repnz
adc
mov
pop
std
fdivl
gs
adc
jp
mov
enter
or
dec
icebp
push
pop
stos
inc
cmp
inc
mov
mov
xchg
jge
lds
push
pop
roll
out
ss
test
dec
and
mov
mov
cwtl
cld
xor
push
dec
jmp
into
ljmp
dec
shlb
push
pop
push
jmp
int3
mov
mov
push
mov
scas
je
jecxz
jg
xchg
bound
push
sti
fwait
or
mov
push
test
daa
leave
and
mov
jg
cmpsl
cmc
int3
movsl
add
ret
addr16
test
and
or
pop
lcall
out
lea
jp
subb
push
inc
out
inc
xor
or
cld
jno
ljmp
pop
cmc
push
add
jge
inc
adc
xchg
sbb
sub
sbb
and
pop
icebp
dec
ljmp
dec
cmp
cmp
mov
mov
add
in
mov
pop
inc
aaa
pusha
push
mov
mov
movsl
jl
jg
push
ljmp
xor
sub
pop
inc
mov
aam
and
inc
add
aaa
jbe
addb
pop
je
mov
test
ret
push
and
inc
dec
dec
int3
iret
cmp
inc
jl
jge
ds
sbb
jo
pop
pop
loopne
daa
mov
loopne
mov
jecxz
out
call
cmc
sub
mov
cli
stc
inc
pop
addb
mov
data16
into
sbb
add
outsl
pop
xchg
jge
out
xchg
imul
fiadds
dec
repz
je
pop
incb
lret
mov
push
sbb
dec
testb
pop
sub
movsl
es
cmpsl
xchg
push
shrb
inc
imul
hlt
mov
or
adc
repnz
dec
sbb
dec
and
in
mov
sbb
mov
mov
mov
adc
push
or
dec
mov
inc
out
pop
int3
lcall
jnp
test
insb
lret
das
mov
adc
mov
int
dec
mov
lea
mov
je
ja
repnz
sub
or
mov
add
lods
outsl
xor
push
iret
out
mov
incl
mov
mov
ficomps
push
mov
in
iretw
mov
aaa
test
cmp
in
mov
in
jle
imul
bound
pop
fisubrs
jbe
popa
es
pop
inc
js
outsl
fildl
add
out
jns
and
mov
push
xchg
push
jmp
fisubl
and
ret
mov
jg
adc
inc
pop
pop
mov
push
dec
imul
fists
sbbb
pop
idiv
xchg
xor
mov
cbtw
fisubl
cld
mov
push
addr16
add
push
loope
inc
sub
xchg
mov
or
or
je
test
mov
mov
or
fdivp
iret
nop
ja
adc
loopne
das
cmp
sbb
and
xor
jns
push
arpl
push
mov
ficompl
mov
xchg
mov
push
js
test
jecxz
je
xor
cmpsl
adc
adc
mov
lret
int3
push
add
stos
jp
fisubrs
in
aaa
push
add
loope
mov
push
faddp
inc
popf
lahf
cmpsl
xor
xor
or
inc
out
ljmp
test
or
ret
sar
adc
test
pop
add
mov
cmp
ficoms
jp
xor
repnz
out
pop
mov
sbb
mov
ljmp
jecxz
xchg
jbe
jecxz
mov
das
add
ret
jns
or
mov
shr
shlb
sub
cld
ret
mov
pop
outsb
xor
neg
dec
dec
into
adc
lret
cwtl
movq
and
or
sbb
loopne
sub
pop
stos
or
jbe
addr16
aad
inc
pusha
lret
aam
lcall
add
test
push
ss
enter
mov
sti
xor
pop
sub
push
pop
inc
push
out
dec
outsb
push
sbb
sti
fisubrl
adcb
leave
cmc
jo
mov
mov
xchg
inc
sbb
push
push
repnz
test
xchg
int
lds
mov
mov
insb
clc
jecxz
push
and
xchg
fstp
test
add
jns
add
mov
jg
add
iret
insb
pop
and
add
add
arpl
pop
lcall
fwait
ret
mov
out
sub
xor
mov
test
xchg
adc
and
inc
in
jg
or
repz
gs
sub
lret
pop
sub
jg
fs
xchg
or
cwtd
out
and
fidivs
push
addb
xor
movsl
mov
jmp
pop
push
pop
mov
lock
sti
inc
outsb
mov
fwait
push
push
addb
shrb
mov
pop
stos
add
aam
scas
mov
nop
cmpsl
imul
xchg
sub
cld
notl
sub
sbb
mov
scas
mov
aad
flds
add
icebp
or
fcoml
push
cmp
xor
in
pop
add
dec
dec
push
fistpll
pop
loope
fisubs
fisubrl
sub
dec
cs
enter
pop
xchg
or
js
lods
out
adc
notb
pop
mov
adc
es
ror
cmp
push
dec
pop
movsl
add
add
fs
add
call
dec
imul
js
in
lea
sahf
shlb
xchg
inc
lea
int3
push
or
adc
push
xchg
jecxz
stc
fmulp
and
cld
cwtl
ds
stos
pushf
mov
adc
fmul
add
incb
cmp
sub
dec
xor
jb
nop
inc
faddl
fcompl
mov
sbb
stos
pop
jecxz
cli
adc
jl
sub
pop
dec
cmpsb
lods
adc
lock
pop
hlt
and
scas
addr16
ss
int3
int
jbe
dec
adc
cmc
nop
clc
or
pop
inc
dec
out
add
clc
add
jmp
aam
sub
adc
ss
fldl
adc
xor
pop
push
pop
ret
addr16
add
scas
jg
adc
push
arpl
movsb
cmp
xor
outsb
testb
pop
cmp
pusha
fdivl
ja
adc
mov
and
lods
int3
fadds
movsl
scas
std
mov
jl
adc
cltd
roll
fwait
aad
pushf
cmpsb
pop
popf
jp
test
pop
in
mov
cli
in
push
adc
fsubr
dec
fnsave
movsl
mov
jnp
data16
fs
loope
add
and
add
lea
js
repnz
enter
jb,pt
mov
insb
shlb
pop
arpl
aam
ljmp
add
jmp
dec
mov
jo
sub
jecxz
add
cmp
lahf
jg
inc
inc
pop
sbb
into
dec
push
outsb
mov
fidivrl
es
movsb
test
or
les
mov
mov
xchg
fdivs
cmp
dec
enter
cmp
repnz
mov
pusha
arpl
jbe
popa
inc
je
in
mull
or
arpl
cli
repnz
ror
dec
mov
dec
add
mov
fadds
mov
mov
sub
faddl
mov
inc
insb
daa
xor
arpl
mov
in
cmp
inc
push
mov
ja
mov
mov
or
push
add
call
popf
rcll
mov
je
pushf
xchg
sub
fsubrl
cmp
call
fldl
loope
jno
dec
xchg
jo
rorl
xor
cmp
and
test
jnp
mov
cwtl
mov
ret
fistps
or
add
mov
mov
mov
mov
nop
lods
jp
shl
cmpb
pusha
fistpll
mov
mov
pop
ss
pop
xlat
xchg
lock
lods
cwtl
mov
scas
add
inc
repnz
xchg
int
pop
push
xor
mov
out
dec
push
outsl
pop
leave
pop
mov
xchg
hlt
lcall
lret
mov
fst
and
std
sub
sbb
icebp
aad
jmp
lea
inc
aad
or
nop
and
dec
inc
cmpb
xlat
pop
int
ret
inc
adc
dec
pushf
cld
jnp
das
pop
aaa
pusha
pusha
int
icebp
pop
in
xor
shrl
dec
stos
andl
test
out
pop
xchg
fmul
loope
imul
insb
rolb
cmpsl
cli
mov
pop
inc
dec
cwtl
jbe
adcl
fisubs
mov
lahf
push
pop
movsb
xchg
inc
sub
pop
adc
mov
mov
lods
and
cmp
sub
mov
dec
sbb
into
add
jno
int3
mov
sub
push
in
jbe
test
mov
cmc
and
jecxz
inc
pop
insb
jne
add
out
repz
or
mov
mov
dec
lret
lods
xchg
gs
aad
aas
push
cmp
pop
adc
jg
out
sbb
hlt
sbb
jp
inc
mov
adc
insb
or
add
inc
mov
inc
cmp
call
outsl
daa
push
fldcw
inc
into
in
cmp
push
ret
fwait
and
stos
test
or
and
notl
cld
pop
xchg
out
scas
leave
lods
mov
int
shll
lea
mov
add
pop
inc
dec
pop
sub
mov
cmc
jbe
idivb
inc
aad
imulb
pop
push
inc
xor
add
mov
lcall
inc
inc
sbb
sbb
or
in
stos
sbb
mov
sbb
dec
mov
mov
popa
adc
jb
fcompl
bnd
jecxz
ljmp
popa
push
sahf
sub
test
cmp
pop
inc
fwait
inc
dec
or
mull
shll
ret
xchg
int3
mov
fucom
psubb
pop
les
adc
leave
and
xor
andb
add
inc
int3
sti
dec
imul
mov
ds
or
mov
mov
mov
mov
mov
pop
imul
and
mov
icebp
stos
jae
test
mul
mov
or
fidivs
adc
dec
lahf
clc
add
or
stc
int
lock
pushf
aam
push
pop
add
xchg
clc
insl
xlat
sub
jbe
jl
psrad
jle
xor
pop
cmp
das
and
lahf
push
loopne
and
xor
insb
loop
dec
mov
and
add
xchg
mov
in
push
mov
pop
cmp
cmp
sub
xor
ret
xchg
in
mov
outsb
mov
jecxz
loopne
lods
xor
sub
and
mov
cmp
and
xchg
push
stos
sub
das
lahf
push
hlt
ret
das
add
add
push
pop
pop
cmp
mov
hlt
imul
sub
push
movsl
insl
sahf
orb
loopne
xchg
add
add
xchg
xchg
cmpsl
cli
sbb
lods
ljmp
mov
sbb
sub
mov
and
mov
or
push
ror
and
xlat
xchg
out
insb
insb
nop
fldlg2
out
ss
ss
pop
jae
or
mov
xchg
rcr
sub
dec
andb
mov
cmc
mov
daa
inc
pop
out
inc
dec
xchg
cwtl
cmp
popf
add
arpl
pop
dec
push
pop
pushl
adc
push
push
flds
inc
cmpl
sahf
loopne
call
arpl
jmp
sbb
imul
into
sbb
mov
add
jns
cmp
test
hlt
mov
cmp
in
push
mov
inc
jne
gs
cmp
or
adc
and
iret
aam
mov
js
fnstenv
out
mov
mov
sahf
test
xor
dec
pop
das
cli
out
cld
pop
insb
test
mov
pop
jae
movsb
xchg
out
call
in
mov
cwtl
lods
pop
mov
mov
pop
xor
jb
fstpt
mov
adc
aad
inc
adc
inc
sub
ss
push
add
adc
pop
aaa
in
jnp
loopne
ljmp
pop
iret
and
inc
in
sub
std
adc
or
ret
add
into
cld
aas
mov
jnp
jecxz
mov
js
daa
add
aas
push
loopne
and
mov
outsb
or
inc
ret
sbb
imul
jge
and
lock
xor
into
in
stc
jnp
movsb
cmp
dec
cmpsl
icebp
cmc
jno
stos
aas
sub
inc
xchg
sbb
jg
lahf
inc
inc
sub
scas
scas
jl
addr16
repz
fnstcw
and
in
pop
test
jmp
outsl
test
xor
out
out
jge
add
push
or
shlb
lods
pop
ja
fs
dec
push
pusha
or
xor
into
jns
pusha
jnp
mov
je
stos
or
lret
or
pop
mov
arpl
leave
mov
stos
gs
pop
mov
les
sahf
cltd
adc
dec
insl
pop
xchg
js
fadd
push
xchg
test
jns
lock
insl
nop
dec
cmp
inc
add
xchg
aaa
data16
mov
pop
cmp
cli
xor
inc
dec
jmp
frstpm(287
jmp
and
call
mov
xchg
cmp
stos
pop
pop
rol
cmc
mov
cmp
push
stc
pop
aaa
scas
sbb
fildl
dec
fstl
dec
inc
or
adcl
iret
ja
aad
push
or
mov
cld
inc
mov
pop
aam
outsl
pop
xor
xchg
jbe
lock
lods
jae
mov
sbb
xchg
orl
mov
dec
in
mov
scas
imul
imul
cltd
insl
es
inc
scas
int
popf
dec
dec
mov
das
add
cmp
bound
jns
mov
mov
mov
in
aaa
lds
fwait
in
data16
js
dec
stos
in
and
mov
loopne
and
and
subb
adc
adc
mov
inc
ds
pop
std
mov
xchg
mov
push
imul
mov
js
test
adc
push
popf
cmpsl
outsl
sub
out
sarl
xchg
jecxz
shr
sub
and
sbb
int
inc
pusha
push
mov
addr16
pusha
push
mov
jg
ss
jg
jg
pop
loope
cmpsl
cmp
pop
sub
or
inc
cmp
mov
mov
data16
inc
or
cwtl
call
mov
mov
dec
sahf
mov
dec
fiaddl
jp
add
mov
aad
in
pop
pop
lcall
ja
data16
pop
icebp
cmp
jp
mov
out
pop
jp
popf
jmp
adc
fbstp
mul
xchg
pop
sub
pop
aam
repz
mov
inc
loope
push
xchg
repnz
pop
jne,pn
fcomps
push
xor
shlb
jecxz
sub
cld
dec
ret
pop
daa
jnp
imul
in
or
sbb
fwait
sub
mov
test
push
inc
out
xchg
mov
pusha
scas
shll
pop
lds
add
cmp
cld
in
and
jns
xor
pop
sbbb
mov
aad
out
fildll
roll
xchg
cltd
imul
movsb
insb
mov
cld
lret
push
fs
mov
lock
int
cmp
xchg
fnstsw
jo
sub
cmpsl
imul
lret
and
js
xlat
adc
xchg
sub
in
mov
cwtl
leave
repnz
and
sub
mov
movsb
stos
in
aaa
and
pop
dec
sub
pushf
jp
ret
outsl
out
gs
dec
xchg
mov
aam
mov
jb
add
popa
push
sahf
dec
adcl
or
or
and
dec
jnp
inc
fisubs
insl
push
bound
invd
lret
inc
jge
mov
pop
push
call
sub
cwtl
arpl
rclb
jmp
scas
or
or
cwtl
shr
xorb
in
cmp
gs
test
dec
scas
xlat
pop
ja
in
ja
aam
out
dec
or
fucom
pop
rcrl
xor
and
test
mov
mov
xorl
and
jb
icebp
pop
adc
outsl
orb
mov
xchg
jp
push
out
inc
lahf
fwait
pop
cwtl
mov
mov
imul
mov
outsb
xor
mov
leave
push
aam
xchg
pushf
loope
ret
js
subb
jb
data16
pusha
dec
and
pop
mov
mov
ss
inc
xlat
mov
mov
mov
fstpl
or
cmp
mov
std
mov
cltd
shll
lods
pop
ss
cli
sbb
pop
mov
call
cmp
addb
mov
lods
aas
sub
xchg
sub
call
test
retw
aad
dec
xchg
pop
mov
and
cltd
jnp
dec
inc
inc
pop
shrb
sub
mov
gs
adc
add
xchg
pop
in
je
xchg
mov
das
add
fwait
inc
ja
in
hlt
mov
js
inc
adc
adcb
sub
cmp
and
jp
je
lods
les
test
mov
fmul
testl
dec
add
loope
pop
pushf
les
mov
cmpsb
sbb
andb
icebp
lock
stos
lods
call
test
jo
jno
jecxz
mov
pop
rcrb
mov
mov
cltd
mov
push
inc
repnz
jbe
or
add
mov
or
popa
xor
sub
fmul
mov
lahf
jmp
mov
ljmp
gs
insl
sub
lock
out
mov
dec
mov
bound
int
mov
das
test
dec
je,pn
mov
in
mov
aaa
mov
syscall
rcrb
mov
mov
mov
fwait
lea
mov
int3
push
xor
into
mov
int
ljmp
xor
pop
mov
sub
sub
test
jp
dec
xchg
ds
outsl
pop
lret
loope
cmc
jns
loop
pop
mov
push
inc
inc
mov
aad
or
andb
lret
mov
sub
jge
ror
in
cmpb
sarl
test
shll
call
imul
out
cwtl
test
mov
pop
cmp
outsb
mov
imul
cs
pop
orb
data16
lahf
dec
dec
cmp
mov
dec
in
adc
mov
test
aam
das
or
dec
addr16
dec
inc
and
mov
repz
sub
mov
add
lret
mov
cld
dec
dec
push
xchg
inc
cmp
movsb
dec
xchg
aas
jnp
xor
movsl
cld
cmp
push
or
ficoml
dec
cmp
roll
or
divb
pusha
push
sbb
xchg
fwait
jg
xchg
xlat
xor
push
adc
aad
pushf
popa
xchg
add
lods
pop
shll
pop
test
push
lahf
sbb
pop
shl
jo
xchg
add
shr
or
mov
mov
push
pop
sbb
es
mov
je
leave
mov
mov
repz
xchg
lods
fadd
mov
add
dec
xor
les
int
roll
mov
packuswb
and
inc
je
addr16
insb
out
add
les
jns
adc
daa
dec
ljmp
imul
stc
jmp
xlat
inc
dec
inc
sti
repz
in
mov
inc
out
xchg
cltd
sub
addb
ret
cmpsb
es
sub
jl
out
in
mov
hlt
cltd
outsb
in
xchg
in
insl
pushf
cmp
fcmovbe
rcr
xor
cwtl
sahf
movsb
mov
mov
cltd
cmp
lock
testb
stos
cld
fisttpl
jmp
icebp
enter
shrd
sbb
sarl
iret
sbb
or
cmp
mov
cwtl
mov
test
dec
sub
push
push
push
iret
mov
lahf
push
movsl
push
inc
jge
adc
mov
lods
jge
dec
xchg
fsubs
or
dec
and
gs
pop
cld
leave
mov
mov
data16
fcmovbe
mov
cmp
jecxz
rcll
jae
sahf
jae
mov
jbe
clc
out
mov
adc
addl
adc
jns
mov
mov
mov
mov
adc
aaa
ret
and
xor
loope
jo
daa
pop
sahf
or
mov
jae
mov
daa
add
fidivrs
aam
int
sbb
std
sbb
out
cmpsb
leave
cmp
pop
fstl
xor
idiv
shlb
xor
lahf
scas
adc
in
sbb
dec
bound
push
dec
or
loopne
pushf
shr
cwtl
ret
mov
xor
lahf
pop
and
cmp
jne
aas
subl
shlb
mov
mov
inc
jg
outsl
lcall
aaa
jmp
pop
inc
and
stc
add
xchg
arpl
aaa
fildl
loope
outsb
arpl
jo
cld
jmp
idiv
sti
xchg
inc
das
stc
push
mov
insb
arpl
js
mov
dec
pop
cmp
mov
sbb
xor
sti
popa
jae
and
xchg
push
mov
js
fists
lock
imul
out
xchg
jbe
fcmovnb
mov
xchg
lret
xlat
or
and
mov
or
inc
addr16
in
and
loope
fistps
sbb
outsb
jns
or
stc
fildll
mov
aas
shll
pop
and
dec
movb
rcr
clc
add
sub
and
movsl
test
dec
push
adc
mov
into
adc
push
sub
std
dec
lock
cmp
xchg
inc
and
test
xor
fists
ret
enter
and
test
push
inc
xchg
je
into
gs
aam
mov
mov
sbb
test
push
push
test
lcall
cmpsb
mov
test
loop
xchg
ret
inc
lcall
add
enter
xor
adc
stos
push
add
cwtl
mov
ret
fnstsw
cmp
repz
jae
add
adc
add
cltd
aas
addb
jae
les
adc
int
mov
icebp
fistpl
push
inc
cmc
adc
xchg
ds
cmp
fs
test
and
addb
addr16
out
pusha
lods
out
mov
inc
mov
push
mov
jle
pmaddwd
xchg
xchg
pop
mov
leave
mov
or
popa
ljmp
mov
rcrl
rcl
mov
fnstcw
dec
sahf
pop
lods
inc
shrl
xchg
xor
imul
cmp
and
lcall
and
mov
sub
call
jne
fdivp
cmpsb
pop
rcrl
sub
popf
adcl
adc
hlt
xchg
and
inc
mov
test
jno
sti
rcrl
pop
sub
dec
cmp
lcall
inc
jg
sbb
adc
outsl
or
dec
adc
loopne
inc
cmp
fstps
mov
imul
or
cmp
jnp
fs
nop
lds
add
lahf
adc
out
daa
mov
mov
rep
out
jne
or
lock
push
inc
sbb
dec
jg
outsl
and
cltd
shrb
aas
adc
add
pop
mov
jecxz
or
push
pop
jmp
inc
cld
es
inc
das
shl
mov
sbbl
adc
push
sub
pop
icebp
mov
mov
push
sbb
outsl
dec
jnp
out
pop
aas
pop
ja
and
ljmp
dec
dec
jle
cmp
lcall
pop
jmp
inc
jne
and
test
xor
push
xchg
mov
adc
push
sub
test
pop
pop
arpl
out
fcmove
loop
lds
push
xor
inc
test
mov
add
test
rcll
mov
imul
ret
hlt
ljmp
add
ss
xchg
leave
ret
fnsave
xor
popf
add
clc
popa
sub
shlb
pop
jbe
ffree
and
dec
and
dec
mov
das
mov
xchg
lret
sahf
dec
sub
orb
push
push
xor
mov
mov
jmp
xchg
push
jl
sbb
jle
add
std
sahf
cmc
mov
in
jmp
shll
adc
out
loopne
and
mov
cltd
mov
mov
cmpsb
fsubrs
or
aad
out
aad
cmpsl
jo
gs
adc
nop
scas
or
cmc
bound
jb
cmpsl
cmp
cmp
movsb
add
lods
rorb
adc
and
pop
mov
mov
out
cli
xor
sub
incl
and
adc
pop
jmp
clc
add
sub
lcall
mov
dec
add
xchg
pop
mov
shl
push
xor
out
xchg
jge
jno
lcall
or
add
fistpll
mov
mov
sahf
fimull
cmpsl
xchg
jns
ljmp
stos
mov
or
inc
incl
hlt
call
das
sti
xchg
mov
mov
mov
mov
mov
add
cmp
mov
dec
es
in
sub
test
negb
dec
or
dec
push
pop
fdivrs
xchg
arpl
cmpl
je
in
mov
mov
mov
test
adc
xor
mov
outsl
sbb
aad
xchg
mov
or
xchg
in
es
call
mov
fidivrs
add
add
sbb
xor
es
out
pop
popf
jecxz
das
cmp
aam
mov
inc
dec
les
and
pushf
add
or
aad
out
jae
ljmp
jle
pop
outsl
sbb
and
fistps
or
icebp
repz
dec
data16
dec
cmp
xchg
push
cmpb
movsl
and
sahf
mov
sub
mov
push
mov
mov
stos
rcl
pop
std
mov
movsl
bound
pop
stos
xor
es
mov
push
std
xor
subb
sbb
jge
and
inc
adc
push
sub
addr16
adc
jbe
enter
test
cmp
dec
ss
inc
dec
faddp
jl
jno
or
insl
test
pop
ljmp
jg
cli
fildl
pop
dec
xor
dec
cld
sbb
pushl
std
cmc
inc
popa
and
scas
out
insb
ret
jg
bound
xor
lock
cltd
int
mov
add
xor
aaa
push
mov
nop
and
mov
pop
xchg
xchg
ja
cmp
sbbb
sub
dec
add
mov
out
lret
or
and
movsl
push
mov
cmp
ss
lock
jmp
cmp
fldcw
arpl
sub
push
pushf
fsubrs
enter
mov
fwait
pop
std
add
inc
cmp
lcall
out
sbb
jo
fsubrs
out
cmpb
testl
iret
dec
inc
scas
or
fisttpl
xchg
or
xor
sbb
out
aad
cmp
stos
repnz
adc
xchg
imul
sti
rcrb
mov
cld
mov
mov
lea
in
xchg
int
xor
jecxz
sbb
fxch
shrb
loop
loopne
mov
call
xchg
or
mov
lcall
push
mov
push
dec
outsl
pop
stos
add
push
sbb
loop
ja
xor
sbb
les
mov
jae,pt
out
pop
push
ret
fwait
jecxz
ret
sub
insl
cmpl
movsb
out
fcoml
cmp
insb
sbb
sub
sbb
cld
clc
inc
xchg
cld
sbb
jl
orl
and
stos
mov
add
jge
pop
push
mov
inc
lret
jecxz
test
inc
enter
jl
mov
or
bound
cli
leave
stos
push
sbb
lea
jae
stos
mov
jecxz
imul
gs
adc
outsb
sub
xchg
xchg
mov
pop
mov
mov
leave
jb
mov
lds
inc
push
call
sbb
mov
cmp
shl
cmove
xchg
mov
xchg
dec
fiadds
fsubr
in
loope
insl
push
adc
add
mov
mov
fs
or
cmp
inc
ret
add
mov
call
mov
inc
push
mov
add
sub
inc
aad
sahf
cmp
pop
sti
unpckhps
jno
add
insl
cmp
sub
cmp
inc
call
sarb
push
loope
aas
xchg
repz
dec
dec
fcoml
xchg
xor
mov
std
or
and
xchg
push
mov
jae
xchg
pusha
movsb
mov
add
ja
popa
pop
mov
mov
lahf
lods
iret
sbb
push
xor
sub
ret
pushf
scas
adc
xor
shlb
inc
cs
or
push
idivl
add
mov
jmp
lea
fstps
insb
cmpb
sahf
pop
movsb
push
sub
add
mov
arpl
sub
sub
push
and
cmp
movsb
or
fs
les
cli
xchg
rcrl
lds
or
fcmove
loope
jle
ljmp
jno
push
jg
mov
fnsave
pop
ja
in
daa
bound
sub
cmpsl
mov
fwait
push
iret
leave
repnz
iret
mov
lock
and
mov
pop
pop
push
int
jno
pop
clc
mov
mov
mov
pop
sbb
dec
jb
std
out
int
xchg
mov
test
xorps
push
xor
xchg
cmp
sbb
push
cli
movsl
sub
and
flds
outsl
in
xor
inc
add
xchg
ret
jl
pop
and
in
stos
adc
sar
mov
xchg
push
jmp
repnz
dec
adc
ljmp
or
or
fidivrl
mov
fiaddl
pop
mov
les
sahf
add
sbb
outsl
mov
out
xchg
fcmovbe
int3
int3
rol
and
mov
add
push
sub
push
fisubrs
mov
gs
lcall
inc
ror
popa
je
jp
cltd
out
ljmp
jno
push
out
xor
add
cmc
push
and
jae
xchg
jae
sbb
outsb
adc
cmp
cmp
movsb
addr16
lock
bound
mov
test
lods
xor
cmp
test
subb
das
in
sub
push
jl
sub
dec
sarl
jo
pop
xor
mov
pop
insb
cltd
in
cltd
mov
scas
or
pop
fwait
sbb
rcr
xor
loopne
sbb
mov
mov
push
xlat
push
dec
pop
shll
push
and
xchg
cli
jp
mov
push
or
sbb
je
jae
cli
xchg
out
xor
test
jb
xchg
pop
adc
ss
gs
shll
mov
cwtl
dec
shll
add
aam
jnp
sub
rclb
jne
rcrl
mov
out
lods
dec
int3
cs
sbb
cld
mov
mov
ret
or
sub
mov
mov
pop
sbb
mov
mov
addb
and
sub
leave
insb
lock
loopne
das
std
mov
mov
and
and
std
out
insl
dec
inc
imul
adc
lods
daa
imul
cmp
xor
cmp
pop
mov
push
rol
mov
idiv
lret
faddp
mov
mov
or
lret
stc
cmpsl
addr16
push
mov
xor
inc
cmp
test
loope
push
xor
icebp
push
test
jle
enter
inc
xchg
sahf
icebp
in
push
dec
subl
outsb
xor
in
out
and
mov
push
pop
mov
inc
ret
add
add
pop
ret
mov
sahf
inc
mov
fs
fcmovbe
jnp
outsl
mov
lcall
aas
or
adc
push
xor
mov
or
sub
int
sbb
addb
das
xor
dec
inc
in
xor
mov
clc
call
jge
rsm
popa
jns
pop
xchg
pop
dec
es
mov
sub
stos
jns
or
adc
xchg
dec
or
test
shll
pop
arpl
mov
xchg
mov
cmpsl
dec
cmp
shll
and
jnp
pop
gs
adc
icebp
xchg
xlat
xchg
cld
mov
xchg
lcall
xchg
je
jp
sub
lds
sub
push
dec
push
pop
aad
call
mov
inc
fwait
and
ss
stc
int3
or
fwait
mov
add
jecxz
daa
pusha
adc
fwait
sbb
xchg
pop
insb
or
push
cwtl
rorb
mov
cmp
jmp
popa
fldt
mov
add
loop
sbb
loopne
out
sarl
sbb
cs
das
mov
fwait
call
leave
pop
fwait
nop
pop
push
jbe
jb
insb
mov
xor
mov
inc
lret
dec
pop
mov
out
daa
orb
into
lds
int3
push
outsl
add
test
ds
mov
cmpsl
mov
pop
add
push
aaa
jb
int3
and
push
add
mov
ret
mov
xchg
test
mov
xor
dec
pop
xchg
jae
fstl
jl
cmp
adc
repz
and
rol
int3
pop
and
stc
shlb
mov
scas
push
adc
out
push
xlat
mov
sbb
fs
xchg
int3
sbb
ds
cltd
mov
gs
int
fldl
xor
xor
daa
leave
pop
das
fisubl
fs
sub
inc
test
mov
mov
mov
aad
xchg
cltd
cmovbe
fildl
sarb
jbe
dec
mov
jl
add
mov
loopne
add
fsubp
mov
ljmp
shl
mov
push
sbb
aaa
add
repnz
je
xchg
pop
mov
ret
cwtl
push
sbb
and
arpl
nop
fwait
loop
pop
fsubr
loopne
lock
repz
xchg
pop
or
repz
xlat
jl
lock
add
push
inc
and
dec
dec
leave
cmovge
mov
test
dec
mov
pop
enter
cmp
cs
test
inc
cmpsb
js
push
movsw
fldt
xchg
push
inc
mov
push
xor
mov
adc
bound
and
in
jnp
mov
inc
and
jmp
int3
jno
cmp
push
stos
ret
aas
push
sbb
inc
dec
jno
movsl
sub
fninit
add
repz
bound
inc
jmp
sub
lahf
nop
inc
fcoml
in
into
ror
pop
in
clc
jmp
push
push
jae
nop
out
lods
or
mov
mov
push
nop
dec
insb
jne
sbb
fsubr
mov
xchg
inc
jmp
xchg
sub
pop
bnd
imul
fimull
push
dec
pusha
mov
adc
push
add
jno
inc
dec
adc
rcrl
inc
lcall
add
sbb
out
xchg
xchg
fcmovu
push
fucomp
rolb
mov
scas
loope
test
xchg
lock
mov
jl
inc
lcall
popa
frstor
mov
cli
inc
mov
sti
js
test
das
mov
mov
addr16
mov
lret
jmp
push
push
imulb
enter
scas
fsts
addb
mov
add
mov
cmpsb
inc
stos
bndstx
and
xorb
or
xor
scas
bnd
or
jbe
adc
and
lock
mov
das
push
dec
jb
hlt
push
or
test
sahf
out
gs
xor
cmp
adc
jecxz
mov
je
mov
add
mov
cs
mov
shl
adc
fs
push
mov
nop
sti
orb
push
inc
push
outsb
cmp
jl
outsl
mov
lock
xor
cltd
xchg
je
dec
out
rorl
sub
inc
ret
lods
sbb
adc
in
repz
push
std
xor
mov
push
pop
mov
lods
jmp
jno
cmp
inc
jecxz
out
lods
in
jbe
pop
imul
fmul
repz
lea
or
cwtl
push
in
fwait
mov
cmpsb
xor
xchg
pop
jl
and
iret
cmc
out
and
pop
pop
cmp
sti
sbb
cmpsb
test
pop
std
call
fnstcw
xchg
push
cmp
test
out
or
out
xor
cli
arpl
aam
scas
sahf
repz
inc
sub
xchg
jl
fwait
or
in
sub
repnz
pop
imul
andb
xchg
xor
and
pushl
push
sub
fimull
shld
mov
and
inc
loope
sbbl
divl
mov
push
jmp
pop
jge
inc
or
lods
out
jne
push
pop
cmpsl
lock
mov
sub
dec
je
pop
dec
jo
sbb
cmp
adc
push
mov
in
cmc
lret
insb
inc
out
fwait
inc
jns
sub
jge
sbb
mov
scas
mov
lahf
scas
mov
cmp
dec
and
test
or
jge
mov
sub
sub
iret
fisubs
sub
push
into
movsb
and
add
sbb
or
jg
pop
inc
je
rorb
lcall
inc
pop
cmp
sbb
mov
lret
add
cwtl
sub
es
je
ja
cmp
sbb
iret
outsb
cs
roll
pop
fmull
test
xor
mov
push
je
in
stc
jne
js
aaa
dec
int3
inc
fistpll
dec
sub
lds
push
scas
push
add
cwtl
cwtl
popa
jnp
cld
clc
sub
jmp
fsubrs
and
inc
pop
test
idivl
mov
das
xorl
push
sub
sub
cmp
pop
repz
mov
stos
movsb
push
incl
jecxz
or
or
cmp
sub
jle
insl
push
add
sti
cmpsl
dec
popa
aas
mov
mov
inc
cli
lods
xchg
add
mov
sbb
sub
lods
xchg
jge
aad
std
sub
fsubl
mov
jge
addb
sub
sarl
mov
cmp
adc
push
pop
mov
cmpsl
aaa
adc
and
xchg
add
popf
jb
push
aam
jg
lock
push
jae
xchg
ret
add
xlat
dec
aad
repnz
mov
jae
imul
or
sbb
adc
insb
ljmp
add
and
push
xor
sbb
lock
cmp
pop
sbb
incl
in
in
ja
jns
or
sbb
or
mov
das
mov
pop
push
fstl
fld
js
loope
out
mov
popa
cltd
clc
xchg
xor
xchg
xchg
int
cs
push
inc
mov
es
dec
decb
adc
cmp
ror
push
in
out
sbb
cmp
pop
ud2
call
pop
xor
notb
popf
cmpsl
imul
js
adc
js
scas
push
jmp
add
adc
hlt
mov
and
xor
mov
popf
into
adc
jno
jns
lods
divl
outsb
mov
cmp
or
jnp
fisttpl
dec
es
stc
adc
andb
outsl
xchg
cli
xor
movsb
mov
jle
cmp
or
stos
sarl
jmp
inc
pop
lahf
push
adc
adc
dec
es
inc
or
cmp
dec
sub
in
insb
and
movsl
dec
or
insl
mov
cmc
popa
or
and
cmpsb
sbb
add
rorb
pop
data16
mov
sub
sub
add
add
xchg
xor
inc
jecxz
mov
daa
fbld
push
outsb
ljmp
mov
fstpl
mov
jmp
out
jns
shll
dec
pop
and
inc
icebp
jle
pop
push
pop
cli
mov
inc
pushf
in
adc
sbb
imul
push
sti
xchg
push
inc
les
xchg
divl
jle
and
adc
ret
orl
add
push
dec
outsb
xchg
push
shll
xor
int3
inc
push
dec
dec
out
mov
aam
push
cmp
aad
inc
in
lcall
test
jbe
mov
outsb
xor
mov
inc
add
sub
in
push
cltd
inc
xchg
add
loopne
jnp
test
cmp
testl
xlat
call
add
in
push
sub
push
in
dec
std
push
rol
inc
dec
push
ret
movsb
pop
inc
mov
ret
fimull
sub
addb
mov
push
mov
call
xor
shrl
and
push
pop
cmc
orl
pop
add
mov
ret
insb
repz
xchg
icebp
aaa
adc
sub
cmp
je
fildll
sbb
js
sub
fnstsw
mov
lcall
xchg
jmp
mov
mov
push
pop
andb
sarb
test
movsl
xchg
pop
inc
xor
jae
loopne
stc
mov
shrb
xorb
sub
ret
push
xchg
xor
mov
sbb
and
xor
jnp
push
adc
pop
frstor
cmp
test
pop
lods
fbstp
mov
lret
sub
and
jno
inc
aam
call
js
jg
aas
push
lods
push
fs
fcmovnu
repnz
loop
mov
aam
push
jae
int
sbbb
addb
xor
push
rcll
lret
gs
xchg
sub
fidivs
and
xchg
cmpsb
js
iret
dec
mov
aaa
aam
cltd
out
lahf
cmp
fwait
test
add
fadd
ljmp
xchg
clc
and
cmp
lcall
daa
jno,pt
mov
es
dec
push
mov
movsl
or
cli
adc
xchg
addb
mov
stos
test
ss
jo
scas
andl
sbb
cltd
mov
sub
mov
out
loop
jp
inc
mov
scas
cmp
dec
negb
jmp
int
cmc
mov
dec
rclb
xor
mov
dec
inc
ficomps
dec
push
xor
cmp
pusha
pushw
dec
pusha
iret
xchg
jg
in
mov
out
jo
mov
jge
cmc
jno
ret
lods
inc
jge
mov
xchg
inc
ds
popa
fsubr
inc
les
xchg
adc
jl
std
ret
stos
xor
cld
fnstcw
inc
sbb
sbb
cltd
repz
xor
fsubrs
xor
call
sahf
in
or
sub
stos
ljmp
leave
sti
in
cli
enter
mov
fbstp
cmp
adc
jo
pop
repnz
add
dec
jge
adc
pushf
jno
jle
aam
dec
rclb
lahf
int
mov
inc
popf
je
dec
dec
inc
out
in
insl
sbb
push
testl
mov
movsl
sub
mov
cwtl
fwait
cld
inc
ljmp
test
mov
dec
xchg
pushf
dec
aas
mov
and
mov
imulb
and
shrl
loopne
das
xor
repz
pop
mov
sbb
popa
and
test
lods
dec
stos
es
outsl
fs
fisttpll
or
rcrl
out
dec
sbb
pop
mov
cmpsl
pop
jb
inc
scas
push
icebp
jbe
jecxz
dec
popf
push
enter
inc
fnstenv
imul
stc
lcall
inc
popf
fsubrl
shll
push
imul
int3
fsubs
mov
cmp
jo
mov
mov
mov
cmp
sub
into
xor
stos
jo
fnstsw
dec
mull
pop
xor
adc
leave
inc
mov
jo
jge
or
lods
imul
push
lds
xchg
ret
adc
sub
push
xchg
xor
stos
stc
or
jg
loop
jg
or
test
std
jno
jnp
pop
mov
leave
ljmp
fstp
bound
sbb
testb
out
sub
bound
cmc
int
jecxz
sarb
hlt
loopne
sub
ss
sbb
enter
pop
movsl
add
mov
push
mov
jae
clc
outsb
das
in
inc
jne
push
jo
nop
push
xor
jmp
imull
mov
jle
clc
leave
out
add
fstpt
ret
or
add
sub
ljmp
inc
aad
sub
pop
add
imul
mov
mov
pushf
xchg
aam
dec
mov
or
push
jo
xchg
and
push
push
inc
aam
mov
loop
mov
inc
pop
and
cli
push
or
mov
xor
mov
jbe
xchg
clc
out
and
add
ljmp
xchg
lock
out
repz
pop
loopne
pop
sub
loope
sbb
addr16
negl
std
lahf
leave
and
enter
fcoml
mov
xor
aas
lahf
mov
dec
and
mov
enter
mov
fwait
int
in
lahf
dec
aas
sbb
out
fs
adc
inc
fwait
in
insl
cwtl
and
cld
sub
inc
stos
xor
rolb
sahf
adc
jns
dec
sub
mov
cs
push
rorb
test
icebp
shrb
mov
insb
stc
adc
push
cs
mov
pusha
add
test
xlat
nop
sub
push
dec
loop
lret
push
ret
icebp
adc
outsb
and
xor
push
lds
pop
mov
scas
pop
rcll
and
jge
je
mov
lret
aas
adc
js
sbb
stos
lret
imul
add
and
jmp
xor
jl
rcrl
insl
ss
pop
insl
enter
mov
sarb
fcompl
lretw
and
in
jnp
in
xchg
lcall
ljmp
rdtsc
lods
lcall
cwtl
pop
inc
or
pop
cld
fcoms
js
insl
ja
incb
jae
andb
scas
test
cmp
push
cld
test
xor
inc
inc
lods
jl
push
out
cmc
ljmp
jp
pop
loop
sbb
lret
loopne
or
popa
or
in
sbb
je
loopne
adcb
dec
inc
into
jmp
inc
push
dec
jmp
scas
sub
xchg
pop
testl
add
sbb
fsubl
psubusw
adc
sbbl
dec
cmp
cmp
fildl
adc
jecxz
mov
cmp
mov
or
int3
adc
mov
and
addl
lods
outsl
nop
enter
adc
stos
jl
les
je
lret
mov
sbb
mov
mov
repz
iret
clc
dec
outsl
aad
lods
lcall
mov
pop
popl
outsl
mov
jb
adcb
jne
mov
adc
pushf
test
mov
leave
push
push
jne
adc
gs
leave
ss
and
dec
fwait
sbbl
push
cmc
lcall
sahf
lret
mov
cmc
pusha
mov
pop
adc
inc
mov
mov
xor
outsb
push
loop
sbb
idiv
addr16
ds
xchg
adc
jb
dec
inc
adc
pop
popf
mov
inc
loopne
iret
test
mov
lret
jmp
in
bound
xchg
mov
mov
jo
fldl
inc
jne
pop
in
sti
inc
or
imul
ljmp
sub
inc
add
dec
mov
dec
leave
mov
sbb
push
stos
jbe
xchg
lret
or
fnsave
fs
aad
shlb
mov
ret
fldt
mov
movb
xor
mov
jmp
je
fsts
jmp
jp
xlat
fcmove
xchg
sbb
pop
inc
xchg
jmp
sbb
add
pushf
cmpsl
cmp
sub
mov
orl
jp
test
popw
mov
lret
stc
mov
jbe
pop
in
cmp
pop
fisubs
adc
cmp
pop
enter
std
shrl
imul
mov
mov
pop
inc
jnp
jno
cmp
inc
sub
cwtl
push
mov
push
frstor
and
ja
sbb
or
inc
add
xlat
pop
mov
pop
pushf
je
jmp
xchg
or
shl
addl
enter
dec
mov
inc
outsb
inc
clc
mov
push
jbe
stos
je
shll
pop
xchg
jne
inc
rorb
jge
je
insl
insb
pop
test
inc
cmp
pop
cmpsb
and
cmp
and
cmp
das
dec
add
lods
dec
pop
fwait
jne
bound
pop
pop
sub
js
pop
and
xchg
test
into
jnp
das
jge
inc
sbb
je
pop
push
in
stos
dec
hlt
insl
and
xor
mov
pop
cltd
ret
lods
out
adc
xchg
movsl
xchg
mov
mov
sub
mov
call
jp
mov
jne
jo
cwtl
push
sub
jae
add
lds
fsubl
insl
imul
cvtdq2ps
jae
pop
test
lret
mov
clc
pop
cli
push
enter
and
clc
mov
in
pop
fwait
mov
mov
ss
dec
xchg
sbb
cmpsb
int3
add
mov
test
or
jno
pushf
sub
aam
mov
cld
jbe
jnp
movsl
es
push
loop
add
lahf
in
aas
xchg
sbb
mov
stos
fists
mov
insb
xlat
iret
in
mov
add
jae
push
mov
cmc
pop
cmp
iret
mov
scas
fnstsw
mov
or
push
popf
add
sub
cmc
sbb
in
ja
cli
sub
pop
lahf
push
add
mov
loop
fiaddl
push
add
mov
or
scas
das
sub
mov
jge
dec
loop
test
jg
adc
lea
xor
mov
fisttpll
dec
or
nop
push
ret
pop
sbb
mov
and
mov
add
mov
xchg
xchg
mov
add
jmp
pop
jl
pop
push
lds
jno
and
add
jmp
adc
pushf
xchg
icebp
push
push
sbb
dec
icebp
pusha
cmp
fisubrs
and
test
les
out
testb
imulb
mov
dec
fwait
push
jbe
bound
aad
or
mov
jb
jns
mov
frstor
cmp
jns
rcr
int3
fmul
xchg
sub
xchg
jae
sub
movsb
jg
push
sub
repz
cmp
xchg
xor
push
jns
jg
jno
mov
xchg
push
pop
or
lcall
in
loop
cmc
ret
sbb
xchg
insl
xor
pop
pop
js
mov
jne
aaa
mov
xor
daa
inc
jno
cmpsl
cmp
cmpsb
push
test
pop
sbb
rcrb
fisttps
loop
lods
jns
int3
adc
jne
loopne
cli
nop
aad
mov
loope
pop
std
push
jno
clc
cmp
orb
push
les
pop
push
dec
mov
stos
out
xchg
xor
push
push
and
test
repnz
mov
mov
leave
mov
xchg
mov
scas
sbb
lret
test
xchg
mov
aaa
and
in
sti
mov
loopne
lahf
push
or
roll
shr
pop
pop
push
mov
pop
outsb
cld
mov
cmp
sub
cmp
mov
cwtl
mov
out
test
mov
ljmp
shrl
les
xchg
gs
fldl
xchg
insb
sub
test
pop
adc
add
rcll
test
xor
jne
pop
aas
cli
bndstx
icebp
imul
and
push
sub
out
jecxz
clc
dec
ds
pop
loope
in
test
cmp
jmp
mov
adc
fxch
dec
into
jo
jecxz
ret
fdivr
sub
sbb
cmc
sbb
mov
adc
add
inc
roll
stos
imul
sbb
jb
clc
xor
icebp
sbb
in
and
repnz
mov
decb
cwtl
lock
arpl
fcmovnb
dec
mov
in
and
hlt
stos
sti
sti
sbb
mov
lods
cmc
push
pop
pop
sbb
scas
lods
imul
mov
popa
cltd
mov
push
push
ret
mov
mov
cmpsb
iret
cltd
and
pop
push
sbb
out
and
inc
imul
fsubrs
pop
iret
mov
xlat
arpl
in
cmp
mov
aad
dec
mov
roll
adc
repz
jle
scas
and
scas
push
cmpsb
out
and
jbe
adc
lcall
mov
sub
jecxz
xor
js
pop
test
push
or
push
add
mov
in
adc
sbbl
push
mov
or
mov
icebp
aam
push
fbld
sarb
dec
mov
insb
lahf
jo
cmpsl
sub
repnz
nop
jo
jp
cmp
pop
sbb
pop
cmp
or
adc
and
leave
xchg
inc
cmp
mov
mov
sub
cld
jae
mov
outsl
xor
pop
notl
out
test
test
inc
bound
call
lahf
xor
lea
out
loope
inc
add
iret
fldt
adc
ja
mov
jns
stos
lcall
int
xchg
lea
xchg
mov
aad
out
mov
xchg
cmpsl
gs
push
jl
vmovddup
fdecstp
imul
mov
adc
out
add
cmp
imul
cmpsl
test
jge
pushl
pop
ja
outsb
mov
add
pusha
jb
pop
cwtl
push
cwtl
pop
out
cwtl
mov
nop
sbb
mov
scas
pop
lcall
inc
cmc
xor
mov
xchg
sub
inc
fisttpl
push
jg
je
js
adc
fsts
rol
pop
stos
xchg
stos
xor
ffreep
xor
shl
fs
pop
sub
out
mov
dec
adc
lret
sub
sbb
gs
and
push
fsubs
jp
stos
inc
fnstsw
xchg
jne
cmp
in
movsl
cld
loope
pop
scas
fdivl
dec
lret
je
dec
pop
mov
push
xor
notb
mov
mov
mov
sub
or
sbb
repz
mov
or
clc
addb
nop
imul
test
push
clc
ret
inc
iret
enter
mov
xchg
lcall
out
and
mov
dec
cmpsb
pop
das
sub
adc
cmp
dec
push
add
inc
push
sbb
mov
lret
dec
cmpsb
inc
cmpsl
or
loop
ja
xor
out
mov
bound
hlt
test
mov
cmpsl
push
mov
push
pop
iret
divl
cmp
xchg
ja
fildl
sub
push
xor
xor
ficompl
adc
adc
xchg
outsb
sub
lds
sub
xor
into
subl
sub
mov
outsb
fmul
lret
repnz
sbb
dec
cs
mov
jg
mov
dec
push
sarb
add
fwait
cs
pop
push
or
lods
test
pop
ss
mov
aaa
mov
ret
ret
mov
mov
sbb
push
in
sub
aam
cmp
sbb
mov
inc
xchg
fs
int
pop
ljmp
mov
xor
iret
mov
push
cmp
mov
adc
cwtl
aad
testb
inc
push
out
fucomip
mov
jo
jbe
lret
add
mov
push
push
xor
loope
clc
fistps
xor
lods
out
pop
mov
repz
or
jmp
inc
jp
xchg
clc
iret
rcrb
test
in
xchg
int
jbe
add
mov
pop
mov
xor
add
gs
enter
js
adc
dec
cwtl
test
pushf
movsl
xor
push
add
jns
sar
jl
push
daa
mov
fnstsw
repnz
test
cltd
fmul
ret
mov
filds
iret
jmp
inc
fisttpll
pop
test
jnp
pop
jns
adc
testl
dec
dec
add
loop
stos
cwtl
scas
cmpsb
fistps
test
mov
xchg
scas
adc
mov
rcrb
dec
out
jns
scas
push
jns
mov
in
call
lret
es
cmpsb
call
cmovl
fidivrs
mov
or
loope
imul
cld
pop
arpl
daa
xchg
test
movsl
jnp
popa
push
int
pop
cmp
imul
out
aad
das
repz
repnz
mov
inc
icebp
rcr
mov
xchg
mov
pop
ljmp
add
in
xor
inc
mov
mov
and
jb
fnstenv
sti
mov
or
stos
mov
add
sti
xlat
add
enter
lods
imul
push
pusha
mov
cli
inc
es
fistl
adc
pop
and
jecxz
or
and
out
adc
sbb
cld
adc
cmpsb
dec
sub
add
and
mov
test
stos
and
sub
pop
shl
popa
push
sbb
fs
xchg
mov
lock
adcb
fpatan
test
lret
dec
ret
lods
xchg
ficoms
pop
fimull
rolb
out
out
push
cmc
dec
jmp
jb
xor
push
mov
ljmp
xchg
sbb
out
sbb
mov
das
add
shll
cmp
xchg
mov
dec
push
inc
xor
and
repz
mov
xchg
inc
cmc
cwtl
cmp
rcll
outsl
test
lock
sbb
jmp
mov
testb
cs
sti
and
cmp
test
nop
ds
popf
xchg
lahf
jb
rcl
hlt
test
outsl
mov
shr
movsb
fwait
sbb
outsl
es
ffreep
loop
push
push
insb
sbb
and
lods
lret
idiv
jmp
loopne
jne
fidivs
push
add
sub
cltd
mov
xchg
arpl
sahf
push
ja
jo
xchg
cmpsl
bound
movsl
xchg
jbe
dec
call
test
jnp
inc
xchg
cmp
xchg
icebp
sbb
call
mov
inc
icebp
lcall
loopne
sarl
add
loop
adc
mov
cmp
mov
and
addl
lods
xor
add
push
fsub
scas
imul
test
and
mov
cmp
inc
jp
sbb
adc
sbb
inc
scas
cmp
and
xchg
es
jns
shl
mov
dec
shll
sub
pop
leave
push
add
hlt
je
cltd
repnz
in
mov
sbb
mov
out
aas
daa
mov
mov
pop
nop
mull
push
push
pop
add
xor
aaa
fs
or
cli
sub
push
hlt
movsb
pop
mov
daa
add
test
ljmp
stos
pop
fs
and
sarl
loopne
adc
xchg
jb
jne
lock
nop
shlb
test
cwtl
mov
mov
sahf
pop
push
addr16
rclb
pop
rcr
into
mov
xchg
pop
jl
dec
push
sti
jo
mov
push
mov
test
loope
subl
inc
mov
test
and
fld
jae
inc
cli
xor
sbb
test
mov
inc
inc
sbb
lret
inc
pop
daa
mov
call
mov
adc
lods
in
mov
loopne
xor
mov
ds
imull
or
cld
cmpsb
stos
fbstp
pop
in
ret
dec
sub
popf
test
in
pop
loop
dec
add
in
out
push
dec
sbb
add
dec
jbe
push
xor
mov
add
add
push
push
je
in
sub
inc
in
add
inc
push
pop
sub
mov
or
sbb
sub
ficoml
lods
jb
inc
imul
mov
jmp
inc
or
rcrb
sbb
ret
jle
mov
loop
mov
dec
add
aam
fists
movsb
inc
jae
outsb
xor
sub
mov
scas
xor
pop
xchg
inc
into
push
cmp
dec
sub
xor
iret
add
dec
mov
push
test
lock
add
dec
lds
imul
adc
xor
lock
push
add
stos
icebp
push
cwtl
pop
movsb
add
into
aas
jmp
pop
jb
sub
imul
iret
fs
call
push
jo
push
dec
sarl
mov
mov
sbb
int3
jp
mov
or
mov
sbb
or
scas
adc
mov
nop
jb
loop
fidivl
pop
inc
xorl
xor
lcall
xchg
cmp
fwait
mov
mov
xor
ret
dec
sti
rorl
add
xchg
movsl
dec
stos
xchg
xor
mov
jg
lods
insb
out
lock
or
lahf
pop
xchg
pop
push
mov
bound
ret
push
stos
inc
lds
sbb
pop
dec
xchg
cld
jmp
xchg
mov
std
lock
fidivs
std
cwtl
sbb
xlat
xor
xchg
aad
in
int3
and
lahf
push
mov
mov
insl
cmpsl
lock
movl
dec
jb
sub
jmp
loope
dec
push
in
call
mov
and
je
mov
cld
sub
xorb
mov
mov
faddl
mov
dec
and
lea
inc
push
stos
mov
dec
data16
arpl
adc
dec
xchg
pop
cmp
std
andl
test
cmc
lea
cli
pop
mov
mov
mov
inc
in
stos
push
icebp
mov
xchg
or
mov
sbb
test
cmp
jmp
dec
pop
out
and
jmp
pop
lret
test
fnsave
pop
push
fdivl
lods
faddl
stc
cli
test
cmp
lods
jle
inc
stos
bound
iret
les
xchg
adc
out
shrb
jns
wbinvd
ret
dec
mov
int
movswl
in
mov
icebp
imul
insl
jo
lds
jo
dec
pushl
out
push
jo
ret
lret
std
pop
push
cmpl
cld
mov
cs
and
xor
dec
lods
dec
lods
cmp
lods
jbe
push
sub
ja
imul
ds
aas
lahf
sub
out
fcmovb
push
sbb
clc
dec
xor
mov
push
mov
adc
and
adc
movsl
scas
movsb
lcall
in
add
jl
out
mov
push
cmpsb
ret
clc
xor
and
push
js
mov
push
into
or
jmp
test
and
in
jbe
pop
hlt
mov
or
dec
mov
xor
sarl
lods
xchg
push
inc
stos
mov
aad
inc
lea
sbb
popf
out
lods
adc
icebp
je
pushf
pop
aas
std
aaa
enter
sbb
jno
outsb
call
mov
push
jg
dec
movnti
int3
sub
lock
adc
ds
cmp
cs
mov
cmp
orb
and
xchg
out
inc
xor
lds
mov
push
xor
and
test
and
icebp
adc
mov
test
pop
outsb
cmp
jp
sbb
sub
cmpsb
nop
test
dec
imul
xchg
pusha
jae
mov
mov
jne
pop
mov
sahf
add
or
jg
and
mov
xchg
sarl
adc
push
mov
xchg
mov
push
in
push
xor
inc
lods
lea
and
adc
cmp
dec
sub
cwtl
jno
ss
mov
jb
mov
fs
orb
jae
sbb
fidivl
aam
and
inc
in
aaa
cli
jl
xlat
icebp
dec
popf
pop
gs
in
loope
add
shl
mov
push
inc
push
rcll
mov
pop
mov
mov
sbb
enter
jo
in
sbb
xchg
jge
cmp
je
xchg
cwtl
cltd
inc
insl
lahf
shrb
sub
mov
hlt
jp
jmp
inc
out
out
cmpsl
sbb
cmp
int
iret
cmc
adc
movsb
std
fildll
mov
push
jne
xor
pop
scas
iret
es
sub
cli
xlat
imul
push
push
xchg
xchg
mov
xchg
xchg
popa
incb
inc
cmpsl
cmp
je
jl
mov
adc
jb
loop
add
lods
cmp
or
int
jl
dec
xor
mov
inc
loop
in
xchg
push
push
inc
jne
add
int
lock
jb
pop
loop
mov
sti
cmp
int
pop
ret
sbb
lods
arpl
pop
div
push
or
add
sbb
out
cmp
movsl
out
inc
aam
dec
inc
jl
icebp
lods
arpl
xchg
ds
cmp
daa
hlt
in
loope
fmuls
cwtl
ret
push
cmc
add
push
push
pop
mov
sbb
lea
pop
lea
dec
mov
jl
jbe
sbb
out
lds
icebp
dec
je
pop
call
pop
fs
insb
addr16
push
mov
fwait
insb
nop
cmp
les
jnp
fbld
sbb
sbb
pop
dec
rcrl
xchg
jg
outsb
mov
cmp
loop
inc
mov
pusha
addr16
or
mov
stos
mov
mov
cmp
sarl
mov
int3
nop
iret
shll
adc
insl
jae
hlt
mov
ret
ljmp
aaa
movsb
ret
sbb
out
fisttpll
add
fs
or
xchg
pushf
sub
mov
mov
outsl
mov
jne
sbb
jmp
jecxz
pop
or
cwtl
lret
push
or
push
xor
es
vunpcklps
jno
sub
addl
mov
cmpsl
jecxz
jnp
pop
sbb
dec
adc
jns
ja
aas
pop
fdivs
outsb
add
daa
fstps
insl
aam
and
imul
loopne
in
fnstsw
in
fiaddl
testb
and
jmp
add
ret
adc
insb
pop
stos
pop
add
jo
out
adc
mov
mov
xchg
mov
sbb
dec
sub
lcall
and
icebp
cmpsl
and
leave
popa
pop
sbb
inc
adc
push
inc
cmpsb
movsl
xlat
inc
arpl
cltd
in
xchg
or
das
cmpsl
or
jl
insb
push
into
adc
out
push
mov
or
lds
jo
lret
and
sbb
cs
mov
cltd
and
pop
lods
jp
pop
cmp
insb
fs
cwtl
sub
pop
leave
or
leave
pop
dec
cmp
xchg
mov
cmp
mov
adc
mov
and
or
and
push
repz
and
xor
aad
mov
lods
mov
and
xor
jbe
cmp
push
mov
pop
mov
push
or
push
jnp
hlt
in
cli
popf
loopne
cld
cltd
push
sbb
mov
btc
pop
lret
data16
push
int3
cmp
enter
iret
add
and
stos
in
icebp
adc
std
shrb
aas
gs
mov
push
fcmovb
xchg
cltd
mov
add
mov
xor
jno
stc
lods
lods
mov
xor
in
ja
fiaddl
fstpl
mov
ljmp
mov
mov
add
bound
sahf
sub
fcomp
jno
ljmp
and
xor
mov
xchg
mov
jae
mov
and
mov
mov
test
xchg
mov
loope
and
inc
icebp
adc
repnz
adc
shlb
ljmp
cmc
jnp
std
push
dec
cmp
or
scas
int
aaa
mov
inc
imul
cmp
test
aad
and
jne
cmp
shlb
fwait
or
add
xchg
mov
xchg
jmp
push
insl
in
pop
orl
and
lock
das
hlt
mov
dec
xor
test
loopne
test
shrb
cmc
stos
fisubrs
mov
pop
xchg
es
fbld
scas
imul
test
lods
mov
andb
add
addb
popl
std
js
pop
mov
mov
or
xchg
std
jb
jp
cs
mov
sti
pop
in
movsl
mov
popf
cli
shl
test
je
imulb
test
pop
pop
jo
or
sbb
mov
in
jge
pop
and
pop
push
xchg
lahf
push
stc
loop
sub
fs
adc
inc
dec
scas
test
daa
test
cmp
cmpsb
push
mov
daa
lret
mov
mov
or
std
lcall
pop
nop
fucom
mov
pop
add
pop
jb
int
mov
xor
ljmp
xchg
cmp
sub
stc
xchg
cmpsl
lock
inc
jns
mov
xchg
outsb
add
cmp
mov
jp
pop
call
adc
cmp
push
in
xorb
dec
in
adc
popf
mov
adc
imul
cs
adc
popf
cmpsl
into
push
sub
mov
mov
hlt
je
sbb
inc
and
cmp
setns
pop
mov
pop
pop
add
pop
sub
shl
push
xchg
xor
push
sbb
xchg
adcb
scas
xchg
push
lret
gs
add
adc
in
sbb
and
jg
inc
cld
add
lret
fadds
push
jle
imul
and
repz
stos
add
pop
adcl
adc
clc
sbb
mov
and
add
pop
xor
out
test
daa
mov
sub
js
mov
push
xor
jo
stc
xor
cmc
or
add
lcall
fwait
xor
push
test
push
push
jl
pop
push
fistps
mov
push
fisttps
or
jmp
fnstcw
imul
push
dec
mov
adc
dec
dec
adc
inc
dec
aad
das
cli
cld
popf
dec
sub
loope
cmpsb
jns
imul
xor
cmp
js
sub
xor
test
insb
cltd
or
popa
mov
sbb
in
int
stc
mov
xor
xor
ds
jns
scas
fimuls
push
cltd
mov
cwtl
test
xchg
cmp
sub
pop
xchg
out
or
pop
ficoms
jmp
push
lcall
sbb
outsb
add
test
dec
mov
test
mov
mov
es
or
aas
jmp
and
xchg
push
aam
cmp
sub
sti
je
push
outsl
pop
xchg
adc
jnp
or
fldl
call
sbb
mov
mov
push
das
pop
xor
ja
inc
in
rcrb
mov
out
xchg
xorb
xorl
xor
popa
pop
ja
push
loopne
xor
mov
out
xlat
ss
lds
pushf
xchg
shl
iret
loopne
xchg
adc
pop
jbe
sbb
fwait
cs
xchg
sub
ljmp
test
xchg
mov
repnz
test
mov
and
addr16
daa
cmpsb
movsb
loopne
inc
iret
sbb
push
sbb
cltd
outsb
pop
mov
mov
int
js
and
or
mov
pcmpgtd
inc
mov
cmc
mov
scas
dec
jae
lods
xor
push
or
pushf
fs
dec
and
sbb
mov
pop
push
xlat
or
sbb
stc
or
ret
mov
test
enter
js
mov
gs
mov
cmp
add
sub
mov
bound
imul
inc
adc
adc
popf
lahf
and
insb
ljmp
mov
jge
cli
pop
dec
adc
pusha
das
mov
xchg
or
add
dec
pop
mov
daa
les
sub
push
int
sbb
in
loope
push
xchg
test
daa
popf
stos
hlt
inc
mov
jne
outsl
test
dec
dec
je
call
mov
cli
repz
lods
sbb
test
mov
xor
push
mov
test
adc
out
mov
movsl
hlt
cmpsl
push
or
or
jbe
aas
fistl
in
cmpsb
roll
inc
insb
dec
js
fimuls
pop
mov
add
or
lock
pop
xor
outsl
call
and
cmc
imul
test
pushf
mov
and
mov
ljmp
sbb
mov
dec
in
mov
xchg
movsl
sub
inc
sysret
aam
mov
mov
loop
sbb
mov
cmp
adc
popa
js
bound
xor
pop
add
stos
data16
inc
adcl
adc
gs
sub
in
test
mov
fnstcw
popa
jle
pusha
add
aad
and
jae
add
add
ret
mov
lret
mov
ret
daa
xchg
or
mov
sarb
outsb
jbe
sub
loopne
int3
add
aaa
loop
mov
shl
pop
mov
pushf
pop
pop
xchg
in
add
dec
xchg
std
out
sub
mov
loop
xor
test
mov
xchg
mov
jmp
movsb
lcall
scas
add
push
sbb
push
mov
mov
out
push
loop
jae
repnz
inc
std
adc
push
repz
and
or
push
adc
mov
mov
aas
rcrb
push
pop
or
fistpl
jg
pusha
in
push
pop
mov
out
xor
jp
adc
add
dec
or
jne
daa
loope
and
outsl
lds
mov
mov
push
enter
aaa
or
adc
xchg
cli
into
xor
sahf
sub
mov
lock
push
stos
mov
mov
lock
mov
push
bound
out
lds
xchg
enter
push
and
pop
filds
fwait
jbe
daa
push
jbe
orb
jmp
sti
adc
pop
xchg
jne
inc
jb
andb
adc
cmp
lea
jb
sub
jge
stos
or
inc
or
cmpsb
or
dec
inc
sub
cmpsb
xor
pop
das
jae
je
rorl
out
pop
fidivrl
push
les
in
leave
adc
lods
orl
in
mov
lds
insb
jle
sbb
xor
add
jo
fiadds
std
imulb
xchg
loop
cwtl
lahf
pop
adc
mov
divl
ljmp
and
enter
inc
mov
test
jmp
pop
jnp
xchg
xlat
mov
jb
and
int
xchg
sbb
stos
mov
idivb
mov
mov
jnp
or
pop
mov
rcr
xchg
inc
fistps
ds
sub
mov
ret
sahf
cmp
lcall
ffreep
mov
outsb
or
pavgw
push
mov
jle
cmp
nop
mov
sti
jbe
xlat
or
arpl
inc
cli
mov
add
movsb
ss
test
andb
out
xor
pop
push
sahf
push
inc
pop
sbb
lock
adc
mov
mov
cli
pop
fimull
aad
je
fidivl
sbb
pop
lret
idivl
sbb
mov
imul
clc
jmp
decb
mov
inc
sub
mov
push
mov
and
inc
mov
pop
or
mov
daa
dec
in
and
int3
xor
push
repz
fsubl
add
div
and
es
mov
in
inc
repnz
lea
add
push
xor
jne
call
int3
or
mov
ljmp
and
mov
movsl
in
sbb
push
je
adc
ret
pop
mul
rol
mov
or
sub
cmp
mov
sbb
mov
cld
lret
fdivrl
cmp
sub
pushf
and
outsb
sub
popa
mov
fistps
dec
call
aam
jb
daa
icebp
fdivl
popa
jl
mov
xchg
jbe
bswap
std
pop
inc
sbb
sub
adc
out
das
leave
fcoml
stos
sbb
lods
push
mov
in
inc
nop
dec
or
mov
std
mov
push
sbb
nop
andb
mov
adcl
and
ds
in
pushl
ret
dec
push
mov
sub
enter
imul
pop
les
push
add
mov
xor
movsb
sarb
nop
push
sbb
ret
lret
arpl
fwait
pop
jne
repz
cmp
rcrl
xchg
push
jns
das
inc
pop
xchg
cmpsl
pop
mov
shll
push
je
movsl
xchg
outsl
aad
xchg
and
mov
sbb
iret
lods
sub
scas
rcpps
int
lret
add
push
sti
cmp
dec
and
mov
cld
dec
xor
mov
test
lea
dec
xor
jne
pop
mov
shrl
push
xchg
jnp
sbbb
mov
mov
jg
push
imul
pushf
mov
push
cmp
adc
push
cmp
scas
and
mov
xor
in
cmp
dec
mov
lcall
repz
cs
mov
sub
clc
in
xor
or
jae
sub
sarb
jl
fidivrs
popa
int3
and
cmp
int
mov
je
aas
in
mov
fldcw
and
inc
ja
test
leave
sarb
or
xor
gs
pop
jecxz
call
clc
pop
xor
xchg
aaa
cmp
pusha
pop
adc
or
in
push
sbb
mov
xchg
and
out
test
jnp
into
dec
stc
lret
cmpsl
add
jp
sbb
dec
push
pop
mov
add
push
in
adc
jb
frstpm(287
push
cmp
into
jae
mov
xchg
mov
scas
roll
add
or
stos
cld
or
mov
mov
jmp
pop
inc
je
mov
push
jbe
mov
imul
into
nop
into
pusha
fnstsw
jns
orb
add
std
mov
pop
lret
jl
pop
lahf
dec
mov
inc
cltd
sub
pop
add
nop
cmp
cs
sbb
call
add
pusha
adc
jbe
outsl
fiaddl
jecxz
or
pop
faddl
jb
jnp
out
int
sub
in
setno
movsb
movsb
dec
cmpsl
sbb
and
outsl
xchg
xchg
push
fistl
inc
pop
lock
mov
dec
test
mov
pop
in
pushf
push
add
fiaddl
xchg
dec
fcmove
aad
push
and
ret
fidivrl
in
pop
push
xchg
inc
mov
pop
daa
push
aas
mov
mov
jle
dec
xor
stos
xor
push
test
cmc
mov
inc
xorb
cmpsb
decl
xchg
jno
cmp
lea
or
nop
add
stos
jo
mov
cld
pop
jp
xor
sbb
setg
aad
or
or
sub
stos
stos
ds
xchg
cmp
add
fistps
aad
sbb
sub
xor
imul
ja
je
mov
test
ret
add
mov
scas
cmp
xchg
xchg
push
cmp
pop
das
inc
xor
shl
nop
stos
and
sub
enter
xchg
or
pop
xor
lods
testl
push
popa
push
repz
fs
or
add
pop
shlb
cltd
xchg
dec
je
or
mov
xor
in
mov
adc
stos
dec
stc
push
inc
push
imul
mov
ret
data16
push
pop
and
and
push
sarl
xchg
xor
dec
push
les
mov
pop
push
add
nop
mov
roll
add
cmp
addl
ja
popa
call
loope
mov
xchg
xor
pop
data16
adc
inc
gs
rcrb
subb
imul
add
inc
test
sub
hlt
mov
or
pop
xchg
pop
push
clc
mov
push
or
jg
add
pop
lcall
addr16
inc
sub
lds
in
pop
push
repz
rol
addb
mov
int3
add
clc
out
cmp
ret
aaa
jb
fldl
icebp
jp
icebp
movsb
dec
out
pushf
xor
aas
mov
popa
push
and
enter
jae
test
xchg
es
movb
ds
mov
call
sti
mov
mov
pusha
sbb
push
mov
jo
inc
lcall
or
pushf
jb
lods
scas
sbb
pop
cmp
fildll
xchg
sbb
jle
xorb
fstpl
sub
test
sahf
sbb
xlat
sub
jns
sbb
lock
push
pop
sub
inc
enter
scas
int
jecxz
outsl
lock
cmp
repnz
dec
xadd
xlat
pop
push
andb
mov
imul
fs
fidivrl
mov
sub
push
pop
cld
gs
xor
int
inc
cmp
jg
push
sarb
mov
xchg
sub
jecxz
fisubs
jae
mov
pop
jmp
add
xlat
les
fcmove
xor
ficoml
shr
adc
xchg
sbb
repz
or
mov
loop
sub
inc
outsb
mov
or
add
clc
and
outsl
test
jp
repz
sti
imulb
movsl
enter
out
jno
lods
jns
or
sbb
or
add
push
call
rolb
loop
push
dec
adc
cs
test
jl
in
mov
sub
mov
mov
mov
fucomp
shl
call
mov
push
pop
ficoms
push
jno
jb
xor
xor
jg
or
or
gs
pop
mov
inc
sahf
and
push
mov
or
dec
or
arpl
mov
pop
stos
dec
lahf
out
icebp
jae
clc
jb
je
inc
dec
sbb
dec
outsl
loop
cmp
daa
les
mov
jno
fistl
push
dec
mov
repnz
insl
mov
insw
sbb
inc
ljmp
adc
faddl
out
and
inc
pop
cmc
mov
push
shlb
stc
ljmp
mov
cltd
mov
stos
mov
jnp
pop
je
notb
mov
cmpsl
cmpsl
pop
adc
sbb
jg
mov
ret
dec
cmc
pusha
sub
mov
pop
daa
loope
dec
jmp
aad
inc
inc
jne
add
in
movsl
adc
pop
movsb
ffree
rolb
or
xor
jg
mov
jg
push
shrl
out
outsb
pop
movaps
lods
ret
push
cmc
ljmp
or
mov
xchg
sbb
sub
jmp
pop
aad
ds
jge
and
stc
add
push
pop
xlat
xchg
aaa
push
jmp
icebp
push
inc
loop
mov
ja
test
adc
lds
jmp
inc
cmpsb
mov
cwtl
movsl
push
push
add
pusha
daa
aaa
imul
mov
jno
int
fs
mov
test
cmp
fdivrs
sbb
sti
negl
cmp
mov
lret
inc
mov
negl
out
mov
xor
gs
or
dec
mov
inc
lods
fimull
subl
add
jge
cmp
jl
sbb
cmp
sub
push
jecxz
inc
push
mov
xchg
and
aam
adc
inc
add
rcl
sarl
jecxz
imul
mov
repnz
loop
pop
push
testl
or
jmp
inc
xor
dec
rcrb
pop
ja
int
ja
aaa
repnz
fbstp
jns
cmp
cmp
leave
dec
icebp
int
fcomps
orl
pop
push
xor
dec
jp
outsl
clc
mov
lds
out
dec
mov
adc
sbb
jle
or
lock
xchg
jmp
jnp
sarb
xor
cli
sbb
adc
rcrb
aam
sub
and
xchg
flds
sahf
jecxz
lret
add
in
aaa
pop
bound
lea
popf
lahf
rorb
jb
loope
push
sub
xchg
adc
adcl
push
and
sahf
out
jecxz
mov
jecxz
inc
mov
jae
push
in
sbb
ljmp
movsl
mov
std
inc
icebp
aas
inc
imul
mov
test
mov
das
mov
les
inc
cld
mov
mov
and
dec
fidivrs
cmc
data16
mov
sbb
xchg
push
lcall
outsl
jae
data16
jp
dec
cmpsb
in
inc
stos
fs
push
or
push
xchg
int3
out
daa
jge
cltd
cli
jno
jne
scas
out
jno
cld
sbb
into
push
xorb
jne
test
jo
out
int3
clc
ljmp
xor
std
sbb
mov
fcmovbe
pushf
addl
and
lods
sub
xchg
jmp
aam
in
push
or
hlt
add
push
decb
sbb
inc
pusha
add
icebp
mov
dec
gs
xchg
cld
sbb
sbb
shr
ss
sbb
mov
popa
xchg
mov
aas
add
push
dec
repnz
push
mov
dec
push
sti
push
stos
push
arpl
mov
ret
xchg
repnz
outsb
in
pcmpeqw
dec
stos
push
dec
jne
idivl
into
cmp
sbb
sbb
in
dec
cmpsl
sub
dec
adc
stc
and
or
es
add
sbb
xchg
push
stos
shl
xor
sbb
and
fiaddl
xor
ds
es
loope
popf
xor
loop
push
outsl
mov
pop
and
xorb
pop
aaa
jns
das
push
mov
mov
pop
mov
sub
mov
std
stc
add
push
xchg
pop
mov
aaa
loope
repnz
adc
sub
loop
shl
aaa
push
out
fstl
xchg
lds
fwait
sbbb
cs
dec
outsb
jbe
fstpt
sbb
jl
xor
pop
jecxz
mov
jg
ljmp
daa
xor
std
shl
mov
divb
je
aad
jle
pop
push
and
and
add
push
cmpsb
in
mov
xor
add
outsb
leave
ror
sarb
test
orb
jb
sbb
insl
cmp
call
outsl
adc
xchg
mov
mov
cs
dec
mov
lea
and
nop
lahf
jnp
int
fnsave
xor
in
mov
movsl
stc
mov
or
fisttps
jmp
jns
fnsave
add
jmp
in
fistpl
outsb
je
jmp
jmp
inc
enter
fimuls
xorb
sbb
xchg
stc
mov
out
jl
enter
pushf
jns
cmp
sbb
addb
inc
arpl
addl
daa
cmpsl
jb
lcall
ret
in
pop
inc
cs
ret
pop
insb
sbb
cli
mov
fisubs
adc
int3
call
add
test
mov
jp
xchg
out
mov
sbbl
stc
gs
daa
bound
addl
mov
arpl
inc
data16
jmp
call
add
push
les
xchg
arpl
outsl
fidivl
pop
or
stc
cltd
xchg
jo
xor
mov
repz
shll
and
das
leave
mov
les
xor
int
lock
out
call
sub
jmp
notb
cmpl
ds
mov
sbb
lods
cmp
int3
sbb
sahf
insb
imul
mov
sub
mov
imul
sbb
mov
int
ss
mov
xchg
dec
add
dec
push
je
pop
or
and
icebp
and
ljmp
sub
mov
push
push
xor
xor
mov
pop
cmp
add
scas
outsl
push
jno
and
lahf
xchg
lahf
jnp
mov
and
fisubl
aam
fsubrs
adc
ljmp
fdivrl
jmp
or
icebp
push
mov
mov
hlt
mov
mov
jbe
cli
cwtl
inc
cmpsl
scas
imul
add
loopne
cmp
lret
xchg
pusha
addr16
pop
adc
push
lods
jl
int
outsl
mov
sbb
pop
mov
inc
and
rcr
insl
and
jmp
jmp
jg
sbb
dec
repnz
mov
mov
rcl
sti
cmp
loop
mov
mov
adc
xchg
int
pop
xchg
out
incb
xor
scas
mov
in
aas
pop
jnp
jae
add
stos
loope
add
dec
sbb
cmpsl
pushf
je
es
sbb
sub
mov
push
insb
add
pop
iret
fs
outsb
sub
add
movb
jns
inc
push
pop
adc
test
shll
dec
jecxz
sahf
push
xor
cmp
jp
mov
rep
sub
stos
mov
lock
into
nop
sbb
push
dec
xor
mov
dec
push
aas
lods
lahf
lock
sbb
add
cmp
mov
nop
push
loopne
fadds
les
mov
or
in
dec
outsl
add
fcom
and
idivb
sets
lahf
sbb
add
pusha
xor
sti
pop
gs
push
mov
push
pmulhw
mov
pop
mov
or
fistl
inc
pop
dec
popl
pop
and
xchg
mov
mov
loope
test
or
push
movsl
pop
pop
sarl
push
insl
pop
sbb
out
pop
mov
imul
test
pop
mov
insl
push
mov
sub
mov
imul
std
jle
pop
jae
arpl
lods
cmp
fs
push
das
xchg
mov
xor
xor
in
pop
cli
filds
fwait
leave
addb
outsl
xchg
cmp
cmpsl
xchg
in
push
mov
rcll
inc
in
jge
jp
insl
and
sbb
ret
mov
stc
push
insl
rcll
mov
and
dec
rcr
fistl
psadbw
jnp
cs
add
addr16
dec
mov
out
fisttps
pop
test
jp
cli
shll
lret
fwait
push
sub
push
jns
daa
jmp
sbb
hlt
add
or
jb
loopne
jne
mov
pop
incb
xor
sub
enter
iret
xor
rol
enter
pop
xor
scas
pushl
jp
mov
or
stc
or
rcll
mov
jecxz
pusha
and
ret
icebp
pop
incb
fcoml
sarl
mov
sub
jle
in
orps
lods
negl
mov
js
cmp
lahf
push
cmpsb
pusha
or
shrb
ljmp
movsb
mov
shlb
and
pop
jge
lods
xor
inc
xchg
dec
jge
jg
sbb
aaa
sbb
insb
dec
add
dec
clc
sub
out
popa
lret
cmpsb
int3
outsb
push
rcrl
add
jb
daa
fbld
or
stc
pop
aas
out
das
shll
push
push
push
lea
in
xor
out
xor
mov
pop
pop
adc
pop
into
pusha
dec
arpl
loope
gs
pop
add
cld
mov
or
mov
std
push
aas
in
lahf
push
or
or
int
inc
sub
jne
add
js
idiv
call
mov
pusha
stos
push
mov
xor
mov
pop
mov
movsl
or
ds
jns
jb
fistl
dec
sbb
push
jne
jno
mov
push
add
sahf
in
loop
or
pop
outsb
fcoml
mov
push
xor
xor
and
cmp
xchg
shl
add
fidivs
mov
movsb
dec
sbb
es
negb
lds
dec
push
outsl
shll
aad
mov
xchg
ljmp
inc
mov
mov
into
or
cmpsb
ret
std
nop
xchg
sbb
add
push
ficoml
leave
insb
pop
add
dec
icebp
mov
jecxz
mov
pop
sub
cmc
and
adc
sbb
and
testb
mov
or
pop
out
mov
push
pop
xchg
push
test
mov
lock
sbb
enter
and
jp
adc
in
sbb
mov
xchg
aad
cmp
add
dec
cmp
sti
push
imul
cmpsb
mov
add
sub
push
dec
cmpsl
adc
mov
inc
loop
xchg
das
adc
sub
addr16
xchg
jne
imul
js
push
sti
jae
filds
add
insb
daa
imul
push
jmp
jp
jge
sbb
repz
call
movsb
add
cmp
or
push
push
and
movb
cltd
daa
enter
imull
aad
lods
pusha
into
mov
scas
int
scas
sub
cmp
mov
add
lods
and
mov
pop
daa
mov
insb
mov
and
jge
mov
in
fisubrl
xchg
in
sti
es
pop
pop
adc
gs
div
scas
and
sbb
out
xor
xchg
fiadds
cltd
scas
sub
popa
and
ljmp
fidivrs
mov
mov
hlt
js
jns
jge
in
jge
cmp
outsb
bound
add
int
loop
fdivl
push
push
jle
mov
iret
xchg
rorb
jge
mov
adc
and
mov
cmp
mov
push
cld
int
arpl
sbb
and
jl
shr
movsb
pushf
and
mov
xor
dec
outsb
ss
ret
xor
test
add
lods
fmul
sahf
push
mov
sub
lahf
pusha
sub
inc
pop
test
mov
rorl
push
sbb
fisttps
mov
lods
dec
bound
fidivl
xchg
mov
mov
std
daa
sub
sub
in
or
jo
mov
xor
jmp
xchg
jb
xchg
scas
nop
jl
mov
mulb
pop
arpl
call
dec
mull
aaa
push
int
pop
cs
loope
fildll
jns
push
lahf
fcoms
jae
lock
push
test
fst
push
mov
inc
mov
inc
dec
leave
jnp
mov
fs
popl
inc
loopne
xor
jbe
mov
daa
mov
mov
dec
and
mov
int
leave
or
cltd
leave
sbb
in
mov
mov
xchg
inc
mov
pop
dec
iret
aas
sub
adc
jno
fidivl
aam
pushf
adc
mov
data16
mov
in
mov
fwait
inc
mov
inc
cmp
fimull
push
scas
or
push
sbb
adc
aad
stos
or
mov
pop
mov
sub
out
mov
xchg
push
arpl
aam
cs
sbb
mov
sub
bound
sub
dec
out
ror
pop
outsl
int3
mov
pop
jo
sub
sbb
pop
loopne
ljmp
mov
xchg
adc
xchg
std
adc
mov
adc
xchg
imull
adc
push
outsl
cmp
sbb
sbb
xchg
shrb
dec
outsb
out
js
mov
xlat
shl
pop
sub
icebp
mov
dec
test
rolb
fwait
cwtl
ret
and
fidivrl
cmpsl
dec
popf
fnstenv
lret
shrl
std
out
sti
cwtl
mov
jae
push
js
into
push
xchg
jno
test
iret
out
inc
sub
push
lods
xor
test
sbb
cld
test
mov
xchg
movb
pop
in
nop
lea
dec
flds
inc
or
mov
dec
cld
lea
hlt
mov
out
rcrb
not
or
nop
and
sub
or
sbb
inc
outsl
loope
movsb
js
cmpsl
and
movsb
subps
adc
js
xor
add
xor
leave
mov
lods
jg
roll
call
add
fs
lret
or
cmpsb
out
push
pop
xchg
std
test
insb
mov
inc
movb
inc
in
stos
and
sahf
aam
lds
adc
cmp
mov
lret
cmpsl
decl
xchg
jb
cmp
sbb
push
mov
fs
nop
pop
arpl
outsl
leave
sub
sub
mov
mov
add
mov
pop
sbb
mov
testl
adc
lods
loop
mov
cmpsl
pop
jmp
fucomp
pop
push
or
das
mov
push
test
inc
sbb
gs
rclb
enter
inc
faddl
mov
inc
and
shrb
sbb
jmp
aaa
imul
xor
xchg
cmpsl
push
push
nop
mov
icebp
movsl
cltd
fs
aas
insl
int3
or
mov
ljmp
mov
cwtl
push
loopne
cmpb
addr16
scas
push
jle
jmp
adc
pop
mov
cmp
pop
mov
out
pop
mov
jmp
incb
xchg
jp
arpl
add
sbb
xchg
subb
xchg
pop
out
jnp
jne
dec
push
mulb
cmp
mov
outsl
add
xchg
fdivrs
xor
test
mov
popa
lock
mov
rcrl
cld
imul
pop
daa
fwait
ret
sti
mov
or
mov
jns
adc
ret
pusha
xor
rclb
cmp
jae
test
jns
fsubs
jge
jmp
paddw
sarl
dec
jg
ss
cwtl
dec
cld
ret
aas
sbb
sarl
clc
pop
fwait
daa
sbb
movsl
negb
stos
addr16
pop
jo
out
jnp
jg
pop
out
out
fdivrs
cltd
push
cmc
push
test
lods
xchg
jnp
hlt
fs
xlat
in
xor
adc
and
lods
ds
pop
push
inc
dec
dec
or
movsl
not
dec
mov
out
pop
pop
outsl
aad
sub
jl
repz
sub
jp
xor
and
xchg
mov
jmp
imul
push
nop
xchg
inc
pushf
cmp
adc
mov
fwait
jg
inc
xor
out
xchg
pop
push
iret
scas
rorb
xchg
cmp
daa
cli
add
aas
mov
push
add
xchg
add
leave
scas
popf
lods
test
mov
fnsave
stc
daa
aas
mov
imul
xchg
aas
jo
lret
cltd
or
js
aam
push
dec
fildll
test
cli
xchg
sbb
xor
adc
ljmp
lret
adcb
dec
inc
jl
pop
pop
push
jl
ja
shll
and
outsl
pop
pop
gs
mov
mov
xchg
sbb
popf
dec
adc
stos
in
mov
mov
or
or
pop
mov
jne
fsubs
add
lret
jg
inc
cld
pop
stos
xchg
mov
test
add
cli
scas
jle
or
jns
cmp
mov
adc
ja
int
xchg
test
scas
lret
and
fcoml
in
lret
cmp
pusha
loope
les
out
mov
faddp
mov
mov
fadds
int
lret
out
sbb
sbb
sub
repnz
push
or
dec
inc
pop
adc
shrb
shrb
movsl
lods
les
mov
lods
cmp
shrl
aaa
push
stos
or
jmp
xchg
ret
in
jae
repz
outsb
cmp
mov
jmp
inc
sbb
push
pushf
inc
cltd
xchg
pop
jecxz
ljmp
push
call
cmpsb
popf
or
or
cmp
jle
ss
and
add
lock
cmp
into
mov
pop
scas
jmp
mov
scas
add
aad
dec
mov
jge
cwtl
subl
cmp
push
fdivrl
inc
push
mov
sbb
xor
out
ret
mov
inc
arpl
pop
ficoms
cmp
push
int
push
rcrl
out
call
or
add
jle
outsl
outsl
in
cmp
je
test
xchg
mov
push
fsubrl
pop
aad
imul
push
lds
stc
bound
mov
push
popa
push
and
popa
sbb
divb
mov
ss
insl
cmpsb
stos
mov
add
add
arpl
dec
jg
push
mov
ror
mov
xor
mov
mov
xor
pop
outsb
fsubl
cmpsb
mov
jmp
add
xchg
in
adc
pop
ljmp
cmpb
sub
and
ret
mov
dec
lret
idiv
sub
mov
insl
divl
add
and
subl
push
mov
sbb
or
xor
je
sbbb
sub
leave
lods
inc
jb
test
ds
push
cmp
mov
stos
pop
push
xchg
ret
testl
iret
fmuls
mov
push
ljmp
xlat
adc
push
jle,pn
xchg
and
rolb
loopne
nop
lcall
mov
inc
mov
js
movsl
cwtl
jns
push
jge
leave
js
adcl
mov
cli
mov
daa
mov
fsubrs
inc
fildl
sti
or
dec
fsubl
add
scas
repnz
xor
fcoms
in
and
out
mov
sbb
xor
push
mov
dec
push
adc
shrb
mov
push
mov
and
fcos
shll
inc
shlb
ret
rcrl
cmp
add
jecxz
rep
sbb
out
adc
pop
xchg
cmp
mov
repnz
sub
push
xor
shlb
daa
mov
xor
das
fwait
or
mov
mov
inc
mov
pop
ja
ss
and
mov
roll
out
loop
hlt
jle
push
add
pop
mov
dec
outsl
push
cmpsl
dec
stc
push
repnz
sti
pop
lret
out
jg
les
sti
cmpl
sbb
sbb
cmp
mov
insl
mov
enter
sub
cmp
into
mov
pop
pop
and
push
xchg
fwait
sbb
lea
movl
dec
mov
mov
jne
add
dec
outsl
jno
pop
idiv
clc
mov
mov
out
fwait
dec
cwtl
shl
xchg
mov
xchg
xor
and
jb
out
call
insl
iret
aaa
icebp
fiadds
xlat
shrl
or
stos
int
or
jno
or
mov
cmc
test
mov
imul
jmp
or
inc
data16
adc
popa
xor
pop
sub
dec
mov
inc
pop
pop
mov
fisttpl
dec
adc
sbb
mov
pop
mov
push
sub
es
cmpsb
loop
sub
lods
or
mov
cmc
push
mov
int3
cwtl
rcll
mov
call
pop
in
adc
sti
cmp
xchg
mov
xchg
mov
xor
mov
out
mov
gs
jg
shll
out
mov
iret
mov
inc
test
sub
in
inc
out
mov
cmc
push
stc
sahf
cmp
lods
or
push
sub
insl
cltd
insb
mov
int3
cmp
daa
xor
sbb
mov
or
pop
popa
pop
popa
loop
mov
mov
pop
mov
inc
fidivl
pop
pop
adc
test
and
xchg
cld
jnp
lods
and
xchg
xor
test
mov
addr16
add
loopne
lcall
lods
xor
mov
push
lret
cmp
dec
inc
andl
mov
inc
and
sub
pop
sub
jne
xor
or
outsb
mov
sbb
rcll
mov
add
hlt
cmp
inc
sub
mov
push
mov
insl
cmp
lea
xlat
int
pop
push
push
call
rolb
loope
mov
nop
jl
jmp
pushf
add
sbb
pusha
scas
jmp
clc
cmp
mov
adc
or
clc
inc
sti
or
jae
stos
jbe
dec
aam
shrl
and
aam
mov
repz
xchg
push
test
mov
negb
or
jne
push
aas
xor
lret
mov
sbb
cmpsb
lahf
subl
in
lret
aam
mov
sub
or
jae
ljmp
push
ss
iret
cmpb
sbb
jg
mov
out
jno
push
outsb
dec
mov
mov
mov
mov
enter
jmp
cs
xlat
jge
push
imul
or
sbb
inc
enter
les
imul
aam
cs
pusha
jp
inc
jo
mov
stos
ja
or
push
stos
and
les
stos
xchg
popf
pop
stos
sub
push
andl
dec
push
fnsaves
xor
fdivr
xor
std
pusha
xchg
repz
lret
xchg
inc
lret
div
in
stos
dec
test
push
mov
push
pop
adc
mov
test
mov
movl
or
or
pop
lock
pop
pushf
push
insb
jb
mov
jbe
arpl
add
and
pushf
push
test
in
push
das
lcall
xchg
inc
daa
jg
or
pop
xchg
jne
outsl
xor
mov
outsb
lcall
dec
imul
mov
jno
mov
addr16
icebp
inc
in
push
push
in
aad
sub
sbb
cmp
xlat
vmaxss
ds
jae
aas
dec
lds
inc
mov
push
sbb
rcrl
gs
xchg
test
cs
push
mov
ja
sub
outsb
test
mov
push
add
in
inc
xchg
movlps
mov
adc
jg
mov
adc
cli
call
xor
add
add
fwait
xchg
jb
mov
cmpsb
out
xchg
or
std
push
mov
lods
jo
jp
cmp
mov
dec
add
pop
addl
fdivp
rcrl
or
jge
inc
jbe
popf
mov
mov
fsubs
jle
je
adc
mov
mov
mov
mov
pusha
test
push
cmpsl
jmp
jmp
fsubp
mov
jae
pop
test
mov
push
iret
in
ror
mov
mov
int3
mov
mov
and
mov
or
adc
jbe
inc
int3
fdivl
cltd
push
fdivs
pop
add
dec
incb
mov
imul
repz
nop
arpl
inc
sbb
inc
xor
insb
adc
push
imul
test
std
mov
jecxz
pop
dec
pavgb
add
jmp
xor
sbb
movl
inc
imul
scas
xchg
cmp
les
mov
mov
notb
xor
or
or
aaa
push
arpl
jmp
dec
push
imul
gs
mov
out
lret
insb
jno
lock
js
data16
xchg
cmpsl
sbb
in
inc
stos
mov
dec
lods
movsb
loope
int3
aaa
daa
jno
clc
mov
bound
pop
cmp
jo
testl
fstl
mov
push
pop
pop
adc
leave
inc
xchg
xchg
jnp
fdivs
lcall
sbb
mov
ret
sti
xor
cld
cmc
jg
out
clc
sub
push
stos
mov
std
xchg
enter
adc
fs
mov
mov
push
or
sbb
lea
les
shrb
mov
mov
jo
or
mov
stc
icebp
fisubl
int3
aaa
ret
sub
mov
pop
mov
ljmp
insl
mov
push
mov
inc
push
int3
mov
mov
inc
push
pop
sub
jge,pt
mov
xchg
dec
sub
outsl
clc
and
jb
call
mov
and
cmp
xlat
int3
aaa
sub
fistpl
insl
mov
xchg
mov
insl
inc
jp
push
cwtl
enter
cmp
or
inc
js
aad
out
jae
lea
push
jns
inc
mov
pop
test
loop
lods
jg
mov
scas
mov
and
cld
inc
into
std
sub
cmp
xor
fsubrs
sti
test
sbb
mov
ljmp
outsl
or
mov
push
mov
cmc
xor
jnp
and
in
je
aas
stos
fsub
jge
cmp
xchg
jmp
cmp
push
loopne
stos
popa
cmpsb
xchg
pop
outsb
mov
xor
mov
and
or
ljmp
dec
enter
mov
pop
addl
add
cmp
mov
xchg
pop
pop
rcrb
jns
mov
push
pushf
rorl
pop
or
sub
add
es
or
mov
jne
push
jl
pmullw
cmpsl
mov
sahf
aad
test
hlt
or
sub
sbb
sbb
test
or
rcll
cmc
fucomp
xchg
pusha
in
std
xor
xor
test
jb
xlat
lock
mov
clc
call
cwtl
cmp
icebp
cwtl
mov
dec
adc
ja
jp
adc
jl
push
hlt
jl,pt
pusha
sub
scas
outsl
cmpsl
stc
sbb
dec
dec
or
and
addr16
popa
nop
sub
hlt
fnstsw
adc
sub
xor
jne
adc
pop
pop
mov
pop
adc
adc
pop
inc
inc
ds
stos
sbb
ss
push
jg
jmp
loop
int
in
push
mov
xchg
sbb
mov
dec
sub
inc
pop
out
call
dec
std
push
mov
adc
push
sbb
or
mov
push
pop
sbb
hlt
adc
cmp
scas
cmp
mov
lahf
and
xchg
popa
out
mov
cs
sub
inc
inc
cltd
inc
fcompp
into
lds
stc
jne
rcl
xor
ja
add
mov
repz
push
xchg
ret
adc
jo
xchg
push
adc
cmp
mov
jmp
js
nop
dec
add
mov
mov
sbb
push
shrl
leave
ret
lds
sarb
adc
add
and
inc
dec
cmc
faddl
fildll
add
faddl
aam
scas
add
sub
mov
test
orb
push
outsb
lock
fistpl
repnz
call
rcll
dec
testb
in
iret
pop
and
dec
int3
gs
ficompl
add
mov
cmp
sbbl
mov
arpl
xchg
test
stos
out
mov
sub
xchg
shll
jbe
stc
mov
cs
negl
addb
inc
and
add
out
imul
fidivs
sahf
mov
pop
cmpsl
scas
sbb
rorl
or
insb
jmp
in
imul
or
xor
xor
inc
sahf
stos
mov
sub
mov
out
push
or
sub
xor
add
nop
in
sbbl
cmp
das
add
push
std
push
cmp
notb
clc
pop
dec
xchg
pop
xchg
and
in
jecxz
mov
or
aas
pop
js
push
push
push
adc
lods
and
inc
leave
jl
inc
pusha
adc
aam
sub
fcmovne
adc
adc
sbb
call
dec
out
mov
cld
fbld
pop
adc
data16
dec
push
add
mov
data16
and
mov
jae
out
repz
fcomps
int
mov
cmp
fildl
inc
cwtl
sar
push
jmp
and
lret
jl
sub
stc
push
inc
leave
xchg
scas
jle
lods
sbb
xchg
aad
pushf
and
mov
shl
in
mov
add
in
mov
cmp
out
xor
sbb
mov
inc
fucomp
pop
pop
in
jmpw
and
or
mov
or
add
call
ja
xchg
sbb
xchg
mov
fidivrs
or
leave
xchg
xchg
pop
push
fwait
jne
jns
mov
shl
ja
push
leave
jle
mov
leave
pop
ret
adc
orl
outsb
mov
jbe
subl
and
bound
shlb
repnz
arpl
jg
imul
jp
lods
cmp
pop
int
loope
inc
adc
fimuls
xor
cmc
sbb
jb
xchg
ljmp
xchg
lahf
jmp
outsl
jbe
aad
shll
adc
sub
xor
lock
xchg
inc
cmp
cmp
push
cmpsb
idivb
aad
ljmp
or
bound
out
inc
pop
xchg
mov
sub
jnp
and
pop
dec
lds
es
mov
cmp
fidivl
mov
gs
xor
xor
xor
pop
mov
adc
fs
ja
in
sub
inc
push
xchg
and
jns
mov
push
lret
test
cmp
pop
shll
imul
gs
mov
mov
gs
xchg
xchg
mov
inc
hlt
ljmp
loop
pop
in
pop
fwait
xlat
mov
scas
push
mov
dec
gs
adc
cmp
mov
push
mov
sub
jbe
test
xchg
inc
mov
lds
dec
cli
in
jge
mov
inc
cmp
xchg
sbbb
push
dec
cmp
pop
xchg
mov
inc
xchg
jg
jmp
pop
outsl
pushf
cmp
add
sbb
push
cmp
cmp
mov
push
add
sub
jnp
icebp
pop
adc
jmp
cmp
add
call
lock
xor
cmp
notb
call
cmp
mov
xor
pop
es
adc
out
gs
push
fdiv
les
jb
and
mov
call
mov
push
or
in
fisubrs
in
jle
rolb
ret
mov
sub
fidivrl
ds
frstor
int
fidivs
sub
dec
or
jnp
aad
xlat
out
int
inc
mov
dec
adc
ljmp
xchg
and
ret
or
clc
and
mov
pause
andl
jo
iret
dec
adc
xchg
dec
pushf
std
xchg
cmpsl
stc
and
cli
or
mov
mov
scas
sahf
pop
mov
bound
test
fcmovbe
sbb
mov
sub
mov
cwtl
scas
jne
pop
int3
sub
cmp
outsb
jbe
cmp
cltd
xchg
in
out
rol
lock
xchg
adc
and
fwait
lock
pop
mov
xchg
inc
test
lret
outsl
stos
scas
and
or
pop
xchg
shrb
push
cli
or
dec
sbb
adc
mov
fsubrs
or
dec
std
jecxz
dec
xchg
push
sbb
mov
add
out
pop
icebp
rcl
and
fldt
jle
push
jae
rolb
sahf
adcl
xchg
jl
lcall
xchg
sbb
faddl
pop
mov
or
mov
mov
je
jae
inc
sub
mov
fldenv
dec
imul
roll
cmp
xchg
popf
inc
sub
dec
arpl
cmpsb
or
cmc
push
mov
xchg
pop
push
repz
xlat
cs
inc
sub
movsl
add
cmp
mov
push
inc
and
push
ss
cli
xor
pop
push
add
pop
jg
cwtl
mov
xor
sub
outsl
jl
stos
loopne
cmp
enter
mov
pusha
sbbb
mov
fisubs
jp
dec
pushf
add
lds
or
es
dec
rclb
cmp
or
rcrl
push
push
outsl
je
and
lds
loop
in
jns
mov
in
cmp
add
hlt
xchg
cs
scas
xchg
test
cmpsb
pop
aas
add
add
push
mov
xlat
mov
dec
xorl
mov
cmp
mov
dec
fsts
cmpsl
add
mov
add
xchg
je
fwait
add
cmc
xor
hlt
ret
dec
fwait
test
rcll
in
adc
lods
xchg
jecxz
sbb
sbb
ret
ffreep
cmp
jmp
push
jae
dec
jl
inc
enter
scas
pop
adc
xchg
jno
mov
and
or
pop
add
int
cli
pop
adc
push
mov
pusha
in
stos
cmp
sarl
popa
lahf
test
pop
aad
scas
mov
std
cli
mov
ja
mov
add
jmp
push
dec
sub
pop
jnp
movsb
test
add
loopne
lret
sti
mov
mov
sub
scas
push
ss
call
mov
jp
mov
mov
ds
mov
scas
sub
in
xor
add
add
sub
pop
push
xchg
jecxz
push
loop
fnstenv
dec
mov
pop
iret
jns
lret
sbb
aam
in
mov
mov
pop
in
push
pusha
hlt
sbb
inc
dec
mov
sub
push
hlt
jmp
movsb
jg
mov
dec
gs
add
outsl
cmc
mov
adc
jno
aaa
or
xchg
fstps
sbb
mov
pop
add
adc
push
xchg
xchg
mov
xor
pop
mov
add
aad
ss
mov
orl
lcall
xchg
push
aam
movsl
add
sub
stos
shr
dec
cs
addr16
push
dec
fidivrl
inc
aaa
cmp
cwtl
out
js
fidivrs
out
jecxz
xor
mov
mov
stos
out
daa
sub
stc
and
ds
jg
mov
stos
lea
bound
xchg
mov
pop
es
xor
rcrl
data16
roll
out
cmp
popf
push
jae
pop
mov
pop
bound
inc
jae
push
je
inc
mov
push
fnsave
loop
pop
pushf
mov
data16
mov
mov
fsubrl
imul
imul
mov
add
hlt
fldl2e
ret
jl
add
sbb
pop
jmp
cmp
or
cwtl
imulb
xchg
clc
das
rcpps
jge
mov
inc
sar
idivl
aad
pop
lret
and
and
xchg
cs
or
cmpb
cmc
or
int3
addr16
adc
call
pushf
addr16
push
push
in
sbb
call
lock
lret
adc
mov
unpckhps
and
sub
je
rorb
jo
sub
mov
cmp
jns
and
pop
aaa
and
mov
dec
lods
pop
mov
es
insb
and
out
in
pushf
aas
mov
mov
pop
pop
push
xor
out
and
pop
and
cli
mov
daa
popa
xchg
xchg
xor
lea
push
dec
sar
or
lods
sbb
xor
sbb
js
pop
or
addl
fisttps
movsl
pop
xchg
fwait
adc
enter
and
fldcw
es
sbb
pop
adc
bound
or
jge
lcall
jne
mov
fildl
add
stos
mov
jns
or
out
es
sub
cmp
jae
mov
inc
add
jne
cmp
nop
ret
jae
enter
or
movsl
ds
or
out
mov
sub
cmp
mov
push
cs
add
bound
lahf
cmp
ss
fnsave
and
mov
jg
lods
jmp
mov
js
loopne
lret
dec
mov
pop
mov
test
push
aad
cmp
pop
out
cmp
lea
popf
lret
arpl
pop
xor
pop
arpl
mov
gs
in
mov
and
clc
xchg
jo
fidivrl
cmpsl
push
test
lock
mov
push
add
or
jnp
cltd
add
add
pop
inc
enter
adc
ss
fsubs
mov
mov
les
cmp
nop
leave
inc
xor
xor
sub
sbb
push
mov
sahf
or
jg
and
insb
mov
adcl
dec
movl
cmpl
xor
push
and
fimuls
pusha
scas
mov
push
lods
mov
call
push
pusha
nopl
ja
scas
mov
aaa
mov
inc
pop
test
subb
pop
cmp
mov
cmp
push
jl
xchg
add
clc
mov
mov
scas
sti
mov
fdivr
sub
jmp
lods
jg
out
push
rorb
inc
ja
js
dec
orb
inc
arpl
xor
and
lock
inc
inc
lret
mov
cmpsb
insb
fldl
jbe
mov
pop
jge
cli
addr16
mov
xor
push
mov
sbb
dec
mov
dec
and
adc
out
lahf
sti
xchg
or
mov
push
hlt
dec
test
fnstenv
call
out
xchg
xchg
and
push
fldenv
xchg
mov
mov
imul
xchg
pop
mov
jecxz
xchg
dec
out
sahf
aaa
push
jbe
enter
and
ret
mov
mov
push
mov
jge
fyl2xp1
push
mov
add
adc
outsb
loopne
xor
addb
xchg
pop
test
push
in
or
dec
pop
sub
adc
lea
push
and
mov
and
inc
mov
inc
int3
or
cmp
dec
adc
push
jbe
bnd
mov
bound
sti
adc
cmpsl
mov
scas
fidivrl
sbb
ds
xchg
sbb
test
movsb
iret
in
stos
cld
add
and
loop
jecxz
mov
fists
mov
cmp
sub
gs
mov
jecxz
cmp
mov
ja
cmpb
shl
pusha
xor
pop
push
pop
fst
sti
adc
stos
mov
jge
loopne
ret
pop
and
idivl
xchg
sti
jbe
ja
dec
adc
shrb
roll
daa
inc
jnp
sub
xor
std
add
jmp
mov
mov
add
lea
cmp
divl
push
mov
cld
into
imul
out
mov
dec
jo
dec
call
lods
pop
xor
add
lret
xchg
jnp
xchg
or
cwtl
sub
mov
sub
add
dec
xlat
out
sub
xlat
xchg
test
jg
inc
cmc
mov
or
push
shlb
iret
sub
mov
lock
pxor
add
lret
aad
pop
cmpsl
inc
push
and
loope
mov
fisubrs
ret
cwtl
rcll
imul
xor
lret
jle
xchg
mov
pop
xchg
xor
jecxz
repnz
enter
pop
pop
xor
pop
out
in
ficoms
xor
outsb
xor
int
mov
aas
jmp
jl
inc
fcos
pusha
ret
out
insl
sub
xchg
outsl
and
mov
add
cmc
sbb
jge
add
mov
aam
jns
cltd
lods
aas
ret
in
mov
nop
dec
fstpt
cli
adc
xchg
mov
pop
das
jo
fstl
ljmp
cmpsl
icebp
jle
scas
inc
and
lea
or
scas
jns
add
push
fistps
cmp
lcall
inc
push
out
mov
xchg
int
push
fidivrl
cmp
or
sbb
ds
lods
add
mov
jbe
cmpb
arpl
dec
nop
add
imul
call
dec
mov
adc
ds
jnp
mov
add
jmp
imul
add
sub
arpl
jns
movsl
jae
sub
daa
rcr
mov
test
ret
add
cmovnp
xchg
mov
dec
fmul
test
xchg
sbb
add
repz
mov
jbe
xchg
sbb
pop
sub
test
mov
or
sbb
out
scas
dec
lods
sbb
icebp
cmpsl
imul
inc
data16
aad
loopne
adc
and
ret
dec
sbbb
cmpsb
in
fistpll
mov
sarb
in
negl
pushf
popl
movsl
daa
inc
cmp
addr16
cltd
or
das
push
cld
push
push
or
mov
fstps
jnp
pop
in
sub
pop
leave
insl
icebp
in
jne
fsubrl
pusha
lret
and
testb
aaa
shl
mov
lret
dec
ds
pop
scas
pop
xchg
les
pop
sti
bound
lcall
mov
roll
cmp
jb
jns
cs
nop
mov
in
pop
jne
fcomip
ja
and
mov
stc
jmp
mov
pushf
das
inc
mov
cli
call
jge
mov
outsb
cmp
outsb
into
inc
push
ficomps
adc
cmp
mov
inc
jb
mov
loop
mov
jge
xor
aaa
scas
sbb
inc
sub
mov
mov
push
lods
inc
pop
mov
movsb
imul
dec
lock
pop
or
mov
sub
popf
sbb
imul
mov
cmpsb
or
push
shll
cli
add
ret
jbe
cmp
scas
adc
leave
fcmovne
adc
xchg
push
dec
ret
add
mov
mov
inc
pop
add
rcr
jae
cltd
mov
sub
in
adc
sbb
int3
fdivrs
pop
int3
pushf
rolb
or
out
pop
mov
mov
adc
sub
es
sbb
mov
or
dec
and
add
mov
sub
push
push
es
adc
pop
les
bound
adc
xor
fdivrp
mov
or
inc
sbb
or
into
xor
cmp
jl
cmp
pop
rcrl
sub
push
mov
testl
mov
out
inc
subl
fcoml
mov
or
fcomip
insl
insb
mov
adc
push
testl
jge
scas
and
mov
lret
or
loope
mov
adc
dec
repz
and
inc
jo
lret
xchg
call
fdivrs
clc
icebp
jne
jnp
pop
test
lock
leave
data16
push
jg
add
mov
test
imul
mov
loopne
arpl
fdivl
jl
jmp
adcl
xchg
dec
xor
jne
sub
and
cmp
loop
cmp
xchg
fadds
mov
xor
and
push
jno
fsubr
jne
stos
adc
xchg
mov
shr
jae
or
jecxz
and
imul
scas
movsb
add
push
rcrb
test
cs
jg
jae
push
into
cmp
pop
test
add
xchg
mov
push
push
and
out
jo
and
inc
adc
inc
scas
jecxz
in
jmp
add
pop
pop
lock
dec
push
and
fcomps
push
and
add
or
mov
jns
daa
jl
jno
mov
xor
das
aad
testl
cmpsl
lds
mov
adc
sub
hlt
ds
jo
repnz
scas
adc
mov
sub
pop
sti
in
pop
cmpsl
inc
sbb
xchg
fcomi
or
pusha
pushf
xchg
lcall
aad
movl
xchg
subb
xchg
arpl
xor
dec
inc
push
xor
pusha
pop
or
loopne
or
xlat
mov
imul
in
mov
mov
pop
push
or
xor
cmp
lcall
xor
add
dec
jge
cmp
sub
lds
call
sbb
subl
mov
lret
loope
xchg
jge
add
lret
xor
push
arpl
mov
ja
sub
inc
jmp
lahf
call
or
call
je
cltd
push
leave
dec
jg
sti
pop
xchg
jge
inc
push
adc
push
xchg
cmp
inc
cmc
sub
mov
ljmp
cmpl
sbb
sbb
inc
repz
insl
lds
lret
sub
daa
icebp
out
mov
std
cld
insb
jo
insl
dec
and
and
dec
mov
insl
mov
inc
lods
push
xor
jp
sub
lret
popa
sub
jnp
jnp
test
ja
scas
test
sbbl
rorl
ds
mov
lods
cltd
sbb
dec
aad
inc
dec
lret
mov
inc
push
jge
mov
ss
jnp
addl
cmp
in
inc
mov
xor
sbb
jae
fdivr
xor
sbb
push
push
jl
cmp
loope
lcall
jnp
pop
or
and
push
sub
fwait
movsl
imul
sub
mov
or
test
mov
lret
and
sub
ljmp
loopne
cmp
dec
out
sbb
shr
push
lds
sub
icebp
les
fwait
or
in
pop
xor
sub
xchg
fistpl
inc
sub
je
cmp
sbbl
mov
and
fbld
das
testl
jl
imulb
outsb
call
mov
push
sub
inc
pushw
xchg
inc
iret
and
add
repz
and
and
rolb
leave
xchg
jae
mov
pop
dec
into
jmp
sbb
inc
in
mov
outsl
lods
adc
mov
xor
into
insb
dec
inc
pop
mov
imulb
pop
dec
mov
add
xchg
not
scas
gs
popa
scas
xchg
xor
and
add
fwait
in
out
and
lea
loope
outsb
dec
jecxz
sbb
adc
fdivrl
stc
pop
orl
sub
shrl
pop
mov
jl
sub
cmp
and
mov
mov
inc
jne
stos
jbe
xchg
outsb
lods
or
fmul
push
popf
js
push
enter
fnsave
inc
das
add
scas
addb
sub
loopne
sarl
xor
mov
roll
mov
enter
lahf
mov
or
pushf
and
cmpsb
push
and
pop
repnz
bound
sub
inc
daa
sbb
ljmp
scas
dec
pop
test
and
mov
mov
xchg
push
out
mov
cs
lods
ret
cmp
mov
dec
push
jle
iret
and
or
inc
out
jbe
xlat
mov
xchg
sahf
in
mov
jecxz
adc
nop
test
lock
pop
and
xchg
sbb
and
adc
mov
fdivrl
mov
jl
loop
cli
mov
mov
dec
mov
pop
imull
adc
scas
mov
jmp
sub
mov
mov
mov
and
out
push
in
mov
mov
pusha
lcall
imul
xchg
jecxz
loop
push
dec
jno
call
sub
dec
nop
add
fsubs
nop
outsb
push
movsb
dec
xchg
enter
and
mov
pop
or
lods
xchg
lods
sbbb
mov
fisttpll
xor
scas
push
sub
arpl
lods
out
cmc
int
mov
lret
int3
loope
jne
ret
out
aad
cmp
aaa
mov
adc
jb
mov
clc
rorl
pop
cmpsb
dec
aad
rorb
out
loope
inc
fadd
cmp
cmp
faddl
sbb
je
push
and
add
dec
or
fiaddl
pusha
xor
cli
fisubrl
cmpl
fldl
sbb
mov
fildll
imul
and
xlat
jmp
jno
mov
movsl
int3
mov
xor
inc
movsb
test
push
lcall
test
sbb
aad
ljmp
into
gs
xlat
sar
das
lods
cmp
inc
cmp
dec
sub
jb
sub
cwtl
mov
and
lahf
cwtl
or
imul
mov
inc
mov
cmpsb
and
cmc
lock
pop
jg
inc
les
or
mov
jp
jle
dec
and
pushf
fiaddl
or
xchg
add
and
test
fistps
xchg
or
sbb
fs
or
ss
lret
mov
fstpl
inc
addr16
inc
iret
adc
jmp
jp
mov
xorl
rclb
ss
pop
mov
out
lds
scas
sub
lods
nop
mov
adc
push
and
popf
cmpsb
jne
push
xlat
movsb
cmp
hlt
loop
ficompl
jb
adc
mov
nop
and
xor
xchg
push
or
xchg
push
ljmp
es
repz
pop
in
inc
mov
dec
sub
jae
xor
cli
push
sub
js
jne
jl
push
cmp
mov
sbb
adc
xchg
jno
mov
xchg
cmp
rolb
or
imul
mov
inc
mov
cmp
shll
enter
mov
push
mov
in
dec
lock
add
outsl
dec
jb
dec
and
dec
push
jl
insb
add
push
stos
or
lret
mov
jle
call
repz
lahf
add
jnp
adc
iret
pushf
ss
loopne
xor
iret
movsl
jbe
loop
mov
push
or
xchg
cmc
jnp
ds
mov
jo
sub
mov
sub
mov
and
adc
mov
es
mov
push
rcrl
add
inc
ret
push
out
out
mov
add
inc
cmp
sub
cmpsl
dec
int
aas
cmp
call
das
pop
jle
or
test
cltd
shll
pushf
lret
mov
mov
js
jne
xor
cld
lea
jbe
subl
arpl
clc
add
addl
xor
mov
add
dec
aad
or
lahf
imulb
xchg
insl
sub
out
in
idivb
and
int
adc
hlt
push
xor
add
in
push
ss
cmp
sub
testl
das
call
cmpb
outsb
call
popa
sub
popa
call
movsb
cs
pop
mov
dec
in
push
addr16
test
loop
sbb
cmpsb
jecxz
mov
popf
add
cli
aas
and
ret
sub
dec
push
jecxz
sub
mov
and
and
jecxz
fldenv
mov
push
pop
movsb
pop
insb
sub
aam
gs
adc
xor
xchg
adc
push
push
push
cmp
lods
inc
int
dec
adc
cmpsb
inc
outsb
ss
jmp
pop
cmpsb
dec
adc
pushf
sbb
ficompl
insl
repnz
js
mov
in
mov
insl
hlt
test
or
push
dec
xor
imul
and
int
dec
mov
adc
adc
xchg
mov
jo
xchg
jmp
add
lods
movsb
xchg
std
pop
rorb
xchg
xor
dec
mov
es
mov
xchg
jns
mov
mov
jo
mov
and
lods
iret
aaa
cs
les
sbb
xchg
mov
out
mov
sbb
inc
or
js
push
and
in
movsb
les
sub
loop
cmpsl
ret
aam
jo
cmp
sbb
push
ljmp
std
inc
lret
add
in
imul
out
xchg
loope
rorb
and
mov
push
xchg
push
push
daa
aas
int3
call
aaa
cmp
push
clc
cmpsb
cltd
mov
fidivs
ss
cmp
fdivr
mov
pop
inc
fnstcw
or
sahf
xchg
pop
inc
repz
fwait
jnp
ljmp
test
pop
lods
mov
lock
inc
xchg
push
inc
mov
dec
cmp
stos
xor
jp
ficomps
push
sarl
adc
add
xchg
inc
fisttpl
mov
cmp
inc
aam
test
test
addr16
nop
mov
sbb
lcall
into
jl
jecxz
out
adc
loope
jmp
es
fucom
xor
test
or
rep
mov
adc
jae
out
in
xchg
aad
sub
std
andb
push
cmp
dec
repnz
jae
scas
fists
rolb
cltd
mov
cld
and
imul
cli
shll
xchg
jb
jmp
stos
and
sahf
push
pushf
cmpsl
loopne
cmp
inc
mov
shll
xorb
or
push
test
sub
lock
and
aad
lcall
inc
pop
jg
imul
mov
aam
cmp
popf
stos
das
pushl
out
jle
jp
stos
jg
daa
test
test
mov
aaa
orb
ja
mov
filds
pop
push
xchg
popa
add
imul
fsubp
cmc
in
xor
mov
sbb
mov
call
outsb
mov
pop
stc
pop
push
aam
out
dec
nop
pop
out
mov
jge
mov
arpl
aam
sub
xlat
mov
negl
mov
xchg
push
pusha
inc
xchg
sbb
iret
fbld
adc
inc
jmp
stc
ss
mov
add
sbb
cltd
rorl
jno
and
loop
mov
into
and
adc
dec
adc
movq
shlb
lods
ja
jle
dec
push
dec
and
push
push
push
xor
dec
jnp
dec
mov
cs
sub
in
or
mov
jo
pop
rorb
repz
sub
lahf
lret
mov
jecxz
cmp
xor
mov
or
sbb
fiadds
add
js
mov
dec
sbb
fstpt
out
out
mov
into
mov
lret
mov
test
cmp
call
das
inc
fdivp
pop
bound
lods
sbb
bnd
out
inc
or
mov
push
sbb
xor
or
fsubr
push
ja
pop
adc
sbb
pop
jne
sbb
stos
test
dec
jns
aaa
xchg
cmp
pop
fistl
imul
loope
int3
cmc
test
shrl
sub
into
in
outsb
scas
mov
roll
push
nop
loop
bnd
cmp
repz
les
pushf
sti
fwait
mov
jge
int3
shll
in
jo
insb
sarl
repnz
in
add
adc
cmp
dec
je
cmc
stos
daa
inc
push
push
inc
leave
iretw
test
inc
insb
xchg
xlat
ja
pop
lods
sbb
ficompl
test
xor
lock
fistpll
pop
ljmp
sbb
stos
add
pop
mov
les
pop
arpl
pusha
push
or
cmp
scas
or
and
in
stos
cld
inc
pop
and
jmp
loop
enter
mov
xlat
xlat
push
cmp
and
sub
mov
jnp
fcmovnbe
je
leave
pop
rclb
mov
push
mov
loope
clc
loope
call
add
pslld
mov
mov
in
push
xor
movsl
fnstenv
pop
nop
popa
sub
movsl
adc
sub
jae
das
fdivl
pop
jecxz
sahf
pop
in
push
xchg
add
inc
mov
aas
cmp
arpl
jno
or
sub
sub
inc
pop
sub
hlt
cmc
gs
in
push
out
movsb
scas
jg
sub
or
fildl
lret
stc
imul
add
cmp
adc
stc
mov
add
inc
arpl
jle
pop
cmc
xchg
push
xchg
out
scas
mov
cwtl
fldl
icebp
xchg
scas
push
insl
add
int3
pop
or
inc
jg
inc
push
cltd
ret
outsl
jge
ds
sbbb
fldt
pop
iret
cmpsl
test
inc
mov
fcmovnu
test
mov
inc
push
stc
mov
adc
mov
aas
mov
mov
xchg
sub
lea
cmovns
and
sbb
fistpl
leave
sbb
stc
push
out
aaa
aaa
loope
dec
ret
or
pop
dec
mov
pop
pop
sub
push
adc
shll
xor
xchg
mov
or
jae
pushf
fstp
icebp
sarb
dec
rcrl
pushf
movsl
adc
mov
jg
push
es
pop
fidivs
dec
and
lcall
mov
ss
ror
cli
adc
and
mull
test
xor
test
sub
sarl
xchg
mov
and
fcompl
movsl
inc
fdivrl
stos
push
pop
in
push
ret
mov
dec
sub
jge
mov
in
xchg
and
add
mov
xchg
jl
sbb
xchg
xchg
jge
jle
adc
mov
int3
xor
lods
int
xchg
js
cli
std
sbb
jg
mov
popl
loope
inc
test
test
mov
pusha
push
push
addr16
cmpsb
fdivs
iret
cld
cmpsb
mov
mov
cmp
dec
mov
rclb
push
enter
mov
sbb
adc
adc
lahf
jne
jbe
sbb
mov
popf
sarb
loopne
sbb
jae
lret
and
jne
mov
xchg
adc
sbb
scas
cmp
pushf
adc
iret
mov
outsl
or
sbb
sub
aas
adc
and
mov
dec
hlt
mov
rcrb
cmp
call
add
jbe
rcrb
sbb
mov
outsl
adc
sar
xorl
pop
jbe
jp
xor
dec
push
push
aas
pop
cwtl
push
stos
ret
sub
mov
mov
mov
add
jmp
sub
aas
inc
lahf
and
jns
add
into
push
int
ss
push
cmpsb
dec
scas
sbb
mov
push
or
pop
imul
xor
mov
jnp
mov
mov
out
pop
cmp
and
mov
fcoms
pop
test
stc
fstpt
mov
jle
add
xchg
fucomip
xchg
cmpsb
lret
aas
add
cmp
xchg
stos
imul
push
xchg
rol
cmp
inc
icebp
ror
inc
pop
js
inc
pop
fstpl
dec
out
push
mov
ret
clc
xor
bound
hlt
mov
lods
out
xchg
into
xchg
inc
jae
cld
in
sti
push
shl
pushf
mov
xchg
lcall
sahf
sbb
sbb
pushf
lds
push
push
push
aad
adc
in
leave
lods
mov
mov
loop
popf
rcr
or
xchg
lcall
pop
push
in
pop
add
dec
cmpsb
push
ss
pop
xor
gs
xorl
sbb
cmpsl
pusha
ljmp
add
pop
xchg
adcl
lea
sub
dec
xlat
iret
adc
adc
and
repz
fcoml
adc
cmp
lcall
mov
and
cs
pushf
jge
and
adc
lahf
or
xor
es
jae
jecxz
ljmp
sub
fidivl
into
mov
xchg
jae,pt
dec
dec
pop
mov
push
test
xor
pop
fimuls
out
pop
lods
std
stos
jae
aaa
sub
cmp
pop
and
adc
lret
and
push
xlat
jmp
push
inc
lea
add
lods
sub
testl
adc
cs
pop
mov
leave
pop
std
dec
pop
xchg
stc
or
xor
sub
push
outsl
mov
push
loope
fsub
jbe
push
or
sti
xor
mov
mov
dec
hlt
loop
sub
gs
mov
xchg
leave
enter
sbb
and
nop
xchg
mov
out
add
adc
cwtl
imul
fldl2t
mov
sbb
subb
mov
ror
inc
testl
sahf
mov
pusha
mov
mov
adc
nop
jecxz
lock
inc
mov
fcom
shrb
cmpsl
ja
fucomip
sub
mov
push
add
rorl
jp
sarb
lds
sarl
push
push
popl
aaa
lock
adc
ret
or
popf
jp
cmp
out
clc
push
inc
mov
add
pop
out
add
mov
push
js
add
push
and
push
dec
and
ss
movsl
int
pushf
pop
xor
insl
mov
out
xor
inc
dec
jbe
stos
pop
pusha
in
cmp
xchg
aad
xor
or
rcrl
test
sbb
fs
int3
rclb
pop
jle
lcall
add
call
xor
and
jecxz
loopne
pop
int3
out
jae
imul
mov
frstor
fistpl
add
aas
mov
out
aaa
jne
xchg
push
stos
jg
testb
jne
icebp
jle
jg
ja
inc
mov
inc
jb
push
mov
dec
rcrl
mov
fcompl
imul
sahf
mov
cmove
lahf
stos
das
push
clc
dec
jmp
leave
pushf
daa
fcoms
push
jmp
in
adc
xchg
jecxz
rcrb
lods
fimuls
cs
mov
enter
push
push
jno
cs
shll
add
test
xchg
jbe
xor
jl
lock
or
and
rcrb
popa
add
popa
sbb
out
imul
inc
mov
cmp
xor
cwtl
notb
fdivp
or
subb
and
call
mov
dec
mov
test
daa
cmpsl
inc
je
pop
inc
sbb
add
push
and
pop
in
roll
or
xchg
adc
mov
jnp
jb
xchg
cmp
xor
adcl
cmp
jnp
popf
mov
dec
pop
cld
mov
shrb
mov
dec
cmp
dec
outsb
inc
xorl
loope
leave
mov
sbbl
stos
jno
adc
adc
mov
jg
dec
inc
or
fdivp
jae
or
xlat
inc
or
cmpsb
and
cs
push
fdivs
adc
mov
int3
mov
fidivs
iret
cmc
dec
jg
insb
dec
add
add
sub
inc
repnz
sbbl
mov
jno
mov
loopne
std
push
sbb
fidivl
add
mov
out
add
int
push
xor
daa
add
int
jb
pop
daa
push
jecxz
jmp
aam
and
aad
mov
mov
xchg
pushf
inc
pop
imul
inc
and
test
xor
dec
shll
and
lock
insl
lret
mov
and
in
xchg
xchg
or
retw
add
sahf
dec
xchg
call
mov
add
push
mov
lods
jo
sbb
arpl
mov
lods
jmp
mov
rol
icebp
jno
pavgb
inc
imul
inc
inc
mov
push
adc
inc
test
test
mov
out
mov
pop
xor
jns
out
lcall
lock
mov
inc
adc
fdivl
push
dec
movsb
in
stos
dec
loope
stos
add
loopne
fwait
lret
andl
shlb
mov
inc
rorb
sub
imul
repnz
and
push
lock
and
shll
jno
pusha
dec
or
inc
arpl
lret
in
mov
jmp
cmc
dec
inc
mov
xchg
xchg
xchg
pop
push
mov
sbb
sbb
aad
jns
nop
and
jae
cmpsb
fildl
in
jne
adc
add
push
fdivs
add
push
xchg
jbe
mov
pop
jnp
loope
arpl
mov
xchg
bound
cs
mov
sbb
add
pop
adc
dec
ret
mov
imul
outsl
repnz
jg
jge
add
mov
out
aaa
test
mov
ret
jp
idivb
fucom
and
adc
add
mov
hlt
out
in
pushf
push
iret
dec
xchg
stc
andl
adc
enter
cmp
cwtl
or
rorb
das
mov
out
inc
jg
sbb
lcall
fnstenv
mov
dec
or
lods
clc
sub
and
push
les
xchg
fwait
lods
gs
cmpsl
mov
or
and
les
dec
pop
inc
test
adc
sbb
aas
mov
mov
cmpsb
add
adc
and
cmpsl
cmp
mov
ret
out
inc
nop
jns
pop
popf
mov
mov
cmp
pop
mov
cmp
pop
cmc
jb
aam
adc
mov
jg
roll
xchg
jmp
enter
mov
bound
jmp
imul
fs
mov
dec
fdivs
cs
imull
out
test
out
dec
dec
pop
add
or
sub
loopne
nop
negl
ljmp
jmp
ljmp
sub
jo
arpl
sub
inc
fidivrs
cmp
mov
add
dec
sub
in
test
mov
test
cmp
scas
sbb
ja
xor
push
adc
test
mov
xor
adc
ret
pop
daa
test
jae
jecxz
inc
xchg
aam
je
ret
cmpsb
inc
pop
push
mov
adc
push
xchg
pop
int3
pop
cmc
frstor
push
mov
std
push
sbb
out
fidivrs
loope
xor
popa
in
lods
mov
shrl
xor
inc
pop
mov
adc
adc
sti
jl
ds
enter
nop
jmp
or
mov
mov
pop
cmpsb
dec
lret
outsl
dec
lcall
jne
xor
jge
mov
daa
mov
stos
push
std
outsb
imul
xchg
and
adc
mov
je
push
push
xchg
or
ror
mov
xchg
jns
lea
xor
cmp
dec
jmp
or
add
jae
mov
fs
xlat
fwait
sub
imul
das
mulb
test
loope
pop
mov
aam
repz
jmp
mov
lret
or
lret
push
xor
outsl
push
or
adc
mov
fsubrl
cmp
dec
loopne
insb
cmp
or
cmpsb
aas
mov
ds
pop
or
push
enter
or
clc
cmp
and
test
adc
pop
add
add
jae
pop
mov
and
push
aad
fcmovnu
hlt
daa
xor
pop
and
pop
sbb
dec
call
cmp
dec
addr16
cmpsl
mov
rcll
test
and
es
xchg
scas
call
popf
pop
rcr
adc
push
out
ja
xchg
mov
sub
dec
ss
repnz
das
sbb
xor
pop
insl
or
xchg
push
push
popf
neg
imul
notb
add
adc
add
daa
push
movsb
mov
add
jg
shr
sti
pop
jns
mov
lock
cmp
mov
rclb
mov
jnp
lret
sub
push
inc
sub
dec
dec
int3
adc
cltd
aas
fisttpl
jae
dec
in
lcall
push
scas
cmp
outsl
inc
add
mov
enter
shr
pop
out
sub
jb
test
repnz
xchg
jmp
shr
outsl
imul
pop
sti
movsb
adc
in
xor
add
nop
stos
decb
cwtl
out
mov
leave
mov
ret
mov
xchg
xchg
cmp
mov
mov
aam
repz
pop
push
imul
lret
jns
adc
dec
aad
dec
push
clc
and
pop
adc
fcmovne
fnsave
out
push
cltd
adc
or
in
popf
sub
add
dec
enter
sub
push
mov
adc
mov
cmp
mov
stos
xor
lods
stc
scas
push
bound
int
pusha
data16
shll
mov
idivb
test
imul
lcall
jns
andb
shl
jge
imul
aaa
inc
clc
ja
loop
xchg
dec
dec
aam
rcrb
ret
lods
push
xor
je
xor
sub
push
xchg
pop
push
test
daa
mov
add
jb
into
fucomi
and
or
cmp
pop
jp
push
mov
pushf
jl
jmp
and
lret
xlat
mov
adc
mov
or
mov
int
leave
popf
sub
push
cmp
mov
in
xchg
aam
push
xor
cs
stc
dec
jl
int
or
adc
outsl
mov
adc
sub
arpl
fisttps
or
push
add
ret
xchg
lahf
push
push
hlt
sbb
loopne
add
arpl
ljmp
push
jae
ljmp
int3
adc
xor
xchg
test
mov
xor
lret
fidivl
mov
pop
ret
arpl
rcl
arpl
rcl
pop
mov
add
inc
push
jb
mov
shl
int3
stc
push
cmpsb
mov
mov
push
mov
pop
out
dec
stos
or
addr16
jb
mov
xor
arpl
mov
or
inc
hlt
jno
push
sub
mov
repnz
pushf
inc
stc
pop
stos
ret
in
and
jb
xchg
imul
sti
adc
add
iret
pop
lret
xor
leave
sbb
xchg
fiadds
mov
jb
jo
mov
dec
cmpb
out
mov
filds
nop
clc
inc
mov
adc
roll
xor
js
mov
les
push
cmp
jecxz
xchg
sahf
or
xchg
pop
out
sti
and
dec
shl
pop
add
jb
mov
aaa
cltd
subl
lock
sbbb
pop
lods
cmp
add
cli
adc
iret
hlt
push
xchg
push
sbb
inc
mov
pop
cmpsl
pop
lret
cli
add
imul
int
pop
jo
and
scas
and
add
cmp
mov
insl
repnz
dec
loopne
int3
mov
fidivl
mov
cmp
push
inc
lret
xchg
mov
pop
cmc
push
cmp
test
scas
hlt
push
mov
adc
arpl
sbb
jg
inc
int3
pop
loope
idivb
dec
lock
and
lcall
mov
repz
mov
jmp
add
not
sub
into
cli
xchg
and
jge
loopnew
sub
jae
in
cmp
daa
cli
popl
cmc
test
jl
or
and
mov
std
cmp
push
sbb
movb
in
pop
clc
mov
or
inc
sbbl
lock
inc
cmp
xchg
inc
test
jmp
jnp
cmp
cld
xor
add
and
inc
pop
sahf
push
or
mov
inc
or
fwait
stos
dec
mov
xorl
xchg
mov
xchg
mov
add
mov
into
notb
lahf
shll
popa
mov
fnstsw
and
add
jg
imul
testb
lea
push
imul
movsb
adc
clc
dec
pop
jno
popa
xchg
mov
xor
or
sub
and
pop
push
sub
addr16
scas
mov
sub
shrl
sub
mov
shll
aad
and
push
push
jmp
adc
mov
in
and
pushf
mov
aam
xlat
lea
addr16
repnz
add
aam
ret
push
push
int
jg
std
sub
mov
or
sub
dec
sub
popl
cmp
das
ficomps
cmp
jb
pop
xorb
or
push
imul
push
loopne
jmp
ja
mov
and
ss
decl
sub
ret
or
adc
das
xchg
xchg
jmp
mov
jmp
test
inc
hlt
aad
sahf
jge
arpl
xchg
and
dec
xor
xor
mov
cmp
sub
shrl
in
mov
jno
insl
popf
lds
mov
pop
pop
cwtl
sbb
sub
roll
sub
ficomps
mov
lret
mov
sar
int3
loop
mov
andps
shll
sbb
enter
mov
test
std
or
add
stc
mov
jnp
cwtl
cmp
arpl
scas
sub
imul
ret
sbb
jo
xor
out
xchg
jns
cltd
hlt
or
int
sbb
mov
mov
insl
pushf
sub
jp
push
add
stos
movsb
mov
aam
pusha
push
add
cmc
test
lock
or
or
out
push
jno
xor
jle
push
movsb
ret
ljmp
xchg
test
and
dec
leave
std
xor
xchg
xchg
fs
sub
mov
xchg
out
jge
int3
add
popf
mov
xor
sub
xchg
mov
push
enter
mov
cmp
mov
lahf
lea
dec
push
insl
push
ja
jmp
push
sub
push
das
sub
mov
es
mov
add
add
xchg
leave
and
dec
bound
xor
sbb
stos
loop
pop
jmp
mov
mov
pop
outsl
cmp
and
cmp
cmc
cmc
mov
push
mov
cwtl
shll
push
cmp
jne
and
adc
xor
inc
sti
fsubrs
ss
adc
pop
popa
int3
adc
bound
mov
scas
loopne
dec
lcall
add
sbb
push
outsl
cmpsl
mov
push
pop
xor
mov
fldl
jb
xchg
in
clc
sub
in
dec
dec
jmp
ljmp
je
clc
inc
leave
mov
call
fcom
out
mov
in
lcall
cwtl
and
fcmovu
data16
mov
xchg
scas
mov
xchg
xchg
or
lret
mov
xchg
das
in
pop
mov
aas
icebp
sbb
fs
mov
push
mov
call
nop
cmp
imul
push
popf
adc
inc
lret
mov
add
push
dec
cmp
cmp
sbb
lcall
add
inc
shlb
je
pop
int3
fcomip
lcall
repz
insl
mov
out
jmp
push
push
orl
push
aad
jae
mov
out
and
xchg
fucomp
outsl
inc
pop
jp
mov
mov
mov
gs
xor
mulb
mov
mov
and
repz
pavgb
arpl
jecxz
inc
scas
dec
mov
push
push
mov
cmpsl
fists
test
pushf
pop
inc
mov
movsl
or
lods
push
in
mov
int
xchg
jnp
insl
add
test
xchg
faddl
and
sub
xor
xchg
mov
adc
test
mov
imul
pop
pushf
hlt
and
dec
aaa
add
dec
lods
movsl
cmpl
sahf
pop
xchg
inc
loopne
jbe
lods
std
and
shrl
mov
jne
or
or
lea
faddl
cmpsb
mov
test
int
int3
leave
sub
fucom
jnp
xor
jb
cwtl
sub
ja
push
pushw
sbb
loopne
ret
inc
or
mov
arpl
loope
movsb
mov
jmp
add
pop
jge
xor
leave
test
fstpt
push
lcall
mov
pop
aaa
insl
mov
lds
push
xor
arpl
push
inc
or
xor
cmp
jecxz
pop
and
sub
xlat
in
fdivs
fs
lret
outsb
push
jo
mov
push
cld
test
in
or
pop
call
pop
jns
inc
negl
or
shlb
xchg
pusha
sub
dec
adc
shl
sti
lds
adc
mov
cwtl
cmp
add
jae
sti
adc
pop
or
lcall
ret
sub
stc
mov
lcall
mov
fildl
add
xor
and
lcall
mov
jl
out
xor
cmp
dec
add
xor
or
repnz
cmp
and
push
mov
hlt
orl
push
jb
sbb
push
out
ret
insl
jne
ljmp
iret
cmp
dec
cmc
stos
jmp
sbb
inc
add
xchg
js
jg
nop
je
adc
clc
push
mov
outsb
push
mov
jge
add
dec
stc
or
push
push
xor
iret
sbb
jg
push
push
pop
shr
fistpll
out
jne
aam
jbe,pn
mov
pop
adc
pop
not
test
inc
sub
out
fldl
jo
jge
fbstp
leave
int
mov
mov
std
mov
ja
ficompl
dec
dec
inc
inc
dec
xchg
xchg
fisubrs
popf
fsubs
test
cmp
mov
imul
jne
mov
add
push
xor
daa
jnp
or
scas
sti
lret
into
test
mov
int
xchg
stos
in
pop
or
ljmp
lea
aaa
inc
mov
jne
jne
push
jae
add
aas
mov
mov
jl
or
adcl
ret
cmp
fsubl
bound
shl
gs
lods
aad
mov
adc
shlb
add
jl
push
rorl
push
and
dec
leave
cmpsl
adc
push
dec
int3
jb
std
out
test
and
push
pop
pop
inc
je
ljmp
sbb
sbb
push
or
rorl
scas
insl
lcall
imul
filds
mov
ds
push
fbld
mov
movsl
cmp
cmp
lock
andb
pop
pusha
clc
jnp
rcll
inc
sub
pop
and
push
aas
dec
cmp
mov
pop
das
jle
jns
pop
and
ret
cwtl
sbb
repz
push
imul
stc
add
out
pop
cli
dec
jnp
sbb
inc
leave
xor
xchg
push
mov
jmp
push
xchg
cltd
mov
loop
aaa
push
sbb
fidivs
fldcw
daa
movb
in
xchg
cs
divb
addr16
lahf
mov
sbb
dec
jb
mov
adc
jo
lea
js
jae
dec
inc
and
pop
xchg
int3
mov
gs
imul
test
dec
arpl
xchg
insl
mov
pop
fcmovu
cmp
mov
aad
mov
insb
sarb
ret
dec
lods
jp
incl
jp
call
mov
mov
movsb
push
cld
dec
add
and
xlat
scas
jle
sub
add
cmpsb
xchg
bnd
dec
scas
loop
mov
aad
out
in
pop
shll
sub
add
sbbb
testl
gs
jbe
push
fildl
adc
jne
push
xlat
mov
pop
xchg
add
adc
xchg
cmpsl
mov
jbe
xor
or
push
mov
fcoms
xor
xor
imul
mov
add
ja
sti
jbe
dec
sbb
mov
push
or
loopne
fnstsw
loop
jo
lock
jno
pop
cmp
imul
stc
cmc
in
dec
fincstp
sub
cmp
ret
lds
cmp
inc
xchg
roll
ds
ljmp
mov
xor
out
aas
pop
add
xchg
jns
ss
lret
push
sahf
mov
mov
xor
out
stc
mov
pusha
and
pop
inc
adc
sarb
jecxz
or
mov
into
das
cmp
mov
pop
and
mov
jbe
rcll
jne
add
jns
lret
jae
shlb
push
and
sub
in
mov
or
inc
cmc
stc
orl
xorl
data16
orb
sahf
mov
and
cmp
push
pop
cmp
stc
push
mov
hlt
movsb
int
aad
mov
jno
inc
in
aad
xchg
sbb
jge
xlat
icebp
into
stos
gs
mov
adc
cmpl
or
cli
pop
push
fldenv
push
arpl
adc
jmp
mov
pushf
jecxz
ja
xchg
pusha
sbb
xor
std
cli
ds
sbb
scas
push
scas
imul
mov
pop
xchg
sbb
mov
test
out
push
adcl
inc
hlt
lods
popl
stos
testb
or
stc
and
xor
imul
movsb
jp
fs
xchg
push
imul
sub
nop
mov
jp
jl
and
adc
mov
push
jmp
loopne
divl
dec
xor
repnz
incb
adc
ljmp
negb
repnz
xchg
pop
jne
stos
cmc
jnp
icebp
mov
aad
fildl
or
stos
aaa
sbb
daa
div
sub
xor
daa
movsb
pop
xor
mov
not
movsl
xorl
movsb
mov
push
mov
or
insl
ret
or
mul
cld
insl
jb
out
neg
stos
mov
and
fcmovnb
aas
xor
pop
jle
pop
ds
xchg
dec
out
out
push
and
add
outsl
iret
sbb
repnz
aam
mov
pop
jnp
and
lods
cmc
push
leave
cld
xor
shll
mov
out
add
sbb
push
rorl
testb
mov
insb
mov
in
or
addl
imul
ret
push
fs
and
stos
jnp
pop
xor
aam
stos
rcrb
or
ljmp
sbb
push
aad
out
push
mov
pop
jp
add
pusha
aam
cmp
jp
xor
xadd
fwait
push
jne
push
shlb
xor
lods
mov
fidivs
cmp
push
ss
gs
xchg
popf
mov
sbb
jbe
imul
xor
pop
lods
push
mov
xor
pop
neg
sahf
mov
fimuls
and
test
sbb
insb
out
jno
outsl
mov
test
jmp
cltd
pop
push
xchg
fadds
mov
lds
or
shll
cmp
adc
out
dec
xchg
iret
test
ds
fxch
ljmp
daa
dec
shrl
cld
mov
mov
aaa
pop
popa
aaa
stos
imull
loop
cmp
pop
mov
scas
xor
mov
in
fistl
repnz
or
push
insb
sub
jno
and
stos
pop
insb
push
mov
xor
pop
jmp
pop
stos
sub
cmp
mov
mov
push
jg
cwtl
repz
ss
enter
ret
pop
xchg
pop
xor
out
mov
outsb
out
lcall
sbb
xchg
ja
mov
in
imul
xchg
xchg
jge
lret
out
pop
hlt
dec
sbb
jl
push
xor
ficoms
adc
mov
or
pop
and
mov
push
sbb
cmpsb
adcl
push
pop
adc
xor
out
sbb
stos
dec
jnp
mov
mov
enter
push
or
xchg
popf
stos
fsubp
push
bound
pusha
or
fs
mov
or
lahf
xor
dec
xor
fistpl
jb
in
fwait
outsl
stos
add
gs
jge
inc
test
imul
test
jo
fcomip
mov
cmp
fdiv
sbb
adc
clc
jns
xor
xchg
xor
mov
sti
ljmp
sub
addb
inc
sahf
loopne
imull
push
inc
arpl
jno
mov
pop
lock
xchg
nop
sub
dec
fldt
xchg
in
fbstp
and
sub
lcall
rcrl
out
sbb
inc
test
faddp
ret
shll
push
pop
shlb
test
pop
movsl
and
push
xchg
popw
inc
nop
jae
loopne
push
test
je
pop
or
mov
into
sub
xor
lock
ljmp
xchg
push
repz
mov
ja
add
inc
mov
jb
cmp
jno
sbb
add
rclb
pop
sub
and
mov
fstps
flds
lock
cmpsl
adc
aaa
fisubl
adc
pop
out
out
test
adc
pop
les
push
das
inc
add
and
icebp
and
push
push
push
mov
cmp
cmpsl
daa
out
xor
repnz
xor
imul
addr16
imul
scas
push
test
test
jle
ret
xchg
mov
mov
and
scas
inc
xchg
mov
adc
sub
or
cmp
fimuls
pushf
mov
mov
lock
pop
outsl
clc
mov
out
push
push
xchg
push
dec
xchg
sbb
shll
inc
pop
leave
es
push
jbe
adc
es
adc
cld
push
xor
fnstsw
pop
adc
ffreep
or
filds
cmpsl
mov
ljmp
movb
push
jp
and
pop
das
sahf
cli
into
notl
lods
xor
data16
jmp
iret
fistl
sbbb
loope
popa
pop
daa
or
mov
leave
dec
adc
jno
dec
push
and
daa
lods
cmpsl
stos
ds
jno
test
or
ret
mov
xor
std
or
ss
inc
lret
loop
pusha
mov
loop
pushf
push
xchg
mov
jbe
push
inc
imul
mov
mov
je
cmp
pusha
jge
push
test
pop
jmp
xchg
pop
inc
shrw
pop
mov
lock
mov
sub
xchg
mov
inc
mov
into
adc
fldcw
mov
jae
cmc
lds
pop
andb
mov
out
push
daa
flds
pop
jnp
pushf
sub
ds
jle
je
pop
inc
loopne
sbb
scas
movsl
mov
xchg
jno
adc
ucomiss
out
mov
nop
loop
jb
scas
es
aas
pop
scas
dec
inc
popa
nopl
or
rcrb
and
pandn
loopne
add
inc
fcompp
xchg
and
push
loopne
mov
pop
dec
add
movsl
xchg
sbb
stos
daa
sub
out
mov
jno
jae
scas
bound
clc
loopne
and
loop
aas
dec
mov
repz
xor
inc
scas
xor
push
mov
fsts
fidivl
imul
andb
sbb
lcall
and
popf
mov
movl
jae
cmpsb
and
pushf
mov
adc
aad
pop
push
iret
std
stos
xlat
mov
jae
icebp
mov
lods
jno
shrb
psubd
jecxz
stos
outsb
or
xor
adc
fidivrl
subl
cs
movsb
xchg
ja
mov
repnz
mov
das
xor
in
loope
loopne
pop
sbb
scas
mov
jno
call
mov
mov
fisubrs
imul
mov
jp
enter
jmp
int
dec
cwtl
arpl
loop
lcall
insl
lret
sti
out
fidivrl
sbb
movsb
push
jecxz
jo
iret
insl
push
inc
lahf
add
shrl
push
inc
bound
push
lods
xor
mov
insl
lds
test
mov
jl
push
test
pop
loope
out
insl
clc
fs
xlat
iret
ja
into
sub
loopne
mov
in
arpl
ret
inc
aaa
sub
pop
sahf
lahf
in
les
xlat
les
cltd
out
ret
sub
loopne
mov
sarb
xchg
arpl
and
or
cmc
inc
rorb
pop
inc
cmp
mov
test
adc
mov
lods
aas
dec
push
daa
sbb
add
dec
push
popa
fists
int3
mov
stc
loope
pop
cmp
cmp
inc
cmpsl
shl
mov
mov
jnp
adc
subl
xor
fs
mov
sbb
push
iret
in
push
int3
test
daa
lods
outsl
push
rol
sub
out
loopne
cmp
push
push
cld
std
mov
fs
mov
add
mov
mov
loope
outsl
mov
stc
sbb
sbb
mov
adc
pop
loopne
in
push
popf
movsb
imul
addb
iret
les
ficomps
cwtl
decb
xor
adc
fdiv
outsb
jne
sub
xor
enter
scas
inc
popa
dec
icebp
jns
dec
cld
in
fsub
das
inc
movsl
bound
outsl
adc
lret
test
jmp
lock
dec
int3
hlt
movsl
fiadds
iret
sti
mov
mov
push
insb
cmp
jp
mov
mov
fbld
and
iret
cmc
outsl
add
scas
sbb
mov
enter
fs
mov
jb
call
pop
fldenv
or
je
sbbb
fisubl
icebp
jb
mov
andb
stos
add
es
sub
sub
or
popa
jnp
jle
xchg
mov
sub
and
mov
push
push
rorl
cmp
les
mov
bndstx
or
jnp
adc
mov
popf
jns
mov
scas
adc
imul
push
fs
sbb
rcl
negb
adc
adc
mov
inc
fisubs
popf
pop
mov
imul
testl
ljmp
pop
add
mov
cmc
push
lahf
sbbl
pop
fisubl
mov
mov
testb
mov
push
inc
lods
cmc
adc
mov
fcmove
rcll
stc
jg
xor
sbb
repz
stc
jg
cmp
sub
adc
push
mov
jae
pushf
stos
jmp
push
adc
loopne
seta
leave
push
mov
cmpsl
outsb
scas
test
jg
cmp
jno
adc
inc
jecxz
icebp
shrl
pop
testl
loope
test
cs
movsb
push
mov
lcall
add
mov
xchg
scas
ljmp
in
xchg
in
lods
mov
mov
jecxz
mov
mov
test
sub
add
out
push
dec
jno
jmp
gs
mov
xchg
or
call
sti
mov
dec
xchg
add
sub
xchg
adc
cmpb
pop
insb
mov
in
int3
jg
dec
add
sbb
dec
and
xchg
mov
sbb
xor
clc
nop
nop
pop
mov
cmp
dec
and
ss
mov
pop
rcrl
or
inc
push
out
stos
std
lcall
jl
daa
push
or
sbb
push
popa
mov
out
dec
inc
sbb
incl
in
pop
jl
lods
pop
inc
dec
cwtl
in
xor
mov
imul
xchg
xor
dec
sbb
xlat
int
dec
inc
xchg
pushf
rolb
sub
ret
loopne
adc
pop
inc
sarb
jg
dec
leave
aad
and
cwtl
repnz
dec
aam
push
adc
dec
test
jg
pop
movsl
xchg
cmp
mov
mov
test
lahf
lret
int
insl
inc
mov
out
daa
and
out
mov
mov
xor
sub
sbb
xor
mov
fwait
aam
and
rcrl
pushf
pop
xor
cld
xchg
jl
xchg
int
mov
sub
ret
cmp
es
rcrb
xchg
cmc
nop
mov
sbb
jecxz
hlt
dec
inc
lock
mov
sbbb
jp
sahf
inc
pop
stc
push
mov
jb
push
sbb
adc
sbb
adc
sbb
xchg
sbb
cmp
mov
aas
or
mov
pushf
ja
pop
push
stc
sbb
jb
inc
add
int
out
inc
mov
outsb
add
negb
pop
incb
fs
jnp
sbb
pop
inc
mov
pushl
repnz
das
cmpsb
aam
and
jns
adc
jp
or
mov
dec
mov
push
sub
or
out
inc
aas
jmp
mov
dec
adc
mov
sub
sbb
insl
mov
lcall
popa
shlb
gs
or
jg
dec
cmpsb
sub
out
es
xchg
dec
sub
lret
std
push
mov
mov
lock
je
xchg
shrl
pop
fidivs
clc
into
jae
cmp
sbb
repnz
nop
popa
and
cmp
out
into
into
fdivrl
pushf
mov
pop
sbb
test
cmpsb
mov
out
pop
idivb
cmp
xchg
xor
data16
pop
lret
cmc
dec
cmp
in
xchg
inc
add
popa
lret
or
lahf
int3
loop
pusha
xchg
lahf
lock
out
dec
push
bound
sub
hlt
imul
lcall
shll
mov
cmp
mov
mov
jle
sub
pop
jo
sbb
cmp
or
leave
nop
ret
mov
test
sbb
push
ss
rsqrtps
and
outsb
lock
loopne
lock
sti
mov
lret
addb
cmpsb
sbb
and
cwtl
notl
sub
lock
cltd
sub
jg
inc
cmp
imul
inc
shrl
std
push
adc
shrb
mov
scas
mov
xchg
adc
pop
dec
lods
lods
inc
jae
jge
push
scas
push
xchg
loop
iret
cwtl
jp
sub
mov
or
nop
sub
testl
rolb
adcb
adc
loope
pusha
stos
mov
cld
cmpsb
mov
sbbb
sti
sub
cwtl
cwtl
jnp
arpl
xchg
cmc
sub
xchg
mov
cld
and
pop
and
push
xchg
test
rcll
mov
fiaddl
subl
jl
clc
mov
divl
cltd
mov
insl
idivl
or
add
enter
cmp
mov
rol
cmp
stc
or
cli
pop
adc
ss
push
cmp
aaa
out
cmpsb
lahf
out
bound
stos
insb
frstor
movsb
les
adc
xchg
xchg
cltd
jae
out
int
and
mov
jg
xor
or
pop
mov
lock
add
dec
stos
adc
xor
js
and
mov
cmp
repnz
xchg
lret
and
inc
sbb
or
out
mov
add
test
sarl
std
popf
xor
adc
xchg
movsl
jmp
in
lahf
adc
cmp
push
push
xor
fmuls
inc
cmpsl
add
jo
or
adc
mov
test
rorl
jno
ret
fs
fistpll
jbe
das
cld
gs
mov
sub
stos
mov
adc
push
ljmp
stc
or
fcmovbe
or
clc
loopne
fidivrs
cmp
xor
test
cmp
mov
push
inc
jno
arpl
in
jns
pcmpgtb
inc
ret
jecxz
mov
fwait
movsb
arpl
add
mov
jp
icebp
xchg
sub
add
add
jg
pop
xchg
mov
mov
mov
mov
push
lret
xchg
test
jbe
xchg
mov
dec
xlat
imul
aas
push
rorb
bound
ficomps
sbb
inc
cld
push
loope
lcall
jbe
int3
sbb
add
cltd
bound
or
insl
mov
call
add
cmp
sub
sarl
movsb
jne
out
in
add
sbb
push
aas
loopne
sub
das
das
out
ret
mov
adc
jmp
fstl
dec
ret
inc
push
enter
or
inc
push
roll
mov
std
xchg
aas
add
fildl
andb
and
iret
pop
test
out
mov
sbb
pop
call
dec
inc
or
daa
imul
int3
pop
int
inc
jb
sub
test
push
cmpsb
or
pushf
mov
dec
mov
cmpsl
lods
cmp
sub
or
xor
mov
es
mov
inc
jp
repnz
pusha
adc
mov
sub
fwait
xchg
add
les
iret
mov
jle
pop
mov
push
lea
cmpsb
mov
push
das
lret
push
mov
adc
test
leave
xchg
sub
cmpsl
push
jg
sbb
inc
fcoms
push
hlt
mov
mov
je
adc
int
es
push
inc
xchg
mov
dec
sbb
repz
insl
in
and
into
out
pop
scas
lahf
sbb
and
pushf
loopne
or
push
adc
sub
iret
pop
jbe
push
lods
push
stc
inc
outsl
xor
cmp
out
push
pop
aam
movsl
and
stc
hlt
out
test
or
rorb
mov
repnz
mov
rclb
sub
cmp
stos
ja
hlt
add
push
sbb
jno
sub
sti
ss
mov
xchg
mov
inc
inc
adc
push
loop
in
push
jle
int
xor
dec
inc
cmp
sti
mov
sbb
bnd
cmp
xlat
enter
sti
fwait
std
stos
imul
jg
pop
je
orl
imul
sti
jns
repnz
mov
jp
sbbl
push
pavgw
test
aaa
xor
mov
arpl
femms
mov
sahf
inc
mov
jno
mov
xor
sbb
pop
test
dec
cmc
nop
es
mov
pop
jmp
es
and
push
repz
aaa
insb
push
into
rcrb
sbb
sub
cltd
lock
shll
jne
xor
cmp
outsb
pop
mov
adc
push
inc
lret
mov
and
dec
xorl
test
lods
mov
mov
xchg
ljmp
add
or
xor
dec
xchg
fimull
push
xchg
dec
jp
incl
loope
push
je,pn
lods
push
jno
pop
xchg
mov
hlt
fnsave
sbb
pop
jnp
xchg
scas
pop
in
shr
fiadds
mov
jnp
inc
jecxz
les
daa
popf
xchg
mov
mov
add
mov
xor
pop
out
add
test
cmp
outsl
mov
jle
and
fisttps
mov
mov
adc
xchg
aaa
lcall
rcl
sbb
pop
jl
out
movsl
jno
ret
shll
cwtl
ficompl
sbbl
or
popa
xor
cmpsb
adc
jo
jne
fs
in
iret
pusha
dec
popa
mov
hlt
movsb
pop
adc
lret
mov
pop
xchg
xor
adcb
jmp
xor
test
adc
fdiv
rol
add
jg
js
dec
adc
dec
dec
mov
push
cmc
xor
adc
jle
inc
add
notl
mov
cmp
inc
push
mov
xor
xchg
popf
aaa
mov
leave
and
dec
scas
adc
arpl
stc
add
dec
cmpsb
rclb
mov
rcrb
ja
dec
ja
jmp
mov
push
jp
ja
imul
movsb
jnp
daa
pop
insl
pop
es
xor
test
sub
es
push
adc
fiadds
push
aad
lcall
or
xor
aaa
fdivl
adc
push
mov
stos
scas
iret
jnp
sbb
pushf
movsb
stos
fldcw
cmp
xor
je
or
ja
jne
js
sbb
or
jl
sarl
aaa
push
and
push
cli
in
sub
arpl
dec
je
hlt
dec
fs
mov
les
jg
xor
add
pop
jb
mov
mov
mov
sub
push
mov
dec
jae
fldlg2
mov
pop
sub
stos
mov
insl
xor
dec
popa
sbb
dec
add
in
and
js
push
push
sti
jns
sbb
loope
out
je
arpl
cmpsl
jnp
movsl
xor
adc
mov
push
imulb
sbb
sub
inc
call
inc
or
push
add
aad
jecxz
jecxz
dec
cmc
mov
test
sbb
shr
lock
jmp
jbe
or
sahf
push
jl
mov
adc
jo
inc
mov
xchg
xchg
movsb
cli
adc
loopne
xchg
pop
shlb
out
add
lcall
pop
in
jno
mov
bound
insl
aas
mov
jnp
jo
test
arpl
shll
jl
imul
aam
cmp
popf
sarb
adc
push
pop
dec
out
adc
push
stos
sbb
add
dec
pop
sub
mov
xchg
loopne
clc
pop
inc
mov
xor
pop
loopne
xchg
push
inc
decb
sbb
stos
or
push
xchg
mov
fwait
cmp
leave
shlb
sbb
aam
int
lds
roll
dec
enter
bswap
pop
lea
loope
sbb
pop
int3
and
xchg
inc
mov
fstpt
fnsave
cmpsl
jecxz
cmp
sbb
cltd
mov
in
sbb
or
cs
jle
in
out
xchg
insb
or
mov
arpl
adc
mov
and
icebp
xor
imul
popf
cli
daa
ja
xchg
xor
mov
in
sub
inc
add
stos
test
jmp
std
sbb
ljmp
mov
add
add
out
cltd
mov
xor
push
sub
fldln2
cmp
sub
or
repz
mov
dec
push
cltd
lea
adc
lock
lret
mov
stos
js
xchg
adc
mov
sarl
shl
and
je
pop
dec
or
mov
pop
mov
mov
sbb
xor
xor
adc
add
fildll
add
lret
sarl
push
aam
addr16
jae
xchg
fmulp
bound
movsb
movsl
add
add
call
jne
int
mov
or
dec
aad
pop
nop
adc
xchg
and
lret
int3
test
ljmp
js
mov
inc
flds
and
repnz
adc
add
or
cmp
movsl
mov
push
push
add
fsubl
jnp
inc
negb
lcall
sbb
mov
pop
pop
inc
mov
int
or
pop
mov
mov
iret
xor
cmp
in
into
ret
pop
dec
repnz
jp
sti
mov
stos
or
mov
loopne
or
mov
or
nop
lret
push
mov
sbb
add
int3
jnp
and
and
xor
or
mov
mov
cmc
push
mov
pop
xor
mov
mov
in
mov
repz
fildll
sbb
dec
vgf2p8mulb
jmp
sbb
jp
aas
rorl
sbb
movsb
add
icebp
lea
mov
jp
sbb
ja
lret
leave
test
jnp
jnp
push
dec
or
mov
inc
rorb
and
mov
inc
call
and
daa
mov
mov
mov
sub
arpl
das
push
js
jbe
rcrb
movsb
mov
call
cmp
fwait
dec
or
mov
add
shrl
or
or
mov
shrb
lods
mov
ja
fidivs
rcrl
popa
mov
xchg
popl
cmpsb
push
les
aas
sub
scas
adcl
fnstcw
jbe
pushf
add
add
xchg
ret
bound
fistl
popa
movsl
jg
xor
push
fadds
je
or
jnp
adc
push
dec
loope
hlt
sub
and
out
add
stos
insl
pop
jbe
mov
test
subl
sbb
xchg
sub
cli
mov
dec
pop
push
pushf
popf
ret
clc
mov
scas
orb
push
push
test
jno
es
sbb
add
dec
cmp
jp
das
jle
pop
jg
fadd
push
jge
xor
pop
xchg
add
movsl
adc
mov
pop
or
cmp
pop
aaa
xor
pop
pop
jmp
lods
push
popf
jne
test
xchg
mov
mov
out
xor
les
mov
mov
ror
jle
mov
mov
in
xchg
mov
mov
xchg
insb
sbb
push
mov
int3
jne
addl
sbbb
xchg
xor
movsl
mov
popa
adc
out
fistpl
xorl
mov
sbb
adc
fiadds
decl
mov
popf
cltd
jbe
push
sub
nop
cmp
sub
mov
cmpsl
push
fistps
fucomi
imul
aas
les
leave
xchg
pop
testb
mov
and
push
push
rorb
sarl
mov
push
sbb
push
loopne
xorl
add
inc
insl
jne
testb
dec
sarl
xlat
into
movsl
and
lds
testb
cmp
fisubl
xchg
in
inc
outsb
imul
outsl
mov
jo
mov
imulb
mov
mov
push
sub
push
aad
xor
test
cld
pop
pop
cmpsb
imul
cmp
push
hlt
pop
jbe
or
cmpb
push
cld
dec
fsubr
push
add
mov
cli
mov
enter
testl
adc
xor
mov
cmp
xlat
loop
testl
je
call
cmp
test
add
mov
mov
sbb
pop
xchg
push
dec
inc
cmp
es
push
rcr
dec
xlat
call
jle
jmp
dec
repnz
stos
bound
xchg
stc
leave
dec
jmp
icebp
cmp
fmul
xor
jle
out
dec
adc
mov
push
sub
hlt
shrl
cltd
gs
sbb
mov
outsl
loope
or
js
cld
jnp
gs
cmp
rclw
arpl
xchg
rcrl
jb
xor
sbb
jmp
test
movsb
rolb
mov
sub
sub
adc
mov
sub
in
push
adc
loopne
or
or
loopne
hlt
mov
popf
xor
xchg
xlat
xchg
xchg
xchg
imul
fcmovbe
pop
insl
jle
sub
xchg
stos
sub
dec
sub
or
sub
push
ss
mov
dec
imul
test
push
adc
sbb
out
and
mov
pop
lods
sbb
insb
cmpsl
jmp
cli
inc
lcall
ja
push
test
stos
lcall
lret
addr16
inc
in
mov
sbb
aam
adc
popf
sub
pop
xorl
mov
std
adcl
inc
dec
push
jmp
aaa
jg
inc
jle
leave
adc
dec
test
repz
push
jo
insl
add
xor
sti
xchg
push
lahf
cltd
adc
das
scas
pop
mov
push
into
lock
or
xchg
pop
add
cld
jno
mov
outsl
fdivl
lods
shlb
fstpl
adc
fstpl
bound
sbb
bound
jae
je
cmc
xchg
push
add
adc
add
lahf
iret
fsubrl
aaa
sarb
stc
xorb
and
mov
xchg
sbb
inc
add
or
pushf
mov
adc
inc
cld
in
xor
mov
inc
fsubr
icebp
inc
incb
push
jnp
add
adc
pop
jge
push
xor
adc
out
aam
rcll
and
add
or
icebp
shll
jb
xchg
not
std
push
push
pop
pop
xchg
push
stos
mov
xor
mov
jnp
in
sbb
and
inc
stos
repz
ja
xor
adc
cmp
mov
push
sbbb
stos
adc
out
pusha
xchg
out
cmp
push
fists
pop
pushf
icebp
mov
pop
mov
pop
test
ds
adc
test
cmp
push
pop
add
outsb
imul
ja
iret
aam
xor
sub
dec
rcrb
enter
push
stc
ret
xor
add
das
stc
add
xor
xlat
inc
test
aas
leave
or
sbb
xchg
cmpb
xor
xchg
leave
mov
sbb
pop
add
adc
cmp
fs
xchg
push
xchg
inc
sbb
sbb
push
xor
sarb
out
xchg
mov
iret
aaa
push
inc
mov
sbb
cwtl
and
add
jp
dec
es
aas
pop
mov
fs
push
add
push
sahf
xchg
insb
jg
movsb
mov
adc
andl
dec
popa
xchg
mov
mov
insb
imulb
mov
in
pop
and
ret
sti
sub
pop
sahf
dec
call
dec
clc
enter
ficoms
in
aaa
dec
dec
or
push
mov
pop
shl
lock
fisttps
subb
inc
ret
in
sbb
idiv
fdivrl
and
jmp
or
cli
out
jno
into
das
test
sbb
cmc
or
daa
xor
aas
shl
addr16
pop
shlb
jecxz
jp
nop
xor
sub
jp
xchg
lret
addr16
call
sbb
rorb
int3
adc
xchg
pop
or
push
jecxz
loope
mov
icebp
fbstp
les
dec
mov
add
or
cmp
mov
push
xor
jno
xor
imul
frstor
lods
add
adc
mov
pop
cs
sbb
pop
mov
cmp
mov
pop
adc
aad
loope
lret
xchg
enter
xchg
push
sub
mov
adc
dec
pop
or
iret
mov
cmpsb
jno
pop
iret
dec
mov
imul
xchg
fidivrl
mov
adc
xor
mov
xor
mov
lods
sbb
aad
jl
loope
ror
mov
jp
nop
sbb
sti
cmp
arpl
pop
sub
sub
addr16
jo
iret
lds
xchg
push
aas
mov
push
pop
mulb
dec
push
dec
outsl
sub
ds
movsb
cld
jns
test
test
mov
or
mov
inc
notb
ror
cmp
pop
lsl
mov
lret
cwtl
mov
cmp
sbb
add
adc
cmp
push
js
data16
gs
les
jbe
lcall
and
outsl
or
sbb
mov
xlat
push
pop
and
xchg
out
test
test
sbb
ret
add
jnp
orb
jge
outsb
scas
push
movsl
repz
mov
gs
cltd
inc
into
mov
jmp
rorl
nop
mov
ds
and
inc
stos
mov
xor
mov
mov
fstp
les
jno
into
push
jmp
cmpsl
sbb
pop
adc
pop
cmovge
sbb
jnp
stc
lock
lret
add
lods
stos
and
aam
int3
lea
mov
leave
mov
push
pop
add
pushf
and
cmp
sti
ret
add
push
roll
and
cmc
and
out
jne
js
mov
int3
and
lds
mov
sub
sub
push
mov
push
cmp
aam
fwait
mov
insl
sti
pop
xchg
int3
push
push
jns
ret
inc
and
and
sbb
mov
lahf
mov
xchg
mov
fidivrl
ret
cmpsb
mov
pop
cltd
inc
mov
pop
push
inc
mov
stc
pop
ljmp
jns
mov
mov
xor
aaa
add
inc
imulb
nop
mov
loope
pop
jmp
dec
jle
push
int
rcrl
ds
or
aad
mov
pop
cmpsb
lea
aas
cmp
data16
xchg
mov
mov
and
fs
je
dec
std
or
addb
dec
cmp
dec
jb
in
mov
les
lea
or
outsb
lahf
leave
pop
xor
adc
adc
hlt
rorb
in
das
xchg
xchg
lods
or
mov
mov
jnp
jp
push
lret
and
sahf
xchg
rcr
dec
inc
ljmp
mov
push
or
shlb
sub
ljmp
and
out
sbb
sub
xlat
xor
das
push
call
dec
ds
ret
pop
mov
aas
stc
sbb
fbld
add
adc
sub
add
cmpsl
push
shll
jmp
sbb
into
adc
ss
loopne
sub
sbb
and
mov
sub
lahf
cmp
push
repz
xor
dec
sbb
and
fwait
inc
sub
pop
pop
xlat
pushf
fnsave
and
cmp
lds
add
pop
ds
das
movsl
add
dec
enter
rorb
outsl
cmpb
fsubrs
add
mov
inc
lret
int3
or
in
pop
sbb
insl
xchg
jecxz
ds
jecxz
xchg
xchg
jae
in
push
cmp
ficompl
mov
adc
std
cmp
xchg
or
icebp
lcall
notb
fdivl
repz
popa
add
popa
fidivs
add
fildll
setb
ss
sub
pop
jecxz
insb
into
mov
in
xchg
xchg
sbb
ja
xchg
sub
cmp
aaa
mov
test
test
jne
xor
adcl
push
dec
adc
xchg
add
and
dec
pop
or
add
push
jbe
nop
xor
dec
int
js
push
les
inc
icebp
shl
scas
notl
xchg
cwtl
cmp
inc
dec
daa
dec
xor
pop
test
fldl
mov
fmull
inc
jno
xor
mov
mov
insl
les
shlb
sbb
lcall
leave
xlat
rcrb
jle
dec
push
cwtl
add
mov
push
out
ds
and
bound
push
sbb
push
hlt
test
les
mov
int3
jge
or
inc
fldl
fidivl
jmp
jp
add
stc
shl
outsb
or
dec
jo
jl
mov
dec
in
mov
arpl
loop
mov
mov
cmp
jb
xor
mov
cltd
fxch
movsb
inc
cmpsl
sbb
adc
in
gs
dec
xchg
jne
xchg
jnp
mov
inc
mov
sbb
pop
dec
cmpsl
pop
mov
jle
cli
popf
jnp
icebp
jbe
or
xor
inc
cmp
lahf
add
fdivrl
pop
mov
movsb
dec
dec
sbb
adc
add
sbb
aas
in
jl
push
push
push
add
sbb
dec
subl
mov
fdivrl
cltd
lret
xor
adc
dec
or
ds
fbld
jb
cmc
pop
or
inc
push
xor
push
icebp
and
lret
rcr
cmc
pop
shrl
les
aas
and
xor
push
sub
xchg
ret
and
mov
sub
add
jne
cmpsl
stos
pushf
xor
add
and
cmp
push
sbb
sarl
les
cmp
jl
outsl
adc
jg
and
shrb
call
pop
imul
fdivr
inc
pop
sub
or
xchg
jl
pop
loop
loop
lock
into
mov
repz
andb
test
mov
repnz
shlb
js
push
cld
push
inc
sbb
movsl
xor
addb
xchg
fwait
adc
pop
xchg
pop
sub
mov
xorb
pop
hlt
mov
mov
es
enter
loop
sbb
lods
outsl
push
and
gs
push
jp
jmp
push
pop
movsb
call
popa
fisttpll
clc
pusha
jmp
scas
int
add
sbb
xchg
lret
xorb
xchg
cmp
scas
adc
mov
into
cmp
xchg
pop
dec
repz
outsb
sub
jmp
or
sbb
jne
push
fsubr
inc
clc
inc
push
and
adc
repnz
push
sub
dec
cld
pop
sbb
inc
add
inc
fdivs
or
mov
push
rcr
ret
pop
and
sub
je
jl
and
lods
push
je
and
dec
mov
mov
jb
call
pop
xor
popa
sub
add
push
mov
jns
sbb
sbb
decl
cld
xor
push
adc
dec
push
or
fidivrs
push
add
ret
mov
add
fdivr
insb
lods
jmp
fsubl
sub
and
xchg
gs
cmp
adc
scas
cltd
mov
in
testb
jmp
loop
pop
cs
outsl
dec
push
push
jae
lock
sub
rolb
insb
leave
js
mov
sbb
jle
out
xchg
xor
mov
inc
mov
mov
adc
inc
sti
cmp
sahf
inc
jno
push
sahf
push
push
push
inc
xchg
loop
push
xchg
in
cmpsb
divl
movsl
lds
imul
pop
mov
jnp
xor
hlt
jg
push
out
movsl
in
lldt
icebp
and
sbb
and
dec
fnstsw
cmc
and
fsubs
xor
fsubr
ljmp
cli
mov
jmp
cmp
sti
fistl
sub
push
popf
mov
inc
xchg
cmp
sarl
sub
loope
ret
adc
cld
es
jp
sbb
loopne
cmp
sub
adc
xchg
popf
scas
cmp
daa
in
fcomps
xchg
stos
push
mov
loope
dec
xor
add
xor
push
pop
cmp
sub
stos
cmp
xor
add
push
sbb
rolb
test
std
fdiv
inc
push
sbb
repnz
lahf
dec
jnp
or
fwait
jno
add
arpl
ret
mov
dec
mov
push
fisubrs
push
sbb
or
pop
cmp
xchg
sub
bound
push
pop
imul
outsb
xor
inc
jg
shrl
xchg
sbb
bound
fwait
inc
movsl
adc
dec
and
push
add
mov
mov
pop
push
inc
jb
pop
hlt
add
lea
sub
jg
jg
int3
iret
push
dec
test
es
jmp
xor
aam
dec
lea
sbb
testb
and
scas
js
ja
dec
or
lods
shl
and
push
jae
push
test
xor
inc
and
aam
pop
aaa
dec
ficoms
jne
cs
int3
imul
das
lea
xchg
shrl
pop
mov
and
push
inc
cmc
pop
adc
jns
mov
pop
sub
int
mov
xchg
icebp
pop
aaa
or
fstpt
add
or
loope
ljmp
xor
dec
xorb
sbb
mov
in
call
imul
outsl
mov
shll
test
in
pop
shlb
cmpsl
or
outsb
and
adc
lds
inc
out
loope
ss
loopne
callw
xor
in
push
movsb
push
mov
ror
pop
divl
mov
mov
daa
lcall
frstor
in
mov
mov
ljmp
dec
inc
test
xor
leave
in
sbb
pop
cld
aaa
push
xchg
mov
mov
shll
push
movsw
pop
adc
data16
dec
jbe
mov
mov
into
into
jne
xchg
mov
arpl
mov
mov
stos
pop
or
push
loopne
mov
insb
inc
jne
ficompl
loop
scas
fstps
cmp
aaa
mov
aad
xor
inc
test
daa
test
cmpsb
cltd
imul
or
ds
adc
xor
out
add
enter
stos
ja
loope
ds
aam
sbb
xchg
mov
sub
sbb
js
inc
push
push
roll
nop
xor
je
and
mov
rclb
insl
sbb
mov
sub
inc
into
pop
aas
add
pop
jmp
cs
fs
jecxz
call
mov
cmp
xchg
pop
jno
test
gs
mov
divb
fwait
cmp
xor
lcall
adc
test
mov
sub
mov
out
leave
dec
pop
sub
mov
and
std
sub
call
dec
sub
xlat
mov
shll
sbb
cs
sub
pop
icebp
add
inc
xor
cltd
mov
lock
inc
sbb
outsb
gs
icebp
les
mov
jbe
sub
push
into
jmp
aam
stc
push
add
pop
lock
push
scas
leave
test
adc
and
out
xor
mov
mov
sub
cmc
sar
mov
ret
outsl
lods
jbe
in
hlt
pop
xchg
xchg
jp
loope
mov
sub
mov
sub
mov
insb
std
lock
data16
pop
push
and
imul
mov
subb
and
cmp
nop
mov
cltd
jmp
sub
mov
push
inc
loop
sbb
dec
jmp
add
repz
ror
push
xchg
mov
sbb
scas
sbb
aaa
int3
sub
pop
imul
imul
push
out
push
lods
sub
test
in
fimuls
ficomps
cmp
dec
mov
repz
test
movsl
or
arpl
mov
push
mov
lds
jge
xlat
scas
in
push
mov
flds
pusha
xor
jmp
stc
divl
pop
outsb
pop
js
sti
mov
icebp
pushf
push
outsl
and
inc
divl
movups
push
xlat
into
in
xchg
dec
lret
xchg
imulb
sbb
mov
pop
lods
stos
js
xchg
out
push
fbstp
lahf
test
movsl
in
sub
sbb
andb
pop
fnstsw
xor
loope
out
repnz
call
gs
jno
inc
jg
push
sub
and
sbb
push
add
and
xlat
fsubrs
outsb
push
movsb
xchg
cmp
jmp
mov
repz
inc
xor
rolb
add
jg
lock
dec
aaa
mov
add
int3
mov
nop
add
xchg
fistpll
or
or
sbb
xchg
jle
xor
hlt
popf
notl
or
out
mov
je
cld
jne
fdivr
das
cmp
incb
in
jecxz
push
cmp
inc
cmp
xchg
scas
add
or
fimuls
mov
imulb
cmc
loope
dec
push
or
out
dec
shlb
xchg
push
push
data16
ss
jp
ja
xor
ss
pop
test
mov
mov
jns
inc
mov
jmp
mov
jb
jmp
adc
into
lret
jmp
addb
xchg
cmpsl
data16
mov
add
inc
mov
jno
daa
enter
ds
mov
inc
sbbl
xchg
nop
xchg
jp
pushf
jg
xchg
das
repz
add
add
test
pop
orl
sub
enter
xor
xchg
mov
ret
add
mov
push
push
lcall
or
out
addl
fwait
push
pop
add
out
es
jge
xchg
sbb
popf
jge
mov
lret
das
shll
pop
push
das
xchg
into
in
jmp
repnz
sub
rcl
movsb
inc
jmp
out
pop
cmpsb
in
fs
push
pop
fdivrl
sub
sbb
push
das
and
popf
movb
lcall
push
mov
push
mov
sbb
adc
mov
in
push
push
shrb
inc
rclb
push
xor
nopl
js
xchg
cmp
pusha
push
fcoms
sbb
sbb
jbe
out
ret
icebp
fiadds
pusha
mov
inc
paddsb
gs
xchg
vpsllq
sub
int3
xchg
mov
jne
repnz
outsb
pop
xchg
fstpt
pop
pop
xchg
das
xor
push
xor
inc
and
mov
mov
cwtl
test
xor
pop
into
iret
and
gs
insl
cs
ljmp
into
outsl
mov
popa
fsubrl
pop
div
push
inc
adc
das
inc
in
cmpsl
inc
aaa
inc
ficompl
popf
mov
jnp
xchg
or
das
rorb
xchg
inc
xchg
mov
cmpsl
das
add
in
cwtl
fisubrl
bound
sbb
mov
loope
test
jmp
jg
hlt
mov
jge
jbe
pusha
gs
test
int
xor
imul
inc
sub
ds
or
lods
push
sarb
adc
lahf
ss
inc
outsb
fsubs
xchg
and
test
fdivrp
aad
pop
xchg
data16
out
xchg
popa
iret
lcall
sub
mov
pop
cli
popa
daa
pop
mov
sbb
ds
dec
in
jecxz
and
mov
pop
arpl
sarb
or
sub
clc
fsubl
rorl
ja
sbb
ret
mov
test
inc
jecxz
int
fsubs
jge
mov
add
imul
xchg
cwtl
pop
stos
bound
push
fisttps
loope
lods
subb
and
ror
mov
aam
cmp
nop
mov
cmpsb
mov
loopne
insl
mov
enter
mull
in
insb
cwtl
mov
push
mov
icebp
mov
in
adc
and
mov
jl
adc
push
pop
std
aaa
sub
in
call
jb
ss
dec
dec
sbb
sar
inc
xor
add
cld
repz
mov
add
movsl
mov
cmp
imul
sub
or
pushf
push
dec
mov
inc
stos
cmc
outsl
mov
lcall
sti
stos
pop
lods
push
popa
imul
pop
fisubrs
push
adc
sti
cwtl
rcl
mov
mov
orl
roll
loopne
or
push
je
lods
out
push
jg
test
inc
aad
negl
mov
mov
push
stos
aad
cmp
nop
push
out
mov
mov
loop
fsts
xor
insl
jmp
push
dec
into
xor
mov
push
dec
fs
lds
pop
mov
push
jle
sbb
arpl
inc
dec
pop
dec
xchg
shlb
push
inc
xchg
xor
nop
push
cmp
gs
xchg
cltd
outsl
outsb
or
mov
adc
icebp
sbb
or
stos
jb
pop
or
mov
sbb
test
test
lret
xlat
xchg
jle
and
lret
and
outsb
repz
jp
cmp
push
dec
mov
cwtl
sub
xchg
xor
stos
jns
push
mov
fistpll
mov
sub
imul
lods
adc
mov
js
mov
push
loope
es
adc
call
out
stos
sbb
jl
test
int
shrb
push
mov
jns
push
clc
mov
xor
mov
mov
stos
push
or
imull
lds
cmpsl
repz
fistpll
pop
mov
xchg
mov
xchg
inc
sti
jo
aam
leave
sub
lock
pop
loop
pop
push
dec
ret
jp
mov
mov
popa
and
push
mov
add
cmpb
mov
pminsw
test
je
dec
data16
sbb
cmp
jg
ret
and
push
jp
or
xchg
out
adcl
lahf
loopne
xchg
push
lods
and
test
mov
shll
ret
pusha
fs
push
sub
addr16
adc
push
aas
repz
imul
xchg
jbe
mov
push
pop
cmpsl
stos
cmpl
lods
pop
adc
mov
jmp
cmp
cmp
in
icebp
mov
mov
pop
xchg
xchg
test
adc
mov
dec
cmp
mov
loope
popa
adc
pop
or
dec
jb
mov
outsb
inc
adc
adc
insl
shll
xchg
in
cmc
sbb
in
cmp
int
adc
rcr
call
xor
mov
push
scas
outsb
stc
stos
lods
dec
mov
ljmp
push
and
adc
inc
or
sub
pop
xchg
stc
xchg
popf
aad
out
jge
mov
imul
and
jg
into
mov
sbb
push
or
mov
je
mov
outsb
dec
adc
mov
push
add
call
pop
xor
out
mov
mov
test
xchg
fs
mov
sbb
mov
inc
mov
sbb
mov
jle
push
pop
loopne
ja
lods
loope
test
scas
lock
inc
cs
ficoml
adc
xchg
pusha
subb
loop
sbb
sbb
jecxz
cmpsl
dec
dec
xchg
jb
mov
scas
ljmp
add
jecxz
xor
cltd
lret
sar
lcall
ret
cmc
stc
idiv
mov
int
pavgw
jo
cmp
aaa
dec
and
xchg
sub
jbe
lds
xor
dec
mov
out
jmp
sbb
dec
in
pop
lods
adc
icebp
mov
movsl
cmpsb
xor
sbb
mov
inc
aam
sbb
test
mov
push
and
ficoml
sub
cmp
and
test
cmp
push
cmpsl
aas
push
xor
js
add
mov
jnp
xor
or
mov
insl
and
aam
fsubr
mov
mov
mov
sbb
add
pop
subb
jmp
lret
mov
ja
iret
loope
cmp
fcomps
sbb
cmp
xor
xor
sti
test
ret
xlat
xlat
adc
sub
outsb
shl
xor
daa
xlat
pop
xor
inc
pop
rcrl
les
lret
and
int3
push
mov
mov
es
push
mov
ss
mov
adc
push
push
lock
jno
mov
jns
dec
sti
push
int3
pop
add
aad
loop
dec
movsl
mov
mov
jg
arpl
aam
sbb
in
jge
insb
lods
movsb
adcl
and
push
xchg
and
push
loope
jb
mov
les
loopne
pop
insl
jmp
mov
add
sbb
xor
imul
test
sub
fisttpll
mov
aam
dec
xchg
inc
outsb
loop
sti
clc
ficompl
add
dec
jle
stc
cli
aas
ret
cmp
mov
sbb
sahf
fldenv
out
in
imul
push
dec
sub
int
mov
test
clc
or
xchg
and
or
inc
sahf
sbb
outsb
lods
xchg
add
in
pusha
hlt
test
mov
test
fs
push
icebp
das
xlat
jmp
pop
mov
mov
mov
mov
dec
cs
push
test
cmp
aad
pusha
fstl
mov
and
and
dec
sbb
ss
inc
aam
in
mov
add
test
dec
adc
cmp
mov
xchg
push
lock
dec
je
jl
sahf
mov
repz
pusha
test
clc
fisubl
icebp
or
shlb
and
loop
lcall
ja
pop
stos
adc
inc
imul
push
xor
xchg
sti
mov
inc
jb
push
imul
inc
adc
jge
jb,pn
jecxz
cmp
stc
xchg
pop
sub
and
sbb
aam
in
jbe
add
fmull
in
mov
or
add
add
mov
cmp
pop
mov
xchg
pop
xchg
cmc
movsb
inc
mov
fidivrs
mov
rclb
lock
call
push
loop
ds
test
cmp
or
pop
inc
lock
cmpsl
rcr
daa
mov
push
xor
add
je
cwtl
jle
pop
fldl
lods
adc
shl
xchg
out
add
xor
mov
in
dec
and
das
lret
repnz
jbe
and
decb
sti
pusha
inc
jne
out
loop
aam
stc
ret
cmp
sti
sar
xchg
dec
mov
mov
sbb
repnz
cmp
mov
sbb
jno
out
mov
aaa
das
and
divl
xchg
aad
xor
sarb
daa
cmp
outsl
sbb
aas
jb
dec
xor
push
fildl
ret
repz
mov
arpl
xchg
mov
xchg
jge
out
arpl
mov
sbb
rcrb
push
sub
inc
xorb
nop
mov
jmp
mov
and
rcrb
dec
push
ret
jae
pop
xchg
rcr
inc
pop
sti
movsl
xchg
mov
or
xor
and
jp
inc
pop
rcrb
pop
mov
pop
popf
adcl
mov
inc
push
loopne
cmpsb
jl
lea
lods
jecxz
jg
adc
hlt
shrb
rclb
or
jno
mov
out
sub
cmpsb
int
notb
mov
test
test
dec
lret
jg
inc
hlt
ficompl
mov
ljmp
lret
sub
loop
leave
inc
jns
and
pop
add
jne
pop
jae
mov
adc
cmpsl
cmp
sub
or
xor
pop
out
jnp
add
xorl
pusha
loopne
mov
stos
push
loop
sub
mov
jbe
xor
sbb
shlb
sbb
lods
mov
and
adc
add
cmp
adc
and
inc
jae
and
xor
xchg
mov
mov
add
mov
adc
inc
and
and
insl
pop
cmc
sbb
mov
lahf
ret
mov
enter
or
jge
sbb
shll
fwait
ja
mov
daa
int
sub
insl
imul
jp
adc
outsb
test
mov
sbb
xor
cli
push
xor
pop
fistps
sarb
call
loop
aad
divb
imul
imul
lods
popa
push
sub
std
fistpll
push
es
or
or
xchg
outsb
cwtl
cwtl
aad
pop
mov
add
jbe
mov
mov
sub
xchg
xchg
jl
inc
jl
mov
cmpsb
pop
xchg
xor
xchg
sti
in
inc
lahf
fsubl
xor
inc
loopne
xchg
data16
je
mov
fsubrs
pop
adc
mov
cld
mov
adc
or
add
movsl
dec
pop
loop
jmp
jg
add
testl
jle
bound
cmp
aad
lods
shrl
mov
jns
stc
jne
jl
mov
mov
sti
push
outsl
or
inc
cmpsb
test
mov
jne
and
pop
push
xchg
lea
fsubs
sub
jne
jne
push
sub
hlt
xor
shl
lea
popa
push
div
mov
push
inc
jp
jne
dec
int3
jg
test
push
fwait
pop
push
xchg
jecxz
mov
loope
pop
es
pop
clc
mov
arpl
push
je
enter
out
lods
and
add
in
ret
lods
cmp
mov
sbb
inc
lret
or
add
subb
push
jns
xchg
sub
popa
sub
pop
sbb
lds
sbb
es
imul
cmp
jp
es
mov
and
jnp
xchg
aad
adc
pop
mov
stos
mov
sub
adc
dec
fnstenv
ja
xlat
test
cmp
jne
std
add
arpl
aas
aaa
test
xlat
aam
sbb
add
stc
xchg
leave
fsubp
push
ret
jl
or
cmp
pop
sar
test
inc
jnp
repnz
test
dec
adc
jg
subb
in
cmpsb
add
aaa
add
pop
nop
int3
mov
jae
xchg
test
std
sub
shll
insl
jge
out
add
jo
loope
iret
inc
mov
or
dec
pop
lds
pusha
add
jno
and
push
jns
and
mov
mov
add
xchg
lds
xor
mov
jecxz
fisubrs
jle
addb
repnz
push
pop
aam
pop
int3
shr
xor
dec
jge
test
dec
in
movsl
cwtl
cmp
hlt
mov
or
dec
adc
sahf
or
in
gs
push
jnp
call
fcmovnb
push
add
sbb
mov
dec
pop
pop
sub
repz
and
outsl
mov
ret
data16
and
mov
out
sub
sarb
test
mov
cmpl
cmp
xchg
loopne
pusha
test
add
or
lret
mov
inc
fwait
movsl
xchg
push
pusha
loop
pop
testb
jo
imull
int
aad
pop
aad
sahf
inc
out
fs
test
cltd
mov
pop
aam
push
stc
fwait
xor
jmp
xor
add
movsl
jmp
xor
add
dec
push
push
jb
imul
into
movsl
cmc
jle
xchg
pop
add
jno
pop
ja
test
mov
mov
push
cmpsl
jbe
dec
push
mov
int
out
jmp
pop
popf
aaa
jno
xor
add
mov
test
es
or
mov
sbb
and
cmp
lods
mov
out
mov
push
push
repz
pop
mov
add
cwtl
fwait
xor
and
cwtl
iret
push
call
dec
mov
call
xor
dec
mov
xor
adc
or
ss
out
lock
out
repnz
push
add
repz
daa
addr16
cmp
in
adc
xor
pushf
pop
negb
xchg
push
cld
inc
pop
ss
push
jo
mov
pushf
add
sub
cmp
outsb
es
inc
or
lods
cmpsb
sub
es
out
push
sahf
dec
rclb
in
outsb
mov
add
cmpsb
popf
pop
fiaddl
idivl
fcoms
call
idivl
es
mov
xlat
cmp
mov
lea
lea
jge
fucomi
in
clc
pushf
rclb
and
lds
mov
sbb
lods
fwait
mov
inc
mov
xorb
call
jnp
fstpl
loopne
xchg
mov
jnp
cmpb
daa
xchg
dec
pop
jbe
orl
test
mov
cmp
test
xchg
call
mov
jmp
mov
out
pop
pop
add
add
pminsw
das
jne
mov
iret
test
xor
inc
adc
mov
shll
and
cmpsb
imul
lret
jecxz
or
sub
jae
outsb
push
push
shll
jns
mov
daa
adc
dec
ret
xchg
jo
jmp
icebp
icebp
jbe
add
lods
pop
cmp
sbb
fcomp
pop
mov
xor
test
xor
mov
ret
bound
bound
lret
jg
xchg
das
jmp
or
js
js
fnsave
mov
push
pop
je
das
stos
jnp
popf
xchg
jne
fs
test
xchg
xchg
loope
insb
cwtl
push
aad
mov
inc
lea
insl
add
pop
xor
outsb
test
test
inc
imul
lock
push
repnz
cmpl
and
jo
sub
jnp
push
adc
popa
cs
int3
inc
push
sti
add
xchg
fwait
lret
cmp
add
dec
add
dec
mov
es
insb
js
adc
out
add
call
loopnew
inc
bsr
nop
xorl
or
stos
in
jae
mov
fidivs
imul
add
and
xchg
ret
and
cltd
add
inc
lret
push
sub
xchg
push
pusha
daa
inc
ficoms
xchg
cmp
icebp
pop
cs
adc
xor
insl
icebp
addr16
sub
pop
in
aaa
pop
out
add
call
dec
out
add
jl
jb
popf
or
loopne
xor
pop
xchg
mov
cmp
inc
ljmp
cld
fld1
sbb
mov
xchg
outsl
mov
pop
into
pushf
das
in
or
insb
adc
or
cmp
dec
xchg
mov
int3
mov
addl
lret
xchg
pop
cmpsb
outsb
push
xchg
adc
inc
xchg
push
fisubl
in
and
shr
imul
fcoml
popf
dec
inc
inc
test
and
xchg
sti
or
sar
sub
xor
cmpsl
jmp
pop
sub
sbb
cmp
je
mov
xor
lret
rorl
gs
or
jb
and
and
test
ljmp
xor
dec
push
jbe
and
jle
sbb
xchg
loop
inc
jmp
sahf
sbbl
push
pusha
mov
add
dec
ja
mov
dec
bound
xor
hlt
inc
mov
test
add
xorb
movsl
lahf
mov
mov
fsubrs
movb
aad
xchg
in
lret
and
lock
cs
mov
or
sbb
cwtl
dec
je
je
jne
cltd
inc
push
std
inc
dec
cmpsb
cmp
lods
lock
mov
cltd
pusha
dec
inc
aas
or
dec
pop
pop
addl
mov
pop
decb
fsubrs
vcvtsd2si
fwait
or
fists
popa
imul
sbb
aam
in
xchg
cld
idivb
lcall
inc
imul
and
out
sub
and
fsub
orl
mov
adc
imul
imulb
fsin
movsl
jmp
mov
imul
in
mov
cmp
cld
jecxz
inc
loopne
or
jno
jnp
jl
in
sti
mov
popa
push
push
add
mov
push
movsl
pop
inc
sti
mov
lahf
jae
cli
les
push
pushf
dec
out
roll
push
or
push
dec
jl
kandnb
pop
jbe
jb
mov
fnsave
xchg
mov
push
and
test
cmp
rclb
cli
jne
cmp
movsb
insb
clc
repnz
lahf
jno
mov
lret
pop
gs
incl
jns
rolb
imul
mov
cmp
insl
scas
push
test
roll
and
xchg
in
cld
jg
add
call
push
jb
push
xchg
push
and
adc
cli
and
jl
mov
in
pop
repz
mov
push
bound
jno
iret
sbb
mov
xchg
jl
add
in
fidivl
dec
add
aad
mov
push
aad
fstps
jmp
and
mov
sub
aaa
mov
mov
sub
es
pop
movsl
pop
adc
jge
mov
fs
fcoms
lds
sbb
push
mov
movsl
mov
fcoml
sub
pop
popa
xor
aas
sub
cmp
movsb
addr16
cmp
mov
pop
loope
fwait
adc
cmc
sbb
sbb
cmp
les
push
inc
cmc
add
les
mov
fxtract
mov
cmp
dec
inc
inc
out
jbe
outsb
dec
vpavgw
add
jb
push
loope
aaa
mov
jmp
andl
mov
xchg
xchg
or
dec
pmuludq
mov
mov
imul
loopne
cmp
shll
pop
xor
sub
fistps
dec
arpl
inc
and
pop
fsubs
in
pop
pusha
jo
inc
loope
test
popf
popa
stos
aaa
imul
sbb
xor
inc
lea
cwtl
cmc
andl
jecxz
outsb
push
cld
call
jns
push
lret
in
push
leave
lret
inc
xchg
adc
sbb
int
incb
fwait
mov
shrl
stos
or
ds
stos
notl
adc
pop
addr16
cs
xor
aam
cmp
sub
shrl
je
out
jno
mov
mov
xlat
add
or
and
call
gs
fdivp
fwait
jne
or
xchg
cmp
popf
ljmp
sub
sbb
dec
mov
ret
daa
addr16
movsl
lcall
decb
cs
dec
cwtl
pop
mov
mov
repz
mov
pop
stos
or
popa
sahf
dec
mov
mov
sbb
repnz
je
ja
lea
pop
stos
fsubrs
clc
or
sbb
pop
jecxz
jge
leave
ja
jge
adc
jle
rclb
das
xor
cltd
into
xor
dec
loope
imull
mov
test
pushf
mov
inc
pop
das
xchg
pop
inc
mov
test
adc
mov
rolb
mov
loope
shl
repnz
jne
mull
pop
jecxz
or
scas
scas
mov
sti
mov
aam
or
dec
mov
loopne
je
push
dec
jge
lcall
add
dec
sub
xchg
and
addl
mov
push
mov
or
fisttpll
cmp
mov
mov
mov
popa
mov
push
inc
std
shrb
pop
or
jns
push
les
mov
ja
lods
jl
jbe
adc
xchg
cmp
hlt
mov
adc
cmpsb
xor
roll
pusha
jns
addr16
cmp
cltd
adc
idivl
adc
jb
sbb
fs
enter
pop
mov
jle
ljmp
push
arpl
inc
cmp
pop
pop
ret
mov
dec
popf
fcom
mov
decl
jg
mov
and
fidivs
xorb
jbe
cld
xchg
gs
sub
rcrb
leave
pop
adc
aaa
inc
popf
popf
mov
inc
movsl
aam
xor
lock
dec
pop
fldcw
sub
cmp
sbb
mov
pop
adc
mov
scas
rcr
aad
mov
test
ljmp
mov
xlat
mov
das
testb
or
jg
pushf
sahf
xchg
xor
dec
fs
adc
and
psrld
and
aas
xor
pusha
movsb
fwait
push
pop
das
dec
gs
fnsave
push
aam
and
mov
cmpb
dec
outsl
ds
mov
or
pop
or
lock
inc
pop
xchg
jl
mov
push
insb
sbb
into
and
fldcw
push
sti
pop
mov
dec
pop
inc
into
addl
aas
xor
mov
icebp
xchg
aas
mov
sub
test
jmp
shlb
or
test
adc
push
jmp
daa
xlat
nop
inc
testb
adc
addr16
imul
es
popa
sbb
daa
aam
pop
add
sar
mov
mov
xor
xor
mov
or
mov
pop
fxam
or
out
sbb
pop
pop
inc
push
jae
sbb
jno
push
fnstsw
pusha
lret
lret
cwtl
jbe
and
mov
fisubl
mov
sbb
xchg
jg
push
pop
in
bnd
pop
ljmp
shlb
daa
fninit
mov
ficomps
adc
imul
clc
int
push
stc
add
mov
pop
sbb
add
aad
lret
jb
mov
jnp,pt
cs
jne
pop
mov
push
or
sbb
andl
fwait
pop
jp
sbb
js
push
frstor
dec
pop
xchg
mov
cmc
sti
mov
cli
leave
jecxz
stos
stc
inc
mov
ds
inc
push
imul
movsl
cmp
or
mov
pop
shrl
fmull
int
sbb
rol
into
fwait
aaa
push
xor
scas
and
and
fs
xchg
shr
bound
pop
roll
sbb
sbb
and
cld
das
sub
lret
push
mov
pop
movsl
outsb
jae
in
pop
mov
sbb
pusha
inc
iret
lods
dec
xor
inc
int3
movsl
push
dec
cs
movsb
ljmp
fisttpl
cmp
adc
lret
rol
mov
add
mov
mov
stos
xchg
mov
adcl
cmp
fisubrl
push
cmpsb
ficomps
leave
lea
jle
jne
sarb
add
push
mov
add
jo
stos
sbb
ss
cmp
je
fmuls
jne
push
ret
out
mov
dec
push
pop
popf
aam
xchg
pusha
cld
mov
and
sub
dec
inc
loopne
xchg
jmp
mov
xor
push
push
mov
push
xor
dec
dec
jge
mov
std
cli
pop
jg
mov
in
pop
cmpsb
add
add
pop
pop
add
xor
sti
fdivrl
loopne
rclb
lcall
jo
inc
pop
mov
push
mov
std
push
mov
loopne
iret
test
sti
into
add
popf
cltd
cwtl
fsubrl
mov
pop
inc
and
lock
dec
sub
and
movsl
mov
pop
xchg
je
in
test
decb
ds
inc
xor
outsb
jb
mov
xor
dec
and
mov
pop
ss
jnp
dec
mov
int3
sub
sarb
dec
cmp
pop
lods
xchg
add
nop
mov
jl
jmp
xor
hlt
arpl
add
mov
add
lret
popf
adc
adc
and
xor
mov
sbb
addr16
or
loop
nop
xor
gs
cmp
dec
aad
cmpb
xchg
dec
cmpl
ss
sbb
in
aad
push
fsubrl
sti
mov
xchg
or
push
push
push
dec
adc
mov
shlb
ret
popa
mov
add
ret
int3
add
sbb
cmp
mov
lret
fadd
sbb
ljmp
enter
mov
cmp
mov
inc
shlb
mov
popf
test
hlt
test
clc
or
jo
insl
data16
hlt
es
xchg
adcl
insb
jecxz
sub
bound
and
stc
add
jecxz
test
loop
push
std
adc
xor
lcall
mov
xchg
std
xor
or
push
or
xor
ret
push
jle
pushl
ss
inc
add
dec
pop
push
hlt
dec
inc
inc
inc
push
int
dec
icebp
sub
mov
leave
sbb
mov
sub
repz
sub
js
cmp
mov
psrld
xchg
mov
int3
dec
in
aam
imul
stos
and
add
push
xchg
out
icebp
adc
movsb
mov
jmp
js
sub
mov
and
mov
dec
mov
xor
ljmp
pop
jmp
lcall
and
add
mov
jns
or
pop
int3
pop
int3
dec
push
cmc
lock
mov
lcall
test
hlt
shl
mov
pop
test
sahf
inc
outsl
iret
addb
add
js
inc
inc
fisubl
adc
mov
jle
fmulp
nop
add
and
repnz
and
mov
lods
scas
mov
fdivrl
stc
sbb
pop
or
and
pop
in
ret
sub
das
fs
jb
ja
std
shl
addl
cmp
or
mov
inc
xchg
mov
adc
out
xchg
loop
mov
mov
les
jb
jb
adc
test
fwait
lret
push
and
cmpsb
xchg
sbb
xchg
mov
or
addb
mov
push
xor
dec
std
add
jg
mov
inc
pop
adc
js
ret
xlat
stos
shrb
mov
jge
add
stc
xor
fisubrs
enter
fiaddl
rolb
lcall
sbb
in
jl
jle
or
sbb
enter
aad
dec
push
lret
rcl
lret
ret
aas
xchg
popa
imul
aad
and
mov
sbb
sub
ds
int3
cmp
incb
int3
push
arpl
mov
ret
es
mov
inc
or
lea
lahf
mov
push
xchg
add
dec
mov
inc
sbb
inc
push
xchg
in
push
adc
mov
and
lcall
cmp
repnz
pushf
std
cli
mov
loop
jne
inc
fists
dec
inc
leave
pop
stos
insb
adc
mov
push
and
out
pushf
pop
shlb
vminsd
inc
lods
adc
mov
add
loope
push
jl
sar
jae
or
mov
lcall
or
pop
test
xchg
pop
out
jl
cmpl
pop
fxch
repnz
mov
sub
in
dec
xchg
cwtl
lcall
pop
je
jns
andl
mov
fnsave
sti
mov
rcll
scas
xor
mov
lods
xor
clc
int3
ret
jnp
cmp
lret
ljmp
jo
and
sub
pop
out
inc
rorb
add
daa
lods
push
incb
or
mov
fs
add
in
xchg
push
push
aam
mov
les
cmpsl
xor
mov
ret
or
push
sub
xor
pop
inc
rclb
mov
movsb
xchg
xor
hlt
sub
xchg
cs
or
mov
jbe,pt
jecxz
inc
scas
dec
jbe
hlt
fmull
jl
repnz
mov
cmpsl
pminsw
stc
pop
ljmp
dec
xor
cli
arpl
cmc
subb
das
or
pop
push
into
sti
jp
cmpsb
inc
add
xor
inc
add
sbb
in
cld
mov
push
sbb
mov
addr16
fildll
xor
adcl
mov
sbb
out
jmp
fstl
cltd
int
xlat
int
int3
lret
adc
outsb
jo
scas
mov
pop
mov
repz
xor
insb
push
mov
ret
dec
pop
xor
lods
xchg
subl
fs
mov
sub
fadds
bound
add
dec
or
adc
inc
adc
inc
daa
call
or
nop
mov
jle
leave
push
les
sub
push
xchg
in
jp
imul
dec
adc
cmp
push
pushf
dec
push
xchg
push
stos
ret
in
popf
jno
sub
fiadds
jns
in
nop
pop
push
dec
daa
sub
lods
push
out
xchg
cmp
je
aam
insb
das
add
insb
sbb
inc
fmuls
in
inc
loopne
pop
jbe
mov
inc
sbb
std
into
jne
jnp
scas
daa
movsb
addr16
jns
cmp
loopne
or
xchg
mov
out
fistpll
subl
xchg
mov
popa
inc
insb
push
out
insb
ljmp
ljmp
int
sbb
mov
xor
dec
mov
mov
mov
jnp
aam
test
cmp
fmul
arpl
pop
lds
imul
or
add
pop
addr16
lock
test
pop
insl
mov
sar
sub
scas
cmp
sbb
stos
and
nop
mov
jbe
dec
rcll
fisubs
cmp
sbb
outsb
test
and
sbb
sbb
cmc
outsl
sarb
enter
in
inc
push
dec
scas
int
pop
jns
in
inc
sahf
iret
mov
ret
adc
cmpsl
cmpsb
dec
aad
out
and
inc
stc
mov
popl
in
stc
sub
lock
pop
push
loopne
sbb
dec
nop
pop
push
insl
js
popf
addb
leave
aas
out
adc
inc
arpl
lahf
sbb
pusha
dec
sbb
xchg
dec
cltd
out
add
scas
mov
mov
outsl
stos
jne
inc
cmpsb
add
fstl
sub
add
mov
and
push
mov
inc
or
or
push
aas
cmpsb
push
sti
lods
jno
aaa
xor
data16
dec
mov
lods
leave
push
add
in
inc
mov
jecxz
sub
cmp
and
push
xor
rolb
cmp
ror
dec
lcall
or
sub
fstpt
pop
mov
mov
sbb
aas
push
je
imul
insl
stc
xor
lret
mov
xor
sti
jge
test
inc
and
sahf
inc
mov
lea
adc
cmp
mov
adc
sub
lret
push
push
cmp
fimull
out
xchg
iret
push
mov
repnz
xchg
mov
ja
push
dec
sub
jl
sbb
gs
loop
cmp
add
cwtl
iret
sub
add
cltd
cmp
lret
push
aam
pop
gs
jb
cmpsb
or
pop
xchg
sub
pop
sub
mov
or
mov
cwtl
imull
arpl
cld
cmc
iret
mov
and
push
popa
pop
repz
mov
cmpsb
pop
dec
dec
xchg
xchg
ljmp
mov
sbb
orb
popa
repnz
mov
loop
cltd
jl
adc
mov
push
movsb
sbb
mov
add
mov
and
fdivs
lea
ret
sbb
icebp
xor
pop
add
test
bound
jecxz
jo
insl
xchg
movsl
sbb
cmp
into
repz
jne
or
dec
add
outsb
xchg
outsl
inc
sub
inc
in
inc
mov
or
pop
shlb
out
push
inc
fcmovnu
cs
or
inc
scas
ret
push
dec
or
fldenv
lret
adcb
into
into
in
lahf
in
or
pushl
push
cmp
cmp
pop
adc
inc
mov
add
jns
pop
fbstp
xchg
insl
pushf
imull
sbb
dec
roll
jmp
fwait
dec
sbb
popl
pop
xor
pop
gs
mov
and
imul
loope
sub
in
jge
and
mov
cmp
mov
mov
addl
pop
inc
sub
pushf
ret
aaa
pop
insl
fstpt
cwtl
enter
icebp
popa
push
dec
pop
mov
mov
sarb
sbb
divb
jg
popa
mov
mov
les
jmp
xchg
mov
mov
sub
ds
mov
repz
sbb
sbb
movsl
jae
xor
cltd
cwtl
into
js
push
push
add
in
jle
cmp
inc
bound
push
lock
cmp
push
enter
insl
clc
ds
in
vpackuswb
pop
cmpsl
addr16
cmp
xor
imul
xor
lock
daa
add
push
cmp
mov
cvtps2pd
xchg
mov
jge
ds
jmp
mov
stos
xchg
adc
add
adc
xchg
insl
nop
cmp
jns
insl
daa
cmp
push
adc
add
xchg
mov
and
arpl
test
nop
mov
adc
sbb
fstpl
mov
js
jp
roll
icebp
adc
scas
mov
pushf
arpl
cwtl
mov
adc
lds
out
sbb
sbb
inc
xchg
adc
or
adc
push
adc
es
ret
je
push
mov
jle
adc
mov
push
add
scas
sbb
fwait
sub
jmp
outsl
mov
mov
stos
jno
shll
jmp
adc
xorl
int
ss
insl
sub
aaa
sub
sub
test
nop
pop
adcl
or
ret
push
mov
sarl
in
bnd
mov
les
inc
popa
inc
and
mov
addb
loope
adc
xor
jecxz
xchg
lds
cmp
lods
mov
insl
push
jno,pn
lahf
test
and
int3
gs
xchg
pop
xor
loope
jp
movsb
std
ja
testb
or
mov
das
push
adc
sbb
and
mov
mov
pop
add
mov
outsl
nopl
lcall
ret
ds
movsb
add
shll
mov
inc
and
insb
dec
outsl
push
cmp
cmpsl
mov
mov
mov
push
dec
add
dec
mov
repnz
pop
push
mov
and
push
xor
cli
es
mov
mov
inc
jbe
test
and
shll
and
mov
pop
and
mov
dec
xchg
push
shll
stos
dec
jecxz
and
jns
mov
or
es
push
pop
push
scas
iret
icebp
xor
and
push
js
sahf
inc
fistpl
in
or
xchg
shlb
inc
and
testl
imul
cmpsl
lret
jge
stos
jns
lds
mov
shl
lret
hlt
pop
mov
mov
jae
sbb
test
cs
sub
pop
loopne
lret
int
pop
loopne
inc
xchg
stos
leave
lock
or
mov
xor
outsb
repnz
movsl
cs
push
or
rcr
clc
pop
shrl
push
push
addr16
cmp
pop
loop
adc
fldl
aad
divl
out
mov
mov
out
shrl
add
xchg
jg
mov
enter
or
push
cmp
test
dec
mov
add
jg
add
push
mov
dec
cmpsb
mov
or
inc
jg
decl
pushf
loope
sbb
mov
push
mov
sbb
mov
rclb
dec
cmp
sub
shl
into
dec
mov
dec
sub
call
sub
push
or
dec
inc
pop
outsw
sahf
jecxz
clc
and
or
add
jbe
ret
jmp
add
das
cmp
popa
dec
fisubrs
ret
and
in
push
aad
pop
hlt
mov
sub
aaa
shl
and
adc
jno
movl
inc
addr16
negb
cld
dec
pusha
inc
jnp
xorb
popf
in
sbb
xchg
aad
and
mov
call
pop
or
adc
sbb
mov
mov
out
mov
mov
into
pushf
shrl
xor
push
mov
out
xor
nop
fwait
xchg
add
rcr
icebp
out
out
lods
add
jg
inc
mov
je
lods
add
lock
sub
sbb
push
inc
xchg
mov
add
mov
mov
mov
jnp
cwtl
fs
aaa
adc
cli
xor
push
or
sub
shrl
mov
scas
sahf
sub
addr16
sbbb
call
popa
add
xchg
stos
pushf
or
push
jecxz
mov
cmp
jg
dec
out
scas
push
ljmp
in
xchg
mov
loope
lret
cs
mov
sbb
fiaddl
mov
cmp
out
lret
add
test
rolb
pop
jmp
add
sbb
aam
addr16
push
into
pop
mov
pop
inc
mov
stos
adc
ret
adc
jmp
subl
dec
mov
jg
pop
dec
mov
add
hlt
jl
mov
popf
dec
adc
pop
dec
sbb
stos
ljmp
data16
xorb
sbb
jbe
popa
cwtl
mov
sbb
mov
adcl
push
pop
lret
fisubl
rcr
and
cmp
xchg
dec
inc
sub
lods
jbe
push
sbb
jge
in
mov
sub
mov
sub
pop
or
jne
fnstsw
mov
mov
es
mov
cli
fstpt
data16
push
pop
push
dec
jnp
out
mov
cmp
repnz
inc
aam
cwtl
inc
push
or
imul
mov
int
jecxz
and
leave
stos
call
pop
ror
scas
push
insb
and
movl
push
mov
icebp
mov
pushl
xchg
dec
lret
push
adcb
cmc
mov
mov
xor
mov
jmp
add
std
repnz
pop
imul
sbb
jns
jg
jns
cmp
pop
lahf
xchg
push
test
out
cltd
pushl
movsl
iret
ljmp
imul
out
je
stos
repz
fs
mov
jp
bound
je
mov
jmp
jle
push
cld
in
pop
out
push
add
lcall
xchg
xor
or
scas
jae
xlat
pop
fs
clc
mov
inc
fsubr
andb
inc
fists
loope
mov
jle
out
movsl
sbb
notb
inc
nop
dec
dec
jle
add
sub
pop
push
pop
mov
sbb
push
pop
lea
or
ljmp
jbe
call
pop
jno
jnp
in
loopne
out
aad
shl
xor
push
jne
add
call
repnz
imul
mov
repz
mov
cmp
mov
push
out
std
jl
sarl
jge
sub
adc
fistps
xchg
sub
cmc
mov
je
in
into
sub
iret
mov
test
pop
mov
in
into
lods
pop
repnz
xor
ret
fdivrl
mov
popa
imul
cmp
xor
fdivrs
out
jmp
ja
cli
mov
pop
pusha
arpl
dec
sbb
jb
and
pop
push
sub
fwait
xchg
cmc
idivb
sub
cmp
mov
sbb
sti
dec
dec
cmpsl
mov
sbbl
in
mov
int3
mov
add
mov
bound
ret
mov
dec
or
iret
mov
inc
mov
out
shl
mov
fiadds
pop
jno
out
inc
es
adc
cmp
dec
dec
in
popa
call
in
mov
fstpt
xor
sub
mov
sub
mov
js
cli
cmp
add
stos
jle
imul
inc
bound
or
testb
mov
fisttps
pop
jge
jbe
subb
lret
xor
test
mov
mov
sbb
sub
mov
add
sub
xchg
pop
imul
pop
adc
int3
loope
adc
pop
jns
movsb
lds
dec
mov
push
stos
cmc
inc
jno
jbe
pop
dec
xchg
add
xchg
lret
sti
sbb
pop
movsl
test
sbb
mov
movsb
fisubrl
movhps
lret
shll
sub
mov
inc
test
mov
pop
cmp
hlt
push
stos
ja
scas
rorb
call
jne
int3
mov
adc
in
mov
xchg
mov
fldt
movsb
sbb
lahf
mov
mov
shl
mov
sub
fsubrs
enter
das
xor
mov
dec
jmp
lods
xchg
adc
push
pop
and
push
pop
xor
stos
pop
sub
sub
sbbl
xchg
es
mov
orl
std
xchg
jmp
stos
jecxz
insb
ja
dec
ret
sub
les
mov
xor
lcall
jl
sub
cmc
popa
pushf
add
insl
mov
nop
and
and
add
lret
inc
ja
jl
push
mov
rolb
adc
andl
loop
daa
das
into
jecxz
daa
sub
out
add
cmpsl
movsb
cltd
lods
sbb
inc
addr16
cmc
imul
clc
sub
cli
sti
hlt
test
aam
xchg
or
fxch
xor
leave
and
xchg
das
dec
into
adc
lock
add
dec
mov
sbbl
imul
dec
push
je
dec
dec
mov
mov
loopne
pop
int3
stos
and
lea
sbb
xchg
int
jle
adc
adcb
jl
bound
inc
sbbl
mov
lea
leave
aad
shrb
mov
insl
mov
push
push
cmp
imulb
mov
jb
sub
lods
negl
push
mov
bnd
loopne
out
ljmp
push
jae
out
imul
in
sbb
into
icebp
mov
mov
fs
stc
lahf
in
in
sbb
mov
lcall
mov
movsl
fnstsw
cmpsl
xchg
ja
and
cld
cmp
add
mov
mov
sbb
xchg
sbb
sub
arpl
mov
out
ja
ds
push
sbb
sub
cld
xor
mov
sbb
mov
ds
inc
pop
ficoml
cmp
cli
aam
test
mov
sub
mov
test
loopne
scas
adcb
es
xor
enter
adc
sub
mov
shll
mov
xor
sbb
push
push
ffreep
jge
push
jmp
bound
adc
sub
lret
ljmp
push
mov
mov
enter
bound
sbb
mov
out
loop
mov
add
scas
xlat
push
sbb
cld
repnz
ja
push
lret
je
jns
and
outsl
push
outsb
cmc
stos
fwait
dec
mov
jl
add
xchg
sbb
sub
insb
ja
stc
and
pop
bound
sub
ja
jmp
ret
popf
mov
cmpl
sarl
jmp
and
jne
js
and
mov
fnstenv
mull
test
add
idivl
pushf
rcll
outsb
jae
lcall
out
imull
incb
sbb
movsb
sbb
ja
ds
clc
mov
xor
cwtl
jno
add
mov
test
rcrl
mov
and
bound
aaa
pushf
or
lods
jecxz
dec
das
adcb
pop
fcomps
sbb
mov
cmp
imul
sbb
push
aas
js
into
mov
mov
add
pop
sbb
xor
mov
nop
push
cmp
icebp
jl
dec
cmc
mov
mov
mov
lds
sub
out
sub
enter
iret
xchg
sub
sbb
push
jae
call
cmp
pop
fwait
sbb
sub
xchg
adc
test
dec
nop
sub
xor
pop
cmp
xor
inc
sub
xor
sub
fbstp
imul
iret
aad
loope
cwtl
testb
icebp
adc
cmp
addl
mov
jge
adc
into
cli
sbb
rcrb
insb
nop
repnz
dec
aam
lods
adc
cli
xchg
push
xchg
xlat
js
xchg
fists
or
cs
test
out
add
in
lds
pop
call
and
mov
icebp
fsubl
xchg
pop
fstpl
add
nop
fiaddl
mov
adc
xor
sub
jo
pop
mov
or
xor
rorl
sbb
or
out
mov
cmp
and
sub
iret
inc
insb
add
lods
mull
inc
jle
lock
add
shlb
rorl
int
test
inc
subl
scas
mov
xor
xor
jle
jbe
xchg
cmp
stc
and
outsb
pop
pop
cmp
sub
push
jno
bound
shrb
aaa
ret
fisubs
mov
adc
test
mov
xor
scas
shll
inc
jbe
imul
and
inc
lcall
lret
aaa
sbb
mov
xchg
pop
call
lcall
jo
out
imul
or
pop
adc
rcl
insl
or
nop
gs
cmp
or
insb
idivl
or
imull
xor
fmull
insl
cld
jge
mov
fistpl
xchg
mov
inc
insb
pop
push
ljmp
and
mov
xchg
out
push
iret
in
pusha
iret
stos
call
insb
jae
and
adc
fsubs
and
add
fnstcw
inc
xchg
and
ss
and
mov
pushf
outsl
fwait
pusha
out
inc
lea
sub
rclb
out
or
xorl
in
in
dec
aas
cmp
push
movsb
xchg
popf
sub
xor
dec
rcr
les
and
js
sti
sbb
push
sbb
out
mov
ret
popa
lods
adc
mov
std
lea
pop
cltd
pop
in
and
insl
sti
adc
mov
push
xor
sub
imull
add
mov
cld
ja
sub
js
lods
clc
xlat
pop
cmp
xchg
pop
lret
add
inc
xlat
jns
cmp
aam
mov
and
pop
jae
negb
addl
pusha
fiadds
enter
xchg
pop
push
sub
fldt
ret
cmp
mov
and
rcr
add
dec
push
testl
orb
pusha
xor
sbb
or
ja
sub
push
call
fdivs
and
shrl
adc
pop
pop
and
imul
addb
movsb
insl
adc
pop
jno
mov
arpl
ds
pop
or
mov
mov
xor
hlt
pop
sub
jmp
and
mov
lods
sbb
xlat
push
lret
inc
add
lahf
dec
pop
in
sarl
xchg
and
and
mov
mov
iret
jp
popw
and
andl
je
ljmp
dec
dec
mov
data16
stc
jl
mov
add
aaa
sub
xchg
and
ja
call
gs
sti
xchg
or
xchg
add
stos
pop
lret
adc
popl
nop
filds
into
test
sarb
cmp
mov
pop
popf
movsb
xor
test
mov
sbb
jg
cs
loope
sbb
aaa
pop
xchg
xor
pop
ja
push
cmp
cmp
cmpsb
sbb
mov
in
lods
mov
pushf
ljmp
sbb
icebp
jecxz
daa
clc
add
push
inc
push
sbb
mov
ljmp
shll
mov
sub
and
jns
cwtl
leave
sbbl
icebp
sbb
test
pop
ja
lret
idiv
cli
cmpsl
sbbb
int3
mov
lea
add
pusha
mov
mov
sbb
test
cmpsb
cmp
xor
inc
rcrb
pop
ret
scas
mov
clc
add
fistpll
pop
inc
sbb
das
push
ds
ljmp
xrelease
xchg
lds
mov
rolb
rcrl
inc
je
movsl
add
cmp
sbb
cmp
cmpsb
data16
inc
pop
fwait
sub
cmp
nop
sbb
or
daa
movl
sub
or
rcrl
mov
xor
pop
jp
push
cmpsl
pusha
push
aam
dec
bound
aam
mov
insb
dec
dec
adc
rclb
ds
cmp
out
dec
dec
addr16
shll
sub
push
push
clc
dec
cmp
in
jp
or
add
sub
push
ret
les
insl
fcmovnu
mov
or
lcall
ja
push
add
test
movsl
scas
fcompl
daa
xlat
mov
clc
pop
inc
mov
ds
ljmp
cs
jno
cmp
or
or
fwait
push
stc
mov
ljmp
jae
pop
cmp
hlt
nop
add
rcll
loopne
aas
leave
adc
ljmp
fwait
push
sbb
or
icebp
sahf
cltd
sub
mov
push
xor
jle
dec
sbb
out
push
es
jae
aad
popf
mov
xor
lret
mov
gs
adc
dec
lods
scas
push
xchg
decb
arpl
add
dec
adc
add
mov
dec
aam
inc
jbe
leave
pusha
jp
xor
push
sub
shll
adc
mov
pop
and
mov
jge,pn
pop
aas
ss
iret
and
fldt
fcomi
xor
jo
rcrb
jmp
test
push
cmpsb
sti
or
inc
aam
test
in
cs
dec
adc
cld
and
sub
mov
and
or
pop
enter
data16
ss
movsl
cld
test
lds
mov
dec
cs
mov
jmp
imul
jg
mov
ja
sbb
jns
inc
cmp
nop
cmpsl
das
cmpsl
cld
mov
mov
pop
mov
cld
cmp
sbb
lds
sti
jns
adc
push
lock
mov
sbb
add
rclb
dec
jns
push
hlt
nop
adc
pop
and
imul
arpl
bound
mov
xlat
mov
aas
cmp
cltd
cwtl
sti
test
lahf
mov
xlat
xchg
cld
fstps
fstps
inc
push
out
mov
dec
fisttpl
cmp
ljmp
ret
push
inc
dec
jbe
sub
or
mov
sahf
test
mov
jo
icebp
or
imul
test
push
fdivrp
add
lock
mov
sti
imul
orl
jne
roll
fdiv
pop
jge
shlb
int3
or
mov
cli
push
les
cmp
sub
push
out
mov
mov
out
push
add
xor
shrl
dec
arpl
push
jl
xchg
pop
std
sub
lock
or
shrl
xor
pushl
jne
push
lods
pop
jae
mov
repz
jnp
mov
cmp
cwtl
mov
xor
mov
xor
add
inc
loope
outsb
mov
gs
fs
xor
pop
fstps
ds
movsb
sarl
pop
inc
and
push
aam
shrl
insb
push
jg
xor
cmp
adc
rclb
or
outsl
pop
inc
jmp
cmpsl
sbb
inc
arpl
iret
xor
fs
jnp
stos
cltd
nop
jl
xor
enter
scas
hlt
sbb
pop
in
pop
xchg
jne
int
push
mov
cmpsb
into
inc
outsl
mov
add
jp
lods
sub
adc
jae
loopne
test
xlat
adc
jae
mov
mov
in
lods
or
and
pop
mov
or
movl
cld
lods
cmpsb
jle
loop
rcl
xchg
jb
xlat
push
in
icebp
or
pop
dec
jg
pop
pushf
xor
shlb
jp
lock
sbb
or
bound
cwtl
imul
push
dec
xor
sar
or
pop
mov
fsubp
hlt
add
jg
popa
pusha
aad
xor
dec
cwtl
sbb
lods
das
pop
subl
jp
out
and
xor
pop
call
jl
xchg
fidivs
push
mov
jo
push
in
int3
sub
jg
stos
add
pop
outsb
rcr
ljmp
xor
xorb
outsl
xor
dec
dec
mov
push
inc
or
loop
movsl
daa
in
inc
cmpsb
add
fstl
aam
mov
stos
sbb
repnz
pop
pop
enter
shrl
mov
xchg
push
inc
mov
pop
inc
les
in
adc
pop
or
pop
ss
mov
xchg
sub
data16
mov
aaa
fldt
jb
shrb
daa
aaa
or
out
imul
dec
loopne
jge
mov
insl
ret
rclb
lahf
aaa
add
jg
adc
mov
vpshad
mov
add
cmp
ljmp
mov
shrb
cld
cmpsb
xchg
orb
xor
mov
push
mov
jge
mov
cmp
stc
jbe
aam
jb
xchg
test
add
lea
push
int
mov
pop
insl
dec
cltd
pop
lds
add
addr16
mov
cwtl
pop
mov
ret
xlat
insb
adc
lret
sbbl
test
fsubrl
mov
push
insl
in
mov
xchg
push
mov
and
adc
testb
aam
and
mov
inc
shrb
cwtl
repz
jb
cmp
cwtl
out
loop
frstor
stos
into
mov
ret
push
sbb
mov
cmpsb
mov
testl
dec
jecxz
cli
xchg
pop
mov
fistpll
addr16
lahf
loop
fcomps
leave
mov
andl
aaa
scas
cwtl
in
imul
out
sub
adc
xor
incb
int3
adc
cld
dec
mov
lds
fisttps
or
xor
rol
cmc
aas
xor
out
andb
loop
out
mov
scas
dec
out
adc
xchg
or
inc
fstps
cmpsl
in
or
xchg
in
push
les
popf
pushf
jecxz
mov
push
push
xor
rorl
push
sti
pop
aam
sub
sti
adc
xchg
repz
adc
aaa
xor
jecxz
icebp
mov
dec
stos
ficoml
and
sbb
or
push
call
lods
in
lods
sti
test
cli
mov
test
es
push
leave
mov
mov
mov
cmovae
fdivrl
mov
lcall
push
test
int3
mov
test
add
dec
inc
popf
cwtl
out
inc
jno
push
out
aam
cmp
das
lods
or
addr16
lret
dec
loop
sbb
inc
and
addb
sbb
mov
js
push
lods
fcompl
jbe
pop
ss
xchg
addr16
cmp
cmc
fidivrs
cmp
fidivrs
movsl
repnz
lcall
cmp
sti
pushf
clc
add
or
mov
add
mov
jns
jmp
push
and
mov
hlt
mov
adc
mov
ss
imul
and
imul
add
cmp
sti
insb
dec
cmc
mov
mov
sub
inc
cltd
sbb
shll
dec
fdivr
leave
fbstp
add
imul
xchg
push
push
aad
ljmp
ds
fists
pop
xchg
lcall
mov
sbb
pop
add
adc
sbb
cltd
add
int3
xchg
aam
pop
or
cmp
inc
fbstp
dec
negb
mov
lea
rcrl
aas
mov
sub
sub
and
mov
cmc
inc
mov
ja
outsb
inc
aas
add
sub
xorb
or
xor
dec
push
xchg
add
jne
decb
fcoms
sub
loope
sub
fwait
movsl
sub
aas
pop
imul
cmp
adc
sbb
mov
les
jmp
pop
shlb
mov
cmp
enter
repz
jae
ja
lods
xchg
jnp
inc
pop
aas
xor
int3
cli
rcll
nop
sbbl
inc
popf
jge
xchg
jl
adc
int3
stos
out
pop
push
cmc
and
jb
dec
daa
add
pop
jle
repnz
push
push
cmp
fidivrs
leave
je
xchg
test
mov
rcrl
js
adc
push
mov
or
lods
xchg
add
popf
imul
mov
mov
pop
jl
lahf
mov
jno
mov
aad
jne
dec
pushf
outsb
stos
inc
in
cli
test
cs
xchg
aam
loop
sub
sahf
mov
pop
scas
lahf
xchg
dec
test
xchg
daa
out
push
js
scas
mov
mov
fistps
fisubs
jae
or
cmp
jno
and
jne
jo
mov
pop
xchg
ja
cmc
add
and
fidivl
add
pop
lea
lock
into
dec
xor
mov
jmp
add
divl
mov
sar
push
mov
scas
mov
xor
outsl
nop
push
mov
lods
dec
sbb
mov
push
and
outsb
dec
jb
mov
xchg
xor
xchg
push
aaa
inc
dec
stc
mov
push
mov
adc
shlb
cwtl
stos
jle
or
and
fldenv
xchg
and
in
and
mov
push
cwtl
mov
pop
aaa
xor
cli
out
dec
lea
pop
sub
and
mov
and
cmpsb
or
jbe
lods
cltd
lret
push
jmp
jle
int
pop
adc
adc
fnsave
and
mov
pop
or
jg
sub
add
xorb
adcl
stos
pushf
lock
cld
dec
lcall
int3
mov
mov
xor
adc
jge
push
mov
push
push
imul
push
jae
rclb
or
mov
add
push
dec
rorl
pop
arpl
nop
push
gs
testl
ret
xor
pop
sti
fs
stc
stos
or
pop
les
jae
int3
mov
adc
cwtl
or
inc
sbb
mov
mov
decl
pop
xor
in
xchg
mov
push
bound
in
aas
pop
sbb
pop
sbb
es
lods
outsl
and
mov
sub
pop
push
xchg
movl
add
sub
inc
shll
push
mov
mov
mov
int
aam
movl
dec
mov
int3
and
in
push
incb
or
mov
add
ffree
outsl
sti
jne
leave
push
push
nop
cmp
daa
dec
cmpsb
movaps
mov
roll
incb
sub
fnstsw
lods
mov
xor
ja
ds
jno
fcmovne
jge
stos
ret
ret
movl
mov
in
loopne
enter
and
fbstp
pop
push
add
repz
daa
addr16
push
fcomps
jo
jbe
inc
xor
jns
inc
jnp
lods
fisubrs
test
cwtl
int
inc
insb
and
lods
out
and
dec
adc
xchg
mov
mov
xor
fsubp
jno
add
sub
orl
pop
mov
pop
add
ds
insb
in
addb
dec
or
xor
es
mov
push
imul
sbbl
or
sub
fsubs
leave
cmpsl
xchg
mov
adc
dec
pop
inc
bound
fstpl
incb
hlt
fucomip
daa
ss
pop
jo
test
lahf
inc
imul
mov
sub
jl
je
xor
sbb
pmulhw
fnsave
sti
jge
dec
and
cwtl
stc
sbb
in
mov
mov
sbb
jns
pop
fadd
fnstsw
adc
repz
sub
aad
jecxz
inc
insb
out
lahf
mov
lret
add
add
aad
mov
pop
cmpsl
cmp
gs
aas
inc
dec
xchg
add
mov
push
mov
jnp
push
loopne
out
fcoml
jne
clc
push
xchg
jecxz
fdivrs
lods
pusha
sub
xchg
push
lret
push
in
cmc
jns
mov
or
shrl
lret
call
in
lret
movsl
rcrl
mov
push
inc
adc
xor
dec
cmp
rorl
add
push
and
in
mov
out
dec
sub
xlat
mov
cmp
les
add
cmc
movsl
sub
mov
fcomps
es
jmp
rolb
fildl
test
stc
addr16
jge
sub
sub
adc
inc
js
data16
fmul
repz
leave
int3
in
int3
dec
imul
lret
push
push
imul
or
push
mov
pop
push
repnz
add
lds
inc
incl
lcall
or
jb
int3
sbb
mov
jbe
call
pop
xchg
int
in
cmc
pop
push
add
push
gs
fdivrs
and
fbstp
fidivl
inc
int3
clc
popf
daa
pop
mov
lods
or
pop
lods
call
sub
cmp
ficoms
bnd
jae
cmp
mov
adc
mov
xchg
fwait
cwtl
cwtl
imul
cmc
test
xor
and
jo
mov
push
cmc
push
ljmp
hlt
inc
into
push
jae
stos
inc
or
jo
je
addr16
cmc
paddusw
jg
inc
xor
imul
and
adc
addr16
sbb
test
xchg
pop
mov
inc
aas
test
push
fs
add
loop
aas
push
fcomps
xchg
fstl
cwtl
adc
lock
sub
pop
mov
cmp
idivl
inc
insb
push
mov
adc
mov
mov
hlt
adc
pushf
sub
ja
jp
lods
dec
mov
mov
dec
mov
popa
enter
jb
xor
aad
dec
scas
xchg
and
push
mov
in
cld
loopne
lock
call
mov
pop
mov
jecxz
mov
pop
xchg
inc
xor
fwait
sahf
xchg
int3
sub
mov
sbb
fisttpl
sbb
shrb
sbb
xor
es
jbe
sub
je
xor
sub
sub
imul
lahf
repz
jge
inc
mov
imul
fimuls
lock
jnp
lock
dec
xchg
dec
adcl
movsb
xchg
jge
cmpl
cltd
add
xorl
xchg
adc
jns
xor
mov
cmp
xchg
inc
xchg
stos
xchg
fidivrl
push
dec
push
loope
jmp
insl
loopne
push
pop
pop
sub
push
xor
ds
lcall
ja
xchg
jns
outsl
push
test
jbe
pop
sbb
mov
in
aas
scas
and
mov
popf
dec
mov
pushf
sbb
rol
or
aad
pushl
mov
push
add
and
xor
hlt
aam
pushf
mov
or
xchg
mov
lods
jp
syscall
lret
icebp
cmp
inc
add
jno
fisubs
rcrb
cmp
push
xchg
xchg
pop
mov
in
dec
mov
stc
cltd
pop
push
cmp
xor
js
mov
insb
scas
loop
bound
inc
loopne
imul
or
adc
dec
jbe
dec
pop
in
clc
sbb
xor
push
pop
jmp
sbb
lret
ret
pushl
fstp
ds
xchg
out
ss
sbb
adc
movsl
sbb
inc
jbe
test
les
cmp
mov
rclb
cli
xor
lds
dec
popf
je,pn
sbb
jmp
in
push
fisubrs
mov
mov
push
daa
or
mov
push
mov
cmpl
jbe
xor
daa
incb
sub
lar
pushf
les
mov
or
pop
or
sbb
sahf
sarb
orl
mov
push
mov
ja
lret
fs
addr16
popa
mov
out
outsb
jns
enter
in
test
cmp
imul
movl
push
xor
jl
test
and
dec
daa
popa
push
xor
jbe
xor
aas
enter
pop
adc
orl
dec
push
jo
mov
hlt
push
dec
jl
xchg
inc
inc
sub
and
jbe
adcb
adc
popf
repz
and
fisttpl
rolb
inc
cmpsl
fdiv
and
mov
rcrb
imul
mov
sbb
fdivs
mov
cmp
mov
add
mov
stos
aas
icebp
adc
mov
xrstor
inc
clc
push
xchg
shrl
jp
outsl
aad
sbb
lods
jmp
jno
outsl
or
sub
add
in
pop
jl
and
add
imul
jge
int3
les
test
jns
dec
cmc
add
jnp
pop
scas
pop
loop
das
rcrl
mov
cmpsl
adc
jne
jbe
mov
loopne
call
jmp
enter
adc
js
inc
inc
mov
iret
loopne
push
mov
cmp
aam
mov
jae
lock
jmp
jmp
xchg
test
data16
mov
adc
nop
jmp
mov
dec
sub
shlb
into
pop
add
inc
inc
jge
add
pop
shll
mov
psrlq
lret
or
cmp
sub
scas
sub
shll
in
inc
and
in
enter
push
bound
fmuls
jp
xchg
cmpsb
adc
ljmp
xor
jb
movsb
leave
sbbb
in
mov
xchg
cwtl
test
mov
jp
pop
fucomip
inc
push
pop
mov
mov
divl
leave
push
jle
cmpsl
rolb
div
dec
fwait
shlb
daa
outsl
sbb
sbb
sub
jmp
or
int
gs
mov
insl
rclb
add
sub
sub
adc
ds
mov
jno
inc
inc
jb
mov
xchg
dec
scas
mov
mov
mov
mov
cmp
out
movsl
mov
in
push
pop
shll
sarl
xchg
andb
mov
lret
xor
mov
xchg
and
insb
cltd
fisubrs
jb
test
scas
mov
mov
or
aam
push
es
jmp
out
out
lret
cmpb
add
xlat
sbb
pop
mov
lods
icebp
scas
cli
lcall
out
cmp
lcall
cmp
sarl
mov
cmpb
or
push
test
hlt
sti
std
aas
cmpsl
mov
push
sti
popa
or
insl
add
xchg
or
adc
and
lret
xor
lods
fldt
mov
mov
sti
pop
stc
jg
jge
dec
xchg
scas
dec
add
test
shld
inc
xchg
sub
pop
pop
lods
add
push
inc
std
jns
es
cmp
jge
fimuls
lea
test
mov
testb
stos
fucomi
xchg
xorb
adc
insl
mov
test
sub
mov
cmp
add
cwtl
add
aam
aas
cwtl
jno
adc
aaa
jbe
adc
mov
fidivs
cmp
or
mov
pop
inc
stos
push
orb
repnz
fstpt
seto
jno
mov
cmpsb
mov
addl
js
sbb
rolb
lods
es
push
ss
clc
icebp
ljmp
push
inc
rclb
shlb
cli
jmp
pop
mov
xor
ss
xchg
sub
movl
dec
jmp
xor
jecxz
sahf
sarb
jg
ret
stc
aas
fwait
int
cmpsb
jns
sub
add
jns
adc
pop
sti
xchg
cltd
sub
cmpsl
daa
imul
fisttpl
sbb
jnp
icebp
push
mov
inc
xchg
add
lock
push
call
sahf
mov
and
btr
push
adc
lret
stos
popa
xor
inc
mov
ss
leave
rep
and
dec
lea
frstor
repz
fsub
pop
mov
xor
jle
add
pop
dec
aam
into
jnp
xor
inc
pop
pop
loopne
xchg
icebp
test
pop
push
rep
test
ljmp
xor
sub
dec
pop
lret
fimull
popa
push
in
dec
ret
mov
jne
xor
cmc
cmpsb
cld
cwtl
inc
push
repnz
jmp
xor
ss
jb
xchg
cmp
leave
jns
sbb
subb
data16
mov
ret
push
xchg
mov
pusha
cmp
out
xchg
sub
jecxz
xchg
loop
nop
je
stos
es
imul
xlat
cld
in
daa
aaa
pop
in
push
push
clc
and
and
pop
mov
and
icebp
mov
lods
in
ljmp
xchg
jmp
gs
mov
scas
jle
andl
or
mov
fwait
repnz
cli
add
add
ficompl
out
mov
insl
mov
imul
les
mov
daa
sbb
mov
lods
and
std
mov
and
pop
lds
xor
shr
add
aam
out
mov
xor
jne
xchg
push
sub
sbb
stos
pop
frstor
cmpsb
or
loopne
and
outsb
mov
sub
sbb
bound
mov
std
fidivs
insb
jl
in
std
mov
or
fs
mov
ja
testl
inc
inc
in
inc
sub
fwait
adc
add
ljmp
mov
addr16
imul
mov
in
loopne
xor
test
push
mov
inc
shll
outsl
enter
push
lock
push
lret
and
mov
in
call
mov
adc
into
jmp
adc
sbb
outsl
adc
ror
xchg
add
sbb
stc
lods
or
rclb
rcll
mov
lea
outsl
xor
jb
sarb
mov
lods
jmp
inc
mov
aas
cmp
test
push
jnp
jle
loopne
jmp
add
movsb
jns
rclb
push
dec
or
mov
adc
lcall
sub
add
pop
adc
fldcw
pushf
cmc
jecxz
sti
int
dec
inc
push
arpl
shll
mov
lea
jae
shl
repz
xor
repz
std
cwtl
stc
mov
jb
fldenv
fisubl
lret
jno
xchg
pop
jnp
loop
js
fnsave
dec
aam
out
inc
mov
call
pop
inc
jg
lock
cmc
inc
test
xchg
nop
cmpsb
enter
xchg
nopl
add
subb
cmpsb
sbb
aas
jae
xlat
mov
cld
jge
and
dec
repnz
dec
cmc
aas
pop
jno
xchg
sbb
call
imul
push
xchg
lods
sbb
jns
sbb
jnp
inc
lds
movsb
pushf
lods
insb
loopne
insb
cmp
jge
sub
cmp
push
lahf
call
mov
bound
jmp
fadds
movsb
movb
mov
mov
adc
mov
cmc
idivb
jb
stc
xchg
xor
lock
imul
adc
ret
cltd
movsb
loope
xchg
dec
jmp
mov
nop
outsb
popa
mov
and
or
xchg
loopne
je
notb
ret
push
imul
fldt
fiaddl
fwait
fwait
gs
xchg
mov
push
adcb
inc
cmpsl
stos
arpl
rcrb
and
in
jae
cmp
nop
movl
mov
adc
or
push
bnd
push
inc
lahf
sahf
pop
out
dec
pop
imul
aad
mulb
popa
jge
mov
sub
in
dec
inc
cmp
outsl
lahf
pusha
jns,pn
mov
push
fwait
pushw
cwtl
out
and
test
xor
jecxz
push
clc
adc
cmp
out
loopne
mov
xlat
mov
notl
clc
xchg
popf
and
dec
jb
mov
dec
adc
inc
aaa
dec
mov
rcl
je
orl
fmuls
and
or
or
loop
cmp
sub
push
les
std
cli
fwait
xor
xor
aas
mov
repnz
xor
je
out
in
lock
fldt
xchg
subl
sub
jmp
cmpsb
xor
push
popf
mov
scas
dec
jp
test
or
jmp
int
mov
jl
lock
push
add
jg
mov
roll
ret
imul
cmp
xchg
and
cmp
cs
mov
or
dec
out
mov
and
mov
repnz
sub
loope
xchg
outsl
jae
xchg
jecxz
outsl
inc
xor
push
jp
shl
mov
xchg
sbbb
push
in
repz
fistl
ffree
fldl
mov
into
stos
push
leave
dec
js
mov
pop
leave
sbb
cli
mov
int
stos
xor
add
dec
and
and
repz
insb
into
icebp
jno
jg
mov
mov
inc
loopne
xchg
adc
and
xlat
call
mov
sbb
mov
pop
push
mov
fisubrs
mov
insb
inc
cltd
fisttps
sub
xlat
stos
ljmp
inc
push
xchg
add
call
aas
insl
in
sbb
es
and
or
fsubrs
push
into
es
rcll
mov
mov
in
pop
sar
sub
mov
xor
sub
es
sarb
and
lahf
jbe
cs
mov
or
dec
xchg
jb
sub
testl
cmp
mov
xchg
into
dec
jg
inc
outsl
sbb
int3
mov
adc
cld
sub
push
lods
add
dec
mov
fdivr
xchg
push
lea
stc
add
push
pop
repnz
in
popf
sub
adcl
sub
cmp
push
xchg
inc
mov
bound
or
jnp
loop
push
add
repnz
or
jb
out
jp
addb
sub
pusha
pop
mov
mov
xchg
xorl
jae
sbb
push
aaa
sub
mov
call
jae
mov
test
pop
jae
add
or
push
pop
cli
mov
nop
mov
outsl
or
lods
adc
cmp
xchg
and
clc
pop
bnd
cmpl
cmc
stos
push
pushf
ficoml
cwtl
std
shlb
jmp
out
ds
pop
sti
cmp
sub
nop
icebp
dec
or
mov
loopnew
mov
add
clc
pushf
lcall
or
jbe
mov
std
pusha
adc
mov
xor
cmp
aaa
lock
push
mov
xchg
cwtl
pop
mov
jmp
dec
movsb
add
insl
and
ss
daa
cmp
push
loopne
std
or
fwait
mov
xor
push
pop
idivl
inc
push
sub
cmpsb
mov
sbb
push
lahf
sbb
jp
data16
mov
inc
leave
imulb
mov
push
mov
hlt
inc
add
add
mov
ss
push
ds
addr16
pop
out
mov
cmc
pop
xchg
outsl
mov
cmp
cmp
pop
testb
dec
add
inc
cmp
push
pop
add
and
inc
push
gs
jmp
lea
sbb
push
ljmp
or
arpl
add
push
test
mov
pop
inc
or
xor
aas
mov
das
push
lcall
popa
or
jae
sbbb
pop
insl
mov
imul
sbb
in
mov
sub
mov
mov
clc
pusha
xchg
xchg
or
ficoms
mov
cltd
xor
xchg
sahf
pop
orl
sbb
mov
incl
pop
mov
pop
dec
sub
sbb
out
ficompl
mov
inc
xlat
push
mov
inc
test
pop
jge
and
mov
movb
cmc
in
mov
adc
dec
orl
inc
add
or
daa
jmp
addr16
inc
and
ficoms
fisttpll
fldenv
mov
pop
lds
sub
les
jmp
xchg
testb
ret
flds
fmull
and
rcl
push
ret
lcall
jecxz
in
scas
enter
cld
stos
les
pop
lock
orb
imul
push
push
arpl
add
push
repz
test
cwtl
mov
decl
add
pop
xchg
inc
outsl
xchg
pop
mov
dec
std
outsb
clc
jns
std
mov
repnz
or
push
mov
pusha
xchg
lcall
pop
and
mov
or
adc
mov
adc
mov
jnp
fists
mov
jbe
cmp
jle
mov
xor
mov
mov
and
in
iret
cmp
int3
test
cmp
pop
xchg
dec
jmp
repnz
sub
into
les
and
push
jnp
mov
xorb
mov
dec
ret
inc
sbb
int3
xchg
push
or
pop
cltd
xchg
jge
adc
inc
cwtl
nop
inc
sub
xor
jmp
daa
les
ja
shrb
adc
andb
or
clc
fidivrl
mov
push
push
or
in
repnz
pushf
movsb
imul
es
shlb
push
and
scas
loopne
aam
mov
clc
cmp
push
bswap
pop
or
shlb
mov
loopne
js
push
lods
testl
xor
fldl
fwait
push
push
cmpb
scas
leave
xchg
cs
bound
lahf
or
call
clc
xchg
dec
adc
mov
jns
xchg
shll
jns
popf
lcall
fidivs
das
lods
icebp
insb
imul
xor
shrl
inc
mov
jnp
add
clc
jae
sbb
push
in
jnp
lock
jbe
popa
mov
outsb
add
lods
mov
std
mov
popf
lds
sbb
jmp
nop
dec
daa
je
xchg
push
jecxz
lret
sbb
adc
dec
cmpsl
lds
fdivrs
lcall
sub
mov
rol
pop
xorb
pop
cmpsb
mov
insl
movsb
push
mov
xor
mov
push
add
cmp
test
sub
lahf
mov
cmp
insb
sub
das
jecxz
push
insb
mov
mov
push
rclb
cmpsl
fsubp
adc
add
mov
push
or
dec
dec
and
out
nop
fs
jle
xchg
xor
sub
pop
ret
out
lds
xor
adc
shl
cmp
repz
sub
pop
mov
es
enter
lcall
es
ret
ljmp
mov
repz
sti
and
or
lahf
xchg
xor
rcrb
lahf
cli
pop
ret
and
adc
mov
push
cwtl
leave
sarl
mov
psraw
repz
cmpsb
ret
ss
ret
push
dec
repnz
jmp
push
movsb
call
and
sarl
xchg
mov
dec
in
sbb
sahf
mov
pusha
xchg
inc
enter
xor
icebp
sar
sub
stos
in
xchg
add
jnp
stos
nop
sbb
or
jle
imul
aaa
addb
aam
popf
sti
cld
test
loop
fs
and
dec
jne
call
lock
mov
xchg
loop
dec
xlat
popl
adc
aas
xor
mov
imul
mov
push
popa
bound
push
mov
iret
inc
repnz
xor
add
rolb
inc
jnp
lea
popa
xor
pop
sti
sub
adc
xorb
xchg
ficomps
clc
clc
jl
pop
aas
movsl
inc
mov
cltd
lock
sbb
sub
push
in
lret
mov
rcrb
push
fidivs
je
lock
push
sub
and
inc
or
das
pop
pop
mov
fsts
sahf
or
push
popf
lcall
adc
sub
into
ret
ret
sti
fs
test
pop
decl
inc
out
dec
cmp
out
movl
mov
arpl
and
sbb
outsb
popf
into
es
cmpsb
cli
dec
stos
hlt
js
mov
gs
je
cmpsb
pop
fsub
push
pop
lahf
in
dec
imul
cmpsl
pop
lcall
jmp
pop
jecxz
pop
or
sahf
mov
jae
add
jl
pop
sub
push
pop
int
cmp
lret
dec
mov
rcll
mov
and
push
mov
inc
add
int3
ja
push
rorb
mov
mov
inc
jae
cmpsl
pop
push
aaa
fxch
and
sub
rorb
daa
outsl
push
push
stos
jp
xchg
pop
fsub
hlt
mov
jge
icebp
pop
add
out
jle
movsb
xor
gs
sub
dec
xchg
push
or
cmpsl
stos
mov
roll
jbe
sbb
aam
pop
push
pusha
push
add
push
xchg
cli
adc
test
out
pop
lret
jl
xor
aas
int
js
inc
mov
mov
test
enter
sar
addb
push
inc
pop
es
adc
mov
push
add
ffreep
scas
lcall
inc
jp
ds
adc
fiadds
jp
xlat
ret
in
xchg
xchg
jl
enter
test
cmp
movsl
adc
and
mov
out
mov
mov
insl
mov
cmp
jns
push
fistpll
and
in
ficoms
add
pop
movsl
fstps
mov
inc
pop
and
lods
cmc
mov
push
mov
arpl
xor
sub
add
push
lea
adc
cmp
xchg
shl
in
dec
mov
push
sbb
pop
or
pop
in
lcall
ret
pop
imul
push
loope
adc
arpl
int
mov
sbb
xchg
loope
adcb
lret
push
cmp
xlat
adc
fwait
mov
pushf
mov
xlat
cmc
std
pop
arpl
dec
daa
sub
imul
das
mov
and
adc
pop
xor
mov
fldl
adc
ds
push
fincstp
sbb
adc
pop
push
call
aam
lcall
jne
jae
jl
sbbl
mov
fisttps
mov
call
fsts
add
mov
jl
push
sti
pop
push
and
fiadds
adc
adc
mov
sbb
movsl
icebp
in
xor
xor
xor
orb
mov
out
pop
mov
lods
mov
adc
imul
mov
xchg
aad
xchg
cmp
enter
movsl
pop
adc
jne
push
cmp
je
lahf
xor
popa
inc
leave
icebp
test
sub
pop
cwtl
xchg
test
mov
and
fsubr
cmp
insl
rclb
and
push
test
adc
adcl
push
clc
jle
shlb
insl
xor
adc
push
in
repnz
sbb
mov
xchg
enter
xor
inc
lret
sar
mov
call
xor
dec
sub
out
shll
shrb
pushf
insb
sbb
test
ret
dec
cmpsb
movsl
mov
mov
rcrl
inc
pop
mov
lret
cld
mov
xchg
add
enter
pop
movsb
out
pop
mov
scas
and
add
imul
or
mov
imul
push
add
aam
jno
inc
dec
lcall
imull
cmpsl
cmc
or
rcrb
enter
inc
test
sbb
pop
cmp
repnz
xchg
pop
and
imul
lods
outsl
jno
mov
adc
in
cmp
shlb
iret
lret
divb
adc
sbb
or
mov
and
insl
out
mov
fmuls
jae
mov
sub
xchg
cmp
push
lock
cs
scas
push
xor
gs
adc
dec
cmp
cs
outsb
push
js
jne
xor
mov
push
mov
sbb
add
mov
mov
hlt
push
leave
and
mov
dec
or
mov
sbb
nop
jl
sub
mov
dec
andl
ja
dec
in
xorb
xchg
bound
mov
adcl
mov
jecxz
inc
xchg
mov
outsl
mov
sbbb
add
je
cwtl
dec
stos
cmp
lret
and
xorl
aam
iret
sub
loopne
int
stos
push
fucomp
jne
mov
jbe
jle
jp
dec
mov
in
rclb
popf
shl
xchg
mov
push
sub
sub
cmp
cmpsb
inc
jne
fldl
and
cmp
loope
mov
pop
arpl
insb
lods
or
jle
mov
cwtl
mov
mov
test
sub
dec
cs
lea
mov
sub
mov
inc
pop
lret
ds
test
int
add
sub
addb
xor
push
movsb
xor
fcmovnu
test
sarl
into
adc
or
inc
jge
popa
and
push
xchg
push
mov
cmp
adc
leave
ds
mov
mov
sub
xor
xor
sub
push
jge
and
in
nop
in
repnz
mov
push
adc
out
xchg
jecxz
and
pop
or
inc
call
int3
cmp
cmpb
and
mov
push
loopne,pt
add
sub
sub
out
out
leave
dec
inc
jnp
or
mov
jge
inc
mov
dec
adcb
add
outsl
mov
or
sbb
scas
add
test
sbb
decl
add
adc
jmp
js
pop
cmp
dec
cld
jp
aas
mov
and
fs
mov
loopne
sub
pop
fbstp
jae
adc
adc
mov
sahf
cs
adc
in
in
sub
jecxz
int3
data16
test
and
loopne
xlat
sbb
test
pop
mov
stos
insb
pusha
std
lret
dec
js
clc
sub
adc
hlt
pop
push
pop
or
lcall
add
test
aaa
pop
int3
and
or
in
mov
mov
mov
in
lea
pop
mov
movsl
sbb
sti
add
xchg
push
dec
ret
dec
push
in
jle
jne
daa
or
sbb
jbe
lcall
outsb
int3
lret
mov
shl
inc
fisttpl
movsl
int3
inc
adc
jl
popa
adc
and
and
jmp
jg
push
insb
cmp
add
dec
ljmp
test
jl
dec
daa
push
repnz
or
insb
add
fcmovnbe
mov
sahf
dec
scas
lea
push
dec
mov
and
cmpsb
cmp
and
ds
xor
mov
mov
mov
xor
mov
scas
push
sub
and
cmp
stc
addr16
and
inc
dec
call
das
fcomip
adc
arpl
add
outsl
lcall
aam
add
add
sahf
mov
rcrb
imull
sub
and
sbb
inc
mov
loopne
sbb
add
inc
call
cmc
cmp
in
test
je
cmpsl
cmp
shl
mov
inc
cmp
or
scas
sbb
fstpt
inc
xor
adc
jno
lahf
mov
call
aas
scas
xchg
mov
and
pop
mov
jb
sbb
stc
add
xchg
inc
arpl
jo
stos
push
scas
mov
out
jno
sbb
cmpsb
mov
mov
mov
dec
ds
inc
or
mov
adcl
mov
or
jnp
fstp
lock
fiaddl
xlat
sub
mov
leave
adcl
pushf
xchg
stos
clc
call
lods
mov
lcall
add
push
test
dec
pop
xchg
add
faddl
and
mov
sbb
add
adc
leave
popf
dec
enter
ljmp
gs
or
sub
rol
push
jp
xchg
pusha
jle
test
sub
int3
imul
add
mov
xor
scas
jae
js
jecxz
test
jo
js
mov
xchg
notb
sahf
sub
rolb
pop
nop
mov
jmp
popa
or
sbb
mov
mov
adc
and
add
push
repz
arpl
cld
jb
sub
test
pop
shlb
cltd
mov
xchg
loopne
add
adc
pop
andb
sti
and
push
out
mov
rcrb
in
cld
sub
xchg
fstl
cmpsl
cs
sbb
inc
jp
add
sub
fadds
notb
sbb
hlt
fildll
dec
mov
popf
cvtps2pd
stos
pop
push
cmc
js
mov
int
adc
loope
sub
dec
sub
pop
arpl
fistpl
pop
xor
adc
push
inc
pusha
lcall
xlat
mov
mov
inc
jmp
add
sbb
fildl
pop
jg
loopne
pop
xchg
xchg
xchg
adc
xor
or
inc
popa
jmp
into
sti
mov
mov
aad
hlt
out
shll
sub
sub
or
jno
mov
sbb
push
pop
stos
mov
and
xor
xchg
movsl
movsw
or
fs
inc
lahf
and
inc
mov
xchg
and
in
xchg
ret
pushf
cld
cmpsl
inc
mov
mov
xchg
xchg
div
pop
xor
mov
jo
inc
imull
dec
aam
xchg
aas
dec
fucomp
inc
rcrb
mov
mov
xorb
push
shll
push
push
sbb
fcompl
xlat
xor
push
in
negb
adcl
mov
dec
scas
in
add
and
addl
inc
add
push
cwtl
mov
xchg
outsl
mov
adc
lods
mov
xchg
rclb
sahf
mov
push
ljmp
inc
shl
fcomps
sub
roll
stos
stc
je
leave
scas
mov
jno
adc
add
cmovns
ret
int3
mov
jge
jmp
dec
pop
fcompl
fwait
add
add
inc
jae
mov
in
ja
fs
jne
xchg
or
lods
repz
outsb
out
lcall
pop
movsl
jecxz
es
inc
inc
stos
dec
fcomps
fstps
mov
lret
mov
icebp
xchg
fcomp
stos
daa
cmp
lods
sbb
ficompl
or
cmpsb
cld
jmp
sbbl
push
mov
inc
vphaddudq
lds
sahf
xlat
pop
pop
scas
sub
or
lret
les
repnz
xor
repz
jp
xchg
push
hlt
or
inc
int3
data16
push
hlt
xchg
icebp
imul
lds
sti
sub
cmpsb
jns
mov
mov
enter
repz
shlb
inc
fucomi
cmpsb
mov
dec
xor
pop
test
mov
test
xchg
mov
in
xchg
lods
cmpsb
int3
arpl
int3
push
movsb
je
fwait
test
nop
push
negb
inc
inc
and
adc
js
add
push
in
mov
test
mov
xor
add
sbb
jp
and
repz
shlb
xchg
stos
sub
ljmp
mov
xor
push
bound
aam
and
mov
pop
inc
mov
xchg
insl
sbb
sbb
les
inc
mov
xchg
in
mov
dec
mov
movsw
xor
rcrl
cmp
jae
inc
sti
xchg
pop
adc
iret
popa
xchg
jne
add
adc
mov
mov
push
mov
jg
cmp
int3
or
subl
psllq
mov
jae
hlt
push
jne
lret
test
mov
mov
je
pop
out
lahf
imul
xor
adc
inc
in
mov
call
loope
out
xchg
pop
repz
mov
jle
popf
ja
ljmp
pop
dec
jbe
inc
and
inc
addb
sub
in
mov
jg
inc
push
fs
shrl
push
test
mov
dec
shll
sbb
loopne
pop
shl
rcrl
scas
cmp
cmpsl
in
mov
xorl
xchg
movhps
mov
push
and
out
test
sub
rorb
mov
movsb
aaa
jecxz
mov
adc
xor
aas
jnp
out
mov
clc
or
or
pop
mov
je
out
leave
mov
sarl
stos
and
movsl
popa
test
jbe
nop
data16
and
je
push
pop
add
movsl
cmp
mov
mull
daa
jae
xchg
bswap
mov
out
adc
push
dec
into
or
test
pop
push
push
pop
es
stos
xchg
loop
dec
inc
sub
or
pop
pop
sub
sub
or
sbb
sbb
adc
mov
push
adc
addr16
bound
js
mov
mov
xchg
data16
testl
fiaddl
mov
or
outsl
inc
mov
mov
nop
in
fsubs
stos
pop
sbb
mov
cmpsb
cwtl
mov
mov
test
cmp
icebp
add
enter
js
test
das
xor
ss
testl
xor
xchg
aad
adc
xchg
and
stos
je
lds
hlt
mov
jbe
jmp
jg
lds
daa
push
lock
xor
scas
jge
or
icebp
fldenv
mov
testl
fsubl
les
pop
rcrl
sbb
test
sahf
sbb
aaa
or
push
imul
adc
or
nop
adc
push
fimuls
push
fs
mov
mov
scas
dec
fs
push
xchg
mov
enter
rorb
mov
cmp
cltd
in
out
popf
sbb
clc
mov
xchg
push
stos
sub
and
or
cli
nop
cli
loopne
dec
xchg
lret
sub
push
fistl
lcall
sbb
cmp
out
inc
add
ficompl
das
fs
outsl
inc
push
lret
aad
fsubrl
jge
rorb
xor
into
fsubl
jbe
push
pop
call
and
imul
sti
lods
dec
adc
dec
ret
ret
jbe
pop
lcall
test
daa
or
inc
xchg
sub
imul
mov
and
jp
bound
jecxz
mov
push
sub
mov
jmp
in
push
outsl
nop
out
lods
cmp
xor
repz
pop
rep
add
push
pop
push
pop
ljmp
ds
jnp
sbb
or
test
and
xchg
jl
lcall
in
mov
dec
sub
xor
sub
mov
scas
push
test
sub
push
decl
jmp
je
test
jmp
push
test
add
ja
nop
lret
push
push
jecxz
xor
inc
lods
xchg
sbb
fdivr
mov
adc
rorb
mov
jmp
enter
stos
adc
aas
add
sub
jl
and
mov
pop
jbe
out
clc
xchg
sti
in
test
sbb
xchg
sbb
movsb
cwtl
jl
jo
jecxz
mov
pushf
or
jmp
xchg
call
cmp
mov
adc
fcom
push
jne
or
cmp
mov
repnz
test
cs
jbe
xor
mov
dec
cld
inc
and
xchg
pop
loop
hlt
jno
xor
out
sti
fcoml
inc
cltd
jg
dec
dec
lds
and
fbld
stos
das
dec
inc
mov
aaa
ret
push
sbb
fstl
mov
adc
cmpsl
or
test
add
jg
gs
ret
inc
and
jecxz
pop
add
sbb
repnz
push
rcll
out
cmp
pop
cmc
and
xlat
mov
dec
xor
cmc
shl
sbb
scas
pop
jne
mov
push
adcl
xor
sub
jnp
add
aaa
xor
fmull
push
insb
pop
jno
and
popa
bound
or
dec
or
jle
mov
popf
fistl
and
sbb
daa
cmpsb
rorl
dec
fsts
ja
cs
xchg
sub
add
mov
ljmp
lds
cmpsl
pop
sub
jge
lds
add
and
xor
pop
popf
push
in
add
dec
push
lcall
push
pop
xchg
jne
ja
push
test
loop
mov
popf
dec
fmull
in
xor
push
dec
add
cmp
in
fisubl
jno
cmp
dec
stos
out
mov
cmp
fst
mov
jg
adc
rolb
lcall
jo
sbb
ficoms
pop
inc
loop
adc
ret
dec
ja
imul
mov
cld
mov
mov
xchg
mov
jo
sub
sub
mov
cmc
mov
adc
dec
cmp
cmpb
cmp
popf
dec
sub
loopne
sub
sbb
dec
aad
idivl
mov
das
gs
xchg
scas
lret
loopne
push
aaa
sbbl
sub
push
cmpsl
mov
mov
inc
jmp
inc
repz
xchg
pop
enter
das
pop
fwait
nop
cmp
addr16
out
adc
mov
adc
add
lock
sbb
mov
pop
pop
inc
jno
jnp
cmp
popa
notb
push
dec
add
xchg
sbbb
nop
loop
daa
add
int
fstpt
mov
rol
pop
sar
inc
or
cmp
mov
mov
and
adc
inc
arpl
push
sti
clc
adc
push
xchg
xchg
push
in
push
lds
leave
and
cli
scas
out
sti
rcr
mov
jns
movsb
adc
icebp
push
js
mov
xchg
lahf
xchg
xor
out
fsubrp
push
inc
test
add
dec
movsl
lock
jae
jne
aam
movsl
pop
repnz
and
mov
shlb
pushf
sti
pop
xchg
stc
jne
cs
mov
popa
mov
pop
js
or
dec
xchg
add
sub
mov
mov
pop
repz
adc
int
cmc
mov
repnz
ds
jecxz
mov
call
mov
push
shrb
fnsave
int
pop
mov
mull
jmp
test
cmp
outsb
or
add
dec
fwait
add
cld
loop
mov
int3
dec
mov
add
data16
pop
sub
dec
aad
mov
fimuls
mov
test
adc
sahf
push
inc
js
mov
mov
mov
and
into
xor
pop
and
outsb
leave
mov
jns
pop
je
mov
shr
jg
mov
outsb
les
xchg
js
mov
sti
jmp
lahf
popf
test
mov
xlat
pop
int
xor
aam
movsb
xchg
jns
std
ret
je
jo
adc
js
and
lds
push
dec
xchg
and
adc
daa
ja,pt
xor
add
out
xchg
ljmp
push
call
or
js
ljmp
pop
sbb
rorb
test
mov
mov
arpl
rcl
inc
in
inc
orb
cmp
cs
inc
xchg
lcall
ss
xchg
dec
les
xchg
dec
pushf
gs
fistpl
stos
cmp
push
lea
insb
popl
fnstcw
daa
add
xor
roll
and
fs
sbb
pop
insb
and
dec
jne
and
xor
shll
bound
ljmp
insb
sub
add
mov
sti
scas
psubusw
pop
mov
out
push
lcall
loop
jmp
push
rolb
mov
mov
xchg
clc
jbe
aas
sbb
or
out
mov
clc
dec
xor
cwtl
ss
cmpsl
decb
push
adc
xorb
stc
cmp
pop
inc
jl
out
mov
or
push
mov
test
aad
push
mov
outsb
outsb
sub
mov
imul
xchg
fucomp
xor
cmp
mov
nop
cwtl
mov
add
push
dec
jae
lcall
adc
sbb
jmp
les
xchg
push
mov
dec
mov
cmpsl
inc
and
rcrl
and
sarl
sldt
jl
testb
imull
push
fwait
movsl
arpl
sbb
add
adc
xchg
adc
inc
mov
lock
int
loope
mov
fistl
mov
out
xor
enter
adc
enter
sub
dec
dec
jno
hlt
inc
lcall
sahf
or
dec
adc
arpl
mov
sub
cmp
cmp
and
sahf
and
out
xlat
in
mov
mov
in
fcmovu
lret
cmp
cmp
fdivrl
push
fdivp
mov
lret
sahf
stc
in
loop
jp
dec
mov
inc
clc
stos
push
sub
aaa
out
pop
push
ljmp
push
adc
shrb
add
leave
fs
push
jae
pop
push
fbld
fs
xorb
jns
lods
adc
xlat
mov
sbb
hlt
dec
jae
jne
ja
lcall
xchg
xor
fldcw
insb
push
adc
mov
jg
and
popf
xchg
aam
xorb
dec
fsubr
dec
jnp
insl
je
das
into
scas
fistpl
dec
gs
hlt
xchg
dec
bts
js
das
addr16
or
xchg
fcompl
iret
jecxz
inc
test
out
sbb
addl
js
push
loope
mov
es
ds
inc
outsb
mov
lcall
push
xchg
xchg
and
lock
insb
int3
jns
aaa
push
repnz
mov
sbb
jbe
jmp
loopne
cltd
cli
imul
jmp
pop
cmp
inc
xchg
mov
sti
add
shrl
pop
enter
adc
outsb
fsub
inc
ret
es
mov
movsb
mov
jmp
fcomps
adc
std
cs
ss
test
pusha
stos
sub
notb
dec
mov
rclb
xor
int3
sbb
xor
test
outsb
sub
test
push
ja
fiadds
lret
adc
mov
out
dec
pop
lahf
sbb
pop
lcall
cmp
outsl
mov
adc
jae
jnp
aaa
int3
or
ret
mov
dec
xchg
or
and
sub
pushf
cmc
and
inc
lret
inc
hlt
mov
xor
cmc
fninit
or
push
mov
cmp
xor
leave
into
xor
mov
mov
add
fmuls
imul
push
push
inc
or
sti
dec
inc
lea
in
xchg
cs
arpl
inc
shr
xor
aad
push
pop
and
mov
xor
gs
adc
xchg
jge
mov
lret
add
faddl
mov
cmp
mov
icebp
or
add
mov
jne
pop
into
pop
fs
pop
addl
mov
test
fs
leave
push
call
inc
shr
and
out
dec
fwait
cmp
cmp
insl
or
cmp
dec
mov
in
push
in
pop
cmp
add
add
popl
add
es
pop
sbb
jp
aas
sub
movsb
cmc
sbb
add
fnstenv
out
push
add
js
inc
mov
inc
add
popa
lock
leave
in
clc
fstpl
outsl
push
push
dec
push
xchg
lea
push
inc
dec
mov
cmp
imul
scas
repz
push
sbb
adc
loope
stos
push
mov
push
sub
xchg
adc
sti
mov
loopne
inc
jle
es
pushf
cwtl
adc
cmp
sub
aas
ds
inc
add
mov
mov
cmpsb
scas
xchg
adc
inc
jae
aaa
lahf
adc
mov
mov
and
ja
adc
add
lods
pop
dec
sub
sub
push
push
inc
xor
and
and
fidivrl
popf
jp
mov
cmp
rolb
enter
mov
ret
insl
ja
dec
jg
bound
aaa
push
pop
or
add
arpl
pushf
stos
mov
jl
mov
adc
dec
sarl
push
mov
pop
fsubs
cmpl
sub
mov
sbb
mov
mov
and
dec
cmpsb
sub
mov
lods
inc
xchg
inc
fdivs
test
inc
ret
dec
sub
mov
lret
push
xchg
mov
data16
aaa
aam
fnstenv
xchg
pop
fcoms
test
add
push
mov
out
sbb
dec
aam
xor
addl
es
repz
dec
push
fstps
xor
pop
out
mov
adc
or
or
sahf
imul
insb
sahf
into
es
out
out
and
sub
bound
xor
fsubs
cmp
adc
jge
sbb
mov
scas
fidivs
popf
add
lcall
jb
sbb
dec
mov
inc
movsl
into
shll
icebp
decl
dec
movsb
push
mov
mov
sub
xchg
pop
pushf
int3
mov
notl
push
push
insb
ja
add
sbbl
mov
aas
jo
inc
xor
gs
pushf
ljmp
jl
stc
sti
mov
mov
mov
dec
fidivrl
lcall
jno
lahf
push
shll
out
sub
adc
addr16
out
mov
dec
cwtl
dec
pop
aas
mov
mov
mov
stos
xor
outsl
cmp
ret
jno
inc
cld
fimuls
dec
cmp
scas
les
inc
mov
mov
add
notb
jno
mov
push
or
mov
add
loope
scas
pop
add
jne
pop
popa
adc
ja
gs
bound
mov
adc
mov
rcl
popf
ret
gs
mov
decb
movsl
stc
pop
mov
gs
cltd
push
adc
nop
jbe
inc
jbe
sbb
inc
jnp
mov
imul
mov
dec
fcomps
iret
or
or
cmp
xor
cmpsl
cmpsb
lahf
adc
mov
and
loope
push
cmp
jmp
fwait
idivb
mov
xor
or
fcmovbe
lret
pushf
inc
xorb
mov
cmp
sub
pop
sbb
xchg
and
or
insl
test
or
cld
fdivs
imul
popf
sbb
xor
lods
push
sbb
xor
jb
loope
test
clc
cld
popf
adc
adc
and
mov
ds
imul
push
jne
xchg
jnp
in
adc
inc
xorb
jbe
adc
sub
xor
aas
mov
leave
dec
jne
aaa
inc
test
adc
js
jb
pop
push
js
lods
imul
mov
cmc
push
jecxz
outsl
inc
das
add
lahf
loopne
xor
jne
and
xchg
data16
mov
adc
hlt
jne
pop
pop
cmp
arpl
xchg
divb
and
dec
cmpsb
jae
dec
outsb
mov
mov
push
mov
mov
pushf
fstpl
out
and
push
cmpsl
dec
inc
pop
jp
pop
xchg
into
loope
and
sub
xchg
loope
cli
dec
dec
jg
in
inc
test
sahf
pop
cmp
cmc
scas
xor
xor
cmp
outsb
add
mov
xchg
in
mov
or
cwtl
add
es
loope
pop
into
mov
ret
dec
mov
xchg
jmp
mov
push
mov
cmp
and
jg
popf
push
dec
ret
shlb
mov
insl
pop
mov
pop
addr16
aas
addr16
jmp
vmread
cmp
cmp
sub
je
inc
lea
xchg
mov
in
mov
dec
mov
test
pop
aaa
or
imulb
sub
pop
in
add
divl
mov
ficomps
insl
push
out
data16
adcb
dec
je
pushf
lea
rclb
mov
push
cmp
mov
sbb
push
xor
cs
sbb
inc
mov
push
ss
pop
push
mov
lods
push
icebp
sbb
jge
xchg
xor
inc
in
insl
pop
sbb
das
and
cltd
nop
lret
loop
xor
inc
adc
mov
fs
xor
jo
mov
popa
imul
fs
or
cmp
jl
mov
mov
call
pop
pushf
fnsave
loopne
je
out
clc
sub
out
movsl
add
lret
sarl
sub
pop
sbb
pop
mov
int3
pop
es
mov
lahf
add
outsb
adcb
iret
push
iret
mov
inc
movsl
repz
dec
sbb
cs
mov
mov
sub
test
xor
push
stos
insl
insb
stos
leave
dec
dec
xor
lods
add
add
inc
adc
repz
jno
mov
push
pop
aam
inc
dec
out
popf
int
imul
sub
jecxz
int
add
int
mov
cltd
ljmp
imul
xchg
inc
repz
add
incb
stc
and
jne
jge
inc
mov
sbb
into
imul
and
xor
pop
subl
int3
inc
mov
js
mov
sub
jl
popa
cld
in
fwait
lock
add
push
push
pop
adc
pop
aas
js
ret
jo
ret
sti
xor
loope
aas
call
fildll
test
or
outsb
jne
ja
popa
push
jecxz
ss
jo
stos
mov
inc
dec
mov
or
jge
fwait
mov
scas
xchg
mov
andl
adc
dec
and
outsb
repnz
into
sub
mov
das
pusha
mov
xchg
stos
aad
mov
jne
test
lods
out
test
sub
xchg
dec
xor
insb
mov
movsb
sub
out
out
aam
int
inc
cld
pop
aam
popaw
add
ret
pusha
nop
jo
hlt
add
mov
mov
xchg
ficoms
mov
lock
stos
jmp
mov
mov
mov
inc
inc
jb
out
xchg
or
inc
daa
icebp
push
cmp
sub
push
xor
rol
pop
std
pop
mov
mov
in
pop
push
cmpsb
nopl
mov
or
mov
sub
pop
push
xlat
loopne
inc
test
loopne
pause
jb
call
rorb
xchg
cltd
xor
sub
adc
sbb
mov
fwait
rorl
inc
sub
divl
cmp
pusha
sub
xchg
outsb
xchg
cmc
shll
sbb
stc
inc
negl
pop
orl
fsubrs
pushf
sbb
popa
mov
shrb
add
pop
repnz
out
jge
lahf
pushf
xchg
std
fcmovne
aam
lret
cs
outsl
lods
jg
jmp
pop
add
or
nop
push
testl
pop
cmp
rorl
xor
gs
push
nop
xchg
insb
push
incl
das
lds
lock
sbb
jmp
inc
movsl
dec
cmp
test
cmp
inc
pushf
sahf
aaa
in
xchg
mov
adcb
imul
push
mov
cmp
pop
jmp
fsubrl
mov
movups
sbb
flds
dec
jecxz
js
out
push
add
aaa
divb
and
mov
jnp
push
and
popa
mov
add
ds
or
mov
cmpsb
xchg
sahf
lret
imul
mov
dec
out
add
lret
es
cltd
inc
sub
inc
outsl
push
pop
or
lods
pop
iret
adc
inc
push
leave
imul
test
xchg
das
jne
and
dec
mov
enter
xchg
insl
mulb
xor
pop
mov
das
fnstenv
ljmp
jb
pop
leave
std
add
cmp
or
je
enter
pushl
dec
push
cmp
mov
adc
xchg
and
push
inc
adc
fucomi
cmp
jns
push
pop
fsubrs
dec
popf
fsubl
loope
enter
div
sbb
pop
int
rolb
jae
jg
sbb
popf
lret
jnp
mov
lret
out
cmpsb
loopne
cltd
or
jne
jno
xchg
js
je
fwait
cli
aad
pop
mov
lea
sbb
aad
lods
pushw
xor
adc
or
icebp
adc
cmp
movb
or
dec
xlat
jbe
movsb
jecxz
lea
jg
ret
insl
inc
jmp
cmpsl
xor
mov
std
or
rorb
push
xchg
dec
clc
dec
lds
adc
into
fstl
aas
inc
lods
xor
in
test
mov
pop
stc
out
xchg
shll
mov
sbb
movsl
mov
fs
xchg
or
and
pop
rcll
scas
icebp
jl
shrl
cld
jbe
aaa
bound
or
or
imul
or
mov
lcall
clc
pop
push
inc
mov
dec
jo
inc
mov
sbb
adc
push
mov
sub
jns
out
and
arpl
inc
adc
je
push
jecxz
jmp
mov
pop
push
std
arpl
mov
jae
daa
insb
movsl
lea
mov
cmp
mov
movsl
repz
mov
stc
divb
mov
fidivrs
arpl
jbe
inc
mov
mov
lods
xchg
and
mov
sub
mov
mov
and
dec
cmp
xsave
cmp
jl
add
cmovg
frndint
addr16
xchg
mov
mov
icebp
ja
lods
outsb
nop
mov
inc
lret
pop
sub
push
cmp
flds
rol
arpl
lcall
in
adc
lock
nop
mov
add
pushf
pop
ret
in
orl
test
adc
inc
add
loopne
loop
and
setg
add
xlat
xchg
fcmove
lea
cld
pop
xchg
cmp
mov
clc
mov
inc
nop
js
mov
aaa
cmc
lret
push
ret
push
bound
and
leave
dec
std
and
dec
xchg
or
fistpl
add
and
mov
sub
or
dec
push
imul
adcb
shlb
xchg
cmp
cli
jg
int
ret
jle
pop
aad
addr16
add
jg
lods
ss
dec
addl
out
adc
add
repz
loop
imul
jmp
rcrb
stc
push
inc
lret
or
out
inc
pop
sbb
lahf
jmp
mov
aam
adc
hlt
inc
aad
pop
mov
push
jo
inc
repnz
adc
in
fwait
push
notl
jp
outsl
inc
cld
test
imul
sahf
int
stos
clc
xchg
clc
push
movsb
insl
inc
mov
psllq
or
jns
mov
flds
sti
fiadds
sub
cmp
sbb
add
loop
sbb
cld
scas
fimuls
xor
aad
sbb
adc
cmp
cmp
mov
fdivrs
ds
dec
jns
clc
inc
in
or
pop
inc
lahf
jae
xchg
sahf
add
lods
js
rcl
jae
fcoml
int
insl
xchg
sbb
jl
push
pop
add
mov
pop
rdpmc
push
out
ret
test
inc
cwtl
hlt
xor
icebp
shrb
inc
filds
pop
loop
dec
lods
in
inc
aad
sarb
es
mov
sbb
mov
loopne
xchg
adc
out
movsb
orl
loopne
in
fwait
mov
mov
xchg
sub
aad
cmp
subl
or
inc
or
std
pop
outsl
les
mov
jno
leave
out
je
or
pop
mov
dec
into
lods
push
aas
insl
cmp
lcall
jge
out
sub
sahf
pop
int3
cmc
fisubrs
stos
setl
in
push
jne
xchg
ret
adc
mov
push
cltd
std
sbb
push
ljmp
mov
stos
pop
push
mov
xor
sbb
inc
mov
sub
subl
pushf
add
test
add
push
pushf
in
xchg
cmp
jge
inc
mov
sarl
mov
fwait
sti
xchg
jo
or
aam
in
jecxz
ja
adc
call
fsubl
mov
out
sub
stc
mov
leave
mov
lods
lcall
and
mov
rcrb
mov
push
inc
inc
xor
xchg
cwtl
popf
popa
mov
mov
sbb
inc
fucomip
inc
pushf
add
pop
mov
or
loopne
sti
inc
mov
or
inc
das
add
ds
push
inc
leave
sarl
pop
add
lds
mov
mov
jbe
xchg
ds
push
fnstcw
mov
ds
cmpb
out
inc
stos
insb
adc
arpl
nop
lcall
das
mov
lock
add
adc
xor
aam
andl
adc
lcall
aas
xchg
in
arpl
ret
or
push
aas
mov
jb
sub
je
sub
fdivr
in
je
pop
push
dec
int
pop
xchg
aam
ret
imul
test
or
rcr
daa
in
add
orb
scas
jle
ljmp
jmp
cltd
shrb
jmp
mov
mov
xor
es
mov
sbb
push
cltd
jb
lea
movsl
adc
xchg
push
scas
and
and
mov
ds
daa
xchg
sub
adc
ja
das
add
jb
xchg
sub
insl
sub
data16
pop
inc
bound
imul
sub
std
mov
xchg
enter
lods
jecxz
std
mov
or
pop
daa
jg
mov
fwait
mul
mov
subl
cmp
ljmp
lds
data16
stos
mov
xlat
jo
hlt
xor
xor
roll
inc
insl
sbb
in
push
sub
sub
in
pop
mov
sbb
mov
adc
dec
mov
and
fwait
lock
lret
ljmpw
mov
jmp
in
ret
jmp
shll
mov
mov
sbb
std
lods
test
xchg
inc
jp
jmp
sub
adcl
lcall
lds
stos
test
xchg
das
mov
inc
movsb
cmp
addb
or
das
xchg
outsb
dec
adc
xor
nop
dec
lcall
sub
hlt
and
ss
adc
pop
gs
test
adc
imul
int3
stos
loop
test
jns
ret
pop
push
mov
mov
dec
sbb
sbb
adc
sbb
xor
bnd
testb
pop
data16
push
mov
adc
fs
std
rolb
and
pop
inc
pop
pop
das
mov
cmp
push
mov
xchg
ficompl
lret
pop
adc
jb
xchg
bnd
or
cmpsb
fisttps
inc
shrl
or
adcl
iret
call
push
ja
xor
lret
test
pop
adc
cli
mov
push
add
mov
ret
stc
movsb
or
cmp
arpl
and
pushf
neg
and
cs
dec
cltd
mov
testb
mov
cmp
mov
cli
outsb
inc
sub
cmpl
loop
jb
jle
dec
mov
pop
testb
xchg
stos
into
inc
push
adc
cs
loopne
sub
adc
sbb
mov
dec
or
gs
out
nop
mov
scas
sarl
push
add
arpl
cmp
adc
push
es
leave
lds
push
jnp
sbb
mov
test
push
xor
subl
lcall
mov
sub
jmp
into
jmp
mov
sbb
divb
ljmp
lcall
inc
lods
mov
in
xchg
fsubrs
xor
push
xor
mov
mov
das
sub
mov
gs
mov
dec
jbe
lret
pop
xchg
mov
mov
movsb
filds
addl
cmp
cmovns
popa
sub
xlat
jbe
aad
xlat
fimuls
mov
bound
push
test
xor
cmpsl
scas
push
movsl
add
mov
and
scas
pop
inc
into
leave
mov
les
stos
adc
inc
jo
loop
dec
mov
cmpsb
mov
pop
xchg
and
mov
sbb
int3
fcmovbe
dec
add
inc
pop
fdiv
fs
sub
inc
jo
aam
fcoml
add
jp
cmp
push
in
xchg
sti
pop
pop
fldl
cmp
cld
xchg
push
in
mov
sahf
sbb
xchg
rcrb
iret
sub
test
jmp
test
scas
jbe
xorb
jg
jb
mov
fstpt
xor
xchg
addr16
ret
xchg
pop
clc
mov
fisttps
inc
aad
or
outsl
into
lods
ss
hlt
push
xchg
dec
je
jae
inc
mov
insb
stc
popf
add
lcall
in
mov
dec
enter
add
push
add
lcall
adc
jmp
popa
gs
mov
add
cs
and
jge
imul
stos
sti
shrl
jne
add
push
aad
fwait
cmp
push
fidivs
cld
popf
movsb
ja
jg
pop
int
out
iret
add
inc
inc
into
mov
repnz
mov
pop
loopne
cli
hlt
sbb
pop
mov
jbe
stos
cs
mov
jmp
xchg
out
push
push
mov
std
movsl
sbb
mulb
xor
push
data16
mov
lods
cmp
iret
gs
bsf
and
fs
mov
mov
sub
out
sub
ds
jle
mov
sbbl
cmpsl
hlt
and
fs
xlat
push
testb
in
pop
sub
adc
add
aas
cli
loopne
das
push
les
mov
push
mov
or
inc
cmpsb
mov
fdiv
sub
jg
aas
aad
mov
inc
loope
xchg
loop
mov
sbb
sub
fbstp
or
adc
in
inc
movl
int
nop
call
or
inc
mov
and
test
pop
inc
movsl
xchg
sbb
add
out
push
sbb
push
loopne
mov
xchg
jnp,pn
mov
pop
lea
and
ret
or
std
push
in
and
es
loope
aas
repz
cmp
jle
push
fcoml
cltd
scas
aaa
mov
add
ret
push
and
inc
mov
in
jno
js
inc
iret
push
cld
sbb
xchg
aas
xor
or
loop
pushf
sahf
neg
fnstsw
addl
push
sbb
pop
push
dec
ja
or
mov
mov
jg
inc
inc
xchg
stos
sbb
jo
aad
orb
fbld
dec
jg
dec
sbb
lcall
repnz
daa
scas
adc
or
filds
or
cmp
push
mov
pusha
mov
xor
jns
and
aas
fnsave
mov
jecxz
insb
aaa
ljmp
cmp
fwait
add
outsl
cli
mov
in
pop
jnp
in
or
sub
shll
mov
out
mov
inc
addr16
push
cltd
xchg
or
pop
in
push
imul
sub
ficompl
popf
xchg
push
imul
insb
pop
inc
cmpsb
fwait
leave
jmp
jne
loop
pop
or
mov
jbe
add
push
cmpsb
nop
adc
inc
sarl
sub
pop
fwait
push
jle
sub
imul
jp
pop
mov
add
es
in
aad
and
das
fsubs
mov
jae
cwtl
insb
mov
aaa
or
out
jg
push
jle
push
je
sarb
ljmp
lcall
aaa
cmp
repz
mov
clc
cmp
jno
pop
xchg
push
push
pop
insb
xchg
das
fcmovbe
shrb
mov
add
stos
subb
sti
mov
add
jae
mov
mov
inc
in
sbb
movsb
out
ret
call
sbb
xchg
add
add
out
cmp
sub
xchg
mov
outsl
out
xor
mov
jmp
addr16
test
or
jp
fistpl
scas
mov
cli
mov
lea
mov
xor
and
pusha
ja
sbb
push
out
cmpsl
push
push
xchg
push
cld
or
cli
ljmp
clc
mov
scas
pushf
mov
inc
push
or
xor
or
pop
fsts
add
cmp
cld
jecxz
imull
or
shll
fs
xchg
gs
std
sub
mov
dec
movsb
sbb
scas
lret
arpl
xchg
mov
and
repz
and
jge
je
and
out
ss
aas
push
aaa
jl
push
inc
or
sub
cmpsl
insl
jae
lods
mov
mov
mov
mov
push
mov
inc
out
ffree
stc
cmc
pop
into
repz
fsubrs
jns
cmp
pop
fwait
xchg
add
repz
cltd
adc
jg
mov
jmp
push
push
lea
daa
ss
mov
dec
dec
into
cld
pop
xchg
xor
mov
xchg
mov
mov
pop
dec
pop
fstpl
shrl
cmp
inc
sbb
cmp
lret
pop
adc
roll
xor
mov
les
aad
stos
addb
xchg
sub
cmp
push
sub
dec
pushf
pop
test
lret
inc
and
sub
into
idiv
aaa
xchg
lods
sbbb
mov
shl
jl
mov
test
out
inc
cmc
cmpsb
push
mov
add
or
les
push
into
cmp
out
lcall
inc
push
jecxz
adc
fdiv
in
mov
ficompl
pusha
mov
insl
cs
inc
repnz
adc
adc
adc
add
cmpsb
test
rcrl
sub
xchg
test
scas
insl
xchg
sti
dec
sahf
fidivrs
out
dec
fdivrl
imul
icebp
cmc
cmp
movsb
out
dec
push
jp
in
cld
minps
out
pop
add
fsubrl
notl
sti
and
jae
xchg
jnp
mov
iret
inc
or
xor
vpshufd
inc
out
jbe
cmp
jle
in
loopne
xchg
imul
sub
pushf
int
add
push
push
je
adc
out
inc
repz
test
add
jg
das
lods
adc
jo
xlat
jno
dec
sub
es
cmp
test
inc
test
lahf
xchg
aam
pop
iret
int
push
lods
cmp
out
push
into
mov
push
inc
mov
push
aam
dec
fs
pop
xchg
movsl
js
rorl
adc
and
mov
dec
cmp
mov
loop
mov
cwtl
jbe
sbb
add
in
jmp
stos
mov
adc
inc
xchg
xchg
daa
or
lods
add
aad
cs
js
rorb
ja
dec
push
clc
fcomps
sbb
xchg
jns
pop
sub
xor
stos
jmp
popa
lds
push
inc
jmp
lods
test
jp
fsubp
pop
mov
push
lcall
xor
sbb
adc
aas
es
adc
mov
imul
lahf
testb
jmp
jge
xchg
ja
leave
push
xchg
inc
pop
jb
jg
or
cmp
mov
mov
add
add
or
dec
cmpsl
dec
jnp
dec
out
jp
movsl
std
mov
or
cmpsb
jge
adc
mov
inc
jge
lods
fists
cmp
add
aas
inc
push
loope
push
sub
pop
cmp
dec
clc
rcrl
jb
dec
mov
in
push
ds
lret
cmp
scas
loop
popa
dec
insl
dec
outsl
or
ret
add
inc
es
push
fwait
xchg
sub
mov
imul
pop
js
jl
adcb
rorb
cmp
and
jns
mov
ss
sarl
sub
push
mov
cmpsl
mov
test
jl
mov
popa
push
sbb
scas
xor
js
icebp
aas
mov
adc
test
and
stos
or
loope
mov
sbb
push
pop
scas
enter
fdivr
mov
test
sbb
arpl
xchg
xchg
push
ret
push
inc
ret
adc
mov
push
mov
movsl
pop
ficoml
outsb
dec
fcoml
and
cltd
lahf
push
jmp
mov
lods
loopne
bound
cld
pop
dec
movsb
mov
jmp
cmp
mov
bound
dec
mov
pop
push
sbb
das
dec
in
add
and
mov
push
pop
and
mov
ljmp
fidivrl
int
xchg
xchg
inc
rcrl
sub
mov
std
sbb
stos
imull
and
dec
push
fwait
add
not
out
xchg
mov
stos
add
jbe
mov
nop
push
ds
adc
add
test
callw
mov
int3
enter
jbe
adc
sbb
xor
jo
jecxz
inc
cmpsl
mov
and
push
mov
inc
fucomp
push
notl
ret
adc
sub
sub
xor
add
cmc
mov
sbb
or
push
fisubrl
fldenv
fwait
sub
mov
adc
xchg
dec
inc
xorb
sbb
addl
pop
icebp
push
lods
stos
jmp
jns
or
mov
nop
loopne
sub
dec
es
mov
inc
test
xchg
cld
jg
jae,pn
bnd
xchg
testl
jle
cld
fcomi
cs
arpl
mov
mov
cmp
dec
sbb
das
mov
mov
aam
push
push
xchg
movsl
test
or
push
loopne
jg
ds
sti
enter
loop
dec
out
das
outsb
pushf
sbb
pop
aaa
xor
pop
mov
in
mov
dec
lret
std
mov
shrb
popa
xor
jmp
leave
fildl
xchg
and
pop
push
push
xor
out
mull
fmull
jecxz
jbe
lcall
mov
lea
pop
in
dec
pop
rcll
test
push
jbe
andb
sbb
mov
xor
in
ds
clc
lcall
jbe
jle
pop
inc
adc
or
xchg
add
fbstp
pop
inc
cmc
test
or
dec
gs
cmp
xor
jnp
js
sbb
movsl
push
jge
mov
xor
adc
loopne
cld
cvtps2pi
scas
pop
popa
filds
pop
lcall
cmp
pop
jno
ret
testl
cmp
cwtl
aaa
jmp
inc
cmpsb
repz
or
inc
mov
cmpsl
inc
jbe
lcall
xorl
cmp
addb
es
cmp
sbb
les
xchg
jns
arpl
fucomip
sub
cmpsl
or
pop
jg
je
push
lahf
xor
cld
rol
inc
shl
mov
in
cmp
add
push
cli
cmp
out
mov
arpl
xchg
test
fs
adc
adc
sub
bound
xchg
jecxz
pop
mov
push
push
lcall
push
dec
clc
or
sbb
cmc
mov
sub
fdivs
push
sahf
repz
cltd
cmpsb
mov
aaa
push
daa
jo
jb
jle
sbb
xor
dec
addr16
ret
clc
and
and
push
lret
cmp
cli
lock
cmpsb
ja
mov
pop
dec
xchg
pop
mov
jo
pop
test
rolb
out
jo
xlat
cmpl
mov
stos
addr16
push
jo
xor
and
aaa
mov
adc
or
push
mov
push
inc
add
add
mov
andb
popf
sub
rdmsr
push
lcall
in
iret
jo
adc
sub
pop
cli
cs
in
inc
int3
mov
dec
ret
cltd
cld
push
std
sub
std
iret
mov
mov
unpcklps
push
xchg
lahf
mov
std
add
insb
fdivrl
mov
ret
ret
sti
mov
mov
gs
mov
sub
pop
insl
shrl
mov
jge
mov
jae
or
ret
roll
aam
xchg
outsl
ss
gs
hlt
dec
call
fistl
or
popa
daa
mov
test
test
fcoml
popf
stos
hlt
hlt
mov
bound
dec
sub
mov
inc
cli
mov
fisttpll
cmp
cmp
or
sbb
pop
push
adc
lret
mov
and
pop
or
loop
loop
sbb
mov
or
sub
sbb
testb
mov
or
xor
jns
fs
jg
mov
stos
fsubrs
push
xor
aaa
lods
mov
in
push
test
and
jne
in
repnz
mov
cmc
dec
add
outsb
clc
fimuls
subb
aas
push
mov
pop
popf
lret
xor
test
add
out
loop
aam
lods
push
loope
xchg
inc
mov
fadd
imul
xor
dec
push
test
loopne
test
outsb
push
decb
sbb
push
mov
call
movsb
outsl
cmpsb
jo
clc
pop
or
sbb
sub
sahf
addl
cwtl
push
cmp
adc
jecxz
sub
sub
in
push
sub
call
cltd
repnz
inc
dec
mov
out
jp
xchg
inc
cmp
and
jnp
jo
bound
repnz
mov
or
imul
pusha
pop
add
mov
ds
dec
sbb
fisubl
xor
dec
xor
dec
in
nop
in
outsb
sahf
in
add
enter
leave
jle
lea
mov
mov
and
jmp
sbb
xchg
xchg
or
clc
xchg
jne
xchg
sub
jg
xchg
out
cltd
adc
mul
stc
ret
dec
or
repnz
sti
lods
and
movsl
fwait
mov
mov
push
dec
fsubs
stos
mov
sti
jne
inc
cmpsl
pusha
adc
fldl
mov
arpl
mov
scas
mov
jge
in
idivl
push
cld
pop
push
ljmp
mov
inc
cmp
pop
testl
pop
mov
pop
insb
bound
sub
sbb
pushf
loope
xchg
xchg
pop
xchg
pushl
cmp
xchg
mov
push
jns,pn
or
push
in
and
sbb
data16
cmp
outsl
in
es
movsl
ret
stc
mov
lea
inc
cld
add
push
data16
dec
xchg
fwait
jge
aam
cmp
mov
rcr
in
lods
jge
or
push
or
cmp
sub
or
inc
sbb
sub
fisubs
int3
popf
inc
addr16
jo
jns
push
fsubs
ss
jle
int3
std
sbb
or
jnp
sub
lcall
int
mov
push
sysenter
pop
and
repnz
fstps
mov
or
sbb
cmp
dec
dec
mov
cmp
mov
lahf
mov
je
loop
data16
imul
test
push
shll
pushl
lcall
into
xor
cs
into
push
dec
xlat
inc
int3
cmp
fidivl
pop
and
adc
cli
std
fstps
adc
jmp
inc
out
inc
push
fidivrs
dec
nop
mov
cmp
mov
or
out
pop
mov
std
lret
push
movsl
psadbw
aaa
sbb
lcallw
add
jno
mov
jecxz
push
int3
sbb
in
lahf
aas
jge
fcompl
dec
and
loope
and
sub
stc
bound
bound
mov
sub
mov
add
and
aas
mov
and
mov
cmpb
sbb
dec
push
lret
xor
addr16
cmp
sbb
inc
fs
int3
push
lea
out
loopne
dec
sbb
push
dec
lock
es
or
cmp
fstpl
adc
rcr
add
jge
outsb
incl
ja
xlat
mov
adc
add
loop
jbe
hlt
addr16
and
loope
push
push
jns
lds
out
or
pushf
mov
pushf
push
xor
mov
cmp
and
lock
mov
adc
mov
push
mov
adc
and
repz
add
stos
and
add
ror
arpl
fwait
test
stos
adc
mov
add
mov
sbb
sbb
and
dec
jne
sub
push
cli
inc
imulb
add
pop
push
leave
add
inc
push
addr16
add
vminpd
aad
cmp
cmpsl
inc
jg
add
pop
xchg
adc
mov
stos
xchg
push
fs
loop
js
cmc
pop
imul
add
sub
jne
fildll
jge
xchg
stos
pop
cmc
push
push
push
mov
jbe
cmp
stc
fiaddl
sahf
pop
imul
jp
pop
test
or
mov
pop
sti
push
mov
outsl
incb
mov
mov
test
cltd
sbb
jmp
icebp
movl
pop
inc
push
jle
in
jecxz
sarl
pop
dec
sub
push
je
xorl
and
sub
inc
jge
popf
adc
mul
ficoml
adc
mov
outsb
or
andl
out
or
xchg
dec
and
pop
xor
cmp
mov
jge
mov
neg
jne
mov
push
test
jmp
mov
sub
pop
mov
adc
out
popa
pop
mov
test
les
icebp
das
mov
sub
movsl
jge
push
xlat
in
fidivrs
mov
sbb
popfw
ret
insl
add
sub
mov
jns
xorb
arpl
adc
scas
fisttpll
ret
movsb
jp
bound
inc
test
movsb
jnp
in
inc
adc
push
jbe
and
add
add
cwtl
rolb
adc
inc
cmp
in
into
icebp
std
cmp
and
arpl
dec
sbb
out
popa
jp
lods
sahf
cltd
loopne
call
fidivl
mov
jg
andb
push
mov
fldenv
lods
push
push
fstpt
mov
cmp
adc
jae
je
cwtl
or
push
mov
dec
push
adc
sbb
mov
sbbb
jmp
xchg
imul
push
imul
jp
insb
sub
dec
mov
push
xor
movsb
leave
ficoms
add
inc
lds
sub
jg
scas
and
cmp
mov
aas
jb
lds
bound
shll
mov
daa
cmp
adc
push
cltd
xor
jl
mov
orb
sbb
xor
out
adc
movsl
jns
mov
rcll
add
push
mov
or
cli
xchg
push
sbb
xchg
das
jecxz
js
jnp
dec
cli
mov
pop
pop
jmp
lea
xor
xchg
jns
outsb
pushf
and
jle
and
pop
jns
sub
fmulp
xor
mov
gs
xchg
or
dec
lock
xorl
and
xor
fucom
std
mov
mov
mov
add
mov
inc
push
mov
push
aam
mov
pushf
mov
pop
icebp
inc
out
jae
movsl
aad
roll
xchg
mov
and
cltd
scas
roll
cmp
inc
push
lds
sub
jmp
xchg
push
mov
push
mov
sub
rorl
pop
pop
and
adc
dec
hlt
insb
stos
sub
sub
lcall
movl
nop
loope
mov
mov
pop
addr16
sbb
mov
sbb
xor
pop
cmpsl
ret
inc
jle
and
cmp
mov
sub
aas
aas
add
mov
add
push
dec
or
shll
dec
mov
arpl
cmc
jp
xor
rcrb
pop
mov
les
aaa
out
scas
and
ss
test
mov
ja
mov
loop
rcll
sbb
mov
cmp
fsubrl
sbb
cmpsl
pop
stos
inc
fxam
popf
out
xor
pusha
or
dec
and
es
sub
mov
xchg
sbb
imul
inc
lods
xchg
test
add
xchg
inc
xchg
gs
xchg
mov
jb
or
test
je
and
push
sti
negl
js
fldl
leave
jecxz
xchg
ret
xor
inc
push
int
outsb
cmp
sub
mov
mov
cli
imul
es
not
dec
lea
cmpsl
dec
jns
jb
inc
push
mov
lds
mov
jb
ficoml
jnp
ss
xchg
inc
inc
inc
rcr
out
sahf
lods
popa
push
cs
xor
das
mov
xchg
inc
bound
mov
rcrl
mov
adc
xchg
lock
jo
bts
inc
cmpsl
jae
jmp
dec
lods
lahf
adc
flds
sbb
mov
enter
into
and
sub
or
xchg
sbb
add
test
popa
xor
je
insl
xor
pop
es
movsb
ret
adc
hlt
loope
in
cmpsl
int3
inc
xor
sahf
add
ljmp
xor
add
or
jg
fimull
cmpsb
test
fidivs
dec
addr16
ret
mov
push
ja
and
pusha
fsubrs
hlt
cmp
mov
dec
push
in
pop
lds
outsb
sub
sbb
adc
lods
and
xchg
ret
jge
and
jmp
lods
lods
jg
popa
loop
cmp
push
or
or
fldt
jne
movsl
sbb
push
inc
cmp
in
dec
lret
sub
repz
push
pusha
inc
jge
mov
into
sarb
pop
mov
inc
xlat
popa
dec
out
rcrl
in
lret
xor
aam
ja
mov
into
and
lcall
imul
or
adc
xchg
cmpsb
sub
lcall
rcr
incl
lcall
leave
sbb
mov
add
stos
call
pop
inc
lods
inc
mov
push
mov
xchg
fstl
stc
dec
sub
push
int3
popa
lock
jb
cltd
lgs
mov
lds
inc
hlt
dec
loope
shlb
inc
cmp
and
mov
neg
fistl
addr16
push
or
cwtl
dec
jg
scas
jge
pop
sti
pop
dec
or
cmp
scas
ja
into
hlt
mov
mov
es
adc
rcrb
rolb
dec
add
xchg
cltd
aad
xchg
pop
jo
cmp
sbb
push
lcall
jge
mov
rcrl
jmp
std
pop
dec
scas
jae
fsubrl
mov
mov
mov
sub
scas
jge
mov
push
push
outsl
jns
dec
mov
push
lock
cmp
sbb
lock
mov
into
and
lods
jge
popa
stos
jo
cmp
xchg
in
imul
cmpsb
xor
js
add
movsb
mov
gs
xor
popa
push
jb
sbb
cmp
adc
sub
mov
xor
fidivs
dec
mov
cmp
je
les
or
pop
mov
xchg
in
jns
add
daa
dec
pusha
and
pop
lahf
cmp
pusha
xorb
stc
mov
decb
popf
push
mov
mov
push
popf
dec
cmpsb
imul
lea
fiaddl
call
mov
stos
cld
imul
sbb
call
add
and
mov
cwtl
out
jp
jg
outsl
outsl
mov
int3
loop
add
push
push
pop
je
sub
rcll
popf
sub
aaa
mov
pop
das
cmp
shl
jecxz
lret
xchg
inc
les
aaa
lods
rcr
cltd
lds
pop
iret
mov
cs
xor
rcr
push
icebp
xor
lcall
out
dec
lods
cmpsb
mov
std
jg
mov
add
jbe
add
shlb
fsubrs
mov
jb
or
pushf
or
jecxz
or
or
pop
push
adc
push
or
mov
pushf
cmc
leave
xchg
sbb
adc
add
fdivr
loope
cmpsl
xchg
leave
xor
hlt
pushf
push
popa
lods
sub
repz
mov
mov
sbb
lods
dec
dec
mov
cmovb
cmp
xchg
mov
sub
cltd
loope
jp
xchg
imull
push
adc
pop
fnstenv
popf
xor
sti
xor
and
lock
adc
jl
add
cld
pop
testb
xor
aaa
xor
sbb
sarb
mov
ror
adc
cmp
add
repz
push
mov
mov
lods
scas
or
mov
gs
xchg
dec
cmpsl
mov
mov
sti
ret
cs
sub
shll
int
flds
scas
mov
mov
stc
ret
mov
push
je
cmp
push
cmpsl
cmp
sbb
out
dec
enter
repnz
mov
mov
insl
xchg
out
push
mov
xlat
or
adc
and
add
icebp
xchg
imul
insb
ljmp
inc
cmc
xor
test
mov
hlt
lcall
loopne
mov
jo
psraw
xor
mov
mov
add
call
mov
mov
sub
rcl
jle
cmc
and
nop
aam
je
cmp
dec
popa
arpl
test
push
lret
test
mov
test
les
cmp
jns
sti
pop
test
or
das
mov
mov
es
and
dec
orb
arpl
and
inc
negb
xchg
xor
out
lret
negl
imul
es
push
out
jp
cmp
fistpll
jg
cld
rcpps
mov
or
icebp
and
and
lock
scas
jecxz
fsubl
push
mov
cmpsb
xor
cwtl
test
adcb
shlb
cmpsb
lret
jl
in
imul
out
xchg
lods
rcrb
pop
pop
pop
pop
into
mov
jo
outsl
inc
aaa
lods
jle
js
jge
test
mov
movsb
out
add
arpl
sub
jle
sub
shrb
into
lds
popw
mov
add
test
dec
dec
sbb
mov
xor
out
sar
adc
cmpsb
popf
sbb
add
mov
mov
fwait
pop
pusha
shrl
les
loope
cmpsl
sub
imul
mov
pop
fstpt
rclb
sub
mov
ljmp
pop
push
fs
dec
aam
sub
sub
cltd
jnp
jbe
enter
fnsave
out
js
mov
inc
mov
ljmp
ret
cli
mov
xlat
clc
xchg
test
push
inc
pop
lret
lea
int
push
fistpl
xor
cmpb
sarl
or
mov
je
sahf
insl
loopne
push
sub
inc
mov
cmp
jns
mov
mov
dec
iret
mov
fisubrl
dec
pop
jle
lret
inc
xor
pop
inc
mov
dec
pop
lods
xor
bnd
dec
pop
mov
gs
scas
dec
adc
inc
mov
out
cmp
dec
xchg
mov
lahf
outsl
stos
push
js
mov
cmp
add
sbb
pop
or
gs
dec
ja
pop
add
xchg
ret
rorb
mov
sub
hlt
icebp
xchg
inc
xchg
cld
mov
add
dec
ret
and
data16
ljmp
mov
dec
insb
fstpt
cmp
adc
fs
pop
xchg
aaa
push
mov
mov
pushf
pop
mov
sub
std
stos
jecxz
out
and
rolb
je
popa
stos
pop
gs
cmpsb
data16
pop
jl
lds
pusha
movsb
aaa
cld
pushf
clc
and
xor
or
iret
stc
mov
and
pop
xor
or
fisttpl
ja
rorl
add
mov
jmp
jb
notl
and
test
xchg
imul
add
inc
mov
sub
mov
fisubrs
mov
lgs
sbb
fisttps
xor
inc
addr16
out
test
or
mov
jl
loop
roll
jns
add
daa
lods
dec
adc
insl
ss
mov
pop
mov
adc
jnp
ror
cld
dec
addr16
xchg
jne
hlt
nop
outsb
mov
inc
dec
mov
mov
arpl
pop
mov
and
das
or
iret
fnstcw
jge
in
in
hlt
pop
push
add
sbb
ret
adc
cld
cltd
mov
and
add
pop
sub
sbb
add
test
jb
into
idivl
test
mov
and
test
cld
scas
sub
cltd
inc
sarb
pop
sbb
xchg
mov
jne
stos
test
add
cld
out
mov
jae
mov
call
push
dec
test
mov
cmp
jae
jmp
iret
aad
rorb
mov
lock
clc
and
pushf
lcall
pop
adc
je
inc
pop
sbb
sti
lret
addr16
push
adc
dec
xor
ljmp
push
mov
jp
nop
stos
orl
push
adcl
mov
jne
jl
dec
xchg
adc
pop
jne
mov
icebp
xorb
jmp
es
add
dec
in
lds
jmp
shlb
cmpb
mov
mov
outsb
loopne
mov
movntps
ds
mov
arpl
mov
or
sbb
sbb
cmp
lea
mov
rol
inc
xchg
dec
and
pop
into
sub
inc
inc
jno
mov
inc
jg
sub
push
ret
movsb
lcall
xor
int
nop
sbb
mov
jbe
mov
aaa
sub
mov
push
xchg
insl
ret
jp
xor
push
mov
imul
roll
mov
mov
jno
dec
sarb
flds
test
xchg
inc
pop
je
push
insb
dec
xor
adc
mov
mov
jecxz
xchg
addr16
outsl
imulb
mov
mov
inc
mov
cli
lea
mov
shll
lods
loope
mov
pop
fdivp
dec
mov
mov
fdivrs
inc
push
inc
cmp
mov
aaa
dec
xor
lret
out
mov
add
bound
xchg
sti
xor
mov
lcall
add
push
cwtl
daa
es
cmpsb
cmpsl
ret
addr16
mov
shlb
cli
cmc
cmp
mov
cmp
test
sub
cmpsl
shrl
ret
jp
gs
gs
dec
xchg
stos
cmpsb
cmpsb
xor
pusha
lcall
aas
fildl
mov
leave
aad
subb
xchg
sbb
test
jb
pop
and
xchg
loopne
lods
mov
mov
bound
lcall
xchg
xchg
xor
sub
pop
push
rorl
add
xorb
mov
lods
sub
shrl
lcall
push
int3
jge
xchg
in
and
loopne
dec
clc
hlt
scas
cld
adc
mov
repnz
mov
xchg
mov
xchg
mov
add
mov
push
jo
in
mov
ds
in
inc
xchg
addl
mov
mov
cmpsl
bound
movsl
ja
test
push
ret
or
push
lret
xlat
out
add
dec
add
pop
aad
xor
dec
jp
mov
nop
lock
mov
cmc
xchg
data16
jle
jecxz
push
scas
lods
call
mov
arpl
mov
sub
into
cmp
cmpsl
jge
dec
fwait
loop
shll
test
push
rcrb
add
rcrb
mov
add
fsub
int3
dec
lods
xchg
lock
mov
mov
out
loope
jle
loopne
xchg
xchg
push
and
push
mov
lds
lea
add
and
xchg
fistl
pop
push
shll
cmp
pop
std
call
bound
mov
movsl
jns
cmp
xchg
aaa
popl
in
lahf
inc
dec
sbb
mov
dec
pop
outsl
iret
mov
xchg
dec
jbe
adc
inc
in
cld
dec
sbb
pop
lods
jle
pop
cmp
das
sarl
andb
fcoml
push
je
repnz
fldt
int3
xchg
scas
xorl
lret
les
and
lret
push
das
incl
ljmp
scas
lret
aaa
pop
test
and
push
and
mov
inc
mov
push
add
mov
sub
or
testb
pop
pusha
imul
dec
outsb
arpl
psrad
push
shll
je
fwait
hlt
hlt
movsl
repnz
aaa
jecxz
jecxz
xor
ret
mov
mov
cmp
add
pop
pop
inc
leave
xor
inc
cmpsb
add
jne
sti
popa
jecxz
jmp
leave
loope
inc
inc
mov
out
js
addr16
into
cmp
inc
andb
push
adc
sub
je
test
push
add
insl
icebp
adc
mov
out
cmpsl
iret
scas
mov
pop
push
pop
jne
stos
scas
imul
insl
shlb
imul
stos
xor
stc
fdivs
jb
rcrb
push
mov
jbe
sub
push
das
adc
test
xchg
into
sbb
and
and
adc
dec
fsubl
roll
andb
mov
std
iret
xor
mov
cmp
test
ret
mov
addr16
dec
lret
movsb
pop
mov
fucomi
mov
push
inc
je
sub
popf
and
add
sub
stc
fcoms
and
pop
dec
das
cmp
push
pusha
out
loopne
add
mov
pop
mov
pop
xlat
and
pop
or
pop
insb
mov
xchg
xchg
add
cld
lods
inc
pop
add
mov
or
scas
and
xlat
das
cmp
das
pushl
sub
stos
popa
stos
adc
pop
mov
lahf
repnz
push
inc
push
ret
rcll
mov
sbb
and
inc
dec
ret
mov
seta
pop
xchg
sub
sub
jle
movsl
insl
stos
bound
rcr
aad
loope
dec
lahf
out
jo
add
xor
add
mov
out
fyl2xp1
xor
hlt
fdivrs
jmp
mov
add
addr16
fstpt
mov
push
pop
adc
xchg
add
add
pop
mov
mov
js
daa
jp
fldenv
outsl
roll
aam
inc
rorb
jne
dec
jge
ret
stos
mov
call
xor
cs
mov
jns
fnsave
pop
je
cmp
push
lea
outsb
xor
dec
and
pop
rcll
roll
clc
fs
mov
cmp
clc
test
stos
repz
dec
sti
push
repz
or
aam
xchg
push
pop
jnp
lods
pop
xchg
xchg
rep
lea
xchg
push
xchg
mov
sub
push
sub
leave
cwtl
mov
adc
inc
jae
mov
mov
das
cmp
addr16
add
adc
rcr
lahf
cs
outsl
aad
mov
lret
dec
xor
bound
or
sbb
cmp
pop
jo
or
jne
pop
rep
or
mov
ja
sub
mov
sbb
push
pop
push
aas
or
sbb
jae
hlt
pop
cmc
les
mov
iret
popa
sbb
movsb
dec
or
aad
mov
pop
ljmp
xor
mov
mov
lret
mov
mov
clc
sbb
bound
add
jns
mov
test
outsb
pop
pushl
mov
mov
dec
add
mov
leave
arpl
lods
in
dec
shrb
sbb
nop
in
push
test
xchg
xor
mov
and
lods
stc
outsl
pop
insl
sbb
push
add
add
or
daa
xor
es
dec
inc
cmp
adc
mov
jle
pop
cltd
mov
push
inc
xlat
and
testb
sbb
jns
xacquire
sub
int3
outsl
mov
out
mov
sbb
aam
movb
xor
fisubl
push
dec
sahf
lret
test
iret
es
jno
lret
adc
mov
bound
shll
scas
or
out
lds
cmp
lahf
es
or
xchg
mov
fmuls
popa
pop
sbb
pushf
cld
in
xchg
push
pop
add
mov
adc
mov
in
mov
push
out
cmp
jne
push
xchg
xor
and
add
stos
sbb
ss
pop
fstps
shll
or
cmp
add
movsb
movsb
stos
xchg
fdivrl
xchg
jae
inc
xchg
mov
add
lahf
jp
cmp
jo
jns
lea
mov
xlat
mov
sbb
lcall
ficoms
neg
shrl
pop
dec
iret
fcomps
pop
das
out
jge
inc
js
mov
jne
pop
idivb
aam
add
ret
push
mov
push
xchg
add
mov
rcrb
mov
dec
inc
lcall
cmp
xor
jnp
and
jb
aaa
ss
jns
stc
popf
xor
subl
pop
or
insl
and
out
ljmp
pop
adc
sarb
aam
test
mov
scas
push
pop
mov
mov
add
xor
sub
xor
mov
fisubl
sbb
xor
adc
sub
call
out
jns
popa
lea
sub
mov
popf
fldcw
dec
add
push
sub
adc
cmp
ror
popa
fmull
fistpll
test
xchg
add
inc
fadd
or
sbb
adc
mov
out
jo
lds
mov
pop
pop
dec
cmpsl
xor
jl
int3
dec
cmp
dec
xor
push
push
stos
push
add
mov
sub
mov
mov
sbb
mov
mov
pop
xlat
add
push
inc
mov
xor
cli
mov
mov
push
bnd
mov
add
jmp
xchg
mov
sti
loope
mov
shrb
xchg
jb
and
sub
icebp
insl
lods
pop
je
movsb
jb
mov
stc
xchg
jmp
in
ljmp
fbld
rcl
jg
pop
imul
xor
sbb
xor
mov
inc
adc
or
add
cmpsb
or
lock
cmp
dec
scas
lahf
push
xor
mov
dec
orl
xor
cmp
xchg
or
mov
ljmp
flds
jno
pop
jl
cltd
rcrb
ret
fwait
mov
mov
je
insl
pop
cmc
adc
inc
dec
xor
fwait
shrl
and
push
mov
and
and
out
mov
jb
cmpsl
cmp
xor
lahf
int3
mov
pop
and
push
push
or
lods
das
mov
jg
das
sub
mov
mov
andb
loop
xor
daa
jb
xchg
mov
stos
pop
xchg
sub
sub
loope
fdivrl
int3
sub
xor
sahf
and
mov
popf
mov
loopne
mov
sbb
movsl
sub
adcb
enter
xchg
inc
test
js
imul
inc
and
jno
ja
jo
push
add
xlat
stos
sub
jecxz
lods
pop
inc
and
jae
add
xchg
mov
dec
mov
mov
loopne
rol
mov
cwtl
sub
inc
imul
lcall
add
test
shll
xchg
je
rclb
xor
adcl
addr16
es
jne
sarl
mov
in
sbb
jnp
mov
or
cmp
fisttpll
aad
mov
stos
push
mov
jge
cli
adc
inc
jbe
pusha
pop
leave
dec
in
mov
inc
pop
push
mov
es
scas
fdivrs
jne
lcall
sbb
add
addl
es
jl
sbbl
and
ret
xchg
pop
fcmovu
cmc
in
outsb
cltd
or
repnz
sub
fldt
add
sbb
add
add
icebp
mov
cmp
cmp
or
stos
es
sbb
nop
ja
out
jl
or
mov
pop
adc
in
popa
sahf
lods
into
jl
xchg
in
push
ja
pop
xor
push
test
adc
sbb
or
ficompl
adc
mov
sub
mov
outsb
movsl
jg
mov
and
xchg
popa
test
pop
in
call
sub
lahf
ja
mov
mov
test
jle
in
clc
inc
rorb
leave
dec
lods
fs
loop
pusha
pop
mov
sub
dec
mov
scas
sar
inc
jnp
push
ret
push
xchg
mov
jne
lret
out
mov
cmp
xchg
mov
fsubp
shll
sbb
mov
neg
mov
mov
adcl
shlb
fdiv
and
shl
mov
frstor
push
les
or
iret
frstor
rcll
repz
xchg
fst
sub
in
cmp
jecxz
cld
fsubrl
movsl
xchg
stc
jb
inc
mov
adc
loopne
sbb
jns
inc
bnd
sbb
sbb
sub
mov
fisttps
cltd
mov
pop
clc
sub
xchg
inc
lret
mov
and
icebp
sub
lods
pushf
imul
loope
scas
into
add
sbb
aam
into
cmp
ret
jbe
incl
pushf
cmpl
adc
sub
cmpsl
lret
fiadds
fmulp
ds
aam
dec
arpl
inc
cmp
stos
iret
jge
cmp
dec
mov
push
andb
mov
cs
fcompl
sbb
or
cmp
xchg
dec
sbb
ficoms
cmp
sbb
inc
rcr
jo
mov
jge
aad
mov
xchg
jl
test
jne
dec
and
mov
mov
arpl
or
jb
sub
inc
out
push
sub
adc
xchg
test
cli
sub
out
ds
pop
scas
push
inc
outsl
mov
sbb
inc
pop
push
shr
adc
push
mov
pop
mov
add
mov
daa
push
lods
call
xorb
jg
mov
xchg
loopne
adc
std
mov
sub
dec
out
mov
dec
sti
add
loope
fwait
jp
jae
das
pop
xchg
xchg
lds
lahf
cs
jmp
xor
push
icebp
dec
ror
jle
fsubr
xchg
dec
dec
ret
dec
sbb
xchg
mov
stos
push
sub
mov
xchg
rcll
lock
xorb
ficoms
or
or
pop
push
icebp
sbb
ss
mov
dec
sbb
push
jbe
lcall
aad
pop
adc
lret
nop
mov
add
inc
cltd
and
mov
dec
dec
sbb
adc
jne
dec
cwtl
add
mov
xor
jg
lods
incb
ljmp
in
setl
int3
xchg
mov
jg
xor
or
and
les
push
adc
ss
subl
cli
jmp
fs
test
fsubp
add
jecxz
cmp
cmp
jo
pop
push
decb
ret
adc
fwait
push
fnstcw
cmp
inc
clc
adc
and
or
push
pusha
notl
movsl
fidivrl
jp
jae
dec
cmp
xor
mov
ret
out
sbb
jo
stos
push
pop
cmp
and
fldenv
xor
pushf
in
push
mov
xchg
sub
xor
aad
jns
xchg
lahf
pop
inc
stc
or
push
xlat
or
mov
cmpsb
mov
sbb
adc
aad
add
ss
ret
dec
mov
cltd
xchg
std
in
xchg
mov
in
inc
in
xor
clc
sbb
cmp
sbb
jno
sbb
pop
test
dec
push
sbb
test
pop
std
mov
push
into
xor
sbb
insb
in
mov
enter
sti
loop
sub
cmc
repnz
out
stc
outsb
mov
out
arpl
add
or
push
pop
int
mov
out
dec
pop
push
jecxz
inc
mov
icebp
call
mov
sbb
in
inc
push
jecxz
out
xchg
cmp
mov
sbb
dec
sqrtps
in
or
arpl
out
pop
sub
dec
movsb
pop
sub
in
sub
sti
mov
sbb
inc
orb
pop
cmpl
inc
lahf
gs
pop
inc
popa
cmpl
lret
push
xor
lock
in
rcrl
cmp
mov
push
add
movsl
push
ret
icebp
sbb
inc
sbb
xor
gs
clc
in
xor
and
ret
shll
jmp
sti
movsb
sti
das
mov
int3
jo
mov
gs
jne
test
test
out
or
cli
sbb
xor
rol
xchg
pushf
sub
add
fnstsw
push
aam
mov
mov
orb
add
push
cmp
loope
dec
pushf
and
push
mov
xor
mov
int3
pop
addr16
in
pop
aad
jne
stc
xchg
and
jge
dec
push
dec
test
dec
xlat
sub
lret
push
testl
mov
enter
jp
sub
push
clc
jecxz
sbb
inc
jg
jo
pop
scas
aas
stc
jl
lds
adc
mov
add
cs
ffreep
loop
add
push
mov
dec
mov
add
ss
mov
or
pop
fidivrl
ficoms
mov
jns
das
insb
loop
push
xor
pop
or
mov
sub
dec
fsubl
std
or
jge
fldl
mov
outsb
sub
mov
sbb
xchg
mov
out
and
in
dec
mov
pop
xor
cmp
pusha
add
lahf
cld
lods
idivb
dec
lods
xchg
stc
sub
cmp
in
data16
cmpsl
aam
push
or
and
adc
or
dec
hlt
cmpsb
std
jmp
js
cmp
push
lods
mov
test
mov
sbb
outsl
mov
mov
sub
or
xlat
add
scas
xchg
fucomp
aas
es
frstor
fcmovnb
pop
mov
and
mov
mov
pop
aaa
sti
loop
mov
aad
and
adc
mov
dec
test
nop
push
movsl
sbb
cld
mov
sub
sbb
test
popa
scas
test
outsl
loop
mov
mov
pop
ret
cmp
imul
lock
push
stos
or
popa
and
mov
jg
mov
clc
mov
test
or
scas
push
icebp
add
mov
dec
rcrl
pop
popa
stc
popa
scas
inc
cmpsl
repz
lods
movsl
enter
cmp
scas
jb
fnstsw
out
sti
push
xchg
jecxz
call
sarl
call
or
notb
fimuls
in
push
std
inc
bnd
xor
cmp
jmp
repz
out
add
loop
imul
popa
sbb
mov
test
cmpsl
dec
mov
mov
or
inc
cltd
push
lods
xchg
pop
adcb
sub
insl
xchg
call
cmpsb
or
sbbb
call
xor
enter
shll
sbb
mov
icebp
mull
pop
subb
fcomi
dec
and
or
jg
pop
push
mov
jnp
clc
xchg
jg
pop
push
or
jge
adcb
cmp
jnp
pop
inc
lahf
pushf
jl
mov
ret
cmp
and
cmp
subb
insl
mov
mov
or
ss
inc
push
jl
mov
pushf
sbb
sarl
add
inc
jne
loope
sbb
sub
fdivl
mov
sbb
insb
or
mov
cmp
in
sbb
enter
jb
jnp
adc
fucom
xchg
adc
fisttpll
enter
scas
cmpsb
sub
jae
call
flds
dec
fisubrs
insl
je
cmp
push
mov
cmpsl
xor
cmp
adc
xchg
pop
mulb
mov
mov
jl
insl
ret
rol
or
cltd
insl
or
sbb
loop
stos
clc
xchg
fcompl
inc
xor
xchg
cmpl
add
movsl
push
test
cmp
les
push
pop
fbld
loopne
aas
testb
xlat
mov
xchg
jp
ja
sub
or
dec
sbb
or
cmp
push
movsb
int3
cmp
pop
movb
inc
mov
mov
sub
jne
sbb
inc
mov
dec
mov
ja
out
xchg
sbb
pop
push
divl
cmpsl
xor
mov
lock
stos
jae
ret
add
add
adc
mov
mov
int
mov
movsl
pop
xchg
jp
enter
pusha
mov
mov
sbb
lret
push
cmp
sbb
mov
dec
sbb
inc
mov
and
push
adc
jecxz
xor
and
into
jl
push
daa
or
jp
jae
ss
sub
insb
or
xor
or
bound
push
sub
aaa
jb
subl
pop
fwait
iret
cmp
mov
pop
fcomp
ja
fstps
cmc
mov
andb
fwait
addr16
bound
imul
mov
fistl
mov
stc
xor
adcl
sbb
out
xor
sbb
loop
push
mov
fisubs
pop
mov
nop
into
loop
pushf
sbb
cmp
add
lods
mov
add
pusha
notb
mov
pop
pop
jns
leave
rcr
loop
adc
cld
lcall
std
int3
ja
mov
jle
or
mov
adc
rcrb
popf
adc
inc
ret
fsub
and
cmpsl
rcrl
jo
data16
shll
cli
adc
dec
mov
mov
and
mov
inc
adc
and
lock
stc
outsl
adc
cmp
adc
or
mov
mov
data16
dec
flds
shrl
test
add
xchg
imul
mov
lds
je
xchg
sbb
repnz
and
insb
fnstsw
and
flds
xor
lret
and
and
sub
xor
ret
dec
cmp
cmpsb
je
mov
sarb
sub
xchg
bound
sti
mov
jnp
xchg
cld
push
mov
out
testl
aaa
or
xchg
fmull
cwtl
and
mov
ja
jnp
sub
lds
lods
mov
adc
lea
and
int
je
push
pushf
mov
jg
push
fdivrp
jg
sti
sub
dec
js
pop
push
pop
rcr
test
xor
cmp
adc
push
pop
les
mov
and
or
xor
inc
jl
xchg
jg
sahf
or
sub
pop
out
mov
fnstenv
jmp
mov
in
add
or
dec
lret
sbb
fdivs
je
push
push
rolb
inc
mov
mov
mov
push
push
xchg
dec
push
ds
sub
sti
inc
or
xor
leave
test
lret
aas
cmpsl
out
dec
popa
out
call
add
vminss
xchg
or
test
jno
cltd
push
mov
out
das
jbe
or
sub
testb
leave
mov
scas
mov
sbb
lret
arpl
push
outsl
addr16
cli
push
xchg
jecxz
maxps
pop
and
movsb
pop
push
lock
scas
popf
push
js
test
jno
cmpsl
pop
lock
xchg
cmp
testl
cltd
or
and
pop
xor
add
pop
int
dec
mov
pop
fucom
dec
aad
lgs
or
insb
outsb
movsb
dec
xchg
or
push
xlat
inc
dec
lcall
or
subl
cld
push
pop
cld
shrl
pushf
mov
mov
stos
mov
xchg
sub
xor
int3
pushf
push
push
jmp
imul
stos
or
repnz
and
inc
ja
cmp
test
lods
inc
stos
inc
mov
xchg
scas
cmp
dec
cmp
lock
pop
pop
xor
mov
rorl
lret
lcall
pop
add
or
iret
cmp
push
es
xor
sub
cmp
stos
bound
jns
addl
dec
or
and
mov
cmp
jae
fisubl
fsubrl
lret
cmpsb
mov
pop
dec
add
cmc
push
jbe
pop
movsb
mov
mov
cmp
and
inc
add
push
cmp
subl
jns
repnz
mov
mov
and
adc
push
xor
lock
loope
shr
idiv
mov
jecxz
xchg
dec
mov
out
fidivrs
je
adc
test
adc
lahf
mov
jg
or
stos
push
and
push
sbb
pop
sbb
enter
jp
mov
das
into
int3
outsl
dec
push
jp
cmpb
dec
inc
nop
pop
imul
pop
scas
sbb
pop
and
popf
hlt
sti
sbb
xor
das
rcll
clc
pop
data16
add
aaa
pop
add
pop
mov
add
dec
aad
mov
mov
add
bnd
lods
sub
xchg
mov
sub
jl
cmp
mov
pop
insb
cltd
jge
dec
fsts
cmp
mov
fcompl
inc
cmpsb
aam
inc
jnp
ret
mov
sti
mov
jmp
mov
loopne
mov
cmp
fisttpll
and
clc
sbbb
mov
jo
jmp
rclb
mov
ds
add
jp
mov
sub
dec
mov
adc
int
xor
mov
or
pop
lret
rcrb
push
inc
jle
or
jne
mov
cmova
and
adc
dec
cmp
jge
lret
inc
jns
and
mov
add
and
xchg
adc
pop
arpl
fmuls
jp
jb
imul
mov
cmpsb
sub
mov
or
mov
jbe
es
das
insb
fnstcw
int3
dec
adc
xchg
cmp
cmp
jge
cmpb
dec
sti
outsb
add
jmpw
mov
inc
outsl
push
out
dec
subb
jmp
packssdw
ja
inc
lret
jecxz
scas
pop
jecxz
mov
adc
out
ret
push
sbbl
mov
das
mov
lock
cmpsb
scas
fisubrl
fnstenv
or
mov
roll
pop
cmp
sbb
movsb
adc
lock
adc
mov
jo
outsl
sub
and
sbb
in
sahf
mov
add
scas
dec
cli
or
mov
fmulp
pushf
push
or
mov
mov
mov
and
cmp
xchg
sbb
inc
test
loop
sub
daa
ljmp
out
iret
and
xor
sub
xchg
cmpsl
dec
mov
mov
daa
sbb
sahf
xchg
sbb
mov
stos
aad
mov
jne
int3
mov
lods
idivb
out
or
jne
daa
mov
cmc
push
cmpsl
adc
jb
out
addr16
test
fiadds
jecxz
xchg
in
ficoml
fsubrl
dec
push
or
gs
push
leave
cmp
das
push
or
and
cli
mov
sub
or
dec
pop
test
sahf
pop
shll
sbb
inc
xor
push
jmp
aas
pop
in
jmp
dec
lret
xchg
lds
push
mov
pop
leave
ret
inc
loope
and
arpl
fildl
jecxz
loopne
ljmp
jg
fcmove
xor
mov
outsl
xchg
xorb
push
rorl
out
dec
int3
mov
push
or
test
push
outsb
jae
push
lcall
sub
inc
mov
dec
and
cmp
sub
pop
and
fmull
aaa
orb
xchg
adc
mov
and
cltd
and
mov
rorl
mov
nop
sbb
mov
sahf
add
xchg
dec
push
jmp
into
movsb
sti
cwtl
pop
push
insb
les
loope
cmc
pop
imul
mov
and
push
or
stc
add
hlt
cmpsl
in
popa
ds
add
dec
pusha
sbb
les
out
cld
mov
sti
inc
fildl
inc
cmp
inc
movsl
push
jle
adc
sub
out
push
sub
lock
test
or
in
nop
mov
mov
aaa
mov
jno
and
push
lock
bound
adc
push
push
mov
pop
stc
outsl
mov
sarb
and
push
mov
fs
xor
inc
cmc
lret
je
push
pop
mov
and
xchg
and
inc
jnp
lds
outsb
outsb
ja
and
imul
dec
adc
movsb
test
xor
cmp
call
jo
push
jmpw
loopne
add
in
xor
arpl
fiadds
int3
ficompl
jmp
imul
or
sub
fldenv
adc
dec
dec
jb
mov
adc
inc
imul
jl
dec
das
cmc
lock
xchg
or
clc
xchg
enter
subb
sub
xchg
sbb
lcall
mov
dec
stos
and
mov
xlat
sti
loop
frstor
jnp
jno
xor
mov
push
push
mov
push
jp
test
repnz
inc
inc
shl
movsl
pop
push
into
mov
popa
and
mov
inc
xor
ret
jno
mov
sub
adc
imul
in
les
mov
rorb
imul
push
push
adc
cmp
adc
inc
test
insb
jle
mov
mov
comiss
mov
pop
cmp
inc
sub
gs
in
int3
sbb
test
cmp
mov
jae
push
fdivs
push
scas
in
xor
cmp
int3
xchg
add
mov
nop
sbb
or
jns
pusha
clc
call
inc
sar
in
and
pop
lods
xchg
js
pop
or
pop
shll
add
jae
sub
arpl
cli
push
xlat
fpatan
push
xchg
cld
cltd
adc
insb
add
ljmp
push
add
cmp
fsubs
aaa
mov
jl
jge
mov
adc
cmpsl
pop
jns
xor
sub
xor
mov
ficoml
ds
ret
push
es
cs
ret
jne
rorl
scas
pop
out
jbe
mov
xor
jbe
cs
pause
inc
arpl
mov
neg
mov
dec
xor
push
scas
jl
jmp
mov
dec
outsl
gs
push
cmp
push
stc
mov
push
pop
std
aad
ljmp
mov
sbb
sub
and
out
jnp
lret
sahf
push
mov
jnp
sbb
test
scas
pushf
pop
out
aad
fucomip
scas
stc
loopne
mov
xor
or
cmp
xor
lods
adc
daa
icebp
into
std
insb
xor
mov
ret
mov
push
lock
cmp
jno
pushf
push
or
mov
mov
adc
push
sbb
aam
mov
adcl
add
mov
push
and
popf
sbb
sub
mov
sub
and
jnp
fld
cltd
outsb
nop
jne
int3
incb
jmp
jbe,pn
pop
mov
pop
lahf
xchg
dec
xor
sub
jno
jp
sbb
or
adc
bound
jnp
and
or
outsl
or
inc
mov
jb
and
lcall
or
and
insb
or
sbb
ss
xorb
xor
xor
push
sub
sbb
inc
cmpsb
stos
cmpsl
das
hlt
ds
or
or
or
shrl
ja
pop
leave
pop
and
lea
push
movsl
imul
sub
gs
cmp
out
iret
ds
dec
pop
pop
pop
dec
jns
aad
cmc
push
bound
test
call
cmpsl
scas
push
or
mov
jnp
or
iret
fbstp
insl
mov
inc
adc
lcall
cmpsb
lret
sub
cmp
xchg
mov
fldenv
mov
push
testb
es
cmp
inc
pop
sub
shl
and
xchg
iret
in
aam
or
cmp
jnp
lea
or
es
sbb
xchg
test
out
adc
ror
cltd
test
orb
pop
xchg
add
inc
das
sar
enter
das
push
test
cmp
or
inc
int3
imul
test
popf
mov
adc
outsb
sbb
fidivrs
cmc
xlat
push
test
adc
xchg
and
clc
rcll
push
sbb
orl
fbld
push
jmp
push
fwait
add
pop
mov
xor
rclb
shl
fwait
mov
clc
pop
fdivl
je
push
ljmp
arpl
sbb
and
inc
jnp
clc
mov
fisubs
sub
push
cli
xor
or
mov
leave
sub
push
add
inc
pusha
inc
cmpb
fstpt
int
pop
push
test
push
pop
or
mov
inc
push
inc
adcl
pop
cmp
inc
cld
xchg
add
push
rorb
xor
push
jb
pop
idivb
popf
mov
out
aad
ss
fldenv
nop
arpl
aam
inc
push
sub
cmp
pop
hlt
sbb
outsb
aas
popf
iret
xchg
and
fwait
loopne
pop
std
pop
idivb
scas
sub
ret
fsubl
adc
mov
insl
fcoml
stc
hlt
pushf
sbb
enter
aad
hlt
dec
inc
dec
cmpsb
add
imul
vshufps
je
mov
dec
xchg
jns
test
pop
sar
and
hlt
xor
add
pop
outsb
inc
insb
ja
pushf
sbbl
icebp
or
adc
repnz
and
cmp
in
jb
push
pop
shlb
dec
scas
scas
add
fidivs
push
mov
shrb
mov
loope
les
pop
in
sbb
pop
mov
jns
bound
out
xchg
gs
jns
mov
sub
lea
imul
sti
or
jecxz
dec
jo
push
mov
jno
mov
jp
cmp
cli
imul
jmp
or
lcall
in
mov
add
jne
aas
jbe
es
cmc
in
pusha
mov
out
pop
ficoms
xchg
mov
mov
mov
or
mov
mulb
and
data16
scas
lcall
ds
adcb
xchg
mov
inc
lock
xchg
inc
jl
mov
cmp
sbb
test
int3
iret
mov
inc
jge
arpl
mov
pop
jo
ss
arpl
lds
call
pop
idivl
pop
or
jg
pop
mov
dec
bound
cmp
mov
fidivl
mov
or
rolb
jmp
pushf
sti
cmp
leave
push
fistps
addr16
hlt
pop
loopne
jbe
mov
jle
pop
push
inc
scas
or
in
xchg
add
mov
inc
jae
ret
in
xchg
aam
divb
inc
daa
mov
pop
ja
dec
or
jge
clc
adc
jns
popa
dec
loop
mov
pusha
out
push
out
mov
xchg
outsl
adc
xor
jo
rol
jle
push
and
fisubrs
pop
loop
inc
xchg
and
mov
jp
push
int
iret
push
arpl
mov
fldenv
fdivrl
sti
arpl
dec
mov
cmp
iret
mull
mov
mov
rcr
jmp
or
sbb
jae
xchg
stos
inc
cmp
jecxz
mov
xor
jnp
fcomps
sbb
cld
mov
scas
inc
cwtl
pop
push
xchg
inc
add
pop
push
or
cwtl
xor
leave
lock
enter
pop
or
dec
out
mov
divl
inc
fldl
or
movsb
aam
jbe
push
cmp
jge
push
andb
mov
mov
jle
mov
in
rcll
ss
icebp
xchg
adc
aaa
dec
cmc
imul
loopne
inc
loope
mov
add
adc
dec
mov
and
sti
sbb
push
xchg
outsb
dec
shll
xchg
dec
push
cmp
sub
push
stos
xlat
aad
push
pop
pop
mov
lea
aas
nop
lock
loope
pushf
and
jbe
or
mov
inc
xor
scas
loopne
lods
add
notb
mov
fidivl
jle
fucomip
xchg
std
sbb
jnp
cmp
sbb
cmpsb
in
arpl
rcrb
fs
fwait
adc
or
mov
insb
testl
mov
or
and
rorl
out
loop
push
and
inc
xchg
sahf
hlt
or
push
mov
lret
cld
lods
pop
pop
xchg
jle
rolb
scas
xchg
xor
lods
mov
lret
push
pop
adc
inc
iret
inc
or
mov
cmpsb
inc
std
mov
inc
iret
shll
mov
mov
adc
stc
rcrb
sbb
pop
jg
adc
out
jecxz
xor
les
test
int
cmp
into
fwait
sbb
add
pushf
cs
push
mov
sahf
add
repz
mov
xor
jb
adc
mov
or
cmpl
xlat
mov
xlat
pop
and
mov
sbb
and
aad
mov
sahf
outsl
jmp
imul
scas
push
aad
pop
push
aaa
test
ja
pop
mov
ret
insb
bound
xor
jns
scas
xchg
jmp
dec
sub
movsb
adc
fists
jmp
ret
dec
sub
lcall
nop
inc
mov
movsl
mov
sbb
add
sbb
and
orl
aad
inc
inc
push
outsl
jle
aaa
pop
aas
mov
nop
mov
cwtl
shrl
cmp
mov
mov
ss
sbb
out
lahf
sbb
jp
xchg
shrb
loop
imul
pusha
jne
insb
popa
sub
test
testl
adc
cmp
cmp
pusha
mov
xor
xchg
orl
and
rolb
or
add
daa
mov
cmpsb
xchg
aas
dec
push
ljmpw
mov
cmp
fs
dec
pusha
xor
or
jae
push
and
fwait
js
dec
jp
repnz
fiaddl
je
mov
sbb
int
cmp
mov
cltd
sbb
xorl
jae
cmp
sub
into
mov
cmp
nop
cmovl
xor
add
xchg
push
fwait
daa
cltd
jno
cmpsb
lea
xor
jg
lock
loopne
test
outsb
daa
adc
fcmovnu
and
dec
fstpt
push
ja
sub
or
stos
pop
bound
xor
sbb
js
outsb
out
data16
jle
jecxz
insb
sbb
or
out
inc
ss
xor
je
push
stos
sahf
dec
mov
cmp
movsl
out
frstor
sub
mov
add
sub
fdivr
pop
xchg
xchg
mov
test
cltd
inc
rol
jno
outsb
dec
xor
xorl
mov
dec
xchg
xor
jle
fcmovbe
clc
adc
add
aam
cmovne
fidivs
mov
jp
mov
adc
jmp
je
clc
dec
loopne
adc
mov
rcrb
addr16
or
aaa
daa
dec
out
notb
jb
testb
lds
or
add
ss
adc
cmpsb
sub
hlt
adc
jo
push
aaa
jbe
je
mov
shr
outsb
mov
imul
or
mov
add
gs
xor
jbe
pop
cmc
ljmp
add
test
aas
inc
ficomps
jae
stc
push
pop
mov
jle
and
push
add
in
or
aaa
test
pop
mov
bound
cli
push
add
popa
push
cmp
xchg
dec
xchg
mov
fisubl
mov
add
xchg
pop
out
fwait
loop
push
je
mov
addr16
dec
scas
push
scas
pusha
jb
repnz
lods
sti
xchg
pop
or
pop
lret
cmp
xor
xor
cli
cmc
lahf
gs
pusha
pop
test
frstpm(287
and
into
xchg
push
xchg
sub
scas
push
cmc
mov
and
out
jmp
xor
lds
das
faddp
cmp
lret
out
inc
pop
mov
push
int
xchg
out
and
mov
test
or
jb
pop
pop
in
bound
mov
and
outsb
lret
inc
into
sub
mov
stos
ret
or
mov
inc
jne
imul
mov
inc
xor
mov
adc
fcomps
adc
lret
jo
dec
xor
aad
cld
add
mov
nop
jno
and
dec
mov
fildll
xchg
xchg
add
mov
enter
fs
in
pop
sub
in
lods
adc
mov
in
fimull
and
adc
dec
ret
outsb
xor
in
ja
f2xm1
stc
outsl
lcall
lock
lods
xchg
xchg
enter
push
outsb
sahf
je
arpl
adc
push
sub
adcb
jmp
xchg
outsb
cmp
and
sub
mov
repnz
dec
mov
mov
xchg
das
outsb
mov
daa
fsts
lea
cmpsl
pop
rclb
cmpsl
mov
js
or
or
test
lahf
cmp
aaa
aad
mov
sbb
pop
insl
jmp
or
pop
psubd
pushf
adc
pop
push
add
negl
push
and
mov
mov
or
loopne
push
mov
push
pop
inc
add
loopne
pop
xor
pop
jp
das
xchg
out
lods
div
jmp
das
shl
pop
push
std
fcoms
xor
add
push
pop
jb
and
fnstcw
cwtl
cwtl
cmpsb
xor
lods
add
daa
fidivl
outsl
in
mov
jmp
lret
insl
lret
add
inc
pop
and
enter
nop
flds
in
adc
clc
push
and
mov
addb
flds
pop
fdivrl
add
test
addr16
pop
mov
adc
dec
cmp
outsl
sub
dec
fdivrp
or
sti
xor
fidivl
ret
gs
mov
outsl
jbe
xchg
stc
xchg
int
int3
jle
mov
pop
insb
jne
adc
int3
in
cli
pop
and
mov
mov
ja
inc
pop
fs
test
pop
or
das
mov
adcb
idivb
sbb
pop
cmc
adc
xor
pop
jg
repnz
fsubs
sti
pop
ja
loopne
and
mov
mov
je
lcall
pop
sub
bound
aas
addr16
dec
mov
pop
scas
push
leave
mov
jmp
xchg
and
mov
xchg
mov
mov
or
inc
push
mov
mov
pop
push
fcompl
jle
mov
push
jns
ds
mov
xchg
cmp
and
xchg
add
movsb
daa
roll
leave
mov
jl
idiv
pop
negb
lock
popf
shll
stc
mov
pop
and
gs
shll
mov
cmp
mov
aam
xchg
lods
fisubrs
mov
sub
cmpsb
shl
push
push
pop
push
aas
das
pop
icebp
sub
xchg
mov
int
movsw
add
jae
in
aam
mov
dec
ja
xchg
push
push
mov
inc
push
call
push
and
loopne
fcmovu
or
lods
js
xchg
stos
add
addr16
aad
movsb
xorl
imul
mov
xor
stos
pop
in
loope
xlat
jbe
clc
cmp
adc
lods
xchg
mov
test
mov
jb
fdivrp
xchg
mov
mov
stc
pop
jo
cs
jecxz
int3
ja
mov
cs
pop
decb
mov
push
push
repz
pusha
bound
and
adc
enter
xor
test
movsl
push
movsb
icebp
pop
mov
mov
outsb
xchg
adc
inc
loope
aaa
daa
dec
dec
xchg
repnz
cmp
test
add
mov
inc
mov
imul
out
jg
cmp
jno
js
push
jbe
lods
loopne
stos
loope
cmpsl
shll
fisttpl
and
leave
dec
lods
cmpsl
std
adc
popf
stc
cwtl
xchg
xor
sbb
aaa
jmp
lahf
xchg
pop
iret
cwtl
lea
daa
xor
fwait
push
insl
outsb
adc
or
inc
lret
inc
ja
jo
sbb
pop
mov
pop
and
scas
out
mov
in
into
push
loopne
das
mov
out
inc
jae
jmp
add
xchg
aaa
out
xchg
push
jne
enter
lcall
mov
jp
and
xchg
xlat
insb
mov
xor
mov
icebp
cltd
pushf
imul
push
mov
inc
les
in
mov
daa
sbbl
dec
add
jae
push
lcall
loop
fcmovbe
and
repnz
push
and
test
push
mov
mov
jae
adc
and
test
ret
sahf
push
jmp
jl
xlat
insl
daa
add
or
rolb
je
push
mov
push
push
dec
pop
ss
lret
cmpsb
sub
cmp
inc
repnz
pusha
xchg
mov
push
or
mov
fwait
lods
scas
sbb
pop
mov
sub
ljmp
ja
out
in
mov
sub
lock
sbbl
movsl
mov
inc
int
sub
jle
push
aad
loop
adc
outsb
and
outsl
jle
dec
daa
pop
outsb
inc
jns
mov
dec
ljmp
lds
icebp
xchg
in
aam
and
jo
cli
insl
xchg
push
add
jle
lods
mov
and
daa
sbb
in
and
add
filds
in
call
stos
sub
mov
mov
xor
loop
ss
mov
xchg
cmp
or
gs
xor
inc
push
daa
mov
rep
in
js
pop
out
iretw
xor
cmp
sub
cltd
negb
fwait
push
movsl
pop
dec
jbe
and
cmp
adc
js
cmc
movsl
pop
inc
xchg
or
stos
aam
push
jns
adc
xor
inc
sbb
dec
jecxz
push
lret
movsb
adc
hlt
push
pop
loop
pop
dec
mov
lods
dec
cmpb
outsb
shrl
dec
push
push
jecxz
lods
xor
mov
mov
push
or
mov
pusha
push
add
xchg
add
mov
test
cmp
repz
push
sub
mov
loop
pushf
daa
cli
sub
cmp
sub
ljmp
bound
lcall
sbb
mov
stos
ljmp
mov
push
push
mov
sbb
cld
pop
ss
ret
dec
outsb
add
xchg
jne
adc
sbb
mov
push
push
scas
into
dec
push
inc
icebp
pop
fmuls
cmp
fnsave
push
popf
leave
test
es
aaa
jo
jns
mov
push
inc
xor
cmc
fs
mov
daa
repz
add
add
mov
pop
hlt
and
add
push
jmp
mov
in
lds
scas
push
mov
fstps
fistps
mov
out
dec
cmp
js
hlt
lds
push
pop
pushf
and
xor
xor
inc
repz
sbb
fldt
ret
jp
cmpl
and
add
mov
inc
push
pop
hlt
divb
mov
inc
xor
subl
movsb
xlat
std
sbb
adc
fisubrl
inc
cltd
js
in
scas
leave
push
cmp
inc
mov
xor
push
cs
out
movsb
mov
dec
push
and
cld
testb
in
lret
int3
xchg
push
push
lods
sub
roll
pusha
outsb
push
vunpcklps
sbb
imul
cld
inc
jle
cmp
rorl
repnz
nop
mov
push
and
imul
jecxz
inc
cltd
jns
ss
adc
aam
imul
pop
out
mov
scas
adc
or
pusha
jl
scas
dec
pop
popa
lods
mov
pop
sbb
or
data16
enter
stos
mov
leave
ljmp
std
imul
clc
pop
call
jns
sub
lods
jo
sbb
lds
hlt
jb
xchg
pop
xchg
ja
and
or
jecxz
add
lret
in
jl
push
xchg
and
and
leave
outsb
imul
inc
je
dec
jae
xchg
popa
cmp
into
dec
mov
stc
popf
push
push
loop
sub
and
sbb
inc
push
push
or
push
js
add
jle
xlat
jl
cmp
push
xchg
pop
gs
fsubrs
adc
or
daa
cmpsl
insl
lret
or
sub
inc
sbbb
sub
push
mov
xchg
xchg
les
add
mov
dec
in
into
fdivr
addr16
dec
cmpsl
push
aad
fs
or
das
pop
or
jns
jmp
mov
notb
leave
add
inc
and
lock
pop
std
and
popf
and
jmp
sbb
add
lods
jb
je
nop
mov
or
mov
pop
imul
sbb
mov
mov
lcall
fdivs
sub
pop
jnp
mov
jne
aaa
or
sub
sbb
adc
dec
mov
and
jg
test
push
add
or
and
mov
xchg
nop
add
sbb
pushw
xchg
pmaxsw
jmp
sbb
push
cmp
cltd
sti
pmullw
insl
sbb
aad
dec
stos
push
pop
mov
popl
adc
movsl
sbb
sahf
test
pop
mov
mov
cmp
dec
in
lods
not
and
push
xor
xchg
mov
cmpsl
xchg
pop
pushf
add
xor
xchg
aaa
fcompl
test
push
pop
mov
mov
pop
lods
push
movsb
inc
lods
sub
sbb
lret
mov
loopne
mov
test
add
icebp
testl
pop
xor
popa
cld
adc
in
cmp
push
testb
out
or
js
xchg
or
mov
scas
xor
stos
fimull
dec
pop
inc
call
sarl
test
movsl
ficoml
pop
and
mov
xor
fisttpl
sbb
mov
pop
out
jbe
xchg
mov
negb
pop
popf
mov
scas
lret
xchg
mov
leave
fmull
les
adc
rclb
insb
adc
push
push
repz
mov
lcall
dec
pop
loopne
pop
sahf
cmp
sbb
sarl
into
xchg
bound
push
insb
mov
fs
movsb
mov
push
test
jecxz
mov
sub
or
jl
adc
sbb
jl
test
insb
xchg
pop
mov
les
daa
xchg
fs
movsb
notb
sub
pop
ret
bound
nop
dec
cmpsb
out
cli
inc
mov
leave
pop
scas
add
xor
xor
insl
lahf
repnz
or
pop
xchg
and
or
mov
aaa
adc
adc
pop
push
stc
adc
xor
shr
lock
enter
test
sbb
xlat
iret
insb
cld
pop
inc
cmpb
cmpsl
and
adc
test
test
sahf
testl
outsb
dec
in
cmp
imul
into
inc
add
dec
or
les
cwtl
push
out
jno
mov
pop
inc
xchg
mov
mov
in
jp
cmpsb
add
mov
inc
stc
scas
gs
movsl
repnz
ret
jo
pop
mov
test
jno
jnp
aaa
jb
repz
fisubl
add
xor
cmp
jo
xchg
lods
into
jns
and
pop
mov
ljmp
pop
cmp
push
mov
shrb
popf
rolb
fs
push
inc
lret
cmp
outsb
aam
push
sub
das
xchg
xchg
xchg
stos
push
scas
sub
push
push
mov
daa
xchg
leave
addr16
dec
xchg
pop
or
sbb
stc
pop
inc
and
sub
sbb
out
int3
outsb
popf
aam
sub
test
std
mov
jle
ss
cmp
cmpsl
jp
into
subl
sub
lea
xor
test
xor
mov
mov
int3
ljmp
fs
leave
inc
push
jl
xchg
and
ss
and
adc
and
int
arpl
jmp
adc
outsb
xchg
mov
sti
and
lahf
adc
adc
jp
dec
add
fistpl
shrb
mov
out
sbb
fmull
sub
jge
ljmp
test
lcall
ficoms
mov
sti
pusha
inc
fsubrp
sub
loop
sbb
or
sub
aam
xchg
jle
dec
and
lock
add
mov
lds
pop
sahf
mov
test
popa
dec
xchg
adcb
add
add
and
data16
inc
shr
mov
insl
clc
sbb
push
jecxz
xor
adc
dec
test
and
lods
pop
stc
stos
fisubrl
or
adc
in
out
push
cmp
aam
notl
mov
subb
and
xchg
mov
pop
dec
sbb
fwait
rorb
xchg
pop
sbb
fnstenv
fildl
fwait
push
inc
adc
outsl
mov
jecxz
and
daa
cmpsb
cmp
arpl
lret
inc
add
mov
popf
pop
xchg
pop
or
push
add
xchg
aas
inc
mov
cmpsl
and
xchg
or
mov
add
rcll
lods
mov
cmpsl
sbb
dec
xchg
sbb
jae
outsb
adc
hlt
adc
push
aaa
inc
arpl
ss
hlt
les
enter
xchg
mov
loop
mov
sub
rcrl
sbb
ret
les
sub
cmp
mov
gs
inc
faddp
aam
aam
or
cmp
dec
leave
cmp
call
xor
sub
movsl
mov
leave
insb
outsl
and
add
fldt
dec
inc
test
jl
pop
mov
cmp
dec
pop
mov
and
or
dec
dec
adc
sub
mov
int3
push
xchg
mov
pop
mov
aas
push
lods
popa
shl
in
xor
das
or
andl
std
ret
gs
jns
dec
dec
lods
lds
add
iret
mov
and
stos
mov
lock
scas
insl
dec
aam
dec
stos
mov
cmpsb
cmp
jecxz
fisubl
dec
pop
iret
pop
mov
aam
adc
mov
shll
xchg
call
push
stos
shr
in
adc
orb
pop
ret
mov
repz
pop
jg
sub
add
pop
mov
xchg
jne
test
or
popf
mov
jno
or
popf
xchg
mov
adc
into
jne
xchg
mov
lret
and
mov
adc
mov
xchg
aad
lods
mov
mov
das
popf
aam
cmpsl
std
xchg
mov
xor
sbb
or
ss
ret
mov
orl
cmpsl
lahf
dec
movsl
dec
les
mov
inc
mov
movsl
pop
hlt
mov
mov
test
push
pop
ret
daa
fcomps
in
cmc
test
iret
clc
pop
mov
stos
sbb
inc
add
xchg
popl
cmpsl
inc
or
lock
ficomps
decl
fstps
je
push
in
into
mov
dec
add
cmp
jbe
test
or
jmp
bound
jge
add
push
lock
cs
and
sub
iret
mov
xchg
aas
jno
jecxz
cli
pop
mov
fcompl
pop
les
sub
mov
notl
pusha
roll
add
adc
popa
out
push
mov
sbb
ja
clc
xchg
stos
pop
xchg
adc
cmp
pop
cmp
hlt
aad
cmpsl
add
or
mov
loope
cmp
in
or
adc
repz
aas
add
fstpt
push
dec
pop
bound
lods
scas
shll
shr
roll
test
cwtl
cltd
fistl
std
or
pop
dec
jecxz
xchg
cld
arpl
cmpsl
mov
jp
pop
push
jns
aam
lods
loopne
mov
push
jg
fsub
cld
jno
jp
pmaxub
ret
bnd
mov
adc
inc
int
ret
sub
jno
ficomps
int3
add
repnz
add
dec
push
mov
add
movsl
cmpb
mov
sti
mov
xlat
inc
movsl
xlat
mov
dec
mov
sbb
imul
mov
inc
pop
or
dec
push
cmpsl
faddl
inc
shlb
addr16
iret
xchg
inc
mov
jmp
add
cltd
cmp
test
rorb
aad
je
add
fisubs
arpl
in
out
lcall
cld
imul
xor
jmp
add
xchg
fcomi
and
bound
sbb
lds
enter
outsb
mov
pusha
fisubl
mov
lods
jp
sahf
adc
cmpsl
stos
movsl
icebp
cmpsb
out
arpl
xor
pop
stos
pop
sub
into
mov
cmp
outsl
retw
mov
mov
and
jmp
icebp
fucomi
outsb
xor
xchg
cmpsb
test
fsubrp
aas
les
mov
subl
mov
ljmp
push
jb
jb
daa
xchg
cmpsb
aam
push
idiv
aad
test
sub
and
test
xchg
dec
icebp
inc
out
ds
mov
adc
lock
xor
mov
lods
cmp
dec
sbbl
and
mov
dec
flds
mov
arpl
subb
test
jl
adc
push
or
jge
mov
mov
sbb
cmp
xchg
pop
sbb
adc
test
test
test
mov
subb
jg
and
leave
movsl
insl
jl
push
jnp
adc
ffreep
dec
mov
mov
in
out
push
jno
aad
cmp
jnp
push
ret
outsb
cltd
sbb
pop
testb
ljmp
sub
mov
and
scas
dec
dec
mov
cmp
sub
mov
stc
icebp
cmpsl
xor
mov
cmp
ds
aaa
and
sbb
cmp
sbb
lret
cmp
cld
cmp
push
and
push
leave
add
push
sub
cmc
push
in
sub
test
outsl
cmc
in
xchg
sbb
orl
pop
pop
mov
out
jae
stos
sbb
push
push
hlt
pop
or
das
add
jne
ljmp
sbbl
jno
inc
jmp
xlat
icebp
mov
fbld
pop
jmp
fs
pop
cmpsb
inc
iret
inc
push
mov
mov
mov
jmp
xchg
cld
into
das
enter
pop
lret
push
repnz
sbb
cwtl
insb
int3
ljmp
add
mov
mov
xchg
inc
cmp
std
lea
repz
std
in
xor
mov
lods
pop
std
imul
shll
mov
add
jle
notb
popf
mov
pop
and
sti
sub
mov
fistps
repz
cwtl
pusha
dec
imul
xor
jecxz
fnstsw
xor
mov
mov
shlb
sarb
jbe
sti
inc
sub
or
inc
pop
xchg
fucom
xor
cmp
push
outsl
cmpsl
out
push
ficomps
jns
addr16
fstpl
ret
cmp
and
sub
loope
dec
fcoms
lds
sub
fsubl
ds
add
or
es
sar
pop
xchg
xchg
pushf
pop
out
push
shlb
fdiv
mov
mov
aam
pop
add
push
push
shll
test
out
repnz
pop
lea
adc
mov
cs
jbe
ss
cmp
push
out
addr16
scas
mov
inc
aam
jo
cmc
mov
test
jg
sarb
inc
in
test
and
mov
fbstp
into
dec
stos
ja
stos
push
push
lcall
push
test
aas
cld
xchg
dec
jge
add
pop
push
sub
cmp
decb
inc
ret
in
mov
jb
sbb
leave
mov
shrl
ljmp
jge
enter
add
ret
mov
push
and
pop
sbb
icebp
push
pushf
push
add
push
xchg
pop
xchg
scas
into
sbb
pop
add
inc
cmpl
xor
adc
inc
in
or
or
lock
sub
sbbl
adc
pusha
sbb
jge
mov
jmp
xchg
mov
adc
lods
loope
lcall
jmp
inc
gs
sbb
pop
mov
jb
sbb
aad
inc
pop
sbb
or
and
mov
iret
sub
push
shll
dec
jge
repz
fisubs
xor
roll
dec
imul
and
dec
or
data16
inc
rcll
adcl
sbb
dec
mov
pusha
repnz
or
xlat
cmp
out
xor
xor
imull
lret
shl
test
push
jmp
dec
filds
movsb
test
jne
inc
jbe
cmp
pop
add
daa
stos
cmpsl
cmp
pop
cmp
inc
and
pop
dec
in
xor
cmp
mov
out
sub
push
jmp
mov
sub
sbb
lods
loop
out
outsl
test
dec
xor
fwait
push
cmc
mov
adc
and
push
inc
sbb
mov
and
jg
xchg
push
xchg
rorb
xlat
fisttps
iret
sti
cmc
xor
cli
les
or
sbb
xchg
or
dec
aam
in
add
sbb
push
dec
call
test
jle
insl
xlat
adc
je
xchg
frstor
repz
adc
mov
pop
inc
xchg
es
lahf
mov
orl
repz
insl
xor
pop
out
test
and
orl
mov
mov
hlt
hlt
dec
mov
adc
jecxz
mov
in
mov
jne
repnz
loope
add
push
or
test
rorl
iret
inc
js
mov
push
lret
mov
loope
ss
dec
or
sub
xor
push
push
stos
popf
sub
dec
push
das
loop
jne
jnp
mov
add
xor
sub
jl
icebp
jbe
loope
into
dec
pushf
pop
pop
xchg
jge
stc
sub
testb
add
push
cld
stos
xor
cmpsl
xor
ja
gs
or
adc
mov
stos
in
mov
xor
cs
inc
mov
push
in
or
imul
push
add
jmp
aaa
and
aad
adc
test
push
jg
xor
repnz
inc
insl
outsl
sbbb
aam
lahf
inc
leave
lea
add
pop
sub
outsb
test
push
adc
mov
push
mov
cwtl
nop
movsl
xchg
jg,pt
in
pushf
jecxz
sbbb
aaa
fidivl
push
sbb
jmp
popf
jge
and
int3
cmp
dec
lret
stos
sbb
jl
lret
add
aam
push
icebp
lahf
jg
fadds
mov
adc
clc
mov
push
sbb
jne
js
and
movsl
cmp
movsb
jge
cltd
mov
stc
mov
js
mov
add
data16
cmp
xchg
movsb
push
sbb
insl
and
loopne
repz
mov
orl
mov
cli
and
inc
inc
xchg
xor
inc
adc
lock
and
sbb
push
or
outsl
rorl
adc
negb
sub
mov
xchg
pop
sub
divl
jo
mov
push
pop
in
mov
push
add
sbb
aas
xchg
insb
inc
jnp
ret
out
xchg
mov
and
push
test
stc
loop
xchg
jo
lret
adc
xor
dec
sbb
mov
xchg
or
je
xor
push
xor
loopne
scas
sub
out
xchg
notb
imul
scas
fsts
mov
sub
xor
sbb
out
and
aas
jb
mov
sub
pop
sub
scas
ss
das
xorb
ss
jmp
cmp
jne
pop
loopne
push
daa
loop
cmp
test
and
dec
mov
or
ds
test
push
add
cli
sub
stos
fwait
add
dec
loope
in
clc
push
scas
es
ljmp
push
sahf
sub
test
out
ret
pop
mov
sub
dec
adc
insb
mov
rolb
rcll
out
mov
mov
and
loop
jge
push
arpl
popf
mov
lahf
repnz
lods
mov
cmp
inc
lock
decl
xchg
mov
mov
push
xchg
mov
dec
adc
push
popf
shlb
or
xchg
add
mov
mov
clc
mov
push
and
dec
mov
outsl
mov
inc
add
loope
cmpsl
insb
sub
imull
mov
xor
mov
mov
test
stc
xor
fcmovu
clc
push
sbb
dec
sbb
mov
sub
mov
fs
or
inc
mov
push
xchg
or
fscale
push
adc
loopne
cmpsb
sub
loope
movsb
lahf
lahf
mov
cmp
fmuls
cmc
and
loopne
adc
sub
rolb
push
lea
mov
ja
xchg
icebp
dec
adc
jbe
jmp
mov
call
jne
bound
clc
iret
sbb
adc
or
inc
push
mov
cs
shll
add
inc
xchg
sahf
jl
out
adc
mov
or
dec
data16
incl
stos
xchg
mov
int
push
sub
or
subl
out
or
or
mov
in
insb
andl
lds
nop
es
jns
cmp
or
mov
aad
pushf
inc
cmpb
or
xlat
das
sbb
mov
xchg
rol
push
out
loop
xchg
stc
clc
jge
jge
not
mov
xor
iret
mov
loopne
fs
sbb
sub
dec
iret
xchg
fidivrs
repz
and
dec
jmp
adc
aad
push
repnz
mov
mov
inc
mov
pop
cmc
fs
hlt
lret
xchg
les
aam
aam
or
mov
mov
jo
dec
dec
xchg
sub
sbb
scas
outsl
bound
or
adc
enter
cmp
ds
adc
xacquire
cmpb
in
push
jnp
pop
mov
jbe
sub
cmp
mov
pop
repz
jg
jae
dec
popa
cli
sub
sti
sbb
mov
xor
hlt
xlat
or
mov
addr16
and
js
inc
mov
lcall
and
mov
jge
sar
std
lds
aam
loop
cmp
push
leave
mov
mov
mov
cs
pop
sarl
xor
cli
das
dec
lcall
mov
in
in
push
mov
xchg
add
pop
in
in
add
adc
clc
sti
fldl
in
rclb
data16
xor
dec
xchg
test
inc
xor
jo
mov
cmp
cltd
jmp
testl
push
rol
in
call
jne
add
adc
stos
lret
xchg
aas
mov
sub
pop
xlat
int
mov
fincstp
lock
sbb
loope
scas
aad
sub
mov
gs
xor
adc
insl
cmpsl
push
stos
or
imul
call
xor
rorb
in
xor
inc
pop
cmp
lret
mov
test
cmp
cs
cmpsb
dec
xor
les
stos
hlt
cwtl
cltd
sbbl
push
int3
int
jb
jl
xchg
inc
insl
xchg
push
decl
xor
push
lret
jle
scas
xor
mov
mov
dec
fildll
pop
dec
cmpsl
and
dec
xchg
sbb
xor
lds
loopne
jae
lcall
hlt
subl
fxch
iret
xchg
aas
fmull
jmp
or
push
cmp
pop
mov
leave
or
mov
jp
aad
arpl
jae
andl
mov
psubb
imulb
adc
stc
cmp
outsb
jmp
movntq
out
addl
jae
scas
adc
jb
aas
push
dec
in
sub
hlt
mov
rorb
lds
inc
inc
rolb
jmp
mov
sub
ss
iret
call
push
lods
push
inc
or
adcl
pop
mov
xchg
movl
add
loopne
jo
int
subb
sbbb
int
xor
shl
dec
jnp
fsub
js
inc
in
xchg
lds
or
push
mov
int3
loop
mov
push
stos
loope
lods
jl
pop
cld
out
insl
ret
pop
push
fnstsw
pop
sub
mov
mov
adc
shr
lcall
lods
cmp
out
cmpsw
push
mov
iret
cld
jb
mov
punpckhwd
push
mov
test
repnz
je
mov
dec
push
sbb
popa
adc
in
shll
stc
popf
fdivrl
sbb
std
outsl
imul
push
movsb
out
mov
mov
pusha
aad
dec
and
jge
cmpsb
mov
rcll
test
or
mov
sti
xor
and
mov
xor
test
sub
inc
outsl
pusha
jne
mov
pop
pop
jge
sahf
lods
or
std
icebp
xor
pusha
out
add
nop
lcall
mov
dec
insb
divb
fidivs
cmp
add
dec
repz
mov
sarl
pop
lahf
enter
nop
add
loope
xor
dec
or
push
ljmp
sub
insl
ja
push
mov
inc
dec
stos
call
test
mov
xchg
fildl
mov
imul
xor
scas
or
int
gs
pop
jp
inc
fbld
sub
imul
mov
cmp
lahf
in
leave
lcall
lahf
pop
aad
pushf
dec
push
into
sbb
push
pop
adc
lock
scas
inc
dec
add
sbb
enter
stos
push
dec
movsb
jmp
lret
pushf
sbb
lods
xchg
fisttpl
and
lods
ljmp
into
push
mov
repnz
je
push
mov
pop
leave
int3
ret
push
and
dec
mov
and
add
ds
and
xor
jle
xchg
sbb
dec
inc
aas
jl
call
out
fdivrl
and
push
dec
mov
push
insl
pop
bound
push
insb
dec
stos
pop
inc
addb
sub
xchg
int3
xchg
mov
xchg
adc
es
jg
mov
sbb
arpl
lcall
bnd
dec
add
aas
cwtl
xor
cmp
stos
repz
mov
pop
lret
jo
subl
arpl
ljmp
dec
pop
sti
sub
in
sbb
adc
lock
pop
stc
lahf
mov
jmp
xchg
ja
cmc
sbb
clc
pop
popa
jl
xor
gs
cmp
lahf
call
es
fcmovu
xor
lods
xor
in
outsl
nop
stos
lods
jne
scas
and
decb
in
ror
lds
jbe
add
scas
push
xchg
ret
push
pop
mov
sub
sub
insl
int
shl
movb
mov
mov
js
and
outsl
pop
pop
or
mov
sbb
jns
or
stos
ret
push
dec
subl
dec
sbbl
mov
pop
dec
fnstenv
add
inc
sbb
arpl
cld
adc
sbb
test
sub
out
stc
adcl
stos
sbb
mov
sbbl
inc
notb
mov
xchg
or
into
cs
cmp
or
in
daa
jl
mov
xchg
sti
inc
cmp
jae
or
xor
leave
imull
pusha
fstl
sbb
imul
scas
push
std
pop
dec
mov
in
jne
xor
mov
push
cmp
and
jnp
ret
adc
clc
jle
hlt
mull
test
lcall
push
es
xor
adc
data16
or
adc
jmp
push
rorl
fisubrs
push
ja
nop
in
mov
cli
adcb
sti
into
xor
push
ljmp
enter
arpl
sti
pop
and
addb
fcmove
or
xor
mov
mov
in
int
inc
xor
ficoms
xlat
push
or
dec
or
cwtl
sub
inc
ret
xlat
xchg
aaa
xchg
ret
push
jb
mov
adcl
jns
icebp
inc
push
dec
dec
mov
mov
or
pop
mov
ret
pushf
imul
mov
push
out
mov
jg
pop
aad
mov
insb
pushl
ljmp
or
and
faddl
push
mov
stos
sarl
sub
jge
mov
sub
cltd
cwtl
xchg
repnz
or
aam
and
jmp
inc
inc
xchg
xor
fsubl
aad
xor
bound
cmpsb
dec
pop
or
out
pop
xchg
int3
mul
adc
mov
push
hlt
cmp
aad
dec
sbb
xor
push
mov
pop
push
dec
jne
dec
mov
loop
xchg
lock
fimull
mov
push
push
jne
pushl
outsb
xor
addr16
shlb
je
pop
or
es
and
pop
das
inc
lcall
test
je
inc
lcall
sbb
push
sbb
bound
pop
rorb
mov
movsl
push
push
popf
nop
cmpsb
out
stc
pop
dec
sub
or
mov
xchg
loop
cmpsb
mov
mov
mov
dec
adc
xchg
and
add
and
sub
mov
push
mov
insb
or
sbbl
mov
iret
or
xchg
adc
xchg
mov
or
scas
dec
dec
imul
mulb
popa
stc
dec
push
popf
mov
add
mov
xchg
inc
ret
xor
pop
mov
xchg
xor
cwtl
imul
jle
mov
nop
mov
push
dec
add
lea
dec
pop
in
pop
xor
imul
or
cmp
faddl
mov
xorl
xchg
jo
mov
call
add
shlb
adc
xor
mov
and
data16
imul
mov
fidivl
or
cld
push
push
mov
mov
popa
xchg
dec
je
jno
inc
int
mov
xchg
addr16
inc
gs
sbb
jmp
inc
arpl
addl
das
sbb
dec
sub
add
push
stos
mov
dec
adc
insl
dec
push
pop
jmp
pushf
xchg
jge
or
mov
cmp
or
mov
out
mov
or
jg
shl
cmp
add
pop
fcomi
es
xor
add
dec
add
jecxz
ljmp
lods
sar
xchg
cmc
push
ss
jle
jo
sub
mov
cmp
and
push
jns
nop
imul
dec
mov
adc
mov
lahf
or
lea
cli
xchg
pop
add
jae
push
outsl
jbe
adc
xchg
cmp
cmp
jo
xchg
inc
loope
and
movsb
cwtl
push
mov
dec
lods
fsts
daa
lea
sub
or
std
in
sub
push
push
pop
mov
add
ret
add
repz
ret
test
aas
ds
mov
jmp
sbb
lret
and
das
out
sbb
out
adc
jecxz
outsl
jl
fcmovbe
xchg
sbb
aaa
and
sbb
jg
inc
nop
and
and
test
jbe
inc
mov
lea
scas
mov
mov
call
xchg
jne
jmp
xor
movsb
jae
add
fbstp
and
inc
cmp
xor
mov
mov
push
xor
sub
daa
aas
mov
dec
dec
mov
push
push
js
addr16
rolb
xlat
cmp
xchg
mov
inc
out
xlat
rolb
sub
mov
jo
cmp
push
mov
add
push
cmp
mov
lret
push
jns
mov
add
jl
aas
dec
out
lods
xchg
xchg
mov
mov
loop
sarl
pop
fwait
enter
loop
mov
sub
xor
push
xor
fwait
test
and
and
sub
pop
xchg
rcl
mov
push
sbb
xchg
popf
mov
jo
arpl
scas
fidivrl
pop
shrb
movsb
pusha
fiaddl
xor
jecxz
clc
push
arpl
xchg
fcomi
popa
call
and
shrl
adc
mov
leave
dec
call
js
mov
into
pushf
and
and
xchg
cmc
rcrl
icebp
int3
mov
jecxz
addr16
fiaddl
or
pop
add
sub
hlt
and
sub
stos
daa
dec
sub
sahf
loope
daa
in
xchg
mov
stc
mov
in
push
test
jnp
push
adc
addr16
js
inc
mov
dec
outsb
iret
cmc
enter
adc
cli
fdivrs
jl
sbb
lret
daa
push
in
outsb
push
lahf
mov
push
push
scas
inc
mov
cmp
sbb
scas
mov
mov
adc
ds
sbb
xchg
jl
lret
pop
or
arpl
loope
jb
stos
jmp
cmp
jp
mov
rorl
jg
movsb
cmp
lahf
mov
dec
fadd
mov
xchg
ficomps
ja
inc
imul
daa
loopne
dec
ss
push
movsb
imul
movsb
xor
outsb
or
loop
xchg
fisttps
movsb
and
mov
ja
mov
pop
xchg
pop
testl
jb
mov
and
mov
pop
mov
mov
imul
mov
add
xor
stos
pop
pop
jl
ret
lret
add
loope
repnz
dec
roll
popa
popa
inc
sub
push
and
cmpb
scas
jno
and
lahf
mov
lock
fld
push
addr16
xchg
or
xor
sbb
lods
mov
pop
dec
cmp
push
sbb
mov
in
xlat
or
xor
test
imul
adc
cs
sbb
scas
lea
dec
xor
jl
inc
push
push
push
push
out
ss
sub
lods
add
into
js
mov
cltd
jae
sbb
mov
inc
lods
rcrl
aas
addr16
or
inc
cmp
add
xchg
ret
inc
adc
cmp
lock
loopne
ficoml
fucomp
outsl
out
dec
push
sbb
pop
pop
sbb
add
jg
repnz
sub
sub
inc
push
fsubl
sbb
pop
repnz
ss
bound
arpl
sbb
jmp
lods
fbstp
movsb
xor
push
inc
js
lret
imull
imul
pop
stc
mov
aas
cmp
inc
sbb
outsb
mov
testb
rol
daa
push
bound
outsb
inc
push
call
xor
jns
xchg
mov
add
xchg
cmp
cmpsb
jnp
cmp
addb
push
mov
inc
dec
cltd
xchg
jl
data16
push
or
mov
adc
sbb
popl
jge
jle
inc
fnstenv
fs
fwait
sub
mov
adcb
pop
or
inc
fwait
xchg
test
mov
push
filds
in
lods
jo
pop
sub
fdivrl
subl
xor
outsb
jecxz
insl
faddl
dec
inc
or
xchg
mov
ds
jmp
loopne
aam
or
rclb
mov
fdiv
sahf
js,pt
inc
jne
mov
mov
into
jmp
ret
enter
jecxz
jb
shll
and
sub
sub
leave
iret
jp
jbe
mov
int
lret
in
cld
addl
enter
clc
jne
push
mov
imul
inc
cmp
sbb
xchg
pop
push
shlb
or
mov
jge
js
sub
fisubrs
popf
enter
cld
lock
pop
loop
scas
xchg
sbb
and
int3
in
xor
imul
dec
dec
movsb
into
adc
lret
or
sar
pop
jmp
push
dec
shld
mov
pop
movups
push
push
xchg
xor
jo
push
push
xchg
mov
lahf
or
and
js
push
jg
dec
mov
ret
jp
adc
lea
clc
push
and
int
adc
movsl
repnz
mov
dec
in
cmp
jne
popf
xchg
int3
jbe
in
push
outsl
gs
mov
aas
jnp
xor
and
jmp
icebp
test
out
inc
xchg
cmpl
lret
mov
mov
and
dec
dec
pop
sub
inc
pop
or
data16
ret
loopne
out
loope
ret
mov
mov
leave
mov
out
mov
les
inc
dec
ret
sbb
jg
in
fcmovnu
mov
movl
add
js
ja
scas
jo
inc
mov
ret
xchg
pop
jmp
push
dec
fcompl
movsl
push
in
ret
jmp
cli
jl
repnz
insl
incb
int3
ficoms
dec
rcl
and
lret
sub
lock
or
decb
pop
inc
push
mov
dec
rcll
jns
test
adc
mov
out
xor
mov
dec
xlat
mov
xchg
outsb
mov
xor
push
jl
js
push
pop
cmp
loop
sbb
dec
mov
pusha
push
in
call
mov
cwtl
andl
insl
sbb
orb
cs
int
subb
cwtl
xor
mov
ja
adc
jecxz
movsl
add
add
jbe
loopne
push
inc
mov
jb
lcall
ret
ret
cmpsb
push
mov
or
call
test
test
sub
outsb
hlt
enter
pop
icebp
enter
cmp
sbb
int
test
adc
arpl
pop
cli
sahf
jnp
lret
xor
xor
push
ds
sub
push
fdivs
lahf
aam
adc
adc
mov
lods
push
mov
sub
test
sub
cmc
dec
adc
mov
jns
clc
test
in
sub
adc
fmull
xchg
mov
test
ja
shl
or
or
inc
std
pop
pop
push
mull
repnz
push
in
jmp
cltd
dec
outsl
mov
and
push
fmull
mov
addl
sti
xlat
pop
push
and
add
dec
ds
jl
imul
in
movsl
cmp
inc
jp
nop
push
mov
test
aam
add
sbb
xchg
sahf
add
mov
cmpb
dec
gs
mov
test
mov
xchg
push
cmpsl
cmpsb
rcrl
mov
or
sbb
jge
sub
jge
mov
into
insb
loopne
push
pusha
inc
hlt
fwait
imul
adc
movsb
xchg
push
lds
hlt
lret
out
stc
xchg
pop
cmp
rcr
dec
insb
popf
mov
out
xlat
repnz
stc
or
rorb
xchg
push
xor
sbb
pop
inc
rcrb
jb
outsl
jmp
pusha
rcr
aad
sub
cmp
into
dec
push
jno
inc
cmpsb
hlt
insb
inc
sub
push
jmp
push
pop
inc
mov
or
addr16
sbbl
sub
ud1
xchg
adc
mov
cmp
adc
inc
lret
xchg
mov
aad
lahf
inc
int3
imul
imul
das
rcl
or
in
mov
insb
add
int3
mov
test
les
pop
mov
je
loopne
sbb
push
push
or
mov
js
lods
sbb
les
mov
jge
repz
pop
int3
iret
jmp
dec
add
add
add
fwait
addr16
push
lock
ljmp
jmp
push
enter
clc
aas
das
aad
sbb
outsl
lock
pop
push
cmp
adc
pushf
cs
sub
mov
fnstsw
test
sti
sub
aas
rolb
fstcw
insl
shlb
xor
enter
shlb
es
mov
lcall
add
sub
filds
shrb
push
std
popf
pop
inc
lods
in
dec
fdivl
hlt
rclb
adc
out
push
call
xor
xlat
in
push
test
jmp
fucompp
out
lea
or
pop
int3
add
mov
addl
js
mov
pop
enter
leave
in
int
xchg
in
loope
cmpsl
jne
mov
sbb
les
push
mov
inc
pop
cld
sub
movsl
fadds
push
mov
filds
inc
fldl
in
mov
dec
ret
inc
ss
adc
out
shll
imul
jo
mov
mov
mov
fcomps
movsb
call
popa
out
lahf
cmp
cmp
sbb
mov
add
jp
out
shlb
gs
xchg
push
jne
sub
jb
xor
js
xor
sub
fcomi
sub
ja
xor
jb
xor
cld
mov
int
pop
inc
fs
sbbl
fsubrl
pop
test
mov
cmp
mov
push
test
jo
lcall
dec
pop
mov
cmp
cmp
jl
rcll
ljmp
pop
ljmp
xchg
loope
push
sbbl
add
xchg
out
mov
push
daa
add
mov
xchg
inc
cmpsl
test
jp
shrb
test
dec
adc
fdivrs
xlat
pop
xor
je
popf
mov
std
mov
out
scas
into
sbb
inc
push
mov
add
cmp
in
les
mov
push
dec
add
loopne
nop
ret
mov
outsb
adc
das
rclb
gs
test
fs
sub
je
pushf
js
inc
add
dec
xor
in
sbb
sub
shll
aad
sti
rcl
sub
notb
leave
lret
dec
fdiv
and
shr
dec
xorb
mov
mov
cmpsl
mov
js
and
es
les
pop
sub
add
ror
sbb
outsl
lea
ficompl
jecxz
sarb
cmp
rorb
pop
sbb
mulb
cmp
arpl
dec
xor
lret
push
sub
pop
cwtl
push
enter
xchg
sub
inc
popa
sub
sub
scas
dec
incl
sub
sub
jbe
int3
cmp
xor
push
les
shrb
mov
or
orps
jbe
jge
mov
call
pop
jbe
adc
hlt
incl
cmp
mov
jo
ja
lret
jo
leave
arpl
xor
sbb
out
xor
fdivs
fnstsw
xlat
pushl
flds
mov
lods
mov
adc
rcrl
lcall
push
adc
add
in
movsb
xchg
xchg
dec
push
rcll
add
mov
or
mov
add
add
mov
push
icebp
push
push
in
mov
cwtl
xchg
out
push
aad
xchg
sbb
add
outsl
push
out
je
sub
mov
fsub
dec
jle
jae
pop
sar
f2xm1
inc
mov
vgatherdps
loop
jo
into
int
rorl
cmpsl
mov
cmp
mov
inc
ss
pushf
fsubr
stc
fbld
leave
add
sahf
loope
jecxz
mov
adc
and
pop
and
les
xor
lods
imull
and
rclb
cmp
loop
or
imul
or
add
push
std
clc
push
xchg
lock
xor
lods
std
pop
outsl
cmp
mov
jmp
shll
test
jae
xchg
cwtl
leave
push
xor
popa
xor
add
jge
xchg
adc
lock
dec
insl
xchg
mov
loope
push
popl
imul
and
jg
rcrl
imul
fcmove
cmpl
cmp
mov
shlb
test
test
sub
mov
cmp
sub
add
push
icebp
inc
cmp
inc
xchg
xor
mov
test
insb
sub
mov
es
pop
dec
sub
sti
fcomps
clc
lds
pop
pop
mov
or
push
and
mov
fdivrs
cmp
and
mov
ror
test
icebp
cmpxchg8b
xlat
push
xchg
inc
cmp
sbb
jge
lcall
aaa
stc
jnp
into
push
lahf
lods
jmp
bound
dec
out
xchg
and
xor
lods
xor
daa
jecxz
inc
xor
adc
mov
xor
shlb
adcb
ret
addb
pop
mov
sbb
pop
in
jae
lahf
fcmove
cmp
push
in
testl
xchg
sbb
dec
push
xchg
mov
int3
hlt
push
mov
call
adc
and
pop
dec
add
lods
xor
mov
jae
out
test
add
cmp
adc
stos
stos
mov
sub
arpl
jne
or
testb
fisubl
enter
scas
aas
iret
dec
popa
cli
inc
sbb
mov
push
gs
je
or
and
shl
sub
imul
stos
in
push
and
and
dec
jno
nop
outsb
pop
nop
sahf
pop
jae
xor
mov
pushf
cmp
shll
xor
push
int3
or
sahf
hlt
std
scas
cmc
rcrb
jg
xor
leave
sub
jae
outsl
cli
mov
gs
dec
scas
data16
xor
repnz
shlb
xorb
popf
pop
pop
das
mov
adc
inc
mov
imul
dec
inc
les
mov
mov
rorb
jb
lock
inc
sbb
stos
pusha
pop
shlb
pop
pushf
cmp
fucomi
pop
int3
fcmovb
xor
xchg
sbb
inc
adc
pop
pop
das
add
js
test
jae
int3
fsubrl
cmp
mov
shll
ja
inc
add
and
data16
fs
dec
inc
xor
call
adc
push
add
mov
push
xor
in
popa
cmpsb
icebp
add
pop
jl
dec
jne
aaa
arpl
lods
push
lods
sub
mov
stos
xchg
loope
test
add
rcrl
fdiv
xor
lods
arpl
xlat
js
mov
cmp
mov
aas
cmpsb
js
and
jl
sub
mov
sub
xchg
repnz
lahf
pop
sub
dec
dec
and
inc
push
ret
xchg
inc
and
xorl
jns
fwait
add
xlat
dec
pop
inc
jbe
stos
movl
cmp
les
loopne
dec
mov
push
mov
cmp
scas
fiaddl
sbb
mov
ret
ljmp
lods
add
lcall
ret
jmp
outsb
cs
mov
inc
jns
push
push
outsb
repnz
pop
cld
xchg
xor
in
movsl
leave
out
mov
jb
push
cld
stos
sbb
addb
and
mov
and
adc
xchg
mov
xchg
je
xchg
ret
adc
clc
cmp
orb
sbb
sub
xchg
xor
andl
sahf
xchg
fdivrl
mov
push
pop
lods
jne
movsb
pop
shrb
aaa
je
arpl
je
cmpsl
adc
fnstsw
mov
inc
pop
push
pop
mov
ja
mov
inc
or
and
out
repz
fwait
cmpsb
sub
xor
mov
call
in
add
mov
inc
and
sbb
xchg
imul
test
cmc
mov
push
rcrb
sbb
push
sub
sub
push
lods
ret
jecxz
call
dec
out
jge
or
sub
jp
xorl
xor
pop
add
aad
xchg
xchg
push
and
cs
jae
stc
int3
aad
cmp
mov
dec
push
adc
pop
sbb
bound
pop
pop
iret
shrb
movl
pop
jmp
dec
adc
pusha
cmp
cld
lods
sti
mov
xor
xor
out
shrl
push
mov
lcall
pop
je
xchg
cmp
cmp
cmp
mov
clc
pop
dec
test
cmova
ret
pusha
cld
xor
cmp
mov
addr16
sbb
repnz
push
pop
test
sbb
mov
in
daa
jo
dec
cmp
and
jmp
cmpsl
je
pusha
lcall
pushf
imul
cmc
cmpsb
mov
test
hlt
mov
int
and
cmp
cmp
fstp
fs
mov
cmp
mov
lods
mov
push
sbb
sub
int3
pop
jle
sahf
cmp
adc
sbbb
nop
es
xor
adc
stos
push
outsb
or
es
xchg
outsb
xor
xor
mulb
mov
push
mov
inc
dec
mov
xchg
lahf
xchg
leave
movl
add
aas
sub
mov
shlb
jb
push
in
call
inc
xor
inc
adc
push
cmp
addb
out
pop
push
test
xchg
imul
aam
lods
cmp
push
lock
lret
lea
cmpsb
lahf
scas
flds
sub
push
ja
enter
aad
insb
jp
push
pop
mov
daa
loope
test
push
xchg
xchg
mulb
mov
and
add
cltd
subl
addr16
ret
lahf
fistps
jg
into
psubsw
lret
cmp
dec
decl
stos
xchg
jno
subl
negb
cwtl
imul
and
or
pop
xor
aam
test
leave
jns
dec
cmp
jmp
push
rolb
xchg
stc
mov
pushf
adc
xor
ja
loop
insl
adc
pop
ja
scas
lret
xchg
rclb
mov
mov
pop
out
popa
sbbl
leave
mov
jb
sub
psrlw
das
rol
jp
dec
loop
cmc
jl
xor
testb
and
mov
or
sub
xchg
imul
clc
jb
rolw
sbb
lods
pop
mov
das
je
push
lock
pop
mov
in
ja
loopne
xchg
mov
jnp
popa
les
aas
adc
scas
and
push
fnclex
sub
jno
inc
and
mov
jmp
sub
or
push
sub
mov
mov
add
inc
lods
xchg
loopne
insb
cmp
subb
cld
cld
cmc
pop
lahf
inc
enter
pop
ja
xor
sar
insl
ja
cmp
mov
sbb
insb
and
ret
hlt
imul
dec
pop
jb
cmp
and
and
mov
or
lret
dec
fsts
inc
add
xchg
cmp
inc
int3
and
data16
pop
or
cmp
pop
cwtl
das
mov
int3
add
push
mov
push
movsl
and
dec
popa
jle
xor
sub
xchg
shrb
sub
mov
clc
push
das
stos
fsubs
in
nop
jmp
jmp
mov
cmp
xchg
cmc
shrb
imul
xor
aaa
or
xlat
test
sub
push
rolb
xchg
jns
mov
xchg
insl
cltd
xchg
sbb
mov
add
cmp
mov
xor
addr16
sub
add
jb
push
xor
push
pop
es
lods
lods
ret
add
fisubrs
pop
loope
mov
xchg
push
jns
ret
mov
es
mov
pop
lods
pop
mov
cmp
or
jnp
and
or
pop
filds
mov
arpl
aas
into
cmp
or
sbb
pop
cmc
xor
nop
jp
sbb
cmc
ss
adc
or
orl
dec
xor
loope
inc
test
popa
sbb
xor
cmp
cmp
or
daa
add
call
adcb
je
mov
xchg
pop
push
push
pop
push
push
push
sub
inc
insb
cmpsb
adc
sub
ja
and
jp
ja
jle,pt
in
mov
aas
dec
ja
sub
inc
and
adc
cmp
cltd
sbb
dec
xchg
mov
and
iret
fsubr
cmp
pop
mov
rcr
cmp
mov
inc
xchg
scas
shll
add
mov
dec
push
and
cmc
push
cmp
sti
jo
sub
inc
cmp
push
push
sub
jno
ss
adc
lds
ja
adc
xor
mov
push
out
cmp
insb
xor
dec
js
or
and
jp
sbb
mov
loopne
sbb
push
cmp
call
jg
mov
cmpsl
sub
std
inc
inc
aaa
jno
jno
xor
mov
in
fs
fcompl
sbb
add
fidivl
les
pop
inc
arpl
add
test
mov
fwait
inc
out
push
push
or
inc
out
fs
insl
cmpsb
xchg
shll
xchg
out
jp
outsb
pop
lock
sbb
movsl
or
cs
cmc
jl
cwtl
fwait
lret
and
je
adc
push
outsl
inc
arpl
jecxz
iret
and
stos
out
adc
stos
mov
push
cmp
decl
stc
push
daa
lcall
js
pop
mov
jns
pushf
aam
stc
jecxz
push
out
sbb
std
xor
cmp
imul
mov
adc
leave
pop
popf
mov
popa
jo
and
sub
sub
shll
jno
out
outsb
adc
or
dec
int3
mov
stos
addr16
add
lds
inc
lds
and
enter
xor
push
incl
or
out
adc
lea
dec
push
mov
popf
ds
popl
js
imul
inc
xchg
aaa
popf
pushf
shll
in
xchg
jb
mov
push
dec
push
jmp
mov
and
shll
seta
push
xchg
jno
pop
mov
xchg
cmp
cmp
jp
sub
mov
jp
int
inc
cli
mov
cmc
dec
lods
pusha
in
xor
xchg
mov
pushf
jno
jne
pop
sub
push
sbb
in
aas
mov
in
mov
inc
add
mov
push
stos
cmp
int3
jo
data16
xor
xchg
fdivrl
lds
ror
data16
dec
out
adc
pop
and
and
adc
pop
dec
nop
je
add
neg
xchg
fimull
int
in
xchg
push
insb
gs
xorl
sbb
loope
pop
movsl
xor
pop
push
jle
push
mov
pop
inc
test
sbb
cli
fistpl
out
pop
push
xorb
mov
add
jno
insl
dec
mov
call
scas
cmovs
adc
hlt
pop
inc
cld
popa
frstor
sub
cs
out
jl
mov
cmp
sbb
mov
jmp
xorb
sahf
cmp
jnp
jge
mov
arpl
cli
cmp
push
jp
movsl
and
inc
push
ja
xlat
and
dec
adc
or
xor
movsl
dec
lds
pop
cld
in
cmp
repnz
sub
and
sahf
lret
xlat
ss
sbb
xchg
out
add
adc
cmp
xchg
mov
jl
das
popa
mov
shlb
faddl
sub
jns
add
sbb
ret
sbb
addr16
es
mov
dec
and
mov
inc
into
xor
test
add
mov
in
lcall
xchg
cmp
je
leave
jmp
cltd
iret
orl
out
add
mov
mov
test
cmpsl
scas
pop
inc
sub
and
popa
dec
in
xlat
and
cmpsl
xchg
sahf
in
sbb
rcr
mov
cld
es
push
push
es
jp
sbb
cs
sbb
mov
es
subl
test
ljmp
push
sbb
je
or
mov
cmp
lret
arpl
ret
add
jno
pushf
lea
mov
mov
test
sub
jb
adc
cmpsl
dec
mov
xchg
cmp
cmc
test
les
dec
xchg
cmp
scas
es
daa
sti
sahf
pop
adc
not
in
xchg
cmp
ret
sbb
push
pushf
pcmpgtb
cmpsb
pop
push
or
inc
push
or
cmp
or
xor
imul
into
in
mov
cltd
and
cmpsb
push
xor
rcl
negb
faddl
pop
sahf
ljmp
add
sbb
push
push
add
adc
dec
mov
push
stos
mov
xchg
out
cltd
mov
loop
cmp
outsl
rclb
jmp
push
mov
ret
adc
adc
mov
dec
sbb
cli
nop
cmpsl
aas
jl
inc
jae
icebp
jo
jl
pop
mov
sbbb
push
cmp
adc
data16
mov
sbb
jmp
dec
icebp
ljmp
sbb
repz
lret
in
inc
sbb
and
push
push
adc
cltd
pop
mov
or
sub
sarb
int
mov
es
pusha
jge
cmp
int3
je
scas
sbb
jns
popf
mov
cmpl
enter
into
insb
leave
clc
xor
xor
stos
mov
pop
mov
push
adc
jle
mov
js
mov
jns
es
lods
dec
and
repnz
dec
adc
add
insl
or
mov
insl
in
push
push
out
adc
div
lods
imul
data16
jle
and
rorl
loop
hlt
repnz
and
sbb
xorl
xchg
or
jge
jb
jmp
pop
cmp
lret
pop
jecxz
inc
pop
mov
jmp
fistpl
lock
ja
gs
xor
int
fs
xchg
imul
scas
add
loope
aad
mov
dec
rol
xor
mov
outsl
dec
mov
inc
je
push
xor
jno
out
jp
mov
les
stos
jle
cmpsb
or
cmc
clc
dec
lret
xor
sbb
push
xlat
leave
call
adc
std
dec
jbe
or
and
lods
aaa
cwtl
jl
jbe
shll
xchg
add
bound
cmp
push
insb
jmp
stos
aad
in
sub
insb
add
jnp
lret
dec
std
cmp
in
push
aaa
daa
fadd
add
ja
and
mov
mov
stos
sub
fadd
jne
mov
add
aas
inc
pop
mov
xchg
adc
aam
dec
call
push
dec
fcoms
stos
fbld
insl
cmp
das
mov
lea
sub
cmp
mov
push
lcall
jg
cmp
std
stos
push
loope
xchg
xchg
push
pusha
mov
out
fisttpl
xchg
xor
jns
push
mov
das
push
add
jle
mov
mov
popa
and
inc
sbb
mov
in
add
repnz
dec
inc
or
mov
leave
adc
frstor
in
les
mov
roll
dec
push
mov
aad
xorl
out
idivb
filds
and
loopne
dec
add
xchg
sub
add
stos
popf
mov
add
pop
sbb
or
jo
iret
pop
push
cmp
jae
shr
pop
mov
mull
inc
inc
cmpsl
xorl
and
gs
xchg
rcll
adc
cmp
xor
lods
mov
in
ds
cmp
aad
iret
cs
mov
pop
fmull
add
pand
ja
cltd
sbb
pop
jmp
pop
push
jbe
push
jmp
lds
shll
shlb
scas
enter
lret
popa
call
imul
int3
pop
mov
pop
aam
inc
pushf
pop
dec
jbe
pop
mov
rclb
xor
fistpl
adc
test
mov
add
fcomps
adc
mov
mov
repz
push
fwait
imull
dec
ret
sbbb
mov
shrl
into
pop
fwait
movsb
mov
fldl
nop
pop
sbbb
movsl
sbb
les
aad
jbe
pop
insb
or
into
xor
inc
mov
mov
pop
inc
ds
jb
push
fwait
and
push
inc
inc
sbb
add
lahf
out
popa
jg
xchg
fsubl
mov
inc
hlt
pop
mov
addb
jmp
movsb
dec
dec
inc
jb
sub
jp
mov
sarb
lock
stos
enter
loope
sbb
dec
mov
push
fisttpl
dec
lahf
add
mov
jg
fstl
addb
ja
ret
and
and
push
xor
mov
decb
es
insb
shrb
cmpsb
inc
or
dec
xchg
jnp
mov
shlb
int3
sbb
pop
mov
mov
divl
pop
jnp
mov
rcrb
jb
inc
fdivs
jno
push
loop
repz
lock
inc
fmuls
imul
push
mov
pop
lahf
xchg
and
mov
xchg
lods
jnp
ljmp
outsb
jnp
fstps
inc
jge
xor
xor
movsl
sub
xor
mov
insb
scas
jmp
jg
aaa
cld
xchg
inc
js
inc
dec
dec
mov
cmp
pop
lcall
adc
sub
xor
sbb
cld
jb
aam
sbb
push
loope
cli
cltd
imul
pop
jnp
mov
sbb
imul
sbb
jg
xlat
xchg
mov
jmp
cld
outsl
inc
cmpsl
pushf
and
dec
stos
inc
out
mov
popa
sbb
je
push
test
pop
rcrb
je
sub
add
ja
cmp
xlat
sbb
pop
pusha
jo
stc
jae
lret
je
fwait
adc
cwtl
mov
xchg
pop
xor
lock
pop
les
dec
push
aaa
cs
rolb
xchg
in
dec
sub
idivl
mov
out
push
mov
mov
push
icebp
gs
xchg
sub
mov
mov
xchg
sbb
pop
fstps
and
rcrl
mov
aad
js
pop
test
mov
jns
pop
push
mov
adc
out
xchg
fidivl
rolb
popa
in
cmp
add
push
iret
test
inc
jecxz
sub
out
jnp
cmc
lods
lods
mov
push
rolb
push
adc
imul
fisubs
lods
loopnew
mov
scas
test
and
nop
repnz
in
mov
mov
and
and
leave
and
leave
scas
mov
gs
fucom
xor
and
ds
das
jmp
cmp
pop
in
insb
jnp
inc
int
dec
mov
negl
cmp
push
or
cmp
into
testb
clc
test
xchg
jecxz
loope
push
cld
les
pop
or
loopne
sub
repz
data16
adc
and
jg
pop
fstpt
cmp
mov
cmpsl
pop
emms
aas
mov
icebp
int
inc
jae
mov
pop
cmpsl
lods
ss
jg
sbb
dec
mov
cmp
or
shll
je
dec
cmp
push
insb
jae
fisttps
mov
push
fnstcw
sub
jge
and
inc
xlat
ljmp
in
sub
movntps
jle
pop
jmp
xchg
int
pop
dec
into
les
inc
lods
pop
mov
and
scas
mov
rorb
lock
adc
icebp
bound
mov
vmread
xor
gs
cmp
dec
dec
hlt
cmp
adc
xor
pusha
adc
xlat
mov
lods
pusha
jg
cmovno
wrmsr
push
push
push
addr16
and
dec
push
push
hlt
pop
popa
pop
call
mov
cltd
mov
daa
jo
call
fimull
inc
inc
outsb
cmp
inc
inc
pop
into
mov
adcb
dec
jne
mov
xor
fsubrs
xlat
out
lahf
push
sub
sub
lret
mov
rclb
push
ja
rcl
lret
pop
mov
outsb
xor
je
rclb
jle
or
sbb
fwait
adc
inc
xlat
ljmp
roll
or
adc
dec
dec
jno
pop
inc
leave
dec
adc
mov
sub
push
sub
test
pop
imull
mov
pushf
push
mov
call
jns
xorb
fcompl
incb
xor
das
in
sbb
jg
scas
xchg
imul
shlb
stc
or
pop
das
imull
and
iret
xchg
pop
outsl
pusha
pop
inc
mov
divb
movsb
adc
push
pusha
call
int3
jmp
insb
mov
push
and
push
aas
inc
xor
in
push
fsub
lods
push
sbb
sbb
test
out
dec
push
out
inc
push
mov
bound
cwtl
xlat
mov
mov
pushl
aam
movsl
mov
push
mov
mov
out
outsl
lea
xor
xchg
push
shlb
or
int
ja
cwtl
mov
pushf
push
popf
dec
push
pop
pop
sub
and
popf
icebp
mov
xchg
dec
imul
enter
repz
inc
push
arpl
mov
cmpsb
data16
cmp
and
inc
push
mul
enter
leave
ficomps
sar
lock
cmpsb
adc
cmp
cmp
xchg
inc
push
in
mov
mov
loop
loope
mov
lahf
dec
cmp
sbb
out
push
mov
out
xchg
out
rcrb
xor
test
ret
mov
shl
and
xor
ss
add
insl
lods
xchg
je
aaa
les
cmp
xchg
in
mov
mov
push
xlat
mov
dec
sub
xor
repz
xchg
mov
cmp
enter
lds
jmp
mov
rcll
aad
test
rorl
stos
ds
and
les
add
sub
mov
inc
adc
sub
loope
adc
adcb
xor
repz
pop
xor
pushf
clc
es
cmpsb
sarl
scas
icebp
std
in
jl
fldt
insl
cld
mov
and
push
lcall
test
inc
fs
test
dec
sub
or
outsb
xchg
lds
xor
adc
pop
sahf
insb
xchg
pop
mov
negb
mov
popf
adc
addr16
jnp
mov
popa
das
outsl
mov
jmp
stos
fimuls
push
in
jnp
gs
adc
sbb
mov
adc
lret
fimuls
andl
or
shr
jge
xor
pushf
movl
jo
push
pop
dec
xchg
stos
xchg
or
aas
movsl
in
pop
shll
dec
mov
shrb
rclb
cli
xchg
cs
nop
mov
push
pop
loopne
jge
lods
mov
das
sar
sbb
push
sbb
in
cwtl
jp
cmp
ret
cmpsb
lods
or
aaa
xor
out
es
fstpt
xorb
mov
jns
out
mov
push
loope
fimuls
xchg
pop
cli
add
inc
mov
xchg
mov
mov
mov
movsl
out
or
cwtl
js
int3
inc
stos
mov
shl
push
dec
sbb
rcrb
scas
mov
cmc
mov
add
inc
cmp
cmpsb
rcr
loop
aad
lock
shrb
shlb
jmp
stos
aam
jecxz
ss
inc
mov
and
and
mov
jecxz
mov
sti
jbe
xchg
hlt
jge
xchg
mov
cmp
cmp
sbb
jno
xchg
inc
sbb
push
fwait
mov
cmp
jge
or
pop
into
lcall
xchg
fwait
adcb
idivb
xchg
mov
xor
mov
jg
lea
notb
dec
mov
add
cs
call
repz
into
mov
mov
sub
out
les
xchg
popf
push
or
push
xor
and
aam
jns
jle
movsl
cmp
das
xchg
mov
add
loopne
adc
ret
mov
stos
mov
es
data16
cmp
push
xor
subl
insl
fdivrs
push
mov
je
aas
cmpsb
dec
stos
cmp
hlt
cltd
cmpsb
andb
repnz
int
fmull
into
adc
lea
push
repnz
lods
sub
sbb
gs
dec
or
pop
push
mov
in
mov
mov
push
mov
ss
xchg
out
or
or
inc
mov
out
shlb
notl
or
lods
cmp
out
sbb
lock
pop
out
xchg
aad
cmp
dec
fld
adc
cmp
cs
sti
mov
mov
pushf
xchg
pop
or
in
fdivr
imul
sbb
lods
and
xchg
imul
add
xor
jbe
dec
insl
inc
fnstsw
push
lret
arpl
adc
push
or
cltd
push
rcll
inc
addr16
rorb
jge
jnp
repnz
fisttps
insb
js
mov
and
mov
sahf
pop
cmp
and
push
push
pop
fistps
sbb
test
sub
push
pop
jo
sub
add
mov
xchg
add
in
push
sub
adc
mov
push
pop
mov
lahf
add
adc
add
fstp
imul
mov
in
push
roll
dec
jge
jbe
cmp
hlt
lods
inc
sti
inc
mov
fimuls
inc
shlb
sub
iret
dec
and
loope
in
repz
test
pop
lcall
out
add
add
jmp
add
jp
sti
aam
add
pop
cmp
enter
or
outsb
sahf
fwait
out
and
or
fstpl
jbe
inc
pop
push
test
pop
jle
mov
mov
mov
dec
outsw
cli
sub
sbb
sti
in
dec
push
scas
xchg
idivl
scas
xchg
std
sbb
cmp
or
mov
js
cmp
out
out
pop
jno
scas
jge
inc
lods
inc
imul
cmp
notl
int3
mov
int
add
jle
aas
xchg
dec
call
pop
mov
cmp
sub
add
sub
and
aam
pop
std
push
mov
adc
aam
xor
ljmp
jae
rorb
jl
cmp
mov
and
cmp
push
outsb
imul
daa
and
imul
push
add
adcl
fstps
adc
lds
adc
jnp
mov
rcrb
and
push
push
jl
xchg
or
outsb
stos
cli
aas
pop
in
sbb
xchg
adc
sbb
lret
pop
cmp
pop
loopne
notb
pop
xchg
or
insb
jbe
inc
lret
jle
inc
dec
sub
jecxz
xor
fdivrs
pop
mov
add
movsb
test
dec
fidivrl
stc
dec
dec
mov
iret
pushf
push
jb
adc
mov
or
std
add
jo
pushf
dec
jne
sti
pop
fs
loopne
or
push
jp
in
clc
mov
sub
clts
dec
nop
sarb
jmp
cmovg
mov
mov
and
repz
jge
das
aad
inc
and
pushf
mov
inc
xchg
push
lcall
rorb
cli
mov
cld
dec
jmp
adc
ret
into
add
cmc
mov
frstor
cmpsb
xchg
popa
xchg
orl
xchg
hlt
or
stos
enter
loop
xor
sbb
push
inc
enter
xor
xchg
stc
mov
mov
sub
push
adc
dec
shll
lods
add
imul
mov
inc
stos
jl
push
leave
pop
and
out
lahf
loopne
mov
fcomps
mov
enter
xchg
dec
scas
cli
nop
xorl
jo
mov
sar
mov
mov
test
jno
xor
push
cmp
add
mov
xchg
mov
mov
test
nop
pusha
or
int
mov
push
adc
mov
and
sbb
mov
push
andl
cli
xchg
lods
inc
jmp
loopne
pop
das
pop
push
inc
pop
mov
sub
mov
pop
xlat
xchg
dec
pop
sbb
xchg
test
dec
pop
pop
sbb
sbb
fldenv
sbb
xchg
out
and
mov
push
sbb
add
inc
int3
je
jmp
shll
lods
xor
stc
stos
out
sub
subl
cwtl
mov
add
xchg
xchg
divl
mov
add
inc
jnp
dec
inc
out
mov
jno
adc
mov
add
adc
jae
push
inc
dec
gs
fwait
movl
lcall
cmp
cltd
out
and
fdivs
fwait
jae
lret
jl
insl
lahf
mov
sahf
or
dec
and
sti
or
pop
mov
stos
cmp
in
add
mov
add
dec
sub
aas
in
leave
pushf
sub
mov
dec
popa
or
mov
jae
cmpl
push
sbb
pop
push
inc
sub
mov
das
loope
xor
inc
fstpt
pop
mov
mov
mov
dec
imul
xor
xchg
nop
jns
and
movsl
inc
std
ja
jae
shr
mov
pop
aaa
xor
pop
mov
and
cwtl
inc
mov
cmp
fidivl
and
mov
xlat
clc
popf
push
lods
icebp
das
xchg
and
roll
cmp
cwtl
adc
push
dec
jb
in
adc
sub
xchg
jp
mov
pop
fwait
add
and
pop
divb
cmp
scas
iret
sub
adc
jnp
or
bound
push
xchg
sub
add
in
dec
inc
sub
leave
iret
imulb
jle
mov
pushf
mov
sub
faddl
int
cmp
dec
call
hlt
sub
dec
jge
lret
fdivl
movsl
inc
mov
push
fs
sbbb
inc
into
lahf
sub
adc
sbb
pop
dec
or
cmp
subb
aam
add
int3
xchg
push
jg
push
mov
adc
dec
push
xchg
jmp
ret
jecxz
stos
cmpsl
mov
xor
and
pop
mov
test
nop
sbb
sbb
or
mov
ds
push
xchg
pop
or
out
push
mov
mov
dec
aas
shll
or
cmpsb
inc
loope
outsl
cmp
fbstp
mov
and
fldt
sbb
test
insb
movsl
or
repz
pop
lods
hlt
enter
das
push
rcrl
jl
cmp
mov
fisubrl
sub
mov
dec
pop
test
rorl
adc
aaa
xor
inc
sbbl
ja
push
or
jb
xor
ficoms
test
inc
fwait
mov
insl
sbb
push
aad
call
push
jo
push
rolb
outsb
loop
xor
cld
sbb
jae
popf
and
fnstenv
sub
outsl
adc
xor
jne,pn
mov
dec
imul
outsl
pop
arpl
ja
or
dec
loop
push
mov
loop
cmpl
sub
fdivl
je
mov
pop
xor
je
lcall
lret
add
cmc
lods
xorb
sbb
addr16
scas
xor
fistpl
and
dec
jne
js
mov
pusha
cmp
cli
mov
or
and
imul
sub
xor
fists
pop
lods
shll
pop
pop
xchg
jb
jne
movsb
adc
pop
cwtl
pop
lock
and
mov
test
xor
sti
lahf
xchg
add
out
pop
lods
mov
out
lret
arpl
std
outsb
ds
mov
add
jae
mov
mov
repz
sbb
add
bound
jno
inc
call
cs
jae
in
stos
ficoml
lock
into
mov
aad
test
adc
nop
mov
int3
push
leave
fmul
mov
mov
and
aad
mov
inc
push
pushf
das
ja
mov
jle
adc
mov
xchg
test
push
xor
add
fistps
mov
jne
bound
push
jnp
jns
or
inc
add
insb
xchg
jecxz
sti
push
and
movsb
inc
stos
push
mov
jge
int
sbb
fcmovnu
fisttpl
cmpsl
sarb
data16
sub
sbb
dec
lods
imul
xor
sbb
cmc
in
in
inc
fidivs
xorl
in
stos
pop
mov
xorb
jle
or
loope
mov
ret
jg
pop
sbb
inc
push
test
push
push
mov
ljmp
inc
and
jg
aad
stos
jbe
test
shll
push
inc
int
cmp
inc
push
insl
xor
cmp
jno
cltd
pop
or
test
or
lods
sbb
ret
push
dec
into
fwait
in
pushf
mov
pop
mov
popa
or
add
fnstcw
lahf
test
ss
in
inc
dec
and
movlps
adc
jbe
mov
les
mov
xor
xor
in
cmpsl
sub
xor
movl
testb
jnp
mov
and
je
int
jo
dec
lcall
sub
insb
in
add
sbb
into
xlat
or
or
pushf
mov
cmp
mov
addr16
sub
xorb
xor
call
subl
and
xchg
les
out
mov
or
xlat
xchg
cmp
fldenv
fmul
sub
test
lcall
adc
xor
testl
ja
dec
mov
xor
mov
sub
cmc
jne
rcrl
sub
xchg
jae
push
sub
stos
mov
jnp
ffreep
mov
outsb
push
jmp
mov
pusha
les
dec
adc
mov
stos
out
out
fistpll
cmp
jne
sbb
xchg
inc
dec
daa
cmp
add
push
repnz
or
and
lods
sub
clc
in
pop
bound
jb
nop
inc
stc
inc
jp
sbb
mov
jmp
xor
mov
test
bound
dec
jle
cmpsb
mov
jmp
and
loopne
into
xor
dec
or
int
push
jg
xor
imul
mov
xor
mov
inc
jns
inc
arpl
dec
pop
add
jns
out
cmc
sub
cmc
mov
inc
dec
mov
xor
and
loopne
xor
push
sub
lcall
mov
aaa
pop
sbb
daa
jl
enter
xchg
push
inc
push
add
sarl
sbb
les
cmpsl
dec
test
cmp
in
in
adc
add
add
call
mov
jle
fistl
ret
inc
fstpt
xchg
adc
pop
pminsw
xchg
dec
lods
loopne
inc
enter
push
ror
in
hlt
push
cltd
cmp
fidivrs
daa
mov
fsubrs
insl
sti
andb
push
ds
cld
inc
pop
or
mulps
fisttpl
jecxz
adc
pop
push
and
jmp
aas
xchg
and
cltd
sub
aam
dec
lret
call
or
ret
add
cmp
fisttpl
mov
lods
out
sahf
sbb
mov
dec
js
sbb
mov
daa
repnz
outsl
cmp
sub
jb
fildl
in
out
sub
sub
imul
xchg
or
mov
int3
sub
loop
test
stos
outsb
insl
push
clc
and
and
jg
popf
rcll
mov
inc
loope
dec
mov
pop
in
sbb
aaa
or
mov
lea
faddl
sbb
pop
testb
adc
fwait
data16
sub
adc
xchg
push
addr16
sub
test
mov
lcall
push
int
stos
dec
sub
test
inc
movsl
out
and
enter
hlt
push
lods
pop
push
xchg
push
cmp
add
inc
xor
lea
rorb
jge
mov
pop
aaa
ljmp
test
dec
icebp
xor
mov
mov
push
cmp
push
int
adc
xchg
lahf
xor
push
xchg
jmp
sub
inc
iret
les
repz
and
sbb
repnz
or
int3
out
mov
aam
ss
jno
mov
int
xorl
mov
jmp
sub
test
sbb
ja
vhaddpd
das
frstpm(287
insb
inc
aam
mov
mov
dec
pop
and
xchg
xor
xchg
decb
rcll
out
aas
adc
jo
sbb
xor
mov
in
cmp
push
fistpl
test
lock
incl
add
shlb
leave
inc
lds
test
xchg
sbb
imul
cmp
into
ret
int3
out
ret
mov
add
inc
dec
and
test
xchg
movsl
int
fnstenv
sub
leave
adc
sbb
jmp
sarl
cmp
sub
pop
xor
add
mov
mov
add
test
mov
int
pop
ficoms
push
nop
loopne
add
and
sbb
dec
andb
gs
push
inc
mov
mov
inc
aaa
jp
fisttps
fdivr
xchg
and
orb
cmp
mov
jae
ret
mov
mov
stos
out
enter
xchg
cltd
stos
loop
aaa
in
enter
mov
sub
lcall
or
xlat
mov
xchg
subl
sub
hlt
xchg
popa
jg
cltd
or
bound
enter
jb
jbe
popw
xchg
in
add
sub
and
pop
pop
pop
leave
add
aam
mov
fdivrs
jl
adc
popf
pop
int3
adc
cmp
xchg
lods
xchg
fwait
push
mov
repnz
int
mov
cmp
mov
mov
cmp
gs
inc
sbb
dec
xor
mov
shrb
fs
jmp
jae
xchg
dec
mov
push
and
xor
test
pop
into
rolb
pop
hlt
sub
mov
mov
jcxz
cmpsb
addr16
into
xchg
xchg
sbb
dec
sub
sub
mov
fisttpl
add
addr16
icebp
jle
insl
pop
push
sahf
jmp
cmp
daa
insl
leave
lcall
jle
add
fcoms
lcall
dec
movsb
xchg
sbb
mov
adc
pop
cmp
cmp
testl
test
dec
add
repz
stos
push
jecxz
mov
cli
and
rcrb
or
in
xorl
lret
cmp
inc
hlt
cwtl
lahf
sbb
add
cmp
movsb
add
push
lret
cmc
push
dec
in
mov
mov
and
xchg
push
xor
sahf
ret
or
or
lds
dec
sbb
daa
xchg
sbb
enter
mov
test
xlat
mov
push
cld
jle
insl
test
loopne
rcrl
lds
cmp
jne
push
push
xor
aad
jbe
roll
cmp
mov
push
fsubp
push
xchg
das
and
shr
shll
inc
fdivs
call
xchg
dec
mov
jnp
movsb
out
mov
adc
mov
das
add
clc
jae
and
mov
and
xor
jns
outsl
or
inc
test
cwtl
out
and
outsb
test
adc
sub
xor
lahf
xchg
push
ss
push
dec
mov
data16
jns
rol
icebp
inc
pop
bound
push
or
jge
repnz
adc
rol
sbb
addl
push
js
push
jmp
sub
mov
or
outsl
imul
xlat
mov
adc
pusha
dec
or
aad
ds
cmp
or
sbb
rcrb
dec
lods
adc
neg
pop
or
xchg
in
fcoml
push
outsl
lds
cmc
stos
bound
fiadds
xchg
xchg
lret
incb
repnz
repz
popa
aam
sbb
clc
or
inc
cli
jae
pop
aam
mov
push
xchg
roll
adc
enter
lahf
adc
cld
add
gs
mov
out
adc
sub
cmp
or
mov
inc
rcrl
and
movsl
mov
std
xlat
enter
xlat
adc
xchg
jne
fistps
arpl
sub
lds
lock
and
je
or
add
test
pop
inc
loope
rorl
add
dec
adc
sbb
in
sub
or
sub
inc
xor
sub
mov
push
dec
adc
out
or
mov
add
add
dec
stos
adc
sub
jne
mov
xor
std
outsl
jnp
add
push
aaa
pop
inc
in
mov
shr
push
xor
push
inc
sub
and
fistps
sbb
cmp
filds
add
test
sub
inc
push
call
daa
mov
es
or
js
sbb
sti
adc
dec
ja
shll
fnsave
lret
pop
add
push
and
mov
mov
vpshaq
popf
outsl
addr16
push
push
shlb
adcl
cmp
add
mov
shl
mov
iret
push
sti
jnp
push
iret
cltd
enter
mov
outsl
movsb
gs
fistl
lods
mov
mov
push
test
mov
mov
out
push
cmp
cmpsb
xchg
shrb
xchg
mov
stos
or
js
icebp
movntps
pop
cwtl
int3
jae
cli
xor
imul
mov
cmp
scas
dec
cld
mov
dec
dec
stos
out
rorb
rorb
sub
daa
pop
or
jo
pushf
ret
imul
cwtl
xchg
mov
adc
xchg
clc
mov
loop
outsl
test
and
cmpsb
sub
mov
in
outsl
jne
outsb
push
cltd
mov
sbb
xor
ljmp
das
pop
loopne
adc
cmpb
adc
mov
mov
mov
add
enter
test
mov
xor
xor
mov
std
pop
das
notb
pop
pop
jg
or
lock
imull
lahf
cli
sbb
aas
in
test
loopne
jp
jae
rolb
or
pop
mov
and
jae
insb
popa
or
fdecstp
in
testl
add
adc
jg
popa
push
sub
pop
and
cmc
adc
test
xor
mov
int
mov
jl
pmaxsw
jmp
into
aaa
jp
sahf
ja
ret
out
push
test
xchg
fwait
in
jo
rcl
jno
aam
mov
mov
ficoms
cmc
pop
push
int
mov
mov
rcl
cltd
xor
jmp
and
mov
cmp
fisttps
jl
pusha
das
icebp
scas
sbb
xor
mull
fidivs
or
sub
test
cmp
loopne
jmp
mov
jg,pt
js
imul
cmp
cmp
mov
pop
es
das
outsl
mov
mov
mov
fstpl
mov
pop
lahf
pop
inc
jecxz
les
arpl
sub
push
xchg
loopne
data16
jno
jecxz
jae
mov
inc
xlat
lock
adcb
mov
jl
shll
dec
hlt
nop
in
mov
mov
push
xchg
sub
jbe
mov
shr
ds
inc
stc
lods
xchg
xchg
xchg
push
mov
mul
cmpsl
inc
inc
iret
pop
mov
test
or
and
xchg
scas
xchg
lahf
mov
xor
negl
out
adc
dec
jns
sahf
and
dec
pop
sub
cmpsb
sbb
mov
mov
push
ja
fisubs
lahf
xlat
push
les
push
test
and
cmp
mov
jb
lret
ljmp
jp
test
imul
lahf
and
insl
incl
push
shlb
sub
jmp
repnz
shrl
lahf
lods
push
aaa
or
rorb
insl
fimuls
cmp
repnz
in
cmp
stos
push
pop
jmp
stc
jmp
test
fadds
cmp
add
lods
imul
jle
scas
loopne
xorb
inc
in
jno
xor
cwtl
ds
loope
dec
mov
cld
jns
popf
push
add
jae
daa
jg
xchg
xlat
mov
inc
jmp
das
decl
testb
lods
fstpl
jg
fdiv
adc
dec
and
sbb
cmp
inc
mov
fldt
pop
xchg
sbb
mov
test
stos
sahf
push
pop
rclb
ss
pop
sti
jb
add
mov
loope
adc
cmpsl
xchg
outsb
mov
clc
xor
inc
xchg
mov
mov
mov
sti
repz
mov
sarb
sbb
adc
cmp
and
or
xor
xor
mov
shrb
dec
adc
jmp
pop
arpl
jne
leave
icebp
fistpl
into
ljmp
daa
add
push
fnstenv
xor
push
pop
shll
sbb
push
imul
popf
sbb
loope
add
cmp
cld
enter
out
sbb
clc
mov
push
jae
add
ret
lds
cmp
popa
inc
xor
mov
ret
repz
or
ds
mov
push
icebp
jp
movsl
mov
decb
push
sub
into
fwait
mov
dec
pop
shrb
push
or
dec
stos
fnsave
xchg
enter
mov
mov
push
fstpt
adc
dec
mov
adcb
dec
mov
shl
xor
fs
aaa
jp
jbe
cs
and
mov
mov
jne
out
or
cmp
pop
push
jecxz
inc
inc
pop
dec
dec
repnz
int3
cmp
jl
pop
mov
mov
adc
and
cmp
insl
ja
int3
int
aam
outsl
and
mov
or
sbb
data16
push
cltd
xor
add
mov
cmp
pop
into
dec
push
mov
rcrb
xchg
pop
loopne
call
daa
fnstenv
pop
mov
xchg
int
mov
loopne
mov
sub
mov
jns
push
lock
push
mov
fisubs
mov
dec
clc
ret
jb
dec
push
push
pushf
xchg
and
xchg
pop
push
push
sub
cmpsb
push
insl
sub
cli
lcall
addb
sahf
push
push
cs
mov
mov
mov
mov
rcrl
out
pop
andl
xor
jg
fmulp
and
pop
sub
mov
out
xchg
call
push
mov
sarl
cli
enter
gs
mov
push
imul
or
fistps
xchg
mov
cwtl
cld
jecxz
cmp
push
pushf
dec
push
and
mov
pop
jl
cmc
and
jns
repnz
sbb
aas
gs
adc
inc
je
cmp
jg
loopne
inc
and
jecxz
addr16
in
stos
das
js
loop
lods
jo
scas
lods
mov
scas
stos
into
xchg
mov
rcrl
or
leave
xchg
mov
push
xchg
and
enter
jb
fcomps
in
mov
cmpsb
enter
in
test
cli
jl
sbb
scas
push
fisubrs
ret
rcrl
je
jb
jg
cmp
or
sub
test
sarl
mov
leave
mov
jge
into
sahf
lea
mov
push
pop
xchg
test
mov
adc
inc
inc
inc
cmp
jecxz
xor
pop
das
jae
mov
stos
pop
xor
inc
mov
scas
stos
or
or
mov
leave
add
sti
adc
aaa
mov
adc
es
fwait
jbe
cltd
add
sahf
lock
push
aas
test
sub
push
push
cld
imul
xchg
sbb
loopne
add
pop
inc
xchg
sub
out
int
aas
pop
mov
jno
loop
cmc
mov
mov
push
movsl
xchg
leave
add
pop
movsl
addr16
rcrl
and
jmp
leave
mov
push
and
loopne
xchg
cmc
sbb
fstpt
aas
add
inc
test
xchg
aaa
test
insl
stos
xor
and
jmp
addl
outsl
cmp
sub
movl
adc
cltd
xchg
out
xor
je
or
rcrl
stos
or
mov
push
jecxz
out
stos
push
scas
out
mov
mov
sahf
or
stos
xor
lea
or
mov
sbb
popa
xchg
push
pop
jne
jne
or
inc
sbb
int3
ficoms
incb
xchg
mov
negl
les
mov
add
fidivs
adcb
jmp
mov
test
lods
add
setge
es
movsb
das
cmp
imulb
sahf
imul
xchg
adc
mov
mov
cmp
lods
dec
outsl
or
dec
nop
andb
fsts
dec
adc
inc
pop
test
mov
pop
add
scas
cmp
ljmp
and
or
xchg
push
adc
arpl
mov
in
stos
sbb
jge
repz
push
subl
add
out
xchg
mov
daa
xor
ss
or
or
iret
xchg
adc
cmp
cmp
sub
inc
push
mov
mov
int3
shll
stc
sbb
inc
inc
rcrb
push
ret
add
cmp
adc
cli
sbb
movsl
adc
adc
addb
outsl
call
and
push
and
pop
adc
leave
inc
inc
lock
idivl
ss
xor
adc
ja
inc
in
orb
push
jb
movsb
in
and
popa
push
xor
jae
sbb
fisubrl
adc
mov
mov
aam
jmp
sbb
push
popa
fs
xchg
sbb
aam
push
cmp
fwait
add
jb
aam
push
std
mov
adc
adc
ljmp
int
aad
push
mov
lea
repz
cmp
mov
flds
pop
sbb
add
movsb
fs
mov
ss
fistl
das
std
xchg
das
mov
add
orl
aad
xchg
sub
subl
add
enter
in
cmp
add
negl
imul
cmpsl
mov
lret
sbb
xchg
test
jb
das
in
adc
cmp
ret
adcb
push
adc
add
xlat
inc
mov
inc
loop
dec
push
or
xor
in
rcrl
int3
das
popa
movsl
setge
out
pop
scas
pop
lods
imul
xor
xor
loop
jge
dec
int3
sbb
and
xor
or
lcall
lods
add
sbb
out
jecxz
pushf
pop
mov
push
mov
loop
push
and
fnstenv
pop
sbb
mov
rorl
movsl
cwtl
push
push
icebp
lret
mov
inc
jns
sub
or
mov
mov
push
out
fildll
adc
cld
mov
sub
or
sti
out
andb
cmp
mov
inc
popf
aam
or
popf
adc
fmuls
mov
jbe
sub
outsb
test
mov
add
notb
cwtl
lea
out
gs
sub
mov
or
push
cmp
mov
sahf
push
inc
mov
lcall
test
mov
out
cmp
mov
scas
or
les
sar
in
les
adc
sub
mov
jecxz
and
or
push
lahf
ds
fisubrl
ljmp
insl
inc
sub
scas
fwait
and
outsl
out
adc
sub
xchg
in
inc
mov
enter
push
ret
jge
out
cmpsb
leave
inc
sbb
movsb
inc
inc
aaa
mov
add
or
cmp
data16
cmp
aad
mov
and
add
test
aad
jo
das
dec
mov
xor
not
sbb
jnp
fdivr
test
push
mov
shl
std
ficoms
ret
popf
and
adc
push
mov
xchg
and
sbb
jo
div
xchg
out
fwait
pop
cmp
ljmp
lret
cmpsb
insl
mov
push
jecxz
mov
scas
xor
pop
movsb
xchg
and
out
and
stc
daa
inc
xchg
sbb
stc
aas
sub
icebp
mov
and
add
adc
out
aam
rolb
pushf
ret
cltd
popf
or
inc
fnstcw
es
push
add
fwait
imull
pop
je
imulb
inc
adc
mov
in
mov
outsb
out
xchg
pop
psubsw
int
ljmp
clc
sbb
adc
push
lret
sub
sti
pushf
inc
sub
push
ja
xor
enter
mov
test
cmp
mov
xchg
ficoml
xor
rol
fwait
jns
add
sub
jns
outsl
test
jmp
icebp
outsl
sbb
jp
mov
xorb
rcrb
xchg
jp
and
and
pop
xor
scas
mov
out
pusha
jge
sub
jae
jno
mov
dec
pop
mov
sub
iret
pop
fildl
jg
pop
or
dec
mov
sti
dec
and
jnp
dec
popf
xchg
push
sbb
push
dec
mov
mov
xchg
outsl
inc
xchg
xchg
faddl
std
xor
fcmovbe
cmpsb
decl
jnp
int
mov
push
push
sub
inc
clc
inc
adc
lret
jmp
fimull
fisubs
mov
bnd
mov
pop
push
dec
or
mov
icebp
out
add
ret
hlt
pop
cmp
adcb
or
fistpl
fildll
push
and
mov
xchg
dec
mov
pop
xchg
jb
cs
mov
or
je
cmp
jmp
mov
inc
jb
insl
add
ss
xor
stc
xchg
add
add
sbb
cmp
ljmp
xchg
jg
sbb
push
mov
jmp
mov
sub
addr16
fcoms
lret
xchg
lret
adc
sti
dec
call
adc
hlt
adc
mov
mov
sub
cli
add
out
aaa
add
xorl
lret
jle
les
sub
add
jp
enter
xchg
and
rorb
push
pop
mov
mov
scas
jns
cmp
jno
dec
addl
add
sbbb
push
movsb
sub
movsb
mov
clc
shrb
repz
icebp
scas
decl
cmp
ret
out
adc
xchg
popf
inc
js
mov
pop
cmpsl
fwait
cli
cwtl
dec
xchg
int
mov
loope
cmpsb
cmpl
cmpsb
int3
mov
or
loop
mov
mov
or
pop
push
jno
adc
adc
adc
lret
xor
cmp
insl
fistps
or
dec
dec
jne
js
lock
pop
movsl
int
movsb
test
mov
mov
and
inc
xchg
mov
jmp
leave
dec
or
add
arpl
xor
loopne
mov
jmp
push
fs
outsl
pop
iret
ret
dec
jbe
into
faddl
test
idivl
ret
xchg
test
dec
stos
and
mov
jns
push
shrl
out
push
mov
inc
mov
push
fnsave
mov
fwait
xchg
repnz
cmpsb
cmp
sbb
negl
mov
pop
decl
pop
imul
push
mov
xchg
sub
sub
mov
jmp
and
mov
in
jns
mov
lods
push
and
xlat
adc
rorl
xor
xchg
out
and
aam
inc
jecxz
stos
mov
cmpsb
int3
fisubrl
push
add
mov
in
loope
push
enter
mov
mov
jbe
call
mov
aas
push
xchg
mov
push
lea
hlt
enter
dec
addr16
adc
push
push
lea
ror
repz
push
inc
test
jo
sbb
mov
pop
sub
lcall
aaa
push
sub
jbe
subb
dec
xor
imul
ja
inc
mov
fwait
xor
sahf
js
push
push
iret
pusha
aad
shlb
jle
jb
xor
incl
xchg
xchg
add
sti
sbb
or
sbb
xchg
out
int3
xchg
clc
int3
pop
inc
mov
sbb
mov
shrl
jl
jecxz
js
xor
inc
aam
push
shll
scas
jnp
dec
int
inc
call
stos
push
mov
cmp
ljmp
sub
test
stc
stc
xchg
dec
xchg
ret
lret
dec
mov
add
adcl
sub
int
sbb
xchg
jns
adc
arpl
loopne
push
lods
int3
fwait
and
lock
xchg
jbe
std
notl
cmp
and
aas
xor
popf
movsl
aas
or
jbe
flds
xor
or
loopne
idivb
sbb
xor
in
add
mov
push
xlat
xchg
scas
add
jno
in
cmp
mov
mov
add
xchg
cmp
inc
sahf
pop
in
sub
jle
xchg
imul
mov
cmp
mov
orl
jl
dec
fbstp
xchg
popa
pop
jl
fisttpll
fistps
loop
jae
aas
ds
andl
nop
popa
adc
pop
push
repnz
and
sub
lret
sarb
add
jmp
sub
lret
mov
xchg
out
sub
xlat
out
rcll
roll
pusha
mov
aas
xchg
ret
popa
popf
push
mov
xchg
cli
push
adc
ret
jo
jp
dec
cli
sub
mov
stc
push
pushaw
dec
and
xchg
jns
ds
mov
dec
daa
mov
fimull
dec
aam
ficoms
leave
ficomps
outsb
enter
or
fcomps
sbb
fistpll
xor
es
insl
out
fnsave
adcl
fnstsw
or
imul
daa
out
dec
xor
add
xor
sbb
scas
push
les
lahf
es
dec
mov
mov
cmp
cli
dec
pop
in
gs
pop
enter
jne
pop
cmp
push
mov
fimull
imul
pop
clc
clc
in
xor
mov
and
sar
push
push
and
cli
mov
push
sbb
cmp
inc
fdivrl
fs
cltd
mov
rolb
rcr
pop
mov
neg
add
mov
std
pop
ficomps
cmp
and
cmp
add
or
mov
adc
fnstenv
idivl
in
data16
lcall
out
repz
jbe
addb
xchg
int
adcl
mov
cmp
sahf
push
pop
lahf
lea
xor
frstor
push
jmp
adc
adc
inc
in
fildl
or
rcrl
pop
mov
cltd
iret
or
movsl
cld
mov
cs
ljmp
push
push
dec
cmpsl
lahf
ret
sbb
inc
insb
je
mov
fstpl
add
pop
inc
adc
cmp
scas
add
nop
icebp
mov
pop
inc
imul
mov
out
dec
rcl
sub
inc
gs
lahf
xchg
mov
lock
mov
mov
stc
in
add
fidivrl
xchg
test
clc
jp
xchg
xchg
les
loop
jmp
ficoms
mov
or
sbb
pop
movsl
sahf
int3
mov
repz
in
das
xchg
mov
pop
sub
jge
or
inc
or
dec
sub
fisubs
xor
aaa
test
jae
mov
std
push
fs
idivl
enter
imul
subb
mov
add
test
cmpsl
out
inc
jae
cmp
jecxz
pop
dec
in
sar
sub
fisubs
mov
pop
jb
cmp
aaa
mov
imul
mov
in
lret
outsb
lds
aaa
dec
pop
xor
cmp
pop
pop
sub
cmpb
inc
jmp
jle
dec
sbb
mov
mov
pop
imul
mov
or
test
mov
push
loope
push
test
pop
stos
push
xchg
mov
aad
lods
fimuls
pop
fmuls
testb
test
xchg
dec
pop
test
outsb
out
test
pop
push
sbb
gs
fnstsw
ss
push
addb
inc
sbb
adc
mov
repz
mov
pop
mull
out
imul
mov
xchg
mov
sub
rcll
out
mov
and
or
and
xor
out
push
sub
insl
adcl
mov
and
dec
shlb
lret
or
or
sub
lods
pop
scas
xlat
dec
xor
mov
dec
mov
imul
stos
inc
aaa
daa
xchg
sbb
arpl
jp
rclb
test
pop
leave
pushf
jmp
xchg
jmp
cltd
xor
mov
test
sbb
sub
jno
push
subb
dec
push
in
pop
sbb
std
sbb
test
in
addb
lods
cmp
js
sbbb
andb
pop
out
movsb
cmpsl
dec
lcall
sbb
sbb
pop
mov
jns
push
sbb
xchg
out
ds
add
dec
mov
jnp
push
adc
mov
pushfw
dec
add
cmp
mov
aad
mov
dec
fadd
inc
test
pop
add
inc
sub
inc
sti
mov
lds
add
push
popa
clc
out
and
xchg
jns
adc
sub
pop
cld
sbb
out
sbb
inc
clc
fs
popa
pop
jmp
fimull
pop
pop
add
subl
pushf
stc
mov
lods
insb
fistpll
push
mov
pop
out
pop
filds
add
cmpsb
leave
divb
push
xchg
pop
les
int
ror
jge
stc
sbb
push
je
bound
pop
mov
mov
jne
dec
jecxz
adc
int3
push
outsb
mov
dec
out
xchg
pusha
stos
popl
gs
cmp
xlat
mov
cmpsl
push
cltd
jbe
adc
mov
mov
out
and
mov
dec
rorb
or
or
jg
stos
ret
inc
jge
movsl
add
out
cmpsb
int3
add
xor
into
in
and
jecxz
es
inc
dec
or
push
inc
xchg
jp
cmpsb
xchg
je
pop
push
xor
mov
out
lock
push
cmp
push
repz
push
pop
mov
mov
mov
clc
sub
and
xlat
mov
testb
test
jne
and
jae
mov
es
loope
dec
lret
pop
adc
add
and
add
test
outsl
mov
shufps
fildl
cmp
pop
adc
cmc
pop
inc
jle
gs
jb
cmpsb
data16
lea
cmp
arpl
dec
addr16
inc
lods
lcall
cli
add
sub
imul
xchg
jl
add
inc
data16
adc
mov
push
xchg
sahf
xorb
cmp
sbb
mov
fldenv
dec
orl
xchg
mov
loopne
sbb
jg
icebp
jns
lods
aaa
xor
push
scas
pop
fldenv
call
dec
jne
sbb
mov
insb
ret
std
repnz
jae,pn
or
in
dec
out
popf
call
pop
or
arpl
js
int
cwtl
cmpsb
dec
arpl
insb
cmp
roll
decl
fstl
movb
pop
addr16
sbb
and
pop
std
stos
out
dec
mov
add
mov
scas
add
push
dec
test
ficomps
pop
pusha
jle
iret
adc
push
aas
push
jle
sbb
cmpsl
mov
adc
cmpb
mov
scas
rclb
mov
out
or
push
andl
xor
lret
pusha
add
mov
scas
std
lret
pushf
addr16
daa
arpl
mov
pop
stos
ret
loop
push
jl
rcl
ret
mov
test
popa
pop
cmp
add
jge
sti
scas
js
ficompl
daa
lock
dec
orl
test
push
insl
sub
push
jne
push
js
push
cmp
xchg
push
insb
dec
xchg
idivl
cld
test
fs
inc
dec
in
shll
paddw
or
push
mov
pop
xchg
xor
mov
sbb
in
fmuls
mov
aaa
dec
andl
or
add
fwait
scas
and
loopne
in
pushf
imul
pop
cmp
loopne
and
or
and
subl
int
push
add
into
mov
outsb
xor
jnp
xchg
rcrb
gs
xchg
pusha
cli
imul
mov
rclb
pop
insb
mulb
js
outsl
or
jge
icebp
test
push
in
movsb
out
incl
mov
gs
ljmpw
ss
out
sti
addr16
jns
inc
test
fwait
dec
add
in
adc
xchg
xor
sub
imul
sarl
pop
mov
xchg
sahf
scas
push
xchg
sub
mov
andl
dec
jns
add
mov
jbe
loope
shl
mov
and
dec
stos
ficomps
pop
xor
push
add
jb
jle
fwait
std
xor
scas
hlt
lock
sbb
popa
push
repnz
mov
push
mov
sbb
and
xchg
adc
push
stos
scas
add
out
jne
dec
mov
jecxz
xor
jl
pop
mov
das
jle
repz
adc
fwait
loope
sub
push
and
dec
pop
sbb
aam
mov
mov
ror
test
adc
and
jge
push
loop
pop
add
lea
outsl
jae
push
sub
shll
std
xchg
fcompl
mov
repnz
repnz
mov
and
loope
pop
cwtl
rclb
lea
sub
icebp
js
inc
aad
fsubrl
mov
add
pop
sbb
outsl
xchg
push
adc
xchg
xor
cmpsl
jb
lret
jmp
std
xchg
cmp
add
mov
mov
lods
out
aaa
fbstp
test
xchg
mov
dec
sbb
xchg
jno
ds
mov
insl
pop
les
imul
pop
xchg
bound
mov
out
pusha
jb
jno
mov
repz
stos
sub
adc
das
mov
shll
repz
mov
and
dec
pushf
pop
and
dec
fnsave
clc
add
fsubs
xchg
xor
mov
sub
xor
xchg
cmpb
xor
ljmp
je
mov
test
lea
cmp
sbb
sti
push
push
push
sarb
sub
mov
sahf
pushf
emms
out
ret
xchg
in
push
sub
xor
jno
popa
sub
stos
stc
mov
sub
xor
ss
pop
lds
pop
xchg
pop
mov
fsubrs
cmp
add
jecxz
push
sub
punpckhbw
cmp
adc
add
push
xlat
lods
cmp
les
negb
and
jns
xor
push
sbb
push
cmc
fidivl
pop
les
cs
imul
outsb
xor
pop
cld
mov
mov
inc
cltd
dec
data16
push
pop
test
rcll
fldcw
and
lea
inc
jo
sbb
xorb
dec
rcrl
call
dec
test
mov
outsb
push
es
mov
jb
aaa
xchg
nop
sbb
dec
push
pusha
mov
outsl
loop
pop
adc
out
or
in
or
and
or
mov
stos
dec
cmp
and
mov
xchg
or
aas
cli
jge
jnp
mov
rclb
repz
jns
andl
sbb
arpl
movsb
sbb
data16
pop
pop
mov
mov
sarb
lahf
popf
mov
push
sbb
lods
js
xor
and
cmp
inc
and
mov
lods
or
test
pop
xchg
xchg
fidivs
add
rcrb
pop
lods
xchg
js
outsb
lds
and
fbstp
push
jne
xor
mov
loop
push
dec
fcompl
mov
and
lods
popf
push
add
adc
jb
jmp
pop
mov
xchg
pop
stos
sbb
pop
jecxz
mov
and
lock
imul
xchg
aam
xchg
pop
push
mov
cmp
cmpsb
mov
imul
dec
dec
inc
pop
clc
push
cmc
nop
jmp
mov
add
or
jle
push
rcrl
push
sbb
out
push
repz
mov
stos
adc
push
and
and
jl
mov
out
bound
add
test
jmp
dec
mov
popf
jle
and
repz
test
cmp
mov
fcmovnu
test
and
sbb
stc
popa
movsb
sub
pop
js
jecxz
jnp
push
jno
inc
sbb
inc
or
jl
xchg
into
in
fs
push
mov
mov
pop
sbb
cwtl
push
addr16
or
ret
test
mov
stos
push
mov
xchg
jo
notl
mov
mov
dec
cmp
mov
aam
jo
xchg
es
xlat
or
sti
inc
jg
insb
xchg
xor
sub
sbb
scas
int3
and
fwait
sbb
pop
popf
repnz
lea
adc
pop
aas
mov
dec
aam
mov
xchg
fsubs
test
outsb
int3
jbe
dec
or
arpl
pushf
sbb
adc
iret
mov
cmp
mov
nop
xchg
adc
push
out
lcall
sub
les
out
mov
les
pop
stos
mov
addr16
push
stos
in
mov
mov
ficomps
push
jmp
es
sahf
enter
sub
rcrl
xchg
jmp
mov
pop
xor
aaa
daa
in
pop
imul
mov
inc
lds
fisttps
dec
sub
xor
insl
popa
out
dec
xor
mov
out
fdivp
pop
lock
sbb
or
sbb
mov
sub
adc
mov
and
lret
jge
sbb
inc
mov
sbb
arpl
cmp
mov
stc
mov
faddl
jne
jp
push
js
pop
movsb
xchg
icebp
lret
nop
fdivs
fs
adc
jbe
or
cli
mov
add
jne
in
push
test
jo
shlb
insl
dec
sbb
insb
mov
scas
ljmp
pop
jae
xor
repz
pop
dec
leave
pusha
fimull
fildl
inc
or
jmp
xchg
aaa
inc
cmp
mov
xor
popa
jl
pop
ret
jae
jae
sbb
push
and
adcl
rep
sub
pop
add
mov
movsl
call
aad
lret
and
xor
mov
das
xchg
out
sub
mov
in
call
cmp
daa
jl
lret
cmpsl
cld
xor
sub
cwtl
dec
push
cmp
aad
cwtl
nop
dec
mov
aas
sub
ja
or
imul
add
jge
or
les
mov
dec
pop
in
mov
shr
add
push
jno
mov
jg
jo
dec
dec
cmp
xor
or
ja
fidivrs
mov
jns
addr16
neg
add
xchg
mov
sub
and
dec
movsb
sahf
mov
dec
lods
sub
add
lret
aas
rcl
adc
mov
jns
scas
jb
pusha
pop
jnp,pn
add
out
or
in
repz
mov
stos
sahf
dec
outsl
sbb
cli
sarb
fwait
inc
filds
in
push
mov
aas
sbb
mov
dec
pop
or
ss
mov
sbb
and
sbb
ljmp
push
push
xchg
mov
fnsave
cmc
mov
clc
jle
ret
fisttpll
arpl
daa
or
mov
shr
xchg
sub
jb
push
adc
sub
enter
incl
cmp
stc
std
mov
bound
dec
mov
lret
push
jle
xor
push
sub
ret
mov
pminsw
mov
hlt
push
lahf
adc
push
ret
aaa
das
mov
and
pusha
adcb
lock
lahf
int
pop
dec
jb
testb
fwait
outsl
imul
aas
mov
xlat
in
insb
xchg
movsl
test
lock
mov
popf
cs
or
dec
xor
js
cmc
mov
xor
aaa
xor
out
cmpsl
aaa
push
imulb
insl
xlat
pop
jnp
nop
push
push
insb
sub
xchg
outsb
and
adc
ud1
js
in
inc
loopne
ds
aas
sbb
shlb
out
movsb
sub
adc
pushf
lds
and
cltd
pop
cmp
xchg
push
sub
pop
aad
xchg
dec
cmp
mov
dec
adc
push
sbb
pop
mov
fwait
mov
jg
push
jo
int
and
and
movsb
adc
lods
lcall
adc
adc
mov
cli
and
adc
mov
or
out
inc
mov
mov
push
inc
xchg
cld
add
cwtl
popa
mov
add
fldcw
cwtl
mov
or
pop
das
pop
dec
test
insb
bound
jns
iret
nop
jnp
push
add
inc
adc
fisttpll
and
jno
jmp
dec
mov
sub
xor
mov
lods
ja
lcall
sub
pop
arpl
stos
jb
enter
pop
outsb
inc
mov
inc
mov
dec
repnz
jmp
addr16
aaa
or
std
js
mov
into
xchg
pop
add
push
stos
pop
add
push
nop
sub
add
push
dec
xor
lods
xor
mov
test
sbb
orb
lods
ds
fnsave
in
xor
inc
scas
in
lret
das
shlb
andb
mov
mov
cwtl
add
int
std
mov
inc
inc
cmc
cmp
adc
add
cwtl
mov
adc
shl
in
jmp
and
mov
add
imul
push
insl
and
push
scas
repz
test
xchg
imul
arpl
jnp
call
pop
dec
gs
xorl
mov
adc
rcll
insl
out
leave
js
push
and
jecxz
dec
ja
int3
test
jb
or
pop
and
push
mov
enter
pop
cwtl
les
hlt
push
sbb
dec
mov
cmp
push
sbb
stc
sahf
sbb
sbb
movsb
into
divb
bound
push
out
jecxz
shrl
jne
sub
loop
es
lods
push
or
mov
jmp
je
cwtl
push
mov
xor
pop
dec
push
dec
mov
xor
rcr
in
andl
jae
sbb
mov
addr16
dec
add
bound
mov
ljmp
fistpl
stos
jbe
cli
ja
hlt
dec
sub
in
mov
jmp
pusha
adc
lds
fldcw
mov
mov
in
inc
jns
mov
add
mov
mov
push
or
cld
dec
rorb
lock
and
jp
push
fdivl
test
sahf
adc
push
mov
lods
outsl
and
xchg
mov
cmpsl
pop
dec
je
mov
mov
pop
jnp
cmp
cmp
cltd
psadbw
fwait
mov
adc
jmp
int3
or
inc
in
and
punpcklbw
icebp
add
in
pushf
fxch
cmpsb
push
mov
jge
lret
sub
mov
gs
cs
lds
adc
js
mov
outsl
addr16
loope
cmp
lea
add
clc
adc
jle
mov
xchg
js
or
mov
push
es
ss
cmpb
fstpt
xchg
aas
mov
scas
fsubrs
pop
fs
inc
adc
dec
in
mov
mov
mov
cwtl
push
mov
pop
and
jle
lea
sub
iret
popa
test
mov
out
imull
cli
mov
lret
stos
cld
lahf
mov
xchg
dec
inc
hlt
sub
xchg
cmp
lcall
xchg
jg
mov
lret
pushf
nop
push
push
cmc
cld
adc
dec
inc
je
and
jg
mov
mov
sbb
insl
fnstenv
popa
add
jb
test
add
iret
lods
dec
shrb
imul
fst
xchg
daa
inc
aaa
add
push
test
mov
sub
mov
mov
jge
mov
flds
xchg
je
stc
lods
insb
push
scas
in
std
and
cmpl
lods
jmp
mov
sbb
lock
flds
push
inc
mov
jno
lahf
adc
xor
popf
cmpsl
xor
mov
dec
clc
sbb
lods
rorb
pop
cmpsb
fistps
mov
add
fs
ds
cmpsb
adcl
les
mov
cltd
jb
ret
xchg
xor
in
lods
je
daa
leave
ja
sbb
add
pop
or
iret
jbe
fcmovbe
cmp
cmc
jle
pop
insl
into
pop
loope
inc
adc
je
xchg
sbb
jge
aam
sbb
imul
xchg
or
ss
inc
xor
test
outsb
out
mov
test
dec
xor
sbbb
aad
mov
jbe
push
insl
pop
in
mov
xchg
rcrb
mov
idivl
inc
rcr
or
test
lea
jnp
enter
fcmovu
jo
jg
test
pusha
mov
mov
stos
mov
add
xchg
jnp
xor
ljmp
movsb
lea
sbb
fdivrs
fists
fadds
sbb
std
mov
sarl
dec
sub
xor
push
cmpsb
pop
push
xor
out
mov
mov
into
cmp
adc
inc
dec
into
int
xor
out
outsl
push
xor
scas
in
or
xchg
clc
sbbl
jecxz
sti
add
inc
and
or
cmp
mov
pop
cmp
xchg
push
mov
das
lods
pop
sbb
in
sub
xor
mov
sti
outsl
aad
cli
add
sbbb
or
fwait
mov
outsb
sbb
mov
pop
mov
clc
sbb
add
fsubrs
push
sti
push
mov
mov
xchg
test
imul
pop
pop
mov
out
lret
repnz
std
sub
idivb
jecxz
scas
bound
jecxz
cmp
sbb
ficoms
insb
add
aam
jmp
add
push
or
cmp
and
and
cmp
rorb
nop
jae
push
mov
mov
sub
jp
and
addl
and
and
subl
mov
push
mov
sub
dec
pop
mov
xlat
cmp
out
pop
insb
fiadds
jae
or
rcrb
jge
movsb
push
sub
push
sub
adc
cmc
dec
inc
jb
cmp
shrb
aad
push
mov
and
adc
sub
lea
test
ljmp
insl
pop
mov
int3
xchg
pop
cmp
xor
jmp
inc
xchg
add
jge
sbb
outsb
inc
and
dec
push
adc
test
xchg
repnz
inc
insl
out
cltd
dec
pop
dec
mov
jne
pop
pop
and
mov
push
mov
push
mov
lret
mov
addr16
aaa
arpl
sub
mov
loopne
test
pop
std
cmp
loopne
inc
push
es
or
sub
cmc
lods
mov
stos
sbb
mov
decl
addr16
pop
and
dec
jns
dec
pop
lods
cld
push
and
xchg
pusha
mov
dec
sbb
mov
fwait
xor
das
idivl
int3
popf
outsb
scas
adc
setp
int
in
test
mov
stos
and
imul
jmp
pop
popa
xor
into
fwait
xorb
pop
adc
divb
inc
xchg
lock
add
push
or
add
insl
out
mov
jge
inc
sub
cmpl
popl
xchg
rcrb
sub
dec
loop
das
rorl
fwait
sbb
out
cmc
dec
add
push
jp
call
arpl
adc
cli
jle
pusha
loope
nop
loop
cmp
mov
pop
test
lods
xchg
and
push
mov
push
dec
push
call
push
push
or
dec
loop
pop
push
sbb
rcrl
rorb
inc
adc
je
adc
ljmp
sbb
movsb
clc
dec
imul
adc
sbb
jnp
dec
jno
mov
jmp
push
cmp
sbbb
sbb
mov
fdivrl
adc
pop
sub
dec
mov
mov
imul
fistl
ret
cmp
inc
xor
adc
or
imul
mov
mov
mov
mov
into
jge
cmp
inc
movsl
loopne
lock
loope
xchg
jg
cmp
cmpsl
adc
inc
mov
gs
idiv
loopne
rorb
jecxz
lret
jo
pop
mov
push
cmc
and
je
mov
add
pop
adc
adc
xlat
fsubr
jecxz,pn
xor
push
mov
rcr
out
movsl
sub
sti
inc
loop
push
and
mov
fnstsw
cld
orl
adc
mov
nop
mov
bnd
or
int3
dec
sub
dec
test
dec
dec
mov
nop
cmc
ljmp
bound
or
cld
xchg
arpl
or
aas
insl
ds
jmp
mov
sarl
fisubrs
inc
decl
xchg
in
rolb
inc
pop
and
jmp
imul
add
stc
push
jmp
lret
xchg
dec
div
daa
inc
adc
add
call
dec
ss
jg
scas
jbe
inc
sbb
movsb
xchg
dec
mov
xor
call
pusha
dec
lock
int3
loopne
aaa
test
xadd
xor
or
xchg
lods
pushf
mov
out
sub
dec
and
xor
xchg
or
jp
dec
movsl
std
sbb
lods
mov
xorl
std
add
rcll
jge
pop
inc
inc
sub
mov
mov
cmc
add
mov
ja
jecxz,pt
lock
outsb
dec
mov
cmp
std
mov
mov
in
sbb
aaa
xchg
lods
lods
rcll
shr
pushf
jno
lcall
jp
pop
xchg
push
scas
xchg
daa
sbb
icebp
jp
out
mov
lods
jbe
and
pop
sarl
scas
fst
mov
inc
lret
mov
pop
popf
xchg
test
adc
mov
or
cli
out
and
cmp
into
aam
frstor
cmp
bound
js
push
cs
bound
or
jno
movq
push
rclb
pop
cwtl
clc
jp
popa
inc
pop
cmp
sub
jecxz
fst
or
xchg
cmp
mov
and
mov
adcl
sti
cmp
push
push
out
sbb
inc
and
loope
xchg
pop
dec
mov
aad
stos
pop
mov
fnstcw
mov
xor
or
out
rorb
js
sub
or
rolb
mov
pop
bound
hlt
inc
mov
scas
adc
std
add
pop
js
mov
xor
fdivrl
and
xor
jnp
into
mov
jl
or
cmp
ss
mov
or
psllq
ljmp
mov
dec
push
xchg
dec
cmp
data16
xor
movsl
pop
daa
jb
test
adc
loope
or
movb
xor
jecxz
insl
xchg
daa
movsb
ss
jmp
aas
adc
push
mov
jecxz
sub
pop
mov
cmpsl
int
dec
pmuludq
or
iret
xor
cmp
test
xor
sub
xor
dec
mov
lcall
loop
cmp
inc
out
jle
cltd
add
leave
dec
es
in
pop
lcall
mov
xchg
adc
aad
and
mov
loopne
fisttpl
test
xchg
jmp
push
jbe
adc
jmp
fwait
lods
lock
or
and
fisttpll
test
cmp
add
xchg
jge
aas
popf
das
xor
testl
in
out
mov
push
sbb
lahf
mov
popf
aad
pop
add
cld
aas
bound
sbb
lret
ljmp
mov
decl
pop
shll
mov
in
xor
popa
in
dec
pop
xor
mov
repz
test
push
lock
cmp
cmpsb
xchg
pop
sub
lds
pop
jmp
test
int3
aad
mov
xor
jle
fcomp
cs
add
push
jle
decl
or
unpckhps
dec
mov
xor
arpl
adc
and
jns
mov
mov
lahf
das
push
mov
mov
or
in
ret
cs
mov
push
cmp
jno
pop
mov
jg
es
sbb
cs
inc
jg
aam
jo
mov
push
sbb
mov
mov
loope
xor
push
into
movsl
lcall
mov
popa
pop
ss
or
sbb
sti
mov
ret
push
jbe
xor
imulb
popw
ror
mov
pop
xchg
xlat
stos
mov
jno
cwtl
adc
adc
xchg
cli
xor
adc
push
xor
addr16
int3
test
ret
dec
pop
sub
sbb
notb
int3
cmp
mov
cmp
inc
ret
mov
inc
mov
jg
stc
je
das
es
stc
clc
dec
dec
repnz
push
mov
dec
push
dec
aaa
push
imulb
lcall
or
cmpsb
dec
in
xor
imul
dec
aam
sub
jl
sti
andb
jo
pop
adc
inc
mov
mov
mov
cltd
dec
jecxz
les
add
fidivrl
mov
out
add
jns
xor
ljmp
add
jge
pop
fsubrl
mov
es
adc
jl
or
mov
and
add
push
pop
popa
xchg
aaa
xchg
jae
imul
mov
adc
or
mov
sbb
cmpsb
xor
mov
xchg
mov
ret
lahf
rcrb
iret
xor
cmp
push
xchg
mov
sub
scas
jae
shll
dec
scas
inc
mov
lods
cmp
add
push
xchg
movsl
test
xor
rcrb
add
adc
out
dec
pop
mov
cmc
movsl
insb
lcall
rorb
or
call
sbb
ds
mov
and
movsb
out
arpl
shll
cs
cmc
aaa
add
ss
dec
xchg
xor
jle
pop
call
scas
fbld
add
stos
push
or
loop
fisttps
stc
das
and
pop
les
cmp
sub
int3
mov
mov
push
inc
imul
shlb
dec
cmp
inc
nop
cld
mov
add
lahf
and
in
lcall
fidivrs
sub
fwait
sub
dec
mov
mov
ret
mov
sub
mov
adc
add
push
lods
cmp
in
aam
aaa
js
std
lcall
sbb
cmp
jno
cltd
pop
dec
std
shlb
std
adc
repz
ss
cmp
xor
xchg
inc
cs
and
cmp
cli
add
sbbl
pop
add
stos
xor
cmp
into
jle
js
lcall
adc
imul
push
stos
xor
dec
imul
jae
xor
xchg
sbb
mov
js
push
push
inc
fisttps
out
mov
lcall
xor
divl
cmp
scas
cmpsb
or
dec
jmp
shrl
fistl
sbb
inc
add
xlat
cli
in
xor
lds
inc
jl
mov
aas
or
pop
mov
icebp
mov
sub
xchg
shll
cld
xor
cmp
push
pop
and
jb
inc
neg
mov
mov
mov
test
fdivs
lahf
mov
jp
add
adc
adc
ret
sbb
mov
inc
movd
jge
nop
mov
arpl
push
ret
imul
adc
fcomps
push
movsl
fdivr
add
mov
adc
enter
loope
mov
subb
mov
mov
or
pop
adc
lods
mov
pop
mov
jmp
mov
xchg
adc
bound
xchg
push
ret
mov
sub
pop
pop
test
divb
mov
insb
push
adc
je
mov
xchg
push
xor
jne
inc
addr16
xchg
pop
add
iret
or
jae
cmpsb
sbb
sbbl
arpl
fisubrs
sub
bound
int
xor
inc
leave
stos
cli
test
fdivrs
addr16
clc
push
int
xchg
cwtl
or
daa
adc
and
xlat
or
sbb
adc
pop
sti
mov
mov
loope
aad
das
xchg
loop
shrl
pop
test
jo
adc
and
lret
sti
fwait
cli
mov
add
pop
cmpsb
testl
cmpsb
or
insl
aas
inc
sahf
hlt
pop
les
add
push
andl
test
scas
mov
test
aad
divb
add
lock
xchg
inc
inc
pop
loop
pop
lock
ljmp
and
jnp
pop
sar
clc
sti
xor
mov
hlt
arpl
push
imul
incl
mov
cmpsl
faddl
rclb
jmp
notl
mov
xchg
in
jle
arpl
shrl
mov
fsubrp
inc
mov
or
push
jnp
fs
cmpsl
mov
addb
cmpsl
xor
jge
and
loopne
or
adc
jl
inc
or
cli
repz
ja
mov
js
xor
pop
jl
sbb
leave
int
bound
jb
mov
pusha
pop
xchg
data16
dec
jno
add
inc
cmpsb
push
lret
or
lret
loopne
jge
out
pop
pop
sbb
out
ror
aam
or
flds
add
mov
push
mov
ffree
add
fcomps
hlt
bound
dec
push
inc
cwtl
pop
mov
sti
mov
fwait
movsb
push
ss
xchg
ja
fildl
enter
jb
or
push
xor
and
shrl
mov
stc
cwtl
int3
cmc
and
sbb
jae
push
mov
in
or
fcomi
cmpsl
inc
scas
mov
sub
mov
scas
cmc
sbb
shrl
rorb
dec
cmp
jecxz
fidivl
push
pop
cmp
ljmp
sub
fcomip
pop
add
adc
xchg
add
push
push
add
dec
sbbb
aas
mov
push
xchg
jge
fwait
inc
inc
js
jno
fdivl
pop
lea
fwait
sbb
ret
mov
outsl
adc
mov
mov
lea
icebp
xor
jb
scas
pop
lahf
push
daa
or
sbb
cmc
addb
xchg
int3
popa
scas
cmpsl
push
insl
or
popa
bound
dec
mov
cmpsl
lahf
imul
out
loopw
cltd
xchg
jnp
sbb
add
sub
shr
jno
cmp
shr
mov
out
out
aad
mov
jg
out
xor
inc
movsl
adc
loop
sub
fisttps
sbb
lret
xchg
and
mov
movsb
lea
loopne
rcl
test
xor
xchg
add
push
or
test
mov
incl
scas
mov
cmp
subb
xchg
and
lcall
jno
mov
add
mov
cmp
std
xchg
cmp
jle
daa
sub
push
push
dec
push
pop
gs
pop
inc
movsl
push
inc
mov
mov
bound
adc
push
xchg
les
das
sahf
lods
rcrl
fidivrs
rol
and
xchg
add
mov
movsb
pop
stc
cmc
pop
push
cli
xor
lods
lds
push
jge
jns
cmpsb
je
fistps
cmp
mov
push
mov
xor
mov
es
scas
out
jb
out
std
add
cmp
cli
test
leave
sti
mov
and
div
pop
xchg
sub
mov
fwait
cmp
mov
jecxz
mov
movsb
mov
ficoms
cmpsb
jl
std
in
cmpl
adc
cmp
xchg
sbb
loope
inc
jae
test
mov
jo
leave
out
mov
adc
push
mov
inc
aaa
insl
mov
and
fs
mov
fs
inc
xchg
ljmp
sub
sti
enter
insb
adc
frstor
and
add
sbb
mov
dec
bound
popf
pop
rclb
test
incb
dec
xchg
das
cmp
pop
pop
shl
leave
inc
lret
data16
adc
sub
mov
mov
lea
repnz
addb
adc
push
and
pop
inc
mov
out
movsl
cmp
lahf
push
jl
jl
adc
decl
inc
and
push
cmp
adc
dec
fidivrl
lret
jle
imull
ja
sub
stos
xchg
movb
mov
xor
lahf
leave
call
std
test
fadd
roll
scas
xchg
xor
mov
cs
cs
sbb
pop
mov
cmp
mov
ds
pop
pusha
and
cmp
mov
inc
xchg
jnp
decb
xchg
adc
or
aaa
mov
imul
xor
movsl
mov
lods
adc
xchg
leave
outsl
cltd
pushf
pop
je
cli
adc
mov
sarl
jp
mov
sbb
out
stos
cmp
cmp
xchg
cmp
jae
and
pop
add
xchg
fisubrs
xchg
iret
fs
imul
push
stc
js
stos
loopne
xchg
push
imul
inc
or
lcall
popf
adc
xchg
ret
xorl
mov
imul
mov
in
out
outsb
inc
ds
orl
into
andl
mov
outsb
fwait
insb
pushf
push
add
dec
pop
mov
xor
ficomps
fldenv
ret
and
jge
pop
mov
add
pop
or
hlt
mov
fcmovbe
testb
scas
and
inc
cmpsl
cs
les
popf
adc
pusha
popa
lahf
aam
pushf
jae
jo
addr16
adc
push
or
add
aad
jne
inc
test
ret
ret
insb
sahf
jecxz
out
in
cmpb
mov
adc
ds
add
bound
xor
inc
cmp
add
not
mov
jl
cli
push
gs
jo
cmc
scas
lods
push
jecxz
fisubrl
int
test
push
mov
lock
inc
inc
xor
aam
inc
jne
insb
sub
lods
out
lret
cmpsb
andl
or
test
fwait
stc
loope
fld
cltd
mov
mov
push
pop
xor
call
stc
lahf
xchg
and
cmpsb
shr
xchg
or
mov
jmp
scas
and
jne
call
mov
mov
jns
adc
fwait
test
scas
inc
into
fs
cmp
js
inc
sbb
mov
iret
xor
add
adc
iret
and
jbe
xor
mov
and
push
push
jmp
loop
mov
lahf
xchg
loop
sub
xlat
addb
arpl
pop
xchg
andb
sub
mov
mov
test
cmp
add
lods
std
mov
or
pop
xchg
ficomps
fcmovnbe
call
cmc
sub
push
jmp
jl
stos
movl
cmpsl
mov
scas
fmull
cmp
cmpsb
mov
sub
jg
pop
pop
cld
jp
ret
mov
xchg
adc
dec
dec
pop
mov
and
jae
lods
cmp
cmc
fcompl
adc
mov
dec
iret
cmp
fimuls
ds
jmp
lea
add
fst
pop
imul
mov
inc
mov
lock
adc
mov
imul
pop
cmp
fisubl
jl
mov
mov
outsl
test
repnz
jl
or
push
lock
outsb
push
push
inc
js
orl
mov
mov
fstl
js
in
adc
adc
mov
adc
pop
loope
pop
ficoml
sahf
mov
mov
sub
popa
js
or
nop
jmp
sub
pop
mov
outsl
jmp
mov
xor
das
push
aam
leave
push
xchg
loope
adc
test
jb
arpl
cmpsb
lret
loope
repnz
pop
js
sub
pop
mov
fisubs
push
xchg
dec
dec
fcmovb
jbe
bound
lcall
test
add
clc
es
mov
imul
sub
je
mov
jl
arpl
xchg
clc
jle
jp
mov
mov
pop
ljmp
add
fsub
icebp
xor
xchg
xchg
out
xchg
sub
loope
and
adc
jno
inc
popf
sqrtps
test
add
lea
inc
out
mov
or
dec
clc
sbb
dec
jne
pop
das
sub
stos
cltd
dec
inc
dec
pop
shrl
sub
aad
xchg
int3
mov
rorl
sbb
pop
std
cs
mov
ret
cmpsl
aad
jmp
sub
filds
mov
mov
pop
je
cmp
icebp
and
inc
inc
and
xchg
inc
mov
dec
int3
dec
out
inc
enter
test
pop
scas
add
or
arpl
inc
xor
push
jp
push
leave
pusha
adc
cmp
and
mov
cmp
movsb
aaa
lock
mov
lds
loope
jbe
jo
xor
sub
inc
xor
jne
insb
aas
or
pop
or
xchg
jg
sbb
mov
jecxz
xchg
adc
adc
sbb
lds
push
loop
rclb
test
negb
lods
pushf
dec
xchg
sbb
cmp
faddl
dec
fs
xor
push
mov
sti
mov
inc
orb
out
jns
mov
repz
lds
arpl
pop
cmp
mov
adc
movsl
aad
sbb
cmp
mov
inc
ret
and
test
sti
or
dec
adc
mov
in
pop
mov
mov
mov
inc
sub
addb
xchg
pop
stc
clc
mov
sbb
adc
pop
shll
inc
jle
in
mov
out
iret
sub
or
adc
js
fistpll
pop
rcr
daa
fbstp
rclb
dec
mov
mull
or
mov
or
andl
pop
xchg
lock
stos
push
ret
lock
fldl
jb
or
xor
xlat
out
mov
insb
lea
mov
mov
fsubp
aad
outsl
jle
mov
cli
sub
call
out
push
outsl
fsubr
out
cmpxchg
nop
mov
xlat
push
pop
mov
inc
jmpw
jmp
jns
lahf
pop
mov
xchg
pusha
and
pop
pop
test
push
adc
leave
fiadds
sub
iret
jns
mov
test
adc
js
cmpsl
pop
clc
push
push
test
enter
je
mov
das
cmp
xor
inc
lret
imul
lock
dec
mov
xchg
jo
jmp
cltd
xchg
push
sub
repnz
mov
mov
sbb
mov
inc
pop
lds
aam
mov
repnz
mov
cmp
xchg
xchg
scas
aaa
loopne
sbb
mov
call
mov
dec
dec
and
daa
imul
sub
jb
mov
lea
out
push
add
sbb
pop
lods
pop
cmp
sbb
sti
adc
imul
jo
cmpsl
je
js
jb
push
lret
push
sbb
jnp
lcall
inc
jp
pop
sbb
mov
xor
xor
rcrl
adc
int3
mov
push
sarb
inc
insb
mov
inc
lcall
pop
cmpsb
add
cmp
out
cmp
ds
incl
sub
jecxz
cwtl
std
push
insl
jbe
es
cmp
pop
xchg
popa
mov
add
mov
fs
cmp
xchg
pop
sbb
out
sub
gs
add
ds
cmp
repnz
fcmovbe
fsubrl
sub
and
stos
movsl
add
scas
mov
jecxz
nop
sbb
mov
xchg
jb
in
leave
pop
push
cwtl
mov
in
push
lods
std
lret
xor
and
rcrl
cmp
sti
fsubr
popa
inc
xor
bound
xorb
cmp
repnz
aad
mov
aas
pop
sub
lods
sub
rcrb
sbbb
sbb
xchg
out
adc
jle
shl
pop
cltd
mov
dec
sbb
or
sub
or
jle
movsb
stc
movsb
outsl
push
stc
cld
add
push
sahf
mov
std
pop
xchg
lret
outsb
and
push
mov
xchg
xlat
imul
pop
sbb
das
lea
mov
outsb
adc
dec
ds
add
arpl
sbb
cmpsb
mov
icebp
fs
jae
jp
xlat
jecxz
pop
pop
shr
xchg
push
pop
add
lods
scas
fisubrs
add
aaa
addb
or
push
clc
dec
dec
outsl
cmp
mov
inc
mov
push
cmp
mov
mov
notl
addl
movsb
loopne
nop
or
dec
inc
mov
les
push
lea
push
in
adc
js
mov
out
jae
dec
movsl
test
in
cltd
xlat
dec
out
inc
pop
mov
mov
xor
xchg
push
insl
push
pop
adc
mov
xchg
cmp
stc
and
jp
mov
xor
dec
adc
xchg
mov
xor
sbb
mov
or
cmp
mov
cmp
mov
aas
xchg
adc
pop
push
sub
ss
aam
push
loopne
imul
sub
fwait
adc
jp
add
jg
packuswb
lcall
dec
push
sbb
dec
in
mov
iret
ds
inc
mov
inc
adc
or
and
add
lret
fs
jle
jl
cmc
sub
les
jo
adc
push
pusha
and
cmpl
repz
and
sarl
dec
dec
xorl
outsb
mov
pusha
add
insl
mov
xchg
mov
stos
dec
pop
pop
shlb
in
xor
add
cld
inc
aam
sbb
sub
jp
aas
sahf
cmp
scas
andl
inc
out
test
sar
add
pop
dec
or
repnz
test
ret
hlt
mov
cwtl
pop
cltd
cmpsl
rcrb
xor
adc
and
sub
adc
pop
mov
adcl
fsubl
dec
and
fmulp
pop
add
bound
mov
or
jmp
push
int3
or
or
ss
mov
pop
insl
test
sbb
in
ret
inc
int
insb
ror
popf
in
roll
xchg
mov
outsl
mov
jp
adc
rclb
imul
mov
gs
icebp
lock
dec
lock
push
hlt
nop
jo,pt
pop
xchg
jmp
push
or
test
pop
adc
int
leave
in
sti
push
jae
mov
stos
push
pushf
out
adc
dec
int
adc
inc
add
push
add
mov
push
jb
cwtl
dec
or
pop
xor
arpl
out
notl
mov
push
lahf
outsb
push
insb
jecxz
imul
sti
lods
das
mov
xor
nop
mov
pop
mov
pop
sbb
in
sbb
push
push
sub
ja
mov
shl
push
ljmp
or
mov
mov
insl
mov
adc
sub
sbb
mov
daa
sub
mov
add
cli
and
shlb
rclb
push
pop
ljmp
test
out
adc
popa
leave
outsl
xlat
sub
ss
divl
sbb
aam
test
mov
push
xchg
dec
call
roll
inc
cwtl
inc
pushf
and
cmp
insl
jl
lcall
or
mov
and
pop
dec
call
cltd
push
dec
mov
dec
sub
xchg
or
sbb
mov
nop
cmp
add
movsl
sbb
insb
xlat
rorl
scas
mov
data16
xchg
push
jg
add
pop
inc
mov
cltd
pop
into
and
inc
sub
jns
insl
xor
push
adc
fsubrl
mov
cmp
cs
clc
push
sbb
xorb
fmull
out
mov
or
push
mov
cmp
movsb
int
mov
or
movsb
inc
sub
pop
cwtl
sbbb
clc
cmp
pop
in
jo
xchg
dec
call
and
push
inc
out
decb
into
push
jmp
notl
movsb
testb
imul
ss
pop
lea
jmp
out
lret
addr16
dec
inc
sub
sbb
push
and
repnz
jle
sbb
xchg
aas
shll
mov
push
shlb
xchg
cltd
outsl
pop
in
cmc
push
in
mov
dec
lahf
rol
add
mov
imul
gs
popa
leave
sahf
xchg
mov
add
inc
lods
repz
in
test
les
cmp
or
or
cltd
lret
imul
dec
cltd
xchg
xor
pushf
les
fsub
xchg
out
adcb
ja
int3
aaa
sbb
xchg
js
sub
daa
dec
faddl
lret
or
xor
pop
jmp
add
out
jno
bound
mov
xchg
adc
add
ja
pop
add
mov
push
mov
aad
mov
leave
push
jnp
sub
dec
lahf
mov
push
iret
outsl
jne
stos
aad
ljmp
mov
cwtl
in
hlt
jno
jecxz
outsb
out
loop
cli
fmul
iret
adc
add
out
mov
loopne
mov
xchg
out
rolb
int3
rorb
push
push
imul
and
in
stos
pop
lock
gs
shll
repnz
jmp
test
xchg
aaa
out
mov
push
sbb
testl
shl
nop
lret
bound
jle
jecxz
jae
jge
loope
pop
in
add
aaa
dec
add
nopl
bound
stos
pop
cld
insb
cs
dec
fcomip
call
xor
loopne
outsl
add
xor
test
xchg
imul
mov
les
stos
sarl
add
sar
icebp
shlb
loop
jg
or
adc
shll
push
mov
arpl
sti
test
xchg
sub
fcoms
sub
in
negb
mov
push
ret
push
aas
or
mov
adc
xor
mov
jae
xor
aas
and
add
and
adc
mov
rcl
aas
leave
subl
stc
flds
les
sbb
cmp
inc
movsb
and
call
cmp
dec
xorb
outsb
in
sub
mov
and
sbb
sbb
pop
fimuls
orl
out
lahf
mov
push
cmp
out
add
mov
shl
ljmp
jle
pop
movsl
adc
cltd
test
inc
push
clc
add
enter
push
out
push
push
or
ja
jbe
fisttpll
mov
neg
cs
rcl
push
adc
aam
cmc
mov
imul
mov
pop
adc
xor
pop
fbstp
ds
add
and
xlat
cmc
jno
in
bound
fwait
and
ja
adc
add
cmpsb
push
sub
mov
dec
mov
insl
jge
mov
scas
or
sahf
fldl
push
lods
lds
dec
mov
push
js
jbe
lret
sbb
mov
leave
jo
mov
sbb
jnp
cmp
clc
lret
das
enter
mov
adcl
stos
movsb
cmp
nop
and
nop
jle
ffree
int
rolb
xchg
pushf
dec
ret
jne
jmp
sarb
dec
mull
cwtl
cmp
inc
pop
in
mov
pop
ret
insb
xlat
ret
les
jo
mov
xor
js
insl
pop
addr16
dec
ss
sahf
cs
pop
loopne
mov
xor
jmp
negb
insl
xchg
test
inc
leave
ja
sahf
iret
add
mov
xchg
push
aad
scas
cwtl
xchg
jp
adc
mov
mov
insb
mov
insl
loopne
repz
out
dec
out
and
je
insb
call
add
repz
xor
loop
inc
insl
or
addb
pop
out
daa
push
mov
adc
stos
inc
cmc
icebp
imul
mov
stc
dec
jns
popf
and
and
out
int
mov
testb
arpl
arpl
sub
lods
fidivrs
pusha
es
pop
xor
lahf
iret
dec
popaw
jne
push
lea
xchg
adc
mov
xchg
mov
movl
cld
imul
imul
sbbb
bound
jne
js
mov
inc
icebp
xor
imul
test
push
mov
xchg
inc
add
stc
inc
dec
mov
mov
orl
or
jno
cltd
jecxz
adc
adc
fiaddl
add
repnz
mov
out
add
sub
adc
mov
pop
out
bound
jmp
adc
js
cld
test
push
fldenv
cmpsl
int3
les
int
lds
cmp
ret
imul
arpl
fdivrs
ss
loope
cmc
aas
push
cmp
imul
insl
cmc
cmpsl
lods
shll
cld
popa
push
push
sbbl
adc
loop
or
jmp
lods
and
pop
sub
fdivr
mov
adc
xchg
fstps
inc
xchg
mov
lods
outsl
push
jb
jno
mov
mov
lea
xchg
nop
jb
fdivrl
sub
jbe
mov
lea
jg
xor
jae
cmp
inc
inc
or
lods
jmp
dec
shrb
or
or
fistl
sub
add
ret
int3
test
pusha
xchg
xchg
sbb
dec
jb
xor
pop
dec
adc
and
les
push
leave
repnz
xor
imul
xor
sbb
sti
jae
lods
daa
jae
jge
mov
pusha
jp
xchg
sarl
das
adc
xorb
lds
cmp
xor
adc
add
test
pushf
push
clc
jg
inc
push
pusha
inc
mov
pop
dec
push
add
sbb
adc
add
std
jle
call
ret
cmpsb
enter
jmp
lea
mov
ret
mov
pop
and
xchg
xchg
mov
aad
sbb
pop
jmp
push
sbb
mov
mov
cwtl
lahf
bound
pop
mov
push
pop
jnp
testb
fstps
icebp
jns
jle
imul
cmpsb
mov
je
dec
add
push
jmp
dec
jle
and
jecxz
pop
out
mov
xor
push
lock
fisttpl
or
dec
xor
outsl
and
pop
mov
ljmp
es
inc
insl
push
sub
rcl
inc
or
popf
xchg
push
push
xchg
and
adc
sbb
ret
xchg
inc
adc
mov
push
test
std
pop
ret
cli
lcall
imul
mov
jae
xor
int3
adcl
test
mov
push
test
inc
sub
mov
inc
xor
push
ret
push
push
in
and
add
push
jp
cmp
push
lds
or
hlt
xchg
repz
mov
lret
jle
test
or
faddp
jae
cmp
sub
int3
push
fs
daa
faddl
push
mov
test
mov
pop
push
rolb
es
loope
rcl
xlat
mov
fwait
stos
repnz
cmc
pop
ds
pop
jle
enter
bnd
dec
push
loop
sti
xor
sub
cmc
into
clc
frstpm(287
fistpll
sub
out
shlb
or
xor
pop
dec
addr16
pop
loopne
mov
dec
js
mov
dec
movsb
movsb
out
sbb
add
adc
loopne
xor
popa
cltd
sbb
or
xchg
stos
mov
xorb
xchg
add
aaa
push
test
into
push
pushf
les
scas
sti
dec
cli
inc
test
scas
das
mov
mov
cs
sahf
jmp
adc
xchg
lret
inc
repz
dec
filds
imul
test
cli
xor
push
push
xor
data16
rcll
mov
or
iret
jb
inc
jge
inc
push
imul
push
mov
mov
mov
dec
jb
and
adc
sbb
cmp
out
add
imul
popf
or
sub
leave
xchg
mov
data16
in
dec
popa
lds
inc
jno
mov
pop
subb
add
mov
je
push
inc
mov
gs
dec
mov
inc
push
adc
or
pusha
jo,pt
xchg
std
push
std
leave
sbb
rcrl
mov
call
cmp
inc
incl
dec
orl
lcall
cli
dec
xchg
test
fxch
xchg
jne
jle
aas
jg
xchg
sub
cmp
hlt
imul
scas
pop
sbb
inc
push
arpl
or
inc
jmp
add
mov
xor
sbb
jae
cmp
or
out
jecxz
lods
jmp
aad
push
sub
adc
leave
cmp
inc
call
or
fwait
xchg
stc
test
jae
push
pop
ret
dec
xor
inc
arpl
loope
mov
push
pop
aam
ljmp
imul
popa
incl
jmp
mov
dec
inc
jle
scas
sub
and
stos
cmpl
notl
rorl
and
mov
leave
inc
data16
subl
mov
lea
call
adc
adc
dec
arpl
rorb
cld
aad
and
mov
inc
fsubrl
sbb
insb
cmp
pop
sbb
mov
and
pop
jmp
pusha
add
sub
mov
or
insl
pop
mov
mov
daa
lds
mov
cmpsb
mov
mov
hlt
jg
pop
push
mov
loopne
xchg
xor
cmp
xchg
popf
ficoms
inc
push
sbbb
xor
mov
jp
insl
icebp
popf
int3
fldl
enter
out
fwait
sub
add
inc
or
cmp
ljmp
sbb
mov
into
cmc
mov
andb
mov
jg
xor
push
or
cmp
mov
or
aas
sbb
pop
cmp
push
ss
repz
inc
xchg
inc
dec
xor
fbstp
addl
dec
jb
int3
movsl
push
adc
leave
jnp
scas
clc
add
ja
sub
mov
out
mov
lret
dec
mov
in
sbb
ljmp
lretw
or
and
repz
cmpsb
sahf
sti
add
or
ds
mov
dec
cli
es
adc
and
fdivrs
scas
out
xor
or
fcomps
mov
mov
cltd
xor
and
out
inc
cmp
dec
push
mov
adc
sti
mov
into
pop
adc
aaa
add
push
setbe
ret
xchg
adc
sbb
je
lods
faddp
mov
nop
xlat
loope
jo
jl
xchg
xchg
mov
xchg
ljmp
inc
mov
das
arpl
mov
nop
scas
xchg
dec
testb
mov
mov
cwtl
xchg
dec
xor
dec
and
adc
inc
mov
stos
push
popa
xor
push
pusha
jo
cmpsb
fsubrs
mov
js
into
cs
lret
push
arpl
ja
pushf
adc
mov
imul
inc
mov
gs
shlb
or
lret
add
pusha
inc
push
iret
jmp
in
mov
dec
je
push
pop
bswap
sub
push
mov
xor
imul
push
test
mov
inc
push
dec
out
pmullw
push
hlt
jae
mov
pop
int3
test
cmp
xlat
adc
xor
sbb
mov
insl
repz
insb
mov
xchg
or
inc
gs
mov
insb
cmc
sub
jge
sbb
shrl
ret
fucom
adc
dec
addr16
addr16
ja
xor
mov
dec
mov
jl
mov
enter
adc
mov
or
jg
out
cmp
jo
insl
loope
mov
and
inc
hlt
mov
mov
pop
iret
pop
les
call
mov
push
loopne
cmp
xor
cmc
cmp
xchg
dec
xor
roll
stos
addb
test
xor
xor
sub
lods
adc
jbe
test
sub
push
jp
push
add
xchg
xchg
cmc
fs
fsubl
mov
cmpsl
inc
fisttpll
popa
and
xor
mov
mov
ja
and
addl
or
and
test
inc
ja
insb
adc
iret
imul
lcall
cld
call
mov
test
jge
adc
fnclex
movsl
mov
outsl
lods
sub
inc
sbb
mov
pop
jp
jecxz
int
repz
cmpsl
int3
out
xchg
aaa
add
sbb
mov
and
push
jmp
xor
xchg
fs
pop
push
pop
inc
xchg
cmp
jl
xchg
and
daa
test
nop
test
inc
scas
mov
dec
lss
adc
xor
imul
loop
gs
push
adc
cmp
idiv
mov
cmp
jbe
cmp
sbb
dec
mov
adc
push
outsl
xchg
aas
inc
xor
in
and
mov
mov
pushf
fcmove
ja
shrl
adc
dec
mov
cmp
mov
sbb
jmp
pop
sub
push
call
jge
outsb
fwait
lret
ret
xchg
rorl
pop
xlat
mov
mov
jb
iret
inc
test
ret
insl
mov
add
pop
push
adc
mov
push
add
pusha
and
js
ret
rcll
mov
mov
out
mov
mov
mov
and
xor
push
insb
cmp
jbe
mov
lock
cmpsb
cmp
mov
dec
out
adc
pop
icebp
and
je
cwtl
scas
out
insl
rcl
lds
into
xchg
xchg
adc
jmp
or
cltd
push
lock
inc
or
sbb
int
rolb
popf
dec
mov
lds
jne
cmpsl
inc
dec
jnp
push
int
dec
mov
pop
imul
mov
cmpb
sahf
jae
jecxz
lcall
repnz
jb
dec
xchg
lods
imul
dec
sbb
fnsetpm(287
push
lods
jp
aas
imul
stc
cmp
and
jl
xlat
xchg
rcrb
or
add
enter
lcall
pop
mov
outsl
call
xor
int
in
mov
aas
shrl
pop
pop
lock
mov
push
out
push
loopne
ds
int3
adc
jl
lock
mov
jb
inc
fisttpll
cmp
push
lret
sti
mov
fdiv
add
popf
cmp
add
xchg
jno
xchg
idivb
jl
push
inc
xchg
mov
lods
mov
mov
call
dec
test
arpl
cmp
data16
mov
jmp
fcomps
dec
dec
push
fbstp
mov
sub
enter
cltd
and
add
jecxz
out
nop
push
xchg
ret
into
or
test
push
mov
dec
shll
mov
sti
add
mov
push
js
cmp
je
dec
xchg
jmp
mov
orb
mov
lods
in
xchg
rclb
or
or
inc
in
and
fildl
inc
cmpb
xor
loopne
jnp
or
jbe
js
lahf
adc
or
out
or
pusha
or
ja
arpl
dec
add
mov
cmpsb
lea
mov
mov
lret
in
cmp
test
xchg
jnp
aam
inc
mov
loopne
rcl
cmp
mov
mov
jg
iret
push
jmp
sbb
pusha
pop
cmp
mov
dec
les
stos
aam
push
push
popf
imul
cmc
adc
lcall
inc
icebp
int
pushf
mov
mov
stos
push
cmp
mov
inc
inc
jno,pn
dec
dec
xchg
mov
sbb
mov
dec
loop
jno
xor
xchg
aam
gs
add
dec
xchg
jb
sbb
outsl
cmp
inc
andb
addb
shll
gs
push
int3
cmc
popf
in
scas
pushf
lahf
in
mov
clc
out
js
adc
pop
and
jmp
dec
outsb
inc
inc
in
in
push
jle
std
mov
lods
addr16
pop
scas
xchg
ljmp
pop
lcall
mov
testl
jp
rep
cltd
add
mov
push
neg
jne
jl
xor
add
sbb
movl
test
push
or
imul
cmp
scas
icebp
and
rorb
dec
fcomip
mov
scas
negl
sahf
fimuls
je
outsb
cmc
adc
in
les
movsb
mov
inc
push
js
fmull
jge
es
sarl
push
pop
loopne
add
sti
mov
jo
stos
aam
mov
sub
enter
dec
jg
cmpsl
movsl
mov
mov
fcmovne
xchg
xchg
jne
xor
mov
pop
cmp
fidivs
xlat
sub
ja
and
mov
nop
mov
out
add
in
sbb
out
or
pop
iret
ljmp
xor
add
dec
mov
or
aas
popf
out
les
cltd
sbb
xor
and
std
ss
out
loop
arpl
pop
sub
inc
inc
out
xchg
mov
push
xchg
mov
pusha
sub
insb
insl
add
or
inc
push
xchg
add
mov
std
push
jne
jne
jnp
mov
push
xor
lret
js
xor
jl
add
daa
jae
loope
jne
xchg
fstl
mov
pop
aaa
sub
movsl
push
mov
sub
or
dec
xchg
ret
jb
mov
or
cmp
push
push
lret
in
cltd
pop
aas
mov
sub
xor
mov
pop
shrb
fwait
jg
cmp
icebp
scas
in
lea
inc
popa
lods
ret
data16
jae
xor
mov
sbb
adc
and
xor
pusha
pop
fcmove
add
sbb
xchg
mov
testb
xor
push
in
cwtl
add
adcl
pop
cmpsb
inc
mov
inc
pop
call
or
xchg
mov
adc
ss
or
ffree
dec
mov
adc
xchg
sbb
jno
xchg
cmp
inc
pop
in
jno
int3
sbb
jge
dec
lock
jbe
rcl
lods
data16
xchg
push
and
mov
in
shr
mov
adc
sbb
ljmp
cmpsb
cmp
cmp
sbb
push
rclb
addr16
sti
add
mov
jbe
outsb
cmp
adc
test
xchg
filds
lods
hlt
jns
mov
out
or
fistpl
loopne
data16
cld
push
out
sub
fldcw
in
xor
or
mov
and
movsl
mov
or
push
call
fisubrs
pop
mov
aas
add
in
fnsave
incb
test
data16
mov
js
bsr
sub
push
aad
pushf
loope
cmpsb
xor
add
shll
inc
stos
cmp
dec
mov
pusha
mov
movsb
push
scas
or
push
inc
mov
fiadds
sahf
pusha
or
lock
fdiv
je
mov
xorl
xchg
xchg
sahf
cmp
cs
inc
or
or
jo
cmp
cmp
pusha
cwtl
mov
sub
and
adc
push
cmp
pushf
test
add
not
ret
pop
loop
lahf
test
xlat
negb
out
xchg
jmp
cmc
sub
push
jnp
out
stc
cmp
adc
mov
jge
in
ret
xlat
xchg
jno
mov
outsl
ss
mov
jmp
mov
pop
jnp
sub
das
dec
ljmp
neg
mov
pop
lock
sbb
inc
sub
test
lcall
shll
stos
aaa
scas
mov
xor
or
sbb
inc
pop
xor
fildll
decl
mov
aam
add
mov
rcrl
and
fisubrl
xchg
pop
or
mov
addb
mov
inc
mov
imul
xchg
int3
dec
shr
adc
mov
fmul
jbe
pop
lahf
pop
stos
out
cmc
pop
xor
fdiv
pop
jecxz
stos
add
ficoms
fcmovb
lods
push
sbb
dec
jl
sub
shll
call
ds
jecxz
hlt
jecxz
mov
and
daa
and
in
inc
ja
mov
dec
and
leave
xor
cmc
push
or
fdivs
les
iret
push
mov
std
out
sbb
idivb
add
hlt
xor
sub
shlb
mov
cmp
cmp
ds
mov
mov
stos
xchg
outsl
fdivl
cmpsb
jb
add
lea
leave
pop
js
in
xor
dec
aad
jl
lea
mov
jl
ret
in
push
sbb
push
sbb
fs
push
andb
jle
inc
popa
push
cltd
push
leave
push
inc
out
cld
sub
imul
xchg
xchg
adc
push
sub
push
shll
shll
push
push
adc
cmp
arpl
push
das
mov
test
xor
push
repz
pusha
sbb
sub
push
pop
xchg
lds
cli
mov
pop
dec
xchg
aam
push
fisubl
pop
stos
fldt
push
out
pop
lods
pushf
sub
cmp
sarb
or
imul
xchg
sbb
pop
jae
test
ja
scas
test
outsb
jns
pop
mov
pop
movsb
pop
xchg
call
pop
rolb
sti
dec
cmpsl
stos
cmc
fisubl
sbb
leave
enter
inc
or
cmp
push
or
shrb
sub
inc
adc
rol
mov
xchg
push
jmp
sahf
cmp
jbe
jle
pop
scas
mov
mov
adc
popf
popf
xchg
cmp
jp
scas
aaa
mov
jmp
shl
jmp
push
aas
jecxz,pt
xlat
loopne
movsb
pop
cmp
mov
mov
xor
pop
and
insb
insb
mov
dec
mov
shl
and
fadds
xchg
std
push
push
inc
cmp
mov
add
or
adc
mov
or
cmc
cltd
mov
sahf
push
xchg
push
xchg
jb
lret
shlb
fwait
dec
sti
iret
mov
nop
inc
sub
pop
add
sarl
test
mov
inc
mov
jne
and
cwtl
pop
jae
pusha
xchg
aad
inc
jge
mov
mov
jno
jle
repnz
lret
mov
jl
and
cmpsl
cmpsb
idivl
xacquire
or
dec
ret
and
bound
adc
ja
dec
es
mov
gs
inc
and
add
and
adc
mov
jae
fnstenv
push
xlat
push
test
jnp
sarl
in
aad
cmp
repnz
shlb
add
cli
inc
cmp
xor
push
sub
insl
es
xor
rolb
push
orl
dec
jb
sbbl
xchg
je
cmpsl
divl
hlt
jne
scas
cmp
xor
xor
xor
dec
jo
lock
push
scas
or
push
mov
mov
cwtl
push
mov
mov
test
xchg
mov
push
mov
rcrl
stos
sub
xchg
mov
and
aaa
mov
jnp
dec
push
notb
call
out
add
adc
or
mov
div
outsb
mov
cmp
xchg
cmp
or
sub
sub
xor
into
cmc
adc
xor
inc
mov
push
jmp
loope
xchg
pop
jmp
cld
dec
je
mov
test
fwait
adcb
popa
cmp
pop
into
fcomps
inc
les
ficoml
cmpsb
pop
outsb
push
xor
dec
add
stos
and
jle
add
fstpt
cwtl
js
push
adc
imul
mov
rorb
jp
or
xchg
mov
test
lds
xor
push
dec
addl
enter
pop
cmpsb
xor
mov
movsb
cmp
mov
into
out
sub
iret
dec
jbe
sub
hlt
fs
jns
pop
jnp
or
movsl
enter
nop
and
cltd
int
lret
adc
jp
das
mov
jmp
fisubrl
and
mov
inc
popa
push
cli
sub
xor
clc
popa
xor
mov
shrb
cs
sbb
movsl
push
push
fldcw
mov
and
pop
xchg
cli
inc
andl
fmuls
outsl
pop
mov
les
jmp
aas
repnz
fwait
and
cli
mov
push
and
aam
pop
jbe
mov
arpl
movsb
mov
stc
or
sub
sbb
test
push
add
push
mov
shll
pop
test
lea
mov
or
jge
dec
int3
into
sbb
inc
fucompp
and
push
mov
adc
hlt
push
ja
scas
jns
jl
xor
inc
lcall
push
adc
xchg
ds
add
out
xor
stc
mov
mov
mov
das
aaa
std
sarb
in
aam
scas
cmpsl
or
mov
add
ds
ror
aaa
aas
lods
xor
xor
fstpt
out
push
add
scas
and
shll
sub
and
jne
int3
mov
test
dec
jmp
aaa
jmp
pop
gs
push
xor
push
and
repz
jle
mov
shlb
push
jo
pusha
mov
jo
adc
mov
sub
insl
pop
repz
lods
dec
movsb
roll
ljmp
dec
cmp
lea
cmpsl
push
xor
push
xchg
push
dec
mov
hlt
push
dec
sub
dec
out
and
xchg
adc
sbb
mov
outsb
mov
push
jnp
adc
daa
xchg
ret
iret
or
stos
push
rcpps
int3
fs
fldz
and
xchg
sub
stc
jge
adc
scas
out
mov
lock
jb
lcall
add
mov
lock
aam
cmp
insl
test
pop
jo
add
lods
rorb
push
inc
cmp
lea
leave
les
aad
mov
mov
push
hlt
cmp
inc
test
ret
lret
jns
cmp
mov
dec
in
mov
or
out
jne
popa
mov
sbb
hlt
idivb
xor
iret
pop
lds
xchg
push
in
jb
insl
jecxz
das
sbb
mov
mov
pusha
sahf
dec
fists
inc
cli
jno
sbb
xchg
sub
hlt
mov
jmp
mov
mov
daa
add
mov
repnz
scas
cltd
dec
data16
inc
or
sbb
aas
fisttpll
clc
leave
scas
mov
pushf
stc
les
pushf
and
or
call
loope
aad
xchg
dec
iret
push
mov
mov
outsb
and
loope
movsb
out
test
inc
ret
inc
test
inc
jb
out
and
xchg
jne,pt
push
test
test
into
mov
or
dec
push
pusha
je
xchg
in
in
inc
pop
push
xor
lods
add
sahf
add
sub
jge
push
popf
mov
bound
lods
insl
shll
clc
push
fs
and
fstpt
push
pop
popf
mov
scas
or
mov
mov
dec
ljmp
jo
mov
imul
jge
mov
jp
insb
push
mov
jl
imul
scas
fwait
pop
es
adc
xchg
dec
js
lea
pop
ljmp
lods
pop
xor
add
sub
popf
mov
mov
or
lods
push
sub
and
xchg
rclb
adc
hlt
jmp
and
shrb
cmpps
pop
cmpsl
lahf
daa
repz
sahf
lea
mov
pop
or
cmpsl
dec
aam
repnz
sahf
add
jno
loop
cmpsb
negl
je
lcall
sbb
adc
inc
jge
loop
or
cwtl
mov
xchg
out
insl
imul
inc
mov
and
inc
repnz
scas
mov
imul
or
xchg
enter
push
notb
cltd
hlt
and
decl
jmp
sbb
sbbl
sbb
cmp
push
outsb
inc
xchg
pandn
cmpsl
push
ret
push
stos
in
enter
enter
and
cld
mov
and
pushf
push
sarb
xchg
sub
data16
je
xor
movsl
in
cmpsb
int3
push
int
jns
fistpll
jg
js
mov
push
push
andl
repnz
ljmp
out
ljmp
gs
jb
mov
push
jns
or
cs
pop
or
cmc
xchg
fstps
mov
mov
jecxz
daa
xlat
mov
add
sub
inc
jns
xor
fwait
sub
imul
adc
lahf
and
adc
dec
inc
vunpcklps
sbb
mov
loop
jb
fwait
negb
dec
mov
test
insl
sbb
or
outsb
dec
xor
repz
dec
pop
adc
xchg
test
or
cmp
lock
gs
cwtl
mov
push
addr16
or
xchg
es
xchg
jo
stos
dec
push
cmp
xchg
sub
roll
lods
xchg
cmc
daa
pop
lcall
test
jge
add
rcr
out
in
jle
xchg
dec
and
xchg
and
aad
and
js
mov
int3
dec
movsb
cmp
in
push
and
jo
inc
sti
lods
push
xchg
addl
ja
push
lods
aaa
inc
inc
sbb
test
movsl
lods
ret
xchg
or
adc
dec
inc
pusha
xchg
xchg
rcrl
jnp
notb
gs
mov
dec
insb
pop
xchg
mov
and
sub
cmc
les
lret
inc
sar
push
mov
adc
push
push
out
push
jnp
add
js
leave
sar
dec
fisubrl
mov
xor
xchg
mov
sub
pop
sub
and
out
adc
mov
xchg
dec
jbe
cmpl
xchg
aas
clc
cwtl
adcl
xor
push
or
inc
and
repz
jb
jae
les
fcoms
std
and
xor
icebp
cmp
sub
es
sub
aas
or
icebp
rcrb
inc
inc
push
mov
dec
icebp
xor
mov
lret
cmp
cmp
movsl
jp
in
punpcklwd
add
inc
notb
push
sbb
js
imul
lahf
mov
cmp
cmp
inc
push
mov
repnz
mov
dec
test
cmp
test
lcall
or
and
out
lret
or
je
cmp
pop
movsb
cmpsb
in
aas
out
inc
pusha
out
and
jne
jle
out
fcoml
daa
xor
out
fidivrs
out
mov
andb
repz
test
sbb
inc
pop
fimull
shrb
rcrl
fldt
jmp
and
jae
sub
aas
out
adc
cwtl
mov
movsl
aas
mov
xchg
addb
xor
popf
jl
mov
or
push
xlat
push
push
mov
sbb
jge
popa
pmaxsw
mov
outsl
pushf
sbb
gs
jcxz
daa
lret
push
inc
addr16
adc
cmp
shlb
das
shl
jnp
mov
mov
pop
sub
popa
push
jmp
mov
cmp
xor
lea
mov
xor
dec
cmp
popf
call
jae
rolb
ja
sar
xor
cs
jo
and
mov
xor
scas
jg
incl
or
imul
push
gs
push
or
mov
lods
cmp
inc
rcrb
or
shlb
pop
xor
inc
mov
xchg
adc
leave
xlat
nop
clc
xchg
pop
das
fdivp
mov
inc
push
dec
mov
and
iret
cltd
faddp
inc
fimuls
hlt
cmpb
outsl
popf
mov
add
stos
popf
scas
sub
and
jb
mov
add
or
out
and
push
fnstenv
into
mov
ljmp
xor
cltd
cmpsb
cli
ljmp
lcall
mov
push
push
cmp
xlat
int3
xchg
inc
shrb
frstor
enter
mov
inc
mov
cwtl
imul
mov
retw
sub
jnp
out
cmp
cmpsb
mov
repnz
negl
int
xchg
or
aas
sbb
cmp
jns
mov
loopne
cs
lahf
lea
ss
sbb
mov
imul
cld
in
sbb
mov
push
push
xchg
or
xchg
mov
jo
not
xchg
inc
jle
mov
mov
cmp
enter
adc
movsb
push
adc
mov
sbb
lcall
cld
mov
fcoms
jbe
xchg
leave
jb
cltd
lcall
push
sti
test
ret
mov
add
inc
xchg
movsl
inc
lahf
sbb
push
mov
lret
push
outsb
and
cld
in
ljmp
adc
jecxz
pop
lods
rol
lods
xchg
outsb
mov
dec
jne
jg
xor
jmp
mov
jg
jno
or
sbb
pop
jle
adc
inc
or
repz
aaa
and
fiaddl
loope
pushf
jmp
scas
pop
pop
scas
jo
orl
or
pop
dec
sub
subb
xor
popf
fsubs
add
adcb
cs
insl
cwtl
add
scas
and
testl
mov
sub
movsl
loop
inc
sahf
sti
scas
mov
dec
in
mov
and
test
movsl
arpl
das
out
mov
mov
push
test
repnz
xor
cltd
pop
in
jo
clc
adc
push
mov
orb
jl
xor
outsl
es
or
add
sub
xor
xchg
cmpsb
adc
jl
lea
jno,pn
arpl
jnp
insb
or
cwtl
jl
cmpsl
pop
push
pop
cmpb
out
mov
mov
add
add
aam
pop
scas
push
sahf
push
pushf
shlb
scas
mov
outsb
out
mov
mov
dec
in
pop
and
mov
lea
into
repz
mov
shll
mov
mov
jge
mov
mov
and
stos
lea
and
fs
ds
and
dec
push
mov
mov
js
icebp
cltd
and
leave
sbb
lods
mov
stos
cld
add
into
clc
dec
movhps
movsb
out
mov
ret
enter
jmp
andl
scas
add
xor
cmp
sub
xchg
ret
push
xchg
int
sbb
aam
pop
xor
or
popf
xor
test
mov
mov
test
scas
mov
push
mov
les
aad
jmp
arpl
jl
mov
mov
adc
sub
mov
pop
xor
mov
dec
cld
jg
stos
lock
out
insb
ret
xor
jae
inc
inc
jge
in
jbe
sbb
jo
and
pop
lret
push
inc
push
cmp
pop
jbe
aas
mov
xor
hlt
mov
xchg
xor
icebp
push
cmc
out
outsb
and
push
inc
sub
int
inc
jle
dec
sarb
xchg
aad
xchg
rcrb
inc
sar
and
mov
xchg
rdmsr
lods
mov
sbb
mov
sub
movsl
ljmp
xchg
ljmp
fnsave
adc
fsubs
dec
sub
pop
inc
rcrb
sub
shll
stc
js
jb
lcall
ja
lret
lods
add
test
mov
in
je
fistps
leave
push
int3
out
add
lock
andb
nop
xchg
icebp
sbb
dec
lock
jns
pop
dec
adc
and
mov
mov
cmp
lods
std
lret
out
cmp
ljmp
and
std
and
les
jo
jg
jmp
pop
ss
or
repz
pop
xor
scas
data16
push
lahf
push
jno
lret
and
add
ret
and
repnz
sti
dec
pop
hlt
rcll
and
mov
dec
push
cmp
or
jns
mov
xchg
sub
xlat
leave
movb
lret
faddl
rclb
xor
fnsave
shl
add
gs
sbb
pop
mov
mov
pop
mov
leave
mov
popa
icebp
fcom
cwtl
mov
je
mov
mov
xchg
mov
or
je
jb
inc
int
dec
js
rcrb
cmp
in
pop
ret
sub
es
and
nop
or
push
mov
hlt
inc
mov
leave
movsb
fcoms
sub
jecxz
sub
jo
pop
fdivrl
inc
adc
jecxz
lods
dec
rcll
out
cmc
and
push
stos
xchg
inc
mov
mov
push
dec
or
ss
dec
mov
push
add
test
loop
mov
rol
sbb
movsl
int3
sub
ret
lds
stos
pop
xor
insb
ficoml
mov
shl
xor
mov
cltd
inc
mov
cmpsl
mov
fwait
jb
or
or
jle
push
cmc
push
fs
add
fdivl
and
add
int
mov
outsl
inc
fsubr
int3
cmp
jnp
jg
dec
shlb
jne
int
scas
pop
roll
push
inc
daa
outsb
imul
testl
andl
out
dec
sub
fcompl
mov
dec
or
fiaddl
std
lods
sub
lock
xchg
sub
jbe
pusha
mov
dec
daa
test
inc
cwtl
inc
data16
mov
dec
repz
rcl
inc
xchg
dec
test
imul
insl
mov
rcl
adc
daa
inc
xchg
sub
and
jp
pop
insl
mov
dec
sub
cmpb
hlt
pop
sub
pop
dec
hlt
or
sub
xchg
pusha
or
ljmp
add
push
lea
dec
sbb
adc
add
das
out
lods
out
rcr
stos
push
dec
sub
fbstp
enter
dec
adc
mov
pusha
and
add
xchg
xchg
xlat
imul
aaa
test
mov
cmc
test
test
enter
mov
icebp
jne
fbstp
push
cmp
sti
es
mov
adc
cmp
inc
setns
lcall
cmc
adc
rcll
pop
movl
xlat
incl
inc
shlb
mov
xor
jge
sbb
add
mov
das
call
mov
lcall
or
aas
mov
mov
add
sahf
imul
jae
or
lahf
addr16
mov
sti
bound
pop
or
jne
add
outsb
loope
push
rorl
hlt
cld
int
mov
aad
js
jne
add
pop
data16
ftst
test
mov
enter
sahf
push
aaa
mov
stc
mov
push
push
and
in
test
xor
ss
xor
pushf
addl
inc
inc
addr16
mov
gs
sbb
lods
dec
cmpsb
pop
insb
sbb
in
jl
cmp
sub
pop
mov
adc
push
adc
stos
jne
popf
adc
popf
cwtl
xor
data16
jnp
nop
idivb
xchg
es
dec
cli
sub
sbb
stos
sbb
push
fsubl
popa
or
pop
inc
ja
dec
rcll
arpl
lock
sti
idivb
mov
div
sub
push
mov
call
xchg
sub
pop
icebp
les
mov
mov
repz
call
ret
mov
nop
add
sbb
jo
cmp
clc
xor
addb
pop
push
xchg
lret
mov
and
mov
adc
mov
in
cli
pop
sub
sub
and
sub
or
in
test
arpl
xor
insb
ret
lods
mov
cwtl
fs
xchg
mov
mov
testb
cmp
mov
xchg
scas
mov
cmp
test
in
mov
sbb
sahf
push
adc
es
jb
jnp
jecxz
xor
and
mov
pop
push
inc
out
add
fcmove
add
push
xchg
jb
dec
fisubrs
fs
jmp
lods
xor
test
lcall
xchg
adc
pop
xlat
ds
pop
or
sub
out
sahf
mov
add
stos
dec
js
mov
movsb
inc
inc
pop
cmp
and
fiadds
push
sbb
imulb
ret
mov
test
je
dec
lods
arpl
daa
add
out
inc
int3
jnp
dec
adc
cwtl
pop
sbb
aad
pop
cmp
sub
jnp
mov
mov
ljmp
je
lea
mov
pusha
sti
je
dec
mov
cmp
shll
out
loope
arpl
mov
pushf
in
sbb
mov
icebp
rorb
jl
pop
aam
mov
sti
xor
mov
mov
inc
push
mov
push
vaddsubps
cmc
jp
aaa
enter
outsb
rcrl
inc
cmp
lods
xor
jns
nop
outsl
sbbl
sub
in
xor
or
das
mov
jp
xchg
mov
cwtl
xor
fldenv
cltd
xlat
outsl
cmc
xor
aad
and
popl
add
aas
fwait
insl
movsb
insb
stc
jns
push
fimuls
sub
pop
inc
mov
xor
jl
add
sbb
xchg
cmp
sbb
icebp
fsubl
jge
jnp
sub
daa
outsl
xor
into
and
dec
mov
dec
push
stos
adc
je
mov
roll
cmp
add
add
int3
fisttpll
sbb
jb
inc
inc
aad
in
push
jmp
repz
dec
push
dec
push
or
push
scas
loope
xchg
add
es
aad
out
movsb
adc
xchg
or
mov
add
cwtl
mov
ret
cmp
sbb
xlat
xor
jmp
imul
pop
mov
imul
and
loope
stos
jle
cmpsb
test
negl
cmpsl
rcll
fldt
or
ret
outsb
adc
mov
push
andl
sbb
sti
fldl
test
lret
push
ret
stos
sub
mov
outsl
jns
push
push
loop
inc
jp
rcll
jmp
imul
movsl
les
decl
and
cmpsb
pop
cli
fnstenv
movsl
jmp
cli
sbb
pop
enter
add
popa
loope
mov
rorb
fldenv
scas
fwait
scas
pop
lods
adc
push
and
xor
push
jae
sub
test
lret
insb
fcompl
adc
rcrb
adc
cmpb
xlat
clc
fisttps
fadds
mov
sbb
pop
bound
or
test
pushf
cli
xor
pop
pop
mov
jecxz
xlat
in
ret
xchg
popf
imul
add
and
loop
aad
rcrl
xor
xchg
jae
divl
add
pop
adc
mov
sbb
sbb
bsf
outsl
or
out
out
cwtl
mov
ja
inc
faddl
push
scas
mov
hlt
cmc
ffreep
inc
insl
xor
adc
subl
out
adc
jle
xor
mov
mov
jle
pop
add
fs
inc
cmp
xchg
jo
cmp
outsb
and
xor
jnp
lcall
test
mov
popa
sub
leave
cmp
mov
pop
lds
clc
jo
mov
or
xor
xchg
pop
jne
popa
mov
loopne
or
push
into
push
cltd
test
sub
dec
int3
xor
xchg
push
outsb
clc
pop
pusha
jg
jns
jo
cwtl
imul
dec
inc
and
or
or
mov
sbb
jno
mov
jne
lret
test
std
jns
lds
pushf
js
data16
or
addr16
fistps
jmp
pop
xchg
mov
es
inc
dec
add
imul
es
dec
aam
pop
xor
icebp
fldl
pop
dec
lcall
lcall
loop
add
fucomip
sub
jge
movsl
in
pop
sub
push
mov
xor
lods
pop
inc
mov
repnz
push
sahf
hlt
dec
pop
jecxz
sub
gs
push
int3
scas
push
subl
fistps
inc
jnp
pop
push
adc
cs
daa
lds
sub
daa
sbb
das
or
clc
adc
and
pop
int
inc
push
repz
mov
daa
pop
pop
ret
stos
loope
inc
pop
pop
cmp
jmp
in
mov
mov
mov
orl
cmp
sub
push
or
std
fisttps
test
cltd
sbb
pop
dec
fimuls
movsb
xchg
jecxz
pushf
push
jnp
aas
pop
pushf
pop
add
mov
xchg
mov
dec
or
sub
icebp
imul
mov
dec
sbb
outsb
lods
mov
pop
aas
out
mov
lock
inc
je
out
loop
and
mov
popw
dec
jbe
jge
xchg
outsb
fsubrl
mov
mov
jns
adcb
addr16
mov
aad
mov
jp
mov
fcompl
or
sbb
mov
push
dec
mov
mov
pop
push
out
dec
inc
out
in
push
ficoms
mov
mov
fadds
lods
xor
outsl
sbb
clc
mov
ja
int
sarl
push
movsb
cli
orl
push
add
jbe
or
fildl
xchg
stos
jmp
inc
push
push
mov
or
push
iret
adc
sbb
test
mov
shll
dec
inc
cltd
fs
into
outsw
js
pop
in
roll
sub
push
clc
rorb
es
inc
dec
imul
fnstsw
push
pop
out
push
pop
stos
push
jnp
daa
mov
xchg
or
push
sub
int
sub
in
jmp
shrb
xor
adc
sbb
push
mov
and
jge
cld
cltd
xchg
mov
jns
data16
mov
data16
cmp
xor
xchg
jne
mov
scas
dec
mov
push
adc
stos
mov
pop
sti
add
jb
mov
jne
lret
push
setp
adc
dec
stos
pop
cmp
shll
xchg
stc
and
arpl
cwtl
out
in
cmc
push
sub
lds
in
xchg
inc
add
add
push
xchg
mov
xor
adc
popa
loopne
cmp
xchg
inc
cmp
pop
cltd
cmp
xor
push
and
jp
push
ds
fadds
pop
sarb
mov
sbb
or
aas
mov
pop
test
je
add
cmpsb
je
leave
adc
push
or
rol
mov
das
dec
push
cmp
js
and
pop
pop
aaa
and
jl
rcrb
int3
adc
fstpt
aaa
xchg
ja
jbe
fists
xchg
popf
ret
dec
out
dec
jae
mov
pop
iret
lods
movsb
add
add
int3
mov
cmp
std
sub
enter
ja
mov
xchg
sbb
xor
ljmp
pop
sbb
push
scas
mov
cmp
xor
ljmp
enter
aaa
xor
jmp
sub
loop
mov
pusha
fs
xor
loop
sbb
ficompl
sahf
mov
test
cmpb
add
xor
sahf
cmpsl
push
mov
inc
mov
lret
cmp
mov
mov
xchg
xchg
mov
cmp
dec
mov
or
add
rcr
dec
test
pop
sbb
jmp
sbb
sub
cmp
dec
repnz
test
add
cli
aaa
add
notl
pop
icebp
test
into
in
push
enter
mov
loope
pop
call
mov
jnp
dec
fs
sbb
ffree
fnstenv
mov
lea
adc
mov
aas
add
xchg
pop
lret
nop
les
dec
mov
mov
xor
mov
cmpsl
sti
sarb
mov
or
scas
sarb
dec
dec
adc
iret
hlt
lea
xchg
add
inc
arpl
adc
popf
int
shrl
mov
ficoml
aam
mov
cmp
xchg
jbe
stc
pop
sarb
push
mov
inc
je
jle
inc
in
jge
xchg
hlt
cmp
lds
add
add
aam
sub
mov
dec
xchg
xchg
jae
pop
or
fistl
ja
lahf
cmp
jo
jl
push
icebp
std
and
mov
outsb
xchg
xor
jae
fcompl
fcomps
aam
pop
fbstp
aaa
mov
ret
call
mov
cmp
inc
mov
xchg
test
out
cwtl
dec
mov
repz
lahf
push
push
jecxz
mov
adc
jecxz
repz
pop
aad
flds
and
sahf
addl
sbb
icebp
cltd
lret
mov
cmp
add
mov
fwait
int3
adc
shl
sbb
insb
cld
repnz
dec
and
ficoms
inc
mov
jae
push
inc
loopne
add
movsb
mov
jmp
pushf
inc
xor
data16
mov
psubsb
hlt
adc
sub
pusha
xchg
xchg
xchg
loop
imul
cmpsl
je
push
inc
sahf
adc
add
cmp
roll
jno
fistl
sbb
xor
push
in
xchg
jl
mov
fwait
push
add
cmc
xchg
cmpsb
bts
xor
nop
jge
out
push
inc
cmp
and
aas
in
lahf
and
test
add
loopne,pn
add
and
test
fidivs
xchg
mov
push
dec
push
in
dec
xlat
sti
sbb
sbb
subb
cmpsl
inc
mov
adc
add
pushf
xchg
dec
dec
push
lret
pushf
lcall
add
pushl
xchg
xor
movsl
xor
sti
iret
pop
xchg
les
adc
out
imul
and
cmpsb
push
sub
add
sbb
loope
mov
add
cwtl
cmpsl
cmp
loope
test
mov
in
pop
in
mov
cwtl
push
loopne
push
mov
je
mov
push
sbb
movsb
sub
into
or
cmc
pop
test
pop
mov
cmp
push
jg
jae
outsb
jo
stos
inc
cmpsl
mov
mov
sbbb
jge
out
ss
sub
and
into
repnz
out
arpl
adc
je
lods
pop
insl
aad
sub
outsl
dec
jne
mov
xchg
cld
add
movsl
pop
out
cmpsl
int
scas
and
out
jmp
not
add
mov
lcall
frstor
inc
dec
movl
push
add
shl
lock
jne
mov
cltd
dec
xor
es
imul
mov
hlt
fwait
movsb
mov
or
mov
ja
jmp
ficompl
add
inc
aad
aas
xor
cs
or
adc
lret
stos
jp
pop
lds
jne
je
insl
cmp
scas
pop
add
adc
adcb
inc
xchg
push
jbe
xchg
jg
dec
push
cmp
sbb
pop
clc
push
or
dec
mov
scas
xchg
fadds
lret
mov
and
jbe
lea
push
push
push
adc
sbb
cmpsb
or
loope
out
jecxz
jns
cmc
or
inc
pop
xor
and
mov
push
ljmp
sbb
inc
push
adc
mov
cld
out
jno
mov
pop
push
lods
outsl
int3
jnp
icebp
test
xchg
aas
xchg
xor
push
adc
ljmp
iret
push
inc
jmp
int
out
xor
ret
jg
sub
sbb
into
cld
mulb
add
sbb
pop
subl
xor
outsb
repz
xor
adc
aad
sub
jno
pop
jbe
insb
lret
data16
pop
cmp
mov
jb
lcall
das
xchg
cmp
out
add
adc
imul
jo
dec
dec
repz
mov
add
in
inc
in
adc
test
and
inc
push
add
mov
punpckhbw
pusha
jecxz
test
test
inc
popf
out
or
jo
lret
pop
jl
sub
sub
mov
mov
shlb
jg
xor
mov
mov
push
cmpsb
jmp
pop
movsl
xchg
outsb
sarl
mov
jl
call
sbb
mov
gs
jg
pusha
inc
mov
pop
ja
fisubrl
fists
mov
jno
mov
push
sbb
movsb
mov
shr
xlat
xchg
std
in
and
pop
das
cmp
mov
cltd
add
cltd
out
insl
or
scas
sbb
fcomps
pop
icebp
add
and
cmp
das
mov
lods
or
jmp
adc
push
adcl
cmc
std
cmp
in
outsl
std
cli
xlat
pusha
inc
pop
jecxz
in
imul
das
cmp
lret
inc
popf
jecxz
xchg
mov
xchg
or
xlat
lock
shll
mov
push
std
xchg
lahf
arpl
mov
dec
ret
scas
into
push
in
xchg
lret
fsubr
ds
fs
stos
push
pop
lcall
pop
lock
imul
cmp
cmp
adc
mov
mov
jl
sbb
or
or
subl
outsl
xor
inc
std
imul
out
push
jmp
in
or
mov
nop
inc
les
leave
xor
fdivs
lahf
stc
int
outsb
imul
push
in
inc
push
imul
cltd
icebp
daa
das
xchg
mov
mov
push
add
add
pop
inc
fwait
or
fwait
xchg
pop
cwtl
mov
popf
push
insb
loop
adc
sbb
and
xchg
loope
pushf
cltd
push
cmpsl
js
dec
push
ret
shl
push
imul
out
add
ret
imul
pop
rcrl
push
sbb
insb
xor
dec
mov
dec
pop
mov
add
inc
sbb
jno
or
in
push
mov
push
mov
loope
pop
adc
xchg
add
outsl
call
mov
lds
rcrb
cli
xchg
lds
mov
in
lods
xchg
adc
mov
out
insl
jbe
sete
pop
sub
xchg
add
mov
shll
outsb
fsubrs
mov
push
loop
out
aaa
inc
mov
pushf
adc
int
xchg
and
push
rclb
jnp
gs
out
mov
pop
push
ja
jno
scas
add
flds
lahf
loop
cmp
orb
ret
push
fildll
add
push
jae
cld
dec
and
xchg
pop
je
ljmp
adc
lods
pop
mov
ja
sub
mov
pop
ret
rolb
inc
xor
mov
and
or
mov
test
in
mov
fadds
push
push
mov
sbb
mov
jnp
push
subl
loope
mov
cs
sub
add
adc
das
scas
inc
fistpl
mov
dec
xchg
adc
sbb
daa
addl
inc
sbb
insb
lock
lcall
adc
cmp
movsb
scas
incb
pop
and
jg
cwtl
push
sbb
mov
adc
enter
fcomp
pushf
fwait
xor
aad
mov
add
ljmp
xor
fs
dec
add
pop
inc
xchg
mov
testb
push
push
add
fxtract
out
jne
inc
insl
lret
inc
and
xchg
mov
jle
lods
roll
dec
xchg
pushf
clc
outsb
mov
aaa
mov
dec
ljmp
aam
iret
das
addr16
addl
out
in
add
mov
mov
out
cmp
push
dec
cmp
mov
decl
imul
pop
adc
mov
add
jl
fmul
push
scas
ret
js
insb
in
aad
test
mov
enter
xchg
xchg
mov
movsb
xor
es
imul
iret
adc
call
dec
or
ror
leave
ds
mov
sub
lcall
mov
or
test
mov
push
fcmovnb
lcall
sbb
dec
cmpsl
push
sub
adc
lahf
test
mov
aad
adcl
mov
jb
mov
orl
out
and
cmp
cwtl
lods
movsb
sub
inc
jp
data16
lds
cmp
jo
xchg
adc
jge
out
pop
pop
jp
xor
sub
jbe
imul
xor
lcall
out
aam
lds
iret
cmp
ret
lahf
mov
pop
lea
popf
jno
mov
add
mov
enter
add
inc
iret
xchg
iret
and
cwtl
mov
leave
cwtl
or
sub
cmp
inc
mov
adc
movsb
neg
push
jne
fs
push
push
dec
ja
aas
into
shrl
cmp
in
pushf
xor
movsl
jns
cmpsl
xor
mov
jno
nop
and
sbb
sub
push
out
loopne
dec
fcmovbe
adc
nop
cmp
jle
bnd
cmpsb
sbbl
rorl
lret
adc
xchg
sbb
mov
fwait
cmc
fisubs
div
movsb
out
sub
lods
mov
inc
mov
imul
stos
dec
pop
aas
sbb
push
arpl
xchg
loopne
lods
int
xchg
pop
jb
shr
push
jns
fwait
pushf
popa
push
fimuls
rorl
push
loopne
shrb
xor
mov
imul
lret
or
shl
sub
sub
inc
in
je
cwtl
jle
jp
cmp
push
or
push
cwtl
out
mov
fcompl
pop
nop
mov
xchg
pop
jg
lcall
out
fstl
pop
mov
jb
push
test
push
mov
xor
pop
jmp
mov
xor
jbe
push
push
xor
testb
aam
jno
sti
sub
inc
dec
popa
push
pusha
jmp
fisubrs
dec
out
lods
inc
loop
inc
daa
mov
data16
jb
movsl
orb
cmp
popa
icebp
ja
push
push
lahf
jg
ret
mov
and
shrb
shl
add
mulb
xor
pop
lret
stos
psubsb
adc
push
mov
pop
fidivrl
gs
sbb
int3
jp
cmpsb
inc
movsl
cmp
dec
xchg
xchg
sbb
xor
inc
mov
push
and
adc
xchg
mov
inc
xchg
data16
ljmp
mov
fsubrp
xor
sbb
pop
lcall
orl
ss
xchg
pop
mov
and
sbb
mov
test
dec
or
rorl
std
push
dec
and
mov
sti
adc
ret
xchg
pop
in
lea
aad
xchg
ljmp
sbb
fildl
or
jae
push
adc
mov
js
add
jmp
cmp
and
imull
sarb
daa
in
xor
pusha
lsl
dec
ret
shlb
call
aaa
pusha
adc
dec
mov
lcall
push
lods
or
and
mov
cmp
jb
mov
lahf
out
push
movsb
xchg
pop
jb
movsl
push
das
adc
or
dec
iret
mov
in
adc
lret
adc
xor
loope
dec
xor
aas
mov
xorb
push
leave
std
cmp
push
movsl
lret
inc
jnp
push
and
bound
out
popf
and
mov
sbb
or
jae
xchg
pop
push
outsl
iret
icebp
or
or
pusha
mov
inc
xchg
mov
inc
xchg
add
mov
cmpl
xor
mov
push
and
cltd
sti
and
jge
rcr
cmp
dec
cmpsl
inc
or
popa
cmp
rcrl
lahf
mov
add
push
and
mov
out
stos
dec
adc
pop
dec
push
icebp
mov
adc
sbb
pop
pop
pop
nop
imul
loopne
xchg
fs
shlb
jb
pop
mov
mov
xchg
ret
movsb
push
shl
adc
mov
jmp
push
inc
sbb
cwtl
iret
aad
sbb
push
inc
mov
or
mov
outsb
popf
xchg
xchg
divl
int
mov
test
mov
roll
cwtl
out
adc
inc
aas
jmp
sbb
dec
push
or
in
fisttps
js
dec
pop
icebp
inc
add
xchg
into
fdivrs
or
je
cmp
out
push
enter
mov
cwtl
iret
jp
xor
repz
clc
arpl
rcr
pop
add
push
xchg
in
push
inc
xchg
sub
cmp
jae
xchg
inc
push
lret
scas
jb
inc
jnp
mov
lret
aad
mov
pop
decb
or
jmp
and
loopne
sub
rcr
fmull
mov
add
insb
adc
fidivl
mov
pop
imul
pop
popf
std
inc
cli
out
xchg
sahf
xchg
sub
push
sbb
xchg
stc
test
inc
daa
fstpl
mov
lret
xor
or
lret
cmpsl
sbb
xchg
fnstsw
mov
ds
loop
push
cmp
jle
movsl
pop
pop
js
dec
loop
cmpl
adc
cld
data16
mov
xor
fwait
aas
jbe
imul
outsb
mov
ljmp
imul
cmpsb
inc
pop
fcompl
enter
rorb
iret
push
xchg
adc
cmp
icebp
fcoml
push
leave
subb
aad
out
setb
lods
sbb
roll
insl
jecxz
rcrb
mov
and
xchg
mov
mov
or
call
mov
dec
enter
xor
adc
cmpsb
and
sbb
xchg
mov
jbe
push
call
xor
cmpl
xor
lods
sbb
xor
sbb
pop
mov
dec
sbb
ja
xchg
popf
test
cmp
in
inc
cwtl
adc
mov
mov
pusha
mul
and
adc
and
jg
xchg
push
testb
mov
mov
lahf
mov
sahf
std
pop
cmp
out
and
xor
mov
cmp
pop
push
mov
pop
pop
xchg
mov
bound
js
sub
repnz
cmc
fldenv
mov
xchg
mov
sbb
inc
push
ret
add
rcll
add
xchg
push
xlat
rclb
jle
mov
jne
ljmp
add
xchg
cli
pop
nop
inc
aaa
and
insl
fdivr
and
push
jno
into
dec
test
test
test
mov
and
in
mov
repz
gs
mov
xor
fbld
add
dec
cmp
add
shll
imul
xor
pop
mov
sbb
jecxz
xlat
addr16
adc
call
fimull
jle
imul
jge
mov
mov
pop
ret
xor
repz
and
pop
add
sub
jbe
fistpl
pushf
add
lcall
sub
and
pop
divl
sub
pop
add
sbb
jbe
mov
mov
lods
test
fldl
rorl
mov
shlb
jb
notl
fidivrl
lahf
add
je
loop
insb
sbb
jo
mov
adc
pop
mov
dec
and
out
mov
shll
bound
and
xchg
mov
mov
mov
scas
or
mov
shlb
xor
push
jno
cld
imul
addr16
xchg
xchg
pop
jp
mov
rorb
cmpsl
jmp
mov
pushf
shlb
fidivl
mov
ja
popf
jle
mov
mov
test
in
cmp
icebp
ljmp
je
sbb
add
call
mov
pop
push
nop
lods
fsubl
repnz
fs
xlat
fs
cmp
sbb
and
jg
jb
inc
cmp
lret
sar
dec
aas
adc
flds
cmp
pop
or
jp
mov
fldcw
insl
ret
mov
in
addr16
xchg
imul
mov
xchg
cmp
sbb
inc
sar
out
sub
and
cmp
push
lahf
xchg
pop
jno
jp
aad
idivl
mov
es
dec
clc
push
daa
out
jne
cld
sub
cli
loop
jmp
adc
mov
das
mov
push
jp
push
jle
icebp
test
and
aad
mov
cmp
jecxz
mov
jo
aam
out
push
scas
xor
rorl
dec
dec
and
sbb
xor
sub
scas
mov
push
xchg
mov
popf
mov
fists
aad
outsl
push
xor
fstl
imul
bnd
insl
aas
js
sar
mov
mov
in
adc
scas
xorb
in
jns
out
pushf
jle
outsl
xor
jns
and
outsb
es
adc
mov
mov
dec
sub
mov
mov
lret
out
adc
adc
push
xchg
andl
mov
orl
test
shl
loop
mov
addl
leave
add
ja
fcmovne
jae
mov
xchg
sub
test
sbb
push
xor
cmp
lahf
das
cmc
test
clc
fimuls
int3
mov
sub
test
movsl
xchg
xchg
stos
hlt
pop
cmp
icebp
push
push
div
lea
incl
mov
and
inc
jl
mov
les
imul
xchg
mov
dec
lods
add
ficoml
dec
xlat
mov
xchg
mov
dec
int
mov
in
call
lock
and
sbb
mov
mov
data16
cmp
cmp
cmc
lret
pusha
sub
xchg
jns
test
jno
popf
or
add
xchg
mov
push
outsl
xchg
ds
cmp
pop
sbb
imulb
jmp
sbb
xchg
mov
es
cmp
fistpll
mov
in
mov
rcrb
pop
push
loope
pop
xlat
shll
adc
dec
jge
xchg
jg
ja
add
add
jb
ret
pop
jg
mov
mov
and
imul
xor
iret
mov
mov
popa
or
jmp
cmp
out
enter
js
cmpps
or
mov
jbe
loope
cmp
inc
mov
in
lea
test
cmp
jae
rcrb
xor
pushf
push
xor
jge
test
ret
mov
loopne
ficoms
jb
fs
mov
push
lods
lock
inc
jg
lret
shll
fcompl
loopne
cmc
add
jno
jno
xor
scas
or
and
lock
adc
iret
sub
fnsave
and
je
jbe
push
push
mov
imul
push
cmpsb
lea
mov
push
imul
jg
mov
xchg
fwait
and
sub
jb
adc
or
pop
inc
sbb
testb
clc
push
pop
dec
jle
cmp
pop
xlat
mov
mov
mov
jbe
lock
xchg
idivb
ds
ss
movsb
lcall
push
sbb
cmp
test
imul
stos
pushf
jp
sahf
mov
push
dec
push
imul
sbb
cwtl
out
or
ret
popa
filds
xor
dec
lock
aad
test
test
les
insb
mov
lds
pop
and
dec
movsb
dec
xchg
cli
popa
pop
test
inc
jge
fcmovne
shl
sbb
cld
sub
das
jne
pushf
sub
push
and
sub
ds
cmp
stos
stos
push
outsl
xchg
testb
loope
std
sbb
and
mov
push
stc
jge
push
jo
jno
jns
arpl
mov
dec
push
mov
test
sub
sbbb
jb
cmp
das
xor
pop
test
jmp
jnp
push
xchg
or
mov
out
shr
pop
lods
cmp
fnstenv
loop
dec
dec
inc
ss
das
push
ret
and
xor
and
jnp
sti
fistl
je
daa
repz
sub
or
cs
and
fisubl
int
xor
and
rcrb
scas
cs
pop
mov
pop
clc
jae
arpl
ret
jecxz
jnp
lea
mov
lea
adc
fsubrs
push
movl
inc
push
test
dec
push
dec
dec
mov
mov
cld
stos
sub
je
mov
mov
test
xor
ds
inc
or
push
out
shl
and
inc
xor
into
outsb
sub
dec
adc
je
add
cmpsl
pop
scas
test
out
fsubrp
cmc
jno
cli
clc
sub
xchg
xor
mov
call
add
mov
call
and
mov
lods
jmp
xor
lret
jb
mov
lods
andl
mov
or
mov
pop
cs
adc
cmove
insl
loop
lods
popa
adc
push
xor
out
js
or
adc
or
xor
scas
xchg
and
cmpb
jnp
sbb
bound
pop
and
nop
and
call
mov
pop
dec
fcmovne
xchg
dec
ja
xchg
add
xor
outsb
cs
pop
or
and
cmp
cmp
and
or
jne
sarb
sbb
movsb
xor
add
mov
mov
or
push
inc
cltd
out
outsl
data16
sbb
cmp
push
or
test
lea
aas
fsubs
add
mov
and
sub
fstps
mov
ja
sbb
inc
gs
push
dec
push
outsb
scas
filds
insl
adc
fwait
mov
scas
mov
mov
insl
in
lea
int
lcall
insl
stc
push
loope
jae
pop
cmp
rsqrtps
inc
and
mov
mov
sub
push
out
bound
and
adc
xchg
mov
mov
cld
fwait
rcrl
lods
lea
call
sbb
int
add
adcl
pop
test
push
mov
in
add
push
arpl
xor
out
cmpsl
rcll
ss
in
push
imul
leave
loope
rcll
rclb
outsb
or
popf
dec
cmp
push
xor
cmpsl
jns
fwait
adc
or
jg
inc
das
pop
sbbb
out
pop
aam
dec
cmpb
jnp
mov
cmpsl
dec
hlt
mov
into
dec
das
sub
push
call
mov
cltd
in
mov
mov
outsl
pop
cltd
push
xorb
mov
dec
jl
sahf
ds
adc
cmp
ja
mov
cmp
ret
int
outsb
xchg
ficoml
out
adc
push
ficoml
xor
sub
cmpsb
mov
adc
mov
or
or
sbb
lods
inc
aam
and
inc
in
fwait
xchg
mov
stos
fcomi
clc
xchg
sub
cmpsl
fimuls
sub
aad
mov
push
aam
cwtl
mov
lods
sbb
push
push
jo
shll
mov
repnz
pop
dec
sbb
sub
loop
jo
lret
clc
fwait
inc
dec
pop
dec
ja
and
adc
jnp
shll
bound
add
out
nop
mov
cbtw
insb
das
xchg
mov
mov
fldt
sub
imul
stos
in
stc
dec
sub
dec
test
das
push
and
sub
jnp
lcall
lods
pop
sti
je
dec
sbb
xchg
inc
inc
and
divl
das
test
iret
pop
add
sbb
fs
mov
js
push
mov
pop
pop
lea
jp
enter
stos
or
dec
cs
bound
test
lds
push
iret
into
inc
les
imul
adc
sub
jbe
shrb
test
push
sub
mov
push
sub
inc
test
icebp
insl
xor
push
push
jbe
pushf
jmp
xchg
fwait
and
dec
dec
cltd
wbinvd
outsl
jmp
xchg
cltd
xchg
adc
into
lods
mov
mov
adc
es
int3
lea
mov
call
sub
cmpsb
fdivl
sahf
cmp
hlt
or
push
add
xor
mov
sub
xchg
ret
inc
inc
rcr
mov
push
shlb
lea
cmp
xor
dec
push
pop
push
push
call
addl
ss
xchg
aam
int3
aas
or
xchg
ja
es
hlt
jle
sub
dec
daa
jo
xor
add
mov
xchg
mov
sub
sub
jb
sarb
or
push
pop
inc
add
fisttpll
sbb
pop
jbe
xor
stos
rol
xchg
cmp
jns
pop
lds
mov
jp
xchg
add
outsb
negl
adc
mov
mov
insb
shrb
fwait
call
add
scas
cmc
cmc
lods
repnz
dec
cmp
push
or
inc
outsl
dec
subl
mov
lret
xor
push
or
sahf
stc
mov
ret
pop
dec
fbld
in
mov
jns
inc
pop
jbe
sbb
adc
pop
repz
jne
push
sahf
icebp
add
jge
test
out
ficomps
mov
ret
idivl
shrl
cs
xor
jl
sub
out
sbb
pop
cmp
cmp
in
lcall
clc
flds
or
out
int
cmpsb
sub
sub
pop
xchg
in
sub
xchg
xchg
mov
outsb
jmp
push
adc
jae
push
loope
nop
mov
mov
fisubl
mov
mov
aas
cmp
sbb
jno,pn
inc
addr16
pushf
cltd
jecxz
jns
lods
sub
leave
dec
out
movq
xchg
pop
push
cmp
cltd
shl
adc
frstor
sub
pop
jge
inc
mov
ja
sti
test
push
cmpsb
test
pusha
xchg
adc
xor
and
test
outsb
mov
push
ja
mov
decb
test
dec
sbb
xchg
xor
bound
push
jmp
xorb
xchg
out
dec
int3
dec
mov
push
nop
lcall
popf
jae
xchg
outsb
lahf
sbb
nop
sub
insl
xchg
icebp
out
push
out
mov
lock
cmpsl
int
dec
adc
fidivs
sti
add
lcall
push
sar
adc
into
xchg
cs
xor
sti
cmp
ja
enter
insb
mov
and
jno
and
pop
xor
pop
stos
loop
sbb
or
and
mov
cmpsl
popf
dec
xchg
clc
mov
inc
sbb
addl
je
jb
sub
loopne
or
push
popa
adc
and
or
sbb
mov
cmp
mov
push
mov
push
sti
lret
in
dec
rol
bound
out
and
pop
jbe
movsb
xchg
jae
push
inc
aad
mov
and
pop
mov
mov
dec
sub
sar
jbe
imul
cmp
mov
in
or
cmpsl
repz
fs
int
xchg
lock
sarb
mov
imul
std
mov
jmp
fsubl
popf
mov
mov
push
add
ret
xchg
xchg
sub
insl
push
adc
pop
xor
in
ss
lret
into
sahf
add
xor
aas
lea
inc
jne
xorl
jmp
dec
cwtl
enter
enter
stos
cmp
xor
shll
ss
jmp
mov
sub
test
xor
stc
sbbb
loop
lret
xor
xchg
add
and
sbb
push
pushf
or
loopne
cli
add
das
out
jg
outsb
popa
stos
mov
imul
mov
xchg
loope
js
decb
push
test
or
jle
sbb
pmulhuw
adc
ret
aas
add
leave
ds
cld
adc
mov
ja
mov
aaa
loope
xor
or
xchg
mov
imul
jbe
lret
iret
push
and
xchg
popf
sbb
mov
xchg
pop
add
or
dec
jae
ds
push
adc
je
repnz
shrb
iret
cmp
roll
jle
cmpsb
jb
aad
jns
xchg
pop
daa
pushf
in
in
dec
jg
xor
jnp
outsl
mov
adc
rolb
push
test
mov
xor
push
add
push
cwtl
jb
je
jge
call
je
xorl
rorb
or
mov
add
lods
ret
xchg
mov
imul
xchg
or
das
sbb
fs
or
fisubl
sahf
cmpsb
in
sti
push
mov
lahf
mov
jbe
adc
add
ljmp
adc
adc
jmp
mov
dec
cmp
fs
lahf
repz
into
fcmovnbe
and
or
cmp
stc
in
cmp
sti
push
cmc
pop
pop
add
pop
pop
pop
pop
nop
cli
and
stos
stos
test
mov
bound
mull
or
mov
add
int3
adc
lods
add
ret
fstpt
mov
pop
push
ficoms
xchg
cmp
movsb
ss
sub
sti
ret
test
or
xchg
ljmp
out
jmp
jns
inc
sbb
std
pushw
xor
jle
push
popf
inc
daa
jg
ds
iret
jmp
and
es
cltd
sar
push
jmp
or
inc
push
fcoms
lods
leave
aad
xorl
pop
pop
cmp
adc
out
repnz
sub
dec
ffreep
xchg
lret
aas
cmc
mov
sbb
aam
lahf
jmp
cmp
loope
or
int3
push
jo
cmp
lcall
out
pushf
add
test
in
sub
push
std
push
shr
lret
mov
sbb
out
jg
inc
sub
stos
cmpsl
mov
sbb
aad
xchg
mov
lock
cmp
imul
sub
mov
decb
fwait
push
xchg
repz
fcompp
mov
push
daa
inc
cli
and
dec
mov
mov
add
xor
push
pushf
mov
mov
call
push
out
and
xor
incb
aas
enter
pop
push
arpl
andb
pop
gs
inc
inc
lcall
out
ds
scas
sub
out
in
cs
inc
out
push
aas
das
das
adc
out
add
shrl
es
xor
add
bound
inc
mov
imul
sbb
pop
xchg
clc
shlb
idivb
inc
mov
iret
std
xchg
sub
xchg
adcb
xor
ret
out
mov
lcall
adc
dec
fcom
mov
lret
mov
or
stos
mov
out
or
adc
les
or
int3
clc
test
sbbb
in
stos
xchg
test
mov
add
pop
mov
aaa
mov
add
test
stos
fisubl
jb
scas
add
add
inc
stos
push
jb
or
pop
mov
add
aad
pop
lock
stc
jp
cmp
rolb
pop
dec
cmpsl
jl
push
push
inc
ja
inc
xchg
adc
jmp
pop
adc
cltd
sbb
dec
call
mov
mov
imul
pop
aad
retw
sahf
push
mov
addr16
inc
adcb
divl
xor
or
mov
aas
or
in
push
mov
cmp
xor
sub
movsl
call
sbb
stos
je
inc
fnsave
call
stos
popf
push
std
dec
dec
shrl
sub
jecxz
int3
pushf
adc
sub
or
fisubs
mov
xor
loope
aad
jp
jbe
cli
jp
xor
aaa
into
std
push
jmp
sub
sub
pop
pop
pusha
dec
ljmp
adcl
xchg
adc
mov
pop
sub
mov
xor
adc
mov
jecxz
push
dec
sub
sub
les
lods
cli
jl
xor
movsb
dec
pop
pusha
aad
or
xchg
and
in
mov
and
insl
scas
cmp
fsubp
in
js
roll
and
fadds
enter
dec
scas
sbb
insl
fs
cld
jne
pop
clc
ljmp
lods
std
sub
daa
call
inc
nop
stc
xor
loopne
jg
icebp
scas
add
xor
mov
scas
xor
or
inc
jl
sti
jae
icebp
das
loopne
and
inc
xor
gs
xor
std
shll
daa
and
mov
lea
lahf
jecxz
push
into
inc
mov
push
pushf
pop
cmpsb
jge,pt
dec
and
movsb
scas
push
das
sub
out
shrb
ljmp
insl
addr16
sub
je
jp
dec
pusha
lock
cmpsl
aam
lea
nop
subb
push
push
jnp
fs
xor
loop
daa
mov
cmp
and
prefetcht0
jns
movl
jp
jl
jp
test
lret
jge
inc
je
add
or
das
cmp
stos
repnz
pop
js
jl
dec
mov
sbb
mov
lock
js
rol
adc
dec
mov
inc
xor
or
loopne
pop
dec
and
inc
aas
xchg
loope
push
outsb
ror
mov
push
pushf
mov
icebp
xor
sub
xor
add
jnp
out
loop
adc
fildll
out
and
aaa
mulb
test
shlb
in
pop
xor
fstp
sbb
xorb
cmp
lods
ds
cmp
arpl
inc
dec
pop
jne
ja
xchg
insb
mov
inc
mov
mov
stc
cmc
add
popf
push
and
mov
push
pop
dec
xlat
mov
popa
shll
int3
dec
int3
lods
push
imul
imul
mov
icebp
xor
push
adc
into
imul
pop
mov
dec
mov
fidivs
jbe
sbb
sub
sbb
jp
std
popa
mov
push
adc
push
lcall
mov
inc
pop
adc
and
mov
cmp
push
call
dec
jp
pop
movsl
cmp
mov
and
xchg
mov
mov
add
notl
mov
adc
mov
sar
sub
scas
enter
sbb
gs
and
fadds
scas
mov
xchg
xor
xchg
incl
sar
in
sub
or
out
fwait
sbb
pcmpgtb
xchg
mov
jnp
sbb
out
gs
inc
sub
push
inc
aas
aaa
mov
sbb
jg
cmp
lods
adc
call
sbb
jecxz
nop
cmp
repz
cmp
mov
shll
pop
add
dec
push
pusha
jns
daa
or
imul
push
xchg
xchg
xor
les
std
xor
pop
xor
mov
mov
shl
xorl
mov
mov
push
stos
scas
jno
inc
mov
sbb
lret
lds
out
leave
jg
jmp
jns
and
ds
pop
pop
outsb
fnstenv
mov
jns
rcll
mov
push
pop
push
or
or
push
ret
stc
gs
out
mov
lods
adc
jno
ror
cld
ss
sbb
or
scas
lahf
push
sub
ljmp
subl
inc
push
es
mov
and
inc
add
jg
fdiv
and
cmp
aam
imul
ds
inc
cmp
xchg
or
xchg
mov
xchg
aad
int3
push
rcrl
add
js
pause
in
ret
push
mov
loopne
dec
xchg
mov
xlat
mov
cmpsb
xchg
pusha
cltd
pop
in
sub
test
iret
mov
and
loope
imul
jbe
js
inc
mov
sbb
mov
pusha
test
push
lds
fstpl
inc
xchg
dec
add
sub
test
in
xchg
aad
and
xor
stc
or
mov
pushf
jb
cmp
jge
dec
mov
daa
movl
shlb
aaa
rcrb
sbb
or
das
xlat
pop
xchg
mov
mov
fimull
mov
jns
push
call
mov
inc
jg
mov
jo
push
hlt
cmp
dec
push
cs
cld
xorb
daa
popa
mov
adc
mov
push
mov
fwait
push
xchg
std
adc
movsl
lret
mov
cmp
shll
mov
fdivrl
shll
insl
mov
aam
test
call
dec
std
rolb
test
add
push
xchg
xchg
mov
adc
jae
cltd
clc
cmc
mov
mov
in
mov
cmp
mov
ljmp
gs
sub
jbe
test
xor
fs
fwait
in
test
pop
jp
mov
js
inc
inc
mov
push
subl
loop
je
lret
pop
add
lods
aad
inc
stc
fildl
outsb
mov
lret
push
cmc
add
rcr
dec
mov
or
xchg
push
jns
and
add
cltd
jne
ret
rcl
in
das
inc
adc
leave
into
js
lcall
imul
cmp
cwtl
pop
fildl
popa
cltd
xchg
xor
or
add
or
adc
push
mov
rcrl
xchg
mov
adc
mov
sub
fwait
xchg
xchg
mov
in
out
jae
or
push
cli
adc
fwait
in
cltd
gs
push
pop
cmp
mov
fisttpl
mov
jle
arpl
push
inc
pushw
pop
pusha
int3
and
mov
ret
out
loop
cld
das
scas
stc
insb
cs
bound
push
ja
std
ss
in
lcall
dec
bound
scas
lret
push
in
jnp
int
mov
mov
cvtdq2ps
sub
xchg
sub
ljmp
cltd
jnp
outsl
xchg
pop
repnz
loope
sbb
xchg
xchg
dec
jnp
roll
les
sbb
or
movzbl
add
int3
lahf
sub
and
cmp
enter
hlt
loope
fsubrs
js
test
ss
xor
stos
add
push
inc
mov
call
adc
mov
sbbb
push
pusha
pushw
jae
mov
mov
mov
add
push
ljmp
mov
fldl
jmp
xor
out
mov
scas
out
ss
les
dec
pop
mov
xor
cmp
xor
cli
test
scas
lret
inc
adc
push
xchg
or
jbe
mov
orl
addr16
or
cwtl
into
xor
sub
push
add
xchg
cmp
cmp
aad
lcall
mov
bound
pusha
icebp
pop
cmpsb
ds
pushl
lock
cmc
pop
inc
rcrl
cmpsb
lds
mov
add
faddp
insb
push
fs
jp
jbe
enter
or
or
call
js
add
sbb
sbb
push
jns
call
mov
cmp
jp
inc
into
jae
fcom
push
mov
stos
and
sbb
jp
ss
push
and
enter
out
out
or
dec
sub
addb
and
push
loopne
iret
inc
cld
xor
or
orl
push
inc
fistpll
scas
lods
and
sbb
mov
test
jnp
dec
or
mov
mov
sbb
loope
jnp
stos
cltd
daa
sbb
jle
jnp
push
jnp
insb
js
push
imulb
js
jmp
push
leave
out
ss
scas
insl
mov
ret
daa
lret
push
sbb
add
das
mov
enter
mov
or
pop
sbb
and
mov
lock
mov
int3
fwait
dec
sub
inc
and
mov
cmpsb
loopne
in
jns
jns
popa
stos
int
ljmp
and
pop
mov
xor
inc
fldt
push
cmp
test
pop
inc
push
andl
jge
mov
movsb
popa
xchg
cmpsb
dec
jmp
outsl
into
call
fstl
mov
mov
sbb
pop
decb
jge
inc
aam
mov
ds
outsb
adc
xlat
into
adc
adc
jno
mov
inc
shll
mov
cmp
bound
cmpl
mov
xor
test
push
sub
mov
xchg
xchg
in
leave
mov
add
fdiv
xchg
sub
inc
xor
arpl
jg
mov
divl
pop
aad
push
cld
test
mov
push
cmc
or
pop
dec
testl
mov
add
call
xchg
insb
outsb
sub
xchg
daa
das
jae
lret
cmp
sub
sti
jbe
ds
enter
scas
notl
test
sub
jb
leave
and
imul
jnp
and
adc
sub
inc
or
and
or
icebp
add
push
popa
add
jbe
mov
adcb
in
inc
dec
adc
popl
out
sub
sbb
cs
fisttps
xchg
shld
sarl
scas
mov
xor
sbb
scas
jae
or
iret
jns
je
dec
sub
std
in
repz
orl
ljmp
iret
ficompl
jae
fistps
xor
xchg
mov
inc
inc
jmp
sub
fldt
jecxz
test
in
fs
mov
loopne
dec
das
mov
mov
loope
js
ret
inc
adc
mov
in
inc
inc
mov
push
adc
mov
xor
and
push
mov
flds
popa
icebp
adc
push
and
and
ret
int
push
leave
pop
inc
fucomp
push
popa
xchg
gs
cltd
ud0
jae
inc
adc
lahf
in
mov
pushf
leave
xlat
push
movsl
mov
inc
jge
popl
enter
popa
iret
stos
fcomps
into
ret
and
push
outsl
pmaddwd
push
or
xor
dec
es
xchg
loop
xchg
sbb
mov
adcb
mov
xchg
dec
add
fldt
fiadds
popa
aad
jns
mov
enter
xchg
pushf
xchg
ja
push
pop
test
dec
testb
pop
in
lods
pushf
jae
int3
mov
stos
mov
add
xor
ret
sbb
flds
mov
pop
mov
lahf
sbb
int
xchg
cs
jae
sti
cmp
ljmp
dec
cmp
and
pop
inc
out
or
pop
rcll
xchg
out
cmp
inc
jbe
xor
out
enter
das
mov
in
mov
hlt
mov
dec
add
leave
mov
add
xor
aad
mov
fs
mov
or
call
fdiv
inc
cld
cmp
stos
push
inc
mov
inc
outsb
mov
inc
push
jmp
xor
movsl
pandn
pop
sub
orl
jb
sahf
adc
add
lahf
dec
daa
inc
add
push
repnz
add
jle
mov
or
repz
jl
fidivrs
cmp
or
dec
cmp
fdivl
add
cmc
iret
adc
xlat
aad
push
pop
out
jne
iret
push
sub
inc
xor
cwtl
fwait
dec
shl
jle
add
mov
mov
sub
ss
sub
call
outsb
add
mov
sbb
jecxz
dec
mov
mov
pop
push
rorb
out
inc
xchg
or
popf
test
push
dec
dec
fisubrl
aad
rcrl
inc
loope
in
mov
mov
addb
lret
retw
repnz
sub
push
mov
sub
xor
mov
icebp
mov
add
test
sbb
decb
mov
outsb
jae
daa
sbb
insb
test
inc
mov
fldt
lret
mov
dec
jae
xor
jp
repnz
add
push
dec
cmpsl
xor
jbe
cmp
jns
add
dec
dec
pop
mov
mov
inc
rcl
outsb
pop
test
ss
rcl
xor
mov
aam
movsb
push
pop
jns
lock
cmp
mov
mov
cmp
jnp
int
jae
push
enter
cmp
shlb
adc
js
add
std
shll
insl
stos
pushl
pop
loopne
stos
adc
xchg
icebp
int
mov
push
mov
sbb
mov
dec
jae
xchg
xor
adc
stc
push
fucomip
jo
cmp
aad
sahf
dec
xchg
sti
dec
cli
add
pop
ret
dec
jp
inc
aas
in
jl
mov
pop
sti
dec
jbe
scas
mov
pop
imul
nop
jge
subl
adc
sub
lahf
leave
xchg
and
shll
in
mov
add
xchg
mov
fwait
xchg
shl
aaa
jnp
xlat
sti
cld
mov
fldcw
cmp
icebp
sbb
test
sub
pop
or
mov
cmp
adc
xchg
pop
adc
push
mov
cmp
xlat
pop
mov
mov
push
int
mov
fdivrl
mov
or
ret
xchg
jns
mov
test
mov
push
mov
movsl
ds
push
shrb
subb
inc
inc
adc
cmp
cmp
cmp
mov
inc
xchg
adc
dec
pop
daa
adc
and
mov
adc
mov
and
pop
pop
dec
add
enter
fnstsw
sub
or
imul
pop
mov
mov
mov
mov
mov
push
out
jp
dec
xor
add
out
jmp
iret
int
mov
fnsave
inc
outsb
gs
cmc
pop
inc
inc
add
lret
call
push
insl
fld
stc
in
or
adc
xchg
jmp
inc
jb
sbb
inc
adc
loope
lods
pop
stos
movsl
or
fs
outsl
aam
in
cmpsl
popf
dec
lahf
mov
dec
jmp
nop
repz
mov
inc
call
fs
push
or
ja
hlt
xchg
out
lret
pop
dec
jns
test
aas
mov
jne
inc
sub
dec
sub
ffreep
cltd
push
mov
ja
stos
sbb
lcall
sub
rcrb
sub
and
dec
sub
and
addr16
shl
lock
jo
pop
jbe
or
mov
cmpsb
inc
lret
add
aaa
push
bnd
xchg
loope
push
and
pop
cltd
mov
addb
xorl
jge
ret
inc
jne
cmpl
sbb
fdivl
or
lcall
pop
lods
push
push
pushf
movsb
mov
sub
jbe
mov
cld
inc
daa
sbb
mov
orb
inc
push
push
outsl
add
jo
aam
dec
xor
pop
pop
mov
dec
js
jp
fwait
cmp
repnz
xbegin
test
pop
xchg
ljmp
push
loop
xor
xor
rolb
push
add
adc
fwait
cld
into
nop
shll
stos
push
push
add
cli
repz
aaa
icebp
xor
ja
repz
jns
inc
jg
int3
call
push
xchg
fbld
xor
xor
inc
loopne
and
sub
mov
flds
mov
add
push
popf
add
dec
xlat
data16
leave
inc
or
mov
jle
xchg
xlat
mov
adc
cmpsl
push
sub
push
test
inc
and
xchg
push
cmpb
sbb
lock
inc
dec
inc
stos
and
stos
pop
adc
sub
mov
imul
pop
dec
insb
lods
push
in
fcoms
inc
xchg
mov
ja
jp
xchg
jns
xor
loope
pushf
in
push
add
inc
adc
lds
push
or
push
jb
sub
data16
push
aaa
das
lret
sub
adc
out
dec
ret
xchg
add
jns
and
test
lea
out
dec
adc
incl
xor
jne
in
int3
mov
xchg
jl
popf
roll
imul
sub
rorl
in
mov
jmp
shlb
push
inc
loop
and
mov
jecxz
dec
push
push
push
push
and
push
or
inc
dec
or
andl
jae
jo
xchg
lods
imul
add
sub
lock
pop
push
aam
mov
cmp
pushf
imul
or
xor
cltd
xor
jnp
and
bound
test
inc
xchg
jo
pop
jns
add
xor
cmp
push
ja
aas
aam
and
xchg
mov
fsubrp
sbb
das
lds
jbe
sub
mov
pop
jbe
xchg
test
cmp
sub
pop
and
jns
aas
ret
mov
or
dec
std
dec
outsb
pop
xor
jmp
fimull
jnp
inc
es
fdivrs
sahf
cwtl
pop
outsb
and
in
add
cmpsl
lret
jl
xor
call
test
and
dec
and
or
insb
or
sub
ja
lock
clc
sub
iret
mov
addr16
jl
arpl
inc
scas
std
dec
mov
sub
jnp
cmp
xchg
int3
cwtl
push
dec
das
xor
cmpsl
mov
add
or
or
push
xchg
adc
jmp
add
pop
mov
push
aad
cmp
test
imul
and
mov
cwtl
mov
sub
xor
lahf
xchg
push
lret
fistl
and
bound
or
lds
test
adcl
ret
iret
rorl
lock
outsb
cld
cmpsl
xor
negl
fdivrs
sub
dec
jge
mov
clc
adc
adc
xchg
daa
lock
aaa
incl
popa
jg
clc
cmp
jecxz
cmp
cmp
jge
jne
fimull
sub
pop
push
insl
jmp
ds
push
mov
idiv
sub
cmpsb
insb
add
ss
fisttpll
sbb
adc
lods
rcl
leave
mov
add
xchg
push
xlat
push
push
scas
lret
fmulp
bound
stos
test
dec
arpl
clc
insl
and
pop
mov
inc
and
aad
hlt
push
xchg
cmp
test
jecxz
gs
pop
inc
rcr
in
lcall
push
mov
insb
pop
inc
aad
pop
inc
shr
cmpsl
dec
push
cmp
andl
mov
lods
and
mov
fnstenv
cwtl
dec
xchg
es
test
mov
push
mov
addr16
inc
pop
loop
enter
test
xor
fs
sbb
and
lret
and
mov
mov
ret
out
mov
adc
dec
aaa
std
andl
jns
xchg
jle
mov
dec
cmp
pop
add
add
cmpl
jns
cld
fucom
xchg
int3
cld
into
fninit
into
int3
fsts
dec
mov
jae
iret
std
les
mov
or
sbb
jecxz
popf
jg
cld
xchg
inc
pop
adc
lods
xlat
cmp
or
aas
loop
sahf
sarb
fists
addr16
lcall
cmc
inc
mov
hlt
cs
lret
sub
xor
xchg
dec
dec
lahf
clc
loope
shlb
add
xchg
mov
scas
fisttpll
mov
test
addr16
add
call
add
rolb
pushf
sbb
mov
xchg
lods
inc
lcall
cmp
aad
and
loopne
mov
jg
pusha
sbb
outsb
mov
xor
cwtl
sub
popf
jg
sbb
inc
inc
lock
cld
test
aad
hlt
push
jne
mov
fbstp
cmpb
xchg
lock
clc
xchg
shlb
push
push
out
lods
mov
daa
movl
push
rcrl
pop
xchg
pop
inc
jns
cmp
mov
cmc
jbe
pop
mov
sub
cwtl
and
pusha
jg
rcrb
and
adc
fldenv
mov
or
mov
fists
fidivs
jne
pop
cltd
mov
sub
sub
dec
push
mov
movsl
jle
inc
push
mov
ds
push
jbe
nop
addb
xlat
stos
rcr
into
in
ja
lods
repnz
repz
dec
mov
lcall
lods
adc
gs
lods
fbstp
outsb
decl
add
addr16
popf
stos
sbb
shl
popa
mov
pop
aad
popa
and
aad
daa
jo
addr16
pop
cltd
push
or
xor
add
mov
rcr
popa
aam
pop
ds
mov
jns
rcrb
lahf
push
mov
out
dec
sub
mov
lods
pop
test
inc
scas
mov
push
xchg
clc
pop
push
outsl
push
popa
mov
sub
lods
arpl
test
fidivs
and
push
fadds
cld
jle
mov
imul
jne
sub
jle
cmp
cwtl
cmp
aaa
jns
jno
mov
fwait
test
and
jno
popa
mov
jmp
es
mov
xchg
call
iret
jno
adc
add
xchg
cmp
push
imul
adc
add
mov
xorl
je
in
dec
mov
scas
ds
sti
dec
je
pushf
dec
or
and
push
iret
decl
mov
ja
sub
jae
and
add
stos
xor
imul
cwtl
je
or
cmpsl
dec
leave
or
push
pmulhw
enter
jp
sbb
mov
jge
jg
xor
movsl
push
cmp
adc
test
add
jmp
or
mov
sub
pop
push
ss
lds
adc
jb
rclb
mov
push
inc
aam
sbbb
test
shl
adc
sbb
push
adc
and
fs
sub
add
add
mov
dec
push
lods
mov
in
inc
add
sbb
xor
scas
int
cmc
fiadds
adc
cli
repz
lahf
bswap
bound
sub
pop
cltd
jmp
lea
lret
mov
test
add
xchg
popf
mov
data16
aas
test
pop
sbb
add
stc
into
repnz
cwtl
fadds
mov
and
lock
in
inc
out
dec
add
mov
js
test
popf
cmp
cmp
lock
icebp
xchg
add
xlat
popa
imul
jnp
jge
js
enter
sahf
fistpl
adc
cmp
cmp
aam
lods
imul
rep
int3
fsts
cmpsb
sbb
adc
mov
xchg
lea
xchg
xor
js
fidivrs
pop
mov
pop
cmpl
inc
fs
mov
push
jno,pn
xor
fnsave
inc
lahf
mov
dec
mov
sbbb
js
cld
mov
cs
loopne
cltd
fisubl
mov
rclb
outsl
aaa
in
mov
jbe
int
lds
xor
inc
cmp
sbb
call
cmp
add
push
jge
mov
push
add
cltd
xchg
int
rcrb
divb
icebp
jne
mov
fadd
std
dec
adcl
ss
jnp
sub
test
ja
xchg
loopne
lods
fwait
add
hlt
inc
loop
or
push
xor
arpl
fidivrs
imul
add
add
inc
in
jb
mov
imul
shl
cmc
mov
mov
xor
sti
rcrl
sti
mov
inc
repnz
jo
jp
mov
xchg
cwtl
fidivrl
sahf
or
ret
es
dec
add
jmp
mov
jne
popa
into
jae
mov
add
inc
xchg
das
ret
scas
lock
mov
sbb
scas
cmc
jb
pop
mov
xchg
test
leave
mov
sub
mov
adc
cmp
gs
test
ret
test
outsl
fstps
pop
popf
push
out
ds
dec
xchg
inc
cld
lock
or
add
fdivrs
dec
jmp
test
jg,pn
inc
iret
dec
xchg
jo
mov
push
stos
jnp
inc
mov
inc
pusha
stos
test
test
popf
cltd
rolb
jb
not
es
sub
mov
in
adc
adc
stos
inc
adc
sub
into
mov
mov
mov
inc
pop
loope
repnz
stc
jo
pop
pusha
sub
mov
add
mov
out
insb
dec
adcb
stos
outsb
mov
inc
divb
lret
adc
out
mov
lock
pop
push
mov
xorl
mov
in
movb
popl
pushw
loop
and
sub
sbb
scas
adc
sub
sub
mov
hlt
gs
out
mov
stos
xchg
sti
lret
fsubrs
push
out
push
dec
lods
or
pop
jne
mov
xor
insl
lods
xor
imul
out
imul
xor
dec
mov
dec
fldl
out
sti
outsb
xchg
scas
imul
aam
push
scas
movsb
movsb
xchg
mov
aas
jae
fwait
pop
or
rcll
rcrb
xor
dec
xchg
push
sub
out
add
insl
clc
pop
stc
pop
mov
xor
subl
jnp
or
pop
push
push
add
mov
ss
cltd
icebp
stc
jp
test
test
and
dec
pop
cmp
sbb
fs
pusha
sbb
xchg
adc
pushf
mov
in
in
inc
cmp
cmpsl
mov
cmpsb
mov
pop
ja
jbe
push
adc
inc
mov
and
lock
js
fs
daa
sti
mov
lds
sti
xchg
pop
push
stos
sahf
jae
push
cld
jo
and
add
jnp
ffree
pusha
mov
push
push
cwtl
sub
aad
aaa
subb
je
jo
or
sbb
jae
mov
sub
shlb
sub
inc
les
mov
jb
adc
dec
adc
mov
lret
jmpw
imul
sub
out
addb
push
and
mov
test
loope
int3
xor
inc
xor
push
aam
sub
loope
shr
push
inc
sbb
dec
mov
repnz
sbb
movsb
shll
pop
out
add
fildl
sub
popa
push
jp
and
push
fwait
or
jle
sti
fmulp
cmp
lret
daa
jl
push
fsubr
cmpsb
test
jae
stc
je
lahf
icebp
shr
imul
cmp
mov
dec
sbb
lods
stos
push
ret
out
call
icebp
mov
xchg
jmp
call
addl
imul
inc
nop
ljmp
popf
dec
pop
xchg
ret
rsm
fcmove
xchg
shlb
push
adc
repz
mov
test
push
pop
insl
pushf
out
inc
aad
mov
mov
push
xor
imulb
cmpsl
data16
sbb
xor
dec
repz
sbb
aam
pusha
fs
xor
and
es
cwtl
mov
jno
dec
push
flds
js
enter
and
ja
mov
ret
int
imul
dec
lods
fcompl
in
jno
xchg
add
movsb
xor
jmp
mov
or
shl
js
sub
stos
mov
es
cmp
mov
cld
shl
fisttps
dec
mov
mov
sbb
test
imul
rcll
stc
in
scas
cmpb
faddp
std
lret
andb
addr16
test
mov
jecxz
mov
dec
imul
jne
cltd
push
add
adc
and
mov
clc
imul
leave
enter
mov
xor
jl
loopne
jl
loope
xchg
xchg
das
aas
push
xor
sbbb
jnp
xor
push
mov
int3
hlt
push
lret
jae
push
and
cwtl
and
sub
xor
pop
test
aas
dec
adc
cmpsb
movsl
cmp
ret
andl
xchg
notl
jb
sub
pop
push
inc
arpl
xchg
and
xchg
call
push
lock
sti
sub
imul
std
mov
movsl
test
mov
loope
ja
cmp
dec
xchg
xchg
daa
add
mov
adc
clc
adc
outsb
sub
xchg
cmp
pop
sbb
ja
pop
adc
or
xchg
xchg
frstor
insb
aas
iret
jle
addr16
pop
scas
jb
cld
lcall
mov
pop
xor
or
mov
jmp
inc
icebp
pop
out
xchg
cmpsl
outsl
popa
pop
ja
mov
jmp
or
or
outsl
outsl
dec
push
push
pushf
out
jecxz
nop
inc
sub
mov
mov
sbb
or
or
pop
imul
and
lods
cmc
mov
test
inc
xchg
stos
or
sbb
je
push
fists
cmp
sarb
add
mov
pop
adc
jmp
adc
jnp
mov
adc
stos
mov
xchg
fdiv
mov
incb
ja
mov
xor
imul
lret
mov
pop
mov
rclb
fcmovne
or
xchg
jo
pop
jae
jno
dec
adc
mov
xchg
stc
out
outsl
mov
sbb
lret
mov
push
push
jge
jecxz
imul
sti
inc
stc
sbb
into
jno
jnp
xchg
mov
dec
sub
jge
popa
sbb
mov
and
enter
jnp
scas
cmp
lds
jb
les
or
lcall
loopne
jg
adc
inc
lock
or
dec
mov
sub
push
add
xor
test
sahf
arpl
cmp
and
fmull
pop
fsub
adc
jecxz
fs
push
or
xchg
push
cltd
shrb
jge
nop
jno
pushl
add
cmp
aam
outsl
test
clc
fs
sub
dec
lea
mov
jae
imul
xor
xchg
jo
fneni(8087
sbb
pop
dec
adc
xchg
lcall
add
push
mov
pop
into
dec
sbb
decb
dec
jae
popf
js
dec
cmp
inc
xor
xor
jge
sub
int
adc
popf
sbb
fimuls
jo
lahf
mov
jae
int3
fcmovne
pop
sahf
bound
xor
cmpsl
fisubs
mov
or
je
popa
pop
ss
dec
pop
lcall
fadd
push
je
mov
dec
jle
rcrb
loopne
pop
jge
lea
push
mov
out
out
iret
jecxz
in
data16
out
and
or
hlt
imul
stos
pop
push
lret
clc
insl
or
ror
adc
fdivrp
fisttpll
out
push
sahf
jnp
mov
mov
orb
mov
sub
ret
push
push
push
stos
scas
sbb
bound
jno
sbb
shlb
sar
dec
out
fidivs
adc
insb
xor
test
out
inc
jp
hlt
mov
push
pop
and
mov
sbb
cld
repnz
test
ja
xor
xchg
add
mov
das
movsl
stos
add
imul
popf
cmp
outsl
jnp
pushf
clc
inc
test
loop
fistl
ret
adc
xor
out
sbb
add
mov
test
loopne
stc
jp
mov
mov
in
out
int
dec
insb
sbb
mov
mov
js
and
fldenv
mov
inc
repnz
jmp
xchg
pop
bound
mov
loopne
sbb
and
sub
fiaddl
adc
shrl
mov
add
outsl
mov
mov
bound
and
fwait
sbb
mov
gs
call
add
mov
repz
or
ret
jmp
push
push
push
adc
push
sbb
gs
pop
mov
mov
insl
repnz
mov
aas
jb
mov
lret
enter
xchg
dec
je
push
cwtl
call
inc
cmp
xor
mov
into
rolb
inc
push
mov
mov
popf
cmpsb
jp
xchg
lcall
sbb
inc
cld
jl
movsl
inc
sbb
and
push
mov
and
add
mov
jne
adc
repnz
mov
fwait
test
test
push
fwait
fs
cmp
scas
dec
stos
int
aaa
dec
mov
and
in
inc
daa
adc
cltd
push
mov
xchg
cmpsl
popf
test
cwtl
adc
adc
inc
xchg
int3
repz
pop
push
jmp
test
movsl
mov
movb
lds
and
into
popf
lea
inc
and
incb
rol
andl
outsb
out
inc
xlat
xchg
call
mov
fyl2x
sub
pop
out
negb
lahf
xor
mov
or
and
xchg
jmp
inc
xor
addr16
ret
xchg
adcb
out
iret
xor
mov
push
into
pop
aad
in
pop
inc
mov
jne
push
mov
lret
or
int3
pop
iret
jecxz
pushf
movsl
out
clc
pop
bound
sub
cmp
cmp
jae
jp
xor
cmpsl
lret
cmp
imull
sbb
sub
jno
clc
outsb
cmp
aas
sub
sti
movsb
push
nop
add
lea
jmp
mov
testb
in
out
xor
popa
scas
decb
aad
cmp
js
bound
push
arpl
dec
dec
jb
jno
int
xlat
mov
shl
aam
mov
jo
pushf
arpl
lods
aam
jns
and
mov
mov
loopne
lcall
cli
or
out
push
dec
fcmovnbe
aam
shrl
clc
jle
imul
popf
or
push
js
ljmp
dec
adc
and
xor
sbb
add
mov
jl
cmp
pusha
testb
stc
mov
pop
push
into
out
repnz
xchg
ss
sti
dec
movb
cmc
or
fists
sub
or
fadds
imul
mov
stos
mov
iret
inc
pop
mov
mov
sti
dec
arpl
sahf
lods
or
iret
insb
repnz
mov
dec
stc
inc
negl
jo
lcall
hlt
rcr
dec
dec
outsl
fstl
xchg
mov
test
sbb
mov
or
lahf
aaa
and
ret
add
out
shll
inc
and
jle
rcrl
out
add
and
insb
call
stos
mov
cld
push
xor
cmpsl
add
loopne
and
xorb
and
rcrb
xor
fisttpll
into
jge
stos
mov
lods
sub
mov
nop
push
sub
push
aam
mov
add
es
jmp
push
cmp
lods
lahf
loope
int3
jle
pop
xchg
cmp
pop
sub
cli
mov
or
sub
daa
shl
or
cmp
or
pop
jge
icebp
shrl
int
push
pavgb
cmp
sub
jne
testl
clc
adc
sahf
in
dec
push
mov
pop
scas
leave
xor
addr16
sub
pop
dec
pop
stos
cmp
addb
bswap
out
jecxz
sbb
out
xchg
imul
icebp
outsb
loopne
fchs
mov
xlat
and
iret
mov
les
xlat
inc
aas
daa
ds
addr16
clc
mov
js
pop
inc
pop
push
fisubrl
outsl
adc
iret
aam
insb
pop
loopne
mov
hlt
inc
aaa
out
xchg
jo
add
inc
stos
roll
mov
fiaddl
jmp
cwtl
mov
arpl
mov
inc
shll
jb
fistps
pusha
enter
push
dec
imul
leave
mov
call
mov
jb
mov
mov
cmp
xchg
adc
mov
ret
loopne
rcll
xchg
cmp
push
xchg
cmp
ret
mov
les
mov
movsl
scas
popa
out
outsb
add
dec
js
cmp
das
or
xor
test
or
add
int
adc
fdivrl
in
dec
stos
jg
scas
out
outsl
js
or
cltd
cmp
mov
jns
xor
sti
lcall
lods
add
jl
sbb
inc
jno
inc
inc
lods
cld
add
cmp
xchg
jne
rorb
xchg
cmp
pop
mov
sub
adc
sarb
sub
test
xchg
fidivrl
xchg
jg
cs
jns,pn
je
ror
gs
dec
pop
pusha
cmp
in
lds
push
pop
dec
mov
imul
out
and
xorb
xor
lret
sbb
addr16
xchg
sub
inc
sub
push
data16
jle
mov
inc
les
xchg
lcall
jmp
sbb
adc
data16
mov
mull
jmp
call
std
loope
es
push
dec
pop
fwait
lods
aam
das
dec
mov
fstpt
arpl
stos
icebp
icebp
dec
stos
lcall
ja
sbb
mov
inc
and
push
aas
iret
jnp
push
xchg
cld
xor
jne
fcoms
jl
in
lods
jge
mov
push
jb,pt
xchg
lcall
and
push
push
lcall
cmp
pushf
add
jns
sahf
mov
mov
hlt
pop
iret
cmpsb
imul
daa
insl
cmp
push
inc
sub
pop
mov
lock
popf
in
cld
push
add
jecxz
jle
or
jb
scas
jge
sbb
test
mov
into
rcrb
rorb
or
push
sub
adc
ljmp
mov
lahf
daa
cmp
jmp
adc
aas
aam
fwait
in
push
ljmp
imul
xlat
mov
movsb
adc
ret
leave
outsb
arpl
jne
int3
fdivrl
xlat
cmp
outsl
lret
pop
add
xor
daa
pop
mov
and
cwtl
pop
ret
push
popa
push
pusha
lcall
xchg
repnz
pop
cmp
lret
fldl
dec
test
and
push
jmp
lods
mov
pop
gs
out
or
cli
and
arpl
mov
insl
pop
push
scas
int
and
push
and
sahf
js
push
test
add
lods
pop
mov
dec
cld
imul
sbb
mov
lret
push
sbb
xor
jns
pop
scas
push
xor
cmp
in
bound
insl
add
inc
mov
das
stos
rcl
push
jnp
add
or
cmp
data16
imul
stc
fisttpl
scas
daa
out
ficompl
inc
dec
push
sbb
in
fwait
sub
rclb
pusha
pop
sub
push
jo
add
push
inc
mov
mov
fldl
clc
icebp
jns
lods
daa
aam
jno
punpckhwd
jae
jle
dec
push
pop
push
add
inc
fs
fdivs
clc
adc
pop
subb
loope
add
cmp
out
ret
dec
in
fwait
iret
dec
int
imull
push
shll
adc
aas
stc
push
cmp
mov
ss
rorl
shll
pop
out
imul
in
loop
xchg
andb
cmp
dec
mov
dec
sarb
popa
jnp
xchg
int
lcall
subl
enter
xchg
or
mov
ret
bnd
mov
test
xchg
cmp
ret
jmp
push
pop
xor
pop
push
aas
lret
test
add
xor
sbb
inc
and
or
mov
test
jbe
dec
xchg
add
rorb
mov
in
and
jo
mov
xlat
xchg
sub
mov
jnp
xchg
rcrb
add
js
jg
pop
mov
fisubrs
lret
sub
scas
pop
pushf
jns
cld
scas
jp
outsb
sbb
arpl
jp
dec
xchg
ss
imul
aas
aam
insl
mov
push
and
dec
push
movsl
sub
pop
jge
inc
mov
cmp
aas
paddsw
mov
insb
jecxz
out
adc
scas
sti
lret
add
jo
mov
iret
sbb
call
fstl
sub
and
inc
outsl
lods
xor
lret
out
fldcw
inc
data16
dec
jp
cmp
aaa
pop
lret
lods
and
enter
pop
or
push
sub
std
add
adc
mov
pop
frstpm(287
movsl
ss
rorb
dec
fisttpll
lahf
push
aad
cld
nop
daa
xor
es
xchg
xor
pop
movsl
add
pop
inc
loopne
lahf
js
mov
lret
or
fsubrl
push
pop
test
inc
lods
nop
loopne
or
ds
jno
mov
dec
sbb
cmp
jmp
out
insl
xchg
test
pop
movhps
push
add
mulb
mov
test
dec
sub
sub
cmp
fsubrl
test
adc
in
mov
insb
gs
cmp
jae
dec
lods
pushf
or
xchg
aas
test
jne
addr16
mov
mov
negl
sub
outsb
cli
push
in
xorb
mov
mov
xor
into
lret
mov
xchg
mov
movsb
jnp
or
sub
mov
jmp
ret
nop
inc
xchg
movl
sub
xchg
lock
test
shrl
jo
insl
outsb
movhps
addr16
nop
push
test
mov
cmp
dec
scas
fildll
sahf
push
mov
push
std
adc
cltd
lret
jg
fimull
jnp
dec
and
add
sbb
adc
adc
sbb
stc
mov
push
hlt
inc
dec
sub
xchg
cmp
int3
jmp
insl
ss
es
inc
dec
sbb
orl
cmp
insl
outsb
je
fcmovb
inc
aas
adc
out
pop
xorl
jmp
mov
insb
pop
pop
es
and
or
push
cmp
adc
in
cmc
jp
ret
loope
lea
mov
cmp
iret
pusha
lods
sbb
ret
inc
fnstenv
nop
xor
pop
repnz
lock
pop
jae
pop
lods
mov
adc
pop
mov
xor
pop
mov
xchg
xchg
or
int3
push
rorl
fisubrs
inc
adc
pop
fidivs
mov
mov
push
xor
jmp
into
xor
insb
lock
pop
cmp
xchg
xor
add
imul
inc
outsb
rcl
pop
decl
cmpsl
jl
sbb
addb
cmp
cmp
jo
xchg
and
push
cld
fdivrs
jecxz
adc
xor
mov
std
mov
imul
push
adc
mov
inc
in
or
cmc
out
jb
loopne
ja
arpl
mov
rolb
mov
jnp
xor
int3
add
jp
lods
fsubl
imul
lock
mov
leave
dec
je
inc
xor
fdiv
jo
loop
push
jo
push
in
sbb
jae
sub
lret
or
xor
or
iret
push
daa
rcrb
fcmovb
js
dec
mov
in
inc
hlt
imul
sbb
sti
add
mov
test
xchg
xchg
sti
insb
sarb
fisubl
push
xor
dec
fstps
shlb
mov
mov
mulb
pop
lods
fsubl
in
push
fs
rcrl
mov
sti
ficompl
cld
push
adc
mov
sahf
mov
jbe
add
push
mov
test
scas
fcmovne
or
addr16
or
jp
sti
js
lock
test
mov
mov
lret
mov
in
dec
shll
jns
add
inc
add
in
pop
iret
mov
cld
add
bound
xchg
jg
nop
jg
les
and
je
pop
sbb
sar
fisubrs
sub
notb
in
xorl
cwtl
pop
or
mov
inc
adc
cmp
cmp
cmp
popa
jbe
jns
add
pop
xor
shr
xor
iret
insl
and
mov
mov
add
cwtl
adcl
pop
and
cs
shlb
add
js
or
lret
retw
das
outsl
mull
call
fisttps
stos
inc
mov
xchg
cwtl
mov
icebp
idivl
mov
repnz
mov
lods
fmull
xchg
sahf
bound
cltd
stc
dec
dec
or
adc
js
push
lcall
cld
popa
mov
sub
in
pop
add
rcr
xchg
xchg
add
pop
adc
jbe
adc
mov
movsb
aam
stos
xchg
xchg
adc
scas
ret
pop
push
inc
jns
sbb
stc
lods
sbb
or
dec
mov
stc
enter
jl
pop
mov
lods
fmul
pop
inc
inc
mov
or
aas
sub
push
push
jge
fwait
lea
jae
movsb
cwtl
mov
std
or
dec
inc
sbb
adc
xor
shll
clc
xlat
ds
enter
add
inc
push
or
xor
test
out
sbb
test
mov
frstor
mov
lahf
popf
dec
jae
fscale
or
inc
add
or
shlb
mov
push
icebp
or
insb
xor
mov
insb
push
cmp
push
rolb
and
in
fwait
dec
cmp
in
xchg
or
repz
insb
and
imul
movsl
xchg
mov
fistps
fs
addr16
rclb
iret
xchg
add
fs
hlt
in
pop
push
mov
in
loopne
rol
xor
and
loopne
outsl
mov
mov
xchg
jb
push
mov
or
lock
fs
mov
in
add
or
add
mov
adc
and
add
push
jmp
in
xchg
jp
pop
sub
stc
cld
mov
mov
adc
pop
and
in
gs
xchg
push
int3
pushf
into
stc
out
cmp
nop
in
cmpl
jns
or
or
cmp
sbb
mov
xor
mov
mov
and
clc
lea
jnp
xor
and
ret
nop
shll
adc
ret
xchg
stos
jbe
shll
rorb
loope
pop
xor
and
out
sbb
sarb
shlb
js
push
pop
xor
dec
pop
mov
push
lret
fwait
nop
push
inc
movsb
insb
pop
test
push
testb
mov
mov
loope
lcall
out
and
scas
sti
lods
sarb
mov
inc
inc
and
or
jge
dec
xlat
add
xchg
repz
repnz
jb
int
out
stos
lea
jnp
sbb
cmc
sub
xorb
stos
aas
cmp
test
mov
xor
or
shll
sbb
inc
mov
mov
dec
xchg
xlat
lret
lret
jp
mov
fidivrs
and
sbb
sub
stc
mov
stos
sbb
sar
pop
dec
sbb
mov
popw
pop
nop
test
jecxz
inc
test
aam
cmpsl
pop
sbb
mov
mov
les
xchg
mov
push
lretw
cmpsb
mov
ss
jb
sti
rcrl
stos
addr16
aad
lahf
jp
lret
pop
addb
xor
add
addr16
cmpsl
xchg
jmp
shlb
mov
cmp
sub
out
sti
fistpl
fstpl
add
pop
xchg
test
lcall
hlt
jne
ds
imul
sub
push
sbb
in
mov
addl
sub
and
call
stos
movsl
or
xor
shl
xor
addb
cmp
adc
sbb
insb
std
or
add
inc
out
pushf
and
sahf
cmp
push
lret
adc
pop
insb
ret
pusha
cli
inc
arpl
notb
mov
add
adc
dec
jp
mov
pop
js
jle
int
pop
lods
pop
xchg
std
pop
les
jne
lret
sarb
inc
psubq
int3
mov
sbb
stc
mov
pop
les
mov
ds
sahf
dec
inc
jle
lds
mov
lods
cmc
ljmp
mov
out
pop
leave
repz
or
sub
xor
xor
pusha
sbb
pop
negl
sbb
inc
add
cs
or
cmp
cmp
xchg
in
outsl
or
lods
loope
add
lret
fdivs
nop
shll
sar
aaa
lahf
fsubs
scas
call
movsb
lcall
adc
cli
pop
imul
outsb
imul
popa
call
push
test
pop
mov
gs
fadds
int3
repz
insl
call
jbe
adc
adc
clc
ret
jbe
jmp
mov
icebp
push
sub
nop
add
cwtl
into
xor
inc
mov
subl
cmp
mov
imul
and
adc
nop
loopne
cld
xchg
aad
pop
cli
add
cmpsb
mov
je
scas
nop
mov
imul
mov
out
cmp
sub
pop
icebp
mov
mov
sahf
cmpsl
cmp
or
lea
sbb
sahf
lahf
mov
mov
stos
and
pop
mov
push
ljmp
hlt
sub
mov
jge
jle
cmp
mov
fcoms
cmpsl
xor
xchg
daa
gs
pop
aaa
pusha
addl
loope
cmp
shll
rclb
adc
test
mov
into
xchg
aas
or
outsb
jl
imul
pop
fsubp
enter
xor
pop
mov
xlat
xchg
lds
in
push
xor
mov
adc
mov
mov
arpl
jg
xchg
popf
or
aad
push
les
mov
shrl
sahf
push
dec
jae
lahf
cli
xor
movsl
cmp
mov
insl
scas
out
jecxz
dec
pop
mov
jns
je
addr16
mov
outsl
cltd
or
jp
sbb
pop
or
inc
or
jp
add
dec
push
and
in
sub
sub
shrd
xlat
jne
sbb
imul
je
bnd
jnp
stos
stos
jne
mov
out
pop
data16
insl
cmc
pusha
adc
xchg
xor
insl
mov
push
lret
pop
insl
imul
inc
xchg
xchg
mov
and
movsl
xchg
inc
xchg
popa
or
xor
int
outsl
ja
push
and
dec
fnsave
inc
int
jae
lods
adc
loop
dec
es
pop
xchg
or
cld
or
sbb
adc
xchg
lahf
sbb
test
icebp
pop
inc
lcall
jno
fisubrs
mov
mov
sub
clc
addr16
into
add
in
cmc
xor
clc
ret
push
mov
cld
shlb
inc
pop
arpl
cld
dec
jp
iret
or
xorl
cmpl
inc
adcl
emms
xchg
aas
dec
cmp
cli
aad
inc
jle
aam
add
out
cwtl
mov
add
mov
or
push
out
xor
dec
scas
sub
pop
push
ja
out
or
push
mov
call
mov
shlb
sqrtps
sahf
stos
icebp
xchg
mov
mov
fstps
xor
les
lea
mov
ds
or
dec
add
or
sbbl
xlat
add
jge
mov
lds
hlt
jle
jg
loopne
int
push
test
xchg
lea
es
in
loopne
mov
loop
gs
scas
stos
dec
loope
outsb
ss
stc
mov
jbe
mov
adc
mov
xchg
gs
sbb
pushf
jecxz
pusha
out
movsl
fwait
popf
and
fcmovb
push
jns
mov
ret
xchg
lods
sub
cmpsb
jecxz
fldl
xchg
lret
jno
sbb
push
jno
jl
mov
testb
dec
cmp
mov
cmp
aam
adc
aad
sub
push
push
out
add
mov
cmp
nop
xor
jnp
push
cld
pushf
enter
ficomps
cs
cmc
cmp
jp
movsl
and
and
sub
jle
xlat
fbstp
cli
ljmp
jg
dec
mov
cmc
addl
lcall
clc
std
or
xchg
sti
push
dec
ljmp
leave
cmp
fidivl
shll
mov
mov
cmp
mov
inc
dec
test
inc
call
mov
imul
insl
cltd
jo
inc
stos
and
movsl
stos
push
movups
mov
sbb
push
mov
and
and
fdiv
dec
jno
push
outsl
cmc
pushl
pop
stos
sub
pop
pop
jns
adc
dec
adc
sar
mov
inc
push
aad
pop
adc
sbb
mov
sub
jae
add
inc
dec
mov
cltd
in
lahf
nop
stc
add
outsl
popf
push
into
out
mov
pusha
xchg
sbb
imul
push
or
dec
jb
xchg
bound
lret
rcrb
xchg
bound
lea
pop
fwait
not
add
push
popf
fcmovnbe
jmp
cmp
mov
push
mov
cmp
enter
pop
stos
add
xchg
inc
xchg
push
add
sub
clc
or
pusha
mov
psrad
mov
xchg
scas
imul
mov
test
fsts
rolb
inc
push
pop
in
rolb
into
insb
mov
fsts
mov
popf
jge
push
shll
fwait
loop
cs
jle
pop
in
popa
xchg
or
push
mov
or
mov
mov
dec
cmp
cli
inc
xor
push
mov
mov
xor
mov
or
xchg
repnz
mov
push
pop
fcmovnbe
cmp
sti
lods
loopne
je
dec
sbb
icebp
jecxz
bound
pop
jbe
mov
cmpl
inc
fcmovnu
outsl
shlb
mov
mov
ja
mov
ljmp
pop
xchg
enter
es
scas
mov
fiadds
std
mov
lret
imulb
leave
xchg
stos
sbb
mov
movsb
cmp
or
jbe
aad
adc
sti
pop
jo
jno
pop
lret
in
cmp
jge
es
xchg
aad
sbb
aam
mov
lahf
xchg
and
mov
pop
xor
fisttps
inc
xor
cli
and
pusha
jecxz
dec
aad
pop
sbb
xchg
in
sti
decb
push
xchg
or
ret
rep
leave
cmp
sub
int3
ss
mov
pop
cli
push
push
rcrb
cmpsb
test
inc
stc
sbb
ret
fwait
icebp
pop
push
sub
push
xor
mov
lods
adcb
mov
cmp
sbb
add
std
ret
pmulhw
je
mov
icebp
out
lret
mov
sub
lret
and
and
in
jo
inc
fcmovbe
jb
pop
pop
mov
jp
rol
lds
inc
add
outsb
xchg
add
outsb
dec
pop
push
out
push
cmp
mov
xorb
test
push
push
jbe
sbb
sbb
add
inc
mov
cwtl
in
es
sbb
int3
fsubs
adc
ds
and
fsub
icebp
mov
pop
and
dec
out
dec
jno
inc
xchg
mov
or
dec
push
adc
push
inc
ljmp
stos
xchg
movsb
push
xchg
insl
jp
mov
cs
lods
push
jg
mov
cmp
cmp
mov
push
pushf
dec
mov
adc
dec
fistps
jo
adc
fucomp
push
xlat
cli
dec
push
sbb
push
xchg
inc
push
ror
add
loopne
adc
into
dec
jno
or
xor
jne
in
sbb
xchg
xchg
cli
int3
mov
in
jg
lret
pop
es
sub
jne
pushf
fnstenv
sahf
fcomps
inc
in
pusha
ret
cmp
mov
inc
sarb
dec
or
repz
and
dec
ja
pop
fwait
or
and
jmp
push
jae
sub
das
cli
cmp
sbb
ds
and
in
scas
fidivs
cmpsb
pop
in
iret
inc
repnz
out
stc
mov
sbb
push
sub
push
fsubrs
test
and
xor
pop
pop
fwait
dec
bnd
xchg
or
push
inc
popf
ret
rcr
pop
jnp
add
repz
movsb
stos
daa
push
cmp
lods
test
pop
enter
mov
fwait
mov
popa
pop
jge
jns
insb
sub
lock
inc
fidivrl
jp
inc
fsubrs
out
movsl
movsb
xorb
xor
repz
mov
lcall
xor
bound
pop
popa
adc
les
pop
div
dec
mov
sbb
xor
mov
aad
jbe
add
jp
lods
imul
outsl
pop
lods
push
xor
ljmp
sbb
out
stos
and
xchg
fstpl
sbb
hlt
or
lds
in
call
aam
add
stc
dec
jno
sub
xchg
movsb
or
loop
stc
xchg
cltd
int3
sbb
push
push
dec
imul
out
xchg
sbb
rorb
repz
mov
sti
push
jae
rorl
push
call
popa
lahf
xchg
mov
fcomps
cmp
fwait
hlt
push
dec
xor
loopne
cmpsl
push
je
sbb
inc
cmp
add
fnstcw
jne
and
mov
cmpsb
fstpt
in
cmpb
lods
mov
add
outsl
sub
inc
sarb
mov
mov
ret
mov
stos
mov
and
adc
daa
add
es
cmp
mov
aam
test
or
nop
test
mov
push
jle
xchg
loopne
inc
inc
cmp
inc
lret
or
fwait
scas
insb
stos
add
pop
stos
mov
lods
leave
addr16
ja
fsubrs
movsl
jle
gs
imull
aad
add
lahf
in
pop
jecxz
movsl
push
mov
add
mov
ret
out
xor
mov
xchg
movsl
lock
popa
subb
add
inc
cmp
sbb
or
mov
xor
addr16
or
int
xchg
aas
hlt
int
pushf
dec
push
mov
outsb
pop
sbb
and
dec
js
add
fs
xlat
push
pop
insl
adc
jne
sarl
cmpsl
xchg
pop
std
xchg
scas
ret
mov
arpl
insb
adc
test
xchg
aas
inc
scas
ljmp
pop
test
lods
lret
in
xor
sub
repz
sub
into
push
dec
cmpsl
stc
push
xchg
sbb
and
and
outsl
pop
push
loop
jle
les
inc
push
divb
js
jns
loopne
sub
icebp
dec
dec
test
inc
add
aas
outsl
adc
pop
test
popa
cli
stc
leave
pop
inc
inc
pop
jle
xchg
pop
popf
and
xchg
push
in
xor
cwtl
ja
sub
pop
fs
or
sbb
push
push
icebp
mov
mov
cwtl
push
rcrl
mov
xor
fists
cmp
mov
inc
fnsave
cs
xchg
aas
movsl
ret
movsl
mov
bound
fldl
push
lcall
data16
mov
sub
movsb
and
movntps
inc
inc
sti
sti
je
jmp
out
xor
adc
lea
mov
xchg
inc
fcomps
inc
test
les
push
lret
sbb
xchg
pop
mov
das
addr16
aas
xor
rep
pop
cmp
jb
stc
fs
adc
push
push
pop
push
aam
std
outsb
jp
and
jbe
andl
shrb
idivl
gs
and
pop
jg
lahf
nop
push
mov
rorb
mov
mov
jo
sub
jle,pn
mov
aam
in
int
push
cmpsl
imulb
xchg
mov
and
jle
das
sbb
movsb
scas
cmpsl
push
outsl
push
jo
movsl
xchg
addb
jne
pop
pop
push
push
ljmp
call
pop
int
movsb
sbb
add
dec
sti
xchg
xor
insb
push
fsubp
adc
mov
jnp
and
xor
outsl
hlt
push
adc
fidivrl
mov
out
mov
or
mov
das
insb
daa
add
outsb
jge
ret
cltd
or
popf
push
sahf
stos
jle
cmp
aaa
adc
std
dec
rcl
imul
icebp
call
mov
push
push
mov
pusha
mov
negb
add
dec
jge
jp
sub
inc
movsl
fdivr
lret
mov
mov
aam
rorl
scas
pop
cwtl
jl
xchg
shr
inc
xchg
jb
data16
inc
bound
cmpsb
pop
add
int3
and
ds
mov
orb
mov
fildl
xchg
lock
flds
pop
cmp
jge
pushl
xchg
adc
xor
icebp
imulb
push
iret
xchg
jne
outsl
mov
out
xchg
stos
xchg
xor
add
stc
push
pop
xor
xchg
jbe
jnp
mov
or
or
push
mov
xor
paddq
mov
push
add
xchg
and
pop
lock
and
out
inc
subl
adc
dec
add
cld
pop
les
jnp
push
js
js
aaa
dec
loope
test
sbb
icebp
adc
mov
xlat
inc
call
pop
fstps
xchg
cmp
lock
adc
jmp
sbb
mov
test
inc
sahf
or
rclb
es
lock
and
push
pop
sub
ret
mov
mov
cli
xchg
jns
aam
pop
movsb
ret
loop
jo
test
js
xchg
jg
out
into
mov
xchg
out
cmc
ss
dec
add
mov
cmpsl
jns
popf
inc
lock
mov
xor
jle
cmp
pop
movsw
outsb
or
sbb
enter
insl
pushf
mov
fcoms
push
pop
lock
ja
push
cmp
mov
fsubs
mov
dec
jne
mov
test
popf
pusha
mov
mov
jno
add
out
jmp
add
aas
add
lods
test
xchg
sbb
pop
ffree
jb
imul
adc
addr16
pop
scas
jl
out
sar
mul
xchg
xor
jge
jecxz
xchg
mov
pop
sti
cs
jmp
xchg
lahf
clc
fstl
rcl
iret
lock
sub
ds
cld
and
out
inc
dec
inc
jnp
stc
sub
testb
push
pop
movb
andps
and
mov
or
xchg
sub
test
lods
ret
sbb
pop
sub
les
inc
in
or
add
aaa
inc
imul
inc
aam
shl
movsb
mov
cmp
push
imul
cwtl
lcall
pop
rcr
sti
sub
jae
xchg
xchg
xor
popf
adc
dec
xchg
pop
stos
adcb
jle
cmp
iret
mov
test
fbstp
sbb
negl
jmp
leave
imul
in
movsl
sub
xor
lret
clc
mov
jecxz
push
sub
gs
inc
out
pop
fnclex
rcrl
push
int3
pop
mov
loop
popa
push
cmp
mov
fldt
insl
adc
loopne
xor
test
jbe
stos
sti
pusha
shlb
add
lods
add
xor
aam
iret
std
push
push
test
in
inc
jmp
mov
jg
cmp
or
in
mov
sahf
xchg
rcll
add
mov
mov
jle
jae
inc
sahf
int
and
int3
mov
sub
xlat
inc
push
jg
add
dec
xchg
dec
nop
push
aad
aaa
mov
sbbb
xlat
dec
mov
imul
mov
movsl
leave
and
or
push
pop
daa
mov
clc
lds
cmpsb
push
ljmp
out
mov
mov
add
mov
push
das
out
js
lods
jmp
fisttpll
sbb
pop
out
imul
add
jg
mov
xorl
or
hlt
cmpsb
imul
or
adcb
xor
sysenter
cwtl
sbbl
enter
in
test
push
pop
pop
adc
pop
repnz
or
pop
lahf
sbb
mov
dec
cmpsl
test
sbb
sbb
push
jne
notl
mov
pop
fisttpll
push
dec
xchg
xchg
pushl
jne
jbe
mov
jo
repz
xchg
call
pop
imul
test
dec
loope
and
push
mov
call
mov
sahf
outsl
dec
pop
out
cltd
ret
test
popa
orb
sub
inc
ja
push
aas
xchg
dec
push
cmpsb
adc
aas
sbb
out
inc
test
loopne
int
pusha
icebp
loopne
in
je
push
cmc
pop
or
das
int3
gs
stos
xchg
sbb
cmp
cmp
lcall
jnp
popf
push
and
sub
ficoml
lods
xlat
xchg
enter
rcrl
or
inc
fisttpl
mov
sub
mov
mov
mov
test
mov
bound
lret
mov
xorb
jmp
clc
mov
faddl
push
aas
xor
push
add
sbb
and
cmpsl
ret
cmova
mov
add
xchg
leave
add
sbb
rclb
cmp
stos
mov
scas
dec
sbbb
jmp
sub
xchg
xorb
mov
call
fs
movsb
clc
icebp
test
je
fs
je
push
es
sub
mov
xor
nopl
sbb
pop
aam
sti
lcall
cmp
jno
fcoms
push
dec
push
inc
scas
jne
jb
push
cmc
and
sub
popf
stc
inc
cmp
adc
inc
sti
mov
lods
ret
frstor
cmp
or
lcall
add
cmpsb
out
in
icebp
stc
fadd
daa
mov
lahf
inc
add
xchg
ret
mov
push
pop
dec
xchg
fisttps
xchg
cmc
and
push
dec
test
mov
imul
ds
ljmp
fldenv
adc
scas
js
repnz
jo
inc
push
data16
das
cmpsb
or
xlat
jge
push
and
outsl
fmulp
dec
add
mov
mov
fisubl
imul
test
negl
sub
rcr
or
out
dec
fiadds
imul
mov
cmpsl
aam
jno
movsb
jno
sub
xchg
sub
imul
inc
adc
iret
mov
insb
ljmp
cmp
fdivr
enter
les
repnz
fstps
mov
lahf
or
or
push
jnp
dec
fldt
xchg
enter
mov
mov
jl
mov
fldl
and
aas
lds
dec
or
push
int3
push
inc
lods
cltd
es
add
mov
mov
mov
rclb
pop
movsl
add
cmp
cli
xchg
cmp
xor
repnz
mov
push
lcall
lcall
or
push
lcall
inc
mov
divl
lods
data16
repnz
cmp
outsb
xchg
leave
and
cltd
shr
inc
xchg
test
push
and
call
pop
and
mov
lds
loop
adc
cmpsb
idivl
add
xchg
lea
dec
xchg
nop
insb
jno
ds
stos
and
hlt
push
out
mov
sub
xorb
cmp
jle
or
jp
xchg
mov
pop
bnd
inc
fdivs
ja
sub
push
repz
mov
xchg
test
pop
pop
ljmp
rorl
push
lock
push
sarl
nop
je
imul
insl
inc
cwtl
or
xchg
lahf
push
je
test
xor
xlat
and
push
mov
daa
aaa
dec
push
cmc
sub
sbb
or
movl
fsub
daa
cs
inc
mov
sub
icebp
mov
jl
in
lods
push
pop
xor
sub
orb
push
popa
decb
push
movsl
pop
inc
push
cmpl
fistpl
mov
icebp
scas
jns
mov
enter
mov
jns
incl
mov
in
push
add
ret
mov
pop
push
mov
xor
mov
and
jno
mov
mov
cmpb
mov
mov
enter
push
pand
js
lods
les
dec
popa
adc
pop
out
sbb
push
out
jns
xlat
ret
xor
push
out
fisttpl
loopne
shl
in
or
or
sbb
or
cmp
lret
adc
arpl
clc
sub
insb
scas
lret
iret
fistl
pushf
cmp
mov
sub
mov
adcl
mov
sbb
add
mov
cmpsl
mov
pop
or
movsl
divl
xlat
imul
subb
movsb
inc
push
and
out
sub
popa
add
in
out
enter
sbb
stc
leave
in
add
test
loop
mov
jp
gs
or
lahf
stos
jbe
arpl
jl
mov
ljmp
push
ds
addr16
sbb
loope
mov
test
sub
aas
cltd
and
ss
les
imul
bound
xor
inc
mov
cmp
sbb
iret
scas
xor
push
xchg
jl
ja
xchg
mov
repnz
mov
cltd
jbe
outsl
clc
ja
outsb
cmpsb
cli
sbb
mov
addb
pushf
jge
loope
mov
push
add
xor
sbb
add
cmpsl
sbb
mov
jecxz
or
mov
rcll
sub
cli
xchg
mov
lea
inc
hlt
xor
push
sahf
rcrl
sarl
movsb
adc
jmp
and
or
add
push
and
add
push
adc
and
movsb
mov
out
adc
xorb
and
push
jmp
rol
jne
popa
fcmovb
xchg
lahf
xor
cmp
rclb
mov
sub
int3
push
mov
rorb
gs
imul
ror
mov
negb
cwtl
lahf
add
adc
cmpsl
dec
in
out
sbbb
insl
mov
jbe
cltd
lods
or
xor
mov
xchg
ret
pushf
stc
sub
pushl
sub
xchg
fsts
pop
mov
dec
loopne
jb
mov
xor
jns
cmp
fcomps
dec
and
jno
out
pop
fists
push
rorl
mov
dec
repnz
xor
les
jle
lahf
jg
aam
push
inc
add
mov
pushf
mov
aaa
mov
push
jbe
xchg
mov
cmpsl
hlt
or
xor
mov
xor
cmp
addr16
or
outsb
test
loope
jle
insb
xchg
cltd
mov
roll
xchg
or
or
in
pop
inc
mov
adc
test
dec
icebp
add
sbb
push
mov
mov
jne
xlat
fdivrl
popa
ljmp
cwtl
out
jge
mov
pushf
xchg
adc
add
ret
xchg
pop
or
push
inc
fidivs
sbb
test
mov
pop
popf
xor
loope
arpl
cmp
cmp
ljmp
mov
jns
xlat
add
adc
jge
adc
and
rcll
xor
adc
loopne
push
sub
fidivs
fstps
mov
mov
mov
and
ds
sbb
sub
xchg
outsb
in
add
pop
jle
jno
cmpl
inc
mov
push
arpl
lods
and
dec
cli
loop
rclb
movsl
push
add
lcall
das
xchg
xchg
mov
pop
sahf
sub
push
enter
shrl
or
jb
ja
push
add
test
shrb
sbb
dec
add
add
sbb
andnps
bound
adc
mov
hlt
xor
xchg
jns
push
pop
aam
push
loopne
data16
sbb
add
push
xor
push
xor
xorb
mov
or
cmc
fwait
mov
pop
pop
dec
popf
push
imul
xchg
fstps
xor
cmp
adc
sbbl
jl
popa
cmp
xchg
inc
push
mov
push
frstor
inc
xor
gs
das
cmpsl
or
roll
mov
aaa
xchg
mov
mov
inc
mov
inc
inc
pop
outsb
loop
pop
inc
sub
inc
loope
mov
in
or
insb
xchg
lret
or
lds
test
aaa
fsqrt
stc
inc
test
imul
testb
test
mov
iret
sub
jb
fsubl
push
outsl
dec
cmc
or
bound
arpl
aas
cmp
mov
mov
ds
lock
popf
jns
mov
aas
movsl
add
xchg
rorb
jmp
mov
inc
into
xchg
mov
or
sahf
jbe
pop
push
in
lock
divl
ss
loopne
push
lds
out
hlt
idivb
aaa
add
ftst
loop
jns
lret
jecxz
sub
gs
add
xor
lahf
sbb
cwtl
aas
jmp
out
adc
adc
xchg
stos
icebp
out
xrelease
lds
enter
sub
pop
dec
push
sub
out
or
jl
test
les
pop
daa
adc
adc
arpl
adc
push
xchg
sub
cmp
adc
push
ljmp
jae
cmc
sbb
andnps
aad
mov
sub
xchg
xchg
pop
jae
shrl
test
jae
jno
push
xchg
lods
addb
js
xchg
push
rorl
push
imul
sahf
imul
or
scas
add
movsb
js
out
or
mov
add
lcall
cmp
mov
gs
outsl
inc
inc
inc
add
leave
rcr
mov
mov
cmc
pop
loope
shll
cmp
cs
xor
cli
daa
outsl
in
stc
pop
xor
or
xchg
mov
add
clc
sbb
cmpsb
and
xchg
xor
mov
mov
ljmp
jmp
ja
xor
movsb
pop
mov
push
inc
xor
rorl
jne
iret
enter
xor
push
out
test
ret
cltd
inc
cmp
xchg
sub
dec
addr16
gs
sarb
in
mov
mov
lahf
mov
test
pusha
lods
arpl
mov
xchg
icebp
jns
fcoms
sbb
jb
xchg
test
dec
scas
fcmovnu
ret
lahf
loop
cmpsb
dec
cmp
cmpb
js
fiadds
jl
test
mov
jecxz
lret
pushf
out
xor
sub
xchg
repnz
js
mov
dec
sub
mov
das
mov
mov
movsb
push
sub
cs
mov
mov
out
inc
add
push
mov
xorl
hlt
mov
push
or
xchg
mul
push
sbb
ja
jl
repnz
outsl
test
insl
and
push
fisttpl
fdivp
sbb
inc
repnz
ljmp
int
and
adc
ret
jge
pop
fcmovb
subl
shrl
test
lock
imul
cmp
shll
push
cs
test
mov
push
test
adc
cmp
pop
mov
xchg
bound
ja
xlat
inc
add
scas
sub
xor
jmp
cmp
notb
xor
inc
push
ljmp
sub
fisttpl
mov
mov
cmp
pop
mov
sbb
or
adc
and
imul
jmp
clc
ret
test
fdiv
mov
xor
add
addps
mov
adcb
pop
cltd
stos
scas
pop
bound
and
push
lahf
push
lret
lds
jle
fst
mov
pop
xchg
inc
jbe
xor
stos
popf
dec
jmp
pop
call
jp
jns
adc
ss
mov
fsubs
loop
jns
lods
cli
and
xchg
dec
lods
cmp
pop
mov
inc
cmc
lds
ljmp
inc
fcoml
inc
enter
sbb
popa
push
loop
cmp
pop
jmp
xor
fwait
lea
or
mov
xor
jbe
jb
xchg
inc
xchg
sti
faddl
stc
and
cmp
hlt
adcl
mov
scas
sub
fs
lret
andb
xlat
push
pushl
xchg
aaa
inc
push
sbb
sub
jl
clc
jnp
or
repz
iret
fisubs
xchg
inc
mov
in
imul
mov
test
loop
lcall
icebp
xchg
dec
setns
das
in
sub
push
shll
movsb
mov
in
mov
cmp
jl
pusha
movsl
and
push
insl
or
int3
lahf
sar
sub
test
jns
fstpl
ja
sahf
jno
xor
sub
sbb
notb
cmp
leave
inc
test
aad
insl
loope
insb
push
xor
lock
dec
pop
push
sub
mov
test
hlt
cmp
pop
push
pushf
gs
cltd
xor
jno
push
insb
jo
lea
cmp
shrb
jb
adc
rcll
push
or
sub
out
mov
shrb
fwait
push
into
cmpsl
test
lret
das
ss
repnz
in
fs
es
pushf
popa
stos
inc
cmpsb
shlb
mov
push
jmp
push
jmp
idiv
xchg
push
sahf
xchg
out
and
xchg
fwait
dec
xor
scas
xchg
scas
lret
pop
roll
out
pop
iret
mov
push
fildll
jl
lret
xchg
add
repz
lcall
sbb
jbe
fisttps
cmpsl
pushf
gs
mov
xor
loopne
xchg
or
add
out
sti
adc
adc
mull
aad
sbb
popf
jne
mov
sub
dec
out
js
mov
stos
mov
sbb
push
daa
mov
mov
add
test
sub
enter
dec
pop
adc
shrl
inc
mov
clc
das
mov
ds
add
add
push
shll
mov
test
in
inc
or
push
in
jecxz
repnz
inc
push
and
push
pop
cmp
std
loop
popa
pushf
mulb
jle
mov
insb
and
cmp
outsl
bound
lret
or
lods
xchg
mov
outsb
xchg
inc
cmpb
pop
jb
cmpsl
cmp
int3
mov
addr16
xchg
call
sbb
int
jno
movd
es
cltd
int
sub
adc
and
sub
adc
pushf
add
in
arpl
test
shlb
test
mov
ror
inc
inc
pop
fptan
inc
lahf
jmp
fmulp
sbb
xor
ds
mov
xor
dec
sbb
mov
int3
xchg
shlb
fcomi
mov
sub
lcall
aam
mov
pop
jnp
icebp
sbb
adc
jb
cmp
rol
jg
aaa
or
push
mov
push
mov
sbb
fdivr
int3
and
cmp
mov
icebp
bound
xchg
push
adc
call
push
repnz
nop
xlat
xchg
mov
movsl
xor
mov
imul
pop
clc
out
xchg
std
nop
loopne
lahf
adcl
lret
shll
test
loop
or
test
sbb
xor
cld
lret
jge
jnp
ja
adc
iret
push
gs
sbb
xchg
ja
mov
in
push
add
xchg
and
pop
rcll
je
inc
aas
push
xor
pusha
insb
pop
outsl
inc
adc
xchg
and
inc
mov
aaa
push
lea
jmp
mov
adc
xchg
sub
push
dec
jbe
xchg
mov
ret
sub
repnz
loop
test
les
and
pop
enter
mov
ds
push
sahf
lret
icebp
call
cmovle
or
pusha
add
sbbl
push
xor
dec
jg
insb
imul
push
pop
mov
subl
mov
pusha
movnti
test
fnsave
imul
inc
xchg
mov
or
idivl
adc
jg
push
add
test
imul
mov
in
lock
dec
sub
add
rcrb
lcall
shrb
adc
mov
das
jmp
in
mov
adc
ds
xor
xchg
add
sahf
in
movsl
out
or
push
add
aas
and
popf
pop
dec
sbb
adc
xchg
jnp
popf
dec
lds
sbb
cmp
mov
stos
shll
inc
sarb
jnp
gs
mov
leave
xor
popa
aad
scas
cmp
mov
inc
icebp
or
cmc
xchg
mov
xor
mov
rcll
pop
gs
adc
dec
cltd
hlt
dec
cmp
add
push
add
lods
cld
mov
fnstenv
sbb
loope
cmovg
push
push
sti
pop
jb
loope
cmpb
aaa
nop
out
stc
dec
lea
out
icebp
add
ret
jge
dec
ja
adc
outsl
jo
push
add
sub
dec
lods
std
popa
popf
sbb
sbb
mov
jmp
lret
mov
or
test
xchg
or
mov
mov
push
cmpsl
aas
push
ret
mov
mov
nop
jecxz
hlt
jo
xchg
pop
sbb
or
xchg
test
push
and
mov
pop
fucomi
loope
jae
mov
xor
addr16
inc
xor
add
mov
pop
inc
or
cltd
push
int3
dec
sbb
stc
inc
xor
imull
mov
int
xchg
pop
aad
inc
call
leave
shrb
mov
rol
stos
outsl
inc
int
repz
mov
jge
add
push
push
sbb
xor
mov
sbb
pop
mov
cmp
out
div
or
aad
push
add
fcomip
push
push
ret
adc
dec
mov
inc
sub
dec
mov
test
jb
stos
int3
jg
enter
xor
xor
mov
cmp
and
ficoms
xor
sti
fbld
cmp
nopl
jl
adc
sbb
mov
lock
cmc
add
jno
or
test
dec
push
sbb
cld
cmp
jnp
push
mov
testl
loope
adc
xor
push
jbe
pop
popf
in
in
add
adc
mov
xor
out
xchg
dec
les
data16
shlb
or
jae
jle
ss
cmpsb
out
xchg
repz
or
test
enter
ret
and
mov
cmpsl
scas
les
push
push
and
fdivs
es
lret
fnstcw
das
aam
jne
insl
shrd
loopne
mov
jne
je
test
mov
pusha
sbb
push
ret
fcoms
add
mov
ret
jp
xchg
mov
or
test
lea
cld
push
or
add
imul
out
mov
cmp
test
dec
ds
mov
repnz
sub
push
pop
add
push
sub
pop
push
mov
fistps
push
arpl
mov
adc
lcall
dec
add
popa
mov
popa
dec
xchg
shl
in
pop
clc
insl
push
sub
mov
sbb
inc
in
inc
adc
jp
nop
insl
stos
mov
cld
mov
push
mov
push
and
clc
pushf
and
mov
pop
mov
adc
mov
mov
lock
out
push
mov
sbb
xlat
cmp
pop
adc
jne
sbb
xorb
or
dec
mov
adc
nop
ds
testl
mov
cmp
jge
jp
dec
adc
leave
outsl
movb
dec
imul
sbb
das
inc
test
lcall
mov
mov
ds
mov
push
fwait
pusha
stos
or
inc
pop
xchg
mov
and
fprem
lock
mov
sahf
push
mov
cmp
xchg
pop
stos
push
pushf
jp
vpmaxub
adc
aam
mov
inc
lcall
popf
in
push
mov
sbb
sub
adc
inc
sub
push
push
inc
push
cmpsl
out
jge
pop
in
xor
mov
movsb
dec
pop
mulb
rcl
sbb
ljmp
or
push
scas
pop
pushf
repnz
insb
leave
xchg
hlt
dec
adc
and
test
sub
sub
out
dec
dec
ret
stc
xor
daa
pop
push
sub
sub
popa
fisubs
cmpsl
test
roll
pop
jg
adc
stos
cmpsb
outsl
jg
loop
in
cmpsl
xchg
cwtl
or
xorb
sub
or
mov
xchg
xor
or
mov
add
out
int3
add
gs
pop
icebp
sub
mov
sbbl
imul
push
sbb
xorl
lea
nop
sub
add
mov
sub
add
popf
add
arpl
hlt
mov
cmp
lds
movsl
sub
push
sbb
jp
cwtl
daa
xlat
out
jae
aas
mov
daa
inc
push
add
movsb
push
pushf
push
sbb
mov
dec
jnp
mov
ss
mov
insb
push
fcompl
jbe
xor
repnz
adc
cmp
jl
push
xchg
mov
fiaddl
xor
or
rolb
cwtl
jnp
out
push
add
add
cli
adcb
nop
push
mov
stos
stc
inc
pop
es
mov
push
mov
arpl
xor
or
daa
xchg
push
push
ror
pop
pop
cmpsb
lea
mov
hlt
mov
xchg
mov
push
shrl
mov
xor
out
push
lcall
xchg
dec
imul
ljmp
pop
lds
ret
scas
adc
in
sti
sub
add
sbb
stos
jg
or
out
mov
test
ljmp
fdiv
adc
mov
xor
fstps
fsubr
cmp
xchg
nop
pop
test
sub
mov
mov
dec
sbb
sub
sbb
mov
mov
push
pop
bswap
mov
mov
sub
loope
jge
pop
pop
sub
fsubrs
aaa
xor
sti
jae
and
in
mov
icebp
adc
jmp
sbb
jae
aas
popa
stos
mov
pop
xor
xchg
and
pop
pop
scas
dec
aam
and
mov
popa
xor
pop
mov
arpl
fdivs
in
bound
xchg
pop
push
pop
push
or
inc
adc
shl
xlat
mov
sahf
pop
xor
or
je
hlt
fwait
dec
or
push
rcl
jmp
xor
push
mov
and
cltd
mov
cmpsb
xor
mov
xchg
mov
jns
mov
scas
lcall
jne
int
sbb
movl
mov
bswap
stos
sti
add
mov
xchg
scas
jbe
push
ret
sub
idivl
cmp
nop
mov
loope
mov
xadd
add
in
mov
andl
mov
out
or
add
loope
pusha
les
hlt
ljmp
jnp
cltd
xchg
nop
lds
or
je
push
je
ficoms
addr16
sub
mov
mov
mov
test
hlt
mov
mov
xor
ss
and
clc
fisttps
mov
scas
jns
xchg
dec
mov
mov
adc
lods
or
ds
call
aad
insl
cld
ljmp
fs
mov
int
adc
xorl
cmp
and
out
jae
mov
jmp
mov
jle
loope
sbb
aam
js
cmpsb
test
and
scas
call
pop
add
popf
cmp
jbe
push
popa
dec
pushf
shll
into
js
dec
stc
sub
nop
cmp
pushf
sub
fidivrs
jl
add
bound
xchg
xor
loope
aas
stos
inc
lds
push
push
leave
iret
adc
add
leave
sub
mov
in
push
repnz
dec
or
loope
or
push
movsl
inc
test
scas
push
mov
out
jo
sub
rcrl
adc
add
jno
xchg
idivl
sahf
enter
mov
push
mov
xchg
or
xor
jae
or
insl
loope
jbe
in
sbb
add
adc
lea
xchg
movsb
jmp
lret
nop
and
mov
cmp
jecxz
push
test
adc
pop
add
push
add
rorb
cmp
or
mov
xchg
in
fcmove
out
insb
inc
xchg
cmp
cld
cwtd
lds
ljmp
add
inc
pop
or
xor
in
faddp
ds
out
or
fisubrl
mov
mov
mov
dec
fiaddl
movsb
adc
lds
and
dec
jo
rorl
aas
pop
mov
jge
mov
shll
mov
or
js
push
mov
xchg
mov
bound
sub
jmp
fwait
dec
push
dec
add
js
jae
je
add
add
jmp
pop
inc
sbb
cmpsl
inc
xor
loop
das
add
cmpsb
inc
push
notl
mov
mov
pushf
adc
jp
arpl
addr16
popf
xchg
sbbl
into
sbb
ret
xchg
ds
loop
fwait
sarl
mov
stos
xchg
les
insl
pop
sub
xor
sbb
fst
outsl
inc
dec
mov
insl
leave
dec
fdivrl
arpl
xlat
xorb
mov
fs
outsb
jg
or
adc
mov
out
in
xchg
fs
or
jb
pop
and
inc
sbb
jne
xchg
jg,pt
in
shlb
mov
inc
and
sahf
js
gs
mov
addl
sub
mov
pop
add
dec
mov
push
popf
fsubp
cmp
and
jbe
lds
repz
or
nop
push
mov
shll
ret
test
jae
hlt
imul
stos
or
add
out
add
repz
mov
dec
cmp
sbb
add
lock
or
or
inc
test
loope
mov
jb
sbb
xor
mov
push
jae
sub
lock
rcrl
jle
xchg
negb
test
fmull
in
das
cmp
ds
jp
les
call
aad
mov
inc
pop
adc
dec
cld
mov
sub
pop
add
add
in
in
cmpsl
cmp
popf
pop
mov
and
adc
scas
stc
and
iret
dec
adc
add
cmp
imul
sub
add
cmp
int
mov
push
ds
cmp
mov
mov
lahf
bound
int3
movq
inc
test
lret
test
jne
sbb
orb
cmc
xchg
gs
sbb
jb
add
pop
dec
movsb
lea
pop
mov
mov
dec
jle
movsb
fldl
outsb
movb
sbb
int
cmpsl
xchg
mov
ss
pop
pop
fisubrs
fs
cmpl
cltd
xchg
mov
jns
mov
and
mov
fiaddl
dec
scas
loope
dec
jle
cmpsl
mov
icebp
ss
cmp
mov
mov
sub
les
mov
mov
jbe
aam
jne
test
cmpsl
and
scas
cld
inc
out
dec
js
in
inc
adc
push
arpl
cmp
xchg
daa
popf
xchg
fs
push
flds
outsl
loopne
lds
add
push
push
xchg
cld
lahf
lods
add
repz
loop
test
cwtl
lock
mov
repnz
mov
sbb
pusha
push
adc
repnz
mov
cmpsl
jecxz
aas
pop
fmull
jne
andb
cmp
testl
mov
pusha
out
cmp
das
test
stos
dec
pop
and
mov
rcrl
pop
cmp
rorb
test
stos
icebp
gs
push
mov
ret
xor
sbb
imul
sbb
push
stos
lods
sub
pop
std
jge
push
scas
xchg
int
bound
cmp
mov
add
sub
mov
das
and
xor
shlb
rolb
mov
lahf
test
icebp
push
pop
popa
loope
idiv
std
pop
jp
add
fwait
cmp
jo
jmp
lsl
test
sahf
mov
pop
test
cmc
and
lret
aam
in
dec
les
imul
inc
dec
sbb
in
mov
and
jmp
add
in
arpl
adc
adc
jns
xorb
xchg
inc
mov
pop
stos
aam
enter
add
push
dec
outsl
xchg
jno
outsb
test
xor
mov
mov
mov
mov
test
push
ja
add
or
inc
lea
decl
lods
mov
xor
pop
cli
xchg
cwtl
test
or
cmovg
add
scas
addl
push
mov
sub
loopne
pop
int
cmp
test
decb
lcall
cmpsb
lea
push
mov
sbbl
test
stos
and
add
push
arpl
cwtl
movsb
adc
sub
mov
adc
inc
pop
jp
cld
xor
mov
or
into
test
xlat
rolb
xor
mov
test
cmp
adc
push
outsb
mov
mov
adc
sarl
imul
cld
xchg
lock
push
mov
mov
shlb
mov
xchg
add
mov
cmp
or
push
orb
in
mov
cmp
fldenv
adc
xchg
adc
int
lock
test
jns
rcl
ds
cmc
cmp
push
adc
or
cmp
outsb
adc
icebp
pop
loopne
add
pop
add
repz
iret
orl
jno
popf
mov
lahf
and
xor
and
and
lods
xchg
mov
jmp
out
nop
popf
lds
jp
fistpll
pusha
es
adc
es
sbb
jno
xrelease
mov
test
mov
sbb
dec
cmp
mov
inc
xchg
jns
inc
lret
inc
jno
mov
imul
and
pop
stos
fs
clc
pop
fldenv
push
mov
cmp
hlt
adc
add
mov
mov
inc
xor
xchg
mov
ret
clc
sbb
and
xor
addl
sub
and
inc
movsb
in
mull
dec
mov
jmp
int3
test
ss
add
mov
xlat
faddl
cmp
jae
lret
sbb
pop
cmpl
out
cli
push
js
and
mov
mov
sub
addr16
mov
hlt
les
lret
outsl
jp
cmp
or
mov
xor
ret
cltd
js
mov
lock
adc
repz
roll
fwait
mov
lcall
gs
sbb
aaa
divb
adc
call
scas
stc
push
rolb
in
in
lea
jg
or
add
sub
jmp
subl
sti
sub
xchg
es
xchg
and
sbb
xor
mov
pop
cmp
push
and
pop
mov
in
lret
nop
mov
out
test
stc
cs
mov
ljmp
in
sahf
sub
and
dec
jecxz
mov
hlt
bswap
imul
movsl
inc
cmp
sti
pop
mov
and
gs
stos
pop
sub
jb
mov
sub
out
aaa
mov
std
pop
inc
xor
xchg
pop
mov
mov
aad
push
cltd
sub
repz
add
pushf
xchg
pop
imul
fiaddl
leave
inc
mov
into
xchg
in
lds
stc
addr16
jnp
test
add
sub
pushf
jecxz
out
mov
jno
pushl
lret
imul
or
sub
dec
mov
xchg
in
in
jne
and
rorl
aam
add
insl
out
sub
repz
loop
clc
xor
shr
movsl
or
cmpsb
adc
aam
fldt
jl
lods
sahf
xchg
jecxz
pop
or
in
leave
sti
xchg
inc
push
and
arpl
adc
out
test
scas
shlb
mov
cmc
dec
xchg
xchg
lret
push
movsb
xlat
inc
add
fdivl
adcl
push
and
fdiv
loope
pop
scas
nop
imul
jecxz
fwait
and
inc
xchg
mov
adc
mov
sub
clc
cmp
lods
inc
push
cmp
push
repz
enter
adc
inc
pop
mov
lret
mov
sbb
jns
cltd
mov
mov
sbb
fsts
fimuls
lcall
dec
dec
fwait
shlb
test
inc
mov
cmpsb
sti
cmpsl
xchg
xor
ja
xor
cli
lret
or
pop
loope
scas
pushf
orl
mov
sbb
mov
sub
test
mov
test
test
and
fs
js
decb
movsb
cmp
int3
jmp
mov
jg
rcll
insl
jmp
lea
mov
sbb
out
aaa
push
cmp
ja
jns
add
mov
iret
xor
cli
pop
fnsave
sbb
rorb
stc
sub
in
daa
dec
pushf
xchg
sub
loop
jge
fldt
ljmp
dec
jnp
xlat
mov
fdivl
in
push
rol
aam
cli
adc
adc
aas
dec
out
sahf
orb
xchg
and
mov
xchg
ss
shrl
xchg
push
ds
in
mov
mov
dec
pushf
adc
stos
jge
lds
cwtl
shr
inc
xchg
pop
pop
xor
push
xor
fists
sub
in
adc
dec
sub
int3
xchg
arpl
std
aas
mov
xchg
sarb
mov
sbb
sti
mov
hlt
sub
nop
sbb
repnz
add
mov
das
and
fld
mov
pop
xor
mov
lcall
mov
mov
dec
push
dec
mov
aam
jbe
movsl
js
add
xlat
shl
adc
adc
add
mov
mov
push
xchg
lods
push
pop
inc
shll
push
pop
ljmp
xor
test
ja,pt
jae
jecxz
xorb
outsl
sub
clc
jl
lret
test
add
pushf
mov
pop
mov
ret
pusha
rolb
xor
jg
push
in
xchg
mov
aad
push
pusha
mov
mov
and
into
les
xchg
or
je
pop
inc
or
xchg
push
test
pusha
cmp
es
lods
adc
xchg
pop
mov
jp
iret
arpl
adc
mov
mov
add
lret
xchg
sbb
into
fmuls
scas
or
adc
jbe
leave
iret
mov
pushf
into
cmpsb
cltd
cmp
test
pop
xor
rcll
add
rcrb
lcall
fs
jecxz
pop
ret
jne
mov
shll
insl
enter
xchg
lea
mov
shll
rol
xlat
imul
pop
lock
fs
ret
or
dec
test
xlat
mov
sete
pushf
outsl
fnsetpm(287
stc
insb
adc
mov
daa
out
pop
popf
popa
fmul
outsl
and
rcrb
cltd
adc
cmp
dec
add
arpl
rcrl
push
cmpb
gs
inc
stos
std
outsb
bound
xchg
int3
enter
jnp
push
pop
jb
jb
ja
jp
pop
iret
or
test
sbb
push
shll
mov
rorl
pop
jno
ljmp
xchg
fidivs
and
push
pop
mov
mov
imul
push
adc
shrb
cltd
sbb
or
xor
mov
jb
pop
or
adc
sti
movsb
out
or
in
sahf
dec
xchg
or
in
ficoml
pop
iret
in
and
xor
cmpsb
pop
divps
inc
or
sub
jmp
les
aad
iret
or
dec
jle
or
add
sub
xor
inc
mov
loope
aad
jnp
jg
xchg
pop
test
adc
shlb
das
mov
cmp
dec
pop
xchg
int3
xchg
imull
xchg
cli
mov
enter
add
sub
fs
push
dec
js
sbb
test
cmp
call
aam
inc
pop
rcll
das
xchg
mov
jge
push
jmp
icebp
out
adcb
push
xchg
dec
xor
dec
cmp
ss
icebp
mov
sbb
sbb
fimuls
inc
fstpl
mov
inc
sub
pop
ds
lret
scas
ret
pop
inc
aam
adc
out
mov
adc
jp
inc
test
dec
xchg
loop
aam
addb
insb
out
bswap
mov
inc
push
data16
ljmp
mov
dec
or
ret
daa
movsb
out
lret
shlb
dec
push
pusha
sub
pop
mov
loope
cli
lea
outsb
insl
data16
inc
pushf
icebp
out
add
mov
frstor
push
ret
inc
push
je
push
movsb
iret
xchg
mov
cli
out
ret
xcrypt-ecb
cmpsl
leave
push
pop
mov
fwait
dec
stos
mov
add
aaa
in
pusha
adc
icebp
adc
in
repnz
jno
lcall
lea
mov
pop
add
push
push
cwtl
adc
push
pushf
cmp
cmpsb
in
jae
jb
imul
shrb
mov
cmp
sbb
add
xchg
cmp
mov
mov
arpl
adc
and
bound
xchg
xchg
ret
jl
jg
mov
jnp
adc
fmulp
jbe
push
inc
es
add
bound
cs
loop
push
adc
mov
lods
xchg
sbb
inc
inc
ret
jno
nop
xchg
push
xchg
mov
inc
add
rolb
js
clc
popa
mov
push
movsl
decl
dec
aad
aas
in
aad
mov
enter
jbe
pop
cmp
flds
fcomi
mov
roll
inc
in
pop
mov
test
mov
dec
dec
push
jbe
xchg
push
or
repnz
sbbb
fdivrl
incl
imul
loope
push
dec
and
cmp
cld
out
pop
xorl
out
xor
out
fsubr
cs
gs
fistpll
rcll
mov
ja
push
cmp
negl
jae
mov
cmp
adc
mov
loope
aad
lods
cmpsl
adc
mov
rorl
mov
add
pop
push
cld
inc
aad
mov
cltd
iret
clc
sbb
or
xor
cmc
int3
ficoml
cld
rcr
subb
call
mov
pop
sub
hlt
jle
cmc
or
add
je
adc
push
pop
fldenv
push
dec
lret
idivb
pop
xchg
iret
push
jecxz
pop
sbb
and
leave
lods
es
lcall
ja
sar
cmp
pop
scas
negl
aas
repnz
inc
adc
outsb
push
jnp
mov
xor
dec
aaa
rorl
mov
mov
push
push
pop
shr
es
pop
repz
or
mov
fdivrs
add
fdivrl
jle
sub
xchg
cltd
push
leave
fwait
and
or
dec
mov
mov
xchg
idivb
cmp
aaa
cltd
push
sbb
lret
addb
dec
cmp
dec
icebp
out
test
or
sbb
mov
movsb
lods
out
stos
addr16
sahf
bound
pop
push
fwait
jge
xor
insl
orb
dec
jl
into
out
ficoms
or
dec
mov
inc
mov
test
xlat
mov
and
test
js
cmp
cmc
test
leave
data16
xor
lea
int3
bound
mov
mov
leave
adc
data16
test
mov
mov
inc
aam
fdivs
test
rol
pop
cmp
jnp
dec
lcall
test
add
negl
push
gs
mov
lods
add
cmpb
mov
dec
mov
inc
cli
add
or
jo
lea
mov
iret
mov
dec
push
jmp
inc
js
mov
out
roll
pop
insb
mov
mov
mov
xchg
outsb
jge
shl
mov
into
je
rclb
sub
mov
mov
push
rorl
xchg
sbbb
pop
hlt
out
sub
dec
xchg
inc
sbb
cwtl
pop
sub
sub
outsl
cmp
xor
add
data16
mov
aaa
dec
sbb
jmp
ret
lret
inc
ficoms
inc
rcrl
jecxz
out
cmp
sbb
nop
rorl
xor
in
aaa
loope
add
mov
cmp
popa
into
shll
shrl
push
scas
in
lods
cmp
add
dec
and
inc
pusha
pop
cmp
jg
mov
cmp
mov
lcall
cmpsl
adc
xor
mov
sbb
mov
mov
cmpsl
ret
jno
jle
fldl
sbb
inc
or
lds
jb
add
sub
insb
push
aad
orb
xchg
inc
outsb
jmp
icebp
fildll
sub
stos
insb
pop
aad
loope
pop
mov
out
in
or
in
fisttps
es
lods
pop
add
and
sar
into
scas
test
add
sbb
jle
sahf
cmpsl
jo
push
dec
movsb
mov
xorb
inc
inc
push
outsb
inc
push
xor
loop
dec
mov
mov
test
fwait
popl
cmp
mov
insb
jb
pop
fnsave
out
aam
sbb
sub
xchg
dec
mov
push
in
lods
pop
or
mov
add
mov
xor
sbb
out
and
xor
cmp
mov
xchg
or
int3
repnz
cmp
cmc
sbb
xchg
cwtl
push
mov
jne
xor
je
cmpl
mov
ret
outsl
inc
popa
inc
xor
in
mov
jl
movsb
mov
popf
int3
in
out
mov
push
add
loope
int
push
aas
xor
sarb
xor
push
xchg
rorl
fdivrl
and
mull
in
adc
add
lcall
sub
pushf
xchg
into
dec
add
cmp
xor
and
adc
mov
cmp
imul
pop
sbb
fwait
xor
andb
jmp
push
add
jmp
jbe
aas
lods
and
or
cmpsl
lods
sub
data16
adc
pop
mov
pushf
push
pop
xor
lcall
imul
xchg
pop
dec
leave
inc
mov
or
lcall
pushl
jp
into
fdivs
mov
mov
cmpsb
insl
xor
sub
repnz
inc
adc
inc
stc
pslld
mov
jecxz
pusha
cwtl
add
mov
mov
test
and
and
cwtl
inc
shll
sahf
adc
sub
sub
popa
dec
cmpsl
js
lods
jbe
xor
ficomps
shlb
lcall
pop
daa
xor
lods
cltd
insb
int
lret
enter
stos
int3
jg
cmovno
mov
push
lret
arpl
outsb
lret
loop
clc
push
arpl
jmp
jl
add
jp
call
sarl
mov
cld
scas
pop
sti
ret
cmpl
push
test
out
mov
daa
dec
jge
lds
adc
test
enter
mov
test
pusha
mov
enter
push
and
adc
imul
rcpps
pop
rcll
push
popf
lret
dec
stc
xor
sahf
loope
mov
jmp
push
sbb
in
mov
push
add
das
sbb
test
lds
xchg
dec
ds
repz
xchg
jge
cmp
adc
mov
cwtl
aam
adc
imul
mov
fbstp
mov
sub
shlb
push
dec
aas
test
aaa
in
loop
cmp
insl
jl
jb
shll
dec
lock
pop
loope
add
push
pusha
and
inc
faddl
lods
mov
cmp
jle
sbb
or
or
imul
or
adc
sub
pop
jbe
mov
inc
push
pushf
push
xor
add
add
fsubl
pop
sub
loop
xorb
xorb
sbb
movsl
ja
sub
mov
jmp
mov
ss
jnp
push
jmp
cld
pop
xor
insl
mov
repz
fstl
in
shrl
loope
loopne
push
dec
rorb
cmp
or
inc
loopne
in
outsl
loop
into
jmp
cmp
cmp
in
vmread
pop
xor
cwtl
push
test
fsts
loopne
inc
lods
pop
cmp
dec
xor
test
add
add
and
test
mov
testb
std
call
je
loop
icebp
or
cmpsl
inc
outsb
push
mov
cmp
rcrl
cld
les
das
inc
imul
or
enter
out
inc
push
push
mov
or
or
les
fidivrs
dec
sub
movd
sbb
cltd
pop
das
pop
xchg
push
repnz
ret
sub
inc
cltd
inc
mov
and
dec
lcall
fdivp
lods
xchg
cltd
dec
inc
loopne
adc
inc
push
aas
stos
adc
mov
push
mov
adc
xchg
aad
add
push
aad
stc
in
push
popf
push
add
xchg
or
scas
push
mov
dec
xchg
pop
sbbb
jp
jne
jg
jg
rorl
mov
daa
ss
fisubl
inc
cmp
scas
stos
cwtl
lret
out
jbe
pop
push
stos
adc
mov
cmp
cmp
push
repz
lea
iret
ja
frstor
cs
adc
shll
popf
notl
add
sbbl
shll
data16
mov
sbb
fstps
mov
lret
bound
mov
jg
or
ss
mov
sub
loop
pop
adc
and
setl
mov
jae
outsb
in
mov
jmp
mov
push
adc
cmp
out
mov
mov
xor
sub
data16
inc
jo
mov
lret
xor
xchg
cmpsl
scas
pop
shll
push
or
xchg
cmp
icebp
inc
push
loop
ret
stos
sbb
mov
xchg
call
mov
popf
push
push
scas
jecxz
addr16
sub
add
leave
mov
cmp
gs
dec
xchg
test
jp
fadds
ds
dec
mov
jns
adc
in
sbb
cmp
daa
jp
popaw
cmp
inc
cs
stos
or
out
xchg
xor
scas
push
pop
jae
dec
adc
and
and
inc
mov
dec
adc
push
inc
pop
xchg
push
xchg
decl
dec
leave
push
stos
pop
stc
xchg
cs
pop
push
and
mov
lea
je
jb
or
xchg
or
mov
inc
jno
cli
mov
and
mov
sbb
fmull
add
jb
dec
fldt
in
inc
dec
cld
lds
ret
xchg
cmp
jbe
icebp
or
movsl
subl
mov
pop
dec
inc
inc
idivb
negb
xchg
xchg
jo,pn
cld
nop
push
rolb
or
cs
jp
add
lods
je
xor
mov
lds
pop
inc
xchg
dec
jnp
shll
jno
mov
cltd
fidivrl
outsb
stc
ljmp
sbbl
xor
out
test
jne
push
push
jecxz
cmc
inc
stos
ja
add
aas
sbb
xor
mov
daa
jns
sbb
and
das
and
push
dec
aaa
push
mov
pushf
pop
mov
stc
jno
dec
xchg
std
je
sbb
adcb
sbb
in
jbe
out
rcrl
or
dec
rolb
mov
mov
in
imul
pop
push
or
push
sub
adc
add
aas
ss
xchg
sub
scas
jle
adc
and
stos
bnd
lcall
adc
call
fdivs
sti
mov
int
je
rcl
xlat
cli
enter
popf
mov
jmp
frstor
in
arpl
mov
xchg
dec
inc
rorl
push
cmpsl
push
add
ljmp
sub
sbb
lods
stos
sub
adc
mov
cmc
aad
test
cld
mov
cmp
jg
mov
imull
sbb
test
fisubl
mov
xchg
dec
jno
jge
bndstx
shld
mov
pop
xchg
mov
or
inc
stos
xlat
dec
fdivrs
push
pop
dec
stos
push
rcr
push
call
inc
xchg
pusha
adc
pop
inc
and
int3
lods
pop
pop
lret
andb
xchg
ss
insl
cs
push
lds
inc
mov
push
or
xchg
mov
push
es
lcall
lods
inc
loope
add
jno
mov
sub
and
xchg
add
lock
movsl
push
inc
dec
decb
mov
xchg
jnp
cmpsl
out
stc
xchg
mov
adcl
aas
lahf
jge
fmuls
and
adc
rcll
mov
push
jo
sbb
xchg
add
mov
leave
out
popa
ficoms
sub
and
jge
add
lahf
add
pop
mov
sbb
cmpsb
in
cmp
scas
or
movsl
ret
iret
imul
stos
pop
ljmp
ret
ja
mov
ja
daa
mov
incb
pop
xchg
dec
adc
sub
xor
lock
rcll
call
pop
mov
dec
dec
mov
movsl
push
xchg
sbb
dec
arpl
sti
call
sub
or
add
dec
fxrstor
ljmp
xor
out
sub
je
mov
fwait
jmp
ljmp
mov
iret
dec
sbb
in
int3
push
push
xor
push
and
fcoml
xchg
sub
sbb
cmp
aad
das
xlat
int
adc
insb
push
push
adc
test
test
pop
mov
cld
lret
movsl
cli
dec
mov
mov
fdivl
sub
test
cli
cmpsb
mov
pop
and
jb
sbb
inc
push
jg
pop
shl
ret
rorl
pop
xchg
cmpsb
cld
adc
sbb
fstpt
out
jns
xchg
mov
cltd
xor
or
xor
add
inc
xchg
mov
push
cmp
mov
addb
std
aam
jne
pop
aad
push
fdivs
pop
test
and
dec
je
xor
sub
sbb
out
push
xchg
movsl
decl
jo
jge
or
add
hlt
jg
push
dec
xor
mov
setle
add
gs
sarl
fisubs
and
lahf
fidivrl
jns
dec
out
in
inc
adc
push
cmp
popa
mov
daa
sub
xchg
es
mov
sub
fdivl
adc
mulb
or
lods
insl
push
mov
imul
jle
outsb
loop
into
adc
js
in
leave
jo
sub
in
xchg
jne
push
add
jle
xchg
popf
rorb
push
push
pop
shlb
lahf
sti
bound
decb
sub
and
pop
push
fcomps
adc
sub
popf
imul
add
out
dec
xchg
mov
mov
cmp
xchg
mov
test
popa
cld
ficoms
mov
je
add
inc
jecxz
adc
mov
push
out
and
pop
jbe
mov
out
xchg
xchg
test
sahf
dec
adc
xchg
and
je
xor
out
or
loope
sbb
pop
push
add
mov
xor
movsl
addl
and
and
loope
xchg
mov
scas
dec
sub
dec
scas
daa
xor
jbe
add
data16
lcall
jo
sarb
out
pop
cmpsl
xchg
ds
je
push
sub
cmpl
call
idivl
cs
inc
test
pop
mov
dec
push
das
les
push
orl
adc
dec
push
outsb
cmp
incl
adc
dec
mov
inc
or
jne
cmc
pushf
mov
stos
lahf
sbb
xor
ja
aam
xlat
mov
add
dec
aas
aas
stos
std
push
lock
add
sbb
adc
mov
imul
rclb
inc
out
in
je
fists
sahf
push
sti
or
psubw
cmp
fnsave
repz
inc
sbb
leave
push
jle
pop
call
pop
sahf
sti
pusha
testb
add
cmpsb
leave
push
pop
jnp
nop
sbb
lds
into
js
xor
xchg
cltd
jnp
mov
adc
xor
add
lret
fildll
cli
jl
es
and
dec
cli
je
lahf
rcrb
pop
in
imul
shll
jnp
mov
sbb
lods
testl
jae
jp
jo
inc
xchg
mov
test
and
lea
repnz
dec
push
pop
sub
popa
popa
test
or
jg
pop
das
call
lods
imul
movsb
adc
scas
lock
jl
cltd
jp
out
movsl
dec
scas
leave
stos
sbb
dec
jbe
int
nop
inc
push
lods
int3
cmp
stos
addb
addb
mov
test
dec
xchg
pop
das
fs
in
jnp
mov
jl,pt
shlb
outsb
sub
mov
jo
jno
scas
les
sub
mov
cmp
inc
std
pop
adc
or
dec
sbbl
jecxz
inc
stc
jnp
mov
fwait
js
mov
mov
mov
insl
mov
and
cmp
out
pop
ds
pop
fdivrs
jge
and
jno
dec
xchg
aam
shrl
push
jo
loopne
imul
addb
cmp
cmp
adc
dec
xchg
out
scas
sub
fs
fldt
ljmp
push
lds
aad
jge
fs
sub
add
fnstenv
je
loope
fistps
xor
out
cmpsb
dec
insb
enter
pusha
sub
in
and
pop
sti
dec
lcall
fcmovb
lea
xchg
movsb
mov
into
out
js
pop
push
enter
inc
jae
lcall
repz
ljmp
mov
jmp
scas
or
or
dec
mov
add
xlat
push
jo
inc
pop
aaa
dec
adc
jle
mov
nop
ds
mov
push
push
sbb
jle
sub
lret
mov
loopne
daa
jge
jle
dec
addl
lea
sti
cs
cmp
push
lods
jns
hlt
insb
sub
mov
cmp
xor
repz
es
adc
in
push
test
popa
cli
pop
push
int
add
or
push
cmpxchg
push
mul
int
mov
cli
pop
shlb
mov
push
cmp
mov
fcmovu
pop
pop
stos
xlat
out
dec
mov
rcr
ds
or
or
pop
adc
add
adc
mov
hlt
xchg
sub
add
ss
xlat
xor
dec
mov
mov
jle
mov
aaa
sbb
lods
sbb
adc
sbb
mov
cmp
rcr
mov
inc
mov
out
rolb
repnz
jae
push
mov
fidivrl
cltd
xchg
or
das
adc
xchg
xchg
jno
cs
stos
cmp
loope
test
sahf
sti
shll
or
xchg
mov
leave
movhlps
enter
pusha
jbe
mov
xchg
and
jecxz
lea
jmp
sbb
add
sub
cltd
divl
add
push
out
cld
xchg
pop
scas
dec
jle
pop
mov
notb
inc
lea
push
jae
mov
dec
out
sahf
std
sub
mov
int3
xor
adc
repnz
lcall
hlt
out
mov
addr16
scas
xchg
fisubs
mov
in
fsqrt
xchg
adc
jecxz
mov
icebp
ss
test
add
lods
scas
ja
mov
xor
pop
fmul
pushf
mov
or
mov
xchg
subb
mov
stc
xlat
dec
cmp
push
push
xor
and
or
jl
daa
cmp
out
mov
adc
pop
and
leave
cmp
lcall
sub
insl
cmp
es
mov
ret
or
imul
sbbb
andb
loope
jae
push
or
sub
adc
orb
jno
pushf
gs
roll
shl
cld
mov
addb
sub
sbb
pop
add
adcl
adc
xchg
and
dec
cwtl
sub
outsb
cmp
insb
sti
stos
movsb
lods
jmp
jne
pop
xchg
aam
mov
mov
push
xor
mov
mov
das
and
aaa
sbb
shll
pop
sub
fwait
outsb
and
xchg
out
pop
push
arpl
mov
jg
into
daa
and
jecxz
add
mov
and
sub
sbb
jecxz
repz
jo
negb
cmp
fidivrl
sti
jne
addr16
sbb
pusha
or
outsb
aam
dec
mulb
icebp
aam
xchg
adc
inc
nop
push
xchg
cld
test
jno
dec
out
dec
inc
bound
push
mov
insb
loop
dec
cmpsl
adc
or
stc
pop
popa
xor
xor
pop
nop
dec
xchg
pusha
pop
call
pop
lds
test
subl
xchg
xlat
aaa
sbb
sbb
jnp
jbe
daa
sub
mov
dec
dec
fdivs
sbb
repz
sub
mulb
cs
jns
inc
xchg
xlat
inc
lahf
cld
imul
fisubrl
outsb
insb
cmp
insb
divl
stos
push
in
shl
je
sub
cmp
cltd
insl
cmp
push
push
aaa
or
jo
sarl
jmp
int3
xor
ds
idiv
mov
jl
and
pop
cwtl
lahf
sbb
popf
shr
imul
test
or
dec
mov
ror
int3
inc
or
mov
sbb
inc
stc
insb
lock
loop
jno
inc
xchg
shr
test
dec
outsb
bound
jge
push
xchg
sti
push
mov
and
sub
icebp
inc
mov
cmp
push
mov
add
icebp
dec
cmp
xchg
test
std
aaa
jg
mov
pop
dec
out
adc
adc
adc
out
pop
fbstp
mov
subb
pusha
call
jp
out
lcall
mov
repnz
add
push
xchg
fwait
cmc
in
repnz
pushf
mov
xor
mov
pop
aaa
jmp
cmp
cwtl
clc
pop
sub
loop
add
pop
in
fdivrs
or
fidivl
out
push
inc
inc
xchg
xlat
add
mov
mov
cvtdq2ps
and
iret
daa
mov
out
dec
hlt
pop
and
pop
push
leave
xchg
add
movsb
fs
in
jge
sbb
or
movaps
add
in
jmp
sbb
adc
xchg
lea
adcl
clc
mov
les
adc
xlat
xor
aaa
mov
xchg
inc
mov
das
mov
popa
mov
test
mov
pop
jbe
jo
gs
jne
xchg
loop
push
cli
pusha
mov
mov
xlat
into
leave
stos
fstpt
hlt
xchg
push
push
dec
xchg
js
jmp
cmc
repz
je
in
dec
adc
jae
lea
ja
add
fsts
mull
xor
cld
inc
insl
adc
adc
lret
sbb
xor
add
fisttpl
pushf
mov
sub
fists
inc
std
sub
push
mov
adc
and
mov
mov
lcall
stc
mov
jge
scas
or
mov
daa
inc
std
cmc
push
adc
popa
inc
mov
pushf
sbb
ret
ret
imul
mov
push
cwtl
push
mov
hlt
cwtl
add
mov
sbb
pusha
pushf
jmp
das
popa
and
or
ljmp
xor
lods
and
pop
mov
rolb
mov
jae
adc
cmpb
mov
daa
sbb
xlat
jb
adc
add
push
fsts
popf
stos
push
lock
into
mov
leave
sbb
daa
or
push
fmull
xchg
push
mov
xchg
out
and
xchg
push
ljmpw
cmp
clc
pop
repz
adc
inc
jg
lods
jmp
and
sub
cmp
aas
lea
inc
pushl
push
hlt
outsl
dec
dec
add
pop
loope
rclb
xor
out
and
xor
sbb
mov
xor
push
aam
xorl
push
push
fnsave
outsl
enter
pop
shrb
pop
inc
outsb
pop
sub
xlat
pop
dec
pushl
andb
adc
test
push
idivb
xor
fistpll
cld
fnstsw
inc
jne
fwait
push
out
pop
aas
push
pop
int3
fmulp
ret
insl
fiadds
clc
insl
dec
call
bound
dec
mov
ljmp
pop
jecxz
lock
out
xchg
push
imull
and
insb
add
mov
mov
fs
fbld
and
cltd
movsb
sub
sbb
mov
fwait
lods
insb
aaa
cmp
jg
dec
iret
imul
or
cmpsl
movsl
dec
sbb
daa
ljmp
pop
mov
je
push
add
push
jmp
sbb
out
xor
stos
insl
push
inc
and
rcr
inc
outsb
es
adc
les
add
ud0
in
jns
mov
sub
cmp
cmp
mov
push
imull
test
rcrl
cmp
outsb
lret
pop
arpl
std
inc
dec
jns
in
pop
pop
pop
lods
das
movsl
subl
cmpsb
jg
sbb
imul
popf
push
mov
inc
pushl
mov
aam
ret
xchg
idivb
pop
mov
push
insb
bound
in
mov
xor
and
divb
xor
and
adc
sti
in
inc
insb
mov
sbb
js
movsl
mov
add
out
adc
mov
enter
pop
dec
movsl
gs
movsl
inc
pop
sarb
and
pop
jns
lock
mov
or
lahf
inc
std
xlat
std
mov
into
dec
and
jnp
iret
and
outsb
adc
mov
jnp
dec
sbb
sahf
icebp
mov
daa
push
dec
fmul
fnstsw
inc
clc
and
test
loopne
add
pusha
sti
das
mov
mov
mov
pop
out
roll
test
stos
lea
notb
xor
sbb
sarb
loopne
fcmovnb
mov
fucomip
xchg
jne
pop
or
jae
mov
push
mov
aas
mov
rol
dec
cmpsb
inc
jl
push
mov
jns
sbb
pop
push
adc
out
call
xchg
push
jbe
pushf
xor
adc
icebp
pop
ds
jp
subl
push
pop
and
popa
mov
inc
pushf
push
push
imul
aad
repz
mov
pop
in
push
sub
push
je
aam
pop
pop
jbe
push
stc
ret
pop
ret
adc
loop
add
adc
pop
adc
repz
clc
loope
mov
mov
ficomps
lock
mov
mov
bound
fcoms
loope
outsl
xor
fneni(8087
adc
add
repnz
jo
add
sbb
xor
loopne
fstpl
nop
movsl
test
cmpsb
mov
pop
mov
lock
icebp
dec
sbb
xchg
push
xchg
cmc
and
push
adc
mov
mov
lock
aas
push
or
add
push
push
mov
xchg
lods
in
lea
inc
aas
adc
outsb
cs
leave
sbb
adc
aaa
cli
push
jne
loopne
cwtl
popf
dec
shll
push
scas
adc
test
lock
push
addr16
cwtl
jmp
rolb
pop
pop
movsb
pop
aad
out
clc
pop
lods
dec
ss
stc
xchg
xor
mov
dec
and
mov
idivb
jne
or
popl
mov
out
mov
scas
mov
mov
in
pop
xor
mov
lahf
jp
std
outsb
insl
int
and
rcrb
ret
or
adc
add
xchg
rcrl
js
in
imul
mov
rcl
ror
repz
xorl
pop
cld
cwtl
rorb
xlat
stc
mov
jge
aaa
jno
outsb
push
cmp
lea
sub
dec
and
adc
in
nop
fsubl
jno
fucomp
pop
dec
into
sbb
xchg
cmpsl
movsl
fdivrl
pop
push
aam
pop
cmp
jmp
insb
das
inc
mov
pop
call
xchg
inc
aad
dec
push
sub
les
stos
cmc
or
pop
and
pop
cmp
daa
enter
repnz
cmc
fistpll
std
ss
xlat
shrb
cli
clc
ja
pushaw
test
push
lahf
jge
leave
sbb
in
inc
aam
in
sti
aaa
add
mov
subb
sub
dec
mov
cmp
jbe
iret
mov
push
pop
test
ljmp
cmp
stos
push
inc
imul
jae
nopl
sbb
pop
into
dec
sub
inc
dec
lea
push
ss
out
inc
insl
rcrb
xchg
test
icebp
adc
out
inc
cld
imul
or
push
addr16
popf
sub
push
hlt
orl
add
cmpsl
mov
dec
jnp
add
jne
mov
decl
jl
lds
jno
adc
inc
mov
and
imul
ficompl
adcl
inc
orl
cmp
xchg
mov
gs
iret
and
xor
dec
pop
inc
gs
push
push
push
sbb
repnz
dec
lcall
cmp
xor
mov
movsb
jmp
xor
inc
mov
stc
fisttpl
or
add
loope
push
adc
add
pop
xchg
mov
xchg
lods
mov
call
lea
or
xchg
in
movd
int3
cmpsb
xchg
in
addr16
cmp
enter
cmpsb
push
xchg
outsb
mov
pop
add
pop
loopne
mov
rcr
mov
jmp
cs
dec
inc
js
dec
add
add
sub
out
lret
mov
and
push
xor
icebp
add
or
lods
fiadds
into
loop
push
mov
pop
das
adc
jecxz
inc
repz
rorl
sbb
es
enter
fsubrs
lds
pushf
out
mov
dec
mov
and
int3
mov
int
mov
in
les
xchg
mov
xor
cld
push
sub
jo
cwtl
sahf
lret
xor
call
mov
lock
lret
mov
sti
in
add
or
movsl
inc
cmp
push
or
sub
fisttps
sbb
insb
push
jae
sbb
jb
es
pop
subb
jg
stos
pop
outsl
je
stc
aam
dec
pushf
push
cmp
insl
push
std
jle
sbb
push
xor
pop
stc
push
cmpb
mov
mov
ja
or
mov
ret
cmp
inc
insl
sub
inc
xorl
cmp
mov
das
scas
push
jb
jb
ss
ret
adc
jg
jne
sub
inc
test
cmpl
lret
and
rclb
loopne
push
sub
sbb
ja
adc
jle
fcmove
xchg
mov
stos
movsl
adcl
push
hlt
stos
push
jg
pusha
lcall
cwtl
repnz
or
leave
sub
push
repnz
loope
cmp
push
sarl
xorb
mov
cmpsl
jge
lock
sbb
sub
push
fldt
or
movsb
mov
leave
mov
test
cmp
mov
push
fiaddl
stos
jg
test
jecxz
fldcw
mov
sub
hlt
in
rorl
popf
xchg
aam
addr16
repz
sub
idiv
fcmovne
decl
stos
jbe
pop
mov
mov
loop
fwait
ljmp
loopne
or
cmpb
add
cmp
jmp
inc
popf
loop
sti
sub
xchg
or
int3
pop
mov
js
shlb
sub
bound
cmp
in
push
imulb
jne
or
scas
add
loope
xor
xor
or
lcall
xlat
push
cwtl
or
std
stos
out
mov
aam
out
push
and
xchg
add
inc
call
inc
push
cli
xchg
rcrb
je
lahf
inc
scas
add
mov
jnp
push
fwait
cwtl
jnp
fsubl
ja
adc
and
mov
sbb
andl
adcb
lock
pusha
xor
lock
push
scas
ja
sbb
mov
or
or
cmp
idivb
mov
sub
bound
mov
inc
cs
lods
dec
pop
insl
cmc
pushw
cmc
cmpsl
in
cmp
pusha
xchg
adc
sti
cmp
data16
sarl
xchg
jne
clc
cmp
sub
push
sbb
xchg
sahf
jle
ficoms
hlt
lock
scas
mov
dec
dec
fisubrl
push
cmp
adc
cmp
iret
add
ljmp
push
movsl
jle
sar
out
test
push
fsubrs
push
fsubl
xlat
repnz
cwtl
push
in
mov
pop
push
cmp
xchg
push
cld
sbb
jns
into
push
xchg
inc
mov
test
push
pop
xor
jbe
jge
cwtl
rorl
jb
push
xor
pop
xchg
pop
fwait
cmc
push
cmp
and
int
mov
push
jb
inc
rorb
mov
fsubp
sub
cld
mov
imul
fdivrs
push
sahf
sbb
fsubrp
subb
test
sub
jne
cmp
cli
frstor
into
out
mov
dec
in
dec
lcall
js
adc
cmp
xor
push
loop
xor
ret
and
inc
inc
xchg
jle
push
dec
into
lret
icebp
add
xchg
outsl
mov
push
addb
add
je
mov
popf
xchg
popl
ds
loop
in
pop
push
lcall
cli
arpl
add
aaa
xor
mov
inc
inc
aam
into
mov
push
jo
dec
push
jp
push
jg
shll
or
add
pop
mov
push
into
or
and
lret
imul
daa
lahf
loope
sub
push
imul
mov
int
cltd
adc
adcb
les
mov
scas
add
inc
and
pushl
cmpsb
mov
jb
sub
lcall
outsl
scas
add
aam
or
add
cmc
fcoms
arpl
xchg
shr
cmp
sbb
inc
ret
jp
orb
inc
or
adc
lds
mov
fs
cmp
fbld
popf
cltd
cmp
cmp
call
jbe
lret
sahf
iret
xchg
sub
cmpsl
inc
fmuls
movsb
push
xorb
xor
loopne
jp
out
mov
outsb
dec
sub
push
dec
sub
sub
ret
jb
mov
daa
and
push
test
xorb
pop
pop
cld
inc
dec
ss
mov
mov
test
lret
mov
aas
jecxz
arpl
mov
mov
lret
adc
sarb
add
pop
pushf
bound
inc
insl
cmp
pcmpeqb
adc
stc
test
xlat
add
test
pop
orb
enter
fldl
incl
jle
mov
xchg
mov
mov
sarl
fcmove
mov
pop
lret
push
nop
xchg
shrb
gs
jg
daa
jbe
adc
lds
je
ret
mov
push
std
divb
mov
jns
dec
mov
jecxz
imulb
aad
push
sbb
shrb
in
ja
mov
push
push
test
xchg
lea
push
rcrb
loopne
add
or
add
daa
daa
icebp
adcl
cltd
push
sub
sbb
mov
xchg
mov
xor
daa
add
fmulp
xor
or
pop
inc
fnstenv
movb
andl
push
je
scas
int3
fwait
jg
or
fwait
stos
adc
push
pop
mov
mulb
cli
mov
imul
lds
jb
stos
mov
cmpsl
push
insl
imul
inc
sbb
ljmp
loop
xchg
cmpb
fcmovu
adc
mov
mov
aas
push
inc
mov
mov
push
aas
fbld
outsl
ss
pop
dec
je
iret
cltd
or
das
jno
icebp
mov
mov
mov
push
out
dec
push
leave
jb
test
xor
je
test
dec
inc
ror
xchg
stos
imul
push
test
sbb
cmc
sarl
arpl
push
pusha
xchg
sbb
mov
push
inc
jecxz
pop
mov
xchg
xchg
xchg
dec
cmp
outsb
addl
repz
adc
lods
xor
dec
scas
pushl
mov
pop
push
xor
push
insl
mov
cmp
inc
xchg
or
rcrl
mov
inc
or
push
leave
lds
call
and
push
int3
cmp
cmp
sbb
mov
enter
les
fisttpl
mov
jno
fstl
sub
jmp
js
jne
sub
lcall
cltd
mov
adc
shll
adc
loope
jp
pop
sub
inc
orl
mov
outsl
pusha
cli
imul
fldcw
lahf
jmp
jne
imul
or
daa
sahf
add
dec
aaa
movsl
outsl
jecxz
or
inc
js
xor
fisubrs
jbe
jnp
out
jl
or
subl
rcll
inc
scas
popa
packuswb
rolb
xorl
ja
fiaddl
imull
jae
gs
mov
popa
cmp
push
stos
imul
push
xor
jl
adc
adc
clc
push
mov
inc
icebp
jno
lcall
in
xchg
addr16
fisttpll
mov
and
pop
xor
cmp
xor
dec
out
mov
fimull
mov
pop
xlat
mov
push
add
adc
mov
and
jbe
mov
int3
mov
lods
mull
out
mov
mov
dec
xor
xor
or
pop
fs
push
sti
fstpt
and
add
in
and
adc
sahf
xchg
leave
sub
inc
add
add
es
inc
push
lahf
movsb
push
push
aas
cwtl
rcll
adc
xor
shr
jg
sahf
inc
add
jo
jno
cmp
pop
mov
dec
sub
int3
fildll
cld
sbb
mov
push
ret
and
jae
aaa
mov
mov
push
dec
ljmp
xor
or
outsb
call
mov
repnz
inc
sahf
add
mov
enter
fldl
dec
xchg
popa
or
lds
stos
into
iret
psllq
lret
ja
roll
out
jo
das
loopne
adc
mov
loope
jns
jb
xchg
fnstcw
sti
and
jge
loope
push
into
or
push
mov
lret
ret
es
pop
xchg
addr16
pushl
xor
push
das
es
dec
das
push
pop
cmp
or
or
repnz
inc
ret
repnz
out
jmp
lcall
push
int3
push
xor
ret
cli
cmp
xor
popf
outsb
lahf
mov
dec
jns
je
sub
dec
dec
jmp
cs
in
xchg
cmp
ds
sub
aam
mov
lcall
inc
imul
mov
addr16
ds
pop
imulb
enter
mov
xchg
mov
rcl
repz
push
and
and
leave
push
xor
test
mov
mov
repnz
stc
pop
jo
jl
out
lahf
jp
lahf
push
out
inc
push
push
popf
fwait
mov
imul
xor
sbb
sbb
mov
push
pusha
lds
sbb
dec
bound
xchg
jo
add
inc
daa
adc
mov
out
push
sub
les
ret
int3
fstpl
push
loope
dec
bound
ret
sbb
add
inc
jp
dec
fisttps
test
mov
ret
ror
cmp
jno
sbb
xlat
ret
sbb
js
adc
mov
sbb
in
add
xor
stos
adcb
sbb
stos
mov
add
mov
dec
mov
cmc
gs
fadds
imul
jle
xchg
inc
mov
mov
aaa
pop
add
mov
pop
roll
jo
negl
push
out
out
sub
pusha
ss
loop
xchg
out
mov
inc
inc
and
xchg
sbb
cmc
xlat
sbb
cwtl
mov
pop
pop
std
and
mov
loope
sbb
stos
movsb
in
scas
adc
orb
dec
les
hlt
loopne
adc
xchg
inc
cmc
xchg
shlb
sub
fidivl
or
xor
test
fildll
xlat
jg
lea
aas
jmp
xor
in
jnp
push
push
std
sarb
scas
movsl
jp
cmpl
cmpsb
add
icebp
fsubp
daa
xchg
sub
dec
add
or
mov
cltd
imul
and
mov
mov
js
push
dec
stos
sbb
push
rcll
pop
jnp
mov
mov
inc
push
daa
aas
sbb
mov
sub
repnz
xchg
adc
test
ljmp
mov
jnp
inc
inc
out
fwait
sub
subb
movsb
int
loop
clc
test
cmp
cmc
shl
ret
shrb
pmaxsw
push
mov
insl
outsl
xor
pop
jns
enter
mov
loop
aaa
inc
in
sub
jmp
pushl
jmp
inc
mov
cmp
adc
stc
or
ficompl
jns
dec
in
clc
xchg
les
divl
popa
fbld
int3
jns
pop
xchg
ret
mov
cmpsb
cwtl
inc
in
inc
shlb
insb
fwait
ljmp
in
cmpsl
sub
sbb
in
out
dec
inc
sub
test
movsb
sbb
out
pop
shrl
sub
out
mov
xchg
inc
xchg
ds
imul
push
lods
icebp
or
and
inc
pushf
js
dec
ljmp
ret
adc
cltd
enter
pop
in
and
rclb
push
aam
pusha
sbb
out
cltd
cmp
sbb
or
gs
jecxz
pop
sbb
repz
iret
or
sti
shlb
bnd
ja
jg
pushf
dec
lea
push
xor
dec
push
mov
lea
sbb
mov
xor
pushf
jl
je
mov
std
adc
sbb
and
mov
adc
ss
call
ljmp
std
and
popf
in
inc
arpl
sbb
mov
xchg
add
jb
jo
mov
in
repz
loop
cmpsl
mov
and
out
pop
sub
enter
add
fs
repnz
bswap
ds
xor
xchg
dec
fwait
jl
aad
sbb
mov
xlat
mov
mov
add
fimuls
lea
cs
mov
mov
lock
mov
cmp
pop
iret
shrl
popa
loopne
ret
das
stc
or
inc
pushf
outsb
ret
adcb
cmp
fiaddl
fs
inc
ret
add
fdivrs
fidivs
cmp
cmp
jo
imulb
hlt
inc
jge
clc
cmc
fisttpll
jmp
lahf
sub
jecxz
stos
cld
pop
cmp
mov
jno
add
xor
es
mov
jb
mov
test
icebp
inc
dec
adc
jp
mov
loope
psubb
aaa
test
mov
pop
clc
loope
push
pop
adcl
pop
es
test
xor
sub
cmpsw
inc
popf
enter
adc
std
in
jo
ljmp
sbb
dec
mov
dec
mov
lret
xor
mov
jne
mov
iret
into
mov
mov
in
dec
jmp
sbb
dec
int
xchg
lea
push
in
add
adc
ds
outsl
int3
aaa
outsb
pop
pop
mov
fcomps
leave
cmp
out
xchg
jp
mov
pop
pop
xchg
push
std
xchg
ret
pop
aad
std
shrl
push
dec
cwtl
pushf
push
push
mov
mov
mov
pop
adc
pop
lcall
scas
je
push
ss
add
dec
fdivp
jo
enter
bound
lea
rclb
sbb
loop
push
inc
push
inc
xchg
enter
roll
repz
bound
jo
xchg
jmp
mov
mov
mov
mov
lcall
push
cmp
add
push
pop
enter
and
push
adc
shll
stos
adc
sahf
shr
stc
or
sub
jae
adc
leave
test
add
cmp
push
push
push
mov
push
fstl
dec
jl
mov
xor
and
stos
mov
mov
mov
pop
add
mov
push
cld
adc
jecxz
ja
jb
ja
inc
push
fwait
jecxz
cmp
hlt
sbb
cmp
cmc
es
xor
pop
sarb
loope
into
add
stos
dec
mov
jno
or
mov
mov
xor
xor
loopne
or
mov
das
pop
imul
mov
repnz
inc
jbe
mov
movsl
test
mov
push
movsl
jnp
clc
loopne
mov
orl
and
or
aaa
push
call
js
cmc
outsb
data16
cli
mov
or
repnz
fdivs
mov
mov
fwait
xchg
mov
mov
mov
pop
jecxz
lds
jnp
sahf
dec
lret
jnp
fisttps
loope
int3
jecxz
inc
xor
mov
insb
adc
int3
jne
mov
xor
and
lock
andl
lds
sbb
mov
lret
dec
in
adc
and
std
es
imul
lock
push
outsb
inc
shrl
xchg
jg
mov
mov
add
add
add
shlb
pop
sahf
lahf
jb
fiaddl
pop
mov
out
mov
aam
lock
push
fildl
mov
push
scas
or
hlt
mov
xor
sub
jo
lret
pop
cmp
pushf
mov
xor
xchg
mov
das
and
sbb
pop
add
loopne
lds
jg
push
les
aad
xchg
push
sbbb
nop
or
daa
mov
xor
jb
hlt
nop
leave
push
add
and
ret
xor
pop
jp
int
jmp
add
jo
out
jp
frstor
cmp
aaa
in
fwait
push
sti
popl
mov
ljmp
imul
jg
adc
mov
jns
in
jge
mov
add
adc
mov
and
cld
push
xchg
sub
xor
nop
pop
pop
jo
sbb
les
jmp
mov
mov
cmp
adc
mov
cmp
xchg
jno
inc
cwtl
and
rcll
in
repz
test
rcr
mov
das
dec
inc
rorb
mov
cltd
dec
push
addb
bound
fst
in
pop
cmpsb
mov
jo
inc
cmp
das
xlat
inc
sar
inc
push
sub
fsubs
rolb
rcl
mov
jle
sub
or
lcall
mov
cmp
shr
cmpsb
sti
mov
stos
lock
mov
jp
pop
xchg
insl
jl
and
notb
cwtl
jbe
int3
aas
inc
mov
xlat
dec
mov
sti
and
inc
and
add
cli
jb
inc
loopne
imul
push
sarb
testb
fsubs
mov
repnz
jbe
enter
sub
fstpt
mov
popf
sub
arpl
mov
incb
push
lahf
scas
mull
mov
lret
mov
mov
add
cmp
clc
add
mov
popa
push
rclb
xor
jae
mov
outsb
push
sub
insb
rcrb
fstpl
sarl
inc
ss
mov
fs
orb
push
sbb
dec
lock
inc
mov
and
adc
mov
dec
push
sub
cwtl
push
mov
or
push
sarb
push
dec
push
sbb
pop
pusha
mov
cmp
aaa
test
ljmp
pop
push
jbe
shlb
insl
mov
inc
push
js
jle
clc
pusha
rcrl
pop
adc
fidivrl
push
or
stos
xchg
sbb
stc
jns
and
inc
shufps
inc
stos
or
mov
sbb
pop
dec
cwtl
pop
cmp
mov
pop
aaa
sbb
sbb
lcall
ds
xchg
mov
test
imul
mov
subb
inc
sub
loope
hlt
inc
in
sbb
mov
popa
add
inc
pop
pop
sbb
fsubr
ja
mov
popa
mov
or
shrb
addb
inc
add
pop
xchg
adc
inc
cli
mov
enter
sbb
and
insb
into
popf
lea
out
jp
dec
push
xor
rorl
xchg
sti
inc
mov
ret
ret
push
test
push
cmpsl
int3
repz
xor
pusha
dec
test
int
in
loope
into
mov
push
cmpsl
movsl
test
test
mov
cmp
or
dec
mov
xor
icebp
outsb
sbb
in
xchg
pushf
es
xor
push
add
mov
jnp
xchg
pop
fimull
and
and
loope
lcall
push
xchg
lock
adc
cmpsl
jg
inc
stos
and
and
rcrb
lods
dec
push
scas
leave
xchg
xchg
aas
mov
pop
repz
push
mov
cmp
adc
cwtl
jae
dec
mov
xor
and
dec
mov
cmpsl
jge
mov
xchg
cmpl
mov
xor
inc
test
push
push
into
aam
std
xchg
outsl
movsb
and
mov
pop
adcl
xchg
adc
push
or
pop
xor
arpl
jns
sbb
aas
scas
sbb
ds
out
imul
leave
push
pop
nop
push
fsubrp
jno
add
daa
aad
insb
jge
movsb
aam
pop
sarl
sub
movsb
dec
pop
push
in
xchg
mov
sbb
add
fnstcw
mov
aad
and
mov
or
les
movsl
aaa
fldcw
mov
sbb
cmp
and
adc
sbb
inc
or
cwtl
scas
repnz
insb
stc
mov
pop
es
add
and
bound
add
loopne
push
mov
pop
call
testl
adc
mov
inc
push
sub
cmp
ret
push
sbb
ja
adcb
ljmp
pop
mov
xor
arpl
xor
mov
pop
pop
mov
dec
sub
nop
mov
xchg
push
or
into
cmp
mov
jbe
aaa
test
sbb
repnz
sub
rolb
jle
adc
fs
xchg
add
cmpsl
mov
inc
iret
mov
movsl
in
lods
sub
aad
inc
insb
mov
ficompl
xor
mov
data16
push
xlat
and
pop
and
jmp
fs
or
in
repz
mov
call
xchg
int3
push
shll
fcmovne
jp
cmp
add
push
and
mov
test
stc
jb
ds
mov
loop
sbb
sub
repnz
sbb
push
or
jmp
imul
dec
scas
and
aad
pusha
or
jo
pop
dec
mov
fsts
jno
mov
lret
jg
pop
mov
pop
out
stc
and
pop
mov
hlt
jmp
test
jno
js
jg
sbb
lret
out
push
dec
ljmp
data16
dec
stos
fwait
aam
cld
and
fsubrp
fwait
shll
push
repz
sar
iret
xchg
xchg
mov
xor
jnp
mov
repnz
movsl
mov
push
and
jecxz
je
jae
rcll
xor
mov
loop
push
and
push
notb
dec
fwait
adc
mov
mov
bound
mov
add
int
sbb
scas
mov
sahf
add
les
fisttps
push
add
jl
xor
lret
sbb
jno
mov
jno
hlt
clc
add
jecxz
push
cltd
fisubl
push
push
dec
ficompl
lcall
mov
push
sbb
adc
test
negb
inc
adc
in
loop
pop
pop
aas
icebp
stc
mov
inc
and
dec
push
or
xlat
sub
pop
inc
lods
mov
jbe
dec
sub
lods
loop
call
out
cmp
aas
stc
adc
mov
in
inc
mov
shlb
mov
push
dec
test
add
sub
xchg
push
xor
add
es
xchg
jmp
jg
adc
pop
jl
faddl
scas
repnz
pop
outsb
aam
sar
into
call
stos
test
push
and
fwait
pinsrw
adc
sahf
cmovo
mov
mov
icebp
test
les
mov
pop
sbb
pop
and
xor
sar
lods
xchg
fsubl
mov
mov
push
loope
sub
mov
push
cmp
addr16
or
outsb
push
push
mov
ja
sub
call
es
or
push
xor
ss
pusha
inc
jne
lea
adc
cmp
rclb
mov
fwait
shlb
dec
ficomps
adc
clc
mov
xor
jnp
xchg
ds
lea
imul
pusha
notb
pop
fcoms
fidivl
ljmp
adc
cmpsb
clc
inc
jb
dec
inc
das
sbb
adc
dec
cmpsl
ret
and
adc
outsb
xchg
stos
lret
iret
stos
adc
xchg
je
dec
push
adc
xor
dec
inc
iret
mov
mull
or
dec
lret
inc
sbb
lret
push
stos
lea
mov
cmp
pop
xlat
and
cmpsl
icebp
mov
out
stos
mov
sarb
jl
dec
ds
add
and
sub
cmp
dec
pop
scas
scas
clc
mov
sarb
imul
pop
add
inc
xor
scas
push
pop
rclb
mulps
pop
insl
out
pusha
movsb
push
add
or
pusha
stos
test
insb
rep
test
test
je
shr
rclb
add
jmp
pop
add
push
push
and
jno
adc
cmp
pop
arpl
gs
shll
jecxz
lret
mov
pop
rorb
insl
add
mov
daa
fimuls
inc
ss
into
not
aad
out
adc
mov
movb
js
sub
pop
ss
xchg
in
mov
sub
icebp
pushf
push
jo
mov
lods
cmp
cwtl
addr16
int
arpl
xchg
test
mov
mov
fidivrl
jne
add
outsb
add
jle
stos
xchg
popf
jbe
mov
cmpsl
dec
adc
leave
push
aad
cmc
dec
lcall
cli
push
and
int
cltd
fwait
push
in
cmp
jmp
loop
jl
fs
push
lret
daa
adc
out
and
cmpsb
inc
add
pop
shrl
cmp
rcrb
ret
cli
mov
xchg
dec
adc
sub
fldt
call
orl
shll
or
adc
cld
insb
nop
or
xor
shll
push
sub
gs
cmp
dec
mov
jns
pop
into
popf
lret
rorl
mov
xchg
mov
je
ja
imul
xchg
int3
cmp
mov
sbb
mov
push
repnz
sub
jp
or
and
in
pusha
in
sbb
adc
push
movsb
mov
pop
jmp
shll
lods
dec
fistpll
pavgb
or
fcoml
in
dec
sbb
rcll
inc
repnz
in
dec
lea
in
and
jge
mov
mov
ss
daa
or
xorb
in
arpl
pusha
xor
sbb
sub
adc
push
nop
or
jo
cmp
xrelease
pushf
xlat
push
sarb
dec
std
imul
mov
cmp
mov
cwtl
push
lahf
es
fcomps
add
popa
out
pop
add
faddl
scas
cmp
and
pminub
insb
and
mov
pop
xchg
loopne
and
sbb
cmpsb
movsb
cmp
dec
sub
aaa
dec
out
or
adc
loop
out
xor
jle
sbb
mov
jle
test
or
push
inc
add
sub
stos
fwait
in
repnz
in
test
xchg
push
ficompl
lea
mull
testl
push
xor
dec
mov
push
out
enter
xchg
in
mov
cmpsb
cmp
sbb
push
sub
testl
in
pop
fcoml
and
or
mov
push
push
xor
sbb
subb
adc
ret
dec
add
fprem
cmp
ljmp
mov
imul
into
stos
movsl
popf
sbb
xor
pusha
add
mov
dec
cmpsl
pop
shrl
sbb
dec
lcall
mov
and
bound
add
pop
jns
sub
insb
adcl
dec
mov
mov
xor
sub
loop
jg
js
cli
push
neg
jb
mov
into
xorb
adc
sbb
test
cmp
in
lds
jl
lea
aas
arpl
mov
mov
pushf
in
xor
mov
movsb
in
push
lea
or
sbb
xchg
es
mov
mov
scas
push
add
add
outsb
int
or
lea
fstpl
dec
and
cmpsl
test
cmp
add
orl
cmp
xchg
test
repz
or
ljmp
out
xlat
push
jb
loope
lcall
jo
cmp
inc
mov
lods
cwtl
movsl
sarb
cmp
sahf
push
sub
mov
cmp
or
int
sub
inc
fstpl
aaa
fisubrl
stos
add
aas
sbb
jecxz
sbb
pop
fmuls
mov
mov
dec
stos
pusha
gs
push
mov
lds
int
and
dec
jmp
sbb
push
pop
mov
mov
orl
pop
nop
xor
movsb
pop
popa
jns
enter
inc
and
add
mov
adc
daa
fldl
shrb
xchg
das
test
ret
push
adc
imul
cmpsl
or
xchg
jno
jecxz
pop
mov
add
add
lods
outsl
push
rcl
roll
cmp
pushf
push
out
test
or
rclb
mov
or
xchg
popa
loopne
mov
aad
std
cmc
push
andb
ror
add
jl
pop
or
mov
mov
scas
pop
jb
decb
into
mov
out
stos
fcomi
repz
xor
clc
or
push
negl
sub
pop
test
xor
imul
mov
in
mov
xchg
add
and
rcrb
xchg
mov
es
pop
adc
inc
jbe
push
cwtl
roll
rol
imul
mov
scas
mov
loop
in
cltd
orl
out
mov
jle
cmp
andb
pushf
bound
pop
xor
adc
leave
rcl
ret
clc
or
dec
arpl
inc
sbb
sbb
cmp
sub
xchg
pop
int3
jns
dec
add
sbb
dec
test
outsb
es
or
popf
mov
inc
or
or
push
aam
sub
mov
enter
jg
adc
and
push
sub
jb
mov
cmp
daa
pop
lods
sub
xchg
icebp
flds
std
cld
push
dec
fcoml
sbb
lret
xor
or
adc
push
and
aas
cmp
inc
fwait
pop
ljmp
mov
xlat
je
xchg
mov
jmp
xor
test
dec
insl
push
mov
lods
xchg
std
scas
xchg
fcoms
bound
test
jnp
insb
dec
mov
dec
xor
inc
cmp
inc
rep
popf
mov
int
fisubrl
cmp
jle
ret
jg
jl
pop
stos
cmpsl
or
xor
cli
lds
jb
std
loopne
inc
ds
and
test
cmp
ret
lock
bound
xchg
adc
arpl
ret
addr16
movsl
adc
cwtl
roll
arpl
push
add
jg
inc
push
inc
sub
shll
fs
imul
jg
mov
sub
test
mov
jl
lods
push
repz
mov
xor
ljmp
sbb
mov
push
mov
enter
mov
mov
adc
inc
cmp
xor
add
jbe
dec
or
sub
pop
ja
lods
or
sarb
jno
aad
jmp
arpl
cmp
xchg
inc
test
mov
orl
daa
bound
pushf
jmp
fimull
add
dec
insl
das
test
push
or
daa
sbb
mov
mov
jo
jae
movsb
and
jge
mov
jno
js
int3
js
in
in
jns
or
push
lret
add
mov
cmp
cmp
stc
adcl
jge
pop
lods
andl
mov
fcoms
imul
call
ja
dec
out
rorb
test
ror
dec
jnp
test
inc
test
insb
mov
mov
sub
lahf
pop
test
dec
orb
pop
mov
add
cmpsb
out
cmp
shr
add
arpl
adc
clc
cmp
xor
push
or
sub
inc
mov
cmpsb
sbb
ds
scas
loopne
push
dec
sub
cmp
js
aas
dec
jno
popa
jge
adc
jmp
arpl
int3
cmp
ds
jbe
stos
ljmp
shlb
pop
test
leave
push
outsb
cltd
mov
pop
test
cmpsl
and
jne
lods
enter
jl
lahf
jle
sub
lcall
cmp
flds
popf
stc
cmp
inc
dec
mov
push
ja
movsl
movsl
repnz
jp
fidivs
sub
jbe
and
lods
insl
cmp
and
pushf
lret
out
sbb
pop
aam
sub
lds
jmp
add
push
adc
sti
mov
aam
aaa
sbb
bound
cltd
jl
mulb
test
insl
imul
cwtl
mov
push
fsin
aad
push
lods
cmp
push
xchg
call
in
aaa
xchg
sbb
mov
sub
decl
leave
cs
jbe
int
push
popa
dec
subb
xor
shlb
or
sbb
std
inc
insb
roll
test
cmpl
push
xor
or
mov
xlat
iret
out
cmc
ss
outsb
xchg
mov
mov
push
sbb
lods
fidivrs
adc
loope
rorl
cmp
filds
cli
sbb
add
mov
in
ds
inc
ja
loop
lret
bnd
adc
push
mov
aad
aas
push
push
aam
sub
js
fs
ret
lods
xor
inc
cwtl
sbb
mov
call
mov
push
iret
bound
or
push
ret
dec
pop
fimull
push
add
repz
mov
jae
push
imul
sub
xchg
lea
in
pop
sti
sbb
sub
sahf
inc
mov
pop
dec
cmp
out
aad
mov
repz
test
and
jp
or
or
out
push
pop
pushf
scas
jmp
shl
andb
in
push
scas
sub
cmpsl
jno
cmp
pop
js
jne
inc
jmp
fdivl
icebp
adc
and
sbb
mov
fwait
pop
ljmp
pop
jnp
aad
popa
pop
mov
mov
sbbb
jge
stos
xor
dec
imul
mov
out
xor
fwait
dec
inc
iret
lcall
mov
or
leave
into
loope
pop
xchg
insl
xlat
popf
aad
pop
push
mov
ficoms
adc
mov
pop
andb
fimull
movsl
int3
xor
mov
add
fisubrs
adc
fidivrs
idivl
pop
mov
sub
and
mov
shlb
xor
mov
ficomps
shlb
pop
pushf
adc
lods
ljmp
push
cld
mov
mov
scas
nop
ffree
xor
mov
jne
and
pop
int3
jnp
mov
ret
stos
inc
fcomps
add
and
mov
test
rcll
es
mov
cmp
bound
push
push
pop
cmp
leave
xor
push
loop
mov
jmp
mov
sti
xchg
aam
push
pop
loop
push
xchg
loopne
je
or
test
xlat
repnz
es
xor
rorb
inc
pop
push
cld
out
shlb
std
scas
jge
mov
mov
inc
mov
arpl
cmc
cwtl
out
adc
mov
cwtl
leave
cli
mov
fs
stos
lods
jns
jp
insb
frndint
out
rcrl
out
cmp
xor
mov
into
xchg
lret
push
pop
cmp
mov
mov
in
ljmp
cs
jo
bound
scas
sub
outsl
lods
daa
cmp
mov
js
cmp
inc
notl
dec
sub
mov
cli
cmpsl
xchg
and
cmpsl
sbb
jle
test
lea
push
mov
fnstcw
dec
push
icebp
test
mov
jle
push
into
fisubs
xor
mov
push
xchg
adc
cmp
mov
insl
sub
xchg
mov
xchg
hlt
jns,pn
imul
mov
stos
jp
pop
inc
mov
aad
sub
ucomiss
xchg
ficoms
inc
and
jge
sub
dec
sarb
mov
sbb
ss
push
cmp
push
mov
push
dec
ret
lahf
fadds
push
nop
orb
outsl
and
mov
rorl
or
cmpsl
adc
into
xchg
in
add
mov
test
mov
or
cmp
sbb
jecxz
scas
mov
add
cmp
adc
inc
jp
adc
xchg
dec
test
insl
int3
fwait
sub
lds
push
insl
or
ljmp
push
xor
lds
mov
sub
out
pop
enter
push
or
insl
add
test
cs
stos
push
lea
loopne
xor
in
push
xor
test
or
fwait
jp
mov
pushf
aam
sub
cltd
mov
push
xor
xchg
xchg
sub
xchg
sbb
xchg
push
cwtl
fnsetpm(287
movsl
jmp
das
mulb
gs
sub
imul
test
jo
leave
add
pop
repz
imul
sbb
inc
xchg
bound
rcl
fstpl
es
out
adc
sahf
jns
xchg
xlat
int3
or
xchg
bound
jb
sbb
or
sbb
push
lods
das
aaa
lods
lods
xchg
and
std
or
aas
sbb
cmc
hlt
sbb
xor
orl
push
jecxz
jns
movsl
shl
cmpsl
mov
inc
or
imul
push
ret
leave
test
nop
push
cmp
ljmp
pop
inc
mov
jmp
test
inc
movsl
ja
and
inc
lret
pop
xchg
add
out
jae
int3
lds
jl
or
sub
inc
fmul
and
mov
inc
std
arpl
xor
mov
cmp
jle
shlb
icebp
dec
sbb
and
sbb
inc
mov
inc
daa
lret
mov
jno
jno
mov
push
in
dec
repz
xchg
sbb
popa
inc
and
mov
shlb
insl
test
int3
mov
loop,pt
pop
dec
or
pop
fidivs
xchg
add
outsl
mov
movsb
and
arpl
cmc
sub
mov
pop
ret
cmp
xchg
call
sub
es
int3
or
aam
jne
addr16
dec
lods
xchg
setbe
mov
out
icebp
rcrb
into
add
inc
and
mov
mov
mov
mov
jecxz
outsl
cltd
lcall
daa
pop
pop
inc
mov
outsl
stos
pop
inc
cmpsl
mov
push
filds
sbb
add
jae
gs
mov
pop
ret
fwait
nop
fwait
addr16
iret
add
lea
jo
decl
icebp
xor
sub
ficompl
cmp
jnp
push
lret
in
pop
sub
ss
dec
stos
dec
inc
inc
dec
mul
lret
push
cmc
push
insb
repz
fnsave
pushf
cld
cmc
pop
cmc
inc
fiadds
mov
and
and
dec
mov
add
popf
sbb
cltd
ljmp
das
mov
add
xor
insb
loope
je
xchg
leave
add
pop
loope
mov
sub
mov
adc
pop
inc
adc
arpl
loop
and
shlb
push
mov
cmc
and
loopne
mov
sbb
xor
jo
std
mov
iret
sbb
aam
stc
lods
iret
aad
fldenv
or
test
cmp
add
adc
sub
daa
cli
mov
mov
mov
cmp
fsincos
xor
mov
cwtl
adc
push
add
shrl
fnstcw
shrd
mov
adc
fwait
push
lret
fisubs
ds
xchg
mov
imul
mov
aas
add
add
xchg
mov
pop
inc
mov
je
pop
push
sub
mov
daa
pop
fs
rol
lret
lret
mov
sub
inc
jp
cs
inc
mov
cmp
outsl
xchg
mov
or
frstor
mov
or
sbb
xchg
ret
jns
paddsw
jecxz
pop
mov
dec
cmp
pextrw
push
pop
orl
xchg
mov
push
adc
push
cmp
pop
rorl
enter
orb
xor
cmp
push
xchg
mov
pop
mov
mov
add
js
and
dec
jmp
jne
pop
or
out
push
sbb
or
ss
mov
mov
mov
int
test
and
push
pop
mov
cld
sub
mov
or
mov
sbb
sar
pop
dec
adc
and
lahf
fwait
sbb
jl
mov
int3
sub
shlb
lahf
jno
popa
xchg
stc
jmp
negb
push
pop
outsb
cmpsb
lods
sub
mov
fisttpl
popa
pop
mov
cmp
fsubrs
push
sub
ss
nop
dec
testb
scas
cmp
sbb
andl
add
mov
xchg
dec
xor
or
leave
cmpsl
sbb
je
sub
xchg
out
jmp
sbb
xor
jle
push
repnz
sub
das
mov
add
loopne
lcall
or
je
inc
xchg
mov
jecxz
dec
andb
out
mov
xor
jbe
pop
neg
mov
adcb
call
mov
and
jle
sub
cmpsb
arpl
dec
mov
cmpsl
jbe
mov
inc
add
aaa
movsb
in
or
ret
int
xor
xor
xchg
lcall
xor
ret
sub
icebp
enter
and
mov
mov
push
xchg
shl
aad
fcmovnbe
es
lretw
xlat
adc
push
into
cmp
dec
xchg
xor
daa
in
mov
pop
push
fwait
jno
push
int
neg
test
cltd
pop
out
shlb
xor
xchg
clc
dec
movsl
aad
in
test
sub
lret
fists
mov
cmp
mov
sbb
icebp
dec
and
shr
iret
push
cmp
ret
push
and
int
js
mov
cmp
ja
dec
fildl
rclb
pop
les
lcall
std
push
cltd
loopne
rorl
cs
scas
lea
lcall
mov
sub
mov
inc
jnp
aas
push
insb
pop
sbb
jns
les
adc
mov
test
pop
inc
push
cmpsl
and
lret
cltd
mov
icebp
and
mov
sub
jne
pop
sbb
idivl
shl
add
leave
push
sub
dec
outsl
stos
loope
inc
dec
cmp
xor
pop
rcr
sub
push
lret
and
stos
insl
jmp
fsubs
lahf
and
inc
lea
daa
or
arpl
neg
inc
cmp
dec
cli
xchg
add
test
aaa
mov
cmpsl
call
mov
lahf
xchg
sbb
cmp
push
add
stos
cmp
daa
hlt
mov
jnp
dec
pop
add
mov
sbb
inc
add
jg
sub
insb
jo
cmp
mov
ds
jg
inc
dec
dec
in
jmp
cmp
add
aam
outsl
dec
lds
in
call
sub
mov
dec
and
out
subl
sub
push
mov
adc
outsb
sarb
les
lret
mov
jb
jl
outsl
jae
hlt
dec
rcr
sahf
in
shrl
cmp
jecxz
add
mov
enter
mov
pop
lret
loopne
ljmp
push
mov
adc
mov
sar
push
outsb
stos
mov
pop
aad
into
push
inc
sub
sub
enter
cmc
cmp
mov
and
std
xchg
stc
mov
and
push
mov
sahf
sbb
bound
and
mov
ljmp
mov
test
stos
popf
shl
fwait
in
cmp
cmp
sbb
inc
fcom
stos
pop
addr16
aam
idiv
inc
pop
add
clc
pop
ss
out
leave
mov
and
sub
mov
jmp
sahf
mov
out
test
mov
xor
adc
in
call
jb
add
push
inc
mov
pop
lcall
rcrl
sbb
es
push
or
cltd
xchg
imul
cmp
setb
enter
add
sbb
mov
ds
mov
push
arpl
xchg
je
scas
jp
pop
or
jecxz
jnp
xchg
cld
jb
pop
sub
movsl
leave
jmp
sub
xchg
test
push
mov
ss
dec
out
mov
call
push
adc
mov
xor
sbb
xchg
inc
mov
inc
lods
pusha
cmp
les
fstps
add
clc
cmpsb
xchg
adc
loop
mov
mov
mov
mov
jns
lea
jae
inc
test
add
sbbl
add
or
add
xchg
in
mov
rorb
div
pop
call
xchg
mov
xchg
imul
stc
imul
hlt
pop
push
out
pop
dec
xor
cmc
mov
fs
imul
pop
mov
fidivrs
loop
shl
sub
push
mov
mov
iret
data16
jo
aad
jno
fnsave
in
xchg
cmp
jle
push
add
cmp
mulb
xchg
add
jmp
cmpsl
test
jnp
daa
push
mov
jmp
push
inc
push
xchg
shrl
jg
sbb
aad
les
dec
jl
mov
stos
mov
popf
sbb
push
negb
cmp
jg
inc
mov
enter
mov
xchg
jbe
popa
aad
shlb
clc
gs
and
and
scas
mov
mov
or
lds
ljmp
pop
or
out
pop
stc
mov
pop
push
add
lcall
lods
ljmp
out
icebp
or
pop
lret
aad
mov
repnz
movsl
repnz
leave
and
or
cld
mov
inc
push
call
cmp
or
or
fstpt
or
idiv
std
and
mov
xorl
mov
ror
ss
sbb
test
notb
jg
xchg
xchg
xor
mov
mov
cmp
mov
or
pop
stc
cmc
sarl
mov
lret
mov
push
adc
xor
test
xor
or
arpl
imul
sub
cmp
lret
mov
pop
mov
rorb
bound
ljmp
stc
xchg
js
ficompl
js
sbb
xchg
pop
ja
in
xchg
mov
mov
and
cs
sub
pop
pushf
hlt
and
cmpsb
lods
jne
dec
js
mov
lcall
ret
mov
add
jg
jae
insb
fstl
inc
xchg
addl
xchg
mov
mov
dec
inc
out
cs
cmpsl
mov
imulb
dec
pslld
mov
flds
and
fildl
rolb
clc
inc
sti
push
cmp
imul
mov
loopne
mull
inc
data16
mov
add
jo
sti
imul
mov
movsl
inc
std
push
lods
lods
lahf
rol
popf
xchg
jne
in
adc
xor
mov
sub
inc
es
sbb
pop
inc
lock
xchg
ss
xor
aaa
cmp
inc
fistpll
jnp
cmpsb
inc
aad
inc
mov
iret
leave
push
fwait
stos
lods
shrl
mov
push
fsts
notl
xchg
add
cwtl
lods
shl
mov
gs
scas
lret
sbb
xchg
int
push
mov
pop
rclb
flds
into
inc
jp
scas
sub
adc
in
sbb
cmp
aas
daa
mov
movsb
call
dec
test
sti
fildl
xchg
xchg
imul
add
xor
cli
xchg
adcl
mov
lret
rcrl
cmp
add
cmp
inc
pop
daa
fwait
cmpb
or
push
push
sbb
inc
add
cmp
jo
push
imul
loop
nop
ljmp
test
fs
sbb
lods
adc
xchg
mov
add
cmp
test
imul
sbb
int
nop
mov
push
inc
lock
aam
cltd
pop
fwait
call
scas
cmp
add
add
pop
ret
sbb
mov
cmp
xor
mov
push
xorl
jne
push
sub
or
mov
aas
xchg
mov
ret
sub
xchg
mov
rclb
cmp
inc
inc
lcall
dec
sbb
cmp
stc
rclb
pop
jmp
or
jae
daa
mov
push
mov
stos
data16
and
popl
stos
dec
lret
sbb
in
cmp
pcmpgtd
mov
and
dec
jg
add
mov
sbb
aas
xor
or
ret
stos
inc
pop
imul
cmpsl
testb
call
in
dec
mov
test
cmp
in
aam
sbb
cmpb
xchg
rcll
sub
mov
scas
jne
mov
add
or
dec
jb
repnz
jg
sti
fsts
out
mov
xchg
ret
rcrl
sub
and
daa
mov
and
ljmp
clc
out
ret
or
sub
jns
push
popa
cld
lock
movsl
adc
loopne
jo
cmpsb
inc
movsb
push
data16
dec
sarl
dec
pop
jnp
push
aaa
xlat
insb
cmpl
ss
mov
or
jg
or
mov
add
xchg
add
bound
jnp
mov
repz
scas
int3
cmp
adc
fs
jg
js
jle
lds
lock
dec
gs
xor
outsl
dec
lahf
repnz
jmp
mov
mov
out
lcall
cmc
jb
dec
pop
int
addr16
mov
rol
ret
cwtl
aas
daa
test
and
jl
test
pop
dec
lahf
cmp
cld
dec
out
rcrb
stos
rolb
out
jnp
in
fisttpll
or
xchg
cmpsl
and
push
mov
push
and
decl
movsl
dec
daa
adc
push
addl
shll
out
or
inc
xor
fwait
enter
jo
leave
sub
mov
pusha
add
dec
sub
and
rcr
push
shlb
jno
cmp
lret
xor
add
in
stos
ds
pop
bound
mov
add
sti
outsl
xchg
push
in
idivl
fs
mov
adc
out
inc
std
das
sar
cltd
pop
dec
gs
outsb
mov
add
or
fdivp
enter
mov
dec
add
lds
cltd
or
xchg
and
mov
push
cmp
inc
out
cmp
insb
std
rcr
cmp
add
pop
sub
jp
sbb
xchg
mov
mov
jnp
and
xchg
adc
inc
es
mov
jecxz
ret
inc
test
and
data16
jnp
inc
divl
push
jmp
test
std
ss
dec
push
adc
dec
mov
loope
mov
dec
aas
push
sub
inc
lret
jb
das
call
or
and
sarl
test
mov
mov
es
push
out
nop
push
push
jle
mov
xchg
sbb
fdiv
fstpl
fucomi
aas
mov
ljmp
mov
repz
dec
or
mov
cmc
sbb
or
gs
gs
int3
xchg
xchg
cmc
mov
add
mov
xchg
fdivrl
sub
push
lods
imul
enter
movsb
repnz
subl
test
mov
imul
dec
push
cmpsl
and
adc
mov
fidivl
lcall
pushf
dec
les
fistpll
add
jae
mov
iret
lods
outsb
add
loopne
out
inc
mov
mov
jle
xor
jb
maskmovq
notl
mov
dec
shrb
aad
js
mov
xchg
mov
or
rclb
nop
sbb
sbb
cmpsb
inc
cmp
aad
inc
frstpm(287
mov
jge
sbb
and
adc
sub
jb
cmc
cltd
insb
jnp
inc
ds
push
and
inc
call
icebp
push
insb
js
inc
mov
repnz
repnz
sub
dec
int
add
push
adc
mov
mov
daa
push
stc
mov
jae
or
test
push
xor
cmp
push
or
ja
push
testl
call
xchg
lods
xlat
mov
fiaddl
aad
movsb
add
lcall
push
jl
or
lahf
pop
das
sub
push
pop
loopne
in
cmp
mov
andb
lock
insl
out
or
pop
loope
push
mov
sti
call
jbe
add
test
cmp
in
xor
cmc
cmp
shll
mov
mov
push
test
imul
xchg
mov
jbe
out
mov
pop
mov
mov
add
cs
xchg
cs
cmc
jbe
or
pop
adc
and
ret
cltd
dec
or
lods
imul
int
int3
pop
sbb
or
dec
into
pop
mov
mov
cmp
out
cmc
lock
cmp
jbe
cld
inc
icebp
outsb
inc
xchg
mov
loop
sarl
dec
mov
cmp
mov
pop
in
daa
and
or
adc
dec
xchg
ds
mov
lods
stos
shr
repz
mov
js
aas
dec
jecxz
inc
jge
call
leave
mov
adc
push
lds
sahf
push
mov
or
xor
cwtl
clc
pop
in
daa
or
loope
jmp
and
fisttpl
inc
mov
int3
xor
jle
imul
sbb
jecxz
repnz
or
push
and
sub
fdivl
and
or
cs
in
aas
out
sub
xchg
loopne
rolb
cmpsl
out
and
adcb
out
cwtl
inc
and
or
and
xor
cmp
push
sbb
in
xchg
jae
xchg
daa
fwait
jle
sbb
sub
cs
das
fs
mov
test
test
int3
mov
sub
std
fbld
mov
int
pop
insb
xchg
stos
cmp
repnz
int3
insl
inc
incl
xchg
and
fs
in
dec
sub
test
jg
mov
out
enter
or
jecxz
ljmp
mov
mov
ljmp
and
nop
cmp
out
xchg
je
pop
rclb
dec
dec
es
and
jbe
lcall
jbe
testb
imulb
cs
add
frstor
mov
pop
cs
clc
mov
in
pop
scas
imul
jl
mov
mov
dec
data16
clc
or
or
xchg
mov
hlt
out
mov
and
outsl
sub
xor
arpl
push
push
addl
or
sub
sub
pop
ljmp
lods
std
in
enter
insl
ds
rcrl
push
cmp
rorl
es
lcall
and
sbb
lds
or
fdivr
jbe
mov
mov
xor
out
cmp
push
pop
fwait
and
jecxz
scas
dec
jl
das
cmc
das
call
lret
addb
push
sbb
fsubs
rclb
jns
jle
xchg
ficoms
cs
lods
loopne
pusha
cmp
and
jle
test
jmp
add
and
out
imul
in
sbb
mov
lcall
dec
hlt
xor
pmullw
jns
inc
sbb
int3
in
lock
mov
and
xchg
scas
fs
pop
add
push
xchg
jmp
adc
jns
and
lock
xchg
and
shll
mov
push
dec
mov
lahf
mul
mov
loope
pop
jne
xor
sub
push
push
out
xchg
insb
add
mov
adc
lcall
add
ja
dec
fldt
jle
jo
pop
and
mov
lahf
dec
popf
int
stos
mov
loop
and
pop
sbb
cmpsl
xchg
or
jno
mov
aaa
pop
mov
mov
enter
addr16
aad
addr16
sbb
lds
insl
push
shll
xchg
call
rclb
loopne
or
cmp
clc
cmp
xor
clc
or
jp
and
mov
xor
out
gs
jg
xor
lret
testb
pushf
ficompl
lret
cwtl
pusha
adc
sbb
mov
nop
stos
shl
cmp
cmp
cmp
mov
es
insl
sti
inc
lea
sub
add
or
lds
in
mov
fildll
mov
or
std
lcall
sahf
stc
push
push
aaa
sbb
cmpsl
mov
dec
pop
lods
push
stos
call
pop
into
push
dec
add
inc
fstpl
out
or
pop
xchg
adc
cld
jns
mov
out
stos
pop
rorb
sub
jo
outsb
in
ja
mov
cmp
push
call
or
mov
bound
pop
cmp
and
sbb
outsb
push
out
mov
fidivl
or
push
sbb
push
fisttps
movsb
iret
inc
bound
pop
addr16
mov
cmp
mov
inc
xchg
ss
inc
and
addb
inc
or
xor
popl
pop
fmulp
adc
xchg
mov
push
cwtl
adc
int3
xor
lret
dec
dec
fdivl
jb
mov
pusha
in
inc
fidivrs
arpl
xchg
jp
mov
xor
and
lret
mov
daa
dec
push
ret
std
sub
push
push
mov
gs
adc
nop
jo
jo
push
int
dec
aam
andps
movb
push
movsb
mov
mov
movsb
jne
sbb
adc
jp
mov
nop
repnz
jecxz
jg
xchg
push
mov
les
andb
popf
stos
in
addr16
dec
fdivr
icebp
cmp
repz
sbb
orl
pop
fld
ficompl
loop
pop
jno
inc
js
sti
jbe
es
popf
mov
xchg
lods
shrl
mov
pop
lret
repnz
aam
or
sti
xchg
emms
or
je
out
xchg
insb
push
mov
cmp
loopne
in
mov
jp
faddl
cld
sbb
mov
sub
jns
ret
outsb
xchg
cmc
dec
mov
out
sub
and
add
mov
sub
mov
push
movsl
idiv
enter
jge
mov
ja
test
inc
sbb
ljmp
xchg
ffreep
pop
cmpsb
dec
jo
jmp
cmp
dec
or
xor
in
inc
into
fnsave
mov
jns
mov
push
lea
push
mov
mov
jae
loopne
cmp
cmpsb
add
pop
arpl
mov
aad
shlb
cli
mov
pop
inc
jp
fimuls
jg
add
roll
mov
adc
push
inc
sub
inc
lcall
test
jecxz
jae
loopne
sbb
testl
pop
adc
adcl
subb
cwtl
ret
int
jl
push
lds
sarb
call
add
popf
je
mov
mov
bound
cmp
subl
and
jae
pop
out
cmpb
xchg
xchg
imul
ret
pusha
enter
lahf
sbb
stos
dec
int
cmpsb
cmp
leave
jne
xchg
push
jecxz
shll
mov
adc
loope
cs
mov
mov
div
sub
js
outsb
jl
push
pop
mov
xchg
loop
lret
sbb
cmc
ss
or
sbbb
insl
cmp
xor
loopne
cli
les
push
mov
push
jecxz
test
adc
sbb
out
mov
xorl
mov
inc
insl
pop
ss
mov
cmc
mov
out
adc
lcall
pop
int
dec
inc
adc
das
dec
mov
enter
das
push
imul
movsl
sub
cwtl
lods
adc
in
inc
and
dec
mov
lods
mov
xchg
add
dec
cmpsb
adc
cwtl
adc
shrl
cmp
cli
aaa
outsl
cld
neg
pop
sbb
fldcw
hlt
pop
jmp
jnp,pn
pop
push
test
inc
test
xor
lds
jns
fcmovnbe
jb
jb
scas
sub
lea
lea
arpl
in
fwait
and
es
and
mov
call
out
arpl
fisubl
lcall
pop
push
loop
pusha
and
mov
or
mov
mov
cmpsb
jae
lods
jo
cltd
outsb
or
ret
ret
xor
jg
and
jg
inc
lods
clc
mov
pusha
ret
add
ss
xor
pusha
ja
aam
cmp
icebp
push
loop
inc
mov
xorb
or
mov
ret
loope
and
lret
les
push
outsb
add
mov
mull
fwait
loop
and
sub
aam
sarl
or
add
dec
and
xlat
aaa
cmpsl
test
leave
dec
dec
adc
inc
cltd
mov
je
add
inc
out
cmp
ljmp
pop
lahf
xlat
shl
cmp
and
ds
mov
orl
xor
push
outsl
ljmp
mov
sub
js
testb
pushf
pop
fxtract
jmp
jo
sbb
popa
adc
dec
dec
nop
ja
outsl
jp
push
and
xchg
pop
mov
rorl
loop
js
mov
pushf
cmp
mov
sub
inc
sbb
mov
sbb
ret
into
inc
jne
mov
xlat
adc
pop
ret
and
and
jp
adc
movsl
inc
lods
xchg
mov
cmp
idivl
xchg
stos
xor
xor
jno
xchg
roll
movsb
xor
jnp
fdivrs
xor
push
lcall
fildll
sub
inc
sbb
add
inc
xchg
dec
cmpb
dec
daa
jne
idivl
add
scas
test
dec
cmp
lock
add
js
mov
sub
mov
imul
cmp
pop
mov
xchg
lret
lods
mov
jbe,pt
pusha
mov
and
aam
add
xchg
shlb
aas
mov
sbb
sbb
inc
pop
movsl
mov
push
lahf
sbb
jns
aas
cwtl
jae
lds
js
js
cmpsb
insl
cmpsl
ficoms
mov
bound
or
pop
push
dec
lahf
fisttpll
sbb
lfs
dec
into
dec
xor
loope
sub
xchg
push
mov
mov
ss
mov
and
into
add
sub
mov
lcall
pop
aam
roll
push
push
add
into
imul
sbb
pop
ja
or
mov
shrb
pop
pop
adc
sub
cli
push
stos
or
mov
push
mov
ret
xchg
movsb
xorb
xchg
inc
dec
popa
cli
mov
in
or
jge
loope
movsl
lret
lret
out
adc
repz
sub
std
jae
pop
sub
movsl
sub
push
dec
adc
int
fsubrs
leave
push
out
pop
cmp
scas
cmp
test
addl
mov
lock
mov
dec
dec
clc
lds
jle
and
xchg
dec
push
xchg
clc
clc
pop
outsl
mov
aam
cltd
pop
clc
movl
mov
repnz
jnp
sub
jnp
adc
std
mov
xchg
gs
and
pop
hlt
pop
lock
sbb
push
mov
sbb
xchg
inc
push
fists
loopne
shl
dec
push
lods
insb
out
rorb
and
ja
xchg
mov
dec
cli
dec
sbbl
mov
pop
or
mov
or
xchg
mov
xor
imul
dec
xchg
mov
cmp
sbb
jmp
clc
ret
lcall
clc
test
push
arpl
or
lret
push
mov
clc
adc
int3
sbb
lahf
jmp
test
adc
es
dec
xchg
inc
and
out
hlt
xchg
in
xchg
xchg
push
mov
push
mov
push
lret
fistl
mov
icebp
mov
std
or
adc
mov
popa
mov
aas
enter
jbe
nop
sub
sti
or
shl
icebp
fwait
daa
jg
js
cli
mov
das
adc
jnp
je
mov
mov
fsub
mov
add
inc
lods
clc
mov
pop
fdivrl
xchg
and
daa
pop
xchg
jne
shl
fnstcw
mov
xchg
jecxz
mov
push
lods
imul
mov
loopne
pop
add
lret
popa
cwtl
sbb
ds
jno
push
adc
mov
xsavec
mov
push
ja
lock
pop
loope
lods
mov
fdivrl
in
into
mov
and
mov
iret
les
scas
push
or
inc
pop
out
dec
cmp
jg
pop
shll
push
jl
mov
mov
movsl
jecxz
and
mov
add
mov
fdivs
test
mov
mov
inc
add
scas
hlt
fidivs
xchg
push
sub
test
lcall
stos
mov
sahf
or
pop
outsb
imul
ja
push
mov
inc
add
outsb
pop
cld
cli
dec
pop
mov
test
shlb
ficoms
repz
loopne
add
xor
outsb
push
or
mov
jp
pop
pop
and
lcall
or
xchg
lcall
lock
push
mov
and
jmp
test
aad
jg
jno
cmp
fcmovnu
js
xor
outsb
xlat
cmp
fwait
loope
inc
mov
dec
cld
inc
jno
insb
fcoml
inc
mov
or
add
aas
cmp
int3
jo
insl
pusha
rorl
mulb
xlat
dec
sub
js
push
aaa
and
pop
cwtl
sub
adc
imul
adc
dec
addps
xchg
cmp
mov
adcl
out
mov
daa
mov
pushf
mov
inc
add
jmp
add
mov
xor
out
or
mov
in
test
lret
jo
mov
mov
sarl
out
gs
inc
cld
std
jge
adc
mov
add
inc
jecxz
push
mov
rorl
pop
jae
jb
inc
add
fildl
cli
aam
dec
ss
cmp
aad
inc
insb
lea
mov
cmc
adc
sbb
and
and
scas
ljmp
jle
xchg
test
add
ja
push
sbb
shll
xchg
vpshufhw
xchg
or
pop
cmpb
mov
test
sub
adc
sbb
clc
adcl
lcall
ja
push
mov
inc
dec
sub
fidivrl
cmp
hlt
outsl
clc
inc
sub
pushl
cmpsl
mov
push
and
mov
xorb
pop
xlat
sbb
rcrb
imul
mov
adc
cs
test
out
hlt
pop
or
sub
popa
jg
or
jnp
mov
aaa
jne
jmp
stos
inc
add
insb
jo
test
push
je
popf
sub
jecxz
and
out
jnp
lock
jnp
daa
push
jge
ret
xchg
out
xor
test
js
out
push
jnp
ljmp
in
inc
jns
pop
or
xor
jl
dec
push
movsl
jmp
out
dec
sbb
enter
push
inc
inc
sti
mov
stos
into
out
pop
pop
and
pop
sbb
and
lcall
insl
aas
in
mov
push
push
rolb
adc
fs
repnz
int
cmpl
jge
sub
clc
add
adc
fsubl
lret
mov
push
shrb
pusha
and
sbb
sahf
lret
inc
pop
adc
repz
fnstsw
mov
xchg
jp
fdivrl
and
out
enter
push
enter
mov
lock
push
mov
cmp
test
test
add
xchg
xchg
ret
inc
dec
jg
mov
mov
push
aam
and
sar
push
jge
push
nop
ss
rclb
mov
adc
mov
pushf
sarb
cmpsl
inc
adc
jo
xor
jno
rclb
sbb
aad
xor
test
cmp
enter
shll
push
pop
repnz
and
mov
xchg
fwait
push
fsubl
inc
mov
pop
dec
in
push
pusha
int
push
mov
sub
in
mov
lods
xlat
xlat
mov
push
repz
arpl
xor
jl
sub
into
out
push
push
cmp
xchg
jno
inc
jge
mov
xor
pushf
and
xchg
mov
imul
pop
sub
bound
push
stc
cmp
repnz
pop
imul
jns
out
fsubrs
jno
mov
pop
inc
mov
xor
jmp
dec
js
xchg
pop
mulb
icebp
js
cmp
or
sbb
inc
dec
movb
xchg
lret
jne
nop
mov
add
push
add
lcall
xchg
mov
ja
mov
dec
ljmp
popa
inc
adc
filds
sbb
clc
cli
mov
and
mov
popa
xor
or
std
cld
sbb
jae
cltd
xor
fs
mov
sahf
cmp
inc
mov
mov
xor
or
icebp
push
push
or
pop
and
push
mov
xchg
add
mov
shrl
mov
inc
repnz
mov
mov
stos
nop
fcomi
dec
cmp
adc
fmulp
jle
jo
fwait
int
lds
push
das
mov
pop
sbb
sbb
mov
lcall
pop
ja
cmp
int
mov
jo
jbe
int3
sub
in
out
sub
mov
pop
sarl
in
aas
add
push
inc
xchg
fwait
sub
icebp
jb
mov
mov
mov
inc
jecxz
jns
scas
test
dec
add
std
mov
outsb
cmp
idiv
dec
aad
xor
nop
dec
mov
push
dec
imul
loope
mov
pop
sub
adc
notl
aad
imul
add
add
lret
pcmpgtw
lret
jl
mov
ljmp
icebp
sahf
sahf
les
sbb
jb
lods
cmpsb
notb
push
cmp
pop
rcrl
xlat
xlat
and
mov
cmp
mov
jle
dec
aam
xor
jae
sysenter
xor
lods
cld
push
mov
fldcw
popa
mov
negb
cmp
pinsrw
mov
pop
test
insb
lock
dec
push
xchg
pushf
mov
mov
fs
sub
mov
test
cmp
inc
xor
jmp
fisttpll
jge
scas
push
jp
and
bnd
cmp
add
adc
lcall
inc
in
or
mov
mov
cs
sbb
fiaddl
hlt
or
mov
inc
inc
jne
jmp
popa
inc
test
shrl
sbb
in
lods
in
jb
aad
add
adc
add
mov
fistpl
xchg
jp
je
fiaddl
loopne
mov
es
bnd
push
xor
jmp
sub
xchg
int3
out
test
subb
or
js
pop
jl
jns
inc
into
push
mov
add
xchg
jp
popa
jae
jne
jae
jmp
fldenv
repz
mov
dec
lock
dec
clc
mov
or
imul
inc
fstl
or
insl
inc
loop
popa
adc
fnstsw
add
jb
inc
jmp
dec
add
jle
inc
sti
aam
lret
dec
jns
xchg
xchg
push
cmpsl
jae
adc
jg
mov
sub
xchg
pop
lock
test
dec
mov
repz
sbb
in
fscale
jg
dec
push
and
dec
gs
mov
ror
dec
ret
mov
cmpsb
jnp
adc
adc
mov
adc
mov
push
mov
cmp
loope
add
movzwl
cmp
pop
inc
popa
push
sbb
mov
insl
ret
add
arpl
sbbl
pushl
insb
mov
mov
stos
mov
outsb
push
insb
or
mov
and
jno
jne
mov
mov
add
pop
push
dec
rcrb
outsb
repnz
adc
push
test
cli
cltd
push
or
roll
orl
xchg
stos
scas
int
mov
or
inc
mov
sbb
jp
cli
mov
imul
mov
in
mov
out
add
bound
inc
mov
xchg
jle
and
push
andl
ds
cmp
inc
cs
loope
sub
nop
negb
add
push
cwtl
sub
clc
pop
inc
adcl
xchg
vmovlps
jecxz
enter
test
mov
lods
test
or
in
ss
push
cmp
add
stos
xorl
push
xchg
insl
lahf
lds
out
ret
in
fs
mov
dec
stos
pop
mov
out
sub
int
out
add
stos
fmuls
dec
scas
jle
movsb
sahf
mul
xor
sbb
fsubs
rcrb
inc
test
jmp
xor
sbb
pop
sub
repz
xchg
dec
aam
jle
ds
fistpl
pusha
xchg
mov
repnz
jbe
pop
dec
pop
pusha
inc
popf
sbb
and
clc
xchg
or
xlat
and
pop
jg
jbe
cmp
fbstp
daa
imul
int3
push
jae
xchg
les
cmpsb
adc
aad
in
lock
lds
movsl
out
pop
aaa
xchg
jae
div
mov
jmp
xchg
pusha
sub
cmp
sbb
bound
clc
cmp
sub
push
push
inc
lods
add
lahf
and
lcall
sub
dec
push
cmc
sub
aam
inc
rcl
loopne
jbe
pop
mov
or
xchg
in
std
mov
test
subb
loope
movsl
test
enter
dec
or
mov
movsb
in
fdivrl
movsb
mov
adc
sbb
data16
aaa
pop
xchg
mov
in
cli
sub
movsl
rclb
lahf
cwtl
nop
add
mov
movsb
xchg
into
cmp
int3
shr
pop
aas
push
imul
xchg
stos
push
scas
pop
xchg
ja
aam
sub
adc
fmuls
sbb
xchg
iret
loopne
pop
lods
adc
or
pop
push
sub
sbb
movlps
cmp
imul
into
and
or
mov
xchg
mov
es
int
xor
out
and
sub
xchg
lahf
lret
inc
ret
bsf
cmp
bound
shlb
cmp
scas
cmp
ret
stos
aam
in
push
jnp
lea
inc
out
xchg
jmp
nop
cmp
popa
mov
push
jae
cmpsl
add
cwtl
fidivrs
mov
or
gs
stos
fs
cmp
cmp
fs
cmpsl
test
mov
push
xchg
out
add
and
loopne
inc
adc
sbb
subb
shlb
ror
jo
and
jnp
cmpl
loopne
or
push
mov
loop
je
jmp
sbb
mov
mov
dec
mov
cmpsl
cwtl
leave
xor
lcall
or
das
push
pop
lods
mov
inc
mov
hlt
jae
xchg
enter
adc
push
outsl
popf
jnp
cmp
push
push
adc
cmp
mov
jb
out
jnp,pn
inc
adc
aas
sahf
jns
and
aas
or
dec
sub
jp
push
mov
adc
cmpsb
xchg
movsb
jge
iret
sbb
inc
jns
pop
pop
orl
pop
sahf
lds
jns
sub
xor
or
adc
mov
jmp
pusha
dec
push
iret
aas
aad
call
sbb
mov
xor
push
cwtl
and
out
lahf
nop
insl
pop
cld
scas
xchg
pop
dec
stos
sarl
or
loop
pop
testb
and
xor
adc
push
pop
movsb
insb
lock
rclb
inc
push
leave
repz
lods
gs
test
pop
sbb
lods
jne
inc
in
and
jne
jne
or
in
xlat
cmp
cmp
gs
movsl
jno
mov
mov
outsl
push
std
and
jae
lret
jmp
mov
int
mov
jne
or
das
lock
scas
cmc
insl
sbb
lods
movsb
push
adc
xchg
sbbl
leave
sbb
cvtps2pd
insb
jbe
out
push
fbld
fidivl
pushf
popl
and
push
pop
int
nop
pushf
adc
xchg
loope
inc
loopne
push
lahf
cld
rcr
mov
jbe
cmp
push
jmp
mov
imul
imul
pop
push
add
mov
xor
imul
cmc
mov
cmp
dec
pop
inc
sbb
adc
inc
pop
and
pop
adc
add
xchg
rep
xlat
or
add
lcall
fsubs
js
cwtl
js
mov
sub
aam
stos
testb
or
icebp
push
mov
in
lcall
mov
stos
popf
jnp
jno
jae
pop
mov
cmp
jecxz
jmp
mov
xchg
mov
sbb
mov
fbld
dec
sub
cltd
jbe
lcall
push
push
sbb
stos
lret
pusha
pusha
cmp
add
xchg
xchg
mov
push
xchg
or
add
aas
adc
rolb
mov
test
ljmp
mov
sub
sti
mov
mov
les
popa
pop
dec
pop
neg
mov
loopne
mov
cld
int3
scas
sbb
jo
jge
loopne
ret
or
xor
mov
out
fisubrl
data16
push
pop
cmp
scas
negl
cmp
xchg
sub
jmp
aam
es
push
test
andl
in
out
push
jmp
xchg
or
lock
jnp
adc
imul
adc
jg
xchg
pop
arpl
mov
movsb
or
andb
fcmovu
mov
dec
inc
cmp
push
andb
sub
inc
rolb
js
xchg
divl
pop
hlt
daa
fimuls
adc
and
js
mov
pop
dec
adcl
fldt
pop
mov
mov
cld
hlt
xchg
scas
add
xchg
and
or
jge
mov
andb
push
mov
aas
mov
inc
jle
mov
popa
adc
push
cmp
jmp
mov
loope
out
aad
lea
add
xor
fs
mov
jle
aaa
movsl
arpl
lds
adc
sub
inc
dec
push
clc
hlt
adc
mov
cmp
push
or
jbe
jbe
pop
adc
pop
sbbb
pushf
or
outsl
and
xchg
mov
pop
aad
jmp
mov
ret
cmc
mov
pmaxsw
pusha
sahf
int3
xor
int3
mov
pop
cmp
movb
inc
cmpsl
adc
sbb
aam
cmpsb
mov
jecxz
sti
mov
leave
out
sub
aas
pusha
push
xor
shl
cmp
dec
xchg
xchg
mov
sbb
loope
scas
ljmp
orl
mov
repz
or
popa
pop
inc
jno
and
push
test
bound
frstor
mov
pop
mov
pop
int3
out
add
sub
lods
jnp
data16
je
ret
int
fsub
push
les
test
xchg
add
push
in
repz
jmp
scas
stos
out
lahf
pusha
mov
and
add
sbbl
add
pushl
fcoms
inc
adc
pop
out
and
loopne
cmpsl
andb
jo
jae
int3
mov
cmp
xor
test
inc
gs
pop
shlb
imul
dec
out
iret
out
mov
sub
in
fs
hlt
fs
dec
movsl
pop
cmpb
sub
adc
in
xchg
stc
cmp
or
ljmp
push
jne
and
mov
xor
lcall
push
pop
imull
ror
dec
xchg
and
test
stos
pop
pmaxub
inc
push
mov
std
fsubs
mov
sbb
push
movsl
mov
cmc
cli
add
repz
scas
jno
in
ja
jmp
cmpsl
push
jae
pushf
dec
push
cli
mov
lret
mov
inc
ds
and
push
mov
mov
xchg
lods
or
decb
ret
xchg
pop
test
xchg
gs
daa
pop
jo
mov
adc
idivl
sahf
mov
jmp
lock
pop
mov
into
adc
aas
sub
inc
repnz
xchg
inc
sbb
js
orl
adcb
mov
fnop
enter
mov
cld
ja
sbbl
cltd
push
xor
inc
add
das
mov
xor
in
lea
inc
repnz
imul
cmp
out
xchg
cmp
pop
xchg
insb
imul
dec
in
dec
fdiv
dec
mov
andl
les
sarb
sub
jae
cli
test
dec
cmp
jnp
cmp
lods
in
adc
aas
or
pop
fwait
xlat
call
out
shlb
loope
adc
jge
pop
add
jmp
jecxz
jo
mov
mov
xchg
ljmp
mov
xor
test
mov
int3
pop
xlat
lcall
cli
inc
sbb
int3
inc
nop
inc
pusha
lret
cli
sarb
dec
jns
pop
or
dec
fcomps
repnz
dec
call
mov
dec
xchg
sti
dec
divb
push
mov
xchg
mov
lods
pusha
cmpsl
insl
jle
testl
cmp
pop
inc
dec
xlat
addb
jae
add
add
jecxz
scas
and
xchg
sbb
mov
sub
push
outsl
repz
jmp
outsb
popa
loopne
test
int3
lret
mov
adc
add
mov
pop
pop
sub
jo
bound
jmp
ret
dec
push
rolb
je
push
jmp
popf
popa
pop
in
jo
in
jbe
arpl
mov
lret
clc
push
jbe
dec
es
pop
add
or
xorl
xor
mov
cmpsb
sahf
inc
sbb
adc
jae
jmp
rcll
jae
adc
fdivrl
mov
mov
movsb
mov
pushf
movsl
in
and
or
dec
out
rcr
or
dec
mov
pop
jo
push
hlt
add
call
lds
push
xchg
pop
loop
out
xchg
iret
or
movsl
add
jge
and
jg
jl
mov
xor
pusha
xor
mov
cli
adc
jl
cmp
icebp
adc
sub
sub
stos
mov
repnz
ja
add
pop
popf
pushf
sbb
mov
push
mov
cmpsl
mov
and
cwtl
cmpsb
jo
lea
mov
dec
jl
fimull
and
leave
sub
ds
icebp
arpl
mov
xor
xchg
xchg
push
test
lret
arpl
lret
sbb
mov
faddl
xchg
inc
imul
cmp
ds
push
jne
stc
push
inc
xor
into
lea
shll
les
push
jmp
pop
xchg
out
xor
jl
mov
popf
fdivrs
ret
push
inc
ss
insb
push
pop
test
popa
popf
mov
adcb
and
fstps
and
xchg
fildll
xchg
cltd
cmp
insl
cs
stos
jmp
in
and
pusha
pushl
cmp
dec
adc
mov
out
les
arpl
mov
stc
leave
mov
imul
jbe
inc
push
adc
pop
xchg
mov
adc
loop
lock
xor
cwtl
rorl
sub
or
rsm
mov
and
xlat
outsb
inc
test
icebp
xchg
adc
pop
lods
addl
dec
sub
sbb
or
lret
aam
pop
pushf
mov
js
ja
sub
mov
adc
leave
and
pop
sbb
test
xor
inc
pop
xchg
jb
or
sub
push
adc
shrl
bound
in
push
mov
repnz
test
xor
pop
pop
fstps
cli
dec
int
adc
in
daa
sub
shr
ret
lds
sbb
xchg
loopne
rorl
jb
cli
dec
sbb
push
test
test
fdivrl
mov
mov
cmp
ja
icebp
mov
push
icebp
dec
mov
or
pop
push
in
ds
xor
mov
scas
fbstp
movsl
add
ficoml
sub
fmuls
sbb
push
cld
clc
scas
mov
push
sbb
jp
adc
inc
and
push
sar
movsb
jle
pop
aas
movsl
imul
mov
push
xor
dec
outsb
pop
lret
ret
std
lock
mov
lret
mov
inc
or
pop
call
icebp
lds
ja
lcall
dec
sbb
mov
sbb
mov
ja
out
mov
testl
push
add
sub
dec
pop
mov
inc
test
lret
out
sub
test
nop
je
das
faddl
and
fcos
xchg
or
arpl
ror
data16
cmp
sbb
pop
adc
mov
call
ficomps
and
insl
lds
lds
repz
push
test
loop
cmp
mov
inc
jbe
cmp
pop
stos
sbb
fnstenv
xor
aad
adc
jmp
popf
call
cld
pop
es
mov
pushf
sbb
hlt
aad
scas
cmp
in
inc
subb
pop
stc
add
test
movsb
andb
inc
jg
idivb
mov
ret
pop
lods
cmc
dec
int
dec
out
mov
jb
into
dec
push
add
inc
xor
das
loopne
fcmovbe
sub
inc
or
and
aad
lahf
adc
push
adcl
repz
or
xlat
cmp
sar
mov
xchg
hlt
adc
xor
dec
aad
cmpsl
dec
jne
lcall
xchg
adc
add
lea
mov
ret
jne
sti
mov
pusha
push
mov
cmp
push
push
flds
sbb
fcomps
mov
frstor
lds
repz
sbbl
lahf
pushw
fwait
xor
jb
lea
jle
mov
mov
mov
add
outsl
cli
inc
xchg
lcall
fidivrl
fcoml
cmp
movsl
pop
arpl
test
sbbb
sete
lds
push
in
fistpl
lfs
loop
push
aad
in
int3
ret
inc
cmp
xor
mov
jo
add
shrl
int3
push
sub
leave
inc
fld
clc
push
push
cmp
jge
pusha
bound
xchg
xlat
fwait
push
mov
dec
stos
pushf
mov
test
fstl
subb
push
out
mov
sar
mov
cltd
sbb
scas
sar
xor
ds
cmp
pop
fs
mov
leave
jmp
in
mov
enter
pop
jno
outsl
movsb
push
inc
mov
ljmp
pop
rorb
pop
stos
inc
add
mov
mov
jmp
daa
mov
adc
or
jbe
inc
test
dec
vmwrite
jp
pushf
shll
pop
fidivrs
adc
xchg
push
xchg
mov
sbb
push
into
dec
lret
xorl
cmpsb
fldz
or
pushf
xchg
xchg
xchg
movsl
int3
into
rol
add
into
cmp
xor
xchg
subl
addb
ret
packuswb
arpl
mov
popa
js
pop
data16
and
push
test
sub
pop
lahf
addr16
popf
push
sub
ljmp
cmp
push
xchg
into
dec
and
cli
jg,pt
jecxz
daa
sbb
dec
lds
icebp
xchg
mov
mov
loope
ds
fs
scas
inc
lock
adc
add
outsb
sub
repnz
xorl
push
inc
xchg
push
movsl
shll
and
fiaddl
call
jae
or
push
jne
add
scas
jp
scas
sbb
add
fs
jmp
sub
mov
out
incl
inc
fimuls
xor
rcll
nop
and
mov
push
lds
sbb
xor
sbb
fwait
xor
jns
mov
push
cmp
jecxz
inc
outsb
movsb
dec
or
sub
cltd
adc
sub
fmull
in
gs
sbb
pop
ss
cmp
lret
pop
loopne
lahf
dec
imul
dec
mov
cmc
sarl
fiaddl
fiaddl
test
fs
cmc
movsl
xor
push
stos
es
dec
imul
loope
cmp
ds
sbb
mov
call
cli
cmp
jge
or
inc
shlb
fstpl
icebp
sahf
cld
push
stc
loopne
mov
mov
add
ss
add
mov
pop
xor
and
inc
pop
sarb
incl
jp
rcrl
iret
xchg
mov
fwait
mov
loop
jmp
push
andl
lahf
jne
sub
xor
cmpsl
mov
pop
pop
xchg
or
sti
cld
jmp
mov
ljmp
and
inc
addr16
pop
neg
cld
add
adc
daa
jno
jle
mov
aaa
lahf
inc
adc
inc
ja
loope
iret
jo
cwtl
inc
insl
push
mov
lret
inc
push
xchg
add
dec
mov
mov
into
mov
and
xchg
lcall
orl
mov
or
pop
fidivrs
jns
cmp
js
sbb
sub
add
mov
adc
and
cmp
xor
jmp
lods
add
int3
mov
loop
jno
add
pushf
adc
mov
mov
jl
lahf
jmp
aaa
imul
scas
mov
lods
lcall
arpl
fs
rcr
movsb
xchg
test
sub
pop
dec
cld
test
jb
xchg
fwait
inc
adc
mov
push
pop
out
xor
mov
test
leave
mov
push
flds
das
add
xchg
push
subb
sti
add
inc
mov
inc
insl
sub
mov
aam
loope
pop
lcall
in
jne
dec
sub
outsb
popf
mov
jnp
jbe
es
stos
add
addr16
mov
mov
int
repnz
adc
mov
and
jo
ret
mov
shrl
mov
cmp
cs
sar
push
push
xchg
mov
cmpsl
pop
dec
loope
and
xchg
cmpsl
xchg
sub
sbb
sub
adc
ljmp
fmull
jg
ret
cmp
fsubl
mov
jl
inc
mov
aas
push
xor
cmp
ljmp
mov
setnp
mov
xchg
test
pop
sbb
jne
imul
rcrb
sar
sar
inc
inc
fiaddl
mov
decl
arpl
iret
and
jae
movsb
add
movsb
aaa
jns
xor
scas
xchg
movsl
fildll
xchg
and
or
je
int
popf
jns
mov
xchg
mov
jg
aas
scas
jg
xchg
ds
cmpsl
push
sbb
cmpsb
push
mov
pop
ret
mov
int
or
cs
push
push
cmp
ja
mov
sti
push
stos
rcrl
stos
xor
mov
mov
add
movnti
pop
xchg
icebp
out
jo
mov
sahf
or
loope
xchg
dec
inc
cmp
stos
addr16
xor
mov
pushf
adc
push
mov
dec
inc
xor
jnp
xadd
loop
sub
or
adc
pop
and
sub
les
dec
or
out
mov
das
jecxz
push
mov
sbbl
aas
xchg
jnp
out
cmp
xchg
or
scas
and
test
inc
ret
into
or
push
mov
push
sub
inc
xor
test
dec
xchg
adc
in
jno
pop
and
js
aam
out
insl
xlat
sbb
pop
loope
push
repz
in
js
test
shl
std
xlat
inc
leave
mov
in
xor
lods
fbstp
aas
dec
jno
jbe
enter
fwait
dec
shl
add
das
push
xor
pop
mov
or
adc
insb
divb
insl
cwtl
cmpsb
rclb
das
sbb
jle
mov
mov
mov
mov
mulb
lahf
insb
xlat
dec
cmp
and
stos
aad
mov
sub
imul
inc
sbb
scas
xchg
xlat
iret
imul
inc
clc
lret
dec
stc
loopne
dec
xorl
sarl
push
or
lds
sarb
mov
sub
mov
xor
rcl
lret
test
repz
xor
ret
sbbb
or
fldl
insl
pop
or
adc
xorl
sbb
jmp
fdivrs
inc
and
mov
and
lahf
les
dec
lods
jbe
dec
jbe
inc
pop
jbe
repz
adcb
push
mov
aaa
int
mov
out
imul
aam
sbb
out
lods
xchg
adc
lods
xchg
outsl
repnz
mov
mov
jns
push
push
inc
dec
mov
jle
sbb
nop
orb
rorl
pushf
pop
lret
je
mov
or
cltd
xchg
cmc
mov
sub
sub
daa
lods
sub
xor
int3
pop
mov
push
pop
dec
icebp
ja
pop
icebp
into
push
add
jl
in
jmp
cwtl
sub
insb
ficoml
cwtl
cli
pop
cmp
or
or
push
rclb
aam
je
xchg
mov
rcll
jb
xchg
loope
test
mov
aam
cwtl
in
sbb
cmp
dec
mov
aas
and
mov
add
dec
pop
dec
out
adc
cltd
and
xchg
mov
jp
mov
or
subl
add
addr16
pop
mov
cmp
aaa
and
mov
test
rcrb
adc
in
push
jg
inc
aas
push
fdiv
mov
out
jbe
pushf
mov
sub
ljmp
imul
cli
and
mov
test
outsb
ret
pop
test
adc
add
cmpb
aaa
sbb
outsl
mov
dec
adc
sbb
std
mov
add
adcl
sub
addb
and
xchg
jmp
pop
cmp
add
ss
mov
je
pavgb
mov
pop
xchg
mov
or
ficompl
jmp
pop
rorl
popf
insl
mov
cld
or
stc
out
mov
adc
push
add
rep
stos
shlb
jge
cmp
dec
sbb
sbb
mov
out
add
pop
pop
xor
pop
bound
adc
scas
mov
gs
add
add
mov
stos
or
adc
lcall
sbb
fadds
stc
inc
cmp
dec
jae
int3
mov
out
push
dec
aas
sbb
lds
mov
icebp
or
mov
pusha
dec
stos
test
or
mov
div
xor
adc
leave
sub
or
or
xor
xlat
pop
jae
sub
fcmovnu
aad
add
jg
add
push
lret
testl
inc
sub
push
aad
dec
mov
stc
cmp
aam
das
mov
sub
outsl
lods
in
into
add
push
push
std
ret
and
lds
cli
enter
xor
xchg
es
push
xor
les
movsb
dec
lods
fwait
test
xchg
orb
shlb
mov
cs
fwait
xchg
movsb
inc
mov
insb
sub
xchg
pop
cld
enter
imul
add
inc
and
or
movsl
adc
dec
dec
inc
cld
or
fcos
add
loopne
sarl
aas
add
fstl
xchg
inc
jne
ja
fdivl
mov
imul
dec
push
lods
cmp
inc
jecxz
pusha
insb
out
inc
fistpl
sbb
movsl
fimuls
mov
inc
sbb
out
push
adc
inc
js
mov
mov
or
push
in
sbbl
mov
in
inc
adcl
pop
mov
xor
notb
xchg
ljmp
lahf
bnd
cli
mov
ljmp
jle
ljmp
mov
insb
cmp
and
and
aaa
dec
xor
lods
inc
xchg
loopne
cmc
xchg
mov
and
dec
jl
cmp
add
dec
push
add
daa
and
dec
dec
adc
loopne
fcmovbe
inc
lret
cltd
push
mov
fdivrl
sar
xor
xor
jge
imull
sbb
jg
popa
xor
and
dec
clc
cmpsl
movsb
js
dec
shrb
xchg
aas
mov
mov
movsl
pop
clc
ret
iret
and
add
mov
and
jbe
cs
jbe
aam
out
pop
test
sub
insl
sbb
xor
push
sti
mov
shr
push
scas
push
mov
xor
inc
sbb
inc
je
ja
jbe
unpckhps
mov
xor
pop
stos
lock
and
lcall
fdivrs
ds
mov
test
jg
or
nop
push
cmc
inc
and
mov
insl
jns
xchg
sub
xor
andl
cs
fstl
push
push
std
lcall
cld
xor
jo
xchg
pop
vmovsd
imul
sti
ret
in
repz
dec
bound
xchg
hlt
cmp
xor
test
fs
cmp
lods
lcall
jo
ljmp
out
pop
aas
or
and
inc
jbe
pop
rorb
data16
push
add
int3
cmc
cli
xlat
lods
add
enter
ret
xchg
inc
clc
aad
sub
test
test
jo
mov
inc
mov
xor
dec
jns
push
add
sti
pusha
jp
jmp
aad
xchg
mov
inc
rorl
in
rolb
add
leave
jno
gs
sub
and
xchg
ret
push
jmp
add
lds
xchg
dec
fcoml
xor
and
push
mov
lods
pop
jle
mov
test
push
xor
xchg
adcl
lods
movsl
into
cmp
out
or
lods
out
mov
inc
dec
jno
or
inc
nop
mov
shrl
mov
xchg
insb
sbb
push
mov
ja
mov
mov
bt
cmp
cmp
clc
leave
mov
xchg
xchg
pop
prefetch
or
adc
jno
arpl
xor
mov
les
mov
stc
ret
daa
add
dec
mov
popa
lods
mov
divl
push
mov
lock
ja
nop
pushf
push
cltd
sub
jne
inc
mov
out
into
push
sarl
popa
stc
ror
fisttpl
test
dec
sbb
or
imul
scas
test
adc
fnsave
xchg
mov
cmp
adc
xchg
call
xor
mov
insl
cwtl
xchg
pop
sub
ss
rcl
icebp
jl
xchg
push
mov
and
lret
jg
and
sub
rcrl
xchg
mov
and
out
stos
call
inc
mov
lods
push
push
and
pop
mov
jl
imul
mov
ficoms
xchg
cmc
adc
sub
adc
xchg
push
stos
sub
pop
or
inc
cmpsl
roll
movsb
mov
getsec
and
mov
mov
insl
cmpsl
mov
pop
mov
idivl
add
cmpsl
je
rolb
popa
das
fwait
mov
les
call
sar
mov
add
ljmp
xchg
mov
xchg
shlb
dec
sbb
xchg
icebp
jb
inc
pop
fcmovbe
mov
popa
icebp
xor
lcall
jmp
ds
mov
mov
iret
fdivrl
mov
and
addl
lods
fdivrp
popa
sub
ljmp
inc
push
xor
push
jae
sub
jb
xchg
add
sbb
and
dec
pop
sti
test
mov
call
loope
jmp
shll
pop
aad
cmpsb
imul
mov
stos
ret
sbb
mov
push
cwtl
aad
lock
add
jle
jo
push
mov
add
cmp
adcb
jmp
inc
jp
in
mov
pop
testl
fadd
adc
mov
or
mov
mov
push
cmp
mov
mov
sbb
jmp
push
insb
xchg
mov
xchg
mov
shll
mov
pop
cmp
mov
jmp
or
div
repz
outsl
hlt
inc
pop
call
scas
movsb
inc
pop
clc
sahf
jge
popa
int3
push
mov
push
mov
jp
cltd
test
push
sbb
das
or
test
and
out
dec
and
outsl
fisubl
repnz
out
pop
fdivp
jno
stos
cmp
frstor
mov
push
push
les
jp
scas
mov
sub
pop
and
popf
add
add
pop
pop
pop
test
sub
mov
cmp
scas
or
jb
mov
fcomip
lahf
pop
aas
pop
mov
nop
inc
ja
push
pop
dec
fcoms
outsl
xchg
out
mov
xor
cmpsl
push
or
insb
out
jmp
and
xchg
rcl
mov
sahf
xlat
mov
insl
aas
mov
xchg
and
aaa
sbb
mov
xchg
ss
or
fwait
pop
mov
fstpt
and
pushf
xor
and
inc
dec
mov
imul
pushf
fsubl
cmpsl
lcall
call
xor
imul
xchg
sbb
outsb
sub
movsl
jge
je
imulb
dec
and
dec
cmp
rol
push
mov
lret
inc
lcall
xchg
fisubrl
and
inc
sti
cmp
rcll
mov
lods
pushf
mov
pop
mov
scas
imull
addr16
adc
shll
dec
clc
fildl
rcr
inc
gs
pop
nop
mov
adc
frstor
icebp
adc
xchg
pushf
stc
jns
arpl
dec
lods
xchg
out
xchg
add
pop
fwait
pop
insl
bound
and
or
sub
mov
add
or
cmc
cmp
insl
jne
sub
jne
cmc
test
cli
xchg
xchg
pushf
mov
dec
bound
and
int
and
scas
fs
divl
jno
das
iret
cmpsb
sbb
push
sub
into
fsubr
jno
cmp
outsl
mov
jle
jle
pop
ds
ljmp
mov
dec
call
into
fnstenv
and
popa
mov
cmp
mov
sbb
lods
int3
sub
jbe
scas
push
mov
push
jp
sahf
add
mov
xor
aad
jo
das
lret
pop
cmpsb
xlat
xor
mov
cltd
push
imul
sbb
test
inc
cmp
aas
insl
pop
mov
inc
shlb
push
mov
ret
ljmp
icebp
sti
add
fs
xlat
xchg
insb
das
xchg
inc
pop
mov
dec
jne
and
out
dec
or
mov
cmpsl
iret
stc
sub
imul
mov
lea
or
xor
and
xchg
cmpsl
js
leave
inc
fcoms
or
ret
jmp
pop
mov
stos
jns
pop
mov
inc
or
mov
mov
xor
movsb
aaa
cmpsl
test
stos
adc
and
dec
hlt
mov
lods
inc
hlt
repz
ret
mov
pop
or
mov
jmp
push
popa
xchg
adcl
cmc
enter
mov
inc
imul
dec
daa
adc
lret
test
lods
mov
mov
xchg
imul
out
add
dec
fdivl
nop
test
das
xchg
push
xor
add
inc
inc
cli
mov
in
xchg
mov
pop
jo
or
push
je
mov
int3
xor
arpl
jp
popa
enter
lea
push
movsb
clc
popf
mov
aas
cs
stc
scas
ja
push
hlt
xchg
lods
mov
outsb
add
xor
test
imul
lret
push
jns
mov
or
divb
cli
dec
and
sbb
and
adc
mov
lds
stos
test
and
mov
rcl
cld
hlt
dec
mov
insb
pop
cmpsl
dec
aad
ret
jg
in
cmp
add
xor
les
jge
and
dec
test
jo
lds
clc
sub
and
pop
jle
ljmp
sbb
in
adcl
jns
or
push
stos
add
mov
xor
fimuls
scas
xchg
adc
pop
jle
ffreep
xchg
mov
addr16
aaa
push
push
add
add
in
cmp
aam
out
add
push
negl
loope
lret
xor
cmpsb
xchg
andb
sbb
jae
in
loopne
mov
mov
test
ja
dec
imul
ds
dec
add
dec
fmul
aad
dec
cmp
mov
adcl
cmp
xor
jge
cmpsb
loop
mov
pop
add
add
inc
popf
test
add
dec
and
dec
movsl
pop
and
xchg
dec
loop
popf
dec
int3
jmp
pop
xchg
dec
movsl
or
out
and
dec
xor
shrl
pop
mov
mov
test
push
xchg
fs
mov
dec
iret
pop
lods
push
sub
or
js
push
xor
int
shll
sub
scas
mov
fisubs
pop
lcall
daa
mov
mov
xchg
pop
cs
jnp
mov
pop
pop
mov
mov
ljmp
sbb
pushf
stos
pop
loope
xor
loope
sbb
lret
ror
lock
jae
push
arpl
dec
dec
mov
mov
jae
aaa
lock
inc
and
shrb
icebp
into
xor
scas
jle
sbb
or
js
or
aas
add
mov
xor
push
mov
jnp
xor
xor
popa
pop
xor
inc
repnz
cmpsb
hlt
lret
cmc
incl
lock
inc
xlat
cli
pop
ljmp
or
and
mov
sub
add
bound
sbb
pop
pop
jns
sbb
mov
popf
aas
arpl
cwtl
push
leave
sub
jmp
mov
leave
xlat
int
fsubrl
add
sub
cwtl
xor
push
or
fnsave
xchg
pusha
xor
inc
xchg
and
adc
ret
jns
dec
cmpsb
mov
xor
mov
xor
movsb
out
push
mov
stc
lret
ja
ds
cmp
aam
inc
pop
mov
lcall
xor
ja
test
mov
inc
sbb
pop
push
xor
fs
aam
inc
and
xchg
rcl
mov
test
aad
dec
cmp
push
lahf
int
inc
stos
loope
or
lret
ficomps
sub
adc
pop
pusha
jle
lcall
jae
arpl
mov
push
and
mov
lea
std
mov
movsl
ja
cmc
adc
jne
popf
and
add
into
or
mov
mov
mov
data16
fidivs
jno
pushl
scas
pop
cmpsl
aaa
pop
je
lods
xchg
ljmp
popf
jnp
or
push
sbb
adc
clc
lds
sbb
subl
mov
mov
jne
out
xchg
rolb
inc
movsb
ret
mov
push
or
rcrb
dec
enter
repnz
dec
xchg
daa
add
mov
stos
add
mov
mov
stos
stc
cmp
pop
test
mov
pop
mov
popf
out
ret
jno
gs
in
and
xor
jae
movsl
in
lret
mov
ja
fisubl
fistpll
out
filds
out
or
lock
jmp
adc
in
cmp
or
add
mov
inc
inc
leave
pop
lock
mov
shlb
popf
add
xchg
mov
dec
xchg
or
xor
push
pop
add
cld
adc
into
pusha
mov
push
sub
jl
mov
lock
iret
out
xor
sti
cltd
iret
out
fbstp
lret
sbbb
hlt
mov
xchg
das
inc
inc
cmp
scas
sbb
mov
xchg
jae
push
sub
or
pop
xchg
adc
cmc
cmp
push
dec
adc
cwtl
test
aas
pop
xchg
fisubl
jecxz
lock
imul
fincstp
sub
adc
dec
lods
lock
xchg
pop
push
fucomp
es
jns
or
cmpsl
test
pop
fisttpll
jb
pusha
outsb
movsb
lcall
mov
push
xor
lret
xor
xchg
jo
dec
nop
jge
cmpsb
push
adc
pop
dec
xor
rol
mov
push
shlb
jne
or
addr16
ljmp
fisubrl
xchg
stos
jno
leave
rcl
imul
dec
cltd
lea
pop
jns
cmpsl
rol
inc
mov
in
test
add
inc
shlb
cmc
xchg
ss
mov
cmpsb
dec
push
arpl
push
mov
xor
mov
enter
mov
jb
push
neg
add
pop
shrb
jmp
js
outsb
cmpsb
out
jb
mull
jp
loope
adc
sbb
int
mov
into
xor
push
jnp
add
jbe
out
decl
loope
dec
add
sub
outsl
sbb
imul
sub
jno
int3
jp
dec
cmpl
sbb
hlt
and
sti
dec
mov
xchg
cmp
adc
jne
pushf
cmp
std
lret
repnz
icebp
rolb
sub
lahf
or
and
mov
out
inc
dec
sub
cmp
xchg
jns,pt
add
lods
xor
loop
xchg
fisubrl
insb
cmp
sar
jbe
sub
mov
cmpsl
lds
imul
adc
mov
mov
enter
movsb
scas
jb
or
movsl
push
inc
pushf
imul
push
sbb
subb
in
push
mov
jle
fucomip
fidivrl
mov
push
lcall
lahf
xor
push
jno
fistpl
inc
fisubrl
xor
dec
jg
pop
lods
loopne
cli
out
mov
push
shl
clc
pop
or
int3
mov
jae
popf
xor
push
xor
pop
push
repnz
push
stos
sub
ss
xor
movsb
test
in
lcall
cmp
ja
pcmpgtd
movsl
pop
stc
and
cmpsl
adc
jle
adc
mov
sbb
dec
inc
rcrl
sub
std
mov
mov
inc
arpl
lock
mov
cmp
iret
push
loop
mov
movl
out
loop
pushf
iret
movb
push
lar
filds
push
xchg
mov
push
lahf
test
adc
aam
sub
jp
in
out
sub
or
dec
pushl
or
movb
lret
pop
or
push
jae
out
dec
jl
mov
xchg
cltd
icebp
jno
fcomp
jbe
in
xchg
mov
inc
inc
mov
stos
cmpsl
inc
repz
call
cmp
gs
xchg
out
fwait
ret
inc
ja
jecxz
jb
push
stc
cltd
xchg
fstps
out
negl
jns
fwait
std
insl
nop
pop
arpl
xlat
push
jmpw
push
lea
std
mul
out
hlt
rclb
pushf
xor
sbbl
jmp
jecxz
pop
outsl
mov
hlt
cmp
sahf
sbb
incb
and
inc
sti
in
and
cmp
pop
mov
shrl
cmp
mov
push
or
or
mov
push
testb
mov
ret
adc
push
leave
stc
daa
loopne
lahf
adc
arpl
dec
out
orb
cmc
adc
mov
sbb
stos
push
stos
cmp
scas
xor
sti
xchg
aam
adc
and
rcrb
pop
sub
pushf
gs
cmpsb
mov
lds
fsubs
out
shrb
adc
movsb
imul
dec
dec
mov
mov
std
int3
insb
mov
fmuls
fisubl
dec
sbb
jg
repnz
data16
mov
movd
pop
jge
and
je
mov
dec
es
fmul
shlb
inc
movsl
dec
xor
jno
sbb
cmp
loope
pop
sbbl
out
jp
adc
hlt
outsb
repz
mov
or
sbbl
ljmp
fcoms
sbbb
cmpsb
cmpsl
push
cmp
rcll
les
push
add
movb
sbb
subb
jmp
mov
psllq
or
aaa
pop
movsl
jp
shr
sbb
scas
xchg
loopne
push
lret
outsl
xchg
and
lret
aas
movl
mov
mov
mov
loopne
arpl
lahf
adc
inc
cmpsl
test
add
sub
leave
out
lods
sub
jno
ja
xor
test
leave
popf
mov
ret
out
lret
pop
mov
icebp
sub
aam
addl
jg
xor
fistpll
adc
mov
or
lcall
mov
movsb
fmulp
mov
adc
cld
xchg
adc
xchg
mov
push
pop
daa
add
lcall
cmp
andl
lds
xchg
lret
decb
mov
in
insl
xchg
loopne
mov
jnp
pop
rclb
test
insl
mov
xlat
jbe
out
clc
push
std
cld
adc
dec
add
inc
adc
subb
and
dec
pop
ret
loopne
test
shlb
rol
sub
jae
in
rcr
imulb
negb
addr16
ss
aad
arpl
sub
mov
leave
aad
icebp
pop
cmpsb
out
bound
lock
jg
xor
dec
mov
sub
pop
mov
push
lock
cmp
dec
xor
inc
cmpsb
mov
in
jne
in
movsl
fiadds
pusha
xchg
in
jmp
idivl
adc
push
jns
adc
sub
icebp
js
push
cli
scas
sub
imul
icebp
xchg
adcb
out
popf
push
stc
lea
arpl
cli
loop
pop
aas
pop
stc
push
in
pop
lcall
jl
jb,pt
pushf
inc
sbb
pop
sahf
loope
push
xor
xor
adc
aad
aam
sbbb
dec
or
popf
mov
mov
inc
sbb
popf
pop
mov
les
xorb
jns
mov
lahf
idivb
stos
rol
lods
jg
enter
incl
dec
fistps
sbb
sbb
cmc
cmp
mov
shrl
cwtl
ret
xchg
scas
shll
test
sub
cltd
aad
and
sbb
ds
enter
mov
inc
aad
mov
xor
push
pop
inc
jb
pop
xchg
sub
stc
leave
xor
mov
pop
sub
dec
aad
cmpsl
sub
mov
ret
leave
or
and
mov
add
dec
insl
rol
inc
rolb
rcrl
inc
push
pop
movsl
ljmp
mov
test
push
sbb
pop
inc
pop
xchg
insb
mov
cmp
arpl
fbld
pop
sub
adc
rorb
shrb
mov
adc
xor
mov
adc
xchg
rcrb
add
adc
push
in
mov
jg
sub
into
insb
lret
js
movl
or
mov
fisttps
es
adc
ds
jecxz
mov
aad
addl
aad
nop
add
and
sub
inc
bound
sbb
add
sub
aad
push
push
xchg
shll
inc
or
cwtl
jno
leave
out
mov
adc
ljmp
and
lcall
testb
or
inc
hlt
push
jle
adc
adcl
sbb
sarl
add
loope
mov
jecxz
pop
imul
add
inc
in
jl
add
out
cmp
cmp
jb
xor
jo
mov
jns
sahf
jl
cld
call
or
sub
ja
xor
clc
dec
mov
sahf
pop
test
cmp
sub
rcll
js
int
xchg
xorb
jmp
jno
dec
cmpsb
jne
fldenv
xlat
stos
push
jbe
shrl
push
or
pop
popf
sbb
pop
inc
sahf
pop
mov
cld
mov
inc
adc
push
xlat
xchg
adc
and
or
addr16
inc
jl
sbb
mov
cmp
mov
fcmove
jns
in
push
lahf
fisttps
push
in
fsubrs
inc
push
adc
push
mov
enter
ret
jecxz
fadds
aas
jl
xchg
insb
js
insl
jp
mov
ja
test
dec
push
popf
or
jge
sbb
push
xor
adc
clc
mov
cmpsl
ss
sbb
popa
icebp
dec
stos
ljmp
clc
insb
sbb
jno
jg
imul
test
jbe
and
and
mov
loope
and
js
pop
cmp
fs
negl
decl
xchg
into
test
pop
jo
mov
mov
ficoml
hlt
cmp
push
jo
mov
jne
daa
fsubp
icebp
lea
movsl
jnp
ljmp
enter
or
xor
jmp
adc
enter
call
rolb
or
dec
push
insb
cltd
js
mov
inc
out
test
loop
aad
cmp
inc
push
insl
xlat
in
popa
andnps
dec
and
push
push
inc
in
popf
xchg
jo
mov
enter
daa
rolb
call
jns
popl
jne
int3
or
repnz
cmpsl
sbb
jbe
andl
xor
mov
sbb
movsl
cmp
jae
outsl
roll
in
push
lcall
sbb
push
pop
scas
push
aas
pop
jg
or
lahf
sbb
push
call
fwait
cld
in
daa
add
jmp
dec
push
push
pop
std
adc
sub
das
and
aaa
lods
dec
in
dec
int3
xchg
in
pusha
faddl
push
dec
adc
scas
ror
js
xchg
xchg
and
insb
popa
or
popf
imul
les
inc
int3
iret
sub
aas
cmp
jmp
fs
lock
jae
mov
into
ss
mov
out
das
cltd
fmul
cmp
pop
xor
ret
inc
sbb
dec
push
leave
lcall
push
fbld
and
mov
popf
sub
push
cmp
lds
std
mov
test
and
xchg
or
das
outsb
cmpsl
lcall
xor
pop
decl
arpl
pop
dec
jne
dec
ja
cmc
iret
sbb
xlat
mov
xchg
loopne
push
sub
jg
and
fnsave
movsl
add
mov
addr16
int3
sbb
iret
test
in
fldt
popa
lret
ljmp
mov
push
stc
lret
push
iret
insl
repz
xor
push
add
cmpsb
aas
mov
xchg
dec
inc
and
pop
cwtl
daa
popa
push
and
xor
cld
cli
shll
fwait
lahf
fcoml
xor
lahf
out
cli
aad
sbb
xor
nop
dec
adc
not
pop
in
fiadds
mov
push
add
sbb
mov
jbe
and
dec
push
adc
stc
xor
or
xchg
daa
lahf
sub
std
loope
cmpsb
movsl
fidivs
or
or
mov
mov
mov
add
mov
mov
dec
xor
fistps
scas
fstl
add
push
outsl
add
push
popf
add
cmp
std
push
mov
clts
sbb
out
and
push
jns
and
das
jne
iret
cmp
movsb
inc
and
mov
fisttpl
in
cmpsb
xchg
aas
fbld
or
xchg
movsl
popf
std
data16
jbe
mov
mov
mov
fidivs
pop
cmp
gs
test
sbb
jecxz
add
scas
in
add
leave
and
sbb
cmp
pop
xchg
sahf
ja
inc
dec
mov
fcoml
int
loop
sbb
pushl
pop
adc
popf
pop
out
mov
xchg
orl
fsubl
xor
cmpsb
push
jle
addb
dec
push
lcall
pop
jns
mov
inc
jl
dec
mov
lods
fnstcw
sub
pop
data16
aas
mov
sub
movsl
scas
fists
stos
in
sbb
mov
xor
push
jbe
pop
push
mov
mov
in
xlat
inc
and
push
xlat
dec
gs
in
orl
sub
inc
aas
test
aaa
mov
call
aam
imulb
mov
cmp
stos
inc
adc
pop
pop
dec
ja
dec
mov
inc
sbb
adc
std
sahf
inc
sarb
lock
xor
mov
mov
push
dec
dec
dec
ljmp
imul
lret
inc
mov
ret
jbe
adc
mov
or
clc
or
gs
popf
ret
aad
cmpsl
into
or
xchg
mov
mov
jg
stc
stos
jo
sub
jbe
bound
iret
sbb
ss
sti
test
pop
cmp
jge
rolb
push
sbb
arpl
and
aam
dec
mov
iret
adc
jge
and
fldl
jns
ficoml
addr16
dec
cs
cli
fstpl
popf
jl
dec
gs
scas
push
scas
mov
sub
push
xchg
mov
insb
pop
or
cmp
in
pop
fidivl
shl
aam
std
pop
idivb
mov
addb
mov
rcrl
aas
lcall
adcl
cmp
mov
ret
mov
in
dec
mov
mov
popl
loop
jns
aaa
icebp
jp
add
cmp
xchg
push
push
inc
pop
xor
push
push
adc
xchg
push
mov
or
das
sbb
xchg
icebp
loopne
cmpsb
gs
inc
dec
loope
gs
mov
je
inc
add
xor
es
cs
or
ljmp
inc
jno
fwait
into
les
xlat
sbb
and
mov
repz
or
jns
push
scas
adc
lcall
add
jae
pop
sbb
insl
xchg
push
xor
jg
jp
jg
sub
xlat
adc
sti
jno
push
dec
mov
fwait
and
push
sti
insl
fsubrs
int3
sahf
jecxz
shlb
pop
mov
mov
negb
or
lahf
jl
fiaddl
cmovns
mov
lods
imul
cltd
movsl
fsts
mov
push
jne
mov
fcmovu
cmp
mov
icebp
push
mov
or
ja
out
cld
cmp
mov
inc
and
mov
jns
popa
mov
hlt
lret
lret
xor
ret
mov
call
aaa
subb
nop
jecxz
xchg
dec
hlt
xchg
test
out
push
lret
out
lret
in
jns
push
mov
mov
mov
jns
pushl
lcall
bnd
pop
cmp
sub
mov
mov
cmp
jge
xchg
stos
notb
enter
sti
sbb
xor
cmp
jbe
cmp
movsl
out
jle
dec
adc
push
test
add
inc
cmp
mov
cmp
push
out
repnz
and
dec
dec
inc
ja
bound
dec
iret
jbe
repnz
mov
pop
adcb
ja
test
divl
cmp
insl
pop
jg
push
test
inc
sub
push
cmp
mov
stos
jp
roll
xchg
xlat
and
insb
fistpll
push
fstp
aam
popa
mov
sbbl
jae
fstps
xchg
jne
ret
enter
lcall
stos
ja
je
outsb
mov
lods
pop
or
stc
in
cmp
into
mov
jp
fwait
sub
test
mov
int
pop
ljmp
xchg
out
cltd
xor
in
rcll
repnz
in
xor
and
lock
fninit
sub
hlt
jmp
mov
mov
jne
jnp
cmc
mov
insl
add
movsb
push
mov
nop
jge
push
bound
pop
movsb
or
push
adcb
in
mov
sbb
inc
sub
movsl
mov
and
cs
loopnew
fimull
push
cmpl
push
notl
xchg
and
adc
aas
loope
pop
mov
popl
pop
sahf
dec
jg
fmuls
dec
xchg
inc
mov
adc
cmp
sti
xchg
vsubsd
ret
sbb
popa
jg
xchg
mov
inc
xchg
push
mov
xchg
and
scas
ja
xlat
mov
leave
stos
pusha
movsl
mov
push
or
cmp
cli
aam
es
push
in
je
movsl
rorb
es
std
inc
roll
pop
sahf
sbb
nop
push
ficoml
insl
add
push
cmpsb
or
fimull
fwait
cmpsb
push
and
inc
lcall
out
pop
frstor
lahf
in
int
jno
mov
mov
cmpsl
rcll
and
stos
dec
jb
test
in
xor
cli
fsubl
push
adc
dec
rcr
outsb
into
mov
mov
xor
push
cmpsb
lods
icebp
sub
inc
dec
fld
xchg
cmp
mov
ljmp
add
call
ja
daa
jg
enter
sahf
add
lret
xchg
stos
fwait
push
inc
stos
or
adc
ljmp
bound
cmp
and
imul
jmp
fadds
xchg
dec
cmp
outsl
lods
and
fidivs
insl
mov
fsubs
add
xor
or
sbbl
sub
outsb
dec
je
jecxz
xor
sbb
addr16
sub
or
add
sbb
fiaddl
clc
mov
jge
test
mov
mov
dec
mov
sub
lret
jl
or
cmc
iret
ficomps
sub
or
addr16
push
cmpl
ja
stos
dec
cmp
addl
mov
jns
imul
int3
mov
out
xor
pop
sub
push
xlat
cld
and
pop
jg
and
aad
xchg
adc
inc
hlt
mov
and
sub
mov
push
xor
jbe
mov
stos
add
cs
movsb
inc
adc
mov
nop
ficoml
pop
cmpsl
pop
aas
sub
inc
inc
lods
adc
adc
inc
pop
mov
in
loopne
push
pop
jo
mov
js
add
movsl
cmp
xorb
and
clc
fistl
addl
sarb
mov
jecxz
popf
or
clc
cwtl
cmpsb
pop
pop
movsl
pop
pop
scas
lods
cld
lcall
cmp
adc
xchg
xchg
js
jbe
push
out
lret
fwait
xchg
fwait
stc
mov
mov
add
sbb
test
testl
sub
jl
pop
sub
xchg
scas
mov
mov
and
in
int3
pusha
inc
mov
sbb
dec
inc
mov
mov
push
outsl
pop
jbe
stos
test
mov
mov
lock
adc
sar
jnp
ja,pn
scas
mov
xchg
sbb
das
arpl
adc
jns
aad
les
mov
adcl
bound
mov
sub
shll
out
into
inc
mov
ljmp
xor
mov
divl
cmp
sub
jecxz
fisubrs
pop
nop
add
cmc
jmp
lds
xchg
out
adc
repnz
cmc
lret
push
sub
and
xor
scas
aad
sub
dec
cltd
lds
int3
inc
js
in
je
loope
sbb
push
pop
push
add
and
insb
push
fcomps
stc
pop
jae
xor
jle
xchg
or
shlb
jbe
fnstcw
fisubrl
mov
adc
or
cwtl
jle
in
jb
pop
pop
pop
pop
add
mov
pop
clc
mov
orl
xor
push
sbb
and
dec
fs
dec
filds
fdivs
pop
mov
addr16
mov
scas
insb
xor
mov
fld
shlb
mov
sub
push
push
jno
adc
fmuls
sub
add
aaa
clc
sbb
add
dec
mov
xchg
fmulp
mov
xchg
rol
into
dec
rcr
mov
cs
pop
push
push
cmpsb
test
out
not
rcl
and
adc
pushf
faddp
lea
repz
inc
push
ret
lret
test
sbb
mov
int
in
mov
ret
xor
or
xlat
mov
push
pop
frstor
jbe
loope
push
cmp
aad
pslld
and
or
mov
lods
dec
mov
rcl
cwtl
fwait
cmpsl
add
mov
cmp
sar
mov
inc
std
ja
mov
and
nop
into
push
call
push
cmp
cmp
cwtl
xrelease
push
mov
ja,pn
mov
xor
mov
jmp
sub
pushf
xor
popa
iret
and
mov
xchg
aam
adc
and
push
mov
push
movsb
add
sub
rorl
stc
xor
xchg
mov
scas
pusha
xchg
sbb
loopne
add
js
mov
movsb
or
jecxz
pop
ja
jl
xlat
loope
out
scas
addb
jge
xchg
js
add
orl
fistpl
mov
pop
adc
jmp
push
cmpsl
aas
cli
out
pause
jns
fstpl
and
clc
xor
mov
dec
popf
and
inc
js
mov
lea
push
movsb
inc
or
adc
je
loopne
pop
lock
pop
ret
adc
add
mov
push
xchg
divb
add
jmp
in
enter
jbe
cmp
sbb
out
mov
in
adc
out
or
and
and
ljmp
andl
jb
dec
jne
dec
jo
mov
xchg
cwtl
clc
fldt
jmp
stc
inc
pop
add
notl
inc
push
daa
shrl
insl
xchg
mov
pop
test
sbbl
movsl
sub
movsl
cmp
push
lret
rcrb
out
push
pop
pop
ss
xlat
xor
adc
enter
pop
hlt
sarb
or
test
jae
xchg
aas
mov
push
push
div
or
ss
je
dec
je
or
inc
or
bound
aad
pop
setle
xor
inc
push
aaa
push
nop
ljmp
dec
push
sub
or
test
mov
and
or
sahf
and
insl
pop
jns
movsl
scas
out
into
jge
mov
mov
pop
stc
outsl
xchg
rorl
mov
js
jmp
fimuls
xor
cmp
dec
mov
cltd
test
testb
add
xor
leave
adc
nop
pop
jmp
mov
shr
fistpll
ljmp
insb
flds
cmp
inc
xchg
sbb
lahf
aas
nop
jnp
mov
xlat
test
cmp
and
pop
and
pop
lahf
fidivl
dec
push
pushf
scas
dec
insb
movsb
mov
xchg
and
mov
pop
ret
jg
or
dec
cmpsb
repz
ja
mov
les
add
je
out
hlt
dec
fldt
add
jno
xlat
inc
jecxz
sarb
push
loopne
jno
popf
in
repz
int
xor
xchg
loopne
pop
jbe
xor
xchg
pop
out
mov
jp
fsubrs
push
ljmp
mov
mov
pop
mov
mov
push
cmpsb
dec
fldenv
cld
shrl
aas
jmp
and
push
push
xor
das
xlat
cmp
data16
push
insb
loopew
dec
ret
xor
jbe
addr16
adc
mov
fsubrl
insb
sbb
push
cmp
repnz
jg
test
cmpsl
arpl
inc
add
fsts
andb
pop
loopne
jbe
int
jecxz
push
add
push
jmp
jmp
iret
dec
push
ljmp
or
test
cmp
xlat
movsb
mov
or
cmp
daa
jnp
imul
or
cmp
pop
shll
push
jg
mov
xchg
push
bound
xor
movsb
loop
jp
ja
mov
xor
pop
mov
jnp
push
jg
mov
mov
incl
mov
dec
in
push
xchg
int3
ret
mov
test
repz
xor
popa
xchg
pop
movsl
test
cmp
push
push
sbb
int3
rol
xor
ficoms
mov
cmpsl
dec
test
mov
and
scas
jo
mov
decl
pushf
cltd
movsl
sub
mov
xorb
xorl
xchg
jmp
inc
nop
and
sbb
sbb
mov
iret
pop
sub
mov
test
imul
in
and
add
adc
push
fdivs
sbb
pop
mov
ret
cmp
lcall
adcb
mov
stos
lret
arpl
jae
pusha
int3
mov
call
lds
cli
mov
sbb
or
ret
or
xor
fs
iret
cmp
insl
enter
and
test
sbb
jmp
cmpsl
outsl
jle
add
mov
lcall
push
and
jno
int
mov
leave
roll
jno
sub
push
xchg
cmp
lcall
cmpl
xor
mulb
mov
pop
dec
aad
outsl
fbstp
mov
addr16
stos
add
orb
popf
dec
mov
jbe
lret
out
les
cmpsl
lock
std
mov
repnz
icebp
jbe
fs
mov
cmp
dec
or
sahf
fwait
and
pop
xor
push
pop
sub
out
dec
add
adc
push
xor
xor
jg
pop
cmp
sub
push
xchg
and
mov
pop
inc
sub
mov
pop
add
cmovb
inc
bswap
out
mov
cltd
pop
lods
push
cmp
fwait
pusha
mov
push
xor
inc
lret
leave
mov
js
mov
sbb
xchg
mov
dec
pop
push
cmp
call
adc
fimuls
out
movsb
outsb
aad
stos
pushf
scas
push
hlt
stc
cmp
push
call
and
jo
xor
sub
or
xchg
adc
loope
inc
push
test
pushf
mov
cmpl
imul
lret
sub
loop
insb
daa
jno
mov
popf
negl
pushf
out
mov
cmpb
inc
xchg
and
mov
fidivs
hlt
dec
ds
xchg
aas
movsl
xor
and
mov
xchg
jnp
cmpsb
add
push
mov
sahf
push
incl
jp
inc
mov
add
nop
pop
movsl
icebp
lcall
lcall
imul
lock
push
jle
and
mov
das
je
imul
fsubp
mov
xor
dec
int3
leave
pop
xchg
in
sbb
sbb
mov
repnz
and
cmp
mov
jb
mov
test
fdivrp
jge
jmp
sar
arpl
dec
lcall
and
pushf
push
xchg
mov
jne
test
scas
cltd
adc
xchg
add
xchg
cmpsl
pop
fadds
jg
cmp
mov
jns
dec
pop
iret
movsb
mov
call
xchg
call
shr
popa
or
stc
dec
inc
cld
add
and
addr16
pop
jo
mov
movb
push
add
cmc
repnz
push
pop
sub
stc
mov
fcoms
aas
pop
mov
mov
pop
or
mov
adc
or
daa
xchg
jmp
sub
mov
mov
pop
and
stc
pop
xor
es
arpl
cmp
and
push
stc
sbb
int
xorb
enter
std
pop
jmp
push
fbld
outsb
test
test
mov
adc
jl
dec
daa
lods
xchg
push
mov
xor
jbe
or
mov
mov
lahf
sub
clc
testb
adc
xchg
test
mov
push
call
movsl
and
push
jne
repz
divl
ja
mov
xchg
lods
in
scas
sub
popa
and
ret
fsubr
cmp
sbb
and
lret
mov
test
jg
and
pop
pushfw
pop
push
mov
pop
aas
insb
push
xchg
or
popa
xor
jnp
lret
mov
test
loope
cli
mull
stc
scas
cwtl
fsubl
in
inc
jb
nop
pop
aad
xchg
addr16
jp
lock
sbb
cwtl
das
sub
imul
push
clc
test
adc
mov
push
cmc
xchg
dec
orl
outsb
mov
in
and
test
jle
push
movsb
rorb
pop
push
mov
scas
or
shll
cltd
xchg
xchg
in
rcrb
fsubl
xor
mov
jae
xlat
inc
jo
sbb
in
xor
fwait
stos
fistpll
lods
imul
roll
jne
pop
sahf
and
dec
test
test
adc
push
leave
jne
add
sbb
mov
push
enter
jbe
call
out
or
lahf
adc
mov
es
jle
and
gs
xor
add
jge
inc
or
lods
fstps
dec
cmpsl
cmc
aaa
cmp
xchg
mov
js
out
jge
push
cwtl
or
scas
js
sahf
aaa
and
adc
gs
mov
cmpsb
adc
push
adc
jne
push
mov
clc
insb
lock
and
xor
aas
ss
fmuls
sub
or
shr
ficoml
push
inc
xor
and
fldenv
push
faddl
adc
xor
jne
pop
jnp
das
or
fimull
jmp
xchg
xor
pop
add
push
xchg
and
popa
in
clc
xor
inc
cmp
cmpsl
movsb
call
ljmp
dec
test
aas
outsb
mov
daa
mov
mov
xlat
cmp
add
ljmp
das
addb
mov
and
test
jl
mov
daa
xchg
xchg
push
xor
mov
jne
movsl
push
lcall
and
lcall
shrb
sub
fildll
adc
into
mov
push
or
dec
lea
jnp
xchg
push
mov
push
jp
cli
or
jae
inc
mov
pop
and
cmp
stos
cli
das
sbb
pusha
insl
push
mov
xor
pusha
sbb
mov
xor
push
xchg
imul
movsb
mov
in
or
scas
fld
jecxz
mov
nop
mov
pop
jno
test
dec
test
fidivs
xor
mov
pop
das
ror
sub
xor
mov
add
ss
dec
mov
mov
and
jae
sbbb
push
arpl
inc
inc
jmp
or
dec
outsb
adc
sbb
ss
insl
pop
cmpsl
xorl
push
push
xor
sbb
xor
enter
imul
pop
clc
mov
jmp
jmp
mov
dec
test
in
fadd
jp
enter
jp
mov
arpl
inc
jo
inc
loope
mov
jg
jp
and
cwtl
lcall
clc
pusha
and
cmp
bsr
sbb
sbb
stc
and
lods
mov
fstpl
into
jb
sub
test
sarb
dec
stos
push
mov
clc
loope
jb
in
add
sub
test
jo
or
fbld
add
ror
popf
xor
pop
adc
sub
int
int
pop
sbbl
imull
stos
adc
xor
cli
xchg
lret
pop
push
fwait
mov
push
cltd
or
pop
inc
and
mov
lods
xchg
lds
pop
lret
jg
test
xor
xchg
mov
cld
lods
cmc
imul
mov
push
daa
test
call
les
jge
mov
repnz
xchg
sub
and
cmp
fidivl
cli
hlt
adc
and
push
ficompl
push
dec
add
hlt
jne
icebp
fs
jecxz
ljmp
pop
jbe
daa
sub
outsb
push
lcall
mov
push
or
push
and
jmp
imul
inc
push
push
and
and
fwait
ja
adc
xor
mov
stos
pop
sahf
out
mov
push
mov
cwtl
je
hlt
push
sbb
rol
jg
lods
lcall
mov
enter
pop
int3
not
push
add
mov
arpl
push
cmp
fnstenv
fisttpll
sub
divb
or
sub
cmp
call
dec
out
xlat
add
inc
push
mov
mov
mov
cmc
nop
ss
sti
cmp
inc
aad
mov
jg
hlt
js
faddl
rcll
adc
mov
daa
push
cli
cmp
xchg
xchg
call
inc
mov
mov
sarb
daa
jae
movhps
push
leave
pusha
rcll
loope
fimull
adcl
jnp
mov
mov
lock
movsl
inc
idivb
jg
outsb
jle
jp
adc
das
jns
pop
loop
cmp
push
arpl
xor
inc
cltd
xor
rorl
insl
das
jg
out
pop
push
leave
jmp
and
push
jge
jmp
test
pushf
js
mov
mov
dec
xor
xchg
pop
sbb
inc
mov
jne
push
or
cld
shrl
movsb
push
mov
mov
adc
rolb
insl
dec
pop
jnp
les
add
mov
test
sub
add
xor
mov
jb
ljmp
jnp
and
lcall
xchg
mov
daa
test
dec
mov
mov
xchg
dec
mov
loop
sbb
add
ret
xchg
mov
mov
sti
lret
and
aas
popa
sub
arpl
adc
outsl
sbb
adc
pusha
shlb
cmpsl
inc
mov
add
imul
hlt
in
xor
mov
or
pushf
or
data16
sti
ja
xor
xor
pop
decb
push
mov
pop
scas
xchg
adc
cmp
cmp
xchg
fucomp
iret
dec
dec
sbb
dec
dec
or
data16
out
mov
inc
ret
push
gs
decl
pushf
push
jns
adc
int3
push
mov
inc
loop
fwait
movsl
pop
push
gs
lret
leave
lods
jno
test
dec
les
lea
pop
cmp
and
cmpsb
je
out
lea
mov
cmc
movsb
or
dec
ljmp
add
fistps
cmp
mov
icebp
mov
shll
inc
push
cltd
dec
movsl
add
add
xor
shlb
add
push
pop
dec
xchg
mov
add
pop
push
or
jae
out
outsb
pop
and
lcall
dec
pop
mov
insl
add
sbb
mov
xor
ret
adc
lods
pop
cmp
cmpsb
orb
bound
add
aam
inc
push
and
dec
lahf
ds
or
jle
add
xchg
into
pop
cmp
jbe
adc
iret
sbb
jl
inc
sbb
or
mov
push
scas
dec
enter
aas
adc
fidivrs
outsl
repnz
shll
sbb
inc
jecxz
and
hlt
inc
sub
movsb
bound
out
pop
lahf
mov
ja
dec
fcompl
sbb
dec
lahf
testl
inc
xor
das
iret
mov
cmp
mov
and
stos
int
in
shlb
cwtl
aad
mov
xor
push
addr16
xchg
outsl
ss
filds
aas
stc
and
mov
add
xchg
rol
push
add
cmp
pop
out
dec
lea
mov
arpl
sahf
movsl
shl
mov
les
cld
mov
jmp
sbbb
xor
stc
sbb
into
outsb
xchg
cwtl
xor
popf
pop
sub
in
enter
dec
sub
jbe
push
lods
adc
inc
out
adc
lahf
jmp
stos
lea
pusha
xchg
xchg
mov
sahf
mov
movsb
cld
lods
lock
les
cwtl
sub
out
cmpsl
xchg
push
into
pop
je
jmp
xor
jle
xchg
sbb
jge
ds
pop
leave
mov
insl
cs
cld
std
add
out
lock
adc
dec
shlb
xor
xor
gs
out
sub
ret
pusha
xor
arpl
mov
fmull
stc
in
cmp
inc
rcr
mov
out
or
or
inc
adc
sbb
in
outsl
sbb
lret
stos
add
cmp
adc
cmpsb
or
mov
mov
lods
and
sub
inc
ret
add
addr16
inc
sub
in
mov
movsl
sbb
inc
sti
fbld
push
dec
cli
sub
push
adc
pushf
xor
and
pop
cmc
xchg
sbb
rclb
outsl
jno
andl
loop
adcl
cmp
fists
inc
inc
cmp
xlat
aas
and
and
xchg
int
fidivrl
lods
ret
mov
push
out
insl
stos
stos
imul
xchg
pop
sub
adc
aas
outsl
sbb
imul
push
xchg
add
mov
faddl
push
ljmp
push
jmp
pusha
mov
inc
cmpsl
inc
push
repnz
xor
cmp
mov
xchg
ja
pop
out
int3
mov
push
fistpll
sbb
mov
fisubrs
rcrl
shlb
mov
xlat
lods
jno
mov
jge
mov
push
test
imul
out
push
cmp
inc
in
mov
xor
ja
out
stos
sub
xchg
subb
cmpsl
in
adc
enter
cs
xchg
and
mov
adc
sbb
call
push
sub
sbb
bound
insb
mov
or
pop
int
notb
incl
jecxz
aam
ljmp
ficoml
dec
mov
xchg
jecxz
inc
pop
push
hlt
xlat
jecxz
fwait
sbb
icebp
cmp
sbb
xor
adc
lret
push
jne
aad
outsb
add
dec
xlat
je
or
mov
lret
dec
pusha
bound
arpl
pop
sbb
dec
jno
mov
pop
insb
jb
add
arpl
mov
shll
mov
or
insb
jg
lds
cmc
mov
int3
test
and
jno
lds
xor
sub
cs
xor
xchg
mov
pusha
cmpb
mov
mov
dec
jmp
shrb
lods
sub
ret
sub
push
int3
mov
xchg
mov
fs
mov
mov
pop
pop
xor
xor
mov
sub
jae
aam
cmc
stos
xchg
dec
popf
cmpsl
lahf
sbb
cld
ljmp
test
out
jnp
adc
push
nop
xchg
movsl
mov
in
xor
inc
or
in
adc
mov
icebp
int
out
inc
mov
inc
bound
add
dec
ljmp
inc
sub
pop
jae
or
ds
sarb
mov
xchg
dec
std
mov
das
in
lret
jbe
inc
push
mov
or
pop
dec
ret
fsubrp
sbb
and
xor
jg
mov
iret
lods
xor
and
mov
inc
or
xor
xchg
mov
adc
pop
and
xchg
dec
lret
sub
sbb
popf
mov
ss
and
fistpll
pop
xchg
xchg
xchg
out
lods
das
mov
sub
sbb
loopne
lahf
mov
cmp
loope
je
mov
xor
mov
out
sarb
mov
out
daa
push
mov
add
sub
adc
sub
adc
jb
jmp
inc
dec
mov
or
jmp
leave
out
jne
cmp
push
push
fwait
aam
std
jecxz
jg
mov
pushfw
negb
loop
fmul
leave
sbb
xchg
jb
in
pop
out
ret
in
mov
cmc
insl
nop
or
pop
or
les
xchg
and
mov
push
int3
lret
dec
rcl
cmpsb
repz
stc
adc
in
dec
jle
inc
mov
jnp
outsl
out
ss
mov
mov
lods
xchg
rcrl
int
xor
pop
jo
dec
stos
or
and
mov
mov
adc
imul
aaa
repz
cmc
xchg
outsl
pop
cmp
test
mov
pusha
or
push
int
lds
and
cmp
stos
sbb
adc
scas
pop
mov
insb
lds
popa
pop
inc
jge
add
lods
xchg
push
int3
loop
mov
mov
es
push
xchg
fisubrs
xor
dec
pop
popf
or
mov
mov
add
mov
popf
movsb
bt
loopne
cmp
fdivl
in
std
loop
aad
xchg
sbb
testb
call
adc
rolb
fcompl
mov
stc
dec
jmp
repz
popa
add
sbb
out
stos
sbb
repz
mov
bound
lea
outsb
jo
jecxz
cmpsl
iret
jae
inc
pop
pop
outsb
aam
subb
push
lods
push
in
add
shl
or
push
fstps
leave
in
pusha
cmp
enter
iret
popf
daa
das
dec
jbe
xchg
adc
xor
add
inc
lret
imul
mov
mov
dec
xor
push
lahf
xchg
in
test
mov
cmpsl
inc
jb
xlat
leave
xor
daa
inc
pop
rcr
pop
inc
xchg
clc
sti
gs
jne
scas
add
mov
gs
scas
imul
ds
in
orb
stc
adc
inc
std
sarb
mov
in
or
out
xchg
rorb
cmp
movsb
fs
xchg
pop
insl
int3
repz
std
sbb
mov
mov
xorb
rolb
loope
and
push
test
std
mov
dec
daa
sbb
jge
arpl
popa
inc
stc
dec
or
mov
out
and
rorl
fisttps
mov
sub
mov
loop
idivl
dec
push
xor
fidivrs
hlt
and
dec
mov
test
xor
leave
test
cmp
insb
daa
das
lret
in
sub
mov
jnp
mov
mov
imul
mov
ret
push
lods
int
repz
dec
mov
popf
inc
dec
stc
stos
mov
push
sbb
leave
inc
aad
cmp
cli
push
mov
xchg
or
sub
push
push
mov
fmulp
outsb
pop
dec
lret
add
lods
jb
pop
mov
cmpsb
mov
xor
sbb
bswap
mov
fnstcw
mov
mov
aad
xor
lcall
pop
sub
pusha
loop
sbb
add
cmp
pop
jecxz
repnz
js
iret
std
ret
loop
and
pop
jns
dec
xchg
xor
scas
mov
push
rclb
inc
mov
js
aaa
push
sub
inc
idivl
sbb
fwait
hlt
sahf
mov
jle
adc
nop
push
movsl
or
pop
aaa
jo
xlat
pushw
nopl
mov
dec
rol
hlt
dec
ror
dec
push
data16
pop
int3
ss
or
fiadds
out
mov
jle
jbe
pop
mov
add
ret
pop
add
inc
fadds
cld
fisubrs
mov
and
lahf
les
mov
incl
insb
ret
int
sbb
lods
xchg
jg
in
aaa
and
xor
inc
fs
rorl
pop
xor
imul
into
stos
lahf
js
sbb
insb
mov
jns
push
adc
stos
subb
push
filds
xor
push
stos
mov
iret
dec
scas
cli
push
push
aad
cmpsb
jnp
mov
mul
stos
loopne
pop
sub
es
xor
and
inc
fisubrs
into
xor
repnz
loope
cs
jmp
sub
scas
scas
lods
push
xchg
adc
cmpl
dec
push
stos
push
pushf
repnz
nop
xchg
fnstcw
xor
pop
push
and
outsl
xor
pop
jg
and
jmp
sub
push
pop
mov
xchg
fidivs
push
sti
pop
fs
push
mov
add
cmp
gs
cmp
dec
jmp
sub
push
je
push
adc
mov
mov
xchg
and
xchg
pop
jbe
gs
gs
add
xchg
pop
je
jo
in
xchg
es
into
cmp
int
cmp
add
mov
cld
test
daa
popa
in
pop
mov
or
int
scas
ss
cmp
stos
mov
aam
mov
push
lea
or
mov
inc
dec
shlb
ja
lds
and
push
push
je
pop
sbb
adc
xlat
or
jne
sti
dec
jmp
scas
pusha
push
ror
cltd
int
jle
jle
ljmp
orb
outsb
xor
enter
shlb
in
cltd
mov
pop
xchg
cli
addr16
jl
mov
xchg
loopne
xor
fdivrs
js
jmp
pop
adc
loopne
xor
cli
lret
inc
push
test
jl
xchg
inc
int3
push
stc
mov
icebp
insb
test
bound
movsl
in
testl
dec
cli
inc
je
xchg
sub
stos
jge
stos
jg
rorb
popl
xchg
sbbb
xlat
stos
add
aad
sbb
out
in
adc
sbb
cld
in
dec
sub
xchg
clc
mov
push
sahf
xchg
jmp
xchg
xor
cmp
sbbl
add
mov
mov
sbb
rcl
sbb
cmc
dec
addr16
or
add
xchg
test
fdivp
mov
dec
test
inc
nop
rorl
cmp
into
inc
mov
mov
fstpl
arpl
aaa
dec
push
and
jp
mov
lock
subb
adc
push
xor
fsubl
mov
rcr
mov
popf
sub
mov
push
and
insl
rorl
decl
push
xor
xchg
xor
mov
sahf
aad
pop
rclb
jge
out
xor
adc
mov
mov
lea
xor
in
sub
xor
jb
adc
pop
adc
or
xchg
cmpsb
sub
testb
fcompp
loop
or
xor
cmp
dec
push
xchg
add
or
pop
xchg
adc
xchg
scas
mov
and
andb
movsb
push
sub
enter
fnstcw
sub
mulb
sbb
mov
mov
loopne
aaa
mov
test
movb
hlt
stc
sar
inc
push
lods
dec
lds
and
or
clc
sbb
push
lock
push
xchg
dec
insb
jge
pop
cmovbe
sbb
leave
aam
sub
sub
and
lds
mov
sub
stos
iret
cmp
fiaddl
jge
sbb
push
int
movsb
js
push
pop
xchg
in
add
add
sbbb
sti
stos
cmpsb
jae
xorb
inc
das
push
jae
shlb
xor
push
lret
dec
adc
push
mov
cs
fisttpl
movsl
mov
cmc
dec
mov
daa
fcomps
push
pop
mov
test
fimuls
lods
mov
jge
stc
fdivrs
pop
cld
notb
xorb
icebp
adc
xorb
enter
add
mov
test
fisubs
cmp
sarb
jl
or
mov
in
mov
mov
mov
cmpsb
imul
sub
jp
aam
push
sub
test
icebp
lea
stos
xchg
inc
in
xchg
std
mov
mov
and
rcll
xchg
insl
lock
ss
out
jmpw
push
out
insb
insl
xor
jg
dec
gs
aad
stos
decb
lea
add
jno
fwait
xorl
imull
test
sbb
icebp
fs
pop
adc
cmpsb
mov
add
loope
xchg
mov
push
mov
cli
addl
jae
inc
and
loope
jmp
popa
and
sbb
gs
pop
xor
icebp
outsl
mov
cmc
rorl
fsubr
dec
add
sbb
sub
mov
jp
push
rclb
aas
cmp
shl
outsl
and
mov
in
mov
int3
cmc
push
jp
and
dec
xchg
lret
sub
js
sbb
adc
sub
push
repnz
mov
cld
frstor
mov
xchg
adc
lock
fistpl
in
popa
aas
adcl
sbb
jbe
fdivrs
adc
or
push
lds
mov
jecxz
pop
add
adc
or
je
xor
mov
lock
pop
mov
es
add
inc
stos
adc
and
or
jbe
xor
dec
push
xchg
movsl
in
pop
stos
outsl
sub
add
jb
push
mov
das
jo
insb
jle
jp
adc
cmp
push
in
and
aas
mov
mov
push
pop
mov
adc
insb
inc
xor
stos
out
and
jae
xchg
lds
enter
xor
jo
or
pop
xor
xor
fildll
sub
sahf
mov
pop
test
jnp
mov
xchg
sub
hlt
push
iret
jp
scas
roll
jo
and
dec
jo
xor
call
test
pop
cld
add
outsb
icebp
mov
test
lret
dec
popa
adc
mov
jge
mov
in
aad
test
sub
out
stos
push
std
xlat
pushl
cs
inc
inc
inc
loope
ljmp
dec
repnz
or
lea
jl
fldenv
lret
sbb
in
sbb
lahf
jbe
inc
jp
or
ret
cmc
lods
inc
pop
mov
out
push
rorb
xchg
sbb
shrl
packssdw
jb
dec
stos
jno
hlt
mov
mov
scas
xchg
imul
push
mov
or
lret
inc
insl
sbb
cmp
rcrl
fildl
jg
fcompl
cmp
in
out
cmp
mov
nop
mov
jo
adc
movsb
xor
stc
mov
adc
push
mov
scas
sbb
inc
loopne
push
inc
mov
gs
xchg
shrl
cli
fildll
xchg
or
mov
mov
sarl
sbb
dec
int3
xchg
push
in
sub
inc
imul
or
in
test
xchg
out
mov
add
xor
ficompl
std
and
popf
adcb
int
push
sbb
jae
pushl
mov
outsl
adc
fimuls
mov
mov
jne
std
mov
push
outsb
movsl
adc
out
mov
xor
daa
gs
clc
xor
mov
mov
lret
imul
push
dec
push
loope
pusha
xor
aad
push
sbb
jnp
push
xchg
fs
and
iret
push
dec
rolb
das
pop
jp
je
fs
jnp
rolb
xor
fstpl
push
adcb
dec
sbb
jg
inc
push
sti
adc
cmp
dec
or
fst
aas
mov
daa
ljmp
movsl
lods
pop
orl
repnz
mov
aas
sub
insl
add
xor
pop
xor
or
inc
loopne
movsb
fiaddl
or
mov
sar
inc
pop
mov
nop
test
testl
mov
jo
filds
or
adc
sbb
mov
mov
stc
adc
mov
push
mov
insb
pop
data16
sub
repz
push
fistps
push
hlt
sub
aad
test
dec
mov
lock
push
xchg
mov
lods
callw
push
nop
sub
loop
lock
sub
xchg
cmp
lock
adc
repnz
inc
cmpb
insb
add
jp
cli
sti
dec
xor
jecxz
xchg
dec
sti
fiaddl
and
lea
push
jg
mov
lds
xor
lds
sbb
mov
and
test
jmp
inc
mov
orb
add
lds
lea
das
pop
lds
jg
mov
popf
test
out
push
ljmp
lcall
xchg
int
loopw
mov
lret
push
iret
ljmp
pop
inc
jo
cmpsl
roll
popa
adcb
push
mov
movsb
clc
push
repnz
stos
fstpt
sub
out
dec
ret
lcall
sbbb
aaa
xchg
add
fsubs
cwtl
jnp
sbb
sbb
pop
lret
sbb
popa
js
dec
lea
mov
pop
pop
pop
insl
out
test
or
jnp
jle
jns
sbb
ficoml
lds
jp
and
sbb
push
subl
mov
push
ss
xchg
push
cmp
dec
lcall
mov
loop
and
movsb
adc
jno
mov
push
push
cmpsl
mov
cmp
out
mov
lods
xchg
ljmp
mov
mov
and
js
xchg
iret
into
clc
lret
jb
test
loop
mov
and
imul
push
mov
adc
and
cmp
mov
lret
test
in
lahf
sub
rcll
mov
push
sbb
dec
fadds
jne
pop
mov
ljmp
mov
fsubr
sbb
scas
push
jmp
mov
cwtl
pop
fldenv
xor
rorl
clc
in
es
xchg
lret
pushf
push
in
fildll
scas
mov
sub
push
sbb
push
call
aas
push
shrb
jge
popf
popf
inc
dec
ret
and
imul
push
mov
add
xchg
clc
and
push
movsl
jns
test
mov
push
sub
rorl
jg
xchg
inc
mov
jne
sub
leave
frstor
sbb
test
sbb
cwtl
clc
mov
icebp
dec
sahf
jo
mov
testl
mov
lods
sub
ds
push
test
push
mov
loope
jo
mov
dec
cltd
mov
addr16
cmpsl
cwtl
mov
enter
or
sbb
cmc
fcmovu
mov
jge
cmpsl
enter
sbb
clc
or
xchg
test
xchg
pop
mov
cli
sbb
cli
push
xor
in
sbb
xchg
pop
ficomps
fcoms
mov
daa
push
push
inc
dec
pop
push
lret
nop
xchg
xchg
jb
mov
lcall
int3
popa
inc
inc
imul
mov
pop
adc
or
mov
or
pop
jnp
dec
push
daa
es
dec
push
lods
lcall
insb
shrb
iret
adc
mov
rolb
mov
push
negb
out
mov
jae
pusha
enter
mov
fstpt
sub
lock
push
cmpsb
dec
enter
inc
mov
xor
lret
mov
jb
popa
test
cli
bound
pop
inc
inc
sub
cmp
loope
sbb
stos
xchg
mov
cmp
lods
bound
dec
jle
lods
jmp
sub
test
dec
loope
sbb
sbb
push
pusha
in
divl
jl
stc
addl
lret
mov
movsl
mov
cmpsl
dec
add
push
fdivs
xorl
sub
rorl
mov
push
inc
les
notl
inc
xor
out
inc
pusha
xor
and
insb
insl
cs
test
add
cmp
sbb
popa
fs
aas
imul
hlt
and
mov
jg
in
mov
dec
mov
xchg
hlt
addr16
fwait
jle
mov
add
push
jp
sub
leave
or
mov
rorb
sahf
fwait
add
inc
add
loope
jne
dec
push
int
in
add
scas
call
std
cld
imul
pop
jecxz
jg
mov
xchg
lret
sbb
shrb
aaa
jle
aam
fwait
rsm
pop
push
pop
ss
scas
out
rcrl
cmp
mov
ja
mov
pop
pop
cwtl
test
dec
sbb
add
ret
push
je
pop
mov
sbb
jge
fcompl
xchg
add
cmp
mov
pop
popa
fnstenv
xor
mov
ret
xchg
mov
or
push
pop
test
jo
sub
aaa
cmpsb
cmc
jae
outsb
rorl
lods
jl
and
in
pop
add
cmp
xor
adc
fildl
pop
jle
sbb
imul
jmp
js
dec
test
and
cmpsl
mov
lods
and
popa
cmp
inc
or
into
xor
xchg
sub
dec
mov
sarb
fidivrs
push
and
lock
outsb
testb
jbe
mov
ds
dec
lock
mov
enter
fwait
or
out
or
std
adc
and
xchg
mov
push
adcb
push
jo
and
subb
cmpsl
ds
das
mov
adc
inc
ja
xor
xor
or
mov
add
push
push
adc
add
or
loopne
mov
hlt
dec
mov
pop
mov
xchg
push
in
inc
adc
daa
lods
xor
sub
test
jne
out
add
sub
mov
inc
ljmp
imul
jp
ror
lods
push
jo
pop
sub
aam
mov
adcb
jl
scas
sbb
imul
arpl
mov
jecxz
leave
fisubrl
adc
xor
inc
mov
jbe
inc
scas
fmuls
mov
pop
nop
hlt
in
ficomps
clc
cmp
ret
inc
inc
dec
in
pop
sahf
cwtl
hlt
ljmp
sbbl
adc
cli
cmpsb
sub
mov
leave
or
jl
xchg
rcll
jp
jp
and
xchg
out
out
push
dec
outsl
mov
add
cmp
mov
mov
cmpsl
and
add
test
inc
lcall
pop
fsubrl
incl
out
jnp
lahf
loope
daa
cs
stos
shll
je
leave
popf
int3
rcrb
sbbl
icebp
es
jmp
ja
adc
mov
dec
jmp
dec
ret
test
outsb
test
add
push
sbb
adc
push
das
mov
test
jg
cmpsl
loope
cli
jne
sbb
inc
jb
cmp
xchg
mov
cmp
lods
jle
imul
test
pop
add
jnp
loop
out
jb
xchg
adc
cmovs
sarb
xchg
fidivrs
and
or
dec
lods
mov
push
leave
arpl
in
les
setl
stos
adc
enter
add
xor
nop
push
xchg
popa
add
and
ljmp
cs
pop
mov
test
inc
loopne
push
arpl
push
mov
push
call
pop
aam
les
test
clc
adc
pop
push
test
aaa
and
and
mov
push
pushf
sub
or
fbld
stc
adc
jmp
jecxz
push
sub
or
mov
and
pop
add
cmp
jno
sbb
mov
test
jmp
cmp
in
fdivr
out
lds
inc
loop
mov
lea
sarb
popa
scas
aad
scas
add
out
xchg
mov
into
sbb
adc
sub
outsb
std
aam
cs
lds
jns
pop
fidivs
ret
enter
loop
imul
mov
cmp
cld
add
sbb
and
sub
test
ljmp
ror
rcrl
pushl
ret
add
cltd
and
jno
mov
xchg
pop
addb
or
in
adc
rolb
mov
pop
mov
inc
push
je
fdiv
push
icebp
sbb
cmp
push
out
ljmp
push
clc
dec
add
shlb
out
addr16
repnz
xchg
outsb
movsl
test
jmp
pusha
xor
outsb
mov
jns
add
pushf
in
pop
push
mov
dec
aaa
pusha
sarl
pop
and
outsl
test
icebp
mov
add
daa
lods
sub
pop
fwait
xor
stos
sbb
mov
mov
push
or
repnz
sub
sbb
and
incb
sub
adc
cmpsb
push
cld
movsb
sbb
test
lcall
pushf
ljmp
cltd
scas
mov
rep
jb
bound
and
or
jmp
push
jo
sbb
aam
xchg
mov
mov
add
pushl
lret
mov
repnz
js
or
mov
sbb
stos
inc
sbb
test
xchg
outsb
xchg
cwtl
test
inc
rorb
sub
adc
stos
xchg
and
push
fbstp
xchg
lret
fsubrl
into
jo
sub
icebp
test
push
xor
sub
cmp
sub
jl
fwait
inc
jnp
insb
sti
call
adc
sub
push
in
jns
pop
mov
xor
mov
pop
das
test
mov
rcrb
jp
arpl
inc
aam
pop
fimull
mov
jg
or
jno
xchg
and
push
ret
inc
mov
ss
popa
mov
mov
pop
ljmp
das
scas
jno
xorl
jmp
js
add
push
shl
mov
mov
fistpl
mull
sti
repnz
sbb
fisubl
xchg
pop
push
mov
push
loopne
stc
or
subl
sbb
lret
mov
ja
cmpsb
mov
pxor
mov
jne
mov
jecxz
test
sbb
loopne
icebp
push
fcoml
adc
je
jbe
sub
mov
xor
jge
add
lock
out
cwtl
push
mov
adc
test
pop
dec
jle
emms
in
es
inc
call
pop
pop
cmp
fistpl
xor
bound
or
aas
call
int3
push
call
sti
insl
stos
popl
mov
pushf
mov
pop
stos
xchg
cltd
aas
and
and
pop
cmp
inc
jae
adc
push
sahf
daa
icebp
mov
cmc
jb
push
pop
add
into
mov
mov
cmpsl
mov
leave
in
test
testb
ret
fstsw
pop
cmpsb
mov
sub
push
fldl
add
pop
inc
jg
add
aad
aad
or
ret
lds
mov
jb
icebp
in
jmp
xor
adc
pusha
mov
fs
adc
pxor
cwtl
rol
shlb
dec
dec
test
ret
push
mov
daa
xchg
testl
sbb
push
adc
adc
add
dec
cmp
adc
pop
btc
lds
aaa
fs
or
iret
xchg
lods
call
jmp
lods
xchg
pusha
in
adc
icebp
push
lret
out
or
add
jp
xlat
inc
imul
xchg
cmp
or
ret
int3
cmp
or
and
push
xor
out
pop
sarl
inc
mov
cwtl
or
lds
jle
test
dec
pop
bound
inc
inc
xor
ja
or
pop
adc
xchg
stos
ret
xlat
push
dec
mulb
aad
mov
pop
add
and
ds
xor
pushf
inc
mov
xchg
or
cmp
lcall
mov
push
inc
adc
sahf
adc
cmpb
loope
iret
hlt
ret
inc
or
scas
mov
mov
dec
and
or
xchg
loope
mov
adc
sub
cmp
test
add
sbb
mov
mov
cmp
out
mov
or
fidivrl
xchg
add
push
out
and
xor
sbb
push
test
mov
cmp
mov
pop
aad
rclb
or
xchg
sub
pop
idivb
mov
int3
mov
hlt
add
sbb
pop
inc
xchg
movsl
xor
xchg
das
sbb
mov
inc
add
ss
mov
sti
add
inc
jns
sahf
jno
mov
push
xor
mov
inc
or
fimuls
push
rorl
daa
lods
and
in
mov
popa
pop
cmp
xor
sub
fadds
xchg
daa
test
inc
xchg
jg
into
mov
jle
pusha
shlb
jae
es
in
mov
adc
inc
mov
aaa
mov
bound
sahf
adc
ds
sub
add
push
out
insl
popf
nop
add
pop
push
dec
ds
mov
scas
mov
cld
cmp
daa
mov
call
dec
fadds
fldcw
adc
mov
push
aas
mov
sub
aam
rcr
fsubrs
addr16
enter
jno
mov
dec
xor
inc
push
pop
add
lahf
xchg
repz
adc
jbe
mov
out
fwait
ds
adc
outsb
xchg
adc
lock
sarw
dec
mov
mov
push
cmp
push
inc
xchg
fbld
repnz
push
jbe
inc
cmpsb
mov
jbe
adc
sbb
lea
inc
mov
out
popa
popf
sti
cli
repnz
push
xchg
into
adc
pop
jmp
cmpsl
out
cmp
mov
xor
push
cmp
popf
push
std
cmp
addb
push
jnp
pushf
pushf
out
add
push
jp
mov
xor
jno,pt
pop
push
sub
cld
scas
jmp
sub
xorb
call
std
aas
pop
inc
js
and
mov
inc
shll
mov
xor
cmpsl
xchg
mov
cmp
pop
incb
cmp
adc
sbb
orb
aaa
inc
loope
in
pusha
inc
dec
xchg
pop
cwtl
out
aas
mov
nop
lods
loop
xchg
je
inc
fmull
lock
and
mov
pop
es
sub
das
movl
xor
or
outsb
inc
and
or
and
cmp
sbb
cmc
add
lea
dec
fidivrl
test
mov
jno
pop
loop
int
pop
aam
arpl
fs
add
or
mov
adc
in
jg
jb
sbbb
jge
sti
aas
mov
lods
es
jp
dec
scas
sbb
pop
daa
xchg
in
add
jae
mov
xchg
je
xchg
add
imul
pusha
inc
jae
sbb
mov
arpl
fs
je
mov
aas
mov
cs
xor
mov
bound
hlt
push
jnp
xchg
mov
cltd
popa
rclb
test
fnsave
stos
in
or
movsb
push
ds
cmpsl
into
repz
mov
out
inc
jl
mov
pusha
push
or
mov
pop
xor
adc
daa
ljmp
adc
scas
or
mov
jmp
adc
out
adc
lret
cmpsb
in
arpl
sub
xchg
mov
fstl
inc
or
mov
icebp
jle
pop
sbb
mov
mov
mov
mov
mov
mov
pop
pop
je
les
into
sbb
loope
scas
xchg
sub
sub
mov
cmp
mov
adc
ficompl
test
out
mov
sarb
outsb
xor
insl
into
pop
inc
mulb
fsubp
adc
ja
test
adc
pop
popf
mov
popa
clc
sub
cmp
lock
jne
fcomps
mov
rorb
scas
fwait
push
mov
jmp
jne
jmp
adc
cmp
aad
push
iret
aam
incb
scas
add
ds
dec
sbb
xchg
or
mov
sub
dec
imul
and
lock
jmp
flds
or
sbb
outsl
xor
fcoml
shrb
rep
rep
or
push
xor
aas
dec
sbb
inc
jnp
cmc
mov
dec
pop
mov
out
ja
into
pushf
into
xor
push
adc
mov
sbb
pop
mov
out
iret
push
fmul
popf
jo
inc
scas
pushf
int3
mov
mov
dec
pop
popa
jae
add
cmp
push
and
add
push
jg
out
lods
add
arpl
dec
jge
gs
sub
in
mov
stos
repnz
dec
mov
sub
push
and
push
cmpsb
lcall
stos
and
and
mov
mov
push
cs
test
inc
cmpsb
js
aam
cwtl
out
stos
xor
sarl
add
xchg
sbb
mov
jo
mov
in
mov
adc
add
int
popf
sub
test
mov
adc
jnp
dec
daa
jmp
sbb
push
and
adc
xor
cmp
jbe
mov
jae
insb
push
arpl
or
jne
cmpsb
push
es
iret
add
push
sbb
mov
cmp
stc
nop
sbb
aaa
test
xchg
adc
mov
sbb
mov
pushl
push
or
or
and
lcall
dec
cmp
ret
cmp
sahf
outsb
mov
push
sbb
mov
push
push
xchg
rcrl
push
out
fiadds
cmp
ret
mov
or
cmp
aad
sub
pmaxsw
sub
outsl
mov
add
jae
lea
aas
mov
movl
pop
or
scas
negb
je
stc
lahf
push
mov
add
aam
add
mov
mov
xchg
cmp
js
ljmp
decl
cs
popa
xorl
inc
add
outsl
adc
jo
xor
xorb
sbb
loopne
les
pop
pop
into
loope
sbb
mov
ss
inc
mov
dec
lock
mov
imulb
outsb
push
pop
inc
xor
xchg
cmp
mov
dec
push
cmp
cltd
xorb
add
frstor
mov
mov
jbe
fnstenv
cmp
mov
lods
sbb
movsb
or
aaa
scas
fs
adc
inc
in
push
push
add
xchg
lret
sbb
mov
loope
add
sub
adcb
sub
xlat
pop
dec
into
popa
pop
dec
and
and
scas
xchg
gs
dec
imul
inc
movsb
sbb
sub
out
cmp
jl
stos
pop
lods
test
push
jo
stos
mov
stos
mul
shlb
out
icebp
int3
ror
fldt
dec
aad
and
loop
fistpll
jmp
subl
and
mov
mov
push
test
pop
mov
mov
cmp
sahf
incl
xchg
roll
es
test
lock
mov
out
xor
fadd
mov
nop
test
jp
ljmp
iret
pop
addr16
int
aaa
pop
cmp
movsb
in
insl
popa
cli
push
cmpsl
das
or
lret
rclb
push
jbe
mov
dec
xchg
inc
shl
jg
inc
mov
add
and
mov
jl
int3
cmp
shll
sbb
xchg
xchg
stos
data16
mov
imull
cmp
pshufw
jmp
xchg
icebp
xchg
lcall
sahf
mov
pop
xchg
fadd
stos
repz
push
cmp
ret
xchg
lock
mov
mov
cltd
std
aam
add
lahf
cmp
and
sub
fidivrl
mov
fstp
ds
fisubs
xchg
cmp
aaa
arpl
inc
in
mov
scas
test
or
lods
add
push
xchg
mov
jge
into
jecxz
dec
bound
jl
shl
xchg
hlt
jge
in
pop
adc
movsb
pop
mov
sbb
js
aas
xor
jmp
add
pop
or
sti
adcl
insb
cmc
je
icebp
sbb
mov
and
mov
shrl
ds
mov
test
insl
adc
loope
sub
mov
xor
adc
shlb
test
pop
cmpsl
push
fimuls
mov
lods
pop
adc
in
adc
jge
mov
bound
pop
std
push
push
inc
in
mov
popf
mov
stos
jae
dec
andl
ret
pop
xor
aam
sbb
push
push
orb
jb
ds
call
cmp
imul
ja
fnstenv
mov
in
jnp
pop
scas
pop
sub
jge
cld
rolb
es
cli
mov
sahf
pop
ja
not
pop
mov
sbb
aas
push
sub
test
imul
fmulp
lret
mov
mov
mov
lds
adc
mov
out
lods
addr16
das
stos
flds
xor
dec
dec
mov
pop
xchg
cmp
pushf
xor
xchg
call
ret
fsubrl
inc
add
movsb
xor
or
bound
mov
negl
adc
mov
fwait
sbb
push
outsb
xlat
xchg
sbb
and
insl
sahf
imul
out
popf
pop
inc
pop
iret
inc
rdtsc
add
dec
hlt
adc
sbb
dec
aad
cmpsb
push
push
mov
add
scas
loope
out
into
stos
xorl
cmp
dec
loope
mov
ftst
cmp
or
in
xor
rclb
dec
push
stos
imul
and
fsubl
cltd
mov
jmp
fstl
popf
pop
push
insl
xor
cmc
fldcw
dec
or
jmp
mov
ss
cld
idivb
and
cltd
cmpsb
movsl
and
aaa
das
jb
inc
lods
cmpsl
int
and
and
mov
or
cmp
xor
sbb
sub
fldl
xchg
cmpl
mov
fcmovnu
das
mov
rol
jb
les
popa
std
or
ficoms
push
sub
jecxz
into
loope
xor
outsb
pop
inc
sbb
cltd
andl
dec
cmpb
fdivr
lea
int
inc
pop
push
xchg
iret
aad
add
mull
mov
ficoml
push
mov
jg
mov
xor
in
mov
popa
jecxz
add
test
leave
adc
ljmp
in
pop
leave
sub
add
stc
dec
js
or
ds
push
popa
xor
test
in
mov
loope
and
push
jle
cli
inc
aas
cmp
das
push
cmp
push
xchg
jmp
jno
push
jb
vpcmpgtw
push
push
int3
dec
jb
ficoml
lea
inc
push
mov
in
sub
andl
mov
das
adc
sbb
ds
fsubs
push
and
mov
int
mov
push
fmul
scas
and
insl
pop
orb
in
mov
jo
jl
lcall
stc
add
fs
aad
imul
push
imul
adc
and
dec
sbb
jle
mov
cmpsb
jp
popa
and
sub
fldl
xor
fiaddl
pusha
and
inc
cmpsl
stos
xchg
or
cmp
xor
nop
sarb
cmc
je
xor
sti
push
inc
mov
mov
mov
xorb
ror
imul
inc
sub
jne
dec
adc
imul
notb
std
popl
jcxz
and
xchg
fsubrs
sahf
xchg
insl
out
pop
fwait
pop
add
es
dec
rorb
add
lcall
jno
es
push
or
sub
sti
in
fucomi
mov
scas
adc
cmc
adc
push
and
clc
mov
test
push
sub
adc
dec
inc
rcrl
sti
mov
xchg
out
mov
scas
lret
add
enter
fcmovu
cmpsb
cs
inc
or
sti
loopne
into
lret
or
gs
test
call
mov
jo
cs
les
ret
cmp
sbb
xchg
repz
test
mov
int3
push
fldt
icebp
sub
adcb
push
int3
sbbl
test
cli
rcll
sbb
lock
jne
ds
xor
xchg
or
push
in
mov
cmp
test
mov
push
mov
jne
push
xchg
xor
dec
into
xchg
jecxz
sub
fs
mov
xor
push
mov
loope
in
das
and
and
and
cmpsb
inc
ss
pop
and
ror
push
xlat
pushf
sbb
mov
shrb
sub
or
psllw
andl
in
dec
int3
shrb
inc
sub
xor
pop
adc
loop
lret
imul
xchg
cmpsb
lret
add
fnstenv
roll
sub
mov
fstl
push
or
imul
hlt
dec
mov
add
xor
out
pop
inc
gs
inc
into
jne
bnd
jmp
test
mov
xlat
scas
push
mov
and
das
jg
loopne
or
mov
cld
in
sahf
jbe
in
fnsave
pop
into
fcmove
or
mov
pushf
push
or
or
jg
xor
bound
ror
mov
test
or
rcr
dec
sbb
mov
stc
mov
shrl
insb
subl
xor
add
nop
imul
inc
movsl
xchg
out
inc
cmp
xchg
or
xchg
imul
xchg
mov
push
cmp
and
adc
outsl
mov
push
ljmp
inc
orb
or
out
inc
dec
xchg
sbb
add
push
xor
mov
into
jns
xor
cmp
jno
mov
adcb
inc
mov
ja
ret
into
bound
push
mov
out
std
add
mov
add
pop
push
xchg
bound
push
int3
test
mov
aas
sbb
gs
push
jno
xor
imul
jg
pop
dec
leave
jmp
repz
jmp
mov
int
cmp
aam
fistl
arpl
imul
mov
je
mov
jb
xlat
jbe
jns
lods
lock
jmp
cmp
pop
jecxz
xlat
push
jle
stos
icebp
xorb
stc
scas
mov
xchg
pop
cmp
insb
and
pop
mov
cld
dec
or
push
jecxz
push
cmp
lea
cmpsl
cwtl
adc
movsb
or
xchg
add
scas
cmpsb
xchg
leave
notl
pop
inc
dec
or
scas
ss
jmp
jmp
int3
xchg
jg
or
pop
mov
inc
and
mov
mov
adc
loope
add
sbb
cltd
xchg
mov
add
push
mov
push
lods
jbe
outsl
inc
xchg
adc
lret
inc
ret
enter
cmpsl
clc
inc
idivb
xor
daa
mov
sar
and
int3
movsl
clc
pop
aas
dec
or
test
mov
adcl
pop
andl
fwait
push
popf
movb
and
loopne
int
and
lahf
stos
in
loopne
les
nopl
sbb
imul
push
xor
adc
clc
das
jae
add
and
add
test
nop
aam
jl
out
js
dec
xchg
mov
enter
jp
ljmp
and
icebp
ss
pop
pop
and
subb
push
mov
adc
subl
xor
mov
in
das
xor
mov
div
into
into
fisttpl
sub
fsub
rorb
mov
test
xlat
fcmovnb
push
mov
dec
xor
xor
ds
mov
cmp
mov
adc
inc
out
ja
dec
and
nop
cld
lea
xchg
scas
cs
int
fimuls
mov
push
xorl
fnsave
mov
aam
xchg
or
cltd
call
lea
pop
xchg
push
push
ja
lret
insb
xchg
sub
jnp
push
cltd
or
and
ret
imul
pop
das
jle
xchg
jmp
cmp
out
pop
out
sub
mov
loopne
icebp
sub
cli
inc
jmp
push
shll
movsb
cwtl
test
fwait
adc
cmc
ss
ror
out
std
stos
jecxz
das
xchg
sbb
mov
xchg
xor
xor
xor
xor
xor
cmp
mov
mov
sub
mov
fistpl
dec
cmpsb
ljmp
mov
into
inc
mov
pop
cmp
xor
adc
xor
cmpsb
cld
xchg
aaa
add
sub
out
movsb
inc
sbb
stos
sub
mov
jb
or
pop
ror
aam
je
xchg
insl
lock
mov
arpl
call
sbb
icebp
pop
inc
push
pop
lock
cmp
or
popa
pop
push
pop
pop
mov
pop
outsl
std
sub
icebp
out
push
inc
mov
add
movsl
ficoml
sbb
cld
xchg
xchg
test
add
test
aaa
inc
fdecstp
out
int
add
int3
cmp
es
test
aaa
cld
push
leave
scas
lods
arpl
in
pop
mov
push
and
pop
add
push
add
arpl
add
jo
lods
add
jne
sbb
mov
andl
mov
test
adc
mov
mov
hlt
sbb
xor
inc
xchg
or
adc
shr
jbe
jl
lods
jbe
lods
jo
sbb
mov
xchg
push
jmp
shrl
mov
imul
xor
mov
or
cmp
sub
iret
ret
es
lea
adc
mov
or
mov
ljmp
mov
dec
fcmovnu
or
cmp
cmp
sub
push
xor
push
leave
inc
add
pop
in
jne
push
out
jmp
jge
movsl
data16
ja
fdivrl
in
cli
sti
mov
in
ret
and
lea
loope
lret
adc
dec
out
shlb
decl
mov
or
push
in
cmpsl
inc
fnstenv
test
addr16
and
mov
jbe
mov
inc
jae
cli
fisttpl
iret
mov
adc
ds
pop
movsb
jo
cli
mov
mov
ljmp
mov
dec
out
inc
or
cmpsb
mov
xor
pop
mov
mov
push
sbb
sub
mov
sarl
add
sub
or
into
jae
ffreep
mov
inc
dec
xlat
stos
imul
ss
adc
add
add
xlat
dec
and
pop
cmpsl
mov
cmp
jo
ds
repnz
into
cmp
data16
or
dec
dec
jg
push
sbb
shlb
jp
lock
cmc
jo
fstps
sahf
xchg
call
ja
and
dec
inc
jbe
lcall
adc
sbb
iret
sahf
mov
lods
mov
push
loop
not
cs
cmp
lcall
mov
xchg
mov
inc
fsubs
sub
scas
mov
xchg
imul
int
mov
int
into
add
inc
xor
std
push
jmp
cmp
jecxz
pop
and
js
fildl
sbb
xor
lock
sub
adc
mov
xchg
mov
shlb
jne
sub
int3
shrb
fldenv
js
pop
lds
out
jmp
outsl
inc
lret
xor
mov
pusha
lcall
int
ret
add
cmp
mov
pop
dec
jns
mov
jns
push
jecxz
ja
mov
mov
sbb
add
mov
add
or
call
mov
mov
cmp
cmc
add
or
lcall
dec
lret
pop
adc
mov
data16
sub
push
push
mov
push
pcmpeqb
sub
aad
jle
sub
push
sahf
sti
dec
aaa
xchg
add
inc
xchg
in
bound
fs
cmp
popf
mov
inc
aam
jp
or
int3
cmc
movsb
test
ror
mov
ja
incl
mov
fwait
xchg
cmp
dec
and
fwait
ror
aad
fldcw
pop
testb
aaa
pop
movsb
or
rcll
push
adc
and
int3
lcall
aaa
push
mov
repnz
mov
fidivrl
mov
leave
jg
or
xchg
pop
sbb
dec
ja
cmc
js
mov
sahf
adc
adc
test
pop
push
adc
mov
cld
adc
xor
dec
pop
and
imul
call
ret
cltd
jecxz
shl
push
mov
add
insl
or
jnp
xchg
lret
mov
lock
push
push
sub
jg
xorb
xchg
nop
add
xorl
cli
mov
xor
mov
jge
pop
nop
mov
mov
mov
mov
in
pop
fs
stos
mov
sub
dec
or
call
mov
insl
push
pop
sbb
inc
jbe
adc
clc
mov
push
xchg
test
cmp
jmp
addr16
xchg
xor
fildl
aam
test
adc
or
sbb
je
mov
sahf
aad
lcall
cmpsl
or
out
cmp
push
jnp
sub
jle
jmp
xchg
push
inc
pop
sbb
inc
pop
and
xor
jmp
fcmovb
imul
add
sub
repnz
enter
es
xchg
cmp
dec
mov
inc
mov
leave
xchg
push
cli
xlat
loop
out
push
je
push
sarb
loop
or
imul
stos
loop
mov
imul
pop
push
cld
ljmp
push
lods
ret
mov
and
pusha
inc
pop
sbb
jle
out
insl
fcomi
add
add
jno
cmpsb
imul
mov
jle
jmp
fwait
std
cmp
jb
std
inc
imul
cld
out
in
mov
enter
movsl
cmp
rcl
loope
cli
std
in
jnp
sbb
jl,pt
repnz
hlt
cmp
ret
loop
sub
xor
cmp
lahf
mov
sub
cmp
mov
into
ss
lods
shl
fs
and
pop
inc
popf
sahf
test
shrl
mov
cmp
and
sub
loope
and
pop
in
mov
data16
call
aam
adc
dec
sbb
jg
or
addl
cmp
inc
mov
call
pop
xchg
int3
jb
subl
or
outsb
lcall
pop
xchg
mov
lds
mov
pop
lret
mov
inc
cs
mov
cltd
movb
das
xor
push
mov
add
sti
sub
pop
add
loopne
adc
in
xlat
and
xchg
sub
aaa
fisttpll
dec
loopne
inc
and
mov
push
adcb
mov
aas
dec
pop
sbb
pop
rolb
mov
fstpt
stc
inc
dec
fs
dec
fs
inc
push
stc
aam
and
jo
repnz
and
xchg
ret
int
pop
sahf
loop
dec
adc
outsb
or
iret
push
adc
ret
jb
jne
dec
inc
std
or
pop
dec
mov
mov
jo
lcall
mov
sbb
pusha
push
iret
xchg
cmp
adc
rorl
in
pop
popa
cmp
ret
outsb
ss
ja
dec
or
out
xchg
leave
push
cmp
push
mov
adc
decb
jnp
dec
aam
sarl
aas
fisubl
dec
arpl
mov
popa
xchg
stos
mov
push
test
aaa
and
jo
sub
xchg
pop
xor
sahf
jp
rcrb
and
push
sarl
pop
dec
out
or
bound
pop
cmp
jl
push
imul
nop
pop
mov
pop
pop
sbb
mov
mov
fs
rcr
aad
add
cld
jg
aam
sbb
sti
mov
movsb
sub
push
xchg
push
ret
cwtl
sahf
ficompl
or
and
push
aas
ss
fs
cmp
sbb
iret
mov
push
daa
lods
popf
int3
cmc
cmp
mov
subl
sarl
ret
repnz
add
inc
inc
cli
pop
sbb
cltd
mov
fnstsw
fs
lock
cmp
xor
sub
scas
fisttpl
pop
call
xlat
lea
ret
xchg
mov
mov
xlat
mov
es
std
lea
xlat
stos
inc
ret
mov
addr16
push
rcll
scas
dec
imull
test
mov
jmp
outsl
and
mov
popf
push
inc
or
inc
xchg
jge
ds
inc
sarl
jecxz
or
repz
jecxz
inc
ja
mov
movsl
addb
ja
mov
push
pop
cmp
or
jae
les
enter
sbb
in
cmp
push
cmpsl
mov
gs
clc
fdivrp
push
sub
aam
fadds
cltd
mov
push
mov
mov
repnz
xchg
xlat
jge
pop
mov
pop
xchg
inc
mov
mov
jle
or
fsubrp
mov
int
iret
das
push
pop
sbb
ljmp
aaa
mov
cmpsb
int3
cwtl
lret
mov
jge
loope
es
cltd
fstpt
fucomi
shll
pop
xor
outsl
clc
inc
sarl
jne
adc
dec
xchg
lret
lcall
mov
call
mov
xlat
add
fldpi
mov
loope
repnz
aas
inc
sbb
mov
aas
xchg
aaa
xchg
aad
sbb
scas
out
rorb
in
test
fsubl
cld
jb
ficompl
jecxz
pop
pop
in
push
in
pop
pop
rcrl
adc
xchg
push
cmp
insl
pop
sbbb
fwait
repz
and
ds
push
incl
loopne
cmp
sbb
andl
jb
ret
popf
lahf
cmp
addl
jg
test
out
adc
adc
std
sbb
std
xor
nop
xchg
pop
cmc
mov
subl
cltd
adc
aam
sbb
movsl
insb
push
inc
jg
fstl
jmp
outsb
and
lods
mov
int3
cmpsb
jb
in
and
out
cmp
and
std
push
mov
dec
popf
jge
test
sub
and
inc
inc
sub
mov
or
mov
mov
lock
jl
iret
test
mov
or
xchg
xchg
inc
xchg
xchg
loopne
addr16
sbb
dec
adc
insb
cli
rcrl
pop
inc
mov
adc
xor
sarb
cmp
pop
cmc
or
aaa
and
icebp
les
sub
lret
mov
add
icebp
sbb
xor
leave
sbb
in
sub
dec
and
aaa
lods
sub
xchg
dec
sti
xchg
test
jecxz
push
mov
sbb
mov
and
jl
gs
push
mov
jbe
das
mov
out
cmc
cli
cmp
imul
pop
out
shl
cmpsb
cld
cwtl
mov
pushf
xbegin
jnp
sbb
dec
mov
fs
jp
jnp
sub
cmp
stos
mov
pop
clc
scas
mov
jnp
cmp
inc
sub
mov
sub
decl
mov
mov
adc
jae
adc
inc
negb
pushf
dec
mov
lea
mov
shll
pop
mov
jnp
push
enter
adc
add
inc
aad
sub
inc
jmp
inc
mov
imul
cmp
push
add
push
cltd
mov
inc
push
jl
std
inc
mov
cmpsb
jg
shrl
cmpsl
int
movsb
in
xchg
clc
in
mov
push
js
dec
inc
mov
pusha
mov
loopne
push
push
iret
je
push
shll
gs
hlt
insl
bound
je
inc
fcoml
jno
xor
or
add
push
cmpsb
repz
jns
add
in
adc
mov
es
aam
or
arpl
pop
sbb
lcall
in
or
pop
divl
into
fs
dec
lahf
insl
shlb
and
pop
loop
dec
cmpsb
push
fsubs
addr16
and
pop
cli
fimuls
or
dec
xchg
decl
sbb
cld
sub
mov
sbb
daa
lock
mov
pop
inc
xchg
in
jb
aad
mov
fistpl
dec
mov
mov
pushf
push
sahf
mov
les
shr
lgs
cmpsb
xchg
xor
insb
adc
fsubr
add
inc
push
inc
js
push
imul
push
and
mov
and
test
icebp
loope
xor
adc
repz
popa
mov
xchg
fstps
popf
adc
stos
jmp
call
inc
fwait
stos
adc
cltd
aad
sub
pushf
jl
stc
jae
cmpsl
jne
push
jmp
push
cmc
lret
xor
aas
jle
iret
fidivrs
sub
inc
fs
pop
mov
ss
xor
xor
xchg
cmpsl
xchg
cmp
push
inc
adc
test
lock
push
dec
rcrb
xchg
fistl
cltd
insb
mov
adc
jp
xor
xor
fs
sbb
lret
and
scas
mov
enter
mov
dec
mov
leave
notl
inc
mov
in
test
and
stos
fmul
pushf
std
sub
sbb
ret
leave
jmp
fwait
jb
xor
jb,pn
ret
jnp
mov
cld
movsb
add
dec
xor
pop
inc
pop
ds
fwait
imul
arpl
test
push
mov
popf
arpl
add
xchg
movb
xchg
mov
sub
xor
xchg
lds
push
or
into
mov
cmp
sub
or
xchg
mov
adc
test
pop
inc
stc
int
sub
or
xor
xor
sbb
mov
rorb
add
or
daa
inc
cli
das
mov
idivb
pop
jg
mov
sbb
mov
xor
int
test
mov
negb
dec
mov
lds
mov
dec
cmpsb
add
inc
dec
and
push
clc
sub
mov
mov
adc
mov
jbe
test
adc
sahf
jecxz
push
and
rorb
out
xchg
mov
push
movsb
outsb
push
sub
xor
loop
pop
das
adc
jp
int
fcomps
movsl
test
or
rcrb
xchg
flds
imul
out
jns
and
fs
dec
cwtl
jo
sub
jmp
xchg
push
mov
add
dec
sahf
insl
out
out
out
cld
shr
bound
mov
jne
inc
xor
jno
lret
dec
mov
pop
mov
lahf
test
test
mov
mov
clc
mov
shrl
imulb
add
insl
or
sub
daa
xchg
pop
in
inc
jns
popa
add
insb
jmp
mov
aaa
add
repz
fmull
cmpsl
pop
lret
ss
shl
lcall
aam
jb
scas
jne
out
xchg
sub
and
in
inc
fwait
cmp
outsb
push
cld
cmpsl
jnp
xchg
scas
dec
sti
push
insl
sahf
gs
cld
mov
fsubs
mov
lea
cli
dec
loop
scas
jmp
insl
add
pop
fimull
jb
decb
push
shrl
je
lods
mov
sbb
pop
mov
adc
lds
push
adc
mov
xor
nop
or
icebp
clc
hlt
mov
scas
and
rcr
pminsw
sti
adc
sub
ret
mov
call
movsb
mov
cmp
pusha
cwtl
pop
mov
mov
clc
mov
jbe
nop
data16
xchg
pop
hlt
xor
jb
pop
xchg
mov
cli
cmp
inc
push
out
xor
pop
outsl
mov
jmp
pop
adc
add
pushf
mov
dec
sub
jb
bound
rorb
mov
sub
mov
pop
fucomp
cmpsl
cmpsl
adc
add
adc
push
out
pop
inc
xchg
repnz
rclb
fstl
aaa
sub
in
push
inc
ljmp
addb
scas
testb
in
sub
push
shl
sub
dec
rsqrtps
push
lret
or
mov
jmp
iret
mov
test
sahf
inc
mov
dec
fstpl
ss
push
sub
sbb
in
jle
in
stos
mov
inc
clc
push
or
push
shll
ret
dec
jp
push
les
xchg
adc
stos
aaa
xor
or
push
and
in
insb
sbb
icebp
fdivs
adc
pop
lcall
sub
pushf
ljmp
mov
inc
jb
out
test
adcl
sbb
insl
xlat
pop
mov
bound
mov
jle
mov
xchg
les
loopne
icebp
sub
ret
jns
mov
dec
pop
cwtl
push
inc
lods
jae
xor
lcall
dec
outsb
sub
out
cltd
scas
ljmp
push
sarb
cs
jb
test
aaa
and
jno
rcr
es
adc
rorl
xchg
mov
pop
sub
cmp
jg
outsl
shrl
jb
jae
cmp
push
insb
repnz
loop
or
mov
inc
jbe
mov
sahf
ljmp
pop
sub
push
in
sti
imul
dec
cs
xor
inc
ljmp
mov
and
sbb
outsl
mov
fisubrl
push
fldenv
rorb
push
xor
mov
aam
out
adc
test
or
loop
adc
inc
pop
push
rcll
cmp
push
mov
fidivl
int3
cmp
cmpsb
ror
jnp
xchg
or
and
jo
push
cmp
fwait
les
xchg
mov
pushl
stc
scas
leave
ljmp
fstps
cltd
subl
movsb
imul
mov
mov
imul
mov
and
shll
inc
inc
and
mov
stos
jo
lods
mov
pop
xchg
mov
call
je,pn
add
add
stc
mov
add
adc
cld
mov
sub
insb
jbe
cltd
pop
fidivrl
insb
stos
jo
inc
add
int
or
mov
mov
int
cmp
jne
sarb
rcrl
add
loope
test
sarl
sahf
cmp
mov
das
jo
bound
xor
in
xchg
pusha
insl
pop
ret
notl
ret
push
and
mov
cmp
stos
inc
sub
mov
dec
and
sbb
lahf
sub
loope
push
mov
cmpsl
push
or
cmp
inc
push
mov
inc
lcall
and
cmp
xchg
imul
in
ret
fwait
inc
outsb
inc
cmp
mov
stos
push
gs
pop
jbe
dec
gs
xor
xchg
adc
addr16
test
jnp
out
pop
push
mov
mov
test
xor
in
loope
bound
fdivl
sub
add
inc
iret
sbb
sbb
jno
fisubrs
jo
das
jp
pslld
outsb
add
lret
je
ret
gs
fidivl
mov
mov
inc
inc
push
cmp
aaa
je
es
lods
outsb
hlt
repz
rclb
insl
push
daa
and
pop
push
orl
add
nop
fstps
push
in
xchg
into
loope
xor
dec
popa
stos
cltd
jo
loope
cwtl
in
pop
das
es
pop
test
adc
cmp
mov
mov
pop
dec
into
cmpsl
xchg
sbb
sub
loope
shll
fistpl
sti
jl
sub
inc
pop
xchg
jbe
das
mov
xor
insb
mov
lock
and
xlat
jmp
jns
xchg
push
ja
enter
inc
and
adc
pop
fdivr
int3
in
int
divl
xor
or
mov
nop
or
mov
addr16
push
repnz
out
lock
jge
xchg
mov
push
jb
pop
adc
mov
lahf
fldenv
popa
adc
jp
push
loopne
jae
push
scas
xchg
mov
cmp
inc
cmc
movsb
mov
popf
sub
test
or
rcl
sbb
sar
sbb
push
stc
in
xchg
lahf
add
adc
dec
push
fisubl
xor
scas
daa
decb
and
clc
test
das
sub
cmp
cld
mov
or
and
cmpsb
int
dec
pop
dec
iret
ds
lcall
xchg
mov
out
repz
stos
cmpsl
xchg
addb
xor
xor
stc
sarb
push
push
mov
mov
mov
and
and
push
sbb
ss
xchg
pop
iret
ljmp
test
xor
sub
sub
add
push
jnp
nop
movb
test
and
imul
jo
xlat
push
aaa
add
out
and
or
daa
clc
xlat
dec
add
inc
and
dec
jno
mov
or
add
adc
push
jmp
mov
push
test
jnp
nop
or
sbb
mov
dec
sub
test
xchg
call
add
jmp
das
gs
xor
sub
into
xchg
pop
mov
loopne
lahf
lahf
add
xor
movsl
cld
adc
ds
test
add
shll
add
xor
in
fnstenv
mov
mov
stos
push
cmp
jmp
jnp
stos
aam
sub
ja
rcrl
push
xor
bound
adc
testb
dec
lods
clc
adc
jmp
fimull
test
in
test
addr16
jge
fsubl
lahf
lds
divl
scas
daa
dec
push
xchg
popa
pop
or
cwtl
std
out
pop
pop
inc
rclb
leave
pop
xchg
data16
jno
jno
jne
out
sbb
insl
cmp
decb
lock
stos
stos
or
mov
adc
jmp
jno
jo
dec
repz
leave
cltd
xorb
out
mov
call
add
je
pop
sbb
pop
lds
mov
stos
or
push
outsb
inc
pop
subb
int3
repnz
cmp
xor
xlat
push
cmp
cmpsb
out
add
orl
hlt
ljmp
test
push
xor
jle
lea
cmpsl
sqrtps
sti
iret
sub
leave
xchg
gs
fucom
dec
adc
mov
insl
sahf
cmp
outsl
xor
bound
sub
cs
lds
xor
sub
repz
popa
lret
add
cmc
repz
int3
call
cld
and
test
sbb
push
lahf
and
aas
jnp
jge
mov
lea
notl
adc
popa
xchg
sahf
sbb
nop
and
jle
or
and
push
lock
xor
add
add
push
sub
mov
shll
dec
sub
add
or
push
js
rol
mov
xlat
mov
out
xchg
loop
add
or
mov
iret
cltd
adc
aad
push
out
aas
sub
jo
sbb
lods
push
and
pop
push
sub
lock
hlt
cwtl
pop
call
push
ffreep
pop
dec
sbb
cmp
or
adcl
int
ss
xor
add
scas
xchg
xchg
pop
test
pushf
pop
es
mov
fsub
insl
insl
xlat
out
shl
pop
fsubrl
dec
jecxz
loop
jbe
jp
jg
add
dec
push
fsts
clc
fisttpl
aas
rol
adc
rolb
insl
mov
pop
sarb
pusha
mov
data16
xchg
fs
push
mov
push
xchg
push
hlt
cmpsl
das
mov
sbb
lea
adc
pop
pusha
test
inc
mov
xchg
testb
cmpsb
lea
leave
divl
add
cwtl
jo
xor
fcoms
adc
or
lds
xor
sbb
pop
dec
enter
sub
or
mov
movsl
push
xchg
mov
shl
pop
mov
testl
pop
stc
xor
mov
aaa
inc
insb
lea
pop
push
daa
out
adc
xchg
xchg
jo
push
mov
and
js
mov
outsl
lock
inc
inc
leave
mov
neg
cmpsl
add
sti
sub
fildll
out
sub
jne
out
push
fwait
inc
mov
cmp
mov
jns,pn
fisttps
ret
pop
add
sub
mov
push
loopne
pop
mov
clc
bound
inc
sub
cmp
orb
jne
test
nop
xor
push
push
scas
rorl
fsubrs
add
jo
testl
cmp
sbb
sbb
rolb
stos
or
and
fwait
outsl
mov
pop
gs
movsb
mov
outsl
out
add
lret
lods
dec
cli
inc
push
fwait
data16
inc
pop
xchg
dec
iret
xchg
cmc
cmp
ljmp
cmpsl
loope
xchg
pop
shll
mov
xor
popf
jo
pop
ds
add
aaa
or
cmp
ss
xlat
mov
sbb
sbb
das
mov
das
dec
dec
mov
xor
xchg
mov
cmp
dec
mov
repz
jp
movsl
hlt
imul
in
sbb
vpaddusw
popa
mov
push
or
or
inc
dec
xor
mov
scas
pusha
cli
dec
ret
cmpsb
js
or
mov
dec
mov
popf
mov
sub
push
ret
sub
scas
fwait
lods
out
in
push
hlt
push
paddusw
mov
fs
orb
or
aam
pop
test
pop
mov
dec
test
call
add
cs
sahf
and
or
rolb
pop
ja
ret
mov
sti
mov
nop
fadd
pop
insb
divb
push
or
call
cmp
out
es
and
vpcomq
out
test
mov
dec
mov
scas
xor
aam
inc
lret
std
push
lahf
mov
add
nop
jno
mov
pop
stc
ret
inc
sub
daa
orl
jnp
fcmove
repz
adc
dec
fs
pop
into
jecxz
xchg
pop
xchg
push
xor
movsb
mov
shrl
xor
lods
cmp
dec
and
adc
movsl
mov
out
pop
or
inc
or
inc
cmpsl
shll
adc
repnz
mov
cmp
rclb
mov
repnz
and
and
xchg
cmp
sub
push
cmpsl
dec
ja
setno
movsb
mov
pop
mov
out
push
mov
pop
push
or
test
mov
scas
xchg
jno
cmp
mov
cmpsl
adc
daa
stc
nop
and
sub
daa
xor
and
mov
jecxz
iret
jg
cmc
mov
and
inc
adc
mov
fucomip
xchg
sbb
and
and
ljmp
mov
jne
add
mov
sub
movsl
xor
mov
add
jno
notl
in
xor
andl
cwtl
adc
pop
cmpb
jg
sbb
es
imul
rcrl
xchg
inc
pop
subb
add
dec
add
pop
mov
repnz
sahf
out
and
push
xchg
push
mov
xlat
xor
lret
or
bswap
sbb
inc
aaa
mov
mov
idivb
pop
add
jnp
sub
push
aas
fstp
ds
outsl
lahf
pop
stc
outsb
mov
lret
test
pop
inc
movsb
or
nop
dec
data16
mov
or
orb
es
repz
pop
fs
lahf
add
xor
or
jo
aad
pop
pop
and
mov
mov
cmp
mov
fwait
or
mov
iret
lea
mov
mov
je
push
jge
cmp
mov
sub
es
adc
addr16
adc
cmp
in
cs
xchg
dec
mov
mov
inc
jle
daa
mov
test
mov
mov
jmp
xor
pop
lret
jnp
ret
test
jnp
cmp
lcall
imul
mov
mov
cmpsl
addr16
add
addr16
pop
shlb
nop
push
pop
hlt
sbb
in
mov
mov
jno
lods
xor
jl
and
into
loop
jo
sti
loop
mov
dec
add
rorb
popa
in
add
lahf
mov
pusha
subl
fsubrs
push
cmp
int3
sub
add
shrb
inc
scas
jmp
push
out
daa
inc
sbb
lods
sbb
mov
out
xor
adc
sti
mov
lcall
mov
add
test
add
scas
and
insb
and
sbb
and
add
in
hlt
dec
jp
rcrb
std
fisubrl
mov
mov
fwait
add
push
sbb
or
inc
in
out
stos
mul
test
pop
inc
push
xchg
push
testl
inc
xor
popf
lret
cmpsl
mov
out
jae
das
pop
add
sub
sub
adc
xchg
std
add
ss
add
ret
push
dec
lret
xor
mov
out
xchg
mov
inc
xor
push
loop
xchg
and
loop
mov
lret
and
outsl
inc
push
mov
add
adc
push
test
jl
lock
cwtl
and
loopne
dec
pushf
xchg
xor
cmp
xor
pop
jbe
jmp
nop
shll
fcoml
lds
fistl
push
js
push
aas
push
stos
testb
lret
mov
lret
push
cmp
cmpsl
inc
push
int
bnd
rcrb
pop
fidivrl
jae
mov
repz
imul
out
aam
nop
inc
inc
xor
js
sbb
and
out
imul
mov
enter
cmp
dec
xchg
and
push
lock
dec
inc
pop
inc
int
and
rol
ret
pop
cmp
outsb
or
pop
lea
xor
fisttpll
fsubs
inc
cmp
xor
imul
xchg
pop
out
cli
push
arpl
xor
icebp
mov
enter
cmp
mov
pop
dec
dec
inc
dec
jno
dec
daa
repz
push
sub
sub
mov
loopne
fwait
stc
ljmp
out
adc
sti
in
jb
fdivrs
xor
xchg
faddl
xor
scas
mov
xor
ds
xor
test
addl
or
sub
lods
mov
mov
pop
push
mov
shl
imul
clc
lcall
sarb
lds
lret
in
pop
add
dec
xor
test
inc
push
mov
addr16
popf
sar
push
sub
dec
and
pop
mov
push
imul
int
aaa
loopne
xor
jp
lcall
addb
popf
out
rclb
jmp
outsb
sub
pop
push
lcall
pop
add
sbb
les
inc
add
out
mov
sub
rorb
shll
mov
out
rolb
xlat
push
stc
lds
inc
movsl
mov
in
cmovns
lahf
test
scas
stc
mov
add
lods
mov
cmpsb
cld
clc
add
mov
sbb
adcb
das
pop
mov
pop
pop
repz
jg
sub
mov
lods
idivb
mov
inc
in
cs
mov
pop
sub
cld
int
lahf
jne
cld
pop
mov
push
pop
dec
xor
mulb
cmpsb
ror
mov
andl
xchg
mov
scas
loopne
inc
push
incb
sub
push
cmp
inc
xor
mov
ds
pop
add
lods
mov
push
jg
aam
int3
mov
insl
mov
mov
xor
push
cwtl
xor
xchg
xchg
movsb
sbb
dec
mov
lret
pop
pusha
xor
js
lods
mov
xchg
leave
xchg
xchg
jo
jecxz
cmp
jae
insb
xor
jge
jecxz
out
in
mov
popl
push
jbe
out
lret
dec
and
fld1
mov
sub
xchg
ret
sti
sahf
ffree
psubw
bound
enter
jo
jecxz
fcoml
inc
push
pop
ljmp
mov
je
cli
icebp
push
jle
popa
icebp
cmp
aad
out
jne
sub
lea
pop
mov
subl
popa
pop
lods
jl
sub
fldt
out
mov
add
outsb
xchg
push
dec
shr
jmp
dec
mov
and
push
fs
cli
shll
test
cltd
lret
out
pop
xchg
xlat
bound
inc
mov
adc
call
std
in
inc
mov
add
ret
orl
jl
inc
mov
jle
fwait
out
cmp
xor
jecxz
cmpsb
cmpsb
mov
repnz
rcrb
insb
inc
adc
mov
xchg
ret
add
faddl
or
push
int3
hlt
aad
jl
jo
addl
ret
mov
pop
mov
ds
inc
decl
mov
lock
cmc
xchg
push
and
ljmp
rcrb
sub
inc
or
insl
aaa
push
mov
mov
inc
and
mov
inc
adc
lcall
inc
daa
ja
inc
pop
fldenv
iret
bound
stc
mov
in
stos
sub
xchg
ja
shll
jecxz
sbbl
sbb
xlat
dec
lea
add
hlt
ds
adc
or
imul
movsb
mov
inc
in
xor
adc
xor
popa
and
scas
lds
jo
rcl
push
fisttpll
dec
push
fdivr
add
mov
fisttpl
add
push
sbb
incl
inc
loop
jg
dec
popa
pop
cli
lods
cmp
ss
aad
mov
pop
dec
inc
cs
in
jg
fs
or
sbb
sub
cs
push
pop
mov
jbe
xor
shrb
cli
and
loope
xor
ss
sti
dec
ja
xchg
scas
les
mov
or
inc
adc
pop
movsb
and
add
fs
pop
add
outsb
jbe
sub
inc
mov
xor
cmc
push
sbb
lahf
inc
fidivrs
mov
pop
mov
test
fwait
mov
lea
jno
and
xchg
and
sub
jns
inc
stc
mov
add
xor
fisttpl
sub
jecxz
mov
cld
dec
dec
or
xchg
dec
daa
test
jmp
fs
pusha
cmp
incb
pop
shr
sub
pop
xor
and
cmp
push
xor
pop
imul
fsubr
fnclex
mov
int
xlat
cwtl
jg,pn
mov
xor
lods
repz
mov
adc
cli
test
out
sbb
inc
sti
mov
stos
repz
add
cmp
add
xor
outsl
pop
and
jge
push
or
hlt
sub
cmpsl
out
mov
orb
dec
adc
sub
fidivl
jg
jp
outsl
iret
data16
in
insl
sub
leave
and
cmp
and
repnz
ret
cs
mov
fcom
sar
push
or
int
and
mov
out
push
mov
add
push
push
je
out
cmp
pop
mov
push
xchg
rclb
cmc
add
inc
fs
std
dec
loopne
xchg
arpl
xchg
xor
jae
mov
int
jno
roll
insl
sbb
xchg
arpl
mov
fidivrs
fs
movsl
or
fisubrl
inc
dec
dec
jbe
inc
cmc
xor
rcrl
sti
arpl
push
ret
push
xchg
repnz
shlb
int3
ja
gs
push
mov
pop
out
arpl
icebp
add
mov
jge
inc
inc
push
mov
xor
jnp
das
test
inc
in
cmc
mov
inc
call
sub
push
filds
jno
xlat
add
or
cmp
jp
sbb
adc
lahf
jns
cli
sahf
mov
outsb
sub
push
mov
cmp
cmpsb
add
or
adc
cmp
add
xchg
outsb
jecxz
and
pop
addr16
gs
push
cli
jp
mov
adc
mov
ficoml
sbb
mov
popa
das
idivl
shll
adc
jno
imul
pop
push
and
push
and
jb
cmp
or
in
subb
push
cmp
xor
leave
pop
jmp
mov
add
xor
int
fdivl
jp
inc
adcl
dec
mov
adc
pop
mov
jmp
xor
push
sub
stc
cld
mov
adc
push
inc
lret
mov
aad
sbb
sbb
push
scas
pop
ljmp
icebp
nop
test
inc
pop
negl
adc
scas
sub
and
sbb
and
xchg
daa
jnp
add
cltd
call
lret
push
and
rcrb
jns
xorb
pop
xchg
or
roll
imul
mov
xchg
clc
mov
out
aas
dec
sbb
xchg
mov
jnp
dec
sub
adc
adc
pop
sbb
mov
repz
xchg
test
push
xchg
pop
int
shrl
pop
dec
in
xor
outsb
lret
mov
sub
sbb
sbb
jae
das
ret
cmpsb
adc
sub
push
sbb
call
imul
xor
stos
out
mov
pop
xor
pushf
add
aam
inc
pop
dec
arpl
add
xor
stos
js
je
imul
ja
js
jl
or
xlat
jg
in
push
push
xchg
shl
outsl
mov
gs
or
xchg
out
adc
fidivl
div
shll
test
pop
jno
ds
testl
outsl
mov
cmpsb
fcoml
insl
ficomps
xor
xchg
jb
fnstsw
icebp
jb
leavew
cld
test
jo
dec
in
push
or
mov
xor
sbb
add
mov
push
orl
cmp
jae
or
call
ljmp
inc
jnp
aas
ljmp
nop
lret
fucomp
testl
mov
xchg
loop
das
loopne
shll
inc
mov
adc
or
test
jecxz
adc
jns
shlb
popa
pop
dec
xchg
imul
sub
xchg
jmp
and
std
sbb
mov
jle
jg
mov
orb
xchg
rcl
movsb
sarb
in
inc
jbe
arpl
xchg
fidivrl
pushf
out
jmp
pop
popa
jg
test
in
add
inc
test
movsl
xchg
add
mov
inc
aad
sbb
or
test
mov
push
pop
jo
xchg
lret
leave
mov
daa
push
adc
sti
sbb
sub
sahf
fimull
sub
inc
aad
xlat
pop
push
inc
and
leave
jns
push
mov
mov
jecxz
cli
repz
insb
idivl
mov
xchg
inc
sbb
stos
das
lret
xlat
lds
outsb
daa
push
jmp
popf
out
xor
inc
mov
hlt
and
mov
adc
loope
xor
ds
cmp
test
jne
pop
and
sahf
loop
cmp
sahf
adc
xlat
and
dec
call
adc
inc
in
jg
js
and
mov
pop
push
jecxz
repnz
je
dec
and
popa
push
out
aam
pop
lret
xchg
in
inc
in
subl
out
lret
push
and
lods
test
mov
cs
pusha
cltd
in
cld
stc
mov
lods
out
ret
ror
sbb
sub
or
flds
shl
sahf
lock
mov
pop
pop
xchg
gs
int
dec
sub
rol
lds
in
sahf
sbbb
std
scas
testl
decb
add
lret
lods
loop
sti
xchg
mov
sub
add
sbb
add
mov
pop
sbb
pusha
iret
push
aaa
lods
outsl
xchg
mov
sbb
idivb
fadds
test
hlt
push
jp
dec
mov
and
push
f2xm1
jae
out
xchg
and
xlat
sub
push
sbb
cwtl
cmp
lret
and
iret
stc
xor
mov
rcll
push
stos
sbb
lcall
dec
pushf
pop
shl
inc
cmp
js
sub
mov
sub
mov
lret
pop
stos
jne
notl
movsl
je
notb
lcall
or
popa
test
leave
mov
out
xabort
cwtl
mov
cmc
bound
test
push
gs
add
test
mov
ss
pusha
cli
sub
les
mov
clc
and
pop
scas
loope
out
mov
sahf
add
pop
mov
test
or
arpl
sub
fisubl
or
hlt
rcl
out
clc
xchg
mov
movsl
sbb
push
push
pop
pushf
aam
jbe
push
test
sbb
pop
jns
xchg
lahf
mov
ret
int
aaa
pop
jecxz
sti
sbb
pop
pop
loop
mov
stc
cltd
mov
sti
fdivl
test
adcb
push
arpl
cmp
add
mov
xchg
pop
or
jle
mov
push
xor
outsb
lea
and
fwait
dec
pushf
insl
das
adc
mov
sub
lahf
mov
stos
pusha
gs
mov
rclb
in
jnp
dec
lcall
scas
cmp
sbb
adc
test
add
inc
cmp
insl
mov
pusha
mov
mov
push
int
icebp
outsb
inc
mov
adc
or
pop
inc
mov
dec
idiv
inc
pushl
mov
jnp
pop
inc
fcomps
cmp
sbb
cmp
loope
pushf
cmp
cmpsb
add
fdivrs
sub
xor
jp
out
cs
push
pushf
jbe
cmp
lods
hlt
testb
mov
mov
pop
dec
pop
ja
mov
push
xchg
jge
arpl
inc
cli
repnz
dec
xor
int
shlb
mov
insl
mov
sar
hlt
mov
mov
fisubrl
jo
mov
scas
sub
mov
fld
mov
xor
fcoms
cwtl
push
or
mov
pop
jne
insb
movsl
mov
and
cmp
jb
jl
das
lahf
lods
in
mov
insb
scas
lock
mov
insb
or
adc
mov
mov
mov
scas
mov
mov
inc
add
mov
jg
jns
dec
stos
push
mov
out
mov
push
and
mov
js
cs
jecxz
adcl
ss
cmp
rcr
ficoms
mov
stos
stos
cmp
loop
das
sbb
les
push
imul
mov
sub
mov
add
aam
pop
cli
scas
mov
xor
stc
jbe
in
imul
adc
mov
cmp
je
mov
imul
gs
aam
dec
gs
aad
arpl
shll
mov
adc
outsb
mov
lahf
imul
push
mov
imul
add
push
fwait
out
pop
sub
ret
jnp
jg
mov
lret
xor
loop
jl
cltd
xor
imul
fadd
outsb
sub
shrl
mov
fildl
inc
xchg
pop
adc
test
cwtl
pop
mov
icebp
daa
pop
push
ds
out
or
or
xor
jb
loop
flds
xor
fisubs
dec
aam
ljmp
and
loopne
sub
ret
out
xor
cli
lods
test
stos
loope
xchg
nop
inc
push
mov
mov
fbstp
aas
fmull
subb
pop
pop
jae
mulb
cmp
dec
mov
mov
add
loop
sarl
lcall
dec
arpl
in
pop
lcall
jne
stos
repnz
lds
outsl
aas
lds
xor
cwtl
popf
push
stos
outsl
data16
inc
out
and
jne
or
jg
mov
xor
dec
pop
data16
cmp
leave
xchg
xchg
gs
in
enter
lahf
repnz
cmp
push
jp
paddb
pop
rcrl
sub
stos
fs
arpl
mov
sbb
addl
add
sbb
push
cmc
jmp
mov
out
loop
test
std
mov
les
and
push
stc
mov
pushl
mov
mov
mov
cmp
and
jns
mov
stos
push
push
les
push
dec
mov
scas
pop
subl
aam
cltd
ljmp
idivb
iret
enter
cli
ja
andb
add
push
aas
in
in
jmp
lret
adc
cmp
pop
int
inc
aaa
out
xchg
pop
ljmp
jmp
in
inc
inc
jo
bswap
pop
cltd
loopne
push
adc
out
iret
negb
inc
add
inc
stos
mov
iret
and
sahf
loop
andb
movsl
cmpsb
es
jp
mov
push
testb
scas
xchg
out
out
dec
add
sbb
jo
cmc
lock
loope
subb
jae
gs
cmp
lea
loopne
sub
mov
in
xchg
jmp
iret
dec
push
pop
les
pop
rclb
aam
dec
dec
je
jecxz
das
jno
outsl
pop
in
pop
stc
mov
stc
push
das
sub
mov
mulb
scas
clts
xor
adc
gs
push
inc
shl
std
or
jo
arpl
roll
mov
sarb
test
in
fs
inc
mov
mull
test
shr
roll
insl
dec
in
and
ss
lret
sbb
jecxz
mov
lahf
mov
mov
lret
inc
orb
jae
fidivs
xlat
loope
and
add
test
iret
mov
mov
mov
test
outsb
out
loop
stc
inc
or
cmp
movsl
push
push
leave
xor
outsl
fisubrl
fs
dec
cmpsb
subb
mov
inc
adc
scas
rcll
jg
and
in
pop
movsl
pusha
or
je
inc
mov
mov
mov
jl
sbb
cli
add
push
dec
add
into
inc
push
rol
jo
dec
mov
stc
clc
mul
lock
fdivs
test
stos
add
mov
hlt
and
sbb
inc
addb
icebp
cmp
in
add
and
mov
call
fsubrs
sub
pop
stos
mov
inc
adc
add
pop
push
fwait
outsb
xchg
push
xchg
stos
fisubrl
jnp
les
mov
push
inc
inc
sbb
adc
push
xor
shll
movsb
shrb
mov
lea
addl
sbb
push
inc
ret
cmp
ja
xchg
test
push
inc
push
insb
pop
clc
xor
hlt
mov
cmc
addb
scas
mov
loop
lret
inc
ret
mov
pop
or
pop
loope
loope,pt
mov
das
loope
xor
jmp
jb
fadds
cld
jecxz
ret
mov
lcall
mov
cmp
in
jmp
lcall
lcall
test
pop
adc
push
pop
in
cmp
in
cli
sbb
bound
popf
repz
mov
mov
sub
cmp
mov
in
mov
adc
sbb
pop
repnz
jnp
fdivrs
stc
je
ja
pop
movsl
mov
and
xchg
ljmp
aas
inc
add
add
orl
push
clc
inc
loopne
movsb
lock
jo
push
fucomp
fsubs
repnz
shrl
jne
sbb
jecxz
andl
jo
cltd
imul
add
ret
testb
mov
popf
mov
pop
jo
cmp
outsl
dec
pop
ljmp
push
daa
iret
sbb
call
lret
test
or
ss
icebp
mov
scas
lcall
loopne
sub
dec
lea
or
lea
stos
loope
popa
pop
test
lret
pop
mov
xor
xor
pop
cmp
repnz
shll
leave
mov
xorl
sbb
imul
pop
mov
mov
sub
pop
daa
or
test
dec
pop
leavew
xor
in
xor
cmpsl
lahf
cmp
rol
dec
add
div
push
ljmp
test
mov
ret
call
xchg
out
mov
sbb
xor
and
sbb
pop
outsl
add
int
inc
in
vxorps
pop
fiadds
icebp
ljmp
aas
in
lea
mov
mov
shl
sub
jns
arpl
loopne
jg
or
mov
mov
jg
adc
add
les
ret
push
push
xchg
enter
dec
push
lea
xor
fwait
pop
test
mov
push
or
xchg
inc
cmp
add
loopne
sbb
enter
shrb
dec
pusha
mov
into
iret
repnz
out
add
add
xchg
bound
adc
movb
mov
cwtl
mov
test
imul
pop
adc
fs
adc
mov
push
dec
mov
cmp
das
loope
test
lret
pop
adc
cwtl
stos
sub
int3
xchg
in
mov
push
fisttpl
gs
loop
cmpsb
dec
cli
fnstsw
mov
or
sahf
or
popf
mov
cwtl
pop
or
push
inc
xor
xchg
std
jmp
fldl
pop
sti
mov
mov
xor
sub
inc
arpl
out
mov
jbe
fnstcw
cmc
xlat
gs
push
sarl
dec
mov
fadds
addr16
mov
jne
mov
xchg
inc
test
mov
add
out
sbb
jb,pt
addr16
lock
xchg
cmp
fldl
inc
pop
ret
int
in
dec
into
xor
loopne
sti
mov
cwtl
inc
lahf
inc
sbb
push
xchg
jmp
mov
bound
leave
mov
dec
adc
insb
aas
daa
xchg
mov
movsl
lods
sub
insb
mov
inc
rolb
cmpsl
stos
or
test
scas
pushf
sbb
adc
dec
sub
adc
fidivrl
lret
shr
xchg
mov
mov
jmp
fsubl
or
xchg
shr
scas
sub
pusha
push
outsl
mov
jl
es
pop
and
shlb
pop
in
lods
add
inc
outsl
repnz
daa
loopne
fstpt
and
push
shrl
xchg
out
mov
nop
pop
cli
mov
outsl
sbb
adc
jno
jne
xor
fstpt
out
cld
mov
pop
call
xlat
or
test
fisttpl
push
ja
ds
lret
xchg
add
loope
popf
pop
idivb
call
es
lret
rcrb
xor
nop
jp
mov
js
xchg
pop
fcoml
sub
out
inc
inc
xor
cmp
and
sub
mov
or
mov
xchg
push
mov
je
dec
sbb
out
ss
sub
loop
adc
inc
jnp
dec
adc
das
inc
sub
sub
sbb
stos
aas
ret
dec
lret
fwait
movl
sbb
jne
xchg
int3
xchg
repz
or
sub
hlt
sbb
das
jnp
sbb
or
cmp
jbe
imul
in
js
pushf
je
jo
ja
adc
xchg
push
sub
in
ljmp
lret
pop
fstl
lods
inc
push
imul
fld
or
or
sub
xor
mov
xor
mov
hlt
xchg
inc
sbb
xchg
stc
add
dec
loopne
xor
pop
es
mov
out
cltd
sbb
call
data16
std
jae
shll
mov
shrl
pop
rol
add
inc
mov
pop
into
push
jl
into
mov
subb
test
mov
cmpsl
sarb
xor
and
nop
outsl
sahf
push
mov
repz
repz
cmp
push
and
mov
xchg
fisubs
rolb
push
cli
dec
or
stc
mov
sti
shlb
pop
push
adc
pusha
fwait
mov
in
adc
jle
movb
jle
push
sub
adcb
add
push
das
mov
adc
cmc
sarl
shl
mov
push
mov
cmp
mov
ret
ficomps
loop
arpl
inc
mov
add
adc
inc
notl
loop
je
sub
lea
or
stc
or
ds
lcall
ss
repz
add
lret
sbb
sub
ret
mov
ficoms
loopne
xlat
xchg
jmp
bound
or
aaa
loop
sub
test
sbbl
mov
mov
pop
cmp
cmp
lds
out
jns
cmp
push
jp
ss
hlt
jmp
fsubr
pop
sbb
add
jecxz
fbld
fstps
inc
enter
repz
nop
xchg
rcl
data16
out
sti
push
mov
repz
daa
sub
std
jb
fbstp
and
push
jne
daa
and
out
push
popf
insb
iret
aad
lds
lods
cmpsl
rcrb
test
mov
xor
rolb
pop
xchg
int
adc
jne
xor
pop
mov
sub
mov
jl
mov
and
xchg
jns
adc
pop
daa
jo
jmp
imul
scas
dec
jb
int
inc
jae
negl
sahf
loop
movsbl
out
rcr
mov
pushf
into
jno
add
lds
inc
push
call
stos
adc
add
push
xorps
js
mov
xor
jb
js
daa
sbb
sbb
imul
mov
cmp
adc
pop
cmpsl
ret
sub
sbb
imul
stos
stc
cmp
mov
pusha
outsb
sbb
pop
test
mov
enter
jp
mov
and
jae
cmc
test
add
inc
aas
push
sbb
pushf
xor
mov
cld
xor
adc
mulb
aad
sbb
out
push
adc
mov
dec
stos
cld
dec
mov
cs
sub
sbb
mov
sub
outsl
fs
ret
sub
adc
mov
mov
cltd
sbb
lahf
cs
cmpsl
test
das
add
popa
test
inc
mov
push
jmp
fadds
roll
leave
shlb
push
out
insl
scas
lock
test
negl
ja
fs
xlat
mov
fs
scas
icebp
and
repnz
iret
loope
jne
or
gs
pop
jne
ret
mov
loopne
xor
aas
adc
movsb
cli
subb
and
ljmp
test
jmp
pushf
gs
stc
scas
and
inc
cmpsl
mov
shll
fsubl
pushf
lods
fistps
pushf
aam
xor
sbb
mov
mov
movsl
push
cmpl
mov
pop
test
mov
mov
aas
add
lcall
push
inc
sahf
jb
sbb
mov
add
push
test
mov
out
xchg
add
lahf
adc
add
sbb
or
in
jecxz
or
lahf
inc
lahf
lods
jno
dec
mov
cmp
inc
and
jecxz
pop
imulb
fadd
or
clc
push
cmpsb
pop
sub
adc
sub
adc
test
dec
pop
repz
lds
arpl
add
loopne
cmpb
xor
pusha
sbb
shl
nop
sarl
mov
scas
pusha
and
out
mov
aaa
loopne
jne
js
daa
mov
mov
leave
ss
iret
out
sub
jmp
mov
int
in
jp
inc
cmp
mov
dec
push
add
aas
sub
das
xchg
cmpsb
in
hlt
and
push
addb
ret
pop
sbb
pop
jns
dec
rorl
lock
inc
mov
shr
push
mov
cmc
push
loope
fists
ficomps
mov
push
insb
cmp
push
rclb
mov
ds
push
stos
mov
pushf
add
inc
popa
out
in
scas
cmp
in
loopne
mov
data16
inc
int
jnp
mov
maskmovq
dec
pop
ror
dec
pop
inc
hlt
out
lods
mov
insl
ud0
into
adc
jle
mov
in
xor
je
fcoml
xor
inc
aad
dec
push
lret
mov
sub
or
sbb
push
mov
mov
fs
push
int
out
imull
sbb
into
ljmp
jle
lret
fmuls
inc
xor
and
stos
scas
mov
push
sub
push
push
cmp
stos
stos
clc
fneni(8087
daa
aaa
fwait
pop
movsl
adc
xchg
add
iret
pop
dec
dec
push
cs
ja
mov
and
mov
cmpsb
cmp
mov
xchg
aaa
jnp
inc
leave
or
lret
in
mov
cltd
das
jecxz
xchg
scas
jg
xchg
pop
xor
pop
clc
mov
push
xchg
std
cli
inc
jno
mov
cld
std
jns
push
inc
ja
enter
jbe
aam
je
adc
ss
sub
jnp
dec
xchg
out
dec
sbb
movsb
repz
inc
data16
lea
es
gs
xchg
jmp
es
inc
mov
mov
cmp
stos
fisubs
adc
filds
lret
xor
stos
add
lods
mov
push
push
fmulp
inc
ja
mov
stos
xchg
sub
jo
aas
in
cs
sub
mov
rcrl
inc
add
push
inc
and
xchg
test
pop
mov
or
rcr
aaa
in
mov
dec
je
fisubrl
repnz
jecxz
and
adc
sub
xchg
sub
in
ljmp
sbb
stos
inc
jnp
cmp
test
mov
pusha
shr
xchg
dec
jecxz
push
add
mov
xor
pop
mov
mov
lahf
fisubl
add
sti
xlat
jge
mov
jecxz
orl
ds
adc
inc
sub
ljmp
testl
sbb
notl
xchg
cmp
jae
bound
or
mov
enter
outsl
xchg
ljmp
es
inc
cmpsb
pop
xlat
mov
int3
sbb
dec
push
ffreep
outsb
es
aam
lret
add
xchg
jecxz
das
es
inc
dec
mov
fbstp
jg
jecxz
enter
jae
aad
dec
fucomip
ljmp
je
mov
sbb
js
lcallw
cltd
in
push
mov
sahf
sbb
sub
mov
cmp
push
pop
and
cld
repz
pop
popa
dec
push
and
int3
jecxz
mov
call
lds
pop
ret
mov
push
mov
jns
adc
xchg
sahf
std
xchg
stos
mov
mov
mov
aam
jno
inc
iret
sbb
push
xor
pop
std
jle
pop
mov
pop
cmp
fs
dec
dec
lret
scas
mov
push
inc
loopne
nop
pop
ret
and
sub
lret
imul
into
out
jae
push
push
addr16
out
stos
cmp
and
adc
push
das
cli
and
add
imul
movsl
movsl
add
rcll
or
pusha
insl
dec
adc
pop
pop
stos
mov
adc
pushf
dec
mov
jg
in
xorl
dec
or
roll
mov
stos
int
pop
loopne
stos
cmc
pop
mov
hlt
jb
lea
xor
or
fsubs
xor
jns
int
ret
or
inc
jbe
jb
cwtl
mov
mov
mov
or
jae
imul
jmp
sbb
xchg
adc
adc
cmp
shrl
sbbb
jle
scas
xchg
push
imul
dec
xlat
or
rcrb
js
sub
sti
shlb
dec
scas
xor
push
and
cmp
mov
insb
sbbb
push
out
jne
pop
push
sub
sub
fsubl
inc
mov
mov
test
loopne
cmpsl
xchg
outsb
test
mov
aad
repz
fimull
sbb
lret
scas
push
jne
push
mov
xor
test
aad
jl
lahf
cltd
popa
lock
enter
movsb
mov
mov
lods
cs
les
enter
cmpsl
xor
jl
mov
outsb
lock
fcmovb
test
or
subl
sbb
pushf
dec
out
gs
loop
cmpsl
js
hlt
mov
clc
subl
xchg
xor
push
int
arpl
mov
nop
aas
movsl
mov
xchg
dec
mov
jnp
nop
inc
dec
shll
stos
ss
shlb
add
adc
jne
outsb
push
lret
pop
pop
stos
jecxz
add
add
push
clc
mov
mov
sub
shll
dec
roll
aas
shl
xlat
push
cmp
das
dec
mov
mov
mov
xchg
enter
rcrb
mov
shrl
inc
push
sub
push
dec
loope
data16
outsb
ficoml
pop
push
mov
and
jns
loopne
es
pop
jbe
add
jp
sar
shlb
xchg
mov
repnz
xor
xchg
pop
xor
test
xchg
fisttps
test
xor
dec
cmp
fucomi
cmpsl
pop
dec
sub
bound
pop
outsl
jmp
push
outsb
popf
push
jns
xchg
rorl
shll
push
jp
mov
pushf
and
add
rorl
and
mov
pushf
inc
sub
mov
mov
daa
or
subb
add
mov
xlat
jne
les
sbb
cltd
rcll
test
test
pop
ss
mov
lret
dec
cmp
sub
xrelease
add
and
mov
imul
cli
out
sub
rcll
lahf
mov
scas
mov
mov
in
pop
fidivl
fcmovnb
mov
xchg
add
xchg
mov
daa
or
inc
mov
pop
test
ret
xor
lahf
mov
outsl
std
xchg
xlat
popf
pop
jp
jbe
fsubs
imul
orb
es
jmp
iret
insb
shrb
clc
dec
xor
notb
xlat
mov
negb
addb
add
cmc
jp
xor
outsl
arpl
arpl
cld
aam
xchg
add
ret
inc
decb
inc
jp
mov
movsl
std
repnz
mov
inc
dec
push
cli
jbe
sti
sub
test
shll
iret
jmp
test
push
sarb
aas
xor
jbe
sar
cmp
sub
mov
pop
mov
or
mov
sbb
inc
lds
mov
mov
imul
jne
es
call
push
xchg
mov
inc
xchg
mov
inc
pop
ds
loop
mov
xchg
mov
lcall
ds
and
cmp
push
push
jne
mov
lahf
pop
dec
stos
repz
mov
jb
sahf
mov
inc
das
imul
ss
es
ret
pop
mov
int3
dec
stos
xor
mov
sub
bound
mov
shll
jl
pop
push
dec
dec
mov
int
sub
in
add
cmp
dec
cmp
aad
lret
testb
repz
mov
stos
or
loope
rcl
dec
pop
leave
push
cmpsb
cmc
lods
or
mov
aam
sub
mov
cmp
cmpsl
aam
sbb
jge
mov
in
xlat
push
push
inc
xchg
stc
lret
dec
sarl
shlb
pop
jae
mov
dec
insl
pushw
in
fimull
jae
and
call
imul
arpl
or
imul
cmp
pop
mov
dec
outsb
or
out
sti
mov
jo
fsubrl
jno
mov
sub
push
js
xor
lret
or
mov
adc
push
jb
xor
test
jne
inc
inc
lock
test
mov
int
and
pop
int3
xor
or
sbb
inc
adc
pusha
out
jl
mov
ror
inc
pop
adc
and
arpl
pop
ret
xor
imul
push
mov
cmp
xor
push
test
adc
js
rorb
xchg
and
and
mov
arpl
icebp
mov
push
mov
cltd
sub
out
jmp
xchg
scas
test
int
jle
xchg
lock
pop
fisubrl
std
push
sub
cmp
pop
sbb
jbe
jg
mov
scas
movsl
mov
outsb
cli
push
pop
mov
jo
mov
test
test
aas
loopne
pop
xor
ds
shlb
test
les
out
outsl
test
imul
pop
push
xor
sbb
cmp
ss
lahf
sub
push
ret
lods
lock
js
inc
test
and
aaa
lahf
jnp
dec
clc
int3
mov
adc
rorl
rcr
dec
push
mov
mov
hlt
cmp
aas
or
and
mov
jnp
lahf
mov
mov
mull
sub
outsb
xor
cwtl
dec
enter
jb
adc
xor
xor
fistps
pop
movl
pop
push
cmc
push
sub
mov
outsl
mov
cmp
test
ret
xor
sbb
inc
iret
cmp
pop
pushf
or
stos
out
std
inc
repnz
and
pushf
sbb
rcrb
push
sub
pop
loopne
xchg
repnz
xchg
fsubs
insl
xchg
sub
cmpsl
out
inc
div
mov
imul
fimull
ret
mov
jb,pn
out
ret
stos
stc
jle
jns
xchg
push
enter
mov
ret
dec
sub
add
into
lods
cmpsl
push
subl
gs
jnp
mov
aas
cld
jb
xchg
lcall
inc
push
addr16
mov
mov
out
pop
dec
push
shr
dec
mull
test
or
xchg
sti
pop
aam
dec
push
cmpsb
or
mov
jnp
cmp
out
mov
sbb
mov
jp
jo
inc
std
xchg
push
sbb
pop
cmpl
add
adc
and
stc
adc
jns
lret
bound
jmp
daa
inc
adc
push
pop
fs
fidivs
icebp
addr16
dec
inc
popf
fidivs
je
ret
popl
pop
mov
adcb
int3
push
xchg
sub
int3
push
jmp
sbb
adc
in
and
sahf
outsb
xchg
rorb
lods
and
fisttpll
sub
bound
mov
mov
add
test
inc
fcomps
cwtl
inc
sbb
imul
adc
popa
mov
insl
pop
int3
jg
jecxz
addr16
xor
sbb
and
mov
jp
icebp
xchg
add
inc
mov
inc
jo
xchg
dec
cmc
mov
lea
mov
clc
rcrl
inc
dec
jmp
jg
dec
mov
pop
mov
or
push
adc
popf
push
jge
push
pop
out
aas
insb
cwtl
aaa
dec
fadds
mov
pop
sub
mov
mov
out
pushf
cmp
mov
jne
inc
int
out
arpl
sub
add
xlat
mov
daa
cmp
imul
mov
aas
dec
xchg
sbb
sarl
insl
sarl
leave
inc
loop
aad
ljmp
clc
mov
addr16
xor
sub
inc
or
mov
mov
xchg
cli
stos
inc
adc
mov
sub
xor
push
outsl
mov
cmpl
scas
push
outsl
out
sub
mov
add
sub
cmp
jp
call
test
dec
test
mov
imul
mov
mov
repz
add
xor
inc
mov
repnz
push
adc
stc
movsl
cld
ret
or
icebp
fwait
aam
rorb
and
addb
xchg
lret
inc
push
dec
mov
fsubrs
lea
xor
jo
add
lret
inc
sub
mov
adc
test
sahf
mov
and
dec
fisttpll
lret
lret
cmpsb
sar
addr16
call
lret
add
mov
mov
push
push
inc
adc
xchg
mov
xchg
sub
jecxz,pn
inc
subl
add
mov
mov
push
je
shlb
mov
ljmp
inc
lds
in
sti
pop
les
inc
sub
and
mov
enter
in
repz
pop
or
ss
mov
out
inc
push
jecxz
inc
dec
adc
cmp
je
mov
inc
sbb
push
lret
inc
xchg
stc
or
jg
and
mov
loope
ljmp
sub
das
pop
pusha
and
xor
adc
inc
je
dec
test
std
lret
cmp
jmp
push
mov
leave
xchg
xchg
jae
movb
jb
pushf
cmp
cmp
xor
inc
cltd
mov
cmp
test
sbb
cmp
and
mov
mov
test
mov
lret
or
xor
arpl
dec
gs
cmp
cmc
and
mov
mov
or
adc
std
daa
cmp
mov
cmpsl
push
test
sub
xchg
jg
push
sbb
cltd
ficoms
out
mov
push
dec
iret
mov
add
cmc
jg
rol
popa
pop
xchg
mov
mov
jmp
push
mov
inc
mov
and
ss
push
popl
push
pop
inc
sbbb
dec
dec
lahf
cmc
cmp
icebp
mov
jmp
inc
dec
ret
shll
sbb
push
mov
pop
cmp
negl
fstl
test
jno
test
mov
sti
sbb
int
lahf
outsb
ljmp
mov
xchg
in
mov
data16
add
lahf
and
dec
mov
pop
cmpsl
shrb
cmp
adc
or
lret
shrl
and
mov
fwait
iret
push
cmc
jp
jg
mov
outsl
dec
mov
mov
sbb
icebp
and
popa
dec
cwtl
cwtl
pusha
cld
iret
lods
pop
ds
sti
push
js
dec
push
arpl
imul
into
dec
shll
xchg
aad
xchg
sarl
cmpsl
nop
outsl
gs
pop
cmp
arpl
jno
lret
sub
test
add
out
lret
fimull
popf
jmp
adc
lcall
sub
xchg
ret
sahf
pop
push
cmpsb
cli
cs
inc
divb
push
stc
adc
ss
sahf
fstpt
sarl
cli
pusha
test
scas
dec
popf
cld
push
popa
fcmovnb
or
cmpsb
test
adc
mov
add
and
gs
mov
out
dec
or
sub
mov
in
aas
addr16
mov
mov
lret
popf
xchg
cmpsb
ljmp
or
jno
insl
push
leave
int3
mov
mov
out
cmp
xchg
mov
xor
ds
nopl
in
xor
sub
test
or
mov
lods
roll
xchg
cmp
das
out
inc
pop
jo
rcl
loope
popa
jbe
mov
ja
divl
fmuls
or
out
arpl
cmovnp
sub
jnp
lock
mov
xchg
aam
dec
insl
fsts
mov
ds
ffreep
pop
pop
push
jle
jae
xchg
call
jne
ds
pop
pop
pop
clc
in
insl
jecxz
in
inc
jmp
cmp
push
js
cmp
lea
mov
arpl
orl
mov
and
test
cli
int
insl
lds
push
lds
addl
xor
jns
add
test
pop
out
xchg
mov
dec
xchg
insl
stos
iret
ret
clc
iret
mov
inc
es
adc
cmpl
jnp
pop
cmp
push
mov
add
pop
test
mov
inc
stos
and
sub
push
dec
xchg
call
loope
push
jmp
adc
imul
fs
inc
fidivl
aaa
in
mov
mov
pop
std
mov
mov
daa
push
gs
cmc
jge
mov
incb
ljmp
dec
mov
cmp
pusha
loop
dec
mov
loope
lret
mov
xchg
fiadds
inc
out
sahf
in
jbe
das
xor
dec
mov
sbb
insb
roll
stc
cmpsb
adc
bound
cld
adc
in
mov
mov
js
xor
out
and
test
mov
jg
sub
loop
pop
stos
push
cmp
sub
jo
imul
adc
and
mov
push
xlat
icebp
dec
pop
shlb
dec
loop
clc
adc
jg
push
push
cmc
lret
sbb
std
insb
fstps
addr16
xlat
test
adc
addr16
fcmovbe
pop
mov
adc
les
dec
popa
dec
inc
lret
mov
sub
and
xlat
repz
test
inc
popf
adc
add
es
enter
cmp
aad
jbe
dec
pop
mov
fs
xor
scas
dec
in
jp
data16
mov
out
lods
popf
test
cmp
in
out
pusha
sahf
loopne
aad
push
pop
xchg
sub
enter
and
jnp
addl
xchg
and
cmp
cwtl
cmpsl
nopl
cmc
in
gs
mov
jecxz
js
mov
fwait
dec
cmp
stos
mov
push
sub
sub
loope
ret
xchg
dec
cs
and
std
jmp
sub
xor
insl
mov
out
xchg
sub
cmp
imul
jecxz
xchg
add
pushf
cmpsb
cltd
xchg
mov
xchg
lea
xor
pop
mov
sbbl
cmp
lea
jne
pop
mov
and
jmp
rcll
repz
or
lcall
pop
xchg
mov
xor
fdivp
pop
mov
mov
rclb
xor
xor
mov
js
xchg
test
js
or
lods
mov
cmp
cmp
les
xchg
and
sub
mov
pop
aad
rolb
pop
push
sub
sub
lret
repnz
jnp
lahf
inc
push
loope
pop
push
leave
cmc
pop
sub
sub
jecxz
or
cmp
pop
mov
xlat
test
cli
sub
sub
enter
test
shrb
and
inc
mov
fwait
out
mov
pop
mov
pop
add
shl
pushf
lods
cs
mov
add
mov
mov
xor
cmpb
fldt
scas
xor
scas
mov
cwtl
fwait
mov
inc
mov
xchg
jg
jmp
test
ss
or
xchg
stc
mov
aas
fcoml
lds
fs
mov
mov
pop
inc
sub
lret
icebp
out
cmp
jb
popl
sub
frstor
xchg
fcoms
pop
sub
jle
daa
call
icebp
jns
sbb
push
push
mov
xchg
jge
in
adc
dec
imul
xchg
push
mov
jmp
stos
insl
ret
pop
mov
shl
inc
enter
ret
ja
rorb
lret
sub
popa
xchg
movb
ret
pop
out
flds
in
addr16
mov
popa
jno
cmc
lcall
cmc
pop
mov
adc
jmp
iret
jbe
pushf
pop
mov
aas
divl
adc
lea
add
jb
test
jo
and
pop
insb
dec
loope
cwtl
icebp
jecxz
lret
mov
pusha
mov
ja
sti
das
out
cmp
fcmovbe
ja
out
or
cwtl
and
in
xchg
mov
fisubrs
stos
sbb
call
data16
incb
lods
xor
push
jg
xchg
adcb
adc
scas
and
das
dec
adc
inc
push
repz
and
fs
jle
outsl
aam
testb
mov
in
mov
movsb
mov
test
jmp
pop
rcr
cmp
push
fimuls
cmp
cld
sub
and
push
or
fadds
add
sub
imul
sarb
xchg
icebp
dec
in
cmp
sub
out
movsb
repnz
jle
popa
movl
mov
popa
fucomip
leave
sahf
cmpsb
sbb
and
les
mov
je
push
fdivs
out
dec
add
je
cmc
lcall
xor
cli
lea
mov
xor
popf
ljmp
fs
int
sti
xor
jae
xor
push
sub
pop
loop
cmp
jg
xor
mov
notl
mov
ljmp
and
or
addl
xchg
sub
dec
into
push
cmp
lock
pushf
mov
mov
stc
lods
mov
lock
and
enter
sti
inc
push
mov
bound
clc
adc
add
stos
insl
je
rcl
sti
mov
mov
mov
sbb
movsl
fsub
cmp
inc
mov
pop
mov
dec
inc
add
sbb
or
out
test
repz
clc
mov
sbb
andb
subl
je
adc
cmp
push
pop
add
adc
sub
popf
jb
sarl
lcall
mov
shrl
dec
or
pop
xchg
std
leave
in
xchg
repnz
loop
mov
sahf
movsb
stos
daa
dec
cs
enter
add
mov
adc
je
mov
jg
popa
add
mov
sbb
jo
lret
es
bound
jle
pop
sub
leave
adc
adc
cmp
std
dec
mulb
into
push
push
push
sbb
loop
ljmp
jns
cmc
adc
fucom
outsb
loope
scas
inc
loopne
xchg
ss
jbe
push
dec
sub
out
xchg
mov
mov
adc
mov
in
lods
mov
lods
jbe
jbe
xchg
test
xchg
movsb
data16
jge
push
and
adcb
sbb
sub
or
lock
adc
or
or
cmp
jb
cli
cmc
push
add
push
or
sahf
pop
call
adc
pop
mul
rolb
fistps
pop
in
xorl
and
pop
pop
xor
inc
xchg
jb
std
and
inc
inc
hlt
or
and
and
dec
sub
js
xor
cmp
pop
repz
xchg
cmp
pusha
popa
sbb
inc
mov
inc
stos
mov
xor
data16
jmp
inc
fisubl
dec
outsb
mov
xor
stos
movsl
cwtl
stos
repnz
movsl
cmpsl
or
popf
sub
test
nop
push
insl
das
xor
lea
pop
or
cmp
xor
div
sahf
ds
mov
jmp
jns
push
xchg
icebp
dec
jbe
sub
mov
pop
sbb
arpl
push
rcll
jl
rorl
push
push
loop
or
pop
xlat
sub
mov
lea
cmp
jne
mov
aad
mov
pusha
cltd
fucom
aad
ja
mov
arpl
push
dec
leave
push
mov
or
inc
mov
inc
pop
cmp
and
push
movsl
xchg
inc
mov
cmovb
mov
ss
aas
xor
pop
push
xlat
jb
pop
cld
les
jae
es
out
aas
icebp
aas
repz
roll
out
cvtps2pi
loop
jne
cmc
scas
aad
bound
or
pop
in
xchg
dec
push
cmpsl
in
repz
in
mov
pop
cmc
icebp
mov
lds
lret
pop
lea
ret
sbb
aaa
sarl
mov
push
add
nop
sarb
inc
push
out
mov
xor
sub
xlat
sti
insb
fcomip
arpl
jne
imul
mov
mov
mov
popf
adc
adc
pusha
sahf
lret
jmp
pop
jp
insb
cmpsl
iret
adc
mull
push
bound
orl
cwtl
sbb
mov
mov
jo
jmp
fcomps
and
xchg
xor
ja
dec
flds
repnz
fbld
xlat
sbb
and
lahf
xchg
add
cmp
push
js
push
rcll
cmpsl
outsb
ja
int
je
cmp
call
int
add
mov
in
inc
mov
ret
push
adc
sub
aam
push
cwtl
push
and
mov
pop
ret
cmp
add
lods
xchg
sbb
push
pop
jne
ret
mov
xchg
pusha
cmp
addl
outsb
push
jo
pusha
rclb
jle
inc
repnz
outsb
fldcw
pop
aad
xchg
jle
call
xor
sbb
jo
sub
jns
imul
push
das
test
inc
enter
mov
push
lret
clc
mov
pop
pop
jecxz
or
movsb
addr16
test
jns
aaa
mov
lods
repz
inc
dec
dec
add
fwait
xor
lods
xchg
addr16
cmp
or
fsubp
jecxz
adc
and
js
popf
cmp
mov
js
and
or
mov
lahf
push
or
add
arpl
jnp
cwtl
dec
fbstp
push
push
mov
add
lret
adc
dec
aam
fidivrs
sub
pop
mov
pop
dec
mov
icebp
jns
addr16
pop
jp
add
jbe
inc
push
adc
jno
ret
mov
cmp
test
mov
das
push
mov
cmp
loope
add
cmp
pop
out
fucom
mov
ficoms
adc
add
lds
push
mov
adc
inc
xor
mov
mov
xchg
pop
cs
xchg
dec
out
lea
sbbb
mov
dec
scas
sbb
repz
mov
lret
add
mov
enter
mov
fldcw
dec
sti
sbb
mov
xor
aas
adc
mov
mov
jmp
scas
dec
adc
pushf
enter
test
es
mov
cmc
sbb
pop
mov
loop
fbld
mov
in
in
cmp
aam
lock
jbe
sbbl
addr16
mov
pop
dec
cmp
jle
int3
lods
fnsave
xchg
hlt
cltd
cmpsl
int3
push
cmp
and
testl
push
mov
mov
mov
fists
mov
in
mov
dec
int
stos
xchg
mov
aas
and
mov
shll
iret
add
repnz
fcomip
push
jo
xor
xor
sub
fidivrl
pop
enter
pop
push
cmp
out
sbb
hlt
xor
imul
jecxz
out
adc
mov
rorl
and
xchg
sub
mov
sbb
ds
mov
xor
xor
fcoms
in
les
inc
call
lds
addr16
dec
call
dec
decb
jge
xchg
mov
inc
push
lret
mov
sbbb
pop
mov
bound
xchg
jmp
lret
xor
push
shlb
mov
stos
lea
or
repnz
xor
cmc
mov
mov
mov
fs
out
lods
orb
inc
das
orl
push
dec
cld
hlt
aaa
popf
and
cs
or
aam
lret
add
xchg
add
fmul
mov
pop
push
and
test
xor
jnp
push
adc
cmc
testl
in
pop
lcall
xchg
jno
cmp
xchg
add
jb
lods
or
push
cmovge
gs
rcrb
aas
sub
and
mov
mov
int3
orl
dec
jle
or
icebp
adc
and
pop
and
or
pop
push
and
jns
cmc
pop
loop
cmpsb
pop
int3
pushf
mov
jge
test
sbb
in
push
test
dec
and
repz
pop
es
stc
dec
jmp
push
xchg
fs
sub
mov
and
andb
and
mov
dec
fldt
mov
repnz
jp
popa
shrb
push
cmpsl
dec
inc
mov
sti
out
jns
jns
push
lret
push
jo
js
test
pop
or
add
adc
mov
pop
add
sub
call
enter
imul
in
adc
es
inc
mov
cmpsl
mov
sahf
fistl
movaps
adc
cmp
outsb
jge
jl
fmull
outsb
sbb
and
das
nop
xor
fnstcw
faddl
inc
or
inc
mov
out
dec
xchg
or
or
and
dec
insl
and
jp
dec
xor
stc
cmp
mov
loop
xchg
pop
sub
out
les
iret
or
or
xor
sub
scas
roll
ret
pop
adc
cmp
shrb
cmp
repz
push
and
lahf
jbe
cmc
rcr
imul
call
ljmp
inc
repnz
repz
add
xchg
cmp
dec
push
sub
inc
xchg
in
pop
add
jae
imul
es
aam
lods
mov
push
cmp
sti
jmp
mov
inc
pop
jb
imul
mov
std
ja
mov
and
loopne
out
fsubrp
or
mov
je
sub
xchg
xor
loop
jl
mov
sbb
mov
repz
cmp
movntps
call
lds
aad
orb
mov
repnz
stc
mov
xchg
push
addr16
jg
and
fistps
sub
mov
push
dec
ret
scas
iret
jp,pt
mov
jmp
jnp
and
out
pusha
push
mov
sarb
rclb
mov
outsl
nop
inc
or
test
mov
divl
idivb
push
sbb
adc
js
ret
div
filds
adcl
faddl
ret
insb
xchg
aaa
sub
cmc
rcrb
mov
cmpsb
mov
inc
mov
adc
mov
iret
jne
addr16
adc
lods
jge
iret
add
mov
les
ret
mov
mov
or
lds
mov
pop
lds
or
addr16
xchg
loope
out
lret
into
shll
sbb
pop
mov
mov
lds
xchg
dec
sti
inc
jmp
push
out
dec
out
pusha
les
rcrl
mov
mov
fwait
inc
or
jnp
jbe
jmp
faddl
sbb
cli
fcoml
hlt
pop
xchg
stc
pop
lret
std
pop
mov
xchg
ret
ljmp
inc
inc
jnp
add
jae
or
pop
mov
test
into
dec
push
mov
out
imul
push
mov
dec
cs
arpl
repz
jl
add
and
inc
mov
add
stos
lods
divl
mov
out
xchg
hlt
hlt
jmp
push
sbb
mov
push
repz
mov
testb
mov
lock
ret
int3
rol
scas
cltd
stos
pop
mov
aam
jb
test
ja
sbb
fldcw
inc
rol
mov
push
stc
and
lds
gs
mov
sub
xchg
orb
xchg
outsb
ds
je
rolb
xor
inc
lods
push
jbe
and
loopne
mov
call
scas
jbe
aad
dec
mov
leave
jno
or
jmp
loop
mov
fsubr
xor
pop
pop
imul
arpl
mov
daa
fwait
sbb
daa
cmpsb
push
sbb
push
aas
inc
cmp
js
cmpsb
icebp
mov
sub
loope
inc
pop
cltd
add
sub
sub
pop
sbb
es
cmp
adc
std
mov
dec
test
mov
sbb
or
loope
pop
add
cmp
mov
loope
out
mov
test
jns
jp
rcr
lods
sub
in
fcomi
pusha
sbbl
enter
repnz
xchg
fildl
nop
shl
inc
stos
adc
jns
push
xor
shll
test
inc
clc
cmp
cmp
cmp
or
xchg
cmp
sub
out
rcl
test
int3
xor
test
inc
jo
sti
mov
cwtl
push
test
sub
jl
xchg
mov
je
and
jnp
aad
roll
xchg
xchg
out
sub
cmc
mov
mov
dec
mull
pop
imul
jno
loopnew
in
pop
daa
mov
subl
cli
push
lahf
adc
xor
shr
fldcw
or
cmc
jno
cltd
js
lods
es
add
loop
cmc
pop
jne
push
dec
fsubl
mov
xchg
outsb
pop
push
lods
jmp
mov
sub
or
cli
cmp
push
sbb
sti
and
addl
hlt
shrb
inc
int3
ljmp
jns
xchg
imul
push
ficomps
into
push
lea
push
jmp
mov
mov
pusha
daa
test
aas
pop
and
sbb
jbe
cld
int3
and
sub
fstpl
ret
xor
cltd
cltd
ss
push
sub
mov
outsb
sub
mov
jno
pusha
hlt
and
mov
out
cmpsl
sbb
or
add
mov
mov
cld
mov
lock
negb
push
sbb
scas
mov
into
mov
mov
push
jno
cli
daa
fs
jne
xchg
mov
adc
lret
push
add
in
inc
mov
sbbl
mov
push
mov
decb
or
popf
adc
call
sub
imul
or
mov
imul
push
and
mov
add
cs
cs
dec
push
cli
je
pushf
mov
jmp
and
mov
nop
and
sti
test
insl
lahf
fucomip
test
into
push
inc
loop
into
pop
lcall
stos
mov
or
scas
inc
movsb
nop
dec
cmp
xchg
mov
xchg
aad
lea
jmp
push
fidivl
and
dec
pop
es
rcrb
push
out
adc
imul
xchg
pop
jecxz
push
push
test
leave
stos
imul
ljmp
mov
fnstcw
mov
mov
test
adc
fcoml
mov
sub
les
mov
jp
mov
and
push
jns
mov
loopne
ffree
xor
mov
dec
lods
std
push
pop
mov
cmp
adc
lahf
aad
pop
std
pop
jg
cmp
push
add
or
mov
inc
insl
pop
loop
push
pop
lds
jg
inc
xor
push
add
insb
pop
outsb
mov
in
dec
jae
loope
and
dec
mov
push
mov
mov
out
shrb
add
or
mov
in
icebp
in
mov
lock
cmpsl
dec
and
push
stc
lret
stos
aad
inc
mov
loope
cli
xor
iret
fs
js
mov
aaa
xor
jl
push
in
xor
lods
xorb
cmc
adc
inc
les
jo
push
scas
sub
test
xor
pop
mov
cmp
leave
add
in
dec
das
test
or
inc
pop
mov
dec
cmovo
xchg
and
pop
cmc
xchg
mov
mov
xor
inc
or
xor
lret
lahf
lcall
or
shlb
pop
sub
xchg
rolb
jb
out
hlt
pop
jne
movb
imul
push
dec
cmp
nop
repz
jbe
push
mov
lods
ret
out
adc
lcall
or
and
xor
pop
pop
xor
xor
mov
pop
jecxz
jecxz
fsubrl
and
fstpt
and
xor
push
dec
vmwrite
xor
mov
iret
nop
popf
mov
addl
test
mov
mov
loop
pop
dec
xor
sahf
cmpsb
cmp
add
xchg
in
jge
and
adc
mov
cld
dec
adc
add
pop
ret
xlat
cmpsl
hlt
jmp
sbb
xor
cmp
and
sbb
dec
fyl2xp1
imul
scas
mov
xlat
iret
lcall
cmp
pop
cli
add
push
or
and
nop
add
sahf
jns
add
and
pop
or
xchg
popl
out
mov
sar
sarl
push
mov
lahf
dec
fistpll
ljmp
in
xchg
sbb
lock
outsb
rcll
cmp
es
jno
xchg
dec
pop
cwtl
and
mov
decb
inc
xchg
jnp
xchg
outsb
mov
pop
aas
and
mov
pop
pop
pop
push
xorl
sbb
aad
enter
dec
pop
jg
pop
inc
mov
sbb
loope
test
rcrl
sub
inc
mov
xor
xchg
sub
stos
pop
stc
out
or
push
mov
mov
jbe
lret
jl
pop
f2xm1
addr16
test
loopne
xchg
push
sub
jmp
rcl
loope
shl
shll
fidivl
sbb
pop
jp
outsb
sar
sti
jl
lock
push
adc
scas
sbb
pushf
dec
pop
sbb
inc
pusha
cmp
stos
add
sar
pop
pop
inc
jnp
inc
and
ss
iret
test
rcrl
push
lahf
ret
cltd
pop
cmpsl
jmp
and
or
dec
aaa
insb
repnz
adc
mov
adc
jecxz
push
mov
addl
dec
xor
popf
rorl
adc
inc
scas
cmpsl
in
hlt
pop
jns
jl
lahf
jge
mov
push
or
push
ss
inc
ret
mov
inc
jl
mov
jae
xchg
ja
mov
sub
adc
shrb
insl
stc
lods
in
push
jbe
sahf
jmp
pop
pop
stos
inc
add
mov
dec
lods
sbb
roll
jmp
mov
or
insb
push
jbe
inc
push
mov
dec
stc
rcll
sub
outsb
int
fimull
mov
jno
pushf
rep
sub
fwait
js
je
lock
lock
cld
push
jns
cli
adc
outsb
xor
push
add
mov
dec
push
fstpl
insl
nop
aas
std
push
pop
adc
xchg
pusha
adc
dec
jne
pop
jecxz,pn
shll
jg
cld
bound
adc
out
xchg
jmp
or
popf
clc
enter
lcall
cltd
cmp
cmpsl
fidivrl
sahf
sbb
fmulp
movsl
loop
sub
subl
xchg
lahf
pop
ss
mov
out
lods
push
mov
jp
je
mov
sarl
and
jno
ljmp
test
xor
fimuls
pop
testl
xchg
and
enter
les
sub
jecxz
and
leave
mov
mov
pop
add
sbb
mov
jg
out
adc
subb
jae
xchg
popa
fstpl
in
inc
scas
fimull
stos
push
negb
mov
stos
xchg
sbb
dec
repz
rcrl
and
jns
pop
inc
mov
jp
lret
lods
xchg
imul
inc
ret
jecxz
jle
push
cmp
jnp
xchg
inc
cmpsl
into
cmp
out
push
lock
inc
imul
leave
sub
push
xor
loop
out
repnz
test
popa
in
arpl
divl
jmp
pop
and
lcall
fists
or
push
ja,pt
pushf
and
cmpsl
cmp
cmp
jns
lret
jnp
jp
add
xchg
jb
pminsw
push
pop
push
js
aad
mov
push
sti
cwtl
movsb
in
or
sub
push
jmp
idivb
adc
push
sub
fbld
mov
adc
fs
aaa
fidivrl
loop
mov
sahf
dec
stc
sbb
fwait
mov
les
jmp
in
mov
fmul
mov
mov
mov
in
int
mov
pop
test
fstpl
pop
inc
push
xor
outsb
cwtl
lret
lods
sub
cmp
sbb
sahf
mov
fistl
cmp
xor
popa
std
jmp
idivl
stc
mov
push
bound
sub
int3
imulb
cmpsl
jns
push
jno
gs
movsl
add
cmp
ljmp
sbb
lcall
cs
dec
ss
jmp
xchg
xchg
into
in
loop
mov
cmpsb
xor
push
mov
sbb
cmp
icebp
lds
shrl
dec
push
sbb
enter
adc
xchg
orps
inc
in
push
out
sbb
bound
push
xchg
xchg
adc
insl
scas
int3
hlt
out
in
lds
outsl
mov
stos
test
ja
movsb
jns
push
out
mov
std
adc
sarb
sbb
loopne
shl
inc
stos
js
cltd
nop
jg
ljmp
xor
les
inc
scas
adc
mov
xchg
outsl
mov
fdivs
jmp
pushf
imulb
in
sahf
mov
and
push
sbb
mov
sbb
jae
dec
cltd
orl
push
ret
sbb
lods
cmpsl
popf
pop
mov
xor
push
outsl
lea
imul
ds
pop
outsb
lret
fdivl
ficoms
cvtps2pi
iret
and
sbb
jmp
xchg
ja
cs
les
xchg
subb
popa
subl
jb
test
bound
or
scas
sub
and
jge
dec
or
lahf
dec
loope
imul
mov
inc
sbb
aam
adc
mov
js
loope
dec
repnz
iret
xor
push
repz
ss
icebp
popa
pusha
adc
sub
sahf
out
cld
mov
pushf
in
fucom
in
and
jno
shl
mov
and
xchg
pop
ljmp
push
popa
loopne
pop
add
cmp
sub
or
cmp
mov
into
shlb
sbb
rorb
push
loop
rorw
addr16
pslld
jecxz
lret
addl
stc
and
popf
mov
pop
or
test
mov
mov
cmp
add
xor
hlt
lahf
test
imulb
shll
addr16
jb
cmp
rclb
mov
js
loope
pop
jl
cmp
mov
fcompl
sub
arpl
add
clc
sub
out
dec
xor
cmp
add
aad
or
cld
jnp
mov
daa
jmp
dec
inc
push
xchg
jns
push
lret
fildll
pop
aas
rolb
and
inc
mov
ja
in
dec
lcall
fimull
imulb
lahf
fldl
mov
popf
inc
add
scas
xor
mov
jle
out
call
or
arpl
data16
push
jg
fiaddl
xor
adc
xchg
lret
jp
shrl
sti
lea
fwait
cmp
adc
scas
xchg
push
adcb
jnp
shlb
sub
out
mov
data16
mov
add
mov
repnz
inc
or
addr16
or
pop
mov
mov
sbb
inc
mov
loopne
sub
pop
mov
add
mov
cmpsb
fstp
aaa
in
cmp
xchg
aam
mov
rol
lret
clc
dec
add
mov
pop
mov
into
popf
scas
hlt
push
test
mov
xchg
dec
inc
xchg
sub
add
mov
sarb
push
pop
shr
mov
jmp
xor
jnp
lods
stos
popw
ljmp
ror
mov
dec
in
xchg
lahf
add
shll
add
push
jmp
fnstenv
or
test
push
in
jns
dec
xor
mov
fs
cltd
ret
mov
xor
xlat
stc
faddp
xor
testl
xchg
js
xchg
adcb
sbb
xor
icebp
icebp
mov
cmp
icebp
pop
mov
xor
popf
mov
stos
mov
push
push
jmp
dec
mov
outsb
mov
movsb
pop
loop
pop
stc
mov
or
test
dec
ja
rcrl
and
dec
xor
out
pop
call
dec
sub
ljmp
repnz
dec
cltd
jle
and
hlt
dec
xchg
add
lds
mov
and
dec
adc
fcmovnb
pop
jge
mov
scas
lcall
pusha
cli
pop
push
or
xchg
add
mov
mov
iret
ret
push
fiadds
test
and
jne
outsb
stc
rclb
shll
sbb
sarl
mov
xchg
cmpsb
jno
test
push
clc
fldenv
and
orb
int
aaa
call
inc
iret
dec
test
shrb
or
xor
fcoml
mov
stos
es
and
sarl
fstps
push
and
adc
or
sti
push
sbb
repz
dec
cmp
jb
adc
mov
fnsave
test
mov
sbb
add
mov
adc
rcll
jecxz
adc
add
imul
and
cmp
int
into
fimuls
es
clc
outsb
hlt
cmpsb
jnp
outsl
dec
jns
stos
add
lcall
jo
gs
xor
dec
sub
add
add
aam
and
outsb
xchg
cli
push
xchg
sub
xor
lcall
ljmp
jno
xor
mov
into
mov
and
mov
shll
out
out
fldl
or
xchg
aas
scas
adc
cltd
arpl
sub
test
jg
shrb
cwtl
dec
xchg
and
mov
test
lahf
in
push
dec
fidivs
mov
lret
std
fnstsw
stos
ja
stc
pop
arpl
sbb
popa
aas
jl
mov
sub
cmp
push
jge
mov
scas
mov
cmp
sub
out
adc
int3
xor
ljmp
decl
push
ss
mov
rcll
jmp
or
add
pop
ret
jl
in
shl
cmc
xchg
lods
pop
mov
arpl
iret
es
je
mov
push
add
dec
mov
xchg
outsl
lret
add
push
stc
or
adc
setbe
popa
inc
cmp
sbb
std
inc
sbbl
jge
in
cmp
dec
test
pop
ja
and
sbb
enter
mov
std
adcl
lods
mov
add
adcl
mov
adc
mov
jle
adc
ss
cmp
xchg
sub
sbb
jmp
orl
imul
iret
bound
sub
pop
mov
sbb
sub
std
lock
mov
dec
jp
cmp
sti
cwtl
and
dec
cmc
xlat
adc
push
push
jp
mov
aas
cltd
xchg
add
popf
ljmp
ja
rcrl
xor
adc
jmp
and
mov
fs
jbe
push
pop
or
int
mov
cmpl
daa
jl
jae
std
push
dec
ret
mov
sbb
stc
adc
rcr
push
push
jnp
cmpsl
or
setg
mov
fs
mov
cmp
stos
mov
les
xor
xor
hlt
push
loop
xor
xor
xchg
mov
int3
pop
jmp
popf
lea
xchg
inc
pop
xchg
xor
movsb
mov
mov
lods
cmp
push
add
mov
out
enter
and
add
jmp
ss
xchg
inc
std
mov
jecxz
lahf
mov
xor
mov
fstpl
pop
mov
das
aam
sbb
cmp
outsb
jo
sub
mov
mov
jno
jmp
cmp
jb
xchg
or
rclb
add
dec
mov
push
cmp
icebp
fstpl
xchg
in
cmpsb
dec
js
adc
aam
pop
in
test
ds
mov
aaa
pop
cmp
sbb
dec
jo
aaa
or
jl
jge
sti
dec
inc
int
mov
dec
insl
sarl
out
pusha
les
sub
rorb
jecxz
xor
mov
adc
stos
fcmovnu
popl
icebp
pushfw
in
js
arpl
insb
pop
jnp
sahf
fwait
outsl
add
jp
fidivs
lds
dec
bound
mov
jg
pushf
popa
jl
xchg
out
and
data16
in
cld
arpl
dec
lods
addr16
sub
jnp
mov
adc
movsb
push
test
or
je
inc
fstpt
js
lcall
mov
stos
es
call
xor
mov
lret
jbe
xlat
push
dec
sub
icebp
mov
pusha
pushf
js
out
mov
ljmp
push
mov
pop
ss
aad
jnp
data16
fdivs
sbb
xchg
sbb
xor
push
push
test
out
mov
xor
insl
cmpsl
xor
popa
push
into
mov
mov
outsl
xor
daa
dec
cmp
pop
dec
rcrb
scas
xchg
gs
sub
int
inc
ljmp
dec
mov
int3
test
pop
adc
fstpl
jg
jo
pop
lds
sbb
xor
lahf
jbe
call
call
mov
adc
cwtl
ds
jnp
mov
mov
mov
xchg
in
test
mov
cmp
sub
stos
pop
inc
xchg
mov
mov
jno
dec
xchg
dec
lds
rcl
jbe
mov
mov
sub
hlt
aas
rcrb
or
sbb
inc
mov
sub
xchg
inc
xor
jge
movsl
adc
out
dec
xor
jp
lcall
ds
fistps
arpl
sub
loop
xor
imul
fmul
push
push
test
dec
xchg
xor
and
sti
inc
push
sbb
push
mov
jae
add
outsb
jbe
rclb
xchg
add
not
inc
std
outsl
mov
jge
mov
out
push
push
stc
mov
dec
xor
xor
cld
cmpsb
push
sub
cmp
adc
loopne
mov
notl
fs
mov
fs
jbe
jmp
sub
or
mov
xor
jae
sbb
or
jmp
cmp
in
xor
or
fwait
jb
jmp
mov
sti
arpl
jb
jecxz
mov
inc
pop
sub
push
xor
and
mov
test
jmp
xchg
mov
adc
mov
cmpsl
test
xchg
lcall
sbbb
test
xor
hlt
dec
and
pop
arpl
push
mov
adc
cmp
pop
xchg
mov
xchg
mov
pop
pop
and
cltd
cmc
adc
xchg
out
mov
in
inc
insb
mov
inc
sub
inc
or
movsl
fisttpl
std
sub
dec
rorb
mov
xlat
xchg
sahf
sbb
mov
cli
jmp
in
push
sar
outsl
bnd
mov
or
push
lods
dec
fsubs
and
mov
bound
insb
mov
hlt
sbb
xchg
call
insb
mov
xor
cmp
adc
fstpt
xchg
and
enter
inc
int
add
mov
cs
adc
push
push
push
cmp
inc
dec
mov
jecxz
cmp
sub
and
mov
add
cmpsl
mov
incl
outsl
mov
scas
out
jmp
push
pop
xor
push
pop
mov
push
leave
insb
popa
push
jns
mov
shll
lods
stc
mov
inc
stos
stos
mov
fs
add
push
add
pop
mov
mov
dec
xlat
shrb
inc
fstpl
pop
add
sub
outsb
sbb
cmp
mov
stos
iret
aad
pop
lea
jns
push
mov
shll
push
add
fs
dec
fstp
lods
iret
add
pop
jno
cmp
in
pusha
push
pusha
mov
xchg
lods
sub
je
jbe
mov
inc
in
push
scas
lcall
mov
mov
stos
jbe
add
inc
outsl
and
push
mov
cltd
out
mov
xor
and
jecxz
dec
jae
xor
mov
jne
xor
dec
mov
out
daa
insb
mov
test
xlat
clc
orl
addr16
sub
sarl
sbb
xchg
cmc
lea
popf
cmp
inc
shlb
mov
pop
mov
or
xchg
pop
dec
xchg
std
jle
jecxz
pop
icebp
test
mov
xor
insl
push
aaa
jle
push
fnstcw
cltd
fidivrs
test
cmp
or
shrl
xor
dec
push
aas
ljmp
insb
stc
roll
mov
xor
cmp
in
pop
cmpsl
inc
movl
pop
mov
cs
jl
stos
xchg
xchg
mov
rol
pop
pop
inc
xchg
mov
lods
jae
and
pop
jne
adc
add
jg
push
scas
or
pop
lds
mov
insb
pop
jb
lock
lcall
pushf
pushf
les
adc
mov
dec
pop
push
sub
imulb
mov
mov
mov
repz
and
bound
push
cmp
repz
adc
push
out
mov
adc
loop
stos
and
lcall
repnz
arpl
call
xchg
push
popf
cs
mov
iret
pop
mov
mov
cltd
xchg
or
ror
rclb
into
outsl
inc
lock
inc
sub
push
cmc
enter
lahf
xchg
mov
mov
mov
pop
mov
into
mov
mov
sub
xor
dec
je
loopne
push
in
addr16
movsb
push
jb
jb
les
jne
xorl
sub
cmp
jb
ret
imul
sub
pusha
mov
push
iret
sub
test
mov
and
jno
lods
sub
push
cmp
pop
mov
xor
xchg
fs
fists
pusha
sub
stos
daa
adc
test
xchg
add
jmp
cs
popl
mov
sub
rorb
scas
jecxz
jo
testb
or
lret
inc
pop
mov
jbe
lret
ljmp
lods
fnstsw
mov
dec
mov
jbe
jne
jmp
dec
dec
push
sahf
xor
pop
data16
mov
mov
jmp
fisttps
cmp
dec
call
movsb
dec
push
lods
loop
call
scas
fsubr
into
pop
inc
mov
mov
add
fdiv
or
dec
pop
push
cld
stos
out
testl
dec
test
test
cmp
enter
sarl
sahf
sbb
add
outsb
push
push
idiv
loopne
mov
sub
insb
or
sbb
push
into
mov
mov
push
jne
insb
mov
sbb
shlb
and
jb
mov
pop
movsl
xchg
lcall
dec
cmp
pop
nop
orb
addb
lods
call
test
sub
xchg
mov
xchg
das
add
jb
imul
cld
lret
jmp
lret
and
out
jns
inc
add
cmp
addr16
lea
push
or
cli
imulb
add
inc
movsb
pusha
sub
decb
dec
movsl
sub
daa
je
movsl
jecxz
ret
push
call
add
pop
cmpsl
sarl
or
pop
popf
sub
push
push
jl
dec
lods
outsb
aad
lds
mov
mov
xchg
mov
inc
sbb
into
jmp
fidivl
call
pop
pushf
es
jle
sub
scas
pop
mov
test
mov
into
pop
xchg
mov
repnz
fldl2e
punpcklbw
mov
pop
jo
mov
lds
sti
pop
int
in
push
in
xor
icebp
mov
nop
int
push
lret
or
or
adc
mov
mov
aam
or
lods
sub
and
imul
insb
test
push
lea
fdivs
cli
shll
or
es
mov
xchg
xlat
cmp
adc
cmc
sarl
push
fs
sub
les
popl
pop
xchg
mull
or
lock
fadds
pop
loop
push
push
push
cmp
mov
dec
sbb
dec
int
pop
sub
dec
dec
cmp
adc
bnd
push
mov
add
out
dec
scas
aas
shl
enter
roll
xor
dec
sti
ljmp
sub
cmp
pop
inc
mov
call
ds
pop
dec
adc
je
pushf
lds
icebp
xchg
icebp
je
or
add
add
std
and
jge
daa
icebp
and
cltd
loopne
pop
lret
fidivs
and
inc
popa
loop
inc
and
stc
aas
xlat
in
sti
inc
ret
sub
jns
cmpsl
jb
mov
out
popf
mov
int3
pushf
dec
fdivs
dec
lahf
sti
or
lods
imul
sub
lret
das
repz
mov
int
js
push
dec
push
dec
and
pop
outsb
rcrb
push
in
xchg
aaa
lock
or
sub
cld
out
idivl
fisttpll
stos
dec
fmul
out
pop
push
pop
ss
push
in
mov
leave
dec
cmp
cmp
ret
pop
in
add
dec
or
xchg
loopne
mov
cmp
pop
mov
fwait
bound
xchg
pop
stos
xchg
xchg
jge
mov
lds
movsl
lods
pop
je
push
ret
and
ja
movsb
jo
mov
iret
jg
dec
push
cltd
jmp
push
xchg
adc
aam
aas
rcll
test
movsl
mov
or
in
insb
rcrb
mov
xor
sti
mov
mov
xor
sti
sbb
mov
pop
orl
xchg
cmp
jp
lods
roll
cmp
stos
jmp
jb
xchg
inc
pusha
dec
sbb
xor
rclb
adc
sahf
int
mov
sub
mul
sub
addr16
dec
pop
aad
adc
out
cmp
fidivrs
inc
imul
andl
stos
mov
subl
xchg
push
pusha
xchg
and
pop
push
lahf
mov
mov
xchg
add
adc
xorb
in
test
cmp
out
jp
jb
cmp
jmp
loope
outsb
arpl
aam
ds
insl
dec
clc
fwait
sub
stos
jl
fdivr
mov
ret
loopne
aaa
push
pop
fnstcw
test
es
mov
rcl
push
pop
nop
sub
jbe
xchg
scas
adc
jge
in
repz
or
lret
cmp
inc
out
nop
adc
js
dec
mov
xchg
cltd
sbb
mov
jb
pushf
lock
and
aaa
push
mov
aas
ret
bound
shrl
cmp
mov
inc
sbb
loop
cwtl
shlb
iret
jge
in
repnz
stc
xor
aad
mov
sub
and
mov
cmp
jae
add
cmp
sti
xorl
mov
dec
outsb
nop
lock
movsb
push
jns
pop
xchg
xor
jae
mov
shl
jns
ja
sbb
sub
cld
pusha
fwait
orb
and
dec
aam
xor
xor
mov
mov
adc
mov
xlat
pop
jmp
std
leave
outsl
pop
cmp
mov
shr
js
cs
aam
mov
loope
in
push
fiadds
iret
add
jo
insb
pop
add
sub
int
aas
and
jne
out
ljmp
add
aad
aad
roll
lret
xchg
call
roll
je
fdivl
pop
je
insl
or
clc
ja
push
ret
xchg
adc
adc
jns
mov
mov
fdivl
mov
cwtl
adc
sbb
mov
ret
pop
jno
cmp
jne
icebp
sub
iret
loop
xlat
jb
aas
cmp
mov
jae
or
adc
sbb
pop
mov
insb
lds
rcl
jmp
add
mov
jmp
or
out
push
mov
adc
in
hlt
cmc
dec
dec
push
add
scas
mov
push
enter
mov
in
and
mov
mov
mov
or
pop
std
movsb
mov
outsl
cmp
or
jmp
jne
sti
sbb
lret
gs
jge
xchg
es
sbb
pop
mov
aad
sti
lds
sub
inc
push
sahf
into
sub
cmp
jge
pusha
add
scas
test
inc
lock
add
popa
dec
mov
jle
sub
or
test
insl
insb
call
fsubs
fnstsw
out
lods
jo
pop
xchg
mov
lahf
aaa
rcrb
repnz
add
jno
out
sti
sbb
ja
scas
jnp
inc
ss
stc
repz
lret
cmpsl
adc
out
and
loop
ss
and
adc
sbb
data16
sahf
and
test
inc
mov
mov
nop
inc
adc
repz
in
aad
mov
sbb
and
jo
mov
out
jae
repz
pusha
call
jbe
insl
sbb
mov
adcl
jl
cmc
jmp
fldl
mov
xchg
orl
mov
xor
imul
aaa
cmpsb
sub
push
cmpb
mov
ret
sahf
push
insb
dec
aad
cli
dec
dec
cmpl
inc
pop
stos
sbbl
ljmp
adc
rcl
popa
fst
incl
ja
mov
jns
fmull
adc
xchg
sub
xor
sub
test
mov
sbb
add
mov
fwait
cmp
jp
lods
or
xor
mov
repnz
scas
jbe
dec
loop
adc
jl
das
sub
add
push
cmpsl
out
sarl
sub
cmp
pop
jmp
das
jno
mov
mov
mov
lds
ficomps
mov
xchg
adc
mov
or
fsubl
int3
jbe
negb
adc
pop
xchg
jg
inc
popf
mov
add
lods
mov
cmp
call
pop
cmp
sub
push
xor
inc
pop
xor
mov
inc
cmp
sbb
xchg
addr16
add
xchg
pop
lret
pop
sbb
rorb
cwtl
adc
outsb
xor
lahf
cwtl
cmp
xlat
outsl
js
lods
enter
in
cmc
jl
insl
ret
cld
into
cmpsl
int3
mov
aas
iret
pop
dec
fisubs
xor
mov
adc
push
jle
arpl
xchg
lcall
rcl
jb
pop
xlat
xlat
cmc
test
mov
pop
cmp
pop
mov
icebp
or
xchg
add
test
je
pop
pop
pushf
push
clc
fwait
and
cmp
adc
jp
imul
jl
insl
cmp
shl
mov
jb
insb
das
mov
jle
loop
mull
lahf
or
dec
divb
mov
in
xlat
mov
adc
adc
cmp
pop
lock
incl
mov
loopne
cmp
push
xchg
popf
cmp
dec
fmull
xchg
scas
aaa
mov
push
lds
jle
mull
nop
mov
aaa
insb
mov
pop
mov
add
add
lods
cmp
adc
bound
shld
xor
scas
insb
ror
xlat
fistps
cmp
cltd
ret
cmp
add
sbb
xor
xlat
mov
xor
pop
or
mov
mov
pop
add
fiaddl
sub
and
adcl
outsb
jp
movups
xor
ja
movsl
sub
pop
fldlg2
xor
aaa
bound
cmp
jl
add
stos
or
aaa
or
lock
sarb
into
or
xor
mov
pop
test
test
repnz
cmp
ss
jne
js
adc
xor
sti
ljmp
sub
pop
pop
hlt
inc
lods
ret
mov
stos
rcl
pop
add
lods
repz
ja
andb
int
stos
add
jnp
cmp
and
shrb
push
push
cmpsb
jne
loopne
mov
aaa
xchg
std
cmc
add
addl
push
push
mov
lret
out
xchg
push
scas
pop
jmp
cmp
sbb
sub
pop
int3
adc
cmp
movsl
notl
popf
sub
sbb
testb
cmpsb
mov
nop
fsubl
mov
and
mov
lods
add
jo
mov
fwait
mov
sub
sahf
mov
jmp
jp
lods
subb
mov
popa
mov
out
cmp
lret
loop
hlt
mov
in
jno
inc
popa
mov
pop
sahf
dec
or
bound
pop
xchg
pusha
repnz
arpl
pop
sub
mov
fists
push
rcrl
add
cld
xchg
das
test
and
cmp
js
add
shrl
dec
clc
or
mov
test
loop
in
out
repnz
sub
imul
js
lods
pop
ret
jle
repnz
lock
push
cmp
mov
push
cs
sti
loop
jecxz
jecxz
in
push
adc
or
mov
dec
outsl
pop
add
push
test
mov
sbb
out
and
mov
adc
mov
pop
jo
shl
add
test
lret
pop
repz
cmp
or
push
cmp
arpl
dec
js
sub
add
insl
aam
je
and
ljmp
pusha
in
pop
pop
repnz
lahf
jecxz
insl
fnstenv
cmc
cmpb
add
shl
out
enter
cli
dec
outsb
add
cmp
add
mov
scas
jg
icebp
cmpb
push
mov
mov
inc
int3
jge
stc
push
orb
movsl
clc
mov
dec
push
pop
inc
aam
jnp
push
popf
test
cmp
test
push
test
jae
idivl
ds
sti
pop
in
xor
sub
jecxz
dec
test
in
jg
outsl
pop
sub
mov
mov
cltd
lea
push
inc
mov
sbb
mov
into
repz
sbb
jne
xchg
fildl
enter
inc
cmp
orb
inc
xor
xchg
and
sbb
or
dec
call
je
movsl
mov
mov
cmc
and
mov
push
ja
pusha
push
ret
push
mov
push
push
roll
push
ficoms
sub
data16
jo
xor
jle
jnp
sbb
imul
dec
addl
and
scas
lea
into
push
cmp
mov
dec
adc
push
ljmp
testl
fstpt
mov
and
adc
out
push
dec
mov
lret
lahf
push
call
cmp
adc
sub
xchg
mov
int
cs
push
pop
jbe
pusha
ret
pop
or
jnp
lret
popf
jno
mov
dec
cmp
pop
mov
dec
dec
inc
xchg
nop
aam
jnp
push
cwtl
popa
inc
push
jne
mov
test
dec
insl
repnz
inc
mov
or
loopne
mov
mov
shrb
cmp
and
push
mov
jnp
jbe
cmp
add
sub
fdivrl
mov
jae
aam
in
ds
push
push
jle
mov
enter
xor
enter
clc
sub
push
sub
push
inc
xor
arpl
push
movsl
sub
aas
push
add
push
push
xchg
sbb
or
xorb
xor
jmp
loopew
sbb
mov
jl
fnstcw
xchg
out
outsb
pop
cmp
insl
orl
mov
icebp
scas
xor
add
push
mov
in
outsb
inc
test
and
fs
js
sub
js
stc
adc
adcl
mov
sbb
fsts
pop
dec
mov
add
mov
xor
sub
mov
dec
push
scas
cltd
pop
out
andl
and
push
scas
insl
mov
in
fsubl
and
in
jne
insl
pop
mov
lds
inc
jns
notb
aaa
cmp
nop
add
mov
mov
daa
cmpb
daa
arpl
mov
nop
jl
sbb
xchg
sbb
scas
dec
push
aas
lcall
jne
ljmp
daa
into
rol
popl
repz
test
ret
jge
mov
lcall
and
jne
fs
xor
and
jg
nop
xorl
push
sub
movsl
addl
fldt
mov
pop
sti
jp
cmp
sbb
pushf
mulb
dec
pop
test
lret
out
xor
pusha
pop
call
fldcw
sbb
movsb
cltd
icebp
xchg
js
sti
rsqrtps
imul
mov
int3
add
jo
lret
push
jo
and
pop
inc
or
xchg
mov
popf
icebp
dec
mov
ljmp
fistpll
js
cld
and
jb
sbb
sar
cmc
ficoms
rolb
call
shlb
inc
mov
inc
inc
out
ljmp
int3
lahf
and
aam
js
gs
mov
mov
sbb
inc
mov
aam
out
imul
shlb
jecxz
mov
xchg
sub
in
jp
pop
sub
out
mov
fistl
cmp
idiv
cmpsl
fstps
and
stos
roll
loop
filds
adc
mov
sub
outsl
mov
out
sbb
sbb
cmp
loop
push
jmp
jg
add
cmc
jge
into
repnz
and
mov
sub
and
or
sub
inc
xor
xchg
jecxz
test
xchg
pop
sub
mov
inc
pushf
in
mov
cmp
xchg
call
cmp
xor
push
sbb
cmp
xor
inc
or
cmpsb
inc
pushf
repnz
subl
mov
mov
pop
inc
pop
pop
add
push
xor
dec
insb
icebp
stc
inc
adc
jno
pop
mov
mov
call
cmc
fimull
imul
cmp
jnp
jae
push
pusha
xchg
leave
lret
test
mov
add
sbb
or
rcrl
mov
inc
xchg
cli
mov
icebp
ret
push
adc
mov
stos
loope
sub
subl
ret
xorb
lcall
in
imul
rcrb
mov
mov
add
insl
enter
xor
enter
aas
and
jmp
inc
repnz
das
shll
loop
sti
enter
fdivrl
dec
cld
cmp
add
and
pop
adc
pminub
pop
jle
adc
fucom
jo
rcr
and
dec
mulb
xchg
ss
pop
xchg
mov
push
mov
cmp
mov
and
movsl
test
add
push
jne
or
xor
xchg
fcompl
xor
dec
stos
cld
cmpb
cltd
sub
out
xchg
add
mov
adc
and
insl
mov
call
inc
insb
jmp
mov
cmp
inc
dec
test
cmpsb
or
jl
jmp
cld
divb
icebp
rcrl
dec
into
mov
sub
or
pop
cmp
stos
push
dec
pop
dec
lahf
pop
jbe
pushf
mov
ret
aad
inc
adc
outsb
iret
and
mov
cltd
sbb
fimull
push
mov
inc
cmpsl
ss
into
mov
inc
mov
mov
adc
gs
cmpsb
mov
xchg
fidivrs
shrb
ds
push
jo
dec
sbb
fisubrs
cltd
cwtl
imul
cs
sbb
xor
fistpl
mov
sub
or
cmp
data16
jbe
push
nop
mov
test
je
and
imul
cwtl
cmp
pop
push
add
fwait
xor
mov
cmp
rol
mov
imul
pop
test
dec
inc
jb
lret
gs
gs
fdivrs
dec
fldt
adc
ret
cli
and
mov
rcr
pop
iret
pushf
jl
ja
mov
test
xchg
push
push
push
cwtl
pop
dec
jmp
ret
sbb
push
and
fldenv
or
cwtl
pop
lahf
iret
loopne
stc
mov
aas
cmp
out
cltd
dec
jg
add
fs
inc
mov
mov
xor
pop
rorl
stc
add
push
shlb
outsl
jnp
mov
data16
push
stc
or
mov
dec
lods
fidivrl
aad
jb
jp
adc
fstpl
out
push
pop
push
repnz
xor
cmpsb
jno
adc
sub
jns
rcll
testl
xchg
lods
pop
std
out
not
push
arpl
sarl
cmc
mov
xor
xor
jmp
add
clc
int
inc
ds
inc
pop
loop
jb
jmp
push
es
jae
push
xchg
loope
int
cmpsb
fstpl
mov
hlt
rclb
mov
dec
clc
enter
lods
mov
adc
push
inc
inc
in
mov
mov
mov
or
sti
add
loopne
or
jge
sub
xor
test
inc
mov
or
xor
xchg
mov
shlb
xchg
test
rcrl
inc
pusha
mov
pop
fs
std
inc
test
and
push
sub
in
jno
ret
xchg
imul
imul
gs
not
jbe
push
pop
lret
push
pusha
test
repnz
bound
fcmove
pusha
lods
ret
mov
add
lahf
push
dec
aam
cltd
rol
stc
xor
loopne
fdiv
int3
push
popa
xlat
divl
push
mov
popf
jo
lret
pop
aaa
inc
sbb
push
pop
sarb
aam
loopne
inc
push
and
sti
add
data16
popl
push
cmp
ds
jp
out
inc
stc
xlat
sub
push
adc
mov
or
and
andl
pushf
out
inc
jnp
push
pop
les
cmc
sub
shrb
lret
mov
ret
loop
xor
iret
repnz
mov
js
dec
push
hlt
mov
jge
mov
add
ljmp
mov
in
dec
arpl
xchg
push
push
jmp
roll
adc
mov
lods
add
sub
pop
jmp
sub
xor
mov
add
out
push
outsb
or
push
mov
cmpsb
and
sub
test
in
outsl
dec
jae
cwtl
iret
adc
xchg
add
loop
sti
fldt
aad
negb
mov
pop
push
lcall
scas
fwait
push
pop
xor
dec
neg
mov
and
aas
jmp
dec
loopne
push
cmp
pop
push
aad
roll
les
cmp
sahf
out
add
in
sbb
sub
test
daa
call
shl
inc
rclb
mov
mov
push
or
gs
cltd
mov
mov
notb
scas
xor
mov
sbb
repz
je
and
hlt
pop
jno
lock
mov
cmp
lret
sti
jmp
stc
mov
or
fsubp
pop
adc
cmp
mov
sbb
imul
jl
loop
shll
or
in
xchg
mov
jecxz
mov
push
rorl
mov
push
pop
fisttps
jno
enter
shlb
inc
fsub
lods
mov
imul
sbb
leave
adc
ljmp
inc
adc
iret
rorb
mov
xchg
sahf
test
fcmovu
xor
roll
adc
cmc
xchg
cltd
xchg
clc
xor
aaa
inc
jle
bound
mov
es
mov
flds
mov
repz
add
mov
and
xchg
or
dec
xlat
push
xor
add
sti
stos
dec
mov
arpl
jge
and
mov
and
mov
faddl
subl
jb
fldl
jl
les
or
iret
cwtl
aad
cld
fiadds
int
ds
andl
xchg
pusha
test
jl
imul
subl
popf
popf
test
sbb
mov
pushf
cmc
sahf
loop
sbb
jg
or
mov
in
sub
lret
mov
xor
xchg
cmpsl
movl
jno
xchg
fnstenv
xchg
ds
lds
and
jnp
dec
test
jg
aad
fs
lods
mov
aam
ret
in
jge
lods
inc
xor
lret
push
xlat
dec
or
stc
adc
or
scas
push
xchg
in
jge
push
out
lock
push
sub
popa
cmp
mov
add
gs
xor
push
std
add
jl
addr16
pop
ja
inc
lcall
sub
lea
test
mov
dec
enter
faddl
cs
adc
les
pusha
cld
jp
xchg
shr
mov
sbb
xor
add
in
int
jae
lods
inc
fnstcw
and
lods
xchg
insb
cltd
repnz
outsb
insl
push
mov
das
xchg
cli
jns
test
jb
cmp
bound
inc
cld
inc
sub
xchg
fstpt
jbe
ror
arpl
pop
or
xchg
xor
push
mov
cltd
pop
lret
add
ljmp
add
inc
xor
rolb
mov
mov
mov
fcomps
movsl
push
sti
iret
or
sbb
iret
mov
cmpsb
mov
xlat
push
xor
movsb
adc
mov
pop
dec
xchg
popf
push
xchg
and
inc
pushf
ds
stc
nop
push
lret
outsb
mov
jg
inc
out
ret
dec
lret
sub
insl
jecxz
mov
pusha
shrb
inc
pop
jp
pusha
push
jo
sbb
in
ljmp
mov
pop
mov
mov
push
mov
stos
jno
ljmp
lods
dec
addr16
cmpsl
push
adcb
fcompl
out
repz
pop
mov
popa
mov
js
jg
loopne
stos
xor
repz
pop
dec
scas
or
sub
inc
flds
pop
adc
lcall
mov
pushf
sahf
in
aam
mov
lret
into
pop
ds
jns
or
pop
or
pop
rorl
mov
xor
jns
lock
and
jb
out
js
push
or
mov
sub
call
mov
add
fucom
dec
or
insl
lods
xchg
out
sub
mov
push
stc
jb
xor
and
mov
cmp
imul
mov
and
jp
in
add
sbb
scas
sub
mov
push
sbb
sub
dec
push
push
adc
das
in
jnp
push
call
add
add
inc
dec
shll
ret
mov
gs
je
inc
and
mov
or
cmc
pushf
push
dec
fldcw
mov
enter
adc
xchg
imul
mov
hlt
sub
lods
repnz
pop
cmpsb
int3
pop
push
push
fildll
pop
dec
add
xchg
ljmp
inc
mov
add
sbb
loope
fisttpll
test
cmp
lea
jmp
and
inc
inc
dec
add
mov
cmp
cmpsb
cld
jns
add
jnp
lods
sbb
or
jecxz
xlat
pop
loope
inc
cmp
jnp
xor
psrld
outsl
sets
push
jb
add
pop
mov
adc
cltd
imul
mov
cmp
push
lret
lcall
jge
shlb
push
enter
xor
fcmovb
leave
xlat
shrb
iret
jne
cld
xchg
aad
outsb
out
loope
aas
pop
jle
call
push
divps
call
adc
inc
or
loop
sub
jno
adc
stos
scas
ret
jnp
xor
mov
int
xlat
popf
aas
mov
ljmp
xchg
incb
mov
test
das
and
fcomp
xchg
jg
sbbb
cmp
jo
movsb
cmc
popa
or
dec
mov
hlt
cmp
cmpsl
xchg
xor
outsb
dec
xor
sbb
add
mov
jp
test
cwtl
xor
mov
fdivp
mov
push
pop
push
adc
daa
or
dec
jne
pop
push
fmuls
dec
repnz
out
pop
jmp
push
mov
sbb
sub
dec
jb
inc
lods
cmp
inc
jb
pusha
jecxz
ja
sub
and
imul
rcr
xor
or
ja
push
sti
jge
mov
jecxz
push
mov
jp,pn
pop
and
adc
js
or
mov
add
adc
lahf
fwait
test
sahf
sti
sbb
push
faddl
ffree
cmp
xchg
mov
or
gs
jne
xor
adc
ss
movsb
and
ds
push
stc
sub
pop
imul
add
mov
ret
dec
jp
movsb
cmp
fs
jecxz
xor
cmp
vmwrite
lds
aaa
scas
jns
mov
lods
js
inc
mov
dec
add
hlt
pop
xor
adc
or
popf
cmp
orb
xchg
pop
adc
inc
mov
mov
mov
xor
jns
lret
inc
mov
rorl
aaa
cmc
jno
jns
sbb
aas
adc
mov
pop
push
mov
leave
bound
mov
xchg
mov
pushf
jno
adc
shrl
xchg
dec
mov
jp
xlat
xchg
imul
and
and
hlt
xchg
sub
in
or
loopne
xchg
arpl
daa
mov
dec
push
out
jno
imul
xor
push
lret
ds
cli
mov
pusha
xchg
mov
les
ja
ja
jne
std
inc
mov
dec
or
sbb
push
xchg
mov
les
jge
jmp
mov
pop
jmp
mov
and
sahf
mov
pop
push
adc
or
push
lds
lcall
inc
and
add
popa
cmp
add
es
mov
aad
or
lret
incb
aaa
mov
int3
movsb
jae
add
loop
fwait
into
inc
repnz
pop
test
or
pushf
mov
lahf
std
inc
or
mov
or
scas
les
ret
addr16
jle
sbb
inc
and
repz
jno
and
loopne
xor
cmp
ficompl
xchg
cmpsb
shlb
push
fldenv
add
xlat
sub
pushf
or
aad
nop
insl
mov
das
movsb
sbb
les
push
cmp
push
mov
and
xor
gs
sbb
dec
cld
dec
sti
adc
cmp
inc
mov
or
xchg
imul
out
push
repz
ret
stc
or
ret
scas
testb
cmp
push
or
sti
sub
out
int3
sub
xchg
mov
jmp
mov
pop
popw
loop
cmp
jbe,pt
pop
or
into
push
lcall
xor
insl
inc
fdivrl
xor
insl
mov
and
fidivrs
insl
lret
jmp
or
add
addb
into
ret
and
sbb
pop
jb
call
push
pop
fmull
mov
mov
pop
fisubrl
jp
arpl
mov
into
call
scas
mov
mov
mov
or
add
js
lea
je
or
imul
stos
sub
mov
or
adc
jecxz
push
fsubrl
sub
out
orb
es
jle
or
add
dec
jae
stos
ljmp
arpl
mov
imull
mov
jo
mov
cmp
enter
mov
push
and
push
push
jp
mov
ss
mov
xchg
xlat
jne
ljmp
scas
cmp
mov
or
aaa
pop
sub
aam
sbb
jle
fisttpll
push
gs
scas
cs
sbb
xchg
arpl
imul
jo
and
fwait
add
mov
jns
cmp
imul
mov
sub
inc
mov
fistpll
cwtl
into
xchg
mov
adc
enter
mov
sub
xchg
inc
mov
test
jle
in
mov
or
insb
mov
add
clc
enter
mov
insb
jp
fstpl
cmc
jecxz
jb
cmp
inc
lock
scas
pop
sub
pushf
leave
xchg
in
pop
push
jmp
xor
orl
pop
out
pop
xor
push
fdivl
sbb
mov
cmp
les
data16
or
pop
sahf
dec
lods
test
repnz
std
ljmp
add
cmp
shrb
mov
cmp
xchg
mov
aad
xor
dec
cmp
xor
aad
aaa
push
xor
and
inc
lods
lds
loop
mov
rolb
jge
adc
movsb
pop
inc
pop
fsubs
mov
dec
pushf
push
addr16
cltd
loopne
cmpsl
add
hlt
enter
rolb
cli
push
push
lods
lea
cmpsb
adc
std
enter
or
inc
std
pop
rclb
lcall
and
xchg
and
outsl
mov
jns
or
jnp
cmp
jle
test
jno
add
mov
pushf
push
pop
lret
sub
popa
cmp
pusha
pop
pop
pop
mov
and
ds
inc
push
inc
movsl
or
popl
xchg
sub
push
ss
in
push
push
cmp
inc
sub
or
and
adc
gs
pop
in
nop
gs
lods
inc
pusha
rcl
dec
out
push
mov
std
jb
mov
movsl
xchg
jge
out
sbb
fsubrl
shll
lea
mov
cmp
xor
mov
fucomi
adc
test
imull
mov
out
jmp
scas
lret
sbbl
or
mov
push
test
scas
mulb
ja
repz
mov
xchg
mov
mov
jne
adc
adcl
inc
mov
jge
xor
rcrb
cltd
xchg
mov
push
pushf
jnp
int
insl
pop
pop
hlt
sahf
int
out
or
mov
mov
rcrb
jecxz
pop
out
jp
daa
sbb
adc
test
jb
icebp
and
add
movsb
cwtl
jbe
pop
push
jbe
jecxz
ss
pusha
aas
test
inc
jmp
test
repz
push
repnz
in
dec
loopne
sbb
mov
sub
jbe
pop
inc
mov
pop
adc
es
inc
pop
push
rorb
inc
pop
mov
jp
enter
cs
mov
mov
cs
arpl
push
mov
push
mov
arpl
pop
mov
inc
pop
lahf
cwtl
cs
push
fs
imul
push
mov
scas
cmpsl
iret
adc
pop
pop
cmp
pop
xor
ficomps
cmp
movsb
pushf
ljmp
add
mov
cmpsb
and
xchg
jecxz
sbb
cs
sub
insb
jbe
push
lret
test
lods
mov
cld
mov
fs
sbb
lcall
jb
out
shl
mov
mov
test
icebp
insb
mov
adcl
jmp
rorl
addr16
add
or
cli
imul
in
dec
decb
iret
fsts
and
pop
imul
mov
sbb
shlb
aam
aaa
cmpsl
lcall
inc
loope
rcl
xlat
cli
pusha
or
pop
pop
sahf
pop
je
dec
out
out
pop
inc
outsb
lret
mov
cmpsb
push
and
pusha
xor
adc
add
push
sbb
or
test
sbb
iret
into
sbb
mov
mov
movsb
lcall
mov
aas
fldl
or
mov
fstl
loopne
or
jmp
aaa
lcall
sti
inc
push
mov
fldcw
fdivl
push
add
mov
sub
dec
dec
es
mov
insb
mov
add
dec
pop
xor
shll
jo
ret
push
xchg
js
cmp
sbb
cmpb
notb
aaa
adc
lock
pop
add
inc
mov
fadd
dec
lea
ja
sbb
push
int3
ja
cmp
xchg
jmp
dec
sti
sub
decb
push
jbe
lahf
mov
loopne
xchg
aad
cmpsl
mov
lds
jbe
jp
mov
inc
fwait
cli
sbb
dec
mov
das
pop
sbb
test
mulb
xor
ret
jb
lea
daa
dec
mov
test
arpl
or
mov
cmp
dec
je
add
pop
add
xor
ret
pop
addr16
jb
sbb
lret
sub
jb
push
cmp
xor
mov
cli
jno
mov
icebp
or
lods
push
pop
arpl
test
cltd
aam
cmpsl
push
test
loopne
jne
lods
push
mov
jnp
aam
cmp
shll
cmpsb
lret
push
mov
adc
xchg
add
push
inc
and
cmp
cwtl
lock
lods
cmp
cmp
jl
dec
sub
ret
dec
push
pop
pop
cwtl
push
arpl
mov
xor
stos
iret
movl
cmpsb
ss
adcl
gs
pop
sbb
adc
je
lock
cwtl
pop
pop
mov
mov
es
xchg
cwtl
out
pop
xor
rcrb
mov
out
cmpsb
lock
adc
xchg
popa
call
fnstsw
aas
xor
jecxz
jge
mov
jbe
in
pop
stos
xchg
and
push
or
adc
mov
add
and
int
cmpsb
cmpsl
xor
sarb
out
jp
int3
jne
data16
imul
mov
mov
orb
jecxz
sahf
les
mov
cs
xor
cmp
or
lds
xor
cwtl
inc
cmpsl
xchg
lods
mov
or
sub
xor
xchg
cltd
call
sub
popf
jg
loopne
stc
sahf
pop
jle
push
push
push
scas
push
pop
lds
push
out
sti
addr16
sti
inc
adc
lods
dec
testl
dec
dec
in
aad
fstpl
fsubrs
pop
bound
mov
daa
imul
dec
rorb
rorb
cmp
ret
push
mov
jnp
and
hlt
xor
icebp
pop
fidivl
cmpb
sub
jp
and
jae
out
inc
xchg
xchg
test
shlb
pop
xchg
dec
cmp
jmp
lods
push
xlat
mov
iret
xorl
mov
loope
fldenv
cmp
popa
sbb
cmp
lds
dec
std
jae
lret
aam
jno
xchg
adc
test
arpl
loopne
sub
jmp
pop
sbb
jp
icebp
adc
roll
push
int3
scas
sbb
and
mull
in
fcoms
mov
xchg
aad
cmp
aad
es
div
cmp
pop
ja
fcompl
lahf
jb
les
jb
add
imul
or
lret
lea
insb
inc
xor
pop
lods
cmp
loop
jo
daa
sub
push
insl
add
test
inc
pop
ds
xchg
sbb
xchg
mov
ret
pushf
out
bound
aaa
in
jns
lret
test
and
mov
mov
push
aad
push
movb
dec
movsl
dec
aas
cmp
or
insb
add
push
mov
cli
inc
pop
jecxz
xchg
adc
adc
test
mov
push
lret
iret
sbb
push
xor
lret
fstpl
jmp
dec
sbb
int
push
pop
adc
sub
pop
or
mov
loope
xchg
cmpsb
jne
rcll
inc
dec
rol
inc
repz
into
test
sbb
fs
mov
out
push
lods
dec
jo
nop
xor
fiaddl
jne
push
cltd
mov
pop
lock
inc
pusha
out
ja
pop
mov
repnz
mov
outsl
gs
adc
adc
mov
rorb
dec
loopne
fcompl
xor
in
out
andl
inc
mov
mov
popa
xor
jb
and
mov
xor
testl
push
gs
popa
or
insl
cmp
push
adc
mov
inc
outsb
pop
sub
es
pop
dec
in
dec
sti
daa
ds
pop
or
sub
pop
sti
sub
inc
inc
xor
mov
stos
adc
push
repz
popa
aas
xor
sbb
mov
ljmp
test
inc
pop
lds
aaa
mov
into
lcall
sbb
jg
mov
push
xor
xchg
pop
mov
mov
xchg
jns
jecxz
push
mov
setns
pop
les
lcall
mov
push
inc
hlt
add
xchg
xchg
fsubr
sbb
mov
mov
jns
loope
mov
aam
xchg
and
out
mov
test
stc
xlat
pop
in
sahf
adc
test
out
cmpsl
clc
add
and
fstpt
cmp
iret
pop
in
mov
pop
out
cwtl
ljmp
lea
pushl
inc
mov
lods
inc
inc
push
sahf
cmp
and
mov
test
xor
mov
sbb
xlat
clc
mov
jmp
mov
cmp
dec
adc
test
lods
test
pop
dec
scas
dec
cli
je
popa
or
and
adc
je
pushf
aaa
pop
inc
sub
pop
das
mov
ret
sbb
mov
call
inc
inc
dec
cmp
add
fcmovu
cmpsl
out
jle
je
cmp
psubsw
mov
pop
add
popf
cli
cmp
dec
adc
aaa
fbld
jns
xchg
xlat
push
mov
lret
inc
fldenv
daa
push
pop
jp
jne
std
cmp
jmp
pop
sbb
lea
rclb
jb
sahf
lcall
fnsave
lods
fdivr
sbbb
inc
sbb
jle
xchg
repnz
cltd
mov
sub
bound
dec
inc
mov
mov
mov
lcall
and
dec
inc
or
into
push
icebp
lahf
dec
inc
push
or
int3
jae
jns
sub
push
faddl
scas
stos
test
pop
outsl
sub
daa
xchg
aas
ss
aaa
cmpsl
add
fadds
dec
jle
aam
in
cwtl
flds
outsb
lret
in
xchg
push
dec
cltd
mov
sbb
cltd
xor
rol
fsubl
hlt
and
lods
jne
or
and
mov
test
out
push
or
pop
iret
cmpsb
stos
insb
or
mov
mov
cld
fpatan
stos
dec
scas
ret
add
sbb
add
dec
sub
and
or
jmp
pop
nop
mov
mov
xchg
and
cs
cltd
clc
jbe
shl
jne
je
pusha
in
push
stos
and
aad
inc
stc
out
ja
repnz
das
push
push
push
jo
mov
adc
sbb
bound
pop
mov
sub
das
cmp
pop
lcall
inc
or
or
cmp
cmp
cmp
cmp
insb
jg
sbb
jge
fisttps
daa
xchg
jnp
shr
std
lods
xor
fwait
ret
nop
js
lcall
data16
stos
inc
lret
push
mov
in
fildl
ja
and
pop
add
mov
in
sub
jge
xchg
add
xor
mov
loope
lcall
mov
test
dec
movsl
stos
stos
mulb
mov
loope
add
adc
inc
into
xchg
jb
stos
test
dec
ja
mov
hlt
repnz
jbe
pop
outsl
adc
sbb
cmc
jmp
mov
les
push
dec
ret
adc
mov
in
outsl
xchg
xchg
mov
mov
pop
and
sub
push
cmp
mov
fisttpll
lock
jecxz
cmpb
or
jbe
stc
rclb
loop
adc
out
aad
aaa
fisubl
popf
mov
rcrl
enter
xorl
mov
bound
lods
int
es
push
loop
cmpsb
fists
stos
dec
xor
in
cwtl
xor
and
repz
repz
or
jp
out
dec
push
lods
adc
outsb
orl
inc
rorb
dec
mov
jmp
push
adc
aam
mov
clc
mov
nop
in
repnz
cwtl
push
sub
aam
mov
arpl
cmc
mov
aad
push
ds
stc
inc
cwtl
add
add
mov
mov
or
and
popa
out
jne
or
gs
int3
xor
jmp
dec
add
scas
ret
jecxz
fwait
gs
xchg
fs
mov
lgs
test
into
cli
cmp
xlat
push
xchg
arpl
add
pop
ret
or
jae
dec
inc
fisubl
mov
sbb
lea
loopne
cwtl
adc
push
pop
mulb
cmp
sbb
leavew
jbe
lods
in
xor
adc
pushf
xchg
cmc
or
mov
jbe
mov
adcb
push
mov
and
lock
movsl
mov
jl
xchg
mov
dec
sarb
leave
jbe
les
push
in
aaa
rcrb
jmp
xchg
xchg
mov
aad
xchg
out
cmc
cmc
mov
jle
sbb
xchg
cmc
dec
loopne
add
inc
pop
out
sahf
xchg
or
mov
shr
dec
mull
xchg
inc
mov
inc
pop
cltd
cmp
jno
sub
xor
imul
das
mov
enter
lret
add
ret
pop
pop
and
push
negb
xor
or
stos
sbbl
push
sbb
lea
aaa
jp
loop
movsb
jecxz
out
popw
add
mov
xchg
movsb
inc
lea
cs
adc
jmp
jns
hlt
cltd
outsl
mov
sbb
aad
out
add
mov
daa
movsb
outsb
je
daa
fisttpl
mov
sub
dec
add
mov
mov
mov
mov
xor
push
sbb
sbb
ret
push
sub
fisubrl
mov
sbb
sti
xchg
jbe,pn
inc
mov
xor
xchg
mov
xor
dec
pop
dec
repz
outsb
adc
mov
mov
or
xchg
enter
fbld
jle
scas
jnp
mov
pop
sarb
ret
or
add
xchg
ds
mov
ds
fcoms
xor
pop
mov
js
or
or
jg
sub
ss
jnp
aaa
push
sbb
cli
movsl
adc
in
enter
gs
shl
xor
shlb
in
push
or
repnz
aas
inc
cmp
adc
test
xchg
pushf
jns
xor
pop
cmpsl
or
dec
jl
inc
lock
scas
dec
inc
sbb
cmpsl
dec
or
pop
mov
scas
test
cs
addb
or
add
adc
and
jmp
mov
cwtl
neg
cmp
mov
jne
out
or
popa
push
or
fcompl
and
add
fstp
hlt
or
es
inc
and
xor
xchg
icebp
pop
pop
gs
out
xchg
rorl
and
inc
adc
decb
in
inc
das
xchg
inc
cmp
adc
iret
adc
fdivs
fmull
fidivrl
inc
lock
test
ljmp
mov
dec
jge
mov
mov
in
inc
lret
sub
push
add
inc
rolb
lret
mov
mov
repnz
push
jmp
nop
lock
jne
or
add
xchg
fstpl
adcb
in
sbb
testl
mov
inc
ljmp
lahf
sahf
fucomip
xchg
loope
cmp
add
mov
jle
das
es
mov
out
scas
and
and
push
adcl
ss
daa
xor
popf
out
in
push
mov
adc
xchg
pop
idivb
pushl
cli
lock
sub
dec
mov
pushf
and
and
cmpsb
mov
mov
dec
loop
lods
mov
fwait
fs
inc
leave
add
shl
mov
enter
jno
ja
es
fmul
out
mov
mov
insl
mov
imul
pop
push
loope
out
mov
push
int
insl
loop
inc
pushf
push
jg
pop
xor
jns
icebp
jg
dec
jle
lret
sbb
ljmp
and
cmpsb
je
mov
pop
pop
and
shll
stos
cld
jle
mov
and
ror
xor
adc
clc
pop
and
adc
int
rcrb
and
in
fs
loope
fs
outsb
pop
and
icebp
popa
jae
aas
push
in
lock
and
cmp
loopne
adc
ret
rcll
sarl
sbbl
mov
sbb
push
leave
or
addr16
dec
jle
ret
mov
in
cmpsb
inc
jno
fwait
aad
jno
push
or
xchg
daa
cmc
test
pop
cltd
push
or
push
add
insl
pusha
push
sar
jmp
ds
pop
pop
xchg
xchg
mov
xchg
inc
push
arpl
mov
inc
popf
mov
outsl
in
xlat
dec
out
cmc
adc
add
stos
divb
daa
jne
pop
mov
and
mov
sub
sti
xlat
or
cwtl
cmpsl
mov
push
and
and
out
jb
dec
cmp
adc
mull
orl
inc
or
inc
add
ss
jns
test
test
xchg
leave
add
or
push
inc
imul
ret
sbb
inc
ljmp
popa
push
or
lret
jmp
into
lahf
pusha
pop
adc
andb
inc
xor
into
push
test
outsl
roll
aam
test
xchg
and
inc
movsl
rorl
push
aas
mov
sub
mov
cmp
test
adc
mov
lcall
inc
jecxz
aas
sbb
ds
mov
js
xchg
sub
xchg
repnz
test
or
inc
adc
bound
push
push
push
out
mov
jae,pt
xorl
ljmp
aam
mov
test
cwtl
mov
sub
fwait
fwait
mov
mov
rorl
jbe
cmpb
xchg
add
pop
or
cwtl
cmpsl
roll
mov
or
test
scas
xor
cmp
push
in
push
xor
sbb
mov
cmp
pop
cs
cmpsb
add
jno
clc
mov
mov
jecxz
call
cmc
inc
pop
xchg
push
xor
jne
cmpl
pop
inc
dec
push
mov
jp
adc
inc
mov
fdivs
push
in
or
push
test
cli
pop
sub
sarl
repz
rcrb
outsl
cs
les
call
addb
mov
add
rcl
fwait
mov
mov
push
jnp
mov
jge
add
repz
cmpsb
ja
mov
jmp
iret
arpl
test
lock
jp
repz
dec
lahf
shrb
mov
mov
sbb
scas
ljmp
and
xchg
test
xchg
loop
sub
push
addr16
fisubrs
add
movsl
inc
cmpsl
daa
xlat
loope
pop
orl
xor
pop
fstpt
pop
and
pop
mov
out
loopne
inc
or
jo
xor
mov
pusha
add
mov
aaa
pop
sahf
mov
add
xor
xor
cmp
in
cmpsb
adc
std
inc
mov
cld
aad
xchg
or
mov
sbb
pushf
xchg
sub
mov
sub
lret
cmp
xchg
jbe
fimuls
lock
mov
jle
subb
or
push
imul
add
fwait
cmc
inc
cld
cmc
clc
mov
push
fimuls
jnp
push
sahf
pop
imul
lret
stos
dec
mov
sub
pop
inc
dec
enter
cmp
add
mov
mov
push
sbb
cld
scas
popf
stc
or
sub
cmc
xor
and
mov
dec
push
jnp
dec
lock
add
and
js
xchg
add
cltd
jmp
sub
push
iret
mov
or
inc
movsb
sarb
mov
xchg
mov
add
xchg
cmp
test
inc
in
call
xchg
out
nop
stos
dec
xchg
add
pop
sahf
push
xchg
shl
mov
fsts
jle
jmp
add
sbb
mov
cwtl
fisubs
pop
pusha
std
and
fwait
fwait
lcall
mov
aad
pop
cmp
mov
stc
das
fisttps
mov
fsubrp
xor
test
pushf
sub
insb
mov
ljmp
mov
das
sahf
mov
lds
leave
adc
jns
mov
scas
fcmovne
aaa
xchg
push
pushf
dec
addr16
cmp
push
js
push
sub
or
jne
das
xorb
xchg
dec
sbb
pop
add
xor
xor
or
lret
adc
test
lret
and
shll
shll
sti
ss
out
mov
push
gs
inc
imul
xor
push
sub
adc
popf
lods
or
popa
jmp
outsb
mov
push
popa
push
stc
xor
jecxz
loope
andl
lret
data16
sub
cmp
xchg
sar
daa
out
jno
xchg
loopne
push
pop
push
xor
add
or
cmpsl
mov
mov
imul
push
push
dec
adc
test
jp
data16
fcoml
mov
jge
jb
pushf
loop
insb
sbb
or
mov
test
xorb
cmp
xchg
adc
jle
mov
jge
fidivrl
adc
push
cmc
in
and
addr16
ret
or
enter
data16
ret
fs
dec
addb
test
xchg
cmp
ljmp
sbb
addl
pop
mov
shr
repz
sbb
add
test
mov
pop
in
ja
ja
int
dec
icebp
fucomip
sahf
gs
sbb
rorb
pop
ret
fldl
sahf
jle
mov
enter
or
les
xor
pushf
ds
jbe
xchg
movsl
add
hlt
iret
leave
mov
das
and
mov
jge
gs
movsl
enter
sub
popf
or
push
loopne
mov
rolb
sbb
fistl
xor
sbb
mov
sbb
mov
push
jmp
leave
mov
aam
sub
add
pushl
sbb
mov
inc
sub
ss
popf
jecxz
and
mov
jecxz
jbe
push
jp
and
sub
and
lret
or
xchg
fcmovnbe
out
cmpsb
push
jg
in
mov
inc
imul
inc
or
pusha
ret
add
shll
mov
adc
mov
mov
push
push
jb
pop
adc
dec
sti
popf
mov
push
decb
mov
decl
mov
arpl
xchg
mov
insl
fcmovne
xchg
loop
push
and
mov
and
scas
mov
cmpps
xchg
mov
js
xor
or
test
ljmp
mov
std
fidivs
fstpt
jne
lret
add
add
test
fs
fists
mov
jo
fisttpl
inc
push
mov
popf
or
jmp
dec
andb
mov
out
incl
cmp
data16
mov
arpl
rclb
cmp
pop
push
mov
dec
jne
cmp
fisttpll
inc
mov
popa
inc
sti
jnp
cmp
jge
cmp
jno
int3
sbb
mov
imull
repnz
mov
add
aaa
push
int
xchg
sub
push
cli
sbb
sbb
cld
pop
das
outsl
out
push
dec
push
iret
sub
pop
outsb
ds
jo
sub
mov
mov
push
ds
sbb
mov
jnp
movsl
xchg
addr16
iret
sbb
ja
aaa
sahf
cmp
xor
imul
inc
push
jbe
cmc
push
frstor
iret
cld
ret
cmp
ror
or
pop
push
in
movsl
mov
ret
mov
call
jle
jne
jb
gs
sbb
mov
add
mov
dec
jp
and
xchg
sbb
fsubrs
xchg
and
xor
pop
dec
and
dec
jp
test
repz
dec
cld
fdivrp
xchg
cmp
pop
adc
inc
ds
sbb
inc
outsb
mov
sub
fstl
mov
out
divl
xchg
or
int
jae
adc
inc
adc
iret
sub
cli
mov
jns
outsl
mov
cvtpi2ps
mov
mov
mov
negl
int3
push
adc
xorl
ss
xor
insl
xor
ret
mov
int
insb
push
mov
std
daa
pop
mov
add
jl
xchg
pop
jbe
fstp
dec
push
jp
test
mov
cmc
and
mov
sub
fsts
mov
icebp
lcall
push
clc
popf
adc
insb
pop
push
sub
gs
bound
clc
pop
xor
adc
test
or
push
aaa
aam
mov
pop
fadd
in
ljmp
movsb
adc
fmul
xor
lret
sub
adc
jmp
out
test
or
xor
cmp
cmp
lock
push
xchg
push
lea
out
outsb
xor
sub
pop
mov
rcrl
test
test
insl
mov
shrb
movl
xor
jg
mov
sbb
roll
fwait
cmp
xor
cwtl
outsb
dec
std
pop
adc
call
lock
jo
out
pop
fdivrs
mov
or
test
or
add
jg
ds
shrl
push
mov
test
subl
dec
add
jb
push
repz
push
popa
inc
es
aam
daa
sub
je
xchg
repz
mov
fxch
pop
stos
xchg
pop
add
push
addr16
cmc
xor
push
cwtl
sbb
outsb
ret
int
pop
movsl
inc
dec
adc
imull
fs
push
nop
mov
mov
pop
in
or
or
xor
push
sub
iret
icebp
inc
in
push
mov
jg
xor
inc
sub
jle
flds
lods
mov
mov
mov
aad
xchg
inc
xchg
enter
push
fnstsw
or
in
pop
jl
addl
sbb
out
dec
xchg
mov
cmpsb
je
lock
dec
push
mov
adc
call
arpl
add
int
lret
push
cli
xchg
or
push
inc
rcrl
cld
aas
or
enter
cld
adc
mov
and
idiv
mov
inc
pusha
aas
adc
add
inc
cltd
ret
stos
fldl
xchg
rolb
mulb
outsl
inc
mov
clc
add
jge
or
cmp
jnp
push
adc
lcall
lods
ljmp
add
mov
mov
pop
fistpll
les
std
xor
imul
lret
ret
adc
dec
rcrl
xor
int
insb
lret
xchg
lcall
sub
jp
cmp
jge
mov
xorl
pop
cmpsb
data16
sbb
and
insl
aam
sub
xor
inc
pop
cmc
xlat
xor
fcoml
mov
inc
cmp
lock
sub
aam
cmp
jns
data16
in
inc
jnp
imul
adc
jns
xchg
xchg
sub
mov
pop
inc
jl
daa
sub
xchg
and
cmp
mov
fwait
or
push
mov
add
pop
inc
mov
mov
adc
outsb
add
cmp
stos
inc
data16
dec
xchg
push
cmp
stc
cmp
pop
repnz
cltd
lahf
dec
rcr
ljmp
or
in
idiv
dec
jle
out
popa
mov
jnp
jo
sbb
mov
lods
in
dec
xchg
lcall
and
std
fstp
xchg
mov
mov
idivb
in
add
popa
xor
sahf
pop
mov
xlat
lret
xchg
int3
fsubr
gs
mov
rep
xchg
sbb
pop
sub
or
fptan
iret
sub
das
leave
loopne
xlat
xchg
sbbl
pusha
mov
cmpl
out
cs
pop
jg
inc
cli
jno
lods
popa
idivb
and
cwtl
mov
outsl
in
mov
hlt
int
lret
loope
out
cmpsb
pop
add
fwait
push
pop
fsts
loope
sub
imull
sbb
xchg
gs
sub
or
fildl
mov
sbb
loope
test
lcall
mov
xchg
mov
or
dec
sbb
insb
xchg
mov
push
fwait
jge
push
mov
test
adc
or
or
ret
jns
jmp
fisttpl
or
fdiv
and
push
or
into
pop
and
cmp
in
gs
and
mov
test
sbb
mov
xorb
shlb
sub
cmp
mov
mov
xlat
dec
scas
movsl
jo
sub
sahf
cwtl
add
push
add
adc
mov
add
jo
leave
push
fbld
push
aaa
adc
jg
cmp
jmp
add
lods
out
arpl
sbb
pushf
test
lea
mov
lds
adc
mov
cli
loop
push
cmp
mov
xchg
mov
dec
push
xor
mov
iret
jg
inc
pop
dec
inc
xor
int
mov
addb
cmpsb
andb
inc
mov
nop
in
sbb
push
xchg
and
cltd
rorl
or
mov
dec
push
xor
mov
pushf
pusha
faddp
popa
jno
jmp
imul
loop
bound
cmp
or
leave
push
les
lahf
test
xor
cmpb
inc
pop
inc
push
xchg
mov
jmp
dec
adc
into
in
push
stos
mov
xchg
inc
mov
sbbl
dec
mov
or
add
in
roll
cmp
dec
rorl
inc
arpl
sub
jg
ret
mov
sbb
jl
loop
popa
scas
xor
les
or
les
jns
outsl
in
xchg
and
adc
xchg
fisubrs
jb
sti
mov
cmpb
pushf
pop
push
cmp
mov
sbb
mov
jle
cmp
sub
pop
movsb
mov
les
jo
sub
in
movsl
push
es
xchg
adc
subl
movsl
mov
addb
or
mov
push
and
sbb
hlt
and
xchg
cmp
fwait
pop
pop
or
sub
and
dec
push
mov
jp
push
cmovnp
ljmp
mov
pop
daa
fdivrp
je
xor
fists
jmp
cltd
push
sbb
adc
and
fidivrl
inc
xchg
ret
aas
mov
imul
imul
fmuls
add
aas
lods
stos
fwait
push
xchg
imul
xchg
outsb
adc
ja
cmp
sbb
xor
pushl
add
aam
bound
decl
push
pop
popf
mov
cltd
in
adc
outsl
push
push
ret
test
inc
mov
int3
popa
ficompl
inc
fstpt
push
gs
lds
sub
lret
mov
insb
out
push
dec
andl
push
mov
or
inc
out
into
mov
pop
pop
mov
nop
sti
and
jge
adc
int3
sbb
mov
std
dec
sbb
js
outsl
rol
ror
ljmp
into
std
nop
les
push
insl
xor
stos
fildll
lock
mov
lds
add
ret
and
sub
sub
jb
lret
out
xchg
aas
jnp
add
lea
push
xor
ss
dec
pop
and
in
xor
popf
or
mov
inc
shl
adc
movl
jge
add
jle
dec
mulb
jmp
push
xor
xlat
mov
fwait
sbb
jg
xchg
mov
cwtl
dec
aam
and
shlb
mov
inc
out
add
xor
rcrl
nop
or
aam
push
xor
sub
xchg
int3
adc
push
insb
ss
push
jge
mul
adc
jg
cmp
inc
xchg
or
adc
pop
and
bound
pushf
xchg
popa
or
fcomip
mov
aas
mov
push
mov
clc
pop
jp
mov
jae
fwait
movsl
jno
xchg
incl
adc
mov
cmp
shr
xchg
subl
je
mov
inc
or
je
mov
fwait
push
mov
push
mov
push
dec
mov
mov
shrl
inc
repz
cmpsb
dec
pop
jp
js
pop
mov
push
push
or
mov
popa
sti
insl
or
push
pusha
icebp
adc
call
dec
xor
nop
stos
add
cmc
sub
push
pop
ret
fmulp
jmp
pop
jb
jp
pop
test
enter
cmp
or
mov
dec
hlt
loop
jmp
pop
xchg
cld
mov
pop
xchg
bound
leave
in
cmp
push
js
daa
rorb
mov
add
icebp
add
shll
mov
lret
mov
pop
lods
nop
jl
mov
jno
mov
lret
and
mov
and
int3
mov
mov
push
in
dec
inc
xchg
insl
add
sahf
shll
mov
pop
ja
and
call
dec
sbb
mov
aaa
xchg
pop
jb
mov
sarb
rcll
shl
in
jg
out
mov
pop
mov
loope
adc
pushf
test
sahf
push
lock
orb
mov
in
call
in
pop
repz
faddl
xchg
jo
les
pop
or
add
shr
push
cmp
jb
lcall
lahf
loopne
push
outsb
mov
mov
adc
jge
xchg
rorl
jae,pn
mov
mov
or
test
lret
fucomi
sub
mov
cmp
cmp
mov
lret
jecxz
stc
dec
and
pusha
add
loope
stos
jl
jmp
xchg
test
or
jno
xlat
push
andb
jp
cmp
push
ss
xor
sub
xchg
lock
clc
test
fwait
popl
and
pop
xchg
push
jne
push
mov
jnp
data16
ret
inc
pop
popa
push
sti
add
sbb
pop
stos
mov
jo
or
in
arpl
mov
sub
outsl
out
cmp
ret
and
arpl
jno
cmp
scas
jle
and
dec
push
mov
inc
pop
push
sbb
les
and
pushf
add
aas
push
sub
in
pop
iret
insl
jle
lods
pop
and
xchg
adc
sub
popf
jge
pushl
in
or
and
scas
jge
or
lret
aas
lret
pusha
mov
ret
add
mov
das
stos
xor
adcb
and
sbb
jecxz
lock
in
cld
pop
xchg
xor
and
push
xchg
andb
mov
scas
cmp
inc
das
pop
add
std
push
imul
and
jg
imul
and
aas
lods
into
outsb
push
pop
loopne
stos
into
int
shlb
cmp
int3
dec
clc
push
pop
scas
js
movsl
push
or
xchg
push
and
cmp
push
ret
shrl
push
mov
pop
xchg
sub
adc
icebp
icebp
out
jl
inc
jns
or
mov
adc
call
and
lcall
adc
nop
nop
loop
je
pushf
out
scas
scas
rcrl
cltd
cmpsb
xor
out
pop
push
jae
je
movsb
sub
inc
gs
orb
es
mov
outsl
icebp
push
popf
fistl
mov
imul
pushl
jns
jmp
add
add
or
rcll
inc
in
jb
aam
popf
dec
sbb
sub
mov
popf
dec
loope
or
fs
or
inc
stos
sub
xchg
fidivrl
out
test
sbb
jmp
cli
or
repnz
clc
xor
sub
add
ds
insb
push
inc
xchg
dec
or
and
or
test
test
ja
cmp
jmp
mov
jl,pn
mov
stc
pop
test
pop
pop
push
fsubl
insb
aas
fcomp
push
ljmp
dec
fsubrp
dec
mov
loopne
cmc
pop
jnp
xchg
dec
sbb
shll
mov
xchg
dec
dec
and
mov
add
mov
sahf
lret
aas
notl
cmp
shrl
aaa
mov
jns
insb
je
outsl
cmp
jns
les
pop
push
jmp
call
jbe
mov
and
cld
jl
testl
pop
jge
mov
stos
rcrl
ret
adc
popa
jae
mov
jg
add
or
mov
jge
inc
adc
movsl
dec
inc
dec
jb
les
int3
in
cmpsl
push
in
popa
stos
and
imul
ss
test
sbb
and
lock
pop
out
add
icebp
pop
add
ss
xchg
inc
mov
mov
xor
test
fisubrl
mov
jae
shll
add
push
xor
cltd
enter
mov
movsl
arpl
in
pop
rcll
sub
xchg
popa
lcall
mov
testb
mov
adc
add
or
push
mov
sahf
test
test
cmp
adc
mov
inc
cmp
lret
movsl
into
pop
adc
shrb
mov
out
imul
sbb
daa
ror
ja
dec
sbb
out
inc
cmpb
pop
pop
call
xchg
je
stc
pop
pop
push
adc
mov
cmc
lea
cmp
jb
in
dec
fs
lock
and
out
popl
and
mov
xor
mov
lods
imul
mov
and
ret
sub
pop
jns
pop
sbb
jbe
std
inc
add
popw
push
mov
insb
aas
jge
js
push
test
scas
dec
dec
cmp
mov
call
push
sbb
xchg
or
nop
xor
aad
sub
lods
cmc
adc
and
int
dec
inc
pop
or
jo
pop
dec
push
lret
dec
bound
sbb
inc
mov
std
roll
lea
movsb
lahf
inc
pop
cmp
lret
xor
jle
scas
push
mov
inc
in
dec
not
push
or
mov
mov
icebp
leave
out
aas
int3
mov
add
sub
ret
mov
pop
arpl
and
lret
xchg
int
add
imul
jl
or
mov
sub
mov
inc
out
lock
in
lea
fsqrt
pop
add
dec
cmp
xchg
cmp
add
js
movb
mov
ret
sub
lods
psrlq
in
push
mov
adc
mov
jg
dec
fisubrs
or
repz
adc
fimuls
mov
fs
xor
jmp
out
xor
pop
sub
cmp
js
mov
cmp
sbb
xadd
jno
push
imul
or
out
leave
mov
cmc
inc
mov
or
jmp
jp
adc
stos
sub
js
pop
gs
arpl
iret
andl
xchg
pusha
scas
jle
mulb
repz
adc
cs
aaa
mov
mov
xor
addl
mov
dec
jnp
repnz
cmp
ror
pusha
bound
jge
sub
pop
hlt
sbb
add
mov
sub
je
lret
mov
xor
pop
imul
lahf
adc
mov
add
movsl
and
or
cli
pop
push
sbb
repnz
imulb
sub
adc
xchg
fs
lcall
imul
loop
add
mov
pushf
stos
in
add
js
mov
xor
push
or
aad
jbe
xor
stos
push
push
test
push
cmc
push
and
inc
mov
xchg
sub
pop
mov
cmp
out
in
in
aaa
sbb
rclb
cmp
push
and
dec
leave
jnp
js
lahf
sbb
js
mov
jno
icebp
dec
in
mov
mov
xor
cmp
repnz
roll
or
enter
cmp
add
adc
xor
push
sbb
scas
xchg
xor
fildll
or
sub
xor
pop
push
incb
sub
push
xchg
es
ret
sub
sbb
cld
ljmp
mov
sbb
cmpsb
mov
ja
pushf
dec
es
loop
mov
xchg
add
leave
scas
cltd
xor
in
pop
clc
sahf
cs
inc
test
imul
sarl
push
inc
adc
in
leave
push
lret
insl
push
sahf
adc
fdivr
mulb
jns
or
mov
xor
ljmp
outsb
and
lods
je
pop
mov
divl
negl
inc
xchg
pop
xor
mull
pop
xchg
pushf
divl
aaa
sbb
sub
loopne
aam
test
clc
sbb
rorb
pop
sbb
pop
push
scas
jge
pop
xor
mov
adc
mov
mov
pop
mov
aam
aaa
cmp
xorb
fbld
test
or
jg
addr16
in
maskmovq
or
ss
xchg
dec
rclb
sbb
lods
jge
cmp
lea
mov
popa
nop
pop
sub
pop
in
les
mov
inc
sbb
sbb
movsl
mov
nop
jmp
jp
sub
mov
inc
ljmp
out
mov
imul
dec
cli
or
cmp
push
enter
sti
stos
orb
stc
pop
dec
shrb
pop
in
push
sub
mov
pop
cld
push
sahf
imull
jecxz
add
fcomip
mov
mov
push
mov
std
aad
out
or
in
fsubl
jbe
in
xor
cmp
push
fstpt
push
push
fistpl
push
out
mov
enter
sbb
lret
mov
push
adc
jl
sub
xorl
into
adc
push
sbb
dec
xchg
mov
rcl
inc
xchg
notl
push
inc
mov
and
adc
lock
jb
xlat
testb
sti
push
mov
jge
test
inc
sbb
adc
in
pop
sbb
mov
loope
fnsetpm(287
push
adc
out
xor
inc
cmc
sbb
ja
ret
sahf
mov
inc
lret
dec
xlat
inc
cld
mov
in
pop
xor
bound
sti
adc
fistps
jo
pop
mov
pushw
push
fdivr
cmp
add
ja
and
sbb
arpl
jl
inc
fstl
inc
cmp
call
xchg
add
push
and
push
stos
inc
daa
scas
pop
ljmp
movsl
fcmovbe
scas
in
xor
frstor
dec
outsl
or
pop
lret
test
into
dec
push
sahf
inc
roll
rclb
jnp
mov
cld
loope
jmp
je
imul
loope
leave
add
rcr
mov
shlb
adc
jg
leave
mov
jns
dec
pop
lock
outsl
out
inc
fsubs
add
or
jge
outsl
add
lods
jo
sub
pop
cmpsb
and
lock
fimull
std
les
jne
ds
dec
or
jge
jbe
mulb
ljmp
rorl
or
pushl
loope
cld
loopne
add
clc
jge
fimuls
ds
push
push
jbe
push
mov
cmp
outsl
mov
jbe
popa
dec
jle
sarb
xchg
iret
pop
clc
ljmp
cmpsb
aam
xchg
sbb
cmp
ja
sub
mov
arpl
insl
or
fwait
xchg
mov
aam
daa
jecxz
push
aas
pushf
push
sub
pop
jnp
loopne
adc
popa
xchg
cltd
mov
jl
pop
in
jl
int3
in
xlat
call
pushf
aas
fiaddl
mov
scas
in
in
pop
int3
xor
into
xorl
js
in
leave
into
jb
out
clc
jns
cwtl
dec
out
pop
repz
adc
into
cmp
ja
mov
outsb
rorb
ja
dec
dec
and
sub
push
mov
jo
iret
imul
int
jle
mov
mov
cwtl
mov
or
mov
pop
mov
mov
popf
jecxz
std
loopne
or
repnz
mov
jecxz
add
mov
in
or
pop
rcrl
inc
push
leave
push
jns
or
or
mov
dec
in
cltd
or
sahf
xchg
fadds
xor
fldenv
or
push
push
lret
scas
add
test
testl
cltd
pop
loopne
enterw
or
push
adc
add
add
xchg
insl
mov
ret
xchg
inc
es
insb
jmp
out
xchg
ljmp
int3
aad
and
jbe
and
mov
add
mov
repz
or
sub
mov
aad
sbb
nop
cmp
sub
add
inc
mov
mov
fcmovb
pop
inc
add
jno
mul
ret
cld
sarl
repz
xchg
pop
adc
imul
in
data16
iret
test
scas
xorl
xchg
scas
push
sub
out
orb
inc
out
sbb
cmp
fstpt
jae
rolb
xor
popf
rclb
bound
cmpl
and
adc
notb
aaa
nop
push
in
jp
jae
das
pop
cltd
mov
bound
inc
mov
in
scas
xchg
pop
dec
and
repnz
enter
jbe
and
pop
push
insb
push
and
xor
xchg
pop
add
sub
push
outsl
xor
mov
sub
and
sarb
addr16
outsl
xchg
jp
push
in
adc
sti
rorl
mov
dec
stc
jae
scas
jmp
movsl
mov
aaa
es
test
fistl
add
or
int
scas
ja
and
mov
xchg
cmc
jg
mov
push
cmpsl
daa
sahf
popa
rcll
mov
nop
es
jmp
adc
xchg
data16
push
mov
mov
and
ds
push
mov
cwtl
je
mov
mov
sbb
sbb
inc
sar
imul
or
into
ret
push
ret
repz
outsb
dec
call
sbb
mov
popa
adc
xor
inc
out
xchg
mov
leave
mov
sbb
pop
fcompl
aas
ja
ljmp
ret
add
ret
mov
cld
out
sub
jmp
fcompl
lods
imul
mov
sarl
xchg
in
out
je
sbb
cmpsl
jb
add
mov
push
shrb
leave
nop
stc
div
jne
adc
mov
aam
subl
inc
shl
out
int3
das
lock
outsb
popf
xor
fldt
aaa
aas
mov
gs
add
mov
cmp
insb
sbb
mov
sbb
pop
jle
and
or
sbb
xlat
inc
in
add
loopne
stc
mov
adc
test
push
xor
xor
inc
imull
push
pop
xlat
jae
jnp
cmp
adc
and
dec
call
es
jp
enter
test
inc
cmp
inc
fdivs
inc
mov
jmp
sbb
sti
dec
loope
ja
sub
add
inc
cmp
xchg
scas
and
cmp
mov
jnp
mov
outsb
aas
mov
out
in
jecxz
into
add
cld
les
loop
sub
std
jp
mov
repnz
adc
cmpsl
cli
lds
mov
insb
inc
clc
pushf
es
gs
mov
scas
pop
adc
es
popa
es
add
dec
cmp
sub
jle
pushf
sub
cmp
mov
mov
inc
xor
movsb
and
mov
cltd
push
push
ret
fs
xchg
popa
mov
pop
dec
adc
cli
imul
mov
ret
mov
sub
and
enter
mov
pop
mov
aas
xor
clc
incl
inc
adc
imul
xchg
cwtl
test
xor
mov
xor
dec
and
popf
repz
add
jno
xchg
mov
lods
in
xor
or
pop
imul
dec
inc
rcrl
dec
ss
out
jo
std
fildl
mov
xor
movsl
add
adc
sbb
or
xor
test
bound
or
add
arpl
xchg
das
push
pop
add
out
test
xor
mov
ret
in
sub
int
add
scas
std
cmpsl
js
add
cs
pop
and
or
sub
decb
les
push
push
mov
cmp
neg
out
out
jno
pop
lods
push
xchg
clc
movsl
hlt
mov
push
imul
inc
js
and
lods
mov
mov
jmp
lock
mov
pop
out
pushf
scas
mov
pop
mov
aad
movsl
jg
cmc
fcompl
loope
jl
addl
imul
popa
xlat
jl
nop
cmpsl
push
dec
cwtl
aam
ja
rorb
dec
xchg
push
inc
gs
cmp
mov
mov
movsl
jge
fs
jo
push
adc
jl
ffree
mov
add
cltd
ljmp
xchg
mov
rorl
push
xor
dec
inc
xor
mov
es
lea
notb
or
adc
idivl
out
out
add
lret
sub
shll
scas
jmp
adc
inc
jno
aaa
movsl
push
pop
pop
pop
cmpsl
add
xor
mov
add
inc
jns
mov
test
out
xor
stos
push
cmp
mov
inc
daa
pop
pushf
cwtl
jnp
cmp
ret
and
stos
outsb
dec
gs
xor
enter
jo
test
inc
outsb
int
arpl
mov
ja
push
shlb
push
pop
or
xchg
add
das
ljmp
call
cmp
cmpsl
push
sub
jp
xor
mov
jmp
fisubl
movsb
mov
dec
xor
ss
sub
push
arpl
loope
mov
jae
int3
jb
jge
lock
mov
mov
insl
pop
mov
test
out
fwait
pop
movsb
jl
sbb
into
mov
fdivr
cmpsb
repnz
cli
mov
fs
cwtl
rcrl
mov
lods
enter
sahf
pminsw
nop
jo
jbe
pop
add
add
fists
out
lea
cmp
in
mov
repnz
int3
xchg
push
and
or
or
jl
pop
dec
repz
lods
sub
int3
pop
xchg
or
jg
jg
movb
mov
ljmp
adc
xchg
jmp
mov
adc
jg
rclb
jmp
inc
jp
xor
insl
scas
jns
dec
cs
stos
adc
and
sbb
scas
pop
pop
test
inc
sbb
idivl
mov
testl
cmp
in
nop
test
cmp
mov
adc
dec
dec
js
lret
mov
insl
xor
add
sarl
mov
lods
movsb
pop
call
jbe
adc
test
cli
dec
dec
cmp
xchg
push
mov
sub
ja
pop
push
lret
popf
sbb
fstpl
mov
push
inc
push
xchg
xor
sbb
mov
add
xlat
stc
fwait
mov
pushf
xchg
test
das
repz
or
sar
das
jb
leave
outsb
cmp
inc
push
cld
mov
cltd
adc
push
mov
mov
jge
int3
add
cmpsb
mov
movsb
stos
inc
jns
ss
add
hlt
cmp
std
jp
mov
in
into
lock
ret
pushf
cmp
sub
adc
pop
sub
loop
push
inc
lds
cld
jno
sahf
jecxz
jmp
mov
cmp
xchg
adc
cmp
push
stos
ss
add
hlt
imul
aas
xchg
clts
add
fmull
sub
in
iret
pop
mov
in
mov
call
add
inc
and
popf
adc
inc
push
in
xchg
insb
add
mov
jl
mov
xor
push
shlb
out
orl
mov
pop
sahf
data16
paddw
dec
lods
in
in
movl
mov
fsubrs
addr16
xchg
pushf
icebp
cld
test
push
sub
ja
jo
loope
push
test
sbb
rcr
cmp
and
push
enter
stos
out
mov
mov
clc
sub
hlt
js
inc
lret
add
jle
or
push
leave
cmp
mov
movsb
sub
iret
adc
xor
mov
fisubrs
inc
out
gs
loopne
divb
call
jne
out
mov
mov
dec
scas
or
in
cld
mov
and
ss
outsb
addr16
mov
mov
sbb
cmpsb
jmp
rolb
orl
aad
mov
mov
xchg
aaa
addb
mov
in
rolb
sahf
mov
dec
push
push
les
and
lods
rol
cmp
ret
ljmp
imul
push
lds
es
xor
outsl
lods
add
pop
cmp
scas
sbb
mov
iret
jl
ljmp
notb
movb
push
out
mov
ficompl
sbb
movsl
mov
push
dec
push
push
sbb
loop
mov
les
sar
mov
sahf
xchg
sbb
xor
scas
pop
es
add
inc
dec
adcl
in
sbb
adcb
decl
repnz
les
jno
fstl
push
lds
scas
mov
sbb
xchg
es
adc
test
pop
ljmp
mov
mov
aad
adc
mov
jae
jg
stos
dec
ljmp
out
imul
out
xchg
add
lods
pop
test
jbe
icebp
jo
test
adc
jb
cwtl
ret
popa
mov
add
or
adc
imull
ds
xchg
and
xor
cmc
mov
popf
add
cwtl
test
popa
or
mov
loopne
in
mov
cmpsl
jge
bound
mov
repz
xlat
ljmp
in
aaa
adc
xor
pop
popa
lock
fsubrl
enter
nop
ss
adc
xor
pusha
cmp
cmpsb
int
mov
int3
jmp
mov
data16
shlb
lret
dec
jecxz
or
stc
cltd
lds
xchg
inc
sub
xchg
sbbl
lcall
adc
popa
xor
lcall
push
das
js
rcrl
cwtl
add
stos
xor
mov
cld
sbb
adc
pop
push
push
insl
stos
fidivs
insl
fs
pop
test
enter
idivb
pop
inc
lods
or
cli
or
xchg
pushf
insl
bnd
jecxz
pop
scas
pop
inc
jne
rcl
popa
es
dec
fstp
icebp
inc
xor
add
add
add
mov
push
dec
and
daa
mov
ljmp
stc
add
inc
jmp
and
mov
outsl
and
pop
pop
pushf
out
inc
lea
lock
in
jle
add
pop
les
pop
cmp
daa
or
inc
mov
pop
cmp
jmp
cmc
mov
test
jp
cmp
roll
sarb
sbb
push
mov
mov
push
pusha
inc
std
shrl
mov
out
push
lret
es
inc
pop
dec
adcl
sbb
and
mov
ljmp
out
dec
or
loope
sbb
dec
sub
mov
in
pop
xor
fwait
jp
add
jle
push
int3
dec
mov
lds
in
xor
xchg
aaa
dec
mov
jno
pop
mov
imul
aas
mull
add
gs
in
sti
dec
xor
les
enter
arpl
cld
fldenv
xchg
xorb
or
or
dec
mov
push
hlt
sti
pop
ret
jg
gs
xor
data16
inc
cmp
pop
fldenv
push
aas
mov
lret
incl
test
jmp
mov
es
movsb
test
nop
movsb
sub
jno
adc
sub
int3
mov
scas
mov
xor
pop
rclb
icebp
xchg
fcomi
out
add
sbb
lds
decl
fwait
or
fldenv
fbld
shlw
andl
xlat
aam
fisttpll
push
lcall
mov
pushf
insl
fwait
sub
imul
cmp
inc
inc
cmpsb
mov
push
push
mov
add
mov
pop
mov
adc
mov
and
inc
out
dec
inc
mov
lods
push
dec
adc
lret
stc
fnstsw
cmp
sub
dec
jns
sarl
fsubrs
pop
aam
and
aad
or
js
push
shlb
lret
sbb
push
and
dec
cmp
or
out
mov
pop
js
hlt
cmc
data16
in
idiv
cwtl
js
ss
test
cld
or
pop
in
and
inc
add
cmpsl
and
loope
pop
lock
dec
ss
fdivrs
add
xor
mov
cmp
leave
inc
mov
push
clc
icebp
sbb
push
inc
dec
cltd
inc
ret
dec
dec
jbe
or
sbb
movsb
jo
xchg
aam
in
fdivrs
lahf
sub
fs
jmp
xchg
cmp
push
lahf
dec
jae
bound
dec
mov
ror
and
and
ret
lret
cmpl
imul
pusha
ljmp
sub
or
inc
inc
pusha
adc
mulb
push
or
stc
shl
pop
cld
pop
stc
or
sub
fisttps
pop
xchg
test
movsb
or
cmp
sarl
scas
aas
adc
jmp
loopne
cmp
add
and
and
push
scas
movsl
call
fmull
add
xchg
aas
inc
sbb
xor
sbb
ljmp
sbb
outsb
data16
pushf
fbstp
push
iret
in
or
icebp
stc
ss
mov
leave
jle
sub
xchg
cmp
scas
sbb
mov
pop
fs
xchg
cmp
loope
push
std
out
mov
inc
mov
mov
retw
add
mov
leave
daa
adc
and
test
sub
jle
cmc
mov
pushf
sub
shll
jo
in
pop
dec
flds
mov
rcr
jns
mov
mov
pop
imul
pop
jno
pop
fs
pop
lcall
paddb
int
add
testb
imulb
lahf
push
jb
mov
fcoms
cmp
ljmp
fdivrl
mov
jmp
cli
jecxz
ja
icebp
jmp
je
mov
outsl
push
call
lret
lods
rorb
mov
pop
les
test
pop
dec
cmpsb
or
into
loopne
repnz
mov
mov
mov
add
mov
inc
or
cmpsb
ja,pt
icebp
decb
loop
test
cmpsl
add
and
or
lods
push
mov
arpl
fdivrs
xlat
nop
xlat
mov
xlat
data16
aas
mov
dec
pop
fnstsw
fsubl
push
jl
xor
nop
sub
mov
mov
mov
adc
add
or
out
add
inc
out
loopne
xlat
pop
jl
mov
pop
loopne
jp
xor
push
in
leave
mov
add
sub
js
push
xchg
push
ss
xchg
lods
sub
push
insb
lahf
mov
sub
cmp
xor
sahf
clc
sbbb
mov
loopne
mov
mov
inc
and
inc
icebp
push
lahf
jle
test
mov
loope
cmp
sbb
sub
ja
jp
bound
jae
shrb
enter
notl
fsubs
iret
xchg
adcb
xchg
jl
jns
jo
inc
adc
sub
or
jae
jg
xlat
mov
sahf
cmp
push
jg
push
test
test
cwtl
jne
sahf
movaps
add
push
sysenter
out
xchg
pushf
fsubrp
ss
adc
rorl
jb
shlb
push
inc
jmp
cmp
movsl
sub
loopne
xchg
inc
xchg
and
data16
dec
push
repz
stos
pop
cmp
xor
pushf
je
jae
fmul
stc
shrb
icebp
push
inc
xchg
xor
sti
rcll
stos
sub
xorb
or
dec
xchg
scas
and
or
sub
lcall
rsm
addr16
dec
imul
or
cltd
fstps
adc
lock
sbb
mov
inc
imul
stc
adc
jne
movsb
xchg
data16
int
fcmove
mov
mov
sbb
icebp
sub
and
fnstenv
dec
inc
scas
sub
xorl
sub
pushl
scas
dec
aam
loop
jecxz
inc
popa
stos
jmp
add
test
stos
into
jns
data16
outsl
push
ror
jmp
cmp
mov
lea
arpl
leave
cwtl
pop
pop
push
cmp
jmp
inc
sahf
das
imul
es
hlt
adc
fs
lock
popf
push
xchg
jno
jne
push
push
fwait
int
push
icebp
inc
lcall
cld
fisttps
xchg
in
test
orl
addl
test
int
and
sub
ja
mov
cli
jae
add
xlat
and
mov
and
adc
in
aad
and
movsb
xchg
jle
or
pusha
or
mov
xchg
xlat
outsb
iret
std
xor
pop
rclb
cmp
fstpt
mov
inc
shrb
xchg
xor
jne
adcb
inc
jmp
lods
pop
cwtl
nop
sbb
xchg
ss
dec
ja
addr16
push
and
daa
adc
pusha
addl
jb
outsl
arpl
cmpsl
cmp
jg
mov
push
lahf
movsb
mov
jmp
mov
lahf
mov
test
in
cmpsl
movsb
or
sub
push
pop
mov
ss
jb
xor
and
incl
add
push
cli
inc
lods
incl
popa
mov
nop
xchg
shrl
leave
add
in
imul
pop
cmp
pop
data16
lret
cmpsb
sarl
lret
aaa
cli
hlt
call
adc
stc
sub
aam
or
jns
inc
stos
icebp
xchg
mov
adc
xor
fs
push
sub
loope
xchg
xchg
sbb
adc
inc
lds
pop
ja
rcrb
lahf
bound
adc
shll
into
inc
nop
imul
push
in
push
jecxz,pn
pop
add
inc
xchg
inc
outsb
push
sbb
rol
cli
cmp
cmc
xor
mov
fwait
lret
mov
enter
fmuls
lods
and
add
or
imul
or
das
into
dec
inc
fs
scas
push
mov
std
and
test
add
mov
repnz
imul
pop
out
cmp
fbstp
sbb
cmpsl
jp
es
xchg
jmp
in
mov
xchg
mov
mov
mov
xchg
jecxz
fcoml
sbb
dec
nop
add
add
xchg
or
imull
sub
push
fsts
mov
jno
jmp
setnp
movsb
cmpsb
add
sbb
loop
imul
out
loopne
bound
or
sub
movb
divl
sub
scas
and
mov
mov
jmp
call
cli
push
pop
pop
push
sbb
mov
xchg
jmp
add
cmp
cs
dec
mov
and
in
jge
popl
mov
jno
sbb
push
or
xor
mov
pop
add
mov
mov
das
popa
jge
daa
fildll
dec
xchg
and
into
adc
ret
adc
push
dec
sub
outsl
xor
inc
adc
idivl
movsb
push
shrl
leave
jmpw
inc
push
sbb
mov
clc
push
pop
or
or
test
xchg
dec
rcrl
cmp
stc
movsl
and
xlat
dec
xchg
fsubl
in
cmc
pop
xor
adc
insl
dec
jp
mov
dec
adc
ja
or
mov
sarl
pop
mov
ret
daa
movsbl
fisttpll
lock
pop
mull
xor
jle
cs
push
scas
rcl
jbe
stos
add
dec
fwait
push
push
sahf
add
mov
inc
enter
pop
cmpsb
inc
inc
popa
jnp
sbb
sbb
cld
sub
and
inc
mov
jle
test
fwait
push
sbb
lret
xchg
test
jae
leave
xchg
add
pop
ret
imul
out
inc
test
cwtl
cmpsl
insb
mov
and
mov
xor
fdivl
adc
imul
sub
inc
mov
push
adc
pushf
xorb
push
addb
mov
mov
mov
jb
pop
prefetchnta
cmp
repnz
push
ret
sti
xchg
mov
xor
dec
in
dec
mov
pop
scas
mov
mov
dec
jo
push
dec
out
jge
lcall
mov
xor
lds
mov
xor
sbb
es
js
jge
mov
cwtl
xchg
test
popf
mov
aas
lea
lret
cmc
sub
jb
addl
je
or
scas
subl
adc
xor
pop
jecxz
jns
xor
mov
cmp
jae
repnz
xchg
adc
std
fdivs
sarb
and
cmpsb
pop
mov
call
jo
sti
out
hlt
nop
sti
fwait
mov
xor
jnp
inc
mov
cli
jecxz
adc
imul
imul
push
fwait
inc
aad
out
int3
pusha
adc
push
ja
dec
jl
mov
xchg
rorl
std
push
mov
sbb
enter
sbbl
test
jmp
arpl
test
adc
iret
mov
jg
pop
fdivs
and
stos
sahf
inc
in
aam
out
xlat
xchg
roll
out
mov
lret
dec
xlat
mov
mov
sub
and
lahf
dec
xchg
push
lds
sub
fst
hlt
jg
ljmp
sub
cs
call
stos
jmp
dec
sub
sti
aas
add
xor
aad
fildl
mov
dec
and
rcr
cmpsl
dec
shlb
mov
sub
loopne
cmp
test
cli
clc
lds
mov
das
jg
mov
loope
lods
rclb
loop
push
mov
sub
out
push
imul
pusha
stc
mov
test
popf
je
cld
ds
xor
mov
or
addr16
push
pop
pop
mov
cmp
xor
cwtl
push
push
pusha
enter
insl
lret
pop
cmp
push
adcb
push
aam
add
or
dec
ror
mov
cwtl
std
add
clc
pop
inc
cmc
dec
jno
jno
adc
test
iret
ret
divb
inc
movsb
xor
mov
adc
addr16
sub
clts
js
mov
add
lock
mov
xlat
data16
lods
and
mov
xor
sti
add
sub
jge
jno
hlt
lahf
push
leave
call
fidivrs
scas
loop
testb
and
bound
mov
sub
fistpll
out
pop
sbb
cmp
lea
mov
mov
xchg
fsubl
mov
sbb
gs
mov
faddp
les
fimuls
jne
xchg
lahf
dec
test
aaa
xor
sub
pop
xchg
stos
lahf
cltd
xchg
test
fildl
mov
sbb
pop
push
dec
dec
lea
mov
push
dec
negl
jl
pop
rorb
adc
out
decb
push
stos
in
mov
xor
xchg
jae
psllq
andl
push
jl
xor
cwtl
in
movsl
lret
push
addr16
mov
push
outsl
mov
pop
add
or
imul
jl
pusha
mov
and
ret
fwait
idivl
sbb
mov
and
aad
push
pusha
add
pop
loopne
daa
mov
mov
scas
jecxz
inc
xchg
insl
push
dec
jle
jecxz
sti
sub
test
cmp
lods
pop
xchg
xor
in
daa
adc
mov
jge
jb
int3
mov
fnstcw
xchg
add
incl
arpl
fnstenv
and
jbe
jecxz
js
popf
in
mov
movl
push
rolb
dec
add
xchg
sar
mov
inc
aam
cmp
addb
adc
sub
xchg
popa
js
jg
jae
jbe
pusha
mov
push
test
or
stc
movsb
popf
sbb
lahf
insb
adc
push
cmp
data16
insl
xor
sahf
adc
and
aas
push
iret
inc
ds
lcall
popf
sub
xor
sub
sbb
sbb
mov
lods
xchg
sub
rclb
dec
lcall
rclb
shr
incl
call
add
pushl
add
add
pusha
add
add
int
mov
inc
xor
dec
call
pop
inc
stos
sbb
cld
ds
and
leave
in
pop
sub
in
sti
mov
mov
fdivs
shlb
rcll
xor
notb
push
gs
pushf
shrl
add
push
mov
dec
roll
call
pop
leave
xor
nop
mov
xlat
jl
adc
ret
dec
es
mov
jns
sbbb
adc
dec
or
cmp
and
push
fsubrs
pusha
mov
adcl
movsl
fisubrs
stc
sub
xchg
fxch
inc
mov
testl
and
xchg
sub
lock
mov
out
jp
sub
mov
int
in
into
scas
pop
into
cmp
mov
je
cld
in
push
enter
xchg
jno
dec
push
jb
pushf
iret
divb
jmp
adc
or
imul
arpl
dec
mov
out
jmp
adc
pop
imul
add
sub
or
fsubrp
fwait
dec
in
mov
std
cmpsb
movsb
dec
scas
pop
jge
inc
insl
jge
add
jle
cmp
gs
push
xorl
out
dec
fdivrl
test
or
add
dec
push
mov
pushf
mov
or
add
loop
call
orl
xchg
push
incb
or
filds
dec
rcl
stos
jns
add
inc
mov
xor
adc
ret
jne
push
dec
imul
ret
inc
xor
mov
lods
mov
and
mov
adc
and
js
in
in
fimull
scas
scas
push
sbb
in
mov
xchg
test
cld
jne
jmp
pop
mov
dec
test
jge
sbb
cmp
sbb
push
jb
pop
outsl
in
mov
pop
dec
loopne
xchg
or
in
add
aaa
call
jl
ljmp
push
jo
dec
push
cltd
push
dec
cmc
arpl
je
or
lods
repnz
mov
jae
jle
lods
sub
adc
push
push
pop
xchg
pop
mov
xchg
xchg
into
adcl
imul
adc
lea
nop
cmp
xor
push
dec
pop
leave
xor
cmc
movsb
ljmp
jno
in
ficoml
xor
adc
and
loop
fsubs
icebp
lret
stc
adc
dec
inc
push
dec
mov
insl
mov
out
fs
lcall
gs
cmp
call
fidivl
imul
dec
sub
push
push
add
and
xchg
jb
aaa
lea
push
xor
jp
test
decl
rcrb
sbb
mov
ds
jg
sub
push
mov
push
jns
mov
cmpsb
jbe
cmp
cmpsb
jne
sbb
add
inc
ret
xor
or
sub
sub
sti
xlat
lahf
bound
out
stos
into
fsubrl
cltd
and
sbb
and
enter
lahf
out
test
mov
and
leave
movsb
mov
mov
lds
fsubl
test
test
call
adc
popa
jg
stos
pop
jo
pop
in
and
das
imul
inc
pop
mov
cmp
adc
js
stos
fdivrp
out
mov
lahf
dec
xlat
inc
cmp
adc
mov
jb
loopne
out
add
in
add
pop
les
sub
sub
fldcw
cli
mov
xorb
repz
popf
inc
pop
push
lret
dec
bound
mov
mov
mov
mov
jbe
out
loope
jo
xor
mov
enter
cmp
jmp
inc
and
inc
push
das
and
aaa
push
xor
adc
enter
push
push
push
iret
dec
aam
daa
rclb
imul
pop
xchg
incl
dec
pop
pop
inc
iret
sahf
push
je,pn
adc
addr16
pop
enter
xor
out
fs
lahf
cwtl
out
push
sbb
add
mov
sub
add
cs
in
test
fstl
xchg
add
pop
or
cld
mov
mov
push
mov
adc
pop
xchg
icebp
mov
lret
int
or
psrld
mov
xchg
fwait
scas
inc
loope
push
pop
add
xchg
aaa
xchg
addl
shll
dec
fcomip
jnp
push
add
and
cwtl
aas
jnp
dec
xchg
lret
cmp
add
and
xor
ljmp
loope
jo
cmc
fnsave
push
jmp
lock
xor
xchg
jbe
mov
mov
ret
jg
rorb
cltd
test
xor
adc
imul
jl
and
in
push
xor
sbb
scas
push
fwait
xor
mov
jge
scas
cmc
jne
shlb
sbb
sub
add
fmuls
sub
and
sbb
imul
dec
in
stos
jbe
in
xchg
imulb
decl
mov
fisttpl
jne
fidivl
pop
je
pop
sbb
adc
pop
mov
mov
mov
push
dec
sbb
loope
xor
jo
or
inc
add
push
push
daa
dec
push
scas
mov
data16
jmp
lret
fst
add
push
push
pusha
addl
inc
push
xchg
push
mov
dec
ficoml
aad
test
int
push
fs
xchg
out
pop
call
mov
imul
pop
sub
and
dec
std
pop
fsubp
jmp
jge
dec
test
jbe
push
inc
mov
pop
inc
fwait
jnp
fwait
cltd
enter
push
push
xchg
mov
pop
inc
fs
int
jge
pop
dec
stos
adc
out
nop
shrb
or
cmc
les
nop
cwtl
sbb
dec
cwtl
pop
xor
or
mov
mov
mov
jno
push
imulb
jne
sbb
ljmp
sbb
les
cmpsb
ss
in
cmc
clc
mov
sub
inc
subl
and
stos
cltd
addr16
adc
sbb
push
pop
inc
shll
insl
icebp
add
pop
aaa
pusha
loopne
inc
lods
cmp
in
popf
das
addr16
sbb
mov
xor
cmp
push
outsl
xor
outsl
pop
ret
xchg
fs
outsl
sbb
fwait
and
inc
lret
popa
jmp
xchg
jecxz
xor
xchg
pop
jecxz,pt
pushf
adc
xor
and
mov
insb
iret
dec
lea
mov
rorb
add
lods
ljmp
mov
mov
push
sub
jae
or
mov
xor
lea
mov
sub
cs
push
out
sub
push
xchg
aam
sti
hlt
xchg
mov
jns
insl
xchg
shll
pop
in
subb
mov
jmp
or
lea
test
cld
mov
enter
or
xchg
xlat
icebp
addr16
xchg
pop
xchg
sub
xchg
dec
xor
pop
lret
mov
jl
mov
xchg
dec
sub
adc
xor
inc
popf
xor
aad
fsubrl
mov
pop
stos
enter
and
mov
xor
fs
adc
test
jg
cmp
push
daa
je
inc
or
cwtl
dec
xchg
sbb
xchg
lods
sub
fldt
mov
adc
xchg
cmp
inc
xchg
in
adc
pop
mov
test
enter
sbb
inc
xchg
stos
repz
adc
mov
jb
jo
mov
jo
jnp
je
jae
xchg
in
jp
aad
stc
add
mov
test
push
loop
js
sbb
repnz
jne
xor
into
movsb
shll
push
insb
lods
pop
xor
test
call
jo
ja
jnp
outsb
in
test
ljmp
push
mov
std
dec
rorl
sub
mov
and
iret
mov
jns
mov
loopne
jo
lods
stos
sbb
jg
je
test
loop
lds
pop
lods
and
cwtl
out
sub
mov
ficomps
pop
clc
leave
cmp
leave
push
decl
mov
faddl
pop
mulb
inc
stos
add
repnz
iret
in
shll
push
movsl
and
add
leave
movsl
and
scas
xchg
loop
lret
pop
les
add
dec
jp
dec
jl
out
mov
lods
cltd
testl
mov
aad
repnz
fcoms
dec
jbe
mov
loope
pop
nop
xor
cwtl
arpl
mov
mov
add
enter
cmp
je
pop
mov
sub
adc
mov
lods
push
shr
xchg
lcall
arpl
push
mov
and
divb
push
lods
adcb
outsb
aam
test
das
sbb
xchg
std
or
lret
inc
cmp
lods
mov
sub
push
dec
ret
out
scas
cmpsb
ret
cmpsl
enter
imull
cmp
cwtl
arpl
loop
cmpsb
lcall
mov
mov
pop
pop
lds
and
jg
lcall
push
stos
and
stos
mov
lret
ret
out
adc
subl
push
shll
pushf
pop
in
sti
pop
jmp
popa
jb
jno
mov
mov
jl
out
ds
les
pop
loopne
mov
inc
jle
int
movsb
int3
hlt
push
xchg
xchg
cmpsb
je
sti
mov
fwait
mov
push
ljmp
xor
xchg
jmp
or
repz
xor
nop
jns
inc
lds
pusha
out
gs
fistps
jns
ljmp
nop
nop
into
pop
hlt
rorb
es
push
leave
loope,pn
mov
and
inc
es
xor
mov
lods
and
test
mov
fs
int3
mul
insl
xchg
sahf
imul
gs
push
popf
clc
leave
out
xchg
xchg
testl
gs
jl
std
push
leave
in
sub
mov
out
xor
jb
adc
ljmp
push
stc
dec
xchg
mov
xchg
repz
addr16
pop
push
xchg
adc
or
fcos
jmp
adc
mov
cli
mov
pop
pop
mov
jbe
pop
adc
out
sbb
repz
mov
clc
push
arpl
pop
pop
xor
pop
std
outsb
jl
js
or
int3
add
shl
outsb
lock
outsl
mov
daa
les
push
dec
loopne
cmp
movsl
jno
stos
or
mov
fldln2
cmpl
xchg
xchg
cmp
js
loopne
xchg
movl
cld
sub
jecxz
into
mov
scas
xlat
shl
jecxz
and
cs
or
inc
or
icebp
outsl
inc
test
not
add
push
add
fsubs
popf
xlat
clc
push
pop
sbb
leave
cmp
mov
imul
jle
lock
jmp
enter
mov
inc
scas
pop
inc
in
fdivrs
js
mov
movsl
test
out
inc
jmp
sbb
test
ljmp
sahf
js
xor
sub
aam
lea
jb
push
push
mov
pop
cmp
or
pop
xor
inc
and
mov
daa
iret
mov
loope
lock
add
or
lods
les
or
add
jbe
mov
sbb
popa
dec
inc
mov
pusha
call
into
lods
mov
ja
cli
push
dec
lret
in
dec
xor
rorl
inc
xchg
push
orb
inc
sbb
fadds
cmp
rclb
mov
push
push
pop
cmp
and
push
mov
xlat
rol
dec
adc
ret
jle
ds
xor
and
iret
mov
ret
mov
inc
fwait
sbb
dec
adc
rcl
filds
xchg
lea
clc
jnp
jmp
cmp
and
jl
push
push
sub
pop
sbb
idivb
push
add
sahf
xor
int3
inc
ds
add
aad
pop
push
shrl
sub
inc
iret
adc
mov
pop
retw
pushf
mov
push
push
cmpsl
shlb
adc
mov
mov
jge
ret
fsubp
subl
adc
sub
or
fisubl
inc
jno
inc
adc
inc
aaa
xchg
or
pop
push
pop
fdivrp
cli
push
inc
and
add
adc
shlb
aad
and
xor
fdivl
daa
stc
sbb
in
mov
xchg
xchg
outsb
jl
out
dec
xchg
push
ss
adc
jecxz
jae
sbb
pop
xchg
sahf
mov
xchg
jae
push
arpl
xchg
outsb
loope
movsb
rcrl
sub
dec
sbb
or
push
fwait
rcl
pop
mov
adc
popf
sbb
sbb
and
loop
divb
out
sub
pop
fistpll
test
xchg
in
lods
lods
sbb
stos
lcall
push
xor
sbb
lods
push
pop
or
mov
push
jmp
addl
add
inc
les
rcll
jg
jg
jmp
sub
or
test
push
and
daa
xor
mov
iret
ret
test
mov
adc
aad
ljmp
push
xchg
pop
mov
fdivl
mov
popa
jg
push
cmpsb
pushf
pop
ljmp
jge
xorl
pop
outsl
xchg
jnp
test
jnp
xchg
mov
cmp
sub
mov
jl
inc
jo
add
jo
insl
push
loop
sub
lret
lcall
add
ljmp
clc
mov
sub
les
jecxz
rcll
sub
or
mull
jb
dec
nop
jg
iret
add
jb
loopne
push
ds
insb
adc
xchg
sbb
and
subb
xchg
lcall
jg
and
or
dec
and
fists
mov
xor
push
sub
sarl
add
rcl
sbb
pop
jo
sbb
out
sub
adc
mov
filds
adc
adc
pop
cs
stc
inc
scas
jbe
jno
nop
sub
sahf
scas
aaa
xor
dec
in
mov
popf
shl
xor
mov
not
orl
lock
into
fildl
push
pop
test
lret
addr16
mov
pop
hlt
repnz
rcrl
mov
jnp
aam
enter
dec
daa
inc
xlat
ret
inc
test
outsb
add
sbb
xchg
std
ret
and
push
xchg
fs
jmp
mov
bound
outsl
pop
add
call
push
insl
sti
test
sbb
add
shlb
push
mov
es
mov
out
push
and
jmp
add
mov
mov
cmp
mov
loop
sti
inc
inc
or
push
mov
push
pop
sarb
jl
cli
mov
xor
jo
ret
mov
ljmp
mov
shll
repz
pop
icebp
inc
outsl
cmp
lods
sti
dec
and
int
mov
sbb
cld
test
movsl
jle
inc
loopne
in
cmp
das
in
xor
pop
ja
in
lock
sbb
and
jecxz
aam
test
inc
add
mov
add
scas
pop
jbe
out
out
sbbb
inc
mov
sub
or
adc
mov
jge
add
cwtl
orl
sbb
aam
out
in
lcall
out
adc
loope
cltd
push
jns
lret
xor
ret
push
mov
sub
mov
lret
lret
push
outsb
mov
dec
cs
adc
sub
mov
popa
arpl
out
sbb
ljmp
lret
and
jecxz
jnp
in
inc
flds
mov
cs
icebp
inc
cwtl
or
pop
neg
dec
loopne
add
jmp
ja
mov
sbb
lcall
ss
fbld
mov
cmp
mov
or
pop
cli
jb
mov
dec
out
push
mov
mov
shlb
outsl
dec
repz
rcll
or
mov
xchg
insb
in
popa
jno
xchg
decl
or
mov
sub
cli
daa
xor
pop
cltd
int
cmp
push
int3
dec
into
jl
movsb
xlat
bound
mov
add
shlb
js
add
adc
pop
add
inc
repz
mov
push
mov
jmp
jl
or
mull
mov
jp
mov
int
bnd
aas
fstps
clc
sub
xor
mov
fists
int
popf
je
insb
loope
daa
loop
dec
xchg
mulb
mov
push
inc
dec
js
mov
inc
aad
mov
repz
push
leave
xchg
cmp
xchg
sub
lea
dec
dec
pop
into
mov
test
ret
sbb
jp
aas
nop
dec
add
xor
sbb
adc
sarb
mov
pop
push
add
mov
cs
and
mov
add
add
push
shll
cmpb
mov
add
dec
lods
jecxz
pop
outsl
push
dec
out
pop
shll
push
scas
popa
xor
insb
icebp
lds
xadd
mov
pop
mov
out
mov
inc
lods
hlt
xchg
enter
mov
faddl
hlt
popf
xchg
int
mov
popl
fildl
or
pushf
inc
inc
and
lret
inc
insb
add
ljmpw
stos
nop
hlt
rcrb
xchg
fmuls
sbb
pop
add
dec
into
sub
mov
aad
xor
cs
adc
jns
mov
cmp
std
xor
lock
mov
out
addl
jg
push
push
fucomip
jecxz
cmp
inc
xchg
mov
push
in
pop
pop
mov
xchg
sub
insb
add
cwtl
dec
mov
mov
data16
in
inc
dec
mov
add
or
inc
out
mov
mov
je
insb
push
cli
inc
add
je
sbb
or
fistl
es
push
stos
dec
shlb
rol
xchg
adc
out
insb
cmp
inc
jmp
inc
jae
adc
cwtl
xor
fmull
out
repz
fmulp
dec
aaa
dec
cmp
xor
ss
push
add
fisttpl
cld
mov
jns,pt
pop
mov
ljmp
bound
test
mov
dec
iret
or
mov
test
xor
mov
scas
pop
cmp
jae
pop
icebp
xor
clc
js
mov
icebp
mov
into
mov
sub
sbb
cmp
adc
lea
sub
xor
ficoml
sbb
sub
mov
sub
xchg
jle
lock
fs
and
mov
or
fdiv
repz
iret
push
mov
ja,pt
pop
adcl
data16
mov
lcall
pop
adc
mov
xchg
insl
and
sub
pop
jae
mov
pop
test
xlat
sti
pop
pop
subb
push
push
lea
push
fimull
lods
pop
pop
adc
aad
mov
adc
dec
ret
inc
sbb
pop
and
bound
roll
xor
cmc
ljmp
push
movsb
stos
decb
test
add
mov
mov
jle
and
jp
movsl
jge
cs
movsb
aam
pop
ja
cmpsl
test
and
cli
mov
enter
stc
imul
dec
inc
movsl
mov
lods
mov
adc
dec
out
aad
cs
popf
sub
aad
mov
orl
dec
mov
pop
divl
roll
ljmp
mov
aas
jae
pop
push
ds
push
in
in
xor
imul
jno
inc
dec
hlt
lock
fstpl
sbb
rcll
je
mov
ds
in
mov
movsl
lahf
push
or
mov
adcb
testb
adc
arpl
adc
lret
sbb
add
sbb
jns
xor
scas
fsubl
push
aad
notb
ret
cmc
cmpsb
xor
inc
jmp
cmp
xchg
cs
imul
mov
rorl
and
dec
cltd
das
enter
out
xor
jne
push
nop
scas
sarl
in
mov
in
mov
leave
push
push
enter
and
gs
ja
out
and
adc
out
sub
dec
call
pop
hlt
loope
jnp
add
and
mov
mov
jae
push
cmpsl
sbb
in
pop
pop
adc
mov
cmp
mov
dec
ss
test
or
jnp
lods
inc
fists
flds
mov
dec
mov
rol
mov
into
lcall
xchg
adc
mov
fwait
push
fadds
das
in
xchg
dec
fidivs
xor
push
sbb
cmpsb
sbb
dec
cwtl
pop
mov
mov
mov
movsl
mov
cmp
sub
jmp
and
out
das
sahf
clc
mov
faddl
jle
sti
pusha
or
lea
les
pop
imul
cmc
or
pusha
pop
movsl
dec
xlat
adc
cmc
mov
test
dec
outsb
fldl
inc
in
push
push
shll
pop
inc
ja
aam
pushf
mov
mov
mov
or
insb
xchg
pusha
lcall
pop
add
add
arpl
fistl
add
inc
pop
enter
out
cmp
add
sarb
cmpsb
cltd
in
ja
mov
mov
sub
sub
cmp
insl
dec
test
or
sbb
cmp
mov
ret
sbb
pop
mov
cmp
xchg
mov
push
pop
mov
mov
test
cli
add
faddl
arpl
ljmp
jb
cmc
dec
and
sub
aas
lret
cld
sbb
pusha
jnp
call
stos
xchg
enter
jo
call
imul
mov
int3
cs
mov
mov
shlb
add
lcall
popf
das
mov
out
or
cwtl
inc
movsb
lcall
hlt
or
mov
lcall
arpl
mov
sbb
bndcn
aam
and
addl
inc
add
popa
scas
into
sarl
xchg
andl
sbb
mov
xchg
xchg
rorb
and
mov
sbb
rcrb
aaa
push
jbe
push
out
cmp
mov
in
cwtl
cli
loopne
or
iret
cmp
ja
cld
mul
test
data16
xor
cli
cmpsb
xchg
jbe
sub
mov
mov
xchg
movsl
sti
jp
cmc
nop
stos
ss
cli
xor
call
cmp
sbbl
dec
call
cmp
outsl
inc
mov
push
dec
iret
sbb
scas
mov
mov
cmc
enter
subb
mov
ja
popf
fwait
mov
xchg
cltd
mov
push
cltd
es
test
sub
aas
jns
bswap
out
or
sarl
pop
push
stos
hlt
xor
cld
adc
jle
arpl
rcrb
sbb
lret
mov
pusha
andl
stos
sahf
dec
pop
dec
mov
and
shll
loope
sub
push
mov
sti
and
or
test
dec
jne
cmp
ja
sub
or
and
sub
ss
mov
es
pop
addb
mov
push
repnz
xchg
mov
or
push
sub
enter
dec
insl
dec
pop
and
dec
jne
xchg
ljmp
adc
mov
arpl
sub
inc
push
pop
ja
fadds
jne,pn
repz
clc
push
test
fs
subl
jo
andb
arpl
arpl
jnp
xor
lock
push
push
test
sub
xlat
sub
mov
subb
insl
fistl
loopne
mov
pop
js
push
and
add
pop
mov
jl
add
out
adc
mov
outsl
jnp
js
jl
lahf
dec
pushf
xor
dec
cltd
imul
lret
bound
xchg
adc
jge
xchg
lds
fldenv
ja
add
je
add
jl
and
out
popf
loopne
push
pop
hlt
sub
es
push
push
mov
pop
cli
jae
sbb
sbb
add
popa
xor
imul
jl
movsb
and
lods
ret
xchg
repnz
cmpb
adc
cli
sarl
jns
ja
lcall
push
iret
mov
or
mov
fdivrs
imul
int3
or
es
imul
push
and
mov
dec
inc
call
sti
cmp
cmp
dec
lock
stos
enter
add
out
cmc
jg
ret
iret
stos
addr16
mov
shrl
movsl
pusha
shrl
cmp
mov
in
xchg
loopne
cld
popa
out
and
and
xchg
fxch
mov
les
js
je
mov
push
insl
cli
loop
lcall
rcll
mov
pop
icebp
std
sub
cwtl
lret
pop
jle
xor
mov
out
repz
sahf
dec
xchg
mov
leave
rcr
mov
loop
das
leave
mov
insl
out
add
inc
retw
mov
fiaddl
inc
adc
stos
lods
aad
dec
das
xchg
xchg
lahf
fistpll
xor
mov
adc
xor
jle
mov
dec
xchg
popa
inc
in
inc
xor
hlt
mov
adc
loop
sti
push
xor
jmp
lea
int3
lret
repnz
out
sbb
jp
out
or
out
jae
rcll
lahf
mov
jns
jo
aad
dec
rol
or
imul
stos
push
sbb
mov
in
insb
shlb
mov
fildl
add
or
int3
lret
dec
dec
fcoms
xor
adcb
aad
inc
mov
enter
dec
ja
push
and
rol
jne
dec
dec
adc
xor
push
jp
out
iret
nop
lods
mov
in
xchg
out
test
addr16
jae
loopne
pop
mov
pop
popf
lods
dec
repnz
push
and
inc
lret
push
shll
jp
pop
xchg
das
enter
pop
test
pop
aaa
jg
leave
iret
adc
or
je
rcr
inc
fsubl
mov
cmp
lret
jnp
cmc
or
lea
aaa
scas
test
frstor
icebp
or
dec
sbb
xor
mov
aad
sar
mov
jle
xor
fwait
clc
in
cs
fsub
idivl
pop
or
aas
js
sbb
mov
xor
jb
mov
xchg
loope
mov
and
lcall
adc
or
lcall
aad
out
inc
xchg
pop
push
out
cmc
aaa
xchg
rcrl
dec
add
push
test
inc
push
pusha
ret
ret
sbb
or
pop
shl
cli
or
ret
fsub
test
fldt
mov
scas
add
cmp
hlt
aam
lahf
xchg
inc
jge,pn
aas
mov
inc
pop
test
lea
fldcw
sub
lods
mov
add
sbb
lods
push
loopne
cmp
push
fmul
les
test
test
push
xor
out
lret
popa
movsb
dec
sbb
orl
add
fnstenv
push
jno
fimuls
cmp
mov
je
cmp
ss
and
xor
lahf
mov
xchg
dec
addr16
bound
loope
mov
ret
xchg
enter
xchg
sub
fwait
jecxz
mov
inc
nop
pop
scas
aad
mov
push
push
fadds
mov
adc
js
imulb
les
mov
push
ret
xchg
stos
loopne
mov
loopne
push
xor
dec
xchg
mov
popa
lcall
add
pop
xchg
cmc
cmp
mov
inc
jl
lret
mov
push
sbb
sbb
jg
adc
ss
sahf
addb
mov
xlat
and
push
sbb
iret
dec
xor
sbb
push
jmp
adc
cmpsb
lcall
xorl
xchg
or
test
add
fstps
adc
test
shlb
or
fnstcw
jp
xchg
sbb
adc
jecxz
mov
jnp
mov
ficompl
sar
aas
pop
inc
fsubs
aaa
cmp
inc
jge
popa
adc
mov
mov
dec
xchg
xor
lods
cvtps2pi
sub
out
notb
loope
push
out
mov
pop
test
icebp
jl
add
xchg
in
mov
insl
mov
shrb
stos
ss
jns
and
iret
arpl
orl
test
daa
add
sarb
or
dec
jo
test
mov
out
bound
or
sub
push
call
add
shrb
jp
addr16
imul
lret
negb
loope
or
out
fbstp
adc
mov
mov
sbb
adcl
inc
ds
inc
mov
rcrl
xor
loopne
pushf
fsubs
test
cmc
shlb
xchg
ret
movsl
sar
ffree
or
pusha
push
scas
imul
fidivrs
stc
cmp
loop
data16
jne
popa
pushf
and
adc
adc
and
mov
xchg
movsb
ret
pop
cld
test
dec
aaa
in
js
out
pop
cmp
jns
aas
sub
xchg
insb
and
ljmp
scas
cmpsb
mov
add
jl
sub
insb
leave
dec
xchg
loope
mov
push
mov
sbb
xor
lock
push
loope
adc
cmpb
sar
and
dec
test
jecxz
dec
into
jle
imul
pop
adc
push
dec
mov
pop
dec
cs
mov
sub
addr16
mov
push
je
push
mov
inc
sub
lods
xor
or
out
mov
and
add
movsl
xchg
push
cmp
jno
adc
scas
out
adc
test
rcr
scas
xorl
lahf
pusha
repnz
dec
lods
add
push
movsb
mov
shl
gs
mov
mov
arpl
dec
sbb
pop
mov
cwtl
icebp
aad
inc
pushf
xchg
mov
push
mov
dec
fildl
mov
jbe
xlat
dec
xchg
jne
test
jmp
pop
gs
or
out
out
mov
or
or
xlat
mov
dec
add
dec
mov
faddl
inc
add
jp
lds
fldl
dec
xchg
jae
push
jno
xchg
stos
int
pop
les
add
xchg
xor
inc
adc
lods
xor
xchg
scas
addr16
fisttpll
mov
ja
ds
adc
adc
mov
fists
cmp
in
pop
stos
cwtl
out
pop
fldcw
adc
jo
pop
xchg
nop
pop
pop
pop
pop
aam
and
jg
mulb
iret
push
sbb
inc
cmp
test
fcmovne
icebp
push
mov
loopne
mov
mov
xlat
push
pop
jo
lods
call
subb
dec
fstl
cmpsl
out
scas
push
outsb
popf
stos
sbb
jb
flds
xchg
and
ja
adc
popf
nop
mov
orw
inc
addr16
ljmp
and
sub
out
xchg
test
not
xchg
xchg
sbb
cwtl
sbb
shl
add
and
iret
fidivs
pop
xor
fcomip
jg
mov
les
xor
adc
imul
mov
mov
cmc
insb
rcrl
dec
shlb
lods
outsl
lret
cli
mov
and
lret
inc
cmp
dec
jbe
pop
mov
jl
xchg
and
or
mov
jle
fwait
or
mov
add
fistps
and
pop
fidivrl
shrl
in
lahf
pop
sbb
jbe
scas
loopne
push
orl
cmp
dec
test
mov
nop
jg
sbb
gs
mov
mov
adc
leave
mov
cmp
mov
ficomps
ret
clc
leave
ss
cmp
dec
pop
ret
fmull
test
lret
fwait
or
xchg
leave
fs
insl
pop
add
mov
jl
hlt
or
in
es
sub
je
xchg
ret
mov
pop
push
mov
insl
popf
jecxz
xchg
mov
mov
data16
fnstsw
test
aad
sbb
sub
flds
insb
xchg
aas
ret
subb
sub
imul
pop
pop
cmp
cmp
addr16
lcall
and
in
test
mov
mov
and
aam
in
pop
movsb
sub
mov
add
mov
sub
mov
pop
fdivl
aam
pop
lret
sub
inc
inc
add
mov
sub
outsb
stc
mov
push
or
and
xchg
add
loop
pop
mov
in
addr16
icebp
dec
cld
aad
sbb
loop
push
push
jae
stos
aas
mov
jne
rol
adc
sbb
fsubrl
mov
push
fstpl
jl
sbb
cmpsl
inc
lahf
icebp
mov
mov
daa
or
ss
ds
popf
shrb
push
xor
adc
xor
mov
bound
xchg
das
xchg
sub
clc
hlt
and
cmp
cmp
ja
xchg
pusha
loopne
fs
fs
jge
cld
pop
out
scas
jo
mov
addr16
cmpb
call
jnp
dec
sti
hlt
mov
ja
mov
ljmp
loop
cmp
into
pushf
call
inc
popf
addr16
adc
push
adc
pop
clc
add
dec
xlat
or
cld
in
movaps
or
iret
sbb
into
cmp
add
shll
inc
xchg
jmp
inc
pop
mov
xlat
mov
cmp
push
mov
jae
pop
sub
jle
into
xchg
cmc
dec
lock
insb
add
lds
mov
mov
pushl
les
dec
sarb
push
mov
dec
es
xor
std
es
ss
and
xchg
jp
push
lock
sub
mov
dec
incb
and
mov
or
cmpb
add
incl
aaa
inc
mov
cmpsl
mov
les
insl
stos
ret
negb
lret
xor
movsl
or
jb
data16
dec
mov
fwait
push
lcall
jne
js
cmpsb
and
jl
push
lret
fadds
mov
hlt
cltd
divb
inc
fildl
out
jbe
xchg
dec
adc
ja
mov
mov
leave
fisubs
insb
in
sarl
jecxz
cli
popa
xlat
stos
movsb
loope
mov
and
and
mov
xchg
pop
xchg
pop
jno
push
mov
jge
mov
mov
push
and
xchg
lds
cmp
sub
gs
and
je
stos
add
xchg
test
ja
jge
iret
fsts
test
icebp
scas
dec
lods
rorb
ljmp
cmpb
inc
sub
loop
out
shl
loop
call
add
or
dec
push
ffreep
xchg
mov
leave
mov
xchg
aad
icebp
mov
adc
inc
xchg
adc
jg
pop
dec
out
lret
push
xchg
push
lock
or
fsts
dec
mov
mov
sbb
hlt
xchg
out
adc
rcr
stos
test
imul
jb
xorb
sbb
decb
push
test
mov
fxch
push
and
loopne
insb
xchg
xchg
sbb
adc
cmp
push
push
lds
push
mov
mov
adcl
add
scas
hlt
cmc
shlb
sub
push
les
mov
xor
bound
mov
call
scas
gs
xor
mov
push
mov
stos
fdivs
negb
or
adc
dec
divb
lahf
sbb
fwait
fwait
xchg
pushf
dec
mov
jle
outsb
inc
jnp
repnz
jmp
pushl
push
xchg
cmp
ljmp
jge
enter
sbb
movsl
andb
jg
xchg
in
and
ds
mov
repnz
fcmovnu
mov
push
lahf
push
xor
push
push
paddq
test
insb
push
or
push
sbb
xor
dec
cs
cmpsl
pop
cltd
aad
mov
adc
xchg
in
call
ret
sbb
xchg
mov
cmpsb
lea
bound
mov
divl
xchg
add
inc
out
jge,pn
je
xor
scas
push
je
addr16
xchg
pop
adc
cltd
jmp
scas
loopne
pushf
ret
inc
sub
imul
dec
aaa
pop
test
pusha
in
das
push
mov
mov
movsb
sti
push
sub
jns
stc
adc
iret
jmp
loope
adc
pop
pushf
adc
push
fisttps
fistl
jbe
mov
int3
xchg
testl
pop
fists
stos
test
scas
mov
pop
jge
ret
dec
sahf
loope
insb
es
sbb
call
add
sub
mov
dec
push
pop
mov
dec
cmp
inc
sub
test
popf
ret
jno
cmpsb
adc
jb
push
add
adc
sub
neg
into
adc
cmp
fwait
stc
decb
jne
cltd
bound
pop
pop
mov
shl
aam
cmpb
mov
inc
mov
pop
or
out
xlat
inc
notl
loope
push
pop
cs
cmpsl
mov
mov
sub
mov
cld
pop
es
adc
xchg
ja
jg
mov
cmpsb
shrb
sbb
push
push
or
mov
adc
idivl
imulb
sub
inc
popa
insl
ret
mov
mov
fwait
je
insl
js
repnz
ja
push
repz
or
push
xor
xor
mov
test
mov
sub
rclb
adc
aam
test
adc
jo
lcall
sbbb
xor
in
stos
int3
jae
xchg
cli
sub
sbb
sbb
dec
sbb
pop
cmp
pop
test
xor
push
imul
pop
pop
adc
xchg
mov
divb
cmp
and
cltd
jno
cmpl
push
not
pusha
fdivl
rorl
mov
mov
sub
sub
vorps
add
in
fistpl
enter
stos
outsb
stos
xchg
cmp
mov
pushf
shl
add
decl
sbb
or
popf
push
sahf
jae
cmp
add
mov
xor
push
outsl
adc
cmp
fbld
lea
call
or
xor
int
pop
sbb
nop
jnp
mov
xchg
cmp
pop
es
lret
mov
repz
or
add
mov
dec
dec
pushf
and
dec
and
and
jp
std
sub
in
push
xor
mov
add
pushf
sbb
enter
or
popa
in
es
sbb
das
aad
push
or
test
sbb
movb
fisttps
xor
cmp
imul
popl
sarb
xchg
stos
sbb
cmpsb
std
stos
sub
jbe
xchg
ss
lea
xchg
mov
test
sub
or
xchg
pop
cmp
jno
jae
ja
dec
mov
push
sbb
les
sti
mov
push
out
xchg
pop
cwtl
xchg
test
fnstcw
rep
inc
and
test
lret
mov
cmpsl
or
pop
and
test
cmp
ret
out
or
aaa
lds
jg
in
jecxz
mov
cmp
mov
push
sub
loop
sahf
imul
sub
into
jno
pop
rcrl
rorb
or
negb
add
xchg
rorb
add
aas
popa
mov
pmaddwd
mov
ret
ss
mov
inc
fwait
push
repz
sbb
adc
rorb
icebp
mov
pop
xor
push
ret
sbb
and
xlat
jb
fisubrl
fdivr
push
daa
pop
add
or
mov
dec
popl
test
fstpl
dec
adc
scas
jecxz
jns
outsb
jo
add
inc
fcoml
add
call
mov
ss
andl
out
arpl
in
sbb
clc
sub
mov
movsb
cmc
test
mov
sbb
into
xor
addr16
out
push
cltd
xor
ret
test
adc
out
cs
pop
rcll
fcomi
jne
cmp
pop
ss
mov
movsb
popf
cmpsb
ficompl
lods
mov
inc
arpl
outsb
loope
es
mov
xchg
repnz
and
sbb
inc
sbb
pop
add
cmc
cli
cmpsb
test
mov
xor
aaa
inc
mov
loopne
add
outsb
mov
rorl
xchg
test
fwait
xor
outsb
dec
lahf
cld
xchg
rol
push
xchg
adc
pop
out
pop
lds
aas
popa
sub
push
lahf
xchg
push
jo
cmp
xchg
mov
mov
and
hlt
jb
clc
adc
and
into
loop
ffree
pop
cmp
dec
js
std
adc
lods
pop
sbb
inc
cmpsl
xchg
push
nop
es
loopne
ret
push
mov
or
jnp
xchg
out
lods
add
jns
pop
cmp
insl
aaa
into
xor
sub
pop
ds
mov
or
xchg
inc
dec
dec
jmp
std
call
mov
pop
sub
fsubs
lcall
jb
jo
outsl
pop
sbb
mov
fadds
jo
push
in
aas
sti
mov
cld
mov
add
dec
divb
inc
outsb
and
mov
icebp
decl
push
xchg
mov
and
add
lcall
push
ret
xlat
push
test
add
cltd
xor
pop
mov
mov
and
ds
in
lret
gs
shll
not
mov
xor
shr
jg
stc
mov
pop
sub
sbb
pop
jo
aas
mov
icebp
push
mov
jnp
inc
pop
cmp
and
aaa
add
inc
sub
add
sbb
cmp
sub
in
test
push
loope
sbb
jecxz
pop
rcl
mov
bound
mov
jne
jge
cmp
popf
jp
sub
jne
pushf
xchg
adc
or
push
sub
mov
sub
sub
in
add
ret
mov
daa
mov
add
std
jp
es
cwtl
push
mov
and
sbb
jmp
sbb
push
loopne
add
rcr
imul
add
adc
pusha
push
or
int3
cli
mov
stos
sub
mov
mov
push
fistpl
xchg
and
xor
enter
scas
xor
arpl
xor
sub
sarb
mov
test
in
lcall
jle
popf
sbb
std
lcall
rcl
jg
pop
push
nop
cld
divl
test
dec
cmp
xor
es
dec
pusha
mov
int
sti
gs
cmp
or
pop
popf
iret
xor
test
or
rcr
lret
out
pop
add
jp
add
mov
in
js
fsubr
mov
sub
cmc
sbb
pop
popl
jge
pop
mov
xor
jmp
cwtl
mov
sbb
fstpl
pop
rcr
adc
sahf
loopne
pop
jle
lahf
mov
addr16
mov
das
fldcw
mov
aad
xchg
sti
mov
aam
xor
in
insb
lahf
pop
movsb
clc
pop
aam
sub
test
push
mov
dec
mov
add
mov
jo
cmpsb
and
or
mov
negb
mov
sub
pop
xor
xchg
lcall
jle
lea
inc
xor
imul
jns
loopne
push
in
add
loope
inc
loop
repnz
sub
inc
push
jnp
add
and
and
cmp
sbb
outsl
jmp
mov
pop
stos
scas
sub
and
sarb
xchg
mov
ljmp
inc
dec
lcall
add
aas
pusha
or
mov
fistl
stc
or
addl
sbb
sarl
cmc
push
call
test
adc
fsts
gs
idivl
adc
push
pop
out
mov
jns
jecxz
cmp
sbb
xchg
sbb
fldl
div
pop
jg
xor
pop
rcrb
sbb
iret
cmpsl
sub
loope
push
daa
push
jl
cld
inc
fcmovnu
lret
into
repnz
and
push
mov
stos
inc
push
aam
adc
fucomp
pop
fildll
pop
lret
mov
mov
int3
hlt
repz
sub
mov
ss
and
push
sbb
and
scas
xchg
wbinvd
mov
shlb
dec
mov
cmp
aaa
xchg
les
push
mov
fcompl
loop
hlt
and
stos
lods
ret
inc
sub
out
and
gs
pop
ret
cli
mov
mov
mov
jo
jp
addb
iret
adc
mov
pop
mov
sub
fdivr
push
and
sub
xor
fstl
mov
jmp
adc
push
rcr
sub
mov
push
push
fisubrl
pop
loop
es
das
ret
fdivrs
lahf
jg
ja
mov
call
mov
jno
mov
mov
jae
adc
mov
pushf
insl
jb
pop
jnp
xchg
mov
adc
jns
and
inc
sbb
jecxz
int3
mov
andl
inc
jg
rcrl
mov
xchg
jae
sarb
xor
es
xor
movsl
fwait
fcmovnb
sbb
fld
mov
add
icebp
mov
popf
call
aas
out
jb
mov
shll
adc
jge
imul
sbb
pop
adc
loope
hlt
jp
sbb
and
push
jne
adc
idivb
jg
add
add
pop
ret
dec
or
decb
mov
cmpsb
or
sub
inc
lds
sub
sbb
mov
mov
stc
or
inc
hlt
addr16
pop
jle
or
inc
mulb
inc
sahf
jl
mov
mov
cmpsb
jno
into
ss
xor
in
testb
imul
test
pop
or
push
adc
lods
out
loop
fildl
mov
lock
hlt
mov
loop
movsb
xchg
lahf
and
cmpsl
dec
or
in
inc
mov
popa
bound
or
cmpsb
push
adcl
jp
shlb
jbe
mov
mov
push
xor
nop
out
sub
inc
inc
dec
bound
loop
notl
xor
mov
lcall
sub
or
add
pop
rol
xchg
sbb
repz
ja
inc
mov
cwtl
mov
movsl
ss
sub
testl
cmp
bound
arpl
add
fs
inc
or
cmp
mov
push
add
cmpl
jmp
addb
cld
mov
ret
ja
pushf
sub
push
mov
sub
sub
les
in
xlat
cmp
jmp
adc
pop
lret
sub
inc
ret
mov
rorl
notl
idivb
mov
jecxz
out
jns
add
jge
xor
mov
adc
inc
mov
dec
fcoml
mov
fldl2e
push
sbb
mov
ss
icebp
outsb
mov
sbb
inc
int3
push
negl
mov
add
cmc
rcll
fsubl
fwait
std
adc
into
cmp
sbb
sub
push
scas
push
adc
imulb
cmp
dec
aam
nop
adc
cmc
push
and
je
dec
sbb
or
ret
jmp
jae
xor
ja
sub
ss
stos
cmp
sbb
xor
xor
fwait
push
and
subl
pop
push
pushl
and
scas
inc
or
out
inc
iret
sbb
mov
mov
mov
add
inc
sub
cltd
scas
loope
jb
movsb
xor
shrb
gs
loope
mov
adc
or
sbb
aad
lock
or
movl
push
jae
sbbl
popa
divl
and
mov
xor
subl
cs
loop
test
xchg
fs
jg
lcall
lahf
push
addr16
or
out
cld
xchg
add
out
cltd
jbe
hlt
ljmp
std
cli
adc
mov
jmp
aam
mov
xchg
out
add
inc
mov
rclb
int3
mov
fld
mov
imul
hlt
movsl
adc
add
and
push
sbb
gs
mov
test
sbb
dec
ret
fisttpl
or
mov
adc
sbb
cs
mov
inc
fptan
mov
xchg
enter
aam
js
jns
loop
stos
js
cwtl
inc
int
rolb
fwait
into
subl
imul
ds
jmp
je
lcall
jecxz
jbe
sub
xchg
mov
push
and
iret
gs
inc
scas
sbb
mov
out
lcall
push
jle
cmpsl
imul
xchg
adc
pop
sbb
jle
adc
mov
jecxz
mov
mov
mov
dec
lret
adc
mov
fldl
pop
sbbl
mov
xor
loop
test
mov
in
std
fiadds
lret
loopne
and
sub
dec
popf
lret
in
and
pop
jb
rcrl
dec
shlb
mov
push
fcomps
pop
gs
push
mov
call
add
repz
xor
dec
jnp
les
push
jg
cmp
inc
push
fstpt
add
pop
sub
daa
xchg
test
cmp
scas
daa
insl
out
ret
cmp
or
and
notb
fwait
clc
cld
shlb
mov
int3
mov
xchg
rol
mov
pop
in
faddl
iret
popa
adc
pop
cmp
hlt
inc
xchg
cli
xor
pop
push
mov
push
cmp
data16
pop
sbb
mov
je
sti
mov
hlt
jmp
xlat
mov
cmp
mov
pop
xor
sub
xchg
pop
aad
leave
out
movsl
sarl
mov
lock
dec
and
incb
lret
mov
xchg
movsb
sti
or
jp
add
cltd
cmc
sbb
aaa
ja,pn
xchg
or
jmp
jg
vcomisd
cmpsb
push
sti
cli
fwait
inc
out
xchg
rolb
sub
xchg
add
pop
outsb
push
sahf
mov
mov
std
jnp
push
int3
xor
sbb
dec
jecxz
nop
stc
mov
mov
cmpsb
dec
scas
mov
sbb
std
shll
and
sbb
mov
shlb
mov
dec
stc
daa
outsb
repz
mov
pop
push
jl
inc
and
aad
adc
mov
test
pop
add
sahf
and
mulb
xchg
int3
in
push
subl
lahf
ss
cs
and
jp
and
addr16
je
fnstcw
mov
cmc
sbb
add
push
ljmp
cmp
cmpsl
fnstenv
in
cld
pop
ja
fstpt
sub
jle
lahf
push
pop
mov
push
dec
mov
loopne
lcall
cld
push
xor
fxrstor
dec
mov
sub
mov
movsb
cmpsb
adc
sbb
imul
jmp
pop
fisttps
in
mov
jno
xor
and
inc
pop
hlt
fst
imulb
lcall
aaa
roll
xorl
aam
mov
cmp
sbb
sbb
mov
mov
jbe
inc
cmp
sbb
mov
pop
movsl
iret
les
testl
sbb
cmp
ss
xchg
scas
mov
std
add
mov
inc
xchg
mov
aad
mov
xor
sub
arpl
dec
sub
stos
mov
fwait
xor
sub
sub
adc
push
adc
sahf
lcallw
push
push
test
inc
add
js
js
jge
dec
push
dec
cmp
mov
ret
or
mov
dec
or
sahf
sbb
xchg
adcl
xor
pop
fistl
mov
inc
int
push
pop
pop
add
aaa
sub
sub
mov
adc
aaa
and
ret
xchg
out
fs
cmovg
int
divb
lods
loope
pusha
push
adc
pop
call
cmp
rcrb
jle
jb
mov
push
leave
xor
mov
cmp
ret
cmc
dec
stos
stos
xor
push
adc
pop
add
aam
cmpsb
data16
out
mov
out
add
in
int
fbstp
mov
test
mov
sub
cmp
lods
ret
out
scas
jmp
flds
std
popf
fsubrl
loope
mov
sbb
ss
hlt
in
mov
mov
movsb
inc
test
into
rorl
jmp
call
in
or
sub
mov
dec
sbb
cmp
sub
mov
ret
and
pop
cmp
mov
mov
jb
or
jno
pop
pop
loop
mov
pop
loop
and
dec
ss
dec
dec
sar
xchg
inc
das
sbb
lods
jmp
inc
or
aas
push
xlat
nop
or
aad
lea
pop
insl
mov
outsl
test
push
pushf
xor
and
lcall
loop
stos
mov
or
fdivp
or
test
mov
aad
ret
and
and
xchg
adc
sbb
mov
test
insl
cli
add
jne
nop
xchg
test
repz
inc
dec
scas
inc
mov
aad
fcoms
ret
stos
fldl
sbb
test
sbb
and
add
jle
mov
mov
loopne
outsb
xorb
mov
jge
or
in
add
xchg
in
mov
xchg
mov
inc
das
jl
leave
es
out
inc
ret
or
lock
fnstsw
mov
or
shll
xchg
bound
mov
scas
idiv
cmp
pop
xchg
or
jge
pop
sbb
pop
aam
push
loopne
mov
mov
popa
dec
sbb
mov
inc
and
xchg
int3
es
cmc
or
dec
pop
rorl
jae
xchg
fildll
mov
sbb
xor
and
in
ret
xor
mov
jbe
fs
cmpsb
ds
jmp
imul
xorl
jnp
adc
sbb
mov
mov
adc
fmuls
insb
adc
jae
arpl
in
lods
fildl
or
ret
aam
icebp
fcmovne
jns
loopne
lods
xor
mov
jge
push
xor
push
int3
jecxz
and
dec
scas
mov
loopne
fistps
pop
push
cmp
xor
cmpsl
push
sub
mov
outsl
movsb
cmp
cmp
popa
pop
test
orb
add
popf
das
fmuls
and
inc
clc
pushf
fbld
fisubs
pop
divps
hlt
testl
cmp
jne
xor
ds
sub
push
das
icebp
popa
xor
mov
repnz
mov
cmp
inc
movsb
push
push
and
arpl
into
pop
adc
mov
sarl
sbb
inc
nop
push
out
out
out
sbb
fs
dec
arpl
cmpl
test
sbb
jbe
xor
in
das
pop
mov
xor
mov
dec
push
out
lret
in
mov
add
scas
adc
out
cld
xchg
inc
lea
popf
jns
mov
push
mov
pop
imul
iret
ss
addb
inc
repnz
subl
sti
sbb
mov
fcmovnbe
ljmp
stos
xor
mov
mov
inc
add
hlt
data16
push
imul
inc
insb
jne
pusha
testb
rcl
hlt
aaa
cmp
stc
dec
cmpb
xor
cmp
mov
imul
mov
gs
ret
xor
std
aaa
daa
add
jmp
or
lret
push
add
inc
mov
dec
aaa
test
xchg
xchg
pop
mov
add
imul
cmp
repnz
sbb
fisubl
popa
add
in
xor
mov
nop
shl
out
mov
cli
push
mov
lea
xlat
out
dec
in
lea
or
rolb
cmpsb
mov
or
repz
es
call
xchg
lcall
stos
std
and
adc
jle
dec
imul
cmpsl
cli
xchg
in
pop
sub
dec
movsb
ja
or
pushf
enter
and
add
pop
mov
inc
add
pop
inc
pop
sbb
out
mov
imul
lcall
sbb
inc
es
and
pop
ret
dec
xchg
cmp
repz
xchg
les
test
add
push
repnz
add
and
mov
test
iret
inc
pop
sub
or
and
rclb
cmc
cmpsl
mov
hlt
clc
jns
jge
mov
shlb
pop
mov
mov
inc
add
or
mov
lret
push
arpl
mov
ljmp
std
push
add
push
xlat
cmc
cmpsl
push
jb
dec
mov
inc
push
enter
insl
loope
xchg
pop
andb
fstps
pop
cmpsb
inc
rorl
push
or
and
mov
lods
fisubrs
or
out
push
dec
add
fldt
dec
adc
jmp
dec
lea
sub
mov
sbb
mov
mov
sti
cs
mov
sub
or
push
lahf
popf
mov
jbe
imul
je
jns
mov
rcl
sarl
stos
sub
inc
mov
daa
cltd
mov
jb
stos
xorl
fadds
lret
lahf
cmp
test
xor
push
pop
adc
adc
loope
loopne
pop
sub
stos
xchg
xchg
cmp
jns
or
out
jecxz
mov
mov
nop
mov
jmp
adc
xor
push
rcrl
mov
mov
cmp
les
and
push
stc
inc
dec
test
cs
addr16
out
or
mov
adc
in
jae
in
lcall
jne
sbb
sub
adc
and
jp
int
mov
imul
fwait
mov
xchg
inc
orl
pusha
aam
jl
adc
inc
add
test
mov
or
fldl2t
pop
adc
rcrl
fnsave
fwait
imul
pop
jl
mov
lods
xchg
mov
mov
aas
into
mov
cltd
xlat
cltd
add
push
adc
rcrb
jl
dec
fidivrs
nop
xchg
aas
sar
out
xchg
nop
nop
pop
aas
movsb
adc
into
aaa
cmp
ljmp
lret
mov
orl
jg
out
icebp
fcoms
shl
adc
sub
movsb
xchg
sub
jae
jno
arpl
arpl
sahf
gs
cmpb
mov
mov
jge,pn
jae
in
sahf
shrl
dec
test
mov
insb
shll
inc
pop
push
adc
lods
stc
push
scas
mov
sbb
and
lods
rorl
pop
xchg
pop
pop
aad
pop
in
fsts
xor
cmp
ret
or
mov
mov
jnp
and
jne
enter
jmp
pop
push
inc
ljmp
cli
call
xchg
frstor
cmp
add
das
mov
ret
int3
adc
rorl
fdivl
mov
fldcw
mov
push
mov
imul
subb
mov
push
outsb
lret
jl
das
add
xchg
shrb
loope
fs
out
scas
test
insl
cmp
movsl
clc
xor
fs
inc
repnz
pop
arpl
sarb
sarl
in
lea
jecxz
in
and
in
adc
repz
or
push
or
iret
aad
mov
stc
push
xchg
add
sub
test
pop
xchg
sub
mov
or
pop
and
leave
push
inc
xchg
mov
or
pop
sub
jmp
jnp
fcomps
xchg
push
sub
add
movsl
adc
std
aaa
jg
add
mov
lds
outsl
jns
jecxz
adc
jo
push
mov
out
pop
push
ret
fbld
mov
or
enter
jnp
ret
fs
scas
fisttps
test
fistl
and
fcomip
ja
add
lahf
inc
push
inc
lret
ret
movl
hlt
gs
sbb
shll
mov
or
dec
imul
stos
es
adc
out
int3
xchg
int
xchg
jns
dec
sub
ss
ficoms
mov
ret
repz
sub
push
jnp
add
fisubrl
jno
sbb
xchg
push
inc
lcall
bsr
mov
shl
pushf
test
mov
push
sub
das
enter
xchg
mov
cmp
fmul
arpl
pop
loope
xchg
in
subl
jbe
add
mov
jns
sub
jns
push
mov
and
lea
add
cmp
adc
pushf
in
adc
pop
xor
push
fucompp
popa
jg
push
aad
mov
leave
pop
dec
das
jb
imul
out
add
data16
cmp
imul
jae
pop
fs
ljmp
push
push
ret
sbb
mov
xor
pushf
dec
adc
push
add
roll
pop
cltd
push
dec
pop
pushf
mov
dec
push
sbb
imul
xchg
orb
sub
lods
test
sbb
stc
cs
jg
sub
add
pop
and
into
pop
inc
outsb
dec
into
push
jns
xchg
dec
outsl
push
sub
xor
add
scas
push
adc
jo
into
bound
and
pop
daa
add
push
add
mov
dec
fbstp
ror
out
push
lret
dec
arpl
push
cltd
aas
xchg
testl
jno
add
dec
popa
sbbl
cmp
sub
inc
pop
cmpsb
outsl
jno
and
mov
pop
jmp
in
pusha
in
aaa
and
or
and
pop
push
sub
pop
lret
sti
pushf
in
sbb
mov
adc
sub
shl
aaa
movsl
outsl
sbb
ss
adc
xor
sub
dec
inc
push
push
pop
mov
cli
push
imul
popa
mov
lock
sbb
mov
aas
insl
je
xor
sub
adc
fadds
mov
mov
or
insl
push
outsl
into
lods
nop
mov
dec
pop
sub
in
shr
mulb
mov
mov
adc
mov
push
sub
mov
lret
jmp
lods
mov
sub
adcb
fdivl
jl
loopne
dec
add
enter
arpl
xchg
adc
fs
or
jno
inc
adc
sbb
test
add
mov
jmp
cs
adc
mov
divb
clc
adc
and
paddd
mov
test
out
sbb
out
add
push
push
outsl
or
ret
cli
aas
sbb
pop
cltd
addl
mov
jb
push
lods
stc
push
ja
cmp
pop
add
cmp
and
or
fmuls
pushf
inc
push
flds
bound
loope
xchg
or
sbb
mov
shlb
xor
les
inc
mov
mov
pop
test
adc
mov
add
out
add
mov
cld
fisubs
mov
insb
dec
fidivs
sub
lahf
or
jnp
fiaddl
push
jp
lock
mov
js
pop
mov
push
in
stos
fisubl
pop
shll
lahf
loope
es
push
cmp
repnz
cmc
aad
push
push
jne
lock
add
adc
jne
mov
jle
repz
xor
testb
outsb
add
orb
xchg
aaa
sub
adc
push
adc
pop
xlat
rclb
pop
clc
dec
stos
lods
add
cld
jbe
into
popf
movb
add
or
xlat
push
push
cmp
fildl
push
add
jecxz
jno
ss
in
std
mov
ljmp
fisubs
sub
sbb
push
mov
stos
cld
mov
push
mov
add
inc
out
xchg
mov
pop
lods
xchg
or
sbb
xor
movsl
inc
push
mov
pusha
je
push
out
ljmp
jo
sti
aad
pop
mov
cmpsl
test
xchg
mov
push
push
inc
out
xchg
idivb
enter
scas
jmp
int3
xchg
add
nop
push
in
push
mov
push
aaa
mov
rcl
jne
push
cli
xor
push
and
aas
jnp
mov
arpl
cmp
inc
xor
sbb
jle
iret
in
lds
inc
into
or
pushf
icebp
rol
xor
xor
mov
int
dec
sub
repnz
or
xchg
outsl
ljmp
xchg
adc
call
out
out
xor
push
clc
and
xchg
inc
xor
add
enter
dec
lds
mov
inc
insl
int3
lods
daa
pop
aas
test
add
inc
ljmp
ja
adc
incl
inc
test
inc
loop
in
mov
mov
sub
adc
leave
scas
mov
fsubr
push
in
arpl
sbb
mov
and
push
rcr
adc
push
fwait
ds
lock
or
in
mov
push
in
mov
mov
mov
inc
hlt
mov
xchg
negb
in
or
pop
and
sub
mov
xor
inc
ret
and
popa
cmc
imul
clc
xchg
push
nop
xchg
cld
jno
mov
clc
clc
sbb
jg
lret
pop
sub
xlat
dec
pop
loopne
out
mov
sub
movsl
pop
mov
mov
mov
pop
dec
mulb
fcompl
ret
pop
lret
mov
jnp
push
ffreep
test
dec
sbb
movsb
jl
jnp
pop
push
or
int3
add
jb
mov
pusha
out
jns
sarb
in
push
icebp
push
std
push
ja
xchg
cltd
loope
insl
xlat
lahf
pop
mov
rcrl
mov
jl
mov
loop
sbb
mov
ljmp
add
mov
ss
rcll
mov
adc
dec
and
pop
xchg
inc
test
mov
mov
pop
repz
adc
lods
aam
mov
jecxz
cmpsb
fidivrs
pop
cmpsl
pop
fnstsw
pop
mov
mov
lods
icebp
and
adc
xchg
sbb
lock
xor
ret
das
and
fisttps
sbb
or
pusha
insl
push
popf
or
mov
pop
xor
pop
or
pop
cli
mov
popf
adc
dec
call
pop
or
mov
lods
loope
mov
fadd
fisubrs
xchg
dec
push
xor
pop
movsb
mov
cmp
pusha
dec
callw
add
sarl
xlat
inc
mov
fcmovne
mov
mov
mov
xor
mov
cltd
push
push
mov
mov
push
push
ljmp
mov
pop
mov
xchg
dec
mov
and
fdivl
xchg
mov
shl
shll
mov
dec
push
aaa
mov
aaa
cmpsb
pop
push
incb
pop
push
pop
and
mov
outsl
insb
mov
mov
aam
mov
inc
movsl
dec
stos
mov
fsubl
fstl
lds
push
xchg
mov
pop
pop
out
xor
or
inc
adc
imul
xor
mov
ret
cld
call
add
lods
stc
or
push
sbb
dec
or
jnp
ret
dec
aad
add
mov
std
scas
test
out
cltd
sub
jbe,pn
xor
js
insl
sbb
cld
aas
cld
addr16
sub
repnz
jo
insl
jmp
xchg
sbb
movsl
pop
mov
imul
je
and
jecxz
fs
cmpsl
pushl
cmp
fidivrs
xchg
push
pop
inc
sbb
pop
jg
xchg
jp
cs
sbb
inc
dec
ljmp
fwait
cmpsl
adc
inc
aam
rcl
loope
push
adc
jg
imul
lahf
nop
sbb
rclb
mov
pop
int3
andl
jne
xor
inc
sbb
outsl
addr16
push
mov
or
out
add
mov
push
aam
call
add
ret
xchg
ss
shl
and
lcall
test
std
xchg
dec
mov
leave
push
test
jb
push
hlt
push
cmp
lcall
mov
out
inc
mov
mov
pop
fucom
push
xchg
lds
imul
ret
mov
push
jle
cmp
cs
loop
and
clc
adc
jle
outsb
inc
jmp
jl
push
xor
add
lods
stos
mov
imul
fwait
sbb
add
fwait
push
es
or
xchg
orb
cmp
adc
lods
pop
cs
pop
pop
mov
dec
jg
cmp
lds
mov
push
cmppd
int
dec
iret
fisubs
pop
es
or
lock
fistl
outsb
mov
sti
out
jp
popf
cmpsl
js
inc
mov
addl
jg
decb
pop
iret
lods
hlt
lods
mov
xor
cmp
inc
cltd
out
jg
lret
mov
xchg
fwait
pop
addl
cmp
ljmp
mov
into
jb
ficomps
insb
ljmp
inc
cmp
mov
lds
lods
cli
or
cmp
jl
ficompl
pop
xchg
inc
mov
push
mov
add
pushf
loop
loopne
jmp
mov
cltd
pop
or
lods
jno
dec
sub
sti
sub
push
mov
push
lds
add
jo
cmp
repz
js
fisttps
sub
fucomp
sbb
pop
push
std
push
dec
mov
jle
push
cltd
lcall
cmp
shll
lcall
scas
mov
push
xchg
test
mov
xchg
sbb
movsl
mov
fimull
mov
xchg
cmp
aas
rolb
mov
call
or
popf
add
popa
stos
or
jge
lahf
fdivr
lds
repnz
lods
xchg
pusha
push
xchg
sbb
arpl
xchg
dec
xchg
data16
jle
or
jl
push
cs
push
pushw
roll
sbb
mov
or
cli
mov
inc
sub
mov
xchg
push
sub
push
pop
cwtl
sub
dec
fsubs
mov
jno
enter
push
jl
push
stos
jno
mov
inc
jge
add
fwait
jne
pop
jae
and
xchg
out
add
adc
pop
mov
or
pop
push
adc
sub
rcrl
push
cmpsb
push
and
sub
sub
je
cltd
push
xor
mov
sub
xor
adc
data16
cmp
dec
adc
fistpll
jle
fucomp
inc
das
inc
jns
lret
jp
repz
mov
jle
mov
pop
or
jnp
sub
je
jle
pop
jne
addl
ret
inc
pop
mov
cwtl
or
pop
cltd
mov
adc
xchg
out
mulb
add
pop
imul
dec
addb
add
pop
shlb
fimull
testl
sti
push
push
imul
mov
in
pop
sbb
mov
cmpsb
out
adc
mov
cmp
push
mov
sbb
inc
aaa
add
cmpsl
test
in
mov
outsb
cmp
or
movsb
jno
lret
mov
mov
dec
aad
and
cmc
push
add
mov
and
mov
pop
test
fstps
mov
or
xchg
and
jae
sbb
jnp
push
subl
test
stos
sahf
fimull
pop
inc
mov
adc
divb
test
fwait
add
ds
push
and
mov
push
add
test
mov
add
jb
sub
stos
pop
fstpl
sbb
or
mov
enter
cs
repz
mov
sub
xlat
hlt
test
mov
popa
inc
jo
dec
lods
aaa
es
fwait
xchg
int3
mov
add
lret
sub
cmp
push
cmp
fstps
push
adcb
dec
lock
scas
mov
ficompl
push
fistl
add
lret
cli
xchg
js
pusha
jmp
cmpb
dec
dec
fdivs
dec
das
in
mov
sbb
test
mov
mov
cmc
push
jns
and
sbb
cltd
outsb
out
cwtl
bound
incb
cmp
bound
mov
cli
outsl
jbe
js
cmp
mov
test
jnp
pop
cmp
push
push
push
shlb
aam
in
sbb
and
stos
lret
mov
and
mov
dec
test
jb
lahf
or
jae
mov
cmp
adc
in
pusha
inc
test
aad
inc
js
cmp
jne
ficomps
mov
xchg
sti
add
or
xchg
xchg
inc
stos
mov
pop
jbe
test
subb
xlat
fsubrl
jae
mov
mov
jne
pop
fsubrs
xchg
ds
lock
mov
jnp
inc
addb
test
out
push
or
insl
pop
mov
fildll
inc
fwait
add
aas
mov
lods
dec
pusha
fcmovb
jb
and
mov
cli
in
mov
xchg
outsl
nop
out
aas
fidivrl
out
add
pusha
mov
jle
loope
adc
insb
pop
mov
and
fisttpll
push
lods
jno
dec
pop
fidivs
ret
scas
lds
mov
test
int
pop
mov
stos
gs
push
pop
dec
gs
je
mov
lret
sahf
test
lret
sbb
inc
push
xor
clc
sub
lret
arpl
mov
lahf
bnd
rcrl
xor
sub
cmpsl
pop
dec
fmull
jb
imul
pop
lret
sbb
and
sbb
repnz
scas
fcompl
fcompl
out
or
sahf
inc
sbb
ds
in
jmp
or
xchg
xor
add
sub
aas
ljmp
pop
test
call
xlat
shlb
stc
sbbb
mov
das
xabort
les
mov
mov
and
and
enter
leave
mov
jg
aaa
pop
mov
lock
test
das
xor
cmp
mov
int
pop
adc
mov
add
cmpsl
mov
dec
popf
add
mov
mov
push
pop
fisubrs
ds
or
mov
sahf
ret
adc
ret
xor
mov
adc
or
mov
inc
sahf
out
lret
lds
lcall
pop
mov
shl
xor
dec
ret
fimull
fwait
daa
icebp
ficoms
xchg
mov
das
cs
pop
jg
daa
mov
cmp
mov
icebp
dec
mull
pop
mov
rorl
ss
mov
insl
mov
inc
push
in
rolb
cli
xchg
pop
scas
push
out
sub
loop
movl
addr16
sahf
mov
adc
mov
xor
mov
xchg
xchg
scas
xchg
xchg
pop
adc
push
sbb
std
mov
xchg
and
cmp
mov
loope
cmp
xor
xor
fs
out
fstpt
dec
std
adc
lds
addb
mov
out
mov
shll
push
and
rol
mov
inc
lods
pop
pop
nop
xor
mov
xchg
jecxz,pn
pop
jo
cmpsb
add
xchg
sbb
jne
mov
aad
sarl
data16
clc
scas
repz
inc
ss
dec
sti
inc
lcall
add
addr16
sub
lods
lahf
scas
push
lcall
pop
inc
loop
push
in
pop
mov
fisttpll
jno
fldenv
xchg
xchg
ja
adc
sub
call
dec
inc
push
mov
scas
ljmp
aaa
std
and
push
xchg
cmpl
in
add
das
andb
mov
cmp
notb
xchg
test
xor
sbb
pop
cld
cmp
inc
cmp
add
divb
dec
lods
xchg
sarl
aad
mov
in
enter
nop
inc
xor
stc
shlb
loope
mov
fsubs
pop
shlb
fisttpll
cs
les
push
shr
adc
ss
and
dec
mov
adc
lret
pop
outsl
int3
xchg
in
test
das
pop
in
xchg
icebp
jmp
push
out
mov
mov
cmc
imul
xchg
add
scas
dec
mov
incb
mov
jo
jo
or
lods
dec
lret
sbb
into
daa
or
es
or
lahf
pop
inc
xchg
int3
insb
sbb
out
jge
push
sub
cmp
mov
pop
mov
daa
movsl
loopne
mov
push
jb
add
addr16
dec
mov
push
inc
sub
outsl
adcb
cmpb
lahf
mov
inc
jo
and
dec
lods
add
mov
ret
mov
fs
or
sbb
int3
and
int3
in
sub
out
sti
ss
in
sub
nop
add
je
scas
sbb
push
orb
mov
in
xchg
xchg
test
and
sub
cs
jae
int3
mov
jg
xor
mulb
mov
das
mov
add
loopne
inc
cmp
adc
out
xor
jo
ja
push
sub
mov
and
fwait
and
jns
ret
ljmp
nopl
adc
ror
xor
push
andl
lods
pop
cmpsb
incl
icebp
dec
pushf
popf
inc
xor
jmp
gs
pop
pop
call
or
mov
aam
inc
xchg
sub
jns
adc
cmc
lret
pop
leave
inc
out
or
test
popf
cmp
jo
fwait
cmc
xlat
cmpb
push
add
es
pop
xor
mov
rcl
dec
loop
jg
dec
push
pop
inc
lods
and
or
inc
fs
mov
loopne
into
xchg
sbb
xor
fistpl
jmp
pop
dec
xlat
sti
push
mov
mov
hlt
push
adc
movl
xor
push
cmp
sbb
jl
push
dec
or
sbb
sub
push
gs
pop
fdivl
xor
jae
ret
test
stos
cs
adc
lret
int3
inc
dec
and
test
lods
ret
xchg
outsl
dec
inc
dec
pop
dec
movsb
jl
dec
sub
and
pusha
jle
stc
cmpsl
lret
out
mov
or
fisubl
movsl
sub
xchg
shll
sub
out
loop
cmp
fidivrs
lcall
inc
jle,pt
push
ja
lods
jle
cs
repz
addb
mov
mov
insl
repnz
mov
pop
les
pop
mov
xor
jb
rolb
orl
mov
cs
and
and
testl
mov
xor
xorb
inc
adc
xchg
dec
push
cmp
pushf
adc
test
sub
jge
jbe
mov
add
jno
dec
out
arpl
or
js
in
pushf
out
jl
pop
pusha
fdivp
popa
clc
cmp
fnstenv
jne
clc
repz
cmp
push
mov
clc
shlb
mov
adcb
or
iret
lcall
aas
pop
mov
dec
lods
pop
or
push
lds
add
cmp
mov
adc
mov
aad
cmp
push
loop
adc
cmc
jmp
test
pop
mov
adc
sbb
in
lret
jae
stos
aam
jg
xchg
jb
int
fcomps
xchg
xchg
je
jge
cmp
add
int
push
mov
cmp
xor
mov
mov
push
lret
je
mov
repnz
mov
fcomps
jg
xchg
jle
dec
mulb
test
jnp
xchg
xchg
dec
or
jge
or
mov
sub
pop
xchg
pop
in
sti
sub
push
pusha
jno
cmp
xor
loopne
es
movsl
outsl
jb
dec
push
dec
pop
inc
xor
addr16
hlt
cwtl
inc
pop
dec
clc
popf
sbb
sbb
scas
sbb
repnz
pop
pop
or
rcrb
sbb
push
aas
and
sbb
xor
inc
cmp
cmpsb
pop
cmp
dec
lret
pop
mull
js
cwtl
es
scas
test
mov
sbb
mov
add
inc
rcll
dec
mov
dec
pusha
stos
sahf
sub
lds
xor
jge
dec
jns
insb
xchg
xchg
mov
stc
pop
jg
repz
inc
out
rcrl
push
loopne
es
sub
xchg
leave
mov
adc
xchg
jbe
out
cmp
test
mov
mov
mov
xchg
jnp
sbb
es
cltd
out
mov
andl
or
orl
jl
test
rorl
mov
inc
jge
xor
imul
je
pop
pop
in
xorb
fiadds
or
jle
ror
fldl
iret
repz
jno
loop
lods
lock
xor
outsb
jge
xchg
add
sbbl
cmp
dec
gs
ja
insl
lcall
mov
shlb
fs
sbb
jmp
jle
mov
cmp
leave
lahf
cmpl
es
insb
adcb
cs
push
cmc
and
xor
xchg
fstl
cmp
xchg
loop
xchg
dec
jge
cmp
cmp
xlat
mov
xor
dec
testl
push
and
pop
pop
pop
fadds
jecxz
xlat
or
sub
test
das
mov
stos
call
pop
iret
or
gs
or
loope
pop
test
mov
cmp
imul
jno
xor
mov
bound
xor
jle
fisubrl
fisttpll
aam
jo
or
arpl
xor
pop
std
mov
inc
xorl
je
adc
jnp
mov
scas
mov
in
pop
in
shrb
jecxz
xchg
mov
mov
in
lahf
mov
cli
mov
lea
test
inc
negl
mov
pusha
ljmp
movsl
inc
outsl
xorb
andl
faddp
mov
adc
xchg
mov
ljmp
push
movsl
push
dec
jecxz
ret
lahf
pop
add
cmc
xchg
ret
aas
add
aaa
fists
cli
test
insl
fidivl
cmp
jne
fnstenv
and
imul
out
jae
movsb
sbb
adc
xchg
xor
loop
push
mov
jge
xchg
pop
pop
iret
insb
mov
hlt
cmp
mov
arpl
inc
fcmovnbe
mov
mov
mov
xor
lret
iret
mov
and
js
or
loopne
sti
jb
dec
add
or
in
mov
push
enter
push
int
xor
mov
or
in
mov
jge
dec
roll
pop
sbb
pop
sub
lock
mov
ja
ret
iret
pop
dec
mov
pop
stos
xchg
or
dec
in
adc
inc
mov
and
jge
inc
sub
jg
dec
add
or
aas
cwtl
mov
ret
in
jb
cmp
das
push
test
cpuid
lods
jge
pop
addr16
and
imul
xor
push
sub
test
add
push
setns
inc
add
sbb
addl
std
sub
decl
mov
mov
push
or
jp
add
or
sbb
stos
lret
fimull
loope
hlt
sub
sub
push
sar
dec
jns
inc
scas
jmp
test
push
dec
mov
cmpsl
nop
daa
outsl
xor
xchg
shrb
dec
cmc
rorl
aam
push
js
sub
rclb
je
out
or
adc
inc
xchg
xlat
jg
mov
movsl
and
mov
mov
aad
lea
sbb
pusha
or
push
subb
push
mov
dec
or
inc
lods
fsubrl
div
ss
mov
or
xchg
add
cli
test
lds
andb
and
outsb
push
daa
xor
fnstcw
cmp
add
or
mov
push
scas
mov
test
fwait
enter
gs
cmpsl
sub
xchg
jnp
sub
enter
push
or
lret
lock
inc
jb
dec
sti
roll
ret
ss
daa
and
jmp
cmpsb
push
jmp
sbb
or
out
ss
sub
aas
push
xlat
rcll
sbb
inc
jmp
mov
mov
mov
pusha
in
sbb
pop
sbb
loop
popa
je
ret
mov
mov
lret
inc
dec
xor
ss
sub
push
add
hlt
mov
pop
es
cld
mov
sbbl
data16
popw
pop
jl
das
xchg
pushf
xchg
addl
stc
add
insl
xchg
xchg
outsl
in
imul
dec
pop
sti
lcall
cmp
cmpsl
sub
ds
push
out
inc
lock
movsl
xor
pop
out
mov
sub
fadd
fdivrl
ljmp
int3
cmp
push
sub
enter
sbb
popa
mov
jp
dec
dec
mov
inc
sub
sbb
orl
mov
jp
divb
xchg
push
ficomps
cmp
and
mov
gs
sbb
mov
rcl
adc
loopne
lock
pop
cwtl
ss
cmp
cmovo
add
xchg
aas
or
sbb
leave
jbe
or
inc
sbb
or
pop
fimull
sarl
nop
add
and
jne
push
sub
repnz
mov
sti
ret
js
pop
mov
push
mov
and
and
mov
push
jno
inc
xor
cmpsb
cld
aam
push
test
icebp
cmpsl
jge
xor
out
scas
add
mov
sarl
idivl
out
fiadds
lcall
cmp
outsb
shll
and
or
dec
or
mov
pop
insl
shr
xchg
outsb
cwtl
xor
xor
or
add
or
int3
mov
sbb
mov
pop
pusha
imull
lods
sub
cltd
xchg
pushf
in
shll
imul
into
ljmp
cltd
sbbl
push
adc
cmp
aas
and
test
ss
dec
repz
rcll
push
in
movsw
push
daa
lods
jns
and
sub
out
outsb
adc
inc
mov
lsl
cmp
into
repnz
bound
add
sti
lcall
jl
sbbb
add
xor
dec
jge
xor
pop
add
jmp
imul
and
jge
mov
das
imul
sbb
je
add
sbb
fdecstp
roll
mov
sbb
repnz
adc
sbb
mov
or
pop
sti
xchg
and
adc
and
inc
sub
jl
hlt
push
adc
and
rcl
mov
fnstcw
scas
add
or
adc
movsl
loopne
insb
mov
jne
pop
pusha
dec
loop
dec
cmp
cmp
test
es
jl
dec
pop
movsl
pushf
push
iret
sub
add
or
pop
pop
nop
or
sub
dec
add
das
cmp
leave
mov
psadbw
jl
insb
inc
js
inc
push
mov
stos
sub
mov
jnp
divl
mov
xchg
and
outsb
test
leave
stc
movsl
shrl
loope
in
jge
mov
mov
or
pop
cmc
loop
mov
dec
jo
iret
rcll
pop
movsl
adc
and
lock
enter
ljmp
mov
ss
xor
clc
jge
call
pop
push
dec
push
pop
pop
jp
dec
daa
jb
out
inc
dec
adc
sub
fcompl
push
jg
mov
jle
add
jl
dec
pop
and
call
not
mov
inc
sahf
xor
dec
scas
add
ds
das
push
pop
and
adc
xchg
push
push
xor
dec
mov
push
push
pushf
and
sub
test
mov
xchg
jns
xor
xchg
fucomi
in
lods
loope
lcall
les
js
xchg
pusha
push
insb
sbb
movsl
push
xchg
xlat
fdiv
fstpl
arpl
and
dec
pushf
jns
inc
adcb
imul
daa
xor
adc
cmp
mov
fwait
test
jmp
add
js
insb
push
addb
scas
mov
jl
push
and
lret
mov
into
mov
dec
mov
call
add
or
test
mov
jecxz
and
movsl
jbe
cmp
roll
hlt
in
xchg
xor
xlat
jp
or
push
call
aad
loopne
dec
sbb
push
cmpb
movsl
movsb
xchg
sbb
shll
jnp
or
sti
repnz
fs
xchg
lock
fidivl
out
ret
sarb
shl
rcrb
movsb
and
popa
les
add
xchg
dec
fdivrp
jno
ret
mov
xor
lea
daa
cmp
xor
or
cmp
push
pop
sub
inc
sub
mov
adc
and
cmp
je
xor
jbe
sti
mov
inc
push
fnstcw
cmp
outsb
cltd
dec
test
mov
int3
fldcw
sbb
add
jecxz
mov
dec
aam
loop
ja
leave
dec
or
jl
push
and
repnz
int
stc
and
lea
testl
mov
or
enter
out
mov
test
dec
push
enter
aad
push
lea
popf
loop
push
dec
outsb
cmp
scas
mov
pop
pop
cmp
cld
scas
xchg
fstl
sbb
int
inc
cmpsl
sbb
mov
rcrb
fstpl
cld
es
push
inc
xchg
cld
int
adcl
add
stc
arpl
adc
push
lods
out
pop
and
hlt
lret
sbbb
pop
mov
neg
mov
mov
cmp
xchg
xor
arpl
mov
ss
clc
jbe
sub
inc
movd
cmpl
push
int3
xchg
pop
ljmp
inc
insl
mov
test
xor
adc
andl
jb
mull
sbbl
movsb
and
mov
push
jg
mov
fucomip
jecxz
dec
insl
mov
loop
out
cmp
test
xor
ret
and
mov
push
arpl
rclb
aaa
ss
push
out
pop
cltd
sub
ret
in
fwait
mov
js
mov
inc
mov
scas
xor
jp
cmpl
adc
js
inc
sahf
addr16
add
rcr
jmp
repnz
jb
xchg
faddl
fs
scas
out
jecxz
imul
sbbb
ss
push
xorl
mov
pop
jge
aam
aad
repnz
negb
mov
test
out
jg
movsb
test
shll
push
jle
mov
sbb
movsl
cmp
rcrb
lods
dec
mov
adc
or
mov
outsl
jb
push
xchg
lret
cld
out
insb
arpl
xor
ja
mov
mov
nop
inc
push
xor
cmp
mov
jle
pop
xor
addl
loop
test
mov
testb
jno
push
ds
daa
push
push
xor
jge
xchg
cmp
call
outsb
gs
sbb
add
inc
cld
xor
and
pop
push
xlat
leave
xchg
cld
and
dec
nop
cmc
mov
or
add
in
pop
xor
push
dec
mov
inc
xchg
xchg
iret
scas
cmc
orb
dec
cs
hlt
je
insl
dec
loope
mov
pop
pop
or
mov
push
ret
aas
mov
aaa
lods
test
add
mov
js
imul
or
sub
cmp
mov
sbb
push
arpl
lods
sbb
imul
sub
in
add
pop
mov
test
sbb
sahf
fldt
mov
mov
jl
inc
mov
fnstcw
enter
or
or
inc
aaa
cld
jbe
lcall
xchg
testb
les
and
sbbl
int3
sar
das
adc
data16
stos
fmul
sbb
xchg
adc
popa
and
and
mov
xchg
cwtl
das
in
mov
adc
sbb
xor
inc
lods
std
sub
and
xor
xor
dec
popa
movsb
xchg
call
mov
adc
inc
push
into
cmp
push
pop
xor
int3
fidivrs
mov
xor
add
mov
lods
push
dec
cmp
sti
pop
xchg
add
ret
and
mov
add
jb
xor
add
shl
aam
push
cmpsl
push
mov
movsb
inc
es
rcrb
cmp
out
jb
fsubrs
mov
adc
arpl
jno
xchg
lcall
xlat
mov
scas
shlb
mov
push
loop
xor
inc
push
das
mul
adc
ficoml
and
xchg
popf
pop
mov
or
dec
ljmp
jnp
xchg
sub
data16
addr16
pop
add
cmp
cmp
hlt
cmp
stos
into
mov
rcll
mov
out
mov
inc
add
mov
and
lods
adc
gs
xchg
sub
inc
pop
pushf
ret
cmp
jle
adc
fistps
imul
hlt
jo
repz
jl
or
mov
loopne
mov
test
jmp
xchg
cli
imul
inc
and
or
insl
and
pop
jl
stc
cmp
push
sbb
xor
aad
jnp
lahf
dec
xor
cmpsb
sub
in
ja
cli
jnp
fs
xchg
push
dec
mov
ret
imul
xchg
pop
leave
sti
mov
xchg
cmc
notl
xchg
mov
ret
jbe
cmc
movl
in
popl
sub
imul
je
and
pushf
jg
cltd
sub
outsl
insb
and
pop
out
cmc
ret
mov
cmp
jno
mov
loopne
repz
pop
clc
fs
inc
insl
pop
add
push
xchg
mov
stc
aaa
add
pop
push
push
add
fstpl
shrb
imul
mov
jbe
orb
rep
push
rorl
xchg
pop
orb
ds
rclb
fsubl
ficomps
lahf
rol
outsb
loop
xchg
ljmp
pop
fnstcw
xlat
inc
loop
jne
xor
mov
xor
push
out
testl
or
stc
pop
add
test
les
and
cmp
mov
es
or
fwait
dec
imul
jge
stos
push
adc
ret
hlt
cmp
std
jo
jno
fsubl
push
xchg
xor
push
inc
pop
loope
test
xchg
jge
ret
loop
adc
inc
add
popa
in
cli
repz
push
and
push
test
sub
int3
mov
in
jno
xchg
setb
inc
into
inc
cli
sbb
sbb
in
into
push
adc
mov
aam
push
push
inc
adc
add
xorb
fnstcw
xchg
inc
xchg
and
sbb
pop
sub
lods
xchg
out
test
std
push
adc
mov
or
cld
push
and
hlt
scas
sarb
insl
sub
iret
dec
push
mov
scas
popa
dec
xchg
cmp
movb
adc
aam
pop
push
dec
shr
je
pop
aaa
pushf
fildl
and
stos
xchg
movsl
dec
rclb
pop
arpl
mov
mov
jmp
sbb
xchg
mov
cmp
movsb
push
bound
jp
mov
cmp
push
mov
mov
bound
subl
xlat
pop
mov
lea
aaa
jno
mov
insl
out
add
adc
pop
adc
and
adc
and
xor
psrlq
mov
pusha
jle
inc
sbb
icebp
cli
xchg
popa
push
test
add
jg
mov
mov
and
xchg
incl
pushf
mov
ret
xchg
and
jecxz
fistpl
mov
pop
lcall
adc
xlat
roll
int
hlt
movsl
or
cwtl
mov
sbb
fwait
sub
push
mov
popf
cmp
ficoml
pusha
hlt
js
iret
mov
mov
ss
cmp
dec
cmc
mov
rorb
sbb
mov
sahf
sbb
adc
mov
repz
cmp
scas
rorb
mov
mov
dec
mov
cwtl
int3
pop
imul
cwtl
das
inc
cmpsb
sbb
hlt
out
sub
fcompl
lret
jle
mov
xorl
jno
add
sub
out
fildll
xor
adc
or
lahf
fistl
mov
ja
jno
cmp
xchg
mov
jp
aaa
fcomps
lock
inc
xchg
jecxz
rclb
jnp
dec
mov
pop
sti
iret
stos
outsl
gs
push
mov
and
pop
mov
notb
fcomp
test
adc
or
add
test
xor
scas
jno
andb
adc
sub
ds
jae
in
dec
pop
sti
dec
mov
adc
xchg
sbb
and
outsb
cs
lahf
cli
xchg
jge
xchg
mov
or
pop
mov
and
xor
add
in
mov
dec
ret
or
sub
sub
pop
stc
insl
jg
mov
fisubrs
out
sbb
icebp
push
fstps
in
addr16
or
adc
xchg
arpl
add
cmp
in
std
pop
stos
mov
test
lret
jno
aaa
mov
cmp
lods
js
lret
fsubl
jne
mov
sbb
fld
mov
test
xor
cmpsl
enter
pop
or
sbb
add
or
add
stc
add
out
std
dec
push
push
push
addb
lcall
inc
stos
fimull
jge
dec
loope
mov
adc
ret
push
mov
call
pop
and
fmuls
dec
pop
xor
push
pop
std
fcomps
out
mov
mov
out
dec
fimull
mov
mov
scas
or
pop
jle
ret
jnp
cli
call
dec
add
dec
and
ss
jno
xchg
int3
ja
outsb
fsub
xor
cli
or
xor
scas
clc
mov
cmp
xor
push
sub
bound
xlat
fstps
addl
and
cmp
pop
fidivrs
out
lcall
jbe
lcall
xchg
arpl
and
fwait
lret
jo
ljmp
test
jbe
aaa
mov
scas
loop
aas
insb
mov
into
mov
pop
lods
out
in
sub
stc
mov
sub
sub
pop
cmp
out
xchg
jecxz
fwait
imul
cbtw
jbe
xchg
pushf
leave
rcll
mov
nop
add
sarb
xchg
cmp
lret
mov
loop
enter
or
sbb
enter
xor
pop
push
scas
and
xchg
in
inc
movsb
mov
sbb
dec
popa
enter
fsub
aas
hlt
shrb
scas
lcall
xor
mov
add
sub
in
ds
or
push
outsb
sbb
scas
fistps
sbb
lahf
push
xchg
push
inc
xor
inc
test
mov
test
pop
pop
dec
push
mull
xlat
into
leave
lock
inc
jno
push
pop
dec
outsb
xor
jne
push
sub
test
sub
pop
scas
out
outsb
mov
dec
cmp
addr16
or
ljmp
and
sahf
gs
and
aas
aas
dec
int
jg
or
cli
push
leave
lahf
stos
aas
mov
push
rol
inc
gs
clc
stc
out
jnp
test
ja
mov
jge
sub
xor
sbb
mov
out
mov
lds
movsb
shll
cmp
scas
push
ljmp
xor
sahf
lods
neg
and
pushf
cld
stos
mov
test
lret
pushf
nop
ja
dec
scas
dec
test
aad
outsb
test
nop
push
lods
lods
pop
ss
out
xor
loope
xchg
mov
cmp
push
test
fdiv
jmp
repz
lahf
cli
lret
and
ret
adc
clc
sahf
addb
xchg
push
push
out
pushf
cld
or
pop
jb
lds
loopne
std
aas
clc
cs
push
std
std
je
xlat
sbb
shrb
cltd
lds
into
aad
pushf
je
dec
add
fidivrs
repz
inc
stos
dec
mov
push
xchg
xchg
cmpb
and
sbb
ljmp
jno
mov
jmp
add
rorl
je
jnp
fstpt
or
mov
push
add
fstps
push
or
sti
in
push
or
pop
mov
sarb
add
xor
pop
fnstenv
and
mov
pusha
mov
adc
aaa
scas
js
call
sub
pop
inc
movsb
popa
fmul
fchs
xor
add
mov
xor
sub
dec
cmp
mov
lods
sbb
push
mov
stos
sub
inc
popa
orl
mov
mov
or
jl
mov
inc
lock
insb
in
cmp
inc
inc
adc
outsl
xlat
xor
and
and
movsb
push
mov
mov
inc
ret
add
or
mov
inc
or
inc
cmp
pop
test
mov
jg
cmp
or
xchg
xor
xor
ret
into
jge
xchg
faddl
ret
xchg
popf
daa
mov
ss
sti
mov
shll
adc
cmovnp
mov
imulb
inc
stos
mov
ret
pop
mov
int3
mov
pop
push
push
hlt
mov
fnsave
out
dec
iret
aas
pop
pop
dec
mov
inc
push
repnz
xchg
mov
test
mov
pop
test
popf
add
cli
adc
or
inc
out
scas
stc
scas
push
mov
mov
cwtl
insb
mov
outsb
push
ja
sbb
fdivr
inc
outsl
sub
popa
mov
sub
lcall
inc
loopne
inc
add
jb
push
fidivs
adc
xchg
jnp
lods
fildl
dec
lods
cmp
outsl
aaa
xor
jns
test
movsb
scas
pop
or
dec
push
int3
gs
and
jns
sbb
cmp
push
mov
insb
rcrb
stos
xchg
ja
repz
dec
mov
add
cmpsl
add
add
or
push
pop
stos
inc
andb
lock
jo
addr16
mov
cld
push
mov
aad
adcl
clc
cli
or
mov
insb
cs
test
and
xor
dec
cwtl
sbb
addr16
mov
popa
pop
cmc
dec
or
xchg
loope
mov
movsl
sbb
inc
cli
xor
out
mov
xor
movsb
repz
mov
sub
sbb
push
or
xor
mov
stc
pop
shll
inc
jnp
mov
jnp
addr16
sub
mov
xchg
mov
or
mov
cmpsb
shlb
mov
insl
fcmovnu
scas
insl
pop
aad
ljmp
loope
shrb
lea
push
dec
call
outsl
ja
hlt
andl
mov
stos
sti
mov
jl
and
subb
xor
stc
sbb
es
inc
jne
scas
lret
or
fs
out
ficomps
xchg
xor
cmp
mov
mov
stos
and
fs
mov
dec
mov
sarl
inc
xor
mov
cltd
das
mov
cmp
ret
jbe
add
jno
sarb
xchg
sbb
out
test
mov
popa
mov
lcall
fbld
mov
jbe
loope
sub
inc
cmp
or
pop
cli
mov
in
dec
leave
mov
add
mov
rolb
addr16
cmp
and
lahf
add
mov
xchg
lret
push
and
out
lret
or
adc
push
pop
lods
mov
and
add
add
jp
dec
inc
cmp
jbe
pop
aad
jo
jne
adc
inc
insl
gs
pop
inc
orb
sbb
imul
lcall
xor
xchg
dec
gs
insl
jp
sub
mov
pop
in
push
inc
clc
cmp
cmp
mov
jno
std
pop
or
jmp
loopne
pusha
cs
cmpsl
jbe
out
xor
mov
mov
sub
lds
cmc
sub
push
mov
push
pop
cmp
sti
test
pushf
sbb
popa
pop
mov
push
popa
adc
loop
cmp
cmpsl
jne
cmc
mov
out
xchg
xor
or
add
mov
movl
or
jo
xchg
dec
clc
cmp
adc
dec
push
test
pop
cmp
cmp
daa
mov
jne
ds
in
jmp
int3
enter
cmc
jecxz
jns
inc
int3
stc
cltd
mov
add
dec
shl
ljmp
dec
jp
mov
adc
xor
jo
loopne
int
aam
rorb
mov
dec
jge
test
mov
add
fimuls
pop
daa
sbb
inc
mov
jp
push
hlt
fs
pop
lock
push
jmp
cmp
inc
xchg
mov
cltd
and
outsb
cmp
inc
fwait
inc
outsl
xchg
int3
fs
mov
add
add
pop
push
rorl
jno
mov
mov
cmp
call
mov
mov
das
and
add
data16
fistpll
test
and
repnz
push
or
shl
xor
pop
add
sbb
std
xor
fiaddl
mov
lcall
shll
xor
jno,pn
or
and
scas
xor
jmp
jno
dec
sahf
pop
adc
add
push
mov
xchg
push
dec
or
pop
mov
mov
rcrl
and
shrl
out
in
out
jo
sbb
cmp
out
insb
sbb
inc
mov
jg
popa
pop
sahf
pop
loop
adc
fidivrl
inc
test
sti
pop
lods
dec
shrl
cmc
out
xchg
jb
jecxz
cltd
cmp
sbb
fcoml
push
das
mov
fidivl
push
mov
inc
adc
call
icebp
and
push
push
sbb
xor
xor
add
mov
lea
jb
mov
cli
pushf
addr16
mov
push
dec
test
push
mov
scas
mov
lock
movsb
adc
sti
lret
bound
xor
mov
xor
mov
fsubrs
addb
pop
fcomp
clc
popf
fld
or
mov
insl
outsl
stos
dec
fbld
push
and
add
pusha
add
mov
aas
stos
out
mov
loope
stos
sub
loopne
push
fnstcw
jg
lods
jno
push
fstps
fwait
lods
jle
clc
mov
mov
loop
add
loope
ffreep
inc
sub
push
jge
and
xchg
jp
loopne
nop
push
mov
out
inc
loop
jne
shll
mov
sbb
add
clc
testl
or
aam
rol
addr16
lods
sub
shll
cmp
or
scas
in
xchg
cmc
xchg
insl
fwait
add
sbb
gs
mov
gs
out
push
test
jp
ret
addb
je
inc
cmpsl
decl
ror
jmp
hlt
in
mov
cmc
jnp
pop
mov
into
test
sahf
pushf
pushf
cmpsl
jno
mov
push
mov
and
sub
push
or
pop
mov
shl
lret
jno
pop
cmpsl
rorb
cmpl
jl
int3
clc
push
mov
xor
sbb
xchg
cmp
xchg
insb
jnp
in
sbb
inc
mov
es
push
sub
test
inc
sarl
das
jb
xlat
fsubs
mov
lods
lods
and
mov
mov
inc
std
sub
sarb
adc
stos
xchg
sahf
ljmp
jns
enter
iret
popf
stos
in
loope
and
mov
mov
pop
cmpb
lcall
divb
insl
cmp
adc
push
jae
test
iret
adc
mov
sbb
dec
dec
sub
int
jae
int
xor
shl
or
test
adc
sahf
adc
stos
xchg
lods
rorb
jmp
leave
lods
jb
adc
add
and
add
or
jl
xchg
ja
clc
jmp
sbb
mov
xlat
mov
mov
mov
outsl
das
xor
xchg
pop
popa
fildl
xor
xchg
or
rclb
insl
ds
mov
fcomip
and
push
rcrb
xchg
jne
out
xchg
js
add
nop
out
cld
insl
aam
mov
push
sub
inc
ljmp
dec
dec
in
fs
aas
movnti
cltd
imul
dec
pop
mov
rclb
fcomps
or
jg
insb
mov
outsl
daa
out
mov
sub
lods
repnz
int3
jnp
xor
pop
and
jg
lock
test
push
add
jmp
inc
mov
lahf
frstpm(287
test
pop
movsb
xlat
sub
lock
imulb
adc
jle
icebp
call
and
es
sbbb
mov
pop
inc
push
inc
fdivl
xlat
stc
cmpl
add
js
pop
pushf
cs
sub
or
inc
xor
je
mov
in
dec
sbb
pushf
fcoms
imul
je
jp
popa
xchg
or
icebp
jae
pop
cs
fisubrs
cmpsl
lcall
imul
decb
outsl
orb
mov
xor
push
ret
fidivrs
pop
push
sub
outsb
cwtl
iret
mov
dec
lret
mov
lea
dec
push
in
scas
jae
or
test
xor
pop
pusha
out
fsubs
test
or
fs
dec
xor
in
sbb
cmp
jl
cmp
xorb
in
xchg
gs
mov
repz
push
stos
push
andl
push
daa
test
iret
into
rorb
push
adcl
aam
test
inc
popf
ret
ret
sbb
imul
negl
lods
push
push
jmp
sub
daa
xor
add
push
lahf
pop
pop
xchg
add
mov
fwait
js
pop
pushf
inc
mov
sbbl
cmp
inc
pop
push
add
insb
jno
inc
pop
fimull
xor
mov
xchg
sbb
mov
sub
popf
jb
or
lds
push
sub
pop
outsb
jbe
dec
jecxz
mov
stos
sub
adc
push
aad
sub
in
sarb
jl
lcall
pop
aad
push
mov
xor
fdivs
dec
stc
ret
lods
push
jp
and
in
jo
lea
adc
lcall
sti
clc
unpckhps
sbb
int3
mov
ja
cli
in
popf
xchg
dec
enter
push
inc
sub
push
ret
mov
fstpt
dec
les
lds
mov
jle
test
mov
or
xor
mov
or
outsl
iret
insl
jne
jnp
arpl
daa
mov
push
inc
repz
inc
push
push
stos
xlat
cmpsl
sub
lret
lret
jge
gs
testl
add
mov
or
pop
pop
mov
inc
mov
push
mov
cmpsb
or
xchg
cmp
xchg
mov
ljmp
shlb
shrb
lahf
pop
rcrb
jnp
popf
sbb
mov
push
cli
inc
adc
xor
jb
divb
movsb
lahf
adc
and
dec
jo
lahf
roll
dec
push
sub
lea
in
fbstp
push
nop
lock
sarb
push
inc
mov
aad
call
jb
pop
dec
push
aaa
mov
push
dec
inc
leave
orl
add
or
dec
fdecstp
lret
sub
jne
scas
dec
mov
xor
shlb
lahf
stos
lock
scas
xchg
xor
push
cs
dec
test
xchg
pushl
jae
aas
mov
inc
push
cli
cmp
adc
repnz
jge
push
jbe
or
outsb
movntps
inc
add
cmp
adc
in
aam
jne
inc
out
rcrb
adc
adcb
cwtl
pop
inc
adc
lods
lret
jae
inc
xchg
add
hlt
adc
push
out
nop
fisttpl
cmp
lods
inc
inc
dec
aad
fdivs
ljmp
xor
mov
xor
add
rolb
jns
mov
xchg
cmpsb
insl
jb
add
adc
insl
sub
and
addl
aas
loopne
dec
xor
xchg
jmp
cmpsb
xor
ret
lods
idivl
aas
jmp
and
fnsetpm(287
stc
jg
sti
push
ret
loop
aaa
stos
lcall
or
adc
inc
cli
push
fildll
movsb
bound
leave
icebp
cmp
ret
cmp
push
rorl
jge
aad
lret
punpckldq
xor
inc
sub
inc
cmpsb
and
cmp
cltd
lret
fsubrs
in
cmp
shlb
push
addl
cmp
xor
lcall
iret
push
jl
cwtl
movsl
sarb
cmp
aas
adc
add
lcall
mov
sbb
stos
xor
inc
sub
mov
cld
xchg
add
adc
in
rcrl
mov
inc
dec
jle
pop
mov
xchg
aad
dec
sahf
daa
adc
xchg
fdivl
inc
mov
stos
out
les
repnz
fidivl
sub
dec
int
fisttps
roll
cwtl
ret
sar
sbb
or
fsin
mov
jl
push
inc
sub
movsl
rolb
fs
cs
jg
imul
insl
adc
push
pop
adc
faddl
push
and
sbb
inc
outsl
jl
aaa
stos
jb
inc
or
repnz
outsb
dec
cmp
sub
adc
sahf
mov
das
push
cmpb
fs
mov
jecxz
push
cmpsb
repnz
mov
clc
push
jg
inc
das
mov
cwtl
ss
mov
jge
push
xchg
xor
insb
sub
dec
jmp
inc
mov
mov
mov
cmpb
mov
mov
xchg
xchg
xchg
sub
mov
andl
pop
xorb
pop
mov
xlat
mov
push
mov
imul
dec
daa
mov
fs
leave
orb
lret
imul
pop
movsb
xor
mov
lcall
cmc
dec
jns
je
pop
push
pop
imul
sub
sbb
xchg
ja
hlt
add
movsb
stos
push
or
push
inc
mov
cltd
out
sub
inc
movsb
mov
es
xchg
cwtl
add
cmpsl
leave
push
stos
lods
hlt
jb
pop
in
int3
mov
xchg
mov
mov
xchg
adcb
aaa
jo
dec
mov
int3
popa
push
stos
jns
shlb
in
out
mov
enter
imul
adc
mov
mov
or
bound
cmpsb
jae
sbb
in
push
inc
imul
test
sbbb
push
pop
inc
into
push
scas
int
roll
sub
mov
adc
cli
int
inc
shl
inc
imul
lahf
push
into
cmp
cltd
mov
mov
pop
push
out
int3
xchg
and
out
mov
lods
push
and
jae
movsb
push
cmp
adc
mov
cmp
jbe
scas
mov
scas
mov
imul
adc
cwtl
xchg
notb
out
cmp
dec
xor
sub
and
aaa
mov
add
add
insb
or
les
pushf
and
dec
fdivrs
jmp
inc
mov
adc
lock
xor
aaa
lcall
cmp
sub
jge
sub
xor
movsl
and
sub
jp
dec
popf
or
shrb
es
cld
loopne
mov
xchg
iret
dec
daa
xchg
test
js
pushf
daa
and
fldenv
xor
cli
add
movsb
out
push
inc
seta
mov
sbb
and
popf
test
mov
sahf
add
pop
pusha
ljmp
inc
lods
cmp
mov
jb
bound
paddq
pop
and
dec
mov
movl
jle
ljmp
and
sbb
mov
xchg
js
push
rcr
cmpsb
push
in
jge
jl
mov
lcall
cmp
mov
cmc
cli
lret
rcl
cwtl
inc
cltd
ss
lret
cwtl
inc
mov
mov
or
adc
jae
push
push
shlb
test
jae
movsl
int3
cli
pop
daa
jae
xchg
xchg
repz
cmp
push
add
cmp
pop
testl
jl
in
cltd
adc
or
adc
mov
lret
cmc
clc
cmp
pop
stos
pop
fldcw
in
lds
int3
lret
push
mov
shrl
or
fnstsw
lds
stos
inc
sub
push
gs
push
or
push
push
pop
rol
jmp
jo
pop
and
repnz
mov
and
jmp
iret
daa
in
jle
cmp
pop
into
or
add
sbb
cmp
sbb
ret
je
lss
aaa
jno
cmpsl
push
shlb
data16
jno
jb
adc
je
ljmp
ja
aam
mov
icebp
push
inc
add
pusha
jae
unpckhps
enter
mov
or
test
pop
jmp
and
cmc
out
sti
push
pop
xchg
inc
jno
mov
in
mov
add
out
js
pusha
imul
sub
rcrl
cmpsl
xchg
leave
test
jnp
dec
and
std
xchg
ds
or
xchg
dec
xor
mov
cwtl
rcll
jo
movsb
aas
je
popf
or
mov
imul
push
pop
dec
xchg
adc
cmpl
iret
mov
pop
cltd
cmpsb
xchg
shlb
and
adc
pusha
fisubl
stos
nop
out
fdivr
push
lea
or
pop
ds
pop
mov
or
and
cwtl
cli
push
mov
loopne
cmc
imul
xor
pop
jo
pop
adc
mov
loope
ds
aaa
pushf
xor
push
stos
jae
hlt
cmp
mov
notb
test
push
stos
xlat
or
das
stc
outsb
loopne
test
dec
aas
daa
cmp
fcomps
lahf
mov
or
xchg
addr16
aad
cmp
fstl
push
paddusb
cmp
push
sbb
rcll
notl
lock
out
int3
jbe
jmp
aam
dec
stos
xchg
or
pop
dec
shl
clc
pop
lcall
arpl
jle
mov
xchg
dec
pop
push
test
or
push
jmp
and
xor
cmp
and
aaa
jg
xorb
jmp
lsl
stc
push
pop
mov
loop
notb
or
test
adc
or
mov
adc
negb
add
out
rcl
fcompl
push
sar
popa
movsl
pop
jb
cwtl
adc
imul
pop
cli
sahf
add
adc
mov
or
jb
in
xchg
mov
push
dec
adc
cwtl
repz
daa
jno
jae
cmp
pop
sahf
popf
in
cmc
or
outsl
xor
call
nop
cmp
or
das
rorb
fwait
push
xor
add
daa
loopne
pop
sub
ss
loope
xchg
xchg
aad
inc
dec
xchg
hlt
icebp
mov
or
movsl
imul
fidivrs
lods
mov
mov
scas
xchg
into
mov
pop
add
xor
enter
or
and
sub
ljmp
jns
cs
aaa
int
pop
lds
mov
lods
inc
rcll
dec
fnstenv
mov
out
aas
mov
stos
dec
pop
mov
test
and
ret
fists
jmp
cs
stos
mov
fs
mov
scas
mov
mov
stos
mov
ret
and
ret
shll
out
js
outsl
daa
int
dec
lds
and
cmp
dec
xor
xor
xlat
cmpsb
xchg
fs
arpl
cwtl
and
pop
in
mov
xor
pusha
jo
fwait
dec
das
push
jge
jns
adc
cmpsb
data16
mov
nop
sahf
fs
mov
bound
xchg
sbb
shr
add
bound
inc
xchg
push
sbb
leave
ljmp
xchg
push
popf
cmp
lahf
movsl
add
sub
mov
ljmp
lods
scas
vpcmpgtd
je
arpl
outsl
ret
and
lret
and
mov
mov
test
pushf
xchg
add
add
scas
xor
pop
adc
jo
es
ret
negl
outsl
mov
leave
arpl
xor
or
push
jo
leave
jnp
clc
movsb
mov
int3
push
call
or
mov
xchg
pop
pop
inc
shl
push
xchg
pop
scas
in
cmpsb
jae
jae
and
aad
jmp
fcmovnu
insl
lret
xchg
fidivrs
test
sahf
pushf
outsl
push
adc
pop
mov
insl
cmp
ja
mov
repnz
loope
fs
dec
fcmovu
xor
insb
lret
xchg
outsb
cmp
xchg
or
mov
mov
jne
sub
add
fldt
mov
add
jge
ja
out
sbb
test
mov
in
pop
loop
jecxz
pop
ss
jmp
aaa
sbb
out
mov
sbb
dec
pop
out
or
mov
lods
stos
or
or
mov
pop
lahf
aam
cld
in
dec
clc
pushf
cmpl
cmp
pop
int3
enter
sub
mov
add
sub
adc
mov
adc
xchg
mov
je
test
repz
sub
in
loop
loopne
mov
mov
jl
fxch
adc
mov
xor
xchg
inc
fsub
loopne
dec
ret
ljmp
test
in
sbb
aad
test
daa
ret
mov
inc
push
aad
push
shlb
stc
jns
push
je
mov
rorl
lock
inc
pop
scas
iret
leave
mov
xchg
inc
pop
stos
and
adc
movsl
repnz
adc
js
mov
jecxz
in
int
jecxz
int
jbe
daa
addr16
daa
aam
cld
mov
adc
test
btr
ret
adc
ljmp
stc
pop
imul
out
out
jno
in
sbb
pop
mov
cwtl
dec
rcll
push
mov
push
mov
mov
or
imul
jp
mov
lock
bnd
jle
xchg
xchg
dec
aad
or
rorl
sbb
xchg
jae
test
sbb
sbb
jnp
shl
pop
sub
inc
nop
jne
or
cmp
mov
xchg
cwtl
push
lret
jae
mov
mov
xorb
mov
das
stos
ljmp
and
pop
or
xor
mov
pop
cmp
cmpl
mov
and
clc
mov
xchg
fadd
les
xchg
pop
inc
prefetcht2
mov
lcall
mov
dec
sub
mov
mov
pop
or
or
dec
outsl
inc
cmc
jmp
aaa
pusha
lods
inc
adc
les
mov
out
pop
add
js
mov
fidivrs
jno
jb
ret
push
jl
insb
insl
das
mov
stc
mov
test
jmp
loop
sbb
es
jg
gs
or
sbb
cmpsl
pushf
mov
stos
ds
movsl
lea
cmpxchg
add
rorb
jp
sbb
or
je
and
xor
jmp
lcall
daa
fsubp
lods
or
push
pusha
movsb
inc
dec
nop
dec
dec
pusha
in
mov
loop
rcrl
enter
lret
aas
frstor
xchg
inc
cmc
adc
push
pop
lret
std
inc
mov
ss
std
into
dec
jp
mov
gs
insb
mov
pusha
sub
adc
adc
inc
cmp
mov
or
jb
mov
pop
jno
xor
xchg
cli
sti
cmp
call
mov
ror
mov
stc
xchg
mov
sub
push
loop
jb
daa
sbb
jbe
shll
jno
clc
push
dec
popa
push
outsl
insl
xchg
mov
xchg
gs
sarl
jge
push
add
mov
gs
fstpt
mov
dec
adc
lahf
repnz
cmc
jae
je
in
call
enter
adc
add
and
pop
add
jnp
mov
add
mov
lahf
cmc
cmc
js
inc
jge
andb
imul
test
jno
dec
mov
ds
dec
sbb
sub
in
jmp
inc
cwtd
cli
in
jo
rolb
add
lret
jp
icebp
popa
lcall
dec
and
in
int3
subl
mov
xchg
xchg
push
push
int
xor
xor
jmp
ja
dec
test
nop
cmp
sbb
push
stos
hlt
cmp
push
xchg
orl
cmp
test
in
test
jbe
and
push
sbb
test
xchg
mov
inc
js
push
dec
sub
mov
jl
nop
fmull
cld
mov
xor
jno
mov
xor
fs
mov
and
dec
clc
cmpsl
rcll
insb
js
imul
xchg
mov
sbb
cli
add
shll
sarb
mov
mov
or
dec
rcrb
ror
arpl
mov
mov
cs
shlb
sbb
cwtl
xor
pop
mov
adc
xlat
sbbb
push
dec
loop
bnd
mov
mov
inc
frndint
sbb
xlat
dec
xchg
and
mov
sahf
add
push
push
loop
xchg
sbb
sbb
or
cmpsb
into
jecxz
cmp
add
jno
mov
lahf
inc
shll
in
mov
xor
gs
arpl
cmc
sub
mov
sbb
mov
leave
sbb
pushf
stc
movsl
out
xor
add
ljmp
mov
mov
mov
dec
sbb
sarb
mov
mov
jge
lcall
xchg
out
loope
push
cmp
pop
lds
test
cmpb
pop
jg
push
adc
sti
add
push
mov
and
fbstp
push
pop
jmp
ret
add
jmp
or
in
cli
andb
arpl
push
cmc
out
and
lahf
pop
adc
xlat
lock
rol
sbb
mov
cmp
push
imul
pop
pusha
bound
movsl
xor
nop
test
or
cld
lret
xchg
and
mov
dec
and
js
mov
std
hlt
imul
imul
fucomp
out
popa
das
mov
cmp
inc
adc
or
scas
and
push
lods
xchg
stos
test
in
jg
push
leave
scas
ret
out
pop
call
dec
mov
aam
push
fisttps
sbbb
stos
sub
loop
xchg
xchg
inc
jns
aaa
mov
fisttps
dec
jp
mov
xchg
mov
dec
add
cmp
pushf
loopne
sub
pop
inc
and
xchg
adcb
xlat
inc
aas
out
divl
outsb
icebp
fnstsw
jp
call
outsb
pop
in
ficoms
add
loop
sbb
je
push
mov
ret
loop
mov
dec
cmp
push
int3
cs
jbe
pusha
mov
adc
sbb
addb
std
addr16
insl
mov
push
adc
jne
clc
push
dec
cmp
jg
cmp
mov
lret
mov
push
fwait
call
add
shrl
jo
in
jge
lcall
out
popa
mov
pop
lcall
adc
insb
mov
lahf
lock
adcl
sti
xchg
lods
das
mov
leave
mov
xorb
cmp
ret
jo
mov
mov
test
scas
arpl
adc
push
xlat
fucomp
mov
xchg
or
fwait
sbb
pop
push
mov
jl
scas
sub
dec
je
das
cmp
iret
lcall
in
jo
std
ret
jmp
popa
out
push
loop
and
pop
dec
and
scas
fnstsw
pop
arpl
mov
dec
cmp
jne
loop
jno
mov
sub
pop
add
sar
add
shll
movb
adc
cmp
outsl
or
push
movsl
aaa
js
jns
loopne
cmp
jp
gs
dec
sbb
movsl
inc
insb
sbb
not
out
out
fcmovnb
xor
popf
or
js
inc
sub
xorl
cld
pop
outsl
test
clc
lret
mov
rolb
cmp
jne
push
fldcw
pusha
pop
jb
sbb
dec
cld
sub
shll
xchg
imul
sarb
sbb
sub
jl
inc
add
imul
mov
xorl
lret
xor
adc
cltd
push
xor
sub
imul
in
adc
fidivs
add
repz
sbb
dec
mov
jno
mov
xor
into
mov
pop
rol
inc
sarl
fs
xchg
in
adcl
lds
sub
inc
dec
inc
xor
rclb
lcall
push
sub
arpl
incl
adc
data16
popf
inc
les
addr16
aad
bound
xor
lea
into
out
add
add
lcall
add
jns
dec
pop
cmp
addl
pop
add
push
insl
pop
dec
mov
dec
fidivrl
cltd
fnsave
add
push
xchg
scas
popa
inc
mov
mov
outsl
xchg
or
loopne
daa
lahf
orb
mov
fstl
pop
lods
xor
xchg
es
fld
pop
xchg
std
add
data16
or
add
add
icebp
lods
inc
data16
dec
inc
mov
pop
or
mov
xchg
xchg
shll
jmp
hlt
or
aas
pop
xor
sub
dec
pop
mov
cs
pop
andl
hlt
lea
iret
ret
sahf
daa
das
jns
mov
inc
mov
xor
jb
lods
fdivrl
xlat
hlt
test
test
xchg
xlat
les
and
repz
pop
xchg
cmp
push
repnz
arpl
icebp
inc
push
ljmp
shll
stc
loope
rclb
mov
ret
dec
outsb
adc
mov
sti
xor
mov
js
xchg
ret
and
loopne
mov
and
outsl
mov
test
std
fs
addr16
test
cmp
scas
push
dec
or
mov
adc
daa
push
xchg
fsubl
sub
or
adc
push
int
sbb
inc
aad
jge
mov
dec
jb
push
jmp
xchg
ss
in
push
data16
push
pop
stos
xchg
jbe
shll
int3
push
out
popa
xchg
push
test
pushf
dec
or
cmpb
ret
cmc
adc
fwait
mov
sub
movsl
insl
lea
mov
fsub
push
aad
ds
stc
lods
mov
and
mov
jne
dec
dec
push
jle
imul
and
jnp
push
dec
sbb
or
cmp
mov
mov
loope
pop
clc
xor
jnp
mov
inc
xlat
sbb
jle
addr16
js
or
push
leave
testb
scas
and
mov
add
insl
fwait
cmp
inc
cmpsb
inc
xor
faddl
inc
lods
mov
sub
mov
ret
xchg
and
ja
xlat
pushf
aas
f2xm1
das
testl
in
movsl
mov
insl
xor
xchg
pop
push
xlat
pop
jp
xchg
jge
and
testl
cmp
and
mov
cmp
add
cmpsl
push
cmp
jecxz
push
push
inc
scas
dec
push
sti
and
insb
imul
xchg
or
cmp
sbb
adc
mov
mov
push
sahf
leave
sahf
loopne
and
push
mov
push
fcmovnbe
add
cli
fildl
imul
sbb
push
inc
shrb
subl
pop
aam
bound
into
mov
mov
adc
hlt
sub
add
mov
sbbl
std
cmp
cmpsb
inc
int3
xchg
test
std
xchg
xchg
xor
mov
jne
pusha
int
pop
stos
inc
mov
push
jecxz
push
outsb
dec
das
das
data16
loope
cmc
sub
inc
mov
int
pushf
xor
mov
and
bound
mov
mov
filds
repz
xchg
xchg
sub
jne
in
mov
subl
push
ret
repnz
pop
pusha
push
mov
mov
imul
popf
pusha
cmp
adc
cld
loopne
adc
xor
out
test
inc
mov
repnz
or
pop
lds
pop
jl
xchg
inc
mov
das
mov
dec
aam
inc
mov
aad
sbbl
inc
clc
mov
loope
insl
sbb
pop
int
push
push
mov
add
cmp
dec
jecxz
negb
dec
sti
addl
push
scas
xor
xlat
jae
bound
sub
aas
lahf
pop
mov
add
popa
repnz
out
sub
dec
xlat
out
ret
push
pop
sbb
mov
enter
or
idivl
sub
lds
sbbb
repnz
sahf
data16
inc
sub
fucomp
mov
dec
add
lret
dec
je
pop
xor
cwtl
xchg
ss
es
adc
jb
adc
mov
call
push
jle
push
lahf
out
push
je
lahf
adc
add
rorb
dec
push
aam
push
sub
shlb
and
jno
inc
out
fldenv
xchg
lcall
xor
add
add
pop
data16
mov
adc
lods
or
scas
andl
mov
mov
shll
fwait
call
notl
push
movsl
popa
rol
cwtl
jmp
lock
lds
lods
insl
mov
push
mov
jecxz
cmp
jno
cltd
cmp
dec
dec
ja
popa
sbb
mov
mov
inc
mov
sub
mov
int3
fists
pop
mov
arpl
je
xchg
cmpsb
enter
push
mov
sub
xchg
mov
sub
pushf
movsb
iret
inc
pushf
sbb
cmp
shll
mov
shr
inc
sub
loop
std
adc
jns
sbb
jmp
sti
sub
sub
jns
dec
jne
insl
mov
inc
mov
xlat
mov
add
or
out
je
xchg
jnp
addr16
xor
sub
out
adc
mov
jno
stos
mov
cmp
adc
cwtl
cmp
sti
pop
cmpsb
xchg
xchg
inc
fs
test
jp
out
jns
jbe
xchg
dec
int3
adc
xchg
xor
cs
cwtl
fcomps
mov
inc
sub
call
dec
inc
mov
cmp
adc
jne
cld
das
jae
test
aad
cmp
push
pusha
mov
and
arpl
push
jmp
jns
inc
xor
jnp
mov
or
testb
mov
pop
ljmp
int
add
shll
arpl
shlb
addps
add
jmp
fnstenv
sahf
xor
fldcw
jb
cmp
dec
cli
cltd
mov
xchg
jmp
push
xchg
xor
pop
push
pop
sub
mulb
scas
lods
loop
pop
loope
pop
adc
ljmp
dec
mov
lods
popa
xor
xchg
jne
ss
icebp
sbb
dec
stos
testl
test
stc
in
adc
lea
stos
adcb
pop
and
mov
push
pop
pop
je
and
push
jnp
inc
mov
mov
out
cli
mov
inc
repz
cmp
out
or
push
xor
out
stos
mov
xor
pop
ret
sub
outsl
xchg
pop
pop
mov
cmp
inc
jle
push
iret
fnstsw
fnstsw
ljmp
orb
mov
inc
push
jo
cmp
fists
sub
jmp
stos
pop
enter
or
cli
push
out
sbb
xchg
push
jo
inc
push
ja
jne
test
and
sub
int3
es
test
mov
add
iret
lcall
cmp
mov
lea
icebp
adc
andb
inc
mov
pop
xor
jb
fstps
pushf
jne
lret
xchg
pop
push
sbb
adc
fadds
xor
jle
sti
test
rcrb
jne
fcoml
pop
jmp
sub
in
aaa
sti
lock
jg
xchg
inc
mov
aam
shll
xlat
das
adc
mov
leave
ret
xor
mov
add
and
xlat
ret
insl
notl
cld
incb
and
mov
jno
xchg
call
imul
shr
sbb
fnsetpm(287
pop
nop
popa
out
stc
adc
sbb
jecxz
mov
iret
lret
pop
orb
into
imul
push
pop
je
jmp
mov
or
shll
test
jno
push
push
cmpsl
testl
inc
or
pop
outsl
dec
lds
jne
jl
aam
push
pop
ds
lcall
stc
jp
and
movsb
pop
or
mov
push
shr
roll
hlt
sub
sti
jmp
and
adc
cmp
push
xor
pop
pop
rorl
mov
xor
cmp
xor
pop
clc
call
rcrl
lods
arpl
cmpsb
pop
cmp
into
stc
imul
in
insb
and
inc
pushf
xchg
cmp
cmc
sbb
dec
ja
movsb
mov
ja
inc
sbb
and
loop
dec
ret
and
mov
dec
iret
jns
decl
push
xor
push
cmpsb
gs
iret
xchg
fxch
adc
stos
iret
or
dec
push
lcall
pushf
popf
xchg
and
dec
or
dec
pusha
xor
popa
in
add
dec
cmp
jge
and
jl
add
inc
inc
mov
jmp
mov
mov
jo
inc
inc
push
lods
lds
pop
mov
or
xchg
pop
repz
cmp
daa
cmpsb
push
and
adc
mov
jge
subb
rcrb
jne
imul
inc
jbe
xor
cmp
pushl
pop
pop
xchg
pop
retw
adcb
imul
imul
jno
xor
or
inc
sub
lret
xchg
pop
lret
popa
xor
xchg
lret
mov
mov
out
and
pop
lret
sub
mov
cmpsb
or
inc
ficoms
stc
inc
es
adc
popa
gs
and
mov
mov
mov
push
sub
dec
sub
xchg
cld
xchg
jae
ljmp
mov
arpl
dec
pop
adc
icebp
mov
xor
shl
daa
pop
fdivs
adc
push
loop
repz
popf
mov
and
add
into
or
sub
mov
add
jbe
in
jbe
jno
pusha
popa
inc
inc
jne
xor
xchg
mov
sahf
je
cld
arpl
and
dec
dec
or
sbb
push
sbb
mov
cmp
mov
ja
into
add
inc
loope
mov
popa
push
outsb
mov
pop
iret
and
stos
adc
cs
inc
or
xor
pop
pop
xorb
scas
clc
popf
jge
scas
je
hlt
mov
sbb
sbb
add
pop
dec
in
fbstp
call
stos
cs
int3
enter
std
aaa
mov
sbb
or
jmp
xor
out
out
cmpsb
xchg
orl
sti
insb
lock
call
int
push
shl
inc
mov
shll
mov
and
sbb
jnp
adc
insb
sbb
ret
mov
xchg
dec
or
mov
add
cld
fcoms
outsl
pop
cltd
cld
addb
fdivrl
mov
jle
sub
and
mov
push
inc
sbb
cmp
pop
adc
sbb
jns
icebp
fiaddl
pop
xchg
out
push
es
test
and
cmp
jle
popa
fs
xchg
jb
jge
stc
nop
push
jo
pusha
cmp
xor
aas
xorb
aad
test
xchg
adcl
in
sbb
pop
call
fwait
inc
jns
ja
lcall
jo
out
xchg
mov
jl
shl
mov
mov
addl
daa
imul
adc
jle
cmp
mov
fstps
aad
sub
jo
add
adc
adc
pop
add
cmpsl
mov
das
add
sub
xchg
sub
cmp
mov
adc
push
jl
and
or
pop
xorl
or
mov
jle
lock
cwtl
arpl
jo
rorb
sbb
stos
iret
mov
add
push
stos
pop
cmpsb
sub
mov
add
jb
in
cwtl
push
push
loop
stos
mov
and
or
les
pop
fs
and
mov
pop
fbld
iret
xchg
or
ret
inc
mov
pop
mov
jb
xor
jl
push
jg
dec
or
clc
leave
mov
mov
lods
xor
ret
xorb
jbe
popf
mov
and
repz
fisubs
inc
cmpsb
sub
jecxz
insb
data16
jge
ljmp
jnp
loop
xor
mov
cltd
cmp
jge
decl
into
push
or
aas
jl
les
int
outsl
iret
decl
jl
xchg
fstl
sub
cmp
adc
push
push
xor
cli
iret
xchg
imul
enter
xchg
cwtl
push
mov
and
push
lret
jmp
and
dec
test
and
ficoml
cld
lret
aad
mov
mov
lds
test
mov
pop
fstl
and
adc
pop
mov
xor
popa
mov
jnp
jecxz
hlt
jno
lea
sbb
mov
cmpsl
inc
nop
pop
arpl
cmc
push
jno,pn
push
add
out
popf
in
in
fwait
sbb
adc
pushf
dec
push
xchg
or
aad
out
daa
stc
and
loopne
cld
or
loopne
loope
fucomp
dec
or
push
je
or
add
cs
jg
shl
es
or
pop
pop
xor
jecxz
xor
test
clc
stos
cmp
xlat
inc
mov
shll
adc
mov
push
stc
mov
mov
ja
stos
das
aas
nop
imul
xchg
pop
or
mov
jmp
clc
inc
in
pop
jo
mov
mov
cmpsb
and
cs
nop
enter
dec
pop
pop
in
gs
lret
es
pop
adc
jae
std
shlb
ret
mov
insl
faddl
dec
in
xor
push
mov
jmp
ret
lods
cmpsl
pop
aas
cltd
out
insb
inc
and
mov
dec
stc
gs
loop
fcmovu
dec
mov
fadds
sub
cmp
bound
fisubl
outsb
sbb
push
mov
shl
cmp
sbb
das
inc
in
sub
mov
flds
lds
mov
mov
test
pushf
adc
jne
test
std
mov
movsl
sbb
ds
pusha
movsb
xchg
sahf
cs
and
dec
sbb
ss
push
popa
outsl
mov
imul
push
jg
out
and
fincstp
ja
xchg
dec
fidivl
mov
les
mov
fsubrl
mov
inc
mov
ficomps
mov
enter
stc
test
jbe
xor
jp
mov
lret
js
and
scas
jb
jne
cmc
jo
mov
cltd
jnp
sahf
and
or
das
cli
adc
add
inc
add
ss
xor
je
jg
call
leave
sbb
push
cmp
jmp
ret
xchg
sbb
call
shrb
lahf
pop
bound
shlb
push
jle
inc
xchg
xor
stos
mov
mov
enter
cmp
je
jge
out
mov
nop
and
sahf
pop
test
xor
lea
push
cmp
lret
push
xor
pop
data16
jno
or
pop
test
popa
cmp
ret
dec
inc
cmp
push
hlt
mov
mov
inc
popf
aad
or
sti
mov
inc
lsl
lock
add
fdivl
sbb
ljmp
je
rsm
push
dec
imul
mov
in
popf
imul
inc
mov
xor
dec
mov
int3
shlb
ret
sbb
ss
jmp
add
pushf
lcall
mov
sbb
mov
loop
shll
or
pushf
push
insl
pop
or
nop
inc
movb
out
std
dec
and
test
mov
cltd
cmp
lock
mov
aaa
jge
mov
mov
aas
sub
mov
dec
stos
push
xchg
sahf
test
or
jbe
xchg
aaa
testl
sbb
push
lds
int3
stc
sub
add
scas
xchg
mov
add
jmp
or
mov
and
adcl
add
mov
jb
es
and
iret
mov
sbb
mov
bound
hlt
sbb
pop
fsubrl
lods
push
stos
pusha
mov
dec
xchg
mov
cmp
movsl
bound
xorl
scas
inc
fdivs
loope
pop
jp
aad
hlt
mov
add
xchg
inc
pop
cmp
cmpb
sarb
lea
adc
fsub
popa
sbb
lcall
sub
loope
daa
jge
fnsave
push
nop
scas
mov
stc
xchg
dec
cmp
lock
and
push
cli
test
das
js
mov
push
add
and
rcll
pop
sbb
in
mov
les
jo
xchg
push
push
test
test
cmp
js
int
aaa
and
aam
in
sub
and
mov
adc
or
sub
faddl
insl
xchg
dec
pop
pushf
xor
inc
call
jno
or
mov
sub
idivb
lods
mov
fildl
shlb
dec
outsl
mov
sbbl
sti
fs
push
add
jns
test
ds
popf
jmp
adc
push
ret
popa
test
and
inc
cmp
add
mov
out
fisttpll
daa
jno
push
mov
dec
xchg
mov
gs
or
gs
lds
fsubrl
out
outsb
jnp
inc
cltd
adc
xchg
xchg
adc
mov
mov
mov
mov
insb
je
sahf
pop
cmp
loop
push
mov
bound
sbb
fimull
out
push
jno
mov
inc
push
aas
ja
add
jb
mov
adc
icebp
fidivrs
and
jg
fildll
dec
pop
daa
shrb
enter
ror
inc
jae
jae
sbb
mov
xor
sbb
and
ret
pop
sahf
fwait
xchg
mov
sbb
es
mov
xchg
mov
inc
xor
dec
jno
aas
ja
inc
and
cli
shl
test
mov
les
add
rclb
aas
dec
mov
hlt
sbbl
cmp
cmp
es
add
sbb
push
inc
sbb
pop
pop
sti
lcall
sti
jg
outsl
adc
mov
dec
jl
pop
add
mov
in
mov
fnstsw
into
jae
in
or
fsubs
sbb
test
sub
push
loop
rolb
daa
or
popa
test
ret
pushf
ret
sub
popf
adc
lcall
pop
xor
pusha
cmpsl
fwait
or
movsb
ss
adc
mov
add
pop
aaa
scas
inc
push
push
push
xchg
fistl
sub
shrb
lret
dec
loope
mov
mov
pop
lret
std
jmp
in
out
enter
jns
jo
pop
stos
jmp
xchg
jp,pn
shlb
enter
roll
sbb
jns
xor
add
xor
popf
leave
inc
mov
mov
adc
mov
push
mov
lods
dec
sbb
leave
icebp
and
add
xor
sub
jno
xchg
repnz
rorl
andl
repz
or
or
movsb
dec
popf
insl
ljmp
and
leave
lcall
leave
test
cmpl
and
push
ret
sub
mov
faddl
sbb
jb
mov
scas
xchg
imul
rorl
mov
sbb
pop
xchg
imul
icebp
lret
xor
adc
fidivl
das
pop
xor
insb
cmp
dec
mov
adc
out
pop
imul
mov
dec
cs
jmp
mov
out
loop
in
pop
mov
test
enter
add
sbb
sbb
mov
add
popf
out
mov
mov
dec
mov
pop
inc
jne
jae
inc
ds
sub
mov
mov
adc
pop
lds
push
js
xchg
lea
adc
mov
inc
ljmp
cld
test
imul
cli
fwait
insb
or
mov
cmp
push
sbb
test
ljmp
popa
dec
fs
out
inc
cwtl
and
gs
jecxz
ds
ror
imul
inc
inc
ja
fstl
loop
nop
push
sub
stos
shll
xchg
movb
iret
test
mov
pop
cmp
cmp
adc
mov
test
inc
outsl
je
movsb
adc
mov
pop
dec
into
push
adc
loope
xor
dec
mov
addl
bound
push
in
dec
scas
jmp
xor
lds
out
and
mov
fcomi
jo
loopne
cmp
jmp
xchg
mov
in
or
sub
lret
loop
inc
dec
stc
lock
sbb
xlat
enter
mov
xor
fists
out
mov
xchg
push
test
enter
ret
pop
push
movsb
push
dec
or
sbb
aaa
jno
xchg
insl
mov
adc
fs
ret
mov
jl
lock
scas
leave
jecxz
pop
push
jo
add
and
mov
lea
mov
bound
cwtl
xchg
xchg
aaa
push
aad
ds
mov
push
loopne,pt
cmp
push
fcoml
sbb
dec
loopne
cmp
or
scas
sub
dec
ret
xor
sbb
and
ja
lock
and
cltd
movsb
hlt
sti
xlat
pop
inc
in
aaa
test
imul
jnp
push
xor
cmp
int3
lret
inc
jns
pop
dec
add
outsl
cmpsb
pop
fisubs
xor
xor
pop
testb
push
adcl
cltd
les
jae
inc
in
jl
test
add
sub
shl
pop
jns
cmp
into
lcall
xor
or
ret
loopne
repz
push
pushf
or
pop
sbb
sbb
ficoml
adc
mov
pop
aad
cmp
sub
push
lods
scas
add
lods
movsb
and
fistpll
sub
jp
inc
ljmp
aam
nop
lds
pop
inc
dec
lds
mov
fists
movsl
test
pop
cld
hlt
lods
push
mov
sbb
sbb
inc
pop
pop
ss
ja
mov
jp
mov
test
nop
sbb
sti
fdivs
adc
jns
insl
mov
mov
in
jecxz
cmp
adc
test
and
leave
je
test
shll
adc
insl
stos
sbb
mov
xchg
subl
scas
jecxz
inc
xchg
add
push
xchg
sub
loope
adc
mov
mov
daa
into
xor
in
cwtl
loop
mov
pop
mov
dec
fisubl
lock
sbb
mov
add
sub
aaa
inc
ds
insl
add
sbb
hlt
repnz
leave
jecxz
je
sbb
xchg
add
loope
push
shrl
shl
mov
lds
mull
adc
std
je
pop
out
sub
push
cmp
lea
and
jns
mov
sti
xlat
das
enter
cltd
pop
adc
jo
adc
xchg
add
mov
arpl
scas
subb
pop
add
outsl
popl
or
cmp
xchg
div
or
dec
mov
pop
mov
mov
pop
leave
fdivl
sbb
inc
daa
and
inc
call
sub
jle
push
sahf
out
push
jle,pn
int3
sbb
or
cmpsl
mov
or
add
push
std
das
je
fcomps
push
ret
xchg
xchg
pop
push
cmc
sub
lds
and
xor
arpl
in
daa
test
outsl
addr16
arpl
pushf
in
push
jl
xchg
inc
decb
xor
jnp
jge,pn
xor
cmp
sub
cmpsl
sbb
fiadds
adc
aad
in
pop
adc
push
adc
sbb
mov
pop
hlt
das
test
jns
test
and
inc
or
xchg
mov
mov
mov
mov
jg
pushl
out
fidivrl
ljmp
imul
sub
xor
cltd
out
jmp
daa
xchg
sbb
aad
sub
sub
jp
pushf
daa
or
xchg
add
pop
repz
rcrl
iret
gs
int3
cmp
clc
ljmp
jo
add
loopne
xchg
sti
dec
dec
int
cwtl
push
scas
scas
add
cmpsl
call
popf
dec
repnz
test
imul
cs
pop
adc
cmpl
lea
and
addr16
es
or
stos
lahf
xor
movsb
jge
xor
lahf
mov
mov
int
mov
daa
pop
jne
push
dec
lcall
enter
mov
and
mov
mov
xchg
jo
mov
lods
test
sar
and
outsl
cltd
push
pop
xor
push
xor
pop
xchg
in
push
imul
inc
and
push
xchg
std
ja
les
mov
xchg
call
repnz
sbb
sbb
ljmp
call
lahf
shrb
movsb
adc
pop
loop
cmp
aaa
movsl
mov
mov
lret
push
lds
aaa
xchg
mov
hlt
out
adc
fnsave
sub
fistpl
in
adc
push
cmpsb
nop
popf
loope
out
push
cmpsb
cmpb
mov
int3
inc
sub
jp
dec
out
jno
imul
mov
xchg
add
push
hlt
add
push
xchg
add
cltd
nop
fwait
pop
push
pop
sub
mov
xor
pop
dec
fucom
adc
cltd
sbb
adc
hlt
imul
or
stos
daa
in
imul
mov
outsb
fbld
mov
pop
test
loopne
pop
pop
xor
ud0
scas
cmp
aam
mov
mov
pop
call
into
adc
mov
callw
ss
std
test
or
sbb
and
push
and
jl
outsl
xchg
xchg
fucomp
sti
fisubrl
mov
jge
mov
hlt
or
outsl
imul
out
jmp
xchg
sub
stos
or
aas
add
cld
push
pop
loop
gs
divb
cmp
xor
pop
testl
loop
sbb
hlt
fdivrp
pop
mov
xor
sbb
mov
insl
dec
mov
xchg
jl
xlat
push
pop
out
sahf
jecxz
aaa
adc
push
lods
mov
fidivs
xor
inc
andl
fidivrl
hlt
mov
insb
push
adc
push
jns
ss
jl
sahf
pop
outsb
cli
hlt
xor
hlt
sbb
popf
rorb
sub
je
jne
pusha
les
testl
xchg
add
stc
adc
pop
inc
and
leave
jnp
out
mov
jno
xchg
cmpsl
inc
sbb
mov
dec
xchg
push
subb
scas
adc
iret
sub
cmpsl
mull
add
out
stos
xor
jbe
push
pop
xor
out
stos
out
je
cmp
test
adc
mov
or
ficoms
xchg
lret
pop
cmp
icebp
adc
bound
fadd
fcompl
lods
add
sbb
inc
pop
in
xchg
movsl
xor
sbb
jae
cmp
aam
lea
pop
cmp
clc
clc
jecxz
push
bound
jge
sbb
sti
lcall
es
out
in
lret
mov
xor
in
inc
icebp
or
push
and
xchg
inc
shlb
mov
jno
mov
in
or
mov
lock
ljmp
shlb
divl
idiv
nop
icebp
push
push
or
dec
das
mov
adcb
push
fbld
push
push
stos
cli
adc
add
jbe
negb
mov
adcl
scas
cld
mov
sub
stc
lahf
sbb
mov
sub
or
setns
inc
jecxz
push
js
cmp
mov
jnp
insb
cmc
ja
cmp
xchg
loop
dec
std
adc
and
xor
sbb
pop
jb
sahf
push
sahf
jns
dec
cmp
mov
mov
stc
in
sbb
xchg
mov
cmp
nop
mov
mov
push
fcomip
inc
in
lock
jbe
lcall
jb
icebp
lcall
fisubrl
inc
imul
sub
lea
adc
push
mov
add
push
inc
pop
push
xchg
daa
jb
mov
and
ss
shrb
sub
stc
mov
repz
jne
dec
jae
push
out
ja
sti
mov
and
pop
popa
scas
add
hlt
popa
sbb
in
sahf
jae
imul
bsf
movsl
mov
fsubs
lret
mov
jo
mov
fstpt
fs
pop
add
push
add
jae
adc
inc
into
dec
sub
test
sbb
hlt
sarl
jp
sahf
inc
xchg
xchg
push
adc
push
add
outsb
xchg
ret
out
addr16
sahf
pusha
mov
sti
lods
je
mov
in
int3
push
lods
mov
fcoml
pop
push
orl
push
adc
add
add
insb
cmpsb
add
push
and
fisttps
cmp
test
cmpsl
mov
mov
test
mov
lods
or
jg
jae
inc
mov
lock
fsub
psraw
cmp
shl
inc
inc
mov
push
and
cmpsb
push
jns
and
flds
in
and
push
sbb
ret
loope
mov
cs
dec
inc
cmc
mov
mov
fsubp
xchg
nop
mov
popf
sub
pop
mov
dec
sbb
jne
inc
adc
mov
mov
insb
mov
pop
stc
mov
scas
dec
testl
pop
sub
out
push
pop
sub
xchg
jecxz
mov
or
push
je
mov
mov
leave
mov
movsb
movsl
push
dec
sub
dec
xor
aas
fistpl
iret
mov
add
jg
flds
dec
jle
inc
mov
mov
pop
mov
les
std
es
clc
fistps
cmp
idivl
pushf
cmp
sti
jp
push
dec
rcrl
std
ret
mov
out
push
cmp
inc
mov
mov
cltd
in
mov
push
jae
scas
mov
call
jnp
or
dec
mov
sub
int3
push
dec
dec
mov
xor
and
pop
mov
arpl
outsl
lahf
aam
popf
out
pop
jg
sub
jmp
jg
jns
xchg
sbb
lret
sub
xchg
add
cmp
gs
dec
jp
nop
mov
jo
mov
mov
jbe
push
scas
sti
stos
out
stc
daa
push
pop
outsb
sbb
and
pushf
xor
shll
pusha
adc
pop
jne
jnp
in
and
push
add
and
sbb
adc
add
std
imul
jbe
mov
test
arpl
mov
mov
xchg
jmp
movsl
lock
dec
gs
push
daa
xor
and
and
cs
inc
xlat
push
pop
iret
fsubrl
add
loope
push
out
cmp
aad
cmp
adc
outsb
inc
sahf
enter
icebp
pop
jns
cs
into
jbe
enter
xchg
xchg
repnz
lea
mov
imul
sub
pop
mov
mov
outsl
stos
out
add
movsl
fidivs
in
repnz
inc
inc
jl
inc
mov
cmp
inc
jle
gs
mov
cmpsl
add
int
cmp
mov
dec
lahf
mov
daa
push
adc
mov
sbb
imul
ret
xchg
inc
sub
mov
jae
push
enter
xor
call
jnp
fiaddl
xchg
push
aas
iret
xor
orb
icebp
enter
jge
iret
sarb
sbb
test
or
inc
pop
inc
test
orb
inc
cmp
int
sub
sti
lahf
mov
repnz
decl
mov
cmp
or
cmp
inc
insl
je
pop
pusha
addr16
sub
or
add
ret
add
pop
mov
out
lret
dec
push
inc
aas
notl
mov
ret
cld
outsl
int
jecxz
movsb
inc
adc
les
out
mov
into
test
cli
sbb
mov
push
xchg
aaa
xor
js
pop
adc
mov
xchg
neg
adc
hlt
sbb
inc
jns
dec
dec
pop
test
cmp
out
ret
xchg
je
xor
imul
in
jp
sbb
add
cmc
clc
pop
jae
push
cmp
sbb
scas
out
jl
fucomp
ljmp
stc
shr
xorl
mov
imul
adc
std
sbb
pop
testl
in
push
push
xchg
push
ficomps
mov
lret
jb
lahf
ror
push
add
call
cmpb
out
arpl
xchg
push
jmp
std
in
out
test
pop
pop
sbb
jb
pop
scas
push
rorl
cmp
fildll
ret
mov
jnp
sub
int3
lock
mov
sbb
push
mov
inc
outsb
or
stc
jbe
dec
loope
insb
icebp
stos
out
jge
repnz
loope
popa
test
ret
stc
ret
pop
callw
dec
fwait
sbb
scas
les
les
mov
xor
xchg
imul
test
jno
jo
push
scas
push
mov
test
sahf
incl
cmp
mov
push
mov
xchg
pop
mov
push
mov
sub
stc
in
pop
in
out
sbbl
loop
sub
test
inc
adc
lea
pop
out
lds
ret
dec
pusha
inc
adc
or
outsb
jle
jl
inc
in
ljmp
pop
sahf
jno
inc
adc
pushf
stos
adc
push
outsl
call
jae
mov
imul
rol
ds
movsb
pop
icebp
xor
pushf
cmpsb
das
push
fistl
push
ds
popf
pop
pop
lahf
lcall
jl
dec
cmp
lods
push
jne
bound
cmpsl
cld
js
or
mov
sarl
fisubrl
sahf
pop
mov
out
xchg
push
sub
int3
mov
ss
mov
xchg
outsl
jno
sub
and
sub
mov
stos
mov
call
stos
xorl
dec
cmp
or
testb
ret
xchg
pusha
movsb
idivl
inc
popf
subb
jno
mov
jbe
jae
pop
mov
jbe
xchg
negl
jae
mov
and
insl
xchg
pop
into
lds
mov
imull
inc
cs
in
fstl
cwtl
cwtl
mov
xchg
ret
fisubs
hlt
bound
pop
loope
lea
aas
sub
ljmp
cmpb
pop
add
sbb
mov
aam
sub
test
xchg
rclb
mulb
push
mov
insl
fsubrs
roll
jle
add
ret
in
lods
test
out
pop
cmp
jle
test
cld
gs
xor
lods
ja
push
xchg
cld
rcrl
les
hlt
jno
add
xchg
push
push
mov
in
push
push
mov
xor
jbe
sub
jmp
push
xchg
sub
mov
xchg
cltd
cmc
xor
btsl
mov
lea
mov
pop
nop
mov
xchg
inc
lea
mov
push
xchg
dec
sbb
or
in
mov
stc
dec
push
jnp
xor
mov
inc
xor
jns
mov
push
jae
adc
push
cmp
cmp
jmp
dec
jl
daa
int
or
in
bound
mov
in
outsl
pusha
add
pop
sbb
push
and
mov
mov
sub
mov
adc
ret
mov
and
cmp
nop
out
fnstenv
incl
je
addb
xchg
insb
mov
lds
add
add
or
and
negb
dec
sub
jl
lea
je
inc
iret
sahf
lahf
mov
pop
cltd
aad
sbb
es
mov
adc
int
xchg
xor
mov
fistpll
incl
cmp
xchg
pop
push
mov
sub
or
inc
daa
or
mov
dec
test
fnstcw
push
popa
sbb
ret
add
repnz
lods
dec
scas
mov
arpl
sbb
addr16
ss
out
rclb
mov
pop
ja
repnz
imul
das
jb
xchg
xchg
mov
movsl
and
fcmovnu
out
outsl
je
gs
cmp
add
xor
fsub
mov
in
stos
xchg
push
cs
push
das
dec
jge
int
jo
sub
ljmp
out
mov
enter
or
fdivl
hlt
out
fs
lret
push
push
pop
bound
loop
pop
cltd
icebp
push
jge
pusha
daa
idivl
test
push
stos
pavgb
xchg
dec
imul
add
daa
mov
mov
in
jae
enter
stos
cmp
push
cltd
js
push
mov
mov
adc
inc
jbe
push
test
inc
daa
mov
fisubl
nop
push
mov
cmp
jl
cmp
xorb
mov
jle
push
test
mov
out
lahf
into
or
sub
push
sub
pop
cmovns
cltd
and
cld
out
xor
lcall
int
sbb
ljmp
mov
scas
cmp
aad
add
int3
fidivl
outsb
pop
pop
pushl
xchg
inc
push
stc
fwait
adc
dec
cmpsl
fisubs
popf
or
test
inc
neg
imul
jbe
xchg
pop
cmp
add
adc
mov
add
add
ret
iret
xor
xor
xlat
push
push
fdivrp
mov
dec
ljmp
in
jno
and
xchg
insb
movsb
adc
dec
imul
mov
ficompl
pop
scas
mov
jg
into
movl
popa
sbb
push
std
in
jae
inc
pop
popf
lahf
loope
hlt
jge
cmpl
and
rcll
xchg
push
cmp
jecxz
idiv
or
or
int3
out
aaa
sub
xor
mov
ljmp
and
loope
ret
cmp
and
add
aaa
testl
jne
int3
scas
inc
add
stos
xchg
ljmp
sbb
dec
mul
jmp
or
dec
fwait
scas
loopne
sub
jp
and
ds
rcll
loopne
popf
xor
xchg
fdivs
mov
add
push
xor
cmp
jecxz
pop
mov
jl
insl
nop
jmp
test
inc
mov
out
cmc
mov
in
stc
sbb
es
push
test
mov
xlat
repz
aaa
jnp
xchg
out
sub
shl
jge
xchg
or
notb
ds
dec
xchg
pop
cltd
jb
pop
xor
cmpsb
pop
inc
push
cltd
or
jnp
cs
sbb
lcall
inc
add
pop
mov
sub
ffree
sub
mov
pop
in
jae
pop
mov
mov
dec
jo
test
pusha
popa
int3
loopne
xchg
sar
xor
pop
xchg
cmc
iret
adc
adc
mov
punpckhwd
jne
adc
cld
inc
mov
outsl
movsb
pop
sub
data16
cld
pop
cmp
mov
and
fldl
or
mov
fnstsw
fs
push
loop
stc
aam
cld
add
pop
jg
inc
rcl
dec
es
sub
insb
idivl
xchg
jle
and
xor
dec
or
lds
mov
adc
push
iret
loope
inc
adc
enter
out
mov
push
mov
xchg
mov
cwtl
add
adc
outsl
aam
and
scas
mov
or
mov
les
cmp
scas
jl
and
mov
loope
pop
xchg
dec
ror
cli
mov
sbb
imul
js
and
sub
ret
sbb
ja
xor
into
push
scas
push
xor
add
inc
inc
call
adc
hlt
lea
hlt
enter
pop
sahf
loop
jne
push
stos
data16
dec
jecxz
mov
sti
sub
stos
je
mov
sbb
loope
aad
addr16
inc
push
xor
and
sub
jae
dec
cmc
pop
and
rolb
sub
sub
xchg
inc
cli
and
pop
jbe
pop
test
mov
inc
or
in
outsl
mov
in
js
ret
mov
cmp
ja
repnz
andl
fistps
push
shrb
adc
test
enter
mov
or
and
inc
jno
dec
je
cmp
addr16
and
popa
push
dec
adc
mov
jl
pop
sbbb
xor
int
dec
pop
sar
stc
in
aad
outsb
pop
mov
xlat
pushf
mov
std
mov
fnsave
xchg
jo
push
cmp
orl
xchg
es
and
out
ljmp
insb
and
xchg
dec
mov
sub
ja
adc
cmpsb
pop
jl
mov
mov
inc
mov
ljmp
mov
daa
mov
sub
inc
mov
jg
mov
pop
stos
sbb
mov
icebp
jp
inc
aas
cmc
lock
dec
xlat
dec
call
aad
jae
sub
mov
fld
mov
push
cmp
outsl
lods
sti
pop
add
dec
ljmp
sub
cwtl
outsb
cmpsl
insb
push
stos
inc
mov
loope
stos
add
add
xchg
cwtl
decl
mov
popa
sbb
int
cmp
stos
je
cld
aam
and
sub
xorb
stc
rsqrtps
pushf
adc
dec
into
mov
jmp
in
adcl
inc
loope
mov
stos
out
mov
scas
sbb
cltd
divb
sbb
mov
xlat
mov
mov
ret
pop
sbb
sbb
dec
addr16
mov
sbb
aam
and
outsl
xor
mov
movsb
rcpps
jbe
js
inc
repnz
mov
push
add
adc
or
mov
std
dec
pop
adc
rclb
int3
roll
sub
mov
push
gs
mov
push
push
pop
xchg
fidivs
and
aad
popf
xchg
mov
pop
jmp
and
aam
mov
or
pusha
sub
mov
lods
fbld
dec
in
pushf
push
call
push
fsubs
cmp
ds
inc
or
mov
dec
clc
add
cltd
push
jmp
insb
or
fisubrl
pop
pushf
push
in
and
es
push
mov
dec
inc
dec
mov
sub
sub
jns
test
scas
loop
jae
jge
sbb
and
lea
lcall
pop
into
in
dec
push
jb
sub
push
es
pop
jmp
xor
loop
adc
jge
pop
in
lret
cld
iret
adc
ss
inc
xor
insl
dec
repz
repnz
sar
fstl
ret
add
ret
jle
loop
adc
xchg
popf
adc
psubsw
rcrb
cmp
lcall
out
pop
cmp
lds
mov
push
jns
mov
cltd
hlt
enter
rclb
std
xor
sub
xor
dec
ret
cld
lret
push
cmp
or
in
int
jne
jne
leave
stos
popa
iret
xor
lods
test
aad
test
dec
fcomps
cmpsb
notb
repz
addr16
fistpl
cs
jg
xor
lret
push
icebp
mov
int
in
ja
sub
loop
in
inc
adc
xor
call
out
pop
test
ss
call
and
sub
dec
test
icebp
dec
jns
addr16
mov
fucomp
sbb
mov
in
mov
cmp
cltd
sub
mov
lret
xor
cmpsl
mov
rcr
or
adc
stos
sidtl
call
push
lret
pop
or
adc
in
inc
test
fadds
movl
aaa
jbe
aas
and
mov
xor
inc
sub
xor
add
push
fildl
dec
xor
pop
adc
jno
mov
jg
jge
int3
std
dec
add
icebp
push
rcll
js
push
call
in
inc
int3
test
test
jns
push
dec
scas
aas
dec
xlat
push
sub
clc
scas
pushf
jmp
fistl
lds
ss
inc
arpl
mov
outsb
fildl
jle
mov
sbb
push
nop
sub
pop
ljmp
dec
outsl
pop
fwait
mov
xchg
mov
lret
push
in
bound
cwtl
or
insb
dec
inc
addr16
lahf
stos
test
xchg
jbe
in
ror
inc
mov
std
or
sub
out
inc
mov
aaa
sub
xor
mov
jno
jecxz
adc
cmp
pop
inc
sub
sti
mov
pop
std
dec
cli
addr16
enter
in
rcll
sbbl
shrl
push
sbb
je
iret
aam
dec
insl
icebp
dec
push
cltd
cmp
jge
loop
notl
push
cmpsb
out
xchg
inc
mov
and
push
test
jmp
stos
scas
mov
cmp
pop
dec
mov
sahf
insl
mov
fs
inc
std
mov
lea
adc
fsts
das
add
sbb
pop
mov
dec
outsb
std
push
bound
inc
inc
cwtl
rcrb
inc
inc
loopne
inc
mov
das
mov
jmp
lss
mov
pop
into
jecxz
lret
pop
pop
mov
insb
mov
inc
jno
jo
ss
lahf
jbe
mov
jb
in
cmpl
or
adc
int3
dec
imul
dec
xchg
andb
cltd
imul
adcb
push
jmp
arpl
mov
aas
mov
cwtl
sbb
push
push
cmp
adc
xor
push
cmp
and
mov
loop
or
shlb
push
std
ss
or
xchg
and
rorb
xchg
jae
inc
cmp
mov
in
enter
pop
inc
or
push
and
iret
jle
xor
inc
pop
xchg
mov
inc
or
clc
orl
adc
ret
or
mov
xlat
in
arpl
or
push
mov
fdivrl
push
jp
adc
pop
add
bound
pop
jns
mov
jmp
mov
aaa
pusha
or
mov
inc
rorb
sbb
loopne
push
lock
test
in
push
je
es
mov
sbb
xchg
dec
push
inc
sub
adc
ret
shll
inc
inc
outsb
mov
in
test
and
mov
or
aaa
dec
scas
into
add
inc
jae
ret
std
adc
imul
movsb
dec
pop
loope
sbb
leave
xchg
inc
lock
xor
cld
data16
andb
fsubs
loop
mov
and
inc
dec
xchg
jne
gs
mov
mov
or
movsl
cltd
ds
cld
push
fmul
and
xchg
jge
mov
faddl
cmpsl
mov
lea
xchg
jnp
fiadds
push
and
scas
andl
mov
pop
or
push
push
ss
or
fbstp
cmp
jae
aad
cwtl
fdivrs
stc
jle
test
bound
test
mov
inc
dec
sbb
jmp
out
test
xor
xchg
loop
pushf
pop
loop
cmp
mov
dec
stos
rcrb
out
mov
mov
xor
fmul
add
int
xchg
test
jp
dec
add
cmp
fldenv
or
int3
pop
nop
jge
frstor
xor
sub
xchg
ret
pop
xchg
push
loop
jle
shll
jecxz
stc
add
mov
sbb
mov
adc
mov
push
jno
sub
cmpb
pop
jmp
pop
pop
jo
cmpsl
mov
aam
mov
sub
push
je
inc
inc
and
and
sbbb
cltd
ds
sbb
add
cmpsl
xlat
icebp
ret
or
outsl
icebp
clc
xchg
push
fs
les
dec
ja
fstl
movsb
cmp
or
sbb
and
into
or
push
stos
push
add
sub
jno
or
mov
pop
mov
cltd
mov
ds
mov
pop
mov
int
lcall
push
mov
xor
cmp
sbbl
leave
and
jp
cmc
sahf
sub
outsl
sbb
xor
mov
inc
mov
lret
mov
test
mov
das
jns
lret
pusha
mov
add
in
add
push
stos
ficomps
stos
in
xchg
outsl
xchg
or
jl
xor
cmp
adc
inc
lahf
fcoms
mov
repz
pop
push
ds
cmc
add
std
inc
scas
or
mov
test
sub
pop
stos
mov
sbb
push
jge
mov
push
outsl
fdivrs
mov
jmp
loope
imul
jle
mull
or
gs
scas
enter
jae
aaa
inc
roll
fmul
hlt
push
test
mov
inc
or
add
jmp
cmp
adc
sbb
bound
jge
in
xchg
ds
subb
cmp
mov
frstor
sub
inc
outsl
aaa
jmp
xchg
and
push
inc
xor
or
fwait
leave
pop
dec
test
add
into
add
insl
iret
adc
lods
push
cmpb
andb
lea
into
popa
fcmovnb
out
add
pop
movsb
push
adcl
es
mov
jns
pop
mov
and
mov
repnz
inc
add
jns
mov
lahf
je
and
rcl
cmp
fbld
jbe
pop
movsb
cmp
lret
fidivs
adc
xchg
push
push
sub
push
iret
clc
nop
into
dec
cmc
lahf
add
inc
sbb
sub
int
mov
andb
xor
sahf
roll
test
or
iret
inc
sar
mov
sub
in
ljmp
sub
xchg
arpl
sub
cltd
jne
int3
xchg
ljmp
sbb
lahf
mov
lds
loope
cmp
mov
xor
add
dec
mov
int3
push
inc
addr16
jb
jmp
xchg
jns
jecxz
push
pushf
cmp
pop
mov
lock
cmp
stc
mov
stos
cltd
int
cmc
add
cltd
ret
out
and
repnz
fildll
lock
ja
pushf
in
out
mov
push
addr16
sub
xchg
sahf
add
dec
rol
clc
fcmovnbe
call
jp
andb
addr16
sub
pop
pop
lret
sub
add
xor
mov
xor
mov
lea
pop
insl
sbb
js
cmp
xor
ja
sbbl
fsubl
shr
stc
jle
xchg
pop
scas
inc
es
push
add
sub
xorb
lods
dec
sub
aas
enter
mov
das
stos
cmp
lret
xor
or
push
movsl
stc
out
mov
scas
push
nop
aas
push
stos
or
ret
jecxz
test
and
fldcw
data16
fsubrs
scas
fstpt
popf
mov
shrl
clc
push
lds
cmp
bound
sub
pop
pusha
cmc
xlat
and
and
mov
fcomps
dec
mov
jg
mov
outsb
insl
or
adc
fistpl
shlb
pop
push
hlt
sub
mov
pop
divb
mov
sub
fldl
xor
shl
adc
mov
shll
sahf
mov
into
ret
inc
lods
movsb
adc
push
push
rep
repnz
int
push
and
xor
add
movsl
pop
mov
mov
jnp
xchg
xor
xchg
xor
or
push
or
nop
sbb
push
into
mov
add
push
mov
bound
lock
pop
cmp
adc
ret
lods
bound
push
jb
into
jle
push
jno
sub
push
xbegin
imul
and
out
orl
sub
js
cmp
jmp
outsb
jmp
pop
sbb
js
outsb
cmp
test
notl
mov
jl
mov
movsl
loope
test
sub
jp
sub
sbb
nop
aam
cmp
cmp
in
ljmp
xchg
cmp
cmpsl
into
data16
hlt
mov
inc
std
enter
es
data16
cmp
pushf
dec
cmp
cwtl
scas
adc
sub
lods
loope
mov
pop
adc
add
js
mov
outsb
add
sbb
mov
cmp
ficoml
lock
pop
inc
jnp
imul
stos
repz
sub
insl
dec
push
inc
mov
jno
popa
mov
es
sbb
sbb
mov
andl
pop
cmp
adcl
inc
test
cmc
jo
mov
xchg
and
es
shlb
xchg
mov
insb
push
sbb
sub
mov
adc
inc
sti
and
add
mov
test
jecxz
mov
addr16
sbb
cwtl
xchg
iret
mov
mov
std
jg
in
jmp
andl
cmpsl
or
sub
adc
xor
sbb
ret
mov
and
rorl
mov
jge
movsl
test
rcrb
xchg
lea
mov
shlb
inc
imul
push
inc
repz
jmp
pop
or
nop
hlt
mov
pop
xchg
xor
ljmp
or
inc
data16
adc
stos
out
stc
dec
and
inc
pop
inc
es
xor
testb
sbb
insb
sub
push
push
imul
xchg
add
adc
adc
mov
jge
ror
sub
push
add
cmp
mov
stc
inc
push
std
add
cmc
cmpsl
mov
push
loopne
lea
push
das
cmc
cmp
inc
orb
dec
rorb
fdivrs
aad
inc
cmp
pop
pusha
pop
inc
jl
ljmp
int3
mov
out
inc
add
mov
test
pop
xor
ficoms
ljmp
ss
cmp
gs
inc
xor
and
sahf
nop
shlb
mov
mov
inc
ret
mov
lahf
sub
sub
fstl
aad
jl
hlt
filds
outsb
pop
insl
cmp
mov
es
mov
insb
or
or
xchg
jge
shrl
inc
push
mov
dec
jmp
push
pop
outsl
or
add
and
push
inc
xchg
loope
mov
in
cmp
mov
subl
sbb
fwait
sbb
shr
addr16
and
xchg
mov
mov
push
stos
jecxz
lcall
cs
lds
movsl
sub
mov
pop
sarb
clc
mov
in
mov
cmp
xchg
stos
jno
mov
and
and
pop
jne
shlb
mov
test
leave
mov
mov
push
aam
mov
jne
inc
mov
jns
xor
mov
aam
addr16
iret
mov
or
out
ds
out
ss
or
cmp
lret
mov
icebp
cmp
hlt
stos
sbb
pushf
xlat
jg
loopne
push
push
or
and
repnz
fdivrl
mov
add
inc
cmpsb
push
int3
sarb
inc
iret
xchg
or
push
xchg
daa
sahf
sub
push
dec
cmp
xor
dec
rolb
movsb
dec
fsincos
stc
aad
into
into
pop
mov
outsb
pop
outsb
flds
push
xor
sub
ficoml
cmp
pop
nop
mov
lds
add
outsb
cmpl
out
jmp
lds
cmp
lea
pop
mov
outsb
dec
shr
jbe
sub
fld
xor
cs
push
rclb
ds
psubq
arpl
xchg
dec
xor
jmp
and
int3
mov
push
mov
sub
repz
add
and
outsl
push
mov
mov
stos
fwait
jmp
jp
arpl
loop
xchg
arpl
lock
or
sbb
mov
cwtl
jb
and
lods
dec
repz
in
pop
jns
das
and
dec
ret
fbstp
jl
nop
add
add
add
je
insb
push
imul
push
daa
push
xor
cmp
sub
leave
jnp
dec
xor
sar
inc
mov
xor
jb
hlt
aad
aas
dec
popf
icebp
mov
sub
test
sarl
hlt
loopne
fsubrl
pop
mov
mov
mov
das
dec
jg
pop
push
cld
int3
jp
xor
adc
pop
inc
popa
mov
xor
pop
lea
or
out
hlt
stos
mov
pop
push
out
fisttpll
scas
inc
fbld
xchg
or
sub
pop
ja
shll
stos
into
mov
or
xchg
mov
mov
push
xchg
sub
pop
ja
sbbb
mov
mov
add
push
gs
lock
sub
cmp
cwtl
iret
mov
stc
cmpsb
test
notl
mov
sbb
dec
incl
mov
adc
push
aad
out
stos
outsb
dec
adcb
jl
icebp
pusha
lret
in
popa
push
jp
pop
vmread
xor
jle
shll
mov
and
shl
and
jl
adc
imul
mov
inc
hlt
call
adc
lea
fistpl
pop
hlt
int
std
inc
pusha
lods
sarl
movswl
push
popa
stc
mov
test
sub
jnp
adc
mov
jecxz
scas
aad
push
jge
sarl
dec
ret
lds
or
aam
dec
cld
cwtl
mov
movsb
and
lock
mov
adc
cmp
xchg
insl
mov
sub
inc
js
xchg
cs
shll
ror
les
mov
pop
jge
jbe
mov
cmp
inc
ds
mov
je
mov
and
sti
repz
or
adc
adc
lcall
and
sbb
dec
xchg
xchg
pushf
lock
and
dec
add
ret
fldenv
mov
mov
leave
cld
ficomps
xchg
cmp
rorb
mov
loopne
push
lahf
loop
sub
addl
add
fldl
cs
mov
push
inc
mov
adc
js
xchg
repz
sub
das
stos
in
cwtl
and
nop
aam
nop
cld
dec
insb
pop
inc
pop
addr16
sbb
jge
xorl
insl
or
cmp
inc
sahf
cmc
ja
xchg
test
in
push
fldenv
fbstp
imul
movsl
jbe
imul
or
jno
xchg
ds
gs
sbb
sti
or
push
notb
rcll
inc
test
cld
into
pop
pop
add
cmp
xchg
sti
test
or
loopne
mov
and
fwait
jb
idivb
jmp
jbe
adc
xchg
out
xchg
push
mov
adcl
mov
pop
pop
cmp
in
pop
push
test
aas
loopne
hlt
js
xchg
fwait
pop
movsb
addr16
int3
adc
xchg
int3
mov
adc
int
xlat
sub
push
sub
dec
lret
cmpsl
jno
inc
dec
mov
dec
cltd
aas
push
scas
push
lahf
mov
mov
xchg
xchg
std
inc
test
outsl
jns
dec
and
mov
xchg
lea
jp
sub
pushf
sub
jns
cli
fistps
fidivl
insl
popf
sbb
and
inc
dec
push
push
out
mov
xchg
dec
and
dec
out
push
lea
ja
lahf
sub
inc
jne
add
xor
xor
adc
shl
cwtl
dec
out
add
sar
push
leave
popa
pusha
fsubrl
xchg
sub
sbb
popf
jb
nop
das
inc
jge
push
insl
cmp
pusha
push
inc
je
add
mov
frstor
hlt
adc
xchg
mov
dec
gs
xor
jl,pt
adc
push
idivl
dec
pop
jnp
mov
cmpsb
dec
ja
lret
bound
xchg
insl
mov
mov
sub
in
imul
jp
ja
addr16
imul
out
insl
je
xor
fnstsw
scas
add
punpcklbw
fstl
fldenv
xchg
imul
sub
xor
inc
push
std
scas
insl
out
sub
js
jl
into
jecxz
and
xor
xchg
fsubrs
je
aad
push
sub
push
shlb
jnp
push
popa
xor
push
cwtl
or
or
jg
popf
jge
pop
ja
clc
push
pop
dec
pop
adc
push
mov
mov
mov
out
lahf
mov
sbb
lds
xchg
cmp
inc
sahf
inc
dec
or
cmc
and
addb
xor
adc
addr16
jg
ficoms
or
pop
add
mov
es
mov
scas
negl
jge
fwait
mov
insl
push
rcll
in
cli
jmp
jl
out
adc
or
mov
lret
jecxz
dec
jge
imul
dec
mov
sub
orl
cmp
push
xor
jg
and
sbb
push
stc
js
lds
adc
dec
cmpsl
enter
adc
pushf
sbb
aad
pusha
sbb
push
mov
cmp
repnz
sub
sub
mov
in
loopne
loop
or
rolb
pop
ret
dec
aam
rorl
into
mov
jge
addl
roll
fwait
sti
push
push
adc
rcrb
dec
xchg
iret
int3
jo
inc
test
mov
sub
push
cmc
insb
pop
jne
fs
jmp
pusha
push
mov
sbb
in
push
dec
push
sub
cmp
jge
add
fdivs
pop
add
les
xlat
push
cld
cmp
cmp
mov
std
add
xor
lret
xchg
int3
inc
fstpt
aas
pusha
xchg
mov
sub
int3
xor
sarl
xor
mov
push
sbb
jecxz
or
js
sbb
xchg
lahf
xor
mov
pop
lret
aaa
inc
sbb
aaa
xchg
mov
out
mov
push
xchg
leave
fs
fdiv
mov
xlat
int
sub
loopne
insb
sbb
or
mov
insl
mov
or
add
sbb
cmp
mov
sub
enter
cmp
jae
movsl
stos
add
into
adc
in
or
push
shl
jge
fchs
fnsave
es
xlat
dec
dec
and
enter
out
addr16
inc
pop
adc
ljmp
jo
pop
mov
lea
pop
dec
int
sbb
cmp
into
loope
adc
jl
imul
fisubl
dec
mov
dec
sahf
add
ds
jecxz
xor
ret
repnz
mov
popa
lock
pop
sub
scas
shll
fdivp
pop
fsubr
test
aad
fstps
retw
mov
loop
pop
jae
bound
jecxz
mov
ret
cmp
mov
jmp
les
and
pop
insl
mov
dec
pop
xor
xchg
mov
dec
jge
jns
jo
jl
loop
shr
cmp
in
sub
lcall
dec
xor
jecxz
inc
jb
sahf
out
xchg
cmp
or
aam
jecxz
jno
subb
push
xchg
xor
gs
ficoms
scas
jmp
sbb
mov
inc
and
mov
xor
shrb
dec
add
nop
pop
bound
loopne
inc
pop
jae
je
or
rclb
pop
mov
adc
mov
aam
xchg
lahf
adc
cmp
mov
cmp
mov
jbe
cwtl
xor
loope
or
xchg
inc
xchg
scas
inc
xor
outsb
popa
adc
xchg
xchg
fimuls
pop
jo
into
mov
cwtl
bound
rolb
in
sbb
test
gs
js
in
fcompl
ret
outsb
test
test
adc
lcall
cmc
inc
xor
loop
inc
rorb
or
mov
add
xor
jno
in
mov
sbb
pop
repz
ljmp
sbb
inc
in
inc
add
bound
xor
mov
dec
leave
notl
test
sbb
bound
jl
fsubrp
inc
jb
dec
aam
fimull
dec
xor
fcmovnbe
xchg
dec
sub
sbb
adcb
out
fcompl
sub
aas
jl
mull
jne
bound
cwtl
es
mov
aas
fst
repnz
popf
scas
push
ffreep
push
lock
jb
roll
ret
aas
int
addr16
insb
mov
mov
jmp
mov
cld
pop
ss
addr16
addb
call
outsb
dec
mov
xchg
cmp
and
dec
lret
push
call
xor
push
popf
ret
outsl
dec
dec
mov
enter
xor
add
sub
or
mov
xbegin
sahf
jle
pop
push
fsts
cld
xchg
outsl
outsl
sub
pop
push
xor
pop
mov
sahf
in
push
dec
cmc
inc
sbb
push
adc
xchg
push
jle
movsl
mov
sub
call
mov
outsb
pop
mov
mov
pushf
in
dec
mov
inc
aas
stc
mov
ret
mov
stos
hlt
insb
cwtl
xorl
dec
jecxz
dec
dec
dec
add
addr16
js
mov
pop
add
jp
mov
lret
dec
pop
push
xchg
sub
mov
into
outsb
inc
xor
jns
ljmp
sub
insb
sbb
loopne
and
data16
dec
imul
push
push
jl
push
cli
mov
push
dec
lea
and
les
imul
loopne
imul
loopne
insl
loope
xor
loop
nop
push
cmp
dec
push
or
les
out
das
cld
push
jge
mov
push
xchg
lret
ds
dec
aam
inc
and
sub
in
cltd
add
das
cmp
sahf
int
call
xchg
cmpb
ljmp
push
and
cltd
push
push
and
repz
scas
sub
sbb
pushl
div
sub
cs
inc
pop
ds
and
insl
adc
xor
hlt
jno
xor
adc
dec
mov
cmp
shll
outsb
test
push
filds
flds
push
sbb
mov
cmpl
or
gs
and
xor
mov
mov
push
and
ljmp
jl
fsubrp
push
or
adc
pop
fiadds
push
movl
xor
shll
jns
sbb
mov
add
xlat
std
popf
outsl
ret
in
or
adc
dec
push
imul
adcb
std
xor
dec
dec
mov
cs
out
cli
out
mov
stos
cs
mov
dec
dec
mov
cmpsb
lret
aad
popf
sbb
aaa
stos
sbb
loopne
cmc
mov
lock
test
ret
ljmp
dec
cmp
xorb
push
jecxz
push
cld
or
push
popf
scas
rcrb
cmp
mov
lds
lds
mov
dec
lock
in
mov
icebp
push
sbb
and
mov
aad
jmp
and
pop
push
into
inc
into
fmuls
xchg
outsl
jae
jecxz
dec
xchg
std
das
lret
mov
mov
aaa
addr16
mov
and
in
cltd
mov
sahf
push
add
dec
jb
cwtl
cmp
test
into
pop
push
in
in
cmp
int
mov
sbb
mov
push
test
push
fcoms
jo
cmp
ds
adc
int
sub
sub
cs
mull
jbe
add
jb
outsl
mov
dec
xchg
outsb
ja
jbe
test
incb
std
jae
call
cmp
or
and
pop
outsl
lea
hlt
xchg
push
jmp
sbb
jnp
lret
sahf
aas
mov
shrl
pushf
sub
sbb
out
pusha
xlat
cmp
insb
rcl
mov
add
pop
mov
shrb
jb
xchg
sbb
push
repz
sbb
sub
dec
jge
sub
mov
mov
pop
jmp
jecxz
test
aas
stc
or
adc
aam
std
hlt
mov
shll
ja
mov
dec
push
imul
cmp
adc
mov
ffreep
inc
iret
lea
in
cmp
mov
cmc
push
sub
mov
lahf
fimull
ss
or
orl
nop
dec
arpl
lock
andb
cmc
repnz
jge
addr16
sarl
push
push
jae
dec
call
repz
sbb
xchg
xchg
in
rorb
fdivl
ret
js
test
pop
push
addr16
clc
pop
xchg
dec
mov
xchg
cmp
sub
jecxz,pn
stos
inc
repz
test
jg
or
stos
ss
jnp
cmp
xchg
cmp
cmpsb
cltd
fldt
or
adc
dec
fdivrp
mov
gs
ja
push
imul
mov
pop
or
or
and
sbb
int3
add
sti
adc
test
inc
lcall
mov
popa
jmp
jmp
sbb
push
imul
pop
pop
loope
mov
add
shll
mov
dec
jp
mov
and
mov
jmp
pop
push
sbb
fst
outsb
int
mov
shlb
mov
add
add
adc
mov
cmp
adc
shr
cli
push
sbb
scas
adc
movsl
dec
mov
xor
mov
or
mov
iret
test
int
ret
aad
or
lcall
js
mov
push
or
dec
xor
mov
xchg
sub
bnd
xchg
sahf
aaa
insl
sbb
cmp
jns
fs
popa
cmp
loopne
cli
mov
test
movl
nop
adc
jmp
std
test
ret
rcrl
or
mov
fcoms
push
ja
gs
cmpsl
sub
loop
jmp
push
jbe
adc
sbb
sbb
lahf
mov
or
pop
xchg
ljmp
cltd
test
push
and
jmp
jne
outsl
dec
jae
call
dec
push
call
push
sub
jmp
or
push
fcoml
add
add
std
dec
sub
cld
rorl
adc
mov
mov
jne
adc
dec
stc
mov
dec
mov
add
mov
xchg
jae
hlt
inc
jno
xchg
xchg
push
xchg
push
mov
divb
daa
sti
pop
mov
jmp
icebp
les
jo
mov
rcrl
jae
jne
fs
lahf
addr16
dec
add
into
cli
popa
dec
and
mov
add
pop
ja
add
stos
xor
cwtl
adc
int3
pop
dec
scas
mov
cmc
inc
imul
out
sbb
or
and
subl
push
xchg
mov
out
ss
xchg
push
lret
dec
cmpsl
adc
ss
cmp
arpl
fs
hlt
cmc
prefetcht1
dec
push
in
jb
rcrb
dec
push
jae
xor
xchg
sti
xchg
insl
scas
cmp
mov
cmp
mov
mov
pop
mov
sbb
rcrl
fistpl
repnz
xorb
pop
push
xor
push
pop
xchg
push
and
outsl
sub
pop
pop
mov
lods
push
add
insl
repnz
cmp
xchg
lods
add
pop
js
aas
mov
movsb
sub
pop
jg
je
inc
pusha
sarb
notb
jb
mov
mov
imul
push
mov
in
movsb
jecxz
mov
ljmp
sbb
inc
mov
sub
aas
mov
inc
xchg
nop
dec
mul
cmp
or
pop
add
test
es
lret
stc
in
dec
dec
xlat
pop
xadd
ret
mov
push
fisttps
das
xchg
int
jb
xor
test
or
fldz
mull
pop
mov
jle
sbb
ja
xor
in
imul
inc
ss
xor
sub
jl
and
aas
aam
cs
das
cmpsl
adc
mov
push
or
and
in
in
scas
das
dec
jecxz
leave
push
jge
stos
sbb
jno
popa
popl
jbe
mov
sub
mov
out
test
out
add
mov
sub
jns
jecxz
lea
mov
jge
mov
lcall
testb
scas
aad
adc
ret
mov
testl
cmpsl
mov
jl
outsl
lret
mov
mov
fwait
push
lods
dec
xchg
sbb
loop
mov
lahf
out
roll
push
cmp
test
and
mov
test
and
mov
mov
cmpb
idivb
aam
mov
cmpsl
leave
mov
sub
mov
mov
pop
fwait
sbb
sbb
mov
test
test
aas
pop
or
jecxz
ret
mov
lcall
dec
in
sbb
sbb
lods
inc
rorb
xchg
std
add
addb
sbb
jb
jb
dec
and
pop
mov
mov
loope
pushf
pop
call
and
and
loope
push
dec
stos
shl
push
mov
lds
aad
sbb
aaa
std
pop
nop
adc
arpl
stc
jne
jp
popa
adc
fidivrs
adc
mov
lret
mov
push
in
sub
push
rolb
adc
mov
rcll
jo
mov
loopne
mov
cmp
jne
jle
cmp
call
aam
subb
inc
lret
aaa
dec
mov
adc
cwtl
dec
or
cltd
leave
cmp
mov
sub
or
stos
pop
push
jae
je
push
adc
outsl
sbb
divl
xchg
cmp
jae
push
inc
int
xchg
cmp
shlb
push
jmp
add
pusha
sti
dec
fcmovbe
push
mov
icebp
mov
aam
cwtl
mov
cmp
or
mov
bound
ss
fbstp
imul
arpl
pop
push
sbb
push
mov
sub
mov
subl
jno
in
fwait
xchg
hlt
int3
jmp
jo
cld
pop
out
popa
aas
enter
and
psrlq
sub
dec
jl
repnz
or
mov
lods
std
movsb
in
rorl
inc
into
ds
dec
mov
mov
jmp
mov
cwtl
push
cli
fsin
outsl
push
inc
sti
stc
pop
cmp
jl
ret
push
daa
sar
sar
jmp
nop
dec
mov
test
bsr
pop
pop
out
xchg
stos
or
ljmp
sub
lods
mov
cmp
fbld
pusha
cmp
in
movswl
cltd
ss
xor
cwtl
inc
les
mov
or
rcl
mov
cltd
xor
leave
je
into
mov
popa
jnp
dec
ljmp
sahf
in
jge
cmp
pusha
les
popf
push
popf
int3
push
in
movsl
popf
inc
jo
test
push
push
mov
dec
orl
popa
cltd
ja
add
orb
fidivrl
js
sysret
xor
imul
les
out
push
xchg
aad
repnz
xchg
stc
xor
aam
add
inc
dec
push
pop
lcall
dec
cmp
or
dec
sbb
xor
idiv
ficoms
push
or
and
and
jae
add
stc
pop
das
mov
cmp
loopne
sbbb
repz
inc
mov
lods
rol
and
mov
sub
mov
add
add
lea
mov
aad
add
in
mov
push
mov
xchg
out
pop
mov
ja,pn
stc
pop
jmp
pop
int3
cmp
jmp
aaa
mov
popa
dec
cmc
inc
aas
sub
neg
sbb
testb
testb
push
push
dec
jp
or
aaa
mov
and
inc
xchg
out
rcll
inc
scas
lds
lods
push
insl
scas
dec
enter
popa
arpl
mov
out
fcoms
or
ds
call
fimuls
sbb
test
sbb
into
mov
and
cmp
and
leave
and
mov
daa
cs
loop
adc
jle
ss
jne
xor
push
pop
and
sbb
mov
fstps
lds
or
cmpl
lret
push
out
das
add
arpl
test
xchg
lods
or
push
in
sti
fidivrl
out
or
iret
or
mov
cli
data16
out
mov
fs
add
mov
ja
mov
lcall
push
and
pushf
lea
mov
mov
dec
out
adc
jae
sub
inc
fistpll
mov
push
and
lods
in
and
adcl
cwtl
fucomip
ret
fwait
in
mov
test
sbb
fsubl
scas
inc
push
leave
sbb
aas
dec
adcb
insl
jo
xchg
add
pop
mov
cmp
dec
push
push
mov
in
rcll
cmc
mov
test
sar
pusha
aas
loopne
ljmp
ss
int
push
pop
incl
xor
scas
fdivrl
inc
mov
pop
test
test
inc
gs
mov
lods
add
sbb
adcb
mov
lds
push
jb
rcrl
inc
xchg
in
pop
fwait
adc
jb
push
fadds
xchg
adc
mov
sbb
push
ss
shl
adc
xor
pop
test
jg
in
iret
push
mov
jb
popw
testb
add
sub
bound
jge
sub
adc
pushl
xchg
adc
xchg
scas
mov
jnp
add
mov
cmc
xchg
jge
xor
jbe
ficoms
and
jnp
mov
fxch
repnz
cmpsl
xor
insl
gs
iret
mov
in
adc
lea
sub
lret
imul
movsl
push
pop
xlat
ss
mov
scas
out
movsb
loop
mov
bound
mov
ret
mov
fidivs
nop
sub
sub
and
mov
sbb
push
mov
mov
sbb
outsb
popf
mov
ljmp
lods
inc
jg
jge
cmp
and
cmp
add
dec
int3
mov
push
pop
aaa
or
push
cmpsb
lods
xor
xorl
add
fisttps
mov
mov
cmpsl
arpl
stos
ljmp
mov
inc
jmp
dec
int
dec
fisubrs
imull
shl
cmp
mov
mov
imul
popf
ss
mov
add
or
sahf
push
movl
mov
flds
mov
scas
xchg
fldl
fnstenv
xchg
ret
mov
ret
dec
cwtl
rcr
mov
sub
mov
mov
imul
mov
mov
dec
test
push
add
in
and
mov
sbb
loope
dec
mov
xchg
xor
loope
cmpl
ljmp
fsubrl
mov
mov
pop
xor
repnz
mov
sarb
sarl
outsl
out
stc
in
mov
push
fisubs
and
or
lods
inc
jne
push
pop
sub
rorb
pop
push
test
push
cld
sub
cmp
subb
pop
dec
dec
daa
movsb
pop
cmpsb
xchg
xor
inc
sbb
call
into
sarb
jge
shrl
subb
jp
push
in
mov
pop
inc
xchg
sbb
in
or
idivl
pop
mov
and
xchg
std
sahf
mov
mov
push
or
testb
sbb
dec
stc
sbb
mov
add
or
sti
dec
lea
pop
inc
js
pop
lds
aam
shll
push
pop
xchg
or
or
adc
aad
cmp
adc
repz
in
clc
inc
in
dec
xor
jnp
jo
xor
outsl
adc
loope
push
ret
es
xor
popf
jl
into
ffreep
jmp
dec
jle
cld
cmp
js
in
dec
mov
sbb
mov
stos
sub
mov
sbb
stos
shll
test
fcom
mov
pop
aaa
lret
in
stc
shll
sbb
into
cmpsb
addr16
mov
ss
mov
gs
mov
cmp
insl
dec
test
rorb
stos
inc
mov
mov
fildll
push
xchg
xchg
mov
xor
xchg
fwait
cmpsl
pop
aaa
dec
arpl
cmc
add
ret
pop
paddusb
jne
dec
sbb
push
mov
add
mov
jge
cmp
std
jmp
comiss
xchg
mov
push
into
sarl
sub
add
ja
sub
notb
arpl
ret
cmpsb
pop
xor
or
mov
xor
inc
js
fcoml
xlat
out
call
aaa
ljmp
aam
cs
xlat
shlb
lret
sbb
pop
mov
xor
pop
mov
std
jae
inc
xor
pop
insl
push
lock
cmp
mov
push
adc
pop
and
jge
adcl
pop
xor
xchg
popl
xchg
inc
push
push
and
in
int3
stc
stc
xor
add
int3
movsb
sbb
fstl
inc
cmpsb
push
mov
lods
mov
out
lahf
sub
inc
addb
sub
je
mov
or
cmpsl
dec
mov
cli
add
pop
add
dec
scas
scas
adcl
mov
push
jge
sar
insl
adc
pop
test
daa
insl
loopne
fwait
loop
push
mov
push
fildl
push
aas
popa
push
scas
lea
and
and
sbb
rorl
outsb
subl
pop
inc
bound
jne
mov
insb
adc
mov
in
or
cmp
xor
call
lret
sti
pop
cmp
sub
jge
aaa
jae
cwtl
or
push
cli
iret
minps
in
sbb
shll
jb
jo
xor
in
fcompl
ficoml
int
popf
les
pop
or
out
mov
xor
xor
ficoml
dec
mov
or
divb
xor
adcb
push
xor
dec
mov
test
mov
int
sub
mov
nop
insb
cmp
sbb
into
pop
jle
jge
and
outsl
lea
fsubrs
insl
outsl
mov
jge
repnz
mov
inc
xchg
xor
or
loop
xlat
fisubs
or
pop
jne
dec
jo
lret
scas
es
dec
js
repnz
xchg
push
lret
fstps
jge
fdivrl
pop
pop
or
mov
sbbb
or
fimull
and
xlat
dec
add
sbb
mov
out
test
dec
js
dec
fucomp
sub
rcll
sub
repz
cli
lds
cmpsl
imulb
xchg
or
ltr
rol
arpl
aas
pop
xorl
push
dec
adc
insb
and
pop
jecxz
xchg
pushf
mov
add
mov
sbb
jbe
and
insl
gs
ret
loopne
push
leave
sar
push
shrl
pushf
cmp
adc
adc
push
insl
xor
movl
paddq
rcrl
mov
shrb
lock
dec
xor
outsb
xchg
or
push
pop
mov
int3
xchg
or
adc
popf
pop
mov
mov
ret
xchg
add
repz
shr
or
xor
rclb
rolb
rclb
out
dec
clc
jbe
push
int
xor
pop
inc
into
mov
out
pop
adc
cmpsb
stos
dec
xor
push
cltd
mov
mov
push
or
lret
jp
lret
cmp
outsb
jecxz
gs
sub
adc
jl
pop
js
mov
mov
lock
cli
lret
aaa
pop
ljmp
cmc
sub
imul
out
jle
push
push
mov
cmpsl
xchg
lods
rcrb
adc
stos
scas
push
inc
test
out
aas
push
push
stos
mov
outsl
mov
cld
sbb
xor
icebp
cmp
out
adc
inc
mov
imul
ret
aas
mov
mov
insb
lea
insl
xor
and
jl
mov
or
mov
inc
mov
pop
rcll
push
fstps
ret
test
push
in
mov
insl
xlat
adc
fldl
jmp
lahf
outsb
aam
in
sbb
cltd
rclb
mov
fmulp
xor
push
dec
sub
cmp
mov
stos
sbb
push
lea
mov
jle
lret
mov
shl
ret
loopne
movsl
out
xchg
rcrl
inc
cmp
push
outsl
adc
popa
mov
dec
push
out
xor
int3
add
out
jns
testb
outsb
outsl
rclb
or
mov
mov
lret
fsubrl
mov
push
leave
xlat
popa
xchg
push
adc
xlat
sub
jne
pop
sbb
mov
push
orl
fisttpl
pop
pop
cmp
sbb
mov
inc
adc
mov
pop
daa
out
push
fsubrl
and
test
or
jnp
xchg
outsb
fsubrp
push
adc
pop
push
pushf
pop
gs
xchg
and
inc
testb
movsl
inc
ret
loope
hlt
fists
pop
mov
data16
aas
popf
pop
gs
test
cmp
stc
mov
add
jbe
pop
lds
fcoml
insb
sub
jae
leave
je
dec
sub
ret
xchg
js
inc
sarb
scas
addr16
lds
adc
enter
andb
bound
fwait
push
popa
xor
lret
dec
loop
cmpsb
push
push
inc
sbb
mov
lock
adc
popf
mov
add
sub
lret
pop
mov
mov
sbb
sub
sub
mov
sbb
int3
ja
repz
mov
js
jl
pop
or
cmp
and
or
sahf
or
pop
push
jl
jnp
jecxz
push
add
outsl
insb
sbb
scas
mov
mov
mov
jo
xchg
push
fwait
addr16
icebp
pusha
or
mov
jae
loope
mov
loop
mov
inc
loopne
inc
xchg
aas
jns
mov
jb
pop
dec
mov
mov
in
sbb
std
xchg
adc
test
or
cld
std
pushf
loopne
aas
jl
pop
or
fisttpll
loop
test
jae
xchg
lcall
fwait
mov
das
pop
movl
adc
sbb
push
imul
mov
jge
cmp
das
testb
icebp
lahf
lret
jl
xchg
js
loope
cmp
sub
mov
mov
js
jmp
cmp
js
jae
sti
fldl
push
stos
daa
sub
adc
sub
aaa
cmp
jne
inc
aam
mov
pop
mov
fdivrp
jbe
jmp
push
daa
fldl
enter
outsb
mov
lods
push
or
insl
sbb
and
dec
int3
lret
sub
fisttpl
aas
mov
pop
into
nop
and
dec
imul
das
and
sbb
cmpsb
les
adcb
lds
push
inc
mov
nop
push
sbb
pop
sbb
dec
popa
and
or
pop
mov
and
push
fcoms
adc
out
jg
dec
aaa
cmp
les
ficoml
les
lea
lret
push
dec
jbe
cmpsl
shr
push
sub
push
and
test
aam
inc
push
ss
lret
jmp
test
add
jb
pop
fisubrl
inc
fidivs
fwait
pusha
or
outsl
jl
xor
fcomps
fs
cmp
jo
sti
addl
arpl
test
mov
or
mov
push
pop
dec
sbb
xor
mov
jbe
addr16
cld
xor
imul
adc
mov
mov
nop
dec
jb
addr16
pop
mov
outsb
pop
jmp
lcall
mov
jo
sub
pushf
ret
push
cmp
inc
or
popa
push
leave
inc
test
or
jg
popa
imul
sub
shrb
and
imul
psllw
rcl
push
sbb
outsl
aaa
pusha
add
cmc
fcompl
int3
iret
popaw
out
ret
scas
call
stc
jl,pn
int3
dec
div
or
and
push
fistpll
movsl
or
inc
cmp
aad
inc
add
hlt
out
pop
mov
and
jns
aad
inc
pop
mov
aas
or
ljmp
ret
add
and
push
mov
xor
xchg
jns
jge
iret
pop
sub
push
push
mov
inc
pop
imul
adcb
sub
out
sti
and
idiv
inc
sbb
loop
mov
cmpsl
or
imul
fs
fnstsw
lret
in
incl
fidivrl
into
push
push
xor
ret
pop
dec
lods
nop
xchg
and
aam
cmp
jl
sub
cmpsb
pushf
mov
mov
inc
sti
xchg
movsl
inc
leave
add
data16
movsl
dec
push
les
in
aad
daa
mov
loope
mov
loope
cwtl
and
jae
icebp
out
aad
inc
dec
loope
repz
xchg
jecxz
filds
fdivl
dec
push
loopne
add
pop
inc
ret
mov
imul
sti
ja
imul
jecxz
mov
add
and
xchg
arpl
sub
xor
or
out
sub
lea
or
jge
mov
inc
sub
push
movsb
sahf
and
sbb
or
mov
cmp
sub
mov
fwait
adc
pop
sub
or
or
adc
int3
mov
bound
pop
inc
mov
iret
shr
inc
inc
mov
das
dec
cmp
arpl
xchg
lods
pop
mov
xchg
ja
dec
lds
repnz
mov
push
add
mov
xchg
and
jecxz
pop
push
adc
mov
inc
pusha
xchg
imul
lret
pop
xlat
push
sti
repnz
pop
add
in
arpl
iret
mov
or
les
pop
scas
xor
sub
xor
pop
lret
sar
and
mov
mov
and
xchg
stc
xchg
inc
pop
sub
ret
cmp
mov
cli
adc
mov
mov
repnz
fs
mov
je
mov
pop
inc
xor
pop
shrb
mov
rcrb
pop
ljmp
xor
mov
jbe
xchg
sbb
or
mov
dec
mov
jne
shlb
sti
push
mov
ret
andb
cli
dec
in
adc
lret
popw
ljmp
insb
adc
pop
and
jg
icebp
callw
aad
add
or
adc
jae
jg
mov
shll
jmp
scas
sarb
ds
imul
in
cmp
ja
dec
lea
jno
ja
jbe
rcrb
loopne
rolb
jne
mov
lods
les
cmpsl
outsl
enter
xor
dec
pop
pop
mov
repnz
and
jnp
mov
cmp
jmp
addr16
loopne
mov
xchg
xor
int3
pop
pusha
push
dec
js
and
cmpsb
enter
shll
test
mov
call
sub
jne
push
sub
add
cmovne
hlt
inc
inc
mov
or
arpl
scas
pop
test
xchg
mov
nop
mov
jnp
dec
cmp
adc
stos
shlb
add
pop
jo
pop
test
mull
ret
xor
cli
fcoml
scas
add
cmp
stos
adc
test
dec
sbb
jae
xor
ljmp
imul
adc
insb
dec
cmpsl
jle
dec
cwtl
add
dec
sarl
lret
jne
addb
lret
sti
and
dec
inc
mov
mov
incl
mov
xor
jno
enter
pop
jns
call
fwait
adc
and
test
mov
gs
clc
dec
or
les
loopne
cld
out
fstl
inc
pop
aaa
stos
repnz
sub
adc
mov
inc
pause
lods
push
jp
mov
cmp
or
shlb
mov
lret
pusha
enter
rolb
dec
mov
jp
out
mov
out
loope
xchg
add
xchg
andl
das
cld
mov
leave
repz
pushf
ss
movsb
insb
arpl
jne
lods
cmp
pop
ljmp
cmp
adc
fsubl
inc
je
aad
add
jmp
push
cmpb
jecxz
add
dec
incb
or
pushf
dec
jnp
jbe
or
fistpl
and
mov
sbb
stc
repnz
stos
pop
test
mov
iret
adc
mov
icebp
jo
fidivl
mov
mov
xor
add
sub
sbbb
add
xorb
cmp
sbb
xor
test
ljmp
cmc
jle
and
repz
loopne
test
rcll
sub
in
in
inc
es
mov
pop
fwait
sub
clc
cmp
lcall
sarl
movsl
add
pusha
outsb
pop
and
ljmp
add
add
out
sbb
pop
fs
jbe
rorl
dec
jmp
clc
dec
movsl
mov
jo
pop
adc
or
int3
es
lret
movsb
cs
lahf
sub
sbb
or
test
jb
xchg
mov
cld
lahf
push
push
pop
sub
xchg
enter
mov
mov
fstl
xchg
and
jg,pt
push
sahf
adcl
sub
cwtl
ss
jb
fucomi
sbb
add
xor
and
mov
adc
xchg
fstl
adc
push
lcall
aaa
icebp
out
rorb
xchg
jno
fcomip
or
ljmp
and
and
jle
mov
mov
out
insl
and
add
cli
xor
cmp
or
pop
cmp
sub
mov
out
out
mov
xor
in
loop
xchg
push
idivl
pusha
dec
ss
xchg
nop
mov
rcr
pop
es
lret
inc
test
lock
fdivl
xchg
mov
add
sahf
xchg
push
cmpsb
or
rorb
jbe
pop
nop
in
addb
scas
push
jl
add
xchg
sarb
cwtl
xor
in
pop
fcomip
in
mov
pop
push
jbe
in
cmp
jne
dec
test
sahf
lock
ljmp
in
pop
loope
xor
repz
xor
fucomi
add
lcall
out
sbb
clc
cs
js
pushf
cltd
insb
sub
bound
aam
pop
lea
subl
jbe
lds
and
stos
push
stos
pop
hlt
call
notb
lcall
add
fistl
jp
mov
sbb
add
inc
push
fistl
pushf
jnp
cmp
or
sbb
shl
aad
jecxz
and
int
and
mov
aaa
push
shll
sub
rclb
mov
dec
shll
fistpll
fucomi
mov
push
dec
int3
add
push
sub
sub
or
fucomi
aas
int
fisttps
dec
test
in
push
xor
sarl
dec
lds
repz
and
xor
leave
jo
and
into
mov
pop
lret
stos
test
xor
clc
enter
jae
cmp
cmp
mov
xchg
push
push
inc
mov
imul
test
lret
pop
paddsb
mov
lea
out
mov
icebp
xchg
inc
mov
je
insb
out
and
int
jne
test
inc
push
push
outsl
cmp
fs
and
cltd
inc
jmp
cmp
jne
movsb
pop
push
mov
into
adc
jb
lock
leave
xor
mov
cmp
lock
lcall
xor
frstor
mov
sbbb
gs
push
adc
das
cmp
push
out
lret
aad
das
pop
fsubrs
sub
mov
and
mov
pop
jp
sub
jbe
repz
mov
xchg
enter
hlt
jb
cmpb
addr16
test
fs
in
cmpsl
mov
push
pushf
cmp
mov
jle
pop
add
push
pop
jmp
dec
xchg
pop
adc
add
mov
scas
push
aas
cmp
test
and
repz
movsl
lea
aas
or
in
mov
pop
fstpt
es
in
adc
xchg
jno
shl
scas
sar
sub
xor
cmp
jno
leave
jb
aad
dec
cmp
xor
fdivr
push
lahf
loop
ret
push
nop
push
mov
sbbl
jno
jg
loope
pop
mov
fs
int
test
arpl
push
pop
jnp
adc
frstor
in
fwait
sbb
rorb
cmpb
xlat
mov
cmc
sub
dec
mov
adc
xor
in
pop
sti
inc
push
ljmp
rclb
fwait
mov
inc
ret
xchg
mov
dec
mov
xchg
scas
pop
mov
add
adc
xlat
scas
imul
mov
sbb
jp
aaa
dec
mov
xchg
cltd
das
push
enter
imul
pop
inc
inc
pop
xlat
add
push
push
push
cwtl
loope
in
cltd
fs
in
push
es
ja
fisttpll
pop
inc
sub
inc
sub
popa
xlat
out
loop
sub
mov
jb
gs
andl
pusha
and
or
sbb
mov
cwtl
dec
std
jno
rolb
xor
movsl
jl
test
jbe
mov
xchg
cmpsb
dec
inc
cmp
std
sbb
sub
rcr
sub
stc
inc
scas
scas
gs
or
loop
mov
mov
xchg
cld
pop
out
popf
add
outsb
rcrl
mov
pop
test
out
sbb
lret
cmc
and
das
push
cwtl
adc
sub
mov
sbb
bound
lods
mov
xor
inc
pop
mov
in
sub
iret
pop
lods
sub
cwtl
sbb
shrl
mov
bound
xchg
cmp
xchg
inc
rcl
lock
mov
sbb
mov
mov
insl
aad
ret
cmc
xchg
int
cmp
adc
popa
push
push
and
imul
cmpsl
jmp
jb
in
jl
icebp
sbb
shrb
jmp
clc
lods
popa
lea
mov
leave
test
sub
push
jmp
jg
ja
cmp
mov
mov
sub
subl
mov
jno
lds
adc
push
mov
hlt
cli
scas
push
sub
cmp
sbb
repz
sub
fldenv
pop
xchg
test
xor
mov
ret
jge
cld
lcall
jne
mov
popf
aas
sbb
repz
push
xor
dec
pop
test
lret
mov
int3
push
scas
lret
cltd
jle
test
arpl
dec
rcl
xchg
daa
jp
rorl
adc
push
out
icebp
jp
xchg
xor
jo
xor
cmp
add
inc
push
inc
roll
iret
mov
sarb
mov
jo
xor
push
enter
es
pop
cmp
adc
loopne
lock
les
mov
loop
pop
scas
ljmp
or
sbbl
mov
in
test
lock
decb
es
add
cld
inc
add
and
pop
scas
fldt
push
int3
pop
pop
loop
lcall
cwtl
xor
and
xchg
cmp
lea
sub
push
cmpsb
dec
aas
push
jb
xor
imul
loope
mov
xchg
xchg
loop
ljmp
in
jge
mov
int3
inc
sub
mov
or
jmp
mov
cmp
testl
loop
sbb
sahf
loop
mov
sbb
mov
rcll
test
popf
scas
jle
mov
arpl
int
and
test
jnp
loopne
imul
xchg
pusha
mov
ds
das
jmp
or
add
aas
add
and
sbb
lcall
cmpsl
int
aaa
nop
push
or
movsl
push
or
outsb
neg
lcall
scas
push
scas
repnz
lcall
inc
sbb
ret
add
xor
xchg
jge
xor
pop
loop
lahf
pusha
pop
imul
mov
nop
pop
pop
out
mov
pop
testb
jne
dec
daa
stc
push
hlt
or
dec
hlt
popa
cmp
mov
das
ss
lods
jp
pop
inc
mov
or
test
or
and
imul
popf
push
sahf
mov
outsb
bound
jp
loopne
dec
lods
sbb
ret
add
push
add
mov
adc
adc
xchg
add
sbb
aas
out
out
das
push
mov
xchg
xchg
in
xor
xchg
pusha
mov
mov
push
mov
mov
outsl
sbb
pop
shrl
mov
xchg
addr16
fisubrs
fsub
in
mov
mov
cltd
lea
cmp
sbb
dec
lods
xlat
hlt
inc
sbb
clts
jmp
enter
stos
xor
enter
or
adc
orb
cltd
mov
lds
outsb
outsb
mov
inc
sbb
inc
stos
scas
sar
sub
ljmp
ljmp
xchg
mov
cmp
lods
test
je
lret
jo
sbb
add
in
pop
sbb
dec
xor
push
push
fcmovne
and
jl
cmp
jno
mov
int
int
sbb
out
xor
div
mov
inc
stc
xor
mov
mov
int
lret
movsl
push
fimull
cmc
push
ret
mov
ret
adc
xchg
or
aad
pop
test
and
loop
jno
sbb
or
shll
pushf
or
repz
stos
int3
and
dec
push
lcall
mov
inc
mov
or
pop
int
mov
jecxz
mov
outsl
enter
movsb
fsts
push
pop
lock
leave
mov
add
andb
loop
fs
pop
mov
outsb
jecxz
test
add
sbb
fucom
je
test
cwtl
mov
lret
pop
push
cld
ret
xor
out
jg
addr16
enter
shlb
add
gs
in
adc
rorl
push
mov
fstpl
jb
orl
inc
or
add
mov
sbb
inc
xor
sub
dec
imul
pop
push
push
jb
in
idivl
adc
and
or
aam
addb
sti
daa
out
xchg
lret
sub
inc
cmp
inc
fisubs
cmpsb
sbb
and
cld
jne
dec
mov
inc
xchg
aas
adc
cmovbe
cltd
movsl
mov
gs
inc
ljmp
ljmp
cwtl
push
stos
fdivr
mov
push
sbb
test
stc
and
shll
js
roll
xchg
push
push
mov
in
sub
aam
outsl
mov
push
and
enter
push
jb
iret
jg
mov
xlat
imul
xchg
or
pop
mov
and
jb
insb
cmp
pop
dec
push
ljmp
lea
xor
lahf
jg
daa
mov
jg
loope
mov
lea
jne
das
fdivrl
jmp
ja
mov
stos
pop
testb
in
mul
mov
xor
out
sub
insb
cli
cmp
jb
pop
and
lock
lds
mov
sarb
popf
movsb
and
inc
imul
inc
xor
add
push
pusha
scas
sarb
pop
adc
jae
mov
popa
xchg
mov
xchg
xor
repnz
shr
dec
xchg
shl
push
loope
xchg
les
icebp
imul
sub
mov
shrb
stos
in
xchg
int3
mov
push
bound
pushf
and
imul
push
push
sti
shll
pop
xchg
inc
xchg
aas
mov
inc
or
shrb
sub
je
lcall
fadd
mov
ret
push
scas
add
mov
loop
fisubl
jp
int
inc
push
add
pop
mov
ret
and
data16
push
jge
fldl
je
cmpsl
gs
push
or
in
push
ret
sahf
repnz
xchg
push
cmc
or
test
jo
out
xor
mov
icebp
fdivrs
sbb
pop
mov
sub
in
mov
sbb
pop
xor
ret
aad
ficoml
jp
stc
and
popa
outsb
aam
in
scas
add
jae
cltd
pop
push
stos
xor
or
mov
int3
insb
mov
or
pop
pop
outsb
or
mov
es
and
add
xchg
jecxz
and
mov
mov
jl
jp
pop
cmp
popf
and
lret
pusha
mov
imul
pminsw
fsts
or
push
jb
sub
push
testb
lods
gs
push
cmc
sarb
out
inc
jle
and
mov
cmpsl
lods
push
sbb
iret
jecxz
jnp
and
bound
iret
mov
leave
jge
jae
movsl
pop
push
icebp
lahf
dec
lods
dec
pop
orb
daa
mov
lcall
ja
cmpsb
ret
jb
mov
push
xor
enter
mov
lret
inc
cmp
jb
push
lahf
lods
test
int
or
into
lret
dec
pop
xchg
sub
jbe
push
addr16
imul
xchg
insb
cmc
fisubs
hlt
mov
mov
mov
test
ret
loopne
dec
movsl
out
and
cltd
in
inc
xchg
jecxz
xor
push
outsl
jnp
inc
sub
push
test
jp
inc
cmp
sbb
cli
mov
sbb
lahf
movsb
jge
cld
into
pop
in
movsb
pop
xchg
jecxz
xchg
xchg
mov
loope
push
xchg
and
inc
cmc
add
xchg
pop
cs
push
inc
push
or
push
imul
mov
cmpsl
cmp
dec
subl
mov
out
push
gs
out
add
mov
test
sti
push
sahf
ret
push
sub
mov
loopne
inc
sbb
dec
lods
adc
stos
inc
fbld
sub
jae
inc
pushf
lcall
xor
xchg
ljmp
or
aaa
out
cmpsl
lcall
test
cwtl
jp
sub
loope
mov
addr16
cmpsb
push
repz
out
jl
pop
pop
jns
and
jnp
sub
je
jg
mov
outsl
daa
pop
pop
and
push
int3
das
push
mov
and
sub
movsb
shr
test
mov
mov
mov
clc
loop
lea
pusha
mov
nop
fsubrl
xor
inc
dec
push
outsb
mov
loope
hlt
mov
leave
and
pop
push
out
lock
lcall
mov
adc
mov
test
notl
xchg
loop
mov
sub
cltd
ljmp
outsl
ret
mov
inc
mov
cmp
callw
cmp
mov
nop
jno
inc
mov
mov
xchg
stc
xor
cld
cmp
aas
outsl
mov
js
xchg
and
dec
inc
stc
pushf
or
pop
out
jns
leave
and
xor
jb
in
pop
push
and
outsb
mov
push
xchg
outsb
fwait
mov
sarb
hlt
jns
jecxz
xchg
jae
mov
adc
test
jo
inc
insb
add
add
subb
jnp
and
out
or
jp
inc
lahf
cmc
flds
stos
imul
xchg
mov
xchg
popa
xor
mov
xchg
push
adc
fisubrs
and
js
lcall
inc
rcl
push
or
sub
dec
dec
test
repz
add
cmpl
rcrl
hlt
fcoml
sbb
jne
mov
in
sbb
mov
ja
xor
sbb
in
iret
xor
mov
push
lahf
addr16
imul
lds
movsb
jmp
imul
outsl
mov
lret
pop
pop
call
repnz
sbb
imul
ret
jge
mov
mov
jne
test
rorl
ficomps
xor
fnstenv
add
and
and
push
popf
cmc
sbb
pop
push
or
mov
insl
aaa
mov
aam
pop
and
adc
ljmp
shll
mov
sub
scas
jp
outsl
mov
xor
inc
jnp
inc
stos
inc
mov
push
dec
in
mov
sbb
icebp
cld
inc
dec
xchg
mov
enter
sub
orl
xchg
ret
xchg
idiv
fwait
fs
fwait
clc
pop
fsubl
fstl
inc
rcrb
mov
mov
push
daa
mov
shll
nop
jnp
adc
add
push
or
pop
mov
outsb
or
jne
mov
or
gs
push
stos
mov
push
cmp
xchg
jae
or
shll
scas
test
in
jbe
mov
cli
jmp
cld
pop
stos
mov
fnsave
clc
adc
dec
int
fisttpl
fldenv
mov
and
pop
or
sbb
or
inc
call
pop
popf
mov
dec
inc
fdivrl
mov
lods
out
loop
jbe
dec
inc
xor
sarl
cmp
cmc
jne
cmp
enter
cmp
dec
xor
cwtl
cmp
fcoms
mov
and
push
outsl
push
out
sub
or
inc
mov
push
cmc
es
xchg
push
mov
add
ds
rorb
mov
mov
into
mov
lret
test
push
out
or
lret
push
test
insl
icebp
inc
int
cmpsl
push
stos
dec
sbb
mov
ret
pop
cmc
pop
push
xchg
repz
inc
xlat
and
out
stos
scas
jp
push
insl
inc
jae
ja
dec
cmc
jbe
push
cmp
lret
jnp
xor
ss
xchg
inc
rcll
into
or
aas
sbb
inc
mov
pop
cmp
or
std
ret
jl
xchg
cmp
xchg
inc
aaa
dec
ret
add
test
pushf
push
rcrb
pushw
out
dec
ds
aad
xor
ljmp
dec
js
pusha
push
ss
xor
dec
cmp
mov
fistl
sub
stc
inc
push
inc
clc
ficompl
inc
cwtl
mov
out
adc
outsl
sbb
shr
test
add
inc
jmp
ljmp
mov
rcr
lds
cld
lods
addr16
inc
xorb
fdiv
mov
mov
push
mov
das
adc
push
call
or
pop
xchg
sub
icebp
sub
push
test
insl
ljmp
jb
adc
mov
dec
in
cmpsl
mov
mov
sub
mov
in
mov
flds
fnstenv
cmp
imul
aam
ljmp
push
aam
popf
mov
mov
js
in
insl
push
push
lods
sub
aaa
jns
por
push
jbe
int
int
faddl
imul
add
enter
mov
cmp
dec
bound
popa
jle
dec
sub
push
je
dec
push
dec
xor
aam
fmuls
add
xor
push
jge
jo
mov
repz
in
ja
or
cs
and
cmc
outsl
add
dec
stos
stos
arpl
fwait
pop
or
push
int
adc
int
push
mov
out
dec
and
or
ds
dec
dec
xchg
dec
jp
movsb
or
mov
jnp
add
mov
add
aaa
mov
outsb
pop
xor
arpl
popa
sub
les
mov
pop
fistps
mov
pop
cli
push
adc
pop
lds
add
push
or
je
mov
pop
rol
mov
subb
in
fs
pop
call
and
lds
insl
add
add
in
jo
shll
shlb
sti
ljmp
fiadds
mov
addr16
ja
add
mov
subl
add
movsl
rorb
pop
jecxz
in
inc
pop
lahf
dec
out
inc
cmpsl
dec
add
add
fbstp
xor
push
mov
bound
sbb
aad
lods
xor
add
xlat
in
adc
xchg
xor
pop
jp
add
add
rcrl
lahf
xchg
scas
sarl
mov
pop
ljmp
jg
ds
cmpl
jb
lcall
mov
inc
lea
mov
pop
stos
dec
jb
or
inc
and
push
rcrl
aam
ret
mov
push
cltd
addr16
jae
lcall
cltd
mov
cwtl
pop
in
cwtl
jmp
push
mov
mov
xchg
sahf
daa
adc
sub
dec
xor
xor
fsubl
xchg
lods
mov
int
xchg
and
push
rcll
pop
mov
and
popl
mov
cmpsb
sub
clc
cwtl
mov
lds
jmp
stc
mov
bound
add
sahf
add
cmp
mov
test
ret
sub
shrl
cli
add
jg
cmpb
pop
xchg
icebp
xor
rcr
imul
das
ret
add
inc
xchg
xchg
jmp
outsb
test
jle
and
sti
out
aad
inc
daa
gs
mov
inc
inc
ja
int
movsl
cld
lods
sti
mov
ss
sbb
pop
cmpsb
loope
mov
imul
adc
shrb
psrad
push
pop
lds
stos
jbe
cmp
lods
push
testb
xchg
xchg
or
pop
sub
mov
mov
xchg
shl
inc
js
in
inc
lods
mov
ss
js
cmp
mov
and
and
xchg
rolb
dec
xor
lock
pop
pop
mov
push
xchg
or
inc
mov
cmp
imul
sbb
and
jo
popa
adc
mov
decl
sahf
dec
sub
cld
rcll
pushf
jb
and
inc
mov
int3
cs
or
outsb
add
mull
xor
leave
cld
xor
jp
and
in
popa
enter
mov
cltd
xchg
jns
inc
and
or
xor
xor
in
dec
mov
sbb
pop
ds
xchg
dec
je
repnz
adc
push
je
and
int3
mov
sbb
jns
lds
lea
sti
rcr
dec
sahf
xor
jl
mov
mov
aas
and
and
jb
push
aad
dec
push
pop
loope
sahf
negb
test
mov
pop
repnz
xor
mov
test
fsubrs
adc
mov
pop
add
fs
out
repz
stos
dec
jecxz
inc
jmp
imul
jns
xchg
cmp
mov
mov
lret
mov
das
fs
orb
fidivrs
or
jmp
or
mov
inc
mov
and
sarb
mov
pop
fmull
mov
mov
jge
or
inc
jne
adc
xchg
int3
ret
rcll
mov
sbb
movsb
int
fldt
out
cmp
frstor
adc
mov
aam
js
call
ffreep
idivl
sub
aaa
push
and
ljmp
push
cltd
inc
inc
jmp
jg
sub
shll
jle
pusha
mov
subb
pop
mov
mov
pcmpeqd
adc
shr
cwtl
popa
inc
push
arpl
jnp
push
imul
and
jmp
mov
repnz
leave
dec
jmp
dec
arpl
mov
cli
rclb
adc
in
jns
xchg
xlat
out
add
jo
popf
mov
cmc
movsl
jecxz
stos
sarl
add
adc
ja
inc
scas
into
daa
daa
orl
dec
add
test
push
imul
sub
dec
leave
lea
mov
rcl
mov
aam
cwtl
lret
jnp
jne
cld
shlb
out
push
lods
jg
call
fadds
lods
cmp
sub
xchg
push
sbb
ret
inc
dec
and
mov
js
test
test
sbb
iret
lret
push
aam
pop
inc
or
push
xchg
cmp
mov
or
sub
jb
repz
lahf
mov
lea
test
clc
pop
adc
mov
jmp
in
or
jns
mov
cmpsl
jae
cmp
jp
mov
ljmp
clc
leave
pop
mov
or
inc
adc
push
loopne
icebp
lret
pop
mov
and
pop
pop
hlt
push
loope
std
xor
cld
add
icebp
test
pop
lret
and
cmp
mov
daa
and
aam
lods
adc
adc
icebp
and
shll
jmp
aad
les
into
insl
loope
dec
dec
cmpsl
adc
shll
bound
lahf
fcompl
xchg
jae
pop
adc
xchg
xchg
loop
scas
popf
das
cmp
cmpsl
cmpsb
dec
jmp
sub
pop
pushl
jmp
cmp
add
mov
xchg
push
in
dec
mov
test
inc
shll
inc
push
push
cmp
cmpsl
xorb
mov
pop
mov
mov
sub
lds
xchg
and
lods
fldcw
ljmp
fildll
push
addr16
arpl
add
cwtl
test
test
jbe
aaa
sbbb
addr16
in
int3
data16
add
jmp
xor
rorb
test
fcmove
cmp
dec
push
xchg
fistpl
ds
bound
fcoms
inc
sub
pop
adc
push
adc
xor
inc
in
incl
add
pushf
sbb
out
jmp
lret
jl
sahf
js
outsl
pop
xor
ljmp
popf
pop
js
fisubl
adc
xchg
cmp
mov
pushf
nop
pop
or
xchg
mov
mov
jl
jecxz
push
push
or
sub
outsb
sbb
fcomi
das
into
cmc
dec
jb
popa
push
mov
push
outsl
mov
pop
es
xchg
sub
ret
in
xchg
in
xor
loope
mov
lea
das
xchg
dec
andl
test
insb
inc
adc
push
sub
push
sti
dec
cwtl
adc
lea
xor
cli
mov
push
test
movb
mov
test
bound
stc
xor
movsl
fucomp
jl
push
es
mov
sbb
inc
jmp
pop
or
jp
pop
in
sub
fstpl
or
dec
aaa
cltd
add
out
mov
adc
fsubrl
xchg
stos
mov
sub
pop
mov
dec
mov
cmp
xchg
daa
push
icebp
xor
lds
sbb
cmc
mov
add
movsl
scas
adc
push
imul
repz
jmp
div
and
adc
jae
or
cmp
inc
stos
test
faddl
roll
loopne
fcmovbe
dec
push
dec
mov
fs
xor
xchg
jno
xchg
fs
mov
movsb
sub
xchg
add
idivb
ja
stos
jge
ds
xchg
sbbb
or
ljmp
in
inc
xor
and
mov
or
loopne
adc
divl
leave
scas
mov
clc
rcrb
cmpsl
sbb
jae
cmpsb
cmpsb
loope
pushf
sub
mov
in
in
arpl
call
inc
std
insb
in
jl
outsb
xchg
add
jmp
gs
mov
mov
int
cli
add
mov
jne
push
iret
mov
mov
sbb
aaa
lods
inc
xor
dec
push
outsl
xchg
and
cvtps2pi
mov
push
sub
lahf
stos
sbb
iret
in
ficoms
popl
decb
std
push
xor
inc
or
mov
jle
les
icebp
pop
jne
mov
xor
iret
ret
aas
xchg
xor
mov
xchg
jo
mov
add
dec
mov
rolb
xchg
popf
lret
mov
gs
or
gs
jl
pusha
or
jp
insb
add
into
dec
jns
or
imul
jno
es
jp
pop
mov
adc
jg
iret
pop
popa
call
lods
xor
fs
data16
notl
pop
pop
jg
out
js
sbb
imul
xchg
sbb
xchg
mov
stos
ljmp
mov
sub
add
lds
xchg
lahf
sub
inc
lret
mov
ss
int3
cmp
test
or
fcoms
pop
add
iret
cmp
pop
call
pop
jno
sbb
rcrl
data16
outsb
pop
xchg
cmp
mov
mov
adc
pop
sub
inc
lret
data16
push
mov
insb
insb
mov
out
daa
test
and
je
dec
jmp
xor
xchg
int
mov
mov
jae
cmp
out
aam
xchg
push
and
out
sub
sbb
fldenv
jmp
mov
in
out
cmc
gs
insl
insl
aad
sbb
adc
jnp
fdivs
dec
movsb
orb
fcoms
mov
dec
inc
popf
testb
enter
imulb
inc
jo
push
testb
lahf
out
sub
int
out
cmp
std
or
sub
sub
mov
add
aas
mov
and
sbb
inc
icebp
in
divb
mov
scas
fistpl
fs
cmp
lds
out
jmp
push
and
ljmp
cmp
cwtl
jmp
insb
mov
in
fmull
lds
xor
clc
fmul
jae
insl
jbe
xor
xchg
mov
mov
xchg
leave
mov
push
scas
push
cmpsl
rorl
xchg
shlb
sub
cld
pop
int3
lahf
push
sub
and
pushf
push
xlat
or
pop
pop
mov
jp
lahf
mov
movsb
test
insb
fdiv
sub
outsb
sbb
add
adc
push
lea
cmp
sahf
add
divb
push
sbb
hlt
sti
jnp
pop
mov
insb
leave
push
in
inc
lods
adc
scas
mov
ss
sub
in
push
jmp
mov
push
dec
xchg
or
cwtl
icebp
jle
and
sbb
cwtl
ret
cmpsb
outsl
fidivrl
jecxz
mov
rorw
lock
aam
push
mov
add
mov
repz
xlat
xchg
jno
daa
mov
jmp
mov
scas
hlt
xchg
push
xor
pop
cltd
pop
jae
pop
js
or
push
int
pop
cmp
sbb
fcoml
push
pushf
in
xchg
pop
mov
jae
jbe
xchg
cwtl
bound
movsb
mov
daa
mov
in
mov
lret
adc
in
daa
jb
in
scas
mov
dec
jle
inc
inc
cwtl
jno
cli
jns
shrb
mov
and
cltd
cmp
in
push
jns
jmp
and
pop
adc
mov
xchg
xchg
push
inc
mov
inc
pop
add
lahf
adcb
das
push
mov
out
dec
aaa
and
pop
mov
lods
sbb
lcall
jnp
addb
jns
outsb
loopne
fxtract
and
sub
adc
das
sbb
arpl
ret
or
pop
insb
mov
shl
enter
mov
mov
dec
mov
inc
repz
mov
rorb
pop
cs
jl
fstps
in
pop
sbb
js
and
and
pop
or
les
imul
jge
add
push
das
add
add
mov
test
push
adc
pop
sahf
and
cmpsl
xchg
or
repz
dec
aaa
test
mov
clc
sub
outsl
popf
push
imul
adc
loope
out
cltd
xchg
add
jae
push
xor
add
sbb
cltd
sbb
in
adc
adc
or
sti
and
mov
imul
sub
inc
lcall
inc
imul
xchg
cmc
lock
vmread
out
sbb
jns
push
pusha
mov
stc
cmp
mov
mov
cmpsb
pop
cwtl
ss
adc
jae
mov
nop
push
stos
dec
sub
lods
mov
jb
or
imul
lret
cmp
sti
and
xchg
push
adc
scas
dec
xchg
dec
jge
cmp
xchg
cmp
add
loopne
gs
hlt
out
dec
inc
dec
enter
iret
mov
mov
dec
mov
popf
jae
push
add
es
call
mov
test
repnz
fsts
ds
mov
cmp
lret
stc
out
jmp
pop
sbb
lods
fisubrs
adc
cltd
fdivp
adc
aaa
xchg
mov
mov
mov
inc
std
cmpsl
fdivs
cmp
or
adc
xorb
adc
mov
or
insb
movsl
sub
in
jl
arpl
and
fisubs
mov
movsl
call
rcll
popa
mov
les
test
out
inc
repnz
cmp
jecxz
push
rolb
jne
pusha
xchg
mov
popf
scas
mov
movsb
ds
xlat
push
push
add
mov
xchg
pusha
xlat
hlt
call
lcall
repz
jne
adc
sarl
addr16
push
idivb
subl
push
cwtl
data16
push
movsb
jg
nop
and
push
or
dec
int3
jle
and
pop
scas
or
mov
test
cmpsl
or
add
and
xchg
or
xlat
mov
and
ror
dec
jecxz
ds
jne
int3
lret
push
clc
add
push
xchg
sub
mov
jecxz
data16
nop
dec
push
mov
out
sub
addr16
outsl
pop
repz
mov
mov
add
getsec
cmp
push
iret
xor
outsb
xlat
jo
inc
jle
lahf
fidivl
xchg
orl
add
ljmp
xor
popf
mov
call
cwtl
neg
movsb
sub
dec
or
repnz
mov
jbe
cltd
imul
mov
mov
arpl
cltd
dec
lcall
push
lcall
mov
sbb
icebp
mov
stc
pop
popf
sub
mov
push
imulb
xor
mov
jo
or
insl
popa
dec
in
iret
cmp
lcall
movsl
and
outsb
gs
test
lds
out
call
or
test
stc
jecxz
and
mov
in
ret
popa
mov
push
sub
mov
in
pop
jmp
fdivrs
and
or
fidivrl
insb
enter
fildll
and
mov
nop
icebp
setl
lea
and
add
adc
adc
cld
or
sbb
pop
pop
mov
sub
lcall
out
cmp
lds
push
jecxz
sahf
lahf
mov
sub
sub
mov
or
lahf
jns
dec
add
stos
rolb
cmc
cwtl
iret
in
push
stos
sub
pop
dec
xchg
pop
add
and
adc
add
mov
add
adc
cmp
pop
jle
pop
or
cwtl
aas
mov
lahf
daa
or
es
pop
push
or
sub
xor
xchg
lods
nop
loop
sub
jg
or
ret
std
jb
lock
fisttpll
mov
jg
jnp
dec
push
cmp
mov
loop
aaa
sbbb
push
stc
into
cltd
loope
cmp
leave
push
icebp
dec
lcall
push
sub
inc
or
or
xor
and
repz
xchg
scas
pop
inc
rclb
scas
sbb
imul
push
cmp
cli
sbb
cmp
pop
cld
lahf
cmp
inc
xor
aad
das
mov
and
test
packssdw
sar
popl
call
in
inc
dec
cli
lea
adc
jb
lds
add
test
inc
ds
jg
shr
inc
fcoml
stc
sbb
out
jl
nop
cmp
leave
add
mov
mov
sbb
adc
pop
popf
int3
stc
jge
pusha
adc
faddp
or
inc
out
push
repnz
xor
mov
dec
cmp
or
sub
fdivl
lcall
or
incl
or
sub
addb
mov
dec
iret
imul
repnz
mov
jecxz
out
stos
add
sti
and
dec
jge
jo
movsl
lods
push
jo
mov
sbbl
push
xchg
mov
cli
stos
insl
mov
jb
daa
fisttpll
mov
or
lret
dec
setp
loop
pushf
jno
mov
push
call
cmp
sub
jle
das
movsb
mov
pop
lret
xor
xchg
xor
popa
hlt
jmp
or
pop
out
mov
cwtl
xor
sbb
outsl
lods
push
add
les
mov
inc
ja
mov
dec
sub
dec
mov
rolb
push
mov
enter
fdivrs
pop
push
call
pusha
cs
jne
int3
andb
push
and
clc
pop
lock
cmpb
lret
daa
lods
out
inc
or
iret
or
sbb
or
xlat
xchg
ret
or
inc
push
jb
sbb
xor
movsb
jno
pop
pushf
xor
stos
and
mov
in
sti
sbb
fdivrl
xchg
movsl
dec
dec
inc
std
or
pop
outsb
pop
jg
mov
push
mov
jnp
adc
frstor
popa
negb
js
into
cmc
pop
stc
push
dec
xlat
sbb
test
mov
mov
mov
ret
jb
lock
adc
mov
arpl
out
jmp
js
pop
pop
jg
mov
mov
cltd
inc
adc
pop
fistpll
pop
sbb
mov
test
jmp
cmp
ss
or
jnp
or
mov
scas
test
push
mov
stc
sti
das
repz
daa
aaa
push
jge
xor
jb
rcll
cmc
xchg
or
or
add
or
dec
sub
pop
clc
xchg
imul
test
loopne
add
scas
shrl
jns
cmp
add
movsl
push
and
push
jb
pop
push
call
xchg
imul
insl
cmp
stos
repz
outsl
pop
jge
repz
lcall
xorl
push
xchg
lds
sub
mov
mov
loope
mov
popa
mov
shlb
mov
xor
mov
clc
insl
inc
jo
arpl
fs
and
es
popa
mov
lds
inc
loopne
xchg
and
push
xchg
ds
xor
leave
dec
clc
mov
mov
jle
sbb
pushf
xchg
mov
push
inc
in
and
inc
rclb
js
push
inc
cmpsb
mov
hlt
popw
in
mov
shlb
xchg
mov
in
xchg
sti
adc
pushf
xor
ds
push
sub
out
iret
std
xchg
sbbb
push
cmp
jecxz
push
jno
jge
sbb
adc
push
dec
into
sub
jl
addb
push
repnz
mov
les
add
out
bound
fidivl
push
push
xor
xor
pop
cltd
imul
dec
cmp
out
jecxz
mov
je
lods
fwait
std
loop
frstor
adc
jp
dec
jno
lods
inc
push
xor
dec
rorb
clc
je
cli
pop
xchg
mov
pop
test
push
fidivs
jp
lcall
loope
mov
lcall
ret
or
pop
mov
xor
mov
into
push
outsl
filds
mov
add
dec
adc
inc
ret
outsb
int
hlt
cs
mov
hlt
push
dec
cs
mov
jmp
lret
sbb
xor
cmc
es
jp
jns
lea
mov
push
mov
cs
dec
mov
jno
xor
sbb
jb
lods
addb
cld
add
push
mov
ljmp
or
mov
jb
mov
push
push
stc
lret
lahf
lock
sbb
cmp
mov
or
les
adc
je,pt
call
out
mov
add
adc
cmpsb
scas
ret
xchg
jne
dec
sbb
shll
pusha
xchg
fwait
sbb
cmp
stc
stos
pop
mov
mov
xchg
lret
loop
vandnps
and
mov
loopne
add
adc
cmp
cmc
out
pushf
daa
lock
rorb
imul
xor
sub
push
out
mov
movsb
test
cmp
add
fdivrp
xor
bound
xorl
mov
pop
push
lret
sahf
xchg
out
bound
mov
add
inc
sub
push
jmp
push
fwait
out
jecxz
cmp
pushf
test
mov
repz
mov
cmp
shl
jp
push
je
ljmp
xor
movl
adc
mov
lods
lret
or
fadds
daa
imull
push
jmp
insl
test
mov
push
mov
mov
nop
cmp
lods
out
or
pop
loopne
pop
add
jae
hlt
cmc
pop
insl
pop
in
cltd
or
jbe
insb
shll
jmp
cmp
sbb
inc
mov
pop
lds
pop
fcoml
aam
daa
repnz
mov
and
inc
adc
pushf
imul
cmp
cld
cmpl
adc
sarl
iret
mov
lds
adcl
sub
add
rolb
adc
test
adc
sbb
shlb
out
dec
push
repnz
mov
dec
aas
inc
mov
and
es
cmp
test
lea
cmc
dec
sbb
cmpsb
jnp
shl
icebp
ds
jnp
pop
test
orb
mov
in
mov
insb
pop
jmp
ja
testb
add
add
in
mov
mov
add
je
les
cmp
movsb
add
pop
rorl
mov
xchg
push
icebp
jg
lret
push
std
sub
icebp
shrl
ss
shl
xcrypt-ofb
cmpsl
stos
push
loope
xchg
mov
add
neg
inc
clc
scas
pop
stos
shll
jne,pt
popa
pop
shlb
or
sub
sbb
jno
sub
inc
ljmp
push
jmp
push
push
xchg
pop
adc
push
lock
out
mov
das
sbb
jmp
popa
roll
test
inc
push
jae
cmp
cmp
push
push
mov
bound
shufps
add
xor
daa
aad
mov
sbb
ffree
loopne
es
test
pusha
push
jne
pop
data16
je
enter
sub
outsl
sbb
les
inc
or
dec
lret
pop
in
sti
fsub
jne
pop
pop
mov
stc
stc
cmp
ljmp
movq
in
jo
dec
scas
push
push
mov
add
mov
push
or
sbb
cmp
pop
push
jb
lods
in
cmp
dec
pop
filds
test
adc
dec
fnsave
or
xchg
push
cmp
add
cli
data16
adc
test
or
cmc
push
sbb
inc
scas
cmc
sub
jbe
sti
je
and
out
ljmp
add
push
in
loop
test
stos
jnp
inc
pop
xor
stc
jns
push
mov
push
jecxz
fs
xor
push
cmp
call
fdivrl
das
and
mov
and
mov
scas
push
shrl
pop
lcall
movsl
sub
dec
xor
not
loop
fcomip
movsb
cli
out
mov
test
and
xor
fs
inc
mov
rcr
inc
addr16
popf
xchg
popa
sbb
jmp
xchg
cmp
mov
sbb
lods
push
add
sbb
rcl
sbb
aad
pusha
dec
adc
or
mov
fsts
adc
movsb
or
mov
cwtl
and
mov
jo
push
and
push
jno
add
push
insl
cltd
call
jle
sub
cltd
pop
pop
in
dec
fcompl
mov
cmp
sti
call
sbb
jp
mov
mov
adc
cmp
int3
jno
add
imul
mov
mov
jns
dec
mov
sti
mov
stos
cli
loopne
cmp
adc
jnp
cmpsb
jne
adc
pop
dec
int3
fildl
test
adc
fistpll
sbbl
xor
insb
std
xor
xor
inc
mov
adc
sub
jp
push
xchg
test
xor
xchg
andb
cmc
rcll
lret
pop
sar
dec
outsl
shrb
repz
pushf
sub
xor
or
jp
inc
pop
rorb
push
jne
loope
push
into
enter
lds
repz
ja
jno
std
sbb
and
add
push
push
and
push
andl
imul
ss
jle
cmp
test
shrl
add
dec
fwait
ss
mov
and
stos
ds
bound
pop
insb
jne
out
xlat
ja
mov
addr16
pop
movsb
mov
dec
push
out
fcmovnbe
dec
cmc
lods
cmp
dec
shrl
add
stos
cmpsl
adc
mov
jb
inc
ljmp
push
and
inc
sbb
sub
dec
test
outsl
cmp
repnz
adc
int3
push
mov
cmpb
mov
icebp
pop
pop
imul
push
out
jmp
in
mov
mov
fstp
in
or
js
pop
nop
fcmovu
inc
jecxz
mov
push
pop
lock
adc
push
outsb
mov
lcall
mov
sbb
lock
adc
loop
lock
add
cmpsl
out
pushf
pop
push
lret
sbb
push
push
rorl
xchg
mov
dec
shlb
mov
into
jo
les
call
dec
movsb
iret
lret
add
xor
and
into
ret
jl
testb
sbb
rorb
sub
or
xchg
lret
or
lret
jge
ror
jae
pop
add
out
push
enter
lock
xchg
pusha
jb
push
mov
sub
inc
aas
add
test
cld
fwait
ljmp
xlat
and
out
push
pop
mov
call
orb
das
lea
and
pop
jl
cmpb
mov
fnstsw
jl
nop
sub
xor
std
push
jnp
push
out
clc
lret
into
leave
clc
dec
repnz
jge
inc
inc
cs
push
xchg
aam
mov
out
cltd
mov
mov
dec
subb
int
cs
test
jecxz
adc
cmp
or
fsts
push
and
xlat
dec
cli
push
test
add
insl
jns
adc
fs
ljmp
jne
loop
xor
mov
aas
inc
idiv
pusha
cmp
xchg
mov
outsl
dec
xlat
lcall
pop
or
imul
add
push
mov
je
inc
ret
inc
dec
mov
in
stos
lcall
cltd
out
push
adc
das
ss
xor
add
and
xchg
scas
std
or
cs
mov
mov
adcb
cli
in
dec
dec
mov
out
dec
push
push
dec
cmc
insb
or
push
pop
movsl
subb
sub
mov
pop
inc
inc
mov
pop
xchg
sbb
ficoms
addr16
xor
lock
fistps
xchg
pop
pop
fdivrs
imul
pop
fdivrp
dec
mov
ljmp
pop
test
add
mov
jae
push
pop
addb
fnstenv
xchg
mov
cmp
sub
je
loop
cmp
sbb
xchg
pushl
adc
les
mov
sub
enter
lcall
stos
mov
mov
jg
rcll
cmp
add
in
outsl
rclb
aas
mov
mov
fwait
out
push
enter
mov
sub
maxps
dec
push
divb
comiss
jge
cmc
dec
test
sbb
call
push
jbe
ret
xchg
xchg
dec
stc
sbb
lods
pop
xchg
mov
cmc
fs
out
fcmovu
inc
adc
jnp
lock
mov
shlb
adc
mov
sbb
movsl
sub
sbb
dec
lahf
stc
and
mov
ja
movsl
xchg
add
arpl
push
inc
xor
mov
sti
push
fstl
aam
mov
jae
xchg
or
stos
inc
xor
cld
push
push
adc
inc
and
pop
addr16
pop
jnp
add
scas
and
leave
xchg
mov
and
imul
sbb
pop
adc
xlat
push
iret
ljmp
cwtl
push
xor
jg
push
dec
les
outsl
pop
mov
les
pop
xchg
jecxz
ror
lea
add
fdivrl
xor
mov
cmp
mov
hlt
es
sbb
mov
adc
pop
sub
clc
jns
ja
mov
idivb
stc
ja
pop
addr16
mov
std
js
mov
jno
or
dec
addl
xchg
xchg
mov
cltd
imul
icebp
pop
movsb
fildll
js
mov
rclb
mov
jle
sub
push
mov
arpl
imul
decb
jb
push
repz
arpl
inc
xchg
mov
retw
icebp
xchg
movsl
aaa
sbb
clc
xchg
pop
jmp
call
lods
scas
loopne
sub
addl
lea
hlt
xor
and
mov
scas
sbb
hlt
fsubs
cmc
out
sbb
out
and
inc
cmp
loop
pop
pop
xchg
negb
mov
ljmp
int3
shrl
sbb
hlt
sub
cmp
lods
aaa
push
inc
pusha
stc
push
outsl
test
cmp
cmp
xlat
int3
loope
lahf
mov
inc
shl
out
push
pop
lods
dec
or
hlt
pop
push
mov
or
xor
stos
mov
mov
cmc
or
cmp
mov
mov
loop
jo
xchg
jg
popf
jecxz
dec
and
cmp
ret
in
sub
cmp
into
or
dec
xor
stos
xor
pop
fwait
mov
adc
push
push
lds
pop
out
mov
add
out
mov
push
xchg
pop
or
test
xor
mov
rcrb
dec
movsw
inc
cmc
out
gs
dec
bound
mov
pushf
xor
sti
xor
rcrb
ja
test
stos
or
push
scas
push
in
popa
push
lahf
addl
mov
dec
pop
pushf
lods
pop
and
sub
jnp
xchg
test
dec
scas
mov
jbe
add
test
clc
out
mov
es
add
cmp
loopne
je
jo
ds
or
cmp
sbb
jae
pushf
repz
adc
cmpl
test
push
out
out
fidivrl
cmp
gs
repz
dec
lock
push
push
ljmp
aad
popa
xor
push
ret
add
mov
jbe
push
das
ret
fadds
inc
pop
fbstp
cwtl
repnz
mov
or
ret
iret
arpl
in
insl
sub
jo
repnz
lea
shlb
sti
out
loope
jg
int
shlb
mov
test
sbb
add
test
or
das
jl
stc
xchg
pop
mov
pavgw
mov
sahf
gs
pop
xchg
aad
jb
cmp
fstps
lret
mov
mov
cmpsl
pop
out
mov
and
fwait
testb
jl
push
inc
pop
fimull
mov
mull
add
mov
and
ljmp
les
xorb
sub
xchg
pushf
ss
in
nop
scas
fcmovnu
mov
jb
jb
adc
negb
or
sbb
movsl
add
dec
mov
maskmovq
notl
jbe
fwait
mov
mov
inc
icebp
xor
aaa
ss
cmp
push
dec
dec
add
fsubrs
aaa
shl
jb
subb
sub
sbb
jmp
xor
sbb
pop
into
loope
or
mov
out
xchg
test
imul
pusha
sahf
mov
ficoml
pop
int
hlt
test
ret
jl
hlt
insl
rcll
fimuls
sbb
dec
pop
mov
sbb
outsl
popf
add
stos
sbb
push
outsl
adc
and
sub
cltd
test
jge
or
cs
xchg
push
mov
add
je
stc
add
or
outsb
cmp
push
push
clc
push
push
mov
xchg
sbb
xchg
ds
mov
or
nop
add
dec
jmp
sarb
inc
push
aam
rcrb
cli
out
rcl
mov
pop
out
orb
orb
jnp
adc
and
add
inc
aas
lcall
sub
xchg
loopne
cmp
bound
or
dec
mov
mov
out
ja
sbb
into
cmp
in
lret
scas
adc
stos
ret
cwtl
xchg
jno
push
lahf
fistpll
mov
jmp
fwait
xchg
pop
inc
add
jae
mov
and
in
addr16
test
cli
cmc
mov
and
and
ret
mov
jecxz
sbb
dec
xlat
dec
outsb
dec
sbb
cmp
insb
test
push
ljmp
int3
and
mov
lods
mov
pop
cmp
lret
aaa
nop
sub
cmp
xor
sahf
mov
adc
leave
fcomps
inc
lahf
pop
and
push
cmp
adc
lret
scas
fcmove
icebp
enter
cs
mov
pop
jmp
jne
sbb
aam
jl
push
jecxz
dec
aam
int
aas
and
mov
xlat
adc
push
data16
mov
adc
mov
jp
fwait
stc
lahf
lahf
jle
gs
mov
sbb
pop
pop
mov
test
xchg
dec
andl
pop
pop
ljmp
adc
sbb
pop
in
es
push
mov
les
add
jb
mov
das
jg
aaa
cmpsl
iret
addr16
pusha
std
inc
push
nop
gs
add
dec
cmp
mov
repz
dec
das
adc
pushf
jnp
rcrb
shl
cmpsl
mov
test
add
movsl
cmpl
dec
and
and
je
push
movsb
dec
cld
ret
shr
cs
xor
xor
xchg
aas
adc
lret
jno
ror
int
loop
sub
cmp
sbb
fs
dec
cmpsl
pop
adc
pop
xchg
shrl
rorb
test
xor
jg
pop
bound
shll
jbe
jp
sub
jge
int3
add
repnz
xchg
dec
imul
insb
rorb
xlat
jns
fdivrl
adc
inc
inc
jns
js
push
add
and
hlt
imul
stc
fmuls
lret
stos
imul
lea
sti
inc
sbb
jmp
xchg
mov
pop
push
cld
fwait
sti
dec
push
add
sbb
or
xlat
enter
lods
dec
icebp
fincstp
add
push
fcomps
hlt
sti
mov
rcr
out
pop
dec
xor
dec
or
mov
js
jg
sbb
mov
cwtl
pop
and
iret
scas
pop
pop
xchg
jo
cmp
xchg
lock
xchg
lahf
mov
mov
push
cmp
sub
xor
adc
test
inc
push
sarl
mov
and
add
push
mov
fwait
cmpsb
stc
pop
xchg
insb
pop
sbb
cmc
mov
lock
cmpsb
xchg
sbb
sub
mov
iret
xchg
inc
lea
sbb
push
sub
add
xchg
inc
jge
cli
ljmp
scas
cmp
xchg
mov
test
insl
ss
push
mov
fiadds
cmpsb
out
xchg
sbb
in
imul
cmpb
lret
dec
gs
cmp
daa
sbb
inc
push
push
push
aaa
push
mov
mov
clc
cmc
pop
int
test
nop
iret
xchg
xor
mov
daa
xchg
jecxz
dec
daa
xchg
xchg
pushf
jnp
roll
das
loope
nop
mov
int3
jbe
imul
xchg
lea
pop
mov
cmp
pushf
fdivl
popf
popa
and
dec
dec
mov
hlt
fisubl
pop
lock
cmp
jg
scas
cmp
call
xor
int3
mov
mov
add
ljmp
lcall
scas
jmp
jle
movl
addr16
inc
jecxz
cmp
in
test
sbb
lret
sbb
pop
push
std
jl
pop
xorl
jbe
rol
bound
stos
mov
in
jecxz
out
adcl
mov
adc
in
aad
data16
mov
xor
push
cmp
aas
push
fidivrl
xlat
hlt
add
int
lock
sub
jb
dec
pop
enter
imul
scas
insb
mov
add
xor
rcrl
lea
cld
inc
bound
add
cmpsb
nop
mov
insb
fcmove
dec
ljmp
pop
fmulp
roll
mov
lret
outsb
loopne
or
repz
jnp
test
add
rcll
aas
pop
mov
gs
mov
rorl
cmp
mov
scas
inc
aaa
mov
rolb
inc
mulb
mov
mov
movl
adc
repz
jg
mov
rorl
movsb
lds
aam
mov
lret
cli
xchg
adcl
add
pop
in
mov
inc
imul
loope
xchg
sub
lcall
jo
movsb
ja
insb
push
xor
std
jl
pusha
int
sbb
sti
inc
sub
aam
imul
mov
stos
cmp
sub
aam
aas
cmc
or
add
sbb
push
add
dec
popf
sbb
or
sbbl
insl
divl
test
and
fincstp
mov
xor
push
out
mov
lds
js
jmp
push
pop
xor
add
mov
in
pop
lods
movsl
sarl
sbb
or
loop
cmp
xchg
testb
xlat
jl
xor
pop
ja
cmp
test
mov
jnp
das
jecxz
mov
shll
call
inc
iret
scas
pop
ja
int
lret
decb
mov
ret
ret
out
add
outsl
int3
cmp
and
jg
mov
repnz
adc
je
push
add
testl
test
out
lods
out
loope
dec
int3
sbb
xor
adc
inc
cmp
cmp
scas
push
je
ret
imul
mov
fistpll
sub
shl
adcl
cli
jge
pusha
push
enter
cmc
les
ficoms
xchg
lret
add
cmpl
cmp
xchg
or
ret
sti
adc
stos
push
mov
add
ss
xchg
shlb
sbb
insl
stos
push
iret
clc
lea
repnz
iret
sbb
adc
std
pop
xchg
ja
aam
mov
xchg
jl
or
xor
lods
fcompl
call
rcrl
or
idivb
leave
jl
or
cmpsl
es
xchg
cmc
xor
mov
dec
fiadds
cmp
cmpsb
inc
add
ret
mov
cmp
jae
cmpsl
popw
into
ljmp
es
movsb
mov
xchg
mov
pop
xor
stc
pop
and
scas
aam
imul
sub
inc
imul
inc
add
icebp
sbb
or
jno
xchg
in
les
stos
mov
enter
pop
mov
sub
out
mov
dec
xchg
gs
fxch
jns
mov
sub
bswap
rep
xchg
js
cmp
and
inc
sub
pusha
ss
cltd
xor
jmp
inc
mov
xchg
or
arpl
dec
lea
mov
add
out
movsl
aas
add
cmpsb
fldenv
jmp
int
fldt
add
popl
cld
and
sub
enter
mulb
inc
mov
cli
shll
in
sti
push
mov
pop
inc
dec
xor
roll
mov
test
clc
repnz
iret
mov
pushl
jg
popa
xor
add
mov
jb
fnstcw
xchg
repz
ret
or
addb
xor
add
xlat
out
gs
mov
cmp
mov
push
inc
cmp
loopne
push
push
jp
rcrb
push
mov
push
sbb
mov
adc
xchg
fnstcw
mov
lret
cwtl
adc
adc
cmp
stc
inc
lea
mov
sub
ret
outsb
fcmovnb
pop
xchg
insb
rcrl
jb
cmp
sub
int3
sub
add
ljmp
cmpsb
cmc
push
and
popa
and
cmp
cmp
push
decl
push
xchg
xchg
enter
int3
push
and
fdivs
in
jbe
push
inc
in
bound
adc
js
popa
loope
pop
stos
jecxz
es
lds
sub
xor
mov
ds
out
sbb
hlt
mov
push
add
call
jb
movsl
dec
xor
xlat
sub
popf
push
sbb
cmp
enter
repz
sbb
mov
ja
imul
mov
mov
icebp
int
or
jge
stos
adc
gs
push
or
xchg
cmpsb
shll
mov
inc
sbb
sub
dec
dec
out
add
inc
mov
push
sbb
mov
in
and
fstpt
rorb
mov
xor
pop
test
cmp
push
loope
loopne
jbe
cld
pop
or
xor
dec
and
jge
ret
lods
sahf
push
mov
mov
mov
lea
icebp
jns
inc
xor
xlat
loope
loope
and
dec
jae
mov
cmpsl
stc
gs
sub
cltd
mov
jmp
out
push
out
adc
hlt
in
xchg
mov
lea
or
stos
je
mov
lods
jnp
imulb
xchg
sarl
iret
call
scas
jne
div
aas
test
daa
sbb
mov
fsubrl
push
scas
jno
sub
mov
aad
fildll
sub
sbb
xor
or
bound
pop
push
lock
jne
push
fnstcw
inc
test
push
or
lcall
cmp
jecxz
sbb
push
xchg
ss
pop
cmpsl
bound
cltd
cmp
mov
pop
inc
xlat
insb
fistl
push
push
andb
pushf
aam
mov
ficomps
int3
cs
repnz
mov
dec
or
in
andl
jne
cmc
jmp
fisttpl
mov
lods
repz
mov
popf
xchg
stc
js
aad
or
ret
repnz
pusha
mov
jae
mov
outsb
fcmovnb
adc
xchg
aad
cmc
pop
stc
add
inc
in
mov
inc
push
xchg
leave
lock
mov
ret
lcall
mov
fisttps
jbe
fbstp
xor
jmp
lahf
adc
vphaddbw
into
movsb
imul
xor
or
jl
xchg
adc
push
inc
jl
aam
sub
inc
or
dec
fmuls
or
dec
int3
inc
jne
cmc
int3
xchg
in
mov
or
sub
fwait
in
mov
xor
xor
xlat
dec
or
div
jne
outsb
or
push
loope
push
mov
dec
fcmovu
cmp
dec
in
scas
dec
je
cmp
mov
fcmovu
lahf
add
add
mov
and
dec
jb
jo
enter
dec
pushf
aam
mov
dec
mov
sub
and
mov
xchg
mov
mov
and
jle
xchg
addr16
lods
xchg
aam
xchg
mov
adc
dec
lcall
ss
fisubl
cmp
push
jge
pop
jg
xor
mov
jne
sbb
xchg
fisttps
sbb
mov
dec
mov
dec
cld
jecxz
pop
lahf
lcall
adc
in
xchg
cwtl
imul
dec
dec
adc
mov
and
aam
cmp
xlat
and
dec
and
pop
sub
shll
sbb
pop
lea
cmc
inc
pop
and
lret
jno
aas
pop
out
mov
jmp
mov
iret
mov
adc
jb
add
cli
jmp
jmp
scas
dec
push
mov
inc
imul
jg
sub
repnz
mov
or
xchg
jbe
dec
mov
dec
push
dec
pushf
cmp
les
aam
xchg
mov
out
inc
mov
xor
imul
divb
dec
fmull
mulb
sti
popf
or
aad
dec
test
lahf
clc
push
push
gs
lock
outsl
or
sub
xchg
imul
pop
xchg
jge
iret
push
mov
xor
sub
sarl
shll
lds
jnp
dec
pop
mov
xor
mov
pop
cmp
int3
movsl
sbb
push
lock
fimuls
xchg
jne
into
ljmp
jno
test
stos
jb
push
loop
fbstp
xchg
sub
push
mov
jbe
adc
sbb
xor
sbb
or
dec
testb
xchg
xchg
les
inc
push
shrb
lea
cmp
lret
mov
pop
pop
push
rcrl
je
out
outsb
sbb
fnstcw
fimull
out
movsb
jnp
or
sub
inc
aaa
test
aaa
int3
xchg
dec
or
mov
pusha
dec
scas
mov
fistps
xor
jae
rorb
jp
mov
jne
xor
movsl
ret
pop
sbb
push
and
mov
jae
add
jg
adc
sub
mov
in
and
hlt
test
hlt
sub
cltd
cmpsb
jl
cmp
jnp
scas
cmp
mov
jae
mov
dec
mov
jmp
cmp
out
push
movsl
hlt
dec
push
push
add
pop
dec
xchg
mov
ljmp
pop
xchg
mov
ja
ja
cmp
test
xchg
imul
adc
arpl
push
sbb
push
push
sbb
fidivrs
pop
and
out
adc
add
aad
sbb
push
adc
idiv
add
ds
mov
ret
push
loop
fwait
imulb
lock
fdivp
fiaddl
loopne
arpl
cltd
push
add
mov
adc
and
push
push
jmp
pop
add
pop
cmpb
out
into
addr16
xchg
stos
xchg
scas
roll
push
mov
shl
in
pusha
xchg
and
jmp
scas
adc
fs
mov
cli
xchg
cmp
repz
mov
jmp
jns
sahf
cli
pop
mov
mov
out
xor
xchg
adc
jg
and
popa
fwait
sub
repz
rolb
fidivrs
push
mov
pop
mull
cmp
push
sar
jo
jnp
mov
jns
and
jae
and
iret
dec
daa
and
adc
cli
gs
add
and
xchg
aas
ja
pushf
gs
mov
adc
push
jmp
shlb
adc
stos
clc
dec
outsl
popf
insl
adc
or
pop
xor
push
xchg
xchg
stc
inc
insb
ficoml
repnz
outsl
mov
mov
sub
push
arpl
and
mov
adcl
fcoms
and
sahf
cmp
testb
inc
fisttpl
dec
js
pop
stos
mov
sub
inc
or
and
add
loop
jl
lods
lock
sbbl
cs
sbb
mov
dec
inc
mov
or
xor
or
sahf
bound
shrl
adc
cmp
adc
xor
xchg
mov
mov
cmp
xchg
or
adc
cld
adc
jb
je
push
or
add
rclb
xor
shrb
pop
mov
mov
fs
or
xor
fs
aas
jo
add
pop
aad
ret
dec
shlb
jns
pusha
mov
addl
mov
jl
pop
imul
jp
scas
mov
loop
push
sub
ds
pop
jle
jae
mov
or
loope
call
es
test
mov
pushl
add
repnz
sbb
fisubs
push
xor
aam
mov
dec
call
push
adc
adc
insl
pop
loop
inc
cmp
mov
aam
fisttpl
jb
xchg
clc
mov
addr16
lock
ds
adc
into
into
popf
and
xchg
jge
mov
test
loopne
xchg
jnp
jnp
push
das
popa
lock
test
xor
test
test
jmp
enter
inc
popf
fidivrl
jmp
pop
insl
out
enter
cmp
push
mov
dec
cmp
ss
push
inc
stc
adc
fistps
push
sub
scas
ret
xor
outsl
xor
out
ret
popa
jnp
add
out
in
dec
cmc
add
mov
daa
add
fsubrl
or
adc
mov
int
cltd
push
cmp
xchg
xor
fcmovnu
xchg
mov
xchg
xor
bound
jno
mov
pop
and
fs
ss
movsl
or
xor
call
pop
pop
sti
adc
enter
cmpsl
add
jmp
fsubl
nop
into
xchg
dec
ss
stc
xor
lret
dec
xor
jmp
fwait
ret
gs
xchg
adc
mov
andl
mov
cmp
rclb
mov
push
pop
dec
mov
sub
nop
pop
and
xchg
lds
cld
push
cmp
in
sbb
dec
adc
mov
in
idivl
mov
dec
rcll
or
xchg
pusha
push
dec
mov
jbe
jnp
dec
je
mov
and
xor
xor
movsl
jbe
xor
pop
xor
stc
scas
mov
mov
sbb
movsl
sbb
andb
arpl
out
jns
into
cmp
rcrb
sbb
push
adc
icebp
adc
cli
sti
sbb
mov
mov
push
sub
ss
iret
sbb
pushf
sub
adc
test
sahf
pop
mov
sbb
mov
mov
jmp
lcall
inc
jge
pop
lea
mov
sbb
imul
fadd
push
or
icebp
pop
push
adc
sub
jl
popw
mov
cwtl
bound
mov
pop
cmpsb
in
arpl
je
pop
imul
fcmovnb
insl
sub
mov
mov
sbb
mov
lret
inc
shll
out
les
push
loop
mov
pop
xor
xchg
push
mov
mov
mov
inc
lahf
fdivrs
pushf
add
add
pop
out
test
std
loopne
add
push
movsb
inc
mov
dec
sub
adcb
jb
xor
cmp
jno
ret
ret
fnstsw
shrl
and
jg
add
mov
lock
popa
addr16
mov
imul
mov
rclb
pop
subl
jg
out
dec
mov
in
xchg
lret
or
js
or
hlt
xchg
jmp
push
xchg
sarl
lock
fadds
fwait
and
mov
xchg
and
ret
int3
mov
cltd
xor
add
test
push
arpl
leave
sub
xchg
enter
ret
mov
lods
push
cmpsl
mov
addr16
push
rolb
inc
xchg
adc
adc
iret
pop
or
push
call
nop
test
ljmp
shlb
push
or
ljmp
jmp
and
sbb
out
lret
mov
or
aaa
sarb
in
iret
loop
rorb
jg
out
add
mov
cld
jnp
icebp
addb
stc
pop
sub
jmp
inc
sub
rcrl
jge
mov
inc
mov
jge
mov
adc
push
stos
mov
ret
dec
call
xor
shl
inc
xchg
adc
mov
mov
rorb
test
mov
xchg
clc
cmp
testl
xlat
pushf
xor
xlat
test
pop
mov
add
jmp
out
adc
stos
fs
loop
pop
lret
xchg
mov
jnp
shrl
sbb
jb
outsb
jl
call
or
mov
mov
and
pop
xlat
movsl
hlt
jno
out
push
xchg
shlb
test
mov
jmp
lods
out
jae
les
or
repnz
mov
je
mov
out
xend
in
out
mov
or
xor
lcall
lea
cs
ret
insb
push
lods
in
daa
clc
sub
jp
insb
lret
cmp
push
xor
fsubl
imul
dec
push
jo
int3
dec
cwtl
mov
inc
ja
cmpsb
fstl
mov
dec
xchg
dec
movsb
xor
xor
testb
fs
mov
cld
int
rclb
pop
mov
push
lea
jo
popl
sub
sbb
hlt
cli
dec
mov
mov
push
pusha
xchg
cmp
cwtl
aaa
lea
xor
xor
je
add
loope
fxch
pop
inc
adc
repnz
xor
cmp
sub
js
dec
add
ror
xchg
ret
dec
andl
pop
mov
xlat
mull
mov
jecxz
sbb
imul
xor
adc
mov
sub
push
subb
xchg
in
dec
mov
add
sub
stos
lret
mov
fsubl
add
pop
lock
into
stc
push
cmp
sbb
sarl
fwait
jnp
fsub
shll
push
mov
mov
xchg
insl
sbb
fdivp
out
dec
cli
mov
mov
cmp
cmp
adc
insl
xchg
sub
xchg
mov
sbb
lea
out
idivl
adc
mov
loopne
dec
mov
inc
scas
mov
inc
outsl
clc
or
dec
into
push
mov
push
mov
in
adcl
sub
push
xchg
shrb
jae
push
sub
aam
jg
mov
push
jl
ret
imul
lret
pusha
fidivl
add
xchg
push
sbb
mov
hlt
orl
push
addr16
xchg
cltd
scas
lock
out
mov
sbb
lahf
rolb
les
adc
mov
pop
inc
xor
xor
jae
adc
test
je
out
jnp
xchg
dec
outsb
loopne
mov
sbbb
sbb
add
or
pop
jl
push
adc
adc
pushf
sub
jcxz
add
lret
loop
add
cmp
test
push
and
jle
in
mov
or
xor
sahf
push
test
lea
mov
cmpsl
xchg
out
fisttpll
mov
mov
imul
or
fstl
cld
pop
roll
test
or
sub
ret
sarb
repnz
sbb
ds
mov
xchg
sahf
or
or
adc
ds
adc
adc
cmp
adc
xor
mov
scas
or
scas
xor
pop
push
pop
addr16
sarb
mov
fisubrl
mov
push
cmp
fisubrl
popa
lcall
test
dec
filds
mov
dec
cmc
lret
mov
push
pusha
or
in
and
or
and
jno
pushf
adc
pop
adc
sahf
add
add
aas
rorl
enter
aad
jecxz
sbb
cli
push
ja
fstpt
sbb
mov
movl
cli
push
outsl
cli
push
add
add
aaa
mov
push
pop
jp
adc
in
cmp
lahf
xchg
addr16
inc
mov
enter
lea
sbb
add
add
dec
dec
aas
test
test
pop
stc
out
pushf
ficomps
fnstsw
pop
inc
test
enter
cmp
stos
adc
inc
mov
bound
mov
push
pop
andb
dec
mov
ret
test
sbb
fnstcw
call
icebp
faddl
arpl
cli
daa
loopne
stos
insb
insb
cmc
mov
ffreep
mov
mov
cmp
and
arpl
test
shlb
ljmp
xor
jbe
cmp
jge
hlt
push
sbb
in
or
sbb
add
insl
xchg
loop
js
repnz
je
push
mov
cs
in
sub
sub
xchg
inc
int
jnp
in
call
test
fildl
inc
cmp
testl
add
sti
pop
incl
lret
aad
pop
shr
pushf
leave
and
dec
xchg
out
inc
mov
cmp
roll
stc
xchg
sbb
popf
mov
lahf
repnz
arpl
sahf
mov
mov
pop
movsb
daa
fs
adc
sbb
aaa
rcl
lss
inc
cmp
imul
push
xchg
pop
mov
add
inc
mov
lock
fiadds
fs
test
movsl
pop
sbb
and
add
enter
push
scas
cmp
sub
leave
out
movsl
filds
push
je
adc
cs
stos
xor
mov
mov
arpl
out
push
sub
fnstcw
jecxz
into
sbbb
in
inc
mov
lock
out
and
sbb
mov
cmp
jo
fmull
paddsb
sub
jns
ret
aam
cmc
test
mov
mov
lret
push
lcall
shrb
jns
pop
fwait
inc
mov
mov
dec
and
mov
fcmovu
xchg
and
cmc
add
out
pop
test
add
repz
cmpsl
push
outsb
inc
mov
outsl
aas
mov
xchg
repnz
mov
mov
stos
mov
cltd
rclb
dec
leave
fiaddl
flds
lds
dec
or
insb
adc
mov
add
dec
ror
xor
bound
pop
jo
mov
inc
adc
popa
stos
mov
icebp
add
pop
imul
es
sbb
push
outsb
rolb
dec
or
and
jne
ljmp
cld
test
outsl
icebp
push
xor
sbb
xor
ret
into
mov
aad
fisttpl
in
xor
and
or
and
or
lods
scas
push
push
push
sbb
pop
scas
aaa
mov
or
push
insl
cvtps2pd
fsubs
mov
ds
mov
iret
dec
fsub
jp
jo
lods
dec
call
xchg
inc
mov
icebp
xchg
inc
lret
mull
or
leave
cmpsb
xor
mulb
push
fistpll
enter
mov
mov
scas
xlat
or
fcomi
jnp
out
mov
push
adc
and
test
in
pop
cmpsl
fs
popf
test
push
fcmovu
jns
mov
xor
mov
outsb
pop
mulb
rcll
mov
jns
sbb
pop
fs
jo
or
insl
jae
xor
sbb
daa
repnz
mov
popa
addr16
xor
repz
in
sub
popl
idiv
sub
inc
adc
outsl
imul
enter
imul
and
jbe
dec
stos
cmpsl
sub
push
imul
into
jnp
dec
movsl
cmc
movsb
jnp
sarb
cltd
sbb
and
xchg
push
mov
push
sar
or
fs
in
inc
sub
scas
dec
sub
test
mov
sbb
cmpsl
ret
popa
mov
or
jo
xor
ret
outsl
cmpsl
rclb
out
mov
mov
adcl
pop
sub
or
sbb
lret
cmc
out
and
imul
xlat
scas
aas
inc
andb
ja
pusha
call
cmp
adc
aam
fisubrl
test
add
lods
jno
dec
arpl
sub
push
orl
pusha
or
repz
sbb
aaa
xchg
cmp
nop
test
and
cmp
sub
or
lds
ja
enter
fistpl
pop
std
subl
aam
aad
in
mov
inc
pop
test
inc
inc
cmp
cmpl
ret
sahf
xchg
sbb
mov
sbb
popf
imul
mov
mov
inc
adc
popa
shlb
sbb
add
loopne
xchg
data16
cltd
or
sub
cltd
push
andb
sub
and
or
push
js
loopne
sub
insb
jno
out
mov
or
pop
lds
insl
andb
cli
push
inc
sub
mov
pusha
pop
les
push
cld
mov
mov
dec
mov
cltd
or
aas
xor
inc
inc
inc
pop
ljmp
adc
mov
test
stos
or
cli
jl
scas
jno
xor
ss
inc
les
mov
mov
lock
inc
dec
mov
and
stos
andb
mov
mov
cmp
leave
std
mov
jle
pop
mov
or
jl
fcmovnbe
xchg
mov
test
shlb
in
push
and
xor
dec
cmp
movzwl
pop
adc
stos
mov
inc
adc
dec
add
xchg
xchg
sub
lods
add
sub
daa
adc
inc
es
dec
sub
imul
or
xor
fcomip
or
and
or
aad
fistl
inc
xchg
into
mov
jbe
adc
test
es
fldcw
out
sbbb
xor
loopne
and
sbbl
cmp
imulb
sbb
jg
xlat
sahf
dec
cmp
push
adc
mov
jae
dec
mov
cmp
nop
imul
test
into
dec
cmp
repz
nop
lods
mov
mov
cld
int
int
xor
xor
sbb
add
icebp
sbb
xor
lret
cli
dec
push
fwait
jl
jl
ret
cmp
adc
cmpsb
xchg
addr16
popa
jmp
sbb
pop
insl
pop
notb
shr
pop
mov
push
push
sbb
pop
lahf
sbb
jb
jl
enter
jge
mov
aaa
pusha
mov
cmpsl
daa
mov
cli
daa
inc
outsl
xchg
push
mov
cmp
pusha
sbb
test
ss
adc
js
mov
cmp
and
daa
xchg
enter
xchg
xor
jecxz
inc
and
pop
mov
inc
xchg
in
mov
repnz
mov
cltd
aam
xor
sahf
or
xor
mov
push
cmp
clc
mov
int3
into
inc
loop
mov
add
lods
and
arpl
xor
dec
icebp
cmp
push
mov
lret
pop
test
push
faddl
cwtl
push
dec
incl
imull
fidivl
cltd
imul
jecxz
sbb
shll
xchg
sarl
dec
sub
pop
addr16
xorl
scas
cmpsl
pop
cmpb
or
add
es
jp
jnp
cld
leave
aas
outsb
mov
sbb
cli
ret
mov
jns
add
mov
fwait
cmp
inc
or
enter
iret
rol
add
pushf
jle
or
mov
insl
and
mov
pop
jo
jne
xchg
jecxz
mov
enter
arpl
imul
cwtl
mov
addr16
push
cmp
and
mov
pop
xor
xor
or
xchg
sahf
cmpsl
aas
ret
add
jbe
xchg
and
and
sbb
mov
fisubl
inc
jbe
mov
mov
sub
push
sahf
sub
imul
in
fisubs
adc
insl
mov
data16
mov
es
mov
xchg
jns
inc
sbb
jge
sbb
jmp
subb
shrb
pop
mov
cmpsl
fldl
not
mov
fwait
inc
out
repz
dec
mov
lret
ficomps
push
rcl
or
dec
jg
imul
lahf
movaps
sub
cmpsb
pusha
fbld
dec
cli
cwtl
jns
add
popf
sbbl
lret
mov
aas
aad
ss
imul
dec
cld
into
ds
inc
cmpsl
lret
xlat
pop
push
pop
jb
shl
xchg
jbe
bound
and
fchs
pop
push
jno
sub
fst
out
jne
ja
test
and
xchg
mov
jecxz
xor
sub
cmpb
mov
jp
push
loop
dec
mov
std
add
pushl
dec
outsb
xchg
mov
cmp
test
das
fisubs
leave
inc
ljmp
mov
jnp
cld
xchg
js
pop
pop
mov
fwait
xor
js
addb
sub
adc
mov
push
bound
push
push
rep
lock
int3
mov
jb
inc
loope
outsl
adc
ret
mov
movsb
cwtl
jp
int3
adc
out
jbe
sbb
clc
in
mov
mov
xchg
sbb
cld
jae
lock
jb
test
loop
les
sub
lahf
shlb
out
and
in
ss
or
icebp
imul
out
stos
das
and
jae
leave
sbb
add
cmpsb
ss
mov
xchg
in
jp
in
xor
ret
stc
xchg
mov
push
push
ds
pop
enter
out
jp
outsb
xor
mov
sarb
mov
fmul
faddl
es
les
xchg
push
xor
data16
mov
clc
ss
lahf
cmp
mov
xchg
sub
fcompl
mov
sbb
xchg
dec
lahf
cmp
fdivrl
jmp
push
and
enter
and
fs
add
mov
aas
loop
or
inc
xorl
scas
and
mov
and
je
xchg
movsb
lock
adc
enter
mov
fcomip
inc
pop
cmp
lcall
adc
mov
pusha
xchg
xor
std
or
xor
aaa
xorl
mov
pop
jmp
addr16
movsl
or
sbb
cmp
movsl
push
sarb
sub
jmp
xor
fiadds
hlt
sub
mov
sarl
xchg
pop
mov
popa
stos
pop
jb
pop
jl
mov
inc
jge
mov
mov
int
pop
and
arpl
xor
dec
cld
adc
mov
mov
fsubrs
xor
test
adc
test
or
push
iret
ss
push
pop
jnp
hlt
mov
mov
insb
adc
push
repz
mov
inc
pop
push
into
adcl
xchg
dec
movsl
lahf
ret
jo
scas
pop
xorl
pop
dec
ss
and
mov
dec
popf
nop
insl
mov
lahf
add
andb
addr16
jle
sub
andl
pop
out
mov
fdivrp
mov
fdivl
data16
push
sti
sbb
nopl
test
sarb
xor
and
xchg
mov
out
fsubs
xor
mov
cmpsl
in
xchg
loop
ljmp
jg
cmpsb
out
lret
dec
inc
cli
and
inc
clc
mov
mov
dec
pop
add
cmp
pop
inc
lahf
repnz
out
add
test
pop
xchg
jge
or
pop
inc
loopne
xchg
mov
or
popa
push
add
outsb
adc
arpl
clc
sti
insl
jle
xor
lahf
lds
push
add
xchg
mov
clc
fcoml
sbb
sbb
xchg
in
and
cmpsb
xchg
orl
adc
and
pop
mov
enter
loope
jl
rorb
sub
xchg
fucomi
imul
inc
push
loop
sahf
lea
sbb
jp
es
stc
cmp
xor
sbb
cli
cli
adc
add
xlat
adc
ret
inc
xchg
push
roll
add
icebp
mov
pop
mov
arpl
pop
sub
cs
xchg
movsl
xor
xor
out
add
sub
jae
xor
cwtl
and
gs
stos
andb
xchg
sub
testb
sbb
popf
sahf
push
mov
xor
and
adc
aas
sbb
movl
stos
leave
pop
imul
cmpsb
lahf
jmp
jnp
push
mov
adc
out
bound
loope
mov
xchg
test
shlb
pop
xchg
rorb
mov
hlt
push
int3
xor
lcall
stos
aad
push
inc
insl
dec
sub
dec
test
mov
stc
add
jp
xchg
fsubs
or
in
aaa
psubsw
dec
fwait
hlt
fbstp
outsl
adc
inc
sub
mov
lea
jecxz
mov
push
sub
inc
shll
inc
stos
or
out
ljmp
mov
add
arpl
xor
mov
out
dec
fnstenv
mov
shrb
mov
and
stos
jns
dec
inc
out
in
sbb
xor
cmpsl
add
mov
leave
imul
jne
xchg
andb
stos
sub
aaa
cmp
aad
fimull
out
shrl
sub
loop
imul
pop
mov
pusha
pop
dec
mov
iret
push
fdivs
les
and
stc
test
jecxz
mov
out
sbb
lds
mov
sub
or
sbb
jnp
add
subb
aas
push
lret
inc
add
push
aaa
dec
inc
test
cmc
mov
dec
cmp
fcmovnu
mov
dec
inc
add
jmp
ret
sub
fistpll
imul
jmp
xor
push
ds
jecxz
out
push
and
xor
xchg
mov
cwtl
leave
cmc
sbb
jns
pop
int
dec
inc
xor
adc
jno
call
arpl
cmpb
mov
mov
loopne
add
lds
cs
enter
test
mov
mov
inc
jne
jl
cmp
sub
test
mov
ds
in
aaa
mov
lea
push
sbb
stos
inc
push
out
insb
dec
jmp
jg
inc
and
inc
addr16
ss
stos
jbe
pop
jae
out
shl
addr16
les
and
xor
in
inc
xchg
cmp
push
or
pusha
cmp
or
push
lods
fldt
pop
cmp
div
es
or
aaa
test
inc
mov
sub
sbb
scas
leave
and
hlt
fiadds
cli
pop
push
subb
jl
xor
pop
sub
inc
fimull
es
lret
or
add
and
sti
daa
mov
add
int
loopne
xchg
cmp
and
movsb
ljmp
aam
jno
ficoms
xor
js
lahf
sub
popf
push
es
xchg
sbb
mov
cmp
mov
jmp
mov
enter
cmp
lods
dec
inc
xchg
lcall
add
lret
sub
mov
loopne
movsl
cld
jae
sub
lea
hlt
ljmp
sbb
and
les
jl
cwtl
xchg
or
dec
cmpb
and
stos
cld
repz
and
out
test
adc
inc
sub
jp
aam
jmp
imul
add
inc
aam
jns
pushf
mov
nop
lcall
sub
mov
incb
mov
inc
pop
nop
cmp
lret
jne
mov
mov
pop
leave
sub
sahf
push
roll
hlt
dec
pushf
lea
mov
imul
and
je
mov
sahf
fs
test
loop
pop
and
filds
int3
mov
sbb
into
add
and
outsb
ljmp
rcll
lods
aaa
and
dec
repnz
repnz
or
icebp
push
jo
fwait
jecxz
dec
sbb
rorb
movsb
dec
jne
lods
dec
and
repnz
cli
int
scas
or
in
mov
pop
aad
push
push
add
jmp
aaa
jg
cltd
mov
or
imul
add
stc
sbb
inc
sub
xor
and
loopne
xor
loope
mov
clc
stos
mov
bound
or
push
cmc
push
sbb
or
sbb
dec
sbb
cmpl
sub
lods
jns
das
sbb
hlt
bound
push
push
and
in
xchg
xor
mov
mov
fistpll
xchg
inc
mov
dec
ficoms
inc
iret
inc
lods
rorb
cmp
test
push
pop
sub
pop
aaa
mov
inc
adc
sbb
mov
xchg
lea
ret
jl
sub
insl
inc
pop
jecxz
aaa
shll
lcall
iret
cld
jnp
pop
or
fistpl
pop
pop
pop
sti
push
inc
inc
sti
stc
sbb
jno
mov
push
cmc
call
dec
mov
inc
mov
je
pop
test
mov
pop
fwait
mov
mov
mov
mov
loopne
push
call
dec
sarl
xchg
push
fcoms
movsl
lret
add
outsb
lcall
enter
mov
hlt
sbb
test
xchg
cwtl
fisubrs
rcpps
push
lds
repz
pop
mov
orl
mov
faddp
jle
into
cmp
popf
add
aas
inc
sbb
mov
sub
xchg
and
popa
or
jno
sahf
aas
sub
dec
pop
insl
add
ds
sbb
aam
sub
inc
ret
in
aaa
movsb
dec
or
in
inc
int
lret
push
js
loopne
mov
dec
push
adc
shl
mov
push
cmp
cltd
outsl
sbb
arpl
je
scas
jp
dec
out
rclb
xor
enter
mov
xchg
sub
stos
jg
not
ljmp
les
mov
pushl
in
cmp
fmull
dec
jmp
sbb
mov
or
pop
gs
mov
int
nop
mov
inc
dec
cmp
or
lods
sbbb
xchg
scas
or
jne
fisttps
cmp
push
cld
test
and
fbld
aad
stos
stos
pop
sbb
jl
mov
fwait
add
push
sub
pop
add
sub
sub
outsb
add
lret
fwait
dec
sub
dec
mov
lret
jnp
mov
or
inc
mov
jecxz
aam
dec
push
add
sti
fwait
dec
cmp
mov
sbb
inc
push
pop
pop
jb
and
cmpsl
dec
fucomip
stc
sbb
popl
dec
stc
xchg
inc
gs
fidivrl
iret
xor
call
lods
ret
scas
and
inc
inc
je
jge
cmpsl
pop
shlb
jae
mov
out
push
jp
stos
mov
lds
xchg
lret
mov
loopne
xchg
and
fisttps
push
push
pusha
pop
pop
mov
xor
jbe
mov
mov
gs
add
push
pop
mov
jge
int3
loop
call
fnstsw
mov
sub
lret
lcall
mov
mov
iret
xchg
lods
lret
outsb
popa
bound
inc
pop
cwtl
mov
lret
in
add
mov
cld
mov
in
stos
out
fadds
stos
sub
fnstsw
and
inc
push
jbe
mov
aaa
inc
aad
gs
add
mov
dec
adc
sarb
insl
add
lea
inc
cwtl
push
repnz
ja
sub
call
cmp
hlt
lea
add
popa
and
xchg
pop
or
stos
pop
sub
and
out
aas
inc
int
add
xorl
jp
jmp
aas
out
jmp
mov
cld
add
popa
je
lret
rep
data16
jmp
aam
fistpll
sbb
ret
psrld
in
jo
cmp
cli
or
subb
add
bound
sbb
push
xchg
push
or
dec
cmp
sub
mov
rolb
cmp
jns
ret
sbb
in
js
and
js
push
out
popf
or
stos
icebp
jmp
add
push
daa
sub
and
jge
rorl
adc
jg
push
cmp
lea
mov
jmp
movsl
movsb
dec
pop
in
sbb
movsl
sub
cmp
inc
stos
es
cmp
pop
fs
stos
mov
imul
adc
or
cltd
xchg
or
fisubrs
push
jle
xchg
jle
mov
bound
add
dec
inc
je
cmp
xchg
cmp
mov
std
or
test
fadds
ja
pushf
xchg
es
xor
icebp
jg
cs
push
jns
jne
sub
scas
movsb
mov
ret
mov
iret
add
cmp
inc
pop
call
aaa
pop
dec
insl
cmp
out
mov
jo
cwtl
add
fisubrs
outsl
test
inc
mov
call
pop
or
mov
jle
shrb
mov
push
enter
repnz
inc
jmp
pop
lret
cli
push
xchg
xor
pop
mov
in
adc
and
loop
insb
xchg
lcall
jl
dec
out
mov
xchg
ja
add
dec
pop
mov
xchg
jns
xlat
push
call
fdivr
lods
push
mov
mov
push
push
push
popl
movsb
outsb
aad
jae
sbb
pushf
jmp
pusha
cmpsb
push
mov
lods
jg
adc
lret
shr
in
cmp
fwait
dec
xor
cs
push
pop
pop
adc
fwait
jge
icebp
xchg
mov
mov
jnp
hlt
jge
loop
aam
cmc
addr16
adc
mov
pop
or
mov
xchg
icebp
ret
add
adc
mov
pop
out
aaa
je
out
push
add
test
sar
fwait
lods
mov
dec
mov
cwtl
sbb
jl
shl
cmp
xchg
movsb
repnz
cs
jno
inc
test
xor
jb
test
pop
add
inc
jnp
test
pushfw
fldl
movsl
and
mov
sub
outsl
test
xlat
push
int
mov
sub
cld
xchg
lods
icebp
mov
mov
cmpsb
jne
jo
sbb
imul
mov
scas
jle
sub
adc
lea
adc
xlat
sub
mov
out
arpl
inc
inc
movsl
ja
shll
jp
pop
enter
mov
jo
dec
daa
dec
popf
push
sub
pop
std
loopne
push
out
ja
cmc
in
ljmp
hlt
xchg
or
subl
imul
dec
jp
push
sub
mov
add
aas
cs
xor
insl
pop
jne
les
mov
cmp
xchg
inc
stos
dec
fldpi
repz
rsqrtps
jle
jecxz
adc
dec
inc
out
push
push
out
mov
mov
das
add
bound
lret
inc
and
push
in
popa
dec
pop
add
arpl
xor
sub
fsub
jg
jne
push
ljmp
cli
push
cld
fidivl
scas
pop
in
stos
fistpll
test
mov
movsl
fxch
mov
mov
repz
mov
outsl
push
mov
pop
sub
in
and
mov
cmp
dec
or
into
leave
repz
dec
xchg
int
push
arpl
aas
movsb
dec
aad
mov
pop
into
cld
or
ljmp
icebp
test
adcb
jmp
lahf
sbb
dec
fldenv
mov
test
out
insb
mov
inc
aam
in
sub
jnp
mov
clc
sbb
xlat
aaa
movsl
stos
int3
fisubl
push
cmp
xchg
pop
sti
or
pop
enter
xorl
scas
mov
push
pop
frstor
pop
mov
push
and
lea
in
lods
fwait
mov
fistpl
xchg
xor
jns
cmp
xchg
or
repz
sub
stos
xchg
lods
repnz
pop
xor
inc
sub
cmp
push
call
mov
mov
or
push
mov
aaa
fsts
pop
dec
add
mov
push
ja
mov
xor
cmp
in
and
sbb
cli
outsb
and
je
xchg
out
das
jne
cs
test
or
sti
mov
cltd
pop
in
sbb
cwtl
pop
xchg
jns
add
add
jle
add
lods
adc
mov
ds
mov
repnz
rclb
test
popf
pushf
fildll
std
jmp
imul
jecxz
ss
test
jg
push
fldcw
mov
out
and
aas
fnstsw
xor
xchg
cmp
js
mov
mov
mov
insl
jp
inc
stos
adc
and
jno
xchg
cld
adc
jnp
mov
das
stc
mov
cwtd
in
aaa
jb
dec
fists
sub
cs
pop
push
repnz
mov
jmp
jle
mov
push
out
es
cmpb
mov
dec
mov
je
jle
mov
outsl
mov
test
gs
jmp
insl
dec
push
std
call
add
insb
adcb
mov
fidivrl
popl
rolb
jmp
fidivs
xlat
jp
fs
lcall
lahf
or
push
hlt
fiadds
add
adc
rorb
mov
mov
adc
or
imul
rolb
sbb
pop
lods
pushf
cs
jbe
push
es
pop
aas
aam
popf
mov
adc
repz
adc
jmp
sti
icebp
jecxz
in
movsl
or
ja
mov
jo
dec
daa
sub
mov
in
adc
push
push
dec
test
jnp
add
popf
je
push
outsl
sahf
mov
dec
fcomip
xchg
loope
enter
sarl
fisubl
test
pushf
add
push
lret
sbb
jae
push
or
pusha
push
in
adc
jl
stos
mov
nop
out
xor
or
lds
pusha
adc
mov
or
pop
or
roll
push
stc
pop
int
push
or
jb
xchg
daa
mov
iret
pop
test
mov
push
sarl
and
sbb
cmpsb
pop
sahf
pushf
push
jb
mov
jecxz
je
inc
mov
test
mov
lret
push
dec
push
and
mov
adc
xchg
jne
fcomp
xlat
lret
and
add
mov
push
xchg
cmpb
dec
jmp
adc
andl
and
jo
mov
add
dec
push
xchg
lret
push
jbe
cltd
js
ret
pop
cmp
pop
leave
dec
aad
lret
fs
mov
adc
sub
notb
push
add
fcmovu
frstor
cli
inc
add
dec
xchg
xor
dec
sub
lret
daa
mov
jge
or
xlat
xlat
sub
inc
mov
mov
inc
ror
pop
ds
insl
loope
in
sub
jp
sub
loop
jl
mov
repz
add
jl
xor
xor
mov
and
test
xor
int3
pop
sub
inc
pop
test
mov
mov
iret
lret
lds
std
push
ret
cmp
jns
lret
mov
xchg
aas
imul
xchg
push
push
pop
lea
out
outsb
mov
loope
shll
mov
xor
fdivr
sub
stos
fstps
mov
adc
scas
shl
pop
out
jl
add
lea
mov
mov
fxam
mov
xchg
outsl
test
fisttpll
cmp
popf
test
and
dec
pop
push
stos
xchg
sarl
loope
xor
ficompl
sbb
lods
into
hlt
dec
xchg
mov
dec
mov
or
sar
inc
scas
jmp
and
jecxz
pop
ja
and
jecxz
sub
int
in
sbb
mov
cmpsl
aas
daa
inc
push
mov
insl
sub
sub
mov
in
cli
lcall
cmp
sub
ret
rorl
sub
inc
mov
cltd
jo
movsl
into
in
in
in
cltd
fimuls
ljmp
in
fisttpll
adc
inc
and
addr16
and
sbb
inc
sarb
stc
mov
sbb
das
fs
adc
fistpll
ficomps
dec
faddl
mov
test
aaa
int3
fwait
mov
inc
xchg
stos
pop
add
jb
mov
mov
fs
es
adc
jne
adc
andb
movsl
leave
ret
fildl
push
sbb
ds
jmp
call
mov
dec
in
cmpsl
or
repnz
xor
jno
in
mov
mov
sub
mov
jnp
pusha
push
jmp
ss
pop
mov
or
xlat
xorl
in
xchg
pop
mov
pop
sti
xchg
jge
loope
jl
lods
jecxz
xchg
scas
mov
cmp
xchg
sub
inc
xchg
adcb
int3
inc
push
loope
hlt
cli
aas
js
jne
jo
out
ret
cmp
rcl
mov
sahf
fsub
pop
push
mov
mov
addr16
xchg
pop
cmpsb
adc
mov
cld
xchg
bound
fs
and
out
mov
cmc
jp
insb
or
cmp
pop
cmpsb
lods
add
cmp
cmp
inc
cmp
loope
inc
jne
inc
ljmp
clc
sbb
jp
sahf
sub
ficoml
lret
pop
enter
enter
fildll
popa
enter
out
lock
cmpsb
adc
mov
test
leave
jnp
mov
sub
push
bound
sbb
rcrl
pop
xchg
xchg
and
dec
loopne
jp
jp
dec
es
push
inc
andl
inc
lea
pop
mov
lds
loope
in
jnp
adc
xchg
je
pop
shr
mov
jp
adc
and
jge
pop
test
or
or
and
test
inc
in
inc
adc
ret
push
fnsaves
test
ret
push
fistpll
stc
fcompl
push
into
faddl
scas
fistpl
ja
pop
cmp
xlat
call
sub
cltd
scas
cmp
pop
in
ljmp
sbb
int
cmp
cmp
sub
sub
test
pushf
pop
lret
mov
es
sub
cmp
shll
les
dec
sbb
out
ss
xchg
fsub
clc
rorl
and
mov
xor
out
repz
shr
mov
cmp
std
mov
dec
sub
cmp
loopne
cmpsl
cmpsb
sbb
js
dec
cmp
subl
popa
and
mov
push
xor
mov
ds
sub
mov
push
daa
insb
enter
test
fists
pop
js
and
bound
xchg
add
pop
xchg
jl
fistps
inc
mov
ljmp
notb
clc
ss
cmp
xor
push
xchg
xor
xor
sub
call
xor
fldcw
iret
aad
jp
pusha
mov
mov
inc
xlat
ss
push
repnz
lcall
cmc
push
pop
jo
mov
jo
popf
and
mov
pushf
repnz
mov
int
rorl
inc
xchg
mov
bnd
jne
out
push
push
and
push
shlb
push
in
xor
mov
xor
mov
nop
push
icebp
mov
push
pushf
rol
cmc
cmp
stc
test
clc
jo
cmp
shrb
cmp
lea
jl
fistpl
fimuls
push
out
les
nop
fldt
add
les
jne
rolb
repnz
loopne
push
stc
xchg
inc
xor
adc
mov
dec
xorl
inc
mov
repnz
mov
mov
in
scas
mov
jle
enter
jp
push
jbe
outsl
repz
sbb
pop
in
fadds
scas
or
stos
jmp
sub
and
imul
repz
push
out
scas
mov
testb
cmp
dec
cltd
dec
sub
gs
sub
or
lahf
mov
ja
xchg
cmp
xchg
xlat
inc
shll
pop
xor
insb
bound
mov
sub
pop
into
xchg
cmpsb
int3
inc
sti
pop
mov
hlt
pop
ljmp
mov
xor
push
inc
cmc
add
aam
and
mov
clc
stos
lret
inc
cmp
pusha
cmc
or
add
iret
push
popa
pop
es
adc
stos
fscale
or
jle,pn
loop
mov
flds
pusha
xchg
dec
shrb
sbb
mov
push
cmc
cmc
xchg
xchg
std
or
aas
sub
aas
add
mov
hlt
dec
test
das
add
pop
and
scas
xor
or
aas
aas
imul
adc
or
in
add
xor
push
fs
xchg
cmp
or
cmc
sbb
aad
cmp
aad
out
mov
add
inc
rcll
test
add
mov
add
lea
xor
in
ror
test
dec
fmul
mov
daa
orl
mov
jge
dec
lods
jbe
jmp
sub
jecxz
and
leave
scas
out
clc
fwait
mov
mov
hlt
push
mov
mov
rclb
mov
or
add
or
clc
test
mov
ror
adc
push
es
cmp
in
adc
cwtl
nop
or
insb
dec
out
ja
mov
xor
mov
popa
cmp
nop
inc
fisttpl
push
pop
std
pop
sbb
mov
jecxz
pop
pop
hlt
movsl
pop
shll
call
add
cld
jge
int
dec
in
pop
xchg
aad
fisttps
loop
inc
xchg
out
mov
mov
or
jle
in
stc
clc
aam
std
add
push
sub
sbb
and
movsb
mov
sbb
mov
inc
filds
mov
mov
cld
scas
fucom
test
jns
xor
in
aam
lea
push
inc
xchg
pop
pop
lods
cmpsl
mov
mov
imul
loopne
add
jo
enter
mov
cmp
pop
push
adc
pushf
push
pop
mov
stos
in
arpl
jp
test
cmpb
push
repnz
icebp
enter
pop
mov
jl
sbb
push
cltd
mov
popf
pop
mov
inc
sbb
mov
dec
jecxz
xchg
popa
inc
xchg
fisttps
xor
sub
push
daa
push
cmp
enter
aas
sub
add
jecxz
fisttps
iret
fs
repz
mov
xor
sub
daa
testb
lods
sub
pop
lret
out
jbe
dec
or
push
in
push
test
nop
xor
fstpt
dec
lods
lods
inc
push
mov
mov
mov
jp
rorb
push
shlb
xchg
adc
lods
imull
xlat
mov
push
sbb
data16
mov
xor
sbb
add
mov
fiaddl
dec
scas
mov
ds
fs
xchg
rcrb
faddl
sbb
dec
arpl
xchg
push
mov
dec
rcrb
sbbl
add
mov
cmc
arpl
cmp
xor
repz
sbb
sub
test
jp
aas
push
cmp
push
mov
clc
fstps
lock
mov
aad
ja
arpl
and
testl
pusha
xchg
pop
popf
mov
fdivs
jno
sbb
mov
push
ss
mov
pop
jge
loopne
mov
add
mov
jne
sbb
xchg
test
stc
ja
sub
jmp
add
add
xchg
push
dec
adc
scas
aas
lods
bound
ret
xor
dec
lahf
xchg
fincstp
flds
jmp
pusha
pop
ljmp
dec
in
or
mov
mov
enter
and
mov
push
pop
out
dec
data16
push
mov
ficomps
and
call
sub
jecxz
aas
leave
add
ja
xchg
sbb
fsubs
aaa
dec
push
xchg
repnz
std
add
popl
fcoms
loop
loope
mov
sbb
ljmp
adc
xchg
push
stc
ljmp
sbb
pop
scas
call
pop
push
jp
movnti
mov
and
and
mov
aaa
mov
mov
push
fcmovnbe
insb
fimull
and
inc
inc
jnp
movsb
xchg
rcr
data16
mov
ljmp
rcr
jge
mov
arpl
lds
icebp
adc
shrl
rorb
or
sbb
push
xor
jge
imul
sub
xor
and
pusha
fwait
shll
mov
int
add
fld
mov
ret
add
mov
outsb
xchg
cmp
insl
mov
icebp
jno
push
push
sbb
or
sub
and
mov
sub
and
sub
or
mov
mov
pop
or
int3
lret
xchg
subb
mov
push
aas
test
add
and
cmp
rcrb
and
sub
sbb
pushf
cmc
dec
push
xor
mov
sbb
icebp
jbe
push
push
sbb
loope
cld
and
xor
imul
push
imul
xor
push
sub
cmp
cmp
fsubs
and
pop
insb
xor
sub
out
mov
lods
rolb
pop
aas
push
inc
jo
not
mov
xchg
testb
push
ljmp
lock
outsb
aaa
jb,pn
pop
movsb
ret
repz
adc
xchg
test
scas
nop
in
icebp
test
in
daa
jp
into
inc
mov
cltd
sbb
scas
xchg
pop
xchg
fldt
xor
mov
push
lock
pop
sub
lcall
or
jno
outsb
mov
inc
add
dec
mov
push
lret
mov
ss
pop
mov
lock
jo
test
idivl
sbb
loop
xchg
xlat
mov
sub
cmp
cmp
das
js
lods
mov
loopne
dec
cmpsl
dec
or
nop
jmp
cltd
push
icebp
xchg
or
and
cs
scas
add
sbb
xchg
cmp
jns
lret
push
cmc
mov
hlt
xchg
dec
mov
xor
call
ret
add
inc
stos
mov
add
insl
imul
xchg
shld
push
and
mov
mov
or
jb
into
test
insb
mov
out
mov
mov
xor
call
mov
sub
inc
jecxz
mov
cwtl
repz
and
adc
jl
inc
sbb
inc
scas
and
ret
lods
je
lea
pop
push
dec
iret
loopne
pusha
push
sbb
stos
ds
lods
cmc
cs
jno
out
pop
pusha
jge
xchg
test
add
jg
mov
jp
mov
shll
sarb
adc
scas
or
xchg
mull
mov
push
mov
mov
fcoms
mov
fs
mov
ficomps
push
mov
cmpsl
mov
xlat
in
sub
in
aas
xchg
or
jp
ret
xchg
push
dec
mov
cmp
sub
pushf
cltd
shll
hlt
sub
imul
push
cmp
push
pop
pop
add
xor
mov
push
pop
notl
inc
mov
iret
add
pop
pop
test
cmp
adc
and
mov
outsl
push
pushf
shlb
mov
xor
pop
cmp
adc
push
lea
cmp
pop
mov
mov
adc
pop
lahf
das
mov
scas
aas
push
inc
jo
aam
loop
mov
daa
test
xor
sub
lret
and
cmp
mov
std
je
outsb
cli
sub
adc
fiaddl
inc
mov
pop
loopne
fnstcw
xor
loop
xchg
les
aaa
jne
cmc
call
adc
cli
clc
arpl
lret
and
pop
rolb
sqrtps
cmp
add
mov
in
mov
daa
push
lods
ret
mov
mov
sti
mov
dec
xor
fadd
lahf
cmp
mov
clc
xchg
dec
xchg
xor
cmp
fldl2t
dec
scas
clc
repz
inc
or
and
adc
jae
cmp
push
mov
add
push
imul
pop
sbb
leave
loope
dec
xchg
sti
push
movsl
mov
add
sbb
cmp
jmp
cmc
adc
xchg
ror
in
jbe
sub
and
xor
mov
lods
sbb
mov
sbb
aad
xor
outsl
jns
repz
sub
test
mov
sub
or
jne
adcb
out
notl
fidivs
ret
lahf
divb
pop
push
push
je
gs
dec
jae
fldcw
leave
pushf
in
lods
in
push
cmp
mov
test
push
idiv
aaa
fcomps
and
or
or
cwtl
rorb
out
jns
dec
stc
nop
nop
pop
test
inc
leave
call
hlt
popf
adc
jo
push
test
xlat
cltd
adcb
xchg
in
lret
fsub
scas
test
pop
loope
adc
shlb
mov
xor
mov
loopne
cmc
popf
cltd
jg
lods
mov
jp
ficomps
ret
sbb
jb
in
shrl
jg
cmpsb
sahf
out
or
mov
cs
lds
js
mov
loopne
jns
pop
mov
pop
mov
sub
notl
fs
dec
addb
int3
imul
dec
adc
xchg
dec
idivl
push
enter
arpl
jle
jp
cmp
cmpsl
mov
lock
dec
orb
repnz
mov
outsl
pusha
mov
or
pop
and
aam
inc
inc
or
mov
xchg
daa
popa
pop
push
aam
sti
inc
int3
mov
jne
daa
cwtl
or
data16
fcmovnb
and
adc
adc
shrb
mov
scas
pop
pop
sub
stos
jnp
cmp
adc
lods
mov
rclb
lea
or
lcall
mov
stc
push
push
icebp
mov
cld
scas
pop
scas
sub
xor
mov
mov
pop
sub
push
shr
and
mov
push
add
mov
cmp
inc
rcrl
mov
sub
fcomps
insb
data16
stos
adc
fdivrl
out
lds
or
inc
andb
cli
add
ljmp
out
and
iret
or
popa
sbb
inc
loop
jmp
into
inc
test
out
xor
hlt
loope
shrl
pop
mov
sbb
ja
push
mov
jnp
mov
mov
in
mov
push
lret
sbb
pop
xor
loopne
dec
or
sahf
ljmp
inc
lods
cli
sub
jno
orl
jno
rcrb
and
add
push
movsl
xchg
into
xchg
lods
jp
jmp
push
push
sti
xchg
iret
fstp
dec
sti
test
cmpsl
add
push
pop
cmp
leave
xchg
adc
ljmp
push
cld
fdivs
and
test
push
sahf
sub
jnp
loope
lret
pop
push
lahf
xchg
lds
inc
dec
sarl
pusha
shrb
xor
ret
jecxz
xor
xor
imull
daa
add
shll
fbstp
push
or
mov
mov
dec
call
mov
aad
lahf
bnd
fwait
gs
pop
push
fdivrl
clc
pop
popl
cmpsb
mov
mov
fidivl
jge
xchg
andl
in
xor
jae
lods
orl
sbb
lds
pop
pushf
es
push
cmp
push
mov
fs
or
pop
js
inc
insl
jae
cmp
adc
pop
aam
mov
std
mov
out
repz
insb
arpl
sbb
cltd
dec
cmp
outsb
adc
test
push
popa
push
aas
jnp
lahf
jp
or
insl
mov
cmc
push
lcall
shrb
dec
test
cmovp
sub
add
push
adc
enter
mov
scas
jg
xor
imul
fcomps
hlt
orb
xor
mov
fsubl
sbb
mov
sub
mov
mov
adc
push
inc
push
fnstsw
add
iret
sub
fildll
mov
cltd
lret
adc
inc
jo
xor
cmc
ret
and
in
leave
jecxz
inc
mov
testb
mov
mov
pop
in
imul
in
push
pop
loope
sbb
jge
adc
fldl
hlt
mov
push
or
sbbl
mov
push
repz
maskmovq
testl
jne
shl
fldcw
shlb
jmp
push
xchg
fidivs
sbb
jg
cmpsl
jno
and
xor
test
dec
in
inc
xchg
cmp
add
pop
int
lret
iret
push
adc
loop
pop
aad
jo
dec
cmp
cmc
repnz
xchg
lahf
pop
cmpb
cld
mov
out
adc
add
xchg
add
das
pop
pushaw
into
add
mov
mov
adc
shrb
jns
pop
sub
mov
scas
dec
fcmovu
sub
test
insl
popa
insl
push
inc
lods
mov
in
sahf
filds
xchg
aam
loopne
aaa
rcl
jb
inc
out
xchg
roll
mov
sti
mov
decl
xor
aam
jecxz
xor
xchg
les
mov
lods
ja
aaa
clc
dec
fildll
int3
mov
mov
mov
mov
pop
cmpsl
dec
push
add
adc
and
ja
pop
push
lds
mov
xorb
fstl
push
push
jb
mov
jle
movsl
mov
outsl
andb
daa
xorl
les
scas
in
sbbb
out
pop
leave
jmp
leave
aas
fldt
in
add
std
and
frstor
in
sub
mov
mov
int3
ds
and
stc
fstl
mov
cmp
mov
into
push
sbb
and
and
add
lds
jne
mov
leave
and
pusha
inc
add
cmp
outsb
cmp
pusha
push
in
adc
mov
sub
fisubl
into
pop
fimuls
sbb
jne
lahf
fbstp
pop
inc
and
in
lcall
sub
xchg
pop
add
mov
stc
push
jge
or
mulb
cli
jecxz
stos
movsl
and
xchg
pop
pop
push
sbb
xor
clc
inc
xchg
in
fwait
mov
aam
fsubl
lcall
dec
mov
sbb
lods
lods
daa
jb
fwait
or
pop
rcll
xlat
mov
mov
lods
mov
sub
mov
mov
sbb
movsl
sti
mov
imulb
push
inc
xchg
push
pop
arpl
repz
push
jbe
ret
jle
std
mov
push
add
push
notb
in
dec
xor
fwait
loope
dec
loop
dec
jl
and
ret
dec
and
iret
call
cmp
fdivrs
xlat
in
scas
cltd
leave
dec
xor
icebp
pop
push
xchg
ret
jbe
ja
add
into
ja
loopne
cmp
test
out
seta
mov
cmc
cmpsl
sub
push
push
outsb
outsb
int
jmp
dec
pop
in
push
fs
cmp
mov
cmp
cld
push
xor
mov
mov
mov
dec
adc
and
js
xchg
push
pushf
sub
or
imul
jmp
repz
pushf
sbb
mov
idivl
mov
dec
popa
stos
push
inc
aaa
cltd
pop
add
aaa
or
aam
xor
test
cmp
push
push
or
inc
imul
outsb
or
cwtl
aas
dec
in
popf
push
lock
or
sbb
insb
cltd
subb
cmpsl
mov
fistpl
es
push
sub
popf
adc
cmp
lcall
shll
sbb
sarl
and
scas
insb
mov
add
int3
aas
push
jb
mov
int3
std
cwtl
dec
adcl
shll
pop
jle
mov
mov
xchg
andl
mov
jmp
mov
jecxz
popf
pushf
and
xor
mov
fmuls
jne
push
pop
push
ja
add
fidivrl
or
mov
sub
jle
adc
push
push
dec
out
pop
out
les
sub
mov
ds
dec
in
xchg
aaa
push
fldcw
mulb
xor
xchg
hlt
orb
mov
inc
cmpsb
lret
fs
in
inc
mov
iret
rclb
pop
xchg
insb
sub
sbb
cmpsb
adc
pop
loope
mov
jno
std
outsb
jl
lcall
mov
xchg
jae
fcmovnb
adc
cmpsl
sbb
sub
sbb
pop
insl
iret
imul
dec
xor
out
popa
jp
mov
or
inc
cmc
aad
inc
pop
es
cmp
sbb
shl
and
out
nop
adc
iret
xor
and
xchg
bound
lahf
movsb
ret
pop
adc
outsb
lods
dec
xor
push
push
dec
dec
ss
xlat
ss
lcall
ss
adc
and
stos
mov
in
sub
mov
pushf
adc
push
mov
mov
mov
xlat
out
push
mov
pop
into
add
insl
jnp
cwtl
push
add
adc
sbb
or
mov
sbb
mov
xor
mov
call
addr16
cmp
push
fucompp
mov
add
sub
gs
jbe
jl
out
shll
add
fcmovnb
int
xchg
pop
icebp
hlt
push
dec
jl
imul
ljmp
pop
push
outsb
jno
adc
xor
and
mov
cwtl
iret
enter
jmp
pop
dec
mov
xor
ret
jg
loope
scas
push
mov
jg
xor
test
push
insl
lock
and
push
test
dec
inc
sahf
and
fstl
xor
xorb
jmp
data16
push
cmp
fdivrp
sbb
dec
pop
call
in
adc
movsl
popa
lcall
mov
pop
outsb
cwtl
cmpsl
dec
popa
cld
shlb
daa
pop
clc
cwtl
cmpsl
out
outsb
sbb
jno
inc
add
scas
adc
repnz
int
data16
xchg
fnstsw
and
rclb
stos
fimuls
cwtl
jnp
scas
mov
pop
cmp
fprem1
sub
rcrb
add
call
inc
int3
push
mov
in
adc
in
xchg
inc
std
add
loop
cwtl
lret
mov
mov
adc
insl
adc
repnz
cltd
adc
cmp
add
das
mov
gs
sbb
lea
xorb
dec
cltd
mov
xchg
andl
repnz
aaa
mov
add
aam
mov
adc
xchg
jno
and
stos
lods
mov
jmp
xchg
popa
je
shlb
mov
and
and
xchg
cmp
and
dec
mov
xor
ljmp
test
inc
jno
out
adc
add
jnp
lahf
sarw
dec
pop
daa
xchg
xchg
stc
xorl
or
cli
repz
cmp
das
mov
out
fs
xor
fdivrl
outsb
mov
sti
sub
test
loopne
scas
mov
aam
daa
jno
jecxz
ss
pop
sub
pop
sbb
in
mov
lcall
imul
lods
loope
aad
cmpsb
pop
push
push
cwtl
test
mov
rcll
xchg
inc
push
sarl
sahf
xor
mov
repz
mov
test
test
sub
popl
dec
mov
shlb
notl
jnp
sub
push
mov
icebp
sub
inc
aas
sbb
xor
pop
mull
test
cli
pop
daa
es
push
adc
iret
jp
lock
imul
or
lods
push
fimull
fbld
pop
lods
mov
int
in
or
enter
mov
loopne
in
and
mov
pop
cmp
dec
pop
rol
jb
fisubl
arpl
sub
add
xor
adc
or
rcrl
loopne
test
leave
mov
push
sarl
mov
cmp
jle
gs
xor
push
out
and
stos
cld
lea
push
xchg
movsl
jns
push
loope
pop
out
fsubl
dec
jnp
repnz
and
and
mov
dec
jle
sbb
pusha
pop
repnz
mov
in
dec
movsb
test
inc
lahf
pop
dec
repnz
test
aad
xor
in
mov
sti
arpl
in
pop
adc
call
and
or
cmpb
arpl
sbb
shll
mov
jns
or
dec
cmc
leave
cltd
adc
jg
cld
std
popf
insb
scas
pop
mov
in
dec
adc
push
push
dec
dec
xchg
dec
mov
lods
loope
pushf
cmp
dec
insb
add
push
inc
and
xchg
dec
adc
test
aaa
dec
repz
in
and
cmp
in
cmpsl
pop
pushf
andl
mov
sti
or
divl
lcall
gs
mov
or
add
fstpt
fldcw
cmc
js
mov
scas
and
cmp
mov
js
xor
pop
movsb
hlt
pop
jae
negl
sbb
data16
pop
divl
xchg
adc
mov
lds
cmp
mov
push
sbb
sub
jp
fwait
pop
fisttpl
xor
xor
pusha
addb
mov
and
ljmp
in
or
dec
xchg
mov
je
fcoms
sbb
sar
incb
aam
das
pop
aas
inc
or
std
push
cmpsl
push
dec
adc
mov
aaa
paddsb
xorb
cmp
push
out
jp
out
pop
push
mov
scas
or
xchg
sub
cli
lahf
rclb
cwtl
ss
push
icebp
cmp
xchg
int
in
sbb
xor
seto
imul
xor
xchg
int3
out
xor
sahf
ret
addr16
rcl
lea
dec
push
mov
mov
push
push
arpl
test
out
rorb
mov
mov
cltd
xchg
mov
mov
bound
jp
pop
add
cld
repnz
roll
jb
jl
mov
mov
loopne
or
imul
xchg
repz
iret
lea
adc
fmull
insl
push
xchg
pop
outsb
and
jge
mov
movsl
out
clc
cmpl
fadds
inc
sub
adc
adc
xorb
sbb
test
or
dec
sub
movd
lds
mov
and
lahf
cwtl
pop
fdivrs
pop
add
mov
dec
push
mov
testb
fbstp
insl
cwtl
and
pushf
pop
push
inc
fcompl
ljmp
fisubl
pusha
pop
stos
test
mov
mov
dec
xor
inc
xchg
in
pusha
cmp
jl
ret
mov
lret
lret
jne
dec
sub
xchg
add
jo
scas
push
jne
jns
dec
mov
jbe
daa
inc
cmp
cld
dec
mov
add
lret
icebp
xor
test
in
lret
mov
leave
popf
inc
push
pop
in
mov
mov
dec
lcall
xchg
pop
fdivs
dec
adc
inc
lea
imul
in
adc
insl
xchg
mov
data16
dec
cmp
out
jbe
xchg
and
and
fdivrl
ja
cmp
inc
and
push
cmp
lcall
mov
les
jne
xchg
push
jns
push
arpl
jp
fwait
xor
jne
es
cmp
mov
jno
sar
dec
add
inc
mov
mov
xchg
push
stos
int3
pop
jecxz
dec
stos
or
ret
imul
incl
movsl
icebp
addr16
out
fisttps
pop
mov
imul
or
xlat
sbb
inc
xchg
cmp
int3
sub
fisttpll
cli
mov
negl
les
cmp
fsubp
push
jg
movsl
outsb
mov
loopne
push
adc
ret
push
jge
pusha
mov
push
loop
pop
jecxz
cltd
mov
je
jl
pop
popa
sub
jle
inc
mov
loopne
mov
scas
pop
fs
mov
cmp
xor
push
pusha
or
stos
push
pop
pushf
mov
xchg
jmp
stos
jl
adc
repz
imul
push
pusha
pushf
xor
repnz
int
sbb
xchg
dec
add
push
shl
fwait
lea
xor
out
jne
testb
fildll
xor
jo
add
jae
bound
mov
pushf
xchg
xchg
cwtl
outsb
adc
mov
jbe
mov
xlat
mov
dec
or
ret
test
cli
cld
push
decl
sbb
lock
sub
in
test
popa
imul
inc
and
pop
movq
xor
cmp
fimull
push
sbb
sbb
movsl
and
cmp
popf
cmp
movsl
and
cmpsb
test
nop
inc
stos
cmpsl
outsl
in
jg
iret
in
mov
lret
pusha
xlat
sbb
and
stos
push
pusha
inc
cmp
test
add
dec
mov
orl
out
jmp
mov
adc
fldenv
das
test
insb
push
xchg
dec
dec
cwtl
enter
push
fbld
repnz
add
imul
mov
sub
pop
dec
orb
int3
js,pn
roll
call
sub
test
cmpsl
xorl
dec
sub
cli
insb
lahf
sar
mov
pop
jb
pop
jl
cmp
push
rcrb
outsl
sbb
sub
cmp
or
negl
stos
jns
out
scas
cmpsl
lret
fadds
je
jne
pushf
push
and
daa
inc
into
addb
xchg
xlat
mov
and
sti
push
rep
mov
cmp
in
ret
stos
cmpsb
into
fistpl
dec
pop
cli
push
push
andl
loope
ret
sbb
fdivs
fadds
aaa
cli
mov
mov
testl
inc
sbb
jbe
shll
pusha
mov
subps
add
fidivrl
xor
inc
out
xor
push
leave
mov
cmc
mov
aam
stos
push
and
sbb
pop
dec
nop
dec
movsb
cmp
and
dec
pop
andb
insl
inc
cmp
addr16
mov
cmp
test
xor
mov
lret
into
hlt
lahf
adc
xor
cmp
cmpsl
cltd
inc
push
inc
add
scas
cli
fs
jg
inc
rep
inc
faddl
jb
jle
and
mov
cmp
add
mov
dec
mov
int
into
and
pop
jns
cltd
notb
xchg
pusha
outsl
push
mov
ds
into
xchg
jl
ret
adc
sub
or
mov
call
adcl
scas
xchg
pop
ret
push
push
inc
test
fucomi
cmp
repz
push
pushf
mov
cs
clc
cmp
in
pop
pop
in
add
xor
cmp
mov
in
and
pop
fdiv
lock
test
mov
mov
or
lahf
dec
test
outsl
mov
jnp
jle
loop
loopne
sbb
fwait
push
cs
out
jl
push
psubd
jb
mov
jg
add
testl
jo
inc
jecxz
sbb
sti
jae
xor
push
in
xstore-rng
cmpsl
ret
or
sub
orl
loop
es
cmc
adc
push
inc
pop
mov
mov
mov
cmp
js
dec
push
adc
out
jmp
lods
int
jmp
test
fidivrs
ljmp
bound
into
pop
sub
stc
lea
test
mov
adc
mov
scas
and
jl
xor
add
bound
fidivrs
mov
and
add
cmp
sbb
adc
mov
jbe
arpl
in
sti
lret
repz
or
nop
arpl
xor
andl
lea
sbb
push
loope
sbb
mov
imulb
out
dec
decl
pop
mov
jmp
mov
xor
outsl
inc
enter
int
push
push
ds
or
push
enter
ljmp
int3
aad
scas
cmp
jmp
aaa
repnz
mov
xor
or
aas
inc
pushl
pop
or
dec
clc
or
imul
test
imul
sbb
pusha
push
jecxz
add
pop
pop
xor
and
in
jge
and
push
mov
mov
fwait
mov
or
je
loopne
bound
lea
js
adc
push
pop
sarb
int3
dec
xchg
push
ljmp
mov
aas
jno
jb
push
xchg
jl
lods
and
hlt
fs
lods
inc
push
rcll
mov
cmp
gs
push
int3
stos
xor
jno
and
dec
call
push
cs
sub
add
xor
mov
add
in
xchg
cmp
out
gs
ret
repz
fisubl
outsl
xchg
adc
or
add
out
inc
ljmp
bound
nop
arpl
mov
dec
xor
nop
jmp
xchg
cmp
or
or
pusha
cld
pop
scas
mov
adc
mov
imul
call
xor
sub
lods
lods
dec
icebp
xchg
xchg
pop
jg
jg
sarb
bound
sub
imul
mov
and
pusha
int3
cs
xor
sub
push
rcrl
add
test
xchg
or
scas
iret
sub
xlat
add
sahf
jnp
inc
fisubrl
imul
and
pop
push
jge
xchg
pop
jl
adc
jno
hlt
push
mov
popa
lret
popf
in
add
sub
in
add
mov
out
jb
shll
xor
cmp
jl
inc
insb
push
pop
mov
push
in
ss
loop
sbb
repz
fcom
fistl
xchg
jmp
scas
jb
adc
push
mov
scas
and
jnp
jl
leave
mov
xor
push
xor
add
mov
mov
jmp
sub
mov
insl
cli
pop
cmp
jge
sub
and
jo
push
repz
cmpsl
cli
mov
xlat
hlt
das
pusha
and
push
subl
xchg
add
push
jnp
shrl
iret
push
imul
mov
stos
lahf
cli
or
mov
jbe
mov
xchg
dec
mov
icebp
fists
and
cmp
sub
pop
out
xchg
or
icebp
mov
jnp
pop
xchg
jp
xchg
ret
mov
and
or
push
push
enter
sbbl
fsubl
jo
push
xchg
std
pushf
fsubrl
push
dec
dec
subl
into
add
jecxz
push
icebp
mov
mov
mov
jl
mov
and
sbb
aad
or
add
aad
loopne
push
addl
and
mov
xchg
or
jl
lcall
mov
imul
setl
adcl
pop
orl
out
push
jne
or
push
mov
std
aad
decl
shll
or
adc
sar
inc
sar
mov
xchg
inc
adc
repnz
shll
dec
subl
dec
adc
push
xor
mov
nop
or
sub
mov
sub
insb
jno
arpl
lret
clc
and
lret
sub
push
sahf
addb
add
pop
pop
pop
je
jbe
mov
jnp
pop
push
fcompl
sbb
js
mov
int3
xchg
sbb
lock
pushf
loopne
jae
and
dec
mull
push
and
mov
iret
jae
add
add
pusha
sti
inc
push
ljmp
aam
in
xchg
icebp
pop
loop
mov
or
insb
call
jle
or
mov
mov
adc
loopne
aaa
sbb
mov
rcrl
xchg
lods
lret
adc
clc
imul
loopne
mov
iret
mov
incl
rcll
scas
mov
jl
js
vmovq
cli
mov
dec
sub
mov
and
stos
sub
sbb
pop
and
testl
dec
xchg
nop
mov
mov
in
shlb
sbb
loopne
insl
adc
lahf
je
cs
lahf
mov
inc
lods
add
xor
mov
mov
jb
pop
push
mov
out
test
and
xlat
push
xlat
out
lcall
cwtl
cltd
sbb
subl
testb
aaa
in
ret
mov
xlat
arpl
push
xchg
and
mov
mov
push
loop
test
cmp
add
sub
xchg
jno
inc
int3
push
addr16
xchg
pusha
fsubp
movsl
outsl
stos
std
add
ds
push
fwait
aad
sub
cmp
ret
push
xor
mov
repnz
push
data16
aad
out
mov
sti
imull
andl
in
dec
imul
shr
call
outsl
cmp
and
test
add
inc
inc
dec
inc
jmp
mov
rclb
fxch
psrlw
leave
scas
out
arpl
dec
mov
xchg
arpl
or
stos
test
mov
add
xchg
or
and
or
and
pop
jnp
or
stos
adc
inc
jge
nop
out
sub
loope
add
lret
jmp
in
pop
push
icebp
test
inc
sbb
push
fstps
das
outsl
sbb
mov
mov
jge
idivb
fptan
and
insl
xchg
leave
mov
cltd
ds
add
mov
out
adc
inc
loopne
xchg
loop
stos
clc
mov
repz
push
adc
insb
add
mov
add
ljmp
pop
xchg
push
adc
xchg
imul
in
mov
mov
outsl
xchg
ja
push
leave
ds
pop
daa
or
sbb
jp
lods
jno
cmc
add
stos
and
adcl
mov
push
xor
add
mov
mov
and
iret
jmp
sub
xchg
xchg
sahf
pop
adc
pop
add
outsl
mov
pop
mov
jae
mov
test
ss
in
push
fdivrs
jecxz
jle
push
imul
push
ret
sub
and
enter
subl
xlat
mov
inc
das
mov
into
jmp
mov
mov
mov
lret
jae
mov
lock
push
aam
xchg
jle
mov
mov
test
pusha
cwtl
xchg
xor
jb
sbb
pusha
movsb
pop
push
mov
lock
call
xor
cmp
addr16
push
jle
jns
push
jp
cmp
push
sub
jl
pop
fdivl
mov
pushf
inc
jno
fimull
lret
shrb
cmp
aad
shl
sarb
mov
mov
leave
mov
inc
fcmovnbe
inc
or
cmp
ficoms
enter
xor
insl
testb
ja
pop
data16
notl
mov
cmp
outsl
sub
xchg
mov
lret
inc
loop
test
jge,pn
mov
mov
sub
insb
inc
or
xchg
sbb
add
stos
mov
sbb
mov
outsl
fldcw
repnz
sbb
lcall
and
pushw
and
popf
inc
dec
jnp
pop
lods
rcrl
push
insb
out
pop
gs
scas
outsb
or
call
mov
gs
mov
push
push
mov
push
bound
shll
test
push
dec
shr
fsubrl
out
jecxz
stos
mov
push
stos
jl
out
add
std
inc
lea
shlb
inc
or
inc
in
push
mov
movsl
push
in
mov
jg
cwtl
cmpsl
lret
leave
jmp
aaa
imul
outsb
jno
pop
adc
inc
rorl
xchg
inc
aaa
xchg
out
imul
and
pop
ret
add
lea
popa
out
fisubs
repnz
jle
out
ret
push
mov
dec
cld
dec
jne
push
xchg
les
icebp
jo
sahf
mov
cmp
test
pop
push
mov
push
inc
dec
mov
in
scas
xor
jae
out
pusha
add
dec
adc
mov
jns
flds
jmp
sbb
push
inc
xorl
aas
fnsave
js
mov
bound
flds
arpl
cmp
les
out
ror
sub
sahf
je
push
cs
jle
adc
mov
outsl
pop
clc
gs
push
add
scas
jmp
and
push
inc
and
pusha
and
cmp
add
loope
scas
enter
and
fildl
lock
fdiv
or
inc
jle,pn
add
clc
pop
out
scas
fisttpll
inc
inc
and
or
push
fldt
cld
rclb
roll
and
ds
stc
xor
push
or
or
cmp
and
mov
ret
jo
pop
push
stc
inc
stos
mov
sti
push
mov
or
mov
ret
or
or
rorl
arpl
dec
cwtl
fcmovbe
xor
icebp
scas
dec
sbb
je
std
mov
lret
inc
das
or
outsb
dec
jae
mov
adc
bound
or
or
dec
dec
cmp
mov
sbb
dec
decb
lea
cmc
lahf
ret
dec
cs
adc
dec
adc
idivl
test
inc
cmp
adc
pop
imul
sub
out
inc
cmp
jnp
mov
xor
ret
aaa
sti
into
aaa
mov
icebp
andb
mov
sub
xchg
lret
mov
and
sbb
xchg
and
add
mov
pop
jne
aam
int3
or
jb
test
loopne
sub
mov
mov
clc
xchg
testl
push
dec
jno
inc
lods
xor
mov
sbb
sbb
movsl
imul
cmpsl
dec
push
repnz
jb
or
mov
xor
aas
cli
cmp
pop
das
sbb
imul
push
js
mov
in
out
pop
sbb
push
xlat
mov
lods
lods
adc
and
mov
mov
roll
push
mull
mov
mov
mov
cmpsl
in
push
mov
dec
dec
mov
enter
mov
leave
inc
and
add
add
and
cmc
stos
xchg
or
dec
movsl
fninit
push
mov
add
xchg
jg
or
lret
movsl
test
dec
add
push
xchg
and
arpl
jge
and
sub
test
mov
into
addb
je,pt
test
add
mov
xor
mov
jp
outsl
fdivp
loop
pop
pusha
push
shlb
jb
insl
xchg
std
mov
dec
aad
dec
dec
add
neg
fistpll
mov
cmpsl
dec
rcrl
std
pop
add
xchg
mov
xlat
sbb
je
lods
inc
scas
iret
and
in
sbb
repnz
add
sub
test
loop
ljmp
out
rol
xchg
jge
out
xchg
fdivp
push
cld
movsb
mov
pop
mov
shll
shl
leave
sub
clc
mov
hlt
sub
fnsave
mov
push
jg
je
push
aaa
sbb
in
push
in
mov
pop
jb
fsubl
data16
out
push
ret
sbb
dec
in
jge
hlt
call
roll
pushf
push
mov
mov
popf
mov
xor
lods
insb
sbb
idiv
cmpsb
fbld
neg
frstor
or
mov
xchg
jl
xor
out
ret
xchg
adc
jb
push
push
add
add
jae
lret
stos
jge
xchg
push
mov
dec
xor
insl
mov
repnz
push
inc
pop
push
cli
popf
jno
inc
out
mov
jne
sub
movsb
cmc
cli
adc
push
mov
stos
mov
les
inc
ficoms
cltd
sbb
xchg
dec
lods
dec
xor
out
loopne
arpl
inc
push
roll
popf
mov
inc
xchg
loop
cwtl
faddp
mov
in
jle
lock
xlat
xlat
les
out
dec
test
inc
adc
adc
mov
mov
mov
icebp
bnd
add
out
cmp
cli
push
cmp
stos
push
test
out
popa
adc
mov
insl
push
sub
push
fldcw
aas
jo
lea
icebp
add
outsb
and
ret
mov
push
add
xor
push
xor
outsl
iret
push
stos
adc
push
pop
rol
sub
in
cmpsb
aam
je
mull
mov
mov
in
mov
pop
jns
ret
leave
mov
imul
test
stos
in
test
jns
sub
mov
call
mov
cmp
in
and
pop
or
jo
push
push
std
jne
or
xchg
fisttpl
mov
jno
lods
mov
mov
je
ret
mov
or
mov
xor
cmp
aad
cmp
add
fisttps
lock
mov
inc
sahf
fildll
aas
lea
push
xchg
pop
inc
insl
sub
stc
xor
dec
mov
jae
movsl
mov
out
fldcw
movl
pop
xchg
mov
push
data16
or
popf
iret
jne
inc
adcl
mov
fldenv
cwtl
cmp
das
test
xchg
cmp
loopne
cmpsb
and
in
add
sti
mov
cwtl
cmpl
adc
lret
lea
pusha
pop
clc
sbb
lds
stos
outsb
insb
out
xchg
ror
mov
mov
xchg
aas
lcall
movsl
mov
xor
xchg
aad
sbb
cli
cli
aas
push
xor
xchg
or
dec
fidivs
stos
inc
ja
xchg
mov
jmp
movsb
enterw
addr16
and
mov
movsl
mov
loope
push
test
cmp
mov
and
pop
pop
cmp
jmp
or
xchg
cmpb
jg
clc
xchg
repz
push
nop
or
adc
add
cmp
mov
mov
pop
jecxz
cmc
xlat
xor
subb
jmp
je
jp
xchg
fdivl
push
mov
mov
push
fdivs
js
popa
lahf
js
xchg
push
xor
xchg
mov
jl
adc
inc
adc
popf
push
push
pop
jb
movsb
test
enter
push
inc
cwtl
xor
and
out
lahf
js
iret
sbb
into
dec
xor
mov
mov
lock
fcmove
adc
sbb
outsl
cmpsb
push
movlps
push
popa
jo
inc
faddl
fwait
mov
mov
mov
aas
test
lock
jmp
test
decb
cld
push
int
adc
sahf
add
mov
subb
int3
xchg
imul
sti
xchg
and
mov
aas
addl
xor
lods
push
jo
cltd
clc
imul
lods
cmp
mov
loope
dec
pop
push
sbb
loop
fst
rclb
imul
mov
mov
es
mov
mov
pop
fucomi
movsl
push
jne
aad
and
adc
adc
pop
mov
js
sub
test
mull
fldcw
push
mov
jmp
and
or
xchg
mov
jnp
and
sub
mov
nop
cli
mov
mov
xor
xor
repnz
cmp
lock
ds
repz
repnz
mov
mov
enter
pop
jo
fdivrl
mov
stos
xor
pusha
nop
mov
fstps
stc
push
les
and
popa
outsb
pop
clc
sub
add
push
test
loop
xchg
fs
out
jle
adc
pushf
cmp
push
movsl
xchg
test
xor
cmp
dec
adc
lock
pop
into
outsb
mov
cld
in
in
lods
jmp
cmp
scas
shrb
movsb
inc
sti
movb
aad
cwtl
jge
inc
adc
and
mov
mov
sub
mov
rolb
rclb
pop
mov
sti
push
pop
sub
inc
xor
orb
repnz
xchg
jno
movsl
adc
out
imul
mov
into
rcrl
aas
cmp
mov
pop
dec
icebp
add
push
xchg
or
push
enter
test
shll
xchg
mov
and
stc
pop
cmp
dec
loope
and
pop
sbb
int
cmpsb
pop
jne
mov
in
pushf
int
mov
stc
std
push
sbb
add
mov
jno
dec
in
push
mov
mov
in
in
jne
mov
test
scas
out
out
and
mov
fsubrs
pop
xor
data16
repnz
or
sbb
pop
mov
mov
mov
sub
inc
repz
jnp
pusha
pop
xchg
jnp
mov
cs
pop
in
adc
je
sbb
sbb
mov
lock
test
dec
mov
mov
out
into
xchg
das
cmp
xor
popf
xchg
dec
lahf
add
enter
xchg
and
loop
fs
test
xchg
ficompl
in
and
cmpsb
hlt
cmp
mull
roll
insl
lcall
mov
push
and
test
repz
add
or
mov
rcl
test
les
jecxz
cmp
xchg
rcl
jle
mov
xchg
push
mov
mov
pushf
pushf
dec
sbb
in
cli
call
sti
test
jge
jge
lods
mov
push
jg
nop
sti
lds
xchg
insb
push
jg
pop
in
push
fcmove
mov
add
negb
mov
or
in
dec
pop
in
jge
mov
cmp
in
rcr
pop
in
cmp
xor
fsubs
pop
xchg
int
xchg
dec
lret
mov
notl
sbb
dec
movsl
movsb
pop
jg
and
pop
inc
push
cmp
enter
aaa
ret
lahf
repnz
xor
jb
outsb
rolb
arpl
jbe
stos
adc
mov
push
mov
jmp
jle
cwtl
lock
add
cmp
lret
jne
lods
imul
andl
jmp
sahf
cmp
sbb
sub
sbb
jo
es
mov
pop
or
pop
mov
jle
pushf
jo
testb
jb
je
push
lahf
inc
and
push
xchg
leave
addr16
inc
sbb
add
mov
fistpll
icebp
aas
xlat
sbb
test
xchg
imul
scas
int
scas
mov
push
scas
xchg
imul
ja
push
aam
jg
push
mov
stos
sub
hlt
sbb
cmp
aad
test
pushf
add
jb
arpl
mov
insb
sbb
and
cmpsb
mov
jl
sub
in
mov
js
sub
add
sbb
sahf
and
fnstsw
aam
out
sbb
jl
js
lods
sub
daa
jecxz
jne
mov
sahf
cwtl
sub
enter
xchg
sahf
fldl
in
sbb
add
insb
fs
out
mov
push
mov
shlb
aas
fistps
clc
sub
push
adc
jecxz
or
scas
xor
std
inc
jae
and
insl
xchg
clc
bswap
add
mov
pop
test
xchg
cld
add
pop
pop
fisubl
mov
les
scas
shl
sub
lahf
xchg
xchg
lahf
lock
setg
lea
mov
ja
mov
lods
inc
mov
movsb
mov
roll
pop
dec
inc
int3
xor
ret
imul
mov
jge
add
push
rolb
decl
push
outsl
mov
mov
mov
out
pushf
test
adc
sub
and
test
jecxz
popa
test
mov
aam
push
movsl
js
ds
xor
sbbb
xchg
mov
xchg
mov
pop
sbb
sub
mov
lds
cld
fildll
lcall
inc
sub
add
cmp
das
jo
add
jno
iret
inc
ret
cmp
jl
jo
loope
xchg
bound
lods
inc
bound
subl
les
repnz
dec
movsb
popf
lods
mov
xchg
pop
fnstcw
cs
fstl
ss
mov
sbb
and
enter
cmp
imul
mov
adcb
cmpsl
cmp
mov
pop
cld
mov
out
rol
and
mov
mov
sbb
jmp
cmp
and
jle
ljmp
jmp
clc
and
sarl
ret
and
sbb
into
add
mov
inc
jne
inc
or
push
cmpsl
mov
imul
sub
pop
ljmp
stc
add
jp
pop
sbb
lock
loopne
pop
push
mov
jp
out
jmp
mov
lahf
js
xchg
adc
scas
pop
cli
mov
xor
outsl
orb
sub
lods
mov
add
das
clc
lds
loopne
pop
jne
xchg
lret
jno
dec
cmpsl
adc
pop
jnp
test
ljmp
loopne
jnp
xor
std
jns
lods
ljmp
jle
lcall
dec
jb
cmp
ret
cmpsb
jmp
sbb
pop
test
ljmp
jmp
aaa
inc
xchg
stos
push
call
ljmp
jecxz
and
fisubrs
es
jl
push
out
dec
and
jmp
aad
sub
push
je
imul
fdivr
lods
call
cmc
add
test
fists
adc
mov
cltd
mov
or
adc
pushf
dec
cld
jl
repz
test
cwtl
insl
and
xchg
cmp
bound
or
inc
test
outsb
das
push
les
arpl
push
js
lea
rcr
loopne
sub
ds
pop
mov
andl
int
jge
jae
test
adc
in
mov
in
sub
xchg
mov
loop
inc
jno
aad
mov
pushf
frstor
or
jnp
in
loopne
or
test
xor
cmp
inc
xchg
cli
or
call
popa
jne
or
mov
mov
xor
std
call
test
or
and
in
or
and
enter
push
xlat
fistpll
xchg
lea
pushf
test
pushf
lret
pushf
pop
rorl
cmpsl
es
lret
pushf
add
cmp
jb
adc
addb
and
js
aam
out
cwtl
jl
jmp
addr16
jnp
ret
xor
imul
inc
mov
jo
sub
sahf
rorl
mov
xchg
ss
popa
or
push
inc
stos
pop
adc
mov
jp
pop
mov
cmp
loop
les
dec
stos
lret
decb
fdivrl
scas
test
jne
cmp
mov
je
pop
bnd
mov
fisttpl
popa
xchg
xchg
mov
jmp
add
mov
ss
mov
mov
shrl
popa
andl
lcall
dec
dec
testb
inc
cwtl
push
and
pop
shlb
aad
sub
jp
rcll
add
mov
sahf
or
movl
out
dec
inc
sub
aad
mov
push
or
or
and
cltd
and
aad
mov
ljmp
xchg
dec
or
push
push
lock
xlat
test
push
mov
pop
repz
mov
jmp
pop
aad
and
loopne
ljmp
fmuls
mov
add
stos
jecxz
pop
jae
stos
das
sub
movsb
out
jmp
lret
jns
fistpl
movsl
shlb
adc
jbe
cmp
ficoms
mov
xchg
andb
cmc
and
or
subl
insb
sub
mov
popa
lods
lret
mov
fcomi
adc
mov
and
stos
ds
mov
adc
stc
add
and
ficoms
ret
aas
push
icebp
lods
jo
mov
jle
sbb
cmp
or
xchg
xor
dec
cltd
jg
xchg
inc
imul
jne
cmc
into
pop
jg
outsl
cmpsb
ret
scas
mov
xor
xchg
xchg
testb
daa
sbb
adc
or
shll
fcoml
pop
xchg
movd
testl
add
daa
jmp
sub
push
jle
inc
les
push
or
ret
mov
fisubrl
icebp
lret
mov
sub
xchg
shrb
jbe
push
fs
daa
adc
outsb
pop
push
ljmp
ret
je
sbb
popa
adc
jp
outsb
push
in
jge
int3
pop
push
stos
mov
mov
imul
cli
lret
frstor
cmp
je
sahf
loope
insl
sbb
aam
bound
scas
outsl
lds
scas
icebp
cmp
leave
or
xchg
pop
jp
pop
mov
or
je
call
mov
stc
hlt
add
scas
icebp
xchg
mov
jb
mov
fdivs
sbb
fstpt
pop
inc
aas
jb
fcoms
std
imul
dec
jp
jl
in
sbb
dec
daa
pop
sbb
or
mov
in
xchg
out
sub
mov
data16
push
xchg
dec
xor
aaa
mulb
xor
mov
and
jb
sbb
xor
repz
popa
enter
xor
scas
mov
push
movsb
adcb
popa
mov
mov
add
shlb
xchg
mov
in
mov
fildl
fdivrl
adc
lods
movsb
cmp
cmpsl
in
xor
lahf
idivl
fnstsw
add
loope
cmp
mov
js
sbb
push
adc
movsb
cli
sub
sahf
mov
outsl
imul
inc
out
inc
adc
scas
mov
sbb
mov
mov
rcrb
dec
add
mov
outsl
imul
add
scas
sbb
aad
daa
fmuls
pop
mov
push
dec
ds
xchg
xor
dec
test
lds
cmpsl
icebp
popf
sub
fnstenv
mov
sub
push
stos
hlt
stos
or
and
cld
andb
cmp
negb
cmc
xchg
xchg
popa
xor
lds
lods
sub
and
vcvttps2dq
stc
inc
adc
jne
enter
scas
int3
jnp
mov
sbbb
or
ficompl
fstl
jne
cmp
bound
cmp
or
int
addb
addr16
jg
xor
hlt
mov
xchg
rcrl
adcl
pop
insl
adc
cld
inc
ret
add
fistpll
out
aaa
push
lea
or
out
push
xchg
add
pop
andl
lret
push
lds
lock
sub
pop
es
mov
call
rcll
into
aaa
sub
enter
movsb
and
cmp
and
je
hlt
aaa
inc
addr16
inc
push
fdivrs
repnz
xchg
lret
outsb
and
cmpsl
shrd
mov
push
stc
in
shll
pop
outsb
into
in
testb
dec
sti
or
shlb
inc
andl
dec
shrl
je
stos
and
in
insb
inc
out
jae
fisttps
mov
sahf
add
xor
or
arpl
and
add
ret
inc
push
push
pop
push
jbe
jge
std
mov
in
mov
movsb
lcall
pop
sbb
push
inc
push
and
in
push
jp
push
fmull
in
dec
movl
cmpb
xor
fldcw
sbb
inc
je
push
sbb
lods
test
add
pop
sbb
lret
loopne
std
insl
push
push
icebp
inc
sbb
in
xchg
test
cmc
mov
fistpll
in
je
xchg
sti
repz
inc
jecxz
adc
out
sub
rcll
mov
js
cmp
push
and
jns
mov
subb
cmp
mov
jo
or
xor
inc
not
push
cmp
aam
xchg
fs
sbb
sbb
dec
scas
push
push
xor
sarb
lea
fisttpl
xchg
xchg
in
out
adc
pop
pop
xchg
orl
in
flds
ret
push
call
xlat
stc
cld
dec
je
mov
testb
mov
mov
push
test
mov
fildll
inc
xor
movsl
js
ss
mov
insl
dec
adc
test
xchg
mov
sbb
pop
xchg
addr16
lds
fdivrp
sub
stc
mov
ret
pop
xor
movb
mov
mov
movsl
inc
mov
dec
std
or
adc
mov
call
inc
inc
cmp
outsl
inc
add
jae
mov
push
stos
adc
jl
das
je
sarb
adc
xlat
icebp
push
dec
ret
lods
xchg
movsl
pop
les
xchg
mov
pop
push
pop
rcrb
jns
popa
sbb
and
into
rorl
jnp
cmp
cmpsb
xchg
jge
pusha
inc
xorb
sbb
add
sbb
loope
jle
hlt
dec
xlat
xchg
mov
jmp
pop
into
mov
inc
and
add
and
ljmp
jno
fstl
adc
in
call
out
xchg
aas
std
jns
xchg
xor
cmp
fwait
inc
add
cli
ljmp
and
push
add
sahf
sbb
sti
sahf
scas
dec
or
pop
adc
cmpb
sbb
adc
into
dec
cmp
sbb
in
mov
xor
pusha
mov
mov
dec
xchg
jne
push
sar
inc
mov
pop
push
mov
jnp
pop
popa
mov
or
pop
dec
xor
out
and
fsub
jmp
xchg
lods
mov
int
es
dec
in
loope
bound
lea
stos
punpckhbw
jns
int
cmc
push
xor
inc
mov
ljmp
test
sbb
pop
subl
push
icebp
bound
xor
jo
fldenv
fiaddl
scas
inc
sbb
xor
sub
mov
cmp
xchg
fcompl
out
cmp
test
fnstenv
sbb
lods
jb
fidivl
pop
ret
pop
mov
add
loope
mov
cmp
orl
pop
lahf
inc
scas
sub
bound
pop
inc
add
out
fmuls
jmp
mov
outsl
cs
sbb
xor
sbbb
add
clc
ja
fsts
outsb
iret
mov
fstl
sub
push
adc
pop
cmp
push
outsl
fdivl
xchg
cld
subb
adc
xlat
aam
sbb
fisttpl
das
adc
data16
fisubl
and
and
imul
push
lret
addb
mov
jno
xor
imul
cmpsl
jg
test
inc
cld
inc
dec
aad
ds
shlb
or
inc
frstor
add
jo
sbb
push
xchg
adc
insl
popf
xchg
subb
dec
test
cmp
push
xor
adc
push
imul
adc
mov
and
xchg
sub
int3
ret
jp
rolb
or
jns
mov
inc
push
out
add
arpl
stos
sbb
sub
cmpsl
dec
pusha
hlt
in
xchg
push
xor
jae
loopne
fs
in
sub
insl
movsb
mov
bound
mov
popf
sbb
push
lock
in
mov
jnp
data16
inc
or
mov
pop
and
shl
add
cmp
sbb
imul
dec
lret
enter
sub
repnz
hlt
and
cmp
adc
cmpsl
sub
cmp
and
adc
std
sub
xchg
orb
adc
sbb
pop
insb
aam
mov
xchg
adc
stos
aas
loop
mov
pushf
mov
shll
mov
push
inc
add
int3
fsubs
or
enter
sti
sbb
xchg
ret
ret
ja
pop
xlat
xchg
push
jp
xchg
push
and
push
xchg
mov
inc
jno
test
sub
cltd
mov
ret
xchg
mov
cli
lods
xchg
add
jl
je
or
push
ficompl
imul
xor
jnp
out
test
inc
pop
mov
mov
push
enter
jge
loope
aaa
dec
pop
data16
and
rorb
sbb
jbe
lods
mov
movl
out
loopne
pop
sub
cli
xor
stos
jne
fldt
push
rcl
xchg
push
mov
add
loopne
aaa
adcb
popf
add
frstor
ret
inc
bnd
stos
inc
leave
lock
xchg
xor
inc
inc
aaa
push
add
inc
mov
insl
inc
inc
and
test
filds
test
jne
push
sbb
daa
adc
or
adc
negb
jecxz
pusha
clc
sub
scas
fst
and
inc
pop
orl
hlt
inc
insl
xor
pop
inc
mov
pop
test
outsb
in
stos
lods
and
pushf
inc
pop
shlb
sarl
push
or
push
lods
icebp
loopne
jb
xor
add
leave
std
push
inc
shlb
cmpsb
ljmp
dec
jbe
popa
dec
js
insl
daa
add
push
cmc
test
arpl
inc
sub
aam
push
add
ret
inc
mov
cld
int
out
hlt
loope
lods
cmp
fdivrl
fmuls
sub
test
mov
mov
ja
lcall
mov
sub
aas
jecxz
mov
addr16
pop
xor
dec
in
adc
rcrl
test
dec
inc
or
popa
ret
pop
aas
xchg
add
push
mov
adc
cmp
stos
aam
pop
mov
jmp
je
jo
stos
push
mov
les
dec
lcall
xor
repz
pop
popf
loope
cmp
mov
pushf
leave
push
jmp
lea
pushf
pop
cmp
sub
inc
fildll
jns
lret
stos
arpl
jp
cmc
inc
addl
pop
clc
loope
lret
rolb
dec
shrb
sarl
adc
mov
jno
in
adc
pop
mov
andb
push
mov
and
sahf
cltd
cmpsb
or
shrl
subl
add
ja
or
sbbl
inc
adcl
pushf
movsl
mov
mov
pop
xor
add
cmp
dec
movsl
arpl
jbe
add
pop
cmpsl
stos
iret
push
inc
sub
lods
movsb
movsb
mov
mov
call
xor
jb
dec
js
daa
jecxz
std
addl
jecxz
es
sarb
pop
add
scas
mov
jl
sbb
sub
in
test
cmp
cmpsl
cmp
stos
or
jmp
and
cmp
mov
iret
sar
iret
les
std
push
cmp
mov
ljmp
mov
frstor
mov
push
sub
sub
add
and
dec
jecxz
mov
mov
xor
bound
push
cmp
sub
lock
cmp
sbb
xor
fsubp
cli
or
icebp
cltd
mov
out
pop
lds
scas
mov
gs
pop
sub
out
stos
arpl
ja
aaa
les
add
aad
inc
fdivr
scas
lea
add
repz
pop
xlat
scas
xchg
pushl
das
or
dec
pop
scas
in
cmpsl
out
mov
xor
xor
add
fisubs
cmp
loopne
out
in
fimuls
bound
hlt
testl
push
dec
mov
sub
mov
push
test
sub
in
subl
sub
xchg
push
mov
in
insb
scas
scas
mov
test
adc
int3
or
cmp
mov
jle
dec
cwtl
mov
in
test
shlb
add
les
insb
je
sbb
mov
lock
xor
lret
lret
lock
fwait
hlt
ja
sahf
cs
pop
loop
aaa
pusha
pop
lea
xchg
push
mov
stc
sbb
dec
sub
imull
rcrl
and
dec
xor
xor
adc
push
decb
sbb
fildl
outsb
xchg
dec
inc
push
adc
dec
lahf
push
popa
sub
orb
subl
mov
into
fadds
mov
dec
cwtd
xor
mov
frstor
push
adc
inc
pop
idivb
xor
sub
xlat
mov
jno
adc
adcb
mov
add
inc
push
dec
push
clc
imul
ret
hlt
xor
mov
frstor
add
sbb
lods
sub
fwait
xor
cmovno
fwait
push
jne
and
nop
cli
aam
stc
je
xor
jns
into
sar
ret
pop
sbbb
sub
dec
dec
je
sub
dec
out
sbb
into
sbb
sub
lret
jbe
daa
scas
ret
fstpl
dec
sub
inc
sub
dec
sahf
jg
jp
xor
ja
mov
add
cmp
das
pop
idivb
xchg
push
rcrl
mov
ds
sbb
stos
sbb
cwtl
mov
pusha
mov
jae
hlt
add
cmc
adc
jbe
adc
fwait
or
loop
push
fsubrs
cmpsb
cmp
shlb
push
mov
dec
pop
ret
mov
movsl
add
adc
push
pop
sbb
adcb
gs
mov
sbb
fisttpll
aad
pusha
out
mov
sbbb
out
inc
movsb
roll
mov
cmp
jb
movsb
mov
mov
sbb
stc
nop
xorb
jbe
rolb
popa
or
dec
pop
adc
andps
jg
mov
push
or
inc
ret
xor
fildll
aas
or
and
lcall
movsl
rorb
mov
incb
aad
push
mov
sbb
int3
inc
dec
pop
sbb
dec
cmc
int3
fs
fs
ret
lea
fstp
lret
pushf
cmp
fstps
or
jp
xchg
or
test
in
cmc
xor
arpl
ret
inc
mov
xbegin
cmp
insl
or
sbb
in
insb
adc
mov
push
stos
xchg
stos
fdivrl
mov
scas
add
dec
fimuls
lods
sub
stos
pop
hlt
xlat
aas
cmpsb
repz
push
fildll
jns
push
push
insl
sub
lret
fstps
mov
pop
lahf
adc
fnstcw
and
push
inc
fisttpl
cltd
jo
mov
push
or
cli
insb
in
push
ret
mov
push
cs
dec
jns
testb
add
addr16
xchg
rorl
mov
lds
add
insb
dec
dec
std
push
dec
adc
xchg
mov
pop
popf
xor
sbb
and
or
test
xchg
inc
mov
xlat
loope
cmp
arpl
jge
je
cmp
ret
dec
iret
out
cmp
mov
mov
sub
push
aas
loope
testl
inc
repnz
push
enter
orb
mov
lret
push
out
jmp
dec
fs
inc
inc
mov
pop
iret
xchg
test
lock
lahf
push
mov
pop
dec
push
sub
imul
int
test
jmp
inc
lds
dec
in
ret
outsl
or
test
xlat
ljmp
sub
push
sub
cmp
mov
push
jl
adc
push
loopne
xchg
jno
sbb
aas
add
jmp
or
jmp
in
in
xor
sarb
arpl
jbe
orl
pop
ss
xchg
pushl
adc
outsb
shr
push
lahf
cmp
scas
sub
movl
cli
and
sub
cld
pop
clc
sahf
fistl
test
jecxz
lea
cs
test
inc
std
adc
adc
sub
jb
cs
aam
dec
xorps
adc
push
cld
out
xlat
mov
add
push
mov
mov
add
test
fstpt
push
sar
adc
outsl
pop
mov
outsb
ficompl
out
cmc
jbe
and
push
pop
pop
mov
inc
or
test
sub
inc
xchg
movsl
push
push
stos
mov
loopne
cwtl
dec
es
out
jge
fdivl
jg
xchg
stos
sub
ror
call
inc
mull
mov
push
adc
push
fs
inc
ficomps
daa
sahf
mov
jg
sbb
cmp
subl
mov
popa
mov
inc
and
push
push
add
xor
in
cmp
cmp
call
pop
fcoml
xor
push
xor
pop
add
mov
push
adc
aad
fnstenv
inc
std
aas
loop
scas
or
push
inc
adc
push
cmc
sub
or
fildll
sbbb
jmp
das
pop
shlb
sub
push
xchg
je
push
test
xor
push
fnsave
adc
test
mov
out
jo
imul
cltd
jns
cs
jo
pop
push
jb
sbb
notb
rcrb
sbb
jb
rorb
popf
popf
inc
mov
aas
jmp
jge
ds
in
imul
dec
lock
sub
cmp
jg
shll
pushl
fdivr
sbb
loope
test
aaa
mov
mov
adc
lahf
and
and
dec
lds
outsl
cmp
movsb
into
mov
hlt
andl
aam
in
pop
pop
jns
mov
cmc
fldl
or
push
add
daa
mov
xchg
add
cmc
mov
cmpsl
push
cld
and
mull
popa
movsb
pop
mov
mov
mov
or
pop
std
pop
jge
into
mov
or
mov
push
test
or
pusha
xchg
jp
pop
stos
scas
mov
imul
dec
daa
inc
mov
jo
mov
lock
mov
and
popf
or
in
outsb
incl
in
or
stc
addr16
fs
adc
test
jns
test
cmp
cmpsb
testl
sub
and
dec
movsl
push
ror
mov
push
in
mov
jecxz
imul
push
hlt
pop
aam
push
ret
ret
movl
push
sub
mov
hlt
shrb
xchg
fisubl
dec
fwait
fs
jmp
pushf
sub
push
xchg
pop
mov
pop
mov
popf
jmp
shll
add
jle
push
cmp
outsb
nop
add
pop
mov
mov
mov
pushf
rcrl
mov
dec
xor
dec
cld
in
inc
or
in
xor
push
cld
ds
data16
push
out
idiv
and
xchg
inc
aas
into
add
xchg
add
scas
sub
or
sbb
nop
outsb
stc
jne
aam
call
ret
lcall
pop
imul
jge
or
dec
mov
dec
pop
mov
daa
and
out
lcall
mov
xchg
jge
adc
addl
xchg
cld
mov
das
sahf
nop
push
fisubrl
sti
sub
incb
lds
popa
mov
or
pop
push
fs
dec
fistl
inc
sub
lret
inc
pushf
fsubs
mov
inc
sbb
hlt
cmp
out
rcrl
jne
and
jbe
push
loope
add
or
test
addr16
mov
enter
jno
aam
repz
lcall
xorl
mov
xor
arpl
loop
in
bound
push
jecxz
dec
daa
and
mov
mov
dec
popa
mov
adc
cmpsl
repz
sbb
and
addr16
les
adc
sub
mov
cmc
mov
jmp
jecxz
xor
inc
call
push
mov
fcmovnbe
add
lcall
inc
sub
mov
pop
xlat
or
outsl
pushf
mov
sbbl
jecxz
push
ss
mov
mov
jb
test
pop
fs
mov
dec
push
and
and
mov
insb
dec
mov
push
inc
xchg
mov
pop
jb
push
lds
mov
jns
ds
addr16
negb
sbb
clc
pop
lret
popf
dec
test
inc
aas
test
loopne
jnp
add
aad
push
das
jp
ds
and
incl
xchg
or
sbb
mov
leave
cmpsb
mov
fsubs
adc
or
dec
insb
loop
lea
push
or
int3
xor
aas
lcall
insb
cld
jg
pmulhuw
hlt
test
fs
sub
insl
cmp
fdivs
add
pusha
shl
cld
aas
les
push
lock
adc
mov
mov
xor
push
pop
jno
repz
push
cwtl
lods
add
daa
mov
repnz
sbb
hlt
adc
pop
pop
repnz
sub
lcall
push
cmpsb
mov
push
push
test
xchg
mov
mov
rolb
push
push
or
mov
mov
push
repnz
mov
pop
mov
inc
test
jmp
nop
push
sub
getsec
xchg
mov
push
aad
cmc
lcall
loope
dec
add
mov
outsl
mov
sbb
mov
jmp
mov
and
xor
pusha
decb
sbb
fwait
rcll
into
jp
inc
sub
dec
into
test
je
bound
inc
dec
mov
or
fcomp
ret
arpl
push
daa
in
std
dec
dec
pop
jecxz
add
lock
pop
mov
out
cmp
ljmp
addb
es
leave
out
enter
sub
add
js
cmp
dec
je
push
mov
adc
jmp
mov
sbb
imul
adc
jbe
call
pushfw
loop
loope
mov
std
lret
cmpsl
lret
sbb
push
add
orl
xor
sahf
xchg
adc
aaa
in
imul
adc
push
push
hlt
mov
push
xor
shl
push
outsb
js
shrl
sti
pop
je
dec
pop
mov
testl
add
jbe
pop
pop
add
dec
dec
cltd
adc
inc
adc
cmc
outsl
xor
pop
fbld
test
mov
in
daa
xchg
jecxz
jmp
test
cmp
ret
inc
mov
out
es
push
jmp
jnp
cltd
lahf
test
add
nop
ret
mov
and
stc
and
adc
add
call
rcl
and
pop
mov
ja
lock
dec
inc
nop
stc
imul
cli
das
add
insl
and
jge
emms
push
hlt
insb
mov
add
fistps
sub
in
int3
in
mov
dec
pop
mov
and
mov
nop
jle
rol
mov
cmc
fs
sbb
lods
mov
dec
movsb
mov
sets
sub
mov
sbb
rcll
addr16
cld
iret
std
in
pop
jno
cmp
mov
pop
aaa
adc
das
or
adc
cmc
sub
push
sub
xor
cmp
lods
aas
dec
mov
push
mov
xor
enter
subl
sbb
cli
jno
pop
test
sbb
lret
lds
pop
mov
imul
cmp
js
rclb
das
pop
je
test
cltd
loopne
jp
lret
into
jb
inc
arpl
jle
mov
cmp
add
ljmp
fsubrs
repz
sub
sbb
push
sub
mov
daa
pop
test
pop
mov
insb
arpl
pop
push
cli
in
inc
push
iret
imul
aad
xchg
shrl
pop
jmp
inc
out
mov
or
hlt
adc
sub
jo
punpckhdq
test
sbb
mov
int
add
push
xchg
sbb
xchg
inc
pop
mov
xchg
dec
xorb
dec
xchg
js
ss
int
sahf
push
xor
jbe
cltd
stos
daa
shlb
fs
jbe
cld
cmp
lock
pop
push
xlat
adc
mov
rorb
mov
out
pop
repz
push
stos
xchg
push
xchg
mov
and
adc
mov
movsb
push
pop
push
stos
das
out
push
lcall
sub
jo
mov
pusha
imul
or
insb
rcll
jb
or
pop
or
push
xchg
mov
pop
movsl
into
fwait
pushf
adc
inc
add
dec
arpl
std
adc
mov
mov
xchg
jno
sbb
inc
mov
pushf
in
jne
repz
in
cmp
cli
mov
inc
push
jbe
cmpl
rcr
mov
jb
add
rorl
mov
dec
or
pop
cmp
loop
and
push
mov
arpl
pop
and
xchg
pop
pop
lret
sbb
cmp
andb
pop
cmp
cmp
add
inc
mov
stc
mov
bound
jnp
fisttpll
dec
sti
scas
repz
imul
mov
fimuls
in
lcall
sbb
les
cmp
mov
insl
jno
divb
push
testl
inc
hlt
push
insl
out
cmp
je
repnz
arpl
push
or
jno
cmp
cmpsl
ficomps
int
iret
movsb
sub
je
ds
test
loopne
fistps
mov
pop
sti
sbb
xchg
add
push
and
ret
ja
lods
mov
inc
lcall
lds
fprem1
mov
inc
pop
outsl
push
mov
xor
loop
out
adc
mov
sbb
out
dec
cltd
in
pushf
divl
lret
adc
test
dec
mov
or
insb
mov
clc
mov
sub
jns
ss
or
push
imul
sbb
mov
addr16
leave
ds
ja
mov
sub
rorb
in
inc
inc
into
push
jg
sub
xor
add
mov
mov
repz
push
sub
xchg
xor
bound
pop
jmp
add
in
mov
jg
cld
xchg
sarl
das
jle
into
push
lret
cmpsb
loope
mov
aam
mov
xor
ret
push
js
enter
shrl
movsb
shl
pop
mov
cli
aaa
mov
rcrl
lcall
xchg
sarl
push
push
outsl
dec
jae
mov
insb
jle
sub
mov
mov
push
add
jg
inc
lret
xchg
fldln2
pop
orl
push
or
jo
int3
les
ja
cmc
out
and
outsb
add
cmp
jo
cmp
pop
xchg
inc
dec
mov
and
pop
or
mov
icebp
pushf
scas
mov
std
enter
rcr
sub
add
ficompl
aad
in
dec
push
xor
int3
icebp
xchg
mov
or
call
scas
mov
lret
adc
repz
aad
sbb
mov
jo
adc
rcll
ljmp
inc
jecxz
jbe
jno
sbb
mov
dec
sub
aas
mov
add
or
mov
bound
jg
inc
and
xchg
and
mov
mov
scas
mov
mov
push
or
push
mov
ljmp
sub
and
mov
pop
inc
push
aam
cltd
xlat
loopne
hlt
adc
push
xchg
xchg
mov
dec
test
data16
sbb
jl
icebp
sbb
mov
shll
lret
sub
or
mov
cmp
mov
aam
imul
adcl
mov
mov
gs
cmpsb
push
rcll
dec
and
xchg
lods
into
cmp
mov
pop
repz
out
out
ljmp
dec
xorb
add
int3
test
dec
sub
out
in
movsb
cmp
xchg
add
mov
jns
shlb
mov
push
lock
add
int
xchg
mov
inc
mov
and
lret
adcb
insl
in
or
mov
negl
adc
mov
std
cmpsl
add
out
ret
push
stc
rorb
hlt
cmp
icebp
or
stos
ret
and
xor
xor
fisubl
fidivs
out
rcrb
outsb
jno
iret
adc
xchg
sbb
sbb
aad
push
lods
dec
xchg
cmp
mov
jbe
jo
orl
add
mov
aam
dec
cmc
je
in
mov
cmp
fnstcw
sbb
xrelease
stos
cwtl
dec
push
fsub
inc
divl
pop
negw
loope
adc
and
gs
mov
push
enter
cmpsl
xchg
negb
fidivrs
push
fnstenv
iret
imul
lcall
sbb
call
cmp
xchg
push
inc
cmp
jge
or
repz
fwait
and
sar
daa
sti
jge
xchg
loopne
ja
dec
or
std
mov
push
push
out
mov
push
icebp
sub
sbb
and
mov
xchg
test
xor
mov
push
mov
mov
mov
outsl
add
and
mov
cmp
js
sar
lret
in
int
aam
es
into
push
add
jecxz
inc
adc
rcrl
pushf
mov
cmp
into
nop
dec
jmp
movsl
cwtl
cwtl
adc
insl
movsb
and
dec
or
jecxz
xor
add
in
popa
daa
dec
insl
lret
mov
hlt
scas
jecxz
test
rcll
mov
fcoms
pop
add
xchg
cmp
dec
rcrb
xchg
addr16
pop
repnz
lds
adc
fstl
mov
mov
inc
subl
je
cmpsb
sub
xor
insl
lock
sbb
pop
add
out
popa
imull
les
out
ret
in
ja
ret
daa
leave
add
lea
shrl
sbb
mov
in
dec
movsb
int
xlat
jmp
mov
icebp
sti
sahf
add
or
aam
loopne
cs
lcall
inc
loope
or
les
xchg
arpl
repnz
cmpsl
push
int
xor
or
cmp
aaa
imul
rcr
rcr
inc
xchg
adc
jle
sahf
push
aaa
out
add
int
xor
fisubrs
cmp
fst
and
out
or
mov
cmp
movsb
iret
inc
xchg
sub
testb
and
rorb
cltd
loope
stc
pushf
stos
inc
pop
mov
add
mov
pmullw
pop
lds
inc
pop
inc
fidivs
fcos
push
add
add
or
repz
dec
pop
ret
mov
andb
movb
push
sbb
mov
hlt
adc
and
cmpsb
mov
mulb
xor
into
sbb
xor
fisttpl
fnstsw
adc
js
test
add
mov
test
ret
js
pop
imul
popf
shrb
pop
xchg
jmp
aaa
mov
jecxz
outsl
sub
dec
outsl
sub
mov
scas
loope
and
test
adc
out
pop
jbe
jmp
mov
mov
movsb
or
cmpsb
dec
pop
cld
and
jecxz
testl
shlb
mov
mov
test
adc
add
leave
and
addl
loope
dec
mov
jmp
cmpsl
sbb
jle
pusha
out
outsl
xchg
push
jbe
or
mov
lcall
mov
lcall
sbb
aad
mov
fwait
lock
lods
pop
pushf
add
or
subl
loopne
dec
popa
sbb
into
in
imul
push
addr16
mov
jl
mov
scas
push
leave
dec
add
pop
out
push
dec
cmp
in
ret
movsl
sub
inc
lods
test
into
add
shlb
pusha
sbb
or
jo
mov
adc
popa
fs
lret
sbb
dec
das
pusha
es
push
enter
lods
cmc
or
testb
or
or
movsb
xchg
repz
adc
hlt
rol
or
jle
xchg
test
mov
xchg
push
test
loopne
xchg
pop
pop
lret
inc
repz
aad
fstpt
mov
pop
jecxz
push
rcll
mov
adc
xor
lcall
mov
jmp
and
inc
cmovb
repnz
and
vcvtsi2sdl
or
mov
in
addb
js
scas
ds
call
inc
push
adc
mov
inc
enter
mov
sbb
in
cmpl
sub
test
sbb
test
fidivrl
stc
inc
loopne
mov
pop
inc
cli
jo
divb
add
xchg
xchg
or
inc
mov
cmp
pop
push
arpl
fs
push
push
push
in
scas
imul
push
imul
sbb
dec
and
sub
lods
inc
arpl
arpl
pushl
into
pop
repz
push
lds
xchg
cmpsl
pop
neg
cltd
or
xor
ja
jg
out
inc
push
das
aaa
jp
sbb
rcr
dec
aam
xor
daa
mov
cmp
ret
sub
out
sub
push
stos
xchg
rorb
fistpl
mov
mov
cvtdq2ps
mov
sahf
sub
ljmp
cwtl
loope
add
cmp
cmpl
das
faddp
xor
xchg
ret
enter
sti
daa
sub
xor
mov
sbb
leave
clc
push
mov
pop
stos
mov
inc
outsl
sub
imul
push
daa
repz
push
fwait
leave
cltd
sbb
mov
maxps
stc
fwait
mov
test
lret
in
call
cmc
aam
or
clc
push
jno
scas
jle
xor
cmpsl
cmc
jne
and
imul
aam
cmp
or
xchg
jp
ret
stos
inc
cmpsl
iret
negl
loop
hlt
and
cwtl
mov
add
add
fiaddl
dec
addr16
leave
jle
cmpsl
mov
and
rcrb
sub
loopne
pusha
jmp
mov
cmpsb
fildll
out
mov
jmp
pop
cmpl
sbb
pop
jno
mov
leave
jge
mov
aas
ret
sbb
addr16
xchg
jp
pop
sub
cmpb
mov
and
pop
push
sbb
push
xchg
aam
das
into
fcmovnb
push
sub
sub
mov
push
cmp
xchg
lea
sub
std
pop
ret
lea
mov
bound
dec
inc
shrb
popf
ljmp
fcomi
mov
shl
sub
cmpsb
jae
incb
mov
test
scas
and
sbb
rcrb
push
aaa
fstl
ljmp
mov
negb
cmp
jb
sbb
fsubrl
inc
int3
leave
pop
lcall
mov
pop
jg
sahf
leave
xchg
clc
lods
fcomip
jle
mov
mov
outsl
repnz
rcll
imul
iret
dec
out
fdivl
mov
nop
ja
stc
sahf
loop
inc
les
test
jo
cltd
jle
dec
adc
mov
das
xor
adc
shlb
mov
incb
jmp
aam
mov
scas
jmp
xor
adc
push
adc
jmp
dec
sarb
sbb
mov
addr16
push
dec
or
cmp
add
push
pop
push
ja
push
std
add
cmp
popf
add
inc
push
xchg
fdiv
sub
int3
movsb
xchg
push
inc
jmp
lret
shr
dec
jne
mov
inc
mov
xchg
inc
push
jne
xchg
out
mov
dec
and
mov
push
test
stos
xchg
mov
cmc
mov
pop
andl
dec
inc
sub
jmp
xor
neg
jno
push
std
repnz
or
or
negb
notb
xor
cld
mov
arpl
outsb
pop
fildll
xchg
outsl
stos
repnz
mov
scas
jne
xchg
pop
cmp
mov
popa
push
jnp
fistl
pushf
enter
and
insl
sub
fildll
push
fcoms
ja
adc
inc
cmp
movsb
rcrb
int
cmp
cli
pop
jne
adc
inc
xor
sarl
repnz
inc
aas
pop
lahf
cmpsl
push
ljmp
or
pop
dec
enter
arpl
mov
adc
mov
xchg
inc
in
aam
mov
flds
mov
xor
sub
lret
jl
idivb
jle
stos
into
lcall
mov
lahf
xchg
repnz
paddsb
loop
adcl
subl
inc
arpl
jo
int
clc
dec
mov
inc
xchg
push
stos
push
js
mov
daa
lods
mov
adc
std
cmpsl
jl
fwait
lahf
xchg
cmc
in
cmp
xor
xor
jns
cmc
pop
es
sub
fs
cmp
setl
mov
clc
inc
adc
xchg
push
mov
scas
mov
rcrb
in
mov
or
mov
and
lea
jns
mov
sti
lods
mov
popa
ret
lock
push
jno
jns
mov
dec
test
imul
adc
mov
adc
sub
sbb
std
in
lods
mov
cmp
mov
adc
pop
dec
mov
scas
std
ret
les
xchg
dec
pop
push
lods
pop
stc
insb
sbb
subl
pusha
push
push
stos
scas
mov
pop
or
jo
jb
test
dec
cmpsl
sbb
ret
insb
mov
xchg
mov
pop
mov
outsl
mov
mov
test
or
loopne
and
dec
mov
test
hlt
enter
bnd
dec
pusha
lock
push
jns
in
mov
movsb
es
outsl
sbb
xchg
je
jp
daa
sbb
insb
dec
dec
and
mov
xchg
mov
mov
out
shll
and
adc
sbb
cmp
ret
add
ljmp
fadds
dec
pop
fistpll
jbe
in
insb
sbb
mov
lahf
inc
cmp
int3
inc
je
jmp
or
mov
or
mov
shlb
fst
fidivrl
push
test
les
xchg
and
jne
pop
adc
adc
mov
mov
imul
mov
push
cwtl
mov
imul
mov
lods
iret
fisubrs
cmc
jle
dec
movsb
cmp
mov
or
pop
sbb
sbb
cwtl
jecxz
dec
scas
cmp
jae
inc
or
daa
icebp
std
movsb
cmp
jns
push
jecxz
movsb
cltd
in
ljmp
daa
mov
mov
xor
jbe
lcall
mov
icebp
out
xchg
mov
xchg
rorb
mov
or
repnz
out
mov
xchg
xor
cli
pop
enter
sub
add
mov
mov
cmp
sti
mov
inc
push
fildll
adc
hlt
daa
clc
and
xchg
xchg
jns
pop
and
popf
lret
lds
mov
pop
aam
outsb
mov
adc
test
or
fidivs
or
jge
or
adc
cmp
jne
jp
sbb
push
cmp
mov
inc
addb
jg
ds
adc
aam
mov
jge
bound
mov
sub
ds
cmp
cmp
pop
cmpsb
xchg
stos
subl
loope
arpl
xor
lods
jbe
sbb
jl
dec
fwait
test
shl
daa
lods
dec
add
popa
dec
cmp
sbb
jmp
lcall
mov
dec
rorl
notb
mov
sbbb
enter
lahf
inc
mov
jle
mov
popa
jbe,pn
mov
iret
ret
inc
mov
mov
lock
push
xchg
fmuls
push
lds
les
shll
mov
mov
in
and
movsbl
flds
popf
mov
pop
out
jb
adc
js
pop
pop
pop
lds
jecxz
mov
adc
leave
xchg
mov
mov
notb
in
jg
fwait
leave
push
loopne
mov
in
pop
mov
mov
ljmp
call
pushf
sub
lds
push
xchg
lods
in
cmpl
add
adc
sub
int3
cmp
and
imul
mov
push
inc
xchg
xchg
or
mov
daa
out
lods
fs
dec
sar
push
dec
sbb
mov
cmp
stos
je
adc
pop
xor
jmp
push
jae
mov
incl
inc
iret
mov
push
cmp
mov
xor
mov
icebp
lret
cld
fwait
dec
iret
movsl
lahf
pop
inc
repz
mov
jns
pop
xor
js
mov
idiv
hlt
cmpsb
pop
sub
insl
enter
lods
in
stos
xlat
cmp
shll
cld
fistps
loope
iret
add
and
outsb
xlat
sub
sub
inc
xor
xchg
lret
xchg
rorb
jae
dec
cmpsb
imull
dec
lods
gs
ds
or
xchg
xchg
push
sub
repz
dec
cld
mov
fisubs
js
iret
pop
push
add
je
andb
ljmp
pop
dec
or
push
jp
mov
inc
rorb
pop
fdivr
add
roll
lods
jl
fists
and
jne
and
dec
or
mov
in
idivb
outsb
out
jnp
sub
out
stos
push
add
lcall
or
cld
pop
sbb
hlt
xchg
xlat
mov
add
cmc
sub
in
mov
mov
add
xor
cld
jg
loope
dec
jno
dec
ds
orb
icebp
xchg
daa
mov
insl
adc
cld
ljmp
mov
xor
pushf
push
fisubrl
int
flds
and
cmp
jns,pt
ss
sbb
sarb
sub
cltd
inc
fwait
push
in
mov
sti
cld
fidivrs
sub
push
pop
xchg
sub
pop
dec
aad
stc
incb
gs
icebp
sub
aad
cmc
imul
xor
aam
dec
cmp
inc
sbb
xor
pop
cmp
in
or
bound
adc
xorb
mov
loope
mov
les
xchg
mov
repz
pop
insb
rcll
dec
std
fsubs
orl
stos
cmc
jb
pushf
and
jp
inc
mov
lret
jmp
clc
pop
xor
mov
jnp
sub
xor
adcb
inc
inc
sbb
lahf
mov
add
jecxz
jmp
fs
or
xor
push
imul
add
jnp
icebp
sbb
and
test
hlt
xlat
insl
or
mov
loopne
push
hlt
loopne
fsub
sub
cmpsb
repz
daa
jb
shll
adcb
lock
icebp
imul
or
jae
ja
out
cmc
adcb
xor
add
dec
mov
mov
outsl
out
gs
mov
jnp
adc
loopne
js
cmpsl
push
inc
lret
shll
cmp
pop
lahf
lds
popa
inc
int3
int
inc
into
mov
sub
push
mov
jmp
or
push
mov
mov
pop
mov
das
js
jno
cmp
pop
int
aam
inc
add
and
xor
inc
pop
xchg
lcall
les
in
orb
cmpsl
outsb
das
fdivrs
sub
jp
pop
lods
inc
or
cmp
movsb
mov
xchg
les
cmp
std
and
pop
cmp
mov
mov
add
inc
std
nop
mov
jecxz
cs
stos
add
and
out
cmp
mov
xor
xor
rolb
lahf
xor
cwtl
and
pop
or
pop
inc
mov
leave
pop
xor
xchg
stc
xor
shlb
sbb
iret
mov
and
mov
test
add
pop
cmp
js
dec
loopne
std
mov
sbb
sub
inc
in
jle
xor
fldenv
dec
sbb
cmp
mov
mov
push
sub
cmp
bnd
push
orb
aaa
test
mov
push
mov
iret
rcl
mov
outsb
pop
sbb
pusha
test
sbb
add
lfs
aaa
out
push
inc
adc
dec
pusha
sbb
out
das
sub
gs
dec
push
icebp
dec
cltd
mov
add
mov
scas
sbb
sub
int
sbb
xchg
aas
mov
gs
and
dec
ds
lcall
repnz
lret
mov
insb
jp
iret
pusha
scas
and
add
or
out
inc
jmp
or
mov
inc
in
cmp
out
inc
loopne
bnd
loop
or
jmp
cmp
dec
xchg
add
cltd
cmpsl
and
jle
sarl
sti
and
jnp
lahf
sbb
mov
pusha
mov
inc
das
sar
inc
sub
fsubrp
stos
cmp
fwait
test
icebp
dec
fwait
push
xor
dec
icebp
cmp
das
lahf
out
push
and
mov
mov
dec
nop
ror
add
xor
out
pop
lds
popa
out
pop
sub
sbb
add
aam
sbb
rcrb
inc
outsb
pop
test
xor
add
fmull
push
pushf
mov
sub
pop
mov
add
sbb
out
pop
mov
je
adc
das
pop
rcl
outsb
dec
rorb
cltd
xchg
outsl
fisubrl
xor
and
push
das
pop
adc
mov
scas
xchg
or
jg
or
scas
fidivrl
mov
push
fwait
jnp
sbb
stos
aam
sarb
adc
push
mov
into
mov
ret
pop
mov
int3
sbb
xor
bound
lahf
insb
out
xlat
out
daa
stos
sbbb
pop
mov
push
ds
and
mov
pop
fistpl
xchg
pop
cmpsl
xorb
pop
lock
test
sahf
arpl
rcl
xor
mov
sub
fucomip
push
test
outsb
loopne
push
daa
mov
shrl
sti
add
dec
dec
push
inc
inc
subb
fs
fldt
lds
leave
jge
or
inc
mov
mov
les
sub
add
popf
repz
in
out
mov
inc
push
mov
xchg
mov
popl
jle
fcmovne
movsb
fdivs
sbb
bound
xor
imul
lods
jle
dec
jne
sbb
xor
cmp
mov
or
clc
pop
ret
add
shl
mov
push
ds
rep
adc
xchg
xchg
lahf
adc
dec
dec
js
mov
cwtl
cmp
cmc
notl
and
xor
jbe
xor
adc
cmp
fcmovu
sbb
sub
pushf
mov
inc
xor
leave
xchg
rolb
dec
inc
sub
and
popa
mov
mov
push
inc
and
stos
xchg
lret
push
xchg
imul
testb
les
pop
mov
dec
fcoms
enter
mov
jb
imul
mov
mov
inc
ja
orb
pushf
xlat
mov
mov
icebp
mov
scas
ss
pusha
aaa
dec
pop
std
push
add
fsubrl
add
data16
jp
stos
mov
sarl
mov
mov
stc
xchg
mov
sub
inc
mov
cmp
jmp
aaa
xor
fcomps
cmp
test
mov
iret
das
lahf
testl
lcall
push
lods
lahf
pop
jns
push
fistps
pop
jp
aam
inc
ja
arpl
jo
lret
sbb
push
jo
jmp
inc
mov
mov
adc
outsb
dec
cmp
fadd
sahf
cmp
push
push
xchg
data16
mov
or
testl
leave
push
out
popa
pop
dec
pop
les
adc
prefetch
or
push
jg
int3
hlt
dec
dec
or
mov
fwait
and
xchg
inc
mov
and
jge
cmp
jecxz
lock
aaa
das
mov
lret
daa
xor
add
inc
dec
fs
lahf
ljmp
lcall
sub
scas
mov
adc
test
jne
xor
push
cs
cwtl
ret
pop
mov
les
sub
mov
lret
mov
cmp
mov
jmp
jl
loopne
pop
pop
ljmp
cmpsl
jbe
mov
out
rorl
or
sub
push
push
push
mov
fs
sbb
and
add
ficoml
sub
mov
dec
inc
enter
and
ss
sub
jbe
mov
jo
adc
mov
push
mov
cmpsb
xor
imul
xchg
push
jmp
pop
sbbb
cmp
mov
out
int
outsb
lahf
add
or
xchg
cmp
sub
pop
pop
push
jns
mov
call
outsl
push
mov
out
or
inc
and
mov
mov
loop
subb
js
fcomps
jb
mov
clc
dec
fisubl
push
rcr
movsl
in
adc
adc
rcrl
dec
sbb
dec
js
mov
cmovle
jnp
iret
loope
or
movsl
mov
leave
mov
ret
inc
sub
ja
dec
pop
dec
pop
jne
mov
mov
iret
loopne
xlat
leave
pushf
rolb
in
push
pop
decb
push
adcl
fidivs
sbb
inc
out
ret
mov
outsl
cltd
shrl
das
sub
js
xor
xor
clc
pop
jnp
and
jbe
pop
pusha
out
adc
int3
outsb
xlat
cmc
jns
jbe
pop
dec
test
in
dec
roll
mov
scas
xchg
mov
decl
decb
imul
dec
cld
adc
jecxz
pop
fimuls
jne
pop
push
gs
mov
stos
sub
into
sahf
jmp
dec
pusha
xor
sti
dec
adc
mov
add
pop
into
mov
xor
cmp
js
mov
addr16
push
fs
call
xchg
icebp
clc
dec
push
loop
js
push
add
mov
and
push
add
jns
pop
in
pop
mov
pop
xchg
and
fucom
cmc
jbe
mov
cwtl
xchg
popf
stos
outsb
lds
ss
or
mov
pop
repnz
loopne
push
jnp
pop
adc
xchg
and
dec
push
push
jle
rcrb
mov
sti
andb
fwait
xchg
pop
xor
jge
enter
mov
sub
loope
int3
xchg
leave
xchg
jecxz
adc
push
sbb
mov
hlt
adc
les
add
sarb
mov
and
sbb
xor
arpl
sub
mov
xchg
push
popf
js
ss
cmpsb
bound
mov
sbb
cmp
mov
mov
add
adc
mov
cmpsb
cltd
ja
mov
aad
push
call
push
and
sbb
ficompl
sbb
pop
js
adc
mov
pusha
or
mov
and
ret
xor
fs
fadds
xorb
aas
sbbb
cmp
jo
jb
stos
xchg
mov
test
addr16
inc
rorl
popf
aas
push
dec
roll
icebp
out
inc
popl
add
ja,pn
dec
imul
pop
push
push
dec
push
hlt
fcompl
push
jmp
lods
xchg
inc
xor
outsb
mov
jne
xchg
shlb
and
sub
aas
aaa
adc
jge
push
xchg
or
in
loop
rclb
mov
dec
inc
into
cmp
pop
jno
xor
and
jb
xchg
cmp
sub
mov
jne
mov
pop
cmp
orl
cltd
and
iret
jl
cmpsl
dec
insb
jno
xchg
inc
fimuls
cmp
xor
hlt
jp
dec
call
dec
lods
inc
fisubrs
call
push
incl
popf
pop
pop
stos
in
push
push
sbb
sub
inc
fnstsw
in
loopne
pushl
sbbb
cmp
xchg
fmuls
fbstp
dec
push
xor
cmpsb
dec
loope
fmull
lahf
jae
aam
mov
jae
cmp
pop
xor
xchg
test
jp
hlt
xor
das
in
adc
inc
movsb
cwtl
mov
shll
xor
mov
mov
and
push
sbb
mov
inc
adc
pop
cmp
test
or
repz
xchg
fcoml
scas
aas
sbb
test
or
test
stos
push
pop
incl
inc
mov
mov
mov
cmpsb
addr16
bound
stc
lcall
sbb
movsb
xorb
out
insb
mov
jnp
fmuls
or
cmp
arpl
xor
sub
jmp
xchg
cmp
xchg
int3
sbb
cmpl
stc
inc
or
pop
sub
xchg
dec
sbb
ret
leave
cmp
jo
mov
aaa
fwait
dec
aam
push
fstpl
nop
jb
jg
add
fisubs
xor
outsb
fdivrs
jne
push
lea
mov
hlt
pop
xchg
arpl
cmp
inc
test
xchg
add
nop
xchg
xchg
or
negb
xchg
sbb
mov
or
addr16
es
pop
sbb
mov
ljmp
adc
adc
mov
aam
add
aaa
add
cmp
lret
mov
sub
lret
mov
pop
int3
push
jecxz
js
cld
xchg
pop
xlat
sbb
xor
jnp
mov
fistpll
fbstp
insb
dec
pop
int
iret
inc
mov
or
arpl
adc
or
aad
popf
mov
adc
xor
jb
push
or
gs
cwtl
jae
ljmp
xchg
rcr
ss
xor
or
das
inc
inc
xor
mov
xor
and
fnstsw
dec
out
daa
arpl
test
wbinvd
mov
add
hlt
push
into
mov
sti
mov
lahf
cs
mov
jmp
push
mov
aas
popf
in
arpl
jg
pusha
mov
dec
fbld
mov
stc
dec
inc
lret
xchg
in
test
in
mov
adc
or
cltd
and
pop
in
ss
add
jb
inc
dec
aam
orl
in
and
inc
les
cltd
jl
jnp
dec
imul
ja
xlat
imul
push
jae
mov
test
sbb
movsb
insb
lods
push
fisttpl
enter
in
mov
outsl
mov
je
push
in
sub
lret
es
push
lock
inc
pop
cmp
pop
cmp
out
aad
sbb
popa
pushf
das
ds
push
add
push
mov
fdivrs
and
fadds
mov
in
cs
mov
lret
mov
shll
mov
push
cmp
aas
mov
jb
cltd
push
push
in
out
adc
out
insl
mov
jmp
mov
cmpsb
js
sahf
push
lcallw
sbb
je
push
pusha
mov
jl
icebp
test
call
xchg
cmp
mov
adc
jmp
inc
rcr
cmpsb
sbb
stc
test
inc
or
jecxz
popa
and
mov
push
add
addl
mov
jle
scas
sbb
test
cmp
inc
jl
inc
fstl
cmp
pop
jbe
ja
add
xchg
adc
test
sub
jle
hlt
push
ljmp
int
mov
or
lahf
mov
cmpsb
pop
jle
dec
push
inc
in
ds
popa
in
mov
push
iret
test
dec
mov
or
imul
ror
mov
mov
mov
xor
repz
cltd
xor
mov
cmp
cwtl
pop
push
pop
jp
mov
sbb
int3
adc
and
int
xor
adc
xchg
add
cmp
and
lock
inc
fnsave
jbe
mov
loopne
mov
loopne
dec
add
movsl
jle
mov
leave
inc
push
cmp
std
popa
andl
insl
adc
mov
inc
and
std
imul
mov
xor
mov
test
stos
jno
add
dec
cwtl
cld
xchg
or
sbb
nop
shll
sbb
or
outsb
sub
jns
xchg
scas
out
pop
outsl
mov
cmp
rcl
dec
or
int
fidivl
es
mov
leave
dec
dec
sub
mov
pop
sbb
push
ljmp
testb
scas
addr16
mov
dec
lahf
jg
xor
adc
push
testl
aad
das
pop
imul
out
mov
push
jmp
xor
in
and
in
enter
mov
adc
mov
push
je
push
lahf
call
add
imul
mov
mov
lock
and
dec
movsl
rclb
call
adc
cmp
jo
xor
or
imull
or
inc
imul
mov
aad
sbb
ficomps
in
into
jmp
js
popa
cmc
sbb
cmpsb
push
cmp
and
mov
xchg
cmpsl
jg
adc
shl
sarb
fcmovb
pop
sbb
jl
enter
xchg
int
sub
mov
fwait
ljmp
inc
adc
or
or
scas
adc
inc
xorps
add
imul
insl
and
lcall
jl
dec
xor
ja
mov
xchg
cwtl
and
int3
loop
scas
jae
xor
in
fs
xchg
sbb
cs
call
enter
mov
lea
je
sbb
push
push
out
pop
push
pop
jmp
in
mov
fiadds
adcl
outsb
es
mov
add
inc
jnp
xchg
inc
cmp
in
es
pop
js
xor
jg
mov
jo
push
gs
mov
push
clc
imul
adc
xor
or
scas
pop
or
mov
add
add
or
divl
std
aam
rorl
sub
inc
bound
stos
movsb
aas
mov
scas
in
mov
add
mov
push
scas
in
add
cmpsb
cli
in
add
lret
inc
inc
dec
mov
in
sub
call
dec
push
scas
sbb
and
in
fmull
ja
and
push
sbb
lock
aad
rorl
js
push
push
push
mov
add
pushf
call
clc
lea
mov
lock
sbb
insb
mov
xchg
mov
orl
je
add
or
leave
sar
out
or
aad
push
js
insb
clc
xlat
fidivs
leave
cmp
inc
add
sti
orb
imulb
cli
dec
cmp
sahf
adc
cmpb
lret
or
fs
outsl
mov
mov
call
scas
lea
jne
xchg
fwait
jb
mov
sub
in
lds
and
dec
mov
cmp
ja
notl
out
shrl
add
lock
roll
dec
shr
cmp
add
mov
jge
in
xchg
mov
push
and
dec
rolb
inc
jbe
les
sub
inc
jns
push
mov
leave
mov
es
inc
xor
outsb
mov
adc
or
dec
daa
inc
jg
inc
xor
mov
mov
mov
pop
push
jb
insl
scas
sbb
mov
mov
cmpsl
hlt
in
enter
pop
lret
mov
ret
mov
int3
xor
mov
dec
push
shl
jne
pop
inc
call
nop
cltd
push
jbe
fnstsw
cmp
xor
jnp
fimull
shll
xor
notl
inc
incb
add
push
cmp
aad
inc
xor
fistpl
inc
dec
inc
mov
mov
pop
pop
mov
dec
mov
xchg
mov
mov
cmc
or
cmp
popf
in
push
mov
jmp
sahf
fstps
pop
test
jne
mov
pop
sub
pusha
cmp
les
imul
push
int
mov
adc
jne
mov
lahf
and
inc
sbb
dec
xor
mov
mov
daa
push
xchg
cmp
and
ljmp
xor
add
mov
das
add
inc
push
or
cwtl
xlat
cwtl
leave
add
jbe
or
push
add
jl
jecxz
pusha
lods
push
xor
xlat
mov
lret
jle
js
inc
push
stos
lahf
aad
and
add
push
nop
aam
sbb
aaa
xchg
cmc
lret
sbb
scas
adc
mov
sarl
xchg
daa
out
std
je
cmpsb
rolb
cmp
cmp
test
fadd
push
sbb
sbb
jbe
imul
xchg
sbb
scas
and
adc
mov
pop
jno
adc
jo
xchg
jmp
jnp
std
jnp
pop
andb
in
icebp
imul
negl
sarl
dec
push
shl
cmp
push
jbe
bound
add
adc
pop
lock
sbb
cmp
pop
mov
push
ror
push
in
mov
mov
or
pop
and
push
lret
cld
mov
lds
cmp
jmp
lods
fiaddl
inc
add
push
mov
shl
addr16
xor
fwait
xor
lds
std
cmp
xchg
adc
cmp
push
push
mov
add
lods
xchg
stos
dec
lret
lahf
fwait
int
push
mov
pop
inc
cmpsb
sbb
mov
xchg
outsb
dec
imul
inc
cmp
lods
sbb
or
ds
jne
je
sti
cmpsl
inc
cmpsl
xor
mov
adc
shrl
nop
mov
movsl
pop
jmp
add
rolb
sub
clc
mov
das
mov
lcall
movl
gs
out
cmp
jge
aaa
push
sbb
pop
sub
das
icebp
jnp
mov
icebp
call
int3
xor
mov
ret
and
cltd
adc
dec
and
jo
cmpsl
gs
lret
fcomps
je
xorb
jbe
pop
pusha
mov
clc
neg
xor
loop,pt
cltd
movsb
sub
push
mov
push
popf
fdivrs
ljmp
mov
filds
jno
push
push
dec
xchg
or
dec
cmp
js
movsb
cmp
add
sub
pop
cli
xorl
addb
mov
jb
std
outsl
jecxz
scas
stc
xor
or
mov
sbb
mov
and
shrl
js
sub
push
dec
fstps
mov
sbb
ljmp
or
xor
test
sub
cmp
xchg
jle
mov
repz
xlat
in
xor
jae
andb
mov
aas
lcall
ror
ljmp
int3
jne
mov
fstpt
pusha
inc
or
push
js
push
ds
add
pusha
and
movsl
inc
mov
dec
and
movsb
ja
jl
rol
xchg
sbb
lret
add
or
pusha
hlt
fwait
repz
jno
cltd
cwtl
lcall
sub
and
dec
push
in
jle
insl
or
and
mov
test
push
sbb
add
xorb
cmp
scas
frstor
or
rcl
mov
std
sbb
xchg
cmp
push
and
stos
xlat
xor
in
mov
pop
xlat
or
aas
push
test
setg
aaa
xchg
jb
ds
int3
cs
repnz
repnz
mov
nop
inc
mov
mov
pop
cmpsb
inc
cmp
int
aaa
es
mov
aas
add
pop
pushf
out
mov
fildl
pop
sahf
dec
popa
insb
fldenv
mov
push
xor
sub
mov
inc
add
outsl
pop
lahf
std
push
in
movb
imul
stc
andb
xchg
outsb
mov
rorb
xor
and
push
inc
jae
add
pop
push
or
mov
pop
cli
mov
inc
imul
into
mov
roll
jge
sub
inc
stc
mov
push
dec
in
sub
jo
lods
adc
push
inc
sbb
out
inc
or
std
sar
push
push
clc
ret
popf
or
adc
test
push
dec
fisubrs
nop
cmc
movl
inc
mov
int
fs
gs
iret
js
and
out
jae
or
xchg
rclb
inc
dec
je
imul
fisubrl
cld
dec
mov
pop
scas
fistpl
cltd
test
hlt
pop
hlt
lcall
adc
mov
jns
ljmp
pop
sub
es
add
popf
imul
das
mov
dec
scas
lcall
and
push
aaa
jne
inc
lods
pop
add
jl
es
in
push
push
movsb
sub
rcrl
enter
jmp
je
in
int3
and
sub
loope
test
sbb
jo
in
div
out
inc
popf
pop
jp
cmp
jne
mov
and
push
push
sub
int3
cltd
popf
addl
aam
lret
js
mov
pop
bound
pop
add
inc
sub
adc
rclb
movsb
dec
dec
sbb
or
dec
subb
jae
add
fs
fwait
xor
outsl
ret
ficompl
stos
adc
rcr
dec
xor
inc
xor
add
repnz
sub
pop
insl
sub
jp
xor
insb
lods
lret
xchg
mov
xlat
leave
call
sbb
mov
fbstp
out
pop
out
das
jb
mov
scas
jno
jle
add
es
mov
mov
arpl
popa
bound
inc
daa
sbb
fwait
mov
outsl
loop
fcomps
setns
icebp
cmp
hlt
mov
sub
sbb
jge
les
xchg
cmp
in
ja
in
jmp
dec
or
adc
sub
jo
lods
scas
pop
pop
add
out
and
sahf
inc
lcall
fwait
sbb
xor
lds
and
fcmove
fwait
mov
pop
dec
pop
adc
jb
cmc
cltd
mov
add
mov
adc
inc
sahf
daa
or
mov
pop
movb
push
je
aaa
das
paddb
jl
dec
lds
mov
movsb
mov
es
wrmsr
pop
leave
add
aad
xor
xchg
dec
nop
inc
mov
inc
mov
cmpsl
xchg
bound
into
xchg
ret
gs
ljmp
in
push
jns
sbb
jno
xor
cmp
inc
lock
call
sub
or
loop
mov
mov
shrb
ds
rclb
imul
push
lahf
cmp
mov
pop
lea
ja
or
jp
jnp
shlb
xor
push
arpl
adc
scas
push
jo
dec
gs
aas
xor
mov
xorb
mov
in
imul
add
push
push
push
jae
test
jbe
in
jmp
xchg
test
iret
insb
or
pop
inc
fdivl
push
into
jbe
out
mov
lds
push
das
arpl
jl
sbb
dec
fyl2xp1
mov
nop
fidivl
cmp
jae
out
fwait
loope
cli
mov
jmp
and
sbb
loop
push
sbb
xor
int3
mov
jle
stos
repnz
cld
and
outsb
fldl
sbb
addr16
mov
gs
jns
je
mov
push
in
mov
outsb
cmpsb
add
and
call
mov
adc
add
in
adcl
in
dec
and
adc
inc
mov
cli
xor
xor
lcall
sbb
and
sahf
adcl
sbb
aam
sbb
test
adc
cmp
pop
shll
das
push
adc
ret
int3
cmpsb
movb
and
mov
mov
in
mov
data16
mov
enter
enter
cmp
mov
mov
or
addb
iret
arpl
or
dec
sbb
sahf
shl
out
repz
hlt
outsl
dec
jno
lods
push
lahf
xchg
pop
dec
das
data16
adc
sub
lea
mov
dec
test
xor
imul
xchg
movsb
inc
xchg
jmp
scas
pop
pop
iret
jl
inc
ja
jecxz
rorl
or
mov
or
jmp
out
inc
xor
insb
inc
cmpsl
xchg
push
in
in
xor
pop
scas
mov
mov
xor
and
mov
add
aas
jno
add
xchg
mov
and
mov
scas
into
push
adc
stos
or
sub
jg
aam
jbe
enter
inc
sub
stos
jae
ds
iret
test
ds
gs
lods
sub
or
jmp
cwtl
mov
xchg
add
fdivrs
stos
jle
add
xor
inc
scas
mov
andl
add
xchg
aam
push
sbb
sti
mov
int3
sahf
fisttps
ret
mov
sub
fsubrs
stos
or
mov
push
lods
dec
rcll
mov
inc
out
dec
int
cmp
push
or
xchg
aaa
fcomi
or
ljmp
and
popa
mov
cmc
dec
popa
xchg
jnp
lock
mov
lea
mov
shll
xchg
sbb
sub
into
inc
inc
or
mov
push
mov
and
pop
pusha
pushf
push
pushf
jecxz
es
shrl
jns
sysenter
jae
mov
push
inc
xchg
pop
jle
and
stos
sub
xchg
fs
js
cmp
addr16
repnz
in
fwait
addr16
int
sbb
je
fdivl
addr16
icebp
inc
inc
jmp
pushl
jmp
movsb
mov
add
xor
or
jle
mov
ret
or
mov
idivl
mov
jge
sbb
sub
mov
xor
xor
nop
jp
cmc
jae
xor
mov
aad
decb
jnp
mov
mov
mov
cmp
xchg
scas
loop
jp
orb
mov
push
lods
jae
xor
in
cmc
insb
insl
rcr
in
test
inc
andl
push
dec
clc
jnp
or
lret
orb
insl
pop
or
add
and
mov
sbb
mov
call
pop
dec
inc
out
mov
inc
jns
push
sbb
push
pop
insb
dec
out
mov
mov
test
mov
dec
in
jge
inc
mov
rorb
pop
mov
mov
sti
pop
loope
jmp
rcr
orl
pop
sbb
scas
jno
jmp
aaa
dec
or
xlat
mov
mov
inc
and
loope
xchg
pop
daa
scas
xor
pop
loope
xchg
popf
imul
push
mov
push
ss
cmpsb
cmp
fidivs
mov
push
push
dec
jge
cmc
pop
aam
ds
mov
sti
clc
add
cmp
in
lcall
mov
push
adc
fsubrl
clc
jb
sbb
das
fs
mov
das
pop
pop
adc
int3
sbb
push
into
sub
add
arpl
sub
loop
mov
scas
inc
mov
into
pop
sbb
test
pop
add
or
lods
dec
sub
test
push
sbb
mov
ds
or
stc
and
push
pop
lock
jno
adc
in
outsl
push
faddp
xor
lock
in
add
in
dec
cmp
pop
js
rorl
addr16
push
clc
addr16
ret
je
mov
sahf
lret
adc
hlt
mov
aad
orb
or
ficompl
int
mov
sub
sbb
push
add
mov
shlb
pop
into
cmp
scas
loop
lahf
xchg
cmp
cs
mov
je
cwtl
pop
cmp
stos
mov
sbb
cs
and
xor
into
lock
movsl
xor
mov
cmp
push
aam
cmp
jp
imul
sbb
xor
sbb
clc
xlat
lea
and
and
fldenv
jb
shll
mov
std
ja
rcrl
cld
cwtl
jl
notl
xor
sti
mov
mov
out
cmpsl
and
dec
lock
dec
out
mov
out
not
adc
hlt
xorb
sub
fs
aam
sbb
adc
cmp
mov
adc
fwait
mov
iret
test
push
dec
sarb
cmp
pop
or
ss
jbe
mov
push
and
aam
xchg
loopne
ss
adc
pop
inc
jne
outsb
sahf
cmc
popf
hlt
pusha
out
lret
xor
fincstp
mov
cltd
add
loopne
sbb
addr16
sahf
lahf
js
and
cmp
or
pop
mov
jnp
ret
iret
aaa
add
enter
daa
lods
or
push
xchg
xchg
inc
xor
in
push
stc
sub
inc
add
popa
arpl
pushf
pop
xchg
arpl
dec
jbe
jle
lea
push
mulb
sahf
ret
cmpsl
subb
clc
cltd
jl
insb
or
and
mov
gs
dec
es
dec
clc
les
repz
mov
or
push
or
and
xor
clc
fstps
push
popf
insb
call
idiv
mov
shrl
jecxz
xchg
mov
rcrb
fidivrs
or
icebp
repz
into
pop
je
jb
dec
arpl
xlat
and
and
scas
test
and
imul
cmp
cmp
rclb
xor
cmpsb
call
jl
or
sub
es
mov
cmp
ffree
and
fisubs
lock
sub
jo
pusha
insb
cs
test
fists
xor
sbb
dec
scas
daa
imul
mov
lds
inc
or
jl
movsb
sti
adc
pop
mov
dec
jg
jl
orl
rcl
or
or
test
add
dec
repz
or
mov
sub
rorl
sub
int
jmp
cmp
or
inc
jge
test
add
pop
jno
aad
xchg
out
fisttps
and
lcall
idivl
in
xor
popf
sbb
xor
out
shl
adc
aam
mov
outsl
sub
mov
inc
cld
mov
fisttpll
hlt
arpl
sub
xchg
add
sub
lret
lret
shll
les
pop
cmp
jns
mov
lret
jae
or
dec
or
icebp
bound
xchg
js
arpl
fmull
xchg
je
outsb
mov
mov
subl
in
xchg
jae
xchg
inc
insl
fimull
add
loopne
jns
jns
mov
in
dec
inc
pop
aam
repz
test
shll
loopne
jns
in
xor
popa
dec
mov
jl
pop
xchg
dec
jecxz
mov
xchg
pushf
xchg
jecxz
sbb
push
std
dec
mov
nop
inc
xor
int
cmp
lea
divb
sbb
cwtl
shl
lcall
or
cmp
fldenv
idivb
mov
out
cmp
pop
adc
aad
mov
in
in
ja
push
dec
jg
into
push
cmc
xor
sub
insb
xchg
jle
mov
adc
xchg
mov
sub
fisubs
pop
mov
nop
mov
sub
popa
ljmp
fstpl
shlb
mov
push
adc
mov
xchg
insl
and
lock
xor
clc
js
pop
inc
adc
lods
mov
das
add
js
jnp
or
insb
rorl
mov
sar
fcmovnb
xlat
add
std
test
hlt
mov
cltd
mov
mov
cs
int
sti
and
mov
mov
or
js
ret
jnp
mov
sbb
fs
sbb
je
pop
push
hlt
inc
xchg
shll
xchg
mov
sti
sub
fistps
ficompl
arpl
sbb
loope
xor
repz
dec
sbb
mov
adc
jecxz
sub
mov
push
in
lea
iret
and
xchg
imul
push
hlt
lret
pop
jecxz
lds
in
daa
out
inc
push
sub
daa
jl
xor
push
mov
add
jl
addb
out
mov
das
sub
lcall
pop
cmp
stos
mov
add
pusha
push
or
and
popa
mov
mov
test
jae
mov
and
jns
mov
aam
pop
cmp
lea
fnstsw
cwtl
sub
jle
or
cmp
les
add
lret
stos
je
pushf
add
xor
lahf
lret
mov
aaa
cli
jbe
cs
add
out
cmpsl
outsl
jg
mov
fsts
hlt
push
imul
xchg
push
jp
and
outsb
inc
jnp
cmpb
sub
xor
jnp
jmp
fcmovnbe
fsts
stos
aaa
cmp
je
dec
movl
push
jg
ja
add
mov
mov
jns
cmpsb
mov
mov
lods
pop
or
and
jmp
inc
xorb
sbb
jo
xor
fimuls
mov
call
xchg
sbb
int
shll
jg
jmp
frstor
xchg
cmpb
jmp
movsw
mov
call
test
sbb
adc
push
pop
ffreep
jo
sbb
or
insl
cmpsl
jmp
repnz
inc
inc
loope
xor
hlt
mov
add
jl
pop
cmc
and
roll
push
inc
cli
mov
sub
xor
add
test
outsl
repz
and
aaa
cwtl
punpckhwd
lahf
add
out
cs
mov
jae
daa
movsb
cmpsb
divl
roll
xor
inc
out
jo
mov
xor
jns
add
das
movsl
push
insl
add
cmp
jb
mov
jo
mov
fs
sbb
sbb
dec
or
jb
jmp
add
gs
jge
lods
into
movsl
xor
inc
loopne
scas
jnp
into
imul
decb
movsb
std
or
mov
sarb
lock
arpl
insl
fimull
fsubrs
aaa
lock
test
loop
arpl
sbb
adc
dec
xchg
test
outsl
sahf
movsl
inc
or
addr16
test
mov
push
lds
mov
inc
out
pushf
rcrb
mov
addr16
pop
test
jb
push
mov
sub
sbb
push
push
popf
out
das
rcrl
std
xor
cwtl
std
ja
gs
mov
and
inc
or
dec
bound
inc
mov
fcomp
addl
nop
dec
shll
push
sbb
out
repnz
pop
insl
outsl
push
leave
inc
sbb
mov
repnz
sub
test
sub
sti
and
jb
jge
insl
pop
xchg
sub
cmc
aas
mov
in
je
add
pop
les
shlb
and
test
push
xchg
mov
mov
loopne
lea
inc
xor
dec
cmpsl
jl
push
lock
shll
pop
adc
lea
jb
xor
xchg
int3
mov
sti
icebp
nop
add
sbbb
jns
popf
mov
cmp
in
pop
loop
mov
push
arpl
xchg
insb
pop
es
out
inc
jno
jnp
cld
scas
cs
lret
push
insl
or
fiadds
or
lret
xor
test
nopl
lods
ret
scas
xchg
lods
insb
fcompp
pop
outsb
cmpsb
xchg
pop
imul
dec
mov
sub
mov
add
fstpt
xchg
or
xor
dec
fwait
adc
mov
cmp
pop
push
daa
push
daa
aas
xor
iret
outsb
leave
movl
gs
or
mov
push
data16
int3
daa
or
dec
cld
xchg
hlt
mov
add
cmp
imul
hlt
mov
int
dec
xor
and
jecxz
pusha
adc
std
xchg
push
fs
push
mov
mov
jne
jno
shll
xor
cwtl
mov
sbb
sub
sbb
pop
add
mov
enter
test
iret
mov
push
sub
mov
fs
inc
cli
inc
inc
sbb
sti
xchg
dec
or
divl
sahf
insb
sbb
movl
jns
fsqrt
cmp
pop
iret
and
popa
fistpll
xor
sbb
xchg
loope
nop
ficomps
stos
jge
push
stos
jo
push
push
mov
ss
rcll
arpl
fs
call
inc
popa
jno
push
pop
in
rclb
test
mov
mov
jl
push
mov
loopne
mov
jnp
jo
scas
adc
pop
stos
rol
insl
inc
mov
aas
sbb
mov
mov
xchg
inc
fwait
hlt
shll
mov
loopne
sbb
push
mov
xchg
jne
or
fstl
daa
ret
sub
dec
jl
imul
mov
bound
sarl
pop
and
cmc
out
test
lods
inc
adcb
loope
das
pushf
sahf
push
adc
dec
lods
inc
cmp
lods
fwait
adc
push
mov
sbb
dec
enter
and
mov
psrad
das
push
cmp
xor
jne
cli
ret
jg
lods
mov
pushf
and
mov
fcoms
push
mov
sbb
gs
fdivr
and
into
mov
mov
mov
jp
xchg
es
aas
cmp
aas
push
shlb
notb
roll
out
inc
lods
or
jl
into
sti
shl
or
pop
sahf
scas
mov
xchg
pop
cmpsb
jb
mov
dec
icebp
adc
dec
pop
notl
sub
jg
popa
dec
mov
and
mov
or
sub
sbb
std
fldt
pop
negb
jge
pop
add
cmp
inc
ja
fs
or
das
xor
push
dec
sub
sbb
jmp
je
mov
out
push
pop
pop
orb
push
divb
jb
mov
mov
mov
hlt
add
ret
sbb
jne
repz
mov
jg
lcall
call
xchg
mov
inc
pusha
or
aam
fimull
sub
sub
cltd
cld
xchg
xchg
cmp
clc
mov
mov
fdiv
fwait
push
ja
fstpl
pop
cli
test
mov
mov
in
cmp
aad
push
shr
daa
push
xchg
cmp
and
arpl
xchg
fdivl
out
add
nop
lods
sti
ds
out
out
test
dec
sub
sub
jb
pop
fildl
xchg
lea
pop
fisttpl
mov
xorl
jo
inc
or
and
icebp
repnz
mov
insl
mov
sub
push
test
inc
inc
stos
push
in
cs
nop
pop
push
lea
add
and
sbb
test
mov
inc
les
xchg
test
lea
or
jge
out
mov
mov
jecxz
sbb
shll
in
xor
ss
cli
sub
jb
aas
ret
stos
fidivrs
and
call
sti
push
loopne
lahf
sbb
outsb
gs
roll
in
cmp
cs
xchg
pop
rcrl
xor
scas
or
adc
in
mov
mov
mov
cli
out
mov
mov
pop
stc
jns
repz
pop
mov
pop
sbb
clc
pop
movsb
and
int
xor
call
inc
loope
xor
push
mov
cli
and
add
sbb
push
pop
out
adc
nop
sahf
cmp
cwtl
xor
add
inc
push
test
loope
xchg
inc
rol
sti
lret
add
inc
jecxz
xchg
xor
xor
jp
jecxz
into
pusha
or
leave
push
mov
rcll
and
xchg
mov
push
sbb
mov
loop
out
pop
adc
cmp
jbe
test
cli
dec
mov
outsb
inc
jo
insb
hlt
ss
mov
add
je
aad
mov
clc
jns
lret
mov
in
enter
push
jecxz
and
lods
testb
mov
test
mov
addb
mov
ljmp
and
testl
mov
xchg
dec
popf
subb
rolb
push
les
ja
test
loope
push
mov
inc
sbb
ffree
lock
add
mov
out
movsb
je
sbb
cld
pop
sti
stos
in
push
pop
movsb
cmpsb
pop
xor
push
push
pop
shll
push
ud1
out
imulb
in
rolb
mov
data16
mov
enter
mov
inc
test
add
push
inc
add
shlb
xchg
ljmp
daa
cwtl
pop
popf
push
push
nop
ret
divl
mov
or
and
sub
jl
adc
pushl
cmc
test
bound
and
outsb
xchg
pop
movsl
push
lret
mov
mov
jnp
mov
sti
addb
pop
mov
scas
stos
mov
aaa
and
cmpsb
outsb
ror
cld
and
cli
push
mov
fists
jmp
int3
mov
sbb
sbb
xchg
or
inc
inc
push
xchg
push
pop
push
stos
push
cwtl
imul
jg
dec
push
push
inc
pop
xorl
inc
fiadds
scas
mov
enterw
int
cmp
pop
push
add
cmpb
xor
out
stos
mov
push
ret
xor
fisttps
jl
push
cmp
bswap
xchg
cmp
icebp
fistl
xor
aam
pop
loop
sbb
leave
jno
loope
out
xchg
fnsave
pop
scas
je
repnz
cmp
pop
push
in
dec
sub
add
sub
sbb
aam
jae
or
push
mov
push
pop
lods
movsl
lcall
sbb
or
cmp
cmpsl
sbb
aad
push
push
push
push
lds
lret
inc
bound
in
pop
aam
scas
adc
stos
cmc
adc
push
aad
gs
imul
jns
sub
pop
mov
je
outsb
fdivl
dec
cmp
cmc
ffree
mov
dec
leave
xchg
push
dec
xor
lock
in
lock
hlt
add
push
pop
add
pusha
ljmp
dec
jae
test
cmp
dec
xlat
inc
and
xor
add
or
push
mov
jecxz
inc
roll
test
rolb
adc
test
fsubs
dec
hlt
in
mov
xchg
sbb
fcoms
add
push
icebp
das
or
cmpsb
mov
movsl
pop
scas
in
jae,pn
jo
mov
push
repz
rcll
scas
sbb
fs
pusha
jo
pop
cltd
test
and
or
cmp
daa
sbb
mov
lcall
xchg
sar
push
add
pop
jne
cld
jns
cmp
add
stos
add
cli
sbb
inc
push
cmp
negb
xor
lods
inc
int
mov
jnp
adc
jge
shl
pop
mov
fsubl
xor
loope
call
dec
test
and
cs
push
dec
mov
push
push
mov
fnstcw
ficompl
stos
mov
imul
or
inc
inc
pop
xchg
pop
data16
aad
pop
mov
sub
jecxz
mov
xchg
pop
int
lods
mov
and
movsl
xor
pop
rcr
data16
inc
js
adc
xchg
lods
loopne
test
frstor
push
gs
cmc
lahf
das
cmpsl
sahf
sahf
loope
push
aam
jp
repz
sub
adcl
cltd
jb
push
ds
push
outsl
leave
mov
lahf
leave
push
pop
xor
or
push
lock
xchg
imul
gs
out
xchg
dec
sbb
cli
mov
rcrb
push
ds
fcmovbe
pop
popf
jns
sbb
popf
add
jae
shlb
jno
jge
jge
sbb
push
mov
add
lret
dec
cs
add
push
test
js
dec
dec
xlat
cs
jl
pop
cwtl
add
nop
pushf
outsb
pop
adc
adc
dec
sub
das
mov
fucomip
push
or
mov
icebp
bnd
scas
xchg
icebp
push
xchg
shll
add
movsl
mov
xchg
cld
jno
add
je
adcb
mov
movsb
pop
cwtl
cld
adc
dec
cmp
xor
test
pop
adc
dec
inc
pop
cmp
loop
ret
int
add
int3
shr
mov
insl
inc
sub
filds
cmc
sbb
lods
adc
jbe
cmpsb
xchg
push
sti
orl
push
add
std
ret
lret
rcll
sbb
rclb
xor
add
sub
ds
in
jne
pop
mov
enter
push
or
repnz
sar
inc
dec
dec
xchg
scas
mov
inc
cmp
cmp
cmp
jns
outsl
sub
add
lock
xor
or
pop
cli
jecxz
jno
add
aad
and
inc
enter
and
arpl
or
popa
mov
add
and
push
add
dec
mulb
pop
divb
or
mov
adc
insl
sarl
and
dec
or
icebp
jns
jnp
mov
mov
in
dec
loop
jbe
jns
mov
xchg
je
in
imul
pop
cld
pop
cmpsb
xor
sbb
mov
mov
push
insb
fstps
andl
pop
mov
lret
add
cmp
mov
insl
dec
popa
out
lret
addr16
call
ret
xchg
xor
js
xchg
fmuls
es
insb
ret
movsl
cld
lret
pop
add
sub
jle
jo
mov
sub
add
xchg
loopne
dec
push
pop
incl
jbe
inc
or
popf
ljmp
test
mov
into
test
add
lods
or
jnp
addb
mov
jbe
add
daa
fdivs
out
rcll
mov
cmp
push
add
int3
shlb
pop
sub
cltd
push
aaa
mov
sti
pop
inc
jns
mov
fidivrl
xchg
xor
outsb
test
adc
out
daa
cwtl
lcall
cmp
and
leave
into
jbe
popa
cs
fs
mov
dec
mov
mov
and
iret
pushf
leave
jb
mov
pop
std
mov
leave
or
hlt
int
gs
push
rcr
sub
adc
int3
mov
xor
push
mov
cld
out
sub
aaa
sub
fisttpll
push
xor
mov
decb
in
mov
cld
sbb
jl
aam
imull
jecxz
movsb
mov
mov
cmp
mov
lahf
pusha
dec
xchg
outsl
arpl
push
and
das
test
cmp
xchg
pop
pop
xorl
and
cltd
push
arpl
dec
ret
or
inc
sti
fcmovb
and
mov
sbb
outsl
int3
call
loop
dec
jnp
add
out
enter
sub
jmp
aad
xor
lret
push
popa
or
rolb
fisubrs
shlb
mov
subl
inc
xchg
xlat
or
aam
scas
push
sahf
jmp
fwait
out
sub
jmp
xlat
and
add
push
pop
dec
cltd
mov
pop
mov
rcr
flds
cwtl
fdivrs
inc
cld
out
jmp
or
addr16
mov
mov
ret
xchg
in
dec
lock
cmpsl
push
mov
xor
notl
aaa
cmp
negb
pop
pop
stc
bound
fwait
xor
sti
cmp
jbe
adc
std
jb
pushf
jo
jl
xchg
jne
jmp
pusha
xchg
movsl
and
inc
add
shl
scas
pop
pushf
add
sbb
lahf
mov
leave
lock
sbb
gs
sub
fldenv
add
cmp
inc
sbb
add
test
stc
mov
scas
push
cmc
dec
mov
mov
decb
pop
push
jne
fiaddl
or
outsl
dec
movsb
jno
add
xor
insb
in
xchg
push
lods
ret
sub
pop
jnp
in
arpl
pop
mov
fsubr
repnz
in
jp
mov
mov
mov
ja
gs
in
js
pop
pop
mov
lret
mov
aaa
push
fdivr
mov
lcall
ds
popf
inc
xchg
je
fidivrs
out
dec
xor
and
sbb
les
sbb
mov
mov
jmp
lock
ja
test
xor
mov
mov
hlt
outsl
pop
jne
loopne
or
xchg
inc
mov
xchg
dec
dec
stc
mov
or
sub
jmp
add
pop
call
inc
popf
mov
ret
push
push
test
jp
push
insb
ret
sbb
aam
pop
pop
sar
lret
int
lahf
inc
sbb
mov
movsb
xchg
mov
cmpsl
mov
mov
imul
fdivrs
jg
daa
add
sarl
jmp
or
mov
mov
fiaddl
adc
ljmp
mov
cmp
imul
stc
mov
sub
negb
aad
insb
and
push
xor
dec
inc
push
lock
mov
xchg
add
mov
js
push
insl
leave
push
push
mov
pop
cmpsb
mov
ret
mov
mov
inc
pop
jbe
push
mov
out
xor
add
scas
inc
mov
xchg
test
nop
orl
in
pop
xchg
mov
mov
jmp
insl
int3
cmp
push
or
or
adc
add
xchg
jb
jb
add
inc
and
test
xchg
dec
or
sarb
sahf
sbb
ljmp
mov
cmp
nop
and
data16
lcall
cmp
sbb
pushf
scas
push
rcll
icebp
add
enter
hlt
cs
mov
les
movsb
iret
cmp
push
subb
les
xor
shr
pop
pop
loop
mov
cltd
mov
lcall
push
mov
mov
js
leave
mov
lods
arpl
push
scas
loopne
lods
hlt
xchg
negl
pop
lods
sbb
sbb
xchg
mov
sbb
xor
fstp
and
ret
mov
inc
aas
add
test
add
int
lods
stos
jno
xchg
push
mov
jbe
and
fmull
pop
lcall
js
sub
push
push
out
je
jo
inc
mov
pop
pusha
mov
mov
or
int3
nop
push
test
outsl
mov
add
scas
out
dec
fidivs
jge
cmp
mov
cld
xor
lcall
icebp
aas
fstl
loop
and
seto
fs
lods
adc
lahf
jl
xor
push
out
xchg
sub
cwtl
jp
inc
or
cmpsl
test
and
inc
out
adc
shll
add
mov
sub
bnd
and
aad
rorl
push
add
lret
paddq
sub
lods
cld
fstpt
je
cmpsl
arpl
push
nop
xchg
cmp
jg
mov
jns
outsl
mov
jle
fsubl
nop
mov
daa
add
das
sbb
push
add
push
pop
in
xchg
cltd
cmp
movsl
aam
jmp
pop
out
loop
aaa
leave
push
fdivrl
scas
fwait
jb
lret
cmp
fcomps
pop
add
adc
mov
daa
xlat
imul
push
fldt
adc
mov
adc
or
add
inc
or
mov
pop
ret
jmp
or
out
inc
in
mov
je
dec
aaa
imul
loope
in
out
or
pop
pusha
into
xchg
ljmp
push
xchg
pop
dec
fldln2
cld
xchg
aaa
cmp
aad
pop
adc
jae
lea
hlt
in
out
btr
mov
jns
aas
sbbl
push
fwait
dec
add
pop
mov
test
xor
mov
lods
mov
rcl
pushf
sahf
lods
jp
push
outsl
cmc
lret
int3
xchg
bound
pop
dec
into
cmp
int
nop
cld
lret
mov
cmpsl
xchg
jmp
insl
dec
outsl
lods
dec
pop
mov
outsl
addr16
mov
shll
pop
gs
xchg
sub
cltd
jne
dec
push
vpcmpeqb
enter
arpl
mov
test
daa
or
roll
mov
adc
push
jb
dec
lods
pop
lds
aam
add
ror
push
sti
push
repz
call
punpckhbw
mov
cld
loope
jne
iret
jne
dec
dec
ljmp
aad
movsl
jb
repz
shlb
push
or
xchg
dec
jne
jecxz
jecxz
cmpl
sbb
pusha
xchg
sub
push
shlb
insl
mov
sub
repz
lods
pop
cmp
adcl
or
and
and
andl
jns,pt
jle
xchg
outsb
push
or
outsb
ja
dec
push
and
jae
and
inc
adc
cmp
imul
mov
test
pop
out
jnp
jnp
xchg
cs
pop
add
nop
jge
xchg
add
pushf
mov
in
ljmp
inc
data16
jg
cmp
lods
cmc
cmp
mov
in
or
sbb
repz
jg
jne
xor
mov
icebp
xchg
lds
lret
shlb
or
add
push
cmpb
imul
enter
cli
arpl
out
or
xchg
ret
insl
frstor
jbe
lret
mulb
sub
sbb
ret
mov
je
fsubl
lahf
xchg
je
jecxz
xchg
jg
imul
and
sub
cltd
push
shll
mov
mov
test
dec
jb
sub
call
push
add
lea
movsb
test
or
and
enter
and
xchg
repz
in
push
jp
hlt
sbb
iret
addr16
mov
or
mov
cmp
daa
push
inc
cmpsl
sub
popf
dec
push
aas
shl
addr16
stos
cmc
cmp
mov
pop
fistl
cmp
inc
mov
ret
test
repnz
push
sbb
jnp
mov
jl
mov
dec
or
dec
enter
repz
testl
jg
pop
jno
sbb
push
jg
adc
int3
jo
sbbb
inc
ret
enter
jae
sub
stos
nop
adc
in
shll
inc
jl
inc
adc
mov
jecxz
inc
lds
cmp
inc
mov
push
inc
jle
dec
lcall
and
mov
mov
mov
cmp
jb
xchg
push
sub
inc
int3
lods
mov
es
jne
fiaddl
push
xchg
lds
pop
xor
movsb
jbe
ja
pop
mov
cmpsl
push
xchg
xor
in
movsb
ss
xor
jns
int
rcr
sbb
mov
and
sub
or
inc
icebp
lds
mov
pop
cmc
out
jbe
mov
outsl
sarb
adc
inc
in
push
xchg
xor
andl
repnz
repz
icebp
add
lods
mov
sbb
push
pop
jge
mov
js
mov
push
mov
stos
sub
xor
aam
xor
xchg
les
bound
in
sub
push
fldcw
in
add
xor
inc
shl
pop
xor
ret
ss
sti
mov
pop
push
inc
lahf
pop
sub
popf
aaa
dec
add
icebp
sbb
cmp
mov
adc
test
dec
and
cmp
cmp
inc
xchg
jno
addr16
clc
push
mov
xchg
add
mov
jmp
cmpsb
jmp
or
and
fsubs
push
mov
pop
outsl
xorb
ret
mov
inc
pop
xor
int
ss
mov
hlt
scas
push
pop
jae
jnp
adc
aaa
pop
dec
xchg
faddl
push
jno
insb
stos
pusha
outsb
insb
mov
jbe
and
jp
xor
fbstp
testb
push
addl
shll
out
pop
jo
fs
sbb
add
fimuls
aam
out
push
lret
jb
mov
bound
sub
mov
jae
mov
add
mov
add
fstl
lock
in
inc
or
dec
mov
lahf
fiadds
mov
cmp
and
jb
incl
sub
mov
imul
test
push
imul
sub
iret
daa
xchg
cmp
cmc
repnz
and
inc
mov
mov
sti
sub
pop
sub
loopne
cmp
mov
jg
push
outsl
and
xor
shll
push
xchg
ljmp
cmc
mov
mov
imul
adc
xchg
inc
dec
std
pusha
ret
lahf
adc
xchg
js
out
sbb
push
cmp
push
nop
xor
xor
and
jmp
frstor
sub
loop
or
pop
scas
pop
mov
cli
clc
or
shrb
pop
xor
push
popa
jne
pop
test
add
or
in
xchg
fwait
mov
stos
imul
mov
in
into
stc
jne
fucomip
std
push
mov
xor
pop
fwait
arpl
adc
ja
and
adc
rolb
xchg
in
xchg
cmc
rcll
mov
dec
dec
cmpl
inc
fucomip
inc
and
loopne
dec
pop
arpl
call
aam
pop
hlt
out
mov
aaa
cmpb
sub
rol
sub
pusha
add
movsb
in
and
pushf
and
jae
xlat
hlt
movsb
stos
mov
sbb
outsb
shlb
lods
scas
inc
and
subb
sbb
in
xor
je
add
sub
fs
sub
lahf
loopne
into
fcmovnbe
push
sbb
jmp
jge
imul
push
sub
out
push
sub
push
lods
mov
das
stos
cmpsl
pop
jp
jp
std
sbb
push
dec
daa
mov
cwtl
xchg
inc
push
push
add
out
mov
jno
sub
nop
and
cmp
dec
xchg
add
call
in
inc
dec
push
adc
sub
dec
inc
lock
mov
push
pop
imul
cs
cld
lds
fcmovnbe
pop
stos
xor
popa
push
negl
addr16
les
js
sbb
pop
mov
and
aaa
mov
pop
sub
xchg
fsubp
mov
dec
xchg
pop
or
sbb
lock
adc
xor
sbb
in
into
int3
test
addr16
scas
movsl
push
lock
dec
lock
dec
arpl
in
outsb
jle
add
ret
incl
loope
and
aaa
ficompl
iret
dec
scas
ret
jmp
jnp
cmp
push
xchg
mov
sbbl
push
or
aam
add
add
andb
xchg
or
xchg
jno
inc
cmp
out
lds
dec
jp
sub
dec
sahf
push
push
sbb
add
mov
ret
gs
fidivrs
jae
jmp
adc
popl
test
in
xchg
mov
push
pusha
les
lods
inc
inc
cmp
sub
sub
loopne
mov
push
push
jmp
movl
mov
pop
xchg
sub
aas
sti
push
out
dec
iret
cmp
xchg
jae
lods
cwtl
jge
outsl
push
into
add
test
enter
add
and
mov
cmc
insb
add
cmp
stc
sub
push
push
mov
pusha
fwait
xchg
cltd
pusha
stos
cld
push
inc
pop
mov
lock
pop
xchg
sub
push
push
jg
mov
ja
pop
push
jmp
adc
dec
xchg
push
test
adcb
xlat
inc
sub
stos
repz
push
jge
lea
fisttps
test
testb
fisttps
adc
sti
scas
aas
add
jb
sbb
inc
dec
insl
xor
and
jae
sub
add
add
sub
into
xor
cmp
enter
push
outsl
repz
mov
jnp
aam
xor
faddp
push
mov
or
test
mov
aas
shrb
adc
lods
and
mov
mov
dec
inc
xor
dec
pop
out
ret
inc
fcomp
push
lret
fdivrs
mov
or
mov
mov
or
inc
dec
faddl
lock
js
ds
sbb
lods
lret
roll
test
loopne
cmp
testl
outsb
jo
jb
xchg
dec
mov
test
imul
mov
push
mov
mov
add
push
into
adc
jne
lea
int
sahf
loop
adcl
or
outsl
inc
movsb
push
sub
mov
cli
sahf
mov
adc
push
test
sbb
dec
and
mov
push
cmp
das
pusha
or
out
cli
mov
mov
xchg
or
sahf
sbb
mov
fadd
test
bound
addb
mov
cmp
mov
aas
mov
cmp
idivl
inc
adc
aad
jle
js
jb
lret
mov
dec
xchg
pop
cmc
packuswb
xchg
jnp
fisttpl
sbbl
orb
push
subl
xlat
mov
inc
imull
sub
nop
jns
xlat
cmp
inc
ret
cmc
push
scas
repnz
push
repnz
lods
movsb
mov
sub
add
mov
rorl
pop
sar
std
leave
pop
or
movsb
out
pop
mov
mov
jmp
or
hlt
sbb
mov
fsts
jmp
xchg
fisubrs
jg
aas
and
jmp
aaa
pusha
test
nop
je
and
mov
mov
lods
daa
cmc
es
lods
or
ljmp
sub
inc
sbb
ja
mov
mov
jno
push
loop
lds
popf
mov
in
mov
test
mov
decl
mov
movb
sbb
inc
testb
loop
loopne
jnp
sub
lahf
stc
loope
jbe
out
dec
call
gs
mov
popa
leave
pop
popf
add
mov
jno
push
pop
inc
dec
flds
mov
sbb
test
sub
enter
test
outsl
cli
ret
incl
cmp
mov
and
mov
cmpl
cltd
stos
or
xchg
mov
pushf
call
les
dec
cmp
and
in
dec
ss
xchg
inc
mov
xor
hlt
and
mov
lahf
testl
mov
shll
aas
mov
cmpsl
mov
aaa
or
rclb
fsub
push
pop
push
nop
add
stc
xchg
mov
daa
mov
adc
cmc
pop
enter
pop
sbb
cwtl
test
push
xorb
fnstsw
popf
push
test
xor
dec
push
dec
adc
aas
rcl
sub
adc
xchg
int3
dec
cmpl
mov
mov
mov
and
sub
das
jecxz
pop
dec
ja
sahf
cli
shll
cmp
mov
stos
mov
fldl2e
dec
test
dec
or
xor
or
shlb
filds
lret
xchg
xchg
pop
dec
arpl
rcl
add
jae
mov
sbb
jp
imul
test
pop
mov
outsb
call
sub
scas
cmp
popa
movsl
ror
and
and
and
jl
pop
test
push
cmc
dec
mov
mov
sbb
push
inc
mov
xchg
ret
mov
cmp
int
mov
inc
in
xor
sub
mov
xchg
and
test
mov
sahf
scas
pop
jbe
std
sbb
push
mov
rcrb
cmp
xchg
pushf
subb
cmpl
mov
mov
ss
int3
dec
sahf
sti
filds
sub
xchg
push
bound
sub
stc
pop
pop
mov
test
out
dec
sbb
cld
dec
mov
xor
sub
loopne
scas
xchg
dec
jbe
mov
pop
sub
cmp
fisubs
and
pop
jnp
or
sbb
or
mov
sti
adc
divl
mov
imul
xchg
lock
cmp
data16
cmp
and
pop
mov
mov
mov
sub
lds
mov
jecxz
xor
jle
iret
inc
push
imul
in
orl
pop
pop
ret
lock
lea
mov
sub
ds
insl
aaa
daa
jle
enter
push
fstpl
imul
test
xchg
jp
xor
or
pop
js
jo
out
mov
sti
dec
xorl
dec
data16
in
mov
jp
xchg
pop
cwtl
mov
arpl
stc
repnz
aam
xchg
pop
hlt
test
sub
jbe
pushf
mov
lock
jne
call
xor
ja
gs
out
or
ljmp
test
cmp
movsb
inc
sbb
xchg
cmc
sub
jns
cmp
cli
and
mov
repz
scas
pinsrw
adc
jbe
stos
add
sbb
addl
xor
daa
ss
daa
xor
xchg
mov
or
sbb
iret
fcmovb
mov
and
inc
out
bound
insb
push
sub
mov
push
pop
sub
nop
dec
popf
out
dec
fcompl
sub
jno
enter
in
xor
divl
inc
and
js
pop
sub
pop
lret
mov
movsb
mov
aam
lea
ja
xor
stos
xchg
cmp
xor
xchg
outsb
dec
pop
pushf
mov
dec
pop
and
nop
push
faddl
fbld
sub
rorl
push
inc
and
lahf
leave
xlat
fisubrl
sub
sarl
daa
out
or
xchg
outsb
pushaw
out
xchg
ds
ljmp
scas
adc
add
sti
adc
xchg
sub
mov
lret
es
push
mov
dec
or
xor
jle
mov
inc
push
xor
mov
xchg
pop
mov
cmp
and
cmc
test
xchg
enter
cmp
daa
adc
imul
jp
jecxz
jmp
mov
push
pop
add
fcomip
xor
sub
adc
mov
clc
inc
int3
jno
or
jbe
dec
jge
cli
xchg
out
jno
in
filds
scas
mov
inc
cltd
movsb
fbld
push
fmul
sbb
pop
fisttps
push
cld
sub
int3
and
xlat
cld
out
push
pop
mov
cmp
andl
pop
popa
and
hlt
ljmp
je
dec
cmpsb
aas
and
or
xchg
add
mov
cwtl
jne
push
xlat
push
jl
leave
push
mov
jp
mov
dec
stos
push
cmp
aad
lods
jb
jp
adc
lea
mov
fistps
jmp
pop
sbb
incb
aas
lcall
sahf
dec
adc
push
mov
push
shr
sbb
out
cmp
aam
imul
inc
sahf
pop
fwait
aam
mov
arpl
stos
mov
cwtl
and
xor
addl
ds
test
add
mov
jmp
je
and
pop
enter
test
out
inc
ljmp
cmpsb
add
or
loope
insb
mov
insl
sbb
mov
push
adc
pop
inc
lret
sti
or
or
div
cmp
out
push
cmp
outsl
jne
cmp
lods
sub
ret
out
xchg
pop
jle
fwait
popa
out
sub
xor
xchg
mov
cmp
lods
mov
lock
or
fdivr
xorl
int3
jmp
pop
cmp
push
dec
test
fcoms
sbb
ja
sub
jp
jmp
mov
mov
sub
lahf
cmp
cmp
sub
dec
xchg
aad
imul
add
and
mov
aam
nop
rcl
jnp
xor
roll
jl
mov
or
mov
shrb
loopne
lcall
dec
jbe
insl
ja
push
fimuls
mov
sarb
adc
inc
pop
pop
frstor
pop
mov
dec
pop
mov
ja
lahf
paddb
loopne
mov
cmp
sahf
dec
sub
out
sub
push
cwtl
cmp
mov
std
lahf
out
dec
popf
inc
xchg
sbb
inc
push
mov
rcrl
jp
cmp
and
inc
js
loopne
xor
pop
or
adc
and
adc
fsubl
pop
in
or
ret
js
cmp
js
std
cwtl
shrl
out
in
nop
loope
push
fmul
test
push
negl
aas
in
out
aaa
stc
ds
xchg
xchg
sub
jecxz
cmpsl
mov
push
outsl
xchg
pop
mov
fnstenv
addr16
hlt
iret
xor
popa
and
and
cwtl
outsb
xor
test
jecxz
or
loopne
rol
push
bound
addr16
mov
mov
and
cmc
mov
mov
mov
pop
mov
dec
aas
lods
or
push
out
jnp
jb
repz
xor
push
out
and
sti
inc
dec
popf
fs
xchg
mov
sub
adc
test
sahf
ja
jp
or
loop
mov
cmpsl
fwait
in
out
xadd
repz
mov
sub
addr16
jns
lret
jns
dec
mov
out
xchg
fs
stc
stos
sbb
push
mov
fidivs
lahf
jecxz
mov
daa
mov
add
fwait
and
enter
xor
push
out
rcl
push
int
cltd
in
sub
cmp
decb
std
xor
jg
mov
pop
pop
xchg
pop
incl
subl
aad
movsl
xchg
xchg
lret
dec
pop
add
and
clc
or
lods
mov
je
add
adc
add
inc
mov
push
inc
mov
ds
jns
pop
mov
xor
jns
ficoms
cmp
xchg
or
pop
fwait
leave
loop
mov
sub
mov
cltd
cli
je
int3
jns
or
test
mov
jns
mov
push
sub
and
int3
test
sahf
adc
test
adc
cld
xor
mov
add
mov
lret
ljmp
add
popf
outsl
xor
fcoml
and
call
push
xchg
adc
xchg
nop
decl
inc
sti
es
jmp
push
fidivl
pop
xor
mov
cmp
push
xor
xor
xchg
sub
mov
les
into
jns
dec
add
mov
ret
nop
les
adc
lods
hlt
js
push
popf
cmp
test
dec
or
mov
and
das
xchg
aas
out
iret
add
in
ror
out
insl
stos
mov
xorb
jge
mov
jne
xor
test
insl
mov
xchg
xchg
add
jae
pop
stc
dec
pop
repnz
mov
jnp
mov
sbb
and
sbb
add
gs
adc
inc
push
and
cwtl
add
out
cli
pop
cmp
mov
jl
fsubrl
or
push
mov
jp
or
inc
sub
sbb
push
xor
xor
pop
and
or
push
jle
sub
push
inc
scas
sbb
pop
mov
xlat
sbb
jbe
pop
xchg
pop
jle
adc
push
pop
outsb
lahf
and
inc
dec
cli
pop
or
add
jae
mov
dec
ja
fsts
or
cld
out
xor
add
clc
les
in
dec
jge
jnp
xchg
test
nop
mov
aad
aad
int3
mov
icebp
fistpll
cmp
xor
test
sub
movsl
pop
js
rorl
jecxz
cmp
out
sti
sbb
sar
popf
enter
stos
xor
repnz
fnstsw
mov
xor
pop
push
cmp
dec
enter
push
cmp
icebp
ret
je
dec
cmp
out
sub
test
nop
add
call
dec
cltd
js
loopne
sti
cmp
xor
xor
mov
mov
jbe
jge
pop
mov
data16
inc
jmp
and
hlt
jns
jmp
xlat
addr16
nop
aad
testb
arpl
xor
sub
scas
out
mov
dec
adc
mov
incb
pop
mov
rcrl
pop
ss
test
clc
in
mov
daa
cli
outsl
nop
mov
into
cwtl
inc
popa
mov
daa
xorl
xchg
dec
mov
jg
inc
mov
insl
mov
sub
and
xor
fstpt
aaa
and
add
stos
aaa
in
jno
call
cmp
fwait
mov
mov
cmp
cld
jmp
dec
or
aad
cmpsl
sbb
mov
or
cld
repnz
jnp
stos
cmp
aad
loope
movsl
and
push
dec
dec
aas
dec
aad
and
rcrl
jo
dec
inc
dec
lret
cmp
stos
test
test
in
test
clc
cmpsl
in
cwtl
add
sub
call
test
gs
pop
movsb
cmpsb
push
js
jno
cli
inc
pop
popa
xor
cmp
cmp
xlat
or
dec
adc
insb
xchg
sub
cmp
xchg
ror
outsb
daa
inc
adc
lahf
cld
je
insl
je
jns
adc
mov
cs
xchg
xchg
add
and
push
sub
push
and
sub
pop
mov
push
into
sub
bound
push
cmc
lahf
imul
ret
hlt
fstp
xchg
mov
lahf
and
xor
js
fstpt
jecxz
lcall
jl
mov
shrb
xor
adc
lcall
inc
filds
inc
cmp
fcmovne
jmp
mov
dec
and
imull
out
jne
push
pop
sti
sbb
mov
push
bound
add
pop
dec
fwait
lahf
adc
sub
int3
aas
mov
jo
and
lret
xor
stos
not
and
adc
mov
lcall
adc
pop
push
bound
pop
sbb
mov
pushf
dec
add
xchg
dec
push
call
cmpsb
mov
cwtl
test
lods
shll
pop
adc
sbb
push
xlat
cmpsl
rcrl
leave
jno
jno
sub
push
sbb
push
movsb
adc
arpl
sbb
pop
lcall
clc
pop
mov
push
sub
jg
popa
push
dec
test
adc
mov
push
jecxz
jns
lea
shll
cmp
xchg
cmpsl
xor
pop
int3
dec
out
xchg
xchg
adcl
push
mov
jge
cwtl
add
ret
out
xchg
sbb
push
outsb
and
pop
lahf
cs
xchg
or
mov
out
ficoml
out
add
lods
mov
jge
call
lcall
pop
and
enter
shl
add
dec
icebp
jecxz
add
stc
sarl
fidivl
sbb
jl
adc
adc
xor
xor
je
xor
nop
repz
or
loope
mov
enter
sub
mov
imul
mov
jb
lock
mov
push
sbb
lods
lea
add
sbb
scas
xchg
rorl
cmp
or
je
jp
xchg
jge
movsb
sub
pop
je
xchg
pop
pop
mov
push
jge
cmp
sbb
and
push
test
cli
jg
xor
fisubs
stos
cmp
andb
dec
ljmp
loopne
lahf
outsl
psubsw
pushf
jmp
jle
mov
mov
pop
mov
je
hlt
mov
js
outsb
popf
push
ja
pop
jbe
dec
and
push
add
aad
jo
int3
pop
faddl
lods
iret
leave
in
addb
stos
shll
xor
sbb
jns
lods
ret
aaa
int
ror
adc
int3
push
xor
aad
adc
loopne
shl
jecxz
stos
mov
and
adc
jns
jl
outsb
pop
mov
jne
add
or
xlat
in
shrl
movsl
addr16
std
sub
add
cltd
or
jmp
int
ljmp
dec
adc
inc
stos
loopne
push
in
mov
mov
xchg
jecxz
mov
ss
pop
mov
sti
inc
xchg
jle
and
dec
mov
mov
jno
cmp
dec
mov
and
fbstp
add
xchg
jno
enter
and
insb
jle
cmp
add
clc
stc
pusha
add
fwait
mov
dec
inc
xchg
cli
repnz
scas
lret
mov
sub
test
test
mov
test
aaa
jns
fs
out
orl
ljmp
pop
xor
in
scas
aad
divl
cmp
js
pop
cmp
lret
outsb
mov
ret
adc
bound
adc
scas
adc
cltd
stos
repnz
out
sbb
sub
xor
insl
and
add
popf
iret
push
pop
jne
mov
jno
out
adc
fadds
ja
les
das
stos
cmpsl
cmpsl
jle
push
sbb
mov
repnz
xchg
add
pop
xchg
xor
clc
stos
mov
popf
add
or
add
in
dec
seta
jmp
adc
movsl
sub
push
lahf
arpl
mov
aas
sti
push
jns
fisubrl
sti
repnz
or
ret
sbb
cmc
loop
dec
rorb
push
cmpsl
sbb
mov
mov
cmp
mov
xor
fdivrp
dec
mull
andb
jo
sarl
mov
movb
add
inc
sbb
push
or
stos
fsubrl
mov
pushf
daa
mov
gs
mov
dec
insb
jge
rcr
mov
imul
pop
test
xchg
cmp
scas
leave
rol
or
or
jb
sbb
pop
xor
hlt
add
jg
dec
in
xor
sub
idiv
xor
lret
push
xor
inc
sbb
add
icebp
call
in
loope
ret
in
nop
ss
pop
push
or
into
js
mov
jg
ja
dec
mov
fcmovnbe
sub
pop
rcrl
jp
cmpb
sbb
and
pop
scas
and
mov
add
adc
inc
fldl
rorb
mov
add
std
sbb
add
xchg
repz
mov
int
inc
lret
mov
xchg
repz
and
push
mov
sbb
pop
mov
aam
adc
subl
ret
movsb
sbb
test
mov
cmpsb
jp
insb
mov
rorb
adc
imul
and
add
roll
cmc
push
sbb
dec
mov
in
or
mov
push
dec
dec
push
dec
or
lcall
lea
mov
stos
mov
lods
bswap
pop
jg
xor
fmull
push
fprem
mov
mov
and
movsb
or
jle
scas
bound
adc
je
dec
test
rolb
mov
dec
outsl
test
test
and
int
bound
mov
xchg
push
imul
cwtl
lcall
ss
cmp
mov
lcall
aad
gs
rcr
insl
xchg
cmp
sbb
xor
out
push
fcoms
inc
stos
pop
push
jecxz
nop
sub
xorb
or
pop
dec
adc
in
clc
add
rolb
ss
dec
outsl
arpl
in
jbe
test
loopne,pt
mov
fnstcw
pusha
push
je
mov
xchg
push
jp
das
mov
cs
mov
pop
dec
js
jo
stc
loopne
dec
xchg
mov
das
scas
scas
sbb
lods
mov
xor
mov
ljmp
dec
and
cmp
and
jge
insl
push
xorb
repnz
fdivs
xchg
addr16
or
stos
adc
mov
pop
bound
xor
fwait
test
rclb
lods
aas
dec
shrb
addb
nop
jne
dec
xchg
sub
fwait
out
arpl
movsb
xor
test
ret
mov
lods
leave
subl
inc
les
dec
add
enter
xlat
out
nop
pop
loope
fstl
in
xchg
push
lods
loopne
clc
push
push
mov
clc
mov
inc
push
das
mov
jl
cmp
pop
test
jl
dec
call
call
sbb
lret
adcl
inc
jmp
add
adc
jg
in
jmp
test
in
mov
mov
sbb
sub
and
push
lcall
and
cmp
sbb
mov
push
lret
and
nop
add
xchg
push
jbe
ja
mov
insl
lods
js
xlat
lods
mov
clc
fists
push
or
mov
adc
mov
pushw
adc
mov
sahf
add
xor
mov
adc
iret
sbb
sbb
daa
lods
inc
aaa
scas
add
or
aam
loop
outsb
dec
fistl
add
jecxz
jno
fdivrs
fsubl
inc
fildl
ret
lret
dec
ret
sar
out
sahf
adc
roll
or
cmp
pop
sbb
test
mov
lcall
jae
lods
out
mov
pop
in
xchg
mov
mov
mov
mov
lods
xor
inc
sbbb
loope
movsl
pop
bswap
mov
test
mov
dec
xchg
rcrl
nop
les
cmp
jae
loop
push
cs
mov
lret
mov
cs
jne
sub
add
cmp
bound
jecxz
xchg
pusha
jmp
rcrl
or
cmp
enter
cmpsb
js
mov
mov
xchg
ds
dec
add
in
dec
iret
shll
jl
push
push
pop
pop
xchg
test
rclb
cmp
ss
lods
mov
lcall
in
out
fisubrs
data16
test
xchg
lret
icebp
jecxz
repz
cmp
call
mov
jae
out
sti
fsubrs
imul
rcrl
mov
inc
nop
neg
or
movsb
lock
push
sbb
inc
pop
sub
out
stos
push
stc
pop
shll
out
sti
cmp
out
cli
adc
loop
lcall
gs
mov
adc
mov
adc
mov
sbb
cmpps
rorb
mov
sbb
pop
mov
out
mov
inc
lret
data16
pop
mov
xchg
insl
adc
xchg
xor
stos
sti
hlt
and
cli
pop
ss
jno
ljmp
leave
xor
mov
mov
pushf
adc
clc
shlb
repnz
es
mov
mov
cmpsb
and
arpl
lock
dec
or
pop
push
out
jmp
notl
xor
fwait
xor
adc
les
inc
mov
das
sub
fistl
push
xor
lods
filds
jg
ljmp
ja
movsl
mov
mov
mov
push
neg
call
ja
lea
popf
enter
insl
and
sbbl
jns
pop
adc
fsubs
ja
push
xor
decl
pop
bound
or
xchg
sti
and
test
cltd
or
inc
mov
fwait
dec
add
add
xchg
repnz
rcll
imul
mov
sub
inc
mov
sbb
xchg
push
popf
les
cmpsl
jb
sub
fs
out
adc
scas
rcll
aas
enter
das
shlb
mov
pop
out
mov
mov
fdivrl
std
xchg
push
arpl
sahf
jb
mov
insb
ficomps
test
repnz
cmpsl
outsl
cmp
cmp
push
fcoml
fwait
or
insl
test
iret
cmp
scas
xor
fadds
xchg
adc
cmp
push
mov
or
xchg
jne
addr16
sbb
aaa
inc
and
jg
insb
in
inc
test
xor
clc
dec
adc
out
sub
pop
cmpsb
fisttpll
movsb
inc
gs
xor
cltd
xchg
mov
lock
xor
mov
jg
sbb
cmp
push
sbb
ret
jmp
lar
pushf
dec
je
xchg
or
push
ljmp
cmpsl
cld
push
pusha
add
lcall
mov
push
adcl
fwait
xlat
cld
xchg
xchg
pop
ljmp
cmp
cs
nop
ficomps
jmp
test
and
dec
jno
fildl
adc
push
adc
mov
int3
cmp
xor
cmc
inc
dec
xor
jnp
ja
cmpsl
pop
pop
jae
and
add
fldt
jle
cmp
xor
jle
inc
ljmp
jb
stos
xchg
pop
ficomps
lods
ljmp
sub
iret
mov
daa
clc
and
xchg
loop
add
test
xlat
cmc
scas
test
dec
sub
lcall
adc
pushf
adc
pop
inc
mov
das
rcll
loopne
and
mov
das
pop
sbb
adc
xchg
rcll
pop
fidivrs
pushf
in
aam
aad
xor
shll
and
adc
call
sbb
push
or
xor
mov
inc
or
andb
ss
inc
pop
ds
add
jg
add
cmpsb
lcall
push
jns
test
sub
xchg
xchg
jmp
mov
xor
sahf
cmpsl
xchg
jge
jno
js
test
mov
fisttpll
fucom
or
iret
icebp
lods
jge
push
sbb
xchg
cmp
sarb
data16
lret
imul
mov
jecxz
sar
inc
je
xchg
gs
inc
cmpsb
mov
and
mov
icebp
xchg
fisttpll
bound
sub
dec
and
daa
dec
sbb
fwait
icebp
pop
add
int
sbb
inc
or
je
mov
leave
cmp
test
jp
inc
imul
jecxz
sub
adc
cmpsb
pop
rdtsc
pop
xchg
xchg
div
cmpsl
popa
adc
xchg
sbb
imul
add
and
push
push
fdivrs
mov
mov
inc
negl
mov
xor
mov
insl
fwait
sarb
das
jne
inc
out
dec
sbb
adc
or
addb
mov
mov
loop
imul
mov
lock
cmp
and
adc
cmpsb
jbe
cli
mov
mov
std
shl
fcompl
outsl
pop
scas
xchg
movl
ljmp
mov
mov
cmpsb
or
sub
xchg
aas
dec
fistps
inc
inc
addb
cmpsb
adc
and
or
xchg
test
inc
sbb
movsl
shlb
out
or
fsubrl
aas
dec
fisttps
inc
pop
cmpsl
jg
pusha
jns
es
adc
or
cmpsb
mov
cmp
push
xchg
push
sar
ljmp
lods
sub
pusha
daa
adc
mov
dec
and
daa
or
or
negl
push
ss
int3
in
test
add
into
cmpsb
data16
popf
aas
xchg
jge
inc
sub
sbb
dec
mov
push
lock
ja
mov
xor
inc
lods
aaa
add
mov
sti
fdivs
jbe
ja
mov
push
repz
sbb
mov
popa
dec
mov
repz
ss
ljmp
adcl
lods
dec
lea
fst
jp
nop
pop
and
repnz
pop
mov
push
mov
adc
popa
mov
mov
push
push
in
pop
and
pushf
rcr
icebp
insl
repnz
int
add
sub
jnp
stc
lods
fcomps
ljmp
fnsave
sarb
and
jmp
sub
dec
int3
repnz
mov
cli
dec
aad
add
add
xor
cmp
shrb
inc
pusha
repnz
adc
sbb
inc
jmp
xchg
pop
cmp
test
xor
imul
lahf
jnp
stos
orb
pop
pop
mov
cmp
iret
shll
mov
inc
lds
into
pop
xchg
or
ret
mov
push
sub
mov
mov
in
xchg
mov
cli
jbe
jmp
push
lea
pop
xor
push
cmpsl
xchg
in
push
xor
adc
push
mov
push
inc
ds
es
jp
jb
orb
pop
sti
add
test
sub
jg
pop
sti
aaa
push
mov
sub
or
testl
mov
pop
mov
xlat
scas
and
push
aam
jecxz
push
jle
repnz
jmp
mov
lcall
daa
push
prefetch
adc
jecxz
imul
nop
cs
push
mov
inc
icebp
jbe
leave
add
loope
mov
push
repnz
xor
jg
and
sub
push
out
popa
push
pop
sub
movsl
out
jl
pop
aas
aam
inc
cs
in
xchg
lods
push
shrb
inc
jnp
add
dec
pop
or
sub
lods
sbb
jge
xor
mov
cmpsb
leave
jg
fistpll
pop
mov
add
and
pop
mov
pop
scas
cmpsb
bound
mov
sbb
data16
shrl
ret
int3
jne
imul
push
fadds
ljmp
pop
or
push
jle
cld
out
sbb
jmp
sub
mov
roll
test
mov
xor
xchg
jae
xchg
es
pop
inc
push
in
pop
add
aad
jb
adc
in
add
cmp
shl
push
in
mov
dec
xor
push
push
je
pop
xchg
subl
add
or
cld
pop
mov
dec
xor
das
ret
cmp
cmp
stos
lea
cmp
lods
push
push
sub
push
jo
test
fcmovb
xchg
inc
sbb
inc
into
push
mov
les
push
xchg
or
sbb
cmp
insb
in
fcompp
cmp
out
adc
cmp
add
sbb
stos
out
mov
jnp
cmp
jl
sub
jae
mov
test
mov
lods
insb
rclb
ds
xchg
jg
cwtl
adc
pop
add
sarl
add
pop
movsb
mov
push
loope
xchg
pop
lods
or
fsubr
sub
ja
jno
push
in
ss
sub
addb
mov
gs
icebp
mov
jg
roll
cld
mov
push
jb
mov
pop
aaa
dec
aam
mov
push
sbb
jne
xlat
addr16
inc
inc
clc
sbb
add
out
push
xor
lret
jl
lret
scas
inc
xor
mov
pop
cld
ss
lock
push
cmp
into
push
jb
mov
fs
push
inc
pop
add
aaa
push
lds
sub
or
push
sbb
lea
clc
in
insb
jmp
and
lret
mov
aad
or
fadd
inc
popf
pop
shlb
and
gs
mov
mov
das
iret
fimuls
repz
sbb
mov
push
jp
call
stos
mov
adc
frstor
pushl
movsl
dec
lret
int3
xor
push
aam
jecxz
cs
jns
add
xchg
aas
aas
mov
repnz
hlt
sarb
jnp
test
movsl
cltd
lret
cmp
pop
or
cli
je
sbb
cwtl
xlat
sub
repz
jecxz
lret
ret
add
dec
test
call
fldl
mov
adc
dec
fstps
pop
icebp
jg
add
push
popaw
add
add
push
push
out
push
xchg
sub
popf
inc
aam
fsubr
sub
add
fwait
cmp
cmp
dec
cmp
add
jg
push
sbb
dec
sbb
add
in
popf
or
pop
jl
das
inc
aaa
lock
or
mov
jmp
push
fnstenv
outsl
cmp
pop
pop
fisubrl
cmp
lret
xchg
les
fsubl
nop
in
dec
shrb
xor
pop
arpl
and
scas
xlat
inc
daa
push
out
mov
push
movsl
add
inc
fdivrp
lea
test
xchg
add
negb
mov
mov
sub
push
dec
popf
nop
sub
dec
ss
in
iret
xchg
adc
lret
pavgw
push
xlat
and
xchg
mov
inc
add
pop
pop
jno
arpl
mov
out
lret
mov
sub
popa
das
jb
adcl
mulb
dec
jle
inc
mov
dec
push
lcall
loop
jno
mov
pop
and
pop
hlt
lea
mov
fcoms
repz
xchg
xchg
inc
sbb
scas
subl
push
ficoml
mov
mov
jge
scas
mov
mov
adc
adc
aam
movsb
adc
out
sti
and
outsb
sbb
sbb
aas
jno
lahf
stc
inc
aam
jge
xchg
sbb
addr16
jl
inc
push
pop
dec
cmp
cmp
cltd
xor
int3
fsubrs
pushw
call
inc
mov
pop
fistps
mov
cmp
rorb
and
adc
and
sarb
mov
mov
cmp
jo
fadds
cmpb
int3
add
dec
rcrl
cmp
loopne
sub
negl
sti
js
lahf
cld
test
sbb
dec
loop
mov
outsl
fldlg2
stc
inc
sbb
pop
movsl
or
and
push
jp
into
inc
push
xchg
cs
jae
mov
cmp
jle
int
xor
out
sbb
xchg
mov
fbstp
test
ss
mov
mov
push
fwait
add
pop
adcb
fdivl
and
jo
xchg
std
shll
mov
scas
sbb
push
inc
mov
outsl
add
scas
outsb
jecxz
into
addb
addb
in
out
lea
or
mov
rdtsc
in
sub
cs
pop
jecxz
sbb
inc
or
and
es
add
lcall
insl
pop
push
cmp
jmp
or
sbb
inc
mov
dec
mov
sbb
fnstsw
cmp
fld
icebp
mov
out
fimuls
xor
test
rcrb
lods
daa
or
lds
and
xchg
or
addl
xchg
cli
mov
inc
dec
mov
stos
push
daa
cmp
cmp
fxch
mov
outsb
out
jae
cmp
loop
les
scas
or
ret
stc
ret
and
iret
lret
sub
push
sahf
gs
jnp
push
xor
rcll
add
cmp
xchg
mov
out
ret
rclb
dec
adc
nop
mov
sub
inc
cli
add
scas
je
push
pusha
or
sub
jmp
repz
aaa
push
push
outsb
dec
dec
pop
bound
into
into
mov
or
pop
jbe
xor
dec
fcmovbe
jle
jecxz
pop
popf
mov
adc
xor
inc
jnp
xor
xchg
fnsave
xchg
jecxz
push
jecxz
xchg
jg
pushl
push
pushf
jnp
and
hlt
pop
jb
push
xchg
fwait
icebp
push
sbb
sub
hlt
mov
outsb
les
out
or
arpl
sbb
sub
mov
fadds
and
mov
inc
mov
cld
lock
je
pop
scas
mov
mov
jne
and
repnz
cmpsl
nop
repnz
sahf
sub
push
cmp
pop
push
jnp
cmpb
movsb
cmp
dec
rcrb
popa
mov
shll
ja
push
lods
daa
sbb
adc
test
je
fisubrl
incl
xchg
mov
cmpb
dec
jnp
pop
int
inc
push
mov
xchg
dec
and
jne
sbb
into
movsb
or
jns
xchg
scas
lods
mov
iret
add
outsb
pop
in
dec
inc
push
and
aam
test
adc
outsl
jns
loope
mov
xchg
jp
inc
pushfw
and
add
push
bound
sahf
add
jl
xacquire
inc
cmc
mov
xchg
mov
leave
add
ret
pushw
in
and
out
ret
or
loope
xor
pop
divl
mov
cmpsl
fwait
mov
in
aaa
into
push
lcall
push
fsubrl
and
call
iret
lds
cmpsb
sbb
push
dec
xchg
addr16
mov
cmp
aas
lods
push
es
xchg
mov
push
cld
sub
jnp
aas
cltd
mov
pop
popf
cli
pop
addb
or
xor
inc
ds
scas
daa
push
xchg
adc
xlat
std
jg
decl
sar
enter
mov
push
or
xchg
out
cmp
push
dec
cmpsl
in
out
insb
inc
sub
jno
adc
push
shrb
ret
push
xchg
jbe
and
int
loope
mov
dec
std
out
add
sbb
add
cwtl
ss
loopne
movsl
enter
cmpsl
lock
mov
inc
roll
sub
mov
sub
iret
pop
aaa
lcall
lahf
mov
cmpsl
jg
jecxz
add
xor
dec
pusha
jae
push
enter
mov
mov
mov
popa
pop
sbb
xor
out
mov
and
dec
loop
scas
mov
fisttps
jl
add
xlat
mov
mov
push
jge
push
pusha
arpl
sti
test
mov
xchg
add
or
push
stos
arpl
push
or
mov
testb
mov
rcll
das
test
fstps
mov
and
pop
mov
mov
sub
outsb
addb
bound
cmp
insl
sub
cmp
enter
mov
ret
or
ror
nop
xchg
xor
sub
sub
ret
cmp
insb
and
mov
add
mov
and
fisubrl
insb
jnp
loopne
adc
xor
rcll
shl
jp
mov
pop
fistpll
ljmp
pop
jo
in
mov
adc
loope
and
dec
outsb
les
iret
push
clc
scas
and
dec
ret
mov
mov
mov
or
mov
xlat
mov
and
rcr
fcmovne
jmp
xor
push
frstor
inc
xchg
ja
fmuls
push
xor
pop
data16
jne
jmp
filds
andl
adc
mov
mov
sbb
xor
imul
mov
mov
xchg
aaa
push
sti
inc
icebp
mov
or
fwait
lds
popl
pop
mov
cmp
fwait
in
xchg
sub
adc
mov
push
adc
lock
jl
je
adc
std
mov
push
xchg
pop
or
cmc
in
lds
in
adc
inc
sbb
int3
stc
shlb
add
pop
jl
imul
mov
mov
and
jne
and
xor
cli
imul
mov
push
mov
out
jle
mov
ret
push
mov
mov
sarb
mov
aaa
aaa
jnp
ret
sbb
jbe
mov
addl
test
push
mov
mov
cmp
dec
mov
xlat
jp
sti
push
xlat
sti
stos
int3
in
cs
mov
cld
test
lret
repnz
addr16
aad
lds
fidivrl
mov
fisubrl
adc
cmp
jns
pop
std
js
sbb
shrl
mov
pusha
out
scas
lcall
cmpsl
adc
movsb
test
jl
lcall
sub
mov
pop
jecxz
addr16
insb
ret
inc
bound
fs
add
mov
cmp
lea
push
push
inc
push
jno
inc
xlat
sti
inc
js
xor
pop
mov
mov
cmpsb
lods
mov
enter
adc
faddl
loop
mov
jbe
jecxz
push
jge
loop
push
add
arpl
out
add
pop
mov
int
dec
xor
fcompl
cmp
mov
add
insb
daa
iret
fldcw
filds
jge
shr
sarl
and
add
pop
pop
push
incb
into
das
int3
mov
sub
pop
lds
mov
jg
xchg
enter
push
aad
add
xchg
enter
sub
push
rcl
xchg
sahf
popa
pop
mov
adc
mov
xchg
xorb
fbld
arpl
cmovl
mov
mov
cmp
xchg
or
xchg
jl
aaa
cmp
mov
sub
lods
rcl
cmpsl
shlb
imul
outsw
movsb
adc
sub
cmpsl
pop
pushf
call
flds
cltd
pop
loop
jle
daa
mov
xor
lret
jb
outsb
mov
in
adc
fwait
dec
pop
and
pop
push
lcall
daa
cwtl
xor
mov
loope
repz
inc
rol
xchg
inc
pop
or
push
add
outsb
adc
dec
popl
sbb
arpl
jb
push
push
cli
dec
neg
sub
psubusw
sub
inc
fcoml
nop
out
push
mov
mov
sbb
xchg
jnp
sbb
jns
and
lds
dec
shlb
sub
and
push
jecxz
dec
mov
pop
leave
push
cmp
fcmove
jmp
xrelease
inc
rclb
bound
sti
adc
shl
je
pop
and
fs
xor
cmp
call
fdivr
sub
and
jns
jno
sub
mov
addr16
sbb
adc
repnz
dec
pop
lret
xchg
push
fldenv
xor
push
popl
test
out
push
fstl
lock
mov
imul
jg
dec
ja
pop
in
ds
sub
push
push
xchg
mov
dec
test
in
jns
push
and
push
mov
mov
inc
xchg
aad
adc
daa
push
mov
lret
ret
jo
mov
gs
cmc
sub
mov
jmp
cmpl
push
dec
sub
adc
pop
ror
dec
shll
jbe
sbb
sti
xor
xor
dec
out
std
mov
fidivrl
dec
mov
or
or
in
addl
adc
inc
lret
mov
sbb
aaa
adc
adc
shlb
mov
or
mov
ljmp
cmp
xchg
nop
push
inc
xor
call
sub
xchg
jge
popa
cwtl
cmp
loop
loope
shl
jne
mov
mov
dec
or
test
test
out
jo
jle
and
std
repz
fmuls
ja
mov
fistl
aam
jae
jl
push
mov
lods
jmp
js
mov
cltd
jp
xchg
pop
hlt
xor
cmp
and
fidivs
cmp
jmp
hlt
xchg
xor
add
negb
or
jbe
sbb
dec
in
lds
and
sub
push
imul
pop
mov
add
sbb
adc
or
adc
adc
fiaddl
test
jecxz
inc
mov
or
mov
sbb
mov
loop
xchg
sub
or
mov
jo
mov
or
dec
sbb
loopne
xlat
test
mov
pop
inc
scas
jl
xor
push
inc
pop
xor
pop
ss
jecxz
repz
mov
adc
or
movsl
shl
sbb
mov
popa
sub
sbb
push
push
lahf
sub
les
test
aam
call
pop
sub
lret
or
and
push
ret
insl
jae
popf
data16
adc
outsl
pushf
push
test
add
xor
xor
fisubrl
cmpb
insl
or
sub
sbb
insl
out
sbb
out
mov
adc
pop
mov
roll
mov
addr16
arpl
pop
mov
cmp
mov
cmpsb
mov
insl
daa
or
mov
dec
insl
popf
dec
sub
movsl
mov
loope
iret
mov
test
arpl
insl
movsl
pop
mov
incb
fildl
adc
cmpb
in
out
stos
jle
ret
push
les
test
mov
xchg
stos
int3
pushf
into
cmp
and
sub
filds
fsubl
out
lods
sbb
mov
mov
pop
push
out
aaa
or
cltd
cs
bound
int
push
adc
mov
pop
fwait
pop
dec
or
cltd
cld
xor
lods
mov
es
push
adc
test
or
dec
mov
mull
and
outsl
in
dec
mov
cmpsl
out
cmc
mov
cli
mov
mov
xchg
pop
popa
xchg
add
lahf
mov
add
rorl
mov
xchg
fdivl
add
sbb
cmpsb
adc
fldenv
mov
aam
add
jmp
jo
xlat
pop
in
push
icebp
sbb
out
fbld
lret
lret
mov
adc
cmp
mov
jb
xchg
pop
mov
loope
pop
xor
pop
mov
pop
nop
adc
adc
sub
ret
and
bound
dec
jmp
mov
test
enter
cld
xor
rcrl
leave
mov
out
xor
js
pop
rorl
test
das
pop
fstps
jns
sbb
rcrl
add
push
ja
das
mov
adc
or
es
pusha
or
lods
rclb
aam
leave
bound
jo
add
xchg
mov
call
mov
xor
mov
mov
adc
test
pop
call
je
inc
cltd
add
icebp
pushl
mov
in
mov
bound
pop
pop
andl
aaa
pop
lahf
push
sub
pop
cmp
inc
sbb
out
fdivrs
incb
xor
or
inc
dec
insl
dec
dec
and
in
stos
in
jl
and
mov
lods
pop
push
and
ljmp
cmp
stos
xor
jl
and
sbb
ljmp
addr16
mov
out
sti
sbb
push
adc
mov
adc
in
sub
icebp
mov
push
ret
subl
dec
mov
mov
or
hlt
sub
cmp
loope
pop
es
mov
subb
pop
ret
jno
lods
stc
pop
mov
mov
inc
sub
mov
cmpsl
xchg
mov
sub
sar
daa
arpl
test
push
mov
xlat
dec
add
test
fcompl
or
push
xchg
mov
push
jns
mov
out
clc
xorl
and
push
jb
mov
fnstsw
cwtl
repz
enter
mov
and
jecxz
mov
pop
adc
jl
dec
je
scas
iret
xchg
stc
fnsave
outsb
fnstsw
fadds
out
divb
std
cmp
adc
and
xchg
or
dec
add
aam
das
mov
jno
imul
adc
insb
rol
lret
testb
lds
sbb
lods
lds
xchg
test
out
and
adc
mov
scas
arpl
sti
sub
nop
jge
mov
fistpll
imul
outsb
sbbl
inc
aas
loop
sub
xchg
cmp
mov
mov
outsl
hlt
sub
sub
test
es
test
ja
or
mov
dec
dec
pop
pop
pop
cmp
push
fchs
repnz
imul
daa
rcll
ficomps
pop
loop
aas
popf
push
ss
mov
or
les
and
add
mov
push
mov
insl
lock
test
sbb
das
xchg
cmp
stos
add
mov
call
add
cmp
pop
jmp
push
mov
cmc
int
gs
push
xchg
inc
in
xchg
lods
sarb
test
xchg
repz
ret
inc
ljmp
stc
push
test
mov
test
ja
bound
iret
out
test
jmp
mov
testb
pop
or
bound
xor
add
fnstcw
aas
push
insl
je
push
rclb
jns
push
mov
xchg
xor
fbld
mov
repz
inc
sub
gs
push
loope
pop
ficoml
add
cmc
jns
push
out
or
push
scas
fcmovb
hlt
push
mov
or
daa
sti
adc
outsb
sub
icebp
insl
sub
clc
pushl
popf
in
jae
inc
outsb
jmp
jae
aad
xlat
ret
fisubrs
pop
lock
movsl
push
in
or
xchg
shrb
sbb
push
cltd
test
loope
data16
enter
cld
in
push
sbb
xchg
stos
into
sub
sti
les
cld
leave
dec
xchg
adc
movsl
jecxz
test
loope
pushl
adc
divb
pop
fidivs
jno
sbbb
mov
push
data16
add
sub
mov
push
adc
adc
nop
push
dec
pop
pop
insl
in
or
cmp
jle
fs
mov
sbb
nop
rorl
notl
jnp
icebp
aam
scas
pushf
inc
fcoms
jge
push
xchg
dec
arpl
mov
arpl
call
fisubs
xorb
jg
pop
int3
jo
sahf
cmc
sub
scas
ja
sub
jecxz
jmp
roll
jb
in
xchg
lock
or
ds
xor
insl
mov
jno
rorl
jbe
cmpsb
mov
cld
dec
sub
ret
aaa
push
sbb
jno
add
dec
inc
sbb
rcrl
call
pop
movl
daa
mov
push
imul
and
fisttpll
inc
orb
iret
mov
rol
push
lods
nop
push
cmp
mov
inc
mov
rorb
or
mov
in
outsb
sub
mov
add
rorb
int3
ja
jns
scas
sub
arpl
jo
add
pop
fcompl
jns
cmp
inc
xchg
outsl
ljmp
icebp
lret
ret
mov
repz
mov
lret
test
mov
bound
pop
and
or
push
inc
cmpsl
push
pop
aam
movsb
mov
push
xlat
xor
scas
pop
cmp
pop
out
movsb
sbb
icebp
cwtl
xor
inc
xor
les
es
mov
std
xor
daa
fists
add
or
xchg
or
std
inc
xchg
xchg
xchg
dec
ja
test
sti
xchg
into
sbb
adc
inc
arpl
je
add
out
cmpsl
xchg
xor
in
imul
shrb
or
xchg
mov
push
std
or
dec
sbb
xchg
add
adc
in
cmc
pushf
jge
pop
insb
shll
xor
loope
push
cmpsl
je
dec
jno
test
cmp
loope
inc
ret
cltd
push
int3
sbb
fprem
xchg
add
push
out
loope
add
and
fs
pop
xchg
xchg
ret
dec
iret
sub
cmp
daa
mov
and
or
xorl
mov
jg
gs
or
xchg
cwtl
xlat
aad
insb
push
xorl
sbb
and
ret
push
or
out
jmp
sbb
mov
je
xchg
sahf
xor
or
dec
leave
lods
sbb
in
aad
repz
or
aam
fcmovne
aad
and
pop
test
mov
lahf
mov
stos
sub
shll
negb
addb
aaa
mov
stos
mov
int
dec
cmpsl
out
pusha
ret
mov
mov
fcmovu
sub
neg
fcmovnb
mov
add
sbb
xor
xor
inc
xchg
repnz
mov
push
mov
pop
mov
mov
ljmp
es
mov
or
mov
or
repz
inc
xor
push
jg
mov
cmp
mov
lret
fists
pop
mov
jecxz
mov
pop
sarl
mov
inc
stos
add
sub
pop
mov
dec
ds
decb
or
arpl
sub
int
add
inc
popf
mov
mov
aad
in
mov
inc
movsl
mov
jp
jg
fnop
std
das
cmp
outsb
xor
dec
into
and
mov
cmpsb
cmp
std
mov
fs
sbb
adc
mov
inc
cmp
bound
rcll
je
pusha
inc
int3
fsubr
mov
in
outsb
aaa
xchg
push
and
mov
adc
cmpsl
push
ss
mov
cmpsl
xchg
mov
or
outsl
jno
inc
pop
das
cmp
pop
test
in
imul
into
fdivr
push
cmp
out
repnz
jecxz
orb
rcrl
pop
lret
scas
adc
and
cmp
int3
cltd
mov
pop
daa
jmp
add
sbb
std
cmp
and
lahf
fs
leave
push
dec
sub
jb
fcmovnb
leave
sbb
pop
inc
popa
pusha
xchg
pop
add
in
fistpl
fmul
hlt
sbb
incl
lret
negb
mov
push
dec
icebp
aad
fdivrs
or
xchg
insl
es
in
sbb
ret
pop
push
push
cmpsb
in
stos
jns
sbb
xchg
mov
pop
ljmp
sub
add
mov
xchg
rorl
mov
dec
xchg
inc
subb
jae
fsin
jle
mov
pop
push
outsl
aam
in
lcall
push
push
aaa
pop
push
add
pop
mov
fs
ficoml
lret
lcall
jge
add
shr
rcrb
and
adc
shlb
in
jnp
test
lods
subb
xchg
push
xorb
add
mov
fsubrl
insb
repnz
sub
addr16
loope
in
pop
in
andl
push
test
leave
mov
cmp
pop
adc
or
popf
xchg
xchg
stc
out
mov
aad
or
fbld
inc
inc
imul
arpl
mov
in
pop
adc
cld
out
mov
pop
push
inc
fisubs
mov
loope
les
jge
loop
sbb
add
movsl
subl
adc
les
mov
pop
fistpll
or
out
rclb
movsl
or
arpl
fmull
into
sbb
mov
cli
pop
dec
pushf
mov
mov
cs
enter
mov
ja
xchg
ror
pop
outsl
jbe
in
fcompl
xlat
flds
sub
rcr
sub
sbb
and
mov
pop
pop
aad
fsubrl
sub
pop
cmp
sub
dec
rcrb
and
xor
std
pop
or
stos
out
fsubrl
pop
mov
das
lahf
daa
xor
jl
jb
mov
mov
cwtl
shlb
addb
mov
adc
dec
jb
addl
addr16
sarb
movsb
mov
pop
outsb
mov
mov
aaa
mov
cmp
sbb
stc
comiss
xor
scas
das
std
rorb
jp
ja
sub
pop
arpl
test
sbb
mov
lock
mov
jns
cmp
push
movsb
dec
and
addr16
sbb
inc
mov
repnz
or
inc
xor
in
es
jo
je
cltd
outsb
mov
iret
ljmp
add
and
adc
push
fs
mov
lock
pop
aad
lahf
fdivr
mov
enter
jmp
lret
pop
xor
xor
xor
mov
jl
add
outsl
leave
hlt
lods
add
add
ret
jmp
fisubrl
fxch
xor
xor
xchg
lea
adc
rclb
or
sub
jb
sbb
mov
and
aad
add
lahf
add
test
je
jo
lea
mov
cmp
icebp
push
xlat
out
pushl
mov
dec
push
stc
les
popf
adc
loop
into
pop
jmp
push
xchg
mov
sbb
shlb
cmc
shrb
mov
inc
pop
fidivrl
mov
addl
pop
jge
sub
push
pop
and
leave
cmp
jns
pop
fwait
rol
inc
mov
movsb
mov
adc
shlb
mov
fs
test
mov
lock
mov
pop
lcall
scas
movsb
sbb
insl
movsl
mul
cmpsb
dec
testl
or
jae
jge
pop
dec
popf
or
dec
dec
loope
outsw
adcb
out
or
pop
pop
push
xchg
jno
adc
scas
pop
push
ret
ret
mov
test
or
dec
mov
xor
lock
sbb
cmp
mov
clc
xorb
pop
pop
pop
xchg
mov
mov
xor
sti
xchg
pop
fsubrl
and
fiadds
int3
getsec
in
mov
rorb
pop
rolb
out
daa
imul
movsb
add
sbb
or
jge
aad
jg
jp
push
pop
push
sub
ljmp
bound
and
sub
dec
repnz
ss
push
ret
movsl
aas
jmp
jno
daa
pop
jecxz
jge
lods
popa
les
jp
or
lods
lea
cmp
roll
nop
inc
negl
cmpb
in
fnstsw
xor
into
out
xor
mov
cmp
mov
outsl
out
test
cmp
mov
sbb
iret
les
push
mov
decl
or
dec
rcrb
fs
inc
adc
and
cmp
imul
lea
pop
stos
pop
add
nop
sub
decb
xchg
xchg
or
popf
dec
clc
sub
outsl
xor
int
decl
pop
iret
dec
mov
mov
push
add
mov
pop
fbstp
movsb
add
mov
push
cltd
stc
push
push
shlb
push
push
sub
cs
add
mov
outsl
subl
lret
sahf
push
sbb
sti
xchg
mov
xor
cmp
xor
popf
jl
and
movsl
push
sbb
add
cs
cs
imulb
pop
sub
into
mov
outsl
lods
sbb
shrl
cmp
push
cmp
and
gs
or
cmc
or
dec
cld
push
and
push
cmp
mov
sbb
imul
mov
mov
dec
bound
mov
adc
mov
ja
mov
add
sub
dec
pop
fildll
je
fidivl
xchg
dec
gs
adc
add
stc
pop
xor
adc
push
sbb
ljmp
aas
mov
in
mov
inc
iret
or
push
adc
add
xchg
cltd
nop
lret
lret
mov
test
xchg
sbb
adc
mov
clc
cmp
ss
inc
inc
in
test
imul
mov
push
pushl
lret
mov
rol
popf
jl
jmp
cmpsl
shl
gs
mov
mov
repz
cmpb
arpl
pop
push
mov
xchg
mov
pop
ret
gs
fs
ret
mov
vpunpckhwd
cmpsl
pop
inc
mov
aad
ja
push
add
negb
push
push
pop
scas
repz
add
push
and
in
aas
pop
leave
xlat
inc
mov
fwait
or
test
mov
jb
sbb
out
xor
xchg
scas
test
jmp
sub
cltd
lods
jmp
push
in
std
leave
inc
mov
pusha
and
push
jne
xor
je
jae
push
lods
jae
mov
and
mov
pop
mov
pusha
stc
xchg
dec
call
sbb
jbe
divb
pop
mov
pop
dec
sahf
sahf
nop
cld
add
cmp
mov
mov
mov
pop
insb
push
loop
addr16
shl
pop
push
nop
xchg
popa
outsb
shrb
push
push
arpl
out
jo
sbbl
dec
push
aaa
shll
das
jle
iret
pop
mull
mov
hlt
stos
push
ds
jg
sub
test
mov
xor
mov
hlt
aas
xchg
sarl
sbb
adc
mov
add
cmp
mov
pop
inc
outsl
repnz
insb
push
jbe
scas
mov
loop
add
pop
push
mov
pop
push
pop
adc
sub
adc
xchg
fbld
pop
outsl
lods
imul
jae
inc
lret
jmp
mov
mov
xchg
fidivrs
mov
sub
lods
in
es
sub
mov
sar
adc
sbb
cmp
sahf
daa
and
sahf
fs
jns
stc
hlt
mov
push
repnz
sbb
adc
xor
mov
add
lret
xor
adc
jb
shll
or
ja
push
push
jns
lret
pop
aad
and
lcall
cmp
dec
and
cld
bnd
jnp
in
int3
and
sahf
push
pop
in
icebp
lcall
pop
add
repnz
bound
push
sti
add
or
movsb
test
and
push
lcall
xchg
cli
call
mov
sub
ja
xor
adc
mov
cmpsl
or
pop
xor
cmp
mov
lret
jl
cli
outsl
inc
add
inc
adcl
mov
add
and
fistl
cltd
adc
lea
push
outsl
fbld
xor
and
arpl
jnp
enter
push
bound
add
incb
mov
out
ja
mov
pop
push
clc
push
jle
push
jb
inc
jno
das
sub
loope
jl
mov
shll
fdivrl
in
push
adc
int3
push
dec
arpl
cli
cli
inc
lea
cli
lcall
or
cld
ja
dec
addr16
jns
jg
into
sub
fcoml
rorl
mov
data16
roll
lods
enter
mov
mov
ret
insb
push
ljmp
ljmp
mov
fwait
push
mov
in
cmp
hlt
push
adc
out
cld
repz
jmp
popa
sub
dec
stos
add
mov
pushf
mov
and
fwait
xchg
xor
mov
xchg
subl
inc
push
jmp
pop
mov
fs
push
ljmp
out
mov
popa
and
insl
push
xor
inc
xchg
test
push
dec
in
out
mov
btc
add
adc
push
jge
pop
xchg
int3
mov
xor
sbb
lret
sub
or
movsw
mov
jl
push
jle
dec
pop
pop
or
dec
dec
jle
pushf
cmp
sub
into
pop
push
sbb
scas
jne
lock
mov
push
jmp
sbb
jle
js
push
adc
or
xchg
je
adc
add
add
mov
nop
or
xchg
push
gs
test
rcll
push
test
xchg
out
and
xlat
pop
add
jnp
add
insb
push
push
fstpl
jl
sbb
lods
mov
xor
xor
pop
mov
rcrb
pop
cmpsl
sbb
sbb
push
in
add
shlb
fstps
jle
cmp
adc
ror
pop
adc
xchg
mov
aad
popa
push
dec
dec
pop
das
jb
mov
scas
or
inc
sub
cld
in
daa
js
push
sbb
insl
ss
adc
sub
cwtl
mov
pop
or
cmp
pushf
add
ds
sbb
lods
out
ljmp
bound
pop
or
vmovd
cmp
dec
aam
enter
arpl
iret
int3
push
mov
jl
xor
inc
sbb
stc
inc
xlat
andl
aad
cmp
cmp
fcoms
adc
repnz
lods
adc
push
cli
dec
filds
je
push
lret
shrl
sbb
lods
mov
jecxz
sbb
add
jecxz
pop
xor
push
decb
nop
jae
lcall
leave
les
fnsave
clc
das
lcall
stc
push
pop
pop
pinsrw
daa
mov
mov
adc
jo
sbb
repz
inc
mov
aaa
lods
js
imul
insb
mov
mov
inc
xchg
ss
and
rcrl
sbb
cmp
mov
ret
mov
jo
mov
sub
fs
mov
mov
cmp
out
scas
movsb
je
cmp
daa
add
cmp
lahf
and
js
out
inc
sub
ret
pop
pop
and
stos
push
cmp
push
or
rcrl
insl
jno
or
xor
mov
lret
jno
mov
dec
cmp
cli
je
push
ja
mov
sbb
xchg
push
mov
xchg
add
lret
mov
xorb
push
imul
fiaddl
cmp
mov
add
es
jecxz
imul
out
sarl
imul
add
aam
arpl
push
mov
in
xor
adc
push
cmp
jnp
insb
rorb
movsb
push
xchg
enter
bound
xchg
inc
jl
or
out
sub
sti
leavew
test
test
dec
jb
jbe
rcrl
or
add
sbb
pop
test
mov
jne
outsl
stc
add
jb
pusha
pop
lods
roll
lret
inc
inc
push
adc
mov
in
xor
outsl
nop
cmp
int3
mov
xchg
neg
dec
popa
cs
push
xor
sub
rcl
cmp
loop
mov
sarl
ds
xor
dec
lods
or
lock
test
add
loope
pop
testl
mov
push
in
stos
pop
xorb
push
pushf
mov
sti
mov
mov
sbb
adc
jbe
cs
das
mov
xchg
sub
ds
mov
fwait
mov
xor
int3
push
out
ret
lea
push
inc
or
xor
lods
lahf
shrl
lods
cmp
gs
out
mov
jbe
dec
xchg
push
mov
mov
repnz
xchg
dec
or
jno
mov
mov
pop
push
leave
imul
inc
je
ret
add
ja
mov
xchg
dec
sbb
gs
mov
push
js
inc
stos
movsl
stos
xchg
mov
inc
xor
sbb
loop
add
in
mov
clc
stos
repnz
mov
stc
xchg
mov
negb
xor
les
inc
int3
jg
aad
or
xchg
stc
lahf
cs
cmp
out
aas
cmp
cmc
sbb
mov
cld
pop
adc
dec
inc
test
roll
ds
push
mov
jmp
dec
data16
mov
mov
fwait
jo
jo
xchg
push
adc
xor
dec
inc
pop
dec
jns
lock
mov
movsl
aaa
out
gs
mov
scas
ss
stc
loopne
xchg
ret
jmp
push
mov
sbb
jmp
and
adc
push
mulb
pushf
hlt
pushf
out
adc
and
repz
orl
mov
stc
xor
xchg
ficompl
and
fmuls
sbb
lock
jo
add
daa
movsb
mov
scas
sti
and
adc
inc
cmpsl
shll
jmp
mov
push
add
and
or
dec
or
clc
lcall
mov
jmp
mov
fmull
rorb
mov
mov
ret
pushl
xor
pextrw
jne
das
std
out
xchg
gs
movsl
add
out
enter
in
rcll
jge
jns
fs
mov
mov
or
xchg
pop
rclb
xchg
mov
mov
push
pop
push
add
mov
cmp
ss
jnp
sahf
sti
cwtl
push
cmp
les
dec
ljmp
pop
sub
adc
jmp
mull
mov
pop
gs
ja
cmc
imul
sahf
lret
mov
pusha
std
sub
mov
add
mov
and
jg,pt
push
cmp
and
andb
mov
push
std
push
mov
movsl
jnp
lcall
push
imul
leave
jecxz
pop
jp
jmp
rclb
loope
mov
cmpsl
jne
fsts
or
sbb
aaa
inc
adc
push
and
cli
lahf
mov
and
mov
sub
repz
pop
shl
hlt
xchg
and
int
inc
stos
and
push
enter
adc
fsubrl
ja
imul
push
pop
xor
xor
or
push
ljmp
enter
outsb
and
mov
add
popa
cli
inc
inc
je
les
lock
mov
mov
dec
into
push
mov
in
fistl
cmp
jns
pusha
shrl
arpl
dec
xchg
and
add
rcrl
inc
test
scas
int
add
and
cs
xlat
xchg
sub
or
dec
xchg
and
addr16
jne
in
sbb
xchg
jg
nop
nop
icebp
enter
out
sub
jmp
lock
adc
ret
bound
and
xchg
insl
push
push
pop
nop
iret
mov
or
mov
or
scas
sbb
jp
pop
ja
jecxz
pop
int3
push
int3
add
dec
sbb
int3
addl
rclb
call
lds
lahf
push
mov
lcall
in
cmp
mov
dec
daa
jg
arpl
cli
jbe
lret
pushf
and
loope
cmpsb
mov
inc
in
das
lahf
arpl
cld
jb
xor
fwait
sub
mov
xor
and
out
mov
lock
lds
test
hlt
adc
mov
mov
inc
mov
imul
mov
aad
rcrl
bound
mov
sub
mov
xsha256
cmpsb
sarl
testl
pop
lods
stc
xchg
sbb
ljmp
dec
adc
or
aad
jg
insb
or
adc
push
pop
in
mov
dec
aam
in
pop
movsb
int3
scas
nop
cld
mov
sbb
ret
imul
fs
push
ljmp
std
stos
xor
inc
mov
lahf
loop
popf
sbb
movb
and
mov
iret
dec
cwtl
cmp
mov
mov
out
jno
andb
insb
cmp
or
pop
and
inc
inc
fmuls
adc
jb
xchg
and
push
push
sbbb
enter
inc
rolb
mov
or
js
inc
push
insl
loop
outsl
pop
out
xchg
cmp
adc
int
mov
jecxz
mov
ret
cmpsb
in
mov
xchg
popa
cmp
adc
fwait
sub
push
dec
sbb
shlb
faddl
push
sbb
sub
sbb
xlat
mov
das
mov
out
aas
mov
mov
push
push
sbb
fisttpl
xchg
adc
es
cltd
cwtl
push
mov
sub
int3
add
mov
inc
sbb
sbb
mov
jae
daa
cmp
leave
mov
xchg
in
inc
adc
movsl
rcrb
mov
or
cmp
adc
fs
mov
popf
fstl
cs
out
push
loope
sub
xchg
jnp
sbb
je
pop
int3
icebp
jnp
ja
inc
jno
aam
fbstp
pop
add
push
adc
mov
dec
mov
test
sub
push
imul
jl
or
mov
add
mov
adc
les
jb
test
cmpl
inc
push
xchg
add
adc
leave
lea
cld
fisttpll
fdivr
mov
dec
pop
and
mov
into
cmpsl
inc
in
lcall
lret
cmp
icebp
testl
movsl
fdivrl
inc
movsl
stos
in
repnz
mov
sub
test
mov
stc
ss
inc
call
xchg
inc
fsts
out
push
xchg
ret
loope
dec
rolb
in
jle
nop
cmpsl
scas
or
sbb
jecxz
ljmp
inc
xchg
inc
or
mov
stos
popf
cmp
jno
das
in
mull
sub
jmp
test
sub
push
lea
adc
add
insl
out
inc
enter
out
pop
and
sbb
jmp
pushf
insl
sub
mov
pop
loop
cli
cmpsl
ficomps
push
js
cmp
mov
movsb
js
xchg
out
stos
clc
or
lahf
sub
mov
xor
lcall
push
inc
jmp
flds
add
fs
pop
mov
push
and
call
xchg
ret
leave
xor
mov
fnstenv
and
sub
fisubs
sbb
dec
in
sbb
fisubrs
xor
insb
js
cmp
cmp
fs
jae
fistpl
lcall
cmp
inc
pop
push
ss
jne
sahf
mov
cwtl
cltd
or
stos
inc
loope
xchg
in
jmp
adc
test
arpl
pop
mov
jp
jnp
push
add
adc
push
mov
addl
xchg
xor
sbb
pop
movsl
add
in
lcall
ljmp
mov
andb
push
pop
insl
add
and
push
ds
mov
pop
mov
test
dec
push
sahf
xor
push
cwtl
pop
lret
das
inc
and
repz
add
mov
movsb
mov
bound
and
inc
addr16
xor
rclb
imul
fisubl
inc
aaa
cwtl
sub
lds
cwtl
insl
jecxz
jno
adc
mov
das
es
or
mov
jp
fwait
pop
aad
xor
jmp
dec
into
addl
xor
ret
in
dec
repnz
insb
popf
enter
jbe
stc
xchg
cmp
jns
cmp
dec
push
sub
pop
scas
sbb
int
push
sbb
xor
cld
or
or
mov
in
pushl
push
pop
repz
insb
cltd
mov
cli
or
pop
xor
pop
sub
subb
sub
push
loope
jmp
out
xor
dec
popf
test
jbe
data16
fld
mov
mov
ficoml
scas
pushf
arpl
rorl
add
xorl
inc
fs
movl
loope
je
insl
pop
xor
jmp
xchg
cltd
out
sub
stc
sbb
cmpsl
jns
sub
mov
mov
femms
rolb
test
xchg
mov
push
mov
call
ret
bound
addr16
enter
inc
stos
nop
dec
jge
and
xchg
xor
mov
std
loopne
mov
sbb
sub
repnz
test
test
jae
mov
mov
mov
adc
lods
mov
push
mov
xchg
push
lcall
sbbl
pop
int
jno
cmc
cmpb
push
xchg
push
dec
jle
fdivl
test
inc
test
imul
mov
mov
outsb
into
sysenter
add
pushf
push
sbb
xchg
hlt
xlat
adc
jae
inc
xchg
mov
dec
push
leave
insl
and
mov
push
mov
orl
dec
stc
invd
xchg
sti
das
xor
mov
cmpsb
loop
add
sub
cmp
cmc
leave
adc
mov
dec
mov
call
clc
jp
add
xchg
xor
xlat
pusha
imul
sub
pop
mov
push
xchg
push
push
cmc
or
idivl
testb
or
and
add
movsl
push
or
punpckhbw
ret
stc
xlat
jle
and
and
mov
sub
xor
sub
xor
lcall
out
int3
scas
cs
inc
loop
loopne
bnd
shll
cld
in
scas
push
lds
int3
dec
jo
fadd
xor
add
inc
mov
inc
sub
call
andb
addr16
enter
xor
push
xor
movsb
sbb
xchg
mov
and
add
shll
jne
sub
push
cmp
mov
in
ss
aaa
ss
icebp
ret
mov
popf
test
aaa
pop
adc
test
notl
mov
inc
shrb
sbb
sub
xchg
cmpsb
fwait
loope
adc
jnp
movsb
mov
adc
nop
scas
mov
loop
mov
mov
adc
pop
push
jg
test
mov
cs
xor
or
inc
add
loopne
mov
bound
lods
cs
inc
ljmp
mov
imul
fwait
out
xlat
pushf
movsb
pop
incb
fcomps
jg
inc
or
pop
aaa
sbb
dec
mov
cmp
xchg
push
enter
call
fs
cmpsb
addr16
sahf
gs
mov
pop
test
nop
int
cmc
pusha
cmp
fadds
lret
mov
std
xor
stos
adc
test
aaa
mov
add
cmp
mov
lods
imul
jle
lods
jnp
fdivrp
icebp
sub
pop
cmp
sub
xchg
clc
jge
fisubrs
ret
dec
stc
shlb
shrl
adc
loopne
adc
cld
dec
or
out
sub
insl
sbb
or
repz
push
jmp
shlb
sbb
lret
iret
cmp
movsl
xor
jno
mov
cmp
xchg
fcomps
add
pop
jge
aam
jbe
cmc
shlb
or
movsb
fcomp
jo
mov
jle
lret
fs
jbe
jbe
loope
rclb
rcll
movaps
cmp
test
mov
lods
lock
push
daa
add
bound
cmp
dec
xchg
lcall
in
dec
jge
push
jmp
outsb
mov
or
sti
sub
push
pop
pop
jg
inc
ljmp
stos
fxch
and
mov
push
and
mov
pop
cmp
js
jnp
xchg
xchg
mov
dec
lret
cli
cmp
dec
sub
pop
stos
in
xchg
adc
mov
mov
dec
cs
cli
imul
add
or
imulb
sbb
subb
sbb
xchg
push
sub
loope
ja
incl
shl
inc
cmp
movsl
pop
mov
xlat
icebp
jecxz
fidivrl
mov
sbb
repz
iret
mov
gs
js
sti
sbb
ss
stos
iret
aad
ret
xchg
leave
orl
jnp
push
popf
fsubs
pop
jae
dec
sbb
shll
mov
inc
xor
test
mov
mov
mov
and
jo
jl
xchg
xor
pop
repz
fldenv
pop
xchg
mov
cld
je
in
out
movl
dec
or
push
ret
add
out
dec
sub
notl
add
outsl
xchg
imul
xor
sbb
jecxz
push
ss
cmpsl
fmul
dec
lahf
pop
loop
scas
popa
mov
pop
cwtl
stc
pop
xchg
icebp
lret
repz
sti
and
add
cwtl
mov
cmp
loopne
test
das
xchg
dec
jp
mov
jnp
or
ds
dec
mov
mov
jp
insb
negl
gs
lahf
into
jg
dec
iret
loopne
icebp
xchg
jle
push
shl
inc
filds
dec
sub
xchg
xor
jp
mov
fimull
jbe
nop
cmp
fnstenv
sarl
popaw
push
cltd
xor
imul
mov
xor
inc
mov
roll
enter
dec
push
aam
rolb
or
aaa
jns
xchg
sti
outsb
inc
sbbl
xor
adc
shrl
add
rol
es
adc
mov
mov
or
jge
add
cmpsb
out
pop
jle
mov
mov
je
push
jns
xchg
push
mov
or
mov
mov
mov
cmp
insb
adc
xor
sarb
int3
inc
lret
dec
add
adc
in
dec
sbb
mov
inc
add
pop
sub
sub
push
pusha
pop
cmp
mov
mov
dec
fildl
jg
and
or
push
fwait
xor
imul
loop
out
cmpl
sbb
and
dec
cld
sti
sub
adc
and
push
arpl
sub
jmp
lahf
mov
mov
mov
xor
fwait
notb
inc
mov
scas
fcoms
decl
loop
cmpsb
pop
jno
mov
ss
repnz
aaa
and
les
stos
pop
cmp
xor
loop
popa
xor
das
test
pop
jae
scas
fidivs
jge
or
cli
fnstsw
inc
push
mov
in
fucomp
lods
div
pop
jns
shrl
inc
lods
xchg
xchg
loop
add
jns
shrl
pop
vpackssdw
clc
loopne
mov
sbb
push
jle
xchg
data16
lods
push
pop
push
out
enter
or
add
cmp
test
push
dec
pop
mov
loopne
mov
jle
fcoms
fmull
movsl
rorb
mov
lods
mov
adc
std
adc
fxtract
lds
fnstsw
cmp
cld
or
dec
pop
pop
push
dec
sbb
test
fnstcw
jne
cmpsl
repnz
shll
test
pop
push
jl
lret
sub
inc
pop
int3
fucom
jo
test
xchg
xchg
pop
push
pop
popf
pop
adc
mov
xchg
jno
xlat
push
sarl
inc
xor
pusha
push
jnp
jnp
lea
push
add
xor
and
sysexit
push
out
out
repz
pop
xchg
mov
pop
sti
dec
sbb
cld
xchg
or
lahf
fcomi
cwtl
sti
movsl
jnp
cltd
ds
cli
cmp
jae
test
adc
jmp
cmc
xorl
mov
out
test
push
sbb
push
ret
sarb
out
push
adc
mov
insb
test
sti
stos
pop
daa
cmc
jae
addr16
rcrl
mov
hlt
std
pop
and
dec
fdivr
xor
xor
cmp
jl
lahf
mov
shll
inc
xor
push
xor
dec
pop
movsb
and
xor
les
loope
jge
testb
fucomp
jb
add
aad
mov
pop
jl
lock
jae
cmp
xchg
sbb
into
lods
and
add
sbb
loop
pop
popf
mov
out
daa
js
into
xor
jae
mov
test
mov
sub
dec
lds
imul
cld
jg
dec
and
stos
push
aaa
lret
mov
adc
scas
inc
mov
fldcw
jle
loopne
push
pop
divl
inc
sub
fnstcw
jnp
push
cld
pop
popa
ffree
mov
add
jmp
cmp
ret
loop
lahf
hlt
int
and
test
jl
inc
jae
cmpsl
sbb
unpcklps
fstps
pop
insb
or
ss
mov
loopne
lea
aaa
dec
push
xor
cmpsb
pop
dec
insb
dec
pushf
pop
ficompl
and
cmp
fisttps
mov
shl
scas
push
mov
bound
imul
inc
xchg
lods
cmc
fcmovnbe
mov
mov
add
pop
add
nop
fsub
into
stos
inc
ss
push
sbb
xchg
cltd
push
lds
xor
and
data16
lret
sti
cli
popa
jl
sbb
xchg
inc
leave
sbb
idivb
das
inc
xchg
adc
daa
lods
mov
pop
mov
fcmovnb
and
aas
out
mov
jp
lahf
pop
lods
ret
call
ret
gs
add
or
jne
in
sub
shl
imul
jge
hlt
nop
jae
cmc
sub
mov
mov
mov
nop
sbb
repz
rcr
das
stos
adc
ss
push
sub
test
in
iret
sbbb
inc
pop
inc
cli
xor
push
inc
in
xchg
mov
inc
fistpll
sub
divl
mov
sbb
imul
orl
pushf
and
sbb
push
lahf
push
test
sub
mov
shlb
fidivrs
dec
iret
xor
ret
dec
pop
sub
stos
bound
add
notl
in
inc
xchg
adc
sbb
jnp
fidivl
loope
test
insb
cmp
lahf
repz
xor
pusha
jg
das
int3
sahf
test
jns
hlt
scas
das
xor
mov
stos
mov
clc
in
les
popf
xor
pop
mov
xlat
mov
pop
or
lret
pop
cltd
mov
fmuls
insb
cs
stos
inc
popf
add
aaa
test
arpl
out
and
pop
and
fldcw
pop
into
outsb
adc
fdivrs
lods
push
push
aas
mov
or
scas
lea
dec
gs
push
scas
mov
mov
data16
cwtl
test
stc
ficoml
lds
push
rcrl
aad
ss
out
jle
fdivl
and
and
cmpsl
test
mov
inc
dec
pop
adc
mov
or
insb
push
or
mov
bound
dec
pop
cltd
negb
push
mov
push
int3
push
sbb
js
cli
or
mov
or
fwait
jp
xchg
or
dec
jb
push
fidivrs
fcomp
fdivl
push
cmp
or
add
xchg
xor
or
adc
enter
pop
mov
mov
pop
mov
mov
push
jnp
and
mov
mov
xor
sub
movb
sub
dec
mov
mov
lock
cmp
fldl
insb
add
add
loop
cld
call
mov
ja
xlat
or
fstl
xlat
mov
ljmp
adc
sub
aad
xchg
aam
mov
push
leave
sub
aas
xchg
cmpsl
and
and
call
dec
icebp
mov
fists
out
mov
jbe
outsl
mov
inc
or
xchg
pop
add
sarb
sbb
mov
das
imul
jp
add
push
and
repnz
ret
repz
cmp
adc
mov
hlt
or
idivl
xor
fisubrl
xor
out
mov
fimull
push
repz
in
out
cmp
jl
adc
data16
pop
adc
adc
aaa
sub
jb
xchg
sub
ljmp
daa
lcall
rorl
xor
add
insb
sbb
fiaddl
mov
xor
mov
out
insl
mov
jmp
dec
repnz
mov
mov
ljmp
enter
jo
sbb
sti
cld
dec
stos
int3
mov
jns
add
int
stos
dec
call
dec
cmp
into
or
mov
orl
aas
mov
sub
adc
mov
push
je
sbb
add
or
lahf
cmp
enter
mov
loopne
cmp
push
push
and
cld
pusha
push
addr16
mov
and
decl
aaa
aaa
jo
xchg
jle
xchg
popa
fcmovbe
jecxz
lods
jmp
mov
inc
rcl
fildl
pushf
cmp
adc
mov
mov
mov
shrb
icebp
cmp
push
int
ret
jae
insl
push
dec
cmp
scas
test
jp
fmull
popa
jl
mov
mov
push
out
sub
push
cmp
jnp
lods
add
lods
inc
rcrb
inc
inc
test
push
aam
cmp
mov
ds
lds
lcall
mov
sbb
fdivr
fsubp
xchg
loope
sbb
fidivl
decl
std
inc
sub
cmp
ja
les
xchg
cli
and
lds
je
mov
mov
mov
cmp
stos
pop
xlat
das
or
outsl
or
mov
in
pop
pop
ss
orb
ret
mov
in
cmp
xchg
jb
cmp
pop
xor
gs
sti
int3
call
aaa
arpl
pminub
pop
sub
cmp
imul
jne
clc
lods
xchg
push
mov
pop
test
mov
je
lock
in
stc
imul
test
outsb
loope
or
fs
xchg
mov
jmp
jge
jbe
sub
sub
dec
nop
and
clc
lret
lahf
ret
xor
sbb
cmp
xchg
add
adc
shrl
cmp
push
sub
add
dec
add
mov
out
in
xchg
int
cs
cmpsb
push
and
pop
pop
in
mov
jp
sbb
repnz
and
cmc
pop
dec
inc
push
mov
lcall
adcl
adc
jg
dec
arpl
lods
mov
xchg
and
into
jmp
sbb
punpckhwd
sahf
xchg
push
adc
addr16
gs
je
ds
jae
sbb
xchg
mov
aad
sub
xchg
pop
call
xor
and
adc
popa
pop
inc
mov
leave
mov
lods
test
int3
pop
fstpl
pop
push
dec
xor
icebp
mov
lahf
loope
fwait
inc
repnz
or
int3
push
ljmp
mov
and
sbb
shll
jecxz
dec
push
test
push
pop
stc
stc
dec
xchg
push
mov
xchg
xchg
pop
mov
jecxz
lea
je
fstps
mov
mov
fisttpll
and
mov
xlat
int
xor
outsl
int
dec
sub
push
in
adc
mov
adc
mov
cmp
lods
fmulp
stos
clc
or
cltd
aad
cmpsb
sbb
jns
sbb
pop
lock
shlb
test
xchg
in
rorl
imull
enter
xchg
outsb
jbe
rorb
dec
shlb
stos
sub
xchg
dec
and
or
inc
out
jmp
jp
inc
push
mov
test
jecxz
lock
testb
nop
and
roll
mov
aaa
jl
xor
mov
inc
mov
push
cmp
insb
mov
and
xchg
xor
fdivrl
sbb
hlt
adc
mov
adc
lea
pop
push
xchg
mov
test
and
sti
data16
in
push
mov
and
jne
sbb
fbld
add
cmp
movsl
fstpt
ljmp
mov
inc
mov
fisubs
iret
shll
xor
negb
lods
subb
or
fdivr
inc
lcall
rcrl
jg
mov
xchg
inc
loopne
rcrb
add
test
hlt
add
inc
mov
jnp
jle
in
mov
divl
inc
xor
test
xchg
shlb
addr16
clc
mov
or
pop
in
xchg
stos
pushf
jmp
repnz
ds
cmp
pop
sub
repnz
mov
enter
xchg
cld
or
cmpsb
hlt
fcmovnu
aas
fsts
and
mov
xor
lock
lods
scas
mov
lock
pop
test
aaa
hlt
nop
loop
mov
cmp
fisttpl
dec
xor
cltd
xchg
loop
dec
jnp
daa
pop
add
cmp
xchg
sbb
sarb
mov
dec
fcomps
sbb
lods
fisttps
mov
aas
sub
cmp
or
fsubrp
add
dec
pop
mov
xchg
insl
mov
mov
xchg
out
xorb
mov
add
rcrb
lds
and
test
pop
or
and
xchg
cmpsb
jecxz
cld
insb
out
xorb
pop
or
jne
xchg
mov
pusha
dec
out
inc
imul
lods
pop
insl
cld
xor
or
pop
pop
xor
jns
fcmovne
pushf
sti
incb
ss
or
or
daa
add
fsubs
pushf
iret
mov
enter
clc
shr
and
nop
mov
xlat
or
inc
lahf
jbe
out
nop
cmp
jmp
jbe
movsl
cmp
icebp
nop
sub
mov
and
dec
imul
jmp
push
call
dec
mov
ljmp
cmp
xor
or
ja
and
mov
mov
and
or
gs
xchg
in
mov
fwait
cltd
fcomps
pusha
adc
mov
outsl
or
cltd
in
mov
scas
aad
mov
cmpsl
ds
cltd
sbb
dec
jno
repnz
or
out
lahf
mov
rorb
mov
repz
rcrl
mov
ja
jecxz
jge
push
xchg
xchg
fisttpll
cwtl
or
rcr
and
dec
in
imul
mov
enterw
and
and
mov
popf
jg
jp
insb
pop
lret
push
mov
das
cmp
das
dec
inc
outsl
push
jmp
lahf
push
or
cwtl
stc
jp
mov
fcomps
cmp
push
inc
xchg
enter
hlt
pop
fiaddl
icebp
add
mov
mov
leave
jae
sti
lret
adc
adc
mov
fwait
cwtl
rclb
xchg
leave
mov
xchg
xorl
shrb
aad
bnd
dec
inc
or
mov
jg
fdivrl
loope
sahf
adc
and
cwtl
pop
pop
jnp
cmp
test
adc
fdivrs
sbb
xor
mov
lcall
and
popf
mov
ds
jno
dec
sbb
jb
insb
popf
andb
hlt
dec
or
lret
push
lret
or
jmp
pop
adc
inc
inc
xchg
clc
cmp
jl
jb
lret
mov
add
call
mov
sbb
pusha
test
loopne
inc
sbb
jp
dec
mov
cmpl
jecxz
popa
sub
js
add
test
add
sarb
dec
aam
jmp
and
repnz
or
hlt
shl
jns
shlb
jmp
mov
pop
rolb
leave
dec
cmp
outsl
movsb
repnz
inc
pop
orl
and
cld
repz
lea
pop
dec
cmpsb
out
push
leave
sbb
ja
addr16
mov
std
inc
imul
sahf
std
cli
adc
cs
cmp
leave
fisubl
sub
dec
add
push
cmp
pushf
pop
mov
insl
add
xchg
and
imul
vphsubdq
lret
pop
sar
pusha
popa
in
fidivs
sbb
push
mov
cmpsb
mov
add
outsb
mov
loop
mov
adc
cmpsb
orb
popf
mov
xlat
cmp
insl
pop
int
insb
test
sbb
sbb
pop
aam
mov
dec
out
push
xchg
stos
frstor
push
xchg
lahf
mov
lret
loope
mov
ret
xor
jne
stc
bound
push
xchg
sbb
pop
xor
imul
adc
fs
add
sbb
adc
xchg
sub
flds
popf
jecxz
jbe
icebp
cmp
mov
orb
ficompl
and
mov
stc
xor
fucompp
test
jl
clc
mov
jg
or
test
mov
out
mov
sbb
mov
cmp
mov
lods
dec
popa
lds
push
aaa
jb
sub
cmpsb
dec
inc
je,pn
in
daa
cmp
xchg
pop
mov
lds
in
imul
add
out
jne
aaa
inc
cmp
sub
xor
cmp
xchg
xchg
insl
pop
sub
test
arpl
and
and
test
in
aam
call
push
mov
pushf
mov
pop
mov
out
lret
insb
add
js
popl
push
scas
adc
cld
add
jp
xchg
sbb
push
loope
jb
ret
lock
add
popf
dec
xchg
enter
inc
xor
loopne
adc
cli
adc
insb
xor
mov
lods
add
jg
sahf
inc
push
mov
imul
xor
mov
jmp
mov
outsl
jecxz
cmc
pop
jne
test
inc
test
cwtl
hlt
inc
lods
out
xor
pop
popa
mov
rclb
test
push
cmp
out
dec
xlat
mov
fsubs
scas
cs
cmpsl
loop
and
cltd
xor
sub
loope
or
xchg
in
pop
nop
popa
shrb
sub
mov
jb
cmp
aad
push
fwait
pop
adc
out
xor
icebp
adc
jmp
push
pop
or
xlat
sub
jnp
imul
movsl
mov
div
push
pop
loope
test
fstps
xor
lahf
fs
pop
xlat
xchg
test
ja
xor
adc
daa
xor
leave
sbb
cli
cmpsl
pop
stos
mov
mov
sbb
jp
nop
xchg
ss
sahf
leave
decb
xlat
std
rorb
cmpsb
cmpsb
mov
iret
or
cli
icebp
gs
stc
mov
dec
addr16
xor
cld
lret
test
xchg
sub
or
sbb
fcompl
fistps
sbbl
rol
pop
sub
xchg
or
jno
lret
fildl
dec
call
in
adc
and
das
cs
jnp
cmp
push
lods
test
mov
loopne
std
jg
push
fdivp
movsl
push
jmp
loop
cmc
mov
insb
mov
fcoml
data16
stos
in
test
fs
adc
sbb
test
xor
dec
repnz
int3
dec
cmp
adc
cmpsl
pop
gs
jl
out
into
loope
or
outsl
xchg
std
jnp
call
sub
int3
ja
int3
cmpsb
and
xchg
mov
arpl
int
jnp
xchg
sbb
jge,pn
int3
pop
push
cmc
push
adc
mov
jo
inc
ja
call
xchg
clc
sti
in
push
mov
lahf
call
sahf
dec
roll
sti
cmp
dec
out
sub
scas
push
std
ret
cmp
hlt
fnstcw
xchg
mov
ja
push
fisttpl
and
add
jg
leave
cmp
mov
mov
insl
jg
xchg
sub
aaa
divl
iret
mov
inc
mov
push
cmp
call
and
and
ljmp
jge
shll
push
cmpsb
pop
leave
xchg
lahf
jne
test
or
xor
and
dec
aaa
mov
inc
mov
mov
fsubs
jbe
cmpsl
inc
sahf
and
inc
mov
or
adc
and
cltd
mov
xchg
dec
cltd
or
mov
inc
adc
fcomps
xchg
sub
add
out
rorb
mov
aam
mov
iret
cwtl
outsb
lret
sbb
or
fwait
mov
jae
lds
enter
repz
sbb
mov
add
pop
pop
repz
push
dec
pop
inc
lret
add
addr16
cld
or
cs
mov
mov
jns
dec
pop
mov
jb
pushf
lods
push
outsb
mov
mov
cwtl
jmp
or
ret
push
inc
mov
out
out
shlb
mov
jmp
adc
jmp
lea
or
and
leave
sbb
punpckldq
out
in
jo
jg
out
mov
mov
das
andl
xor
xor
das
inc
cmpsl
add
adc
addr16
jae
leave
sbbb
inc
inc
addr16
lahf
add
pop
rcr
pop
cltd
dec
pop
jne
jne
mov
xchg
pop
push
sub
mov
dec
mov
xchg
xchg
jle
movb
call
out
sbb
dec
int
aam
icebp
or
movsb
inc
jp
stos
lods
or
stc
movsl
pop
jge
dec
add
dec
enter
push
jg
push
mov
lcall
scas
mov
push
pop
fsubl
andl
cmp
sti
dec
sbb
jno
jne
jne
popf
movsl
cli
push
xchg
mov
sbbb
or
push
push
int
adc
xchg
aam
mov
jle
imul
inc
push
push
cltd
xlat
rcl
adc
pop
loopne
dec
inc
push
jl
xchg
push
inc
fistps
ljmp
or
sub
sub
inc
mov
inc
ljmp
lahf
sbb
or
cmp
mov
inc
mov
mov
loop
xor
das
mov
arpl
mov
sbb
push
pushf
scas
mov
lods
loopne
mov
ds
fs
negb
sub
dec
je
xor
mov
repz
out
xorl
inc
icebp
ds
mov
pop
mov
sub
push
fs
lret
sbb
outsl
cli
stos
dec
in
fidivrl
and
or
add
int
testb
sub
pop
adc
rcll
push
mov
jb
shrl
fwait
out
push
outsl
sbb
nop
out
test
cli
cmp
les
inc
sahf
enter
mov
test
mov
hlt
into
mov
lea
add
lods
pop
push
cmpsl
jae
idivl
or
xchg
mov
mov
mov
ret
push
cmp
inc
xchg
and
dec
cmp
inc
movsl
add
jno
fmul
xor
push
notl
leave
xchg
sub
lret
inc
pop
scas
daa
sub
sbb
cmp
jle
pop
mov
jae
jle
push
sub
or
add
push
ja
fnstenv
adc
inc
js
shll
jo
in
sub
lea
xor
sub
leave
jge
test
roll
je
or
pop
sub
and
mov
xchg
inc
and
lret
nop
int3
clc
and
mov
repz
mov
in
cmp
cld
jb
mov
pop
pop
jns
int3
cmp
push
test
mov
push
in
fsubl
ret
jg
stc
add
jle
cmpsb
in
movsl
aaa
cltd
out
repz
mov
xor
push
dec
inc
mov
out
cmpsl
inc
cmpsl
mov
pop
xor
xchg
add
lock
add
add
pop
enter
lret
sti
dec
dec
fnstenv
sub
lret
test
mov
fs
inc
xchg
daa
pop
mov
pusha
pop
jnp
xchg
push
cmpsb
push
imul
test
mov
std
mov
nop
jg
inc
gs
lret
mov
les
in
inc
jo
mov
sub
push
je
movsb
mov
std
and
pop
sub
jl
jecxz
pop
jge
aam
cmp
psllw
sbb
jbe
fmull
lcall
loop
jp
dec
sbb
mov
pushf
pop
hlt
aad
dec
sbb
shll
loopne
fsubl
pusha
lds
aad
test
add
fistpll
dec
orb
pop
inc
ficoms
cld
push
je
aad
lea
stos
dec
jge
adc
pop
mov
rclb
rorl
add
jne
subl
and
mov
lahf
loope
pop
mov
sbb
repnz
mov
cmp
aam
push
int3
pop
cmpsl
jbe
loop
into
in
bound
add
xor
xlat
xchg
mov
popf
inc
add
cmp
xchg
test
test
movsb
mov
out
or
xor
test
jg
dec
stos
add
cvtps2pi
or
std
mov
mov
dec
mov
outsb
outsb
mov
cltd
sub
mov
in
cmpsb
sbb
js
jno
leave
mov
fwait
shrl
add
cmpsb
imul
xor
jg
mov
or
add
adc
sti
mov
xorl
roll
cmp
aam
add
jns
lahf
addl
sub
in
mov
cmc
jnp
add
shll
scas
shlb
dec
imul
add
sbb
jae
lcall
dec
insl
gs
rolb
or
cmpsl
push
pusha
addr16
hlt
and
aam
cld
call
sarl
mov
mov
add
add
mov
ret
in
inc
and
outsl
pusha
hlt
fstp
lret
or
cmp
jbe
or
test
dec
roll
mov
nop
xchg
movsl
cmp
iret
jg
jmp
mov
scas
leave
iret
imul
pop
adc
mov
repnz
mov
pop
fisubl
nop
rcl
sbb
pop
cmpsl
mov
sbb
popf
sub
testl
inc
loopne
xor
xor
inc
iret
aam
sbb
cltd
cwtl
loope
imul
mov
sti
mov
repz
in
xchg
rcrl
jle
imul
xchg
push
xchg
lcall
aas
sbb
sahf
fldl
sbb
in
xor
iret
push
stos
inc
aad
lret
xlat
sahf
out
popf
and
or
mov
adc
repnz
adc
push
dec
push
jae
jl
cmc
insb
push
cmc
or
cwtl
ret
mov
lods
sub
imul
adc
test
push
imul
dec
inc
xchg
data16
cmp
divb
inc
je
push
inc
popa
mov
inc
cmp
mov
jg
enter
test
repz
mov
sbb
sar
lret
pushf
mov
mov
pop
test
jb
xor
fs
fsubr
shl
mov
mov
pop
cld
shl
test
xorb
cmp
ret
filds
lock
cwtl
inc
xor
jbe
adc
cs
pop
lret
call
dec
adc
mov
rolb
xor
jae
mov
std
sub
dec
scas
lods
sbb
out
lods
pop
sbb
insl
xchg
push
mov
cmpsb
adc
jnp
repz
repnz
pusha
mov
lcall
mov
lock
jae
inc
fwait
xchg
add
sbb
cmp
adc
clc
test
jecxz
mov
daa
aam
pop
or
mov
mov
repnz
jne
cmp
sub
inc
int3
sub
std
js
pop
xchg
call
or
loop
cmp
add
imul
test
jns
mov
insl
push
push
jecxz
mov
lahf
sahf
sub
inc
adc
outsb
sbb
call
shlb
jg
insl
sti
jbe
jge
add
push
mov
jno
xchg
add
daa
int
jp
pop
cmp
xor
sbb
jae
pop
daa
aaa
sub
add
mov
lods
bound
sub
jmp
movsl
mov
xchg
jp
loope
fnsave
sbb
push
add
mov
pop
out
gs
test
loope
push
xor
iret
dec
popa
scas
cmp
test
cmpsb
jmp
outsl
mov
bound
cmp
dec
mov
mov
out
lea
icebp
scas
add
cmpsl
pop
ret
cld
cmc
sbb
xchg
cmpsb
jns
aad
fmulp
mov
jmp
cmp
lahf
push
xchg
xor
cli
loope
push
in
adc
pop
ja
mov
adc
stc
dec
cld
mov
cmpl
repnz
sub
imul
clc
ret
xchg
ljmp
push
and
jp
mov
jb
rolb
cmpsb
stos
mov
shrb
cmp
jbe
jb
dec
mov
insb
popa
sbb
mov
test
mov
mov
sahf
jp
rcll
data16
scas
xor
pop
xchg
and
ret
cmp
pop
add
and
fdivp
push
daa
sbb
or
std
sbb
cs
jmp
mov
push
repz
push
add
stos
push
inc
mov
popa
sub
leave
scas
mov
pushf
pushf
stos
cmp
or
lret
lret
xor
xor
ljmp
and
xor
dec
or
lcall
dec
fcomp
fcoml
test
mov
push
push
jle
sahf
jns
adc
pop
in
sahf
lock
faddl
jle
shr
test
ret
lret
movsb
popf
push
pop
xor
lds
inc
add
xchg
jno
fidivrs
ja
lea
mov
mov
dec
pop
fcompp
dec
repz
dec
jecxz
jecxz
lea
mov
jmp
inc
scas
scas
lods
mov
lcall
aaa
into
aas
xchg
pushf
and
adc
dec
sti
aad
adc
dec
dec
adc
lods
cwtl
loopne
pop
pop
cmpsb
popl
cli
popa
lods
dec
jb
sub
cmc
stos
dec
into
push
cmp
orb
xlat
icebp
jbe
dec
sbb
xor
shrl
std
jo
sub
inc
lds
mov
push
inc
mov
out
push
add
data16
add
ficoml
loope
mov
pop
lahf
stc
jbe
push
inc
stc
insl
xor
xchg
fldl2e
cmp
fwait
lret
cmc
sub
mov
pusha
inc
mov
lea
sarb
inc
push
cmp
je
push
push
bound
jns
or
xchg
xor
mov
push
and
in
mov
dec
psrlq
jbe
cmp
jo
js
cmp
add
sub
mov
aas
fnstsw
outsl
inc
fs
xor
lods
test
aaa
scas
sbb
jnp
inc
mov
pop
or
in
push
in
lahf
cld
jb
pop
stos
sahf
add
aad
mov
out
fsubrs
jp
enter
in
sub
jge
pop
insl
ss
inc
xor
pop
aaa
xchg
sbb
dec
sub
fucomi
sub
jo
hlt
aad
aam
in
cld
icebp
int3
lcall
mov
xor
rolb
movsb
ret
jae
adc
rolb
shlb
nop
cmp
push
inc
ljmp
dec
call
mov
xor
arpl
mov
lahf
mov
fistl
pop
js
test
jo
movsb
pop
jo
add
adc
fidivs
pop
inc
ret
insb
push
sbb
mov
push
insb
push
rolb
jmp
insb
mov
not
dec
sbb
rorl
std
xchg
fistpl
clc
aas
int3
sbb
jp
add
imul
add
pop
sbb
sub
insb
cmc
jp
add
add
push
fildll
lock
jbe
lods
loopne
iret
jmp
lea
jmp
fs
jbe
cmpsb
sbb
addb
loope
movl
test
iret
xchg
pusha
sahf
sub
pop
loopne
outsl
shrb
iret
stc
cmp
cli
inc
shll
pushf
push
and
in
outsb
sub
jne
fidivrl
mov
mov
out
out
xor
pop
push
fdivs
je
stos
xor
repz
cmp
cmp
xchg
call
or
add
jl
sahf
cs
jae
mov
and
mov
int
xchg
dec
call
imul
mov
mov
lcall
xchg
sar
arpl
xchg
in
test
sub
mov
lea
rcrb
inc
imul
sub
push
shll
rorl
ror
dec
mov
add
or
adcb
dec
mov
out
mov
scas
cmc
xor
shr
iret
jmp
sub
mov
test
xchg
mov
xchg
test
mov
dec
pop
stc
xlat
cmc
and
out
int
add
sbb
pop
jbe
sbb
nop
test
push
jne
loop
cmp
jmp
xchg
jecxz
jnp
or
cmovno
ds
testl
and
mov
xor
jb
pushf
cli
lret
fisubl
rcr
xchg
mov
dec
dec
cmp
addl
shr
mov
sub
xchg
or
mov
add
mov
mov
repnz
movsl
cmp
cmp
push
adc
xchg
pop
xchg
pusha
repnz
imul
mov
mov
out
scas
xor
sub
rorb
sbb
in
xchg
lea
and
sub
aaa
dec
mov
mov
dec
push
das
ja
fsubp
xor
out
dec
idiv
cmp
icebp
lods
add
mov
or
bound
jle
out
lock
xlat
js
pop
jl
pop
jmp
pop
dec
xor
cmc
mov
xor
sbb
adc
idiv
mov
and
subb
imul
jl
inc
xchg
inc
or
outsb
aas
push
xchg
xchg
inc
xor
cmc
cmpsl
pop
pop
cld
icebp
dec
inc
stos
nop
cli
imul
xchg
out
push
or
incb
fs
orb
call
or
mov
xchg
jp
adc
cwtl
addb
dec
inc
adc
pop
and
das
cli
aas
push
jae
aaa
jb
in
push
pop
xor
adc
mov
inc
dec
hlt
dec
xchg
cmp
into
xchg
mov
sbb
fiadds
fmul
xchg
pop
adc
cmp
cmpsl
test
lcall
mov
mov
and
adc
loope
adc
jg
int
ja
lods
insl
fisubrl
mov
mov
popa
dec
cmp
leave
mov
xor
lret
xlat
sbb
negl
jns
addl
aad
enter
and
in
addr16
pop
cmpsb
jae
fists
movsb
in
rep
push
ds
cli
rcr
and
or
pop
and
mov
aad
call
pushf
pop
mov
loope
or
lret
je
es
or
push
push
pop
rcrl
inc
aas
cmp
gs
adc
cmp
icebp
popf
jns
rorl
subb
fsubrl
mov
sub
pop
test
scas
sub
aaa
sub
fs
pop
cmp
scas
bound
fcom
sub
stc
fabs
ljmp
test
adcl
hlt
xor
aaa
idiv
lahf
cmp
lods
xor
ret
cmp
je
subb
scas
pop
sub
mov
mov
mov
ja
das
inc
mov
push
sub
lret
ja
mov
cmp
aaa
movsb
dec
out
pop
add
lcall
cmpsl
hlt
jno
loopne
xlat
inc
adc
rcrb
es
ficompl
shlb
clc
xchg
out
je
mov
shll
fimull
pop
repnz
rclb
jp
andl
xchg
dec
push
mov
call
adc
adc
mov
xor
sub
idivl
cmpsb
dec
stc
and
aas
jne
add
sbb
pop
push
cmp
shrb
pop
jo,pt
shl
push
jmp
int3
scas
adc
pop
cmpsb
repz
jno
lds
pop
pop
in
jno
push
outsb
inc
loop
sbbb
fstpl
dec
orl
out
pop
ss
xor
outsb
jns
inc
jb
pusha
bnd
adc
lods
aas
adc
dec
cmc
push
mov
push
jne
or
rorb
xchg
jg
je
fnsave
push
pop
hlt
popf
loopne
push
xor
rorl
divl
xor
pop
mov
and
fwait
popa
notl
les
pop
and
fbstp
js
je
ret
test
dec
iret
dec
push
push
sub
dec
cmp
cmp
test
mov
jae
cltd
push
dec
lods
pop
cs
cmpsb
shll
stc
jl
lret
xchg
call
roll
incb
xor
and
adc
adc
dec
cwtl
mov
idiv
aad
leave
leave
outsl
jo
enter
enter
addr16
jle
inc
pusha
xor
pusha
cltd
fmull
pop
lahf
mov
add
add
xchg
mov
add
add
in
stos
test
pop
ficomps
mov
mov
sti
adc
rorl
jle
gs
cmp
sbb
sbb
test
add
stos
and
mov
fiaddl
push
loope
or
inc
jnp
pop
stos
outsl
or
rcll
popf
fs
or
add
pop
push
cmp
into
xchg
pop
add
mov
mov
xchg
cmp
jb
add
rclb
movsl
cmp
in
rolb
loope
sub
out
jno
fwait
or
pop
stc
sub
out
fistl
cld
movsb
pop
les
out
push
sub
adcb
jge
cmove
pop
xchg
subl
adc
cwtl
cmp
xchg
dec
push
adc
mov
test
ret
movsl
xchg
and
dec
or
ja
push
jge
incl
mov
and
icebp
rorl
or
mov
jecxz
aaa
pop
mov
cltd
cs
and
dec
mov
es
stc
push
mov
sub
or
mov
sbb
jg
pop
fbld
mov
in
sbb
lahf
aad
ficoms
out
mov
xor
cmpsl
pop
mov
pop
std
addr16
xor
inc
mov
outsb
call
cld
mov
cmpsl
bound
int3
aam
test
jb
push
jg
xor
cmp
mov
data16
aad
dec
push
lret
xchg
or
int3
rcrl
loopne
mov
push
pop
pusha
push
fwait
mov
loope
ds
lock
jl
dec
lret
mov
jle
mov
popa
and
xchg
cwtl
ds
sahf
adc
aad
or
sub
mov
jmp
mov
or
js
mov
or
cmp
xchg
adc
jp
jmp
fwait
push
insb
rcrl
in
ret
loopne
fisttps
out
hlt
es
shrl
nop
arpl
add
mov
out
test
cmp
cmp
push
iret
negb
inc
jmp
fists
test
inc
or
jb
xchg
jg
xlat
adc
insb
jne
sub
add
jge
cld
repz
xchg
mov
mov
fisubrs
ret
int3
cld
cmp
mov
jmp
mov
incb
inc
sbb
or
scas
mov
xor
ret
sbb
enter
popf
sbb
and
push
push
cmp
aas
or
pop
cmc
and
cmp
dec
and
fs
dec
sub
mov
and
push
adc
das
add
repz
push
push
stos
dec
xlat
ljmp
leave
scas
jmp
cmpb
daa
mov
xchg
mov
mov
repz
xor
dec
mov
shl
push
mov
dec
jns
std
pop
pop
xchg
mov
jecxz
xchg
in
xlat
xchg
les
lahf
daa
aam
sub
cmp
or
push
int
rclb
push
jp
xlat
lcall
lahf
sub
pop
scas
cmp
dec
loope
rorb
rclb
and
xchg
dec
lock
pop
mov
pushf
mov
lock
aaa
sbb
es
addr16
mov
jp
xor
arpl
jbe
mov
rcrl
cmp
cli
test
mov
and
ss
lea
push
mov
and
dec
cmpsl
add
mov
xchg
inc
decb
lea
sti
psubd
out
mov
or
es
enter
push
clc
mov
jne
push
pop
sub
inc
aas
sti
add
cmpsl
xor
fmull
jecxz
iret
mov
insb
imul
push
arpl
dec
aas
or
mov
jne
mov
fistps
inc
dec
ret
cmp
dec
mov
and
sub
ds
hlt
pop
add
jg
push
or
xor
pop
scas
gs
and
xchg
dec
jb
xor
out
add
ret
in
mov
in
adc
push
jne
push
bound
repz
std
pop
test
insl
nop
stc
jo
add
push
cltd
leave
outsb
lcall
push
std
add
imul
das
mov
xchg
jno
push
jo
fs
sub
movl
loop
in
sahf
clc
movl
pop
ja
xor
xchg
push
sarl
aas
push
pop
lock
push
lcall
inc
xor
dec
jg
mov
pop
retw
push
push
mov
sbb
test
inc
mov
mov
or
lahf
jo
mov
pushf
shll
pop
pop
and
xchg
jnp
les
cwtl
or
incb
sbb
mov
cmpsb
aaa
jl
mov
mov
adc
insl
out
stos
sahf
lret
lods
jl
mov
inc
lret
pop
cmp
imul
push
lods
or
xchg
and
stos
stos
adc
hlt
es
ljmp
mov
push
mov
xchg
dec
aas
mov
popf
arpl
xchg
xchg
jnp
dec
sub
jecxz
jo
outsb
lods
jecxz
jb
out
popf
gs
mov
hlt
adc
pusha
or
pop
adc
outsl
jns
push
adc
jg
fidivrl
aam
jle
pop
stos
call
cmp
xchg
fs
pop
mov
xchg
inc
inc
push
mov
jns
add
fcompl
add
sbb
rcrl
xlat
jno
ret
ret
shrb
cmp
push
rolb
adc
inc
xor
mov
out
lods
rolb
push
test
adc
daa
test
enter
cmpsb
inc
ljmp
inc
inc
push
inc
imul
or
outsl
xchg
in
add
mov
into
jle
push
iret
roll
sub
inc
fnstsw
cmp
or
out
sub
leave
add
pop
add
sbb
rolb
cmpsl
and
out
and
roll
rol
add
dec
cmpsl
sbb
cli
scas
push
rclb
adc
in
mov
aas
int
sti
inc
push
adc
xlat
call
addr16
adc
pop
test
cmp
jbe
or
cmc
loopne
jbe
dec
mov
push
sbb
pop
gs
push
cmp
mov
add
cmp
jmp
movhps
mov
adc
inc
cld
pop
ror
xor
dec
sbb
mov
test
movaps
aad
aaa
mov
mov
add
mov
push
pop
push
nop
and
xor
pop
xchg
movsb
ja
jp
mov
jb
push
ret
push
icebp
stos
sbb
add
pop
dec
jle
jnp
shl
sbb
sbb
sbb
xlat
enter
clc
incb
cmp
cwtl
sbbl
call
ljmp
movsb
sbb
arpl
pop
and
stos
pop
xchg
es
jae
movsl
jb
xor
je
xchg
aaa
push
data16
std
cmpsl
enter
or
sub
add
aaa
sbbb
enter
mov
fnop
cmpsb
pop
xor
cmp
jae
dec
mov
pop
lock
aad
jne
inc
int
sub
and
nop
cli
xchg
mov
or
imul
insl
cwtl
shll
stc
mov
jns
mov
sahf
mov
adc
push
fs
dec
or
out
sahf
jns
filds
and
pop
adc
sub
cmp
lock
outsl
insb
jb
add
ret
xchg
cltd
js
inc
arpl
gs
adc
in
std
push
or
int
int3
cld
gs
cltd
loopne
in
dec
sbb
and
push
mov
mov
stc
sbb
xor
jg
xor
test
push
push
push
mov
jl
shlb
in
cwtl
test
push
jb
jmp
push
cld
xor
sub
cmp
adc
loopne
push
int
push
xor
push
jmp
mov
jl
movsl
inc
fwait
lahf
ficoml
mov
scas
fcomps
mov
jnp
adc
and
cs
mov
and
pop
xchg
lods
sub
cmp
or
pop
pop
call
sub
loop
nop
xor
mov
imul
xor
fs
jo
adc
or
cld
loope
lahf
dec
lahf
bound
sbb
pushf
pop
aam
sbb
pusha
pop
mov
add
stos
xchg
lea
cmpsl
out
xor
xorl
add
xchg
mov
inc
pop
cmpsb
ds
std
in
mov
cmp
mov
outsb
pop
dec
jns
push
sbb
cmpsb
and
cmp
jo
test
cmp
ds
cmp
outsl
mov
xchg
mov
adc
jbe
out
hlt
adc
aaa
push
push
aad
sub
cmp
clc
lods
add
add
nop
xchg
and
and
push
adc
lods
ret
mov
mov
addl
lahf
xchg
and
call
in
add
hlt
push
call
xchg
adc
rcr
pop
jns
pop
xchg
add
into
push
push
out
mov
inc
mov
inc
iret
adc
xchg
push
cmp
mov
rcll
add
cmpb
jle
pop
out
rclb
loopnew
lahf
inc
cmpb
in
pop
add
cwtl
push
scas
ret
push
pop
imul
rcrb
ljmp
rorb
aas
push
cmp
iret
add
sahf
fcoml
ja
mov
clc
sarl
mov
outsb
insl
repz
and
xchg
xchg
mov
ret
cmp
aad
push
repz
in
xchg
leave
or
jno
mov
lea
fists
mov
sub
pop
mov
cld
popa
test
sub
jg
push
sub
push
cmp
popa
push
mov
rcll
push
ds
sbb
dec
sub
or
out
cmpsl
out
push
cmp
enter
jae
ja
mov
scas
lret
push
and
cli
jle
stos
insb
orl
cmp
rorl
out
mov
ljmp
mov
test
ret
ss
jle
ret
lock
mov
mov
mov
sbb
mov
addr16
pushw
call
xchg
call
loop
lahf
fistl
sarl
mov
adc
sahf
cmpsl
add
push
shl
push
push
daa
mov
fisttps
dec
sbb
mov
xchg
lds
jecxz
xor
jb
das
mulb
cmpsb
lcall
mov
imul
add
push
aad
inc
loope
sbb
or
mov
sbb
pop
int
add
movsl
mov
bound
push
mov
mov
push
mov
adc
sub
add
push
movsl
push
imulb
mov
fldcw
push
push
sub
ja
fnstcw
inc
into
adc
mov
js
inc
add
pop
jge
jae
jecxz
clc
jae
je
decb
rol
idivb
sahf
sbb
cmp
scas
dec
lahf
xor
stc
arpl
xor
cmp
xchg
fcmovbe
ja
mov
pop
dec
jle
int
in
mov
cmpsl
pushf
mov
imul
dec
leave
xor
shr
add
xchg
outsl
dec
mov
mov
push
add
inc
movsl
stos
or
je
je
push
dec
inc
and
xchg
shlb
mov
sbb
rolb
or
add
xchg
sbb
jmp
push
jns
test
mov
mov
sahf
add
mov
sub
mov
in
mov
push
lea
adc
subl
enter
mov
dec
in
push
sti
out
xchg
nop
cwtl
das
dec
stos
lahf
call
cmp
jno
test
adc
mov
imul
jb,pt
xor
sub
and
and
jae
popa
shrb
pop
xor
push
and
orl
cs
xor
testb
hlt
mov
in
in
adc
in
sub
push
cmp
imul
sub
imulb
lahf
cmp
inc
xor
cmp
xchg
ret
cld
lahf
jmp
shr
scas
clc
in
fsubrs
sti
cs
arpl
mov
inc
outsb
mov
lahf
cltd
lcall
sti
test
orb
or
and
push
push
adc
push
shr
movl
aam
sarb
add
jge
pop
sahf
add
add
outsb
fwait
mov
cld
in
rcl
imull
lfs
sbb
adcl
bswap
mov
fsubr
mov
push
js
jns
aaa
imul
and
add
xor
call
sub
lods
jg
mov
movsb
pop
dec
cwtl
xchg
cwtl
lock
jecxz
mov
mov
mov
mov
ljmp
test
out
sub
xchg
xor
rcr
hlt
cmp
das
rorl
dec
xor
aas
mov
les
sub
insb
mov
test
cld
repnz
cmp
jg
nop
mov
js
cmc
fstl
jbe
adc
jecxz
and
mov
adc
mov
ljmp
and
fistpll
nop
inc
sti
lods
xor
cmp
arpl
leave
cmpsb
in
fadds
repnz
pop
mov
push
push
jnp
test
jnp
jns
add
fs
out
popa
inc
xor
gs
lcall
or
in
insl
jbe
mov
jb
enter
cwtl
push
inc
or
xchg
das
cmpsb
push
repnz
mov
push
push
xchg
mov
inc
lock
dec
add
inc
sbbb
xor
push
dec
rcrb
jecxz
xchg
mov
pop
jb
ja
rorb
sahf
cmp
int3
pop
lahf
imulb
push
xchg
ds
cmp
jo
pop
ds
pop
dec
sti
mov
ret
jne
mov
int
pop
xlat
xchg
arpl
ja
add
sbb
sub
jle
aad
gs
sub
jecxz
cmp
mov
add
dec
ss
push
inc
mov
add
aam
sub
ret
ljmp
jg
ja
sahf
idiv
in
iret
in
mov
sub
xchg
sti
pop
mov
cmp
rcrl
in
test
mov
lahf
dec
arpl
xor
cmp
add
mov
mov
sub
fwait
xchg
jae
out
cmc
pop
dec
and
sub
shll
mov
mov
scas
je
push
cld
sub
mov
xchg
sub
mov
vandps
push
inc
es
aaa
or
outsb
mov
push
jl
mov
adc
cld
dec
lds
fdivrp
aaa
sbb
push
dec
pop
push
cmpsb
movsl
dec
mov
mov
add
mull
cli
push
dec
into
dec
test
cs
mov
pop
lds
fdivrl
and
adcl
adc
pop
xor
imul
pop
push
add
add
ret
insl
ds
sbb
inc
jmp
adc
pop
stos
enter
cmp
add
inc
shlb
pop
adc
dec
cli
mov
lods
call
pop
xchg
loop
in
cmpsb
inc
pushf
pusha
and
enter
and
shl
xchg
sbb
push
mov
mov
dec
dec
lcall
dec
fildl
mov
jl
xchg
mov
cmp
aas
int3
stos
jb
fmull
jae
pop
sahf
or
cmpsb
xchg
cmp
mov
adc
xor
js
or
or
cli
cli
or
arpl
lret
js
adc
mov
mov
xchg
inc
add
outsl
push
fistpll
cmovle
sub
jo
and
cmp
nop
push
sahf
pop
push
cld
fst
jae
fs
jnp
mov
mov
rorl
es
outsb
movsl
mov
popf
dec
sub
or
xchg
jle
sbb
mov
xor
pop
push
and
push
push
mov
xor
and
popf
mov
push
out
shll
cld
sub
push
loope
mov
mov
call
lea
or
sti
inc
xor
add
mov
sub
jge
mov
or
jge
stos
sub
jp
jle
mov
sbb
or
pop
pop
orl
fistpl
jmp
or
fimuls
xchg
repz
repz
xchg
fdivrl
js
add
push
call
pop
adcl
adc
int3
in
mov
push
sarb
out
xorl
fsts
test
mov
inc
xchg
aaa
test
dec
and
idiv
lret
adc
movsb
pop
js
fildl
daa
int
xor
inc
add
lds
ja
adc
jp
pop
nop
popf
sub
add
mov
cli
call
or
cmp
pop
mov
lds
push
mov
into
mov
mov
jnp
repz
and
mov
xchg
lea
icebp
mov
mov
jg
jne
clc
pop
sahf
inc
das
mov
fmulp
lret
jecxz
addr16
data16
push
mov
mov
inc
jbe
adc
clc
nop
jp
jecxz
and
adc
fidivrl
mov
das
out
or
sti
push
xchg
mov
push
push
pop
jb
add
pop
cmp
push
ds
sub
nop
push
in
lods
dec
lods
mov
push
pop
cmc
xor
jmp
xchg
das
out
and
subb
adc
std
jg
lret
in
mov
jne
push
mov
xchg
lods
xor
outsb
push
sub
pop
add
adc
scas
dec
leave
dec
mov
sbb
cmp
add
dec
xchg
mov
repnz
sahf
push
mov
mov
add
jno
xor
jg
mov
mov
notl
sub
mov
daa
mov
adc
adcl
stos
fmuls
push
pop
icebp
mov
pushf
jmp
sbb
in
outsb
or
inc
push
das
xchg
add
pop
mov
adc
je
aaa
mov
jnp
scas
mov
and
mov
push
fadd
pusha
fcmovne
pop
add
mov
push
mov
adc
out
adcb
in
movsl
push
in
sbb
inc
outsl
sbb
outsb
jge
pop
cmp
jo
ja
inc
shr
sbb
mov
mov
push
or
decb
cmp
shll
mov
dec
enter
jl
jg
insl
in
cmp
ljmp
divb
and
aad
jb
rorl
dec
data16
fstl
push
out
or
push
jge
in
dec
and
bound
and
sub
stos
fbstp
enter
pop
lret
mov
sbb
test
inc
inc
and
cmc
pop
or
sbb
adc
iret
xchg
aam
mov
pop
cmp
pop
jns
push
rolb
popf
push
imul
dec
setg
out
repnz
cmp
nop
call
mov
mov
into
inc
stc
xchg
sub
mov
mov
dec
cmpsl
pop
jg
pop
mov
jne
or
into
sahf
mov
lods
movsb
mov
bound
test
sarb
out
mov
cmp
or
fiadds
pop
xchg
inc
data16
cmp
lcall
pushf
shrl
cmp
scas
sbb
lea
popf
fistpll
nop
dec
cmpsl
sarb
dec
xor
push
lds
mov
subl
cmp
in
and
jbe
int
inc
clc
es
mov
fadds
jno
out
mov
xlat
fwait
xchg
rcrb
or
pop
mov
dec
pop
or
enter
push
lretw
push
add
notb
ja
fs
negl
push
cmp
dec
mov
lahf
xchg
idivb
clc
mov
stos
cmpsb
sbb
in
and
test
fimull
push
movsl
cmp
std
or
rcl
add
loopne
rclb
mov
js
ret
xlat
xor
inc
and
addr16
sbb
in
push
test
ja
pop
cli
push
mov
push
pop
add
cs
push
imulb
cmpsl
leave
pop
daa
shrl
cli
xor
xchg
push
movsl
mov
push
das
mov
xchg
sti
andl
icebp
les
into
test
and
mov
add
cs
dec
lods
jns
add
lds
cmp
pop
xor
sub
jle
in
jge
push
pop
jo
inc
aam
insb
cmp
xor
and
sub
test
xchg
data16
xchg
jae
iret
jne
mov
add
rcll
aas
cmp
inc
jae
or
dec
cmp
xchg
rcrb
mov
mov
xchg
std
shrl
test
andb
dec
rcr
aas
ljmp
incl
les
fsubl
mov
xor
cmpsb
mov
addr16
pop
fidivl
ss
xchg
aam
hlt
data16
lea
mov
dec
mov
mov
movntps
je
std
push
adc
xor
sbb
xchg
jno
orl
dec
and
jp
mov
adcl
pushf
cs
or
dec
fmul
add
dec
mov
fisubrl
setge
adcl
testl
ficoms
sub
inc
fnstsw
xor
mov
pop
cld
xor
inc
jb
rolb
sbb
pop
cmpsl
xor
daa
mov
test
int3
imul
adc
xchg
cltd
enter
mov
jo
pop
mov
push
mov
add
pop
stc
popf
inc
inc
ss
or
cmpsl
ljmp
xchg
or
jle
xlat
addb
cmp
sarl
xor
repnz
int
mov
sub
xor
dec
adc
fldl
mov
sar
out
xor
dec
test
jno
lret
popa
rcrl
mov
jbe
pop
jae
sub
bound
aas
mov
lret
sub
add
adc
jns
movsl
imulb
push
lcall
test
lcall
push
xadd
fcoms
cmp
fsub
mov
mov
adc
dec
lds
cmpsb
fbld
jle
xchg
pop
sbb
push
pop
stos
jne
scas
int
fmuls
jle
and
mov
rcr
adc
xchg
and
or
outsb
inc
cmpsl
mov
sub
addr16
dec
cwtl
jp
ror
popl
lods
pop
jnp
orl
je
push
fists
xchg
cmp
stos
sbbb
mov
addr16
pop
sub
cmp
jnp
repz
ret
xor
in
or
movhlps
pop
add
outsb
jne
mov
sub
pop
std
cmp
jl
sbb
hlt
lret
pop
xchg
sbb
adcb
inc
jb
xchg
stos
repz
jmp
dec
lret
adc
xor
push
loop
push
dec
xchg
xor
adc
popf
dec
cmp
mov
movups
mov
ss
mov
mov
cmpsb
into
imul
inc
pop
sub
adc
jbe
icebp
movsl
xor
loopne
pop
sub
lret
add
adc
mov
scas
std
icebp
mov
mov
jns
fs
mov
ficoms
mov
cmp
push
dec
popf
shlb
lcall
out
add
xchg
jo
xorb
int3
stos
aad
sahf
sbb
add
adc
ja
sahf
loop
add
pop
push
and
aam
mov
mov
outsb
lcall
push
xchg
and
mov
xlat
mov
lds
insl
sub
imul
push
mov
shlb
pop
add
imul
mov
cs
xchg
sbb
inc
xor
dec
pop
push
fsts
stos
stos
sti
adc
inc
cmpsl
xchg
rorb
jg
add
sub
mov
fnstsw
jno
es
jnp
repnz
in
aad
mov
push
mov
out
mov
xlat
mov
mov
dec
hlt
or
mov
push
inc
lods
outsl
pop
iret
adc
cmp
pop
and
hlt
insb
cltd
xor
hlt
adc
cmp
mov
iret
test
fwait
iret
xlat
lahf
cmp
test
mov
loope
fdivp
xchg
mov
into
into
ret
pop
pop
push
pop
mov
orb
sub
jae
xchg
cltd
sub
imul
inc
cmp
jae
lock
dec
pop
not
adc
arpl
lahf
inc
nop
aad
xor
or
into
jb
sahf
repnz
rolb
xchg
xor
dec
ds
rcll
push
jns
rol
dec
mov
dec
gs
scas
call
cmp
mov
xor
sahf
pop
jbe
loope
sbb
dec
cmp
das
div
rorl
xor
add
mov
inc
shll
repnz
or
orl
pop
icebp
jae
mov
movsl
sub
fildl
jp
lds
xor
lods
dec
sub
xor
pushf
dec
add
call
add
ret
xchg
inc
into
mov
cltd
rorl
xchg
loopne
lret
pusha
pop
filds
loope
mov
scas
adc
das
or
xor
push
adc
call
cltd
pop
lds
scas
mov
jecxz
mov
jae
push
movsb
cld
jmp
fs
ljmp
mov
gs
lods
or
dec
test
mov
aad
fmull
xchg
cmpsb
fildl
mov
xchg
pop
cmpsl
es
adc
sbb
sbb
ja
mov
repnz
in
pusha
xor
shlb
movsl
fbstp
pop
sub
stos
push
dec
xchg
aaa
cmp
jns
xchg
jae
fcomp
mov
mov
sub
sbb
aaa
enter
lods
lds
sbb
pop
mov
cltd
push
inc
or
sub
ljmp
jl
jmp
in
push
leave
dec
mov
or
sti
fistpll
repz
and
out
stos
je
add
or
in
inc
adc
push
data16
jg
mov
ja
outsb
push
inc
sub
fs
data16
push
scas
add
cmp
lahf
adc
idivl
lds
rol
mov
pushf
xchg
sbb
cmp
xchg
outsb
jno
adc
lahf
sbb
rcr
sub
xor
fcomps
fldl
lret
add
mov
push
imul
xorb
push
pop
sbb
push
inc
imul
cmpsb
jo
fcmovne
test
loope
adc
mov
dec
xchg
int
addr16
jp
mov
mov
mov
in
pop
call
dec
cmp
jno
subb
js
out
data16
sbb
jl
jp
aad
fxch
les
loope
das
xor
mov
fcmove
outsl
xlat
sub
push
mov
addl
xchg
pop
xacquire
aaa
sbb
dec
out
jl
hlt
ss
xchg
dec
or
sub
add
mov
out
aad
es
push
push
mov
in
jp
cmp
mov
into
dec
cmpsl
mull
xchg
movsb
cmc
faddl
loopne
jmp
adc
and
testl
les
sub
mov
icebp
scas
dec
sbb
cli
sub
xchg
movsb
imul
inc
rorb
lods
add
vcvtdq2pd
add
imul
cmp
add
push
nop
sbb
in
cli
dec
mov
addr16
sahf
mov
jg
fisttps
cli
pop
lret
xchg
mov
mov
test
hlt
xchg
insb
hlt
lea
test
mov
mov
xor
jge
mov
out
mov
rcll
or
mov
sub
shrl
or
inc
popf
arpl
mov
loop
xchg
insb
or
jns
and
movsl
and
rolb
fcoms
enter
fmull
push
arpl
jp
cltd
lret
and
jnp
mov
add
inc
test
fstpl
gs
shl
test
dec
jmp
in
roll
ret
imul
jle
mov
dec
js
sbb
or
push
sbb
std
pop
xchg
divb
jp
mov
rcr
ljmp
mov
inc
ficomps
add
or
std
push
and
addr16
bound
sub
lret
mov
cmpsb
fs
test
dec
mov
push
and
sub
stos
sub
popa
add
push
call
push
and
js
bndldx
push
mov
arpl
cmpl
inc
mov
pop
ret
or
loopne
lahf
ret
mov
aad
repz
arpl
sbb
shrb
cwtl
aaa
cmp
rcll
out
push
ja
loop
mov
inc
lock
rclb
mov
bound
cmp
jecxz
cmp
xchg
jae
pop
sti
xor
lret
xchg
and
lret
sub
inc
aaa
sti
dec
sbb
dec
lret
loope
jae
jnp
mov
dec
daa
and
popa
stc
cmp
outsl
ja
loop
xchg
xchg
outsl
adc
add
pop
sub
sub
loope
xchg
sti
mov
mov
dec
lods
mov
adc
dec
push
xchg
dec
cmpl
push
adc
subl
lea
pop
sbb
out
inc
fwait
fwait
inc
sbb
stc
mov
aad
jmp
dec
repz
ja
lea
ss
ret
lea
test
or
mov
stos
add
fcmovnb
jbe
scas
insb
pop
popa
popa
leave
mov
inc
shll
outsl
jecxz
xor
and
sbb
mov
and
notl
bound
pop
aad
cmc
cmp
fwait
or
test
popa
ja
xchg
push
call
sub
sbb
push
sbbb
out
mov
push
inc
lods
idiv
xchg
repnz
or
in
xchg
cmpsl
cltd
mov
or
sub
xchg
loop
mov
push
xchg
pop
ljmp
ficomps
push
subl
bound
inc
int
mov
pop
shll
or
push
jmp
sahf
rolb
fsubl
sahf
xchg
aas
xorb
xchg
arpl
xor
daa
imul
popf
add
mov
push
out
jecxz
jmp
xchg
mov
aad
sbb
ds
pop
lret
enter
lea
or
out
sbb
adc
mov
or
in
iret
dec
or
cmp
addl
jmp
mov
cmpsl
cmp
inc
sti
sbb
adcl
push
frstor
sbb
clc
mov
int
aam
mov
cmp
mov
lods
ret
hlt
cltd
cmpsb
cmp
mov
clc
cmp
int
je
ljmp
inc
cmpsl
mov
insb
mov
and
pop
imul
xor
aad
lcall
sbb
enter
decl
sbb
mov
cmp
or
and
mov
inc
mov
jno
je
ret
xchg
mov
nop
sbb
ja
jo
popl
xor
inc
adc
cmp
je
cmp
mov
or
leave
out
fldl
addl
push
xor
fwait
add
test
mov
pop
and
test
xchg
inc
cmpsl
jge
loop
push
insl
dec
imul
lods
push
xchg
adc
mov
sub
je
out
inc
push
add
fimull
jne
xchg
shlb
inc
add
push
ret
or
mov
es
mov
mov
out
mov
mov
inc
sbb
shll
mov
pop
fisubrl
repz
and
imul
inc
xchg
adc
stc
jnp
pop
inc
xor
mov
movsb
xor
mov
decl
cmp
cwtl
addr16
push
pushf
push
dec
shrb
cs
sub
mov
mov
sar
pop
sub
scas
xchg
cld
jno
push
enter
and
test
jno
sbb
jg
mov
pop
jb
sbb
fstps
mov
insb
adcb
jns
std
adc
push
out
inc
daa
inc
mov
outsb
jo
mov
sub
arpl
sarl
pop
mov
daa
sahf
jmp
stos
mov
fwait
push
pop
xor
mov
mov
add
or
and
dec
mov
mov
lds
inc
xchg
inc
mov
cli
push
push
loope
xchg
sub
aas
lret
adc
pop
repz
iret
sub
push
mov
mov
jne
scas
testl
pop
jmp
or
mov
jnp
adc
push
pusha
cmpsl
inc
ljmp
inc
dec
test
out
repnz
jecxz
jle
iret
jae
pop
addl
sbb
jbe
aas
jle
mov
inc
add
cmp
fisttpl
imul
ljmp
imul
sub
mov
movsb
ss
pop
add
fistpl
mov
jle
push
js
shll
or
lods
sub
das
adc
or
inc
adc
jg
push
push
add
mov
outsb
sbb
mov
out
sbb
or
sti
pop
das
rclb
jp
stc
popa
push
mov
popf
mov
pushf
cwtl
jne
inc
add
fisubrl
jp
lret
mov
sbb
in
jle
pop
jnp
ja
jmp
dec
mov
lock
hlt
stos
aas
mov
sub
std
ljmp
mov
mov
loope
outsl
mov
jle
sub
mov
rcrb
xchg
sbb
xchg
out
mov
and
jb
movsl
loope
psraw
inc
scas
mov
scas
popa
int3
and
repnz
dec
out
aaa
jne
xchg
mov
ds
inc
stos
mov
pop
gs
cwtl
jne
jns
scas
sub
cmp
repnz
imul
mul
test
fwait
mov
mov
push
pop
ret
mov
xchg
adc
dec
push
cmp
lret
cmc
loop
repnz
cmp
ffree
filds
mov
pop
mov
aaa
jg
sbb
aad
into
in
inc
or
push
add
mov
jbe
fwait
jbe
push
sbb
push
fisttps
jae
cltd
mov
lret
mov
and
aaa
sbb
add
pop
mov
pop
mov
cmc
in
jns
in
ljmp
sbb
ja
dec
stos
outsl
ljmp
adc
add
fnstsw
mov
ret
stc
ret
out
cltd
mov
cmpsb
cmp
ljmp
mov
jo
jmp
pop
jmp
out
add
cmp
js
es
fwait
push
out
sbb
hlt
cmp
inc
fsubrs
mov
mov
mov
inc
fnstsw
add
jae
mov
xor
dec
dec
test
mov
inc
cld
pop
lret
pop
jg
pop
sub
push
jp
neg
sbbb
xchg
sub
fisubrl
insl
xor
faddl
push
stos
sub
sub
nop
fidivrs
cmp
mov
ljmp
mov
dec
adc
mov
je
subb
add
movsb
test
mul
pushf
dec
sbb
adc
jno
pop
xor
inc
pop
adc
jns
xchg
mov
pop
adc
leave
cmpsb
stos
fmuls
and
mov
icebp
mov
stc
outsl
jb
adc
pop
inc
fstp
in
jecxz
xchg
jns
xchg
insl
inc
sbb
jb
adc
int3
sub
rcl
add
test
aad
pop
or
jge
mov
lahf
stos
subl
ja
xorb
lods
xor
dec
mov
cmpsb
in
fmul
push
in
pusha
jmp
add
xor
mov
mov
cmp
dec
cmp
fmul
pop
jae
popa
xchg
pop
sub
imull
sti
std
dec
xchg
out
cmpsl
jle
sub
jg
inc
jg
jp
addr16
adcb
mov
xchg
cmp
xchg
cmp
lcall
sbb
in
out
sbb
daa
dec
mov
jp
and
mov
add
shll
and
pusha
dec
push
mov
push
jp
ficompl
xor
daa
adc
push
cmp
addr16
int3
sub
or
testb
sbb
in
out
inc
in
aam
jle
cmp
mov
loopne,pn
add
push
add
iret
and
adc
or
add
mov
mov
sub
xor
adc
inc
call
shr
adc
dec
repnz
inc
fs
cmp
ljmp
jecxz
adc
xchg
push
push
push
adc
popf
xchg
and
testl
inc
mov
call
das
test
movsl
andl
dec
in
push
mov
jae
pop
push
loop
test
jl
mov
mov
sbb
pop
insb
sbb
hlt
mov
subl
cmp
sahf
std
out
jb
clc
ljmp
xchg
push
repz
inc
add
pushf
cmpsl
pop
xorb
xor
xchg
mov
push
xchg
mov
sub
cwtl
jle
mov
pop
negb
xor
mov
scas
bound
dec
mull
ss
adc
fistpl
fs
mov
sahf
andl
sub
std
ret
and
cld
sbb
jp
pop
int3
jae
das
and
lret
or
adc
test
sti
sub
pop
mov
iret
dec
add
xchg
and
loope
and
inc
ljmp
cwtl
inc
and
jo
and
fld
jge
inc
pop
into
inc
xor
pop
xorl
adc
mov
xor
sbb
out
hlt
mov
mov
sbb
jmp
mov
hlt
inc
adc
pop
pop
mov
lock
stc
mov
xlat
je
push
pop
sub
xor
mov
or
mov
mov
loop
sub
mov
lcall
push
cmc
int
inc
mov
adc
stos
insb
fisttpll
or
xor
rcrl
or
testl
cmp
push
dec
pop
inc
test
cmp
xlat
popa
inc
sbb
out
std
sahf
fadd
fistpl
lds
pop
pop
subl
in
sbb
lds
shrl
sbb
das
shlb
push
jecxz
scas
test
nop
inc
or
add
fldcw
fadd
dec
mov
jae
dec
gs
insl
xchg
out
dec
sti
in
pop
aad
sbb
movsb
mov
js
push
xchg
insl
ret
repnz
jl
sbb
cmp
cmc
pop
sbb
ret
inc
or
repnz
dec
and
repz
and
push
mov
outsl
xchg
cmp
aad
mov
icebp
sbb
pop
pop
push
dec
xchg
and
and
pushf
insb
mov
mov
mov
rcl
push
in
cmp
jle
scas
mov
ret
xchg
mov
cli
xchg
dec
push
aam
scas
icebp
sbb
cltd
icebp
in
xchg
or
inc
xchg
jbe
jno
insb
xchg
ja
test
jp
enter
mov
lock
fdivrl
in
fbstp
lret
lock
jmp
data16
inc
pop
xchg
test
add
cmp
test
mulb
and
adc
scas
xchg
lret
pop
jl
test
rcl
jne
repz
mov
int
das
imul
js
call
mov
inc
int3
mov
xchg
inc
js
arpl
sub
movsl
mov
sahf
add
sbb
test
inc
popa
dec
loope
inc
xor
pop
jbe
shll
mov
bound
fs
lds
stos
or
pop
lea
rcll
jmp
ret
es
sub
daa
pop
cmc
mov
mov
and
sti
cmpb
mov
sub
stos
xchg
mov
xchg
rclb
out
shlb
pop
push
dec
repnz
pop
or
fsubrs
cmpsl
nop
repz
lea
je
dec
pop
add
sub
mov
jns
jbe
clc
pop
mov
mov
add
imul
xor
inc
push
adc
xlat
dec
adc
jns
sti
mov
and
mov
push
add
xchg
out
ja
pop
roll
sub
push
jno
mov
mov
or
dec
lcall
sbb
pop
xchg
jne
cltd
dec
or
sbb
rorl
xchg
jmp
add
cmpsl
aaa
inc
lea
pop
ss
int3
outsl
xlat
fadd
hlt
test
and
into
sahf
sbb
xlat
add
shl
sarb
incl
mov
sbb
jne
add
icebp
movsl
std
leave
xchg
or
pop
fiaddl
pushf
mov
mov
or
aad
mov
mov
shrl
sub
sarl
shll
out
pop
xchg
mov
add
adc
or
dec
imul
in
sbb
test
sub
test
scas
mov
inc
xor
roll
push
cmp
dec
leave
mov
sbb
jbe
lods
sbbl
jge
mov
repz
orl
bound
dec
pop
or
loope
inc
pop
xchg
jg
push
jl
xchg
sbb
push
int
fmuls
dec
sbb
or
cmp
lret
xchg
xchg
test
ljmp
mov
adc
clc
and
xor
dec
jo
jl
sub
out
sti
sarl
fst
push
cmc
push
sub
inc
xchg
outsb
in
mov
lahf
sahf
gs
inc
add
sub
push
pop
xor
test
dec
repz
cmp
loop
pop
push
iret
jmp
add
inc
and
movsb
jns
insb
push
add
addr16
lds
pop
inc
cli
cwtl
enter
push
sub
insb
add
mov
addr16
mov
lods
inc
fidivrl
xchg
adc
xchg
inc
jg
lcall
xchg
nop
jecxz
fsubr
pusha
pop
add
ja
add
xchg
dec
push
test
fistpll
mov
filds
adc
mov
mov
cmc
scas
inc
cwtl
inc
out
cmpsl
sub
ds
cmpsl
mov
iret
stos
pop
mov
gs
dec
loopne
dec
das
push
lret
gs
das
pop
movsl
mov
sti
jno
cli
sub
dec
daa
lods
rep
cld
mov
lret
pop
in
rcll
push
inc
cmp
nop
or
pushf
xchg
aad
repnz
push
rol
imul
outsl
pop
jno
add
mov
dec
in
mov
push
or
sbb
sub
js
cmp
inc
into
sub
dec
jnp
cld
insl
mov
test
mov
adc
xor
mov
sahf
add
add
push
push
and
cltd
mov
pop
jne
negl
dec
subl
jns
shll
inc
and
jae
jl
lret
or
lcall
or
mov
loop
mov
jmp
fistps
leave
xor
xlat
out
inc
and
cmpsl
sbb
add
pop
fcoms
jne
lods
scas
in
ficompl
and
cmp
minps
lods
mov
xchg
fdivs
ret
mov
add
out
cs
pop
jg
mov
lcall
andb
mov
lea
xchg
rol
xor
divl
out
lcall
lahf
sbb
mov
push
cmp
push
sbb
xchg
data16
lcall
ret
mov
inc
or
into
mov
push
inc
sbb
loope
jl
nop
mov
addr16
adc
jb
xor
pop
dec
push
pushf
mov
pop
or
insl
fcompl
sbb
or
ficomps
xchg
xchg
test
cmp
xchg
filds
push
push
mov
pop
cmp
push
pop
cmp
orl
daa
jb
cli
dec
fwait
inc
ss
ss
pusha
jne
dec
int
daa
test
fistps
std
adc
ldmxcsr
push
adc
xchg
insl
outsb
lock
push
sub
push
into
aas
adc
cld
jns,pt
inc
sar
nop
sbb
lds
ss
cmp
int
outsb
pusha
mov
rcrl
adc
and
jl
jae
gs
pop
adc
mov
dec
pop
jecxz
int3
test
xor
adc
mov
outsl
std
int
in
stos
mov
mov
fmulp
sub
pop
int3
inc
inc
fcom
dec
sub
cmc
dec
rolb
cmpsl
ffreep
inc
push
insl
in
and
cmp
lret
pop
lahf
pusha
xchg
ret
popf
pop
fcoms
into
jne
call
xchg
pop
fdivrs
hlt
dec
jg
sbbb
daa
inc
adc
mov
inc
xlat
lret
addb
das
sub
sbbl
icebp
cmpsb
aad
cmpsb
das
xchg
mov
sub
repz
dec
enter
mov
test
fs
or
adc
mov
xchg
sbb
out
jge
dec
imul
jbe
movsl
pop
mov
int
mov
je
jbe
push
xchg
pop
popa
push
stc
adc
cmp
xor
push
sbb
test
out
in
mov
push
or
mov
mov
ja
push
adc
aaa
insl
and
repz
hlt
leave
in
xchg
or
fs
lods
addb
lcall
std
sub
jns
dec
fists
cmpl
rolb
cmpsl
lcall
or
jo
jecxz
popa
pushf
lds
dec
xchg
hlt
repz
cwtl
icebp
or
andl
repnz
rorl
mov
mov
idivl
lods
cmp
pop
rorl
pop
add
add
and
adc
test
adc
or
out
inc
cmp
and
or
test
movsb
les
cli
gs
dec
pop
je
jp
add
sub
xor
xchg
cs
aas
incb
fmulp
adc
pop
dec
and
jnp
sub
mov
dec
mov
or
and
iret
js
pcmpeqb
jmp
cmp
enter
sti
and
add
fwait
subb
cmp
loope
xorb
pop
add
movsl
add
cmp
mov
daa
ss
cmpsb
sub
sbb
fmul
push
push
and
adc
cmpsl
push
ret
pop
cmp
test
jbe
xor
fnstcw
insl
xor
fisttpl
test
inc
push
btr
push
movhps
cmp
or
mov
bound
lret
movsl
inc
mov
arpl
dec
adc
cs
mov
jle
ds
jno
xor
das
dec
iret
xchg
inc
rolb
push
mov
dec
xor
aad
jg
and
pushf
clc
bound
insl
insb
lods
sbb
add
fcoms
pop
loop
pop
std
or
je
ss
jle
test
cltd
out
dec
imul
je
in
ja
add
and
in
pop
lahf
pop
pop
outsb
inc
pop
fcom
test
imul
lret
repnz
popa
ljmp
sbb
mov
js
xchg
mov
xor
push
mov
cmpsb
imul
jge
in
loop
movsl
cmp
pop
fnstcw
mov
jnp
xlat
or
aam
cwtl
loope
inc
cwtl
adc
pop
in
add
sub
inc
mov
add
xchg
or
cs
jb
call
rcrb
cmp
lods
lahf
dec
or
or
dec
xchg
hlt
push
jnp
movd
mov
mov
js
cmc
out
xor
mov
xorl
lds
lock
inc
rcll
mov
and
sbb
popa
call
jl
adc
iret
xchg
xchg
stc
jnp
xor
push
addr16
or
mov
pop
cmp
add
mov
sub
int3
dec
rclb
pop
movsb
ret
dec
xor
push
pushf
imulb
fs
adc
popa
xchg
jmp
loope
jg
aam
insb
in
sbb
and
xchg
insl
scas
addb
subb
and
push
mov
xor
testl
or
sub
fcoms
rol
cmpsb
inc
fdiv
sub
lods
pushl
es
hlt
fwait
cmp
pop
lcall
sub
push
sbb
test
mov
lods
int
jo
sbbb
push
dec
iret
mov
mov
fisubl
dec
inc
dec
pop
adc
dec
inc
rorb
xor
and
xor
mov
or
call
test
movsl
sbb
xchg
andl
fidivl
scas
jns
sbb
movsl
ds
inc
insb
add
mov
sub
cs
ficoms
ljmp
rclb
mov
sbb
inc
xorb
push
sub
push
mov
lock
loopne
jl
dec
fbld
jns
push
rolb
xor
out
mov
sub
mov
aas
ffree
add
jecxz
leave
rorl
xor
adc
insl
mov
out
lods
pop
xchg
xchg
mov
in
aaa
xor
xor
imul
sbb
inc
sahf
xchg
push
arpl
add
lret
cmp
xchg
jge
cs
dec
scas
daa
rolb
test
shrb
xchg
jp
push
stos
and
in
jns
cmp
out
std
push
cmp
dec
mov
pmaddwd
and
rorl
les
or
movb
and
xchg
imul
sbbb
lcall
add
aad
fstl
xchg
gs
fldln2
lods
inc
push
add
pop
sbb
xorl
orb
sahf
xor
cmpsb
jns
or
ret
jge
out
pop
push
fcmovu
leave
sub
pushf
mov
add
fstpl
ljmp
js
pop
xor
jle
repz
jg
inc
jge
and
jg
inc
daa
adc
cmc
enter
sbb
pop
adc
je
adc
jmp
dec
cld
dec
pop
sub
shl
ret
push
stc
inc
outsb
out
test
mov
fucomi
fdivrs
or
or
into
add
adc
inc
pop
iret
xchg
adc
dec
jecxz
fcomp
push
push
lea
and
mov
lret
lods
push
aas
adc
sub
mov
lcall
and
cmp
int
pop
mov
lret
push
bswap
call
out
mov
ret
push
pop
jl
jbe
adc
icebp
push
repnz
jne
ret
mov
mov
xchg
mov
and
xchg
or
inc
sbb
in
push
inc
sub
mov
dec
mov
add
iret
out
cmc
xchg
xor
dec
lods
mov
pop
lcall
mov
cld
mov
cmp
test
rcrl
ret
inc
data16
cld
cs
lret
cli
jp
nop
shl
mov
push
pop
adc
xchg
cmpsb
pusha
outsl
repz
testb
mov
add
arpl
punpckhbw
mov
mov
test
aas
das
xchg
sbb
dec
adc
jg
mov
adc
fisubs
test
push
push
mov
or
and
rcl
loop
dec
sub
je
aas
stc
je
sub
push
jp
aas
enter
or
adc
adc
sub
xor
stos
loope
pusha
sbb
push
xor
lahf
cmp
ret
add
mov
notl
aam
clc
dec
mov
adc
sub
arpl
push
cmp
mov
lea
push
aad
clc
scas
fbld
ljmp
leave
mov
loop
mov
scas
sbb
push
adc
pop
xor
in
aam
dec
jmp
das
adc
mov
xlat
popl
divl
jle
xor
dec
and
mov
fs
or
pop
xlat
fidivl
imul
movsl
inc
data16
inc
les
ret
mov
mov
jp,pt
or
cmp
sub
lcall
ljmp
xchg
out
addr16
push
je
or
data16
mov
in
or
int
aas
in
xchg
ljmp
sub
inc
out
xchg
or
jge
add
mov
add
sahf
scas
or
cmpsb
fcmove
loop
sub
iret
lret
stc
inc
int
lret
mov
adc
imul
lds
out
xchg
jnp
xor
inc
lcall
out
push
dec
pop
ss
pop
fisubrl
xchg
inc
sahf
fs
inc
mov
fcoms
mov
stc
jl
in
cld
and
adc
inc
inc
imul
imul
xchg
sbb
mov
pop
xchg
cmp
aam
push
dec
dec
jge
bound
jb
jge
push
mov
je
insl
popf
aaa
pop
cltd
lea
aas
pop
int3
or
sub
mov
je
pop
addl
fsts
mov
push
and
jmp
dec
lcall
xor
inc
mov
inc
insb
mov
test
mov
movsl
aam
add
push
shll
sub
outsb
pop
add
xor
push
das
popa
movsb
dec
or
xchg
stos
es
ja
xor
pushf
cmp
stos
cmp
add
inc
jl
jns
dec
mov
iret
loope
inc
and
iret
popa
lahf
mov
in
into
xchg
pushf
jnp
shlb
fcompl
test
shll
fdivrl
cmc
out
or
adc
push
into
iret
test
inc
rorb
inc
out
adcb
mov
test
lahf
dec
and
mov
xor
push
stc
mov
mov
add
aas
or
roll
fs
test
loop
insb
testl
xchg
fst
sbb
aas
incl
inc
sub
mov
mov
pop
adc
add
jmp
push
loop
lea
in
sub
js
xchg
xchg
mov
in
in
push
je
lock
ret
sbb
out
mov
adc
add
mov
aas
sti
div
fnstsw
mov
or
sbb
xchg
push
fstpt
pop
outsl
jnp
punpckldq
or
sqrtps
lods
fistps
and
and
mov
cmp
cmp
lahf
rcrb
jge
jae
jp
imul
mov
push
stc
dec
mov
lahf
movsb
jnp
shlb
mov
fisubrl
xor
adc
pop
fs
ja
repnz
outsl
mov
repz
sbb
jbe,pt
mov
pusha
cmp
mov
shlb
pop
gs
mov
into
incb
cmp
inc
inc
and
popa
cltd
int
bound
ja
adc
push
push
mov
mov
xor
jne
adc
cmp
divb
les
xchg
cld
inc
rcll
loop
sub
outsb
test
data16
bswap
into
hlt
sub
xor
or
inc
jle
popa
imul
push
out
add
mov
loop
sub
cltd
xchg
add
sub
decl
sbb
cmp
jbe
loop
pop
std
je
add
push
mov
lret
lret
gs
stos
lods
int
sub
xchg
add
out
iret
incb
dec
add
mov
mov
movl
xchg
add
into
inc
cmp
pop
dec
fistps
mov
jbe
cli
or
enter
test
jbe
dec
dec
mov
jb
push
outsb
push
sbb
sbb
xor
aaa
push
and
jmp
lods
xchg
sbb
inc
stos
out
cmp
jnp
int
sti
xchg
pop
lahf
push
xor
mov
pop
push
test
pop
andl
pop
cmp
aam
dec
mov
mov
and
and
dec
mov
hlt
fnstcw
pop
cs
pushf
fcomps
gs
sub
rorl
pop
subb
lret
or
mov
pop
insb
cmp
inc
gs
pop
pop
xlat
adc
jp
loop
lea
mov
and
lcallw
orps
pop
shl
imul
loope
mov
inc
pop
and
pusha
jmp
fldenv
add
xor
cmp
jp
fcomps
xor
mov
and
push
sub
maskmovq
cwtl
ret
mov
lret
rcll
cld
cmp
jno
sarl
dec
inc
call
push
lods
shlb
sub
push
mov
cmpsl
xchg
add
movsl
lock
cwtl
iret
add
scas
into
and
mov
mov
rcl
pop
mov
push
sub
mov
push
shl
inc
push
mov
xchg
rorb
jbe
sbb
sbb
in
lods
mov
xor
ss
xchg
sub
fcmovne
mov
mov
inc
es
cmp
xchg
fildll
rcrb
add
sti
jo
or
addb
lds
scas
das
mov
dec
out
mov
pop
jl
in
push
xchg
insl
or
scas
rorb
lcall
loope
stos
add
sbb
push
std
or
inc
in
aad
or
mov
pop
fwait
out
in
adc
movsl
bound
loopne
bsr
sbb
cmp
or
sahf
inc
fs
mov
scas
btc
sub
movsb
pop
mov
jnp
adc
fcomps
mov
xchg
rolb
int3
out
jge
int3
movsb
dec
push
and
jns
push
jle
push
dec
inc
cmp
lret
inc
cwtl
cltd
push
movsl
in
loope
push
push
or
in
cmp
shll
je
jge
xchg
lcall
jns
jnp
adc
pop
movsb
xchg
push
pop
pop
and
cmp
jnp
jmp
adc
orl
inc
pop
lock
stos
icebp
out
test
lahf
les
sub
cmp
sarb
test
enter
cmp
call
xor
jl
xchg
add
insb
test
cld
repz
shll
add
mov
mov
jnp
lods
dec
mov
insl
mov
into
pop
mov
jmp
sbb
jle
sarb
pop
jmp
jecxz
xchg
stc
dec
xor
out
lret
fisttps
pop
in
cmp
sub
mov
push
xchg
pop
rclb
mov
dec
push
jbe
shrb
jns
mov
mov
arpl
dec
cmp
inc
pop
aaa
mov
mov
cmp
les
mov
jmp
imul
dec
addb
jmp
add
sbb
js
in
pushf
jl
inc
inc
sub
pop
and
int3
notb
clc
pop
push
jp
test
sbb
mov
cltd
test
dec
testl
sbb
out
pop
ss
mov
mov
int3
jo
jbe
cmp
add
cwtl
cld
repnz
lret
enter
dec
mov
cmp
xor
mov
xchg
xor
or
sub
or
shl
jo
sub
mov
push
mov
push
stos
push
jns
in
fs
xchg
jb
test
cmp
sbbb
cmp
ja
or
aad
fnstsw
xchg
cli
fstpt
add
ja
mov
ljmp
shrb
inc
fbld
stos
das
jp
andb
mov
and
xchg
xchg
in
fstps
ja
mov
cmpb
into
mov
and
or
popf
jns
jmp
aam
or
bound
pop
out
push
stc
je
rclb
pushf
and
fnstsw
mov
out
mov
jp
xchg
mov
push
dec
fcmovu
dec
add
in
cs
in
and
xor
fadds
addr16
into
mov
popa
pop
inc
imul
xor
mov
sti
insl
and
mov
push
xor
xor
cvtpi2ps
pop
sbb
pushf
mov
cmp
fxch
stc
xor
xchg
arpl
mov
jl
pop
mov
dec
mov
dec
dec
xor
mov
pop
test
icebp
in
mov
notb
sub
sbb
lahf
and
pop
lods
sbb
mov
clc
imul
lods
arpl
mov
and
les
jnp
sub
xor
pop
jo
xchg
popl
adc
imul
xchg
hlt
sbb
push
cmpsb
jnp
ja
sub
icebp
mov
add
xchg
int
mov
xchg
pop
jno
cmp
pop
add
pop
arpl
push
in
push
add
dec
es
insb
dec
repz
inc
mov
mov
sbb
cli
in
imul
inc
push
cmp
adc
in
out
xchg
cs
jg
mov
add
push
mov
data16
xchg
fiadds
pop
dec
shrb
xor
mov
insl
enter
lods
pushf
and
jmp
sti
rorl
pushf
mov
rcr
cwtl
lods
adc
cwtl
clc
xchg
aad
xchg
mov
jl
or
aam
push
jle
push
push
jg
sbb
jo
pop
jae
mov
addr16
js
int3
push
xlat
ljmp
xchg
dec
mov
lret
sbb
sub
mov
xchg
mov
imul
enter
jg
movsl
js
cld
xor
mov
nop
push
sub
adc
sub
pop
or
push
xor
lds
insb
lea
and
sti
sbb
lds
cmp
ljmp
jge
xchg
xchg
sbb
or
sbb
xlat
and
ret
bound
fimull
and
or
test
pop
or
and
cmp
push
add
push
sub
xchg
lods
int
cmpsb
and
jb
ret
add
arpl
xor
jl
test
pop
insl
call
pop
cmp
es
lret
push
ret
adc
adc
call
les
and
pop
enter
scas
xchg
sbbb
jne
out
aas
aas
fs
call
std
out
ja
aam
pop
adc
fistl
cmp
push
js
in
push
xor
das
stos
pop
in
sbb
lahf
or
mov
or
fcmovbe
push
mov
bound
adc
dec
push
mov
jbe
push
repz
xor
pop
subl
insb
jmp
xchg
jbe
push
xor
dec
push
adc
rol
add
popf
test
xor
inc
in
jmp
inc
jg
test
inc
rep
push
jns
pop
push
jbe
pop
add
je
call
testb
lret
gs
pop
and
cld
and
and
fs
repz
pop
in
pop
sarb
adc
popa
sbb
out
jg
sbb
inc
pop
icebp
call
fimull
xor
daa
je
out
std
lds
cmp
lret
enter
cwtl
sbb
lret
mov
out
inc
dec
stos
pop
or
sbb
adc
mov
mov
das
incb
in
aaa
xor
add
sbb
mov
mov
push
xor
push
add
adc
sub
mov
shr
inc
pop
mov
imul
test
cli
clc
or
cmp
add
repz
push
or
insl
or
mov
mov
mov
notb
sub
mov
insb
aas
xchg
cmc
sahf
push
out
outsl
push
dec
fadds
adc
faddl
or
xchg
lcall
jbe
lea
sarb
push
pop
pop
scas
sbb
mov
ss
fldl
pop
mov
in
xor
imul
arpl
adc
imul
lods
sub
xchg
cld
dec
leave
rolb
fwait
dec
dec
inc
and
out
mov
or
decb
mov
mov
fdivl
jnp
mov
in
mov
or
mov
inc
jge
mov
nop
push
insb
test
xchg
cmc
adc
mov
aaa
incb
outsl
dec
ret
jmp
jl
add
insb
out
xchg
out
movsl
dec
dec
inc
mov
in
mov
test
or
inc
cli
pushl
cmp
imul
xor
in
sbb
mov
jo
icebp
frstor
sbb
adc
and
push
popf
inc
mov
hlt
sub
test
fs
pusha
in
and
outsb
sub
push
insb
dec
sbb
out
loop
lds
flds
jl
or
mov
ret
add
ljmp
xchg
xchg
outsb
pop
sub
xchg
outsb
daa
dec
adc
xor
mov
and
sub
andb
call
sbb
loopne
sbb
and
into
add
jl
sbb
test
es
add
jnp
add
fwait
sub
push
jns
adc
jb
mov
aad
data16
lcall
mov
sbb
insb
add
xchg
ret
cmp
enter
cmpsb
ret
xchg
inc
xor
sub
jmp
xchg
daa
pop
jmp
sub
rol
jp
mov
push
add
int3
dec
lret
or
pop
fs
iret
dec
aaa
rcrb
loope
mov
sbb
inc
insl
mov
cs
inc
hlt
lods
cwtl
in
and
je,pt
out
leave
mov
cs
das
push
sbb
icebp
add
xor
push
lods
mov
flds
dec
mov
pop
dec
in
jnp
test
add
push
andps
addl
jge
test
adc
or
pop
push
pop
pop
pop
pop
pop
cwtl
mov
and
or
sbb
jle
push
add
push
nop
call
fstl
dec
lcall
inc
fbstp
mov
hlt
xchg
mov
sbb
loop
sar
mov
push
lds
sbb
psubusb
and
jns
cli
push
mov
add
test
xorb
and
icebp
mov
pop
jp
fisttpll
rorb
pop
jmp
jle
ret
ret
add
dec
sub
and
stos
mov
jp
and
jg
cltd
mov
push
jge
cmpb
jo
sub
xor
scas
loop
ret
lods
push
push
pop
cmpsl
je
jecxz
int
movsl
pushf
or
xlat
push
das
or
dec
fildll
inc
mov
clc
cld
fwait
movsl
xchg
ror
gs
fistps
aad
jecxz
dec
cmp
jno
or
xchg
cmc
mov
jo
leave
jp
xor
jecxz
sbb
mov
jo
es
fstpl
fcmovnbe
mov
mov
out
dec
push
mov
mov
fs
sbb
sub
push
pop
mov
jo
loop
xchg
push
push
pop
data16
or
pop
sub
xor
push
movsl
in
mov
repz
sub
test
inc
stos
push
imul
sub
mov
lcall
out
push
push
leave
xchg
pop
rcll
jmp
push
push
js
xchg
sub
xchg
out
mov
out
and
fcompp
jl
dec
pushf
or
dec
and
xchg
insb
push
daa
sbb
in
fnstsw
or
pop
xchg
jns
and
std
hlt
cmp
mov
add
andl
push
mov
jp
adc
ret
test
icebp
cmpsl
dec
mov
in
aad
pop
and
jae
push
mov
mov
cwtl
push
add
lea
pop
sub
inc
mov
adc
cwtl
mov
push
push
xor
pop
call
ss
push
mov
xchg
mov
popa
or
lcall
fisttpl
shll
aaa
rolb
bound
andl
xchg
out
cmpl
add
jmp
xchg
inc
jnp
orl
jp
cld
out
jl
gs
daa
arpl
cwtl
and
jg
fs
imul
mov
adc
test
pusha
xchg
scas
mov
ret
adc
mov
or
sub
xchg
andl
or
jle
dec
lock
shr
inc
and
fcmovu
pop
jne
add
push
and
cmp
pop
out
imul
dec
arpl
repz
rorb
jg
add
jge
jecxz
in
push
push
repz
add
cmc
popf
mov
scas
dec
and
mov
and
or
dec
addl
inc
test
sbb
dec
lea
push
xchg
js
clc
inc
loope
loopne
insl
movsb
adc
insl
hlt
lret
push
gs
cmp
nop
arpl
inc
mov
add
stos
lock
imul
sub
aas
in
xor
iret
push
push
adc
repnz
loopne
push
mov
adc
xchg
jo
jno
rcrb
mov
les
push
sbb
mov
or
adc
pop
mov
ljmp
sbb
or
sub
popa
orb
sub
clc
xchg
cmpsl
mov
jmp
stos
out
xorl
lret
mov
hlt
cmp
data16
xchg
cmp
or
ret
mov
cmp
sub
push
xchg
mov
xor
xor
hlt
ljmp
pop
xchg
jo
hlt
cmpsb
or
fwait
xchg
xchg
shll
push
sbb
jnp
push
lea
pop
mov
andb
pusha
jo
cmp
sub
aam
lods
cmp
insb
andl
mov
xchg
pop
xor
push
jl
pushf
leave
mov
insb
lret
push
rcll
and
out
jg
cltd
scas
clc
in
adc
insl
popa
clc
or
jmp
ficoms
xlat
sub
dec
cli
sarb
leave
dec
repz
inc
out
mov
xchg
mov
jae
or
push
aad
addr16
mov
out
cld
or
push
popf
cmp
jnp
pop
sub
clc
adc
xor
pop
pop
and
cmp
repnz
fisubrl
lahf
scas
stc
mov
insl
mov
xor
add
mov
cld
dec
cmp
mov
pop
mov
xor
sahf
pop
lods
sbb
sbb
in
insl
mov
push
fimuls
repnz
clc
out
pop
mov
add
movsb
dec
rorl
mov
pop
movsl
fnstenv
push
mov
cld
inc
mov
xchg
xchg
and
cmp
movsl
data16
mov
or
ljmp
push
out
mov
daa
enter
loop
popa
jae
movb
sbb
pop
add
adc
adc
sub
adc
xor
pop
pop
inc
repnz
xchg
in
mov
mov
imul
xor
out
leave
rorb
cwtl
sub
mov
sbb
in
je
aad
stos
xor
jmp
mov
enter
fidivrs
pop
in
rep
xchg
jg
data16
xor
je
in
push
notb
add
icebp
xchg
fsub
mov
xchg
out
repz
scas
mov
mov
int
loope
mov
jg
sbb
jl
rsqrtps
dec
fidivs
leave
inc
repnz
dec
sahf
inc
mov
cmp
mov
jno
enter
push
jg
leave
cmp
scas
testl
xchg
xchg
mov
dec
pushf
cmc
jmp
arpl
iret
sarb
and
outsl
popa
ficoms
jns
sbb
cmp
sarl
pop
mov
add
cmp
int3
adc
out
pop
xor
iret
add
inc
inc
ret
fs
pop
test
push
sub
xchg
adc
rclb
rol
or
daa
mov
mov
and
push
xor
js
pop
xchg
or
fsubl
pusha
pop
xchg
imul
fistpll
add
arpl
sarl
mov
inc
or
loope
cmp
les
int3
mov
popa
cmp
adcl
dec
jmp
push
and
sub
sarl
mov
leave
pop
add
flds
adc
ret
jo
fs
sub
add
inc
test
in
insl
mov
inc
cmpsl
lahf
popf
cmp
pusha
mov
cmp
jp
inc
jbe
in
insb
nop
and
cmp
shll
lahf
in
out
mov
push
pop
in
call
jnp
mov
dec
add
dec
divl
pop
loope
add
icebp
fcoml
xorb
out
mov
pop
add
pop
mov
jo
adc
int3
out
jecxz
push
pop
cltd
adc
sub
ljmp
insb
add
cmp
jg
push
mov
push
idiv
gs
or
scas
mov
cmp
ret
cmp
mov
sub
mov
fadd
aas
xchg
mov
fwait
or
lret
icebp
and
jne
clc
std
dec
mov
cwtl
int
cmc
sbb
push
not
xor
aaa
rcll
aam
push
pop
sub
fildll
arpl
cltd
sbb
lods
pop
icebp
sbb
lret
sbb
dec
shrl
notl
ret
push
push
push
xchg
or
lods
inc
into
jb
loope
mov
into
test
repz
les
adc
mov
xchg
inc
mov
sbb
lret
and
inc
adc
aaa
rcrl
inc
mov
xchg
sahf
and
cmp
jmp
mov
pop
push
popl
add
in
or
dec
cmp
pusha
and
lock
sbb
push
or
dec
jbe
fisubrl
pop
jns
les
std
imul
cmpsl
ficomps
mov
mov
insb
cmp
idivl
push
test
jae
pop
mov
jbe
mov
pop
test
test
adc
sti
xor
test
add
insb
mov
add
push
je
arpl
cmpsl
sub
add
or
in
popa
add
inc
add
stos
mov
ret
not
aam
test
fldl
cmp
and
xor
add
mov
stc
clc
adc
ret
xchg
sub
dec
mov
f2xm1
jl
jne
test
lea
bound
repnz
fildll
lods
cmp
daa
enter
scas
out
and
test
cmpsl
loop
push
popf
jb
ret
std
xchg
enter
xor
mov
pop
outsb
xor
cld
sbb
popf
cmp
adc
sub
sub
sbb
fcmovbe
aas
or
stos
lock
fimuls
pop
push
push
imul
push
outsl
arpl
add
lds
fcoml
out
jge
sahf
dec
and
xor
jnp
loope
add
mov
in
xchg
adc
into
push
adc
pop
hlt
xor
out
stos
loopne
or
loop
mov
fwait
sub
sbb
fldenv
pop
in
pop
mov
outsl
fstpt
ficomps
mov
or
mov
jl
jae
push
repnz
ret
mov
sbbl
jmp
ret
movsb
cmc
outsl
out
les
andl
in
mov
dec
ja
icebp
jae
cli
in
daa
cli
inc
ret
loop
dec
sbb
cmpl
xlat
add
int
call
hlt
xchg
popa
or
pop
stos
in
mov
or
divl
adc
out
or
pop
outsb
mov
push
out
jl
jmp
or
cld
cmp
jo
add
shll
shll
xor
add
mov
bound
sbb
cwtl
mov
inc
fnstcw
inc
aaa
cmpsb
rolb
sbb
daa
mov
xchg
fstl
out
sbb
int3
scas
call
mov
ja
adc
fdivs
sub
mov
out
cld
cmp
cmp
cmp
xchg
dec
int3
fcos
pop
arpl
fildl
ss
or
add
xor
mov
dec
cmp
lret
jle
cmpsb
subl
stc
pop
xchg
adc
movsl
sbb
in
mov
iret
scas
xlat
mov
repnz
pop
and
aad
mov
mov
shl
cmc
cmp
shrl
jmp
sbb
cs
lahf
bnd
fnstenv
insb
pusha
enter
mov
mov
es
mov
pusha
hlt
inc
testb
push
sbb
dec
sbbb
data16
mov
adc
lods
stos
and
mov
mov
sub
loop
aas
cmpsb
gs
ds
movsl
lock
outsl
xor
mov
xor
jnp
jae
xor
and
sarb
repz
cltd
imul
js
call
cmp
cmp
mov
adc
mov
enter
mov
jo
jle
jnp
xor
loope
sub
out
in
or
adc
adc
mov
sbb
stos
cmpsb
inc
inc
and
iret
nop
rol
cmpb
mov
pop
testl
test
arpl
xor
dec
adc
and
jo
enter
mov
mov
fadds
pop
repnz
jp
push
dec
mov
mov
xor
movsb
xor
les
mov
rcrb
inc
jecxz
ljmp
pop
xlat
sub
xchg
cmp
stos
insb
nop
sub
mov
in
adc
scas
ljmp
push
cmc
pop
mov
ret
push
pop
rorl
adc
aam
lods
loope
cmc
sbb
imul
pop
add
cmpl
jle
les
ret
and
push
push
insb
cwtl
cmp
pop
stos
jmp
xchg
xchg
lret
mov
hlt
xor
scas
scas
xor
call
lock
push
mov
mov
fdivl
jbe
mov
clc
xchg
imul
cli
jmp
mov
add
in
adc
loop
jmp
push
adc
insb
movsl
ljmp
fs
dec
imul
ss
mov
jmp
arpl
aas
cmp
pop
jbe
dec
or
rorl
adc
pop
and
fildll
cmp
stos
push
js
bound
sub
sar
or
mov
mov
mov
cmp
adc
roll
repz
and
in
inc
and
addb
rcll
shlb
mov
repz
orb
ss
adc
je
loope
sub
imul
push
lahf
rcrl
pop
fdivrp
jl
xchg
inc
stos
dec
xchg
cs
es
jle
mov
mov
test
mov
or
scas
mov
mov
test
lock
mull
jo
js
xchg
sbb
xchg
mov
in
or
dec
out
clc
push
movsl
fsubrs
pop
cmp
dec
xchg
fisubl
cwtl
push
out
cmp
sbb
or
ja
call
pop
out
lahf
xor
sbb
cltd
es
outsb
mov
stc
popf
je
push
pop
jle
leave
test
andl
hlt
ret
ret
sahf
mov
and
cmp
pop
dec
jecxz
mov
jge
popf
into
push
mov
jb
jno
dec
xchg
lea
mov
xlat
repz
or
loopne
xor
mov
mov
xchg
cwtl
fdivrs
mov
clc
cmpsb
lea
push
iret
cmc
test
aad
mov
jae
lret
in
aas
mov
cli
popa
arpl
pushf
push
cli
jns
inc
test
sbb
int3
mov
or
scas
repz
aas
xchg
dec
pop
in
mov
into
sbb
icebp
sbb
out
call
push
test
sub
pop
std
jle
sbb
hlt
push
mov
sub
stos
mov
outsb
cmc
ja
adc
jae
loope
popl
xor
fbstp
call
aas
mov
scas
sub
cmpsb
lahf
jno
and
and
sbb
lea
fldl2t
stos
loop
out
sbb
push
insb
pop
push
push
xor
popf
in
mov
sti
add
nop
je
cmp
push
js
jmp
dec
xor
ret
and
mov
fisttpl
lods
fstpl
push
xchg
rorl
outsl
out
xor
or
fcmovbe
je
push
inc
cmp
loop
popf
jbe
and
bound
add
int3
movsl
xor
cmp
cmp
xchg
mov
imul
dec
test
sbbb
cltd
pop
movsl
xchg
les
jle
cmp
mov
test
xchg
mov
or
mov
adc
shll
ss
xor
mov
sbb
xor
adc
nop
addr16
pop
rorl
sub
sub
icebp
into
pushf
sbb
les
jae
rorl
inc
test
xchg
daa
fldenv
xchg
cmc
mov
imul
in
sub
cltd
inc
pop
add
mov
roll
jge
test
and
cmp
notl
jno
das
push
js
data16
dec
cmp
mov
lret
in
dec
pop
cmc
add
loope
mov
mov
incl
mov
lods
dec
push
scas
gs
pop
mov
cltd
test
movsl
pop
hlt
ja
scas
push
jle
xchg
cmp
ss
dec
and
dec
insl
pop
pop
mov
test
pop
repnz
fists
dec
dec
xlat
pop
stc
xchg
sbb
out
in
mov
xchg
jmp
cld
mov
push
comiss
out
enter
mov
repz
std
pop
mov
mov
cli
fnstcw
dec
repz
mov
aad
push
cltd
mov
decl
and
xchg
ret
ljmp
push
ja
mov
add
xor
fwait
add
mov
popf
xchg
mov
and
sbb
rclb
fdivrl
mov
pop
pop
into
ficoml
lahf
fnstsw
stc
jecxz
push
adc
fs
daa
or
cmc
ss
inc
outsb
push
test
aam
xor
rorl
scas
mov
jb
orl
mov
ss
sti
mov
and
and
in
fisubrs
rol
js
fmuls
adc
ja
test
jb
mov
inc
test
das
loop
inc
outsb
sahf
cmp
aaa
cmpsb
lahf
sahf
fcoml
enter
cmp
mov
xor
pop
ret
jl
in
das
xchg
iret
sub
push
jle
pushf
pop
xchg
nop
sub
jge
fildl
lret
notb
sbb
cmp
adc
lods
js
js
std
pop
ret
adc
pop
ret
lcall
and
jno
jo
enter
inc
xchg
mov
jg
rcl
inc
add
mov
out
fwait
adc
xchg
mov
push
dec
or
add
int3
dec
sarl
add
or
sbb
scas
ljmp
sub
xchg
scas
fisubrl
or
sahf
ss
jo
loopne
negl
sub
mov
jno
jmp
or
mov
sbb
fisttpl
das
inc
sti
les
pusha
lcall
pop
push
push
add
call
lods
cmp
xchg
pop
aaa
push
rcrl
sub
sbb
in
in
ret
stos
incl
data16
xchg
cmp
je
pop
sbb
push
sub
pushf
call
xchg
dec
mov
jg
roll
xchg
mov
or
cmpsl
adc
lret
popa
shrl
hlt
xor
pop
cld
adc
or
pop
xor
sub
pop
hlt
mov
repnz
fimull
mov
popa
sbb
sahf
scas
jp
push
or
inc
jecxz
into
sub
stos
sub
push
aad
test
push
pop
pop
pop
pop
out
xchg
push
jle
sahf
mov
or
insb
jbe
ficoms
xor
push
shlb
loope
adc
aas
int3
pop
xchg
mov
xor
aas
mov
sbb
lcall
sbb
fwait
sub
js
testb
sbb
shl
jnp
jp
mov
push
int
mov
sub
lret
adc
add
mov
out
push
sahf
ds
fstpl
adc
mov
or
or
add
sti
xor
bswap
fxch
lret
out
stos
jno
cmc
dec
arpl
mov
subb
sub
push
in
fstpt
push
push
jmp
xlat
loope
xor
stc
xchg
push
cmp
fbstp
mov
inc
pusha
and
shlb
mov
or
or
push
sbb
lahf
shlb
xor
iret
hlt
adc
cli
orb
dec
loopne
or
adc
aaa
sbb
fists
movsb
jg
xor
dec
push
fsts
add
xchg
negb
push
xorl
call
xchg
push
repnz
mov
out
jle
dec
or
add
aam
and
pop
cltd
rorb
shl
jge
sub
sub
jecxz
fadds
pushw
cmp
sbb
xchg
das
mov
add
enter
jnp
js
loop
add
outsl
mov
idivb
mov
test
movsl
jl
inc
sub
mov
xchg
sub
cmc
rcrb
subl
ror
add
push
frstor
xor
fimull
ds
adc
daa
fsubs
addr16
int
cld
sti
fsubrs
push
enter
dec
cmp
mov
cmc
hlt
mov
mov
sti
inc
add
push
xor
test
dec
into
sub
mov
je
imul
scas
jb
mov
mov
scas
fdivs
xchg
add
repnz
xor
pop
lahf
lds
sbbl
nop
ss
push
fisubs
sbb
and
inc
arpl
repnz
rcll
push
scas
add
or
fptan
push
push
mov
inc
jno
cmp
aam
data16
inc
scas
add
fiadds
cmpb
lock
aad
cmp
inc
dec
inc
inc
add
jg
add
or
adcb
adc
lock
mov
mov
mov
mov
outsb
ret
clc
movsl
jns
push
clc
imul
mov
dec
mov
cmp
add
mov
pop
sbb
cmp
sbb
into
mov
mov
daa
xchg
xchg
std
jo
or
jg
pop
push
jo
mov
std
sub
jmp
loope
stc
cmp
xchg
mov
je
add
div
sbb
cmp
mov
xor
imul
pop
in
push
jle
pop
call
repnz
imul
cltd
cmpsl
mov
arpl
inc
mov
sbb
mov
cmpsb
loop
stos
xchg
in
pushf
rolb
push
mov
frstor
jmp
xchg
ror
xlat
mov
xor
pop
sti
scas
mov
cltd
clc
stc
lods
stos
mov
addr16
cltd
xor
out
stc
imul
out
push
repnz
imul
imul
shrl
pop
fs
repz
ds
lds
popa
mov
test
mov
xchg
pop
fimuls
out
popa
sub
cmpsb
cmp
test
outsl
xorl
xor
sbb
lea
and
push
insl
add
rol
ret
in
inc
fcom
lret
pop
loopne
pushf
enter
outsb
mov
mov
mov
xchg
push
out
dec
jno
cs
enter
and
adc
sti
xor
add
clc
push
test
call
sub
out
or
divl
jo
into
or
adc
inc
imul
inc
outsl
xor
inc
roll
or
les
xchg
rclb
fst
xchg
test
and
lods
adc
aaa
roll
push
in
jecxz
xlat
push
shrb
fisttps
sbb
pop
les
mov
or
sahf
pop
test
shlb
and
leave
ds
inc
les
rorl
sbb
add
cmp
or
fld1
jae
movsb
or
inc
je
adc
jns
cmp
or
lcall
arpl
jb
sub
stc
enter
push
out
test
pushl
aas
fldt
loopne
mull
xchg
mov
jbe
sub
sbb
push
leave
aas
out
or
into
aam
cltd
pop
xchg
sub
pop
add
sbb
xchg
insl
push
pop
xchg
in
xlat
mov
stos
sbb
or
or
in
lods
mov
push
and
scas
aas
insl
stos
test
pop
pop
clc
bswap
inc
jmp
mov
jnp
lds
cli
adc
xchg
inc
cmpsl
push
mov
dec
mov
mov
lods
and
les
dec
pop
jns
outsb
lods
mov
fcompl
cmp
ja
add
mov
mov
pop
popa
pop
inc
mov
add
cmp
insb
lret
push
mov
pop
jp
push
and
enter
lahf
daa
aam
in
andl
xchg
pushf
jle
mov
testb
mov
fcoml
or
jns
ror
xor
mov
loopne
stc
fiaddl
inc
das
pop
imul
pcmpeqd
loopne
loop
add
inc
sbb
mov
sarl
icebp
add
es
pop
mov
mov
add
sbb
enter
inc
jnp
movsb
cltd
inc
cmp
mov
stc
xor
cmp
sbb
pusha
jae
adc
in
aas
jge
outsl
sub
mov
inc
scas
xor
out
inc
xchg
add
addr16
pop
xor
shll
fwait
les
jno
and
orl
jp
mov
add
sbb
adc
push
dec
xor
fnstenv
push
mov
and
scas
mov
inc
in
push
mov
inc
add
jno
insb
loop
cltd
icebp
dec
cwtl
fisubs
push
mov
and
add
adc
adc
mov
enter
dec
fnsave
js
adcb
adc
cwtl
clc
push
mov
sub
in
or
stc
adc
sub
popa
xchg
shl
mov
dec
lock
xchg
xchg
sti
sti
mov
or
xor
jp
sbb
test
and
les
pop
xchg
pop
in
cltd
ret
cmp
dec
jle
popl
daa
or
adc
xchg
stos
addr16
stos
cmp
out
cmp
pop
sbb
mov
or
data16
dec
idivb
fistpll
jle
arpl
and
pop
or
and
notb
inc
sub
or
pop
lds
cmp
andb
inc
cmp
push
shlb
inc
in
out
mov
xor
cmp
lretw
out
inc
outsb
jecxz
pusha
mov
xlat
jmp
xchg
pop
rep
or
mov
push
idiv
fsubrs
test
push
mov
add
lods
in
pop
aad
movsl
xchg
test
leavew
xor
adc
or
test
hlt
dec
and
out
xor
outsb
cmp
xchg
lcall
push
push
or
cmc
adc
jge
xor
pop
loopne
jnp
sbb
pop
adc
scas
es
add
das
aad
add
loop
sbb
jp
sub
gs
sbb
jo
mov
enter
enter
mov
aad
lods
imul
nopl
push
repnz
mov
pop
das
call
shr
or
movsl
es
jno
bound
out
cmp
lcall
pop
sub
pop
adc
add
sbb
mov
popf
shlb
jo
loop
in
loope
adc
xchg
xor
cli
bnd
pop
cmp
pop
or
out
jno
icebp
cs
rcl
rclb
ja
mov
push
pop
daa
movsb
sbb
xor
push
and
push
jo
or
test
xchg
fwait
cmc
test
loop
add
xor
push
mov
cmp
fidivl
loop
jge
push
jmp
cld
out
mov
btr
push
into
mov
lds
inc
jecxz
outsb
lahf
jle
xchg
sahf
ljmp
dec
sub
int3
loop
cltd
xor
mov
adc
stc
pop
lds
pop
jae
mov
mov
push
imul
lahf
js
sbb
mov
push
cwtl
movntq
out
pop
insl
mov
adc
ljmp
add
lods
icebp
jl
stc
pop
sub
in
outsb
xchg
mov
mov
fisubrl
test
pop
leave
fxch
mov
clc
push
lods
xor
dec
mov
out
ds
adc
loop
mov
adcb
mov
in
mov
insl
mov
push
idivl
cmp
sbb
sbb
push
loope
imul
push
or
in
mov
dec
in
movb
sub
aad
mull
mov
xchg
push
sub
sbb
adc
jno
cmp
cmp
add
lock
popa
addr16
cmp
push
pop
es
xor
lret
icebp
cwtl
push
into
fstpt
arpl
mov
stos
and
jge
loopne
or
shll
and
mov
pop
push
xchg
lahf
jb
cwtl
icebp
sub
addr16
insb
push
repnz
cmpsl
xor
add
jnp
add
repz
sbb
push
cwtl
stos
cmp
aad
in
cmp
int
xor
in
daa
inc
out
data16
insb
test
push
insb
lods
fnsave
xorb
mulb
stc
lahf
imul
push
in
call
or
mov
js
mov
shlb
add
inc
or
dec
dec
lahf
jp
cmp
cmp
leave
xor
pop
pop
cmp
filds
inc
js
bound
sub
sbb
addr16
fdivr
mov
or
fsubrp
enter
xchg
dec
and
xchg
fnstsw
outsb
inc
sbb
push
das
std
hlt
cs
ljmp
push
fdivs
dec
fs
sub
jns
stos
divl
shll
mov
and
dec
xor
mov
xchg
shll
sbb
scas
mov
ret
lahf
push
cmp
mov
add
xlat
mov
into
movsl
les
fistpll
ja
mov
push
mov
pop
cmp
movb
fldcw
scas
fdivs
jl
fwait
jg
pop
sbb
and
mov
mov
cltd
cs
es
scas
xor
stos
ret
subb
ficompl
outsb
lret
repz
loope
rolb
push
rclb
inc
leave
cmpsl
add
mov
jle
test
adc
xor
inc
ret
xor
jne
push
ret
and
xor
nop
lea
push
sbb
sub
add
add
fdivl
cltd
repz
das
cmp
adc
cmpsl
dec
push
sub
xchg
test
mov
xor
mov
pop
ja
mov
hlt
jbe
cwtl
fsubl
frstor
addr16
cltd
out
pop
xor
pop
mov
inc
sub
repz
cmp
mov
adc
pushf
lods
repnz
pop
ror
dec
dec
fiadds
xchg
popa
pop
pop
adc
repnz
push
jns
bound
mov
add
mov
fisttpl
mov
and
outsb
sarl
pushf
shl
pop
jp
dec
and
fadds
rcrb
xchg
push
jno
mov
push
cli
xor
cmp
lock
or
fmull
movlps
jg
ret
out
cmpsb
lock
pusha
imul
sti
addr16
stos
scas
lret
jmp
push
stc
popa
dec
jp
xor
push
aam
arpl
and
mov
cmp
lea
pop
xor
xchg
fwait
repz
sbb
mov
adc
pop
lret
mov
xor
mov
fwait
lods
cld
pop
sti
loop
orb
pusha
jg
jl
dec
pmuludq
jge
sar
xchg
sub
aad
orl
pop
adc
dec
adc
add
sbb
or
push
lods
mov
sub
jb
jno
enter
pusha
sarl
rol
lock
fbld
arpl
fadds
inc
movsb
inc
mov
pop
aam
psubw
pop
xor
mov
out
sbb
or
fincstp
push
xchg
sti
xchg
inc
call
lcall
sub
cld
test
popf
adc
mov
scas
inc
xchg
loop
ret
cmpb
test
sub
push
mov
fisubrl
fwait
jle
outsl
ret
push
imul
and
ja
jae
add
cmpsb
stos
inc
stos
mov
xor
lods
add
push
sti
or
sub
outsb
push
cmp
mov
push
push
rcll
rorb
mov
adc
push
mov
jae
jl
pop
mov
and
in
mov
fmull
lods
pop
jecxz
mov
dec
arpl
push
cwtl
leave
cmp
pop
xchg
stos
push
sub
push
pop
mov
pushf
dec
lret
push
movsb
mov
scas
es
mov
adc
inc
pop
mov
mov
dec
or
subb
sub
leave
cmpsb
fbstp
fisubs
sahf
call
mov
dec
icebp
jge
aad
push
inc
mov
insl
ret
add
pop
adc
cmp
popa
sbb
fdiv
push
sub
lock
and
bound
cld
cmp
dec
aaa
fcmovnbe
jge
fcoml
cmpsb
pusha
mov
sbbl
sub
xor
enter
mov
and
adc
fnstenv
push
xor
shll
or
jo
add
imul
ret
lds
popa
and
je
subb
scas
push
sub
adc
repnz
aas
inc
cwtl
push
insb
dec
sbb
xor
push
mov
inc
es
mov
push
push
push
mov
xchg
hlt
xchg
xchg
or
cmp
cmc
xchg
dec
cld
andl
das
cmp
xchg
adc
pop
mov
popa
test
jecxz
pop
pop
xchg
push
lahf
into
pop
notl
cmp
pushf
clc
mov
push
sub
clc
or
pop
push
xor
adc
pop
sub
jne
fwait
sahf
adc
jle
jnp
or
inc
pop
scas
mov
push
lods
xor
jg
js
cli
sbb
xor
xchg
lock
mov
xor
in
sbb
ss
loopne
mov
add
in
test
mov
bound
gs
dec
ljmp
in
or
push
gs
inc
or
stc
loop
pushf
and
xchg
aam
pop
sub
inc
adcl
dec
inc
jno
lods
add
int3
shlb
fwait
cmpsb
cli
out
icebp
cmpl
fiadds
add
mov
push
push
iret
add
lock
cmp
sbb
sbb
in
ja
dec
outsl
cmp
jo
push
fistps
out
mov
in
pop
ret
fsubrl
sbb
pop
jne
pop
inc
mov
jge
enter
gs
sub
push
out
add
addr16
shll
inc
scas
add
pop
lahf
gs
cmp
loopne
imul
mov
push
ret
sbb
mov
call
test
inc
pop
mov
out
mov
nop
cli
arpl
cmp
addl
addr16
test
xchg
jb
cmp
mov
pop
jne
mov
andl
popl
pop
rcll
rcr
test
enter
stc
mov
jb
sbb
clc
xchg
sbb
mov
in
and
fistps
add
fcmovnbe
loop
ret
inc
and
dec
push
fdiv
shll
jp
ds
dec
lods
std
push
mov
iret
xor
dec
cmp
lret
out
dec
cmp
loopne
jmp
es
or
arpl
pop
sahf
repnz
mov
and
repnz
arpl
mov
pop
and
dec
arpl
xorl
add
add
sbb
dec
inc
aas
add
fnsave
aad
and
sub
bound
lods
pop
xlat
push
out
and
rcr
movsb
adc
jo
dec
pop
jo
pop
xchg
mov
sub
add
jmp
mov
pop
popl
loope
cli
cmp
and
adc
pop
jmp
xor
lods
add
mov
out
out
movsl
dec
xchg
mov
shlb
push
lea
sbb
in
push
mov
imul
insb
shlb
pushf
arpl
sub
and
int
and
jnp
xchg
sbb
in
xor
outsl
add
sar
inc
jge
push
pushf
popa
sbb
stos
arpl
stc
inc
jns
xchg
icebp
jl
loope
dec
pushf
jbe
push
xor
bound
adc
daa
pop
mov
or
push
or
leave
and
cmc
adc
movsl
pop
dec
test
shlb
push
decb
mov
int
sbb
jmp
lods
xchg
xchg
sub
ror
pusha
pop
shl
sar
mov
xchg
jae
lds
mov
sbb
outsl
inc
jo
inc
loopne
scas
mov
mov
pop
adc
fmull
or
push
repz
lret
mov
mov
mov
sbb
jl
aam
mov
pop
jnp,pt
nop
dec
stos
pusha
je
bound
xor
cltd
test
push
and
pop
inc
sbb
mov
dec
and
mov
jmp
lea
int
stc
mov
js
ffree
pop
xor
popf
sub
pop
movsl
mov
mov
jb
and
dec
mov
fldcw
mov
jg
pop
stos
fisubrs
xchg
movsb
mov
add
imul
test
add
push
jg
inc
add
mov
xchg
sub
add
and
fisubs
or
fistps
pop
mov
es
adc
cmp
jmp
pop
das
mov
in
inc
ficomps
jbe
negb
mov
lret
test
and
shr
popl
std
rolb
push
xor
or
dec
testb
or
ja
push
push
sub
fnstcw
icebp
inc
pop
js
add
inc
std
xor
cwtl
scas
add
inc
popa
insb
repz
nop
test
cmp
xor
insl
jecxz
push
es
adc
in
fadds
mov
les
and
sub
or
sub
or
xlat
cmpl
test
jb
incb
outsl
in
fidivrl
rcl
add
mov
pop
hlt
pop
xchg
mov
sub
movsl
and
cmpsb
shld
add
out
aaa
je
jp
cmpsl
rcll
pop
xchg
mov
lds
cld
cmp
inc
pop
ss
inc
jo
cmpsb
cmc
aaa
sbb
cli
shrb
in
out
sub
push
add
pop
movsl
push
cwtl
mov
cmpsb
push
jmp
mov
iret
adc
out
jg
sbb
mov
cmp
dec
jle
scas
stos
cmp
or
push
repnz
and
ss
pop
repnz
cmc
inc
sbb
push
daa
pop
arpl
lods
mov
or
ret
push
inc
pop
jle
sub
fsubl
sbb
sbb
xor
xchg
cmpsl
jbe
out
leave
popf
and
out
or
pop
stc
jae
jl
xchg
mov
aam
and
imul
shll
addr16
jb
pushf
out
mov
ret
shlb
ret
push
fidivs
ss
lea
mov
mov
adc
jbe
cli
pop
dec
jb
mov
loop
or
push
mov
aaa
sub
sbb
clc
lea
stc
push
pop
or
xor
cmp
mov
dec
jg
cmpl
mov
dec
fidivrl
insl
mov
test
xor
mov
mov
aad
dec
xchg
loopne
cmp
or
popa
fisttps
add
or
or
jp
cwtl
adc
dec
xchg
xchg
iret
nop
mov
mov
dec
mov
jbe
dec
mov
faddl
dec
mov
rcrb
bnd
sbb
arpl
call
es
mov
arpl
je
popa
lods
and
fstpt
aas
pop
fstps
jge
cwtl
shrl
dec
adc
cmc
xchg
xor
dec
dec
jmp
mov
fcoml
scas
sbb
push
movsb
mov
imul
fs
inc
pop
cmp
inc
ja
and
push
cmp
fldenv
or
inc
out
cld
mov
test
push
inc
cmp
cmpsb
adc
sbb
mov
or
xchg
xchg
and
loopne
hlt
pop
sub
cmp
xchg
jnp
daa
xchg
push
cmp
inc
jo
pusha
pop
mov
rcll
lds
mov
jb
cwtl
js
xor
lods
mov
jno
lods
jae
add
jmp
ja
clc
xchg
and
sbbl
idivl
fsubrs
xchg
mov
sbb
xchg
stos
mov
mov
mov
pop
shlb
mov
inc
sub
fisubrl
mov
push
subb
cltd
pop
das
outsb
stc
add
add
nop
lcall
add
ja
rolb
ds
roll
sbb
add
push
cmc
hlt
or
xor
idiv
mov
and
jo
pop
jle
cli
je
push
gs
mov
cmp
mov
cmc
inc
dec
mov
cmpsl
dec
and
bound
pop
sbb
push
call
add
call
mov
je
ja
popf
fisttps
sub
idiv
sbb
insb
loopne
adc
sub
in
sbb
sarl
cmp
fucomp
aad
popa
rolb
add
lret
dec
shr
dec
loopne
repnz
adc
sbbb
sub
inc
mov
clc
pop
pop
pop
pop
or
pop
bound
repnz
sbb
add
das
out
imul
pop
pop
ficompl
insb
movsb
dec
ds
mov
and
in
into
shrl
sahf
sbb
lods
fnstcw
push
adc
xor
jo
add
nop
dec
jb
or
pop
cmc
jns
and
movsl
mov
ret
xor
and
mov
add
les
push
js
sbb
gs
repz
jle
push
adc
sbb
inc
sub
in
xlat
or
sbb
lods
mulb
and
dec
xchg
int
int3
arpl
mov
or
mov
cli
push
add
into
sub
repz
and
mov
dec
pusha
cwtl
push
and
rclb
adc
out
and
xor
je
pop
dec
add
orl
add
or
insb
pop
jmp
daa
test
and
sbb
cli
pop
and
movsb
adcl
dec
sbb
jmp
repz
mov
inc
cli
pop
add
sbb
add
cmp
sbb
cmp
movsl
xor
scas
fisubrs
lcall
adc
out
mov
mov
push
filds
lea
pusha
lahf
dec
mov
in
and
clc
mov
inc
jae
pop
mov
add
add
xor
push
call
sbb
rep
movsl
pop
pop
sbb
pop
cwtl
loop
sub
aaa
pushf
push
lea
inc
inc
pop
xor
and
pop
ficoms
and
iret
push
push
and
xchg
mov
data16
sub
push
cld
cmc
add
stos
or
outsl
shl
jo
fsubrl
mov
inc
pop
mov
in
imul
pop
pop
pop
sti
add
mov
cs
add
jmp
jecxz
jp
mov
lret
pop
mov
cli
int3
dec
sahf
test
mov
pushf
xchg
insb
xchg
fbld
push
inc
cmpsb
dec
arpl
inc
leave
int
jae
mov
inc
mov
sub
mov
jmp
or
add
adc
xchg
mov
ja
dec
inc
fcmovnbe
cmp
cmc
dec
sub
outsl
inc
or
jge
jecxz
sbb
push
inc
mov
pop
fwait
enter
dec
pushl
cld
out
repnz
nop
mov
cmp
aad
push
fisubrl
mov
sbb
sbb
pop
and
in
push
mull
rolb
cmp
popa
outsl
hlt
int3
out
xor
fimuls
lds
mov
pop
sahf
inc
add
fstpl
jmp
das
gs
test
jg,pt
das
movl
xor
sahf
cld
shrl
xchg
into
xchg
jmp
lahf
rcrl
xor
inc
fsubrs
dec
fstl
jb
mov
mov
repnz
xor
dec
lret
dec
lds
lret
pop
mov
stos
xor
mov
sbb
mov
jnp
xchg
mov
xchg
icebp
movsb
pop
leave
mov
dec
sahf
xor
sar
outsl
push
jge
int3
add
enter
xchg
pushf
pop
inc
sbb
or
or
sbb
pop
fdivp
inc
mov
mov
or
fidivrs
imul
scas
hlt
mov
inc
mov
xchg
scas
inc
mov
shr
mov
pop
aaa
add
je
aaa
loopne
aad
gs
arpl
pusha
jge
int3
mov
test
push
and
fwait
xchg
cwtl
fimull
aaa
fisttps
out
mov
mov
fwait
sub
pop
push
dec
pop
jae
imul
adc
pop
xchg
daa
pop
repz
fidivrs
out
lds
adc
test
xchg
mov
out
inc
gs
mov
movsb
icebp
push
in
xchg
inc
mov
je
or
xor
xchg
js
fistl
fdivs
std
xor
or
or
add
add
scas
ja
xchg
mov
dec
adc
cwtl
ret
aam
in
cs
or
mov
mov
bound
mov
ja
cmpsb
pop
push
jmp
loopne
add
mov
lcall
adc
ja
pop
mov
mov
std
push
das
in
repz
xchg
les
mov
pop
dec
shlb
lock
lds
xchg
mov
mov
popf
popf
roll
frstor
pop
sbb
xchg
dec
mov
fbstp
jae
enter
pop
cmp
jno
in
mov
add
push
jecxz
mov
ret
xchg
jne
mov
nop
cmc
add
out
add
or
mov
ret
push
shr
adc
dec
ss
pop
xchg
mov
ret
test
push
xor
push
adc
in
add
clts
sbb
push
test
mov
push
loopne
lcall
jb
js
icebp
sbb
test
repz
xchg
cltd
mov
jg
xchg
inc
sbb
xor
shll
mov
testb
xor
mov
inc
mov
into
iret
mov
cmc
jp
pop
imul
add
clc
nop
cmp
push
push
sbb
fbld
addr16
in
mov
and
lock
scas
mov
daa
add
jae
mov
jbe
adc
scas
push
or
mov
sbb
push
pop
and
loop
ja
ret
dec
pop
push
push
f2xm1
sub
mov
jle
sbb
jmp
cmp
lret
insb
jle
add
cmpsl
mov
adc
or
xor
outsb
in
mov
shlb
cs
cmpsl
add
cmpsl
rcl
cmp
out
sub
stos
ds
add
fs
cmp
jl
mov
xchg
cmp
dec
ja
pop
inc
xor
or
jp
jp
dec
pop
cmp
add
icebp
sbb
cld
je
out
dec
pushf
lret
ficomps
xchg
hlt
out
outsb
cmpsl
loopne
std
and
sbb
out
flds
pop
mov
imul
adc
jnp
pop
jnp
mov
jno
gs
fidivrs
call
or
xor
and
sub
xchg
roll
cmpl
jo
rorb
jnp
rclb
pop
dec
out
push
cmpsb
mov
iret
das
mov
push
das
mov
jle
popl
movsl
insb
xor
clc
shr
test
jmp
sbb
fbstp
mov
inc
sbb
cmpb
ja
mov
sbb
pop
mov
push
subl
mov
mov
push
mov
and
sbb
insb
xchg
sbb
mov
popa
sub
xchg
lret
call
clc
jle
sub
adc
aam
jmp
stos
add
xchg
jnp
and
ds
in
outsl
adc
mov
fsub
cmp
ljmp
add
mov
xor
sti
int
cmp
sub
add
test
bswap
xchg
fldenv
fdivp
jae
fsubrs
mov
push
inc
aas
les
scas
fs
jb
out
cs
inc
inc
mov
adc
cmp
lock
ret
dec
int
mov
xchg
out
aas
sub
mov
dec
pop
es
sbb
outsb
dec
lea
cwtl
mov
xchg
jp
call
jno
mov
inc
pop
out
ds
mov
divb
xchg
cli
in
leave
and
push
into
ja
jno
push
mov
popf
sbb
and
jbe
mov
xor
ja
clc
or
movsl
sub
mov
jne
lods
cmp
addb
int3
jae
mov
mov
sub
mov
loopne
insl
mov
mov
xchg
push
icebp
repnz
jbe
dec
ret
xchg
jge
test
xchg
xchg
mov
jge
pop
pop
pop
aaa
shlb
add
sub
xchg
jmp
xchg
movsl
adc
add
scas
xor
mov
mov
jns
iret
cwtl
sbb
adc
addr16
pusha
mov
xchg
rcrb
jl
loopne
loop
xchg
fisubrl
sub
subb
lds
push
mov
pushf
addr16
std
or
mov
jmp
sbb
mov
cmp
cmpps
mov
pop
sbb
cwtl
in
push
sti
add
call
and
sub
mov
cwtl
subl
sbb
jne
data16
aas
leave
xor
adc
xor
into
test
insl
sub
pusha
fisubrs
mov
fwait
push
push
leave
xchg
mov
pop
daa
jne
fisubrs
sbb
sbb
mov
mov
in
je
cmpsl
aad
and
jbe
cmc
add
add
dec
gs
dec
je
fs
cld
add
loope
dec
or
or
xor
pop
adc
movsb
lods
imul
add
lock
imul
mov
jecxz
pop
js
mov
mov
mov
stos
scas
outsl
mov
push
fsqrt
mov
push
mov
pop
cmc
shrb
mov
popf
cmp
mov
btc
jecxz
fildll
repz
pushf
insl
mov
pop
shr
lret
inc
pop
andl
cmp
decl
int3
cmp
popa
xlat
scas
outsb
mov
xchg
icebp
scas
mov
or
cli
jnp
adc
outsb
adc
or
repnz
sbb
sti
imul
das
lcall
mov
gs
mov
adc
jbe
std
idivb
fbstp
push
mov
fcmovu
inc
lock
push
mov
adc
jbe
scas
mov
ja
test
in
daa
xlat
inc
imul
xchg
nop
inc
fstl
jns
jbe
repnz
mov
add
or
jmp
mov
repnz
testl
fldcw
mov
test
mov
inc
faddl
std
xchg
test
out
cld
push
mov
pop
cmp
cmpsl
mov
testb
sub
leave
je
fidivrl
push
sub
icebp
mov
enter
fwait
add
sbb
jl
xchg
add
sbb
jns
push
daa
neg
popf
lock
xchg
add
and
addr16
and
cmpsb
sbb
or
sub
adc
fisubrl
jnp
cld
push
xor
iret
rcrl
fiaddl
jo
mov
das
shr
test
push
xchg
rcl
adc
mov
in
xchg
stos
fcoml
lods
ljmp
gs
xchg
cli
cmpsb
lea
push
nop
and
push
pop
sarl
xchg
cltd
push
push
fdivl
out
xor
xor
je
adc
rclb
scas
jns
mov
lods
adc
adcl
lret
push
push
sub
inc
cmpsb
mov
pop
daa
cmpb
in
pop
pop
imul
jle
push
rcl
add
pop
mov
scas
add
sub
jae
inc
sbb
iret
adc
scas
or
arpl
mov
and
cmpsb
push
sbb
lods
add
push
sub
mov
xchg
loope
add
or
cmpsb
pop
xchg
mov
sbb
das
add
add
or
sub
in
jp
xchg
xchg
out
and
sub
xor
fcomp
dec
daa
lea
jl
aam
inc
mov
push
and
cmp
enter
push
adc
jg,pn
jg
xchg
xchg
xchg
pop
shl
dec
mov
mov
pop
mov
call
cmpsl
mov
frstor
cli
pop
lahf
push
add
and
push
xor
xor
nop
xlat
rol
scas
jns
adc
jne
mov
adc
fcomp
rcll
mov
mov
je
mov
lahf
incl
addl
xor
add
popa
aad
ss
nop
fbld
mov
adc
inc
aam
imul
ret
xchg
adc
mov
popf
xchg
int
xor
sub
stos
inc
in
or
dec
pop
nop
sub
sub
push
sarb
popa
clc
and
outsl
sub
push
inc
movsb
mov
mov
mov
loop
cmp
dec
sub
popa
dec
mov
scas
inc
outsb
test
adc
enter
jbe
jg
or
popa
push
push
xor
test
mov
fmull
mov
into
ret
mov
jl
loop
or
mov
add
pop
adc
fstps
filds
xchg
sub
jae
sbb
popa
jl
stc
and
push
lods
mov
std
cwtl
pop
push
pop
dec
xchg
loope
push
and
inc
jecxz
push
cmp
jp
loope
mov
dec
mov
jns
ds
dec
and
xchg
sub
ret
sbb
fisttpll
adc
arpl
imul
int3
and
imul
cmpsl
out
and
cltd
jae
rcr
jp
out
mov
movsb
xor
inc
cmpsb
lods
outsl
incl
fdivr
and
addr16
test
insb
add
scas
aaa
mov
stos
mov
or
mov
xchg
fs
and
lcall
lds
cs
test
call
pop
mov
pop
mov
jle
das
mov
mov
jno
dec
test
xchg
jo
xor
int3
inc
xor
cli
ds
test
add
mov
and
mov
cmp
in
mov
xchg
mov
add
rclb
test
in
int3
clc
jl
int3
sub
dec
sarb
in
les
or
ret
cmp
cld
loope
push
pop
inc
push
mov
or
lock
mov
jno
je
cmp
cmpsl
mov
popf
jle
aam
sahf
mov
adc
lahf
inc
out
mov
cmp
or
and
adc
loope
adc
insl
fisttpl
xchg
or
push
sbb
pop
jo
roll
jl
xchg
in
insb
xchg
jae
icebp
fwait
rcr
xchg
push
loop
push
add
jl
clc
mov
and
or
int3
ficomps
pop
adc
sub
imul
cld
jno
ret
dec
lock
sarl
and
fsubs
cmc
mov
inc
inc
and
stos
in
jecxz
xchg
sbb
lods
mov
xor
jno
shll
cmpsl
fwait
push
ret
fnsave
inc
daa
mov
ficompl
addr16
push
pop
adc
xor
daa
filds
mov
dec
imul
ret
xor
scas
pop
data16
push
cmpsb
push
mov
adc
push
mov
std
je
dec
inc
jecxz
stos
stc
cmp
out
inc
inc
out
scas
out
mov
cs
addr16
out
rclb
cli
dec
sbb
adc
filds
neg
nop
cli
push
fimuls
jmp
jp
dec
rclb
fwait
mov
mov
mov
add
lds
adc
push
test
arpl
push
push
dec
jge
stos
inc
nopl
movsl
lock
adc
icebp
xchg
xchg
cmc
xchg
mov
aam
pop
and
repz
and
adc
adc
and
sub
imul
sub
sub
or
sub
sub
lds
jl
les
pop
jne
movsb
fldcw
lock
adc
and
xor
pop
pushf
dec
sahf
sarl
xor
cwtl
and
arpl
xchg
or
clc
in
push
and
ja
in
xchg
xchg
sub
pop
sbb
sbb
pop
fwait
pop
mov
mov
pop
cmp
adc
stc
adc
ret
ret
sub
mov
ret
outsb
repnz
ljmp
js
lcall
arpl
iret
stc
ret
lahf
jmp
lods
jl
mov
add
jmp
popa
das
mov
shlb
lods
jp
mov
mov
mov
inc
fwait
push
repz
push
push
xchg
cmp
sbb
pop
cltd
mulb
sub
dec
xchg
jns
stos
and
negl
in
inc
jae
mov
fcomip
dec
pop
ja
hlt
repz
insl
repz
mov
in
inc
inc
hlt
sub
mov
cld
loopne
push
in
xor
stos
xchg
pop
push
mov
dec
add
out
and
and
mov
adc
jbe
adc
and
jae
jge
mov
cmp
lret
mov
sbb
testl
push
sub
inc
mov
or
pop
dec
mov
sub
or
mov
xor
cmp
out
cmp
ret
fldl
int
xor
mov
pop
int3
pop
sbb
jno
xor
inc
call
xor
sub
jnp
jne
xchg
mov
or
bound
mov
enter
pop
imul
nop
fs
adc
adc
test
mov
pop
or
push
ret
mov
pusha
orl
addb
int
cmc
loop
sbb
orb
std
cld
and
adc
xor
rcr
iret
xlat
sahf
int3
push
or
jbe
mov
add
hlt
sbb
aad
imul
and
adcl
loop
pop
add
aas
or
pop
and
inc
clc
out
adc
call
ficompl
ror
mov
or
jl
ret
fnstsw
dec
push
in
sub
les
push
dec
scas
dec
mov
sbb
mov
xor
sub
insl
mov
mov
sub
test
and
xchg
in
mov
mov
lea
pop
sub
stc
xlat
or
rcrb
xor
popf
in
iret
jb
pop
and
fwait
jmp
sbb
mov
adc
rcll
iret
aam
xlat
test
out
dec
popa
shl
mov
inc
out
aam
adc
es
shll
test
jle
outsb
cmpb
and
lcall
jbe
popf
mov
sub
enter
insb
inc
scas
jo
ja
jne
pop
in
and
ucomiss
mov
repnz
mov
cmc
add
dec
cld
shll
loope
jp
ljmp
lret
sbb
sbb
in
int3
fiaddl
scas
icebp
add
mov
lods
sti
loope
int
repz
cmp
add
bound
mov
fistpl
in
cmc
aaa
fcomps
int
cmp
out
sub
fsts
fstl
pop
into
sbb
push
icebp
pop
in
adc
pop
dec
imul
unpckhps
xor
cld
pop
cmp
push
jbe
mov
aaa
mov
imul
mov
int3
fbld
cmpsl
lea
sub
adc
loop
filds
and
enter
or
pop
jmp
adc
add
xchg
and
jle
js
jne
xchg
jo
xor
test
mov
daa
lock
dec
fbstp
xor
add
sarl
imul
push
fscale
and
leave
inc
sbb
and
into
pop
fwait
test
xchg
cld
in
mov
mov
jo
aas
mov
hlt
shlb
push
dec
dec
sbb
enter
push
imul
mov
push
xchg
fmull
in
mov
jno
jns
dec
sbb
movsl
sbb
dec
imul
and
mov
mov
dec
jns
orb
sbb
dec
jg
call
test
cmp
fcom
inc
add
dec
js
cmp
push
dec
cmpsl
aas
dec
in
xor
bts
in
push
ja
outsl
cli
mov
adc
add
ds
mov
lods
pushf
imul
out
push
into
mov
inc
cltd
lret
loope
mov
cmp
repnz
test
xchg
stc
pushf
in
daa
fists
mov
add
and
push
sub
fiadds
std
pop
lods
mov
scas
pop
fwait
aas
mov
inc
push
or
and
cld
leave
sub
scas
test
pop
jp
sub
and
cmpsl
xchg
adc
sti
pushf
bound
push
lock
adc
ficomps
dec
mov
push
push
sbb
and
mov
dec
pushf
pandn
inc
xchg
popf
scas
out
lods
cli
test
mov
lock
hlt
jg
ds
icebp
adc
mov
jle
repnz
dec
and
or
and
sti
sub
stos
mov
pushf
mov
insb
movsb
jge
or
stc
mov
pushf
addps
insb
mov
call
in
xchg
cmp
hlt
mov
xchg
xchg
lods
cmp
sub
leave
aas
std
sub
rolb
dec
pop
pop
rorb
dec
daa
sbb
mov
add
repnz
or
lret
cmp
add
jecxz
in
cmp
shrb
mov
and
push
lahf
stc
hlt
in
jle
cmp
das
cmpl
mov
test
jno
jbe
enter
or
nop
repz
adc
addr16
dec
scas
add
cmp
fbld
mov
push
popf
in
sub
pop
cmp
cmp
and
mov
popa
add
in
add
insl
xor
arpl
add
dec
mov
outsl
add
or
or
outsl
adc
sti
sub
mov
testl
test
lar
xlat
cmp
xchg
aad
push
lcall
dec
jle
movsb
mov
push
jnp
ljmp
pcmpeqb
inc
and
jo
inc
adc
dec
out
pop
cli
jo
inc
enter
iret
fnstenv
aas
popf
mov
cli
push
popf
jo
xor
fists
push
iret
push
sub
lea
outsl
sub
pop
dec
dec
jle
sub
dec
loope
or
adc
push
xor
and
into
ja
scas
rcl
mov
daa
stc
insl
mov
test
in
cmp
int
dec
mov
inc
outsb
push
aas
push
add
sub
pop
jp
push
add
push
pusha
xchg
xchg
xor
idivl
ljmp
push
int
sbb
or
sub
dec
lret
xchg
clc
pinsrw
adc
jge
mov
sub
fiaddl
push
cmp
imul
xchg
lret
cmp
inc
mov
adc
sub
cmp
mov
out
test
add
in
or
stos
add
sbb
or
and
in
imul
or
loopnew
and
dec
bound
or
add
arpl
sub
add
imul
sbb
lods
mov
nop
imul
in
mov
ret
jno
hlt
push
mov
cmp
pop
jnp
dec
mov
mov
adc
fsubrp
inc
cmp
mov
pop
cmpsl
mov
and
mov
inc
pop
cltd
and
jmp
or
sub
loope
inc
mov
test
pop
inc
into
hlt
shll
xchg
fstpl
xchg
ja
xor
enter
mov
inc
outsb
ljmp
int3
insl
and
mov
rolb
pop
push
inc
cmp
pop
rep
repnz
cs
fistps
stos
movsb
pop
adc
push
and
pop
push
sahf
jmp
push
loopne
push
aad
test
add
pop
dec
filds
les
mov
repz
add
mov
call
mov
push
aaa
push
ror
mov
enter
rcll
orb
jb
xor
push
out
push
jb
mov
inc
jmp
mov
dec
inc
sar
out
push
aas
outsl
cwtl
fs
test
rcll
lods
inc
loop
je
aam
scas
and
in
or
sti
shll
jo
aad
mov
xchg
push
add
push
aaa
movsl
add
jmp
mov
xchg
gs
in
xchg
insb
scas
fs
or
scas
jp
ds
scas
add
int3
inc
hlt
test
xchg
sbb
sub
in
sti
pop
adc
jmp
hlt
mov
add
popl
jo
xchg
xor
nop
loop
pop
xlat
or
stos
test
mov
sahf
rclb
inc
mov
mov
dec
leave
movsb
sub
movsl
mov
xor
out
leave
aas
sub
add
pushf
out
xchg
xlat
inc
mov
scas
rorl
fstps
addr16
lret
repz
hlt
add
or
cmp
in
and
lods
mov
dec
jmp
jo
sahf
sbb
mov
or
popf
jo
stos
xlat
dec
lods
push
push
mov
pop
cmp
push
or
xchg
out
imul
or
push
loope
repz
mov
popl
push
mov
sbb
xchg
push
ja
mov
loopne
lret
popf
xor
push
loopne
ss
insb
inc
push
mov
loope
sbb
mov
or
setae
push
dec
fiaddl
cmp
ja
lea
jecxz
xchg
mov
and
fwait
sarb
mov
push
ja
insl
or
dec
ss
inc
or
add
add
and
pop
jns
addr16
jmp
dec
js
sub
cld
mov
dec
out
lret
jmp
xlat
loop
inc
test
popa
push
popl
mov
repnz
cs
cld
or
adc
lcall
xor
xor
and
lds
stc
cmp
es
shll
mov
shll
cmc
sub
je
inc
fs
jnp
jae
adc
jle
or
cmpsb
popa
or
pop
pop
add
lea
outsl
jbe
mov
out
test
push
pusha
testb
bound
push
out
xor
pushf
sar
push
xor
dec
push
dec
ret
fsubp
xor
clc
int
ret
hlt
mov
movsl
mov
mov
lods
lcall
pop
and
movsb
aas
mov
cwtl
inc
and
xchg
add
jmp
adc
jl
sahf
sbb
insb
lock
pop
push
dec
mov
sub
nop
cmp
shrb
dec
or
shlb
lret
shlb
pop
outsb
add
insl
pop
iret
cltd
sbb
adc
je
out
cld
push
mov
mov
push
stc
push
push
ficoms
pop
lahf
sti
push
call
or
decb
icebp
pop
movsl
addb
cmp
inc
fcoml
out
mov
xor
inc
das
lret
xor
shll
sti
mov
int
rclb
imul
or
xor
ds
push
adc
mov
mov
sbb
add
dec
mov
cmp
mov
ds
lret
stos
xor
dec
add
inc
addr16
stc
mov
dec
cmp
xlat
hlt
rorl
mov
insb
addb
std
mov
adc
jno
cmpb
lcall
and
xlat
pushf
jmp
sub
lret
cmp
fcmovnu
shll
lods
mov
sarb
sbb
sbb
xchg
mov
movsb
inc
cmpl
fmull
lock
jo
and
cmp
push
sub
mov
xor
cmp
add
ficomps
pushf
lds
dec
lret
fs
lock
add
add
add
fcomp
fnstcw
lret
sub
ss
loopne
pop
cmp
leave
mov
test
dec
out
sbbb
test
arpl
fisttps
mov
adc
lahf
xlat
xlat
mov
add
lods
ljmp
adc
mov
push
fcomi
lcall
aam
addr16
mov
or
dec
pushl
jne
cmpsb
push
sbb
call
mov
lcall
rcll
cmpsb
jecxz
push
sbbb
fiaddl
enter
mov
xchg
add
inc
mov
cmp
mov
jbe
repz
jge
add
aaa
cwtl
mov
test
dec
xor
push
outsl
stos
adc
cmpsb
addr16
pop
addb
imul
xor
or
push
outsb
xor
fwait
test
jno
sub
pop
and
in
sbb
negb
mov
sbb
push
or
mov
sub
push
je
loopne
push
jg
outsb
sbb
jge
xor
out
sbb
stos
mov
aam
and
and
inc
mov
push
mov
out
sub
cmp
pop
lds
lcall
push
jbe
cmp
add
or
and
mov
cmp
fidivrl
push
ss
jmp
or
jne
add
cmpl
cmpsb
xor
popf
cli
outsl
xor
nop
adc
gs
pop
xchg
inc
test
cli
jb
inc
aad
mov
jecxz
pusha
pop
xchg
dec
out
pmaxsw
sbb
pop
setns
lods
mov
jle
jnp
lahf
add
cli
stos
repnz
mov
dec
xorb
movsl
lret
jb
dec
clc
push
inc
scas
add
mov
pop
xchg
mov
loope
out
andps
outsl
fldcw
sub
xchg
sbb
sbb
push
and
sbb
adc
test
test
adc
scas
or
shlb
std
shll
cwtl
adc
and
sti
push
xchg
jne
xor
shrb
sbb
rcr
sbb
in
aaa
mov
adc
xchg
mov
roll
push
loopne
rclb
stc
jp
fsts
lock
cmpsb
mov
xor
pusha
adc
inc
subb
shrb
inc
nop
and
cmp
insb
or
pop
jb
sbbb
in
lahf
call
cmc
sbb
push
mov
bound
clc
dec
outsl
in
mov
xchg
loop
and
dec
out
fs
daa
fwait
add
in
xor
add
mov
je
movsl
daa
push
adc
shll
in
cmp
and
cwtl
dec
push
sbb
aam
ja
clc
or
sbb
mov
popa
inc
sub
inc
aam
out
or
cld
dec
movsb
pop
jmp
jae
cpuid
leave
sbb
inc
cmc
mov
dec
pop
push
repnz
cmp
iret
in
xchg
adc
dec
mov
loopne
inc
sarl
jmp
rolb
dec
sbbl
xchg
fnstenv
mov
ficoml
ljmp
sbb
in
and
adc
mov
xchg
cmpsb
inc
sti
cwtl
sti
in
ljmpw
repnz
adc
mov
repnz
mov
mov
lea
or
cmpsl
mov
add
movsl
lcall
test
sbb
pop
cmp
dec
dec
and
jbe
add
dec
je
push
xorb
imul
scas
xchg
int3
addb
push
add
es
jecxz
sarl
and
cmpsl
xor
jmp
inc
sbb
or
fst
push
pop
aad
shll
pop
sti
fs
sbb
mov
mov
stos
add
sub
jmp
lds
or
lea
mov
push
lds
mov
pushf
adcl
lds
gs
mov
shl
je
adc
mov
cwtl
push
lods
mov
sbb
jg
mov
fstpt
mov
addl
inc
shr
imul
icebp
sarl
xchg
mov
and
out
cmp
cld
add
or
mov
cmpsb
pop
sbb
mov
xchg
aam
stos
loopne
rcrl
fnsave
mov
clc
clc
jp
inc
mov
and
mov
cmp
inc
adc
daa
jle
sbb
stos
xchg
andl
pop
flds
loope
call
test
push
in
or
rcl
pop
idiv
lret
cmpl
and
fldl
push
pushf
xchg
movsb
mov
es
push
sbb
in
dec
aaa
mov
jns
or
pusha
dec
or
xchg
and
outsb
jmp
pop
imul
ret
xchg
loop
lods
pop
pop
pop
pop
insl
arpl
clc
mov
icebp
pop
and
xor
ljmp
loope
jg
jp
fsts
popf
jp
das
inc
xchg
in
and
loopne
jp
mov
test
insb
ja
lret
lods
insl
cmpsb
enter
jb
test
leave
mov
xchg
fldt
jb
pop
and
andl
loope
mov
fs
xchg
adc
loope
cmp
or
add
xchg
mov
push
leave
in
dec
hlt
or
mov
mov
mov
mov
stc
loopne
push
sbb
cmc
mov
push
xorl
inc
mov
mov
fcompl
adc
sbb
xchg
and
push
out
dec
xchg
sub
testl
lcall
jg
mov
nop
ret
int3
and
sbb
andl
add
push
add
push
addr16
xchg
push
rorl
fnstenv
repnz
pop
cmovne
nop
mov
jb
add
test
mov
pushf
shl
jp
fildl
xchg
int3
cld
in
inc
cmp
stos
insb
test
cltd
lea
aam
jae
test
insb
ret
fcom
scas
mov
mov
stc
dec
push
fwait
and
fstpl
inc
mov
pop
lcall
sbb
jl
enter
jge
lahf
inc
adc
or
das
repz
push
mov
or
cmp
test
xchg
out
xchg
in
xor
outsl
ss
icebp
pop
hlt
xor
mov
xor
out
adc
aaa
jge
xchg
bound
daa
push
jnp
inc
out
cwtl
pushf
outsl
pop
movsb
hlt
lods
mov
movsb
mov
dec
lcall
jb
xchg
ss
popa
in
mov
lret
loopne
stc
lea
xlat
ds
das
or
dec
enter
sbb
sbb
lock
mov
push
push
rorb
and
jae
pop
pop
mov
dec
add
addl
sahf
xlat
xchg
test
daa
repnz
out
movsl
lret
xchg
cwtl
in
or
adc
lock
and
cld
outsl
bswap
pop
push
inc
jo
jp
sub
sbb
pop
stc
scas
data16
jp
cmp
sub
call
sbb
xchg
int
lahf
out
add
xchg
xchg
sub
jmp
lcall
mov
mov
mov
xor
inc
and
xlat
xchg
in
mov
mov
add
sahf
data16
xor
mov
dec
xor
inc
pop
clc
inc
fistpll
rcl
fst
aam
mov
cmp
push
addb
cmp
repnz
mov
mov
lea
adc
add
xor
mov
stc
unpcklps
out
jnp
jge
shlb
cmp
mov
data16
mov
mov
lods
int3
mov
sbb
sub
jb
aaa
lahf
mov
and
push
out
xor
ret
add
mov
nop
fs
ret
test
roll
sbb
ljmp
mov
gs
inc
ficomps
inc
add
outsl
add
insb
ja
out
adc
push
inc
aas
mov
ljmp
inc
jmp
mov
scas
xchg
jns
ja
and
cwtl
mov
in
lods
aas
sub
out
lods
push
sub
shlb
bound
pop
ljmp
inc
int3
cmp
test
xlat
test
ret
aas
xor
pop
mov
mov
lcall
add
hlt
sbb
lds
mov
fs
sub
lods
in
mov
ljmp
shrb
inc
cmpsl
andb
mov
sbb
pop
add
sbb
mov
out
dec
or
rorb
xchg
je
loope
pop
sbb
je
pop
int
sub
xchg
jne
dec
stc
add
fisubl
in
xor
pop
mov
pop
mov
decl
xor
xchg
shlb
push
xchg
pushl
xchg
mov
fwait
in
xchg
in
mov
shr
or
rcrl
push
aad
ficomps
pushf
sti
xchg
push
adc
fbld
shrb
pusha
call
sbb
sbb
cmp
nop
lods
adc
jb
cmp
imul
subb
push
lods
or
out
cmp
pmullw
jbe
mov
jns
sub
add
lcall
mov
arpl
and
xor
cmp
pop
es
ret
mov
cmpsb
sub
push
ljmp
push
pushf
xor
push
xor
xor
or
jnp
mov
xchg
int
cmp
push
push
enter
add
das
popa
adc
inc
js
stos
sahf
fsubr
push
fimull
xor
mov
pop
xor
adc
lahf
inc
leave
cmpsb
jb
lds
xor
mov
push
add
aaa
mov
adc
out
daa
std
aaa
xor
lahf
in
in
inc
popa
or
gs
cvtpi2ps
xchg
mov
sbb
mov
and
mov
xchg
fsubr
fisttpl
pusha
mov
jg
mov
cmp
cltd
fwait
sbb
pusha
push
xchg
or
in
adc
mov
fs
inc
cld
add
or
movsl
add
bound
mov
push
push
shl
lods
call
orl
fidivrl
in
loopne
sbb
cmpl
sub
push
inc
push
push
sub
movsl
jp
jns
mov
xor
test
aas
sbb
inc
aad
pop
test
loope
and
pop
or
insl
mov
and
xchg
aam
aas
adc
sbb
nop
fdivl
insb
outsl
mov
mov
sub
cld
je
js
jmp
adc
jne
dec
dec
into
aad
repnz
mov
lea
sub
lock
inc
push
cmpsb
jmp
clc
jb
int3
hlt
and
sarb
insl
inc
ljmp
push
cmp
xchg
fbld
cmp
pop
push
fisttps
xlat
lea
not
cmpsb
cmp
mov
sub
sub
out
jp
scas
jle
mov
pop
mul
pop
mov
push
push
fcompl
xor
cmc
cmp
xchg
stc
stos
fsubl
dec
xchg
xor
mov
iret
and
mov
xor
gs
inc
femms
add
jo
fiaddl
cmp
jp
sti
sbb
lods
sbb
and
mov
testl
or
push
mulb
xchg
loop
jl
sub
xchg
cwtd
cmp
enter
mov
dec
movsb
adcl
push
int3
leave
sbb
and
and
std
xor
pop
jg
call
xor
xor
in
repnz
stos
xor
dec
pop
in
sbb
cmpsl
es
mov
sbb
inc
clc
in
xchg
hlt
std
subb
sbb
adc
in
cmp
jae
aad
jl
sub
mov
cmpsb
jbe
sbb
test
dec
xor
inc
stc
sub
xor
add
int
in
imul
jb
cmp
dec
sbb
cmpsb
sub
push
dec
and
mov
mov
test
mov
dec
dec
push
stos
subl
push
leave
inc
fs
mov
add
in
mov
inc
adc
push
jbe
xor
test
int
mov
repnz
xchg
xor
push
iret
add
rclb
lret
mov
push
jg
es
mov
daa
std
scas
jns
stc
jnp
into
pop
pusha
lods
sbb
jecxz
and
je
mov
or
sbb
fildll
xchg
fildll
shll
cmp
loop
pop
dec
push
jne
aas
aad
sub
mov
xchg
or
mov
iret
cmp
cmpsb
or
sbb
jmp
xor
cmp
dec
ss
in
xor
adcb
aad
add
xchg
and
pop
inc
dec
xchg
testl
dec
cmpsl
cmp
jp
movl
sub
and
dec
imul
or
in
dec
push
dec
loope
insl
sub
das
cmp
jp
mov
xchg
in
mov
je
or
and
mov
mov
mov
les
or
dec
push
push
pop
inc
pop
xor
xchg
push
divl
cmpsb
test
stos
ret
adcb
xchg
in
xor
js
pop
push
scas
and
sahf
popa
jmp
or
inc
lcall
pop
shlb
out
xchg
stos
inc
aas
stos
mov
and
pop
mov
xchg
lock
cmp
daa
outsl
mov
decb
rcl
cmpsb
inc
sti
mov
in
dec
pop
pusha
pusha
lcall
mov
dec
rcll
popf
pop
cmpsb
xchg
jo
orl
and
mov
subb
xor
mov
test
insb
cmp
out
cmc
xor
push
pop
movsl
adc
aas
and
fistpl
sbb
push
fwait
aad
lret
in
xorl
or
cmp
mov
rcrb
mov
xchg
sub
out
dec
push
jo
dec
pop
es
sahf
dec
push
cmp
cmp
add
cmp
mov
xchg
scas
test
inc
pop
clc
sub
fs
cwtl
aam
inc
add
decl
dec
mov
aaa
pand
in
jge
jae
bound
pop
imul
cld
mov
xor
jmp
lret
das
cmp
mov
push
js
lret
mov
jmp
sub
insb
pop
xor
sahf
aas
sub
push
insb
lret
xor
adc
xchg
nop
enter
cmp
movsb
mov
adc
rolb
insl
insl
adc
cwtl
in
int3
inc
popa
pop
dec
imulb
lret
dec
rolb
adc
and
lds
shr
push
addr16
int3
mov
in
das
xchg
fidivl
outsb
sub
mov
inc
cmp
mov
insb
lret
mov
nop
push
xchg
or
dec
sub
aas
leave
mov
jl
mov
and
loop
dec
cld
mov
pop
in
outsl
cmpsl
push
mov
jns
dec
in
xchg
ror
or
out
cmp
push
popf
jo
dec
call
aaa
lahf
xor
outsb
push
clc
mov
fisttpl
lds
inc
adc
js
aaa
sahf
or
sbb
pop
pop
into
rcr
ss
sbb
lods
mov
ficoms
aad
data16
lahf
loopne
mov
push
test
sarb
popf
jne
cmp
das
xor
mov
mov
inc
out
stc
mov
dec
push
mov
dec
je
adc
inc
notl
insb
cmp
push
cmpsl
pop
adc
mov
hlt
mov
mov
or
roll
mov
loope
ja
mov
dec
cmp
jmp
loop
mov
fchs
arpl
or
sbb
cltd
mov
leave
push
add
push
enter
negb
cmc
push
pop
addr16
mov
popf
rorl
xchg
test
push
orl
out
xlat
clc
popa
loop
pushf
mov
dec
out
push
xchg
js
pop
push
mov
std
les
adc
gs
dec
xor
pop
mov
and
sbb
xchg
fistps
jno
movsl
mov
and
pop
pusha
mov
add
rcll
fisttpll
fs
pop
xchg
sbb
pusha
shlb
push
push
mov
mov
lea
dec
sti
nop
jb
xchg
repnz
dec
or
add
fildl
sbb
shl
addr16
pop
cwtl
push
sbb
jp
insb
call
imul
dec
in
ja
mov
push
test
and
xchg
inc
scas
les
cwtl
repz
pop
negl
ss
or
ss
push
pusha
hlt
mov
das
mov
arpl
stc
mov
popa
mov
mov
mov
stc
lods
cs
cmpsb
sub
out
je
fucomp
dec
sbb
andb
and
mov
mov
cmovl
nop
pop
cli
xor
push
adc
xor
sbb
mov
into
into
sub
push
sbb
add
inc
add
mov
sbb
cmp
fistpl
xlat
mov
jge
sti
inc
sub
orl
fs
mov
mov
sub
xor
cmp
popf
out
shrb
push
or
or
mov
nop
popa
jne
int
rcll
cmp
inc
dec
daa
inc
in
lret
ss
inc
lret
adc
loop
sbb
jmp
aas
gs
ss
mov
bound
xlat
dec
movsb
push
or
divl
lds
adcl
add
add
pop
stc
rclb
xchg
stos
mov
out
imull
repz
leave
inc
mov
inc
lahf
mov
xor
aas
lea
xchg
jle
stos
fs
xor
je
jb
lret
dec
mov
je
leave
les
aas
es
sbb
pop
cmp
cld
mov
sahf
lds
push
add
outsl
ljmp
ret
lret
adc
mov
add
js
pop
mov
subb
and
pop
jecxz
mov
jo
sbb
test
loop
es
movsl
jne
push
in
test
movsl
xchg
sub
or
mov
sub
sbb
cmpsl
pop
jo
push
mov
sahf
and
sbb
aad
dec
sub
nop
js
jp
adc
and
stos
xor
sbb
jnp
jae
sub
xor
shl
outsl
pop
mov
repz
or
in
jle
pop
push
iret
mov
ficomps
dec
lahf
jl
jmp
mov
ljmp
mov
add
stc
or
addr16
idivl
inc
pop
dec
jb
iret
xchg
xlat
mov
pop
mov
lock
lcall
lret
add
cmp
xor
sbb
orl
lea
outsb
sbb
in
sub
rorl
andl
mov
jnp
mov
add
pop
push
mov
in
adc
lds
or
scas
cmp
je
add
xchg
movsl
std
jo
pop
jb
xor
jmp
sub
es
adc
add
cmp
cmc
jns
push
lods
adc
push
xlat
xor
pop
sbb
iret
int
call
push
or
inc
jns
or
mov
mov
fistpl
xchg
pop
xor
cmp
out
xor
mov
aaa
mov
push
inc
dec
add
int3
push
cmp
mov
outsl
pop
mov
inc
sub
jg
sbb
mov
lret
sbb
xor
cmp
push
js
pop
clc
into
cwtl
push
ret
in
cwtl
movsl
lret
mov
xor
sti
xchg
jl
or
pop
xor
pushf
adc
cmovae
sbb
pop
imul
dec
ljmp
lret
or
mov
andl
and
fists
ja
jecxz
mov
jbe
mov
out
mov
sahf
mov
add
rclb
cmp
lcall
mov
fchs
mov
push
pop
xchg
dec
add
repz
cmp
push
jl
imull
leave
jge
and
jnp
sbb
psrlw
test
mov
test
arpl
mov
mov
scas
insb
cwtl
lret
ljmp
jecxz
out
jns
aad
xor
aas
scas
inc
ret
insl
xchg
dec
adc
xor
or
pop
sub
fmul
les
and
xchg
xchg
jmp
sahf
mov
out
ret
pop
mov
xorb
sub
dec
fwait
push
sub
push
ja
lds
cmp
icebp
jmp
sti
das
sbb
fdivr
inc
add
movl
jle
xchg
mov
andb
hlt
pop
dec
cmpsl
jmp
pop
inc
clc
aas
subb
stos
cmp
loop
adc
cltd
loope
in
cmp
outsb
sbb
in
in
fdivs
mov
cmp
push
clc
fs
pop
dec
loopne
cmpsb
int
push
cs
dec
movsl
sub
clc
ficomps
push
mov
mov
sti
or
jae
lahf
pusha
test
js
push
sahf
jb
jne,pt
mov
mov
cmp
frstor
imul
mov
in
xchg
and
jecxz
movsl
into
jno
add
mov
in
lcall
mov
and
jnp
fldl
shrb
sub
push
xor
cwtl
sbb
adc
sarl
jp
in
jno
add
cmpsb
jb
inc
adc
fstl
inc
xchg
loop
cli
mov
rclb
jae
stc
andb
mov
jecxz
sub
sub
cmp
push
scas
adc
dec
jle
xchg
test
lods
mov
imul
test
push
jmp
lret
in
lsl
jmp
mov
jns
jbe
add
cwtl
arpl
and
cld
jmp
push
addr16
outsb
jle
cwtl
xchg
sub
leave
das
fidivrl
mov
bound
fidivrs
loop
out
ds
xchg
push
xchg
adc
sub
fcomip
fisubrl
pop
pop
mov
lahf
push
outsb
inc
dec
mov
xor
aad
dec
fwait
mov
fwait
or
sub
dec
or
out
cmc
jne
push
clc
leave
ljmp
add
inc
mov
mov
pop
inc
loop
fimull
jo
sti
inc
sub
hlt
rol
stos
popa
push
add
mov
ret
lock
flds
int
jns
aam
cmp
pop
fisubl
jnp
pop
add
or
and
mov
lret
dec
ljmp
test
fldt
sbb
push
lock
or
fisubs
test
adc
pop
dec
pop
cmpsl
xchg
test
aad
stc
in
adc
dec
push
or
test
inc
loopne
mov
sbb
jb
mov
jp
aad
pop
mov
adc
mov
mov
cmp
cli
push
stos
sub
data16
xor
shlb
cmp
rcll
dec
xlat
xor
imul
xor
mov
push
xchg
mov
xor
mov
js
pop
cs
iret
in
xchg
and
jae
pop
cli
ret
insl
push
xchg
pop
cmp
xor
mov
push
addr16
mov
shlb
xchg
aaa
xchg
in
scas
jl
rcll
push
mov
add
and
jecxz
imul
das
mov
test
add
sbb
mov
pushf
repz
sub
xchg
shlb
cwtl
arpl
dec
or
inc
pusha
mov
cli
pop
fdivrl
sbb
xor
adc
push
lcall
push
ds
mov
and
jl
jle
add
scas
cli
xchg
sarl
ret
int3
stos
cli
insb
into
aad
inc
inc
jb
in
sahf
inc
xor
push
pusha
adc
sbbb
in
sub
cmp
cltd
mov
stos
sahf
lock
or
scas
adc
repz
test
jne
jl
push
jne
ss
add
xchg
cmp
mov
jg
mov
xchg
add
pop
jmp
and
mov
test
or
rclb
jbe
jnp
adc
sub
or
movsl
outsb
iret
int
sbb
repnz
or
sub
leave
adc
iret
fwait
cmp
mov
add
movsl
inc
mov
or
pop
out
out
push
in
ljmp
add
aad
aam
or
fcmovbe
adc
or
mov
in
lods
push
pop
arpl
icebp
hlt
cmp
push
aam
cmp
dec
or
cs
gs
inc
sbb
pop
xchg
jg
push
das
push
sub
push
xchg
jg
or
sbb
fsubrl
es
adc
and
je
mov
out
cmpsb
sti
stc
pop
data16
push
dec
adc
in
xor
mov
sub
stc
pusha
stos
and
mov
sub
pusha
decb
adc
xchg
mov
rorb
inc
jo
add
arpl
xchg
pop
loopne
xchg
cwtl
out
mov
mov
inc
imul
leave
jp
imulb
fistl
mov
insl
jle
add
push
into
loopne
mov
enter
add
imul
push
jo
aad
jle
shll
mov
arpl
sub
cmp
inc
mov
adc
fstpt
and
inc
cmpsl
pop
stc
jl
sub
mov
imul
out
xor
cs
or
out
hlt
cmp
je
out
lcall
lcall
inc
dec
push
inc
testb
mov
jmp
mov
adc
insl
jne
aam
jge
mov
dec
loopne
fcmovu
inc
pop
and
dec
pop
lea
pop
pop
mov
cwtl
ret
xor
aaa
clc
pop
inc
lret
iret
mov
push
loop
jle
inc
pop
sti
daa
je
jno
jl
jge
pusha
dec
imulb
jae
pushf
int
jo
addl
rcrb
mov
das
lds
subb
in
stos
std
lcall
jmp
push
inc
pop
sti
xchg
cld
jne
lret
aad
jne
sbb
push
sub
cltd
push
sbb
clc
out
addr16
adcb
movsb
inc
loope
imul
mov
fisubl
lds
imul
ja
in
es
sbb
jp
f2xm1
jl
jo
cwtl
repz
push
sub
adc
repnz
adc
lods
xor
sbb
shrd
add
sub
fildll
cmp
sahf
pop
and
stc
sbb
aas
jp
pop
cmp
fsubs
lods
xor
repz
rorb
add
in
adc
dec
ret
mov
out
movsb
mov
sub
add
push
test
jne
push
and
popf
mov
jno
lahf
repz
push
add
or
mov
fisubrs
dec
pop
loopne
jecxz
or
je
shrb
lea
dec
mov
icebp
push
shlb
out
ja
data16
mov
test
xor
in
jmp
pop
push
test
cmp
out
mov
fdivrs
or
pop
inc
mov
push
testl
mov
push
mov
std
ljmp
add
lods
out
stos
sub
adc
std
push
dec
movsl
sbb
or
mov
jl
mov
std
lret
cmp
inc
aad
mov
sub
addb
pop
and
test
hlt
or
inc
fldenv
stos
mov
jp
aam
jne
hlt
jp
iret
mov
popf
sub
bound
imul
push
adc
or
xor
and
sub
xor
inc
jnp
push
pop
into
mov
sbb
rclb
sbb
addr16
xor
daa
add
fidivrl
insl
mov
mov
test
inc
insb
iret
es
sub
sbb
sub
mov
mov
pop
push
adc
repnz
dec
cmpsl
test
dec
add
lcall
mov
fwait
pusha
vpavgb
stc
outsl
sub
jg
jge
mov
xor
out
into
adc
jne
int3
mov
push
mov
icebp
aad
add
mov
hlt
subb
mov
adc
cwtl
cmp
sub
into
mov
rolb
jmp
movsb
mov
jbe
add
mov
out
mov
add
out
push
es
xchg
pop
push
call
stc
mov
xchg
stos
push
pop
iret
aad
mov
mov
stc
mov
add
mov
fcoml
addb
dec
dec
and
ss
cmp
mov
jle
mov
jecxz
es
ret
arpl
ret
jno
dec
out
jno
jecxz
lahf
std
push
adc
adc
and
adc
jp
jecxz
mov
icebp
mov
inc
cld
into
sub
in
lock
mov
push
or
push
test
test
cs
jmp
dec
int3
cmpsl
mov
dec
lods
ret
mov
dec
dec
in
sbb
dec
mov
gs
cmp
mov
into
dec
shl
test
outsb
add
pop
xor
push
loopne
pusha
mov
or
out
sbb
mov
loope
aas
push
jg
les
lds
lock
mov
int
xchg
bound
pop
test
adc
push
ret
pop
xchg
mov
pop
mov
or
sbb
cmpsb
push
push
add
inc
lock
lock
mov
outsl
cmp
adc
push
insl
xlat
sub
xchg
inc
pop
pop
stos
xor
xchg
pop
sub
addr16
pop
icebp
sbb
in
inc
xchg
mov
jl
or
pop
adc
outsl
mov
lret
pop
pop
ret
sbbb
notl
push
jo
push
call
sbb
add
mov
fisubrl
jg
xchg
repz
popa
subb
shll
jg
push
inc
int3
cmc
stc
sahf
fiaddl
addr16
js
sbb
cmp
lcall
jno
jp
notl
inc
mov
or
out
aam
nop
push
shll
icebp
lret
add
ret
adc
inc
push
or
jns
inc
movsl
icebp
push
jns
or
fwait
stos
int
sub
xchg
daa
fs
in
dec
mov
lret
arpl
data16
dec
mov
inc
pop
xor
mov
clc
adc
jecxz
add
jno
jae
lret
fdivrs
sti
xchg
jbe
sub
sbb
xor
rcrl
andb
popa
shrl
int
lcall
popa
xchg
inc
or
out
movsl
pop
cmpsl
xchg
movsl
xchg
daa
nop
aam
cmc
cmp
cmp
in
dec
push
setnp
cmp
or
pop
add
movsb
ret
repz
or
push
push
jle
jp
xchg
leave
call
add
shll
xor
fdivr
stos
sbb
vpunpckhqdq
push
lock
pop
cmpsb
xor
pop
into
push
jl
jnp
sti
ds
sub
sbb
push
cmpl
and
rcll
inc
mov
jge
push
sub
xor
loope
xchg
mov
aaa
mov
lods
jecxz
in
popl
arpl
jge
out
mov
outsl
popf
dec
and
dec
stc
or
push
fmull
push
adc
insb
xchg
add
into
adc
push
pop
scas
repnz
cmp
ja
adc
inc
das
mov
pop
arpl
mov
inc
add
fisubrl
xchg
jae
mov
cmpsl
cmp
aam
mov
out
daa
mov
xor
or
push
pop
clc
outsl
loopne
sti
pop
pop
je
xor
cmpsl
push
pop
push
aam
fildll
inc
add
shr
aaa
shrl
pop
xor
loop
js
int
mov
les
sarl
adc
idiv
aam
adc
js
popa
pop
out
cmpsl
sbb
xchg
aas
and
push
pop
jne
fincstp
push
mov
and
add
outsb
aas
sahf
mov
ljmp
sub
inc
mov
lods
popf
add
es
cmpsb
hlt
shll
cmp
mov
scas
daa
cli
jnp
fcoml
cli
outsb
aam
dec
jmp
jae
sti
mov
push
dec
jp
cld
add
and
xor
push
push
sarb
sub
jb
fmulp
sbb
inc
out
mov
xor
push
sti
xor
addb
orb
ljmp
fwait
inc
sub
jae
dec
dec
jns
fs
fcmovnbe
cltd
xchg
fwait
lods
fwait
punpckldq
or
incb
bound
push
pusha
pop
jge
int3
pushl
lea
sti
stos
cmpsb
cmp
xor
stos
mov
daa
call
cmp
cli
cs
jmp
lcall
push
jnp
sub
push
cltd
push
int3
in
sbb
in
mov
mov
popa
inc
sub
pop
pop
sbb
into
sub
xchg
sub
mov
stos
aam
data16
movsl
xchg
je
cmpsb
mov
out
adc
test
adc
pop
stos
mov
pop
out
cmpsb
lahf
imul
lods
mov
lock
jnp
cmp
filds
stos
jne
pop
das
mulb
shrl
xchg
imul
addr16
sbb
dec
aas
sbb
dec
push
mov
inc
sbb
cmp
pop
adc
pusha
xchg
pushf
pop
pop
inc
mov
cmp
adc
outsb
out
leave
test
jbe
sub
in
jo
or
cmc
stos
or
xor
add
inc
leave
test
sub
dec
and
das
cmpb
jbe
pop
cwtl
into
push
mov
jae
cltd
insb
frstor
mov
bound
lcall
adc
inc
push
jnp
add
aad
inc
mov
sub
pop
cmpsb
add
scas
idivb
cmpsb
loopne
inc
sub
mov
pusha
cmp
aam
jecxz
hlt
sbb
push
sbb
arpl
fdivl
mov
int3
push
data16
cmp
and
int
imul
jl
or
xlat
sub
lcall
mov
hlt
xchg
mov
and
pop
mov
cmp
jmp
stos
or
dec
mov
cmpsl
add
sub
push
dec
xlat
jge
and
push
bound
call
into
inc
imul
cmp
fsubr
stos
mov
push
scas
arpl
mov
pop
pop
xchg
cld
movl
repnz
popa
sbb
adc
subb
mov
xorb
testl
xor
ficoms
inc
lret
mov
or
pop
notl
push
aas
xchg
aad
lods
mov
adc
mov
adc
mov
add
sbb
cmp
imul
in
shlb
push
xor
fnsave
pop
dec
dec
dec
adc
mov
les
lock
and
fwait
jle
rol
jecxz
or
jmp
aam
adc
lcall
lock
testb
jb
jnp
or
lock
test
stos
pusha
fwait
cli
int
inc
in
cmp
push
ljmp
inc
ret
pop
add
jge
mov
mov
dec
sbb
pop
sbb
pminsw
outsb
xlat
popf
mov
test
ret
mov
dec
int
fdivrs
push
sti
ljmp
data16
lock
sub
lahf
xor
movl
mov
fs
call
ja
sarb
lret
cmp
xorb
arpl
dec
jae
xor
jle
sub
adc
adc
pop
pop
push
stos
pusha
decb
fidivl
pop
sub
pop
enter
mov
add
jge
push
idivl
adc
xchg
add
fsubl
xchg
fisttpl
push
cmp
arpl
dec
pop
inc
test
movsb
iret
sub
daa
outsb
clc
int
imulb
in
mov
inc
sub
std
in
aad
test
push
mov
mov
inc
cltd
cmp
lcall
or
movsl
das
stos
loopne
add
dec
push
xor
dec
mov
es
roll
sbb
lods
add
aam
push
daa
push
mov
or
mov
xor
je
mov
cmc
mov
es
movsl
mov
sbb
mov
lock
fimull
hlt
lock
mov
scas
stc
xor
mov
clc
adc
rol
push
clc
inc
nop
cmp
or
jp
gs
dec
mov
and
push
and
and
push
dec
orb
push
push
iret
mov
sbb
sub
lods
mov
mov
jecxz
xchg
jbe
adc
mov
outsb
and
sbb
inc
mov
jecxz
sbb
sbb
pcmpgtb
sahf
in
inc
pop
cmc
cmp
push
hlt
jnp
jne
add
jl
stos
add
pop
xlat
xchg
pop
mov
lahf
adc
shll
fistpll
add
cmp
add
pop
push
psubb
mov
or
add
test
outsb
push
add
iret
pop
pop
icebp
jecxz
fisubs
lock
mov
adc
punpckhwd
push
mov
xchg
dec
cmpsb
jle
bound
lret
mov
cmp
jo
jecxz
incl
cmp
mov
repnz
lret
cmpb
xchg
ljmp
dec
or
sub
ret
xlat
in
fiaddl
rolb
movl
cmove
and
add
loopne
dec
hlt
sub
pop
xor
scas
mov
test
lahf
xchg
sbb
or
or
pusha
cltd
stos
lahf
inc
cmp
inc
ljmp
fcoms
mov
repnz
sbb
mov
xor
jbe
mov
xlat
push
xchg
cmpsb
fs
mov
xchg
pop
jle
add
pop
shlb
scas
pushf
fdiv
mov
int
loope,pt
hlt
xor
scas
add
push
sbb
sbb
xchg
or
mov
in
das
xchg
das
fwait
add
pop
cmp
mov
inc
js
and
out
push
sub
lret
int
jo
stos
mov
insb
das
shl
mov
gs
xor
mov
sub
pop
mov
add
xor
push
addr16
xor
push
into
xor
mov
orl
cmpsl
xchg
subl
sub
mov
pop
cmc
mov
movsl
and
jmp
lahf
out
scas
int
mov
mov
cmpsb
and
inc
jg
fmuls
push
addr16
jmp
xchg
push
jbe
and
cmpsb
mov
mov
inc
aad
lods
loop
lods
pop
clc
xor
loopne
loope
sub
mov
aas
fcmovne
and
pop
stos
fmull
sub
jnp
or
or
fs
xor
xchg
cmp
in
loope
mov
push
jge
test
cld
vmwrite
sbb
xchg
sbb
jo
movsl
or
test
and
dec
push
pop
lea
aad
mov
jecxz
fwait
movsl
jge
imul
push
and
in
and
fistps
dec
ret
fildl
cmpsb
std
fldt
jge
imul
jl
cmc
addb
scas
rorb
sbb
aam
add
sarl
add
cbtw
lret
jg
jg
adc
sub
add
incl
adc
orl
adc
adc
pop
and
fs
xchg
rclb
pop
sub
or
or
push
ja
in
sti
cli
jae
js
lcall
adc
cmp
push
pushf
adc
add
pop
out
or
push
daa
mov
sbb
fildl
sbb
mov
cmp
insb
push
sub
sbb
lods
clc
adc
dec
jmp
imul
data16
sub
add
pop
jae
cld
aam
ja
in
leave
add
sahf
dec
scas
cmpb
ss
aaa
jg
adc
aaa
push
pop
aad
sub
jle
dec
sbb
sbb
jo
xor
mov
xchg
xor
or
adcl
mov
xor
xchg
push
add
mov
mov
shll
sub
or
jle
push
sub
xchg
in
mov
pop
xchg
out
shr
loopne
dec
hlt
mov
out
lods
mov
clc
aas
lret
mov
xchg
pop
jae
test
ret
mov
jb
in
mov
push
stos
mov
mov
inc
mov
es
icebp
fstps
xor
in
cmp
mov
mov
call
test
aam
scas
frstor
into
ljmp
mov
das
sub
imul
push
in
jle
aas
and
scas
mov
scas
inc
inc
add
test
jl
push
sub
ja
push
push
inc
xlat
adc
sub
movsb
xchg
mov
in
fs
xchg
jbe
sbb
fsubl
sbb
test
loop
lcall
add
lret
mov
loope
out
aad
jg
jmp
aaa
mov
pusha
es
faddl
mov
fidivs
ja
mov
cld
cmp
pop
lahf
test
add
jmp
movb
adc
inc
or
popf
jae
into
jne
and
scas
push
scas
nop
add
sub
xor
or
and
inc
mov
imul
loop
mov
pop
data16
jns
fwait
imul
mov
mov
push
test
cs
sbb
aaa
jg
aaa
in
xor
rcr
push
rorb
ret
jecxz
add
repnz
sbbb
sub
dec
imul
iret
adc
ds
add
imul
ror
xor
into
aaa
cltd
xor
inc
jmp
xor
add
jae
push
push
loopne
stc
cld
shl
mov
lds
aaa
dec
js
out
leave
cmpsb
or
or
rclb
scas
xchg
ror
cmp
daa
ljmp
rcll
lods
mov
repnz
fwait
scas
pop
inc
stos
inc
je
jmp
pop
daa
sbbl
inc
or
push
jne
rcrb
aad
loopne
push
cmp
and
inc
mov
xchg
js
mov
pop
sahf
jbe
mov
into
aaa
imul
test
gs
mov
sbb
and
pop
jnp
inc
push
out
mov
cltd
or
shlb
imul
dec
xor
test
dec
test
xor
shlb
mov
pop
das
aam
push
ret
sub
hlt
icebp
and
jl
xor
jmp
outsl
faddl
push
in
mov
cmpsl
and
cmp
adc
dec
sub
dec
stc
inc
scas
lret
outsl
inc
sbb
adc
ret
out
mov
outsb
or
std
cmp
mov
dec
or
sbb
imul
fists
and
rcrb
inc
or
cmc
or
adc
pop
loop
rolb
jle
inc
add
out
sub
pushf
sbb
cmpsl
enter
shll
lds
jecxz
inc
mov
scas
in
adc
jmp
push
pusha
add
adc
loopne
rcrl
xchg
popf
xor
repnz
inc
mov
stc
mov
and
adc
out
inc
cwtl
pop
lret
faddl
fcmovnb
inc
and
fcoml
cli
inc
lahf
mov
inc
seta
out
jle
call
inc
jbe
xlat
int3
adc
xor
out
fnsave
xchg
lea
mov
je
mov
xor
hlt
mov
adc
jg
out
aas
mov
sub
lock
sarb
out
aas
test
test
inc
pop
xchg
jmp
mov
lods
sbb
mov
and
sahf
cwtl
addr16
sub
cmp
add
jmp
jnp
imul
xor
sub
into
dec
mov
xchg
push
fwait
in
mov
lahf
shlb
sbb
pop
les
push
dec
lea
lea
pop
out
bound
jge
out
sub
mov
push
mov
or
mov
sbb
pop
xor
sbb
jecxz
bswap
icebp
mov
pop
jp
cli
dec
add
mov
sub
out
sbb
imulb
lahf
push
jle
jle
aas
mov
add
push
popl
xchg
sub
mov
add
cmp
sti
jecxz
cmp
shll
inc
cld
icebp
dec
aam
jae
pop
imul
nop
outsb
cld
fwait
jmp
add
or
aaa
mov
lret
and
mov
imul
test
rcl
cmc
xor
jae
mov
insb
aam
xchg
pop
sbb
push
scas
shr
lret
xchg
in
cwtl
lds
fdivs
out
fucomp
and
jae
mov
cmp
pop
mov
mov
fmuls
int
mov
cmp
int3
in
popf
aas
push
ja
or
xlat
mov
in
fmuls
sub
lds
pop
inc
mov
cld
and
sbb
hlt
xchg
xchg
popa
bound
mov
lahf
aas
shlb
call
adc
test
mov
test
xchg
aad
cmp
out
loop
add
mov
cli
jp
imul
adcl
fs
xchg
shrb
mov
fxrstor
ljmp
out
icebp
mov
sbb
lods
inc
int
nop
mov
inc
idivl
sub
mov
xlat
and
cltd
les
fdiv
inc
stc
push
out
out
repz
adc
sbb
fisttpl
jmp
leave
xchg
xchg
lds
inc
ljmp
push
into
dec
or
jne
pop
adc
or
pop
sub
jae
adc
outsl
adc
hlt
mov
mov
das
xor
xchg
rol
cmp
stos
cmp
jl
xor
sub
dec
inc
lods
sub
jbe
mov
fldcw
cltd
pop
jbe
inc
lock
cmpsb
fimull
cmp
jnp
ljmp
insl
push
push
pop
aad
ret
sub
test
ss
or
addr16
inc
mov
lds
stos
into
daa
popa
repnz
insl
insb
xchg
lahf
add
stos
sbb
jle
hlt
repnz
hlt
pop
test
mov
adc
add
jb
shl
scas
mov
cmpsb
sbb
mov
sbbl
out
sbb
push
arpl
mov
fcmovnb
cmp
ss
pop
sub
push
je
stc
sbb
out
lock
mov
iret
jp
pop
add
dec
mov
cld
dec
mov
mov
imul
xchg
xchg
sbb
mov
scas
stos
mov
jge
xchg
repnz
outsb
aas
repnz
pop
inc
xor
and
ljmp
test
xchg
mov
ret
or
xchg
insl
aam
mov
sbb
out
out
push
into
loope
nop
fldt
or
jns
std
pushf
dec
call
gs
xor
xor
jle
imul
loope
outsl
lock
mov
sbbb
or
add
and
push
sub
je
mov
or
test
scas
push
inc
sub
jo
mov
mov
outsl
mov
jge
icebp
jmp
adc
lods
sub
lret
jns
push
xchg
test
add
ja
inc
jno
fs
in
cmp
mov
dec
push
mov
xor
push
sbb
push
jae
add
and
push
ret
push
push
xchg
fmuls
pop
test
jp
popf
outsb
sbb
mov
lods
mov
jge
mov
imulb
pop
aas
mov
int
loopne
pop
dec
addb
dec
push
xor
hlt
sub
pop
mov
or
call
cwtl
and
and
mov
or
popa
mov
insl
int3
pop
test
mov
pop
loopne
mov
and
flds
mov
mov
outsl
or
addb
jmp
mov
inc
and
lahf
jge
lock
enter
scas
shlb
out
lret
sti
out
subl
outsl
imul
fwait
mov
incl
or
out
sbb
mov
xorl
pop
mov
dec
mov
test
mov
nop
xchg
fs
dec
push
in
push
stos
push
les
mov
lret
mov
jno
loopne
push
pop
mov
repnz
ficoml
aam
scas
daa
addr16
popf
jb
js
mov
push
andl
sub
in
sub
inc
mov
fs
dec
mov
and
mov
and
pop
lock
outsb
nop
outsb
pop
jmp
loopne
out
lds
aam
mov
adc
leave
push
lods
cmpsl
lea
adc
jno
mov
adc
dec
aam
cmp
or
mov
and
sar
mov
xlat
in
aad
mov
nop
divl
push
sub
mov
adc
rcl
bound
xchg
xchg
push
xchg
mov
int3
sub
or
xor
popf
in
lret
je
in
shrb
cmpsb
lods
jb
mov
add
inc
hlt
mov
pop
mov
xor
sbb
rol
les
mov
push
jle
orb
ljmp
mov
outsb
lods
popa
test
pop
mov
stos
into
fisubrl
jmp
dec
lahf
xchg
lods
lods
xor
add
outsl
adc
jg
ret
cwtl
push
imul
lock
dec
lcall
enter
sub
jae
clc
pop
jb
shrb
das
or
xchg
arpl
xchg
jns
call
clc
lds
sbb
or
outsl
dec
cmp
andb
mov
sarb
sbb
cmpsl
jbe
sbb
inc
mov
push
push
data16
ret
andb
lcall
stos
cmpsl
aas
add
int
call
xlat
dec
sbb
cmp
xlat
or
or
jecxz
les
gs
adc
adc
and
addb
add
add
nop
add
int3
pop
dec
xchg
pop
push
or
lret
call
xor
pop
jp
icebp
mov
aaa
imul
rcr
jb
inc
fisttps
sub
pusha
cmp
adc
notb
adc
mov
mov
insl
dec
aad
xchg
dec
aam
and
aaa
pop
push
lods
lds
mov
mov
into
outsl
sub
mov
adc
rcrl
sbb
xor
in
lods
mov
sbb
lret
cltd
mov
lahf
outsb
xchg
leave
sbb
out
jnp
adcl
popf
cmp
add
fsubl
jg
or
mov
mov
out
nop
cmpsb
dec
jbe
jnp
xlat
inc
mov
jne
iret
sub
mov
mov
sub
add
mov
out
jmp
pop
subb
insl
int3
and
cmp
std
mov
lods
push
and
jno
jp
scas
pop
loop
into
and
sbb
je
pop
std
cmpsb
mov
dec
mov
or
ds
ss
mov
push
push
in
pop
pusha
test
cli
push
out
addb
out
pop
adc
push
addr16
adc
pop
sub
pop
push
pop
cmp
sti
pop
enter
jge
jp
lcall
mov
enter
mov
sub
mov
ror
dec
neg
call
imul
xor
outsb
lods
xchg
jns
inc
inc
jnp
xlat
popf
pop
pop
jle
xchg
jmp
lock
les
dec
push
xchg
sahf
mov
jmp
subb
mov
gs
and
sub
cld
arpl
fidivrl
push
xchg
mov
rcr
push
in
dec
xor
insb
inc
cmp
push
out
mov
mov
repz
mov
jp
or
dec
adc
cmp
and
scas
dec
scas
nop
mov
pop
xor
push
icebp
in
gs
xor
repz
fstpl
xchg
dec
adc
imul
cmp
enter
and
pushf
shll
sub
push
pop
into
pop
lahf
aaa
in
xor
xchg
bound
mov
pop
cmp
sbb
ljmp
mov
mov
mov
mov
jp
jecxz
sbb
lods
leave
sti
cli
push
pop
push
inc
and
cmp
add
or
int
fistpl
fcoml
push
push
xor
stos
mov
lods
stos
out
and
jno
cmp
addr16
imul
aad
mov
or
cmp
into
push
xchg
mov
arpl
into
aad
adc
das
fcmovu
jae
lea
pop
repz
sti
int
inc
lret
out
das
push
rolb
sbb
mov
or
xlat
out
shrb
jns
sti
jns
aas
jo
ret
dec
push
jne
dec
inc
insl
xlat
pusha
fwait
outsl
push
in
shll
mov
shll
and
push
mov
inc
sub
pop
xor
pop
and
sbb
push
mov
add
scas
lds
jg
and
enter
call
in
add
pop
pop
pop
pop
cmpsb
in
mov
mov
ss
adc
sti
sub
pop
fisttpl
ja
sub
push
dec
dec
lret
and
sub
sahf
insb
shrl
cbtw
jno
mov
mov
ljmp
mov
mov
or
mov
ja
xlat
add
cmpsb
jl
insl
fwait
jl
jp
imul
into
pop
pop
in
pop
in
flds
mov
jmp
jns
xlat
rcll
xchg
loope
sarl
or
adc
mov
xchg
jg
aad
xor
add
repnz
movsb
xor
fcmovnb
mov
jge
imul
xchg
jbe
imul
nop
sbb
dec
inc
mov
push
fbstp
add
sbb
mov
je
lods
stos
push
and
addr16
lcall
mov
xchg
test
mov
pop
test
inc
mov
inc
mov
or
xor
jae
loop
and
icebp
cmpsl
rclb
mov
inc
sti
bound
sbb
sbb
test
dec
pop
imul
data16
jp
dec
xor
mov
bound
push
lock
das
xor
and
test
lret
xor
or
jl
and
adc
cmp
mov
ficompl
pushf
aam
mov
sahf
sub
es
push
pop
cwtl
rep
ds
push
loopne
and
push
insl
mov
shrl
inc
es
add
push
adc
push
das
imul
xor
xchg
aam
notb
into
jae
pop
pop
pop
jne
and
lret
jb
mov
push
call
popl
shrl
das
int3
outsb
adc
loop
scas
or
cli
sbb
rcll
xor
pop
aad
ret
add
rorl
stos
clc
sbb
ds
jecxz
mov
jecxz
or
jbe
xchg
call
gs
or
mov
imul
mov
xor
sarb
xchg
xor
rclb
gs
pop
push
shll
jp
adc
add
mov
popa
xor
ss
test
rorl
aaa
stos
push
add
lahf
sarb
inc
xor
push
add
cli
jnp
insl
les
div
inc
mov
inc
xor
fstl
in
pop
movsl
out
stc
std
repz
test
cmp
mov
inc
or
xor
sbb
adc
cltd
dec
dec
popa
push
add
add
out
mov
dec
inc
out
test
shrl
jmp
stos
sub
ucomiss
sbb
mov
mov
mov
pcmpeqb
out
push
stc
mov
cltd
imul
pop
in
pop
scas
add
xor
scas
rcrb
incl
or
pushf
mov
jle
xchg
ud2
jns
and
lahf
mov
xchg
mov
jno
test
cmp
ss
sub
and
xor
mov
mov
sbb
push
ljmp
imul
xor
inc
and
xchg
movsb
mov
pop
or
hlt
sub
int3
jmp
mov
in
out
int
fildll
inc
sahf
int
xchg
pop
ljmp
pop
and
cld
cwtl
jne
fwait
sub
cs
movsl
xchg
pusha
js
gs
in
push
out
xor
popf
jmp
sbb
test
push
cwtl
data16
and
jnp
adc
inc
rcrb
leave
mov
mov
inc
dec
cmpsb
loopne
hlt
adc
call
outsb
mov
xchg
sub
out
cmp
push
vpermq
add
jae
inc
cli
decb
xchg
xchg
lock
in
stos
or
add
push
ret
sbb
jg
pop
dec
fdivr
pop
daa
notb
adc
into
call
flds
push
fistl
mov
push
mov
or
inc
jle
inc
push
pop
mov
and
js
and
cmp
lret
ret
fstpt
jns
jl
je
xor
pusha
mov
mov
imul
enter
jecxz
push
repz
jg
jle
adc
das
je
cmpsl
or
jbe
ret
ret
xchg
mov
das
popf
scas
data16
inc
ds
cs
jecxz
ffree
pushf
dec
or
in
in
push
pop
lods
jo
mov
out
xchg
inc
subl
adc
fisubs
rcll
sub
sahf
mov
testb
mov
mov
jno
mov
push
loopne
sbb
movsl
push
push
jl
add
jns
push
addl
shlb
mov
incb
xchg
pop
fcomip
scas
test
int
test
call
mov
sub
fcmovbe
mov
movb
jno
cmc
in
push
shlb
fsub
adc
sub
imul
dec
stos
sub
scas
pop
inc
mov
outsl
mov
outsb
jg
or
push
dec
cmp
outsl
hlt
prefetcht1
push
seto
dec
ret
out
cmpsl
pop
mov
leave
cmp
cmp
xor
fldl
pop
das
mov
sub
push
lahf
int3
ds
fwait
repz
mov
in
adc
ffree
push
jbe
sahf
pop
push
cmp
cmp
dec
push
enter
cmp
and
sbb
outsb
xchg
inc
lcall
adc
jg
daa
ret
loope
jne
shrl
xchg
ret
adc
sub
in
push
lcall
movzwl
lret
loopne
mov
mov
adc
sbb
int3
pop
or
insb
jecxz
mov
test
xor
loop
in
in
test
loop
ret
and
or
or
test
loop
lahf
inc
shll
aaa
lods
cld
or
cmp
into
dec
xchg
callw
test
mov
adc
int3
pop
dec
loope
hlt
push
add
adc
cmpsb
gs
mov
add
test
inc
cmpsb
sub
cmp
pop
or
cmpb
xor
ljmp
mov
xchg
inc
mov
lea
je
pop
adc
lods
or
sti
pop
push
mov
add
cmp
mov
addr16
sub
xchg
mov
mov
cli
shrb
in
inc
mov
rcrl
fcompl
insb
adc
bound
or
icebp
mov
xchg
add
gs
or
cmp
lods
test
mov
add
dec
fidivl
dec
jb
or
js
leave
mov
mov
cli
or
jge
adc
pushf
or
dec
arpl
inc
add
adc
int
rcrl
cmp
in
adc
adcl
ficoml
iret
jnp
sub
dec
out
mov
roll
and
xor
shll
push
or
pop
icebp
mov
push
out
rol
dec
push
mov
jbe
mov
cld
cs
test
lds
mov
insl
mov
test
jmp
push
and
lods
test
add
pop
mov
ror
jb
and
int
adc
mov
push
adc
bound
out
imul
add
mov
fdivl
xor
dec
stos
jmp
test
test
sti
jle
jp
sbb
xorl
test
cmpsb
mov
loop
and
jnp
mov
dec
xor
dec
add
js
xlat
les
dec
into
insb
xchg
xchg
xor
xor
pusha
dec
xchg
test
js
imul
pop
sarl
push
mov
push
pop
lret
imul
dec
xchg
das
inc
repnz
out
cmc
inc
mov
repnz
jae
test
sub
jp
jo
mov
push
loope
lods
sbb
xchg
mov
pop
mov
mov
sbb
popf
aad
call
pushl
pop
push
out
pop
fwait
push
arpl
mov
shrb
es
mov
and
loop
add
mov
or
shll
movsb
aaa
popa
push
sbb
mov
jns
out
cltd
mov
push
jmp
dec
mov
outsb
jmp
pushf
fcmovne
shlb
mov
cmc
je
cmp
add
aad
sub
outsb
test
xor
xchg
mov
out
sbb
negb
inc
pop
mov
xor
pusha
ljmp
shl
out
lea
imulb
push
xor
or
dec
stos
push
int3
rol
adc
and
xorl
cmp
lret
int3
insl
cmp
cmp
inc
cmpl
sbb
ret
lea
dec
mov
adc
cmp
call
cmp
out
lret
stc
shlb
sub
lret
ret
in
std
insl
imul
pop
mov
fmuls
pop
jmp
fsts
lea
rcl
movsl
or
inc
lahf
push
and
outsl
mov
pop
pop
es
push
pop
out
adc
ficoml
push
bound
daa
int3
sbb
sbb
sub
in
add
jnp
pop
sahf
fldl
out
jb
jae
movsb
and
pop
mov
jnp
fidivl
mov
jne
fwait
xchg
mov
mov
sbb
inc
jae
stos
mov
lret
loop
sub
fucomip
stos
sub
mov
in
mul
cli
cmp
jno
adc
mov
pop
jmp
add
cmp
pop
jno
pop
push
sbb
or
loop
cmpsl
xchg
pop
call
cmpsb
mov
or
pop
aam
in
lahf
add
xchg
cmpsl
int3
mov
notb
mov
lea
nop
cli
lahf
fldenv
mov
scas
inc
inc
inc
icebp
xchg
in
pop
gs
rcll
out
mov
pop
cwtl
dec
add
jno
add
mov
es
jl
or
ljmp
loope
adcb
jmp
sbb
ja
pop
lds
jge
ds
add
pop
lcall
es
pop
fisttpl
out
aam
cmp
movsb
push
mov
or
out
cmp
clc
cwtl
dec
push
cmp
or
xchg
jnp
push
repnz
inc
add
jp
jmp
jmp
test
cmc
jge
repz
iret
popa
pop
loop
push
subl
dec
or
xchg
and
cmpsl
and
pop
flds
inc
add
sbb
leave
lock
ret
aad
test
aaa
inc
jb
and
mov
test
leave
push
mov
xchg
enter
push
rol
jb
sub
int
push
fildl
mov
dec
loope
push
fs
fwait
rorl
out
jbe
insl
adc
xchg
lods
xchg
mov
repnz
xor
out
popa
js
repz
xchg
aad
shrb
inc
mov
pop
out
xor
test
ret
xchg
push
in
in
dec
scas
aas
pop
jg
push
xor
out
sbb
cmp
scas
pop
pop
pushf
ret
dec
ror
inc
mov
fwait
mov
lds
xor
or
stos
adcb
push
icebp
jle
jns
aas
xor
dec
xor
or
shll
icebp
addb
insl
inc
jmp
xchg
in
pop
nop
cld
inc
js
repnz
ret
xchg
xchg
repz
add
inc
add
mov
jg
fwait
adc
push
enter
cmpl
rclb
addr16
inc
out
loop
inc
call
bnd
iret
mov
adcl
insl
cmpsb
add
sar
mov
xlat
aam
and
les
pop
ret
push
inc
and
sub
scas
andb
xchg
and
repz
rorb
jne
imulb
scas
mov
hlt
scas
les
loope
mov
mov
pop
movsb
sbb
pop
xchg
hlt
xchg
femms
outsl
int
imul
push
lret
bnd
mov
gs
insb
cmp
sub
jo
pushl
xor
cmpsb
insb
ret
pop
and
sahf
or
pop
les
adc
lahf
pop
jp
dec
push
xor
inc
sub
aad
movsb
mov
decb
insb
pop
jb
jbe
cmpsb
test
imul
cwtl
cmpsb
pop
inc
iret
dec
test
inc
lods
dec
cs
ljmp
in
mov
hlt
pop
xor
dec
dec
ja
fmul
dec
leave
sbb
movsl
cltd
sbb
ds
jge
push
out
mov
lods
cmpsl
mov
fwait
pop
jge
sub
fidivrs
shlb
cmpsl
rorb
dec
call
outsb
rclb
pusha
mov
cmovb
pop
data16
movb
jne
lahf
xor
icebp
mov
sbb
mov
push
es
adc
cli
shll
call
pop
pop
pop
mov
jbe
sub
mov
je
xchg
sub
jbe,pn
test
add
xor
jle
aad
mov
popf
push
mov
popf
bound
ljmp
pushf
jmp
add
mov
cmp
insb
dec
stos
adc
cmp
and
or
and
scas
stos
add
xchg
add
nop
mov
sub
xor
dec
sub
arpl
push
dec
sbb
mov
pop
and
mov
enter
inc
xor
push
outsl
dec
sub
or
loopne
aad
inc
jle
pop
and
dec
pop
sbb
into
and
out
test
mov
dec
mov
roll
mov
sbb
negb
dec
data16
mov
push
js
inc
xchg
sbb
xor
or
in
mov
sbb
pushf
or
cmp
xor
fdivl
add
js
sub
adc
notb
movsb
sub
mov
popf
mov
outsl
jmp
stos
inc
out
mov
stos
mov
out
dec
inc
test
mov
or
mov
xchg
xor
test
aad
cmpxchg
cmp
adc
jnp
cmpsl
xor
push
testb
sub
sahf
inc
adc
pop
dec
push
hlt
pop
add
push
pop
xor
iret
inc
js
push
fsubs
sarb
cmpsl
xor
and
jae
das
adc
arpl
lret
dec
jp
cmp
in
cmp
adcl
lds
stos
cltd
bnd
fsin
stos
or
push
cmp
scas
pop
cli
mov
pop
mov
mov
int
aas
in
and
fmul
addr16
fbld
test
xor
or
lock
cltd
fists
jg
aad
inc
sub
mov
les
aam
in
mov
or
xchg
and
jmp
inc
fisubrl
in
inc
pop
outsb
jno
rcr
outsb
xor
or
dec
jo
cmp
movsb
stos
and
clc
cmp
push
or
adc
ds
inc
call
in
stos
cmc
movsl
jle
inc
fidivs
cmpsb
lret
test
sub
cwtl
and
dec
loop
cmp
sbb
push
adcl
mov
push
inc
add
jnp
sbb
xlat
shrl
test
mov
repnz
adcl
arpl
outsl
ss
push
popa
mov
sbb
aad
sbb
into
sub
lods
ficoms
lahf
push
stos
out
arpl
mov
into
clc
shrb
out
xchg
or
dec
jnp
fsubrl
mov
lahf
xchg
mov
xor
fcoms
cmpsl
dec
pusha
in
sub
pusha
icebp
ss
pop
inc
or
inc
inc
popf
mov
sti
mov
xchg
sbb
mov
jmp
orb
mov
vpshufhw
xchg
lea
out
adc
enter
push
in
xchg
rcrb
push
add
inc
in
jno
sbb
imul
fs
pop
xor
filds
addl
pop
and
daa
stos
lahf
test
add
mov
leave
push
pop
aas
and
jecxz
std
clc
lock
inc
cld
sub
xor
cmp
bound
mov
scas
dec
es
ds
sar
add
dec
les
nop
cmpsl
fcoms
or
aad
mov
cmc
out
vpmacsswd
xchg
mov
cld
sbb
mov
add
lahf
push
add
test
inc
xchg
fistps
and
sti
in
cmpsl
push
out
jbe
xchg
mov
pop
imul
daa
out
xchg
stos
into
stc
dec
je,pn
outsl
scas
jmp
cmp
sbb
push
mov
rorl
push
fs
loop
jns
leave
movsb
imul
pop
inc
xor
cmp
mov
cli
sub
fs
cmpb
cmp
into
pop
inc
shrl
inc
sub
add
into
repz
mov
mov
dec
sub
dec
xchg
test
cmpsl
xchg
loop
sbb
les
lret
inc
adc
cmp
sub
jl
leave
sub
cmp
mov
popa
xor
cmovs
jle
lcall
mov
pop
sub
xor
sub
xchg
jae
inc
fs
sub
decl
jg
pop
xor
lds
repz
rorl
jo
fildl
jp
ffreep
mov
mov
and
nop
fidivs
xchg
cmc
and
stc
cwtl
mov
dec
pop
dec
ret
out
or
and
sarb
in
je
iret
mov
xor
fwait
mov
into
cltd
cmp
push
ja
in
mov
pop
stos
jno
xor
sbb
push
cmp
fidivrl
int
bound
and
jae
adc
sub
daa
push
faddp
sbb
push
mov
lea
loop
loop
sub
sbb
cmp
mov
mov
adc
add
sbb
pop
in
add
fisubs
and
shrl
add
insl
cld
add
popf
mov
scas
mov
push
clc
jmp
and
outsb
test
mov
das
rcll
fwait
xchg
stos
cltd
arpl
xchg
dec
clc
ja
or
pushf
add
cli
daa
jl
push
jmp
and
xor
mov
and
adc
cmp
cmp
or
pushf
out
sbb
push
test
shlb
jg
sub
cmp
jb
mov
pop
lock
mov
filds
xor
push
insl
lds
cmp
pop
or
lods
out
mov
sarl
inc
jo
and
loope
cmp
mov
outsl
jo
mov
sub
mov
faddl
rorb
push
sub
je
aas
js
jecxz
push
add
dec
sbb
xchg
out
dec
mov
dec
dec
clc
inc
subl
and
aas
repz
movsl
xchg
mov
ds
iret
lods
pop
pop
mov
dec
bnd
or
leave
push
loopne
xor
sub
pushf
jbe
mov
pop
sub
adc
mov
ret
out
push
and
mov
cltd
cmp
dec
fcom
test
pop
dec
cld
xchg
hlt
enter
xor
cmp
push
int
xor
lea
ffree
icebp
dec
insl
sub
jae
dec
push
mov
adc
out
push
sub
lcall
ds
mov
outsb
add
push
call
adcb
stos
shrb
cmpsb
in
add
pop
cmc
les
dec
dec
jg
movsb
fistl
xchg
stos
sbb
insl
push
fcom
and
xchg
in
and
dec
nop
shll
shll
xor
mov
daa
mov
fbstp
daa
mov
jp
xor
gs
xor
imul
in
divb
sbb
cwtl
cltd
pop
jecxz
add
push
jno
aad
or
ja
jg
cs
fldl
pop
cld
iret
dec
mov
in
adc
mov
mov
aam
fstps
xchg
dec
into
das
push
paddq
fidivrl
cwtl
lea
jecxz
xor
rcl
test
mov
adc
cmpsb
ret
mov
jg
push
mov
lock
shrl
sarl
fildl
sarb
sub
mov
test
lds
lahf
inc
iret
pop
sub
lcall
adc
xchg
int3
jmp
fadds
add
inc
and
pop
insb
loop
mov
outsb
jmp
mov
insb
pop
jl
mov
adc
mov
push
xlat
dec
mov
stos
pop
sub
lds
sub
mov
popa
fldl
arpl
mov
bound
sub
out
call
push
fadds
mov
enter
mov
insl
mov
xor
mov
sbb
insb
push
fwait
xchg
rcrb
xchg
arpl
lret
xchg
pop
mov
rcr
lahf
out
mov
pop
add
pop
jecxz
dec
add
imul
jp
pop
js
jae
push
xor
fcmovu
rcrb
jno
jo
push
into
bound
and
inc
push
xchg
inc
jnp
add
or
lea
pop
shll
fcomi
outsb
leave
cmpsb
mov
popf
rcll
pop
hlt
setb
mov
das
pop
push
sbb
mov
fwait
out
mov
aad
cmp
fs
mov
inc
pop
mov
cmp
xor
aaa
adc
nop
aam
mov
and
hlt
fnstenv
ret
mov
cmc
pop
rcrb
imul
enter
jecxz
xor
aad
jno
sub
add
fdivrs
push
push
das
xor
jle
jle
xchg
roll
shll
lret
test
xor
xor
lds
and
js
xor
xchg
in
out
enter
or
jbe
mov
movsb
add
dec
adc
add
pop
inc
push
mov
add
jmp
pop
push
cmp
scas
jnp
pop
xor
mov
daa
push
loope
imul
mov
cwtl
sbb
sub
xchg
jl
scas
xor
inc
insl
bound
cltd
jbe
push
and
out
call
sti
xchg
scas
inc
ror
push
jg
popl
sub
in
cmp
push
std
push
test
xor
sbb
imul
cmpb
loopne
stc
popa
scas
ror
sti
inc
es
mov
stos
out
popf
loopne
add
pop
and
nop
mov
scas
and
lret
rcrb
pop
xchg
jno
add
push
dec
mov
pop
jno
inc
rorb
cmp
arpl
xor
mov
or
pop
dec
gs
lds
rol
loope
add
loope
aam
add
imul
push
mov
or
rcll
sahf
roll
rcrb
cmp
sti
mov
mov
sub
jle
mov
push
inc
and
ds
lret
insl
stos
xchg
into
adc
inc
ret
cmpsl
lret
fcoml
in
ds
pushf
sbb
mov
push
mov
inc
jmp
movsb
stos
aas
stos
popa
mov
push
xor
cmp
fwait
jno
js
or
test
cli
xchg
cli
lret
out
push
decb
push
imul
in
cmp
or
aaa
fucomip
sbb
pop
jae
dec
mov
cwtl
or
pop
push
mov
mov
inc
fcoms
sub
repnz
loope
mov
sub
adc
mov
pop
and
lret
sahf
inc
pop
inc
inc
or
pop
scas
popa
and
jae
insl
mov
sbbb
mov
push
lock
adc
scas
sbb
inc
aaa
pop
sbb
mov
movsl
iret
pop
movsb
push
push
jge
adc
out
xchg
push
aam
cmp
fwait
pop
sbb
inc
mov
add
and
fdivp
imul
std
in
pusha
inc
mov
mov
out
pop
call
jl
mov
arpl
mov
sub
psubq
push
les
sbb
push
in
in
mov
stc
jb
sub
std
call
rcrb
push
aaa
dec
out
xor
pop
loope
mov
xor
pop
xchg
push
cmpl
dec
xchg
call
jo
pop
popf
lods
mov
xor
fst
adc
cmc
out
adc
gs
or
mov
jns
jecxz
inc
sub
adc
ja
push
mov
shrb
loope
dec
mov
xchg
dec
je
fbstp
in
xor
jle
loopne
movsl
or
dec
inc
inc
mov
das
jbe
mov
mov
adc
jbe
test
cli
and
hlt
pop
pop
cltd
stc
cltd
ret
jns
xor
sti
outsl
xor
outsl
pop
scas
add
das
xor
xor
idivb
xor
out
sub
mov
adc
negl
jbe
push
loopne,pn
dec
dec
test
pop
mov
jae
jmp
ret
mov
push
cmp
adc
cmp
repz
je
rcrl
stos
mov
fcomip
cmp
outsl
int
mov
inc
jle
ret
xor
push
cmpsl
sub
inc
mov
ljmp
or
nop
in
pop
subb
dec
call
incb
insb
mov
mov
outsl
orl
negb
mov
xchg
lret
cmp
divb
lock
lea
cli
mov
adc
push
je
dec
pop
adc
faddl
xchg
push
fwait
xlat
mov
add
aam
insl
out
cmpsl
repnz
jae
jnp
mov
test
or
jle
iret
dec
test
add
nop
pop
pop
jle
pushl
push
xor
test
sti
mov
fs
pop
divb
shll
sbb
mov
dec
movsl
hlt
fimuls
shl
imul
xor
add
sarb
adc
cltd
jmp
or
daa
ja
scas
adc
lahf
adcb
lcall
fsubp
cmc
jne
add
sub
jp
cmp
xor
mov
mov
and
test
movsb
xchg
xchg
sbb
adc
mov
add
push
and
jae
rorl
mov
ret
lods
lods
iret
cmp
fdivr
ss
lret
lahf
mov
loop
enter
push
ret
xor
int
inc
fnstcw
xor
out
int
sbb
in
aad
scas
mov
mov
or
aam
loope
cmp
push
push
movsb
rcr
jne
xor
adc
mov
les
pushf
pop
divb
in
rclb
mov
add
arpl
push
iret
addr16
sbb
shl
push
int
aaa
scas
sbbl
sbb
mov
mov
inc
mov
jno
stos
les
fldl
or
sub
mov
mov
mov
dec
dec
leave
dec
mov
sub
out
mov
ss
ror
mov
int3
sbb
push
leave
in
sarl
xchg
in
mov
ficoml
lret
cwtl
out
imul
mov
push
dec
fucomp
lea
nop
cmp
dec
dec
and
ret
cmp
subb
cmp
scas
jo
scas
adc
insb
ss
stos
cmp
int
in
lods
sbb
mov
xor
jecxz
cmp
xchg
push
jg
aaa
movsl
jb
cmpsb
add
cmp
mov
insl
pushf
mov
sbb
jmp
shlb
jne
cld
leave
stos
or
sbb
pop
fs
lcall
add
scas
mov
add
cltd
add
mov
fwait
aaa
shlb
xor
addr16
inc
xchg
ja
inc
lret
icebp
iret
push
lret
dec
ret
fisubrs
ljmp
out
and
in
sbbb
js
sbb
in
dec
inc
addr16
test
cmp
int3
xchg
ljmp
xchg
js,pt
mov
mov
jbe
sbb
in
movsb
inc
mov
iret
push
addr16
inc
test
test
out
jne
loopne
cmp
mov
pop
jle
sub
xchg
in
pop
cltd
and
fisttps
les
hlt
push
jmp
sub
aaa
ja
dec
cmp
test
insl
push
inc
divb
mov
pop
lods
push
mov
and
cmp
adc
ss
ja
loopne
sbb
cwtl
outsl
cmpsb
xchg
xor
notl
lds
aaa
push
inc
insb
aaa
xor
mov
sbb
cmpb
jns
mov
pop
pop
out
fnstsw
jnp
imul
and
adc
adc
cmpsb
mov
testb
mov
mov
popa
jecxz
ja
and
cmpsb
xor
daa
ss
push
into
sbb
loop
pop
dec
sub
popa
xchg
in
cmpsb
jnp
cld
popa
dec
push
add
cmp
fwait
mov
fwait
daa
shlb
gs
mov
sbb
xor
and
rcrl
pslld
clc
adc
iret
push
jge
fs
stos
sub
scas
cmp
add
pop
das
and
loopne
imul
sbb
adc
push
jbe
xor
or
aad
mov
jae
push
cwtl
jo
adc
and
test
outsb
jno
mov
inc
es
ja
sub
jg
out
into
lock
inc
test
cli
out
std
pushf
push
ret
sti
stc
push
call
cwtl
lods
pop
ja
sub
flds
repz
xor
sub
pop
cmpsl
ss
cmp
test
sub
sbb
push
lds
rcrl
popa
sti
sbb
dec
mov
out
mov
pop
inc
mov
lods
or
je
xchg
mov
add
lods
pop
dec
repnz
xchg
add
test
cltd
shr
sub
in
or
mov
stos
adc
push
or
inc
mov
shl
cmpsl
add
xchg
dec
jg
shll
test
pop
push
jg
mov
les
cltd
dec
xlat
fstps
push
imul
pop
out
outsb
addb
aam
add
js
gs
jne
push
fcomi
imul
push
cmp
xchg
lcall
js
repz
lret
ja
test
fisubrl
xchg
inc
xchg
pop
andb
lret
lock
xchg
mov
nop
daa
jge
and
mov
mov
nop
stc
push
adc
in
test
sti
lret
cmpsl
adc
sbb
ljmp
mov
add
sub
outsl
repz
xor
mov
lret
icebp
push
dec
jo
fidivrs
aam
call
lods
xchg
das
lods
dec
inc
mov
nop
idivb
call
fmull
dec
je
pop
ret
mov
stos
dec
inc
fcoml
es
pop
cmp
icebp
das
pop
jl
into
in
testb
hlt
dec
add
sti
mov
outsb
fldt
movzwl
push
mov
roll
mov
outsb
les
ret
aad
es
cwtl
rorb
ror
testl
sbb
jnp
out
push
cmp
sub
adc
push
negl
aas
imul
insl
js
add
test
sbb
arpl
xchg
mov
jp
iret
cmpsl
fnstcw
adc
stos
adc
std
lea
je
fdivl
jp
cmpsl
inc
jbe
and
out
xor
push
push
inc
adc
jbe
xor
testb
xchg
inc
inc
pusha
xchg
pop
lret
mov
xchg
cmpsl
sahf
inc
inc
mov
pop
mov
rcl
mov
jae
loopne
pop
fsubs
jg
pop
xchg
push
or
dec
xor
add
sarb
add
fs
clc
inc
lret
sub
pushf
rcll
xchg
pop
jg
mov
jb
xor
mov
jno
lret
inc
cmp
jecxz
outsb
cmpsl
cmp
sub
paddusw
out
push
leave
out
fcoml
js
push
int
mov
stos
mov
and
dec
incb
hlt
dec
dec
dec
repz
mov
push
repz
fstpl
outsb
jae
rorb
xlat
insb
push
xor
xchg
xchg
sub
cli
adc
dec
mov
mov
ret
or
jb
mov
call
shll
sbb
rorb
mov
mov
mov
outsb
push
jo
sub
in
loop
data16
out
jns
ljmp
popa
loopne
xchg
bound
cld
das
pop
dec
repz
in
in
sbb
push
jnp
adcl
adc
dec
xchg
popf
ret
je
push
pop
inc
and
fidivl
cltd
aas
test
scas
pop
aas
add
mov
outsb
rolb
rcrl
mov
cltd
cmpsl
cli
mov
ss
inc
xchg
mov
in
mov
mov
ja
aad
addr16
xor
mov
xor
dec
jge
push
out
leave
jle
and
scas
sbb
mov
es
movsl
jmp
jnp
xor
fidivs
or
cmp
iret
inc
adc
or
ljmp
sbb
clc
mov
mov
inc
sti
js
add
lods
stos
mov
rcrb
jnp
rol
rcr
inc
nop
adc
test
and
mov
arpl
aad
pop
out
add
scas
test
jge
incl
int3
pop
sbb
cmp
xchg
pop
out
fstps
insb
dec
test
or
xchg
add
inc
call
cmpsb
inc
xor
cmp
test
outsl
push
mov
sub
rcr
jecxz
out
mov
push
aam
jmp
mov
test
jns
subb
sub
sub
xor
pushf
dec
mov
jl
lods
push
cmc
lret
repnz
push
fmuls
test
push
iret
into
inc
xor
mov
fwait
jge
mov
xchg
bound
imul
sahf
push
add
nop
cld
aad
push
push
inc
xchg
popa
call
jno
dec
imulb
mov
xor
inc
leave
jne
cmp
add
insl
ljmp
loopne
mov
les
sub
test
jle
mov
sbb
lds
xchg
xchg
mov
dec
decl
push
push
mov
pop
test
xchg
and
call
pop
andb
inc
mov
sarl
adc
mov
pushf
aas
pop
add
outsb
inc
push
add
sbb
fcomi
or
inc
gs
push
mov
daa
das
lods
outsb
rorb
and
jnp
inc
add
ret
sbb
xor
xor
aam
cmpsl
push
fwait
inc
daa
jp
pop
sub
scas
orl
pop
loopne
cmpsb
mov
inc
in
cmp
and
ss
out
cs
add
and
ss
cmc
push
jbe
jmp
push
mov
shlb
pop
pop
mov
pop
pop
mov
ret
inc
sbb
stc
mov
jecxz
outsb
rolb
test
sti
jbe
cld
cmp
inc
push
shll
cmp
jbe
xor
and
pusha
in
xchg
scas
test
pop
push
jne
dec
movsl
mov
mov
cmc
xchg
stos
iret
pop
xchg
add
movsl
push
jb
mov
mov
mov
mov
lcall
clc
subl
jmp
push
push
xor
adc
test
test
addb
jno
mov
and
scas
push
adc
iret
fcmovb
mov
and
add
stc
push
push
mov
pop
int3
iret
mov
mov
ja
jb
fdivrp
imull
pop
mov
fisttps
jp
dec
cmp
hlt
push
sbb
call
popf
loopne
daa
bound
xchg
ficoms
inc
jp
ret
inc
push
jbe
mov
idivl
pop
mov
mov
jo
icebp
dec
push
loopne
xchg
int
mov
js
xor
icebp
in
sub
leave
movsl
test
daa
adc
jbe
inc
push
das
adc
adc
push
mov
in
xchg
addr16
push
cmp
sbb
add
sub
pop
xchg
leave
arpl
enter
mov
rorl
scas
incb
mov
mov
pusha
mov
cmp
inc
mov
mov
or
pop
mov
insb
in
cmp
cmp
mov
add
in
mov
xlat
aas
rcrb
push
cli
jne
inc
je
sbb
lret
add
cld
dec
fisubl
test
mov
dec
stos
idiv
xchg
lods
and
aad
mov
lret
xor
das
dec
repnz
insl
aad
adc
inc
push
dec
sbb
mov
push
xor
sahf
repnz
cmp
sub
inc
sbb
imul
and
or
pop
add
xchg
jno
movsl
sbb
inc
clc
or
push
sub
scas
or
cmp
and
insb
nop
push
pop
adc
sbb
insb
aas
into
dec
call
ds
dec
mov
mov
cmp
sub
jbe
lods
int3
jo
sub
insl
dec
arpl
cmpb
gs
inc
mov
out
cld
fwait
pop
pop
fsts
mov
sub
sahf
mov
roll
mov
pop
arpl
addr16
imul
gs
test
pop
jae
es
pop
aas
popf
cltd
jo
sub
jnp
add
add
mov
fisttps
dec
pop
adc
mov
repnz
pop
fcomps
out
push
out
lahf
or
scas
xchg
shll
call
inc
inc
ds
mov
jp
repz
add
addr16
mov
shlb
jns
popf
jmp
fcomi
hlt
mov
icebp
ds
mov
lcall
sbb
cmp
fwait
ljmp
iret
inc
xchg
push
in
sahf
cltd
push
daa
imulb
jne
or
aas
or
mov
push
mov
sub
jmp
fstpt
and
and
xchg
in
or
das
dec
in
out
dec
jae
add
cmpsb
test
data16
icebp
and
inc
aas
cmp
sbb
daa
push
xorb
jnp
pusha
sbbb
fisubrs
or
push
fmuls
neg
fsubl
sub
xor
push
out
pushf
in
xorb
dec
mov
paddb
pop
cmc
xchg
mov
aam
mov
sub
inc
mov
scas
test
mov
inc
into
mov
mov
pop
adc
or
sbb
dec
pusha
inc
or
scas
lret
and
mov
sbb
sbb
out
cltd
inc
aam
jmp
gs
add
pop
or
repnz
or
add
hlt
insb
fldcw
add
lock
shll
jno
mov
sbb
unpckhps
mov
adc
fisubl
xchg
popa
mov
outsb
in
sbb
movsl
inc
and
repz
push
jo
dec
add
hlt
mov
cli
jbe
cmp
sbb
pusha
mov
loope
xchg
lods
push
xchg
cli
sidtl
fstl
mov
cltd
jge
loopne
pop
mov
push
into
cmp
rorl
std
icebp
leave
xchg
adc
jge
sbb
xchg
add
sbb
lcall
ds
cmp
out
cmp
dec
dec
xchg
sbb
mov
jne
xor
xchg
ljmp
and
dec
scas
insl
xor
push
imul
xor
dec
adc
mov
jns
sbb
push
mov
push
out
jmp
xchg
outsl
shr
sar
ret
hlt
xchg
mov
mov
cmp
pop
cmpsb
add
mov
pop
fs
sbb
jns
lahf
xor
push
ret
sarl
test
das
pop
ja
enter
loope
popf
cmp
lds
aad
scas
jne
cmp
ds
cmp
orb
and
push
nop
sub
and
sbb
cmp
test
inc
mov
pop
insb
bound
aam
mov
or
clc
pushfw
xchg
insl
and
adc
or
xchg
cmpsl
sbb
imul
cmp
or
pop
sub
out
mov
jo
movsb
push
inc
loop
dec
pop
stc
pop
sbb
sub
mov
mov
and
loop
sbb
movsl
jge
hlt
pop
dec
mov
sarb
cmp
fwait
std
push
push
mov
cs
cmp
push
insb
leave
hlt
jne
cmpsb
mov
fistpl
mov
notl
loope
cmp
jecxz
cmp
div
fmull
fstpl
movsl
and
aas
sub
dec
mov
lret
cmc
or
sub
mov
sub
out
mov
xor
adc
into
mov
pop
rclb
sub
cmpsl
lret
sub
icebp
lods
lahf
jmp
or
fiadds
movsl
pop
ds
lret
in
insl
sbb
xor
mov
ljmp
push
test
es
test
mov
push
xchg
mov
rolb
inc
jg
lret
movsl
dec
pop
sbb
sub
pop
lea
cmp
sbb
sub
std
push
pushf
push
das
mov
divb
cmp
push
and
mov
add
clc
mov
mov
mov
pop
js
push
push
push
insl
and
cmpsl
das
lret
leave
imul
aad
jp
and
rclb
sbb
or
loope
lret
ret
je
shl
sub
js
ja
sbb
mov
pop
add
and
sahf
xchg
aaa
sbb
jae
iret
ret
add
lahf
cld
mov
mov
adc
mov
out
inc
ret
push
sbbl
xor
fs
or
arpl
fidivl
pop
lretw
outsb
pop
jb
aaa
enter
inc
daa
mov
adc
and
inc
mov
mov
testb
mov
push
sub
xor
inc
shlb
adc
icebp
sbbb
cmp
ds
jmp
lcall
aaa
in
ss
out
xchg
lods
lahf
add
shll
stos
sub
not
and
icebp
jno
fnstcw
sahf
aad
sub
jb
jmp
ficoml
into
sti
or
negl
mov
popa
cmp
mov
leave
xchg
movsl
loop
test
add
jge
xchg
mov
sub
push
popf
repz
fildll
jbe
add
mov
test
fwait
imul
xchg
js
or
mov
jnp
aad
lds
loope
and
outsl
jnp
sbbl
ljmp
stos
test
inc
xor
push
jo
fwait
lea
jb
cmpsb
lock
jmp
shll
xor
loopne
stos
mov
fisubl
sub
das
out
scas
or
xchg
leave
or
sbb
and
loope
icebp
sub
add
or
mov
or
fcompl
add
sub
pop
mov
fstl
sub
in
sub
jp
inc
sbb
in
aaa
jge
popa
and
and
mov
shlb
jp
out
popa
cmp
mov
sbb
cmc
out
clc
icebp
dec
mov
ret
cmp
out
daa
stos
mov
pusha
pop
pusha
sti
mov
jg
xchg
sub
scas
mov
sub
xor
gs
inc
mov
cwtl
cs
mov
add
popf
xchg
mov
adc
push
sub
dec
insl
fstpl
or
jno
mov
fnstcw
mov
pop
cmp
in
sbb
cmp
and
fs
add
push
inc
call
lods
mov
push
popa
mov
insl
lea
xorb
nop
push
dec
adc
pop
imul
xchg
mov
mov
test
cmp
mov
mov
add
fisttpl
pinsrw
mov
mov
dec
scas
pop
sahf
out
or
pop
icebp
fistl
cmc
xorl
mov
mov
loope
cld
and
jb
sub
hlt
and
push
xor
inc
into
andl
fcoml
ret
cwtl
mov
xor
lret
inc
add
and
inc
popa
mov
shld
outsb
addb
stos
hlt
push
inc
sbbl
push
xchg
jbe
sbb
es
pusha
jecxz
in
dec
pop
mov
and
in
leave
out
insb
push
call
adc
pop
inc
jne
shrb
imul
add
nop
cs
push
fisttpl
fs
inc
lds
fadds
adc
xchg
pop
push
dec
push
fistps
and
int
aaa
mov
mov
and
push
mov
aas
js
outsb
adc
sbb
or
lods
jnp
jp
out
mov
dec
fcos
fcom
fidivl
leave
push
xor
cmp
test
push
enter
push
lret
add
jb
aam
jbe
cwtl
push
leave
loopne
mov
je
xchg
imul
mov
jle
out
cmpsb
out
shrl
mov
sub
xchg
fsubrl
sub
sbb
movsb
push
cmpsb
cmpsl
mov
adcb
stos
or
les
fisttpll
or
push
fisubrs
mov
addr16
insl
jo
dec
mov
clc
cmpsb
pushl
aam
fs
jmp
stos
bnd
add
fstpl
xchg
aas
stos
lret
mov
or
fisubs
loopne
cpuid
adc
rcr
hlt
mov
bound
icebp
aaa
cltd
xor
dec
inc
or
das
ds
call
and
or
and
jbe
pop
push
shl
cmp
lcall
scas
test
jp
mov
mov
mov
sub
pop
sub
jge
jne
xor
jmp
pop
sarl
adc
mov
sub
in
scas
push
mov
push
mov
lds
fstpl
jle
mov
xor
fnstenv
push
inc
outsl
mov
add
lcall
mov
mov
mov
fst
or
fwait
notl
ss
movl
clc
xor
nop
sub
cmp
sub
inc
jp
add
aad
adc
in
dec
and
stos
std
lcall
and
in
and
sahf
mov
pop
sbb
xchg
loope
fsubr
aas
dec
mov
mov
xor
push
cmp
push
insb
jge
pop
add
pushf
push
and
xor
lcall
push
inc
subb
cmpsb
mov
fstps
or
ret
test
sub
ds
or
inc
dec
pop
sub
dec
into
fistps
xchg
test
fstps
push
ret
adc
mov
jl
dec
cmp
mov
ds
mov
adc
jnp
lret
sub
sbb
pop
aaa
inc
lods
and
dec
or
dec
push
mov
mov
lds
inc
test
shll
push
xorps
jo
pop
outsb
mov
and
mov
xor
add
xchg
xor
cmp
sub
daa
add
shrb
out
ss
scas
aam
cwtl
addb
mov
push
cmpsl
sub
adcl
mov
pop
in
ja
cmp
mov
mov
aas
xor
cmp
sub
shl
or
imul
aaa
xor
popa
js
lcall
jmp
dec
mov
neg
js
xor
pop
xchg
in
pop
dec
add
pop
inc
mov
sub
pop
sahf
mov
jb
lods
pop
fcomps
inc
in
in
nop
arpl
imul
aaa
movsb
xchg
push
inc
mov
pop
mov
xchg
xorl
mov
cmc
add
test
gs
aad
mov
xor
lods
cmp
xor
icebp
mov
inc
add
xor
out
and
mov
mov
mov
fsub
cli
or
lfs
dec
lods
imul
call
pushf
andl
inc
mov
fwait
push
shl
xchg
adc
mov
call
cmpsb
adcb
mov
push
js
pop
dec
mov
cmp
pop
push
xchg
mov
rcrl
nop
movsb
mov
scas
sub
fs
ja
loope
add
inc
imul
ss
adc
out
or
and
mov
add
cltd
andl
mov
test
stc
push
sbb
mov
jg
sahf
loopne
inc
adc
cli
sbb
std
or
gs
out
shll
jae
sub
mov
incl
sbb
aas
stos
sub
mov
add
data16
cmpl
in
nop
movsb
pop
das
push
aas
ja
cmp
scas
pop
shll
pusha
das
imul
pusha
cmc
jae
jae
pop
push
dec
fsubrl
mov
cmp
scas
cmc
dec
test
fists
or
and
add
mov
push
cmp
and
roll
mov
sub
inc
call
xchg
movsb
sub
stos
cli
xor
jge
das
jne
inc
mov
stos
pop
cmc
movsl
aaa
xchg
mov
mov
push
inc
popa
push
repnz
sbb
movsl
scas
imul
negb
and
ficoms
inc
lods
push
inc
xchg
dec
dec
adc
push
add
fiadds
fistps
inc
shll
in
cmp
push
xchg
mov
and
jp
cmp
push
pop
ret
das
and
js
lcall
adcb
leave
xlat
cmp
jp
cmp
xor
and
cmpsl
push
or
dec
push
mov
inc
sub
repnz
adc
inc
dec
dec
sbbl
push
xchg
sbb
mov
hlt
cmp
in
pop
pop
into
lea
sbb
cmp
mov
rorl
cmp
and
jp
ja
fiaddl
lds
andl
out
dec
jne
mov
cmp
shrb
add
push
pop
cli
lods
push
fs
imul
push
push
mov
jmp
xor
ror
repnz
mov
or
shl
jnp
loope
sbb
lret
sbb
mov
pop
or
mov
jb
rcrb
xor
les
std
mov
and
mov
inc
add
cwtl
inc
pop
dec
xchg
fidivl
cwtl
in
fcmovbe
xor
inc
mov
test
lahf
mov
push
jge
jg
jno
xor
repnz
fiadds
out
and
shlb
in
orb
push
inc
cltd
xchg
sbb
fnstcw
jge
stc
orps
rorb
stc
push
movsl
es
pop
push
je
xorl
loopne
out
fidivl
imull
hlt
add
or
jg
shll
pushf
sub
lret
dec
daa
lret
movsb
or
cmc
cmp
and
dec
mov
cmp
fwait
xchg
mov
fidivrs
stos
ret
out
fwait
mov
pushf
in
repz
add
jle
push
mov
cmp
sbb
out
sub
xchg
dec
pop
stc
mov
pop
ss
leave
inc
mov
xor
stos
cli
repnz
push
test
ret
and
mov
inc
mov
les
enter
sbbl
push
repz
inc
test
out
add
mov
jmp
sbb
sahf
lcall
mov
jl
jmp
fpatan
gs
push
sahf
dec
icebp
xor
and
push
xchg
hlt
fisubs
jg
mov
dec
hlt
imul
shl
mov
mov
lock
scas
out
decl
jno
int3
rcll
dec
test
pop
ja
pop
inc
inc
mov
fistl
adc
dec
mov
inc
add
out
xor
sbb
dec
jne
sbb
repnz
xchg
xchg
jo
sahf
ficoms
pop
sbb
loop
add
call
scas
arpl
nop
shrb
divb
or
lods
dec
xchg
pop
pop
mov
xlat
sarl
mov
jecxz
jns
fwait
xchg
fucomp
fimull
push
rcrb
push
cmc
and
test
popf
cmp
jne
ljmp
jne
mov
xchg
pop
jno
jno
jg
adc
or
scas
mov
mov
mov
mov
pop
es
jb
mov
mov
jmp
xor
sub
xchg
add
mov
aam
and
jnp
ds
inc
xor
fadd
cmpb
and
pop
pop
rclb
comiss
out
dec
and
pop
pushf
shlb
insb
adc
repnz
jb
cmp
adcb
js
jl
inc
hlt
shrb
ret
imul
sub
sarb
or
ja
fst
mov
imul
sbb
movsl
lea
adc
in
cmpsl
loope
es
scas
andb
inc
add
dec
sub
lock
push
loope
push
cltd
inc
insb
xchg
lahf
adc
mov
pusha
scas
mov
mov
lret
adc
popf
ret
scas
push
xor
outsl
pop
mov
mov
shlb
setg
mov
dec
imul
jns
xchg
sbb
push
xor
jecxz
inc
push
mov
cmp
lret
mov
rclb
loop
sub
xchg
mov
nop
mov
push
xchg
shrb
outsb
dec
fcom
into
sbb
jp
push
rcrb
mov
mov
lea
sub
mov
xlat
arpl
pop
mov
lods
jl
and
aaa
leave
mov
or
dec
aas
push
xchg
outsb
mov
sbb
pop
stos
pushaw
testl
fldl
mov
addr16
cld
jp
inc
sbb
sahf
inc
pop
movsl
jnp
cs
lods
xchg
sbb
sahf
jp
mov
out
aam
enter
out
xor
aad
jbe
cld
pushf
push
les
arpl
mov
adc
sbb
mov
out
push
mov
pushf
inc
push
vmptrld
fiaddl
arpl
cmp
xchg
aad
fdivs
jne
pushf
lods
jnp
out
dec
fwait
add
push
dec
xor
xor
sub
xor
xor
jb
xor
mov
lret
jne
lret
out
add
insl
cltd
lods
adc
insl
andl
mov
xor
or
jle
add
lock
stc
xor
sbb
jbe
add
mov
insl
fcoms
loope
fsqrt
aam
add
inc
or
mov
push
iret
mov
mov
out
mov
daa
orl
inc
aam
test
cmpsl
push
ljmp
ret
insl
pop
movsb
inc
fdivrl
and
cmc
dec
mov
shr
cltd
push
push
ljmp
lods
add
sbb
dec
scas
inc
test
pop
daa
mov
sbb
in
pop
pop
or
adc
and
andl
insb
push
lret
sti
fs
cmpsb
mov
int3
mov
loopne
jmp
mov
xchg
add
testb
cmpsl
mov
mov
test
jne
arpl
arpl
push
lods
shll
lock
rcl
inc
lods
xor
bound
and
pop
in
push
addr16
jp
or
popa
scas
lock
or
mov
push
test
inc
push
push
push
insl
scas
cmp
insl
mov
imul
test
ret
xchg
or
in
mov
and
mov
adc
or
call
add
iret
push
dec
cwtl
lea
push
xchg
or
cmpsb
inc
sti
fucomi
xchg
inc
fisubl
lods
out
aas
iret
jb
gs
inc
add
fs
add
xchg
sub
mov
leave
mov
mov
cld
mov
test
mov
pop
pop
pop
lahf
push
subb
pop
test
cmp
jl
sbb
test
cmp
mov
daa
into
out
adc
mov
adc
pop
jmp
jne
lcall
dec
stos
mov
nop
stos
leave
mov
outsb
les
adc
mov
lret
inc
sbb
loope
sbb
xchg
rorb
push
mov
mov
push
sbb
mov
popa
cmp
xchg
or
pop
daa
push
mov
iret
lods
stos
jmp
pushf
cmp
jge
adc
sbb
sub
int
sbb
orl
xchg
jmp
push
or
std
dec
pop
xorl
je
inc
adc
data16
push
xchg
ja
lret
xchg
out
fcoml
lock
nop
cltd
mov
dec
mov
add
push
imul
xor
add
aaa
nop
and
xor
sub
mov
nop
popa
fstps
cmc
mov
aad
jo
test
cwtl
loopne
cmp
out
lret
inc
push
lock
test
ret
aad
sub
cmp
roll
pusha
lahf
mov
adc
fstps
pop
or
dec
repnz
scas
dec
test
and
lock
cmp
sbb
cmp
sahf
js
loope
popf
pop
les
push
sbb
lcall
lret
cld
cmp
add
lock
pop
jno
sub
mov
bound
stc
mov
inc
dec
cwtl
sub
out
lcall
test
rolb
aad
test
lcall
push
add
sub
xor
pop
stos
addr16
jg
mov
add
std
xor
dec
in
jnp
aam
xchg
adc
arpl
aas
movsl
subl
gs
aaa
scas
and
out
push
stc
push
xchg
cmc
xor
xchg
adc
xor
mov
lods
jns
jns
lcall
orl
jecxz
mov
ljmp
cs
adc
xchg
xor
mull
test
movsl
rorb
shr
inc
idivl
dec
insl
data16
jno
or
nop
pop
add
inc
push
shl
jne
popa
stc
jns
mov
arpl
and
bound
jno
sahf
movsb
and
data16
sbb
xchg
cmp
add
and
popa
xchg
jle
dec
push
pop
out
fs
xor
sbb
gs
nop
adc
cmp
popa
mov
nop
pop
mov
sahf
and
fdivs
mov
sub
outsl
insb
xor
hlt
inc
xchg
inc
mov
lcall
inc
cli
negl
dec
mov
out
and
xchg
jg
enter
mov
mov
gs
ljmp
xchg
sub
imul
mov
das
ja
pop
test
sbb
push
mov
ds
inc
sbb
dec
sar
xor
cmpsl
rcrb
push
cmp
jecxz
cltd
jnp
jg
mov
mov
and
lret
adc
dec
jno
enter
inc
cli
int3
outsl
mov
ds
pop
or
lret
lret
push
movsb
add
adc
cmp
in
dec
mov
insb
inc
ret
mov
xor
stos
mov
add
mov
daa
movsb
xor
enter
andb
mov
push
adc
cmp
dec
or
xor
pop
adc
jae
add
cmc
cmp
aas
xchg
mov
sub
lret
jp
es
mov
test
and
mov
mov
outsb
bound
in
cmp
loop
out
mull
xlat
fwait
xchg
cmpsl
cmp
dec
arpl
fcomps
stc
lret
adc
push
cltd
imull
add
imul
xchg
adc
int3
mov
jb
mov
add
outsl
loope
sbb
adc
dec
push
push
xchg
or
scas
stc
iret
divl
jnp
mov
mov
fsubs
inc
sbbl
insb
or
fmull
adcl
clc
lds
sub
or
in
inc
repz
dec
sbb
and
and
pop
xchg
cmp
lock
adc
jecxz
lcall
jne
pop
out
js
and
jno
movsl
aad
push
into
mov
or
dec
js
dec
sub
aad
mov
jae
cld
movsl
inc
lret
push
cmp
fsubs
into
or
pop
push
dec
fldt
pusha
dec
xchg
fsubrl
cmc
les
inc
lret
push
stc
push
sbb
jne
sub
sub
arpl
mov
push
push
filds
jbe
insb
xor
mov
lds
fnstenv
sub
sbb
pop
lods
push
cli
inc
mov
mov
rorb
cmp
push
lahf
aam
pushf
pop
push
shr
ljmp
mov
aam
mov
lret
dec
add
cmp
and
repz
push
xor
mov
les
jae
push
xchg
test
add
push
xchg
pop
lds
arpl
andl
unpckhps
pop
and
jns
push
push
subl
and
dec
mov
push
jp
mov
mov
adc
in
orl
scas
add
push
jl
test
dec
stos
mov
jecxz
shr
pusha
xor
jl
add
loop
loopne
data16
xor
jno
mov
push
or
inc
xor
inc
xor
jmp
inc
push
pusha
arpl
xchg
cwtl
cmp
mov
xchg
pop
cmp
adc
add
jge
call
fisttpl
push
add
dec
xchg
mov
stos
inc
inc
or
into
and
adc
mov
orps
add
lret
adcb
lcall
stos
cmp
and
out
loope
mov
cli
add
jae
jmp
fmuls
pop
mov
lods
mov
mov
loope
or
mov
inc
jbe
mov
cmp
test
out
xchg
dec
addl
cmpsl
int
inc
rorb
sbb
out
rep
jmp
fistpl
or
cmpl
mov
adc
fstpl
xchg
mov
sti
pop
fcmove
mov
es
or
dec
cmpsl
push
scas
dec
cmpb
inc
int
in
or
and
cs
outsw
and
xor
in
ficoml
jp
inc
lcall
mov
push
aas
sub
adc
pop
cmp
dec
jle
aas
add
mov
mov
ss
dec
xor
scas
jbe
mov
stos
lea
sahf
pop
dec
xchg
sti
push
jnp
sbb
jle
cwtl
xchg
lock
notb
shll
inc
cmpsb
inc
les
inc
les
enter
adc
jmp
mov
adc
frstor
clc
mov
pop
cmp
mov
popf
adc
push
test
pop
test
inc
inc
jbe
cs
sbb
add
outsb
fs
pop
mov
dec
fcoml
insl
jmp
inc
aam
adc
jp
int
addr16
addr16
lods
lret
inc
mov
pop
push
and
movsb
imulb
into
rclb
jg
stc
lret
fistpl
fildl
jl
ror
adc
lods
js
scas
rol
cmp
push
mov
jb
push
mov
mov
pop
jecxz
enter
mov
mov
je
xor
pop
mov
repz
adc
mov
sarb
in
push
cmpsb
dec
xor
mov
dec
push
stc
cs
pop
ret
test
cmc
sub
lret
jle
push
push
ret
fidivs
in
dec
das
push
jo
cs
in
movsl
mov
push
lret
fisubl
inc
jg
pop
ds
lods
jnp
sub
out
jge
shlb
call
leave
adc
rcr
leave
pop
push
and
rolb
lret
jmp
notb
movsb
mov
pop
jbe
call
inc
lahf
mov
shlb
xlat
push
mov
ret
jl
dec
sub
jns
movsl
sbb
mov
mov
sub
rcrb
ss
or
in
jbe
shll
js
add
call
data16
std
push
or
jb
dec
into
pushl
and
out
leave
xor
jo
stc
jecxz
pop
xchg
mov
mov
xchg
arpl
clc
shll
popa
fcomp
mov
push
hlt
push
mov
stc
xchg
mov
pop
mov
xchg
pop
adc
andb
movsl
fs
popa
mov
add
pop
sub
push
fildl
dec
aas
shrb
adc
lcall
imul
dec
out
ljmp
sti
pop
test
and
mov
sub
imul
jle
push
loopne
out
jmp
push
ljmp
pusha
in
loopne
xor
adc
fadds
out
sub
pop
data16
inc
in
jmp
in
nop
push
dec
add
add
cld
push
cmp
mov
mov
and
arpl
dec
cmp
loope
push
or
dec
mov
arpl
add
mov
dec
bound
movsb
popl
push
fiaddl
loopne
mov
push
shll
fstpt
cld
dec
sub
test
fwait
pop
and
hlt
data16
mov
push
ljmp
jnp
inc
insl
jae
cmp
or
insb
fldenv
mov
movb
test
fnstcw
adc
push
dec
inc
adc
mov
push
ljmp
orl
mov
add
push
pop
cmp
jae
sub
push
mov
pop
dec
cmp
xchg
xor
loope
inc
lret
cmp
pusha
in
sub
mov
add
sub
icebp
divb
jnp
jp
mov
xor
hlt
xor
xor
test
imul
test
xor
jp
sbb
xchg
cmc
notl
mov
insl
dec
ja
aaa
imul
ja
ret
xor
xchg
enter
mov
lods
push
ret
pop
call
xchg
cmpsb
xor
and
scas
dec
jg
dec
fistps
fidivrs
cltd
cmp
mov
jl
inc
pop
sbb
xchg
jno
mov
or
xchg
fsubl
mov
fcompl
pop
jnp
push
mov
pop
popf
inc
mov
mov
sub
cs
pop
imul
icebp
testb
notl
mov
jne
cmp
and
and
or
inc
and
shr
mov
add
adc
in
nop
jle
jno
lods
jbe
rol
inc
sbb
mov
fwait
mov
fsubl
inc
ljmp
mov
adc
add
fadds
pop
add
aaa
imul
imul
add
push
repz
imul
fwait
fnstsw
jle
nop
inc
jb
insb
jbe
xchg
xor
js
add
jo
pop
mov
sub
stos
fdivrs
sbb
or
leave
test
or
jg
sub
andl
or
jle
popa
push
movl
lods
push
inc
push
out
sub
dec
push
repnz
mov
ror
lods
jmp
dec
cmpsb
dec
sub
jno
pop
or
popf
sub
fcmovnu
enter
test
or
mov
aaa
fcmovb
nop
fiadds
mov
inc
call
sbb
mov
xlat
add
cld
inc
and
mov
mov
movsb
add
gs
pop
or
sub
and
pop
xchg
addr16
push
sub
sub
das
xchg
pop
in
adc
sbb
ds
jp
outsb
es
jg
mov
sub
add
pop
sub
push
das
es
and
cs
sti
sub
test
mov
mov
mov
js
mov
or
lods
fldt
clc
fidivl
fistl
pop
jecxz
ljmp
jne
cmpb
jl
in
std
mov
les
xchg
movsb
stos
add
pushf
jl
mov
adc
and
or
movsb
es
inc
outsl
ret
mov
pop
and
jle
lret
jp
xor
das
adc
xchg
xchg
dec
and
mov
pmuludq
je
and
icebp
cwtl
or
mov
sbb
notl
ret
stos
stos
cltd
jle
insl
jp
pop
in
fwait
jnp
xchg
cmp
and
rorl
push
popf
pop
push
jle
cmpsl
aas
rclb
fwait
jge
mov
lret
push
in
jmp
dec
sub
stos
pop
adc
xor
inc
dec
or
sti
data16
push
bound
daa
repnz
xchg
sub
push
clc
and
or
sub
cmp
outsb
arpl
jmp
out
out
pop
arpl
iret
add
loope
sub
push
lods
mov
fmuls
xchg
xchg
mov
or
jae
mov
aad
cmp
lods
add
adc
mov
int3
mov
adc
repz
dec
fiaddl
in
leave
mov
adc
mov
push
add
pop
xchg
enter
movsb
cld
dec
jno
pop
mov
jae
pop
stos
mov
push
ja
out
nop
les
inc
mov
xlat
xchg
repnz
mov
ljmp
jp
and
xchg
fisubrl
scas
xchg
cli
jbe
fidivrl
mov
mov
cmpsb
test
xor
adc
test
je
nop
sti
inc
add
aam
pop
fildl
sbb
mov
loop
aaa
or
mov
adc
fcoml
add
add
cs
add
rcrb
ret
jbe
pop
lock
out
jb
xchg
in
mov
loope
js
scas
out
test
pop
shrl
inc
rorb
inc
jl
dec
mov
xor
imul
xor
cwtl
mov
ja
lock
mov
cmpsl
std
push
or
dec
mov
mov
dec
xorl
cs
in
xchg
insb
scas
cs
push
andl
test
push
clc
adc
inc
aam
pop
lock
fcomps
data16
insb
dec
mov
mov
dec
addr16
or
movsb
push
fcomps
push
int
mov
add
cld
dec
jb
or
mov
xlat
jnp
dec
push
jmp
repnz
adc
or
pop
and
jle
dec
or
aam
cmpsl
inc
xchg
sbb
mov
mov
pop
out
lcall
and
aad
adc
out
mov
testl
loopne
rorl
cld
popa
es
jno
mov
shl
and
push
fsubl
push
adc
mov
fnsave
sub
enter
addr16
in
cmp
pop
adc
inc
xlat
mov
sub
mov
push
jns
mov
and
outsl
pop
adc
loop
push
dec
cli
dec
cmp
stc
mov
push
and
xchg
mov
lock
dec
mov
jmp
stos
fsubrl
out
adc
movsl
jmp
aaa
lea
dec
cld
dec
cmc
xor
xor
mov
mov
lret
daa
cli
sbb
popa
fcoms
cltd
push
and
es
sub
mov
icebp
lods
inc
notb
jb
insl
int3
mov
mov
jno
test
pusha
fs
fldl
push
inc
mov
and
inc
xchg
sbb
inc
js
dec
xchg
inc
ret
and
aad
rol
mov
aam
add
psraw
stos
lea
inc
sbb
mov
pop
cmp
pop
cld
shlb
inc
cmpsl
imul
cmp
add
sub
lahf
and
mov
push
cmp
sarb
insb
mov
out
les
push
jne
xchg
jge
sbb
jl
rorb
mul
iret
adc
daa
fcmovnb
sbb
xchg
pop
popl
mov
push
rol
movsb
xchg
imull
mov
lods
inc
jl
clc
or
jb
aam
cmp
cmc
jp
gs
pop
mov
scas
pop
mov
mov
cmc
lahf
int
icebp
sbb
xchg
mov
xchg
dec
repnz
push
add
cwtl
lds
movb
lahf
imul
imul
sbb
inc
mov
repz
jnp
push
lret
leave
mov
xchg
push
rcrl
jb
mov
rolb
adc
xor
fidivs
sbb
in
cli
cmpb
enter
out
test
jmp
mov
lds
cld
sbb
dec
xchg
adc
loop
and
jnp
out
cli
icebp
dec
fbstp
fstpt
cltd
mov
mov
inc
pop
push
dec
test
dec
imul
xchg
add
loopne
enter
mov
or
lods
bound
js
in
fwait
sbb
cmp
subl
sahf
jmp
pop
lahf
xchg
pop
jecxz
lret
es
xor
pop
clc
or
aam
push
cmpsb
aaa
fcmovne
push
or
shufps
shrb
cli
add
mov
hlt
pop
xchg
push
clc
sbb
test
mov
xchg
ror
mov
push
fwait
pop
sub
addr16
ret
sti
mov
sbb
sahf
mov
mov
ret
sub
cmp
xchg
and
adc
dec
popa
jns
jl
into
sbb
inc
adc
mov
or
sub
test
setbe
shrb
jmp
jmp
inc
sbb
sbb
cmpsl
pop
loopne
pushl
adc
rcrb
jnp
xchg
pop
add
mov
push
pop
push
mov
lock
daa
aam
in
in
xchg
push
movsb
mov
or
jno
dec
pushf
sbb
xor
jno
mov
lock
sub
dec
ds
mov
pop
imul
fsubs
xchg
loope
into
adc
dec
cld
cmpsl
sbb
pop
cmp
jecxz
sub
adc
sub
dec
or
imul
subl
xor
xor
pop
xchg
push
mov
jl
mov
mov
inc
aaa
aad
mov
lds
outsl
ljmp
mov
inc
lds
xchg
adc
cs
mov
ret
push
leave
stos
or
incb
rcl
repz
in
mov
sub
sbb
fcmovnbe
orb
sub
das
pop
adcl
push
aad
pop
les
pop
push
in
pop
outsl
cmp
mov
xchg
rorb
jmp
pop
sahf
outsb
lcall
enter
jne
stc
inc
and
push
add
ficompl
dec
cmp
jno
testb
inc
in
push
clc
test
cmpsl
cmp
out
add
xchg
jl
sarb
pop
jo
push
bound
test
pop
push
cmp
cltd
cmp
rep
imul
mov
xor
in
insl
ror
sbb
jmp
sub
push
adc
adcl
insb
add
dec
psllq
push
ljmp
int3
fcos
int
lods
pop
mov
imul
mov
in
push
popa
loop
insb
daa
and
push
add
sti
mov
and
cs
pushf
adc
sbb
xor
nop
bound
scas
or
xor
jo
mov
ret
jmp
shlb
and
movd
mov
add
push
lds
mov
sbb
jns
adc
jp
xor
mov
dec
adc
fs
sub
dec
mov
pop
jl
jo
mov
movsb
daa
cmpb
xchg
sub
dec
xchg
inc
cmp
dec
jle
mov
sbb
shl
bound
cmpsb
in
push
xor
pop
mov
dec
data16
adc
jne
mov
insb
inc
and
and
add
cmpl
inc
imul
pop
outsb
dec
iret
xor
push
push
sbb
pop
lret
jo
jne
mov
xchg
xor
ret
adc
in
sbb
xchg
jge
out
mov
sbb
or
mov
neg
pop
lahf
push
sub
cs
xor
xchg
sbb
mov
scas
push
and
cli
mov
enter
loop
and
das
divl
dec
push
out
aaa
sbb
clc
shrb
popl
leave
xor
cld
pop
mov
sahf
or
pop
dec
jnp
jns
dec
ret
jbe
push
mov
sub
mov
sbb
lahf
sub
stos
insl
std
notl
cwtl
cld
fdivrp
popa
dec
adc
jecxz
js
cli
lret
out
ds
syscall
incl
inc
sbb
sbb
loop
push
pop
mov
leave
lret
lret
hlt
jne
and
addl
mov
mov
xchg
xchg
shll
test
inc
add
push
and
pop
inc
inc
mov
mov
or
pop
int3
aad
movsl
imul
xchg
shlb
fcmovne
cmc
or
orl
mov
cs
xchg
arpl
les
cmp
inc
out
fstl
stos
rcrb
rcrl
pop
xchg
lods
je
lret
cmpsl
inc
pop
mov
cmp
loop
out
push
out
xor
inc
sub
jp
mov
stos
inc
lret
sbb
pop
mov
xor
or
sub
pop
and
or
in
xchg
aas
jg
xchg
aaa
mov
xor
mov
or
data16
jnp
and
orl
fcoml
imul
test
or
and
fwait
and
jne
adc
in
pushf
jmp
or
aad
jmp
shrb
jge
jecxz
es
push
dec
test
test
popf
fwait
mov
pop
jbe
sub
fincstp
daa
sub
pop
sbb
sbb
pushfw
imul
push
jp
loop
sbb
fwait
xlat
std
mov
pop
pop
dec
jo
adc
mov
adc
loopne
adc
mov
push
sbb
xchg
sahf
movsl
xchg
add
sbb
push
mov
push
mov
cmp
rcl
dec
inc
je
mov
aas
das
inc
ret
and
sti
push
lds
pop
ds
cmp
mov
ja
pop
mov
adc
fcompl
adcl
lea
rclb
rclb
pop
in
pop
std
and
roll
sub
scas
or
adc
stc
inc
out
lcall
decl
mov
ret
iret
sub
hlt
add
fisttpll
mov
sbb
add
lock
or
outsb
pop
jne
repz
and
jg
inc
pop
mulb
lods
lahf
mov
ljmp
xchg
jecxz
ret
pop
decb
clc
pop
and
and
loopne
shrl
push
movsl
fstp
and
mov
sub
sahf
movsb
daa
sub
repnz
mov
pop
inc
xchg
adc
fstpt
jbe
popl
push
jp
cwtl
inc
in
popa
in
das
test
xchg
jnp
movsl
mov
test
sub
mov
sti
imul
ret
or
xor
xchg
ljmp
js
sbb
mov
rcrl
sub
dec
inc
lods
mov
push
pop
mov
add
lret
jg
cmp
push
inc
mov
pop
mov
lret
jae
imul
mov
test
aaa
ss
and
pop
mov
test
mov
push
xchg
pop
test
push
adc
loop
imul
shr
cld
adc
movb
leave
stos
push
or
adc
dec
stc
call
daa
jbe
push
std
lds
xor
or
repz
mov
pop
push
push
addr16
daa
sbb
imul
lds
mov
movsl
inc
jns
and
mov
mulb
pop
or
inc
pop
daa
pop
mov
mov
movsl
in
mov
into
mov
lahf
mov
pop
hlt
popa
and
scas
cmp
lds
sub
mov
xchg
or
add
and
outsl
js
jo
mov
jnp
icebp
jecxz
push
mov
cwtl
enter
lahf
rorb
out
inc
dec
lods
ret
aaa
add
test
mov
ficomps
movsl
mov
dec
adc
jae
insb
mov
sub
out
imul
lods
mov
xchg
gs
sbbl
repnz
lock
add
inc
out
jle
test
cwtl
adc
ds
shrl
movsb
pop
add
loope
in
xor
push
test
pop
sbb
test
jecxz
rcll
std
mov
rcrl
pusha
scas
fstpl
add
xor
loope
test
fs
pop
xor
mov
mov
fyl2xp1
mov
jns
mov
adc
mov
mov
lock
mov
add
mov
xor
imul
sub
pusha
xchg
mov
popa
pop
mov
lock
adc
std
add
pushf
cmpsb
cmp
cmpsb
jecxz
mov
sbb
cli
in
mov
jne
cmp
sbb
aad
mov
push
lret
fidivrs
std
gs
adc
hlt
cmp
xchg
enter
pop
inc
xchg
adc
scas
sahf
cmp
outsl
xchg
mov
jecxz
dec
mov
arpl
vmovhps
push
mov
test
push
gs
mov
mov
in
ss
daa
mov
gs
leave
sub
loop
dec
cmp
std
pop
dec
xor
mov
mov
xchg
mov
xchg
sub
xlat
or
lods
cwtl
call
jno
int3
mov
dec
stc
push
jg
adc
leave
xor
mov
cmp
cli
inc
and
movsl
ljmp
inc
ljmp
cmc
lea
pop
adc
sbb
xorb
push
es
stos
jb
stos
mov
fisubrs
std
inc
ljmp
xchg
pusha
lret
add
out
stos
pop
stc
mov
and
iret
lds
dec
mov
sbb
mov
xor
jp
sbb
icebp
sti
mov
std
mov
xlat
push
pop
mov
mov
repz
daa
into
gs
push
push
mov
mov
mov
add
cmpl
iret
bound
cmp
xor
cmpl
jmp
mov
icebp
push
lods
cwtl
xchg
pop
sub
push
jmp
mov
mull
mov
add
lock
out
push
push
into
cmpsl
jp,pt
call
inc
in
dec
xchg
test
xor
jle
mov
or
insl
daa
and
adc
shll
add
rcrb
or
push
mov
es
ljmp
stos
in
lahf
rorb
fwait
stos
imul
mov
jb
mov
jg
or
xchg
pop
pop
sub
add
jno
or
sbb
xor
fs
and
sti
movsl
out
sub
repnz
sbb
loop
xor
mov
push
call
add
stos
xorl
sbb
jmp
add
mov
mov
jmp
inc
pop
mov
and
mov
add
mov
jbe
imul
xor
sbb
lahf
enter
test
in
rolb
or
cmpb
and
push
data16
mov
xchg
decl
pop
xchg
mov
outsb
sti
leave
cmp
sub
stos
pop
sub
or
and
shlb
sub
sub
in
add
xchg
cmc
sub
negl
xor
mov
ljmp
dec
xor
in
fwait
push
into
rclb
dec
das
nop
pop
mov
adcl
xchg
mov
and
add
push
test
pop
xor
ret
push
mov
rorl
push
mov
mov
jo
fldt
pop
and
push
rorl
or
cld
dec
push
push
dec
js
pop
outsb
imul
loopne
jb
leave
push
mov
xchg
fsts
fcmovne
xor
jl
ds
adc
je
pusha
ds
mov
sti
push
and
idivl
inc
dec
popf
fs
scas
and
ret
jne
std
cs
movb
pusha
scas
sub
outsl
pop
out
fists
sahf
and
fistps
cmpsl
xchg
fidivrl
xor
sbb
scas
sarl
inc
jmp
movsl
icebp
lcall
add
cmp
mov
mov
adc
and
inc
dec
and
or
xchg
imul
jge
jg
add
in
push
and
sahf
add
xchg
aad
push
add
sbb
pop
cmp
ja
pop
insb
pop
mov
sub
mov
cltd
mov
dec
and
pop
pop
cmpsb
dec
xor
xchg
insb
mov
jns
or
cmc
pushf
sub
out
fs
nop
insl
arpl
cltd
or
clc
fmulp
sbb
movsb
std
out
and
cmpsl
mov
inc
ss
pop
and
push
ljmp
and
sbb
shrl
jg
cltd
aad
add
sbb
xchg
cli
sbb
xchg
je
and
jle
lods
iret
stos
sti
test
and
push
pop
mov
xor
clc
adc
orb
mov
push
call
sbbl
repz
push
repnz
mul
mov
dec
xor
sbb
mov
add
jns
push
add
dec
scas
int3
adc
nop
ficoml
popf
out
lret
xorl
stos
fs
gs
xchg
xchg
push
push
inc
mov
out
outsb
mov
jl
mov
cmpb
enter
and
adc
jge
les
xchg
xor
push
stos
cmp
sub
test
pop
adc
das
cmp
cs
lds
loop
xchg
cmp
or
scas
mov
jecxz
sub
push
cmp
jl
pushf
xchg
bound
iret
sbb
adc
dec
jns
cmp
mov
sti
jl
cmp
sbb
xlat
cmp
pop
ja
scas
cmp
and
push
dec
sarl
imul
andl
inc
sti
push
sbb
cmpsl
push
mov
aaa
je
dec
dec
out
cmpsl
inc
mov
hlt
push
in
dec
fcompl
dec
pop
jb
cmp
or
or
inc
xor
jle
mov
leave
mov
xchg
ror
jl
incb
push
cltd
xchg
sub
adc
lods
adc
shrb
ret
addr16
lret
enter
jl
pop
dec
cmp
popf
push
rep
push
xor
pop
adc
shll
mov
sbb
push
adc
test
dec
sbb
or
bound
or
xor
sbb
outsb
adc
mov
xlat
pop
mov
pop
scas
mov
test
enter
mov
shrl
sub
or
bound
cmpsb
cmp
push
push
mov
dec
pop
pop
ret
scas
and
push
int3
pop
mov
test
pop
test
js
dec
jns
pop
push
push
shll
jle
loope
movsl
mov
fs
jg
mov
daa
fwait
xor
and
pop
xchg
push
sarb
inc
inc
loop
test
fists
xchg
push
mov
push
mov
cmpsb
rcl
mov
in
mov
mov
xor
cmp
add
or
sub
ljmp
test
cmpsb
out
cmp
std
mov
clc
push
sbb
mov
insl
test
and
in
iret
enter
cmpb
inc
jno
sub
mov
add
xchg
test
or
stos
call
mov
and
movsb
cwtl
testl
jo
or
xchg
mov
pop
fmull
jbe
scas
jbe
adc
sub
scas
cmpsb
cli
enter
mov
es
cmp
fdivs
xchg
adc
mov
roll
or
jp,pn
push
cli
jbe
dec
dec
mov
rclb
jle
test
fwait
jnp
sub
das
arpl
shlb
sbbl
out
data16
int3
pop
call
popf
aaa
adc
jo
out
mov
or
dec
mov
cli
sub
push
mov
dec
fists
imul
mov
out
sub
fwait
mov
mov
and
xor
pop
sub
mov
mulb
cmc
push
xlat
cmp
mov
cs
lock
iret
adc
jmp
or
cmp
jmp
lods
adc
stos
nop
mov
pop
jecxz
jl
mov
pop
mov
mov
mov
arpl
call
bound
inc
dec
or
mov
sub
pushf
test
or
mov
push
adc
and
xchg
subb
push
jb
sbb
in
inc
jg
call
mov
jg
pusha
mov
pop
imul
and
push
mov
scas
dec
addr16
xor
add
mov
shl
mov
pop
shrb
ja
or
cmp
add
std
fisubs
jae
or
add
xchg
in
rep
cmpsl
sub
stc
adc
leave
mov
aad
sbb
pop
add
adc
dec
mov
mov
gs
fildll
cmp
cs
xor
push
rcr
adc
xor
jmp
mov
cmp
jmp
testl
fisubrs
imul
sbb
insl
jp
fnstcw
jecxz
dec
scas
rorl
insl
xchg
int
sbb
push
cmpsl
fisubl
bound
out
lcall
fstpt
sub
gs
mov
mov
jae
jb
cmp
mov
test
in
xor
iret
int
xor
call
icebp
push
push
decl
add
adc
jmp
mov
and
scas
je
iret
adcl
mov
xchg
das
inc
ret
test
jg
xchg
xor
scas
cli
jae
cli
inc
pop
in
orb
fbstp
sbb
mov
ljmp
rcl
dec
ret
inc
mov
mov
xor
mov
mov
psrad
cmp
dec
jo
mov
cld
aad
gs
dec
jbe
out
imul
cmp
adc
jmp
jecxz
push
cli
adc
jle
das
pop
push
jmp
mov
imul
and
mov
aam
xlat
std
mov
lock
dec
repz
mov
in
cmpsb
or
movsl
sti
mov
xchg
das
inc
into
mov
xor
push
out
pop
jno
fstpl
and
loop
maxps
jge
pop
push
gs
nop
mov
in
sbbb
sub
jno
dec
pop
dec
in
lret
insb
push
rcrb
repz
ja
mov
das
mov
popa
clc
jbe
push
jg
fmulp
bound
jbe
sub
jns
add
mov
ret
sti
adc
iret
push
and
jmp
mov
ljmp
sbb
mov
pusha
fildll
inc
mov
int3
shlb
push
jbe
movsb
cmc
pop
psrlq
add
cmpsl
jno
insb
les
pop
adc
ljmp
aas
mov
lods
popa
dec
movsb
adc
cmp
loop
rclb
clc
sbb
inc
mov
or
into
test
inc
xchg
xor
clc
ret
scas
mov
mov
sub
in
rolb
lods
mov
inc
xchg
aaa
add
xor
rcl
jns
xchg
and
sub
mov
sub
idivb
adc
test
in
int
mov
in
das
clc
mov
cmp
and
outsl
icebp
int3
jno
cmpsb
cwtl
cmc
popf
lods
sub
shrl
pop
cmp
repz
jecxz
pusha
lahf
ret
or
sbb
iret
and
mov
test
push
enter
loop
mov
imul
mov
add
or
push
fsubrp
shll
push
sbb
xchg
inc
rclb
inc
fstp
sbb
aad
outsl
es
jo
or
rclb
jb,pt
and
je
fsubrp
out
cmp
dec
pop
out
test
shll
xchg
jo
sub
push
adc
mov
cwtl
xchg
cmc
cmpsb
and
lea
mov
sbb
test
and
js
mov
mov
lcall
icebp
xor
aas
pop
dec
add
inc
shl
int3
inc
arpl
lret
andl
jae
push
sti
mov
sti
clc
es
enter
push
popa
inc
subl
add
dec
jle
dec
ds
mov
and
in
cmpsb
mov
pushf
jb
xchg
dec
xchg
cld
shll
adc
in
mov
xchg
fs
ljmp
sbb
mov
stos
sbb
pop
cli
lea
xor
hlt
mov
adc
xor
jle
daa
insb
or
adc
data16
xor
mov
shr
mov
iret
mov
aaa
rcll
ret
data16
ret
scas
rolb
xor
daa
mov
lods
inc
decb
pop
enter
pop
sub
je
mov
mov
cmp
sub
sahf
jecxz
int3
es
mov
int3
fcompl
ss
mov
inc
movl
ret
shl
inc
push
mov
jo
repnz
leave
int
add
pop
jp
mov
mov
js
ret
push
fimuls
aas
lods
mov
aad
sbb
or
or
popf
cmp
or
mov
mov
dec
notb
sub
mov
in
imul
ja
push
xlat
sbb
xchg
jb
dec
xor
test
mov
fldcw
push
or
jl
jne
test
and
xor
jecxz
loop
fs
and
scas
bound
sbb
mov
popf
pusha
orl
repz
mov
xchg
iret
jns
dec
fwait
jl
ficomps
sbb
aam
xchg
fcmovu
clc
pop
fwait
ret
jl
pop
inc
inc
or
pop
sub
mov
push
int3
dec
push
or
add
test
xchg
in
push
pop
push
jo
out
adc
jle
and
repnz
sbb
ja
push
lods
jg
inc
aam
pop
or
mov
cmp
in
sbb
mov
rep
xchg
mov
fmuls
or
adc
in
xchg
std
pusha
mov
mov
shrb
cmp
xchg
rcrb
cmp
and
pushf
insb
dec
test
inc
push
cmp
daa
aad
push
leave
cmpb
dec
cltd
in
aas
ljmp
push
pop
mov
mov
movsl
push
jle
mov
jg
nop
into
pop
add
fisubs
cmpsl
inc
hlt
mov
jp
ss
xor
sti
popf
fldl2t
dec
inc
out
pop
in
inc
shrl
gs
ljmp
fstpl
addr16
xor
sbb
jge
and
push
mov
xor
cmpsb
fisubrl
sbb
ret
lock
xchg
inc
and
fdivp
cmp
aaa
pminub
jg
xor
and
sbb
push
repnz
rcl
cmpsb
loopne
sub
xor
add
adc
sahf
push
ficompl
cs
enter
jge
xchg
push
repz
cli
imul
ss
push
lret
or
imul
push
int
enter
cld
js
pop
mov
inc
or
inc
flds
int
ret
mov
mov
mov
jl
jmp
push
cwtd
add
es
mov
std
sub
nop
adc
pop
test
cmc
pop
xchg
mov
or
mov
in
ds
mov
pop
dec
mov
jp
dec
aaa
stc
pusha
aas
dec
cmpsb
dec
in
movsb
xchg
mov
adc
out
packuswb
xchg
int3
dec
daa
sub
and
mov
pop
icebp
jl
push
sub
or
mov
int3
ja
jecxz
mov
mov
or
push
loopne
jle
jbe
mov
and
add
and
push
push
ret
xrelease
nop
dec
jae
into
and
xor
mov
push
jmp
iret
int3
shr
sbbb
or
repnz
mov
fwait
in
xchg
cmp
arpl
ja
popf
inc
mov
repnz
mov
xchg
jno
or
and
mov
addl
enter
out
in
lret
test
loopne
lret
test
push
out
mov
pop
xor
pop
scas
mov
bound
mov
jb
hlt
push
rcll
jne
movsl
es
iret
sbb
inc
cmp
or
and
iret
das
arpl
pushf
sahf
jbe
popf
xor
imul
or
pop
dec
call
dec
push
and
shr
or
rcl
sti
pop
ss
mov
pop
int3
mov
fisubrs
pop
dec
mov
inc
lea
cmp
pop
and
scas
add
mov
mov
lods
enter
push
rclb
fmuls
fists
arpl
adc
repnz
sti
in
stos
outsl
mov
mov
jmp
leave
jmp
xchg
adc
inc
rcrb
jne
pcmpgtw
insl
mov
stc
pop
in
or
mov
rorl
cmp
aad
add
int3
sub
sub
loopne
dec
push
fstpl
pop
loopne
lret
or
xchg
xchg
scas
ss
jg
data16
loop
icebp
push
movsl
and
and
pop
cmp
push
cmp
movsb
and
cli
rcll
sub
pop
test
xchg
loop
jno
pop
repz
adc
sub
mov
scas
xchg
call
pop
mov
iret
pop
add
fwait
sub
add
movsb
pop
cmpsb
cld
bnd
sbbl
sbb
jmp
cmp
mov
xor
cmp
push
jmp
cld
cwtl
and
leave
out
popf
pop
mov
cmp
leave
das
jae
pop
xchg
mov
sbb
dec
fucomip
inc
out
cmp
clc
arpl
or
clc
jns
and
mov
adc
mov
cmpsl
fidivrs
sub
adc
scas
ds
mov
cmp
adc
push
fs
xchg
dec
loop
push
pop
fsts
into
pop
pushf
push
xlat
mov
pop
in
cld
mov
jg
mov
jp
in
aam
jno
jno
push
rorb
add
sbbb
mov
shrl
jle
mov
fdivrs
aaa
in
test
jae
aad
in
push
push
mov
or
jb
and
sbb
inc
cmpsl
push
cmpsl
push
outsb
pop
and
daa
cli
ror
lods
aas
fstp
jnp
or
mov
int
push
jno
jns
cmp
or
cltd
cvttps2pi
jmp
xor
jne
xlat
jne
pop
icebp
and
scas
movsb
adc
shl
stc
xchg
add
inc
mov
outsl
xchg
data16
sub
sbb
push
jae
adc
enter
xchg
dec
pusha
or
pushw
cmp
popf
mov
movsl
mov
pop
dec
insb
pop
add
cmp
out
inc
addb
mov
inc
inc
push
data16
jno
mov
sbb
xchg
jbe
jae
xor
pop
in
ja
cmp
cmp
in
repz
push
imul
xor
and
mov
daa
xchg
pop
inc
push
sar
nop
or
push
repz
sub
fisttpll
sbb
inc
adc
lock
xor
jne
dec
lods
xchg
and
jns
stos
cltd
jb
mov
inc
loop
push
sub
pop
adc
xor
xlat
push
mov
cmpsb
and
pop
sub
push
add
sub
xchg
fwait
in
ret
rclb
stc
lds
dec
sti
insl
mov
pop
pop
and
pop
push
test
arpl
sbb
inc
cmpsb
scas
or
imul
pop
testb
xchg
jecxz
std
dec
addr16
ss
pop
adc
icebp
lcall
jne
or
fldt
add
ret
cld
push
dec
cmp
or
mov
sub
adc
adc
pop
jne
es
adc
out
insb
das
add
push
stc
mov
fsubl
push
pop
push
hlt
mov
dec
roll
adc
in
lcall
mov
xchg
jnp
mov
and
xchg
out
push
int3
in
push
fisubrl
mov
lods
popa
mov
or
inc
mov
insb
ud0
lds
fs
push
pop
mov
xchg
jp
push
or
xchg
pop
mov
sbbl
test
sub
push
pop
xor
xchg
lods
xchg
xchg
mov
int
cmp
mov
pop
inc
mov
push
xchg
mov
lahf
ficomps
lods
adc
adc
push
pop
adc
stos
mov
sha1msg1
lahf
cmp
sub
jb
shl
rorl
in
icebp
push
pop
xchg
mov
por
and
cmp
adc
and
pop
test
jle
aaa
or
cmp
fsubrs
test
stc
push
das
pop
mov
test
rdtsc
sarl
jmp
fcomp
add
sub
lea
lret
sahf
fcomi
xchg
inc
pusha
sub
mov
int
push
jg
add
cmc
loope
in
xor
shl
fwait
and
pop
xchg
jle
jne
int
out
rcrl
sub
fucom
je
jp
sbb
lods
mov
mov
jp
in
push
push
stc
dec
fcomp
or
sahf
es
popa
fwait
cltd
rcrb
ret
mov
mov
dec
insb
in
mov
xchg
and
pusha
out
fildl
add
mov
and
fwait
cmpsl
fldt
das
int
adc
lock
mov
not
orb
mov
out
adc
shlb
inc
fwait
loopne
dec
mov
cmp
aam
out
pop
js
pusha
adc
adc
std
xorb
adc
dec
and
rcll
or
inc
sub
push
lock
sub
bound
ss
int3
mov
out
xor
mov
mov
xchg
aam
pop
cmp
jne
adc
lock
test
jp
addr16
push
adc
or
dec
test
sub
pop
in
xchg
les
sub
inc
call
mov
cs
jge
sbbb
pop
fdivr
xor
sbb
mov
adc
sti
cmp
xchg
pushl
int3
pop
int3
sub
add
xchg
aas
fisttpl
jmp
sub
add
subl
cs
pop
xor
icebp
push
fldenv
inc
ret
into
stos
cmp
and
pop
pop
push
sarl
lods
mov
iret
and
stos
push
andl
and
inc
mov
push
sub
push
mov
mov
adc
cmp
adc
ljmp
xchg
mov
jnp
mov
test
xchg
rcrb
out
jns
mov
das
call
test
or
lcall
push
scas
ficomps
int
jmp
mov
and
push
fsubl
ret
or
jnp
pushf
mov
das
pop
dec
jae
xor
push
push
mov
inc
sub
fdivl
rcrb
xchg
out
cld
push
insl
mov
andps
mov
das
sahf
sub
sub
aad
mov
jl
xchg
jne
stc
xchg
jns
sbb
out
adc
xor
test
scas
fidivrl
jnp
adc
adc
loope
out
outsb
mov
and
xlat
lds
mov
out
push
push
lds
imul
push
ja
loop
outsl
jae
inc
cmpl
je
icebp
add
push
ret
dec
or
arpl
daa
repnz
mov
adc
rorl
aad
ds
mov
add
xchg
in
push
insl
out
jle
subl
or
mov
daa
mov
arpl
xchg
int3
pop
xlat
or
cltd
mov
fwait
cltd
mov
sti
dec
mov
daa
pushf
xor
add
sbb
inc
es
loop
clc
push
sbb
cmp
ja
test
lea
aas
xor
mov
in
jns
lock
cmp
fcoml
cld
inc
addr16
imul
jb
mov
mov
dec
dec
test
bound
inc
das
add
jbe
and
movsl
add
cmp
out
outsb
sub
mov
pop
inc
pop
or
jl
fimuls
inc
mov
movsl
mov
push
sbb
or
test
pop
ds
ja
mov
imul
sahf
xchg
lock
mov
cli
cmp
jae
jne
mov
inc
popf
xor
nop
imul
movsl
lea
or
pop
cmp
sub
das
adc
xchg
mov
push
pop
lea
or
sub
cmp
cmovg
sahf
xor
push
mov
daa
jns
addl
rorl
inc
push
jp
sub
sbb
pop
ljmp
push
das
mov
repz
rcrb
cmp
push
and
jne
pushf
cld
add
cmp
inc
repnz
xchg
cmp
leave
iret
dec
out
mov
je
push
call
mov
xlat
dec
push
out
scas
cmp
inc
outsb
or
aaa
inc
mov
stos
or
das
stos
pop
stc
rorl
stos
gs
add
call
pop
popa
insl
fsts
xchg
mov
daa
js
mov
or
bnd
pop
enter
push
sbb
frstor
or
mov
inc
mov
adc
and
xor
in
icebp
or
jb
push
and
cmovge
imul
sahf
xor
pop
pop
les
or
jbe
jne
mov
mov
mov
mov
shlb
stc
pop
push
repz
inc
sub
inc
jnp
lock
mov
mov
xchg
pop
insl
xlat
repz
pop
and
aam
xor
xor
adc
aas
adc
fnsave
pop
cltd
enter
sbb
outsl
cmpl
mov
cmp
mov
imul
adc
push
lods
jo
mov
pop
pop
divl
int
mov
test
call
les
aas
mov
add
data16
sti
and
mov
cmp
gs
xlat
pop
pop
and
scas
ja
cmc
repnz
xchg
jmp
mov
aam
xor
std
jnp
cmpb
lret
dec
ja
cmpsl
inc
stos
aaa
jbe
iret
adc
mov
inc
mov
pop
cmc
mov
jmp
xchg
sbb
jo
scas
cmp
js
xchg
mov
xchg
call
fistl
mov
mov
fists
punpckldq
inc
dec
jge
push
and
daa
lahf
xchg
or
add
scas
popa
adc
push
or
push
ret
movsb
adc
inc
jmp
rclb
xchg
xor
xchg
mov
in
mov
mov
cmp
cld
pop
or
std
mov
shr
ds
dec
push
mov
das
push
cmp
sbb
sub
push
call
aam
xchg
cmpsb
dec
xchg
xchg
push
xor
out
inc
adc
jl
add
push
adc
mov
sti
sahf
mov
shll
lds
fiaddl
sbb
jle
lret
jecxz
mov
mov
lcall
popa
ret
and
fdivrs
cmp
jg
js
dec
cmp
mov
and
gs
xor
rorb
mov
xor
cmp
jg
mov
cmp
xchg
mov
pop
lods
out
push
and
sti
testl
repz
std
fidivs
sub
sub
lcall
pop
in
mov
jne
mul
fsubrl
ds
nop
mov
push
jo
pop
mov
clc
adc
cmpsl
push
inc
lahf
dec
cmpb
fimull
xor
xchg
lcall
lods
mov
fldenv
imul
mov
mov
xor
pop
hlt
test
hlt
mov
outsb
mov
insb
cmp
punpckhdq
addr16
mov
out
sahf
fbld
shl
push
daa
out
jge
rcl
sub
cld
inc
test
in
cmc
or
cmp
mov
push
rol
outsb
dec
push
sbb
lods
testl
inc
daa
ss
push
dec
add
add
xchg
ficoml
xlat
lahf
jge
push
jmp
mov
jl
dec
jne
mov
nop
and
push
xchg
in
in
mov
jno
mov
lret
jo
fidivl
inc
paddb
iret
mov
sbb
shr
int
add
pop
mov
cmp
cld
mov
sub
jne
pop
pavgw
movsl
inc
inc
fucomp
sbb
aad
out
fdivs
dec
xchg
or
in
jne
daa
icebp
arpl
mov
cmc
cltd
inc
imul
pavgw
in
rcrl
push
mov
pop
xchg
push
mov
cs
outsb
in
pop
or
fidivrs
mov
popa
mov
push
dec
xor
repnz
adc
jge
int
ljmp
inc
cmp
push
jo
dec
aam
out
fiaddl
or
sarl
sub
cmove
jg
mov
adc
mov
add
outsb
xchg
and
mov
sub
out
popf
mov
in
add
add
pop
aam
pop
out
adc
ds
call
rclb
testb
pushf
ja
subl
xor
ja
xor
inc
lods
bound
mov
cmovge
lods
cmpsl
sub
jb
mov
adc
and
dec
imul
popf
inc
sahf
jb
mov
sub
bound
pop
aas
in
shlb
xchg
or
jns
adc
push
cmp
rcll
or
cmp
daa
flds
cmpsl
imul
inc
lds
lret
or
cmp
clc
dec
outsb
sub
roll
test
inc
sub
sbb
jae
cmpl
scas
mov
dec
gs
adc
cmp
cmc
addr16
test
push
push
jle
clc
sbb
add
add
adc
jb
jns
mov
xchg
add
out
movsl
mov
fiaddl
or
mov
pop
sub
into
sub
sbb
push
sbb
data16
jecxz
out
and
or
pop
fwait
push
and
fbstp
and
push
adc
mov
push
cmp
stc
stc
dec
dec
or
movsl
cli
sbb
jo
push
mov
inc
inc
ret
cmpxchg
mov
aas
cwtl
push
xor
test
xor
push
repz
or
shl
dec
out
cmp
call
add
lods
inc
into
adc
mov
cmp
lds
insl
out
pop
sbb
mov
outsb
in
cmc
jmp
es
inc
movzwl
test
out
jo
mov
xor
enter
es
mov
icebp
cli
hlt
in
loopne
or
and
arpl
arpl
in
mov
call
filds
movl
cmp
ja
js
mov
push
lods
or
imul
add
rol
inc
ja
xlat
js
mov
and
outsl
push
sub
cmp
pop
rcr
sbb
cmp
or
idivl
inc
sub
cmp
adc
pop
jns
dec
hlt
jle
fs
jne
into
sbbl
lahf
inc
inc
cwtl
es
pop
push
lds
loop
and
sub
sub
aaa
add
push
fcoms
data16
mulb
and
mov
insl
jno
jo
and
add
lods
mov
aam
cmc
sub
xchg
sbb
xchg
sub
imul
sub
outsb
lods
orl
adc
ret
lcall
fdivs
xchg
mov
add
int
xchg
je
insl
pop
ficoml
inc
insl
lret
dec
into
jge
and
inc
ret
mov
std
shll
xchg
insl
xchg
inc
ja
add
aaa
lods
test
int
cmc
mov
push
mov
sub
sbb
les
jg
fimuls
dec
test
xor
pop
mov
jo
pop
sarl
push
ret
sub
pop
lock
insl
repnz
in
mov
jno
mov
xor
xor
jnp
test
shlb
mov
push
aas
data16
lods
leave
int
adc
push
add
dec
test
cmp
rcll
mov
sbb
mov
das
and
push
inc
test
mov
inc
imul
push
subl
cli
and
call
push
sbb
out
add
pop
bswap
sbb
or
xchg
test
pop
push
loopne
daa
dec
out
xchg
dec
in
ds
mov
addr16
xor
cmp
add
lcall
sub
leave
or
pop
xchg
into
push
test
imul
pushf
add
xchg
outsb
inc
aaa
mov
xor
inc
dec
imul
in
aas
int
inc
repnz
dec
test
mov
push
int
repnz
lods
add
rcrl
pop
lea
cmc
jne
jl
mov
call
xor
pop
lret
jge
xchg
push
ds
aad
aaa
sahf
jg
gs
xchg
jecxz
test
addl
dec
test
pop
push
dec
sub
lret
lret
test
and
scas
std
notb
hlt
mov
jge
dec
repnz
cmp
aad
mov
xchg
leave
sub
lcall
lea
mov
dec
fcoms
dec
mov
fstpl
das
mov
dec
mov
ret
mov
addr16
sbb
mov
adc
movsl
iret
adc
enter
inc
push
sub
mov
pop
mov
fistpll
test
dec
aaa
call
pop
pusha
scas
inc
push
shll
and
orl
add
mov
inc
sbb
test
fisttps
adc
dec
mov
ss
add
cmpb
adc
das
popa
sahf
mov
xlat
in
bound
movsl
lret
mov
inc
addr16
into
cmpsb
push
mov
int
add
gs
out
cmp
cmpsb
cmpsb
mov
insb
pop
arpl
movsl
adc
or
fstpt
ret
cmp
adc
mov
addb
es
lret
fisttpl
push
test
adcb
jge
inc
sbb
push
leave
jne
cltd
fistps
stos
mov
add
mov
leave
cmc
into
loop
xchg
aas
mov
push
repnz
dec
sti
push
outsb
or
rcrb
xchg
aam
xlat
dec
divl
cmp
int
aaa
push
dec
enter
je
push
jmp
xchg
loop
pusha
sbb
jns
das
enter
je
adc
mov
push
push
xchg
adc
cmp
faddp
outsb
jnp
push
mov
add
fwait
aas
lret
xor
sahf
dec
nop
sti
rcr
outsl
cmp
les
mov
xchg
jb
push
lods
ljmp
adc
out
lods
loop
dec
mov
sbb
scas
mov
int3
inc
cmp
push
dec
mov
scas
and
cld
xor
adc
sbb
push
push
stos
bound
popa
pusha
push
cmpsb
imul
fidivrl
add
mov
daa
lret
mov
add
aam
jp
movsb
push
xor
sub
jecxz
pop
sbb
popfw
push
dec
pop
sbb
inc
ljmp
inc
inc
insl
push
mov
mov
aad
dec
shlb
inc
pusha
push
aad
push
fs
and
dec
mov
inc
mov
lret
in
or
adc
xor
dec
or
pop
mov
cmpsb
jle
movsb
movsb
dec
sbb
fistpl
xor
mov
std
lock
jp
xor
jg
jno
xchg
imul
fwait
inc
mov
sub
cmpsl
dec
and
stc
inc
push
aam
jne
jno
into
pop
lahf
adc
mov
add
sub
fbld
mov
mov
clc
dec
mov
pop
dec
push
cmp
pop
mov
push
scas
pop
jnp
xor
jb
or
jbe
in
aad
lods
push
idiv
push
mov
cmpsb
mov
divb
scas
jae
dec
gs
pop
arpl
sub
pop
add
mov
imul
daa
cmp
adc
ret
xchg
dec
push
ret
in
add
in
into
mov
mov
dec
cmp
fistps
ret
mov
mov
in
iret
jge
fsts
in
jmp
repz
movsbl
or
dec
adc
jne
adcb
aam
leave
test
movsb
jae
and
pop
out
push
sub
test
add
gs
jp
adc
xchg
cwtl
jne
in
cld
sar
sahf
inc
xor
mov
out
or
test
scas
add
cmovbe
rcr
movsl
sub
sub
and
aam
lock
sbb
cli
fdivl
mov
xchg
testl
je
andl
sbb
xchg
addb
mov
lods
cmc
leave
scas
aad
pushl
xchg
arpl
dec
pop
pop
xchg
push
push
mov
scas
sysexit
mov
jecxz
sarl
push
push
push
jecxz
cmp
xor
and
xchg
mov
mov
fsubr
push
cmpsl
lcall
inc
adcl
dec
ljmp
cwtl
xchg
sbb
nop
jo
subb
lcall
push
jl
sahf
leave
mov
lods
jb
inc
mov
cwtl
clc
sub
test
add
adc
out
cmpsl
aaa
xchg
mov
pop
mov
mov
pop
imul
jae
mov
outsb
test
add
out
sarb
test
rorb
std
call
aad
movsb
mov
xor
or
test
dec
inc
mov
pusha
jae
test
loope
inc
jno
outsb
pushf
shlb
adc
cli
sbb
pop
mov
mov
pushf
mov
sbb
or
aaa
jne
aad
lahf
ret
out
mov
mov
mov
jmp
ds
pop
sti
adc
xchg
loopne
sahf
inc
jmp
aas
arpl
jmp
dec
xlat
loop
mov
pop
dec
outsl
out
xor
test
sub
lret
pusha
cmp
or
ret
inc
or
mov
xor
mov
popa
fildll
sub
jnp
push
push
aad
mov
sub
inc
jmp
cmp
and
insl
mov
dec
mov
jb
in
pop
movsl
data16
fidivrs
dec
and
stc
lret
jge
icebp
lret
dec
inc
movsb
jecxz
adc
mov
imul
xchg
loop
push
fistps
mov
div
mov
jle
lods
sub
cld
add
xor
jae
mov
cld
mov
push
aam
fldl
shlb
popf
int
cli
push
jl
daa
insl
dec
cmp
mov
lock
pop
pop
mov
cmp
mov
fwait
rorl
push
xchg
mov
push
jne
sub
cmc
mov
scas
cmp
adc
add
cwtl
ret
xor
jg
arpl
idivb
mov
add
sti
push
xchg
inc
adc
mov
std
sub
ja
movsl
jb
loop
fists
pop
stos
xchg
aaa
dec
push
in
aam
cltd
add
inc
sbb
les
aam
push
mov
inc
sbb
sbb
inc
add
clc
and
outsb
scas
or
orl
jmp
mov
popa
stos
xor
push
fsubrl
dec
out
inc
movsb
xchg
stos
sahf
insl
xchg
pop
inc
inc
out
mov
sub
pop
sbb
adc
mov
xor
pop
test
jp
xor
mov
insl
in
xorb
call
out
add
jno
outsb
aam
xor
ret
std
xchg
data16
push
sahf
test
aas
and
xchg
call
xlat
cld
test
jb
ja
sti
mov
lret
dec
push
out
shl
xlat
int
enter
gs
mov
and
push
ss
sahf
adc
out
mov
fdivl
mov
jo
xchg
int
cs
mov
xchg
xchg
push
cs
popf
xor
enter
ds
aad
xor
cmpsl
inc
ss
test
test
adc
rorb
adc
out
out
ds
and
pop
ljmp
js
pop
jns
sbb
sub
push
gs
cmpsl
sub
cmp
lret
cwtl
andb
mov
imul
mov
jecxz
mov
or
sbb
mov
and
jg
mov
fnstenv
xor
sub
arpl
test
or
stos
sub
cmc
inc
push
out
cwtl
pop
insb
push
add
pusha
es
test
cld
lods
pop
popf
movsl
mov
push
and
fsubrs
pushf
fmulp
pop
mov
insb
out
dec
sbb
pushf
or
mov
pushf
xor
sbb
push
adc
inc
mov
rorb
pop
xchg
lods
imul
inc
sbb
sbb
stos
sub
or
pop
mov
mov
fcomps
ret
cmp
adc
lds
sahf
sub
jecxz
adc
iret
push
out
sub
mov
and
pusha
int3
enter
jp
xor
dec
popa
lcall
ficoml
shl
cmpsl
push
cwtl
ss
sbb
rcrl
ds
xor
cmp
dec
ljmp
in
xchg
sbb
mov
frstpm(287
cmp
sti
pop
mov
leave
jg
pushf
pop
roll
sbb
adc
shlb
xchg
push
xchg
push
push
pop
scas
push
int
sbb
xlat
mov
mov
jne
sarl
adc
imul
fisubl
cltd
cmpsb
test
imul
push
fstps
add
add
aaa
stos
aas
in
fcmovbe
inc
xchg
es
aaa
mov
loopne
xor
es
cmc
fiadds
cmp
ret
dec
mov
iret
mov
lock
test
hlt
fs
mov
nop
pop
xchg
xor
daa
jg
rorb
inc
push
sbb
ljmp
neg
cmp
fdiv
push
stos
mov
lds
insl
push
in
cli
sub
push
outsl
popf
aaa
cmp
mov
nop
ja
sub
stos
rolb
pop
push
aas
mov
inc
sbb
addr16
rcrl
test
jne
jmp
pop
push
in
cltd
or
in
aaa
lods
leave
pop
or
pop
cmp
cmpsl
cmpb
test
lods
int
lods
cmpsb
jbe
mov
aaa
push
fstl
das
imul
jae
test
dec
xchg
fistpll
push
fwait
mov
loopne
repz
fwait
xor
movsb
into
lahf
mov
movsb
call
push
xlat
fidivrs
adc
ds
mov
ljmp
push
lea
push
mov
fildll
daa
cs
gs
mov
mul
stos
sub
jbe
scas
and
data16
sub
push
fstpt
dec
jbe
cmpsb
repnz
imulb
in
pop
cwtl
pop
fiaddl
outsl
sub
clc
pop
out
imul
aas
sbb
test
aam
sub
sub
ss
cmp
jle
pop
jg
in
imul
scas
in
into
cmp
xchg
cmp
in
clc
pop
ss
scas
jl
push
and
cmpsl
dec
push
int
into
inc
pop
sbb
clc
orb
orb
pop
mov
jp
in
in
mov
in
cmp
imul
or
sbb
or
mov
mov
sub
insl
xor
in
mov
movsb
adc
addl
cli
push
inc
andl
inc
dec
ret
xchg
mov
adc
cmp
cmp
stos
jecxz
push
icebp
loope
sbb
imul
rcrb
cmp
in
fldcw
aad
dec
imul
cmp
mov
mov
cmp
repz
add
les
jns
jnp
into
cli
push
push
js
and
or
or
mov
outsl
mov
cli
es
jne
adc
inc
scas
hlt
addr16
lods
sbb
into
ds
push
pop
xchg
ficomps
sub
sub
mov
mov
inc
and
rolb
js
stc
ficomps
push
dec
lret
cwtl
js
dec
js
xor
shll
xchg
push
repnz
pop
test
xchg
movsb
ljmp
and
stos
fisubl
xchg
dec
cmc
pop
mov
jg
jnp
bound
adc
jnp
jne
mov
scas
push
adc
inc
popa
inc
mov
mov
xor
ret
mov
mov
les
jmp
dec
mulb
dec
jle
movsb
xchg
in
shll
cmpb
ds
xchg
sbb
test
mov
jp
dec
aam
movsb
jecxz
dec
jnp
ja
mov
cltd
xor
sbb
cmpsb
lock
or
rcrl
out
shlb
cltd
ljmp
repnz
xor
into
inc
ror
jo
jge
fbld
aam
mov
pusha
and
mov
cmp
adc
dec
dec
arpl
icebp
sbb
jmp
mov
mov
pop
jmp
mov
nop
pop
test
push
mov
dec
push
dec
shll
and
movsb
add
insb
pushf
lea
inc
das
test
std
inc
cld
fs
rorb
mov
sbb
mov
insb
push
cmp
cltd
sbb
dec
pop
ds
inc
push
xchg
push
add
dec
sub
push
pop
std
scas
stc
mov
adc
push
adc
push
lock
adc
push
adcl
insl
dec
sbb
mov
mov
je
mulb
xor
mov
data16
jnp
dec
inc
shrl
incl
test
pusha
loop
popf
inc
sub
sbb
iret
hlt
mov
mov
fistl
push
sub
dec
inc
mov
xchg
mov
add
lds
sbb
imul
mov
pop
mov
pop
ljmp
dec
pop
xlat
sub
sub
insb
cmpsb
shrb
insl
sub
push
add
std
inc
cld
enter
mov
and
mov
inc
js
and
addl
mov
scas
lret
xor
inc
stc
mov
imul
cli
push
std
push
xchg
in
or
loop
outsb
mulb
jp
push
sbb
xchg
lcall
adcl
les
imul
jmp
scas
cmp
sub
popa
movsl
sub
pop
mov
popa
adc
push
mov
std
jge
push
movd
add
inc
in
popf
iret
es
pop
imul
rcll
inc
mov
jns
inc
sarb
jge
in
pop
lahf
fincstp
pop
adc
jge
dec
movsb
out
dec
sbbl
ficoms
dec
push
rcl
sbb
mov
int3
push
or
rcrl
lahf
add
jno
cmp
sbb
or
shlb
int3
js
imul
mov
inc
adc
sbb
pusha
sti
mov
into
xlat
out
pop
or
lea
sub
inc
stos
push
xchg
xor
xchg
ss
fisubs
lods
out
stos
stc
mov
cmpsl
inc
imul
lahf
push
pop
es
and
fistl
sub
pop
mov
ljmp
lock
jno
pop
dec
pop
in
jo
pop
xor
loop
mov
test
out
jne
jne
sbb
xor
fsub
icebp
jecxz
push
sbb
push
mov
push
cmp
and
jge
dec
fwait
clc
aad
cs
movsl
jbe
ds
stos
jo
xor
and
in
pop
pop
push
fmul
jmp
pop
int
movsl
pop
fcompl
mov
inc
rclb
pop
or
out
lret
sbb
leave
sub
mov
lock
es
je
xor
mov
sbb
inc
pop
aam
test
adc
push
add
add
imul
cmc
push
fwait
pop
push
int3
test
cmp
jmp
and
test
mov
xor
dec
xchg
js
mov
pop
popa
push
xchg
push
xlat
add
pop
xchg
loope
mov
ret
in
xchg
cmpsl
push
cmpsb
cmp
ficoms
cmc
cs
push
fstps
add
lock
push
std
mov
pop
mov
jmp
in
idiv
push
sti
hlt
jge
aas
addr16
stos
movsl
cli
cltd
dec
test
cmp
or
idivl
fucom
and
fdivrl
fldt
mov
mov
mov
add
jecxz
add
or
add
xchg
dec
add
push
and
leave
xchg
js
test
jb
inc
insb
push
divb
data16
in
pop
inc
and
les
xchg
aad
dec
popa
aam
xor
mov
lds
xor
popa
movsl
cmpsb
xor
sarb
shll
adc
adc
lret
incb
pop
dec
adc
xlat
stos
jl
stos
movsb
lds
or
cld
jo
addr16
sbb
inc
add
and
sbb
mov
mov
cmp
sub
es
addr16
lock
sbb
ret
pop
or
push
filds
out
lret
add
jnp
mov
xchg
mov
sub
js
scas
fnstenv
add
pop
sahf
or
or
inc
stos
cmp
pop
shl
xchg
lods
and
pop
inc
xorb
shlb
outsl
or
mov
cmp
add
into
inc
xor
push
dec
movsb
xchg
lret
inc
mov
push
test
lahf
cwtl
or
lcall
cwtl
inc
out
and
xchg
mov
mov
jbe
mov
call
cwtl
aam
sti
add
shrb
xor
pop
add
or
scas
mov
ret
xchg
out
movsb
repz
and
outsb
mov
rcll
test
inc
shll
mov
sbb
ds
sub
pushf
dec
jmp
sarl
xor
jg
xlat
rcrb
cmpb
pop
mov
push
push
cmp
imul
sub
jno
es
dec
nop
mov
les
enter
fmul
ss
cs
lea
dec
pop
jge
ljmp
decb
pop
lret
cmp
shrb
shll
or
jl
in
inc
adc
jmp
lret
push
mov
std
jo
hlt
inc
movsl
loopne
or
pop
clc
jbe
jns
lahf
dec
xor
cmp
gs
js
adc
dec
cmp
dec
xchg
fadds
arpl
xor
nop
jo
jbe
les
add
or
push
adc
xor
mov
dec
std
dec
out
lods
xor
jo
test
push
out
hlt
rcrl
inc
inc
sbb
jecxz
shl
das
push
divb
or
loope
jbe
lcall
addr16
loope
jecxz
pop
jb
out
push
aam
xor
data16
mov
je
popf
addb
push
cwtl
dec
stos
leave
sti
cmp
jg
rclb
mov
jecxz
negl
lock
setge
bound
add
repnz
pop
loop
xor
and
adc
dec
es
lret
clc
jge
mov
cmp
iret
jmp
ror
jo
unpcklps
out
mov
stc
shll
hlt
sub
std
sahf
sti
xchg
addl
pop
pop
rorb
pop
xchg
imul
int
dec
lret
sbb
jl
outsl
iret
test
sbb
stos
popa
xchg
mov
inc
sbb
cmpsl
aad
dec
test
or
sub
movsb
inc
pop
imul
cmp
mov
or
cmp
mov
jle
hlt
ret
divl
cmp
cmpsb
pop
cmp
mov
scas
or
jg
int
jb
and
cmpsl
or
ss
xchg
scas
test
sbb
loope
pop
jl
xchg
movsb
mov
mov
add
ja
outsb
inc
clc
outsb
and
lods
daa
mov
jns
xchg
mov
nop
rclb
scas
jg
addl
adc
pop
xor
and
loope
adc
call
mov
dec
pop
lahf
dec
loopne
xor
inc
repnz
in
jbe
mov
push
into
aas
sub
icebp
popf
and
sub
addr16
push
pop
or
clc
push
jge
sbbb
adcl
popf
sbb
rcl
or
mov
pop
and
adc
lods
mov
ret
es
data16
jo
lahf
fs
pop
out
aas
cmp
dec
ljmp
push
lahf
es
add
mov
imul
mov
aam
mov
scas
imul
ja
lock
in
or
fbstp
add
loopne
jnp
push
mov
mov
and
nop
cmpsb
mov
addr16
cmp
lea
rclb
mulb
push
std
inc
mov
xor
repz
test
jle
out
loopne
fwait
fs
sub
push
call
dec
test
shrb
push
push
sahf
dec
dec
ja
push
jge
jge
sub
test
repnz
and
mov
inc
push
stos
sbb
push
adc
lahf
ljmp
push
std
cmp
add
arpl
adc
cmovnp
dec
xchg
stos
sbb
pusha
lret
push
push
bound
cli
add
mov
orl
inc
loop
inc
addr16
xor
or
dec
inc
mov
or
jg
leave
sahf
je
repz
test
adc
popf
push
lock
nop
xor
add
mov
ds
sub
mov
inc
mov
ficoml
sbb
in
lods
mov
lds
push
cmc
inc
fwait
mov
fcomp
or
gs
jno
test
hlt
adc
push
lea
xchg
addl
xor
loope
cmc
adc
test
mov
addr16
cmpsb
test
test
fisttps
push
adc
ljmp
push
incb
int3
fldenv
rcrl
mov
pop
jmp
add
mov
sbb
xchg
loope
out
xchg
inc
clc
ljmp
aaa
rcll
jle
out
dec
cmc
sbb
test
push
mov
push
xor
fimull
inc
leave
or
in
insl
or
call
jge
xchg
out
daa
sbb
cld
mov
idivl
es
cli
out
and
negb
je
jo
aaa
inc
pop
test
mov
xchg
xchg
jl
ss
and
and
mov
xor
inc
sub
or
lds
imul
addr16
popa
push
push
cmp
sti
push
aad
adc
hlt
push
call
decl
cmc
xchg
repz
inc
xchg
cmp
test
leave
or
outsl
pop
jecxz
jbe
pop
stos
subb
sahf
aad
sub
or
addr16
dec
push
xchg
jne
ret
pop
push
inc
or
jge
ret
jmp
jnp
repnz
sbb
mov
ds
in
adc
add
mov
testb
add
in
mov
mov
cmc
das
cmp
jns
jecxz
cmp
jne
mov
or
ja
jnp
mov
xor
cmpsb
orb
push
lods
insl
in
dec
out
xlat
cmp
lds
aaa
addb
and
mov
jecxz
pop
pop
mov
push
mov
movsl
or
lret
fnstenv
shll
das
inc
adcl
fcoms
mov
add
test
rcrb
jle
xor
scas
mov
je
dec
pop
pop
mov
xchg
jl
xor
or
shrl
push
movsb
mov
in
hlt
sbb
aaa
mov
and
mov
cmpsb
shll
sahf
jg
out
push
loop
xor
insl
mov
pop
pop
xor
cmp
or
mov
sbb
call
jne
xor
hlt
sbb
jp
inc
xchg
testl
cmpsl
jmp
pop
pop
into
fildl
mov
jmp
pop
imull
jg
dec
lea
inc
call
popa
jmp
push
sbb
rol
mov
stos
test
fwait
xchg
sti
ds
add
sub
adc
cmp
xchg
andb
ja
aam
sbb
test
scas
push
xor
stc
cs
mov
ljmp
inc
sbb
icebp
sahf
out
adc
ret
and
push
adc
out
mov
aam
mov
std
mov
ja,pn
xor
lea
pop
rolb
jnp
push
ljmp
jb
mov
inc
addb
cli
aaa
cmp
pop
rcl
pop
aad
scas
aaa
fwait
dec
mov
or
pushf
sbb
fxch
ds
push
call
popf
leave
movsb
inc
ja
mov
int3
jge
lea
es
les
mov
rcrb
stos
pop
sbb
idivl
lock
cmp
in
imul
inc
lcall
cmpsl
mov
loope
stc
aam
clc
in
xchg
movsl
out
push
xchg
inc
movups
push
inc
loop
fwait
sbb
or
jbe
imul
cmp
test
call
lock
pop
outsb
fwait
add
mov
mull
sub
adc
jp
aam
add
and
mulps
mov
push
jae
pop
adc
jns
add
xchg
mul
mov
mov
sti
lret
rorb
in
out
push
sbb
sbb
addr16
xorps
dec
aad
mov
pop
movsl
xor
aaa
int3
and
das
sahf
sub
rcrb
dec
pushfw
popf
jp
adc
cmp
pop
add
es
movsl
inc
sub
lcall
sub
aam
popa
push
and
adc
add
dec
jmp
popf
out
enter
cld
add
inc
in
dec
push
push
and
or
pop
jle
ljmp
push
test
and
mov
shll
mov
adc
sbb
sub
xor
or
dec
arpl
in
dec
jp
setne
scas
data16
adc
fs
dec
cli
int
xor
incl
push
fs
adc
shlb
mov
mov
sub
cmc
fildl
jmp
push
leave
lock
movsb
sub
lahf
icebp
dec
push
inc
xchg
ljmp
or
les
std
cmpsb
fldcw
arpl
mov
xorl
sub
arpl
xor
jb
xchg
std
mov
mov
lcall
imul
lods
jecxz
ja
test
mov
daa
enter
inc
mov
inc
sarl
sti
jo
out
pop
outsb
add
ss
pop
testl
inc
mov
push
dec
push
lea
and
loopne
movsb
inc
cs
push
pop
je
jmp
adc
clc
xchg
and
out
xchg
ja
jg
movsb
popf
mov
loopne
adc
fstp
lods
sti
sub
fcompl
iret
xchg
fwait
cwtl
aas
add
jns
push
sub
int
icebp
ret
push
xor
xor
pop
mov
les
or
hlt
rol
shl
push
jae
inc
out
ret
pop
sbb
pop
push
rcl
mov
lea
lea
push
jmp
cmp
pop
push
pop
xchg
and
mov
adc
xchg
mov
in
es
add
pop
rorb
fbld
mov
inc
nop
arpl
hlt
xchg
scas
jmp
orb
jbe
inc
mov
mov
pusha
pop
push
push
mov
and
movsl
jg
out
push
es
adc
jb
add
push
jl
mov
xor
sub
mov
cmp
jnp
push
add
mov
xchg
insl
adc
lods
inc
mov
fadds
loopne
in
cmp
outsl
pop
pop
cmp
inc
icebp
lods
dec
in
mov
sbb
je
mov
and
popf
incl
mov
mov
xchg
mov
out
in
ljmp
movsb
inc
cmpsl
pop
inc
add
pop
and
sbb
fisttps
std
sar
ret
mov
frstor
imul
leave
xchg
add
sbb
fcomip
in
cmp
inc
and
add
push
jecxz
sbb
insb
lcall
inc
mov
test
mov
mov
fprem1
push
push
loopne
dec
rcrb
and
or
jae
lret
push
push
shl
mov
xchg
dec
jle
cltd
std
mov
xor
add
adc
lods
xor
lods
sub
adc
lea
jbe
divb
shll
xlat
sub
addr16
add
sub
or
jecxz
mov
add
rorl
cmpsb
es
xchg
rcrb
repnz
and
fisubrl
loopne
xor
call
mov
test
dec
dec
push
add
fs
arpl
push
mov
cld
jbe
rcr
adc
hlt
stos
imull
sahf
in
xor
dec
divl
lock
pop
mov
pop
dec
loope
sub
shll
aam
and
out
jmp
lods
aam
push
test
call
subb
out
sahf
xor
stos
jb
mov
loope
inc
or
lcall
cmp
int
sbb
mov
ror
add
fldt
jo
push
in
mov
jg
xchg
pop
stc
out
leave
insb
aas
scas
cmp
out
push
out
int
out
mov
pop
loope
xlat
xchg
fdivr
std
xor
mov
repnz
pop
fadds
pushf
fadd
ja
sti
inc
dec
test
dec
pop
dec
inc
jl
adc
xor
pop
mov
scas
in
adc
push
movsb
leave
or
out
or
fdivs
cltd
imul
jno
adc
pop
sti
mov
stos
imulb
mov
popf
or
and
mov
push
jge
daa
mov
cmp
aas
push
sbb
inc
fwait
sbb
push
push
bound
test
mov
inc
mov
lods
cs
sbb
xor
loope
test
aas
pop
imul
mov
dec
add
out
dec
push
jp
mov
push
pop
pop
add
movsl
lods
and
mov
data16
adc
mov
sub
jg
dec
inc
test
movl
jg
pop
dec
shl
icebp
push
and
sbb
por
fdivl
cli
dec
add
cmp
movsl
das
fwait
stos
or
cmpsl
orl
insl
cwtl
ret
mov
pop
sbb
mov
test
aas
mov
clc
loopne
mov
mov
push
mov
out
xlat
dec
adc
add
adc
lods
push
xlat
or
jnp
xchg
jo
andb
enter
pop
xor
dec
arpl
sbb
jg
lea
cmp
mov
and
xor
pop
lahf
jl
aas
mov
je
je
pushf
nop
jbe
xor
out
sbb
sbb
rcrl
inc
fcompl
shrb
mov
nop
test
sub
mov
mov
ds
mov
jo
or
sbb
cmc
or
sbb
jno
push
jb
pop
out
mov
dec
aas
lock
out
jmp
push
mov
mov
in
inc
scas
pop
mov
inc
mov
sub
or
inc
mov
mov
jge
pop
xchg
sarb
xor
mov
rclb
int3
add
pushf
mov
sbbb
ja
push
or
movsl
sub
mov
dec
jge
mov
sub
inc
mov
xor
jae
adc
pop
lcall
test
xchg
inc
jmp
out
in
jle
inc
push
cmp
lahf
iret
js
jmp
jnp
dec
mov
out
jnp
into
inc
ja
cs
pop
xor
sub
push
jl
mov
adc
rclb
cmpsb
push
nop
sti
add
into
add
clc
cli
xor
push
adc
sub
jecxz
cli
popa
push
jmp
xlat
mov
out
add
push
data16
jo
mov
fiadds
pop
daa
mov
push
add
lock
fsubrp
cwtl
mov
cmp
lret
jp
nop
sti
inc
cmp
xchg
std
int
addr16
or
je
mov
fstpl
out
mov
sub
cwtl
xchg
cmp
xor
jmp
sub
movsb
mov
and
xchg
cmp
psubw
adc
popf
pop
mov
repz
call
mov
cmp
in
push
cld
dec
pop
sub
pop
clc
movsl
and
xor
arpl
push
xorl
xchg
cli
lcall
es
mov
lret
in
mov
add
mov
mov
sti
xchg
stos
cld
or
fldt
push
inc
mov
mull
rorb
pop
dec
lcall
push
inc
sysenter
stc
insl
jb
out
cmp
into
xor
jmp
in
test
loope
dec
mov
or
jge
pushl
mov
jecxz
or
addr16
dec
sbb
push
ret
fdivl
add
xor
sub
mov
push
mov
cmp
outsb
loopne
add
daa
mov
ret
hlt
aam
aaa
movsb
or
pop
jle
iret
xlat
jp
outsl
fisttpl
repz
sub
add
mov
movsl
cltd
mov
or
add
jg
imul
stos
cmp
inc
stos
pshufw
mov
int
scas
inc
dec
mov
loop
outsb
xchg
add
hlt
in
addb
mov
adc
jg
addb
imul
jne
ljmp
mov
xchg
xchg
loope
addr16
lock
xchg
adc
ljmp
jne
je
popf
jbe
cltd
hlt
mov
faddl
nop
xchg
ret
loope
aas
mov
int3
or
push
jle
push
sbb
daa
jl
pop
xor
sti
fs
or
mov
xchg
test
int3
inc
shl
mov
inc
das
inc
insl
adc
stos
pop
out
lods
loopne
and
dec
je
adc
dec
jl
cli
jge
int
loopne
adc
pop
mov
cwtl
add
movsl
cmp
adc
in
cwtl
mov
call
pop
je
push
cmpb
mov
add
push
int
and
pop
ficoml
ficoml
xchg
ja
pop
xchg
lds
fcom
clc
scas
pop
xor
jb
mov
bound
scas
sub
or
lds
jecxz
push
sbb
stos
cmc
jno
push
jg
mov
mov
int3
sbb
stc
jge
ret
dec
push
push
nop
push
adc
or
jo
lds
inc
call
add
mov
les
push
pop
in
cli
test
loopne
inc
push
ja
lea
loope
mov
pop
add
in
inc
fldenv
dec
pushf
jmp
loopne
cmp
stos
jg
pop
push
ljmp
mov
mov
lret
cmp
adc
mov
xchg
sub
inc
sahf
sbb
cltd
or
or
jp
inc
fnsave
nop
aas
dec
dec
jbe
jae
lock
mov
push
lock
pop
clc
add
js
or
out
or
pop
push
and
inc
movsb
add
scas
inc
fsubrl
jl
push
pop
adc
sbb
scas
mov
push
cltd
fs
pop
test
clc
pop
sbb
pop
in
mov
xchg
into
and
xchg
out
cmc
es
cmpsl
jg
inc
fdivr
add
jmp
out
jg
mov
cmpsl
imul
jle
pushf
add
int3
jno
or
imul
leave
pop
leave
lahf
iret
ficompl
icebp
scas
sub
loop
and
out
pop
mov
shl
addb
jmp
fistpl
mov
out
adc
xor
sub
jo
mulb
pop
cmp
ret
push
push
xchg
sti
mov
xor
pop
mov
add
mov
outsl
xchg
pop
adc
mov
outsb
out
incl
sbbb
mov
mov
xor
and
sbb
arpl
inc
outsb
bound
mov
sarl
mov
dec
jp
fsub
pushl
mov
movsb
cmpsb
jmp
mov
ret
mov
loopne
jmp
inc
test
fimull
jae
jecxz
sub
jle
hlt
mov
flds
dec
mov
fwait
xor
mov
movsb
jg
xchg
pop
daa
inc
outsl
xor
cmp
xor
xchg
shll
xchg
loope
jp
icebp
iret
mov
mov
mov
push
loop
in
push
xchg
inc
mov
in
ja
into
mov
gs
mov
ss
dec
call
frstor
lea
das
or
xchg
or
cmpsl
out
cli
pop
mov
mov
push
into
jb
in
int3
gs
test
push
mov
aas
add
mov
lret
push
movsb
mov
xchg
xchg
push
out
imul
mov
cs
mov
mov
jmp
sub
jo
jne
push
mov
dec
es
rorl
inc
mov
daa
cmp
test
sub
push
les
lahf
rclb
cld
enter
cld
pushl
call
xchg
icebp
iret
cmc
stc
push
daa
cmp
imul
xor
inc
adc
clc
jmp
cmp
mov
sbb
mov
push
cmp
ja
dec
adc
mov
xchg
push
mov
mov
pushf
pop
pushl
repz
xor
mov
sar
pop
jnp
adc
idivb
xchg
add
sbb
mov
dec
sbb
mov
inc
xchg
mov
in
push
cmp
adc
sarb
jp
stc
xchg
lgs
testb
pop
jg
pop
pop
stc
jg
movsl
jb
scas
pop
push
cmp
stos
sahf
sar
xchg
adc
shll
gs
nop
lcall
shrl
inc
mov
mov
xchg
lock
icebp
pop
and
int3
adc
xor
sbb
lahf
pop
aas
sub
inc
repz
loope
incl
jb
filds
or
push
sbb
daa
jae
mov
inc
push
jno
xchg
mov
mov
dec
mov
mov
movsl
mov
push
sbb
movsl
cs
lcall
cmp
cli
mov
sahf
pusha
add
jbe
xchg
jl
push
fnstsw
cwtl
sbb
out
int
xchg
cs
sbb
mov
pop
loope
dec
mov
push
test
fstl
mov
ds
push
ds
add
ja
dec
mov
push
sti
xor
sub
xor
jecxz
movsb
xor
mov
mov
leave
or
push
or
daa
mov
loope
pop
add
jmp
push
dec
scas
and
mov
inc
inc
aaa
pop
fistpl
mov
rcll
jbe
xor
pop
out
jle
xchg
dec
lds
push
xlat
cmpsb
scas
out
les
dec
lcall
cmpsl
pop
dec
jns
mov
jnp
addr16
movsb
lea
lods
in
daa
loop
in
mov
xor
hlt
ljmp
stos
mov
sarl
repnz
ds
std
push
push
pop
adc
xchg
sbb
inc
out
icebp
loopne
sub
push
cltd
xchg
jne
into
clc
rcll
jle
push
ljmp
ficompl
add
popf
test
popf
sub
inc
xor
dec
int3
pop
stos
pop
and
lcall
popa
xor
cmp
dec
dec
adc
mov
push
xlat
and
out
pop
xor
xorb
adc
stc
jb
cmpl
inc
or
nop
sbb
ja
pop
enter
roll
mov
sub
aaa
sbb
nop
adcb
stos
lods
mov
xor
lods
cmp
adc
dec
sub
adc
dec
dec
mov
mov
lret
cmp
push
jge
cmpsl
loopne
mov
jmp
addr16
hlt
sahf
js
mov
xchg
repnz
push
movsl
cmp
cmc
loope
inc
or
dec
jno
loop
adc
lret
and
jmp
fmulp
call
push
dec
int
mov
pop
inc
mov
and
sbb
pop
das
out
add
cmpl
lret
inc
push
jl
sub
fisttps
push
insl
addb
cmp
ljmp
add
jmp
sti
movsb
gs
cltd
test
sbb
dec
mov
or
cld
mov
push
mov
pop
pop
xor
cmpsl
adc
pop
idivb
test
mov
subl
xor
xor
xor
xor
xor
cmp
xor
add
add
and
fildll
adc
clc
jbe
add
dec
dec
add
jnp
add
add
test
add
cmp
jne
repz
jmp
mov
push
mov
sub
mov
mov
mov
mov
mov
mov
data16
data16
data16
data16
data16
data16
pushf
popl
mov
mov
mov
mov
lea
mov
mov
movl
mov
mov
movl
movl
mov
mov
mov
mov
call
mov
push
call
pop
push
call
push
call
cmpl
jne
push
call
pop
push
call
push
call
leave
ret
andl
ret
int3
int3
push
pushl
mov
mov
lea
sub
push
push
push
mov
xor
xor
push
mov
pushl
mov
movl
mov
lea
mov
ret
mov
mov
pop
pop
pop
pop
pop
mov
pop
push
ret
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
push
mov
push
mov
xor
push
mov
movb
movl
lea
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
testb
jne
mov
lea
mov
mov
mov
mov
cmp
je
lea
lea
mov
lea
mov
mov
mov
test
je
mov
call
movb
test
js
jg
mov
mov
cmp
jne
cmpb
je
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
pop
pop
pop
mov
pop
ret
movl
jmp
mov
cmpl
jne
cmpl
je
push
call
add
test
je
mov
push
push
call
add
mov
mov
call
mov
cmp
je
push
push
mov
mov
call
mov
mov
mov
mov
cmp
je
mov
add
xor
call
mov
mov
add
xor
call
mov
mov
mov
call
mov
cmp
je
push
push
mov
call
jmp
int3
push
push
push
mov
mov
mov
push
push
push
push
push
push
pushl
mov
xor
mov
mov
mov
mov
mov
xor
mov
cmp
je
mov
cmp
je
cmp
jbe
lea
lea
mov
mov
cmpl
jne
push
mov
call
mov
mov
call
jmp
popl
add
pop
pop
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
pushl
pushl
pushl
call
add
pop
mov
mov
mov
mov
ret
push
mov
mov
pushl
pushl
pushl
call
add
pop
ret
push
push
push
push
mov
xor
xor
xor
xor
xor
call
pop
pop
pop
pop
ret
mov
mov
mov
push
call
xor
xor
xor
xor
xor
jmp
push
mov
push
push
push
push
push
push
push
call
pop
pop
pop
pop
ret
push
mov
push
push
pushl
call
add
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
cmp
je
xor
pop
ret
mov
add
cmpl
jne
xor
mov
cmp
sete
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
mov
mov
add
movzwl
push
push
movzwl
xor
push
lea
test
je
mov
mov
cmp
jb
mov
add
cmp
jb
inc
add
cmp
jb
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
movl
push
call
add
test
je
mov
sub
push
push
call
add
test
je
mov
shr
not
and
movl
mov
mov
pop
pop
pop
pop
mov
pop
ret
mov
mov
xor
cmpl
sete
mov
ret
mov
movl
xor
mov
mov
pop
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
push
mov
push
push
push
push
push
push
push
pushl
call
pop
pop
pop
pop
mov
pop
ret
mov
testl
mov
je
mov
mov
xor
call
push
mov
mov
push
mov
push
call
add
pop
mov
mov
mov
mov
ret
push
push
push
mov
push
push
push
push
pushl
mov
xor
push
lea
mov
mov
mov
mov
cmp
je
cmpl
je
cmp
jbe
lea
mov
mov
mov
cmpl
jne
push
mov
call
mov
call
jmp
mov
mov
add
pop
pop
pop
ret
xor
mov
cmpl
jne
mov
mov
cmp
jne
mov
ret
push
push
mov
jmp
push
push
mov
mov
mov
mov
mov
push
push
push
pop
pop
pop
pop
pop
ret
call
ret
int3
jmp
