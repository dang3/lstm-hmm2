sbb
add
mov
dec
dec
ret
jno
and
and
outsl
scas
ds
push
push
xor
sti
adc
stos
fsubl
dec
mov
push
push
inc
cmpb
xlat
push
nop
je
into
xor
pushf
scas
fcompl
cmp
arpl
adc
xor
fadds
xchg
cmp
jb
jmp
dec
mov
xlat
push
push
aas
jno
mov
out
sarb
sub
cmpsl
ficomps
fs
sub
mov
lea
or
push
inc
mov
mov
loope
push
lds
ret
xchg
test
cmpsb
sub
xchg
sbb
mov
repz
sub
pushf
orps
and
leave
sbb
or
sti
out
pusha
aam
fwait
mov
push
nop
mov
inc
mov
xor
addr16
addr16
mov
sub
jle
ljmp
enter
inc
push
shlb
sbb
pop
dec
in
mov
xchg
mov
cltd
leave
add
int3
clc
mov
inc
xorb
push
je
aaa
cmp
and
adc
dec
pop
das
cwtl
inc
mov
and
pop
sbb
xchg
loope
aam
inc
jb
scas
push
popa
imul
cmp
arpl
cli
nop
lods
aad
repz
cmpsl
sbb
add
dec
lea
hlt
inc
andb
addr16
jb
scas
adc
outsb
int3
cltd
cmp
or
cmp
in
insl
lea
aas
mov
dec
dec
mov
arpl
add
repz
lods
in
add
xchg
mov
xchg
loop
fdivs
pop
ja
loope
fiaddl
xor
cmpsl
iret
out
in
sbb
scas
pushf
cld
push
and
out
arpl
pop
lret
fwait
cmpsl
sbb
pop
pop
adc
ja
xchg
cmpsb
xchg
aaa
andl
xorb
cmp
mov
or
sbb
xor
leave
jns
ja
popa
mov
push
loop
push
xchg
cmc
clc
lcall
imulb
scas
jnp
pop
pop
sarl
add
lea
push
loop
gs
adc
mull
in
lret
pop
xchg
fnop
fnsave
push
mov
dec
ret
in
sbb
loop
adc
je
jnp
call
fwait
push
jle
jno
stos
fmuls
pop
outsl
jmp
mov
dec
jo
fcoms
pop
sub
fidivrl
mov
repz
push
lret
jb
lahf
pushf
xor
imul
jo
lret
leave
fs
popa
xlat
jmp
jne
adc
andb
push
xorl
leave
dec
xchg
add
mov
sub
call
shll
and
push
cmp
or
adc
imulb
cli
jae
and
popf
js
call
in
sti
fwait
jbe
pop
repz
mov
add
pop
cmp
test
add
jle
jmp
aas
shll
stc
xchg
fld
ret
jo
shlb
cmp
add
clc
sub
xchg
in
mov
push
ja
insl
into
xor
cmp
jnp
popl
pop
hlt
jmp
jp
loope
xchg
sub
push
xchg
pop
mov
dec
stos
frstor
iret
mov
or
sub
jmp
imul
idivl
xlat
inc
pop
add
sbb
pop
mov
and
and
mov
pop
and
arpl
jns
sub
fnstenv
movaps
cmp
sub
add
jo
xchg
inc
mov
lret
addl
sub
and
repnz
adc
dec
adc
insb
cwtl
adcb
test
pop
or
inc
aad
cs
mov
add
lods
ss
out
das
je
int3
add
aad
xchg
in
loopne
test
jle
aam
mov
mov
mov
mov
fimuls
jecxz
sub
sbb
ret
fcoml
shlb
jmp
sub
or
mov
cmp
xchg
fs
or
popf
cltd
push
test
jae
gs
in
enter
jge
add
popf
sar
mov
add
dec
dec
push
sti
or
cmpsl
icebp
das
adc
inc
mov
jno
mov
xchg
into
xor
xchg
daa
cld
lods
out
adc
pop
cmp
dec
sbb
mov
xor
xchg
sub
mov
xor
lods
fwait
xlat
jno
or
icebp
sub
mov
inc
dec
pop
in
jno
jne
not
or
repnz
rcrb
stos
mov
jl
xor
mov
mov
mov
shl
inc
pop
loopne
xor
frstor
out
adc
pop
sub
jo
sti
repnz
fsubl
movsl
jae
mov
push
dec
dec
sub
sahf
adc
stc
mov
xor
adc
pusha
das
call
or
dec
inc
xor
ret
dec
mov
clc
rorb
jecxz
mov
sar
cmp
jae
xchg
les
out
ret
or
fsubrs
scas
inc
icebp
fadds
jns
push
fs
mov
jmp
pop
fs
sbb
cmc
cmpsb
and
dec
sub
arpl
push
out
mov
sub
in
data16
lds
cmp
pop
in
dec
add
out
in
jp
or
iret
cmp
stos
fcom
mov
xchg
popf
test
movsl
cmpsl
leave
inc
add
push
cltd
jnp
xor
lret
cmpsl
lea
mov
xor
js
sbb
lods
adc
jge
add
jp
jo
sar
xchg
scas
sub
jecxz
je
popf
sbb
aaa
pop
aas
inc
dec
cltd
int
ja
leave
and
aad
add
pusha
pop
out
enter
and
push
cmpsb
lods
and
subb
sbb
xorb
cmp
pop
or
icebp
in
dec
aam
enter
cmp
sbb
cmpsl
add
push
cltd
sub
pop
or
dec
fcmovne
and
loope
int
jnp
addr16
pop
cmp
jo
pop
mov
clc
xchg
ss
stos
xor
icebp
mov
shll
xchg
or
movsl
xchg
addb
pop
cmp
js
mov
imul
add
outsb
into
push
ja
pinsrw
adc
jp
nop
adc
movsb
add
mov
jnp
int3
fs
or
roll
fisubs
stos
jnp
or
sbb
adc
pop
inc
mov
or
adc
test
in
mov
jns
das
xchg
pop
add
jecxz
decb
or
inc
mov
jb
push
gs
pop
sub
push
or
jb
outsb
rcl
or
sub
push
push
mov
xchg
cli
ja
mov
push
in
daa
mov
mov
stc
sbb
xorl
sub
lcall
and
test
pop
hlt
cmp
mov
mov
xchg
les
jge
xor
cmp
and
lds
ret
cmpsl
loopne
jle
fisttpll
push
and
dec
cld
jmp
mov
icebp
xchg
pop
test
xchg
cmp
fcos
push
jle
jmp
int
cmp
mov
mov
sbb
mov
divl
jne
outsl
xlat
ret
aas
mov
xor
inc
shr
adc
into
sub
jo
or
loopne
jno
filds
jb
pop
andps
imul
enter
loop
aas
mov
xchg
and
dec
and
gs
shlb
xchg
in
iret
in
cmpsb
pusha
mov
aaa
aad
jo
mov
mov
and
adc
mov
and
mov
adcb
leave
pusha
sbb
xchg
notb
dec
sub
imul
push
add
jle
std
pop
dec
scas
ret
pop
iret
mov
xor
push
xchg
or
sahf
mov
adc
inc
xchg
pop
orb
dec
fwait
subl
jecxz
dec
movsb
out
arpl
push
out
or
rcrl
cmp
shrl
xor
xor
mov
jns
add
sbb
add
and
jno
arpl
flds
cmp
sbb
push
aas
sub
fadd
jae
push
inc
leave
sub
in
notb
pop
and
mov
in
jne
int
mov
adc
mov
pop
fsubl
xchg
outsl
xor
enter
xchg
mov
ss
sbbl
push
shl
adc
js
rorl
int3
jae
cmp
loopne
jmp
call
mov
xchg
push
sub
dec
sahf
and
pusha
sub
aaa
rcll
jnp
nop
push
rcll
mov
mov
cli
adc
mov
mov
adc
jecxz
pop
mov
out
ret
and
jl
xchg
insl
jns
lods
xor
nop
inc
sti
xchg
xor
ja
add
ds
or
and
mov
sub
jnp
xchg
flds
xchg
clc
jne
addr16
lahf
jno
ret
pop
repnz
push
xchg
filds
and
mov
call
scas
ret
enter
inc
jo
push
dec
sbb
adc
pop
xchg
or
jae
popf
dec
inc
cmp
jp
sti
fidivl
mov
rorl
stos
inc
mov
pop
int
xor
repz
dec
and
sti
outsb
push
xchg
sbb
xchg
inc
popf
shlb
inc
jne
je
insl
or
pop
fwait
movsb
inc
imul
ret
and
hlt
pop
loope
divb
and
stc
int
mov
pop
je
jp
cmp
and
je
jnp
fcoml
aad
lahf
out
jp
or
mov
shll
mov
mov
fsubl
jp
andb
test
shr
jge
leave
or
fdivl
xchg
mov
jb
add
testl
adc
xor
xor
and
mov
or
xchg
das
pop
xlat
sub
mov
add
jmp
jmp
sbb
mov
imul
andb
dec
pop
and
xlat
add
outsl
xchg
bound
and
jle
or
and
fidivl
hlt
mov
push
jle
mov
and
test
popf
and
mov
mov
repnz
cltd
mov
fldcw
aam
inc
subl
xchg
push
mov
xchg
inc
sub
jb
xor
pop
fisubl
out
mov
inc
fstl
mov
add
and
add
pop
jg
jae
movsb
int3
movsl
push
lahf
insb
mov
push
hlt
out
loopne
fdivs
xor
cli
mov
aaa
dec
imul
imul
push
push
mov
pop
dec
mov
inc
inc
xlat
sub
scas
cmp
push
sub
dec
orb
stc
mov
or
pop
jae
xchg
mov
aas
xchg
jle
sub
adc
imul
call
and
gs
iret
adc
jb
lret
outsl
and
add
sbb
xchg
fldt
mov
shrb
xchg
out
sbb
mov
mov
dec
xchg
outsl
mov
andl
dec
xor
cmp
lods
cs
jecxz
cwtl
jle
in
inc
inc
insb
cmpsl
jmp
cmpsl
dec
inc
aad
push
sahf
movsl
adc
dec
sbb
xchg
mov
fucomip
xchg
in
mov
add
daa
sbb
or
mov
push
outsb
lea
add
clc
xchg
sub
xchg
movsl
cltd
daa
out
push
scas
pop
cmp
xchg
lds
es
mov
mov
enter
cld
inc
sub
test
cwtl
cwtl
pushf
in
jns
xlat
pop
jl
lods
mov
dec
jmp
sub
sbb
js
rep
push
test
xchg
cmp
pop
or
int
cmpsb
fstl
fisubrs
pop
clc
pop
dec
stos
outsb
xchg
cmp
dec
clc
std
cmp
addr16
and
cmp
mov
xchg
sbb
imul
xchg
sbbb
sub
in
data16
pop
pop
dec
arpl
fs
and
pop
xchg
movsb
lods
add
sub
xlat
and
inc
and
lret
aas
test
ds
inc
rorl
es
ss
push
sub
aas
div
sub
or
jp
pop
and
leave
aad
push
das
les
add
movsb
push
mov
jns
out
fdivl
xlat
xchg
outsb
pop
pop
std
adc
lahf
imul
jge
push
ret
arpl
push
in
in
outsl
mov
push
aam
dec
fcoms
gs
stos
mov
sbb
push
jg
sub
hlt
cmp
outsb
or
push
addr16
adc
mov
pop
shrl
hlt
cmpsb
test
push
adc
push
xor
inc
xor
add
mov
aad
fs
adc
add
sbb
jno
xchg
mov
imul
fwait
aam
push
and
mov
cmp
aaa
in
cmp
fistl
flds
sbb
jmp
in
bound
jle
ja
call
sbb
mov
shrb
adc
cltd
lcall
mov
insb
xor
sbbl
mov
mov
mov
add
jbe
pop
or
jne
cmp
orb
add
mov
sbb
xlat
sub
push
pop
lahf
rcll
fdivr
push
mov
or
pop
pop
fimull
mov
mov
mov
ja
aad
mov
movsl
shlb
out
xchg
push
repnz
orl
mov
adc
lahf
xchg
jb
loope
data16
inc
mov
shr
into
mov
dec
push
mov
dec
or
flds
lds
add
mov
jns
adc
mov
int3
pusha
out
out
idivl
inc
xor
mov
xor
add
mov
ss
mov
lds
adc
xchg
cli
jae
pop
stos
mov
insb
imul
sub
jle
xor
or
jmp
xor
mov
es
cmp
inc
imul
xor
fcmovb
bound
mov
mov
mov
jne
outsl
or
and
outsl
addr16
pop
aad
addr16
popa
pop
cwtl
cmp
adc
jl
aad
sub
insb
cmp
dec
popf
pop
sub
dec
fnstsw
mov
mov
xchg
xorb
mov
ja
std
popf
add
inc
ja
test
mov
sub
lds
adc
rolb
out
ds
call
adcb
xchg
dec
pop
mov
push
adc
inc
jp
fisubs
xchg
rcll
mov
cli
mov
xchg
pop
movsl
xorl
loopne
dec
and
inc
cld
and
dec
sbb
jae
pop
jle
popa
mov
add
fwait
mov
imul
and
ucomiss
shl
mov
fwait
xchg
dec
dec
inc
inc
mov
mov
fldl
nop
mov
mov
jbe
dec
sbb
ret
xchg
mov
xchg
popf
sbb
int
fiaddl
lret
mov
dec
inc
paddsw
add
pop
sti
in
push
add
jnp
jo
pushfw
int3
dec
out
or
xchg
rcll
dec
jnp
test
mov
cmp
jge
aam
pushf
stc
jge
mov
push
and
call
mov
cmp
das
or
jl
sbb
lret
mov
or
pop
mov
or
lods
mov
int3
jecxz
test
and
cli
sub
call
popa
imul
cmp
int3
and
inc
fnstsw
lods
xor
lcall
pop
pop
shll
fldenv
pop
ja
push
lock
push
push
cmp
mov
sub
mov
push
lods
movsb
icebp
dec
xchg
clc
nop
xor
es
cmp
js
push
add
adc
and
jge
pop
adc
add
aad
out
out
aam
ds
or
mov
mov
ret
jp
stos
idivl
jae
bnd
pop
int3
bound
sub
gs
into
xor
aas
sti
sub
bound
inc
loopne
rcr
push
xchg
int
ret
lock
mov
pop
arpl
cs
and
decl
xchg
pop
mov
and
negb
pop
sti
push
gs
xchg
inc
icebp
cltd
pmulhw
repz
rorl
xchg
jmp
jnp
aad
mov
orl
sbb
add
insl
ss
fists
jle
dec
xor
iret
mov
cli
popf
addr16
jnp
xchg
std
sub
xchg
out
ficompl
int
jecxz
sbb
cltd
leave
in
pushf
outsb
sub
add
add
xor
mov
push
in
push
push
dec
mov
fmuls
sbb
cmp
cmp
stos
mov
jns
fadd
outsl
ds
cmp
cmp
insl
in
ret
test
div
je
mov
nop
cmpsl
mov
and
mov
iret
and
push
in
iret
pop
mov
mov
in
pop
out
jo
movsb
sti
lcall
add
jmp
cmp
jb
shll
nop
or
popw
mov
mov
cmp
sbb
pop
outsl
data16
addr16
jl
int3
or
push
lods
jb
push
enter
dec
xchg
jo
pushf
pop
gs
loop
and
fsubp
mov
and
push
mov
adc
xchg
fadd
leave
incb
mov
sub
adc
and
fildll
xchg
mov
mov
pop
pop
pop
xchg
dec
jae
xchg
jnp
lret
push
stos
in
dec
and
pusha
in
xchg
adc
push
lea
xor
insl
mov
out
sar
push
add
mov
cmp
dec
imul
lds
dec
push
test
in
jmp
sub
pop
mov
cmp
pop
push
dec
repnz
in
in
rorl
xor
xor
adc
sbb
mov
jmp
sbb
pop
jbe
dec
das
add
and
adc
xor
mov
js
xor
xchg
cld
mov
in
sti
fcompl
or
pop
add
addr16
mov
stos
movsb
and
pop
pop
movsl
test
xchg
cmp
xor
pop
mov
mov
dec
nop
je
jnp
insb
xor
insl
shlb
sub
pop
fldt
jae
popa
sbb
sub
movsb
loop
cmp
das
sbb
mov
loope
je
pusha
jmp
daa
xor
add
or
in
out
xchg
or
mov
and
test
sbb
cmp
add
push
mov
ss
sbb
ret
xchg
movsl
xchg
mov
adc
lds
xchg
lcall
int
stos
mov
inc
xchg
mov
cli
imul
jno
push
push
lahf
stos
xchg
repz
xchg
mov
push
ret
sub
and
dec
fimuls
bound
mov
sarb
roll
movsl
bnd
mov
inc
jns
and
pusha
mov
out
mov
push
pop
jno
int3
outsb
insl
jne
or
jne
mov
fstpl
and
fnstenv
div
ljmp
jecxz
imul
fmull
cmp
lretw
cmp
jb
stc
aam
push
das
fstl
jle
adc
dec
sub
lahf
leave
mov
dec
pop
jo
push
jmp
cld
pushf
and
fbld
mov
mov
fwait
lds
push
sub
dec
mov
pop
cld
pop
jmp
stos
adc
popa
jle
call
cli
test
add
cmp
and
pop
and
mov
clc
pop
sti
jne
les
lret
fadds
push
ret
mov
aad
jge
dec
pop
push
xor
repnz
sti
popf
aad
cmpb
test
sbb
test
mov
cld
shlb
sub
scas
addr16
arpl
dec
into
dec
xor
lock
pop
jecxz
mov
dec
es
fs
mov
arpl
dec
sarb
sti
jmp
in
push
push
fldt
stos
dec
push
fsubl
mov
adc
sub
loope
out
fidivs
add
jo
inc
mov
mov
adc
test
inc
adc
jmp
repz
xor
adc
mov
rcr
adc
inc
bound
mov
inc
ja
lea
lock
pop
mov
jbe
cltd
shrl
aas
lea
imul
mov
pop
cmpsl
lcall
shlb
cmp
or
arpl
ds
sub
inc
mov
bound
jmp
push
rcrl
mov
scas
xor
test
sahf
xor
cli
push
and
loop
adc
into
push
mov
dec
jmp
lahf
sti
in
lret
adc
sahf
mov
arpl
xor
outsb
pop
arpl
test
mov
orb
stos
mov
test
insl
cmp
push
inc
insb
pop
orl
lahf
call
sbbl
loop
rorb
aam
inc
stos
mov
imul
jmp
movsb
scas
out
sbb
mov
imul
cld
lcall
das
dec
mov
push
aaa
xchg
push
testb
xchg
inc
mov
lret
stc
mov
xchg
ja
xor
lock
sub
ret
mov
scas
insl
mov
xchg
mov
jne
pushf
inc
jmp
adc
jo
repz
lea
loope
inc
or
loop
pop
cmp
hlt
push
dec
xor
mov
lods
push
into
jle
adc
xor
and
dec
outsl
test
shlb
inc
adc
ss
out
fidivs
lret
fstps
dec
cmp
cmpsb
imul
push
lods
pusha
mov
adc
movsl
pop
mov
push
dec
mov
sbb
lods
inc
cmp
or
xchg
lods
jnp
dec
mov
int3
lcall
fsincos
or
imul
in
aam
data16
and
push
movsl
inc
addl
out
mov
mov
xor
fwait
in
test
pop
pop
xor
jae
push
das
xchg
sar
sub
push
dec
jne
dec
mov
push
jmp
pop
mov
xor
inc
pop
subl
movsl
sbb
inc
adc
adc
mov
es
mov
sbb
pushf
aas
or
mov
dec
xor
pop
aas
cmpl
mov
ret
push
inc
dec
xchg
mov
es
xabort
int3
xor
cmp
daa
push
movl
shll
xor
adc
inc
pop
mov
inc
pop
ret
cmp
int
mov
int
lods
enter
mov
fcoms
xor
stos
test
pop
cmp
fstpt
push
cltd
adc
mov
ret
jmp
fdivrs
xor
jge
adc
mov
mov
das
gs
xor
mov
stos
ror
xor
xchg
xchg
in
sbb
cmpsb
lahf
loope
fucompp
cmp
or
aas
mov
sti
in
dec
dec
jle
lcall
fsts
shll
jb
ret
and
ds
cmp
dec
or
adc
loope
into
jne
inc
int3
sub
sub
pop
jae
xor
movsb
cmp
int
adc
imul
cmpsb
sub
js
adc
loop
mov
rcrl
adc
cli
mov
xor
add
shrb
mov
cltd
xchg
pop
stos
out
dec
cmp
jne
test
push
sbb
ljmp
xchg
and
scas
in
jp
dec
nop
jmp
imul
sarb
into
pop
dec
lcall
nop
mov
push
mov
outsb
lahf
mov
lahf
es
mov
mov
insl
cld
sub
das
loop
aaa
dec
lcall
in
adc
lea
into
mov
out
xor
notb
jne
mov
fs
mov
sbb
push
mov
xor
mov
je
pop
mov
dec
or
jne
out
movb
adc
jne
jbe
dec
mov
xorb
leave
xor
in
insb
jp
lahf
std
jae
es
in
pop
test
negb
cmp
xchg
mov
xchg
or
pop
mov
pop
add
add
imul
cmp
add
ljmp
test
adc
pop
fiaddl
mov
push
cs
dec
and
incl
cli
stc
aas
in
fiadds
add
cltd
mov
adc
mov
ja
in
test
and
cltd
nop
jge
xlat
pop
dec
punpckhdq
test
daa
push
jns
jne
mov
test
gs
jge
add
pop
in
push
ljmp
enter
lret
dec
int
in
push
add
inc
stos
adc
mov
pop
rdmsr
int3
adc
jns
mov
xor
sub
xchg
dec
and
sub
mov
sub
out
xchg
mov
sbb
sub
mov
mov
jmp
or
imul
stos
leave
sub
rol
mov
and
add
sahf
imul
adc
test
jne
adc
cmp
lahf
fsubrl
add
pop
mov
add
icebp
into
xor
mov
and
cmp
jl
sub
iret
xor
in
test
cmpsb
xor
add
mov
jg
pop
and
mov
and
dec
inc
sub
lock
nop
je
dec
ret
fs
jae
xchg
jecxz
and
dec
and
pop
adc
xor
sbb
jns
cmp
out
xor
fidivrl
xchg
hlt
xchg
stc
mov
mov
sub
gs
cmp
les
stos
push
jbe
imul
fwait
js
adc
shr
push
mov
je
mov
and
pop
push
dec
mov
sbb
popf
je
in
nop
int3
push
fmuls
fnsave
sbb
mov
imul
movsl
xchg
js
add
sub
jbe
pusha
loope
arpl
xchg
mov
add
fs
fsubl
push
jl
pop
sti
push
insb
call
inc
insb
clc
fildll
xor
add
push
aaa
out
mov
cmp
leave
or
push
xor
mov
inc
mov
in
pop
sbb
sbb
pop
sub
aad
hlt
inc
mov
or
pop
xorb
test
scas
repz
dec
jg
xchg
xor
mov
adc
shl
cs
push
pop
jb
fwait
leave
or
test
or
push
aam
stc
push
add
fwait
ret
loope
mov
lea
add
jno
mov
mov
mov
fcomip
les
adc
lahf
xchg
pop
mov
lret
fdivrs
ja
rcr
aas
push
addr16
sbb
aaa
lcall
ret
xlat
jne
fwait
jl
aaa
adc
jne
scas
inc
inc
cli
pusha
sub
mul
bound
out
mov
repz
repz
jge
mov
dec
pop
and
adcb
jmp
push
pop
sahf
mov
sub
pop
test
or
leave
dec
call
xchg
leave
and
sbbl
jne
and
xor
dec
push
push
xchg
lcall
xchg
or
jmp
cmpsb
pmaxsw
es
fsubrs
sub
scas
les
fnstsw
sahf
das
pop
mov
ss
push
subl
popf
and
push
cwtl
ret
mov
pop
add
pop
incb
jge
sbb
mov
loopne
insl
dec
inc
pop
xor
lcall
jo
or
mov
mov
repz
je
sub
xorb
add
pop
pushl
mov
mov
dec
into
sub
mov
pop
jns
mov
push
push
daa
scas
dec
pop
adc
leave
push
mov
add
cmp
fs
xchg
jnp
fstpt
popa
clc
push
int3
imulb
jg
rolb
mov
nop
iret
inc
jne
xor
inc
xor
test
je
call
and
das
rolb
mov
mov
sbb
int3
mov
cmpsl
fldcw
mov
or
sti
lahf
addl
sub
add
push
lea
dec
out
jle
cmc
inc
push
cmpsb
lods
cmpsl
test
and
cmp
outsl
roll
fwait
mov
or
enter
inc
arpl
jecxz
jb
mov
dec
cltd
dec
or
dec
mov
push
inc
inc
pop
fisubs
dec
insb
add
add
mov
je
jmp
jbe
adcb
sub
inc
xchg
and
add
lods
ret
mov
adc
mov
xchg
jns
push
pop
data16
pop
fldcw
pushf
mov
dec
add
movsb
sbbb
push
sub
jmp
fcomps
cmp
scas
add
mov
idiv
or
push
andb
out
mov
mov
rclb
push
out
cmp
neg
pop
pop
lea
std
dec
inc
sub
inc
adc
inc
jb
clc
sbb
and
jne,pn
xlat
xchg
and
add
outsb
lods
fwait
jno
jmp
leave
icebp
pop
inc
loope
mov
nop
daa
and
dec
stos
sbb
pop
cld
in
dec
fimuls
arpl
movsl
sub
enter
pop
ss
cmpb
mov
cmp
mov
out
sbb
mov
inc
pop
push
into
in
xchg
shll
loop
xchg
mov
int
dec
aam
jo
inc
cmp
test
push
xor
cmp
idivb
lret
cmp
mov
stc
adc
in
dec
insb
dec
xor
mov
lcall
roll
call
mov
insl
sti
bound
mov
nop
loop
add
and
add
mov
dec
mov
cld
stos
add
je
out
or
adc
outsb
push
jp
mov
mov
ss
test
add
xchg
ficoms
outsb
inc
jb
sub
mov
and
and
and
insl
add
sbb
jno
cltd
xchg
dec
ds
fs
and
dec
dec
adc
mov
lret
shlb
rcl
mov
aaa
cmpsl
popa
add
sub
jbe
mov
push
xor
xchg
movsl
daa
rolb
pop
jecxz
iret
xor
add
ret
cs
pop
mov
rcrl
xchg
clc
mov
mov
mov
xor
adc
movsl
push
adc
dec
lea
test
mov
sub
sub
fnstcw
rcrl
popf
pop
std
lods
xchg
addr16
mov
sbb
add
dec
sbb
sbb
mov
sub
sarb
in
lret
mov
outsl
aas
push
fsubp
or
and
sub
add
push
jecxz
arpl
ja
enter
push
pop
stos
cli
sti
les
dec
sbb
iret
mov
xlat
aas
sub
or
add
lcall
jge
packsswb
inc
xchg
pop
scas
pop
push
mov
mov
and
xor
outsb
mov
je
add
in
xchg
stc
lods
mov
mov
mov
adc
mov
lcall
push
fs
bound
cmc
cmc
fistl
dec
mov
or
call
inc
subl
sub
dec
and
xchg
ljmp
clc
adc
addr16
negl
or
push
sbb
dec
sub
cmpsl
das
jns
mov
leave
adc
xchg
fwait
jecxz
sbb
or
mov
or
inc
orb
mov
mov
cmp
push
mov
ret
mov
ja
jnp
psrad
test
and
pop
aam
lcall
aaa
aas
jl
imul
adc
ja
sbb
or
fildl
and
pushf
aaa
outsb
in
jmp
mov
lods
mov
push
pop
sbb
stos
jae
cld
cli
mov
push
movsl
jo
imul
adc
nop
push
pop
shrl
pop
les
aaa
aad
std
jl
rolb
adc
sub
xor
and
add
sbb
mov
std
out
imul
outsl
mov
jo
xchg
leave
push
jg
in
adc
push
xchg
sbb
sub
lahf
and
mov
fdivrs
mov
inc
push
mov
stc
push
leave
js
pop
jb
xor
sarl
inc
ret
lret
or
mov
loop
subl
test
jmp
cwtl
insb
mov
or
xchg
iret
add
mov
mov
jmp
cmp
sti
cwtl
mov
add
out
daa
cmp
xchg
and
rcll
add
or
push
loope
adc
jmp
sbb
sub
cltd
mov
rcrl
nop
or
sbb
mov
or
in
dec
jns
xor
sti
mov
aaa
xchg
sub
addr16
and
ljmp
mov
scas
inc
mov
test
daa
add
or
push
andl
jns
add
xchg
and
add
jle
test
adc
adc
cmp
jno
inc
push
sbb
lret
ljmp
xor
test
imul
mov
or
dec
mov
fwait
push
push
push
push
push
roll
cmp
fucomip
dec
xorb
pop
mov
sbb
inc
add
mul
mov
xchg
jae
mov
and
in
sub
mov
fmul
daa
sbb
bound
jno
aaa
xor
or
inc
jle
jo
ret
negl
dec
sbb
mov
dec
pusha
mov
sbb
mov
push
cmp
pusha
arpl
fistpl
mov
xchg
pop
ja
popf
mov
jmp
mov
xor
and
mov
xchg
add
pop
xchg
jp
mov
test
dec
lret
jle
lahf
cli
mov
mov
out
popa
lcall
fistps
dec
out
push
add
jne
mov
pop
mov
imulb
add
gs
cmpsb
pop
lret
pop
inc
ret
mov
rclb
adc
scas
fdivr
mov
pop
aam
ja
lret
js
jmp
sahf
lock
xchg
ljmp
adcb
sar
xchg
push
std
and
aas
shll
cld
aam
aaa
xchg
dec
pop
inc
mov
mov
cld
repz
sbb
fcom
decb
imulb
ljmp
int3
pop
add
ss
mov
jo
ret
adc
sti
sbb
or
test
and
or
mov
aaa
jno
arpl
cld
and
cmp
shll
fiadds
and
mov
ja
faddl
mov
mov
mov
fisttps
fnstsw
push
sbb
fmull
cld
loop
scas
ljmp
popa
pop
cmp
ds
jnp
xchg
js
test
vshufps
mov
repz
cwtl
xchg
sbb
call
inc
mov
xor
mov
add
loopne
fnstenv
lahf
leave
inc
jae
cmp
cld
lahf
mov
rep
inc
test
cli
aad
clc
shrb
sbb
xlat
or
mov
xor
loop
xor
jg
dec
das
mov
je
sub
je
jl
jl
ss
lahf
ret
shrl
sbb
inc
iret
sub
cmp
loope
xchg
mov
movsb
mov
sbb
pop
push
clc
ret
mov
shr
or
ficomps
push
and
jg
ja
js
adc
lahf
les
popf
pusha
dec
jae
mov
inc
push
int3
notb
xchg
fcmovnb
add
dec
jae
or
sub
push
jge
cmpsl
pop
std
cs
fstpl
popa
sub
iret
stos
je
xlat
dec
and
adc
mov
repz
mov
test
jae
adc
pop
add
inc
mov
iret
xor
and
pop
add
mov
test
sbb
sub
daa
cmp
adc
lahf
push
andb
out
xlat
add
andl
sbb
or
add
fstpl
ds
inc
test
xchg
icebp
aas
enter
add
push
push
jnp
pop
push
bound
jnp
push
lret
shl
mov
in
cld
dec
sub
aam
cmpsl
out
xchg
movsl
js
popa
sarl
mov
push
mov
adc
jle
xor
jno
lret
out
sahf
in
nop
xchg
fs
mov
popf
sarb
inc
fdiv
jmp
or
xlat
ss
imul
cld
je
jmp
nop
xchg
aad
mov
mov
out
adc
mov
idivl
cs
mov
add
sarb
fisubs
lock
cmc
push
std
push
daa
jne
mov
ljmp
xor
insb
jge
xchg
test
jl
dec
cmp
inc
push
sbb
scas
mov
sub
mov
mov
aad
fwait
or
adc
loop
push
nop
lea
sbb
ja
nop
stc
icebp
call
stos
stc
adc
inc
popf
cmpsb
jg
mov
clc
stc
sbb
lods
out
fdivrl
jge
cmpxchg
cmpsl
and
mov
pop
mov
js
adc
test
and
inc
sahf
addr16
loopne
leave
lcall
inc
mov
or
sbb
push
adc
or
outsb
push
mov
push
mov
aaa
dec
xchg
xchg
pop
push
xchg
inc
dec
inc
sbb
jp
cld
inc
bound
jmp
js
push
mov
out
orl
subl
xor
mov
filds
or
lahf
call
scas
inc
shrb
xchg
mov
dec
jne
loop
pop
jmp
cmp
dec
popa
movsl
movsl
add
cld
sub
adc
jo
dec
adc
call
sti
call
stc
push
faddl
add
repnz
mov
sub
jge
cmp
fucom
pusha
in
mov
cmp
ljmp
sahf
repz
repz
scas
rorb
mov
stos
mov
vpavgb
fidivrs
xchg
push
fs
popa
mov
mov
dec
pop
enter
iret
fmulp
mov
jp
aaa
fcoms
std
insl
je
push
adc
sarl
mov
das
push
hlt
pusha
pop
test
test
mov
dec
sti
loopne
cmpsl
sub
int3
xchg
push
ss
cmpsl
addl
add
mov
inc
hlt
sbb
fs
insb
mov
idivb
jmp
bound
pop
cwtl
movl
mov
adc
pop
ficomps
jnp
inc
out
loopne
dec
mov
sub
sub
addr16
call
test
arpl
sbb
repnz
and
cmp
shll
inc
das
jl
push
shrl
out
pusha
cli
push
mov
pop
daa
scas
adc
fcmovb
or
das
mov
or
fldenv
sbb
lcall
pop
test
fildl
or
and
xlat
sahf
jne
insl
jg
inc
inc
inc
mov
mov
mov
xorb
fisubrl
pop
and
jge
cltd
mov
pusha
and
lds
rcrl
sti
and
xorb
pushf
inc
leave
cmc
xchg
lods
xor
jl
mov
and
ds
jge
pushf
mov
out
popa
dec
jbe
pop
jp
fnstenv
push
cmp
jle
push
arpl
negl
cmp
and
sti
outsb
mov
and
jbe
xchg
lahf
sbb
sub
cmpsb
add
dec
aam
sub
sub
mov
cld
xchg
arpl
sahf
push
and
push
lret
ss
call
ja
mov
hlt
push
push
push
notb
in
test
enter
lret
jae
mov
push
stos
mov
lahf
inc
enter
ja
dec
mov
outsb
or
pop
jecxz
fmull
jp
aam
ret
lcall
mov
and
fsubs
push
ret
inc
lret
xchg
mov
ret
sbbl
aaa
ss
inc
cld
mov
pop
jg
pop
gs
imul
pop
xchg
add
cli
fwait
sub
in
pop
lods
add
pop
dec
inc
out
mov
jne
fcmovnu
enter
and
push
and
insb
push
data16
jbe
inc
idivl
sbb
dec
pushf
fildl
idivb
add
stos
sub
or
and
test
call
jns
test
adc
lcall
test
push
mov
xlat
lahf
xor
movsl
pop
cmpsb
sub
sub
bound
in
pop
ret
sti
hlt
and
daa
mov
aas
jbe
add
cmp
leave
sbb
inc
or
dec
bswap
mov
mov
xchg
push
xchg
mov
sub
dec
sahf
stos
pop
mov
movsb
imul
stos
jmp
jmp
int
stc
add
inc
enter
sahf
mov
ss
int3
adc
dec
fisubrs
std
dec
mov
subb
enter
scas
or
cld
inc
aam
xchg
inc
pop
hlt
das
mov
dec
pop
repz
into
cmp
popa
fdivs
sbb
idivb
mov
and
dec
cmp
push
xchg
leave
lods
push
mov
js
jecxz
daa
push
adc
cmp
rcrb
and
mov
and
outsb
mov
pop
mov
dec
xchg
sub
test
xor
inc
inc
mov
rcr
jno
sbb
inc
clc
popf
lods
pop
add
pop
sbb
adc
outsl
dec
cmp
stos
and
mov
test
pusha
out
lahf
lock
ficoms
insl
push
es
mov
push
add
test
aas
adc
lret
adc
idivl
mov
jle
sbb
xor
jae
pop
in
jb
cmpb
adc
lea
dec
leave
pop
test
aaa
imul
int
adc
mov
fimull
rcll
movsb
rorb
sbb
jp
int3
dec
les
inc
ffreep
test
lods
push
imul
jge
shrl
mov
roll
adc
test
push
sbb
lods
pop
enter
sbb
pop
mov
pop
jmp
in
mov
mov
mov
jb
or
loop
gs
cmp
sub
out
bound
sbb
out
fucomp
push
mov
out
inc
xchg
addr16
jge
xor
int
jns
xor
test
mov
loopne
or
push
mov
pop
cmp
imul
adc
pop
scas
xor
push
scas
and
pushf
or
inc
jecxz
sbb
test
sub
and
shrl
int
imul
jno
mov
in
cli
movsb
push
sub
out
or
add
imul
js
sbb
xchg
ret
imul
adc
loop
or
push
sbb
adc
mov
lcall
mov
mov
and
stos
adc
popf
inc
shll
fs
mov
aam
pop
inc
ret
mov
xchg
sti
loop
mov
pop
adc
ljmp
cmp
add
xor
shlb
sub
out
mov
inc
outsb
xor
pop
xlat
je
sub
add
mov
pop
fs
cmp
jecxz
mov
push
leave
test
or
xor
ret
fldcw
inc
into
subl
add
cmp
xor
in
mov
test
pop
adcb
vmovaps
out
shlb
cs
lock
leave
mov
and
mov
lods
push
jno
push
neg
scas
cwtl
and
decl
xor
lock
aam
push
lret
lock
or
stc
mov
out
cwtl
mov
xor
xor
loope
adc
or
adcb
mov
sbb
lahf
push
lahf
push
loopne
loopne
mov
pop
dec
mov
jns
adc
clc
and
and
pop
cmpsl
sbb
push
xor
pop
add
mov
push
dec
pop
lea
mov
jnp
popf
sub
mov
xchg
test
mov
ret
iret
into
hlt
rol
lods
mov
jno
fiadds
mov
pop
dec
ljmp
test
rcll
sti
insb
sub
in
pop
push
pop
rol
or
and
cmp
mov
negl
inc
add
mov
push
mov
push
cs
adc
pop
lahf
into
arpl
or
xor
push
fs
xchg
xchg
lret
inc
xor
jae
scas
fldcw
ja
lock
fstl
leave
inc
test
test
out
shll
mov
push
ret
in
inc
adc
into
orb
add
push
ret
aas
mov
push
ja
pop
insb
and
jo
fsub
and
adc
dec
je
mov
push
and
xchg
addr16
sub
ror
into
push
dec
cmpsl
js
cmp
int
push
fimull
call
cld
xor
lcall
ja
cmpsb
mov
inc
add
mov
mov
in
iret
fadd
mov
imul
xor
pop
dec
adc
mov
jmp
pushf
movl
xchg
lcall
loopne
rorb
pop
aad
mov
inc
stc
or
xor
push
inc
ds
mov
bnd
dec
out
pop
imul
mov
insl
mov
mov
imul
lahf
mov
stos
rol
cmovle
fidivrl
jl
cmpsb
sub
imul
inc
pop
jo
inc
stos
adc
and
daa
iret
cmp
jecxz
lods
jecxz
push
jae
shll
mov
out
nop
adc
sub
loop
std
push
hlt
dec
mov
sbb
cld
out
jle
std
enter
mov
mov
mov
adc
ja
aam
outsb
daa
lcall
daa
arpl
lds
sbb
inc
lcall
stc
ljmp
sub
cmpxchg
inc
sar
outsl
inc
addl
cmc
or
pop
cli
pop
mov
icebp
jo
or
pushf
jle
jb
sbb
jae
jbe
mov
xor
js
int
cmp
pushf
pop
adc
je
push
sbb
aas
outsl
jp
das
movsb
rorb
mov
add
or
mov
sub
pop
jle
popl
dec
rcll
mov
std
orl
int3
jmp
fdivr
xchg
mov
pop
rcl
xor
xor
cmp
out
jge
cltd
jb
inc
adc
pop
cmp
clc
or
cltd
mov
push
sti
xchg
lock
js
push
sahf
pusha
stos
pop
mov
mov
dec
jno
mov
dec
inc
push
inc
mov
scas
and
fmuls
mov
ljmp
jo
cltd
xor
pop
insl
cmpsb
mov
cmp
inc
pop
movnti
inc
fstl
insl
call
idivl
outsb
mov
adc
mov
add
stc
ljmp
adc
daa
xor
dec
cmp
or
cs
pop
subb
movsb
mov
and
pop
scas
dec
pop
jle
push
mov
push
mov
or
cli
les
out
loop
or
fidivs
xlat
fimuls
dec
jmp
je
into
add
mov
call
shlb
clc
adc
jb
pop
cltd
adc
leave
push
cmp
repnz
add
data16
mov
movsb
xor
shll
aas
sbb
mov
inc
push
cltd
aas
outsb
mov
roll
or
lds
sahf
pushf
sbb
jno
push
in
rolb
or
loop
or
push
lcall
jp
mov
sbb
inc
cs
fsubrl
mov
sub
cmp
out
movsl
sti
pop
leave
dec
insb
ret
pushf
cmpsl
jl
or
test
repnz
cmp
xchg
xor
pop
repnz
loop
cmc
or
imul
mov
cld
sbb
add
pop
pop
daa
mul
sbb
cmp
fs
insl
add
shlb
cwtl
mov
push
aaa
xor
or
push
dec
or
leave
sbbl
inc
xor
je
xchg
mov
mov
lcall
negb
jb
inc
inc
pop
inc
xorl
out
or
mov
cwtl
dec
xchg
push
rol
sbbb
xor
addr16
sti
xchg
insl
push
mov
addr16
subl
mov
js
inc
xchg
pusha
fstp
iret
test
sbb
jecxz
shll
mov
ljmp
lret
lock
sarl
lds
or
sahf
leave
cmc
sbb
imul
xorl
sti
push
xchg
xchg
lea
inc
fmull
sbb
mov
movsl
mov
and
subl
arpl
icebp
xchg
popf
push
dec
aas
or
js
push
mov
hlt
and
jp
mov
fwait
sbb
xchg
ret
sub
lock
jecxz
and
adc
loopne
push
inc
jecxz
imul
sarb
pop
inc
mov
dec
xchg
lcall
loop
jmp
push
les
int
mov
mov
lods
mov
in
jg
popa
aad
mov
cmp
scas
mov
inc
add
xor
clc
aad
jl
mov
notb
daa
es
cmp
sub
push
cmpsl
btr
in
and
mov
fs
fstl
sub
adc
mov
jle
lahf
dec
push
icebp
mov
fnstcw
scas
loope
jmp
pop
mov
ret
inc
imul
cltd
jl
sbb
xchg
dec
mov
cmp
add
add
aas
mov
pop
imul
mov
xchg
mov
int3
mov
jmp
lret
push
pop
push
add
xchg
push
add
adc
push
or
outsl
ficomps
rcrl
outsb
rclb
mov
mov
and
loop
sbb
push
push
bnd
repnz
cmpb
hlt
popl
loop
mov
imul
shrl
or
ja
das
dec
or
out
icebp
pop
xchg
enter
pusha
popf
mov
inc
repnz
stos
jns
push
sub
mov
mov
pop
and
fwait
lock
das
xchg
xor
outsb
les
data16
inc
dec
call
cs
rcll
dec
mov
hlt
stc
jns
rcrl
push
aaa
mov
rolb
repz
push
daa
leave
in
add
add
scas
lret
and
push
mov
cmp
imul
js
and
pop
in
ret
mov
addl
mov
ret
das
pop
inc
xor
pop
mov
inc
mov
xchg
rcrb
or
mov
test
shrb
adc
divl
cmp
mov
in
inc
cmp
xor
rcr
sahf
aam
cltd
sti
fsubrl
pop
lcall
sub
outsl
roll
push
mov
mov
and
aaa
pop
mov
adc
scas
mov
push
xchg
push
aad
adc
in
xor
mov
mov
cli
mov
aam
jl
add
sahf
pop
pop
test
inc
enter
mov
je
gs
push
inc
push
jbe
pop
hlt
in
icebp
pop
outsb
push
mov
xchg
js
xchg
pop
jbe
jne
pop
mov
ljmp
mov
adc
push
call
add
ret
addr16
xor
or
mov
enter
das
cmp
xchg
add
notl
xlat
cltd
push
repnz
adcl
cmp
fldt
or
cmpsl
ficoms
push
dec
in
out
push
gs
or
add
shlb
inc
sub
and
mov
loop
mov
adc
sub
out
sbbb
pop
stos
mov
mov
jmp
pop
xlat
cmp
lret
mov
mov
js
mov
loopne
rclb
int
xchg
movsb
popf
mov
inc
inc
cmp
pop
adc
in
mov
or
sbb
xchg
ror
xor
mov
cli
sub
inc
ret
mov
pop
jg
leave
and
orb
cmpsl
adc
movsb
loop
fs
rcrl
pop
aaa
in
or
movsl
inc
mov
cli
fs
push
daa
push
sti
dec
mov
jno
scas
les
fimull
fsubrl
fadds
fldenv
gs
leave
push
mov
movsb
sub
mov
pop
popf
loopne
sbb
mov
pop
decl
add
out
jmp
rolb
and
adc
mov
jle
xchg
mov
xchg
loop
mov
mov
shrb
lahf
mov
cmp
or
loope
fwait
push
std
jp
aas
iret
push
mov
dec
bound
jb
popf
fimuls
xchg
insb
test
shll
sub
jnp
out
mov
cltd
ret
es
jp
sbb
data16
fcompl
inc
adc
addr16
ja
xor
ja
mov
mov
cmpsl
xchg
ds
mov
cmp
loope
jbe
push
mov
xor
pop
clc
arpl
jne
insl
jge
pop
and
add
mov
sbb
rcrl
jmp
ljmp
out
fldcw
lock
dec
clc
rclb
cmpl
push
ficoml
aas
push
mov
loopne
sbb
dec
push
movb
out
cmpsl
mov
fidivrs
pop
xchg
mov
ljmp
bound
mov
mov
fmuls
xchg
out
in
addr16
inc
call
icebp
in
movsl
aad
out
fldl
cmp
lcall
shll
xor
ficomps
cmp
mov
lods
cld
pop
outsl
es
movsl
subb
insl
and
enter
scas
xchg
xor
test
mov
test
imul
test
imulb
adc
mov
in
or
push
scas
jae
inc
pop
cmpl
and
nop
loop
out
xor
add
mov
stos
pop
cmp
daa
jnp
lock
dec
lret
hlt
cmp
popa
fistpl
inc
movsl
mov
sub
mov
add
mov
ficoml
dec
adc
dec
dec
shl
jg
xchg
repz
and
pop
ret
das
mov
push
cmc
les
inc
data16
cmp
daa
fs
insb
xchg
sbb
adc
mov
test
aad
push
notb
adc
push
push
mov
lret
xchg
mov
and
call
jge
xlat
pop
mov
test
fs
stos
pop
mov
out
xchg
add
sub
cmpsl
lods
push
jge
or
pop
subl
mov
mov
pop
andb
push
loope
pop
add
mov
cwtl
roll
xchg
push
div
sbb
test
or
cmp
out
and
inc
jecxz
scas
xor
lock
loopne
sahf
aad
popa
lret
scas
or
push
xlat
mov
and
fildl
adc
iret
push
adcl
cmpsb
jne
loope
cld
mov
pusha
push
push
cmp
push
xor
mov
int
loopne
push
add
jnp
pop
jbe
insb
lcall
data16
pop
enter
sbb
mov
mov
divb
fistps
insb
sub
push
enter
xchg
movsl
add
sub
movsb
push
push
inc
jno
push
adc
test
or
xor
push
push
stc
cmpsb
cli
push
push
pop
sahf
repz
jle
jne
outsl
xchg
jge
cltd
xchg
add
cmc
mov
pushf
mov
std
aas
cs
pushf
cwtl
xor
sar
and
mov
in
mov
dec
addr16
in
xchg
inc
aad
adc
xchg
mov
cmpsl
inc
dec
push
add
ret
mov
ljmp
bound
enter
loopne
fidivrs
imul
xor
jl
jae
lock
jg
hlt
mov
mov
and
mov
jmp
xor
sti
inc
repnz
ljmp
mov
fists
or
mov
push
and
fildll
test
test
push
sub
test
and
sub
enter
sbb
stc
cmp
xor
mov
in
aas
std
mov
pop
xor
iret
dec
adc
mov
or
out
repnz
lahf
popa
stos
fcompl
mov
add
mov
push
add
jecxz
cld
aaa
lock
pop
nop
or
pop
decl
xlat
add
cltd
cmp
sub
mov
into
jle
cmc
xchg
mov
outsl
cmp
mov
test
push
fisttpl
mov
adc
or
jge
push
cmp
lret
pushf
xor
insb
test
mov
mov
push
jmp
aas
enter
stos
pushf
and
sbb
in
aad
sti
mov
lret
lds
inc
addr16
xor
lahf
cmpsl
pop
imul
ret
push
in
xchg
push
push
push
cmp
dec
push
test
cs
jge
sub
add
add
loope
and
add
xor
fdivrp
mov
sub
lds
adc
fs
mov
or
mov
or
jnp
sub
pop
int
cld
fstps
and
mov
ficoml
sbb
pop
aam
cmc
js
mov
inc
push
or
stos
dec
jbe
adc
push
nop
sub
icebp
xlat
lods
dec
popf
adc
pop
cmc
inc
inc
pop
cmpsb
das
and
arpl
sub
add
mov
jge
shl
push
pop
mov
sbb
mov
dec
rcrb
jecxz
daa
or
stc
sub
adc
lea
hlt
pop
xchg
add
stc
out
pop
scas
repz
pop
bound
and
mov
push
imul
adc
mov
adc
cs
fidivs
sbb
lret
test
mov
inc
jnp
fimuls
call
int
adc
arpl
and
xchg
call
cltd
jmp
add
repz
push
cld
or
fistpl
mov
xchg
loope
mov
fwait
iret
lret
xchg
popf
dec
jbe
and
pop
sub
sbb
or
xchg
dec
cli
lea
mov
nop
mov
pop
ficoml
gs
xor
cmp
mov
addr16
in
or
outsb
in
lea
sti
shl
sub
xor
loop
pop
hlt
arpl
scas
adc
mov
in
into
add
mov
dec
out
ficomps
inc
add
inc
adc
lods
ret
aad
mov
pop
mov
ror
jge
or
jmp
xorl
add
jns
mov
mov
dec
inc
adc
sbbb
icebp
arpl
mov
stc
mov
lahf
test
cwtl
das
pusha
sbb
fisubrl
aaa
push
sbb
or
js
sub
sahf
inc
idivb
orb
iret
rcrb
mov
mov
mov
aad
stos
jp
pop
jmp
mov
adc
clc
adc
mov
insl
jbe
cli
add
cmc
mov
adc
mov
mov
out
add
sub
aad
ficomps
sub
jne
rorb
xchg
xchg
sbb
inc
aam
pop
in
shlb
test
jge
movsb
call
test
fiadds
dec
es
repz
scas
jno
stos
aaa
jl
ss
pushf
sub
movsbl
add
push
idivl
inc
add
pop
into
jae
mov
stos
and
fdiv
and
daa
and
fmuls
test
call
nop
mov
mov
inc
jbe
orb
int
cmp
push
and
pop
inc
bnd
inc
jbe
dec
dec
mov
push
ret
xchg
out
jae
mov
cmp
sub
cld
pop
jns
inc
mov
adc
dec
pushw
fnstsw
cmpb
pop
jb
lock
fdiv
pushl
cmp
dec
pop
add
mov
jns
xchg
sbbl
and
repnz
lret
and
mov
lods
mov
daa
nop
rolb
mov
daa
mov
cmc
adc
jbe
fnstsw
push
inc
in
scas
adc
es
add
dec
mov
in
xchg
ret
in
in
fwait
cs
push
test
fwait
sbb
mov
sahf
push
inc
mov
mov
xchg
add
and
imulb
lcall
add
cmpsb
sbb
insb
xchg
sub
ret
aad
test
adc
pop
sti
cltd
fs
add
xchg
filds
mov
test
enter
je
mov
nop
push
sbb
shr
and
lcall
cmp
rcll
xchg
ja
cs
push
stos
dec
inc
jp
push
shrl
sbb
cmp
cltd
aad
mov
xor
inc
xchg
xor
sbbl
ja
and
das
arpl
out
shlb
fidivs
mov
fisubs
xchg
cmp
fistpl
cmp
ljmp
xlat
dec
loope
inc
ret
sbb
inc
pop
adc
push
pushf
fisttpl
mov
mov
or
call
decb
cmpsb
sti
andb
call
pop
jg
sbb
fimull
cmp
scas
jl
xchg
clc
cmp
div
adc
inc
insl
jp
loope
add
repz
jnp
and
enter
push
inc
pop
cmp
or
mov
mov
dec
loope
sub
ds
cmp
adc
xchg
test
pop
enter
in
mov
dec
bound
ficomps
in
adc
jae
pop
jg
or
cwtl
mov
sbb
popf
aaa
push
sbb
and
ret
ret
cmpsb
fdivrp
mov
push
stos
add
jecxz
and
aaa
pop
xchg
sbb
inc
les
dec
sbb
ds
sbb
mov
roll
or
mov
sar
mov
fadd
pop
fildl
mov
jne
or
fnstcw
icebp
rorl
lods
sub
ret
sub
ljmp
test
mov
xlat
sbb
sbb
shll
add
push
xor
insb
xchg
push
xor
jl
lret
push
sub
ret
pop
movsl
movsl
rcll
add
aad
test
dec
mov
jae
dec
mov
pop
inc
lods
call
mov
mov
xchg
push
gs
loopne
cmp
jnp
daa
outsb
std
cmp
dec
sbb
incb
cwtl
cmp
or
sbb
pop
fs
mov
xlat
loop
adc
popa
sti
inc
mov
mov
sub
shrl
mov
test
push
out
dec
cmp
ljmp
mov
das
mov
stos
mov
xchg
shl
lods
js
dec
sbb
aaa
sbb
rep
js
imul
xchg
movsb
add
ja
lret
addb
inc
fwait
jo
mov
sub
jne
ror
mov
push
testl
gs
or
adc
adc
jnp
sub
adc
ret
sbb
pop
mov
aaa
or
rorb
in
push
in
jecxz
in
ret
add
aaa
cltd
hlt
and
mov
pop
or
aaa
stos
mov
daa
aas
push
repz
adc
movb
mov
arpl
adc
adc
fnstenv
push
or
daa
inc
pop
dec
add
push
call
adc
lahf
pop
push
xor
pop
arpl
xchg
divb
inc
dec
aaa
sub
sub
test
mov
addr16
dec
scas
pop
icebp
repnz
imull
jmp
sub
mov
jns
pushf
adc
xor
push
or
push
mov
insb
inc
add
xor
inc
das
repz
dec
enter
aaa
movups
fwait
popa
aaa
jne
ret
jle
pop
enter
mov
mov
push
inc
dec
cmp
aad
clc
jo
repz
enter
bswap
pushf
add
lahf
push
or
movsb
lcall
xchg
cltd
jp
mov
push
push
arpl
dec
lahf
and
cmp
sub
push
xchg
pushf
fmuls
sub
jecxz
pop
imul
mov
xchg
nop
adc
jmp
pop
and
fldcw
jecxz
push
ret
je
idivb
data16
call
xchg
pop
leave
loopne
hlt
push
dec
leave
int
xchg
or
cltd
fmuls
push
mov
gs
mov
jp
dec
lahf
fdivrs
test
lahf
in
push
add
and
dec
outsb
lods
mov
mov
loopne
jmp
and
rcr
shll
ja
and
or
out
xchg
push
mov
push
in
pop
outsb
jbe
pop
bnd
push
addr16
les
and
ja
out
test
mov
pop
cli
and
rclb
xorl
xor
adc
pop
aad
ds
scas
scas
mov
jb
xchg
fwait
jbe
js
movsb
cmp
mov
sbb
test
sub
iret
daa
popf
and
test
pop
andb
pop
cltd
pop
rol
out
test
pop
adc
add
xchg
xchg
icebp
jne
xor
lcall
push
add
adc
mov
popa
cli
or
push
stos
enter
push
je
ret
fs
andl
rcl
or
mov
cmp
out
fisubrs
push
inc
and
cmp
out
push
lods
add
jle
jno
scas
pop
mov
out
cmp
shrl
mov
mov
shl
sub
mov
lds
mov
jmp
loopne
loope
hlt
addl
inc
cmpsb
jmp
xlat
mov
repnz
dec
pop
sub
popa
and
jae
xor
jo
mov
sub
fwait
jg
mov
adc
ja
test
add
stos
mov
pop
adc
sbb
sbb
cmp
cmp
js
and
mov
and
into
sub
mov
in
push
imull
sbb
xchg
pop
or
inc
sub
mov
dec
call
lcall
push
jbe
push
add
xor
jne
cwtl
pushl
mov
imull
mov
mov
orl
rorl
adc
inc
push
cmpsb
add
pusha
dec
xchg
out
jge
push
pushf
xchg
int
lahf
imul
xchg
fdivp
mov
popf
sbb
and
xchg
arpl
fimuls
jl
adc
sub
push
in
popf
xlat
adcl
sbbb
fcomps
push
cmpsb
push
adc
mov
xchg
stos
push
int
enter
negb
or
cmp
xor
punpcklwd
out
arpl
push
adc
xor
mov
dec
addr16
jecxz
iret
clc
stos
sbb
lods
fisubrs
notl
mov
insb
adc
int
or
mov
mov
mov
jbe
mov
lcall
aad
fstl
xor
dec
cmp
insb
xlat
out
ret
xor
rcrb
sbb
jge
jl
scas
movsb
clc
mov
jnp
std
orl
adc
or
hlt
fs
cwtl
js
lds
and
and
daa
or
xchg
loopne
mov
push
repnz
adc
in
mov
xor
adc
add
imul
inc
shlb
test
imul
jne
int3
push
hlt
dec
xchg
mov
dec
popf
movsl
fimuls
les
push
pop
or
lds
cmp
imul
and
adc
push
sbb
loopne
or
xor
out
test
call
jl
xor
mov
imul
jg
cmp
push
aas
cmp
adc
stos
xchg
pop
mov
add
jmp
int3
lahf
subb
pop
xor
shlb
sahf
in
mov
out
inc
pop
xlat
fldt
pop
adc
push
jae
mov
lods
adc
fcmovnu
dec
aad
into
cmp
ljmp
inc
ja
gs
pop
cwtl
mov
xor
mov
lock
xchg
int
ffreep
test
push
movsl
stos
fnstcw
add
sahf
je
bound
and
pop
ds
jne
mov
and
jns
or
fsts
nop
cmpl
imull
jmp
sub
mov
fstpl
lret
push
jge
stos
out
sub
pop
fimuls
and
sbb
cmp
mov
add
sub
bound
cmp
outsb
and
cmp
in
xchg
pop
popa
xchg
lock
bound
xchg
hlt
ds
insb
sub
pop
xor
dec
inc
popa
dec
xchg
loop
bound
daa
bound
ss
rcll
lahf
jo
dec
leave
cmp
xchg
ret
popa
movsl
jo
ljmp
add
clc
ficoms
aaa
xchg
push
pop
es
jne
pushl
insl
jmp
rorl
js
jns
xchg
inc
xor
out
mov
lods
mov
add
dec
xchg
pop
xchg
adc
jmp
push
xor
sbb
xor
inc
adc
adc
jbe
js
lret
cmp
pop
xchg
sub
mov
push
push
rorl
inc
xchg
stc
js
shl
jmp
push
cmpsb
cmp
ret
imull
roll
and
xchg
insb
lret
dec
ret
mov
mov
xor
ja
notl
pop
out
xchg
adc
aas
fs
aaa
sbb
mov
movsb
inc
inc
in
int3
inc
clc
mov
jecxz
xchg
and
jmp
in
in
sbb
lcall
cmp
inc
dec
adc
mov
call
sbb
push
lret
dec
mov
fmull
in
ss
or
loopne
adc
sub
lock
push
and
cmpsl
mov
popf
pushf
lock
jb
popl
adc
ret
fidivrs
mov
outsb
cmpsl
push
gs
mov
cmp
rcr
mov
bound
mov
mov
test
fildl
mov
cmp
aad
push
je
and
outsl
mov
push
jl
inc
push
shll
cmp
lret
jl
int3
test
cmp
aaa
lcall
push
adcb
pushf
mov
mov
inc
insb
jecxz
cmp
mov
sbb
aad
das
in
outsb
les
mov
mov
xcrypt-cbc
cmpsl
push
xor
in
cli
ficoml
into
inc
push
jno
in
sbb
call
outsb
arpl
sub
jge
mov
iret
mov
mov
push
xlat
test
inc
stos
scas
xchg
out
inc
pop
pop
in
pop
imull
fsubrs
scas
add
pop
add
lret
out
pop
aaa
fstps
pop
int
xchg
pop
inc
movsl
cmp
je
jns
gs
pop
dec
ja
cmpsb
movsl
or
cmp
sarb
mov
in
push
std
inc
jne
cmpsl
jo
jge
call
call
add
jae
push
lds
pop
sub
pop
add
out
adc
dec
aas
add
lock
mov
lahf
daa
addr16
or
addr16
pop
insb
loopne
dec
cltd
lods
jmp
xchg
ret
lahf
push
popa
or
test
mov
cmp
mov
repnz
sbb
mov
add
sbb
cmp
mov
mov
test
sahf
out
mov
icebp
jp
stos
daa
xor
xor
outsb
push
jns
jno
mov
movb
shlb
cmp
cwtl
add
mov
or
cmp
test
xchg
shll
sub
stc
test
jmp
nop
or
daa
insl
cmp
mov
cmp
xchg
in
out
push
xchg
adc
into
sbb
fstpl
mov
adc
insb
adc
jge
jne
adc
sbb
jg
adc
pop
aas
pop
sbbl
sub
aad
jp
push
popf
add
int3
std
addl
call
xor
push
push
sbb
jae
popa
mov
rcrb
mov
loop
lods
adc
sbb
and
xlat
inc
jno
jnp
push
mov
cmp
stos
in
dec
scas
pop
adc
lds
add
mov
into
and
ret
push
mov
ficompl
and
push
test
and
inc
adc
mov
aas
movsb
or
xor
out
cmp
into
cmp
dec
jl
mov
and
sbb
les
test
dec
push
lock
mov
jne
push
shrl
add
aaa
xor
rorl
push
cmp
sbb
ficoml
and
jmp
dec
pop
mov
movsb
rorl
mov
xchg
lock
cmp
call
sahf
loope
lods
sbb
in
clc
sub
sbb
daa
jae
cltd
movsb
mov
jg
in
sub
mov
push
adc
xor
neg
and
and
xor
fwait
sub
push
aaa
inc
insl
adc
mov
outsl
xchg
fstp
adc
dec
pop
test
jmp
jno
orl
insl
scas
mov
sbb
imul
jns
nop
xchg
mov
or
mov
div
mov
shll
sub
es
jae
cmp
fwait
rol
cmp
adc
jmp
mov
sbb
loope
push
pop
mov
push
jmp
xchg
adc
ljmp
rorb
jbe
push
jns
jnp
out
or
lock
sub
push
ljmp
pop
inc
sub
enter
push
test
add
dec
cs
inc
mov
loope
jge
push
popa
mov
adcl
scas
lcall
testl
lods
mov
mov
dec
xchg
add
mov
adc
xchg
inc
ret
fisttpl
pop
or
enter
inc
aam
bound
xchg
push
or
in
jmp
push
mov
inc
scas
inc
mov
or
fsubl
into
daa
xchg
call
cmp
jmp
dec
pop
or
dec
imul
testl
add
xor
jae
add
sarb
int
stos
push
call
subl
lret
mov
in
or
adc
imul
in
adcl
dec
icebp
cltd
cmp
repz
mov
rolb
fisubrl
push
adc
aad
adc
or
scas
bound
into
outsl
in
and
mov
arpl
and
mov
ret
ljmp
inc
je
lds
xor
call
scas
lret
push
test
cmp
inc
cmp
jl
push
icebp
mov
jecxz
mov
cmp
cmp
stc
fsubrl
fmull
xorl
cli
mov
jecxz
jae
fidivs
or
js
inc
fisubl
stos
and
sbb
xchg
fs
test
call
pop
fbstp
rcll
mov
aam
or
jne
sub
insb
outsl
dec
fsubp
imul
out
in
lret
es
dec
and
test
dec
jecxz
lods
push
xor
push
sarb
out
and
pop
and
and
pop
mov
dec
ss
fldenv
pop
movsl
dec
rol
cmp
sub
xor
sarl
xor
jmp
inc
sbb
mov
outsl
push
cmp
movsb
inc
andb
jno
add
sbbl
xchg
push
or
cwtl
test
movsb
adc
sbb
adcl
mov
std
mov
repnz
push
inc
test
pop
mov
pop
add
ret
mov
ret
xchg
fisubl
data16
dec
sahf
pop
pop
mov
inc
jae
repnz
bound
inc
ljmp
ljmp
test
movsl
enter
stc
movups
jae
stc
test
bound
cmpsb
or
xor
xor
stc
mov
in
ljmp
outsb
loopne
cmp
and
daa
stos
loope
aaa
cmc
mov
adc
inc
lcall
aam
inc
mov
in
mov
mov
insl
fildll
dec
jge
jae
jne
sub
push
xchg
pop
popa
aam
movb
pop
jo
jo
push
adc
cmp
imul
inc
mov
call
push
cld
jg
popa
insl
gs
mov
adc
sbb
add
movsl
rcrb
cltd
mov
jbe
mov
ja
mov
mov
mov
lods
and
xor
testl
arpl
jnp
loopne
push
xlat
out
inc
mov
stos
scas
jno
xor
mov
inc
pushf
aad
aad
pop
bound
aas
repz
add
scas
cld
or
xorb
mov
std
test
in
mull
lock
jecxz
sti
ret
jp
jg
out
test
mov
repnz
rcr
mov
jle
push
ret
inc
js
ret
mov
movsb
hlt
stos
pop
inc
mov
sahf
fsubrl
mov
ret
or
inc
loop
test
push
sbb
insb
lahf
in
ret
pop
gs
or
test
ret
xchg
outsl
dec
insl
xchg
test
out
adc
push
dec
mov
xor
jae
in
add
jle
adc
popa
pop
dec
scas
dec
int3
scas
or
and
jle
ret
lcall
xor
js
out
mov
pusha
fs
in
cmp
xor
jp
pop
shrl
push
cld
js
outsb
mov
loopne
stos
pop
mov
mov
test
sahf
idiv
cmc
mov
outsb
mov
xor
jnp
add
clc
mov
pop
std
xor
push
jle
mov
mov
cmp
jo
shr
sub
jecxz
fucom
in
shlb
outsb
jecxz
mov
call
inc
cmp
xchg
arpl
mov
lds
jecxz
and
push
xchg
stc
push
push
daa
les
rcrl
mov
sarb
sbb
jge
mov
test
divb
sub
std
or
insl
mov
cmp
xor
cwtl
test
mov
inc
jl
sbb
test
sbb
imul
ret
xor
dec
iret
icebp
ret
call
jae
popl
scas
pop
ss
pop
arpl
push
xchg
mov
test
dec
aam
sbb
mov
into
push
mov
inc
or
push
shlb
dec
lock
ret
dec
cmpsl
xor
push
hlt
push
adc
hlt
adc
sub
cmp
jns
sahf
mov
stos
sarb
mov
sub
cmp
sub
ds
fadds
pushf
jns
arpl
cmpsl
jnp
mov
sub
mov
pushf
inc
insb
jns
scas
out
cmp
mov
mov
add
call
stc
nop
sarb
push
and
xchg
insl
pop
out
cmpsl
sbb
lods
xchg
lret
xchg
sub
in
mov
rorl
sub
mov
cmp
data16
into
arpl
cld
repnz
sbb
pop
les
and
clc
loope
lahf
sbb
mov
fs
dec
stc
mov
ret
or
push
fcoms
je
jecxz
shrb
lret
subb
out
fdivr
mov
jns
stos
and
leave
call
dec
lcall
in
pop
sti
pop
jbe
pop
aas
sti
xor
xchg
or
mov
je
out
xor
dec
cmc
cmp
mov
std
mov
dec
jo
mov
fidivrl
xchg
popa
or
cmpsb
xchg
sub
bound
jne
sti
cmc
pop
adc
addr16
in
out
xor
lret
ret
lods
test
push
scas
jge
mov
int3
lock
repnz
push
mov
stos
inc
rcll
mov
mov
jecxz
adc
clc
stos
and
adc
jae,pt
js
xchg
xor
push
push
ljmp
scas
cmp
stos
xchg
mov
int3
das
jmp
iret
add
add
outsb
pop
popa
mov
mov
mov
out
iret
xchg
xchg
outsl
out
loop
dec
jle
je
jno
add
mov
cwtl
aas
mov
jo
jo
in
outsl
lea
cmp
popa
cmp
sar
cmp
in
push
mov
jae
jno
cmp
ret
cmp
jb
call
xchg
in
or
xor
push
add
xor
sbb
jecxz
cmpsb
inc
in
sub
sub
imulw
les
aaa
and
push
jns
cmpsl
arpl
ds
mov
ret
imulb
sahf
cmp
cmp
shrb
rorb
xlat
push
out
call
jb
test
shl
jmp
mov
dec
enter
add
adcl
push
mov
leave
out
inc
and
jge
popf
test
into
pop
pop
mov
negl
sbb
mov
notb
inc
fdivl
test
popa
mov
clc
sbb
mov
and
push
inc
and
int
push
int3
and
mov
and
xchg
add
mov
repz
movsb
xorb
jp
cld
in
int
push
cs
or
sub
stos
sub
js
int
mov
fstpt
iret
xor
sub
in
inc
movsb
and
insl
je
imul
sub
outsb
xor
test
stc
pop
aad
mov
xlat
push
je
cli
xchg
adc
sub
outsb
mov
fs
sbb
sub
mov
or
jo
std
cmp
pop
fnstcw
dec
ja
sub
sbb
into
pop
jb
push
mov
push
andl
xchg
dec
sub
fs
push
repz
stc
out
sub
and
addr16
clc
adc
push
mov
and
xchg
sahf
fdiv
jne
rcrl
rolb
mov
enter
or
mov
inc
inc
xchg
cmpsb
xchg
rcrb
lahf
and
mov
adc
jne
sbb
mov
lea
popa
pop
es
out
ljmp
jg
clc
out
scas
orl
adc
out
sub
imul
and
cmc
flds
dec
sbb
or
lods
push
dec
fdiv
loope
stc
dec
xchg
and
push
sbb
mov
loopne
addr16
xor
testb
aam
dec
mov
popf
stos
insl
push
mov
pop
repz
mov
dec
pop
push
fcom
icebp
push
ja
and
push
ror
mov
cmp
icebp
pop
out
movb
xchg
pop
push
dec
mov
mov
lcall
xchg
icebp
inc
mulb
mov
xor
rolb
repnz
shl
sbb
mov
add
adc
xchg
mov
inc
sub
imul
adcl
or
inc
pushf
mov
stos
mov
pop
pushf
jecxz
add
aas
pop
cltd
pop
push
pop
cmp
add
iret
nop
or
test
mov
fmull
xchg
aam
gs
cmp
shr
stc
push
mov
pusha
dec
add
and
add
loope
cmpsb
push
mov
outsb
sbb
cmp
mov
mov
pop
fldenv
and
gs
scas
fwait
jns
cli
pop
mov
fwait
cwtl
jb
lret
push
mov
loopne
sti
imul
pop
jno
movsl
jo
cmp
push
call
push
dec
jns
lea
push
xor
jb
std
clc
mov
mov
push
fisttpl
out
pop
lahf
push
stos
push
out
inc
movsb
adc
es
xor
int
pop
int3
orb
enter
sub
mov
push
loope
stos
and
jns
in
dec
andl
icebp
shll
add
mov
insb
mov
xor
mov
lods
gs
push
inc
lea
clc
jnp
mov
cmpl
xchg
lds
andb
sub
lret
or
xchg
std
or
test
or
sub
mov
iret
cmp
cmp
mov
pop
add
fistl
mov
xor
sbbb
adc
cmp
and
iret
push
popa
inc
dec
leave
shrb
stc
inc
movsb
movsb
test
negb
fstpl
push
xor
or
rol
adcb
push
das
gs
ljmp
pop
or
push
xchg
cwtl
and
aas
pop
ljmp
rolb
mov
fldl
jmpw
xor
dec
test
mov
or
ret
jmp
arpl
setg
fadds
lcall
adc
lahf
pushf
mov
mov
inc
dec
js
out
dec
lods
fadds
lods
mov
shrb
mov
stc
adc
out
cmp
xor
dec
cmp
xorl
sti
cltd
add
pushw
ss
sub
cltd
push
mov
pusha
sub
out
sbb
test
jmp
iret
daa
and
fnstsw
xchg
xchg
jmp
or
sbb
adcb
ret
pop
mov
test
sahf
fbstp
dec
pop
mov
roll
lds
cli
mov
xchg
outsl
gs
jge
mov
shl
jb
sub
mov
ret
fisttps
inc
jg
dec
push
cmp
jmp
pop
inc
addr16
mov
int3
mov
mov
aas
aaa
adc
out
and
pop
xchg
cmp
loopne
popf
sub
cmp
sub
or
ret
arpl
jle
adc
xchg
and
pop
dec
aam
icebp
jp,pn
out
xor
cmp
push
adc
nop
push
pop
push
adc
xchg
mov
mov
jmp
repz
xor
mov
lahf
dec
inc
cmp
xor
push
fadds
orl
fcomp
stc
jge
add
sub
popa
fadds
ret
pop
popa
std
xchg
mov
imul
int3
mov
xchg
pop
xchg
inc
xchg
aas
test
push
cmp
fsubr
clc
jo
inc
push
adc
sbb
arpl
mov
push
mov
add
nop
mov
add
movsl
cs
jle
sub
imul
js
mov
xchg
ficomps
pop
xchg
push
orl
mov
or
jmp
dec
mov
cwtl
inc
mov
mov
cmpsl
call
adc
inc
xor
mov
xor
out
push
add
adc
das
add
sbb
mov
cmp
sbb
jae
pop
mov
inc
out
pop
sbb
and
bound
inc
mov
lret
mov
mov
sbb
cmp
xchg
out
clc
lcall
xchg
adc
mov
dec
sbb
jmp
cmc
arpl
cmp
push
sbb
sub
andb
push
cmp
fcoms
or
add
clc
outsb
std
adc
les
mov
data16
lock
mov
js
inc
sub
lods
sub
bound
out
add
sarb
inc
inc
adc
lock
enter
mov
mov
mov
sub
lahf
fmulp
or
add
cmp
xchg
mov
jecxz
push
mov
or
xor
gs
fs
sub
lcall
and
xchg
repz
jnp
addr16
cmp
sub
cmpsl
jp
and
dec
xchg
pop
add
xchg
push
sbb
aaa
cmp
mov
mov
fs
loop
sub
rorb
jo
push
push
cmp
cli
test
cmpsl
jp
aam
push
inc
sub
pusha
call
push
cltd
rorl
dec
push
movsb
lahf
je
pop
dec
roll
xorl
mov
or
xchg
es
and
add
sub
icebp
dec
xchg
test
push
mov
daa
leave
mov
mov
xorl
mov
fnstcw
iret
mov
repz
rorb
imul
rcrl
ja
mov
ds
add
repz
mov
out
cmp
repz
pop
inc
adc
icebp
scas
pop
lret
shlb
or
adc
jg
stc
pop
stc
xor
cmp
sbb
xor
pop
add
inc
mov
out
divps
sbb
cmp
jge
out
or
out
ret
mov
orb
ficomps
in
fisubs
or
mov
filds
dec
enter
mov
inc
aad
cmp
inc
leave
dec
inc
add
add
and
pop
pushf
loop
lods
inc
push
cmp
mov
mov
cmpsb
ljmp
daa
lock
enter
sbb
pop
mov
or
adc
mov
daa
mov
ss
push
in
xor
aad
and
cltd
dec
mov
dec
out
cli
jnp
xchg
ds
xchg
add
xchg
test
jbe
inc
adc
lahf
xor
dec
inc
dec
pop
push
pop
jge
and
mov
enter
iret
inc
push
sti
xchg
andb
addr16
mov
push
push
enter
jb
scas
cmpb
in
cmp
iret
xorl
jl
sahf
popa
rorb
lcall
out
adc
fiaddl
lock
xchg
in
scas
or
icebp
outsb
fucom
call
pop
loope
pop
imul
push
ret
lock
mov
sub
or
cmp
into
leave
xchg
push
adc
xchg
pop
std
or
outsb
adc
sub
xor
push
inc
out
cmp
mov
push
xchg
sbbb
jmp
pop
sbb
pop
pushf
ret
pop
mov
bnd
mov
mov
cmc
add
add
mov
adc
rorb
xchg
inc
scas
int3
lock
dec
leave
cmpsb
fnstenv
inc
enter
das
push
adc
mov
cmp
fs
sub
leave
cmp
xor
and
mov
gs
push
and
repz
sub
dec
mov
adc
or
xchg
sbb
and
xor
mov
sbb
rol
ret
mov
jl
mov
ss
les
fildl
repnz
sub
lret
mov
das
neg
pop
push
pop
and
pop
mov
adcl
lea
dec
sub
pop
repnz
data16
inc
aaa
pmuludq
daa
adc
aas
xchg
outsb
cli
mov
add
or
sbb
scas
mov
mov
sbb
push
pop
xchg
ds
xchg
out
in
add
pop
inc
cmp
xor
or
call
out
in
dec
fcoms
or
cld
mov
xchg
pop
push
cmp
and
scas
cmp
cmpsb
repz
std
xchg
or
sti
clc
scas
cmp
repnz
push
pop
mov
lahf
cltd
jg
mov
mov
jmp
ljmp
dec
incl
xchg
pop
sbb
mov
scas
dec
adc
push
sbb
jmp
pop
enter
or
mov
ret
ss
sub
mov
arpl
cmp
movsb
xchg
lret
cwtd
push
cmp
sub
add
outsl
les
outsb
fs
jae
dec
lret
sbb
insl
mov
pop
inc
dec
rorl
arpl
sbb
mov
scas
cmpsl
xor
ret
enter
push
xchg
cmp
popa
jmp
dec
movsb
out
push
jp
daa
cwtl
sub
pop
sbb
dec
mov
mov
sub
call
cmp
push
push
jl
adc
mov
cmp
adc
negb
imul
loopne
adc
cltd
aad
xchg
ja
pop
pop
xchg
cli
in
jne
cmpsl
cmp
add
push
loopne
imul
iret
pop
xchg
nop
xchg
mov
repz
xchg
sbb
sti
cwtl
pusha
loope
lahf
mov
mov
outsl
lock
add
mov
rcrb
mov
shrl
mov
sbb
push
xchg
adc
or
and
jl
jo
out
and
cmc
stos
or
jbe
pop
sub
cli
mov
mov
pushf
cmpsb
and
fcoml
mov
popa
xor
xor
jp
iret
clc
sub
and
jmp
roll
es
sub
or
shlb
in
sub
mov
popa
cmpsb
mov
jne
stos
xor
sbb
and
xchg
xor
and
es
lret
shl
es
jnp
lret
add
adc
test
sub
out
xor
xlat
out
imul
add
sbb
pop
data16
push
pop
dec
addr16
nop
push
lock
mov
xchg
aaa
mov
inc
sahf
cmpsl
mov
ret
lcall
inc
mov
ljmp
je
adc
call
fstp
cld
jno
cmpsl
arpl
xor
ljmp
mov
adc
push
cmpl
decl
gs
xor
fdivp
mov
mov
mov
stos
lock
lcall
bnd
addl
fcmovb
add
mov
stos
mov
sub
and
aas
dec
add
cmp
test
repz
aas
push
mov
leave
nop
es
push
add
call
mov
cs
xchg
xor
pusha
fcoms
out
xchg
sbb
int3
mov
xchg
insl
sub
xchg
bound
flds
mov
jne
scas
fildll
flds
in
lret
rorb
arpl
dec
shr
xchg
test
out
shll
push
mov
add
das
mov
out
xchg
jb
neg
add
imul
and
sub
cli
dec
ret
iret
movsb
loopne
rorl
pop
dec
inc
imul
shrl
sbb
cltd
pusha
push
ja
jecxz
add
mov
mov
mov
in
pop
xcrypt-cfb
cmpsl
popa
outsl
add
push
stos
cmp
mov
jne
sbb
sbb
add
sahf
outsl
pop
scas
mov
je
idivl
lods
fldt
add
add
add
ss
jmp
pop
loope
sbb
jbe
sub
or
cmc
pop
out
int
adc
fcompl
pop
dec
mov
fcmovbe
fistpl
push
ja
push
sub
je
mov
jno
ds
sbb
mov
and
dec
and
roll
mov
int
enter
cwtl
cmpsl
aas
mov
and
and
inc
leave
call
ja
cmp
adc
mov
int3
add
scas
jns
push
lea
xchg
mov
stc
inc
fstpt
pop
pop
and
fistpll
inc
cmc
icebp
pop
jmp
fdivr
pushl
fadds
popf
add
jnp
shrl
cmp
out
lods
push
dec
inc
jae
sar
mov
push
insb
push
in
mov
int
arpl
mov
aaa
xor
add
add
inc
scas
test
or
mov
push
out
xchg
xchg
adc
and
pop
loop
xorb
pop
push
fwait
scas
xlat
out
dec
xor
xor
jnp
ss
notl
jbe
cmp
call
test
push
sub
cmp
mov
dec
mov
mov
sub
cs
jnp
jp
or
push
and
xorb
lock
leave
fwait
sbb
jnp
inc
sbb
fsubl
cmpsl
jg
pop
es
cli
xchg
fimuls
notl
fcomip
jle
mov
shll
mov
cs
mov
push
mov
f2xm1
push
callw
cmp
scas
in
mov
add
mov
cmp
je
les
xor
xchg
cmp
push
out
aad
adc
push
ds
and
testb
js
xchg
push
cmc
mov
repz
in
rorb
mov
int
stos
inc
cmp
ficoml
or
scas
mov
jmp
loop
fwait
jns
mov
jp
ja
sbb
mov
out
jae
xchg
xlat
sub
and
jb
lcall
out
push
cmc
lods
sub
and
cmpsl
mov
rolb
iret
pop
scas
stc
ds
andb
lahf
call
mov
out
test
loop
icebp
outsl
push
sub
mov
orb
in
inc
mov
jb
fwait
clc
mov
xchg
push
int
and
imul
popa
xor
jle
pop
jb
adcb
xchg
outsl
xor
sbb
add
pop
xlat
dec
xor
subb
repnz
lret
movsb
add
xor
mov
push
lahf
inc
cld
adc
in
pusha
into
fimuls
add
test
lods
mov
inc
in
mov
mul
add
mov
mov
nop
jmp
in
jmp
and
shl
pop
jne
cmp
rcrb
daa
sbb
lret
dec
pop
push
jecxz
jbe
fcomip
mov
jle
jne
mov
testb
bound
sub
jne
mov
and
ja
and
pop
popf
lock
sub
push
mov
addr16
aam
test
repnz
sub
jmp
xor
call
in
inc
adc
andl
pusha
sbb
jg
scas
or
repnz
test
sbb
ds
push
stc
push
out
xchg
mov
xlat
push
daa
xlat
xchg
sarl
jne
dec
ljmp
ret
aas
jl
aad
jle
int3
mov
sub
test
fisubl
and
inc
push
movsb
cmpsl
in
or
sub
mov
mov
add
cwtl
xchg
aam
jle
pop
insl
fcompl
loopne
ret
shrb
sbb
push
in
in
nop
out
loope
in
es
pushf
stos
arpl
sbb
jmp
inc
sarl
loop
mov
sbb
into
jb
loop
mov
xchg
add
cmc
hlt
mov
mov
mov
inc
mov
adc
add
sub
and
pop
mov
or
shll
mov
ss
add
adc
popa
cld
leave
xchg
js
popf
mov
xor
daa
inc
out
cltd
jno
out
notb
sbb
in
dec
shr
inc
sub
es
adc
and
xchg
outsb
cmpl
sub
cmp
popf
pop
jae
mov
je
in
test
xchg
mov
cmpsl
mov
inc
movsl
stc
mov
add
push
movsl
or
and
popf
test
add
mov
lea
pushf
sub
or
xchg
movsl
lret
movsl
mov
pop
or
inc
mov
cld
jp
jb
xor
inc
sbb
inc
insb
add
sbbl
and
inc
and
cmc
or
scas
xchg
dec
pop
bnd
pop
ret
cwtl
nop
aas
das
fidivrs
mov
popa
clc
mov
outsb
pop
xor
push
insb
lods
mov
fsubrl
loopne
fbld
pop
fsub
shrb
push
aam
cmp
icebp
jmp
mov
lcall
nop
push
add
push
xor
iret
and
xor
es
sbb
aam
jmp
lea
das
es
pushf
sub
adc
out
dec
outsb
leave
je
jle
push
sub
mov
xchg
and
cmpsl
dec
lcall
xchg
pop
mov
negl
cld
pop
lods
push
in
pop
xor
adc
jg
inc
pusha
imul
inc
mov
cmc
lods
out
nop
jns
int3
int
in
jge
sub
push
and
sub
jne
push
int
imul
mull
pop
jg
xchg
cwtl
push
mov
daa
lret
jmp
setno
adc
dec
ret
movsl
adc
lock
mov
mov
cmp
jns
daa
nop
popa
cmp
xor
inc
ljmp
sub
xchg
dec
push
cmpsl
clc
mov
fidivs
incb
pop
lock
popa
sbb
or
push
xchg
ret
hlt
inc
lea
repz
fisttps
dec
lock
icebp
jmp
mov
jge
data16
cmpsl
push
mov
dec
pop
fisttpll
cltd
or
std
ss
sbb
or
inc
cmp
jne
or
pop
icebp
lahf
insb
xchg
divl
bnd
cmp
jno
into
addr16
and
jmp
jp
xchg
divl
dec
dec
std
sti
pop
imul
int
and
push
or
addl
les
loope,pt
imul
cmp
push
inc
jb
adc
rcr
inc
cmpsl
jb
incl
repz
inc
sar
popl
div
pop
sbb
je
xor
jbe
add
jno
pop
mov
or
je
jno
inc
sbb
mov
sub
xor
sbb
push
mov
pop
rorl
cmpsl
test
fisttps
test
or
loope
mov
pop
mov
pushf
sub
dec
lds
lods
test
repz
sub
out
scas
add
cmp
into
inc
push
addb
popa
xor
adc
stc
jnp
in
movsl
adcl
add
hlt
jae
mov
lahf
sub
fimull
jp
and
sbb
pop
std
test
adc
jg
xor
fldcw
lahf
popl
xor
int3
xchg
aas
ljmp
aad
enter
mov
fs
pop
insl
aam
popa
cmpsb
lcall
inc
or
cmpsl
dec
inc
push
lock
lret
cwtl
xchg
insb
push
frstor
jo
repnz
sbb
fucomi
sub
push
xchg
fildll
sbb
dec
or
cmp
jb
push
push
lret
add
add
jp
hlt
shll
out
sub
loopne,pn
fidivrl
jecxz
cmpsb
fs
ret
cmc
std
aas
fidivrl
or
loopne
std
and
es
jne
aad
leave
popa
mov
inc
clc
xchg
and
jmp
mov
or
jb
jle
stos
jo
sub
stos
pop
jnp
or
fcmovbe
cmp
mov
pop
adc
inc
je
mov
or
inc
fmul
gs
dec
les
out
adc
aam
decl
push
bound
xor
sbb
sbbb
cmp
or
cmc
shll
and
mov
lret
jo
sub
mov
xor
push
test
imul
test
addb
cmp
bound
stc
pop
fnsave
je
xlat
push
loopne
pop
int3
pop
in
cmp
lret
out
xor
cmpsl
push
shlb
mov
hlt
mov
adc
dec
xchg
add
frstpm(287
cmpl
or
shrb
cmc
fisttpl
mov
pop
out
xchg
xchg
negl
test
add
pop
ret
inc
pop
in
pop
cltd
out
loope
lret
das
popa
jg
sub
push
imull
adc
sahf
cs
dec
into
outsl
pop
cs
out
mov
fbstp
pop
xor
mov
pop
inc
ret
outsl
mov
xlat
or
ret
sub
testl
andb
lods
lods
outsb
sub
or
xlat
orb
aas
cmp
inc
and
cld
enter
das
stos
ret
push
cmovne
in
mov
lods
mov
push
xchg
push
mov
xor
outsb
movsb
mov
inc
and
sahf
insb
mov
stc
mov
or
pop
subl
cli
cmp
inc
adc
int3
lcall
pusha
push
aam
outsl
data16
fisttps
cli
push
scas
insl
out
jno
bound
xor
jmp
xor
jl
dec
xchg
stos
xchg
or
movsb
stos
popf
ds
out
or
inc
loope
dec
xchg
xchg
xor
in
ds
bound
sti
inc
repz
fmuls
jns
out
jae
push
cmpsb
aad
sbb
adc
movsb
and
xor
push
push
push
dec
mov
xor
rcll
cmp
in
sbb
mov
adc
stos
ss
fwait
loopne
popa
aas
fists
lds
pushf
stc
jp
stos
mov
mov
in
sbb
sub
imul
jno
xchg
shlb
mov
cs
fadds
pop
push
popa
mov
sub
lret
xor
dec
mov
mov
xor
and
push
out
dec
jbe
jg
mov
pusha
add
inc
call
testl
loop
aam
stos
es
das
sbb
mov
xchg
sub
idivl
cli
adc
aad
inc
sahf
mul
jg
cmpsl
clc
cmpsl
inc
sbbl
jnp
cmpsb
fdivs
add
cmp
mov
mov
sub
jns
outsb
into
push
fstp
cltd
mov
aam
loopne
repnz
dec
sbb
sbb
das
scas
inc
cli
dec
test
jbe
mov
pop
jns
cmpsl
jbe
shll
inc
push
and
mov
popf
mov
xchg
xchg
lret
insb
push
push
xorb
inc
pusha
or
mov
lahf
aam
cltd
mov
in
in
cmp
ss
mov
cmp
pop
dec
aaa
fcmovbe
cmpb
mov
add
pop
lock
cmpsb
andb
outsl
test
js
frstor
lret
cmpsl
mov
pop
out
dec
lret
je
jbe
cmc
or
test
insb
hlt
xchg
sbbl
inc
mov
in
jecxz
div
movsb
push
lock
jns
mov
xor
cwtl
cmpl
xchg
stos
push
lea
sbb
pop
mov
add
aas
insb
scas
repz
mov
add
lret
pop
jo
and
ss
push
mov
jns
cmc
sbb
add
popw
cld
pusha
fbld
push
leave
mov
call
xchg
fmull
pop
loop
ds
fstl
mov
push
jbe
test
rorl
das
mov
mov
sub
sbbb
pop
or
sar
dec
or
push
popl
fs
outsl
insb
mov
dec
lcall
roll
bnd
pushf
lods
cli
xchg
inc
sub
or
mov
sahf
fwait
dec
sbb
inc
ret
lret
pop
adc
ljmp
mov
rclb
decl
cmp
cwtl
add
mov
insl
and
in
pop
adc
dec
jnp
cli
mov
cmp
stc
mov
arpl
faddl
cmpsb
cld
jl
xchg
xor
cld
stos
and
hlt
not
loopne
mov
jg
jno
inc
mov
xchg
popa
out
jmp
jnp
adc
sub
and
fadds
xchg
fiadds
and
pop
pop
and
into
xor
lcall
and
inc
sbb
and
xchg
add
mov
outsl
test
repz
and
pop
aas
in
mov
mov
dec
movb
xchg
mov
lret
jno
mov
xchg
adc
filds
test
ret
push
mov
dec
in
lret
sahf
or
xchg
insb
add
jmp
ja
and
adc
pusha
out
push
sbb
and
rcrl
jecxz
xor
rolb
push
push
adc
inc
aaa
pusha
cld
mov
or
mov
cmp
push
inc
sbb
enter
iret
and
outsb
adc
cmp
mov
push
cmp
push
add
push
fistps
pop
daa
out
shrb
andb
sub
je
xchg
adc
sbb
mov
fcompl
test
dec
stc
pop
adc
and
mov
orb
cld
mov
adc
movb
push
push
jne
sub
push
scas
jge
mov
mov
dec
out
frstor
jmp
in
jg
es
insl
test
inc
test
push
in
push
and
out
xchg
mov
push
mov
mov
mov
leave
xor
andl
nop
test
mov
or
jecxz
out
and
mov
in
sub
or
xor
arpl
xchg
jle
fdivrl
pop
and
lret
data16
add
push
cld
push
aaa
mov
int3
inc
inc
scas
les
xor
ja
inc
ret
andb
and
pop
ja
inc
clc
sbb
cmpsl
pop
xor
scas
xchg
popa
and
cltd
push
movsl
outsb
scas
xorl
out
mov
les
loopne
jo
mov
mov
dec
daa
pop
test
push
xor
lahf
sbb
aaa
inc
loope
out
xor
mov
dec
in
inc
das
insb
dec
bound
imul
ja
dec
divl
sbb
push
out
repnz
sbb
fistpll
in
add
mov
lds
clc
movl
insl
lret
push
icebp
and
mov
or
icebp
fcomps
push
push
fldt
jp
xchg
push
stos
sbb
add
pop
push
ss
sbb
into
jnp
or
fisubrl
lea
mov
addr16
loop
arpl
ss
hlt
rcrb
mov
sub
jecxz
hlt
jo
push
mov
cmpsl
out
in
out
sub
js
dec
sub
mov
lods
xchg
jle
jmp
rorl
jnp
xchg
cmp
mov
adc
inc
or
push
scas
lock
push
js
xchg
dec
jae
pop
pusha
enter
arpl
and
sub
sbb
dec
add
or
fidivrl
imul
int3
in
in
inc
adc
pop
or
mov
sub
hlt
bnd
clc
movsl
lcall
xchg
mov
filds
lods
cli
push
repnz
or
inc
nop
rorb
adc
cmc
cmpb
xor
xor
sbb
pushf
enter
dec
je
xor
jnp
out
leave
mov
pop
das
mov
push
lods
std
adc
int
mov
fistps
mov
stos
aaa
lds
jle
mov
test
mov
ret
insb
mov
aam
popf
mov
push
xlat
sub
push
and
fucom
add
insl
int3
push
cmp
xor
xor
test
and
inc
jg
das
push
subl
xchg
or
jnp
xchg
push
push
cmp
enter
repnz
jmp
push
add
inc
or
mov
mov
es
inc
cmpsl
into
fwait
call
adc
sbb
test
adc
sahf
pop
push
push
dec
jp
xchg
and
or
negb
cld
mov
movsb
add
sub
mov
or
push
adc
clc
inc
enter
mov
jns
xchg
inc
icebp
std
lock
ss
rolb
mov
xchg
movsb
sbb
lds
pop
stos
aaa
inc
test
cmp
aam
mov
mov
gs
andb
shlb
daa
cmpsl
inc
pop
dec
pop
aaa
jmp
div
movsb
mov
push
and
ljmp
loope
push
and
sub
cwtl
ficompl
loopne
mov
cltd
stc
sub
lret
jle
mov
mov
sbb
adc
sbb
outsb
cmp
sbbb
xchg
add
xchg
inc
add
mov
pushf
fldcw
and
sti
fmull
divb
mov
int
sbb
insb
pushf
icebp
jnp
xor
lahf
cwtl
pop
movsl
popa
jno
and
xor
hlt
xor
rorb
fidivl
sahf
in
add
test
movsb
movsb
jmp
fsubs
scas
and
jmp
mov
push
mov
loope
stos
aad
das
prefetchwt1
or
and
jae
sbb
sub
add
ficompl
aas
inc
addr16
cs
dec
jae
cmp
fdivrl
addl
iret
cmp
cld
negb
jg
test
jo
sarl
fcoms
aad
rorb
jb
outsl
and
test
pop
les
xchg
xchg
test
or
push
jp
roll
std
jo
dec
push
movl
dec
push
movl
scas
popf
mov
cmp
cmp
fadds
jecxz
mov
inc
in
push
test
arpl
enter
or
xor
lcall
lea
js
mov
and
pop
shl
ja
jl
mov
xchg
dec
dec
push
and
inc
rcr
xorb
stos
ss
pushl
mov
adc
loopne
xchg
pushf
mov
xor
ja
xor
or
dec
lock
jne
outsl
and
cltd
mov
push
jmp
xchg
pop
push
loopne
push
dec
lock
jae
cld
lods
mov
or
xor
sub
lock
xor
xlat
ret
call
sub
jns
or
jns
add
jns
jo
or
lcall
inc
jb
xchg
lods
pop
lods
loop
sub
outsb
push
xchg
outsl
lock
dec
inc
mov
aam
hlt
aad
lret
ficomps
dec
mov
sbb
das
jmp
lret
rorb
fcomps
popf
push
ret
pop
push
andl
push
dec
pop
cmp
inc
push
sbb
or
mov
hlt
mov
mov
icebp
testb
std
xor
imull
mov
bound
push
mov
cs
in
cld
testl
push
ljmp
sub
mov
gs
aaa
lock
addb
in
sbb
and
push
dec
repz
jno
mov
lret
cmp
repnz
adc
test
shll
jmp
xchg
clc
add
imul
sub
aas
je
jge
pop
aaa
bound
ja
fdivr
mov
mov
or
sub
shlb
and
add
jl
jbe
sub
or
loop
popf
scas
sti
cmpsl
stos
ja
push
cld
out
dec
dec
mov
dec
test
mov
dec
fxch
fisttps
dec
fcoml
mov
outsb
inc
xchg
enter
ds
fdivr
mov
or
mov
mov
aaa
pop
jecxz
rcrl
fnsetpm(287
arpl
mov
add
mov
mov
adc
dec
inc
add
pop
test
aam
inc
xchg
rcl
and
shl
cs
sbb
stc
jmp
pop
jmp
inc
mov
or
sarb
jne
xor
xor
cmp
xchg
push
iret
and
aaa
aaa
sub
xor
popa
sub
pop
pop
pop
mov
fsts
xchg
mov
and
imul
cmpsl
mov
and
ret
sbb
sub
push
clc
mov
dec
jae
addl
pushf
jne
addl
lea
xchg
pop
insl
xchg
out
jnp
jl
xchg
xchg
cmp
xchg
add
adc
and
push
testl
repnz
jbe
ss
pop
push
stos
aad
xorb
loopne
mov
arpl
lahf
repz
cwtl
addb
sbb
subl
cmc
inc
clc
add
jg
andb
or
sbb
stos
mov
sar
enter
ss
dec
adc
movsb
sahf
fsts
and
rol
stc
scas
fs
repz
fdiv
ret
lret
adcb
int
mov
in
push
idiv
push
push
fisttpll
xchg
pop
cmp
mov
inc
xor
sub
sub
inc
gs
fcomip
push
sti
sbb
fcompl
or
pushf
cld
push
movl
out
in
push
adc
dec
mov
adc
stc
sti
sti
in
dec
xchg
adc
rorl
adc
xor
fdivrs
test
sub
bnd
xchg
add
shlb
addl
mov
das
imul
pusha
xchg
cmp
pop
sbb
pop
dec
movsb
scas
lss
rolb
test
cmp
pop
aad
xchg
jg
data16
push
in
cltd
jae
cli
mov
ss
loopne
adc
sbb
sar
je
rolb
outsl
andb
sbb
push
sub
in
pop
in
lahf
xor
int
push
mov
sub
push
mov
mov
xchg
cmp
arpl
aam
sbb
xchg
cli
pop
sub
dec
xchg
into
cmc
xchg
iret
dec
mov
and
shl
lock
add
fcoml
xor
inc
cmp
jno
inc
out
mov
dec
cmp
sbb
nop
adc
rclb
out
scas
cmpsb
fdivs
iret
ds
lods
out
cmp
push
mov
jnp
inc
add
pop
push
jle
mov
push
roll
cmp
cmp
in
mov
cwtl
xor
mov
lret
pop
or
push
dec
rcrb
popf
adc
dec
repnz
xor
cmp
int3
jg
aad
jnp
into
push
mov
cmpsl
add
mov
loope
movsb
cmp
out
daa
ss
push
stos
adc
mov
aas
aaa
shr
vpcmpgtd
inc
push
or
ljmp
xchg
fcoms
jmp
outsb
aas
sub
pushf
mov
cs
cld
imul
inc
add
data16
aaa
into
ret
stos
mov
dec
inc
mov
movsl
mov
inc
iret
mov
cwtl
leave
repz
jl
sub
jecxz
repnz
pusha
out
push
adc
xchg
ds
pushf
xor
mov
adc
push
dec
cmpsl
mov
and
clc
pop
add
xchg
fldt
addr16
test
inc
mov
xchg
in
jne,pn
loop
jecxz
dec
push
cwtl
pop
mov
popf
or
popa
call
ljmp
pop
aaa
inc
push
xor
xor
dec
imul
fadds
jbe
mov
fwait
fwait
movsb
cmp
and
or
stos
lret
and
pop
popa
mov
lret
idivb
cwtl
mov
adc
jne
xor
testl
sbb
cmp
and
adcl
or
add
cmp
inc
mov
and
sub
in
push
or
popa
push
call
aam
ficoml
ret
je
and
ret
mov
sbb
pop
pop
sbb
jp
inc
shrb
push
sbb
push
add
in
leave
jmp
add
inc
jge
push
int3
jo
out
in
add
cmp
out
xor
sti
mov
mov
mov
stos
out
not
out
in
push
mov
dec
test
mov
dec
push
dec
push
mov
jl
mov
or
xchg
add
cmp
fiadds
pushf
es
fidivl
iret
add
cld
shlb
mov
xor
sub
cmp
stos
movsb
jo
push
xor
or
ficoms
jo
rcrb
test
jns
or
xchg
clc
xor
add
lds
mov
in
dec
in
push
pop
sub
and
ljmp
out
js
inc
mov
sub
popf
lds
dec
mov
stos
dec
inc
jbe
fbstp
sbb
imul
adc
aam
mov
test
inc
mov
mov
lret
pop
fs
mov
call
es
icebp
push
xchg
sub
sahf
mov
aas
jecxz
cmpsl
dec
in
push
cmp
scas
sti
nop
lcall
pop
mov
mov
loopne
inc
push
pop
mov
mov
lahf
repnz
stc
pmaddwd
shr
push
cmp
and
leave
push
call
sub
xchg
jge
and
mov
jne
mov
cmp
add
lahf
aad
add
sub
push
data16
mov
rcrl
nop
int3
loop
aad
cli
push
or
inc
mov
icebp
mov
jo
aaa
mov
add
mov
shll
jge
loope
shll
sbb
xchg
stc
xchg
dec
icebp
inc
inc
sbb
sbbl
lahf
sub
stos
xchg
int3
pop
mov
xor
cmc
pop
sbb
mov
and
ja
fcoml
xor
int
push
inc
adc
lret
dec
pusha
insb
xor
test
jp
notb
inc
adc
fnclex
nop
cmp
cmpsb
iret
push
and
jmp
push
adc
dec
xor
imul
mov
push
dec
enter
mov
dec
icebp
jl
jno
push
add
add
inc
movsl
cmp
add
and
orl
aam
push
or
pop
pop
test
negl
xor
icebp
pop
pop
or
adc
mov
xor
je
repnz
pusha
out
push
test
lahf
xor
iret
and
cltd
fldt
jle
and
and
daa
jge
rcll
mov
adcl
dec
out
out
fmull
pushf
dec
pushf
aaa
aaa
and
jg
fistl
std
inc
shl
test
inc
fldl
mov
idiv
in
out
add
pop
les
fchs
nop
and
popf
xchg
push
scas
insb
and
push
popf
xor
sbb
popl
shlb
xor
xchg
std
sub
adc
add
xchg
jns
xchg
cmpsl
push
bound
xor
rcr
sub
mov
cmc
dec
arpl
pop
test
mov
pop
stos
ss
aad
mov
jmp
dec
push
stos
movsb
outsb
pop
pop
filds
clts
movsl
lock
pop
lods
sub
test
cmc
loope
enter
mov
mov
cmp
hlt
fcmovb
mov
push
jns
push
dec
ret
fisubl
sahf
in
imul
rcrb
stos
pop
xor
dec
test
mov
or
push
test
stc
stos
std
scas
or
sub
sub
inc
or
sbb
inc
inc
adc
inc
and
in
out
jle
sub
mov
push
pop
je
loope
popl
jp
or
sub
mov
fucomi
dec
addr16
cwtl
mov
nop
adcl
mov
add
jmp
mov
movsb
psraw
popa
xor
or
push
ss
adcb
notl
fisubl
lock
mov
xchg
loope
pop
out
pop
outsl
stc
mov
out
cmp
lods
in
adc
or
pop
inc
pop
mov
inc
jns
adc
ficomps
imul
inc
bound
cmpl
data16
es
add
mov
mov
aaa
push
in
flds
lods
stc
and
jle
inc
je
int
xor
mov
in
out
pushl
out
movsb
sarb
push
ret
mov
pop
stos
rcll
or
enter
jnp
lret
xor
lds
movsb
lret
aaa
loop
enter
push
outsb
lock
jle
mov
mov
push
les
or
stos
sbbb
fists
pop
mov
push
mov
jbe
dec
xchg
out
lcall
fs
lock
push
jo
fsts
cmpb
in
mov
xor
mov
and
sub
insl
and
orb
add
imul
lret
push
repnz
int3
push
sarl
stos
mov
jbe
jl
mov
dec
push
js
notl
jecxz
mov
or
lods
lods
fildll
in
popf
xor
out
push
in
orl
dec
jae
pop
pusha
ret
pushf
fsubrs
jno
jp
sub
jb
test
dec
movsb
mov
mov
cli
pop
push
mov
ja
xor
dec
out
int3
mov
out
pushf
xor
adc
sbb
mov
dec
adc
sbbb
xor
ds
mov
inc
push
push
jecxz
sbb
test
mov
xchg
sahf
push
jb
mov
stc
pop
test
add
imul
lret
outsb
sub
arpl
sbb
add
lret
lret
lds
sbb
pop
rcrl
mov
lret
ja
mov
jb
fs
ror
enter
je
arpl
iret
negl
pop
jae
mov
dec
movsl
faddl
and
into
enter
std
push
xor
clc
mov
movl
sbb
mov
dec
jbe
cld
bswap
mov
add
pushl
popl
cli
sbb
jecxz
push
ja
xchg
cmp
mov
addr16
xor
out
lds
mov
adc
jle
aaa
push
xchg
pop
xor
in
push
cli
inc
mov
leave
add
adc
es
scas
adc
fistps
xchg
sbb
add
inc
mov
lds
mov
fldl
xchg
sub
dec
xchg
aaa
sbb
cmp
mov
iret
int3
xor
sti
ja
adc
or
dec
sbb
xchg
dec
addr16
and
aam
pusha
in
mov
inc
test
cmp
aaa
in
sbbb
je
ljmp
mov
xor
loopne
xlat
and
ss
xlat
ds
mov
lds
lret
push
bound
out
and
in
in
or
push
shll
cld
add
jo
xchg
xlat
fistl
test
sub
sti
cmp
hlt
and
rcr
jne
mov
testb
mov
jg
rol
sarl
cwtl
ds
mov
inc
mov
push
lods
enter
outsb
rcrb
fistpl
and
xchg
mov
sbb
and
imul
pop
ja
dec
int3
data16
out
movsl
and
les
adc
and
cmp
sbbl
ret
push
cmp
cltd
cmpsb
test
jne
movsl
pop
sti
orl
inc
shlb
jecxz
test
adc
cmp
dec
inc
lcall
sbb
std
dec
mov
xchg
pop
xchg
lret
pusha
mov
andl
and
jle
add
mov
dec
push
mov
xlat
gs
fidivrl
mov
movsb
or
mov
call
cmp
mov
mov
in
dec
enter
movsb
repz
xchg
xorb
test
enter
xorl
mov
adcl
aaa
cmp
frstor
ja
adc
xchg
div
test
cmpsb
scas
sar
push
or
repz
lock
mov
sbb
jp,pn
adc
dec
pop
movsl
xor
and
hlt
out
sub
jbe
sahf
jnp
ss
jae
inc
mov
push
inc
xor
out
in
gs
pop
hlt
out
add
imul
in
dec
mov
cmpsb
adcb
add
cwtl
push
dec
mov
mov
enter
shr
mov
pop
lods
into
cmpsb
mov
sub
je
nop
dec
testb
mov
push
arpl
mov
mov
push
xor
int3
popa
cmpsl
imul
leave
lret
mov
je
ret
inc
mov
jmp
stos
pop
mov
pusha
mov
mov
out
imul
cmpsb
sbb
pop
test
das
push
iret
cli
mov
and
add
jne
xchg
cmp
lahf
movsb
cmp
out
pushf
adc
mov
dec
andl
stos
xchg
popf
mov
das
sub
cld
outsl
add
sbb
pop
mov
mov
sbb
xchg
aaa
or
mov
pop
in
pop
fst
mov
mov
in
jb
push
sbb
outsl
aam
and
or
mov
pop
jge
sbb
nop
daa
jp
sub
push
lahf
fisubl
lcall
loope
mov
fisubl
ret
cmc
mov
mov
cs
pop
push
andl
stc
test
push
repz
push
aam
inc
cmp
test
pop
xor
pop
or
inc
movsb
int
les
push
cwtl
xchg
jmp
xor
push
push
push
and
lcall
or
lahf
outsl
adc
pushf
push
pop
test
in
enter
popa
stos
test
mov
jg
insb
push
dec
out
pop
dec
xchg
mov
dec
fs
adc
add
mov
sbb
leave
jbe
cmp
stos
loopne
loop
outsw
add
leave
aas
andl
and
data16
lock
push
mov
sbb
repz
xor
shll
adc
movsb
scas
pop
cmpsl
call
xor
pop
sbb
call
fs
mov
sub
add
movsl
pop
shr
xor
mov
cwtl
mov
leave
adc
push
mov
sbb
sub
inc
xchg
gs
xchg
jbe
test
jmp
pop
sbb
jge
fldt
dec
push
push
lock
pop
pop
fistps
or
and
addr16
cmp
inc
xchg
lret
fs
icebp
sbb
sub
in
add
fs
xor
in
pop
out
aam
pop
pop
jp
call
ret
inc
stos
or
pop
cltd
jb
mov
addl
inc
pop
or
cmp
sbb
push
add
lds
lods
cmc
sbb
fldl
lahf
sub
push
aad
add
mov
icebp
jg
mov
jns
sbbl
lds
mov
adc
mov
mov
cmp
xchg
sti
jbe
clc
dec
sub
xchg
add
loope
lock
mov
bound
nop
inc
ret
das
idivl
loop
mov
xor
xchg
mov
cli
and
sahf
ret
ss
mov
push
lods
insl
sub
inc
add
leave
cmc
pop
fdiv
cmp
in
cmp
jb
xchg
jo
add
mov
fdiv
or
movsb
dec
aaa
cld
fucomp
sbb
repnz
adc
call
arpl
out
adcb
cmp
mov
sub
mov
pop
push
dec
adc
pop
shrl
jno
add
or
jge
fdivrp
pop
out
push
sub
mov
jbe
scas
rcrl
aaa
sbb
xchg
insb
dec
orl
push
es
mov
xchg
cld
mov
rclb
inc
adcb
insb
aam
ds
pop
mov
and
cmpsb
test
ret
adc
push
jge
inc
push
ja
stc
or
fisttpll
inc
ret
cmc
jbe
pop
aas
jg
aaa
adcb
mov
sbb
inc
orb
pop
cmc
jnp
inc
dec
movsb
push
cmp
fwait
das
cs
or
hlt
call
ret
aas
or
xchg
cmp
clc
jle
or
sbb
out
jmp
sbb
cs
pop
lock
inc
push
mov
pxor
filds
push
insb
pop
into
xchg
lea
ljmp
cmpl
fcmovu
mov
or
and
lds
int
lret
sahf
xchg
pop
pop
bound
filds
mov
mov
jecxz
or
push
mov
hlt
push
xlat
movsl
mov
xchg
add
xor
pop
pop
dec
mov
pop
mov
std
pop
jmp
gs
or
push
xchg
cltd
cmp
fldenv
or
sahf
in
pop
dec
test
mov
leave
pushf
mov
cmpsb
repz
scas
cld
mov
out
xchg
mov
jo
xchg
inc
dec
cmpsb
subb
inc
pop
cs
outsb
jb
sub
xor
ljmp
inc
jp
and
xor
or
sarl
xchg
test
pop
ds
dec
push
add
inc
mov
fcmovu
cmp
sub
adc
sub
js
jecxz
pusha
pushf
sub
pop
inc
fstl
test
xchg
mov
in
iret
test
jp
push
mov
aam
daa
cmp
or
inc
inc
cmp
js
push
cmp
xchg
xor
inc
adc
bnd
sbb
inc
sub
and
xor
es
cmp
cmp
cmp
idivb
jmp
sbb
mov
push
pop
jl
push
in
ret
in
xor
inc
pop
sbb
pop
sub
sbb
mov
dec
int
sub
mov
push
arpl
push
add
xchg
ja
cmc
mov
test
repz
les
jecxz
movsb
cmp
mov
inc
lea
scas
dec
mov
sub
mov
pop
jno
mov
push
fs
clc
cmpsl
add
rcr
lcall
js
push
mov
jo
mov
rcrl
lods
jmp
mov
dec
lods
mov
xchg
mov
lret
add
ja
fdivrl
aam
jge
fs
out
mov
iret
cmpsb
mov
popa
inc
daa
rcll
sbb
mov
stc
cli
shrb
scas
rcrl
dec
push
or
xor
xor
mov
mull
mov
nop
jp
add
adc
adc
loopne
xchg
sub
popf
cltd
jns
arpl
test
mov
rcll
sbb
inc
leave
lahf
mov
or
push
ljmp
mov
les
xchg
xchg
sbb
xchg
and
adc
sbb
inc
testb
shlb
in
dec
test
sub
push
jbe
adc
arpl
push
sahf
cmp
cmp
xchg
jmp
jnp
das
push
dec
out
sbb
jl
push
aaa
jge
nop
lods
mov
outsb
jge
jnp
xchg
call
xor
fwait
dec
cmp
ds
imul
hlt
pop
push
test
cmp
lret
fwait
stos
cli
test
mov
and
mov
test
fldl
push
push
or
out
mov
sahf
daa
out
ret
xor
xchg
or
push
sti
jp
clc
testb
mov
mov
add
mov
popf
xchg
inc
sub
mov
and
int3
enter
aas
nop
imul
jb
pop
arpl
lret
stos
inc
jae
sub
xchg
out
push
into
mov
sub
aad
movsl
iret
js
sub
dec
or
and
lods
lcall
inc
fs
in
sbbb
xchg
sub
hlt
jge
iret
ds
popw
dec
mov
or
push
lock
out
push
gs
popf
imul
fldcw
lds
jg
std
inc
int3
enter
pop
and
imul
sbb
push
nop
icebp
adc
or
fcoml
cmp
mov
popf
stc
stos
adc
imul
adc
popa
mov
mov
enter
xorb
adc
xor
push
out
jne
sbb
das
ficompl
leave
ljmp
add
add
je
out
stos
add
dec
xchg
rcll
mov
xchg
jg
scas
jno
inc
push
pop
xor
jecxz
std
dec
fnstenv
and
js
mov
icebp
aam
mov
leave
push
popf
or
movsl
dec
shl
cld
lret
pop
cmp
aad
push
mov
jb
lahf
jl
ds
rorb
aam
cmc
xor
rcrb
lret
arpl
cmp
fisttpl
jle
fsubr
iret
sub
inc
dec
xlat
sbb
and
sbb
lret
fwait
jle
mov
ss
dec
fcoml
jb
inc
or
push
mov
pop
shlb
in
sub
pop
push
jle
xlat
aad
shrl
mov
rclb
bound
lea
sub
pusha
bswap
subb
pop
inc
enter
mov
dec
cltd
sub
mov
mov
cmpsl
and
jne
push
cmpsb
mov
fcmovnbe
stos
pop
push
mov
iret
pop
add
sub
ja
jno
push
adc
in
sbb
in
imul
xor
pop
pop
pop
je
rorl
xchg
mov
pop
push
fcmovnbe
jg
orl
stc
mov
xchg
leave
lods
shll
or
jge
xchg
adc
lret
insl
jp
mov
and
pop
xchg
imul
stc
cmp
mov
or
out
dec
stos
daa
mov
mov
cmp
adc
pop
add
ret
aad
mov
adc
das
rcl
rol
ja,pn
or
in
insl
mov
push
inc
push
ja
push
js
add
ficomps
idivl
scas
cmp
insl
fnstsw
ffreep
lcall
jb
movsb
gs
cmp
xchg
push
lret
fidivrl
daa
pop
sarb
xor
add
div
faddl
inc
cmc
insb
mov
xor
pushf
sub
adc
push
or
jecxz
cmp
sbb
xor
int
jne
imul
adc
xor
std
cmp
jecxz
cmpb
or
addb
or
mov
pop
add
mov
leave
inc
jecxz
and
shl
push
add
xchg
fisttpl
adc
or
add
mov
dec
lret
inc
mov
and
pushf
push
jnp
and
lock
lret
xchg
xchg
mov
clc
jle
dec
es
cmp
or
push
sbb
mov
or
daa
clc
mov
cmp
stos
jo
xor
mov
push
mov
cmp
frstor
jmp
lock
loop
fidivrs
fisubs
cmp
mov
mov
sbb
xchg
ror
mov
daa
lock
in
pop
xor
jecxz
mov
sahf
adc
lea
and
sub
rcrb
and
inc
or
add
xchg
jo
aaa
mov
cmpsl
addl
imul
adc
test
adc
cli
fsubrp
leave
lock
mov
push
gs
mov
icebp
pop
fnstsw
jle
cs
jb
ja
or
insb
inc
push
jns
xchg
cmp
xchg
les
outsb
mov
sub
andl
ret
pop
mov
fsubrp
mov
mov
cmp
push
pop
mov
into
xchg
movsb
insb
neg
mov
mov
xor
mov
xchg
iret
push
addr16
xchg
sub
popa
and
aaa
add
cmp
pop
sahf
sbb
xchg
repz
inc
lock
pop
and
xor
xchg
xor
mov
stc
loope
int
loop
out
insb
jae
enter
lea
arpl
inc
jle,pt
sti
xor
fstpl
mov
jne
call
xchg
adc
mov
pop
popf
aaa
jecxz
dec
jmp
lret
jg
mov
movsb
jl
subl
mov
ret
xchg
add
push
adc
or
cmpl
add
cmp
fisubl
xchg
fs
pop
out
fs
push
mov
jp
and
movsl
pop
jge
sbb
and
repnz
jb
test
popf
cmp
push
jmp
loopne
scas
test
add
cltd
fsubrs
add
pushf
jns
add
jp
inc
test
push
push
mov
sub
insl
add
imul
push
add
mov
filds
xchg
pop
mov
fdivs
pop
orb
pop
popa
les
lret
or
sub
jo
cmp
adc
repz
pop
fs
loopne
push
out
and
scas
push
scas
out
js
dec
xchg
push
cwtl
cmp
jmp
sbb
frstor
or
pop
idivl
andb
lds
push
sbb
sub
lcall
jg
push
in
and
cmp
rorb
push
add
shll
pop
push
xchg
xlat
or
jp
xchg
dec
int
lahf
dec
lock
add
cmpl
arpl
ret
shll
and
xor
and
and
dec
xchg
cmpsb
sub
adc
inc
or
es
fstps
arpl
movsb
adc
rclb
xlat
and
stos
xchg
cmp
mov
and
dec
scas
dec
push
adc
arpl
jo
sbb
cltd
inc
cmp
push
lahf
fisttpl
xlat
or
inc
sbb
fsubr
cmpsl
movsl
cmp
jo
sub
imull
xor
fs
testb
adc
imul
or
push
repz
sub
mov
fcmovbe
call
orb
jb
inc
pop
movsl
aam
xchg
mov
mov
dec
sub
stos
or
lahf
out
scas
call
pop
jmp
pop
lock
testb
xchg
dec
in
xlat
das
lods
mov
pop
rolb
nop
data16
or
in
gs
iret
inc
jbe
lods
mov
pop
push
outsl
sarb
icebp
sub
jl
leave
fcmovnb
das
pop
cmp
int3
cmc
test
xor
and
dec
mov
push
jno
orb
js
mov
cmpsb
pusha
push
imul
pop
add
pop
pop
jg
jns
xchg
xor
cmp
stc
mov
pop
push
cmp
ret
jle
cli
xor
pop
in
or
mov
lds
rorl
add
pop
out
enter
jle
xor
push
push
nop
scas
mov
ret
sar
pop
inc
xchg
pop
clc
lret
stc
jne
rol
and
loopne
clc
mov
mov
and
push
lea
je
push
cmp
adc
sahf
jo
enter
sub
or
inc
lcall
lret
pushl
ja
xor
jnp
mov
push
sub
fstps
and
rorl
xchg
xchg
stos
movsb
sbb
fdivs
scas
lds
test
mov
dec
shll
stos
call
mov
push
xchg
jns
mov
nop
and
mov
mov
dec
lea
popa
ds
hlt
xor
out
fldl
in
sbb
jge
cmpsb
ret
rolb
lds
popa
ret
xor
mov
add
sub
lret
xor
fadd
pop
out
sub
out
fisttps
sti
jne
sti
lcall
jbe
mov
sbb
nop
daa
mov
jmp
and
xchg
push
out
incl
push
insl
in
lret
ret
movl
mov
inc
xchg
push
adc
sub
mov
sub
mov
cmpsb
push
add
adc
lahf
out
mov
cmpsl
into
jbe
or
outsb
dec
adc
mov
mov
mov
fdiv
pop
mov
fsubrl
lret
jbe
pop
aas
mov
sbb
push
fdivl
push
in
jecxz
adc
stos
popa
bound
cwtl
jno
test
ret
xor
dec
push
test
je
fidivs
or
xlat
xchg
jecxz
fisubrs
jmp
mov
jnp
cmp
xor
and
lock
scas
jle
shr
iret
cmpsb
mov
adc
push
mov
sarl
push
out
fadds
gs
int3
adc
pushf
cmc
inc
jge
xor
pushf
or
bound
pop
sahf
icebp
cs
pop
dec
imul
pushf
pop
pop
pop
lods
jmp
icebp
dec
xchg
mov
fiadds
and
or
lcall
pop
in
cli
arpl
outsl
xchg
enter
push
cs
lock
add
sub
mov
enter
push
and
xor
cltd
nop
das
test
leave
insl
decb
fsubrs
mov
add
or
movsl
cld
cmc
inc
insb
dec
sti
das
lods
jle
inc
ja
mov
andl
daa
dec
lods
add
mov
pop
adc
outsl
imul
daa
and
bnd
dec
add
jo
cmp
leave
std
dec
sbb
cmp
call
insb
mov
sahf
loope
test
movsb
lods
jb
push
iret
es
and
gs
subl
negb
scas
xor
xchg
pop
popf
mov
lods
insl
pop
stos
push
jo
push
lea
ljmp
mov
mov
xchg
mov
or
inc
or
jo
xchg
pop
mov
sbb
cmovno
aam
movsb
dec
lret
mov
aas
scas
ret
sar
and
jo
mov
lret
lret
js
lock
int3
push
outsb
add
jl
sub
mov
adc
ja
sbb
mov
mov
ret
decb
mov
lcall
ss
cmp
sub
shr
sbbl
jo
mov
adc
sbb
test
loopne
mov
sbb
ret
dec
nop
stos
cmp
fmuls
and
adc
sbb
scas
lods
shrl
ds
ds
dec
cmp
mov
mov
sti
mov
lret
xor
pop
hlt
adc
iret
sub
jb
shrb
or
push
jecxz
xchg
rorl
jg
fdivrl
mov
subb
lldt
jae
cmp
inc
add
push
ret
cld
pop
or
xchg
iret
adc
ficoml
mov
insb
mov
sti
xor
mov
push
repnz
andl
imulb
push
js
xchg
sbb
and
addl
xchg
xor
in
xchg
mov
fdivr
jb
ret
fistpl
cmpsl
rcll
shl
jl
ja
jg
mov
je
pop
imul
or
jle
mov
mov
push
lret
aam
inc
push
sbb
jae
dec
loopne
jns
into
jns
aad
dec
adc
pushf
add
loope
jecxz
pop
fidivs
xchg
pop
ja
in
mov
inc
movsb
lods
bound
xchg
pop
mov
lahf
ficompl
jb
stc
add
xor
jb
ret
mov
jae
nop
sbb
lret
lret
je
sub
xchg
je
dec
mov
push
fcomp
int
xor
jns
cld
test
movsl
test
faddl
inc
xchg
sarl
jg
sahf
test
test
push
lock
pop
xor
rclb
lcall
loope
cmp
scas
popa
push
inc
andb
xlat
and
sub
loope
xchg
bswap
push
mov
jns
xchg
fisttpll
hlt
mov
add
cli
cmpsl
xorl
stos
pop
cmp
jecxz
mov
mov
sbb
test
xor
and
xchg
sbb
jmp
sbb
push
addr16
xor
jle
std
out
jg
icebp
push
add
sahf
xlat
arpl
pop
out
dec
ja
je
adc
iret
test
pop
xchg
lods
cmp
fmull
xchg
stos
sbb
stos
imul
mov
cltd
leave
scas
inc
jne
sbb
cwtl
imul
cmpsl
je
lea
ret
gs
ret
cmp
mov
pop
push
pop
xchg
pushf
cmpsl
add
pop
or
cmp
add
dec
inc
pusha
imulb
out
or
xor
jmp
lea
xor
arpl
icebp
inc
clc
clc
js
enter
scas
fisubrl
jmp
jo
bound
aam
mov
sub
out
in
insl
subb
jb
and
push
in
mov
mov
or
push
xor
xor
dec
fadd
sbb
into
sar
mov
xorl
xchg
iret
jl
or
shrl
bound
mov
cmpsb
add
mov
push
dec
sub
push
sbb
pushf
cltd
cmp
jo
fsubrs
gs
test
xchg
jne
into
aam
in
ds
push
push
jle
pusha
and
bound
jnp
cltd
jle
inc
pop
or
inc
push
xor
or
loop
dec
lea
imul
lods
call
aam
cltd
jne
sub
and
sahf
loopne
inc
jns
test
push
xchg
sti
jbe
xor
cmp
pop
sub
jnp
imul
jp
out
lods
lea
decb
repnz
or
andl
insb
sbb
call
out
add
outsl
adc
pop
mov
mov
ja
data16
push
cwtl
outsb
les
push
add
cmc
xor
dec
imulb
subb
lahf
mov
fs
adc
sub
mov
sub
sbb
loope
jbe
es
std
and
arpl
pop
je
add
pop
mov
clc
fnstenv
dec
loope
stos
lcall
xlat
or
push
js
je
and
iret
push
sub
jae
sub
out
repz
out
sbb
and
sbb
inc
lods
cmc
push
sub
insl
inc
push
push
rcll
sbbl
sub
inc
add
add
or
sub
test
cmc
jae
cmp
fiadds
xchg
xlat
les
std
jbe
add
mov
jae
ret
ds
and
in
push
insl
int3
int
dec
out
or
shlb
jbe
sti
sub
mov
adc
inc
mov
mov
push
jo
subb
test
jle
pop
iret
nop
in
or
in
inc
dec
into
xor
clc
std
lock
mov
call
or
out
xchg
insl
je
adc
push
insb
mov
mov
push
out
cmc
scas
jnp
ja
pop
add
sbb
dec
mov
cli
mov
out
int
filds
test
daa
dec
jecxz
leave
cmp
add
jae
insb
push
packssdw
xchg
ja
shrl
mov
dec
hlt
mov
cmp
xor
nop
mov
pop
xor
test
mov
xchg
mov
and
mov
adc
cmp
fsts
jmp
inc
xor
arpl
adc
inc
fcompl
lret
stos
pop
pop
nop
ret
mov
inc
and
lods
dec
les
xor
outsb
mov
push
lahf
cwtl
sbb
mov
push
xor
mov
movsb
mov
cmc
outsl
aaa
outsb
ret
inc
lods
pop
ss
in
adc
inc
ret
inc
ja
jne
rcl
xchg
xor
daa
mov
cmpsb
xlat
mov
fisttps
mov
shlb
rcrb
pushf
dec
popa
sub
adc
mov
ss
mov
jnp
aad
or
aam
cmp
mov
enter
int3
jmp
icebp
js
inc
xchg
push
imul
movl
xchg
loope
dec
fs
dec
gs
fs
xor
sbb
testl
jp
pop
add
rcr
cld
cs
nop
xacquire
dec
pop
out
xchg
mov
popa
inc
ja
cmp
or
nop
test
dec
xchg
jp
jecxz
jl
in
es
call
push
or
mov
or
jb
movsb
xchg
or
rorb
jecxz
sbb
outsb
mov
jge
mov
xor
sarl
pop
push
cmp
scas
push
out
movsb
mov
and
adc
cmpsb
pushf
mov
aad
in
xchg
sbb
mov
dec
add
or
push
ja
and
lds
xchg
push
lcall
movsl
push
adc
dec
in
adc
push
xor
bound
dec
jg
pop
push
sar
in
loopne
pop
push
insl
aam
mov
dec
pop
test
mov
jle
imul
sbbb
stos
mov
add
fsubrs
rolb
jo
scas
aaa
outsb
xchg
cmc
iret
mov
adc
pop
insb
fsts
pop
xchg
call
cmp
inc
jo
popl
pusha
inc
outsl
ja
push
insb
lret
in
and
gs
dec
cmc
es
jmp
popa
add
cltd
add
mov
popa
ss
mov
les
or
dec
out
push
or
pop
xchg
lods
add
sub
xor
int3
mov
xor
popa
mov
cmp
pop
ljmp
lds
sub
pusha
ret
dec
inc
mov
mov
out
pop
das
sahf
loop
test
fs
jp
lds
punpckhbw
mov
cmpsb
and
shlb
xchg
int
cmpsb
inc
push
xchg
shll
ljmp
hlt
xor
pop
shrl
inc
xorb
outsl
sbb
pop
in
inc
js
popa
fs
paddusb
cmp
ss
jo
jne
lcall
jmp
sub
je
push
in
ret
mov
mov
xor
mov
and
ret
push
xchg
fisttpl
fcoms
push
mov
push
iret
cld
push
sbb
mov
das
negl
out
mov
pop
mov
adc
divl
push
dec
aad
shlb
lret
fs
sbb
and
cmc
imulb
mov
adc
fbld
inc
mov
add
loope
es
mov
pop
les
stos
movsb
xor
mov
mov
test
inc
pushf
jo
push
pusha
inc
cld
je
testb
inc
test
cmp
movsb
push
or
inc
push
nop
pop
in
jns
mov
cmc
mov
sti
dec
sahf
xchg
sarl
dec
add
pop
pusha
nop
dec
testb
neg
test
jns
cmpsb
call
jb
mov
cmpsb
pushf
lods
pop
pop
dec
in
inc
xor
dec
xchg
daa
cmpsb
push
xor
push
xchg
dec
es
sbb
push
or
sahf
push
xchg
ja
test
call
stos
shr
sub
xor
jns
xchg
push
je
pusha
push
stc
push
shll
ds
insb
in
xchg
and
in
andl
out
and
sbb
adc
cli
jp
ss
and
mov
and
lcall
divps
jb
fisttps
sub
jb
imul
inc
mov
or
jmp
cltd
and
push
clc
jbe
xor
mov
inc
sbb
in
in
mov
dec
cmc
flds
sahf
loop
icebp
cmp
cmp
int3
jp
cmpsb
outsl
or
lret
mov
mov
push
aad
add
cli
add
cmc
add
cld
jmp
fidivrl
jns
pop
jmp
rcrl
divl
notb
xchg
les
jno
dec
add
dec
scas
jecxz
data16
and
jae
out
fwait
push
dec
popf
aam
lods
cli
pop
push
popf
pop
cmc
adc
mov
inc
sub
movsl
xchg
stos
stos
jge
test
mov
out
cmp
mov
cs
pop
ret
mov
mov
test
jne
inc
popf
inc
aad
dec
sahf
mov
dec
mov
dec
cwtl
les
xchg
loope
int3
jg
outsb
in
lcall
add
lret
repz
cmp
aaa
pop
shlb
outsl
dec
pushf
mov
or
mov
mov
test
xchg
shlb
cltd
xor
clc
pusha
leave
cs
sbb
or
into
inc
hlt
push
inc
cmp
jbe
icebp
shlb
xchg
cltd
hlt
xchg
add
loope
adc
push
xlat
xlat
and
or
push
dec
push
adc
iret
test
adc
xchg
mov
test
mov
sub
dec
mov
mov
ret
dec
cld
in
sbb
mov
mov
repnz
push
push
cmp
dec
pop
and
clc
add
into
mov
out
movsl
scas
cmpsl
push
mov
dec
xor
pop
mov
call
cld
or
xchg
xchg
les
mov
mov
mov
lock
sti
ljmp
xlat
lret
add
push
lods
incb
or
mov
test
fdiv
push
mov
push
or
dec
enter
stos
dec
jge
push
inc
pop
popf
pop
jmp
jbe
fisubs
jbe
and
xor
pusha
mov
lods
out
jns
hlt
push
popa
add
shl
xchg
into
pop
mov
xchg
jne
cs
imulb
divl
aaa
xchg
xor
or
adc
pop
cmp
add
ret
scas
lea
xor
fadd
rolb
sbb
pop
lahf
fists
fadd
xor
jae
cmp
add
push
inc
arpl
inc
lea
mov
cmp
mov
and
cmp
loop
xchg
xchg
rcr
jg
pushf
mov
pop
lret
pop
inc
in
sti
xchg
stos
mov
mov
cs
out
pop
jecxz
dec
lret
and
add
and
jo
xor
or
xor
das
hlt
inc
popa
inc
lahf
rcrl
test
dec
jns
lret
cmc
outsl
mov
pushf
je
jb
mov
xor
mov
cmc
xchg
mov
add
nop
insb
add
xchg
jae
inc
mov
lods
xor
or
cmp
addr16
inc
ror
push
into
push
mov
adc
push
or
mov
adc
inc
nop
dec
inc
repz
dec
loopne
pop
cld
mov
movsb
dec
adc
adc
lea
loop
cmp
jbe
mov
pusha
push
xchg
and
std
out
cmpl
cmp
iret
roll
mov
inc
push
push
dec
fyl2x
pop
icebp
mov
dec
and
mov
aas
xor
ljmp
loop
push
mov
add
pause
sbb
mov
ret
pusha
shll
mov
adc
aam
pop
insb
xor
mov
push
mov
pusha
in
and
in
repz
cmp
add
in
mov
dec
stos
xchg
arpl
and
adc
aad
out
out
sub
decb
dec
or
rcrl
inc
enter
xlat
fs
xchg
adc
das
sub
push
scas
imul
sub
xor
mov
lret
enter
mov
sahf
xchg
ds
fwait
rclb
cmpsb
lret
mov
push
jl
lret
fwait
pop
mov
jne,pt
and
fidivrs
xor
cmpb
and
cli
or
in
imul
or
push
ljmp
adc
jbe
pop
mov
shll
jg
cmp
bound
and
mov
inc
outsl
or
or
pushf
or
mov
imul
rol
jle
mov
int3
mov
mov
jae
insb
addr16
les
cltd
nop
hlt
mov
dec
iret
sbb
call
cld
sbb
inc
in
enter
xchg
inc
xchg
inc
loopne
cld
or
loope
jge
push
sbb
cli
arpl
pop
cmp
mov
mov
mov
push
cmpsl
inc
lahf
lods
jle
pop
sub
xor
rcl
imul
inc
fdivl
mov
pop
call
arpl
lods
jecxz
lea
icebp
shll
mov
sbb
mov
xor
xor
sbb
jl
popa
mov
mov
shll
and
into
lahf
nop
das
leave
out
xor
inc
jle
add
jo
in
insb
test
call
add
inc
pop
int
clc
insl
roll
pop
jo
loop
mov
pop
sub
sbb
sbb
mov
fiadds
fildll
inc
sarb
mov
and
cli
ja
lahf
sub
inc
or
mov
ret
mov
shrb
xchg
cmp
push
sbb
mov
addr16
sti
and
mov
stos
adc
bound
xor
xchg
clc
sbb
pop
push
call
in
fcmovnu
rolb
clc
stos
dec
leave
and
imul
shl
push
rcrb
fildll
mov
shlb
add
je
mov
mov
lahf
adc
jmp
repz
mov
mov
jle
lods
negb
jp
sti
daa
jo
rcrl
lret
ss
mov
adc
cmpsb
sbb
jo
xchg
add
cmp
xlat
inc
popa
dec
dec
dec
pop
ss
ret
sbbb
sbb
push
add
adc
gs
loopne
xchg
push
cli
aas
adc
sti
or
mov
xchg
mov
enter
les
inc
push
mov
mov
xchg
movsl
loop
jne
pop
dec
adcl
mov
loope
pusha
test
jns
adc
aas
psubsb
sti
daa
lods
stos
movsl
mov
mov
mov
aas
rolb
es
jnp
mov
lret
in
mov
in
shrl
xor
enter
jns
mov
test
xorl
stc
cmpsl
xchg
xchg
dec
es
das
mov
add
mov
xchg
dec
incb
mov
push
pop
lock
and
mov
jmp
and
jb
jmp
add
iret
insb
dec
stc
in
sbb
push
push
jne
fstpl
jmp
xor
dec
roll
outsb
addb
stc
outsl
js
and
mov
sbb
scas
lods
lcall
scas
mov
fwait
add
fs
xchg
imull
sarb
movsl
xor
imul
cltd
lcall
jo
in
jnp
out
cwtl
outsb
decl
popf
adc
test
or
pop
dec
cli
js
inc
pop
ret
pop
nop
fdivrs
or
jp
jg
cmp
xchg
dec
daa
ss
cmp
mov
jno
hlt
je
or
mov
add
repz
mov
mov
jge
and
pop
xadd
xor
dec
xchg
adc
lods
push
dec
push
xchg
cmpsl
pop
or
mov
ss
repz
leave
nop
pop
decb
cs
sti
subb
addr16
sti
adcb
dec
mov
dec
iret
cmpsl
lahf
inc
out
push
inc
scas
or
xchg
mov
inc
pop
into
pop
idivb
xchg
pop
and
in
push
xchg
inc
ret
jb
data16
idivb
cmpsb
mov
das
inc
in
lret
shrb
xchg
jno
push
inc
repnz
mull
repnz
jae
jl
cli
mov
shl
xor
popa
daa
or
cmp
cltd
inc
mov
mov
fstl
mov
jmp
mov
xor
dec
push
insl
out
xchg
mov
js
out
ror
mov
sahf
cmc
jo
sbb
mov
shrb
inc
rorl
loopne
imulb
movsl
pop
sahf
sbbl
adc
std
jns
hlt
stos
xorb
push
mov
xchg
fbld
cwtl
mov
adc
fldcw
mov
xchg
lods
in
imul
push
sbb
and
xchg
lahf
lret
and
pop
cmc
addr16
and
or
out
ljmp
jns
test
out
lret
test
jecxz
dec
icebp
xchg
mov
mov
or
xor
inc
mov
into
sbb
les
push
pop
mov
cmpsb
lret
add
or
add
pop
cmp
outsb
jns
inc
jb
aaa
xchg
and
inc
testb
gs
repz
pop
pop
insb
dec
push
in
mov
cwtl
mov
cmp
test
inc
mov
movsl
sub
cmp
jge
add
movsb
icebp
out
repnz
movsb
adc
jns
mov
jae
loopne
pop
add
jmp
xchg
aas
cmp
mov
or
fdivp
popa
leave
je
add
adc
ljmp
mov
sub
adc
out
int3
add
pop
xchg
rolb
xor
ljmp
mov
adc
aad
ljmp
fistl
and
inc
dec
ret
add
lcall
jne
in
dec
lods
inc
push
cmpb
aaa
subl
xchg
xor
aaa
imul
sub
pop
jge
pop
lock
das
in
add
loop
jno
mov
add
mov
insl
xor
cld
mov
or
mov
pop
dec
imul
outsb
mov
ds
gs
xchg
cmp
inc
movb
add
mov
mov
dec
mov
adc
imul
shrb
in
in
and
adc
out
xchg
fdivl
xor
push
xchg
jo
push
aam
xchg
push
fmuls
xchg
scas
or
pop
stos
aad
and
aaa
nop
das
and
dec
or
or
lods
push
hlt
fs
push
fimull
push
sub
and
pusha
jmp
xchg
or
jne
mov
out
mov
enter
mov
sbb
shrl
repnz
fstl
ljmp
cmpsb
dec
shll
add
mov
adc
push
mov
pop
cli
push
and
test
movsl
mov
in
push
arpl
and
add
pop
xlat
cmpl
mov
js
test
push
mov
in
mov
xchg
fmull
pop
sub
pop
cmpsl
pop
dec
adc
jmp
mov
mov
cli
aas
aas
call
or
sbb
push
mov
addb
sub
sbb
xor
popf
stc
mov
outsb
jge
out
pop
dec
xlat
add
mov
testb
mov
inc
cmp
sub
cmp
xor
xor
arpl
mov
push
shrl
jge
std
sti
ja
lea
cs
sub
cmpsl
adc
push
inc
lds
gs
cmc
sbb
clc
add
cmp
xchg
je
adc
xlat
mov
jnp
add
in
inc
pop
push
inc
add
sbbb
rep
adc
std
in
pop
xchg
xchg
out
jae
mov
pop
and
sbb
and
enter
mov
add
push
data16
mov
out
lods
mov
inc
pop
je
ljmp
and
ds
jp
sub
xchg
jecxz
out
and
pop
add
mov
add
lcall
inc
mov
mov
and
sub
push
rclb
out
or
mov
fisubrl
inc
and
ficomps
push
aad
and
mov
call
inc
push
hlt
xchg
cmp
xor
aam
int3
add
dec
dec
pushf
nop
xor
in
push
insb
push
ret
pop
pause
or
fnstsw
fwait
stos
jns
pop
jge
ret
adc
enter
jg
loope
or
ds
rorb
stos
cmp
inc
mov
xor
pop
dec
lock
cwtl
in
popf
mov
int
jns
clc
sbb
mov
ja
and
imul
mov
std
inc
dec
mov
push
stos
push
out
mov
int
sbb
sbb
push
iret
in
aad
int
push
leave
sbb
mov
pop
mov
jle
mov
data16
and
mov
mov
dec
mov
jns
add
push
jecxz
xor
js
mov
push
xor
andb
insl
add
stos
loopne
sbb
xchg
lods
sbb
sub
fildll
jae
mov
sbb
jo
stos
cmp
lahf
sar
je
sbb
sahf
inc
mov
adc
cmp
hlt
lret
xchg
xchg
cld
jne
cmp
mov
pop
outsb
push
ret
cmp
outsb
dec
jo
add
jge
or
dec
movsl
lea
nop
mov
push
test
push
cmp
jl
out
out
mov
call
mov
icebp
jp
sar
sbb
mov
fwait
add
ss
pushf
push
out
dec
mov
rcrl
call
dec
subb
pop
xchg
cmp
rorl
mov
lcall
jo
loope
push
xor
fimuls
inc
sub
fcmove
testb
dec
cld
imul
iret
ret
dec
cmp
or
enter
movsb
in
xor
jne
leave
inc
inc
test
mov
inc
sub
dec
pushf
sub
dec
lret
aas
xchg
push
into
sub
jne
or
mov
fdiv
inc
mov
lret
jnp
loop
sub
int3
fwait
in
adcb
ret
xchg
sti
lret
fwait
cmpsl
mov
scas
xchg
fstl
fsubrs
mov
lods
adc
or
jo
scas
inc
cmc
lea
and
xchg
sbb
cmpsl
dec
mov
mov
sub
mov
inc
out
in
mov
leave
sbb
mov
lret
shr
or
daa
xorl
lea
ret
dec
in
out
out
dec
mov
bound
jno
push
orl
sbb
dec
add
fadd
iret
sub
shrb
stos
xchg
pop
jl
icebp
inc
cltd
imull
mov
imul
jo
insl
cmp
lds
mov
iret
xchg
sub
out
adc
xchg
pop
out
lock
gs
xor
test
mov
mov
jae
pop
cmp
pop
fwait
popf
or
lods
jns
mov
ds
in
add
sbb
xor
pop
add
sub
cwtl
pop
data16
neg
or
movsb
imul
dec
ja
into
ret
jge
aam
aam
adcb
mov
mov
pop
outsb
jecxz
jbe
out
and
insl
mov
jp
fldt
lods
std
ss
inc
dec
fbld
popf
cltd
dec
jge
hlt
xor
xchg
inc
test
fs
popa
cmp
or
sub
xor
push
adc
inc
pop
adc
in
cwtl
jl
stos
in
test
jae
dec
sbb
sbb
sbb
cmp
fwait
fwait
mov
rclb
sti
sub
mov
stos
cld
xor
subb
shlb
das
cwtl
xor
and
ret
pop
pop
leave
pop
jmp
ret
jp
cmp
pop
jns
test
lret
add
fidivrs
xchg
in
mov
jae
pop
mov
mov
popf
mov
sub
filds
inc
ds
xlat
push
adc
scas
movsb
loop
test
mov
jnp
inc
jecxz
push
sub
add
lahf
add
add
and
xor
push
cs
xchg
dec
and
cmp
xchg
cmp
mov
movb
sub
pop
mov
clc
cld
fbstp
call
or
cmpsb
es
fldcw
repz
push
stos
xlat
push
xchg
or
pop
sahf
pop
popa
mov
cmp
scas
enter
dec
imul
loop
cmpsb
imull
mov
add
pop
inc
leave
movsb
jp
sub
ret
ds
push
push
sub
or
notb
mov
mov
sbb
rorl
into
and
jbe
test
incb
cmp
dec
sbb
clc
in
mov
aad
or
scas
subb
xchg
addl
fdivs
cmpsb
xor
nop
mov
fists
daa
aaa
sahf
stos
sahf
mov
fstpt
sbb
push
sbb
mov
not
xchg
out
scas
sub
cmc
sbb
movsl
push
out
dec
sub
ss
cmp
pop
mov
adc
jl
mov
adc
stc
jge
lods
aaa
jo
cmp
add
mov
inc
xor
fwait
loopne
inc
js
inc
test
jp
lea
paddq
xchg
adc
xchg
repz
imul
adc
jnp
rcrl
mov
add
insb
imull
cli
jl
pop
add
push
pop
pop
push
das
clc
insl
push
inc
adc
mov
pop
xchg
dec
repnz
xor
pusha
mov
adc
xor
add
and
cmp
jg
push
push
loop
and
push
pop
lods
ss
jge
pushf
cmp
xchg
je
lock
or
popf
jae
decb
jmp
jbe
pop
or
push
mov
outsb
mov
and
insb
sub
push
mov
popf
dec
xchg
xor
scas
jmp
popa
mov
lods
sub
push
jge
sub
lods
repz
loope
lock
push
xchg
js
xchg
in
fdivs
push
xchg
lret
mov
dec
mov
test
test
jnp
shl
lock
je
mov
sbb
cld
adc
jmp
jno
and
sahf
pop
insb
jge
xchg
dec
outsb
stos
jp
insl
jle
or
mov
test
pop
jae
fisttpl
mov
call
inc
inc
pop
xor
mov
movntq
test
in
faddl
icebp
leave
dec
orb
ficomps
lock
and
stc
mov
or
cmc
xor
dec
xor
pop
jmp
add
and
popf
lock
xor
push
mov
in
cli
daa
push
fimull
dec
mov
dec
rorl
sbb
push
les
mov
adc
or
mov
cld
cmp
mov
sub
pop
stos
and
ss
jne
lods
aas
hlt
push
and
and
push
pusha
lcall
mov
call
pop
xchg
mov
fisubl
arpl
mov
lock
xchg
sbb
push
jbe
xchg
mov
aad
scas
lds
mov
dec
pop
movsl
out
cmpb
shll
mov
mov
jmp
inc
cli
sahf
outsb
sub
sbb
test
clc
mov
and
rcrb
pusha
cwtl
mov
pop
jge
jb
mov
sub
push
push
loopne
mov
stos
loope
insb
push
add
cmp
sub
xor
out
stc
orl
xchg
mov
negl
pop
in
push
inc
jle
jo
sbb
push
arpl
cmc
sub
inc
ljmp
sbb
mov
lret
inc
jb
test
mov
add
cmp
xchg
loop
aas
enter
leave
cmpsl
into
push
outsl
loop
pop
xor
je
sub
jecxz,pt
addb
imul
sbb
pop
adc
xchg
daa
xor
addr16
xchg
xor
jecxz
enter
lods
out
or
push
push
sbb
pop
xchg
popf
dec
cmp
bound
pop
in
dec
repz
sbb
leave
push
xor
dec
or
cmp
sti
mov
mov
int
lret
mov
xor
and
pop
inc
loopne
jmp
imul
add
jnp
jnp
imul
pop
int3
push
fsubr
fistl
adc
cmp
loopne
sbb
cli
cli
or
movsb
dec
jg
pop
xchg
lret
mov
xchg
std
push
push
adc
sbb
shr
mov
mov
bound
outsb
mov
mov
xor
xor
pop
xchg
push
int3
ja
dec
ja
dec
xor
aam
lea
scas
shrl
andb
pop
imul
in
cmp
cmp
mov
mov
xchg
adc
pop
les
adc
cmp
dec
enter
add
addb
jbe
add
sbb
mov
xchg
push
sarl
jmp
push
jmp
and
imul
out
pop
fisubl
add
insl
cmp
aad
jo
cmpsb
loopne
cmp
jo
sub
fistpll
cli
push
hlt
aaa
iret
push
xchg
imul
stc
daa
xor
mov
in
pop
outsl
cli
sbb
fimuls
iret
and
sub
iret
nop
mov
mov
nop
data16
pop
mov
sbb
xchg
adc
mov
sub
les
iret
outsl
inc
lahf
sbb
mov
enter
cmpsl
mov
mov
addr16
xor
and
cmpsl
cmp
sub
les
stos
adc
dec
cmp
movl
ss
xchg
lret
into
outsl
mov
add
pop
adc
les
xchg
pushf
cmpsb
and
jbe
shlb
movsb
adc
int3
loope
call
mov
and
rcl
jns
fists
inc
das
inc
inc
into
push
fs
out
out
out
jecxz
loope
jg
add
sti
lcall
sub
mov
std
xchg
arpl
ss
insb
out
pop
cli
and
frstor
lret
sub
sti
jo
movsb
mov
test
cwtl
pop
arpl
push
hlt
push
and
cmp
aas
sbb
mov
call
inc
out
jg
jg
mov
mov
test
add
cld
add
push
add
cwtl
jmp
mov
push
loope
call
aam
push
sub
xor
jb
test
mov
ret
das
std
sbb
pop
adc
xor
out
mov
mov
add
add
fimull
inc
xorl
cld
rcrb
adc
and
adc
inc
sahf
out
gs
imul
pop
dec
addr16
sub
in
mov
mov
jbe
cmpsb
or
inc
pop
or
push
icebp
in
mov
mov
xchg
je
xor
js
lret
lds
fcmovnbe
mov
inc
or
dec
push
jne
inc
cmp
insb
scas
inc
pop
in
sub
mov
mov
mov
push
rorl
fsubrl
lods
insb
popf
add
fiaddl
cmpsb
pushf
js
fs
add
xor
xor
push
out
inc
mov
xor
push
pop
cmc
mov
add
add
repz
add
sub
mov
mov
imul
imul
mov
test
or
cmp
mov
add
mov
dec
pop
je
cld
inc
adc
pop
cld
psllw
cmc
adc
daa
pusha
cmp
les
adc
adc
ret
mov
iret
xor
gs
pop
fbld
daa
or
cwtl
add
test
mov
push
cwtl
xor
fstps
push
and
adc
je
mov
mov
pop
mov
fdivrs
xchg
mov
fsub
xchg
rolb
jmp
inc
repnz
add
add
xchg
loope
push
sbb
cmpb
int
stc
pop
aaa
xchg
adc
push
xor
sub
fidivs
add
inc
mov
arpl
xchg
mov
pusha
pop
sbb
fidivrl
icebp
jp
and
pop
cli
jns
mov
in
adcb
and
push
scas
stos
dec
clc
xor
movsl
hlt
xor
sub
sti
pusha
in
adc
mov
fildll
out
sub
mov
popa
in
ret
or
mov
jbe
popf
jns
clc
or
leave
std
out
ljmp
mov
dec
iret
inc
jmp
jmp
leave
add
push
or
sub
repnz
repnz
mov
cld
in
sbb
mov
rcll
inc
jo
pop
iret
mov
pushf
and
loop
pushf
dec
rcl
test
xor
in
pop
and
dec
aad
nop
mov
inc
outsb
adc
sub
stos
pusha
sbb
pop
outsl
and
out
jns
in
stc
insb
sbb
jp
test
sti
int3
push
cmpsl
sti
jp
rorb
ss
fsubs
inc
sub
shl
xor
outsl
push
mov
ucomiss
jl
and
rclb
lea
loopne
inc
ss
xor
adc
cmp
loop
imul
sub
iret
out
aam
popf
cmp
stos
flds
pop
dec
mov
inc
jns
popf
sbb
test
cmp
cmp
cmc
pop
loope
les
jle
add
mov
jne
leave
xor
lods
add
mov
addl
lea
dec
lret
push
fsts
fcoms
ror
nop
xor
jns
jno
or
shrl
push
dec
push
clc
dec
scas
mov
dec
cmp
push
or
sbbl
mov
addr16
mov
push
test
out
fstpt
xor
mov
sarl
fmull
out
sarb
out
sbb
testl
outsb
adc
jl
rolb
stos
cmpsb
cmpsb
sbb
xor
dec
jmp
push
movsb
icebp
xor
push
jecxz
pop
loop
mov
stos
aaa
sbb
xchg
iret
push
aaa
xchg
cld
xlat
xchg
lds
sar
cmpb
pop
jae
stos
push
adc
pop
jmp
push
cmp
jno
mov
enter
fsub
aad
std
in
xor
jp
fildl
add
aas
push
push
push
test
dec
add
pusha
sub
cmp
dec
mov
jns
push
and
ss
xorl
sbbb
stos
cli
mov
ds
in
icebp
mov
jle
mov
or
into
xlat
scas
mov
mov
call
jo
repnz
clc
call
sahf
ljmp
bnd
gs
es
dec
repz
stos
inc
mov
fidivrl
data16
insl
leave
imul
lods
dec
pop
push
lods
sbb
xchg
outsl
xchg
insl
mov
hlt
inc
xor
ffree
cmp
addr16
xor
aam
sbb
scas
iret
int3
cmpsb
outsb
cmp
in
xor
dec
repnz
mov
cltd
mov
outsb
cmpsb
fcmovbe
ss
hlt
push
inc
rorb
push
cmp
push
xchg
xchg
pop
fs
sti
in
add
ret
fbstp
lar
les
sbb
fs
xor
dec
scas
push
xlat
test
fstps
add
outsb
jbe
mov
or
in
lock
xchg
pop
and
fidivs
add
pop
loop
daa
dec
cmp
jg
push
imul
push
ja
repnz
push
outsb
pop
aaa
and
movsb
leave
mov
mov
shlb
inc
loopne
out
mov
out
cmc
stos
es
push
in
cmc
push
inc
lcall
mov
mov
insb
out
aad
sbb
push
push
loopne
rorb
out
mov
adcl
addr16
push
lcall
mov
sbb
jo
ret
pushf
pop
cmp
aaa
pop
or
aas
fildl
movsb
fsubrs
or
sub
in
xor
xchg
inc
out
mov
mov
mov
mov
mulb
sub
mov
lcall
out
dec
cmp
sub
mov
jge
and
mov
dec
outsb
mov
lret
test
cs
test
mov
stc
cmpsb
xor
call
js
inc
inc
js
mov
sub
add
adc
cmpsb
push
mov
mov
out
iret
cs
lds
pop
mov
mov
ljmp
test
movsl
rorb
xor
test
mov
sar
xlat
arpl
bts
pop
sub
cmovbe
je
mov
shlb
cmpsl
xlat
xlat
add
xor
into
lods
mov
rolb
push
cs
js
cmp
mov
adc
push
bound
mov
sub
add
xor
adc
push
mov
rol
clc
push
in
cmp
jle
iret
pop
lahf
fistps
in
fildl
stos
std
movsb
cmc
xlat
cmp
adc
mov
pop
ja
and
out
clc
ja
pop
pushf
stos
xchg
loope
cmp
cmp
add
inc
jae
pop
and
push
xor
sub
jl
cltd
xorb
and
int3
add
test
adc
add
orl
xchg
enter
mov
mov
aaa
pop
push
dec
loopne
sbb
and
adc
notl
push
fnsave
inc
aam
movsl
add
in
lds
cmc
or
out
clc
negl
mov
inc
cli
inc
cmp
imul
mov
xor
ja
adc
inc
adc
addr16
xchg
ret
fimuls
fs
aas
jno
push
repz
addr16
xor
add
je
repnz
xor
imul
out
hlt
in
mov
flds
mov
outsb
jp
jae
rcrl
in
clc
andb
dec
cltd
fisttpl
call
push
icebp
fisubs
dec
movsl
lret
adc
sbbb
aas
loop
and
mov
pop
movsl
sbb
adc
xchg
js
add
adc
shlb
mov
mov
ret
fstps
jae
test
or
movsl
and
xor
jns
sub
notl
mov
adc
outsl
add
adc
jge
in
xor
sbb
add
aad
addl
leave
push
cmpsb
hlt
in
inc
jno
fldenv
jge
cmp
into
inc
jns
xchg
mov
sub
inc
pop
xor
sub
hlt
jno
std
pop
add
sub
hlt
dec
mov
push
xchg
cmp
call
psubd
or
add
add
rcrl
sbb
insl
cmc
lds
in
test
stos
sbb
dec
dec
test
les
bound
dec
cwtl
sti
repz
pop
sbb
test
test
ljmp
and
daa
mov
xchg
sti
test
jecxz
mov
sbbb
test
push
out
mov
ret
mov
dec
data16
pop
stos
call
loop
dec
out
shrb
dec
mov
dec
mov
mov
push
mov
sub
std
mov
mov
popa
sub
ds
loope
rcrl
push
pushf
push
in
mov
mov
dec
or
mov
mov
mov
inc
stos
nop
xchg
call
mov
shlb
xlat
pop
xchg
test
cs
subb
div
insb
test
bound
shl
mov
insb
jl
out
das
repz
pop
push
jmp
xchg
inc
roll
js
in
push
dec
and
insb
jbe
fsubl
jecxz
jle
mov
iret
pmulhw
gs
adc
insb
mov
ljmp
push
xchg
sub
clc
mov
sub
cld
in
xor
pop
arpl
call
adc
inc
sbb
mov
jp
popf
push
imul
mov
mov
mov
mov
scas
sti
sbb
cwtl
mov
mov
jnp
push
fwait
hlt
add
scas
adc
xchg
xchg
sar
sub
lods
mov
push
xchg
adc
into
shll
js
push
fst
lods
xchg
insb
mov
mov
sbb
js
ljmp
outsb
out
sti
subb
pushf
xchg
xor
push
idiv
push
mov
or
xchg
pop
in
and
fimuls
mov
inc
test
sbb
xor
sub
aam
push
add
sbb
hlt
cmp
mov
jae
out
lods
dec
out
cmp
mov
cmp
jb
jge
adc
test
lret
iret
rol
xchg
jge
and
mov
aaa
xor
mov
stos
ret
mov
imul
pop
or
dec
jne
sbb
enter
xchg
adc
xor
loopne
loope
push
cmc
add
and
inc
pop
inc
mov
gs
lea
and
pop
ror
push
fidivrl
int3
xchg
addr16
jle
jecxz
out
fsubrp
dec
xchg
or
lods
xor
xor
mov
mov
loopne
sarl
aas
jbe
test
je
adc
test
scas
or
or
xorb
xchg
sbb
outsb
and
push
repnz
outsl
push
rcr
hlt
insl
push
lds
imul
inc
in
add
jbe
mov
sbb
push
movl
pop
push
pop
and
push
es
xor
jno
adc
in
lods
fstps
pop
jg
les
or
stc
aam
cs
dec
scas
imul
dec
leave
les
sub
add
and
mov
xchg
les
enter
outsb
mov
add
push
xor
fsqrt
mov
pop
js
arpl
mov
or
inc
push
pop
add
xlat
inc
or
push
incb
aaa
jns
inc
sti
cmpsb
rorl
adcl
and
push
pushf
bound
aas
aam
mov
inc
and
xor
xor
pop
mov
xchg
mov
leave
pop
iret
mov
outsb
cmp
stc
std
decl
scas
mov
cmp
add
pop
jp
inc
stc
shrl
movsl
sbb
std
pop
leave
inc
sbb
jae
jne
adc
push
mov
scas
mov
mov
dec
fmuls
js
pop
and
and
mov
mov
cltd
test
in
pop
xor
sub
leave
inc
icebp
inc
ss
or
jecxz
jnp
adc
xor
push
jo
insb
or
movq
daa
cmp
cmp
push
lret
stos
lds
inc
stc
mov
mov
sub
cmp
add
dec
cmp
imul
add
addr16
jbe
scas
xchg
aaa
adc
sub
xor
pop
cmpb
pop
std
cwtl
mov
or
or
add
jecxz
aaa
adc
icebp
jge
jg
fcmovnu
dec
push
cmp
mov
outsb
sub
inc
in
jl
imul
subb
bound
lret
sbb
out
and
mov
icebp
ds
cld
sub
mov
fldl2e
xchg
aas
sbb
imul
xchg
incl
push
xchg
fs
scas
mov
repnz
les
psrad
lret
add
add
inc
test
jg
pop
pusha
mov
leave
aam
insb
out
dec
in
dec
mov
aad
xchg
jecxz
jne
rolb
pop
and
mov
pop
xchg
jnp
inc
dec
adc
aad
sarl
shlb
xor
lret
aad
mov
jbe
and
pop
jae
imulb
mov
dec
in
inc
test
pop
mov
adc
xchg
aas
aad
shll
in
sub
test
cmp
push
add
loope
stos
shl
push
sub
aaa
add
push
mov
mov
mov
outsl
aaa
loope
cltd
sbb
addr16
inc
and
sbb
sahf
ret
mov
xchg
popf
inc
imul
adc
sub
adc
mov
mov
ret
dec
divl
xor
ljmp
cmp
gs
xchg
dec
fisttpll
sbb
flds
lret
add
dec
clc
fdivl
in
mov
cld
ficoms
outsl
pushf
mov
mov
mov
rclb
or
cmp
arpl
mov
dec
mov
push
xchg
or
adc
mov
adc
jecxz
popf
repnz
insl
jnp
idivl
and
dec
inc
into
imul
das
lret
pop
stos
pop
nop
pop
subb
xchg
adcb
dec
or
push
inc
adc
into
cmp
ljmp
mov
mov
jb
push
lret
daa
loope
popa
int3
rorl
sbb
adc
mov
pop
add
adc
leave
mov
aas
stos
sub
cltd
cmp
push
in
int3
and
cmpsl
lahf
mov
mov
jne
out
je
in
enter
jle
pop
and
xchg
lahf
gs
les
lret
pushf
repnz
mov
jbe
jmp
orl
cli
stos
mov
xor
sub
inc
cmpsl
cli
adc
lahf
jne
adc
adc
scas
lock
int
test
fldt
fcoml
sbb
loopne
inc
imul
add
jns
das
outsb
lods
sub
in
mov
pop
and
out
dec
mov
jg
mov
cmp
xor
aam
xchg
jp
in
sub
push
dec
adcb
push
mov
mov
adc
jl
inc
rcr
pop
lcall
test
repz
push
mov
jnp
mov
dec
fisubs
push
jge
xorl
fmull
dec
mov
adc
and
xchg
sbb
mov
or
mov
xchg
jmp
cmp
mov
outsb
jecxz
ret
inc
inc
outsl
and
jl
mov
mov
cmp
push
inc
cwtl
add
push
scas
adcb
out
loop
inc
cmpl
fildl
test
mov
hlt
xchg
add
popf
inc
or
test
outsb
data16
test
out
cmp
adc
dec
jg
leave
frstor
xchg
rcrb
inc
aad
cmpsl
je
out
inc
pusha
in
shrb
or
xchg
aam
es
std
das
ret
data16
xchg
mov
xchg
fimull
popa
aas
stos
in
into
flds
push
pop
adc
push
mov
shrl
xchg
inc
aam
les
aaa
data16
fs
iret
sbb
cmp
xchg
push
push
or
jns
out
xor
push
repz
fcoml
or
and
mov
sbb
sbb
pop
cltd
cltd
dec
cmp
dec
idivl
repz
out
jg
mov
xor
push
adc
ds
mov
push
lret
pop
es
mov
jnp
dec
jmp
or
adc
mulb
push
dec
or
in
dec
mov
iret
push
mov
push
enter
movsb
or
cwtl
imul
out
push
hlt
jo
test
cmp
test
fimull
pop
insl
pop
xor
cltd
lea
bound
aad
lahf
loopne
inc
daa
dec
iret
xor
adc
mov
dec
dec
test
sbb
fdiv
sarl
mov
dec
ss
movsl
aad
dec
mov
test
dec
inc
sahf
fstl
fbstp
es
pushf
mov
jl
test
and
xor
repnz
adc
xor
mov
pop
pop
cld
push
dec
out
inc
out
adc
jecxz
sti
adc
mov
or
xchg
into
xchg
xor
pop
mov
sub
mov
loope
inc
out
scas
pop
add
pusha
cmp
clc
out
jge
cmp
push
addr16
jle
pop
mov
inc
bound
pop
fmuls
jl
scas
call
xchg
gs
in
xchg
nop
jge
add
nop
test
dec
lods
sahf
mov
jns
lods
sti
enter
addb
mov
int
popf
mov
add
push
ret
jp
push
xor
inc
cld
loope
adc
pop
out
mov
jns
ljmp
pop
fdivl
inc
mov
clc
in
xchg
mov
sub
jne
jl
jle
rolb
rcrb
inc
insb
dec
and
out
xchg
in
sub
or
mov
inc
pop
jmp
or
mov
mov
mov
sub
cli
insb
mov
add
push
or
leave
push
jnp
arpl
fnstsw
mov
inc
push
sbb
bnd
scas
pop
cmpxchg
in
data16
cwtl
xchg
mov
iret
sbb
cwtl
sub
movsl
adc
xor
stos
fyl2x
stos
lcall
jl
lods
add
mov
icebp
sbb
mov
mov
enter
movsl
dec
cltd
or
arpl
shl
adc
enter
das
push
mov
push
shlb
pop
pop
jb
cmp
add
icebp
xor
mov
or
imul
inc
jns
loop
adc
call
adc
dec
into
mov
sub
xorl
sbb
dec
leave
nop
lds
jno
pop
xor
fidivrs
pop
into
fsubrp
adc
push
jae
cs
pop
sbb
pushl
lds
lcall
addl
cmp
xor
rorl
pop
mov
and
or
call
mov
test
hlt
outsl
adc
rcr
ds
testl
sarl
inc
inc
sti
xor
or
sub
stc
cmp
popf
jo
popa
leave
cmp
repz
cmp
xchg
pop
cmp
mov
pop
fistps
pushf
or
inc
add
iret
jns
sub
incb
in
sub
test
outsb
cmp
inc
imul
adc
add
cs
inc
cmp
js
xchg
js
incl
add
aas
and
jns
inc
imul
cld
sub
or
sub
push
test
pop
xchg
adc
mov
push
mov
mov
add
jg
data16
ficompl
push
int
fistps
push
pslld
stc
into
dec
lahf
dec
stos
lahf
sub
cmp
mov
repz
lret
out
movsl
les
pop
sahf
addr16
dec
xor
xor
sbbb
fisttpll
adc
sbb
cmp
mov
add
adc
pop
dec
xchg
xchg
lcall
mov
ljmp
xchg
push
cmpsb
xchg
fbstp
addr16
sti
mov
loope
imul
daa
mov
js
jno
fdivs
ret
rcrb
mov
mov
adc
mov
cmp
loop
xchg
dec
bound
test
fnstenv
mov
lahf
push
sarb
push
pop
repz
jge
ret
pop
addr16
int3
faddl
push
sub
inc
ret
dec
mov
fsubl
cmp
or
mov
inc
imul
lds
sub
xor
push
aam
mov
fsubs
push
lcall
insl
frstor
fsub
in
out
add
add
addl
mov
adc
ljmp
cli
out
xchg
sbbb
repz
cli
sub
push
jns
sub
addr16
xchg
mov
push
mov
or
cs
sub
pop
pop
dec
push
rcll
push
rcr
fimull
sbb
arpl
adc
call
sbb
in
push
dec
mov
sbb
shll
jp
dec
push
mov
adc
xor
cs
xchg
pop
outsl
pop
pop
in
mov
das
pop
repz
cmp
sub
mov
int
inc
mov
aam
jle
push
xchg
insl
or
sub
dec
and
imul
clc
repnz
into
rcll
aam
imul
inc
insl
fsubr
aam
lret
clc
cli
lcall
mov
jmp
repnz
or
rclb
adc
ds
sbb
in
in
jecxz
cmc
adc
call
pop
fsubrs
lds
test
pop
xchg
into
pusha
sub
mov
jg
push
pop
mov
sub
loop
rcrb
pop
data16
adc
mov
jae
data16
movsl
pop
ret
les
call
cmp
jno
cltd
cmp
or
mov
sarl
mov
clc
test
mov
push
xchg
je
mov
lods
inc
mov
fbstp
jl
mov
and
stc
cwtl
pop
lcall
cmp
and
and
xchg
mov
fs
xchg
popf
test
inc
pop
ds
movsb
pop
xchg
push
xchg
jg
stos
cmpsl
cmp
sahf
push
sbb
or
test
notl
mov
scas
cmp
es
mov
sub
cli
xchg
push
add
dec
dec
fiadds
popf
clc
inc
stos
cs
cmpsl
or
lret
dec
fsubl
stos
call
pushf
test
cmp
mov
mov
mov
add
pop
jo
movsb
aas
lock
stc
rolb
daa
ret
fsubs
data16
out
mov
mov
cmpsb
cmpsl
repz
inc
fcomip
push
cmpsl
mov
xor
ss
xor
int
push
jge
lret
leave
inc
add
mov
jg
xchg
bound
pop
jb
sub
inc
dec
pop
into
sbb
das
jge
sbb
mov
popa
aad
aaa
push
push
fsubrl
fildl
std
pop
pop
mov
fildl
xor
sub
dec
sub
fs
mull
pop
adcb
jne
push
roll
addl
std
xor
fcoml
or
enter
sbb
shl
sti
ljmp
sub
xor
xchg
hlt
fnstenv
out
push
mov
cwtl
int
ds
inc
dec
xor
add
test
jo
mov
mov
jo
jmp
add
xchg
cwtl
pop
sbb
mov
sub
push
loop
sub
leave
decl
je
out
mov
out
adc
fldcw
adc
faddl
out
stc
mov
pop
xchg
mov
stos
out
sub
xor
and
in
jns
fldenv
arpl
sahf
daa
lret
mov
mov
mov
imul
fisubs
sbb
repnz
dec
dec
mov
mov
fsubrs
in
xchg
jno
xchg
jp
jae
out
mov
ljmp
pop
push
filds
sbb
lods
mov
mov
or
mov
adc
dec
push
fs
iret
stc
repz
dec
sbb
xlat
loopne
ja
push
mov
mov
cmp
fcmovu
out
fistps
loope
cmpsb
in
mov
dec
cld
int
sub
pop
imul
iret
dec
nop
vmovsldup
pushf
mov
xor
xchg
pop
shll
fmul
repz
jno
xchg
cmp
xchg
repnz
call
arpl
fsubs
pop
inc
das
jecxz
ds
in
inc
insb
fs
repz
popa
insb
or
loop
xor
repz
sbb
ret
sbb
cwtl
outsl
imulb
scas
mov
mov
xor
fwait
rcll
out
test
mov
xor
loop
mov
hlt
hlt
ds
cmpsb
push
xchg
mov
fdivrp
sbb
xor
mov
stos
mov
pop
jg
push
test
lock
push
mov
sarl
cld
jmp
scas
or
das
push
xor
fidivrl
imul
fdivp
add
jmp
mov
sbb
cmp
test
sbb
fwait
sahf
arpl
jle
insb
push
pop
cmp
loope
jne
push
push
xor
cmp
arpl
sub
or
scas
scas
xor
xchg
pop
pop
inc
xchg
xchg
fcoms
cltd
push
cli
and
push
xchg
sbb
jecxz
inc
xor
add
loope
cmp
dec
and
push
mov
jne
sub
xor
and
xor
fnstcw
sub
mov
xor
loopne
xor
mov
cltd
flds
or
xchg
xchg
jg
fdivl
aad
xchg
push
sub
mov
adc
jp
jb
and
xchg
add
scas
sub
push
fstpl
mov
js
repz
xchg
jmp
dec
cmp
or
xchg
rorl
sti
mov
and
mov
jo
push
push
mov
mov
dec
mov
test
push
cmpsb
xchg
mov
push
pusha
scas
popf
xor
loop
adc
xor
aad
test
pop
mov
sub
iret
xor
xchg
push
adc
xchg
mov
sbb
ja
lods
idiv
mov
mov
rcll
push
js
push
clc
insb
mov
stc
sub
loopne
cmp
inc
loopne
mov
sbb
aad
fimuls
cmp
lret
pop
mov
insb
fdivs
loopne
mov
mov
xchg
jl
mov
or
test
cmp
jno
aaa
pop
push
mov
add
pop
pop
aam
xor
xchg
mov
cmp
mov
push
dec
push
mov
xor
icebp
imul
fwait
cwtl
lods
push
mul
dec
inc
fs
xor
divl
scas
cmp
pop
dec
cmpsl
cmp
sbb
sub
xchg
xor
incl
push
add
push
leave
stc
fidivl
loopne
aam
pop
ret
push
ret
int3
sub
int
popa
popa
adc
push
inc
gs
mov
out
mov
pop
push
loopne
popf
dec
loopne
and
lret
mov
dec
imull
jno
xchg
out
test
dec
sub
push
jns
std
fimull
sub
pop
sar
test
fwait
ja
lds
out
and
xlat
sub
cmp
das
inc
pop
leave
sbb
dec
dec
xor
fildl
push
lods
fidivl
xchg
sbb
and
sub
movsl
aas
or
ret
pop
shr
xchg
pop
movsl
out
lret
add
cmc
dec
cld
add
jp
push
lahf
pop
mov
mov
add
fs
loopne
cs
ds
and
insl
sbb
xchg
scas
insb
xor
adc
scas
in
sub
sbb
pusha
jne
xor
push
sub
push
arpl
and
add
mov
cmp
pop
sbb
scas
and
sub
pusha
loop
add
repz
stos
inc
xor
rclb
dec
push
repz
jp
and
or
jmp
test
dec
faddl
or
pop
fidivl
push
nop
and
sub
lods
icebp
clc
pop
dec
lods
push
bound
bound
ret
pand
insl
push
test
ss
bound
and
add
outsl
ja
les
dec
pause
ljmp
mov
add
add
insl
lea
sbb
gs
mov
mov
xchg
jae
adc
mov
loope
pop
stc
out
cmp
and
das
jle
cmpsl
ja
inc
mov
scas
cmpsb
adc
inc
add
push
test
adc
lea
jmp
inc
cmpsl
fisubrl
loope
notb
inc
add
push
popa
xchg
push
pop
inc
inc
out
adc
pop
or
lret
mov
lods
mov
sbb
in
pop
movsb
in
js
lret
inc
movsb
cs
push
sub
push
loop
and
stc
mov
inc
jge
cmp
dec
push
and
fldl
scas
loope
dec
add
jno
push
pop
push
pop
scas
jb
fisttpl
jle
fstpt
in
jbe
enter
pusha
inc
psadbw
aaa
nop
mov
out
shlb
pop
adc
lcall
addb
inc
mov
cmpsb
fs
clc
mov
lcall
rorb
xlat
aaa
inc
dec
fimull
xchg
dec
icebp
sbb
ss
cmpsl
sbb
aad
push
sub
xor
xchg
and
jae
shlb
mov
fsubs
rcrb
jge
fsubl
bound
leave
jnp
cmp
jo
lods
xchg
sub
imul
loop
daa
inc
cmp
jge
rcrl
js
stos
cmp
fsts
shl
mov
movsb
adc
insl
in
push
add
push
pop
mov
pop
lret
mov
adc
out
jo
xor
cmpsb
xchg
lock
arpl
cwtl
aas
sbb
mov
and
jnp
xchg
sub
movsl
out
ss
aad
cmp
repz
or
stc
jns
iret
xchg
push
jo
lods
aad
push
sub
xor
mov
rcrb
outsl
or
fs
push
shlb
or
bound
dec
push
add
pop
mov
outsb
arpl
jmp
daa
imul
pop
mov
subb
jge
mov
hlt
push
pushw
dec
std
dec
xchg
icebp
and
and
test
mov
pop
wrmsr
rcll
push
cmp
pop
sti
cmp
aad
enter
hlt
mov
js
adc
mov
pusha
cltd
add
imul
add
aam
sbb
sbb
sbb
pop
mov
mov
xchg
nop
inc
in
xor
push
inc
adc
dec
dec
cld
mov
inc
xchg
out
pop
mov
shr
cltd
cld
pusha
lret
adc
std
mov
push
jbe
test
push
jne
lret
xchg
push
cltd
lahf
mov
xor
lahf
mov
dec
dec
fcomps
iret
xorb
fiaddl
and
mov
mov
in
ljmp
outsl
shll
sbbl
sti
xor
enter
loop
inc
mov
inc
mov
lret
mov
mov
xchg
add
data16
xor
xchg
cmpsl
pop
nop
jl
hlt
cmp
mov
sub
popf
out
sbb
jb
and
pop
push
jns
sbb
dec
xchg
or
mov
icebp
andl
dec
sub
xor
fstps
and
sub
mov
dec
orl
and
leave
ds
in
mov
fildl
add
jge
push
mov
pop
xor
aas
call
fsts
mov
lret
dec
repz
out
xchg
xchg
imulb
dec
add
and
nop
adc
pusha
imul
mov
nop
icebp
jl
jnp
sbb
xor
add
add
test
push
inc
iret
out
lcall
mov
or
clc
add
pop
sbb
xor
push
out
insl
jne
lock
sub
paddsb
pop
pop
rorl
cmp
fcomps
inc
add
lds
mov
push
testl
test
loopne
xor
stos
and
insb
lock
popf
inc
cmp
push
jmp
cmp
arpl
rcrb
jl
repnz
or
pop
loop
into
pop
test
ja
mov
sbb
rcrb
movsl
and
movsb
push
fistl
fistl
out
ret
scas
adc
insb
push
sti
add
data16
dec
mov
or
cmpsb
inc
lret
in
dec
cwtl
cmc
adc
movl
jbe
dec
dec
imull
pop
xchg
lds
mov
stos
mov
nop
dec
dec
repnz
jb
into
pop
xor
cmp
int
xor
xchg
movsl
cmp
popf
and
or
sub
mov
or
jbe
cmpsl
pushf
jae
adc
in
imul
scas
pusha
mov
cmp
rclb
inc
das
push
pop
mov
jno
ljmp
cltd
aad
mov
sahf
out
movsb
mov
pop
pop
dec
jns
mov
fadd
test
cmpsb
xor
add
fld1
add
inc
sub
popa
or
jnp
loopne
xchg
shl
jae
movl
ljmp
sbb
adc
mov
fsts
pushf
cmp
adc
dec
mov
orl
mov
xchg
dec
xlat
lahf
xchg
sbb
loopne
sub
lret
sahf
aam
xor
mov
dec
iret
cwtl
movsl
addl
pop
loop
add
pushf
pop
sbb
les
pop
popf
dec
cwtl
mov
rcl
dec
xor
dec
sub
call
dec
push
outsl
stc
push
push
cli
xlat
push
ret
inc
imul
dec
xchg
push
je
fldl
sahf
pop
cli
inc
push
bound
add
loop
mov
mov
pop
rcl
sub
and
jg
push
jmp
dec
out
push
xor
xlat
daa
in
sub
into
cs
lods
lods
mov
xchg
mov
idivb
aaa
or
cmpsl
or
cmc
insb
sbb
jmp
sbb
add
mov
bound
mov
jecxz
into
inc
mov
sti
mov
add
stos
add
ja
dec
arpl
sub
cmp
ja
cld
rorl
mulb
jno
lcall
xor
fimull
or
xchg
nop
jno
jl,pn
lea
mov
jp
jno
sbb
fs
mov
dec
data16
adcl
adcl
push
enter
xor
sbb
or
fbstp
pop
gs
push
insl
sbb
daa
ror
and
cmp
and
lods
push
in
data16
pop
xchg
mov
or
out
jbe
cmp
imul
int
sub
punpckldq
popf
jae
and
fstpl
jg
ds
out
es
test
sbb
andb
shll
ss
insb
sbb
loopne
aas
mov
cmp
mov
shll
arpl
scas
out
repz
adc
ss
jg
xchg
mov
in
addr16
xor
xchg
pop
ret
cli
push
mov
cmp
push
mov
jae
mov
repz
aaa
orl
jle
addr16
adc
xor
sub
enter
out
dec
dec
mov
mov
add
fucom
push
test
mov
cmpl
lcall
cmp
mov
lods
ret
int
int
rclb
xor
and
aad
loop
inc
jbe
xchg
mov
mov
pop
jns
test
and
pop
dec
pop
and
loop
dec
pop
imul
cmpsb
rcll
mov
cmp
jns
idivb
mov
clc
pop
in
cs
lret
push
push
insl
mov
je
push
mov
cwtl
mov
mov
pusha
push
xchg
xlat
adc
stos
aam
jecxz
imul
mov
xchg
add
pushf
loop
xor
lea
mov
mov
hlt
lret
sub
in
enter
lret
sar
shlb
or
int3
mov
insb
or
jb
add
sub
jnp
add
pop
lcall
xchg
lret
push
sahf
jmp
mov
enter
icebp
lahf
call
adcb
or
xchg
daa
aam
or
jne
ja
mov
arpl
xor
mov
jno
rcrb
subl
mov
and
jge
sbb
and
loopne
adc
cwtl
adc
sbb
cmp
in
call
popf
push
mov
int3
or
lds
cmc
jge
mov
add
stc
jge
leave
and
in
testb
mov
sbb
cmpsl
mov
sub
pop
mov
push
enter
stos
sbb
xchg
in
xchg
mov
leave
addl
push
mov
pushf
pop
pop
packssdw
scas
sub
sub
and
cmp
dec
sbb
rcl
mov
test
aas
stos
call
sahf
shl
jno
jb
push
cmc
pop
cs
fsubrs
pop
out
push
jnp
lock
call
iret
jg
sahf
movsb
mov
iret
dec
daa
or
dec
pusha
xor
mov
imul
pop
mov
mov
sub
fld
add
outsl
cmp
mov
or
adc
imul
dec
rcr
jmp
xor
push
inc
bound
in
cli
data16
ret
pop
xor
push
rcll
jns
push
jo
fidivs
xchg
fwait
pushf
mov
fwait
insb
jns
lods
pop
xchg
out
jne
cmp
inc
icebp
loop
xor
and
and
or
hlt
ret
in
pop
mov
inc
aad
daa
notl
adc
sub
sarb
and
push
push
push
hlt
mov
dec
jecxz
pop
jge
lock
push
loope
push
pusha
or
pop
repnz
imul
popa
inc
pop
cli
xor
add
adc
mov
aam
push
jo
das
ror
aaa
cld
shrb
mov
add
adc
enter
into
mov
das
shll
mov
out
fidivrl
or
or
enter
repz
push
adc
add
jl
pop
mov
movsb
lahf
addl
sbb
xchg
inc
in
dec
and
xor
imul
and
jns
push
or
test
inc
test
inc
sub
adc
imul
mov
cmp
mov
or
push
xor
add
and
mov
aad
push
jae
jl
fdivrl
std
and
out
pop
push
xchg
sbb
leave
xchg
mov
aaa
xor
or
inc
cmp
cmp
dec
pop
mov
arpl
jno
push
push
fs
into
rcrb
in
jb
jbe
mov
jne
mov
mov
arpl
xchg
popf
pop
push
adc
jp
cs
mov
in
hlt
enter
jnp
sbb
lahf
adc
push
insb
jmp
pop
fcoms
fistps
push
hlt
lock
add
daa
test
shr
jns
push
push
jl
jnp
into
jmp
inc
jp
cmpsl
fwait
jae
lret
idivl
adc
xchg
cmp
jecxz
inc
add
xchg
stc
xorb
imul
ds
pop
lock
js
stos
mov
imull
jns
jns
jno
push
or
imul
xor
in
or
xor
fistl
shrb
and
subb
addl
sub
cmc
fisubl
add
push
psllq
fldt
ja
loop
cmc
mov
pop
js
xlat
xor
insb
dec
sbbb
fstl
stc
mov
jge
js
test
iret
mov
mov
dec
insl
and
sbb
mov
add
xlat
dec
daa
cmpsb
sbb
stc
and
pop
jg
adc
bound
jo
divb
data16
imul
push
mov
je
mul
pushw
inc
jle
movsl
dec
sar
mov
les
loop
call
gs
cmp
lock
jno
push
push
add
leave
push
or
push
ja
sub
mov
add
pop
lret
leave
jne
into
in
pop
in
dec
rolb
movsb
pop
inc
jmp
subl
mov
and
inc
int
sbb
test
imul
jnp
add
je
popf
or
call
mov
loopne
dec
push
mov
or
pop
cmp
cli
jnp
clc
mov
mov
in
mov
in
fnsave
insl
pop
icebp
inc
cmpsl
scas
fucom
dec
ljmp
or
pop
fidivs
out
inc
mov
sub
dec
push
jmp
orb
fcoms
fsubr
lea
ret
push
cmp
nop
out
jl
mov
mov
and
cmp
or
insb
or
les
js
lret
push
sub
dec
in
xchg
cs
int3
pop
sub
dec
mov
mov
jns
xor
cmc
scas
add
mov
gs
das
pop
dec
pop
int
sub
push
xlat
leave
leave
mov
jp
int
hlt
dec
sbb
inc
fildll
insb
lret
cmp
test
xchg
adc
lcall
dec
mov
mov
pop
push
xor
pop
and
stos
shll
and
outsl
or
jo
sbbl
popf
sbb
outsl
clc
sti
mov
sahf
lret
push
and
movsl
aaa
and
or
movsl
ret
loope
xchg
movsb
jae
push
and
lea
out
scas
mov
aam
loope
mov
xor
lcall
lret
ja
pop
hlt
mov
dec
bound
aas
mov
ds
repnz
hlt
js
stc
lret
int
fistpl
mov
xchg
cmp
stc
or
ffreep
gs
scas
mov
xor
movsb
push
jbe
lock
negl
sbb
add
sub
lret
mov
mov
sbb
dec
in
in
and
outsb
adc
xchg
or
pop
inc
mov
lahf
xchg
mov
mulb
jp
movsl
sub
popl
adc
sbb
adc
pusha
insb
push
or
data16
cmp
fildll
daa
dec
jo
push
sti
adc
in
jb
add
stos
adc
cmpsl
fisttpl
cmc
and
test
psllq
mov
mov
mov
xor
roll
push
fldcw
ljmp
lds
xchg
push
sbb
testl
add
lahf
jo
outsb
mov
test
aad
push
mov
loopne
clc
sbb
mov
ss
jne
push
hlt
sbb
stos
fistps
adc
mov
popf
xchg
push
out
xchg
fisubl
inc
enter
sbb
jns
cli
leave
jmp
xchg
mov
mov
mov
mov
in
in
push
jmp
mov
fwait
lods
add
push
jecxz
mov
mov
and
sti
pop
call
pop
pop
or
jno
mov
inc
push
xchg
push
add
clc
inc
mov
js
or
fsubs
mov
inc
adc
mov
fmull
mov
gs
push
pop
push
stos
sbb
adc
test
fildll
jg
jb
push
add
bound
mov
jmp
insb
sbb
pop
je
loope
pop
and
add
add
addl
dec
in
cmpl
pop
gs
daa
bound
lret
push
inc
pop
clc
std
jecxz
mov
pop
mov
jno
adc
sub
sti
jo
push
out
jo
fs
jg
int3
cmp
aad
out
xor
jae
jmp
imul
xchg
pxor
xchg
ljmp
xchg
rorl
jns
shrb
mov
push
fisttpl
xor
gs
xlat
dec
jnp
xchg
sub
outsl
outsl
xor
pusha
loopne
nop
test
addr16
fiadds
testb
cmp
js
cmp
jb
inc
add
scas
jge
mov
jg
mov
int
or
add
aaa
jae
scas
sub
dec
or
nop
mov
dec
out
lods
mov
add
std
and
pusha
sbbl
arpl
ds
inc
or
cwtl
mov
sbb
loope
iret
sbb
mov
add
or
or
dec
sub
ds
jbe
add
push
data16
push
sub
push
cld
dec
inc
push
mov
je
loop
add
mov
popf
cmpsb
jne
push
movsl
hlt
or
or
addb
adc
xor
fisttps
push
data16
stos
sub
cmp
inc
and
sub
divb
lcall
loop
sbb
sub
push
sbb
lahf
sub
sti
and
sbb
hlt
cmp
dec
sti
js
or
jg
in
stc
scas
clc
clc
cmp
out
hlt
jp
adc
test
cmp
sub
daa
sub
pop
xor
jno
jo
sbb
daa
mov
mov
jns
mov
aad
or
mov
data16
mov
testb
jl
xchg
pop
ret
daa
mov
dec
push
jnp
xchg
cmp
addr16
lret
push
push
inc
sub
mov
cs
jno
push
dec
pop
sbb
push
lcall
sbb
push
push
mov
in
dec
repnz
cmp
cmpb
out
inc
lock
in
add
inc
jle
and
mov
sub
out
clc
call
dec
aam
mov
cld
and
jns
mov
xor
add
add
lahf
stc
sbb
pop
imul
mov
cmp
stos
pop
push
ja,pt
cmp
xor
scas
push
push
jle
mov
leave
inc
mov
jge
mov
jg
dec
mov
mov
leave
cmpsb
leave
jb
xor
test
rcl
cmp
adc
cmp
push
es
mov
lret
stos
and
cmp
lret
dec
shll
lods
push
cmc
sahf
jl
or
ds
dec
pop
mov
outsl
outsl
outsb
pop
add
xchg
xor
cmp
jecxz
and
or
pop
das
cmp
out
mov
or
add
adc
mov
es
divl
and
inc
ja
lods
ds
arpl
les
lds
cmpsb
cld
fldz
sub
adc
loopne
in
xchg
mov
inc
inc
cmp
sbb
mov
xchg
push
leave
mov
in
stos
xor
aas
fcmove
pop
pusha
xor
xchg
sti
inc
adc
or
popf
fwait
cs
bound
stos
inc
inc
cmp
clc
popa
hlt
push
inc
mov
jae
jge
sbb
stc
sbb
mov
dec
es
pop
iret
mov
adc
pop
shl
push
sub
push
sbbl
insb
sub
clc
xor
jg
movsl
push
inc
pop
sbbb
movsb
xor
bound
cmp
aas
cmpsl
or
xchg
push
sbb
mov
sbb
jo
mov
adc
insl
jnp
loop
xor
lock
or
mov
pop
out
imul
sbb
stos
das
jmp
call
loope
bound
dec
mov
dec
popa
lods
ret
popa
sub
xchg
xchg
pusha
and
xchg
or
xchg
jmp
pushf
jae
jmp
lods
arpl
pop
or
les
addr16
dec
or
fwait
xor
pop
adc
aas
add
lret
cmpsb
adc
inc
xlat
sbb
mov
or
inc
sahf
xchg
bound
adc
jecxz
arpl
push
xchg
lahf
pop
pop
lock
mov
and
stos
int3
mov
and
faddl
fildl
sub
push
ret
sub
sub
fmul
mov
cmp
addr16
fmuls
mov
push
mov
movsl
cmc
out
push
pop
pushf
and
mov
addb
push
jb
xor
jne
insl
stos
mov
mov
scas
call
outsb
gs
dec
sbb
sbb
and
loopne
pushf
addl
lods
fsts
or
sahf
in
lds
das
cmpsb
shlb
cwtl
or
sub
dec
lret
or
jmp
adc
jo
out
cltd
pop
faddl
xor
jns
cmpl
or
cmp
cltd
cli
rcrl
cmp
pop
dec
js
dec
dec
sbb
hlt
imul
jmp
jo
cwtl
xor
rorb
inc
inc
add
adc
in
es
and
or
dec
sti
xlat
into
and
and
aam
mov
sub
ret
rcrb
gs
mov
mov
sub
xchg
popa
dec
xchg
movsl
jl
fldt
inc
pop
fistpl
inc
jge
pop
push
push
mov
mov
adc
pop
lret
push
pop
mov
popa
in
jg
fwait
and
xor
dec
into
mov
es
mov
repnz
mov
xchg
push
lods
in
fnstsw
mov
enter
xchg
sahf
sub
and
jae
jns
pop
push
cmpsb
dec
daa
inc
imul
movsb
sub
mov
inc
sbb
repnz
movsl
add
cltd
cmpsb
lods
jbe
dec
mov
aaa
push
jbe
dec
push
rcl
shl
fs
rorl
mov
mov
adc
ja
loop
bound
push
test
cmp
iret
xchg
or
pop
cmp
xor
add
loop
fsubr
cli
cli
push
cwtl
mov
dec
test
jmp
and
push
inc
push
fdivs
sbb
outsl
jbe
out
call
xchg
into
sbb
or
dec
test
push
jnp
mov
push
mov
pop
mov
fisttpll
push
hlt
pop
jns
sub
repz
scas
cmp
mov
orl
ja
xchg
fidivl
std
fidivrs
adc
sub
mov
mov
jle
xchg
sub
mov
add
cmp
inc
popa
lock
mov
loop
mov
fcompl
cmp
jge
pusha
test
stc
jnp
scas
iret
rorb
xor
lds
je
mov
imull
sub
sbb
xor
jl
outsl
mov
add
enter
push
lods
push
sub
test
and
mov
in
cld
mov
adc
lret
lahf
dec
rclb
push
xchg
rclb
cmp
mov
fs
dec
dec
dec
pop
aad
mov
mov
xchg
push
pop
outsb
xchg
lds
jb
push
iret
mov
push
inc
pushf
mov
xor
outsl
shlb
jmp
add
aaa
shll
dec
test
add
enter
in
and
jmp
call
xchg
mov
push
jle
fwait
or
sbb
adc
aas
inc
cmp
ja
enter
cmc
add
push
xlat
xor
test
push
cmp
scas
and
inc
shl
dec
flds
dec
add
add
cmp
jl
jl
sysenter
jp
sbb
rolb
lea
cmp
dec
jae
jo
jp
mov
adc
add
lea
cmp
out
sbb
sub
xlat
mov
gs
sbb
sub
xor
popf
sbb
ret
or
xchg
iret
sbb
or
mov
ds
cmp
lods
push
ret
rorb
or
sti
mov
ljmp
jg
roll
sub
test
mov
jecxz
pushf
adc
and
xor
fisttpll
pop
dec
inc
data16
sbbb
xor
shlb
sbb
repz
jge
and
inc
mov
loop
jno
pop
lock
mov
fcomi
out
lock
movlps
xchg
xchg
hlt
sbb
lea
mov
add
jp
clc
clc
cld
aas
or
cltd
lds
rcll
shl
jae
fiaddl
addr16
ja
testb
adc
pop
or
or
jle
pop
jnp
movsb
fidivl
das
mov
rol
test
mov
jmp
dec
push
cmp
mov
ret
mov
daa
cld
or
aad
jl
mov
jmp
stc
fists
dec
xorl
mov
cld
cmp
cmp
test
cltd
push
inc
dec
add
cmp
iret
jo
adc
cld
outsb
push
scas
push
sbb
cmp
fisubs
and
mov
jns
in
loopne
fcmovbe
out
das
pop
xcrypt-cbc
cmpsl
push
mull
or
sub
leave
inc
xchg
push
out
jbe
cmc
aad
nop
enter
mov
mov
cs
mov
mov
test
lds
jge
lods
cmp
adc
jne
mulb
fsubrl
lret
test
lods
sbb
movsb
jno
push
mov
xor
sbbb
jmp
aas
sbb
insl
icebp
scas
repnz
xchg
mov
inc
in
fstpt
shlb
dec
or
test
xchg
lock
mov
xchg
out
cs
xorb
inc
arpl
aam
jo
fisubl
mov
add
nop
cli
cmp
pop
or
fldenv
andb
mov
dec
loopne
fisttpll
jle
fnstsw
dec
test
hlt
subl
subb
loope
stos
test
xchg
pop
or
ljmp
lods
ja
xchg
stos
jg
cmpsb
xlat
lods
xlat
test
sbb
aad
popf
mov
aaa
xchg
dec
int3
xlat
mov
or
mov
push
pop
cli
int
sub
mov
push
lret
and
dec
dec
fs
push
sub
jbe
xchg
hlt
jp
leave
ret
insb
add
div
aas
pop
dec
and
inc
pop
mov
jno
inc
xchg
inc
shlb
sbb
push
jmp
ret
fwait
orl
mov
jle
push
sbb
cltd
imul
insb
pusha
repnz
push
mov
out
mov
sarb
adc
out
bound
sahf
in
jns
jmp
fisubs
or
fistl
xor
or
mov
rclb
adc
pop
gs
adc
and
and
adc
and
mov
push
push
call
pop
dec
daa
mov
push
pop
cli
into
call
mov
int3
inc
adc
add
std
inc
lock
js
in
pop
or
test
add
pop
aad
cld
or
lods
test
pop
cmpb
lock
rcll
jae
aad
in
pop
lods
jmp
jo
jmp
xchg
in
outsb
sub
add
sahf
movsl
pop
dec
mov
leave
hlt
pop
pop
sbb
jae
mov
sbb
and
or
push
pop
cmp
enter
sti
popf
call
pop
jle
adc
cmp
pop
adc
insl
mov
pop
xchg
and
lods
adc
mov
nop
lds
stc
dec
out
out
pop
adc
in
xchg
fidivrl
xchg
stc
cld
lahf
jno
lret
fcoml
dec
or
andl
scas
pop
jp
or
mov
pop
faddp
repnz
pop
movsb
xchg
repz
mov
loope
push
mov
cmp
mov
and
add
dec
mov
push
jno
mov
add
add
lds
stos
daa
mov
loope
sahf
inc
out
xor
sbb
dec
std
jbe
jae
jmp
mov
push
pop
cli
hlt
xchg
ja
xor
or
lods
fldt
inc
mov
shl
add
jbe
jecxz
xor
aas
mov
cli
outsb
aam
lahf
jb
or
mov
jl
mov
arpl
jns
fbstp
jle
pop
dec
and
or
repnz
fsts
sti
adc
lods
sub
repnz
les
push
ds
les
cmp
dec
push
mov
popf
sbb
xchg
jle
scas
jbe
cmp
add
sti
sti
sbb
int
inc
mov
leave
popf
rol
lock
adc
sub
imul
xchg
lea
dec
or
hlt
sti
arpl
sahf
mov
in
shrb
out
mov
mov
push
scas
inc
mov
pop
mov
les
aaa
out
cmovg
movsb
sub
xchg
xchg
out
lods
fwait
std
sarb
popa
dec
aas
leave
xchg
pop
fnstsw
xor
and
rcr
jns
mov
out
xchg
inc
loope
dec
mov
cmp
sub
clc
adc
sbb
leave
mov
fwait
loop
xchg
push
imul
inc
xchg
test
mov
push
outsl
add
inc
test
cmp
or
mov
sub
pop
arpl
lret
cwtl
jge
inc
and
imul
arpl
das
in
dec
ficompl
addr16
sub
xchg
xchg
mov
inc
insl
pop
mov
fs
ss
cmp
and
mov
pop
iret
orl
mov
xor
scas
cmpsl
mov
fisubs
mov
loop
xlat
jecxz
mov
js
orb
and
std
mov
in
stos
repz
mov
sbb
hlt
xor
ja
jge
sbb
mov
out
into
sti
dec
push
inc
mov
push
push
sbb
lret
xor
not
sbb
movsl
xchg
nop
lods
or
inc
enter
mov
push
int3
jb
sub
test
int
cs
jns
mov
mov
in
es
dec
sti
inc
arpl
xor
jbe
lods
movsl
aad
mov
dec
jmp
outsl
pop
push
movsl
mov
pop
sbb
jnp
js
xorl
int3
push
inc
add
dec
mov
jno
pop
fstps
dec
add
sub
inc
mov
fadds
lret
cmc
push
rorl
int
fwait
or
out
inc
dec
rcl
and
rclb
cmp
rcrl
fildll
cmc
ja
arpl
and
cmp
pop
int3
push
xchg
into
cwtl
fmuls
xor
loopne
std
mov
popl
fimuls
pop
mov
dec
add
pushf
incb
inc
test
xchg
test
sahf
cmp
insb
mov
push
je
rcr
mov
xchg
xlat
test
xor
les
adc
cmp
adc
inc
push
pushf
nop
or
shlb
jmp
jle
test
adc
xor
mov
or
mov
clc
bound
sub
or
mov
pop
fisttps
pushf
fld
movsb
stos
and
inc
test
push
repz
jle
sub
iret
mov
inc
xchg
fbstp
and
jg
arpl
jno
dec
add
lock
adc
rclb
mov
out
xchg
add
pop
insl
jl
mov
es
outsb
ljmp
pop
js
mov
les
xchg
bound
loop
ret
bound
cmp
jp
cmp
xchg
push
popf
test
shrb
in
xor
fiaddl
fs
cltd
push
jle
xor
add
in
xor
cltd
fstpt
mov
dec
outsl
icebp
or
mov
mov
aas
adc
push
icebp
mov
test
int3
pop
jle
adc
hlt
pop
xchg
aas
mov
cmpsl
adc
jo
cmp
lret
sub
dec
adcl
jle
xchg
sbb
lds
cmp
add
push
sbbl
inc
nop
stos
es
jl
aas
rorb
fidivrs
lret
dec
and
outsl
sbb
lea
roll
imul
insl
sbb
sub
mov
cmpsb
arpl
cwtl
int
in
ret
lret
push
mov
push
inc
mov
aas
imul
out
or
pop
mov
stc
mov
dec
nop
mov
les
mov
adc
adc
or
cmp
dec
ja
push
popf
push
mov
ss
cmp
fs
hlt
adc
and
push
std
enter
xchg
pop
cltd
outsb
adc
mov
les
and
in
repz
sbbb
inc
aas
scas
mov
repz
pop
inc
inc
add
cmp
imul
cmp
xor
xchg
pusha
cltd
push
outsl
mov
cmc
pop
or
sbbb
dec
outsl
scas
dec
push
neg
mov
inc
lods
dec
cmp
add
push
ret
and
pop
inc
push
cmp
pop
fsub
jp
and
fmuls
push
arpl
in
mov
lahf
cmc
stos
xchg
adc
lahf
jmp
push
xchg
jbe
fldl2t
lods
sub
mov
mov
sbb
cmp
ds
sbb
pop
lea
jp
mov
jp
jmp
lcall
aam
push
pop
adc
mov
sbb
shr
mov
sbb
dec
lods
test
je
test
call
stos
ret
lahf
fidivrs
in
std
sub
ret
xchg
rcr
xchg
test
lret
inc
and
loope
inc
mov
jp
shlb
and
pop
push
xor
data16
fistpll
js
sub
pop
insb
dec
call
es
cli
rcrl
jge
je
out
dec
scas
xchg
or
nop
cwtl
sbb
imul
xor
or
arpl
insl
xor
push
add
adc
jae
out
inc
imul
jnp
xchg
and
inc
jmp
mov
pop
cmp
out
push
adc
aas
xor
and
sbb
out
inc
dec
lcall
ss
out
sub
lods
pusha
sub
clc
nop
xchg
ja,pn
push
fwait
sbb
pop
into
xchg
fcompl
call
cmp
mov
mov
out
cwtl
mov
sbb
sub
jnp
cwtl
push
adc
add
popa
mov
xor
mov
push
jg
cltd
sub
test
and
or
test
andl
dec
sti
cmp
xchg
add
int
sbb
mov
leave
jmp
out
out
shll
inc
loope
int
adc
and
add
cld
movsb
push
dec
aam
and
or
push
stos
jmp
xchg
jg
sub
int3
repnz
enter
into
push
rol
test
mov
lret
outsb
xchg
pusha
les
mov
add
push
loopne
mov
xor
or
dec
jbe
or
xchg
adc
dec
les
or
adc
push
mov
jb
into
pop
sbb
jp
cmpsb
sarl
xchg
ret
fs
imul
dec
jb
lods
inc
and
adc
mov
mov
jle
pop
sbb
inc
push
push
xchg
xchg
xlat
loopne
sahf
outsl
fwait
push
test
xchg
test
jnp
sbb
jnp
aam
or
cmc
sub
or
sahf
sub
jg
pop
xchg
xlat
mov
jg
push
hlt
test
scas
or
aas
and
xchg
adc
lahf
pop
xlat
mov
mov
xor
pop
cwtl
inc
pop
adc
adc
fbld
lahf
sbb
sbb
fnstcw
movsl
shll
xor
popa
sub
xchg
pop
pop
dec
stos
outsl
loop
pop
subb
aam
or
lret
test
cmc
mov
neg
gs
xchg
and
add
sbb
push
dec
pop
jmp
arpl
jae
xchg
pusha
bound
lods
loop
sbb
push
push
xchg
jb
xor
sbb
sbb
jno
stc
ret
push
dec
int
ljmp
push
push
mov
jle
fwait
icebp
cmp
nop
mov
pushf
ds
imul
and
xchg
aad
jnp
jae
jmp
mov
push
pop
dec
imul
mov
dec
cmpsl
jmp
mov
mov
cld
mov
dec
sbb
mov
mov
and
shrl
jp
daa
sbb
rol
jb
in
int3
ja
inc
jne
xchg
pop
mov
pop
fcoms
fisttps
xchg
pop
mov
in
mov
fldt
pop
cmpsl
add
test
lods
mov
ficomps
fwait
dec
mov
jne
xor
cld
adc
hlt
push
or
mov
outsl
loopne
pop
push
pop
adc
popf
cmp
mov
pop
xlat
dec
add
flds
imul
fcoml
cmp
add
nop
xor
ja
loope
or
xor
and
lret
jne
pop
sbb
cmp
pushf
mov
in
or
inc
pop
pop
inc
mov
add
test
add
push
inc
adc
sbb
jle
and
lahf
test
out
cmp
jae
jns
test
jl
js
mov
movsb
mov
repz
leave
mov
js
lea
sub
shl
mov
sbb
cmp
xchg
pop
or
push
sbb
mov
and
mov
push
outsl
add
or
pop
outsl
popf
cmpsb
sub
jge
mov
insl
push
dec
sub
dec
push
push
pop
lret
popf
inc
je
xchg
inc
pop
pop
repz
nop
and
xchg
lret
xchg
cli
dec
loopne
mov
adc
xchg
inc
sbb
or
jmp
stc
in
cwtl
dec
fsts
sar
loopne
movsb
icebp
xchg
mov
mov
inc
or
mov
mov
lods
mov
and
mov
xchg
or
lahf
test
or
icebp
fsubr
xchg
sub
pop
lcall
faddl
lahf
fnstsw
shr
mov
pop
sub
shll
pop
hlt
test
jo,pt
cmp
xchg
into
dec
pop
inc
loop
jo
xchg
add
loop
lret
sbb
and
pop
or
xor
cmp
testb
pop
stos
cwtl
enter
rcrb
cmp
jae
outsb
sub
popf
sbb
cmp
push
sub
cld
lret
cwtl
je
in
inc
test
es
rcrl
mov
mov
add
out
mov
stc
cmpsb
dec
leave
sub
mov
dec
sbb
xor
dec
push
ss
test
inc
fiadds
jg
loopne
ja
lock
loop
xchg
push
pop
loopne
inc
iret
scas
xchg
fbstp
push
lcall
or
lock
leave
enter
mov
loop
in
sub
and
fmul
in
aad
ret
iret
mov
or
cmp
ljmp
or
jmp
ret
jecxz
push
xor
sbbl
add
jge
and
push
addr16
push
int
adc
iret
adc
push
jle
xchg
shr
pop
shrb
insl
add
add
mov
xor
or
pop
mov
adc
mov
pop
pop
decl
lret
scas
cmp
lret
mov
repnz
fdivp
scas
mov
in
adc
or
jg
movsb
inc
mov
jmp
mov
fistl
fs
in
jo
ds
bound
in
cltd
lret
cwtl
fistpl
int
mov
imul
xchg
rcr
or
pop
int
mov
pop
mov
lahf
pop
inc
and
inc
outsl
scas
xchg
test
cmp
xchg
mov
jb
arpl
lods
jmp
bnd
das
sti
cmpsl
lret
in
add
cltd
or
movsl
or
jecxz
jl
sbb
inc
mov
jno
mov
jno
push
sarb
push
sub
hlt
loopne
out
mov
mov
out
jne
cmpsl
xor
adc
push
sbb
repnz
cmp
lock
pop
cmpsb
leave
sbb
dec
pop
jle
and
xor
mov
icebp
push
data16
or
outsb
sbb
loop
sbb
call
push
mov
mov
scas
mov
mov
push
shl
stos
sub
sbb
dec
mov
pop
pop
sbb
pop
js
xlat
mov
mov
xchg
in
rorl
xor
fcomp
movsb
in
mov
xchg
sbb
test
inc
cmp
add
out
mov
imul
mov
add
add
fs
adc
or
aam
dec
stc
je
and
mov
bound
popa
jae
xchg
adc
xor
sub
adc
sbb
popa
rorl
dec
in
ds
stos
add
pop
fmuls
xchg
xor
add
loop
shr
push
jnp
cmpsb
movsb
shrb
xor
mov
xlat
roll
js
or
push
frstor
ficomps
daa
xchg
push
cmp
in
in
or
sub
add
addr16
dec
push
movsl
and
dec
out
inc
or
lods
sub
mov
outsl
es
inc
ret
mov
stos
movsl
aad
loopne
std
fsub
xorl
mov
lods
addb
pop
xor
and
pop
xor
push
cmp
mov
in
lea
aaa
addl
and
or
or
fwait
fwait
test
pop
adc
push
dec
and
aas
jmp
stos
cld
push
kmovw
fs
adc
adc
loopne
sub
mov
mov
adc
jno
dec
xchg
clc
rorb
dec
cmpsb
hlt
lods
sti
rcrb
mov
aas
push
pop
jns
aas
inc
add
popf
insb
xor
orb
cmp
insb
in
jmp
out
popa
mov
sbb
sbb
mov
lods
mov
pop
dec
xchg
call
test
jmp
mov
daa
aam
jo
cmc
ret
incl
and
out
inc
das
subb
mov
in
add
pop
xchg
jecxz
stc
divb
and
out
pop
add
pop
dec
jo
ss
cmc
mov
test
pop
sbb
push
aas
test
add
or
and
inc
inc
adc
pop
inc
and
pusha
out
std
and
mov
xchg
jne
sub
xchg
popf
into
cmp
insb
dec
mov
mov
lods
jnp
ds
jge
inc
dec
pop
mov
hlt
call
jmp
mov
cmp
pushf
xchg
and
mov
xchg
xor
xor
stc
inc
lock
mov
pop
scas
cmp
dec
jl
nop
into
nop
js
push
lods
add
cmpsl
nop
cmp
dec
sti
push
aas
popl
stos
xchg
sub
cmpsb
xor
clc
pop
and
mov
sbb
jl
and
mov
sub
scas
aad
xchg
stc
stos
std
lret
ss
movsl
xchg
imul
and
mov
push
xor
ror
xor
push
mov
sub
and
add
cmpl
xor
scas
cmpsl
xlat
inc
sbb
or
nop
scas
and
push
jne
mov
add
sarb
sub
js
adc
jle
mov
cmpsl
iret
mov
inc
mov
fistl
xor
je
int
sahf
sub
movsl
pusha
cmc
in
mov
push
out
inc
fadd
repz
mov
ficoms
iret
xor
popl
xchg
cmp
or
sub
ret
stc
gs
repnz
push
sub
sub
dec
push
dec
cltd
clc
xor
les
push
sbb
or
mov
jl
and
add
xchg
cmp
cmp
inc
call
mov
mov
cmpsl
fsubrs
jnp
movsb
sub
out
test
outsl
mov
mov
outsb
sbb
fwait
xor
xchg
mov
dec
inc
or
icebp
cmp
cmc
out
andb
add
xchg
ja
fimull
loop
inc
sub
stos
xor
push
into
jbe
dec
xor
sub
xchg
sbb
int
daa
dec
out
push
mov
les
test
pminub
call
leave
aad
shrb
mov
mov
mov
mov
jbe
inc
daa
daa
jmp
fidivrl
sub
popa
fistps
jae
adc
inc
in
fimull
adc
xlat
outsb
hlt
pop
sbbb
add
data16
jge
jbe,pt
or
and
inc
cwtl
shll
fistl
jno
xchg
xlat
outsl
ljmp
xor
imulb
sbb
xchg
mov
rclb
cld
pop
pushf
cld
test
mov
leave
cltd
cmp
mov
sub
lahf
fcompl
push
ds
mov
mov
mov
mov
hlt
fstpt
adc
fs
popa
jg
add
sbb
ja
jbe
loopne
arpl
mov
pop
stc
add
movsb
mov
and
sbb
daa
lret
fmull
lret
adc
enter
ljmp
daa
dec
test
in
and
mov
pop
es
mov
loopne
and
ja
cmp
cmp
dec
mov
pop
leave
inc
sbb
inc
cs
in
push
sbb
xchg
sub
mov
out
in
loope
xchg
or
adc
jecxz
hlt
lock
shrl
and
dec
aad
leave
imul
push
cmp
stos
jno
test
xchg
icebp
sub
aam
pop
aad
push
sahf
pop
clc
mov
add
fisubrs
addr16
push
loop
push
and
and
out
mov
or
insl
aaa
hlt
je
mov
cltd
arpl
and
or
and
imul
hlt
mov
jnp
inc
jo
mov
mov
adc
icebp
pusha
shll
jbe
ret
mov
adc
mov
jne
call
out
mov
pusha
mov
in
jb
xchg
pushf
or
test
cmp
orl
mov
mov
jnp
in
inc
mov
mov
shlb
testl
mov
pop
xor
mov
inc
stos
mov
mov
xchg
pop
push
leave
mov
adcb
in
test
outsb
mov
insl
std
cli
xor
dec
je
rorl
out
jo
push
daa
dec
ja
inc
pushf
mov
dec
mov
mov
add
scas
sbb
popl
add
push
xlat
jge
sbb
mov
or
js
push
xor
mov
repnz
fs
shl
cmpsl
jnp
fdivrp
mov
adc
xchg
out
adc
push
pop
cmp
in
les
jle
mov
in
sbb
outsb
jbe
js
outsl
cmpsb
xchg
jl
in
shl
xchg
stos
mov
pop
fstpt
lock
mov
push
push
dec
movl
cltd
dec
xor
fldl
add
add
popa
pop
inc
out
or
aaa
lret
mov
pusha
push
cmp
xchg
xchg
pop
xchg
sti
sub
jno
adc
movsl
or
jbe
and
popf
jb
sarb
fdivp
and
pop
mov
mov
das
mov
shrl
inc
mov
jl
xchg
cmp
sti
jge
lods
loopne
icebp
into
repnz
inc
inc
push
lret
push
loope
or
roll
push
lret
cmp
cmpsl
pop
cmp
xor
cmpsl
mov
and
mov
xor
mov
or
clc
and
push
xchg
mov
out
sbb
test
add
loop
adc
je
push
pop
clc
dec
mov
xchg
je
decb
or
push
add
movl
mov
outsb
inc
or
push
jb
cmp
repnz
sub
lock
imul
mov
fcmovne
in
or
fnstsw
mov
add
cmp
add
xchg
data16
xor
out
push
lods
imul
lret
cld
clc
jl
push
imul
cwtl
stos
popf
and
add
mov
fildll
popa
ss
in
push
popf
aas
cmc
lret
outsb
je
mov
pushf
sbb
xchg
imul
mov
adc
push
xor
add
xor
sti
cmp
sub
cli
ret
repz
test
pop
mov
loop
jne
cmp
dec
pop
js
lea
icebp
sub
dec
jge
pop
cli
dec
dec
or
rorl
lret
lods
fdivrp
or
jmp
popa
test
sub
lds
lret
adc
les
cvtps2pi
lret
pushf
fsubl
aas
test
out
mov
call
or
lea
dec
in
mov
orl
cltd
lea
or
lret
fsubrs
push
inc
jbe
int3
rcl
lds
add
fimuls
ds
ret
jno
divb
out
jnp
push
data16
or
repz
orl
mov
jecxz
cmc
adc
inc
pop
scas
aas
or
sbb
cs
and
push
lret
lret
push
push
imul
mov
mov
mov
shl
mov
inc
mov
dec
jl
cmp
repnz
pop
jae
mov
cmpsl
aaa
xchg
xor
mov
ss
pushf
and
push
dec
cmpb
je
lret
addb
fisubrs
inc
mov
fcoms
push
fadds
movsb
mov
loop
adcl
movb
clc
testl
dec
call
xchg
movsb
stos
int3
jbe
lahf
pop
rol
lahf
mov
mov
popa
push
cmpsb
jp
imul
shld
push
ret
mov
xor
and
sub
repz
adc
fwait
xchg
push
mov
stc
mov
and
test
das
fstl
stos
push
lea
aam
or
push
jae
sbb
popf
mov
scas
out
pop
push
das
sbb
jmp
and
cs
push
mov
mov
adc
cmp
cmp
jp
cmp
popa
add
lret
dec
push
add
mov
xchg
test
cmp
scas
ss
sbb
push
insl
shl
mov
inc
fwait
dec
scas
mov
pusha
push
mov
jno
aad
insl
shll
loopne
inc
loopne
cmovo
imul
mov
push
outsb
xor
inc
push
call
cltd
jae
mov
jp
mov
lock
pop
stos
and
das
dec
push
and
mov
xchg
xchg
mov
jge
lcall
mov
or
mov
push
out
iret
ds
fwait
iret
jns
rolb
adc
sub
shll
jmp
test
cmc
jnp
xor
loopne
adc
and
sub
in
movsl
popa
imul
out
call
js
xor
mov
stos
sub
add
mov
pop
cs
imul
xchg
popa
test
call
cmp
rcrl
call
arpl
add
sub
imul
ja
or
out
or
and
sbb
in
mov
dec
nop
adc
mov
dec
mov
cmc
gs
add
or
lret
jge
mov
pop
push
cmpsb
xor
data16
push
imul
pop
jno
or
push
or
loope
push
push
lahf
cmpb
push
loope
push
fldl2e
xor
jbe
sub
jb
stos
cmp
in
loope
daa
xchg
sub
test
aam
xor
pop
and
cmpl
inc
xchg
popf
jp
pop
fisubs
push
and
mov
jp
push
lret
cmpb
xchg
sub
mov
dec
mov
inc
inc
aad
aas
shrl
xor
or
dec
loop
dec
outsb
test
or
mov
lea
cmc
xchg
jmp
adc
aad
out
idivl
mov
rcrb
or
lea
cltd
cmp
aad
sub
push
test
mov
movsb
mov
push
pop
add
inc
out
xor
jo
insb
js
lea
jge
popa
pop
adc
sub
fsubrs
cmp
pop
add
arpl
mov
out
addr16
mov
int
add
sub
fs
into
dec
add
inc
xor
lcall
mov
sub
cld
cmp
mov
mov
scas
scas
push
mov
jge
ja
and
dec
push
stc
jle
and
jge
xlat
addl
arpl
xchg
lea
or
loop
stos
push
lock
int3
and
dec
jl
clc
fiadds
cmp
in
dec
in
jle
ficoms
jo
pop
mov
add
dec
stc
cmc
push
push
mov
lea
dec
mov
insl
outsb
std
out
inc
ret
xorb
lods
mov
pushf
lods
sub
stos
imul
sbb
mov
dec
add
hlt
dec
inc
sahf
pop
cli
inc
lods
sar
jno
xor
mov
imul
or
stc
xor
mov
imul
mov
mov
je
std
xchg
mov
aas
aas
test
rcl
leave
test
adc
sub
lods
cmc
jbe
mov
outsl
lods
adc
out
xchg
loop
push
sub
mov
loope
mov
shl
das
aam
nop
inc
adc
clc
js
dec
push
loope
lods
pop
orb
aad
push
jns
xchg
cmp
ss
pop
stc
sbb
shll
and
ds
aad
scas
push
mov
sub
mov
movsb
repnz
xchg
std
roll
pop
push
inc
hlt
add
jne
lea
pop
push
adc
mov
push
out
shrb
fstpt
out
push
jns
jg
and
push
adc
push
push
stos
or
cmp
xor
xchg
dec
sbb
inc
xlat
pop
and
adc
mov
cmp
push
insl
pop
mov
jno
rorl
aaa
mov
les
add
mov
clc
aaa
add
mov
xor
sbb
xchg
inc
cmpb
aas
movb
sbb
repnz
xor
or
lret
xchg
outsb
jb
jae
loop
or
mov
idivl
roll
jecxz
cs
sti
mov
gs
sbb
cmpsb
cmp
sarb
inc
es
fwait
mov
push
mov
repz
mov
rolb
cmp
lahf
and
test
push
icebp
adc
add
xor
iret
push
push
in
and
push
inc
add
sbb
sub
mov
fisttpl
into
fdiv
push
lcall
mov
rcll
out
int3
sbb
dec
mov
and
dec
stos
cmp
adc
inc
pop
fprem
pushf
dec
adc
ret
icebp
pop
fistps
cwtl
sbb
xchg
mov
movsl
xor
adc
rorb
in
or
cmpl
sub
fs
inc
les
jno
xchg
clc
xchg
popf
xor
in
ficomps
mov
movsb
cli
dec
xor
movb
sahf
rolb
adc
mov
xor
xor
ja
pop
fadd
sbb
ds
dec
decl
loop
nop
or
sub
loop
push
or
in
sbb
shrl
add
es
push
sbb
sub
iret
inc
cmpsb
aam
xor
xorl
fmuls
sub
imul
or
inc
push
inc
neg
sub
and
add
out
or
pop
xchg
ret
loope
pop
in
dec
cs
daa
xchg
test
sbb
or
xchg
mov
imul
test
outsl
push
repz
xchg
xchg
and
mov
sub
mov
pusha
std
lods
push
push
mov
cmp
pop
mov
mov
pop
adc
pop
pop
mov
fsubrs
cs
in
addr16
ret
fadds
rorl
and
push
int
ljmp
dec
push
pop
sub
jmp
lods
movsb
dec
mov
hlt
dec
jge
imul
adc
nop
mov
pusha
jl
push
fwait
dec
mov
out
and
mov
pop
or
cmp
shrl
mov
in
fdivrp
mov
vpandn
xchg
jo
mov
mov
xor
cmp
out
mov
sbb
daa
mov
and
insb
and
test
xor
pop
mov
fcomps
mov
mov
dec
jae
sbbb
cwtl
cmp
pop
mov
push
xor
lds
rcrb
outsl
sbb
add
adc
out
xor
cwtl
hlt
push
sbb
sbb
imul
dec
push
ljmp
out
cld
xchg
pop
push
sbb
or
and
stc
xor
mov
pop
pop
lcall
fsub
mov
dec
fbld
push
mov
mov
dec
repnz
lahf
xchg
enter
clc
test
das
loop
push
leave
stos
xlat
repnz
pusha
push
sub
clc
and
jns
out
fs
mov
shlb
lock
out
shrl
stc
push
loop
add
pop
subl
sub
cld
adc
jns
inc
fisubrs
add
fldcw
das
add
or
shlb
insl
adc
out
dec
outsb
mov
push
mov
es
pop
mov
add
shll
adc
xchg
mov
fimuls
je
fldl
dec
lret
lods
in
test
pop
in
jbe
pop
loope
aas
enter
mov
xor
sahf
sub
mov
out
and
js
and
sub
clc
jno
dec
push
xchg
pop
push
pushf
into
popf
cs
lds
adc
bound
loope
iret
cmp
insb
lock
cmc
and
and
lods
pop
icebp
xchg
adc
insb
or
push
inc
sub
xchg
jns
jg
cli
mov
inc
xchg
jae
int3
mov
out
or
adc
clc
ja
inc
out
and
rolb
fbld
inc
cmp
sar
cmp
andl
mov
stos
jmp
dec
push
mov
push
and
adc
sbb
jns
adc
dec
xchg
cld
bound
cmpsb
push
adc
xchg
cli
push
pop
stos
incb
jne
shll
add
mov
push
test
or
pop
pop
stc
xchg
cs
pop
cmpsl
add
pop
mov
movsb
mov
sub
adc
arpl
push
inc
aaa
pop
cltd
ljmp
test
pop
cmp
fs
sub
push
xorb
jl
mov
jae
mov
sub
adc
out
imul
mov
mov
shlb
xchg
dec
mov
add
int
sbb
or
mov
xchg
dec
adc
loope
sarb
cmp
pop
xchg
movsl
push
ss
adc
and
into
call
jb
test
jmp
and
or
leave
dec
jmp
xorb
inc
aad
push
aas
movsb
sub
mov
mov
inc
or
mulb
les
rcll
into
sbb
xor
xchg
inc
mov
mov
mov
test
mov
shrl
arpl
pop
push
leave
push
lahf
stc
in
mov
call
je
mov
or
xchg
inc
cmp
jmp
push
dec
icebp
shlb
push
pop
movsl
cltd
pop
pop
cmc
fwait
sbb
mov
xchg
sub
lcall
and
or
stos
pop
sub
flds
jge
fs
jmp
xchg
mov
jne
stc
jecxz
add
andl
push
dec
pop
and
out
mov
xor
mov
mov
gs
sub
outsl
pop
daa
test
inc
mov
cs
stos
mov
sub
jnp
mov
imul
ja
int3
push
lcall
jle
lods
jmp
adc
out
inc
call
pop
adc
clc
sar
dec
sbb
js
ret
das
dec
dec
stc
loope
fnstsw
jmp
sub
gs
out
mov
cmp
dec
pop
int
jge
inc
cld
daa
pop
mov
jne
jge
and
xchg
mov
sbb
push
sub
adc
loopne
xchg
sbb
pop
dec
lds
jecxz
arpl
and
cli
jecxz
xor
pusha
dec
inc
test
mov
mov
fldenv
movsb
sar
pop
add
ss
lods
das
mov
and
or
add
js
pop
lods
mov
pop
out
in
xchg
sbb
fwait
repnz
mov
adc
into
subl
outsb
movsb
sbb
ret
ficoml
adcl
sub
pop
push
test
adc
ret
sbb
push
jo
outsl
adc
ljmp
xchg
pop
jmp
lods
mov
hlt
aam
and
sbb
add
xchg
out
xchg
sbb
jmp
sti
outsb
repnz
cmp
xor
and
cli
daa
movsb
and
push
jo
adc
cmp
pop
add
adc
jo
sbb
or
dec
mov
jmp
sbb
cltd
cmc
add
addr16
sbbb
xchg
or
pushf
xchg
aas
jb
ret
fwait
xchg
mov
lea
mov
cmpsb
jp
in
push
sub
imul
jg
ja
imul
add
cmpsl
nop
jbe
sbb
inc
xchg
data16
jnp
popf
fimuls
iret
sub
push
icebp
fcoms
push
test
cmpb
push
outsb
stc
jmp
sub
popa
dec
push
loope
jo
sbb
xor
cmp
dec
fsubrl
dec
fwait
inc
push
loope
loop
push
or
jge
shlb
add
mov
clc
mov
add
mov
fbstp
xorl
xlat
outsl
jmp
jp
adc
lret
inc
dec
sbb
fstpt
mov
xor
cmp
or
packssdw
aas
dec
xor
sub
cmpsb
jge
xor
rcrl
lahf
sub
pop
add
call
sbb
outsb
jb
shlb
xchg
mov
popa
call
loop
loope
fbstp
pop
loopne
ss
sbbl
in
clc
lods
xor
xor
leave
adc
sbb
lock
xlat
mov
lahf
nop
sub
out
lods
push
inc
pop
inc
cltd
adc
mov
std
lods
jle
jno
dec
aas
aam
int3
jle
pop
push
jmp
cmp
mov
leave
jbe
xor
jp
cmp
dec
pop
fsubrp
test
imul
sub
movsb
rorl
sti
jnp
inc
sub
stos
in
cmp
dec
lods
mov
cld
and
mov
push
dec
jne
pop
cmp
inc
jo
test
test
cmp
rclb
addr16
in
add
mov
pop
lret
jno
stos
mov
inc
jg
and
sbb
icebp
iret
lods
inc
insb
or
imul
or
adc
mov
and
shrl
mov
out
outsl
aaa
push
lret
fs
dec
divl
enter
sysenter
cli
mov
jae
fisubrl
or
cmc
lods
pop
clc
int3
xor
fistps
and
std
mulb
cmp
sbb
movb
xor
dec
sub
cld
das
jmp
xor
xchg
clc
lods
cmp
add
lret
std
mov
dec
sub
dec
mov
mov
sub
out
inc
sbb
fildl
adc
in
cmp
push
pop
ret
and
cmc
les
sbb
pop
test
adc
push
and
jg
rcrl
repz
nop
out
aas
push
jne
xchg
addr16
dec
scas
aam
movntps
gs
or
in
jb
sbb
movsb
jge
jnp
pop
cmc
xor
lret
cwtl
les
sub
arpl
dec
mov
call
push
fisubrl
push
cwtl
xchg
inc
and
das
repnz
dec
notb
xchg
pop
push
push
andl
fsub
cli
cltd
adc
xchg
scas
out
cld
outsb
push
xchg
mov
push
js
addl
mov
shlb
aad
lock
mov
mov
mov
mov
jg
imul
cs
mov
ret
fld
cld
call
mov
or
mov
fcmovb
inc
xchg
jp
inc
and
popf
shll
mov
out
mov
sub
fiadds
push
add
push
mov
mov
pusha
mov
inc
xchg
aas
enter
xchg
dec
xchg
cltd
dec
in
dec
mov
mull
cmp
adc
xchg
fcompl
popf
dec
lret
or
imul
jg
xchg
sub
loope
cmpsb
xor
pop
xor
loopne
xchg
arpl
xchg
push
pop
mov
mov
cli
pop
insb
xor
mov
jo
hlt
pop
lods
sbb
jle
roll
loopne
jp
sub
dec
loop
les
mov
test
scas
xor
scas
xor
js
cmp
pop
iret
rolb
addr16
shlb
je
call
jnp
aam
jmp
dec
xor
je
mov
data16
addr16
rcll
sbb
jb
xchg
xchg
cwtl
out
aas
push
cwtl
or
cwtl
cmp
mov
cltd
add
pop
std
push
pop
or
test
loopne
popf
mov
das
cli
pop
pop
jp
out
imul
inc
cmp
mov
loopne
mov
sbb
pop
test
setg
insb
cmp
pop
push
cmpsl
and
and
add
aaa
outsl
pop
xor
cmpsl
test
testb
add
cmpsb
in
mov
jbe
stos
mov
mul
adc
sub
mov
jge
jns
xchg
mov
pop
push
addr16
rcrb
test
mov
outsb
push
mov
loopne
sbb
pop
pop
ret
insl
cld
sub
call
shl
cmp
mov
int3
mov
shll
push
ja
add
add
out
pop
or
movsb
in
mov
and
adc
mov
movsb
fwait
push
push
or
xchg
shll
or
and
inc
xchg
and
mov
clc
mov
rcrl
shrl
adc
lods
lods
fldenv
lcall
xor
mov
movsl
jecxz
inc
xchg
sub
dec
aaa
int
push
dec
nop
pushf
jge
xor
scas
xchg
sub
jecxz
jnp
lahf
push
or
shlb
leave
scas
xchg
ret
addl
cli
push
inc
pop
sbb
in
dec
adc
dec
inc
or
mov
decb
mov
hlt
mov
loop
into
pop
cmpsl
jo
add
mov
aad
dec
stos
jp
stc
adcb
dec
and
es
dec
jae
or
mov
fwait
xor
sub
inc
aaa
mov
and
frstor
push
shlb
sub
iret
mov
xor
inc
fs
sub
mov
daa
jle
push
mov
inc
stos
movb
cmpsl
mov
popf
mov
repnz
fimull
sub
shl
xchg
xor
pop
lock
ret
shll
loope
fisubs
inc
es
or
lahf
push
xchg
mov
pop
mov
cmp
xchg
jnp
xor
aam
nop
pcmpeqd
and
sti
dec
mov
aad
out
movsl
push
inc
xor
inc
jmp
mov
iret
ljmp
test
sub
lahf
ffree
mov
inc
sbb
sbb
mov
xchg
sub
ret
test
loopne
and
dec
xchg
inc
adc
pop
pop
jp
ja
cs
out
jmp
pop
add
dec
adc
stos
fstps
jmp
add
aas
imul
inc
loop
dec
lds
mov
fidivs
push
arpl
adc
dec
mov
sub
cmpsl
inc
lock
jg
sbbl
fisttpl
fldt
popa
pop
xlat
xlat
mov
les
out
stc
pusha
mov
es
xchg
mov
imul
jmp
mov
test
xchg
or
je
inc
mov
cmp
addr16
mov
repnz
out
je
xor
jb
inc
lahf
gs
loop
push
adc
cmp
mov
jge
mov
mov
insl
jecxz
or
mov
out
lods
fmuls
cmpl
sahf
insl
cmp
stc
pop
adc
cs
sarl
cld
loope
mov
je
mov
or
nop
aam
push
js
aas
negl
xor
adc
pop
lods
push
sarb
inc
out
pushf
in
shll
or
bound
imul
stc
sti
std
adc
push
aas
flds
imul
leave
sbb
xchg
xor
negl
js
cltd
jne
into
mov
xchg
cmp
rol
mulb
dec
leave
pop
jg
int3
xchg
inc
fsubrl
lcall
jge
push
pop
dec
mov
fwait
push
inc
ljmp
lods
mov
jp
xlat
xchg
xor
test
mov
mov
inc
pop
cmp
or
xor
dec
in
and
inc
jno
mov
sub
mov
in
repnz
repz
sub
and
inc
stc
inc
sbbl
jle
std
dec
in
inc
mov
push
mov
mov
xor
xchg
jg
in
pop
movsb
or
dec
in
clc
mov
int3
aam
or
push
mov
fisubrs
fmuls
sub
pop
inc
and
pop
mov
cwtl
cmpsb
subb
sbb
int3
pushf
xor
dec
rcll
bnd
aas
mov
mov
push
xor
outsl
mov
aas
pop
or
xchg
insb
mov
inc
scas
in
xchg
cmc
and
mov
push
mov
jae
iret
into
lods
aad
xor
inc
repz
lret
mov
inc
clc
add
lock
les
mov
je
sbb
dec
and
mov
inc
stc
mov
dec
jmp
lahf
sti
popa
adc
xchg
sarl
sbb
push
loop
lds
in
push
test
xor
insb
adc
mov
mov
les
mov
andb
ja
lock
test
orl
ljmp
dec
testl
xor
cwtl
sbb
into
add
int3
das
mull
mov
inc
gs
dec
mov
push
lcall
and
mov
dec
inc
imul
ja
mov
sbb
std
insl
dec
out
jae
in
mov
cmpsl
adc
cli
ljmp
xor
into
dec
xlat
addr16
imul
cmp
pop
sti
mull
jnp
rcl
xchg
xchg
outsl
cmp
movsb
cmp
imul
xchg
lret
mov
sub
movsb
mov
mov
iret
in
jne
push
insb
loopne
push
cmpsb
daa
adc
fadd
pusha
ljmp
in
and
lahf
repnz
movsl
xchg
insl
fsubl
lret
lock
arpl
push
test
push
pop
jle
mov
sub
outsl
repz
or
mov
aam
outsl
or
ret
jbe
jbe
jno
mov
lods
rcrl
popa
inc
dec
adc
inc
xchg
jns
mov
mov
aam
cmc
lahf
inc
jne
pop
pop
xor
cmc
in
mov
sbb
xor
in
xchg
fnstsw
int3
xchg
ret
dec
adc
sbb
rclb
adcl
jmp
into
inc
or
insl
mov
pop
jae
out
xchg
mov
lret
pop
xor
jnp
push
lds
out
fstl
push
sub
inc
xchg
ss
xchg
daa
mov
lcall
aaa
repnz
and
lods
jmp
stos
ret
or
sar
inc
nop
daa
adc
add
cmpsb
xor
stos
fmull
xchg
sbb
push
test
xor
add
sahf
mov
mov
data16
test
lahf
mov
pop
and
mov
shll
jmp
rol
inc
fwait
pusha
or
or
or
dec
je
push
roll
sysret
xlat
rolb
outsl
push
shl
jge
inc
or
xorb
cmpb
iret
cltd
rcr
mov
lahf
mov
jo
test
and
aas
std
cmp
dec
andb
ja
fisttps
scas
push
popf
pop
mov
mov
adc
fs
cmc
lds
les
or
dec
test
mov
ret
or
shll
outsb
std
les
cmp
sbb
sub
or
pop
bound
push
pop
jle
shll
jb
inc
push
xchg
sbbb
scas
add
mov
jnp
fldcw
push
por
shrb
pop
dec
lahf
push
sub
pop
pop
into
push
loope
mov
in
lods
loop
imul
sub
and
fsubr
dec
out
out
test
jae
aad
sbb
out
jle
in
aad
xchg
mov
ja
push
xor
jno
dec
test
sar
jne
pushf
into
not
pusha
fsts
sub
jno
hlt
test
int3
ret
sbb
sarl
push
rorb
sub
mov
insl
sbbb
push
out
cmpsb
jle
inc
cmpb
inc
pop
sub
xchg
lahf
mov
in
push
rolb
add
xchg
out
fidivrl
pop
push
dec
adc
jno
popf
cmc
cmp
mov
inc
cmp
nop
or
jno
repnz
cmp
xlat
mov
bound
mov
sub
or
dec
mov
pop
sub
jne
add
fnsave
loopne
adc
cltd
das
lahf
mov
mov
xor
aad
mov
xor
or
mov
aad
mov
test
lods
cmp
jecxz
scas
int3
push
adc
jae
adc
jl
repz
call
push
in
sbb
mov
test
cmp
test
mov
xorl
pop
jae
pop
ror
lcall
out
cmp
jcxz
stos
inc
mov
sub
popa
pushf
repnz
cmp
adc
es
int3
pop
in
cmpsb
mov
jge
roll
pop
jae
repz
jns
and
movsl
fwait
pop
pop
inc
pushf
vxorps
unpckhps
jo
jp
lgs
inc
aaa
add
fisubrl
ror
inc
adc
push
add
fsubl
fmull
xchg
add
and
adc
popf
lahf
jb
pop
icebp
iret
outsb
flds
mov
scas
lret
popf
sbb
iret
pushf
adc
push
mov
sub
scas
fdivl
clc
xchg
loop
or
sub
sbb
mov
fstps
jp
rol
loope
out
inc
int
push
shlb
mov
js
add
ja
or
adc
adc
test
cmp
jb
pusha
sbbb
subl
inc
int3
xchg
bound
sub
sarl
or
dec
or
adc
out
int3
out
mov
test
daa
and
mov
pop
add
inc
cltd
xor
jg
inc
leave
pushw
pop
js
repnz
nop
xor
jb
jecxz
sbb
pusha
mov
mov
sub
mov
fdivs
in
fs
int3
adc
mov
lret
sub
lahf
push
stc
enter
mov
cmp
push
cmp
push
out
mov
cmp
aam
movsb
cmpsb
xor
cmp
push
adc
nop
jge
jg
fwait
dec
xchg
xchg
mov
sbb
test
cmpb
imul
xor
out
aas
sbb
inc
xor
repnz
lods
dec
sti
sbb
xor
nop
std
shlb
call
adc
sub
xor
mov
adc
sbbb
leave
cwtl
jmp
ja
jno
inc
sar
sub
mov
mov
shlb
or
stos
pop
stos
test
jnp
in
les
lds
add
and
xchg
shlb
pop
mov
js
cs
into
bound
icebp
gs
test
pop
jg
jbe
arpl
mov
cmp
push
rolb
dec
shrb
add
std
jne
push
mov
sbb
ja,pt
cmpl
mov
cmpsl
fimuls
jae
dec
xor
ds
or
pop
cltd
mov
mov
arpl
cs
adc
mov
cmc
pop
add
or
mov
xor
ja
addr16
and
scas
fs
mov
loopne
loop
nop
test
inc
pop
push
addl
mov
pop
addl
xor
or
dec
nop
fists
fwait
icebp
mov
xchg
popa
subl
es
jecxz
adcb
pop
call
fldl
nop
inc
dec
and
xor
scas
lcall
lds
xor
cmc
fsubrs
hlt
ljmp
dec
ljmp
stos
xchg
mov
mov
inc
adc
dec
arpl
xor
add
mulb
jl
pop
xor
rcrl
mov
jge
sub
mov
jmp
das
jl
popf
mov
and
adcb
fs
stc
add
rclb
pushf
pop
mov
scas
repz
mov
mov
dec
fisttps
mov
jg
je
mov
xchg
pop
dec
sbb
sbb
popa
cmp
pop
flds
and
test
pushl
cmp
fldl
adc
push
pop
stos
pop
das
jp
fbld
ret
pop
lcall
or
ds
dec
outsl
cld
fadds
andb
in
adc
test
sbb
mov
lea
add
ljmp
dec
lock
fwait
rcr
xlat
pop
scas
insl
pop
inc
arpl
lds
adc
iret
and
sahf
mov
adc
mov
data16
daa
inc
in
lcall
aam
sti
inc
cmc
mov
cmc
and
jns
or
popa
pcmpgtb
idiv
int3
sar
mov
mul
fisubs
out
mov
push
loopne
pop
shlb
jne
call
jae
cmovns
in
mov
mov
mov
pop
sbb
int
xor
jno
jl
imul
fs
das
icebp
xor
int3
outsb
data16
or
dec
xor
iret
aad
xlat
cmc
pop
ds
pop
pop
cmpsb
dec
push
outsb
sahf
ret
push
imul
dec
je
sbb
and
repnz
sub
jle
sub
gs
lock
pop
rcr
out
or
jns
jnp
int3
sbbb
mov
lcall
aam
hlt
xchg
inc
mov
jg
mov
add
xor
mov
dec
cs
sti
shlb
add
mov
pop
loop
dec
aas
jo
sub
xchg
pop
mov
enter
add
inc
inc
into
ret
pop
cmc
inc
push
ljmpw
ds
sahf
mov
push
jg
test
add
sbb
lods
repz
fwait
dec
aas
add
xchg
push
ds
xor
in
in
out
inc
push
out
sbb
fs
std
rolb
xchg
in
jne
add
cmp
and
pusha
imul
push
loopne
fdivl
sub
loopne
std
sub
xchg
popf
scas
ret
fwait
cmpb
mov
mov
lea
mov
popa
out
pop
test
sub
xchg
adc
in
roll
stos
inc
or
stos
inc
lods
inc
fcompl
inc
push
fsubrs
cmp
xchg
sub
jnp
rorb
xchg
int3
xchg
mov
add
imul
sbb
stc
adcl
mov
mov
ljmp
fldenv
jge
nop
push
jle
jno
mov
fucomi
rclb
sub
xor
push
fisubs
imul
js
and
xor
popf
test
sub
outsb
inc
add
cmpsb
das
mov
ficomps
xchg
popf
add
fs
jg
push
lods
shll
dec
lahf
sbb
pop
loop
in
das
rcl
imul
sbb
mov
adc
dec
mov
sahf
mov
inc
aaa
popf
mov
leave
adc
addl
cmp
popa
dec
bound
repnz
mov
pop
or
mov
repnz
ds
xor
pop
xchg
test
ds
cmpsb
or
mov
pop
xor
insb
lcall
mov
sbb
and
iret
mov
test
jae
daa
jb
and
jno
mov
leave
pusha
dec
mov
in
out
lods
jmp
push
jo
dec
inc
mov
push
sbb
xchg
mov
jge
aaa
cmc
mov
lock
filds
jns
push
ror
xchg
sti
push
cmp
fdivl
lea
cltd
push
scas
movsb
test
mulb
xchg
and
fs
arpl
lahf
lods
clc
inc
push
stos
loop
out
push
scas
cmp
nop
push
push
sbb
scas
push
xor
sub
xchg
cmpsb
dec
into
sti
add
cli
lods
jns
sub
inc
dec
and
aas
fwait
sbb
sti
outsl
je
stos
outsb
mov
add
cmp
and
imul
mov
ja
jo
ss
ret
aad
fs
mov
imul
addr16
call
pop
pop
dec
in
scas
ss
pop
mov
incl
add
stos
xor
fcmovnu
jle
and
popa
jmp
jl
cmp
nop
cmpsb
dec
pushf
pop
or
fimuls
int
mov
rclb
xor
sti
xchg
jae
jle
pop
xor
or
out
push
dec
pop
cmpsb
cmpsl
imul
cli
outsl
dec
std
or
ret
pop
mov
pop
pushf
mov
mov
sbb
sarl
addr16
mov
movsb
jmp
push
xor
imul
gs
xchg
repnz
in
cld
ret
sub
cmp
repnz
call
xor
outsl
and
das
mov
lahf
sbb
add
subl
push
scas
icebp
jne
cmpsl
paddq
mov
sbb
enter
xchg
mov
add
loope
jg
bound
pop
mov
sahf
scas
loopne
into
out
gs
push
jg
add
jge
jns
leave
or
jno
je
xchg
stc
adc
cwtl
aaa
dec
lock
sbb
lret
and
mov
insb
nop
movsl
mov
mov
cltd
sbb
push
dec
mov
stc
add
cmpsb
add
roll
pop
in
movsl
fcomi
adc
stos
ds
scas
pop
mov
ret
test
or
add
lret
lahf
adc
sub
push
testb
ret
dec
cwtl
incl
xchg
cmp
icebp
add
nop
jp
pop
repnz
fs
sbbl
inc
jecxz
push
shlb
xor
je
dec
push
mov
lods
xchg
jge
stos
test
insb
mov
pop
jl
aaa
adc
loop
shrb
sbb
xor
lcall
nop
int3
filds
or
fwait
xchg
xchg
es
jae
xchg
jle
add
jmp
sbb
xor
ds
pusha
xchg
fstpt
setnp
jmp
rcll
xchg
xchg
scas
lret
test
sub
lcall
cmpsb
out
jno
rolb
outsl
bound
in
xlat
fs
jne
out
lret
and
pushf
pop
mov
xchg
popf
sbb
rcrl
jno
mov
in
pop
cmc
cmp
data16
sub
mov
loope
ja,pn
dec
icebp
stos
push
dec
inc
add
xor
popa
int3
jg
sub
les
dec
mov
fwait
jne
mov
push
add
xchg
mov
inc
and
mov
jne
outsl
sub
push
stc
inc
inc
dec
push
mov
out
idivb
mov
mov
push
ror
cmp
adc
in
mov
lock
imul
push
repz
aad
jp
dec
jno
add
jns
lahf
mov
pop
fsub
push
rcrl
pop
out
stos
xchg
and
and
loope
loopne
loop
mov
lods
push
sub
sub
mov
jp
push
mov
int
push
lahf
scas
add
and
stos
js
aam
xor
cmpsl
fcoms
lea
outsl
mov
into
push
scas
and
cltd
mov
dec
sub
imul
iret
xchg
jge
test
ds
mov
leave
into
scas
pop
inc
imul
mov
push
fwait
popf
aas
shl
sub
mov
fnstsw
test
mov
lds
ret
fwait
cmp
mov
dec
xchg
shlb
into
lret
dec
int
scas
xchg
lods
clc
lods
mov
mov
cmpsl
fst
addb
repz
add
add
aaa
and
imul
in
sbb
xchg
enter
test
stc
stos
push
cmpsb
xor
roll
outsb
mov
jns
inc
clc
cmp
dec
test
push
fisubrl
popa
xchg
adcb
push
jo
cmpsl
cmp
push
add
add
mov
jb
arpl
xor
dec
and
insl
mov
lahf
and
add
lods
test
add
add
dec
add
cltd
cltd
mov
xchg
xlat
pop
push
push
adc
gs
rcrb
xchg
andl
xchg
pop
in
dec
cmpsb
lods
jb
in
add
mov
inc
in
sub
out
scas
shll
and
jle
stos
xorb
pop
sbb
mov
xlat
orl
stos
cmp
mov
clc
pushf
mov
cmp
xor
xchg
xor
add
xor
pop
dec
jl
out
js
test
cmpsb
push
mov
dec
mov
dec
in
sbb
out
cmpsb
fbld
pop
adc
loope
adc
dec
int3
jnp
inc
pop
out
jg
dec
mov
sti
lods
enter
add
lret
xor
subb
outsb
cmpsl
and
mov
gs
or
cmpsl
mov
int
mov
in
loopne
sbb
push
mov
es
adc
loope
rclb
jge
rorb
jmp
add
xchg
xchg
sbb
adc
sbb
dec
lahf
inc
aaa
inc
dec
icebp
push
mov
or
cmpb
sub
adc
fwait
cli
jne
sar
cwtl
bound
out
jmp
push
jp
mov
cwtl
fisubrs
dec
stos
rcll
add
lea
fldt
inc
out
dec
ficompl
add
movsb
ret
adc
xor
aad
jae
push
cmp
dec
pop
daa
push
or
mov
mov
or
inc
inc
cwtl
jl
popf
pop
ret
ss
cmp
iret
ret
cli
sub
inc
sti
inc
mov
add
into
int3
add
cli
test
nop
rcrb
out
mov
dec
mov
dec
xor
push
jg
aaa
push
cmp
punpcklbw
fnstenv
out
ss
add
jl
rolb
xchg
insb
jecxz
mov
push
mov
aaa
outsl
mov
lock
out
mov
adc
imul
psllw
in
cmp
icebp
insl
fidivs
sbb
ret
ret
mov
stos
inc
int
mov
test
mov
andb
sbb
mov
lds
mov
ss
in
sub
leave
xor
cmp
test
outsb
jecxz
and
and
roll
out
or
and
mov
dec
sbb
cltd
push
or
xchg
mov
mov
lahf
insb
adc
sahf
nop
adc
inc
adc
jp
lods
inc
scas
ret
xchg
outsb
xchg
les
push
ss
ficompl
in
or
mov
and
mov
or
sbb
popf
xchg
bound
dec
xor
cld
push
mov
imul
ja
inc
mov
mov
mov
ss
loope
movsl
arpl
jmp
mov
rcrb
repnz
call
push
or
aad
fisubs
dec
mov
mov
push
std
ds
ret
or
sahf
sub
or
cmpsl
cs
and
je
inc
pop
ja
imull
cwtl
cmp
push
mov
dec
notl
ret
fidivl
sbb
sbbb
or
and
rolb
xor
mov
mov
inc
add
loopne
hlt
in
daa
cld
cmp
aas
push
aam
lea
outsl
lret
addr16
daa
ss
mov
sbbl
and
push
dec
ret
dec
cmp
add
popf
sub
movsb
insb
inc
inc
aam
cmpsb
mov
jno
add
adc
pop
adc
or
cmp
ret
jle
mov
xchg
loopne
sbb
mov
xor
data16
dec
das
or
jns
cmp
xor
fmuls
mov
jg
jmp
std
push
inc
pop
pop
pop
mov
sub
pop
popa
or
into
int3
sub
addr16
clc
and
outsl
addb
mov
pop
loop
scas
xorb
sti
inc
mov
cltd
sub
xor
ret
shlb
pop
int3
sbb
lahf
xor
iret
int3
and
and
dec
insl
jns
jmp
lock
xor
mov
and
int
xchg
sub
sub
push
outsl
cltd
xchg
js
imul
push
pop
mov
xor
xor
loop
cmp
and
jge
push
and
xchg
jno
aam
lock
loopne
aaa
cmp
out
out
lds
addb
mov
test
cli
into
add
adc
daa
lcall
push
lea
ds
adc
sub
cltd
stos
xchg
mov
pop
psubusw
adc
xchg
and
push
pushf
repz
imulb
mov
call
inc
stc
testl
pop
es
iret
cmovp
mov
ret
adc
stc
push
nop
mov
daa
repnz
cmpsb
push
inc
outsb
in
xchg
fwait
mov
adc
nop
and
push
jge
cs
enter
mov
fmull
and
mov
or
shlb
or
popa
in
adc
loopne
cmp
mov
jge
mov
sbb
scas
pop
or
sub
loope
mov
lret
dec
mov
mov
pop
mov
mov
mov
mov
gs
stos
mov
xchg
es
div
jno
addr16
outsl
dec
inc
mov
popa
cmp
sti
popf
aad
mov
push
sub
pop
pop
dec
cmp
inc
outsl
dec
loope
add
jns
cltd
bound
xchg
cmpsb
pop
inc
rclb
and
into
sarb
jne
out
ret
push
cmp
or
adcl
stos
outsb
outsb
adc
inc
xor
out
inc
lret
call
mov
cmc
andl
insl
lcall
cmpsl
cmp
pop
lock
dec
mov
jecxz
xchg
or
sub
stc
ror
inc
cmp
call
mov
cmp
sbb
jb
sbb
xor
imul
mov
pop
outsl
cmp
push
mov
jmp
lahf
push
out
adc
dec
into
test
leave
xor
std
test
fcoms
mov
cwtl
mov
sbb
mov
push
sub
cmp
cmc
daa
shlb
jno
add
fwait
loopne
mov
shl
in
mov
out
std
pop
insl
cmp
or
in
aam
jns
pop
std
imul
stc
out
fdivrs
mov
lods
dec
cmpsb
loop
sbb
push
lea
rclb
fs
std
aad
and
dec
jg
and
das
add
mov
and
xchg
xchg
ja
pop
adc
sbb
mov
icebp
iret
pop
sub
rolb
lods
jge
out
imul
jo
pusha
push
add
push
sbb
out
insl
mov
jl
jge
test
outsb
jae
je
sahf
popa
notl
xchg
int
inc
loope
cld
or
sahf
dec
push
fstl
jl
lcall
push
ficomps
xchg
mov
in
inc
mov
push
fildll
mov
pop
jbe
dec
lock
jmp
sbb
fmul
mov
fwait
int3
rclb
js
sbb
xchg
setns
xchg
cmp
mov
sbb
xchg
dec
sub
add
repz
adc
sub
pushf
jg
cld
mov
sub
push
pop
in
subb
mov
lret
cmp
cmp
and
mov
cmp
loopne
jle
ret
lret
ds
adc
jl
fstl
test
mov
lret
sahf
test
loope
out
jle
lret
xchg
sar
int
addb
test
lock
sbb
outsb
adc
jae
enter
and
ror
jmp
add
push
aaa
inc
dec
xchg
mov
leave
push
sarb
fs
inc
jecxz
das
sub
mov
shl
ss
add
cmp
int3
lcall
sub
xchg
enter
cmc
nop
adc
inc
sar
sbb
scas
ret
and
xlat
sbb
xchg
inc
lret
popa
lods
mov
mov
jge
mov
mov
cmp
inc
mov
adc
orl
dec
imul
xor
sub
popf
and
rorl
dec
mov
mov
lods
jno
or
mov
jge
jge
out
push
xor
lret
or
stc
fsubs
imul
data16
std
sbb
xchg
fisttps
ds
rcl
mov
jb
sbb
lock
js
or
push
jbe
xchg
lds
ret
lds
xor
cltd
bound
inc
icebp
sar
rorl
or
sarl
test
aaa
adc
adc
pop
std
pop
clc
das
outsl
in
ljmp
xchg
ret
xor
inc
hlt
pusha
daa
push
leave
ljmp
mov
cmp
lea
adc
mov
dec
sbb
and
and
leave
add
jne,pn
insb
bound
rolb
cmp
mov
repnz
int
xchg
mov
mov
adc
push
out
or
pop
mov
sahf
ljmp
push
or
xor
ficoml
xchg
daa
cs
mov
lret
adc
lea
lret
insl
cld
dec
push
add
mov
pop
jge
push
icebp
je
enter
aas
ljmp
icebp
push
shrl
mov
outsl
mov
or
clc
adcb
sub
sub
inc
insb
js
ljmp
lock
js
push
push
sarb
lret
fimuls
dec
ds
or
into
and
adc
ret
sub
lea
out
cmp
and
jl
add
xor
shll
mov
sbb
pop
dec
outsb
push
jle
lcall
mov
sub
push
pcmpgtb
sub
xchg
pop
xchg
mov
mov
push
stos
es
jl
or
mov
fldenv
arpl
mov
xor
inc
jmp
pop
fwait
pop
pop
stc
icebp
sub
add
fldpi
mov
mov
cli
or
mov
stos
inc
push
push
inc
cmc
loopne
outsb
iret
push
sbb
clc
or
clc
and
or
xchg
fldl2e
jl
sub
ret
mov
dec
scas
push
enter
repz
jp
and
setle
cmp
xorb
cmp
jbe
imull
dec
sbb
xlat
lahf
xchg
fsubrp
push
lods
icebp
jle
adc
bnd
hlt
sbb
ret
mov
dec
test
pop
jmp
jecxz
mov
out
test
and
fmull
inc
stos
xor
mov
xor
mov
mov
push
lcall
mov
jecxz
shll
dec
push
sub
cmp
push
push
cmp
stc
jp
int3
loop
adc
inc
mov
out
push
cld
dec
je
sub
insb
push
daa
fcompl
shlb
mov
push
scas
cmp
dec
mov
test
aad
pop
lods
mov
jmp
loopne
cltd
mov
xor
or
cwtl
xchg
mov
outsb
daa
pop
lock
stc
push
xchg
push
ja
andl
dec
aas
xor
inc
pop
ja
fildl
sbb
cmpsl
lcall
jge
mov
adc
leave
loop
outsb
sub
push
scas
aad
push
fmulp
ds
and
add
test
cmp
xlat
push
mov
mov
cli
mov
cmpsl
lahf
orb
jle
mov
mov
out
push
or
js
ss
test
jno
mov
cmp
push
xchg
adc
and
mov
jne
loope
fwait
jecxz
inc
cmp
hlt
sub
mov
rcl
dec
cmp
scas
dec
jmp
stos
dec
test
dec
cmp
add
inc
sub
or
insl
xchg
movsl
aad
jp
and
scas
xor
push
xchg
dec
xor
int3
imul
in
xor
fnstsw
dec
adc
in
in
pop
ja
pop
mov
test
cmpsl
lcall
or
data16
push
sbb
pop
loope
addr16
cs
xchg
fs
sbb
data16
push
cmp
sti
insb
mov
out
lods
dec
pusha
pop
xchg
or
push
add
dec
and
push
dec
aam
cmp
xor
cld
lock
das
dec
sub
inc
mov
adc
cmp
push
out
stos
xor
repnz
std
dec
iret
daa
rcll
jne
pop
es
sub
insb
xor
mov
loopne
pop
adc
cli
mov
nop
mov
test
das
test
push
cmp
das
cltd
lock
fnstcw
int
pop
dec
adc
in
mov
shl
push
and
or
rcr
sarl
les
stc
lea
and
pop
mov
mov
in
ss
or
push
test
ficompl
out
js
mov
out
inc
test
cmpsl
popl
mov
mov
mov
jns
int3
cmpsl
pop
cmp
enter
jns
dec
xchg
sarb
mov
xor
icebp
testb
aaa
push
das
cmp
add
filds
and
cmpsb
jb
lea
add
inc
movsl
cmp
push
and
fsubrp
out
fisubl
jg
out
sub
mov
lret
mov
jne
dec
insb
ds
jb
jmp
dec
cmp
lods
outsl
adc
pop
jno
sub
out
ja
aam
jp
andb
movsl
jnp
xchg
aad
js
cmp
mov
sti
add
addr16
ss
jb
mov
imul
add
mov
cmp
inc
and
jb
xchg
repnz
inc
rcll
outsl
xor
mov
sub
jle
aam
fildll
shr
insl
or
insb
xchg
dec
cmp
and
sub
ja
clc
jle
or
cmpsl
lods
fisttpll
fiaddl
mov
pop
addr16
fcompl
pop
call
xor
insl
addl
or
xchg
sbb
out
idivb
fs
cmc
pop
pop
outsb
lret
es
xchg
jl
scas
cs
mov
or
sarb
movsl
sbb
fldl
push
jno
and
orb
jmp
push
xchg
js
pop
mov
neg
aad
movsl
inc
stos
and
mov
push
add
movsb
ficompl
push
push
imul
mov
or
outsl
push
mov
xor
push
add
xchg
das
xlat
test
in
in
jns
nop
mov
clc
adc
push
xchg
sub
lods
leave
stos
roll
or
mov
enter
rorb
iret
shrl
pop
xchg
lret
jnp
shlb
inc
xor
mov
js
add
jp
xchg
sub
daa
xchg
and
mov
push
pop
clc
sbb
cwtl
test
bound
xor
xchg
jmp
xor
scas
fistps
fs
jmp
or
inc
popf
xor
outsb
mov
cli
dec
incb
sti
popa
xor
sbbl
xchg
std
mov
leave
lcall
push
pop
jg
jg
pop
adc
mov
cmp
aad
cmp
xchg
sbb
ja
leave
sub
sbb
or
xchg
aas
mov
fiaddl
xor
and
push
add
sahf
cld
es
hlt
mov
dec
push
mov
rcrl
lods
xchg
scas
adc
and
or
popl
fsubrl
lods
lret
stos
xor
sbb
dec
fnstsw
sub
inc
stc
sbb
mov
movsb
ret
sub
aad
dec
jno
cmp
xchg
js
mov
je
dec
dec
jns
jno
mov
mov
mov
js
adc
loope
fisubl
mov
mov
orb
and
jb
movsb
inc
shll
mov
in
fstl
xlat
mov
mov
push
outsl
xchg
sbb
sahf
jle
push
movsb
and
and
mov
push
mov
push
int
sub
cmp
imul
fstpl
push
aam
gs
xlat
jo
iret
xor
mov
repnz
scas
call
enter
or
mov
les
test
ljmp
lock
sub
std
jns
aas
sub
lret
ja
dec
scas
adcb
and
out
and
popf
outsb
sbb
xchg
push
jp
add
mov
pusha
jno
xor
cmc
add
int
ret
push
mov
xchg
pop
rcrl
xlat
jo
mov
fistps
fs
push
mov
mov
jnp
dec
arpl
mov
or
je
pop
div
lods
lahf
dec
cmp
aas
mov
sbb
xchg
pop
mov
cmp
dec
push
xor
mov
pop
sbb
dec
sbb
sbb
sti
pop
xchg
cltd
push
inc
repnz
icebp
loop
add
je
xor
pop
adc
inc
dec
inc
or
sub
push
insl
pop
dec
in
cmp
sub
push
pop
or
sub
dec
dec
or
jmp
sbb
divps
cmc
or
mov
fucom
stc
or
cli
inc
cli
dec
rcrl
xor
std
int
push
in
lret
cmc
lea
lret
jno
dec
bound
mov
push
mov
aas
fisttps
addr16
or
daa
daa
mov
movsb
pop
in
pop
mov
mov
mov
ficoms
ror
sbb
and
sarb
cltd
mov
lds
icebp
xor
xchg
mov
pop
call
in
rclb
addr16
jecxz
push
int3
out
lods
je
lret
ret
stos
cwtl
or
insl
rcll
add
dec
inc
rorl
cmpsb
jnp
mov
andl
sub
add
movsl
call
inc
sti
out
mov
push
lahf
jp
dec
xchg
dec
lret
push
and
arpl
in
and
rolb
xchg
push
iret
scas
fmull
mov
roll
xor
or
xor
rcr
jb
cmc
into
rep
mov
push
ss
jo
pop
clc
pushf
scas
push
mov
dec
out
xchg
or
outsb
pushf
ret
inc
lret
cmpsb
mov
sub
incl
jno
push
into
fcomip
mov
mov
das
sbb
push
gs
ret
jge
nop
out
push
fwait
xor
dec
rorl
inc
fisttpll
pop
cltd
repz
movsb
mov
push
hlt
pop
jmp
jle
daa
int
sbb
out
jle
movsl
mov
xchg
or
mov
stos
xchg
bound
ficompl
sub
fbstp
repnz
xchg
loopne
lret
imul
xchg
movl
mov
cld
insl
mov
dec
es
movsb
lcall
sahf
cs
test
bound
call
adc
push
outsb
add
aam
xchg
mov
lahf
inc
push
xlat
fnstenv
mov
loopne
movsl
sbb
sbb
xor
mov
cmp
cmp
mov
push
aad
aaa
xor
out
sbb
sbb
arpl
and
inc
add
jp
inc
mov
fsubrl
add
leave
mov
test
ljmp
psllw
shlb
ret
sub
js
xchg
lods
cmp
push
pop
rolb
repnz
push
xor
shrl
push
or
mov
fs
adc
add
pop
adc
jg
popa
pop
shll
mov
cld
loopne
add
sbb
xchg
xor
ror
int
shrl
icebp
leave
test
add
hlt
arpl
fwait
in
ret
in
fsubrl
rcl
push
add
pop
fs
xor
sub
mov
fdivr
rcrl
cmp
jno
xor
dec
push
rcrb
sub
out
mov
cli
outsl
lods
mov
push
loope
jecxz
orb
mov
bound
sub
jmp
fldcw
sbb
fsubrp
mov
pop
insl
lods
in
or
call
subl
sbb
xor
add
insl
loopne
hlt
add
or
shll
arpl
mov
or
outsl
sbb
stos
repz
sbb
dec
adc
and
aas
add
push
lods
mov
jg
xchg
inc
xchg
pusha
ret
sub
imul
mov
xor
cmp
shlb
cmp
xchg
dec
pop
repnz
xchg
inc
mov
call
call
mov
mov
jae
div
sbb
into
mov
inc
test
jp
jl
pop
lahf
fists
mov
cmpsb
mov
fcmovne
fidivl
fcomi
out
insl
jno
fs
cmpsl
shlb
push
insl
fcoms
xlat
test
cmp
in
mov
movsl
out
aas
xor
outsl
push
push
dec
fs
dec
lea
push
into
pop
and
push
call
mov
sub
loope
das
jp
adcl
dec
xlat
and
mov
push
and
mov
rorl
clc
jl
sti
in
inc
adc
mov
xchg
mov
fucom
jge
and
in
mov
sbb
ficoml
mov
shlb
jmp
mov
inc
movsb
lcall
sub
fidivl
push
mov
dec
inc
sbbb
jno
xchg
jns
dec
mov
imul
mov
inc
mov
test
aas
cmp
jo
push
inc
orl
incl
out
inc
int
cmp
inc
add
cmpsl
pushf
enter
ret
mov
inc
mov
sub
loope
adc
loope
fisubrs
imul
iret
ss
jmp
jbe
int3
inc
add
adc
push
add
movsl
divb
cmp
je
mov
imul
sub
negb
repnz
xorb
out
inc
aaa
cmp
dec
orb
add
add
ja
adc
and
lds
xor
adc
jno
ret
push
push
jl
adc
jmp
add
adc
or
cmp
test
pop
or
ljmp
pop
ret
push
sahf
fildl
sbb
jl
mov
out
push
inc
insb
pop
dec
add
or
lret
lcall
sbbl
cmpsb
xor
scas
sar
scas
sbb
xor
xchg
mov
je
in
jl
rcll
mov
stc
sub
out
addr16
xchg
or
inc
jnp
cmp
push
movsl
and
xor
jnp
adc
cld
clc
ret
data16
dec
or
inc
xchg
in
or
sub
jge
xor
sub
add
sub
das
imul
sti
repz
les
pop
or
out
stos
xor
fldcw
in
fstpl
push
movsl
xor
or
sbb
adc
std
ljmp
inc
imul
scas
pop
frstpm(287
lods
into
out
lock
cmp
test
pop
mov
mov
pushl
cmp
sub
shrb
mov
mov
movsb
cmp
inc
scas
cs
push
ds
mov
lock
fisttps
cld
mov
les
stos
cld
mov
iret
repz
add
in
dec
fsubrs
sub
gs
inc
adc
js
mov
movsl
jle
sub
in
inc
movzwl
xchg
push
and
out
dec
jp
cwtl
lods
lret
stos
mov
sub
ljmp
cwtl
rolb
popa
dec
mov
cmp
adc
mov
push
jmp
fwait
push
insb
inc
add
sbb
xor
orl
jne
iret
cmp
loope
iret
lods
insb
into
sbb
les
pop
mov
xchg
std
or
pop
stc
adc
sub
icebp
and
icebp
lea
pop
jne
in
es
in
sar
sbb
pop
or
jmp
and
or
leave
dec
ror
mov
test
xchg
sahf
popa
negb
adc
negb
mov
xor
ret
pop
adc
and
in
jecxz
fisttps
sub
inc
lock
dec
bound
pop
or
pop
test
mov
xor
xchg
clc
dec
lcall
jne
cmp
or
mov
xchg
jl
dec
in
and
push
fstl
jecxz
and
test
icebp
jle
mov
in
adcl
push
les
sub
jmp
jg
dec
jecxz
adc
inc
lods
lods
daa
cwtl
cli
cmpsl
xor
push
stc
xchg
mov
adc
mov
mov
mov
sub
andb
add
inc
push
int
into
cmc
and
xchg
push
push
inc
data16
pushaw
mov
jb
insb
mov
inc
loopne
aam
pop
jbe
in
scas
fwait
and
cmpsl
sbb
or
jns
insb
pop
lds
push
or
sbb
jae
mov
jo
mov
mov
cltd
inc
push
cmpsb
arpl
xor
outsb
in
addr16
xlat
jns
lds
cmp
adc
je
push
sti
jmp
push
sahf
or
mov
pop
and
inc
push
mov
fwait
imul
jnp
add
aas
lcall
int3
add
into
jns
lods
mov
rclb
popf
xor
sbb
mov
sbb
jecxz
dec
stc
mov
cmpsl
pop
inc
inc
add
out
popf
fistl
mov
jecxz
inc
xor
loopne
pop
or
mov
clc
mov
push
pusha
enter
je
idivl
fwait
dec
cvtpi2ps
pop
ljmp
sbb
jae
xchg
jp
fucomip
xchg
subb
jecxz
sarl
mov
mov
dec
insb
push
cmp
jb
mov
in
mov
rclb
cmp
jmp
ss
dec
aaa
dec
inc
and
adc
cli
dec
fadds
push
mov
imull
xchg
pop
les
sbb
jmp
es
pop
sti
mov
push
adc
and
push
mov
test
cmc
mov
cli
dec
push
stos
dec
fidivrl
jae
pop
adc
lea
lret
ret
push
out
dec
mov
mov
mov
push
add
cmp
out
fnstsw
mov
or
mov
sbb
jmp
dec
bound
jne
xchg
dec
movsb
lods
loop
shr
sahf
mov
push
cwtl
push
scas
push
ret
add
mov
adc
test
pop
add
fdivrs
add
xor
rolb
insb
xchg
or
push
nop
out
das
repz
dec
mov
add
leave
out
daa
cmp
lods
scas
inc
xchg
out
mov
in
iret
push
lcall
inc
jecxz
in
sub
popa
cmc
dec
data16
lahf
in
leave
out
leave
xchg
fnstenv
add
and
mov
sbb
in
push
xor
mov
add
or
or
or
call
add
sbb
push
test
out
add
imul
jecxz
mov
fisttpl
loopne
movsl
mov
pop
sub
out
xor
push
mov
test
add
out
add
push
nopl
std
push
imul
and
fisttpll
fbstp
popl
lock
dec
in
stos
sub
cmpsb
add
mov
jp
gs
iret
inc
jmp
mov
rcrl
fildll
scas
stos
cmp
popf
ja
int
mov
or
mov
xor
push
lods
bound
jg
pop
inc
cs
mov
inc
add
dec
lods
cs
out
push
popf
sahf
aam
xor
jo
sub
lcall
or
stos
sub
es
push
insb
cmp
and
push
stc
jbe
xchg
shrl
add
rcll
repz
inc
pushf
jmp
outsl
fildll
mov
push
cmp
mov
inc
lods
xchg
mov
or
aas
stos
xor
mov
or
idivb
int
das
stc
leave
cmp
cmp
fcoms
push
xor
lahf
mov
outsb
jne
rcrl
mov
add
mov
aad
and
jae
xor
enter
or
lock
stos
pop
fs
scas
int
add
addr16
sub
mov
lahf
loop
pop
sub
in
mov
and
inc
push
lahf
out
fcoml
pop
fbstp
testb
xchg
push
scas
cmpsl
mov
loope
outsl
jnp
sub
rcr
imul
push
loope
xchg
repz
test
fwait
cltd
xor
adc
jge
xor
push
jle
xchg
cmpsl
lods
sub
mov
or
roll
pop
sbb
add
xchg
leave
or
es
roll
iret
or
xchg
cmp
add
push
iret
sbb
aaa
or
xchg
test
fwait
push
dec
inc
nop
or
shrl
icebp
add
and
lcall
mov
lods
xchg
out
les
xlat
add
or
gs
in
ficompl
jno
in
outsb
xchg
mov
iret
lds
push
fwait
mov
add
mov
add
lds
or
jl
pop
or
iret
push
jnp
int3
sub
shll
dec
dec
into
dec
sbb
repz
add
les
xor
ret
inc
fimull
and
xor
cmp
es
add
les
or
jmp
into
outsb
mov
push
mov
lcall
cmp
mov
lcall
jae
jecxz
divl
fmull
loop
pop
imul
aaa
push
subl
popf
add
xchg
mov
out
cltd
mov
mov
dec
push
sarl
cmp
and
mov
or
push
xchg
sbb
cli
or
sbb
and
repz
fnstcw
xchg
fldt
mov
mov
sbb
inc
push
mov
add
stos
mov
lods
data16
push
add
in
add
lds
jae
inc
dec
insb
fcmovnu
lret
out
mov
jne
clc
dec
mov
outsl
pop
out
call
cmpsl
lds
dec
cmp
fs
adc
daa
xchg
dec
mov
xchg
add
in
mov
sbb
hlt
lods
fadds
push
xchg
push
push
xchg
std
or
addr16
or
sahf
aam
sbb
xlat
push
sub
mov
jae
jae
movsb
dec
sub
imul
repnz
ret
das
mov
enter
es
scas
shlb
shrl
lret
push
mov
fs
repnz
xor
push
xchg
jbe
pop
inc
push
inc
lds
dec
cmp
lcall
aam
add
pop
jne
cltd
or
loopne
sub
xchg
icebp
cmc
test
inc
mov
pop
jle
and
pop
int
enter
divb
out
dec
xor
mov
dec
inc
fidivrs
in
sub
mov
ljmp
ljmp
rolb
sub
fistpl
jno
xchg
cs
push
lret
push
fiaddl
ja
aas
dec
js
inc
cmp
jecxz
jae
jp
scas
fbld
xchg
pop
in
sub
inc
int
jns
pop
mov
subb
mov
or
mov
cltd
lea
dec
pop
les
mov
les
xor
mov
cmc
fldenv
push
les
test
fistps
test
inc
lea
lret
aad
dec
aas
mov
cmc
or
loope
std
aaa
mov
cwtl
lret
je
add
lods
outsb
stos
inc
aad
xor
jle
add
jns
int
cltd
mov
dec
push
roll
ficoml
pop
mov
mov
arpl
int
or
hlt
push
xchg
addr16
daa
jmp
fmulp
or
jg
ss
inc
loopne
xor
xchg
clc
adc
add
int
js
mov
int3
cmpsl
ss
adc
pushf
in
dec
mov
iret
sbb
sbb
cmp
lods
ja
pop
pop
push
mov
xchg
cli
inc
inc
jns
data16
sbb
mov
and
scas
loope
loopne
xchg
push
into
sbb
daa
push
add
imul
mov
aam
fs
jne
xor
lods
loope
data16
ds
or
cmp
inc
sarl
and
sbb
out
sub
pushl
jns
xor
mov
mov
gs
and
div
push
inc
mov
mov
sub
movsb
mov
pop
push
mov
loopne
push
call
inc
sbb
sahf
mov
mov
lods
out
fidivrs
rcrl
ret
jle
sub
shlb
mov
clc
out
mov
ss
bound
or
mov
dec
xor
jle
push
cmp
mov
inc
adc
inc
ljmp
dec
loopne
loop
mov
and
add
cmc
fnstenv
stos
add
jmp
movsl
lret
aas
push
shll
pop
pushf
mov
ficoml
int
shlb
add
push
jge
xchg
add
add
and
mov
xchg
and
mov
sub
and
push
icebp
cmpsl
cltd
xchg
fdivs
xor
pop
mov
pop
adc
mov
ret
js
lea
dec
dec
out
add
arpl
rcrl
jp
inc
daa
mov
leave
lcall
nop
xchg
xlat
pop
xchg
ret
mov
cwtl
das
and
test
out
lahf
rcrb
sbb
dec
leave
mov
lret
test
xor
xor
fnstsw
sbb
test
lret
pusha
ret
lock
mov
fwait
in
xor
adc
xchg
push
aad
jecxz
sahf
xor
scas
hlt
dec
sub
adcl
mov
mov
test
scas
int3
mov
cwtl
jnp
test
mov
or
add
sub
push
into
cmpsw
sbb
and
inc
push
and
pop
xor
out
shll
fwait
push
out
in
scas
cwtl
push
sub
imul
imul
pop
mov
sbb
cltd
mov
add
dec
jmp
popf
inc
xchg
lahf
int
test
pop
adc
scas
lds
inc
cmp
mov
fisttps
in
mov
push
into
ror
pop
jmp
bound
xchg
cmp
mov
jl
adcl
out
push
les
pop
cld
push
arpl
or
out
movsb
inc
sub
dec
mov
fs
push
pop
xor
outsl
xor
mov
pop
scas
nop
cmpsl
cmp
lea
incl
push
sahf
movsl
in
add
call
stos
dec
xchg
push
cmp
mov
push
movsl
xchg
push
sbb
lds
pushf
leave
lds
push
outsb
orl
xor
loopne
dec
lcall
je
cld
imul
xor
fbstp
cli
es
cs
mov
cltd
insl
fidivrs
xor
dec
inc
add
lret
lcall
jecxz
negb
xchg
dec
sub
in
mov
dec
pop
or
fs
jg
pop
insb
xchg
jns
pop
add
inc
xchg
fbld
cwtl
dec
clc
sahf
insl
push
jae
movsb
not
stos
inc
lods
pop
inc
mov
outsb
ja
cmp
roll
mov
lcall
stos
imul
pop
test
or
scas
icebp
jbe
or
push
leave
in
mov
or
imul
push
mov
xchg
cmc
push
sbb
xor
imul
dec
repz
in
cli
inc
pop
mov
add
xor
pop
or
jb
unpckhps
pop
sbb
scas
mulb
cmc
addl
jne
and
adc
outsl
mov
mov
mov
and
aam
jno
and
stos
into
cli
fwait
cmp
dec
jp
add
fucom
add
jae
pop
xor
push
fistpll
adc
into
add
lock
and
sbb
jno
xor
sub
adc
cld
lods
faddl
addb
mov
rol
minps
push
xchg
int3
adc
data16
sbb
sbb
aas
fisttps
adc
imul
es
sub
inc
popf
stos
test
pop
cmp
sub
mov
hlt
cmp
aad
and
das
and
daa
cmpsb
es
sbb
jle
pushf
leave
or
push
das
cmp
ja
cmp
sbb
mov
fwait
jle
xchg
mov
rorl
movsb
lock
inc
dec
and
inc
sub
mov
mov
cmc
outsb
lret
mov
or
test
loop
xchg
shll
xchg
xchg
inc
movlps
or
in
xchg
adc
inc
jns
mov
nop
mov
push
jg
mov
cmp
and
add
cmp
pop
hlt
mov
out
outsl
ja
lret
jecxz
sub
es
aas
cmp
aam
movsl
testb
jne
mov
jae
fucomip
pop
or
mulb
sbb
xchg
std
push
idivl
mov
rolb
fnstcw
sub
mov
mov
xor
sbbb
push
jno
push
sbb
mov
movsb
insb
pop
loope
call
pop
stc
or
and
jbe
stc
push
xor
ret
pusha
lods
pop
jl
int
clc
out
inc
push
mov
fldenv
insl
mov
sub
push
or
lea
fcoml
out
ljmp
pushf
jmp
stc
in
fldl
push
cmp
test
sbb
insl
mov
inc
sahf
xchg
cld
rcl
xor
mov
je
sets
std
and
inc
sbb
in
loop
jp
xchg
es
pop
fcomps
xor
xchg
nop
aam
jle
add
sarb
es
pop
push
jmp
add
sbb
aas
aam
scas
imul
js
ss
inc
inc
sbb
bnd
popl
sub
negb
and
pop
fstl
jmp
dec
inc
shlb
outsb
test
inc
mov
out
std
mov
adcl
cmc
aam
add
mov
xchg
in
xchg
in
pop
fsub
rorb
sub
push
xor
js
negl
sub
sbb
fimuls
jmp
or
jmp
lahf
jmp
xchg
push
add
jecxz
adc
cmc
inc
mulb
sbb
sub
adc
int3
xchg
bound
daa
adc
dec
push
and
pusha
bnd
stc
push
pop
jbe
mov
lret
rorb
pop
lds
mov
stc
jo
mov
jno
xlat
add
sbbl
jl
mov
ret
dec
and
adc
add
mov
jns
inc
rcrb
ret
jl
jg
int3
push
stos
sbb
jle
cmp
outsb
jmp
mov
push
test
xchg
aaa
int3
sbb
inc
js
jae
das
jle
aas
pop
lcall
shrl
adc
gs
inc
mov
imul
push
xchg
adc
lods
and
mov
xor
out
mov
loopne
lret
stos
and
test
mov
push
push
cs
add
sub
push
repnz
mov
clc
loope
pop
push
mov
cmpb
mov
mov
mov
jnp
add
sbb
leave
inc
mov
iret
insl
pop
out
push
xchg
cwtl
adc
stos
dec
sbb
call
hlt
pop
mov
sbbb
ltr
jg
int
and
sub
pop
mov
xor
adc
lods
sbb
bound
inc
pop
mov
scas
inc
out
lods
sub
arpl
out
and
data16
add
dec
cmp
rolb
sub
fisubl
adcb
jae
xor
aas
push
daa
daa
inc
cltd
mov
xchg
and
xor
add
into
pop
push
add
mov
movsb
jmp
outsb
lret
into
cmp
pop
jl
aaa
sub
xlat
ja
push
jge
test
lret
sti
adc
mov
pusha
push
mov
int
andl
ficomps
cmpsl
push
iret
add
jge
bswap
movsl
stos
bound
xchg
aas
outsw
ret
pop
mov
lock
or
jmp
adc
imul
cld
leave
cmpsl
lods
sub
insl
std
push
mov
mov
ss
mov
call
out
adc
ret
push
in
cmp
in
arpl
dec
call
cli
jne
xchg
leave
outsb
rcl
push
jne
or
adc
aad
push
iret
sbb
insb
addl
and
in
xchg
dec
sbb
mov
lret
outsl
jge
test
mov
neg
or
or
push
xor
push
mov
or
ret
hlt
inc
sbb
pop
xor
push
sbb
sub
mov
xchg
add
outsl
mov
addr16
imul
fistpll
or
ret
pushf
adc
stos
data16
stos
mov
addr16
xor
xchg
shl
mov
sub
mov
imul
mov
rorl
jbe
sbb
xchg
lahf
mov
cli
shlb
push
repnz
sahf
stos
adc
jp
adc
or
mov
shlb
pop
jge
jne
xor
lret
xchg
out
xchg
rcll
and
cs
mov
hlt
fsubrl
sbb
sbb
dec
into
cmp
cwtl
mov
pop
push
in
stos
leave
js
mov
test
dec
call
data16
cmc
cld
cs
pop
fidivrl
jmp
add
repz
pop
loope
imul
cmc
test
push
cmp
jae
jbe
aaa
shll
dec
push
xchg
leave
and
mov
mov
cmp
cs
cmp
adc
mov
adc
mov
mov
movsb
cmp
push
sub
sti
aaa
in
cld
out
daa
push
xor
pusha
loope
and
js
pop
pop
insl
out
xchg
mov
or
je
sub
aam
mov
mov
das
lahf
fidivrs
in
lds
pop
ss
popf
sub
pop
adc
jp
imul
popl
aaa
mov
lret
sub
jge
mov
lods
or
rolb
and
jns
xchg
iret
push
add
sti
test
test
insl
dec
pop
mov
push
out
or
addl
sub
flds
inc
pop
jmp
je
test
aas
aad
jb
ss
mov
mov
sbbb
and
andb
add
cmp
inc
clc
enter
ljmp
pop
mov
fcoms
dec
lock
mov
mov
ret
jo
xor
sahf
add
ljmp
cs
iret
adc
cld
aas
cmc
andl
inc
mov
jb
stos
push
mov
iret
add
push
cld
int
hlt
pop
sub
mov
and
addl
mov
and
mov
push
inc
inc
inc
sub
lds
lret
mov
divl
and
dec
loopne
xchg
add
shl
ja
faddp
lods
and
jnp
ret
xchg
lds
loop
int
pop
call
sub
shll
mov
loopne
daa
into
push
mov
nop
pop
mov
mov
lea
cld
lods
add
dec
mov
pop
dec
mov
mov
call
push
jns
dec
std
ret
xor
xor
mov
call
aad
fwait
test
movsb
lahf
push
rcll
pop
adc
mov
xchg
mov
add
add
push
pop
sti
scas
pusha
fldl
or
sub
je
cmp
pop
push
out
lahf
stos
jmp
nop
xchg
mov
push
push
xor
outsb
sbb
cltd
sbb
pop
mov
iret
add
push
mov
xchg
adc
jmp
jg
push
add
lcall
xchg
fst
sahf
scas
jg
mov
fidivs
lret
out
dec
arpl
mov
xchg
push
dec
xor
sbb
dec
stc
sbb
fs
mov
push
pop
sbb
pusha
fsubl
mov
xchg
fwait
adc
xor
pop
push
in
filds
lret
outsl
and
out
adcb
in
push
popf
aam
or
cmp
mov
lcall
out
ror
push
cwtl
call
call
cmp
and
pushf
out
jecxz
dec
pop
call
btrl
sti
test
cltd
mov
push
das
fildll
mov
push
movsl
dec
sbb
in
pop
jne
adc
shll
jmp
arpl
inc
push
xlat
add
daa
or
dec
scas
or
ja
lea
lret
mov
and
in
icebp
add
pop
out
pop
faddl
push
push
push
filds
lea
xchg
sub
cld
push
jb
ret
notl
mov
loopne
sub
ret
add
mov
xor
les
aam
sub
popa
sbb
inc
cmp
xlat
insl
cmpsb
lcall
jne
cld
ss
aaa
sub
pushf
mov
cmp
or
pop
mov
test
mov
mov
jg
mov
aas
and
sbb
ret
sbb
dec
aam
mov
loope
in
add
push
xlat
aas
jge
loope
dec
adc
pop
shr
test
pop
out
fcmovu
mov
imul
imull
lea
push
roll
pop
pop
and
fisttps
ss
or
cmp
mov
sahf
cmp
jmp
dec
xor
cmpsl
push
ss
out
dec
stos
popf
and
lods
xor
mov
rcrb
push
divl
pop
xchg
daa
sub
js
or
adc
faddl
pop
leave
clc
or
push
test
and
push
push
jbe
jl
mov
shll
adc
out
jl
daa
jns
test
pop
out
outsb
xlat
ss
gs
sub
mov
movsl
negb
push
lds
pop
fucomi
fidivl
jl
sub
push
xor
cli
das
test
jecxz
mov
xchg
lock
lea
cmpsb
jecxz
xor
jle
cmp
sbb
mov
shrb
xor
lahf
inc
inc
addr16
jne
dec
clc
stos
mov
outsb
fsubrl
xchg
call
dec
lock
shl
iret
push
xlat
mov
ljmp
jg
fists
mov
jl
test
jno
mov
loopne
js
pop
enter
mov
daa
leave
pop
int
or
imul
or
inc
repz
sub
inc
hlt
sub
loopne
movsb
cmp
enter
repnz
outsl
icebp
mov
icebp
adc
push
mov
adc
loope
or
mov
lods
test
aas
out
jle
sub
imull
jae
movsl
movsl
imul
jmp
testl
lcall
int3
pop
push
xchg
outsb
lock
pop
pop
sub
mov
shrl
inc
jbe
xor
sahf
push
cmpsl
adc
jbe
dec
xor
gs
cmp
jmp
adc
cmp
mov
adc
shl
xchg
out
scas
insl
jne
or
mov
lea
sbb
icebp
nop
or
scas
cmovno
and
and
or
movb
repnz
or
cmc
push
mov
inc
sub
imul
adcb
leave
sbb
test
fnstenv
sti
dec
pushf
and
cmpsb
fisttps
xchg
rcrb
xor
fists
pushf
cld
inc
scas
sub
or
xchg
ss
sbb
repnz
adc
pop
push
pop
and
sbb
outsl
sub
cmc
lret
lods
xchg
in
mov
jae
mov
aam
mov
in
inc
adc
cmp
imul
and
into
insb
lcall
sub
and
mov
xorl
cmp
sbb
movsl
cmpsb
or
and
movsl
popf
cmc
es
xchg
in
lods
inc
jno
push
sbb
sub
and
dec
push
xor
mov
inc
mulb
dec
mov
dec
lock
xchg
pop
jp
add
fcomps
adc
cli
hlt
int3
out
test
lret
cmpsl
mov
outsb
jnp
inc
pop
dec
test
aam
daa
and
ja
out
pop
pop
in
out
dec
movsl
push
cmp
lahf
sub
fildll
xor
nop
cmp
gs
mov
dec
cs
cs
mov
pop
inc
push
or
dec
mov
add
and
add
int
mov
enter
push
jns
lock
add
jle
les
sbb
cwtl
xor
gs
xchg
je
fisubrs
cmpsb
inc
jnp
orb
repnz
inc
out
inc
sbb
adc
mov
mov
push
int3
inc
pop
jecxz
push
mov
out
cmc
daa
add
mov
pusha
and
push
add
inc
rolb
push
icebp
aam
or
sahf
nop
icebp
inc
stos
jo
mov
mov
dec
xor
mov
das
and
sarb
mov
pop
imul
cmp
movsl
pop
das
mov
cmc
fildll
pop
inc
pop
xchg
jg
test
push
das
popa
cmpsb
inc
es
cvtdq2ps
iret
or
jns
push
add
pop
dec
out
addr16
loope
inc
mov
movsb
jo
cmp
jle
xchg
imul
mov
fimull
cli
test
rorb
icebp
inc
jg
test
add
inc
mov
pop
xlat
decb
incb
sarb
sti
daa
test
jmp
sbb
lock
ja
out
es
jmp
jecxz
ja
movl
add
pushf
pop
addr16
add
insl
push
lods
adc
mov
pop
add
fiadds
pop
jo
jae
jmp
cwtl
imul
test
pusha
mov
pop
push
pop
insl
roll
call
jmp
mov
js
scas
gs
aas
movsl
dec
insb
rorl
dec
je
stos
push
ret
rolb
adcl
outsl
adc
mov
xchg
adc
push
xor
sbb
push
sbb
mov
inc
pushf
rcrb
lods
insl
dec
cld
or
push
lcall
mov
je
or
push
dec
lret
fs
mov
xchg
pusha
adc
je
stc
pop
adc
test
cmp
lds
mov
lret
loop
mov
jg
xchg
inc
je
xchg
cmc
fisttps
cmp
cmpsb
pop
or
mov
and
inc
int
and
xchg
out
xchg
fmull
xchg
and
xchg
push
pushf
ret
sbb
aas
bound
add
mov
push
sbb
lock
pop
pop
es
xchg
bound
xchg
out
jnp
inc
shll
fdivl
adc
out
push
push
sub
push
mov
neg
rorl
repnz
cmc
mov
sub
xor
or
movsl
dec
lcall
roll
outsl
nop
lods
test
mov
push
inc
lahf
bound
loopne
cmpsl
adc
bound
mov
in
aaa
add
cli
js
push
aad
xchg
repz
out
mov
les
sbb
outsb
outsl
push
inc
inc
mov
popf
pop
out
push
xchg
test
outsb
movsb
xchg
arpl
test
xchg
sub
mov
xor
lcall
aaa
push
test
out
or
push
jl
pop
inc
pop
loop
fsub
daa
lock
popf
int
and
aas
popf
adc
mov
stc
das
out
ljmp
adc
fs
stos
lods
aaa
flds
dec
mov
idivb
in
insb
loope
cmpsl
push
pop
adc
cltd
cltd
push
cmpsb
clc
sub
push
pop
or
push
mov
and
or
mov
sbb
arpl
mov
sub
mov
sub
pop
in
push
jb
clc
mov
imul
mov
lods
mov
test
call
jmp
idivl
dec
mov
data16
sbb
mov
out
mov
nop
jecxz
andl
push
aad
pop
xlat
and
or
out
cmpsl
sbb
loopne
repnz
jl
insl
cmp
xor
xor
mov
mov
iret
insl
test
adc
sbb
mov
es
dec
inc
sub
lcall
mov
bound
push
gs
mov
lea
mov
cmc
les
nop
pop
dec
gs
sub
xchg
pushf
xor
popf
jge
lods
or
jnp
cmpsb
sub
incb
or
fiadds
rcr
sbb
lods
and
ret
xor
mov
outsb
sbb
or
ja
fwait
sub
xor
add
mov
rolb
in
push
cmp
push
aas
push
test
adc
outsb
cmpsb
popa
ficompl
lret
fcoms
lods
nop
jmp
jecxz
push
or
cmovae
pop
mov
xchg
cmpsb
clc
push
sub
or
rcrl
push
sub
push
loop
stos
out
or
mov
mov
or
pushf
inc
lret
jge
ss
into
dec
cmp
lock
inc
jno
and
das
sbb
pop
mov
push
or
push
fistl
cmc
jno
mov
rolb
pop
pop
icebp
outsl
test
push
lea
dec
sarb
pop
push
mov
add
add
sbb
insl
mov
add
test
mov
mov
push
mov
jo
dec
mov
xor
lret
fiaddl
mov
data16
lea
fcomip
xor
sbb
mov
lret
pop
scas
divl
cmp
cs
leave
insb
cmp
data16
push
push
push
or
cmpsl
shll
pop
aam
iret
cmpb
lcall
push
xchg
adc
cmp
inc
adc
xor
xor
push
adcl
xor
xchg
imul
jle
jmp
cmp
jg
popa
pop
mov
mov
or
mov
mov
pop
lock
mov
hlt
xor
movl
jno
imul
stc
adc
jecxz
mov
sbb
adc
adc
aam
sbb
ljmp
movsb
cltd
pop
jp
fimull
push
cwtl
loop
notl
and
pop
mov
out
lahf
lcall
enter
push
mov
clc
xlat
sti
pusha
or
jae
inc
movsl
adc
call
sbbb
xor
das
insb
xchg
pop
add
or
cmc
stos
mov
hlt
adc
and
negb
mov
and
idivl
ljmp
repnz
addb
stos
inc
push
pop
test
roll
or
daa
xchg
sub
mov
mov
popf
adc
xchg
hlt
and
inc
mov
dec
loope
movsl
test
mov
sbb
cmp
pop
test
repz
cs
cld
js
mov
nop
push
testb
das
int
and
call
xchg
arpl
cld
in
sub
test
ss
shll
cld
out
push
jecxz
mov
mov
hlt
lds
mov
outsl
push
push
mov
cmp
movsl
mov
mov
outsb
xor
pop
sbb
ds
js
push
xchg
mov
sub
cli
pop
lcall
out
arpl
xchg
aam
jg
sbbl
bound
dec
mov
jle
int3
jno
inc
out
sahf
mov
hlt
jge
push
ja
pop
subl
jecxz
mov
lods
nop
push
es
sbb
mov
das
pop
lret
jb
orl
leave
ss
inc
mov
aaa
adc
fisttpll
mov
sub
mov
push
inc
dec
pusha
orb
inc
test
fisubl
jmp
and
pusha
adc
je
sub
stos
and
and
subb
stos
and
cmp
xchg
pop
outsl
adc
sti
nop
addr16
sbb
addl
jmp
inc
popa
and
and
out
jmp
mov
cmp
adc
aaa
lret
pop
jecxz
lock
imul
ficoms
ds
cmp
lods
cli
sub
cmp
out
inc
movsb
add
lods
sub
pop
xor
dec
add
insb
dec
out
inc
mov
push
gs
xlat
mov
int3
xchg
icebp
inc
pop
push
dec
movl
mov
lcall
mov
call
xchg
scas
mov
sub
mov
add
daa
and
std
push
mov
mov
push
nop
dec
mov
gs
sbb
loop
dec
fcoms
movsb
ja
dec
test
pop
push
inc
test
in
add
push
pop
sub
add
sub
pop
test
pop
sub
jbe
sbb
xorb
int3
jb
rolb
test
jo
ja
cmpsl
mov
adcl
or
jno
add
nopl
mov
sbb
sbb
nop
sub
fiaddl
and
jp
faddl
dec
sbb
mov
fs
je
pop
mov
and
xlat
ret
fstp
push
out
dec
sub
push
mov
stc
adcl
and
lods
ret
jle
subps
dec
bound
in
ds
stos
jg
push
push
inc
ja
push
inc
pop
icebp
in
std
pop
dec
add
mov
adc
push
stos
lret
lret
inc
out
outsb
mov
out
or
fmulp
jge
sbb
jle
add
sbb
sarb
sbb
leave
loop
adc
add
outsb
addl
js
push
pushf
inc
jl
test
mov
aaa
jo
in
mov
out
adc
jl
fistps
mov
mov
iret
lock
outsl
aas
mov
cli
xor
mov
fnstcw
push
pop
dec
dec
push
jle
call
int
push
mov
inc
sub
jmp
sbb
jnp
mov
outsl
fnclex
imul
orl
inc
mov
jmp
mov
test
mov
ret
and
push
push
mov
pusha
fmuls
mov
imul
es
dec
add
test
dec
and
xchg
sbb
test
mov
push
aad
jnp
adc
mov
push
aam
xor
hlt
lcall
inc
cmp
mov
jl
pop
insl
ss
popf
inc
fs
mov
sub
xor
bound
aam
push
loope
cmp
cmpsl
aaa
mov
icebp
mov
punpckldq
decb
aas
push
push
jb
fs
mov
xchg
pop
pushf
sbb
push
lret
push
fnstenv
xchg
sbb
add
mov
xor
or
incb
xor
inc
lahf
mov
push
push
out
ret
shll
fadd
lea
or
adc
adc
aas
inc
sbb
pop
jl
push
push
inc
push
test
xlat
cmp
sbb
cli
or
push
out
xchg
pop
mov
xor
adc
shlb
lea
fldenv
jmp
jle
adc
jbe
popa
orl
and
es
div
and
push
call
add
xchg
les
out
int3
jno
aad
xchg
aaa
inc
clc
fstl
call
mov
mov
call
sub
cld
fisubrs
adc
xor
sbb
adc
movsb
clc
movsl
sub
mov
jmp
test
pmaddwd
xor
or
add
mov
adc
xchg
adc
jns
mov
mov
xchg
jle
inc
jmp
movsb
sahf
push
xchg
call
int
cmp
fistpl
push
xor
or
mov
sbb
jg
xor
adc
adc
xchg
lods
adc
dec
jecxz
pop
leave
xchg
rcr
lods
fsubs
lret
cltd
jne
xor
aad
add
stos
inc
jmp
inc
sbb
aaa
movsl
dec
and
xchg
stos
outsl
js
fiadds
les
jae
mov
push
mov
in
fs
out
fistpll
or
sbb
adc
mov
ret
std
int
fcomps
fidivrs
in
lods
mov
cmp
in
sub
xlat
mov
cltd
xor
inc
shl
dec
into
call
cmc
andl
inc
sbb
push
adc
std
sub
fmul
and
mov
jb
sub
xor
fmul
sub
push
std
sub
pop
mov
lods
adc
mov
xchg
fistpl
pop
test
jbe
mov
xchg
outsl
lret
loopne
test
rcll
insb
je
out
mov
loopne
inc
es
push
ja
in
jmp
jbe
sbb
ret
les
xchg
repz
sbb
xor
jbe
ret
adc
sbbl
lock
les
sub
inc
lret
mov
fsqrt
out
push
dec
jb
dec
addb
pusha
sarb
fldcw
mov
xor
popl
in
fistps
mov
mov
sub
cltd
sbb
xlat
mov
mov
fsubs
jo
jns
div
nop
lea
mov
mov
ret
imul
jg
shll
xchg
mov
mov
push
inc
jne
dec
mov
xor
testb
mov
dec
or
mov
stc
xor
pop
mov
and
cli
mov
dec
dec
out
lret
and
ret
ds
sbb
pop
shlb
stc
imul
and
iret
add
mov
xor
and
and
sub
jbe
lods
add
loope
lret
inc
ja
dec
xor
inc
mov
pop
xchg
ret
std
jae
out
inc
xor
mov
mov
jg
sbb
mov
clc
into
pop
pop
scas
movsl
int
sahf
mov
push
sub
int
fmull
sahf
mov
adc
cwtl
ljmp
test
inc
xchg
shl
loopne
mov
pop
in
rol
xchg
int3
mov
inc
mov
cmp
adc
xor
jne
or
ret
mov
xchg
pushf
mov
imul
push
je
shr
cmp
pop
mov
shlb
cld
and
xchg
and
adc
cmp
xchg
ds
gs
scas
inc
xor
fwait
and
and
shl
push
add
sub
fistps
nop
insl
cmp
jne
jp
adc
data16
in
jo
xor
cltd
sbb
bound
mov
in
sbb
mov
jge
mov
inc
adc
push
push
sub
outsb
mov
sbb
lret
jle
fwait
cmpsb
aad
in
or
jecxz
leave
dec
and
mov
jb
xor
add
mov
sahf
xor
sahf
xor
out
jmp
push
sti
int
pop
or
and
lcall
jbe
sub
dec
jecxz
jle
fdivrs
mov
inc
mov
out
les
push
or
and
data16
sarl
mov
ret
out
bnd
popf
pop
push
mov
pop
mov
je
mov
loope
dec
jnp
add
mov
int3
mov
mov
in
test
sbb
repz
repnz
outsl
and
in
dec
pop
outsb
sahf
sub
stos
lock
stos
adc
xor
call
lret
mov
dec
test
push
lds
and
cli
stc
andnps
int
dec
xchg
lods
mov
cld
adc
outsb
sub
push
into
ss
push
add
add
mov
and
cltd
xor
sbb
or
enter
push
pop
dec
xor
mov
xchg
shlb
push
mov
or
xchg
movsb
mov
dec
and
mov
pop
xorl
or
and
xor
in
add
ss
add
pushf
dec
jle
sub
jle
cld
mov
pop
cmpsl
lock
or
lahf
test
push
add
add
lret
icebp
lcall
aas
sub
inc
test
or
sub
sub
cwtl
aam
lds
and
sahf
cmp
dec
rolb
outsl
mov
adc
lods
fcoml
jp
pusha
scas
data16
hlt
je
jno
pop
insl
cmpsb
mov
aas
arpl
icebp
imul
mov
cmpsl
mov
rcll
ja
pop
mov
aas
sbb
push
fisttpl
dec
sub
mov
jbe
pop
imul
les
js
jnp
lcall
jp
out
mov
fldl
mov
xor
or
mov
into
pop
jnp
pop
int
push
stos
movsl
mov
sub
out
cmp
lea
mov
outsb
sub
jbe
lock
dec
cmp
rcrb
cmp
pop
loope
ret
xchg
cmp
jg
repnz
cmp
lret
movb
jecxz
popf
jno
imul
sbb
push
sarl
ret
lock
xchg
inc
push
pushf
imul
push
js
out
into
iret
addr16
jg
ret
inc
orl
aad
popf
movb
or
shlb
into
push
fldenv
and
pop
and
jge
jb
inc
popa
adc
cwtl
xor
sub
xchg
sahf
jb
jmp
sub
jno
mov
cmp
mov
int3
push
inc
cmp
push
dec
es
push
push
dec
popf
sub
hlt
pusha
pusha
je
adc
jns
loope
les
pop
int3
pop
clc
adc
jns
sbb
inc
ljmp
test
cmp
or
loopne
rcr
dec
mov
iret
or
mov
mov
sbb
test
aad
sbb
ret
lods
out
pop
jae
sti
mov
int
inc
sbb
jne
push
dec
mov
sbb
adc
cmp
sub
xchg
es
mov
add
lea
dec
pop
xchg
js
out
adc
push
jne
mov
pop
and
push
movsl
sbb
sbb
push
cmp
int3
les
andl
mov
inc
jns
adc
add
jo
mov
push
into
sub
or
push
movsb
xchg
outsl
xchg
adc
andb
scas
sbb
pop
loopne
mov
outsb
dec
mov
rclb
xchg
xor
and
test
sahf
mov
addr16
arpl
sldt
enter
test
test
leave
ljmp
jge
pop
sub
xor
jne
mov
push
popa
and
shl
dec
xor
jle
mov
lcall
mov
clc
adc
jne
shl
lret
in
call
jb
jmp
jbe
leave
mov
jg
aas
cmp
push
pop
pop
jo
or
mov
fwait
jle
mov
cli
movb
add
push
jns
lods
mov
pop
adc
fsubs
add
jnp
pop
inc
mov
jle
mov
dec
bound
add
getsec
sbb
inc
ja
ljmp
pop
sub
inc
pop
and
fsubp
cs
sub
or
xlat
lods
jecxz
inc
or
xchg
jb
mov
push
inc
and
cmp
sbbl
inc
sbb
jbe
inc
mov
adc
ss
dec
ret
fldl2t
sarb
rclb
dec
lods
pop
or
mov
fstp
cli
popa
testb
cmp
mov
out
outsl
lock
jle
or
push
popf
lods
pop
sub
jbe
loop
push
mov
pop
mov
adc
int3
loope
bound
xor
sbb
or
nop
and
das
icebp
or
inc
cmp
push
jnp
cmp
mov
pop
jo
xchg
add
jp
out
pop
pop
int3
xor
ljmp
daa
add
xchg
sbb
in
movsb
fcoml
dec
popa
mov
adc
inc
pop
xchg
add
lret
pusha
mov
xchg
repnz
adc
and
and
mov
bound
call
cmp
push
xchg
out
inc
pushf
aas
pop
daa
inc
aam
and
sahf
add
fidivl
out
jl
pop
fcomip
xchg
jg
hlt
adc
cmpsb
fwait
cmpsb
mov
jb
add
fxam
pop
sbb
add
enter
dec
cmpsl
js
adc
fisubrl
int
add
pop
test
movsl
and
popf
cld
sbb
cmp
fcmovu
call
icebp
jg
pop
lret
inc
sub
lods
mov
int
jecxz
push
jmp
das
ja
jnp
jmp
push
mov
mov
dec
adc
xchg
sarb
jno
aas
mov
add
addl
sub
push
jmp
aaa
ljmp
mov
mov
popf
cmpsb
inc
jge
cmpsl
lods
dec
adc
adc
sbb
aaa
xchg
inc
cmp
cmp
aam
aas
xor
pop
mov
cmp
mov
dec
out
insb
mov
push
aad
sub
xor
call
xchg
xor
cmp
xchg
mov
push
fisttps
stos
jne
in
fidivrs
int
mov
addr16
lahf
aaa
ljmp
jl
mov
leave
push
testb
imul
push
push
add
jecxz
dec
inc
inc
movsb
lods
imul
dec
mov
test
rorl
mov
dec
cltd
lahf
in
ljmp
mov
fisubs
rclb
test
ret
jmp
insl
lret
push
mov
cmp
sbb
and
mov
add
mov
pop
aam
mov
fbstp
jp
or
pop
push
sub
enter
cs
or
mov
call
ret
out
mov
cmpsl
add
dec
in
jbe
adc
jnp
xchg
add
pop
cmc
xor
adc
out
push
inc
ss
out
or
adc
hlt
jo
in
mulb
lahf
lea
and
add
push
mov
push
inc
popf
add
xchg
pop
lods
jbe
fldl
ret
push
lret
jge
inc
mov
ret
push
les
pop
iret
stos
adc
jg
test
into
mov
lret
jp
into
dec
sbb
jmp
sarl
stc
scas
inc
cli
xchg
fidivrs
in
jae
ror
lcall
in
cmp
pusha
test
movsb
subb
aad
fs
jno
sbb
out
bound
pop
inc
jb
mov
in
leave
inc
push
clc
adc
sub
push
jne
lods
pop
mov
lret
sbb
sub
frstor
es
decb
lcall
bound
xor
lods
jae,pn
dec
leave
sbb
popa
mov
xchg
xor
jno
outsb
lods
dec
push
mov
insl
inc
adc
push
push
sub
popa
stos
pop
repnz
jl
and
mov
dec
cmc
mov
jns
test
add
push
xchg
push
push
loopne
out
fidivrs
add
rcrl
push
inc
or
f2xm1
fmuls
fdiv
jb
lds
aas
push
dec
and
adc
sub
sbb
cmc
dec
rcll
mov
scas
push
mov
fcmovne
fidivrs
pop
push
iret
mov
sbb
ds
pop
movsb
sbb
pop
ficoms
add
outsb
inc
or
pop
daa
jae
pop
dec
dec
lods
jns
fisttps
stos
inc
js
movsl
xor
pop
add
aaa
xlat
adc
icebp
adc
dec
cmp
sarb
jo
sub
mov
xchg
loopne
scas
cli
jns
push
scas
and
dec
inc
and
pop
fucomi
pop
and
jo
dec
mov
inc
aam
xor
push
in
lock
aas
das
sub
mov
adc
ret
and
les
pushf
std
xor
push
xchg
out
je
mov
fs
stos
jg
addr16
sbb
ljmp
jp
push
cli
mov
add
scas
cmp
psrad
mov
lret
call
inc
test
std
push
gs
adc
test
jae
pusha
cltd
sbb
xchg
andl
loopne
jg
cmp
or
cltd
lret
mov
push
pop
hlt
jp
sub
mov
icebp
fadds
mov
lcall
out
subb
clc
movl
jmp
arpl
lock
imul
test
ret
rorb
mov
imul
mov
add
not
add
aam
sub
lock
mov
pop
test
outsl
jl
sti
out
xchg
aas
mov
ret
adc
ret
push
jno
pop
jns
jecxz
mov
add
scas
mov
sub
lods
add
lret
es
adc
inc
ret
xchg
sub
std
mov
push
mov
cs
or
fcom
pop
pop
stos
sub
jle
dec
mov
mov
adc
call
popa
test
jle
cmp
ret
aaa
push
outsb
sbb
mov
jne
jecxz
movsl
orb
add
test
or
inc
fisttps
inc
sbb
dec
jge
div
insb
nop
push
iret
dec
or
in
push
pop
bound
sbb
lods
loopne
in
or
aaa
push
push
in
test
mov
sbbb
sbb
and
mov
imul
mov
ss
cs
jmp
dec
push
fstl
loopne
xor
mov
adc
shl
or
xchg
mov
pop
out
mov
les
xor
ja
lea
mov
sub
cmp
testl
pop
stc
inc
pop
shll
mov
xor
or
or
jp
inc
sub
mov
fistps
jb
rcrb
cmpsb
into
and
outsb
addl
pushf
scas
adc
loopne
dec
mov
adc
shll
xor
xchg
les
jge
or
or
mov
inc
faddl
dec
dec
ficomps
aad
sbb
fwait
xor
cmp
daa
and
fs
int
mov
ja
enter
add
mov
clc
jecxz
cld
imul
push
push
das
sub
popa
push
orb
test
loop
dec
in
mov
sbbb
aad
inc
inc
test
gs
addb
xor
imul
outsb
scas
jb
je
mov
jmp
loope
mov
xchg
dec
fstps
shll
sbb
lods
pop
ret
or
jb
aam
xchg
divb
mov
inc
sub
or
inc
cmp
out
dec
scas
dec
sub
bound
das
jnp
mov
repz
bound
adc
mov
leave
mov
addr16
push
stc
jp
or
js
and
push
mov
daa
push
add
jnp
mov
fiaddl
das
in
jb
xchg
mov
outsb
adc
stos
cwtl
push
aam
mov
jg
cltd
incb
xor
xlat
imul
ja
dec
xchg
rclb
dec
pop
fcmove
pop
int
mov
in
movsb
xchg
pop
sarb
adc
je
pop
syscall
ret
sarb
cltd
or
jnp
aas
jne
xor
mov
out
enter
cmp
add
pop
rolb
sub
fistpl
add
xchg
sub
pop
pushf
pushf
dec
fisubrs
add
sbb
mov
stc
xchg
in
test
cmp
adc
push
xchg
das
jl
roll
clc
scas
fnstsw
jne
and
add
mov
sub
paddb
jp
jbe
xchg
movsb
mov
or
lods
leave
pushf
sub
cmp
pop
into
int
call
sub
stos
out
push
scas
pop
imull
sub
mov
ds
mov
cs
into
inc
adc
push
and
mov
xor
into
out
jl
or
xlat
mov
jns
test
sbb
sub
add
dec
or
cmp
dec
push
rclb
xor
fildl
out
dec
xchg
out
push
aam
xor
add
mov
cmpsl
fsubr
push
pop
jge
mov
loopne
es
sbb
adc
call
test
sub
adc
loopne
dec
jb
arpl
or
stos
sbb
testl
push
ljmp
sub
and
inc
sbb
lds
std
inc
xlat
adc
lret
dec
mov
inc
and
sahf
pop
bswap
imul
jne
pusha
idivl
inc
hlt
push
leave
and
or
pop
adc
xor
dec
sbb
lcall
orb
xchg
mov
pop
cmpsl
or
in
js
imul
das
int
or
or
aaa
mov
in
add
loope
xchg
inc
pop
in
xor
fcoms
mov
and
int
icebp
aad
stos
mov
ljmp
sbb
xchg
cmp
rorl
jne
push
lods
push
in
repz
mov
lret
icebp
es
add
ljmp
cmc
xchg
mov
mov
mov
push
pop
das
pushf
xor
sub
add
push
xchg
daa
inc
lahf
inc
inc
mov
fisubs
lock
movsb
add
ret
insl
call
inc
or
mov
push
or
test
test
out
jbe
iret
gs
into
enter
icebp
jl
popf
jecxz
fistl
cmp
clc
test
pop
call
mov
mov
or
adc
arpl
mov
fistps
vpmacsswd
xchg
in
push
loopne
push
push
jae
xor
inc
mov
data16
add
movsl
xor
aaa
les
push
add
sbb
push
insb
and
add
adc
adc
or
fnstcw
loop
outsl
std
lret
push
sbb
pop
in
lds
call
in
aam
pop
lret
adc
hlt
push
aaa
pop
sti
cmp
int3
xchg
aam
insl
sbb
scas
rcrl
xor
sbb
imul
dec
popf
ret
xchg
test
jecxz
and
enter
or
fidivrl
mov
fisttpl
xor
xor
inc
lret
ret
jbe
sbb
push
cwtl
adc
daa
jecxz
cmp
stc
adc
pusha
data16
mov
jp
pop
arpl
push
adc
cmp
js
adc
push
mov
push
mov
test
sbb
aam
pop
xchg
and
mov
fidivs
daa
lods
push
sub
cmp
cmp
outsb
jbe,pt
inc
adcl
adc
sub
jecxz
adc
out
arpl
xor
sbb
test
fsts
fs
pop
add
mulb
imul
push
jle
lea
sbb
shll
es
stc
adc
jo
cld
in
popw
enter
jge
fcmovu
xchg
sbb
dec
mov
dec
or
std
iret
out
mov
nop
cwtl
insb
lcall
lds
scas
hlt
sbbl
shl
cld
loopne
push
xor
jecxz
clc
unpckhps
pop
lods
sbb
outsl
push
push
pop
icebp
fistps
pop
int3
out
add
inc
in
cmpsb
inc
sbb
cld
lcall
fstl
test
cmc
inc
mov
movsb
cs
sahf
in
sub
mov
jae
lock
sub
mov
pop
push
js
sbbb
lock
mov
mov
inc
iret
xor
push
xchg
xchg
pop
pop
pop
or
pop
test
ror
mov
clc
enter
sbb
aas
nop
sbb
mov
or
pop
jnp
out
cmp
lods
inc
mov
add
push
pop
jmp
out
iret
cmp
les
test
xchg
add
shl
stc
fstl
mov
lea
inc
dec
mov
mov
fcompl
fiadds
movsb
adc
pop
data16
pop
data16
imul
insl
scas
jbe
leave
fmul
daa
xchg
ret
mov
andl
and
fisubs
mov
movsb
push
mov
mov
sbb
dec
dec
xchg
push
cs
shrl
or
cltd
xchg
jp
add
dec
push
fadd
inc
sub
mov
stos
and
fisttpl
dec
cmp
out
aad
adc
imul
inc
shll
pop
add
imul
dec
popf
lds
pop
testb
imull
repz
mov
adc
and
sub
jecxz
mov
test
es
jp
mov
cmpsb
scas
and
mov
imul
sbb
leave
fwait
add
inc
lea
sub
leave
mov
rcr
xor
mov
fidivrs
dec
and
iret
in
cmp
lahf
getsec
cmp
sbb
xor
inc
out
jp
rolb
push
mov
inc
notl
test
xchg
xor
imulb
sti
idivb
cmpsb
sti
fists
push
or
out
xchg
mov
adc
fistps
mov
xor
inc
inc
repz
stos
outsl
cltd
int
mov
jbe
ljmp
orl
jbe
xchg
cli
add
lods
inc
orb
adc
lcall
add
gs
cmc
gs
jnp
xorb
sub
test
ret
dec
ja
mov
ficompl
and
mov
and
xchg
mov
jne
popa
jecxz
insb
movsl
in
gs
xchg
and
adc
repz
je
pop
aad
js
xchg
sbb
repz
xchg
in
cmpsl
push
jbe
fucomi
add
xchg
mov
push
xchg
push
aam
test
mov
xchg
icebp
pop
ljmp
gs
push
das
out
xor
sub
add
das
mov
jo
xchg
mov
pop
xchg
inc
int
ljmp
xchg
sub
addr16
dec
loopne
and
pop
or
gs
mov
xchg
lea
lret
test
xor
lret
jo
negl
mov
push
in
clc
inc
lods
mov
xor
fs
decl
pop
or
insb
int
inc
mov
clc
xor
push
jmp
adc
or
es
push
push
push
jg
pop
inc
inc
cld
std
int3
adc
mov
fdivrp
cs
push
ret
xchg
scas
sbb
xchg
cmpsl
insb
cld
out
jg
xchg
mov
jo
jo
jp
xchg
push
pop
andb
mov
or
sub
addl
mov
dec
sbb
in
shll
adc
lea
dec
outsl
cmp
popf
xchg
ficomps
jl
sub
lcall
mov
je
inc
add
ret
mov
popa
sbbb
mov
push
enter
and
inc
fcomp
mov
add
fsubl
iret
out
and
mov
lcall
mov
clc
popf
cmp
repnz
xor
cmp
mulb
testl
fisubrs
cmp
pop
rcl
xlat
test
stos
adc
dec
imul
mov
mov
xchg
mov
inc
int3
mov
popa
mov
je
ret
pop
ss
out
imul
rcl
jns
mov
add
fwait
inc
dec
cli
xor
ret
jbe
xor
sbbl
mov
cld
js
mov
fsubrs
xor
fiadds
ds
xor
lods
mov
insl
xchg
jmp
mov
mov
dec
iret
ret
test
out
int3
and
aas
xchg
xor
xor
into
mov
mull
pop
xchg
or
cld
fldenv
push
pop
cli
fisttps
or
fs
pop
sahf
andb
xor
add
mov
pop
scas
das
push
inc
dec
xor
inc
mov
mov
xchg
bnd
pop
pop
les
inc
inc
incb
xchg
cld
mov
mov
lds
xchg
fcom
jg
jecxz,pt
sbb
xor
cmp
ljmp
jb
and
lock
pop
pop
sub
mov
xchg
sub
cmp
adc
repz
int3
clc
mov
add
ljmp
xchg
aam
xor
sbb
dec
or
pop
add
pop
xchg
jmp
mov
insl
sub
fs
sub
in
mov
push
dec
fisubrs
mov
mov
mov
data16
xchg
fsts
in
out
das
xor
rorb
adc
xor
and
push
mov
sub
dec
push
gs
mov
out
cvtdq2ps
clc
cmp
imul
adc
lds
fdivr
jno
loope
dec
mov
cmp
add
pop
cmp
inc
scas
sti
xor
jne
rcrl
nop
jmp
sub
xor
leave
jnp
std
push
mov
inc
out
add
sub
arpl
aaa
shll
outsb
inc
jo
pop
out
sub
aas
mov
stos
push
es
lock
mov
push
into
outsl
stos
dec
add
lea
cli
jle
lea
roll
ficompl
fcoml
lds
add
out
dec
mov
pop
mov
cmp
out
es
mov
pop
push
xchg
pop
jg
scas
jle
ja
ret
or
mov
stos
push
aaa
aad
jno
push
sub
lods
clc
cwtl
js
and
out
mov
subb
mov
sarb
aaa
addl
lods
mov
mov
ret
test
cltd
mov
sarl
addr16
cmp
adc
mov
hlt
dec
jle
mov
cmp
lret
adc
or
sub
fwait
xlat
fs
int
cmp
xchg
or
imul
xchg
sub
xchg
mov
inc
adc
repz
push
lret
adc
pop
fldl
mov
push
aam
dec
add
sbb
pop
mov
lds
dec
shll
jnp
and
mov
imul
iret
loope
jne
mov
sbb
mov
jmp
or
aaa
fs
jb
rolb
lods
cwtl
ss
and
stos
nop
arpl
mov
pop
cmpsl
fxch
and
pop
dec
pushf
loope
sub
jmp
or
cmp
ds
bound
mov
inc
insl
lods
sbb
mov
rcrb
icebp
imul
movsl
test
sbb
clc
jmp
popa
xor
jg
push
push
out
nop
lcall
das
bnd
jne
jns
cld
cmp
pop
mov
loop
pop
or
inc
rcrl
pop
jg
pop
rcll
stos
pop
mov
mov
inc
out
adc
sub
out
pop
sub
lahf
xor
movsl
and
add
dec
hlt
cwtl
inc
fbld
loopne
addr16
icebp
sahf
lcall
add
xor
loop
loop
iret
fildl
imul
jae
lods
lret
shrl
movsl
cmc
push
sti
pusha
scas
mov
push
gs
dec
pop
out
imul
mov
out
dec
mov
fidivrl
jae
adc
flds
aad
xor
mov
jecxz
xchg
test
jl
dec
jae
lods
or
or
jno
fnstenv
xor
cmp
add
cmp
aad
ljmp
xchg
or
aaa
inc
jnp
pop
sbb
or
stos
inc
lret
ja
fwait
add
push
pop
outsl
rsqrtps
popa
sub
mov
popf
or
xchg
sub
sub
mov
adc
aas
jle
sbb
jle
jne
fwait
jg
dec
add
mov
and
dec
push
mov
sbb
xchg
and
out
or
jmp
cmpsl
fdivrs
or
cld
lods
fcmove
push
mov
cmp
aam
lods
or
push
loopne
daa
daa
scas
mov
rorl
out
pop
inc
mov
cli
add
stos
insl
mov
inc
fdivs
cmp
mov
negb
aaa
sbb
std
xor
dec
dec
std
pop
add
repnz
int
pushf
push
hlt
shll
mov
enter
and
mov
adc
dec
sub
pop
lods
xchg
clc
test
mov
dec
mov
xor
jl
sbb
in
movsl
push
mov
xor
add
push
jmp
data16
fcomip
mov
and
lods
cmp
daa
lret
cmp
inc
out
outsl
dec
leave
clc
sbb
sti
inc
cltd
pop
jg
pop
cli
add
popa
xchg
daa
xor
jle
pop
ljmp
testl
pop
pop
sub
cmp
push
xchg
pushf
mov
je
repnz
and
push
add
in
push
fiaddl
ljmp
jecxz
xlat
sbb
lea
or
outsl
test
popf
enter
shll
out
adc
cli
cmp
sub
mov
pop
out
sbb
int3
cmp
xchg
dec
mov
and
out
inc
pop
mov
js
imul
fxch
pop
add
push
hlt
mov
xchg
pop
jecxz
jmp
icebp
inc
mov
push
cmpsb
pusha
jae
out
sbb
mov
pushf
daa
bnd
push
hlt
and
loop
pushl
nop
ds
or
outsl
out
and
cltd
jae
enter
lea
inc
das
mov
leave
shlb
push
fstpt
dec
xor
mov
lods
icebp
testb
movsl
sbb
loop
xor
sub
es
pop
pop
ljmp
push
adcb
jp
stc
sar
xor
fistps
mov
or
pop
sub
cld
sbb
call
outsl
cmp
shrl
mov
in
xchg
push
mov
data16
sbb
mov
fstl
add
sub
cld
mov
gs
repz
and
ljmp
loopne
inc
lahf
adc
adcb
popa
out
cmp
or
mov
sbb
add
push
hlt
fildll
ljmp
inc
aad
test
sbb
lret
arpl
sti
and
popa
sub
stos
inc
ja
imul
gs
les
dec
mov
sahf
or
mov
imul
sahf
sbb
negl
std
pop
jo
imul
arpl
pop
jne
lcall
xchg
outsb
push
cltd
sbb
insl
gs
xor
std
in
push
cli
adc
or
or
mov
daa
lods
scas
xchg
cmp
int3
out
outsl
out
mov
fbld
jns
testl
cs
popf
pop
scas
inc
fisttps
mov
adc
xchg
aam
push
adc
mov
jmp
inc
lea
cs
add
sub
fsubrl
enter
std
sub
pop
int3
jmp
xor
orl
cmpl
add
aad
dec
cmp
scas
lcall
xor
push
or
mov
or
or
mov
jg
jecxz
xchg
ret
out
pop
pop
pop
jns
xchg
xchg
xchg
ret
dec
icebp
dec
ja
ja
dec
popf
aaa
dec
push
cmp
jmp
jnp
jno
cmp
repnz
cltd
sbbb
pop
test
jge
xchg
mov
decb
cmp
mov
daa
mov
sub
and
pop
sub
mov
sbb
or
lea
lods
jecxz
lret
cltd
mov
jae
clc
lcall
adc
adc
stos
orb
or
push
jb
inc
adc
je
dec
fstpl
fldl
mov
dec
cmp
cld
push
sbb
jmp
xor
lcall
in
and
mov
mov
sbbl
fisubl
mov
cmc
cmp
stc
xchg
jnp
push
mov
test
jecxz
xchg
enter
sub
jl
mov
xor
fstl
xor
cmpsl
pop
push
jmp
cs
xor
repnz
lods
push
js
mov
out
sbb
mov
mov
loope
cmpsl
adc
sub
pop
mov
sti
jmp
neg
pop
fs
scas
test
xchg
aaa
inc
fisubrs
xor
add
int
pop
lahf
sbb
iret
cli
and
out
mov
clc
or
les
mov
mov
push
xor
notl
rcrl
cmpsb
mov
lret
mov
and
sbb
and
filds
mov
orl
mov
xchg
dec
subl
push
fwait
int
ret
sub
adc
cwtl
aam
sub
sub
rcrl
movsl
sub
dec
scas
fmuls
dec
mov
sub
movsl
ret
stos
cli
pop
stos
xorl
mov
loope
gs
mov
cld
mov
and
dec
popa
xchg
jg
dec
mov
bound
inc
dec
xchg
bound
xor
cmp
adc
or
fwait
icebp
xor
xor
sbb
push
fisubrl
inc
sbb
fs
jnp
mov
push
dec
inc
mov
mov
fidivl
push
xor
pop
in
pop
sub
iret
push
mov
sub
std
lea
mov
add
jne
pop
popf
add
outsb
push
in
fmul
sbb
inc
xchg
into
movsl
push
sub
in
dec
sub
imul
sti
sub
jnp
decb
aas
andb
cmp
push
imulb
clc
call
std
xchg
clc
mov
dec
xchg
rcrl
cld
pop
sbb
pop
cmp
dec
xchg
sbb
and
mov
ficompl
sbb
or
cmc
orb
xchg
or
or
mov
lret
push
mov
daa
lcall
cmp
fs
or
lods
test
dec
dec
pop
fdivrs
xor
sarb
arpl
stos
out
jp
push
sub
inc
sti
mov
subl
incl
int3
in
xlat
jge
leave
sub
add
imul
or
test
mov
scas
mov
ss
mov
callw
cvtps2pi
adc
mov
rorb
or
mov
sub
nop
inc
xor
cmp
cmp
mov
mov
or
mov
xchg
cwtl
int3
pop
popa
in
nop
sarl
stos
notl
cmpsb
dec
push
dec
sti
repz
lods
out
jnp
sbb
pop
lods
inc
int
in
sub
pop
mov
lcall
push
or
push
mov
mov
adc
lods
sub
dec
dec
ja
outsl
in
icebp
and
fs
das
scas
call
mov
sub
jmp
xchg
cmp
jns
fmuls
pop
and
iret
lock
repnz
mov
mov
popa
insl
ss
xchg
insb
and
lret
and
hlt
pop
adc
or
mov
or
pop
push
aam
mov
push
mov
scas
sbb
dec
fdivrs
aas
arpl
je
dec
pop
mov
shll
xchg
mov
daa
xor
test
xchg
sub
mull
xor
dec
jg
ret
xchg
mov
icebp
fists
mov
imul
jle
add
and
xor
pop
pop
dec
xor
pop
ja
int
cmp
push
inc
push
pop
std
loop
insb
mov
nop
adc
daa
leave
pop
xchg
dec
or
mov
ss
lea
cltd
insl
jo
pop
push
addb
cli
sub
push
je
loopne
lahf
jno
or
sbb
testl
mov
out
or
lods
jbe
stos
mov
xor
das
push
test
movsb
out
mov
jg
xor
add
and
cmp
out
test
stos
mov
mov
add
cli
arpl
push
inc
mov
add
xchg
scas
jecxz,pt
xchg
neg
rclb
movsb
roll
cld
inc
mov
lret
dec
xor
inc
pop
adc
mov
mov
inc
icebp
jo
cmp
push
addl
and
rcrb
lret
es
inc
xor
stos
aas
adc
imul
add
sub
xor
testb
xchg
and
push
das
mov
add
mov
es
leave
addr16
cmp
mov
sbbb
ja
arpl
out
pop
mov
jg
add
dec
and
pusha
jg
popf
push
mov
lods
cmp
adc
mov
inc
stc
push
dec
mov
pop
inc
in
xor
pop
ret
dec
pop
sbb
aad
xchg
in
sbb
cmp
mov
mov
mov
jge
fistl
cmp
cmp
inc
sub
sbb
mov
mov
push
or
jmp
or
mov
repnz
loop
test
mov
ret
or
cmpsl
dec
cmpsb
sbb
dec
or
std
ds
inc
dec
stos
lcall
push
test
mov
adc
adc
int
stos
fdiv
adc
sub
dec
dec
fldenv
iret
fs
sahf
dec
push
sbb
adcl
ficomps
imul
shlb
xor
xor
xchg
xchg
add
repz
pop
cmp
push
adc
add
pop
popa
sarl
fldt
xchg
inc
dec
scas
ret
jl
idivb
adc
push
loope
sbb
and
cmp
xor
sbb
test
addl
out
push
sbb
mov
sub
rorl
test
scas
insb
jns
test
aas
das
addr16
xor
inc
fldt
lods
dec
mov
nop
sub
js
rolb
push
cmp
adc
push
sbb
fucomip
dec
loopne
xor
mov
cmpsl
mov
gs
mov
pop
dec
adc
inc
int
and
mov
aad
and
cwtl
pushf
inc
pop
push
mov
add
push
sbb
cmp
mov
lock
mov
dec
inc
mov
push
and
push
in
cmpsb
jnp
and
hlt
sahf
andb
add
add
xchg
lds
add
sub
nop
testb
and
leave
mov
js
push
add
jge
mov
cmp
test
and
sub
insl
lret
test
fcomps
sbb
ss
stos
mov
ja
sbb
xor
movsb
sub
rolb
bound
mov
test
xchg
adc
jle
iret
dec
push
jo
pop
outsl
pop
addr16
add
in
int3
ret
xchg
jo
inc
out
stos
lcall
or
cli
dec
ljmp
inc
mov
dec
int
cld
jbe
popf
insl
sahf
and
shlb
shll
sub
out
mov
or
faddl
jmp
push
cmp
push
and
dec
xor
add
adc
test
xor
jnp
sbb
cmp
and
mov
rcl
inc
pop
fisttpll
stos
mov
jp
sub
jle
add
js
aam
or
xchg
lea
loop
push
xor
pop
pop
shlb
out
out
shrb
push
pop
jecxz
les
sbb
add
cmp
loop
mov
adc
dec
enter
notb
dec
cmp
add
pop
lret
add
or
or
loopne
xor
add
pop
jae
add
or
pop
cld
jle
movb
adc
jl
out
aaa
shrb
adc
test
push
push
push
and
dec
outsb
mov
cmpsb
stos
loopne
jg
stos
movntps
xorl
push
loop
out
call
imul
adc
xor
xchg
dec
shrl
insb
jp
adc
lock
dec
jns
or
pop
add
ja
mov
iret
iret
andl
pop
fwait
sbb
arpl
push
pop
test
pop
in
stos
fcomip
and
or
sub
mov
movsb
adc
testl
sbb
sub
jge
jmp
mov
call
mov
pop
mov
and
fsubr
fistl
ficompl
pusha
mov
mov
stos
mov
jnp
mov
scas
fstpt
arpl
pop
xchg
sub
dec
mov
inc
xchg
fildll
or
cmp
cmp
lea
inc
xorl
mov
xchg
and
cmp
mov
scas
cwtl
sti
pop
inc
cmc
jns
cmp
bswap
pop
subb
fstl
stos
sbb
lret
mov
or
xor
mov
or
xor
add
hlt
jmp
jmp
xor
mov
jo
pop
xchg
imul
fwait
lods
dec
aam
mov
movsb
xchg
and
pop
cld
fcmovnb
sahf
sub
sti
mov
out
test
aas
lods
aas
lods
fwait
xchg
cwtl
mov
mov
mov
xchg
fwait
and
outsb
mov
pop
add
inc
sbb
mov
cmpsl
and
pop
in
mov
lcall
sub
pop
test
jmp
xchg
add
jns
and
fsubrl
aas
adc
repnz
adc
cmp
mov
jle
push
ret
sub
sbb
jmp
repz
icebp
xchg
loope
mov
out
mov
push
enter
mov
dec
out
add
cld
arpl
imul
cmpsb
icebp
xchg
cmp
and
sbb
cmc
loopne
inc
xor
jae
xor
stc
pop
mov
or
jns
jne
movsb
jbe
mov
push
pop
in
aas
shrl
clc
or
xor
int
shl
mov
out
adc
lds
pop
xchg
ret
insl
inc
dec
test
loope
in
inc
add
push
mov
fs
sbb
dec
fidivs
jl
hlt
jl
sub
push
adc
sbb
sub
movsl
mov
mov
in
fwait
cmp
and
test
loopne
js
js
leave
pop
in
push
mov
test
inc
movsl
pop
xchg
fidivrl
cmp
adc
ret
sub
rorb
popa
je
pop
or
popa
inc
jae
adc
xchg
dec
pop
inc
ret
mov
mov
xchg
and
add
ljmp
push
add
pushf
sub
cmp
xorl
enter
mov
popa
js
and
ja
push
xor
fs
mov
sbb
std
cmpsb
lea
and
mov
push
mov
imul
stos
cmpl
popa
inc
mov
xchg
mov
cmp
mov
mov
aaa
lock
lret
jl
aad
lahf
jp
cli
mov
aaa
call
bound
lret
bound
insb
xchg
push
mov
jp
iret
js
adc
mov
loopne
push
jno
xchg
cli
dec
jg
test
add
jl
inc
add
pop
outsl
fstpt
sub
out
sub
js
mov
add
imul
popa
cs
push
and
push
out
jb
or
mov
lcall
add
sub
aaa
mov
mov
jnp
das
mov
in
jl
push
pusha
lods
leave
jo
mov
lods
add
inc
inc
aam
inc
xchg
sub
mov
out
pop
sahf
ljmp
call
add
cmp
je
mov
adc
adc
sub
sbb
jbe
or
dec
mov
inc
lds
push
adc
cmpsb
add
cmc
jns
sbbl
repnz
aam
xor
dec
jl
sub
jp
mov
leave
pop
cmp
sub
mov
jmp
pop
add
arpl
les
sbb
mov
xor
js
cli
or
out
loopne
push
fcoml
adc
sub
and
test
movl
pop
ret
mov
sbb
xchg
or
daa
push
das
inc
pop
cmpsb
test
mov
adc
loop
in
xchg
push
test
hlt
mov
and
shll
adc
push
pop
adc
insb
sbb
adc
add
xchg
jmp
movsl
cwtl
hlt
sti
hlt
jge
mov
pop
lds
lock
push
push
mov
addl
push
dec
and
cld
push
push
sub
jecxz
mov
or
adc
inc
iret
insb
arpl
aaa
pop
dec
addr16
xor
xchg
repnz
sub
or
in
scas
iret
push
push
xlat
stos
fisttps
or
fs
push
mov
fsubrs
push
and
mov
rcll
inc
xor
repnz
aaa
xor
xor
xor
xor
push
aad
xchg
cmovb
or
cvtdq2ps
arpl
lock
lods
push
mov
jg
popa
push
daa
mov
and
ja
inc
xlat
cmp
out
mov
repz
mov
jno
mov
leave
lds
adc
pop
aam
test
into
inc
data16
ss
mov
xor
mov
jmp
repz
fwait
mov
add
mov
ffreep
pop
add
mov
out
mov
xchg
and
int
add
dec
sahf
imul
test
lock
xchg
stos
add
mov
or
gs
mov
xchg
ss
xchg
iret
test
stos
movsl
sbb
ret
fsub
and
arpl
lea
push
movsb
push
add
adc
mov
ficoml
fistpl
rolb
mov
adc
lret
cmp
dec
sbb
fiadds
mov
into
mov
push
mov
mov
lds
int
dec
sarb
adc
out
xchg
pop
sbb
push
les
xor
aad
mov
insl
loope
xchg
stos
lds
sub
adc
sub
push
cmp
lods
nop
test
mov
push
push
mov
negb
sbb
jns
sarl
outsb
add
push
sbb
mov
jl
outsb
neg
mov
xor
jo
fnstcw
cmp
imul
xchg
cmp
repnz
mov
xchg
int3
out
pusha
jle
es
movsb
sub
jge
gs
xor
or
lock
cmp
inc
int
cmp
xlat
hlt
mov
shlb
aad
lret
push
stc
mov
lret
or
test
inc
xchg
sub
test
test
cmp
sti
ja
out
out
add
inc
mov
jae
sub
jno
gs
pop
fninit
icebp
xchg
dec
sti
push
cltd
bound
push
jnp
out
lret
aad
or
lret
and
aas
mov
and
inc
cwtl
mov
inc
lea
adc
leave
ljmp
jge
into
jg
or
imul
mov
xchg
aas
adc
iret
inc
fcomps
inc
sbb
pop
out
mov
jmp
lcall
icebp
fcmovne
fnstsw
push
ss
push
dec
hlt
mulb
mov
out
dec
push
sub
inc
mov
fildl
dec
pusha
xchg
lahf
imul
mov
mov
and
jo
repz
pop
call
or
cmpsb
mov
cli
or
push
lcall
mov
aam
push
popa
dec
adc
orb
dec
pop
cld
and
insl
mov
iret
call
cwtl
or
ja
aas
or
lock
outsb
pusha
and
mov
and
cli
outsl
jo
out
cmp
dec
cmp
sub
div
lock
shll
mov
pcmpeqd
into
xchg
dec
aas
mov
shl
cmp
sahf
add
pop
pop
adc
push
sub
fwait
mov
cmp
test
in
lds
fdivl
push
jg
fistpll
les
jl
popa
bound
ljmp
sub
ret
aad
jmp
in
pop
push
sub
hlt
add
xchg
ror
xchg
mov
scas
mov
dec
sbb
pusha
and
sbb
push
test
mov
pop
js
inc
mov
pop
xchg
xor
mov
xchg
inc
call
jo
lods
ja
enter
aas
mov
inc
ficomps
mov
or
imul
pop
test
inc
outsl
out
mov
pop
not
add
stc
push
xlat
mov
lods
loop
cwtl
sub
sbb
add
scas
xchg
lcall
mov
pop
push
pop
mov
cltd
negl
and
imul
mov
in
dec
cmp
and
test
adc
loopne
loopne
adc
cmp
xchg
movsl
test
mov
mov
cmp
pop
pop
leave
out
int3
fsubs
leave
rorb
xchg
pusha
mov
xor
nop
inc
add
sbb
cltd
arpl
hlt
add
jnp
cmp
push
push
and
loop
or
ds
mov
dec
daa
popf
mov
xchg
bound
xlat
xchg
nop
jecxz
into
in
add
cmpl
movsb
mov
imul
movsb
xchg
test
insl
pop
push
adc
je
out
int
call
pushf
mov
sar
data16
and
sub
into
jno
mov
sbb
pop
jbe
jne
jmp
mov
jecxz
clc
int3
adc
push
cltd
lahf
ljmp
and
sub
dec
push
xor
rcll
movsl
xor
daa
cmp
movsb
hlt
adc
mov
insb
jmp
pop
mov
mov
aad
fisttpl
mov
xchg
jo
loopne
rorl
or
lods
and
dec
pop
jo
mov
loop
pop
pop
movsb
add
mov
push
jns
lods
xor
push
push
mov
push
int
in
mov
push
xchg
outsb
ret
inc
xchg
int3
test
and
lds
jmp
out
ret
jp
ss
gs
sbb
jns
popa
add
jb
fisubrl
das
xchg
cmpb
and
mov
pop
xchg
push
adc
and
outsb
xchg
jne
lods
push
into
test
pop
xchg
iret
xlat
pop
mov
aas
mov
cmpsb
sub
psubb
mov
pop
inc
cmp
mov
jns
and
pop
jecxz
sbb
sub
clc
cwtl
lahf
mov
test
sbbl
neg
and
stc
adc
jb
cmp
repz
rcll
adc
aas
or
sub
mov
js
sti
stos
fstl
lods
xor
aaa
dec
scas
inc
cmpsl
pop
sub
mov
outsb
mov
mov
mov
imul
in
loope
add
pop
dec
xchg
lods
dec
daa
int
jecxz
lahf
cmp
jge
add
or
mov
hlt
lea
jne
shlb
push
mov
xor
js
cs
mov
mov
mov
mov
aad
nop
jb
mov
loope
loopne
dec
mov
jae
into
jle
mov
and
xchg
inc
pop
fsubrl
jo
lahf
faddl
les
lahf
add
in
nop
mov
mov
cmpb
and
int
or
jbe
ret
pop
lock
inc
nop
xchg
cmpsb
lret
fcoml
mov
push
mov
pop
addr16
clc
in
scas
adc
push
dec
movsb
xchg
push
lods
movsb
les
andl
mov
mov
jno
jle
outsl
jno
cwtl
scas
push
ret
xorb
adc
ss
xor
sbb
icebp
dec
cmp
or
sub
jb
mov
xor
jno,pn
xor
jne
pop
sub
lcall
pop
jp,pn
sub
imul
or
fcmovnbe
jecxz
cmp
pop
push
mov
imulb
test
and
jmp
pushf
mov
inc
inc
sbb
shrl
call
lea
adc
pop
in
push
pushf
pop
lea
pop
jno
cmp
popa
cwtl
ljmp
jle
lret
adc
sbb
adc
imul
lret
ja
lret
sbb
stos
loope
outsl
test
lods
rcl
pop
test
push
cmpsl
mov
jbe
and
mov
sub
arpl
movsb
mov
imul
in
mov
dec
fisubrl
pusha
clc
inc
popa
pusha
shrl
xchg
pushf
sahf
mov
jbe
mov
or
stc
mov
fsubl
sbb
mov
xchg
ljmp
adc
js
add
jmp
daa
adc
fnstenv
repnz
mov
aaa
dec
cltd
mov
imul
pushl
fsubs
mov
or
dec
movsl
xor
std
aas
inc
inc
stc
adc
lret
fstpl
inc
ror
cwtl
xchg
jae
pop
mov
sub
or
and
test
popf
jne
mov
or
bound
aas
jecxz
repnz
imul
sub
add
pinsrw
mov
shrl
test
xor
xor
iret
daa
out
add
lcall
adc
jge
dec
loope
aaa
jp
pop
pop
and
xor
xor
movsb
movsl
push
pop
pop
or
mov
xlat
push
adc
xchg
mov
js
push
dec
jp
jl
sub
aam
or
loope
pusha
cmp
mov
fldt
fisttps
push
jae
adc
or
dec
daa
and
pop
push
ja
sarl
mov
dec
pop
testb
dec
push
faddl
sti
ss
in
in
pop
cwtl
dec
sbb
lahf
addl
cmp
xor
or
sahf
lods
mov
push
xchg
test
fsubr
jge
hlt
sub
cmp
fidivs
jbe
sahf
neg
lea
cmp
add
xchg
mov
add
add
popf
dec
frstor
xchg
ret
addb
insl
inc
inc
pslld
sbb
shlb
or
xchg
pop
ljmp
rcll
push
xchg
test
jo
scas
inc
push
xchg
xor
push
fst
push
push
sub
imul
pop
aam
add
add
scas
sub
lret
dec
fwait
imul
add
adc
data16
cltd
push
scas
pop
cmc
jns
loopne
mov
mov
push
shll
and
andl
cmp
jae
adc
push
cmpsl
sbb
push
cmp
notb
lret
out
loope
sbb
shrl
sbb
arpl
fwait
jns
sub
sbb
in
scas
sub
lock
or
xchg
xor
out
movsb
mov
cli
pusha
inc
or
outsb
xor
xor
mov
arpl
movsb
jb
mov
inc
xchg
repnz
in
pop
das
push
inc
xchg
inc
mov
ljmp
sbb
popa
lock
pushf
cmc
std
dec
jno
shrb
cmp
or
xor
fs
jecxz
mov
cld
jnp
push
inc
fnstcw
rclb
jbe
adc
fistl
outsb
aaa
fcmove
mov
pop
call
pop
push
inc
add
jp
sbb
hlt
dec
cs
add
push
inc
call
imul
aas
cmp
sub
xchg
jl
mov
pop
ret
dec
xor
in
cmp
into
in
add
mov
pop
insl
int
xchg
pop
bswap
lods
mov
mov
xorl
rolb
or
or
jmp
inc
push
cmp
popl
sub
into
dec
xor
outsl
iret
popa
mov
jae
in
loopne
cmc
jl
cmp
xor
mov
dec
sarl
je
or
cmp
sbb
adcl
xor
dec
mov
ljmp
xor
imul
mov
ficoml
in
ret
adc
insl
sbb
mov
mov
scas
cmpsb
and
adc
sbb
stos
cltd
rcl
adc
jecxz
cwtl
mov
inc
insl
sub
xchg
pop
scas
clc
repz
insb
cmp
cs
inc
push
into
xor
fcoms
jne
mov
push
jg
stos
and
ret
popa
imul
hlt
inc
gs
enter
sti
call
pop
mov
mov
mov
and
mov
fs
fisttpll
arpl
or
dec
push
sub
and
popf
xchg
dec
repnz
sbb
push
or
and
movsl
sti
dec
mov
fcoms
and
mov
push
repnz
adc
sbb
js
dec
clc
or
sbb
xchg
pusha
cmpsl
loope
popa
mov
popf
stos
cltd
inc
fdivs
pop
imul
xchg
sub
adc
cmp
insb
jne
ret
or
fmulp
bound
loop
jns
ret
and
pop
add
dec
lods
ret
je
mov
xchg
mov
nop
adc
aam
into
inc
xor
push
or
ror
arpl
mov
call
setb
stos
and
cld
pop
cltd
daa
sarb
xchg
das
pop
or
jo
mov
leave
enter
popf
jmp
mov
dec
mov
je
les
lahf
or
xchg
adc
ss
inc
dec
lds
add
es
dec
push
push
incb
and
fildll
inc
iret
into
cmpsl
mov
dec
and
mov
push
jbe
add
inc
popa
dec
adc
cwtl
movsb
push
ret
out
xchg
test
lret
jo
loope
sub
lock
fwait
sub
ja
mov
insb
ds
pop
lahf
or
xchg
shr
test
sub
cmp
les
pop
lahf
cmp
mov
fs
popa
xor
ss
mov
or
xor
pop
xor
push
mov
mov
int
stos
add
jge
outsl
pop
dec
std
stos
cmpsb
sahf
mov
in
pop
inc
mov
lahf
sbbb
xchg
fdivrs
movsl
out
xchg
cmc
ret
jg
xchg
inc
dec
lock
jno
aam
mov
pop
rolb
movl
push
mov
fimull
sub
xor
mov
push
mov
cmpsb
sbb
insl
popf
fisubrl
sub
pop
adc
dec
repnz
xlat
and
xchg
fcomi
xchg
cld
dec
sub
jle
mov
pop
lret
ret
insb
mov
hlt
out
xchg
sbb
pop
loopne
popf
xor
xor
mov
inc
fxch
add
sti
adc
push
sub
push
mov
movsl
fldenv
xor
or
cltd
enter
test
mov
sbb
mov
frstor
mov
out
fbld
mov
stc
leave
movsl
repnz
cmp
add
data16
add
sbb
sbb
lret
enter
mov
sub
mov
mov
pop
sbb
dec
int
imul
lahf
lret
outsl
sub
dec
adcl
xchg
insl
sbb
mov
or
jmp
pop
popa
cmpb
or
popf
daa
xor
sub
into
adc
xor
pop
sub
lods
addr16
cmp
loop
pushf
daa
push
decl
xor
pop
loope
jl
cmp
mov
sub
pop
or
xchg
add
int3
mov
jecxz
mov
dec
test
int
in
leave
jns,pt
cld
xor
movsl
test
loope
mov
push
mov
aas
push
pop
loope
pushl
xlat
les
out
mov
pop
sarl
xor
int3
arpl
push
adc
shl
dec
in
fsubr
mov
sbb
inc
in
mov
loopne
decl
jb
mov
jge
out
pop
inc
in
cmp
push
sbb
sbb
stos
dec
xchg
ss
pop
jbe
xor
test
inc
xchg
out
fcompl
stc
sbb
xchg
xor
loope
int3
shrb
sbb
vpunpcklbw
sbb
sahf
repnz
inc
or
int
jecxz
xor
push
push
int3
pop
pop
or
test
mov
push
jo
xor
and
mov
insl
cmp
je
fsub
cmp
cmp
cs
stc
cltd
imul
xor
orb
in
cs
lock
hlt
mov
andl
repnz
and
add
lcall
push
adc
pop
mov
fadds
std
pop
outsl
or
xchg
mov
test
addl
and
adc
stos
inc
in
mov
enter
or
popf
or
mov
and
dec
mov
cmpsl
test
in
ret
aas
je
outsb
dec
cmc
cltd
cltd
mov
aas
lahf
imul
outsb
xor
jmp
lock
cmp
add
mov
inc
lods
stos
add
ret
mov
mov
dec
xor
nop
jne
fs
in
mov
pop
mov
pushf
mov
nop
dec
rol
cmp
data16
ds
jmp
pop
mov
stos
cmp
mov
add
xchg
mov
pop
nop
dec
mov
push
movsb
xchg
fdivr
sti
mov
pusha
stos
mov
out
dec
xor
ret
sahf
inc
pop
add
push
stos
pop
call
das
jg
imul
pop
daa
inc
xchg
push
jmp
addr16
and
adc
push
push
adc
popa
adc
inc
xchg
in
and
dec
das
in
fadd
cmovo
xor
xorl
mov
mov
pop
lods
outsl
aaa
cmp
inc
stos
inc
pop
jne
xchg
adc
push
dec
xchg
fs
lret
sub
cmp
pop
sbb
cmpsl
inc
fdivs
out
mov
outsb
push
sbb
push
mov
stos
mov
mov
imul
mov
lea
xor
and
notl
inc
movsl
cld
js
test
imul
push
pop
pop
insl
out
lretw
add
and
repnz
sub
push
mov
jo
ret
scas
push
mov
add
enter
xor
js
mov
inc
je
int
outsl
xor
jle
jae
repnz
add
jne
aaa
xlat
loop
mov
pop
mov
inc
push
stc
je
imul
xchg
push
adc
movsb
test
test
jge
mul
adc
sbb
adc
push
add
push
mov
sub
dec
into
loop
sahf
and
mov
repz
lret
cmpsb
mov
call
lea
fists
ret
hlt
xchg
aam
iret
leave
add
push
pop
pop
mov
xorb
call
mov
aam
xor
daa
push
xor
cli
loopne
outsl
push
pop
movsb
push
imulb
aas
mov
dec
std
and
daa
lock
das
es
shlb
or
jnp
mov
xchg
adc
xor
xchg
xlat
incb
loope
add
jge
fistpll
sub
or
sub
call
cld
inc
rcll
push
roll
mov
jmp
out
xchg
jae
ret
clc
sbb
loop
cmp
xchg
jo
pop
iret
xor
pop
sub
hlt
cmp
sub
movsb
pop
call
fcomip
inc
push
jg
andb
cmp
mov
sbb
sbb
movsb
daa
fimuls
or
stos
imul
cmp
adc
in
xchg
fimull
ja
jl
inc
sbb
lret
pop
sbb
xor
imul
cltd
test
lret
sbb
inc
adc
mov
pushf
pop
sub
inc
iret
or
rcrb
and
fistpl
pop
cmpsl
in
repnz
mov
test
push
pop
pushf
enter
jge
mov
push
fimull
sub
aaa
dec
jecxz
bound
mov
mov
dec
pop
in
jle
out
push
je
xchg
mov
push
arpl
enter
hlt
cmc
mov
lock
inc
stos
xchg
jg
jp
ret
or
xor
push
daa
lret
or
inc
push
jbe
stc
cmp
xchg
adc
out
push
push
cmp
sub
fstps
push
mov
fisttpll
loopne
dec
xchg
jle
mov
push
int
lret
pop
lods
jl
pop
shlb
push
test
leave
rorb
jmp
add
sbb
push
cmpsl
clc
jne
pop
mov
adc
fistps
das
subb
sbb
xchg
and
pop
mov
lret
into
leave
js
jge
and
repz
stos
loopne
push
lret
in
ret
imul
cld
xor
arpl
xchg
mov
jg
cwtl
xchg
sub
movb
push
mov
punpcklwd
lea
cmp
cmpsl
inc
sarb
addr16
int3
pushf
gs
mov
pop
enter
pop
sbb
pop
pop
cld
sub
or
lods
and
push
mov
lods
xor
repz
jno
dec
push
inc
outsb
adc
out
ljmp
inc
test
movsb
sahf
out
cmpsl
into
adc
inc
add
ja
sarb
sbb
mov
sti
lods
cld
enter
xchg
in
jno
jmp
mov
in
xchg
inc
fs
sbb
pop
int3
call
sub
repnz
imul
out
rcll
pushf
pop
imul
fs
add
add
rorb
stos
jo
call
push
shll
sub
test
sti
sbb
fidivs
push
sbb
es
pop
rcr
ja
push
les
mov
inc
movsl
pop
fcomi
mov
mov
test
xor
dec
stos
lret
bswap
cmp
fnstenv
test
dec
xchg
xor
mov
pop
aad
call
dec
lods
xor
sbb
inc
cs
movsb
xchg
movsb
and
mov
ss
call
inc
and
and
xor
cmp
movsl
in
xor
ds
add
jnp
xchg
rcrl
loop
push
jl
call
out
dec
inc
jge
pop
iret
outsl
pushf
arpl
lock
cmp
in
pop
vmovupd
sbbb
lahf
ljmp
dec
repnz
ss
frstor
sub
aas
xchg
pop
jp
push
pop
xchg
sbb
stos
lcall
mov
cmpsb
and
mov
loope
mov
mov
pop
xor
mov
adc
rcrb
repnz
mov
adc
or
les
mov
adc
mov
adc
inc
pop
pop
mov
push
mov
or
iret
ret
push
test
push
das
push
jp
aad
shl
mov
movsl
outsl
push
mov
jle
fsts
mov
rcr
xor
pop
cmp
cltd
pop
mov
xchg
sbb
in
in
aad
loop
pop
and
mov
adc
mov
ja
push
pop
es
sub
shlb
xchg
push
mov
repz
xchg
mov
filds
and
sbb
inc
dec
xchg
fwait
push
andl
icebp
xchg
pop
ds
imul
mov
cs
out
xchg
shl
push
int
cwtl
push
or
add
out
sbb
add
ror
pop
fidivrs
or
insl
pop
std
add
push
pop
filds
pop
pop
sub
push
xor
sbb
xor
push
decb
arpl
dec
xchg
repnz
mov
xor
mov
pop
repnz
push
sbb
or
push
xor
adc
pop
lret
cmp
mov
and
pop
int
xchg
mov
ljmp
xchg
out
movsl
in
adc
jg
xchg
xchg
add
dec
cwtl
lds
pop
test
dec
mov
int
andl
push
push
push
or
cs
add
push
add
sbb
sahf
mov
cmpsl
mov
subb
push
cmp
mov
mov
inc
sub
cmpsb
js
sbb
add
testb
cmp
adc
lods
adc
test
adc
or
xor
add
es
lds
insb
mov
xchg
scas
js
xchg
xor
jg
xchg
pop
ficoml
test
and
cmp
fwait
arpl
pusha
and
add
sbb
aaa
jg
shrb
lods
adc
inc
xchg
xchg
adc
jecxz
xor
mov
adc
gs
repz
fistpl
imul
jae
adc
jmp
pop
cmp
cmp
aas
push
mov
pop
ja
loop
int
lret
test
aaa
ds
arpl
ret
mov
lock
stc
mov
mov
lret
sahf
int3
cmc
fnstcw
push
movsb
pop
dec
jl
lcall
sbb
arpl
xor
fdivrl
adc
mov
pop
jle
out
sar
dec
lret
xchg
sub
ja
pmulhuw
xor
inc
dec
jbe
loop
test
mov
cmp
cwtl
sub
fmulp
add
or
loop
xor
push
ljmp
lods
rcr
mov
xchg
mov
movsl
repz
adcb
fisubs
popf
jge
in
test
and
or
in
pop
pop
pop
arpl
sbb
cmpsl
jmp
mov
sarb
cmpsl
dec
dec
push
arpl
loop
popf
imul
pop
test
xor
out
mov
sahf
mov
ret
pop
lahf
mov
scas
adc
test
subb
mov
cmp
pop
shrb
sbb
lock
insb
and
mov
or
call
cmp
xor
lret
jmp
cli
xchg
and
lea
cwtl
mov
pop
loop
in
dec
add
push
push
dec
xchg
and
cmp
insb
std
mov
jmp
sbb
add
cld
rcll
sbb
inc
shrl
not
jge
inc
sbb
iret
fwait
xchg
inc
psrlw
jl
jle
push
fsubl
call
or
mov
sbb
in
xor
xchg
pop
dec
mov
xchg
dec
inc
fwait
jo
inc
adc
je
rclb
add
sbb
mov
fsub
mov
rclb
test
jp
enter
aas
fcom
je
mov
mov
mov
mov
pop
push
push
xor
sbb
mov
sub
inc
imul
sub
les
daa
mov
xor
lods
jg
testl
cltd
ja
ret
push
lods
repz
call
mov
add
adcb
xchg
fstpl
mov
and
popf
pop
xor
sbb
imul
add
inc
xor
or
lods
mov
int
popf
cwtl
loop
jnp
bound
sub
xor
inc
ret
push
sbb
cld
mov
rcl
shr
xor
std
loopne
sbb
xchg
dec
jmp
ret
bound
mov
xchg
jge
fdivp
adc
pop
push
xor
lahf
out
add
fbstp
mov
lahf
mov
fs
std
and
rol
inc
sbb
movsb
movl
mov
cmp
mov
movsl
stc
lods
mov
pop
mov
pop
int3
lods
or
sahf
pop
sub
imul
negl
aas
int
pushl
popf
bnd
mov
outsl
or
inc
xor
fisubs
mov
sbb
or
fcmovb
ss
outsb
or
xchg
push
es
pop
clc
data16
mov
inc
push
jp
sbb
jl
mov
and
test
lock
int
jnp
call
test
popa
sub
sub
lahf
dec
dec
fdivrs
out
sbb
cli
jg
cmp
gs
icebp
xchg
cmp
clc
pop
push
mov
pop
push
outsb
mov
ljmp
mov
call
dec
into
xlat
cmpsb
and
loope
enter
cmp
and
mov
pop
mov
sbb
push
lock
add
dec
vphadddq
xchg
je
inc
orl
and
lock
cltd
and
cmp
cltd
rol
and
subl
adc
in
enter
sahf
and
lcall
bound
out
mov
aam
xor
pushf
adcl
pop
jl
xchg
cmpsb
pop
add
inc
into
sbb
inc
les
outsb
jge
add
pop
xchg
add
es
mov
push
xchg
clc
inc
leave
hlt
imul
dec
js
out
or
sahf
jge
mov
mov
repz
mov
test
mov
dec
inc
idivb
push
mov
in
add
mov
xchg
aad
les
jae
xor
add
adc
lret
push
int3
ljmp
stc
stos
imul
into
dec
outsl
jb
pop
pop
loopne
dec
nop
mov
inc
fcomps
pop
push
xchg
xchg
call
mov
xor
mov
pop
mov
movd
lods
ja
jns
add
mov
in
jmp
vmovapd
jl
mov
div
sbb
cli
inc
add
add
pop
mov
sbb
lea
psubsb
or
js
ljmp
sbb
inc
xchg
test
mov
jle
dec
pop
mulb
cmp
cli
and
pause
push
scas
cs
inc
mov
idivb
jb
outsb
xchg
mov
dec
ret
cld
jge
movb
mov
ror
dec
int3
mov
jnp
aad
xor
ret
push
hlt
mov
in
or
test
push
pop
nop
lds
repz
ret
cli
add
push
shll
inc
out
shlb
ljmp
pop
lahf
and
sub
inc
sub
add
sti
sub
subl
hlt
shlb
add
je
int
cwtl
mov
stc
fimuls
sub
shrb
push
in
inc
jnp
and
xchg
divb
sub
sbbb
add
les
mov
inc
lret
popa
cmp
add
ljmp
das
push
imul
adc
insb
and
negl
es
jle
dec
or
lret
fidivs
pop
in
mov
jo
repnz
push
dec
cli
aaa
push
mov
movsl
jbe
aaa
pop
mov
mov
sbb
lcall
mulb
das
xor
mov
jge
sub
adc
push
outsl
adc
cmpl
mov
mov
dec
mov
mov
icebp
add
pop
cmp
sbb
orb
inc
adc
xchg
mov
pusha
stc
push
fstpt
sub
stos
mov
pop
incb
fs
test
xchg
data16
fsubp
mov
mov
iret
jae
xchg
cmp
in
in
or
mov
fimull
icebp
xor
lock
sbb
fdivr
call
fimull
push
ja
mov
jp
push
or
or
out
pop
and
mov
call
mov
sbb
cmp
cmpsb
ret
mov
mov
les
xchg
std
ja
mov
out
mov
outsb
dec
mov
adc
xchg
scas
mov
jno
mov
lods
pop
or
inc
jp
push
xchg
mov
xchg
mov
mov
mov
imul
or
rcrl
aad
or
adc
cmp
adc
mov
pop
scas
iret
xor
add
push
aaa
adc
mov
mov
lock
mov
filds
inc
imul
dec
or
cwtl
mov
mov
frstor
mov
push
inc
sti
outsl
into
je
mov
cmp
es
xchg
inc
mov
loopne
ficoms
sbb
ja
imul
test
repz
dec
jge
lret
push
adc
ljmp
pushf
aaa
xchg
in
imul
lret
les
fdivr
das
dec
push
or
aas
les
push
xchg
sub
scas
or
sub
rcrb
mov
jne
mov
int3
push
dec
test
andl
pop
add
jbe
leave
iret
les
orl
mov
jbe
xchg
push
xorb
push
imul
mov
cmpsb
mov
push
push
aas
aam
cmc
jno
sub
andb
cld
lds
jne
data16
ja
fstpl
push
add
and
lcall
sub
jb
cmp
adc
mov
into
js
dec
sbb
and
add
rcll
inc
rolb
lahf
js
or
out
enter
outsb
pushf
das
int3
lahf
sub
clc
mov
ds
push
ljmp
das
fcompl
mov
push
mov
mov
lcall
leave
pop
fdivrs
sub
fldenv
pop
lods
dec
dec
lock
fldcw
and
shlb
or
out
fidivl
insl
fsubrl
mov
xchg
es
popf
jl
or
lods
aaa
pop
push
fidivrl
fdivp
mov
jbe
jo
dec
inc
in
ret
or
les
xchg
cmp
daa
int
or
add
jbe
mov
das
cli
enter
stos
mov
ss
fwait
stc
lock
inc
subb
jae
jbe
sbb
or
sbb
inc
add
pop
mov
mov
mov
call
sbb
out
cmp
testl
xchg
add
orb
mov
pushf
inc
std
hlt
cmp
popa
jp
roll
mov
and
dec
push
mov
in
mov
cmpb
pop
dec
inc
outsl
adc
mov
xor
jae
inc
lahf
cs
loope
push
adcl
jl
daa
jns
mov
or
push
ss
sbb
subl
add
movsb
mov
rolw
je
ds
stos
and
fidivl
data16
cmc
loop
inc
xchg
and
cmc
mull
jl
idivl
pop
ljmp
xchg
lds
das
fnclex
repnz
fbld
cmpsb
jo
iret
out
jne
leave
repnz
dec
rcrl
rolb
mov
testb
and
dec
inc
imul
cmc
xchg
lcall
pop
imul
xor
xchg
mov
mov
fdivs
addb
icebp
pop
repz
lods
and
test
stos
add
add
pop
xchg
or
mov
cmp
jmp
lret
and
jge
or
inc
sarb
push
and
neg
xor
sahf
xchg
sub
push
ret
imul
inc
sub
inc
shlb
inc
jge
cmp
in
rorb
rcrb
add
jmp
aad
popa
fstps
out
lcall
mov
movsb
jmp
out
je
xchg
aam
sub
es
sahf
jb
test
cmp
icebp
test
mov
std
call
cmp
push
sub
out
cmp
or
scas
sub
aad
popa
mov
mov
mov
and
or
iret
or
cld
fs
nop
dec
dec
aam
push
jae
or
les
sbb
mov
dec
inc
push
and
inc
fcompl
rcrb
pop
dec
jo
stos
mov
orl
iret
call
xchg
es
dec
data16
repz
inc
in
pop
rep
cmp
dec
pushf
mov
bound
sub
dec
push
mov
sub
popf
mov
repz
pop
sbb
jb
in
inc
cltd
pop
fmull
in
cmc
cmpl
or
dec
add
mov
lret
jp
fmuls
popa
dec
shrb
sbb
movsl
rorb
les
test
pop
pop
dec
mov
lea
cmc
and
pusha
lock
test
movsb
add
fidivs
iret
jmp
dec
cmp
jge
fwait
outsb
dec
lcall
add
mov
js
nop
data16
ror
enter
pop
ficompl
lods
dec
jle
push
push
jnp
add
adc
pop
mov
les
cld
leave
mov
cmpsb
ss
sbb
inc
das
push
jle
lds
dec
mov
imul
adc
in
mov
sub
inc
mov
stos
mov
sti
cli
lods
push
add
xlat
js
xchg
fmull
mov
jp
loopne
sub
xchg
rcrb
cmc
subb
mov
imul
insb
bound
mov
sbb
stc
mov
xchg
or
sub
pop
sbb
cmpsl
inc
cld
das
mov
mov
mov
pop
fsubl
and
inc
call
push
pop
lock
adc
mov
in
jp
adc
and
scas
loope
pop
push
jbe
aas
repnz
hlt
inc
jle
in
inc
incl
fimuls
mov
mov
jmp
jae
fimuls
sti
dec
daa
pop
movsl
imul
clc
dec
cmp
into
jae
fadd
xchg
xchg
cld
lret
out
in
inc
push
enter
cmpsl
or
xchg
mov
sbbb
adc
pop
addr16
nop
leavew
aam
jae
pop
shll
add
mov
sub
xor
cmp
testb
std
lcall
mulps
sbb
fmuls
jge
pop
aaa
xchg
push
cld
jecxz
or
cltd
xor
lock
lock
je
mov
mov
adc
test
adc
sub
jo
add
push
outsl
mov
mov
nop
fdivrl
cwtl
cmpsl
sbb
int3
dec
mov
pop
xor
dec
mov
mov
imul
jbe
cmp
pop
jnp
loop
sti
jl
sbb
insb
aaa
fnstcw
movsl
xchg
in
dec
movsl
fwait
sbb
faddl
loop
mov
mov
test
jb
cs
cltd
sub
inc
loope
notl
cmp
adc
bound
adc
jmp
lods
rclb
pop
outsb
xchg
lods
dec
mov
testl
or
dec
pop
mov
lods
and
jns
loop
rclb
in
mov
fisubs
stc
arpl
sbbl
ss
popa
fists
dec
addr16
mov
idivb
out
out
pop
adc
mov
pop
jno
fbstp
imulw
insb
lcall
cmp
adc
jnp
cmp
push
addr16
mov
insl
fiaddl
cmpsl
dec
xchg
push
enter
enter
xchg
ljmp
xor
pop
jle
adc
cmp
pop
and
or
and
imul
pop
sub
cs
pop
cltd
pop
dec
aaa
and
jno
imul
adc
popf
icebp
repz
out
out
or
ret
xor
mov
jns
xor
cs
pop
jecxz
pop
mov
loopne
sahf
fsubrp
sbb
jnp
lds
sarl
pop
testb
fnstenv
daa
xchg
push
cli
std
cmc
mov
imul
mov
scas
lock
inc
sbb
fisubs
add
adc
call
and
hlt
adc
incb
pop
or
adc
clc
mov
jmp
shlb
fsubl
cmpsb
aas
incb
inc
sbb
js
or
shl
jae
fnstcw
lret
dec
xchg
pop
jbe
insl
mov
imul
ss
leave
daa
imul
add
sbb
popa
mov
rol
aad
xchg
and
call
loopne
xor
pop
sbb
add
mov
test
dec
mov
add
sub
xchg
sub
dec
xchg
xor
es
shrb
mov
loopne
repnz
jle
cmpsb
bound
adc
mov
dec
hlt
lcall
rcrb
mov
dec
lcall
mov
pop
scas
sub
cmpl
sbb
out
std
xchg
xor
cmpsb
xchg
fmull
pushf
inc
ja
dec
dec
inc
push
pop
adc
sub
push
ficomps
or
sbb
adc
lahf
aas
inc
mov
popa
movsl
mov
and
insl
sbb
or
stos
push
cltd
ret
rcll
jge
mov
xor
push
dec
bnd
cmp
push
jae
addr16
cmp
aas
pop
add
cmp
dec
cwtl
push
jge
pop
mov
xchg
xor
fcomip
adc
lret
jg
mov
and
jl
dec
lea
jle
xor
fisubs
cmp
push
xchg
xchg
pop
mov
mov
lret
dec
jge
into
nop
sarl
ret
jecxz
sub
xchg
jb
lahf
leave
testb
sbb
lods
cltd
fiaddl
sub
push
or
push
xlat
lods
add
jl
aas
addr16
cmp
ljmp
addr16
dec
xchg
cmc
and
dec
xchg
sbb
push
pop
test
fstp
and
and
xchg
and
ja
dec
mov
push
rorb
rorb
enter
and
lcall
cmp
pop
mov
mov
dec
lret
cwtl
pusha
or
inc
adc
xchg
sbb
pop
xorl
push
sbb
mov
xor
ret
call
out
out
std
and
out
out
jge
or
mov
loopne
in
push
cmpb
xor
inc
cmp
movsb
adc
into
inc
ljmp
mov
mov
inc
xlat
sbb
add
popa
inc
sbb
dec
mov
mov
aas
shr
sub
add
sbb
loopne
sbb
adc
mov
xor
dec
mov
cltd
lock
sbb
ret
shll
mov
test
mov
adc
mov
mov
add
sub
call
stos
sbb
data16
ss
jl
xchg
repnz
adc
jge
stos
cmp
mov
xchg
outsb
loopne
das
adc
and
test
or
test
sbb
test
xor
jge
mov
push
ret
dec
shll
inc
or
or
push
or
aad
and
je
cmp
addb
mov
dec
jnp
or
pop
add
imul
loope
in
fs
out
outsw
xchg
cmpsl
insl
mov
fnop
mov
mov
and
stos
out
popf
cwtl
dec
shll
or
std
adc
add
int
mov
xchg
pusha
add
gs
shrl
push
ja
pop
fcoms
jmp
push
clc
mov
es
sub
cmp
fildl
fs
loopne
pusha
dec
fbld
xor
adc
pop
mov
mov
and
or
inc
or
pop
dec
es
js
dec
stos
jno
pop
inc
fstl
dec
mov
mov
mov
pop
fsubr
addr16
sbb
cltd
aam
mov
lods
and
test
cmpsl
mov
stos
rorl
aaa
movsl
jne
jnp
sub
inc
xchg
mov
std
shl
test
dec
mov
sub
lcall
add
inc
or
incb
das
aad
push
movsl
sub
or
or
xchg
sarb
jnp
movl
pop
pop
xchg
aas
fsubs
xchg
aam
jl
rcll
jnp
stos
ja
gs
cwtl
lea
sbb
das
pop
jb
int3
add
push
int3
or
sbb
icebp
fwait
int3
loope
insb
outsl
pop
adc
add
ljmp
fwait
mov
mov
adc
in
les
add
push
and
dec
xor
mov
enter
imul
xor
inc
sub
les
aaa
mov
fimull
add
incb
mov
pop
sub
aas
lods
mov
mov
mov
popa
push
sbb
sti
xchg
or
aam
mov
jmp
addl
xchg
or
xchg
adc
xlat
rcr
ret
pop
pop
and
lock
popa
ja
lock
or
dec
xchg
jmp
mov
mov
dec
enter
es
pop
mov
jnp
mov
pop
push
mov
add
adc
loop
ret
or
mov
mov
xlat
fs
loopne
lret
notl
add
and
xchg
push
pushf
stos
out
in
stos
mov
shl
jg
xchg
adc
fdivl
mov
aam
insb
mov
fidivrs
inc
inc
sub
mov
jae
iret
push
mov
mov
enter
ds
pusha
mov
cmp
push
jo
loope
adc
std
daa
xor
sbb
jns
mov
mov
hlt
lods
jg
xor
push
aaa
movsb
pop
loop
and
and
adc
daa
mov
pop
cmp
inc
cs
xchg
fs
sbb
cmp
repz
icebp
jmp
sbb
pop
jl
out
fstpl
insb
mov
lods
pushf
mov
pushf
inc
andb
int3
ret
je
insl
push
jge
stos
jge
cs
or
xchg
call
lods
rolb
dec
or
loop
pop
nop
int
mov
push
xchg
rclb
push
jge
fwait
cmc
into
ds
insb
cmp
sub
mov
mov
cltd
lods
addl
adc
push
movsl
sarb
push
sub
jne
pop
sub
inc
mov
cmpsl
or
xchg
cli
std
or
adcb
dec
in
lcall
xor
cli
data16
stos
les
dec
pushf
lret
aas
call
dec
les
rolb
sti
cmp
shlb
lret
lahf
or
cwtl
pop
js
cmp
int
dec
xor
xchg
or
insl
xor
imul
inc
rcrb
jle
bound
adc
cmc
je
sbb
clc
adc
sbb
mov
add
and
mov
jb
jl
jo
jmp
add
shrl
hlt
fucomi
aam
int3
mov
cmp
sub
repz
sti
loop
loop
sub
xchg
mov
cmp
mov
cwtl
dec
stos
sub
jl
testl
mov
pop
mov
sbb
jp
pop
stos
call
jge,pt
mov
sub
outsb
aaa
xor
lock
xchg
xchg
ljmp
call
lahf
dec
mov
fiaddl
mov
pop
mov
mov
je
mov
aad
in
push
fwait
sbb
in
push
mov
and
mov
or
mov
scas
add
ljmp
ljmp
div
adc
mov
aad
lcall
jmp
sbb
xchg
out
add
jnp
xor
roll
pop
push
rolb
jl
popa
jno
inc
lcall
xor
fildll
push
sbb
out
mov
hlt
cmp
add
pusha
mov
inc
push
mov
xchg
push
dec
adc
je
xor
out
adc
adc
lcall
cmp
dec
cwtl
jo
test
xchg
fmull
lret
pop
test
sub
jge
xchg
daa
movsl
mov
jnp
jge
lods
pop
aam
jnp
jg
inc
mov
je
lea
adc
adc
in
and
fwait
test
rorb
cld
sahf
adc
fldl
push
sub
dec
out
hlt
movsl
mov
cwtl
mov
leave
mov
adc
fsubr
fwait
jmp
mov
gs
enter
and
fcomp
xchg
push
mov
in
pop
lea
cmpl
mov
scas
mov
lods
repnz
cmp
jl
cld
pop
jbe
js
aaa
jge
mov
int
add
or
mov
fdivl
add
test
dec
stos
adc
in
sti
cmp
fcmove
enter
jge
sbb
das
or
enter
pop
adc
rcll
fidivrs
outsl
stos
and
in
mov
pop
frstor
addr16
xor
adc
iret
das
xor
andl
into
push
cmp
pop
inc
lret
sub
incl
loope
fisttpl
sub
sbb
inc
xor
sbbb
mov
dec
lea
jecxz
sbb
push
adc
test
scas
mov
adc
jmp
std
loop
push
lcall
rorl
js
cmp
ret
inc
push
dec
outsb
and
test
xchg
mov
inc
in
pop
mov
mov
ja
xchg
inc
testl
push
inc
std
ret
mov
pop
ret
mov
push
dec
push
out
loope
cld
js
cwtl
adc
idivl
jno
mov
xor
incb
inc
pop
stc
in
stos
mov
sti
int3
mov
xchg
sbb
mov
popf
and
mov
dec
mov
test
addb
loopne
sub
sub
ljmp
fnsave
in
fcomi
pop
mov
adc
mov
xchg
sbb
pop
or
push
xor
scas
pop
xchg
mov
adc
fs
jmp
and
pop
cmp
sbb
jl
push
add
out
and
or
inc
xchg
sub
mov
push
std
mov
ja
xchg
daa
mov
out
push
aaa
cmpsb
adc
mov
xchg
stc
push
cmpl
dec
pusha
ret
mov
jmp
and
dec
adc
mov
fs
add
ds
dec
pop
push
and
pushl
add
pop
testb
imul
add
movsb
repnz
xor
mov
jb
aas
dec
out
sbb
outsl
mov
push
sub
int
pop
xchg
cmc
outsb
jbe
mov
mov
mov
int3
outsb
cmp
jne
jns
cmpsb
mov
pop
pop
into
test
xlat
xlat
and
gs
jb
cld
aaa
mov
mov
addl
andl
insb
jecxz
jne
adc
and
notl
and
sbb
inc
jno
push
jg
mov
mov
and
loopne
mov
outsb
jge
jl
out
sbb
ret
adc
jl
movaps
add
arpl
inc
cld
pop
clc
lahf
or
cmc
inc
inc
repnz
cmp
jge
movsb
lock
cmpsb
and
scas
insb
or
sbb
xchg
int3
cld
out
cmp
adc
loop
xchg
std
and
call
inc
rcr
cmpsl
dec
gs
shll
test
adc
mov
add
sbb
pop
mov
push
fst
mov
cmp
test
sub
daa
pusha
mov
into
lcall
and
test
lahf
imul
jb
jnp
fisubl
fs
cmc
xchg
xchg
sbb
cs
push
xchg
aam
arpl
cmpsl
sbb
push
aaa
and
int
cmp
sub
sti
lea
insb
scas
and
lock
push
push
and
test
jl
loopne
lock
test
out
out
cltd
sahf
fwait
cld
sbb
cmp
jge
jg
add
sti
out
fisttps
scas
cmc
mov
cmp
mov
cmp
xchg
push
jno
jge
inc
ret
outsb
enter
xchg
ljmp
adc
xchg
mov
push
push
mulb
sbb
sbb
lret
add
and
insl
push
xor
int
sti
test
ja
jae
stos
jmp
in
push
pop
popa
xchg
ss
and
mov
pusha
stos
inc
inc
les
dec
incb
mov
push
dec
mov
daa
push
std
enter
popf
cltd
adc
imul
rcrl
std
ljmp
push
fucomip
xor
adc
mov
xor
lahf
insl
rol
mov
shll
dec
xchg
push
es
push
cmp
xor
cmp
not
popl
adc
inc
push
cmc
mov
pop
cmpsl
mov
imul
xor
mov
pop
pop
test
in
repnz
dec
pop
js
push
mov
loop
gs
insb
mov
sub
movsb
push
pushl
ds
push
adc
enter
push
xchg
aas
push
push
sbb
pop
sub
in
rcll
fimuls
sahf
push
aad
hlt
test
inc
rcr
jmp
roll
sbb
mov
int
in
jne
mov
mov
call
roll
push
ret
pop
sub
push
jo
sbb
xchg
sbb
movsb
push
or
lcall
movsb
outsl
jno
dec
mov
push
jbe
ret
add
es
push
lds
and
jmp
insb
insl
push
testl
pop
jnp,pt
sub
andb
mov
dec
rcrl
mov
sub
dec
in
pop
pop
jo
ds
and
or
pusha
es
adc
pop
adc
jmp
xor
sti
inc
cli
pop
dec
dec
dec
nop
inc
negl
in
sub
sbb
sbb
insb
mov
sbb
jne
cmp
pop
dec
shr
jge
sub
gs
pop
push
pop
cs
daa
call
roll
mov
rcrl
mov
sti
sub
jg
out
ret
mov
sub
cmp
aas
loope
mov
hlt
mov
pop
sub
push
jns
stos
push
clc
stos
mov
leave
ss
out
cmp
mov
xchg
xchg
sarb
ret
xor
pusha
in
xor
in
push
stc
loop
xor
and
and
mov
out
xchg
das
insl
push
and
cmp
xchg
push
jge
inc
or
enter
sbb
sub
loopne
dec
xchg
jbe
rorl
pop
pop
adc
mov
mov
lret
shr
stc
push
jno
inc
sub
xlat
push
call
jo
mov
xchg
flds
out
pop
outsl
imul
mov
inc
arpl
jp
int3
jb
aas
xchg
inc
mov
pop
xchg
rolb
mov
cwtl
shlb
cmp
xchg
js
loope
xchg
ret
adc
jno
lcall
jnp
fistpll
dec
cmpsb
xchg
iret
add
scas
aad
and
mov
dec
mov
sbb
xor
cmp
cmp
xor
xchg
repz
cld
xchg
mov
cmp
loope
cmp
jns
xor
fs
lret
xchg
xor
mov
xlat
lock
jmp
xchg
sahf
cs
loopne
insb
mov
sarl
aam
mov
jp
add
aam
aas
inc
cmp
mov
cmpsb
test
cmpsb
push
jb
leave
sub
movsl
xlat
mov
dec
loope
in
and
mov
lods
jbe
clc
mov
js
inc
jl
sbb
fmull
sub
lcall
je
xor
in
inc
push
push
orl
mov
divb
movsl
mov
mov
stos
sbb
push
popa
or
cmpsb
push
push
inc
aaa
or
xchg
aam
cmp
fimull
sti
fdivrl
dec
incl
add
sbb
ret
insb
add
push
out
sbb
pop
mov
test
pushf
mov
sti
out
sahf
xchg
lcall
xor
leave
mov
stc
les
or
stos
cld
inc
adc
mov
jmp
pop
test
xorb
hlt
lods
cmp
and
hlt
aam
inc
xor
xchg
mov
and
aad
dec
pop
fistps
lods
mov
mov
mov
mov
add
jmp
inc
xor
int3
incl
daa
lods
aaa
rorl
shll
lods
fwait
jbe
aas
inc
iret
mov
pop
and
ljmp
es
test
dec
and
ja
inc
mov
mov
and
push
push
inc
pushf
mov
xchg
mov
pusha
ds
push
mov
xchg
adc
jecxz
pcmpeqb
sub
push
lret
push
xchg
sbb
add
mov
dec
push
cmpsl
ror
xchg
dec
push
dec
mov
ss
jo
clc
int3
daa
pop
ss
sbb
pop
xchg
fsubs
dec
scas
pop
add
push
in
xlat
out
std
aas
sbb
dec
lea
jns
jle
mov
mov
aam
scas
adc
sbbb
push
jbe
add
jmp
and
adc
xor
xchg
mov
cmp
jmp
leave
mov
loop
or
push
xchg
adc
aaa
les
jbe
lock
xor
jbe
xchg
sbb
push
add
sub
or
mov
mov
fwait
sbb
aad
lock
aaa
jmp
jecxz
insb
lret
pop
bound
das
add
insb
shlb
lcall
fcomi
fcoml
cmpsb
sub
or
pop
add
popa
adc
sbb
push
outsl
xchg
cs
dec
std
cmpsb
xchg
adc
icebp
jg
insb
add
mov
or
or
xchg
shrb
nop
popf
inc
dec
mov
push
aam
push
daa
xor
pushf
fs
sub
xor
ret
scas
and
jb
sbb
pop
subl
insl
jo
sub
mov
and
rclb
adc
or
dec
xor
jo
cmpsl
inc
add
cmpsb
sar
mov
sub
xchg
test
out
dec
mov
mov
js
mov
sbb
test
fstl
cmp
mov
aad
movsb
jne
sar
dec
xchg
mov
or
mov
or
add
insl
sbb
push
lret
push
cli
mov
inc
aaa
lds
ret
fisubrs
mov
mov
push
js
ficompl
dec
pop
ds
insb
mov
or
dec
mov
cmp
imul
inc
cmpb
in
aaa
adc
nop
test
add
subl
sti
mov
std
ds
cmp
mov
daa
sub
or
mov
je
in
dec
or
mov
pop
inc
xor
push
or
shrl
jno
mov
ds
push
test
fistpl
pop
lret
pop
dec
jg
daa
or
inc
push
loopne
dec
daa
mov
mov
ja
pop
cld
pop
jp
pop
jl
xchg
outsb
xor
push
stc
dec
stos
inc
movsl
push
fdivl
jbe
cmp
pop
pushf
or
or
test
imul
daa
shll
popf
test
jl
xor
cmpl
cmp
xchg
push
nop
inc
lahf
push
ja
sub
and
cs
fnstcw
adc
mov
aas
pop
int3
js
sub
xchg
insb
mov
adc
pop
xchg
xor
out
push
jge
cmp
in
and
aam
fxch
xor
add
in
push
test
gs
inc
lret
adc
push
arpl
ss
push
jge
sarb
dec
inc
jge
repz
pop
test
imul
mov
cmp
pop
enter
rorl
addr16
mov
pop
xchg
rorl
pusha
sub
lea
lods
daa
stos
lret
jb
dec
mov
inc
dec
bound
adc
inc
dec
sub
xchg
fdivs
iret
movsb
or
imul
in
sub
cmp
mov
pop
xor
mov
pop
sahf
or
dec
aas
aad
push
shrl
mov
mov
add
fisttps
scas
add
mov
mov
or
and
mov
push
addr16
add
inc
sub
or
movsb
xchg
mov
jecxz
xor
dec
pop
and
sbb
cmp
lahf
mov
jne
and
add
push
rorb
sbbl
lcall
cwtl
mov
mov
dec
sbb
fisubl
mov
cli
shlb
ds
pop
ret
imul
push
jb
daa
dec
add
mov
xchg
push
push
sbb
or
stc
mov
pop
mov
jp
or
and
jne
xor
xor
push
mov
sub
adc
insl
mov
popf
pop
aaa
inc
repz
gs
enter
and
add
out
sub
push
js
push
stos
into
mov
sub
dec
jmp
lea
mov
inc
mov
test
xchg
clc
inc
fdivl
cmp
sbbl
jmp
pusha
mov
lock
mov
and
mov
dec
ja
jbe
loop
je,pt
xchg
inc
jmp
movsl
insb
pop
jl
cmp
lock
cmp
mull
into
or
xchg
xchg
bound
push
cli
jecxz
add
sbb
and
mov
test
mov
mov
mov
sarl
inc
scas
xchg
jno
pop
loopne
ret
push
jns
adc
les
ds
mov
pop
mov
lock
jl
xor
es
fistps
pop
shll
stc
pop
xor
lcall
in
jb
das
inc
enter
or
aas
or
xchg
add
push
xor
jmp
adc
icebp
aam
gs
loop
lret
and
test
insl
insl
push
test
dec
in
int3
shrl
jmp
mov
xchg
rolb
pop
sub
out
add
fsts
outsb
mov
mov
movsl
fs
lahf
cmp
sbb
scas
cmp
repz
sub
sbb
ja
inc
cmp
fs
or
test
dec
dec
or
cmp
jnp
mov
and
pushf
pushf
movsb
jge
ret
jne
lret
das
jne
dec
nop
mov
jbe
or
mov
adcb
fmul
rorb
pushf
push
ret
dec
sub
push
xchg
add
call
adc
xor
and
push
stc
xchg
push
call
imulb
or
rol
scas
nop
pop
jb
stos
cmp
jns
insb
push
push
xor
aas
mov
xchg
fsubrs
xor
push
sahf
aas
icebp
mov
jne
movl
std
out
dec
js
aam
test
outsb
push
lret
repnz
mov
fs
popa
xchg
popa
aad
inc
adc
and
stc
aaa
out
pop
jns
push
add
or
lcall
ret
mov
clc
xchg
cmp
test
xchg
les
lds
pop
and
adc
mov
mov
std
dec
xchg
cmpsl
sbb
cwtl
xchg
jg
jb
popf
dec
je
or
mov
lods
hlt
rcl
mov
fiadds
and
inc
out
outsb
mov
lret
inc
loopne
leave
xorb
jge
and
outsb
test
pop
inc
lods
add
push
jbe
and
lods
inc
stos
pop
imul
cmpsb
pop
lock
sub
jbe
push
test
leave
pop
cmpsl
xor
hlt
call
pop
lods
and
rcrb
xchg
jb
sysexit
sub
dec
xchg
sbb
jbe
imul
data16
movsl
sbb
mov
mov
dec
pop
xor
dec
bswap
fdivrl
outsl
sub
sub
or
clc
in
jmp
fnsave
nop
sub
inc
cltd
inc
scas
mov
testb
inc
sub
jb
js
xor
push
mov
movups
sti
rcl
rcr
pop
ret
das
rcrb
scas
add
insb
addr16
inc
jo
push
pop
fcoms
das
rorb
lock
push
dec
into
mov
test
jae
loop
fwait
scas
outsb
stos
stos
cmp
pop
inc
jmp
or
aam
cmpsl
sti
mov
cmp
pusha
mov
cmp
pmulhw
adc
adc
jecxz
mov
push
jecxz
jno
mov
into
fmuls
aam
mov
movsl
je
mov
cmp
addr16
sub
aam
dec
dec
jle
notl
test
pop
jns
cltd
hlt
sbb
xchg
mov
xchg
in
xorl
mov
mov
in
adc
lahf
lods
imul
mov
fldl
mov
out
push
mov
and
idivb
test
push
fwait
addr16
dec
xchg
testb
pushl
mov
mov
cltd
std
or
out
pop
in
adc
popa
lods
mov
arpl
nop
sbb
and
ret
jae
dec
xchg
inc
mov
mov
inc
xchg
test
add
xlat
in
incb
sarl
jmp
mov
in
mov
popa
xchg
jbe
fwait
push
imul
push
inc
mov
push
xor
cmp
inc
xchg
push
mov
pop
jno
inc
pop
cltd
test
cld
xor
mov
push
sub
stos
repz
fcom
ret
sub
cmp
push
xlat
push
stos
aas
mov
jne
test
or
cmpsl
add
sub
mov
clc
cmp
inc
or
jo
inc
adc
push
rclb
sbb
mov
jns
sub
mov
shlb
ljmp
in
xchg
push
jge
pushf
or
inc
xor
out
sub
xchg
sub
dec
jbe
sbb
pop
xor
addl
daa
lret
push
dec
inc
sbb
jg
fisubrl
sub
push
sub
adc
ror
mov
or
sti
inc
push
fidivrs
shrl
dec
push
out
fsubl
mov
push
test
cwtl
mov
fisubl
es
nop
mov
nop
ds
mov
xchg
mov
out
fucomp
and
lock
shrl
pop
mov
nop
jmp
icebp
xor
sbb
int
jl
flds
mov
inc
cmp
lret
xchg
rcrl
sub
mov
das
dec
cmp
add
pop
cmp
inc
mov
xorl
xlat
out
dec
and
pop
push
push
popa
push
movsb
cmp
lds
out
or
lds
scas
cmpsl
pop
fs
sbb
outsl
icebp
pop
scas
stos
push
push
es
ds
cltd
push
jae
loope
add
mov
iret
add
gs
sub
loope
test
pop
sbb
cmp
cld
jecxz
inc
inc
mov
inc
pop
xchg
out
mov
jl
sbb
addl
mov
loope
jge
push
and
lret
int
out
ud1
push
lret
pop
int3
mov
frstor
lods
mov
xor
cmpsb
dec
push
js
vmovntps
pop
mov
mov
fmull
xor
ss
scas
aaa
adc
mov
or
and
insl
mov
xor
ret
inc
subb
sbb
dec
test
pop
xchg
fs
inc
pop
xchg
sub
sub
movsb
ficompl
out
inc
inc
fnstsw
bound
add
xchg
sub
jns
or
cmp
mov
stos
cmp
sbb
aas
out
mov
outsb
leave
leave
mov
and
jns
mov
ffreep
push
aam
cmc
push
inc
popl
ret
mov
fnstsw
adc
jnp
add
popf
xorl
push
jb
add
xchg
fstpl
out
test
xchg
mov
and
mov
push
mov
popa
std
mov
shl
ljmp
enter
ss
out
out
popa
ds
sub
arpl
les
in
scas
lcall
shll
faddl
pop
xor
adc
sub
ja
xchg
inc
xchg
rcll
inc
jp
jp
xchg
jge
stos
mov
sbb
mov
data16
aad
mov
jmp
sbb
aas
rcl
bound
inc
push
lock
xchg
sbb
push
jno
push
xchg
sub
jno
mov
cmp
ucomiss
or
int3
cli
and
mov
sbb
xchg
rolb
inc
mov
push
scas
mov
notb
ficoml
lea
inc
cmpsb
sub
popa
pop
push
inc
in
out
pop
stos
jp
mov
xchg
aad
pop
jecxz
in
imul
test
sbb
aad
mov
adcb
in
jns
into
push
pushf
adcb
push
rorl
in
sahf
loopne
adc
outsb
test
cmpsb
xorb
or
sti
aad
loop
ret
mov
aam
pop
lahf
in
into
rcl
lods
push
sub
dec
pushl
dec
and
lock
in
pop
loopne
push
es
cmpsb
insb
adc
cmp
mov
and
and
aad
out
pop
dec
sbb
lret
mov
xor
jmp
popa
mov
pop
daa
dec
daa
adc
sbb
add
aad
bound
mov
inc
addr16
sub
int3
xchg
push
pop
test
std
sub
daa
lret
add
mov
pop
mov
lret
loope
shll
pushf
push
shl
pop
cmpsb
pop
lea
ljmp
add
mov
mov
sbb
sub
daa
jbe
pop
mov
push
aad
or
mov
cs
mov
xchg
and
nop
jge
adc
and
or
fdivp
push
shl
dec
xchg
pop
add
dec
ja
sbb
clc
adc
sub
inc
outsl
push
sub
dec
mov
inc
xchg
lcall
insb
popf
int3
les
popl
xchg
repnz
rorb
add
cmp
xchg
mov
sbb
xchg
pop
sbb
sub
out
repz
xor
pop
xchg
bound
mov
sti
loopne
outsl
xchg
dec
xor
inc
data16
adc
adc
dec
test
push
add
lock
xchg
lea
xchg
jae
outsl
enter
lret
inc
ret
cld
mov
orb
ret
push
xchg
and
and
pop
adc
scas
mov
pop
push
inc
mov
sub
push
scas
xor
cli
sbb
ret
pop
subb
gs
inc
cltd
cmp
int
mov
out
or
fstl
loopne
int3
push
pop
fimull
cmpsl
sbb
sbb
cmp
dec
xchg
popl
mov
inc
jle
or
and
jnp
sbb
aam
les
outsl
inc
shr
iret
xchg
jne
arpl
adc
xchg
xor
or
sbb
sbb
push
test
inc
adcl
lahf
pop
dec
sbb
push
rcl
dec
sub
and
pop
lret
mov
pushf
inc
mov
jp
xchg
roll
ss
arpl
hlt
mov
int3
into
sbb
fcoms
jnp
enter
or
adc
mov
lods
sbb
nop
lret
mov
or
mov
mov
sub
std
testb
stos
inc
cmp
mov
inc
push
lea
fidivrl
or
xor
aas
cmp
ret
add
cs
out
scas
insb
dec
fiadds
pop
ret
dec
xchg
pop
pop
lea
fsubrs
add
mov
xor
mov
mov
das
mov
in
and
cmp
xchg
sahf
sahf
es
jmp
out
inc
sbb
cmovno
mov
pop
adc
leave
push
jg
mov
mov
xor
sub
lods
mov
add
mov
pop
stos
dec
loopne
mov
xor
push
jae
mov
push
dec
mov
insb
adc
xchg
inc
sti
aas
cmp
inc
imul
mov
data16
push
cmpsb
aad
imul
cmp
mov
aaa
pop
jecxz
pop
add
cmp
jns
inc
divl
and
xadd
push
cld
push
cs
jb
pop
dec
jge
orl
xor
inc
cmp
aam
jmp
icebp
xor
lods
orps
inc
push
repnz
loopne
loop
ret
in
add
mov
pop
xor
dec
mov
lcall
adc
movsl
fwait
mull
sub
pusha
notl
xor
push
add
cmp
jecxz
sbb
ss
xchg
xchg
loop
mov
pop
xor
fdivrs
jmp
rorb
sbb
jnp
jl
sub
push
das
in
test
sbbl
mov
cmp
imul
xchg
outsl
dec
fwait
sbb
rcrb
daa
sbb
cltd
aam
into
movsl
mov
movsl
dec
mov
sbb
push
test
in
nop
or
cld
sub
or
sub
dec
xchg
or
xor
or
mov
fistpl
jo
mov
mov
sub
fdivrs
sti
repz
push
pop
ljmp
cmp
sub
mov
lahf
lret
sub
cmp
scas
imul
push
mov
sbb
jmp
pushf
xor
xchg
sbb
sub
aam
dec
dec
add
dec
adc
inc
xor
insl
and
sbb
imul
sbb
cltd
stc
cmp
xor
mov
pushf
mov
gs
xchg
adc
or
movsl
jle
aad
lahf
inc
dec
lcall
std
rolb
jl
stc
mov
gs
cli
mov
ficoms
addr16
add
test
nop
push
cs
add
push
push
popf
xor
xor
pusha
jnp
in
leave
pop
rorl
pusha
adc
pop
push
mov
dec
add
mov
sbb
popa
cmp
push
pop
pop
mov
sbb
xor
and
push
sub
icebp
jo
inc
int
push
pop
inc
xchg
loop
lret
lret
icebp
sbb
mov
sub
sarb
pop
pop
leave
fsubp
je
sub
xchg
lds
xchg
das
and
movsl
rcll
push
mov
repnz
dec
xchg
out
hlt
mov
in
movsl
insl
sarb
inc
mov
bound
pop
sub
mov
pop
adc
sbbb
push
push
in
jl
dec
je
fisubrs
sub
aad
loopne
es
popf
pusha
push
loope
pop
setg
cmp
popa
xchg
add
add
outsl
leave
push
popf
sbb
cmpsl
sti
xchg
test
dec
clc
scas
sbb
out
rcll
inc
jecxz
add
push
divb
add
mov
cwtl
mov
mov
inc
mov
mulb
imul
lret
adcb
pop
push
in
dec
mov
das
pop
ds
fs
jl
push
cmp
les
in
lret
cmpsb
jne
xchg
add
out
inc
inc
jge
xchg
mov
mov
sbb
and
xchg
mov
es
pop
sub
mov
clc
pop
popf
fimuls
rcr
inc
cmp
sub
and
daa
into
ds
mov
lcall
fcoms
repz
adc
inc
pop
xchg
inc
cmpsl
cli
pop
scas
imulb
mov
mov
and
mov
stc
fisttpll
ret
or
mov
stos
test
sub
mov
sarb
jmp
gs
inc
xor
ja
add
mov
dec
jb
mov
mov
lea
mov
out
push
repz
into
jbe
in
icebp
ljmp
mov
movsl
sbb
ja
call
inc
xor
dec
add
cmpsl
add
cmc
sahf
fisttps
into
xor
inc
mov
jecxz
fbld
movb
jecxz
inc
aad
out
jb
and
arpl
push
or
inc
out
lods
jp
jmp
jbe
mov
out
test
dec
iret
out
push
xor
mov
xor
dec
or
adc
in
ret
out
cmpb
fimuls
jb
orb
leave
stos
push
hlt
dec
mov
mov
aas
jns
mov
cltd
adc
xor
mov
mov
jno
jne
push
movsl
test
mov
int3
xchg
push
cmpsl
mov
imul
jns
fucom
int
dec
lods
ljmp
rorl
xchg
add
scas
inc
popf
fwait
xchg
sub
and
mov
adc
repz
inc
xor
fcompl
fsubr
icebp
mov
lahf
cltd
inc
loop
sub
push
aaa
out
popf
in
jns
jl
pop
mov
sub
icebp
flds
xor
jg
cld
loop
sbb
inc
out
pop
or
dec
aaa
sbb
hlt
push
jbe
dec
and
in
aad
loope
mov
aam
mov
push
cmp
adc
idivl
in
push
scas
mov
mov
xchg
adcl
or
jne
mov
dec
xchg
mov
push
ret
mov
addl
mov
and
jp
xchg
jl
jns
mov
ficomps
mov
cmpsl
lods
ss
pinsrw
imul
sub
movsl
sbb
aas
mov
add
sbb
repz
outsb
adc
shlb
test
inc
and
push
pusha
loopne
mov
xchg
jg
outsl
push
xchg
pop
mov
jmp
add
ret
sbbl
clc
ret
adc
inc
and
sbbl
in
int
mov
sbb
sbb
into
mov
xor
adc
imul
outsb
popf
ret
test
mov
cld
gs
cmp
jg
add
leave
jg
mov
push
push
jno
movsl
xor
mov
mov
inc
pop
jo
inc
add
xchg
call
cmp
cltd
mov
jecxz
cld
ds
push
adc
fisttpl
dec
mov
lods
rcr
scas
in
mov
mov
in
mov
das
mov
into
ja
cmp
cmp
out
clc
push
mov
pop
sbbb
icebp
enter
ds
sub
mov
push
and
jecxz
sbbb
xor
sub
outsb
es
xlat
shl
dec
test
fnstenv
aad
cmp
sbb
xchg
xor
imul
addr16
into
sub
adcb
push
mov
int
gs
aam
jno
inc
sbb
fldlg2
ja
ja
adc
mov
dec
lret
cmp
cld
add
xlat
ret
jmp
int3
mov
pop
cs
into
adc
test
test
aam
fwait
sbb
mov
pop
jne
pop
xor
inc
lahf
mov
pop
push
dec
push
jg
pop
mov
stos
out
push
into
lcall
stc
pop
cmp
jnp
sub
and
push
lea
mov
stos
mov
cwtl
lds
stc
xchg
jb
loope
adc
fcoms
cmp
fcomi
movsl
arpl
addb
sub
imul
sbb
dec
shlb
nop
iret
test
mov
ficompl
rclb
xchg
mov
add
out
cwtl
jno
and
sub
shr
cmp
and
inc
shll
mov
lock
jp
outsl
lret
das
hlt
loopne
jmp
mov
ret
add
insb
icebp
lods
aaa
repnz
sbb
sarl
lds
xchg
cmp
test
jecxz
cmpsb
cmpl
push
dec
cmp
out
inc
add
clc
dec
and
jns
aad
in
jge
inc
and
inc
xchg
test
cmpsl
cmpsl
outsl
xchg
xor
shlb
sub
pop
int3
movsb
aad
bound
dec
jb
nop
xchg
icebp
into
stc
ret
jae
mov
cwtl
movsb
pop
jmp
in
ja
lds
mov
pop
out
xchg
fwait
dec
mov
in
test
or
push
ror
movsb
aas
fmuls
shrb
fadd
lcall
xchg
les
jge
lds
sub
cmpsl
push
push
cmpsb
aaa
lods
cmpsl
xor
jmp
lret
add
aam
ljmp
pop
pop
popf
sarl
adc
pop
lods
sti
and
lock
push
fwait
xor
fisubrs
sub
movsb
sub
mov
loopne
mov
sub
pop
inc
mov
jne
cmc
into
or
shlb
cmp
cmp
sub
repnz
cmp
ret
lcall
dec
andnps
push
fidivrl
lea
fsub
movsl
dec
push
push
sbb
scas
jnp
add
clc
test
stc
jo
pop
cld
push
pusha
push
push
push
mov
mov
cmp
sbb
xor
mov
pop
mov
pop
imul
mov
sub
loopne
aam
lret
push
movsl
in
ret
and
out
push
mov
addr16
mov
into
add
mov
add
xor
sbb
ret
outsl
inc
mov
aaa
ret
and
jns
pop
js
mov
js
jb
sbb
in
shl
je
sahf
inc
cmpsl
jo
mov
xor
icebp
or
data16
fldt
ds
jl
dec
and
sbb
mov
dec
jne
mov
cltd
jne
xorl
push
xchg
mov
sbbb
and
movsl
loope
jmp
cmp
outsl
and
cmp
push
arpl
pop
and
je
cmp
ret
and
sub
lods
xor
inc
ja
mov
js
clc
dec
cmp
pop
push
std
jmp
push
and
adc
pusha
push
jne
and
sbb
clc
push
addr16
pop
clc
add
pop
subb
or
xor
in
test
and
gs
fimuls
xlat
test
scas
pop
or
jae
fsubrs
xchg
mulb
pop
loope
mov
sbb
cmc
repnz
push
cli
shll
xor
cld
cmp
clc
pushf
jne
out
lret
push
fiadds
dec
inc
fmul
inc
inc
cmpsb
inc
add
je
xchg
dec
sub
adc
aad
fsubrl
push
adc
xchg
adc
push
stc
inc
xchg
fstpt
xchg
clc
jle
iret
sub
xor
xchg
sahf
leave
sti
int
repnz
out
mov
sub
pop
mov
xchg
out
iret
jle
cmp
popa
sbb
movsb
push
sahf
push
out
push
imul
loope
leave
jb
outsb
mov
neg
repz
adc
outsl
movsl
or
mov
jnp
stos
lahf
loop
sub
push
adc
or
pop
jmp
pop
fiaddl
leave
sbb
pushf
xchg
push
iret
sub
out
mov
or
sub
sarb
adc
and
xor
cmp
dec
scas
sub
cmp
jo
shl
adc
pushf
in
scas
dec
pop
jns
scas
xlat
xchg
and
les
ja
flds
xchg
add
jo
in
jmp
jge
xchg
in
sbb
ror
cmp
test
leave
pop
xchg
insb
push
stc
insb
sbb
lods
sbb
push
dec
lahf
mov
push
mov
and
into
inc
je
push
jmp
pop
and
pop
and
mov
adc
std
mov
test
sub
repz
in
jb
scas
in
aas
inc
sub
sub
cwtl
outsl
sti
pop
and
mov
cmp
lcall
push
aas
pop
lcall
mov
inc
insb
mov
loop
sub
addl
lea
fldt
xor
push
std
sub
or
mov
mov
xchg
cmp
sarl
lahf
imul
jno
pop
mov
xchg
test
push
scas
or
and
jno
decb
xchg
fmulp
push
jmp
jbe
jge
movsl
test
fsubrl
lahf
lea
pcmpeqb
sub
pop
adc
add
imul
out
mov
pop
xor
mov
and
or
add
pop
add
dec
xor
fsubrl
ret
insl
lret
es
stc
test
dec
aam
xorb
push
into
jns
addr16
enter
inc
fs
pushf
ds
xor
mov
jae
notl
fidivl
ds
xchg
xor
into
js
repz
sbb
lcall
repz
mov
aam
add
sbb
dec
arpl
inc
les
dec
stos
ret
pop
mov
sbb
jno
fdiv
jecxz
jno
pop
lret
aaa
add
ficoml
sarb
test
mov
popf
hlt
adc
std
jge
pop
addb
repz
lahf
daa
mov
out
icebp
add
push
out
adc
fsubrs
mov
inc
fwait
shll
mov
leave
mov
lods
adc
imull
cmc
fsubrl
fsubs
clc
cltd
mov
in
xlat
lock
and
out
jg
icebp
dec
ljmp
shrb
lret
xchg
push
in
test
or
ljmp
mov
lds
dec
sbb
sahf
jno
aas
or
adc
xor
pop
ret
pusha
cmc
clc
sti
rolb
lcall
cli
inc
push
stos
dec
sbb
rcr
mov
cmp
dec
xor
xor
les
inc
out
push
fcompl
add
jecxz
aam
in
push
cmc
inc
int
mov
push
lcall
hlt
mov
add
fisttpll
xchg
xor
inc
inc
push
dec
stc
fs
mov
out
jae
add
test
xor
pushl
rorl
push
fsubs
adc
es
dec
xor
cmpsl
cli
in
je
xor
pop
cwtl
mov
xor
fs
mov
jl
fstl
arpl
push
jb
leave
dec
clc
cmp
push
inc
mov
cwtl
pop
pop
xor
ja
sar
fistpl
jnp
loop
and
mov
lret
and
ret
outsb
arpl
push
jp
mov
rcr
lods
push
roll
stos
imul
in
popf
pusha
cmp
adcb
in
xlat
int
jle
adc
jecxz
in
xchg
stos
ds
dec
je
ret
mov
inc
lcall
jecxz
orl
enter
sub
lcall
insb
iret
add
ss
vmovupd
inc
pop
push
scas
xchg
pop
push
dec
in
lret
fiadds
jle
sarb
in
pop
jbe
lock
outsl
jne
xchg
dec
insb
je
xor
pop
push
lahf
xchg
cmp
sbb
divl
adc
xor
movsb
scas
ret
push
sub
pop
jmp
sti
inc
les
repnz
cli
xchg
cmp
inc
arpl
and
jae
push
xchg
pop
fdivs
push
popl
ds
insb
push
inc
mov
sbb
adc
ret
sbb
xchg
aad
popa
cltd
sbb
fwait
sub
jae
mov
insl
dec
je
or
lods
fidivl
mov
xor
sub
jmp
and
shlb
mov
je
sbb
mov
int
dec
cmpsb
push
sbb
mov
lahf
data16
sahf
push
adc
push
pop
stc
fistps
int
inc
add
mov
fcom
add
call
mov
mov
test
mov
add
ja
xor
add
in
add
lret
aad
dec
push
push
cmp
loop
cmpsl
jle
mov
les
imul
inc
jecxz
inc
rcl
das
and
sbb
inc
in
push
jl
push
mov
add
gs
out
aam
push
inc
sub
scas
jg
scas
mov
dec
fs
sarl
ja
imul
enter
adc
daa
outsb
push
push
rclb
add
loope
leave
adc
jmp
push
lds
or
sub
xor
cld
outsl
enter
pop
push
xor
insl
xlat
xchg
mov
scas
pop
imull
sub
in
lcall
icebp
in
pop
or
and
pusha
call
rcll
fs
pop
fbstp
leave
inc
dec
sbb
adc
dec
mov
xor
bswap
sbb
pop
rorl
lea
adc
push
jnp
xor
xor
in
insl
sub
push
sub
mov
lret
out
pusha
xor
inc
mov
sbb
test
nop/reserved
ficoms
adc
scas
xchg
push
aaa
aam
lret
arpl
and
repnz
jns
stc
cwtl
jno
and
loop
test
test
xlat
adc
out
shll
jo
pusha
push
call
or
cmpsb
cmpsb
push
fcmove
fistpll
stc
ljmp
fwait
ljmp
call
push
jo
add
sbb
shl
jnp
scas
gs
mov
inc
loop
and
dec
jae
pop
mov
cmp
shl
xchg
dec
cmp
add
and
stos
shlb
dec
or
jno
push
sub
cmp
xchg
jo
sbb
outsb
mov
call
xchg
dec
dec
jl
je
gs
gs
pop
test
pop
mov
imulb
stc
into
sbb
add
cmp
xchg
xchg
xor
in
inc
adc
push
test
out
daa
icebp
arpl
sub
pop
xchg
cltd
mov
lods
mov
push
fwait
or
stos
xchg
xchg
push
iret
popf
push
mov
loope
pop
jp
xor
faddl
into
test
xchg
mov
aad
subb
cld
fcmovnb
roll
shll
daa
push
divb
jne
inc
jp
fwait
rol
imul
cld
adc
jmp
leave
fs
or
pop
and
fbstp
mov
cli
scas
insb
push
rol
sbb
dec
push
fdivrl
aam
shlb
xor
inc
loop
call
jb
mov
in
addr16
pop
cmp
jp
push
les
int3
jle
inc
sub
mov
mov
shlb
dec
adc
fstpl
inc
fcompl
insb
cmp
push
mov
jmp
clc
push
push
xchg
das
imul
adc
jecxz
pop
call
negb
das
adc
enter
inc
ss
mov
lock
dec
frstor
cmp
mov
xor
cs
fisubl
dec
in
je
xchg
sbbb
fstpt
mov
jge
jecxz
sbb
and
mov
ds
push
nop
jne,pt
out
inc
mull
push
das
loope
inc
mov
int
orl
adc
cmp
or
sbb
scas
cmc
lahf
or
or
int
inc
dec
mov
shll
ret
inc
cmc
pop
lds
popa
pop
leave
cmp
insl
icebp
sub
sub
dec
jo
arpl
sarb
cmpl
push
mov
add
push
fwait
out
mov
lds
fs
or
sub
inc
and
jne
cmc
sbb
rolb
fcmovb
xchg
cmc
jg
mov
imul
jbe
xchg
pusha
adc
adc
mov
push
negb
movsl
int3
movsb
dec
sarl
orl
and
and
sbb
movsl
sub
mov
xor
mov
lret
mov
adc
jns
pop
rorb
or
ja
pop
out
mov
out
punpckhdq
mov
pop
insb
addr16
rol
sbb
vpsadbw
negl
sub
ljmp
jae
aad
cmp
shl
lea
add
push
in
cmc
lea
in
je
movsb
jecxz
rclb
xchg
sahf
inc
ds
mov
mov
inc
and
loop
xor
repnz
out
inc
cmp
rol
xchg
push
ficompl
inc
pop
pop
imulb
jp
cli
lods
dec
push
jge
jns
out
mov
stc
cmpsb
dec
in
cmp
inc
xchg
in
loopne
sub
fwait
xor
cmp
push
lret
inc
insb
pop
adc
stos
out
inc
push
jae
xchg
mov
outsl
adc
mov
fcomi
ljmp
mov
push
das
stc
push
jle
pop
add
dec
pop
dec
jge
mov
pushf
es
jne
outsb
xchg
pop
push
cli
cmc
repnz
push
popa
stos
hlt
sahf
pusha
and
dec
incb
cmpl
dec
shr
loope
fwait
shl
inc
dec
fcomps
es
shll
inc
jge
add
fisttps
push
mov
mov
sbb
and
sub
sub
divl
scas
ja
push
fldcw
das
push
mov
cltd
in
fnstsw
roll
loope
xor
cld
call
or
shll
addb
testb
call
mov
dec
arpl
jmp
insl
insl
sbb
xchg
adc
imul
or
pop
xchg
mov
test
push
loopne
data16
in
adc
mov
std
test
add
sbb
jmp
clc
imul
push
push
mov
into
out
cld
pop
insl
jl
rcr
sub
inc
jecxz
ja
sub
call
cmp
sbb
movsl
inc
add
xor
sti
hlt
add
ss
sub
fcoml
sbb
mov
aad
adc
add
icebp
enter
push
push
sti
sbbb
inc
dec
outsl
lds
cltd
lea
idivb
and
xchg
dec
mov
lret
orb
push
push
fs
jg
addr16
push
filds
inc
ficomps
add
loopne
xlat
loope
std
pop
insl
xor
xorl
adc
inc
xor
jnp
lret
mov
push
into
call
mov
jmp
popa
sbb
inc
or
ficomps
push
cltd
mov
mov
jmp
jge
movsl
cmpb
imul
loope
push
idivl
outsb
jp
cmpsl
mov
pop
daa
inc
cmp
enter
adc
lcall
push
cld
insb
icebp
es
jecxz
and
fldt
add
pusha
xor
cli
gs
pop
mov
lock
scas
in
cmpb
mov
add
fcompl
mov
test
lret
push
in
ja
jo
dec
xor
aas
mov
mov
mov
push
push
dec
mov
stos
js
sbb
out
bound
push
mov
movb
jb
inc
ss
add
orl
jns
inc
outsb
pop
mov
arpl
into
mov
lods
ret
imul
clc
aad
cwtl
sbbl
mov
out
inc
mov
sub
dec
mov
or
in
add
xchg
sub
and
xchg
mov
insb
bound
mov
xchg
outsl
jno
test
rcll
push
cld
cmc
insb
pop
inc
push
add
xor
xor
gs
cltd
test
hlt
sti
es
movsl
in
in
xor
and
jge
sub
stos
dec
jns
adc
cmc
cmpsl
fldt
loop
sbb
inc
scas
cmp
jnp
loope
jecxz
leave
bound
fistps
jge
popf
add
int3
sbb
movsl
lcall
pop
ficoml
hlt
in
in
sbb
outsb
je
jbe
xchg
pop
les
mov
lock
lahf
push
push
mov
jne
dec
stc
stos
enter
cmp
or
ds
xor
jb
sbb
shld
aas
push
push
mov
jmp
adc
inc
out
xor
jbe
push
fmull
lock
rorb
mov
shl
sti
fcoms
aad
push
aaa
movsb
and
mov
push
gs
das
push
or
out
leave
add
cmp
mov
imul
adc
in
jg
aas
test
jno
int
or
leave
popf
stc
mov
sub
inc
cmp
jne
dec
iret
cmp
out
add
addr16
stos
or
mov
push
fdivrl
push
imul
leave
leave
das
cmpsb
sbb
cmp
xor
je
fistl
ror
fs
cmpsl
and
cmpsl
ret
xchg
cltd
mov
add
mov
adc
inc
loopne
in
jae
jp
insl
pop
mov
nop
test
sub
adc
andl
xor
popf
cwtl
pop
xchg
mov
pop
add
and
add
inc
push
cmpsl
popf
enter
das
sbb
pop
cmp
ret
sar
popa
jne
lock
xchg
sti
movsl
and
movsl
sti
mov
imulb
std
and
mov
jge
sbb
push
sub
aaa
es
adc
jle
push
pushf
pushf
mov
ss
leave
lret
lcall
mov
xchg
ffree
pop
cs
mov
dec
jge
faddl
pop
js
insb
das
dec
ret
push
cmp
pop
adc
bnd
test
adc
pop
pop
mov
push
jno
adc
dec
int
mov
lahf
in
dec
push
stos
jge
mov
pop
stc
add
nop
push
testb
xchg
sbb
popa
fsubrl
fidivrl
test
vpsllw
mov
fs
inc
outsl
sbb
cld
pop
push
sub
ljmp
shl
addl
jbe
adc
and
jns
xlat
dec
popa
popa
cmpb
negl
cwtl
int
lret
inc
dec
in
xor
outsb
dec
ds
cmpb
sbb
rcrl
cmp
mov
in
xchg
sub
push
push
xchg
shlb
sub
jnp
lret
sub
add
push
popf
ficompl
out
mov
sbb
sub
push
cli
sbb
lahf
aaa
add
jmp
mov
fcmovnb
pop
xchg
mov
jne
ss
lock
pop
dec
dec
mov
js
xchg
and
imulb
hlt
and
push
push
sbb
out
dec
xor
int3
cmc
mov
das
outsb
lret
aam
lcall
mov
lea
jb
lods
loop
lods
mov
adc
dec
dec
push
hlt
arpl
test
insb
lahf
mov
xor
pusha
ljmp
pop
imul
mov
and
push
fucomi
cltd
into
sbb
sub
and
sub
int
testl
loopne
xchg
mov
push
ficoml
sub
ljmp
arpl
xor
das
clc
inc
jnp
jae
inc
adc
mov
or
notb
or
clc
mov
inc
adc
and
sub
fildl
jns
cmp
dec
mov
gs
aas
mov
jp
and
scas
xchg
adc
popa
ret
imul
add
dec
inc
scas
aaa
andb
lcall
sub
lret
cmp
lock
or
js
xlat
mov
sub
in
imul
test
ds
pop
push
inc
lahf
ljmp
xor
xor
xor
mov
fnstenv
mov
adc
push
pushf
inc
loope
mov
rorb
inc
adc
in
push
dec
pop
adc
add
scas
iret
decl
js
xchg
lret
or
lock
nop
xchg
mull
add
mov
icebp
adc
cmp
adc
dec
mov
inc
xchg
mov
xchg
push
push
hlt
mov
pop
or
data16
cmp
arpl
cwtl
nop
das
jae
test
xlat
scas
jl
ret
cmp
mov
pop
xor
add
cld
clc
add
movsl
or
add
mov
mov
pushf
xor
xchg
push
sub
test
in
cmp
addr16
mov
mov
cmpsl
pop
enter
push
sbb
xor
xchg
mulb
movb
lock
pop
sarb
add
orl
leave
mov
jg
sub
push
xchg
push
cmp
sbb
fisubl
jle
fs
add
cmp
xchg
push
popf
mov
and
xor
cwtl
dec
test
inc
lret
dec
xchg
ficoml
mov
push
enter
bound
or
cli
into
fwait
loopne
call
xchg
insl
rorb
jno
or
cli
scas
xor
lcall
outsl
mov
insl
push
ret
jge
and
mov
jbe
movsb
cmp
movsl
push
mov
loopne
mov
sub
outsl
mov
jae
cmpsb
jge
adc
sbb
xor
cli
push
orl
shrl
mov
pop
ret
addb
push
inc
jns
cmp
ror
popf
pushf
and
and
ret
push
repz
test
jno
and
cwtl
lret
inc
xchg
mov
mov
pop
lcall
mov
aaa
int3
pop
shll
cmp
iret
xlat
bound
mov
fwait
clc
in
jle
add
pop
imulb
mov
mov
test
mov
outsb
int3
mov
sar
inc
and
dec
andb
inc
mov
add
mov
lock
sub
rolb
es
push
xchg
jae
mov
fbstp
sub
xor
xchg
cs
out
jo
add
jmp
out
sti
sbb
clc
inc
arpl
pop
pusha
jle
int3
push
stos
push
fcomps
cmp
bound
and
xor
rorb
cmp
dec
in
mov
xor
test
mov
jne
and
enter
shll
cmovl
xor
rol
xchg
nop
push
jmp
jae
in
and
out
enter
pop
pusha
xchg
push
ds
mov
mov
loopne
enter
pop
xlat
mov
sub
pop
pop
dec
cmp
movsl
mov
cmp
push
dec
das
push
add
jmp
pusha
mov
lea
add
roll
enter
xor
jb
dec
or
lahf
out
int
loopne
inc
pop
cli
or
cmp
fcompl
push
icebp
push
fdivl
dec
sub
mov
popf
pop
arpl
test
inc
aam
cmp
jmp
int3
pushf
sti
aam
fsubl
stos
mov
inc
or
aad
xor
or
mov
sbb
es
ljmp
xor
ds
stos
loope
adcb
push
lds
xor
call
ret
xor
pusha
scas
mov
sub
adc
push
divb
fmuls
mov
cmc
or
xor
stos
mov
rcrb
out
orb
subb
das
and
inc
testl
ret
cmp
test
loop
push
add
insb
fdivrp
mov
aad
mov
mov
jecxz
pop
negl
jno
out
outsl
push
add
xchg
adc
adc
scas
cld
push
mov
pop
aam
into
push
inc
ror
out
jne
ret
xchg
ficoml
cmp
bound
scas
ss
push
hlt
jno
mov
push
or
aas
int3
xchg
adc
clc
pop
mov
pushf
shrl
jbe
insl
pop
dec
fistl
jnp
popa
sbb
xor
mov
fldpi
out
fdivrl
jb
cmp
incb
push
bound
mov
pop
xchg
push
mov
repz
mov
lcall
cmp
sbbl
fsubrs
xchg
inc
mov
hlt
mov
jbe
jp
punpcklbw
fcomps
inc
fidivrl
dec
and
shl
loop
add
cltd
cltd
mov
es
fidivl
jmp
call
mov
and
dec
lds
cmp
mov
lcall
or
push
jnp
pop
stos
js
out
cmpb
inc
pop
mov
xchg
cwtl
mov
mov
insl
pop
mov
in
aas
push
jge
add
push
or
and
adc
dec
dec
fstl
nop
inc
lds
enter
stos
fwait
or
int
ss
adc
aas
test
dec
push
outsb
sahf
mov
or
sbb
cli
ret
sub
mov
xchg
cltd
jecxz
dec
enter
in
popf
add
and
sbb
jge
jb
cltd
inc
les
push
add
adcb
jbe
dec
adc
das
stos
and
in
popf
cmpl
inc
mov
lea
pop
xchg
test
es
mov
daa
aas
or
pop
adc
dec
stos
in
jno
movd
and
stos
mov
jbe
push
fldpi
outsl
xchg
inc
mov
push
mov
push
xorb
in
push
xchg
inc
std
pop
adc
jbe
sahf
inc
cld
fistpl
jnp
outsb
popf
inc
in
inc
lods
scas
fsts
adc
adc
daa
xchg
mov
xchg
xchg
xor
aas
ret
nop
andb
test
push
pop
das
add
call
and
sbb
inc
js
sub
roll
jp
mov
mov
jns
adcb
push
imul
or
pop
icebp
and
test
or
sub
add
add
xor
sbb
es
xchg
push
cmp
rol
js
lds
lea
ja,pn
jmp
mov
mov
stc
mov
sub
das
jne
out
cmp
add
into
filds
lret
jb
lcall
ds
fcomps
in
mov
adc
inc
gs
add
mov
stos
push
jmp
inc
xchg
popa
rcrl
cs
cmp
add
mov
xlat
mov
mov
jle
ret
pushf
push
aaa
lods
pop
cmp
pop
adc
xchg
rorb
imul
repz
lcall
into
or
jns
add
fldenv
mov
cmp
ljmp
fadd
iret
dec
fidivrs
xor
out
shlb
sub
jmp
cmp
add
mov
insb
mov
sbb
movsl
in
idivl
mov
pop
stos
dec
repz
pop
aad
xchg
mov
cli
dec
pop
add
cmc
add
mov
push
call
add
cmc
sarb
lods
imul
jge
lea
mov
xor
scas
mov
pop
gs
push
into
data16
or
test
es
xor
pop
add
cmp
sub
or
dec
inc
push
shll
jae
and
mov
mov
xor
xchg
fdiv
sub
cmp
jg
mov
pushf
sub
aas
repz
movsb
adc
adc
sub
push
mov
pop
pavgb
icebp
outsl
xchg
lret
and
ljmp
push
sbb
inc
outsb
or
xor
mov
lret
outsl
push
cmp
into
cli
mov
aam
dec
cwtl
cltd
aas
dec
testb
mov
dec
pop
jno
mov
lds
inc
push
daa
popa
outsl
insb
adc
lds
dec
rep
lret
add
icebp
mov
lds
push
jb
loope
mov
jle
cwtl
push
adc
mov
sbb
scas
mov
add
out
das
adcb
cmpsl
pushf
out
add
fsubrl
dec
sbb
mov
add
sbbb
es
adc
sti
outsl
popa
js
sahf
push
imul
std
sbb
hlt
test
in
or
push
cmp
xchg
call
loop
inc
gs
pop
mov
cmp
sub
loopne
arpl
cmpsb
cmp
cmp
dec
std
jecxz
jmp
cmp
pop
or
addb
or
push
xor
mov
cld
arpl
cmp
lret
fisubrs
and
push
pusha
push
jg
lea
test
cmpsl
dec
jp
inc
adc
jecxz
xchg
push
mov
aad
sti
jp
adc
jae
pop
and
hlt
pop
inc
sbb
lea
cs
test
aam
mov
test
ret
fwait
sti
mov
xchg
adc
mov
addb
push
cmpl
mov
push
int3
mov
pop
or
pop
mov
lods
imul
lea
mov
ljmp
xchg
decl
movsb
mov
out
mov
cmc
mov
lret
cmp
inc
xchg
loope
xor
into
lea
iret
push
lods
pop
push
fwait
push
sbb
push
mov
es
pushl
pop
push
adc
add
testl
jae
call
mov
ja
dec
fbstp
ret
push
dec
icebp
es
or
mov
mov
add
mov
aam
loop
adc
jge
shrl
scas
cmpsb
rcrb
add
or
shll
push
or
pop
jecxz
mov
xchg
imul
dec
or
pop
out
dec
cld
push
std
jns
sub
dec
xor
outsb
jb
filds
into
mov
lock
mov
stos
xchg
mov
xor
imul
cwtl
mov
rcrb
push
add
outsb
mov
jle
in
ss
xor
jno
mov
sbb
sub
leave
mov
test
pop
out
dec
dec
out
ret
sbb
out
fidivl
sub
sbb
stc
xchg
in
std
lret
mov
testb
cmpsl
jb
fisubs
sbb
inc
out
aas
push
sbb
pop
push
mov
fldcw
test
or
adc
pop
jecxz
pop
add
mov
jns
scas
mov
scas
loope
bound
pmaxsw
sbb
dec
or
mov
xchg
pop
mov
rcl
or
out
mov
push
imul
mov
cltd
inc
inc
pop
les
repnz
or
cld
ret
bound
mov
mov
frstpm(287
or
hlt
imul
xchg
sbb
imulb
sbb
arpl
push
add
int
lea
or
and
mov
out
leave
rcrb
daa
test
xchg
adc
pusha
movsl
subb
push
repnz
aaa
jl
cmpsl
popa
pop
push
out
add
jno
stc
add
jg
mov
xor
push
icebp
xchg
jne
and
inc
fsincos
cmp
aaa
cmpsb
pop
push
test
and
sbb
in
ss
pop
ljmp
push
cmc
ffree
xchg
cmpsb
and
dec
pop
push
hlt
jecxz
cmp
mov
sbb
out
lods
cmp
dec
or
push
dec
push
or
xor
mov
fnsave
notb
pop
sbb
mov
js
fisttpll
jnp
jl
movsb
and
xchg
pop
outsb
jmp
xchg
pop
push
xor
inc
sub
sahf
popf
test
movb
jb
mov
pop
mov
fdivl
js
sbb
popa
push
adc
dec
jg
mov
jns
aaa
mov
sbb
lods
pop
enter
mov
jo
scas
and
mov
mov
lcall
movswl
sbb
bound
push
test
mov
xor
enter
pop
xor
cmp
ret
mov
adc
xchg
inc
cld
lcall
in
xor
mov
push
and
lock
mov
fwait
and
inc
aas
push
push
mov
inc
inc
or
fcmovnbe
pop
mov
es
je
shlw
aaa
jge
ss
mov
jns
pusha
push
mov
in
dec
add
gs
hlt
sbb
and
cmp
lret
pop
dec
or
sub
mov
xor
push
int3
ret
jecxz
bound
and
sub
push
mov
daa
xchg
test
inc
fmul
movsb
mov
pop
loop
lods
ljmp
sub
cmpl
adc
cmp
notl
jbe
repz
and
shlb
movsl
lret
std
les
or
adc
in
daa
fstl
push
imul
sub
in
idivl
jae
add
imulb
jo
xchg
cli
bound
in
adc
loop
enter
mov
mov
popf
inc
enter
lcall
or
sub
pusha
je
insb
inc
sbb
sub
add
xchg
pop
cli
mov
xchg
in
gs
xor
or
fucomi
lock
sub
sub
imul
hlt
pop
xchg
sbb
inc
pop
loopne
sub
inc
mov
lret
lahf
aad
and
pop
jb
cs
inc
jno
out
fcomps
cmp
xor
sbb
mov
imul
jbe
sbb
mov
fstps
inc
xchg
mov
xchg
jp
sbb
add
sbb
sub
cwtl
cmp
mov
andl
clc
dec
sub
arpl
or
mov
jmp
aaa
mov
lock
mov
jns
mov
loopne
xor
pop
dec
repz
or
adc
out
and
aaa
ret
and
xchg
mov
or
sti
add
aam
orps
addb
rcrb
jp
shlb
jbe
aaa
dec
loope
dec
lds
mov
pop
fs
outsb
and
sti
and
push
push
dec
cmp
addr16
fcoml
insb
daa
xchg
imul
mov
mov
xrelease
hlt
push
sbb
and
mov
mov
pop
lret
stos
push
cli
mov
cltd
je
popf
cmp
adc
and
outsl
sub
mov
movb
aam
cld
sahf
push
push
cmp
mov
pop
cmp
adc
rcrb
pop
ljmp
sub
cwtl
sbb
mov
sub
xchg
insl
aas
lret
mov
jbe
cld
mov
push
shll
push
out
jecxz
and
cmp
in
mov
mov
popa
cmp
jle
mov
push
xor
jle
insl
rcrl
mov
aaa
in
cltd
sub
int
fisubl
mov
popa
mov
inc
push
jb
cmpsb
inc
scas
iret
aad
xor
inc
and
push
push
lods
or
pop
mov
sahf
jp
inc
fisttpl
shlb
jnp
mov
add
jmp
cwtl
std
mov
lea
push
js
test
loopne
fimull
les
fiaddl
sahf
lret
in
std
cmc
jno
xchg
mov
push
jb
lock
mov
lcall
sbb
add
dec
shll
insl
mov
ljmp
xchg
adc
scas
adc
in
mov
push
cmp
pop
dec
mov
popf
cltd
icebp
mov
sbb
push
gs
or
aaa
mov
hlt
inc
cmpsb
subl
sbbl
adc
stos
jecxz
inc
stc
sbb
pusha
xor
aas
std
and
movsl
fstps
insb
mov
dec
add
jecxz
xor
das
pop
add
lods
subb
pop
cld
mov
push
xor
dec
pop
testl
inc
jns
mov
xor
jl
clc
ja
daa
mov
sbb
addr16
arpl
inc
push
mov
jnp
jo
jb
cld
jmp
dec
push
inc
cs
jecxz
nop
insl
jl
push
cs
stos
adc
das
cmc
jae
fsubrp
and
or
inc
or
cmp
lods
pop
dec
clc
imul
push
dec
jp
mov
loopne
lea
outsl
cmp
sti
jge
std
cld
push
fcoms
pop
fisubrs
stc
outsb
mov
adc
and
sub
sbb
add
mov
xchg
push
fistl
mov
das
es
xchg
dec
push
jb
inc
cld
lea
ds
sbbl
sub
ds
jo
imul
xor
int3
andb
inc
pop
mov
insb
std
push
cs
pop
lock
rorb
pop
lahf
mov
cmp
cmpsb
pop
fwait
sbb
ret
or
aaa
jmp
lret
mov
ret
cmc
lcall
aad
cmp
or
clc
aas
mov
jno
loope
pop
xor
lahf
dec
cmp
push
movsl
jb
sti
adc
push
pop
pusha
test
aam
sub
dec
push
dec
mov
lcall
jne
pushf
sub
mov
mov
xchg
addr16
js
or
cmp
in
sahf
fldenv
inc
adcb
repz
adc
repz
cmpsb
mov
aam
sbb
jnp
icebp
subb
pop
mov
ja
mov
or
pop
call
movsb
mov
in
es
fwait
push
jl
rolb
mov
jg
rorb
jg
pop
push
inc
mov
test
inc
jns
mov
dec
add
sub
sub
int
cltd
enter
mov
jg
mov
jge
sub
into
inc
or
adc
out
std
mov
sub
xchg
cs
push
insb
loop
imul
push
data16
pop
insl
addr16
or
add
push
inc
dec
jge
stos
ljmp
push
rcrl
xchg
jns
xlat
jo
dec
in
pop
negb
sbb
insb
xchg
xlat
inc
jge
push
mov
dec
addl
jmp
leave
addr16
ss
xlat
jb
test
dec
cmp
push
test
xor
adc
ja
aam
mov
lret
out
push
es
adc
xchg
sbb
pop
hlt
and
test
in
rcll
adc
mov
mov
jg
mov
jl
mov
iret
push
or
sub
loope
jecxz
push
jo
shlb
dec
test
mov
nop
lcall
and
popf
and
iret
xchg
bound
mov
cmpsb
jnp
xchg
or
fldl
pop
mov
cmp
mov
mov
push
add
lret
push
or
aam
xchg
mov
jle
mov
ficomps
fwait
mov
and
pop
lock
mov
in
xchg
je
jae
sub
jns
pop
pop
icebp
stc
sub
push
mov
pop
filds
outsb
cwtl
shll
mov
call
or
push
cmp
es
mov
scas
xchg
xlat
shrl
out
stos
sarb
xchg
jl
or
imull
xchg
cmc
cltd
rcll
adc
test
lods
cltd
mul
or
pushl
js
mov
jno
aad
leave
cmp
jg
jge
mov
jl
mov
and
imul
cmpsl
std
cmp
orl
mov
sub
and
fxch
ss
xchg
pop
inc
add
cmp
ja
pop
arpl
es
repz
movsb
lret
xor
int3
dec
mov
xchg
out
inc
and
rolb
mov
dec
add
scas
iret
lods
test
lea
movsb
jns
shrl
fwait
mov
xchg
addr16
aad
xorb
sub
fnsave
fwait
mov
lcall
sarl
push
push
cmp
lret
sbb
and
clc
mov
fimull
jge
leave
fisubrs
rcrl
mov
or
lea
je
insb
adc
aad
fwait
mov
mov
lret
ss
jae
xchg
push
dec
pop
jbe
adc
fisubrs
fistl
push
pextrw
mov
fldl
mov
sbb
imul
dec
jnp
jle
loop
pop
ljmp
repz
inc
xchg
sub
in
popa
js
mov
fwait
jg
in
and
xor
clc
add
sub
loopne
mov
daa
or
jle
cltd
xchg
es
mov
xchg
or
push
and
mov
shrb
int3
sbb
jl
pop
test
fldenv
add
in
add
test
test
cmp
cltd
sbb
cmpsl
dec
cwtl
mov
and
add
jp
das
cmc
jns
dec
mov
mov
xlat
adc
icebp
fcomp
xchg
sbb
mov
inc
repnz
inc
shl
push
inc
mov
cmp
insb
inc
std
enter
lock
mov
inc
out
cmp
lret
lods
xor
xchg
xor
mov
xchg
dec
xor
ficompl
adc
outsb
test
adc
sub
into
mov
loop
sbb
int3
out
xor
imul
inc
mov
pusha
fbld
rol
cld
test
mov
into
add
cmp
fs
jno
ljmp
dec
test
pop
sbb
or
cli
int
ret
mov
pavgusb
adc
loopne
sarl
cwtl
into
sbb
fs
mov
push
fistl
xchg
jl
leave
imul
and
out
notb
or
popa
pop
xchg
push
inc
mov
jns
negb
pop
adc
inc
dec
shl
jge
mov
mov
frndint
pop
js
xchg
int
cmpsl
popa
cmc
into
mov
and
cmp
adcl
cmp
sub
pushf
cmp
mov
add
nop
popf
aam
cmp
mov
std
xchg
adc
pop
call
mov
cmp
adcb
popf
aad
xchg
icebp
and
pop
sbb
inc
push
aaa
inc
and
into
stc
call
jecxz
loope
lock
push
push
push
jmp
lahf
nop
rol
sub
mov
mov
cli
cmp
loop
into
loop
movsl
dec
ret
movsl
testb
jle
mov
cwtl
inc
flds
xchg
pop
sbb
mov
fimuls
mov
and
push
rorb
mov
mov
add
or
int3
dec
mov
test
adc
jge
or
cmp
addr16
hlt
clc
add
movsl
mov
pop
sub
push
fildl
jne
add
sub
mov
adc
dec
mov
adc
outsb
cmpsl
lea
js
pop
pop
data16
sarb
sbb
inc
es
pushf
pop
cmp
int
xor
mov
pop
int
xor
rcrl
dec
mov
outsl
pop
push
add
out
cmp
test
loop
adc
stc
fwait
mov
cltd
icebp
adc
inc
push
scas
data16
sbbl
pop
pusha
jnp
mov
adc
xchg
imul
loopne
popa
lea
mov
push
nop
adc
mov
test
push
in
adc
pop
cld
fsts
jb
data16
jb
scas
sbb
adc
xlat
incl
and
mov
out
outsl
xor
push
dec
imul
fcmovnb
fistpll
add
push
mov
mov
fincstp
jno
aam
andb
in
nop
sbbl
sub
lea
sbb
jmp
jae
int
mov
sbb
mov
movsl
jmp
xlat
pop
into
inc
fidivs
aaa
sbb
pop
jns
sar
stc
scas
sarb
push
pusha
xor
ja
inc
sbb
pop
push
in
call
push
out
push
mov
out
sbb
fcomi
mov
mov
mov
push
mov
lea
bound
jno
addr16
inc
and
add
pop
xchg
mov
adc
jge
xchg
cmp
jo
push
std
sbb
mov
pop
bnd
arpl
js
dec
addl
arpl
sbb
xor
jns
dec
xchg
mov
sub
mov
mov
sub
mov
in
rcrb
inc
idivl
lods
xchg
fs
les
mov
pop
sub
test
shll
imul
push
pslld
sqrtps
stos
add
daa
loope
popf
sbb
cwtl
mov
shlb
xchg
xchg
xchg
push
movsb
ja
je
stc
dec
pop
xchg
bound
dec
and
pop
fidivrs
xor
cmp
sbb
xor
idiv
pop
aas
dec
or
orl
ret
movsl
les
pop
jnp
pop
inc
dec
add
fstpt
mov
sbb
mov
test
pop
mov
xchg
lds
jecxz
jl
arpl
int
push
inc
mov
rcl
push
xchg
mov
dec
mov
fmuls
inc
icebp
insl
cmp
cwtl
out
cmp
add
mov
xchg
xor
pop
ret
test
mov
pop
out
scas
sub
mov
lret
nop
negl
dec
loope
in
mov
and
mov
dec
or
dec
out
adc
cmpsb
pop
int3
dec
cld
std
addr16
push
stc
gs
mov
orb
scas
pop
dec
repnz
insb
add
jmp
call
push
push
mov
insl
cmpsb
push
lcall
mov
jle
pop
push
movsb
rol
imul
and
and
aad
xchg
dec
dec
out
or
adcb
cmp
mov
iret
hlt
sub
ss
cmp
imul
fldl
mov
pop
jp
jo
movsb
cs
push
lahf
outsl
popf
mov
push
mulb
test
dec
outsl
data16
dec
hlt
leave
pop
jae
inc
test
pop
xchg
mov
pusha
and
dec
push
or
cmp
fsubrp
pop
jns
lods
sub
jl
push
js
push
push
lea
shrb
movsb
jg
stos
jle
cs
int
jne
pop
ret
sbb
mov
bnd
jecxz
jmp
xchg
insl
dec
pop
clc
addl
je
sarl
negl
mov
cmpsl
fistps
stc
rorl
mov
stos
ret
sbb
shlb
std
aam
stos
pop
sahf
push
sbb
pop
es
es
sub
jae
mov
movsb
sahf
jae
push
and
jp
pop
fcomi
lahf
adc
sub
ss
adcb
es
lock
jp
cld
mov
loopne
and
clc
cltd
test
pop
mov
repnz
push
xchg
xchg
cmpsl
cmc
jecxz
xchg
clc
add
sbb
cmpsl
dec
lock
xchg
sub
cmpsl
fistps
push
pop
ss
dec
fcompl
vprotw
jne
pop
jl
js
dec
mov
cmp
pop
mov
icebp
cmp
aas
mov
pop
push
pushfw
push
leave
sub
xchg
loope
push
ja
les
xor
sbb
inc
mov
pusha
jle
aam
dec
pop
les
test
rcrl
sahf
push
stc
jle
out
jl
xchg
pop
lods
and
sub
cmp
cltd
jns
add
jns
and
cmp
sbb
or
scas
add
push
xchg
mov
cmp
push
das
and
jns
rcrl
addl
inc
mov
push
clc
jae
xchg
cmp
sub
sub
popl
int
fldt
dec
in
mov
lret
pop
mov
dec
jne
fists
push
aaa
or
inc
out
fidivl
push
movsl
test
cmp
lds
ja
popa
sub
insl
ret
jmp
fimull
xor
jae
gs
mov
movsl
loopne
outsb
mov
and
pop
fcmovbe
and
pop
js
shll
or
icebp
xchg
int3
push
jbe
xchg
sub
ljmp
mov
inc
sub
sbb
add
jo
mov
f2xm1
inc
dec
mov
ljmp
pop
sbbb
and
les
sub
dec
pop
imul
in
aas
sub
xchg
hlt
cmc
push
dec
and
pop
lcall
push
xchg
push
lret
pop
add
mov
dec
mov
repz
xor
xor
out
orl
psrlq
jne
popf
cmp
pop
xchg
mov
inc
scas
xchg
xor
aaa
mov
pop
lods
dec
sbb
jg
push
aaa
xchg
in
cmpsb
sbb
fcomps
adc
out
dec
ficomps
pop
and
out
xlat
and
adcl
movsl
cltd
mov
in
sub
adc
fiadds
fstpl
int3
stos
pusha
xchg
out
dec
fcomps
cmp
repnz
in
mov
setl
pop
outsb
add
divb
sti
in
mov
add
pop
jmp
insb
jmp
or
xchg
add
in
andb
fisubrs
cmpsb
rorl
hlt
cmp
mov
pop
add
jge
pop
jp
mov
dec
mov
inc
xchg
adc
mov
stos
and
or
in
cmp
cwtl
or
jp
add
jmp
pop
test
sbb
mov
mov
inc
or
jmp
ret
pop
je
xchg
sbb
std
out
nop
mov
subb
sub
adc
data16
jmp
test
test
and
mov
dec
push
xor
out
sbb
lret
dec
lock
push
dec
lret
or
repz
jl
sbb
sub
aad
lock
adc
inc
mulb
jmp
fbstp
cmpsl
or
loopne
movsl
stc
mov
jl
or
fcomip
fucomp
push
mov
pushf
es
std
xchg
add
in
cmp
xor
xlat
jle
nop
loopne
fwait
test
inc
adc
jns
mov
dec
cld
inc
lea
in
sub
mov
es
mov
fstp
loope
ljmp
inc
in
imul
add
lock
sbb
scas
and
sub
and
ficoml
cmp
add
popa
pop
mov
push
push
push
test
cmp
inc
leave
fists
mov
push
cwtl
sub
les
push
dec
push
in
pop
ljmp
mov
pop
in
mov
or
add
ss
bound
daa
adc
aam
or
std
inc
cmp
sbb
mov
shl
aam
movl
add
push
push
cs
rorl
popf
clc
enter
xchg
and
dec
inc
inc
xchg
adc
and
pop
mov
mov
sub
movsb
incl
movsl
dec
cmp
cmp
sbb
jns
lret
movsl
ja
pop
imul
sbb
stos
out
pushf
mov
pop
sub
sbb
mov
sub
or
mov
popf
mov
xor
test
test
or
pop
dec
roll
mov
jp
cmpsl
push
lock
test
xor
pop
push
mov
cmc
adc
sub
cli
push
daa
dec
mov
xchg
or
aam
call
mov
orl
jbe
rorb
ficompl
ret
pop
int3
pop
mov
pop
test
jne
test
or
sbb
gs
jl
cmpb
push
pop
lods
fs
add
pop
cld
rcrb
popa
mov
cmc
pop
loope
addr16
dec
xchg
xchg
in
push
and
xorl
inc
fmul
jg
or
push
cmp
mov
sub
push
push
jmp
pop
es
mov
pop
fwait
pusha
push
aaa
lods
jbe
adc
mov
sbb
mov
jae
jnp
repnz
repnz
push
jae
pop
dec
cltd
sarl
mov
adc
sbb
scas
mov
fsubrl
leave
gs
push
xchg
jno
js
dec
pop
cltd
jp
xchg
push
xor
jp
jecxz
dec
mov
mov
idivb
pop
ss
sub
push
andb
icebp
sbb
push
call
mov
push
add
cwtl
mov
outsl
xchg
mov
fdivs
nop
outsl
cmpsl
jl
mov
lret
cmpsl
push
es
pop
or
dec
pop
sub
cmp
stos
xchg
cmc
pop
jecxz
arpl
mov
cld
push
add
out
ret
std
nop
xchg
jb
mov
pusha
mov
push
and
int
inc
or
add
pop
adcl
jnp
or
out
fsubrs
xchg
pushl
fisubs
cmp
and
fistps
jecxz
insl
push
scas
jbe
fsubl
loope
scas
sub
cmp
inc
sub
dec
jne
adc
cwtl
xchg
xor
cmp
int
xor
scas
inc
dec
pop
add
hlt
jle
hlt
push
jb
lcall
insl
test
cld
stos
ret
stos
rclb
sub
adc
call
mov
das
std
push
pop
enter
imul
int3
mov
in
adc
outsl
jae
mov
movsb
orl
fsub
div
fs
jecxz
push
insl
mov
sub
cmp
mov
cltd
pop
leave
or
shrb
or
mov
lods
shrl
mov
shlb
dec
xchg
std
stos
aaa
int3
cmpsl
cmp
sub
int3
sahf
std
int3
mov
xchg
xchg
sar
mov
or
inc
vpopcntd
xor
adc
xor
bound
or
sub
xchg
adc
js
mov
call
xchg
cmp
mov
lds
test
inc
inc
push
mov
fistpll
or
pop
sub
mov
push
adc
pushf
xchg
fadd
movsl
pop
sbb
add
rcl
rclb
daa
out
pop
pop
popf
popl
pop
pop
movsl
push
popa
jg
scas
add
imul
movsb
js
dec
loopne
jno
sub
add
faddl
xor
out
icebp
jle
sahf
xlat
adc
jl
call
mov
es
cmp
enter
mov
rorl
imull
add
lret
mov
xchg
xchg
in
mov
add
dec
sbb
shr
mov
add
xchg
iret
lcall
xchg
icebp
nop
xchg
or
ljmp
xchg
pop
sub
pop
das
sub
out
xchg
jne
and
push
pop
in
push
daa
aaa
cmp
in
xchg
xchg
pop
push
into
sub
xor
xchg
pop
in
out
xor
inc
mov
jp
jne
sbb
out
xor
leave
ds
push
subb
mov
adc
sub
mov
push
sbb
les
loope
xor
loop
push
dec
leave
rcll
arpl
jno
push
jp
xchg
ljmp
aaa
mov
mov
jnp
mov
jno
fidivrl
shrb
push
notl
jae
push
inc
push
cmp
xchg
jae
mov
sub
and
xchg
jmp
mov
push
scas
mov
add
xor
pop
adc
lods
and
and
push
int3
leave
ja
cmp
push
sbb
shl
push
mov
sub
push
stos
je
hlt
sahf
dec
add
ljmp
pop
cmc
mov
jl
ljmp
fstl
lret
lret
loopne
inc
cmp
push
adc
sub
cs
sbb
int3
scas
push
mov
ss
inc
mov
fmull
jecxz
sbb
sbb
cs
inc
test
in
sub
cmp
dec
or
js
xor
out
pushf
inc
pop
out
mov
fs
fiadds
sti
aam
fcompl
sbb
xor
pop
mov
mov
repnz
notl
sub
xor
ja
jae
test
scas
data16
les
pop
pop
fimull
adc
daa
or
test
fmuls
imul
jp
jo
push
lret
in
ja
add
lock
inc
add
xorl
out
je
daa
jns
add
xor
or
int3
jbe
lods
pop
mov
adc
sub
pop
push
push
pushf
les
outsl
in
mov
lcall
fisttpl
std
sub
add
xchg
dec
aaa
mov
es
cmpsl
lret
pop
and
mov
fs
inc
add
and
test
mov
mov
mov
stc
sbb
or
push
push
fwait
adc
out
push
jno
mov
and
adc
xor
outsl
sbb
adc
fwait
xlat
mov
icebp
inc
es
pop
push
pop
mov
sbb
or
mov
cmpb
or
cmp
mov
rcll
aam
and
mov
mov
jbe
adc
lods
fdivrl
xchg
loope
cmpsl
aaa
xor
enter
push
call
cmp
push
lock
into
mov
sarl
test
subb
cmc
sbb
push
dec
or
nop
inc
add
cmpsl
or
and
cmpsl
repz
outsb
pop
stos
sub
add
ret
loop
js
fucomi
pop
lahf
test
mov
mov
sti
jno
push
mov
inc
dec
scas
outsb
aas
addr16
int3
add
mov
sub
rolb
mov
jl
je
cld
pop
test
or
ja
mov
sarb
lcall
mov
mov
ret
cmp
out
add
fimuls
and
addr16
adc
int3
jns
jp
fucomip
sbb
mov
aaa
adc
pop
imul
das
xor
adc
mov
push
lahf
pop
pop
data16
lcall
push
shlb
stc
enter
std
imul
daa
xchg
inc
pop
ds
or
add
notl
popf
lret
popf
pop
arpl
xor
and
sbb
mov
sub
repnz
dec
test
sbb
or
or
sub
imul
mov
in
stos
addl
dec
sbb
add
mov
jbe
sbb
sbb
jecxz
jmp
ror
lret
mov
inc
popf
mov
int
stos
lcall
adc
sub
mov
adc
dec
xchg
int
or
sti
cld
xor
fsub
jns
js
mov
dec
add
pushfw
jg
imul
or
sub
xchg
mov
call
add
add
pop
add
test
in
cmp
popa
pop
orb
push
push
and
jnp
sbb
test
cs
sbb
fstpt
popa
adc
insl
mov
insl
fidivs
xchg
xchg
cli
lea
push
cli
je
ds
shll
xchg
mov
mov
out
inc
push
mov
sbb
xchg
fwait
enter
cmp
fimull
inc
xchg
scas
in
cli
mov
addr16
push
mov
lods
pusha
imul
mov
int
pop
outsb
xor
les
mov
dec
push
push
cwtl
push
cmc
int
inc
testl
in
jne
sti
cmp
dec
lea
xor
sub
mov
push
clc
ror
out
inc
mov
sub
movsl
shll
les
div
rcl
call
dec
adc
pop
lods
dec
ret
lret
imul
imul
int3
sbb
push
dec
int
mov
outsl
inc
add
leave
cld
testb
mov
pop
out
imul
ds
andps
cmc
adc
jmp
daa
in
imul
adc
cmp
and
mov
sub
popf
incl
out
in
jns
push
aam
adc
in
cmpl
sub
pop
decb
push
or
negl
pop
xor
in
movsl
mov
sbb
sub
lock
pop
sub
ret
dec
adc
leave
push
aam
mov
sub
pop
test
dec
mov
in
mov
lds
push
add
inc
jmp
dec
scas
mov
mov
adc
jp
xchg
subl
paddusw
inc
cli
roll
dec
mov
mov
sub
push
notb
adc
lret
cmp
jbe
jle
jle
mov
in
or
aad
test
js
inc
in
idivb
or
fwait
movsb
in
push
xchg
xor
cs
mov
cmp
mov
fsubr
fwait
or
xor
and
test
or
add
jge
sbb
push
adc
mov
adc
add
jo
loopne
pop
xchg
sar
inc
loope
inc
add
pop
lcall
push
mov
je
inc
popf
sahf
xor
pop
ss
movsl
outsl
add
stos
aaa
insl
xchg
inc
aam
and
xchg
jmp
or
pop
dec
jo
jge
push
mov
lcall
outsl
imul
pusha
and
xchg
cwtl
int3
cmpsb
lret
xor
sbb
cmpsb
push
mov
pop
push
iret
pop
mov
pop
outsl
cltd
xor
mov
xor
cmp
pop
aam
jecxz
sbb
in
dec
pusha
xlat
inc
jmp
js
aam
arpl
repz
ret
sbb
sahf
sbb
ds
mov
in
or
jl
insl
xor
mov
and
sbb
test
push
mov
inc
and
mov
jmp
add
push
push
lods
rclb
pushf
aad
mov
pop
adc
inc
xlat
les
pop
jne
xorb
pusha
cltd
dec
movsb
sbb
and
or
jp
xor
pop
dec
push
mov
mov
shrb
mov
or
outsl
outsl
cmc
jo
xor
push
mov
mov
pop
xchg
test
dec
add
pushf
xor
jno
pop
callw
inc
test
stos
and
xchg
inc
dec
sub
jmp
xchg
cltd
push
in
loope
sti
lahf
push
stos
xchg
daa
dec
push
mov
add
scas
jnp
pop
xchg
push
and
addr16
clc
xor
filds
in
gs
mov
adc
cmc
xchg
push
arpl
subl
rcl
inc
xor
jge
or
loopne
or
xchg
ja
stos
lods
out
scas
divl
xor
insw
pop
cmc
test
ds
add
jb
jne
neg
sub
sub
pop
mov
xor
out
int
in
fsts
cwtl
test
inc
add
notb
pop
fstpl
or
xor
xor
enter
scas
aad
in
hlt
sbb
pop
aaa
xchg
sub
or
mov
pop
enter
inc
outsl
mov
push
lods
sub
mov
outsl
jl
mov
addr16
hlt
sub
arpl
aam
in
sahf
mul
or
stos
es
pop
in
pushf
scas
jg
ljmp
into
cltd
pop
xchg
or
xchg
push
mov
xchg
jecxz
insl
xor
das
mov
xchg
xchg
loop
shr
imul
pop
xor
pop
push
mov
adc
insb
js
nop
cmp
in
fildl
push
ss
inc
out
imul
jnp
sub
out
popa
jle
pop
mov
xor
mov
jge
cltd
stos
mov
cltd
jne
sbb
jmp
movsb
addr16
dec
and
mov
pop
rolb
cmp
adc
shlb
aaa
test
ret
mov
ss
dec
sbb
scas
orb
push
imul
mov
inc
jle
rcll
adc
cmpsl
fwait
cmpsl
add
and
mov
andb
jbe
in
icebp
ds
arpl
push
mov
sbb
scas
imul
pop
stc
loop
imul
repnz
repnz
scas
bound
add
dec
aad
out
jmp
scas
shlb
loope
inc
push
dec
mov
addr16
popf
lcall
pop
jo
push
rolb
or
lret
sbbb
sub
push
jmp
xor
rcrb
or
mov
loop
and
mov
pop
mov
out
jns
ret
cli
sub
loopne
stos
sbb
inc
adc
mov
mov
hlt
stc
cwtl
xchg
movsl
push
in
fsubs
ss
subb
std
imull
dec
pusha
xchg
xchg
xor
sbb
mov
cmp
mov
stos
repnz
adc
mov
sbb
mov
dec
jbe
push
fcomps
ljmp
dec
addr16
lods
subl
mov
xchg
clc
jecxz
leave
lret
sub
push
jp
lret
lea
sbb
ret
shl
jbe
jmp
cmp
and
inc
xor
ret
and
popa
cltd
inc
pop
sti
xchg
shrw
scas
stos
imul
jnp
mov
mov
push
arpl
cwtl
leave
push
mov
pop
pop
aam
out
cmp
cmp
hlt
xlat
shrl
pop
mov
jle
sahf
scas
xorl
add
jne
in
push
loopne
jmp
mov
bound
add
into
decl
sbb
out
jae
lds
inc
fdivrs
inc
jmp
bound
mov
cltd
cmp
mov
movsl
jge
divb
iret
pop
mov
sub
addl
sbb
outsb
pop
ja
call
xchg
clc
loopne
sahf
pop
lcall
out
dec
lods
orb
cs
cld
div
xchg
es
pop
sbb
mov
fs
outsb
scas
sbb
mov
pop
push
mov
jae
add
lods
popa
fwait
ds
fsts
jae
lcall
hlt
and
hlt
jno
fsubs
cmp
movsl
push
dec
fwait
pop
sub
mov
mov
cwtl
mov
or
mov
in
sub
xor
dec
ljmp
or
cs
test
pop
sarl
push
jg
mov
repz
aas
shll
insl
dec
mov
loope
adc
bound
add
lea
push
dec
hlt
mov
add
xchg
sahf
inc
mov
aam
mov
jb
lret
xchg
gs
rcrl
movsb
pop
jno
or
ja
lock
orl
mov
mov
in
out
pushl
sbb
loope
aad
sub
dec
mov
dec
leave
cmpsl
scas
sub
dec
ficoms
fistpl
sub
push
scas
daa
aaa
inc
pop
in
vpmuludq
sti
out
test
push
adc
mov
pop
cmc
jl
inc
ss
jno
popa
pop
add
arpl
faddl
ljmp
inc
pop
xor
xor
cwtl
push
je
les
aam
mov
gs
mov
add
mov
jno
movd
bound
iret
leave
push
fnstenv
insl
jl
enter
sbb
dec
dec
dec
mull
xor
mov
shl
fsubrs
sbb
hlt
inc
jle
and
out
xadd
mov
mov
stos
push
pop
bound
dec
popf
mov
xchg
xchg
test
les
in
mov
jns
pusha
or
xorl
mov
adc
out
repz
xchg
adc
jle
pop
shlb
pop
and
cmp
pop
mov
loop
lea
std
lcall
pushf
or
pop
cwtl
inc
mov
mov
fmull
loope
sub
insl
xchg
and
sub
outsl
sbb
mov
mov
adc
dec
mov
sbb
sbb
repnz
xor
and
cmpb
jb
jl
inc
jp
xchg
jnp
dec
mov
pop
popf
popf
mov
adc
dec
mov
cmc
icebp
fcoms
sub
insb
fisttps
stos
xor
movsl
push
xchg
jnp
arpl
adc
mov
push
or
int3
sub
pop
fs
sbb
fwait
mov
bound
mov
jecxz
pop
js
adc
addr16
pminsw
jp
hlt
repz
mov
push
leave
jp
enter
and
xchg
or
mov
popa
shlb
mov
add
dec
pop
push
aam
jbe
dec
push
pop
cmpsl
add
popa
lds
inc
xor
loop
rcl
xchg
sub
data16
cltd
push
into
gs
rclb
adc
inc
xchg
or
sahf
lahf
inc
cmc
or
or
out
in
lock
call
mov
pop
rol
loopne
aad
psubsw
stos
pop
dec
ja
or
push
dec
lret
aam
in
xchg
enter
or
cmp
xor
mov
inc
xor
pop
les
mov
pop
dec
fptan
and
inc
outsl
adc
js
mov
dec
dec
test
std
aaa
cmp
adc
mov
or
or
aaa
int
mov
je
loopne
in
lahf
les
popf
mov
movsb
and
jecxz
in
pop
testl
bound
dec
out
add
notl
clc
mov
lods
test
sub
pop
mov
pop
imul
sti
inc
lock
xchg
cmpsl
and
mov
xchg
sbb
jecxz
gs
cli
dec
mov
sbb
test
dec
mov
pushf
push
jo
xchg
in
dec
mov
jg
inc
jne
jg
gs
inc
pop
pop
jo
testl
gs
mov
scas
mov
pusha
hlt
sub
adc
gs
popa
inc
int
lcall
jl
push
ja
and
and
cmp
adc
xchg
lods
mov
inc
xchg
pop
adc
lret
out
lcall
pop
push
pop
js
inc
push
leave
test
ret
dec
mov
mov
add
cwtl
lea
push
or
arpl
mov
jno
call
outsl
push
sub
fistpl
push
ljmp
push
jmp
adc
push
push
xor
lods
imul
xor
jl
mov
int
daa
loopne
xchg
pop
push
push
outsl
fnstenv
rorl
push
jecxz
xchg
xchg
xchg
cli
sbb
dec
cmp
push
push
jns
fwait
lret
inc
sti
sbb
or
dec
and
fnstsw
mov
lret
jo
aam
dec
inc
or
pop
pop
mov
rolb
inc
jmp
mov
ret
sbb
daa
in
out
xchg
xchg
stos
sbb
inc
dec
jecxz
and
movsb
repz
fadd
xchg
subb
jno
push
es
ffree
pop
sub
cwtl
inc
pusha
dec
dec
lret
mov
mov
roll
or
popa
shlb
rcr
mov
ficoms
mov
fyl2xp1
or
dec
lret
push
fistpll
mov
lcall
sbb
scas
test
rcrb
inc
jae
xchg
sub
popf
imul
adcl
jg
fsubrp
mov
subb
mov
pop
xlat
mov
or
ljmp
or
aam
mov
popa
mov
cmc
push
jns
jae
mov
mov
fcoml
mov
inc
loop,pt
mov
cmpsl
jecxz
std
xor
cmpl
lcall
xor
jge
push
pop
int3
and
mov
push
test
repz
push
mull
jl
mov
xor
fcompl
stos
push
pop
sub
dec
ret
imul
sub
cmp
daa
jae
jae
int3
mov
test
dec
xchg
lcall
movsl
es
mov
xchg
pop
out
sub
out
mov
out
or
pop
andb
or
and
add
popf
mov
add
mov
popf
xchg
pop
leave
jo
jnp
mov
cmp
in
cmpsb
dec
cltd
mov
or
imul
in
cmp
push
imul
lea
mov
shl
xor
je
mov
js
add
imul
pop
push
addr16
push
push
fwait
adc
sbb
pop
and
sbb
jo
xchg
push
dec
xor
pop
xchg
sbb
daa
jp
jo
das
and
daa
std
sahf
add
cmp
mov
out
or
rolb
imul
mov
push
jle
or
xchg
add
xchg
int
dec
adcl
jno
push
push
lock
pop
fld
out
or
ja
sub
stos
sub
mov
xchg
insb
ficoml
jns
xchg
pop
xchg
add
mov
xor
push
inc
cmp
int3
iret
cmpsl
adc
mov
lods
and
loopne
enter
insl
insb
andb
and
cmp
xchg
adc
xor
out
mov
or
in
inc
cli
in
push
in
mov
sub
adc
insb
ljmp
xor
sub
pop
fs
in
or
mov
xor
or
add
mov
add
aas
xchg
dec
sbb
js
pop
xor
flds
cmp
xchg
int
xchg
popf
out
mov
into
ficompl
and
inc
sub
int
movsb
aad
xor
popa
dec
push
push
adc
mov
iret
fstl
xchg
repz
jge
xchg
call
or
out
in
sub
jl
push
push
aaa
lcall
push
pop
push
dec
inc
lock
mov
mov
dec
outsl
daa
add
push
lods
jg
iret
call
std
data16
xchg
dec
and
lcall
jge
inc
bound
insb
sub
jl
sub
or
call
cld
adcl
clc
dec
push
cld
xor
lea
push
jnp
mov
lret
mov
test
sub
sbb
int3
mov
mov
mov
les
mov
push
fwait
int3
xor
aas
orb
shrl
in
ja
mov
jns
adcl
lret
add
add
dec
rol
cwtl
addr16
mov
push
lret
aad
mov
je
push
addl
pop
push
rcrl
scas
insb
push
cmp
pop
lock
aad
sub
fs
mov
sbb
sbb
cltd
and
into
fsub
clc
xchg
sbbl
addr16
scas
jmp
sub
xchg
outsb
pop
mov
loopne
imul
inc
sbb
js
mov
jne
loop
psadbw
dec
ss
int3
push
xor
pop
and
inc
fcomip
mov
xchg
fsubs
orb
in
inc
shlb
mov
aam
mov
test
pop
push
adc
cmp
push
lock
sbb
movsl
jnp
pop
mov
mov
out
add
jecxz
jmp
test
popa
imul
cmc
sub
xchg
xchg
ds
dec
mov
and
jae
sti
jno
rolb
sub
or
jbe
mov
and
pushf
xchg
shlb
adc
xor
mov
sub
add
jmp
mov
cmp
ja
sbb
cld
inc
aaa
test
xchg
pop
fs
pusha
in
es
je
out
out
mov
or
jae
dec
das
aaa
jge
push
and
mov
mov
dec
push
xor
mov
gs
stos
sbb
leave
sbb
cmp
mov
push
js
push
out
dec
das
adc
aaa
nop
dec
imul
iret
shrb
sub
and
js
jne
jae
es
sub
pusha
roll
into
pop
xor
or
mov
jno
stc
out
sarb
aam
aaa
je
inc
mov
loopne
not
sub
xchg
mov
mov
xor
inc
inc
je
push
shr
lock
mov
cmp
mov
out
data16
punpckhwd
iret
push
jne
jg
mov
fstpl
mov
clc
scas
in
lods
jbe
push
jle
or
dec
decl
dec
mov
imul
in
adc
push
mov
jae
fistl
out
push
lods
fs
mov
out
fs
jbe
xor
jmp
cmp
pop
push
imul
mov
lcall
repz
jne
add
and
add
stc
cmp
loopne
insl
add
xor
push
jb
cmp
xchg
fisttpl
aas
pop
jg
add
arpl
loopne
dec
aas
jno
mov
xorb
cmp
js
or
mov
push
lds
xchg
inc
push
xchg
xorl
jne
push
jbe
and
dec
sub
jge
push
imul
ljmp
mov
out
mov
cmp
aas
adc
lret
lcall
popa
or
cmp
mov
cmp
jb
sbb
mov
fwait
xor
jbe
fwait
adc
cmp
aam
sahf
mov
ja
inc
sub
xor
and
or
mov
cmp
jbe
xchg
xor
sti
xchg
idivb
or
or
roll
movsb
xor
cmp
lret
fildl
dec
fsubrl
test
push
cmp
fs
ds
or
loope
push
mov
cwtl
inc
inc
mov
test
fildl
lock
iret
and
add
inc
jb
inc
fucomp
je
mov
mov
into
push
xor
mov
jecxz
in
repz
lret
jge
and
hlt
inc
sbb
out
sub
sub
arpl
pop
ss
pop
mov
fs
adc
rcll
mov
push
rcrl
push
push
iret
pop
mov
ret
mov
sub
and
cmp
lds
leave
sbb
add
shll
enter
inc
pop
in
xchg
or
adc
leave
lret
xchg
mov
rorl
add
add
dec
gs
adc
movsl
cmc
fdivrl
inc
call
fisubl
mov
fimuls
add
pop
add
nop
jae
mov
out
add
rorl
mov
jnp
scas
cmp
sub
mov
into
sbb
mov
loope
shl
push
fwait
gs
daa
xchg
sahf
adc
push
lcall
mov
inc
es
or
insl
jl
mov
lods
mov
movsl
hlt
mov
pop
out
in
push
cli
outsb
dec
lock
lret
call
pop
loop
mov
scas
jns
adc
cmp
push
push
cmpsl
mov
out
sarl
rcrl
add
arpl
out
imul
push
push
mov
adcl
ljmp
js
popa
mov
jmp
in
or
test
lahf
lods
movsl
pop
mov
inc
push
pop
psrad
loopne
xchg
adc
int3
aas
popa
jae
cld
xor
sub
sub
out
lea
xor
lods
dec
and
sbb
frstor
inc
push
mov
ds
arpl
xchg
inc
jb
nop
call
xchg
cmc
leave
jle
lret
lahf
mov
inc
scas
and
dec
jo
add
lahf
out
sub
in
add
push
test
lds
xchg
sub
inc
jg
xchg
nop
inc
xchg
hlt
mov
jmp
lret
dec
arpl
and
std
mov
fwait
cwtl
jle
sub
enter
mov
mov
mov
cmp
mov
adc
cmp
xor
ds
push
adc
xchg
insl
or
pop
mov
xchg
lea
notl
iret
inc
xchg
push
cli
ss
and
dec
je
xor
imul
cli
push
and
iret
mov
es
lcall
mov
cmc
not
xchg
inc
jbe
inc
fidivs
sub
mov
or
and
pop
int3
adcb
outsb
nop
je
sub
jle
or
or
jno
imull
fs
xchg
push
cmp
ljmp
pop
clc
outsb
push
cltd
in
arpl
add
cmpsb
jae
pop
icebp
std
ret
sti
inc
push
cmpl
repnz
aam
cld
js
jmp
xor
mov
test
stos
and
mov
orl
js
pop
sbb
out
adc
adc
mov
pop
sbb
cwtl
xor
xchg
lock
pop
pusha
clc
and
sbb
dec
or
jp
sub
xlat
mov
mov
add
pop
push
adc
sub
lahf
cmpsb
stos
das
les
add
xor
and
es
jle
inc
aas
inc
jns
mov
xlat
add
icebp
and
bswap
outsb
inc
adc
fcoml
arpl
jns
andb
lahf
js
inc
xchg
xchg
ss
fldenv
mov
mov
jae
sbb
mov
into
adc
arpl
xchg
ss
clc
mov
jo
leave
push
lods
mov
mov
out
sub
mov
loope
mov
sub
pop
mov
pop
pop
xchg
popf
and
mov
call
out
jle
dec
or
mov
cmp
rcll
mov
hlt
mov
rclb
push
sar
scas
pop
jmp
mov
mov
jg
lret
xor
fadds
adc
xchg
jp
mov
lea
xorb
jae
lea
jg
fists
dec
test
mov
mov
jle
xchg
or
push
adc
mov
sti
sub
pop
repz
rcl
bound
js
int
jmp
fwait
add
scas
mul
int
out
ret
das
xchg
mov
addb
dec
lods
orb
and
push
mov
xor
enter
push
xor
dec
jecxz
out
insl
inc
mov
or
enter
mov
sbb
notb
mov
std
loope
dec
std
push
cmpsl
adc
ret
push
jmp
jbe
adc
jle
jbe
xchg
or
push
nop
dec
mov
adc
jecxz
jns
push
sbb
aad
lods
fidivrs
into
call
rcrl
aad
in
into
or
dec
lds
pop
mov
call
lahf
out
cmc
pop
hlt
xor
adc
fistpl
adc
adc
rorb
cltd
nop
push
xchg
fmuls
inc
ret
mov
ja
xchg
jp
addr16
stos
push
shlb
into
jp
test
dec
into
movsl
dec
sub
lahf
mov
jo
push
sbb
imul
or
ljmp
daa
test
jne
jno
inc
pop
std
mov
dec
lock
mov
push
inc
fdivrl
data16
mov
mov
mov
les
adc
dec
dec
insl
lcall
jbe
xchg
mov
or
shrl
jle
and
inc
stos
nop
mov
push
push
inc
sub
mov
cmp
and
testb
iret
jecxz
aam
xchg
cmp
mov
fwait
sarb
lcall
lea
cmp
xchg
leave
dec
jp
mov
fwait
test
cmc
js
cs
in
shrl
lcall
mov
pop
in
call
dec
das
sbb
xchg
push
paddusw
add
lret
cmpsb
cmp
push
mov
cmp
cld
xlat
daa
loopne
and
test
shlb
add
clc
mov
mov
push
sub
mov
repnz
mov
or
lret
and
push
lea
repnz
arpl
jle
adc
or
pusha
mov
mov
cltd
loopne
adc
rcll
imul
cmp
and
daa
dec
test
lret
je
lds
pop
loopne
jge
js
inc
pop
frstor
mov
arpl
insb
fsubs
pop
fwait
mov
repz
addr16
mov
stos
aad
sbb
loope
jo
es
stc
jns
push
xor
sbb
inc
lahf
addr16
enter
fstps
lahf
xor
mov
push
dec
or
xor
jle
xchg
sub
jmp
jno
sub
daa
xchg
sub
dec
fadd
xor
mov
lcall
and
mov
imul
inc
imul
in
jnp
inc
push
ret
xchg
sub
dec
inc
jge
sbb
jp
mov
mov
sbb
sbb
bound
mov
or
jg
mov
and
sbb
dec
sbb
cltd
pop
and
jns
push
mov
and
jmp
andl
sbbb
fistps
out
movl
movsl
sbb
mov
ja
jge
push
repnz
xchg
icebp
pop
rcrb
xor
xchg
jns
roll
jl
aam
jmp
daa
adc
mov
jbe
pushf
mov
lahf
cmp
lahf
mov
mov
imul
push
fbstp
jns
pop
movsl
inc
jle
int3
or
xor
adc
xor
or
iret
push
and
and
jb
outsl
test
movl
jnp
inc
mov
adc
xlat
inc
sub
ss
gs
out
ljmp
push
add
sahf
fidivrs
js
stc
test
cmp
inc
xchg
scas
xchg
ror
mov
aam
push
pop
pop
bound
es
inc
sub
fldl
inc
cmp
dec
fs
pop
popf
jmp
inc
jb
push
inc
das
loope
sub
mov
dec
sub
je
mov
mov
cli
push
fdivl
pop
xorl
je
je
div
jbe
and
push
mov
mov
adc
insb
shll
orb
mov
andnps
in
je
dec
cmp
push
aas
loop
lret
mov
enter
jns
cmp
insl
mov
ret
cmp
decb
mov
dec
cmp
mov
fsubrl
xlat
xor
cwtl
je
lds
dec
xor
inc
sbb
jecxz
ds
push
outsb
lock
iret
das
add
aaa
xchg
add
and
ror
test
and
add
call
insl
push
jnp
adc
push
inc
clc
pop
das
jmp
movsl
mov
push
xchg
push
pop
mov
notb
movsl
aam
cmp
push
loope
int
jle
mov
push
lods
jns
icebp
cmp
inc
push
not
in
loop
mov
aam
dec
jecxz
lahf
imul
mov
mov
icebp
jbe
dec
outsb
cmp
cmp
mov
dec
ficompl
fidivs
int
jnp
xchg
mov
insb
sub
int3
hlt
push
sub
jae
loope
mov
cmp
mov
lock
add
sub
jl
aad
stc
cltd
xchg
lea
and
xchg
inc
lret
dec
pop
jg
cmp
sub
pop
les
and
adc
popf
out
rorb
cmpb
dec
xor
dec
xor
jb
lods
push
andl
lds
add
adc
cmp
dec
push
xchg
aam
and
add
inc
push
es
and
push
mov
insb
jo
mov
xchg
mov
cmp
outsl
leave
dec
leave
xchg
cmp
xchg
dec
jne
xor
shl
push
cmp
or
add
cltd
clc
push
mov
in
inc
add
adc
sbb
adc
divb
mov
lea
cltd
outsb
xchg
pushl
mov
inc
ret
icebp
dec
fmulp
adc
inc
pop
shrl
mov
ss
mov
inc
adc
dec
sub
sbb
aaa
push
clc
pop
gs
mov
in
jl
notl
adc
int
mov
test
shll
lret
dec
sbb
es
lahf
das
in
js
sbb
lcall
out
sbb
push
stos
ss
dec
jns
cmp
pushf
jo
sbb
jg
xchg
into
jge
mov
loope
and
adc
jne
pop
mov
cmpsl
das
adc
shr
cmp
cmpsl
pop
loope
dec
in
ret
sbb
repnz
mov
jbe
or
cld
inc
je
das
jne
out
mov
push
push
sbb
cmpsb
ret
iret
pop
sbb
fisubrs
aaa
mov
pop
in
mov
xor
dec
fidivs
mov
sbb
call
lcall
or
adc
lock
lock
out
mov
ret
loopne
test
mov
xor
je
adc
js
fcompl
ret
sbb
pop
xor
sub
push
mov
fcomps
push
xor
lea
pushf
aas
mov
sbb
je
loope
adc
std
mov
icebp
iret
std
dec
test
negl
loopne
enter
adc
mov
adc
mov
cmc
mov
push
cmpsb
push
iret
adc
imulb
sbb
or
in
inc
mov
shlb
test
cltd
fdivl
icebp
pop
mov
cld
in
push
stc
push
popa
movsl
fidivrs
ffreep
add
sbb
pusha
iret
ljmp
xlat
or
pop
push
daa
bound
inc
pop
mov
push
js
sbb
lret
inc
sahf
rcll
int3
inc
outsl
jp
inc
lret
jmp
push
arpl
mov
fdivrl
mov
push
fstps
lahf
and
xchg
sbb
sar
mov
mov
add
lds
sub
cs
lods
int
scas
add
dec
in
dec
dec
ljmp
dec
loop
jp
inc
cmpsl
scas
push
loop
loopne
pushf
lahf
pop
repnz
xor
test
pop
outsl
loop
xchg
adc
or
jnp
popa
dec
fldl
sbb
xchg
lods
aam
hlt
lret
mov
test
jae
sbb
in
adc
inc
mov
mov
inc
sub
divb
js
aam
int3
adc
xchg
pushf
adc
pop
sbb
and
xchg
test
outsb
mov
gs
jns
mov
pop
ss
fnstcw
pop
xor
cli
inc
rorb
mov
push
pop
aad
mov
iret
int
dec
push
rolb
dec
sbb
out
arpl
and
movsb
scas
mov
jo
fcoml
inc
adc
mov
roll
or
mov
dec
cmp
aaa
fsubr
aad
inc
sub
sbb
xor
push
ds
xor
test
and
movsl
shlb
aas
scas
fnstsw
jg
in
pop
mov
jecxz
stos
fdivr
cmpsb
into
aad
inc
fwait
shl
push
jbe
fisubs
sbb
out
fcomps
out
cmp
call
or
and
xor
pop
jbe
mov
cmc
dec
mov
adc
push
lea
or
or
pop
cmp
ror
int
subl
test
fcoms
xor
mov
lret
mov
add
ss
mov
cs
loop
and
cmp
ss
pusha
mov
jae
mov
pop
sbb
fucomi
daa
add
out
cmp
add
mov
and
jge
adc
mov
inc
cld
cs
pusha
sar
lods
in
sbb
pop
mov
sbb
inc
jg
inc
inc
icebp
add
add
in
lret
in
jmp
sbb
idivl
inc
roll
mov
in
jae
stos
pop
add
scas
cmpsb
jmp
pop
in
cmp
push
pop
fcoml
loope
loopne
or
scas
cmpsl
adc
cmp
jl
adc
out
dec
int3
push
mov
gs
rcr
scas
aas
mov
dec
aaa
je
pop
cmpsb
lods
pop
add
mov
mov
fidivrl
fidivl
dec
pop
scas
xchg
cmp
pop
jb
xchg
adc
push
xchg
cmpsl
fstpt
sub
xchg
lods
pop
fcomp
add
fwait
adc
fstl
out
inc
fisubl
pop
out
push
in
mov
movsl
sub
dec
jo
into
dec
fwait
jns
mov
std
in
add
and
pop
popa
and
sub
push
and
inc
ror
push
dec
jnp
push
sub
mov
add
dec
adc
ficomps
lret
loop
mov
pop
leave
loope
ljmp
pop
lcall
xor
arpl
fbstp
dec
add
mov
dec
mov
mov
ds
sbbl
mov
stos
iret
pop
or
div
mov
push
sahf
inc
imul
int
add
sbbb
fbld
cmp
fdivr
mov
jmp
push
idivl
sarb
sbb
mov
jae
dec
or
data16
xor
dec
push
xchg
iret
mov
cmp
fcomps
and
mov
and
mov
cmp
sar
sub
imul
loopne
cmpsb
push
xor
mov
pop
iret
jle
inc
jns
xchg
subb
out
mov
push
mov
mov
pushf
aad
sbb
addr16
test
xchg
adc
or
sub
sarb
pop
enter
dec
and
data16
mov
lahf
jne
inc
adc
cmpsl
sub
cli
ds
test
cltd
in
cmp
pop
mov
adc
roll
test
pusha
imul
mov
or
sbb
or
pop
mov
sahf
arpl
mov
pmaxsw
sub
lods
dec
in
xchg
pop
fstpt
ss
xor
movsl
xchg
jmp
push
push
xor
ss
mov
das
jp
popf
mov
mov
out
mov
lcall
aaa
adc
in
xchg
jecxz
sahf
jle
add
notl
loope
or
jbe
call
dec
or
insl
fldenv
xchg
dec
lahf
mov
jae
jne
adc
dec
pusha
xchg
xor
mov
outsb
xchg
arpl
xor
lret
dec
mov
jge
or
inc
nop
inc
stos
mov
sahf
aad
or
or
xlat
mov
loopne
jno
clc
mov
xchg
xchg
out
cmp
sub
inc
or
lcall
into
repnz
inc
ret
out
hlt
cmpsl
insl
out
mov
push
or
popf
cmp
mov
mov
push
in
pusha
pop
aam
lahf
dec
mov
fwait
pop
and
xor
mov
xchg
jg
pop
loope
sbb
bound
cld
bound
xchg
mov
pop
jge
adc
orb
inc
inc
andl
ret
pop
mov
repz
pop
shrd
mov
test
jnp
ds
pop
icebp
jg
fstpt
call
mov
mov
mov
jle
xchg
imul
jb
arpl
mov
pushf
push
cmp
lcall
dec
dec
lds
loopne
push
jo
push
jl
cmp
insb
or
shl
mov
or
lods
loope
sub
lods
nopl
sbb
nop
pop
test
jg
xchg
push
lods
imul
pop
ja
arpl
fldcw
push
gs
inc
mov
sbb
push
mov
ss
popa
adc
aaa
and
lcall
or
cs
push
inc
pop
mov
in
add
cmpsl
pusha
cmp
imul
jle
mov
pop
les
notb
cmc
xor
arpl
mov
adc
mov
push
test
jno
mov
aaa
sbbl
stos
movsb
mov
fwait
sbb
fisttpll
xor
mov
push
stc
dec
push
roll
jmp
jge
or
add
xchg
imul
punpckhbw
in
lahf
inc
mov
imul
xchg
xchg
pop
mov
enter
sahf
loope
mov
push
cmp
jmp
lock
out
xchg
pusha
dec
into
add
cltd
xchg
mov
xlat
xchg
jae
mov
test
in
adcl
lcall
adc
hlt
mov
push
std
ljmp
clc
ljmp
cmp
iret
dec
xchg
sarl
enter
sbb
sbb
jns
xor
idivl
inc
outsl
cltd
jno
mov
dec
or
dec
sbb
and
shlb
ds
sub
call
mov
rolb
mov
in
adc
fldenv
adc
ljmp
xchg
pushf
jbe
push
adc
stc
dec
xchg
mov
mov
lods
cltd
jnp
push
adc
hlt
mov
jns
lods
cmc
ss
loope,pt
cmp
push
xor
jmp
aad
ss
jb
push
cmc
sub
mov
mov
dec
lods
cmp
mov
pop
xchg
xor
lds
bound
mov
fcomp
or
aas
push
lfs
aaa
pop
jbe
sti
js
xor
push
arpl
loop
out
fists
mov
pop
jecxz
dec
int3
jbe
filds
adc
fcompl
or
adc
pushl
cmc
xor
jbe
lock
cmpsb
mov
jno
sub
sub
fildl
push
and
sbb
pop
sti
insb
icebp
shrb
clc
cmpsl
xor
stos
cmp
xchg
jo
add
pop
mov
jns
fcmovnb
test
pushf
mov
nop
lods
int3
ds
or
lret
sbb
jp
or
hlt
icebp
jg
je
pop
mov
and
aam
xchg
xor
ret
jb
jge
lods
sbb
jg
in
dec
mov
add
je
insl
aad
xor
xor
lahf
xor
lret
cmp
outsl
dec
and
pop
es
mov
cmpsl
add
or
sub
sbb
and
aam
jb
xchg
add
or
das
mov
push
xor
mov
call
imul
mov
push
inc
adc
mov
sub
push
adc
mov
aad
jge
lret
cld
pop
sbb
adc
mov
nop
iret
mov
jno
dec
js
nop
add
cmp
out
arpl
lea
mov
pop
sbbl
nop
imul
stc
in
fdivl
and
lcall
fadds
add
push
adc
dec
cmp
cltd
sub
cmp
ret
dec
sub
pop
xchg
add
mov
xchg
add
jge
add
aaa
movsb
daa
les
test
pushf
rcl
jae
xchg
inc
xor
xlat
push
arpl
sub
rorl
jmp
mov
popa
adc
mov
inc
aad
inc
aas
push
cmp
pop
cmp
push
mov
xchg
popf
jo
or
rolb
inc
cltd
push
dec
push
xchg
adc
xor
push
adc
or
lcall
xchg
mov
lcall
aaa
xor
mov
cmp
xor
mov
mov
xlat
stc
icebp
push
add
repz
adc
mov
jecxz
fwait
fs
jmp
gs
add
push
out
jb
test
ljmp
push
outsb
es
ret
jg
inc
cmc
out
xchg
imull
fsubp
outsb
aad
inc
jle
xchg
add
adc
mov
and
mov
das
mov
cmp
inc
sti
add
xor
lods
into
insl
xor
add
push
popf
inc
mov
or
xchg
sarb
and
shrl
add
cmp
add
pop
fistl
cmp
bound
mov
out
in
sbb
xchg
stos
mov
lods
mov
jl
xchg
test
jae
mov
gs
lahf
xchg
jnp
icebp
gs
mov
dec
add
inc
adc
dec
insl
jmp
iret
push
mov
xor
mov
push
sub
sbb
and
ss
push
xchg
sub
jne
and
in
inc
dec
and
outsb
in
or
cwtl
inc
adc
mov
add
mov
xor
pop
inc
push
and
push
cld
movsl
bound
mov
pop
mov
aad
push
scas
loop
pop
in
push
in
mov
aas
pop
push
fisubrl
les
test
ja
sti
pop
dec
rorl
out
aad
lcall
es
shll
test
inc
leave
xlat
sub
das
enter
or
pop
xor
sarl
mov
cli
movsb
in
fwait
dec
outsl
pop
mov
in
loop
mov
clc
sub
adc
pop
nop
lds
mov
add
mov
call
xchg
dec
arpl
cmc
in
dec
lods
data16
jmp
pusha
cmp
xchg
or
or
xchg
mov
sub
cli
out
jg
sub
cli
ficoms
xor
scas
pushf
pop
lods
mov
pop
stos
imulb
cltd
movsl
sar
sbb
push
pusha
push
sbb
xchg
cmp
add
cs
cli
je
xor
int3
jg
sub
dec
mov
test
mov
mov
xchg
jmp
insl
jne
orl
pop
cs
jnp
or
movsl
inc
mov
icebp
lock
outsb
ret
ret
inc
sbb
inc
sbb
rolb
cld
stos
pop
rol
gs
lret
mov
add
mov
lcall
cmpsb
leave
and
mov
adc
aaa
mov
jno
outsl
pop
out
out
stos
ds
out
xchg
std
imul
clc
lods
jmp
xor
ret
add
cwtl
add
sbb
arpl
fmull
test
jmp
fimuls
popf
jbe
push
movsb
cltd
es
xchg
add
ss
je
inc
and
ds
push
mov
pop
mov
push
xor
add
cmpsl
sbb
test
dec
xor
push
daa
in
addr16
rcrb
das
mov
gs
inc
jno
loopne
jbe
push
ss
pop
xor
sbb
push
out
cmpsb
aas
cmp
mov
push
and
lds
add
mov
idiv
aaa
pop
dec
mov
stos
je
std
xchg
loop
and
lea
lock
hlt
cmp
lret
mov
stc
in
fldcw
xor
mov
xchg
stc
xchg
mov
pcmpgtb
vucomisd
inc
mov
mov
mov
jecxz
or
mov
jg
inc
sbb
loope
jge
les
inc
imul
idiv
fadds
mov
and
mov
or
aad
enter
pop
pop
arpl
aas
xchg
cmc
sahf
xlat
push
addl
pop
or
xchg
jg
jns
adc
dec
add
sub
cmp
jge
popa
inc
xchg
jne
dec
das
jns
test
fsubs
dec
xchg
insl
push
sub
in
push
shrl
mov
push
adc
adc
enter
pop
or
mov
mov
push
aas
int
dec
aam
lea
sub
stc
idivl
movsb
test
adc
jb
jle
cmpsb
mov
cmp
std
sbb
out
push
ja
lods
cmpsb
mov
jmp
push
mov
flds
dec
jnp
xor
fmul
cltd
add
out
hlt
pop
rep
push
pop
aas
lret
sti
sub
mov
popf
and
and
push
sub
paddusw
cmpsb
sti
jb
fildl
add
and
aam
and
add
push
ret
sub
cmp
mov
insl
jge
jb
enter
fcoms
push
mov
lret
mov
or
adc
cmpsl
data16
ficoml
ljmp
pop
aam
xlat
and
pusha
lea
and
add
and
popa
push
enter
int
fistpll
incl
dec
mov
nop
scas
rcl
adcl
push
pop
sar
jb
jg
enter
rcrl
lret
leave
int
sbb
jmp
cld
call
inc
dec
out
sahf
xor
and
xchg
xchg
mov
pop
jne
mov
jl
flds
ljmp
xchg
addr16
cwtl
cltd
inc
clc
mov
adc
adc
xlat
sbb
jb
ret
out
or
push
pop
mov
or
jae
fcoms
ss
pop
addr16
fsts
cs
mov
adc
test
aas
or
outsb
int3
mov
call
outsb
ja
hlt
movsl
nop
fdivp
cltd
sbb
xchg
mov
jbe
and
push
jge
test
rcll
cmp
xchg
inc
in
inc
mov
cld
add
ret
fnstsw
lcall
xor
lea
mov
mov
mul
jns
mov
mov
adc
inc
xor
push
gs
add
into
mov
or
xchg
and
jmp
cmp
xor
cmpsl
les
or
push
jno
dec
adc
add
jbe
xchg
jbe
mov
adc
stc
pop
and
insl
mov
lds
ds
sub
mov
ds
mov
push
sub
and
dec
shrb
sub
jle
repnz
cwtl
cltd
or
jle
dec
outsb
into
mov
xorb
jecxz
out
popa
push
cmp
jp
enter
sub
dec
ss
lahf
cmp
xor
dec
pop
xor
arpl
and
ja
sub
ret
pop
xchg
mov
mov
lahf
std
loope
cmp
cmp
xor
adc
xor
and
push
in
pop
ljmp
divb
movsb
jmp
in
add
mov
xchg
aam
jnp
cmpsb
lcall
in
cmc
and
jge
xor
fadds
insb
mov
inc
fcomps
pop
mov
stos
lock
xor
xorl
push
adc
dec
add
lret
mov
enter
lock
xchg
mov
outsl
pop
sbb
xchg
leave
xchg
jmp
pop
aas
in
aam
cltd
mov
push
xchg
push
in
dec
fldcw
decl
xor
jmp
or
pop
xchg
das
inc
jg
push
movsb
gs
mov
ret
or
xor
enter
stos
xor
push
inc
add
jmp
sbb
add
popf
dec
repnz
insl
jo
pushf
pop
lods
cmp
pushf
shl
jmp
ss
pop
push
lods
xchg
mov
jmp
outsl
sti
fistpl
mov
negl
dec
xchg
inc
add
adc
lahf
call
sub
ret
into
in
cld
jnp
ja
xor
test
pop
rol
add
les
loope
insl
das
dec
loop
add
stc
mov
jl
sub
inc
fcmovnbe
mov
test
leave
stc
iret
aaa
and
arpl
jo
adc
pop
inc
sub
daa
mov
add
pushf
inc
mov
xorb
sarb
ffreep
push
sbb
aas
call
scas
js
push
mov
bnd
xchg
fwait
das
dec
mov
push
int3
js
jae
rcrb
jns
cs
pop
aaa
mov
ja
in
aam
iret
mov
lds
in
xchg
dec
mov
pop
jbe
jecxz
loopne
fsubs
sub
ss
gs
stos
ljmp
inc
sub
jns
mov
push
push
xorb
pushf
jmp
xor
outsl
insl
push
lret
inc
dec
jmp
rcll
iret
mov
call
rorl
es
movsl
adc
mov
or
jns
lahf
sub
lret
cwtl
dec
adc
es
mov
and
cld
and
aad
fsubrp
mov
scas
in
mov
or
incb
and
loop
bound
or
outsl
loope
add
mov
enter
adc
stos
cltd
add
cmpb
fs
fxtract
add
jmp
lds
rcrl
aaa
push
jl
fildl
sbb
push
sbb
loope
cmp
jge
lahf
push
pushf
jbe
push
xor
aas
mull
fcomip
das
ja
sbb
sbb
adc
add
inc
xchg
rcrl
jnp
add
pop
loop
push
lock
in
cmc
rcll
adc
mov
mov
adc
sarb
push
pusha
in
push
pop
xlat
add
push
lock
pop
mov
popf
dec
enter
add
xchg
in
adc
xor
movsl
shlb
xchg
sub
jae
mov
xchg
in
imul
sub
popa
pop
cld
sti
outsl
push
in
loope
jo
sbb
mov
mov
mov
adc
mov
mov
jl
movsl
pop
pop
cmp
stc
or
sub
int
jno
push
leave
push
and
fldl
imul
rcrb
xchg
or
pop
ss
mov
sbb
in
shll
jp
enter
xchg
dec
shlb
and
pop
adc
xchg
and
xor
gs
orl
mov
cld
or
mov
std
pop
mov
ret
push
or
aaa
or
sbb
ljmp
mov
xlat
push
cmp
iret
movsl
hlt
push
mov
lods
sbb
pop
dec
cmp
orl
jne
lret
dec
push
fisttps
and
xchg
insl
jg
loop
data16
lahf
push
mov
jge
daa
ds
pop
sub
cmc
pop
and
js
jmp
shrl
push
sbb
stos
xor
stc
mov
and
insl
sub
add
into
insl
sbb
sub
jae
lret
sti
rorb
and
sti
stos
mov
leave
cmpsb
push
jecxz
xor
jecxz
std
repz
add
loopne
mov
fcompl
dec
je
loopne
push
push
es
repz
push
dec
jp
sti
mov
push
lods
jns
or
xchg
les
mov
jp
lods
mov
sub
push
imull
not
push
xor
imul
jle
in
jb
shr
inc
mov
mov
jp
mov
dec
mov
mov
sbb
stos
xchg
aad
adc
enter
ret
xlat
xor
dec
cmp
adc
xchg
aad
mov
mov
cmpl
dec
aam
jp
pop
nop
fnsave
add
push
cmpsl
and
add
mov
enter
adc
js
inc
and
inc
xchg
pop
call
scas
jp
xor
aad
test
or
pop
mov
push
jb
push
or
out
jns
inc
dec
and
stos
sub
sbb
mov
jae
xchg
inc
decb
add
adc
es
xchg
fucomip
lret
push
rcrl
dec
and
add
js
adc
sub
stc
aas
pop
or
movsl
loope
test
nop
adc
sub
cmc
fisttpl
test
push
inc
lds
and
ds
les
cltd
push
xchg
and
sbb
push
sbb
test
xchg
je
cmc
push
jl
push
cmp
xchg
fs
std
mov
push
loop
fwait
icebp
mov
insl
xorb
jp
call
cmpl
lahf
jne
sub
sahf
test
jle
add
mov
out
es
mov
jle
jae
out
or
fistpl
push
mov
shll
repz
out
inc
sti
sub
ja
mov
and
js
stos
cmp
sub
pop
loop
inc
aas
inc
push
mov
sahf
mov
jb
iret
setnp
sbb
mov
mov
mov
mov
sbb
or
and
mov
push
loope
xchg
inc
inc
inc
je
repnz
or
sbb
inc
mov
and
popf
or
xchg
mov
jecxz
fldl
push
mov
jo
hlt
cmpl
stos
data16
sbb
test
out
in
enter
pop
mov
aaa
aaa
or
mov
mov
jns
pop
xchg
ja
out
fistpl
fstl
jo
mov
pop
mov
inc
ss
mov
out
push
cmp
pushf
sub
mov
jb
test
int3
clc
or
test
leave
mov
sub
inc
sbb
ds
mov
add
test
call
push
add
sbb
mov
frstor
arpl
frstor
test
movsb
std
ror
jl
add
xor
cmpsl
lcall
test
xor
mov
xchg
push
mov
scas
jnp
mov
and
pop
push
fdivl
icebp
bound
out
push
or
mov
insl
fcmovnu
js
gs
aaa
and
push
xor
pop
imul
and
or
movsb
or
dec
sbb
and
into
and
mov
lods
clc
mov
xor
stos
mov
pushf
inc
xor
sbb
jmp
addr16
int3
push
negl
sti
mov
nop
mov
and
scas
aas
loopne
pop
xchg
jp
enter
and
jnp
mov
subb
cmpsb
insl
cmpsl
jo
adc
xchg
jne
fsts
leave
sarl
push
rol
sub
es
sub
dec
into
pop
fwait
cld
ffreep
fisttps
sub
mov
and
xchg
sbb
scas
pushf
popa
jmp
xor
push
dec
inc
in
in
push
out
push
or
or
lret
mov
ljmp
or
inc
or
jo
aaa
movsb
sub
and
pop
lods
mov
push
pop
aaa
repnz
fstl
mov
inc
xchg
inc
jo
mov
inc
pop
out
call
mov
stos
dec
popf
das
adc
testb
add
testb
ja
cld
jge
lahf
mov
test
push
mov
cli
pop
xor
xor
in
rcr
test
and
mov
addb
add
ja
push
pop
pop
sbb
add
pop
js
sub
mov
popa
push
cmpsb
mov
and
or
mov
dec
adc
add
mov
adc
xor
and
jge
enter
pop
outsb
popa
shrl
xor
dec
mov
xorb
fidivrl
push
out
shll
mov
jae
push
mov
imul
sbb
sbb
in
xor
xchg
or
fistps
inc
hlt
aaa
jl
jae
or
shrl
cltd
adc
and
cmpsb
push
les
outsl
in
iret
xor
fwait
inc
dec
test
sti
cmc
or
xorb
mov
loop
mov
sub
xchg
frstor
mov
rol
cmp
or
mov
in
pop
bound
jmp
das
scas
addr16
pop
fsubrl
std
adc
pop
xlat
fcmove
and
push
cli
inc
inc
mov
in
cmp
pushf
cmp
mov
imul
inc
mov
icebp
outsb
dec
jbe
or
xor
mov
cmp
mov
or
test
rcr
ja
rcr
add
jecxz
xchg
mov
and
std
shr
in
pop
mov
or
pop
out
ret
mov
mov
cli
jne
xchg
mov
xchg
loope
push
pushf
fiadds
repz
sbb
cmp
lret
pop
lods
add
mov
xchg
cmpsl
push
fimull
inc
imul
adc
andb
and
pop
sbb
mov
push
insl
pop
add
mov
insb
jp
imull
cmp
mov
mov
hlt
xchg
out
sub
dec
mov
push
inc
mov
jl
bound
icebp
sub
out
push
sub
enter
aas
fbstp
dec
or
imul
mov
pusha
enter
mov
inc
pushf
push
insb
xor
gs
or
fldcw
ja
mov
hlt
dec
lahf
iret
scas
xor
push
cmp
or
push
dec
test
in
sbb
pop
mov
adc
lahf
inc
call
cmc
mov
mov
pop
cwtl
scas
fwait
les
ds
in
mov
xor
mov
aam
icebp
adc
jp
inc
add
jecxz
and
lods
adc
jecxz
imulb
inc
pop
testb
leave
pushf
jmp
add
ss
jp
hlt
mov
xchg
pop
popf
push
in
dec
mov
pusha
scas
scas
adc
arpl
popa
movb
inc
icebp
inc
mov
inc
adc
dec
shll
dec
inc
or
jbe
outsl
pop
leave
and
cmpsl
roll
icebp
movsb
push
push
fdivr
add
cmp
push
jns
adc
fsubl
jle
jmp
jmp
xchg
adc
imul
nop
daa
repnz
cmp
mov
pusha
jne
pop
push
mov
leave
cmpl
int3
out
mov
aam
mov
dec
pop
hlt
shl
lea
hlt
cmpsl
adc
js
ljmp
xchg
loop
insb
xchg
jne
stos
je
leave
push
push
adc
jae
ja
imul
lods
jne
add
test
mov
loopne
mov
arpl
dec
clc
xlat
sub
jg
add
out
repz
leave
push
xor
jl
jae
jbe
addr16
pop
jbe
mov
ja
cmpsb
mov
les
shlb
xor
mov
fcomps
bound
xor
and
cmp
mov
mov
ret
scas
cmp
mov
jmp
mov
or
jne
outsl
sub
sub
jnp
cwtl
repz
mov
add
push
cli
pop
fwait
out
lods
test
xorb
jge
jle
test
movsl
out
xor
cmp
adc
loope
cmc
popa
push
mov
repnz
mov
gs
pop
scas
xor
pusha
mov
mov
jmp
push
mov
xor
jae
addr16
mov
xor
and
and
neg
leave
sahf
jg
sbb
add
mov
into
sub
pop
jecxz
sbb
pop
inc
lcall
dec
insb
jo
sbb
clc
mov
cs
and
or
inc
and
jbe
mov
ret
shl
mov
outsb
in
and
stc
lds
aam
inc
pop
aad
test
pcmpgtd
outsl
int3
scas
cmc
pop
xor
in
push
push
xchg
in
xor
rcrb
fs
dec
sbb
inc
mov
sub
xlat
dec
dec
aam
add
mov
test
cltd
pop
cld
jo,pn
jbe
xor
add
movsb
inc
jo
mov
test
push
pop
addb
add
xor
push
loopne
xchg
adc
fnstenv
or
push
arpl
fsubr
ds
dec
pop
cmp
ret
and
push
sub
into
adc
jmp
dec
aas
jp,pt
sbb
out
xlat
je
sbb
pop
scas
outsl
and
inc
rorl
jno
sbb
push
inc
std
iret
xor
pop
out
popa
mov
addr16
sbb
stos
js
fildll
int3
repnz
lock
adc
scas
or
ss
stos
push
mov
sub
loopne
or
add
je,pn
inc
adc
lds
cld
fcoms
stos
and
xchg
and
es
xchg
mov
testb
aas
xor
mov
add
xlat
pop
ficoms
and
xchg
repz
fadd
xchg
mov
cli
outsl
movsl
cmpsl
sub
pop
and
add
xor
popf
pop
xchg
mov
or
fnsave
les
fistpll
andl
cmp
lods
xor
push
rclb
jo
aad
push
ss
jge
or
mov
insl
and
inc
test
std
or
jmp
mov
fisubs
xchg
sarl
call
dec
jmp
incb
pushf
pop
or
bound
xchg
sbbl
xor
out
sub
ja
repnz
test
push
ja
and
stos
adc
xor
faddl
adc
mov
testb
iret
insb
sti
ret
adc
pushf
pop
into
test
inc
jl
mov
add
ss
popa
mov
in
cmp
push
leave
jle
jns
std
fsincos
xchg
pop
pop
or
lock
popf
cmp
outsl
cmpsb
fwait
mov
movsl
mov
sub
stos
jno
dec
movb
sub
test
mov
pop
mov
leave
mov
mov
jnp
and
repnz
dec
pushf
movb
imul
out
inc
lcall
sahf
push
dec
and
mov
out
nop
lds
ss
push
fimull
testb
sti
sub
or
xor
sti
leave
push
aaa
mov
mov
xchg
and
inc
jl
sbbb
jno
mov
je
scas
jo
popf
push
xchg
inc
dec
push
mull
mov
push
xchg
int3
add
mov
out
pop
fdivrl
inc
test
jl
in
add
std
enter
mov
sbb
add
and
les
mov
fisttps
cmp
xor
aaa
xchg
shrl
test
cmp
call
inc
adc
xlat
add
push
xchg
jns
inc
mov
xlat
fnstenv
cld
cli
cwtl
jg
cld
inc
call
ret
aaa
idiv
in
lret
jns,pn
and
cwtl
jne
lret
and
dec
add
jge
lods
rcll
push
pop
stc
pop
sub
sti
xchg
fs
insb
out
cmp
add
stos
and
mov
cmp
push
xor
pop
lods
fcompl
cmpsb
jno
sti
jae
scas
xchg
xchg
jg
ss
mov
push
jae
lcall
fldl
mov
add
and
shll
xchg
shrb
inc
add
dec
sbb
cli
int3
add
cltd
dec
mov
adc
scas
cmp
test
xor
jno
and
je
out
or
xchg
mov
xor
lods
xor
ss
mov
jmp
dec
ss
sub
nop
push
mov
les
push
sti
les
xchg
jmp
or
lock
mov
push
orb
pusha
das
sti
mov
out
xorl
adc
js
add
fcmovb
sbb
cli
sti
xchg
push
push
adc
adc
test
pop
js
mov
pushf
pop
in
stc
cmovno
pop
xchg
jne
push
cmp
lret
jnp
test
add
mov
subl
mov
push
xlat
mov
jne
push
mov
cmp
fwait
add
repnz
out
mov
inc
sarb
push
xchg
add
dec
dec
cmc
mov
pop
stos
sti
cvtps2pd
inc
jns
xor
mov
sbb
les
xchg
jp
dec
jne
subl
mov
add
xlat
insl
add
mov
aad
sub
imul
mov
jns
les
jne
or
sub
inc
lcall
adc
int3
lock
xor
push
not
jg
inc
lods
outsl
icebp
jmp
push
xor
adc
push
jb
test
xor
jnp
pop
sub
push
dec
imul
or
mull
rcl
cli
mov
sub
inc
lods
xlat
xchg
xchg
divb
push
inc
mov
in
push
aam
jecxz
cmp
out
cwtl
cmc
std
xchg
orb
nop
rcrb
shr
push
adc
sub
or
push
jae
inc
xchg
outsb
mov
dec
xor
sub
mov
cli
ds
pop
rcll
scas
sub
hlt
mov
insl
push
popa
add
adc
fcomps
dec
pop
cli
and
movsb
leave
or
flds
pushl
cmp
out
popa
mov
add
lahf
mov
dec
clc
push
jl
push
std
push
xchg
adc
adc
push
jno
add
shll
adc
decb
hlt
aad
inc
add
loop
rcrb
test
adc
andl
ficoms
scas
add
mov
dec
jne
xor
mov
pop
xor
scas
push
dec
leave
inc
pop
je
add
fcoml
sub
lret
mov
or
dec
outsl
sti
push
mov
leave
cmc
sbb
push
int3
push
cmc
test
cmp
and
dec
push
pop
fisttpll
inc
push
jl
dec
nop
push
inc
stc
adcb
sbb
loop
mov
lock
mov
xchg
and
cmp
inc
ljmp
mov
int3
add
dec
xchg
jl
dec
hlt
push
lods
push
or
mov
jg
pop
mov
sbb
cld
fcoml
adc
mov
mov
repnz
jns
daa
les
dec
loope
jne
hlt
jecxz
fabs
loop
adc
mov
in
cmpsl
test
push
pop
push
xor
push
cmpsl
mov
insb
aas
dec
xchg
hlt
and
pop
mov
fsubs
lcall
mov
xchg
inc
adc
pop
adc
mov
adc
sbb
sub
sti
lds
out
clc
lds
push
add
les
xlat
dec
mov
xor
cld
icebp
testl
cli
cwtl
and
dec
push
xchg
fprem
dec
inc
sub
icebp
mov
mov
shl
pop
fistl
les
popf
dec
leave
lcall
int3
or
inc
mov
outsl
xchg
dec
lods
out
or
cli
mov
mov
xor
int
rcll
shrl
pop
sub
mov
mov
push
mov
mov
imul
dec
repz
inc
loop
repz
sar
sar
js
xchg
icebp
jno
insb
shll
les
ss
in
jl
repz
jg
mov
movsb
add
out
xor
mov
push
mov
or
jecxz
fwait
lret
icebp
cltd
lods
inc
aaa
ret
adcb
lods
add
sub
arpl
das
xchg
jo
mov
ret
jg
cld
je
lcall
jno
sub
adc
push
inc
xor
fimuls
sub
std
or
popa
xchg
test
test
out
sub
jb
inc
lods
xchg
fmuls
and
lods
xor
mov
xchg
stc
nop
jle
mov
into
pop
mov
adc
xchg
pop
cmp
mov
add
xchg
inc
pop
aas
rcl
out
repz
jg
xchg
mov
xchg
and
in
lret
ret
xor
sub
in
lcall
and
push
lock
cltd
jo
outsb
enter
ror
int
adcb
push
mov
inc
xchg
scas
cli
and
add
stos
hlt
adc
add
test
imul
pop
xchg
cli
fimull
push
dec
out
push
mov
outsb
and
cwtl
add
sbb
stos
out
gs
loop
repz
popa
xchg
ds
paddsw
xchg
psubq
fcomps
xchg
repz
push
xor
push
inc
sbb
xor
shll
mov
mov
pop
inc
into
pop
test
fistps
lods
xor
add
inc
lcall
adc
push
imul
cmp
inc
jne
push
add
mov
in
sbb
xchg
stos
xchg
std
sti
and
sub
sub
popf
leave
orb
xor
in
les
rolb
leave
xchg
adc
xchg
dec
sbb
dec
repz
out
insb
or
aam
mov
cmpsb
popf
jb
xor
ret
popa
mov
test
mov
sub
add
in
je
inc
int
jne
movsb
mov
dec
lret
cmc
in
mov
addr16
fsubrl
inc
mov
jbe
aam
js
sub
push
std
jecxz
test
sbb
pop
fiaddl
jae
fst
arpl
jge
subb
sub
std
mov
xor
lds
xorl
mov
push
sub
xor
sub
sub
sbb
xchg
adc
rolb
outsb
out
test
mov
hlt
mov
sub
push
ds
jl
mov
pushf
shrd
loopne
push
test
mov
mov
fidivrl
bound
jmp
out
dec
sbb
sbb
mov
outsl
sbb
xchg
sub
xor
insb
sub
cmpsb
jmp
xor
shrb
pusha
mov
popa
add
mov
xchg
ret
and
nop
fucomip
cmc
jnp,pn
or
shlb
add
mov
jne
push
sub
out
rclb
xchg
fistps
icebp
fs
icebp
js
std
shrl
in
add
in
sti
xchg
pop
mov
in
inc
mov
mov
or
shld
push
arpl
into
out
or
fsts
cmp
or
out
fildll
out
mov
and
cli
or
jl
mov
pusha
test
sbb
shrl
and
lods
or
pop
lods
loopne
mov
fsubrl
dec
jl
mov
xchg
imul
pop
xor
xchg
mov
outsl
movsl
jo
clc
push
xchg
ret
lret
push
pop
leave
push
mov
mov
xor
jmp
or
fidivrl
pop
das
aaa
shll
mov
inc
jb
sbb
add
inc
add
mov
inc
cmpsb
fwait
jg
loop
push
dec
adc
aad
adc
cmp
jecxz
out
pusha
ret
pop
daa
call
mov
decb
nop
dec
cli
add
dec
incb
jmp
jno
subl
dec
ja
leave
ret
mov
pop
jl
jle
cmc
test
orb
loope
nop
jmp
xlat
or
and
into
add
ret
pop
fldt
ret
lcall
cmpsl
fld
dec
adc
sarb
aad
sub
rclb
sub
dec
push
movsl
ud0
jmp
nop
loopne
cld
out
sbb
je
cmpsl
shl
mov
add
xor
mov
xchg
jp
pusha
jmp
fs
push
mov
mov
add
call
fisubrl
mov
or
dec
push
addb
jmp
push
std
in
cltd
xchg
imul
mov
movsl
movsl
fsin
outsl
cld
in
jge
testb
mov
pop
nop
lea
lcall
into
jmp
jecxz
dec
fcmovbe
lret
xor
rolb
inc
or
ret
lret
jbe
or
and
mov
sub
dec
pop
jae
es
push
call
xchg
xor
inc
mov
pop
cmp
push
and
mov
mov
aaa
dec
xor
push
push
xor
fs
ds
testb
sub
cmp
inc
push
lret
clc
adc
aad
xlat
or
repnz
xor
dec
lds
popa
lock
cli
addr16
imull
rcl
xor
xor
xor
and
orb
lret
push
sbb
mov
xor
in
andl
out
push
jg
jp
stos
test
aaa
and
cli
out
sbb
shlb
jp
mov
push
xor
xlat
add
jmp
mov
add
insl
xchg
rcr
mov
jmp
mov
jmp
mov
mov
dec
out
adc
push
jmp
push
repnz
jg
adc
mov
inc
or
pop
iret
mov
push
sub
movsl
mov
adc
inc
jbe
in
loopne
xchg
fcompl
add
jne
jge
ret
shrb
dec
dec
xchg
xchg
movsb
rolb
push
fwait
rcl
cld
repz
je
pop
mov
and
ljmp
pop
imul
push
adc
mov
das
mov
stos
enter
adc
push
jle
add
lods
jne
mov
cli
scas
lea
mov
stos
lret
mov
cwtl
pushf
pop
addb
lret
mov
js,pt
xchg
xchg
add
in
pop
push
push
mov
jae
popa
dec
and
jne
sbb
mov
dec
pop
out
and
ds
fldln2
and
xchg
imul
xchg
int
pusha
ljmp
mov
xor
mov
mov
and
jl
ja
das
push
pop
loop
mov
xchg
dec
or
adc
ss
daa
ficoml
mov
and
testl
sti
sbb
pushf
hlt
es
mov
pavgb
mov
unpckhps
dec
jle
xchg
in
push
push
repnz
in
lcall
push
loope
mov
fs
dec
mov
jle
mov
add
out
test
sub
xchg
cmp
fdivrl
push
idivb
lods
cmpsl
and
cmp
in
imul
fcoml
cwtl
fld
push
sub
ljmp
iret
sahf
mov
stos
add
add
ljmp
mov
subb
mov
mov
jo
in
pop
or
dec
iret
sbb
decl
xlat
jle
jns
xchg
scas
cli
cmp
loopne
mov
lret
jp
rol
fsubrs
inc
xchg
mov
daa
add
pusha
mov
inc
sub
jb
dec
xchg
push
fists
xchg
aaa
pop
movhps
dec
addr16
stc
sbb
or
mov
mov
ja
mov
jo
aas
fs
or
cmp
fmuls
fmull
jge
mov
inc
mov
push
popf
lahf
incb
insl
sbb
je
jb
push
jne
mov
push
jae
push
or
push
cmpsl
dec
dec
mov
cmp
dec
stos
and
lds
jnp
bound
xchg
mov
mov
jo
into
jnp
rol
xor
in
push
and
icebp
cmp
or
push
daa
je
add
mov
mov
stos
sbb
xor
and
pop
pop
rcrl
xchg
stc
mov
addr16
mov
pop
jecxz
rcrl
cltd
mov
jl
pop
inc
adc
fsubrl
mov
jmp
dec
lahf
mov
mov
push
enter
or
ljmp
out
arpl
rorl
xor
mov
stos
jne
and
xchg
mov
stos
sbb
cmp
lock
xorl
int3
pop
jae
jb
cmp
dec
push
enter
test
clc
cmpsb
adc
sub
idivl
pop
push
popa
jecxz
mov
mov
mov
lret
pop
mov
push
add
cmpsl
pop
mov
push
jns
inc
ljmp
fwait
adc
nop
xchg
inc
dec
rolb
jmp
push
shlb
lret
inc
cli
jnp
add
inc
shrb
out
aas
pop
inc
inc
and
movsb
and
mov
push
cmp
fs
scas
lahf
int3
xor
adc
mov
dec
mov
pop
sahf
xlat
mov
lcall
and
mov
jmp
xchg
add
aas
outsl
lods
iret
movsb
dec
dec
xchg
insb
movsb
dec
mov
cmp
ja
aad
fidivs
nop
mov
fcomps
gs
sbb
pop
sbb
lock
fmull
push
mov
push
cmp
push
or
popa
aaa
pusha
fdivl
inc
add
xchg
push
andl
repnz
rcll
jecxz
adc
xchg
imul
sub
and
addr16
mov
xlat
mov
stc
hlt
outsl
out
xor
mov
mov
inc
mov
loop
mov
dec
or
test
push
nop
incb
mov
add
inc
call
pop
dec
sbb
dec
jno
push
and
nop
movsb
lahf
imull
jae
pop
loop
insb
lcall
jle
shlb
inc
sub
int3
xor
mov
lock
and
std
int3
test
mov
mov
pop
jns
inc
or
mov
adc
and
es
imul
mov
pop
cmp
stc
add
in
cli
outsl
xor
xchg
cmpsb
sub
mov
test
cmp
and
pop
imul
xchg
pop
rcll
adcb
mov
jnp
test
ret
clc
ljmp
xchg
push
push
dec
adc
mov
ss
pop
loope
int
pop
inc
fistl
es
repnz
ja
pushf
adc
sbb
iret
int
mov
test
lds
xchg
mov
adc
fnstcw
insl
dec
aam
xor
cmp
aam
sbb
iret
test
fwait
jl
inc
imul
lret
push
sub
jb
insl
inc
mov
and
or
xor
out
test
hlt
loopne
gs
jo
xor
sub
sti
loope
mov
adc
idivb
pop
inc
mov
jle
adc
stos
mov
push
lahf
stc
adc
mov
cwtl
jge
mov
mov
aad
lods
cmp
mov
adc
dec
sahf
pop
sbb
je
dec
fistpll
dec
or
push
les
daa
add
arpl
cmp
and
mov
dec
scas
mov
dec
gs
cmc
sub
xchg
cmpsb
pop
and
mov
cmp
jl
or
jl
in
repz
movsl
cmp
stc
dec
js
es
shrb
stos
scas
addr16
jns
jnp
mov
clc
mov
into
popl
inc
pop
out
aaa
sub
lods
adc
inc
out
daa
int3
scas
lock
sub
mov
add
ss
int
dec
insl
inc
xor
lahf
or
imul
cmpsl
mov
adc
xchg
jmp
adc
test
lcall
cmc
clc
imul
cwtl
outsl
addb
jecxz
shlb
shlb
add
or
adc
aad
sbb
mov
or
push
mov
movsb
cltd
xor
test
cwtl
xchg
fwait
aas
ret
fdivr
pop
xor
inc
std
popf
jmp
push
xor
xchg
arpl
shll
add
cmp
ret
icebp
xchg
lock
outsl
lcall
js
cltd
mov
je
cmp
and
cmpsl
popa
shll
cmpsb
sbb
mov
mov
shl
pusha
or
adc
adc
mov
add
pop
mov
movsb
repnz
pop
scas
adc
incb
fbstp
lods
imul
mov
test
and
mov
xchg
and
fistpll
cmp
into
loope
insb
shlb
out
mov
xchg
xchg
mov
xchg
xor
mov
xchg
xor
jle
fsubl
xor
iret
lret
lock
or
adc
repnz
add
bound
mov
ret
rcr
jp
cmc
add
rcrl
cltd
popf
sub
mov
add
sarl
daa
aam
decl
mov
xor
bound
outsb
push
mov
out
int
ja
imul
out
ja
mov
inc
sub
mov
sub
jbe
pop
std
daa
sub
std
push
in
sbbl
adc
imul
cli
pop
mov
or
loop
int3
xor
xchg
ret
je
and
inc
cmp
inc
push
fcmovnu
iret
in
adc
addb
inc
lret
or
jmp
inc
outsl
je
out
fisttps
mov
in
mov
gs
sti
sarl
sbb
lds
pop
mov
jg
test
inc
xchg
scas
dec
imul
loopne
jg
adc
fs
lcall
outsb
or
xchg
mov
mov
jnp
or
or
mov
loop
js
push
mov
cmp
in
mov
cmp
inc
dec
pop
pop
dec
je
inc
popa
or
icebp
insb
inc
mov
push
into
pop
xor
popf
jge
mov
iret
mov
pop
jae
or
mov
dec
push
sbb
popf
das
xchg
nop
movsl
cmp
pop
lret
ret
lds
popf
loop
mov
out
or
lret
test
push
push
adc
add
scas
iret
inc
lock
pop
test
push
cmpsb
inc
lret
cmpsl
or
xlat
mov
pop
dec
or
or
pop
mul
jo
repz
cmc
movsl
andb
clc
in
or
push
test
adc
ffree
lcall
cwtl
mov
fsubrs
pop
aaa
xchg
sahf
filds
push
sbb
mov
adc
ret
data16
lods
idivl
rol
sti
mov
xor
dec
testl
cmp
cmpsb
call
je
mov
xor
test
pop
in
dec
xor
xor
es
dec
hlt
dec
xchg
imul
ss
mov
movsl
dec
adc
lea
shl
lods
jns
aam
mov
xlat
adc
icebp
push
sti
jecxz
xor
mov
xor
arpl
xchg
lea
hlt
cmc
adc
repnz
jae
std
push
add
in
ss
jne
outsl
int
push
nop
xchg
mov
shrb
lock
mov
mov
test
mov
aad
or
xchg
add
jo
push
test
fucomip
xchg
cld
leave
cmp
inc
sub
sarl
movsb
xchg
and
aaa
xchg
movsl
cmc
add
int
in
sub
push
mov
in
adc
xchg
cmp
lea
les
sbb
push
mov
jne
adc
addl
xlat
lock
jns
push
push
pusha
mov
test
adc
pop
js
fildl
add
cwtl
inc
stos
cmp
ja
cmp
fadds
cmpsl
sbb
fdivrs
cmp
jno
hlt
lcall
xor
cmc
cmp
push
mov
or
and
sub
insl
xchg
and
mov
outsb
sub
fnstsw
cli
jnp
pusha
fdiv
outsb
inc
sbb
mov
jae
out
stos
jl
clc
fisubs
ret
lahf
aam
outsl
nop
or
or
je
mov
mov
sub
mov
push
repnz
pop
dec
and
and
into
pop
jge
inc
mov
dec
cmpsb
adc
dec
sub
cld
pop
mov
imul
mov
rclb
imul
pop
ja
cmp
jo
test
pop
es
daa
jmp
cmp
mov
negb
inc
add
or
pusha
mov
gs
jbe
cmpsb
pop
or
sub
mov
mov
push
scas
pop
test
mov
add
or
dec
cmp
push
lret
in
ret
sbb
and
sbb
inc
adc
ret
pusha
ret
loope
stos
xchg
push
rol
rclb
pop
sub
aad
push
nop
cmp
cmpsb
test
inc
adc
xchg
imul
jns
pop
out
cmp
inc
nop
es
mov
movb
sbb
mov
fwait
mov
mov
das
xchg
sub
imul
adc
dec
push
inc
std
sub
sub
popa
stos
mov
xchg
mov
push
fisttpll
test
inc
or
mov
push
stos
cmpsb
cmp
add
out
add
sbb
lcall
nop
pusha
test
arpl
cmpl
test
jo
xor
ret
push
sbb
arpl
and
movd
adc
cmp
stos
inc
dec
and
in
xor
xor
sub
repz
test
leave
and
lret
lret
test
sub
or
and
mov
adc
push
roll
sub
jl
mov
add
or
gs
sysret
das
push
sub
pop
jo
mov
inc
jo
add
mov
arpl
lock
imul
push
and
inc
xchg
sbb
fucomi
lods
leave
decb
lds
mov
xchg
inc
ror
xchg
in
mov
ljmp
jb
or
addl
and
rorb
mov
xchg
dec
pop
mov
call
ss
dec
push
push
dec
data16
jnp
cmp
xor
bound
ljmp
cs
repz
dec
std
xlat
pop
push
clc
jns
pop
into
xlat
scas
mov
outsl
nop
out
cmp
sarb
int3
pop
and
leave
fcomps
filds
daa
push
ret
js
nop
repnz
xchg
cmp
rolb
cld
xchg
hlt
das
xchg
mov
std
xor
lea
sbb
pushf
adc
mov
push
mov
mov
in
inc
jg
repnz
cwtl
pushf
out
or
imul
aad
test
adc
push
inc
enter
or
repz
xchg
scas
jmp
enter
rclb
andl
nop
js
or
inc
jecxz
pop
daa
push
add
jns
adc
adc
sti
lock
stos
or
call
lock
cmp
push
dec
add
inc
rcll
pop
out
lea
lret
into
mov
cmpsb
mov
pop
pop
push
repnz
jge
les
cwtl
or
cltd
mov
popf
divl
jae
test
test
mov
in
jae
lret
es
cmp
out
iret
cmp
cmpsl
jmp
or
adc
mov
xor
mov
and
jg
xchg
xchg
cmp
fidivs
mov
dec
cmpsb
ljmp
call
sbb
out
pop
push
xor
lods
repnz
sahf
hlt
pop
inc
cmp
mov
adc
cwtl
repz
cmc
cs
pop
add
in
arpl
lds
jp
push
lock
cmpsb
dec
test
test
icebp
fbld
xchg
ret
aam
testl
push
add
fbld
in
scas
mov
in
std
sub
popa
test
sbb
lods
scas
xor
insl
cmp
stos
xchg
or
xchg
jb
inc
and
mov
incl
out
lds
or
fsub
cmp
aad
mov
fimull
out
pushf
xchg
addr16
idivb
or
pop
fisubrl
jnp
dec
xchg
lahf
int
in
cmp
push
outsb
repnz
jns
in
push
syscall
call
dec
pop
out
dec
pop
xchg
test
and
adc
bound
xchg
pop
sahf
loop
call
hlt
pop
push
js
ljmp
pop
lret
inc
out
sahf
int
pop
scas
add
jp
mov
or
pop
insb
and
std
test
add
fbld
jle
fdivrs
sbb
pop
andl
pop
aad
test
imul
mov
fdivs
xchg
mov
pop
inc
and
daa
mov
sub
sub
mov
xchg
jp
adc
mov
add
aad
mov
dec
add
adc
arpl
sbb
sub
imul
sub
test
jp
jecxz
mov
push
cmc
rcl
jl
xor
mov
inc
cmp
cmc
xor
mov
pop
xor
pop
pop
ds
aam
hlt
xor
addr16
insl
negl
mov
inc
popf
pop
dec
cmp
xor
rolb
ss
dec
push
cmp
jb
pop
sbb
test
xchg
lods
push
cmp
push
xchg
popf
pop
arpl
sub
mov
outsb
sub
and
shlb
dec
dec
fsubrp
scas
enter
in
pop
mov
inc
jle
mov
push
jg
int
xchg
js
push
inc
sbb
roll
jmp
and
and
inc
cmp
inc
insl
mov
jmp
leave
xor
lcall
and
jnp
rcrb
jp
aam
enter
stos
sub
jmp
adc
sbb
cmp
call
dec
addl
lret
or
pushf
addr16
xor
movsl
pop
lods
fwait
mov
std
mov
shrl
xor
and
movsl
push
inc
divb
cmp
or
cmpsl
adc
cmp
jl
jns
mov
fiadds
test
dec
push
bound
loope
loope
mov
xchg
jle
stc
adc
call
inc
xchg
inc
or
and
mov
jmp
shl
sahf
mov
mov
decb
adc
stos
outsl
lret
sahf
inc
mov
inc
pop
xor
cmp
out
mov
push
xor
mov
jo
ss
cmc
mov
add
rorb
lods
movsl
std
sti
sbb
rorb
add
sbb
cmp
movsl
xor
fcmovnu
cmp
mov
clc
cltd
sbb
into
call
bnd
adc
adc
into
imul
imul
adc
jo
add
dec
dec
xor
pop
ficoml
mov
popa
inc
iret
push
xor
mov
outsl
cs
adc
xor
mov
and
ret
lcall
cmp
ljmp
xchg
psubb
ljmp
pushf
call
outsb
xor
lahf
out
gs
outsb
testl
push
iret
xchg
xchg
mov
push
inc
sbb
push
mov
push
sbbl
shlb
pop
mov
add
or
xor
jne
sti
mov
xchg
bound
xchg
bound
fldl
test
fmuls
insb
dec
add
or
subb
inc
sbb
movsb
mov
sub
icebp
out
mov
rcrb
adc
cmpsb
arpl
stos
shr
mov
ja
fnstcw
lcall
inc
sub
out
mov
mov
cmpsb
incb
jecxz
cmp
pop
mov
dec
in
sarb
dec
mov
fstpt
dec
mov
mov
scas
pop
and
jno
push
movsb
pusha
lods
lahf
pop
mov
dec
jg
inc
pop
jl
cmpsl
loope
xchg
jmp
push
mov
mov
ljmp
outsb
cmc
and
fnstsw
stos
mov
clc
call
dec
std
sub
mov
mov
cmp
clc
and
inc
mov
out
movsb
push
out
test
mov
sub
dec
cmp
mov
scas
rcll
movsb
mov
addb
xchg
sub
mov
lret
cmp
arpl
cmp
jmp
inc
push
xlat
pop
inc
dec
cmp
repz
jno
dec
pop
inc
dec
stos
and
call
icebp
ret
dec
sbb
cmp
push
stos
mov
xor
pop
push
or
sbb
inc
push
aam
fimuls
iret
inc
jo
xchg
push
fcomps
mov
sbb
sub
cmpsl
inc
push
mov
into
xchg
jnp
enter
mov
and
xlat
jg
lret
lods
lret
aas
fimull
sbb
xor
lds
je
stc
push
nop
sub
push
mov
lret
std
sub
jo
aad
lock
shr
push
sbbb
shll
xchg
mov
jo
mov
lcall
sbb
xchg
add
ret
mov
jno
mov
push
jns
imul
push
mov
push
fdivrl
rcrb
dec
pop
mov
cmp
ja
pop
not
jno
xchg
fdivp
pop
mov
lret
sbb
xchg
inc
cs
adc
jae
sarb
inc
sbbl
pop
jae
inc
xchg
sub
sub
inc
adc
push
xlat
sbb
push
mov
scas
out
fisubrl
jae
xor
pushf
aas
cmpsl
mov
fisubrs
xor
xchg
lds
imul
add
rcrb
add
xlat
mov
aaa
pop
sbb
jg
pop
pushf
sti
mov
jmp
lar
loop
cmp
sub
push
sbb
inc
aaa
fadd
xchg
imul
jl
xor
sarb
add
es
cmp
xchg
or
sahf
xorl
or
and
ffree
add
sti
sbb
gs
sub
outsb
cld
inc
out
mov
xlat
js
adc
xor
or
adc
loop,pt
aaa
cmp
push
scas
in
jl
in
cmp
aad
rcrl
test
movsl
adc
sbb
in
adc
jge
mov
aam
cmpsb
and
sub
int3
stos
fs
mov
sbb
cli
dec
pop
adc
jmp
mov
jl
and
movsl
ret
push
mov
lret
mov
lds
push
jo
xor
outsl
aas
cli
xor
jp
and
int
in
pop
add
jnp
cmpsb
sbb
jmp
sbb
adc
pop
xchg
lret
div
and
or
and
sbb
sbb
jb
cmpl
mov
mov
mov
xchg
pushf
out
clc
adc
push
mov
mov
jle
out
inc
push
fnstenv
stc
sbb
stc
insb
jg
cltd
mov
shrl
jnp
test
push
faddp
and
and
in
mov
test
insb
imul
fdivrs
jb
fcoms
xor
or
test
mov
pop
xchg
cmp
sub
std
pop
call
negb
mov
out
cli
mov
cmp
sbbl
sbb
call
fs
cmp
sbb
pushf
rcrl
aam
in
sbb
jbe
fisubs
dec
mov
sar
leave
stos
daa
dec
push
xchg
pmaddwd
mov
or
fcoml
testb
jmp
repz
jmp
popl
int3
push
repnz
fsubrs
pusha
jecxz
pop
xchg
pop
out
add
xchg
hlt
test
dec
push
loop
inc
mov
push
mov
xor
push
mov
mov
ret
xor
test
dec
cltd
iret
adc
cmc
push
in
mov
repz
shll
std
xchg
mov
stc
sub
aaa
and
jno
jnp
inc
sbb
xor
test
pop
sti
fidivl
clc
jge
ss
mov
mov
sub
dec
mov
stos
in
xchg
lock
fiaddl
xor
movsb
xchg
into
cltd
or
mov
loope
inc
sti
push
divl
xor
sub
jmp
inc
cwtl
inc
push
testb
je
xlat
pop
bound
enter
dec
inc
sbb
fs
stos
cmp
inc
and
xchg
inc
or
je
loopne
repnz
mov
xor
andl
loope
std
mov
pop
xchg
push
iret
js
insb
xlat
push
inc
lcall
lahf
stc
sbb
or
jb
lods
repnz
in
adc
in
stc
adc
test
int3
or
jp
filds
cmp
fs
jno
mov
add
add
loop
lock
testb
mov
inc
jno
pusha
xchg
outsl
imul
scas
sbb
icebp
daa
mov
xchg
xchg
xor
popf
ret
dec
xchg
mov
fldcw
xchg
int3
inc
or
fisttpll
in
xchg
add
jge
adc
ss
or
into
jo
subb
shlb
cmp
in
sbbl
jmp
cmpsl
movsb
xchg
jnp
pop
pusha
and
bound
push
arpl
ljmp
pop
mov
pop
cmpsb
dec
fmul
out
mov
add
jl
mov
dec
jae
pop
std
jo
cmpsl
mov
lds
in
and
lods
shlb
push
loop
xor
mov
scas
add
mov
ljmp
sub
add
dec
loope
jmp
fildll
rclb
mov
adc
adc
std
mov
iret
sbb
pusha
pop
ret
mov
loop
mov
test
mov
gs
jo
pop
jbe
push
inc
testb
push
jo
and
ljmp
jmp
adcl
push
dec
jecxz
cmp
stos
adc
mov
adc
aam
negl
pop
loop,pt
add
cmpsl
ficomps
pushf
loop
and
scas
lret
or
bound
xchg
jb
test
nop
xorb
int
into
sarl
sti
pop
repz
cs
xchg
scas
and
cld
jmp
or
test
mov
stos
sbb
mov
imul
flds
sub
xchg
push
cmp
out
xor
stos
push
add
jo
push
rcr
xchg
sub
xchg
loop
xor
mov
mov
test
imul
and
xor
mov
jp
in
inc
movsl
scas
data16
mov
cmc
ret
xor
imul
test
enter
xor
mov
out
fcompl
nop
sbb
in
test
aam
jg
dec
into
mov
sahf
inc
xchg
outsb
stos
mov
scas
jecxz
adc
push
ljmp
out
xor
mov
xchg
outsb
lea
jns
insb
rclb
lods
repz
scas
das
sbb
fsubrl
adc
cmpsl
fadds
sub
andl
inc
mov
dec
mov
iret
inc
jne
cs
hlt
rcrl
iret
cmp
aad
mov
adc
sub
icebp
imul
lcall
push
cmpsb
sbb
sbb
lret
dec
sahf
pop
add
mov
pop
loope
fstpt
or
sti
mov
sbb
and
adc
int3
xchg
daa
sub
mov
adc
scas
xor
insb
mov
ss
dec
push
cmc
mov
xchg
mov
loope
inc
stc
adc
out
xchg
insb
cmp
mov
push
or
xor
addb
xor
lods
xor
add
shll
movsl
pop
aas
xchg
int
dec
sti
mov
imull
jp
fisttps
mov
sti
mov
andl
adc
int3
pop
into
xor
push
add
pop
sbb
xchg
push
mov
and
push
mov
add
xor
cmp
leave
push
mov
fadds
les
push
jno
and
ret
push
cmp
fimull
dec
cmp
mov
mov
cmp
add
fucomp
cmp
in
sarb
adc
inc
push
sub
mov
fldt
xchg
dec
loopne
sbb
rcll
pusha
fildll
and
mov
test
inc
repz
ss
xor
out
cld
cwtl
pop
inc
adc
shll
sub
js
out
scas
xor
aam
movsl
or
loope
in
sbb
loope
xor
scas
adc
push
pushf
adc
pushf
dec
jb
test
adc
outsb
jge
cwtl
incl
push
xchg
push
pop
pop
xchg
mov
mull
imul
movsl
int3
aas
cs
es
and
mov
cld
pop
add
int3
push
int3
repz
jae
cld
add
mov
lods
fidivrs
dec
push
loopne
mov
inc
out
adc
jne
jmp
ljmp
popa
inc
out
jo
in
pop
int3
sbb
sub
lret
add
pop
or
int3
cmp
mov
mov
cli
out
fs
fcom
mov
inc
inc
sub
jb
mov
addr16
ror
jge
leave
inc
hlt
pop
out
adc
shr
push
adc
adc
mov
notrack
shll
pop
cmpsb
hlt
lds
frstor
jle
jle
aam
push
aas
lcall
flds
push
push
jbe
add
stos
cmp
and
dec
clc
xchg
in
jne
adc
mov
pop
jmp
inc
cmp
jbe
jecxz
jmp
sub
lret
ja
mov
add
jo
rcpps
pop
pop
xchg
add
jle
pop
dec
xor
fs
xchg
cmpsl
arpl
mov
fwait
mov
sar
dec
fiadds
nop
rcl
xor
mov
adc
fwait
int
xchg
inc
or
in
stos
cmp
or
aad
outsb
or
xchg
dec
push
mov
add
js
popa
mov
dec
sub
sbb
cmc
bound
js
jo
inc
push
mov
ret
out
lret
addr16
das
cmp
push
push
ficoml
push
sbb
sub
mov
and
rolb
je
sub
cld
imul
enter
sub
int3
add
lahf
mov
jbe
jns
mov
and
lods
jp
ffreep
roll
cmpsl
inc
mov
in
sbb
add
dec
out
lods
jbe
repz
into
xor
out
sbb
mov
cltd
enter
mov
xor
andb
or
aam
out
xchg
and
sub
data16
jno
add
cmpb
faddl
jge
fbstp
out
aad
frstor
sahf
fnstcw
lret
xor
cmpl
and
mov
push
inc
mov
leave
mov
push
jmp
jp
add
adc
mov
pop
mov
jbe
sub
xlat
mov
int
fisubrs
nop
ror
imul
xor
jge
lea
cmp
sbb
wbinvd
aam
inc
imul
lods
sahf
fistps
jb
repz
std
movsl
bswap
sub
jl
and
jl
rcrl
notl
push
push
and
rcrb
aaa
xchg
popf
xchg
cwtl
testl
add
ja
out
std
popa
sub
jge
push
inc
popa
data16
xchg
jne
sarl
push
push
push
cmp
mov
mov
pop
in
push
add
mov
inc
mov
cmp
jbe
inc
mov
mov
in
or
jp
mov
push
pop
test
sti
rorb
ljmp
sbb
and
adc
mov
in
gs
sbb
mov
mov
pop
push
or
pop
aaa
mov
mov
cmpl
cmpsl
rol
dec
push
push
dec
push
mov
inc
cmc
jl
ret
ret
shlw
xor
xor
icebp
or
xchg
ja
scas
mov
and
xchg
out
mov
scas
fldl
push
sub
adc
inc
mov
push
arpl
addr16
out
sbb
pop
pop
fnstenv
cltd
sub
xor
int
push
test
xor
in
stc
or
out
cmp
addps
mov
add
sbb
mov
mov
fisubrl
out
pop
shrb
cmp
orb
mov
pop
mov
popa
call
pop
mov
add
and
adc
adc
fsubrs
inc
and
mov
inc
cmp
pop
dec
nop
rcrb
out
push
xor
pop
pop
jbe
mov
and
mov
hlt
outsb
mov
rorl
leave
std
movsb
mov
xor
aas
sbb
pop
cmpsl
shll
xchg
shrl
inc
xor
cmpsb
popf
shlb
mov
sbb
sbb
aas
lods
dec
xchg
jle
or
sbb
rcll
and
mulb
mov
mov
adc
nop
mov
test
or
scas
xor
addr16
adc
push
push
mov
mov
push
sub
movups
cli
jbe
add
mov
out
lret
fnsave
jg
and
xchg
fs
mov
nop
cmp
ret
pop
gs
lret
arpl
out
aam
mov
push
push
mov
xor
add
add
sub
adc
sub
mov
jecxz
cmp
insb
push
in
mov
add
xchg
in
cs
ret
fisubrs
cs
int3
mov
cmpsb
and
cmp
or
push
mov
in
cmpsb
popa
or
push
stc
jle
cmc
ret
sub
xchg
xchg
addr16
lahf
cmp
push
sub
cwtl
xor
pop
out
aas
pop
jo
enter
dec
adc
add
dec
mov
ret
mulb
adc
ja
pop
scas
testb
push
fldl
lds
xchg
cmp
or
jae
fdivs
sarb
mov
pop
adc
mov
cld
xor
cs
pusha
std
imul
stc
inc
cmp
stos
jnp
int3
inc
dec
cmp
pop
jo
or
and
imul
add
cmp
ficoml
jno
rcr
adc
cmpb
or
push
fidivrs
jg
dec
stos
and
jnp
insl
mov
jmp
push
fs
imul
js
add
pop
dec
sub
sbb
fisttpll
dec
and
dec
leave
cmp
cmp
push
sahf
popf
rol
popa
lahf
cmpsb
pop
ss
push
rclb
push
pop
pushf
inc
nop
lret
shlb
std
lds
and
sbb
jb
loope
scas
mov
sbb
pop
daa
cmpsb
mov
jg
add
cs
mov
flds
pop
dec
mov
xor
xchg
mov
jmp
pop
mov
aaa
lret
jae
sub
dec
testb
stc
push
lcall
addl
xchg
shl
nop
or
shlb
push
nop
inc
push
pop
iret
jp
mov
ficompl
hlt
inc
fwait
stos
cld
mov
in
sbb
cmp
fstpt
or
ds
testl
push
mov
ficomps
mov
test
mov
sub
int
push
pushl
push
mov
push
dec
loop
mov
mov
push
lds
push
in
subl
je
inc
and
jge
aad
lods
enter
repnz
cmp
push
cwtl
add
fs
xchg
jp
pop
xchg
andb
pop
sti
loop
mov
ja
jp
aad
out
mov
mov
ds
pop
cmp
sbb
pop
add
negb
xor
cmp
jg
test
and
cmp
mov
cli
mov
mov
xchg
mov
scas
adc
jne
push
dec
sahf
mov
outsb
dec
lods
inc
or
add
push
pop
sbb
andl
rcl
pop
loop
out
rcrl
stos
sbb
test
mov
dec
mov
cmp
jmp
outsl
mov
sbb
mov
push
fisubrl
pop
sbb
nop
or
push
leave
popa
dec
cld
cmp
movsl
loopne
lcall
test
mov
mov
jae
aam
and
push
es
xor
mov
clc
stc
push
mov
shrb
ljmp
out
test
mov
and
inc
mov
mov
or
dec
out
pop
pusha
mov
add
adc
push
inc
pusha
inc
or
ljmp
cli
rol
movsb
pop
rorl
cltd
and
or
push
jmp
mov
call
into
data16
inc
sub
das
in
and
mov
cmp
mull
add
xlat
fwait
mov
mov
dec
cmp
arpl
int3
repnz
je
add
push
and
lahf
sbbl
test
fsubl
sub
mov
sub
or
adc
xlat
clc
lods
call
repz
push
jmp
fdivp
lock
out
pop
daa
push
and
adc
fs
lret
mov
push
outsb
fisubl
lds
xor
addr16
jae
test
lods
inc
mov
xchg
shrl
xor
pop
insl
or
pop
inc
popa
pusha
push
sahf
das
pop
pop
cmpb
adc
pushf
ret
add
ror
sub
xor
dec
pushf
mov
and
inc
sub
test
xor
push
mov
and
push
jl
pop
in
xchg
test
dec
rol
imul
stos
cmp
mov
xor
test
sbbb
insb
movsb
jl
mov
mov
stos
ss
or
fsubr
mov
jne
and
popa
jle
jp
xlat
fs
push
shr
cmpsb
add
fnsave
mov
jge
mov
mov
cmpsb
dec
mov
jne
lret
jbe
pop
mov
mov
rclb
stos
or
jae
mov
lahf
ss
xor
popa
inc
loope
cmp
frstor
cmpsb
sti
jbe
ss
mov
mov
sbb
xchg
cmp
push
addr16
lea
pop
and
adc
cmp
in
fdivrp
arpl
push
adc
aas
mov
pop
mov
test
and
ljmp
rcrl
jns
jo
xchg
or
cmpsl
ret
push
mov
enter
out
cmpsl
or
mov
inc
pushf
fcompl
fadd
xchg
inc
cmpsl
sub
xlat
dec
pusha
push
xor
js
sarl
test
cli
xchg
stos
push
hlt
loope
sbb
sti
pop
popw
or
cmc
lods
mov
pop
mov
adc
js
mov
mov
rcrl
decb
mov
repnz
incb
add
add
mov
mov
mov
cmp
js
jp
add
lret
or
nop
jne
adc
subl
ss
pop
inc
or
sbb
rolb
dec
idiv
or
sub
std
xchg
mov
cs
mov
and
inc
notl
pop
aad
sbb
outsb
jp
shlb
je
lret
or
insl
rclb
xchg
mov
in
lods
push
ret
add
inc
adc
into
lret
xlat
movsb
mov
pop
and
add
out
cmc
sbb
xor
pop
aaa
leave
daa
mov
repnz
loop
or
cmp
pop
inc
dec
xchg
add
lds
xchg
aad
fadds
fs
jecxz
mov
xor
stos
aas
lock
loopne
pop
adc
hlt
sahf
pusha
xchg
add
dec
pop
cwtl
lds
stos
and
arpl
ret
xchg
andb
cvtpi2ps
and
imul
jae
loope
sub
and
cmpsl
rclb
adc
xor
xor
mov
and
jmp
mov
mov
push
les
dec
xchg
pop
sbb
mov
call
in
outsb
lea
fld
pusha
dec
push
popa
fcoms
jno
dec
mov
movsl
mov
out
shr
mov
shll
orl
xor
dec
out
cli
cmc
in
lock
adc
daa
and
lods
dec
int3
fildl
outsl
jle
shrb
mov
sub
ret
dec
movsb
add
cmp
add
dec
not
fadds
jno
subb
xor
insl
dec
aaa
cmpsb
ljmp
mov
popf
es
fidivrs
lods
inc
push
push
mov
push
pop
inc
shlb
lea
test
out
or
mov
int3
sahf
shl
ds
xchg
adc
push
pop
leave
add
ficomps
lods
int
flds
lcall
jl
cmp
scas
aad
rolb
adc
and
test
mov
sub
or
mov
inc
icebp
fsubrs
leave
push
stos
mov
pop
in
scas
jo
lock
es
std
xorl
jmp
ss
jns
sub
lcall
aaa
imul
and
sbb
push
jle
mov
rcl
fistpll
lret
rol
jb
adc
pop
pop
add
push
rcrb
bound
mov
mov
inc
jnp
js
add
lret
or
and
mov
or
stos
psubq
lock
loope
xchg
dec
adc
test
cmp
mov
adc
ja
inc
movsb
push
in
pop
popa
outsb
pop
repnz
adc
shlb
add
dec
mov
pop
or
xchg
or
or
test
cli
mov
mov
movsb
cltd
enter
inc
and
pop
add
dec
jb
mov
ljmpw
fldenv
xor
dec
mov
test
insl
or
gs
cs
push
movsl
jle
and
lods
dec
pop
adc
popa
add
cmp
test
mov
mov
fcmovne
lds
inc
fwait
js
jp
fldcw
std
fst
pusha
aad
bswap
dec
and
jge
icebp
cmpl
nop
mov
add
jmp
push
out
movsb
scas
inc
out
push
out
mov
jns
inc
mov
and
and
cs
jg
dec
jge
jnp
mov
pop
call
nop
jno
cwtl
js
add
mov
gs
cmp
mov
scas
push
test
inc
dec
cmp
mov
or
stos
sbb
pop
loop
xchg
and
cmp
or
mov
pop
mov
hlt
js
cmpsb
pop
push
mov
gs
push
mov
jmp
mov
and
cmp
lds
sub
andb
jne
cmp
mov
mov
mov
add
add
push
daa
or
andl
js
push
sbb
cmpsl
fists
mov
jb
mov
add
xchg
fidivl
xchg
xor
adc
mov
fisubrs
out
movsl
and
arpl
mov
jno
pop
outsl
sub
mov
mov
xchg
push
icebp
push
xorl
xor
or
out
pop
adc
mov
cmp
cmc
mov
dec
fcompl
inc
insb
dec
movsb
fwait
test
mov
shrl
aaa
cmpsb
fwait
out
pop
daa
out
jo
enter
cwtl
mov
mov
cwtl
cmp
dec
std
add
mov
and
xlat
ror
sbb
or
test
iret
ljmp
loopne
scas
cmpsb
sbb
imul
inc
shlb
jmp
xchg
jle
repz
xor
cli
jecxz
ja
mov
push
push
fnstsw
hlt
es
push
lock
js
jp
repz
fldcw
lea
enter
fwait
imul
imul
insb
lret
insl
jae
jo
cli
mov
out
es
lret
push
lods
jbe
inc
or
adc
adc
hlt
sub
outsl
clc
inc
push
sbb
stos
lock
fiaddl
in
add
mov
jecxz
and
cs
or
shll
inc
cmpb
rcr
daa
fucomi
shlb
mov
lods
push
pop
es
sbb
bound
push
fs
pusha
orb
div
dec
ret
lcall
in
addb
shrb
repnz
popf
andb
fwait
ror
out
xor
xchg
daa
jbe
bound
fucom
jns
add
cmp
rcll
inc
jg
sbb
add
cmp
mov
mov
outsl
fisubrl
cld
add
icebp
mov
out
inc
dec
mov
negl
lahf
sbb
and
in
ljmp
jge
pusha
jmp
push
add
push
lds
in
dec
shr
sbb
xor
mov
add
add
or
in
aam
popa
addl
int3
adc
mov
inc
lahf
mov
pop
adc
push
mov
and
data16
mov
lds
sub
and
xchg
test
jnp
pop
mov
mov
mov
mov
pushf
cmp
mov
scas
mov
imulb
fst
and
movsl
ret
mov
stos
jmp
notl
adc
daa
mov
hlt
fwait
jl
shr
ffree
cmp
arpl
pop
aam
sub
repz
loop
or
xlat
adc
sub
out
xlat
cli
fildl
dec
sbb
adc
push
clc
or
js
fdiv
js
cmp
adc
push
jnp
add
jmp
ret
xchg
mov
mov
shll
pop
xchg
mov
lds
push
jbe
nop
mov
jbe
jne
add
icebp
aaa
sub
mov
jbe
or
out
lds
jmp
adc
insb
jae
dec
clc
movsb
les
add
push
lods
xchg
int3
fiadds
dec
push
xchg
les
aaa
pop
adc
cwtl
dec
hlt
lds
pop
cmp
add
mov
mov
aam
loope
inc
ljmp
imul
fdivl
shrb
js
xchg
inc
mov
das
lret
pop
jae
rcr
out
and
mov
xor
jge
inc
movsb
cmp
sbb
xor
in
cmpl
mov
fstl
sti
nop
in
aas
les
les
outsb
cs
bound
inc
add
outsl
inc
push
mov
add
repnz
xchg
push
jle
popa
xor
sbb
lret
cmp
bound
insl
enter
andl
hlt
ss
cli
inc
ss
push
movsb
mov
or
mov
mov
dec
popw
push
addl
test
cmpsb
loope
sahf
dec
dec
scas
lahf
jmp
adc
negb
cmpsb
mov
in
fiaddl
imul
adc
rcrl
xchg
dec
incb
andl
divl
sbb
jns
loopne
notb
mov
or
es
add
push
sbb
sbb
inc
adc
pop
aas
shll
mull
movsl
push
add
sbb
cmpl
dec
cli
mov
mov
sub
sti
cltd
aaa
pop
loope
test
jmp
mov
mov
or
orps
into
sub
in
fnstcw
shlb
sbb
imul
and
ret
es
insl
enter
rol
mov
movsb
lds
xchg
sahf
jg
lea
fs
mov
aad
loop
out
jo
dec
add
and
inc
adc
xchg
jg
sub
cmp
into
cmp
push
pop
int
mov
and
xchg
dec
fimull
repz
sarb
roll
jae
out
pop
xchg
xor
inc
xor
mov
xchg
cmp
aad
scas
jecxz
push
test
and
pop
into
cmp
sbb
xchg
inc
sub
pop
in
xchg
les
mov
idivl
loope
jecxz
ret
jno
lods
cwtl
push
or
fsts
dec
or
popa
adc
pop
int3
negb
mov
adc
cltd
in
imul
mov
dec
test
mov
sahf
cmp
add
add
mov
push
aas
mov
aad
orl
in
inc
lret
add
bound
daa
jle
lods
ljmp
inc
jnp
pop
mov
stc
inc
inc
mov
std
sti
push
xor
adc
mov
inc
pop
fwait
push
pop
xorb
shrb
out
gs
lcall
popf
dec
sahf
icebp
movsb
pop
shll
push
shll
and
mov
xor
fldl
jecxz,pt
push
js
fwait
shll
add
outsb
hlt
add
cmpsb
clc
sbb
pushf
inc
xor
xchg
out
mov
dec
sbb
sub
inc
idivl
or
mov
inc
out
add
iret
or
loopne
out
pop
fs
jae
or
mull
test
pop
inc
add
ficomps
sahf
imul
dec
pop
jo
inc
mov
fstpt
inc
jmp
push
fbld
mov
mov
pop
and
sbb
jb
test
and
dec
jge
clc
push
push
popa
mov
add
adc
mov
push
ljmp
xchg
cltd
cmp
jle
sub
dec
orb
cpuid
enter
cs
lds
lahf
push
dec
int
pop
sti
mov
add
or
lret
sbb
in
mov
mov
stos
mov
jb
mov
add
inc
pop
pop
mov
shlb
cld
rcrb
aas
inc
iret
lcall
xchg
and
fnstcw
xor
in
push
sahf
pop
hlt
dec
outsl
inc
add
fidivl
ljmp
inc
addb
test
cs
cs
xchg
shrb
xchg
mov
mov
jl
or
jns
xor
adc
adc
out
inc
lea
mov
and
mov
and
xor
enter
and
aas
add
push
sbb
inc
jb
movsl
jmp
orb
lret
jmp
xor
or
jp
mov
cmpsl
xchg
add
gs
or
outsl
lcall
imul
mov
mov
cmp
adc
repnz
add
or
inc
cmp
stc
imul
add
or
lock
setnp
ds
cmc
sub
or
ljmp
mov
xchg
sbb
xchg
dec
test
lahf
add
add
inc
mov
mov
paddd
inc
rclb
decl
xor
mov
sub
add
mov
int
and
ret
pop
addl
pop
stos
imul
ss
scas
inc
cwtl
inc
sbbb
mov
rorl
mov
jg
jae
jecxz
pop
out
or
lea
pop
push
arpl
fldcw
jae
inc
movsb
lea
sbb
cmc
sbb
test
je
push
add
popa
inc
leave
xor
mov
add
mov
pop
and
cld
stos
inc
rcll
bound
insl
xor
les
daa
adc
sti
mov
arpl
outsb
movsb
cmpsl
cmp
sarl
push
add
mov
movntps
mov
sub
cmp
adc
mov
mov
repz
push
iret
mov
pop
sub
sbb
or
pop
arpl
mov
and
leave
sub
dec
cmc
aaa
gs
mov
js
dec
les
jle
ds
int
xor
scas
arpl
sbb
hlt
loop
xor
inc
repnz
in
and
dec
or
pop
shl
lods
lret
ja
sbb
cmpsl
cmpb
xchg
fstl
sub
or
pop
scas
xchg
jmp
lods
sub
call
out
mov
push
divb
adc
pop
jle
test
lds
rcr
pop
loopne
dec
out
fsubr
imul
jne
jecxz
leave
and
mov
and
pop
sbb
add
fisttpl
push
leave
gs
pusha
mov
adc
aad
cmpsl
and
xor
sbb
loop
scas
lret
sub
push
lret
and
mov
in
adc
and
jnp
mov
lcall
push
lds
mov
lret
sarb
in
popa
fs
xchg
aam
or
sahf
lahf
clc
out
rcll
cld
aad
pop
addr16
movsl
push
lods
push
test
jae
mov
ffree
sbb
cmpl
fsubr
jb
mov
fidivs
add
dec
mov
mov
fiaddl
loop
mov
rcl
out
ret
mov
mov
mov
mov
shlb
inc
dec
enter
and
jge
adc
mov
icebp
leave
xor
mov
icebp
sti
mov
jnp
insb
sbb
sub
xor
in
mov
push
fucomip
mov
imul
cmp
pop
int
sbb
mov
jp
stos
loopne
movsb
testb
popa
jle
movsb
mov
or
ficoml
jno
outsl
pop
lods
xchg
incb
dec
lret
nop
mov
out
push
cmp
and
lods
xor
ds
mov
loopne
inc
bound
shrw
mov
out
lock
mov
inc
in
add
rep
addl
icebp
jnp
jnp
mov
xchg
in
aad
pop
jl
dec
sbb
push
mov
inc
or
int
push
fldenv
mov
aad
push
orl
adc
sarb
dec
jns
sub
loopne
dec
jae
subb
add
mov
xor
sbb
aas
stos
bound
inc
lods
je
lahf
inc
mov
inc
adc
in
lds
das
mov
lds
movsl
fs
loop
xor
cli
pop
out
test
outsb
xlat
fwait
push
cmc
mov
push
enter
dec
mov
cmpsb
cltd
cmpsb
and
push
sbb
test
outsl
pop
xor
jl
shll
xchg
mov
sbb
push
in
or
xor
stos
mov
and
fs
mov
add
sbb
sub
shlb
test
hlt
adc
sub
js
insb
sub
in
push
scas
div
mov
scas
cmp
push
mov
and
sub
and
out
adc
out
pop
jnp
push
cmp
fwait
loop
mov
subb
icebp
cmp
stc
adcb
cltd
sub
shrb
in
mov
sub
outsl
jl
cmc
or
xchg
and
gs
js
in
out
lea
inc
inc
cli
lahf
dec
test
or
roll
cmp
push
mov
push
xor
jae
lea
mov
imul
mov
sub
push
popa
popf
bound
fcompl
jg
pop
push
pushf
sbb
xor
mov
movsb
sub
daa
add
mov
leave
jb
adc
insl
in
or
mov
inc
sbb
mov
in
adc
imul
and
and
iret
dec
mov
sbb
ds
xchg
lret
lret
nop
or
or
jmp
add
jae
pop
xchg
pop
cmp
lcall
or
push
pop
aas
mov
popw
and
jnp
push
mov
push
jns
xchg
pop
pop
inc
jnp
out
push
jo
arpl
cs
es
cwtl
sbb
lret
lods
cld
cmpsb
sub
rcrl
mov
call
jge
sub
pop
and
mov
and
sub
sub
mov
nop
in
je
push
adc
imul
repnz
mov
lcall
adc
ljmp
adc
out
xor
mov
pop
mov
jbe
lock
mov
mov
cld
jo
add
aad
cmp
adc
icebp
cmc
add
imul
aas
pop
and
loop
mov
add
and
addr16
cmp
std
mov
scas
jnp
pop
inc
hlt
in
sbb
sbb
inc
jae
mov
hlt
push
stos
clc
inc
push
divl
out
add
or
jecxz
fcompl
popf
scas
inc
mov
and
clc
roll
or
pop
mov
jns
jb
dec
push
test
orb
mov
push
out
ret
adc
jae
xchg
lea
daa
stc
imul
fiadds
jns
sti
ret
gs
pop
xchg
xchg
cmc
mov
jecxz
in
mov
cmp
pop
sbb
jg
push
repnz
mov
sahf
popf
xchg
sbbl
test
cmp
sub
xchg
pushl
or
mov
rorb
mov
add
push
xor
nop
adc
mov
sbb
jno
aad
push
dec
out
or
mov
mov
pop
cmpsb
es
movsl
ljmp
fstpt
sub
ss
mov
js
ja
adc
fsubp
cs
pop
sub
and
add
mov
outsl
push
hlt
rclb
loop
stos
pop
xlat
mov
jmp
inc
jns
sti
popa
cmpsb
test
jnp
insl
mov
and
loopne
xor
repz
mov
or
fadds
stc
je
ror
mov
jl
jno
es
mov
push
push
jge
les
adc
mov
stos
cmpsl
sub
cmp
and
mov
rol
out
out
testl
sub
jbe
lea
xchg
stos
sbb
mov
int
adc
jp
mov
xchg
inc
or
in
cmc
cmp
mov
pop
out
pop
call
fisttpll
dec
sub
movsb
add
xorl
clc
iret
xchg
jno
and
mov
or
pushf
rolb
inc
test
scas
add
mov
jmp
std
add
sub
push
fucomp
int
rcrb
pop
dec
stc
ja
xchg
push
adc
and
mov
pop
sbb
clc
sbb
jns
jo
push
jae
cmpsb
jo
cmc
test
or
mov
test
hlt
mov
push
lods
adc
lds
call
ret
xor
dec
push
add
pusha
sbb
fnstcw
xlat
fwait
rcll
dec
lahf
test
scas
clc
mov
jb
sub
nop
mov
pop
adc
jno
and
dec
mov
mov
arpl
gs
add
iret
xchg
sbb
pop
dec
adc
adc
jb
pop
outsb
and
mov
orl
jge
lds
mov
sbb
lods
pop
push
adc
outsl
das
add
imul
push
or
pusha
hlt
adc
lods
testb
cmp
repnz
movsl
lds
mov
into
cld
movsb
pop
sub
enter
testl
mov
cmp
arpl
es
cmp
xchg
xchg
fs
decl
in
popf
jecxz
out
add
xchg
sub
dec
clc
sti
xor
push
and
stos
xchg
roll
outsl
jo
adc
mov
xor
sbb
scas
aad
jo
lret
jo
push
xchg
pop
mov
pop
lods
ss
xor
adc
add
sti
loope
push
or
cmc
add
xorl
inc
adc
cmp
and
and
in
loopne
inc
movsl
push
dec
ljmp
pop
push
insb
adc
xor
out
test
bound
scas
push
shlb
xor
mov
fbstp
or
jp
cmp
jne
push
jecxz
dec
rorl
shrb
xor
or
adc
mov
push
xchg
add
inc
fisubs
xchg
loope
add
lock
lcall
pop
shl
jae
cmp
sbb
insb
int3
into
xchg
ret
xorb
mov
xchg
cmpsb
addb
mov
and
sbb
pop
push
jge
mov
vandnps
mov
sbb
fsts
shrl
sti
imul
or
push
push
popa
mov
sarb
insl
shll
jne
adc
push
sbb
inc
mov
lret
lcall
fsubs
popf
cmpsl
jns
or
jg
fdivrl
xchg
sub
jns
adc
xor
loope
mov
mov
sub
xchg
xor
lock
flds
pushf
mov
jae
scas
cmp
and
addr16
mov
pop
or
out
popf
mov
ret
inc
iret
pop
insb
xor
ljmp
fwait
sub
sub
je
enter
aam
loop
xchg
mov
xchg
dec
enter
loope
push
enter
xchg
repz
loope
mov
leave
cmp
mov
repnz
push
dec
inc
cmp
or
and
mov
inc
inc
lahf
sbb
ficoms
cld
sub
out
loopne
flds
mull
push
inc
dec
test
sti
leave
daa
jbe
mov
adc
sub
icebp
fsubl
adc
pop
pop
or
ja
jae
movsb
add
jl
xor
jle
sbb
les
ret
xchg
and
aas
or
inc
sarl
xlat
jae
lcall
cltd
sbb
arpl
and
pop
leave
imul
jo
lds
cld
sbb
add
cmp
xchg
mov
outsb
and
xor
jns
dec
sbb
ret
rcll
xchg
mov
ds
cmp
mov
repz
xchg
flds
in
or
mov
pop
hlt
mov
dec
sahf
out
ss
negb
inc
fadd
adc
sub
ficoml
xchg
adc
mov
stos
sahf
sti
fs
cmp
mov
cmp
cmp
sub
cmp
pop
xchg
cmpsb
insb
mov
enter
cmc
std
mov
jg
ja
adc
dec
pop
stc
out
and
dec
push
imul
inc
int3
stos
adc
nop
dec
repnz
dec
or
ss
scas
fimuls
lcall
pop
clc
movsb
jo
sbb
add
js
fbstp
fcmovnu
xchg
mov
in
mov
jmp
adcl
orb
and
sbb
js
inc
or
pop
fwait
sbb
popf
es
adc
cs
mov
iret
out
xchg
shll
scas
add
imul
mov
lock
mov
fistpll
push
xbegin
push
jge
jb
add
pop
and
jnp
jmp
inc
xor
arpl
push
jecxz
xor
xchg
adc
hlt
mov
or
shl
add
test
pop
fiadds
jle
push
sbb
mov
mov
leave
int3
leave
pop
inc
sahf
and
mov
pop
in
mov
cld
jge
enter
fs
sub
test
xor
cli
out
xor
leave
push
push
or
sub
adc
inc
xchg
inc
sti
sbb
jecxz
pop
leave
dec
jle
cmp
add
aaa
lds
dec
addr16
insb
add
xchg
jmp
pusha
push
sbb
pop
call
inc
call
xchg
movsb
push
idivb
addr16
mov
call
outsb
andb
push
mov
jmp
or
aad
sub
dec
pop
gs
push
int3
add
push
mov
out
mov
inc
adc
jno
and
lods
mov
fidivs
loop
push
insb
and
psadbw
mov
or
jnp
adcb
imul
cmp
mov
sub
push
add
inc
xor
add
push
jge
lcall
cmc
fnstenv
fwait
cmc
pop
mov
imul
fildll
ret
lret
inc
mov
push
ficompl
cwtl
lock
outsb
imul
movsb
inc
in
jbe
jmp
loopne
push
fstp
ret
or
jnp
fnstcw
mov
fldl
dec
pop
movb
inc
cmp
and
lret
dec
les
xor
add
clc
fistl
sub
adc
xchg
fstpt
dec
lret
jb
sbb
gs
mov
bound
sbb
out
lea
sti
or
add
outsb
rcrb
sbb
sbbl
sbb
in
ss
stc
mov
call
out
pop
enter
jge
test
movsl
pop
flds
repz
or
inc
mov
dec
pop
cmpsb
inc
daa
pop
fldt
fs
push
test
sub
aaa
mov
js,pt
mov
stos
in
inc
pop
aas
xorb
leave
inc
test
jg
or
popa
mov
test
cs
js
cmp
xor
adc
fcoms
test
cltd
or
in
dec
mov
ror
arpl
scas
push
jp
adc
inc
fs
cmpsl
clc
mov
inc
fstpl
popf
mov
pop
es
dec
add
push
push
pop
xchg
push
pop
push
cmpsb
mov
addr16
out
or
xchg
pop
hlt
adc
iret
stos
aam
fs
repnz
xor
push
push
loop,pn
cmp
out
fmull
movsl
sub
lret
adc
rol
out
fwait
ds
push
xchg
sbb
pop
inc
cwtl
inc
lock
int
inc
lods
rcl
xor
les
mov
fisttps
ss
mov
mov
xor
loop
mov
mov
xlat
sbb
adc
dec
fwait
and
cmp
rclb
sub
cltd
push
mov
lods
push
inc
scas
dec
mov
pop
add
pushf
and
push
xor
mov
xor
mov
adc
mov
mov
mov
insb
in
into
lods
in
xchg
adc
cmpsb
push
ss
je
push
jae
pop
aad
or
inc
in
mov
fisubl
and
inc
inc
add
xor
jne
xchg
sub
pushf
test
movsl
cwtl
push
or
enter
jecxz
xor
stos
and
lret
pop
pop
stos
pop
dec
sbb
cmp
and
push
jp
xor
int3
sub
xor
xor
cmp
or
lretw
or
ljmp
divl
sub
jno
dec
push
fs
fprem1
sub
lea
call
fisttpll
arpl
push
iret
inc
cmp
mov
sbbl
cmpsl
test
and
pop
and
mov
fs
into
mov
sbb
or
pop
push
in
and
aam
cmpsl
adc
xchg
xchg
fwait
insl
out
inc
jg
bound
cmp
adc
add
add
daa
ret
shrl
xchg
ret
out
cltd
test
imul
int3
enter
mov
mov
test
mov
dec
sti
dec
test
imul
pop
mov
push
in
push
sbb
or
ficoms
in
fists
mov
shrl
xlat
add
jns
das
xor
mov
sub
xchg
insl
adc
aaa
lds
arpl
and
dec
movsb
enter
adc
insb
mov
aam
nop
push
mov
inc
jge
xor
jb
xorl
xorl
mov
fistpl
mov
xor
repz
jg
mov
push
inc
and
es
dec
das
push
mov
xchg
test
xor
xor
jne
popf
or
and
out
into
push
test
push
test
xor
mov
adc
dec
pop
popa
out
lret
gs
mov
leave
adc
jge,pn
mov
and
fs
aam
and
loope
jle
mov
or
push
mov
out
popa
lcall
aam
mov
into
xor
inc
adc
stos
rolb
insl
test
pop
fstps
cmp
pop
ret
pushf
adc
gs
mov
jecxz
pop
cltd
outsl
in
test
cmpsb
std
dec
fucomip
xor
outsb
push
pop
rcrb
add
xor
dec
push
adc
mov
ds
mov
adc
cmpl
jecxz
pushf
cmp
inc
loop
xor
and
or
adc
icebp
ficoms
and
pop
xlat
mov
pop
pop
xchg
cmp
popf
pop
fbld
xchg
data16
in
mov
mov
sub
pop
push
add
fcoms
mov
sahf
mov
dec
or
inc
xchg
sarl
inc
and
jb
and
xchg
dec
mov
adc
daa
test
scas
scas
push
clc
xor
sub
loopne
cltd
loopne
pop
sub
xchg
dec
data16
lahf
dec
loopne
dec
sbb
iret
xchg
out
mov
dec
mov
xchg
xor
and
jno
jno
push
icebp
sub
inc
rcrl
pushf
lock
push
fistps
mov
js
mov
dec
lcall
repz
sar
xchg
adcb
hlt
adc
ficompl
push
outsl
aam
test
mov
and
lods
xchg
mov
xchg
mov
mov
imul
fdivrl
push
jbe
cmc
jmp
out
dec
outsb
shrb
push
out
jnp
sbb
lods
cli
sbb
or
xor
mov
jb
adc
jecxz
adc
xchg
cmp
adc
pop
cwtl
es
je
repnz
lahf
add
push
sbb
and
push
sbb
mov
cmp
pop
lods
dec
or
es
xlat
pop
aad
adc
movb
outsb
mov
not
jmp
xchg
mov
xchg
sub
or
fimull
or
cmpsl
cmp
xchg
lcall
cmp
imulb
jne
or
insb
aam
aaa
loope
xchg
inc
xchg
cmpl
add
and
dec
push
mov
icebp
hlt
cmpsb
and
adc
lret
pop
lods
sahf
adc
sahf
jmp
mov
daa
push
jo
sbb
pop
fisttpll
insb
leave
cmpsb
sar
mov
sbb
daa
test
into
push
loopne
pop
fidivs
inc
mov
shlb
sbb
adc
jmp
jl
arpl
cmp
mov
mov
or
cmpsl
pop
test
cmc
jns
js
inc
sub
xchg
dec
dec
push
mov
cmp
mov
xor
std
sbb
aad
mov
pop
mov
or
pop
sub
in
jno
jns
es
sub
leave
in
jle
fldcw
cmp
adc
mov
stos
xor
and
iret
cmp
hlt
outsb
add
movsl
pusha
sbb
or
cli
cltd
adc
ret
into
pop
or
sbb
divl
ds
rorb
cmpsb
lods
push
icebp
inc
les
xor
xchg
add
pop
je
imul
mov
in
out
dec
call
gs
mov
aaa
mov
sbb
sti
es
push
push
pushf
in
adc
loopne
rcrb
jmp
and
jo
fstpl
stos
lea
xor
and
pop
xor
and
cmp
fsubrl
lods
push
inc
test
jmp
inc
cmp
hlt
in
jmp
and
xor
pop
push
mov
rol
pop
cwtl
das
jns
or
and
or
sub
inc
arpl
inc
es
jl
lret
dec
js
hlt
mov
pop
mov
or
cmp
adcl
and
shl
mov
pop
call
or
or
jnp
inc
lods
mov
adc
inc
incl
shlb
call
shll
into
ret
fiadds
xchg
xchg
arpl
stc
pushf
add
mov
sbb
and
dec
comiss
inc
jle
mov
enter
out
push
sbb
sbb
pop
fsts
jmp
jns
cltd
xor
and
ss
stos
xor
mov
sub
pop
sbb
scas
aas
and
push
mov
dec
mov
xlat
scas
iret
pop
int
jb
in
cmpsb
mov
adc
mov
adc
dec
andb
dec
cmp
dec
mov
test
jp
ret
rol
mov
test
hlt
add
sub
or
jl
shll
xor
push
cmp
jb
and
iret
mov
lret
das
inc
sbb
xchg
imul
mov
dec
sbb
add
jl
adc
inc
cmp
mov
ret
fmull
sub
fs
rcrl
and
jmp
push
jge
cmpsb
mov
ljmp
sub
in
sbb
imul
xchg
sbb
push
imul
mov
fcmovnbe
cmpsb
jae
aas
icebp
add
cwtl
jl
adc
ret
fs
rorb
jmp
in
ficomps
add
test
push
jnp
fldt
jns
xor
dec
pop
popa
out
cmp
mov
fldl2t
cmc
mov
out
sbb
sbb
stos
mov
shr
inc
mov
push
inc
push
pop
fs
out
addr16
sbb
sti
shlb
dec
into
out
popf
cmp
imul
jle
mov
cmp
add
lods
fnstenv
sbb
cmpl
sahf
dec
jne
scas
dec
insl
push
sbb
inc
inc
pop
mov
aad
mov
cmp
dec
repz
test
insb
jmp
insb
xchg
outsb
lret
andb
in
xor
and
out
adc
dec
xor
mov
inc
adc
lds
mov
lret
xchg
or
pop
ficoms
int3
inc
sbb
pop
insl
in
sbb
mov
fisubrs
aas
movsb
int3
mov
out
and
lock
ret
int3
lea
cmpsb
jae
mov
mov
mov
push
sti
mov
cmp
adc
lods
pop
pop
lret
dec
gs
pushf
imul
xorb
jge
and
icebp
jcxz
fsubl
scas
cld
leave
fstpl
jno
stos
fnsave
cmp
mov
cld
cmpsl
jns
sarb
mov
mov
and
cmp
or
sub
out
dec
popa
sbbb
sub
aas
js
and
sbb
xlat
cwtl
jl
arpl
sbb
mov
test
in
divb
lock
int3
add
test
lret
dec
cmp
mov
mov
or
inc
or
loopne
inc
cmpsl
in
push
pop
fmulp
enter
cmp
mov
pop
cwtl
or
aaa
mov
cmp
nop
aaa
ss
push
mov
xor
jbe
push
addr16
jle
jae
decl
arpl
push
push
insb
adc
nop
xchg
pop
ja
push
jg
std
mov
icebp
xchg
push
mov
icebp
and
lret
lahf
inc
mov
push
rcrl
push
or
pop
and
pop
sbb
test
xchg
test
iret
jmp
loope
nop
data16
push
mov
dec
js
sub
aam
lret
lahf
orl
aad
dec
push
xor
push
sbb
mov
adc
pop
cmp
bndldx
adc
ret
icebp
mov
lcall
sbb
jbe
mov
xchg
xor
jp
loop
stc
mov
mov
and
movsb
xchg
inc
add
dec
test
shll
sti
ret
and
push
mov
sub
stos
lea
sub
add
cltd
or
mov
aam
std
xor
xchg
mov
or
std
jne
add
fmul
mov
adc
fisttpl
rorl
outsl
cmpsl
sbb
xchg
mov
xor
mov
mov
mov
cmp
push
shlb
jmp
mov
aas
aaa
adc
fsubrl
push
divl
outsb
xchg
stc
dec
out
mov
negb
xor
insb
dec
adc
jmp
sbb
push
andb
push
lds
movsb
jne
ds
scas
pop
push
std
push
aad
mov
mov
pop
add
fwait
jbe
decb
push
es
push
adc
leave
dec
iret
jle
in
inc
movsl
mov
repz
adcl
hlt
xchg
pushf
push
sbb
and
test
fistl
ret
in
mov
jge
daa
and
incl
mov
push
pop
or
in
adc
and
xchg
hlt
fisttpll
insb
ss
xchg
orb
add
into
xor
clc
pop
and
rcr
mov
sbb
push
in
mov
sub
adc
pop
fsubrl
adc
movsl
pop
mov
ljmp
icebp
icebp
repz
push
mov
dec
aas
xchg
test
dec
aas
push
or
jecxz
pushf
subl
gs
mov
jl
cmp
in
std
ret
call
jnp
inc
jg
sahf
or
hlt
jne
adc
jl
stos
sub
pop
hlt
mov
shrl
mov
push
shrb
rcrb
push
inc
xor
add
mov
cltd
fs
lods
fwait
nop
pop
push
pop
popa
leave
xor
lds
add
push
pushf
into
jae
mov
fs
scas
adc
mov
movsl
push
cmc
lcall
negl
or
shrl
and
xor
and
sahf
lock
jle
xorb
mov
mov
in
dec
pushf
jmp
mov
xor
fmuls
adc
repnz
sub
cmp
icebp
subl
xchg
jns
xor
dec
repnz
popf
std
ret
add
fucomp
mov
ret
dec
jne
pop
lock
ficompl
rcll
lock
push
push
out
loop
jno
fimuls
inc
int3
xchg
sbb
mul
into
sub
ret
aas
adc
mov
mov
adc
adc
cltd
mov
mov
adc
das
or
cltd
paddusw
jle
mov
sbb
adc
or
cmp
xchg
mov
jno
lcall
sub
mov
jne
sbb
loope
adc
inc
stos
add
cmp
call
pcmpgtb
repz
dec
mov
rorb
mov
sahf
cli
push
push
inc
pop
inc
out
nop
dec
pop
sbb
or
iret
pop
insl
xor
jl
mov
lahf
hlt
pop
cmpsl
dec
aas
repz
test
movsb
ljmp
in
lret
incb
jnp
testb
pop
xor
inc
dec
in
pop
dec
mov
rorl
inc
sarb
push
sbb
jge
push
lock
xlat
push
popa
sbb
jnp
iret
fs
and
cli
mul
xor
jno
xor
push
jle
je
mov
fs
push
aas
and
or
sbb
movsb
sahf
lret
or
mov
aad
dec
push
push
jmp
leave
push
jecxz
xor
inc
pushf
pop
dec
add
sub
mov
lock
push
int3
jg
push
adcb
dec
pop
stos
and
xor
shll
aaa
out
sbb
daa
dec
int
push
popf
dec
xchg
sub
sub
sbb
cmp
pushf
inc
cli
mov
insl
mov
mov
aas
sbb
mov
cmc
mov
adc
hlt
cmpb
adc
mov
hlt
xor
sub
and
jb
fldenv
mov
pop
shrl
fmuls
bound
scas
xchg
jge
push
sbb
int3
or
nop
sbb
mov
push
je
xchg
push
push
add
jno
movsb
jg
aad
cmp
adc
jmp
xchg
mov
test
and
les
mov
mov
mov
add
iret
mov
mov
inc
fldcw
enter
add
jmp
mov
adc
leave
sub
jno
push
icebp
hlt
aad
mov
hlt
cwtl
mov
lahf
sub
lods
jl
sbbb
and
sub
adc
mov
cli
andb
std
mov
adc
cmc
add
jecxz
inc
lea
sahf
aam
lret
idivb
mov
gs
inc
test
addr16
xchg
ja
inc
xchg
loop
addr16
addb
pop
xorb
or
icebp
enter
push
inc
push
jo
popa
ret
xor
ror
jb
pop
cli
cmp
mov
loopne
xchg
dec
xlat
pushf
jp
ret
mov
xchg
sub
das
fisttpl
xor
cmpsl
lock
adc
imul
sbb
cwtl
pushf
inc
pop
sub
rcrl
jns
xchg
ds
mov
jecxz
cmp
sub
xlat
adc
mov
xor
int
cltd
enter
mov
fnsave
clc
fistl
int
decl
movsb
mov
jle
jecxz
adc
in
aam
fadd
cmpsl
rorb
movsl
leave
sub
pushf
jno
pop
xorl
xchg
clc
in
and
add
int
sbb
sub
xchg
aas
dec
mov
lcall
mov
or
repnz
or
cmp
fcmovu
fisttpl
lods
ds
in
and
test
rclb
mov
aam
iret
mov
hlt
sbb
mov
out
pop
cmp
cs
add
dec
push
inc
int3
fldt
mull
js
fsts
stc
arpl
mov
push
inc
mov
outsl
orb
adc
push
clc
fimull
into
push
imul
xchg
xor
test
mov
lea
lcall
mov
mov
ret
xor
dec
cmp
dec
outsb
dec
repnz
and
in
xor
out
aaa
pop
dec
movsb
add
jns
fcmovnbe
mov
ja
ss
into
addr16
sarb
jmp
xchg
and
imul
mov
pushf
pushf
mov
xchg
clc
shl
fmuls
loop
repz
fisubl
pop
sub
adc
shrl
adc
cmp
dec
lret
dec
dec
repnz
mov
int3
sbb
int3
fiaddl
movsl
in
stc
jb
shlb
xchg
fldenv
jo
pop
sub
hlt
dec
cmp
in
cmp
pop
fucom
cmp
push
fwait
mov
jg
dec
mov
pop
pop
sub
and
shlb
push
cmp
aas
movsb
mov
out
sbb
xchg
sbb
imul
popa
inc
pushf
mov
or
arpl
pop
sbb
imul
inc
outsl
fnsave
dec
ljmp
cmp
shll
inc
add
or
into
outsl
inc
pop
fcmovb
mov
sahf
inc
lock
xchg
xchg
pop
bnd
stos
or
pop
add
rcl
push
xchg
sbb
fsubr
sbb
mov
insl
mov
repz
pop
jne
shrl
movsl
movsb
outsb
push
push
push
or
cld
inc
xor
fwait
cmpl
stc
xor
cmp
scas
cmp
fiaddl
repz
data16
lods
dec
scas
xchg
push
fisubrl
sbb
inc
ret
dec
cli
lret
aas
mov
cmpsl
mov
dec
cwtl
adc
pop
sub
into
mov
and
fnstcw
out
aad
cmpsl
jle
xchg
outsb
add
add
and
fidivrs
outsb
loop
mov
or
push
ss
lret
outsb
daa
test
push
ja
aad
in
jb
and
sub
sti
ss
fidivrl
push
andl
jns
or
and
push
xchg
out
in
idivl
into
add
push
dec
out
lock
and
jne
ljmp
sub
push
std
push
out
js
pop
adc
and
addr16
frstor
js
or
lea
fstps
pushl
je
stos
fcmovnb
stc
cmp
neg
loopne
std
mov
push
adc
push
scas
mov
sub
sub
shll
sahf
lret
adc
in
jno
sub
ret
or
dec
pop
or
xor
cltd
xor
add
mov
jg
xchg
lahf
fbld
cltd
arpl
adc
lock
jns
push
mov
scas
adc
popl
cmp
sbb
addr16
sub
xchg
mov
add
loop
daa
aad
jno
push
pop
inc
and
mov
nop
leave
ljmp
sbb
jno
into
outsl
adc
push
inc
pop
movsl
cs
mov
dec
in
leave
fsts
ljmp
cli
arpl
stos
mov
pop
in
shlb
mov
decl
movsl
cmp
lret
jge
adc
mov
sbb
repnz
xchg
into
mov
std
lahf
and
mov
push
ror
mov
cmp
inc
lods
test
pop
xchg
int
xchg
subb
out
fidivrl
add
jg
and
dec
lea
jp
sub
fisubrl
jno
xor
les
ds
lret
dec
sub
jmp
sbb
and
enter
insb
xor
inc
add
lock
mov
outsb
inc
lods
sbb
rcrl
xor
jo
sub
insb
test
mov
push
adc
cltd
push
xor
jo
shrb
cmpl
push
adc
out
mov
inc
mulb
je
flds
jecxz
pop
mov
xor
inc
push
mov
mov
add
cwtl
out
push
inc
inc
cwtl
dec
push
mov
cmpsb
lahf
gs
addb
lahf
push
notb
pop
inc
cmp
inc
xlat
idivl
push
mull
aad
pop
and
insl
xchg
or
lret
jnp
push
push
adc
iret
mov
xchg
addr16
sbbb
insb
mov
sbb
pop
sbb
shl
push
stc
mov
sti
mov
sub
pop
aam
push
aam
shl
adc
dec
xchg
pop
jns
cmp
cmp
dec
cwtl
cmpb
icebp
ss
jge
popa
ja
arpl
divb
mov
xor
fdivr
out
cmp
loop
mov
jmp
out
fadds
aas
pop
cmp
lods
dec
dec
lret
mov
idivl
inc
dec
stos
add
div
jmp
movsl
cs
push
mov
push
and
call
iret
pop
out
push
cmp
pop
cmpsb
jp
and
push
cmp
stc
test
push
and
pop
ja
pop
jg
fs
xchg
xchg
push
pop
xchg
scas
push
push
pop
fisubs
mov
fstps
sbb
std
inc
and
imul
and
pop
and
xchg
add
or
mov
mov
sti
mov
sbb
daa
mov
fistpll
std
dec
add
dec
scas
lock
xchg
popa
mov
inc
dec
mov
mov
push
loopne
adc
or
pop
fs
lret
test
stos
dec
daa
rclb
cmp
mov
inc
lret
inc
ret
mov
xor
xchg
shrb
push
outsl
in
leave
flds
mov
dec
stos
xor
mov
xchg
xlat
or
pop
icebp
or
sbb
xchg
jmp
outsl
sub
xor
test
jnp
les
sti
daa
cmpsl
jmp
push
jbe
call
rcrl
mov
or
test
fisttpl
add
in
push
aaa
sti
lret
cmp
jno
mov
mov
push
xchg
cmp
cmpb
mov
jae
in
popf
aas
iret
out
and
mov
jge
movsb
push
mov
pusha
sbb
push
icebp
test
mov
push
mov
ja
push
or
jecxz
or
arpl
add
and
mov
push
ds
daa
iret
push
imul
pusha
ficomps
push
mov
mov
iret
xlat
xchg
cmpsb
ret
es
sub
imull
sbb
pop
cli
scas
inc
jno
lret
mov
push
and
pop
loopne
inc
cmpb
es
test
jbe
sbb
cmp
pop
xchg
or
enter
cmpb
pop
jp
push
popa
test
ret
mov
push
shlb
rcr
iret
sub
test
push
cmp
pop
divl
adc
add
jg
and
mov
sbb
sbb
xchg
fcoms
and
movsl
xchg
out
rorb
jo
inc
dec
adc
push
dec
icebp
and
mov
adc
sbb
popf
mov
jns
cmpsl
fwait
jbe
test
mov
les
insb
xor
mov
or
mov
lret
xor
les
das
int
fld
pop
das
insl
sti
xchg
add
fdivrs
dec
and
mov
loope
add
das
repnz
mov
es
leave
sub
or
ja
js
cmpsb
test
arpl
push
popf
mov
out
movsb
push
addr16
sub
ds
or
ja
cmp
mov
mov
add
ficoml
push
movaps
pop
mov
outsb
je
mul
mov
movsb
xchg
imul
arpl
cltd
cmp
xlat
jge
mov
inc
lock
sbb
in
push
mov
push
xor
sbb
fwait
sub
out
fdivl
addl
or
sbb
cmc
mov
add
test
fdivp
imul
clc
stos
xor
fiaddl
jae
mov
dec
out
jns
add
push
sub
out
sbb
sbb
mov
sbb
mov
insb
add
outsl
inc
clc
pop
leave
mov
rcr
pusha
or
imul
adc
jb
or
test
and
pop
jne
icebp
add
jg
add
mov
cmpsl
xchg
fisubrl
cmc
cmpsl
fadds
sbb
ja
rorb
mov
pop
xor
js
pop
add
fimuls
ret
popf
repnz
push
dec
jmp
fmul
mov
mov
fwait
testl
lahf
loope
mov
mov
add
sub
xor
outsl
rcrl
imul
push
lret
insb
das
testb
push
iret
adc
std
loopne
xor
mov
dec
cmp
mov
push
mov
sahf
xchg
push
xchg
sarl
sub
xor
and
jb
xchg
jg
cmpl
loop
int3
neg
jge
sbb
adc
mov
cltd
jecxz
dec
push
push
xor
ljmp
jne
inc
daa
test
fs
sti
sub
icebp
or
pop
iret
inc
pushf
stos
popf
dec
sbb
push
out
andl
add
fistps
sub
xor
int
clc
jae
aam
jo
flds
mov
aas
inc
ljmp
push
push
xchg
mov
mov
cmpsb
outsl
fs
cld
call
mov
or
and
jg
mov
rclb
fwait
xchg
sahf
nop
xchg
jno
jbe
sub
pop
xchg
loop
sbbl
cli
pop
add
repnz
pop
pop
xchg
push
imul
rcrb
shrl
push
mov
insb
leave
mov
ficomps
sub
pop
xchg
loopne
pop
test
cmp
sub
aam
pop
push
push
shlb
xor
cld
jmp
mov
ret
and
pop
or
mov
xchg
mov
lock
sbb
sbb
sub
inc
mov
lock
mov
push
mov
mov
bound
jno
sarb
mov
xchg
mov
out
jmp
popl
and
jne
in
push
rclb
imul
test
or
adc
jecxz
fidivrl
push
pop
and
mov
insl
aaa
aaa
gs
test
or
pop
xchg
scas
cmp
inc
jae
in
es
lods
jg
push
add
inc
stc
out
jmp
ss
sub
pop
mov
pusha
mov
or
and
scas
or
push
les
mov
and
lret
lret
xchg
pop
aaa
roll
mov
or
pop
lea
ret
inc
sbb
pop
pusha
mov
mov
aas
mov
cld
dec
sbb
scas
stos
mov
in
push
in
pop
jno
adc
mov
cmovae
add
sub
pop
pop
inc
lea
jnp
xchg
mov
hlt
imul
outsl
das
addr16
or
es
ja
inc
nop
jge
into
fidivs
in
dec
mov
sbb
cmp
inc
cmc
pop
adc
mov
fnstenv
aaa
sbb
outsl
movsl
bound
mov
enter
iret
in
add
test
mov
rorb
add
out
inc
and
arpl
jg
loopne
or
std
add
pop
xor
sahf
std
movsb
xorb
push
or
and
inc
cltd
std
addr16
mov
es
test
roll
jo
mov
scas
cmp
cmp
movsl
sbb
and
mov
ret
repz
jle
fistpll
cld
imul
sub
daa
test
bound
imul
cli
push
mov
popa
mov
inc
inc
mov
pop
cmpsl
sbb
xchg
into
pop
aam
ss
std
mov
hlt
pusha
adc
lock
sti
data16
dec
call
outsl
xchg
sub
lock
aas
stos
and
lret
repnz
push
cmp
or
jnp
call
mov
popa
xchg
xor
xchg
xor
xor
jp
add
mov
fsubrp
mov
cmp
mov
addr16
call
scas
sbb
test
xchg
test
and
and
fwait
xor
mov
ret
jnp
fcomps
jmp
inc
mov
dec
add
or
and
cmp
insb
xor
mov
fsubrp
dec
pop
mov
clc
xor
outsl
cs
push
jmp
sub
pop
cmp
cmpb
push
das
sbb
adc
mov
je
aas
push
rolb
stc
cmp
aam
adc
mov
clc
and
loopne
arpl
and
scas
inc
mov
cmc
push
push
gs
mov
mov
fbstp
dec
adc
push
out
lds
imul
cwtl
mov
movsb
inc
dec
mov
pop
mov
push
mov
sbb
movsb
and
inc
cmpb
loopne
push
push
pop
or
jae
mov
iret
and
std
or
sbb
cmpl
lret
sbb
push
rorb
jno
or
popf
push
fdivrs
mov
and
mov
out
test
mov
jecxz
jnp
loope
movsb
xchg
mov
movsl
out
sub
flds
out
shlb
lret
fs
incb
xchg
inc
addr16
leave
cmpsl
das
adc
ficomps
adc
mov
loope
dec
shlb
movsl
fldcw
and
out
loop
dec
pop
test
test
dec
mov
ja
fs
adc
lcall
je
dec
push
pusha
push
xlat
sti
sub
xchg
pop
jg
push
mov
push
mov
daa
mov
xor
fdivrl
pop
out
inc
pop
mov
jbe
pop
aam
add
mov
shlb
add
adc
push
dec
pusha
xchg
inc
roll
and
xchg
adcl
cltd
lods
mov
xchg
jge
push
in
rclb
hlt
addr16
inc
loop
jno
ret
dec
and
jecxz
inc
enter
push
or
scas
ds
mov
int3
or
xchg
add
cmpsl
jnp
pop
dec
mov
adc
leave
jecxz
sub
xchg
fcoml
lock
fsubs
sti
imul
inc
mov
lock
or
pusha
jns
add
jbe
outsb
orl
repnz
cmp
cmpsb
dec
adc
loop
pop
xor
fcoml
pop
push
push
imul
mov
jo
das
movsl
fistps
arpl
push
roll
adc
add
repnz
adc
in
and
outsl
jl
cs
jg
std
inc
and
outsl
dec
mov
mov
movsl
out
ljmp
lock
das
insb
push
pop
jno
jecxz
mov
mov
add
pushl
push
sti
fcompl
sub
pop
scas
sub
mov
jo
mov
out
outsb
push
xor
pusha
scas
int3
lods
xchg
notb
cmp
mov
or
data16
aaa
aas
xor
push
addr16
mov
pop
push
xor
je
fnstsw
fisttps
cmpsb
popf
in
rolb
mov
sbbb
je
sbb
aam
lcall
mov
pop
inc
mov
scas
push
loop
scas
enter
movsl
mov
sub
fcmovnb
mov
stc
repnz
frstor
xor
daa
out
xchg
fisubl
in
aam
inc
cwtl
sbb
mov
adc
cmp
imul
mov
shlb
in
outsb
push
add
xor
sub
sub
inc
or
call
cmp
fistl
iret
mov
xor
jl
es
or
pop
test
std
xor
pushw
sub
push
inc
adc
sub
dec
pop
inc
mov
out
lock
int3
sbb
adc
ss
jbe
dec
xrelease
or
test
push
sub
in
push
jae
mov
loopne
inc
jno
sbb
mov
sbb
mov
xchg
jbe
test
adc
outsl
cmp
dec
test
lcall
aad
inc
out
cmp
and
bound
int
push
test
jae
pop
cmp
pusha
add
cs
pop
and
clc
lret
aaa
adc
add
inc
mov
push
loop
add
sbb
stc
cli
mov
fwait
movsl
ret
hlt
mov
call
or
and
rclb
repnz
lods
jns
imul
test
push
lds
or
sbb
int3
pop
jg
outsb
pop
dec
movsl
sub
outsb
push
gs
das
scas
cld
xchg
dec
ret
sub
add
jo
xlat
stos
dec
xor
sahf
aaa
loopne
ret
inc
je
xchg
xlat
aam
inc
mov
fwait
notb
mov
out
mov
pop
sbb
add
mov
mov
jp
out
cld
jns
in
divb
dec
inc
adc
adc
movsl
nop
xor
xor
adc
jne
pop
mov
mov
sbb
push
or
pop
mov
mov
sahf
repnz
daa
fdivrl
inc
jo
cli
insl
pop
push
mov
daa
push
lret
lods
xchg
sti
ja
int
pop
cmc
outsl
lahf
shrl
xchg
jo
jl
jbe
xchg
testb
sahf
dec
shl
xchg
push
in
cs
xchg
sbb
mov
sbb
sbb
leave
addl
gs
nop
lock
lret
dec
add
push
xchg
xchg
lea
jle
jno
or
mov
adc
rclb
mov
sbb
loop
cltd
xchg
lret
and
dec
or
aaa
out
into
movsl
sub
insl
fcmovnbe
push
fwait
movsb
jl
fmul
dec
add
jae
mov
lret
ret
iret
sbb
mov
cmp
fdivrl
je
xchg
mull
popa
adc
popa
cli
subb
xor
adc
sbb
shl
xor
pusha
or
popf
xor
inc
jae
jmp
mov
sbb
xchg
and
jmp
inc
stos
dec
push
inc
test
inc
jb
jl
fs
pop
pop
pop
in
ss
ljmp
mov
fstps
cld
fnsave
addr16
add
shl
xchg
xchg
mov
sub
sbb
ret
mov
inc
dec
sub
xor
sahf
pop
outsb
xlat
lea
jl
add
jecxz
out
jo
xor
mov
orb
fcmovnu
loop
jl
push
jbe
not
sar
sbb
and
scas
pop
jno
fisubrl
inc
in
out
lret
or
inc
dec
int3
aaa
or
xor
mov
or
dec
arpl
lods
bound
cmp
imul
bound
mov
in
push
mov
xor
test
xchg
rorl
fidivrl
andb
xor
cmp
mov
lods
out
popf
loopne
movsb
je
inc
push
sbb
xchg
call
popa
push
hlt
testb
pop
out
and
pop
jb
dec
sbb
in
xor
aas
xor
dec
mov
leave
in
lret
mov
jge
push
fdivl
mov
loopne
xchg
pop
sub
cs
mov
or
test
jmp
jmp
stos
stc
orb
inc
cmp
cltd
jp
je
repz
and
ret
test
in
sub
sbb
into
sub
xchg
negl
fcompl
cmp
push
sub
push
mov
pop
mov
and
inc
insl
lret
mov
call
jnp
add
sahf
in
xor
push
xor
leave
pop
daa
cmpb
dec
mov
sub
pop
lods
fldt
fsubl
sub
loopne
jno
adc
lret
cmp
mov
xchg
pop
or
out
int
or
sub
push
les
mov
sub
cmp
add
jg
mov
sbb
lds
or
pop
or
push
fsub
popa
jbe
aaa
movsbl
lods
dec
push
cli
mov
cmc
inc
xor
lcall
das
add
xorb
pop
mov
sbb
rcrb
test
lcall
jp
cmp
scas
mov
mov
lea
jne
stos
xchg
addl
jmp
hlt
inc
pop
mov
xchg
in
out
in
jbe
fwait
arpl
mov
loope
aaa
mov
mov
mov
push
or
pop
lds
loope
or
sbb
pop
or
mov
dec
std
xchg
xor
inc
or
cld
push
fwait
neg
lds
outsb
jecxz
jns
lahf
icebp
adc
dec
pop
imul
jg
and
scas
arpl
pop
inc
pop
inc
pop
mov
sub
imul
sub
call
xacquire
iret
in
jno
cmp
xchg
movsl
nop
cwtl
inc
test
add
jg
push
adc
xor
outsb
sbb
inc
pushf
scas
mov
sub
imul
lahf
out
ja
pop
cmp
cmpsb
xor
test
int3
mov
pop
outsb
fwait
ret
adc
daa
imul
pop
cmp
adc
inc
jae
dec
arpl
sbb
lret
pop
xlat
push
adc
jl
arpl
mov
lods
mov
sub
int
aaa
mov
and
icebp
cmp
adc
lcall
lcall
outsb
cmp
cmp
xchg
pop
jp
mov
in
stc
push
pushf
mov
cmp
mov
loopne
rclb
mov
inc
lds
bound
pop
add
mov
add
xchg
pop
ljmp
test
repnz
ror
xor
mov
fistpll
idivl
sti
popa
jmp
or
and
xchg
jb
cwtl
das
stos
pop
ja
lcall
cld
scas
pop
test
jno
jecxz
outsl
pop
mov
add
int3
inc
adc
mov
ds
add
or
fildll
dec
jmp
mov
jo
xchg
rorb
dec
cmp
daa
or
bound
stc
pop
push
sarb
mov
sti
jno
in
lret
lcall
clc
adc
rcll
or
test
pop
lods
push
std
mov
inc
xchg
mov
test
into
or
mov
adc
aaa
jmp
cmp
stos
push
add
sbb
icebp
mov
adc
and
sti
mov
xchg
sub
pusha
jbe
loop
jl
xlat
repz
mov
mull
insb
loope
push
std
pop
pop
push
push
adc
rcr
loop
mov
in
pop
add
mov
or
jae
xor
push
stos
lods
and
rcl
or
movsb
jg
fdivr
mov
lahf
cmpsl
daa
xor
dec
xchg
mov
and
xor
jl
call
inc
cmpb
dec
lcall
push
adc
jg
jne
push
negl
movsl
imul
cmp
lods
add
and
xor
popf
dec
push
rcl
lret
fwait
or
iret
ja
mov
in
fnsave
enter
jnp
idiv
iret
pop
sbbb
push
or
sahf
ret
push
xor
lods
sub
mov
xor
mov
int3
pop
outsb
stc
mov
pushf
in
dec
loopne
mov
or
loopne
filds
andb
in
add
inc
dec
dec
pop
push
lcall
pop
dec
popa
lods
iret
pop
and
shll
test
idiv
out
mov
mov
test
push
sub
push
dec
popa
out
push
daa
sbb
ret
ficomps
dec
add
or
std
insl
lods
pop
dec
popf
jmp
cmp
ljmp
out
notl
leave
jecxz
push
test
fldenv
xor
jg
lcall
push
aad
das
aad
scas
test
outsl
add
pushf
test
ss
lea
mov
fnclex
movsb
add
repnz
lods
loop
rcrl
and
cmc
ret
popa
sbb
adc
adc
cld
cmc
mov
inc
loop
movsb
cmpsl
fs
jb
add
popa
and
fiadds
mov
sub
into
cmc
adc
out
cs
sub
cmp
insl
sub
sbb
xchg
cmp
inc
popa
adc
jns
nop
std
sbb
mov
fs
sub
xchg
repnz
cli
and
jae
and
andb
pop
adcl
mov
ss
inc
inc
and
mov
xor
in
push
repz
mov
and
jg
outsl
xor
aaa
inc
sub
fildl
xlat
push
clc
mov
arpl
ljmp
aas
ljmp
negl
out
cmc
test
fisttpl
shl
mov
xor
mov
pop
or
jae
pop
jmp
sbb
movsb
lcall
sub
movsb
stos
out
mov
sbb
or
xchg
dec
js
scas
mov
cltd
cmp
sbb
pop
addr16
xchg
aaa
das
outsb
fmuls
xchg
testb
sarl
mov
xor
aam
dec
je
call
or
inc
bound
sbb
mov
cwtl
movsl
cltd
stos
andl
sbb
int
sbb
or
push
loop
sahf
aas
sbb
jnp
sub
test
and
add
add
push
xchg
leave
mov
dec
gs
or
fdivr
test
add
mov
xchg
stos
stc
popa
sub
push
sbb
das
inc
outsb
fisubs
add
jle
xchg
arpl
jmp
mov
mov
cs
adc
ror
arpl
xor
fldcw
cmp
lss
mov
mov
decb
leave
addr16
mov
jno
shll
shll
in
test
sub
adc
mov
cmpsb
repz
into
xor
push
pop
std
dec
pop
test
pop
popf
sahf
fcmovnb
dec
dec
pusha
shll
fiadds
cmp
test
mov
scas
jecxz
jg
and
repz
jle
test
adc
ficoml
les
fmul
hlt
test
inc
inc
fstps
out
ret
pop
dec
hlt
pop
je
movsl
cmp
push
jnp
lods
xchg
xchg
mov
push
push
inc
pop
cli
out
sbb
scas
lds
pop
aaa
cmpb
push
movsl
arpl
and
sbb
call
out
cs
ds
dec
pop
lea
mov
das
mov
sti
dec
mov
movsb
pushf
and
or
insl
loope
ljmp
fistl
adc
jo
pop
xor
mov
mov
test
xchg
add
cmp
or
aam
cld
sahf
cs
mov
aaa
loopne
outsb
dec
repz
mov
jne
mov
inc
jp
mov
mov
pop
out
mov
or
jo
mov
testl
xchg
mulb
pop
aaa
push
or
cwtl
mov
push
test
repz
mov
dec
shl
push
inc
psrld
xchg
mov
xchg
dec
inc
inc
fmuls
fsubrl
test
dec
sub
mov
inc
addl
fnstcw
ret
cmp
sbb
jbe
push
pop
and
mov
cmp
push
cltd
mov
sbb
insl
cld
mov
xchg
repnz
pop
xor
cmp
adc
adc
repz
adc
add
rcl
cmpsl
mulb
mov
test
pop
and
push
in
inc
and
mov
ficomps
sarl
aas
sti
aam
adc
and
cmp
sbb
in
js
lcall
and
sahf
sub
push
pop
mov
add
sub
mov
lods
mov
lods
or
pop
scas
push
lcall
dec
test
inc
sub
out
pop
je
mov
fistpl
pop
test
push
test
mull
addl
add
lahf
dec
jb
sub
xor
and
repz
mov
lahf
pushf
repnz
lods
test
add
push
xor
dec
cld
lods
cmc
push
leave
jno
popa
xor
add
hlt
gs
push
add
xchg
xor
stos
push
push
pop
sbb
in
fs
inc
sbb
jle
push
jbe
dec
sbb
je
and
popa
adc
movsb
or
mov
decl
cli
movsb
js
stc
addr16
popf
xchg
clc
xchg
mov
pop
arpl
sbb
inc
or
aad
dec
dec
sbb
xor
dec
xchg
push
or
push
insb
fcmovnb
rclb
mov
adc
shll
test
sbb
push
loope
jb
roll
xchg
data16
dec
mov
pop
xor
mov
cmp
adc
idivl
call
adc
cmpsb
fdivl
fldl
fistps
adc
int3
push
jp
jno
push
cmpsl
jmp
lods
shlb
mov
arpl
pop
xchg
fstpt
stos
add
aam
sti
or
mov
rcr
jb
test
adc
sub
xchg
fmull
xchg
lret
mov
push
jl
push
out
mov
sbb
jl
cli
pop
das
add
dec
stos
cmpl
ss
dec
stos
dec
popa
shlb
sub
cmp
jno
jecxz
adc
mov
je
std
pop
lea
rclb
rcr
outsb
or
xchg
xchg
add
nop
xor
push
adc
lds
pop
lods
testl
inc
lds
in
es
cmpsl
sbb
jmp
or
arpl
or
and
aad
mov
xor
movsl
sub
sbb
je
jbe
adc
in
push
ja
adc
fld
inc
and
notb
les
add
call
lea
in
sbb
into
lds
cmp
sbb
mov
push
cltd
mov
xchg
mov
cmp
aaa
lea
push
flds
mov
cli
sub
jbe
std
mov
dec
push
je
lret
jae
pop
dec
sub
push
enter
push
push
cmp
gs
movsb
mov
xchg
cmp
pop
mov
adc
int
jbe
mov
into
xchg
sti
mov
js
int
int3
sbb
orl
out
pop
pop
mov
push
cmpsl
stos
cmp
mov
sub
out
adc
rclb
adc
sbb
jg
adcb
roll
or
test
xchg
adc
fs
pop
iret
outsl
ret
xor
inc
out
inc
xchg
xchg
push
xor
das
out
dec
add
cs
inc
clc
jp
or
pop
cs
lods
push
in
je
testl
mov
das
imul
in
testb
icebp
std
inc
nop
xchg
arpl
aad
cmpsl
xchg
test
mov
hlt
jo
hlt
mov
jns
sub
xchg
scas
icebp
in
jl
outsb
push
cs
insl
mov
sub
int3
fdivrs
sbb
sbb
mov
adc
mov
mov
adc
cmp
xchg
rorl
adc
sbb
daa
jecxz
adc
push
aam
aam
push
dec
jae
ret
out
clc
jo
call
int3
fisttpl
mov
jp
mov
push
adc
sub
fildll
pop
mov
lods
jp
dec
orl
cmp
cmpsb
sbb
mov
insl
inc
mov
pop
icebp
adc
call
movsl
pop
mov
sub
xchg
imul
mov
pop
lods
cld
enter
xchg
mov
pop
clc
scas
add
loop
sbb
mov
enter
pushf
mov
out
insl
pop
adc
dec
in
push
pop
jp
or
dec
inc
cmpsl
into
mov
das
or
xor
cmp
xchg
jae
insl
and
rorl
rcl
push
in
fadds
add
leave
jnp
jl,pn
push
dec
and
add
or
xchg
sbb
lds
cmp
loopne
cmpsl
push
push
jg
xor
sahf
sbb
lods
stos
test
dec
push
jg
ficompl
jns
mov
lea
and
stc
xchg
mov
int
aas
sub
in
adc
cmp
mov
repz
dec
test
inc
jno
adc
push
fstpl
fcmovu
add
gs
cmp
loope
mov
or
mov
int3
mov
sbb
xchg
fwait
mov
cmp
test
cmp
rcrb
and
lods
dec
or
mov
dec
pmullw
arpl
inc
jmp
sahf
pop
aaa
pop
sub
scas
out
int
cmc
mov
jo
pop
jns
out
inc
data16
aaa
in
or
sub
dec
xlat
je
bound
mov
push
in
call
adc
aam
lcall
dec
mov
test
rorl
lods
or
xor
mov
fdivs
in
or
sbb
push
call
mov
or
mov
adc
fisttpll
sub
and
push
push
jmpw
push
push
xor
fbld
jmp
stos
cltd
sar
daa
mov
add
enter
subps
ja
movsl
mov
shl
lods
mov
sub
mov
pop
and
cwtl
lcall
lods
popa
mov
fwait
lds
clc
test
cltd
pop
fadds
movsb
add
adcl
popa
mov
popf
lods
xchg
out
in
out
cmp
loope
addb
rcll
fiaddl
pushf
xlat
ds
rcrb
mov
pop
push
jae
jge
jnp
jmp
cltd
inc
stos
orl
rdtsc
in
mov
dec
outsb
dec
stos
dec
xor
adc
test
fcmovne
loop
sbb
add
test
bound
shll
inc
lock
dec
jmp
push
inc
or
sub
sub
and
pop
scas
mov
jmp
stos
xor
in
fwait
inc
jmp
mov
dec
and
and
rcrl
icebp
jo
mov
in
lock
lea
ss
mov
inc
fnsave
dec
lds
dec
inc
aas
dec
jg
shll
xlat
mov
push
icebp
cmovp
call
xchg
jns
in
clc
cmp
stos
sub
in
stc
inc
bound
cmpsl
lds
fldcw
sbbl
jl
loope
loop
jbe
cwtl
cld
stc
xchg
addr16
push
ret
loope
ja
fs
push
out
out
test
jbe
or
add
xchg
fnsave
mov
clc
or
cmpsl
sbb
ss
fsubs
rcrb
cs
cwtl
lcall
mov
push
mov
jo
test
xchg
test
hlt
jo
cs
dec
adc
xchg
insl
cmpsl
daa
inc
inc
mov
sub
movsl
dec
std
inc
stc
test
pop
inc
xor
enter
xchg
push
rcll
rorl
add
jo
pop
push
test
rolb
mov
repnz
or
rclb
jl
imul
xchg
push
mov
outsl
and
xchg
cmp
mov
cmp
cmpsb
les
jecxz
inc
ljmp
jecxz
or
xchg
jecxz
xor
mov
push
das
gs
das
std
add
xchg
sbb
loope
inc
insl
adc
daa
dec
mov
lret
inc
push
sarb
mov
pop
movsl
inc
adc
insl
jns
jnp
imul
loop
test
adc
or
mov
jo
pop
and
fildll
cmp
sbb
inc
loop
or
cld
jo
push
loope
sti
dec
jne
push
lcall
into
jns
imul
mov
cli
adc
imul
out
rcrb
and
push
pop
jle
fcomp
jg
xchg
mov
lcall
mov
cmp
push
inc
cmp
push
in
stc
ja
sahf
adc
cmp
inc
sahf
push
add
inc
xor
inc
clc
mov
dec
movsb
fs
cli
sbbb
mov
and
out
hlt
sub
cld
jl
inc
scas
push
jmp
push
dec
addb
in
movl
sub
ds
ds
add
jnp
jne
add
lods
rolb
mov
repnz
stos
xor
sbb
imul
cmc
cs
testl
pop
cmpsl
and
sbb
mov
mov
mov
imul
imul
xlat
mov
ficoml
push
repz
out
mov
mov
push
and
pushf
cmc
sahf
sbb
adc
sbb
sub
jno
mov
andl
out
insl
push
jge
mov
pushf
mov
add
mov
jmp
mov
sahf
test
xchg
mov
xchg
mov
dec
sub
xlat
inc
movsl
push
nop
adc
in
ret
enter
notb
mov
test
mov
push
mov
push
inc
mov
in
pop
pop
mov
gs
mov
push
movhps
pop
les
test
int
sti
inc
stc
or
ror
and
ja
and
pop
sbb
mov
xchg
jp
inc
arpl
mov
into
inc
icebp
mov
pushf
xlat
movsl
jle
sub
and
push
lea
fcoml
dec
in
or
iret
cmp
fcoml
mov
pusha
leave
add
lret
cld
push
dec
nop
push
push
pop
pop
les
or
fwait
in
mov
dec
jecxz
sbb
mov
mov
jbe
inc
or
cmpsb
xchg
ds
cmp
lods
mov
test
mov
out
fidivl
lahf
mov
add
sbb
pushf
test
or
inc
and
or
imul
fsub
fwait
push
rcrb
lret
data16
loop
mov
mov
insl
js
push
xchg
lcall
or
jecxz
clc
mov
pop
cmp
push
loopne
andb
push
inc
xchg
adc
jo
and
les
fucomp
addr16
fldcw
fisttpl
xor
xor
inc
clc
aad
outsb
out
jae
jecxz
sub
jg
cld
iret
sar
das
add
pop
mov
sbb
in
hlt
dec
adc
push
daa
rorl
dec
stos
fs
mov
ficoms
outsl
cmpsl
sti
cmp
jge
dec
jbe
mov
sub
inc
sbb
inc
and
sbb
and
pop
dec
mov
or
pop
adc
call
add
push
or
das
clc
adc
clc
data16
repnz
daa
cli
and
xchg
mulb
jle
pop
dec
push
lods
loop
push
fs
cmpsb
and
imul
loope
jne
jb
jge
jmp
clc
xor
adcb
add
mov
cmp
das
mov
add
pop
cli
inc
xor
shr
inc
out
addr16
xor
fisttpl
jno,pn
loope
stos
and
nop
jl
aam
inc
push
xchg
in
ja
dec
adc
in
xchg
jg
fmull
decl
mov
cs
je
pop
inc
push
sbb
sub
push
test
mov
cmp
pushf
inc
push
incb
cwtl
pop
xchg
xchg
imul
xchg
add
aad
add
xchg
dec
in
dec
movsl
mov
rcrl
sub
leave
fisttps
mov
push
pusha
mov
in
pop
pop
fiaddl
and
ss
les
or
push
cld
lahf
loop
std
pop
fdivs
pop
or
ljmp
dec
mov
insl
push
in
in
sbb
xchg
mov
imul
or
and
inc
mov
mov
inc
cwtl
fadds
sub
pop
xor
xchg
mov
out
xchg
cltd
dec
inc
add
in
pop
in
ret
fdivs
cltd
adc
mov
ret
inc
jl
cmp
ja
pop
jbe
orb
and
pop
xorb
pop
sbb
xor
bound
adc
mov
mov
xchg
sbb
push
js
push
ja
mov
push
mov
pop
inc
aas
lea
lds
js
cmp
test
dec
clc
jno
add
pop
in
ds
mov
or
cmp
fnsave
or
sub
mov
test
jecxz
dec
sub
adc
aas
and
dec
mov
push
fwait
mov
jle
jmp
in
aas
lret
stos
sub
inc
inc
pop
mov
sub
cmp
dec
sbb
adc
inc
in
xchg
lea
ds
nop
insb
push
shlb
hlt
or
in
sbb
lods
push
mov
imul
sarb
loope
add
orb
gs
sbb
cmp
adc
rorb
data16
fsubl
fcmovnb
outsl
popa
mov
mov
sti
addr16
arpl
fldl
push
sbb
push
add
cmpsb
outsl
divb
sarl
dec
push
imul
mov
fistpl
mov
out
test
push
mov
cmc
mov
icebp
divl
fiaddl
sbb
mov
enter
mov
jg
jge
mov
xor
or
mov
push
push
loopne
or
jge
inc
std
orb
popf
mov
ss
rorl
xchg
xchg
jecxz
and
inc
cli
je
xchg
je
lret
add
clc
jle
xor
xchg
xor
push
mov
and
adc
es
je
dec
and
inc
cmpsl
inc
xchg
outsl
cmp
or
ss
les
pop
rcrl
pop
cmp
inc
data16
adc
mov
es
out
mov
xchg
fs
mov
sbbb
cmp
mov
fstl
sbbl
mov
ret
pop
lcall
jns
mov
aam
aas
xor
cmp
dec
mov
sub
ret
jns
dec
adc
dec
mov
aad
pusha
jns
repnz
iret
movsb
jge
lea
jns
jp
in
dec
enter
mov
pop
push
sbb
ds
lea
mov
es
or
cmp
test
out
rcl
hlt
in
fimull
mov
push
and
lcall
imul
test
sahf
add
inc
rolb
fildl
sub
cmp
and
das
jae
sbb
xchg
push
push
shll
inc
fsubl
sbb
sbb
pop
ficoml
push
mov
push
out
or
mov
push
fstl
jp
icebp
stc
loope
ja
rclb
sbb
add
stos
movsb
cwtl
or
and
jecxz
and
shrl
jmp
je
push
adc
mov
push
mov
mov
enter
push
or
xchg
dec
and
xchg
movsl
in
mov
mov
add
xchg
shlb
inc
push
cld
xchg
testl
add
sub
xchg
mov
sahf
cmp
dec
pop
subb
sbb
pop
leave
repz
xor
xchg
cmp
pop
shrl
inc
movq
xchg
add
lods
mov
push
xor
jns
test
movsb
jle
sub
mov
icebp
loope
mov
pop
call
fmuls
mov
lret
xchg
mov
inc
jl
mov
xchg
push
not
mov
dec
adc
xor
ret
clc
clc
leave
roll
test
mov
pop
popf
fildll
aaa
test
sbb
inc
adc
push
sbb
stos
scas
mov
incb
jp
out
push
push
cmp
test
fwait
loope
push
std
mov
out
dec
pop
into
and
and
jg
nop
daa
cltd
sbb
jns
lcall
leave
jne
imul
sti
push
mov
repnz
call
fldl2e
hlt
fcmovbe
xchg
mov
daa
inc
sub
xchg
jmp
insl
xor
nop
iret
cmp
jmp
lds
push
mov
dec
mov
fsqrt
pop
and
push
int3
mov
sbb
jg
aaa
sbb
xor
filds
dec
sub
and
int3
imul
inc
xor
cld
je
mov
ja
mulb
pop
loope
rcrl
das
xchg
push
xchg
in
dec
dec
mov
shrl
mov
or
push
lods
repnz
inc
xor
mov
fiadds
xchg
das
jno
mov
jb
dec
adc
mov
dec
xchg
roll
mov
div
jp
mov
xchg
test
mov
and
push
push
cmpsb
icebp
pushf
decl
pusha
mov
jg
and
push
out
push
pop
fldt
mov
test
jae
shrl
int
dec
int3
xor
lcall
lea
rorl
pop
int3
cmp
hlt
lods
push
pop
or
int
or
inc
icebp
jl
int3
or
call
dec
movl
fstps
mov
pop
cmpsb
xchg
data16
and
sahf
fsubl
subb
daa
ret
adc
sahf
cmc
shl
cmpsb
lret
mov
and
mov
popa
cmp
push
pop
push
push
ret
sub
cmp
std
mov
out
jnp
mov
inc
sub
xorl
test
imul
adc
pusha
xorb
mov
roll
sbb
or
sbb
icebp
pusha
aad
mov
ss
and
in
or
dec
add
popf
cmpsl
push
push
pop
push
mov
ret
dec
lret
repz
dec
pop
fsubrl
add
mov
xor
pop
pop
outsb
sbb
dec
mov
rcl
mov
dec
pop
pushf
sar
rcll
cs
dec
psubb
fdivrl
dec
popa
jbe
rcll
fldcw
test
mov
nop
add
aam
cmp
aam
test
inc
mov
jns
setne
stos
stos
push
adc
cmpsl
ret
xor
pusha
push
push
cmp
lret
push
fisubs
frstor
inc
inc
jne
push
fisubs
clc
jnp
add
adc
mov
icebp
jne
mov
jne
ret
subps
mov
cs
aaa
pop
mov
sahf
in
or
push
mov
insl
add
adc
and
rorl
sarb
in
js
jmp
lret
pop
cmpsb
shll
mov
sub
into
outsl
scas
rolb
mov
cmp
adc
loope
pop
stc
push
std
popa
xor
imul
pop
push
sbb
fistpll
idivl
mov
int
call
mov
sti
lcall
sbb
jmp
mov
popa
rclb
sbb
lock
aas
pop
fwait
aam
mov
sub
cltd
les
clc
ret
mov
or
int3
push
pop
js
and
in
sbb
fs
std
xlat
xchg
fs
mov
out
movsb
jbe
and
lret
sbb
hlt
inc
js
adc
adc
push
push
mov
pop
inc
jge
mov
inc
and
sbb
loop
mov
scas
icebp
pop
or
sti
jecxz
loope
mov
add
pop
test
add
pop
sub
in
lahf
in
pop
xchg
test
lods
movd
dec
lcall
mov
push
push
mov
mov
mov
jl
xchg
popa
sbb
mov
or
je
pop
jecxz
and
iret
sub
sbb
in
cmp
test
adc
add
fimull
roll
or
les
jnp
cmp
sbb
xchg
inc
lcall
sub
rorb
shrb
int3
ret
sub
sbb
dec
out
pop
daa
repz
lock
aas
sub
divb
adc
dec
sbb
in
lods
mov
xor
push
cld
cld
stos
mov
mov
sbb
mov
sarl
cltd
xchg
out
sub
add
popa
jmp
mov
push
rcrl
ljmp
xor
jle
push
adc
dec
sub
pusha
sbb
mov
dec
xchg
adc
call
addl
ds
sbb
mov
lock
mov
pop
into
or
cmp
lea
incb
int
int
les
loopne
movsl
sarb
add
pop
mov
aam
xchg
movsb
jg
rcrl
mov
aad
in
pop
jg
mov
test
xlat
es
lret
xchg
mov
ja
push
add
or
out
mov
sub
and
cltd
mov
adc
aam
fwait
lods
mov
mov
outsb
ja
push
adc
repnz
pop
dec
sub
pop
imul
lcall
movsl
push
lret
or
stos
jge
clc
movsb
into
or
enter
push
ror
popf
inc
and
leave
sbb
sub
shl
cmp
jne
add
add
pop
gs
mov
inc
scas
sub
jge
jge
sub
sti
mov
cmp
dec
test
iret
pop
adc
and
lds
push
mov
sarb
push
jl
lcall
lea
mov
push
test
push
stos
in
rcrb
push
mov
inc
dec
dec
mov
mov
hlt
rorl
cltd
pushl
mov
popa
fsubs
ja
scas
ret
clc
sbb
data16
subl
test
xchg
xchg
loope
int3
aam
nop
xor
shrl
add
sub
pop
inc
xlat
push
or
cmc
lcall
mov
jae
mov
sbb
in
lahf
cmc
stos
arpl
insb
or
add
test
pushaw
scas
addr16
jge
call
stc
test
push
jg
push
aas
push
in
ficompl
mov
inc
gs
aas
or
xor
fisubl
std
xor
sub
cmp
jecxz
sbb
idivb
xchg
jmp
sti
mov
insb
into
push
xchg
xchg
sbbb
push
inc
sahf
scas
outsl
mov
xchg
sbb
fcos
iret
shl
mov
mov
ljmp
xchg
out
out
lret
pop
movsb
ja
cmp
cltd
test
fstl
sub
ljmp
sbbl
jae
repnz
ljmp
mov
mov
mov
ret
fstl
mov
mov
addr16
shrb
or
lea
sti
lds
xor
movsl
lds
sub
dec
lods
dec
imul
pop
in
inc
fwait
testb
cwtl
jnp
popa
data16
sub
xchg
pop
outsw
mov
cmp
sbb
adc
jo
xor
xchg
int
lcall
dec
les
push
notb
xor
lods
dec
and
mov
bnd
cmp
push
test
mov
sub
pop
pop
inc
adc
cli
inc
les
ljmp
xor
cmpsl
sbb
xchg
mov
push
pop
imul
inc
sub
jp
in
dec
sti
add
lahf
dec
cmp
clc
jl
iret
fbld
sub
ret
sub
fadds
and
push
cmpsl
pop
loope
ret
add
int3
add
mov
test
xlat
mov
out
lcall
push
outsl
sbb
lcall
adc
mov
or
adc
stos
imul
fstpt
out
cld
xor
sub
pop
xlat
xor
out
icebp
mov
outsl
lods
adc
xor
in
ret
mov
mov
lea
add
sbb
jg
loope
cmp
inc
insl
lds
ret
std
rcrb
mov
dec
adc
adc
cmp
clc
cli
std
repz
or
xchg
cmp
add
jmp
mov
bound
scas
aad
and
jnp
cli
and
or
inc
lcall
arpl
faddl
cltd
pop
mov
sub
test
mov
lods
inc
adc
adc
jno
add
data16
lret
pop
js
add
mov
mov
lea
xchg
pop
arpl
out
imul
repz
cmpsb
std
mov
jecxz
ret
inc
push
mov
loopne
fsts
mov
sbb
push
xchg
stc
adc
mov
fsubl
xchg
in
mov
push
shrl
scas
sub
add
push
jno
push
lock
inc
stos
pusha
fbstp
popa
pop
arpl
in
inc
sarl
mov
out
mov
push
and
jno
cs
push
push
push
aad
imul
nop
pop
les
xorb
fmuls
cmpsl
in
ljmp
sti
fcomps
sbb
movsb
cmp
insl
sbb
out
rolb
dec
push
cmp
or
mov
push
or
int
aaa
popa
in
out
jnp
cmp
mov
jns
fsubrl
fcomp
outsl
aas
or
sub
pop
mov
inc
into
pop
add
repnz
jp
push
mov
jb
sub
xlat
loope
arpl
and
jne
xchg
cmp
in
int
push
arpl
icebp
in
dec
sahf
ss
shrb
mov
xor
shl
push
cltd
adc
icebp
jns
push
repnz
insb
data16
rolb
xchg
jae
inc
add
popa
inc
push
sti
cmpl
jae
sbb
cltd
leave
data16
add
popf
xor
mov
adc
pusha
and
adc
pop
mov
inc
jmp
stc
xchg
fmuls
pop
mov
jl
xchg
sahf
insl
int3
sbb
insl
bswap
pop
fisubrs
ja
ds
and
test
ret
jg
add
cmp
mov
mov
cmp
pop
in
ret
lock
or
mov
in
xchg
and
jmp
rcrl
dec
shll
mov
xchg
fisttpl
popf
ss
inc
cmc
and
xor
push
and
insb
jnp
test
dec
mov
sbb
fsubrs
pop
mov
aad
stos
in
les
pop
xor
int3
xor
lods
in
cmp
fcomi
in
sbb
test
or
sub
adc
dec
sub
or
dec
ret
jo
inc
add
sti
jns
jbe
mov
mov
mov
or
ja
fdiv
xchg
int3
std
sub
sbb
cmp
out
cmp
fistpll
popf
daa
test
or
dec
xchg
mov
push
mull
push
out
aad
mov
decb
dec
xchg
adc
push
cmpsl
pop
mov
jno
cli
hlt
test
sub
xchg
push
xchg
cmp
sbbl
add
sub
jecxz
push
inc
mov
popa
jge
divb
pop
inc
or
lds
jno
std
xor
xlat
loopne
cwtl
jmp
scas
mov
jo
fwait
jp
xor
cmp
and
xchg
mov
fdivs
das
imul
xchg
iret
and
pop
ljmp
sbb
sbb
mov
jo
xor
sub
add
mov
push
addr16
mov
bound
sahf
lea
cmp
xchg
adc
pop
scas
shll
fidivl
mov
add
ljmp
jns
jl
arpl
fnstcw
dec
shr
push
test
jl
push
int3
loope
dec
or
ror
inc
pop
sub
test
lret
sub
xor
mov
cs
int3
je,pt
shl
lret
pushf
jp
mov
repnz
or
mov
jge
mov
pop
jne
cmp
shlb
sbb
arpl
mov
sbb
sbb
lahf
or
mov
add
jbe
inc
call
lret
xor
fs
hlt
insl
dec
xchg
xchg
repz
scas
inc
jae
inc
adc
add
insb
or
cwtl
in
data16
add
adc
roll
jns
jl
arpl
lahf
cmp
cmp
jg
movsb
in
jl
jecxz
sbb
cmp
incb
and
outsl
sbb
push
add
pop
leave
std
push
or
insl
and
add
gs
int
pop
mov
and
add
cwtl
int
mov
mov
jp
call
cmpsl
imul
pop
push
bound
aam
negb
mov
push
ret
xchg
jns
add
cs
cmp
mov
fwait
js
repz
std
ficoms
xor
popf
xchg
mov
pop
cwtl
mov
mov
mov
hlt
out
dec
mov
add
sbb
mov
insl
test
iret
jmp
lods
test
jge
ja
ss
jmp
imul
shrl
sub
fists
arpl
daa
stc
nop
xchg
dec
or
mov
les
or
fdivrl
movl
mov
jnp
xchg
jbe
cs
lret
lret
mov
push
cmp
jo
shll
mov
call
cmp
cmp
das
add
sub
or
mov
cmpsb
js
sbb
dec
push
insl
add
cmp
mov
dec
hlt
sbb
out
leave
jp
xchg
jb
test
loope
sub
xchg
pop
ret
sti
cs
outsb
movsl
andl
xor
mov
lahf
cmp
dec
jnp
adcb
cmp
fwait
xchg
fcompl
sbb
pop
rep
xor
sub
push
mov
aaa
fldenv
jno
mov
mov
aad
pop
out
adc
push
jbe
subb
insl
jge
cld
ror
insb
sbb
mov
inc
lds
mov
dec
xchg
cmp
lcall
mov
arpl
aad
cmp
sub
les
push
pop
stos
dec
pop
lods
sbb
adc
in
rorl
stos
lock
add
fiaddl
cltd
pop
cmc
popl
adc
fs
dec
xchg
test
test
ret
inc
sub
aaa
mov
loop
js
jge,pn
jno
jle
cmpsb
pop
pop
sbb
test
inc
sbb
xchg
aas
xchg
jbe
test
repz
repz
sub
mov
sub
fisubrl
inc
bound
fistpll
mov
and
xor
inc
roll
and
cmp
cltd
sti
push
int3
aaa
imul
xchg
ficompl
ret
cwtl
sahf
movsl
sbb
rolb
repz
mov
insb
out
jmp
add
xchg
mov
or
jns
ja
mov
in
sub
cmp
xor
fs
pop
dec
lds
add
fistps
sub
mov
lods
out
jmp
push
imul
adc
xchg
xor
xor
inc
testb
popa
jne
add
pop
dec
rcrb
sub
sbb
sub
mov
fsubs
repnz
xor
cmpsl
jge
or
xchg
addr16
idivb
cmp
push
movsl
cmpsl
dec
or
in
or
hlt
outsl
mov
push
test
cli
mov
cs
xchg
xchg
xor
stos
jb
push
jns
mov
fildl
gs
stos
fsubr
pusha
jl
inc
push
outsb
pop
adc
adc
pop
and
std
paddsw
mov
mov
xchg
cmp
jl
sub
pop
out
cmp
inc
lods
in
adc
add
mov
fstl
pop
aad
jmp
dec
ret
push
inc
sahf
xchg
and
add
cmp
jle
lcall
pop
xor
mov
or
mov
out
add
push
lea
inc
xor
add
push
inc
fwait
xchg
sbb
outsb
fdivs
test
cwtl
js
mov
push
stos
mov
aam
pusha
pop
jbe
int3
sub
add
adc
stos
mov
sub
scas
out
cmp
fdivs
aas
sbb
aas
mov
cli
addl
jno
in
cmpl
shll
fs
sub
mov
push
and
icebp
test
cltd
pop
into
pop
out
add
fidivrs
rcr
movsl
mov
jmp
pop
or
xor
jle
xor
sbb
push
jns
lock
int
jb
sbb
xorb
cmp
test
scas
aaa
movsl
xchg
int3
xchg
fs
sahf
scas
cmp
xlat
inc
mov
push
sarl
les
mov
jno
mov
add
scas
adc
in
adc
inc
iret
into
inc
sahf
insl
test
mov
fnsave
shrl
push
cs
and
cli
mov
hlt
sub
xor
test
mov
incl
dec
sub
pop
sub
out
and
mov
stos
cli
pop
or
scas
ret
pop
mov
and
scas
cwtl
jl
loopne
lea
in
out
outsb
pop
cmp
and
or
xchg
test
mov
aam
fucomp
into
shr
pop
xchg
fadd
dec
cmp
sub
xor
pop
pop
cld
movsb
sbb
mov
xlat
sub
cmp
xchg
xor
lcall
andl
outsl
push
pop
adc
cmpsb
lret
push
inc
jl
clc
in
push
paddsw
andl
rsqrtps
gs
dec
cmpl
cmp
mov
into
cs
mov
pop
aad
sar
xchg
mov
outsl
pop
pop
mov
nop
out
cmp
div
cmp
push
test
incl
pop
add
cmp
dec
test
adc
mov
cltd
pop
dec
dec
pop
push
shl
stos
and
xchg
loopne
je
adc
sbb
sbb
outsb
out
ss
aaa
fwait
jnp
movsl
pop
fsubrl
pop
jnp
dec
sbb
cmp
inc
dec
dec
divb
push
shrb
popf
jmp
ljmp
sbb
jno
aas
repz
imul
xor
jp
movsl
test
imul
ljmp
cmpsl
pop
iret
cmpsl
out
mov
dec
lcall
movsb
in
cli
ror
dec
mov
xor
dec
push
in
mov
pop
dec
ja
pop
in
cmpl
pop
les
jae
push
sbbb
dec
je
pop
shlb
jae
mov
sbb
icebp
loopne
jnp
lods
les
imul
jp
jl
fcoms
mov
ja
pcmpeqd
insl
lods
dec
jg
insl
mov
dec
inc
xor
out
cmp
or
sti
dec
sub
mov
inc
pop
insb
inc
cli
push
mov
sub
jno
int3
in
pop
mov
cmpsb
push
int3
xchg
int
loopne
test
pop
or
inc
jecxz
in
int
fisubrl
jne
or
push
sar
outsb
pusha
and
sbb
pop
lock
daa
cli
les
xorl
andb
outsl
cmp
movsb
arpl
stc
jb
xor
sti
ljmp
fidivl
arpl
mov
insl
scas
push
mov
add
adc
add
push
mov
adc
into
fmul
xorl
inc
dec
adc
mov
jbe
sahf
sbb
sbb
adc
insb
fmul
arpl
gs
fs
mov
orb
repnz
rcrl
mov
lret
lcall
and
sub
cli
xor
mov
xchg
test
sbb
jae
dec
mov
std
mov
dec
cs
fs
inc
js
sub
arpl
test
jl
xor
repz
adc
mov
jbe
adc
nop
or
lahf
dec
pusha
loopne
pop
push
xchg
flds
popa
std
aad
xor
dec
mov
ljmp
sbbl
xor
jg
aad
adc
push
fucomi
jns
adc
rorb
xchg
mov
ljmp
hlt
pop
in
rorb
repz
rcll
pop
mov
jo
dec
inc
adc
xchg
pop
data16
jns
or
or
enter
cmc
int
enter
inc
xchg
jmp
in
mov
imul
std
xor
xchg
stos
push
cmpsl
add
and
fwait
jmp
addr16
insb
jnp
jae
enter
mov
pop
sub
adc
data16
popa
mov
lcall
es
lds
orb
jno
pusha
mov
andl
mov
inc
outsb
push
dec
jmp
scas
add
fs
scas
sahf
icebp
pop
push
iret
push
xor
sub
lret
add
lods
pop
sbb
cltd
sub
out
dec
add
imul
push
xchg
add
mov
lock
enter
xor
loopne
add
in
cltd
hlt
jnp
lahf
mov
iret
xor
scas
das
xchg
mov
out
sbb
jae
pop
lret
icebp
pop
jecxz
stc
pusha
add
mov
or
rcrl
loop
test
hlt
jg
xor
xor
adc
jnp
test
xchg
gs
popl
sub
add
insb
xchg
jmp
push
adcb
xlat
leave
popf
out
mov
push
imul
pop
or
subl
lds
ja
dec
jo
loope
mov
loope
fcoms
or
aas
jmp
clc
icebp
jno
cltd
xor
inc
sbb
fs
cmp
mov
cmpsl
clc
fnsave
or
iret
outsl
push
mov
int3
aad
hlt
addr16
pop
leave
add
adc
out
rorl
outsl
push
outsl
incb
pusha
mov
sbb
pushf
pop
adc
inc
sbb
lea
dec
xchg
rorl
cltd
out
shlb
sub
loope
movsl
cmp
fisttpl
dec
negl
call
in
inc
mov
mov
js
fldcw
leave
fcmovb
push
or
push
jle
testb
xchg
pop
xchg
and
negb
push
pushf
xor
pop
add
dec
inc
xchg
jne
lret
addr16
inc
mov
pop
xor
bound
inc
notl
stos
and
repnz
test
cmp
aaa
repnz
pop
movsl
adcl
pop
sub
xchg
fsubr
xchg
clc
mov
mov
fisttpll
mov
and
sub
call
loopne
jo
aad
scas
jne
mov
jmp
das
mov
stos
in
es
imul
mov
add
and
nop
inc
sti
sub
iret
sub
push
repnz
jge
xchg
inc
lahf
pop
lahf
lds
or
push
sbb
mov
pop
sub
dec
dec
sbb
inc
pop
jge
test
out
mov
or
and
inc
scas
mov
pop
cmpsb
mov
outsb
sub
inc
out
rcll
xchg
or
sub
xchg
mov
pop
and
jne
or
clc
test
into
iret
mov
mov
imul
mov
and
pushf
dec
call
or
pmaxsw
into
sub
fldt
shll
sub
xor
and
jle
aaa
dec
sub
rcll
mov
adc
dec
add
dec
xchg
ret
adc
popf
pop
nop
push
bound
push
sub
stos
cmc
out
addr16
inc
aam
push
ja
outsl
imulb
xchg
stos
cmp
dec
lock
sub
jns
sbb
xchg
adc
call
mov
mov
sbb
pop
test
enter
and
lods
in
das
push
fistpl
test
mov
push
push
fisubs
fmuls
sub
je
les
xchg
movb
or
into
sbb
test
jecxz
stc
adc
cmc
lret
rolb
cmp
mov
lods
mov
shrl
jno
testb
pop
imul
movsl
and
pop
xchg
scas
inc
daa
and
jae
cmp
in
jns
outsl
mov
sub
repz
lret
ds
mov
xor
mov
dec
or
sbb
sbb
dec
fcomp
sbb
jmp
xchg
sub
mov
ja
cltd
xchg
and
into
arpl
sti
bswap
sub
ja
in
or
cmp
or
adc
mov
roll
mov
add
addl
aam
jle
dec
ds
pop
sbb
lcall
or
cmp
cmpsb
push
imulb
sbb
or
je
hlt
jmp
or
loope
int3
inc
inc
mov
pop
loope
sbb
mov
adc
mov
fnstsw
sbb
adc
sub
and
adc
mov
jns
ret
adc
popa
aas
iret
inc
and
fwait
push
lods
pop
mov
add
testl
rcll
cmp
cmc
cs
pop
dec
arpl
sub
xchg
mov
rcll
outsl
ret
movsb
shlb
scas
test
fimuls
or
out
inc
dec
icebp
popf
test
ret
or
gs
lret
ficoms
imul
cmp
mov
mov
adc
or
lret
aaa
sbb
pop
sbb
scas
and
dec
sbb
sub
mov
popf
inc
jecxz
mov
xlat
jns
das
xor
insb
push
dec
or
ja
shlb
pop
ljmp
and
movb
mov
dec
jb
dec
xchg
xchg
add
push
sbb
mov
jns
mov
sub
dec
icebp
es
roll
sub
mov
xchg
jmp
out
and
rcr
jae
iret
bound
dec
mov
sahf
ss
sbb
xor
cli
adc
pop
ds
aaa
pop
iret
pop
and
out
jo
mov
adc
inc
je
mov
ljmp
xchg
cmc
pop
xlat
pushf
outsb
cmovge
dec
icebp
lea
fistl
xchg
or
jp
or
outsb
xor
lahf
mov
sbb
push
pop
insl
out
adc
out
or
xor
dec
adc
out
call
bound
cmp
jecxz
jecxz
mov
orl
stc
sbb
dec
push
addr16
sbb
std
inc
stos
xor
push
ds
push
or
mov
mov
hlt
add
repnz
add
fisubrl
dec
aaa
sarl
movsb
or
sub
xchg
xchg
insb
stc
nop
aad
enter
loop
push
sbb
cmpsl
mov
sbb
dec
xchg
movsl
cld
or
leave
lcall
pop
jns
je
mov
ja
ds
or
addl
test
add
mov
bound
pop
aas
mov
out
das
sahf
aas
jp
cmp
jecxz
mov
dec
jmp
addr16
inc
hlt
cmp
cmp
jmp
cs
out
icebp
cmp
sub
and
lahf
cmp
mov
push
shll
inc
add
or
lds
mov
popa
daa
push
adc
pusha
leave
leave
subb
jno
out
out
insb
outsb
jecxz
mov
ss
push
sub
mov
out
ret
xor
enter
dec
cli
mov
ss
shll
or
push
in
cmc
movsl
mov
loopne
jl
fidivl
jb
pusha
enter
fldl
sbb
mov
add
jmp
adc
insl
cmpsb
or
and
shll
lods
or
adc
ror
iret
pcmpeqb
xchg
cmp
mov
cmp
lret
xlat
lock
add
xor
and
push
stc
mov
sahf
mov
into
adc
mov
and
add
inc
pop
sbb
popf
enter
test
mov
pop
shr
aam
pushf
and
jns
flds
xor
push
insl
imul
fstl
inc
adc
xchg
pop
jge
push
arpl
push
orl
jl
mov
dec
pop
add
pop
add
addr16
dec
or
mov
adc
dec
push
pop
les
dec
test
cs
lods
es
loop
cmpsl
push
jno
lcall
inc
cmp
push
inc
mov
xor
and
push
push
lock
xchg
out
xor
sub
data16
int
insl
adc
and
and
push
lahf
adc
xlat
push
addr16
ret
cmp
gs
pop
push
loop
push
pop
js
movsb
leave
push
andl
int3
jmp
pop
xchg
mov
rcll
push
cwtl
mov
pop
stos
cli
xchg
push
insl
pop
sbb
pop
add
sub
cld
ret
les
arpl
inc
xchg
add
test
enter
fwait
inc
xchg
and
mov
and
into
lret
aaa
div
repz
out
dec
pop
dec
dec
adc
outsb
xchg
xchg
jae
or
inc
pushf
fsubs
add
jp
mov
cs
mov
jno
sbb
add
cld
jno
cmp
dec
ds
out
jmp
aad
sbb
gs
sti
jecxz
sbb
mov
add
lret
scas
mov
in
rcr
fsubr
jae
sbb
inc
in
sub
push
mov
je
ret
jge
pusha
mov
mov
xor
in
cwtl
mov
jnp
mov
mov
xchg
add
fstpt
inc
adc
imul
pop
daa
inc
cmp
inc
jnp
jl
xchg
adcl
ret
xor
mov
repz
icebp
adc
or
test
repnz
loop
dec
jl
xchg
mov
test
test
xor
inc
xchg
jge
repnz
push
fldt
aas
andb
fcoml
xor
inc
insl
push
sbbb
xchg
inc
std
mov
sbb
cmp
sbb
inc
inc
add
push
popf
faddl
ja
mov
int
sub
loope
mov
mov
jne
jae
sub
popf
outsl
jmp
pushf
dec
in
sub
out
lcall
test
mov
lret
and
push
in
ficompl
mov
push
rcrb
cmp
pop
sub
test
aam
pop
xchg
add
frstpm(287
xlat
testl
das
idivl
call
testl
mov
sbb
pop
sahf
pop
mov
test
jcxz
mov
inc
stc
xchg
push
push
pop
jmp
cmpsl
scas
sub
cmc
mov
add
jmp
ja
iret
ja
cs
xor
mov
aam
daa
add
jmp
pop
out
add
mov
fistps
xor
stos
jns
fwait
add
inc
mov
leave
or
sbb
sbb
mov
mov
repnz
jecxz
xchg
fcoml
sub
in
mov
enter
sbb
inc
repnz
insb
xchg
xchg
push
inc
mov
and
pop
sbb
mov
test
or
pop
and
out
daa
cmp
sub
imul
and
stos
dec
stos
dec
fs
std
jae
lret
cltd
and
xchg
sbb
dec
mov
mov
lea
xchg
mov
call
clc
pop
scas
xchg
mov
imul
and
in
pushf
andl
push
out
push
add
daa
mov
mov
pop
loope
jg
call
int
mov
fidivl
ffreep
add
jnp
andl
divb
enter
sbb
outsl
flds
sub
cmpl
pop
pop
int3
aaa
inc
push
stos
xor
push
sub
hlt
rcrb
dec
ds
out
cmpsb
ud1
pusha
jp
test
inc
push
in
xlat
outsb
pop
std
dec
imul
testl
add
xor
cmp
testl
cli
ss
xchg
add
js
inc
sbb
push
es
xchg
lcall
mov
dec
dec
and
arpl
jmp
inc
xchg
xorl
xor
popf
or
xchg
jge
rcrb
dec
jo
or
xor
mov
out
jecxz
ds
and
call
cltd
mov
cmp
xor
iret
cltd
ja
sti
pushf
sbb
in
mov
lea
popa
inc
fcoml
jmp
bound
ret
popf
xor
xlat
movsl
arpl
inc
fstpt
and
pop
sub
xchg
jge
and
jecxz
ror
mov
ljmp
push
push
testb
sbb
mov
in
sbb
xlat
hlt
cmp
sbbl
ret
add
jecxz
jle
push
push
cmpsb
and
andl
out
jp
fimuls
inc
scas
repnz
addr16
hlt
insb
ficoms
dec
lret
mov
or
pop
popf
notb
flds
int3
dec
pusha
inc
xchg
inc
inc
insb
outsb
jle
mov
jle
and
or
xor
sub
popl
pushf
cmpsb
mov
nop
add
fisubl
daa
arpl
mov
pop
sub
shr
mov
in
jp
lea
pop
enter
data16
popf
gs
js
insl
sub
popa
ja
into
mov
push
jo
icebp
xchg
jo
test
mov
push
aam
arpl
inc
xor
push
xchg
inc
test
sbb
ret
sbb
jbe
aaa
jo
adc
fsubrs
jecxz
loop
bnd
pop
and
jl
dec
cmpsl
fnstenv
insb
mov
sub
jbe
mov
call
or
inc
ficomps
repnz
and
add
jg
mov
sub
sub
rclb
cld
inc
mov
and
ss
scas
clc
insb
enter
mov
nop
fcomps
xchg
xor
mov
cmp
repnz
mov
mulb
rcrb
ja
add
cmp
roll
pop
xor
sub
add
inc
repz
cmp
lods
mov
test
stc
adc
pop
pushf
mov
shrb
add
jg
das
ret
sub
aas
mov
inc
and
add
cmp
push
jbe
jne
push
push
jb
mov
ljmp
xor
sub
adc
xor
adc
xchg
jmp
add
mov
lret
repz
fildl
mov
daa
lods
out
push
pop
fdecstp
je
and
pop
scas
mov
add
fwait
das
lea
or
or
aaa
inc
inc
loopne
je
rorb
pop
dec
sbb
xor
das
fwait
popl
dec
fsts
xchg
addr16
daa
shlb
lods
imul
clc
mov
xor
push
loope
dec
jp
insl
mov
or
jo
scas
mov
mov
add
test
xor
push
les
ja
pop
cmpl
cmp
insl
gs
nop
stc
dec
mov
xor
idivb
sbb
test
movsl
inc
dec
stc
loope
inc
mov
ffree
jb
aad
stc
loopne
push
jmp
mov
fmul
add
pop
mov
mov
sbb
inc
mov
movsl
jno
outsl
xchg
shrl
jae
lods
adc
jo
movb
movsl
xor
je
test
ss
inc
in
jp
lock
or
enter
xchg
call
push
xchg
jb
mov
iret
shl
pop
and
lahf
jge
dec
cmp
push
ss
cmp
jne
jmp
imul
add
sbb
mov
arpl
cld
jl
push
dec
ror
or
xchg
movsb
cmp
pop
mov
mov
daa
cli
xchg
and
xor
jbe,pt
pushf
imul
mov
lret
or
cmp
mov
push
fwait
bound
jb
lahf
pushf
adc
lea
sbb
gs
push
lret
mov
dec
xor
mov
sbb
int
inc
jl
rolb
imul
mov
rcrb
idivb
out
xor
mov
into
xchg
data16
mov
jl
jge
arpl
mov
mov
push
sbb
jne
out
out
dec
xchg
fwait
loopne
into
aas
adc
in
jge
bound
push
aas
shlb
outsl
mov
fisttpl
mull
sub
std
lds
bound
fnstcw
mov
jmp
lahf
test
push
sbb
or
lds
mov
pushf
sub
in
test
and
jnp
lods
mov
xor
pop
int3
inc
das
stc
aas
movsl
lock
aaa
in
inc
imul
mov
sub
fdivs
sbb
scas
cwtl
cmp
mov
mov
xchg
xlat
mov
adc
testb
add
and
adc
in
fidivs
add
int
cmp
int
pop
fildll
add
test
imull
adc
jmp
jne
and
mov
and
lret
cli
int3
xlat
icebp
mov
mov
inc
dec
fsubrp
inc
cmp
cmpsl
pusha
cmp
cltd
lcall
cmc
add
in
inc
add
push
jmp
bound
push
jle
icebp
fisubrs
int3
sti
and
and
cld
scas
loope
out
sbb
pop
fildll
cmp
into
adc
adcl
cwtl
push
pop
mov
lahf
lds
cmp
shll
and
inc
lcall
or
pop
rcrb
or
sub
and
les
mov
stos
in
push
jae
out
add
mov
dec
rorl
rorb
sub
repnz
js
lcall
jbe
sahf
or
cmpsl
inc
jecxz
add
fsub
repnz
push
lods
fnstcw
fdivrs
imul
fsubp
pusha
sbb
aam
or
or
cmp
push
imul
jne
mov
sbb
iret
dec
mov
sbb
and
sub
and
imul
jle
inc
repz
and
mov
dec
inc
mov
cmpl
cs
and
cli
iret
sbb
mov
cmp
pusha
shl
adc
mov
adc
sub
jecxz
cmp
jns
mov
mov
orl
inc
cmp
inc
inc
dec
sbb
push
mov
or
lea
pop
add
fsts
sub
pop
cli
jle
dec
or
imul
cwtl
and
dec
adc
js
mov
mov
notb
xor
adc
movsb
pop
mov
mov
cmp
xchg
mov
xor
outsb
std
push
lahf
test
hlt
dec
push
test
pop
and
lods
scas
jo
mov
fisubl
jecxz
jle
sub
inc
in
and
stos
popa
test
adc
rclb
add
shlb
push
jg
push
inc
lods
sub
iret
cld
repz
lods
clc
mov
pop
flds
dec
sub
loop
lock
jbe
dec
jb
outsl
pusha
sub
sub
cmc
lret
push
adc
es
push
lock
push
cmp
jbe
arpl
mov
inc
xchg
loop
inc
inc
lahf
pusha
pop
push
mov
pop
ja
ss
add
cmpsl
pop
in
imul
add
jecxz
lret
mov
mov
mov
stos
insl
dec
or
divl
aaa
inc
push
or
in
add
xchg
pop
cmc
adc
lods
pop
sub
sbb
clc
pop
mov
lret
es
inc
data16
es
aas
ljmp
mov
sbb
mov
adcb
or
push
outsb
xchg
pop
adcb
inc
das
fiadds
or
orb
jae
mov
and
stos
push
inc
popa
jae
mov
inc
imull
pop
push
les
jg
scas
mov
in
xor
scas
idivl
and
outsb
rcll
sub
jbe
andl
bound
sarl
add
mov
add
jecxz
jnp
repz
sub
incb
mov
sbb
stos
subb
int
sub
popf
and
xlat
mov
xchg
add
das
pop
xchg
fmul
cwtl
ret
aaa
adc
push
cmp
aam
ret
pop
cli
movsb
imulb
scas
testb
xor
mov
fdivs
lods
mov
sbb
mov
mov
mov
bound
mov
and
pop
push
decl
movb
lock
jg
and
mov
xchg
shrb
orl
add
cmp
lods
jmp
add
sbb
push
cmp
inc
push
xchg
adc
sub
pusha
div
jo
jl
inc
aad
dec
icebp
cmp
ljmp
mov
fistl
pushf
or
xchg
lock
push
or
js
out
cmp
inc
movsb
jecxz
adc
pop
xor
lock
test
inc
mov
pop
mov
cs
std
sub
inc
aam
xchg
hlt
or
lret
xor
sub
add
pop
test
push
rcll
lahf
dec
adcb
aaa
adc
mov
pop
inc
pop
xchg
mov
ds
adc
cmp
fisubl
into
or
gs
jmp
inc
jo
shl
jb
cmp
pop
jp
je
add
repnz
mov
cltd
rorl
fsubs
inc
hlt
sbb
or
sahf
fbstp
jg
sub
mov
jno
pop
and
push
imul
lods
iret
scas
iret
add
js
in
mov
in
dec
insl
pop
jno
jg
jmp
pushf
js
push
sbb
in
add
rclb
cmp
jl
mov
dec
xor
sub
cltd
xchg
das
xchg
xor
xor
mov
pushw
jg
test
ja
push
sbb
or
imul
xor
fs
add
sub
mov
push
sub
in
adc
sub
cltd
aaa
jg
pop
das
movsb
mov
push
js
nop
jle
shll
mov
repz
mov
add
mov
pusha
arpl
or
loop
aad
outsl
aaa
xlat
push
jg
movsb
inc
mov
jns
xchg
shlb
xchg
xchg
iret
inc
cmpsl
push
pop
stos
add
ds
and
sar
cmpsb
add
pop
test
xlat
pop
insb
adc
mov
jg
jns
imul
mov
loope
into
mov
iret
orb
adc
pop
cs
sbb
flds
cwtl
je
clc
mov
cltd
push
out
sbb
inc
adc
lods
push
pop
adc
sarb
mov
cmp
mov
xchg
mov
aad
lods
and
and
jo
or
mov
mov
int3
lods
ss
mov
pop
mov
push
adc
mov
leave
inc
push
cmc
push
push
leave
push
add
mov
xlat
insb
mov
lcall
stc
sahf
and
jne
ja
lea
mov
rcrl
add
jbe
aaa
xlat
pop
adc
pop
repz
addb
jno
std
ljmp
lock
repnz
push
aas
jge
mov
inc
sub
add
inc
arpl
push
arpl
lock
sti
int3
mov
cmpsb
ret
imul
scas
stos
nop
xor
movsb
jl
hlt
pusha
dec
sbb
stos
xlat
es
pop
add
pushf
int
test
or
scas
adc
push
xchg
je
add
shll
and
loopne
inc
fistps
iret
dec
mov
leave
lret
push
or
ds
or
sarb
and
repnz
xor
inc
mov
pushf
mov
decb
mov
in
xchg
mov
cmp
mov
mov
mov
test
cs
arpl
rclb
push
xor
add
sub
or
xchg
sub
cmp
sbb
leave
jl
mov
or
lods
js
out
sbb
pushf
mov
cmpsb
push
sbb
jp
icebp
loopne
data16
mov
sbb
ljmp
adcb
inc
fnsave
pop
fs
leave
fadds
data16
int3
in
mov
xchg
cmp
insb
int
loopne
rcrb
mov
pusha
pop
test
inc
adc
sarl
movsl
insb
cmp
sbbl
shl
out
imul
jg
scas
inc
mov
mov
cmp
sub
loopne
shrb
js
lock
push
aas
push
jp
xor
cmpsl
pop
or
test
dec
or
add
andl
int
jno
fnstsw
pop
mov
out
jp
icebp
xchg
icebp
mov
roll
jbe
loop
mov
sub
push
lret
mov
push
sub
shl
loopne
orl
das
fwait
sbb
add
lds
fs
scas
push
int
les
inc
loop
sub
movsl
outsb
mov
into
adcb
in
mov
lret
add
gs
pusha
mov
jecxz
push
sub
mov
movsb
cmc
and
aaa
imul
cmpb
shlb
std
mov
fwait
bound
rclb
popl
scas
outsl
loop
orl
imul
arpl
lret
imul
shl
cmpb
jg
cs
or
leave
icebp
xchg
ret
push
icebp
mov
lock
pop
jle
subl
stos
lret
jo
scas
sbb
stos
leave
push
gs
and
cmpsl
lret
sub
mov
xor
sbb
push
stos
les
pop
mov
sub
adc
xchg
mov
or
or
adc
aad
and
arpl
aaa
xor
sub
aas
stc
je
inc
inc
adc
lods
int
cltd
std
adc
sbb
xchg
sti
rcrl
xchg
sub
xchg
divb
js
and
adc
ret
mov
aad
scas
gs
sub
nop
mov
dec
sbb
sti
dec
adc
rcrb
pushf
or
inc
loop
scas
outsl
sbb
fadds
mov
addb
dec
rcll
push
incl
xchg
lds
pusha
shll
in
cmc
xlat
add
jp
xor
xlat
push
xor
mov
sub
nop
cmpsl
gs
jmp
test
fcoms
lcall
nop
jge
push
cmp
loope
sub
cwtl
push
mov
pushf
aam
or
push
add
subl
fistpll
and
jbe
jno
inc
test
jb
mov
in
mov
and
xor
inc
test
stc
insl
inc
push
push
push
pushf
adc
repnz
cli
add
cwtl
mulb
int3
int3
lods
mov
lret
and
sbb
sub
cmp
lods
cli
or
lret
inc
lock
enter
dec
mull
dec
rcl
xchg
inc
test
fcmovnu
mov
fimull
lds
jge
and
dec
adc
inc
lods
pusha
shlb
and
out
bound
push
outsb
inc
in
and
xchg
xor
sub
mov
shl
popf
push
mov
scas
shlb
inc
jecxz
aas
ror
out
inc
outsl
mov
mov
mov
movsl
inc
mov
pop
jnp
xor
dec
cmp
xchg
in
scas
ret
lods
mov
pop
add
xor
sbb
outsb
daa
cltd
mov
loop
outsl
popa
lahf
or
xchg
or
cld
loope,pt
rcr
imul
ss
dec
in
cmp
sbb
xchg
sbb
stos
add
inc
out
pop
add
push
and
xchg
dec
jo
push
xor
aam
repz
pop
insb
or
cltd
fistps
or
cld
xor
ss
aad
lods
push
jl
push
cld
ljmp
inc
aam
mov
and
cmpsl
add
mov
xor
adc
push
ret
pop
int
sbb
aas
dec
punpckldq
hlt
jmp
dec
pop
idiv
inc
push
push
mov
aam
push
xor
or
and
push
bound
pop
adc
and
jg
sahf
mov
in
pop
out
mov
int3
dec
mov
push
add
je
cwtl
inc
mov
dec
insb
loop
cmp
inc
ja
xorl
data16
and
leave
arpl
mov
pushf
xchg
mov
call
add
xor
jle
nop
lods
insb
pop
lods
or
cs
push
paddsb
mov
scas
push
js
es
adcl
fildll
pop
mov
xchg
cltd
add
jbe
sub
pop
out
sub
pop
push
imul
in
js
sti
loope
add
sub
sbb
fadd
inc
das
cmpb
in
cmp
inc
rcl
je
mov
stos
sbb
loop
add
mov
push
sub
insb
pop
enter
jp
mov
out
jnp
pop
push
mov
xor
jp
cli
cmpsl
and
xchg
dec
sub
mov
add
add
outsb
sbb
fsubrs
pusha
es
jle
xchg
xchg
setle
sbb
xor
movsb
lret
jae
test
xchg
pop
jne
inc
test
popa
pop
repz
test
sub
jae
sbb
xor
push
repz
test
mov
adcl
lock
mov
pop
dec
fsubrl
imul
cmpsl
arpl
repnz
sub
or
aaa
xor
stc
cwtl
lds
and
out
dec
push
aaa
lcall
ret
mov
cwtl
pop
push
inc
ret
movsb
lret
imul
xchg
mov
ljmp
mov
fsubrl
push
mov
sub
ficoms
imul
data16
dec
jb
les
xchg
int3
mov
mov
ret
repnz
push
xchg
in
es
imull
xor
adc
cmpsl
call
adc
pop
mov
and
mov
add
and
dec
test
adc
jae
popf
loop
push
jno
adc
and
jnp
push
mov
cmp
mov
sbb
in
loopne,pt
sti
or
xchg
fidivs
xor
push
inc
mov
cmpsl
fwait
jb
shll
in
pop
in
pop
mov
pusha
mov
notl
mov
pop
pushf
dec
jle
cmp
roll
shr
dec
ds
jmp
js
fcomp
daa
fidivs
pop
xchg
cmpsl
and
gs
adc
loope
data16
pop
adc
and
movsb
sub
fst
mov
addr16
fwait
xor
pushf
test
mov
sahf
adc
adc
ljmp
idivl
sub
dec
sbb
cmc
sti
mov
arpl
mov
cwtl
into
aad
push
dec
mov
sbb
mov
popl
push
out
sub
mov
leave
push
repnz
popf
mov
orb
fcmovnb
mov
imul
cmp
jb
sbb
mov
dec
in
sahf
push
pop
mov
mov
xorl
mov
adc
adc
or
mov
mov
cmpb
add
sbb
lock
sbb
int
fwait
les
loop
sti
les
and
pop
cmc
aad
push
xor
sub
repnz
lea
pop
cmp
dec
fbld
xchg
and
inc
push
mov
inc
xchg
or
and
scas
icebp
movsb
push
and
adc
aad
test
pushf
inc
cld
daa
add
scas
stos
or
stos
mov
pop
xor
pop
mov
fcmovnu
jnp
data16
inc
sbb
inc
xchg
mov
inc
dec
hlt
cmp
xor
aaa
add
fcompl
adc
data16
xor
sbb
cmp
into
cld
sbb
mov
or
insb
andl
mov
add
stos
push
pop
nop
popa
out
fisttpl
push
cltd
or
pop
cld
mov
repz
adc
jnp
add
and
aas
jmp
push
inc
xchg
inc
in
notl
inc
das
push
mov
mov
stc
inc
gs
mov
jge
or
pusha
btc
les
and
sub
ljmp
push
jmp
out
mov
pop
push
dec
cs
dec
add
notb
add
test
add
add
stc
ficomps
mov
insl
or
pop
loope
pop
dec
cmp
repnz
xor
rorl
inc
lods
arpl
jne
sbb
sub
addb
flds
lea
mov
pop
ret
xor
popf
hlt
lds
or
imul
aad
icebp
lock
mov
es
push
out
movsl
push
int
js
inc
sbb
push
mov
jmp
pop
adc
adc
mov
call
icebp
sub
and
jae
cmc
js
xor
xlat
mov
sub
sarl
shll
cmp
adc
dec
cmp
test
lods
pop
jmp
in
int
mov
pop
cmp
xor
xchg
push
and
outsb
or
rcl
sub
xor
jns
cmp
push
mov
jnp
outsb
fs
jns
sub
in
inc
std
and
mov
fidivrs
dec
or
mov
mov
and
movsl
loopne
mov
arpl
mov
fcoml
pop
test
imull
push
cmp
and
push
adc
cmp
mov
das
pop
add
pop
and
insb
dec
fs
jne
or
test
outsl
test
loop
mov
sti
mov
movntq
test
add
xchg
push
lcall
jae
pushf
iret
mov
sbb
mov
mov
fcoms
mov
inc
and
and
mov
sbbb
out
leave
xor
pop
mov
jmp
mov
out
std
mov
movsl
rclb
xchg
ljmp
xchg
mov
fcmove
mov
stc
and
pop
push
jp
shll
ljmp
mov
cmp
and
sub
lret
das
xor
and
shrb
pushl
xlat
lock
mov
sti
imul
dec
outsb
cmp
movsl
xchg
sub
int3
or
sub
cli
shrl
cld
xchg
loopne
push
and
mov
ja
jno
push
std
cwtl
lds
cltd
andb
push
mov
xor
inc
pop
inc
test
jnp
les
lahf
cli
xchg
jb
push
jb
insl
sub
lea
push
ss
loope
addr16
sti
es
call
movsb
rcrb
xor
dec
insl
inc
fstpt
mov
iret
test
sub
pop
rorl
jbe
out
iret
ret
les
addb
pop
loop
xor
xchg
fwait
mov
push
mov
sti
frstor
cmpsb
lcall
test
jl
mov
ss
add
pop
out
jmp
icebp
jnp
lcall
sar
dec
sbbl
cld
lods
ret
mov
mov
mov
or
inc
lcall
add
int
pushl
jle
mov
or
xor
pop
adc
mov
leave
lcall
inc
adc
sbb
lcall
cmp
test
lcall
xorb
test
aaa
in
dec
push
stos
lcall
push
mov
pop
popa
out
mov
movsl
push
scas
jnp
cmp
xorl
popf
and
push
mov
mov
push
repz
and
loopne
movups
pop
pusha
inc
mov
loope
daa
iret
pushf
sbb
shll
scas
xsavec
pop
fwait
push
fucom
mov
inc
divw
ror
jae
icebp
jmp
mov
adc
mov
adc
imul
out
cmp
add
clc
sub
ret
pop
out
rcrb
sub
sub
or
adcl
xor
shl
fwait
cmp
jp
or
mov
or
std
sahf
mov
mov
shlb
arpl
xchg
push
mov
mov
sbb
add
xchg
sbb
pop
sbb
movsb
insb
cmp
int
mov
mov
rcll
or
dec
dec
or
out
out
mov
or
jmp
ss
pop
neg
inc
pop
popa
lahf
pop
mov
jnp
push
push
movsl
cmp
pop
jb
and
xchg
pop
dec
roll
popf
jp
add
cld
lret
mov
sub
aad
xor
cmp
push
or
fndisi(8087
mov
shll
push
les
cmpsb
sub
imul
popa
test
adc
inc
shrb
ljmp
fwait
jae
je
mov
pop
insb
inc
inc
ret
xchg
xchg
dec
fiadds
sub
xor
dec
out
xor
push
lahf
psraw
sbb
mov
jmp
mov
das
push
cmpsb
roll
pop
adc
ret
out
push
sbb
push
mov
push
test
jmp
rcl
sub
push
iret
into
lcall
jno
add
dec
pop
sbb
bound
xchg
sbb
fwait
lret
push
movsl
pushl
cmp
popf
dec
jb
ss
adc
mov
sbb
mov
gs
cmpb
jp
jnp
fwait
leave
add
arpl
fnstcw
inc
jns
bound
cltd
xchg
or
pop
pop
xorb
sub
adc
jle
or
out
push
add
adc
jbe
imul
push
mov
fwait
mov
inc
or
imul
fs
cmc
lret
inc
jns
jb
cld
dec
adc
scas
aaa
out
fs
outsl
ja
adcb
test
push
inc
outsb
pop
pop
mov
jmp
jnp
mov
rcll
movsb
repnz
push
les
loopne
xchg
rorb
imul
pop
mov
push
push
lcall
dec
mov
ret
loop
and
xor
cld
and
outsb
cmpsb
xor
mov
stc
add
mov
push
stos
and
scas
mov
push
xor
jae
pusha
sub
rclb
pop
imulb
jno
xchg
mov
pop
xor
sub
pop
xlat
inc
inc
sbb
push
cmp
adc
inc
jl
aam
inc
daa
mov
lea
xchg
dec
inc
mov
fisubl
mov
scas
shr
stos
push
or
in
mov
ljmp
mov
aaa
jne
aam
mov
psraw
push
int
mov
cmp
insb
xor
mov
cltd
pop
stc
ficoml
jle
pop
gs
push
aas
dec
cli
cmp
nop
lret
cmpsl
pop
stos
adc
loop
dec
mov
andb
popa
xor
mov
dec
dec
sbb
leave
adc
sbb
push
clc
inc
dec
fwait
decb
adc
rclb
popa
nop
negb
add
add
rol
lea
dec
inc
lods
loopne
scas
in
imul
sbb
cmp
imul
aaa
insb
addr16
cmp
jmpw
pop
adc
mov
cli
adc
dec
jb
subb
mov
jns
leave
xchg
enter
mov
es
fistpl
cmc
test
sahf
in
bound
dec
jns
sub
mov
sti
out
cmpsb
shlb
mov
sbb
dec
nop
jo
mov
dec
or
test
ljmp
imul
add
lock
push
cmp
add
push
bound
sub
aam
xor
out
movsb
cwtl
push
out
les
push
push
or
push
jbe
adc
clc
and
cltd
mov
nop
icebp
repnz
or
pop
gs
cwtl
cmpsl
int
filds
xchg
mov
mov
outsb
add
mov
mov
pusha
lea
sbb
into
mov
stos
pop
test
into
scas
lret
lock
fidivs
cwtl
aam
inc
out
out
pop
mov
dec
add
loop
push
fwait
add
cmp
sbb
decl
mov
mov
jnp
push
adcb
imul
loop
pop
icebp
loop
mov
inc
repz
pop
loope
mov
ficoms
push
orb
rcr
push
xor
stc
enter
iret
fdiv
sbb
push
in
mov
jl
stos
jecxz
adc
daa
push
mov
mov
movsb
jb
dec
and
int3
faddl
stos
fpatan
imul
nop
sbbl
sub
xchg
std
insl
mov
add
jmp
and
rcll
jle
inc
ret
mov
jle
jbe
push
ds
or
or
mov
xor
loopne
jg
xor
data16
or
lret
dec
dec
pop
lods
and
data16
adc
push
clc
xor
adc
and
in
inc
fmull
dec
sti
xchg
cli
pop
jnp
xchg
daa
ds
cwtl
addr16
loop
sti
push
pusha
adc
out
movsb
mov
flds
es
fidivrs
or
cmpsb
pushf
mov
mov
mov
sbb
adc
jns
cmpsb
std
ret
or
xchg
mulps
add
gs
and
stc
cld
jne
rcl
and
test
add
pop
lret
push
scas
mov
pusha
adc
xchg
xorb
in
cmp
or
lods
pop
in
bound
fstp
fisubrl
jae
dec
push
cmp
and
cmove
dec
hlt
clc
mov
lcall
pop
gs
sbb
iret
xchg
int
dec
cs
lods
xchg
in
ja
lret
mov
add
lods
scas
sub
jle
jle
dec
or
repnz
jne
insb
jl
mov
call
out
fcoms
ljmp
dec
je
in
outsl
outsb
rcr
data16
movsl
aam
rcrb
movsl
mov
int
jl
aaa
push
fcoms
sarb
and
inc
test
arpl
aas
sahf
dec
call
jae
sub
repz
cli
add
inc
inc
or
dec
div
lahf
test
inc
adc
ljmp
cmpsb
daa
jl
das
push
adc
pop
je
es
xor
out
fwait
into
adc
xchg
inc
cmpsb
xor
sbb
outsb
cmp
test
mov
mov
cmp
inc
lods
scas
sbb
fwait
push
or
sbb
jecxz
in
xchg
push
pop
mov
sbb
dec
jecxz
stc
loop
mov
and
in
push
sub
repnz
dec
gs
dec
scas
inc
sbbb
inc
loope
cs
stc
xchg
fs
cmp
int
ds
pop
mov
and
rcrb
xor
push
mov
jae
or
jae
mov
mov
xchg
sbb
fsubs
dec
adc
push
js
sub
into
adcb
ficompl
mov
cmp
pop
xlat
das
call
movsb
xlat
addr16
jl
ljmp
jmp
lods
jns
bound
xchg
xchg
test
dec
dec
ret
mov
push
pop
cld
mov
push
fwait
mov
pop
testl
jge
mov
cmp
cwtl
shll
out
cmp
insl
stc
or
es
jle
adc
dec
repz
mov
cmp
jge
aaa
inc
cwtl
xor
sarl
pop
add
mov
mov
rorb
push
jbe
sahf
dec
push
scas
mov
inc
das
cmp
stos
xchg
nop
lods
addr16
arpl
fs
xor
jbe
and
jge
das
jmp
pop
sbb
aam
sbb
loope
mov
enter
pop
dec
push
or
les
pop
sbb
cmp
adc
inc
or
sbb
rclb
xor
das
pop
gs
jp
inc
jl
cmpsb
xchg
jle
ror
or
cmc
outsb
sub
out
lock
pop
lock
rclb
inc
clc
fsubrs
cmc
mov
je
pusha
int
cmpsb
loop
add
sub
adc
imul
jge
jge
fld
ljmp
jmp
sahf
addr16
push
jp
aam
mov
popf
int
cwtl
cmp
inc
xlat
mov
or
test
add
gs
pop
sub
std
and
daa
insl
sbb
roll
sbb
out
mov
test
inc
mul
jge
xchg
mov
in
sbb
enter
mov
lret
icebp
xor
scas
add
repz
sbb
sub
sti
clc
popa
in
mov
clc
add
rolb
xchg
fisttpl
push
lods
pop
push
shl
fucomi
push
repnz
lret
rcrb
fisttps
sbb
lret
fwait
in
mov
jl
out
xlat
cwtl
adc
xor
push
inc
scas
mov
ljmp
bound
ret
outsb
mov
aam
mov
dec
or
push
cli
aad
repnz
and
outsb
ds
pop
pop
cltd
mov
pop
sti
sub
add
ljmp
gs
pop
inc
ret
hlt
push
inc
sbb
and
mov
push
dec
repz
jne
mov
test
push
pop
and
cmpsb
call
push
and
xchg
pusha
lret
pop
mov
sbb
mov
fsubs
or
inc
inc
jp
jge
repnz
or
cmp
out
rcll
pop
push
jmp
and
insl
cmp
cmp
xchg
fidivs
fisttps
jne
in
insl
stos
xchg
les
insl
push
push
mov
in
pop
add
jle
mov
out
stos
sub
movsl
das
mov
add
fisubs
icebp
sbb
daa
into
dec
sub
mov
int3
adc
addb
inc
les
fcoms
test
jne
lret
mov
pop
mov
ret
mov
and
sub
inc
subb
or
mov
test
lock
xlat
sbb
cmpb
xor
and
or
push
cmpsl
lahf
sub
mov
shll
fiadds
lods
pop
mov
sub
dec
xor
dec
or
in
xchg
aad
dec
rol
out
ds
shrb
mov
lock
test
xorb
inc
add
mov
addr16
lods
mov
fsub
std
and
in
jb
fcompl
mov
out
sbb
insb
sub
jns
stc
mov
into
xchg
xor
rcr
fisttpll
outsb
out
mov
pop
cmp
jb
shlb
cmpsl
iret
xor
and
cvtps2pd
cmpl
xchg
mov
aad
dec
loop
adc
ja
gs
pop
les
push
cli
cmp
mov
icebp
or
out
mov
sub
mov
popa
dec
call
lea
inc
xor
pop
add
xor
lahf
scas
pop
push
idiv
or
and
mov
or
sbb
mov
add
cmc
outsl
in
xor
or
sub
adc
sbb
clc
push
mov
pop
inc
push
shlb
pop
and
inc
sbb
sbb
ss
inc
xchg
lret
or
loope
add
pop
push
jle
dec
fcmovbe
mov
mov
push
sub
mov
in
movsl
xor
xor
xchg
mov
in
mov
in
and
ret
dec
pop
pop
sbb
push
or
sbb
and
mov
mov
imul
inc
stc
jnp
shrl
leave
adc
xor
push
push
ret
xchg
test
imul
iret
shrl
mov
shl
pop
adc
cmpsb
out
pop
scas
or
and
movsl
push
stos
das
jbe
aas
jmp
mov
int3
dec
aaa
addr16
imul
cmpsb
outsl
sahf
add
add
inc
test
mov
pusha
jecxz,pn
xlat
or
loop
lds
insl
xor
mov
mov
das
lds
mov
sbb
xor
icebp
ficoml
fadd
loopne
pop
std
add
call
lods
mov
jne
and
mov
jne
mov
jno
sar
aas
loope
in
loop
scas
xor
cmp
mov
hlt
stos
pop
cltd
test
andl
bound
jnp
mov
outsb
movsl
sub
mov
jno
mov
sbb
lock
rcrb
pusha
pop
sbb
pop
and
rcrl
xchg
imul
add
std
iret
pop
js
push
std
jo
xchg
adc
jle
mov
call
jmp
std
mov
xchg
imul
ja
cmpsl
xor
mov
sbb
sbb
fisubrl
jmp
das
add
jle
loope
popf
push
test
adc
xor
mov
cmp
add
scas
xchg
adc
cmp
aam
pop
inc
xchg
pop
mov
push
loopne
xchg
push
insl
inc
cmp
fidivrl
stos
cmp
test
shrb
stos
inc
sbb
xchg
xlat
test
mov
nop
xor
or
and
test
and
outsl
jo
nop
mov
push
jecxz
outsb
cmp
test
xor
arpl
std
test
mov
mov
ss
pop
pop
outsb
mov
in
inc
xlat
mov
int
stc
ret
cltd
xchg
xchg
test
xchg
les
cmp
int
out
add
and
add
outsb
js
mov
pop
mov
movsl
adc
lea
pop
adc
stos
mov
push
jo
fs
or
leave
lods
fwait
std
scas
fmuls
push
pop
sbb
or
test
or
loopne
xor
lds
lods
jo
dec
jbe
xor
fsubs
hlt
aam
pop
or
movzbl
cmpsb
inc
aad
out
je
pop
aas
pop
xor
gs
and
pop
inc
call
dec
pushl
jle
mov
xchg
mov
sti
dec
popa
jns
add
js
mov
lods
fcomp
and
xchg
ljmp
push
stc
jge
outsb
xchg
fistpl
xchg
out
shlb
lods
cmp
test
cs
out
and
push
jl
and
lds
jg
cmc
push
xchg
into
dec
ret
xchg
mov
inc
test
addb
xor
lret
popf
mov
inc
add
adc
fiaddl
push
aam
mov
psrld
jns
ret
rorb
outsl
xorb
ret
dec
sahf
or
jae
movsl
push
fbstp
xchg
jnp
mov
mov
jbe
int
aad
sti
add
shrb
lcall
mov
add
fnstsw
mov
dec
ss
into
ror
data16
testb
mov
mov
and
fistps
loop
add
adc
lock
push
add
adc
xchg
adc
xlat
fisubl
inc
add
cmp
push
movsb
mov
adc
scas
adc
repz
and
jb
in
xchg
mov
out
jg
mov
popa
cwtl
cmc
mov
sbb
enter
mov
jg
adc
mov
cmp
inc
add
mov
ja
clc
cmp
pop
shll
push
into
xchg
pop
inc
xor
mov
sub
subl
subl
pop
jmp
mov
lahf
sahf
shlb
es
xchg
clc
stos
push
fdivp
push
call
cmc
sub
push
cmpsb
jle
loopne
outsl
inc
movsl
pop
leave
sahf
push
jmp
in
xchg
jns
inc
push
or
dec
lods
sub
add
cmp
jmp
incb
jmp
in
add
les
stos
jbe
cmp
cmp
mov
dec
pop
sbb
jmp
and
sti
test
push
push
mov
xchg
in
jg
pop
test
shl
push
mov
sti
scas
add
xor
shr
mov
loopne
shlb
sub
stos
push
and
mov
stc
mov
mov
incb
int3
mov
cmp
out
mov
insb
dec
repz
xchg
imul
jne
packssdw
idivb
cld
loope
dec
jae
popa
enter
and
xchg
stos
add
mov
sbb
or
sti
aam
cmp
mov
inc
mov
pop
sbb
mov
es
mov
clc
cmpsb
xor
nop
or
sub
mov
xchg
movsl
imul
pushf
lock
pop
or
mov
leave
push
inc
adc
enter
inc
aas
xor
lret
push
clc
pop
cwtl
jp
sub
in
mov
popf
pop
mov
jle
pushf
and
insl
cmp
mov
ljmp
stos
xchg
or
mov
in
shll
imul
xor
jp
xor
lahf
lcall
sub
xlat
cli
push
daa
test
xlat
mov
pop
cmp
xor
cli
cmpsb
add
cmp
push
ret
pop
imul
cs
add
sub
fwait
sbb
addr16
test
popl
out
lock
into
sbb
imul
outsb
pop
shl
lahf
repz
aaa
inc
jmp
out
mov
ret
push
push
mov
das
adc
push
sub
jp
ror
xor
push
lahf
cmc
mov
add
sub
shl
mov
ss
and
lahf
inc
push
in
cmp
insb
xor
jbe
sbb
or
jmp
repnz
adc
jnp
mov
pop
jecxz
inc
fchs
push
popa
or
push
adc
xor
push
dec
imul
int3
xchg
gs
stos
adc
xchg
pop
xchg
movsl
addr16
mov
lret
xchg
ljmp
adc
sub
aas
negl
sub
arpl
aas
sbb
jl
push
in
pop
pop
jl
clc
sub
call
movsl
pusha
cmp
and
or
inc
je
pop
xchg
xor
stos
ret
iret
clc
fistpl
or
flds
hlt
xchg
icebp
sbb
test
test
pop
cld
mov
ret
inc
pop
cmp
mov
add
xor
cld
aad
inc
std
jnp
mov
cld
push
mov
push
lret
stos
adc
out
addb
sbb
scas
cmp
pavgw
jl
ja
mov
in
jecxz
sub
adc
ja
xchg
out
and
mov
ret
in
cld
mov
fdivr
jge
xor
js
stos
mov
inc
pop
lods
call
aaa
adc
jnp
cwtl
sbb
dec
or
fsubp
into
loop
loope
cmp
insb
jmp
fiadds
jge
jp
cmp
adcl
push
into
push
add
scas
mov
pop
xor
inc
mov
mov
xor
inc
push
int3
movsl
sub
imul
jae
or
mov
ret
test
dec
out
lea
mov
xchg
sbb
roll
jl
and
pop
and
lods
gs
outsb
jg
sti
xchg
xor
pop
rol
nop
inc
jno
icebp
mov
push
out
jge
in
cmp
mov
xor
xchg
aad
and
jne
add
bound
jp
add
scas
add
mov
mov
adc
ja
and
in
and
xchg
cmp
inc
les
mov
jg
inc
inc
cmp
mov
test
aas
popf
mov
mov
pusha
ret
xchg
sub
xor
cltd
popa
insl
push
mov
jle
sbb
xchg
or
jp
pop
hlt
xor
mov
sahf
cmp
enter
in
sbb
pop
out
add
inc
imul
lret
mov
std
loope
sub
sub
push
outsb
cmc
in
sub
in
cmp
aad
fisttpl
jno
loope
and
mov
push
xchg
mov
icebp
jbe
sbb
daa
divl
jbe
mov
inc
hlt
mov
inc
inc
jnp
mov
cld
std
aas
cmp
aas
add
inc
stos
push
sub
pop
adc
ret
or
shrb
outsb
jl
loop
cli
sub
int
xor
xor
lods
jl
pop
xchg
fadds
push
mov
sub
sbb
test
shl
in
cltd
push
push
decb
insl
test
xor
ucomiss
push
jmp
xchg
inc
cmp
add
fsubrl
lahf
inc
sbb
sbb
mov
add
cli
int3
idivb
cld
mov
sbb
shll
push
int
xchg
sub
push
das
and
cld
pop
into
xlat
ror
ss
push
js
movb
movsb
xor
dec
rcr
pop
pop
adc
add
inc
mov
sbb
inc
inc
cltd
pop
dec
push
fs
loopne
sub
push
jle
dec
jg
insl
movsl
mov
int
stc
inc
ficomps
es
in
push
sub
lret
repnz
pop
push
pushl
inc
add
lock
sahf
pop
xchg
adc
movsb
testb
or
jnp
xchg
test
jo
stc
jns
fdivs
aad
sub
hlt
pop
adc
bound
mov
fbstp
or
cwtl
mov
das
xor
std
pop
js
clc
cmp
push
mov
mov
push
in
or
lahf
ds
and
mov
push
push
adcb
cmp
jecxz
push
cwtl
and
rclb
out
repnz
fdivr
and
and
mov
mov
push
mov
lds
xlat
xchg
or
jno
ss
mov
mov
scas
add
push
pusha
push
rolb
loop
mov
mov
and
and
cmpsl
outsb
mov
jge
cmp
loop
enter
jno
in
test
test
pop
xor
scas
jo
mov
xchg
insb
int3
mov
jge
mov
out
setne
mov
cmpsb
sub
int3
fldl2e
push
subl
cs
jbe
and
aas
mov
std
mov
out
mov
push
jo
cmp
shll
out
mov
dec
mov
bound
shll
cs
jmp
cmpsl
cld
repnz
fmull
jnp
dec
and
mov
push
repz
ret
out
nop
adc
scas
or
enter
mov
sbb
aad
sti
xor
clts
outsb
shlb
mov
addb
pop
adc
mov
sub
mov
jnp
out
cmp
outsl
mov
add
add
hlt
lea
lahf
fs
test
bound
xor
push
xchg
ret
mov
aam
fisubs
adc
test
sahf
rcrl
rclb
mov
add
dec
stc
dec
lea
js
adc
outsl
mov
insb
imul
sbb
fwait
inc
flds
jo
inc
pop
xchg
and
hlt
stos
mov
pop
mov
xchg
lahf
orb
cmp
cmp
dec
jno
inc
mov
sbb
cli
pop
mov
sbb
into
lret
mov
inc
push
pop
mov
push
mov
inc
into
dec
xchg
mov
pop
push
cmpsb
xchg
xchg
addr16
enter
mov
xchg
sub
iret
mov
ret
movsb
outsl
mov
push
fldt
jae
leave
jns
pop
out
xorl
in
mov
stc
inc
cwtl
das
add
fistpll
bound
sti
or
and
ljmp
pop
xchg
call
gs
pusha
lret
jmp
and
into
cli
jl
sub
jge
mov
jae
in
sub
jge
adc
ret
mov
or
jno
mov
frstor
xchg
aaa
loope
mov
mov
in
stos
sub
pop
in
cmp
mov
loope
repz
leave
sbb
mov
jp
shll
call
cmp
ljmp
xchg
das
push
dec
or
xor
xchg
lcall
pop
inc
sub
push
mov
rcll
cmp
inc
or
aaa
adc
movsl
or
jno
push
or
cmp
dec
addr16
or
rcr
mov
sbb
inc
lock
cli
sub
cmp
cmpsl
jo
dec
fs
jecxz
ja
push
sub
mov
xchg
cmp
cmc
rcll
push
stc
mov
pop
int3
test
jbe
lods
or
pop
mov
pop
xor
imul
iret
insb
cltd
sub
sarb
nop
fnstcw
sub
in
cwtl
ljmp
in
jecxz
mov
repz
sub
push
jmp
xor
mov
inc
jo
dec
inc
push
stc
movsb
inc
sbb
js
mov
dec
dec
push
cmp
aad
shlb
mov
cwtl
scas
dec
cmp
and
pop
mov
dec
dec
mov
jp
jmp
pop
aad
inc
or
in
mov
sarb
jl
movlps
fmull
dec
cmp
pop
mov
out
dec
sbb
dec
push
in
lret
bound
cmp
lret
push
in
xor
mov
xor
mov
fmuls
sbb
out
xchg
sbb
sub
adc
sti
or
test
mov
adc
mov
or
and
pop
movb
pop
outsl
ja
inc
sub
sub
pop
and
outsb
shrl
je
popa
mov
pop
clc
scas
mov
sbb
add
cmp
rolb
xchg
push
inc
sub
jmp
outsb
mov
adc
ret
cs
imul
shlb
xor
int3
ljmp
push
nopl
mov
pop
scas
cwtl
pop
add
mov
fcomps
movsl
pusha
ret
stc
mov
jae
sbb
cmp
xchg
fwait
inc
mov
xorl
cmpb
dec
add
shr
cmp
loopne
jo
inc
sti
and
jge
pop
in
enter
inc
in
cli
or
fsubr
xor
jmp
mov
xor
sbb
imulb
pop
mov
mov
dec
xor
add
push
xchg
sub
pop
int
imul
std
cmpsl
aaa
adc
lds
in
inc
or
pop
mov
hlt
push
insb
xlat
jne
fxch
faddl
or
mov
std
mov
loope
pop
test
fimuls
in
xchg
sarb
lods
sub
notb
dec
cmp
cli
cmp
mov
leave
je
fmulp
jae
mov
or
adc
xchg
mov
lcall
orl
push
adc
movsl
call
imul
push
push
push
mov
push
stos
mov
testb
insl
jns
out
aaa
cmp
or
push
sub
adc
xchg
jp
enter
inc
lret
fcmovu
mov
repnz
enter
mov
sub
or
xor
jecxz
in
aas
xchg
fnsave
mov
mov
inc
lods
js
nop
xchg
lods
jnp
push
mov
add
daa
xchg
lret
out
sarb
push
sub
outsb
je
out
add
inc
mov
adc
sbb
hlt
cmp
pop
xchg
clc
ljmp
fnstsw
lret
cmp
gs
in
ret
cltd
or
sbb
test
push
jecxz
aas
imul
adc
or
add
sarb
out
lret
sub
jge
dec
lods
in
cli
jno
push
movsb
negb
aam
shl
cmp
dec
ret
ja
xor
inc
ss
dec
mov
inc
fstl
adc
sti
mov
xor
mov
mov
imul
sbb
divb
ljmp
lahf
faddl
loop
in
mov
xor
or
leave
inc
scas
xchg
int3
jecxz
cmp
cmc
jecxz
cmc
icebp
push
sub
rolb
jl
mov
sarb
jbe
divb
leave
hlt
dec
ja
jo
lods
xorb
inc
inc
xchg
sub
push
test
mov
sub
jnp
mov
jmp
pop
push
lret
sub
addl
dec
imul
xor
sbb
jb
int3
inc
inc
adc
icebp
xor
pop
mov
xor
inc
jge
rorb
in
data16
xchg
lcall
xor
or
xchg
inc
add
rorl
int3
push
ljmp
dec
mov
sbb
in
sub
xor
mov
lret
and
mov
dec
bound
decb
add
push
dec
and
pusha
xchg
add
sub
xchg
test
pop
into
mov
arpl
and
xor
test
cmp
frstor
mov
mov
loopne
adc
adc
mov
ljmp
sub
jns
insl
mov
into
mov
lahf
jne
mov
enter
hlt
rorl
test
aam
cmp
mov
lods
xchg
xchg
sbb
js
mov
movsl
pshufw
lcall
insl
addb
lea
incb
ds
jl
sub
dec
mov
insl
push
cli
jge
popf
push
jg
out
adc
mov
orb
pop
out
and
mov
sub
push
leave
mov
mov
mov
mov
xchg
scas
jns
sbb
inc
lods
fst
pusha
addr16
adc
or
mov
cmp
invd
in
test
push
push
xor
add
ss
neg
mov
mov
andl
lahf
jns
cmp
pop
dec
movl
lret
les
insb
pop
in
insl
mov
mov
and
lods
lret
dec
mov
or
mov
mov
pop
cmp
aaa
rcll
arpl
lock
sti
add
cwtl
in
stos
out
pop
fsubrl
das
imul
sbb
inc
js
cltd
nop
sbb
into
dec
xchg
xchg
xlat
push
aad
dec
jecxz
sbb
into
sbb
ficoml
push
lahf
gs
mov
jbe
sub
ja
lahf
mov
mov
pop
mov
sub
mov
aas
adc
imul
sti
popa
loope
bound
dec
or
or
test
cli
inc
sub
movsl
hlt
insl
pusha
mov
mov
push
and
pushf
mov
ljmp
mov
out
rclb
outsb
mov
gs
mov
jmp
imul
push
popa
in
xchg
adc
jb
push
cmp
scas
push
icebp
fistpl
dec
mov
xchg
aam
pop
and
push
enter
mov
ds
push
fsubl
aam
bndldx
enter
aaa
mov
loope
scas
outsb
xor
jns
cmpsb
addb
stc
xor
or
jl
stos
test
jne
xor
pop
mov
orl
dec
pop
in
pop
movsl
out
mov
cmpb
cld
lret
jle
pop
out
adcb
insb
push
lock
into
sub
sahf
mov
out
stos
sub
add
dec
imul
push
decb
je
push
jae
test
jb
add
popf
cmp
jb
pop
repz
adc
ror
dec
and
aad
sti
test
mov
jb
sbb
mov
lods
rcrb
or
sti
add
divb
pop
cmp
xor
sti
adc
dec
mov
xor
int
outsl
jge
das
add
sub
push
mov
cmp
dec
loope
sbb
sbb
dec
add
and
pop
or
and
xchg
xor
fists
jb
aam
mov
cmpsl
add
cmpsl
out
push
out
cmpsl
idivb
stos
jle
mov
cmc
mov
mov
incb
jne
adc
out
ja
push
xchg
sbb
rcr
and
out
ljmp
jo
cmpsb
sub
out
into
in
push
fimuls
je
cs
add
cmp
push
inc
inc
shr
cmp
lahf
push
mov
shld
xor
addl
inc
imul
shr
insb
push
imul
jns
pop
cmp
lods
push
ds
sbb
out
fbld
fistpl
dec
aad
cli
in
mov
add
inc
bound
pushf
jecxz
rcl
add
mov
arpl
xor
fcmovne
sub
add
je
js
or
pop
pushf
push
sbb
cmp
out
jo
leave
push
rcll
ja
mov
fs
cltd
dec
mov
les
pushf
ljmp
shlb
add
xor
inc
sti
dec
rorl
sbb
pop
dec
into
int3
and
les
fs
mov
movb
jmp
pop
adc
es
aas
ret
dec
and
es
popf
mov
dec
push
popf
ljmp
fisubrs
adc
jecxz
roll
pop
aaa
and
mov
mov
push
jb
sarl
jbe
pushf
or
lds
xchg
pop
sbb
pop
dec
clc
sub
sub
dec
cmp
or
cmp
xchg
sub
jnp
data16
add
push
pop
push
push
add
mov
adc
push
push
rorl
mov
sti
mov
jb
cmp
testl
shlb
ficoml
or
and
stos
mov
outsb
jae
jge
call
xor
sbb
repnz
sub
test
inc
mov
push
sar
stc
or
sub
insb
data16
test
rcrb
pop
in
lret
add
xor
push
push
lahf
add
xchg
cmp
fcoms
jbe
xlat
lods
test
sti
xchg
mov
imul
jg
pop
negb
addb
adc
mov
mov
fldt
push
fcomps
loope
adc
jmp
cwtl
jbe
stc
insl
rcrl
scas
rorl
or
adc
sub
in
es
xor
pushf
xchg
mov
xchg
pop
xor
fnstenv
xor
mov
xchg
sti
push
call
push
pop
sub
jg
popf
test
mov
push
data16
sahf
cltd
push
ret
sbb
es
jge
sub
js
add
imul
push
das
mov
test
jp
clc
or
push
dec
lds
jnp
hlt
jbe
push
sbb
lret
dec
add
push
test
out
mov
xchg
jb
dec
cmpsb
in
dec
jmp
push
fnstsw
add
shll
aaa
inc
in
dec
sub
rcr
sub
mov
jb
cli
and
outsb
xchg
fsubrs
jl
or
jne
pusha
pop
repnz
lea
xchg
shrl
stos
pop
sbb
add
ret
jbe
push
dec
push
and
cltd
popa
sub
and
sub
push
jnp
jns
cmp
in
into
pop
jns
in
inc
les
inc
adc
xor
lahf
or
jle
popf
push
pop
movsb
sbb
pop
mov
push
xor
lods
mov
jnp
sub
pop
std
popa
mov
lods
pop
mov
dec
or
jbe
sub
or
pop
arpl
xor
cltd
mov
int
shlb
pop
xchg
into
lock
push
movsl
sbb
adc
cmp
les
jg
sbb
shll
popa
xor
xchg
sbb
mov
push
dec
in
mov
jge
xchg
stos
inc
stos
test
ss
fisubs
xor
imul
js
nop
mov
jae
mov
sbb
popa
pop
xor
lret
add
scas
push
shrl
sbb
or
cwtl
loopne
mov
ret
test
cltd
insb
fwait
inc
lret
fcompl
mov
ljmp
cmc
adc
roll
stos
and
or
cli
cli
cmpsl
cld
in
adc
adc
fstp
lret
out
pop
es
aas
cmp
aas
pop
xchg
scas
mov
or
pushf
xchg
out
int3
jge
jl
push
fcmovne
dec
jg
jne
rcl
adc
repz
add
and
outsb
mov
push
xorl
icebp
das
pop
stc
test
cmp
enter
dec
cmc
pop
cmpsb
in
mov
lock
sahf
mov
jb
mov
out
push
std
push
in
int
add
jno
dec
movsl
ja
andl
shr
insb
ret
mov
mov
sbb
cmp
mov
xchg
ret
or
scas
stos
xchg
adc
mov
fmul
pop
add
cmc
fsubrs
lahf
aad
dec
pop
and
lods
xchg
ljmp
insb
cs
sbb
jb
pop
aad
or
pop
or
sub
insl
add
xor
mov
in
loop
mov
mov
mov
xor
or
aaa
test
or
mov
mov
cwtl
repnz
mov
sbbb
cmpsb
pop
add
int
fbld
movsl
test
sbb
mov
pop
cmp
sarb
and
push
push
cmc
inc
or
push
mov
in
mov
out
push
cmpsl
sbb
xchg
out
imul
mov
jg
mov
inc
imul
test
icebp
in
sarl
cwtl
cld
inc
outsb
xchg
roll
inc
ss
test
jmp
stc
jmp
daa
xor
pusha
inc
xchg
outsb
mov
or
daa
cmp
push
insl
into
into
xchg
icebp
fwait
xchg
sbb
cmc
inc
pop
cli
mov
adc
lods
adc
cmp
ja
das
gs
lcall
or
loopne
sbb
movb
cmpl
or
xchg
sbb
stos
mov
lcall
mov
add
sahf
mov
lahf
adc
pop
rcrl
fmuls
mov
fbld
push
jae
aas
in
dec
pop
scas
imul
mov
lahf
pop
lret
mov
in
arpl
dec
push
xor
pop
xchg
mov
sub
sbb
test
push
mov
dec
pop
fwait
sub
xchg
xchg
ret
xor
aaa
sub
inc
xchg
pop
add
cltd
shll
fisttps
sbb
mov
xchg
clc
dec
ds
es
in
imul
jl
test
jge
out
adc
dec
dec
lea
mov
stos
push
jno
loopne
jmp
push
ffree
sbb
icebp
inc
jecxz
jmp
mov
push
aam
mov
sub
insl
lods
inc
rclb
cmpl
and
push
xor
add
dec
pop
jecxz
inc
cmp
pop
test
mov
outsl
imul
push
clc
out
shlb
pusha
fdivrl
in
movl
cmp
xchg
rclb
jge
mov
push
push
dec
lea
andl
insb
pop
xchg
inc
mov
clc
sbb
inc
sbbl
and
dec
cmp
dec
sub
xor
cs
ja
fdivrp
adc
nop
jns
aas
xchg
pop
fnstsw
mov
jae
xchg
ret
jg
arpl
jb
sbb
xor
mov
mov
rolb
adc
dec
hlt
xlat
addl
scas
push
jb
push
dec
loop
and
ja
imul
xchg
mov
jns
mov
xor
mov
lcall
mov
lret
repz
pop
mov
lock
jne
ja
jb
mov
in
or
mov
test
in
mov
outsb
aam
or
mov
sbb
mov
ror
cmpsl
jbe
jge
movsl
mov
jo
push
fsubrs
dec
sbb
pop
aad
clc
popf
fisttpll
and
sub
notb
mov
push
cmp
and
sbbl
std
mov
pop
repz
jne
rclb
sti
sti
fisubs
adcb
jg
inc
mov
mov
xlat
xor
inc
xchg
dec
mov
fwait
jge
xor
and
stos
outsl
icebp
cmp
inc
ss
jmp
aaa
push
lods
xlat
ret
mov
leave
gs
int
stc
inc
cld
mov
lea
insl
in
dec
stc
sub
jb
cwtl
pop
push
jo
outsl
dec
and
cmc
stc
fmul
sbb
out
fsubr
xchg
popf
jmp
divb
add
sbb
pop
xchg
test
adc
aas
xor
adc
popa
xor
jo
xorb
mov
loopne
sbb
clc
inc
dec
push
xchg
iret
movsl
movsb
xor
xchg
cmpsb
cmp
pop
sahf
scas
mov
nop
xor
out
pop
sbb
inc
adc
push
jp
xor
inc
out
lea
xchg
pop
xor
ret
sbb
test
push
lahf
jnp
mov
insl
sbb
stos
mov
dec
shrb
jl
ja
insb
sti
mov
push
xor
outsb
call
in
mov
push
arpl
pop
clc
fsubrp
adc
inc
xchg
aam
call
lock
lock
cwtl
jno
mov
dec
or
stc
push
push
add
cmc
and
push
mov
daa
movsl
incb
jae
mov
out
rorl
icebp
rcrl
and
sarb
movsb
out
jno
fucomp
aad
sub
sbb
pop
mov
jecxz
movsl
pop
out
scas
or
subb
gs
and
mov
cmp
jg
aas
adc
add
jae
ss
sahf
pop
sti
lods
stos
fldcw
or
sub
test
pushf
subb
fstps
push
test
ret
fwait
xor
cmp
mov
popf
out
das
insb
mov
ljmp
xchg
mov
adc
add
jg
sub
mov
lock
aaa
pop
jns
lcall
sub
sbb
xor
cld
dec
movsb
xchg
orb
mov
jecxz
add
notb
jecxz
dec
xchg
mov
pop
jmp
test
xor
cmpsl
xchg
jl
mov
push
lcall
insl
or
inc
push
add
push
and
pop
out
cld
scas
je
ficompl
jns
les
mov
fnstsw
out
add
adc
js
xor
mov
xchg
data16
adc
pop
mov
sbb
mov
xchg
aaa
popa
mov
andb
mov
out
lahf
sti
cld
cmpsb
add
xor
inc
pop
mov
push
xchg
ret
in
dec
fistps
aaa
dec
pop
and
loopne
and
mov
pop
pop
push
je
jmp
pop
sbbl
insb
or
jle
sub
movsl
movsl
aas
push
fxch
dec
imulb
orb
loop
sbb
bound
sahf
jbe
and
fdivl
outsl
adc
push
cmp
push
push
jb
xor
fcomps
mov
subb
and
push
pop
jp
xchg
xor
push
imul
push
push
shrl
nopl
pop
ja
fisubs
mov
inc
sub
xchg
int
or
adc
shll
inc
xor
dec
xchg
rolb
push
pop
sub
sub
in
jnp
ficoml
xchg
jns
mov
mov
pushf
lock
adc
sbb
jne
pop
nop
xchg
mov
xor
add
fidivrl
sarb
scas
cmpsl
fstpl
push
dec
lea
xor
sbb
sbb
les
rcl
and
fadd
push
xchg
push
adc
xchg
test
xchg
lea
sub
lea
lods
jns
jecxz
jb
fcomps
stos
or
sub
push
das
push
es
insb
outsl
adc
cmpsb
or
cmpsl
orb
or
mov
cs
pop
cld
xchg
jmp
loope
ret
sbb
or
fdivrp
jmp
cmpsb
ljmp
cltd
push
cmp
fldl
jl
inc
das
daa
mov
cwtl
ss
rorb
test
fwait
jb
mov
cmp
inc
sbb
idivl
sub
pop
adc
push
dec
push
mov
popf
jmp
mov
sahf
or
js
push
imul
sub
rcr
cltd
jbe
mov
and
iret
pop
xchg
int3
pop
loope
ss
lods
aam
cmp
flds
push
sbb
jecxz
add
cmp
stos
sahf
mov
xchg
dec
xchg
and
out
scas
inc
pmulhw
ffreep
pop
movaps
cwtl
jbe
imull
ds
data16
add
popf
lds
sub
leave
inc
or
mov
or
jmp
mov
std
pop
lods
shl
ds
or
mov
xor
cmp
jb
push
cld
imul
sub
cmpsb
ljmp
getsec
ss
dec
std
ret
lret
lahf
adcl
xchg
scas
js
out
ss
and
popa
aaa
scas
das
cmp
pop
ss
pop
sub
lcall
es
mov
and
stc
fucom
fwait
mov
dec
aad
mov
popa
push
jo
mov
in
push
cmpsb
fnstcw
pop
jnp
clc
sbb
ret
test
push
jl
in
jnp
aad
pop
enter
sbb
adc
mull
cmp
rcrl
imul
idivb
and
add
add
aas
mov
mov
mov
adc
inc
jb
iret
rorl
push
mov
push
inc
add
stos
nop
stos
xor
xchg
sub
cmpl
push
test
mov
call
fwait
dec
repnz
xchg
adc
es
js
shrl
xor
rcll
pop
test
cmc
push
loope
or
inc
test
sub
and
aad
cmpsl
imul
sbb
jb
mov
aad
in
push
ret
outsb
dec
push
pop
aaa
fnstsw
rcr
mov
dec
mov
sub
pop
jmp
inc
jnp
mov
loop
sbbb
mov
adc
and
fsubrs
data16
mov
mov
iret
das
push
lods
inc
mov
ja
in
or
call
movsb
xchg
add
xor
aam
bound
or
cmp
jne
mov
orb
mov
es
pop
sbb
dec
push
xchg
cmp
icebp
mov
add
pop
les
jge
test
dec
xchg
adc
dec
sub
rcrl
push
icebp
sub
dec
shll
test
push
fwait
push
fs
rclb
ror
movsl
stos
mov
test
out
test
lret
mov
sahf
sti
out
cmpsl
cmp
mov
imul
bound
std
xchg
js
stos
cwtl
std
ror
in
mov
test
stos
out
jecxz
leave
add
not
mov
movsl
and
iret
daa
adc
fdivl
roll
repnz
lret
inc
imul
mov
fisubl
and
jle
xchg
jmp
and
push
push
lods
mov
dec
in
pop
sbb
mov
int
adc
inc
scas
xor
cmp
xchg
mov
fimuls
mov
pop
out
push
sub
out
mov
add
lret
push
cmpsb
repnz
rcr
dec
sbb
ljmp
jnp
xchg
push
les
jae
jns
adc
push
in
jns
cmpsl
dec
mov
shll
cmpsb
imul
imul
xchg
in
mov
ja
xchg
mov
jl
inc
mov
rcrb
pop
adc
jmp
or
jae
scas
fisubs
mov
repnz
divl
jo
sbb
ljmp
push
dec
cmp
adc
test
sub
repz
fidivrs
fwait
or
insb
insb
movsb
sti
add
adc
pop
xchg
push
push
mov
xchg
mov
mov
xor
or
inc
push
or
push
repz
out
fisubs
add
mov
movsb
rclb
jg
mov
dec
xor
das
loop
mov
std
xor
sbb
xor
sub
mov
mov
dec
adc
shll
scas
pop
scas
lret
push
inc
jne
inc
loopne
pusha
arpl
in
insb
ja
sarb
cs
mov
lock
sub
mov
scas
mov
push
inc
sbb
mov
or
or
leave
push
xchg
add
mov
xor
outsb
sbb
scas
popa
add
adc
xchg
popa
das
pop
daa
add
cli
jae
jp
adc
hlt
adc
mov
and
sahf
sbb
mov
cltd
push
xor
enter
cwtl
cmpsl
cmp
popa
push
sbb
pop
jnp
in
enter
jbe
xchg
and
sub
pop
dec
cmp
jnp
push
jb
clc
cmp
test
sbb
sbb
daa
and
sbb
es
or
int3
roll
arpl
outsb
add
inc
fcmovb
cmp
add
pop
mov
jno
out
clc
sbbl
jl
js
mov
fnstenv
add
pop
sbb
enter
cmpsb
ja
adc
or
push
push
cmp
sub
test
sbb
dec
mov
pop
mov
adc
out
testb
push
test
lea
sti
sub
mov
loope
imul
insl
icebp
fsts
mov
mov
cld
cmpsb
cltd
in
fisubs
xchg
mov
fstps
jl
andb
push
cli
jmp
cmpsb
mov
pop
testl
jge
pop
scas
fwait
sahf
or
mov
stc
mov
adc
int
clc
or
dec
lahf
outsb
pop
xor
sbb
jno
dec
mov
add
or
ret
inc
dec
cltd
lcall
scas
and
sub
add
pop
fidivl
cltd
pop
inc
and
adc
jne
and
faddp
cmp
pop
xchg
cli
mov
push
adc
aas
cmpb
add
clc
rcl
pop
xchg
out
sbb
sub
push
fbld
outsb
sub
sub
lret
paddusw
push
and
cmpsl
or
mov
stos
sub
sub
retw
sub
hlt
aas
lock
mov
imul
mov
sub
adc
loop
lret
jge
jl
add
or
sbb
dec
push
mov
adc
add
sub
jbe
scas
mov
movsb
mov
repz
test
clc
pop
mov
hlt
testl
ret
sti
mov
lret
data16
sbb
pmulhw
and
es
daa
scas
cmpsb
outsl
ds
or
fisubrs
enter
movsl
cmp
pop
cmp
imul
std
stc
and
pop
je
xchg
ljmp
mov
dec
add
pusha
cmc
dec
inc
call
pop
std
sub
jl
jl,pt
jo
mull
pop
pop
mov
in
xchg
insl
pop
adc
lods
push
aaa
push
scas
pop
js
insb
jo
xor
int
popa
xchg
or
cmp
dec
mov
jae
jmp
mov
pop
movsb
es
ret
inc
lret
or
push
mov
js
jge
ja
xor
icebp
mov
unpckhps
mov
push
push
arpl
sub
pop
aaa
lea
in
sbb
xchg
push
jg
aam
leave
cmp
insb
xor
push
clc
das
jns
popa
jp
push
or
mov
lret
xor
xor
sub
jno
or
lods
push
sti
mov
lea
iret
jl
dec
popa
ficoml
ficoml
dec
inc
xchg
add
scas
mov
das
pop
mov
cld
dec
fsubl
jne
scas
and
pop
or
push
sub
popa
fs
add
dec
and
movsb
push
fmull
sbb
dec
push
jmp
and
out
sbb
dec
xor
sub
xor
mov
and
loopne
jo
and
pop
aam
mov
xchg
lret
outsb
push
outsb
cli
test
sbb
adc
stos
sbb
out
sbbl
mov
mov
inc
das
scas
icebp
dec
xchg
jl
mov
and
gs
sbb
and
fistpll
insb
scas
shll
dec
cmp
fisttpl
adc
xor
xchg
xchg
mov
jns
push
and
stos
xchg
inc
repnz
loop
pop
sub
dec
add
xchg
cmp
out
jl
mov
xchg
add
out
sbb
cmpl
add
dec
pop
jge
psllq
pop
inc
lret
inc
xor
adc
jns
jmp
mov
mov
xor
add
ljmp
ret
jb
sub
mov
sub
hlt
rcrb
pop
adc
sbb
into
rclb
mov
repnz
adc
fcmovbe
mov
xor
callw
cmp
add
mov
movsb
stos
lret
mov
xchg
lcall
push
xchg
xchg
push
in
cmp
cwtl
fstps
lahf
decl
jp
dec
leave
adc
shrl
mov
addr16
sub
or
das
mov
and
scas
shl
pop
loope
mov
out
xor
mov
pushf
sbb
pmullw
or
sbb
or
ja
in
push
add
pushl
int3
adc
and
lods
rcrl
iret
lcall
adc
fldt
loop
inc
fndisi(8087
push
sbb
gs
aad
pop
inc
in
pop
jge
xchg
xor
or
cmp
jle
or
push
repz
mulb
push
std
daa
or
lret
pushf
out
xchg
xlat
scas
jb
jbe
dec
call
insl
enter
ljmp
cmp
xchg
cmp
and
jno
mov
xchg
pop
aaa
mov
push
push
movsb
xchg
adc
daa
out
daa
mov
mov
jmp
dec
jb
outsl
test
dec
lea
pusha
mov
fnstcw
jecxz
add
dec
sub
test
mov
and
push
cmc
aaa
xchg
push
fimuls
stos
lea
pop
jp
pop
xchg
cs
add
rcrl
lds
popf
sub
in
mov
jl
pop
jecxz
fimull
popa
cmp
xchg
sub
int
stos
push
cmpsb
ss
icebp
sub
pop
xchg
pop
pop
sbbb
mov
inc
xchg
insl
xor
ret
arpl
test
sbb
sbbl
lods
std
cmp
ret
xor
pop
stos
mov
clc
loope
push
push
jecxz
add
jge
rclb
scas
adc
cld
decb
or
mov
sub
sbb
mov
dec
inc
stos
xor
test
push
dec
sti
pop
arpl
mov
xchg
dec
mov
xor
or
adc
pop
pop
add
inc
arpl
xor
test
or
inc
add
outsl
fsubr
in
aaa
adc
push
mov
shlb
xlat
pusha
push
scas
jns
fwait
jp
lcall
icebp
andl
adc
loop
ja
jecxz
cltd
loope
cwtl
rorl
dec
dec
int3
das
pop
sub
cmp
ret
out
jns
push
loope
negl
pop
fs
add
lods
testb
push
xor
test
out
or
mov
sar
fs
mov
clc
mov
add
push
jle
in
arpl
inc
mov
sbb
push
inc
push
cmp
dec
ds
in
addr16
mov
mov
out
ret
daa
jl
jmp
test
movsb
xor
dec
adc
rolb
dec
ret
xchg
divb
icebp
push
lahf
setae
jnp
pop
ljmp
add
sub
in
cmp
jns
jb
lret
std
add
test
pop
jns
pop
or
push
adc
fmulp
hlt
push
inc
aas
in
sbb
into
add
mov
daa
out
push
les
add
imulb
fidivs
fs
test
inc
xchg
pusha
adc
iret
je
test
dec
call
push
aam
add
push
sub
aaa
fbstp
pop
cmpsl
aas
dec
aam
cltd
sarb
mov
push
aam
test
in
push
lea
jbe
dec
in
pop
and
add
push
xchg
xor
lock
cltd
movb
inc
inc
add
in
inc
or
push
adc
mov
sub
cwtl
scas
push
push
mov
in
lahf
hlt
in
adc
cwtl
adc
mov
test
mov
aas
xor
xor
mov
jb
jne
mov
add
clc
xor
hlt
inc
arpl
iret
push
jb
cmp
jmp
mov
push
jbe
sbb
and
push
add
or
rclb
inc
pop
loope
movl
xor
mov
push
xor
pop
or
pop
cmp
mov
ss
nop
movsl
or
xor
and
movsb
adc
enter
mov
sbb
jo
xchg
dec
add
xchg
fisubs
jae
inc
xchg
inc
dec
xor
mov
jg
fs
cli
stc
arpl
aaa
test
push
insl
je
inc
mov
insb
jne
nop
cmp
cli
stos
cmp
js,pt
mov
jno
shll
jmp
in
outsb
fcomi
inc
gs
lcall
sub
flds
ror
in
cld
xchg
sti
xchg
pop
xor
gs
dec
and
lahf
cmc
stos
adc
out
mov
call
xchg
decl
in
fsts
and
push
jge
mov
dec
pop
inc
jo
xor
and
jecxz
add
adc
xor
jbe
xor
pusha
popa
int
test
sub
int3
js
orb
inc
pop
mov
out
mov
cmpsb
mov
test
insl
dec
addr16
dec
pop
cltd
sahf
sub
inc
icebp
push
sahf
fmuls
mov
lds
sub
icebp
sub
mov
xchg
xchg
enter
and
xchg
adcl
or
aad
mov
lret
jmp
cmp
mov
orl
loope
icebp
sti
adc
rclb
sbb
rclb
inc
jp
push
ljmp
jno
push
push
cs
cli
lea
and
leave
adc
es
in
into
mov
xchg
repz
lcall
pushf
and
mov
shll
jp
and
or
dec
movsl
or
cwtl
or
sti
push
pusha
pop
mov
mov
adc
fmull
mov
fdivrl
sbb
or
push
inc
fnstcw
fucom
or
mov
cwtl
mov
pop
and
pop
pop
and
pop
lods
stos
cli
mov
clc
jp
cmp
xchg
shrb
sahf
out
dec
in
repz
ss
orb
mov
fwait
cwtl
jns
ljmp
testb
and
sbb
sub
jno
inc
or
das
out
decb
xchg
in
aad
aam
testl
and
cmpsb
pop
cmp
daa
int
lcall
dec
and
les
lret
lahf
fdivs
decl
jo
das
adc
popa
dec
cmp
xchg
jnp
and
xchg
jmp
insl
jmp
xchg
decl
mov
js
flds
outsl
xor
mov
outsl
and
faddl
sbbb
rolb
clc
mov
cmp
mov
repz
scas
mov
cmc
lcall
mov
in
dec
daa
in
sti
cmp
in
adc
lods
jb
push
out
xor
jbe
jae
and
les
and
and
mov
testl
dec
fs
test
dec
add
insl
ror
and
nop
mov
pop
sub
imul
movsl
inc
ret
out
sbb
repz
sarb
jns
dec
out
fcmovb
jne
sub
ja
insl
lds
clc
mov
enter
pop
aaa
hlt
cltd
ss
mov
push
test
shl
movsb
es
test
mov
push
aam
jmp
pop
repnz
sti
inc
mov
xor
xchg
cmp
dec
in
push
cmp
aas
push
outsb
add
mov
out
pop
rcrl
rcl
stos
bnd
mov
mov
inc
inc
add
cltd
mov
in
and
int3
call
popa
imul
iret
pushf
mov
or
stc
mov
cmp
mov
pop
out
sub
lock
les
sahf
adc
inc
ds
adcb
cmp
cli
gs
xchg
arpl
push
adcb
mov
add
aas
adc
push
push
nop
xchg
loope
pushf
xlat
pop
lcall
dec
or
cmp
xchg
mov
adc
sub
cmpsl
xor
jne
daa
jge
repnz
ret
hlt
or
mov
je
ljmp
jb
jecxz
cmp
push
rolb
aas
das
icebp
sbb
lret
push
inc
mov
pop
les
ret
mov
cmpsl
jns
stos
ds
inc
push
push
mov
mov
lods
subl
xchg
pop
jno
inc
adc
out
xorb
pop
xor
bound
mov
aad
popf
lret
fisubrs
inc
adc
lret
sahf
in
push
pushf
fucomp
std
imul
sbb
pop
loop
pop
nop
add
adc
mov
sbb
aam
mov
jge
inc
jp
dec
es
aam
fdivr
cmc
inc
push
push
outsl
pop
daa
xchg
add
push
in
test
push
or
mov
iret
in
sbb
sbb
fmulp
mov
ret
dec
insl
cmp
cmp
dec
imul
xchg
arpl
enter
stc
lods
ljmp
or
inc
lcall
xchg
xchg
mov
iret
imul
push
outsb
push
cs
mov
xchg
jmp
inc
and
sbb
in
lods
cs
outsb
mov
and
push
sbb
or
cmc
jbe
jg
cmp
pushf
lcall
and
out
lea
popf
loop
xchg
add
outsl
loopne
mov
shll
shlb
clc
sbb
pop
jns
sub
jp
rcll
cmp
xchg
ss
ret
add
mov
jo
xchg
loope
outsl
xlat
out
je
leave
fimuls
shll
jae
push
jl
pop
es
bound
mov
cmp
cmp
pop
cmp
adc
cmp
and
cmp
inc
aas
fdivrp
pop
adc
push
cmp
cwtl
out
jg
adc
xlat
cltd
sub
mov
dec
scas
mov
mov
sahf
mov
scas
pop
pushf
inc
cmc
mov
xor
mov
sarb
fs
rorb
cmc
scas
pushf
jmp
ljmp
mov
fiaddl
fdiv
sub
lds
inc
out
xchg
pop
lea
inc
loopne
add
loopne
iret
movsb
mov
or
mov
scas
xchg
iret
mov
loopne
insb
jmp
js
or
ret
inc
cwtl
cmp
mov
faddp
lahf
dec
push
lret
xor
loope
jge
inc
xchg
sub
sti
and
enter
lock
mov
pusha
jl
std
dec
jmp
mov
mov
adc
and
ja
inc
cwtl
loopne
sub
adc
xor
sub
sbb
je
stos
es
ret
or
orb
or
call
sub
dec
sbb
gs
sbb
repz
sub
cmp
or
mov
cmp
scas
push
cli
mov
icebp
stos
test
addb
loope
stc
insb
xor
jle
inc
mov
sub
cs
cmp
push
jl
mov
ljmp
push
dec
out
fadds
jns
outsb
out
or
lods
test
shr
bound
cmc
dec
sbb
jnp
and
dec
arpl
mov
pop
shl
dec
push
mov
jp
inc
cmp
dec
outsb
xchg
pop
rorl
cltd
ss
inc
cmc
jae
call
inc
jg
aas
scas
sbb
cli
enter
xor
nop
imul
std
mov
pop
inc
out
push
cmp
scas
mov
mov
cmp
int
stc
stc
arpl
pop
xchg
lods
popf
jno
repnz
into
mov
mov
popf
sbb
pop
cmp
add
jecxz
adc
cmp
mov
pusha
std
test
xchg
ja
in
and
mov
cld
rcrb
ret
push
jnp
ljmp
cltd
dec
les
pop
sub
jne
add
pop
out
or
sbb
iret
imul
icebp
cmp
and
bswap
ficomps
xlat
sbb
add
mov
push
movsl
jecxz
cwtl
inc
in
adc
push
mov
push
adc
push
popa
push
icebp
xor
jmp
fildl
sbb
fdivl
or
ret
mov
js
addr16
imul
ret
xchg
lret
dec
in
xchg
or
inc
call
jle
pop
lret
mov
mov
popf
scas
pop
imul
xchg
fs
jbe
data16
rcrb
insb
sub
fwait
imul
test
push
add
inc
test
mov
push
sub
frstor
cmpsb
adc
and
mov
iret
lret
sahf
dec
mov
loopne
shl
out
mov
cmpsl
push
test
add
xchg
dec
daa
jg
and
outsb
ds
popl
jns
out
shll
cmpsb
loope
or
fcmovnu
sbb
arpl
push
shll
or
int
not
pop
aaa
inc
mov
cmpsl
add
es
stc
decl
popf
or
add
mov
adc
jb
shrl
xor
or
xlat
nop
inc
xorb
jno
popl
jbe
repz
jbe
jmp
xchg
fistpl
adc
push
pop
mov
or
sub
pop
cmp
or
add
test
sub
sbb
or
test
ds
push
adc
in
stc
movsb
push
jb
shrl
adc
inc
bound
inc
mov
ficoml
push
les
insb
adc
movsb
gs
gs
mov
pusha
movb
scas
imul
cld
lret
sbb
mov
adc
inc
das
xchg
loop
dec
mov
out
or
inc
jp
adc
out
clc
add
jmp
sub
repz
ds
inc
sbb
std
add
loopne
rol
mov
shl
bound
cld
xlat
sbb
sub
icebp
pop
pop
dec
lea
xor
lret
ret
push
xchg
pop
adc
jae
and
jecxz
fidivl
stc
insb
inc
data16
fldl
orl
dec
je
push
xor
pop
stos
sbb
dec
pop
inc
in
ja
add
test
sub
mov
jg
mov
and
pop
out
enter
xor
push
lock
shl
xorb
mov
mov
xchg
or
lret
insl
rcll
sarb
shld
repnz
lcall
call
rorl
cmp
out
dec
push
or
mov
out
and
or
sahf
xchg
or
jp
sub
pop
dec
push
pop
cmp
sub
mov
pop
and
aaa
aas
lret
arpl
add
mov
jnp
stc
cmp
in
inc
adcl
push
cmp
mov
push
cmp
push
cmpsb
ds
hlt
cmp
sbb
into
xchg
xchg
scas
lret
xor
jo
xor
fadd
addb
xchg
jae
xchg
int
in
shlb
ja
fwait
fwait
jo
push
adc
dec
mov
dec
add
cmp
pop
addr16
xor
jno
xor
or
fcmovne
push
inc
daa
dec
add
js
push
cld
inc
test
push
push
mov
mov
pop
nop
jno
xor
bound
push
int
xorb
cmpsl
inc
jbe
ss
push
adc
enter
in
cmpsl
adcl
mov
mov
cmp
into
test
mov
int3
cmc
sbbl
inc
imul
into
push
enter
ljmp
iret
and
cs
repz
jle
jne
gs
je
call
sub
repz
loop
mov
or
xchg
push
stos
xor
outsb
adc
lahf
or
inc
add
popf
fcompl
push
push
test
mov
jle
std
adc
jbe
insl
sub
data16
lods
jb
rcrb
jae
mov
cld
add
sar
cmp
push
std
xor
and
nop
or
jnp
cmp
es
repnz
and
ds
lods
or
dec
mov
js
inc
cltd
and
lods
daa
jl
ror
adc
jbe
inc
pop
cmp
jo
movsb
xchg
jp
ret
movsb
mov
sub
pop
mov
push
cmp
fisubrl
loopne
sarb
adc
out
lahf
mov
fiaddl
and
jge
sbb
and
mov
xchg
pop
cltd
arpl
xor
add
fbld
mov
or
and
shl
repnz
xchg
push
subb
sub
aas
xchg
and
repz
xor
aam
into
dec
sub
mov
sub
stc
add
sub
pop
xorl
lods
jmp
push
jne
and
loopne
cmp
std
lret
jne
cmp
ss
or
pop
ja
pop
dec
ja,pt
push
movsl
mov
sub
add
cmpsl
repz
xor
insl
ret
adc
dec
or
mov
adc
loopne
data16
dec
xorl
xchg
loopne
sbb
jge
dec
jmp
into
jo
inc
jl
xchg
sbb
pop
sbb
mov
ret
sub
enter
push
xchg
into
pop
ret
verr
int3
dec
xchg
fs
and
sbb
loop
or
mov
jno
dec
ljmp
dec
bound
xor
std
dec
in
add
jmp
cmp
adc
mov
jae
cmp
loope
loope
inc
mov
mov
cs
loopne
adc
stc
push
gs
push
scas
push
in
xchg
lods
cmpsb
or
cwtl
sbb
mov
adc
inc
mov
xlat
lret
pop
push
pop
lea
stos
pop
insl
sub
xchg
adc
loop
xchg
cli
aad
add
in
cmp
inc
jns
out
mov
inc
mov
lret
xor
mov
inc
loope
inc
popa
sti
xchg
push
sub
and
cmp
jns
repnz
shr
jno
fldt
cmc
sbb
into
inc
popa
or
imul
hlt
xor
movsb
arpl
out
jns
add
mov
out
pop
icebp
mov
mov
shrl
adc
int
stc
add
push
and
rorl
clc
sub
inc
jae
add
or
mov
neg
rolb
es
xchg
and
push
insl
jae
dec
sbb
mov
sbb
sti
test
adc
stos
sbb
mov
loopne
out
das
sub
xorb
cmp
cmp
push
jmp
les
dec
xchg
cld
push
xor
sbb
fsubrl
sub
add
cmpsb
mov
sbb
fbstp
pop
sbb
sbb
dec
push
mov
arpl
repz
xchg
cmp
std
mov
mov
rorb
aam
stc
shrb
sbb
mov
sbb
push
dec
inc
mov
mov
stos
testl
xor
cmp
dec
repnz
or
mov
movsb
sbb
out
jns
mov
xor
movsl
pusha
pop
sub
add
adc
test
lahf
xchg
xchg
outsb
cmpb
divl
jae
dec
sbb
xor
xlat
push
fs
xchg
dec
stc
push
add
int
push
icebp
sahf
sbb
scas
cmpsb
inc
sarl
jl
jb
xlat
cmp
mov
xchg
push
mov
adc
sbb
lods
out
and
mov
sub
mov
inc
adc
adc
adc
aaa
mov
cmp
jnp
faddp
fnsave
inc
jns
sub
ja
rolb
add
xchg
push
push
and
cltd
dec
lret
shlb
stc
push
and
lock
pusha
and
sarl
bound
or
jb
je
in
lret
insb
icebp
jb
pop
mov
push
notb
pop
xor
faddl
fcmove
add
movsb
jmp
mov
jbe
xor
ljmp
xor
jnp
fwait
addr16
fcomi
or
jg
js
shrb
hlt
outsl
push
mov
and
mov
cld
add
test
test
pop
mov
insl
dec
lea
enter
jo
insb
into
cmpsb
add
add
add
subw
xchg
mov
push
dec
aad
popf
aas
repnz
lret
lea
mov
jbe
fcompl
addl
jg
push
sub
aad
fwait
push
loopne
ds
lock
out
xchg
add
fbstp
sbb
repnz
cmc
es
into
sti
jg
inc
push
mov
sub
xor
pop
mov
mov
mov
jae
pop
dec
insl
mov
push
pop
pop
and
sbb
jle
rcll
popa
imul
mov
dec
mov
jnp
ret
das
ljmp
inc
xor
mov
aam
ficomps
inc
fwait
xor
scas
jp
jle
xchg
mov
rcrb
adc
mov
fwait
dec
mov
enter
shrb
ror
xchg
mov
jbe
aaa
mov
filds
lret
test
dec
shrl
adc
push
and
inc
jl
pusha
xchg
xchg
dec
jle
cmp
ror
sub
mov
or
jae
fsubr
repnz
out
push
sbbl
cmp
into
and
mov
sets
or
call
dec
fcmovbe
lods
sbb
xor
push
loope
sub
lods
mov
inc
inc
in
sahf
int
and
xlat
int3
push
cmc
faddp
cmp
iret
fmuls
or
push
mov
out
adc
xchg
inc
push
push
pushf
mov
xor
sbb
jno
sbb
iret
mov
sbb
ret
and
xchg
add
test
fdivrl
arpl
addl
int3
mov
or
loope
clc
jne
sub
cmp
movsb
adc
dec
mov
cli
nop
scas
pushl
movsl
sti
xchg
pop
in
fnsave
outsl
arpl
cmp
jmp
in
int
xchg
fwait
aaa
test
mov
xchg
int
jns
mov
and
mov
ljmp
cwtl
lret
mov
mov
adc
fiadds
push
lods
mov
test
arpl
fcoml
adc
cltd
sub
lods
xchg
push
add
pop
in
mov
mov
jbe
rcrl
subb
daa
cmpsl
loop
mov
mov
inc
inc
clc
xchg
xor
fsubl
rcr
sub
jne
fstp
iret
dec
push
mov
inc
leave
jmp
scas
xor
mov
aad
popf
pop
pop
push
xor
add
shr
inc
push
pop
adc
dec
pop
jg
ss
adc
mov
popa
lds
mov
stc
sub
test
lcall
inc
sub
pop
lahf
cmpsb
fdiv
mov
out
inc
mov
sbb
rorl
pushf
add
mov
push
inc
sbb
ljmp
mov
fsubrs
outsl
add
daa
sub
lahf
jl
fs
loope
test
insb
xor
movsl
adc
fisubrs
cmp
jge
or
or
js
cmp
or
mov
fdivrs
movsb
imul
push
pop
xchg
mov
in
xor
int3
shrl
dec
arpl
adc
and
and
cmp
sbb
xor
div
cwtl
xchg
pop
mov
imul
dec
fidivrl
in
sub
gs
and
out
inc
js
aad
pop
jle
add
xor
loop
clc
repnz
push
dec
sub
call
inc
cltd
jae
notl
cmpl
aas
aad
cld
push
push
xorb
sbb
movsl
and
test
pusha
xchg
sub
lahf
cmp
test
loope
lds
icebp
addr16
js
das
lea
xor
mov
or
test
and
xor
lods
or
jo
push
mov
xchg
std
jg
inc
sbb
jl
pop
jne
push
add
sbb
lret
movb
cmp
xchg
sbb
mov
clc
sbb
mov
loopne
loope
daa
sbb
jecxz
xor
in
arpl
inc
fimull
inc
arpl
add
mov
mov
lods
mov
mov
repz
inc
dec
jnp
pop
cs
push
popa
xchg
push
pop
xor
or
lahf
adc
jns
lcall
lret
fmull
shlb
pusha
cmpsl
mov
arpl
sbb
dec
leave
std
sbb
orl
cmc
dec
in
adc
in
xchg
mov
cmp
scas
cwtl
dec
sub
insl
pop
and
push
cmp
or
insl
int
into
xor
dec
pop
xchg
test
push
loopne
out
mov
or
or
inc
mov
cwtl
scas
inc
in
repz
pop
mov
outsb
and
sbb
xor
sahf
fidivrs
mov
lcall
rolb
lds
and
loopne
leave
xchg
adc
lcall
test
movb
pop
test
pop
loope
xor
scas
sbb
push
jo
insb
das
int3
push
cmpsb
fbld
lahf
and
les
test
ret
gs
pop
jo
in
add
ja
loop
js
in
mov
ret
repz
mov
xor
xor
ror
inc
aam
or
enter
push
cli
ljmp
mov
xor
cmpl
add
dec
repnz
inc
nop
cmc
adc
mov
mov
and
dec
jns
stos
dec
mov
add
test
movsb
jbe
cwtl
cld
sub
mov
iret
cmp
ss
dec
pop
or
mov
add
xchg
les
sbb
jbe
popa
daa
dec
test
xlat
sub
cmp
enter
cmp
mov
movl
shlb
add
mov
call
pop
sub
inc
sti
mov
mov
dec
js,pt
dec
shr
cmp
sub
mov
add
in
test
pop
in
mov
imul
fsubs
push
mov
aaa
or
xchg
pop
rcrl
cmp
jo
fwait
dec
push
sti
jp
cmp
bound
mov
leave
daa
or
leave
jge
pop
mov
movsb
dec
and
jle
jo
jns
push
je
cmp
mov
xor
test
js
cmp
or
imul
std
loope
mov
add
add
mov
pop
sub
int3
decl
je
nop
adc
sbb
or
fnstcw
flds
mov
xchg
mov
xchg
movsb
pop
and
add
and
jg
pop
jg
sbb
jp
dec
xchg
mov
sbb
into
fidivrl
pop
rcrl
lea
shrb
dec
scas
pop
jmp
int
sbb
jmp
aad
adc
xchg
push
pop
jle
repnz
outsb
mov
sti
inc
adc
cmp
ror
push
adc
addr16
cmpl
cmp
fsts
push
or
lret
je
push
std
ja
loope
or
mov
orl
push
das
mov
es
mov
jg
xchg
jbe
cwtl
mov
lods
ljmp
and
and
sbb
xchg
push
popf
cmpsl
fisttpl
call
pop
outsl
test
lods
dec
jge
and
sbb
or
xchg
jl
sbb
mov
sbb
add
cmp
dec
in
add
ret
or
push
out
int
imul
jecxz
jbe
lcall
cmp
cs
out
aas
dec
ss
cltd
sub
fcmovbe
iret
push
fcompl
std
cltd
push
test
pop
out
rorb
jo
sbb
notb
fidivs
fbstp
add
mov
ss
mov
xchg
std
and
out
int3
cmpsl
stos
fiadds
sub
movsb
mov
pop
mov
jl
mov
xchg
nop
pop
pop
sti
or
scas
or
pop
stos
scas
outsb
test
js
or
dec
test
mov
adc
pop
dec
arpl
mov
loop
mov
xchg
loope
push
cmpsl
incl
inc
outsl
push
and
mov
aas
dec
mov
jno
and
das
js
cmp
cwtl
and
lahf
lea
mulb
sub
je
loop
pop
test
ja
mov
dec
divb
or
rcrb
dec
inc
mov
add
sub
push
mov
lods
jns
loopne
sbb
mov
mov
dec
adc
mov
pop
aam
mov
cmc
jecxz
dec
push
dec
mov
sbb
push
fbld
fistps
sbb
ja
call
sbb
jmp
dec
mov
cltd
xor
mov
adc
cld
inc
xor
out
sub
pushf
mov
ret
pop
or
adc
sbb
push
jno
jmp
inc
mov
das
in
mov
jnp
lret
push
out
xchg
cwtl
adc
sub
mov
dec
mov
add
xchg
cmp
push
movsb
loopne
sub
iret
mov
pop
sbb
mov
dec
jne
fs
sbb
jb
jo
test
data16
ljmp
sbb
call
add
dec
pop
repnz
cmp
dec
unpcklpd
sbb
push
cs
adc
fiadds
sub
loop
push
xor
xchg
mov
andl
ljmp
int3
lret
sar
sbb
mov
add
cld
mov
popa
repnz
sub
sbb
fimuls
lret
xlat
test
push
inc
repz
cltd
or
push
jne
xor
adc
mov
xchg
push
push
xchg
add
cmp
jecxz
js
scas
sbb
xchg
jmp
orl
outsl
ss
inc
outsb
and
jg
add
mov
mov
pushf
popa
loope
sbb
fcomi
test
inc
lods
xchg
add
pop
fistpl
push
addr16
inc
js
dec
mov
dec
jae
lds
arpl
outsl
minps
data16
jno
testl
push
call
rorb
ret
sub
js
rcl
sahf
adc
lcall
inc
cmpsl
dec
aas
mov
int3
xor
icebp
pop
daa
lods
inc
movsb
scas
fs
xchg
js
or
cmp
stos
push
jo
xorl
and
lea
jae
sbbl
into
rcrb
or
insb
xchg
jge
mov
sahf
xchg
mov
or
mov
inc
mov
call
jae
cld
dec
mov
adc
lock
sbb
sub
jne
addl
push
dec
cwtl
xor
int
push
repnz
xchg
sbb
xor
imul
push
jo
mov
xor
or
je
jge
pop
shl
jge
stos
jl
fs
fmul
outsl
int3
push
das
xor
xchg
lahf
adc
rolb
adc
shlb
cmp
cld
fwait
jo
outsl
movsb
jae
inc
push
sub
out
roll
call
push
cmp
jmp
outsb
xchg
aad
jae
add
movsb
and
xchg
sbb
dec
and
xor
mov
pop
mov
lods
add
and
xchg
adc
cltd
sbb
add
dec
sub
dec
xchg
lods
push
jns
cwtl
jne
lds
sub
inc
icebp
enter
das
aam
mov
jb
mov
mov
sbb
stos
test
ret
scas
cli
es
repz
dec
ss
adc
add
pop
sbb
leave
cld
jo
push
adc
push
cwtl
sbb
movsb
mov
lock
dec
int3
ds
sahf
or
sub
sub
fdivrs
sahf
insb
into
sub
jp
into
or
mov
push
jge
or
pusha
stos
pushf
mov
shrb
jmp
test
and
enter
xor
or
jle
sti
add
xchg
stos
dec
fldenv
and
mov
add
in
pop
lahf
jecxz
pop
jg
bound
jbe
rcr
test
in
out
jae
pop
outsl
movsb
adc
jle
pusha
cmp
shr
xchg
push
dec
inc
pop
jae
jmp
shl
xor
mov
scas
roll
push
sbb
inc
mov
loopne
mov
and
pop
xchg
and
dec
mov
pop
iret
add
cs
mov
icebp
mov
mov
rcrl
mov
int
pop
mov
lret
or
insb
in
push
cmp
dec
add
mov
xchg
pop
movsb
cmp
and
and
sub
push
pop
shr
and
adc
mov
leave
jns
pop
jnp
into
jns
mov
or
out
jge
pop
pop
aad
jnp
xor
push
pop
pop
rolb
fs
ret
or
sti
test
push
mov
dec
xor
cmc
inc
xlat
ljmp
dec
data16
xlat
fstpt
or
adc
ds
mov
int
jno
out
paddq
and
mov
lods
jge
dec
repnz
mov
xchg
and
mov
jmp
adc
jmp
in
push
jg
sbb
mov
shl
call
or
fwait
inc
xchg
pusha
hlt
rcr
sub
cmp
dec
mov
rcrb
mov
dec
int3
xchg
xor
fstl
jne
dec
lods
ds
mov
js
mov
cmp
pop
fsubr
jbe
mov
or
adc
jae
rcr
cmpsl
xchg
stos
xchg
add
pusha
cmp
xchg
pop
popa
or
lahf
xor
in
mov
adc
nop
inc
sbb
into
dec
cld
inc
sub
aaa
mov
rclb
cli
outsl
fiadds
loope
mov
fdivrl
or
mov
xlat
push
out
cmp
jg
in
or
fdivrp
add
in
jbe
cs
and
push
jo
lret
ret
fildl
xchg
in
in
cmp
adc
imul
lea
iret
add
mov
mov
push
scas
xchg
sub
pop
fistpl
sbb
stc
test
jge
mov
pop
repnz
xor
jecxz
test
cmp
outsb
cmpsl
push
sbbb
lret
outsl
or
xchg
ja
dec
xor
sub
cmp
rcr
insl
sub
jp
sbb
daa
adc
mov
mov
push
pop
mov
imul
push
and
add
lret
cmc
mov
mov
push
aaa
mov
xor
mov
int3
pop
jle
pop
outsl
out
loopne
mov
lahf
jbe
mov
jle
xchg
cld
dec
add
in
into
js
or
xchg
inc
movsb
sub
cmpsl
add
and
mov
out
stos
mov
lock
movsl
adc
mov
flds
je
xchg
aam
mov
xor
mov
or
lahf
dec
add
fnstsw
ror
data16
bound
xchg
cwtl
repz
fabs
xchg
into
dec
inc
mov
stc
icebp
inc
sarl
ss
ljmp
rolb
rol
ja
mov
inc
jbe
stos
mov
jge
scas
popf
inc
add
adc
dec
and
or
or
aaa
aas
arpl
shl
xor
fdivrl
xor
push
inc
push
push
push
insl
push
daa
xor
stc
add
xor
repz
mov
jmp
push
data16
pop
scas
sub
pushf
bound
and
sbb
fldt
repnz
pushl
shll
inc
and
loope
hlt
cli
push
jno
jno
stc
xor
xlat
push
xchg
xchg
dec
test
mov
insb
js
sub
daa
push
es
pop
addr16
imul
movb
out
inc
fsts
popa
adc
add
das
lock
xchg
out
push
sbb
aaa
xor
xchg
lods
and
iret
add
mov
add
ljmp
fnstcw
cltd
adc
pop
dec
aam
or
or
xchg
inc
test
cmpsb
repnz
fiaddl
or
cmpsb
jl
fldenv
pop
dec
push
out
jns
dec
inc
pop
hlt
pop
iret
jecxz
cli
cmp
loop
push
icebp
ret
add
popf
ret
in
cmp
fldt
ret
xor
push
jecxz
xor
cmc
lea
sub
stc
js
push
sbbl
sarb
loop
loope
jnp
test
test
mov
stos
addr16
mov
ljmp
add
test
inc
or
pop
into
aad
int
stc
adc
les
push
mov
aam
testb
pop
adc
repz
test
jb
cmp
push
scas
mov
xor
adc
dec
ret
sbb
sbb
test
andl
and
mov
xor
xor
lds
ss
mov
lahf
xor
das
inc
cmp
int
jno
inc
rcll
adc
cmp
pop
mov
add
mov
push
inc
mov
testb
pop
in
ja
jne
or
xor
xchg
pop
xor
sbb
jae
dec
xchg
ret
sti
push
cmp
dec
imulb
lods
ret
arpl
mov
call
popf
fsubrp
adc
dec
lock
jg
sub
in
lock
cmp
movsb
ss
insb
or
test
jge
ljmp
add
arpl
jnp
out
outsb
mov
gs
xor
roll
mov
sub
adc
xchg
lea
cmp
lcall
sar
jns
cmp
add
push
jp
into
fs
jmp
mov
jnp
xor
in
lret
or
mov
cmp
cmpl
sarl
aas
aad
lock
lods
add
sub
sahf
pop
sub
pusha
cmp
sti
pop
imul
fsubrl
iret
dec
and
cltd
mov
sub
mov
xchg
leave
stos
mov
sub
xchg
jge
rclb
andnps
lock
data16
pusha
fwait
sbb
sahf
arpl
leave
bound
lock
mov
and
or
pop
sub
outsb
lret
push
sbb
and
clc
and
lcall
push
rcrl
scas
jne
std
shrb
lcall
mov
xor
adc
aas
mov
dec
sub
das
hlt
dec
sti
cmc
xor
add
sub
jp
add
nop
sub
lock
jp
loopne
mov
test
mov
orl
mov
push
in
subl
flds
pop
loopne
sahf
shl
ret
idiv
daa
and
sbb
sbb
add
sub
adc
xchg
and
pusha
jo
aaa
ret
outsb
repnz
popf
adc
xorb
test
jecxz
das
mov
inc
movsl
in
adc
fdivp
ljmp
aad
inc
pop
popa
mov
adc
mov
es
mov
mov
and
loope
push
inc
inc
lret
jo
and
enter
lds
gs
out
cmp
mov
adc
in
test
outsl
sub
mov
mov
popf
aaa
pushf
jg
icebp
sub
sbb
mov
jae
add
xlat
in
cmp
aas
in
js
inc
jae
dec
mov
fisubrl
pushf
leave
inc
test
outsb
xchg
and
and
or
mov
cli
mov
mov
aad
imul
dec
xchg
inc
inc
adc
and
or
sbb
mov
sbb
das
jb
sbb
and
and
pop
xchg
stc
cmp
push
divl
mov
xchg
ljmp
das
jl
and
adc
repnz
into
call
adc
jb
ret
jecxz
iret
cmp
pop
scas
pop
je
in
jle
xchg
add
loope
mov
add
int3
xor
fisttpll
cmp
xchg
addr16
repz
jl
imul
dec
mov
xor
fsubl
mov
add
dec
les
out
push
mov
jle
popl
cmp
fdivl
xchg
fistpl
cli
movsl
mov
mov
xor
sbb
push
pop
aad
add
psubb
sub
mov
mov
ret
insl
fisttps
fimull
inc
xlat
movsb
movsl
and
out
dec
xchg
mov
inc
pop
in
jne
cmp
mov
or
pop
hlt
cmp
imul
popf
jmp
into
rcrb
pop
cmp
lcall
push
cmp
out
mov
dec
sub
pusha
adc
cmp
pop
rolb
jp
mov
fstl
inc
sbb
test
xorl
add
addl
sbb
jno
ret
aad
stos
movsl
sub
and
stos
push
dec
mov
adc
xchg
jecxz
cmp
push
imul
jg
jae
aad
jae
push
cmc
mov
gs
lock
shlb
push
ljmp
sbb
inc
jmp
adc
xchg
mov
push
mov
pushf
jne
mov
stos
insl
sbb
push
xchg
mov
jbe
add
loope
lret
jmp
out
push
pop
adc
adc
enter
cwtl
xor
mov
inc
hlt
xor
sarl
or
sbb
pop
negl
jns
jo
mov
popf
or
jl
data16
ja
aam
mov
outsb
jp
mov
and
imul
mov
inc
mov
lea
mov
mov
aad
cmc
aaa
addr16
test
jmp
mov
icebp
out
mov
push
leave
mov
out
cli
jle
push
arpl
pop
pop
cmp
imul
pop
cmovns
imul
not
cmp
lea
stos
ljmp
int
push
sub
xor
push
add
mov
repnz
adc
xchg
mov
inc
push
stos
sbb
pop
xchg
test
loop
mov
stos
cvtps2pd
jecxz
cmpsb
adc
dec
loopne
stc
dec
push
aas
rorb
push
dec
call
lock
cmp
adc
ror
cmpsb
ret
cmc
fimuls
dec
iret
push
add
orl
inc
popf
test
imul
insl
insb
cltd
xchg
lock
mov
or
fistpll
stc
mov
or
push
mov
nop
paddusw
xlat
push
jbe
cmpsl
fsubs
ljmp
push
adc
test
ret
imul
xchg
xlat
cwtl
mov
fildll
xchg
jnp
stos
inc
fsubrs
rclb
jnp
xchg
xor
mov
into
mov
sub
cmp
sub
dec
xchg
sbb
ror
pop
lock
stos
pushf
outsb
xor
xlat
das
push
add
out
jl
testl
cli
cld
shl
xor
xor
mov
and
mov
push
stos
add
sub
shrl
push
jecxz
xor
cmp
add
add
loop
loop
pusha
xchg
sub
mov
ret
adc
inc
mov
bnd
xor
push
sbb
scas
push
mov
fwait
xchg
pop
mov
out
bound
jl
mov
jmp
inc
orb
xchg
mov
cwtl
loop
fistpll
jnp
adc
lret
mov
test
sbb
pop
add
ret
aaa
lock
rol
std
pop
out
outsb
jmp
dec
popa
adc
mov
jae
xchg
mov
fwait
adc
out
or
mov
dec
cmp
call
scas
mov
repnz
in
mov
movsb
dec
mov
xor
cmp
jns
jno
and
mov
aaa
scas
pop
jne
pop
jecxz
sar
inc
in
ds
imul
bound
scas
fdivrp
jae
mov
and
jae
test
jge
sbb
and
sub
sbb
iret
cmpl
lds
pop
xlat
out
push
dec
loope
push
pop
jb
les
pop
pop
cmp
mov
mov
jno
dec
ficoml
out
fnstcw
mov
xchg
lods
cmpsl
inc
sub
xchg
push
push
aaa
pusha
xchg
push
or
xor
jmp
lods
loope
lahf
rsqrtps
push
sbb
dec
mov
sub
mov
popf
in
insb
lock
imul
mov
int3
js
test
inc
or
pop
mov
mov
lret
xchg
addr16
and
ret
cltd
cmpsb
aas
hlt
xor
iret
xor
fisttpll
xlat
es
hlt
push
xor
in
scas
mov
out
cmp
rcrb
sub
bound
pop
addb
sub
mov
cmc
ss
test
add
add
fmull
pop
js
aas
push
lret
push
dec
cmpsl
out
sbb
inc
cmp
js
inc
fdiv
fists
out
and
std
push
mov
adc
jg
push
andl
addr16
test
jb
mov
dec
popf
notl
xchg
pop
ljmp
add
mov
in
push
shlb
into
mov
xor
rorb
int3
xchg
push
sub
stc
push
pop
sbb
mulb
fucomi
push
mov
or
test
pop
push
xor
mov
xchg
and
jp
and
jbe
nop
and
lds
fisubs
mov
je
js
pop
mov
mov
mov
adc
test
clc
add
and
in
ret
inc
pop
imul
cwtl
mov
mov
stc
mov
cmp
fists
stos
mov
dec
dec
mov
iret
cmp
stos
loopne
shr
mul
popa
out
dec
shlb
inc
notl
sub
out
std
push
push
in
lods
mov
inc
fs
push
add
int
insb
jno
push
loop
outsl
push
int3
cwtl
jmp
add
lods
shlb
jne
adc
pop
bound
arpl
repnz
sbb
leave
jns
mov
mov
jecxz
out
push
dec
xchg
xorb
pusha
inc
cmc
aam
mov
and
dec
xor
adc
jb
sbb
lds
out
fsubs
aam
lods
icebp
jbe
aaa
sub
enter
mov
in
and
cwtl
adc
js
push
cmpsb
mov
mov
adc
add
fsubr
ja
jne
mov
hlt
jg
lods
jle
pop
sbb
es
cmp
dec
pop
add
or
cmp
sub
dec
popf
jns
insb
cs
push
pushf
lock
jp
lock
imul
in
in
sub
jge
cmp
cwtl
cmp
mov
jnp
pushf
add
shrb
cmp
and
mov
cmp
mov
fdivr
ja
mov
cmpsb
add
lea
call
sub
fmulp
lock
add
stc
ficoml
loopne
dec
sbb
jge
das
lahf
push
dec
scas
xchg
push
xor
mov
imul
mov
pop
fldcw
adc
fninit
sub
xchg
cwtl
daa
jl
in
lret
cmpsl
sbb
jo
add
push
pop
push
loope
fmuls
lret
cli
xor
test
xchg
cmp
aaa
popa
cmpsb
xor
xchg
xchg
mov
xor
imul
mov
clc
jle
fildl
jmp
sbb
and
sbb
xchg
rclb
jb
insl
push
sub
scas
jmp
aad
add
leave
enter
push
xchg
xchg
jp
lea
mov
lahf
cmc
pop
cmp
inc
xor
insb
sub
dec
pop
dec
pushf
lea
mov
dec
ja
cli
fistps
jne
dec
mov
xlat
push
xchg
mov
xchg
adcb
shrb
cmp
call
rclb
lret
dec
cmc
dec
fimull
push
xchg
jbe
test
ret
cmp
in
push
jecxz
dec
shl
scas
pop
mov
pop
ret
imul
lret
arpl
xor
sahf
jnp
je
mov
mov
les
scas
aad
andb
fucom
shlb
int
cmp
aam
iret
mov
push
mov
pop
inc
cs
adc
adc
inc
in
sbb
popf
push
sti
rcr
in
or
mov
xlat
call
sub
push
sahf
mov
dec
push
rcll
shll
pushf
push
fsts
ss
fidivl
aam
jmp
mov
insl
pop
inc
dec
repz
mov
cltd
aaa
stos
mov
jae
data16
clc
sbb
pop
pushf
scas
add
lcall
dec
repnz
cs
and
dec
adc
dec
add
or
mov
sbb
sti
int
mov
rcrb
mov
lret
mov
and
pop
xchg
adc
lcall
das
and
lock
xor
mov
lret
or
fdivr
orb
lock
mov
pop
jo
xrelease
fadds
inc
mov
mov
mov
ljmp
jl
jbe
sub
out
sbb
jne
push
lea
xchg
insb
incl
ljmp
rol
mov
jecxz
test
stc
inc
fwait
gs
jbe
ljmp
out
xchg
dec
mov
jno
imull
jp
pop
cmp
jg
imulb
inc
fwait
stos
mov
sub
sbb
or
loop
and
jno
in
mov
es
cwtl
js
inc
push
mov
fwait
adc
jp
lea
adc
adc
xor
shll
cld
pop
add
nop
xchg
push
jae
sbb
and
sub
sbb
mov
sbb
or
jp
mov
data16
inc
cmp
movsl
clc
cli
aaa
mov
jge,pn
popa
inc
mov
rcrb
loop
mov
in
fidivrl
addr16
adc
int
rcl
aam
adc
xor
pop
mov
out
adc
cmc
or
ds
lcall
push
pop
xor
xchg
testl
loopne
daa
xlat
sub
jle
and
rcl
cs
cli
add
cs
cli
xor
lods
pop
jns
jp
push
mov
dec
inc
inc
pop
pushf
inc
sbb
and
aam
jg
decb
jbe
insl
add
mov
sub
dec
std
jmp
dec
mov
xchg
push
pop
add
mov
pop
dec
pop
nop
ljmp
inc
mov
add
inc
cmp
cld
aaa
sahf
adc
inc
nop
sub
arpl
mov
sbb
les
cwtl
jne
sbb
mov
ds
ficoml
mov
pop
out
fdivs
aaa
mov
dec
mov
jle
jne
push
xchg
ret
movsb
loopne
mov
outsb
sti
or
add
inc
add
push
push
inc
pop
inc
push
lret
cwtl
in
xchg
mov
dec
mov
call
aam
fsubr
jb
adc
lods
loope
lcall
push
jmp
outsb
jb
out
dec
mov
cmpsl
lret
negb
cmpsl
sar
in
inc
and
subl
ljmp
push
imul
or
xchg
pop
jmp
out
iret
xor
dec
cmp
cmp
outsl
add
and
testb
inc
sub
push
adc
into
jno
outsb
jg
repz
es
subb
lahf
bound
hlt
shl
les
repnz
mov
test
enter
or
pop
xchg
mov
mov
xor
adc
ret
aam
jl
cmpsb
mov
pop
pop
daa
push
in
lock
sbb
icebp
in
insb
jle
mov
sub
dec
push
or
outsl
xlat
dec
in
mov
ljmp
mov
push
cwtl
sbb
scas
lock
xor
int
and
add
push
adc
lret
pop
mov
fildll
or
sarl
repnz
fimuls
mov
sarl
mov
push
mov
xor
add
dec
in
jl
loope
lds
jb
in
mov
imul
and
lods
push
push
jbe
jmp
inc
les
ljmp
and
stos
nop
mov
lcall
adc
test
dec
dec
cmp
fs
sub
aaa
lcall
cli
ja
das
cmp
push
xor
test
pop
fnstsw
or
jns
pop
pop
cmp
mov
lods
rorl
xchg
xchg
icebp
movsb
pop
enter
inc
mov
sub
scas
xor
cmpsb
xchg
sbb
aas
mov
cld
or
sahf
inc
enter
pusha
addr16
stos
jae
arpl
je
neg
mov
mov
jns
nop
sub
adc
lock
loopne
lea
repz
mov
sarb
sbb
loopne
imul
cmpsl
popa
fdivr
mov
and
xchg
jle
add
fstps
fisttps
or
paddusb
push
scas
ficomps
mov
int
es
mov
cld
push
mov
pop
inc
repnz
mov
popf
push
nop
mov
idiv
inc
gs
xor
scas
idivl
xlat
mov
pop
push
dec
iret
xor
inc
adc
add
loope
mov
jbe
inc
stc
stos
xchg
pop
js
divl
lcall
dec
js
test
sbb
fcoml
sub
push
lcall
imul
inc
adc
test
loope
mov
dec
mulb
sbb
sarl
push
pop
jbe
push
sub
pop
inc
pop
out
test
mov
cmpsb
fld
adc
and
inc
scas
jmp
and
push
jle
loope
dec
stos
leave
xchg
lret
lahf
out
icebp
mov
and
mov
mov
std
dec
lahf
movsl
arpl
push
repnz
mov
inc
mov
cmpsb
dec
adc
adc
fisttpll
rol
insl
xor
in
sbb
xchg
add
mov
xchg
pop
sahf
mov
sub
mov
pushf
xchg
in
stos
shl
jle
inc
pusha
mov
xchg
leave
jae
jnp
cmp
popa
jns
adc
fstpt
bound
out
lds
in
jp
or
cld
push
sub
cwtl
push
aam
jb
xchg
or
jne
pop
leave
idivb
pop
or
jb
inc
sbb
dec
dec
push
ja
fiaddl
iret
fstpl
xchg
jnp
pop
sahf
lods
add
add
subl
xlat
das
in
enter
andb
stc
and
dec
inc
fstps
sbb
or
mov
xor
adc
pop
jnp
std
inc
push
out
xor
mov
adc
push
sbb
mov
sub
pushf
dec
loop
cmpsb
repnz
repz
mov
stos
cmpb
pop
stos
add
test
inc
ficomps
insb
aad
aam
push
dec
mov
insb
loop
cmpsb
or
pop
mov
subb
mov
xlat
push
push
xor
hlt
repnz
out
push
xlat
adc
jnp
jg
jle
sahf
dec
test
mov
cs
add
pop
xchg
scas
outsb
jmp
clc
and
insl
and
lret
movsl
jno
xor
test
cld
mov
notb
lock
push
pop
adc
repnz
faddl
pop
add
cmp
aam
mov
ret
aaa
add
or
cmc
xor
orl
inc
movsb
mov
dec
xor
mov
fwait
mov
nop
stos
and
pop
pusha
mov
jbe
xor
xchg
test
not
out
mov
pushf
in
fisubrl
rorl
mov
cmpsl
adc
imul
xor
mov
adc
jb
add
jo
xorb
stos
shlb
aas
leave
jbe
xor
jp
lret
outsl
jg
daa
mov
into
lcall
pop
or
push
popf
cld
sbb
xchg
cmp
call
dec
push
pop
insl
testb
cmp
daa
pop
outsb
xor
arpl
cmp
lret
cmp
pushf
mov
les
outsl
fs
adc
insb
mov
mov
outsl
subl
outsb
mov
jno
shrl
push
fnstcw
je
popf
dec
xchg
aam
fsubrs
aas
arpl
dec
adc
sbb
xor
stos
mov
loopne
fcoml
icebp
cmpsl
sahf
and
and
fcmovbe
stc
hlt
jne
sub
xor
cmp
mov
in
cltd
stc
xchg
cltd
and
dec
lcall
in
pop
arpl
dec
in
adc
pop
xor
mov
sub
mov
shll
jecxz
push
dec
lret
test
negl
clc
xchg
in
mov
loop
fcom
jns
dec
mov
rorl
mov
xchg
inc
shll
xor
mov
lret
notb
mov
pushf
das
dec
ljmp
push
jl
scas
dec
daa
xorb
xor
and
enter
jnp
jb
out
aas
or
outsl
mov
sarb
inc
sub
lods
xor
iret
into
test
push
push
fdivrs
flds
test
fs
pusha
rolb
daa
inc
adc
xchg
sub
mov
mov
out
pop
icebp
mov
and
inc
bound
in
mov
lods
bound
scas
adc
jo
dec
inc
mov
outsl
js
test
xor
cli
inc
sti
add
jo
and
pop
popa
inc
inc
cltd
cli
add
lds
je
lds
pop
push
jle
or
ja
idiv
cmpsl
dec
push
cs
notb
mov
add
cmp
or
sbb
cmp
sahf
push
fldenv
in
shll
cmc
sarb
pop
mov
xchg
rcrb
push
fisubrl
aam
push
adc
fnstenv
or
or
popa
rcl
bound
adc
adc
jae
dec
cmpb
cmp
mov
int
cmpl
gs
outsl
pop
jmp
push
mov
test
out
and
out
loope
pop
jnp
mov
inc
mov
or
mov
mov
and
inc
xor
jns
push
test
ret
sahf
out
pop
repz
cmp
cmp
xlat
loop
popa
mov
jp
inc
inc
pop
xor
xchg
jne
testl
and
adc
dec
pop
jb
xchg
das
mov
sub
pop
icebp
repz
cmp
sub
push
mov
shll
into
cmp
sbb
cmc
loope
xchg
in
jnp
xor
dec
notw
jbe
mov
out
dec
enter
outsb
imul
mov
pop
cmp
sahf
xchg
xchg
in
push
inc
jp
scas
pop
mov
subl
mov
repnz
lret
mov
cmpsb
xor
loope
movsb
cmp
sub
push
or
mov
scas
ret
fcompl
jecxz
fldcw
out
mov
mov
fistps
ljmp
fisubl
and
idivl
sbb
dec
push
add
fwait
sbb
mov
push
outsb
adc
xchg
cmp
icebp
push
lret
add
xchg
jae
pop
mov
les
imul
pop
lods
fldt
shll
int
imul
aaa
mov
test
aas
stc
add
or
or
pop
loopne
adc
fldt
and
and
popf
lret
aad
daa
mov
movsb
push
in
enter
cmpsl
pop
movsb
or
or
stos
pushf
pushf
nop
sub
sbb
int3
out
xchg
jg
or
add
jo
adc
scas
dec
jnp
jl
xor
ror
mov
roll
push
jg
data16
sub
mov
rcr
stos
and
sbb
loope
mov
fiaddl
aaa
or
pop
mov
mov
pop
repnz
xchg
mov
icebp
pop
mov
lahf
shrb
test
mov
pop
lds
inc
mov
inc
push
xchg
or
lods
je
out
imul
pushf
stos
sub
ljmp
and
jnp
push
mov
in
mov
lea
ds
pop
sbb
ja
dec
jne
jbe
xchg
push
and
rorb
subl
testb
fstl
rcl
test
out
js
pop
pop
jmp
mov
lea
adc
xor
jo
imull
mov
std
sbb
out
mov
fisttpl
cmp
or
sahf
lret
pushl
cmpsb
cmp
test
mov
in
or
push
scas
dec
sub
lds
repnz
push
shl
add
and
loopne
or
mov
mov
shlb
je
adc
cmp
mov
je
lea
jo
adc
push
or
std
pop
jecxz
dec
shlb
insb
and
test
sub
or
cmp
add
xchg
mov
jmp
pop
mov
pop
jecxz
repz
mov
mov
xor
lods
repz
inc
adc
aad
push
jmp
insl
into
adc
call
sub
pop
cmp
xchg
incl
jle
cmpsb
mov
out
lods
loopne
mov
jp
pop
xor
fwait
adc
jp
adc
jle
xchg
out
iret
xchg
push
cvttps2pi
sahf
out
xchg
mov
les
cmp
push
cli
inc
shl
loop
popa
out
mov
sub
cld
fildl
dec
cmp
into
daa
pusha
jnp
jmp
mov
jle
inc
xor
mov
sbb
popa
mov
shlb
add
insb
adcb
xchg
push
jo
imul
imul
dec
stos
in
enter
adcb
push
or
cli
ljmp
sahf
push
adc
sysenter
ljmp
gs
test
cs
leave
call
xchg
add
mov
jne
xchg
outsb
cltd
jb
out
push
fs
inc
mov
jns
test
call
dec
scas
cmp
mov
lods
stc
mov
add
lock
adc
adc
cmp
movsl
dec
and
rcr
inc
mov
mov
shll
lahf
mov
pop
aam
aam
loop
mov
xor
cmc
stc
pusha
jecxz
test
add
mov
int3
add
test
ljmp
sub
scas
int3
pop
push
es
hlt
mulb
push
insl
pop
stos
stc
adc
xor
mov
leave
sbb
adc
push
inc
dec
push
pop
xor
imul
lahf
cmpsb
push
mov
xchg
pop
jae
jecxz
fwait
pop
aaa
pop
dec
push
hlt
fisubl
ds
out
cmp
inc
imul
sarb
loope
gs
sub
xchg
test
xchg
and
add
insb
push
inc
sub
and
mov
xor
fwait
punpckhdq
ja
add
add
ret
dec
shlb
cmp
xor
lret
or
add
mov
lock
shrb
in
test
adc
adc
sbb
aas
mov
inc
imul
and
rorb
cwtl
pop
jae
xor
popf
pcmpgtb
loopne
or
ret
stos
mov
pop
xchg
out
fnstcw
or
in
add
addl
mov
jmp
add
mov
repz
sbb
pop
add
es
pop
xchg
jmp
sbb
fadds
or
test
sub
dec
js
test
cmp
mov
adc
pop
jns
into
mov
xor
cmp
stos
mov
pop
jle
les
push
mov
mov
or
xchg
inc
ret
jns
mov
loope
aam
adc
push
push
xlat
mov
inc
xchg
jmp
insb
movsl
loopne
addr16
fidivs
in
sbb
ljmp
cmpsl
sarb
in
xchg
imul
scas
lea
dec
cld
les
dec
dec
and
mov
in
cmp
xchg
fdivrp
addl
mov
sqrtps
push
xor
leave
adc
scas
push
jns
dec
in
mov
lds
cmp
jbe
sbb
orb
arpl
inc
lret
nop
test
pop
je
add
adc
jmp
mov
loop
and
fistpl
jmp
icebp
rol
push
cmp
push
aad
idivb
cmp
in
sub
push
mov
shrb
scas
test
dec
dec
cs
mov
cwtl
and
pop
cmc
adc
add
mov
addr16
bound
or
cmp
imul
xlat
fcmove
adc
scas
mov
and
and
lcall
icebp
push
test
pop
imulb
scas
lret
dec
lahf
mov
push
inc
xchg
cmc
jne
cmpsb
aad
push
movsb
lds
sbb
sbb
fadds
push
rorb
jmp
mov
adc
inc
push
mov
fs
dec
lock
or
or
xor
rol
mov
es
push
jg
mov
push
mov
arpl
or
mov
gs
inc
inc
add
ret
ds
inc
mov
aad
notb
push
mov
mov
loop
mov
mov
pop
daa
xor
dec
sbb
retw
jbe
push
and
int
xor
in
popa
xor
pop
pop
js
in
pop
iret
dec
subb
sbb
loop
int3
add
shl
lds
es
xor
jg
push
sti
sbb
mov
popf
dec
jno
in
push
mov
ja
mov
mov
push
mov
inc
aas
cmp
rcrb
jp
push
xchg
mov
cmpsl
lds
subb
stc
ds
fmuls
dec
or
iret
cmp
out
dec
sbb
fstpt
adc
add
dec
pop
fdivrs
adc
inc
push
sub
push
jg
push
inc
not
ror
push
mov
cltd
iret
and
mov
ds
outsl
pop
push
and
xlat
mov
test
dec
pop
dec
pop
cmp
mov
adc
xchg
xlat
mov
mov
movb
cltd
push
popa
sti
adc
mov
cld
or
push
loop
pop
xor
daa
or
rcr
das
xchg
outsb
or
xor
nop
outsb
xchg
push
lods
inc
pop
clc
mov
mov
jp
cmpsb
nop
bound
push
lock
testl
in
xor
mov
xor
aas
pop
test
xchg
or
sbb
shl
adc
push
std
mov
iret
pop
rcrl
cmp
xor
gs
ja
lods
fdivp
icebp
mov
fadd
and
inc
inc
stos
jb
and
xchg
fstpt
or
fnstsw
mov
jmp
xor
fidivrs
sub
fsub
and
sbb
mov
pop
icebp
xlat
sar
loope
les
push
cmpb
aas
cmp
xor
add
rdpmc
inc
hlt
fs
pop
jo
inc
sub
gs
ljmp
mov
or
std
mov
aam
dec
lds
orb
pop
in
arpl
js
mov
sbb
mov
flds
push
insb
inc
repz
sub
mov
mov
test
xor
mov
sub
ss
std
mov
sub
jle
sahf
mul
inc
in
pop
into
mov
test
sbb
xlat
cmp
cs
jnp
inc
daa
sbb
pop
mov
adc
hlt
mov
and
jge
test
pop
leave
aam
imul
clc
or
lcall
jne
loopne
sbb
xor
arpl
stc
jle
sarl
push
leave
mov
andb
data16
stc
dec
mov
jp
scas
fmul
sub
jp
outsb
or
repz
and
in
cmp
rdpmc
jne
jb
sbb
push
shr
xchg
gs
push
dec
pop
dec
mov
mov
sub
cmp
and
dec
cld
mov
popa
add
mov
inc
nop
xchg
js
in
or
mov
or
jp
mov
add
shrb
push
stos
and
dec
jecxz
movsb
push
dec
outsl
sbb
add
cmpsb
sub
xchg
shlb
lds
imul
fsubl
scas
cmp
sti
sub
repnz
sub
cmpsl
cmp
es
out
inc
pop
pop
add
lock
jmp
or
adc
jmp
mov
jp
inc
or
dec
xor
sbb
add
jae
nop
lahf
or
in
pop
xchg
pop
test
add
xchg
and
popa
cmp
mov
sub
fcoml
rcrl
pop
in
inc
sbb
mov
pop
dec
shl
xlat
ja
repnz
lods
push
adc
lcall
in
add
sbb
pop
jns
fsub
lahf
jmp
insl
leave
push
adc
leave
aaa
and
fxch
clc
scas
subb
adc
jnp
pop
xor
fs
push
leave
cld
sub
add
mov
shlb
fs
adc
xchg
sbb
pop
outsl
jle
sub
in
insl
scas
loop
or
enter
inc
and
and
pop
xchg
out
push
pop
mov
pop
mov
sar
adc
inc
inc
lods
sbb
aas
clc
out
int3
gs
cli
divl
lret
cmp
mov
cld
js
push
xor
and
fsubs
dec
sub
xor
sbb
outsl
mov
mov
nop
push
inc
mov
or
ss
jmp
testl
cmp
cwtl
std
loop
dec
aad
sbb
stc
add
pusha
jns
sti
shrb
enter
ljmp
iret
loope
pop
adc
stos
out
sbb
mov
fucomi
xchg
jne
push
inc
outsb
aam
in
lahf
into
sbb
ljmp
test
cmp
shrb
adc
enter
adc
ja
scas
scas
sbb
loope
int3
popf
inc
dec
mov
jge
mov
mov
inc
inc
mov
and
in
inc
pop
mov
dec
jp
stos
jb
pop
adc
leave
sub
inc
ljmp
outsb
outsb
sub
mov
aaa
cmp
in
mov
push
das
jo
mov
sbb
aad
or
imul
sbb
dec
mov
loopne
adc
cmpsl
mov
mov
push
xchg
pushf
add
pop
outsb
inc
jge
or
push
lahf
inc
aad
jecxz
cwtl
push
ds
pop
ja
rorb
clc
popa
add
mov
mov
das
int
pusha
mov
rorl
and
fdivrp
nop
add
sbb
repz
fbstp
icebp
fs
ret
ss
aam
jge
xchg
sub
mov
lods
xchg
imul
enter
push
push
inc
and
in
mov
sbb
xor
mov
or
inc
cli
jp
insl
lds
cmpsb
out
sbb
fcmovnu
inc
mov
mov
outsb
cmc
lock
jbe
stos
pushf
mov
mov
mov
inc
in
sarl
ljmp
mov
incb
adc
mov
mov
ljmp
push
and
inc
and
faddl
stos
inc
xchg
pop
xchg
frstor
sub
aas
gs
outsb
into
jecxz
mov
idivb
dec
pop
mov
inc
mov
xchg
pop
fwait
ret
push
popf
or
iret
mov
cwtl
pop
xor
iret
stos
int3
pop
rclb
mov
adc
xlat
adc
loop
dec
rep
iret
inc
mov
mov
ja
es
pop
or
inc
pop
out
mov
sbb
xchg
je
jp
into
mov
mov
and
mov
xchg
scas
scas
es
rcrl
and
inc
jge
jle
imul
xchg
add
xor
lea
aaa
adc
out
pop
push
jl
pop
loop
jg
test
xor
dec
arpl
adc
fists
jle
sahf
sbb
dec
push
mov
adc
xor
push
in
mov
repnz
nop
jnp
jecxz
dec
mov
cmp
jno
mov
sub
dec
jo
jnp
mov
fdivp
out
sbb
push
pop
xchg
adc
cltd
outsl
sbbl
repz
lods
push
push
mov
into
mov
test
movsl
mov
adc
or
xchg
jmp
push
or
cmpsl
movsl
jns
lret
mov
ja
insb
mov
shlb
clc
aaa
adc
dec
adc
and
ja
dec
scas
cmpsl
and
imul
je
sub
xchg
fs
sbb
add
or
cltd
jbe
sahf
in
aas
popf
ja
inc
dec
fidivl
jne
ljmp
pop
aad
arpl
push
jns
cmp
ret
mov
loope
inc
inc
aad
sahf
dec
in
push
sbb
jl
lods
rcrb
xchg
in
mov
or
mov
cltd
scas
lahf
mov
push
aad
add
ds
fsubr
xor
cmp
pushf
mov
leave
mov
out
jo
add
and
xchg
mov
ret
arpl
pusha
xor
mov
and
jbe
jns
ss
fadd
push
jo
adc
in
shll
scas
mov
push
push
aas
sbb
and
loope
outsl
xchg
push
bound
push
mov
hlt
add
push
xchg
stc
pop
jae
push
pop
push
and
mov
mov
inc
add
pop
xor
push
mov
add
arpl
js
loop
mov
outsl
mov
or
mov
mov
fldlg2
test
fs
sub
scas
out
push
add
inc
cs
and
js
out
pop
jne
xchg
das
and
mov
mov
cs
pop
lahf
adc
or
push
pop
jne
les
test
inc
sbb
add
std
push
push
xlat
mov
cmpsl
mov
lret
inc
xor
adc
bound
jo
inc
xlat
popa
aaa
xchg
xchg
sbb
inc
cmp
call
xor
jle
xchg
jno
add
add
pop
shll
xchg
mov
pop
scas
test
and
in
lock
arpl
push
cmp
test
test
in
call
ficoml
cld
mov
nop
pop
mov
cltd
cmp
xor
cmp
shl
jbe
mov
loopne
jle
in
mov
pop
loope
mov
fisubrl
gs
or
mov
lret
out
daa
jns
jmp
inc
repnz
imul
popa
jnp
fadds
mov
or
fstp
in
and
sbb
gs
call
push
jge
out
mov
mov
jecxz
cmp
sbb
mov
dec
mov
cmpsl
int3
pop
in
xor
out
cmp
pop
mov
cmpsl
xchg
adcb
cmpsb
lock
orb
cmpsb
inc
fsts
cmpsl
lahf
adc
mov
std
mov
mov
ljmp
adc
push
mov
call
aas
ja
add
push
cmp
mov
mov
xchg
or
hlt
enter
jne
or
movmskps
push
cmpsb
xchg
daa
cmpsl
inc
test
sbb
sub
cmpsb
mov
mov
clc
push
xchg
jle
popf
add
outsb
divb
in
cld
in
push
xchg
jmp
push
add
test
divb
sti
mov
push
mov
jne
mov
push
lret
cld
das
out
or
adc
jge
test
shll
mov
xor
push
pop
test
push
in
stc
mov
lret
fcoml
mov
jle
push
fdiv
dec
or
insb
insb
sub
rclb
mov
push
sub
xchg
adc
daa
fsts
imull
mov
or
jmp
inc
jle
adc
cld
mov
pop
cmpsl
jbe
fldt
in
call
push
sub
sbb
push
sbb
shrl
andb
cli
cmpsl
dec
ret
shll
pop
test
orb
pushf
inc
pop
and
mov
cmc
mov
or
xor
cmp
push
into
outsb
andl
stc
enter
inc
sbb
push
orl
out
and
mov
inc
outsl
xchg
xor
cwtl
and
and
arpl
test
ljmp
stos
xor
insb
sub
leave
test
loopne,pt
jns
mov
les
lods
and
call
mov
and
xchg
sub
sbb
test
sub
mov
enter
stc
xchg
sbb
xchg
into
cmp
icebp
es
es
and
and
jge
call
jmp
in
mov
inc
rolb
sbb
and
xor
aad
sub
ja
mov
xchg
fnstenv
ror
js
rorl
mov
xchg
mov
cwtl
roll
cmp
fstps
pop
aad
push
in
dec
dec
call
xlat
xlat
shl
or
lock
out
in
sbb
mov
int
lods
sub
loope
nop
enter
ret
movsl
xchg
add
scas
test
adc
or
pop
sbb
push
push
ss
mov
aad
subl
pusha
mov
sub
fbld
mov
adc
aam
inc
xor
cmp
push
xchg
sahf
test
sbb
mov
fwait
ja
cmpl
or
enter
mov
pop
mov
mov
pop
out
jno
insl
jl
test
add
push
aas
add
xchg
dec
mov
mov
sbb
daa
or
cmp
test
stc
cwtl
arpl
cmp
stos
test
popa
lods
mov
lea
sub
js
push
aaa
fs
sbb
push
xchg
add
sub
dec
pusha
in
pushf
mov
push
shll
dec
and
lret
mov
mov
out
das
xchg
mov
pop
cmp
jecxz
fildl
divb
cli
scas
dec
xor
cmp
pop
ja
pop
outsl
mov
in
adc
fwait
jbe
dec
pop
fisubrs
xchg
jmp
jmp
push
repnz
cmpsb
dec
andl
or
test
aaa
je
mov
in
lahf
hlt
push
js
fs
fbld
movsl
aam
fwait
dec
or
fcomi
add
ljmp
fdivl
xor
es
loopne
cli
mov
xor
push
aam
cltd
fwait
cmpl
in
mov
lret
stos
aas
xchg
mov
insb
popf
icebp
pop
mov
bound
xchg
or
jmp
fsubs
push
aam
in
jno
rorb
push
and
lods
or
rcl
gs
jno
mov
mov
mov
add
cld
in
addr16
add
loopne
jbe
std
or
push
ror
jmp
adc
jo
imul
int
jns
andb
mov
xchg
xchg
fistps
pop
leave
mov
test
cld
repnz
jle
sti
push
int
inc
fldenv
int
loop
daa
ljmp
cltd
and
jle
add
ret
call
mov
cmc
fsubp
cmp
test
fldenv
nop
pop
lret
into
fnstcw
pop
sub
xchg
and
arpl
pop
inc
mov
jo
lahf
fwait
adc
bound
sbb
inc
daa
hlt
jecxz
xor
iret
sti
and
push
pop
or
imul
mov
pop
inc
push
jmp
push
sbb
mov
xchg
lcall
cmp
inc
or
hlt
cmpsb
outsb
push
mov
xor
cmp
sbb
jne
insb
lret
mov
jnp
rclb
push
and
xchg
mov
fsubp
cmpsb
dec
jle
mov
sbb
jns
pop
jns
mov
add
sahf
xor
xor
out
repnz
cmp
jecxz
adc
jnp
mov
fs
mov
pop
and
fidivrs
adc
stos
mov
outsb
dec
push
adc
sbb
push
inc
xor
xor
jno
push
adc
ja
jne
xchg
sbb
and
jmp
ljmp
icebp
inc
test
mov
mov
and
test
jno
cwtl
js
jp
jmp
mov
insb
push
adc
lock
pushf
rcr
ror
jbe
and
dec
push
sub
or
and
xor
add
push
xchg
loop
fdivp
cmp
out
mov
pushf
or
sub
into
dec
ret
mov
out
jmp
lea
testl
jl
push
sahf
push
call
incl
sbb
mov
or
mov
sbb
sbb
cltd
push
add
mov
movsb
xor
lds
aas
mov
fadd
adc
mov
pop
mov
hlt
inc
ret
dec
lret
xor
jnp
mov
fcmove
push
dec
pop
dec
sbb
mov
rcrb
sub
orl
mov
cmpsb
data16
outsl
adc
iret
jmp
jbe
sbb
pop
in
into
mov
pop
pop
int
xchg
xchg
std
xchg
loope
adcb
mov
daa
cmp
fcom
test
jne
add
dec
cmp
scas
shr
mov
xor
rcrl
mov
scas
inc
enter
add
bswap
or
inc
jns
movb
adc
cmpb
pusha
cli
test
movsl
push
hlt
dec
das
clc
mov
sub
shll
push
fildl
fsubrl
add
cmpsb
dec
shll
test
adc
dec
iret
leave
mov
fwait
sarb
mov
pop
test
push
and
into
push
rcrl
or
push
and
aas
idiv
loope
mov
shlb
pop
cld
add
cmc
loop
push
or
jno
push
cli
das
sub
xchg
add
fisubrs
fistps
ret
xor
aad
or
cmp
or
inc
pop
mov
mov
cmp
nop
dec
push
sahf
stos
adc
jp
sbb
jns
scas
pop
punpcklbw
lods
aam
jne
fcompl
mov
cltd
mov
clc
dec
cmc
jno
mov
aam
push
dec
out
xor
dec
jecxz
xchg
pop
out
in
frstor
jl
add
aas
jae
and
adc
loop
adc
data16
mov
lret
roll
das
adc
and
int3
je
stos
roll
or
lcall
lods
fstp
sbb
in
notl
insb
mov
call
in
push
jno
push
adc
sbb
lods
icebp
lods
adc
sbb
inc
or
push
sub
add
jmp
fisttpll
mov
adc
imul
fists
xor
add
andb
inc
loope
adcb
std
test
je
fdivr
xor
cmc
fidivrl
mov
arpl
lock
outsb
add
pop
pushf
pusha
fs
andl
shll
ror
divb
ret
pop
pop
and
pop
jecxz
adc
or
inc
xor
insl
faddl
push
xlat
in
daa
sub
cmpsb
inc
add
dec
push
jns
clc
dec
jae
lcall
dec
andb
or
mov
adc
push
xchg
xor
sbb
inc
mov
and
loop
repz
int3
xchg
das
cwtl
into
add
test
jbe
mov
push
xchg
jno
adc
sbb
jle
add
inc
pusha
inc
pop
insl
sub
lods
push
adc
jne
std
add
cmpsl
add
pop
inc
push
fs
mov
cli
outsb
adc
cli
push
adc
jl
push
aas
popa
mov
cli
clc
inc
push
mov
xchg
cmp
popf
test
xlat
inc
dec
mov
lret
jo
pop
pop
mov
and
sub
ljmp
pop
xor
jle
test
lods
xchg
add
mov
fsubs
inc
mov
aas
jge
xor
jnp
in
sub
mov
jl
fstpt
sub
int
jns
pop
pop
or
cli
insb
jno
cmpsb
leave
cltd
sub
dec
jne
fsubrp
sub
cli
into
push
jmp
pop
jmp
into
es
cli
loope
mov
add
xor
stc
inc
xchg
testb
sbb
jmp
xchg
ficoml
jbe
loopne
xlat
aam
sbb
pop
xchg
loope
andb
icebp
cmp
mov
push
in
sub
lods
xchg
data16
fs
bswap
jmp
jns
jp
pop
mov
pop
std
mov
enter
dec
push
dec
jbe
cmp
adc
pop
sub
mov
notl
clc
bound
inc
push
clc
add
jge
mov
jae
jl
je
fisubl
xor
inc
dec
mov
lcall
scas
subb
sti
jp
ret
mov
aas
cmp
mov
int
mov
cwtl
repz
das
mov
call
xchg
sbb
cld
sub
pop
pusha
test
fldl
mov
or
push
dec
hlt
int
dec
insb
hlt
jo
mov
push
jg
cmp
dec
mov
aas
jns
cld
lea
sub
loopne
jb
add
add
repnz
or
mov
push
in
fmull
xchg
push
inc
mov
mov
popf
loope
sub
inc
nop
push
or
lock
sub
pop
or
push
pop
add
mov
stos
mov
cmp
mov
or
ds
sbb
repnz
mov
adc
push
loopne
and
movsb
and
aas
inc
inc
pusha
push
lea
inc
aaa
adc
add
push
push
std
lea
xor
mov
add
cmp
jge
je
mov
in
push
or
inc
sbb
mov
jmp
out
dec
or
pop
div
and
out
push
idivl
dec
cmc
push
outsl
xchg
xchg
mov
mov
mov
jne
imul
into
xchg
xor
pop
or
insl
arpl
or
xchg
pusha
sbb
aam
dec
sbb
test
add
adc
test
xchg
sbb
pop
int
pop
inc
jae
popf
rorb
dec
in
lock
out
jo
xlat
shrl
loop
mov
cmp
fs
mov
int
inc
cli
loop
sub
push
add
cs
xchg
movsb
pusha
and
sti
pop
mov
lcall
lods
dec
lcall
cmp
cs
out
mov
mov
subb
push
mov
ljmp
push
pop
adc
sti
incl
push
scas
das
inc
add
lcall
aad
inc
jl
jbe
push
pop
hlt
popf
push
stc
leave
sbb
cmp
loop
leave
xor
lods
cltd
pop
sub
ja
or
imull
push
inc
icebp
dec
ret
jl
inc
and
push
popa
popf
jb
ss
lds
cs
jl
ret
pop
jge
mov
das
mov
or
cmp
mov
rorl
and
xor
mov
shrb
int3
sub
xor
int
lods
jle
adc
inc
inc
jae
or
imul
in
scas
into
and
addl
inc
scas
or
and
jg
xchg
ret
movsl
push
notb
sbb
fdivrl
sub
jmp
jg
lahf
mov
mov
xlat
push
sarl
fdivrs
xchg
movsl
mov
icebp
jns
insl
or
mov
dec
bound
roll
fdivs
push
cwtl
rcrl
add
lret
mov
andl
mov
in
in
mov
and
movsb
mov
adc
stos
enter
popa
pop
xor
dec
cmp
mov
and
loop
cli
dec
pop
cmp
repnz
jne
out
int
cmp
stos
sbb
outsl
fucomip
scas
aad
incb
dec
inc
jmp
sub
pushf
call
cmp
sbb
sub
adc
adc
into
mov
jne
xor
js
int
movq
cmp
insl
mov
pop
dec
mov
push
jle
fwait
cltd
pushl
cmp
in
loopne
jmp
mull
push
cmp
mov
bound
and
jl
dec
xchg
sar
push
mov
lods
sbb
add
cmpb
out
pop
dec
mov
jl
pop
test
in
or
dec
fisubrs
mov
adc
lahf
xchg
popf
enter
stc
mov
fildl
dec
sub
pop
cltd
add
in
scas
mov
sub
jmp
lds
adc
out
cmpsl
ds
adc
in
enter
test
daa
scas
call
adcl
fdivr
fldl
fistpl
dec
add
popa
jb
pop
dec
cmpsl
shlb
and
dec
cli
out
imul
dec
mov
outsb
inc
and
ftst
cmpb
push
cmpl
lods
mov
jp
fcmovne
test
pop
lahf
fnstenv
lock
fst
arpl
dec
jno
ret
mov
sbb
dec
out
in
clc
mov
inc
xlat
popf
adc
or
lahf
and
xchg
push
push
fisttpl
aam
cmpsl
sub
les
sahf
mov
mov
or
xor
leave
loope
push
and
or
enter
sti
dec
stos
dec
mov
pop
jo
cmp
clc
je
fsubr
push
sbb
fdivs
jp
push
iret
mov
mov
jl
dec
lea
mov
std
loop
ret
ja
rorl
sub
adc
jb
add
inc
clc
cmp
pop
int
mov
push
iret
lods
add
or
inc
push
outsl
movsb
lea
nop
adc
popf
and
pop
mov
test
aas
inc
and
into
pop
mov
inc
test
in
test
out
pop
das
rcrl
pusha
into
mov
ds
xchg
addr16
mov
test
push
cmpsb
jl
mov
mov
fdivp
pop
push
std
and
cmp
fstp
call
pop
mov
pop
aam
or
and
fisttpl
shll
push
clc
mov
add
or
xorb
cmpsl
mov
ret
inc
out
lods
jle
out
rorl
or
pop
lcall
notl
pop
mov
mov
cmp
mov
cmpsl
cld
sub
sbb
clc
fdivr
outsb
cmpsb
cmp
inc
lret
adc
jo
je
push
cmpsb
movsl
scas
movsl
jb
enter
push
sbb
adc
loopne
pop
or
add
ja
mov
xor
jns
pusha
mov
idivb
out
test
aaa
jg
mov
add
xchg
mov
imul
aas
or
cltd
lock
pop
insl
jo
push
push
dec
pop
pop
sub
popa
mov
aad
push
sbb
xor
jecxz
out
cmp
push
push
stc
or
fdivrl
pop
out
loopne
xchg
stos
test
test
push
dec
and
or
pop
mov
and
add
jbe
movsb
movsb
rclb
jbe
xchg
jnp
ja
push
repnz
cwtl
cs
inc
mov
icebp
dec
shll
mov
aam
or
or
jl
cld
mov
xor
sbb
int
or
movsb
ss
in
and
and
jae
jge
pop
shrb
add
mov
arpl
sbb
iret
adc
ss
stos
imul
scas
sti
mov
arpl
pop
movsl
jb
aam
fs
test
insl
decb
lock
das
aam
ja
dec
sbb
mov
lret
mov
cmp
push
out
and
leave
call
lock
push
mov
popa
cltd
fwait
cmp
out
pusha
adc
lret
jmp
fwait
test
scas
add
repz
pop
mov
and
sub
mov
hlt
shrl
xchg
movsb
mov
pusha
imul
push
sub
mov
dec
sbb
xor
sub
and
mov
pop
xor
dec
mov
mov
insl
fldcw
ret
out
fldenv
das
add
sbb
mov
jge
sbb
pop
xchg
rorb
data16
jns
xchg
sub
lock
insl
jbe
push
stos
pop
push
jns
rcrl
push
inc
sti
into
mov
dec
hlt
mov
jl
data16
test
ds
fcoms
sbb
pop
sbb
iret
mov
xchg
cmp
mov
mov
lock
std
inc
push
sub
mov
add
sti
or
popf
repnz
add
ret
adc
call
int
mov
lods
jecxz
jl
adc
add
fsub
inc
call
dec
push
popa
pop
push
add
fimuls
leave
inc
leave
std
and
loop
xchg
xor
fcomps
ret
mov
or
popa
mov
inc
adc
out
jl
inc
shrb
jae
cmc
jns
jp
xchg
and
lods
and
xchg
xlat
jl
sti
int3
or
in
sarb
loopne
hlt
gs
pop
movq
push
into
je
jbe
push
sbb
fiaddl
mov
push
sbb
add
xor
jmp
and
fs
cmc
xchg
xor
adc
sbb
aaa
jmp
xchg
arpl
int3
cmp
je
mov
repz
cli
outsl
icebp
cmpsl
sbb
push
jecxz
rclb
fldt
sahf
stos
sbb
repnz
imul
pop
sub
inc
lods
aam
mov
xor
jbe
insb
out
fistps
mov
sub
push
and
xorl
sbb
xlat
cmp
or
cmp
mov
mov
adc
ljmp
adc
jecxz
insb
push
jne
stos
sub
rorl
mov
mov
andl
rorl
ja
xchg
jno
aad
nopl
adc
into
push
jp
adc
aaa
movsb
pusha
cmp
mov
ss
dec
rolb
xchg
inc
enter
xor
arpl
mov
jge
and
movsb
cmp
sbb
xchg
test
inc
xchg
lds
sub
insb
fcomps
rcrl
fisubrs
cwtl
jnp
into
mov
xchg
cld
pusha
push
in
ficompl
scas
ficoml
out
fldcw
fs
ja
adc
pop
sarl
jns
pop
aaa
iret
mov
fisttpl
mov
sub
push
xchg
mov
jg
in
xchg
sub
sub
cmpsl
or
sbb
dec
push
mov
mov
addr16
sub
aas
test
roll
int3
sub
push
ret
mov
xor
mov
push
loope
loop
clc
and
sub
lret
push
inc
pop
shrd
mov
insb
jns
das
mov
cmpsl
or
leave
mov
pop
jns
scas
xor
sbb
mov
cwtl
hlt
mov
adc
cmp
js
pop
or
daa
aam
and
xor
test
mov
cmpsb
jne
sbb
push
jb
int
jg
test
jg
mov
sub
mov
aas
lret
jns
aas
jb
cld
ror
out
pushf
adc
cli
in
scas
pop
add
test
mov
push
in
iret
mov
fcomps
add
mov
cld
mov
xor
push
ja
mov
mov
call
cmpsl
out
in
dec
and
cmc
sub
adc
in
jb
nop
jl
inc
andb
dec
ds
pushf
mov
cmp
ja
xor
clc
mov
lret
adc
lock
fstpl
mov
push
fnstenv
push
xlat
inc
clc
add
sbb
repz
pushf
xchg
xor
ss
out
or
inc
stc
rcrl
pushl
fwait
sub
pop
outsl
add
sarl
pop
repz
mov
add
jns
add
lret
inc
push
jl
mov
stc
in
pusha
std
or
jno
imulb
dec
fisubs
push
push
out
mov
addb
jae
push
adc
adc
mov
xor
in
sub
and
enter
shr
lea
stos
insb
jge
scas
les
addl
mov
ja
and
lcall
add
or
xlat
jge
mov
or
orb
sbb
add
stos
xchg
subb
daa
mov
xor
cmp
rorl
mov
push
subb
je
mov
fsts
lcall
filds
jns
or
loop
push
negl
or
in
shll
jl
xor
push
dec
int
cmp
or
or
clc
xchg
jnp
pop
out
shr
jl
dec
outsb
mov
sbb
js
inc
add
cwtl
popa
out
jle
pop
push
enter
pop
sbb
push
inc
adc
out
mov
jmp
or
lret
mov
loopne
mov
leave
cmpsl
and
pop
sub
dec
sbb
jae
test
add
arpl
mov
mov
in
jg
mov
movsb
dec
orl
push
mov
imul
imul
cmp
mov
lcall
shl
mov
dec
outsb
mov
adc
test
lret
dec
stos
jnp
mov
mov
sbb
stos
cwtl
fsubp
dec
dec
dec
in
loopne
into
out
adc
xchg
pop
pop
sbb
fimull
lods
shlb
add
loop
xor
and
outsb
and
into
adc
cmp
cmpsl
stos
loopne
cmp
push
movsb
push
test
jo
sub
push
shlb
mov
subl
clc
ljmp
movsb
call
int
fisubrs
xor
jae
mov
shll
gs
mov
push
xlat
lods
lock
test
pusha
cmp
push
xchg
pop
sbbb
arpl
std
lods
mov
fistpl
xchg
jbe
pop
inc
lcall
lret
mov
jne
add
mov
sbb
das
arpl
adc
pop
insb
arpl
pop
fistps
xchg
push
inc
fnstsw
lret
divb
pop
stc
ret
and
cmp
sbb
test
dec
sbb
and
test
lods
pop
fimuls
add
dec
rolb
xchg
outsb
cmp
sub
movsb
int
movsb
jg
and
in
outsl
jns
mov
dec
imul
ret
mov
aas
adc
lcall
pop
mov
lds
push
add
rcll
jge
sub
in
fldln2
dec
vpunpckhqdq
out
negb
push
outsb
pop
dec
cmp
add
add
ljmp
sub
xor
fs
adc
scas
aaa
pop
jo
jb
fsubs
ret
call
dec
dec
mov
test
rcrb
add
and
sub
fistl
fwait
in
icebp
call
jle
popa
test
mov
clc
sbb
clc
ret
addr16
mov
cld
push
leave
push
mov
sbb
notb
adc
xchg
jg
mov
sub
cmc
mov
lods
inc
syscall
scas
xor
or
repz
pop
sub
scas
or
xchg
push
or
inc
stc
sub
dec
adc
adc
lods
xor
and
adc
scas
push
cmp
xchg
imul
jns
dec
xorb
cmpsl
mov
and
adc
add
stc
mov
popf
lcall
dec
pop
jge
shrb
imul
test
xchg
xorl
jno
and
int3
popf
xor
jp
inc
fwait
and
pushf
pop
add
dec
repnz
test
rcll
fcoms
jns
dec
repz
dec
add
cmp
xor
aas
inc
mov
fucomi
mov
ss
adc
inc
int3
pop
outsl
inc
call
dec
out
push
jns
dec
xor
push
cmp
adcl
dec
pop
xor
adc
daa
dec
sbb
lcall
loop
xor
pop
xlat
mov
add
sub
jb
push
stc
pop
mov
aad
inc
and
out
xorb
data16
in
pop
lock
je
test
ljmp
outsb
xor
xor
mov
fsub
push
stc
push
cltd
out
or
jmp
sbb
test
loopne
jb
dec
mov
dec
add
ds
mov
fildll
push
into
dec
jns
ffreep
lcall
mov
bound
into
cmp
pop
pusha
jnp
jle
lds
les
adc
leave
add
or
xor
dec
and
jns
jmp
outsb
mov
das
inc
pop
mov
aad
call
jbe
xchg
pop
roll
loopne
jno
fsubl
xchg
icebp
and
mov
mov
dec
aad
dec
pusha
or
loope
mov
and
mov
pop
das
or
cltd
pop
xor
mov
sub
test
ss
jae
imul
pop
dec
fdivs
mov
mov
sbb
test
sub
adc
xor
arpl
push
push
les
and
or
subb
call
insb
mov
in
dec
pop
sub
sbbl
inc
xor
outsb
je,pt
xor
xchg
bound
out
in
or
jge
push
push
bound
fmul
dec
push
sbb
scas
cmp
dec
sbb
pop
and
dec
out
inc
jbe
mov
push
or
iret
ret
int3
adc
movsl
inc
pop
xchg
push
gs
mov
out
pop
gs
and
fcoms
je
mov
mov
cld
pop
pop
pop
jb
out
std
sarl
ret
xchg
sbb
fcomip
mov
sti
mov
test
pop
sbb
clc
leave
addr16
sub
into
push
jecxz
mov
push
mov
jmp
jp
mov
lods
fcmove
pop
cmp
adc
pushf
push
cmp
mov
lahf
push
shrl
mov
dec
sbb
and
dec
and
loop
jne
push
int3
aas
sub
int3
gs
fistpl
adc
popf
add
mov
push
sub
mov
xchg
dec
mov
mov
mov
sbb
loop
stos
fdivs
pop
and
push
mov
cs
fwait
popa
mov
shlb
mov
hlt
dec
loope
ja
push
cmp
loop
int
jne
push
fimull
inc
lss
inc
inc
out
shl
add
fs
lods
push
and
inc
rcrb
add
mov
sub
inc
xor
mov
mov
lahf
daa
arpl
xchg
out
fidivrl
arpl
cmp
lcall
dec
and
lods
lcall
sbb
xor
cmp
testl
inc
test
stc
fcoml
push
or
cwtl
in
pop
inc
push
or
cmp
sub
loopne
cmp
ss
aaa
dec
xlat
xchg
pop
bound
aad
lret
test
push
mov
inc
sub
dec
stos
outsl
push
and
xchg
and
gs
decb
roll
inc
fdivrs
and
dec
cs
in
fcmovnu
add
inc
popl
lds
mov
testl
inc
jmp
sub
cltd
int3
and
je
adc
xor
out
xlat
addr16
les
into
movsl
jle
jno
ja
xlat
ljmp
mov
jp
pop
mov
sub
insl
pop
out
push
movsl
jle
jbe
cmpsb
jbe
cmp
mov
ja
loope
hlt
mov
negb
or
jnp
xchg
mov
adc
fadd
cwtl
shll
dec
mov
xchg
dec
fcoms
adc
pop
in
jge
mov
cmp
xor
inc
mov
fsts
xor
dec
cmp
sub
aaa
sub
jae
aam
mov
negl
mov
dec
add
or
cmp
xchg
xchg
lock
call
lret
dec
in
aam
inc
test
xchg
cld
insb
dec
popa
dec
xchg
mov
mov
sahf
lahf
jbe
dec
sbb
mov
movsb
cmp
pop
sahf
ds
aaa
dec
orl
cmp
addl
sbb
cs
pop
rcrl
dec
stos
mov
mov
xor
xchg
lahf
xchg
inc
inc
into
addl
cmp
enter
pop
lret
inc
mov
sub
inc
cmc
orl
inc
inc
push
mov
add
aam
push
sub
mov
xlat
cmp
mov
inc
pop
mov
shrb
mov
in
xor
fimuls
jns
pop
push
inc
fsubrp
or
jecxz
aam
or
rolb
sahf
pop
ficoms
and
fadds
xchg
add
mov
sub
jle
fimull
jb
into
cmpsl
int
into
mov
daa
hlt
mov
arpl
fmull
cmp
pop
in
out
pushl
hlt
lcall
clc
push
mov
mov
adc
push
pop
xchg
inc
cmp
popf
or
mov
idiv
data16
xchg
and
loopne
cld
push
mov
pop
movsl
cs
mov
gs
movsb
cli
push
bswap
lret
dec
aam
and
pop
cmp
add
pop
lret
jle
mov
js
dec
xchg
jecxz
lods
mov
outsb
dec
fsubrl
insb
mov
aas
push
in
shl
cmpsb
bound
mov
mov
mov
pop
fcomi
pop
adc
mov
add
ss
pop
dec
adc
pop
add
lret
lods
sub
xor
xor
scas
adc
push
addl
movsb
cli
ljmp
sbb
rcrb
out
xor
pop
dec
adc
dec
adc
je
dec
and
push
xchg
adc
lcall
repz
or
ljmp
stc
nop
mov
je
inc
add
mov
pop
inc
sub
push
cmovs
ja
lds
aam
fwait
out
push
jmp
test
xchg
mov
addr16
mov
pushf
push
mov
pop
pop
pop
xor
repz
add
into
adc
mov
sbb
mov
push
in
dec
fwait
pop
sbb
xor
les
inc
or
sub
add
mov
sub
fcomi
pop
fcmovnu
push
mov
dec
pop
mov
xchg
insb
pop
add
lods
clc
mov
cli
std
outsb
adcl
out
lods
fisttps
cmc
jae
out
dec
jnp
jmp
lcall
sbb
push
mov
cmp
inc
jl
push
sti
push
loope
cmp
out
les
mov
cs
add
pop
jmp
mov
movsl
cltd
jmp
shlb
xor
add
and
mov
dec
movsb
mov
sbb
dec
popf
aad
jmp
sub
lret
sbb
xchg
stos
push
and
aas
push
mov
lcall
leave
xchg
xchg
sbb
mov
xor
mov
pop
ss
cmp
pushf
ret
test
out
divl
jl
rorl
adc
jge
imul
xor
arpl
inc
stc
or
ret
push
mov
push
std
add
test
mov
mov
roll
int
jno
clc
mov
inc
test
or
cmpsb
sub
jp
jle
fsubrl
clc
jg
xchg
fstl
out
test
push
aad
mov
icebp
testb
jo
fdivr
outsb
ret
xor
cmp
insl
scas
or
leave
loop
push
dec
cmc
adc
inc
mov
fdivrl
test
fimull
int
das
push
orb
or
in
cmp
adc
stos
mov
sub
fsubrl
add
imul
mov
adc
jne
pop
fwait
and
sbb
push
fwait
mov
dec
shl
or
test
data16
xor
jl
add
shrl
testb
lret
sub
loopne
nop
and
xor
clc
push
jno
lret
les
sarl
sbb
daa
pop
test
sbbl
fmul
divl
sub
sahf
fbstp
dec
cli
cmp
lahf
and
fcompl
mov
fcmovnu
xchg
mov
addr16
dec
mov
jnp
in
mov
mov
incb
jnp
out
fdivl
jbe
and
call
inc
pushf
sbb
mov
frstor
mov
sub
push
fwait
pop
nop
dec
mov
les
movsb
pop
pushf
mov
sti
fs
xor
or
test
stc
pop
sub
push
inc
sbb
fimuls
push
pop
mov
mov
les
cmp
stos
inc
js
aam
jne
call
mov
repnz
movsl
repz
clc
aaa
out
and
pop
xor
sub
mov
push
iret
lea
ss
add
bound
mov
ss
je
sti
add
bound
ds
fdivr
jge
call
sub
push
je
or
adc
sti
cs
dec
ffree
mov
stos
orl
sub
push
mov
popf
inc
pop
pop
popa
xchg
mov
mov
xchg
addl
pusha
mov
push
lahf
inc
xchg
xor
loope
jns
aam
aad
test
add
ret
into
mov
inc
xchg
pop
gs
push
push
scas
insl
lods
in
cmp
sub
ret
sahf
test
sbb
jae
scas
xor
dec
ja
mov
inc
and
je
cmp
mov
inc
or
fsts
cmp
ja
sbb
fsubs
cmp
fistpll
or
leave
sbb
and
ficoms
jae
cltd
and
mov
xchg
push
adc
adc
aaa
outsl
cltd
xor
sub
fs
sub
jecxz
icebp
cs
or
mov
mov
push
das
cld
jmp
mov
xor
mov
sti
insb
insb
sub
testb
mov
movsb
xor
pop
inc
fidivs
fldt
mov
inc
or
sbb
mov
add
push
scas
insl
fstps
sub
jmp
jecxz
mov
lds
orb
sub
xchg
lcall
xchg
sub
or
dec
mov
bswap
lea
pop
pop
mov
repnz
ficoml
dec
jmp
jp
iret
jecxz
cmp
daa
cmp
aam
aas
and
cmpsl
filds
loopne
and
jbe
aam
cmpsb
ljmp
xor
fstps
lret
divb
cmp
es
xchg
xlat
mov
dec
ja
aam
fimull
mov
aad
dec
xchg
cmpsb
lahf
stc
or
xchg
rclb
cmpsl
fisubrs
dec
sbb
ds
pushl
fcmovbe
mov
jge
shll
test
pop
sti
in
cmp
push
imul
leave
testb
leave
fwait
enter
jmp
jmp
push
mov
inc
aad
into
ds
jnp
ja
inc
xor
roll
mulb
dec
std
fistpl
sbb
mov
iret
in
xchg
sub
xchg
rol
das
fcmove
add
inc
popa
dec
pop
pop
xor
mov
cmc
lods
push
es
ss
inc
push
push
fistps
mov
inc
int
leave
test
cli
jle
fadds
ljmp
xor
rol
pop
fsts
insl
push
repnz
pop
sarl
add
insl
jp
cmp
sub
jns
imul
and
adc
sbb
loop
cmp
stc
ret
gs
test
cmp
xor
mov
cwtl
test
jnp
add
gs
jae
es
lds
lods
xor
out
pop
jnp
add
iret
mov
dec
ljmp
pop
inc
leave
movsb
out
stc
lret
add
vpshaw
mov
mov
idiv
sub
sti
mov
pop
gs
fnstcw
dec
imul
push
fdivrs
aas
addb
add
ror
xchg
xorb
pop
jb
dec
or
pop
inc
out
shlb
or
and
inc
gs
fdivs
syscall
movsl
pop
inc
fwait
push
das
inc
loop
int
xchg
out
or
sbb
inc
pop
lods
dec
jno
and
subb
rolb
andl
repnz
punpckldq
push
repnz
mov
cmp
sarb
lods
insb
lds
icebp
or
fcomip
add
shll
or
or
insl
inc
and
mov
sbb
out
sahf
pusha
pop
mov
popa
mov
jp
push
ret
inc
and
fcoms
mov
cmp
add
mov
loope
adc
lods
leave
scas
jne
jnp
add
cwtl
xchg
popf
or
fsts
stc
push
out
nop
rcr
cwtl
jns
inc
mov
repnz
sub
jne
sbb
inc
push
rsm
xchg
loope
sbb
inc
ljmp
cmc
pop
addr16
test
fildll
sub
lock
into
aam
nop
cmpsb
call
dec
xchg
sbb
scas
jg
xor
call
je
mov
sar
mov
sahf
outsl
inc
mov
icebp
fldpi
pop
out
cmpsb
sbb
aas
gs
jle,pn
push
out
cld
fwait
call
jge
test
jle
insb
sub
icebp
insl
or
into
fmull
test
out
ljmp
clc
mov
mov
mov
push
xchg
lret
sub
mov
lods
rcrl
stos
cs
xchg
clc
push
leave
inc
pushf
ret
and
sbb
jmp
mov
push
sarl
jl
jbe
push
mov
and
jae
jl
jle
sub
nop
mov
iret
push
mov
bound
add
inc
shll
lock
ret
adc
mov
in
pop
imul
in
rcrb
es
in
mov
cmp
add
sahf
in
mov
push
sbb
mov
mov
paddusb
cmp
mov
sbb
sbb
leave
bound
and
or
adc
mov
pushf
add
jle
lds
popa
inc
cwtl
mov
loop
lahf
sbb
push
aaa
ljmp
cmp
xchg
xlat
shrl
jge
mov
mov
dec
or
addl
adc
xchg
mov
stos
xor
xor
cmp
in
add
aam
loope
xor
mov
outsl
xchg
cmp
in
xchg
rcrb
push
cs
test
fidivl
xor
and
and
sahf
sub
jns
popf
pop
add
and
fxch
imul
jge
test
pop
gs
fisubs
mov
mov
js
mov
jnp
pop
imul
xlat
xor
lret
out
push
cwtl
adc
repnz
arpl
fsts
sub
pop
shl
cld
xchg
add
xor
lcall
pop
fists
jmp
mov
dec
std
paddd
notl
pop
mov
mov
je
outsl
jae
les
mov
and
cmpl
xchg
mov
insl
aas
adc
rcr
sbb
and
jbe
cmp
cs
bound
sub
into
cmp
adc
push
add
addr16
insl
pop
push
pop
mov
mov
mov
add
fdivs
adc
cmp
lret
jne
add
jnp
push
jecxz
fld
cmp
insl
aaa
sbb
and
adc
pop
int3
out
mov
mov
in
fs
je
xor
lock
testb
gs
add
and
mov
mov
or
nop
add
out
in
cmp
push
sub
rclb
rcrl
jb
jmp
jae
pop
mov
jecxz
or
outsb
xchg
jo
push
pop
ljmp
call
or
sbb
add
xchg
add
add
js
popf
adc
inc
lock
mov
inc
xchg
loope
es
test
test
mov
mov
mov
lods
inc
jbe
testl
aam
test
inc
xchg
xchg
cmp
xor
xor
jle
pop
sbb
dec
pusha
and
arpl
lahf
faddl
ja
data16
xor
hlt
pop
xchg
mov
mov
in
push
jp
mov
xor
inc
dec
pushf
inc
xchg
sub
fisttpll
insl
mov
stc
or
adc
jge
dec
and
cltd
lea
mov
jbe
push
jns
lea
jnp
lods
out
std
sbb
pop
shl
popf
jo
xchg
int3
rcl
xor
mov
inc
icebp
xchg
pushw
movsl
jno
push
das
adc
cmp
pop
dec
clc
mov
push
sub
push
mov
jo
stos
fdivrp
pop
sarb
dec
adc
sahf
mov
add
cltd
daa
inc
insl
xor
xlat
iret
ja
sbb
cmp
and
cs
pop
testl
iret
pushf
aas
cmp
xor
cltd
and
mov
inc
ss
jp
dec
push
mov
sbb
test
push
and
ret
sti
mov
divb
rolb
push
mov
inc
mov
mov
mov
push
mov
mov
jnp
les
or
or
sbb
mov
xchg
addr16
adc
sbb
loop
push
das
jecxz
mov
push
jne
cmp
dec
or
push
daa
in
cmp
add
lea
repnz
lcall
mov
test
das
jns
add
inc
pop
push
jae
fnsave
in
jp
sbb
test
ret
std
push
scas
das
data16
xor
lret
fildl
cs
in
into
add
ret
push
mov
popa
mov
mov
xor
and
ret
iretw
cwtl
stc
lea
es
mov
inc
movsl
loopne
imul
mov
cmp
mov
out
mov
lods
loope
ja
movsb
mov
jle
in
pop
mov
out
mov
ret
and
cmpsb
push
jns
ljmp
pop
jo
push
sahf
cmpsb
mov
ljmp
sti
jne
cmp
imul
mov
pop
in
aaa
xchg
movsb
jle
xor
es
ds
std
mov
dec
aam
mov
neg
pop
push
movsl
mov
fucom
fs
hlt
loope
mov
push
fmul
or
loop
das
fisttpll
fstp
lods
stos
xchg
mov
xchg
arpl
mov
iret
outsb
inc
sbb
pop
insb
mov
outsl
lahf
jp
cmpsl
mov
push
sub
adcl
sbb
aam
cmpsl
test
and
push
xchg
orb
lods
mov
cltd
jnp
mov
in
jns
mov
mov
popa
loope
loopne
dec
inc
inc
clc
addr16
pop
mov
repz
aad
mov
sub
add
sbb
test
out
cmpsl
inc
inc
sysret
mov
sti
sub
fwait
mov
scas
mov
push
ret
nop
mov
rol
dec
movzbl
fwait
xchg
dec
jmp
pushf
cwtl
clc
push
mov
xlat
cmc
ds
xchg
ss
push
sbb
mov
sti
mov
inc
imul
mov
add
jo
movsb
jp
xchg
xor
data16
stos
into
inc
lahf
data16
xchg
ds
sub
sub
and
das
xor
aaa
sub
sub
int3
cmpl
xor
imul
je
insl
loope
and
flds
sub
sbb
jne
roll
mov
adc
lods
cmp
pop
mov
out
xor
idivl
sub
cltd
mov
inc
lret
pop
cs
add
rcr
sbb
insb
mov
push
push
jge
push
xchg
jge
insb
in
flds
cmc
movsb
gs
data16
xor
xchg
int3
add
xchg
mov
dec
sub
mov
mov
mov
test
and
lea
imul
loop
mov
dec
dec
insl
xor
mov
bound
scas
lret
mov
sub
pop
jae
in
fidivrl
out
xor
fdivs
jmp
lahf
adc
xchg
and
xchg
inc
in
sub
pop
or
int3
pushf
mov
int
icebp
mov
sbb
stos
xor
inc
push
dec
xchg
roll
icebp
ljmp
sbb
aam
dec
dec
arpl
aad
adc
adc
cmc
adc
rcll
movsb
xor
imul
mov
mov
test
and
jno
ja
int3
push
faddl
sti
push
push
es
or
imul
call
or
pop
arpl
fnstcw
inc
pop
inc
mov
sbb
mov
out
push
lret
and
or
ja
jg
pop
and
insl
mov
jg
jne
leave
mov
adc
adc
popa
and
adc
xor
clc
outsl
lret
add
dec
add
rorl
cmp
push
and
cwtl
out
addr16
adc
repz
stos
pop
dec
dec
lcall
ss
mov
repnz
jl
jb
repz
and
aaa
push
arpl
inc
sbb
mov
inc
mov
push
cmpsl
xchg
adc
sbb
mov
fmuls
lahf
cmc
dec
imul
in
or
cmpsl
sbb
lret
sub
mov
cmp
cmovs
rcr
fisttpll
mov
mov
and
sub
mov
ja
jns
aad
addr16
dec
in
outsl
mov
repnz
mov
dec
insb
sub
sbb
test
cmp
cltd
push
dec
sub
xor
addr16
mov
mov
sbb
mov
inc
mov
xchg
fs
scas
div
fisttpll
push
gs
aaa
fistl
sbb
mov
xlat
and
xchg
adc
xor
and
and
adc
loope
mov
sti
add
push
pop
aad
popa
mov
cmp
jo
lahf
icebp
outsl
sub
roll
add
mov
outsl
push
loopne
rcrb
pop
sbb
cltd
cmc
add
aad
jns
pop
mov
xchg
das
jo
pop
testl
int
mov
mov
fidivl
mov
in
pop
bound
and
in
and
gs
sub
bound
pop
mov
movsl
aad
xchg
icebp
fsts
jle
push
insl
cmp
jp
out
cmp
cs
lret
sub
push
repnz
mov
in
xor
test
imul
push
pop
adc
ds
enter
jo
pop
pop
into
out
ljmp
push
sub
mov
in
jb
mov
dec
mov
pushf
inc
cmp
divb
hlt
xchg
pop
insl
and
sbb
mov
mov
jp
fnstsw
shll
mov
pop
lcall
fistpl
push
hlt
xchg
clc
call
or
leave
or
and
jo
enter
jbe
jmp
inc
inc
insb
mov
repz
addl
fidivrl
in
into
or
stc
xor
or
push
jp
popa
xchg
scas
sbb
xchg
push
inc
push
nop
pop
adc
xchg
add
jb
push
dec
imul
in
jne
pop
clc
inc
cmpsl
push
push
int3
push
push
in
js
pop
or
sbb
push
js
inc
cmpl
fldl
lds
sbb
and
mov
adc
repz
scas
sbb
push
nop
cmp
inc
pop
mov
mov
jnp
mov
inc
outsb
in
xor
dec
mov
fwait
pop
jb
add
test
call
mov
or
cmp
pop
fsubl
mov
int3
dec
cmp
shlb
cmp
adc
les
inc
pushf
pusha
test
dec
pusha
aas
es
loop
cmpsl
cli
fmull
inc
mov
add
push
pop
cwtl
xchg
adc
dec
arpl
mov
ret
pushl
lods
mov
fcmovu
outsl
mov
test
movd
sub
out
cmp
test
mov
inc
movsb
adc
sbb
jg
fistl
sub
add
xchg
pop
sub
cmp
cmp
addb
ljmp
out
add
decb
mov
jge
test
cmp
out
leave
or
lock
mov
push
adc
pop
popa
dec
jb
adc
xchg
jne
pop
pop
std
es
leave
sbb
icebp
sbb
outsl
mov
in
addl
popf
and
lods
push
lock
mov
xchg
rcll
call
aad
lea
push
clc
xor
or
fcmovbe
icebp
test
sbb
mov
pushf
out
stos
pop
pop
jne
cmpsb
push
into
pushf
sbb
ds
pushl
jmp
and
mov
fstpt
test
or
js
cmp
push
ret
dec
inc
and
shrb
xlat
seta
insb
jg
adc
or
pop
test
sub
dec
ljmp
lock
add
stos
shll
jno
ds
xchg
out
or
mov
xchg
outsb
mov
add
insl
or
and
xchg
sub
mov
and
data16
mov
in
ret
mov
adc
sub
jns
cmp
sbb
addr16
enter
adc
cmpsl
or
or
bnd
int
dec
push
out
mov
ja
notb
lods
sub
sub
pop
jle
out
push
pop
js
pop
mov
xchg
popa
stos
jns
js
jne
fsubl
inc
out
push
bnd
xor
arpl
sbb
xchg
loop
pushw
jg
jle
mov
dec
inc
pushf
inc
popa
sub
inc
sub
jae
lcall
out
clc
sbb
loope
ficompl
adc
mov
dec
shll
lods
push
adc
lcall
jmp
pop
push
sbb
mov
test
jge
cwtl
popa
stc
pop
dec
inc
dec
stc
mov
adc
pop
jp
ljmp
in
in
std
dec
xchg
fstpt
into
mov
ret
aaa
hlt
fcoms
xor
xchg
lods
popf
adc
sub
aaa
popf
xor
cwtl
mov
dec
cwtl
out
dec
int
xchg
add
clc
or
add
sbb
dec
test
lcall
xchg
fcoms
lret
test
stos
lds
or
mov
test
mov
cli
cmc
xor
mov
gs
lock
ljmp
mov
movsl
sbb
mov
jnp
in
syscall
repnz
fnstenv
fdiv
sub
lahf
add
outsb
or
stos
cmp
xor
popa
sbb
jl
jl
shrb
fsubrl
fcmovnb
push
and
out
mov
mov
jb
std
pop
addl
add
outsl
jmp
aaa
test
in
pop
incb
cmp
fistl
and
stos
jge
outsl
negb
mov
add
push
leave
push
inc
adc
push
pop
jbe
aam
rorl
xchg
ret
ss
sub
mov
cmp
mov
sbb
cmc
cmp
and
jp
push
adcb
pop
hlt
sti
jle
sub
fmuls
cmpsl
jno
xchg
mov
inc
imul
push
inc
idivl
or
bound
sub
shll
fdiv
out
test
lds
adc
nop
into
and
push
push
and
and
js
jecxz
fs
in
xor
dec
dec
ja
addr16
inc
test
mov
sbb
mov
cld
popa
jae
dec
popf
ss
inc
sbb
push
push
testb
in
mov
jecxz
pop
mov
push
inc
incl
fwait
add
imul
jo
add
das
jns
push
mov
and
out
mov
sti
mov
sti
out
test
jo
adc
or
jmp
add
lods
mov
ret
push
mov
pop
insb
fadds
movsl
sub
adc
rcr
aam
js
pop
inc
adcl
jb
and
dec
outsb
inc
sub
in
pop
mov
mov
push
jnp
xor
test
cmpsl
mov
rep
mov
data16
mov
xor
cli
loop
pop
pop
pop
stos
stos
mov
std
xchg
ljmp
cvtpi2ps
inc
inc
fnstcw
inc
push
es
jae
pop
cmp
outsb
aam
std
scas
xor
mov
sahf
lods
iret
fmull
jns
jl,pn
dec
mov
aad
rcl
ret
insl
sbb
sbb
stos
pusha
xor
mov
ret
push
or
es
ja
add
add
js
sti
add
roll
ds
add
push
repnz
inc
sbb
xor
adc
mov
and
mov
or
xchg
fadd
inc
incb
dec
aas
push
sub
jno
mov
mov
in
cmpb
inc
adc
xor
sub
mov
subl
xchg
cmp
cmpl
xlat
lods
inc
sbb
into
sahf
mov
jg
shlb
inc
push
ret
call
mov
leave
jns
sbb
adc
cmp
enter
cmpsb
lret
jge
mov
orb
cmp
mov
mov
lods
push
push
push
or
sti
cmpsl
repz
in
adc
clc
jns
lcall
push
mov
push
shrb
fcoms
insb
sbb
repz
sti
jg
push
xor
mov
jno
xchg
and
outsb
das
mov
xchg
add
ljmp
add
pop
shl
lret
cli
pusha
jno
sub
sbb
out
gs
cmp
flds
pushf
add
jne
mov
pushf
mov
push
xor
xor
or
ss
sub
mov
sti
cld
mov
lret
xor
sbb
je
push
inc
and
dec
daa
fcoms
pop
xchg
loope
inc
or
cmp
lock
cmc
fiadds
lea
push
xchg
mov
outsl
addl
ror
into
sbb
jg
dec
xchg
lds
push
jge
daa
fdivr
mov
jo
dec
hlt
loope
cwtl
mov
mov
in
and
jne
inc
xchg
and
lahf
call
xor
dec
arpl
jp
out
clc
repnz
or
pop
jne
imul
push
shlb
aas
jg
push
pop
jmp
insl
lods
out
or
insl
cmp
out
stos
add
rcrl
sub
divb
clc
adcl
sbb
pushf
mov
cli
mov
xlat
fs
popa
mov
dec
arpl
xchg
xlat
push
mov
es
in
mov
testl
sti
push
sub
and
jmp
fldt
stos
iret
ss
shll
cmp
cmp
and
addr16
jb
mov
lods
and
pop
xor
mov
popf
sub
sbb
mov
mov
les
cmpsb
pop
mov
mov
and
lcall
loop
or
or
or
pop
dec
sbb
push
sbb
ss
cmp
lds
push
popf
sahf
insb
ds
or
xchg
in
ret
mov
push
add
mov
push
xchg
push
mov
xor
bound
inc
sahf
ljmp
jecxz
jne
aaa
jp
out
inc
cwtl
nop
xor
arpl
enter
lea
add
rolb
or
incl
xchg
push
enter
xchg
mov
and
adc
mov
xor
aaa
shll
jo
push
adc
sbb
jle
nop
repnz
cltd
xchg
pop
test
sub
and
pop
es
xchg
mov
inc
fstpt
cmpsl
cmp
jmp
cmp
fbld
jg
je
add
mov
dec
fucom
dec
push
mov
mov
movsl
hlt
or
mov
fwait
in
shll
movsb
xchg
daa
mov
cmpsb
je
pop
ficoms
clc
je
pop
push
dec
iret
mov
jg
mov
add
ja
sti
test
loopne
xchg
xor
int3
adc
sub
sti
cld
stc
pop
cwtl
inc
xlat
pop
jmp
dec
sbb
loop
adc
mov
stos
inc
scas
pop
ss
aad
push
out
ds
inc
fnstenv
outsl
fs
adc
dec
arpl
ss
adc
inc
jno
aaa
dec
leave
pop
loop
push
or
mov
insl
sub
ja
fildll
lret
arpl
mov
jb
les
sti
and
loopne
lahf
push
test
std
dec
add
hlt
cli
aaa
psrad
jbe
adc
aaa
sub
ds
mov
ljmp
adc
daa
dec
fucomi
jge
ds
enter
xor
fcoml
std
out
into
popf
mov
sub
aam
xor
dec
repz
js
push
pop
add
lahf
push
xor
push
cmpsb
stc
lds
jno
jp
add
out
inc
and
jmp
push
add
pop
fldt
push
stos
sti
pop
sub
adc
mov
insl
sub
orl
jno
xchg
and
xchg
xor
sbb
push
inc
inc
movsl
sbb
out
push
les
scas
sub
xchg
adc
pop
loop
add
inc
push
fwait
movsl
inc
es
loopne
pop
push
sub
mov
lret
rcrb
lret
mov
push
pop
movsl
js
sub
xchg
xor
imul
outsl
mov
jle
jo
addr16
aam
jle
bound
rcrb
repz
enter
sbb
adc
adc
es
ljmp
das
or
pushf
jae
sbb
test
in
in
lods
ljmp
xchg
jg
adc
or
adc
mov
xlat
sti
packsswb
mov
stos
mov
mov
test
insl
pop
test
inc
sahf
and
mov
mov
call
adc
iret
insl
push
aad
cmp
nop
data16
inc
pop
and
imul
fcmovnbe
ljmp
les
rcrl
movsl
lret
mov
pop
pop
test
test
les
in
push
cmp
xor
js
mov
das
add
inc
nop
fldenv
in
xlat
or
lods
lods
repz
push
or
scas
xchg
cmp
jnp
in
ljmp
xchg
and
mov
scas
movsl
mov
jb
and
sub
xor
mov
pop
movsb
cmpl
xor
pop
cmpsl
xor
inc
push
jg
bound
adc
xchg
jb
jbe
xchg
dec
mov
xor
push
movsl
mov
mov
mov
jnp
lods
sbb
cmc
call
lcall
scas
mov
adc
aam
cltd
cmc
xlat
and
pop
xor
movsb
cld
inc
xchg
add
cltd
inc
in
push
push
loope
aas
clc
mov
push
and
xlat
mov
rcrl
pop
das
lcall
ljmp
and
ljmp
or
in
or
push
pop
pop
test
adc
aaa
in
call
pop
push
imul
lods
mov
out
ljmp
sbb
jecxz
aam
popa
xchg
sbb
ficompl
cmp
fldcw
cmp
push
xor
fldt
out
fstpl
pop
sbb
in
repnz
xchg
mov
fbld
into
fiadds
xchg
and
cmp
xchg
in
pop
mov
fs
push
mov
pusha
adcl
xor
add
mov
xchg
in
jne
mov
mov
in
loop
mov
cmpb
sti
and
cmc
xor
or
sbb
adcl
cmp
imul
aaa
pushf
mov
outsb
sbb
inc
lret
jmp
lahf
mov
push
add
dec
mov
lds
movsl
push
sub
stc
sub
popf
aad
lea
leave
fwait
inc
lock
xchg
jns
in
dec
mov
push
cmpsb
ret
leave
xchg
icebp
sbb
test
cmpb
repnz
addr16
add
addr16
flds
xlat
out
fwait
movsb
pop
ret
pusha
add
dec
fists
pop
lret
mov
mov
mov
adc
dec
enter
pusha
out
imull
in
mov
and
mov
fistpl
jno
push
jp
movsl
push
mov
cld
mov
fdivl
mov
push
mov
xchg
enter
imul
fnstenv
rol
inc
lret
jne
cmp
sbb
mov
cli
sbb
mov
or
jmp
sbb
jno
lock
mov
mov
sbb
in
cmpsl
xchg
dec
push
sub
icebp
and
test
ljmp
push
inc
rcr
rcr
add
mov
inc
fcmovnu
std
leave
and
mov
mov
test
rcrb
clc
icebp
and
inc
insl
xchg
push
pusha
xchg
inc
loope
dec
dec
cmp
or
sbb
and
add
add
dec
testb
stos
xchg
cld
jmp
and
rcl
mov
out
rolb
in
pusha
sub
xchg
ja
jmp
or
xor
std
dec
inc
subb
jl
cmpsb
lea
adc
sub
or
and
mov
sarl
dec
clc
pop
mov
xlat
cmp
mov
add
xor
pop
pop
jno
sub
dec
add
out
jnp
int
pop
ljmp
aas
ret
pop
jle
fbstp
xchg
pusha
push
xor
stos
in
xlat
enter
nop
mov
sbb
mov
arpl
sar
shl
mov
mov
sbb
sbb
and
push
xchg
cmp
xchg
rol
andl
insl
int
dec
fnstenv
out
les
sub
dec
add
inc
scas
jecxz
popa
clc
mov
push
movsb
adc
int
add
scas
rclb
stos
popf
cmpsl
ficoms
cmp
pusha
ficoml
stc
cmp
cmpsl
add
inc
les
adc
adc
add
cmp
out
dec
loop
mov
sub
push
test
pop
mov
xchg
addb
pop
mov
jg
js
mov
mull
add
jmp
sahf
mov
int
or
lcall
lods
dec
repnz
rolb
mov
incl
stos
fisttpl
xchg
por
arpl
subl
mov
ret
cld
daa
dec
aaa
mov
mov
add
add
jae
xor
or
lods
movsl
aaa
add
adc
popf
push
xor
movsl
je
pop
dec
dec
mov
xchg
push
push
lret
cmpb
mov
ja
fldcw
or
je
lea
mov
insb
xchg
pushf
leave
outsl
mov
pop
add
out
lock
icebp
lds
in
mov
pop
ss
repnz
testl
mov
insb
in
cmc
and
jl
mov
jmp
add
cmp
stos
mov
mov
mov
add
pop
lds
xchg
in
pushl
mov
clc
adc
shlb
xchg
cmc
jp
pop
jbe
push
insb
gs
mov
out
push
push
jnp
insb
sbb
mov
pusha
jmp
push
fnstenv
push
stc
jo
jmp
jmp
jp
loope
fdivrl
push
or
jle
xchg
push
pop
test
dec
iret
mov
imul
cmp
pop
movsb
push
mov
orb
pop
ljmp
jmp
push
lods
jne
outsl
cmp
adc
mov
xorl
cmpsl
loop
sbb
pop
inc
mov
es
or
fsubrl
mov
mov
jg
mov
xchg
pop
cmpsb
ds
jmp
aam
or
xor
xor
aad
fsubl
cli
mov
add
rolb
and
iret
mov
dec
mov
cmp
sbb
jl
fidivrl
fistps
pop
pop
aad
andl
sbb
sub
or
push
je
inc
mov
xor
push
push
fucompp
fwait
pushf
jmp
adc
hlt
mov
sti
aad
testl
insl
dec
xchg
lods
cld
mov
push
xor
ja
imul
shll
out
leave
and
loopne
loope
ja
jmp
lods
or
cmp
dec
stc
mov
mov
loopne
fs
xchg
jns
or
mov
lret
push
daa
xor
xchg
inc
mov
pop
dec
push
mov
test
movsb
aam
sbb
sbb
out
fstl
pop
mov
pop
add
mov
jp
xchg
outsb
loopne
sub
hlt
mov
adc
push
pop
cld
sarl
ss
mov
and
mov
lcall
gs
sbb
das
jo
nop
fcmovnb
out
stc
test
lds
cmovbe
adc
sub
fisubs
mov
cmpsb
mov
scas
stos
rorl
out
mov
jp
mov
xor
insb
and
ja
sarb
fidivrl
jmp
cli
inc
imul
push
pop
stos
lret
call
dec
and
cmp
push
fidivrs
push
add
inc
fcoml
adc
fbld
lods
pop
push
insl
push
and
jae
mov
mov
jne
or
adc
fnstsw
aam
movsl
xor
loopne
lea
jle
iret
cltd
stc
fildll
sub
push
inc
mov
mov
pop
add
push
aas
in
ret
jo
sarl
push
jl
imul
fs
jge
or
movsb
mov
pop
sbb
data16
popa
ljmp
sub
lea
cmp
lds
aam
incl
mov
dec
cmc
inc
sub
xchg
orl
push
insb
imul
mov
pop
mov
dec
xchg
inc
scas
call
dec
outsl
scas
pop
cmpsb
push
jp
inc
jp
lods
push
mov
out
mov
pop
xor
adc
pop
xlat
insl
fwait
and
xor
cmc
xchg
jle
stos
cmp
add
fwait
shll
xor
icebp
jns
inc
sarl
push
jge
xorl
lret
sub
xchg
xor
lret
fcoms
mov
lret
aas
push
test
sub
daa
xlat
pop
pop
push
testb
adc
add
and
into
sub
mov
or
xlat
dec
stos
xchg
add
sub
sti
cmp
dec
repz
ljmp
jno
inc
jo
je
mov
xor
xchg
dec
lcall
sbb
pop
cld
cmp
pshufw
daa
imul
mov
test
push
push
lds
mov
xor
adc
sahf
xchg
jno
pushf
in
mov
and
mov
jnp
ss
jmp
hlt
fisubs
jne
push
shll
xor
out
push
fwait
mov
push
mov
jge
push
push
aam
mov
xchg
mov
push
outsl
mov
shlb
int
lret
cmp
out
jnp
mov
mov
jp
pushf
xchg
xlat
push
sbb
cmp
mov
nop
loop
push
mov
sbb
inc
mov
sub
sarl
adcb
jne
adc
mov
sbb
lret
fs
sti
imul
cmp
mov
daa
into
imul
add
mov
push
mov
and
push
daa
adc
leave
push
push
sbb
mov
bswap
push
fimuls
divb
imul
rorl
stos
and
test
push
push
pushf
sub
mov
xchg
aad
outsl
add
fs
into
inc
shlb
push
inc
addl
mov
xchg
outsl
mov
adc
cs
lock
shlb
mov
or
das
jb
cltd
push
mov
orl
jge
xchg
dec
add
cs
sbb
mulb
dec
inc
roll
ds
cmpsl
insb
cli
enter
cmp
xchg
inc
inc
fwait
push
dec
push
loope
push
shlb
fdivl
xchg
lock
xlat
inc
pusha
adc
sbb
out
dec
test
dec
aaa
xor
inc
repnz
sahf
lret
repz
scas
fsubrl
insl
test
int
inc
sbb
lahf
cmc
sub
fdivl
fmul
xchg
pop
xchg
mov
inc
jmp
mov
not
or
jg
shll
gs
push
add
add
mov
lahf
jo
mov
xchg
mov
cmp
scas
into
and
add
mov
icebp
sti
aas
sbb
in
inc
mov
add
ret
ss
insl
jl
mov
and
lret
ds
adc
sub
push
ret
jl
jnp
jp
inc
sub
add
cmp
push
xor
test
mov
xchg
das
js
in
adcl
jge
inc
pop
nop
mov
add
aas
inc
aad
xchg
pop
movsb
js
subl
repz
or
dec
xorb
jo
push
loope
mov
sbb
mov
pop
push
sbb
sub
inc
inc
mov
jns
loop
xor
push
and
jne
add
mov
mov
shll
imul
jp
cs
aaa
in
cwtl
scas
cmp
mov
hlt
or
dec
xor
stos
lock
scas
mov
xor
fnstenv
mov
push
mov
add
faddl
pop
push
sti
iret
push
jne
adc
iret
push
pop
jmp
arpl
aam
mov
jo
or
mov
outsl
sub
jne
push
movsl
add
aas
loope
adc
add
sub
aam
mov
pop
jecxz
sub
loopne
test
vpcmpgtd
push
jecxz
orb
movsb
sbb
xchg
rorl
fwait
xor
adc
sahf
mov
sahf
cmp
xlat
insb
and
cmpsl
mov
inc
adc
sbb
adc
mov
test
add
add
loop
in
sub
dec
push
cli
cmp
and
out
adc
or
std
jns
movsl
inc
sbb
add
mov
out
imul
test
lret
jge
xor
imul
cmpsb
inc
pop
jmp
adc
and
ds
mov
cmp
jne
push
inc
ficoml
pop
jnp
sbb
test
sysexit
pop
adc
inc
gs
mov
push
add
jle
in
cmp
mov
sub
jne
gs
jno
je
push
scas
out
push
mov
cmpsl
pop
into
add
test
arpl
mov
sub
mov
addb
xor
push
mov
cmp
repnz
lods
hlt
mov
test
push
ret
cmp
enter
xchg
xchg
lods
and
dec
aas
inc
and
xlat
aaa
aad
das
leave
sbb
jge
jnp
jge
mov
or
sbb
aas
push
movsb
xchg
pop
push
repnz
shlb
fisttpl
call
sbb
xor
sbb
jle
in
data16
push
add
push
fadds
sbb
fidivrl
subl
ljmp
sti
xchg
dec
cld
movsl
out
mov
bound
mov
push
xchg
arpl
aam
cs
xchg
sbb
and
xchg
movsl
lcall
fidivs
jo
sub
xchg
jns
jbe
jae
cwtl
jae
mov
pop
or
xlat
dec
aas
jb
movb
mov
push
jecxz
xor
cmpsb
popf
addb
fwait
jmp
adc
add
fwait
cmpsb
inc
mov
pop
xorb
push
cmpl
sbb
adc
mov
icebp
cltd
add
inc
insl
push
jne
cmc
or
pop
xor
insb
mov
push
jns
scas
std
fcompl
and
xchg
je
xchg
sti
jge
pop
cmp
jp
cmp
sub
dec
rorl
je
push
or
shr
add
push
loopne
mov
in
push
mov
mov
test
stc
and
xor
lret
icebp
mov
push
or
sbb
arpl
mov
push
cs
roll
aad
xchg
filds
mov
popa
les
and
or
mov
outsl
hlt
mov
dec
int3
mov
and
cli
pop
sub
mov
pop
out
xor
xchg
cmpsl
pop
divb
dec
into
shrb
pop
loop
stos
push
popl
mov
test
push
dec
int
xchg
sbbb
xor
push
mov
popa
mov
lret
orl
cs
negl
and
aam
dec
jp
push
mov
inc
je
fmull
sub
add
pop
mov
loop
leave
mov
xor
dec
jo
adc
push
call
xor
pop
add
mov
and
or
scas
test
sbb
and
inc
imul
sub
inc
pop
dec
or
and
cmp
cwtl
cmp
xchg
incl
sub
or
inc
push
xchg
orb
fsubr
aad
outsl
adc
stc
push
sub
stos
scas
and
xor
stos
mov
push
pop
repz
fs
cmp
dec
dec
xor
cmp
mov
sub
or
inc
test
xlat
cmp
push
std
dec
loopne
daa
mov
pushf
mov
loope
push
imul
sti
repz
sub
stc
lcall
mov
std
pop
insb
mov
add
jns
imul
adcl
fidivl
mov
dec
add
test
aaa
pusha
dec
cmp
das
mov
inc
lcall
and
xor
out
inc
clc
fdivrs
pop
adc
and
ljmp
test
daa
sbb
rcr
mov
les
out
rcl
add
hlt
je
jb
jl
jg
sub
clc
or
sub
stos
into
push
push
pop
mov
loope
cmp
cmp
mov
cwtl
lcall
repnz
movsl
shrb
pop
sub
lds
xor
stos
jecxz
pop
push
outsb
add
push
nop
movaps
adc
das
sti
stc
jmp
lea
pop
lock
mov
mulb
pop
and
or
test
stos
ds
push
lret
outsl
pop
icebp
pop
sub
sti
inc
or
inc
testl
pop
ds
nop
ret
fstl
out
cld
cmc
inc
out
pusha
pop
jmp
loop
icebp
out
adc
mov
cmp
fdivrs
loope
jle
ljmp
jo
sti
and
lds
pop
out
outsl
jnp
outsl
into
mov
pop
lcall
imul
scas
int3
push
add
shlb
lea
in
pushf
lret
xchg
cmc
cltd
sbb
mov
jge
mov
and
push
jnp
mov
bound
add
pop
push
pavgw
push
cmpsb
xchg
pop
jbe
lahf
pop
insb
pop
mov
gs
movsl
test
mov
enter
pop
ficompl
clc
rolb
cmp
or
movsb
xor
mov
sub
sbb
xor
mov
repnz
jecxz
sbb
in
push
lahf
fwait
enter
insl
jns
jb
shl
and
pop
stos
or
add
pop
push
bound
mov
aam
ds
sub
pop
je
xchg
lcall
test
jge
sub
mov
aaa
dec
pop
or
cld
test
push
jb
jp
inc
stos
pop
imul
mov
mov
insb
mov
cwtl
imul
mov
jmp
cmp
ja
sti
mov
stc
std
sub
pop
xor
jle
ljmp
jmp
mov
int3
inc
ficompl
int
and
jl
cmp
lret
notl
cli
aad
cmp
stos
dec
imul
xchg
push
mov
adc
je
test
cld
fstps
or
loop
and
add
xlat
adc
sub
push
cs
andb
mov
push
popf
or
es
lcall
nop
shlb
add
sub
adc
std
cwtl
xchg
push
int3
xlat
mov
add
fld
push
xor
xor
out
cli
test
lcall
imul
int3
jb
repnz
pushf
xor
lahf
lods
and
fndisi(8087
in
mov
les
test
xchg
sub
sbb
cld
sub
cmp
shll
int3
insl
dec
jle
in
push
xchg
mov
out
mov
outsl
div
or
mov
stos
push
loope
imul
gs
xchg
sbb
leave
lcall
pop
jno
call
cld
inc
sbb
gs
sub
pop
adc
ljmp
sub
sti
sbb
push
xchg
xor
cmp
and
ja
fs
xor
dec
adc
or
jecxz
call
cs
jns
xchg
xor
mov
sbbb
icebp
out
loopne
lods
xchg
rcrb
in
enter
aam
jle
fidivrl
mov
outsl
lret
and
insb
pop
add
sub
sub
stos
sahf
jb
pop
scas
mov
shlb
dec
pop
imul
loope
ljmp
ds
push
push
or
imul
lret
nop
pop
loopne
push
pcmpgtd
bound
lods
dec
pop
out
sbb
dec
loop
aam
aas
and
leave
std
push
push
arpl
pop
in
aaa
sbb
int
inc
xchg
jbe
push
xor
add
jno
stc
arpl
add
popf
pop
stc
cmp
nop
insl
aad
xchg
dec
sub
cli
pusha
xlat
pop
sbb
jae
pop
cs
dec
out
sbbb
movsb
or
push
mov
jae
push
adc
jnp
push
mov
push
mov
add
or
mov
or
push
pusha
adc
arpl
aas
jle
rdtsc
mov
sub
dec
add
jo
and
xlat
sbb
jnp
mov
push
mov
jge
out
insl
xor
lock
sbb
pusha
in
outsb
fstps
xor
pop
push
enter
inc
dec
pop
sbb
pop
jnp
jmp
mov
sahf
loope
fwait
stc
mov
dec
jp
test
xor
subb
lret
jmp
fdivl
inc
add
out
pop
mov
pop
lods
cli
push
stc
sarb
adc
jbe
pop
in
lock
pushf
pop
push
ja
jp,pt
mov
adc
sbb
test
mov
incl
in
arpl
adc
nop
sti
adc
jbe
adc
loope
adc
and
and
inc
std
daa
xor
pop
jbe
dec
out
loopne
test
push
mov
aam
mov
ljmp
sbb
jmp
clc
mov
mov
push
mov
xor
fistl
rcl
inc
mov
outsb
inc
cli
xor
pop
sbbb
cmp
sub
or
xchg
or
lret
and
dec
test
xchg
xchg
ret
push
inc
sbb
dec
jns
and
negl
es
sbb
push
divps
jmp
xor
xchg
xchg
jecxz
push
push
pop
pop
cld
xchg
test
adc
mov
push
mov
pushf
loopne
fsts
out
xchg
push
cli
dec
scas
cmc
xchg
out
pop
pmuludq
lcall
sti
or
fwait
mov
jle
jo
pop
mov
add
pop
mov
das
pop
into
cltd
sti
iret
cltd
pop
test
dec
cmpsb
ret
shll
jp
leave
push
sub
out
test
xchg
cmpb
add
cmp
dec
int3
pop
out
push
xorb
frstor
jnp
shl
inc
into
jnp
mov
dec
push
es
inc
cltd
dec
in
lret
xchg
orb
cld
out
out
jae
fidivs
push
jne
arpl
add
adc
lods
lods
inc
stos
dec
fimuls
cwtl
inc
sub
and
and
push
pushf
or
fldt
dec
adc
ss
sahf
sbb
lods
push
stos
inc
scas
cli
sbb
or
mov
adc
mov
repz
sbb
out
jne
arpl
dec
aam
jo
cmp
lret
dec
stos
test
out
jo
sub
and
mov
pushf
mov
fsubl
les
lea
mov
or
aad
jae
sub
dec
and
clc
jo
andb
frstor
sub
cltd
xchg
fildll
sbb
cltd
addr16
mov
popf
push
sbb
mov
scas
fxam
or
pop
rclb
jmp
jp
push
pusha
das
cli
xor
xor
sbb
and
mov
fisubl
out
xchg
pop
jmp
mov
jae,pn
loop
sahf
cld
out
jae
inc
dec
pop
jae
scas
rclb
ret
je
cwtl
adc
jl
jp
lcall
dec
dec
gs
or
pusha
das
mov
stos
cmp
adc
mov
insb
outsl
adc
push
xor
popa
insb
ss
dec
scas
xchg
in
clc
lret
or
lds
bound
int
loopne
sub
or
mov
jl
jl
add
jb
loope
xor
fs
or
pop
or
aad
adc
mov
adc
loopne
test
sub
data16
movsb
push
out
xor
cmp
movd
divb
inc
dec
adc
jne
push
push
out
or
inc
fdivr
xor
test
loop
std
sbb
push
rcrl
mov
adc
daa
ss
enter
sbb
loope
movsb
lret
push
xor
hlt
mov
cmp
cltd
fdivs
dec
lahf
xor
sti
sub
jae
sbb
mov
dec
popf
lcall
dec
dec
in
add
int3
fisttpl
div
push
aas
loop
cmc
les
inc
movsl
fwait
lods
scas
out
adcl
jecxz
outsb
adc
xchg
push
dec
ljmp
pop
push
shrb
lods
fisubrl
arpl
inc
clc
ja
into
xor
jg
push
add
push
pop
pusha
repnz
dec
rep
test
in
mov
cmp
push
nop
sub
and
test
mov
fildl
lods
jge
mov
cmp
and
cs
das
dec
xchg
mov
aas
pop
sub
push
sub
jnp
add
adc
push
mov
mov
jno
lock
jns
push
cmp
out
aaa
in
cmp
movsb
xchg
addr16
lea
pop
sbb
and
test
xor
add
out
flds
or
cmp
mov
insb
sbb
mov
sbb
xchg
popf
sbb
out
loop
push
jp
repnz
stos
aad
jne
pop
ds
add
rsm
sub
and
add
lret
into
test
gs
or
data16
push
imul
fcmovne
daa
shll
andl
mov
jmp
loope
push
cmpsl
and
testl
or
push
leave
sbb
call
and
xchg
cltd
data16
sub
xlat
aaa
in
mov
cmp
mov
fstp
test
stc
pop
dec
ss
adc
pop
dec
outsl
pop
jae
in
dec
add
jns
imul
sahf
jne
ror
cmpsb
mov
loopne
test
add
pop
in
repnz
ret
push
xchg
mov
scas
rcr
inc
lea
mov
cmc
push
aam
mov
inc
cmp
movsb
jge
cltd
sub
imulb
outsb
pop
mov
dec
call
test
das
xchg
pop
inc
xor
xor
mov
lea
lods
clc
aas
jle
rorl
add
in
and
mov
shr
cmp
insb
ja
and
xchg
cli
jmp
out
outsl
pop
negl
outsb
addr16
xor
int3
mov
lret
inc
lods
popa
call
daa
data16
dec
or
call
ljmp
iret
jno
popf
xchg
sub
out
popl
cmp
and
xchg
lds
clc
leave
sbb
movsl
popa
or
ret
jbe
fwait
jbe
jge
call
bound
imul
sbb
sbb
pop
fwait
xor
sub
xlat
mov
mov
int3
ljmp
sbb
jecxz
jno
aas
push
xlat
sub
andl
sub
pop
iret
bound
xchg
sbb
xchg
lret
and
fcomps
mov
cli
loope
lcall
imul
sub
hlt
jmp
inc
xchg
sbb
cmp
xchg
gs
inc
adc
pop
aam
outsl
aas
sbb
call
and
sbb
mov
sbb
xor
mov
int3
inc
mov
push
int
pop
jge
dec
jo
jl
into
fadds
fcoml
adc
repz
or
add
mov
out
add
xor
jmp
cltd
mov
daa
mov
mov
test
mov
dec
mov
jae
mov
das
test
push
lret
adc
mov
xor
sub
das
mov
push
lods
push
movsl
dec
mov
stc
addl
jmp
push
and
sub
and
ja
leave
loope
pop
js
testb
add
hlt
mov
test
jae
jo
in
add
je
add
in
pop
dec
xchg
fldcw
inc
or
push
add
jge
sub
lahf
inc
enter
or
push
mov
cmp
arpl
stc
shlb
pop
cltd
outsl
jo
dec
popf
mov
mov
lods
into
adc
mov
sub
xor
aaa
adc
cwtl
imul
loop
clc
sbb
testb
mov
dec
sarl
jge
xor
ret
aas
loopne
pop
xchg
mov
cld
fs
enter
fdivs
sbb
jae
adcl
jle
bound
es
and
push
loopne
icebp
fildl
cld
inc
mov
inc
movsl
mov
xor
pop
jecxz
pop
out
cli
pushf
leave
fdivrs
jne
sbb
js
shrb
gs
popa
sarb
xchg
pusha
sbb
pop
mov
push
std
xlat
lret
inc
and
xchg
dec
pushf
xchg
push
fidivs
push
pop
inc
aam
mov
cmp
jb
mov
pop
inc
les
cmp
js,pn
ja
inc
xchg
jnp
aad
dec
imul
scas
fs
es
or
mov
iret
stos
dec
cmp
add
lret
mull
lods
or
out
push
push
xor
or
sahf
inc
lea
cli
jle
sub
ret
xchg
es
cmc
addr16
dec
pop
cmp
dec
pop
adc
mov
stc
repnz
repz
inc
repz
das
dec
ds
shll
out
xchg
test
cwtl
mov
pop
mov
subl
repnz
in
push
inc
xchg
aam
dec
ds
xorb
insb
outsb
jmp
test
and
lods
and
in
dec
clc
sub
mov
ret
lret
cmp
add
mov
add
clc
sahf
fadds
addl
jge
cmpsl
mov
mov
push
clc
mov
subl
adc
adc
inc
jae
fisttpl
or
or
pusha
pop
or
int
lods
lds
bound
dec
dec
add
popf
or
push
or
ret
mov
pop
movsb
dec
jmp
popf
repz
rol
int
sbb
outsb
inc
sbb
pop
loopne
cmp
arpl
adc
xchg
pop
les
mov
inc
jae
pop
mov
pop
xchg
adc
lods
push
jnp
js
int
enter
cltd
stos
pop
das
xor
push
push
xchg
and
sub
push
pop
and
sbb
push
sbb
sbb
push
xchg
cmc
daa
push
adc
daa
pop
in
imul
cmp
mov
in
daa
or
adc
popf
inc
pop
sbb
nop
or
inc
insb
sub
push
dec
lret
rcrl
mov
sub
jl
daa
lret
popa
sti
cmp
mov
mov
sbb
out
std
push
mov
mov
jb
and
fcomip
push
jae
outsl
jbe
mov
and
jo
aam
mov
rep
into
adc
push
jp
xor
jg
imul
mov
push
inc
dec
lret
xor
lock
inc
stc
jmp
sti
mov
push
ret
int
inc
fidivrs
insb
je
dec
call
mov
cmp
in
aaa
lret
shlb
xchg
lcall
lret
sbb
enter
mov
adc
dec
dec
cmp
jb
sbb
or
fmuls
adc
in
jno
inc
mov
add
push
xchg
xchg
mov
mov
daa
idivl
inc
lock
lret
fisubrl
add
push
inc
push
aam
xor
lods
xchg
add
clc
xor
xchg
icebp
cmp
je
mov
inc
popa
nop
enter
movsl
cwtl
cltd
inc
gs
ja
mov
and
xchg
adc
xchg
jp
and
mov
mov
pop
mov
pop
leave
xchg
test
cmp
jb
xor
xor
mov
dec
clc
dec
sarb
test
xchg
std
sub
in
gs
orl
sbbb
pop
cmc
sub
mov
mov
inc
and
ret
iret
das
fimuls
mov
leave
in
popf
inc
lea
loopne
into
in
sti
pop
mov
mov
test
push
mov
pop
sarl
mov
lret
or
sbb
xlat
call
mov
mov
idivb
sub
mov
jo
push
insb
cmp
push
jle
inc
pusha
ss
div
pop
int
icebp
xchg
jo
mov
addr16
fucomip
push
or
ljmp
push
inc
cmpsb
sub
xor
adc
lea
xchg
sahf
adc
loop
clc
lea
dec
sub
cs
push
scas
rclb
and
out
ss
cld
or
outsb
test
insl
sbb
adc
jnp
pop
adc
fs
pop
and
or
mov
jle
push
sub
test
dec
sahf
popa
push
jp
cmp
push
loope
iret
and
mov
fwait
fwait
jne
dec
xor
cld
aad
sbb
jne
js
cmpsl
stos
fwait
cmp
fiaddl
jo
fs
imul
dec
add
mov
lcall
xchg
movsl
insb
xor
decl
ljmp
in
or
enter
sbb
xor
test
sub
dec
add
sub
sub
fidivrs
adc
out
aaa
mov
or
cmp
inc
in
sbb
xor
jmp
mov
jnp
out
fldcw
sub
inc
shr
shlb
adc
inc
pop
mov
ror
hlt
pop
lea
lret
mov
xor
inc
pusha
xchg
and
mov
aam
rorl
jns
shlb
sbb
pusha
aaa
shr
jno
shlb
ret
or
jecxz
or
jecxz
incl
sbb
addr16
sub
fsubs
out
inc
sub
jo
js
sti
in
xchg
mov
sbb
xor
mov
stos
mov
ds
lds
loope
into
xor
test
fnstenv
pop
shr
adc
outsl
jl
divb
mov
or
jo
leave
nop
test
in
rol
cmc
mov
and
xor
or
aaa
push
clc
lahf
dec
pushf
sub
dec
int
popf
scas
pop
pop
lea
cmpl
movsl
pop
mov
mov
stos
mov
in
hlt
enter
orb
inc
jge
jmp
bound
add
push
or
pop
sub
lahf
mov
adc
xor
orl
das
stos
inc
out
loope
repnz
push
inc
jbe
imul
filds
gs
pushf
loop
sahf
mov
dec
or
push
xchg
mov
dec
leave
jl
outsl
ja
xor
push
mov
adc
push
pop
jecxz
sahf
jne
shlb
inc
sub
outsl
jae
push
push
adc
mov
test
inc
jbe
add
add
notl
jmp
sbb
xor
into
enter
and
cltd
cmp
js
call
aad
out
sbb
mov
xchg
aad
push
sub
mov
cmpsb
shll
cld
jno
jno
xlat
call
and
cli
std
mov
lds
je
or
clc
out
xchg
pop
mov
rorb
cmp
incb
jnp
test
ljmp
mov
xchg
aas
fdivrl
call
sbb
pushf
lock
xchg
icebp
aas
or
pop
loopne
push
and
push
sub
sahf
testl
rcrl
dec
enter
cltd
lock
out
push
adc
shrb
adc
ret
mov
jg
adcl
test
sbb
pusha
arpl
push
popf
xor
sysexit
jle
and
loope
sub
lret
hlt
sahf
pop
imul
sbb
mov
dec
mov
fmul
mov
add
jnp
stos
push
and
mov
inc
fmull
ffree
mov
dec
std
data16
stos
sbb
mov
inc
sub
jmp
jp
out
mov
loopne
inc
ret
hlt
cmpsb
out
xor
xor
fldl
xlat
add
mov
aam
rolb
and
lock
and
push
push
adc
ror
test
adc
enter
sub
inc
fstpt
jle
mov
inc
inc
aam
or
jnp
inc
xlat
jl
jp
mov
mov
or
sub
add
adc
rep
inc
orb
mov
pop
mov
mov
lret
lods
sarb
push
xchg
test
and
sub
sbb
int
rcrb
pop
mov
icebp
xchg
mov
mov
xor
clc
fmull
imul
in
cmpsl
stc
add
lcall
stc
add
in
jmp
frstor
movsb
push
dec
and
fidivl
outsl
scas
ja
and
jnp
aaa
fs
push
outsb
icebp
mov
dec
cmpl
ds
cmp
imul
dec
pop
jne
mov
mov
lcall
inc
mov
lods
mov
pop
xor
js
xchg
xchg
adc
out
xor
xor
and
arpl
mov
int
cmp
ljmp
mov
mov
add
aaa
xor
push
in
mov
mov
ret
shlb
dec
loop
fs
fmul
mov
pop
pop
iret
gs
mov
js
dec
ret
dec
dec
std
and
mov
in
jae
outsb
sbb
jg
imul
les
mov
inc
jmp
ljmpw
mov
or
cwtl
jle
loop
stos
test
jo
aad
xchg
iret
cli
jne
push
data16
insl
or
mov
testl
mov
cmpsb
scas
popa
insl
jae
adc
cmp
pop
dec
je
andl
and
loope
repz
jns
xchg
pop
xor
sub
add
insb
call
pushf
lock
inc
xchg
inc
jmp
loope
adc
addr16
inc
imul
out
fimull
andb
mov
test
test
mov
mov
jne
jg
fdivrl
sbb
push
or
adc
cld
aaa
mov
cmp
xchg
xchg
ljmp
jo
test
adc
xchg
pushf
mov
xor
cmc
push
inc
sbb
mov
adc
mov
push
xor
mov
jmp
fcompl
lock
je
loope
push
pop
daa
ret
leave
stc
jbe
push
popf
fs
pushf
es
mov
mov
push
lods
shrb
subb
in
andl
or
jge
xchg
addl
insl
jmp
cld
dec
aad
jne
inc
add
fildll
scas
mov
sbb
dec
icebp
jo
inc
shll
pop
pop
jnp
xor
decl
repz
xor
and
cmp
test
outsl
pop
test
pop
push
push
push
adc
insl
cmp
negb
shll
add
or
or
jno
push
insb
push
sub
das
es
xlat
mov
push
sbbl
ds
jl
mov
push
mov
xchg
inc
imul
jge
sbb
rclb
pop
sub
aad
orb
xchg
cs
cmp
js
aam
xor
popa
fnstsw
mov
sub
mov
fcomip
sbb
scas
cmpsl
xor
test
orl
fisttps
data16
jno
jno
add
call
xchg
fsub
lock
sbb
dec
loopne
sub
pop
mov
inc
sub
xor
add
dec
mov
jne
sbb
pop
addb
into
insl
unpckhps
inc
inc
mov
and
sub
mov
test
jnp
dec
dec
xchg
pop
mov
cltd
in
xchg
aas
pop
dec
add
fiaddl
rol
outsl
ret
or
ret
shll
and
stos
dec
mov
rcll
testl
mov
jmp
sbb
jle
mov
xchg
sbbb
cmc
testb
imul
mov
out
fst
jb
sarb
or
shlb
mov
xchg
adc
push
cmp
fs
sub
inc
bound
mov
mov
cmp
or
in
lds
fs
insl
push
jle
xor
xchg
add
mov
dec
rclb
fsubs
imul
pop
fwait
lcall
lret
mov
sub
nop
pop
into
or
mov
xchg
and
jl
cld
lods
mov
lcall
xchg
test
cmp
dec
std
sub
test
and
cmc
call
mov
mov
pusha
jmp
cld
je
inc
dec
sbb
call
sub
push
je
test
sub
dec
push
mov
clc
std
mov
jle
mov
or
cmc
pop
dec
jg
cmp
icebp
stc
stc
jbe
mov
lahf
mov
and
fnstcw
stos
cmp
mov
xor
das
sub
push
xchg
inc
or
mov
scas
out
pop
lahf
sbb
fwait
xchg
pop
out
xor
clc
cld
push
rol
jl
inc
loopne
repz
aad
pop
or
repz
aaa
jge
jge
movsl
mov
rcl
or
outsl
insb
and
jae
add
and
add
dec
cmc
mov
rcrl
xorl
das
shrl
jg
cmp
ss
and
das
ret
push
pop
icebp
mov
pop
jno
aam
mov
jbe
outsl
or
paddusw
xor
push
and
lret
push
push
outsb
imul
xchg
sbb
mov
es
mov
repz
or
int3
idivb
mov
or
pminsw
jecxz
jne
icebp
in
jo
lock
or
mov
in
sbbl
loope
adc
xor
pushf
add
xor
adc
xchg
add
ja
xchg
sti
in
push
decl
sbb
pop
repz
push
mov
cld
cmp
scas
or
add
aam
jo
aaa
mov
inc
js
mov
cmpsb
xchg
popf
push
mull
inc
adc
mov
insl
decb
aad
mov
mov
lods
int3
inc
popa
mov
leave
cld
rolb
sbbl
mov
inc
dec
adc
popf
dec
sbb
rclb
test
iret
idivb
xor
mov
push
adc
cmp
mov
rclb
frstor
dec
loopne
inc
lcall
adcb
xchg
dec
leave
ja
xchg
lret
adc
push
sbb
push
or
shrb
and
push
sbb
jmp
push
stos
cld
inc
push
dec
cli
loope
addl
pop
std
inc
add
xchg
scas
lret
enter
movsl
inc
andb
jno
add
xor
in
xchg
rcrl
or
jp
push
hlt
push
xor
or
pop
pop
rol
in
inc
xchg
clc
xor
mov
jmp
xor
mov
jmp
sub
rolb
jo
outsb
loop
jo
andl
jbe
adc
sub
and
subl
add
cmp
lret
adc
out
mov
or
sub
cmpb
ljmp
mov
or
xchg
cmpsb
pop
fwait
jmp
jo
fmull
bound
sti
push
or
mov
push
cmp
sbb
xchg
mov
cmp
cld
dec
int
sub
fwait
push
sbb
dec
adc
bound
push
xor
nop
call
scas
aam
leave
mov
pop
out
sub
pop
jne
std
adc
mov
xor
aaa
rcrb
and
sbb
dec
stos
mov
faddl
fs
dec
test
andl
pop
and
in
xorb
mov
divl
dec
and
outsl
test
outsl
jb
loopne
adc
call
das
sbb
sub
or
sbb
mov
not
mov
sbb
mov
fsubl
push
mov
std
out
mov
adc
or
sub
pushf
jns
and
adc
inc
dec
mov
cmp
lret
inc
xchg
push
lods
xchg
ret
iret
outsl
cmp
int3
cs
hlt
jecxz
stos
xor
sub
shlb
xorl
divl
lret
dec
xor
pop
int3
pushf
fwait
jmp
leave
push
subl
jmp
imul
adc
fabs
xchg
cmp
xchg
push
dec
cmp
ret
insl
push
cltd
hlt
dec
addr16
dec
jg
mov
mov
mov
fiadds
popf
js
clc
pop
sub
push
loop
pop
cmp
xor
dec
lds
jecxz
cltd
dec
fiaddl
insb
adc
imul
jg
jge
push
xor
and
cmp
pop
jl
cwtl
cld
dec
mov
jle
or
jno
inc
push
mov
xchg
in
dec
jl
mov
mov
hlt
cmpsb
js
mov
imul
sbb
sbb
je
mov
jnp
dec
xor
aam
sbb
ss
mov
pushf
loope
xor
xchg
inc
or
int3
adc
sbb
adc
inc
and
popa
ljmp
insl
xor
pushf
pop
inc
out
jnp
or
sarb
enter
sbb
out
ljmp
pop
sahf
xchg
inc
in
cmp
xchg
mov
pusha
mov
sub
and
mov
movl
stc
add
cmp
lahf
push
mov
in
clc
mulb
fistps
or
pop
outsb
loope
jno
ret
loopne
int3
mov
sub
or
inc
and
or
adc
rol
fildl
cli
int
pop
push
ret
jecxz
xchg
enter
adc
sbb
xor
shrl
out
ret
inc
mov
mov
xchg
push
testl
test
stos
sarl
or
mov
mov
into
pop
fsubs
movsb
daa
out
xchg
xlat
lcall
fistl
lea
les
ret
push
data16
lret
inc
loop
dec
add
imul
jmp
into
adc
shl
jne
icebp
sahf
je
dec
in
lock
sbb
in
ds
rcll
leave
push
aad
pop
add
ds
lret
mov
ljmp
xor
xlat
hlt
sub
aad
and
inc
ja
sub
add
scas
fdivl
cli
inc
xchg
loope
lcall
lret
or
xchg
sub
sbb
add
adc
pop
daa
mov
in
xchg
ret
stos
push
sarl
mov
into
leave
and
sbb
dec
pop
jae
mov
mov
out
mov
and
xchg
imul
std
push
cmp
lret
shlb
out
aaa
adc
rcr
mov
add
push
cs
lods
pop
xchg
mov
nop
fcmovne
cmp
enter
mov
pop
in
cli
and
call
bound
mov
pushf
inc
sub
or
dec
sub
cli
mov
sub
jp
mov
dec
cld
cmpsb
adc
xchg
cmpsl
icebp
shrl
lret
sub
adcb
pop
xchg
and
dec
movl
cmp
mov
aaa
in
mov
cmpsl
into
and
incl
cmc
jmp
nop
cmp
jge
xchg
int
push
out
fdiv
inc
adc
fnstsw
dec
aaa
pop
leave
dec
out
rorl
nop
sbb
mov
mov
shll
mov
push
push
repz
jo
push
or
mulb
or
scas
jge
loopne
cmp
lret
cld
scas
mov
mov
aad
push
ds
in
fwait
cmp
sbb
stos
pop
push
or
adc
fstps
jecxz
ja
popa
adc
insb
fmull
adc
mov
mov
add
mov
push
mov
ja
mov
pop
pop
pusha
fwait
es
cmp
mov
nop
inc
imul
cmp
outsb
adc
sbb
loop
outsl
into
add
inc
cmp
loop
sub
push
and
int
addb
adc
inc
inc
cmc
pop
inc
jae
dec
dec
es
pop
daa
flds
mov
push
push
jbe
dec
hlt
jb
int3
sub
cmp
push
adc
dec
cli
cmp
mov
or
and
dec
sub
sub
add
pcmpeqb
out
xchg
cwtl
add
or
mov
xchg
sub
mov
filds
addr16
sub
and
sub
lcall
or
mov
sub
jns
pop
or
mov
fimull
pop
loopne
add
adc
sbb
dec
adc
movsl
jmp
xor
out
fldl
pop
push
jmp
loopne
xor
jns
pop
rcl
mov
lahf
outsl
ret
sarb
xchg
jl
push
into
push
add
fnstenv
mov
std
mov
mul
sub
pop
das
mov
jbe
cwtl
sub
add
sub
js
push
push
sbb
mov
add
jne
ja
jmp
cmp
sbb
lret
mov
ds
loope
inc
imul
int
ljmp
gs
stos
mov
sti
mov
adc
jl
jns
mov
push
fstpt
jb
mov
xchg
sbb
loopne
mov
fsub
mov
xacquire
sub
cli
dec
nop
or
mov
movsb
mov
rorb
push
data16
lcall
inc
push
jnp
hlt
add
mov
and
nop
mov
fsub
add
push
mov
jne
arpl
fwait
push
push
aas
or
mov
shll
mov
push
dec
scas
xlat
push
xchg
inc
enter
inc
inc
and
dec
movsb
cmc
fistpl
push
mov
sub
sti
pop
dec
stos
fcoml
jns
lcall
les
sbb
rcl
cmp
cs
hlt
lods
jge
sub
jecxz
mov
or
imul
idivb
bound
adc
aaa
push
test
fstp
in
adc
enter
and
ficompl
xor
dec
dec
sbb
sub
cs
add
jg
mov
adc
stos
sbb
das
pop
insb
pop
jo
mov
add
out
mov
mov
test
testl
push
fstl
lret
jp
lock
pop
mov
pop
push
orb
sbb
mov
push
icebp
cmp
leave
fcomip
mov
test
inc
scas
push
gs
shlb
and
jp
imul
popl
xchg
xor
xchg
loopne
test
stc
and
lods
pop
andb
call
mov
ficoms
and
or
dec
lret
jl
stos
jecxz
cmp
dec
rorl
into
xchg
push
push
or
cli
repz
pusha
cwtl
mov
data16
js
lods
repz
push
dec
call
dec
pop
sar
adc
data16
ss
push
xchg
addr16
mov
and
jne
pop
js
dec
adc
pusha
loope
cwtl
test
mov
sbb
lods
push
sub
cwtl
push
or
push
cmp
add
add
lea
sub
sbb
cltd
daa
fstps
add
bound
inc
call
inc
xlat
testb
and
dec
inc
aas
push
outsl
jo
lea
mov
fistl
nop
mov
mov
sbb
hlt
jmp
imul
imul
sbb
std
mov
adc
mov
cmpsl
dec
inc
xchg
mov
insl
test
mov
mov
loopne
adc
aam
addr16
jg
lret
inc
rorl
subl
out
fistpll
fwait
xchg
xlat
or
outsb
ss
into
sub
pop
mov
dec
in
push
push
xchg
into
mov
xorb
mov
sub
push
push
inc
aad
dec
or
mov
inc
mov
dec
pop
mov
movsb
jge
std
and
jns
jl
mov
gs
mov
adc
xchg
loop
inc
cmpsb
hlt
aad
fnstsw
cmp
xor
insb
ret
mov
repnz
in
jne
inc
mov
xor
mov
popf
out
push
int3
mov
mov
std
je
push
mov
jno
inc
movsl
mov
adc
ss
adc
sub
je
xchg
lea
sub
jnp
jle
lock
dec
sub
addr16
cwtl
inc
xor
rorl
test
shll
mov
sub
lods
pop
sub
pushf
mov
mov
mov
sbb
icebp
sub
pcmpeqb
scas
js
les
push
rcrl
out
jb
push
or
sbb
sub
mov
mov
pop
pop
sub
dec
scas
cmp
mov
fcmovne
push
out
xchg
pop
jecxz
pop
pop
loop
test
bound
test
dec
pop
or
pop
mov
data16
int
mov
inc
or
imul
negb
ljmp
inc
jns,pn
out
int3
mov
das
dec
cmp
cmp
xchg
mov
fists
inc
fdivrl
mov
sbb
dec
popf
xchg
arpl
cmpsb
push
mov
mov
cmp
push
ja
add
jno
sti
xor
icebp
dec
add
sbb
sbb
cmpsb
repnz
jl
jle
mov
sub
or
divl
notl
pop
dec
mov
mov
shlb
in
enter
jno
popf
aaa
jg
mov
xor
push
jno
stos
push
loopne
sarl
pop
mov
xchg
or
xor
ficoml
dec
es
sbb
cli
and
std
jge
imul
xor
sub
xlat
xorb
dec
mov
xchg
mov
enter
aad
stos
shrl
sub
pusha
pop
mov
jno
cmp
bound
or
push
repz
pop
pop
xchg
imul
dec
shll
mov
adc
stc
into
icebp
mov
std
or
xlat
cltd
xor
pop
pop
ss
push
adc
jnp
icebp
mov
sbb
divl
cld
rcll
inc
mov
sbb
into
loop
popf
adc
xchg
ffreep
jp
ss
and
enter
and
aaa
or
scas
inc
fcmovnb
jmp
jno
fstl
insl
pushf
loopne
je
cwtl
sbb
jmp
add
cmp
push
fadd
leave
es
rcrb
pop
iret
fwait
aam
iret
mulb
js
sub
test
mov
adc
dec
sbb
dec
sbb
mov
cmp
imul
outsl
adc
and
dec
sbb
xor
xor
and
test
lahf
stos
xor
clc
andb
fidivrs
dec
or
fidivrs
push
mov
nop
pop
test
push
mov
cwtl
movsl
fidivrs
xor
or
stos
xchg
pop
loop
and
pop
les
aaa
jmp
xchg
xchg
inc
int3
ljmp
mov
iret
divb
popf
mov
jmp
xlat
pop
mov
insb
hlt
lret
xor
dec
rcll
sub
int
jp
movsl
mov
jne
or
hlt
cmc
test
aaa
jo
pop
pop
bound
mov
aam
repz
push
push
daa
push
add
sub
xchg
mov
push
stc
xchg
sbb
dec
mov
js
pusha
leave
push
dec
out
push
out
fs
stc
mov
jg
repz
inc
ss
out
cmpsb
push
add
add
sub
ja
aam
sti
jmp
push
aam
bound
xor
cmp
dec
pop
sub
xchg
xor
jae
adc
orb
movsb
roll
outsb
xchg
dec
cltd
dec
mov
push
sarb
mov
mov
cmpl
sbb
sbb
jecxz
cli
pop
mov
popf
pop
rol
xor
in
jl
cli
adc
push
sarb
jnp
inc
sub
lds
or
fdivrp
fdivrs
cltd
js
fnstcw
inc
cli
inc
aaa
cld
sahf
outsb
int3
sub
jle
pop
jge
mov
jbe
mov
inc
push
pop
cmpl
push
jp
daa
pushf
dec
mov
int3
hlt
rorb
jp
jbe
aaa
adc
jge
add
or
loop
rcrb
xchg
test
push
icebp
cmpl
push
mov
enter
fisttps
icebp
in
mov
dec
sti
dec
sbb
sub
insl
es
vmread
xor
pop
pop
lock
dec
dec
inc
or
xchg
xchg
stos
aam
sti
sub
xchg
jb
cmp
jl
jmp
les
fldcw
out
out
jmp
sub
imul
ljmp
testb
loope
jo
cld
shrb
and
ret
pop
ffree
out
adc
or
or
aas
jg
cmp
pushf
insl
stos
push
or
inc
mov
or
fstps
cmpsl
and
out
fnstenv
inc
test
lods
mov
cmp
cmp
test
out
adc
dec
repnz
sbb
xchg
lds
fwait
sub
ret
cmp
cmp
iret
cltd
ds
outsl
sbb
pushf
dec
leave
push
sbb
lcall
in
shrl
imul
ss
mov
add
loop
imul
sub
sub
cmpsl
mov
pop
pop
and
xchg
mov
inc
icebp
aam
jo
push
stos
and
lret
sahf
cmpsl
clc
and
cli
fdivrs
jg
jnp
jg
adc
mov
in
test
xor
ljmp
pop
mov
fwait
adc
push
out
and
adc
mov
std
mov
test
scas
cmp
cwtl
arpl
cmp
mov
aam
cmpb
pop
xchg
xchg
lods
push
ret
add
lea
lea
mov
jl
rcrb
mov
in
mov
adc
sub
push
test
outsb
pop
scas
out
mov
mov
jne
aam
mov
or
push
push
xor
jmp
js
mov
in
cmc
stos
mov
popa
out
mov
fsubrs
mov
sub
xchg
pop
in
sbb
les
pop
les
pop
push
push
and
mov
mov
xchg
mov
fnstsw
fwait
ja
les
dec
out
xchg
push
repz
sbb
je
loopne
lcall
xchg
jo
lcall
rorl
movsb
cmp
add
call
sub
and
jl
and
negl
add
fsubl
xchg
or
mov
ret
inc
pop
sbb
fs
lock
jle
arpl
test
pop
movsb
sbb
out
xor
fidivs
push
cmp
lods
cmp
cmp
test
xchg
sub
rorl
lret
sbbb
flds
fsts
pop
sub
mov
mov
clc
subl
mov
dec
inc
cmp
jle
mov
cmpsb
and
cwtl
loope
out
mov
fwait
mov
mov
mov
mov
jnp
xor
and
push
mov
jae
cld
sti
dec
xchg
dec
pop
mov
out
out
cli
push
sbb
lret
mov
mov
shr
mov
pop
cmpsb
fs
setnp
xor
inc
xor
push
push
pop
imul
cmp
cmc
and
add
cmc
pop
lcall
mov
push
loopne
ret
xchg
adc
lods
fistpl
in
mov
int
mov
adc
adc
sarl
and
pushf
fwait
stos
stos
enter
inc
push
pop
imul
lods
and
sub
ds
dec
push
dec
ss
cltd
cmpsb
add
pop
jp
pop
movzwl
rorl
xlat
outsl
xchg
mov
adc
jle
xor
mov
das
outsb
addl
loope
jne
out
dec
mov
adc
xor
in
inc
inc
aas
lock
cmpsl
adc
push
fisubl
sbb
arpl
dec
mov
leave
outsb
jg
push
imul
sub
jbe
inc
sbb
lret
imul
inc
add
xorl
or
int
sub
shll
nop
inc
jbe
cmp
pusha
ds
in
jg
or
sbb
cmpb
pop
insb
jge
cmpsl
mov
lcall
mov
test
and
aaa
insl
frstor
ljmp
xor
or
xchg
or
or
hlt
pop
lods
mov
call
xor
sbb
stc
pop
mov
jle
push
push
push
sbb
aas
in
pop
xchg
or
jb
shll
jge
add
dec
cli
cmp
sub
repz
js
lea
lahf
push
lods
adcl
clc
pop
xchg
xor
push
dec
insb
jnp
ds
ficoml
into
out
and
jmp
push
mov
inc
pop
or
test
test
adc
lea
scas
cld
fs
loopne
cmp
ret
shrb
insb
sub
movsb
fisubrs
push
fstl
pop
pop
mov
push
inc
mov
cmp
cmp
xor
dec
push
js
xor
out
rorl
mul
sarb
pop
fidivs
movsb
enter
mov
stos
sub
jp
addr16
add
inc
xchg
inc
push
jno
adc
mov
jmp
mov
pop
ret
shlb
mov
inc
iret
mov
mov
sbb
movsb
mov
mov
dec
mov
mov
shl
push
inc
cwtl
xor
mov
sahf
fs
xlat
mov
sbb
push
inc
add
mov
xor
mov
cld
pop
test
push
add
iret
aaa
mov
mov
xchg
sahf
lds
test
xchg
mov
pop
stos
je
xor
jo
mov
cmp
stc
data16
mov
push
inc
outsb
xor
rorl
clc
andb
out
or
shlb
les
inc
pop
cltd
ds
sarb
pop
dec
lahf
call
test
jno
into
mov
out
fdivrl
mov
cmpsb
sub
repz
push
xor
cmp
and
int
cmp
sub
add
ja
sub
sbb
mov
lds
nop
out
jne
jle
popa
ret
adc
ss
push
xchg
sub
xchg
lods
out
rol
lds
movsl
pop
and
aam
movsl
cmp
es
add
jge
sub
lods
mov
icebp
mov
aas
adc
ds
dec
mov
ja
insl
jle
pop
rorb
stos
jge
push
pop
addr16
dec
popa
ret
pop
lods
cld
adc
mov
in
pop
mov
and
lods
jg
jbe
cli
xlat
popa
jo
rorl
lock
popa
stc
pop
pushf
mov
xor
fidivrs
add
push
cmp
dec
mov
sahf
lods
je
enter
mov
stc
insl
cwtl
jbe
aam
inc
fists
dec
jne
sahf
or
sub
jo
gs
sub
adcb
mov
es
adc
ss
add
test
xor
jge
mov
xlat
jecxz
push
cld
mov
xchg
jno
data16
push
fisubl
popa
out
iret
mov
cli
sub
aas
ds
fbstp
xlat
lahf
fidivs
pop
ljmp
pop
or
or
cmp
jae
jmp
add
imul
sbb
stos
dec
sbb
mov
shlb
aam
icebp
int3
shrb
lcall
stos
sti
push
and
dec
bndldx
sbb
lret
and
insl
mov
sub
dec
mov
or
sbb
mov
cmp
xchg
das
leave
or
out
xchg
movsl
adc
loop
idivb
cmp
std
filds
push
fildl
ljmp
dec
sbb
scas
fbstp
mov
idivb
and
push
fxtract
pop
mov
sub
mov
dec
leave
jno
pop
lods
repz
adc
daa
aam
adc
cli
mov
mov
and
add
mov
pop
pushl
out
or
or
add
bound
xor
mov
lds
lods
lcall
jae
fmulp
add
pop
stos
hlt
inc
dec
lahf
mov
xchg
or
fiadds
jae
mov
add
inc
jle
mull
jl
mov
cld
call
push
mov
sub
std
imul
pop
or
xlat
movsb
cmpsl
pop
push
mov
ljmp
jge
in
mov
das
shl
insb
ret
xchg
mov
test
out
or
daa
mov
jnp
dec
adc
cmpsb
xor
movl
stc
dec
test
fwait
xchg
mov
addr16
pop
outsb
jo
lea
or
xchg
dec
insl
test
jno
mov
fidivs
mov
xchg
lds
sub
ljmp
std
arpl
xlat
mov
mov
inc
pop
lahf
mov
ret
cmpsl
icebp
lea
sbb
loop
iret
inc
inc
push
mulb
icebp
mov
mov
data16
adc
inc
ror
dec
setno
mov
push
shl
adc
mov
movsb
dec
mov
int
pop
js
sbb
scas
or
hlt
jl
dec
or
nop
int3
pop
mov
ja
aas
push
push
sbbb
lea
call
inc
mov
pop
shlb
push
rclb
jp
test
adc
insl
fadd
data16
sub
adc
jp
ret
mov
ficomps
orb
jge
dec
xorb
loopne
int3
test
pop
xlat
inc
sarl
cli
push
insl
mov
stos
in
pop
mov
movsl
cwtl
jle
gs
jle
jle
lea
and
mov
rorl
scas
xor
sub
jmp
push
mov
mov
hlt
fwait
mov
add
test
in
loopne
in
xchg
leave
pop
out
imul
cmp
stc
inc
ss
push
loop
ret
jl
lret
push
and
mov
scas
addr16
fwait
inc
dec
out
or
push
pop
inc
arpl
lret
jl
lahf
test
lcall
imul
aad
jbe
stos
xlat
ja
push
mov
mov
in
out
pop
sbb
pusha
into
inc
call
and
xlat
and
mov
dec
ds
xlat
fdivrl
and
mov
shr
dec
repnz
nop
pop
and
push
inc
scas
cli
pop
in
jmp
imul
push
cmp
push
pop
cld
in
xor
push
in
fildl
jge
loope
clc
and
add
mov
es
xor
pop
mov
push
sub
jg
push
iret
xchg
fldl
lods
push
pop
das
pop
roll
packuswb
jns
xchg
icebp
and
sbb
pop
subl
insl
inc
je
mov
or
daa
loopne
jnp
sahf
dec
sub
mov
add
popa
xor
aas
test
neg
or
push
cmp
mov
sbb
aas
pushf
xor
dec
cs
loop
in
pusha
jbe
sub
clc
fwait
inc
mov
lcall
sub
ficompl
add
mov
pop
repnz
pop
stos
bound
fwait
cmp
fnstsw
rclb
mov
cltd
pushf
movsl
loop
mov
lret
insl
mov
xor
ret
push
pop
pop
sbb
repnz
addr16
adc
adc
clc
push
gs
insl
pop
push
push
xchg
xchg
in
adc
leave
sti
lret
test
pop
repnz
add
imul
in
or
fnstsw
aam
push
or
jmp
stos
or
pusha
mov
and
push
pop
push
inc
push
xchg
mov
dec
mov
stos
ljmp
stc
out
fimull
add
int3
cmp
clc
sub
fcoml
cwtl
push
mov
enter
ja
je
jl
and
movsb
xchg
pop
cmc
pop
sarb
xor
div
lock
cmpsl
xlat
in
dec
ja
cmp
je
mov
ror
add
shlb
cmpsl
adc
das
shlb
cli
or
in
or
cmp
push
push
mov
cmp
push
jmp
ret
sbb
cmp
mov
aaa
jmp
cmpsb
xchg
push
jae
push
push
inc
xor
js
addr16
push
push
or
push
inc
pop
decb
and
cs
sub
dec
mov
sbbl
cld
and
cli
and
out
mov
pop
scas
in
adc
call
mov
stc
adc
mov
or
insl
inc
adcb
or
ds
arpl
or
pop
sbb
aad
stos
add
ja
sbb
incl
add
test
inc
jo
pop
fisubl
inc
sub
and
pop
in
aas
in
dec
arpl
mov
xor
mov
pop
inc
hlt
cmpsb
into
pop
jae
and
cltd
mov
orl
adc
dec
cmp
mov
shrl
jg
xchg
fs
cltd
xor
sub
cmc
xor
jl
pushf
imull
ljmp
ja
lock
cmc
movb
incb
aaa
or
sbb
jbe
stos
cmp
mov
jge
icebp
push
inc
lock
fwait
loope
add
pushf
call
rolb
xor
in
aaa
fnstsw
adc
jno
mov
sbb
dec
and
jne
mov
cmp
pop
lret
int
stos
lock
xor
test
xchg
mov
xlat
mov
dec
xchg
pop
ja
xchg
mov
imul
shr
pop
sbb
mov
xor
jp
mov
push
movsl
mov
lret
clc
pop
push
add
sub
sahf
lds
add
add
add
fcompl
in
push
fcompp
adc
xor
orl
stc
dec
cmc
fldl2t
jnp
sti
cmp
decb
pop
je
mov
mov
cmp
fsts
adc
sbb
and
cs
pop
out
enter
cmpsl
clc
shll
sbb
ficoml
test
rclb
dec
ja
inc
nop
jle
cli
cmp
inc
cltd
jge
mov
jge
jecxz
jmp
fsub
push
lahf
in
mov
and
xchg
dec
pop
push
sbb
and
fwait
cs
cmp
repz
mov
sbb
xchg
fadd
and
decb
ss
pop
push
cmp
ret
inc
lret
aam
inc
push
je
mov
pop
pushf
sub
insl
mov
add
lret
push
out
neg
shll
pushf
ret
scas
sbb
xchg
mov
out
dec
pop
cmp
hlt
sub
pop
mov
in
push
lcall
xchg
repnz
jae
sbb
sti
pop
mov
xchg
mov
out
and
ret
push
mov
fsqrt
outsl
gs
out
popa
test
stos
xchg
xchg
xchg
pop
setle
fisubrs
rcll
shlb
mov
ja
sbb
roll
xor
xorb
mov
jecxz
fimull
cmpsb
outsb
and
mov
mov
repnz
xchg
fistpl
lcall
je
stos
mov
aad
dec
mov
jb
test
or
arpl
cli
pop
xor
outsl
mov
mov
xor
loopne,pn
sbb
out
jecxz
jb
push
sbb
popa
push
imul
sub
loope
fstpt
adc
repnz
cmpsl
mov
jo
pop
xor
and
aaa
mov
stos
rep
jg
scas
jnp
push
and
mov
stos
lcall
adc
mov
hlt
ljmp
loop
mov
movsl
mov
and
shll
jb
and
les
add
pop
cli
dec
daa
arpl
call
icebp
push
xlat
js
popa
push
cld
adc
adc
push
mov
lea
nop
cmp
jmp
and
ljmp
and
lahf
cmp
pop
sub
xor
test
and
aas
mov
sahf
lods
xchg
cmpsl
push
xchg
out
aad
movsb
mov
imul
aas
mov
dec
push
fwait
push
aam
dec
mov
cltd
jno
addr16
jmp
xchg
clc
enter
mov
rorb
sub
sub
cmpl
pop
dec
out
imul
mov
mov
sbb
aaa
jmp
cmp
cmpsl
stos
js
test
ja
fldl
jecxz
fidivrl
jnp
adc
fsubrl
fnsave
filds
fiaddl
dec
sti
in
in
shlb
and
flds
notb
cs
lock
adc
ret
mov
gs
repnz
das
dec
inc
xor
cmp
mov
fs
out
shr
push
insl
jmp
xor
mov
mov
movsl
gs
pop
sub
jg
rcl
mov
cmp
cmp
or
lods
and
nop
and
jb
sbb
pop
outsb
or
lret
scas
in
jp
fs
in
mov
clc
dec
jo
inc
pop
mov
test
sbb
xor
jne
dec
sub
xchg
cmp
jo
aas
xchg
fstpl
push
mov
mov
call
pop
sub
imul
jmp
xchg
fidivl
add
mov
add
out
icebp
das
mov
sbb
xor
dec
pop
adc
mov
sbb
aam
sbb
adc
in
imul
jmp
lcall
outsb
into
fwait
push
in
adc
mov
or
pop
mov
int3
shr
sbb
repnz
es
mov
aam
lahf
test
jg
mov
add
sbb
rcrl
inc
jns
xchg
fisubs
xlat
pop
xchg
mov
out
divb
movl
dec
mov
orl
lcall
lock
nop
jnp
fwait
adc
loopne
sbb
xchg
cltd
and
and
cli
stos
in
adc
jecxz
ficomps
or
outsl
inc
cmp
push
mov
mov
push
xchg
inc
pop
cmpl
ljmp
das
fistpl
cli
test
cld
mov
jo
rcrb
pop
outsb
pop
push
and
mov
sbb
xor
inc
mov
gs
mov
pushf
fmull
arpl
cld
cmp
mov
mov
insl
sub
mov
ljmp
scas
sub
mov
sbbl
sbb
out
ljmp
xor
aam
notl
pop
xor
cmp
jnp
dec
cmp
out
mov
xor
rorl
pushf
inc
sub
xor
xor
mov
mov
pop
adc
fcomps
push
mov
xor
ret
mov
push
mov
xlat
sub
cmp
movb
dec
in
arpl
ret
dec
ret
xor
lods
inc
mov
dec
cmp
jnp
pushf
adc
out
mov
aad
jb
leave
push
sti
in
jnp
outsl
nop
dec
jg
sub
scas
push
push
sbb
xor
fdivrl
incb
lds
dec
mov
add
pop
es
mov
es
arpl
pop
jbe
sbb
or
iret
iret
lods
lock
or
xor
dec
pop
lahf
mov
in
sbb
pusha
add
sbb
or
pop
icebp
insl
sbb
push
xchg
out
xchg
and
mov
sbb
push
insl
bound
cmp
ss
shll
out
cmp
jb
ds
insl
jns
adc
push
push
or
movsb
repnz
and
xchg
sub
mov
lock
and
iret
add
push
aaa
jae
dec
cmp
xor
jecxz
push
out
lods
out
add
mul
or
mov
lret
cmpsb
fstps
jp
repnz
lods
mov
jae
test
xorl
out
mov
jp
fwait
sbb
fwait
cli
dec
push
or
addb
jmp
mov
cs
lcall
adc
loope
xor
shrb
and
mov
dec
sbb
or
add
aam
mov
mov
roll
das
fidivl
in
or
movsb
push
jns
add
addr16
cmc
sbb
ffree
jb
adc
mov
push
test
out
pop
jge
push
ret
inc
jmp
add
out
lock
and
in
sub
xchg
loopne
xor
popf
and
imul
add
mov
and
fstpl
inc
mov
dec
scas
sbb
pop
lea
pop
ret
outsb
outsl
es
xlat
cmp
fs
stos
push
xchg
xchg
gs
or
push
outsl
imul
push
sbb
lcall
adc
repnz
test
shrb
ficomps
popa
jecxz
inc
and
std
clc
stc
cmpsb
xor
mov
sbb
adc
push
xor
push
pop
es
adc
push
out
out
cmp
mov
and
jnp
fadds
stos
jle
enter
or
popf
jmp
jnp
adc
xchg
jns
aad
outsb
cmpsl
or
dec
aad
push
fwait
imul
sbb
fisttps
movsb
mov
lods
xor
loope
aam
jg
xor
xor
pusha
pop
mov
inc
xor
rolb
xchg
mov
pop
fmull
mov
mov
dec
or
dec
nop
iret
cwtl
push
cwtl
mov
test
and
push
ret
xchg
jl
popf
test
divb
cmc
dec
outsl
dec
push
stos
fucomp
jle
cmc
or
roll
lcall
or
fwait
mov
cs
cmp
jne
cltd
or
dec
or
mov
rorb
fadds
mov
cld
pop
into
aaa
in
adc
sbbl
cmp
dec
pop
sti
add
out
sbb
adc
sub
sbb
stos
rcl
ljmp
inc
pop
pop
push
xor
test
insb
lret
or
add
cltd
sahf
outsl
popf
mov
adc
cmp
es
sbb
push
adcl
jmp
cmp
pop
pop
sahf
loopne
mov
mov
add
mov
fucom
pop
xchg
enter
jle
arpl
sarb
pop
sub
scas
movl
data16
or
and
jno
jmp
je
movsl
adc
jbe
dec
andl
negl
leave
std
aas
and
testl
lret
push
stos
mov
int3
jno
aas
div
sub
inc
sahf
in
std
jo
fsubrl
cmpsl
lea
jne
cli
add
xor
popa
mov
fdivrl
sbb
sub
push
cmpsl
aam
mov
ja
inc
jl
iret
loope
js
mov
mov
js
fwait
or
pop
es
test
popfw
js
adc
cmpsl
std
arpl
and
sahf
call
mov
jge
ljmp
shlb
jnp,pn
outsl
add
les
mov
popf
es
fcomps
inc
jl
mov
aad
loop
and
cli
lea
xlat
or
mov
inc
jecxz
lahf
fdivrs
sbb
cli
cmpsb
dec
xchg
sbb
sbb
dec
sub
dec
push
or
lea
or
aad
xchg
es
int3
loope
add
mov
pop
mov
jle
cmp
mov
repnz
cmp
rep
cltd
fstl
push
mov
ja
stos
pop
mov
stc
clc
int
stos
in
pusha
das
fldenv
rcr
mov
jmp
adc
sub
aas
repz
loopne
ficomps
int3
shl
mov
lcall
push
jb
out
pusha
sbb
or
and
jno
sbbl
lret
jo
stos
cmpsb
inc
push
dec
mov
jmp
test
lahf
adc
sub
push
test
aaa
jb
mov
pop
mov
add
out
fimuls
shll
enter
xor
cmp
daa
idivb
pop
ret
out
imul
flds
and
jmp
sbb
inc
inc
sti
cmovle
cmpsl
aaa
mov
and
sbb
std
jbe
push
pop
sub
aad
cmp
fisttpll
cmpsb
inc
mov
adc
adc
adc
xchg
mov
outsl
mov
mov
and
loope
mov
inc
aaa
mov
mov
push
xchg
ljmp
cmp
fwait
sti
adc
sbb
xor
mov
xrelease
or
push
push
ret
sahf
rorb
adc
jge
hlt
movsl
jno
xchg
fstpl
insl
mov
sbb
sti
pop
jns
pop
testb
push
mov
in
adc
in
mov
pop
push
xor
xor
outsl
push
cmp
dec
insb
scas
push
sbb
push
les
in
jbe
out
lret
cmp
arpl
test
pop
es
cmp
scas
jmp
lret
xchg
lcall
sarb
mov
sub
out
in
imul
js
jecxz
outsl
out
jecxz
shlb
mov
outsb
f2xm1
jmp
sbb
ret
movsl
jb
ffreep
fisttps
lcall
dec
mov
xchg
lods
xor
cwtl
mov
orl
cmp
sub
bound
xlat
lea
push
mov
push
sbb
add
enter
loop
and
popa
inc
jp
jno
push
clc
aad
push
jecxz
jge
das
push
xchg
inc
mov
lods
test
mov
test
adc
lock
jle
enter
lret
ja
leave
and
push
jno
mov
popa
add
push
jne
dec
cwtl
cld
cmp
inc
sbb
aad
hlt
dec
in
xchg
repnz
imul
pop
dec
inc
lods
sbb
xchg
hlt
fcmovne
and
sub
sbb
jge
addb
clc
adc
mov
xlat
pop
dec
cmpsl
jle
aam
sbb
pop
loope
jl
or
lea
adc
sarl
cmpb
mov
das
fcmove
scas
push
stc
adc
shll
cmp
push
push
stos
or
cmp
out
xlat
sub
xor
ret
out
pop
xchg
movsb
out
xchg
add
fsubr
test
insb
fsubl
push
imul
movsb
clc
gs
sbb
fisttpll
sub
jle
jns
mov
lahf
xchg
inc
mov
mov
ja
dec
inc
pop
mov
jo
lods
xor
cmp
dec
add
jecxz
or
test
aam
push
testl
loopne,pt
mov
gs
jo
mov
les
loop
xor
sbbb
scas
xor
mov
xchg
shll
push
in
test
sbb
fsubp
out
rol
xchg
jl
add
cmp
rorl
push
cli
bound
sbb
sbb
push
adc
aam
scas
in
pusha
mov
inc
arpl
push
adc
jne
add
sub
in
push
fmulp
data16
jns
push
cmc
cmovl
sub
das
movsb
and
repnz
orl
xor
push
aad
out
jecxz
setno
fiaddl
fdivs
arpl
movsl
imul
inc
popa
cmp
pop
mov
pop
test
out
outsb
insb
jmp
mov
push
aad
movsb
out
jns
mov
dec
loope
pop
loopne
adc
lea
pop
test
sbb
aas
icebp
and
test
pop
fnstsw
add
add
jecxz
mov
cld
mov
pop
xchg
mov
adc
subb
or
dec
add
mov
add
fiadds
cmpsl
movsb
inc
stos
fisubrl
dec
inc
lcall
aad
xor
or
repnz
std
cmc
cmp
mov
jno
sub
mov
mov
test
scas
xor
push
jl
jb
je
aam
pop
push
dec
xchg
loop
sbb
imul
cmp
add
fistl
inc
or
adc
loope
mov
xchg
and
inc
xor
or
in
stos
into
lods
inc
fnstsw
push
and
add
jne
or
and
fcmovne
lret
xchg
test
insl
jp
les
add
leave
stos
xchg
jnp
dec
int3
cs
jno
shlb
in
add
fiaddl
pop
xor
inc
pop
out
test
sub
in
push
add
sub
mov
repnz
loopne
cld
mov
inc
adc
or
stos
je
iret
jle
sub
loope
cli
ljmp
jns
mov
xchg
push
imul
pop
loope
mov
fnstsw
xor
std
push
popa
mov
pop
mov
pop
imul
lret
popw
data16
clc
outsb
arpl
popa
mov
jnp
mov
shrl
adc
adc
and
clc
js
jp
or
lret
jmp
es
inc
cmc
addb
fimuls
mov
gs
iret
xchg
aam
push
insb
add
je
icebp
movsl
fldlg2
int
and
test
insl
insl
add
ja
add
int3
dec
pop
adc
xchg
stc
popl
jne
push
mov
push
pushf
lcall
out
lret
addr16
popf
jmp
lahf
lret
jg
sbb
jno
data16
xor
push
xchg
and
mov
movsb
add
xlat
inc
inc
outsl
inc
nop
fsubr
mov
inc
mov
mov
pop
dec
fwait
and
notb
cmp
js
fnstsw
xchg
test
sti
push
lea
push
dec
ss
lret
mov
or
ret
jle
mov
sub
ss
frstor
xor
ja
xor
sbb
popf
data16
pop
int3
scas
lahf
jle
les
adc
gs
pop
cmp
hlt
xor
adc
sub
andb
add
inc
and
cwtl
imul
adc
out
adc
mov
dec
fcoml
aas
inc
xor
pop
add
and
daa
cmpsb
and
outsl
add
and
data16
mov
pop
jb
jo
and
mov
xchg
imul
mov
mov
push
and
stos
cmpsl
and
inc
push
or
repnz
les
push
call
scas
rcrb
scas
push
aaa
mov
stos
imul
cltd
inc
mov
cmp
aam
gs
fs
lock
pop
xchg
sbb
cwtl
push
and
jecxz
cmp
lret
jl
push
mov
stos
mov
jmp
ss
or
ret
sti
fisubl
add
xchg
xlat
pusha
lods
in
lcall
mov
mov
in
jns
mov
jle
lcall
add
jge
mov
sbb
add
xchg
sbb
setle
iret
adc
push
jp
repnz
cld
lods
lea
mov
into
data16
pop
and
jns
clc
dec
push
ljmp
pop
pop
xchg
mov
xor
add
jbe
jmp
cmpsl
mov
mov
imul
scas
adc
test
imul
pop
scas
sti
jp
fsubr
cmc
scas
mov
sub
mov
sub
dec
sbb
inc
or
pop
adc
sbb
repz
mov
and
les
jo
mov
fcoml
cltd
outsl
pushf
jne
fcmovbe
outsl
insb
inc
lock
sbb
in
add
popa
dec
jo
or
and
inc
pop
mov
and
int
xchg
xor
dec
stos
out
inc
in
add
ss
jmp
and
flds
xchg
jg
movsl
cs
xchg
xchg
push
outsb
fcom
sub
add
push
adc
dec
mov
mov
and
in
adc
mov
xor
cld
jns
lahf
fs
jae
cltd
and
push
fisubl
je
cmc
inc
cmp
push
xor
in
aaa
ss
adc
addr16
fistpll
fadd
icebp
cltd
jmp
jmp
out
bound
mov
mov
jno,pt
dec
adc
cld
mov
cmp
icebp
test
pop
adc
xor
cmp
decb
and
pop
loop
push
mov
movsb
mov
dec
test
sub
and
inc
lahf
mov
rcl
popa
or
gs
stos
pop
inc
rcrl
sub
mov
pop
lock
leave
inc
cs
pop
inc
mov
jecxz
sub
sub
sub
pushf
sti
out
or
sub
jae
cmp
push
adc
inc
repz
sbb
xchg
xchg
push
mov
stos
loop
add
ret
insl
popa
mov
addb
xchg
icebp
and
adc
inc
pushf
inc
xor
es
mov
dec
sub
test
inc
pop
add
ficomps
jmp
mov
mov
out
popf
adc
std
sbb
jge
mov
or
rcpps
jo
mov
xor
adc
xor
jg
fadds
or
sub
sbb
aad
and
pushf
mov
sub
cmp
imul
xchg
mov
jmp
fcomps
fnsaves
mov
out
out
add
mov
or
or
test
inc
xchg
jmp
in
lahf
inc
cmpsl
push
sbb
jmp
aaa
fdiv
xchg
scas
jmp
push
jge
inc
jg
xchg
sbb
insl
iret
push
inc
lea
test
mov
cwtl
add
js
xor
mov
mov
sub
in
jb
test
test
sub
push
in
movsl
xchg
add
hlt
pop
xor
jge
inc
dec
shrb
aas
or
or
cltd
adc
mov
adc
bound
aaa
test
fnstenv
cmp
aam
or
data16
rolb
dec
adc
mov
xchg
and
dec
cli
popf
jl
aad
jb
mov
scas
out
mov
das
jl
sub
daa
jp
xor
add
add
ret
aas
repnz
outsb
insl
cmpb
addr16
jns
cmp
inc
adc
mov
lock
cmp
dec
cld
jle
push
mov
cmp
sarb
xor
jno
repz
je
push
rolb
outsl
and
fwait
scas
notl
dec
xchg
pop
subl
stc
negb
pushf
cltd
mov
ret
jo
loopne
pop
stc
push
rclb
xchg
mov
pop
test
ret
sub
cli
dec
jo
xor
xor
test
pop
mov
fldl
loop
dec
jns
jecxz
xor
cmp
iret
mov
mov
js
fnstenv
jl
jb
test
or
xchg
lcall
sub
sahf
test
or
daa
cld
loopne
jp
dec
icebp
loop
xor
int
push
and
or
cld
cwtl
push
fcoms
bound
ret
es
pusha
data16
jp
movsb
dec
lahf
jb
sub
jl
adc
jae
xchg
dec
or
fisubrs
dec
sbb
bts
xchg
mov
lods
je
sbb
inc
cmp
pushf
dec
int
cmc
inc
popf
in
add
cli
loopne
mov
inc
push
xchg
aas
pop
and
push
out
xchg
cmc
out
mov
push
add
lds
xchg
sbb
jo
push
sbb
loopne
subb
push
mov
fchs
ret
mov
js
mov
negb
jo
jb
lock
xchg
mov
pop
mov
dec
in
pop
mov
lods
mov
daa
fs
xor
push
xchg
ror
fiaddl
inc
push
idiv
sub
inc
incb
fs
jns
push
andl
repnz
cli
lcall
pop
jo
push
sub
cli
cmp
adc
negl
int
dec
fcoml
je
cltd
sub
int3
ret
mov
add
and
arpl
popf
jge
mulb
lret
dec
xor
lret
or
xor
subl
dec
test
faddp
xchg
leave
or
xor
pop
cmp
xchg
jge
mov
dec
jno
ficomps
pop
addr16
xor
je
imul
add
add
cmp
lock
dec
mov
mov
or
adc
dec
mov
lahf
pop
loope
xlat
data16
cmp
fldcw
and
cmp
pop
dec
or
cwtl
rcll
xchg
cli
ret
fisttpll
mul
pop
mov
inc
fadd
int3
jae
push
lret
cld
cmc
shll
repnz
or
mov
fisubrl
xchg
mov
and
sbb
mov
jl
lret
mov
and
in
push
adc
pop
mov
pop
push
repz
aad
sbb
dec
add
xor
aas
dec
out
ret
jp
dec
js
lods
inc
mov
xchg
es
divb
xor
loopne
mov
inc
or
mov
jg
sub
and
lods
jo
jecxz
xchg
xor
arpl
call
pop
jg
loope
xchg
pop
jge
xchg
in
push
sbb
adc
loopne
push
inc
adc
adc
scas
imul
mov
pop
mov
stos
xor
and
nop
adc
repz
cs
jl
scas
xor
fdivr
lea
xor
cmp
orl
lret
dec
lcall
push
inc
sbb
xor
mov
sti
into
xchg
int3
inc
mov
js
adc
sti
dec
add
push
scas
pop
and
pop
das
cwtl
rolb
mov
outsl
shlb
fcompl
add
inc
ja
mov
and
jno
movsl
scas
fadd
sbb
cmp
sub
sub
stc
je
mov
mov
outsl
lods
lods
daa
mov
outsl
std
popf
pop
jl
or
aas
nop
lret
xor
lds
out
stc
mov
or
fldenv
lods
inc
xchg
or
pop
mov
push
jnp
pusha
sahf
loope
jl
or
idivl
insb
sub
into
and
test
lret
dec
cmp
in
push
mov
jge
pop
js
jge
loope
in
inc
xchg
mov
jb
cs
cvtdq2ps
pop
mov
pop
bound
ficompl
rorl
push
sub
sbb
xchg
adc
add
mov
add
and
cmpsl
push
mov
mov
pop
jb
mov
loopne
xchg
adc
inc
int3
call
mov
hlt
fdivrs
pop
fstpl
insb
mov
rorb
clc
mov
aad
xchg
in
nop
cmpsl
sbb
aam
std
popa
xor
lcall
mov
call
insl
jle
jne
ja
test
sbb
and
xchg
cwtl
add
xchg
fcoml
xchg
int3
orb
test
js
lods
inc
xor
jae
in
aam
and
adc
xchg
or
adc
or
ss
bound
mov
or
mov
lock
mov
xor
pop
adc
push
push
pop
das
adcb
dec
or
scas
js
sub
addl
insl
or
pop
fidivrl
adc
push
xchg
mov
ret
inc
test
sti
insb
shrb
dec
inc
ret
mov
mov
stos
stos
mov
mov
insb
lea
rolb
push
lock
subb
outsl
and
sub
jg
push
inc
adc
push
mov
dec
dec
stos
ljmp
in
or
xor
pop
xor
lods
adc
movsb
cltd
loopne
scas
andb
test
mov
ljmp
pop
rorb
aas
aad
adc
call
mov
push
iret
and
pop
sbb
xlat
out
lcall
out
sti
jae
cmp
das
repnz
adc
xor
in
loopne
cmp
daa
mov
movsl
and
add
adc
loop
cmp
sbbl
cld
aas
lcall
dec
push
mov
das
add
push
xchg
lea
dec
or
xor
pop
sbb
popa
ss
fstpl
repz
popa
icebp
out
add
daa
xor
or
repz
daa
stos
xor
jl
pop
push
ret
sub
std
mov
mov
push
cmpsb
sbb
nop
in
xchg
jecxz
mov
xor
cs
mov
pusha
test
stos
mov
lods
or
mov
cmc
dec
mov
mov
xor
jnp
out
aaa
test
dec
mov
xchg
push
cmp
iret
in
lret
push
cmp
cmp
push
pop
cmp
pop
lcall
push
in
push
cmp
pop
aam
dec
push
sub
ss
daa
sbb
mov
pop
add
bound
pop
mov
cmp
std
loopne
cmc
in
dec
fwait
xor
mov
lret
sti
pop
std
les
xchg
mov
xchg
ljmp
jo
dec
sbb
bound
pop
arpl
popf
pop
mov
xchg
inc
mov
adc
sbb
sar
cmp
popf
jge
or
cmp
das
loopne
call
pop
repnz
fsubs
or
faddl
mov
call
inc
inc
scas
adc
push
mov
pop
or
clc
jne
cmc
nop
popa
int3
push
hlt
mov
sub
fcomp
jmp
sub
icebp
fstl
js
mov
into
cmpsl
push
push
mov
outsb
jbe
mov
xor
sub
mov
push
cmp
mov
lods
or
out
shrl
pop
movsl
pop
xchg
push
cmpsl
mov
dec
and
mov
xor
push
inc
je
js
sbb
stc
push
dec
mov
dec
and
xor
xlat
pop
pop
pop
ret
test
lret
push
out
xchg
adc
imul
mov
cli
push
mov
jo
rcl
cmpsl
and
rclb
movsb
sub
fs
or
mov
adc
mov
jns
outsl
mov
insb
and
das
je
mov
dec
pop
in
ss
xchg
inc
adc
mov
lcall
adc
loope
js
decb
daa
outsb
shll
mov
push
lods
lods
ljmp
mov
cld
and
mov
mov
xchg
inc
push
jns
adc
aas
push
outsl
fwait
subb
pop
jne
and
sti
jg
xchg
xchg
leave
std
mov
pop
sub
leave
cmpsl
mov
mov
push
rcrb
mov
cmc
roll
push
dec
outsl
cmpsb
test
jg
mov
sub
test
jne
adc
and
test
jge
ret
jmp
loopne
inc
and
pop
jl
je
fstpt
pop
pop
dec
lret
fisubs
mov
pop
adc
dec
mov
and
ret
jmp
in
push
hlt
sub
jnp
lret
aam
mov
mov
in
or
sub
mov
dec
lret
cld
nop
xor
xchg
xchg
push
fwait
cmpsl
icebp
ljmp
mov
insl
ljmp
mov
out
out
test
sub
icebp
mov
ret
mov
lahf
in
lods
jbe
pop
in
int3
pusha
cmpb
iret
and
xchg
jmp
push
cld
ret
mov
jl
out
aam
movsl
loop
loopne
lds
add
ffreep
fldz
std
sti
shlb
icebp
xchg
pop
cmp
lahf
sub
shr
inc
pop
ljmp
sbb
xchg
push
mov
lret
and
lret
xchg
jae
cmp
cwtl
push
out
nop
nop
push
jno
mov
mov
lds
cli
sti
test
repnz
sti
imull
jne
outsl
cmpsb
or
adc
sbb
les
jo
fnstenv
inc
shlb
push
xor
cmp
mov
sbb
ja
lcall
fldl
sbb
pop
call
sbb
loop
mov
mov
scas
jmp
shrl
shll
and
popl
dec
xchg
cmp
mov
stos
mov
or
jge
mulb
and
pop
mov
mov
xchg
add
mov
insl
cmpsl
push
or
rolb
jle
stc
inc
push
pop
jp
inc
popf
hlt
cs
mov
pop
in
repz
push
inc
pushf
adc
in
sub
push
xor
movsb
or
dec
and
stos
cli
or
mov
mov
les
cld
xor
xchg
jne
daa
mov
inc
jmp
sbb
nop
dec
loop
and
adc
mov
cmpsl
and
cld
xchg
imul
mov
cld
in
lds
and
les
ds
ljmp
push
push
dec
lahf
fsubrs
inc
push
xchg
imul
sub
adc
mov
dec
or
pop
add
in
js
dec
lock
rcrb
test
sarl
adc
sbb
bnd
sub
mov
mov
cmpsb
push
enter
pop
jp
mov
sbb
mov
movhps
or
ss
mov
jno
cli
fbld
lods
ret
jne
fwait
push
push
pop
or
xor
add
bound
sbb
gs
push
xchg
adc
cmp
sbb
xchg
add
test
loopne
add
aam
xchg
sbb
push
subb
xchg
pop
dec
xchg
daa
stc
pop
and
in
and
leave
xor
scas
lock
add
sub
inc
insl
cmpsl
add
nop
add
cmp
les
icebp
es
push
jmp
out
push
mov
cld
daa
push
jmp
pop
data16
jmp
popa
jge
push
data16
push
push
fucomip
nop
in
xchg
push
dec
push
add
sub
jge
nop
ljmp
dec
out
scas
mov
dec
mov
xchg
imul
sub
sbb
jmp
test
arpl
jae
pop
aaa
testl
mov
daa
int3
inc
mov
mov
dec
call
hlt
xchg
repz
add
ret
mov
into
push
js
out
inc
jmp
add
push
std
cmp
sub
aaa
jmp
imul
aad
ja
inc
xchg
pop
cmc
add
jge
orb
ja
call
pop
pop
jb
mov
cmpsl
lret
xchg
pop
mov
les
and
movsl
fst
bound
imul
cld
addr16
loope
stos
add
sbb
or
aam
imulb
mov
int
push
enter
movsb
dec
xchg
lock
and
out
insb
adc
imul
hlt
jp
cltd
dec
es
jl
aad
dec
in
dec
inc
and
fs
cld
icebp
data16
dec
jbe
add
shrl
sub
in
cld
sub
sahf
or
adc
xlat
mov
mov
outsb
addr16
or
loop
sub
adc
test
pop
sbb
push
xchg
cmp
and
jmp
pop
xchg
hlt
inc
push
push
dec
jae
cmpsl
jl
pusha
ret
pop
xor
mov
sbb
ja
fadds
idivb
fsubp
xchg
mov
sub
imul
out
jmp
cs
mov
hlt
js
and
fidivs
push
dec
fwait
or
clc
stos
mov
lods
pusha
stc
sub
pop
es
xchg
xchg
cmc
xor
insl
push
imul
movsl
xor
inc
sbb
add
aad
loopne
mov
call
nop
rorb
mov
orl
inc
push
enter
adc
add
push
jo
lea
cmc
xchg
popa
dec
xor
mov
cmp
jp
insb
push
mov
sbb
pop
stos
lcall
bt
fcmovnu
push
repz
pop
or
sahf
xor
das
popa
sub
adc
in
scas
test
hlt
repnz
sbb
lea
cmp
cmp
mov
add
fisubs
cmpsl
aas
movsl
fsubr
mov
iret
ja
sbb
pop
mov
jb
mov
xlat
cmp
popf
pop
cmpsb
ja
sbb
in
inc
out
popa
mov
xor
sbb
mov
je
rcrl
jns
mov
repnz
imul
repnz
xchg
sub
inc
scas
mov
xor
jge
xchg
add
mov
shr
mov
cld
sub
iret
mov
mov
push
lahf
mov
mov
mov
ret
pop
push
pop
scas
push
int3
mov
out
jo
inc
movsb
push
cmp
call
mov
rcrb
push
pop
nop
sub
lea
and
push
adc
sub
inc
cld
fildll
xchg
add
arpl
xchg
lods
xchg
cmp
pop
or
adcl
out
dec
add
dec
ret
and
and
inc
loopne
loope
movsl
add
rorb
inc
xchg
push
and
data16
hlt
sahf
iret
mov
mov
adc
push
test
sbb
gs
mov
lret
pop
pop
push
jb
movsb
and
cmc
xchg
inc
pop
lret
push
movsl
mov
cmpsl
add
icebp
inc
ss
sub
ret
jne
inc
pop
cli
lret
xor
cs
mov
lock
add
push
adc
inc
fs
sub
mov
cmp
aaa
outsb
scas
or
or
mov
xor
cltd
xor
inc
cmp
sbb
pop
mov
jne
cmp
jp
ss
pop
jnp
jno
addl
movsl
lret
cltd
mov
fistpll
inc
mov
or
ss
mov
adc
aad
cmpsl
call
lods
mov
icebp
rcrb
aam
pop
and
sahf
fdivl
call
lods
test
iret
xor
dec
sahf
sub
pop
stos
jne
cmc
mov
mov
jbe
and
cmpsl
divb
fwait
add
or
test
xchg
mov
dec
lods
int
test
xchg
sub
dec
add
push
stos
jge
xchg
mov
or
inc
mov
ret
inc
dec
lods
gs
push
pop
xor
mov
cmp
mov
imul
lcall
mov
loope
pop
mov
add
jne
mov
mov
lock
ror
cs
xor
jge
mov
in
jge
stos
inc
or
aad
or
cmp
pop
imul
xchg
mov
add
lcall
xor
jg
arpl
enter
or
xchg
std
sahf
pop
mov
into
pop
cli
cli
insl
aas
orb
aad
mov
sbb
cmpl
call
stos
sub
cmp
jecxz
xchg
pushf
pop
outsw
pop
ret
pop
mov
test
dec
mov
mov
push
mov
enter
mov
adc
roll
in
push
dec
repz
shlb
cmp
cmpsl
in
push
rclb
jns
fsubr
cmpsl
in
add
sbb
mov
xchg
xchg
mov
fbld
mov
pop
insb
sub
out
fnstcw
cmp
fwait
in
cmp
jle,pn
sbb
adc
or
mov
add
fwait
test
sahf
push
fstpt
add
nop
cli
cmc
enter
decl
jecxz
test
shrl
inc
and
sbb
outsl
sar
fstl
filds
jb
in
popa
mov
sbbb
push
xchg
enter
rorb
stos
adc
jne
pop
sti
sbb
sbb
repz
out
data16
pushf
and
inc
or
push
adc
addr16
pop
xchg
xchg
cmp
mov
aad
cld
ja
dec
cmp
xchg
insl
xchg
cwtl
lock
andb
insb
xchg
lcall
dec
in
aaa
js
aad
std
cltd
push
mov
mov
jmp
popf
addr16
les
add
lock
push
fists
inc
jae
adc
sub
rclb
xchg
cwtl
mov
shr
rorb
shrb
das
xchg
out
adc
jno
adc
ret
loope
pop
add
sbb
stos
fisubl
cmp
lcall
sahf
sub
push
cli
sub
cmpsb
jl
sbb
add
or
ficoms
enter
out
pop
out
lahf
xlat
sbb
data16
enter
lods
test
fdivr
lods
loopne
jecxz
jbe
add
cmp
pop
add
adc
or
incb
ret
test
or
testb
in
mov
fsubrs
adc
xor
outsb
in
loop
punpckldq
dec
es
mov
ljmp
adc
pushf
jb
push
lcall
aaa
sub
pusha
ja
sbb
andl
cmpsb
loope
in
cmp
xchg
lret
or
call
and
push
gs
dec
push
push
xor
push
xor
push
test
mov
pop
dec
iret
shr
jns
loopne
fwait
stos
mov
mov
or
cmc
data16
dec
out
jl
aaa
aam
in
fwait
lds
add
inc
dec
fcoml
inc
mov
push
mov
mov
mov
ds
gs
jecxz
into
mov
jbe
jp
test
call
outsl
pop
push
fildll
sub
out
mov
mov
cltd
or
test
orb
popf
push
mov
mov
sahf
push
xchg
xor
les
in
mov
stos
xor
inc
push
data16
xor
cmp
mov
jp
loop
outsl
pop
pop
sub
outsl
fwait
sbb
jp
mul
shrl
mov
js
mov
jg
jmp
aaa
sbb
repz
sbb
das
push
pop
or
mov
out
cmp
shl
push
ds
jns
mov
cmp
add
jge
or
sbb
and
add
dec
in
cmp
inc
adc
in
rcll
fst
les
xlat
test
sbb
scas
aaa
movsl
or
lahf
lods
push
gs
cld
mov
push
or
popa
lahf
inc
ss
add
push
ss
icebp
dec
scas
ucomiss
cmpsb
aam
lret
adc
adc
rolb
call
cld
ljmp
fisubrl
enter
cld
or
rorb
aas
fs
jne
js
data16
or
or
sub
jmp
cmp
xorb
pop
lods
fistps
inc
add
lahf
enter
jge
cmp
jbe
push
loope
sbb
mov
sub
notl
in
cmpsb
pushf
addr16
jb
mov
and
xlat
test
stc
sub
jo
push
pop
jbe
xor
outsb
aam
xor
xchg
inc
mull
adc
arpl
ss
add
dec
pop
out
aad
lds
movsb
rorb
xchg
mov
insb
dec
clc
popa
jmp
xchg
mov
jo
stos
cmc
xor
pop
mov
shl
std
inc
sub
shl
andb
jae
xchg
jle
fists
inc
push
mov
popa
mov
adc
pop
jp
fwait
lods
mov
in
inc
bndldx
adcl
adc
mov
inc
shrl
shl
aam
scas
mov
inc
add
mov
icebp
lret
int
int3
loopne
and
mov
push
add
sub
daa
xchg
lods
jnp
cli
mov
cmpsl
pop
lods
mov
push
sub
dec
pop
imul
aaa
dec
sbb
divb
test
jmp
dec
push
mov
and
orb
scas
aad
insl
pop
lods
jne
sub
insl
mov
add
mov
fldt
js
pop
pusha
push
adc
aad
and
inc
emms
incl
call
add
das
insb
into
popa
and
mov
add
or
aad
ficompl
pop
movsb
aaa
inc
movsl
sarl
insl
inc
inc
loope
pop
cs
xchg
adc
inc
fwait
mov
pop
mov
sbb
insl
xchg
mov
sub
pop
jge
ljmp
leave
sahf
dec
push
jl
nop
addr16
test
insb
add
pop
sti
xchg
jle
mov
fnstenv
add
je
or
psadbw
add
xchg
andb
or
adc
ret
rclb
mov
cli
mov
je
add
xchg
cmpsb
or
aas
sbb
imul
test
jns
repnz
into
mov
add
ficomps
repnz
nop
pop
pusha
pop
sbb
orl
add
cli
dec
aad
rcrl
sbb
pushf
push
outsb
fwait
push
and
arpl
sub
daa
xchg
data16
seto
cmpsb
iret
jns
lret
fisttpl
cmp
or
test
mov
popf
stos
mov
pop
mov
movsl
sbb
test
testl
lret
cmp
pop
xchg
call
dec
imull
js
cmpb
jne
xchg
scas
push
and
mov
imul
daa
add
addr16
shlb
push
sub
sub
dec
add
mov
lea
mov
pop
out
fidivrs
or
push
mov
sarb
addb
cmp
xchg
jl
ljmp
leave
aaa
xor
rclb
sub
sub
sbb
in
mov
pop
mov
jp
iret
test
ljmp
fsubrl
dec
dec
adc
sbb
cmp
decb
and
push
mov
fistpll
sbb
push
mov
xchg
int3
dec
mov
outsb
jne
clc
cs
jmp
icebp
sbb
pop
sbb
and
or
cmp
fcoml
aad
call
lahf
daa
insl
nop
ljmp
ja
xor
into
fistps
lcall
and
test
push
imul
loopne
dec
loopne
add
or
popf
and
rorl
mov
ret
mov
cmp
dec
lea
scas
dec
mov
push
lock
pop
dec
push
fsub
add
outsl
sbb
ret
xor
jns
cmp
mov
imul
das
lods
mov
clc
std
cmp
inc
xor
jge
ds
je
xchg
push
outsb
inc
pop
repz
pusha
enter
or
jne
mov
xchg
in
push
cmp
ficompl
shll
out
sbb
jbe
ljmp
mov
pop
cld
xor
fdivp
retw
fisubl
cmpsl
dec
outsl
mov
repz
scas
inc
shl
je
pop
pop
xor
sub
mov
mov
ret
imul
inc
stos
ffree
pop
sbb
sub
std
xchg
mov
xchg
je
pop
aam
daa
pop
add
mov
xchg
movsl
mov
or
nop
adc
std
leave
repnz
movl
sahf
movsb
sub
adc
inc
cmp
stos
nop
mov
xlat
lahf
add
rcr
outsb
pop
test
adcl
and
push
aad
into
add
dec
pop
sbb
xchg
fcomi
int3
sub
mov
xor
test
push
mov
mov
sub
lods
stc
sti
test
in
add
popf
cmp
int3
fwait
or
mov
insb
mov
loop
arpl
xor
divb
iret
inc
pop
push
out
add
add
es
movsb
lods
pop
cmc
out
les
lret
jb
jns
xorb
aaa
popf
notb
push
add
pop
fcoms
jmp
fs
loop
iret
mov
pop
mov
push
jbe
cwtl
xchg
push
stos
and
xlat
loopne
nop
mov
adc
insb
xchg
pop
icebp
push
pop
cmp
add
imul
xchg
push
mov
pop
mov
pushf
push
or
js
gs
fucomp
rcll
push
cmp
xchg
xchg
fldenv
mov
add
cmp
ljmp
xchg
jge
ret
sub
into
fists
mov
push
rcll
negb
bnd
push
pop
roll
mov
rclb
lods
addl
imul
and
je
xchg
int
mov
jp
xchg
sarl
aas
dec
idivb
xchg
mov
mull
out
pusha
cmp
add
mov
in
add
hlt
popl
popa
repz
pusha
xchg
jecxz
dec
sbb
test
or
push
inc
int3
cmc
std
add
inc
data16
nop
mov
dec
jge
and
pushf
subb
sub
and
dec
adcl
daa
ds
stos
pop
fstpt
ds
inc
mov
lret
jmp
inc
jecxz
jns
arpl
aas
std
push
mov
cltd
add
push
or
cmpsl
push
push
imul
pop
push
ret
pop
dec
loop
inc
push
icebp
mov
mov
mov
lcall
mov
test
pop
ds
dec
adc
popf
loope
fildll
and
mov
pop
icebp
jmp
cmp
dec
jb
lods
gs
dec
or
cmpsb
xchg
inc
xchg
aad
faddp
dec
ds
xchg
push
push
int
fsubrl
inc
mov
xchg
or
adc
mov
adc
xchg
dec
and
shr
shrb
sub
scas
mov
xlat
std
insb
fisttpl
push
adc
cltd
push
xchg
ficoms
xorb
lret
icebp
out
inc
cmp
negl
xor
outsb
push
add
jbe
sbb
movsl
pushf
mov
aas
adc
out
bound
adcb
push
sbb
rorl
mov
mov
push
jl
stos
notb
aaa
leave
push
ja
or
cli
call
ficoml
jno
outsl
shll
fidivs
sbb
push
jb
mov
stos
outsb
fimull
mov
push
and
cmp
adc
cld
les
add
push
push
jbe
roll
pop
pushf
dec
lcall
insb
mov
imull
pop
sbb
lock
ret
jo
cld
xchg
push
cmc
into
lock
jg
xchg
int3
push
ffree
js
test
adc
add
shll
add
jns
mull
mov
xchg
inc
sub
ja
in
sbb
pop
pop
mov
hlt
or
lea
rcll
pop
sub
cmp
loope
out
push
fucomp
out
sarl
jle
cmp
leave
setnp
fstl
popa
jg
jbe
loop
adc
cmp
data16
int3
bound
sbb
ficoml
push
rorb
ret
leave
icebp
xor
daa
or
push
mov
jne
out
add
fwait
pop
loope
mov
xor
outsb
dec
pop
mov
cmpsb
sarb
adc
cmp
cmc
pop
mov
in
xchg
or
mov
pop
dec
nop
push
jae
das
mov
or
adc
inc
gs
mov
pop
add
ficomps
lahf
out
repnz
pop
movsl
jg
sbb
xchg
adc
dec
sbb
xchg
pushf
lea
clc
dec
in
das
cmp
inc
in
ja
scas
inc
mov
cmp
xchg
lret
movsb
movsb
xchg
jge
jo
cmp
dec
das
sbb
shll
data16
nop
stos
loopne
in
jp
into
mov
std
dec
and
es
int
test
push
and
int3
xor
push
hlt
dec
xlat
cmp
insb
xor
dec
jb
sbb
scas
into
xor
shlb
pusha
pushf
scas
add
jmp
fwait
cmp
imul
insl
push
push
test
xchg
jns
hlt
inc
daa
sub
sti
sarl
ret
jno
add
aas
in
mov
pop
in
mov
sahf
sti
leave
movzwl
mov
es
jmp
cmc
ljmp
mov
orb
fnstenv
repnz
out
push
inc
sub
mov
jecxz
imul
jl
sbb
nop
or
lock
ljmp
inc
sahf
fimuls
idiv
jmp
mov
in
insl
dec
push
lock
adc
jecxz
daa
mov
jo
sub
mov
mov
pop
and
mov
call
and
sub
in
mov
pop
mov
cmc
mov
jb
ljmp
lods
add
pop
es
dec
arpl
jae
or
dec
pop
or
jne
dec
jge
rcl
jb
sub
loope
adc
scas
dec
ss
loop
cltd
loop
insl
int3
mov
ss
into
dec
rorb
bound
mov
and
daa
xor
and
inc
cmp
fistps
gs
divl
cmc
in
adc
sub
iret
push
mov
mov
imull
mov
cmp
into
jp
loope
push
cld
sub
push
fidivrl
xchg
mov
daa
aam
out
mov
push
push
in
or
es
clc
mov
mov
mov
data16
inc
pop
int
subl
dec
int
rcrb
std
out
add
or
iret
mov
pusha
out
push
jns
js
sbb
xchg
sub
repnz
scas
mov
sbb
aad
dec
cmc
xchg
insb
pop
pushf
mov
and
xor
and
hlt
fisttpl
xchg
test
push
xchg
addr16
das
int
mov
icebp
sub
sub
mov
rcrl
aaa
loopne
mov
adc
xchg
test
hlt
int3
dec
lret
mov
mov
or
mov
enter
test
mov
lcall
hlt
push
cmp
jno
lret
xchg
clc
popf
fxch
dec
mov
pop
testb
sbb
ja
sbb
xlat
xor
out
mov
mov
loope
in
or
mov
xor
xchg
push
sub
cld
or
or
jo
xchg
cmp
test
lock
add
fstps
ss
mov
lods
dec
xlat
jle
and
int
test
popf
push
cltd
xor
aaa
xchg
in
add
adc
out
mov
in
ret
add
push
xchg
call
nop
fs
inc
in
push
hlt
mov
mov
sbb
movsl
mov
push
shrb
rorb
or
sbb
pop
pop
xchg
popa
sbb
dec
xor
cli
pop
or
testb
jle
movsb
imul
and
mov
outsl
xor
sub
cmp
scas
sahf
les
adc
mov
mov
mov
mov
sti
popf
cmp
rclb
and
ret
test
pusha
mov
jns
out
arpl
pop
mov
cmpb
push
inc
lods
push
call
stc
clc
jns
mov
stos
pop
cmp
sub
movsb
mov
jnp
out
flds
out
add
insb
and
push
nop
mov
loop
repnz
das
stos
sub
or
out
sub
mov
pop
cmpsb
jb
mov
outsl
jne
out
sbb
stos
lods
cmp
orl
inc
pop
test
push
mov
fcoml
in
dec
push
std
pop
addr16
pop
ret
lea
pop
outsb
in
xchg
adc
push
push
lea
or
ficompl
push
mov
jge
sbb
movsb
gs
adc
jno
imul
xchg
xchg
sub
jmp
andb
mov
adc
push
push
loop
or
push
insl
js
push
or
xlat
or
loopne
and
inc
mov
cltd
addr16
sbb
test
add
mov
in
jno
cmpsb
mov
lods
xchg
jbe
xor
adc
fsubrl
push
es
push
test
add
repz
jecxz
mov
mov
and
fwait
pop
movsl
mov
mov
jge
pop
push
aad
shll
cmp
shlb
cli
or
popa
inc
sbbb
loop
inc
push
cmpl
andb
xor
dec
lock
sub
dec
subb
iret
rcll
xchg
ss
int3
loope
iret
not
in
sarb
inc
or
or
enter
xor
in
nop
cmp
lahf
sub
popf
das
fnstenv
mov
cwtl
stos
fwait
push
lods
sbb
xor
xchg
push
test
nop
hlt
jo
in
out
test
and
inc
in
imul
xchg
and
arpl
shlb
push
cmp
scas
aam
mov
in
push
cs
jle
sbb
inc
ficompl
jb
add
cmc
pop
bound
jmp
sbb
jl
sub
in
test
and
xor
jbe
inc
xchg
aam
add
jo
stc
pusha
dec
or
addr16
adc
clc
mov
loopne
mov
xor
xchg
pop
adc
push
ficompl
movsl
inc
dec
jmp
cmp
dec
adcl
outsb
test
ljmp
xchg
or
inc
dec
pop
and
les
sub
jp
stos
dec
jl
dec
sub
fstps
or
add
pop
xchg
mov
adcl
outsb
cmp
mov
in
int
mov
ljmp
mov
adc
sbb
lahf
cmc
sub
mov
xchg
inc
mov
jne
outsl
gs
scas
pop
mov
and
daa
dec
mov
add
rolb
inc
mov
xchg
rorl
adc
lods
mov
sub
pop
jg
mov
hlt
jl
out
aad
adc
divl
andl
out
imul
rorb
mov
testb
pop
adc
jge
shrl
stos
jne
jne
mov
and
push
cmc
inc
adc
push
loopne
add
adc
push
fimuls
or
hlt
hlt
aam
mul
nop
jg
dec
adc
cltd
loopne
sub
xlat
push
scas
mov
mov
jnp
invd
lahf
adc
ss
sbb
fldenv
repz
daa
scas
push
pop
xchg
xor
cmpl
jecxz
fistl
xor
aaa
icebp
jp
jmp
andb
xchg
les
add
push
mov
ret
push
mov
mov
mov
jnp
call
aaa
roll
sub
push
out
aaa
mov
enter
mov
mov
fnstcw
test
out
scas
insb
push
in
xchg
dec
push
sbb
icebp
les
and
sbb
pop
pop
jecxz
mov
in
add
cmp
sarl
rorb
jmp
fcomps
sbb
mov
push
cmp
fwait
pushf
ret
cld
lahf
xchg
mov
mov
ds
ror
mov
sbb
mov
cli
push
sub
jp
aaa
ja
mov
push
aad
les
mov
js
xchg
push
jns
push
mov
aam
mov
dec
sub
lods
mov
pop
aam
sub
push
xor
sahf
push
out
push
mov
out
dec
popa
dec
add
adc
and
pop
push
push
xor
sahf
fwait
add
mov
mov
pop
lods
pop
fdivl
test
mov
add
test
fiadds
shl
xchg
lret
jle
enter
xchg
movsl
imul
les
jmp
sbb
rcll
jbe
sub
sbb
xor
and
mov
loop
add
gs
inc
and
push
jo
out
out
push
sbb
xchg
aam
fbstp
hlt
inc
jecxz
or
cltd
inc
pop
loop
pop
add
jae
adc
loop
dec
sbb
add
pop
add
fs
inc
stos
push
inc
pop
push
mov
arpl
mov
iret
stc
mov
inc
xlat
cli
sbb
push
jl
mov
les
pop
frstor
movsb
ss
or
sbb
mov
inc
test
pop
add
sti
call
jae
and
cs
adc
in
add
and
inc
lret
int
not
dec
mov
clc
and
outsb
and
movsl
xchg
rolb
pop
je
pusha
jecxz
and
lahf
scas
jl
dec
enter
mov
jecxz
xchg
xchg
push
shll
mov
dec
xchg
or
and
cltd
xchg
pop
pmulhw
mov
fs
adc
imul
loopne
fimull
imul
ss
adc
mov
into
mov
pop
dec
fistps
pop
or
jecxz
sti
repnz
jmp
cmp
nop
fsubrl
mov
pandn
out
push
inc
test
mov
add
imulb
aam
xor
jmp
inc
sbb
cmc
loop
xor
push
jge
incl
xchg
ss
shrb
add
scas
and
xchg
inc
lea
ss
out
lahf
cmc
jmp
jg
xchg
push
adc
sbb
lea
jge
int
test
sbb
ja
push
add
adc
test
adc
pop
xor
xchg
and
jl
push
push
outsl
mov
lret
cmpsl
je
xor
sar
jl
xor
xchg
fs
push
jnp
nop
sbb
and
clc
cmpsl
rorb
cli
mov
dec
subl
shlb
movl
and
insb
adc
mov
jp
push
sbb
jl
xor
sarl
pop
jno
pop
fidivrl
lret
jae
out
mov
addr16
or
rorb
xchg
outsl
sahf
or
pusha
push
ja
and
cmp
lock
pop
adc
sub
push
mov
jne
in
cmc
ret
lds
or
repnz
aam
insb
mov
test
pop
aas
stc
mov
xchg
mov
and
inc
lret
sbb
cs
or
pop
pop
push
xchg
sbb
sbb
mov
xlat
push
das
testb
pushf
mov
cwtl
and
cmp
sub
mov
adc
xchg
inc
adc
insl
icebp
push
je
mov
sti
push
or
insb
and
dec
out
mov
dec
fsubl
jecxz
push
xchg
fwait
mov
outsl
xchg
mov
fimull
jbe
push
sub
and
add
jne
leave
pop
dec
cmpsb
jg
and
aam
daa
das
push
ficoml
add
sub
sbbl
pop
ret
sti
cli
je
cmp
xor
push
dec
adc
sbb
push
fidivs
es
push
ljmp
jns
mov
push
orl
push
inc
cmp
jge
or
fstps
mulb
fcoml
sbb
mov
cwtl
push
jmp
test
cld
ja
mov
pop
outsl
xchg
loop
and
dec
xor
aaa
hlt
pop
adc
fldt
add
sub
shrl
pop
sub
mov
addb
movsb
mov
scas
lret
push
js
cltd
add
fidivrl
insl
popf
lret
xorb
pop
inc
ret
xor
mov
popa
mov
loop
add
dec
and
jno
in
mov
and
cld
and
mov
out
mov
jg
adcl
nop
sti
repz
inc
in
in
inc
aad
data16
push
ja
xchg
stc
stc
xlat
jmp
xor
add
mov
mov
xor
or
mov
lods
es
mov
jb
inc
push
sub
inc
mov
das
popa
fwait
pop
inc
ds
inc
pop
enter
addr16
cmpsl
mov
cltd
sub
leave
icebp
mov
mov
pop
xchg
int
mov
and
mov
push
push
inc
cmpb
or
pusha
push
jge
mov
and
fwait
mov
jp
das
stos
xchg
pop
in
jmp
fisubs
popf
test
loopne
adc
adc
sarl
cli
pushf
ja
in
stc
insb
jl
push
fs
mov
dec
inc
je
push
sbb
shll
xchg
push
in
mov
icebp
pop
lret
sarl
pop
mov
push
xlat
jecxz
push
outsl
lock
cmpsl
cld
popa
jae
and
jno
out
jno
adc
or
cltd
jnp
and
out
mov
dec
pop
jbe
js
shrl
or
fsubs
xor
push
es
ficoms
sub
rcll
xchg
mov
shrl
jl
mov
mov
or
lock
dec
ficompl
and
enter
mov
add
push
and
pop
pop
adc
pop
pop
loope
adc
aas
lds
xchg
fcompl
lods
loopne
sbbl
aaa
cmp
and
lcall
scas
ljmp
pop
loop
mov
loop
push
icebp
cmp
scas
xor
mov
orl
mov
and
pop
jle
cli
pop
and
mov
mov
jmp
jnp
ljmp
sub
jae
jne
jnp
gs
pop
push
sbbb
sbb
cmp
xchg
dec
call
mov
and
lea
jl
jo
or
mov
mov
movsl
cmpsl
sub
push
xchg
leave
faddl
or
inc
jb
cli
div
fstp
ret
aad
es
rcl
rclb
lret
lret
inc
mov
fsub
scas
mov
sbb
aas
sub
ret
loope
or
mov
add
push
mov
push
cli
scas
xlat
dec
rcll
and
inc
jg
jne
mov
bound
jbe
insb
jb
xchg
shl
in
push
leave
insl
jno
insl
movsl
push
outsb
or
cli
movsl
outsb
xchg
das
pop
xor
pop
push
psrlq
xor
cmpsb
push
xchg
repnz
push
inc
loopne
pusha
pop
jmp
mov
arpl
pop
out
mov
fcmovnb
mov
rclb
lea
xchg
negl
push
mov
dec
pop
pop
movsl
jne
pop
jae
pop
jmp
sub
popf
add
fmul
cmp
adc
sub
push
outsl
mov
test
fisubs
dec
outsl
cmp
nop
add
push
insl
jmp
in
mov
into
adc
or
mov
xchg
push
add
and
mov
push
xchg
pop
in
iret
stc
aad
hlt
jmp
repz
lods
ret
mov
add
mov
mov
sub
and
push
and
sub
mov
shll
pop
xlat
int
ja
loop
int
jmp
mov
inc
jmp
cmp
pop
scas
mov
aad
jne
mov
into
cmp
xor
or
cmp
mov
lods
into
adc
gs
push
jmp
push
sub
mov
and
fldcw
add
sub
or
push
sub
mov
pop
jbe
jp
es
sbbb
call
movsb
pop
repz
dec
lahf
pop
lret
xor
sub
cmpsb
leave
out
shrl
clc
aad
lahf
stos
inc
mov
add
cmpsl
fsubrl
mov
aad
jp
xor
loope
repz
jp
ds
pushf
mov
movsl
daa
es
inc
in
inc
push
out
jge
jns
sbbl
stos
jne
dec
xchg
lock
inc
push
mov
cmp
pop
les
sbb
mov
idivb
ret
jmp
call
inc
scas
push
test
push
mov
pusha
cmp
enter
jmp
leave
pop
cmpsl
shlb
xchg
dec
adc
enter
jbe
popf
scas
xor
jge
sub
cmpl
mov
cld
adc
movsl
adc
jmp
pop
xor
dec
mov
add
pop
mov
dec
ljmp
or
cmpl
add
rol
lahf
mov
dec
scas
jno
cmc
int3
in
mov
xor
rorb
mov
mov
loop
dec
pop
aas
adc
ja
push
sub
and
addl
popf
sub
inc
pop
je
in
fcomps
mov
popa
sbb
aad
aad
mov
into
pusha
mov
cwtl
and
cltd
mov
scas
dec
jo
lods
les
aam
adcl
das
jp
push
mov
fidivs
in
dec
outsl
lock
sbb
icebp
lret
out
ret
cmpsb
sbb
pop
loope
gs
xlat
mov
rcl
or
fpatan
jae
adc
jne
repz
mov
inc
dec
mov
cmp
cld
hlt
mov
lods
sahf
sub
outsl
idiv
in
cli
sub
daa
mov
jle
call
add
ja
out
test
rcll
dec
int3
jbe
pop
add
jge
dec
jo
out
test
add
fcmovnb
lahf
test
repnz
mov
pop
push
adc
mov
movsl
and
jmp
and
and
jo
icebp
cmp
dec
sub
cmpsb
lret
xchg
movsl
ret
nop
hlt
inc
add
sub
mov
inc
adc
xlat
lcall
push
jmp
and
cmpb
icebp
pushf
popa
scas
and
repz
nop
ss
jl
addr16
repnz
push
push
insb
sar
inc
cmpsl
nop
sbb
insb
dec
stos
and
nop
jecxz
mov
fimull
add
cld
adc
testl
xor
sub
lcall
ss
add
sahf
into
js
jno
sbb
or
arpl
dec
mov
icebp
sub
xchg
insb
adc
data16
pusha
popf
mov
daa
pop
mov
pop
add
ds
int3
nop
xchg
arpl
in
ret
cltd
dec
daa
fildl
scas
int
xor
rclb
mov
xlat
fsts
in
nop
jbe
test
lods
ffreep
rol
pop
std
or
mov
out
add
shlb
stos
jbe
xor
frstor
push
orps
cmp
popf
jmp
pop
mov
push
repnz
mov
int
xchg
inc
loop
mov
xor
lods
ds
adc
fdivp
inc
in
cld
in
fnsave
add
jnp
imul
sub
aaa
stos
push
mov
lea
push
lcall
loopne
arpl
inc
pusha
lods
test
stos
shl
aaa
popf
add
pushl
mov
mov
sbb
cmpsb
rcrb
xchg
test
incb
es
xchg
pop
jno
in
inc
or
inc
scas
inc
xchg
ret
pop
push
sbb
cwtl
or
pusha
cmp
in
mov
ss
out
fwait
popa
or
fidivrl
jno
sub
aas
cld
lock
mov
add
add
dec
xchg
push
pop
dec
out
adc
mov
out
in
push
adc
std
jae
add
mov
movsl
repz
idivl
cmpsw
xor
mov
out
adc
or
frstor
push
jl
les
mov
dec
dec
mov
in
lret
test
pop
jp
ss
dec
xchg
iret
mull
push
jecxz
xchg
inc
repz
and
mov
and
jmp
out
or
push
mov
stc
mov
sbb
pop
mov
daa
inc
ficomps
xchg
sti
mov
pop
icebp
cmp
inc
or
mov
adc
inc
push
adc
sbb
cmp
sahf
add
push
mov
rcl
rcrl
scas
in
cmp
jecxz
ljmp
sub
push
jae
insl
mov
cmpsl
imul
inc
rolb
fistpll
shll
dec
add
cli
and
xor
enter
daa
inc
mov
jg
cmpsl
jne
cmpsb
push
inc
data16
lods
cld
orb
sti
orl
stc
pop
xchg
fsubs
in
sub
jmp
mov
std
add
mov
hlt
xchg
stos
outsb
jno
push
stos
popf
xchg
cwtl
dec
mov
minps
int3
adc
push
adc
hlt
lea
push
es
sub
push
inc
inc
pushl
fwait
pop
mov
add
jb
inc
mov
xchg
ficompl
adc
cmp
mov
lea
jle
pop
and
addr16
xor
insl
movl
cmpl
inc
jns
iret
imul
out
lret
inc
jmp
pusha
mov
jne
and
xchg
cmc
and
xlat
aaa
rcrb
mov
dec
test
mov
push
out
jo
and
imul
mov
mov
and
add
scas
mov
push
gs
fs
lret
jl
cs
fadd
and
rol
fstps
mov
lahf
dec
mov
popa
or
inc
push
fimuls
mov
repnz
add
jns
mov
sahf
mov
inc
jnp
call
sub
adc
mov
data16
lcall
out
pop
or
jmp
pop
por
or
and
movsb
nop/reserved
pop
daa
dec
enter
add
fdivl
in
aas
mov
jle
in
pop
sti
xchg
cmpsb
push
aam
outsl
pop
mov
addr16
outsl
imul
test
int3
in
lret
sti
pop
mov
add
mov
in
xchg
add
bnd
cmp
sbb
pop
cmp
cltd
sbb
pop
daa
mov
jb
mov
jns
and
cli
jp
test
sub
jns
imul
sub
xorb
xchg
inc
mov
adc
sub
cmpsl
cmp
pop
mov
inc
cmp
push
insb
and
sub
mov
adcb
jae
inc
outsl
and
push
pop
mov
mov
xchg
scas
hlt
popf
scas
loope
mov
mov
pop
jl
ret
rcrl
and
pop
mov
ja
aas
ret
mov
out
dec
cmp
mov
dec
lcall
adc
test
ds
ljmp
les
dec
inc
pop
repnz
xchg
pop
lods
xchg
ret
out
imul
mov
cmp
aas
push
pop
pop
dec
int3
ja
mov
xor
fisttpl
push
int3
adc
mov
in
pop
or
daa
dec
lock
sbb
xchg
mov
xor
cmp
mov
or
jl
pop
sahf
cwtl
je
cwtl
cmp
add
lock
dec
push
push
and
icebp
mov
xchg
dec
and
mov
sbb
addr16
out
ret
xchg
rolb
stos
ja
mov
jb
mov
lock
mov
sbb
outsl
xchg
inc
pop
jmp
inc
adc
or
hlt
xor
inc
fisttps
push
inc
repz
pop
clc
sub
outsb
jmp
push
mov
sbb
pop
cmc
add
xor
inc
stos
sahf
outsb
push
push
push
sub
adc
or
pop
rcrl
or
sahf
mov
in
sbb
fiadds
adc
mov
popa
pop
loop
in
enter
fwait
icebp
dec
mov
roll
cwtl
dec
iret
in
push
sub
push
cmc
jg
jl
mov
loop
mov
fwait
xor
xor
lret
push
loope
es
aad
add
sub
inc
fistl
cmc
sub
rorb
lret
roll
fwait
stos
dec
cmc
test
inc
push
nop
inc
jp
mov
test
dec
addr16
mov
js
dec
push
insb
aad
push
out
cmpl
dec
stos
xor
inc
push
or
fsubl
in
or
iret
mov
mov
loopne
jbe
fst
push
shrb
pop
and
cli
fwait
cmpsb
mov
xor
rclb
push
aas
sahf
jg
loop
inc
adc
dec
pop
icebp
int3
mov
leave
lds
mov
mov
aaa
cmp
mov
push
sub
add
push
push
adc
or
push
mov
dec
pop
lahf
loope
pop
nop
adc
mov
jp
mov
cld
cmc
pop
push
adc
mov
jns
inc
addr16
add
fwait
xchg
mov
push
adc
rcl
not
clc
shll
ds
gs
fimull
out
add
dec
icebp
ret
lea
sti
icebp
daa
or
shl
xor
stos
dec
pop
add
mov
cld
fdivrs
cmpsl
incb
insb
jmp
xchg
xchg
jecxz
dec
inc
and
sbb
pop
cmpsl
cmp
and
xlat
ja
notl
xor
divb
sarl
cmc
mov
sbb
test
cmp
xor
out
push
call
repz
les
repnz
dec
test
repz
lahf
neg
mov
adc
sbb
xlat
dec
jp
push
in
cld
inc
loop
push
test
pop
lods
xchg
in
je
jmp
pop
out
jg
adc
push
aas
pop
pop
adc
adcl
sti
mov
sub
push
ret
dec
inc
push
mov
mull
lcall
cli
and
mov
in
xor
and
in
in
pusha
arpl
mov
jbe
jg
mov
out
gs
dec
mov
fstl
lods
xchg
popa
nop
jae
dec
jecxz
mov
cmp
pushf
jp
call
xor
jl
and
cmp
dec
xchg
jge
daa
nop
pop
inc
xor
push
add
mov
fs
sub
mov
aaa
shufps
or
push
ret
sbb
scas
loope
loopne
movsl
movsb
ror
shrl
fnstcw
push
push
jno
push
pop
cs
mov
adc
and
push
sub
xrelease
test
mov
push
ja
enter
mov
or
and
cmc
mov
adc
je
pop
pop
lds
push
jl
sti
mov
and
cwtl
aam
or
cmp
and
mov
lahf
mov
les
and
fistps
add
loope
inc
or
stos
sbb
jge
ds
or
or
cmp
adc
scas
dec
inc
ret
push
aaa
xchg
push
jno
je
loopne
xchg
inc
xlat
roll
mov
in
addr16
adc
or
push
pop
rcll
enter
add
daa
pop
jo
test
jmp
negb
mov
push
fdivs
nop
ljmp
lds
inc
ret
sti
testb
dec
or
lods
movsb
mov
enter
fdivp
inc
fdivl
nop
and
scas
rcrl
pop
mov
mov
loopne
mov
je
cmp
xchg
xchg
adc
push
hlt
ret
les
cmpsb
test
mov
adc
repnz
xchg
mov
add
lret
lret
or
add
fsubrl
dec
or
mov
xchg
sti
push
jae
outsb
ljmp
ds
sub
test
mov
inc
mov
push
push
addr16
fcompl
popa
lods
mov
pop
push
push
push
je
mov
out
lret
cld
mov
je
mov
aam
in
aaa
push
adc
push
sub
inc
mov
stos
popf
xor
leave
icebp
xchg
mov
sub
fisubl
mov
es
mov
sbb
sarl
mov
xorb
mov
testl
dec
add
and
mov
fistpll
das
or
xchg
sahf
in
inc
adc
clc
mov
sbb
jb
pusha
rcr
lret
push
xchg
cmp
dec
insb
popf
cmpsl
pusha
stos
out
mov
mov
jg
adc
adc
popf
lret
pop
fs
mov
dec
loope
rorb
aaa
xchg
sub
sbb
cmp
pop
stc
je
gs
inc
loop
and
dec
outsl
rclb
sbb
jae
push
je
mov
mov
sbb
lcall
mov
mov
jne
sub
xchg
jecxz
jge
mov
js
adc
cld
pop
aam
xchg
sub
sub
mov
jmp
pop
sub
adc
in
mov
mov
xor
pop
call
pusha
jno
test
and
jecxz
jnp
sbb
int
int3
icebp
cli
adc
fwait
pusha
mov
add
mov
mov
jge
das
fists
aaa
sub
dec
xchg
adc
mov
xchg
xchg
mov
add
add
dec
ret
mov
xor
jne
mov
test
adc
sub
xchg
leave
jmp
in
cld
push
out
das
cmp
pop
aaa
add
inc
pop
sbb
roll
cli
jl
or
rorb
push
pop
xchg
mov
inc
bound
sub
jl
adc
dec
push
mov
cmp
jecxz
fwait
ds
sub
lcall
fisubs
js
shrb
out
mov
pop
lahf
mov
bound
sbb
sbb
sbb
cs
push
jb
scas
xlat
aam
mov
push
xor
adc
lcall
fistps
fldpi
icebp
cs
int3
xor
push
les
mov
pop
or
mov
pop
test
cltd
into
inc
bound
xchg
movsb
add
xchg
add
js
jns
cmp
or
mov
lahf
push
test
or
push
inc
cmp
pop
test
fstps
shrl
or
lahf
add
sub
add
outsb
pop
xchg
cmp
inc
loopne
cmp
cmp
push
pop
or
stc
cmpsl
orb
xchg
mov
inc
add
xchg
shrl
sbb
mov
nop
or
mov
scas
and
leave
cmpsl
pushf
test
push
pop
push
jmp
bound
sahf
scas
push
cmp
test
mov
lea
and
sbbl
jle
mov
repnz
in
sub
mov
dec
and
fcomi
jg
jb
cmpsl
out
jge
push
jge
mov
test
and
mov
inc
sar
lds
shrl
fwait
aas
jmp
jae
clc
call
xorl
cli
ret
outsl
repnz
mov
mov
push
inc
and
pushl
addr16
mov
popf
add
push
dec
sub
loop,pn
mov
cmp
mov
sahf
lret
xchg
jbe
movsb
loopne
xchg
dec
rorb
pop
or
sub
insb
mov
cmp
jae
add
mul
adc
hlt
xchg
xchg
out
dec
dec
lods
adc
jne
ficoml
sar
jge
clc
fmuls
fldt
in
mov
adc
int3
and
inc
stos
clc
cmc
cmp
aaa
aas
pop
incb
enter
into
fisubl
imul
add
repnz
push
or
mov
cmp
pop
scas
xchg
sub
shrl
pop
push
mov
out
mov
xor
jmp
aas
push
daa
xlat
xchg
pop
aas
iret
repnz
jne
sahf
cld
sbb
mov
push
xchg
push
cmpsb
mov
imul
rorb
cmp
push
dec
sbb
es
adc
shll
pop
or
fnsave
mov
ret
or
or
je
mov
jg
std
in
je
hlt
jo
negl
icebp
int3
loopne
dec
jns
xlat
sub
cmp
or
push
cmc
pop
or
scas
inc
insb
bound
mov
and
pop
subl
test
stc
stos
imul
pop
and
push
mov
adcl
iret
dec
push
mov
movsb
xchg
das
inc
lds
add
test
sub
pop
jecxz
inc
push
xchg
mov
out
cmp
adc
mov
outsb
rol
jg
sub
stos
int3
aad
sub
adc
dec
fistpl
cmp
pop
push
push
aas
adc
out
pop
push
or
pusha
ffree
test
sti
push
cmpsb
adc
in
lock
sarl
xor
in
pusha
push
add
mov
jmp
xor
jge
cs
rol
lahf
xor
jno
cmp
push
mov
lock
mov
in
inc
fists
insb
pop
mov
push
xchg
sbb
ja
roll
popf
pop
shr
mov
mov
stos
ja
sub
filds
gs
xor
mov
or
or
scas
push
mov
cs
jge
aaa
clc
cmp
pop
sar
loopne
xchg
dec
icebp
mov
dec
sub
inc
and
xchg
xchg
js
test
lods
push
into
xchg
pop
insb
enter
mov
inc
xor
or
sbb
leave
cmc
adc
sbb
mov
xchg
out
push
test
popf
imul
test
rcr
in
enter
jno
inc
cs
stc
adc
pop
cs
push
sub
mov
stc
jmp
movsb
jle
push
sbb
mov
and
rcll
leave
mov
pushf
mov
mov
and
scas
js
sub
test
dec
mov
into
xchg
mov
pop
inc
gs
jae
daa
push
jg
or
test
adc
or
dec
inc
jg
mov
rolb
int3
push
movsb
pop
or
fs
das
in
dec
mov
fs
jns
js
shll
adc
push
mov
jnp
or
mov
in
cmp
and
es
push
jae
lret
mov
insb
xchg
scas
or
ret
fcmovnb
lret
out
cld
cmc
push
cs
in
jno
hlt
sbb
bound
mov
mov
add
cmc
mov
mov
mov
jle
xor
lods
outsb
dec
sub
lcall
push
shlb
fdivrs
mov
mov
in
push
pop
pop
daa
aam
mov
jmp
pop
fstpl
xor
cld
repz
lcall
out
loope
sub
aam
sbb
fildll
insb
aas
inc
pop
jg
or
adc
jae
mov
aaa
sti
push
adc
pop
jns
shlb
cmp
xchg
adc
jns
xchg
js
out
fimull
ficomps
mov
xor
xor
sahf
sub
and
sub
cwtl
sti
inc
fstl
sbb
push
mov
js
inc
mov
pop
cmovbe
pop
das
lock
aad
sbb
xchg
imul
jl
rcll
inc
clc
movsb
lcall
pop
lods
add
je
scas
xchg
jge
xchg
dec
data16
aaa
loopne
dec
cwtl
mov
push
xor
pop
aas
leave
push
xchg
push
xchg
lret
outsl
ss
ficoms
in
jmp
scas
inc
add
stos
shl
andb
inc
icebp
xor
test
ret
lea
sahf
cli
lret
mov
int
jne
mov
ljmp
mov
and
cmp
mov
in
fiadds
inc
dec
movsl
adcl
xchg
bound
mov
test
out
inc
mov
mov
sbb
ret
stos
mov
cmp
xor
sbb
fisttpl
adc
xchg
shll
sub
out
mov
mov
int3
popa
xor
std
movl
and
sbb
lcall
mov
cli
roll
int
mov
inc
and
adcl
mov
mov
fiaddl
insl
mov
push
jp
insb
lock
push
popa
xor
mov
andb
mov
testl
out
nop
xor
lods
sarl
repnz
pop
int
fs
mov
fstpt
outsb
adc
push
aas
jns
lcall
out
movsb
movsb
in
jo
inc
lods
sbb
pop
shll
or
arpl
push
cmp
ret
out
in
push
sbb
mov
cmc
in
pop
mov
push
sahf
fldl
or
fnsave
arpl
jge
das
dec
daa
sub
loope
insl
in
xor
sub
out
add
mov
in
jp
into
les
add
les
call
pop
test
jl
sbb
mov
xchg
sahf
fwait
mov
test
imul
mov
add
xchg
xor
ja
dec
aas
ret
popa
jmp
inc
jl
shlb
jge
add
test
jne
add
sub
push
cmp
test
icebp
test
pusha
ja
loop
push
xchg
out
mov
lods
or
jb
sbb
xor
test
mov
ljmp
cmpsb
fcmovnb
loop
das
inc
and
test
mov
aam
and
inc
rol
shl
leave
adc
push
add
sbb
repnz
xor
bound
or
dec
mov
mov
leave
jb
imul
das
push
sbb
mov
inc
cwtl
xor
jl
sub
sub
gs
mov
cli
cmp
adcb
jns
mov
int
mov
or
push
cmp
mov
mov
jecxz
cmpl
aam
jecxz
fiaddl
fmul
int
in
clc
sahf
pop
arpl
pushf
inc
ss
sahf
add
ret
jecxz
sti
jne
and
into
sub
adc
lock
repnz
lret
enter
int3
mov
fildl
mov
loope
adc
or
ficomps
cmpsb
es
hlt
cmp
or
out
mov
fnsave
or
fidivs
adc
test
ret
jecxz
int3
sbb
hlt
repz
divb
addr16
xor
mov
aam
pushf
and
pusha
in
stc
xchg
repnz
and
dec
jle
out
pop
cmp
out
ss
lock
sarb
in
inc
sub
lods
cmp
or
ret
jg
loope
fidivl
insb
movsl
inc
cmpl
jge
xchg
jecxz
mov
sahf
cmp
pop
and
push
push
sub
xor
xchg
mov
adc
xchg
out
adc
fsubrl
xchg
pop
dec
inc
fisttps
jo
jb
dec
fsubp
roll
outsl
mov
test
sbb
arpl
pop
inc
cmp
call
clc
dec
push
pop
lods
mov
idivb
ficomps
emms
adcb
mov
jbe
scas
adc
rcll
lds
push
and
cmp
inc
mov
mov
mov
rcrl
int3
jnp
ja
xchg
push
lret
add
fstpl
mov
cld
stc
stc
aas
iret
or
push
cmp
loop
sarb
inc
push
leave
and
cmp
lea
mov
adc
sub
lret
cmpsl
aam
sti
push
outsb
sbb
stos
imul
pop
pop
xchg
jno
inc
loop
cmp
ret
jg
cli
inc
outsb
add
cmp
fistpll
repz
test
add
lods
gs
icebp
jge
mov
xchg
push
pushf
or
pop
lcall
mov
loop
jl
outsl
arpl
sbb
sub
add
pop
xchg
inc
lock
or
add
adc
xor
push
adc
mov
or
mov
push
addr16
inc
popa
add
cmp
iret
fadds
pop
xor
push
sub
cmp
sbb
jl
ror
inc
push
sbb
iret
lcall
orb
push
call
pop
out
lcall
out
jecxz
or
imul
test
xchg
test
fiaddl
pop
fwait
cmp
jl
and
add
xor
adc
jns
test
push
xchg
dec
das
adc
add
cmp
mov
sub
in
push
dec
jl
in
adc
insb
nop
sbb
cmpsb
decb
ljmp
out
mov
sti
xchg
fiaddl
scas
or
pop
aas
dec
sbb
enter
sub
cmp
mov
cli
cmpsb
jp
jp
xor
movsl
add
add
aaa
sbb
cs
jl
add
cmp
out
mov
add
cmp
pop
enter
mov
addl
xchg
mov
scas
out
cmovnp
mov
enter
out
xchg
shll
xor
sub
mov
ret
and
or
xor
jne
lret
inc
xor
jp
dec
jecxz
cltd
fcoms
mov
lret
jbe
adc
out
sbb
push
rcll
pusha
xor
mov
or
cmp
popf
and
into
cld
std
lcall
into
aaa
jg
call
iret
sti
movsl
push
cmpsb
pushf
mov
xor
add
cmp
push
xor
xchg
pop
insb
jnp
add
jp
lods
or
pop
sti
pop
scas
mov
mov
rorb
into
xlat
dec
mov
ret
push
sbb
or
xor
pop
inc
cld
xchg
enter
loopne
mov
fstl
cmc
dec
mov
xor
enter
cwtl
adc
sarl
shll
jg
mov
xor
adc
dec
jecxz
push
mov
push
and
add
fwait
and
fisubs
and
fs
push
sarb
xchg
xchg
outsb
imull
cli
mov
call
aaa
lock
and
cmp
xchg
inc
mov
subb
mov
in
add
bound
adc
cmp
sub
lahf
stos
dec
sahf
adc
leave
popf
pop
fnstenv
mov
in
cmc
cmp
inc
fnsave
mov
jp
fs
sti
cmp
mov
pop
lds
sub
repnz
negl
adc
jge
xchg
les
jmp
sbb
out
xor
or
push
xor
sbb
lcall
sub
or
add
insb
xorl
add
adc
call
jmp
dec
add
and
out
mov
pop
add
imul
test
out
cwtl
push
add
pop
xor
fstpl
out
pop
sub
add
cmpsl
push
xchg
out
movsl
mov
mov
inc
and
stos
cld
mov
mov
push
rcl
sub
xchg
cltd
sub
lods
lahf
int
mov
add
adc
lds
mov
rep
das
mov
inc
leave
adc
inc
scas
mov
xchg
pop
std
mov
icebp
pop
repz
mov
adc
imul
lret
fsubp
dec
stos
popf
int3
mov
ret
leave
repnz
xor
sbb
xchg
mov
test
ret
je
xor
jmp
mov
ret
xor
mov
fistps
scas
fdivrs
call
hlt
jbe
enter
ja
push
xor
mov
pop
mov
in
fiadds
into
fidivs
or
pop
mov
dec
sahf
js
loop
push
mov
shrl
jp
arpl
add
add
inc
jb
xor
outsl
leave
xor
jg
test
lcall
add
mov
fcomps
jne,pn
jle
and
cmp
jp
pmulhuw
cwtl
mov
pusha
and
out
js
out
rcll
out
or
sub
and
push
outsl
inc
out
jns
sbb
insb
aam
and
out
out
lods
inc
cmpl
jno
mov
icebp
es
mov
cli
jecxz
int
daa
pop
dec
mov
mov
cmc
in
leave
roll
je
subl
mov
inc
fstpl
mov
shl
imull
xchg
bound
clc
push
test
jl
xor
insl
push
or
sub
inc
dec
test
or
inc
mov
mov
das
scas
or
ret
mov
lds
pop
lahf
sub
in
xchg
movsb
jb
cwtl
lock
mov
push
jnp
rorl
int3
mov
add
dec
ret
lods
cli
sbb
push
sbb
mov
inc
jae
pop
mov
xor
adc
lea
xor
shlb
out
pop
inc
repnz
and
push
in
jae
fisubl
out
xor
push
stc
xchg
xor
mov
sti
jo
hlt
cmp
push
sahf
hlt
rolb
add
cmp
test
mov
jp
and
mov
and
aad
adc
imul
gs
and
jnp
pop
xor
in
andb
add
add
fs
out
jns
dec
fcom
mov
add
mov
xchg
loopne
pop
cltd
cmc
cmp
adc
insb
or
lods
xlat
movsl
mov
xchg
push
test
movsb
je
sub
and
int3
pop
pusha
mov
fs
sub
adc
pushf
xor
call
outsb
jns
cltd
jp
fadds
jb
in
xchg
dec
add
push
cmpb
lock
cld
mov
cmp
cmpsl
lods
in
arpl
inc
adc
xorl
loope
xchg
push
in
sub
mov
adc
dec
push
loop
ret
mov
adc
in
jns
fisubs
sbb
into
dec
out
cli
stos
add
push
ljmp
lret
xchg
mov
xchg
inc
popf
int3
xor
push
loopne
stos
push
repnz
shl
fidivl
inc
mov
cmpsl
sahf
negl
mov
fwait
mov
sbb
or
les
stos
pop
mov
in
add
arpl
jb
fldt
add
xchg
add
dec
pop
aaa
inc
clc
push
test
repz
in
cmp
push
push
cli
shlb
insb
fistl
inc
rcll
mov
shl
lods
fsubs
push
add
lret
dec
movsl
mov
push
xor
cld
sahf
pop
repz
pop
iret
insl
movhlps
adc
fmul
add
cmc
in
repz
mov
in
cmp
mov
cwtl
subl
je
fcos
gs
fsubs
inc
shlb
push
call
sub
ret
jge
push
jmp
push
into
adc
jle
jnp
mov
mov
mov
loope
sbb
xchg
lods
sbb
sahf
xchg
push
xadd
mov
iret
nop
pop
repz
push
aas
pop
out
push
xchg
rorb
and
push
bound
mov
mov
test
repz
cmovnp
clc
push
sub
mov
adc
pop
cwtl
int3
and
stc
jp
cmpsb
mov
fadds
mov
pop
ss
insb
push
fidivrs
stc
pop
xor
jge
repnz
mov
int
fdivrp
xchg
sub
and
add
sub
jmp
cmovns
sbb
stos
stos
das
inc
sub
lahf
lret
jmp
mov
sub
add
cmp
and
adcb
shrl
push
leave
aam
cwtl
popf
sub
jge
or
jmp
cmp
xlat
mov
lret
insb
mov
pop
mov
dec
lahf
stos
cwtl
cmpsb
or
xor
push
sbb
dec
movsb
inc
lods
push
lds
add
dec
push
lret
vsqrtss
mov
cmp
sbb
scas
sti
dec
cld
pushf
mov
stos
jmp
bound
xchg
mov
mov
out
and
lahf
stos
loope
ds
dec
fs
fnstsw
in
and
mov
into
mov
sub
dec
jle
xchg
fdivl
dec
push
in
dec
or
add
xor
and
lcall
adc
mov
xlat
cmc
in
dec
adc
xchg
ret
mov
daa
lea
sahf
js
xorl
shll
cmp
cwtl
test
adc
inc
mov
mov
jne
ljmp
or
test
adc
push
out
sbb
xor
popa
testl
dec
sarb
movsb
lods
aaa
mov
cmpsb
add
sar
insl
mov
cld
adc
xchg
dec
pop
aam
stos
lock
movsb
sarb
jae
js
push
mov
rcrb
xchg
repz
sbb
lods
lods
sbb
jmp
mov
sti
test
andl
scas
dec
pop
xor
pop
rcrl
jne
mov
outsb
gs
inc
push
add
jb
or
nop
out
xchg
icebp
pop
cmp
inc
xor
shrl
mov
mov
js
mov
lods
inc
sub
xchg
movsl
ljmp
icebp
sti
xor
inc
push
cld
xchg
mov
adc
or
pop
xchg
sub
in
and
mov
movsl
mov
ss
lea
dec
adc
xchg
jecxz
pop
cmp
adc
cwtl
fucomp
push
mov
mov
pop
cs
ret
inc
dec
ss
add
jge,pn
adc
sub
mull
ds
mov
lcall
mov
ljmp
setbe
ret
inc
outsl
or
dec
push
or
sar
pop
andb
outsb
stc
aaa
push
push
loopne
adc
pop
pop
sub
dec
mov
aam
adc
rcll
lods
nop
fs
adc
dec
sub
adc
lret
or
setne
mov
pop
xor
pop
mov
xlat
xor
ss
cmp
sub
dec
movsb
mov
push
int
push
mov
mov
adc
aad
test
popf
or
pop
inc
pop
movsl
add
popf
inc
inc
add
jo
sarl
dec
aaa
inc
pop
add
out
push
fidivl
jle
mov
psrld
sti
loopne
cli
inc
or
dec
das
and
adc
jns
fbstp
dec
inc
xchg
dec
cmp
or
roll
xlat
dec
negb
inc
jecxz
dec
pop
xor
lret
in
xchg
out
out
push
push
sarb
aam
pop
inc
push
popf
lcall
push
test
ja
add
mov
xchg
insb
xor
sbb
loop
std
les
add
xchg
inc
jne
rorl
dec
pop
mov
push
jge
vmwrite
addr16
addb
dec
enter
cmpl
sbb
or
ja
nop
xor
mov
fdiv
in
pop
les
inc
pop
lret
cmp
cwtl
xchg
push
jecxz
cmp
aam
xor
xchg
mov
les
inc
int
lea
mov
xchg
xlat
fisttpll
sahf
xor
adc
inc
cli
rorb
cmpl
in
sbb
call
js
lret
push
lods
stos
loop
mov
lret
mov
adc
push
lods
jp
int3
out
sub
ja
setns
inc
outsl
in
stc
pusha
stos
mov
inc
dec
mov
mov
imul
mov
sub
and
jecxz
insl
push
mov
mov
insl
divb
shl
jnp
sub
mov
jp
aam
mov
mov
xchg
cmp
pop
jno
das
arpl
mov
push
pushf
out
mov
xlat
dec
mov
or
imul
clc
cmp
push
inc
mov
movsb
fcomps
cmp
and
adc
jo
mov
dec
rorb
mov
out
or
ss
or
mov
push
jae
out
sbb
or
or
pop
js
xchg
add
es
test
jne
jmp
dec
push
push
sub
pop
mov
adc
pop
dec
stos
or
mov
push
sbb
jbe
mov
and
xor
test
inc
mov
or
inc
pop
pop
xchg
ret
mov
out
fdiv
bound
icebp
div
adc
push
pushf
sub
flds
xor
sub
xchg
dec
xor
pop
push
push
pushf
push
inc
sub
bound
push
mov
cmp
pop
repz
add
pop
xor
and
js
inc
pusha
push
jae
mov
aas
sbb
and
push
mov
jno
mov
fisubrs
outsb
cmp
cs
cmpsb
mov
inc
xchg
cld
mov
aam
jecxz
out
stos
insb
push
outsl
xchg
mov
ret
add
cs
mov
in
pop
xchg
ja
mulb
and
pushf
jo
mov
loope
aad
dec
fstps
fisttps
pop
fidivl
mov
xor
or
add
cmp
test
dec
fs
push
fcoms
roll
out
lret
add
test
push
sub
adc
jmp
stos
fidivrl
add
enter
enter
int3
sbb
xor
out
or
cli
fnstcw
call
jns
adc
jmp
fwait
add
dec
cmp
es
pop
insl
mov
sub
xor
dec
add
dec
and
in
mov
mov
push
jb
negb
dec
mov
imul
xchg
xor
repz
cmc
xor
mov
testl
push
mov
cmp
xchg
mov
fistpll
sti
mov
pop
ljmp
test
in
imul
outsl
jno
mov
jo
pop
ja
testb
xchg
sbb
mov
dec
or
add
fnstsw
addr16
sbb
xor
mov
js
push
dec
mov
addr16
cli
mov
lret
call
push
mov
xchg
cmp
add
fbstp
or
stos
fistl
mov
in
jb
jmp
loope
pop
push
mov
and
add
test
jb
pop
lea
mov
push
mov
jmp
mov
ret
dec
fdivr
sub
pop
and
push
push
pop
cmp
sub
fstps
xor
xlat
jne
push
aas
adc
jnp
gs
and
sti
imul
cmpsb
dec
and
les
mull
clc
push
test
es
test
fdivs
notb
inc
cwtl
push
ja
dec
loopne
leave
dec
pusha
push
cmp
lods
inc
xor
cld
xchg
sbb
sub
and
popf
adc
sub
push
cmp
je
xchg
xor
push
pusha
add
pushf
daa
pop
rclb
mov
in
cmp
mov
mov
iret
pop
rcll
ljmp
cwtl
xchg
dec
pop
test
xchg
inc
xor
or
sti
pop
adcb
cli
cmp
cmp
out
add
aad
test
add
xchg
sub
lock
mov
cmp
sti
mov
push
jle
lahf
fldt
mov
jb
ljmp
loop
add
ficompl
sbbb
push
loop
jnp
jb
push
mov
and
test
repz
add
je
push
mov
out
test
push
arpl
cmp
scas
rcr
push
sbb
inc
adcb
and
dec
cltd
inc
incl
loope
push
push
sbb
jbe
popf
cmp
daa
sub
ss
push
xor
mov
andb
adc
jo
insl
repnz
mov
inc
push
iret
pop
push
xchg
scas
arpl
cmpsl
dec
call
mov
or
out
shl
js
popa
icebp
aad
sbbl
enter
adc
add
jae
gs
xchg
lods
dec
pop
into
shll
sub
inc
cmp
inc
mov
push
add
outsl
arpl
pop
sahf
outsb
or
addr16
test
cld
xchg
push
mov
lahf
inc
loop
xchg
adc
pop
daa
mov
or
jle
stos
test
ficoml
push
movsb
mov
add
jb
or
loopne
push
adc
mov
lds
jno
lea
sub
int
xor
sbb
cmpsb
sbb
sbb
pop
scas
bnd
inc
or
add
out
js
inc
std
xor
repnz
push
xchg
movsl
out
sahf
jno
test
aad
int
popf
sbb
pusha
mov
and
mov
inc
sbb
inc
outsb
xchg
xchg
dec
inc
xor
xchg
and
add
dec
sub
arpl
andl
and
dec
scas
sahf
bound
ds
out
push
cld
jg
ljmp
lds
cmp
fs
adc
xchg
add
popf
icebp
and
lea
jmp
das
push
hlt
mov
mov
aad
rcl
cli
xlat
orl
cli
pop
scas
fists
les
push
adcb
jbe
jl
call
push
cmp
aad
or
push
inc
pop
mov
in
jle
movsb
jb
mov
jg
xor
mov
inc
jns
lcall
out
mov
cli
mov
lods
inc
or
iret
mov
jle
jmp
icebp
gs
dec
adc
xor
add
push
jmp
dec
adc
or
fdiv
cltd
cmp
rorb
imul
xor
gs
stc
inc
jge
sbb
icebp
popa
and
cld
ljmp
lcall
sti
int
jb
outsb
iret
cmpsl
adc
mov
xor
stos
pushl
dec
jns
mov
dec
pop
xor
into
push
ffree
imul
xchg
mov
stos
popf
mov
xchg
popf
xor
or
push
test
adc
je
jae
lahf
and
test
pop
adc
mov
test
ljmp
fs
push
nop
ror
sti
clc
in
cmpsl
adc
out
test
cmp
fbstp
lods
mov
jp
jp
popf
xchg
xor
dec
fisubs
push
cmc
push
scas
push
sub
inc
orl
in
outsl
lea
mov
add
sbb
sub
jmp
xor
inc
pop
iret
adc
jecxz
leave
out
pop
dec
push
inc
cld
or
ret
push
inc
cmpsl
test
mov
int3
lahf
fnstsw
mov
ja
adc
lret
fiaddl
out
test
xor
xchg
xchg
and
sti
xchg
xchg
shll
das
push
ds
daa
stos
pop
mov
pop
cltd
push
dec
mov
and
rolb
inc
jg
cmp
sub
cmp
mov
lret
je
fimuls
filds
sbb
es
scas
dec
mov
and
push
movsl
pop
sbb
ss
xlat
popa
adc
sbb
ljmp
mov
es
in
xchg
cmp
outsb
sbb
dec
cmp
add
addb
enter
test
repnz
fwait
inc
or
jle
aad
insl
scas
shrb
jge
aaa
sbb
sbb
push
xchg
adc
outsb
pusha
mov
pop
sbb
insb
sub
xchg
cmp
jb
and
push
jg
insl
popa
or
iret
mov
push
fidivrs
inc
mov
adc
pop
lods
xor
jo
jae
bound
mov
imul
pop
adc
lcall
dec
fcomps
xor
int
lods
dec
xor
push
repz
pop
clc
dec
in
pop
jl
add
and
sbb
repz
pop
xchg
fcomps
adc
inc
dec
outsl
jecxz
sbb
mov
cmp
sbb
mov
xlat
jmp
pop
dec
lret
out
add
fimull
push
jne
mov
pop
insb
rolb
cld
cmp
loope
and
mov
scas
pusha
ficomps
mov
push
nop
into
call
out
outsl
std
jns
stos
xorl
shll
xchg
adc
shrd
mov
dec
popf
lea
xor
sbbl
ljmp
repnz
lcall
loope
xlat
fs
adc
les
push
and
mov
push
dec
movsb
sbb
inc
in
jle
mov
call
fcompl
push
xor
cmp
jge
add
das
push
aas
xor
xadd
stc
xchg
xchg
add
adc
push
mov
mov
ja
and
fldt
ds
aas
jmp
addb
jmp
mov
gs
insb
pop
add
push
test
sub
lock
call
adc
sti
popf
push
mov
jecxz
fidivrl
sbb
bound
addb
lock
pop
and
adc
ljmp
out
pop
ret
sbb
sti
jge
xchg
xor
in
movsb
or
cld
mov
aaa
mov
mov
loopne
sbbl
adc
aaa
nop
or
sbb
popf
cli
outsl
cld
push
jbe
cmp
fstps
lods
stos
and
cmpsl
xchg
pop
test
in
ljmp
pop
cmp
icebp
xlat
pop
mov
pop
adc
adc
int3
pop
outsl
rolb
add
or
sbb
fwait
mov
dec
mov
or
ss
fiadds
int
jno
test
mov
xchg
jg
add
repnz
outsb
mov
mov
mov
or
dec
xor
and
xchg
push
int
fsubs
mov
pop
ljmp
cmp
inc
push
das
lcall
lret
and
push
dec
cmpsb
jmp
mov
imull
mov
in
into
outsl
rcrb
repz
and
fs
mov
daa
sub
mov
mov
addl
mov
aaa
sbb
or
push
sti
or
dec
push
and
lahf
jns
sarl
xor
dec
dec
mov
ds
loopne
mov
xchg
in
pop
jg
mov
xlat
movsl
fstp
aas
shlb
sti
subb
outsl
daa
in
aaa
ffreep
push
push
enter
sbb
sti
inc
jmp
jle
fistpl
sbb
testl
add
cmp
adc
ja
dec
mov
int3
push
add
js
stc
adc
ret
clc
cmp
rorb
insl
enter
je
mov
lret
push
add
lret
and
mov
adc
int
fsubrs
and
repz
out
adc
and
jl
inc
xlat
sbb
mov
mov
test
shrl
xchg
cwtl
mov
fwait
xorl
jne
hlt
sbb
sahf
mov
xchg
inc
mov
int
xor
dec
fstpt
xorl
xor
and
insb
jg
call
lea
loope
push
dec
popf
cltd
iret
push
notb
pop
xor
mov
mov
sti
push
fsubrl
xor
jae
cld
das
inc
jle
test
cmp
out
cmpb
adc
pop
mov
mov
insb
push
shll
loop
xchg
sbb
mov
and
xor
dec
jns
or
mov
pop
ficomps
push
dec
xchg
test
inc
pop
cmpl
add
xor
xchg
aas
pop
divl
mov
sub
xchg
push
pop
xchg
jp
and
movsl
xor
mov
iret
andb
and
xor
push
mov
test
clc
testb
ja
inc
mov
std
xchg
gs
sti
xchg
rorl
aam
js
jo
shlb
cmp
sahf
and
pop
dec
adc
lahf
leave
loop
lock
cmc
xor
pusha
push
ja
imul
fwait
and
xchg
mov
test
jg
dec
lea
dec
dec
mov
and
mov
dec
xchg
iret
sbb
jbe
ret
add
pop
jae
and
xchg
inc
adc
jmp
jns
out
push
sahf
imul
mov
ss
mov
mov
jns
scas
cmpsb
inc
stc
mov
out
xor
je
fcomp
ror
movsl
imul
setbe
jno
sbb
or
xor
lret
push
cs
cld
ljmp
push
jne
outsl
dec
sti
std
jne
scas
sbbb
or
adc
dec
xchg
lahf
mov
push
sub
mov
das
or
jnp
inc
in
por
mov
out
into
fsub
mov
mov
xchg
inc
icebp
mov
ucomiss
out
js
mov
cmp
jecxz
mov
pushl
bound
pushl
stos
jno
outsb
mov
loopne
dec
and
lahf
jp
mov
xor
adc
jl
repnz
es
xchg
mov
jl
xchg
or
adc
inc
pusha
xlat
and
mov
mov
repnz
xchg
mov
and
push
cli
xchg
repz
scas
insb
addr16
inc
dec
jbe
sbb
dec
pop
ja
add
cs
jbe
bound
push
mov
ja
cmc
cwtl
mov
out
pushf
mov
sbbl
push
xor
dec
repnz
push
jp
out
fs
inc
cmc
mov
pmullw
fidivrl
inc
loop
inc
push
jl
jecxz
push
add
call
in
leave
ret
stos
cltd
aas
xor
push
cmc
dec
mov
sub
daa
sahf
fcoml
pop
mov
test
int
inc
mov
sub
cmp
xor
push
or
test
push
inc
dec
jbe
ja
sbb
xor
repz
dec
andl
xor
or
pop
mov
lds
sbb
xchg
loope
nop
fldt
mov
push
inc
fists
jle
int3
pop
pop
dec
mov
ficompl
popf
and
pop
movhps
cwtl
push
xchg
sub
imul
jmp
call
sbb
jmp
and
and
xor
dec
out
xchg
mov
clc
out
cmp
or
jle
and
adc
mov
out
imul
adc
sub
add
mov
pop
test
jmp
xchg
cltd
push
mov
push
sbb
mov
out
xchg
and
pushf
xor
xor
cltd
sbb
mov
inc
das
jp
push
cmpsb
dec
dec
mov
mov
adc
adc
inc
mov
adc
inc
pop
dec
add
pop
sbb
cmpsl
sahf
and
jge
and
mov
adc
out
xchg
mov
inc
mov
dec
enter
sbbl
pop
inc
fwait
scas
fbstp
aad
pop
pop
div
jns
clc
and
xlat
dec
xor
sti
dec
imul
push
push
jmp
adc
fdivs
pop
mov
inc
xchg
enter
je
pop
jmp
inc
mov
push
subl
fdivl
mov
add
xchg
loop
iret
jmp
jle
aam
pop
and
testb
sub
fadd
jno
rorl
dec
cmp
cwtl
jg
out
lahf
test
mov
cmpsl
divb
pop
cmpsb
into
scas
pop
in
sbb
push
push
mov
sub
xchg
into
xchg
jns
mov
and
dec
jb
loopne
shll
fsubrl
and
pop
das
or
int
adc
mov
and
mov
cltd
mov
inc
clc
cmp
or
hlt
and
jp
ret
sbb
mov
sbb
push
or
push
addr16
and
or
pop
mov
pop
loope
mov
mov
movsl
cs
sbb
gs
in
jbe
shlb
inc
pop
pop
divb
insl
in
inc
dec
mov
test
mov
cmp
aam
push
cmp
jg
sbb
loope
aas
outsl
rcl
filds
pop
xor
lea
loopne
push
addr16
jle
das
xlat
lods
mov
stc
cmp
sub
les
fists
in
lock
cmp
xor
cmovp
in
mov
xor
pop
xchg
loopne
xorl
or
outsb
adc
add
mov
lret
mov
xchg
xchg
pop
xchg
xchg
jecxz
dec
outsb
pop
rcll
push
stos
inc
daa
cmpsb
and
dec
sub
adc
inc
rorl
lock
sahf
mov
out
inc
sbb
jmp
inc
lahf
mov
dec
arpl
xchg
mov
mov
xor
or
cmp
inc
mov
fisubs
scas
fdivrs
je
and
leave
mov
fnsave
xchg
in
or
leave
cmp
icebp
fldcw
out
mov
push
cmp
push
cmp
movsl
mov
jp
pop
push
jge
out
add
mov
push
mov
movsl
in
xchg
sub
out
popa
and
into
sbb
add
scas
or
pop
fchs
sahf
and
xor
cmpsl
clc
js
mov
repnz
out
test
pop
cli
in
pop
jo
push
jp
movsb
push
ljmp
adc
rorl
mov
or
stos
mov
xlat
push
mov
jp
or
cmp
xchg
jb
cmp
iret
inc
fnstenv
push
xor
push
sbb
jp
sbb
pop
int3
adc
cmc
xchg
push
cltd
mov
add
add
add
push
scas
sti
out
std
pop
adc
mov
push
movsb
je
enter
or
fbld
xor
mov
xor
pop
push
cmp
push
repz
mov
push
cmc
std
pop
pop
fldcw
jne
xchg
cld
es
cwtl
pusha
push
xchg
jmp
mov
fwait
mov
subl
xchg
negl
movsb
movsb
push
cmpb
pop
add
xchg
aaa
mov
std
pop
and
adc
arpl
sbb
cmp
dec
xlat
call
mov
cmp
loope
xchg
sub
insb
les
les
dec
daa
xchg
cmp
sub
lods
jb
mov
addr16
nop
sbb
repnz
mov
out
mov
sub
mov
xor
xlat
in
imul
adc
add
mov
and
test
jp
mov
sbbl
out
xor
fld1
iret
loop
out
mov
ficoms
ja
addb
mov
jno
outsl
inc
sbb
insl
orl
iret
xor
dec
icebp
xor
inc
bound
in
xchg
sti
fcmovnu
mov
push
or
jecxz
scas
or
sub
inc
mov
xchg
jecxz
xchg
sbb
or
cmpsb
les
xchg
sub
fisttpll
xchg
and
mov
movsb
out
push
iret
mov
xchg
dec
outsl
test
xchg
subb
negb
mov
aaa
jge
in
jle
or
ret
xchg
mov
push
roll
scas
pop
mov
arpl
aas
sbb
dec
dec
aaa
test
popa
out
mov
push
insl
push
dec
mov
dec
fbstp
test
iret
pop
sub
out
std
mov
hlt
lcall
sub
pushf
bound
mov
fsubr
lret
cmc
repnz
xor
lods
int
popa
outsl
and
mov
xchg
out
mov
adc
push
cmp
cs
cld
cli
push
mov
ljmp
nop
and
cmc
rcrl
mov
lret
mov
stos
cmp
aas
subl
push
xor
mov
and
push
pop
dec
out
lock
decl
pop
pop
loop
jae
rcll
pop
jo
cmp
icebp
sub
insb
les
or
mov
and
loope
dec
shl
lds
fwait
xor
sbb
mov
jb
movsl
mov
jp
sar
seta
ss
mov
insb
and
mov
mov
notb
push
xchg
add
aas
mov
in
and
stc
lret
mov
subb
loope
orb
xchg
jecxz
icebp
dec
lret
pop
mov
mov
aam
lods
add
aas
or
in
ret
push
jl
jnp
out
in
and
pop
adc
scas
repz
ret
aas
inc
inc
sbb
pop
xor
cmp
sbb
jne
fucom
negl
adc
jle
je
les
cmpsb
push
pop
ljmp
xchg
aad
outsl
sbb
mov
push
mov
jae
ret
pop
sub
push
xchg
dec
mov
ds
xor
dec
dec
jb
in
ret
push
int3
jnp
outsl
pop
xchg
jmpw
inc
push
movsb
movsb
imul
fadds
pop
mov
sti
inc
dec
xchg
cltd
cmc
jge
rcll
ficompl
hlt
sub
sbb
sbb
and
push
int3
inc
pop
addl
cmpsb
xchg
rcrb
out
inc
xor
push
fisttps
nop
adc
jl
mov
inc
dec
test
and
mov
test
pop
cld
je
sbb
mov
outsb
sub
inc
add
lods
jbe
xchg
inc
or
add
ficompl
mov
xorl
in
lret
cmc
das
movsb
repnz
test
dec
icebp
ret
or
stc
jb
cmpsl
shl
fildll
add
lods
jecxz
mov
iret
mov
xchg
push
inc
push
cltd
push
mov
fstpt
xor
cli
xlat
lret
jno
outsb
addr16
iret
loop,pn
lcall
sti
and
fstps
dec
inc
orl
add
ror
xchg
in
jns
add
divl
pop
ret
xlat
pop
stos
add
in
lods
clc
lcall
in
add
into
outsl
out
jmp
insl
sbb
cmp
shl
movsb
into
sbb
xchg
out
ret
out
cli
incl
das
cld
push
imul
pop
xor
cmp
pop
test
sbb
pop
js
jns
mov
fs
leave
data16
dec
jecxz
shll
idivb
xchg
mov
sbb
and
sub
pop
xor
repz
xchg
mov
jl
mov
repnz
mov
cmp
sbb
and
push
addb
xor
and
test
aad
addr16
fcoms
xor
addr16
mov
popf
and
mov
test
sti
inc
fwait
jmp
insb
int
cli
mov
or
mov
out
dec
roll
sbb
inc
mov
add
mov
or
aam
insl
mov
push
jbe
and
arpl
pop
adc
jg
mov
fs
loope
dec
pop
shll
and
mov
cmp
fsts
imul
outsb
lahf
mov
jno
push
repz
ret
push
movsl
ljmp
call
mov
out
cmc
scas
pop
cmpsb
pop
sub
inc
jo
jne
rcl
loop
lret
and
adc
scas
mov
mov
cld
mov
lds
loope
popa
inc
jae
cmp
adc
pusha
fdivrs
jg
pop
pop
xorl
movsl
push
lcall
les
out
cwtl
fistpl
push
rcr
cmp
cmp
pop
xlat
andb
inc
add
xor
test
jb
ret
and
aam
sub
and
mov
fnstsw
nop
into
daa
jl
lock
adc
fisubrl
test
push
orl
jl
in
jnp
sub
add
imul
popa
mov
push
mov
adc
out
mov
sbb
icebp
mov
ss
or
loop
mov
je
or
movsb
jmp
xchg
in
push
pushf
hlt
les
fwait
jmp
push
dec
xchg
jl
pop
mov
lock
jae
dec
push
in
hlt
pop
fstpl
shrb
int3
xchg
jecxz
push
lock
pop
addl
pop
ja
mov
pop
in
fsubrp
or
mov
sub
add
ret
sti
clc
fwait
fdivrl
add
cmpl
adc
pop
dec
pop
jmp
mov
pop
jnp
lods
ss
ljmp
int3
aaa
dec
les
out
dec
cmc
outsb
neg
aaa
arpl
jnp
pop
mov
push
loopne
xchg
xchg
push
and
or
ljmp
lock
cwtl
push
cmp
pop
nop
jns
add
xchg
aad
xchg
mov
mov
add
xor
pop
je
jg
nop
dec
xor
add
push
and
add
jns
xor
lock
out
ficompl
repz
dec
jmp
add
sahf
sbb
adc
cmpsl
sub
xchg
xorb
pop
sbb
je
jmp
in
popa
std
mov
rorl
loope
sbb
faddl
hlt
rorb
dec
mov
mov
xor
repnz
mov
sahf
mov
pushf
mov
mov
xor
das
jae
stos
clc
or
xchg
ds
jb
fwait
sbb
aaa
sbb
and
orb
scas
ficoml
rol
jle
push
lret
roll
mov
xor
inc
fists
dec
cmp
push
fdivr
pop
fists
roll
loopne
popf
mov
adc
je
je
and
add
in
popf
sahf
mov
pop
lods
test
and
leave
and
xchg
xchg
js
jno
xchg
or
mov
lahf
sub
loopne
mov
xchg
test
testl
mov
push
pop
pop
jp
cmp
mov
sbb
ror
mov
cltd
inc
push
cmp
inc
jno
inc
in
out
aas
add
jecxz
push
movb
in
and
sbb
hlt
xacquire
xchg
les
mov
hlt
dec
or
mov
sub
push
rcl
orb
negb
and
bnd
ja
jp
cmp
nop
icebp
std
rcll
jbe
jl
fwait
pop
jae
sub
inc
pop
or
adc
xchg
int3
push
cmp
mov
cmpsb
mov
das
sti
stc
pop
sub
out
int
outsb
add
fsubrl
xchg
add
add
cmp
mov
and
dec
fs
fwait
xlat
dec
addr16
ret
jge
aam
fldenv
test
mov
xchg
daa
cmp
cmpsb
jmp
mov
jecxz
repz
or
or
jmp
loopne
sub
add
leave
adc
sub
jmp
fdiv
fstpl
sbb
jnp
lcall
shlb
dec
pusha
and
lret
ljmp
test
aad
into
outsl
jle
cmp
xchg
imul
cmp
pop
push
aam
sahf
lret
hlt
cmp
mov
mov
jmp
xor
enter
enter
hlt
mov
repz
and
stc
mov
mov
push
pop
xor
adc
and
call
xchg
mov
mov
sub
mov
repz
ljmp
dec
mov
pop
jecxz
sbb
inc
shlb
mov
mov
mov
iret
sub
cmp
pop
aad
ds
addl
cmpl
stos
jmp
cld
push
adcb
cmpsb
ret
out
enter
movsb
mov
dec
ret
daa
xchg
stos
test
pop
sub
orl
mov
in
loop
popa
xor
and
gs
jns
lret
mov
inc
rcrl
push
hlt
mov
and
cmp
ret
mov
stos
loope
rcrl
mov
jns
or
iret
mov
mov
je
push
fidivs
fcomps
jle
push
nop
jecxz
add
cmpsb
add
pop
pop
xor
ljmp
dec
and
notb
pop
jbe
add
lods
lds
in
mov
lock
fdivrs
mov
js
gs
inc
sbb
mov
add
add
outsl
icebp
mov
adc
aam
mov
aam
cmp
fistl
fmull
lahf
mov
xchg
dec
loopne
jnp
push
push
mov
xchg
lock
push
pop
and
in
inc
fsubp
push
outsl
inc
test
aad
xor
pop
ja
cli
out
pop
outsl
push
lods
cmp
shlb
sahf
out
mov
lret
push
idivl
sub
jnp
xor
in
inc
inc
mov
pop
mov
div
jno
aad
push
cld
hlt
add
mov
popf
or
bnd
jae
push
ss
sbb
mov
pushf
jb
xchg
dec
hlt
cwtl
dec
pop
xchg
lea
sbb
jp
adc
ja
pusha
sbb
cltd
jg
adc
in
xchg
imul
fwait
mov
adcl
test
xchg
cwtl
scas
shll
out
mov
repnz
mov
xor
repnz
out
out
or
dec
jae
sub
xchg
or
jo
aaa
mov
jmp
js
popf
stc
ret
out
or
js
leave
lcall
fcompl
ljmp
lds
cmp
dec
dec
cmp
push
mov
or
pop
test
inc
inc
addr16
shll
iret
imul
adc
cmp
gs
pop
push
inc
mov
mov
leave
mov
ja
or
subb
stc
or
dec
add
xchg
inc
jb
inc
mov
shrl
pop
ja
jae
add
in
mov
sbb
or
and
dec
mov
push
or
je
out
sub
insb
add
ljmp
aad
pop
mov
jo
sub
insb
aam
mov
and
fdivrl
xor
xor
dec
sub
inc
sub
stos
fs
pop
jnp
pusha
mov
bound
mov
int
rcll
push
cmp
out
lods
cmp
dec
es
pop
int
imul
arpl
ds
jmp
mov
sar
loope
sub
imul
rorl
das
insl
mov
out
je
fisubrl
mov
xchg
pop
in
jecxz
scas
jns
dec
mov
push
sub
add
fdivs
insl
adc
xchg
popa
outsb
pop
clc
mov
cmc
ss
mov
xor
ds
ret
sbb
insb
fisttps
sub
repnz
inc
or
dec
sub
std
xchg
sub
xor
ljmp
mov
fadd
sub
push
inc
insb
nop
pop
testl
mov
push
gs
xor
std
sbb
xlat
xlat
add
shlb
sahf
aas
sub
pop
inc
dec
ret
data16
ds
cltd
push
cs
ss
sbb
aas
sbb
les
xor
ficoml
mov
add
add
mov
push
and
xchg
repz
and
gs
enter
jno
and
push
pop
push
dec
enter
mov
mov
mov
inc
pop
sahf
repnz
inc
into
xchg
mov
cmp
push
mov
sbb
pop
jb
ret
loop
mov
xchg
inc
out
add
pushf
sub
fisubl
mov
sub
xchg
fidivrs
add
adc
jmp
mov
push
sbb
in
mov
in
rorb
mov
rclb
daa
or
ja
es
pop
test
adc
mov
mov
in
or
arpl
sahf
addl
adc
nop
jae
cmc
mov
loop
out
and
insb
cmpsl
aad
sti
push
mov
cmp
enter
xor
cmp
cli
jae
adc
jbe
jg
arpl
push
add
rorb
dec
jo
cmp
cmp
lock
aas
inc
cmp
sbb
orl
or
arpl
test
fs
push
inc
xor
xchg
jb
imul
xchg
iret
xchg
loop
pushf
adc
and
and
ss
inc
loop
push
mov
lods
fsubl
jg
inc
sbb
pushf
int3
loope
push
fmull
mov
and
mov
or
push
cld
cmp
roll
cmpl
add
adc
mull
mov
sbb
jl
push
xlat
rorb
insb
sbb
mov
push
imul
neg
fistpll
cltd
sbb
pop
test
sbb
cmp
dec
fcmove
inc
jae
sahf
in
aas
int3
fwait
ljmp
inc
jg
or
popa
mov
cmp
and
push
insb
rol
shll
inc
mov
cltd
outsl
add
or
pop
cmp
iret
test
lods
mov
rorb
mov
xchg
in
pop
repnz
pop
dec
adc
or
adc
xor
sbb
pop
mov
std
mov
sub
in
mov
inc
imul
jl
adc
pop
mov
pushw
inc
pop
jbe
mov
cmp
leave
das
fidivs
jne
int3
movsb
and
push
filds
out
ja
jne
dec
push
mov
arpl
xchg
arpl
popa
push
xchg
aad
data16
mov
jb,pt
mov
mov
lea
lods
enter
stos
out
jmp
hlt
inc
sbb
or
mov
fs
jmp
rcrb
jae
sub
xrelease
add
dec
mov
sbb
out
adc
jns
xchg
fsubrl
mov
stc
movsb
ljmp
out
mov
shlb
jno
jo
in
add
cld
pop
mov
stos
insb
and
cmp
lods
cs
rorl
fcmovne
aad
test
lods
sbb
lds
cmp
popa
sbb
cmp
ja
sahf
add
cmp
dec
call
and
insl
mov
notl
cmc
lret
push
adc
fidivrs
add
jl
cli
ret
sub
dec
mov
in
sbb
ds
jnp
out
setp
scas
or
in
ja
out
adc
mov
xchg
inc
push
add
imul
popa
in
shll
sub
mov
xchg
fcoms
shlb
mov
sbb
pusha
pop
jecxz
xor
jne
push
aas
cli
pop
lds
out
mov
imull
into
loope
icebp
shr
mov
and
icebp
sbb
shrb
sbb
jo
leave
push
and
lret
sahf
incl
mov
imul
jno
pop
xor
mov
jbe
aam
mov
add
lds
das
pop
dec
dec
mov
jg
mov
mov
cld
or
lock
mov
sub
mov
cmpsb
cmp
int3
jmp
mov
stc
std
fidivl
xchg
cs
imul
mov
xor
xchg
test
add
rorb
ja
pop
jp
mov
mov
fisubl
fs
outsb
mov
cwtd
iret
adc
imul
mov
sahf
lds
pop
push
repnz
jns
shlb
sarb
dec
addr16
loop
cltd
xor
arpl
dec
aas
out
sbb
sahf
std
fwait
pop
mov
addl
sub
in
mov
fnsave
and
lds
dec
push
inc
inc
bound
scas
loopne
out
push
jb
insl
adc
xor
adc
inc
xlat
lock
out
fwait
mov
cmp
sub
add
icebp
cld
iret
jecxz
dec
push
push
pop
shrl
cs
cwtl
imul
push
pop
mov
sub
insl
push
in
and
adc
xabort
mov
mov
pop
inc
sub
or
std
add
and
push
push
xor
mov
xchg
adc
imul
cmp
cmp
or
repz
sar
jmp
js
cld
jmp
in
cltd
rolb
jp
xor
add
xor
mov
cmp
fcmove
outsl
xchg
sbb
cltd
jbe
xor
call
xchg
iret
mov
and
outsl
sti
jle
xchg
pop
push
push
stos
mov
icebp
std
aad
aam
pop
dec
pop
push
add
dec
xchg
jae
mov
push
sbb
sti
and
jge
jmp
xor
dec
dec
icebp
popf
ret
inc
mov
sbb
push
sarl
sub
mov
lret
in
in
les
mov
dec
xchg
xchg
lret
repz
cmpsl
ds
repz
outsb
mov
in
iret
loop
cmpl
outsb
add
mov
jp
cmp
dec
dec
mov
xor
inc
das
cmp
mov
maskmovq
testl
pop
push
sahf
fxam
mov
stc
mull
cld
movsb
fwait
test
and
ss
or
mov
push
pushf
daa
out
cmpsb
sbbl
xchg
fwait
mov
push
sahf
cs
aas
lahf
mov
push
movsb
lret
and
push
out
mov
jecxz
sti
ljmp
das
push
imul
out
fstps
pop
push
jnp
decl
sbb
loope
sbb
mov
mov
mov
sub
jl
sub
and
xchg
and
inc
cmp
cmp
aas
cmc
inc
aas
mov
xchg
and
pusha
or
addr16
gs
jmp
int
mov
fistps
hlt
je
cmp
out
dec
cwtl
pop
push
inc
xor
dec
lret
jecxz
or
addr16
imul
dec
frstor
flds
jl
pop
adcb
add
fldt
add
inc
xor
mov
stos
mov
pusha
out
sbb
stos
fdivrs
inc
mov
lcall
push
bound
inc
addr16
push
jo
pop
sti
jle
and
or
sbb
int
ficoml
jl
hlt
and
dec
mov
aam
xor
mov
aas
fs
lds
sti
dec
out
das
mov
mov
xchg
in
sarb
jle
sbb
dec
mov
int
cmpsl
lahf
mov
inc
push
inc
cmp
inc
outsl
fstps
adc
aas
es
sub
sbb
ja
jne
fidivrs
pop
mov
jmp
mov
inc
xor
lds
inc
push
into
mov
sub
incb
pop
push
mov
in
push
sbb
insb
mov
movsl
loopne
subb
cmp
add
mov
outsb
jge
jae
or
lds
lods
loopne
outsb
test
roll
jno
repz
xor
js
xchg
into
and
xchg
ror
lds
dec
lret
je,pn
mov
cmpsb
xchg
flds
outsl
insb
sub
jmp
fdivrs
mov
orl
scas
adcl
insb
call
pop
sbb
lcall
xabort
jno
inc
arpl
cmpsl
xchg
xor
daa
lods
leave
sub
cmp
inc
and
push
and
add
fiadds
and
fsubrs
adc
mov
jl
sub
out
and
push
movsb
scas
pop
mov
aad
inc
xchg
pop
sub
and
ss
mov
and
xor
xchg
xor
or
sbb
or
arpl
push
mov
lods
sysenter
sub
dec
push
xchg
mov
cwtl
hlt
xrelease
xchg
sub
call
xchg
stc
pop
ficoms
inc
xor
sub
push
xor
mov
add
andb
inc
js
cmp
lock
push
dec
xchg
out
push
out
fs
in
loope
nop
gs
inc
xor
push
cwtl
orl
mov
cmpsb
rcrb
or
xlat
dec
fadds
outsb
lods
xchg
xchg
sub
int3
mov
xor
mov
popf
cmp
xchg
xlat
jge
sub
adc
or
xor
lahf
add
mov
cmp
repz
mov
aad
je
movsb
rorl
into
test
test
test
int3
push
data16
mov
test
and
enter
jns
push
roll
sub
cmp
mull
xor
stos
mov
push
inc
push
or
js
sub
cltd
xchg
sub
arpl
outsl
adc
rcrb
cld
cmp
push
adc
aas
fs
or
pop
pop
mov
lods
mov
aad
add
aad
lret
mov
push
dec
jae
or
adc
cmpsb
nop
lret
out
push
test
mov
stc
mov
xor
int3
outsb
xchg
enter
mov
sbb
pop
out
mov
fldl
testb
cmp
xor
fwait
je
pop
shrl
pop
cli
insb
mov
pusha
lods
xor
and
aas
ss
cmp
not
into
das
shrl
pop
jae
xor
push
es
xor
cltd
dec
xchg
jnp
or
jno
and
insl
pop
imul
dec
sbb
mov
call
fs
divb
cmp
mov
insb
daa
ss
push
mov
pop
mov
and
inc
sbb
inc
nop
cs
in
out
incb
sbb
rclb
mov
aaa
jnp
pop
inc
xor
cli
lods
ss
cmc
cmp
dec
and
in
sub
xor
dec
lock
pushf
mov
sbb
scas
in
or
pop
and
dec
sub
rorl
ret
cmp
xor
mov
jne
decb
cmp
testl
mov
rolb
enter
jl
mov
mov
movsb
mov
or
pop
dec
adc
ret
jne
cmp
adc
out
xor
pop
cmpsb
mov
sbb
imul
cmc
call
inc
lret
fstpl
pop
sbb
sub
jl
lcall
lahf
sbb
pop
je
pusha
int3
cmc
adc
fists
ficomps
iret
rolb
push
jbe
orl
lahf
pop
jae
and
inc
aam
aam
or
js
and
cmp
sbb
fwait
push
or
pop
mov
push
dec
xor
mov
aad
loop
clc
jl
cmp
ds
in
inc
cmpsl
pusha
mov
cmp
and
and
adc
imul
push
mov
outsl
jo
fwait
pop
jnp
je
jb
jbe
mov
cmp
push
les
adc
xor
aaa
xor
dec
cmp
cmp
out
xor
jmp
jnp
fs
mov
jne
mov
xchg
shlb
test
xchg
sti
dec
repz
mov
pop
stos
daa
dec
in
jo
jns
xor
rcrb
jne
and
paddusb
xchg
mov
sahf
shll
sub
lcall
adc
mov
lret
popf
inc
movsl
and
mov
lret
mov
jbe
xor
pop
ss
adcb
shl
push
push
xchg
push
sub
pop
scas
push
adc
cmp
fldcw
adc
add
push
lcall
inc
inc
or
mov
fwait
xlat
push
mov
pop
es
shlb
mov
pop
test
lock
mov
jmp
jo
outsb
and
push
jbe
stos
pop
sti
fsubrp
jno
jne
mov
movsl
aad
loop
jle
hlt
cmp
jmp
addr16
mov
mov
xor
add
cmpsl
push
push
and
aad
aaa
cwtl
add
fstps
push
lret
and
lods
pop
je
test
mov
bndldx
ljmp
dec
pmaxsw
adc
cmpsl
sahf
add
and
xor
test
cltd
dec
sub
jne
mov
adc
xor
sahf
nop
ss
imul
repnz
inc
subl
into
out
mov
push
decl
mov
fisttpll
outsl
push
je
stc
and
ljmp
pop
dec
sbbb
daa
inc
sarl
psubsb
jno
jge
sbb
xor
dec
sbb
pop
inc
bound
sbb
ficoms
insl
daa
pop
aaa
imul
and
cld
movsb
sub
jecxz
and
pop
stos
xor
xchg
jbe
push
dec
cld
stos
cmp
inc
pop
scas
bound
enter
mov
lods
loop
daa
pop
push
repnz
shll
push
test
push
out
rcll
movzwl
adc
ret
push
dec
xlat
fwait
dec
out
vpsllq
stos
xchg
scas
pop
adc
push
cmp
mov
aaa
adc
cmc
add
inc
in
sub
cmp
sbb
dec
pop
std
shrl
jl,pn
xchg
out
inc
imul
xor
xchg
das
mov
pop
lahf
icebp
int
ficoml
mov
xor
adc
push
inc
sub
ja
jae
push
mov
ret
add
mov
add
or
iret
pop
cwtl
mov
mov
xchg
mov
cli
rdtsc
movsl
imull
sbb
cmp
xor
ss
mov
lea
stos
cli
xlat
filds
cmp
sub
cmpsl
scas
sahf
pshufw
inc
in
cmc
aas
sub
sbb
pop
mov
cmc
nop
add
arpl
inc
pop
mov
jbe
mov
call
dec
mov
mov
dec
mov
mov
or
push
fwait
and
add
inc
add
sub
pop
jmp
push
lcall
std
and
dec
cmpsl
hlt
xor
mov
stos
pop
pop
dec
addr16
and
std
jno
cmp
test
dec
mov
cmp
adc
enter
imul
or
xor
sbbb
fsubs
or
fcomi
sub
mov
mov
jp,pn
outsl
sbb
pushf
jno
push
das
addr16
cmpsb
aad
push
stos
mulb
fdivs
out
fstpl
cmc
in
inc
sub
adc
sbb
cli
ret
xor
loopne
dec
imul
in
cmp
xlat
subl
fidivrl
gs
xorl
iret
roll
ffreep
pop
push
add
ds
jnp
daa
cld
fidivl
xchg
dec
xor
xchg
lret
fs
push
inc
mov
test
jne
mov
test
mov
rcrb
xor
pop
fmull
test
jno
xor
pop
jg
dec
sbb
cmp
aaa
movsl
mov
mov
xchg
mov
push
loop
loop
inc
movsl
xchg
xchg
testb
faddl
ljmp
lods
cmp
popf
mov
fcomip
out
dec
ret
mov
dec
sbb
clc
enter
jae
inc
movsl
xor
dec
mov
mov
add
jo
inc
jno
jo
imul
jne
out
stc
in
clc
pop
aam
pop
mov
mov
loopne
lock
icebp
xor
push
mov
mov
and
lret
and
dec
mov
int3
jl
adc
adc
sub
pop
sbb
fildll
jp
mov
add
xchg
scas
iret
mov
inc
push
push
lahf
jnp
rcl
out
mov
adc
xorb
shrl
and
aas
jnp
jecxz
push
insb
ds
add
cli
pop
clc
aaa
xchg
scas
push
dec
inc
fs
inc
xor
dec
mov
daa
daa
hlt
int
dec
cwtl
test
sub
scas
inc
js
dec
inc
pop
fmuls
je
mov
xchg
mov
nop
ret
xor
out
mov
jge
outsl
push
mov
scas
data16
add
adc
test
push
cltd
ja
jbe
fisttpl
pop
push
mov
mov
hlt
nop
mov
lahf
add
mov
adc
xchg
push
icebp
fwait
sub
sti
push
push
and
mov
outsb
sbb
shll
out
loope
adc
lea
mov
and
push
inc
sahf
cmc
fisubs
and
ja
popf
notb
arpl
scas
jmp
dec
pop
pop
decl
jno
push
inc
imul
lret
lcall
arpl
and
jle
push
adc
out
push
incl
imul
or
sbb
push
cmpb
dec
sti
or
mov
inc
mov
insb
mov
cmpsl
out
popf
and
lahf
adc
or
insb
icebp
pushf
pop
push
aad
out
xor
fadds
ss
out
adc
andb
xchg
dec
leave
out
popl
mov
adc
cmp
mov
fbstp
lahf
les
loope
adc
xor
mov
add
pushf
dec
out
add
ret
xor
out
inc
sbb
pushf
lock
lahf
dec
jns
inc
sub
test
pop
fiaddl
mov
pushf
xor
cltd
inc
inc
movsb
les
inc
cmpb
sbb
dec
jmp
ds
dec
mov
inc
adc
mov
aas
cmpsb
push
cmc
mov
out
inc
ja
inc
fwait
mov
je
add
out
cld
in
in
push
push
clc
sti
jmp
xchg
test
inc
xlat
adc
lret
in
dec
push
fidivs
and
xor
daa
std
les
mov
and
and
mov
push
mov
roll
cwtl
bnd
xchg
pop
push
movl
xchg
in
add
fimull
test
or
das
aam
cmp
mov
jge
jns
addl
xchg
cwtl
mov
clc
movl
ljmp
cwtl
es
xor
sti
adc
pop
inc
or
das
mov
addr16
mov
cmp
xor
shlb
ret
xlat
mov
js
push
adc
in
loope
bt
clc
xchg
popf
sti
fadds
fidivs
jb
mov
pop
push
sahf
inc
xor
jge
and
stos
mov
lock
mov
inc
mov
pop
mov
mov
dec
sti
outsb
add
add
test
cmpsl
xchg
sahf
inc
xor
fcoml
loopne
push
pop
mov
sbb
mov
pop
test
push
cmp
xlat
pushf
xor
fldenv
or
inc
cmp
cmpsl
loop
cmp
or
iret
mov
addr16
jl
xor
js
mov
fstps
pop
fisubl
or
shll
data16
and
out
adc
mov
shll
cmp
jns
scas
add
fsincos
fsts
or
inc
pop
pop
inc
and
dec
daa
stos
or
pop
push
add
into
mov
push
sbbb
jle
loope
repnz
add
push
and
pushf
stos
ret
sarb
sub
scas
enter
bound
push
loope
xchg
xor
jnp
push
lods
aam
lock
mov
cmp
fsqrt
dec
leave
xlat
insl
lcall
icebp
cmp
dec
mov
sbb
aas
shll
and
and
lcall
mov
and
mov
add
jecxz
std
cmp
arpl
daa
push
adc
push
mov
mov
int
lret
or
jp
mov
add
jge
mov
repnz
mov
js
xchg
add
sbb
adc
loop
push
mov
punpckhdq
daa
cmpsl
jo
adc
xchg
jne
mov
xor
dec
arpl
call
and
lds
dec
movl
lds
jle
fdivr
inc
in
jnp
xor
mov
cld
fdivs
out
and
pop
mov
sub
adc
pop
idiv
loopne
lods
mov
fidivs
mov
pop
mov
push
subl
cmp
jp
cmc
xchg
test
fidivrs
mov
repnz
fisubrl
adc
sub
or
mov
shl
xor
ret
jmp
lret
leave
daa
or
gs
test
push
mov
imul
jp
mov
cmpsl
sbb
cmp
fwait
jne
mov
cld
aad
xchg
cmp
xchg
mov
lcall
adc
push
inc
add
push
frstor
sub
xor
arpl
cmp
subb
icebp
mov
cmp
sub
adc
jmp
mov
inc
aaa
mov
outsb
insl
sbb
aas
and
jl
test
pcmpeqw
sbb
arpl
hlt
test
pusha
xor
cltd
mov
jnp
or
and
mov
sub
or
jne
subl
outsb
repz
shlb
clc
mov
pcmpgtd
xor
movsl
inc
jge
negl
dec
pop
dec
out
fwait
cld
roll
movsl
frstor
int3
cmp
push
jnp
jnp
cwtl
fidivrs
and
das
pop
int
sbb
divb
jge
or
push
push
mov
jl
jg
fistpll
shlb
mov
or
int3
xor
cmpsl
fs
lahf
clc
sub
adc
adc
or
mov
dec
test
scas
popa
sbb
mov
cmp
dec
inc
dec
and
sub
push
adc
mov
lock
loop
scas
addr16
movsb
push
lret
data16
dec
nopl
pop
pop
leave
scas
aaa
inc
es
mov
adc
push
mov
xchg
or
xchg
inc
shl
push
adc
fdivs
inc
dec
in
int
push
mov
cmpsb
xor
mov
adc
add
xor
pop
cli
incb
push
loope
or
or
cmpsb
mov
iret
mov
mov
or
push
jnp
sbb
mov
dec
xor
cmpsb
cmpsl
sub
jnp
neg
daa
mov
mov
sub
push
in
mov
scas
sbbb
mov
out
jge
pushw
jl
pop
push
ficoml
dec
mov
ja
mov
or
out
lahf
pop
lcall
xlat
xchg
push
lret
pop
jns
adc
shl
stc
mov
cmp
pop
dec
hlt
push
jp
ficoml
idivl
mov
imul
arpl
mov
xchg
sbb
sahf
into
mov
fwait
jns
xchg
xor
test
mov
sahf
jae
mov
push
fiadds
adc
push
sahf
push
std
scas
mov
sbb
pop
imul
lcall
xor
xor
xchg
push
in
mov
or
add
gs
mov
mov
or
sti
dec
call
inc
repnz
orl
out
adc
sbb
push
mov
xor
mov
cmp
les
or
repnz
sbb
adc
lods
pop
fidivs
push
shll
adc
jno
lret
sahf
mov
popa
push
add
xchg
sbb
sbb
mov
adc
imul
lret
gs
je
cmpsl
mov
notl
jnp
mov
aad
cmpsl
lcall
xor
pusha
cmp
enter
adc
push
jp
in
lcall
inc
mov
pop
and
push
test
pop
and
in
std
lods
inc
bound
xchg
aaa
xchg
je
inc
jmp
mov
fs
dec
movsb
xchg
or
cmpsb
push
lret
fidivl
dec
sub
sub
stos
pusha
ds
repz
mov
dec
pop
or
mov
inc
cmpsl
push
cmp
cmp
jmp
push
mov
ljmp
mov
or
and
dec
cwtl
leave
idivl
jno
mov
negl
dec
inc
dec
jo
enter
gs
inc
rcrl
jle
jns
jae
mov
inc
fsubl
sbb
pop
icebp
shl
sub
cltd
pop
sbb
cmp
insb
shlb
pop
fnstcw
aaa
fdiv
pop
in
pop
pushl
jno
mov
daa
gs
stc
nop
jns
int3
stc
mov
adc
dec
bsr
negl
ljmp
or
outsl
int3
das
repz
fistl
bound
loopne
pushf
mov
mov
aad
xor
ss
jmp
mov
mov
daa
sub
cli
imul
out
mov
jle
xor
add
adc
jl
idiv
rcr
pop
pop
jb
cld
xor
mov
repnz
and
or
out
sub
jae
out
adcl
jno
jno
orb
ljmp
fisttps
sahf
mov
add
daa
sub
push
inc
xor
movsl
rcl
mov
lahf
aaa
push
jg
mov
xor
pop
shlb
dec
mov
paddusw
scas
scas
mov
jle
movsb
mov
pusha
cmp
shl
mov
inc
je
mov
sub
or
in
rolb
pop
stos
or
rcrl
sbb
push
dec
mov
insl
fwait
cmp
sub
add
fsubr
adc
aaa
jp
ret
out
test
inc
xor
ljmp
fistl
imul
mov
loope
mov
les
fwait
mov
clc
dec
div
mov
insl
lahf
bound
dec
lret
lods
bound
mov
sahf
jecxz
push
in
xor
cmpsb
cwtl
daa
cld
push
rcrl
enter
mov
mov
fadds
ss
and
xchg
dec
pop
stos
jmp
cli
repnz
xor
nop
push
ljmp
out
mov
adc
repnz
inc
nop
ss
lahf
xor
loope
sti
pop
ja
fucomip
insl
adc
arpl
cmp
das
imul
and
pop
addr16
mov
movsb
inc
inc
cs
inc
in
and
les
mov
sub
push
scas
dec
push
rorl
jg
repnz
in
mov
mov
aad
test
pusha
mov
push
jecxz
std
hlt
pop
xor
daa
sbb
loopne
xor
adc
pop
xchg
das
std
xchg
lcall
imul
mov
sahf
jp
in
repz
sbb
mov
lcall
xchg
mov
xor
add
jg
push
adc
push
insb
aas
cmpb
xor
add
mov
inc
fistpl
jo
outsl
pusha
push
push
mov
movsl
jo
fistpll
ret
xorl
stos
hlt
mov
fildl
sbb
lret
insl
stos
mov
mov
aas
les
sub
adc
pop
shrb
insb
xchg
add
pop
loope
xchg
out
adc
xor
xor
test
add
jle
jg
mov
sahf
pop
and
mov
or
enter
push
out
pop
mov
aas
loopne
dec
in
push
les
jne
icebp
outsb
repnz
fidivs
dec
shll
btc
add
push
dec
test
fwait
sahf
mov
je
jmp
and
aas
mov
push
cltd
jo
dec
repnz
clc
mov
adc
xchg
xor
lea
clc
sbb
maskmovq
imull
add
in
dec
push
adc
dec
test
pop
shlb
pop
push
cltd
js
xlat
test
pop
shlb
arpl
xchg
cmp
dec
dec
hlt
xchg
mov
scas
pop
lret
lahf
aaa
push
push
xchg
lds
ja
repz
mov
or
or
ja
jne
sbb
xchg
addr16
and
call
pop
les
inc
mov
mov
vphsubdq
jns
lods
pop
jne
fwait
out
xchg
jo
les
mov
or
pop
xor
mov
mov
shll
in
jnp
daa
adc
movsb
aad
cmpsl
out
mov
nop
stc
sub
nop
ss
in
add
into
sub
cmp
mov
xchg
in
cmp
adc
adc
adc
dec
pushf
lret
mov
sub
ror
jmp
mov
cmpsb
inc
mov
push
out
cmp
and
mov
or
push
mov
nop
out
cmp
cmpb
adc
adcb
dec
insb
cmp
stos
dec
repnz
sbb
add
jp
xor
mov
cli
fwait
in
inc
pop
frstor
notl
test
and
addb
cmp
fdivrl
cmp
leave
icebp
jecxz
je
mov
push
loopne
out
dec
xor
cltd
sub
outsb
aad
filds
fst
mov
jmp
jecxz
sbb
adc
pop
cmc
cmp
jb
jbe
push
mov
jnp
insb
lods
dec
jo
aas
mov
faddl
add
aad
pop
adc
mov
dec
cmpsl
jecxz
xor
push
scas
xor
pop
xchg
xor
jle
outsl
mov
lahf
push
mov
inc
push
jge
cwtl
sbb
push
movsb
and
out
imul
jae
repnz
imul
cmp
sub
pop
hlt
pop
stos
push
call
lcall
xor
pop
sub
les
ret
inc
outsl
push
cmp
cmp
js
dec
jno
test
loopne
fadds
js
xor
and
pop
xchg
shll
rcrl
sbb
or
inc
jl
mov
add
std
xchg
out
adc
xorb
arpl
cs
sub
add
jb
pop
jo
mov
js
jns
sub
inc
ret
lods
add
aam
mov
movsl
aaa
inc
inc
popa
jb
or
and
sbb
mov
outsb
stos
cld
lods
jbe
sub
scas
cmp
pop
fdivs
iret
psrad
repnz
cmp
jnp
loope
out
pop
mov
or
xchg
std
push
insb
mov
sti
sub
and
mov
mul
test
shlb
add
or
adc
test
and
push
ret
jle
and
pop
push
enter
and
sbb
xor
int
add
cmpl
les
or
repz
or
pushf
shl
sarb
add
insb
mov
or
nop
sub
mov
jae
mov
mov
in
push
rorl
daa
xor
cmp
jg
ja
addr16
fcomps
jne
push
jb
inc
or
adc
mov
fcompl
xchg
cmp
mov
dec
or
inc
mov
xor
push
lock
pop
add
jp
mov
jae
lret
sbb
aad
shll
push
or
lea
xchg
push
imul
stc
fsin
ljmp
clc
fisttpll
inc
jge
sahf
sbb
and
shrl
xchg
xor
insb
cmp
and
cmp
dec
cmp
popf
inc
add
push
xchg
sub
mov
add
push
mov
jns
push
or
xchg
or
arpl
jno
test
in
xchg
push
cmp
das
dec
adc
xchg
icebp
rclb
lcall
jae
mov
shlb
dec
jbe
pop
adc
dec
push
int
lock
sub
mov
aas
jg
sbb
pop
sahf
cmp
mov
add
jb
pop
aaa
pop
adc
lock
lods
cmp
sub
mov
xlat
xor
out
nop
inc
push
ror
ret
rcrl
mov
jns
and
adc
iret
cwtl
or
dec
in
jne
dec
das
outsl
jnp,pt
enter
dec
pop
mov
mov
sahf
stc
pusha
loope
inc
inc
pop
dec
test
dec
mov
jno
fwait
cmp
leave
pushf
jmp
into
xor
les
into
fdivs
mov
gs
sbb
cld
mov
lds
clc
cmc
xchg
adc
repz
sbb
pop
iret
pop
cmp
mov
repnz
cs
rcl
fildll
cmp
int
out
cmp
ljmp
mov
das
popa
fisubl
pop
push
std
add
and
push
xchg
pop
adc
iret
mov
sbb
sbb
adc
movsb
mov
sub
sbb
int
ljmp
aaa
into
mov
test
sub
mov
jo
pop
push
push
loopne
xor
rorl
fs
dec
fdivr
mov
jecxz
test
jnp
popa
orl
jno
dec
sub
jne
cld
adc
hlt
outsl
mov
outsl
ja
xor
add
ja
pop
add
mov
xchg
enter
push
or
lcall
jns
push
mov
nop
stos
push
test
cmp
cmp
push
inc
rorb
mov
adc
mov
adc
cmc
daa
sub
addr16
outsl
movsl
lock
inc
pop
mov
push
xor
push
adc
xor
test
jp
inc
xchg
testl
add
xchg
mov
cwtl
sub
das
pop
das
cmp
arpl
sbb
mov
xchg
jmp
inc
sub
scas
fwait
scas
into
lock
lds
psubd
fs
xchg
jl
rcrb
push
mov
cmp
add
pop
add
in
gs
lret
jnp
js
jl
or
cltd
push
mov
sub
out
sbb
incb
data16
rcrl
or
jg
in
xchg
xchg
add
mov
int3
test
addr16
push
push
loope
and
or
inc
fdivrl
bound
mov
lods
jl
and
ficomps
je
push
pusha
imul
mov
das
sti
rcrl
add
xchg
or
cmp
lods
xchg
aaa
mov
jl
fld
push
repz
cmpsl
pop
sarl
imul
mov
inc
push
test
cmp
mov
push
mov
add
jne
pop
cmp
mov
dec
adcb
fchs
xchg
loopne
jmp
cmp
sbb
mov
adc
sub
inc
inc
shll
clc
dec
clc
stc
mov
in
mov
lcall
xor
and
jmp
pop
mov
or
mov
mov
inc
pop
adc
mov
pusha
push
mov
push
test
data16
mov
pmaxub
fbstp
pop
and
aaa
hlt
in
cmp
gs
pusha
and
pushf
ss
in
push
aas
mov
xor
lahf
lds
arpl
aaa
jp
mov
mov
lods
aad
pop
js
fiadds
add
popa
push
and
xor
push
repz
sub
mov
xchg
sub
xor
insb
xchg
inc
pop
pop
pop
mov
in
mov
lret
push
jnp,pt
push
sub
mov
fwait
int3
mov
and
gs
mov
inc
aad
jbe
shl
jno
xchg
in
orl
xor
dec
or
loop
xchg
cmp
cmc
push
jns
js
popa
bound
cwtl
jp
pop
outsb
fwait
jne
incl
jecxz
nop
gs
mov
xchg
and
jg
shlb
orl
ljmp
mov
rclb
fucom
sub
clc
inc
leave
ljmp
jle
jo
enter
out
inc
mov
sbb
nop
movsl
cs
data16
movl
adc
adc
std
movsl
cltd
sar
lahf
ret
adc
pop
adc
roll
clc
cmp
sti
roll
mov
loopne
push
and
or
mov
test
gs
xchg
aas
jg
scas
insb
loopne
rorb
cmp
mov
xlat
push
xchg
xchg
sub
cld
mov
sub
jmp
int3
or
add
int
nop
lahf
sbb
loope
pop
daa
pop
addr16
cmp
fimull
dec
pop
enter
lahf
imul
sub
xchg
jge
cmc
push
loop
ja
xchg
fisttps
cld
push
xchg
enter
cmpsb
fmuls
pop
das
and
adc
sbb
xchg
mov
inc
cmpsl
inc
sahf
shll
add
out
imul
cs
mov
xchg
pop
mov
enter
fstpt
or
cmp
jno
dec
adc
mov
mov
or
imul
rol
jae
xorb
xor
lret
out
lods
repz
loope
int
jle
aas
stos
repnz
push
pop
or
or
in
bswap
outsl
repz
pushf
pop
mov
leave
jb
loope
cmp
jle
mov
mov
mov
xchg
xorl
dec
fisubs
imul
fstps
enter
or
push
imul
inc
mov
jb
mov
cmp
inc
xchg
inc
ret
mov
ret
arpl
xlat
mov
into
jo
sbb
ss
jp
mov
decb
aas
lock
mov
xor
lahf
das
mov
movsb
inc
outsl
pop
cmp
loopne
xor
add
xchg
repz
stos
lea
xor
es
xlat
push
sub
jnp
add
rcrb
andl
inc
sub
rcl
xchg
xchg
mov
lret
add
int
pop
nop
sub
xorl
mov
gs
jns
xor
lcall
jno
fsubrl
xor
fucom
stc
pop
jp
mov
pop
or
stos
inc
std
push
push
adc
pop
stos
fidivl
adc
jl
jle
aad
les
cltd
arpl
cltd
dec
inc
push
pop
jmp
push
iret
lahf
loope
mov
dec
sbb
jbe
xor
pop
or
xor
stos
mov
adc
clc
push
les
xor
fdivrp
and
cmp
cld
in
cmp
push
fidivl
or
adc
adc
aaa
sarb
das
sbb
enter
outsl
ret
cmp
fwait
sub
loope
scas
dec
mov
cmp
inc
incb
inc
stos
pop
mov
mov
addr16
lret
fst
cmp
jbe
push
jno
push
sub
xchg
push
mov
int3
dec
mov
dec
mov
inc
jns
fsubp
dec
cmc
mov
out
stc
add
loop
or
mov
mov
jecxz
and
xchg
insb
or
pop
fimuls
adcb
cld
icebp
int3
pusha
push
cli
dec
fsubrl
loope
aam
sar
icebp
aaa
jnp
inc
pop
js
mov
out
popa
mov
jecxz
push
jg
mov
aas
roll
shufps
ret
xor
adc
mov
jge
in
ror
and
test
mov
or
loope
dec
repnz
or
lock
adc
into
stc
pusha
stos
ret
lock
mov
sti
gs
pop
push
loop
jb
lea
inc
mov
pop
jg
nop
dec
lds
dec
add
jbe
add
dec
cmp
loop
push
jb
and
imul
jmp
jne
idivb
rol
xchg
gs
out
mov
in
pop
adc
rcrb
xchg
mov
in
imul
fisubl
mov
dec
data16
and
xchg
push
popf
add
push
popf
fwait
jne
inc
xchg
imul
pand
shrl
adc
das
mov
lock
sub
sub
in
clc
movsb
push
add
inc
fwait
sub
adc
pop
xor
and
dec
push
cld
lret
xchg
dec
xor
sar
jbe
dec
pop
push
jecxz,pt
push
ss
mov
pop
mov
cli
xchg
lods
xor
mov
shl
movsb
test
push
cwtl
mov
jp
stc
inc
sub
ret
pop
fs
cmp
rclb
test
jns
cmpb
pop
cmp
add
in
aas
jl
out
cmp
in
adc
pop
imul
loopne
outsl
andb
sbb
inc
and
mov
mov
inc
xchg
insb
pushf
cmp
xchg
outsb
lahf
push
dec
pop
inc
mov
test
cmc
es
imul
xchg
mov
lea
repnz
lods
mov
ds
mov
dec
aaa
dec
pushf
or
jb
test
aad
lret
les
lret
fs
sbbl
dec
cld
mov
cmp
enter
pop
iret
addr16
mov
daa
dec
or
sahf
xchg
js
cmp
jecxz
les
mul
test
bound
call
cmp
insl
sub
ds
dec
jl
xor
pop
mov
mov
pop
pop
inc
pop
and
adc
jae
std
jne
sub
add
and
sbb
push
imul
jbe
sti
fists
ret
push
test
hlt
loopne
xorb
xlat
jno
aas
jns
fldt
out
or
xchg
movsb
leave
jecxz
xchg
xor
in
lock
dec
sbb
popf
cli
adc
imul
scas
mov
mov
pop
insl
cmp
out
sbb
shlb
xor
sahf
or
pushf
or
mov
jl
sub
sahf
adc
insl
je
repnz
dec
inc
scas
pop
lods
push
int
mov
mov
push
clc
sub
mov
test
fdiv
add
ljmp
dec
sub
or
gs
cs
mov
pop
and
sbb
pop
mov
es
inc
push
inc
repnz
pop
jbe
inc
lahf
sti
xchg
daa
jg
adc
jl
mov
cmpsb
out
mov
loop
sbb
les
mov
push
arpl
inc
inc
ja
ljmp
inc
aaa
mov
stos
aaa
mov
stos
aam
dec
sub
inc
loope
popa
stc
xchg
dec
es
pop
mov
sub
sbb
cltd
loope
cmp
sbb
or
cld
es
mov
xor
scas
std
les
cld
xor
movsb
fcoms
fwait
and
adc
popa
add
push
iret
inc
pop
pop
add
cmpsl
clc
movsl
stc
jecxz
mov
or
mov
add
jge
push
cld
inc
mov
cmp
and
ljmp
jl
test
fistps
sub
addb
imul
mov
dec
addr16
jnp
cltd
int3
nop
cmp
mov
fwait
adc
ds
fdivr
lahf
cmp
fcmovnu
idivl
out
dec
sbb
je
insl
rolb
imul
stc
ja
xor
out
movd
cmp
mov
cli
inc
mov
xchg
or
lock
push
and
dec
push
or
testl
flds
out
mov
js
lret
push
xchg
cmpsl
fwait
xorl
cmpsb
xor
iret
je
push
and
dec
xchg
mov
xchg
sbb
add
push
dec
in
mov
push
xor
xor
mov
test
dec
add
xchg
or
add
lret
cld
cli
setb
lret
and
repnz
inc
mov
fistl
dec
lea
jo
jle
jo
fmul
mov
in
xchg
and
bound
js
or
xor
jge
addl
push
aam
xchg
fdiv
mov
jecxz
out
fs
fmulp
cmpsb
jg
mov
and
arpl
lock
xor
les
inc
loope
lock
ror
call
jbe
in
or
sub
sub
notl
movsl
inc
cmpsb
mov
icebp
jecxz
je
aam
int3
xor
mov
orb
jle
dec
and
test
cld
enter
mov
fs
rorl
xchg
sub
mov
popf
ret
std
ss
push
sub
cmpsl
xor
jmp
pop
or
shrb
mov
add
inc
xor
push
jnp
daa
mov
out
loopne
dec
aas
jl
lock
dec
insl
mov
out
dec
sbb
push
or
dec
and
cmp
in
cld
sbb
test
inc
fwait
and
xlat
shll
repnz
xlat
xor
stos
sbb
movsl
xchg
adc
xor
cmp
jne
adc
out
xlat
das
fsts
cld
daa
inc
xchg
mov
mov
std
test
lea
mov
dec
das
pop
data16
jg
test
loop
inc
add
sarl
dec
mov
and
ss
clc
mov
xchg
adc
sbb
pushf
pop
push
jmp
shrb
ret
aaa
lods
test
out
mov
xor
xor
stc
mov
cs
push
mov
decb
adc
add
in
mov
outsb
xchg
loope
in
xor
pop
mov
mov
push
or
arpl
or
dec
push
mov
icebp
jns
inc
mov
scas
fildll
sbb
js
or
xchg
das
xor
das
imul
inc
push
orb
aaa
dec
inc
pop
dec
ds
mov
adc
stc
dec
scas
ds
lcall
inc
xchg
xor
cmp
xchg
daa
ja
dec
icebp
dec
push
lret
xor
adc
pop
inc
divl
arpl
adc
pop
mov
mov
test
pop
mov
dec
adc
adc
cwtl
jecxz
pop
clc
in
mov
sti
push
pop
fdivp
mov
adc
dec
add
out
loopne
xchg
xchg
into
sbbl
scas
sub
lcall
out
pop
fimuls
mov
sbb
mov
rclb
sbb
cwtl
daa
jno
mov
test
ret
inc
sbb
pop
mov
mov
andl
int3
jae
repz
mov
jb
jmp
dec
loopne
jnp
mov
testl
xchg
shrl
stc
cltd
add
incb
and
sub
fsubrs
push
xlat
movsl
jmp
js
addl
sahf
dec
sbb
outsb
lcall
jp
mov
sti
push
rcrb
arpl
mov
mov
sub
mov
or
push
loopne
pop
sbb
in
fwait
out
sbb
push
imul
lods
jle
pop
lods
push
aam
adc
xchg
cmc
int
xchg
mov
xor
push
xchg
cwtl
testl
popf
rcll
aad
mov
cld
into
xor
adc
mov
cs
jecxz
cmp
stos
movlps
stc
cmpsl
sub
cs
ret
xchg
ja
test
pop
jg
inc
jl
mov
dec
inc
hlt
stos
push
xchg
hlt
xlat
lock
out
add
faddl
fisubrs
and
sub
aaa
adc
cld
mov
jmp
in
fstl
pop
pop
xchg
adc
push
push
jg
xor
xchg
in
jae
xchg
imul
stos
leave
xor
jns
js
mov
or
adc
int3
jo
lret
xorb
call
sbb
cwtl
es
dec
inc
mov
push
mov
sbb
jbe
xchg
hlt
cli
fsubl
adc
jns
cmp
jnp
fxch
jge
sub
pop
loopne
nop
dec
je
cmpsb
das
push
mov
leave
or
filds
inc
mov
rorb
and
jno
ret
movsb
dec
xchg
out
and
aad
pop
movsb
sub
fbstp
sbb
sbb
pop
xchg
or
sbb
xchg
stos
push
jo
pop
sbb
fs
test
ds
jmp
inc
int
es
add
mov
test
dec
mov
mov
icebp
mov
insl
or
xchg
shr
repnz
out
dec
repnz
fsts
add
sbb
popa
push
cmp
sahf
sahf
push
loopne
repnz
jle
decb
stos
fnstenv
inc
inc
sbb
sarl
lcall
stos
dec
mov
sbb
aaa
fstl
in
mov
fs
popa
cmp
xchg
ret
divb
push
pusha
outsl
test
out
inc
movsl
gs
inc
xchg
loopne
test
push
dec
pop
sbb
dec
fdivrs
pusha
add
dec
std
jae
nop
inc
jmp
leave
adc
aaa
aas
test
shl
push
xchg
jp
faddl
push
mov
cli
in
xor
add
and
mov
pop
pop
sti
out
pop
xchg
fstps
lahf
repnz
sbb
jne
test
stos
cs
loopne
lds
adc
cmp
shl
lods
repnz
pop
jg
imul
sbb
add
inc
inc
sbb
add
cld
sarb
add
dec
xchg
inc
test
lods
fisttpll
int
mov
in
xor
test
in
cmp
jno
jg
std
std
sbb
ja
outsl
std
fs
adc
and
push
pusha
mov
in
dec
sub
ljmp
test
jmp
shll
inc
pop
sub
stc
sbb
or
push
cld
ret
arpl
jge
cmc
pop
jl
and
push
xchg
and
in
imul
popf
fstp
jge
icebp
inc
cmpsl
std
lcall
cld
iret
mov
sub
jnp
fnsave
xchg
pop
out
pop
sub
in
into
xchg
insb
aaa
adc
sbbl
outsb
iret
outsb
scas
adc
scas
inc
outsb
inc
aam
or
fwait
pop
out
push
into
push
jp
mov
dec
add
jmp
sbbl
fildl
xor
gs
shlb
push
popa
shlb
xchg
in
rcll
sbb
aas
push
mov
inc
push
cmp
das
pusha
fsubs
gs
mov
test
in
mov
std
xor
mov
pop
xchg
movsb
mov
pop
push
mov
push
mov
jno
xchg
mull
mov
mov
std
sarl
cmc
and
adc
push
mov
sub
mov
xchg
daa
push
mov
xchg
popf
in
test
add
pop
pop
fldl
lea
push
dec
scas
dec
fbld
mov
enter
sbb
in
sub
stc
test
sub
or
fists
test
mov
sar
mov
mov
lret
jnp
inc
mov
push
cmpsl
fwait
push
mov
push
xor
xchg
daa
das
arpl
lret
js
sbb
lods
mov
xor
hlt
or
jmp
sbb
rorb
js
cmc
cld
push
mov
movsl
and
pop
push
ret
push
fnstenv
lahf
mov
aam
mov
xor
lock
push
or
popa
out
neg
into
shll
add
ljmp
push
and
dec
sbb
imul
imul
sbb
scas
leave
push
data16
fs
out
ja
mov
sub
cmpsl
xchg
or
shrb
repz
or
sub
mov
lret
jb
mov
lret
cmpsl
push
jnp
pop
pop
mov
adc
or
hlt
rcl
add
push
in
and
adc
cmp
out
lcall
fsubrs
roll
jo
pop
fcompl
or
call
xlat
jns
inc
mov
mov
scas
cmp
add
loopne
xor
fbld
cmpsb
pop
push
jns
xchg
jae
pop
xor
js
push
test
jns
add
iret
pop
pusha
or
pusha
leave
jl
daa
sbb
hlt
mov
inc
jo
or
push
pop
fxch
sbb
jno
lock
mov
sbb
inc
outsl
mov
cld
jecxz
outsb
xchg
jle
mov
pop
ss
movsb
dec
movl
sarl
nop
in
lea
inc
mov
hlt
and
sbb
repnz
and
mov
lret
mul
push
fcoml
inc
aad
xchg
sub
pop
iret
dec
push
int
aas
dec
adc
rorb
dec
sbb
pop
xchg
xchg
das
fsubr
pop
lahf
aaa
inc
mov
mov
mov
xor
jecxz
cmp
fbstp
push
xchg
mov
jp
sub
dec
xor
mov
fldt
mov
jle
mov
fsts
jns
dec
insl
test
fldl
jo
sub
push
dec
into
out
cwtl
cli
or
jbe
iret
notb
push
pop
dec
dec
add
xor
test
mov
add
outsb
inc
fidivs
daa
cmp
addr16
cmp
xchg
jge
mov
xchg
je
das
das
adc
xchg
xchg
push
adc
jne
jecxz
jae
add
js
in
nop
dec
sub
xor
cmp
frstpm(287
popf
loop
xchg
mov
push
addb
movsb
loope
jne,pn
xor
test
aad
jo
jae
sbb
mov
jp
std
sbb
jl
mov
jnp
ja
out
jo
lcall
es
mov
push
bound
rclb
inc
push
cmp
out
scas
cs
dec
jb
js
lcall
pop
sub
pop
sub
push
lfs
mov
mov
pop
mov
pop
enter
jb
pop
inc
dec
push
out
stos
enter
sbb
ljmp
stos
xor
mov
jle
cltd
sub
into
or
ja
test
and
inc
xchg
pop
faddl
icebp
pop
lcall
and
jmp
mov
dec
std
leave
addb
pushf
xor
js
xor
arpl
fisttpll
jbe
sub
jns
inc
pusha
shll
popf
and
nop
pop
imul
xor
cmpl
es
fs
xchg
dec
fucomp
cmp
in
mov
push
mov
xorb
int3
notb
mov
adc
cmp
test
cmpsb
xor
inc
outsl
or
jmp
pop
xor
mov
cltd
xor
push
cltd
mov
mov
out
mov
xor
icebp
subl
mov
fldt
scas
mov
es
mov
mov
xchg
add
mov
push
adc
popa
stos
xchg
or
loope
xor
repnz
out
nop
insb
int3
pop
xchg
cmpsb
push
cmp
mov
pop
iret
push
push
add
lock
adc
mov
mov
fnsave
dec
mov
int3
mull
jno
aaa
mov
popa
ljmp
sbb
cmp
repz
adc
scas
add
jns
jmp
mov
cltd
lret
inc
scas
mov
enter
push
jno
push
or
adc
sti
push
or
es
pop
mov
fisttpl
adc
xchg
repnz
dec
push
mov
push
pop
aam
pop
jmp
sub
cmc
inc
inc
push
push
push
jae
mov
adc
jmp
pop
rorb
sub
xchg
clc
filds
notb
add
xchg
xchg
stc
aas
sbb
xchg
add
sbb
pop
cs
in
xchg
cmpb
add
loop
add
xorb
pop
xor
daa
cmp
push
lock
xchg
mov
ss
in
pop
call
imul
out
jl
push
pop
dec
lods
hlt
leave
stc
mov
ficoml
std
cld
in
aam
jo
push
mov
hlt
dec
repnz
ljmp
and
mov
mov
fwait
mov
jmp
fld
mov
mov
loopne
bsr
xorb
popf
loopnew
icebp
push
mov
in
bound
fsubr
repnz
sub
adcb
pop
clc
jb
aas
xor
inc
inc
ljmp
sahf
cmpb
adc
shll
push
sti
mov
sarb
mov
inc
insl
jnp
testl
cmp
rcrl
movsl
pop
push
ss
jl
out
dec
mov
sub
int
aas
ret
aas
cmp
push
sbb
adc
sub
mov
in
mov
pop
sahf
xchg
lock
jae
mov
outsb
jl
push
test
out
inc
pusha
mov
mov
dec
dec
in
scas
jo
ja
xchg
mov
jns
fstl
pushl
dec
mov
mov
dec
cmp
bound
stc
stos
ret
xchg
pop
jl
jne
icebp
push
or
mov
jle
scas
dec
cs
iret
mov
cmp
aas
cmp
jmp
push
inc
dec
aad
mov
jno
push
jle
in
push
cli
ds
and
je
out
dec
aas
push
sub
cmp
test
jle
stos
mov
insb
lods
push
test
xlat
jne
dec
out
notb
pushf
sbb
test
push
pop
movsl
data16
xchg
and
mov
sub
sub
arpl
fs
inc
pop
push
add
mov
sub
adc
test
sti
inc
in
push
push
cwtl
adc
test
rolb
xchg
jle
sub
xchg
jo
xor
rol
or
jns
popa
sbb
loope
add
hlt
lret
xchg
popa
arpl
add
xor
sar
cmp
sub
mov
add
nopl
jns
push
pop
add
adc
pop
iret
mov
xchg
jo
mov
popf
xchg
or
ja
subb
xchg
in
inc
hlt
data16
mov
inc
jg
cmpsl
cwtl
sbb
in
testb
fcoms
shrl
or
push
lea
cwtl
je
inc
add
pop
arpl
cmc
inc
in
xchg
dec
lahf
jmp
mov
subl
push
andb
clc
imul
lock
mov
scas
addr16
fistpl
test
out
cmp
mov
dec
aam
xor
push
movsb
cmp
inc
in
adc
dec
ds
fcomps
push
mov
pop
aad
ret
out
cmp
int
shrl
incl
inc
loopne
mov
jl
and
call
mov
mov
mov
les
orl
and
pop
scas
movsb
clc
sbb
enter
cs
dec
adc
add
xchg
fldenv
sub
adc
dec
ss
push
cmp
test
lret
or
hlt
jecxz
mov
jl
aad
sbb
sub
xor
inc
int
push
int3
mov
add
addr16
dec
xchg
xor
cmpsl
pop
movsb
ret
push
and
fdivl
aam
ljmp
push
add
imul
mov
imul
xchg
hlt
xor
and
sti
iret
int
sbb
insl
mov
mov
leave
add
loope
mov
andl
add
push
fnstenv
sub
addr16
dec
sbb
mov
bound
imul
lret
in
push
call
and
insb
addl
mov
addl
stos
jmp
fstps
pop
fildll
push
pop
pop
cmp
inc
out
add
insb
xchg
call
in
negb
pop
xchg
mov
test
pop
mov
inc
orb
sahf
lret
mov
or
popa
jmp
mov
cli
fwait
jnp
mov
mov
ficoms
mov
test
sub
xchg
jne
sub
inc
cs
xor
push
xor
mov
jmp
adc
enter
push
sahf
jne
pop
andb
lea
out
push
inc
ret
add
cmp
push
adc
ret
jmp
jg
fsubrp
dec
mov
sub
inc
inc
cmc
ja
test
add
push
inc
and
divb
mov
test
xchg
je
and
xchg
adc
fwait
pop
mov
std
add
xor
sub
mov
into
mov
leave
les
lret
and
dec
adc
push
mov
pusha
sbb
mov
jecxz
aam
outsl
xor
call
jne
lcall
xchg
and
mov
dec
cmp
movsb
call
sbb
ret
sbb
out
clc
pop
push
xor
jmp
sbb
jbe
icebp
push
xchg
int3
scas
jns
xor
fcmovnb
or
test
outsb
sbb
xor
add
inc
jno
stos
int3
int
dec
out
sub
cmp
fcompl
lds
insb
loopne
sbb
jbe
jp
in
cmp
adc
push
add
push
hlt
dec
push
cmpsb
jg
outsl
push
inc
cld
ja
cmp
or
lahf
aaa
outsl
insb
cmp
mov
sub
out
add
aam
xchg
mov
fistl
lcall
daa
adc
mov
jns
xor
dec
clc
cmpsb
mov
pop
xchg
fadds
cmp
je
fucomp
dec
push
loope
push
cwtl
repz
rcl
insb
xor
loop
xchg
enter
push
pop
lods
sbb
ja
out
push
lds
pop
popa
out
cwtl
movsb
cs
inc
cld
dec
fwait
lods
dec
jge
lods
push
fcomps
popa
adc
cmp
mov
mov
nop
or
xor
outsb
mov
into
leave
xchg
cmc
xor
dec
out
cmc
xor
shrb
sbb
adc
cmp
or
popa
rclb
xchg
cmpl
jp
ror
inc
je
mov
pop
loopne
push
mov
es
enter
les
test
in
pop
cld
inc
add
xlat
dec
test
add
mov
out
and
push
xchg
xchg
add
or
ja
xchg
leave
jb
ljmp
xchg
and
mov
jno
lods
add
dec
imul
fwait
add
adc
movsl
outsb
sbb
fwait
bound
xor
ds
adc
fs
cmp
mov
fstpl
mov
mov
and
mov
xchg
out
jmp
inc
daa
scas
push
mov
inc
lds
mov
mov
push
sub
xor
or
arpl
fcoms
std
push
adc
call
sahf
iret
mov
scas
and
inc
push
repz
xor
sub
xchg
out
mov
test
xchg
or
loope
mov
nop
notb
add
incb
stos
mov
in
out
lretw
insb
es
lds
jne
stc
xlat
mov
sbbb
xchg
and
sbb
pop
sub
fisttpll
mov
and
mov
loopne
sbb
cmp
insb
mov
jg
pop
addb
xor
lods
pop
push
sub
xchg
lock
lcall
in
outsb
mov
aaa
push
les
pushw
subb
dec
fisttps
add
popf
faddp
add
cwtl
data16
in
add
dec
inc
sbb
pop
cli
lahf
mov
sti
dec
es
jge
dec
mov
xchg
pop
repnz
xchg
mull
cld
loopne
pop
sbb
pop
imul
aaa
pop
loope
jo
dec
push
hlt
ljmp
jmp
inc
sbb
sub
mov
inc
in
inc
sbb
cmpsb
push
lahf
mov
jmp
jge
jp
and
addb
xchg
jae
test
std
pop
negb
and
dec
sub
mov
call
mov
add
sahf
or
test
jge
fwait
lret
push
jp
out
subb
or
aam
pop
mov
sti
lea
xchg
fsubrl
cmc
test
dec
pop
aad
xchg
xlat
lods
push
mov
repnz
clc
rcll
les
jb
and
xchg
cmp
cli
aam
mov
push
push
jge
mov
shlb
js
popf
sub
fisttps
lods
xchg
decb
and
scas
xlat
test
sub
neg
and
out
pop
loop
mov
pop
sbb
mov
lret
add
or
mov
jne
clc
xor
sub
lods
xor
adc
clc
adc
mov
add
mov
ret
imul
sti
or
add
lret
jmp
lret
add
sub
insb
inc
or
cmp
cmp
xchg
inc
jge
jb
pop
sbb
dec
insb
push
cmp
lods
mov
mov
out
pop
dec
pop
dec
rcr
cmp
cmp
jp
jae
loopne
and
push
dec
jg
stc
out
cwtl
stos
mov
repz
cmp
shl
dec
mov
mov
fcomps
cs
mov
ds
ret
rorl
loop
xchg
ret
les
jb
fsubl
jecxz
adc
pop
movb
insb
cmp
sbb
out
fwait
mov
shrb
mov
popf
push
pop
mov
mov
and
pop
inc
and
and
xor
or
lock
fcmovbe
dec
jae
and
fcoms
loop
add
cmp
jle
test
bound
or
insb
shll
jno
cmp
imul
pop
xor
or
mov
xor
adc
subl
mov
orl
repz
andl
addl
sub
scas
lea
and
repnz
ss
stos
pop
pop
in
stos
mov
dec
fadds
inc
dec
push
iret
mov
push
loop
add
insl
ds
ljmp
xchg
repz
ds
sub
mov
lret
aas
fwait
jbe
or
leave
pop
xor
ss
mov
push
sbb
call
aas
sbb
and
sbb
fcomps
xchg
ret
pop
jmp
sti
dec
inc
add
sub
cmc
lahf
iret
jbe
gs
adc
or
xchg
add
nop
adc
mov
mov
pop
arpl
mov
pop
subl
outsl
aas
rcll
fs
mov
je
stos
xchg
repnz
and
dec
cld
repz
pusha
xor
cld
and
test
or
mov
stos
int3
scas
je
movsb
pushf
mov
mov
inc
or
cmp
mov
outsl
ds
mov
iret
adc
cmpsb
rorl
test
inc
adc
in
data16
js
push
clc
addr16
sub
mov
xchg
aas
arpl
and
in
jmp
loop
lahf
popa
or
bound
lea
xor
iret
mov
mov
mov
pop
out
add
ss
and
or
cmc
or
mov
mov
adc
lock
dec
in
out
add
mov
fisttpll
jecxz
push
pop
dec
pushf
in
stos
ss
scas
nop
mov
pop
rcr
test
sbb
mov
jl
lcall
push
and
cmc
sub
adc
jmp
or
sub
leave
inc
jb
jb
jne
sbb
jmp
cld
cwtl
lahf
ret
dec
ja
in
xor
add
lcall
mov
mov
popf
imul
jae
add
inc
and
das
dec
iret
sbb
sub
mov
js
sbb
jae
lock
fcomps
nop
jb
xlat
addl
sub
push
cld
push
cli
fsubp
inc
or
cmp
data16
int
mov
fsubs
js
ja
pop
mov
mov
adc
fwait
mov
call
into
cli
lret
repnz
or
test
addr16
aas
movl
sub
test
fwait
sbb
inc
and
cmpsb
pop
dec
dec
sbb
adc
push
push
into
in
xor
into
ret
ljmp
or
push
scas
pop
sbb
movsb
stc
lret
pop
imul
xchg
out
cmc
rcrb
arpl
fs
es
lret
test
sub
call
jb
stos
fs
sub
or
dec
and
pop
out
push
push
xor
dec
movsb
outsb
dec
rcrb
fidivrl
or
cmp
lds
shl
outsl
cs
negl
je
out
pushf
subb
call
lds
scas
mov
stos
sbb
clc
aaa
not
cmp
sub
jmp
movsb
out
ret
andl
leave
jl
mov
paddw
in
mov
dec
fcoml
lahf
adc
imul
stos
mov
lcall
aad
add
insl
jo
pop
ret
hlt
sub
je
xchg
sub
andl
mov
les
rcll
mov
mov
icebp
xchg
loopne
add
xor
push
cmpsb
das
mov
jp
xchg
imul
pusha
xchg
push
inc
fcmovnb
mov
sbbb
negl
cltd
ja
inc
dec
xor
jae
jo
push
adcb
add
in
rclb
add
es
inc
test
inc
dec
cmpsb
test
rep
aas
popa
idivl
fistl
sbb
cli
lcall
lcall
js
addl
sbb
sub
or
scas
fsubl
rorb
push
cltd
push
ljmp
cmc
fidivrl
bound
sbb
hlt
jbe
addr16
mov
inc
outsb
imul
dec
ret
push
aas
push
xchg
jnp
jo
js
xchg
push
jmp
rol
mov
cmpsb
fistl
rorl
lock
jge
push
ljmp
int3
mov
lahf
sub
aam
dec
ret
hlt
cmp
ljmp
and
sbb
in
mov
nop
pop
stc
add
sbb
xchg
mov
popa
in
repnz
jbe
dec
jmp
addr16
repz
pop
xor
bnd
mov
sbb
inc
push
pop
push
pop
lcall
arpl
mov
inc
mov
mov
dec
mov
mov
sub
rol
xchg
insl
xor
jnp
notb
and
mov
mov
sbb
aad
in
mov
push
mov
les
adc
mov
cs
int
jle
cmp
dec
rcrl
pusha
inc
ljmp
repz
scas
out
add
xor
fcmovnbe
sbb
pop
lock
dec
cmpsl
sub
mov
mov
push
lock
stos
xchg
aas
bound
xchg
in
xor
js
mov
fidivrs
jmp
xor
inc
mov
clc
ficomps
xchg
mov
and
xor
or
faddl
in
out
dec
xchg
mov
pop
add
mov
scas
mov
movsb
rcll
in
cmp
and
aaa
mov
sbb
xchg
inc
aaa
adc
xor
push
adc
lcall
aad
jg
notb
enter
dec
aas
pushl
sbb
jl
xchg
or
add
adc
sub
es
shlb
prefetcht2
fisttps
ret
mov
std
out
mov
sbb
xor
add
idivb
push
or
mov
fisubl
stc
sti
sub
out
add
orl
adc
daa
test
add
push
js
xchg
dec
stos
popa
fldenv
mov
je
sbb
in
imul
fldcw
jle
cmp
xchg
out
or
or
lods
sti
sbb
push
push
or
mov
ljmp
mov
push
xor
cmp
hlt
pop
imul
aam
in
jno
mov
sbb
outsb
and
out
xchg
loop
push
cld
dec
or
mov
jecxz
popa
jno
or
adc
sahf
sub
dec
mov
test
push
loope
rcl
negl
sbb
shlb
push
inc
test
aad
add
arpl
arpl
push
call
jno
push
movsb
in
loop
xchg
stc
in
js
xchg
enter
fsubrs
add
mov
xor
pop
test
leave
sbb
push
xor
pop
lods
inc
add
loope
pop
nop
cs
xor
mov
push
pop
lahf
fbstp
jne
push
sub
cmp
je
xor
mov
xchg
xor
pop
out
cmp
and
stos
js
rcrl
dec
shr
test
cmp
jp
loope
xchg
outsb
orb
aaa
cs
rcrb
jns
sahf
xchg
inc
fs
and
aad
dec
push
pop
imul
adc
push
mov
xchg
mov
callw
dec
push
sbb
imul
test
lock
inc
subps
cmp
aad
inc
mov
ss
cmp
jle
lahf
je
jne
pop
cmp
fistl
dec
push
lret
add
fbstp
fisubrs
xor
mov
pop
cmp
scas
mov
mov
sbbl
mov
fdivl
mov
push
mov
mov
lret
adc
inc
push
jmp
lods
lea
cmp
pop
mov
and
pop
mov
ss
mov
inc
outsl
inc
adc
popa
adc
cmp
fistl
fists
xchg
fs
jo
out
ficoml
ja
push
inc
repnz
add
xlat
inc
hlt
dec
pop
adc
pop
repnz
jmp
orb
inc
sbb
cmc
jge
adc
sti
sbb
incl
les
and
insl
mov
mov
mov
into
pop
stos
test
call
out
push
adc
xchg
in
add
add
sbb
je
das
push
ss
push
inc
mov
fldt
mov
sub
xlat
push
xor
sbb
xchg
jmp
cld
idiv
scas
cmp
jp
dec
cmpsb
and
cmp
and
jae
dec
inc
mov
push
stos
int3
jne
and
lahf
int3
mov
aaa
and
test
fwait
scas
push
xchg
inc
adc
popa
dec
push
ljmp
aam
or
lcall
adc
loop
out
rcll
sbb
xchg
imul
idivl
lahf
and
popa
outsb
stos
adc
cmp
xchg
sub
mov
daa
mov
shlb
or
sbb
ret
gs
sub
cld
loop
jnp
mov
dec
in
mov
xor
xchg
lods
in
ja
and
xchg
sub
fucomip
cwtl
int3
aaa
pop
scas
inc
jno
in
pop
push
nop
and
fld
test
lods
stos
ds
sub
sbb
cmp
mov
adc
lcall
stos
jne
stc
jnp
dec
cmp
push
loop
xchg
filds
xchg
sahf
or
sub
jl
clc
dec
sbb
pop
filds
mov
lods
pop
lds
or
jmp
dec
fldenv
rolb
mov
adc
xor
jl
int
repnz
aad
iret
cli
sub
jp
adc
push
jl
xor
dec
in
and
shlb
add
rcll
jmp
lds
inc
sub
daa
mov
cmp
dec
pop
daa
cmpsl
jo
sub
stc
repz
stc
cmp
mov
xchg
adcl
jecxz
jb
enter
or
repnz
push
jle
mov
inc
push
hlt
xchg
xchg
repnz
int3
repz
divb
orb
inc
lock
jne
inc
in
mov
cmp
pop
iret
xlat
out
testl
and
je
push
jg
inc
inc
movsb
sub
or
cmp
pop
xchg
push
mov
add
xchg
xchg
mov
add
add
mov
push
push
push
xor
xlat
push
push
jg
jp
aas
mov
mov
dec
sub
mov
ret
cltd
fidivl
jnp
fwait
pop
aaa
push
das
xchg
xorl
shll
adc
or
lahf
ljmp
pop
mov
jmp
out
rep
adc
add
sbb
aam
push
cld
xor
fisubrl
fadds
inc
mov
mov
ret
inc
jb
sub
test
pop
inc
fbld
into
sbb
enter
push
adc
dec
inc
xchg
stos
andb
mov
dec
rolb
mov
mov
ret
or
mov
inc
in
inc
pop
or
stos
cmp
pop
popf
mov
jns
mov
icebp
push
jmp
popl
scas
clc
pushf
xchg
mov
cmc
inc
fmul
cld
mov
faddl
sub
lret
ret
xchg
mov
jbe
faddp
sub
mov
mov
cmc
push
cwtl
dec
xlat
mov
into
mov
aaa
clflush
ds
mov
push
lcall
mov
adc
and
mov
xor
inc
push
test
dec
fbstp
out
dec
mov
and
push
jl
jo
int
jnp
aad
and
cmc
push
call
test
in
and
sbb
ret
adc
dec
das
out
xchg
pop
xor
mov
dec
cwtl
test
pop
lods
aaa
lds
fs
call
jb
int
pop
dec
mov
pusha
std
aaa
jns
sbb
lea
test
scas
loop
dec
mov
aas
add
inc
xor
cli
or
adc
aad
xor
mov
push
sahf
sub
scas
push
aaa
test
lcall
inc
and
push
int
cmpsl
or
int
mov
mov
xchg
divb
aas
pop
in
fbstp
or
inc
mov
push
mov
dec
dec
inc
std
mov
push
sbb
mov
arpl
cmpl
mov
out
xchg
lods
or
lahf
sbb
and
sub
cltd
movsl
insl
subb
mov
shrb
addr16
shlb
lret
push
cmp
or
jmp
je
mov
pop
pop
cmp
es
xchg
jnp
dec
push
dec
pusha
xor
inc
sub
xor
sbb
std
xchg
rcl
sbb
lods
or
and
int
dec
fcoml
movsl
jnp
push
sub
cmpsb
fs
sub
pop
xchg
in
and
repz
ss
inc
mov
rcll
dec
fisubrs
scas
adc
dec
mov
mov
stos
movlps
mov
aas
xor
dec
adc
dec
pusha
ljmp
enter
sbb
pop
push
dec
int3
add
iret
pop
adc
lods
jp
mov
push
stos
sti
mov
int
xchg
dec
xor
add
nop
lea
daa
fmull
push
cmp
loopne
out
outsl
stos
mov
sbb
pop
loopne
xor
cmp
mov
jge
push
ljmp
sti
aaa
inc
ret
testl
sbb
out
sbb
lcall
mov
push
jnp
inc
ret
mov
mov
sub
jae
out
inc
insl
or
xchg
push
jl
push
dec
sbb
xchg
or
je
adc
xchg
inc
jnp
repnz
adc
in
out
sbb
fmull
dec
sahf
insb
inc
or
ficomps
mov
pop
jns
fidivl
adc
cwtl
xchg
and
lret
xchg
pusha
and
xor
mov
outsb
loope
pop
icebp
or
mov
cs
cwtl
or
jns
jnp
inc
push
pusha
jnp
dec
test
or
and
test
sbb
adc
jne
mov
hlt
std
stc
dec
mov
cmp
dec
cmp
mov
popa
sbb
mov
sub
fwait
cli
int3
xchg
cwtl
stos
mov
dec
movsl
hlt
lahf
les
sbb
aam
pop
enter
addr16
fstpt
jl
xchg
jecxz
cmp
sub
cld
mov
lock
loopne
lret
mov
scas
sbb
add
jnp
call
mov
outsb
mov
jmp
hlt
frstor
in
imul
and
rorl
cs
add
mov
jl
fisttpll
sahf
lds
mov
jp
fstpt
int
ja
cmp
test
mul
pop
imul
rorl
mov
cmpsb
dec
ja
mov
or
jle
mov
es
rsm
int
pop
cmp
inc
xor
fidivs
cmpsl
jl
mov
bound
and
test
pusha
mov
inc
das
mov
cmp
stc
int3
push
push
lods
or
jecxz
into
shll
mov
sub
dec
add
pop
or
cli
cmp
dec
xor
jbe
mov
dec
ds
xchg
xor
push
cmp
mov
mov
mov
ljmp
out
lahf
push
mov
neg
aad
push
add
mov
cmp
and
outsl
mov
jno
cmpsb
cltd
dec
loopne
aas
cmpsl
mov
mov
add
adc
out
sbb
push
cmp
dec
adc
iret
push
dec
int
pop
dec
cmp
sbb
aad
dec
shlb
xor
cmp
xor
cmp
gs
jno
gs
gs
lea
xchg
sbb
ja
mov
bound
push
jmp
test
ss
pusha
repnz
out
mov
inc
add
lcall
xchg
ja
xchg
xor
push
push
pop
shlb
ret
xchg
sbb
push
mov
fstpt
cmp
jno
jecxz
int
inc
jge
pusha
rclb
cltd
nop
add
jl
imul
bound
hlt
mov
push
js
out
dec
rolb
push
dec
iret
xor
mov
push
push
adc
lods
aas
subb
roll
movsb
mov
movb
stos
pushf
jb
hlt
xchg
jge
mov
movsb
sbb
int3
add
sbb
inc
pop
sbb
mov
lods
sbb
sti
xor
ljmp
leave
pop
inc
arpl
pop
xchg
jmp
es
mov
push
icebp
bound
mov
inc
push
ss
fbld
hlt
dec
mov
xor
addr16
mov
lcall
pop
iret
pop
or
mov
rolb
jle
test
push
aam
adc
sarl
lods
cmp
popa
dec
mov
pop
rol
jecxz
or
out
xor
aaa
bt
stos
stos
xchg
mov
push
clc
divb
pop
test
dec
fs
xchg
scas
sbb
lret
test
cmp
and
lock
sti
sub
sbb
xchg
pmulhw
lea
jl
ds
fs
inc
sub
fstpt
icebp
mov
and
push
repz
mov
mov
adc
mov
dec
mov
sbb
decb
or
pop
lahf
cwtl
or
mov
pop
jb
mov
out
dec
dec
lcall
push
mov
push
and
sbb
pop
fmul
or
push
fisttps
cmp
lcall
jmp
adc
jo
leave
sar
adc
arpl
bsr
repnz
push
xlat
lods
jo
sahf
fldl
pop
repnz
cwtl
repz
mov
and
cld
loop
xchg
cmpsl
shrl
cltd
and
lcall
scas
or
pop
inc
ficomps
pop
stc
mov
aam
jne
fistpl
sbb
xlat
in
adc
inc
daa
stos
jg
inc
cmp
or
cmp
or
xor
add
or
inc
push
jmp
add
loop
loop
lahf
imull
mov
int3
sti
dec
int3
add
mov
xor
sbb
inc
pusha
lret
mov
mov
lret
mov
rolb
fcoml
dec
mov
add
cmp
arpl
shrl
mov
sub
xchg
dec
jo
inc
popf
ljmp
stc
push
mov
lods
into
mov
repnz
lcall
pop
outsb
cmp
cmp
pop
scas
cmc
lock
pop
rcrl
lea
repnz
pop
mov
push
xor
jae
ds
or
dec
orb
aam
andl
sbb
sbb
push
pop
jl
or
xchg
adc
cmp
inc
das
pushf
jmp
mov
cmp
xchg
mov
xchg
mov
ds
std
std
int
jl
and
adc
add
ja
jae
mov
mov
idivl
add
repz
push
and
je
jae
and
sub
add
mov
fs
arpl
jmp
icebp
push
push
mov
out
mov
enter
in
pop
xor
add
xchg
jb
mov
push
or
pop
iret
lret
mov
xor
pop
fisubrs
adc
or
sub
or
dec
adc
mov
add
mov
loop
cmp
es
fistpl
mov
out
mov
repz
xchg
inc
cmp
stc
adc
lret
pop
lret
xor
out
jne
daa
imul
mov
push
sbb
mov
fmuls
lret
cli
and
hlt
sub
xor
push
data16
sbb
inc
fisttpl
pusha
push
int3
mov
jg
xor
sub
popa
ljmp
inc
mov
aam
ffreep
fisttps
ja
mov
in
mov
xor
sub
and
popf
jo
fnsave
sub
mov
adc
mov
push
fnstcw
sbbl
jecxz
xor
je
in
jbe
sbb
and
xlat
int3
sub
lret
insb
mov
enter
add
mov
lret
push
add
repnz
stos
jno
loope
mov
les
and
cli
push
lods
imul
jno
aad
sbb
out
xor
add
adc
lds
pop
xchg
mov
mov
sbb
xlat
and
add
enter
jl
rclb
xchg
push
push
mov
ret
dec
loop
out
dec
and
mov
aas
pusha
aad
xor
das
add
jno
les
test
ficompl
xchg
pop
lods
stos
push
xchg
mov
jbe
xor
jae
nop
scas
adc
sub
add
cmp
pop
mov
mov
stos
xchg
pop
cld
dec
xchg
sbb
and
cs
ficoms
les
dec
push
lcall
mov
jae
push
push
xlat
cltd
sbb
jecxz
icebp
cld
sbb
push
bound
xor
jbe
dec
lods
outsb
mov
push
fnstenv
out
fstpl
push
rolb
xor
sub
dec
addr16
pop
adc
mov
add
push
outsl
cmp
in
insb
dec
stc
add
aam
pop
or
stc
dec
mov
jns
or
arpl
mov
inc
xchg
and
movsl
inc
test
inc
fldt
jmp
xchg
xchg
sti
push
pop
cmpsb
jb
mov
push
dec
les
and
je
or
ds
lods
push
lea
mov
jge
inc
idiv
std
xlat
shrb
fcmovu
hlt
xor
icebp
popa
fwait
pushf
icebp
pop
mov
popa
inc
dec
mov
add
xor
pop
mov
mov
and
inc
test
pop
cmp
jmp
inc
jbe
aas
cmpsb
adc
mov
cmp
lcall
jge
imul
mov
jbe
insl
stos
gs
push
pop
lea
loope
scas
loope
mov
jo
sub
mov
mov
aaa
gs
bound
mov
leave
mov
sub
lcall
jns
sub
mov
pop
loopne
ret
imul
add
stc
daa
lds
cs
sbb
adc
ljmp
push
and
pop
mov
lods
cmp
jo
ret
rorb
lea
scas
mov
jl
cld
outsb
and
adcl
ret
clc
out
mov
mov
dec
in
push
adc
out
dec
xchg
push
cmp
ss
sub
int
xchg
inc
rorl
xchg
mov
cmp
add
cltd
mov
hlt
pop
xchg
inc
mov
mov
mov
push
xchg
xor
dec
repz
adc
and
adcb
ljmp
enter
xchg
enter
notl
sbb
mov
mov
insb
es
fsubrs
cmc
out
ds
mov
xchg
rorl
popa
add
push
fucomip
std
jge
js
leave
cmp
dec
cwtl
mov
iret
movsb
sub
jmp
xor
add
gs
xchg
aaa
lret
jle
fwait
sahf
fbld
rcrb
adc
ret
cltd
sub
repnz
lods
aas
popa
add
pop
insl
lret
or
repz
sub
mov
mov
cli
pop
adc
or
dec
mov
sbb
leave
iret
and
fidivrl
movsl
scas
aam
sahf
mov
jb
jmp
mov
in
xchg
decl
jmp
dec
lret
sti
into
or
fs
test
inc
inc
fistpl
test
dec
pop
movb
xor
test
clc
je
std
clc
cld
sub
pop
inc
pop
popa
jns
adc
dec
ds
into
test
mov
mov
les
sbb
scas
xchg
push
mov
cs
daa
adcl
mov
neg
repnz
ss
and
fildll
push
adcl
or
sahf
rep
out
loope
popf
add
or
insb
sbb
mov
roll
jnp
mov
mov
inc
aaa
push
lock
sub
pop
mov
aad
cmp
cmc
ret
es
mov
push
test
cmpsb
xchg
jmp
outsl
push
rorb
shrl
mov
icebp
and
negb
inc
movsl
fdivrl
inc
pop
cmp
inc
jge
push
mov
xor
rclb
loope
scas
data16
and
imul
add
mov
cs
jmp
mov
fwait
sahf
jle
cmp
pusha
leave
and
movb
lea
clc
andl
jle
cmp
imul
sub
outsb
ret
test
in
ficomps
xor
cli
add
and
in
scas
jmp
pop
imul
or
dec
sbb
cmp
jle
les
fildll
push
cli
dec
pop
cmp
shlb
repnz
jns
jno
and
xchg
pop
pop
dec
cli
shll
and
push
push
pop
adc
cmp
push
sub
rclb
out
out
mov
das
test
and
adc
mov
outsb
scas
js
cmpsl
repz
dec
cmpsb
xor
repnz
rdmsr
lret
xchg
push
cwtl
mov
sbb
dec
lret
lcall
add
fimull
cmc
dec
add
pop
push
jmp
xlat
enter
fimuls
mov
dec
push
pop
and
adc
cmp
push
cld
cwtl
movsl
inc
outsl
subb
es
cmpsl
add
or
leave
cltd
das
mov
cmp
sub
idivb
xchg
leave
dec
aam
pop
das
stc
dec
xor
cmp
hlt
sub
inc
xchg
mov
lds
sbb
pop
dec
in
add
xor
sub
xchg
inc
dec
sbb
ss
xchg
out
lods
or
ret
cli
adc
jecxz
movsl
mov
push
cmpsb
cwtl
dec
xorl
test
sub
pop
jno
pop
cmp
and
mov
ret
push
orb
jns
pop
scas
adc
mov
jmp
and
das
test
and
popf
in
in
or
leave
pop
pop
adc
xlat
repnz
mov
jns
test
daa
andb
xchg
loope
pop
faddl
mov
fidivs
sub
pop
jg
mov
cmp
loop
sbb
cwtl
add
adc
jne
inc
fwait
cmpsb
dec
pop
lcall
xchg
cs
bound
cmp
ret
push
les
bound
call
and
inc
jmp
cwtl
jnp
data16
in
sbb
sbb
pusha
arpl
insl
test
dec
das
cmp
mul
loopne
xor
imul
sbb
pushf
mov
lock
sarl
add
cmp
push
and
aaa
sbb
fmull
outsb
and
xchg
sbb
push
inc
add
jb
cmp
sbb
into
push
out
scas
shrb
div
xchg
jge
ret
adc
out
les
je
mov
jg
in
je
and
sbbb
fcompl
pop
lods
push
das
sbb
fwait
lock
mov
jg
je
or
loope
mov
cmp
cltd
xchg
std
jmp
cmpl
push
cmpsb
lods
test
adc
es
mov
xor
fidivs
mov
stos
xchg
cmpsb
mov
fistl
pop
subb
xor
int3
jle
dec
inc
push
mov
sub
outsl
mov
mov
push
push
int3
sbb
add
aam
push
lret
mov
popa
adc
add
jnp
outsl
jmp
jmp
mov
cltd
and
cmpsb
lahf
mov
jg
out
push
loope
mov
pop
pop
mov
mov
jbe
addb
test
and
aam
aaa
stos
pop
push
jb
cmp
es
push
ret
shll
clc
or
sub
jg
xor
int3
lock
mov
out
aad
sbb
sub
add
adcb
cld
test
gs
lahf
jmp
enter
or
shll
mov
pop
sbb
sub
xlat
cmp
fs
and
ds
push
out
mov
orl
cld
xor
insl
daa
in
nop
testl
sbb
or
or
lret
mov
pop
popa
popa
adc
add
shrd
stos
cmp
cmp
adc
aad
jbe
or
jbe
test
push
mov
stos
push
cmpsl
jns
dec
pop
mov
iret
xchg
jl
sub
or
int
sahf
sub
sub
jnp
cmp
xor
xor
dec
adc
out
cli
adc
fnstsw
stc
in
daa
adc
lcall
mov
cmpsl
jg
std
push
rorb
rcll
ror
lret
inc
add
pop
mov
imul
xor
mov
dec
enter
push
arpl
negl
test
adcb
mov
das
mov
inc
dec
test
fs
insl
cltd
xor
repnz
imul
mov
dec
inc
sbb
fildll
jnp
icebp
out
popa
xchg
shrl
stos
or
push
lret
ja
out
mov
cmp
aam
in
sahf
iret
int
test
clc
dec
test
rorb
mov
xor
loop
mov
fistps
sbb
or
enter
and
inc
inc
out
dec
xchg
dec
out
in
out
dec
xor
popf
xchg
sub
inc
pop
lods
or
rcrb
inc
sahf
pop
mov
jg
addr16
mov
cli
dec
mov
lret
dec
xchg
push
lea
inc
stc
mov
and
jmp
jnp
dec
xchg
push
leave
movsl
fwait
mov
sub
xchg
or
mov
scas
lcall
test
cmp
into
or
pushl
push
xchg
fs
setb
jge
in
std
pop
cmpsb
mov
in
mov
mov
cmp
nop
gs
addb
or
adc
mov
jp
test
push
add
cmpsb
aas
pop
rcll
sub
xor
mov
add
ror
pop
mov
into
sub
imul
ja
cmpsl
aam
stos
pop
mov
mov
imul
dec
inc
xor
add
push
pop
in
mov
test
cmp
std
adc
cmpl
out
xor
lahf
loopne
xor
rcrl
mov
cmpsb
cmp
push
clc
push
insb
sbbl
add
rcrb
cs
sub
inc
fnstcw
pop
mov
xor
add
cmp
and
sub
jo
cltd
sub
out
add
outsb
addr16
pop
outsb
movsl
faddl
andl
loopne
or
mov
outsl
or
inc
adc
sub
iret
mov
mov
dec
fwait
adc
inc
jp
scas
cmp
cs
dec
cmp
sub
adc
xor
jbe
jnp
adc
shll
cmpb
cli
xchg
pop
push
dec
pop
fldl
cmp
ss
mov
shrl
subl
jl
fcoms
das
push
sbbb
mov
imul
bts
lods
pop
xchg
lock
imul
sbb
pop
push
clc
sub
ja
or
into
push
xchg
mov
pushl
shr
xchg
mov
repz
jbe
pop
xchg
inc
mov
inc
jp
xchg
sub
lods
mov
ljmp
push
xchg
pminsw
push
iret
push
out
cmpsb
add
pop
mov
cli
addr16
shlb
ljmp
lret
imul
and
dec
je
mov
adc
mov
int3
jno
push
test
subl
pop
push
jnp
inc
jo
mov
mov
orb
dec
and
jns
or
pop
and
xor
push
cmp
shll
enter
xorl
icebp
jg
fwait
lock
mov
xor
inc
and
sbb
push
addr16
outsb
cld
mov
js
cmp
mov
dec
jo
sahf
icebp
mov
lret
pop
cmp
scas
inc
cmpsl
push
mov
aas
shll
mov
push
or
sti
jecxz
push
sbb
mov
mov
enter
xor
sbb
call
mov
enter
mov
cmp
dec
inc
ret
lcall
test
push
sbb
flds
lea
cmp
fstps
sbb
divl
push
adc
pop
std
test
xor
cmp
stos
scas
popa
mov
add
and
or
arpl
and
lcall
ja
loopne
aas
je
push
inc
dec
loope
aas
adc
mov
mov
ja
inc
clc
cli
or
out
test
insl
cmp
xor
test
imul
rorl
loope
lea
fldt
sub
shll
fidivrl
mov
lods
sub
outsb
mov
leave
shlb
loope
or
mov
sbb
lods
cli
or
xchg
enter
cmp
popf
roll
test
cmp
fadds
sbbl
addr16
mov
fldt
int3
gs
ss
lcall
xchg
or
push
push
icebp
inc
add
out
pop
andb
inc
push
ret
inc
lods
mov
add
xchg
out
out
xor
pop
pop
rolb
or
int3
push
cli
jnp
jnp
daa
sub
inc
push
cmp
fucom
jle
pop
xor
sub
lods
xor
push
imul
dec
scas
xchg
outsb
mov
js
push
lret
fisubrl
pop
push
and
dec
movsl
insl
mov
jmp
repz
jmp
fldenv
or
in
ljmp
lock
lods
mov
shlb
lds
ljmp
cmpsb
or
test
subl
fsts
rolb
adc
subl
mov
and
add
mov
sbb
notb
push
icebp
mov
pop
aam
pushf
sti
daa
repz
pop
fwait
xchg
aad
pushf
mov
xor
mov
pop
testl
imul
test
insb
adc
xor
insl
dec
pop
call
push
jmp
mov
or
fiadds
je
pop
inc
jmp
add
ss
insl
hlt
mov
mov
mov
add
inc
sub
idivl
cld
icebp
js
lock
test
mov
sbb
add
and
stos
cmp
fcompl
call
addr16
ds
sbb
mov
stc
test
jns
xor
sub
push
int
into
sub
flds
push
xchg
xor
pop
and
mov
fnstenv
mov
insb
adcl
fdivr
sub
lods
movsl
dec
adc
adc
cli
test
inc
sbbl
sub
mov
cmp
sub
cltd
mov
dec
inc
movsb
inc
insl
mov
inc
cmp
push
gs
inc
shrb
push
xchg
in
cli
rclb
cmp
add
sbb
add
push
mov
mov
sub
sahf
fs
dec
dec
jno
aad
sub
icebp
sub
es
rcll
push
push
jae
enter
pop
jmp
fstl
mov
daa
in
movsb
dec
sbb
xchg
hlt
into
push
imul
and
inc
addr16
mov
sti
loopne
outsl
roll
ds
movsl
dec
dec
in
jbe
cmp
or
mov
sbb
mov
paddusw
test
xchg
inc
pusha
sahf
fs
in
mov
jecxz
fcmovbe
stos
fcom
mov
or
and
movsl
mov
pusha
pop
mov
mov
nop
jl
stc
mov
inc
add
roll
xchg
aam
push
pop
icebp
imul
stc
sub
outsl
inc
push
cmpsb
out
cs
stos
dec
pop
mov
jge
enter
aad
outsb
inc
xchg
mov
xor
movsl
ret
ds
enter
adc
pop
xchg
and
test
jne
cmp
adc
cmpsb
fldenv
inc
xlat
pusha
movsb
adc
out
imul
xchg
add
cmp
inc
push
push
mov
sbb
jo
adc
cmpsl
aas
jo
lcall
inc
push
shrb
jns
leave
stc
mov
mov
sbb
mov
pop
mov
call
mov
dec
and
mov
std
in
or
in
jl
or
jge
pushf
shrb
add
pusha
or
xor
sub
lods
pop
movsw
add
mov
pusha
hlt
stos
stos
in
daa
loopne
shl
ljmp
sbb
mov
pop
sbb
in
or
ss
mov
rcrb
cmp
inc
jg
popf
shrb
or
dec
jle
repz
xor
repnz
adc
popa
sbb
pop
setg
aaa
or
clc
in
dec
dec
or
cmpsl
cli
inc
mov
push
popf
in
or
repnz
insb
jo
push
mov
nop
mov
clc
jmp
jecxz
jne
dec
cli
mov
xor
adc
jge
shlb
loope
test
and
push
xchg
xchg
jne
rep
xor
inc
push
in
in
mov
fwait
arpl
or
cmp
outsb
pop
sbb
fs
mov
es
jns
out
mov
mov
loope
mov
sbb
scas
xchg
pop
push
adc
nop
insl
pop
hlt
cmp
jp
les
push
push
bound
mov
mov
jp
sub
movsl
xchg
push
adc
test
popw
scas
outsl
add
addr16
rcll
jne
xlat
out
cmp
lret
loop
sub
mov
push
pop
xchg
pop
and
sub
xchg
mov
test
out
dec
and
je
xor
xchg
test
out
rcll
mov
rol
push
or
aaa
andb
scas
xor
xor
jnp
rcrb
ss
aaa
push
cwtl
cwtl
adc
and
and
in
int3
push
rolb
out
mov
test
iret
ja
outsb
mov
lea
scas
sarb
mov
adc
gs
add
call
out
xor
sahf
mov
iret
movntps
outsb
das
or
push
sbb
test
enter
mov
ja
fimull
int
push
sbb
jge
sub
stos
or
test
mov
xchg
push
lock
inc
lods
out
int3
xor
out
xorb
std
xchg
fldt
pop
clc
aaa
xchg
outsb
das
mov
jnp
sub
cmp
cmp
or
sbb
in
nop
fbld
mov
and
repnz
push
fcmovnb
inc
xor
mov
inc
dec
cli
xor
ficoms
icebp
fisubrs
ficompl
pop
add
or
add
adc
push
dec
addr16
dec
jb
push
jne
rorl
lock
xchg
insb
or
jb
fdivrs
mov
push
mov
rcr
mov
pop
std
stc
push
sbb
orb
insb
ret
pop
ret
enter
or
cmpsb
subl
jecxz
mov
lds
cmpsl
jne
out
mov
and
sbb
push
int
sbb
inc
or
dec
addr16
push
inc
neg
push
fstps
add
inc
dec
jnp
daa
jmp
sub
xor
mov
pop
cwtl
fucomip
xchg
cmpsw
jg
in
rcrl
mov
lahf
push
sbb
mov
fldt
mov
sub
adcl
jl
push
xchg
lret
and
popf
lods
ds
sbb
cld
popa
mov
or
lds
int
out
adc
xor
mov
xor
add
out
sbb
js
mov
adc
cmp
sub
fs
jmp
jmp
fsubrl
sbb
push
or
lea
xor
mov
into
dec
sub
xchg
arpl
shlb
mov
hlt
mov
hlt
pop
push
call
mov
push
fldcw
mov
pop
sti
mov
test
mov
mov
rcrl
mov
or
call
fdivrs
es
xchg
jns
mov
sti
fldcw
mov
cld
dec
mov
pop
in
in
je
dec
ret
insb
and
xchg
mov
add
or
test
jge
xor
aas
outsb
adc
inc
into
push
repnz
mov
mov
mov
outsb
sub
shlb
xor
inc
pop
movsl
scas
jge
sub
jle
insl
mov
xchg
cmpsb
jae
or
inc
imul
leave
and
pop
pop
mov
mov
lea
pop
lds
push
cmp
imul
std
stos
orl
pop
lahf
sbb
cmc
outsl
into
into
mov
mov
fsubr
inc
andb
push
psubw
int3
test
and
icebp
data16
test
cltd
adc
mov
and
cwtl
test
lcall
mov
adc
and
mov
or
mov
xor
and
or
in
lret
mov
inc
sarb
in
sbb
jge
out
out
mov
gs
fwait
dec
fistpll
es
push
xor
repz
les
push
insb
out
das
lods
pop
bound
jmp
daa
mov
xchg
out
test
daa
dec
sbb
es
xor
outsl
add
sbb
push
cltd
cwtl
cltd
mov
cwtl
clc
push
es
cmpsl
stc
adc
jb
adc
xchg
mov
and
addl
test
rol
out
popa
inc
repz
cmp
enter
jmp
mov
push
lock
sbbl
rcrb
notb
sbb
fs
pop
inc
inc
aas
pop
scas
outsb
fimull
mov
enter
hlt
rcr
out
sub
rcrl
dec
mov
sub
sub
push
je
xor
mov
jmp
cmc
sbb
pop
inc
push
mov
jp
loop
fistpll
dec
and
pop
xor
lods
clc
mov
jno
lock
xor
popa
enter
cli
or
scas
and
xlat
inc
dec
fisttpl
movsb
sbb
xor
repz
pop
scas
cmp
or
or
xchg
xor
stos
pop
sbb
mov
pushf
or
iret
call
sahf
in
xchg
cmp
bound
jl
push
adc
outsb
or
push
push
xchg
push
loop
out
jmp
sbbb
daa
xor
movsl
push
xchg
add
xchg
xor
fwait
insb
sub
test
test
addr16
jbe
jecxz
mov
pop
je
mov
push
stc
loope
sar
insb
xchg
mov
cld
sub
push
inc
xor
out
pop
pop
in
inc
decb
cmp
cld
ss
roll
mov
test
pushf
xor
jl
outsl
xlat
ret
jg
xchg
push
xchg
inc
hlt
js
lret
push
mov
iret
cmp
outsb
xchg
mov
mov
cmpsl
data16
xor
dec
movsb
and
lds
jb
fcoml
loope
roll
je
rcrb
in
insb
pop
leave
push
xor
push
push
cmp
jae
add
cmp
psubsb
scas
pop
inc
movsl
xor
stos
jle
sub
jbe
and
add
dec
ss
pop
bound
sbb
in
cs
pop
stos
inc
push
or
sbb
xor
cltd
mov
lea
clc
lahf
mov
sahf
or
imul
adc
mov
and
lods
pusha
jecxz
cld
hlt
inc
out
lret
push
mov
jne
lret
iret
fldenv
push
ja
add
mov
je
jle
into
xchg
jge
pop
mov
sbb
mov
mov
pop
cs
int
push
shlb
in
dec
stc
clc
xchg
insb
mov
mov
cmpb
pop
scas
cmp
in
and
shll
cmp
xor
rolb
jb
int3
scas
sbb
loopne
sbb
fwait
inc
jl
mov
dec
addr16
loope
aad
push
jb
out
ja
mov
mov
cmc
out
sub
fisttpl
sub
call
or
in
addl
pminsw
fdivrl
aad
out
stos
push
mov
hlt
xchg
xchg
jno
inc
popa
sbb
sbb
rclb
mov
rorb
and
into
or
push
lret
notl
sub
lock
mov
scas
popf
cli
adc
bound
in
adc
jmp
jecxz
jo
sub
inc
arpl
icebp
mov
pop
int3
cmp
inc
pop
or
add
dec
push
cmpsb
push
add
fisttps
xor
rclb
in
mov
mull
xchg
pop
mov
cld
arpl
or
jo
mov
movsl
and
cld
iret
enter
out
jg
xchg
mov
repz
cmp
mov
scas
pop
loopne
xor
jg
mov
cmc
pop
jge
mov
mov
out
adc
shrb
or
dec
jg
jg
mov
add
mov
cmp
push
inc
int3
imul
lock
ret
std
mov
xchg
add
jmp
mov
or
add
popa
negl
pop
lret
not
inc
xor
dec
xor
xor
shl
push
orl
add
jecxz
cs
mov
shll
data16
popf
cmpsb
stos
inc
jmp
in
jp
pop
cmp
xchg
mov
jle
aas
and
imul
and
lahf
adc
cmc
xchg
xlat
fsts
dec
sbb
enter
mov
addr16
jbe
stos
xor
outsb
inc
cltd
imul
pop
iret
in
fadds
clc
pop
jg
jge
in
incb
loope
in
jbe
push
out
jecxz
jmp
hlt
cmp
testl
sub
pop
enter
cmp
cwtl
fldenv
inc
das
mov
cwtl
pop
pop
jne
pushf
xchg
pop
push
in
es
push
sub
mov
call
dec
daa
test
test
add
add
shlb
fsubrs
fld
imul
popf
mov
sti
pop
sub
into
xor
inc
xchg
mov
mov
arpl
pop
aam
push
cmc
out
popf
je
cmpsb
adc
outsb
scas
jle
addr16
ds
aam
add
xchg
insb
in
scas
pop
mul
jmp
sub
in
mov
je
mov
rcrb
jecxz
add
jae
enter
jmp
pop
stos
xor
int3
inc
mov
aas
stc
repz
cltd
xorb
pop
sbb
out
cmc
pop
negb
sti
enter
addr16
and
xor
xchg
adc
fstpt
cli
xor
inc
jbe
jae
stos
mull
arpl
pushf
mov
rol
hlt
cmp
fisttpl
mov
int3
add
loop
xor
or
call
mov
adc
pop
xchg
cmp
jg
pop
pop
js
imul
in
jo
xchg
mov
les
bnd
arpl
in
test
lds
mov
sub
lock
mov
xor
gs
fs
ficomps
shrb
aas
inc
sub
sub
mov
add
lods
inc
push
mov
popl
jle
testb
mov
mov
negl
adc
dec
xor
stos
insl
push
ret
aaa
test
lea
repnz
mov
movsb
or
xor
shll
xchg
push
fisttpll
adc
dec
hlt
in
es
push
not
or
inc
cmp
jle
inc
stos
fstl
dec
push
push
outsl
mov
inc
add
push
or
mov
inc
mov
dec
mov
testb
push
pop
leave
dec
push
or
cmp
mov
lea
int
lock
clc
and
test
pop
ret
jmp
ja
test
popf
ljmp
rorl
lret
inc
subl
mov
ljmp
mov
push
push
inc
test
scas
or
int3
pusha
push
xchg
insl
sub
out
push
loopne
test
mov
jl
movsb
dec
mov
jmp
cmp
iret
in
xor
std
fcomip
into
adc
adc
sub
mov
in
leave
cli
sub
or
ja
push
dec
jae
push
test
insb
pop
pop
les
scas
cld
xor
sub
xlat
push
fstp
adc
clc
xchg
inc
out
je
imul
mov
movsl
mov
cmp
adc
sahf
mov
lds
xor
ret
inc
rcll
inc
cmp
inc
mov
out
scas
repz
mov
or
mov
shlb
int
inc
or
rep
sbb
cmpl
outsl
cmpsb
lret
pop
fcomp
gs
pusha
test
cwtl
in
push
push
mov
add
adc
mov
ja
mov
mov
repnz
arpl
rorl
sbb
mov
dec
enter
add
iret
ds
sahf
pop
das
mov
and
sub
std
daa
mov
xor
mov
mov
xlat
cmp
ret
cltd
adc
aad
gs
or
mov
pushl
mov
test
push
cmpsb
fistps
push
push
mov
jno
add
dec
shrl
inc
push
mov
insl
inc
aaa
pushf
push
out
ret
inc
ja
dec
mov
aad
insb
adc
outsb
xor
pop
dec
cmp
pop
xchg
cmp
mov
or
lcall
test
scas
push
ss
sbb
enter
loop
sub
aaa
lcall
mov
or
mov
and
inc
sarb
dec
insb
ss
imul
outsb
inc
imul
dec
pause
cmp
mov
icebp
test
mov
imul
insb
ss
jle
mov
in
lret
mov
dec
push
pop
adc
repnz
fnstenv
push
mov
test
es
mov
popa
or
xor
cmp
mov
adc
adc
adcl
lea
mov
add
imul
int
sub
and
insb
aam
into
or
les
pop
pop
out
repnz
jo
xor
nop
mov
test
and
mov
adc
lret
sub
dec
cmp
out
pop
cmove
movl
std
repz
jecxz
jno,pt
leave
inc
mov
inc
dec
adc
adc
loopne
dec
repz
in
mov
cs
push
flds
fsubr
sbb
dec
jp
inc
mov
das
inc
stc
outsb
arpl
and
iret
lock
and
cli
sbb
sarb
dec
xor
shll
add
jle
push
dec
pushf
lret
outsb
ret
dec
or
or
push
adc
or
xchg
or
cmp
push
sbb
es
and
sub
xor
pop
das
negl
mov
jg
cmp
push
pop
aaa
mov
mov
sub
xor
int
loopne
aas
aas
cmpsl
sahf
cmpsb
fsubs
xchg
sub
dec
xor
mov
cmp
jle
les
fnsave
daa
test
cmp
mov
jecxz
mov
icebp
push
out
push
jb
stos
push
cmp
jne
lock
inc
fs
outsl
into
sub
outsl
out
mov
jns
xchg
dec
add
jg
mov
dec
popa
stos
repz
push
fbld
sbb
mov
xor
sbb
in
movsl
sub
adc
mov
push
gs
jo
scas
sbb
mov
jns
mov
imulb
fnstenv
sbb
roll
push
stc
mov
stos
fwait
iret
add
sbb
lahf
mov
add
sub
inc
jo
and
ficoml
push
imul
insl
mov
cmp
out
xchg
inc
clc
lods
addb
add
fisubrs
movsl
aas
jns
test
jns
and
test
lds
adc
push
add
lret
lock
pop
sbb
add
mov
sbb
xor
mov
sbb
add
pop
mov
cmp
inc
lea
movl
pop
outsl
and
push
sub
in
add
les
sub
or
sbb
aaa
shl
insb
pop
adc
jns
into
fs
xchg
lods
je
fwait
push
inc
mov
mov
fdiv
pop
mov
push
lods
dec
imul
test
xor
xlat
imul
je
and
jg
mov
push
mov
push
xchg
popl
jp
pushl
bound
push
push
cmp
mov
jle
dec
pop
add
add
jp
mov
or
mov
movsb
xchg
mov
pop
iret
push
adc
add
in
mov
fisubrl
add
pop
xor
es
and
clc
pop
pop
ds
xlat
pop
movsb
lret
in
scas
test
jle
scas
ret
cmp
push
or
out
loop
pop
cmp
and
jmp
mov
add
push
jmp
insb
testb
cmpsb
loopne
mov
lahf
jb
xchg
mov
lahf
pop
lods
sbb
pop
sbb
sbb
jmp
pushw
subb
les
subb
rol
cmp
outsl
dec
xlat
push
dec
jnp
lcall
push
in
xor
push
fldt
xlat
leave
ljmp
mov
push
insl
leave
clc
push
sahf
xor
scas
shl
lret
js
bound
or
jnp
ljmp
mov
and
mov
out
mov
movsl
test
test
popf
js
fimuls
mov
xchg
or
out
addr16
xchg
movsb
pop
bound
inc
adc
mov
rorb
sub
push
xor
inc
fimull
adc
lods
gs
mov
push
xor
scas
inc
sbb
inc
ds
sub
and
push
inc
movsb
fiaddl
add
mov
data16
jne
adc
xabort
cli
fstps
aas
xchg
mov
std
imul
stc
jge
mov
and
mov
mov
scas
in
adc
stos
mov
jne
addr16
ficompl
test
out
push
insb
in
sub
mov
movsl
fwait
cmpsl
sahf
pop
push
adcb
test
out
jmp
outsb
pop
push
xorb
int3
jne
jne
aas
loope
lds
jp
jo
sti
sbb
call
inc
sub
sub
xlat
scas
loop
sbb
jl
icebp
movsl
in
daa
inc
lock
sub
mov
mov
lret
xlat
mov
jp
loope
imul
xchg
mov
jo
sahf
pop
je
xchg
call
sahf
xchg
xor
pop
lcall
lock
ljmp
sbb
bound
out
push
les
push
inc
push
push
mov
aaa
cmp
push
cli
mov
jecxz
mov
pop
inc
cli
mov
addr16
sbbw
jnp
jb
movsb
push
pop
call
addr16
fwait
inc
jge
add
xchg
mov
out
aas
sahf
addl
movsb
daa
stc
faddl
cmp
mov
in
push
out
pop
push
or
imul
ljmp
add
icebp
mov
add
fldl
mov
push
call
pop
pop
bound
fwait
shll
pop
stos
and
lret
add
xorl
jnp
mov
gs
or
adc
cmp
sub
out
mov
insl
xor
mov
or
sub
imull
inc
push
pop
cltd
popa
mov
pop
icebp
push
test
shll
xor
sbb
push
test
lods
xor
adc
lods
fisttps
mov
clc
add
mov
or
mov
inc
data16
test
sbb
iret
jle
adc
cmp
lds
push
int
pop
das
cli
inc
fistpl
sarl
mov
sbb
stc
or
into
out
jbe
cmpsb
lret
adc
andb
scas
adcl
adcb
and
xchg
jb
sub
shl
push
jle
popa
cmpsb
push
inc
movups
cmpsl
jl
movb
mov
xor
push
and
lock
fwait
dec
dec
pop
xor
xor
fisttps
push
push
jne
dec
adc
xchg
and
aas
and
fcoml
sahf
adc
outsl
pop
rcll
frstor
cmpsb
mov
inc
dec
mov
gs
and
jne
and
pop
repz
xchg
adc
call
int3
or
add
into
jno
rclb
bound
js
leave
inc
add
dec
jle
mov
sub
call
addb
in
repz
imul
and
jnp
not
add
add
jle
mov
popf
xchg
xor
movsb
testb
mov
ja
rorl
inc
popf
and
sbb
out
cltd
mov
or
negl
fisubs
mov
xchg
insb
jb
adc
jns
mov
add
repnz
fldl
sbb
xchg
add
mov
pop
pop
outsl
xchg
push
movsl
shll
pop
orl
mov
les
rclb
repz
xchg
enter
cmp
sbb
dec
test
dec
sbb
fsubs
and
shll
scas
xchg
leave
or
fcmovne
out
push
add
enter
mov
sbb
jnp
cmp
mov
rcrl
jnp
into
insb
xchg
adc
aad
jmp
adc
adc
negb
insb
sub
rorb
fstpt
sbb
jecxz
sbb
sub
mov
test
loopne
fs
and
lcall
push
mov
pop
inc
shlb
jne
push
repz
std
sarl
dec
mov
xlat
stos
mov
int3
xor
add
lea
popa
cli
pop
in
sti
imul
jno
cli
mov
sbb
aam
cmp
fcomps
and
push
ret
fistps
push
dec
enter
add
adc
fdivrs
xor
inc
out
sahf
xchg
pop
hlt
xchg
rcll
aas
in
pop
xlat
outsb
out
outsb
iret
jnp
lods
jo
ja
mov
pop
out
mov
mov
roll
sarb
clc
int
test
or
or
aad
sbb
or
clc
jmp
fcoml
mov
ror
cmp
jo
cmp
push
mov
cmc
cmpb
lds
pop
mov
dec
xchg
jmp
sahf
outsb
pushf
addr16
outsl
pop
movsl
imul
adc
adc
test
out
lahf
pusha
sub
movsb
add
into
imul
or
fsubr
mov
adc
in
sbb
mov
imul
jl
or
adc
mov
adc
sbb
xor
mov
out
pop
pop
xchg
mov
enter
mov
shlb
xor
adc
pop
lret
add
loopne
ja
push
rorl
sbb
shll
imul
lock
xchg
mov
and
dec
ljmp
xor
ljmp
pop
add
sub
pop
aas
repnz
int3
add
aas
mov
fs
and
sub
insl
je
lret
les
test
add
xorl
adc
fldl2e
int3
pushl
sbb
pushf
and
std
add
xchg
jo
flds
in
sub
test
fmull
mov
movsl
scas
scas
fistpll
shrb
test
mov
xor
call
lods
cmp
push
les
mov
mov
stos
repz
dec
dec
add
pop
adc
in
dec
dec
inc
inc
je
fmul
in
dec
sub
sahf
int3
out
add
jle
insl
lret
jmp
icebp
sub
pop
loope
movsl
xchg
cmp
dec
dec
sbb
push
inc
inc
mov
movsb
or
in
mov
dec
out
sbb
sbb
mov
xchg
repnz
mov
inc
cld
ret
xor
mov
sahf
es
test
in
mov
data16
mov
push
jbe
push
mov
stos
mov
cwtl
jbe
ja
jno
in
jo
fs
arpl
inc
ret
cwtl
add
jmp
scas
lea
add
push
adc
pushf
arpl
leave
sub
inc
pop
nop
bound
cltd
and
xor
mov
mov
cli
xchg
nop
jbe
sub
pop
jae
cmc
cmp
pop
pushf
scas
xlat
cwtl
inc
adc
pop
xor
bswap
or
or
xor
int3
out
lret
fstpl
repz
or
mov
or
nop
call
inc
in
mov
mov
adc
mov
test
push
xchg
lret
int3
not
loope
mov
push
mov
int3
push
lahf
loop
adc
hlt
xchg
ljmp
pop
mov
sbb
xchg
leave
inc
and
sub
and
imul
jo
stc
jno
xor
inc
mov
mov
stos
xchg
je
or
nop
mov
in
imull
aaa
push
or
in
out
addb
es
scas
adc
mov
lret
mov
rcrb
fcoml
pusha
imul
inc
int3
cs
pop
cmc
pop
sub
nop
push
add
mov
mov
sbb
push
aaa
add
leave
scas
aas
xchg
sti
pusha
loope
mov
sub
or
sbb
iret
sarb
rorl
movsl
jl
pop
aad
fnstsw
jecxz
push
ja
int
mov
cmpb
cltd
sarb
fldt
sbb
sub
int
in
int3
testb
xchg
movsb
popa
jecxz
dec
loope
enter
dec
stos
out
adc
sbb
fs
scas
xor
xchg
or
inc
test
mov
mov
imul
cmp
cmc
lahf
sub
jg
push
or
mov
mov
and
dec
mov
add
mov
in
sbb
ss
arpl
push
mov
popf
je
jecxz
xor
mov
cmp
stc
push
mov
ljmp
inc
out
out
loopne
mov
mov
jmp
lcall
insb
xor
imulb
mov
out
gs
lcall
inc
mov
push
pop
xor
mov
cmp
daa
imul
shll
aad
les
loopne
mov
pushf
test
pop
in
jnp
out
dec
sub
dec
pop
mov
mov
inc
pop
jno
adc
mov
pusha
adc
inc
les
clc
cmp
xchg
icebp
ret
inc
inc
test
mov
mov
xchg
jno
xchg
rol
imul
out
leave
cmpsb
leave
insb
mov
add
push
mov
pop
insb
shrl
xchg
lret
fwait
jle
jmp
in
icebp
into
inc
call
mov
pop
inc
jg
lahf
adc
pop
bound
pop
mov
adc
add
jmp
ss
divb
jmp
sbb
pop
cmp
daa
fildll
shrb
pushf
aas
cwtl
cli
mov
pop
es
and
jecxz
xor
jle
rolb
repnz
xor
cmpsb
test
mov
lret
cmp
xchg
and
push
inc
fbld
repnz
negb
popf
inc
jo
mov
sbb
add
jg
decl
shrb
rcll
jmp
cld
iret
repnz
mov
mov
pop
shll
fwait
lods
daa
rcrb
mov
and
adc
add
jmp
mov
jmp
and
popa
movsb
rcrl
mov
push
sub
mov
cmp
xchg
add
imul
cwtl
adc
or
xlat
push
jo
rorl
imul
mov
xchg
mov
push
ss
cltd
push
push
es
mov
loop
outsl
cmpsl
inc
cmpl
out
mov
sbb
inc
stos
int
out
daa
mov
clc
test
push
and
movsl
mov
mov
mov
lcall
out
lcall
in
mov
push
clc
shrl
pop
loope
push
scas
or
or
cwtl
cli
xlat
add
js
xor
stos
lret
xchg
aas
and
jns
xchg
daa
loopne
push
adc
lahf
dec
xor
cli
and
shrl
in
xor
std
cmpsl
popa
in
xchg
mov
adc
dec
push
jae
cld
mov
mov
mov
and
fsin
pop
and
out
mov
arpl
das
les
cmp
cmp
xchg
stos
ret
or
into
incb
xchg
test
movsb
mov
cld
pushf
push
xchg
or
sub
stc
and
push
daa
in
addr16
ret
je
dec
sbb
pop
xchg
xchg
shlb
mov
les
daa
jne
lods
jg
scas
lods
xor
lock
hlt
fistl
movsl
repnz
and
jo
cmpsl
aaa
pop
mov
ret
imul
push
adc
clc
jmp
xchg
mov
or
sbb
jg
cltd
xchg
jmp
jl
mov
mov
jecxz
fstl
out
adcb
cmp
movsl
sub
jae
repnz
or
cmp
add
lds
jp
cmp
cltd
insb
push
cmpb
sub
lock
je
lret
mov
test
addr16
or
enter
adc
xor
adc
and
mov
out
add
fwait
dec
fisubrs
push
jns
push
sub
xlat
sti
or
mov
mov
mov
addr16
jnp
pop
fninit
outsl
frstor
dec
int3
addr16
test
xor
loope
pop
add
into
sub
sahf
cmpsb
mov
test
lret
in
fwait
and
cmp
addr16
adc
daa
push
insl
shll
test
pop
xchg
dec
aaa
fs
jae
sti
lds
repz
clc
in
ds
mov
dec
cmp
cmc
and
stc
int
ljmp
int3
test
cmp
arpl
mov
ja
adc
je
dec
orl
pop
lds
test
or
dec
cmp
fwait
sub
push
mov
jne
fnstenv
dec
fidivs
xchg
cmpsb
clc
and
xchg
mov
mov
push
jmp
je
xchg
out
jmp
repz
pop
dec
adc
inc
fwait
mov
leave
int
sub
xor
outsl
lods
or
ss
cmp
ret
pop
sub
lods
jmp
jmp
push
aaa
ljmp
lock
cmp
pop
dec
mov
dec
test
clc
pop
mov
mov
and
stc
repz
cmpsl
cmp
jge
xchg
cmp
add
mov
adc
sbb
pushf
dec
les
add
push
cmpl
sbb
sbb
fdivrl
lock
lret
jbe
outsl
mov
test
jbe
mov
iret
mov
adc
shl
pop
mov
jno
test
ja
cmp
sbb
inc
shrb
xchg
add
cli
data16
xchg
gs
xchg
xchg
jns
pushl
pushf
fcmovu
jg
jns
fisubl
jb
mov
mov
sub
inc
pop
dec
jbe
fwait
lods
pop
mov
mov
stc
movsb
mov
inc
adc
leave
adc
and
mov
mov
jle
out
loopne
roll
inc
mov
push
iret
sarb
jbe
push
pusha
mov
jl
and
cmpsb
sbb
je
fimull
sti
jnp
sbb
cmpsl
pop
inc
mov
loopne
cltd
arpl
dec
xor
mov
loopne
fimuls
cmp
add
inc
mov
mov
daa
inc
adc
sub
loope
mov
push
lods
cmpl
adc
test
xor
cmp
push
aaa
cmp
loop
inc
shrb
fwait
jb
push
gs
fmul
pop
sub
sahf
inc
je
push
roll
mov
sar
std
lods
insb
insl
lds
adc
imul
pop
loope
ror
add
lods
nop
scas
xchg
addr16
mov
sub
icebp
lock
mov
sarl
aad
push
cmpsl
adc
jnp
adc
aaa
sub
stc
cwtl
roll
outsl
dec
test
addr16
mov
cmp
fprem1
es
add
mov
subb
call
outsb
add
cmp
cmpb
xor
pop
dec
push
jne
or
or
mov
dec
cmp
paddq
jae
push
jbe
ficoml
jno
jo
test
pop
clc
dec
adc
pop
xchg
aas
xor
iret
inc
push
inc
jae
pop
arpl
mov
and
jmp
jmp
dec
into
adc
adc
aaa
pushf
mov
rclb
xchg
nop
cmp
test
test
scas
add
loope
sbb
mov
fdivl
mov
out
outsl
hlt
push
inc
sub
addl
mov
adc
mov
cmp
aam
or
adc
dec
pop
and
lcall
scas
push
lahf
mov
mov
out
mov
dec
jge
jp
or
je
xchg
fxam
je
test
pop
cmc
inc
subb
cli
das
inc
jno
inc
loop
fwait
sub
add
sbb
inc
data16
or
adc
dec
push
inc
fsts
fbstp
vpslld
sahf
cmpb
fcmovnbe
cmp
cmp
shll
jmp
push
fistps
mov
jmp
cmp
add
out
jns
fld
or
push
jbe
jl
push
aaa
cli
mov
lea
mov
jp
out
and
jmp
mov
gs
push
addr16
ds
jmp
mov
cmp
inc
call
sbb
mov
and
cld
insl
ret
pop
nop
std
cmp
sar
xchg
push
and
mov
lahf
cs
cwtl
mov
mov
xor
scas
insl
sbb
xchg
fnsave
hlt
sub
mov
addr16
setg
mov
sub
xor
lcall
jno
pop
push
mov
or
fucomi
sbb
andb
mov
addr16
loope
and
stos
lret
std
mov
sbb
ljmp
mov
les
test
in
js
jb
in
xchg
aaa
cs
hlt
ja
xchg
lea
lcall
into
or
jns
cmpl
in
lock
insb
push
int
jnp
stos
jne
xor
sub
frstor
mov
mov
call
ror
or
sarb
mov
and
mov
fidivs
sarb
dec
sbb
mov
xor
pop
std
movsb
mov
fstpt
mov
ror
stos
mov
in
jae
and
mov
inc
adc
cmp
cmp
xchg
mov
lods
xor
shl
std
and
sbb
push
cmp
stos
jg
outsl
enter
fildl
mov
cmp
sbb
pop
sub
push
sbb
shll
leave
cld
mov
mov
popf
jle
adc
pop
pop
shrb
push
lods
push
pusha
inc
adc
or
out
cs
jns
nop
and
inc
dec
xor
loope
mov
movsb
jp
insl
sub
loope
push
int
pop
dec
out
or
sti
es
hlt
mov
faddl
int3
mov
add
sti
mulb
das
adc
xlat
movsl
leave
mov
pop
xchg
lds
cmp
fisttpl
and
xchg
sub
xor
sbb
jle
daa
out
jecxz
or
jecxz
lcall
add
out
mov
and
notb
scas
push
mov
mov
and
dec
lods
jnp
add
mov
test
movsl
arpl
pop
cmp
pop
jb
inc
dec
mov
arpl
dec
stos
push
ficoml
aaa
push
adc
gs
cmp
adc
sbb
je
les
ss
lret
or
xor
cmp
xor
shrb
xor
mov
cmp
lea
push
pushf
in
mov
adc
movsb
sbb
adc
arpl
jno
mov
int3
sub
std
mov
nop
xchg
dec
repz
inc
mov
sbbl
xor
lods
xor
xlat
shl
insl
inc
mov
add
and
adc
adc
sub
addr16
dec
pop
inc
adc
push
xor
dec
fimuls
sbb
fldl
orb
lods
loope
adc
and
xor
cmp
jae
add
scas
push
inc
mov
and
das
push
mov
mov
repz
mov
add
addr16
cmp
sub
and
sbb
hlt
inc
dec
movsb
cmp
sarb
xor
sahf
sbb
ja
inc
pop
jle
inc
stc
or
adc
ja
data16
and
jo
outsl
xchg
call
pop
sbb
jg
lock
insb
xchg
push
dec
xchg
jns
add
pop
lock
pushf
push
pop
scas
fcmove
add
dec
mov
aaa
out
stos
adc
loop
push
pop
jl
and
mov
cmp
pop
xor
xchg
rorb
adc
in
mov
jae
testl
sbbl
notb
xchg
loop
and
int3
ja
add
icebp
mov
xchg
push
leave
sbb
jns
outsb
sarl
dec
and
push
add
faddl
jmp
pushf
adc
add
mov
sahf
aam
cmp
ret
ss
push
add
lret
cmp
mov
xor
or
iret
mov
lds
sti
call
addr16
outsb
sub
jo,pt
shll
in
shll
sbb
push
jns
int3
inc
pop
adc
pushf
test
aas
nop
subl
sub
lret
test
js
push
pop
scas
mov
das
cld
addr16
push
pop
orb
ds
xlat
cltd
pushf
and
enter
push
fadd
dec
xor
leave
sub
xor
mov
popa
inc
hlt
cmpsb
xchg
or
pop
xchg
xor
jg
hlt
into
xchg
dec
rclb
xor
jbe
test
fnsave
dec
add
repnz
mov
icebp
cli
nop
cli
pop
pop
rol
out
mov
mov
sbb
and
out
add
ret
insb
dec
sysret
adc
ss
es
mov
pop
pop
push
cltd
icebp
push
jp
aad
out
fistps
xor
push
mov
or
lock
jmp
mov
pop
cmpsb
add
xchg
inc
stos
jge
cmp
xor
push
cmp
cmp
shrl
fdivrs
cmp
ficoml
push
xlat
adc
add
call
or
jns
and
lahf
sti
lock
pusha
dec
sti
test
movb
mov
cld
xchg
mov
in
in
pop
or
sbb
mov
push
mov
popf
das
adc
cmp
jbe
bnd
jle
mov
lods
mov
push
add
imulb
insb
xchg
cmpsl
shrl
or
nop
dec
ja
stc
iret
cmpl
bound
jge,pt
xchg
popf
jmp
scas
sub
xchg
lret
shr
cmpsb
lods
out
jae
mov
pop
mov
mov
das
pcmpgtw
loopne
daa
xchg
or
cmpsb
mov
pop
xorl
lock
icebp
pushf
pop
fdivrl
stos
pop
into
idivb
and
adcl
push
in
das
fimuls
das
orl
ret
or
ss
mov
dec
les
mov
or
nop
imul
add
dec
aaa
mov
cmp
mov
sub
ret
icebp
out
fs
int
adc
inc
imull
ljmp
or
dec
mov
cwtl
jp
add
mov
stc
out
inc
inc
enter
mov
sub
cs
cwtl
popf
stc
mov
mov
mov
scas
jno
rcrl
ret
gs
les
sub
in
mov
xchg
fistpll
jnp
dec
cmp
pop
mov
fldl
push
pop
in
jbe,pn
xchg
out
add
lahf
dec
xchg
cmpsl
lods
sbb
les
adcb
fs
or
adc
cmp
pop
mov
jnp
aam
out
insl
ss
lcall
out
lret
fucomi
xchg
xchg
xlat
lcall
arpl
movsb
icebp
mov
inc
xor
adc
mov
inc
fmull
xchg
orb
daa
cs
popa
call
xlat
fsts
popl
aad
imull
lea
jnp
insb
mov
xchg
sbb
jb
dec
sbb
into
test
add
in
out
lds
xor
mov
add
xchg
scas
mov
jno
mull
push
test
sub
adc
cmpsl
out
in
pop
jns
cmc
cmp
outsl
adc
xchg
leave
mov
sbb
testl
test
mov
lcall
xchg
cmp
sub
dec
popl
xor
mov
rep
fistps
xchg
scas
mov
movsl
pop
pushf
lahf
clc
pusha
subl
inc
cmp
xor
lret
fsubrs
mov
push
mov
shll
sbb
clc
pop
lock
xchg
addr16
not
lahf
xor
jae
bnd
arpl
adc
push
cmpsb
dec
in
movsb
lods
and
and
mov
xchg
inc
nop
fidivrl
mov
mov
sub
pop
pop
mov
inc
aad
inc
inc
jge
shl
roll
mov
dec
sbb
out
and
fldenv
js
mov
mov
loop
adc
outsl
xchg
or
push
xchg
xor
addr16
inc
aaa
sahf
scas
cmpb
inc
dec
leave
popf
mov
stos
pop
cmpsb
lods
or
loop
out
out
cwtl
xchg
add
into
xchg
add
xchg
divb
adc
push
xchg
inc
adcb
lods
or
test
xor
mov
call
mov
out
add
xchg
shrl
sbbl
pushf
xor
cwtl
push
xchg
inc
rol
outsl
shl
jge
fs
jge
mov
pop
mov
ja
stc
int3
sub
jge
int
or
sbb
push
aaa
repnz
test
test
imulb
mov
fcmovne
sub
pop
or
lods
scas
lcall
push
cmp
push
imul
incb
stos
aaa
add
pop
cmp
aaa
jne
fwait
pop
call
adc
inc
ror
mov
jbe
cs
out
jp
dec
andb
sar
in
or
aad
testl
fstpt
or
aad
fmul
dec
and
inc
les
call
add
ss
xorl
aas
add
cmp
nop
lret
test
dec
xchg
xor
cwtl
or
or
fwait
test
inc
ljmp
mov
insb
inc
inc
mov
add
call
fs
arpl
je
pop
addr16
stos
sub
cmp
stos
ja
shlb
cwtl
mov
aad
fdivs
or
ja
dec
cli
jne
shrb
scas
js
and
adc
dec
sub
std
add
adc
aad
or
mov
popf
insl
dec
dec
mov
sub
leave
ljmp
mov
push
pop
push
mov
cmp
push
xor
mov
mov
mov
cltd
aad
push
lret
vucomisd
pop
add
push
push
pop
adc
and
xchg
je
and
hlt
aad
cmp
push
addr16
mov
outsl
push
xchg
bound
lret
pop
adc
push
cmp
xchg
sub
lods
iret
outsl
inc
mov
shl
pop
shl
out
adc
or
lret
mov
add
lret
push
das
popa
push
leave
push
jmp
int3
push
int3
fisubrl
adcb
inc
xchg
fnstcw
iret
pop
mov
test
push
setle
push
and
xor
or
das
xor
mov
int3
push
scas
dec
pop
int
es
pop
bound
xabort
data16
jo
fcoml
loopne
test
insl
pop
dec
add
adc
add
cs
pop
addr16
inc
in
cmp
dec
sarb
mov
inc
push
std
push
pop
xor
movsb
push
push
je
pop
leave
mov
in
push
mov
repnz
outsl
mov
shlb
insb
xor
and
in
pop
int
aas
outsl
mov
das
mov
inc
mov
mov
lods
mov
into
xchg
xchg
pop
and
sub
sahf
push
and
push
scas
dec
fwait
hlt
test
test
aad
cmpl
daa
mov
add
jle
mov
pop
sub
out
test
mov
imulb
add
aad
xor
sbb
popf
addr16
dec
imul
bound
iret
pop
sbb
arpl
sub
cs
mov
das
test
lods
add
xchg
icebp
nop
mov
push
int
inc
out
inc
fcoml
xchg
pop
es
add
mov
push
mov
out
mov
sbb
mov
dec
fcmovne
jmp
cmp
or
mov
loope
mov
jno
cwtl
int3
cmpsl
pop
jbe,pn
je
and
push
popf
scas
je
cmc
adc
xchg
adc
aas
xor
and
aam
xchg
fdivrl
shr
movsb
cmp
lea
in
lods
inc
int
mov
test
mov
inc
pusha
iret
pop
cli
int
roll
mov
or
sub
rorb
addr16
fcomp
xor
fwait
inc
xor
push
push
mov
iret
sub
push
in
push
xchg
mov
repnz
call
xchg
jbe
ljmp
pop
setns
mov
repz
enter
mov
repz
pop
xor
push
dec
dec
lods
lea
imul
dec
hlt
and
xchg
out
pusha
notb
dec
jl
lods
ror
push
inc
aam
jb
outsb
mov
filds
dec
jns
cmpb
sub
dec
mov
pop
pop
loop
sahf
cmp
addb
icebp
sub
inc
push
daa
cmp
sahf
xchg
sub
ja
test
xor
sbb
hlt
inc
xchg
cmp
fbld
das
iret
sarb
push
dec
repnz
inc
and
das
sub
push
mov
cmc
nop
mov
movsb
aaa
jle
add
jmp
sub
inc
pop
push
ret
inc
shlb
loop
nop
mov
xor
outsl
jae
test
inc
stc
jg
sbb
jb
clc
push
daa
xor
jb
dec
xchg
leave
adc
inc
cmp
ret
call
loopne
popf
sbb
mov
push
xchg
dec
jbe
ja
bound
xchg
test
mov
rorb
mov
clc
gs
inc
jb
mov
pop
and
clc
int3
mov
test
movl
sub
mov
sar
and
stos
sbb
filds
mov
loopne
in
xorb
add
push
lods
dec
mov
add
inc
and
adc
cld
fdivr
lods
iret
push
arpl
in
adc
out
inc
inc
cs
inc
xorl
cmp
hlt
inc
lcall
ljmp
add
mov
packssdw
icebp
out
inc
ja
push
enter
pop
fidivrs
sti
mov
lea
loop
lret
or
mov
imul
sbb
adc
jbe
scas
in
xchg
bound
repz
adc
jne
inc
and
dec
mov
add
mov
mov
es
in
cmp
lds
iret
nop
push
aam
dec
cmp
cmc
scas
int
popf
mov
adc
xchg
push
inc
adc
stos
xchg
jns
sahf
es
jge
mov
mov
es
rcrb
mov
cmc
add
mov
sub
imul
test
push
rolb
mov
mov
outsl
or
test
jne
in
add
push
nop
fistl
test
cltd
sbb
outsb
fdivrs
jg
cwtl
fxam
enter
hlt
xchg
push
inc
mov
in
jecxz
imul
insl
add
daa
jae
dec
imul
testb
test
bound
cs
outsl
sub
scas
lea
mov
test
lds
sbb
loop
dec
add
sbbl
bound
aaa
cli
icebp
loope
frstor
push
jae
shrb
sbb
dec
addr16
ret
dec
adc
or
mov
lcall
inc
fcomps
dec
mov
xor
ret
inc
outsl
dec
xchg
bound
cs
das
xor
or
inc
bound
bound
loopne
popf
lea
xchg
pop
pop
xchg
pop
das
or
sub
leave
lods
mov
jno
js
xlat
jp
xor
mov
jne
or
sub
adc
lcall
sarb
loop
int
push
dec
mov
push
fldlg2
aad
leave
fbld
xor
cwtl
sub
mov
outsl
or
frstor
enter
add
or
and
and
mov
push
ret
mov
call
hlt
orl
fs
mov
adc
add
mov
jge
bound
and
mov
mov
shrl
dec
sbb
fidivs
pop
shlb
add
mov
jge
loop
js
cs
sbb
push
leave
cltd
sub
pop
push
dec
cmp
in
cs
sbb
adc
add
cli
add
dec
sbb
sub
xor
loopne,pt
test
loopne
xchg
jl
dec
jnp
mov
int
sub
movsb
adc
rorl
xchg
and
adc
jae
sub
scas
jns
jl
inc
cmpsb
xchg
or
fiaddl
xchg
pushf
fistl
adc
pop
pop
adc
js
into
push
or
cmp
cmc
sbb
ljmp
push
adc
aad
popa
sub
push
dec
fnsave
pop
sub
or
les
xor
lods
iret
sub
sub
stos
fisubrs
fistpl
pop
clc
ficoml
xchg
js
sbb
mov
imulb
sub
and
imul
mov
mov
call
loopne
int
fwait
add
popf
xchg
sub
cmp
popf
jo
pop
or
testl
push
xchg
inc
cs
cld
xchg
or
mov
data16
pop
xlat
bound
nop
inc
adc
insb
jb
mov
cltd
dec
push
into
ds
stos
push
movsb
vshufpd
dec
bound
mov
sbb
fimuls
shrb
mov
jle
scas
je
enter
add
in
subb
int3
pop
inc
dec
lods
ljmp
test
negb
mov
imul
mov
scas
sub
hlt
in
or
es
dec
ret
mov
movsb
lahf
mov
enter
push
stc
pop
shl
jo
xchg
je
and
jge
sbb
ficoml
cmp
xchg
push
popf
enter
xor
cmp
jne
inc
adc
movsl
pop
stc
js
lret
subb
int3
mov
push
repz
in
adcl
pop
adcl
jecxz
sbb
int3
jno
sub
jae
roll
out
cld
popf
mov
push
lret
cmpl
mov
je
inc
shrl
xchg
or
fcoms
daa
adc
sbb
adc
outsl
mov
loop
xor
mov
mov
mov
aaa
cmp
or
mov
pushl
jp
and
sbb
and
push
push
dec
cmp
push
cmc
sub
lock
push
imul
add
jo
subb
test
xchg
inc
imul
xchg
pop
dec
cltd
or
adcl
mov
movb
sub
aas
sub
std
push
iret
sbb
sbbl
mov
and
enter
loopne
xchg
mov
mov
cli
pop
inc
jmp
out
mov
pop
lret
add
mov
xchg
std
push
mov
stc
addl
cs
or
pop
sbb
fcoml
and
jbe
jle
mov
sbb
xlat
mov
loope
test
adc
aad
imul
aaa
sti
pop
jle
adc
das
xor
pop
int
mov
jo
test
lahf
xchg
es
ss
cmc
cwtl
cmp
call
divb
push
pop
loopne
jne
sub
sbb
cmpsl
cmp
pop
mov
daa
lret
arpl
pop
cmpsb
add
add
ret
pop
jo
cmp
lcall
aad
add
int
fidivs
jno
enter
pop
pop
xchg
rcrl
jl
aas
out
push
movsb
outsl
stos
lcall
add
insl
add
cs
or
cmp
ja
stos
shrl
int
lock
mov
dec
sub
xlat
pop
je
dec
mov
jecxz
icebp
jo
out
orl
das
mov
loopne
cmp
sti
bound
arpl
jnp
stos
jmp
gs
or
jne,pt
inc
jmp
pop
leave
inc
dec
lea
mov
mov
adc
cli
pop
int
sbb
lock
xor
mov
cmpsb
or
addr16
jnp
ljmp
aam
jbe
pop
in
add
mov
sbb
icebp
cmp
inc
fsubr
push
enter
push
pusha
insb
push
jge
movsb
imul
push
insb
mov
jmp
fsub
fistpl
imul
jne
out
shrl
xchg
mov
repnz
add
cmp
mov
std
ficomps
outsb
or
inc
int3
mov
cmp
stos
in
out
sbb
cmpsl
jno
loop
addr16
mov
pop
sti
cmpl
dec
icebp
and
insl
ja
loope
push
mov
gs
rclb
pop
xor
test
cmp
jae
in
mov
sti
jge
xor
loop,pn
mov
fs
cmc
cmpsb
mov
repnz
mov
sti
jb
or
mov
xlat
ret
jae
mov
and
repz
fimull
mov
or
sub
pop
arpl
out
notb
in
sahf
nop
pop
lret
xchg
jge
xlat
mov
adc
push
data16
ret
cmp
lret
cld
inc
shll
pop
push
out
fsub
inc
dec
fmul
filds
ret
adc
orl
repz
pop
jge
pop
jno
test
pop
jmp
test
or
mov
bnd
fstl
sub
into
xchg
and
mov
mov
push
js
das
add
addr16
shrl
push
and
jmp
cmc
push
pop
pop
xor
mov
mov
jl
cmp
cltd
sbb
jg
nop
ljmp
xor
shlb
in
lcall
cmp
dec
stos
cmp
jle
mov
mov
rolb
leave
pushf
and
inc
aad
sub
jmp
movsl
scas
xchg
xchg
pushf
ret
lret
add
jbe
js
inc
das
push
push
adc
add
popf
mov
dec
pop
inc
sub
int
pop
pop
xor
sub
icebp
push
das
popa
cwtl
cwtl
out
daa
pop
inc
sbb
xchg
dec
aas
leave
in
adc
loopne
fsubs
mov
rorl
insl
xor
into
daa
jne
fiaddl
sbb
xchg
and
pop
and
xlat
cmp
pop
fwait
or
mov
xchg
jae
insl
jns
pop
inc
push
dec
popa
ret
lahf
sbb
or
fs
sti
mov
add
pushf
sub
jno
cwtl
jb
xchg
aas
xor
jae
stos
push
jae
sbb
pop
jmp
test
mov
hlt
mov
jg
movsl
out
addr16
test
les
push
fnstsw
xchg
lods
iret
jg
mov
cmp
cs
xchg
dec
jmp
pusha
int3
push
mov
mov
movsb
mov
xchg
jg
lret
sub
push
mov
pop
pop
mov
push
pop
mov
xlat
mov
add
cmp
xchg
push
out
cmp
addr16
or
lret
emms
sbb
std
cmpsl
clc
stc
cmpsl
pop
mov
push
xchg
jecxz
lret
aaa
pop
inc
cwtl
test
dec
ja
and
add
and
out
dec
pop
or
sbb
sub
stc
or
fidivrl
mov
push
fs
xchg
jmp
popa
test
inc
xor
mov
cmp
mov
inc
xor
dec
sbb
cmc
sahf
enter
arpl
testb
enter
fistpll
sbb
and
push
sbb
out
mov
pop
incb
pushf
add
jp
cmp
xchg
inc
popf
int
arpl
cld
data16
push
mov
in
lds
repnz
adc
jg
in
mov
jmp
sbb
mov
js
lds
mov
cs
or
push
inc
and
mov
inc
stos
mov
and
sub
and
inc
or
add
out
ret
inc
movb
test
in
pop
dec
or
inc
jge
inc
inc
aas
xor
lods
or
pop
sub
into
jae
mov
loop
inc
mov
aaa
cmp
ret
lret
mov
inc
jb
mov
adc
push
mov
scas
imul
jl
cmpsb
dec
sub
jnp
pop
cmc
bnd
mov
mov
inc
xor
cltd
or
loope
mov
cmp
insl
xchg
gs
mov
mov
repnz
mov
add
mov
insb
fidivl
and
sub
in
loopne
in
jbe
xchg
push
sahf
fwait
daa
dec
stos
adc
rcrb
shlb
stc
cmp
call
cmp
and
adc
nop
cs
dec
stos
jle
add
jbe
lods
repnz
ret
adc
test
push
or
inc
out
or
xchg
and
fdivrs
mov
or
push
movsb
sub
push
inc
adc
xchg
loop
jl
je
xchg
mov
push
repnz
cmpsb
mov
xchg
aas
push
dec
add
inc
out
iret
shl
decb
pop
mov
js
jbe
push
jbe
xchg
push
imul
push
add
and
xor
mov
loop
pop
pusha
out
ret
push
dec
test
mov
sti
jl
push
mov
pop
mov
test
cld
movsb
js
inc
or
jns
fs
push
sub
pop
pusha
popl
and
call
xor
adc
mov
addb
cmp
leave
mov
ss
mov
sbb
popa
push
inc
imul
pop
or
negl
inc
icebp
and
std
xchg
aas
into
push
jle
sub
fcomps
sbb
adc
push
jmp
andl
lea
sub
adc
xor
fxch
push
test
push
fs
jecxz
and
jge
scas
scas
pop
pop
ret
dec
fs
es
jmp
daa
fbld
sub
movsb
loop
mov
movsl
imul
sub
pop
mov
mov
cmp
push
or
imul
jle
in
xor
hlt
arpl
jle
pop
or
adc
cmp
add
je
mov
lods
jo
mov
out
inc
inc
sub
std
dec
inc
mov
test
fdivrp
outsb
xchg
ss
out
push
lea
add
js
shll
mov
fwait
jge
cmp
cwtl
stos
xchg
push
mov
fstps
repnz
sub
incl
hlt
je
or
push
fcomip
jbe
inc
pop
or
mov
mov
cmpsl
aas
push
and
mov
or
mov
fidivs
push
test
imul
insb
not
aas
sbb
jle
test
sub
or
pop
and
adcl
pop
fsubrs
adc
xorl
fwait
lock
pop
es
das
cmp
mov
mov
imul
js
fldt
lods
cmc
pop
mov
scas
fisubs
mov
sbb
lcall
dec
mov
shl
ja
in
aas
outsb
cwtl
jo
sub
xor
lcall
mov
nop
mov
jge
jl
scas
mov
mov
push
mov
mov
mov
jne
dec
mov
popf
adc
mov
adc
aam
mov
adc
mov
pop
loop
jbe
stos
add
pop
out
push
mov
and
insb
adc
mov
inc
cmp
jecxz
int3
loop
mov
push
rol
out
push
mov
add
dec
imul
mov
sbb
cltd
shr
xchg
xchg
ljmp
fsubl
lret
xlat
sti
ja
xor
data16
pop
or
out
adc
or
pop
add
jae
jb
mov
inc
add
jb
pop
mov
test
jg
add
ret
ret
roll
sti
inc
shrb
sub
adc
es
mov
test
lea
idiv
cs
outsl
aaa
sbb
ret
dec
or
pop
pop
fwait
pop
cmpsl
jg
mov
ljmp
jae
ret
mov
dec
xor
fstpl
mull
add
pop
adc
lods
sub
or
cmpsl
andb
leave
xor
hlt
sbb
or
out
mov
adc
jnp
ss
jecxz
cli
jmp
cmp
bound
jp
lahf
mov
adc
bound
aas
dec
scas
bound
rorl
loope
jg
xor
fbstp
adc
jo
sahf
cltd
xchg
lds
mov
fidivrs
sub
mov
scas
std
fcmovnu
adc
lock
sbb
jo
dec
inc
pop
xchg
push
mov
das
adc
imul
or
lock
scas
fsub
imul
out
aaa
ds
out
dec
addr16
add
leave
cmp
sbb
jl
fbstp
fisubrl
aad
test
xor
adc
rcrl
xor
int
arpl
sub
hlt
jo
push
dec
and
pop
inc
cmp
into
adc
fmull
sbb
jb
push
inc
jecxz
xchg
je
in
mov
inc
push
mov
test
outsl
clc
cmp
stos
jp
push
mov
js
jge
cmpsl
sbb
andl
mov
inc
xor
inc
push
inc
mov
and
adc
mov
xor
sub
push
push
cmp
loope
in
in
les
xchg
and
lahf
push
imul
adc
pop
mov
pop
mov
lret
xchg
cmp
mov
fs
sarb
in
jmp
scas
xchg
lock
push
mov
cmp
ds
arpl
clc
or
and
push
xchg
mov
dec
sbb
shrl
sbb
icebp
cmpsl
repz
enter
mov
movsb
popf
add
and
iret
mov
sti
loopne
and
xor
imul
cmpsb
je
sti
in
repz
xor
jae
pushf
sub
or
mov
insl
cmc
je
std
iret
adc
add
mov
idivb
aas
xchg
inc
and
mov
cs
rcr
fidivrl
mov
xchg
rclb
xlat
adc
hlt
fnsave
in
das
getsec
in
sbb
xor
push
and
and
pusha
roll
cmpsl
pusha
aas
mov
and
mov
add
xor
fwait
call
or
loope
adc
stc
mov
add
ud1
jb
and
shl
adc
pop
movsl
xchg
loope
pop
pmulhuw
cltd
movb
add
and
cmpl
mov
xchg
adc
lcall
imul
je
insb
cld
gs
jmp
fs
mov
clc
out
mov
sbb
and
adc
dec
jo
lods
sbb
clc
movsl
mov
into
mov
xchg
cmc
xor
cli
push
or
xchg
add
jge
sbb
cmp
push
int
insb
jns
adc
jle
sbb
out
pop
testb
not
rol
mov
cmp
nop
and
jmp
sub
rorl
pop
cmpsb
dec
inc
xchg
or
mov
jnp
fpatan
mov
mov
leave
icebp
pop
scas
mov
sbb
jp
nop
lds
cld
sub
js
mov
in
int3
jbe
out
imul
mov
ret
loop
lods
jmp
nop
add
add
push
inc
iret
aaa
fstpt
rcrb
pushf
movsl
sub
subb
test
std
xchg
push
jl
out
imul
aad
jo
inc
inc
pop
cmp
jne
int3
popf
sbb
out
imul
mov
enter
aaa
fs
jae
out
mov
jbe
adc
jnp
lds
cmp
pop
dec
lock
adc
test
jp
lods
and
orl
lock
stos
arpl
jg
mov
fldl
inc
sub
pop
fwait
and
or
jns
test
cltd
test
pop
aaa
imul
jo
scas
sar
dec
leave
adc
xor
stos
and
aaa
jns
pop
xchg
gs
adcb
stos
cltd
lock
dec
movsb
in
notb
into
xchg
jle
xor
scas
mov
push
inc
pop
dec
ds
out
test
xchg
arpl
rorl
add
cmc
xchg
jbe
int3
or
cmp
sbb
in
in
inc
mov
paddsw
dec
movsl
lret
add
aad
push
enter
mov
outsl
xlat
mul
sarb
mov
clc
pmaxsw
mov
jae
jne
insb
inc
adc
jne
sub
test
fiaddl
int3
fimuls
cmpsl
mov
pop
scas
loop
pop
or
add
jecxz
mov
rcl
mov
or
adcb
push
stos
xchg
cld
jnp
cmp
mov
int3
jnp
daa
inc
out
mov
jp
cld
inc
lahf
cmp
test
jle
add
xchg
mov
sahf
imul
lods
sti
in
adc
mov
sub
int
add
cmp
xor
mov
push
or
je
lret
mov
call
scas
cmpsb
mov
push
and
cmc
clc
mov
inc
push
call
popl
js
jae
pop
ss
test
xchg
push
push
inc
das
pop
mov
and
cmp
push
stc
shll
inc
adc
add
dec
jle
sub
cmp
shrb
sbb
scas
or
cmp
push
daa
aam
sti
sbb
pop
adc
incl
xor
pusha
mov
xchg
notl
scas
scas
fs
adc
dec
cmp
cmpsb
repz
divl
xlat
or
add
test
sbb
filds
xor
mov
rcrl
jns
adc
mov
out
loope
inc
insb
fidivs
mov
push
outsb
adc
das
push
pop
mov
sub
cwtl
divb
sarl
mov
adcb
sti
adc
jb
scas
jno
dec
xchg
out
test
pop
jae
scas
lods
das
scas
add
fwait
mov
lds
pop
mov
cmpsb
sub
ret
push
adc
enter
loop
sub
xlat
out
cmpsb
and
or
sub
jo
xor
cmp
sub
and
inc
push
mov
xchg
mov
push
repnz
arpl
mov
jbe
lods
test
cld
repnz
pop
xor
sub
mov
and
ret
inc
cmp
call
cltd
xchg
cld
movsl
loopne
js
aad
sbb
and
push
cmp
movsl
cmp
mov
test
mov
arpl
pusha
sbb
into
xchg
sbb
aam
cld
repz
gs
lods
divb
jmp
aad
imul
push
adc
jg
pop
test
pop
pusha
mov
xchg
cmp
shl
in
sahf
movsl
loope
cmc
jbe
push
insb
mov
jg
mov
pop
fsubs
aaa
call
out
mov
je
sub
push
dec
jno
out
test
popf
out
sub
inc
or
jne
mov
lods
aam
push
data16
fwait
or
bound
jo
ja
or
adc
push
jmp
insl
aad
push
cmpsl
and
cltd
and
stc
sub
test
push
xchg
popa
sub
test
fadd
cmp
mull
inc
pop
test
test
xchg
sahf
gs
ds
sub
push
mov
enter
lods
pushf
sbb
adc
cmp
fdivrs
mov
fcompl
sub
test
incb
and
xor
xchg
aas
inc
pop
cmpsl
inc
ljmp
jnp
inc
call
xor
outsl
jl
faddl
in
adc
orb
stos
icebp
jmp
sbb
mov
jo
lds
int
dec
push
sbb
sahf
cmc
je
mov
nop
call
stos
mov
xor
negl
pop
lret
in
add
sbb
in
mov
dec
and
adc
ret
mov
out
inc
adc
dec
mov
cmp
jo
loopne
aaa
add
setbe
xchg
push
push
dec
pop
dec
fs
adc
mov
pop
jns
mov
or
pusha
push
pop
sub
mov
or
xor
xor
dec
rorl
jns
cmp
push
popf
dec
xchg
int
rcll
jo
cs
push
lret
xchg
out
frstor
dec
sbb
daa
sub
or
aad
cmp
pop
fdiv
sbb
hlt
imul
xor
and
out
inc
jl
int3
orb
sub
add
xlat
and
in
imul
adc
stos
adc
jb
or
test
aaa
dec
iret
dec
push
jns
adc
imul
stos
hlt
ror
in
pop
xchg
dec
cmp
inc
jnp
push
out
xchg
popa
mov
stos
aas
in
ret
push
jo
push
push
push
mov
jle
jbe
popa
mov
xchg
add
icebp
inc
mov
inc
pop
jge
ret
loopne
adc
jb
in
dec
rcrl
lds
ja
and
mov
shll
lcall
rclb
icebp
ret
ret
aas
dec
aam
push
insl
xor
leave
pop
or
or
or
mov
dec
mov
xchg
sub
dec
jecxz
push
and
ret
bound
xlat
cs
dec
jecxz
xor
xchg
xchg
and
mov
xchg
pop
mov
test
xchg
and
and
mov
adc
out
inc
jae
ret
test
push
sub
push
int3
adc
lods
mov
jmp
push
jnp
inc
enter
mov
into
push
xor
int
adc
push
cmpsl
insb
std
push
cmpsl
idiv
mov
addb
insb
repz
mov
jl
mov
push
std
push
ja
inc
adc
adc
mov
mov
fistpll
sbb
mov
andb
xchg
fmuls
push
mov
mov
mov
testb
pop
jbe
add
mov
xchg
add
iret
ret
inc
jge
cmp
pop
inc
out
jle
or
cmp
in
inc
push
pop
add
inc
push
mov
xchg
test
std
rcr
jno
dec
and
call
xchg
test
int3
push
into
pop
or
xor
push
in
add
cmpsl
sti
sub
sbbl
pop
leave
out
iret
sarb
mov
and
mov
enter
inc
pop
xchg
outsl
ds
sub
sti
push
cmp
call
adc
jne
cwtl
pop
ret
jge
sub
pop
movsb
mov
aad
sbb
out
sbb
xchg
mov
xor
scas
enter
mov
cs
cmp
xchg
push
jbe
test
aam
pop
xchg
xchg
mov
sub
ret
incl
pop
inc
stos
lcall
cmp
fildll
xor
cli
push
rclb
jns
inc
decl
or
pop
push
sbb
add
nop
and
das
lods
xchg
inc
inc
leave
pop
mov
inc
dec
jp
push
repz
dec
shl
sti
xchg
loopne
pop
les
mov
mov
pop
or
inc
mov
jp
jmp
xorb
xchg
pop
dec
out
dec
addl
or
dec
xor
sbb
ja
push
add
pop
jmp
and
fwait
out
push
insl
mov
ret
pop
mov
xor
push
jp
in
mov
adc
add
cmp
jmp
fdiv
fadds
lcall
leave
or
fstpl
dec
or
std
in
test
mov
and
sub
lea
daa
pop
idiv
sub
in
aas
inc
js
je
pop
mov
bound
xchg
push
mov
ja
push
xchg
loop
dec
out
scas
rcr
cmpsl
lea
mov
mov
jo
pushf
mov
xlat
lods
xchg
xchg
loop
cli
cmpsb
cmpsb
xchg
lret
insl
push
bound
stc
and
lahf
and
movsb
xor
push
or
mulb
sub
test
xlat
mov
lcall
shlb
sbb
mov
cmp
cmp
adc
outsl
lea
inc
and
sub
mov
jne
dec
into
adc
inc
out
dec
std
sbbl
pop
or
jg
or
lahf
fimull
sbb
into
sbb
orb
in
shll
xchg
dec
push
out
loopne
es
out
out
cld
mov
inc
popf
lahf
jge
lods
ret
sub
repnz
jecxz
mov
and
lcall
pop
scas
push
loop
sahf
insl
adc
aad
pop
mov
test
jb
add
stc
les
xorb
adc
es
push
xchg
jnp
stc
adc
fisubrl
adc
outsl
jnp
je
mov
aaa
sahf
cmpl
push
inc
std
mov
out
mov
xor
inc
cmp
mov
xchg
in
std
out
imul
pusha
inc
adc
popf
mov
loopne
or
sbb
mov
adc
jae
dec
mov
xchg
fldenv
or
shrl
dec
outsl
jg
cmpsb
xor
in
into
decb
aaa
mov
sbb
je
lods
lds
shll
mov
xchg
out
lea
cmp
push
sub
add
movsb
mov
arpl
fidivrl
pop
dec
insb
mov
jb
movsb
dec
stos
sahf
add
jb
and
leave
push
lea
aad
mov
loope
xchg
mov
adc
mov
call
pop
pop
fistpll
faddp
clc
add
push
lods
sub
and
aad
push
addr16
shll
popa
or
mov
pop
insb
xchg
xlat
push
scas
insb
mov
adc
jecxz
scas
sub
and
cmc
ljmp
insl
adc
adc
leave
push
sub
mov
lods
bound
push
hlt
mov
pop
js
pop
int3
jne
xchg
nop
into
in
mov
xor
sub
pop
fists
and
popa
insl
in
dec
addr16
xchg
or
test
jg
out
xchg
cld
sub
xor
sub
sub
mov
je
sub
data16
out
sbb
lcall
loopew
mov
dec
pop
bound
lahf
adc
pop
arpl
cmp
out
lods
loop
xchg
and
fwait
test
lret
and
dec
or
adc
inc
lret
and
sar
mov
sbb
pop
inc
mov
sti
das
repnz
les
sub
cmp
mov
add
lret
pusha
in
out
mov
mov
mul
not
icebp
mov
addl
or
divl
push
sbb
jb
xor
cmp
enter
xchg
nop
sub
push
dec
repnz
les
inc
cwtl
cmpsb
jno
mov
jno
out
and
out
adc
pop
push
jmp
sub
inc
xchg
xchg
rcrl
push
movsb
lret
push
mov
inc
nop
imul
adc
xlat
dec
dec
out
cmp
inc
fadd
push
add
shll
mov
adc
punpcklwd
dec
xor
xchg
subb
stc
repz
scas
push
movsb
jae
mov
or
rep
ror
mov
push
shlb
imul
mov
test
and
scas
les
sbb
push
loop
popf
xchg
add
pop
mov
lret
mov
adc
and
outsl
aaa
in
add
cltd
div
push
mov
pop
stos
fistpll
fwait
add
lret
insb
sub
fbld
jo
std
int
les
push
aaa
jb
mov
xor
inc
xor
aaa
pop
icebp
imul
mov
iret
aam
or
cmpsb
xor
or
inc
sbb
add
dec
les
adc
push
popf
xchg
std
cmp
mov
mov
std
das
xor
movsl
xor
rolb
fs
pop
sub
imul
lret
out
xlat
lcall
hlt
push
stc
inc
xor
cmpsl
push
jp
fsubr
xchg
out
mov
mov
lret
cmp
cmp
in
lods
sahf
add
test
clc
push
push
cwtl
pop
xor
xchg
xor
push
and
pop
inc
sti
push
shl
iret
xchg
mov
sub
xor
lods
loop
mov
cli
sbb
xlat
adc
pop
jp
and
add
mov
aad
cmpsl
test
cmp
imul
ucomiss
enter
mov
inc
pop
cmp
imul
test
cmpsl
add
pop
data16
cmpsb
addb
sbb
mov
cmp
mov
push
dec
mov
pop
aas
out
insb
movsl
push
dec
sub
sub
lock
sbbb
mov
lret
xchg
out
or
daa
mov
and
mov
push
movsl
sub
pusha
mov
cmp
js
mov
imull
jge
mov
mov
fstpl
iret
inc
jge
xchg
push
push
push
mov
mov
lahf
out
fstps
push
ja
inc
incb
fdiv
or
nop
push
cmpsl
aam
out
pop
mov
inc
cmp
cmp
loop
jl
outsb
cmpsl
insl
jle
mov
in
pop
stos
nop
shll
aaa
push
cli
out
sub
jb
lea
jae
adc
aas
cmp
cli
es
mov
sti
dec
push
jecxz
jbe
mov
mov
sbb
mov
stc
testl
mov
add
adc
mov
pop
or
dec
enter
arpl
iret
fstp
push
mov
mov
adc
insb
xchg
jae
lahf
insl
stc
jmp
pop
xor
pop
scas
repnz
lret
movsb
or
and
cwtl
inc
psrad
bound
adc
jmp
in
dec
lods
mov
sub
adc
pop
xchg
out
jmp
inc
inc
push
dec
rcll
sbb
ds
call
fdivrl
jl
sbb
fdivrs
cvtps2pi
into
pop
insl
vpavgw
jae
mov
inc
mov
imul
lods
in
rolb
loopne
and
leave
shr
sub
sti
jno
jbe
loopne
pop
pop
xor
cmp
push
aas
add
cld
bound
lret
sub
dec
and
sbb
push
mov
xor
and
mov
cmp
test
jl
xlat
pop
test
add
in
sbb
xor
lea
lret
push
out
jae
push
stos
hlt
mov
mov
xchg
sbbb
test
xchg
or
orb
inc
out
or
adc
mul
leave
lahf
mov
jmp
pop
out
xchg
adc
ljmp
popa
int
jae
lods
xchg
icebp
adc
adc
fdivrl
ss
out
dec
loopne
fmulp
shr
sbb
pop
fiaddl
mov
daa
dec
inc
mov
lock
pusha
mov
loopne
jns
jle
iret
addr16
dec
or
rolb
or
popa
sub
fs
cmp
gs
xor
jp
fsubs
out
xchg
pop
or
mov
call
popf
insl
jl
inc
pop
pop
rolb
insb
add
xor
pop
sbb
dec
mov
or
cs
mov
mov
mov
pop
mov
jno
or
lods
mov
fdivrl
add
ss
dec
pop
inc
xchg
cmp
xor
ret
popf
dec
lcall
xchg
cmc
dec
sbb
inc
fwait
hlt
flds
mov
fists
out
dec
mov
add
push
adcb
push
add
imul
sub
pop
bound
std
push
fstl
outsl
out
jmp
lret
push
cld
mov
pop
movsb
je
stc
ds
lock
lods
in
call
int3
cmc
push
std
scas
testb
pushf
and
mov
loope
mov
in
mov
cld
xor
out
jl
jo
lret
aam
pop
jp
jecxz
pop
and
add
push
cmpsl
mov
cmp
fistps
call
pop
mov
sub
loope
cmp
cld
adc
add
fs
icebp
dec
pop
out
add
jmp
aaa
es
add
nop
mov
arpl
test
dec
mov
push
mov
or
add
mov
xchg
gs
aaa
pop
out
nop
adc
xchg
inc
inc
xchg
repnz
and
pop
iret
mov
push
add
push
icebp
and
add
into
adc
sbb
ss
jno
cwtl
dec
ja
inc
in
add
loop
sub
dec
testl
movsl
repz
sbb
dec
xor
dec
adc
ja
mov
mov
pushf
int3
cmp
sbb
lea
jnp
inc
mov
push
lea
mov
test
xchg
movsb
add
mov
pop
insl
test
scas
dec
mov
mov
sbb
addb
add
xor
cwtl
out
pop
ret
lret
adc
movsb
sbbl
aam
movsl
adc
addl
xchg
sub
lcall
sbb
add
fwait
or
mov
jg
add
mov
test
mov
xor
and
jno
inc
loopne
cmp
pop
fisubrl
sub
scas
sub
jge
sub
sar
cmp
fiadds
lret
sbb
inc
sub
outsb
iret
jnp
add
mov
and
add
pop
sbb
pop
pop
add
mov
xchg
aaa
cld
pop
cmp
and
mov
xchg
inc
xorl
lcall
jo
jb
dec
repnz
enter
xlat
or
stc
mov
mov
dec
les
mov
pop
adc
dec
push
lcall
xchg
test
xchg
das
pop
inc
lcall
mov
cmp
lods
out
repz
cmp
xor
xor
lds
and
in
add
getsec
clc
jmp
stos
mul
stc
addr16
sbb
add
hlt
not
jmp
mov
fisubrs
mov
push
test
jmp
out
pop
mov
xchg
js
pop
mov
mov
add
sbb
xor
mov
add
sahf
in
jns
sub
subb
paddb
jne
adc
adc
push
cmp
pop
lcall
dec
addr16
sub
sbb
test
pop
inc
pop
in
clc
add
pop
sti
pop
or
negb
mov
mov
mov
fistpl
in
stos
inc
mov
pusha
xchg
and
out
mov
div
ss
lret
cmpsl
fsts
adcb
push
mov
aas
cmp
push
xchg
stos
aam
lock
cmp
ss
jl
sub
sub
or
into
mov
int3
lcall
xorb
adc
inc
jle
pop
es
movsl
add
mov
popf
sahf
or
xchg
jle
dec
sub
push
sbb
data16
rorl
jp
dec
testb
mov
cld
test
jb
dec
repz
or
add
cs
nop
das
pop
stos
loop
mov
ficoml
ret
add
xchg
pop
gs
mov
push
cmc
cmpsl
xchg
xchg
lock
lahf
jg
jle
fisttpl
adc
jne
inc
jge
jp
arpl
bnd
insl
xchg
mov
filds
dec
adcl
pusha
inc
mov
add
stos
mov
fldl
subb
push
test
loope
xchg
ds
icebp
clc
sub
idivb
push
mov
push
add
xchg
dec
loope
mov
pushf
aam
jb
push
push
push
pop
sbb
aaa
mov
xchg
pop
imul
mov
test
sub
std
push
pusha
fists
cmp
lret
cmp
jno
sbb
das
imul
rorb
xchg
lock
clc
jle
cmp
jl
sbbl
sahf
mov
inc
adc
or
mov
pop
dec
xbegin
les
mull
xlat
mov
test
jae
sti
sarb
jo
mov
xchg
add
or
sbb
fistl
xor
fstpt
stos
sahf
pushf
outsb
cs
mov
mov
mov
loope
jnp
sbb
xchg
cmpsl
out
mov
cmp
dec
mov
push
inc
into
sub
xchg
rcrb
push
sub
xor
mulb
sbb
mov
js
pop
out
inc
xor
mov
imull
sub
orl
pop
and
adc
fldcw
ficomps
cld
mov
xor
jne
adc
add
jp
mov
lcall
jge
fwait
sub
xchg
scas
push
sbbl
pop
inc
mov
ret
push
mov
mov
and
popf
dec
jae
shll
mov
divb
fcoms
ret
scas
jl
aas
cmpb
jmp
loopne
mov
subl
xchg
adc
jmp
pop
pop
mov
shrb
cmpl
jmp
xorl
inc
movsb
scas
adc
or
mov
cmc
push
repz
imul
add
sbb
mov
mov
movsb
fstpt
mov
cmpsl
in
fsubrl
pushf
mov
ss
pop
lea
ja
add
adc
mov
out
jle
push
add
imul
pop
or
pop
jmp
shll
lret
lea
js
es
into
pop
adc
imul
mov
in
or
pop
lret
stc
push
mov
fsubrl
xchg
fmuls
test
or
sub
mov
movsl
scas
enter
aam
pop
push
pop
dec
in
cli
mov
and
testb
xor
ljmp
rolb
push
pop
xor
lcall
or
mov
mov
loope
rcrb
jle
push
adc
cmp
cmpsb
fwait
out
fdivrl
es
xchg
call
push
popa
mov
test
repz
cmp
ja
std
pop
adc
sbb
aam
aad
fsubp
cmpsb
mov
fldt
and
insb
jmp
gs
and
out
in
out
stos
daa
ds
jne
imull
stos
inc
and
xor
or
jecxz
xchg
rcl
xor
icebp
xchg
dec
out
stos
pop
dec
cmp
in
adc
mov
lret
adc
sahf
jae
mov
fsub
into
mov
dec
dec
icebp
or
mov
fmul
scas
add
insl
ds
stos
data16
mov
pusha
enter
jmp
mov
fisttpl
jle
gs
leave
mov
into
fistl
leave
xchg
or
sbb
push
push
mov
push
mov
xchg
push
out
test
into
sbb
pop
lret
push
pop
loope
push
cli
lea
cmp
cld
dec
adc
and
cltd
mov
ret
loope
loop
push
adc
ljmp
clc
je
lock
pop
sub
inc
jg
sbb
push
add
push
adc
pop
pop
and
call
sub
push
jle
jbe
jmp
fwait
push
jmp
xor
outsb
lds
mov
or
dec
mov
xchg
xor
call
mov
outsl
lahf
imul
mov
push
xor
jge,pt
jne
xchg
push
or
sub
inc
cmp
mov
aas
xchg
add
std
outsl
shr
lret
xchg
call
dec
movb
into
mov
add
sub
push
pop
and
push
rcl
pusha
xor
pop
mov
enter
sbb
loopne
mov
stos
jp
repz
jg
and
insl
jb
pop
or
jo
xorl
lock
xchg
shr
mov
xor
lds
in
and
inc
and
mov
loop
loop
mov
int3
inc
movsb
pop
mov
xor
out
inc
inc
sbb
in
pop
cmp
adc
repnz
mov
repz
int3
inc
fistpll
cmpsb
or
or
and
in
adc
es
jp
pop
or
dec
dec
test
mov
ret
test
pop
repnz
lds
bnd
jo
idivl
rorl
adc
xchg
jge
push
or
shrb
add
repnz
cmp
push
pop
shll
aaa
scas
xor
mov
mov
popa
mov
dec
imul
pop
in
or
movsb
xchg
pop
int3
sbb
sti
mov
test
cmp
pop
adc
or
lret
xor
and
xchg
iret
fcoml
cmp
movsl
xor
push
fsubl
or
es
sbb
pop
std
outsl
jmp
xchg
out
xor
shlb
fwait
push
mov
or
and
mov
pop
dec
mov
push
mov
xlat
scas
mov
ret
sti
inc
dec
sub
pop
inc
jne
push
inc
xchg
or
inc
push
ss
shrb
pop
orl
movsl
icebp
or
jo
push
or
enter
ljmp
pop
jo
jb
adc
es
mov
clc
mov
movsl
rcrl
gs
mov
mov
xchg
xchg
pop
xor
or
adc
push
dec
sbb
inc
sub
imul
inc
inc
sbb
mov
sub
jp
negb
dec
std
int
sub
mov
dec
dec
mov
dec
push
lods
addr16
dec
pop
lcall
add
std
cs
mov
pop
adc
fisubs
dec
pop
sar
push
icebp
daa
mov
dec
gs
push
les
ja
push
or
push
div
cmp
jae
push
mov
jecxz
jl
es
jl
fnstcw
push
adc
fsubrs
sbbb
adc
or
mov
inc
and
shlb
push
or
pop
flds
jbe
xchg
and
mov
je
xor
mov
jle
jl
cli
test
cmc
sbb
dec
dec
xlat
lahf
into
inc
push
dec
xchg
loope
xor
xchg
imul
lret
out
adc
lcall
lds
imull
ror
lock
inc
sub
leave
popa
in
out
sbb
cmp
repz
cmp
jmp
cmc
xchg
xlat
cld
stos
popa
pop
push
insl
clc
sub
out
pop
and
hlt
and
incl
push
jb
jmp
sub
subl
xor
daa
je
enter
xchg
xchg
mov
and
dec
imul
mov
jae
insb
cmp
int3
jae
outsl
adc
addr16
test
push
ljmp
xchg
and
shrl
loop
or
push
pop
nop
retw
fstps
or
lea
mov
ret
jo
js
scas
stos
fwait
std
mov
test
cmp
dec
roll
lea
xor
imul
xchg
jecxz
xor
inc
sub
sar
sub
mov
nop
cmpl
sub
cld
add
jmp
sub
push
bound
mov
adc
std
movsb
imul
ret
xor
ss
dec
ss
enter
faddl
adc
push
pop
fnstenv
or
mov
in
inc
cltd
mov
mov
int
push
cmp
xchg
push
ds
iret
cltd
pop
scas
cmp
add
mov
clc
and
xchg
les
sbb
ret
iret
call
lock
dec
in
jmp
data16
insb
push
lods
push
es
mov
and
mov
push
arpl
enter
leave
adc
cmp
sub
pop
fsubs
lock
mov
inc
shll
push
inc
es
push
pop
xor
xchg
push
dec
lahf
in
fcomps
push
aaa
lcall
lock
outsb
jge
out
cmpsl
scas
dec
and
push
lds
cmp
pop
cvtps2pd
mov
std
xchg
inc
mov
imul
andb
fwait
sub
testb
daa
call
test
dec
sub
pop
jae
adcl
pop
outsl
sub
jb
sbb
cmc
or
lret
aas
xor
bound
dec
xchg
cs
or
adc
xchg
ja
xchg
push
ja
xchg
lgs
push
mov
or
jnp
aad
and
call
or
nop
push
dec
sbb
mov
push
js
andb
add
sub
aad
xchg
mov
mov
add
fadds
sub
enter
scas
lcall
mov
or
dec
movsl
repnz
je
aaa
dec
outsl
aas
lea
shl
insb
mov
scas
mov
subb
add
sar
push
mov
pop
test
jecxz
or
loope
or
add
scas
cmp
pop
xchg
xlat
lods
mov
test
fstps
push
adc
or
and
ds
loopne
ljmp
add
adc
outsl
xchg
lods
cli
rcrl
jge
mov
fcomps
lcall
bound
cmp
fwait
in
pop
hlt
push
loop
lock
jae
leave
dec
ja
cmp
cli
and
fildll
pop
jge
push
fdivl
mov
pop
or
and
loopne
push
jle
fdivrs
scas
jbe
push
adc
cmp
xlat
sub
ret
fwait
mov
dec
and
les
mov
mov
push
ljmp
notl
xchg
dec
inc
lock
or
ss
sbb
xchg
push
mov
in
mov
lea
aas
in
aam
sub
push
bound
movsb
adc
imul
adc
adc
out
fsubs
mov
fcompl
cmpsb
mov
ljmp
idivl
inc
cs
ret
push
ss
insb
adc
add
pop
in
aam
das
xchg
call
testl
push
jns
mov
lock
lret
jmp
jl
sub
data16
xchg
jnp
jmp
mov
push
push
shlb
and
pop
push
ret
xor
subb
cltd
lods
sub
add
adc
dec
rorb
jbe
shlb
inc
pop
lods
sub
movsb
fdivl
dec
pushf
rcrl
scas
mov
push
mov
dec
out
add
mov
arpl
and
pop
push
ljmp
mov
jnp
rcll
in
xchg
loope
sub
repz
pop
outsb
sbb
in
in
and
add
pushf
mov
ret
lea
mov
inc
imul
ds
data16
enter
xchg
sbb
das
dec
adc
mov
cmc
mov
cmpsb
or
imulb
pop
mov
jecxz
out
jl
sub
mov
aas
push
adcb
xchg
push
cmp
sbb
mov
xchg
lret
cmp
cwtl
ljmp
sub
aad
cmpsl
shll
movsb
mov
int
sti
push
sub
add
repnz
test
jno
xor
mov
in
cld
movsl
dec
mov
popf
inc
ja
inc
xchg
inc
dec
mov
mov
leave
cld
mov
in
mov
mov
bound
or
push
lea
jle
xchg
push
dec
outsl
inc
sub
cmpsb
popa
cmp
mov
pop
mov
or
fcmovnb
sub
cmpsb
pop
lahf
cmp
lahf
or
xchg
test
or
sub
cmp
movsb
ret
push
ljmp
mov
lcall
je
dec
mov
mov
xor
or
not
fprem1
mov
mov
jo
ret
movsl
push
negb
test
xor
inc
inc
mov
or
outsb
fisubl
or
mov
jle
aas
sahf
mov
push
inc
or
sbb
cli
popa
inc
sbb
pop
out
sub
test
outsl
mov
push
mov
sbb
or
sti
imull
ret
sub
mov
in
jb
sahf
cmpsb
mov
lea
in
pop
pop
sub
push
cmp
lock
pusha
out
sub
xchg
xor
fisubl
rorb
mov
jno,pn
jge
int3
push
jae
and
dec
pusha
loop
out
shrl
cmp
jb
mov
hlt
test
aam
ss
xchg
adc
fdiv
jg
pop
xchg
inc
out
stos
cmp
push
mov
dec
loopne
xchg
imul
cli
fiaddl
pushf
fistpl
mov
or
jno
icebp
pop
loop
std
iret
xchg
mov
pop
fldt
mov
or
adc
or
sbb
dec
loope
out
sar
jl
push
inc
adc
mov
adc
mov
pop
fucom
popl
outsl
into
sti
jbe
lea
sbb
jo
out
jnp
inc
add
add
sbb
inc
cwtl
rcll
test
out
je
loope
mov
testl
jnp
dec
sbbl
sub
and
shrb
cmp
in
or
and
mov
adc
jp
das
jae
les
mov
je
cmc
mov
movsb
adc
pop
sti
mov
push
insl
mov
xor
leave
test
jnp
add
popa
loopne
jns
lahf
push
mov
je
xor
xchg
ds
sbb
or
fcmove
mov
cmc
mov
lods
test
push
jmp
mov
mov
inc
add
xchg
mov
imul
mull
sbb
push
sbb
cmp
test
jo
cmp
mov
dec
add
sub
cmp
jnp
in
movb
sbb
jmp
or
shl
cmp
mov
add
and
stos
scas
cmpsl
jl
jl
dec
mov
mov
push
cmpl
lret
xor
lock
jae
loope
mov
or
sahf
dec
xchg
test
xorl
pop
in
xor
jno
ret
leave
xor
sub
push
ja
and
inc
adc
pandn
lods
ds
mov
xchg
add
int
xor
rcl
inc
pusha
xor
lahf
cmp
pushf
shrb
stos
cmp
pop
inc
popa
cmpsl
push
dec
mov
nop
leave
ret
nop
cwtl
xorb
out
jge
sub
jle
sbb
and
ret
dec
lret
cmp
inc
jp
cmp
jne
lock
div
in
and
into
pop
test
cmp
lret
jnp
jecxz
mov
sahf
inc
adc
push
bound
ror
sahf
dec
outsb
dec
gs
mov
push
pusha
call
and
xor
push
xchg
stos
push
lret
fistpll
cmc
sub
or
arpl
in
ljmp
or
leave
or
bound
pop
jg
iret
mov
jo
mov
mov
fldl
cmp
lds
arpl
cmpsb
mov
xchg
std
xor
push
mov
xorl
mov
mov
insb
add
cmp
scas
addl
imul
push
jmp
aaa
jecxz
popa
dec
sarl
mov
cmp
incb
dec
movsb
push
inc
sbbb
arpl
add
test
jns
inc
fs
mov
jge
fildll
jmp
rcr
cmp
sbb
je
or
cmp
inc
adc
scas
jnp
cmp
inc
cmp
dec
aam
xchg
or
dec
dec
ss
cwtl
fidivl
xor
jo
outsl
lahf
inc
addl
stos
inc
int3
sub
mov
push
stc
mulb
lret
or
sbb
clc
imul
les
fsubp
lahf
stos
push
aad
pop
stc
enter
mov
sbb
xor
aaa
or
sub
xlat
jecxz
sbb
dec
fsubr
out
lret
sbb
aad
dec
out
and
rcrb
jecxz
xchg
push
repnz
fwait
shr
adc
push
aad
adc
rolb
xlat
xchg
adc
xchg
cltd
dec
dec
vmovsd
inc
outsb
bound
xor
push
mov
stos
mov
adc
mov
cld
dec
adc
shlb
mov
jb
mov
inc
lret
mov
mov
sti
jnp
das
fmull
popa
sbbb
ror
add
mov
mov
in
adc
int
loop
repz
push
mov
inc
stos
mov
jno
push
rclb
rcrl
addr16
mov
ljmp
mov
fsubs
push
pusha
stos
decb
add
maxps
frstor
lret
add
sub
push
adc
and
mov
jbe
adc
sbb
xchg
cli
arpl
cmpsl
sbb
into
hlt
dec
jmp
in
cwtl
mov
test
subb
jl
pop
push
std
mov
add
test
mov
cmc
les
jmp
mov
lret
sahf
sub
int3
pop
mov
pop
xor
ss
pusha
pop
jns
aad
mov
fdivrp
cmc
cmpsl
addl
mov
mov
sub
or
and
lock
jae
or
movsl
repnz
ret
dec
sub
enter
addr16
pop
mov
adc
adc
pop
jb
pop
cs
ficompl
insb
xor
mov
scas
sub
ret
lahf
icebp
or
outsl
andl
adc
xchg
xchg
xchg
loopne
xor
lods
mov
in
mov
dec
hlt
cmp
lahf
xor
push
jnp
lds
mov
pop
incb
aad
mov
pop
insb
mov
dec
lea
push
pop
js
cmp
lds
cmpsb
sbb
xor
mov
cltd
imul
fsubl
xor
pop
int3
xchg
xor
out
inc
insb
and
shlb
xchg
movsb
push
in
adc
lock
daa
in
jne
mov
mov
loopne
popf
movsb
les
jl
icebp
js
mov
mov
mov
stos
sahf
imul
dec
inc
ss
adc
sub
lea
inc
dec
arpl
jno
lods
nopl
pop
sub
mov
mov
imul
adc
cbtw
xor
in
outsb
xlat
fsubl
xor
aam
xchg
push
test
cmpsl
addr16
mov
clc
stos
push
fdivl
into
add
scas
test
std
adc
cwtl
pop
out
cmc
jl
jne
mov
roll
std
imul
dec
dec
fiaddl
dec
daa
pop
fst
shll
mov
arpl
adc
push
pop
adc
jbe
lret
adc
jmp
clc
cmp
push
jo
call
or
lretw
lret
int3
or
add
je
pop
mov
movsl
imul
ret
in
add
stc
lods
sbb
adc
mov
loopne
pusha
leave
jmp
sti
pop
insb
push
cltd
and
aad
inc
hlt
mov
icebp
and
sbb
mov
sti
xchg
call
adc
outsb
cltd
push
add
shl
xor
sbb
in
pop
dec
and
or
call
dec
dec
jns
add
js
pop
outsl
rclb
pop
lods
cwtl
int
mov
shl
inc
pop
mov
jb
adc
stos
lds
push
push
add
ret
scas
dec
in
scas
mov
cmc
or
sbb
mov
push
sub
scas
insl
jno
mov
push
jnp
jbe
ficoml
cmpsb
sahf
push
xor
cmp
lods
lods
fcmove
cld
sbb
dec
loop
jns
imul
sub
dec
pop
push
xchg
aaa
xchg
push
lods
ss
mov
adc
pop
cltd
push
fdivr
cmp
das
fisttps
cmp
outsl
outsl
mov
imul
mov
mov
xor
cmp
out
mov
or
fiadds
inc
into
and
cltd
dec
icebp
push
arpl
jae
push
jb
adc
jmp
filds
enter
xchg
mov
mov
adc
jg
jmp
lret
imul
inc
in
push
add
fs
jge
aas
jo
fsubl
dec
rcrb
cmp
into
int
sbb
jbe
in
call
lahf
mov
ljmp
sti
mov
lcall
push
jbe
lds
hlt
scas
push
fwait
sub
je
dec
mov
xor
nop
out
cmp
sti
jo
sub
je
xor
aad
bound
fistl
sahf
pop
bound
push
add
aam
rclb
adc
and
pop
lcall
arpl
adc
out
cmp
push
push
fdivl
cltd
pop
fidivl
lahf
sti
push
push
push
mov
mov
mov
cmp
xor
leave
inc
xchg
push
insb
pop
popf
jp
pop
mov
cvttps2pi
movsb
scas
lods
inc
fs
repnz
stos
push
icebp
in
int3
sbb
scas
pop
cmp
aam
or
cwtl
pop
jg
pop
out
lret
int
int3
pop
sbb
ret
mov
add
mov
and
cmc
mov
mov
adc
gs
or
jmp
les
rcrl
xchg
jmp
gs
push
mov
fs
ret
mov
mov
out
add
mov
mov
or
sti
rclb
inc
jb
or
or
notb
pop
dec
add
pop
in
jb
inc
jo
cltd
setae
add
dec
movsl
xorb
repz
and
inc
dec
aad
or
xor
pop
pop
arpl
push
dec
or
jl
aaa
push
test
dec
popf
inc
mov
push
inc
sub
xor
hlt
or
pop
xchg
cmp
test
jl
inc
inc
fsubp
dec
scas
jbe
mov
aad
in
test
mov
add
xlat
data16
push
test
test
xor
xchg
mov
dec
jecxz
stos
loope
mov
push
out
mov
fisttpll
ljmp
mov
cmpsb
out
jmp
rcrb
mov
dec
movsl
fldt
out
add
lcall
xchg
clc
fcompl
aaa
jle
push
out
lss
scas
xchg
stos
outsb
inc
cmp
inc
xchg
fucomp
xor
in
out
fisttpll
and
lahf
mov
cmpl
mov
int3
pop
mov
insl
push
mov
movsb
into
scas
xchg
pop
pop
hlt
aad
or
jecxz
or
aas
pop
pop
mov
aam
add
xor
mov
mov
sbb
jg
mov
jae
cld
or
mov
pop
cmp
cmp
outsb
loop
pop
adc
dec
mulb
and
lcall
xlat
test
xchg
adc
pop
sahf
lods
pop
xchg
dec
push
xchg
dec
out
xor
or
xor
stos
in
push
inc
mov
jns
xor
aaa
add
and
inc
jns
jbe
js
adc
pop
or
inc
jns
cmpsl
and
xlat
in
sub
lret
cmp
orb
xchg
sbb
xchg
roll
cmp
scas
push
ja
out
aaa
mov
push
mov
cmpsb
cmpsb
adc
fiaddl
mov
lods
mov
add
fisttpll
xchg
or
mov
xor
cs
jmp
test
add
mov
jmp
test
dec
cmpb
mov
movsl
jle
fisubl
arpl
cmp
push
mov
jecxz
js
stc
addb
dec
push
or
mul
aaa
sub
inc
add
and
sub
scas
jle
push
push
sub
out
mov
sahf
xchg
movsl
mov
xchg
fsin
repnz
cmp
ret
cmp
movsl
pop
cmpsl
sarl
mov
add
cmp
jmp
inc
out
xchg
xor
jnp
fisubrl
addr16
mov
data16
jl
sub
cmp
dec
out
jmp
inc
sub
loope
cmc
mov
inc
in
pop
xor
dec
sbb
dec
lea
adc
inc
fucomip
jge
andb
pop
pcmpeqd
das
jae
ljmp
shlb
inc
es
and
and
rorb
insl
cltd
out
jae
xor
je
jecxz
cwtl
fstp
sbb
cmovnp
push
mov
jbe
push
pusha
cmp
daa
xchg
or
sbb
popf
sub
pop
inc
sub
test
mov
jns
testb
sahf
push
fistpl
sbb
dec
imul
mov
daa
push
out
push
dec
pop
cmp
cmpsb
xor
bound
fldl
pop
jmp
cmc
cmp
pslld
xchg
lcall
ret
aad
call
cmpsl
or
pop
fnstcw
mov
imul
mov
push
movsl
ds
int3
mov
test
and
movsb
adc
sbb
inc
adc
and
mov
jmp
rolb
mov
sub
ffreep
repz
pop
mov
cmp
add
inc
into
in
les
xchg
mov
lret
add
jno
push
mov
pop
fnsave
in
lea
lods
insb
fldt
sbb
mov
loopne
loopne
in
cmpsl
xor
mov
call
push
into
jge
jl
repnz
aas
pop
ret
stc
testb
outsl
pop
xchg
push
addr16
test
or
jo
inc
jns
ficoml
jo
and
sbb
push
sub
pop
test
jo
jb
cltd
out
push
testb
mov
call
pop
xchg
cmp
call
icebp
sub
xor
ret
push
push
mov
adc
and
cld
lcall
inc
popl
xor
xor
pushf
into
js
clc
jns,pt
out
hlt
sub
mov
hlt
arpl
sbb
adc
ds
fidivl
xchg
testb
jg
testb
pop
je
sbb
mov
orl
and
inc
popf
in
jmp
mov
add
xlat
nop
data16
xchg
stos
ret
cmpsb
pop
hlt
pop
cmpxchg
shrl
pop
lock
in
dec
dec
jns
pop
addb
arpl
dec
add
loopne
mov
movb
hlt
out
in
push
xor
cmp
daa
or
loope
loopne
movl
sbb
lahf
inc
ljmp
andb
cmpsl
scas
push
pop
divl
movsl
or
or
add
je
leave
jp
cld
loopne
xchg
cli
subl
or
nop
mov
cwtl
out
jmp
mov
add
or
sbb
sub
xchg
fmuls
sub
and
js
inc
jl
test
das
or
and
add
sbb
adc
aam
aam
sub
sahf
mov
sarl
cmpb
xchg
sarb
add
add
pop
dec
ror
or
push
int3
dec
adc
sahf
jae
lcall
and
mov
adcl
adc
pop
repnz
mov
ret
ljmp
push
adc
push
cmp
dec
ficoml
dec
mov
iretw
mov
mov
loopne
sub
icebp
pop
stc
test
lea
jns
add
mov
mov
or
and
fsubrl
lret
std
jmp
sbb
adc
test
scas
or
and
ret
aas
insl
lods
test
pcmpgtd
nop
adc
mov
js
das
and
sbb
les
xor
dec
imul
mov
sub
pop
dec
mov
ret
enter
roll
dec
xor
dec
sub
test
sbb
or
enter
or
sub
repz
adc
repnz
mov
add
iret
pop
push
xchg
hlt
loope
cmc
outsl
add
filds
push
clc
push
rclb
pop
mov
push
loop
mov
mov
movsl
adc
scas
sbbb
and
jns
lcall
pop
push
xor
dec
ffreep
xor
mov
sbb
lret
mov
icebp
push
mov
das
and
fdivrp
and
loop
daa
add
test
mov
mov
and
xor
cmpsb
mov
cwtl
js
fcomps
xor
mov
mov
popa
mov
fsub
pushf
test
iret
sbb
pop
ss
jne
nop
cwtl
mov
in
out
in
aam
aaa
jb
jno
push
push
xor
or
out
mov
mov
js
sbb
jmp
sbb
push
mov
mov
or
pushf
push
and
jne
mov
out
xchg
imul
jns
fnstsw
int
add
aas
xor
repz
loope
jg,pt
pop
mov
cli
mov
aaa
jns
pop
mov
repnz
xchg
int3
mov
xchg
pop
add
or
jecxz
aaa
xlat
test
mov
dec
out
test
mov
ds
add
dec
cmc
rcrl
lret
js
jnp
pop
lods
popa
lea
pop
ja
iret
adc
and
mov
and
cwtl
cmp
imul
inc
cmp
sub
lods
push
adc
mov
imul
jae
xor
push
jp
popa
adc
cmpb
ja
jmp
loopne
add
dec
mov
xchg
lret
movl
xchg
jg,pn
mov
fcompl
ret
fists
and
or
es
jp
mov
outsb
pop
add
icebp
add
jno
dec
cltd
and
inc
adc
mov
notl
pop
jl
jns
dec
sahf
out
push
daa
je
pop
mov
pop
sarl
mov
sbb
push
mov
mov
adc
sahf
mov
rcrb
mov
pop
leave
pop
mov
in
loopne
ja
sub
clc
std
xor
cmp
xor
dec
stos
call
xchg
daa
clc
les
int
xchg
add
mov
repnz
mov
lea
test
imul
dec
fs
inc
pusha
pop
inc
cmp
loope
or
push
fs
inc
icebp
imul
dec
jle
icebp
xchg
out
fisttpl
xor
movsl
test
loope
imul
cwtl
adc
div
add
xor
sub
xchg
dec
xor
cmp
dec
daa
andl
xchg
pop
mov
pop
pop
negl
ret
cmovl
scas
mov
addl
cmc
xchg
mov
lods
popa
cmp
aas
xchg
and
xchg
ret
cmpsb
lcall
mov
inc
hlt
add
mov
add
sbb
out
or
mov
inc
enter
inc
dec
add
cmpsl
inc
sbb
je
mov
xchg
cmp
push
fsubl
inc
sbb
out
or
xor
clc
adc
pop
sbb
fwait
addr16
xchg
pop
out
sub
or
pop
xor
jbe
jge
idivl
mulb
dec
call
lea
jl
push
insl
push
lcall
arpl
iret
push
push
lcall
cmc
mov
cmpsl
cmp
xor
mov
jp
sbb
je
data16
std
jle
pop
xchg
iret
mov
sub
push
sahf
pop
aad
test
cld
mov
lds
cld
mov
cmpsl
test
pusha
jecxz
ds
mov
adc
inc
xor
or
jl
in
xchg
iret
sbb
adc
lcall
jecxz
fs
clc
mov
nop
push
cmp
push
sub
push
lfs
dec
jbe
mov
sub
pusha
xchg
out
add
or
cmp
outsb
out
jnp,pt
mov
adc
ja
mov
icebp
and
fs
pop
movsl
test
mov
push
ret
inc
outsl
jnp
into
cs
dec
js
sub
mov
ret
or
push
inc
push
push
xlat
dec
nop
add
imul
pop
dec
int
icebp
pop
fsubrs
leave
mov
sbb
mov
fisubrl
mov
nop
adc
std
jp
xor
enter
imul
push
or
xchg
sarl
xchg
test
aam
cmovo
adc
xor
ror
sbb
xlat
cmpb
inc
into
fistpl
mov
out
bound
adc
lret
inc
mov
nop
jle
sub
sbb
adc
dec
inc
mov
adc
xchg
xor
push
arpl
push
cmpsb
cmp
stc
xchg
jmp
push
pop
xchg
mov
pop
push
lahf
aaa
sbb
dec
rorb
int
outsb
push
lds
inc
push
lahf
adc
adc
sub
shll
sub
lea
movsb
cmc
lods
pop
repz
pop
push
push
shrw
ja
cmpb
repz
dec
add
adc
insl
adc
stc
jle
or
or
lea
stos
test
push
movsb
sbb
or
xor
jle
or
imul
sub
sub
je,pn
aam
adc
cs
xchg
xchg
or
or
ss
pop
sbb
inc
pop
xor
mov
pop
pusha
mov
sub
jbe
leave
out
mov
iret
cmp
xor
adc
enter
mov
jmp
ret
movsb
xor
icebp
xor
sub
mov
xchg
sub
sarb
lea
inc
pushf
punpckldq
jl
out
test
shll
pop
shll
scas
fisttpl
lret
cli
into
inc
pop
or
cmp
inc
cmp
sub
pushf
xor
lock
cmp
mov
and
xor
and
test
mov
and
orb
movsl
inc
flds
mov
je
xor
ss
pop
loope
xor
lahf
push
sbb
imul
mov
jo
inc
jmp
sub
lret
les
lahf
shl
jbe
cs
test
push
xor
xlat
jle
popa
int3
cmp
or
lods
push
adc
mov
int3
adc
mov
imul
cwtl
clc
push
cmpsl
push
cmp
pusha
ss
out
mov
out
push
outsl
je
leave
lods
lock
adc
cs
mov
mov
in
mov
pop
insb
pop
cmc
shrb
or
sbb
mov
cmp
inc
cmpsl
sarl
test
imul
mov
out
xor
jo
sahf
cmp
outsl
in
adc
push
xchg
inc
mov
pop
jmp
push
fs
inc
mov
in
in
mov
mov
mov
rcrb
roll
jecxz
lods
cmp
enter
adcl
mov
sar
jg
mov
dec
add
in
jl
push
and
lods
aas
ficoms
ret
jo
cmpl
ja
and
or
add
and
test
and
mov
fcomps
push
mov
aas
xor
popa
push
outsb
sbb
pop
icebp
cli
sbb
movsl
fistpl
mov
mov
outsb
iret
or
xchg
mov
pop
enter
dec
insl
cmpl
lds
lret
xchg
jecxz
fsincos
add
dec
push
mov
repnz
xor
jno
xchg
adc
lds
pop
dec
add
xchg
repnz
js
out
add
xor
ds
out
dec
enter
inc
out
sub
xchg
push
js
aas
loope
mov
push
popf
clc
je
into
sub
push
pop
xchg
cmp
sti
xorl
test
in
fistpl
fiadds
xchg
jl
les
mov
push
insb
mov
xlat
add
ret
mov
je
mov
and
data16
dec
cmp
fstpt
add
fidivl
pop
xor
mov
insb
push
cli
sub
lods
mov
xchg
das
pop
mov
sti
sbb
inc
sbb
mov
repz
aam
fimull
add
pop
std
sub
fwait
or
xor
in
jp
xorl
xchg
and
add
or
loop
add
popf
cmp
mov
push
pusha
mov
xchg
adc
xchg
xchg
ss
scas
mov
lods
pusha
adc
loop
push
or
es
fistpl
cmc
call
xchg
mov
les
data16
mov
sub
test
gs
fcmovnu
cs
out
mov
mov
shl
xor
add
dec
movsl
call
sbb
fcoml
jbe
iret
push
sub
mov
sbb
iret
adc
lea
cmp
daa
pop
sahf
sbb
or
iret
and
out
xor
xchg
aas
pop
shlb
std
addr16
add
sarb
les
mov
inc
in
jo
mov
enter
sub
jmp
ja
adc
lds
xlat
dec
xchg
hlt
sub
jb
jnp
jl
mov
pop
cmp
dec
call
ss
jb
and
inc
fs
fwait
es
adc
rclb
ret
adc
scas
sarb
in
cmpsl
aam
xor
fdivl
or
sub
lcall
jle
js
out
xor
dec
mov
jbe
mov
sbb
add
sbb
out
mov
es
mov
mov
and
adc
stos
push
mov
ja
adc
sbbb
jo
stos
cmp
add
jae
cmp
dec
ret
pop
sar
aaa
cmpsl
cld
hlt
jg
push
lods
cmpsl
leave
cwtl
cmc
rcl
adc
sbb
push
rorl
jmp
inc
aaa
sahf
jnp
sub
add
or
mov
stos
mov
rorb
cmpsb
movsb
lds
fmull
scas
iret
lret
mov
inc
xor
loopne
adc
and
and
je
loope
cs
lret
in
xor
test
jp
lcall
outsl
mov
dec
mov
mov
test
cmpsl
xor
mov
dec
jne
call
out
arpl
jnp
movsl
shll
aad
pop
sar
or
push
ret
mov
pop
sbb
sarl
add
jns
push
jmp
dec
push
pop
mov
and
pop
enter
ja
jnp
mov
add
sbb
icebp
xor
dec
out
addl
in
push
imul
xlat
push
jb
subb
inc
cmp
pop
arpl
outsl
mov
lcall
pop
out
pop
mov
fists
inc
inc
mov
pop
jbe
rorl
in
jg
cmp
jl
cmp
jnp
push
mov
add
imull
inc
stc
xlat
and
repnz
stos
adc
inc
std
jge
lcall
pushaw
mov
cwtl
mov
ljmp
bound
add
mov
mov
cmp
aad
xchg
cmp
mov
sarl
std
sti
loope
icebp
sti
addr16
mov
jno
sbb
or
or
jg
dec
cwtl
lods
pop
cmp
mov
ja
js
outsb
xor
pop
jecxz
mov
push
scas
mov
in
loope
dec
in
pushl
add
data16
lods
mov
add
mov
sahf
test
shl
sbb
xchg
sarb
lds
pop
fistl
loopne
xor
and
inc
pop
sbb
mull
dec
shrb
aas
pop
jg
es
mov
das
cmp
add
and
je
mov
xchg
aaa
jns
clc
int3
mov
push
inc
repnz
mov
and
xor
in
sbb
xchg
ljmp
push
mov
cmp
loope
sarl
in
push
scas
jge
insb
and
dec
sbb
aam
popa
or
adc
sbb
testl
mov
push
inc
mov
and
sbb
push
cmpsl
or
cwtl
jp
cmp
inc
cmp
jb
dec
xor
xor
and
in
sti
and
xor
pop
pushf
pop
fwait
dec
push
les
clc
dec
inc
inc
push
push
jmp
test
int
fists
sub
mov
frstor
sarl
test
cmpsb
cmpsl
outsl
outsb
jp
shll
xor
jnp
popa
sub
sub
sub
nop
adc
divb
mov
sbb
jnp
xchg
lds
cmpsl
xchg
dec
shrb
mov
outsb
mov
imul
aam
das
jne
cs
dec
add
mov
cmpsl
mov
into
scas
fidivrl
insb
mov
or
int
fisubs
xlat
ljmp
dec
sbb
jge
adc
fwait
lods
sbb
and
scas
outsl
xor
dec
int3
push
pop
jns
inc
insl
pop
lcall
fidivrs
lods
sub
sarb
push
pop
je
inc
daa
cmp
jns
sahf
mov
jo
rclb
das
out
mov
push
scas
mov
imul
insb
mov
sbb
adc
popa
sbb
mov
call
mov
jbe
jae
mov
or
dec
cmp
rorb
bound
popf
xchg
cwtl
push
leave
ror
test
sub
xlat
sysenter
sbb
sub
scas
sub
cmp
js
movl
fbstp
cmpl
dec
pop
jecxz
in
or
insl
mov
and
xchg
and
rcrb
cmp
pop
outsl
cmp
ds
ljmp
or
loope
adc
imul
movsb
mov
arpl
push
pop
int
ja
xor
add
add
or
hlt
lea
pop
dec
ljmp
mov
fdiv
pop
xor
mov
gs
jl
shlb
outsl
out
sub
mov
je
sub
bound
add
mov
cmc
dec
mov
lods
bound
xor
adc
mov
in
fwait
test
xor
xchg
sub
push
loopne
adc
es
mov
jae
pop
insl
add
xorl
pop
in
hlt
jecxz
repz
cs
mov
jg
jp
ja
inc
pop
sub
movsb
pushf
les
repz
fwait
ss
add
cmp
sub
jne
mov
pop
cmp
test
outsb
adc
and
es
ljmp
fistl
fimull
cmp
sub
fisubs
notl
jge
test
ja
push
pop
ret
lds
push
pop
movsb
push
lods
mov
or
shrb
out
xchg
mov
pop
sbb
sub
sub
cli
or
push
fldenv
cmpsl
xchg
xor
in
mov
pop
add
inc
mov
cmp
xchg
pushf
cmpsl
adc
add
add
pop
imul
lods
sbb
mov
inc
jge
les
mov
lods
cmp
push
aas
add
inc
ljmp
xchg
ja
mull
aaa
int
cld
call
scas
movsb
mov
and
inc
adc
imul
bswap
movsl
sub
or
nop
out
pop
fisubrs
and
call
inc
call
push
dec
or
pop
in
ret
call
mov
mov
sti
nop
or
jae
cmp
in
push
xor
jecxz
jge
lea
imul
mov
shlb
lock
mov
add
sub
mov
fistpll
add
lret
dec
mov
jge
rol
inc
outsb
mov
je
cmp
inc
xlat
sub
sbb
or
jg
jmp
icebp
jb
shrb
adc
and
and
scas
imul
jle
fcmovu
push
andb
sbb
aad
pop
test
fnstsw
icebp
xchg
inc
cld
test
and
cmp
cwtl
push
in
loopne
imul
mul
mov
jns
push
fadds
mov
insl
repz
out
mov
gs
iret
jmp
out
orl
dec
push
dec
adc
xchg
jp
xor
cld
mov
mov
popa
pop
jb
inc
or
scas
out
mov
es
stc
enter
scas
popf
fidivrs
jmp
pop
enter
jl
sbb
and
xchg
add
je
and
test
dec
outsl
mov
notb
sarl
scas
cmp
call
sarl
lds
sub
daa
mov
sbb
hlt
mov
lea
pop
test
pop
inc
sbb
jmp
xlat
ljmp
aad
or
adc
ljmp
icebp
xor
or
stos
insb
outsl
les
pop
ret
cmp
xor
lcall
outsb
sub
cmp
incl
cmp
pop
jmp
mov
cld
pop
sbb
out
sbb
in
adc
or
fwait
xor
cmpb
mov
imulb
ds
xchg
mov
out
pop
jge
mov
xor
jno
push
rorb
bound
popf
sbb
scas
es
jns
sahf
adc
pop
push
sub
es
pushl
es
popa
and
mov
and
xor
xchg
xchg
lret
pop
add
inc
cmp
push
dec
mov
jne
dec
shlb
inc
scas
mov
dec
push
cmp
cmp
xor
xor
adc
mov
ret
mov
push
cwtl
or
out
cmpsl
dec
idivl
xor
adc
popa
test
insl
clc
aam
in
fwait
sbb
sub
or
flds
dec
out
dec
int
mov
fcmovb
mov
shl
cmp
js
push
imul
or
xor
nop
dec
in
xor
push
test
mov
stc
popa
out
adc
paddusw
dec
notb
mov
addr16
xchg
xchg
ja
mov
inc
or
dec
addr16
sub
pop
fdivl
and
adc
js
test
sub
cmp
aas
sbb
sbb
into
jne
jl
aas
inc
sti
cs
movl
vmovq
dec
rorl
mov
stos
lcall
and
popa
add
sbb
aad
xchg
mov
loopne
or
rclb
shll
mov
mov
cltd
inc
mov
jmp
xchg
cld
xor
movsb
add
or
mov
mov
or
inc
std
mov
adc
lea
std
stos
ja
addr16
test
cmp
stos
repz
mov
pop
xchg
dec
sbb
fistl
adc
mov
pop
jbe
and
inc
sbb
jge
in
leave
fdivs
sbb
xchg
xchg
out
enter
adc
mov
andl
je
testl
sbb
stc
popf
imull
and
ja
lds
rolb
and
rcr
mov
insb
lret
push
mov
or
out
rolb
movsb
mov
das
sub
filds
inc
dec
or
or
out
testb
popa
jge
mov
xchg
fucomip
out
icebp
mov
in
fs
dec
aam
sbb
sub
jmp
mov
test
and
fucomi
push
adc
push
stos
cmc
subb
out
hlt
dec
sbb
add
dec
jecxz
xor
xchg
jp
jmp
lea
out
inc
jb
arpl
push
jo
and
xchg
je
and
sub
and
xor
scas
call
or
std
and
rcll
aas
mov
mov
int
sub
andl
test
test
shrb
add
xor
and
push
jle
mov
dec
inc
sbb
iret
movsb
cld
xor
xchg
dec
test
mov
or
movb
mov
mov
jmp
movsl
test
arpl
mov
loope
or
and
testl
pop
push
sarb
das
adc
adc
inc
int
dec
daa
in
inc
inc
stc
xchg
repz
mov
jne
lock
cltd
idiv
sahf
inc
jnp
lahf
lods
aam
xlat
loopne
or
pusha
xchg
out
pop
xlat
pop
aas
push
or
add
sbb
sub
in
lock
mov
bound
sbb
mov
sbb
adc
cmp
cwtl
shll
or
adc
pop
test
lret
and
jmp
shll
or
iret
ds
stos
mov
stos
cmp
test
leave
mov
hlt
arpl
adc
inc
std
xchg
adc
dec
dec
and
xor
and
fcmovb
adc
std
push
aad
pop
jle
push
pop
inc
add
sti
cmc
mov
push
mov
jns
jo
es
xchg
pop
push
mov
imul
cmp
repz
fists
cmp
iret
fcmovb
call
mov
mov
les
dec
cmp
aas
sbb
or
push
mov
inc
loopne
sbb
out
jle
or
pop
bound
hlt
mov
sbb
and
inc
cmp
popf
scas
ds
jg
cmp
mov
mov
fcoml
sti
out
leave
gs
mov
jmp
rcll
fildll
call
pop
jge
mov
push
mov
jl
push
test
dec
cmpsl
aam
add
sbb
jecxz
xor
sub
jl
xor
scas
push
mov
aad
push
xor
xchg
enter
inc
dec
or
adc
insb
jno
jmp
xor
stos
out
pop
jmp
mov
clc
add
mov
add
cli
xchg
in
nop
jb
push
sub
mov
lock
mov
xchg
cmp
xor
lcall
sub
repz
mov
mov
mov
fistpl
push
push
inc
fbstp
and
shrb
push
and
push
in
xor
mov
jg
push
jmp
test
ds
sti
ljmp
mov
lcall
mov
les
icebp
pop
mov
push
inc
aaa
push
sub
call
xor
enter
fisubrs
mov
call
dec
aas
enter
adc
or
aas
inc
sti
xchg
mov
mov
mov
or
std
ds
sbb
cmp
xchg
cmp
or
pop
cs
lcall
clc
mov
xor
and
xor
in
gs
lods
stc
pop
and
data16
push
push
xlat
nop
xchg
stc
pop
stos
adc
cmp
mov
std
leave
outsb
lods
push
dec
sub
push
in
push
lret
inc
loopne
mov
adc
pushl
lret
stos
ds
test
pop
sahf
sub
in
sti
sub
jnp
cli
jmp
sbb
jmp
scas
xchg
pushf
xchg
loope
cld
xchg
adc
or
in
jbe
aam
stos
cmp
inc
cltd
lods
fcoms
and
dec
lods
sahf
mov
ss
es
ret
sbb
jecxz
rcll
mov
mov
dec
mov
ss
adc
imulb
mov
and
mov
daa
popf
subb
movsl
mov
notl
popf
out
cli
xor
sub
xchg
mov
test
lcall
enter
xchg
inc
jg
movsb
dec
mov
or
cmc
shrl
ret
dec
lea
jle
lahf
adc
pop
jo
mov
fbld
fdivrs
insl
fs
popf
sbbb
xchg
aam
or
mov
xor
jmp
xor
adc
jle
je
sbbb
pop
ja
push
mov
adc
and
scas
pop
fwait
inc
sbb
push
insl
push
das
xchg
cltd
xlat
mov
jno
arpl
xchg
xor
mov
inc
shlb
jmp
mov
cmp
dec
inc
adc
lds
push
mov
leave
pop
iret
mov
cltd
adc
xor
in
sub
mov
cld
loop
xchg
in
addr16
or
dec
rol
imul
fnstcw
sub
inc
into
call
sbb
pop
in
mov
jne
bswap
mov
in
adcl
sub
jle
daa
out
adc
imul
jno
mov
xchg
dec
sub
mov
bound
int3
or
pop
fdivr
push
dec
cmp
or
loope
pop
mov
arpl
push
jne
or
movsl
scas
mov
xchg
mov
or
lret
aaa
leave
orl
lret
xlat
and
out
outsl
data16
lcall
push
inc
xchg
adcb
sbb
nop
and
subl
test
push
outsl
xor
push
pop
and
shlb
lods
fcoms
pop
notl
incb
add
xor
xchg
aas
xor
out
stos
shlb
cmc
mov
mov
test
push
test
in
ret
xchg
bnd
push
hlt
sbb
imul
rolb
aaa
fsubrs
sub
rcrl
adc
lret
cmpsb
add
scas
inc
es
cmp
cmpsb
add
dec
xchg
lcall
arpl
lcall
imul
mov
pop
es
lahf
jne
fbld
cmp
in
cmp
cmp
pop
adc
sub
fptan
pop
pop
dec
icebp
push
push
fistps
outsb
or
insl
ss
pop
test
rorb
and
scas
mov
dec
xbegin
mov
repz
in
mov
pop
gs
push
dec
jmp
push
test
or
ficoms
mov
push
mov
jbe
rorl
add
xchg
mov
iret
dec
out
cmp
mov
loope
cltd
stc
sub
mov
xchg
pop
leave
aaa
mov
cmp
test
jecxz
rorl
sub
and
or
test
and
inc
aad
sub
pop
in
loopne
cmc
into
mov
pop
fsubrl
add
mov
pop
in
sbb
and
cmp
loopne
sbb
sub
sub
add
pushf
insb
cmpsl
aas
inc
lds
xorl
das
fcompl
or
out
xor
insl
mov
lods
add
inc
add
ljmp
inc
cs
lods
addr16
push
and
div
mov
or
rcll
inc
dec
lcall
sub
add
and
adcl
arpl
sti
jne
jg
jecxz
mov
jne
int3
adc
stos
aam
into
mov
sbb
orb
jle
cmpsl
mov
lret
pop
push
add
scas
mov
mov
cmpsb
push
adc
mov
out
sbb
cltd
imul
cmp
sti
int
mov
sahf
mov
jno
fcmovnb
dec
lods
mov
rolb
out
imul
cmp
xor
xchg
sbb
das
leave
mov
ss
jp
nop
lahf
pop
xor
addl
push
and
arpl
mov
cmpl
add
and
cmpb
add
ljmp
sbb
sbb
cmp
ljmp
cmpb
push
mov
pop
cmp
pop
repz
leave
lcall
push
cmp
and
inc
outsl
cmpsb
inc
cmp
pop
push
rcll
lds
out
insl
stos
dec
cmpsb
lds
in
arpl
fdivl
mov
clc
cwtl
cwtl
inc
aas
jne
pop
push
push
lcall
xor
sub
xor
hlt
ret
inc
and
mov
call
xchg
jns
xchg
lret
aad
fisttps
pushl
jo
aam
fnstcw
sti
fists
jmp
lods
dec
or
push
popl
cmpsl
sahf
gs
hlt
jno
sub
lahf
xor
adc
mov
sar
add
mov
test
cwtl
mov
lcall
loope
xchg
scas
dec
call
mov
enter
fmull
xchg
sub
int
popf
mov
lcall
loop
mov
mov
clc
or
pop
leave
out
mov
lds
and
popa
out
ret
mov
inc
pop
jg
insl
xor
sbb
lret
mov
sub
orl
shrl
mov
test
lret
adc
mov
popa
sahf
std
enter
fsubrl
and
mov
inc
pop
fnsave
mov
adc
and
inc
idiv
dec
lret
pop
cld
inc
or
and
pop
cld
pop
or
and
mov
jnp
jne
andl
jge
mov
xor
fbstp
sbb
in
outsl
movl
jne
out
mov
jmp
jno
xor
insl
pop
sarl
popl
or
nop
jge
xor
inc
push
aas
insl
pop
pop
std
in
mov
push
data16
sbb
out
ret
mov
aaa
or
sub
into
pushaw
jg
jecxz
test
ds
adc
ret
inc
sarl
dec
in
xor
cmp
sbb
ds
imul
das
les
mov
cltd
aaa
xor
or
test
outsb
ret
mov
pop
jns
mov
int
sti
jmp
sahf
scas
ret
dec
outsb
cmp
int
ljmp
lahf
adc
inc
push
out
sbb
pop
push
in
cmpsb
shl
popa
and
aaa
mov
sub
repnz
xor
pop
jl
mov
leave
stc
insb
xchg
fidivrs
arpl
or
adc
ja
xchg
jo
push
pop
cmpb
in
jle
jp
xor
daa
xchg
scas
out
xchg
stc
or
mov
push
xlat
and
cmp
sbb
ret
jbe
ret
mov
int
adc
mov
jecxz
fstpt
int
pop
nop
add
lret
sub
incb
cmp
iret
mov
dec
push
fcomi
pop
pop
xchg
adc
aam
sbb
neg
or
or
sbb
adc
dec
ror
add
push
cmp
push
jnp
or
xchg
mov
jns
adc
loope
add
pop
jae
push
movsl
out
addb
and
mov
or
ret
sbb
lods
and
lret
pop
rorb
stos
lock
ret
into
sub
outsl
or
roll
mov
test
xor
repz
mov
loopne
in
addr16
cmp
clc
dec
fsubl
mov
add
aaa
mov
cmpb
add
jbe
mov
insl
pop
sbb
pop
movsl
in
out
and
push
jmp
insl
insl
mov
jns
jnp
mov
mov
push
stc
and
lret
pop
sub
xchg
or
shlb
cmp
int3
scas
test
cmc
pop
outsl
sbb
gs
jmp
call
mov
mov
and
mov
pusha
mov
xchg
pop
pop
dec
lret
inc
stos
sbb
fsubr
sbb
sbb
iret
shlb
cmpsb
ljmp
ficompl
lods
fisubl
pop
cmp
jmp
sbb
loopne
rolb
leave
aad
and
loopne
mov
cli
mov
iret
sbbl
shrb
push
push
mov
push
jb
lods
jae
or
sbb
out
fdivl
cmp
icebp
inc
mov
orl
push
and
and
pop
aam
jl
and
imul
enter
sbb
pop
sbb
xchg
addb
mov
hlt
aam
outsb
cmp
in
jno
scas
mov
push
mov
mov
shrl
ret
imul
sub
mov
icebp
fidivs
mov
sub
dec
aad
sbb
mov
or
fistpll
dec
jns,pn
hlt
in
xchg
imul
mov
in
popf
sbb
adc
gs
add
dec
mov
push
outsl
inc
sub
iret
aad
xchg
jnp
sti
sub
popa
clc
add
mov
jne
mov
jp
cmpsl
cmp
jecxz
push
adc
push
adc
pop
into
jl
lock
lcall
test
iret
mov
cld
jbe
push
shr
idivl
add
push
dec
js
dec
into
push
lock
cmp
push
ds
out
mov
mov
bound
inc
cwtl
out
call
lds
xor
flds
cmp
cs
adc
mov
pop
cmp
addr16
push
loope
loopne
mov
sub
adcl
xchg
or
pop
push
or
xchg
daa
xor
pop
push
rol
and
mov
imul
inc
cmp
mov
jae
mov
fldl
sahf
gs
add
lret
lret
dec
or
mov
or
mov
pushl
xor
pusha
mov
jne
cld
adc
xor
mov
cmp
jmp
push
xchg
imul
and
xchg
shlb
imul
jmp
xor
inc
lcall
shl
cmp
ds
pushf
mov
jns
and
data16
lods
adc
mov
test
xchg
arpl
stc
fsub
pop
jnp
pop
add
xlat
stos
es
pop
lea
shrb
das
jne
movb
sbb
mov
icebp
push
movsl
mov
pop
cmp
loop
imul
fs
loop
jae
xchg
cli
lret
fiaddl
mov
insl
dec
inc
outsl
mov
loopne
jecxz
add
xchg
ss
pop
adc
mov
jb
negl
mov
in
and
bound
jo
adc
movsl
es
adc
sub
ja
xor
rcrb
nop
xchg
adc
jb
in
pop
std
pop
jae
push
mov
sbb
pop
mov
adc
xor
mov
push
pushf
sbb
pop
out
into
addr16
or
dec
gs
aas
adc
add
sub
cltd
out
loope
lock
xor
xor
sbb
push
jb
std
xlat
pop
sbb
daa
jecxz
dec
or
leave
imul
and
xor
mov
lahf
jne
xor
sub
xchg
fimull
cmp
data16
xchg
add
mov
idiv
push
or
dec
cmpsl
dec
cmp
psraw
loope
fs
add
out
popl
xor
pop
sub
bound
xchg
or
enter
imul
loop
dec
pop
movsb
pop
inc
aas
add
xlat
xor
insl
ficompl
sbb
and
jge
testb
test
sbb
mov
mov
ret
push
aam
minps
pop
adc
lds
fdivrs
mov
stos
push
fistpl
icebp
push
icebp
xchg
scas
imul
std
push
mov
push
cmp
cld
dec
push
xchg
push
mov
pop
adc
test
lcall
mov
mov
push
xchg
and
data16
sbb
sti
rcrb
and
jp
icebp
test
mov
sub
push
das
decb
or
push
inc
jge
mov
inc
jmp
xchg
dec
push
and
mov
dec
sahf
jns
test
lahf
shlb
jnp
inc
cli
pop
or
outsl
mov
aad
jl
or
add
sarb
in
cmp
shlb
cmpsl
push
dec
movsb
sti
cld
pop
lea
std
push
out
push
jne
fdivl
mov
fucomi
mov
movsb
lods
add
jns
cs
mov
fstpt
jge
std
stos
pop
xor
scas
gs
jg
clc
ljmp
inc
push
jo
mov
push
push
pop
popa
xchg
pop
insb
stos
pop
pop
or
cwtl
push
mov
dec
int
cmpsl
or
pop
sbb
cwtl
and
arpl
movsb
mov
in
jmp
inc
adc
add
xchg
mov
jg
xchg
repnz
insl
sarb
adc
jge
mov
insb
stos
cmc
movsb
scas
mov
jne
cmpsl
fsubrl
xlat
cmc
mul
xchg
jns
fists
pop
mov
arpl
out
dec
test
stc
les
lahf
ret
dec
pop
dec
frstor
out
or
jecxz
cmc
jae
push
push
fmull
out
push
fmulp
adc
mov
fildl
fstpl
addr16
mov
outsb
test
pop
sbb
mov
xchg
pop
pushf
out
pusha
jns
repz
mov
cmp
add
call
xchg
push
sbb
cmpsb
jbe
and
pop
cmp
sbb
leave
mov
add
xor
vminss
add
enter
adc
sbb
or
ljmp
xchg
mov
sub
pop
sbb
mov
iret
inc
cmc
mov
jmp
inc
pushf
cmp
les
out
ds
pusha
adc
inc
xchg
mov
and
dec
repz
pop
mov
mov
adc
jle
mov
ja
push
mov
pusha
aaa
mov
mov
and
pop
orl
mov
adc
pop
insl
pop
or
jbe
out
int3
cmp
inc
insb
iret
dec
sub
ss
add
xchg
lret
jbe
pop
mov
in
pop
add
push
dec
pop
and
or
push
pop
inc
out
sub
enter
push
dec
xorl
inc
cmp
dec
sahf
add
adc
cmp
and
and
out
push
rolb
jle
push
mov
mov
mov
in
or
dec
ret
jg
rorl
aam
jmp
mulb
or
mov
inc
cld
fnsave
inc
sahf
dec
inc
inc
shrb
aaa
push
add
imul
sarb
bound
mov
sub
sub
por
das
cmpsl
aad
xor
jge
and
cwtl
out
xchg
loopne
and
shrd
outsl
pushf
cmp
pop
add
daa
decl
pop
adc
leave
adc
inc
popf
mov
mov
lds
pop
pop
cmpsb
xchg
imul
rorl
cmp
jne
arpl
cmc
sti
xor
xchg
lret
int
xor
mov
xor
ljmp
stc
adc
arpl
add
arpl
sbb
fxch
scas
or
or
xchg
ljmp
insl
xor
inc
gs
mov
sbb
rolb
mov
mov
xchg
xorl
fstpt
xor
lret
dec
icebp
push
subb
decl
pop
pop
cmp
test
insl
stos
pop
fidivrs
in
out
mov
adc
fistpll
fwait
outsl
cmp
push
sub
loopne
nop
ficoms
fsubl
cmpsb
and
roll
popf
and
jbe
jne
adc
jb
and
adc
and
adcl
shll
vpmacssdqh
lea
add
adc
dec
sahf
ljmp
mov
movsb
idivl
fidivrl
jmp
hlt
xchg
and
fbstp
fcmovnb
sub
out
pop
and
cs
test
mov
mov
repnz
inc
insl
inc
dec
mov
push
sbb
rolb
testl
cmp
inc
dec
pop
popa
mov
scas
jno
in
xchg
mov
add
sbbb
add
fbld
stc
push
ffree
and
sbb
xchg
and
inc
pop
dec
fimull
pop
push
mov
cmpl
out
add
fwait
cli
mov
lret
popf
aam
mov
js
call
jecxz
inc
loopne
mov
xchg
hlt
mov
xchg
out
sub
aaa
ficoms
out
subl
arpl
push
push
or
lods
pop
xor
cmp
jno
cwtl
inc
push
and
movl
add
mov
pop
push
jae
jge
insl
mov
es
jp
xchg
leave
jecxz
nop
ret
pop
or
out
mov
fs
ljmp
push
push
jmp
sbb
repz
ret
stos
xor
adcl
or
jb
push
addl
xchg
rol
adc
dec
inc
push
ret
mov
fidivrs
add
fbstp
mov
xor
fisttpll
cli
mov
push
fstpl
insb
push
popf
vmaxpd
inc
insl
loop
das
dec
ret
daa
adc
pop
or
insl
je
and
data16
push
or
test
pop
mov
rolb
mov
and
sbb
cvtps2pi
pop
loop
jge
mov
jg
mov
xor
mov
add
test
ljmp
pop
pop
jecxz
dec
inc
mov
enter
xor
add
pop
add
scas
dec
xchg
popf
dec
add
stos
inc
cltd
gs
scas
cmp
xor
xlat
decb
inc
dec
repnz
in
lcall
out
and
pop
fwait
add
cmpsl
stos
filds
jnp
pop
jl
inc
push
or
mov
pop
fdivs
sbb
pop
fs
fidivrl
movsb
stc
leave
cmp
imul
mov
jo
sti
out
adc
imul
les
push
lcall
pusha
jno
pop
jmp
flds
push
mov
stos
mov
movsb
pop
push
fildl
dec
daa
xchg
jecxz
dec
arpl
xchg
imulb
and
lock
shll
test
xor
xchg
outsb
pushf
lahf
adc
inc
test
lret
sub
adc
call
mov
pop
adc
inc
add
adc
pusha
xor
push
cmpsl
push
and
pushf
mov
mov
lds
dec
and
call
lcall
pop
adc
stc
xor
mov
xchg
and
outsl
jecxz
dec
fs
jb
out
lods
out
stc
sbb
jp
pushf
xchg
cltd
ds
mov
dec
xchg
sti
sbb
adc
fidivs
loope
iret
sahf
xor
iret
ds
in
or
xor
dec
outsl
jae
dec
dec
push
sti
inc
cwtl
dec
inc
or
lds
mov
jae
sub
rcl
sahf
test
arpl
je
clc
push
pop
fsubs
dec
test
repz
or
jg
aas
inc
jns
mov
pop
ret
mov
sub
shrl
jecxz
shrb
sbb
jbe
ljmp
test
je
dec
mov
push
cmp
std
push
pop
cmp
call
inc
xchg
jg
fnsave
sub
cld
sarl
inc
test
jg
nop
int
dec
mov
sub
xchg
sub
and
push
loopne
cmp
dec
ljmp
lea
or
mov
mov
cmp
push
pushl
sbb
in
repz
scas
out
pop
js
mov
int
aad
int3
out
jns
popf
xchg
xchg
mov
frstor
push
or
mov
sbb
stc
out
subb
in
popf
dec
inc
mov
mov
ja
dec
je
sub
mov
mov
fsubrl
lods
cmpsl
pop
mov
rcrl
lret
mov
pop
je
xor
inc
xor
out
paddusw
xchg
mov
xchg
push
into
fisubrs
or
mov
jae
rcrb
jg
sub
dec
xor
rorb
repz
imul
mov
std
jmp
adc
icebp
mov
or
pop
jbe
popa
sbb
pop
lods
ja
dec
cltd
fnstcw
popa
cmp
mov
xchg
daa
sbb
xor
aad
andl
pop
mov
inc
pop
test
cmp
fs
and
sbb
or
xchg
leave
repnz
bound
inc
sub
les
dec
cmp
stc
stc
sbb
enter
fldcw
dec
das
sub
mov
ret
aad
xor
mov
inc
cs
mov
xor
adc
pop
das
or
arpl
in
outsl
and
repz
sub
int
dec
pushf
lret
dec
imul
xor
push
mov
pop
movsb
pop
cmpsb
lret
jmp
or
cmp
inc
cwtl
mov
ljmp
fisubrs
pop
mov
jns
out
mov
out
pop
xchg
inc
cmp
out
push
add
leave
or
or
cmp
push
mov
push
es
and
xor
xor
popa
pop
mov
push
and
outsl
sbb
sbb
mov
push
imul
pop
fstpt
inc
jl
test
push
je
scas
push
icebp
cli
and
sbb
bound
mov
dec
pop
pushf
negl
mov
xor
sahf
cmp
dec
jmp
orl
adcb
jne
mov
dec
adc
mov
aam
mov
inc
insb
dec
pop
fdivl
push
cmp
repz
xchg
mov
xchg
lds
test
pop
and
lret
jnp
ja
jbe
jne
pop
mov
pop
or
cmpsb
jl
ret
lods
sub
scas
push
and
mov
push
or
mov
jnp
ficoms
pushf
mov
dec
pop
imulb
lods
in
insb
pop
fcmovbe
pop
out
lds
sarl
jae
sub
jp
dec
jmp
aam
ret
and
jl
ja
push
xchg
lds
or
push
aaa
cmpsl
cmpsb
push
sub
sbb
xchg
mov
xor
sub
fisttpl
loopne
loopne
movb
mov
pop
mov
sub
rorb
xorl
repz
push
inc
push
popf
mov
mov
push
adc
data16
shrb
shrl
push
sub
sarl
call
dec
outsl
lds
int3
mov
nop
lahf
mov
adc
or
ds
cld
xchg
and
movsb
enter
pop
xchg
or
imul
jno
std
or
push
in
jae
xchg
cld
lds
push
cltd
cmp
loopne
fcmove
add
hlt
pop
aad
ja
adc
aas
xchg
fisttpll
cmp
leave
sub
sub
sbbb
xor
push
cmpb
pop
aad
adc
mov
or
adc
nop
outsl
xchg
xchg
inc
sbb
int
push
mov
dec
push
in
stc
stc
jp
fcmovnbe
or
sbb
out
adc
dec
jno
in
mov
lds
out
imul
rcll
fwait
mov
pop
mov
jp
imul
cmp
or
stos
xchg
iret
jl
insb
cli
cmc
fwait
lea
adc
in
adc
or
cmp
or
stos
popa
movb
stos
xor
repnz
inc
jp
ljmp
xor
xchg
inc
adc
mov
das
add
pop
insl
xorl
test
push
popa
movsb
fistpl
and
out
and
cmp
dec
jbe
loop
pusha
xchg
int3
xchg
fiadds
dec
hlt
popf
fimull
xor
sbb
aad
mov
rorb
je
lds
mov
bound
add
nop
or
and
xor
mov
fdivrs
fisttpl
movsb
add
rolb
clc
lcall
vandnps
dec
adc
imull
cld
dec
jmp
mov
leave
cld
ret
jmp
xchg
jmp
bound
or
in
xchg
sbb
cmp
mov
shll
fidivs
out
test
pop
jnp
xchg
sbb
jnp
add
jno
lods
fidivs
incl
sbb
cmp
sbb
xor
push
fstpt
or
inc
stos
push
in
inc
xchg
outsb
inc
jns
dec
adc
add
xor
jg
cmp
jb
pop
ds
fdivrs
mov
lock
sti
fldl
and
in
pusha
insl
mov
test
fwait
dec
ficoms
pop
mov
fcompl
ss
inc
jmp
jl
test
jg
sbb
and
int3
lcall
xchg
repnz
aad
xlat
aas
mov
mov
xchg
movb
inc
dec
jmp
pop
xchg
fidivrs
xchg
mov
inc
jae
dec
cmpsb
aad
push
mov
cli
add
and
test
dec
mov
jns
push
inc
pop
push
test
leave
int
call
loopne
out
or
neg
lcall
xchg
inc
inc
out
and
fst
and
repnz
iret
jle
adc
mov
out
sarl
inc
jge
sbb
out
jmp
cwtl
das
into
arpl
imul
fidivrs
das
fdivp
inc
push
sgdtl
lret
and
jg
jbe
sahf
cli
sbb
stc
cwtl
mov
cs
nop
daa
xchg
cmpl
inc
jl
testl
fstps
addr16
sbb
inc
or
jmp
fcmovnu
in
mov
ficomps
cld
mov
mov
mov
inc
shlb
xorb
push
insb
test
and
cmp
cmpsl
aam
out
stos
test
fisubs
xchg
aaa
xor
cmp
mov
dec
sub
adc
adc
aam
push
imul
clc
push
fmuls
xor
js
pop
jno
lods
in
mov
call
out
cmpb
xor
cwtl
aas
mov
xorl
jne
push
mov
mov
dec
xor
cs
pushf
movsb
jbe
xchg
shrl
mov
movsl
xchg
pop
mov
inc
pop
xchg
fistps
pop
and
loop
push
fwait
mov
ja
cwtl
ret
mov
fs
jge
lods
test
mov
sbb
add
xchg
inc
stc
mov
dec
int
fs
jge
cmp
test
jb
sub
movsb
inc
out
sub
add
dec
inc
mov
adc
ss
jecxz
xlat
cltd
mov
push
cmp
jle
insb
sbb
lret
push
and
push
xchg
push
insl
mov
push
pop
xchg
mov
adc
repnz
mov
bound
outsl
or
mov
insb
sbb
sbb
dec
cmpl
adc
push
push
stos
push
testl
iret
popf
movsb
mov
ljmp
sahf
mov
pushf
jns
dec
icebp
push
mov
and
pusha
shll
outsl
iret
push
mov
cli
jle,pn
loop
les
test
mov
das
mov
imul
pop
cmpsb
jbe
lods
shlb
out
add
jo
pop
push
mov
push
add
dec
jae
sti
out
and
push
xchg
leave
nop
push
mov
inc
xor
shrb
sbb
mov
outsl
jbe
add
or
xchg
pop
data16
movsb
push
adc
lcall
out
aaa
inc
cli
and
shlb
jo
ljmp
and
cmp
cli
sbb
xor
dec
into
insl
test
daa
pop
rdpmc
outsb
or
int
cmc
mov
dec
inc
mov
fcoms
pop
mov
xchg
cmp
in
or
push
lods
mov
or
jb
mov
dec
ret
or
clc
lods
scas
mov
or
rorb
bound
jmp
lods
divb
cs
popf
popf
test
xchg
xchg
sbb
mov
lahf
dec
adc
imul
filds
lret
jge
mull
xchg
xchg
mov
and
mov
imul
scas
fsubp
std
mov
and
inc
xchg
xor
mov
pop
pop
scas
dec
repnz
shll
jbe
pusha
cltd
inc
notl
call
mov
dec
incb
mov
mov
flds
cmpsb
or
xor
push
dec
lock
jmp
mov
push
jg
int
loop
jne
push
jae
add
outsb
arpl
fistl
shll
xor
dec
loopne
mov
outsb
out
xchg
jno
or
xchg
jecxz
xor
pop
popf
and
jo
ja
push
inc
mov
sub
pop
pop
inc
mov
xchg
dec
mov
push
push
cwtl
push
in
mov
pop
mov
and
negl
mov
xchg
and
sahf
in
lock
push
das
aaa
pop
daa
imul
je
mov
mov
push
and
inc
cmp
icebp
adcb
mov
push
add
fidivrl
ja
pusha
enter
fstpl
push
sbb
mov
gs
shlb
mov
cmp
aaa
mov
stos
jb
in
sub
mov
add
pop
jno
jp,pn
jb
adc
rcrl
les
fcmovnb
repz
fs
jl
and
or
fcompl
mov
cld
jae
inc
lahf
jl
mov
push
loopne
cmp
out
aam
push
mov
mov
dec
popf
xchg
clc
adc
pop
mov
add
arpl
xor
and
add
loopne
es
push
ret
and
ret
les
pop
inc
xchg
mov
notb
das
shll
and
push
nop
ret
push
test
sbb
inc
sbb
push
lods
cmp
push
lahf
push
out
gs
arpl
jmp
aam
cmpsb
cs
xor
loop
mov
xlat
cmp
test
xlat
inc
jecxz
popf
cld
jmp
xor
lret
je
sbbl
vrcpps
mov
mov
movsl
push
sub
mov
dec
in
cmp
arpl
xchg
lahf
loop
xchg
into
pop
pusha
scas
std
xor
and
lahf
dec
jmp
mov
xchg
hlt
ja
fldcw
sbb
inc
out
fcmovnb
mov
sbb
or
jb
daa
test
in
jno
mov
sbb
push
testl
add
arpl
rcll
sbb
inc
push
inc
cmp
mov
gs
daa
xlat
dec
pop
sar
pop
mov
adc
dec
movsl
out
xchg
lds
mov
xchg
es
jge
mov
fstpt
and
std
iret
push
xchg
sbb
xor
dec
cmpsb
out
imul
or
adc
adc
rcll
arpl
mov
in
xchg
daa
sub
push
movsb
adc
xchg
jle
mov
rolb
xchg
xor
fwait
mov
push
mov
aaa
nop
adc
pusha
or
aam
jmp
movsb
call
in
add
inc
rcl
daa
push
mov
aam
lds
mov
aas
scas
push
fucomip
pop
sbb
inc
push
int
cwtl
jne
mov
xchg
fdivr
fsubrl
pop
jo
stc
sti
mov
dec
mov
mov
mov
dec
repnz
fdivrs
imul
dec
mov
pop
push
mov
push
inc
dec
lret
in
lea
sub
cmp
and
push
out
mov
or
scas
inc
jo
es
and
mov
mov
lret
jne
or
jns
lahf
sbb
rcl
sbb
push
xor
add
cmp
shll
sub
sbb
jb
sub
mov
or
in
scas
imul
cwtl
pop
inc
int3
out
data16
lahf
ficompl
adc
mov
push
inc
inc
out
mov
xor
out
inc
xor
cld
mov
lods
lret
sub
clc
mov
in
addr16
inc
dec
lods
cmpsl
sti
sbb
and
and
xor
jecxz
sbb
les
adc
or
out
loope
pop
cmp
cmp
or
loop
jnp
sbb
in
int3
ljmp
dec
sbb
cmp
inc
mov
mov
and
mov
insl
add
inc
mov
jmp
out
lock
or
xchg
dec
cmp
mov
negb
adc
add
sbb
push
push
mov
loopne
out
push
ret
aad
imul
xchg
jge
shl
mov
xchg
pop
in
stc
mov
pop
pop
xchg
mull
ret
cltd
pop
dec
xor
cmpsl
dec
outsl
xchg
mov
cmp
sub
out
pusha
enter
xor
and
xchg
scas
sbb
dec
mov
push
push
fstpt
mov
cld
inc
or
adc
leave
stos
popf
inc
out
inc
and
pop
add
or
andl
jge
fidivrl
pop
rcll
pop
or
popa
mov
popf
or
in
popl
or
popf
dec
and
bound
adc
mov
loopne
fcmovne
cltd
or
imul
lods
push
adc
or
push
sub
ret
aam
xchg
lret
ja
ds
leave
roll
mov
mov
arpl
mov
fdivrl
jge
mov
jae
icebp
mov
addb
sub
ds
lret
and
test
jb
out
lock
lret
push
cwtl
ficoms
popf
icebp
jge
jns
cmpsl
push
jb
roll
add
fs
movsl
sub
aaa
xorb
dec
sahf
fisubrs
repnz
fstl
jecxz
pop
js
data16
dec
dec
cmpsb
rcll
sbb
fadd
leave
cmpsb
push
fcompl
std
jp
and
ret
dec
and
fsubr
add
lods
mov
pusha
sub
inc
shrb
xchg
add
mov
xor
lds
or
mov
cmp
pandn
les
bound
xor
fs
xor
adc
repnz
popf
shlb
xor
adcl
cs
out
jo
mov
ror
inc
mov
add
mov
ret
xchg
loope
cmp
push
and
int
enter
in
push
call
pop
fisttps
rorl
cmpsb
jnp
mov
xchg
popa
sbb
cmc
cmp
ss
mov
sbb
jb
sbb
and
jnp
jno
iret
xor
sub
in
mov
lahf
dec
sub
test
push
inc
xor
sbb
arpl
mov
lock
andb
ljmp
repnz
out
movsb
sbb
out
mov
xlat
jge
sub
mov
fmuls
xor
popf
lods
and
add
push
xor
xchg
sbb
ljmp
les
sub
mov
add
mov
push
enter
hlt
adc
fcmovu
jnp
cmpsl
push
pop
mov
pop
out
mov
pop
cmp
jp
pop
lcall
pusha
dec
xor
sub
or
xor
in
rcl
and
pop
loop
or
push
dec
or
leave
mov
rcll
jo
inc
sti
cltd
sbb
xchg
addr16
out
fimuls
les
stos
xor
mov
cs
lods
mov
sbb
xorb
push
add
add
arpl
addb
test
pop
xchg
sti
jle
test
jl
jle
mov
outsl
and
negb
fcompl
jmp
cmpsl
mov
dec
cs
xor
mov
jg
rcrl
and
lahf
jmp
stos
inc
stos
cmpsl
cmp
ds
out
fistl
xor
adc
add
jge
mov
js
push
dec
rorb
inc
jge
mov
cli
add
fcomip
ja
mov
cmp
mov
insl
testb
and
test
add
fadd
outsl
pushf
fs
inc
movsb
sub
sub
shrb
aaa
xchg
inc
das
xor
sbb
fimuls
pushf
jp
sbbb
fidivs
into
mov
xchg
ljmp
mov
dec
into
in
xchg
outsl
add
pop
nop
jmp
das
pop
out
popa
repz
int
push
pop
mov
cltd
lods
in
adcb
pop
mov
mov
js
leave
jmp
mov
sbb
mov
dec
fimuls
lods
push
cli
jecxz
sbb
pop
rclb
xchg
sbb
mov
popf
pop
xchg
jb
mov
data16
je
or
int
scas
popa
imul
push
js
sbb
fnstsw
jmp
xor
push
aaa
add
sti
inc
cmp
clc
out
std
popa
or
cmc
imul
and
cmp
pop
lcall
int
icebp
pop
xchg
sbb
sbb
push
xchg
mov
js
mov
loope
mov
add
cmpsb
pop
in
mov
mov
cmc
xorl
sbb
cwtl
mov
xchg
lahf
mov
push
inc
ljmp
test
fwait
pop
adc
scas
dec
sbb
loope
sbb
mov
fldln2
mov
xor
jge
jbe
pop
ret
add
sub
adc
pop
icebp
imul
stos
int
clc
or
xchg
and
push
push
loopne
push
pop
ret
mov
lods
cltd
in
inc
outsl
test
inc
adc
add
push
int
add
out
inc
rclb
mov
sub
in
mov
mov
mov
stos
mov
sbb
orb
pop
nop
xor
jmp
in
or
xchg
insb
fists
ja
mov
and
pop
xchg
dec
fcoms
add
xor
mov
xor
jmp
fnstsw
movsb
push
aam
test
lock
mov
inc
adc
sub
or
jnp
dec
jno
xchg
push
add
in
imul
add
loope
mov
ss
dec
scas
cmpl
sub
cmpl
xchg
mov
sbb
xchg
cmp
aas
push
stos
xchg
sarb
bound
sbb
add
push
frstor
call
sub
repnz
pop
push
cli
adc
add
outsb
daa
iret
pop
pop
xor
sti
loope
xchg
test
sbb
jne
pop
ret
clc
sub
imulb
je
or
mov
push
iret
mov
pmulhw
ss
and
sbb
daa
out
dec
or
int
lea
xor
push
movhps
sub
adc
mov
repnz
xchg
ljmp
ds
popf
cltd
ja
or
fsubs
xchg
icebp
pop
add
add
stos
mov
lahf
paddusb
cmp
lock
test
mov
fiadds
xor
jns
dec
movb
push
push
gs
add
scas
je
ja
jmp
mov
mov
shlb
cwtl
pop
and
out
pop
xchg
fadd
sar
push
mov
mov
ror
lds
scas
lret
add
pushf
aas
add
xchg
pop
fisttpl
es
fistpl
dec
cmc
outsb
jecxz
dec
mov
stos
popa
push
cld
flds
inc
inc
inc
dec
mov
mov
adc
push
pop
loop
cmpsl
dec
mov
jo
test
pop
xchg
dec
mov
push
xor
adc
out
or
out
xchg
aad
insl
scas
inc
xchg
sbb
cltd
jns
xor
mov
push
adc
sbb
les
xchg
adc
mov
jne
ffree
push
movsb
cmpsb
jbe
out
fisttpll
jae
aad
in
mov
out
push
mov
orl
sub
mov
or
jp
sub
fwait
add
jge
mov
mov
scas
sbb
scas
pop
cmpsl
mov
jp
aaa
mov
mov
sbb
xlat
loopne
xor
ret
or
cmpsl
add
dec
addr16
jns
fisttpl
repnz
cmp
xor
sub
mov
pop
scas
adc
cli
into
pop
cmp
mov
aas
push
jl
movsb
mov
mov
inc
lahf
nop
add
stos
sbb
jp
inc
push
fisubl
stos
inc
mov
fstps
aas
mov
mov
dec
cmpsl
les
int3
fdivrs
mov
or
cwtl
cmp
out
sub
mov
mov
mov
mov
pop
outsl
or
xchg
cmp
push
pop
lret
dec
popa
movsl
pop
fldl
stos
movsb
sbb
adc
nopl
je
cmpsl
fcoms
push
lea
add
arpl
jae
sti
fnsave
inc
ror
lock
inc
mov
fstpt
arpl
mov
push
loope
imul
push
movsl
gs
cmp
xor
adc
ljmp
jmp
adc
fnstsw
fistpll
pop
loope
lret
adc
addl
movsl
adc
mov
sub
fildll
scas
mov
aad
jns
addr16
rolb
stc
test
pusha
xchg
push
fistpl
mov
testb
sbb
push
sti
mov
andl
scas
subps
outsl
cmpsb
dec
xchg
addb
jnp
pop
xchg
pop
jbe
mov
lods
sub
insl
cmc
clc
subl
cli
mov
out
mov
xorb
stos
and
call
push
dec
and
cmpsb
loope
mov
les
or
les
stos
dec
ljmp
dec
pop
sub
sbb
cmp
gs
sub
or
flds
popf
arpl
out
cmc
mov
mov
movsb
jne
lahf
xlat
pop
sahf
pushf
sbb
jb
mov
sub
and
push
xor
repz
call
mov
jne
das
sbb
inc
inc
mov
sub
mov
andl
pop
sub
xchg
les
cmc
imul
and
aam
adc
dec
repnz
ds
mov
sbb
jg
sbb
or
mov
into
adc
fistpll
cmpb
add
sub
xor
stos
jbe
cmp
pusha
movsb
xchg
xor
shll
mov
aam
cmp
jle
rorl
popf
mov
arpl
cmp
cmp
push
mov
mov
dec
addr16
stos
push
mov
or
pop
cmp
cli
or
in
movsb
loop
leave
mov
or
pushf
shrl
mov
mov
int3
dec
test
stos
adc
jo
cwtl
fildl
jge
cltd
cmpsb
and
dec
dec
cltd
gs
add
sbb
and
bound
sbb
or
mov
dec
in
pop
xor
dec
in
cli
lahf
xlat
js
movsb
add
test
sbb
cmpsl
enter
lret
mov
dec
mov
lea
fisubrl
jmp
push
loop
in
pop
call
mov
lahf
ret
pop
push
dec
aad
mov
adc
inc
push
cld
lret
jecxz
mov
js
inc
repz
add
int
cmpsb
std
mov
add
push
jns
dec
pop
das
iret
jmp
aad
jge
pop
mov
jle
sahf
test
cmp
dec
mov
sbb
or
out
scas
int
mov
cmp
stos
lret
gs
sub
jb
ljmp
dec
pushl
push
xchg
push
and
mov
out
xchg
push
mov
cmp
dec
xchg
pusha
mov
dec
push
adc
lretw
xchg
sbb
mulb
mov
movsl
cli
jp
and
pop
cmp
mov
fnsave
fwait
ljmp
subl
mov
lods
in
dec
mov
pop
test
and
data16
sbb
test
push
cmp
rcrl
jne
adc
jl
movsb
sub
imul
jo
sahf
test
mov
push
xchg
jb
in
lahf
xchg
in
dec
pop
nop
cmp
gs
stc
dec
mov
lcall
fcompl
jg
and
ret
lods
iret
mov
xchg
popf
xchg
sbb
addr16
stc
sub
addl
in
sbb
add
movsl
xchg
dec
push
mov
hlt
cwtl
pop
rorb
leave
das
mov
inc
data16
and
mov
test
cmp
daa
pop
push
xchg
sbbl
rcl
and
xchg
jmp
xchg
pop
push
jl
ret
inc
pop
inc
pusha
hlt
add
push
inc
cmc
test
insb
movsl
xor
adc
pop
jbe
jb
lock
mov
mov
push
ficoml
pop
xlat
imul
or
into
inc
insb
js
jo
lret
jecxz
ror
jnp
mov
mov
xor
xchg
psubd
xchg
addb
inc
dec
sub
pop
mov
inc
cmp
jnp
or
sbb
xor
pop
mov
stos
test
das
sub
jbe
jl
inc
dec
pop
outsl
mov
push
jae
pop
sub
aad
fildl
les
loop
sarb
xor
inc
sbb
ret
jl
mov
sbb
imul
and
scas
cwtl
lea
imul
xchg
cmp
push
scas
jmp
push
sub
pop
sub
cmpb
jns
pop
lahf
out
adc
push
jae
adc
int3
pop
sbbl
push
into
dec
hlt
or
data16
sbb
cli
cld
inc
ror
jge
jmp
test
and
push
jb
push
in
sar
insl
das
sub
cmp
jp
jge
or
mov
dec
faddp
icebp
add
inc
and
loopne
les
jl
mov
mov
pop
xor
test
xchg
mov
jle
in
cmpl
movsl
in
cmpb
mov
fwait
jmp
dec
ljmp
int
mov
fistpl
iret
mov
push
xchg
add
rorl
xlat
push
lret
insb
mul
inc
in
out
adc
js
dec
pop
sub
cmc
in
test
subl
or
dec
in
sbb
pushf
scas
out
inc
cmpxchg
imul
cltd
xchg
inc
sbb
pop
ret
mov
pop
push
sbb
fnstsw
fwait
cmp
pop
push
cmp
push
push
test
lret
ds
xchg
and
int3
rorl
in
jbe
mov
dec
adc
movb
jae
nop
jge
add
pop
mov
cmpsl
sarb
addr16
fs
or
mov
xchg
insl
push
mov
ds
or
mov
push
lcall
pop
cmp
xor
push
andl
lcall
cmc
pop
mov
add
mov
lods
cmpl
jge
mov
xlat
call
mov
test
stos
push
jne
inc
pusha
xor
std
push
push
lret
int3
pop
in
je
cli
or
mov
lods
cwtl
mov
test
sti
pop
cli
dec
outsl
xchg
cmp
mov
cvttps2pi
sti
loope
or
ss
add
pop
push
inc
std
bound
adc
mov
sub
ret
xlat
in
pop
loop
stos
mov
fnstcw
lret
mov
hlt
push
movsl
mov
cwtl
std
bound
inc
imul
add
xor
cltd
mov
mov
adc
pop
repnz
dec
cmc
push
sub
inc
mov
lods
mov
jne
xchg
std
in
xlat
or
cli
test
fisttps
enter
cltd
xorb
xor
daa
adc
mov
lods
orl
mov
int3
mov
push
fldcw
mov
subb
pop
std
fstpt
sbb
adc
xor
cmp
mov
bound
repnz
loop
hlt
and
icebp
dec
fmuls
push
inc
adc
mov
mov
sub
lods
dec
ss
jb
jnp
and
xchg
jns
xor
and
stc
lahf
mov
push
push
xor
lret
adc
mov
xchg
movsb
fstpl
inc
bnd
cld
mov
mov
dec
andb
mov
arpl
int
adc
mov
push
adc
pop
out
mov
ret
fs
fldcw
fbld
pop
lods
and
rcrb
add
test
mov
aam
jne
push
adc
lea
repz
jp
icebp
sbb
push
fimull
push
inc
adc
dec
gs
xchg
dec
sbb
cltd
punpckhbw
js
aam
out
mov
mov
fs
push
adc
icebp
sbb
xor
sbb
rorb
push
xor
bound
arpl
nop
faddl
mov
adc
inc
xor
aam
mov
popa
popf
adc
pop
out
sbb
sbb
inc
mov
mov
inc
jmp
xor
pop
pop
sbb
adc
adc
mov
lock
imul
lea
repz
inc
mov
push
mov
scas
or
push
jb
rcrl
test
jnp
addr16
aad
in
xchg
jecxz
add
vmread
insb
pop
ret
fcompl
rcrb
insb
adc
shl
jg
rcll
sbb
aam
cld
int3
jg
out
mov
push
int3
mov
inc
jne
dec
adc
or
cmp
jl
jge
pop
ret
lret
mov
xorl
and
inc
popf
mov
mov
jns
xchg
shl
popf
stc
js
lock
adc
or
lds
add
mov
adc
dec
sub
pushf
mov
loopne
sub
jge
sti
xor
mov
js
push
sbb
xor
inc
in
stc
push
lahf
sbb
mov
pop
or
mov
adc
mov
xor
call
jne
inc
scas
cs
jns
cmp
add
sub
lahf
xchg
xor
adc
in
cltd
daa
fisubl
cwtl
xor
sub
xchg
call
push
pop
inc
dec
push
in
xchg
mov
pop
dec
dec
daa
cwtl
mov
mov
pop
adc
cmp
push
andb
mov
out
nop
xorb
adc
mov
ljmp
fldl
pop
push
push
in
and
push
fstps
repnz
and
cmp
push
mov
pop
repnz
xor
add
inc
or
test
dec
js
jns
mov
inc
mov
enter
xchg
mov
cmp
rol
adc
mov
xor
or
mov
pushf
inc
add
int3
inc
insb
inc
int
rcl
mov
pop
rclb
jle
aaa
hlt
sub
pop
push
enter
xchg
lods
nop
add
sbbl
insb
push
adc
pusha
mov
jp
push
stos
enter
adc
dec
out
shlb
repnz
pop
push
and
rcr
dec
sub
inc
and
sub
adc
add
pop
pop
aas
push
jb
xor
dec
mov
push
inc
push
int3
negl
pop
sbb
scas
mov
fidivrl
mov
das
jae
xchg
ss
or
mov
lods
pop
mov
data16
or
add
int
sub
adc
sub
pop
cmp
in
push
popf
popf
jnp
sub
mov
dec
mov
dec
cwtl
cmp
hlt
imul
cwtl
or
pusha
jp
aas
sahf
cmp
lret
dec
mov
addr16
je
fsubl
xchg
inc
dec
bnd
pop
sbb
jmp
test
divl
inc
sti
cmp
in
jmp
std
jl
aas
loop
out
aad
mov
pop
inc
pop
enter
add
xchg
mov
jecxz
add
aam
shrl
xor
jae
sub
adcl
aam
inc
cmp
cmp
fwait
adc
jns
mov
mov
xor
aam
lret
mov
or
and
nop
sbbb
pusha
and
ror
jns
jne
daa
fstpl
or
aam
xchg
or
les
outsb
cltd
sub
imul
or
cmpsl
mov
out
ljmp
and
jns
test
pusha
aaa
test
mov
ret
mov
bndstx
cwtl
pop
xchg
xchg
push
fisttps
inc
ret
fistps
hlt
add
mov
sarb
shrb
outsl
adc
cmp
add
mov
jmp
xor
mov
pop
sbb
fwait
enter
mov
push
mov
adc
or
int3
pop
and
aas
or
xor
adc
loope
pop
cmp
sub
negl
aam
imul
xor
xchg
inc
inc
pop
jg
gs
iret
push
add
push
dec
pop
sbb
mov
scas
subl
add
push
fs
push
pop
cmp
movsb
daa
call
int3
out
push
icebp
adc
scas
lods
out
jnp
jmp
mov
cmp
sub
mov
mov
fimull
inc
cmp
pop
lods
xor
shrb
dec
out
and
add
cmpsb
jl
add
push
add
out
aaa
or
and
aaa
add
or
jo
jo
ljmp
in
add
jmp
rol
inc
push
xor
jb
cld
add
mov
or
pop
loop
add
stos
lods
jge
js
iret
flds
sbb
add
mov
movsl
insl
mov
dec
movsl
les
xchg
repz
cmp
and
test
pop
stos
sbb
call
xor
push
inc
dec
push
cli
xor
pusha
xchg
xor
add
aaa
addr16
iret
xor
incl
outsb
std
pop
xchg
or
loop
cwtl
setne
xchg
mov
pop
xchg
mov
dec
cmp
data16
orl
ds
or
sub
dec
clc
push
test
xlat
push
sub
xorb
ret
fcmovnbe
js
pop
mov
movsl
jmp
mov
push
mov
divb
int
out
scas
xchg
loope
mov
jl
stc
sub
in
shrl
mov
xchg
test
insb
hlt
jge
dec
add
mov
fnstenv
loopne
xchg
add
mov
cmp
mov
clc
mov
push
pmaxsw
stos
stos
adc
out
pop
insb
jge
ficomps
push
aaa
pop
mov
push
dec
xchg
xchg
test
jmp
push
add
xchg
lret
mov
outsl
ljmp
dec
cwtl
xchg
inc
lock
rclb
sbb
cli
imull
push
adc
sbb
rorl
das
mov
inc
enter
jecxz
inc
jns
fisttps
test
ss
push
popa
call
std
in
negb
test
or
mov
int
repnz
add
xor
in
fldcw
jmp
js
sti
nopl
adc
push
pop
shrb
mov
ret
stos
les
clc
ja
jg
insb
cmp
out
adc
inc
cmp
xchg
mov
mov
jmp
push
fwait
cwtl
pop
mov
or
adc
ljmp
test
sarb
xchg
aaa
pop
sti
or
pop
dec
sarb
mov
push
je
xor
fstpt
test
sub
fidivrl
xor
jns
jecxz
jl
mov
xor
push
movsb
imul
jo
or
fildll
mov
jecxz
xlat
ljmp
jo
mov
in
mov
lock
rorl
sub
insb
dec
in
jno
addr16
push
int
je
movsb
dec
lock
push
dec
test
xor
cmc
mov
xor
js
push
out
push
mov
fwait
add
sub
popa
addr16
sub
xchg
xor
outsl
sub
cmp
mov
stos
push
adc
arpl
mov
sti
sarb
mov
pop
mov
dec
test
xlat
sub
fistpl
xchg
scas
xchg
and
or
cli
out
cmp
pop
cli
movsl
cmp
hlt
int
pushf
xchg
pop
mov
lret
add
mov
mov
jge
int
jo
leave
movsl
aam
cmp
bound
orl
mov
sub
push
add
pop
xor
push
or
mov
xchg
loopne
loope
sbb
sbb
sahf
popf
stos
cltd
outsl
xchg
mov
jl
sarl
adc
gs
push
orl
in
dec
mov
lret
cwtl
cmp
mov
fucompp
cmpsb
in
insb
mov
xchg
or
rcr
sbb
pop
adc
push
insb
nop
stc
sbb
or
or
js
dec
or
lret
dec
cmp
test
and
cltd
xchg
mov
xor
fwait
mov
lcall
frstor
dec
es
jecxz
xchg
lods
rorb
push
inc
sbb
int3
jmp
mov
adc
outsb
les
or
xor
nop
mov
xor
xchg
lds
inc
insb
pop
sub
xchg
mov
mov
cmp
ret
outsl
lock
jge
or
enter
js
xchg
cmpsl
cmp
mul
jnp
push
mov
sti
inc
pop
fldenv
repz
xor
ds
imul
test
fildll
roll
leave
inc
imul
pop
mov
sbb
sarl
insb
dec
scas
jb,pt
adc
jl
add
idivl
adcb
or
loopne
or
testl
test
std
fsubrs
or
sarb
cltd
lret
xchg
mov
inc
es
loope
lds
stos
aam
dec
int3
fmuls
pop
or
mov
jl
xchg
jle
xor
mov
test
into
jb
dec
mov
lds
imul
fisubl
in
lea
mov
mov
je
in
mov
mov
jb
pop
mov
pusha
test
scas
xlat
adc
in
dec
inc
sarb
fldenv
or
or
adc
push
xchg
loopne
leave
push
or
mov
inc
outsb
inc
ret
adc
pop
test
mov
mov
cmp
pop
popa
push
inc
xchg
dec
inc
jg
sbb
in
jmp
pop
sub
push
xchg
les
aas
xchg
das
jecxz
lock
pop
jo
sub
gs
xchg
push
out
repnz
cmp
ss
mov
lahf
sub
sub
mov
icebp
mov
insl
xor
cltd
xchg
rolb
sbb
push
cli
out
sbbl
into
mov
mov
rcrb
sub
wbinvd
sub
out
pop
pop
jae
xchg
fcoml
push
in
push
out
fidivl
jl
ljmp
dec
call
sti
lock
jbe
xor
shlb
jns
push
add
scas
mov
push
scas
inc
les
push
into
push
into
repz
out
add
dec
aaa
scas
push
adc
or
aam
or
in
dec
repz
mov
mov
add
xchg
mov
mov
mov
and
xchg
mov
xorl
out
xchg
xchg
jge
fldl
dec
sbb
movsb
out
pop
xor
lahf
inc
je
outsl
hlt
ret
bound
hlt
add
fdivl
in
mov
cwtl
mov
arpl
sbb
movsb
sbb
mov
jb
enter
in
lret
jg
or
pop
stos
movsb
add
ss
push
call
pushf
stc
sub
gs
push
fs
out
lret
leave
xchg
mov
jae
fs
cmpsb
inc
inc
loope
stos
sahf
push
and
dec
ljmp
lahf
arpl
mov
std
mov
lods
adc
fs
inc
insb
sti
or
sbb
icebp
sahf
inc
xlat
or
and
mov
fs
test
hlt
xlat
lahf
icebp
lahf
daa
in
bound
shrb
adc
outsl
pop
fwait
sbb
mov
addr16
lock
xchg
lcall
pushf
sbb
repz
sbb
cmpsl
in
add
outsl
jp
daa
cmp
sub
and
xchg
fwait
mov
xchg
pop
sub
add
loop
inc
rcrl
dec
add
push
jmp
inc
cmp
push
sub
divb
mov
daa
push
xchg
jg
sub
or
ret
pop
xchg
pop
popa
sbb
insb
or
clc
mov
iret
aam
cmpl
or
jnp
in
push
add
push
xchg
xchg
clc
push
push
mov
notl
adc
push
cmp
pop
mov
mov
sbb
pushf
cmc
jnp
mov
pop
jbe
rcl
ret
jb
aad
scas
push
fisubrs
lock
cwtl
scas
sub
adc
pop
mov
aaa
in
add
imul
push
mov
adc
and
cmpsb
orl
mov
push
adc
mov
adc
sub
push
movsb
lret
adc
data16
mov
add
stos
push
xchg
cmp
cld
imul
std
mov
jb
cmp
ja
aad
jge
adc
and
inc
sub
add
inc
cmp
xor
inc
mov
pop
idivl
and
mov
xchg
sbb
dec
outsl
fnstcw
push
inc
fimuls
pop
testb
cmpsb
mul
and
pop
xchg
mov
leave
daa
shl
push
js
push
mov
lcall
xor
fiadds
jno
cmpb
shl
sti
cmpl
sbb
and
mov
fdivl
cmp
pop
dec
sub
adc
adc
cli
pushf
in
faddl
cmp
xchg
xchg
xchg
jecxz
stc
adc
out
xor
dec
cs
imul
mov
cmp
mov
sti
jmp
pop
rolb
lock
xchg
aaa
add
or
and
fldl2e
in
stc
push
sbb
jle
cwtl
xor
ror
mov
lds
xchg
mov
xchg
movsl
lahf
xchg
sahf
cmp
cmp
add
push
sbb
dec
je
mov
xor
in
aas
inc
insb
dec
dec
dec
aas
inc
in
jo
cmp
popa
inc
pop
jae
mov
adc
outsl
jno
rolb
out
sbb
hlt
cmp
fcoml
inc
jns
lds
sarl
lcall
popf
arpl
ds
sbb
pop
shl
cwtl
xchg
aas
inc
enter
pop
mov
pop
and
push
mov
adc
adcl
jle
aam
inc
jo
mov
adc
je
rcrl
dec
push
int3
leave
pop
xchg
mov
pop
cmc
adc
or
jl
insl
jae
jnp
out
jb
stc
int3
push
popa
in
jmp
fsubl
imul
ret
mov
mov
rcrb
mov
jo
popl
insl
sbb
push
cmp
xchg
and
adc
ss
das
rorb
lcall
scas
not
cmc
ds
test
gs
ds
xor
and
pop
xor
scas
out
out
cmpsl
push
mov
rcr
push
xchg
cmc
fyl2x
insl
pop
add
add
push
xor
push
mov
jl
insl
je
in
das
imulb
xchg
repz
pushf
shrl
or
adc
cmp
clc
pop
out
xchg
stos
int3
mov
inc
mov
scas
dec
iret
data16
xor
adc
in
daa
jbe
cltd
bound
jle
fdivs
jmp
sub
cli
shrl
cmp
jnp
mull
test
inc
mov
aad
lcall
push
mov
pop
xchg
mov
cli
add
rep
push
add
sub
in
add
cmp
ficomps
into
push
or
mov
sahf
xlat
push
add
adc
inc
movsb
push
mov
add
es
and
scas
jo
xor
pop
inc
mov
movsb
add
pop
adc
xor
inc
sbb
and
pop
adc
popa
adc
inc
lcall
ret
jns
or
push
pop
lret
imul
shrl
outsl
push
hlt
jmp
dec
xchg
dec
cli
out
ja
xor
push
outsb
xchg
ljmp
mov
mov
out
lea
addr16
sbb
mov
add
push
rcrb
mov
insl
ret
in
mov
sub
push
cmpsl
pop
pusha
js
add
pop
roll
test
jno
mov
std
cmp
xchg
fcoml
lret
lock
std
movsb
fcompl
mov
cmp
jp
dec
rclb
dec
jmp
cltd
scas
mov
test
data16
mov
mov
in
push
push
out
out
shll
ds
cmp
dec
ret
mov
nop
jo
ljmp
test
add
gs
mov
cmp
gs
fsubr
fs
mov
mov
push
xchg
pop
lods
push
mov
aas
mov
xchg
movsb
faddl
and
mov
in
mov
inc
out
popf
fs
sbb
rcrl
jg
mov
push
stc
rcll
or
and
lock
dec
push
jnp
js
xor
xor
loope
rolb
pop
and
jne
lea
mov
iret
mov
rcll
and
in
mov
test
dec
mov
repz
int3
mov
jbe
repz
jecxz
fbstp
movsl
mov
leave
pop
shl
jns
sub
xchg
push
mov
cltd
adc
aaa
xor
mov
mov
or
xchg
test
add
js
lret
adc
xchg
in
pop
mov
lods
add
mov
sbb
xor
shlb
push
xchg
mov
jo
int
xchg
in
outsb
mov
mov
sbb
fs
out
jp
jo
mov
inc
pop
and
stos
iret
adc
stos
push
mov
inc
add
mov
andb
fdivs
lret
fdiv
test
les
icebp
lods
jo
pop
or
jae
popa
ud1
out
hlt
sahf
lea
outsb
pop
imul
insl
push
imul
dec
or
filds
and
jo,pt
push
push
call
stos
push
outsl
icebp
inc
push
dec
mov
cmp
testb
ret
mov
cltd
loop
mul
fwait
push
adc
adc
stos
arpl
loopne
loopne
pop
or
stos
xchg
jmp
xor
mov
dec
mov
mov
mov
sub
mov
push
mov
and
hlt
jno
pop
or
cs
xchg
sbb
add
mull
jle
outsb
repnz
cmc
mov
outsl
xlat
sub
xchg
dec
mov
dec
push
xchg
jo
pop
cmp
jbe
ja
push
xchg
aas
mov
or
sub
loop
dec
loop
inc
dec
add
mov
incb
lret
stos
and
inc
decb
push
inc
mov
daa
lock
sbb
xor
xor
pop
mov
sub
sub
fsts
pop
mov
ss
cmp
dec
adc
ret
pop
icebp
mov
movsl
jne
ljmp
mov
jecxz
divb
add
arpl
lods
sbb
imul
lret
std
in
push
imull
lods
push
xor
roll
dec
jns
adc
sbb
icebp
mov
fwait
orb
cs
jne
leave
sub
rcl
adc
stos
add
or
repnz
dec
bound
dec
xor
sbb
imul
sbb
mull
nop
adc
sbb
out
fmul
dec
dec
mov
pop
das
xchg
push
add
lahf
pop
pop
icebp
pop
sbb
sub
xchg
or
out
mov
cli
ret
roll
mov
lret
xchg
data16
pop
hlt
mov
stos
sub
inc
or
jp
ss
insb
loopne
mov
push
fstps
imul
push
pop
adcl
dec
mov
mov
mov
push
push
inc
add
mov
pop
iret
lret
movsb
ja
loop
push
xchg
mov
cmpl
mov
inc
movsl
adcl
outsl
adc
movsl
aaa
nop
and
jg
lds
lods
lcall
aad
xchg
jg
movsl
cmp
mov
jno
aaa
adc
popa
pinsrw
xchg
sti
ret
sahf
push
out
xchg
jge
es
test
lret
rolb
rcrl
push
int3
add
xor
pusha
rcrl
mov
cmp
dec
pop
pop
inc
insl
jnp
popf
out
and
movsl
or
cmpsl
rcll
pop
insl
pop
mov
int
xchg
cld
cmpsl
insl
xchg
fcom
inc
xchg
pop
sub
lds
out
inc
pusha
call
das
fs
shll
or
insl
ljmp
mov
sarl
loope
out
shll
ror
push
sbb
push
pusha
fistps
and
push
push
add
ljmp
sub
inc
sahf
cmp
out
mov
loopne
call
int
add
push
fsin
xor
xorl
jb
cmpsb
in
pop
xchg
xchg
mov
out
addr16
mov
push
inc
push
sarb
inc
sbb
xchg
adc
int3
fwait
movntps
sub
mov
cld
push
cld
mov
xor
ds
aam
leave
sarl
dec
negl
mov
mov
hlt
sbb
fiadds
repnz
push
scas
mov
inc
xchg
clc
jno
rcll
into
cltd
xlat
adc
mov
mov
or
daa
or
shlb
xlat
push
mov
insb
mov
imul
inc
sub
xor
jbe
in
lahf
pop
cmp
inc
dec
sub
mov
inc
push
mov
adc
fs
cmp
sbb
stos
xchg
xor
shll
cmpsl
pusha
xchg
insl
test
cmc
icebp
ficoms
cmp
jns
push
dec
les
aam
ljmp
or
push
push
pop
fcom
sbb
and
dec
jg
sub
pop
movsb
dec
sahf
movsl
into
mov
xor
xor
cwtl
lock
adc
fisttps
push
pusha
fists
mov
pushf
loopne
mov
cmpsl
int3
cmp
jb
xchg
movsb
fdivl
xor
testl
cmp
loopne
shrl
or
addr16
xor
test
fistpll
push
sub
pop
arpl
ret
push
or
pop
into
mov
cmp
enter
dec
roll
in
sub
call
xor
and
inc
inc
cs
sbb
clc
dec
bound
push
adc
push
movsl
jae
jns
xchg
pushf
sti
add
pop
sqrtps
pop
fcmovne
xor
scas
inc
or
xchg
adc
test
cmpsb
push
mov
fwait
cmpsl
in
push
jb
subl
pop
icebp
cmc
or
insb
lret
mov
mov
add
mov
push
inc
mov
sbb
and
push
rcrb
pop
add
add
jbe
ficompl
mov
or
jl
mov
es
inc
jmp
mov
push
ds
test
xchg
mov
push
fmulp
arpl
jns
icebp
popa
mov
xor
xchg
mov
sbbl
shrl
xor
jle
movsl
pop
outsl
or
outsb
xor
sbb
popa
fdivs
jnp
fmuls
push
push
xor
cs
push
cs
scas
sub
dec
int3
lcall
jmp
jb
jbe
jl
mov
sub
cmc
in
xchg
and
jp
jg
cltd
mov
js
stos
xchg
fstps
shrb
pusha
iret
bound
inc
or
lea
mov
imul
xor
lcall
xchg
scas
decb
jle
xchg
mov
dec
dec
stos
push
and
adc
or
jne
std
mov
jno
outsl
jae
or
cmp
xor
mov
je
test
les
lods
mov
scas
out
cmp
sbb
mov
test
and
push
mov
cmc
cltd
fstp
sarb
or
push
jnp
leave
scas
rorl
je
lcall
xchg
or
and
outsb
inc
addr16
cmpsl
out
outsl
aam
rcll
loopne
lahf
setg
cwtl
movsl
xchg
pop
pop
mov
arpl
xorb
sub
rorl
mov
rcr
or
daa
mov
mov
ja
out
mov
mov
and
jecxz
adc
sub
or
fs
add
out
jns
sbb
jp
xchg
jo
add
jmp
arpl
add
and
or
test
repnz
inc
cmp
add
xor
sub
int
push
xor
outsl
lea
mov
xchg
out
push
popf
lcall
pop
mov
or
gs
pop
mov
xchg
je
filds
insl
cmc
fwait
add
lahf
xor
movsl
ret
aad
xlat
daa
mov
adc
std
arpl
xchg
rolb
jge
out
aaa
and
imul
mov
in
mov
aad
mov
xorb
xchg
mov
cs
cld
or
insb
jne
test
mov
int
xchg
cwtl
loope
lcall
mov
shll
mov
orl
mov
add
sub
cmpsb
push
out
out
sti
or
push
push
sub
lret
cwtl
xor
add
dec
cltd
xchg
mov
push
aad
mul
ltr
aaa
or
xorl
fists
and
jae
cwtl
cld
stos
daa
dec
inc
repnz
sbb
sarl
mul
lahf
repz
sarl
mov
bound
pushf
cmc
xor
and
inc
ret
les
adcb
mov
and
int
mov
in
xchg
mov
test
loop
cltd
movsl
fistps
push
sbb
repnz
pop
and
test
cmpsl
cs
jb
clc
out
push
adc
in
mov
jle
sub
xchg
xchg
sahf
push
or
adc
ret
scas
rorl
fsubs
pushf
sbb
dec
mulb
loopne
push
add
dec
dec
shll
mov
mov
rclb
testl
jnp
movsb
stc
pop
add
pop
cld
or
jae
call
sbb
add
xchg
and
test
sti
mov
jg
lds
jbe
lahf
xchg
insl
mov
dec
mov
and
pop
xor
test
xchg
outsl
addr16
btr
fnsave
ret
aas
ret
fidivrl
cs
pop
test
cld
sbb
enter
pop
or
mov
loope
sbbl
cmp
xchg
sarl
dec
sarl
xor
mov
movsb
mov
jecxz
lcall
sub
add
add
lret
ret
sub
ret
mov
idivb
cs
lds
dec
xchg
jecxz
push
mov
jge
xchg
and
repz
hlt
push
mov
mov
gs
cmpsb
sahf
mov
stc
leave
je
int
add
dec
mov
mov
push
xor
scas
jmp
xor
adc
and
pop
popf
cmc
dec
pushf
arpl
sbb
inc
cmp
xchg
dec
and
mov
xchg
scas
push
pop
push
frstor
and
add
mov
cs
mov
cmpsl
xchg
push
jbe
push
mov
push
jle
cmp
into
mov
adc
testl
rcrb
fimull
fidivrl
sti
lods
push
jne
mov
out
andl
fwait
push
jae
sub
test
xor
lods
sbb
pop
cmp
neg
push
mov
pop
add
lcall
or
in
xor
cmc
mov
in
loopne
inc
jle
jp
xor
sti
test
mov
adc
hlt
xchg
and
jl
jns
je
jae
in
test
das
icebp
dec
jl
sbb
scas
jle
ds
ja
std
addl
push
pop
lods
mov
clc
outsl
lcall
adc
mov
mov
push
sub
cli
faddp
pop
mov
push
or
cli
loope
cmovge
xor
xchg
and
push
test
adc
push
push
sub
jle
pop
sub
sub
jg
inc
sub
xchg
mov
sub
push
and
insb
ljmp
push
shl
dec
pop
fcoml
or
pop
adc
jg
nop
shll
insb
ret
test
mov
popf
pop
add
lods
jp
adc
addr16
inc
jg
mov
adc
mov
mov
outsb
jne
mov
dec
dec
shlb
fisubl
loope
movsb
iret
xchg
fs
sub
repz
repnz
mov
xchg
inc
es
jle
stc
mov
push
inc
loope
push
call
or
mov
pop
jae
pop
jmp
mov
add
xchg
test
sbb
cwtl
add
xchg
add
cmp
insb
stos
sahf
ljmp
mov
xchg
add
sbb
loope
push
stc
or
mov
ret
fdivp
cli
ds
into
mov
cmp
mov
ss
icebp
jo
mov
cli
xlat
jbe
pop
pop
leave
std
mov
mov
mov
iret
js
or
stos
push
cmp
xor
sub
or
sub
std
adc
cld
mov
cltd
xor
enter
jecxz
sahf
jl
jno
push
mov
scas
push
movsb
add
xchg
sub
mov
jle
cmpsl
cwtl
push
push
popa
movsl
or
aad
xor
mov
add
jle
mov
pop
popf
xor
add
inc
and
rcl
push
push
add
iret
sbb
adc
xlat
out
pop
lcall
into
test
add
xchg
mov
loopne
push
int
subb
bound
out
lahf
jns
out
dec
sahf
push
mov
pop
repz
xlat
jno
adc
movl
xor
shrl
inc
popf
out
xor
xchg
fldl
bnd
maskmovq
sbb
dec
inc
mov
repz
jae
dec
and
popa
adcl
pop
fs
scas
in
sub
sbb
add
aad
lods
lods
ret
mov
fdivrp
faddl
insb
lret
aam
sub
inc
mov
add
mov
push
mov
inc
roll
or
dec
ret
pusha
and
pop
xor
lods
mov
aas
lahf
negb
mov
mov
cmpb
enterw
inc
push
push
inc
xor
out
push
insl
pop
cmpsb
lea
sbbl
dec
sub
sbb
sub
xor
fiaddl
xor
push
mov
pop
add
stc
mov
das
sub
movsb
mov
loopne
pop
or
hlt
out
xlat
aaa
fistl
into
test
je
adc
push
adc
in
pop
xchg
scas
cmpsb
stos
inc
lods
add
jnp
pop
clc
movsl
push
mov
pop
and
insb
pusha
or
mov
rcl
les
jle
mov
cmp
movsl
and
leave
popf
xchg
ret
mov
shll
xchg
cli
jns
jns
push
ljmp
sub
in
inc
lret
addl
xor
sub
arpl
jne
sub
push
int
pop
push
outsb
push
aad
mov
pusha
xchg
mov
inc
dec
or
inc
xchg
gs
pop
clc
fwait
sub
pop
aam
push
imul
mov
push
sub
cmp
aas
scas
push
mov
das
and
stc
cmpsl
in
and
int3
dec
add
ja
subl
jno
adc
stc
lods
sbb
je
in
es
idivl
sbb
imul
roll
mov
adc
pop
mov
loopne
icebp
mov
pop
dec
cmp
jmp
rcrl
push
sbb
scas
xchg
sahf
fdivrl
clc
xchg
mov
mov
testb
sub
add
cmp
xchg
imul
arpl
test
punpckldq
out
sub
sar
xchg
ljmp
in
lea
xchg
jl
mov
mov
movsb
mov
and
jg
ret
mov
push
mov
inc
test
into
dec
inc
jg
cmp
hlt
shrl
into
rcrb
push
pop
mov
pop
sub
adc
test
or
xlat
xchg
rcl
leave
xchg
push
sahf
andl
xchg
stos
jmp
xchg
mov
fisttps
pop
xor
xlat
icebp
xor
sahf
dec
aad
dec
fldcw
push
push
sbb
ss
dec
addl
in
leave
clc
cmp
push
cmp
outsb
rorl
inc
adc
in
sbb
imul
jp
adc
out
dec
sub
lret
xor
lods
add
and
sbb
into
pop
push
jmp
ds
mov
dec
xchg
jb
inc
data16
push
ss
lcall
mov
cmp
outsb
cmp
sbb
je
cmp
push
in
es
std
mov
in
or
mov
or
dec
fs
rcll
in
push
cmp
dec
cmp
push
push
adc
loop
xchg
jle
push
icebp
out
jne
xor
fstpl
int
and
fwait
test
sbb
mov
test
scas
mov
cli
jbe
fcmove
or
popf
and
lods
mov
add
stos
addl
pop
jne
sub
pop
push
ss
xor
xchg
dec
dec
mov
inc
insb
test
mov
mov
and
mov
dec
cs
pop
repnz
test
stos
movl
xchg
jl
lahf
xor
mov
loop
lahf
or
roll
mov
add
mov
cltd
push
sbb
outsb
stos
in
arpl
jmp
mov
fld
filds
lret
sti
push
out
jbe
pop
jmp
dec
mov
adc
fwait
or
loope
sbb
and
xchg
ret
scas
xchg
loop
test
mov
adc
scas
out
mov
mov
mov
inc
sbb
jno
popf
mov
lahf
mov
sub
xchg
lahf
xchg
push
in
jg
or
sub
fs
lahf
push
xchg
jl
xchg
inc
mov
inc
cltd
pop
pop
lods
shlb
les
out
call
repz
lahf
aam
xchg
push
pushf
mov
or
loopne
fbld
es
mov
jl
dec
jae
and
scas
inc
xor
mov
inc
ret
mov
xorb
xchg
lahf
mov
negb
js
or
mov
aad
test
popa
inc
imul
cmp
sub
adc
lret
lahf
ljmp
and
mov
int3
adc
and
stos
add
mov
cmpsb
and
lret
add
and
xor
subb
fwait
xchg
lock
jecxz
in
adc
mov
and
les
popf
pop
push
jbe
push
dec
iret
xorl
jmp
sar
in
mov
push
cmp
push
or
divb
jp
xor
xor
cmpsb
imulb
stos
repz
push
xchg
in
pop
jmp
xchg
test
fbld
orb
int
pop
dec
inc
jg
xchg
sarb
rorl
daa
outsb
push
mov
fildl
dec
mov
lds
inc
pop
mov
iret
dec
clc
sbb
push
mov
push
jns
cmpsl
pop
cmpsl
or
gs
in
iret
pusha
nop
cli
mov
ljmp
jg
sub
sbb
inc
push
sbb
jno
iret
jno
negb
faddl
jl
dec
addr16
nop
mov
add
xor
pop
jle
lds
movsb
mov
movsb
sbb
mov
xchg
enter
pop
dec
ret
push
paddusb
push
mov
clc
andb
xchg
xlat
stc
in
xchg
mov
sarl
pop
mov
imul
push
in
xchg
test
push
enter
push
or
jnp
test
dec
shl
xchg
icebp
cwtl
cmp
pop
dec
insl
add
inc
sub
fwait
lods
pop
xchg
enter
mov
pop
fmul
arpl
in
int3
cmp
pop
sub
shlb
sbb
shrl
jbe
xchg
push
cmp
loope
jle
dec
or
dec
adc
movsl
push
shl
adc
push
pop
sub
pop
adc
pop
jl
xchg
addl
push
out
push
mov
adc
pop
push
in
enter
dec
mov
mov
testl
and
and
sahf
popf
movsl
cmp
adc
add
cmp
cs
push
fmuls
aam
pop
push
mov
ds
outsb
aas
add
fldl
sahf
orb
jb
sahf
mov
fstpl
jg
mov
cmp
cmp
leave
xor
sbb
jb
bound
repnz
pusha
fdivl
insl
fdiv
sbb
fwait
js
jecxz
add
push
sarb
mov
cmpsl
cli
stos
fldl
fs
jno
push
in
pop
pop
push
out
in
ud2
loop
mov
push
sub
and
push
mov
pop
sub
cmp
stc
sub
xchg
sub
cwtl
cs
mov
int3
jmp
mov
mov
xor
fs
add
cmc
mov
frndint
dec
aad
arpl
and
xchg
hlt
int
daa
xchg
pusha
stos
push
incb
sub
lock
dec
clc
sub
xchg
cmpsb
repnz
lahf
adc
int3
je
loopne
adc
stos
jg
aas
in
mov
cltd
cmp
mov
repz
inc
das
cmp
or
jns
inc
jmp
xorb
pusha
stos
popf
dec
jb
or
movsb
rolb
lcall
in
push
call
pusha
xchg
dec
rcrb
out
loope
mov
cmp
pusha
inc
cs
test
sbb
movsl
pop
cmp
je
lods
jecxz
rcl
jns
pushf
pop
jno
push
out
shrb
jmp
mov
or
leave
add
leave
push
dec
jns
or
pop
push
mov
or
pop
fwait
icebp
andb
push
add
lods
fnstsw
enter
inc
insb
cmp
adc
xlat
leave
scas
jmp
enter
pushf
xchg
int3
mov
pop
inc
insl
lods
ffreep
inc
stos
mov
or
add
mov
xor
ret
mov
jmp
jnp
int3
pop
movsb
lahf
add
sbb
rcrb
lea
inc
xor
sub
fs
cli
push
int
ret
stos
jmp
sbb
fsubs
sub
dec
dec
ficoms
dec
imul
stc
out
or
test
and
adc
sub
out
mov
imul
cmpsl
pop
mov
mov
mov
idivl
jnp
gs
jns
mov
jnp
pop
pop
mov
clc
xor
jmp
mov
lcall
mov
pop
pop
leave
mov
fisubrl
and
js
daa
dec
cwtl
mov
out
icebp
aaa
outsl
pushf
sbb
rcrl
sub
xor
hlt
jo
dec
and
outsb
daa
push
jmp
les
sahf
sbb
jae
xor
test
cli
or
inc
and
jg
jbe
aas
imul
andl
les
mov
cmp
jp
std
stos
daa
repz
jb
mov
int3
xchg
xchg
dec
aaa
fdivl
mov
fwait
rep
and
push
outsl
aad
pop
xor
or
sub
les
inc
es
cmpsb
mov
lahf
push
pushf
fs
gs
and
nop
loop
js
dec
testb
sbb
insb
add
loope
es
aaa
in
fcomp
clc
out
push
inc
inc
jae
nop
je
hlt
f2xm1
mov
or
jbe
sbbl
jb
pop
and
jp
je
cmp
addr16
arpl
mov
pop
jp
imul
jne
jbe
cmc
lock
mov
loope,pn
out
dec
or
outsl
inc
out
cmpsb
or
mov
mov
cli
mov
inc
mov
inc
mov
xchg
jne
es
xchg
and
xor
xchg
adc
mov
push
insb
imul
or
inc
cmpsl
jmp
pop
push
insl
pop
or
inc
subl
add
out
and
stos
push
aam
fmuls
push
mov
es
xorb
add
int
js
or
xlat
aaa
sub
imul
xor
aaa
pop
push
inc
push
scas
sbb
push
sbb
jns
test
jg
mov
dec
popa
repnz
cmc
addr16
repz
shll
adc
lods
add
sbb
mov
mov
jecxz
sbb
inc
popa
mov
jne
pop
adc
xor
push
sub
movb
aam
leave
jae
fwait
pop
push
lret
push
aaa
dec
sbb
jg
je
dec
adc
ja
sub
iret
icebp
mov
out
pop
push
rcl
dec
jo
mov
jl
adcl
hlt
scas
mov
pop
cmp
pop
lods
adc
out
lods
les
ljmp
add
jae
cmp
fsubrs
test
jge
pop
shrb
xchg
nop
scas
and
push
out
jle
sub
test
outsl
pop
into
mov
dec
ja
inc
pop
or
fadd
mov
sahf
xor
shrl
or
stos
sti
in
add
or
pushf
jbe
test
mov
stos
mov
pop
ja
jl
icebp
scas
sub
or
mov
and
lock
ror
sub
pusha
adc
leave
ret
inc
sti
mov
ljmp
push
xlat
cpuid
cmp
loopne
scas
jp
nop
sub
sub
gs
sub
push
cmp
add
jle
mov
or
jae
test
inc
lret
imul
shl
sub
mov
push
leave
repz
in
dec
cmc
cmpsl
mov
xor
lea
dec
mov
int3
inc
inc
stos
xor
mov
hlt
sbb
push
mov
outsb
outsl
out
test
add
or
arpl
std
cmp
in
in
inc
mov
xorl
push
cmp
scas
gs
push
je
add
iret
addb
test
lock
pop
dec
cli
or
add
gs
sbb
mov
sbbb
adc
aas
ss
xchg
je
into
stos
pop
dec
lds
mov
sbb
mov
lahf
insb
jae
add
subb
call
jmp
in
fstl
ss
or
mov
add
mov
mov
jb
sbb
mov
dec
xchg
xor
inc
jne
lea
cwtl
push
fwait
sti
sbb
mov
pusha
fiadds
test
push
xor
lods
or
dec
in
adc
xchg
or
jo
or
movsb
sarb
jns
lea
dec
dec
push
jae
les
fwait
lods
cwtl
push
adc
dec
push
in
mov
sbb
sarb
popa
mov
lea
fidivs
inc
adc
cmc
in
and
imul
pushf
xor
xchg
cmp
lods
sub
jne
and
and
cwtl
inc
inc
mov
inc
repz
std
adc
inc
pusha
xchg
pop
mov
and
mov
stos
movl
sbb
adc
add
push
repz
out
stos
mov
jmp
sbb
shrl
shlb
pop
lods
ja
jae
cwtl
sbb
and
test
aad
lods
rolb
subb
data16
dec
mulb
in
mov
and
add
jae
fldt
dec
stc
add
dec
cmp
jmp
mov
mov
xor
out
aam
cld
xchg
dec
cld
pop
movsb
push
dec
data16
push
or
add
cmp
cmp
in
mov
mov
xor
push
sub
arpl
test
dec
dec
ret
mov
and
mov
sub
cmc
je
test
jl
jnp
mov
out
outsb
out
push
inc
and
cmp
or
js
fstpt
inc
aas
push
stos
xor
and
and
jl
pushf
pop
out
mov
idivb
cmc
mov
inc
daa
pusha
ja
arpl
jge
scas
ss
push
enter
xchg
loope
adc
cmp
fcoml
test
lret
mov
mov
push
add
test
lret
cli
lods
lcall
jmp
outsb
rol
mov
clc
sub
shrl
cmp
jns
sbb
mov
sbb
in
nop
pop
mov
add
stc
sahf
lea
test
iret
jmp
int
jne
cs
call
cmp
out
ja
pop
dec
sub
rcr
xchg
jns
or
xlat
pop
jecxz
pop
adcl
mov
inc
lock
mov
shl
xlat
out
inc
imul
push
sbb
xor
shlb
dec
dec
push
jno
push
xchg
sbb
insl
repz
mov
cmp
sub
cmp
mov
mov
mov
xchg
mov
add
push
jge
insb
dec
and
mov
jp
mov
dec
push
cmpsb
test
mov
add
mov
sbb
xor
movsb
fimull
lds
push
sbb
popf
pop
test
adc
je
jo
mov
js
lahf
mov
adc
clc
ret
adc
mov
or
pop
mov
flds
js
or
call
adc
int3
adc
popf
fstpt
and
test
adc
push
ret
cltd
jle
lret
pusha
mov
lea
icebp
push
add
scas
mov
dec
mov
mov
int
mov
mov
or
out
popf
sub
push
and
pop
cmovp
cmpsl
fnstenv
nop
mov
int
mov
and
iret
jno
jmp
adc
into
cmpsl
inc
push
scas
dec
xorps
xor
dec
ficompl
sbb
jns
mov
xchg
sub
dec
mov
adc
cmp
add
or
ljmp
pop
ljmp
incl
push
adc
xor
add
idiv
lahf
dec
inc
dec
add
rol
lahf
outsl
xchg
into
adc
sub
pusha
sar
fsubs
jae
mov
movl
stc
mov
ficoml
mov
push
xchg
cmp
xor
pop
push
and
dec
mov
cmpsb
psrlq
aam
mov
ljmp
jg
push
lods
loope
sub
jle
cmpl
fwait
inc
jnp
cltd
mov
mov
jmp
lods
adc
sahf
jg
cli
mov
sub
fimuls
fsubrs
das
inc
sbb
push
jle
dec
jne
cbtw
ret
or
mov
jb
add
cmp
and
add
sub
push
fsubs
sbb
push
cmp
xor
and
shll
jb
push
movsb
fimuls
lcall
sbb
iret
stos
insl
push
fnstsw
push
andl
cmp
add
cli
adc
lock
dec
js
notb
iret
int3
in
inc
popf
sahf
mov
push
outsb
mov
nop
dec
imulb
push
subb
push
popf
adc
stos
pop
and
int
cld
dec
or
push
dec
dec
cmpsb
outsl
fisubrl
mov
mov
adc
adc
mov
popf
iret
inc
in
mov
test
loope
and
jae
rcrb
mov
aam
mov
mov
arpl
mov
add
jne
mov
mov
adc
rorb
sub
std
or
fisubrl
lods
xlat
pop
or
pop
or
jmp
popa
cmpsl
pop
and
sti
add
sbb
mulb
lcall
ret
inc
lods
loop
pusha
and
push
rclb
pop
dec
mov
js
loop
and
or
mov
fisubrs
loop
push
aad
into
fnstsw
push
push
es
jge
hlt
pop
mov
mov
jne
xlat
mov
cmp
popa
dec
add
adc
or
les
arpl
aad
xchg
sub
push
xchg
incb
scas
mov
sub
push
pop
cmp
dec
outsl
inc
cmpsb
jne
cmp
jl
xchg
fucomi
ja
sub
lahf
pop
adc
addr16
sub
icebp
enter
das
ds
adc
mull
or
mov
scas
ret
adc
lret
ja
je
mull
cmp
arpl
push
int
cs
or
popa
dec
add
pusha
cli
jp
dec
cwtl
fists
orl
push
dec
push
dec
sbb
or
adc
mov
adc
addl
stc
scas
dec
or
ss
xchg
cltd
jecxz
mov
roll
xchg
dec
xor
push
pop
aad
insb
pop
mov
int3
test
out
frstor
in
jge
cltd
daa
pushf
mov
and
mov
aam
test
cmp
or
pop
rcr
daa
movsl
and
test
push
in
aaa
pop
add
js
in
mov
inc
mov
loopne
nop
leave
cmp
cmp
aaa
popf
or
out
cli
inc
fstp
rol
mov
test
and
push
cmp
push
mov
sbb
and
int
sbb
lock
dec
out
and
lods
test
sub
jg
dec
add
aam
mov
pop
out
leave
shll
icebp
cld
and
sbb
leave
inc
and
lock
mov
pushf
sub
loope
push
fwait
bound
adc
adc
pushf
and
push
sbb
sub
xchg
div
enter
mov
cmp
inc
sub
pop
ficoms
mov
adc
in
out
stos
xchg
fisubl
jb
pop
filds
pop
ficompl
out
jbe
popf
mov
add
mov
pop
movsb
push
sbb
fs
add
lahf
pop
sub
icebp
dec
movsl
iret
cmp
xor
mov
xchg
lea
stos
test
inc
mov
scas
out
loop
pusha
mul
gs
and
xchg
push
xchg
jne
repnz
jno
call
jbe
loope
mov
scas
fisubrs
sub
jge
sbb
adc
in
fistl
bound
mov
fwait
sub
das
xor
xchg
cmp
dec
imul
inc
pop
js
ljmp
mov
lret
lret
sbb
inc
gs
mov
pusha
mov
dec
adc
sbb
and
sub
push
ja
flds
movsl
test
lahf
mov
neg
pop
int3
daa
jle
cmp
pop
pop
mov
mov
mov
nop
cmc
mov
inc
andb
fists
mov
repz
cli
ret
aam
cmp
out
xchg
pusha
out
stc
fisttpll
scas
xchg
mov
dec
mov
pop
daa
enter
daa
inc
jo
sbb
rol
or
lret
jmp
inc
jle
out
outsb
xor
add
enter
scas
sahf
dec
outsb
jno
and
fwait
lahf
xlat
xor
xchg
push
pusha
cld
pusha
mov
pop
hlt
and
push
sub
icebp
xor
inc
cmp
and
fsubrl
or
iret
add
or
vpshufd
jmp
stos
lock
adc
icebp
push
cld
out
popf
mov
push
sahf
xchg
cltd
lea
mov
flds
add
repz
out
clc
mov
cmp
lock
outsb
out
push
testl
lods
xchg
ss
popf
fdivrl
pop
aaa
mov
pushf
dec
inc
inc
leave
mov
imull
mov
scas
mov
into
fstpl
icebp
cmp
out
repnz
fisubl
dec
jle
xor
int
xchg
sub
mov
scas
jo
inc
dec
add
outsl
cmp
mov
jb
imul
adc
add
dec
sbb
sbb
hlt
cltd
xchg
dec
out
sbb
pop
or
jo
mov
lret
fucomp
add
clc
jmp
add
xchg
or
pop
or
jmp
sbb
dec
loopne
dec
outsl
loop
sub
ret
mov
pusha
sub
and
stos
imul
sbb
movsl
inc
sub
insb
loope
ret
rcr
sub
repz
fwait
sub
ss
xor
rorl
push
sbb
xor
jmp
or
in
add
sbb
cmp
or
mov
in
outsl
imul
je
sbb
or
xor
andb
add
popa
pop
xchg
pop
xchg
repz
push
fiaddl
push
and
mov
sub
push
xchg
jecxz
xchg
or
mov
jne
fistpl
leave
or
outsl
cmp
outsb
call
xchg
test
push
daa
into
rclb
dec
mov
jge
mov
addb
add
mov
xor
sub
lods
adc
xor
mov
dec
inc
stc
sbb
mov
ficoms
mov
and
movb
inc
in
fwait
mov
sbb
sbb
mull
inc
test
fdivl
add
mov
mov
stc
jbe
push
push
aaa
or
inc
add
inc
icebp
ss
inc
into
fwait
scas
jnp
fwait
sbb
es
mov
hlt
testl
int
hlt
push
fistpll
mov
mov
aas
sub
dec
sbb
push
dec
cmpsl
jecxz
testl
jl
add
jl
paddd
popf
cmp
push
add
int
jno
push
push
mov
add
ds
das
jg
pop
sbb
jne
ljmp
das
insl
ficomps
dec
jnp
nop
das
ret
out
addr16
xor
js
mov
xor
mov
xchg
lahf
sbb
lret
mov
scas
lods
add
jecxz
ds
movsl
sub
popa
outsl
rorl
mov
cwtl
push
ja
push
cltd
cs
es
jno
testb
hlt
out
jmp
fadds
mov
xchg
call
outsb
xor
pop
pop
dec
mov
push
dec
sub
lret
add
int
mov
cmp
int
mov
das
fmuls
or
stos
ficoms
pop
repz
push
fs
mov
roll
jge
pop
sub
mov
xchg
or
or
jge
mov
cld
arpl
aam
lods
loope
je
xchg
lea
cmp
bound
inc
cmpsb
sub
push
in
rclb
ret
les
jl
pop
int
icebp
and
xchg
inc
mov
sub
push
and
scas
add
jge
faddl
and
and
add
cmpl
push
push
pop
lock
pop
imul
mov
movsl
mov
data16
out
xchg
popa
sti
outsl
cmova
mov
fwait
xor
addr16
lret
sahf
popf
lret
inc
mov
nop
stos
dec
mov
in
mov
xor
imul
jbe
rcl
or
and
push
aaa
mov
and
jecxz
movsb
mov
stos
dec
enter
imull
cltd
mov
in
xor
jnp
leave
js
movb
lret
cli
xor
outsb
xor
neg
gs
sub
sbb
das
pop
and
sub
or
mov
insb
push
out
sti
movsl
xchg
or
sbb
add
add
add
dec
int3
xor
fdivrl
rclb
stc
xor
mov
inc
mov
mov
rcrl
icebp
int
add
test
aad
orl
sbb
sbb
xor
and
mov
test
scas
rcr
imull
lahf
lods
push
mov
sahf
mov
xor
or
xor
jecxz
fadds
cltd
cmpsb
mov
and
adc
pop
mov
inc
pop
movsl
cwtl
mov
add
inc
xor
mov
pop
orb
mov
fcmovne
movsl
into
pop
push
push
mov
aam
rclb
ljmp
add
adc
dec
es
lret
pop
iret
rcrl
push
jle
mov
dec
jns
dec
ljmp
inc
movsl
jbe
push
jne
shll
mov
es
test
nop
rcrb
aad
jo
and
xor
jno
pop
and
sbb
sbb
pop
mov
xchg
sub
mov
out
icebp
in
les
addr16
loop
addr16
sbb
lcall
lahf
mov
add
mov
or
and
cmp
nop
dec
and
loop
loope
jne
cmp
jbe
jl
push
jmp
xchg
ficompl
das
or
cs
sqrtps
jge
sub
cmp
lcall
pop
cld
test
inc
imul
les
or
adc
aaa
cmp
mov
jnp
loopne
add
add
sub
in
inc
inc
fcom
into
mov
mov
shll
sbb
leave
mov
addl
outsl
cmpsb
js
sahf
sbb
pop
xchg
leave
and
les
mov
adc
out
repnz
xchg
aas
dec
jbe
mov
dec
sbb
ret
and
insl
dec
xchg
subl
mov
xchg
loopne
cmpsb
push
lods
sub
mov
jge
scas
push
scas
sub
inc
and
push
dec
mov
adc
or
ret
insb
sub
cmpsl
stos
mov
cli
pop
aas
arpl
inc
jae
pop
ja
jbe
mov
dec
stos
mov
frstor
test
ljmp
cmpb
jne
addr16
sbbb
or
and
daa
xor
ret
aaa
or
hlt
push
fwait
stos
lret
pop
and
ljmp
jne
test
imul
add
sub
dec
cwtl
js
ljmp
lock
notb
jge
mov
mov
shlb
inc
mov
sbb
jge
inc
mov
sbb
inc
in
call
mov
mov
aaa
mov
fsubp
leave
and
xchg
and
scas
ret
xchg
out
shrb
dec
mov
movsb
xchg
mov
and
icebp
mov
mov
scas
pop
pop
cmp
cmpb
cmp
movsl
sbb
movsb
dec
stos
add
lea
fldcw
xchg
pushf
cs
pop
out
mov
pop
fdivrs
sub
jo
inc
in
out
and
mov
xchg
js
jl
jno
clc
arpl
andl
dec
jae
mov
cld
cmp
push
jle
jecxz
fsubs
fcmovu
in
dec
sbb
pushf
out
scas
out
and
mov
pushf
outsl
loope
or
push
xchg
loope
inc
xor
dec
insl
sub
sbb
push
test
jl
jbe
inc
sbb
sbb
lods
xchg
sbb
lods
xchg
jp
and
inc
movsb
test
and
in
clc
adc
xor
xor
scas
cmp
stc
sub
loop
add
das
xchg
mov
pop
sbb
mov
mov
lea
jge
cs
sbbl
mov
mov
call
pushf
pop
cmpsl
jp
jl
dec
extrq
jns
flds
inc
subb
jne
mov
lcall
jl
mov
cmp
pop
sub
sub
mov
shrb
aam
inc
adc
dec
fwait
sbb
lret
into
inc
or
sub
push
jnp
test
push
push
arpl
lcall
inc
enter
rol
xchg
xor
mov
push
push
sub
scas
cmp
add
in
jb
pusha
jnp
ja
pop
jecxz
adc
xor
sub
mov
lock
pop
and
stos
movsb
sub
push
inc
arpl
mov
pusha
nop
xchg
push
and
je
sbb
cmp
push
cmp
push
dec
fidivrl
pop
subl
dec
nop
and
ret
adc
cwtl
mov
inc
sti
jbe
inc
pop
xor
sub
pushf
inc
pop
scas
push
xor
jb
sub
out
mov
shrl
nop
pop
movsl
cltd
scas
stc
cmp
sub
fsubs
jb
ss
inc
popf
mov
adc
mov
dec
imul
mov
mov
pop
jno
test
clc
pop
cmp
in
ljmp
xor
sbb
ds
repz
mov
add
xchg
push
sarb
ljmp
ljmp
loope
jbe
cmp
mov
lret
cmpb
push
mov
pop
mov
fld
scas
imul
dec
popf
mov
out
fldcw
insb
xchg
or
test
xchg
clc
lret
pop
add
xchg
inc
sbb
push
mov
cmp
add
and
scas
cwtl
out
mov
or
arpl
js
stc
push
mov
lods
pop
or
repz
xchg
pop
mov
cltd
push
hlt
int3
pop
out
addr16
mov
sbbb
xor
cltd
sub
arpl
jle
sub
and
fildl
cwtl
pop
lds
xchg
pop
add
insb
mov
out
adc
and
nop
or
dec
fcom
cmpl
mov
mov
push
inc
test
popf
cs
cs
cli
jl
sub
or
out
das
cmp
cmpl
cmpsl
and
add
repnz
sbb
aaa
das
adc
cmp
mov
ja
sti
cli
adc
push
scas
sbb
bnd
out
jae
imul
jle
mov
fsts
pop
xchg
loopne
in
scas
xor
out
and
in
jl
sub
mov
fwait
mov
mov
out
push
mov
insl
std
jmp
cmp
mov
dec
mov
sar
shrb
insb
sub
dec
xlat
add
int
ret
repz
mov
sub
jbe
cmpb
dec
inc
add
std
and
stos
push
mov
push
pcmpeqd
roll
andb
shl
inc
insb
mov
pop
mov
push
ja
adc
dec
inc
sub
adc
jl
mov
je
xor
cltd
adc
into
jg
sbb
push
imul
add
sbb
push
nop
dec
mov
test
push
xor
mov
jle
cmp
add
sahf
mov
jb
fucomp
ficoms
xor
sbb
rcll
out
mov
cld
add
scas
jle
ljmp
xor
sbb
test
vmovaps
dec
mov
std
xor
popf
imul
xorb
xchg
push
or
testb
sbb
adc
lock
fstl
aad
fnstenv
adc
aam
push
ret
lds
imul
xchg
sbb
sbb
inc
jo
adc
cmp
sbb
imul
jle
out
lds
aaa
loope
sbbb
test
popl
mov
adc
mov
jecxz
shl
push
pop
bound
push
in
pop
and
dec
mov
dec
scas
sbbb
shrb
call
or
popa
mov
mov
push
or
lcall
pop
dec
fs
ficoml
std
stos
xchg
sub
lods
cmpb
mov
xlat
dec
mulb
or
adc
mov
mov
out
gs
add
xchg
push
push
mov
adc
cmp
mov
nop
mov
pop
out
mov
sbb
cmp
ret
add
mov
in
add
aas
pop
inc
or
add
push
repz
mov
mov
or
mov
cwtl
cmpsl
xchg
jo
int3
mov
outsl
add
and
mov
aam
jbe
out
mov
testb
xchg
add
cmp
jb
or
mov
and
push
push
ret
cmp
or
or
mov
mov
int
mov
pusha
test
pop
in
int
ja
dec
cmp
scas
shrl
scas
add
and
xchg
leave
outsb
jo
push
mov
bound
mulb
adc
mov
out
adc
pop
xor
fsubrp
sbb
and
push
dec
dec
mov
jo
js
fsubr
or
les
stos
lret
pop
jbe
std
inc
jns
lea
lret
xor
mov
cs
nop
shl
adc
mov
jno
jg
mov
stos
sti
jae
cltd
dec
xor
push
sub
xor
pop
hlt
mov
mov
in
dec
out
movsb
inc
mov
idivb
nop
cmpsb
xchg
bnd
lret
add
outsb
push
xchg
push
loopne
xchg
inc
mov
pop
xor
pop
cmp
scas
mov
jo
hlt
xchg
ret
pop
cli
xlat
in
lock
jns
mov
popa
stos
and
mov
push
fisubrl
cld
adc
idivb
lock
fnstcw
xor
adc
cmp
mov
mov
repnz
adc
sbb
orl
pushf
push
mov
ljmp
cmp
push
arpl
out
xchg
rorl
mov
aas
pop
call
outsl
push
inc
mov
or
xchg
scas
adcb
pop
jb
cld
enter
orb
je
pop
mov
add
cmpl
mov
rcl
ljmp
xchg
out
test
sub
mul
sahf
pop
jb
cs
outsb
fs
js
movsl
ja
dec
dec
push
outsb
adc
sub
insb
adc
imul
rcrl
sub
mov
mov
or
pop
int
sbb
sbb
jle
mov
inc
xchg
pusha
inc
ljmp
jecxz
enter
cli
ret
xchg
inc
mov
sub
lods
mov
jb
popf
scas
pcmpeqd
mov
lock
enter
js
dec
stc
pusha
mov
sub
int
test
pop
sbb
ja
dec
call
xchg
pop
leave
pop
mov
dec
fdiv
hlt
mov
or
jo,pt
sbb
decl
and
repnz
sub
stos
neg
in
inc
pop
and
jl
xor
jge
pop
push
adc
ss
xchg
mov
mov
jge
or
jo
clc
cld
aad
stos
loop
and
outsb
shl
das
adc
shrb
jo
out
mov
sub
aas
ds
jp
or
test
jge
pop
arpl
in
push
and
jae
dec
fs
loope
orb
scas
testb
jbe
push
mov
shrl
cmpsb
mov
sub
jnp
clc
mov
xchg
repnz
in
mov
fcmovb
push
and
data16
sbb
xchg
insl
xchg
sbb
fsubrs
mov
cmp
and
idiv
mov
or
fmull
stos
cmpsl
scas
sbb
pop
std
pop
mov
inc
inc
sub
popf
sub
iret
sub
lds
fisubrl
imul
push
adc
adcb
dec
sbb
push
addl
pop
js
mov
popf
scas
test
imul
aaa
outsl
dec
ljmp
stos
sbb
and
push
jo
pop
jge
js
or
lret
push
mov
movsl
mov
inc
mov
out
sbb
add
adc
xchg
inc
dec
insl
les
ljmp
pop
jno
pop
xchg
xchg
inc
lock
popf
adc
sub
lret
inc
push
or
xor
push
xchg
out
dec
sbb
adc
fsubp
bound
adc
push
test
nop
add
stc
stos
mov
xor
dec
sbb
sub
xchg
in
jnp
stos
mov
add
add
psrlw
mov
jecxz
test
jb
sti
aaa
inc
into
outsl
add
loope
adc
mov
sub
inc
xor
sahf
daa
add
cmp
mov
push
clc
pop
cmc
jp
inc
fldt
adc
push
push
or
sahf
sbb
cmpsl
dec
adc
xor
pushf
aaa
sub
pop
cltd
mov
icebp
push
adc
aaa
scas
add
mov
xchg
dec
jmp
loope
jbe
jg
sub
push
shll
mov
push
push
addl
mov
and
cmp
and
je
sub
jnp
sbbb
leave
pusha
or
sbb
sbb
sti
leave
ss
mov
in
mov
xchg
ret
cltd
in
lds
mov
mov
out
cmpsb
mov
sub
fidivl
inc
int
loope
mov
push
and
mov
iret
cmp
sub
mov
mov
push
jbe
iret
mov
ret
repz
fstpt
jle
fistps
icebp
testl
inc
test
hlt
popf
neg
pop
mov
fwait
mov
or
mov
sahf
faddl
fldl
fdivrs
outsb
hlt
ret
dec
add
mov
jp
repnz
in
add
test
mov
btr
bnd
pop
in
iret
icebp
aas
sbb
sbb
popf
pop
mov
js
add
push
popa
ret
sahf
add
cmp
or
push
sub
fstl
adc
push
or
iret
cmp
adc
sub
testl
jp
pop
es
mov
mov
lret
ud1
in
repnz
les
mov
testb
test
pop
adc
shr
pop
cld
mov
cmpsb
out
jp
pop
sti
fdivs
push
xchg
imul
xchg
mov
shl
dec
adc
mov
push
imul
pop
and
mov
ljmp
sbb
ds
jl
out
aad
ja
mov
dec
enter
mov
sub
rorb
aad
aam
or
outsb
out
icebp
jae
adcb
cwtl
sub
loope
or
push
inc
jmp
movsb
pop
mov
ss
pop
jnp
repz
fidivl
into
adc
jge
jae
ficoml
cs
dec
lret
xchg
mov
jmp
cmp
push
mov
xor
push
jne
cmp
push
fdivr
cmc
xchg
loopne
pushf
dec
rcll
lret
inc
shll
in
les
adc
inc
jg
cltd
xor
push
push
xchg
mov
adc
adc
or
mov
out
in
adc
jg
adc
jo
shrl
or
cmpsb
push
imul
rorl
fldenv
fs
call
lods
adc
jno
mov
cmp
push
bound
sbb
jp
or
xor
sbbb
and
scas
in
pop
dec
ret
std
mov
icebp
icebp
inc
xor
loope
inc
or
xor
and
adc
or
mov
push
stc
jmp
fldcw
fcmovu
mov
sbbl
mov
ss
stos
add
xor
es
jge
jmp
push
mov
sbb
test
xchg
inc
movsl
stc
xchg
loope
test
jae
push
mov
rcrl
insl
aaa
sub
pusha
sarl
addb
scas
pop
add
add
and
dec
and
push
cmpsb
nop
xchg
movsl
xor
cld
dec
imul
shrl
mov
insl
sub
int
fs
je
push
repz
outsl
mov
icebp
mov
sub
adc
pop
and
imul
sub
das
sbb
mov
into
cmpsb
add
call
cmp
jae
shll
inc
ret
mov
lea
and
jne
call
movsl
les
loop
scas
out
out
test
jns
or
pop
aad
and
xchg
test
jno
mov
shlb
mov
jno
into
adc
mov
insl
or
push
addb
sub
jne
enter
push
divl
cmp
fidivrl
int3
cli
outsb
mov
test
mov
add
cmp
xchg
cmpsb
sbb
ret
mov
push
sbb
push
and
icebp
subb
pop
pop
add
add
std
daa
cmpsb
push
js
cmp
lds
addr16
sti
adc
call
mov
mov
adc
test
ret
push
lahf
popa
jae
mov
mov
sarb
sub
fistpl
sbb
pop
mov
pushf
add
sbb
fdiv
fwait
pop
sub
push
testb
fisttps
cmp
mov
jl
rcll
ret
sub
ss
js
pop
dec
dec
add
lret
inc
mov
jle
cmc
dec
addb
mov
sbb
xor
cmp
jge
mov
insb
cmp
sub
inc
das
xor
mov
das
add
push
cmc
bound
adc
pop
paddw
adc
push
fistpll
adc
inc
mov
popf
ds
dec
jp
stos
adc
sbb
sub
notb
fiadds
out
mov
mov
cs
push
gs
pop
push
inc
jmp
pop
pop
mov
fdivrl
sti
addr16
xor
sbb
pop
out
pop
inc
leave
pop
divl
jge
lods
mov
leave
jo
push
inc
mov
movsl
adc
push
and
add
out
sti
icebp
pop
mov
mov
jmp
mov
xchg
daa
push
adc
inc
enter
inc
xchg
gs
sahf
add
jl
sbb
or
lcall
out
aam
int3
mov
adc
pop
cmp
xchg
decl
pop
adc
cmpsb
mov
xchg
pushf
add
hlt
test
inc
aaa
sub
cmp
jge
dec
mov
push
dec
sbb
sub
outsb
dec
adc
dec
and
pop
jl
fs
lret
mov
add
sub
mov
flds
or
insb
shll
test
mov
fiaddl
pop
add
adc
dec
bound
jmp
adcl
aam
imul
imul
fisttpl
ja
or
fisubrs
xor
dec
sub
aas
lods
inc
test
pop
inc
int3
pop
or
popa
push
jg
int3
mov
sub
insb
dec
and
mov
aad
dec
add
sarl
or
jnp
cmpsl
es
in
jecxz
mov
adcl
mov
andl
cmp
inc
sahf
in
sub
divl
sbb
sar
inc
push
push
loopne
or
in
mov
inc
add
fs
cmp
in
cmp
jmp
inc
ret
push
andl
call
dec
xchg
imull
adc
xchg
and
movsb
aad
dec
daa
lcall
or
xor
dec
stc
xchg
lret
test
xor
daa
fsubl
or
sub
mov
imul
sbb
enter
fwait
inc
pop
movsl
jne
out
lret
pop
xor
cmp
jnp
sub
or
lods
gs
push
adc
push
fists
test
pop
and
push
jo
mov
mov
jnp
mov
into
xchg
repz
aaa
cmpl
xor
inc
mov
xchg
xchg
xchg
pop
orb
jg
stos
mov
pxor
mov
lret
test
loopne
fisttpl
adc
pop
adc
iret
pushf
xchg
das
lahf
dec
or
cmp
cmpsb
cmpsl
adc
aam
pop
mov
test
jmp
scas
aas
cmp
les
andb
dec
push
push
adc
jp
mov
bound
cmovnp
jne
pop
push
imul
push
sbb
dec
mov
push
mov
popl
pop
sbb
inc
hlt
sub
ret
out
daa
insb
test
mov
imul
add
add
cmp
sub
xor
or
mov
lret
arpl
lock
inc
addr16
push
xchg
stos
test
and
xor
repz
push
inc
xor
cmpb
lcall
pop
icebp
xchg
jl
xchg
jge
push
pushw
out
dec
sub
adc
out
ret
or
test
push
xor
inc
outsb
jb
dec
inc
cmpsb
lret
xor
stc
pushf
std
push
int3
sbb
cmp
mov
jnp
cmpsb
xor
adc
mov
popf
add
dec
cld
push
lcall
fmuls
xor
jns
dec
adc
idivl
cmp
jle
cs
mov
push
or
aad
and
sbb
dec
cli
pop
fwait
pusha
adc
adc
mov
in
adc
imul
aam
push
cs
addr16
imul
mov
jecxz
sub
or
pusha
subl
movsb
inc
iret
jne
mov
mov
adc
pop
enter
pop
arpl
inc
ret
in
cmp
sub
jno
fldcw
fwait
cwtl
sub
mov
jb
xlat
sbb
sub
push
push
out
cltd
xchg
lods
inc
popa
mov
mov
out
mull
loope
jg
xor
test
cld
dec
sbb
cmp
dec
arpl
or
pushw
insb
xorb
test
jg
jb
sti
arpl
inc
xor
add
pop
add
aad
mov
mov
sub
pop
cltd
sub
push
or
aam
int3
rorl
fs
pop
popf
mov
stos
pusha
xor
adc
jp
movsl
inc
or
mov
enter
and
pop
push
pop
add
and
push
mov
cmp
insl
mov
adc
or
lods
out
dec
mov
lea
xchg
idiv
fildl
leave
mov
mov
xlat
ficoms
lcall
jg
pop
sub
lahf
add
lahf
inc
hlt
icebp
mov
mov
ja
mov
popf
test
daa
stos
xchg
inc
mov
std
in
mov
jae
dec
rcrl
je
out
push
mov
in
test
adc
insl
xorb
ljmp
sbb
jge
daa
out
loope
push
fs
pop
xchg
mov
xchg
push
outsl
jecxz
inc
or
fsubs
sahf
mov
cmp
shl
add
mov
aas
sub
mov
cmpb
or
sub
fbstp
jge
adc
xor
aas
dec
stos
scas
cmpsb
xor
imul
dec
dec
xor
cmp
inc
aaa
cmp
xchg
insl
jns
xchg
lea
adc
mov
push
mov
mov
jg
movsb
xchg
fiaddl
inc
push
lds
jo
jg
push
and
or
pop
cmp
add
aaa
lock
lret
xor
mov
sub
lcall
into
push
dec
ja
hlt
xchg
repnz
movb
push
clc
scas
jbe
adcl
jnp
pop
fstpl
dec
ljmp
xor
insb
pop
inc
jge
push
mov
dec
cmp
mov
sbb
or
aaa
in
daa
xor
mov
pop
xor
std
mov
scas
jle
push
mov
dec
dec
cmp
dec
int3
sbb
int
pop
inc
int
and
fs
int
inc
push
scas
data16
pop
xor
adc
imul
stos
pop
mov
push
mov
cmp
in
shl
gs
inc
sbb
dec
cmp
cmc
jo
mov
test
shll
dec
push
clc
outsl
inc
lods
rclb
inc
jl
ja
cmc
adc
popl
insl
sbb
bound
std
push
mov
in
jge
push
xchg
sbb
add
inc
mov
insb
mov
cld
orb
mov
int
ds
or
test
pop
lds
mov
stos
inc
cmp
addl
jmp
fadds
inc
subb
xchg
shrl
add
outsb
es
mov
push
and
inc
jg
dec
jnp
mov
dec
test
movsl
dec
mov
lahf
sub
sbb
jl
es
out
add
pop
gs
cli
xchg
jnp
push
hlt
out
imul
and
inc
cmc
shlb
dec
mov
ss
sbb
add
dec
add
or
rcrl
out
xlat
pop
cwtl
sbb
push
cmpsl
repnz
bound
mov
rorl
lock
mov
mov
fs
in
aaa
shr
lret
movsl
inc
cmp
mov
repnz
dec
mov
xchg
pop
test
or
lret
shlb
in
pushf
push
stos
adc
jmp
pop
xor
sbb
jno
sbb
xchg
sbb
loop
ret
push
mov
jb
dec
pop
hlt
ljmp
pushf
imul
or
adc
mov
mov
imul
pop
sti
adcb
into
hlt
push
and
js
cmc
lds
scas
or
pop
pop
loop
in
ds
mov
mov
addb
stc
jecxz
jo
and
pcmpgtd
shrb
cld
jp
lods
cmc
xor
scas
loopne
adc
arpl
xchg
adcl
sub
or
das
push
push
repz
mov
fcomps
jge
aad
movsl
js
inc
lods
in
pop
int3
pop
cmp
mov
test
jl
xchg
add
xor
sbb
dec
sub
iret
ret
push
nop
jbe
inc
enter
xchg
sbb
test
sti
pop
push
jne
sub
or
in
pop
scas
dec
fimuls
shr
jb
xor
divl
fdivrl
xchg
ja
add
inc
mov
cmp
jb
jmp
arpl
and
ret
or
test
sahf
data16
rolb
lods
out
xchg
jae
add
out
xlat
ret
loope
insb
or
inc
push
dec
cmp
shll
mov
sbb
les
or
ljmp
ss
sti
lds
xlat
sub
add
notl
mov
jle
fldl
mov
iret
popf
movl
add
dec
add
jb
stos
mov
mov
mov
sub
test
movsb
fsubs
push
cs
sahf
aaa
fimuls
lret
je
aaa
sbb
pop
repz
jae
shlb
jno
sub
adc
cmp
loopne
cmp
cmpsl
scas
cmp
sbb
loop
mov
out
mov
push
mov
push
or
pop
or
enter
arpl
and
adc
in
das
ss
js
in
mov
jne
and
daa
xchg
sbb
stos
lods
jge
push
jmp
loop,pn
cli
xchg
cld
xchg
movsl
cmc
and
arpl
in
into
inc
cmc
cmp
into
std
push
dec
mov
int3
xor
mov
xor
adcb
call
cmc
out
popf
push
add
adc
xchg
std
lock
pop
push
bound
dec
xchg
push
lcall
xchg
inc
stos
or
scas
into
xchg
cmpsl
sub
inc
imul
push
fimuls
pop
popf
push
fldcw
int
aam
into
pusha
jmp
fldenv
mov
dec
push
cs
mov
adc
stc
dec
add
pop
arpl
insl
add
pop
rclb
aas
cmp
outsb
hlt
mov
mov
loop
mov
pop
movsl
mov
push
mov
test
cli
in
outsl
dec
rcrl
or
in
and
testb
fsubr
int3
lahf
cmp
shrl
call
lret
inc
mov
insb
or
push
pop
jne
ds
inc
dec
adc
adc
int3
jle
std
ss
push
sub
dec
pop
mov
dec
xor
xor
lcall
daa
mov
stc
jo
add
add
addr16
inc
fsts
lock
pop
and
mov
lea
lock
mov
stc
pop
mull
je
out
inc
or
cmp
outsb
stc
in
dec
mov
scas
mov
jle
imul
out
imul
mov
test
inc
push
neg
jne
mov
xchg
insb
test
xchg
inc
loopne
sbb
rcl
ret
lret
sbb
faddl
scas
xchg
xor
stos
out
pop
inc
pop
ja
mov
cwtl
fidivs
mov
and
push
or
mov
mov
mov
push
mov
inc
dec
sbb
fmuls
repnz
or
arpl
cwtl
xchg
js
inc
testl
adc
add
cmp
jp
in
pop
sub
dec
mov
sub
outsl
fsubrs
sub
adc
scas
xchg
jmp
cmp
mov
ret
sahf
sti
xchg
pop
imul
pop
inc
out
sahf
rclb
std
aam
adc
jb
jb
outsb
sbb
outsb
out
in
js
arpl
xchg
xchg
and
add
dec
mov
add
dec
lahf
movsb
test
and
shl
dec
out
mov
fists
inc
push
icebp
lods
and
jne
mov
xor
mov
std
jb
mov
jne
jne
movsb
or
mov
mov
fcmovb
push
scas
fldl
xor
cmp
jecxz
shll
cmpsb
hlt
int3
mov
push
or
jbe
sti
pop
sub
aas
jns
lret
inc
in
inc
out
fwait
ret
dec
push
inc
mov
mov
jb
sbb
push
pop
les
repz
or
repnz
mov
std
js
push
mov
mull
fnstenv
dec
mov
cli
ljmp
ret
imul
pop
inc
inc
call
in
and
mov
iret
dec
pop
imul
ss
add
mov
add
inc
dec
in
stos
rorb
into
ret
scas
mov
mov
mov
sahf
xchg
inc
pushf
or
mov
cmp
mov
jecxz
mov
xchg
jns
cmovo
adc
adc
fwait
js
xlat
insb
jns
sti
ret
pop
cmp
pop
test
ja
push
sti
jmp
or
cmp
in
mov
sub
mov
fldcw
add
adc
push
inc
push
cmpl
sub
adc
jae
testb
int
orb
or
sbb
jo
mov
test
sarl
jmp
mov
loop
aas
mov
mov
ret
push
cmpsb
in
daa
testb
outsl
repnz
fs
in
mov
jb
aaa
adc
adc
imul
outsb
push
mov
jns
into
pop
mov
and
dec
mov
push
sbb
and
lds
sbb
xchg
lock
lcall
ss
dec
jge
push
mov
popa
call
insl
xor
sbb
lods
xchg
bnd
add
cli
mov
and
mov
pop
jg
ja
divl
mov
cmpsb
orb
gs
sbb
inc
inc
aad
jae
jp
mov
cld
mov
push
add
xchg
add
xchg
cmp
in
aaa
mov
cmpsb
sbb
sbb
sti
mov
mov
mov
and
mov
inc
loop
bound
adc
loop
movsb
push
jbe
mov
cmpsl
hlt
jmp
jbe
lods
push
pop
mov
cwtl
fcomp
dec
jno
mov
enter
cmp
into
cli
adc
adc
mov
dec
xchg
lds
test
add
aad
rcrl
mov
test
adcl
enter
mov
inc
imul
mov
hlt
or
xor
fdivs
out
add
imul
movsl
sub
cs
inc
push
cli
or
repz
jmp
cld
pop
bound
push
push
and
inc
in
cmp
incl
out
test
cmp
xor
rolb
arpl
rcrl
mov
sbb
push
movsl
mov
sahf
lret
rcrb
pusha
les
xchg
jecxz
jmp
hlt
andl
inc
xchg
sbb
rorb
jo
es
in
adc
jno
or
nop
inc
int3
cmpsb
jmp
decb
cmp
stc
sbb
test
sbb
push
xor
fsubl
movsb
mov
imull
jae
ret
lcall
sub
add
or
mov
shld
leave
add
imul
add
repz
cmp
lods
subb
add
and
sbb
les
sub
cmpsb
aas
test
inc
aad
ss
jmp
lea
stos
aam
test
orb
adc
mov
sbb
push
lret
je
icebp
xlat
sbb
cwtl
or
xor
or
ds
pop
jnp
std
mov
mov
rcrb
loope
scas
xchg
pop
mov
andb
fildl
push
ss
jecxz
out
hlt
dec
test
cmc
dec
pop
cmp
pop
insb
mov
aam
dec
shrl
ss
cmp
sbb
call
inc
lea
dec
inc
jecxz
xchg
jae
jb
daa
mov
fidivrs
mov
mov
pop
inc
pop
sbb
mov
pop
sub
xchg
aam
cmp
mov
jmp
inc
roll
cmpsb
mov
jb
enter
mov
stos
sbb
and
int
hlt
or
jecxz
adc
pop
sub
add
jle
mov
mov
push
cmpsl
sti
loop
and
ror
lcall
mov
xor
add
jle
sti
std
mov
pop
mov
xchg
vandnps
adc
out
mov
mov
cltd
dec
adc
xchg
inc
dec
lods
stos
or
testl
sbb
push
movsl
jp
jnp
mov
sub
mov
insb
or
addr16
sbb
fwait
xor
int
jge
mov
or
jnp
imul
imul
add
inc
loopne
xchg
inc
ret
cmpsl
cli
jl
rorl
cltd
cmpsl
clc
jle
clc
lret
cmc
int
inc
fwait
sbb
xchg
xchg
push
xor
inc
push
push
or
lahf
push
push
mov
push
pop
mov
mov
in
rolb
fwait
add
test
inc
pusha
jg
call
and
pop
pushf
inc
xchg
xor
insb
adc
mov
lock
std
ffree
dec
adc
frstor
xchg
mov
popf
in
jg
shrb
movsl
ja
inc
or
in
sub
xchg
push
pusha
fwait
iret
pop
and
or
jmp
lret
movsl
sbb
out
je
xchg
ds
lret
cmp
pop
dec
mov
push
clc
sti
or
dec
cs
lahf
ss
stc
scas
jg
pop
sub
mov
sti
xor
mov
pusha
or
cmp
hlt
xchg
sbb
aas
xor
daa
aas
sbb
and
adcb
repnz
inc
outsl
mov
mov
mov
push
rcll
mov
dec
mov
cmpsb
ret
ret
and
jp
roll
icebp
and
push
rcr
outsl
rclb
fs
stos
sub
mov
and
clc
fwait
mov
inc
adc
sbb
inc
mov
mov
lahf
outsl
or
int3
jl
je
cmc
sub
or
inc
mov
cmpsb
dec
je
ljmp
cmc
lods
popa
js
inc
es
cltd
ljmp
fs
dec
push
pop
es
lock
sarl
call
test
scas
mov
jp
sbb
and
inc
lods
push
pop
int
js
xchg
decb
and
ljmp
sub
lock
adcb
sbb
jmp
inc
xchg
lea
cmpsb
mov
aam
sub
fstl
cli
push
imul
xchg
mov
mov
mov
popf
push
js
jg
ss
outsb
push
sub
imul
loop
lret
nop
add
iret
rcrb
mov
sbb
mov
out
cltd
jae
mov
stos
and
divb
cs
dec
jne
sti
scas
inc
lds
enter
sbb
inc
sub
fstps
xchg
or
loopne
mov
xchg
aas
push
push
push
int3
call
pop
std
xor
lahf
setns
aad
test
mov
pusha
mov
arpl
ret
push
stos
int3
fldenv
jg
hlt
push
imul
inc
pop
fwait
cmp
xorl
inc
jmp
jle
shl
or
add
xchg
add
in
adc
iret
push
and
cmp
test
out
sbb
sbb
lods
jmp
movsb
scas
xor
mov
outsl
outsb
sbb
aas
xor
cwtl
adc
or
ror
fs
outsb
pop
dec
jecxz
jle
lods
xchg
popa
fs
xchg
sub
insl
push
cmpsl
inc
mov
and
pop
insb
xlat
ss
dec
add
dec
jmp
mov
or
mov
mov
mov
popa
leave
hlt
es
add
or
mov
jo
push
push
testl
std
jns
sbb
jne
daa
pop
rcll
push
ljmp
lea
and
dec
jb
cltd
and
jne
mov
dec
scas
lret
ja
adc
jmp
pop
cld
mov
fwait
pop
enter
xchg
jmp
cmc
leave
jnp
out
in
aam
cmp
mov
in
in
in
arpl
inc
push
mov
notb
adc
xor
jle
out
cmp
jae
stc
movsl
stc
pop
xor
and
pop
mov
mov
scas
loope
jno
adc
push
hlt
fistpl
movsb
xor
dec
in
mov
mulb
xchg
iret
jecxz
stc
jecxz
and
imul
idiv
enter
loope
xchg
or
inc
mov
pop
repnz
cmp
push
push
xor
ljmp
add
xor
jle
mov
and
cmpb
ror
pop
xchg
shlb
sarb
sbb
push
les
test
xchg
aaa
and
mov
ficoms
mov
addl
push
push
imulb
hlt
sti
fcomps
mov
mov
lret
xlat
into
jns
adc
in
sarl
imul
stos
add
aas
fs
js
lock
sbb
movsl
cmp
lds
je
ds
jbe
into
inc
jge
adc
stos
cmc
and
fs
xor
add
sub
mov
data16
add
dec
std
imul
pop
sub
mov
add
loop
je
loopne
pop
mov
insl
sub
movsl
adc
cmpsb
sub
xor
js
hlt
and
in
fstps
mov
inc
in
clc
inc
out
add
mov
mov
daa
xchg
push
jge
rcll
inc
xchg
jbe
xchg
xchg
out
push
mov
das
adc
popa
xchg
xlat
add
cmp
add
push
shr
push
cmpsb
xchg
lcall
xor
cmp
lock
hlt
fildl
pop
lods
outsb
and
mov
in
inc
mov
pushf
rol
mov
cmc
push
mov
sub
rcrl
out
sub
dec
test
jg
fistps
sub
jb
in
mov
xchg
cmovbe
scas
pop
add
cmc
popa
insb
pop
mov
clc
and
jmp
push
fdivrp
pushf
or
xchg
mov
add
in
or
push
ret
sbb
clc
dec
call
leave
mov
mov
movsl
cmpxchg
and
add
jg
leave
xchg
shrl
mov
popa
mov
lock
pop
arpl
movsl
nop
jg
xchg
jecxz
pop
sbb
pop
mov
loop
xchg
push
and
jmp
test
or
mov
sti
out
pop
outsb
pop
xchg
psubusb
jbe
push
jnp
inc
std
addr16
insl
inc
mov
mov
jns
lock
clc
pop
test
sub
fldl
mov
inc
add
xchg
and
movsl
test
inc
insb
mov
bound
cmp
stos
popa
push
fs
insl
inc
mov
lret
ret
mov
xchg
lahf
dec
pop
add
mov
jp
add
mov
cld
out
sub
cmc
data16
subl
test
adc
mov
outsb
add
jp
mov
rcll
les
stc
lcall
pop
dec
xchg
lea
arpl
mov
sub
or
pop
mov
sbb
lcall
jmp
insb
sbb
jo
xchg
rorb
or
push
push
imul
sbb
test
lret
jmp
mov
dec
dec
int3
dec
and
out
outsb
or
int
cwtl
mov
cmp
mov
stc
fwait
mov
mov
aaa
fildl
or
push
fs
in
jns
sub
dec
mov
and
jmp
jmp
inc
cmp
jne
push
inc
jae
test
or
mov
add
jp
sbb
imul
jo
gs
or
mov
push
pushf
jbe
cmpsb
sbb
nop
mov
push
sahf
jno
or
enter
inc
fcmovu
mov
adc
or
loopne
loopne
leave
call
insb
cmpsl
test
jmp
adc
lcall
fcoml
jle
mov
ds
fdivl
enter
hlt
mov
test
xchg
or
jo
ret
outsl
mov
sbb
mov
cmp
push
push
jb
repz
mov
inc
test
jb
push
jno
mov
fstl
cmpsl
sub
notl
mov
out
push
lea
ds
aaa
adc
xchg
daa
mov
add
and
fnsave
test
jbe
outsl
stos
ljmp
xchg
arpl
lods
xor
inc
ss
sbb
ss
push
sub
mov
dec
cmp
ret
aam
jb
sbb
sti
cs
outsl
out
arpl
fnstsw
outsl
add
pop
mov
in
fsubrl
imul
jl
dec
pop
aam
mov
insb
lahf
pop
jne
cs
adc
pusha
sub
sub
daa
sbb
push
mov
pop
ss
push
xlat
outsl
iret
enter
lock
rclb
cmp
pushf
mov
cmpsb
dec
cmp
dec
mov
lds
mov
add
inc
out
push
xor
testb
lret
stos
sub
lea
push
and
jg
pop
scas
xchg
std
jno
out
adc
fimull
lret
xorl
add
or
cmpsl
xor
adc
cmp
adc
movsl
mov
sbb
or
jl
sti
dec
out
shll
cmp
int
push
or
leave
add
clc
mov
aam
fwait
jg
fidivrl
flds
jle
dec
jle
or
inc
shrl
adc
scas
push
cmp
dec
mov
pop
push
sub
popf
lods
nop
cwtl
loope
loop
lods
xor
pop
adc
out
cld
mov
adc
inc
daa
xchg
mov
frstor
sarl
xchg
leave
cmc
test
int
insb
cltd
insl
sub
mov
cmpsl
into
mov
xchg
sub
mov
je
aam
cltd
std
cli
mov
lds
add
add
outsl
rcrl
push
inc
sub
mov
in
test
mov
mov
add
movsl
dec
fdivs
pop
movsw
mov
dec
push
jo
sbb
shll
les
pop
mov
pop
inc
in
and
and
push
ret
imul
xchg
cmpsl
jnp
push
lcall
and
ds
lcall
mov
jle
int3
scas
shl
daa
and
daa
and
test
lods
iret
add
lock
int3
inc
je
js
mov
fcmovu
mov
ss
les
imul
daa
shl
xchg
daa
idivb
movsb
jb
inc
adc
jl
idiv
aad
into
mov
mov
fimull
mov
xchg
mov
inc
xchg
push
test
data16
std
dec
xchg
adc
aad
pop
mov
xchg
xchg
jecxz
pop
in
push
push
mov
rcll
popf
mov
pushf
push
jbe
repz
mov
cmp
test
test
stos
cwtl
and
add
rcll
cmp
adc
stc
aas
dec
add
je
adc
lds
xor
shl
jmp
loop
pushf
popf
cmp
pop
pop
cmp
inc
daa
xor
mov
adcb
jp
adc
fs
add
adc
clc
insl
pop
sub
arpl
mov
out
daa
mov
mov
pop
test
fstps
pusha
fwait
pop
pop
pop
add
sbbb
pop
cmpl
push
cmc
sbb
cmp
mov
or
hlt
popf
out
or
lret
mov
shrl
and
mov
data16
out
add
sbb
xchg
cmp
push
test
inc
xchg
jl
or
in
sti
adc
ret
popa
push
xor
fisttpll
paddusw
sbb
iret
and
mov
mov
lods
ror
pop
out
insb
es
sbb
jae
xchg
mov
inc
lea
sub
add
and
and
inc
and
jl
add
mov
lcall
hlt
sbb
test
rcll
sbb
enter
je
adc
jl
sti
mov
xchg
daa
cwtl
jl
cmp
push
pop
adc
sar
mov
mov
in
mov
cmpsb
test
out
das
mov
cmp
inc
gs
outsl
adc
addr16
hlt
xor
cmp
lahf
inc
loop
xor
scas
stc
fcmovu
ja
cwtl
pusha
cs
leave
jge
cwtl
cmp
adc
lock
push
pop
testb
sbb
jmp
faddl
es
jne
mov
push
dec
nop
jecxz
ds
fldenv
jl
es
xchg
adc
xorb
mov
nop
push
or
dec
adc
pusha
divb
cmp
mov
jmp
mov
dec
ficoml
imul
adc
lock
and
pcmpeqw
sub
rcl
xchg
xchg
mov
push
lea
lcall
lcall
das
ret
inc
addr16
cmp
xor
loopne
addr16
sbb
jge
cwtl
sbb
mov
jmp
xchg
push
into
lcall
cld
and
lret
lcall
xor
push
xlat
pop
xchg
lds
cmp
sbb
scas
imul
adc
push
xchg
lock
insb
mov
fidivl
mov
imul
and
push
lret
in
fldenv
dec
icebp
push
pop
mov
mov
or
xor
dec
adc
aas
repnz
dec
in
repnz
inc
xchg
aaa
cs
push
dec
xchg
in
icebp
icebp
sbb
jl
and
mov
sbb
jno
or
add
clc
gs
out
pusha
fstpt
call
sarb
mov
jge
xchg
sahf
mov
mov
xchg
sbb
sbb
and
pop
int
mov
sti
lcall
pop
xchg
enter
test
sbb
xor
jno
lret
sbb
cmp
jmp
inc
dec
push
les
mov
inc
js
outsl
arpl
and
negl
inc
or
adc
add
paddb
push
ds
or
lods
clc
mov
sbb
rdpmc
jb
movsb
or
subl
cmpsb
fnstcw
add
xchg
ja
int
sub
add
mov
cli
push
sub
sub
cs
test
ret
inc
out
sbb
repz
imulb
add
hlt
inc
fs
popf
movsl
cmp
xchg
cli
aad
adc
pop
out
lock
xchg
inc
lcall
jl
or
test
repnz
mov
dec
inc
push
xchg
fdivrs
or
sbb
rcl
sbb
test
dec
ja
das
xor
mov
xor
stos
into
mov
mov
jnp
push
cmp
into
mov
xor
or
fdivl
mov
pop
cli
jnp
int3
and
jle,pn
out
fldt
dec
adc
cwtl
mov
inc
sbb
sub
push
insl
rcrb
aas
inc
xchg
or
pop
pop
scas
aad
mov
rorb
pop
cmp
sub
jg
xlat
adc
or
push
mov
inc
pop
ljmp
sub
testl
cld
sahf
and
dec
cli
cmp
into
paddd
movsl
les
popf
call
nop
push
xchg
in
xor
mov
jb
inc
and
xchg
push
mov
scas
sahf
adc
int
jmp
incl
shll
xor
mov
sbb
addr16
lcall
pop
mov
xchg
aaa
mov
sbb
cwtl
xchg
jecxz
orl
nop
in
shlb
lock
pop
out
cli
mov
out
insl
pop
rclb
mov
cltd
shll
shr
push
mov
popl
adc
repz
leave
stos
lds
enter
adc
xchg
data16
pop
sub
fwait
ja
xchg
icebp
mov
rol
sub
popf
sub
or
std
insb
aaa
rol
jne
pop
ret
or
cmpsb
mov
loop
std
push
ror
ljmp
mov
lcall
jno
or
jns
jg
xor
sbb
mov
inc
mov
ficoml
rcrb
xlat
mov
sub
adc
stos
scas
push
sub
mov
inc
out
iret
in
or
inc
adc
shrl
imul
jo
add
dec
fnstsw
ds
dec
jne
js
out
shll
cmp
scas
jb
fisttps
pop
mov
sub
rol
fs
mulb
push
fwait
std
inc
ret
outsb
and
mov
push
push
inc
sub
jl
mov
repnz
cmpsl
mov
sub
das
jbe
lods
or
dec
in
push
repnz
mov
int
ret
add
adc
mov
pop
and
test
out
decb
xchg
dec
add
xchg
inc
mov
push
ds
loope
test
pop
sub
pop
xchg
cltd
ss
fcmove
andb
sbbl
das
ror
nop
mov
cli
dec
cmc
rolb
aaa
pop
shlb
dec
and
adc
mov
je,pn
jg
push
je
push
jecxz
xor
adc
scas
sar
mov
adc
lds
repnz
push
rcrb
sti
pop
dec
sub
jo
jmp
add
ret
add
mov
jne
jo
out
ret
les
jg
jle
sbb
inc
pop
cmpl
ljmp
out
cmc
inc
aaa
ljmp
pop
daa
bound
stos
jbe
pop
pop
rclb
dec
jae
sbb
pop
adc
ret
mov
int
pop
push
lock
mov
and
jp
xor
xchg
lret
cmp
dec
leave
mov
mov
lods
movsl
jmp
sub
cmpsb
out
mov
sub
mov
loopne
jp
aaa
mov
jne
xchg
cmp
out
ljmp
aas
inc
subb
sub
mov
fs
mov
lahf
incb
and
daa
dec
cmc
xor
or
mov
inc
out
bound
pop
rorl
mov
das
push
gs
jo
or
sbb
xchg
gs
rcrb
and
xor
decl
mov
clc
or
push
mov
lcall
daa
or
xchg
mov
jne
cmp
adc
sub
repnz
xor
mov
aas
movsb
scas
jnp
push
jb
scas
popf
jp
push
dec
jns
cmp
pop
repz
cmp
mov
sbb
cmp
pop
and
mov
shr
sub
cmpsb
arpl
test
loope
repnz
mov
mov
lcall
sahf
adc
dec
fmull
adc
or
inc
push
fcompl
call
test
imulb
les
add
rcrl
jns
adcl
push
loopne
inc
mov
add
gs
sti
int
pushf
lret
push
test
cmp
divl
jne
stos
nop
ss
jle
pop
inc
sub
arpl
jo
icebp
mov
push
cvtps2pi
test
fisttpl
mov
jp
pop
out
mov
fstl
add
xchg
call
fwait
cmpsl
dec
inc
dec
xchg
sub
cmp
inc
mov
pop
sbb
int3
and
cld
aaa
gs
repnz
stc
sbb
hlt
std
shl
sbb
sbb
pop
ret
popa
mov
push
and
idivl
aaa
dec
dec
pop
ret
adc
xor
not
stos
sub
xchg
sti
insb
xor
outsl
or
inc
push
imulb
xor
push
inc
mov
hlt
xchg
adc
out
or
fs
mov
repnz
pop
push
xchg
sti
xchg
adcl
rcrb
jge
push
or
mov
les
cmpsb
inc
dec
mov
jne
cmp
shlb
pop
mov
and
jp
pop
mov
sbb
and
aad
xchg
mov
cmp
add
push
rcll
jmp
inc
xchg
repnz
jns
adc
and
test
xchg
sbb
pusha
xchg
sub
fcompl
lret
loop
dec
lock
out
cmpsl
rclb
mov
cwtl
cmp
in
ja
aaa
psubsw
cmc
mov
inc
clc
in
orb
add
jmp
push
call
pop
xchg
in
test
bound
jne
lock
fwait
pop
adc
mov
lods
insb
xchg
cltd
sbb
cltd
add
push
xchg
sbb
orl
into
das
sbb
out
imul
jb
xor
sub
sub
cltd
fisubs
jge
xor
and
jecxz
int3
adc
out
lock
iret
test
pop
jg
jae
dec
jno
inc
lret
mov
cltd
rol
fnstenv
mov
icebp
popf
jp
inc
jmp
icebp
mov
nop
sub
sub
movsl
add
aad
jne
lret
jbe
stc
popa
dec
cmp
scas
xchg
imul
pusha
mov
sub
loopne
sahf
sbb
inc
sbb
jbe
popa
xchg
popl
xchg
pop
test
addr16
lret
test
dec
mov
jmp
js
leave
dec
push
out
lret
out
cmpsl
mov
sub
jno
cmp
adc
mov
out
in
popf
jle
sbb
push
add
mov
add
lds
xor
test
lea
clc
or
gs
push
mov
cld
mov
movsl
stc
xor
sbb
inc
rolb
test
scas
fs
add
jge
jbe
fdivs
xor
clc
jmp
lcall
movzwl
mov
jmp
aas
mov
loope
xchg
dec
aas
aas
lods
cld
scas
pop
xchg
shl
cld
fsts
iret
inc
lret
push
insl
lock
push
in
stc
clc
xchg
mov
ljmp
jns
cmp
mov
lret
add
stos
push
push
mov
minps
mov
push
clc
lock
scas
dec
je
sbb
out
xchg
mov
or
push
leave
push
push
adc
xchg
push
adc
out
cmp
ss
mov
adc
decb
leave
xor
mov
imul
sbb
push
push
adc
leave
mov
mov
fwait
mov
idivb
xchg
fildll
mov
roll
mov
mov
push
mov
push
pop
mov
mov
or
scas
xchg
sub
mov
daa
dec
mov
iret
add
mov
jo
sub
fwait
and
arpl
jb
leave
inc
imul
xchg
aad
ret
pop
mulb
adc
fdivrp
dec
sub
test
lods
mov
jae
pusha
mov
gs
scas
call
mov
mov
pop
pop
aas
cmpl
cmpl
jg
and
pop
ret
mov
jl
lock
aad
mov
in
adc
dec
aam
test
js
les
jmp
aas
mov
aaa
mov
sbb
and
pop
imul
sub
cmp
dec
loop
jbe
or
in
push
scas
rcll
ficompl
sbb
mov
push
pop
pop
adc
mov
lea
dec
push
insb
test
pop
popa
bound
cwtl
movsl
outsb
add
mov
popf
dec
in
test
rcll
out
or
in
xchg
mov
mov
jp
cmpsb
test
push
xor
lcall
arpl
add
cmc
outsl
std
fldl
sbbl
sbb
ret
insl
adc
into
jnp
je
dec
rorl
popf
pusha
cmp
lods
inc
mov
iret
movsb
lods
orl
icebp
jg
pop
add
lods
pop
movsb
out
dec
dec
dec
icebp
push
clc
lret
xchg
pop
mov
push
out
ret
mov
stc
and
xchg
sarb
clts
xlat
repnz
lahf
mov
sub
pop
call
clc
jnp
scas
pop
mov
inc
stos
sbb
xchg
jmp
xchg
or
sbb
pop
cmp
inc
or
mov
and
and
inc
jne
inc
clc
dec
and
in
mov
mov
or
repnz
rcll
out
mov
xchg
stos
pop
mov
shlb
data16
cmp
dec
xchg
mov
jmp
push
push
repnz
in
xor
enter
clc
sub
jg
ret
xlat
pcmpgtw
mov
lahf
inc
std
dec
popf
push
xchg
push
fists
or
test
jle
sbb
arpl
sbb
int
shl
xchg
cmp
in
jecxz
or
pop
movsl
ss
js
and
jne
lods
xchg
pop
test
leave
mov
ja
std
and
pop
cli
imul
out
mov
aas
sahf
stos
pop
lock
mov
ljmp
adc
pop
inc
es
inc
jecxz
add
add
fneni(8087
out
jp
inc
nop
mov
or
pushf
or
mov
sahf
dec
lock
imul
mov
jbe
out
scas
fiaddl
clc
lret
mov
ror
arpl
negl
pmaddwd
fdivrs
mov
sbb
daa
jecxz
pop
mov
je
imul
std
push
lahf
ret
aam
pop
inc
mov
or
jg
scas
cmp
jne
pop
rcrl
bound
aam
xchg
push
adc
fcmovnbe
and
cmp
pop
sub
xchg
aaa
test
shll
sbb
std
data16
loope
div
xor
push
xchg
dec
ljmp
hlt
adc
mov
sbb
iret
mov
in
xor
je
xchg
daa
jge
xlat
jnp
int
repz
mov
adc
std
imul
pusha
jae
sub
push
js
pop
mov
sbb
jecxz
add
xchg
fldenv
add
in
xor
repnz
divb
mov
jmp
mov
xchg
dec
insb
inc
jbe
pop
jmp
push
push
cmp
xchg
fmulp
ret
sbbl
xor
out
and
fstpl
inc
adc
sahf
int3
aad
imul
mov
jle
pushf
rcrl
iret
movsb
repz
rorl
push
enter
jle
ret
or
cwtl
pop
in
adc
inc
lahf
call
fildll
push
jge
mov
data16
adc
inc
sub
jp
or
xor
and
inc
loopne
daa
push
sbb
or
mov
push
in
std
jecxz
xor
xor
test
lock
mov
mov
mov
test
jns
sbb
enter
loope
jmp
adc
dec
in
aam
lea
loope
cld
movsb
pushf
bound
add
sub
xor
addr16
out
or
outsl
or
ret
xchg
and
das
mov
lods
jne
cmpsb
xchg
out
jp
mov
mov
and
or
add
out
enter
dec
ja
mov
scas
mov
sub
add
xor
or
or
mov
jbe
jno
add
mov
xor
repnz
clc
fildl
mov
add
push
cmp
pushf
in
sbb
cmp
je
ja
dec
arpl
cmp
jb
popl
dec
movsl
jmp
gs
fwait
aaa
ss
fs
push
mov
subl
push
out
jno
mov
stos
sar
pop
aas
cwtl
dec
mov
push
in
stc
test
jmp
or
inc
sti
mov
test
or
hlt
enter
das
adc
lea
imul
xchg
fmul
cmp
idivl
pop
ljmp
fisttps
or
adc
sub
xchg
cmp
mov
jp
and
test
adc
fmull
mov
push
pop
ret
push
ret
rclb
shrb
ret
orb
cmp
fdivr
adc
mov
pop
push
in
mov
sahf
sbb
add
push
add
adc
pop
out
and
dec
mov
sub
sbb
test
lahf
cmp
mov
lret
mov
pop
movsbl
stos
cmp
cmp
lret
and
aas
and
sbb
jl
and
iret
movl
repnz
iret
lahf
enter
pop
push
fisubs
add
xor
mov
mov
adc
leave
test
lcall
adc
nop
ja
scas
es
loopne
adc
and
cmp
loopne
ret
mov
push
inc
in
mov
addr16
clc
std
aaa
push
in
jbe
aad
add
push
into
fwait
lahf
out
mov
mov
out
loopne
imul
inc
sbb
das
mov
mov
jl
in
dec
movsb
loope
outsl
lods
fadds
das
and
fwait
ret
movsl
nop
cmpsb
sub
mov
in
mov
mov
test
mov
mov
shll
and
call
add
xor
push
ja
mov
pop
pop
subb
sbb
cmc
stos
add
inc
pop
adc
adc
mov
out
cmpl
pop
sub
jnp
fldl
xchg
cs
insl
mov
filds
adc
adc
and
jne
pop
orb
xchg
cmp
std
lret
push
jo
add
or
pop
rcrb
push
xchg
movsl
std
roll
or
inc
sub
jbe
repnz
mov
mov
add
es
sarl
mov
mov
jl
push
or
dec
inc
mov
sbb
sub
ret
pop
lahf
and
mov
ja
in
inc
jmp
scas
push
jno
les
aam
sub
movsl
mov
jo
add
sub
jmp
into
mov
pushf
and
push
js
out
aas
iret
arpl
adc
mov
xchg
cmp
jecxz
iret
rcl
je
cmp
pop
js
js
lods
dec
loop
hlt
outsl
mov
jne
inc
dec
movsb
adc
loop
out
stos
fldt
inc
or
sarl
push
dec
bound
fistpl
sbb
in
fs
sbb
mov
xor
lret
arpl
mov
jbe
mov
arpl
jecxz
mov
loopne
cmp
add
pop
bound
cmp
je
arpl
dec
dec
push
enter
pop
xor
dec
fistl
mov
ficompl
pop
hlt
std
rorl
test
ret
push
negl
cmp
sub
scas
lcall
push
mov
push
or
loop
jp
lock
mov
pushf
mov
cmpsl
shlb
mov
enter
pop
add
mov
sub
mov
in
jle
xorb
arpl
push
xchg
shll
pop
and
adc
pop
in
push
out
mov
out
sahf
xchg
ffreep
aas
ret
pushf
mov
jbe
adc
lret
nop
mov
adc
inc
lds
out
mov
data16
mov
fsubrp
loopne
push
cmp
int3
sbb
out
push
and
inc
sbb
das
loopne
out
pusha
jmp
mov
int3
sub
test
loope
and
pop
push
push
and
rcrb
stos
mov
sahf
xchg
stos
rol
adc
inc
adc
in
pop
sub
fidivs
mov
sub
push
movsb
sahf
mov
sbb
inc
out
pop
int3
nop
scas
dec
inc
orl
ret
mov
sbbb
and
imul
outsb
push
adc
stos
add
dec
mov
mov
insb
out
lahf
jae
mov
repz
and
shll
xor
daa
sbb
cmpsb
dec
add
pop
dec
jp
lahf
push
lds
mov
xor
gs
cmp
inc
mov
and
dec
push
ljmp
or
leave
push
imul
fisttps
popa
xchg
addr16
out
sub
add
imul
sub
adc
das
jle
and
mov
mov
scas
test
lret
jecxz
mov
jge
jb
rorb
leave
int3
or
pop
add
mov
jae
aas
dec
and
pop
dec
dec
fwait
mov
sarl
mov
out
das
add
das
nop
mov
lea
arpl
add
out
arpl
fisttps
inc
out
cli
xchg
adc
test
and
push
ja
aad
jle
js
aam
sbb
icebp
js
inc
cmpsl
cmpsl
xor
jmp
mov
stos
mov
lret
push
divl
dec
icebp
ss
cmpb
sqrtps
add
scas
xor
sub
adc
pusha
jbe
dec
xchg
insb
cmpsl
jmp
arpl
scas
aad
les
jo
adc
imul
out
cmpsl
mov
pushf
push
add
push
jo
into
inc
call
dec
mov
div
sbb
sub
sub
push
push
push
shll
cmc
push
movsb
cli
push
cs
pop
fildl
jb
xor
arpl
push
mov
scas
lock
sbb
aad
ds
xchg
idivl
mov
xchg
mov
mov
imul
pop
cmc
adcb
lret
fsubs
rcll
push
in
jo
sub
pop
adc
pushf
icebp
cltd
pop
adc
popl
mov
lods
lret
insb
mov
cmc
jg
daa
add
jp
loopne
int
sub
mov
sub
outsb
adc
sbb
test
mov
cmp
mov
pop
adc
shll
mov
stc
imul
xor
loope
mov
pop
inc
rorb
mov
aas
outsl
adc
pusha
mov
cmp
jg
ror
xlat
push
xchg
or
aad
or
jle
jo
pushf
dec
sbb
mov
pushl
add
sub
mov
adc
cmp
fstpt
cmp
nop
push
mov
loope
jo
and
mov
enter
dec
pop
roll
mov
shrb
adc
mov
jae
push
push
pop
repnz
fs
or
mov
or
mov
mov
xor
cmpsb
addr16
insb
inc
sub
fists
xor
sahf
dec
int
jecxz
xchg
pop
ja
xor
jecxz
mov
lock
into
xor
adc
mov
add
push
outsl
or
negl
gs
adc
lods
cmp
loop
lcall
sub
ds
mov
xchg
test
jo
mulb
xlat
mov
ljmp
add
mov
sub
fwait
leave
pop
mov
clc
mov
in
cmpsb
and
push
sbb
xor
xchg
sbb
sti
pop
add
adc
jg
mov
push
out
cmp
xchg
rcrb
inc
and
jmp
xor
fiadds
cs
fsubrp
dec
cmp
inc
js
fs
dec
dec
or
dec
in
and
pushf
fidivrs
fisttpll
ret
sbb
std
andl
and
andl
add
push
xchg
out
and
je
insl
add
xchg
popf
mov
fldenv
lock
cmpsb
xor
in
lds
cmp
shl
xchg
dec
lods
jle
rolb
and
sarb
mov
add
popa
je
mov
adc
in
jne
pop
and
push
push
push
dec
ljmp
cmp
sti
insl
pop
cmc
push
jae
inc
jno
int3
hlt
scas
mov
mov
adcb
and
push
push
notb
or
ja
and
aam
imul
addb
cmpsb
test
clc
lcall
pop
push
movsl
fs
and
cmp
add
jg
sbb
jo
testb
imul
shlb
loop
push
sub
repnz
lock
mov
loopne
mov
mov
xchg
insb
jge
lock
pop
xor
je
jl
idivb
cwtl
and
sbb
push
lods
pop
shl
add
nop
or
sbb
add
popf
xor
mov
dec
hlt
cmp
jl
and
add
loopne
movsl
lret
ds
mov
loop
pop
pop
pop
int
mov
push
mov
jae
fsubrs
jl
rorl
lods
mov
adc
rorb
xchg
mov
loope
int3
fisubl
adc
push
push
and
mov
adc
push
add
pop
push
mov
outsb
push
xorb
rolb
xor
mov
int3
add
xor
scas
and
imul
repz
xchg
in
dec
xor
xchg
cwtl
icebp
out
fists
add
and
cmp
mov
add
push
jmp
pop
jo
lahf
mov
out
and
inc
add
dec
jns
mov
xor
sbb
test
push
xchg
pop
or
in
or
daa
mov
popw
inc
cmp
inc
test
jnp
xchg
inc
or
clc
fs
pop
xor
pop
popf
mov
aaa
adc
cwtl
les
pusha
or
pushf
mov
mov
hlt
imul
pop
xchg
loop
push
fstps
xor
sub
popf
out
cmp
test
idivb
cli
sahf
cmpsl
or
dec
ja
aas
lfs
mov
ds
push
js
jle
outsb
mov
outsb
mul
and
imul
out
xchg
call
pushf
arpl
adc
pop
xchg
pop
sub
sub
test
pop
mov
das
dec
data16
fnstsw
cmp
mov
sbb
xchg
cs
sub
push
ds
mov
mov
dec
xlat
les
sub
add
xor
int3
xchg
mov
hlt
and
cmp
pop
das
outsb
sbb
sbb
popa
fcmovnb
imul
rsm
loop
push
ja
jecxz
or
mov
push
cli
es
cmpsl
mov
hlt
out
lock
fdivs
imulb
into
adc
push
fnstcw
pop
add
pop
and
sarl
sbb
in
aaa
lahf
out
aaa
and
pushf
cmpl
sbb
test
imul
popa
popf
mov
cmp
shrb
adc
stos
xor
mov
rclb
les
dec
cmc
hlt
bound
hlt
add
test
data16
mov
cltd
sbb
cmp
sub
fiaddl
sbb
dec
jp
int3
les
repnz
lahf
sbb
adc
nop
ret
testl
fpatan
ja
testl
pop
inc
sar
aad
mov
xchg
nop
dec
dec
sub
lods
enter
addr16
and
xlat
rcl
xchg
aad
push
fistps
pop
push
ja
loop
jns
lods
push
sub
cmp
xchg
divb
out
mov
xor
mov
cmp
insl
fistl
daa
int
lods
aas
mov
sti
loop
sub
inc
ljmp
ja
inc
jmp
stos
je
in
clc
push
imul
cld
mov
cmp
add
adc
fldt
fwait
bound
xor
adc
pop
dec
fstpl
mov
in
loopne
cli
inc
xchg
sub
leave
mov
add
dec
fcompl
cmp
jb
sub
jb
xor
into
ficoms
leave
add
pop
xchg
pop
xor
fcmovnu
xlat
xchg
sub
cmp
pusha
xlat
mov
inc
cmc
mov
in
xor
push
jae
hlt
cmp
in
push
mov
cli
imul
movzwl
repz
sbb
andb
xlat
es
jge
test
addr16
stos
xor
adc
inc
daa
sarl
arpl
adc
stc
mov
test
sbb
jmp
cld
aam
inc
cmp
xlat
in
cltd
adc
mov
es
adc
sbb
int
push
stos
jns
cwtl
les
pop
mov
sbb
cmpb
fimull
xchg
sahf
andl
neg
add
add
xchg
and
xorl
movsl
add
mov
enter
test
scas
xor
fcompl
out
ds
xchg
jmp
push
xchg
rcll
cmp
ficoml
inc
test
mov
xchg
or
es
pop
negb
mov
ss
cmp
out
insl
movsb
in
in
pop
mov
popa
cmp
mov
xlat
gs
sbb
test
push
mov
sbb
push
xor
enter
push
enter
addr16
fbld
in
xchg
jmp
and
stos
stc
xor
int3
enter
ss
jecxz
and
enter
sar
add
mov
jle
out
mov
pop
mov
std
inc
test
add
xchg
xor
jp
cmp
out
fisubrl
cmp
mov
das
inc
dec
push
push
dec
div
in
jmp
add
fnstcw
inc
fcompl
rorl
pop
sbb
add
mov
jp
popf
jbe
out
xchg
popa
mov
cmc
pop
cli
sbb
mov
test
lods
out
or
in
push
and
xchg
sbb
jbe
xor
sbb
dec
xchg
dec
pop
add
rorl
inc
jae
repnz
fwait
xor
sub
jne
cmp
jne
iret
outsl
mov
loopne
or
adc
ret
xor
sub
pusha
ljmp
dec
xchg
and
mov
mov
cmp
stc
cmp
xchg
cmp
lcall
inc
cmp
outsl
in
test
pop
test
fisubs
sub
mov
sbb
shll
cmp
repnz
lret
xor
in
fwait
or
jp
xchg
mov
out
sti
frstor
jl
stos
test
loope
push
mov
jg
ret
pop
sbb
mov
and
out
mov
icebp
mov
mov
insl
mov
js
fstl
xchg
jnp
scas
mov
shl
scas
in
sbb
mov
inc
ljmp
pop
jae
popa
imul
stc
pop
leave
lret
and
mov
popf
mov
andl
push
arpl
jp
dec
call
jecxz
and
cmpl
clc
xor
cwtl
jns
popf
movsl
roll
lods
lret
out
fists
jne
mov
scas
insl
push
jae
dec
divl
out
xchg
cmp
inc
xor
cmp
push
lds
push
fsubrs
cmpsb
jg
cltd
cmp
test
mov
andb
push
mov
push
jo
sti
sub
lret
push
xchg
int3
xor
push
lret
in
imul
adc
pop
sbb
stos
iret
cmp
jecxz
xor
nop
rcrl
push
mov
xchg
push
pop
xchg
xlat
fdivs
inc
add
xchg
sbb
mov
sbb
jle
cmp
sub
mov
inc
insb
pop
loopne
subb
inc
dec
dec
or
inc
cli
xor
test
pop
outsb
mov
leave
dec
xchg
xchg
es
pop
loope
testl
mull
mov
stos
movsl
and
jecxz
jno
icebp
adc
pop
pop
xor
cmp
mov
push
bound
in
das
mov
fucom
inc
jae
dec
rcrb
dec
adc
rcll
xor
and
push
push
mov
stc
lods
adc
insl
pop
jbe
ss
mov
pushf
xchg
mov
aad
jne
dec
dec
adc
xchg
arpl
mov
popa
popl
mov
xor
std
xor
xor
sti
fnsave
and
dec
add
scas
hlt
dec
mov
int
mov
ret
vucomisd
div
jbe
or
std
scas
sahf
xchg
push
test
ffree
jmp
inc
dec
je
jo
andl
mov
inc
fimuls
dec
in
or
test
mov
fmuls
data16
jnp
orb
in
jmp
loope
push
iret
push
loop
les
mov
add
xlat
mov
xchg
dec
pop
push
xor
mov
mov
enter
jecxz
js
ror
es
jnp
jo
mov
sahf
leave
fs
adc
cmp
repz
out
ds
xchg
jg
push
jmp
ss
das
dec
out
inc
pop
outsl
lds
insb
mov
mov
lods
xchg
imul
jns
mov
test
jb
mov
addb
enter
mov
mov
insb
clc
sub
lret
and
mov
push
inc
inc
scas
call
sbb
ror
rcrl
xor
push
mov
loopne
lods
jb
or
lds
mov
sbb
inc
iret
jmp
lahf
jl
aaa
out
mov
sti
add
leave
mov
das
sub
xchg
addb
aas
mov
imul
mov
int3
mov
push
lret
jnp
loopne
push
in
xchg
int3
mov
jne,pt
les
lret
push
jbe
dec
mov
and
rorl
gs
lock
add
je
fmuls
repz
mov
outsl
mov
xchg
jl
mov
and
shl
testb
pop
jb
or
cmp
cmp
push
ljmp
adcb
ja
push
pusha
shrl
ja
jb
cli
push
pop
mov
mov
sarl
movsb
push
pop
loope
cmp
movsb
push
pop
inc
cmpsl
aas
jne
sbb
scas
cltd
xor
dec
xchg
test
push
ss
scas
cmp
and
inc
dec
es
sub
ljmp
cmp
nop
bound
or
out
push
pop
cli
mov
test
fucomi
imul
insl
xchg
and
inc
pop
sub
jmp
lds
xchg
add
lods
cmp
xor
or
jg
int3
pop
dec
add
fsubl
mov
jo
adc
push
loop
ret
mov
repz
push
jnp
add
arpl
jnp
cmp
pop
and
insl
imul
in
mov
ret
call
iret
stos
jno
sbb
fisubs
jbe
imul
mov
jae
cwtl
push
push
mov
jae
sbb
out
fnstsw
enter
insb
jl
loopne
icebp
mov
push
xor
sbb
xchg
push
movaps
mov
outsl
pop
add
ljmp
xchg
fmul
push
ljmp
jg
sbb
ror
sub
mov
les
mov
insb
cld
push
loopne
xor
ret
mov
fsub
mov
mov
jle
push
arpl
stc
inc
cltd
dec
push
inc
ficompl
inc
xlat
or
icebp
ficomps
ja
or
fwait
or
movsb
orl
fistl
pop
sbb
nop
pusha
xchg
cmp
movsb
add
imul
inc
cmpsl
push
mov
push
fs
cmp
in
or
pop
hlt
subb
in
je
repnz
sub
dec
adc
rclb
mov
out
sbb
xchg
or
xchg
or
or
jmp
shl
sbb
push
popa
fwait
inc
push
jno
xchg
ds
mov
or
lret
test
out
push
pusha
shlb
dec
sub
sbb
cld
mov
or
fimuls
jecxz
out
out
movsb
or
adc
ljmp
xchg
or
fs
outsl
lea
mov
mov
pop
xor
mov
divl
sub
and
sti
jae
sub
imul
cld
add
cmpsb
and
incb
cmp
orb
rcl
stos
test
popf
pop
js
adc
loop
fcompl
push
pop
test
mov
dec
mov
cmc
nop
hlt
cmp
dec
mov
lahf
push
or
mov
lock
ret
lods
mov
lock
jp
or
push
lock
jne
pop
dec
outsl
dec
pop
ds
fildl
and
jecxz
inc
sub
cs
sbb
test
outsl
dec
inc
scas
mov
in
ds
jg
js
lock
icebp
shll
xchg
rclb
dec
mov
xchg
cmp
repnz
stc
jbe
adc
ret
icebp
mov
push
xchg
cs
pop
mov
arpl
int
cmp
fs
sub
cs
dec
loop
inc
int3
jne
jle
push
or
icebp
mov
mov
cmp
inc
sbb
jb
lock
jge
out
cwtl
mov
xchg
mov
jge
es
daa
or
out
and
cmp
and
scas
in
and
cmp
adc
loop
xchg
push
push
mov
mov
jns
lea
pop
adc
outsb
xchg
pop
ret
arpl
jo
cmp
add
insb
icebp
sub
cli
popa
pushf
sbb
std
pop
or
cmc
idivb
add
add
scas
pop
xor
sahf
ret
dec
inc
xor
cmpsb
cwtl
mov
push
fidivrs
andb
out
xchg
shlb
add
out
je
test
push
aam
leave
sbb
shll
cli
mov
outsl
inc
or
scas
sbb
sub
stc
mov
mov
and
lret
in
xor
sti
notb
xchg
or
cmc
imul
jne
cltd
adc
int3
jb
or
aaa
movsb
mov
add
jl
out
or
lret
mov
pop
pushf
fcomps
cwtl
adc
fs
subl
inc
jg
fldl
into
push
push
fadd
lds
sub
pop
ret
cmc
cmp
push
adc
fsts
stos
std
ds
pushf
cld
lds
bound
clc
insl
lods
mov
and
xchg
xchg
test
xchg
push
js
in
or
outsl
aam
fsubs
mov
ffreep
loope
clc
xor
arpl
mov
xchg
scas
adc
and
cwtl
outsb
push
stos
push
dec
icebp
xor
or
gs
rolb
clc
cmpb
mov
dec
xlat
inc
decb
and
icebp
add
jo
pop
jmp
insl
mov
pop
cmpsb
push
sub
fists
jnp
fdiv
rclb
pop
icebp
lea
adc
popaw
mov
xchg
jp
or
pcmpeqd
xor
sbb
in
out
cmp
sbb
inc
mov
lahf
xchg
popa
add
push
sbb
jnp
dec
test
dec
test
scas
inc
dec
idiv
mov
xchg
rep
rcl
mov
adc
dec
sti
push
fists
inc
fmull
ret
mov
mov
dec
sub
imul
dec
mov
lods
dec
mov
sarl
mov
in
add
jbe
mov
cmp
pop
push
test
mov
ds
adc
and
add
movsl
xor
inc
xchg
dec
into
mov
aam
popf
inc
movsb
shr
push
dec
cwtl
dec
test
imul
cmp
mov
adc
pop
idivb
push
mov
addl
popf
pop
xor
frstor
sub
push
rclb
faddp
pop
lds
stos
cwtl
pop
bswap
xchg
jge
les
insb
cltd
cmp
scas
mov
out
cli
or
ds
lods
mov
lahf
xchg
stos
push
repz
outsl
aam
adc
jmp
add
xor
pop
jle
xchg
jmp
inc
scas
ds
xchg
cwtl
pop
dec
cmp
push
mov
adc
xchg
xchg
das
imul
inc
mov
lahf
icebp
mov
pusha
mov
pushl
xchg
dec
lock
dec
cmp
xchg
sbb
stos
fsts
jmp
pop
xchg
jno
cmp
outsl
daa
and
cmp
inc
or
push
xchg
shlb
stc
jge
mov
jbe
cmp
stos
arpl
xchg
stc
dec
ret
aad
in
push
imul
pop
inc
xor
div
test
into
or
adc
xchg
xor
sbb
mov
adc
jbe
mov
movsl
dec
rcrb
xor
into
sti
xlat
xchg
or
imul
pop
out
mov
sbb
and
add
jl
imul
dec
mov
sub
fldcw
fwait
mov
pop
inc
xor
lods
xor
hlt
sub
dec
cmp
pop
rcl
dec
or
scas
inc
shrb
xor
gs
push
arpl
pop
pop
mov
jge
sti
sahf
nop
test
aaa
pop
lcall
test
stos
leave
jg
push
das
call
je
outsl
xchg
mov
imul
fwait
adc
fsubrs
dec
inc
fstpt
add
stc
or
mov
call
inc
data16
xchg
mov
jo
fldcw
sbb
add
cmp
mov
jmp
jo
add
cmp
adc
fisttps
in
aad
push
mov
mov
adc
push
ffreep
push
lret
push
out
lea
push
jmp
cwtl
shrb
out
adc
push
jle
sbb
divb
cmp
fwait
mov
aas
add
sub
popa
dec
or
arpl
out
shr
nop
icebp
jle
sub
insb
pop
inc
xor
push
jle
mov
lret
pop
inc
test
inc
ret
dec
mov
mov
ret
jecxz
lret
jecxz
push
mov
leave
ds
lahf
xorl
dec
mov
daa
push
push
mov
push
pop
mov
idivl
xchg
repnz
ja
rcr
daa
adc
mov
pop
cmp
popa
ja
ret
ss
or
mov
add
stc
xor
pusha
push
movl
sub
sbb
sbb
out
jo
inc
rcl
cmp
or
mov
mov
mov
mov
inc
xchg
iret
lods
cmp
cmp
inc
nop
aaa
movsl
sbb
inc
out
push
pminub
sbb
adc
repnz
xchg
imul
push
cmpsl
and
leave
jae
mov
cld
lock
pop
popf
dec
insb
pop
cmp
jnp
bound
gs
stos
inc
f2xm1
dec
test
outsl
popf
mov
or
cmp
pusha
pop
test
xchg
iret
mov
lret
cmc
dec
mov
inc
loopne
rcll
xchg
mov
lahf
jmp
sbb
arpl
stos
mov
or
lahf
dec
jmp
leave
jo
dec
fbld
jno
push
stc
cmpsb
fmuls
xchg
ljmp
mov
ds
push
in
mov
push
inc
mov
sti
aam
aad
scas
loop
jae
lds
xchg
adc
fdivrs
mov
sub
sbb
pop
mov
or
daa
mov
stos
xchg
aam
out
jecxz
push
movsb
dec
es
lahf
xchg
push
loopne
outsl
push
insb
sar
and
test
sbb
and
xlat
ljmp
testl
sub
mov
ljmp
or
push
movsl
lahf
or
mov
xor
test
xor
or
push
add
into
mov
mov
movsl
mov
xchg
in
in
pop
pop
inc
das
sbb
xor
and
mov
inc
add
inc
xor
data16
pop
mov
hlt
or
cs
push
jl
rcl
pop
in
imul
int
enter
xor
push
cli
stos
scas
mov
push
push
leave
stc
arpl
or
mul
adc
sub
ds
leave
pop
or
flds
das
das
push
in
push
push
dec
jmp
push
xlat
out
push
scas
loopne
fmull
sub
in
rorl
aas
cmp
xor
jns
adc
ret
cmp
lea
and
inc
cmp
je,pt
rolb
jnp
insb
mov
in
lods
std
xor
add
and
xchg
ret
stos
iret
adc
je
inc
jg
popf
repnz
scas
dec
mov
ljmp
mov
call
ss
cmp
xor
xor
jne
faddp
fsubl
test
sbb
push
fmulp
hlt
addl
or
mov
or
push
push
arpl
cmp
fstpl
mov
clc
add
pop
jmp
lods
fwait
test
or
or
sbb
mov
xor
xchg
fmul
xchg
movb
and
inc
pop
hlt
mov
shrb
sti
ret
inc
imul
ret
cld
into
and
jp
cmc
cmp
adc
fwait
cmp
repnz
icebp
sbb
ss
push
cmp
xchg
jg
aad
lock
or
xchg
add
adc
cli
inc
pop
mov
adc
dec
pop
cmpsl
bound
add
adc
mov
test
push
les
xchg
mov
aam
xchg
out
dec
je
xor
xchg
fwait
imul
push
std
jno
jno
xchg
jge
lahf
ret
push
cld
jmp
fs
and
gs
aaa
sub
mov
mov
into
inc
xor
cli
xor
jns
jne
cltd
sti
sahf
js
movsl
mov
xchg
inc
dec
mov
cmp
inc
mov
mov
add
sbb
dec
adc
repz
adcl
test
test
xchg
mov
mov
lret
xchg
jecxz
test
fwait
pop
adc
jo
test
sub
or
xor
je
cmp
xchg
flds
xor
femms
and
mov
xchg
xchg
cli
testl
pop
lods
and
fldt
ficomps
leave
pusha
push
mov
out
pop
sti
push
adc
adc
cmp
stos
xchg
dec
fsqrt
iret
xor
mov
mov
mov
mov
add
or
fwait
out
xchg
into
stc
cmpsb
cmp
mov
repnz
or
mov
lahf
fs
jg
subb
mov
sar
dec
xor
mov
out
fsubrl
push
jecxz
in
inc
jp
jge
and
out
pop
xchg
fisttpl
cli
dec
leave
jl
inc
aaa
popa
icebp
in
jg
lea
inc
inc
cltd
mov
rcrb
jl
loope
stos
std
daa
jmp
out
xchg
xchg
sbb
sbbb
adc
inc
in
or
shll
fidivrs
sarb
xor
je
int3
rolb
mov
mov
cli
sbb
lods
popa
hlt
xchg
xorl
xchg
mov
xor
dec
jo
ljmp
jbe
sub
nop
mov
fwait
xor
pop
pushf
repnz
sub
shl
sbb
mov
repz
das
xor
idiv
fbstp
pop
enter
pop
sub
jae
jle
cmc
mov
pop
shll
cwtl
mov
xchg
repz
repnz
pop
sbb
adc
dec
cwtl
sbb
or
mov
call
cmp
push
subb
add
xor
lret
ja
fsubp
ljmp
cmp
inc
clc
daa
scas
cmp
inc
adc
dec
std
dec
popf
aas
sarl
aam
test
or
roll
jno
xchg
xorb
xchg
flds
jp
cltd
and
fs
out
gs
loop
and
xchg
jp
jmp
in
xchg
inc
in
leave
subl
jmp
and
shll
popf
aaa
lock
cmp
sti
xchg
ja
xchg
nop
imul
data16
fisubrs
not
iret
in
ljmp
divb
xchg
or
mov
mov
fcoms
aas
add
das
push
xchg
inc
ret
push
sar
dec
mov
in
mov
cmpsb
mov
mov
ja
pop
sbb
imulb
mov
jg
mov
inc
dec
inc
aam
js
pop
mov
mov
push
stos
sub
fs
xor
mov
int3
inc
fcoml
daa
xchg
pop
fisttps
push
dec
dec
out
ss
lret
adc
fstpt
aas
lods
mov
shrb
or
pop
push
push
out
cmp
sub
andb
cmpsb
jo
call
ror
stos
pop
mov
fnstenv
mov
mov
in
ficompl
out
ja
jg
push
repnz
add
leave
xchg
xor
mov
ret
pop
fxam
ret
xor
sub
push
jg
push
stos
fidivs
and
mov
aaa
cmp
inc
sarl
adc
adc
xor
push
dec
pop
sub
out
test
mov
cmpsb
and
inc
push
fnstenv
add
call
jo
mov
rcrl
push
sbb
shrb
movsb
xchg
jmp
jno
sahf
cld
ja
mov
dec
stos
lret
and
inc
xor
scas
lds
sub
mov
push
shrl
mov
and
and
jne
mov
repz
push
js
out
test
cwtl
das
cmp
jns
test
stos
fs
aad
out
hlt
add
xchg
jno
xchg
jp
aam
fdivs
int
push
sub
and
aaa
pop
add
cld
cld
nop
lcall
jno
pop
fcompl
push
ljmp
jg
add
sbb
fwait
add
in
push
inc
cmp
fsubrp
loopne
pop
ror
jne
push
repnz
jl
mov
lcall
fnstsw
push
cmpsl
cmc
insl
and
push
cltd
cmp
loop
and
inc
xchg
into
movsb
xchg
push
or
emms
cmp
fnsave
test
imul
mov
mov
sub
push
ja
stos
movsb
pmaddwd
cmp
sbb
shrb
call
int3
lcall
fwait
push
jg
cmc
push
and
pop
mov
dec
xchg
push
fisttpll
jae
or
add
xchg
jge
pop
add
in
push
mov
fistps
fcmove
jae
mov
mov
or
js
dec
fwait
std
and
sti
fimuls
jecxz
scas
movsb
dec
fstpt
mov
pop
pop
das
es
arpl
outsl
pushf
xlat
ljmp
out
mov
test
sbbl
inc
adc
ror
es
push
adc
add
dec
fwait
into
mov
out
inc
jmp
mov
pop
cmp
imul
outsb
sbb
cmp
mov
cltd
mov
ss
dec
and
sub
and
sub
popl
aas
inc
out
dec
mov
xchg
sub
and
xor
adc
out
pop
fwait
movsb
faddl
testb
cwtl
mov
dec
push
xor
add
mov
rcrl
xchg
in
mov
jb
fisttpl
xchg
cmp
dec
dec
rcrb
cmp
lods
jmp
mov
enter
xchg
aad
push
adc
shrb
xchg
shl
jbe
add
lcall
call
pop
in
lods
rcrb
add
dec
jbe
notl
mov
add
push
sub
mov
daa
dec
lock
or
stos
sbb
popf
push
stc
pop
iret
sbb
xchg
lods
sbb
add
and
fucompp
cs
xchg
and
fistps
jecxz
push
jns
icebp
scas
push
mov
add
sbb
jbe
push
sub
and
lods
dec
iret
mov
cmc
clc
mov
in
inc
mov
test
dec
divb
scas
sub
xchg
xchg
mov
sub
dec
cmp
sub
lods
jle
push
xor
sub
lret
outsb
sti
push
mov
and
pop
cmp
and
jnp
or
out
in
pop
stc
decb
inc
push
iret
mov
dec
or
lret
mov
outsl
sarl
or
andl
mov
pop
xchg
mov
stos
mov
or
sub
enter
stc
and
push
call
mov
ror
inc
das
repnz
sub
lock
pop
push
bound
in
dec
mov
cwtl
xor
sub
mov
into
jae
fwait
cmp
out
cmp
pushf
fldl
fsubl
mov
in
lods
lcall
mov
outsl
xchg
lods
into
es
imul
insl
inc
mov
inc
inc
push
movsl
inc
add
cltd
xlat
add
in
das
imul
xor
adc
pop
mov
and
adc
sti
pop
and
pop
mov
imulb
add
mov
mov
sub
movsb
push
xor
popa
sbb
cmpsb
fadd
std
fmuls
or
ds
in
pop
sub
iret
dec
insl
stos
jo
inc
shrl
sub
pusha
sbb
push
loope
or
cmp
xor
mov
xchg
pop
mov
jnp
xor
bound
or
xor
fnstcw
xchg
in
xor
xchg
sbb
sub
cmpsl
lea
mov
adc
popf
jb
fldcw
gs
mov
push
int3
in
repnz
xorb
sbb
jmp
cmp
adc
or
sbb
dec
pop
or
sbb
out
ret
xchg
imul
adc
pop
sbb
cmova
mov
xor
mov
and
ljmp
iret
mov
adc
xor
in
xchg
test
pop
lahf
idivl
or
inc
cmp
leave
push
inc
push
jae
or
fs
mov
mov
push
sub
rol
js
fistpl
int
dec
scas
sub
in
add
cwtl
add
pop
in
mov
negb
lret
push
pop
shlb
outsl
std
xchg
das
scas
ja
cmp
lret
and
je
jecxz
xor
sbb
mov
jmp
icebp
sbb
sbb
sbb
and
dec
in
jbe
jg
lret
aaa
fsubrl
mov
scas
jp
jo
sbb
push
dec
lods
cwtl
sahf
lods
addr16
dec
leave
mov
stc
mov
fdivrl
push
pop
pop
jns
push
enter
and
mov
lret
add
jmp
movb
sub
inc
cld
push
inc
xchg
mov
adc
cmp
jns
or
sbb
dec
dec
fadd
mov
add
in
enter
ja
xchg
sub
loop
sbb
mov
add
rcr
pop
test
cmpsb
jo,pt
add
add
xchg
adc
pop
inc
inc
xchg
sub
mov
inc
pop
outsl
popa
ja
fwait
push
stos
adc
dec
pop
scas
push
push
adc
mov
push
pop
repz
sahf
sub
stos
daa
xor
or
fsubl
hlt
testl
and
aad
pop
push
test
pop
push
add
pop
test
inc
adc
sub
out
mov
es
push
push
xchg
inc
jmp
jl
cwtl
jg
dec
dec
xor
mov
fs
add
rcll
sbb
push
xchg
add
pop
les
push
or
stos
repz
sbb
adc
scas
or
sbb
movsb
xchg
mov
push
pop
cmp
icebp
push
and
mov
push
push
lcall
add
fstpt
sub
movsb
mov
nop
out
jp
imul
je
mov
loop
ret
bound
dec
stos
xchg
movsb
mov
stc
mov
push
lea
in
je
add
push
sbb
stos
and
fidivrs
inc
je
xchg
fadd
inc
ficoml
lahf
idivb
std
pop
jae
xchg
cmc
stos
das
jno
pop
es
js
cmc
mov
inc
enter
push
lods
pop
out
lahf
pop
popa
cli
push
mov
jge
call
push
hlt
fldcw
cmpl
sbb
cmpsb
lods
mov
pop
jno
pushf
xorb
stos
cmp
repz
jp
out
push
outsb
js
adc
and
mov
push
test
mov
sbb
ret
lea
outsl
inc
ret
push
ds
sub
inc
sbb
stc
lods
jno
ljmp
cmovns
xchg
inc
and
arpl
fisttps
sub
xor
push
pop
fsubp
xlat
push
add
pand
clc
mov
fsubr
jae
mov
enter
out
ficoms
lods
ss
jp
xchg
xor
lcall
sbb
scas
push
enter
and
mov
inc
lods
push
xor
dec
jecxz
lds
lcall
mov
inc
lret
test
sbb
xchg
shrb
pop
xchg
pop
mov
rclb
xorb
roll
add
inc
icebp
aad
mov
insl
xchg
xchg
add
add
push
mov
cli
bound
push
cmpsl
dec
in
dec
out
sahf
out
pop
call
pop
push
inc
sub
jle
in
xchg
inc
xor
fs
ljmp
push
push
aaa
push
or
pop
test
fstl
cmp
out
insl
mov
pusha
cltd
stc
aaa
les
xor
mov
pop
aas
inc
push
jp
das
add
int
lea
mov
dec
testb
out
xchg
jmp
xchg
cmp
lods
add
jge
cs
mov
pop
ret
lret
pop
hlt
clc
inc
cmpsl
jge
push
imul
cmpl
outsb
adc
pop
push
loope
mov
lock
mov
xchg
lea
jle
aaa
pop
dec
lret
jbe
test
jecxz
pop
xlat
xor
mov
daa
dec
inc
mov
adc
movsl
ja
lock
out
add
arpl
aas
sub
scas
rcr
lods
or
sub
lock
iret
cmp
push
cld
jecxz
fsubrs
xchg
imul
push
cwtl
cmpsl
and
shl
lds
xchg
aas
dec
fdivp
jns
sbb
repnz
fmull
shrb
mov
fs
ret
cmc
mov
fistpl
xorb
cmc
cmpsl
sbb
pop
cmp
testb
mov
sbb
addb
jge
pop
add
pushf
cmp
dec
sbbl
cld
int3
ljmp
sarl
pusha
jg
lds
jns
sbb
or
pop
out
jg
jle
das
lcall
jl
test
inc
or
dec
mov
xchg
fdivl
aam
call
hlt
mov
jg
mov
mov
mov
xchg
call
dec
push
jnp
aad
sub
aam
shrl
xchg
rcrb
jle
sub
mov
jbe
es
adc
out
inc
insl
je
xchg
loop
pop
pop
sahf
push
mov
inc
xchg
cs
mov
mov
add
or
pop
sub
in
cmpsb
and
mov
xchg
push
xchg
push
imul
sub
jmp
and
scas
lods
test
mov
outsl
ret
add
xchg
hlt
arpl
cmp
into
mov
shll
mov
fs
xor
adc
enter
scas
pop
adc
test
jge
out
insl
xor
mov
loop
cwtl
int
pop
xlat
pushf
add
xlat
or
popa
add
ja
pop
stos
mov
lret
push
mov
imul
pop
sub
inc
push
jp
push
push
mov
mov
mov
jl
add
jle
dec
xchg
sbb
loopne
mov
sbb
enter
push
je
in
dec
adc
outsb
imul
xbegin
lret
mov
mov
pop
jo
push
outsb
iret
ficoms
cld
nop
sarl
sub
cltd
sbb
sub
xchg
mov
mov
xchg
loopne
std
push
mov
jae
mov
clc
mov
lret
jnp
lea
int
jno
inc
mov
mov
mov
negb
pop
lds
testl
pop
push
fistl
sbb
jl
out
stc
cs
push
mov
jmp
push
imul
jecxz
shrl
int
jg
jbe
pop
jae
jno
mov
mov
leave
int3
xchg
xor
sbb
ja
dec
in
mov
mov
cld
test
imul
add
add
pop
shlb
push
add
inc
scas
pop
cltd
test
imul
jne
sbb
add
or
mov
iret
mov
enter
data16
scas
inc
jmp
or
mov
push
inc
jmp
iret
mov
mov
dec
mov
out
mov
clc
dec
push
add
pop
xchg
mov
ret
daa
sahf
or
or
test
aaa
repz
and
jo
mov
cmpsl
pop
movsb
add
test
lcall
pop
sahf
mov
jmp
mov
add
mov
cltd
out
popf
sbb
fidivl
xchg
mov
test
add
out
xchg
inc
sub
inc
inc
inc
cmp
mov
test
pop
shrb
push
into
jbe
inc
jecxz
lret
cmp
cmc
pop
cmp
shll
push
mov
sub
in
or
xchg
push
adc
mov
sbb
inc
mov
dec
insl
mov
cmpsl
stc
out
jne,pt
in
and
sahf
inc
mul
sub
sub
push
test
fimuls
sub
movsb
xor
ds
rcr
lret
adc
mov
mov
insl
inc
pop
push
lret
push
shlb
pop
cmp
push
ds
push
adc
ret
lds
dec
jo
mov
ret
mov
inc
cmp
xchg
repnz
mov
adc
jo
mov
call
int
sub
nop
pop
pop
mov
dec
xchg
arpl
jg
adc
fstpt
dec
xor
mov
push
stos
mov
xchg
sbb
dec
int
push
test
push
inc
sahf
dec
pop
jp
out
ss
popf
mov
ret
adc
clc
int3
out
popa
jno
test
test
cltd
pop
sbb
mov
int
mov
std
lods
out
push
push
cvtpi2ps
jnp
shlb
jns
int
adc
rcll
push
call
fdivl
mov
mov
call
adc
sahf
mov
sbb
mov
mov
mov
jo
mov
cmp
popa
xor
push
xor
fistpll
insb
xchg
jle
xchg
jae
mov
les
scas
xchg
inc
jo
cmpsb
mov
add
int3
orb
data16
ds
mov
clc
push
in
int3
sbb
pop
fildll
inc
orl
push
xchg
jg
mov
nop
imull
sbb
push
test
push
push
cmpsb
add
out
jle
daa
addl
fldt
pusha
push
outsb
mov
xor
dec
les
cmp
jecxz
ss
mov
cmp
add
jo
cmp
jbe
dec
sbb
add
pusha
mov
bound
or
stc
mov
sbb
cld
jb
cwtl
add
jo
dec
jg
mov
mov
sub
jo
std
popl
add
and
mov
out
sti
outsl
cs
dec
xor
dec
push
and
xor
xchg
je
fldt
push
mov
add
or
inc
or
pop
loope
ss
dec
out
pop
add
mov
xchg
jle
test
cld
rcrb
mov
xor
xchg
cmpb
adcl
lahf
cmp
outsl
insl
idivl
aad
dec
inc
cmp
push
or
add
out
xor
cwtl
mov
je
hlt
imul
loope
sub
mov
and
jl
mov
xchg
lods
ljmp
xchg
fsts
popa
mov
and
or
ljmp
push
out
add
and
adc
into
mov
out
in
mov
adc
xor
mov
jge
addr16
inc
repz
jg
mov
jecxz
loope
pop
add
adc
icebp
idivb
sarl
cmp
aad
dec
insl
sub
scas
adc
cmc
roll
jmp
sub
inc
sub
hlt
add
push
push
and
adc
pop
inc
adc
outsb
std
test
aas
loope
mov
stos
sbb
pop
bound
mov
jmp
jecxz
push
push
mov
inc
pusha
inc
enter
jmp
push
jg
mov
cli
or
cmpsb
roll
lahf
mov
sarb
rclb
fbstp
int
test
call
pop
inc
dec
iret
cmpsb
push
xlat
sbbl
sbb
out
or
mov
sbb
hlt
clc
pop
fdivs
jp
sar
and
into
pop
js
pop
fprem1
es
dec
ret
push
adc
jle
mov
lock
pop
push
or
adc
jns
pop
call
stos
mwait
data16
ss
push
adc
aas
mov
popa
cli
lea
or
lock
adc
repnz
push
into
sbb
push
pop
mov
outsl
jbe
push
mov
xchg
jo
loope
aas
cmp
xorb
push
xchg
aad
xor
in
push
test
dec
push
daa
out
adc
xchg
sub
xor
push
push
sub
inc
loope
cmp
inc
mov
andb
jnp
mov
repnz
pop
add
rcl
pop
div
aas
sub
nop
mov
adc
and
or
push
xchg
inc
outsl
mov
push
mov
mov
xor
xchg
cmp
adc
push
adc
cmp
loop
lcall
ret
ret
sbb
and
add
push
mov
shll
sarb
mov
mov
scas
mov
dec
in
push
jb
nop
xchg
or
fidivs
fstl
aad
pop
xchg
enter
into
orl
ja
jl
xchg
sahf
repnz
and
inc
inc
aam
lcall
ljmp
cmp
cmp
inc
pop
add
arpl
test
mov
cmp
sbb
mov
daa
repz
scas
jnp
lods
push
in
fisttpll
into
stos
inc
push
adc
mov
fs
xchg
jmp
inc
sbb
fisubrs
aad
pop
repz
sub
push
inc
sbb
push
gs
or
je
jae
test
mov
insl
incb
mov
inc
fdivrl
sbb
or
jle
jmp
jbe
fld1
lock
cmp
push
xor
and
push
mov
loope
ror
xor
sbb
pop
cmp
cmpsb
sti
es
cli
dec
jns
sarl
aaa
jecxz
sbb
fucomp
cmp
mov
int3
repnz
jno
pushf
imul
adcl
lock
add
jle
cmp
movsl
inc
in
mov
dec
stos
ds
sub
scas
mov
xlat
xchg
loope
iret
push
hlt
stc
xchg
bnd
leave
adc
mov
xor
jne
ja
jg
idivl
test
int3
lock
adc
mov
adc
adc
enter
pop
out
xor
adc
repz
xchg
jno
pop
or
add
stos
pop
jbe
out
mov
jmp
mov
mov
and
dec
jecxz
pop
data16
lods
mov
in
inc
or
sub
pop
push
test
std
sahf
outsb
mov
push
mov
sti
dec
sti
adc
popa
dec
dec
add
xchg
jecxz
jecxz
dec
and
sahf
xchg
icebp
ret
push
jmp
int
dec
sbb
xor
mov
pop
sti
dec
mov
dec
cmpl
cmp
sbb
nop
lods
mov
adc
cmp
cwtl
subb
lahf
add
add
cmp
movsb
jge
imulb
lods
mov
inc
jns
mov
ljmp
aad
mov
add
decb
jae
mulb
arpl
add
and
orl
inc
ficoml
scas
gs
mov
or
sbb
pop
imul
inc
stos
push
pop
xor
movsl
and
push
scas
cli
mov
push
sbb
and
pop
std
dec
xchg
push
test
lock
icebp
daa
dec
imul
ficoml
xor
dec
mov
arpl
jns
scas
xor
jl
fsts
ret
arpl
jmp
dec
repnz
repnz
sti
adc
out
adc
divl
adc
fistps
repz
out
arpl
in
pop
inc
cs
mov
cmpb
cmp
jbe
in
and
xor
xor
adc
mov
xor
push
and
mov
mov
ret
out
inc
push
adc
lods
push
push
aas
dec
xchg
clc
pusha
mov
cwtl
jno
or
ljmp
addr16
xor
pop
inc
cmpsl
stos
push
and
pushf
stc
mov
mov
cmp
sub
pop
cmpsb
fists
and
or
jg
xor
test
mov
pop
stos
sarl
xchg
out
mov
push
mov
pop
cwtl
iret
push
adc
xchg
out
xchg
pop
xchg
subl
dec
pop
lock
loop
es
xor
adc
or
shll
mov
pop
testb
mov
imul
sub
aad
sub
cmp
or
icebp
xlat
mov
arpl
insl
imul
mov
pop
push
sbb
imul
call
imul
ljmp
fst
repz
mov
int3
outsl
mov
and
sbb
pop
outsb
push
rclb
dec
mov
lret
ret
insl
nop
dec
or
xor
sbb
pop
xchg
sbb
clc
outsl
lds
lret
push
jne
jl
dec
adc
lods
xor
xor
pop
xchg
push
das
iret
xchg
dec
int
imul
inc
mov
push
ss
inc
xor
into
xor
ret
mov
mov
xchg
xchg
mov
push
aaa
add
hlt
push
aam
push
xor
pop
jge
dec
pop
inc
sub
mov
jl
jg
dec
popa
dec
out
push
shll
clc
push
into
pop
xor
clc
add
lea
jg
sbb
pop
xchg
push
lret
pop
ja
xor
inc
sbb
xor
xchg
in
stos
push
ljmp
sub
cmp
fs
inc
test
push
jo
mov
enter
xchg
les
pop
mov
pop
xchg
movsl
add
pop
push
adcl
adc
stos
cmp
fwait
and
repz
sarl
xchg
push
std
out
daa
shlb
xchg
aaa
fsubrs
daa
cs
enter
mov
mov
adc
imul
lds
mov
cmc
inc
sbb
repz
cmc
sub
and
in
push
add
xor
and
lods
ds
jecxz
adc
int3
pop
pop
or
or
xchg
lock
adc
jbe
xchg
inc
in
insl
pop
and
out
aad
fadds
test
fistps
cmp
push
stos
cmp
setns
aaa
movsl
xorl
pop
imul
mov
cmp
fists
pop
mov
iret
dec
sbb
and
add
jnp
das
mov
add
fistpll
and
jns
in
cmp
cmp
ja
adc
pop
dec
dec
jmp
mov
cmpsb
enter
repnz
mov
push
cld
iret
mov
loope
xchg
mov
sbbb
and
mov
leave
inc
mov
or
lds
sub
stc
cmp
fildl
pop
repnz
je
jo
test
mov
cmp
rcl
and
jecxz
bound
in
dec
testb
or
cmpsb
pop
rorl
fisttpll
cli
pop
sbb
ss
les
sbb
clc
pop
jno
pushf
cmp
sub
sarb
int3
push
je
xchg
or
jb
enter
lock
mov
ret
jb
inc
xor
scas
inc
sbb
cmp
icebp
xchg
data16
sub
in
and
mov
mov
sbb
mov
fs
and
mov
sub
roll
pop
sub
and
xchg
cmpsl
adc
cmp
lea
mov
aad
sbb
daa
sbb
insl
insb
rol
push
jge
dec
mov
pop
arpl
pop
push
fs
scas
insl
cmp
push
andb
or
dec
adc
ds
mull
jb
xchg
adc
mov
inc
popa
sbbb
fistps
mov
sub
fwait
popa
jl
mov
dec
mov
push
scas
jne
mov
mov
sub
ds
aam
adc
add
push
dec
jbe
mov
adc
jns
cmpsb
dec
testl
leave
pop
jnp
push
lods
or
lret
pop
jl
jl
dec
loope
sbb
jns
or
xchg
inc
mov
mov
scas
mov
arpl
loop
sete
pop
subl
add
xchg
add
clc
xor
mov
nop
jne
xchg
pop
loope
jmp
test
dec
sbb
out
insl
out
lret
cmpsl
push
add
and
int3
das
mov
and
pusha
lret
loope
or
clc
in
push
je
popa
lret
mov
pop
sahf
lds
std
mov
outsl
stc
das
lret
mov
sub
or
or
sbb
aaa
add
arpl
pop
lods
in
xor
xchg
mov
mov
jbe
imul
jg
pop
xlat
push
lcall
loop
mov
sub
inc
mov
jecxz
sarl
mov
mov
out
jae
sub
arpl
lods
add
icebp
aam
test
push
shrl
mov
adc
pusha
jg
mov
ljmp
dec
mov
add
sub
sbb
sbb
fdivr
call
and
std
loopne
sbb
iret
jmp
adc
scas
push
mov
scas
mov
mov
in
pop
jne
jae
movsb
aas
and
lahf
xor
xlat
in
scas
pop
rorl
aad
fsubrs
testb
add
sub
insb
popa
adcl
cmp
cmp
dec
cmp
sub
sbb
aad
aad
movsb
mov
sbb
xchg
lcall
addl
ja
fdivrs
lods
cmp
enter
push
movsl
negb
dec
push
lock
ss
insb
mov
dec
and
inc
push
mov
mov
jg
rcll
push
and
push
lea
adc
aaa
jno
rorb
test
lret
fwait
test
clc
lcall
mov
add
mov
xchg
scas
test
icebp
mov
inc
adc
out
push
andb
xor
imul
hlt
fsubp
or
mov
fcompl
outsb
divb
and
mov
or
ret
sub
fs
iret
dec
repnz
xchg
pop
cmp
pushf
lock
outsl
add
pusha
sub
leave
or
out
cmp
cmp
mov
mov
sarb
and
jmp
shlb
pusha
out
dec
dec
sbb
adc
into
les
std
pop
mov
cmp
jne
push
push
mov
add
dec
incb
lret
and
fdivl
xchg
orl
push
fisttps
inc
xchg
and
xchg
mov
jg
inc
adc
inc
push
push
jns
cmp
xchg
shrb
xchg
sub
lods
jle
cmpsb
cwtl
stos
pop
negb
cmp
adcb
into
in
shrb
mov
xor
xchg
dec
test
jg
pop
rolb
dec
loop
and
in
jns
imul
ja
outsb
jnp
rcrb
loope
mov
mov
push
jae
sub
les
jbe
mulb
inc
insl
insl
out
call
pusha
or
and
imul
jmp
push
clc
xor
pop
es
push
adc
jns
sbb
mov
sbb
imul
cmp
fmull
pop
pop
lds
gs
int
pusha
aas
xchg
push
fmull
mov
insb
inc
xchg
push
frstor
aad
and
lock
adc
xchg
in
cld
mov
cld
outsl
jecxz
in
mov
cwtl
loope
xchg
outsb
movsl
mov
xchg
sub
shll
xor
imul
mov
inc
and
in
hlt
mov
aas
mov
sbb
cltd
cmp
or
cmp
xchg
xlat
inc
insl
addl
sub
xor
sbb
dec
dec
push
add
and
pop
leave
cld
stos
adc
popf
aas
andb
mov
add
ljmp
std
push
ficoml
add
daa
add
dec
stos
pop
pop
popf
fisubl
dec
leave
pop
sarb
push
idivb
xor
pop
mov
cmpl
test
or
out
inc
into
lods
lds
lahf
pop
cmp
loope
jge
jne
xor
insb
lods
adc
jl
mulb
push
aaa
fdivl
mov
add
and
shrb
sbb
xchg
xlat
inc
pop
inc
test
dec
add
sbb
sbb
jae
aas
mov
das
mov
pushf
mov
cltd
das
std
sub
jne
mov
test
push
out
mov
fincstp
or
in
adc
aaa
cmp
cmpsl
arpl
jp
cmp
es
sbb
popa
fmull
xchg
shrb
imul
push
adc
and
jns
dec
push
popf
iret
push
adc
mov
lcall
ds
fiaddl
call
popa
test
bound
fidivrs
js
cmp
loope
lods
inc
cld
fidivs
jg
test
push
rclb
int
repnz
data16
xchg
mov
adc
push
mov
int3
xchg
cld
lea
and
js
mov
xor
ds
lret
dec
fdivs
push
xchg
xchg
test
dec
and
add
repz
pop
popa
jne
out
insb
add
popa
and
into
jl
lock
dec
xchg
cwtl
test
mov
stos
je
cli
loop
or
inc
jmp
jle
push
sbb
push
mov
fistps
jae
subl
or
cmpsb
pop
jmp
leave
dec
popf
scas
iret
push
hlt
push
cmp
ss
aas
movsb
push
xor
sub
test
xchg
lods
sub
mov
sub
popf
and
xchg
xor
sbb
jg
repnz
push
cmpsl
js
jle
pop
icebp
xchg
mov
popf
pop
adcl
xchg
lret
pop
std
xchg
or
pop
mov
adc
mov
popf
stos
push
mov
jnp
mov
aas
bound
xlat
adc
xor
mov
jl
mov
mov
ret
dec
jle
push
test
cmpsl
orl
imul
mov
xchg
add
mov
mov
shll
mov
std
out
mov
pop
gs
xchg
rorb
xchg
push
scas
xor
testl
jb
and
pop
leave
sub
add
pop
imul
ljmp
aas
fnsave
fs
push
adc
popa
mov
aam
jnp
into
pusha
sti
mov
test
xchg
fdivrl
daa
test
test
jmp
mov
inc
dec
push
mov
movsb
es
mov
mov
repnz
in
push
mov
lahf
jg
push
hlt
leave
and
xor
shlb
mov
or
in
cmp
mov
fs
iret
cmp
addr16
mov
fsubrl
lods
push
mov
lods
arpl
test
sbb
cmpsl
jo
push
inc
mov
in
cld
sub
in
pushf
fs
jecxz
out
inc
inc
into
cmp
cmp
sbb
neg
jecxz
adc
in
sbb
cmpsl
add
xchg
iret
idivl
mov
xchg
je
pop
outsb
int3
jle
lods
mov
dec
divb
xor
pushl
pop
sarl
xor
fsubrp
add
add
add
std
icebp
push
pop
adc
cmp
push
sub
insl
xchg
push
jb
jecxz
rcrb
dec
xlat
in
jp
sub
data16
xchg
or
int3
in
leave
pop
xchg
imulb
inc
rcrl
fdivp
lcall
scas
pop
add
lcall
jg
xlat
pop
push
mov
cli
sti
cmp
shll
mov
mov
mov
dec
add
popf
lds
mov
cld
adc
std
movsb
lds
shlb
dec
hlt
gs
es
add
sahf
or
mov
add
aam
push
pop
in
pop
sbb
or
jmp
fistps
popa
lahf
in
imul
mov
test
jl
int3
and
and
imul
fsubrs
loope
test
loopne
cmp
adc
in
sbb
mov
addl
mov
mov
in
cmp
adc
pusha
mov
xor
lock
mov
pop
sbb
stc
orl
sbb
push
push
or
adc
out
mov
inc
sti
and
ja
inc
scas
loopne
jl
ret
jno
fistpll
and
sub
jecxz
dec
xor
cmpsb
popf
jmp
subl
aad
inc
scas
out
sub
sbbb
jae
in
stos
xchg
fwait
xor
jp
pop
std
imul
int3
test
rcrb
movsb
jno
int3
adc
mov
jno
sahf
in
jge
xchg
xchg
dec
push
fldenv
add
jbe
push
xchg
pusha
ret
add
add
mov
cmp
mov
xchg
fidivl
call
or
fs
lea
fists
jecxz
push
sub
cmpsl
popa
mull
jp
daa
push
mov
sbb
push
sub
cld
xchg
mov
lret
mov
out
popa
xlat
mov
add
pop
mov
pop
mov
mov
fidivs
mov
or
ja
adc
mov
ja
jo
cmp
cmpsl
pop
mov
inc
test
jnp
pop
or
out
mov
daa
andl
inc
mov
adc
gs
int
pop
xchg
and
push
and
fwait
mull
xchg
pop
fwait
inc
stc
xchg
mov
sbb
push
mov
sub
rcll
imul
sbb
outsb
adc
push
mov
xchg
xchg
data16
aam
fucom
jb
or
iret
add
jl
adc
pop
adc
addr16
cli
or
divl
shl
dec
in
xor
sbb
push
push
xchg
inc
out
ret
push
mov
into
lcall
mov
rcl
xor
dec
orb
aad
or
jb
fidivrs
jbe
imul
or
jg
jg
insl
std
test
call
repnz
pop
mov
dec
push
ret
mov
jp
aam
push
mov
sti
outsl
aam
fcompl
xor
or
sub
into
mov
movsl
xchg
out
test
hlt
mov
daa
sub
push
repz
sub
sub
pop
or
lret
xor
xor
stc
and
fwait
stos
push
loop
mov
jmp
lret
sbb
xchg
mov
inc
mov
pop
int
pop
mov
xchg
call
mov
ret
cld
mov
les
mov
cmp
movsb
xchg
out
pop
and
cld
mov
ret
je
adc
fyl2x
insl
js
lahf
jmp
enter
scas
incb
push
hlt
add
push
xor
jae
pop
ds
test
in
in
mov
aas
pop
lea
xchg
sub
jae
lods
dec
sbb
push
mov
add
lds
adc
lea
xlat
imul
aas
fs
fcoms
inc
je
mov
cmp
mov
ljmp
std
sub
adc
adc
imul
sahf
xlat
cmp
movsl
xchg
mov
testb
arpl
mov
and
push
test
cld
rolb
gs
or
insl
adcl
jl
jp
aaa
push
mov
and
fildll
int
fcmovbe
cmpsl
xchg
lods
fdivs
stc
js
push
mov
ficomps
in
into
sub
pushw
imul
imul
prefetch
or
add
int3
adc
adc
and
xchg
call
test
sub
adc
outsl
cs
stos
jb
ror
dec
adc
pop
xchg
inc
lret
xor
cwtl
sbb
xchg
push
push
add
mov
mov
daa
pop
out
adc
jne
mov
mov
inc
adcb
cmp
mov
shlb
mov
fists
mov
out
insb
push
mov
cmp
daa
cmpsb
imul
ds
out
add
push
aaa
add
add
mov
cmc
aaa
and
mov
jecxz
mov
fstl
push
lcall
enter
mov
mov
inc
xor
cmc
pusha
sub
jae
lret
mov
mov
movsl
movsl
ror
lods
cmp
dec
mulb
inc
pop
push
cmp
js
cmpb
mov
xchg
test
inc
lock
das
test
sbb
mov
dec
xchg
inc
int3
mov
sbb
jmp
sub
rcrl
push
and
push
add
add
and
push
test
push
cmp
mov
jbe
inc
stc
les
push
cltd
loope
xchg
icebp
les
mov
jmp
ss
lods
fildll
push
int3
sbb
cmp
aas
or
xchg
jne
xorl
jns
inc
fcomps
xor
xlat
dec
cmp
out
in
iret
adc
push
mov
or
push
jge
sub
xor
into
sub
mov
fistl
mov
mov
test
daa
sbbl
clc
pop
jl
mov
push
mov
pop
data16
gs
pop
in
movb
nop
ljmp
bound
mov
mov
pusha
call
xchg
lret
jae
jne
add
xchg
addr16
mull
push
mov
xlat
xchg
cs
loopne
cs
push
lods
inc
mov
mov
xchg
lret
arpl
add
hlt
sub
sbb
push
inc
dec
mov
lock
mov
scas
mov
sbb
or
mov
faddl
and
xlat
mov
test
jb
pusha
pop
leave
shlb
mov
in
sub
pop
push
lcall
sub
fsubl
mov
pop
jb
popa
mov
imul
dec
mov
and
and
sbb
mov
mov
mov
xchg
sub
jo
out
test
enter
and
scas
sbb
xchg
inc
mov
jl,pt
cltd
test
cmc
popf
pop
push
popa
int3
mov
push
inc
mov
jno
sub
push
cli
and
dec
test
outsb
sbb
jo
xchg
adc
mov
loopne
jg
or
sub
xlat
jmp
fsub
inc
fdivp
sbbb
mov
lea
cmp
xchg
sti
movb
icebp
mov
out
shr
scas
sarb
push
mov
mull
xor
inc
in
movsb
arpl
mov
dec
sbb
in
dec
inc
cmpsb
sbb
loop
lods
cld
data16
cmp
in
mov
xchg
outsb
in
jmp
mov
or
fdivp
inc
add
lret
je
cmc
in
std
test
push
lods
jl
popf
sbb
xchg
js
dec
mov
fisubl
mov
scas
mov
psubusw
ja
cmp
pushf
leave
ja
fdiv
xchg
fsts
mul
pushf
mov
mov
add
inc
mov
ja
movsl
mov
sub
or
pop
adc
in
pop
andl
adc
scas
mov
lds
and
xchg
jbe
cmp
imul
cmp
inc
mov
fistl
add
out
add
adc
and
jg
add
xor
shll
loopne
xor
inc
dec
inc
shl
cld
lods
or
notb
mov
add
add
shrb
ror
jmp
and
pop
mov
scas
jbe
mov
push
xchg
mov
lods
jmp
hlt
xchg
mov
mov
notb
jb
pusha
repz
sub
shr
mov
aaa
cmp
or
mov
adcl
dec
mov
or
sbb
faddp
arpl
mov
sahf
adc
sub
mov
xchg
adc
sti
mov
lcall
loope
xlat
or
lea
fnop
xchg
push
push
adc
xor
xchg
pusha
and
iret
ficoml
mov
std
push
jbe
inc
inc
jae
adc
in
mov
mov
mov
test
lahf
cld
mov
les
mov
and
adc
sbb
in
data16
lahf
lret
xchg
fdivrl
fsubl
push
xchg
xchg
shll
mov
jl
jge
lds
ret
out
into
flds
mov
ret
test
fistpl
rcll
in
pushf
ds
jge
mov
lcall
dec
push
stos
pop
cmp
lcall
xor
sub
jg
and
push
mov
scas
inc
jno
jb
push
dec
xor
inc
mov
pop
lods
pop
mov
xor
movsl
mov
add
add
aaa
xchg
mov
xchg
stc
cmp
mov
aaa
jb
mov
fcomi
xchg
pop
lahf
out
fildll
dec
cmp
lret
mov
daa
or
xlat
lcall
mov
push
xor
scas
aas
mov
fs
leave
sbb
adc
sub
adc
loop
aaa
stos
sbb
imul
pop
push
sub
pop
outsb
lcall
add
jecxz
xor
xchg
dec
hlt
xor
pop
push
sub
in
and
xchg
jp
dec
adc
or
inc
adc
jbe
in
sbb
mov
inc
loop
jmp
inc
insb
adc
mov
sbb
add
or
nop
popa
jbe
decb
aas
push
xor
jmp
xor
cmp
dec
xchg
insl
roll
bound
pop
dec
es
lods
add
loopne
mov
inc
lea
xor
sbb
xchg
pop
rorl
push
sahf
mov
mov
add
cmpl
jmp
pop
adc
lret
lds
addr16
add
aaa
cmp
std
cli
and
adc
or
testb
pop
add
movsl
mov
xor
imul
xor
addl
dec
jnp
xchg
and
inc
enter
push
leave
testb
mov
pop
dec
fsubr
jge
jg
lods
sti
sub
jmp
ljmp
jo
mov
inc
mov
push
sbb
es
cwtl
push
mov
andb
sub
cmp
aam
sub
mov
add
in
fs
data16
mov
jo
imul
cltd
movsl
jbe
dec
shlb
and
cmp
mov
fwait
pop
lret
imul
jmp
pop
or
sub
scas
inc
xchg
movsl
stc
pop
mov
and
xlat
xchg
push
add
fstpt
lret
and
ficoml
cmp
inc
adc
std
xlat
je
mov
push
mov
cli
inc
sub
add
out
pushf
jae
shl
insb
mov
mov
inc
bound
mov
sub
cltd
xor
mov
xor
movsl
cmp
enter
or
xchg
scas
pop
mov
mov
dec
testb
pop
xchg
jbe
cmc
in
data16
jne
data16
cs
das
cmp
adc
xchg
dec
xchg
inc
stos
das
cwtl
sbb
or
xchg
mov
add
aaa
mov
cmp
add
icebp
nop
iret
xchg
push
movsl
xchg
movsb
dec
roll
push
mov
mov
xchg
out
pop
sahf
icebp
cmp
pop
imul
dec
jl
lods
push
jl
push
jae
pop
in
or
jecxz
xor
lahf
add
sbb
js
mov
sahf
fwait
aad
mov
std
lea
or
push
and
je
jmp
or
xchg
jbe
xchg
xchg
fs
addl
into
cmp
nop
lods
mov
sbb
fiadds
sar
aad
xor
and
in
and
and
es
inc
mov
inc
dec
sub
jmp
into
pop
xor
add
bound
and
mov
adc
or
inc
inc
mov
xorb
sbb
sub
adc
icebp
fdivl
sbb
xor
je
jle
mov
mov
push
jle
mov
or
mov
in
sbb
pusha
inc
or
enter
shl
add
enter
jecxz
js
jl
sbb
sub
push
cld
pop
dec
insb
cld
pop
lds
xlat
xor
jnp
jno
cmpsl
cmp
dec
and
push
test
mov
or
add
lea
movl
jecxz
sarb
mov
and
popa
lret
mov
and
add
dec
fdivrs
mov
cs
sub
lock
adcl
sub
or
jb
pop
lcall
imul
push
add
pop
sub
lahf
frstor
repz
push
or
xchg
cltd
or
or
int3
mov
push
mov
adc
out
pop
inc
lea
std
stos
sbb
test
in
and
cmp
or
mov
pushf
cmpsl
cmpsb
mov
es
imul
pop
jmp
in
pop
out
pop
sbb
testl
in
and
loopne
or
push
inc
mov
xorl
shl
mov
jge
pushf
mov
jl
push
ss
inc
stos
jae
mov
lret
mov
mov
pop
lods
aas
in
sbb
xchg
cmpsl
mov
idiv
shl
nop
mov
xorl
mov
pusha
cmp
jl
dec
addr16
inc
scas
mov
mov
hlt
sbb
loopne
stc
mov
repnz
repnz
sbb
lcall
pop
je
js
popf
xchg
or
out
movsl
call
sub
lea
pop
rep
and
mov
push
pop
mov
jo
sti
xchg
cmp
xchg
mov
adc
push
inc
push
lock
pop
cmp
sbbb
sub
out
stc
loopne
mov
jns
lods
dec
icebp
rorb
xchg
adc
push
jp
cltd
call
add
into
ret
out
jmp
data16
sbb
outsl
sub
test
jo
sbb
jp
add
out
out
sarl
pop
mov
andb
enter
xchg
repnz
mov
pop
dec
pop
jns
inc
insb
xchg
pop
add
out
push
jo
mov
inc
jg
jae
sbb
add
sub
adc
mov
and
movsl
cs
inc
fisttpll
cmp
sub
cmp
mov
xchg
pop
inc
fwait
aad
or
adc
sbb
out
inc
lret
jecxz
sub
sahf
and
sbb
xchg
movb
xor
cwtl
push
dec
push
scas
loope
dec
mov
cs
sub
out
in
out
ja
mov
cmpsl
stos
jg
or
movsl
sub
sub
fisubrs
jb
inc
fmuls
and
add
push
xchg
sub
mov
cmpl
lret
xor
add
and
repnz
cmp
mov
aas
mov
ficoml
out
adc
shll
or
fdivrs
jno
pop
lods
lock
jbe
mov
addr16
rcl
call
mov
dec
xchg
cld
into
cmpsl
sub
enter
mov
aaa
cmp
ds
push
in
sub
or
xorb
shl
aad
xchg
push
cs
cmp
inc
rcrb
pop
aad
lcall
cltd
js
in
sub
pusha
mov
adc
and
imul
mov
pop
mov
inc
sbb
xchg
mov
mov
xchg
clc
daa
push
lds
push
xor
push
icebp
and
push
xchg
dec
cmc
jnp
das
or
pushf
out
les
fwait
sub
pop
and
lods
js
jbe
inc
add
fists
push
out
pop
popf
test
adc
mov
mov
test
enter
test
cwtl
jmp
dec
pop
in
push
xchg
push
in
or
add
fists
cmp
xor
cmp
adc
ds
outsb
neg
out
lret
jbe
dec
mov
add
mov
mov
inc
push
xor
insb
and
mov
out
inc
loop
xorb
ja
fldl
push
jno
or
es
cmpsb
mov
pop
inc
cmc
xchg
rol
out
shll
mul
cmpsb
loop
add
dec
xlat
hlt
dec
es
sbbb
aam
movups
xor
xor
mov
lret
shlb
movsb
je
aad
xor
fdivrs
out
jae
xor
inc
imul
mov
mov
jnp
rcrb
inc
lock
cs
subl
je
adc
aaa
jno
mov
jge
call
ss
out
andl
jmp
sbb
sbb
orb
ds
scas
loop
stc
sbb
mov
fcomps
mov
stos
mov
aaa
push
adc
sbb
repnz
push
mov
jbe
aas
and
xchg
mov
adc
or
adc
cli
mov
dec
sbb
push
adc
mov
insl
movsl
pop
stos
cltd
dec
lcall
dec
xor
fcoms
push
sub
adc
push
andb
movsb
push
mov
xchg
jl
inc
sub
pusha
and
outsb
xor
mov
mov
pop
shrl
jo
jle
adc
andb
pop
adc
xchg
pop
xor
clc
push
pop
shll
bound
mov
cmp
decb
out
jle
xchg
pop
sub
add
mov
mov
fildll
in
adc
iret
roll
dec
pop
sarl
sbb
dec
jne
lcall
icebp
repz
mov
inc
stc
out
jmp
into
cmpsl
clc
xchg
sbb
sub
adc
inc
outsl
mov
push
xchg
clc
dec
jnp
sbb
or
mov
mov
ja
jnp
mov
sub
adc
test
dec
jo
push
mov
gs
call
lret
mov
adc
xlat
imul
add
and
in
and
movsl
mov
pop
mov
mov
lods
clc
stos
mov
repnz
outsl
mov
sub
xchg
jne
xchg
fadd
dec
mov
movsl
lahf
dec
lods
loopne
out
jp
test
das
ds
std
jmp
sbb
xlat
fdivrs
mov
jl
pop
fs
mov
sbb
mov
or
stos
testl
jnp
sub
mov
roll
inc
pop
push
sbb
ja
leave
fisttpll
xor
add
rcl
in
push
adc
cmp
loopne
mov
iretw
push
push
dec
push
lea
out
push
adc
push
cmpsl
sahf
popf
lods
clc
cmpsl
mov
cmc
mov
outsb
mov
xchg
in
test
add
xor
mov
push
dec
push
sub
out
lret
rcrb
mov
imul
lret
outsl
adc
lcall
outsb
mov
mov
jo
daa
adc
fadds
push
inc
xor
std
inc
xchg
and
push
hlt
add
pop
sbb
xlat
cmpb
mov
pop
dec
jecxz
roll
sbb
xchg
notl
add
mov
xchg
lods
imul
push
rclb
adc
loop
int3
push
les
leave
in
mov
inc
ret
and
sub
ljmp
std
jl
cmp
mov
test
scas
repz
jnp
out
movsb
mov
push
fs
adc
jecxz
mov
sub
ds
cmp
ja
popf
int
popa
cmc
mov
test
ds
push
mov
or
sbb
and
jp
adc
xor
sbb
or
cmpsl
mov
aas
jecxz
popf
cmp
fwait
mov
stos
std
movsb
popa
jmp
adc
cmc
add
mov
cmpsb
dec
loope
cmp
adc
or
mov
in
pop
push
dec
adc
imul
inc
xor
ret
jae
int3
xlat
lret
ret
lahf
je
jle
and
aad
lods
mov
rolb
mov
add
sbb
lahf
lret
neg
mov
sub
add
out
jne
add
push
in
addr16
test
ss
and
pop
mov
loopne
and
sub
dec
push
adc
mov
adc
andl
push
pop
mov
loopne
xchg
hlt
fwait
pop
pop
jp
test
js
cmpsl
mov
cmp
pop
out
adc
sahf
dec
xor
repnz
shll
jae
add
fcoml
loope
or
cmp
mov
mov
stos
insl
shll
sbb
hlt
and
aas
add
pop
fadds
xchg
sub
mov
nop
cs
pop
addr16
pop
cli
mov
inc
push
in
imul
in
sbb
gs
in
lock
ljmp
aam
jno
scas
jmp
loopne
out
xor
cmp
fwait
jecxz
int
popa
sub
ret
test
xchg
mov
and
ds
mov
adc
imul
rcr
inc
sub
jno
sub
mov
adc
fucom
and
xchg
arpl
and
fists
jp
loope
xacquire
js
sbb
cmp
inc
and
mov
sub
or
fsubrl
xchg
or
xor
jne
dec
mov
arpl
push
stos
adc
and
push
sub
adc
push
mov
mov
js
leave
xchg
sbb
dec
xchg
loop
loop
jbe
xlat
adc
push
jb
mov
imul
cmp
aas
push
xor
mov
xchg
dec
sti
jle
xchg
pusha
push
pop
jne
cmpsl
shl
mov
mov
addr16
inc
add
pusha
pop
cli
adc
arpl
or
out
pop
mov
mov
aaa
in
cmpsl
cmc
push
push
dec
inc
adc
sub
stc
subl
mov
mov
inc
repz
sbb
sti
push
adcb
imul
push
xchg
pop
int
dec
mov
fisttpll
push
add
dec
mov
pushf
imul
cmp
scas
jg
xchg
sbb
scas
and
inc
imul
pop
xor
inc
add
movsb
and
lcall
xchg
addr16
loopne
push
jno
push
adc
push
mov
pop
fisttpll
xor
xor
pop
fs
inc
ljmp
sub
and
push
in
je
in
ljmp
lret
iret
aad
xchg
inc
and
je
xor
dec
push
mov
movsl
insb
push
cmp
dec
bound
gs
lret
push
cmpsb
lock
sahf
fildl
sub
sub
jbe
inc
adc
jecxz
inc
jb
push
add
mov
and
jnp
out
clc
xchg
in
clc
dec
call
and
and
xchg
pop
ds
cmp
jge
or
mov
pop
mov
pop
ljmp
inc
mov
sub
xor
mov
and
cmp
cmp
lods
das
mov
push
cmp
push
pop
mov
sub
mov
andl
aas
rcrl
cld
dec
lret
push
insb
rorb
sarb
in
enter
fistl
gs
jo
mov
aas
rclb
dec
enter
das
jae
movsb
adc
sbb
lret
and
jb
ret
out
stos
mov
and
sahf
scas
sahf
inc
repz
inc
push
mov
scas
inc
pushf
lea
xchg
sti
push
xor
ja
and
js
mull
mov
inc
sub
pop
lret
call
push
dec
jno
mov
in
adc
xor
clc
mov
and
shrb
ret
pop
out
imul
pushf
sahf
push
ljmp
mov
pop
add
mov
movsl
cwtl
aaa
or
arpl
negl
dec
inc
sbb
mov
inc
mov
enter
mov
test
lds
xchg
jg
sbb
mov
jns
pop
mov
data16
inc
ret
into
xchg
xor
adc
leave
lock
out
lods
test
fidivrl
dec
int3
gs
fsubrl
mov
sub
push
lcall
cmpsb
rcrl
mov
adc
and
mov
out
icebp
sub
dec
jno,pt
outsb
fmuls
xor
jnp
leave
mov
dec
lahf
aam
jb
es
rcrb
push
neg
out
scas
fcomi
pop
divl
and
dec
insl
mov
into
push
xchg
fsubl
outsl
fcmovbe
jecxz
mov
rorb
insb
in
or
mov
push
pop
dec
xchg
insb
add
sbb
stc
sub
xchg
and
xchg
sbb
jmp
fiaddl
call
sbb
sti
and
pushf
lea
jae
pop
loopne
push
test
cmpl
xchg
pop
fistpll
outsl
int3
jno
mov
mov
ffreep
popa
mov
scas
jle
inc
push
out
dec
scas
ja
pop
repz
inc
mull
push
or
xchg
xor
imul
adc
mov
std
push
lret
add
jns
sbbb
inc
stos
hlt
lock
test
add
cmc
es
cwtl
cld
mov
or
push
in
xor
ret
mov
mov
mov
push
cmp
sbbl
icebp
imul
sub
loope
cmp
inc
push
cwtl
and
lea
cs
mov
pop
cwtl
mov
xchg
dec
das
xor
and
dec
fsubl
mov
insl
xor
adc
ds
jle
stos
sbb
ljmp
push
rcr
es
jecxz
jbe
jecxz
shl
mov
mov
adc
sub
mov
mov
shrl
out
xchg
ja
push
mov
mov
mov
and
xlat
inc
mov
shlb
or
and
lret
js
cmp
movsb
movsl
push
xchg
mov
repz
mov
dec
scas
lea
sub
add
das
nop
dec
cmpsl
in
add
or
and
jae
lahf
fldcw
int
test
pushf
add
push
jg
and
inc
sti
inc
sbb
ficompl
fstp
int
xor
mov
sub
jp
aaa
insl
cmp
jmp
add
push
flds
clc
into
jecxz
cmc
and
add
stc
mov
pop
ret
pushf
fsubrs
icebp
adc
rcr
inc
loopne
in
loop
xor
loop
push
pop
cmp
push
add
fs
sti
lret
pop
daa
mov
movsb
stos
rcll
push
xchg
dec
fidivrs
push
int3
sbb
aas
cmp
popa
pop
jne
xor
mov
jnp
cli
popf
or
lcall
les
mov
arpl
pop
ja
add
ret
mov
mov
out
jbe
cld
cwtl
test
mov
je
mov
aaa
jge
movsb
add
and
hlt
inc
push
hlt
test
and
sub
fcoml
push
movsl
add
scas
add
mov
pusha
popf
dec
in
mov
jno
outsb
pop
ja
add
pop
jns
sub
pop
adc
jno
lods
inc
popf
inc
jmp
cmc
sysret
bound
out
xchg
dec
test
push
dec
adc
mov
sub
lds
cmc
lods
sbb
rolb
repnz
dec
dec
pusha
cmp
js
inc
jmp
inc
mov
test
xchg
arpl
push
jmp
cmp
sub
cmp
push
jg
lahf
xor
mov
aas
adc
lret
cld
arpl
add
out
into
adc
inc
push
je
loopne
adc
xlat
cmpsl
stc
jns
cwtl
dec
inc
enter
pop
loope
gs
enter
adc
push
sbb
es
outsl
mov
ja
push
int
cmp
cld
in
jno
mov
add
jl
add
dec
push
dec
dec
push
pop
push
ret
sbb
cwtl
mov
mov
arpl
mov
mov
and
mov
mov
in
inc
ret
scas
sbb
lods
popf
mov
aas
fs
mov
jge
incb
out
or
shrb
jo
mov
mov
jns
xchg
ja
loope
pusha
outsl
push
mov
and
dec
jg
dec
out
jae
pop
pop
lret
out
leave
mov
pop
mov
mov
in
lret
xchg
out
cmc
cmc
push
push
mov
je
push
push
pop
sbb
imul
pushf
mov
incb
lahf
mov
enter
mov
movsb
jle
bnd
or
and
add
cmp
pxor
repz
bound
jnp
push
mov
loope
xchg
xor
mov
sbb
movsb
push
loopne
mov
hlt
sbb
sub
stos
mov
in
les
pop
xchg
push
dec
cmpsb
bound
dec
adc
scas
cmpsb
pushf
fidivl
ja
sbb
dec
dec
mov
gs
push
stos
sbb
hlt
ja
jge
push
mov
pushw
mov
mov
pop
ret
mov
adc
aad
mov
add
popl
push
ljmp
test
pop
cmp
aad
cli
decl
lods
cmpsl
rcr
inc
adc
push
inc
loop
and
clc
add
inc
push
addr16
mov
pop
dec
add
or
mov
lcall
hlt
cmovbe
mov
pusha
dec
dec
int3
push
ds
sub
cmp
and
xchg
or
mov
mov
subl
das
test
adc
xlat
cmp
mov
mov
mov
repz
shl
sub
std
js
test
mov
mov
xchg
test
add
fisttpl
sub
lret
repz
xchg
popa
jle
mov
mov
mov
int
or
add
mov
les
outsl
push
xchg
pop
test
mov
push
jg
enter
dec
add
sbb
int
jns
cmp
mov
mov
xor
jmp
cmp
inc
into
mov
movsb
fistpll
cmp
repz
sbb
xlat
movsb
sub
mov
mov
pop
test
fsubl
add
mov
fnclex
mov
inc
dec
sub
adc
imul
sub
mov
les
push
cltd
add
mov
in
sub
cmp
cld
mov
pusha
add
in
dec
mov
insl
and
jnp
xor
inc
jne
cmp
repz
shll
dec
shlb
es
or
outsb
loop
push
mov
push
and
js
dec
dec
into
out
aaa
fcomps
pushl
jbe
pop
fsubl
cmp
mov
popa
repnz
jne
xor
prefetchw
movsl
sbb
sahf
sub
adc
inc
stos
push
jae
pop
fs
mov
jp
loop
pop
add
push
shrl
sti
cli
inc
mov
mov
ret
adc
xchg
dec
fcompl
and
sub
xor
mov
mov
push
push
mov
test
mov
jns
rorl
lock
sub
out
and
jne
ret
sub
cmp
xlat
xchg
shrb
in
sahf
cmc
mov
lcall
ss
and
push
adc
shl
bound
jge
pop
lret
pop
xchg
das
jns
int
test
lds
sub
mov
mov
cmp
sbb
ret
rcrl
sub
inc
test
out
lds
sbb
mov
imul
sbb
sub
aam
jg
jmp
repnz
in
flds
dec
clc
dec
cmp
fmull
popf
lods
repz
stc
cmp
pusha
movl
xchg
inc
xchg
mov
callw
cltd
ficompl
mov
fnsave
popa
jmp
jo
inc
jl
push
jecxz
add
push
ljmp
addr16
int
jmp
adc
adc
pop
xchg
stc
mov
sub
lods
test
mov
jmp
push
insb
js
mov
fidivrs
lods
add
dec
push
loope
sub
jle
or
cmp
add
jl
ss
jns
aaa
sbb
xchg
test
push
outsb
aaa
jmp
xchg
push
jns
ljmp
repnz
inc
outsb
push
xor
add
jl
test
pop
andl
pushf
cmp
sbb
xchg
mov
jne
rolb
mov
pushf
arpl
mov
push
lret
int
lahf
mulb
rclb
shlb
jp
ret
stc
xor
push
sbbl
leave
fildll
dec
imul
cmp
cwtl
mov
or
mov
push
rep
outsl
cmp
imull
pop
out
mov
shrl
loope
pop
sbb
and
push
pop
xchg
popa
pushf
or
and
testb
in
inc
in
or
ret
out
mov
push
cld
push
adc
jae
push
push
jne
mov
sub
sbb
mov
push
sbb
mov
shrb
cld
mov
into
dec
pop
daa
mov
imul
test
mov
push
bound
sub
decl
dec
js
cmpsl
arpl
push
sahf
cltd
and
adc
push
adc
xor
mov
sub
sub
rolb
cmp
in
mov
xchg
fsin
cld
cwtl
pop
insl
dec
pop
pop
and
sub
stc
sbb
lahf
pusha
sub
mov
test
xchg
add
mov
xchg
lret
ljmp
fwait
scas
adc
jb
jae
pop
data16
add
nop
mov
or
xor
cmp
je
cmpsb
imul
cmp
iret
pushf
add
sarl
or
out
mov
mov
or
adc
lods
test
es
dec
xchg
stc
or
int
jp
xor
js
aaa
jp
fiaddl
mov
push
loop
lods
inc
mov
pop
sub
jle
jle
cmpsb
push
jecxz
push
lcall
sub
std
fcmovu
add
fs
mov
addb
cld
loopne
imulb
jbe
dec
pop
out
push
shr
and
lods
shlb
icebp
mov
xor
dec
mov
out
jae
mov
mov
decb
outsl
xchg
push
sbb
push
icebp
xchg
sar
rorb
mov
push
out
fwait
scas
add
cmp
sub
cmc
inc
push
xchg
push
mov
iret
or
popf
mov
jle
and
adc
dec
or
sbb
cmc
push
out
pop
mov
jnp
xchg
inc
or
mov
jnp
push
in
mov
ss
cwtl
ss
cld
xchg
xor
or
outsb
or
xchg
outsl
scas
sub
and
push
cmp
add
jmp
add
pushf
out
mov
call
xor
cmp
push
mov
out
adc
test
aad
pop
loopne
lock
into
ret
inc
fldl
outsb
popa
jns
add
shlb
mov
push
sub
imul
rolb
xor
shll
popa
xor
lods
lea
cmp
lea
out
lahf
push
pushf
or
sub
mov
daa
out
stos
add
test
mov
test
mov
dec
xchg
aas
jecxz
cmc
hlt
mov
inc
ss
mov
rol
mov
and
xchg
mov
clc
mov
sbb
jbe
or
dec
out
scas
push
mov
lret
outsl
aas
or
cld
mov
add
seta
and
testb
and
lds
in
scas
pop
leave
sarb
andb
mov
pop
les
cvtps2pi
cmp
jo
push
js
les
stos
mov
hlt
ficoml
xchg
cmp
jg
jp
out
inc
jns
xor
aam
daa
push
jle
jo
les
cmpsl
cld
sbb
ss
scas
daa
iret
cmpl
in
scas
cltd
aas
mov
out
sbb
mov
jecxz
jne
je
pop
sarb
xchg
and
hlt
mov
aas
inc
stc
xchg
push
add
int
loope
mov
and
xor
push
or
lds
dec
notl
ds
lea
shl
add
popf
mov
cwtl
mov
cmp
test
mov
pop
mov
pop
lods
sbb
je
stc
add
shlb
mov
in
mov
fldt
cmp
gs
dec
out
pop
xchg
pop
adc
cmpsl
mov
inc
mov
es
imul
inc
in
mov
cld
pop
mov
insb
sub
cmpsl
inc
dec
dec
shrl
adc
mov
lret
mov
push
mov
sbbw
xorl
fistl
sahf
frstor
pushf
lret
push
js
mov
or
nop
cs
lret
cmp
cmp
sbb
jmp
stos
test
mov
add
ljmp
dec
aam
test
outsb
sbb
mov
popa
fisubs
fimuls
sub
mov
add
int
add
int
fimull
push
insb
xchg
xor
mov
aad
pusha
mov
cltd
call
pusha
aad
pusha
sub
jecxz
cmp
das
cmp
stc
cmp
aam
or
jbe
xlat
popf
std
mov
clc
pop
pop
test
orl
inc
test
pop
add
mov
dec
imul
sbb
dec
jp
les
jmp
divl
divb
test
pop
mov
mov
cmpb
inc
sbb
insb
rorb
cmp
ja
jl
out
push
jne
cmc
ljmp
fdivl
mov
aam
cmp
cld
add
jp
mov
inc
fnstsw
xchg
nop
stos
dec
lods
and
mov
out
insl
in
out
fldl
add
in
out
pop
nop
cmp
divl
inc
inc
cmpsl
inc
insb
icebp
xor
pusha
adc
adc
test
stc
sarb
xor
sar
or
test
gs
pop
mov
push
push
jl
push
hlt
cwtl
mov
aam
mov
mov
pop
cs
mov
inc
pop
inc
repnz
pusha
je
pushf
lret
clc
stos
push
jp
mov
jns
hlt
test
sbb
pop
cmp
xchg
xor
mov
mov
push
das
loope
scas
xchg
jae
jge
pop
in
sti
lret
pop
in
mov
test
push
orb
dec
xchg
dec
push
frstor
sub
shrb
insl
jle
jp
imul
std
mov
xor
outsb
mov
aaa
push
je
int
inc
mov
sbb
dec
jmp
pop
lahf
and
xor
lods
js
imulb
push
mov
inc
test
imul
xor
stc
or
adcb
sahf
loop
aaa
addr16
out
pushf
jne
sbb
pop
mov
imul
sti
mov
ret
popf
cmc
sarb
push
dec
test
imul
sbb
mov
mov
je
jne
mov
dec
cltd
outsl
sbb
insb
jns
out
fwait
test
xchg
lret
dec
mov
jo
sbb
popf
or
mov
fcomi
mov
sbb
lods
or
test
xor
movsl
orb
inc
pop
loope
in
sti
xchg
jns
outsb
mov
fisubrl
adc
test
jmp
popa
jmp
lcall
mov
mov
mov
loopne
adc
jae
mov
push
xor
lods
mov
daa
jns
jmp
ljmp
dec
dec
cmp
jb
mov
insl
pop
push
and
sbb
repz
mov
lods
out
lahf
fldl
push
jno
inc
adc
dec
out
sbb
data16
adc
aas
outsb
pop
aas
and
negb
inc
out
bound
mov
pop
pop
out
mov
cltd
sar
push
push
fcmovu
xlat
enter
pop
es
jo
adc
xchg
popa
rclb
cli
xchg
pushf
mov
mov
lods
mov
inc
aad
pop
fbld
sbb
xorb
mov
lock
push
inc
jae
xchg
add
lcall
mov
cmpsb
repnz
cmpsb
inc
leave
ja
or
dec
es
lahf
out
stos
repz
loope
jne
or
xchg
push
loopne
lds
shlb
leave
pusha
bound
push
les
cmp
push
and
ss
fmuls
jg
scas
in
loop
sub
subb
xchg
gs
fwait
dec
call
popa
lea
cs
popf
lret
adc
xchg
js
cmp
mov
arpl
sbb
subl
cmp
sbb
loope
jo
aam
mov
sbb
inc
dec
jl
test
jns
push
rcr
roll
inc
push
fcmovb
lret
filds
int3
push
fmull
mov
push
cmc
jno
rclb
fcomi
test
push
lcall
or
imul
popf
mov
es
test
xor
and
pop
imul
cmp
and
xor
mov
pop
insb
and
cmp
test
sbb
imul
mov
push
nop
dec
movsb
push
fadds
aas
pop
loopne
mov
jl
loopne
adc
rcrb
push
aas
mov
jl
gs
ss
inc
nop
out
insl
loopne
divb
scas
mov
or
aaa
adc
repz
inc
sub
xlat
aas
out
pushf
inc
push
push
sbb
jo
add
mov
je
dec
pop
pushl
adcb
dec
mov
lods
cmp
xor
mov
adc
test
xchg
rcll
push
cmp
fsub
int
add
leave
into
lret
and
xor
adcb
data16
imul
xchg
mov
xchg
icebp
lods
sub
in
jg
adc
cmp
mov
bound
lahf
pop
push
xor
sahf
inc
and
xor
xchg
into
mov
xor
sub
repz
jbe
dec
in
dec
jecxz
mov
or
pop
mov
sbb
sub
push
xchg
mov
std
fxch
call
mul
mov
std
sti
xchg
imul
test
ljmp
sbb
or
aam
push
in
push
add
and
in
jbe
mov
sbb
push
insb
popf
aas
or
pop
sbb
adc
ljmp
stc
std
pusha
cmp
cltd
xchg
cmc
fdivr
insl
popa
jae
stc
lock
sbb
jg
jecxz
mov
rcrb
cmp
popf
lcall
mov
rcr
mov
sbb
int
sbbl
test
aas
sub
add
or
jp
mov
addr16
cmc
lret
cmpsb
push
sbb
mov
add
jbe
pop
and
sub
sbb
mov
out
fimuls
enter
push
loop
enter
and
lahf
xchg
dec
push
sbbl
jl
in
xor
xor
jo
ja
rcrb
jecxz
xor
rorb
mov
mov
pop
bound
pop
imul
pop
rclb
fwait
mov
imul
testb
jns
mov
aaa
inc
out
rorl
and
sbb
pusha
dec
mov
out
mov
insl
jne
add
lds
or
call
mov
push
mov
je
pop
mov
push
xchg
xor
outsl
push
add
xchg
cs
outsb
pop
aad
out
xor
insb
jg
pop
mov
pop
lret
pop
and
ja
mov
mov
push
pop
lds
adc
lret
cmp
sub
mov
fwait
ljmp
dec
scas
aam
mov
mov
sbb
xor
mov
repnz
jnp
test
in
aaa
loop
lods
jg
xorb
jbe
or
lea
add
call
push
imul
fcomip
ljmp
repnz
frstor
mov
pop
jbe
fdiv
insl
shr
cmpsb
into
outsb
mov
les
or
test
inc
push
icebp
pop
push
sub
fs
js
mov
loop
lret
rorb
mov
jno
pop
sbb
lea
or
mov
icebp
pusha
mov
paddsw
cld
loope
jmp
lcall
test
jg
cwtl
lock
or
push
pop
pop
std
js
pusha
sub
add
add
pop
inc
mov
icebp
stos
stos
mov
fwait
int3
jecxz
nop
notb
jae
add
shr
mov
mov
out
and
xchg
or
mov
dec
divl
cmp
and
adc
rcr
ljmp
fwait
mov
cmp
xor
xchg
add
jns
cmp
xchg
cmp
sar
pop
inc
or
lods
mov
mov
fwait
xor
adc
cmp
repnz
mov
movsb
push
ret
mov
add
imul
and
std
adc
xchg
xchg
jl
mov
shrl
cmc
adc
or
pop
jl
stos
and
pop
pushf
scas
or
jge
add
js
cmp
jo
add
cld
fcomip
mov
push
xchg
testl
arpl
pusha
inc
arpl
int3
lods
data16
dec
inc
into
jb
les
imul
inc
cmp
loopne
jae
or
in
jl
pop
inc
fcoml
mov
sub
std
cli
push
jl
sub
ss
and
xor
aam
adc
jne
sub
stos
dec
andl
cmc
mov
cmp
imul
jge
pushf
lcall
std
lcall
pop
hlt
cmp
and
xchg
push
pop
ss
push
popf
sbb
or
inc
jno
repz
leave
inc
stos
je
lcall
add
sub
rorl
sub
sbb
outsl
push
out
push
and
in
cmp
mov
shrl
lcall
xor
adc
and
insl
adc
jb
xor
push
dec
push
mov
int3
imul
pusha
ret
ficoms
lock
mov
scas
jmp
or
push
sahf
sub
in
or
or
cs
popa
cmp
jne
or
cmp
jmp
mov
mov
sub
mov
pop
mov
or
nop
cmpsb
and
and
aas
jecxz
xchg
cmp
add
lods
cmp
pop
popa
fildl
cmc
lea
stos
outsb
or
loopne
fnstenv
jg
push
repz
sbb
inc
push
ret
pusha
popf
movsb
mov
loope
xchg
xchg
push
gs
addr16
movsl
aad
test
test
idiv
and
fxtract
push
shr
clc
jne
mov
mov
stc
pop
insl
and
loopne
cmp
mov
test
xor
adc
loope
push
cwtl
mov
arpl
jl
lea
xchg
jmp
es
xchg
sub
pop
and
xor
sub
add
insl
sbbl
mov
dec
xchg
mov
mov
jle
addb
sub
or
popa
packssdw
inc
shlb
js
jns
rclb
or
jae
or
mov
push
push
sar
mov
cli
test
mov
out
loop
mov
out
aaa
dec
and
imul
mov
add
and
push
push
dec
popf
mov
add
lods
jle
xchg
lret
mov
and
arpl
jne
outsl
push
xchg
and
stos
push
mov
dec
decl
push
xor
mov
and
in
jecxz
in
aaa
imul
out
mov
sbbb
sbb
push
push
fistl
dec
inc
lods
popa
dec
and
sub
push
ss
or
and
or
fwait
aad
shrb
jno
sbb
sub
dec
insl
mov
pusha
cmp
sbb
cmp
mov
movsb
dec
fisubrs
push
fwait
out
sbb
or
jno
fdivrs
call
mov
pushl
pop
fprem
scas
mov
cmp
mov
mov
add
cld
bound
xchg
adc
les
lcall
inc
fisttpll
mov
xchg
and
or
fadds
shlb
sub
pop
jns
test
push
in
jnp
cmp
outsl
out
pop
cmp
rcrb
dec
pusha
or
daa
ljmp
xchg
je
jp
inc
bound
xchg
pop
out
inc
imul
mov
cltd
xchg
adc
add
cmpsb
xchg
mov
fnstsw
lock
dec
ret
adc
aaa
mov
xchg
scas
mov
std
sahf
bound
sti
fsubrl
popf
push
pop
mov
nop
pop
loopne
sahf
jmp
loopne
aas
aam
fdivrl
xor
mov
jbe
mov
imul
call
cs
nop
ret
mov
or
cs
shlb
add
sbb
sub
sbb
add
inc
imul
enter
fldt
pop
in
test
jecxz
or
shl
std
loope
jmp
das
ja
add
pop
imul
aad
imul
add
mov
jge
mov
or
mov
mov
inc
outsl
subb
sti
ds
xchg
flds
cld
xlat
or
call
arpl
insl
insl
fcmovnbe
cli
mov
shlb
cmp
mov
ds
jb
ret
inc
fildll
and
cmp
clc
xchg
stos
cltd
mov
fnstenv
sti
cmp
aas
push
xchg
push
xor
mov
mov
sbb
inc
popf
in
inc
jo
inc
or
inc
subl
sti
mov
nop
add
scas
mov
ret
inc
imul
orl
jo
xor
sub
in
xchg
cmpsl
pop
jmp
stos
cmp
mov
js
lret
test
xchg
push
adc
push
mov
dec
in
fidivrl
push
sbb
cmp
sub
sbb
mov
pushf
nop
int
push
and
in
mov
std
pop
mov
bound
pop
mov
cmp
sbb
pop
mov
gs
dec
fists
je
out
push
pop
inc
mov
jle
repnz
cmp
ror
add
xor
dec
xchg
sbb
lret
cmp
push
adc
movsb
hlt
dec
cmp
dec
xchg
mov
sub
lahf
sbb
fldt
pop
in
xchg
mov
push
pop
adc
and
sbb
fnstenv
out
push
cmp
dec
test
leave
cmp
xchg
sbb
inc
out
and
int3
in
pop
xchg
lret
sahf
and
sbb
mov
cmp
in
pop
dec
jb
ja
push
repz
pop
push
pop
bound
scas
adc
cli
mov
xchg
jbe
mov
rolb
jp
mov
incb
repnz
push
cli
jnp
idivb
jl
lods
push
out
add
jb
mov
jge
aad
jmp
mov
inc
add
fiaddl
daa
dec
insb
sub
pop
push
das
mov
mov
shrl
notb
loope
icebp
xchg
fnstcw
frstor
jmp
xor
xchg
mov
adcb
imul
pop
adcb
pop
push
repz
lock
insl
call
daa
ss
into
sub
inc
mov
pop
out
pop
xchg
jbe
push
pop
mov
int
fwait
pop
and
adc
js
rorl
inc
mov
mov
call
arpl
daa
clc
imul
xor
rcrl
and
adc
lahf
loopne
pop
pushf
and
push
mov
pushf
or
xor
clc
mov
pop
pop
adc
fildl
fs
in
dec
outsl
ret
sub
aam
in
sub
mov
jb
adc
js
fnstenv
dec
mov
cmpsl
cld
or
jae
xor
push
fcoms
lea
push
out
jmp
sbb
xor
push
jl
pop
push
dec
es
push
hlt
fwait
inc
sub
sbb
push
xor
sub
dec
arpl
mov
dec
or
or
push
and
xchg
ljmp
add
ja
sub
hlt
cmp
mov
pop
push
mov
jae
cmp
mov
jge
pop
mov
cltd
sbb
lea
mov
cwtl
mov
pushf
xchg
mov
inc
xor
lret
or
jp
mov
data16
lock
mov
lods
inc
popf
sub
inc
scas
sub
inc
loopne
out
cmp
dec
mov
jge
cmpsb
aad
pushf
stos
xchg
or
add
inc
dec
dec
sub
fisubrl
lret
xorl
push
xchg
mov
divb
sub
xchg
popa
lock
jmp
mov
scas
jmp
push
aaa
dec
sub
adc
enter
xchg
and
int
jnp
mov
into
inc
cmpsb
imul
outsl
lea
outsl
sbb
or
lock
add
xchg
inc
sub
jne
jp
xchg
fbld
lret
adc
shll
test
ret
dec
sub
mov
outsb
shl
mov
mov
mov
push
popf
and
or
add
lret
lret
loopne
mov
jp
cli
pushf
cmpsb
rolb
push
adc
sub
jae
add
icebp
pop
cmp
ret
aad
mov
int
inc
cmp
cmp
aad
adc
pop
or
dec
adcb
or
cld
pusha
mov
lret
pop
dec
sub
test
icebp
and
sti
xchg
leave
out
out
fstps
and
jg
ss
mov
mov
mov
push
ret
jo
cmp
xor
cmp
js
lahf
push
and
in
mov
and
mov
jmp
frstor
add
adc
into
mov
test
mov
xorl
dec
mov
pushf
iret
mov
mov
sub
cmp
and
jl
in
ss
fisttpl
int
cmpl
pop
movsb
or
bnd
inc
or
lahf
xor
jmp
outsb
or
pop
call
push
filds
stos
push
jmp
pop
xchg
pusha
adc
push
push
sbb
sbb
jge
dec
jp
adc
addl
push
mov
mov
pop
scas
mov
jmp
js
pop
enter
ljmp
xchg
movsb
xor
or
in
push
lret
sub
pop
mov
cmp
hlt
test
lods
or
fcompl
out
in
je
aam
push
jl
movb
fs
mov
int3
jg
repnz
jp
je
jle
gs
push
addr16
sub
inc
stos
push
mov
pop
les
clc
call
insb
pop
dec
xchg
ret
pop
xchg
xchg
sti
scas
test
cmc
into
js
clc
shrb
sbb
mov
sti
push
rol
push
lret
push
les
addr16
enter
push
jmp
jecxz
sbb
gs
stc
pusha
cmp
das
fstps
push
inc
sub
pop
adc
mov
jnp
fwait
aam
mov
fwait
pop
pusha
xchg
sub
lahf
and
xor
repnz
sub
adcl
jne
jns
loopne
jge
adcl
xchg
lods
push
loope
mov
push
cmp
inc
cmp
mov
jecxz
push
cmpsl
je
ss
xor
lds
sti
pop
jle
xchg
jp
cmpsb
imul
sub
rorb
mov
pcmpgtb
or
sbb
pop
in
movsb
jnp
insb
xchg
sbb
loope
aas
data16
test
fcmovnbe
call
adc
lods
out
ja
into
shll
mov
jge
adc
repz
add
jo
es
add
push
ljmp
arpl
das
sub
and
sbbb
icebp
paddb
in
jle
xchg
cmp
and
hlt
cmp
adc
sub
mov
les
dec
cmp
cmp
add
mov
insl
push
jb
push
cs
inc
jmp
cmp
aas
jge
xor
push
jmp
or
std
mov
mov
jecxz
xchg
dec
dec
cwtl
popf
push
movsl
stos
xchg
loop
pop
scas
cltd
setbe
mov
mov
mov
jecxz
pop
fldt
and
nop
xor
bnd
pop
rolb
xchg
pusha
xor
test
add
or
push
seto
or
mov
adc
mov
ds
mov
pop
dec
popf
sbbb
add
push
loop
testl
lock
inc
inc
insl
test
nop
sub
hlt
bound
aas
repnz
in
push
testl
or
sub
jle
xchg
andl
mov
lahf
repz
lods
outsl
xlat
shlb
ds
jp
xor
in
sub
int3
icebp
adc
dec
cmp
hlt
ret
pop
sti
dec
test
out
fs
fnstenv
jge
cmp
fimuls
and
cmp
lock
cs
and
movb
push
rcrb
int
movsl
sbb
mov
mov
jae
cmp
cmovae
push
sub
mov
and
mov
iret
dec
sub
flds
or
inc
mov
aaa
xor
stos
cltd
out
sub
lret
cmp
ffreep
imul
insl
inc
adcb
out
lcall
sub
lahf
loopne
in
cmp
repz
pop
push
push
jg
inc
jae
pop
push
xchg
lods
gs
jae
inc
adc
lds
dec
hlt
xor
aam
adc
pop
or
sbb
or
stos
jno
dec
movsb
pop
xchg
outsb
mov
push
lock
cmpsb
outsl
or
rol
mov
ss
mov
pop
mov
jbe
pop
jnp
and
mov
fsubrs
lcall
push
hlt
cmp
sbb
pop
rolb
jbe
jmp
mov
xor
fstps
sub
cmp
xlat
xlat
rol
cmpsl
jb
mov
mov
mov
sub
jecxz
or
add
mov
fxam
xchg
leave
arpl
push
xchg
mov
xor
sbb
xlat
ja
mov
mov
iret
lods
pop
xchg
xchg
bound
lret
rep
shll
out
lahf
lds
movsb
repz
nop
fs
jge
cmp
pop
mov
dec
jbe
sub
and
add
scas
hlt
ret
mov
sarb
xor
fcomi
cmpsl
fidivl
vmovd
xchg
test
std
or
xchg
push
or
jae
fcmove
hlt
push
clc
push
mov
into
out
push
lods
mov
les
ret
es
es
push
push
test
or
sbb
cmp
das
jnp
lock
pop
pop
dec
pusha
call
popf
cmp
je
sub
loopne
add
mov
in
jns
push
cltd
clc
repnz
fs
pop
jp
pop
jg
cmovbe
fistpll
mov
fdivrl
and
loope
icebp
adcl
push
inc
pop
cmp
cmc
adc
pop
jp
dec
xchg
pop
in
sahf
xchg
and
push
call
pushf
cli
jmp
movsl
insb
lahf
arpl
cmp
fstpl
shl
pop
sub
or
jge
jp
add
in
gs
mov
stos
clc
js
aaa
mov
cs
test
pop
cmp
pop
or
mov
lock
push
sub
ja
push
pusha
jbe
xor
fcmovb
mov
int3
sub
mov
push
nop
scas
aam
pop
inc
inc
sbb
pop
pop
push
sbb
lret
add
aam
repz
data16
cmp
dec
mov
in
sbb
test
adc
push
into
or
fimull
or
lods
retw
icebp
mov
sahf
jo
adc
sbb
jbe
gs
lret
lret
xchg
or
pop
icebp
daa
sbb
adc
xor
xchg
dec
lock
mov
ret
or
and
sbb
push
xchg
and
add
cltd
mov
pop
fidivs
mov
adcb
out
jmp
adc
movsl
mov
mov
sbb
mov
and
and
test
sbbb
repz
pop
sbb
mov
add
test
out
cltd
fildl
pop
std
sub
adc
push
jae
mov
jno
std
cwtl
sbb
adc
adc
mov
jg
jns
cld
mov
test
pop
and
mov
sbb
pop
jg
xchg
push
mov
lods
enter
daa
daa
mov
or
xchg
inc
fnstsw
adc
cmp
cmp
xor
loopne
add
mov
mov
lods
and
push
xchg
push
addr16
test
hlt
dec
pusha
mov
out
adcb
in
das
aas
outsb
sahf
pop
outsl
fstpt
out
xchg
iret
sbb
xor
aas
inc
in
push
xor
call
push
mov
push
jb
fstl
sub
aad
mov
mov
push
mov
mov
inc
xchg
rclb
inc
jo
or
mov
in
clc
jl
push
or
and
pop
mov
adc
xlat
xchg
and
mov
xlat
sub
in
cmp
pop
inc
int3
xchg
and
icebp
sar
xchg
fs
mov
push
inc
adc
repnz
sbb
push
cmpsl
test
pop
fnstsw
jnp
jg
and
scas
call
test
dec
mov
mov
fs
inc
ret
jle
push
sbb
jmp
inc
mov
scas
loopne
outsb
ja
mov
jmp
mov
or
add
ds
inc
sub
lods
imul
pop
testb
repz
aam
dec
int
dec
sbb
cwtl
cmpsl
fbld
in
test
and
push
add
jge
push
mov
stos
sbb
push
add
sub
jo
lods
mov
pop
inc
incl
cmp
loope
sbb
sbb
mov
sub
jmp
jle
sbb
popa
and
mov
push
pop
scas
in
iret
call
call
jmp
pop
out
inc
and
fcompl
cwtl
xor
jnp
xor
xlat
out
addr16
jp
adc
push
ret
insb
pop
xlat
fistpl
or
mov
jns
pop
or
insl
outsb
inc
push
loopne
mov
cmpb
xchg
aas
std
jle
xchg
insb
dec
inc
sub
or
pop
mov
inc
fdivs
fcomp
insl
pop
jnp
fidivs
pop
je
imul
and
pop
jg
pusha
jo
pop
lods
fs
mov
bound
js
push
pop
jg
or
jl
push
cmpsl
sbb
dec
jmp
lahf
hlt
push
pushf
inc
iret
inc
sbb
lret
loop
movsl
aaa
adc
dec
cltd
cmp
lcall
dec
imul
icebp
pusha
or
out
and
out
loop
dec
arpl
addr16
push
bound
jae
cld
inc
nop
mov
xor
mov
sahf
out
adcb
push
in
jle
into
fdivr
inc
cwtl
fstl
jl
jp
mov
cmpsb
sti
ret
adc
loope
cmp
pop
imul
pop
pushf
lcall
and
aad
out
stos
sub
jbe
nop
and
sbb
stc
pop
das
int3
add
sub
dec
and
jp
iret
cmp
adcl
jl
adc
lea
arpl
test
push
mov
insl
and
mov
aad
sahf
or
cs
outsb
arpl
mov
mov
xor
mov
rclb
mov
add
xchg
pop
and
push
dec
jp
inc
fcoms
dec
and
pop
hlt
jl
xor
les
jb
add
inc
or
or
sbb
stos
fidivl
fs
lods
repz
out
xchg
sahf
push
adcl
pop
leave
mov
mov
aam
push
insl
test
and
leave
dec
mov
dec
fstp
inc
jp
das
int
stos
push
out
rolb
add
pop
sub
inc
push
cmp
addr16
mov
rcl
clc
in
or
sbb
mov
jle
add
movsl
dec
sub
sahf
jecxz
ljmp
mov
xchg
out
push
or
xor
mov
sti
rorb
adc
adc
push
movsb
dec
add
loopne
orl
pop
fmuls
sbb
pop
mov
ffree
inc
out
das
sbb
mov
cmp
mov
out
mov
mov
xor
push
add
pop
mov
mov
sbb
mov
pop
repz
fs
divb
aam
lock
sub
cmpsb
pop
jb
lret
pop
and
pop
movsb
dec
sahf
loopne
cs
fiadds
js
cmp
jb
sbb
js
jl
rorl
xor
adc
sarl
and
xlat
dec
test
daa
xchg
mov
inc
and
sub
lock
dec
pusha
adc
ret
lcall
loope
sbb
cltd
xchg
leave
adc
mov
fsub
jb
push
xchg
push
xchg
push
push
xor
sbb
cld
shll
out
jnp
popl
outsb
mov
sub
sub
mov
jae
sub
ficoms
add
lea
xor
or
mov
inc
fwait
xor
inc
sbb
xchg
fxch
loop
sub
add
fldl
repnz
jo
mov
outsl
fsubrs
dec
adc
icebp
mov
imul
scas
adc
call
pop
sub
fcomp
mov
adc
shlb
cmp
icebp
aad
hlt
test
add
ficoml
push
mov
jle
fadds
fwait
rcrb
xor
mov
stc
iret
mov
mov
mov
rclb
and
push
xor
daa
dec
lds
sbb
add
push
sub
xchg
fisttpll
sub
aam
xchg
jb
mov
push
mov
addr16
sub
xchg
adc
outsb
add
lea
pop
cwtl
test
movsl
int
addl
inc
in
outsl
pusha
lds
sbb
mov
in
mov
dec
ss
xor
aas
sbb
mov
sub
loopne
mov
inc
int
or
mov
or
andl
xor
or
int3
loope
dec
sbb
push
lods
dec
out
dec
sbb
js
push
mov
incb
add
jbe
sbb
filds
iret
cmp
cmc
shlw
pop
xchg
jmp
dec
adc
fisubs
pop
mov
in
push
add
and
jle
dec
ja
loopne
xchg
or
push
movsl
cmc
outsl
adc
add
aam
cmp
xchg
xchg
imul
mov
lahf
subl
fwait
add
ss
into
or
jg
aam
jp
push
pop
rorl
jnp
mov
mov
movsb
push
sbb
fcoms
scas
sub
repz
mov
daa
push
sti
fstl
push
jmp
and
pop
mov
enter
fdivrl
ss
dec
pop
in
mov
int3
out
and
notl
jmp
sub
out
ret
popa
xor
popa
push
pop
and
cmpsb
scas
mov
out
or
inc
lret
or
jmp
pop
dec
cmpsb
jae
mov
loop
inc
jbe
movsb
pop
add
cwtl
push
dec
xor
adc
or
ss
js
daa
js
mov
fcmovb
rolb
scas
ljmp
add
out
scas
adcl
daa
test
fnstenv
loope
insl
lods
fldenv
insl
mov
pusha
xor
arpl
in
mov
xor
mov
cmp
jp
out
in
mov
fs
xchg
inc
sahf
xchg
es
pop
xor
les
ret
pop
and
fisttpl
lea
mov
ljmp
fwait
xchg
or
add
cmp
aam
mov
push
addb
outsb
cmp
addr16
lods
cs
sbb
push
cmp
add
jo
jne
int
push
les
adc
test
pop
jmp
mov
jne
mov
mov
fdivs
test
cld
xchg
ds
cmp
jecxz
icebp
fwait
scas
pushf
rcr
cs
sub
cmp
shlb
insl
test
push
mov
jne
or
scas
mov
andl
je
ljmp
test
div
aas
and
gs
inc
mov
jecxz
cmp
adc
adc
ficoms
mov
fsubr
and
dec
adc
into
push
out
pop
rcl
jecxz
xor
cmp
jp
bound
jbe
sbb
adc
fiadds
shll
incb
push
jp
mov
mov
lret
mov
daa
lods
divl
add
iret
aas
xchg
dec
xchg
cmc
mov
pop
fistps
mov
pop
jae
int3
or
pop
ja,pn
scas
pusha
mov
fs
sub
adc
xchg
stos
imul
xchg
xlat
and
xor
pop
scas
mov
shlb
aas
rolb
cmpsl
sub
fs
add
push
sub
sti
cmp
jmp
mov
fwait
int3
sub
mov
ret
in
jp
lret
push
aaa
add
add
inc
and
clc
hlt
pmaxsw
jg
mov
dec
cmc
mov
lret
int
jb
pop
lods
fstpt
jae
cmp
addr16
ret
and
push
jno
bound
hlt
xchg
xchg
lret
pop
jp
add
mov
fidivl
sti
fcoms
out
mov
jno
in
clc
pop
fidivl
lds
sbb
loope
insb
and
out
mov
dec
jge
out
sbb
shlb
jno
mov
lods
push
ret
enter
andb
mov
adc
popa
jns
test
cltd
inc
ret
nop
pop
das
add
std
repz
orl
add
jnp
divl
mov
nop
mov
pop
test
adc
jg
pop
dec
rcrl
daa
lock
mov
out
sbb
jne
fwait
ror
mov
xor
aaa
imul
mov
mov
pusha
pop
fisubrl
inc
ror
jp
sub
and
xchg
repz
lcall
xor
test
imul
rcr
sub
shr
pushf
cmpsb
cmpsl
cmp
aas
inc
push
jecxz
mov
fistps
xchg
ret
mov
repnz
mull
adc
mulb
xchg
fisttpl
stos
cmpsb
ficompl
push
or
push
jns
mov
add
cmpsl
jae
jp
gs
mov
shll
xchg
mov
add
cmp
lock
xchg
aad
adc
cmp
out
out
icebp
and
sub
stos
mov
push
sbb
inc
test
iret
and
cmp
add
dec
pop
adc
inc
repz
mov
sub
loope
xor
inc
or
or
lcall
mov
sbb
push
cmp
icebp
addr16
rcr
jmp
mov
pusha
lret
pusha
sbb
jp
adc
push
popf
jbe
repnz
lds
adcl
movsb
or
popa
je
divl
das
dec
jmp
push
cld
arpl
stc
mov
arpl
add
data16
in
scas
inc
push
inc
xor
aad
push
subb
aad
pop
jmp
jno
add
dec
mov
xor
xchg
into
ficompl
jno
ret
inc
test
adc
inc
pop
fidivrl
dec
rcrl
jns
and
ds
cs
push
and
mov
inc
jl
mov
mov
xor
ret
and
jecxz
cld
sbb
xor
fcomps
sbb
add
cmp
push
pop
lcall
fimull
insb
ds
aas
and
popf
push
add
xchg
cmp
cmovns
xchg
xlat
popf
adc
leave
add
fldl
push
xor
lret
mov
add
dec
adc
or
xlat
lret
inc
je
sar
scas
inc
and
adc
fldl
add
icebp
and
les
imul
or
push
xchg
xchg
enter
xor
cwtl
pop
pop
pop
out
mov
or
mov
lahf
inc
lahf
and
sub
inc
rcl
dec
xor
orl
jge
xor
fcompl
and
int3
in
test
fs
das
idivl
mov
nop
sbbb
jb
lcall
in
xchg
pop
jne
push
jmp
aam
mov
loop
sahf
mov
pusha
cmp
cmpsb
pop
fidivs
mov
daa
lods
or
xchg
and
and
fisubrs
add
mov
adc
pop
sub
fsubr
dec
xor
sti
fstps
xchg
push
dec
mov
cld
adc
shlb
inc
or
sbb
movzwl
pop
mov
call
and
test
xor
jbe
jp
mov
call
ja
out
push
test
scas
imul
imul
and
int3
dec
mov
rcll
inc
mov
lods
lcall
or
mov
lds
int
cmp
out
xor
cmc
out
add
pop
mov
rclb
jg
popa
sub
xor
in
mov
mov
bound
mov
hlt
xor
rcrb
lds
pop
jmp
jbe
out
pushf
jge
inc
decb
popf
scas
lret
cwtl
push
aad
lods
or
sbb
jle
ja
cmc
sub
xchg
int3
adc
inc
xchg
lock
out
pop
add
push
aam
adc
push
insl
dec
or
shrb
enter
sub
add
cmp
dec
push
mov
or
jno
and
subl
pop
push
cmp
jg
jnp
mov
fisttps
sub
push
push
pusha
cmpsb
xchg
rclb
and
leave
in
movups
stos
scas
ficompl
push
push
popa
jns
in
xor
mov
cld
and
enter
inc
dec
push
sbb
imul
or
in
mov
pushf
insl
movsb
mov
ja
dec
vpcmpgtw
shlb
iret
cwtl
call
lret
push
push
cli
outsb
pop
rolb
dec
imul
xchg
cmp
mov
sub
jecxz
cmp
mov
push
pop
add
dec
cmpsl
ds
xor
inc
cwtl
pxor
dec
sbb
or
sub
ss
fcom
idivb
roll
ret
jne
dec
inc
rol
inc
popf
mov
push
iret
push
scas
stos
loopne
lods
lds
outsb
lret
inc
mov
mov
mov
pop
inc
xchg
in
js
sub
mov
xchg
out
sbb
fcoml
add
add
cmc
sub
dec
scas
mov
mov
push
fmul
pop
cmc
dec
adc
movsb
sub
sub
sti
mov
movsb
xchg
mov
mov
nop
mov
mov
adc
pop
add
pop
and
call
push
in
sub
mov
pop
rcrl
into
mov
imul
sahf
xchg
or
push
cmp
es
loope
sub
cmp
sub
sti
loope
or
inc
orb
into
mov
sub
stc
les
mov
rcr
arpl
push
js
fwait
jge
sbb
ret
jnp
pusha
sub
or
add
sub
xchg
int3
ja
shl
push
mov
lods
jb
cmp
test
les
pop
add
inc
ss
pop
movsl
xchg
xor
and
mov
mov
inc
movsl
lea
xor
mov
jmp
or
lcall
mov
rcr
xor
cmp
or
mov
and
inc
and
pop
pop
in
or
pop
and
iret
mov
jb
adc
and
repz
rol
fistpll
test
test
sub
scas
dec
and
pop
sbb
mov
not
aam
fadds
inc
mov
sbb
mov
push
call
add
pop
sahf
arpl
and
ljmp
shlb
pop
pop
out
dec
push
xlat
jne
xor
mov
mov
mov
mov
in
ret
jge
test
sub
mov
out
push
mov
stos
add
lock
push
jl
ret
fwait
mov
inc
imul
stos
aad
add
scas
cmp
loopne
and
mov
mov
ss
xchg
cmp
outsb
iret
xor
push
mov
je
push
cmp
mov
sub
inc
xor
push
repnz
stos
push
push
inc
jp
inc
mov
es
xor
push
outsl
rcl
ficoml
roll
adc
push
mov
gs
pop
test
jae
dec
stos
cltd
pushf
xchg
fcompl
jns
adc
ss
add
sub
dec
pop
icebp
adc
or
pop
pushf
push
jecxz
pusha
dec
ljmp
mov
push
push
add
push
popf
lods
inc
dec
push
notl
dec
pushf
or
add
adc
fistpl
lds
inc
ret
std
adc
leave
cmp
lahf
fs
add
dec
sbb
mov
add
aas
add
and
sbb
sbb
out
mov
mov
add
mov
cwtl
sarl
insb
scas
sbb
std
test
cmpsl
push
movsb
sub
cmp
ds
xchg
pop
cmpsl
add
xor
pop
mov
dec
lret
arpl
dec
lret
loop
mov
adc
push
push
xchg
or
jl
mov
mov
inc
push
inc
icebp
pop
and
push
dec
push
bsf
dec
xchg
clc
les
cmp
rcr
leave
or
or
sub
lret
mov
test
out
out
rolb
fnstcw
push
aad
cwtl
imul
add
mulb
int3
or
les
loop
and
loopne
sub
test
movsl
je
jg
insb
cmc
shl
xchg
xor
cli
iret
mov
mov
and
faddl
aaa
xor
jl
mov
popa
into
dec
cmp
inc
mov
pusha
cs
mov
cmp
sbb
add
pushf
lahf
jae
inc
lret
xchg
or
add
pop
xchg
cltd
sbb
out
adc
xchg
dec
out
cld
iret
push
inc
jle
and
test
pop
jge
xor
dec
push
js
mov
xor
mov
in
and
add
xchg
or
sbb
or
cld
clc
mov
add
lret
fwait
cmp
hlt
pop
sub
and
cmpsb
pop
stos
mov
fidivs
addr16
mov
inc
dec
xor
xorb
lahf
xor
enter
xlat
aaa
or
subl
dec
sbb
add
je
sub
or
jg
pop
push
add
ret
inc
add
or
xchg
repz
popa
in
adc
xchg
mov
fwait
dec
and
jne
std
inc
xor
invd
push
lahf
les
jno
sahf
dec
xor
popa
push
out
mov
insb
sbb
rcrl
pop
je
adc
mov
cmp
stc
mov
mov
and
dec
jns
rolb
dec
mov
add
add
push
xor
std
enter
subl
pop
lea
jl
clc
push
mov
out
rcrb
and
fxch
int
fdivrl
or
inc
data16
insl
mov
mov
flds
xor
packssdw
and
cld
and
jg
testb
sub
adc
jge
out
mov
leave
cmc
mov
push
std
jecxz
rolb
fisttpll
and
loopne
sub
lds
addr16
leave
push
aas
bound
push
adc
insb
out
clc
mov
stos
xor
mov
jne
movsl
or
mov
xchg
add
cltd
sub
sbbl
sbb
jns
inc
iret
ret
xchg
stos
mov
in
adc
jb
jp
push
bound
pop
dec
adc
mov
mov
and
mov
sbb
xor
xor
mov
push
aam
mov
filds
jmp
je
add
fcmovne
push
sub
xor
pusha
pop
push
hlt
mov
aas
out
rorb
add
lods
aaa
rcrb
adc
pop
sub
subl
pushf
pushf
cmp
pop
test
pop
shll
lcall
cwtl
mov
push
push
cmp
mov
cs
mov
xor
jmp
nop
loop
mov
inc
mov
jne
pop
or
xor
adc
int
inc
mov
das
sarb
or
xor
or
mov
in
xorl
in
into
cli
cmp
rorb
and
aaa
inc
or
pop
sub
sub
fistpll
push
dec
fwait
adcb
lcall
jle
cmp
decb
mov
pusha
nop
inc
test
xchg
lahf
xor
push
xchg
pop
xchg
daa
dec
bound
addb
sbb
mov
xorb
jg
mov
sbb
jno
aaa
cltd
cmp
aas
jecxz
gs
ss
ret
out
negl
jb
test
inc
adc
negb
or
or
inc
outsb
jne
jecxz
or
inc
mov
inc
rcrl
dec
ficoml
cmp
hlt
mov
xlat
or
imul
sahf
adc
mov
inc
lahf
mov
lock
push
mov
popa
pop
jmp
inc
pushf
jg
pop
adc
sbb
push
xchg
adc
mov
sti
sbb
call
popa
in
cli
ficoms
sbb
je
mov
adc
mov
sti
mov
or
jge
iret
shll
popf
loope
call
dec
sbb
movsb
sahf
sbb
fwait
imul
cmp
add
cmp
call
mov
or
aad
mov
dec
call
subl
pop
mov
movsl
jge
sbb
int
sub
inc
jp
mov
and
jbe
rcll
fisubl
test
je
rclb
mov
stos
imul
pop
or
das
add
mov
test
fwait
loopne
mov
pop
ficomps
inc
add
inc
fwait
adc
das
out
mov
jp
insl
pop
pop
sbb
lds
insl
push
xor
mov
bound
xchg
sbb
out
inc
faddp
mov
aaa
test
mov
out
cli
adc
mov
sub
pop
daa
mov
leave
ja
pop
in
pop
add
push
or
cmpsb
sahf
and
cmp
sub
aad
jns
and
or
jecxz
push
dec
outsb
mov
stos
mov
repnz
jl
dec
or
jl
lahf
dec
inc
add
mov
sub
xor
mov
aas
shlb
inc
pop
hlt
pop
add
push
inc
adc
xchg
ficoml
inc
mov
push
xchg
push
cmpsb
sbb
xor
jo
add
in
lds
sbb
jne
mov
test
sbb
jmp
sub
pop
rol
int
jne
sbb
adc
int3
ror
xor
cwtl
xor
jmp
xlat
aaa
adc
adc
mov
mov
jp
mov
sub
imul
adc
inc
add
loop
xorl
iret
and
in
imul
movsl
in
lods
shlb
call
jl
push
cld
mov
push
movsb
call
xchg
leave
in
push
xor
mov
cmpsl
dec
jle
xor
outsb
iret
ja
orb
fstps
movsb
xchg
aas
sub
js
push
incl
add
stos
jno
arpl
cltd
mov
pop
andl
add
jno
lret
rol
rcrl
dec
loopne
pushf
in
adc
jp
stos
xchg
cli
adc
scas
pop
cltd
aas
adc
insb
mov
pop
mov
shlb
fcomi
sti
or
movsb
cli
sub
inc
fimull
jo
bound
dec
or
pusha
insb
jnp
repz
loopne
mov
mov
dec
push
sbb
xchg
inc
movsb
mov
mov
aas
dec
pop
mov
pop
stos
sub
gs
fidivrs
cmp
fs
in
dec
mov
mov
sbb
jecxz
adc
add
rcll
xchg
cmp
jb
lret
sub
fwait
repz
pop
pop
aas
sti
jbe
out
dec
sub
sarl
xchg
mov
scas
insb
push
adc
mov
pop
cmp
push
jbe
loope
xlat
xlat
xchg
mov
popl
xchg
and
inc
xor
cs
imulb
mov
les
test
mov
push
fidivrl
push
fs
ljmp
cli
aaa
and
jp
jne
rcr
inc
xchg
scas
push
pop
mov
add
orb
jp
xor
lock
lea
mov
stc
mov
sbb
inc
and
xchg
xchg
sar
enter
cld
inc
push
add
sbb
testl
and
mov
in
dec
test
xor
sub
out
or
pop
jb
sbb
bound
mov
out
mov
jno
out
es
lea
imul
aad
push
mov
insl
mov
pop
pushf
mov
add
sbb
fstl
test
push
mov
sub
iret
xor
jno
mov
sti
aam
add
test
stc
sub
or
mov
das
into
fcmove
test
pop
and
outsl
push
into
or
enter
pop
movsl
arpl
daa
push
leavew
lds
sti
ss
push
mov
and
outsb
les
xchg
in
xchg
cmpsl
pop
test
mov
enter
push
aaa
mov
jg
push
je
jnp
mov
mov
mov
imul
pop
loop
sub
test
fnstsw
in
or
xchg
and
mov
jle
popa
push
test
xor
aas
inc
mov
mov
xlat
adc
lock
call
bound
out
mov
mov
dec
cmp
or
call
clc
not
aaa
daa
xchg
enter
pop
pop
aam
mov
dec
mov
cld
fcmovb
xor
fwait
int3
xchg
pop
mov
cmp
je
mov
and
mov
shlb
fadd
xor
inc
adc
cli
test
cmc
leave
xor
mov
inc
mov
inc
movsb
mov
or
iret
in
nop
lock
loop
nop
in
dec
inc
mov
mov
xchg
sbb
push
push
aad
and
lds
scas
mov
mov
jbe
lock
or
jne
cmp
xorb
inc
adc
popf
jne
sub
aas
mov
loop
int
sbb
lea
xlat
sbb
dec
in
jbe
faddp
inc
dec
push
xchg
xchg
mov
dec
insl
jmp
iret
jns
imul
hlt
xor
jecxz
lock
dec
shrb
dec
scas
loop
mov
fcoms
mov
lock
mov
xor
push
adc
mov
sbb
or
jo
push
push
pop
inc
jno
jmp
xchg
int3
adc
mov
inc
dec
daa
fisubl
fidivrl
cs
cmc
mov
push
adc
stos
sub
push
lods
inc
xchg
adc
out
rcrb
fdivrs
push
int3
pop
adc
inc
mov
xor
mov
jno
pop
pop
pop
sub
rcll
mov
rol
imul
nop
cwtl
dec
arpl
fdivl
sub
enter
push
jecxz
fiadds
add
sub
gs
test
fwait
mov
and
not
out
push
pushf
cmp
inc
xchg
or
inc
cmpsb
pop
jp
push
xor
enter
fadd
xchg
inc
rorl
xchg
aaa
sbb
add
cwtl
mov
pusha
mov
jo
pop
xchg
icebp
js
and
inc
mov
out
dec
xchg
xchg
into
iret
das
int
insb
jp
xchg
inc
insb
rorl
xor
mov
repnz
aas
add
bound
rcll
fcompl
cli
rcl
adc
and
mov
out
mov
jno
test
loope
and
stc
repz
xlat
inc
push
and
sub
sbbl
mov
repz
and
je
call
cwtl
adc
loopne
xchg
sub
pop
or
cmp
mov
fwait
and
mov
fnsave
sbb
sub
ja
lds
jae
outsb
sub
mov
adc
stos
arpl
hlt
mov
rol
push
std
stos
xor
or
js
cmp
mov
xor
xor
insb
fistl
mov
out
rclb
adc
adc
and
jecxz
scas
in
sub
je
pop
test
sahf
repnz
gs
cmpsb
mov
test
clc
xchg
add
rclb
xchg
mov
outsl
nop
add
das
adc
outsb
outsl
ljmp
ret
lret
sub
test
ret
int3
push
jg
lret
cmp
lods
dec
push
out
mov
std
int3
pop
lock
sub
cmp
sahf
mov
push
xorl
mov
subl
sub
es
cmpsl
jno
pop
mov
std
in
insl
xor
sub
aaa
mov
cmpl
pop
or
outsl
sbb
repz
push
pop
pop
in
jno
aad
lds
ret
xchg
sub
mov
jge
dec
sub
mov
das
xor
stos
sub
idivb
jmp
imul
dec
cli
mov
mov
mov
sub
leave
fidivl
cmp
ljmp
mov
and
insb
push
enter
adc
shrb
sbb
push
push
dec
xchg
rorb
faddl
adc
add
jge,pn
shl
in
lret
cmp
jmp
dec
inc
cli
movsl
mov
sub
or
popf
ret
mov
inc
aas
xor
lcall
jno
cmp
scas
lods
pusha
cmp
addr16
pop
push
mov
out
mov
cwtl
lcallw
pop
mov
fdivrs
inc
ja
add
loopne
test
shlb
fildl
xlat
dec
pop
jl
rcrl
jmp
mov
push
es
lock
sub
ds
aas
mov
adcb
xor
das
loop
js
popa
pop
stos
push
pop
jne
sbb
jae
push
cs
pop
mov
addl
or
and
mov
xor
int
xchg
and
test
mov
lods
or
sub
pop
mov
insb
lret
das
pop
fldcw
scas
pop
jbe
clc
mov
aad
dec
testl
addr16
cli
sbbb
mov
push
shrl
and
push
rolb
cmp
pop
cltd
loop
out
lahf
js
ds
pop
jmp
mov
fimull
inc
mov
or
testl
mov
sub
add
mov
dec
sti
inc
xor
mov
push
insb
mov
sbb
xchg
xchg
adc
call
push
mov
xor
mov
cmp
pushf
inc
inc
dec
adc
sub
dec
popa
stc
movsb
mov
lods
daa
pop
pusha
sub
push
mov
sbb
fwait
out
jmp
or
loopne
sbb
cld
iret
adc
xchg
jmp
xor
sub
cmc
jmp
popf
fisttpl
xor
push
bswap
movsb
rorb
or
dec
mov
push
adc
cmc
mov
pop
mov
imul
sti
leave
outsl
ds
sbb
push
stos
cli
jge
inc
adc
imul
pop
push
out
mov
mov
or
adc
adc
sahf
xchg
sbb
sar
sbb
mov
stc
push
repnz
push
xchg
push
sub
data16
popa
ds
sarl
stc
outsb
jl
test
popf
pushf
push
aas
sbb
jmp
mov
loop
cmpsb
add
jmp
out
mov
xchg
add
sbb
dec
xchg
mov
cmp
das
xchg
inc
cwtl
xor
sbb
xchg
jge
push
test
ret
sbb
aaa
repnz
pop
mov
dec
stos
cld
cmpl
sti
icebp
push
push
push
pop
rol
fs
add
adc
jp
jo
data16
fisubrs
insb
enter
test
adc
rclb
lahf
test
push
into
jge
insl
xchg
data16
sti
mov
int
xchg
xor
sbb
inc
jb
dec
xchg
rcl
fdivrs
rcrb
xchg
jbe
cmp
subb
pop
jns
es
push
mov
or
sub
jg
push
push
ja
loopne
inc
out
or
iret
lahf
ljmp
cmpsl
adc
mov
rcll
mov
scas
aas
in
cli
add
repnz
jmp
pop
and
xor
xor
adc
movsl
jle
mov
or
inc
push
arpl
daa
adc
in
leave
sbb
mov
lahf
jb
xor
cwtl
pop
cwtl
rcl
add
shll
pusha
das
mov
adc
dec
mov
aam
lretw
fwait
cld
lock
out
and
out
jle
stos
inc
and
jno
popf
mov
push
inc
enter
lcall
and
or
ja
push
xchg
cli
mov
adc
and
cmp
add
cwtl
iret
jmp
cmpsl
inc
cmp
push
in
clc
leave
stc
outsl
rolb
xchg
pop
pop
mov
sub
call
gs
lahf
fiaddl
jbe
jle
mov
jmp
scas
stc
out
jp
mov
not
xor
fsts
mov
sahf
inc
cmc
sbb
xor
lods
roll
fwait
in
jns
inc
push
in
out
bnd
pop
pop
pop
mov
push
out
push
lock
in
mov
jg
mov
mov
mov
sahf
pop
lds
inc
push
or
xchg
ficomps
cmpsb
xchg
pop
dec
lock
les
pop
sub
inc
imul
add
jmp
push
aas
fsts
lods
jle
scas
imul
mov
lret
mov
mov
sub
cmp
add
aam
adcl
adc
clc
mov
cmpsb
and
pop
push
cld
fldt
jae
lds
adc
dec
dec
xchg
jmp
pop
mov
ror
push
fimuls
jge
add
jecxz
je
loop
xchg
or
jecxz
cltd
outsl
adc
inc
inc
pop
push
das
cld
imul
mov
push
or
cmpsb
dec
repz
jns
dec
mov
sbb
mov
pop
sub
xor
adc
pop
mov
les
xchg
lcall
pop
or
je
ret
out
insb
insb
push
mov
int
mov
jg
negl
dec
fidivrs
jns
lret
lcall
add
mov
jns
fbstp
lcall
sub
es
sub
js
and
mov
jecxz
iret
cs
stos
daa
stc
or
pop
int3
mov
sbbb
push
mov
enter
pop
int
rclb
int
fcomip
hlt
mov
mov
mov
mov
xchg
lea
inc
shll
popa
in
mov
daa
shlb
cmp
xor
sbb
fadds
popf
aad
test
rcr
stc
mov
xor
jns
and
or
jae
dec
mov
int3
mov
cmc
in
mov
pushf
arpl
pusha
ret
xchg
in
cltd
jmp
rcll
mov
mov
pop
sub
addb
fmull
mov
ret
gs
jg
cwtl
push
jae
imul
dec
into
jb
ja
dec
cmp
daa
pop
mov
out
shl
ds
xor
pop
push
and
mov
cmp
xor
xlat
cmpb
jmp
cli
xchg
or
pop
fst
repnz
mov
jmp
xor
xlat
or
cmp
push
loope
sahf
cmp
std
pop
gs
inc
js
mov
gs
mov
nop
movsl
aaa
leave
jae
std
in
add
jg
jmp
cld
idivl
loopne
fcmovnbe
mov
sub
cld
repz
lds
sub
cmp
repnz
xor
ret
pop
xor
mov
imul
sub
mov
push
gs
xchg
push
addb
popa
ror
aam
mov
sbb
xchg
or
ljmp
lods
push
xor
inc
push
sahf
lcall
or
movsl
arpl
lcall
sbb
test
fucomp
mov
or
mov
mov
js
subl
data16
jb
test
jl
leave
jbe
aad
pop
inc
jb
mov
arpl
jmp
into
ss
lcall
std
jnp
add
cli
jne
sbb
or
and
aad
mov
insl
pop
lcall
cmc
frstor
sbb
scas
dec
rcl
push
pushf
shll
ret
test
inc
xchg
xchg
mov
ja
inc
sbb
mov
jmpw
sub
testl
pusha
adc
mov
fucom
cmp
daa
mov
mov
or
mov
add
lret
and
loope
das
aaa
jne
lret
add
dec
loop
jns
int3
xchg
ss
inc
adc
fcom
lock
out
mov
out
call
pop
lret
mov
xor
sub
popa
lret
shll
push
jmp
sbb
daa
jno
xor
mov
dec
sbb
pop
inc
push
push
mov
cmp
mov
outsb
add
xchg
repnz
mov
mov
add
outsb
cmpsb
jle
adc
clc
test
les
outsl
dec
and
fsubr
adc
xchg
jle
loope
loop
mov
int
popf
and
popa
inc
xchg
lcall
dec
sti
xor
dec
pop
ficoml
mov
xchg
insl
or
inc
xchg
clc
stc
mov
shl
sbb
cmp
testl
mov
cmpsb
jae
push
insl
jo
inc
insl
ljmp
aad
lods
shlb
xor
inc
ret
xchg
mov
or
fistps
subl
out
mov
push
cmp
sbb
icebp
leave
add
rolb
mov
cmpsb
xor
sbb
add
mov
jg
xor
stc
mov
inc
ficompl
jecxz
push
jl
pop
push
call
data16
push
das
lods
add
jo
sti
leave
data16
out
insb
push
push
xchg
loop
lahf
and
jo
iret
or
je
inc
rol
adc
and
in
or
xor
inc
cmc
aas
xor
sbb
mov
add
lahf
outsl
in
adc
push
push
xlat
inc
inc
fwait
repz
adc
jl
inc
lea
lret
loope
mov
sbb
inc
push
sub
sbbb
dec
xor
mov
insb
mov
dec
sti
jns
out
cmpl
pop
shlb
bound
adc
add
add
or
and
popa
cltd
cli
popa
xchg
fsubrl
std
xor
hlt
and
int3
push
nop
ret
sahf
push
sbb
sbb
jb
shl
aad
dec
mov
fdivrs
in
cmp
rcrl
mov
xchg
addb
dec
dec
xchg
push
decb
adc
cli
clc
mov
jecxz
cmc
mov
jmp
push
leave
xor
lea
dec
xchg
mov
lcall
mov
mov
pop
and
subl
addl
das
cmp
or
clc
leave
lds
jne
dec
orb
mov
fldcw
ja
or
cmpsb
out
push
scas
hlt
xchg
jns
imul
and
test
jns
xchg
repz
mov
ret
mov
xchg
iret
sarl
divl
jecxz
mov
jno
cli
mov
movsl
call
arpl
call
xlat
lret
pop
mov
ficomps
lcall
inc
inc
int3
dec
cltd
inc
push
repz
call
aad
or
std
jno
pop
fiaddl
fldt
cs
bound
cmp
pusha
nop
adc
xchg
adc
pop
bound
cltd
aam
push
push
std
aaa
ss
adc
jns
loope
test
adc
mov
les
xchg
addb
pop
xchg
add
das
xchg
cs
outsl
fcompl
in
test
mov
jne
mov
push
popf
clc
jbe
ret
mov
ds
in
mov
push
lret
cmp
pop
dec
out
pop
jnp
incl
int3
dec
lar
test
sub
dec
mov
cmpl
inc
sub
push
imul
mov
imul
push
or
stc
sub
dec
mov
xchg
mov
xchg
xchg
mov
loopne
jne
ljmp
mov
fcom
mov
mov
lds
add
aam
outsl
lock
pop
xchg
sti
movd
icebp
repnz
sti
xchg
push
mov
sub
xchg
cwtl
fcmovu
push
pop
mov
cmp
sbb
movsb
js
enter
adc
cmp
sub
cli
pop
iret
xchg
cmc
lahf
inc
and
roll
sub
icebp
ret
scas
push
sub
mov
loop
mov
mov
mov
jns
ss
mov
inc
cmp
xchg
dec
jl
add
insl
aaa
and
cmp
test
pop
inc
mov
out
inc
daa
pop
int
sub
sarl
pushf
add
test
clc
imull
imul
xor
mov
rolb
dec
stos
sbb
push
and
out
push
sbb
dec
fs
jb
stos
cld
jmp
xor
sub
jl
and
sar
mov
add
dec
lahf
inc
shl
add
or
mov
xchg
imul
pop
cmp
jnp
jle
mov
pop
icebp
and
cs
dec
test
aam
adc
std
cmp
insb
pop
pusha
cli
lcall
mov
push
std
push
ret
nop
cmpsb
ds
inc
mov
orl
mov
and
xchg
add
movsb
add
test
lods
mov
sbb
adc
outsl
sbb
sbb
inc
add
out
rcrb
pop
into
rol
iret
or
fs
cmp
sub
pop
xor
daa
jbe
movsb
mov
sti
outsl
xor
or
mov
mov
in
mov
mov
mov
pop
and
cmp
pop
aad
xor
ja
sub
jle
scas
jmp
sub
and
adc
xor
lret
mov
add
xor
jne
shl
jl,pt
sub
gs
or
xor
xlat
fs
xchg
lods
push
mov
mov
imull
pop
leave
pop
cltd
sahf
mov
cmp
sbb
scas
sbb
addb
jae
mov
imul
adc
lret
cmp
sbb
pushf
push
rorl
les
enter
adc
xchg
std
stos
les
rcll
lods
aas
aam
jnp
lahf
loopne
sub
adc
push
mov
jnp
pop
xor
shrl
arpl
int
xchg
mov
scas
fidivrs
pop
xor
mov
fneni(8087
or
inc
js
adc
pushf
xchg
scas
jnp
mov
icebp
inc
ss
mov
adc
shrb
jnp
and
inc
insb
into
movsb
xchg
xor
jmp
ja
xor
fisubl
jae
pop
loope
loope
pop
in
sbb
cmp
das
daa
test
subb
pop
addr16
and
sbb
mov
loope
repnz
pop
rep
cmp
ret
mov
sbb
andb
test
mov
hlt
xor
int
mov
dec
dec
inc
cld
movsl
jge
icebp
imul
loope
mov
push
lcall
add
sbb
mov
or
jle
xchg
ret
cmp
jbe
ja
scas
jo
rolb
mov
lcall
inc
in
sub
test
test
add
inc
add
push
js
jnp
adc
loope
pop
shll
adc
cmp
sub
mov
pop
jo
jg
int
xchg
scas
inc
in
or
aas
repnz
push
and
mov
xor
dec
jle
aad
sub
call
sbb
and
pop
jbe
ret
aad
dec
mov
inc
cmp
int
mov
fldt
pop
pop
and
data16
ss
into
repnz
sahf
sbb
mov
mov
sub
fdiv
mov
cld
sbb
and
pop
sbb
clc
jbe
testb
dec
lods
ficoms
js
dec
push
js
jle
mov
cmc
and
insl
mov
cmpsb
xor
lret
lahf
sbb
mov
enter
xor
pop
pop
ficoml
pop
je
mov
cld
xor
cmp
cmpsb
and
cltd
insb
add
pusha
mov
xchg
stos
jl
test
xor
dec
sub
sub
sub
jae
xor
ss
and
adc
sub
xor
ja
scas
arpl
or
lea
dec
cs
xchg
and
iret
fbstp
lods
mov
or
mov
jmp
jl
cmp
push
mov
fidivl
adc
outsb
pop
inc
or
ret
lock
outsb
dec
cs
adc
mov
ror
stc
movsb
popa
decb
and
sub
fistl
xchg
insb
aad
and
dec
push
mov
pop
les
call
sub
inc
add
adc
dec
je
out
xchg
mov
test
dec
xor
lret
or
xor
outsb
test
aad
sbb
pop
call
pop
mov
fnsave
in
out
mov
jns
mov
cmp
sbb
fisubs
aas
fs
cmp
pop
cs
popf
dec
jne
push
sbb
int
lods
cs
arpl
mov
lds
dec
adc
int
movsb
repnz
iret
insb
loopne
ljmp
in
jae
pushf
mov
std
stc
popa
mov
push
xor
push
push
pop
test
adcl
outsb
pop
xlat
dec
mov
fs
mulb
xchg
add
xchg
mov
inc
cmp
arpl
sub
mov
jns
mov
sarb
insb
and
jl
test
inc
imul
sti
sbb
subb
push
xchg
push
xchg
inc
insb
mov
lret
inc
push
mov
in
loopne
jecxz
rolb
stc
cmp
vfnmsub132ss
pop
and
cld
and
cltd
adc
jg
sbb
subl
inc
je
and
cmp
out
push
data16
or
ret
mov
xchg
cwtl
cmp
xchg
int
lahf
faddp
pop
imul
inc
outsl
push
xchg
cltd
jnp
addr16
pusha
push
ja
inc
shll
mov
add
add
lods
mov
cmpsb
adc
mov
mov
lods
mov
stos
push
aas
out
mov
pop
nop
sbbb
mov
push
in
mov
inc
imul
leave
pushf
je
or
push
sahf
sub
fdivrs
dec
aas
jp
sub
and
icebp
xor
insb
lahf
imul
pop
inc
xchg
add
jne
xlat
xchg
dec
out
jmp
sub
mov
sarl
repnz
jns
aaa
aam
sbb
in
dec
mov
push
in
add
pop
cmc
arpl
mov
add
jecxz
cld
sbb
out
xor
xchg
adc
jge
jno
icebp
fistpl
push
inc
icebp
data16
dec
add
aad
mov
push
adc
sti
cmpsb
in
adc
ja
push
xor
dec
add
in
insb
rcrl
fimuls
lahf
decl
xor
std
xor
stc
or
ljmp
aaa
xor
dec
loope
fs
sbb
mov
push
sub
cmc
push
jno
sbb
test
jns
push
ret
test
lods
aam
sub
xlat
arpl
repnz
xchg
pop
sti
dec
sbb
out
in
mov
xchg
repnz
jecxz
sub
sbb
cmp
in
push
xchg
test
sub
dec
std
insl
or
xchg
xor
mov
js
lret
xchg
xor
dec
push
or
push
in
and
lahf
enter
jno
jmp
push
test
in
repz
loope
lcall
fmul
clc
ret
imul
daa
scas
jae
clc
xor
insl
mov
mov
lret
sbb
lret
aad
mov
cmpsl
xor
jne
mov
insl
ret
xchg
cmp
clc
xchg
gs
addl
add
das
ficoms
pop
adc
in
mov
cmp
push
aad
cmp
push
in
daa
mov
fwait
aaa
in
push
mov
fcmovu
rol
and
nop
outsl
mov
sbb
dec
dec
test
std
iret
out
xchg
and
loop
mov
push
addl
repnz
fists
roll
movsl
or
clc
lret
sub
jb
sahf
push
lock
gs
into
test
inc
push
int3
mov
xor
mov
mov
jecxz
pop
sub
dec
pop
pop
test
daa
pop
pop
mov
es
std
xor
push
sbbl
int3
cmp
fsub
mov
and
out
clc
fstpl
jne
ds
fcoml
or
cli
pop
into
adc
or
int3
cmp
fwait
lcall
lret
mov
dec
sbb
mov
sub
lcall
mov
nop
lcall
lahf
call
sahf
lahf
leave
cmp
adc
and
rcrl
loope
ds
push
inc
pop
test
adc
cmpsl
mov
lods
mov
xchg
adc
sub
add
adc
add
sti
hlt
push
xchg
push
scas
mov
in
cmpsl
repz
adc
jmp
lret
out
jmp
mov
pop
mov
test
mov
lea
das
out
pop
aaa
fwait
mov
lock
mov
andl
xchg
aaa
int
cwtl
dec
fadds
std
adc
cld
push
imul
ret
add
jg
mov
es
mov
jl
test
punpckhwd
ds
sub
adc
mov
pushf
arpl
or
test
mov
mov
out
mov
rcl
add
mov
dec
ss
pop
cs
cmc
scas
cmp
jp
mov
push
lcall
roll
jo
inc
mov
sbb
les
outsl
or
jne
es
xchg
aaa
pop
mov
lret
incb
scas
sarl
sub
dec
fisubs
cltd
jae
lock
fsubs
jp
fadd
les
loop
lret
daa
inc
pop
cwtl
jnp
mov
je
shll
and
mov
add
sahf
ljmp
push
stos
leave
push
and
cli
sub
ja
and
mov
pusha
xchg
pop
push
out
mov
in
and
shll
jge
inc
dec
xchg
adc
pop
loop
in
ds
add
int3
inc
cmpsl
fnstcw
fisubl
cmp
loope
leave
and
test
mov
dec
adc
leave
insl
repz
push
sub
into
out
mov
adcb
cmp
mov
fistpll
outsb
into
orl
mov
fiadds
dec
mov
mov
shll
add
fbstp
int3
mov
in
mov
and
push
lds
frstor
jg
int
jecxz
leave
shrd
add
pop
or
xlat
xor
xchg
mov
shll
cmp
dec
movsl
xor
out
outsl
pop
add
jno
push
loope
adc
es
mov
dec
mov
pushf
xor
jns
pop
pusha
or
leave
in
mov
mov
cli
inc
or
mov
sbb
and
and
jle
lahf
lret
in
jo
push
and
cmp
fwait
imul
xchg
jg
sahf
test
mov
jbe
testb
push
iret
repz
out
adc
jnp
fsub
mov
xor
fcompl
dec
stos
inc
movl
jnp
mov
push
out
sahf
lret
fisubs
and
jbe
call
aam
adc
int
jns
aaa
mov
arpl
aaa
enter
cmpsl
cmpsl
mov
mov
stc
add
out
sbb
clc
bound
adc
cmpsl
scas
test
xchg
cli
push
jge
loope
push
xor
out
lahf
aam
push
mov
inc
adc
stos
hlt
xchg
jge
lock
aad
lds
jge
sub
test
movsl
cmp
mov
test
push
mov
and
jnp
std
jno
popa
mov
addb
inc
test
fs
lods
push
push
jnp
testb
test
adcl
jbe
adc
test
sarl
push
lea
sbbl
inc
push
cmpsl
test
rorb
ret
std
in
or
sbb
pop
mov
push
push
lock
inc
loopne
out
ljmp
push
xchg
and
jns
divl
sub
stos
pop
inc
jle
or
xlat
stos
pushf
inc
in
push
xor
push
inc
inc
jl
testl
fnsave
jno
bound
and
lods
push
in
sbb
out
scas
xor
pop
sub
cwtl
pop
inc
gs
lds
cld
fwait
xchg
addr16
dec
dec
xor
add
lods
loopne
mov
jo
push
ja
push
add
jl
xlat
mov
mov
mov
shrl
jg
cmp
push
push
jb
outsl
rolb
jbe
sub
mov
push
add
xchg
push
pop
cmp
sbb
cmp
sbb
mov
push
mov
idivl
push
lcall
mov
sti
xchg
iret
mov
cmp
loopne
out
repnz
add
lods
jne
sbb
sub
dec
imull
pushw
imul
push
clc
xchg
push
push
pop
mov
cmpl
push
fs
outsb
or
adc
push
pop
push
mov
lcall
test
cld
adc
xlat
fsubs
push
adc
sar
xchg
sti
fst
jae
cmp
cli
int3
push
movsb
mov
cmp
xor
and
push
xor
push
mov
imul
lock
push
fwait
inc
pop
jg
xchg
aad
cmp
out
mov
xor
pushf
jmp
sub
adc
nop
cmp
clc
sbb
stos
movsb
mov
push
pusha
adc
jae
jg
adc
arpl
mov
sbbb
or
data16
dec
pop
sbb
imul
rcrb
jg
cmp
adc
mov
xorb
ljmp
dec
push
les
pop
jne
addr16
xchg
mov
shll
or
inc
imul
roll
add
xchg
mov
cmpsl
xchg
sbb
or
out
aaa
jle
int3
jnp
jne
mov
cmp
xor
sbb
adc
scas
icebp
fs
adcb
mov
je
int3
loop
rcrl
jne
out
arpl
mov
inc
add
sarl
pop
rcrl
xor
jno
ret
xchg
push
data16
fcmovb
inc
aad
jge
pop
lods
push
lea
jge
ss
adc
push
nop
leave
inc
mov
push
jp
je
mov
jecxz
xchg
shlb
inc
pushf
lret
cwtl
fmuls
lds
or
push
jb
push
pushl
in
out
in
mov
xor
pop
insl
inc
sub
pop
push
dec
mov
mov
lret
cmp
sahf
add
mov
shl
aad
xchg
pop
or
nop
jne
and
pushf
orb
paddsw
pop
cmpsl
out
in
in
cmp
cmc
sub
jg
test
call
sahf
aam
cmc
sub
cmp
pushf
adc
in
inc
sti
xor
mov
fcomi
into
xchg
loop
cmpl
dec
xorb
adc
push
mov
or
cld
adc
xchg
in
push
mov
pop
and
lret
dec
loopne
push
and
fldenv
mov
jp
loopne
pop
dec
sub
lds
ret
lcall
cmp
mov
pop
movsb
push
xchg
or
or
test
add
push
pop
rorl
sub
mov
mov
dec
jno
ja
or
mov
je
test
je
les
popa
repnz
cmp
cli
fwait
pop
xor
hlt
inc
cmpsl
sub
cmp
jb
insl
movsl
loop
insl
xchg
mov
push
push
jne
mov
and
mov
sbb
fldl
pop
sbb
mov
iret
stc
aaa
movsl
pop
insl
fwait
jl
repz
mov
cs
or
dec
cmp
inc
xchg
out
jecxz
or
mov
xor
dec
sub
push
xor
jbe
inc
stos
cmp
repz
mov
pop
fdivs
shlb
xchg
fcomps
pop
cmp
inc
jmp
loope
ja
in
sbb
cmpsl
adc
enter
dec
stos
fnstenv
dec
cwtl
cs
int3
shrl
mov
mov
jo
subb
dec
inc
xlat
icebp
mov
or
ret
and
sub
icebp
imul
dec
add
inc
nop
inc
mov
pop
mov
shll
push
push
pop
push
lds
sbb
push
push
and
adc
mov
mov
mov
stos
loop
or
add
dec
ja
push
stc
sti
movsl
push
icebp
or
shll
test
jle
sub
daa
or
xchg
dec
popf
cmp
enter
icebp
pop
jne
imul
in
ret
loope
adc
dec
inc
dec
cld
mov
mov
jae
in
arpl
cmp
or
dec
ret
xlat
push
jnp
or
xchg
cli
shlb
testl
inc
test
jbe
xchg
stos
in
sahf
out
ss
mov
sarb
stc
mov
inc
jo
mov
push
imul
popa
ds
in
lcall
xor
sahf
mov
add
cmp
rcr
jo
outsl
adc
pop
pusha
int
scas
lahf
pop
aas
sbb
push
stos
pop
das
dec
dec
pusha
out
aaa
leave
push
shll
sti
fdiv
daa
loopne
bound
sub
fwait
mov
rcrb
dec
mov
sbb
repz
fistpl
jb
fmull
je
push
shl
jne
mov
add
enter
mov
imul
mov
rorl
ss
inc
lock
imul
pop
leave
dec
mov
fwait
cmp
and
ds
icebp
adc
mov
xor
adc
mov
and
adc
psubd
pop
test
mov
mov
fbstp
push
das
push
or
add
dec
push
dec
sbb
inc
in
frstor
sub
push
addb
lea
lret
mov
inc
jmp
in
add
adcb
sbb
xlat
fs
lahf
rcrl
add
test
hlt
inc
ljmp
mov
jnp
push
scas
push
std
fwait
jo
scas
iret
mov
in
pop
xchg
into
sti
cmp
filds
sub
adc
in
test
dec
je
les
in
adc
and
lahf
add
push
pop
dec
add
inc
xor
cmpsl
pop
cmpsl
fs
hlt
xor
leave
inc
pop
mov
fmuls
or
aaa
lret
psubsw
pusha
cmc
shrb
pushf
repz
lahf
popf
xor
push
scas
aad
fwait
mov
insl
and
xor
and
xor
fs
int3
cltd
mov
push
insb
insl
fbld
cmp
pop
lods
jns
jl
or
pop
or
adc
shl
aad
aam
fwait
dec
inc
mov
sbb
xchg
cmc
idivl
shlb
andb
pop
stos
mov
jbe
les
sub
pushf
add
dec
outsl
sub
pusha
pmulhw
out
sub
sbb
xor
fcomip
in
outsl
push
or
nop
lahf
ja
ret
popf
mov
pop
cvtpi2ps
xor
dec
mov
jp
ret
sub
mov
pop
daa
movb
lret
push
jle
test
mov
adc
cwtl
or
and
mov
ljmp
and
pop
mov
ds
repnz
leave
mov
dec
or
or
in
sahf
xor
xchg
cli
dec
dec
pop
jnp
dec
aam
mov
adc
shr
fldt
push
repnz
xchg
jne
test
outsl
loope
shl
push
xchg
rcll
pop
xchg
xor
push
cmp
fdivrp
pop
add
int
push
js
cmp
lods
mov
mov
sub
xor
aam
xchg
push
in
inc
int3
repz
fs
sub
xchg
sub
ds
push
xchg
pop
add
or
negl
lret
aaa
int
out
xchg
push
rcr
xor
push
ja
cmp
mov
stos
inc
stos
scas
jb
xchg
or
dec
or
push
in
inc
xchg
mov
repz
and
faddl
jecxz
ret
inc
mov
push
cmpsb
adc
pop
fcoms
adcl
dec
mov
arpl
aam
mov
xor
dec
int3
popl
jno
in
push
fsubl
push
rclb
mov
dec
jo
sbb
inc
cmp
lahf
push
aam
shrb
mov
mov
orl
push
pop
lock
popf
xchg
push
dec
sbb
orb
test
sbb
and
fidivl
mov
sbb
mov
mov
leave
test
enter
inc
or
xor
les
loope
push
clc
push
ss
lcall
aam
xorb
clc
xchg
or
inc
pop
sbb
add
and
aad
sbb
aaa
mov
outsb
mov
in
cmp
xchg
jmp
xor
inc
or
test
cs
adcb
cs
stos
addr16
fsubrs
roll
jnp
stc
std
data16
in
pushf
push
fidivs
adc
xchg
outsb
mov
inc
xor
cmc
mov
popl
in
adc
jp
dec
ja
jae
in
cwtl
jle
mov
adc
mov
push
xchg
cmp
jo
adc
xchg
jmp
mov
outsl
aas
push
sub
pop
mov
push
jo
repnz
push
rol
pop
mov
xor
out
adc
pop
cli
fimuls
inc
mov
mov
mov
push
mov
nop
push
lahf
sub
pop
in
and
mov
fs
sub
mov
in
mov
imul
aas
mov
push
push
push
aaa
push
movsl
outsb
hlt
xor
fsubrl
pop
hlt
jb
dec
mov
or
pop
inc
test
xchg
pusha
inc
mov
rcrb
je
sub
pop
mov
mov
pop
xchg
leave
add
clc
fxam
imul
js
dec
je
pop
andl
sub
shll
pop
xor
les
mov
push
int3
add
repz
outsl
cmp
gs
jnp
movsl
fs
push
es
adc
loop
xchg
dec
push
jp
jp
xor
movsb
addr16
mov
rorb
add
movsl
decb
sub
notb
jge
sub
sbb
pop
rclb
dec
jno
fldt
xor
sbb
rcll
inc
sbb
pop
fwait
data16
int
add
into
xchg
adc
out
and
and
cmpsb
movsb
pop
outsb
mov
sub
pop
iret
fwait
pop
sbb
loopne
sbb
std
jl
call
push
jg
mov
dec
mov
xchg
lret
add
int3
ds
push
adc
push
in
repz
clc
or
les
pop
pop
lods
push
pop
or
ja,pn
pop
mov
pop
mov
std
ret
pop
xchg
das
mov
scas
dec
cmp
mov
pushf
das
int
rcr
xor
lcall
mov
int3
fadds
pop
je
not
push
mov
ret
jmp
cmp
lods
popf
xor
hlt
dec
lock
in
and
pop
jp
lods
jecxz
ds
test
mov
imul
jb
shl
push
mov
in
shrb
sahf
je
and
mov
pop
and
loope
cmp
imulb
sbb
cmp
sbbl
loop
mov
rcl
mov
mov
in
cmpl
jno
jmp
xchg
roll
xchg
mov
sbb
rcrl
daa
add
test
fidivl
mov
jg
out
lods
bound
repnz
and
xchg
out
sub
out
or
sbb
cmpsb
test
jg
mov
push
stos
testl
sbb
add
push
add
loope
dec
add
adc
stos
mov
pop
xor
ljmp
and
in
and
cmp
add
dec
js
and
aas
mov
cwtl
sbb
mov
cs
and
test
adc
je
popf
aas
add
xchg
aaa
loop
and
in
gs
adc
push
sub
add
dec
mov
dec
rclb
mov
sub
fcomps
xchg
mov
cltd
jp
mov
mov
mov
jg
popf
sbb
cmpsb
ja
fnstcw
loop
in
lret
inc
insl
push
jle
lods
jnp
mov
cmpsb
mov
mov
xor
mov
and
mov
jno
sbb
adc
shl
stos
adcl
dec
mov
pop
shll
or
mov
lret
andl
jmp
cmc
repnz
mov
jnp
pop
aad
aam
and
jl
jnp
cld
xor
ret
int
mov
or
test
repz
mov
ljmp
sbb
sbb
sbb
dec
inc
dec
xor
iret
mov
rcl
lea
and
sbb
nop
icebp
push
scas
mov
mov
cli
dec
arpl
jg
mov
mov
fnstenv
mov
imul
and
clc
dec
mov
mov
decl
lods
pop
xchg
mov
out
lods
out
adcl
mov
fucomip
mov
sbb
dec
lret
push
sub
ljmp
fstpt
divl
xor
or
sub
lret
lds
jg
in
test
mov
filds
xchg
jnp
push
or
sbb
out
sub
jl
fstpl
jecxz
xchg
pop
pop
fs
jo
adc
sub
dec
or
cmp
ljmp
int
jbe
add
pop
pop
xor
shlb
mov
sahf
js
mov
or
fs
in
enter
stc
dec
push
dec
rorl
addr16
push
dec
fstps
and
imul
xchg
fdiv
sub
push
mov
push
mov
mov
xchg
sbb
pop
mov
mov
stos
adc
pop
cmpsb
stc
test
mov
ljmp
jl
imul
out
mulb
sahf
pop
or
sbb
mov
jle
test
loop
pop
es
repnz
addb
and
mov
iret
adc
mov
xor
fwait
cmp
das
ret
xchg
dec
js
insl
push
jge
add
cmp
or
sbb
ds
js
dec
jno
or
fisttps
in
cld
jle
movsl
and
loopw
inc
and
or
insl
inc
es
cmp
cmc
data16
test
testb
or
jmp
insl
mov
imul
add
mov
or
mov
loopne
cmp
daa
test
jns
mov
push
cmp
mov
outsb
mov
cmpsb
call
lock
bnd
mov
jecxz
imul
pop
dec
jl
sub
mov
mov
pop
mov
mov
cwtl
sub
test
adc
cs
mov
add
or
add
popf
mov
out
test
lahf
dec
es
repz
mov
and
mov
mov
ljmp
push
mov
sbb
je
sub
xchg
xchg
sbb
or
mov
push
outsl
mov
loopne
pop
iret
push
cmc
je
mov
push
fsubs
mov
mov
fdivrs
push
popf
mov
ret
mov
lea
push
roll
movsb
mov
mov
or
mov
testl
mov
outsl
call
icebp
xchg
flds
lods
push
add
pop
pop
ja
popf
cmp
xchg
adc
dec
lods
lds
aas
ret
pop
addr16
and
int3
add
clc
test
shlb
pop
jp
add
pop
int3
mov
sbb
sahf
or
pop
dec
negl
and
je
pushf
test
xor
jg
int
adc
xchg
jge
nopl
cmp
testl
js
adc
push
out
ret
popf
clc
pop
mov
call
mov
movsl
in
fwait
insl
aas
hlt
adc
pop
jne
push
cmp
push
pop
test
outsl
cs
fsubrp
sbb
mov
jp
mov
mov
xlat
das
popa
cs
xchg
loop
subb
jbe
pop
repz
push
push
lahf
imul
imul
ja
or
add
fsub
mov
push
inc
fdivp
addr16
mulb
push
js
push
mov
pop
jmp
cmp
rcll
sub
sti
div
out
push
cs
sbb
jl
js
mov
cmpsb
aas
sub
cwtl
adc
shrl
adc
loope
add
mov
loopne
pop
cmp
call
icebp
pop
enter
xchg
add
les
xchg
and
inc
mov
movsl
xchg
roll
jp
and
add
or
ljmp
add
sbb
test
mov
adc
aas
enter
or
pop
jns
fimuls
bound
out
ss
mov
mov
push
jnp
sbb
mov
jle
mov
pop
loope
pop
dec
inc
hlt
xor
repz
into
push
je
jecxz
outsb
mov
imul
fcompl
mov
imul
jl
cmpsl
ljmp
push
jb
cmp
and
jle
dec
and
jge
push
int
push
mull
pop
out
cwtl
aaa
fsubp
mov
push
mov
and
adc
mov
pop
scas
lret
filds
mov
dec
fisubrl
shll
stos
gs
pop
popa
inc
mov
lcall
imul
sbb
hlt
mov
push
cs
imul
into
aas
lret
pop
cmp
cmc
cmpsl
daa
test
test
or
lret
lret
inc
mov
add
pop
jl
mov
gs
test
xchg
sub
push
jecxz
mov
lret
into
adc
into
aam
ret
cmpl
jecxz
xor
adc
adc
jge
xchg
mov
movsb
xchg
push
jg
fidivrl
jmp
cmp
fucomip
push
adc
lea
in
clts
inc
or
fsub
int3
rcll
std
xchg
loop
add
addl
call
xchg
pop
stos
jo
xchg
or
icebp
xchg
fdivs
dec
dec
lea
adc
nop
or
mov
jge
sbb
dec
iret
repnz
xor
and
fwait
mov
aaa
sbb
dec
test
in
scas
sub
push
mov
pop
sub
push
test
movsb
lret
add
in
push
pop
pop
icebp
pop
repz
mov
pop
popa
scas
cmp
or
stos
jmp
loop
popa
cmp
inc
inc
stc
icebp
adc
add
out
sub
pop
imul
xchg
cld
mov
dec
imul
dec
or
and
pop
je
jns
adc
cmpsl
lahf
aad
xor
dec
test
cmp
mov
out
in
and
mov
inc
scas
sub
pop
in
xor
cli
pop
xlat
push
add
adc
jmp
xchg
andl
jno
in
xor
mov
or
dec
je
loope
mov
adc
out
and
adc
cmp
inc
jns
mov
subb
xor
dec
jg
dec
icebp
mov
scas
xchg
test
test
xchg
xchg
loop
mov
loope
jp
inc
jmp
jo
sti
mov
sbb
inc
or
test
jne
jne
pop
sbb
xor
push
neg
xor
repz
inc
dec
adc
fimull
push
dec
imul
push
push
fnstcw
xchg
test
pop
int
push
scas
sti
push
jno
add
jl
out
test
mov
aas
repnz
in
repz
cs
fdiv
mov
data16
mov
pop
cmp
sub
stos
push
aaa
sbb
add
inc
daa
cmc
xchg
jl
jmp
sbb
adc
dec
test
into
mov
pop
daa
hlt
scas
mov
dec
scas
sub
movsb
leave
pop
xlat
dec
jns
test
iret
jns
fstps
add
or
push
iret
movsb
xor
dec
ljmp
sti
nop
cli
daa
jle
aam
mov
jb
aam
dec
push
fwait
dec
loop
push
call
stos
mov
pop
sub
push
lahf
mov
testb
mov
jno
push
pop
pop
bound
fwait
ret
ret
rcrl
les
aaa
mov
inc
mov
and
pop
xchg
ret
in
out
mov
div
es
call
outsb
xor
cmp
lea
andps
cld
incb
mov
xor
jb
addr16
addr16
sti
insb
pop
inc
mov
push
adc
cmp
in
push
shl
pusha
or
iret
pop
cmp
jge
jecxz
mov
iret
jns
cmpsl
pushf
aad
outsl
mov
fisubl
fdivp
fidivl
jnp
or
out
sbb
lock
shl
xor
mov
loop
rorb
inc
insl
int
fstps
push
arpl
int3
pop
lret
cwtl
aam
add
push
or
repz
hlt
push
in
mov
pop
aas
pop
jne
arpl
test
mov
or
loopne
sub
in
jg
add
rcrl
loope
or
mov
mov
je
mov
inc
dec
push
stos
lods
movsb
fildll
mov
mov
xlat
ds
mov
pop
es
mov
xor
mov
cmp
add
dec
sub
jo
lods
xor
popa
mov
insb
cmpsl
sbb
lret
inc
outsb
cmp
mov
repnz
pop
loopne
inc
mov
lea
adc
pop
pop
mov
add
adc
dec
jbe
test
pause
imul
orb
lods
push
call
cmp
xlat
cmpsb
pop
jp
push
mov
cmp
movsb
mov
gs
jecxz
out
aas
out
into
out
iret
flds
pop
add
mov
sub
bound
mov
xchg
ret
lahf
sarb
push
mov
sub
xor
mov
in
mov
fimull
fisttps
mov
scas
stos
jae
das
dec
fmull
std
int
lret
sti
lahf
int
int3
push
sub
ds
xor
lds
add
sbb
mov
stc
shll
fcmovnbe
jl
popf
sub
lcall
addr16
bound
aas
pop
dec
mov
test
stos
aam
mov
push
cmc
roll
and
add
pop
mov
rol
aaa
in
in
pop
cmp
push
add
aas
je
sbb
jne
movsb
shll
in
sub
xor
jecxz
std
bound
enter
mov
lods
popf
mov
in
int3
popf
inc
jbe
fninit
push
push
and
aaa
cmp
mov
in
jno
stos
hlt
sub
xchg
lret
ret
loop
lret
out
mov
addl
fwait
and
call
cltd
jno
sbb
leave
mov
inc
sar
xor
stos
shll
inc
out
mov
jno
cmpsb
cmc
lock
cmpsb
cmp
and
xor
inc
outsb
cmp
push
stc
xchg
jl
test
sbb
pop
mov
insb
xchg
dec
cltd
sub
popa
sbbl
xor
test
push
mov
imul
pop
mov
pop
add
outsl
xlat
loope
mov
xchg
lret
mov
sub
mov
push
xor
mov
iret
add
push
gs
xor
imul
sbb
sub
fdivrs
xchg
iret
push
mov
adc
jbe
orb
mov
jbe
jb
cld
out
stos
cltd
and
lcall
lds
sub
out
dec
into
std
xor
pop
icebp
orb
in
adc
mov
ljmp
outsb
lods
xor
call
cld
outsb
sbb
mov
add
inc
ret
dec
fcomps
dec
lcall
inc
and
scas
mov
mov
xchg
call
fisubl
stos
mov
or
sahf
push
mov
jo
mov
bound
sbb
inc
int3
inc
jb
dec
inc
adcl
mov
incl
mov
mov
in
out
mov
jle
outsl
shrb
ss
test
mov
divl
das
push
in
and
lock
mov
inc
xchg
iret
test
in
sbb
clc
push
fbld
imul
popf
and
xchg
xchg
dec
mov
minps
push
aas
pop
mov
lahf
pop
sahf
dec
ss
mov
jb
imul
lods
in
cmc
insb
xlat
jge
ret
inc
out
mov
fists
mov
xchg
mov
pusha
pop
adc
jne
mov
enter
movsl
insb
sub
pushf
pop
jo
hlt
mov
gs
fucomp
int3
int
outsb
aam
das
mov
lods
insb
jbe
icebp
into
lds
stos
and
jnp
es
add
dec
push
jo
or
lods
inc
fwait
mov
arpl
sub
in
imul
ja
jno
jmp
or
adc
push
lret
shll
mov
popf
sub
mov
in
add
pushf
and
xor
mov
adc
sbb
inc
movsw
adc
lea
push
mov
dec
popl
mov
cmovbe
cld
inc
cwtl
push
sub
sarb
dec
imul
stc
sub
imul
scas
and
in
cld
test
ds
scas
mov
out
xor
bnd
call
and
push
dec
jmp
fnsave
push
divb
sbb
lret
js
mov
cmp
mov
or
mov
sbb
imul
pushf
ljmp
scas
mov
inc
xchg
pop
fimull
adc
mov
and
hlt
ds
aaa
gs
cltd
dec
sbb
cli
sbb
bnd
pop
outsl
in
jmp
scas
pop
outsb
int
mov
xor
test
mov
movsl
testb
pop
and
push
xchg
pop
daa
dec
imul
pop
jne
call
add
sub
push
xchg
jbe
push
or
lods
in
cmp
or
cmp
stc
jnp
xor
mov
in
das
sarl
js
sbb
mov
jmp
or
jno
dec
in
pop
sub
jge
xor
and
mov
rcrb
mov
mov
addb
xchg
sbb
imul
rclb
pop
lods
popa
daa
pop
pop
push
and
daa
dec
xchg
stos
sahf
inc
add
or
adc
fisubl
aaa
rcr
and
inc
push
hlt
in
jne
adc
or
loopne
xchg
int
test
dec
test
mov
jae
mov
jecxz
ljmp
xor
cmpsl
cli
cltd
xchg
push
nop
mov
stc
mov
loope
call
fnstsw
mov
or
fwait
ljmp
and
ds
jp
mov
xor
push
sahf
push
xchg
pop
mov
in
push
fcomps
jl
sub
arpl
test
mov
gs
int
cmp
addr16
int
pushf
add
jle
sub
add
cmp
aam
test
repnz
xor
aad
shll
fmuls
mov
add
add
pop
pop
pop
sbb
mov
cwtl
mov
adc
xchg
nop
enter
xchg
pop
xor
iret
xchg
pop
in
and
jbe
dec
inc
or
clc
mov
fbstp
push
fldcw
inc
adc
cmp
lock
bound
jb
and
andb
aad
int3
fstpl
stos
push
mov
mov
outsb
call
das
enter
in
mov
enter
push
cmp
cmp
outsb
sub
lcall
add
sbb
jge
push
dec
xlat
push
mov
jmp
mov
out
mov
ret
or
test
cmpsl
jne
mov
mov
jae
rcrb
jp
scas
ja
dec
std
fdivrl
dec
das
popa
mov
cwtl
fs
push
mov
adc
pop
daa
mov
scas
jne
arpl
xor
sub
inc
mov
sub
pusha
mov
push
in
movsl
std
test
mov
cmp
and
daa
mov
fcom
sbb
movsl
repz
inc
imul
insl
push
xor
pop
popf
mov
outsl
cmp
adc
aas
sbb
mov
sub
loope
ret
icebp
and
scas
testl
orl
ret
out
in
in
xchg
je
pop
stos
mov
mov
mov
ja
scas
push
add
mov
and
test
cvtps2pd
xchg
xor
adc
mov
ds
inc
movb
bound
add
pop
data16
es
aam
out
addb
xchg
repz
lock
fiaddl
shlb
out
ret
xor
cmp
ljmp
xchg
or
jo
mov
mov
repnz
push
lds
movsl
add
cmc
loop
in
xor
mov
test
dec
test
push
add
push
sbb
nop
jae
idivb
repz
xadd
aad
adc
xchg
lock
xchg
pop
and
mov
cwtl
mul
fbstp
subb
fisubl
popf
out
loopne
xchg
jne
mov
cltd
lods
in
movsb
jg
adc
mov
xchg
fnsave
xchg
std
push
adc
pop
add
sub
mov
outsl
mov
fsubrs
stc
xchg
jae
rcrl
push
pop
cmpsl
popa
in
mov
subl
aam
jecxz
push
pop
clc
mov
ret
or
jp
test
idiv
data16
pop
mov
xor
jl
xchg
pop
aad
inc
mov
cmpsb
out
jne
call
or
xor
sbb
lods
mov
pop
sub
outsb
test
jne
jmp
gs
sbb
iret
shrl
jp
mov
jo
out
adcl
xor
fbstp
push
fnsave
dec
call
add
mov
jns
adc
xchg
and
pop
ja
test
sbb
inc
addr16
sti
shr
and
gs
leave
inc
cmp
cld
cmp
inc
lcall
and
fisubrl
popf
xor
mov
xchg
fwait
outsb
xchg
nop
cld
cmp
rcl
aas
adc
pop
in
mulb
inc
loopne
cmpsl
cmp
mov
adc
mov
pop
and
add
push
mov
xchg
cwtl
lahf
xchg
cs
mov
enter
call
mov
xor
add
or
repnz
in
push
lds
mov
in
aas
icebp
aam
pop
dec
in
out
imul
pop
xchg
adc
ja
push
xchg
movsl
or
cld
in
cmc
adc
push
mov
pop
mov
pop
daa
mov
dec
jbe
sbb
sbb
pusha
xor
add
xchg
pop
shll
dec
cmp
fisttpll
jbe
pop
xchg
ret
cmp
sbb
mov
xchg
xchg
stos
push
adc
lcall
mov
jge
mov
pop
mov
mov
out
stc
sub
dec
aad
xor
pop
cmp
pop
and
test
cmp
sub
cmc
push
bound
loopne
or
fs
and
cmp
out
add
and
fildl
push
sbb
jecxz
fisttpl
icebp
jne
es
popa
sbbb
mov
fcompp
decl
js
aas
jns
xor
mov
push
loop
je
adc
out
push
out
jge
ret
mov
out
sti
mov
dec
lret
mov
in
dec
sub
mov
out
push
sar
popf
cmpsb
jl,pn
pop
rcrb
pop
enter
mov
popf
adc
push
mov
xor
sbb
aam
jge
push
dec
fcmovnu
push
dec
push
sub
scas
xor
add
pop
cmp
adc
add
mov
mov
mov
iret
in
ja
stc
out
and
int3
xor
cmpsb
add
lods
adc
sub
inc
jmp
sub
and
pop
ss
sbb
rclb
das
or
pop
pop
xchg
das
mov
iret
jne
jp
lds
aaa
leave
pop
push
mov
dec
xor
jp
sarb
sub
mov
jl
mov
int
fwait
or
fistl
mov
jmp
addr16
rcll
sti
mov
shlb
ljmp
lret
dec
vpinsrw
pop
mov
arpl
mov
loope
xchg
call
popf
and
pop
push
sahf
jno
mov
adc
sub
xadd
test
mov
mov
movsb
xor
fisttpl
data16
stos
jno
sbb
dec
xchg
cmp
repnz
jae
stc
cld
add
cmc
das
pop
jmp
xchg
out
mov
mov
mov
rorl
inc
popa
mov
fists
xor
and
fisubs
dec
xor
mov
dec
mov
cmc
pop
pop
jbe
data16
hlt
in
pop
mov
or
mov
pop
cmp
add
mov
dec
enter
mov
arpl
fwait
out
cmc
xchg
sti
push
xchg
mov
sbb
data16
mov
sahf
add
dec
dec
sub
or
push
dec
xlat
cltd
add
jnp
cmpsb
mov
xchg
aad
mov
pop
push
leave
jbe
or
dec
push
fists
loope
dec
mov
in
mov
and
sbb
mov
stos
xor
sbb
add
movsl
outsb
pop
repz
cmp
cltd
fsubs
dec
sbb
adc
add
sbb
mov
inc
pop
iret
enter
push
dec
push
testb
jb
js
fldcw
out
leave
sub
push
dec
test
cltd
ljmp
fdivrl
int
aad
cmc
mov
mov
data16
filds
enter
test
ss
les
int
mov
cmpsb
paddusw
out
jnp
inc
mov
movl
push
push
in
mov
or
mov
lahf
or
sarb
xchg
xlat
mov
das
mov
or
mov
dec
in
cs
adc
push
xor
xchg
xor
in
jmp
test
cld
pushf
fwait
and
aad
pusha
xchg
pop
xchg
cmp
sub
jmp
sahf
mov
test
ficoml
sub
or
imul
ja
cmp
je
push
jge
loope
pop
in
jp
xor
arpl
pusha
pop
pop
adc
test
mov
and
mov
ljmp
pop
and
add
xchg
mov
pop
mov
sub
mov
sbb
xchg
dec
sub
sbb
cmp
pop
sub
popa
fisubl
pop
add
andl
test
dec
into
cmp
lret
ficoml
fwait
push
outsb
cltd
lret
push
push
xchg
mov
dec
lods
lret
lcall
xor
out
jae
mov
xchg
cmp
enter
pop
mov
jg
pop
push
ds
inc
mov
rol
mov
mov
jb
or
mov
enter
cltd
in
int3
icebp
adc
xor
arpl
add
fnstcw
adc
jecxz
dec
cmp
dec
mov
add
daa
jb
mov
mov
pop
push
lods
xchg
sbb
loopne
push
mov
cs
cmp
loope
outsl
xchg
push
push
or
gs
ja
daa
inc
lahf
mov
adc
push
ror
add
and
jo
pop
mov
or
sbb
cwtl
inc
mov
mov
add
mov
fldl
jecxz
andb
fistl
cmp
inc
les
sbb
and
jge
push
repnz
push
arpl
inc
mov
out
or
fwait
and
pop
dec
test
mov
stos
cmp
add
aam
es
lcall
lods
sub
sbb
inc
sbb
lcall
xchg
pop
mov
sahf
and
pop
mov
lahf
and
sbb
mov
push
lods
xchg
pop
in
iret
and
jmp
dec
xlat
int3
mov
mov
lods
repnz
cmp
or
inc
mulb
pop
out
imul
sti
fistpll
mov
clc
mov
sub
dec
pop
pop
mov
jmp
push
nop
mov
js
outsl
jno
popa
aam
and
mov
add
f2xm1
stos
cmpsb
fwait
push
jmp
sub
aas
cmp
test
outsl
popf
cmpsb
jae
enter
js
mov
lret
lods
inc
xchg
dec
jecxz
in
insb
dec
in
cli
nop
and
add
fwait
imulb
sub
test
das
cmpb
movsl
out
fs
stos
ret
add
rcl
add
add
ret
out
add
xorb
push
xchg
aad
mov
add
ja
xchg
push
push
sub
pushf
out
and
dec
fs
mov
aad
insl
and
ss
dec
xor
clc
mov
and
das
loope
adc
cmp
pop
dec
repnz
dec
jae
ret
enter
push
xchg
sbb
stc
mov
push
cmp
pop
mov
jmp
pop
out
or
test
loopne
divl
sbb
sbbb
adc
dec
sahf
jp
xor
bnd
das
push
fists
xor
out
mov
mov
xchg
lahf
mov
iret
les
fdivrs
cld
xchg
shlb
inc
dec
sbb
rorb
push
add
fcoml
add
mov
push
stc
or
test
mov
fwait
jo
in
insb
popa
lods
mov
int3
sub
inc
sbb
out
imul
cld
lods
or
pusha
lret
add
inc
or
sbb
ds
movsl
mov
push
jno
adc
pop
jge
pop
mov
add
popa
daa
cmpsl
mov
push
fmuls
mov
scas
fiaddl
mov
mov
jbe
pushf
pop
push
in
loopne
mov
shl
stc
orb
movsl
scas
fwait
and
ja
vmovsd
adc
sahf
mov
lahf
push
pop
popf
arpl
lret
sbb
or
daa
scas
pop
enter
imul
enter
leave
fiadds
lahf
add
ljmp
gs
adc
loopne
push
jecxz
bound
xchg
inc
lds
lret
pop
push
mov
add
mov
cmp
movsb
out
lea
scas
insb
call
lea
cmpsb
mov
ja
testl
cmpsl
and
jp
jle
pop
shll
movsl
adc
mov
sub
mov
xchg
jl
jbe
mov
test
or
adc
jge
cmp
shrb
pop
pop
mov
cmp
push
adc
xor
pushf
xchg
shll
lcall
or
imul
xor
imul
fdivl
inc
aaa
cmp
cmp
mov
add
in
sbb
add
sub
stos
cltd
dec
jmp
sub
mulb
sub
jb
dec
pop
sahf
jb
loope
dec
pop
sub
push
loopne
and
es
pop
insl
sub
add
pop
sbb
pop
fists
imul
inc
aas
lahf
shrb
pop
test
xchg
imul
div
stos
add
add
inc
lods
iret
jne
in
adc
jnp
inc
nop
cmp
jb
ficoms
mov
outsb
insb
outsb
int3
adc
add
sti
xchg
xlat
andl
pop
cld
clc
mov
mov
imul
pop
mov
ret
imul
jmp
inc
push
ss
iret
int3
cmpsb
xchg
test
push
movsb
data16
push
lret
jo
sbb
fnsave
into
rorl
ja
sbb
jmp
test
dec
xor
sub
adc
or
jmp
dec
pop
jecxz
out
ja
add
test
dec
dec
fidivrl
dec
je
sbb
dec
inc
push
mov
bound
push
sub
in
fdivs
dec
jl
jmp
sti
push
js
sbb
popf
xchg
int3
mov
jns
xor
dec
mov
xchg
dec
dec
lock
xlat
cmpsb
mov
notl
mov
in
incl
lea
and
clc
mov
fldt
push
sub
dec
rol
rcr
sub
add
xorb
dec
int3
in
pop
call
loope
loopne
stos
jo
dec
pop
pop
pop
enter
dec
or
jnp
fsubr
or
xchg
push
lods
add
je
lock
cmp
cmc
adc
pop
jmp
sarl
pop
int
fwait
loope
add
enter
xchg
add
mov
mov
adc
jp
adc
inc
adc
data16
push
ja
mov
adc
dec
fldenv
sub
out
sbb
jne
iret
mov
mov
xchg
push
jnp
rol
xchg
mov
int3
sbb
shrb
jl
pop
repnz
mov
leave
or
inc
pop
cmp
mov
xchg
sub
inc
mov
test
lret
lea
jmp
cmpsb
repnz
mov
push
xor
loop
mov
ja
movsl
loopne
cmp
or
mov
dec
mov
pop
std
outsb
movswl
mov
pop
xchg
push
pop
stos
ja
in
filds
mov
insb
aaa
cs
mov
pop
jecxz
fs
mov
sub
shl
hlt
jns
mov
fdivrs
mov
mov
ror
fsubrs
xchg
sub
sti
lcall
mov
outsb
mov
cmpl
insl
and
mov
nop
and
bound
adc
push
jns
mov
imul
fisubrs
hlt
mov
fsubl
fidivl
outsb
add
or
push
and
shlb
das
pop
int3
fucomi
sub
fnstenv
imul
mov
mov
jno
inc
in
daa
sbb
jnp
test
jb
add
pop
push
lock
scas
loope
jnp
fldt
pop
hlt
mov
sbb
inc
inc
mov
test
aad
mov
testb
mov
scas
mov
push
xchg
bound
fisubrl
das
push
stc
pop
jb
dec
jecxz
pop
mov
xor
rorb
pop
sti
popa
cmp
mov
stc
cmp
aaa
cmp
add
cmp
adc
cwtl
jl
dec
flds
xchg
or
pop
pusha
jmp
cmp
add
testb
leave
cld
fwait
push
sbb
subb
rcr
enter
scas
sbb
aaa
pop
aad
push
cwtl
imul
mov
adc
addr16
adc
pop
ss
addr16
pop
sbb
popf
out
fabs
std
mov
mov
cwtl
pop
mov
mov
out
sti
fs
pop
mov
outsb
ds
les
test
in
lcall
mov
and
sub
dec
push
stos
dec
push
fisubrl
sub
and
and
mov
iret
loop
add
dec
jo
jp
xchg
inc
dec
push
and
loop
sub
mov
fidivl
jbe
mov
jmp
xor
pop
pop
fnstsw
dec
mov
mov
add
pop
jle
es
aam
orb
les
pop
imul
pop
jb
push
sbb
pop
test
sbb
outsl
jecxz
mov
jle
jbe
cmc
dec
dec
xchg
fimull
mov
pop
mov
push
in
dec
and
daa
pop
frstor
jno
mov
loope
aam
fistpll
scas
ss
mov
mov
lret
decl
incl
dec
lret
in
pushf
jmp
mov
mov
xchg
jb
xor
out
js
mov
mov
scas
mov
mov
jmp
dec
mov
cmp
popf
cli
pop
sub
lret
mov
sbb
outsb
xor
mov
xor
mov
sbb
mov
and
outsb
mov
clc
es
dec
insl
mov
or
cmpsb
cmpsl
stos
xor
or
and
fisttpl
inc
loope
outsl
dec
inc
mov
insb
mov
pusha
sub
inc
in
jl
stos
add
sub
sbb
ljmp
jae
shll
out
lock
ss
push
repnz
nop
dec
cs
sub
cmpsb
cltd
js
test
sub
mov
jl
jo
shlb
mov
imul
mov
int3
test
movsl
dec
cwtl
clc
stc
lods
xor
push
dec
cs
loope
jge
roll
popl
and
lock
xchg
mov
nop
lcall
jne
dec
repz
fdivrs
ficoms
jbe
cmp
ret
mov
xchg
je
mov
cmpsb
lcall
pop
mov
sbb
lret
outsb
repnz
bnd
or
sti
adc
fbld
push
pop
mov
rolb
das
in
testb
shl
hlt
cmpsl
sbb
mov
mov
fmull
cmp
cld
xor
sahf
pop
add
push
xor
dec
add
sbb
pop
ficomps
xchg
inc
or
cmpsb
repnz
je
mov
and
xchg
and
and
loope
shlb
xor
push
jmp
ficoml
xchg
push
mov
popa
push
xlat
sub
inc
sub
add
ss
dec
mov
lds
mov
or
das
mov
sbb
ja
orl
xor
mov
push
sub
dec
rol
ffree
jl
jnp
xchg
and
aaa
cmpsb
stos
or
pushf
mov
les
sarb
or
arpl
loopne
inc
lcall
ret
pop
pop
sbb
out
dec
repnz
sbb
scas
mov
shll
mov
and
faddp
mov
loop
inc
fs
and
out
int3
and
sti
dec
sub
mov
movsb
outsb
sbb
loop
inc
mov
movsl
es
loope
xor
or
in
push
cmp
daa
ljmp
xchg
aam
shrl
imul
ljmp
sub
push
sub
mov
jecxz
movsl
sub
add
sarl
inc
repz
lcall
jl
stc
push
hlt
fidivrl
js
fidivs
inc
mov
jne
mov
incb
lods
pop
and
pop
mov
mov
sub
stos
add
cmpsl
lds
mov
test
fcmovne
jbe
daa
push
mov
pop
cmpsb
les
mov
inc
lea
int3
xchg
fisubrs
or
lds
xlat
pop
fiaddl
test
rolb
mov
jns
pop
imul
and
cwtl
mov
push
inc
cmp
js
jo
ret
fsubrl
call
mov
push
add
lds
mov
adc
ds
sbb
cs
push
subps
ret
imulb
cmc
cmp
push
repz
push
add
cs
xor
pop
dec
jecxz
cmp
leave
jo
xchg
sbb
dec
decl
sti
stc
fwait
push
pop
sub
dec
add
cmp
roll
pushf
dec
jns
sti
fld
andb
test
rcr
sbb
jmp
mov
ret
jl
xchg
int3
xchg
inc
or
add
or
jge
test
cmp
cld
xor
sbb
lret
cwtl
push
repz
mov
pop
sbb
jg
jmp
mov
xor
loope
lods
mov
imul
lahf
into
les
js
mov
inc
and
mov
popf
xor
lret
pusha
adc
cmp
cmpsb
sbb
ss
mov
in
sub
mov
dec
jg
insl
insl
aas
and
mov
jne
cmpsl
ficoms
dec
push
sha1nexte
and
int
loope
scas
pop
imul
pop
jb
jg
movb
push
inc
pop
stos
mov
hlt
pop
dec
sub
cld
push
lods
jp
jecxz
cmc
jmp
dec
testl
inc
les
fdivl
xchg
sub
fs
rclb
mov
stc
jnp
xor
mov
mov
pop
xor
inc
lea
mov
test
inc
jns
negl
push
test
hlt
push
adc
jae
pop
insl
mov
ret
hlt
les
xchg
dec
push
loope
mov
fisubs
and
add
push
push
call
pop
dec
out
adc
adc
and
lahf
out
sbb
xchg
lret
lcall
repz
imul
lcall
fimuls
and
adcl
rol
nop
pop
add
cmp
pop
cmp
sbb
mov
mov
leave
in
mov
dec
inc
addr16
adc
aaa
cmp
mov
xchg
movsb
popw
nop
xor
push
popa
mov
xchg
mov
in
xchg
rcrl
fs
popf
pop
test
or
fistl
mov
stos
movsb
test
aaa
jne
sub
jne
add
jmp
push
ret
mov
mov
mov
shl
jmp
popa
fildll
dec
ljmp
std
nop
shr
lret
sub
fcomps
loop
mov
sub
clc
sbb
js
mov
shr
sub
cli
daa
aad
push
lret
ja
xor
hlt
mov
add
pusha
ds
or
mov
or
mov
lcall
xor
lods
hlt
mov
dec
dec
mov
xchg
dec
lds
ret
sub
push
repnz
lahf
add
push
lock
clc
in
add
cmpb
fsubrs
jne
mov
cmp
mov
xor
pop
leave
daa
movsl
mov
fcoms
and
nop
lea
jl
int
push
fsubrl
jge
cmc
arpl
shrb
push
mov
jg
repz
nop
xchg
fs
ss
test
add
sub
jb
dec
imul
mov
negb
out
std
push
xchg
icebp
lret
hlt
test
cmp
movsl
sbb
subb
insb
loopne
cmp
sbb
adc
daa
sbb
sbb
sub
or
das
cmp
cmpsb
mov
mov
in
adc
loope
insb
mov
sbb
push
mov
and
inc
sub
mov
xor
mov
xchg
jns
scas
jle
sub
push
dec
es
mov
rcrb
lahf
dec
lret
int3
lahf
dec
enter
mov
lcall
xor
and
in
or
mov
addl
push
fdivl
in
dec
mov
mov
lahf
push
pop
inc
fwait
aas
adc
inc
inc
inc
sub
and
pop
xchg
lods
test
push
testb
divb
test
aaa
mov
fldl2t
lds
fs
and
bound
xor
mov
cmc
jae
mov
jno
pop
aas
ret
sub
jl
mov
gs
cmp
dec
pop
cmp
outsb
dec
push
lods
or
fndisi(8087
jno
pop
les
jp
gs
add
jnp
sbb
hlt
xchg
fnsave
push
lret
cmp
push
adc
inc
ret
jno
cs
mov
inc
mov
cs
xchg
daa
fs
or
cld
lahf
in
xchg
es
jae
inc
add
pushf
lahf
add
clc
aad
sbb
xlat
sbb
into
mov
jle
cwtl
cmc
dec
into
aas
mulb
js
sbb
fmulp
add
or
ja
not
loopne
cmp
adc
cmp
fs
mov
jbe
cwtl
out
jne
pop
in
mov
ficoms
inc
rclb
ss
xor
aad
jnp
push
and
cmc
pop
call
mov
xchg
and
and
mov
sarl
loop
repnz
pop
sahf
dec
ficoms
add
inc
repnz
xor
adc
or
rcr
mov
imul
lock
mov
xchg
and
mov
test
outsb
cmp
lods
sahf
ret
and
mov
dec
mov
insb
in
ss
leave
pop
in
test
insb
js
loop
push
xchg
add
mov
adc
mov
jbe
xor
xchg
mov
mov
sub
cltd
or
xchg
xlat
adc
ja
sbb
mov
mov
pop
or
sbb
adc
mov
cmpsb
sub
clc
popa
dec
jbe
and
insb
or
pop
mov
xchg
ja
ljmp
ret
mov
test
cmc
outsb
pusha
fistpll
jne
sbbb
sub
iret
add
add
pusha
lock
mov
sbbb
jle
cs
mov
subl
xchg
xchg
aaa
roll
movsb
sbb
xchg
sub
and
push
jle
cmc
or
pop
xor
push
push
pop
ficompl
xchg
sub
push
decb
jp
push
jo
cltd
sbb
dec
pop
hlt
shl
pop
test
lea
push
scas
pop
inc
jno
xchg
in
int3
push
sub
mov
nop
addb
movsb
cmp
jge
and
mov
shll
and
sti
nop
lea
test
roll
cld
aaa
or
test
pop
pusha
in
lcall
jbe
inc
and
test
xor
mov
and
loop
jnp
fisubl
fwait
pop
loope
pop
mov
fdivp
fnstenv
push
icebp
sbb
mov
jno
jo
mov
int
cmp
std
mov
push
cmc
das
movsb
cltd
sub
pop
adc
mov
into
fwait
cld
repz
cli
dec
sub
sahf
out
mov
adc
jle
std
repnz
mov
fmuls
aad
sub
mov
sub
cmp
scas
mov
daa
shll
xor
xchg
xor
fdivl
das
fdivs
adc
jb
movsb
int
movsb
push
and
fcmovnbe
arpl
push
in
sbbb
jnp
and
js
sti
cmc
popa
adc
mov
dec
iret
scas
xchg
xor
hlt
jns
xor
lock
fwait
jecxz
pop
sarl
jle
rcrb
and
icebp
fstpl
mov
enter
subl
mov
fldenv
aam
xor
lea
test
lock
testb
mov
orb
jmp
out
cmp
push
cmpsl
jl
pop
mov
push
daa
push
mov
cmpsl
pop
in
xchg
xchg
sahf
dec
xor
fdivl
rcrb
shlb
jno
mov
and
sbb
daa
mov
pop
xor
hlt
cmp
mov
push
dec
test
pop
in
repz
inc
and
cmp
repz
or
pop
shll
jo
lods
pusha
xchg
rcrl
lock
rcrl
sbb
into
mov
mov
cmp
or
ljmp
xchg
loop
pop
pop
add
jmp
movsl
or
mov
fdiv
push
notl
push
aas
cmp
jmp
icebp
ja
or
xor
in
fstp
fadd
jge
mov
xor
cmpsb
test
push
jmp
add
pusha
shl
lahf
loop
hlt
jo
aad
lea
aaa
out
pop
fs
dec
mov
arpl
fwait
mov
inc
xchg
fiaddl
push
sahf
or
ret
scas
push
sbb
xchg
xor
mov
lds
out
in
or
fdiv
push
dec
sub
loopne
xor
push
jmp
movsb
jne
mov
jns
pop
aad
and
lods
popa
and
or
movb
sbbl
cli
pop
mov
into
adc
or
cwtl
std
gs
mov
dec
mov
dec
fidivl
xor
push
call
adc
adc
pushf
ds
cmp
shrl
xor
push
xchg
pop
dec
mov
and
pushf
push
mov
inc
xchg
imul
sub
jp
rorb
repnz
inc
cmpb
ret
xchg
je
js
repz
xor
rcl
mov
in
in
or
adc
push
pop
ja
repnz
je
pop
adc
push
mov
jge
push
cmp
aad
cmp
addr16
leave
mov
test
inc
popa
mov
jno
and
sarl
mov
pop
jle
dec
aas
dec
mov
insl
je
rcr
xchg
out
mov
out
pop
ss
test
ficomps
je
xchg
mov
daa
dec
jmp
ds
pop
cld
lds
jg
aas
sub
insb
test
sbb
push
scas
insb
jl
stc
insl
lcall
sbb
jbe
jge
mov
mov
mov
in
outsl
jb
sahf
test
pop
sub
push
adc
and
adc
xchg
push
js
mov
and
pop
mov
jl
shll
and
scas
and
add
push
incl
loop
jp
pop
mov
rorl
andl
xchg
shlb
push
out
pop
ret
adc
cld
bound
xchg
mov
dec
sbb
mov
xchg
fsubrl
aad
lea
aas
add
push
pushf
test
loopne
ds
in
inc
jg
mov
cmpsl
jmp
test
pop
jo
std
jmp
jle
addr16
inc
fwait
movsb
cmp
sbbl
pop
sarb
mov
loopne
clc
out
push
sub
push
sbb
xchg
inc
addr16
jae
test
lret
dec
call
mov
orb
nop
add
fdivl
pop
inc
imul
sub
out
in
lds
repz
push
sub
or
popl
push
into
lea
or
cwtl
out
out
or
in
dec
jmp
lock
dec
faddp
cmc
fwait
xchg
ds
gs
test
sti
and
add
or
jbe
dec
test
lret
lods
gs
inc
aaa
cmc
js
mov
pop
shl
pop
test
out
pop
lods
jge
pop
pop
lret
sbb
dec
adc
jno
jle
lea
cld
jl
psrad
xchg
sub
out
data16
mov
cmp
in
imul
inc
int3
pop
jnp
rcl
dec
movsl
rcll
movsl
mov
dec
mov
sbb
or
pop
punpckhbw
cltd
cmp
and
add
mov
sarb
mov
inc
push
sbb
adc
outsb
jl
jecxz
stc
xchg
xor
xor
add
xorb
jo
js
popa
das
dec
jmp
sub
mov
push
in
mov
sti
sub
inc
xchg
jmp
cmp
xchg
push
inc
push
ss
cmp
repz
dec
pop
jno
insb
mov
inc
or
pop
in
in
std
test
push
into
outsb
das
aas
pop
pop
inc
or
incb
push
adc
insl
xor
dec
adc
and
out
xor
adc
adc
std
je
mov
push
scas
dec
fwait
movsb
and
jns
mov
lret
fldz
adcl
fwait
iret
std
push
sub
in
scas
sbb
xchg
mov
mov
lcall
sbb
notrack
xrelease
js
sub
cli
negl
ss
or
cli
mov
addl
mov
xor
insl
sub
add
out
add
test
or
sbb
or
gs
mov
outsl
sarb
clc
pop
out
mov
cltd
es
xchg
dec
ds
cmp
pop
sbb
sbb
outsl
outsl
xchg
mov
inc
stos
jg
sub
sbb
shrl
stos
loop
pop
cmp
popf
out
cmc
mov
addl
int
dec
adc
xor
inc
out
pop
add
jp
xchg
xor
insb
sbb
in
and
sahf
add
aaa
mov
loope
loop
cmp
or
ret
adc
sbb
jmp
cmp
lret
ljmp
lret
fdivl
jmp
push
inc
inc
push
cmp
push
outsl
sbb
jecxz
scas
nop
outsb
xchg
out
mov
ret
or
push
cmpsb
cli
jne
imul
push
movsl
arpl
lock
cmpsb
jmp
test
rcll
inc
jbe
enter
xchg
or
jle
divb
sbb
mov
imull
pop
cli
mov
nop
fbstp
sbb
test
xchg
test
xchg
xchg
ja
imul
sub
xor
sahf
ret
addr16
jle
xor
mov
sti
inc
lds
es
into
pop
pop
push
outsb
aaa
xor
movsb
in
xor
mov
and
and
repnz
lret
outsb
add
fmuls
jmp
sarl
movsb
rorb
push
sahf
xor
xchg
pop
push
sbb
push
jmp
mov
lret
sub
sub
sahf
ja
das
pop
mov
mov
xlat
popa
xchg
sub
and
mov
adc
imul
mov
jle
out
shlb
mov
stos
int
movb
sub
mov
lret
cld
ds
pop
jecxz
inc
mov
popf
jb
movsb
bound
pop
call
and
adc
stc
out
mov
ret
mov
mov
push
mov
and
sub
fldcw
scas
mov
add
imul
pop
scas
test
enter
inc
cs
add
aam
fisttpll
xor
sub
jge
sub
rcrl
out
das
adcb
aad
mov
jne
addr16
inc
arpl
xchg
je
xrelease
add
cli
sub
xor
int3
xchg
data16
std
mov
cmp
push
int
imul
popl
dec
lahf
lds
pop
cmpsl
push
sub
stos
nop
in
push
inc
sub
rclb
popa
or
int3
inc
movsl
fcoms
xchg
xlat
cmp
ds
jg
add
and
jl
in
mov
repnz
cmp
sbb
or
xor
jmp
cmpsb
mov
addr16
adc
dec
ljmp
ljmp
jl
in
pusha
xor
xor
xchg
out
xchg
fnstcw
shrl
lcall
std
test
aaa
pop
outsl
clc
dec
into
mov
add
rcr
into
jp
pop
cmp
push
jns
mov
cmp
xchg
test
push
mov
in
out
and
and
shl
scas
sti
adc
adc
popf
les
or
dec
lods
pop
lods
mov
nop
or
mov
adc
inc
fcoml
mov
fisttps
pop
sbb
or
cmp
das
je
out
sbb
clc
or
jo
and
push
icebp
push
sub
or
mov
cmpsl
dec
imul
repz
sub
sub
popf
cmc
cmpsl
out
push
add
lahf
dec
mov
mov
data16
cmc
repnz
sub
fsts
mov
in
setno
mov
aam
mov
sbb
test
shrl
adc
inc
mov
jl
push
mov
adc
and
push
push
fwait
rolb
pop
push
fs
jge
dec
sbb
fwait
and
pop
cmc
jo
cltd
xchg
lds
adc
mov
lea
movsl
or
jns
js
xchg
filds
push
mov
adc
mov
sbb
xchg
push
pop
push
nop
inc
pop
cmp
xchg
jnp
inc
or
arpl
or
and
jg
aas
inc
imul
xor
mov
jge
mov
jmp
xchg
in
mov
and
push
pop
arpl
push
cmpsl
mov
push
fs
hlt
fnop
adcl
or
pop
xchg
ffree
data16
add
add
daa
push
mov
jo
adcb
pusha
mov
mov
div
pop
neg
lahf
pop
adc
mov
movsb
mov
mov
test
sbb
jno
mov
mov
in
pop
cli
repz
mov
jg
mov
sbb
mov
dec
int3
add
lcall
lds
xchg
nop
pop
xor
loope
add
sub
jp
ja
sbb
shll
das
lea
into
outsl
fcomi
mov
mov
cmpsb
scas
push
lods
jnp
mov
pop
mov
or
pusha
sar
mov
jb
cmp
stc
daa
es
cli
filds
call
pop
mov
push
sbb
inc
inc
outsl
sbb
ret
push
xorb
dec
adc
push
gs
clc
jne
dec
dec
fstps
int
add
imul
imul
stos
iret
push
imul
mov
sub
mov
into
pop
std
xor
mov
or
stc
jmp
scas
outsb
cmp
jno
inc
lds
into
xchg
pop
push
pusha
cltd
mov
aaa
lods
int3
add
adc
lret
js
or
ret
test
repnz
jp
movsb
push
mov
xchg
jl
mov
or
fstps
inc
mov
sub
ja
aam
pop
cwtl
mov
add
mov
add
mov
rol
pop
push
inc
mov
or
insb
mov
push
mov
and
dec
cmp
adc
aas
fwait
cmp
out
jb
mov
outsb
jnp
popa
mov
pushf
xor
cltd
arpl
popa
sahf
xchg
pop
lods
mov
dec
sub
push
das
cmc
push
push
cmpsl
jne
jl
sahf
and
add
push
aas
addl
xlat
push
inc
push
bound
jae
pop
inc
or
xor
or
xchg
iret
mov
les
or
dec
fdivs
stc
out
mov
mov
xchg
inc
jmp
ss
mov
mov
test
mov
ret
pop
inc
loope
pushw
lret
xor
out
xchg
inc
lea
pop
xchg
mov
adc
aaa
out
sti
lds
div
iret
ret
cwtl
xchg
jle
aas
fwait
in
push
jmp
xchg
mov
push
and
repnz
hlt
sub
adc
push
bound
dec
push
mov
and
shrl
sbb
test
jp
jl
pop
pop
js
repnz
bnd
fs
add
sbb
sbb
xor
cmpsb
stos
or
and
push
cmp
mov
int
jmp
das
pop
inc
sbb
dec
inc
pop
xchg
incl
cwtl
dec
fmull
iret
xchg
mov
inc
mov
inc
ret
pop
mov
pop
add
xor
jns
and
sbb
test
lods
stc
jle
push
ret
push
movsb
pop
lcall
cld
cmp
int
pushf
dec
sbb
add
inc
fcomps
mov
add
cwtl
lds
sbb
cmp
xchg
xchg
push
loopne
push
xor
xchg
lahf
jnp
lret
icebp
ret
cmp
arpl
mov
and
inc
xor
test
mov
mov
jo
jg
add
loop
cs
scas
xchg
js
mov
aaa
xchg
push
inc
lret
icebp
mov
push
fcom
ss
scas
sub
jo
dec
mov
xor
repnz
dec
lods
je
sbb
dec
jg
mov
and
cld
scas
xchg
and
adc
cld
xor
xchg
fstl
add
test
mov
ret
lret
insl
lea
mov
push
call
dec
notl
in
mov
ficoml
shr
or
add
add
push
mov
outsl
lahf
dec
in
fs
pop
rcll
flds
add
mov
or
lea
insb
xor
lcall
sahf
aad
roll
cmp
cmp
lret
dec
jmp
jns
push
daa
and
ds
int
mov
nop
and
addr16
jno
stc
outsb
cli
arpl
lret
pop
jno
jns
add
fisttpl
pop
outsl
adc
fs
jno
jmp
pop
and
xchg
push
scas
dec
jl,pn
mov
sbb
fisubrl
xchg
cmc
jns
xor
adc
push
pushl
rdtsc
arpl
lret
into
xchg
xor
mov
add
mov
sahf
or
xchg
push
scas
jmp
jmp
in
xchg
pop
mov
leave
daa
addr16
in
mov
mov
sub
and
aad
pop
pop
in
xchg
lahf
movsb
cmp
jg
push
add
cmp
or
sbb
cmpsl
pop
mov
clc
pop
out
ss
call
insb
xchg
dec
adc
mov
mov
cmp
mov
mov
fwait
sbb
ljmp
in
xchg
jmp
pop
pop
in
hlt
ss
inc
cmp
pop
pop
xchg
inc
aaa
lret
inc
xchg
sbb
loope
out
add
lcall
sbbb
adc
lea
test
push
push
push
mov
dec
bnd
test
aad
push
cmpsl
jmp
jg
adc
pushf
xchg
push
into
jge
loopw
push
rclb
sbb
repz
cmp
mov
mov
test
arpl
insl
loopne
mov
pop
inc
in
lock
das
int
rorl
hlt
cmp
jno
xor
std
mov
dec
test
cmp
subl
dec
push
push
sbbb
mov
xor
lods
sbb
outsb
sbb
fwait
adc
mov
mov
and
inc
mov
pop
sbb
pop
cmp
add
fsubrs
fmul
mov
aaa
dec
aam
sbb
sub
inc
push
dec
sbb
sbb
cmp
sub
sub
xchg
cmp
cmp
lcall
imul
inc
ljmp
les
pop
xchg
or
cmp
jmp
pop
xor
and
aaa
adc
add
inc
adc
fnstenv
ljmp
xchg
mov
pop
jo
sub
fisubrl
lahf
stos
cmpsl
iret
mov
mov
mov
sbb
mov
int
mov
pop
fiaddl
adc
popa
push
push
xchg
scas
add
jg
imul
mov
and
hlt
fdivs
fisubl
ja
loop
arpl
lcall
testb
push
les
sub
xchg
xchg
mov
cmp
jne
jo
mov
test
push
push
mov
shll
sbb
jae
imul
shrl
ficompl
rcrl
in
or
and
movsl
push
mov
aaa
mov
and
icebp
fidivrl
pop
subl
mov
test
pop
jnp
dec
jb
xchg
fimull
sub
movsb
mov
mov
ss
xor
push
repnz
enter
ret
and
mov
or
add
movsl
pop
out
out
xchg
and
inc
pop
stos
mov
jb
test
xor
xor
cmp
lret
movsl
iret
sbb
inc
in
xlat
or
sbb
adc
in
dec
push
ret
pop
jecxz
xchg
push
jp
dec
fimull
leave
xchg
test
dec
dec
mov
mov
mov
adc
scas
rcrl
dec
aas
jo
pusha
pop
orps
xchg
mov
xchg
pop
sbb
or
clc
leave
jg
mov
sub
in
outsb
push
gs
jle
xor
loopne
dec
fldenv
cmpl
and
addr16
jbe
jle
jge
inc
mov
int
pusha
imul
jae
mov
aas
jp
sahf
pop
popf
cmpsb
pop
dec
lea
jecxz
mov
out
loop
mov
add
ja
insl
inc
fildll
rdtsc
aad
lods
add
mov
dec
test
cmp
test
dec
gs
pop
mov
push
mov
xchg
or
scas
cmpsl
cmc
imul
int
xchg
movsb
and
pmuludq
mov
into
xchg
mov
leave
mov
cmpb
into
stos
pushf
add
stc
or
jg
cmp
ss
enter
xchg
rolb
cmpb
lea
and
xor
outsl
add
xchg
out
rcrl
repz
icebp
cmc
daa
and
clc
mov
mov
jle
dec
dec
adcl
fs
mov
icebp
mov
in
ljmp
dec
icebp
pusha
sbb
mov
fsubs
cmpsl
and
jmp
pop
stos
jbe
cltd
inc
push
jb
dec
pop
test
pop
and
jne
cli
dec
clc
in
lret
xor
enter
ror
or
mov
ficomps
fsubl
push
mov
pusha
outsb
nop
ret
inc
dec
loope
fcmovbe
adcl
jg
fsubs
xlat
int
testl
in
pop
cmp
mov
addr16
pusha
mov
jmp
dec
adc
iret
test
mov
inc
xor
ficoms
fisubrs
int3
sbb
jo
pusha
jns
pop
std
fidivrs
cld
pop
adc
aaa
icebp
dec
xchg
push
cltd
or
scas
or
sub
cmp
les
jno
mov
xor
popf
ljmp
dec
pop
jmp
nop
lods
dec
rcrb
enter
mov
mov
pop
sbb
mov
gs
and
adc
dec
popa
xor
aam
pop
sub
sahf
push
inc
iret
js
mov
sbb
xor
repz
mov
add
mov
sbb
xor
xchg
pop
pop
movsl
adc
xchg
stc
mov
hlt
cmc
inc
outsb
mov
int
jb
cmpsb
popa
data16
dec
ss
fsubrs
imull
ret
ss
insl
mov
fldcw
dec
lret
repz
dec
adc
cli
add
push
xor
xorb
mov
jae
jecxz
repnz
rcrb
arpl
sub
int3
pop
xchg
mov
mov
daa
roll
jle
add
scas
scas
pop
aaa
xchg
sti
pop
cmpsl
call
push
sub
jl
movsl
lahf
clc
stos
fs
pop
js
loope
mov
movsb
lods
push
inc
xor
pop
int3
icebp
shlb
outsl
fistps
pop
fstpl
xor
outsb
rolb
loop
jns
xor
cmpsb
sbb
stc
push
je
mov
sub
in
dec
aaa
adc
leave
mov
addr16
pushf
int
inc
dec
int
jg
mov
ds
adc
push
cmp
int3
or
outsb
sub
jbe
xchg
push
push
je
fs
in
xor
enter
mov
in
test
mov
xchg
sub
xchg
inc
sbb
push
sub
mov
pusha
aaa
out
mov
sub
xchg
clc
pop
scas
pushf
lock
or
xor
popa
dec
outsb
leave
lret
mov
xchg
inc
inc
out
ja
adc
cmp
sub
ja
and
aam
sarb
cmp
cmp
sub
js
incb
dec
shlb
dec
les
mov
gs
pop
mov
movsl
fisttps
push
dec
mov
loopne
sti
cmp
shrb
and
mov
repz
and
andb
in
cli
xor
inc
or
js
insl
push
cmp
std
add
inc
adc
push
repnz
xlat
push
xor
pop
cli
jns
pop
mov
xorl
push
into
add
popf
jno
xor
push
push
jge
inc
xchg
add
repz
stc
push
add
int
inc
pop
cmp
push
loopne
js
insb
pop
dec
mov
sub
or
xor
or
pop
sub
test
mov
cmc
sarb
fadd
fidivrl
clc
mov
xor
jno
test
mov
and
je
fstps
test
and
cmpsb
xchg
add
loop
sbb
and
sub
cmp
dec
roll
pushw
std
leave
push
pop
dec
lea
and
lcall
bound
mov
fisttpll
js
ljmp
iret
jl
lds
xchg
pop
dec
loopne
aad
add
movsl
sub
and
or
aas
mov
pop
fwait
inc
cmp
stos
adc
andl
push
dec
mov
xchg
push
xchg
ja
xchg
adc
enter
lcall
sub
lahf
xchg
mov
mov
mov
sahf
ds
aaa
jge
or
subb
aad
movsl
outsl
adc
adc
fwait
cmpsl
adc
adc
test
arpl
hlt
movsl
add
lcall
das
xchg
mov
idivb
enter
cld
fildl
cmp
js
jmp
adc
jle
cmp
std
add
adc
sbb
push
and
out
or
fcoml
jnp
lahf
sbb
ret
das
aam
jnp
insl
jmp
sahf
fadds
lods
add
ds
sbb
xlat
fisubrs
cmp
out
stc
in
fnsave
faddl
pusha
or
repz
out
pop
push
scas
jecxz
jmp
pop
sbb
clc
mov
leave
sbb
bound
fwait
jg
out
fbld
int
loopne
mov
or
ja
lock
ljmp
xchg
out
in
push
mov
imul
test
jp
dec
push
out
out
xchg
inc
push
fldl
or
jmp
jecxz
test
out
push
test
jb
testl
stos
andb
lcall
mov
xchg
icebp
pmulhw
ja
repz
xlat
mov
test
mov
rorb
add
loop
movsb
lock
inc
fisubrl
pop
popf
movsl
or
lret
aam
adc
fimull
mov
es
cli
or
iret
mov
dec
pop
or
or
add
inc
sahf
in
pop
int
jg
lahf
mov
xlat
mov
inc
fcmovnu
int
clc
jle
push
cli
test
xorb
sbb
sahf
mov
xor
pop
popa
mov
mov
cltd
mov
sahf
stc
sub
ret
mov
push
add
outsl
and
roll
cmp
mov
jno
test
xor
test
xor
xchg
jo
cld
lock
and
ret
and
mulb
ret
xchg
xor
dec
xchg
inc
jmp
dec
xchg
pop
mov
je
push
jae
cmp
mov
inc
or
out
fisubs
fdivs
pop
push
mov
ss
call
and
push
out
int3
aas
inc
int
cmpsb
cmp
arpl
mov
sti
mov
movsb
jo
sbb
popa
jp
and
es
lcall
or
or
rcrl
clc
xor
sbb
mov
fucom
or
loope
push
out
mov
aad
jnp
aaa
mov
inc
stc
xchg
jo
psubq
mov
jge
cwtl
cmpsb
leave
std
aaa
fdivrs
sub
sbb
andl
pop
jb
xor
je
cmp
cli
lods
jo
dec
enter
enter
mov
sub
or
dec
andl
mov
jb
add
push
cmp
push
je
rolb
mov
mov
cli
fwait
mov
decb
adc
out
dec
loopne
iret
cmp
sbb
mov
mov
out
and
xchg
ss
xchg
jecxz
dec
sbb
lea
data16
sub
sbb
pop
jns
inc
cmp
mov
pop
movsl
pop
lcall
mov
add
insb
insb
cltd
sbb
mov
dec
icebp
or
gs
ja
pop
jo
mov
rorl
jmp
jecxz
rcl
sub
inc
call
insb
pop
insl
sbb
cmp
cs
and
fdivrl
hlt
add
repz
loop
xor
and
inc
mov
sbb
nop
dec
loop
int3
push
fldt
add
push
rcll
sub
pop
cmpsb
add
xchg
adc
daa
hlt
inc
adc
outsl
arpl
sbbb
pop
out
xor
lods
pushf
jg
hlt
mov
cwtl
pushf
cld
jmp
int3
mulb
fmul
call
sub
sbb
out
sub
rorl
shrl
icebp
jp
cmc
sub
sbb
in
inc
aam
sub
xor
clc
lcall
sub
adc
jno
sbbl
rol
addl
xlat
in
icebp
int3
cmp
out
cmp
pop
mov
jge
sbb
adc
mov
cltd
cmp
sbb
cmpsb
inc
mov
insl
repnz
push
push
jbe
pop
roll
repnz
sbb
stos
sub
test
push
pushf
or
sub
pop
lea
xlat
fistps
cmp
aam
subl
cmp
and
sti
shrb
bound
jne,pn
test
or
icebp
movsl
fdivrl
xchg
sub
ds
lret
cld
int
loopne
mov
inc
jae
push
fidivl
add
movsb
test
xchg
xchg
icebp
mov
popa
inc
icebp
xor
and
sbb
mov
dec
jle
cltd
pop
push
mov
jecxz
jns
outsb
fs
stc
mov
push
dec
push
movsb
imulb
sahf
push
fmul
push
das
inc
xor
sub
cmp
ljmp
test
and
jbe
shlb
js
xchg
stos
jb
mov
mov
in
dec
mov
xor
mov
dec
mov
in
ret
sar
sti
or
rolb
fs
xlat
enter
mov
mov
cmpsb
fsubrl
mov
cmpsb
xor
sbb
and
xchg
mov
sub
inc
push
ljmp
mov
sub
ret
mov
sub
push
lret
in
pop
gs
sar
dec
in
mov
pop
jl
dec
dec
mov
push
mov
pop
es
sub
jg
ss
cmp
ret
outsl
jmp
mov
sarb
stc
jp
dec
adc
pop
ja
je
mov
bound
sbb
addr16
and
xchg
mov
nop
mov
push
sub
mov
arpl
sbb
cmp
and
jnp
push
mov
mov
mov
push
pushf
mov
scas
add
aam
pop
adc
xlat
sti
pop
mov
fsubrl
repz
xchg
xlat
daa
push
push
icebp
inc
ret
fildll
nop
mov
ljmp
push
sub
adc
jl
xchg
fcoml
push
popa
gs
dec
imul
mov
sub
arpl
pop
pop
jmp
jge
adc
mov
scas
adc
add
pusha
xchg
mov
xadd
push
xor
jmp
and
test
not
cs
dec
sbb
out
pop
push
outsl
in
sbb
inc
dec
sub
sahf
mov
xchg
scas
repnz
jno
pop
dec
and
ljmp
xor
mov
lds
cmpsl
mov
stos
pop
mov
imul
push
test
out
je
aaa
jnp
and
fisttpl
scas
nop
inc
mov
mov
push
repnz
scas
stc
int3
pop
mov
adc
cld
lret
dec
and
fildl
xor
mov
shll
push
push
pop
and
shll
inc
lods
cwtl
dec
ljmp
test
mov
ret
sbb
adc
mov
or
test
test
rcrb
adc
jae
popf
enter
pusha
stos
inc
dec
push
adc
jb
dec
pop
movsl
mov
clc
cltd
inc
fnstenv
push
daa
inc
lret
mov
stos
pop
push
adc
sahf
je
loop
movsl
adc
push
pop
jl
mov
dec
les
repz
push
pop
mov
sbb
imulb
sub
add
in
cmp
imul
stos
jno
mov
mov
into
mov
bound
hlt
cld
dec
dec
inc
dec
dec
mov
data16
jb
das
das
lea
out
jo
loope
push
je
fcmovnbe
mov
aam
jl
insl
push
xchg
mov
inc
push
sbb
jge
xor
mov
xchg
cmp
sub
adc
fisttpll
imul
rcll
pop
cli
mov
sbb
dec
inc
and
enter
aas
iret
sbb
push
inc
imul
adc
and
stos
mov
repz
fwait
sbb
xchg
adc
jge
push
adc
pop
stos
lahf
mov
lods
mov
sub
jge
push
mov
sbb
xor
lea
sub
inc
xchg
pop
pushf
les
lcall
bound
xor
clc
ret
lret
cmpsl
cld
mov
ror
lcall
push
adc
mov
rcrb
dec
jbe
movsb
test
jecxz
and
push
scas
xchg
lea
mov
in
lock
adcb
into
pop
andb
cmpsb
mov
add
das
lods
ljmp
mov
repz
incb
jno
dec
jecxz
mov
das
dec
xchg
sti
ljmp
adc
sub
dec
rcll
sbb
roll
in
mov
pop
jo
fmulp
cmc
dec
xor
and
pop
jmp
add
adc
stc
mov
mov
sbb
sub
mov
jle
out
popa
pusha
push
data16
sub
dec
hlt
lcall
cmpsl
sarl
incb
pop
jmp
jge
jecxz
cmp
dec
fcomp
mov
cmp
insl
ljmp
sub
adc
movsl
jns
popa
pop
and
sbb
lret
push
push
imul
mov
aaa
fcmovu
mov
mov
jo
cli
js
js
lds
or
test
aad
pushf
sbb
das
cli
adc
mov
mov
sbb
mov
pop
daa
fnstcw
inc
jb
jns
sub
ds
pop
vpmulhuw
lea
bound
sbbl
clc
pop
insl
push
int
xor
fistpl
cmp
aas
inc
push
lods
test
add
xchg
mulb
fbstp
mov
fwait
es
and
adc
int3
repz
aam
insl
and
lods
aam
or
icebp
add
lahf
fiaddl
es
dec
pop
lret
ret
mov
mov
push
outsb
arpl
jl
or
fcoms
fisubl
dec
mov
idivl
add
lret
xlat
bound
cmp
emms
adc
cltd
test
and
mov
bound
lock
mov
pop
mov
and
and
dec
lock
fsubl
jge
pop
hlt
pop
lret
dec
pop
dec
out
pop
stc
aam
inc
icebp
cmc
xchg
or
out
popa
xchg
enter
mov
inc
or
cmp
int
push
fstl
push
mov
inc
xchg
ja
cmc
xor
into
mov
lcall
hlt
sub
xor
lea
cwtl
in
in
scas
out
inc
popa
push
scas
ds
and
test
lods
arpl
jl
mov
cmp
mov
inc
lret
movzbl
pop
mov
movb
mov
sahf
xchg
orb
or
mov
jno
push
or
sbb
or
or
mov
mov
xor
mov
mov
xchg
fmulp
add
and
mov
addb
push
dec
call
push
pushf
pop
jnp
ljmp
pop
hlt
jg
popf
jno
jmp
push
sti
mov
gs
inc
mov
jbe
iret
pop
sbb
inc
add
loope
arpl
test
filds
jae
or
out
jne
or
xor
cmp
dec
mov
idivl
or
out
jmp
outsl
jmp
in
cmpsl
in
mov
push
popf
inc
loop
jno
pop
rcrb
and
cmp
mov
out
add
fcomps
mov
dec
jmp
push
push
aad
jno
fwait
popa
push
in
or
pop
push
xchg
repz
aad
mov
or
xor
fnstenv
aaa
popf
and
inc
xchg
dec
jecxz
jecxz
jge
les
or
xchg
mov
jnp
xchg
test
mov
cmpsl
inc
jp
cwtl
fnsave
aam
rorb
cli
pushw
or
mov
fdivrs
or
test
mov
adc
pop
push
rorb
jb
adc
pop
cltd
rcr
mov
xchg
jae
mov
and
fisubrs
push
aas
loope
mulb
pop
adc
add
movsb
clc
add
in
test
movl
jle
xor
data16
sbb
out
mov
sbb
pop
aad
adc
pop
jl
cmp
sar
shrl
pop
rorl
pop
jae
cmpsb
sarl
sahf
dec
std
push
lods
and
or
or
shll
mov
mov
mov
lods
mov
shlb
sbb
or
hlt
inc
jl
or
jb
mov
mov
pop
mov
sub
out
xor
adc
or
pop
call
inc
ljmp
in
or
xchg
or
dec
mov
or
lds
add
xor
sub
push
inc
je
cmc
fimuls
mov
adc
scas
jbe
mov
movsl
pop
rorb
sbbb
fcoms
pop
or
stc
test
imul
std
jmp
and
mov
scas
xchg
jae
mov
inc
mov
negl
pop
ret
std
jnp
cld
and
in
jmp
cmpsl
or
inc
inc
mov
jb
les
jg
aas
xlat
xchg
hlt
jb
lea
or
repz
xor
jbe
add
aad
pop
add
cmp
es
lock
inc
out
std
outsb
sbb
nop
pop
inc
dec
mov
xorb
mov
popa
test
call
xor
hlt
xor
jnp
add
adc
add
cmp
sub
sbb
adc
pop
xchg
mov
mov
mov
push
pop
sarb
push
add
repz
cmp
pop
jns
dec
fs
test
gs
add
clc
xchg
imul
aas
arpl
xchg
test
stos
insl
or
addr16
mov
dec
and
jne
mov
in
cmp
xor
call
pop
push
lea
shr
dec
in
pop
jmp
aas
call
sub
bound
addr16
inc
mov
loope
and
frstor
cmp
stos
or
xor
mov
dec
lds
into
call
std
hlt
xlat
xchg
inc
add
xchg
add
sbb
bound
dec
xchg
add
sub
mov
into
scas
lret
sbb
jg
out
xor
insl
sarl
jns
xchg
or
and
mov
fadds
pusha
out
and
pop
repnz
rorb
push
sbb
nop
jnp
push
jg
std
test
sarb
pop
adc
pop
and
int3
lcall
add
in
mov
push
lods
shll
inc
stc
xor
dec
test
imul
lods
outsb
sahf
cmp
adc
scas
loope
push
outsl
sbb
sbb
fwait
movsl
daa
mov
adc
or
test
jno
outsl
movsb
sbb
xor
dec
push
sbb
or
push
pop
or
repnz
cmp
bound
dec
push
enter
stos
loop
inc
fmuls
mov
repz
rolb
fdivrs
mov
mov
sti
clc
mov
fcoms
into
sbb
testb
icebp
test
and
mov
or
mov
sbb
dec
ljmp
lret
push
loop
cli
mov
jo
imul
out
jmp
mov
mov
sub
mov
in
push
lahf
inc
in
repnz
xchg
jns
jne
jmp
aad
cmp
popf
dec
inc
mov
addb
cmpsb
scas
mov
nop
out
lds
or
cs
push
adc
xor
ss
lock
loop
aad
xchg
mov
inc
mov
cmp
or
movl
adc
stc
sarl
inc
push
mov
mov
mov
and
xor
dec
leave
cmp
dec
inc
inc
add
dec
jp
shlb
mov
pop
mov
sub
ss
add
jbe
lods
jno
stos
and
add
aaa
loopne
insl
outsl
jnp
mov
aas
mov
mov
cs
and
nop
dec
mov
fdivl
mov
xor
jl
push
mov
push
cmc
leave
or
ss
pop
gs
negl
sub
adc
push
mov
ljmp
adc
dec
push
mov
push
and
push
or
test
arpl
cld
imul
mov
inc
adc
repnz
jl
in
dec
sbb
insl
pop
sbb
inc
jmp
outsb
leave
add
sbb
sub
lds
xor
pop
insl
cmp
lret
xor
shll
adc
repnz
dec
cltd
jo
xor
idiv
stos
add
aad
sbb
or
scas
iret
fwait
xlat
cmp
and
stc
add
sub
dec
xor
mov
xchg
mov
and
xor
scas
sbb
insl
mov
xlat
stos
push
sbb
repnz
dec
aaa
cs
xchg
and
push
pop
in
dec
testl
cmp
in
fsubs
and
stc
xchg
loope
in
daa
mov
mov
xor
lret
sub
adc
cmp
fmull
xor
popf
push
jp
jge
loope
push
jg
lcall
in
sub
add
dec
and
sub
sbb
jne
pop
loop
xchg
ljmp
testl
dec
test
and
in
dec
ret
scas
sar
xchg
and
imul
mov
out
adc
enter
dec
dec
mov
jbe
dec
add
jmp
call
push
xchg
sub
xchg
and
cmpsb
inc
repnz
pop
sahf
addr16
pop
int
push
mov
pop
js
enter
sub
repz
lea
addr16
je
fnstenv
jp
add
pop
rcll
mov
fcompl
popl
sahf
lds
aam
fldt
out
mov
testl
push
int
and
in
movsb
push
mov
aas
jns
and
aam
xchg
adc
jb
enter
mov
add
js
or
xchg
push
sub
cmp
lcall
jecxz
push
pop
test
test
shl
sub
pop
adc
pop
sbb
mov
fidivrs
mov
and
icebp
push
aaa
xor
testb
pop
lcall
dec
je
aam
mov
fmuls
aaa
jecxz
scas
fstpt
pop
lret
insl
pop
mov
lods
mov
or
push
shll
push
das
mov
into
xchg
aaa
les
or
cmc
or
stos
sub
lcall
int
in
pop
cwtd
push
fs
loope
movsb
push
dec
mov
and
into
jl
negl
jbe
xchg
daa
out
sbb
mov
push
shlb
outsl
mov
out
mov
ficoms
stos
push
push
in
mov
push
call
mov
jecxz
push
decb
jp
sahf
cmpsb
cmp
fiadds
insw
lahf
adc
push
inc
push
add
mov
aam
cld
aad
movl
imull
or
subb
and
or
mov
xor
jg
push
jge
jg
jmp
pop
stos
cmp
je
repnz
fisttpll
jg
xor
and
pop
mov
xchg
filds
sbbl
fisttps
lods
mov
dec
in
les
cli
inc
mov
push
and
push
aam
xor
dec
jbe
in
adc
xor
loop
sbb
adc
inc
cld
jl
add
xor
and
cmp
fmull
negl
push
aas
push
mov
or
push
sub
call
mov
push
and
cli
daa
xchg
daa
rclb
cmpsl
and
inc
sub
fldl
cmc
mov
shll
cmpsl
jg
out
pop
jnp
or
mov
cmp
jbe
mov
js
nop
mov
xchg
jl
les
sbb
cld
fwait
or
mov
clc
pop
push
mov
aam
out
xchg
cmpb
out
sti
sub
lret
mov
daa
roll
and
and
test
shll
jns
pop
fstl
jb
pop
sbb
cld
outsb
popa
int3
xor
inc
test
mov
jg
std
fcoms
dec
ljmp
out
and
inc
rcrb
mov
or
sbb
repnz
lret
add
pop
adc
mov
jle
pop
xor
call
outsb
sub
cmc
jp
push
adc
lcall
cld
insl
das
fucomi
js
sbb
jmp
in
push
fcmovu
and
pop
push
data16
imul
stos
and
movl
pop
fdiv
movsb
lea
das
mov
popa
lock
mov
jg
outsl
shll
inc
xor
lcall
jg
pop
mov
push
jle
adc
jno
js
mov
add
mov
sbb
je
in
cmp
dec
sahf
les
push
xchg
jo
inc
sub
mulb
inc
mov
ja
int
repnz
int3
xor
mov
lods
cmpsl
jb
xchg
fwait
clc
nop
lods
ss
out
mov
jg
mov
xlat
inc
sub
xchg
mov
mov
push
mov
adc
sbb
shl
sub
in
and
mov
adc
lcall
or
shlb
cmpl
add
lds
icebp
and
push
mov
and
xchg
or
rorb
pushf
fisubs
cmp
jp
pop
xor
addr16
and
mov
inc
inc
push
mov
fildll
cli
sarl
sbb
fwait
push
mov
push
inc
push
sub
gs
enter
int3
jns
enter
js
clc
leave
daa
enter
dec
or
mov
subb
subb
xchg
jne
rorb
insl
xchg
lea
push
shll
inc
jns
mov
sub
dec
push
or
popf
sub
sub
loope
test
jmp
jbe
insb
insl
mov
sbb
imul
and
xchg
xcrypt-ofb
cmpsl
sub
push
xor
int3
sub
stc
push
ljmp
dec
push
mov
in
xchg
fisubs
sahf
pop
mov
cmc
fnstenv
iret
jbe
cmc
loopne,pt
or
sbb
mov
insb
in
rorl
push
mov
inc
push
fldz
loope
mov
add
imull
sahf
push
ja
ret
sahf
inc
cmp
mov
ret
pop
add
lret
aas
sub
mov
loope
outsb
frstor
xchg
lahf
push
fnstsw
mov
xor
mov
or
pop
in
mov
add
inc
iret
lcall
sub
das
dec
ret
in
pop
and
mov
out
fs
inc
inc
jb
xchg
notl
call
aam
rcrb
in
dec
fsubs
repnz
dec
add
mov
push
mov
and
lods
hlt
xchg
xor
add
sub
or
add
in
mov
push
push
xchg
test
in
cmc
mov
inc
push
mov
sbb
sbb
pop
xchg
pop
cpuid
push
jbe
push
push
test
jne
cmp
mov
aaa
mov
arpl
jl
push
jae
cmp
cmp
into
xor
stos
dec
imul
clc
mulb
and
adc
jne
inc
js
push
mov
xchg
xor
inc
lods
mov
xchg
mov
mov
adc
in
fidivs
decl
jb
insl
scas
cmp
in
enter
and
sbb
sti
pop
dec
into
pop
daa
outsb
pop
jmp
and
clc
gs
dec
int3
cmp
into
lahf
and
mov
mov
scas
sub
lock
adc
jecxz
clc
stos
mov
iret
repz
cmp
dec
hlt
push
mov
inc
cmp
lds
mov
test
push
stc
mov
ret
push
lods
lock
insb
mov
repz
jnp
adc
xor
sbb
shlb
sbb
mov
dec
test
and
dec
insb
push
and
movsl
cmp
cmp
cltd
test
sti
stc
jp
insb
mov
mov
jge
roll
hlt
push
mov
jg
add
std
xchg
sub
inc
stos
mov
daa
fisubrl
pop
push
ds
push
adc
leave
or
push
hlt
push
stos
lret
lret
sub
jge
add
cmp
pop
adc
ret
mov
mov
scas
add
sbb
push
movsl
mov
rdmsr
inc
inc
jg
xchg
clc
aaa
sbb
adc
outsb
in
add
pop
sti
rol
jmp
cmp
ret
or
loop
xlat
push
je
je
iret
sub
iret
push
adc
inc
sbb
outsl
pop
nop
sub
sub
fsqrt
in
xchg
mov
test
out
sbb
jmp
lcall
mov
jno
and
aaa
jp
push
in
mov
lcall
add
popa
clc
push
inc
jp
dec
mov
mov
adc
pop
or
jl
in
in
inc
xcrypt-cbc
cmpsl
xchg
daa
mov
mov
lea
ljmp
add
decb
imul
sub
les
mov
mov
xchg
add
test
inc
pushf
lods
dec
lds
push
ljmp
jg
arpl
dec
adc
rol
lea
inc
push
cwtl
mov
jmp
sarb
or
jb
push
arpl
fimuls
sub
filds
push
mov
push
sbb
or
gs
sarb
mov
movsl
pop
xlat
pop
rclb
movsl
popf
gs
xchg
jne
adc
data16
out
je
sti
shr
push
cli
ja
ret
push
fdiv
mov
lds
test
ljmp
out
or
subl
sti
nop
out
add
mov
or
call
pop
fidivrs
stos
jl
fmull
lcall
test
mov
lret
aad
loope
out
shlw
add
cmpsb
in
cwtl
push
data16
xor
int
sbb
test
cwtl
ficompl
fstpt
xor
rorl
add
inc
divps
inc
sbb
inc
testb
or
jle
jb
mov
cld
sub
aas
and
push
sub
dec
mov
xchg
xlat
or
pop
mov
leave
stc
mov
ss
pop
xchg
dec
pop
jl
inc
leave
mov
sbb
cmp
cli
daa
sbb
jg
xchg
enter
arpl
lock
sbb
xor
repnz
cmpsb
mov
in
clc
push
lret
cmpsb
shll
jb
xchg
aad
stos
jmp
or
gs
mov
mov
jns
addr16
shl
pusha
scas
xor
pusha
sbb
push
lret
daa
add
mov
pop
xor
mov
cwtl
imul
scas
in
sarl
jb
pushf
cli
addr16
add
repz
jg
xchg
insb
arpl
mov
mov
xchg
dec
sub
xor
cmp
cmp
jge
adc
dec
aad
jmp
push
push
js
xchg
xchg
pop
or
loope
add
jmp
outsl
cmpsl
cmp
movsl
xor
push
pop
scas
jae
movsb
decl
roll
cltd
mov
adc
pop
lods
fs
add
mov
xor
add
in
xor
scas
mov
inc
mov
jbe
mov
loope
xchg
lds
stos
call
stos
idivb
push
stos
fsubl
dec
in
adc
sbb
adc
push
cld
dec
xchg
mov
jecxz
mov
aaa
rcll
xchg
repnz
stos
mov
ljmp
popf
iret
xlat
push
jecxz
pop
insl
xor
jbe
imul
data16
je
test
incl
int
pop
aad
ljmp
jbe
stos
fnstenv
push
in
repz
xchg
push
cmpsl
rorb
sub
cmc
repz
jecxz
xor
inc
adc
rolb
xor
or
dec
mov
out
test
adc
loop
mov
jge
push
adc
mov
and
adc
push
add
ret
cmp
add
add
js
fnsetpm(287
cli
cwtl
daa
dec
sub
stos
push
or
fidivrl
pop
sbb
cltd
sbb
loop
notl
xchg
fidivrs
push
cmp
add
aaa
push
and
jno
adc
and
sbb
jb
in
insb
cmp
jg
pushf
mov
or
xlat
mov
xchg
mov
xor
mov
mov
aas
repz
sbb
clc
mov
rorb
push
push
repnz
pusha
sti
rolb
sarl
nop
sbb
inc
int
mov
rorb
jo
jp
mov
ret
mov
repnz
lcall
arpl
test
in
inc
xorl
xor
clc
movsb
sti
call
subl
fnstcw
bound
pop
int
fistl
js
fwait
cli
loop
push
aaa
nop
xlat
out
mov
jnp
es
lods
push
and
out
jo
and
js
mov
jb
pusha
je
ja
xorb
out
insb
xor
mov
rorb
sub
addr16
je
adc
in
cmp
adc
movsl
testl
sti
into
outsb
pushf
arpl
out
movsb
or
std
fucomi
push
jb
pop
mov
iret
or
movsb
add
hlt
add
push
jae
mov
xor
mov
add
loop
jmp
and
stc
fxch
icebp
add
inc
fmul
dec
dec
nop
xor
in
js
bound
xor
fdivrl
and
mov
xor
cwtl
fisubrl
shrb
aad
insb
and
sbb
pop
aam
adc
mov
cmpb
push
sbb
popa
loope
xchg
rcrb
xor
je
sub
push
and
mov
insb
orl
js
adc
adc
roll
pop
shlb
sub
jl
lcall
fisttpll
stc
lahf
or
lret
jbe
movsb
pop
push
push
scas
je
addr16
mov
addr16
mov
push
clc
sub
and
push
or
or
adc
push
xchg
test
xchg
leave
jbe
pop
mov
push
lret
xchg
sbb
popf
repz
es
xlat
xchg
jne
sub
and
sub
repz
adc
jp
scas
popa
or
sbb
lea
sbb
sbb
add
pop
fiadds
pop
movsl
movsb
sbb
and
dec
inc
xchg
add
add
jns
imul
pop
xchg
mov
in
inc
push
xlat
mov
fs
mov
push
das
aad
and
cmp
test
lret
stos
mov
daa
or
or
add
scas
sbbl
cmp
into
fs
cmp
cli
push
int3
sub
stc
pop
int
dec
into
imul
xchg
sub
sub
pusha
adc
xor
stc
xchg
data16
push
aam
xor
lret
mov
cwtl
mov
cltd
sbb
shlb
jl
and
pop
mov
mov
pusha
outsl
movsl
pushf
pop
mov
imull
movsl
jle
out
test
data16
xor
mov
mov
add
inc
lds
jmp
cmpsl
nop
dec
mov
add
faddl
push
or
or
pop
sub
sbbl
test
sub
cmp
repz
int
test
pop
orl
sarb
mov
into
jb
inc
mov
xchg
bound
push
push
xchg
shl
xchg
xchg
xlat
inc
adc
shlb
mov
sbb
out
popf
lds
clc
xor
out
mov
push
dec
dec
outsl
xchg
in
push
fsubrp
jecxz
cmpsl
push
mov
mov
mov
push
outsl
xor
adc
fisttpll
inc
cli
lods
and
test
mov
int
mov
fsub
cld
je
stos
xchg
ljmp
das
sbb
dec
mov
scas
jge
or
sbb
push
mov
in
inc
adc
fucomp
jb
stos
mov
int
nop
sahf
adc
movsb
xchg
mov
rcrb
sbb
bound
xlat
bound
adc
pop
mov
popa
sbb
dec
push
mov
shrb
nop
mov
clc
cmp
jbe
add
ss
mov
dec
pop
adc
pushf
test
or
push
pop
sub
or
or
stc
popf
xchg
adc
les
mov
or
xchg
cltd
cmc
scas
test
test
cmp
add
pop
lods
cwtl
ja
sub
jmp
dec
mov
fimull
fwait
push
fs
mov
xchg
dec
add
cmp
fisttps
mov
inc
testb
jnp
push
icebp
xchg
lcall
jecxz
xchg
dec
cltd
jno
jge
fabs
cmp
aad
pop
sti
cmp
sbb
movsl
or
xchg
mov
scas
mov
dec
loop
xchg
cpuid
jl
and
je
enter
pop
std
inc
cmp
push
mov
ss
and
test
mov
xchg
in
jg
je
cmp
ror
jmp
pop
aas
or
dec
in
or
push
or
in
add
add
xchg
inc
popa
addr16
add
scas
mov
into
or
jne
sub
jno
mov
outsb
mov
push
sub
stos
out
add
jge
cmp
enter
fs
xchg
nop
loopne
or
inc
push
lcall
test
push
inc
cs
jae
imul
mov
sub
pop
sub
jle
xchg
cmp
dec
pop
inc
fcmovnbe
adc
mov
push
aas
or
mov
push
repz
outsb
shl
imulb
test
cld
fistps
sti
xchg
cmpsb
mov
movsb
and
dec
test
in
xor
shrb
les
lahf
cmp
in
cmc
loope
mov
jno
outsl
xlat
inc
aas
es
enter
mov
iret
sbb
xor
inc
and
gs
inc
push
dec
outsl
sahf
push
ss
clc
push
add
pop
scas
clc
pop
pushf
movsb
mov
mov
xchg
mov
cmpsb
std
inc
and
sub
pop
mov
sahf
js
mov
fs
outsb
lret
leave
cltd
shrl
cmp
imul
mov
sbb
pop
sbb
fisubs
jecxz
xchg
jmp
mov
mulb
add
test
out
clc
das
call
jl
xor
inc
xor
insb
jp
js
jge
xchg
cwtl
icebp
cmp
popa
sbb
jecxz
aaa
pusha
inc
jle
xchg
ret
mov
sti
call
out
push
push
pushf
lahf
pop
dec
jg
pop
sub
pusha
fcmovne
xchg
fnstcw
xlat
in
dec
ljmp
xor
fucomi
icebp
dec
aam
push
mov
xchg
clc
popl
pop
xor
cmp
push
lahf
fadds
mov
xchg
push
fwait
out
mov
clc
lahf
or
movsl
clc
pushf
inc
push
or
jle
add
mov
jnp
dec
adc
mov
and
xchg
fnstsw
pop
mulb
pop
pushf
scas
les
inc
dec
and
sbb
push
mov
push
cmpsl
dec
jp
dec
data16
test
fdivp
repnz
lret
jo
rclb
popa
dec
fnstsw
idiv
cld
adc
inc
inc
arpl
movsb
pop
mov
mov
cmp
sub
test
sbbl
jl
pop
or
stc
inc
lods
lea
fsubrl
push
ret
rolb
adc
outsl
push
bound
in
pushl
adc
push
dec
adc
jp
sbb
xchg
and
mov
nop
int3
mov
insl
daa
int
or
sbbb
push
cmp
xor
dec
push
xorl
xlat
and
adc
leave
jge
push
popl
ljmp
scas
cmp
out
xor
add
stos
add
lret
in
cld
movsb
int3
sub
aad
mov
ret
or
cld
pushf
push
mov
pop
popa
bound
pop
into
or
add
icebp
add
test
jae
std
in
fs
jecxz
into
push
cld
mov
roll
inc
pop
mov
jp
imul
outsb
fsts
das
cmc
adc
dec
ss
cmp
mov
in
xor
jg
or
lods
mov
ljmp
pop
push
ss
inc
and
sub
sbb
pop
xchg
cs
mov
ret
sbb
and
xor
sarb
daa
adc
stos
inc
xchg
sti
xlat
jns
sub
repnz
mov
and
nop
adc
cmp
repz
and
mov
or
adc
push
cwtl
hlt
add
rcrl
insl
dec
negl
jcxz
sti
pop
cmp
lds
inc
movsb
push
out
jbe
loopne
mov
mov
stos
fidivl
enter
pusha
inc
movsl
xchg
cmpsb
mov
or
dec
loopne
xchg
js
ret
pop
cli
cmp
mov
pop
daa
loopne
insb
fcomps
or
inc
push
adc
das
cli
pop
scas
adc
andl
pop
ficompl
addr16
pop
sahf
xor
fldl
push
and
inc
cli
cmp
xor
sbb
inc
je
sub
cmp
das
cmpsb
aad
sub
enter
popf
cli
in
stos
rcl
jle
lds
and
mov
movsl
and
adc
mov
arpl
dec
insl
int3
inc
rolb
rorb
inc
insb
push
xchg
or
jl
out
pop
and
mov
icebp
pop
lahf
fbld
scas
jno
mov
xor
adc
push
and
shr
pop
dec
test
jns
call
or
push
aam
aad
mov
cli
push
je
xchg
mov
dec
adc
jb
push
cmp
fxch
lret
mov
mov
dec
popl
mov
or
cmp
xor
sub
mov
jbe
cmp
stos
scas
sub
bound
popf
into
repnz
imul
xor
aas
mov
dec
xchg
rorl
pop
addr16
movsl
enter
mov
and
cltd
leave
xor
movsb
cmp
fisubs
xchg
inc
mov
xor
dec
add
gs
pushf
push
nop
dec
ret
lcall
add
mov
mov
rorb
push
mov
mov
add
mov
fwait
div
loopne
je
shll
mov
push
movsb
xchg
fdivs
in
adc
xchg
mov
cli
fbld
pop
addl
pop
jo
shl
inc
stc
int3
into
roll
call
addr16
mov
stos
dec
frstor
mov
mov
inc
push
push
cmp
lret
scas
adc
sbb
push
mov
pop
push
imul
inc
ljmp
pop
or
xchg
and
loopne
cmpsl
jecxz
data16
lds
daa
inc
fisttpl
sub
repnz
push
cld
jp
xor
ja
add
sbb
dec
mov
xor
add
sbb
cmp
or
fdivrp
sub
sbb
test
xchg
rcll
ja
lcall
mov
stos
push
addr16
dec
pop
xchg
shll
xor
cmp
mov
gs
push
xor
xlat
xor
cmpsb
and
pop
clc
sbb
mov
cmpsb
xchg
cmp
xor
shll
inc
in
mov
xor
xlat
sbb
pop
test
dec
inc
int3
std
sbb
je
outsl
pop
dec
out
push
inc
push
insl
lods
clc
cmp
add
inc
shl
fdivl
inc
push
pop
sbbl
xor
scas
jle
fistpl
nop
cltd
adc
popf
sbb
pop
cmpl
aaa
adc
rcrb
inc
mov
push
xchg
dec
andl
arpl
push
rcl
xchg
mov
popa
mov
sti
in
lahf
jmp
out
xchg
lods
cmpsb
aam
xchg
fdiv
inc
imul
mov
add
int3
mov
xchg
aad
sbb
repnz
jle
nop
std
jle
xlat
pop
sub
pushf
push
jl
aaa
out
add
xchg
mov
mov
scas
mov
xchg
xor
je
negb
mov
ja
xor
loope
adc
push
jo
xchg
inc
jns
jae
jne
bswap
push
fmulp
jne
jle
pushf
jno
sbb
mov
dec
or
cmp
mov
test
int
add
adc
push
ja
dec
adc
imul
xchg
sbb
or
sahf
jno
test
int3
and
pop
cs
rorb
icebp
cmpsl
fstps
inc
xchg
negl
cwtl
and
add
lret
stos
iret
xlat
jmp
dec
adc
addr16
addr16
mov
xor
or
and
jmp
je
dec
test
jo
in
mov
xor
cmp
in
loop
or
lods
push
aam
aas
xor
or
push
ficoml
aam
jmp
shlb
rolb
cwtl
scas
jns
xchg
call
repnz
dec
adc
cmc
jecxz
or
cld
cltd
dec
jns
cmp
pop
xchg
xorl
call
xor
mov
rolb
std
cmp
rorb
pop
jne
jb
ss
imulb
push
std
aaa
je
or
sahf
or
add
dec
sti
xchg
scas
aam
fsubrp
fdivrl
test
dec
mov
add
adcl
das
push
cmpsb
push
js
scas
fiaddl
icebp
and
pusha
and
je
add
scas
hlt
xchg
cli
jmp
push
add
sub
lods
sbb
mov
mov
int
adc
dec
ljmp
and
inc
dec
mov
std
cltd
mov
sub
icebp
add
cmc
jmp
xchg
repnz
mov
std
jbe
push
jg
idivb
pop
xor
insb
sbb
es
nop
pop
cmpsl
pop
test
aad
lods
jmp
and
and
pop
mov
add
or
loope
mov
loop
adc
leave
mov
adc
sub
push
xchg
lock
iret
dec
pushf
scas
in
push
sbb
out
dec
roll
pop
jl
pusha
pop
in
mov
pop
cld
repz
push
adc
sub
cmp
cmovl
jnp
xchg
in
pop
mov
fistpl
loopne
inc
or
xor
imul
cmp
das
xlat
fdivs
mov
popf
jmp
mov
inc
mov
pop
arpl
adc
jl
mov
filds
dec
mov
mov
loope
push
ret
cmpsl
or
add
push
dec
push
lea
in
repnz
lock
jne
add
hlt
lods
lock
pop
addr16
sub
add
dec
mov
iret
dec
cwtl
popf
and
repz
rorl
mov
or
mov
fsubrl
fstpt
and
or
gs
pop
dec
je
jmp
gs
mov
xlat
add
mov
dec
pop
out
inc
call
aas
lcall
pop
stos
mov
sbb
sbb
sbb
test
mov
jne
leave
cmpsl
sti
inc
pop
and
and
dec
pop
lret
mov
xchg
jmp
and
mov
mov
movsl
leave
mov
xor
cs
stos
mov
test
outsb
lahf
shll
in
dec
out
inc
cmc
jae
test
push
pop
mov
leave
sub
je
or
faddl
in
add
outsb
xchg
fldcw
sahf
dec
testl
fcomip
addr16
cmp
notl
cmpsl
cltd
and
mull
cmpsl
jae
in
xor
es
dec
lods
xchg
jbe
inc
mov
js
stc
sets
xlat
inc
lds
adc
pop
dec
jmp
or
ficompl
int
mov
mov
daa
xor
sub
ficoml
nop
push
sub
inc
xchg
shl
pop
or
sub
leave
xchg
mov
mov
movsb
in
cltd
jle
pop
addr16
lret
lock
sub
out
pop
jne
int3
xchg
leave
xor
les
js
jb
cmova
mov
mov
and
flds
xor
jno
imul
test
aas
loope
mov
cmc
lods
cmp
movsb
popf
sbb
pop
pop
push
and
stos
je
lods
das
fimull
notl
xor
sti
mov
sbb
or
push
push
iret
push
cmc
jg
pop
dec
ja
sbb
movsb
add
dec
mov
test
fnstcw
int
test
iret
fimuls
add
adc
adc
scas
fisubs
stc
mov
dec
outsl
adc
cmp
add
sbb
cmp
xchg
sahf
xchg
adc
imul
shlb
aas
push
addr16
movsb
stos
push
repnz
add
cmpsb
or
push
dec
inc
fisubs
fidivs
sbb
ljmp
push
popl
adc
ret
pusha
push
push
mov
xchg
aad
mov
hlt
mov
jo
hlt
adc
dec
sbb
xchg
sub
inc
negl
fst
enter
pusha
mov
pop
adc
sbb
loop
incl
test
jg
xchg
scas
mov
jb
ret
fs
and
inc
cmp
ja
cli
mov
inc
sbb
imul
popf
dec
mov
mov
mov
aas
push
nop
and
dec
add
inc
sub
adc
movsl
fwait
push
fucomp
in
mov
fsubrl
ficomps
cmpsl
mov
push
aas
or
xchg
mov
imul
ljmp
sbb
jmp
jp
mov
xchg
push
xor
push
mov
xchg
and
test
xor
repz
jae
jns
inc
fnstsw
mov
out
lock
test
adc
dec
mov
stos
rep
mov
fdivr
out
std
rcrb
xchg
cmp
pop
lds
fbld
jge
inc
sbb
mov
mov
imul
sbb
sub
hlt
sti
loopne
inc
fiadds
mov
jl
outsb
or
and
imul
lock
out
jno
pop
in
jge
and
icebp
andb
add
jecxz
push
std
std
dec
cmpsb
js
iret
cmpsb
cmp
jmp
ret
fwait
dec
pop
arpl
sahf
sbb
adc
icebp
xchg
mov
cmc
out
jmp
cmp
out
imul
adc
ret
cmp
xorl
mov
cmpsl
and
sbb
hlt
js
add
dec
sbb
xorb
nop
int3
push
jae
mov
push
xchg
mov
stc
rorb
sti
sub
mov
xchg
fxch
sti
dec
dec
lahf
jbe
int
xchg
cmp
ja
mov
cmc
std
rorb
dec
cli
aad
out
cwtl
cmpsl
cmp
mov
push
rcll
sub
jo
mov
xor
or
mov
inc
sbb
inc
push
inc
fbstp
pushf
outsl
cmp
and
es
jne
xchg
push
enter
mov
pop
rclb
mov
jl
pop
sbbl
sub
ds
gs
aad
mov
fisttpl
push
lds
pop
call
push
add
imul
mov
jae
ljmp
dec
sbb
jl
sahf
mov
or
push
stc
cmp
cmp
lret
sub
add
or
mov
std
addr16
test
adc
sbb
push
inc
add
xchg
mov
adc
inc
aaa
fbstp
sub
sbb
mov
cmp
mov
movsb
fldenv
xor
rolb
mov
call
and
pop
clc
inc
enter
add
fwait
lea
ja
fdivrs
outsb
xchg
push
add
dec
jne
xchg
dec
lahf
movsb
lods
jne
loope
adc
ret
add
pop
sbb
test
ficomps
dec
mov
out
jle
rep
xor
movsb
inc
out
call
nop
xchg
mov
inc
scas
add
leave
hlt
movsl
cwtl
popl
aas
push
push
xchg
jmp
jp
into
leave
arpl
mov
shrb
adc
cwtl
in
into
cmp
imul
xor
out
popa
sahf
sub
mov
gs
ljmp
ret
mov
dec
adc
jo
fwait
scas
dec
cmp
sbbb
out
je
fsub
pop
dec
push
scas
push
lcall
or
loop
jge
xchg
pusha
mov
iret
movsb
cld
adc
pop
pop
push
dec
adc
pop
sbb
cmp
int
iret
dec
fisubs
fwait
js
or
xor
add
xchg
sbb
out
outsb
xchg
jno
jne
lock
outsl
xchg
stos
mov
out
or
movsb
out
pop
cmpsb
inc
push
rolb
in
xor
sub
mov
movsb
mov
je
or
call
adc
adc
mov
out
ret
std
sub
sbb
mov
rclb
mov
inc
pop
xchg
pop
clc
ret
mov
dec
adc
stos
imull
adc
inc
andb
inc
call
jl
cmp
mov
pop
test
add
call
stos
xchg
adc
imul
lock
add
cmpsb
adc
fstpt
sbb
adc
or
rolb
add
xor
xchg
adc
cmpsb
pop
clc
mov
jne
lahf
push
inc
and
xchg
lcall
inc
add
dec
in
sbb
and
insb
sub
sbb
outsl
mov
xchg
add
cmp
adc
xchg
fidivrs
scas
sbbl
lahf
mov
mov
adc
sbb
data16
mov
and
or
call
iret
in
inc
jnp
mov
popa
jecxz
add
sub
lret
mov
xchg
out
sub
and
push
sub
push
clc
mov
lret
fsub
xor
lahf
movsl
nop
or
sub
out
stos
fcmovnbe
xor
loope
jb
sub
push
test
shll
fnsave
test
neg
les
ss
jnp
imul
js
pop
in
dec
scas
idivb
mov
pop
andl
add
mov
inc
data16
data16
insl
mov
cmpsl
cmp
movsl
xchg
jnp
aad
mov
mov
dec
lock
xchg
pop
jns
ret
adc
xchg
and
pop
test
iret
jp
inc
mov
cmp
lods
out
jne
mov
xchg
fadds
sbb
enter
cmp
pop
or
mov
and
into
icebp
jge
cwtl
mov
dec
out
cmp
test
xchg
gs
pop
mov
clc
mov
sub
es
mov
adc
or
xchg
push
in
pop
mov
inc
cmpsb
addr16
xlat
aam
mov
mov
mov
ljmp
dec
cmp
hlt
decb
sbb
jno
push
dec
in
into
jnp
daa
and
movsl
jp
pause
xor
and
fwait
mov
sbb
push
test
sbb
lahf
stos
pop
dec
out
fnsave
clc
fldenv
pushf
mov
pop
jnp
pushf
mov
dec
sbbl
insb
pusha
mov
add
sbb
push
shrl
fnstcw
jg,pn
and
mov
cmc
sbb
repz
ja
dec
enter
movsb
push
andl
into
adc
daa
lahf
shll
in
movsl
adc
aas
jg
scas
ds
cmc
ret
mov
fs
jb
cli
sub
jnp
aam
dec
sbb
fdivl
push
out
pop
aad
lret
jo
mov
out
icebp
jmp
inc
sti
lods
push
aaa
xchg
xchg
jl
call
lcall
call
idivb
dec
push
and
sahf
push
int3
cmp
mov
mov
add
and
push
loop
sbb
xor
xchg
orb
mov
sub
into
ficoms
add
loopne
psrad
mov
faddp
xor
mov
jl
je
pop
in
popa
scas
push
cmpsl
sub
fbstp
sub
lahf
inc
lea
pop
int3
fcomp
sub
cmp
mov
addr16
xor
les
int
dec
mov
push
mov
es
popf
cltd
sbb
scas
cwtl
dec
xchg
dec
mov
jge
lea
dec
idiv
mov
jecxz
enter
xchg
in
push
out
mov
push
pop
pop
push
xchg
aas
call
mov
loope
or
into
into
loopne
shll
dec
sbb
sub
cs
ret
scas
adcl
movsb
sbb
pop
imul
pusha
call
lahf
adc
fadds
push
js
inc
dec
push
add
rcrl
push
jle
jg
mov
dec
sub
fimuls
fstpt
push
xor
ret
or
add
add
jae
cmpb
push
or
or
outsb
in
insb
jo
or
add
lods
mov
fcomps
shl
ss
cwtl
fnsave
and
jl
negb
add
and
push
ds
push
daa
cltd
jge
dec
test
xor
mov
xchg
sbb
mov
test
add
das
mov
dec
inc
adc
repz
in
mov
js
aam
insb
fistpll
sub
ljmp
xchg
sub
stc
push
lods
test
flds
hlt
push
lods
iret
add
or
cmp
mov
xlat
mov
sti
lret
or
decl
cli
mov
lods
cli
cwtl
or
sbb
pop
imul
adc
xor
movsl
ds
js
jmp
jmp
xchg
adc
ds
pushf
cmp
iret
out
fcmovbe
fs
cmp
dec
cmpsb
repz
add
fistps
stos
loop
lods
xchg
fwait
int
notl
leave
or
repnz
scas
push
pop
xlat
push
stc
xor
cmpsl
add
add
hlt
insl
into
jl
test
call
cs
mov
add
push
lds
adc
mov
jne
pop
inc
das
sub
dec
inc
out
jnp
push
inc
cmpsl
adc
and
push
cmp
das
add
sbb
pop
xchg
sub
push
rcr
sti
or
cmpsb
pop
lret
add
mov
pop
cmp
lret
add
jl
data16
fcmovnu
xor
enter
mov
addl
push
jbe
mov
stos
sbb
mov
pop
xchg
cmp
sahf
hlt
jno
mov
mov
in
aam
cli
aas
push
ss
outsl
or
mov
jle
ficoms
jno
aad
int
cmp
add
mov
rcrb
add
push
popf
xlat
insl
mov
pop
rolb
fmul
pop
ret
jecxz
neg
push
inc
add
addr16
and
mov
cld
aaa
int3
lock
stos
outsl
lds
outsl
test
sub
loop
push
jg
nop
test
mov
jge
push
or
shll
sub
sar
in
dec
lahf
loop
dec
scas
add
adc
data16
sti
stos
fs
mov
mov
cmp
cmc
ret
and
loopne
sub
or
clc
ret
aaa
loope
dec
pushf
mov
insb
pusha
or
mov
push
and
scas
sub
out
xorl
ffreep
jmp
mov
add
push
in
mov
in
cmpb
lret
push
xchg
adcb
stc
pop
fsubl
ljmp
and
adc
jne
pop
in
pop
mov
push
gs
repnz
push
pushf
pop
pop
fsub
shr
rclb
gs
sub
inc
mov
xor
sub
jbe
and
sbb
repz
pop
jae
dec
movsb
in
addr16
jmp
int
es
adc
sbb
jecxz
jmp
fiaddl
inc
testb
cmc
imul
push
mov
pusha
andl
push
test
imul
insb
popf
lret
fwait
jnp
dec
test
jg
loope
popa
xor
js
mov
sub
lret
sub
jno
pop
fbstp
popf
mov
mov
xchg
jle
ljmp
fwait
mov
xlat
sahf
push
jmp
pop
sar
mov
outsb
xchg
mov
mov
rcll
mulb
out
xchg
mov
sti
out
stos
and
arpl
call
sar
sbb
es
xchg
xor
rorb
movsb
fldt
bound
aam
push
inc
xor
or
clc
sub
pop
out
jmp
lods
mov
adc
shll
pop
sub
cmp
or
xor
pop
lcall
and
pop
cmp
xchg
adc
jae
xor
or
mov
xor
movsb
mov
jne
pop
xor
hlt
loopne
xlat
mov
lock
repnz
test
sbb
or
fidivrl
arpl
popa
jl
xorl
and
xor
push
pushf
out
cmp
mov
jnp
cmp
fs
jns
xchg
mov
cmp
fldt
xchg
cmp
into
stos
lea
add
scas
imul
jbe
mov
jmp
mov
xchg
xlat
std
or
sbb
add
and
lcall
mov
cmc
stc
mov
out
mov
add
mov
aas
lret
mov
movsl
add
cmp
push
out
or
xor
mov
inc
movsb
jmp
cltd
ss
test
pushl
mov
test
sub
jnp
inc
shlb
jge
outsl
sub
arpl
lret
cmp
cltd
scas
adc
sbb
push
fistpll
mov
pop
loop
push
addl
push
imul
repnz
cmp
sahf
roll
xchg
pushf
in
decl
xchg
ss
shr
cmp
fnstcw
sub
into
dec
cmp
ds
rorb
pop
sbb
adc
pcmpgtb
pop
lahf
cmpsb
add
fwait
std
dec
aam
mov
test
mov
leave
aas
nop
ret
popf
pusha
ss
adc
and
sbb
push
push
insb
pop
pop
mov
fistps
test
clc
sti
std
xchg
add
lods
filds
jnp
pop
mov
inc
push
adc
and
in
add
dec
push
sbb
mov
jecxz
stc
push
push
arpl
sub
vcvtpd2dqy
inc
xchg
test
xchg
decl
jo
xchg
das
xor
in
in
cld
or
ds
add
loope
rorb
fistpl
adc
push
add
jae
push
ficomps
mov
nop
xorl
add
das
inc
cli
imul
sbb
cwtl
lret
scas
pop
sbbb
fs
rcr
jecxz
gs
sahf
cmc
out
stc
sti
bound
cltd
jg
mov
cld
ret
and
mov
scas
dec
dec
ja
and
lock
sub
insb
ds
mov
xchg
hlt
xor
out
lods
pop
filds
push
cmp
lea
dec
lds
dec
in
sub
in
mov
scas
enter
das
cvtpi2ps
int
shrb
jnp
mov
pop
repz
add
or
mov
xchg
sub
add
shll
dec
movsl
mov
ds
xchg
pop
xorb
xor
or
cmp
inc
loope
in
cmpsb
xor
sbb
jecxz
cmp
xor
jmp
push
mov
push
xlat
aad
add
jge
cwtl
pop
lahf
imul
imul
ficompl
fwait
xor
sti
sbb
pushf
pop
pop
xor
roll
add
out
xchg
roll
shll
movsb
jmp
insb
lret
pop
dec
inc
push
out
adc
and
inc
or
or
cmc
cmp
hlt
mov
xor
adc
xchg
pop
cs
jno
sarl
mov
lahf
mov
popa
lret
fwait
jne
dec
mov
add
adc
in
add
fsubs
sbb
mul
jb
ficompl
dec
adc
out
jp
add
jg
xchg
cwtl
pop
or
push
repz
inc
push
lods
fistpl
sbb
cs
inc
sbb
dec
dec
inc
js
mov
jg
push
add
hlt
push
dec
inc
add
into
dec
push
mov
clc
push
ss
cmpsl
cmp
xor
mov
sbb
loopne
jbe
push
movq
inc
cwtl
push
fwait
popa
bound
std
shrb
insb
fcmovnb
daa
xor
inc
das
in
bound
jle
xchg
repz
popf
sub
cltd
lret
push
fstl
or
fcoml
repz
leave
mov
push
mov
mov
xlat
sub
xchg
insb
pop
std
jno
and
xor
add
push
insb
sbb
sti
outsl
push
movb
jns
std
mov
dec
repz
and
sub
or
cltd
mov
xchg
hlt
andl
cmp
ds
sbb
addb
iret
loop
xor
lcall
jl
das
pusha
cs
fldt
aad
insl
xor
xchg
adc
push
call
dec
add
dec
int3
repz
addl
mov
pop
mov
test
jo
mov
cmp
test
sti
lea
lods
mov
lods
lahf
xchg
or
dec
dec
mov
sahf
pop
js
aas
data16
jb
es
inc
iret
in
xor
insl
stos
push
sarb
push
call
and
xor
mov
pushf
inc
repnz
cmp
xor
pop
sbb
mov
xchg
jmp
mov
inc
int
push
ficoml
cmpsb
mov
add
std
adc
sbb
inc
xchg
mov
sbb
push
enter
inc
cmp
out
or
sub
clc
jns
and
mov
sbb
in
out
popa
in
adc
mov
add
dec
mov
cmp
in
jns
sbb
pop
int
mov
and
sti
or
jbe
inc
xchg
pop
lea
mov
mov
fnstenv
fiaddl
aad
jb
adc
inc
mov
add
addr16
adc
arpl
into
dec
enter
mov
inc
and
xchg
lret
or
and
push
repz
inc
jle
imul
sub
xchg
sbb
jb
jp
cmp
xor
movsb
push
dec
jne
sub
pop
call
or
ja
mov
stos
adc
dec
mov
xchg
xlat
add
pop
sti
leave
sub
cmp
scas
dec
mov
lret
test
jle
mov
jge
cltd
pop
call
repz
scas
inc
iret
xchg
ja
js
stc
int3
inc
lds
lods
xchg
and
mov
mov
call
lods
sub
aad
pop
fisttpl
mov
push
repnz
sub
pop
mov
jmp
subl
cld
fnsave
movsb
out
pop
repz
sub
imull
std
stc
pop
sub
int
sar
leave
insb
pop
xchg
mov
cli
sub
es
aaa
add
jno
push
mov
dec
push
je
enter
outsb
notb
in
push
push
mov
xor
shlb
verw
fisubrl
push
xor
cmp
mov
fldl
aas
mov
insb
es
inc
xor
or
insb
dec
test
out
insl
jmp
lcall
bound
mov
jg
jnp
jno
jo
add
xor
mov
mov
mov
xchg
stos
mov
add
out
divb
push
rcll
popa
in
aas
jp
xchg
movsl
or
push
outsl
add
aad
pop
mov
fcmovu
jmp
jle
xchg
pop
out
pushf
push
es
lods
sbb
sbb
movsl
pop
vcvtdq2pd
js
add
inc
mov
mov
and
jge
ret
sub
scas
add
or
mov
cmp
inc
pop
lcall
and
mov
lret
or
or
mov
sarb
jl
icebp
outsl
rcrl
cs
jbe
pop
gs
bound
sub
adc
push
push
adc
push
cs
or
fs
addr16
jns
and
mov
xchg
out
push
mov
std
std
out
inc
jmp
cmc
jecxz
jge
shlb
jp
jge
pop
fwait
xor
add
mov
cltd
and
sarb
imul
je
in
xchg
and
packuswb
sbbb
pushf
mov
insb
subb
push
lods
mov
nop
push
fidivl
cwtl
iret
les
and
cwtl
add
loopne
inc
andl
cmp
movb
cmp
add
push
pop
add
push
loope
call
jmp
or
mov
pop
xlat
dec
rorb
push
ja
loopne
fistpll
xor
lea
pop
adc
push
mov
fisttpll
daa
xchg
sbb
shlb
mov
push
mov
negb
int3
lods
sub
mov
movsl
pushl
insl
int3
in
fwait
pop
and
fidivl
je
pop
adc
jg
hlt
jecxz
jg
sbb
rep
xchg
ss
imul
clc
sub
or
xchg
pop
pop
aam
sbb
pop
stc
fcoms
fsubrl
cmpsl
xor
mov
stos
sbb
in
adc
jmp
cmp
leave
mov
lret
cs
xchg
inc
data16
jno
cld
dec
adc
mov
stos
das
dec
dec
bound
xor
inc
jecxz
adc
pop
pop
pop
out
mov
movhps
icebp
cmp
push
nop
push
aas
sub
scas
mov
les
das
setle
mov
mov
hlt
xchg
in
lods
and
shr
dec
cli
and
inc
pop
dec
cmpl
mov
xorl
test
arpl
mov
fwait
mov
insb
ficoml
inc
lods
mov
popa
je
cmp
mov
aam
outsb
sub
adc
cmp
cmp
int
xor
push
xor
mull
outsb
fsts
cmp
in
repnz
in
mov
pop
in
out
aas
lds
push
pop
cltd
idivl
data16
out
lock
cmpsb
pop
fidivl
push
sub
dec
in
xor
cmp
fcmovnu
cltd
and
in
add
mov
mov
in
mov
xor
mov
and
js
mov
pop
cld
cmp
pop
inc
clc
mov
sti
movb
jg
in
fmuls
mov
pushf
stos
sbb
push
rolb
inc
int
pop
jg
mov
or
call
test
lds
test
and
mov
int
cmp
pop
stc
jb
out
dec
adc
jmp
xchg
mov
addb
decl
cmp
cmc
fidivrl
iret
mov
cmpsb
sub
mov
leave
adc
jp
sub
in
inc
ret
jne
push
or
jnp
fldt
mov
inc
ret
pushf
pop
jmp
mov
or
lods
xchg
push
les
lahf
fiaddl
cmp
je
scas
push
cltd
scas
push
pop
or
add
cli
mov
jns
sbb
iret
lret
jne
fxch
loope
push
in
notb
cmpsl
dec
pop
jbe
mov
adc
cmpsl
dec
mov
jbe
jge
icebp
fistl
xor
xlat
mov
out
test
imul
lock
fsubp
loopne
mov
mov
shll
xlat
movl
ret
adc
test
aas
or
mov
test
insl
sbb
sbb
push
faddp
mov
mov
pop
pop
jl
nop
xchg
sbb
pop
mov
fstps
sub
and
sbb
mov
sub
in
cltd
inc
rorb
jg
outsb
push
ljmp
fs
shrl
mov
sahf
cmp
cmpsl
movups
pop
lcall
hlt
adc
push
jecxz
out
pop
mov
iret
pusha
mov
test
pop
enter
movsl
adc
cld
adc
adcl
mov
mov
lods
mov
pop
inc
mov
pop
add
mov
unpckhps
and
push
adc
das
fidivs
bound
loope
pop
mov
jns
movl
leave
stos
shlb
jmp
jmp
dec
mov
jns
iret
negb
nop
jno
pushf
push
sarb
mov
fwait
aaa
cmp
xchg
inc
jmp
iret
mov
mov
repz
pop
fs
and
sub
dec
cmp
sub
mov
xor
testb
shr
in
jne
add
adc
rcll
push
test
mov
es
dec
dec
pop
adc
incb
cmp
scas
jo
imul
inc
push
add
pop
push
movsl
xor
xor
fisubrl
sbb
je
sti
mov
into
push
mov
push
mov
add
mov
call
in
mov
cmp
sub
push
push
cs
pop
inc
cmp
repz
push
ljmp
mov
inc
mov
lret
inc
int3
sarb
xchg
mov
cld
cmpsb
cmp
inc
dec
jnp
adc
orb
and
sbb
add
jbe
xchg
repz
popa
fwait
lahf
mov
out
out
xchg
and
mov
jg
mov
cmp
or
mov
rorl
fwait
lock
cltd
sbb
jns
sub
and
push
popa
gs
push
mov
adcb
mov
movsl
cltd
jl
push
icebp
clc
cmp
and
repnz
scas
inc
repz
mov
pop
cmp
inc
lods
addr16
sti
enter
mov
je
test
mov
ret
pop
jecxz,pt
roll
or
ljmp
cld
rorl
xchg
add
xchg
lds
arpl
dec
and
rorb
add
dec
jae
fs
lods
inc
push
jbe
loop
adc
mov
cmp
or
mov
cmp
jg
sti
test
pop
mov
clc
push
sub
loope
dec
and
inc
dec
cwtl
ja
sub
fldcw
movsb
sbb
fsubrl
cmpl
xor
xchg
in
inc
lods
push
adc
pop
fs
xor
adc
loop
in
fstp
mov
popf
cmp
shll
jmp
insl
loopne
jnp
ret
movsb
fists
stos
adc
je
int
dec
loope
addr16
lret
mov
cmp
loopne
sahf
mov
and
and
jo
mov
xchg
adc
enter
inc
pop
add
enter
xchg
or
insl
loop
pop
push
insl
cltd
xor
jl
lds
dec
jnp
mov
adc
imul
dec
pop
xchg
xor
push
inc
arpl
push
js
dec
xchg
ss
add
loop
mov
xchg
pop
dec
cwtl
cld
mov
cmp
pop
cmp
insl
xchg
inc
lea
rorl
nop
movsb
pusha
loopne
inc
jp
in
notb
insl
mov
icebp
push
xor
or
xchg
aas
lds
push
push
leave
cmp
sbb
jp
out
xchg
add
out
xchg
jo
outsl
add
lea
inc
jae
idivb
sub
jno
aas
test
adc
jl
sbb
cmp
dec
mov
mov
sbb
mov
movsb
lock
fiaddl
pushf
mov
cs
cmc
xchg
ret
pop
fst
pop
inc
fstps
xor
gs
cmp
scas
push
incb
pop
sub
cmpsl
sbb
test
and
pop
in
xor
xchg
and
cmpsl
insb
ret
add
lods
sub
sub
push
sti
imull
jae
ret
push
jg
insb
into
mov
adc
rcrb
dec
out
or
les
jb
and
mov
pop
div
lea
insb
lods
mov
inc
pushf
negl
cmp
cs
mov
inc
cli
rolb
mov
cltd
pusha
fs
mov
rcl
push
xor
cli
addr16
js
or
sarl
mov
xorb
push
out
test
fisttpll
shr
xor
cmc
sub
push
in
insb
push
dec
stc
in
stc
dec
dec
in
popf
mul
xchg
cwtl
ljmp
xchg
pop
stos
push
jge
movsl
xchg
daa
sub
inc
sub
jp
enter
push
fs
les
in
adc
icebp
jge
pop
sti
inc
iret
pop
mov
adc
in
insb
dec
iret
cltd
dec
inc
fstps
fs
jae
jecxz
out
fucom
jecxz
push
xchg
inc
mov
or
lods
shl
inc
dec
xchg
test
mov
jae
sub
add
mov
mulb
pusha
lock
push
stos
test
mov
lods
sub
pop
push
xchg
inc
in
or
std
das
jecxz
fisubs
call
adc
mov
or
push
out
jb
iret
enter
in
ds
jp
xchg
push
push
jmp
insb
int3
and
mov
push
lds
xlat
jb
pop
push
and
cltd
sub
mov
adc
or
or
fdivs
sub
xchg
test
xor
loopne
gs
shlb
or
sbb
jbe
in
mov
dec
lods
aam
repz
div
stc
inc
test
pusha
sbb
push
adc
shrb
nop
sarb
inc
cmp
and
xchg
mov
add
jp
mov
jg
pop
jae
pop
gs
pushf
clc
push
adc
inc
push
mov
pop
faddl
lret
mov
mov
dec
sub
cli
push
repnz
add
push
movsl
cmc
sahf
jno
shll
test
scas
push
inc
adc
mov
xlat
pop
xchg
pop
out
cmp
bound
xchg
pop
loope
mov
mov
popf
xor
cs
or
inc
daa
cltd
mov
mov
in
test
cmp
push
lret
sbb
adc
sbb
jmp
lahf
bound
sub
inc
xor
mov
test
lea
cmp
mov
movsl
movsl
sbb
jg
pop
leave
mov
jns
insl
lds
push
mov
mov
ja
mov
dec
cmc
in
es
cmp
mov
mull
or
mov
lods
das
pop
test
or
push
int3
in
adc
and
scas
sbb
fs
add
fisubs
rclb
inc
push
in
cmpsl
and
mov
ja
decb
pop
cmpsl
shrl
in
mov
sbb
mov
xchg
xchg
in
lds
xor
into
les
or
jae
es
lret
lods
cmc
rcr
and
ss
ja
push
mov
stos
dec
push
jns
xchg
pop
sbb
icebp
xor
push
sbb
mov
or
inc
hlt
pop
in
outsl
mov
fwait
and
cmovs
in
mov
adc
sub
jge
or
cmpsb
enter
cmp
fsub
sub
sub
out
mov
push
icebp
faddp
mov
mov
pop
push
outsl
sub
jne
into
sub
je
aaa
push
das
out
mov
mov
inc
inc
sub
inc
mov
push
cmpb
mov
add
xorl
mov
sub
andb
mov
insl
out
fmuls
push
mov
addr16
test
mov
push
xchg
shrl
add
push
repnz
cltd
outsl
mov
sub
jns
and
xor
push
out
test
pop
adc
std
push
xchg
repz
jl
xlat
lret
sub
dec
and
es
mov
inc
and
dec
fwait
pushl
imul
hlt
xchg
inc
push
mov
mov
loop
push
mov
cs
dec
roll
or
stos
jecxz
xchg
push
and
loope
imul
repz
and
sbb
xchg
gs
mov
lret
in
inc
movsl
pop
push
sbb
repz
pusha
dec
pop
mov
lock
mov
jecxz
adc
les
lds
pop
mov
imul
mov
lods
mov
loope
mov
sub
ja
pop
jb
fiadds
fsubrs
arpl
push
inc
xor
xor
rolb
hlt
cld
add
add
sbb
mov
cmpsb
mov
pop
adc
push
inc
cs
mov
js
lds
pop
orb
jp
push
and
sbb
or
cmp
sbb
dec
addr16
or
pop
inc
icebp
aaa
dec
jns
push
jno
sbb
mov
sub
in
jge
xlat
jge
adc
mov
nop
lods
xor
lret
inc
repz
push
ret
pop
jp
test
mov
sbb
fisttps
dec
inc
pmulhuw
mov
push
cmp
lret
mov
test
decl
xor
sub
arpl
scas
xlat
adcl
aas
arpl
js
push
repnz
test
lahf
jnp
push
xchg
mov
dec
sbb
ss
aam
sbb
sbb
in
ljmp
es
xchg
loop
push
xor
mov
fisubl
dec
int3
and
cli
aad
adc
push
mov
xchg
mov
daa
pop
push
add
ret
mov
hlt
faddp
mov
xchg
les
push
iret
xor
add
incl
push
xchg
push
and
pushf
inc
add
test
mov
aad
jno
test
mov
mov
aam
sub
aam
push
inc
iret
cltd
sbb
sarb
cmp
test
cltd
push
cmp
sbb
in
aaa
test
rorb
popl
and
mov
jge
shlb
push
ss
aaa
nop
jge
xchg
add
bound
repnz
sbb
add
scas
add
jge
adc
mov
mov
ja
xor
jecxz
jbe
mov
out
lock
mov
pop
cmp
or
sti
cmp
xchg
repz
push
push
in
adc
adc
push
fwait
in
push
inc
cwtl
out
jne
inc
je
xchg
test
outsl
mov
cltd
or
cmc
push
sub
imul
jecxz
pusha
outsb
dec
pop
cmpsb
and
hlt
insl
sbb
fldcw
lock
inc
adc
fidivl
ret
in
inc
lcall
or
pop
in
mov
mov
leave
pop
movsb
ret
imul
and
sub
push
cmp
dec
orl
push
imul
xor
scas
jmp
xchg
icebp
out
insl
mov
sbb
inc
push
adc
cmpb
mov
lock
push
and
push
xchg
shll
stc
js
pop
int3
pop
shlb
sbb
ret
dec
and
push
jge
sub
jge
dec
mov
lds
shrb
adc
rcll
mov
lcall
lods
jae
push
mov
inc
jns
repnz
xchg
cmpsl
std
sbb
mov
xchg
int3
mov
cmpsb
mov
inc
stos
push
int
jl
mov
push
pusha
sar
shrl
enter
xor
jge
lds
jmp
call
xchg
pusha
dec
push
outsl
ja
ljmp
sub
sub
mov
pop
jne
insl
scas
xchg
xor
jmp
dec
inc
dec
mov
movsl
mov
jge
stc
xor
cmp
mov
mov
cmp
lods
jl
pop
jne
out
push
dec
adc
dec
inc
sahf
inc
daa
inc
xor
dec
mov
ret
xor
or
out
inc
pop
push
ret
popa
mov
out
decb
repz
pop
lahf
sub
dec
mov
dec
into
sbb
add
or
xor
xor
mov
mov
gs
adc
pop
xchg
add
inc
outsl
lea
pop
hlt
cwtl
inc
idivl
and
hlt
ja
addr16
or
mov
cmp
mov
sbbl
cmp
dec
sub
adc
in
icebp
mov
inc
inc
aas
icebp
insb
in
cmp
cld
pop
cld
pop
cmp
push
aas
or
loope
jns
sub
jge
cmpsl
mov
js
iret
cmpsb
cmp
fdivl
add
inc
and
repz
jmp
push
fisubrs
inc
jmp
pop
std
into
arpl
push
call
push
and
aam
jle
dec
xor
dec
adc
mov
add
lret
rcrb
ljmp
inc
add
or
sub
and
data16
out
push
push
test
push
sbb
cli
js
test
loop
in
and
inc
insb
addr16
push
jb
xchg
xor
jne
pusha
mov
sub
cmc
pop
and
iret
mov
jecxz
imul
fisttpll
jle
popa
pop
sbb
sbb
nop
cmc
out
jnp
dec
or
popf
in
insl
dec
nop
inc
pop
or
jne
xchg
jl
and
push
sbb
fsts
jbe
and
jmp
mov
movsb
orl
mov
out
mov
and
outsl
shr
xlat
and
loope
pop
mov
lods
ds
rolb
ds
aas
and
ficoms
dec
xchg
shrl
insl
dec
xchg
add
orb
pushf
dec
mov
pop
hlt
push
sub
adc
pop
jmp
inc
ljmp
in
int
mov
sbb
inc
dec
inc
lea
sbb
sarb
inc
jecxz
mov
outsb
jge
fdivrl
daa
and
pop
cmp
xchg
sub
mov
inc
rorb
pop
stos
lea
mov
popf
xchg
fcmovu
cli
dec
pop
jecxz
xchg
dec
cmp
stc
cmp
push
cmp
dec
xchg
cmp
push
lds
mov
mov
mov
movsl
aas
aam
test
aas
sti
mov
or
dec
fsubrs
cli
ds
inc
jmp
cwtl
fldenv
out
inc
inc
and
cli
inc
sub
lds
mov
inc
push
dec
ja
dec
lahf
xchg
and
movsb
test
je
cwtl
mov
mov
gs
jecxz
clc
fisttps
cmp
ja
cmpsb
and
repnz
fwait
leave
push
lcall
ljmp
adc
lcall
enter
and
std
mov
cmp
fs
push
scas
das
xor
lock
in
pop
jne
push
sbb
loop,pn
iret
xchg
lods
scas
cli
outsl
mov
xchg
and
testb
cmp
cmp
or
fcoms
mov
loop
ss
shlb
cltd
mov
xor
or
imul
ficompl
mov
pop
cmc
mov
adcb
addr16
outsb
inc
xchg
and
push
pop
dec
pushf
repz
xor
pop
enter
movsb
xor
xor
and
xchg
fwait
clc
pop
cli
jo
cmpb
sbb
xor
adc
mov
mov
jle
insb
js
push
loopne
push
sub
addr16
insl
cmpl
movsb
xchg
push
push
rorb
or
icebp
xchg
test
mov
mov
out
les
nop
lods
je
fistl
imul
out
mov
add
cld
inc
xchg
test
repnz
or
mov
repnz
mov
xor
stos
adc
fisttpll
dec
insl
mov
push
hlt
sarl
outsl
mov
adc
call
add
jno
lods
sti
ja
xchg
jg
lret
mov
xor
in
xchg
push
or
mov
stos
push
pusha
fisubs
ljmp
dec
sub
into
jae
mov
lods
orl
daa
movsb
lcall
shrl
push
in
test
ret
fsubrl
andb
pushf
xorl
in
pushf
mov
call
and
aad
outsl
dec
pop
mov
leave
mov
out
adc
mov
mov
add
daa
add
ljmp
push
inc
loope
test
push
dec
outsl
pusha
inc
mov
sti
imull
or
push
in
and
pop
and
xchg
mov
pop
jp
test
stc
mov
mov
mov
or
int
mov
mov
mov
mov
sub
dec
out
xchg
dec
decl
scas
xchg
test
or
pop
in
lods
sbb
jmp
pop
sub
mov
lods
inc
ljmp
es
jns
push
adc
ds
fisubrs
pushl
dec
jge
repz
sub
and
popf
pop
mov
inc
inc
aam
jb
inc
add
push
xor
or
sbb
dec
lahf
inc
push
pop
fiadds
jmp
daa
pop
ja
xlat
xlat
dec
mov
sbb
cmp
cs
cmp
dec
std
sub
sbb
div
movswl
mov
mov
xchg
fstpl
cmpsl
mov
jle
fstl
lea
sbb
gs
push
mov
and
cs
jbe
inc
sub
mov
nop
mov
scas
aad
unpckhps
insl
mov
testb
or
les
aam
popa
fsubrp
test
push
gs
adc
loop
mov
ljmp
push
test
mov
sub
sbb
dec
dec
mov
fidivrl
jns
out
pop
adc
std
pop
mov
shlb
test
into
jecxz
lret
out
xchg
imul
fildll
idivb
xor
sbb
xchg
or
dec
bound
mov
rorl
xchg
push
sub
gs
in
repz
pop
add
xchg
jb
inc
addr16
sub
jl
ret
pop
sbb
sbbl
xchg
insb
lret
mov
sub
rcll
stc
lcall
decb
add
in
aad
pop
mov
fdivl
mov
adc
call
lret
aas
nop
mov
loop
lcall
push
xchg
add
mov
jb
mov
adc
clc
icebp
xor
mov
sub
pushf
les
or
mov
sub
in
imull
ss
push
ss
xchg
add
filds
jecxz
das
repnz
mov
scas
sarl
xchg
sarl
adc
cmpsl
sti
and
mov
in
test
pop
dec
lods
or
push
inc
cmp
incb
in
stos
sub
sbb
sbb
cmc
sbb
adc
ret
sahf
addr16
and
dec
sub
adc
testb
test
repnz
xchg
jecxz
mov
popa
call
gs
ret
sub
js
ret
inc
andb
scas
ret
dec
aaa
xlat
pop
lcall
mov
lods
test
inc
call
mov
dec
std
xchg
imulb
aad
jl
push
xor
mov
int3
add
pop
je
mov
push
cmp
mov
pop
sbb
rcrb
rcrb
std
xchg
andb
leave
jnp
pop
icebp
fildl
push
or
nop
insb
stos
ss
add
inc
mov
push
fsubp
addr16
int
lret
jge
xchg
out
pop
dec
push
test
add
jmp
add
stc
add
std
cwtl
in
sub
dec
dec
shl
sub
sub
mov
mov
test
pop
cmp
ds
scas
nop
in
and
adc
mov
or
push
in
inc
std
adc
stos
in
rorl
push
pop
jecxz
js
jle
shl
int
js
add
cmpsb
mov
adc
cwtl
sub
xor
inc
adc
lcall
lds
je
fiaddl
js
or
push
repz
inc
xor
fbstp
andl
scas
in
push
inc
jne
test
iret
cmc
ret
pop
mov
pcmpgtw
fld
dec
daa
cmpsl
pop
mov
ja
loopne
imul
jle
mov
fwait
mov
popf
mov
jecxz
inc
arpl
leave
xchg
stc
mov
xchg
icebp
sub
das
jnp
sub
and
cmc
and
sbb
insl
adc
inc
lods
or
hlt
xchg
adc
out
imulb
adc
lahf
sbb
mov
sub
insl
inc
sbb
jb
call
pushf
popa
rcll
xchg
jns
sub
and
mov
mov
lahf
mov
cmp
add
sbb
pop
repz
in
jno
pop
pop
jb
cs
xchg
psrad
push
popf
or
pop
add
jp
and
mov
ret
outsb
sbb
xor
mov
das
out
inc
sub
sub
jl
jp
sbb
test
jno
cli
icebp
lret
mov
push
xchg
dec
std
cmp
pop
sbb
inc
mov
enter
xchg
jnp
jb
xchg
ds
add
mov
mov
insb
xor
xchg
ja
xchg
nop
out
das
mov
or
arpl
out
cmp
loop
jge
adc
out
and
cmc
xchg
test
mov
cmpsb
je
cmp
sar
mov
jae
mov
scas
jge
mov
add
cmp
int3
cmpsb
inc
xchg
hlt
xchg
push
das
int
or
adc
aam
aaa
mov
push
xchg
pop
lods
loopne
push
mov
inc
xchg
adc
rcl
stos
cmp
loope
sbb
and
xor
cmp
arpl
jo
sbb
and
out
in
mov
rcr
sub
sbb
mov
or
mov
scas
popa
mov
push
stos
sub
jmp
js
pop
xor
mov
add
dec
test
push
pop
nop
adc
pop
mov
imul
adc
jns
cmp
clc
push
mov
test
cmp
jl
push
shlb
mov
pop
push
push
mov
xchg
xor
loope
ret
mov
push
fs
inc
je
xchg
pusha
push
inc
jo
jnp
push
inc
sbbb
call
or
not
cmp
jge
loopne
lds
test
ret
xlat
fmull
jbe
cld
popf
cltd
sbb
push
loop
mov
test
xchg
dec
mov
psubsb
lds
jne
aam
and
jo
inc
les
cmpsl
insl
rcrb
mov
mov
mov
cltd
sbb
adc
mov
aad
repz
adc
or
fdecstp
movsb
xchg
jae
mov
repnz
jbe
lock
xlat
loop
jle
lods
and
divl
or
pop
push
lcall
xchg
dec
cld
inc
fmul
andl
sbb
adc
jb
lcall
in
fucomip
in
std
or
pushl
mov
jp
and
pop
mov
mov
inc
add
aas
imul
iret
call
inc
jne
inc
lods
pop
jp
adc
aad
push
mov
or
pop
xchg
inc
outsb
sub
ss
fidivs
xchg
lret
scas
insl
lahf
mov
mov
stos
adc
jae
inc
stc
sbb
rcrl
cmpsl
test
int3
sub
int
in
std
sub
and
xor
pop
jno
mov
push
cmp
loopne
leave
xor
inc
aas
icebp
into
push
jbe
adc
dec
sahf
dec
ds
xor
sbb
popa
insl
push
pop
xor
imul
lods
ds
call
push
loope
nop
insb
dec
pushf
imul
fdivs
imul
cmpsb
jecxz
push
fldl
test
out
rolb
shrb
xchg
ret
clc
test
pushf
insl
lcall
sbb
jg
outsb
adc
sbb
fbstp
jae
leave
mov
jmp
aad
mov
cld
jecxz
rclb
add
in
mov
jae
data16
cmpsb
pop
call
loop
lret
popf
fldcw
les
inc
xor
movsl
cltd
ja
fildl
pop
faddl
repnz
mov
mov
xchg
sub
into
mov
addl
imul
sbb
ljmp
or
test
rcll
mov
mov
or
mov
xor
leave
rcl
es
mov
iret
pushf
dec
mov
sub
dec
rcrl
adc
je
hlt
inc
pusha
push
enter
dec
or
fs
out
outsl
xchg
iret
dec
pop
mov
mov
or
aas
xor
jb
lahf
arpl
xchg
xor
adc
clc
repnz
mov
fcmove
fwait
mov
lea
fisttpl
xor
push
cwtl
mov
jo
xchg
mov
out
aaa
adc
scas
dec
adc
in
push
hlt
cmp
dec
xor
mov
pop
lods
test
cmpsl
stc
and
pushf
call
pop
popa
lock
add
mov
fs
jb
fidivl
shl
or
test
jns
sbb
rolb
jo
in
jle
adc
mov
faddl
xchg
packuswb
ja
xor
popa
cld
push
adc
jp
inc
jmp
inc
mov
loopne
sbbb
jo
cld
inc
imul
dec
xor
mov
jno
ret
and
or
sub
or
cmp
cmp
cmpsl
je
cltd
cmp
out
enter
aaa
out
sub
push
sbb
adc
out
insb
and
mov
subb
and
hlt
mov
scas
hlt
mov
imul
mov
icebp
data16
jge
icebp
sahf
aaa
fwait
scas
jl
sti
adc
mov
adc
mov
adc
jnp
stos
mov
jecxz
inc
or
sbb
mov
cmpl
loope
scas
movsl
ljmp
stc
enter
fcmove
xor
es
jbe
fcomps
clc
inc
pushw
lods
orl
daa
mov
cmpsl
daa
ret
xchg
imul
ds
sub
mov
shlb
mov
mov
inc
mov
mov
lods
pop
xchg
pop
out
adc
sbb
leave
pop
popf
mov
stos
inc
add
mov
outsl
jbe
xchg
arpl
mov
and
cmc
push
lahf
pop
mov
push
add
popa
inc
pop
sbb
adc
jno
sahf
mov
add
cmpsb
popl
aaa
movsb
fsubs
dec
xor
cmp
mov
jae
mulb
pop
add
mov
outsb
sbb
xchg
popf
push
lret
xor
mov
shll
sbbb
pusha
call
test
push
adc
dec
arpl
sbb
clc
add
push
cltd
cwtl
mov
insl
mov
rclb
mov
fdivr
and
pusha
in
cld
cmp
fdivrl
test
pop
dec
stc
sahf
and
data16
fnstenv
lret
cmp
mov
test
shlb
stos
adc
mull
lock
cld
rcrl
jp
ficomps
sub
hlt
in
pop
pop
rcll
inc
adc
or
jmp
rolb
or
scas
repnz
add
jecxz
mov
pop
fucomp
xchg
js
and
lret
xchg
mov
mov
cli
xchg
mov
in
pop
xor
or
mov
in
mov
loopne
adc
push
push
imul
sbb
sarb
adc
lods
aad
stc
pop
imul
push
stos
mov
mov
jmp
xor
add
inc
fs
frstor
mov
mov
and
es
into
pop
loop
std
dec
hlt
mov
ret
xor
mov
shlb
icebp
loopne
push
pop
xchg
add
std
sub
call
jp
dec
jnp
jle
stc
nop
rcrl
sarl
dec
test
mov
xor
cmp
fmul
xchg
nop
mov
dec
dec
or
lahf
das
incl
xchg
sbb
call
push
inc
pop
jno
xchg
adc
xlat
adc
add
popa
fwait
dec
stos
int
test
mov
xchg
pop
pusha
stc
aaa
sub
xchg
mov
xchg
push
jbe
xlat
push
and
pop
mov
mov
imul
dec
push
cmpb
cmp
adc
add
leave
sub
jp
pop
enter
adc
sbb
xor
shrb
and
lahf
jge
sti
rolb
pusha
shrl
data16
addr16
shl
mov
cs
test
mov
frstor
sbb
xchg
clc
popa
pop
jbe
or
xor
mov
jne
inc
inc
shlb
cmp
xchg
insl
pusha
mov
incl
data16
dec
dec
push
das
clc
cld
movsb
roll
jno
in
xor
jno
int
es
sarb
push
add
aad
push
push
sub
jmp
mov
push
mov
or
in
sub
dec
popl
inc
and
out
jbe
adc
dec
out
popa
adc
loop
jg
add
inc
inc
dec
xorb
mov
repz
adc
dec
lcall
mov
inc
cmpsl
mov
jl
push
xchg
lret
rcll
aaa
jb
insl
xchg
pop
es
pop
jge
loopne
adc
add
repnz
inc
cmp
iret
pushl
cli
or
dec
dec
xchg
sbb
sbb
jp
inc
or
bound
jl,pn
bound
dec
sbb
into
sbb
mov
dec
xlat
cmpb
inc
iret
stos
jecxz
mov
sbb
mov
popl
mov
mov
mov
mov
test
inc
jbe
ret
inc
push
inc
std
push
pop
cmp
lea
into
int3
addl
shlb
mov
xchg
jle
aad
nop
or
sbb
mov
mov
aas
jb
lea
add
stos
stos
fildl
out
mov
hlt
dec
xor
xchg
mov
es
lret
nop
in
shrb
enter
xchg
cld
fwait
pop
lock
adc
movsl
aas
in
mov
and
or
push
cmp
imul
push
xchg
ds
jecxz
les
cmpsb
pop
add
ss
sbb
pop
leave
xchg
push
cltd
bound
jp
mov
lret
fldcw
inc
imull
push
fstp
out
pushf
jge
sub
mov
pop
sub
add
push
popa
push
test
push
sbb
inc
adc
insb
sahf
lcall
rol
mov
test
sub
xchg
js
mov
xchg
sub
call
mov
bound
shrl
mov
rcrl
mov
push
push
stos
mov
out
pusha
jg
push
jo
dec
cltd
in
sahf
cmp
or
mov
mov
inc
call
aad
lret
pop
fmull
or
push
aad
lds
lods
xchg
pop
cmp
mov
arpl
outsb
cltd
add
cmp
test
ds
xchg
push
cld
push
mov
sub
cmpl
xor
cmovp
xor
pop
pop
cmp
push
add
mov
and
mov
pusha
je
mov
clc
inc
pop
dec
xlat
lret
out
je
xchg
enter
lcall
out
sbb
fstp
incl
lods
inc
add
aas
fidivrl
xor
shr
or
adc
xor
cmp
insl
insl
sbb
push
stos
std
xchg
add
mov
pop
xchg
out
fwait
mov
xchg
pop
push
xchg
ljmp
imul
hlt
sbb
repnz
mov
or
outsl
xor
mov
into
aaa
insl
aas
dec
push
addl
mov
cmp
xchg
inc
inc
lcall
add
xor
mov
dec
repnz
cmp
jp
lea
cmp
or
dec
sbb
adc
icebp
sti
pop
loop
mov
js
xchg
cld
mov
dec
sbb
jp
ret
lods
test
pop
pop
cmp
sub
js
xor
sarb
mov
repnz
xor
xor
add
mov
cmp
cmovns
lret
pop
mov
jo
pop
into
jmp
shll
dec
testl
lods
dec
push
mov
insb
xor
cmpsl
fcompl
aas
movsl
jb
or
aam
negl
shrl
scas
popa
pop
sub
outsb
mov
aas
add
or
int3
imul
dec
shl
add
out
push
cmp
addr16
cmpsb
pusha
imul
in
jl
dec
lcall
dec
xchg
in
in
add
push
fwait
idivb
push
aam
fstp
imulb
rcrl
imul
imul
pop
cs
sbb
stos
pusha
dec
jno
sti
sub
fdivrs
jecxz
inc
jbe
imul
iret
or
inc
cltd
outsl
leave
sub
pop
mov
ret
xchg
or
jbe
and
popf
jmp
cmpsl
lea
adc
mov
fdivrl
fcmovu
or
gs
mov
rorl
mov
out
pop
loopne
arpl
outsl
xor
adc
sub
push
push
add
inc
mov
xchg
sbbl
dec
lret
jg
and
pop
stos
aas
shl
mov
mov
shlb
and
add
scas
rcrb
sbb
repnz
outsl
mov
jo
rcll
imul
inc
mov
insb
jl
push
pushf
mov
sbb
lds
aam
xchg
mov
ror
mov
ljmp
sbb
xor
mov
mov
pop
push
std
lds
xor
xorb
outsb
add
clc
adc
inc
mov
repnz
push
mov
in
mov
xlat
cmc
push
test
lahf
mov
std
jle
loope
out
xchg
lret
mov
and
ficoml
std
and
scas
dec
les
dec
sbb
pop
push
jecxz
push
mov
filds
imul
stos
adc
stos
popf
cs
shll
pop
add
and
pop
test
imul
sub
iretw
sub
inc
pusha
addr16
dec
inc
mov
out
mov
xor
xchg
inc
gs
lret
test
push
rcl
pop
lods
in
or
subl
dec
xor
add
jb
adc
popf
pop
sbb
xchg
xchg
in
lods
loope
aad
push
fistps
dec
imul
data16
jle
add
into
mov
or
xor
into
dec
adc
hlt
jbe
fs
sbb
and
dec
push
sti
fimull
repz
add
cmpsl
xchg
sub
adc
pop
push
jno
jne
in
addr16
cmp
adc
or
fsqrt
sbb
test
push
and
mov
in
movsl
push
ds
mov
cmp
dec
add
sub
mov
rclb
mov
add
adc
aaa
mov
aas
pop
jno
xchg
lock
mov
push
outsl
push
mov
subl
mov
mov
popa
js
imul
inc
shl
xchg
or
add
add
jle
jne
in
gs
ret
or
mov
clc
push
or
xchg
arpl
nop
out
xchg
add
dec
pushf
xchg
orl
fsubrl
rclb
jns
pop
xchg
sarl
cmc
cmp
leave
xor
loope
enter
xor
sub
xlat
repnz
mov
arpl
into
lods
ljmp
fnstsw
mov
in
enter
sub
stos
inc
cmpsb
push
pop
int
pop
lret
ss
mov
inc
inc
sbb
mov
out
xor
jns
cwtl
insb
outsl
inc
add
xor
je
jne
cltd
sti
mov
test
sub
and
lods
or
arpl
mov
dec
mov
rclb
mov
lods
adc
ja
lods
bound
and
pushf
imul
shlb
lock
shll
mov
daa
fwait
xchg
mov
addr16
pop
lret
lcall
js
loopne
cs
pop
aad
test
push
jge
movsl
push
push
mov
ljmp
xor
ds
bt
sbb
mov
ffree
fs
hlt
shll
inc
test
jp
dec
mov
popf
data16
or
fsubs
bound
mov
and
js
push
mov
dec
neg
ret
ds
dec
fcomip
mov
leave
sub
int
cmp
xchg
daa
adc
pusha
cmp
inc
and
movsb
push
in
xchg
jmp
ret
and
push
icebp
pop
fwait
mov
nop
mov
ret
pop
pop
rcrb
cmp
lds
scas
cwtl
lret
mov
jmp
cltd
pop
inc
sbb
jp
fildll
jbe
mov
xor
mov
fwait
or
ss
sar
pop
lret
fisttps
xor
push
sahf
mov
sbb
fsubrs
push
outsb
sahf
ja
cmp
cmp
decb
xchg
jns
xchg
insl
bound
or
push
les
je
icebp
pushf
loop
mov
pop
ljmp
mov
lret
inc
dec
jnp
lds
in
fsts
and
cli
mov
push
push
mov
pushf
adc
jl
xchg
rcl
mov
loope
dec
insb
bound
imul
daa
push
dec
aam
lds
mov
push
pop
dec
das
adc
insb
pop
sbb
insl
adc
pop
popf
imul
jns
xchg
xchg
lea
shlb
or
xchg
mov
cmp
mov
fisttps
dec
mov
in
imul
imul
xchg
in
nop
sbb
out
mov
xlat
dec
xchg
adc
jle
pop
std
cmp
xor
stos
imul
insb
shr
stos
inc
mul
dec
int3
jo
mov
xor
scas
pop
pop
dec
cltd
mov
mov
jnp
dec
loop
push
push
insb
push
jno
lds
lret
adc
int
rcl
or
inc
into
dec
cwtl
les
inc
or
cmpsl
cmp
es
outsb
sbb
xchg
sbb
stos
push
subb
imul
fld1
cmp
not
xchg
arpl
jae
cmpsb
sub
xchg
sub
dec
stc
scas
stos
dec
sbb
sbb
jmp
xor
fidivs
loop
scas
mov
jb
pop
adc
cmpsl
pop
aad
pop
sbb
aas
dec
das
int
jle
imul
nop
sub
xchg
mov
nop
sbb
repnz
dec
mov
popl
jae
sub
sti
push
jle
cmpl
mov
mov
test
imul
or
loope
shrl
fwait
jbe
ss
mov
aaa
dec
call
sar
js
jg
fmuls
popf
mov
mov
sbb
dec
and
and
mov
inc
out
lret
pop
fildl
xor
push
in
testb
jmp
xor
add
gs
out
addl
roll
push
push
mov
cmpsl
dec
pusha
leave
addr16
mov
mov
or
push
dec
mov
repz
push
jne
mov
or
jns
xchg
or
mov
fadds
enter
and
pop
jmp
xor
fldcw
mov
xchg
inc
nop
stos
sub
ret
cmc
pop
lods
xlat
es
jg
xlat
xchg
mov
loop
mov
mov
lahf
push
int
rep
scas
jbe
out
sub
sub
xchg
addb
out
popf
sarl
aam
popa
add
in
xor
roll
mov
js
data16
popf
mov
cmp
add
push
pop
insb
cmp
push
mov
push
jmp
insb
jno
lock
cmpsb
cmp
lock
lret
movsb
and
loop
lcall
icebp
jmp
add
xchg
subb
mov
sbb
test
xchg
xor
push
mov
jp
pop
pop
ja
and
mov
pop
add
call
push
xchg
lcall
push
arpl
xchg
out
or
ss
dec
dec
add
jo
xor
or
stos
add
and
push
mulb
fistl
jge
sbbl
xor
pop
pushf
inc
out
xor
fs
mov
test
mov
push
jle
stos
mov
lods
pop
stos
cmpsb
xchg
xchg
cs
pop
xchg
mov
pop
xchg
enter
adc
jmp
sbb
xor
ss
call
or
pop
scas
pop
push
inc
mov
xchg
lret
xor
daa
outsb
test
loope
js
push
sub
jmp
sbb
or
jg
dec
aas
enter
mov
shll
or
pop
leave
jmp
jmp
js
jg
cwtl
push
out
aad
imul
test
dec
xchg
fldt
das
test
ret
jbe
xor
stc
jmp
inc
pop
or
rolb
ljmp
xchg
mov
scas
dec
inc
or
mov
test
mov
mov
inc
cmpsl
test
sbb
jne
inc
jle
jle
jo
jge
stos
mov
adc
clc
mov
xchg
out
dec
pop
cmp
nop
sahf
adc
jle
out
xchg
jle
inc
inc
std
leave
push
inc
pop
cmp
sbb
test
mov
movsb
sub
xlat
jb
ljmp
sub
dec
fldenv
add
xchg
ffreep
push
or
jmp
ljmp
rcl
ret
pop
mov
cmc
sub
xor
mov
cmp
clc
push
adc
popf
xchg
sub
insl
scas
mov
jbe
fcmovnbe
mov
mov
inc
xor
mov
xor
mov
movsb
sahf
ja
cmp
pop
push
mov
popf
inc
in
insb
mov
sar
jle
add
pushl
jne
pop
push
jno
out
sahf
jno
and
pop
scas
or
inc
add
andl
stos
repnz
inc
jle
lods
and
xchg
aam
inc
es
sbb
test
push
push
scas
mov
ljmp
mov
jp
imul
add
adc
mov
push
es
jns
aad
add
sub
sub
outsb
rol
or
pop
pop
ja
popf
lods
das
dec
iret
xchg
ja
scas
frstor
out
loope
stc
test
dec
jno
mov
lret
pop
push
sub
sbb
ficoms
add
mov
ds
subb
jbe
adc
lds
pop
adc
iret
sub
fmuls
xchg
rclb
xlat
shlb
inc
sub
divl
std
push
stos
pop
jns
aaa
repz
cmp
inc
xchg
sbb
lds
call
xchg
lret
add
mov
insl
or
push
dec
ljmp
out
lcall
sub
and
cli
loope
mov
pushf
loopne
jg
jae
jp
je
jb
das
pop
int3
mov
sbb
push
sbb
enter
in
test
pushl
lahf
addb
mov
mov
loop
add
cmp
pop
fs
aam
and
cmc
sub
inc
loope
sarb
int3
sub
cmp
test
sub
ja
ret
in
hlt
rcll
inc
jo
pushf
out
jo
adc
inc
inc
sub
das
adc
hlt
jb
mov
lock
sbb
iret
int3
or
mov
pop
dec
jnp
or
xchg
jecxz
and
hlt
cli
enter
insb
lock
push
imul
fcoms
cmc
out
aam
or
xor
pushf
leave
add
test
adc
pop
mov
inc
and
aas
sub
pop
adc
or
fidivrs
lret
adc
nop
dec
shll
stc
xchg
mov
int
lret
or
pushf
jl
adc
xchg
aam
sahf
inc
pop
dec
stos
push
pop
xor
pop
notb
cli
out
pop
icebp
jmp
outsl
in
imul
hlt
mov
insl
shlb
mov
or
ja
or
mov
push
ret
inc
or
inc
inc
lods
add
adc
jae
pushl
stos
xchg
scas
xchg
mov
jno
pop
inc
ds
sub
xchg
das
sub
outsb
fistl
fbstp
lcall
outsb
jge
jbe
add
cmpb
adc
std
pop
sbb
aaa
outsl
xchg
je
push
je
adc
in
les
mov
mov
sbb
cmp
sub
loopne
icebp
fiadds
xor
aam
aam
pop
mov
inc
call
lcall
and
sbb
adc
hlt
jl
dec
mov
out
leave
add
adc
cli
hlt
aam
in
mov
ja
loop
ret
dec
ds
testb
mov
adc
fcomip
adc
lcall
inc
sub
xlat
cli
aad
inc
xchg
rolb
daa
cltd
push
sbb
dec
cmpsl
ja
out
lret
imul
and
cmp
add
lods
iret
pop
and
cmpsl
mov
lret
add
pushfw
mov
icebp
cs
xchg
lock
push
sub
in
jb
mov
mov
xchg
pop
daa
les
test
push
adc
in
adc
mov
movq
lods
cmp
jg
dec
xor
sbb
push
dec
fisubl
imul
mov
sbb
jbe
aaa
xchg
repnz
jae
mov
fcmovb
lret
jmp
push
xchg
push
sub
add
push
lret
popf
ja
outsb
imul
or
cmp
fidivrs
rcr
sbb
jmp
push
mov
dec
inc
and
sbb
movsb
lds
imulb
jno
dec
xchg
sub
sbb
arpl
jl
fs
add
into
cld
cmp
stos
in
ret
xchg
les
mov
in
pushw
pop
dec
mov
fs
or
mov
cltd
shrl
sbb
rol
enter
in
adcl
aad
fmuls
dec
fisttpl
push
push
sbb
ds
cs
adc
mov
xchg
fistps
and
lock
dec
cmc
cmp
rcrb
adc
stos
sub
inc
mov
outsb
add
mov
adc
scas
popa
and
popf
jg
imul
jecxz
add
inc
add
push
jle
xchg
int
fsubr
rcll
push
call
mov
adc
jg
jle
or
jnp
sub
sbbb
mov
ja
orl
inc
out
pop
pop
mov
mov
call
pop
xchg
cmpsb
icebp
mov
arpl
stos
push
dec
mov
add
pop
rcr
movsb
pushf
mov
inc
das
mov
ret
pushf
add
into
sbb
or
or
pop
in
shrl
push
add
test
dec
aas
add
jle
loop
sbb
test
and
je
and
cwtl
outsl
xor
lahf
fwait
lds
or
xor
add
mov
jg
or
daa
das
gs
icebp
sub
ret
xchg
push
iret
adc
and
into
ret
xchg
popf
fmulp
push
popl
ds
push
sbb
loop
sub
adc
decl
scas
mov
jge
insl
mov
jg
stos
je
in
jae
mov
outsl
dec
inc
call
imul
es
add
fs
fwait
lods
fucomip
mov
or
adc
mov
adc
les
lods
popf
sub
mov
movd
je
sbb
je
mov
pop
daa
push
dec
jns
jg
pusha
and
icebp
mov
push
xchg
addr16
inc
jle
dec
pop
mov
add
mov
lock
inc
sbb
and
dec
ficoml
xchg
jmp
and
add
fs
jnp
dec
jge
jecxz
in
rcl
adc
divl
xchg
stos
ds
mov
stc
std
mov
mov
fst
addr16
mov
sti
popa
push
test
aad
rcrb
xorl
movl
mov
cmc
push
loop
clc
lcall
lcall
sbb
test
xor
shll
inc
shll
inc
sub
bnd
cmc
adc
imul
jbe
stos
push
into
mov
jbe
bound
mov
add
popa
jmp
pop
push
movsb
cmc
xor
jecxz
pop
push
cmpsl
jg
andl
popf
pop
mov
pop
mov
gs
xchg
ljmp
fadd
mov
fdivrl
je
leave
jae
orb
inc
scas
inc
inc
push
sbb
bsr
mulb
hlt
xchg
mov
cmpsl
dec
outsb
jg
push
cmpsl
es
test
push
push
inc
inc
ja
bound
or
rorl
pushf
push
lcall
aam
int3
jmp
insl
push
jmp
aaa
fcomps
mov
add
mov
in
push
lods
shrl
movsb
dec
add
dec
or
cmpsb
btr
mov
inc
lret
jo
ljmp
and
mov
dec
test
filds
cmp
fs
scas
jge
adc
daa
fisubl
sub
mov
inc
imul
jecxz
jo
pop
shll
movsl
mov
push
or
add
lods
int3
xor
jns
add
cs
fs
inc
je
cmovl
pop
call
outsl
jl
dec
movq
sar
in
push
push
xchg
push
jmp
cwtl
push
repz
inc
adc
cld
adc
je
addr16
in
inc
bound
inc
dec
mov
and
clc
scas
push
out
icebp
cmc
mov
xchg
inc
mov
fadds
or
mov
cmpl
lods
pop
jnp
inc
pop
sub
mov
addr16
pop
jmp
pop
test
popa
sbb
js
mov
das
cli
xchg
fadd
mov
jo
test
pushl
loop
cwtl
mov
cmc
fs
pop
cli
leave
or
mov
pop
fwait
push
iret
orb
sbb
cs
inc
lock
fnstcw
iret
cmp
leave
rolb
mov
es
dec
mov
insl
pop
cltd
pop
mov
mov
lcall
mov
lods
popf
inc
fisttpll
arpl
jmp
in
out
std
xchg
std
adc
xchg
enter
xchg
dec
and
bound
mov
xor
lea
pop
pop
popa
xor
dec
and
loope
movsl
nop
xchg
sbb
add
dec
jne
fstps
cli
mov
js
cld
jge
les
pusha
sub
push
or
arpl
in
fstpl
loope
out
mov
call
sub
addr16
fwait
mov
mov
mov
mov
ljmp
aas
add
shlb
push
add
icebp
xchg
clc
dec
mov
mov
ret
pushl
jmp
push
into
popa
int
cmp
dec
pusha
cmp
inc
adc
in
lret
lods
sarb
add
adc
and
lds
cmp
into
mov
ret
test
mov
test
add
inc
xchg
fdivl
cmc
outsb
push
push
hlt
sub
mov
sbb
dec
jl
mov
cmpsb
clc
sarb
mov
inc
sbb
aam
cmp
pusha
jl
mov
xchg
dec
and
dec
or
mov
arpl
test
loop
jae
nop
jne
jnp
mov
xor
pop
popa
push
dec
xchg
push
fsubl
sub
adc
xchg
dec
pop
adc
sub
sub
inc
or
cmpsl
decb
xchg
ljmp
inc
push
leave
adc
outsb
enter
mov
outsb
mov
out
dec
add
sbbl
les
or
pop
mov
je
jg
test
inc
xchg
pushf
test
or
jo
addb
out
rol
addb
ret
mov
jo
decl
push
or
jns
mov
add
movsb
mov
mov
mov
jns
push
loopne
lret
cmp
fcoms
mov
xor
stos
shl
mov
and
mov
jno
fiadds
or
mov
inc
lds
sub
mov
fs
or
jae
mov
sbb
xchg
aam
push
jno
inc
aam
xor
inc
cmp
es
sbb
inc
call
xchg
aas
cs
mov
lock
mov
jmp
xor
aas
out
cmp
popf
lock
popf
nop
inc
or
mov
jo
mov
in
push
or
out
ds
pop
or
jo
fbld
scas
or
sub
rorl
jmp
xor
push
and
mov
inc
mov
ljmp
push
xchg
scas
jno
cwtl
mov
sbb
mov
jno
arpl
push
pusha
scas
sub
scas
in
mov
insb
xorb
pop
pop
jo
push
fwait
getsec
inc
jecxz
mov
mov
dec
dec
xlat
test
push
into
sbb
xchg
dec
inc
nop
pop
loop
fists
sahf
ljmp
imul
out
inc
pop
aas
gs
adc
pop
jl
cltd
loopne
flds
and
ret
mov
adc
fisttps
insb
shlb
ljmp
xor
or
mull
loop
arpl
inc
aad
outsl
jns
dec
mov
call
dec
mov
je
cld
in
mov
mov
aam
enter
repnz
test
dec
adc
test
mov
pop
pushf
cs
in
jl
jmp
pop
dec
pushf
mov
inc
mull
and
or
nop
add
sbb
jns
xchg
enter
gs
nop
sbb
push
clc
lret
pop
jl
mov
xchg
mov
pop
mov
scas
fnstcw
xor
cmp
mov
sahf
pop
xor
js
in
sarb
pop
shl
pushf
lea
sbbl
rcl
pop
cmp
into
jnp
sbb
cmp
cmp
jecxz
adc
js
ret
inc
mov
sbb
icebp
pop
js
xchg
jecxz
sti
sbb
orl
lcall
push
jb
out
enter
sbb
sub
outsb
jecxz
icebp
insb
inc
mov
call
cmpsb
dec
push
fwait
and
push
sbb
dec
jo
push
xchg
fisttpll
jp
add
xchg
mov
cmp
xchg
gs
es
adc
and
xor
loopne
xchg
cmp
cmpsb
stos
push
ljmp
sti
and
inc
mov
mov
xchg
sub
inc
xchg
mov
mov
pop
jbe
test
test
scas
mov
jo
cmp
andl
sahf
or
mov
adc
iret
movsl
pop
mov
lods
iretw
inc
jb
mov
cmc
lea
addr16
clc
mov
fwait
stos
dec
xchg
mov
mov
inc
cltd
dec
testl
aas
loop
pop
nop
add
mov
sub
int3
repnz
add
mov
jb
dec
mov
mov
ds
jg
add
xchg
pushf
mov
sbb
pop
inc
xchg
add
and
xchg
lret
nop
pushw
jo
cmp
sub
mov
test
xchg
stc
adc
ja
in
ret
jae
dec
push
orb
aad
mov
xlat
push
das
sbb
into
test
xchg
and
int
out
sub
xor
cmp
or
cld
ja
inc
pop
jno
mov
inc
in
cltd
inc
cmp
pusha
dec
add
cli
pop
mov
mov
push
xchg
add
or
xlat
sub
sti
in
iret
daa
shl
data16
pusha
aad
outsl
jle
cmp
outsb
push
lods
add
sbb
outsb
stos
cwtl
sarb
and
mov
adcl
sbb
popa
mov
repz
pop
loope
push
cmpsl
jbe
dec
add
shll
rolb
mov
sbb
or
mov
jnp
pop
enter
test
xchg
shll
pop
es
dec
jl
lcall
mov
xor
cwtl
scas
xchg
pop
push
jl
leave
mov
add
jmp
pop
mov
xchg
pop
lcall
pop
jb
lods
inc
mov
xchg
call
push
pop
insl
mov
fwait
pop
arpl
mov
inc
outsb
dec
cmpsb
cmp
jle
imul
xlat
je
sahf
mov
cmp
lock
mov
shl
jmp
ds
mov
add
sub
bound
pop
xchg
ja
xor
jne
mov
xor
dec
inc
xlat
sub
xor
cwtl
mov
push
and
aaa
lea
pop
mov
insb
inc
aas
lock
loope
xchg
into
mov
push
add
mov
mov
mov
cmp
into
xchg
inc
shl
loope
sahf
pusha
and
push
jb
sub
test
adc
jge
xor
sbb
push
pushf
xchg
pop
mov
std
mov
mov
ficoms
int
mov
movsb
push
inc
adc
int3
sahf
push
mov
and
out
jnp
xchg
andl
adc
pop
or
test
rol
sub
inc
mov
mov
push
notb
loopne
nop
adc
push
or
add
dec
and
mov
adc
pop
inc
cli
mov
add
sahf
push
idivb
xor
xchg
cltd
pop
lret
jo
xchg
add
cmpsb
repz
fstps
xor
sbb
je
add
lea
fistpl
pop
jg
push
and
dec
adc
mov
sarl
rcrb
push
xchg
add
or
incl
je
add
adc
je
jmp
adc
js
push
lods
imull
fdivrs
sbb
cmpsb
insl
pop
add
repz
and
push
inc
in
add
test
add
adc
sub
fists
xchg
push
fidivl
sahf
push
sti
ret
cmpsl
mov
push
roll
mov
test
jmp
sbb
dec
test
out
mov
push
lcall
inc
jecxz
shll
lahf
cld
xor
or
cmp
sbb
pop
subl
dec
dec
gs
or
xor
sti
push
int3
sub
xchg
mov
mov
cmpsb
icebp
sti
into
cmpl
les
jmp
dec
enter
mov
outsl
aas
xor
repz
shrb
pop
dec
lds
filds
test
cmp
pop
aaa
es
mov
xchg
rclb
mov
into
mov
aad
std
out
std
mov
adc
insl
mov
into
ret
jne
push
out
mov
cmc
loope
jg
dec
es
pop
iret
sbb
dec
mov
and
mov
rcrb
lret
and
arpl
leave
pop
test
inc
int3
push
shlb
mov
or
jno
loopne
lret
cmp
or
jbe
es
fildll
repnz
xorb
or
push
mov
push
jg
scas
dec
aad
mov
inc
fisubrl
pusha
mov
int3
push
and
or
test
stos
sbb
or
mov
mov
jp
mov
std
dec
cmc
test
ret
scas
test
sub
dec
sub
adc
xor
xor
push
add
adc
fidivrl
cmp
mov
bound
into
hlt
lods
es
dec
pop
ror
notl
mov
cmp
mov
rcll
mov
push
out
dec
adc
cmp
stc
cltd
das
mov
lret
loope
filds
mov
loope
mov
lcall
push
xchg
add
mov
adc
arpl
jge
mov
push
clc
out
ss
icebp
pop
and
cwtl
and
lret
push
in
adc
lret
and
jecxz
mov
mov
inc
add
dec
test
jle
cltd
les
stos
js
fistl
sub
or
cmp
lock
jecxz
xchg
mov
and
rcll
adc
push
in
leave
jmp
xor
add
dec
xor
pop
pop
nop
addl
notb
aaa
sub
popf
dec
xchg
xchg
insl
jnp
inc
cmpl
aam
shr
repz
inc
shrl
jmp
pop
push
pop
out
lret
popa
sti
add
aas
fnop
fidivl
inc
add
clc
shl
imul
xchg
mov
nop
and
rcrl
push
push
push
stos
in
mov
leave
outsl
add
xchg
pushf
sub
mov
aaa
lods
jnp
cld
lcall
push
cld
and
mov
dec
imulb
push
inc
mull
loope
out
fstpl
xchg
pop
mov
dec
pop
mov
popa
out
cmpsb
and
cmc
jl
inc
subb
sbb
jp
mov
push
bound
sbbb
xchg
sbb
sbbl
jmp
jne
add
xchg
pop
jle
push
cld
push
mov
adc
enter
and
aas
jge
mov
xor
jmp
sub
sbbl
xchg
push
mov
mov
pusha
sub
mov
enter
push
adc
mov
mov
adc
pop
xor
arpl
push
cmp
mov
lcall
iret
mov
inc
aaa
cmpsb
imulb
cmp
inc
xchg
lds
adc
push
out
jle
or
push
push
and
mulb
cmc
pop
mul
rorl
stos
jb
push
or
int
aaa
sub
lea
loope
sbbb
sahf
and
sbb
out
xor
xchg
mov
cmp
mov
jae
je
stc
pop
repz
pop
rcrb
cmp
fcomps
loop
mov
enter
xchg
out
ret
out
push
and
mov
out
sub
outsl
mov
into
dec
int3
mov
jbe
mov
inc
xchg
and
iret
jo
inc
ret
aaa
into
stc
imul
pop
adc
daa
jno
push
push
mov
xchg
xchg
cmp
push
call
imul
cmp
roll
ljmp
or
push
or
lcall
fstl
jns
pop
inc
test
fisubs
out
rcrl
loop
mov
jl
adc
pop
mov
xorl
mov
mov
add
loop
lcall
andb
cli
add
pop
aam
dec
push
ficompl
dec
dec
shll
ljmp
xor
inc
fisttps
enter
cmc
xor
loopne
cld
aaa
fcomps
ljmp
sub
aad
mov
mov
iret
jne
mov
pusha
sub
adc
xchg
fwait
shll
ret
dec
das
jle
cltd
pop
das
data16
jbe
push
mov
je
hlt
push
outsb
mov
pop
cmp
dec
push
xor
cmc
ds
xor
xor
loope
dec
sbb
cmc
decb
repz
add
loope
lock
push
adc
xchg
jns
gs
in
adc
push
inc
ss
leave
mov
mov
aam
add
les
in
outsb
push
mov
xchg
add
cmp
mov
sahf
add
jg
xor
xorb
jnp
add
out
pop
dec
push
cli
push
mov
jno
call
jns
add
test
pop
popf
lea
mov
sbb
test
pop
fidivrs
js
stos
repnz
cld
mov
sbb
cld
sub
xchg
or
xorl
push
nop
or
and
sub
ret
out
icebp
mov
das
push
iret
or
int
push
inc
mov
test
or
test
pop
fmuls
jns
sub
pop
xor
inc
clc
aam
mov
jmp
ds
jmp
sti
ljmp
add
or
stc
rcl
ljmp
subl
dec
and
xlat
insb
popf
and
lret
sbb
arpl
adcb
js
push
movsl
sbb
push
xorl
inc
pop
pop
adc
sub
adc
mov
call
xor
in
mov
adc
flds
or
data16
inc
movsb
xor
loopne
lods
xchg
cmp
xchg
dec
push
test
or
inc
and
jecxz
cmp
jb
mov
rolb
cmpb
lods
xchg
mov
movsl
nop
stc
lea
dec
call
ja
xor
pop
lret
pop
ljmp
push
fcompl
mov
push
sbb
fs
and
lods
stos
add
cmpsl
add
pop
cmpsb
lock
xchg
mov
aam
pop
sbb
pop
and
imul
imul
test
fidivrl
or
into
xchg
cmp
mov
inc
adc
sbb
icebp
mov
out
mov
mov
and
data16
mov
orl
dec
sbb
inc
aaa
pop
mov
sbb
ret
adc
lea
xorb
cmpsb
inc
pop
std
pop
mov
jo
arpl
rcrl
or
sbb
mov
sub
rcr
gs
sbb
test
sub
sbb
aaa
push
aam
xchg
insb
faddl
push
in
int3
imul
or
sub
push
mov
dec
xchg
pop
xlat
frstor
mov
and
or
fs
inc
inc
int
setge
movaps
or
mov
aas
call
int
imul
jb
xchg
pop
jae
lcall
fs
xchg
out
bound
shlb
leave
mov
test
pop
pop
jae
and
jnp
xor
sub
out
je
psrlw
dec
scas
sbb
lret
arpl
ror
add
popf
imul
mov
imul
addr16
loope
add
xor
fldl
scas
push
sub
add
cmp
clc
xchg
nop
push
push
fst
lahf
mov
xor
js
sub
aad
lret
jg
push
das
js
dec
out
inc
pushf
push
or
mov
call
mov
mov
repnz
test
ret
fidivrs
dec
jle
push
pop
mov
hlt
bound
inc
push
leave
test
adc
fsubl
xor
xchg
xchg
cmp
xor
sbb
add
shll
repnz
fwait
and
mov
xchg
inc
aam
frstor
mov
in
call
fidivs
int3
sbb
jno
je
mov
pop
pushf
ds
sarl
inc
test
cmp
sbb
outsb
imul
sub
xor
mov
movsl
leave
dec
addb
cmpsl
inc
insl
xchg
push
nop
mov
enter
scas
jno
gs
fildl
lods
xchg
lock
push
sarb
dec
ret
in
mov
pop
cmp
sarb
push
cmp
fidivs
xchg
or
xor
xor
add
addl
push
cltd
add
idiv
mov
dec
cmp
xor
sbb
lret
push
pusha
call
enter
out
inc
pop
push
xchg
cmpsl
add
inc
adc
mov
xor
iret
push
orl
in
adc
xchg
add
adc
lcall
and
jo
xchg
aas
fidivl
xchg
fbstp
xor
aas
es
sub
pop
xchg
and
repz
iret
xchg
cmp
mov
cmpsb
pop
repz
and
popf
xchg
mov
repz
mov
sbb
mov
dec
cli
testl
mov
sahf
popl
pusha
add
or
enter
mov
stos
cmp
stc
fwait
xchg
in
ja
mov
xor
mov
ljmp
or
imul
xchg
dec
xor
aas
cmpl
scas
fistl
pop
mov
testb
dec
push
je
inc
gs
mov
adc
sarb
sbb
xor
pop
xchg
pop
imul
sub
leave
sbb
or
sarb
jg
mov
xchg
das
push
mov
imul
lea
adc
inc
push
pop
mov
mov
shl
adc
xor
aam
repnz
rcl
adc
jno
xor
lea
jae
inc
sbb
adc
ds
insl
add
cmp
popa
imul
jge
out
scas
xor
mov
cmpb
mov
jmp
xchg
or
je
xchg
dec
das
daa
push
mov
stc
mov
mov
or
jno
pop
pop
xorl
inc
ljmp
xor
cltd
stc
enter
sub
call
repnz
rolb
fisttpl
stos
sbb
out
inc
in
xchg
pop
mov
dec
push
mov
or
adc
jo
stc
or
cltd
mov
loop
inc
hlt
sub
test
pusha
push
and
in
sahf
add
aas
dec
cli
jb
das
jge
xor
xor
stos
pop
push
test
adc
mov
cmpl
adc
pmaxsw
pop
cmp
cltd
dec
hlt
adc
enter
mov
xor
cmc
cmp
mov
pop
xchg
add
mov
icebp
add
add
and
int3
sub
jle
int3
in
stc
inc
call
daa
add
sub
xor
mov
int3
sbb
mov
clc
cs
lcall
inc
into
and
mov
rclb
dec
push
sti
or
lret
mov
inc
mov
mov
pmulhuw
fisubrs
sarl
and
ljmp
add
in
mov
add
movsb
sbbl
scas
sbb
lods
xchg
xor
mov
inc
lds
insb
out
sbb
in
imulb
jl
sbb
xchg
sub
xchg
sahf
les
stos
adc
daa
sub
or
cmp
ja
add
push
insl
sub
pop
xlat
movsl
into
push
xor
push
push
in
or
mov
pop
sub
into
or
dec
mov
jb
leave
mov
sub
add
mov
scas
sbb
inc
add
jo
data16
jns
sbb
js
xor
sbb
in
pop
pop
add
mov
mov
xchg
adc
lds
aas
sahf
xchg
inc
js
fildll
pop
leave
pop
jge
repnz
shrl
std
xchg
daa
jno
sub
push
jo
xor
add
sub
mov
test
lret
jne
cmp
es
mov
mov
cmp
mov
mov
icebp
mov
int3
add
lods
cmpsb
lret
pop
jge
imul
adc
outsb
scas
xchg
imul
pop
and
cmp
loopne
cmc
jbe
mov
pop
pop
fsubl
pop
stos
sub
or
pop
pop
jae
xor
ret
xchg
dec
pop
xor
xchg
sbb
outsl
nop
inc
mov
pminub
clc
cmpsl
cmp
aaa
js
pop
insl
mov
mov
stc
cmp
or
mov
pop
xor
push
jp
sahf
ret
or
cmpsl
test
add
test
jnp
push
or
and
push
cs
add
insb
lods
dec
das
icebp
pusha
gs
sarl
ja
and
mov
cmp
fdivs
fwait
add
sub
sbb
pop
inc
enter
xor
repz
jle
inc
jecxz
rcl
stos
aad
add
mov
inc
shrb
cli
pop
imul
cli
dec
mov
roll
xchg
xor
sbb
fwait
xchg
les
mov
ds
and
jp
and
pop
sbb
pop
imul
dec
sti
outsb
push
ds
jno
push
cltd
das
xchg
dec
dec
sbb
mov
lods
sahf
sahf
cs
mov
pop
ja
adc
insl
xchg
cltd
xor
xor
mov
cmp
push
clc
dec
out
std
add
inc
inc
push
hlt
les
shlb
stos
cli
lock
test
movsl
mov
sahf
test
out
adc
sahf
jns
hlt
dec
jno
int
out
stc
xor
push
add
xchg
movsl
jmp
adc
int3
fidivrs
in
jnp
cmpsl
in
dec
push
xchg
or
call
or
mov
testl
ds
inc
addr16
out
movsl
in
mov
dec
sub
xor
push
popa
sbb
je
enter
push
xchg
or
dec
mov
js
lods
fsubr
sbb
and
stc
xorl
xchg
lret
xor
sub
xor
push
test
jbe
out
adc
adc
and
mov
ficoms
sub
fwait
cmp
xor
hlt
lret
jg
sti
add
iret
addb
lock
cmpsl
cmp
iret
xchg
ss
into
lods
mov
mov
push
aas
jne
dec
push
in
sahf
inc
adc
xor
je
jo
cmpsl
add
into
mov
cmp
cmp
mov
sbb
orb
arpl
js
fs
mov
aam
sub
hlt
aad
jg
in
mov
cs
imul
outsl
cmp
test
shr
pop
dec
inc
pusha
cwtl
xorps
lret
xor
lds
sub
inc
mov
stos
cmc
adc
je
sbbl
movsl
lret
mov
loop
sbb
add
sti
imull
loop
lock
nop
jg
push
lods
or
sbb
adc
jno
popa
push
pop
imul
adc
andl
subb
cwtl
cmp
ret
add
nop
enter
testl
icebp
jno
arpl
out
fwait
mov
add
and
pop
div
pop
sti
push
adc
ds
aaa
in
int
push
push
lret
ljmp
outsl
out
clc
rclb
push
inc
add
sbb
das
test
mov
inc
xchg
cmc
in
aas
inc
cmpsl
divb
mov
rcrl
sti
inc
mov
andl
stos
mov
pop
xor
hlt
push
shrl
adc
lds
mov
and
orl
decl
daa
lock
popf
xchg
dec
sbb
in
in
xlat
clc
mov
adc
int
popa
out
hlt
xlat
js
pop
nop
inc
inc
adc
fs
jge
pop
mov
shlb
pop
out
add
jl
jb
icebp
xchg
insb
outsb
sub
sub
push
stos
stos
lret
int3
test
pop
data16
and
fwait
iret
lods
popa
ljmp
or
mov
test
pushf
cmp
cmp
xor
jecxz
mov
sub
insb
sub
or
pop
insb
xor
jp
jmp
push
mov
sub
fmull
scas
push
lds
repnz
aaa
mov
je
pop
push
pop
mov
inc
cmp
shlb
jl
cld
mov
xor
repz
pusha
jmp
les
adc
mov
mov
clc
es
sub
push
enter
dec
hlt
adc
jle
movsl
js
sbb
jle
into
lock
add
ja
or
add
xor
mov
int
je
inc
inc
out
rcr
sub
icebp
into
cmp
iret
int
out
add
pop
push
int
or
ljmp
scas
fisttps
mov
lods
adc
enter
xor
sbb
into
popf
rclb
fidivs
inc
cmpsl
movsl
sbb
jge
imul
in
mov
sub
dec
jb
js
jecxz
into
jno
xchg
or
mov
inc
pop
je
jge
lock
mov
lock
cmp
fisttps
jle
push
test
loop
lahf
pop
imul
jp
sbb
pop
in
jne
pop
pop
adc
aam
pop
rclw
inc
and
add
push
rcr
mov
or
call
insl
mov
cmpsl
das
mov
sbb
out
sub
stos
lret
fwait
jbe
data16
mov
inc
pop
sti
xchg
or
call
mov
es
lcall
outsl
mov
call
shll
xor
push
xchg
sub
inc
cwtl
mov
jae
out
pushl
push
lcall
pop
lcall
cwtl
add
add
sub
xor
push
or
jne
pop
into
xchg
iret
mov
inc
push
imul
xchg
movsl
fdivrl
and
pop
outsb
mov
inc
or
lock
scas
enter
mov
das
nop
dec
xchg
xor
mov
or
dec
aam
lret
or
sti
roll
cli
iret
mov
stos
jle
ficoml
cltd
sbb
lret
mov
mov
jb
pop
aaa
dec
test
xor
cmp
sbb
cmpsb
fidivl
negb
jcxz
jg
push
add
lcall
mov
cmc
clc
add
ret
push
lods
dec
push
sub
cmp
dec
mov
or
sbb
pop
xchg
jne
mov
push
pop
mov
push
insl
inc
jbe
sbb
int3
push
out
imul
push
mov
out
neg
dec
scas
lcall
popf
pop
push
iret
aam
jb
rcr
inc
jnp
mov
mov
pop
mov
je
mov
out
push
jno
rcll
lcall
jmp
out
ss
ljmp
int3
jp
cmc
pop
adc
and
inc
sbb
mov
sub
sahf
pop
xchg
repnz
push
mov
in
add
ja
sbb
sub
jne
nop
pop
movsl
jmp
and
int
lods
xor
lock
mov
lods
inc
loope
mov
jo
pop
inc
int3
dec
lods
cmp
pop
sarl
push
mov
gs
mov
push
push
cld
jle
int3
bound
sub
jns
test
aam
mov
mov
add
frstor
mov
sbb
jecxz
repz
fsubl
mov
lcall
cmp
push
push
hlt
std
jo
imul
dec
lcall
test
xor
and
push
dec
pop
pushf
inc
out
lcall
movsl
jp
push
push
xor
sbb
rcrl
push
ss
js
cmp
inc
orb
or
imul
xor
pop
xchg
dec
dec
in
cmp
fcompl
repz
sbb
cmpsl
jg
mov
cwtl
or
xor
adc
stos
pushf
test
push
sub
data16
negb
inc
xchg
testb
daa
repz
adc
in
jb
loop
sub
push
lock
sarl
in
inc
mov
pop
in
pop
push
div
insl
mov
cmp
sbb
cltd
and
test
leave
gs
hlt
loop
bound
test
sub
imul
mov
mov
js
sub
lea
pop
cltd
mov
inc
push
adc
insl
int3
adc
sahf
xor
addr16
in
pop
sbb
or
aam
mov
mov
iret
add
adc
jp
aas
aaa
rorl
outsb
es
add
or
and
push
mov
mov
mov
scas
mov
and
add
insb
imul
rcrl
push
test
jne
pop
test
jmpw
push
mov
les
mov
mov
mov
mov
cmpsl
imul
mov
inc
xchg
fisubrs
xchg
jl
xchg
lds
lret
ds
jg
cmp
icebp
xorl
scas
sbb
cli
pop
sbb
or
out
sub
in
jae
dec
sub
sub
cs
cmp
and
jmp
push
xchg
sub
mov
or
repz
fstpt
rolb
das
movsl
adc
push
subb
add
or
push
cmp
test
mov
cmp
les
cmp
xchg
lock
test
test
enter
clc
jecxz
pop
test
fcompl
shlb
loope
out
lcall
into
or
aaa
or
fidivl
cmc
in
mov
lahf
imul
lret
pop
in
mov
jmp
shrb
stc
cmp
mov
int3
xchg
mov
or
push
and
inc
and
out
adc
pop
cltd
mov
xchg
sub
popa
jecxz
xchg
ljmp
into
jmp
push
into
cmp
ret
xchg
inc
popf
adc
xor
push
jmp
sbbl
cmp
sbb
shl
rcl
add
sub
lret
push
out
inc
sahf
or
movl
pop
les
lods
sub
mov
push
hlt
sbb
out
pop
insl
aam
sbb
in
xor
mov
xor
jne
std
cmp
adc
movsl
je
pop
cmp
je
mov
sub
repz
dec
and
xor
es
imul
inc
jg
xor
push
or
xor
cmc
mov
sbb
sbb
sbb
mov
ss
mov
and
negl
add
adc
aad
dec
out
pop
xchg
push
test
cmp
sub
jg
or
popf
sahf
sub
das
fidivrl
sbb
test
sub
sarb
push
or
sarl
cmpsb
add
or
call
mov
and
imul
inc
iret
sub
daa
into
imul
push
sub
and
loope
sbb
or
fwait
jb
dec
xchg
mov
mov
dec
dec
mov
push
mov
dec
pop
jmp
and
stc
out
push
div
ror
clc
push
mov
mov
popf
jne
add
movsl
push
and
iret
push
stos
and
popf
jmp
nop
fs
jle
fcompl
cmp
mov
test
enter
adc
mov
dec
popf
push
jl
push
pop
test
lock
das
das
xchg
orl
ja,pn
jge
xor
push
test
call
jae
push
sarb
fstps
adc
cli
and
shrb
decl
xchg
add
and
bound
aam
push
pop
xchg
pop
adc
push
mov
xor
insb
xchg
xchg
into
sub
call
gs
aas
mov
dec
cmc
out
lahf
dec
imul
sbb
ds
movsl
in
pop
fadds
inc
aaa
pop
je
dec
scas
sbb
adc
or
hlt
jns
sbb
mov
pop
das
push
mov
dec
mov
push
lahf
addl
sahf
adc
rcrb
stos
adc
xor
gs
rcr
mov
jge
pop
add
arpl
push
repz
cmp
in
fidivrl
xor
push
mov
out
inc
adc
rcrl
jb
addr16
das
aaa
fwait
dec
iret
pop
andl
fistpll
jle
shlb
jmp
sub
sub
inc
jecxz
push
sub
xchg
enter
addb
cmp
arpl
sub
pop
pop
push
pushf
mov
mov
jp
xchg
push
cmp
dec
cmp
mov
scas
xor
xor
pop
inc
test
or
cmp
or
andl
mov
cmpsl
dec
pop
inc
mov
cmp
in
mov
cs
mov
jbe
divb
pop
dec
orl
daa
push
out
cmpsb
pop
xchg
add
insl
sahf
mov
mov
ret
xchg
fbstp
and
scas
mov
jle
repnz
push
out
out
insb
incl
dec
and
xchg
iret
ljmp
cmc
add
cmpsb
cli
sbbl
pusha
andb
adc
imul
jecxz
outsl
out
cmc
jge
mov
inc
mov
rcll
jae
mov
mov
push
sbb
fbld
dec
pushf
xor
inc
mov
fsubrl
addr16
jae
xchg
pop
mov
push
sarl
mov
sub
daa
lcall
aaa
add
mov
dec
mov
and
das
lcall
fwait
adc
pop
test
jbe
gs
loop
fisubrl
negb
xchg
mov
pop
aas
cmp
hlt
xchg
aad
in
mov
aaa
lret
lock
sahf
cmp
mov
roll
ffree
lret
jae
in
pop
jp,pt
cmp
push
sub
mov
leave
popf
dec
jae
add
in
aam
ret
rclb
pop
pop
mov
ret
pop
cmpsl
mov
ljmp
imul
xor
mov
dec
std
xchg
push
mov
popa
adc
movsl
sub
stos
xor
aad
ja
mov
cmpsb
cli
dec
cmpsl
movsb
cmp
mov
dec
xchg
cmpsl
cmpsl
inc
and
adc
cmp
lds
pusha
mov
push
arpl
push
in
xor
js
jge
ret
leave
mov
stc
jge
cmpsb
sub
in
xlat
jle
pop
scas
push
push
shrb
insb
cli
and
sub
push
popa
jge
adc
int3
push
out
loope
dec
pusha
add
ja
stos
mov
call
mov
ss
sarl
mov
arpl
inc
jae
push
ficoml
shll
js
cmp
outsl
out
ss
leave
pop
sub
push
subb
jne
mov
pop
xchg
xchg
enter
lcall
xchg
lock
pop
jno
cmp
pop
pop
mov
std
xlat
mov
mov
sbb
loope
mov
lods
xorb
pushf
cmc
aad
jno
sub
dec
cmp
fmulp
jnp
test
pop
daa
out
pop
cltd
insl
aaa
aad
fmul
inc
xchg
sbb
dec
mov
inc
xchg
call
sar
mov
jp
and
inc
mov
dec
mov
lret
push
jmp
and
jne
push
inc
mov
xchg
pop
xchg
push
mov
inc
and
dec
or
das
les
hlt
adc
dec
mov
jbe
push
cmp
and
ja
adc
mov
movsl
sti
or
jbe
fcomps
mov
decb
negb
mov
int3
mov
pop
fidivrl
sub
cltd
and
out
jp
xchg
or
dec
cmc
mov
stc
stos
or
js
stc
cld
stc
ret
lods
inc
pop
cmp
fidivrs
push
mov
sub
inc
or
xor
insb
push
cmp
add
adc
mov
lds
dec
cmp
mov
cmp
pusha
sub
les
mov
jge
insl
xlat
loop
xchg
vmovd
cmpsl
mov
movsb
cmp
test
sub
pop
sbb
adc
mov
push
sub
mov
je
bnd
mov
ljmp
cmp
dec
daa
les
test
mov
fcmove
sti
sub
aam
cltd
jnp
mov
neg
dec
fcomps
ljmp
cltd
add
jge
xchg
movb
cmp
bound
in
scas
icebp
mov
leave
dec
jo
sbb
or
ss
ja
add
pop
mov
mov
dec
or
mov
scas
xchg
pop
add
out
cmp
cmp
fwait
movsl
push
lods
cmp
out
cmpsb
test
xchg
popf
adc
push
push
lcall
push
insl
adc
data16
mov
movsl
mov
icebp
jle
cld
ret
xlat
popl
ffree
call
imulb
dec
inc
pushf
test
cmp
pop
or
int3
imul
lods
out
pushf
addl
adc
inc
lea
rcr
mov
loop
cmp
xor
xor
inc
mov
stc
sahf
and
dec
out
push
and
hlt
jnp
add
mov
mov
inc
jg
cmpsl
or
mov
test
aas
sub
sbbl
cmp
xor
outsl
sahf
jl
or
add
loope
shrl
pop
out
pushf
jo
lret
pushf
rcl
pushf
arpl
in
sti
push
fildll
loopne
stos
xor
sbb
push
imul
movsb
inc
loope
inc
push
and
dec
jns
add
hlt
cmp
xlat
mov
xor
cmp
xchg
aam
adc
je
xor
push
push
and
jbe
fsubrp
mov
popf
stos
push
ss
adc
add
imull
jl
xchg
ret
add
push
insl
xchg
test
push
adc
std
imul
mov
mov
std
loop
add
shlb
popf
jne
jb
and
xor
lock
cli
je
loopne
cmc
shlb
inc
js
pushf
inc
mov
out
and
dec
into
hlt
pusha
fdivrs
loopne
cmp
push
rclb
daa
adc
pusha
pop
hlt
movl
cmpsl
mov
insb
jg
mov
sbb
sti
inc
pop
sbb
mov
adc
pushf
pop
aad
push
xor
aam
push
out
adc
test
movsb
lods
jns
out
xor
fwait
out
stos
enter
enter
xor
push
fisubl
cld
mov
in
xor
leave
cmp
cli
mov
add
hlt
cs
mov
xchg
lods
paddusb
es
xlat
cli
sub
inc
or
sbb
stc
jnp
cmp
mov
das
clc
test
push
jge
lahf
clc
aaa
dec
fnsave
jne
xor
movsl
inc
pop
pusha
ja
test
mov
lods
cmp
push
sub
fwait
sbbl
mov
out
jo
dec
mov
jne
rcr
mov
pushf
orb
out
shrb
adc
shrb
mov
and
loope
sub
mov
fs
jecxz
repz
lret
push
add
daa
popl
xor
mov
addr16
mov
fisubs
nop
scas
or
aam
xor
mov
xchg
cli
pop
inc
dec
xchg
mov
and
loopw
xor
outsb
ret
mov
and
push
pop
dec
xlat
test
sbb
cmp
xor
fnclex
mov
jne
cmpsb
push
mov
leave
mov
out
outsl
mov
enter
push
sub
int
mov
dec
in
sbb
add
jne
pushf
daa
and
mov
out
int3
insb
pop
int
and
xchg
fisubrs
mov
sahf
jg
inc
pusha
xchg
dec
loop
fisttpl
mov
loop
fstpt
fisttps
adc
in
stc
xor
outsb
cmp
shlb
sbb
mov
sub
enter
decb
jl
je
mov
pop
leave
cmp
inc
pusha
testl
leave
mov
pop
mov
pop
sub
mov
push
xchg
xor
ds
leave
stos
loope
iret
lds
pop
imul
shrw
xchg
ja
fdivrs
xor
push
fcmovnbe
aam
mov
js
pop
outsb
sbb
movsl
pop
sub
sbb
jae
adc
push
cmpsb
pop
lcall
leave
fwait
imul
inc
lds
pop
lods
es
repz
adc
jle
imul
fnstenv
sahf
loope
push
aad
mov
test
xor
and
push
lea
xchg
add
repnz
push
xor
adc
ss
lock
lock
lret
clc
inc
jmp
mulb
iret
in
adc
sub
aad
andb
cli
jmp
std
shrl
dec
cli
mov
mov
pop
ret
jmp
dec
inc
sbb
insl
ds
int
mov
or
pushf
add
je
inc
xchg
push
arpl
lret
je
jb
aaa
insb
cmpl
movsb
scas
pop
lret
addr16
outsl
aad
mov
sbbl
lea
movsl
mov
sahf
jmp
xchg
stos
incl
inc
push
sbb
add
and
mov
push
daa
sbb
insl
daa
shr
jno
leave
mov
mov
hlt
mov
adc
cld
out
jnp
pop
push
nop
cmpxchg
jg
adc
out
push
stc
in
pop
pop
xchg
jmp
mov
stc
mov
pop
test
cmp
test
repz
xchg
xlat
das
int3
and
adc
sbb
int
cld
lds
out
dec
pop
pop
mov
lods
add
xchg
popf
mov
jb
and
pop
lds
cmpsl
jp
imul
in
movsb
hlt
push
xor
ljmp
xor
dec
cmpsl
std
pop
js
test
jp,pn
popf
pushf
adc
and
pop
push
mov
adc
jl
out
dec
adc
mov
sbb
and
je
mov
test
mov
cmc
aam
cld
imul
lahf
fistpll
or
and
mov
xor
icebp
add
inc
xor
inc
call
pushf
or
in
jo
pop
test
cmc
sub
sub
loope
cli
mov
jge
sbb
and
mov
mov
faddl
test
dec
mov
jecxz
test
xchg
push
mov
push
dec
sub
push
les
imul
jle
dec
push
mov
sub
and
stos
mov
sbb
pop
mov
sahf
add
jge
push
mov
sbb
sahf
shl
jbe
lods
pop
pop
xchg
add
inc
mov
inc
jb
ret
stos
hlt
and
lea
clc
jb
mov
push
ficomps
xlat
push
inc
sbb
lret
jle
sahf
push
call
lcall
inc
leave
mov
scas
hlt
sbbb
enter
pop
adc
mov
push
inc
xor
jg
in
or
outsl
ss
sti
icebp
pusha
push
pop
sbb
ret
lret
add
and
fwait
call
sbb
pushf
lahf
add
mov
mov
or
test
cwtl
add
dec
dec
ja
mov
xchg
push
pushf
loopne
in
push
int
in
adc
sbb
test
jge
insl
cmp
mov
stos
pop
scas
icebp
mov
bound
xchg
ljmp
pop
stos
cwtl
jp
dec
xor
push
push
enter
sarb
into
popf
or
hlt
or
fsubr
int3
sub
fs
inc
imul
push
inc
jl
jg
mov
xchg
sub
outsb
inc
ret
jns
adc
pusha
in
loop
test
clc
es
sbb
xor
xchg
mov
sbb
xchg
sti
aaa
aaa
cmc
daa
mov
sbb
aaa
xchg
iret
into
divb
cmp
out
in
and
xchg
repnz
jg
out
mov
jecxz
mov
jmp
xchg
fwait
jnp
dec
addb
ja
femms
push
cmp
pop
cli
aam
imul
bound
and
jmp
loope
jecxz
test
add
dec
xchg
leave
ss
xchg
ret
ret
cmp
add
sbb
and
mov
jle
mov
fistps
insl
lea
cmp
mov
xor
cld
sahf
adc
xchg
es
nop
daa
cmp
mov
push
inc
mov
outsb
jb
fs
sarb
mov
ret
out
adc
mov
and
outsl
in
popa
test
adc
stc
ds
add
sbb
mov
mov
cmp
in
les
out
mov
test
hlt
mov
js
orb
popf
or
mov
mov
pop
stos
cmp
push
and
mov
cmp
inc
xorl
int3
out
clc
imul
in
les
pop
dec
popa
bound
mov
push
imul
lock
xchg
sub
push
inc
adc
int3
jns
sbb
sbb
xor
and
sub
cmp
fstps
aaa
jl
fisubl
adc
push
sub
sbb
addr16
mov
mov
shlb
movsl
sub
in
cmc
dec
lods
sub
cmp
mov
xorl
inc
mov
add
test
inc
or
std
xor
pop
mov
daa
sub
jmp
adc
fldenv
popa
inc
cmp
aaa
push
dec
cli
test
sti
and
pusha
test
xor
xor
shll
adc
sub
sbb
test
imull
mov
pusha
mov
and
add
sbb
mov
pop
iret
mov
shr
aam
je
push
sub
sbb
mov
mov
nop
enter
repnz
stos
jnp
dec
ret
mov
mov
xchg
mov
add
jbe,pn
pop
and
cwtl
jmp
jbe
ret
jle
sub
movsb
push
mov
imul
scas
in
repz
loope
mov
xchg
pop
or
sub
pop
insb
in
mov
fs
pop
cvtpi2ps
dec
xchg
iret
pop
ret
int3
inc
sub
sub
pop
js
outsl
sbb
jne
mov
stc
insl
lods
jb
mov
mov
and
jge
push
loopne
out
cmp
fsubrp
push
add
repnz
or
mov
je
mov
dec
or
xchg
fdivs
sub
push
insl
testl
fsubs
gs
lret
sub
daa
jmp
add
pop
sbb
shrb
xchg
stc
xor
inc
mov
xor
jg
in
sbbb
ja
repz
xchg
inc
movsb
std
into
leave
mov
insb
psubw
ds
out
jns
xor
and
jns
cmp
hlt
cld
mov
jmp
loope
ror
xor
rorb
orl
inc
jae
adc
add
adc
add
xor
mov
out
orb
ds
sub
imul
xchg
shlb
clc
sub
push
push
out
loope
jg
mov
ss
xchg
dec
fldl
lods
out
lea
jno
dec
repnz
mov
mov
int3
imul
push
sub
inc
adc
aam
and
jle
icebp
ds
inc
addr16
sub
xchg
add
insl
jle
fildll
sti
sub
or
insb
es
aam
adc
xchg
mov
sti
ss
es
cmp
or
int3
pcmpeqb
test
pop
icebp
mov
iret
std
cwtl
les
or
mov
add
mov
add
mov
pop
mov
es
faddp
movsb
orl
loop
inc
jl
push
pop
lods
repz
shrl
test
mov
in
mov
adc
cmp
int
jg
inc
mov
dec
movsb
mov
jge
outsl
mov
pop
sahf
ljmp
lcall
inc
mov
out
mov
jbe
stos
jns
and
jl
popa
das
mov
xchg
adc
rorb
pop
cli
lds
leave
add
mov
das
lahf
add
dec
pop
out
mov
mov
xor
inc
sub
in
popf
mov
iret
inc
adc
xor
xchg
dec
ds
pop
xchg
xchg
dec
add
out
jg
adcb
pop
std
dec
sbb
sub
pop
lods
shrb
out
in
pop
jae
fwait
jnp
fdivr
aaa
mov
mov
adc
imul
insb
jmp
adc
add
or
bound
lea
fucomip
push
jecxz
pop
sti
neg
or
cli
push
roll
enter
pop
ror
es
adc
cld
pusha
shlb
adc
cmpsb
and
mov
outsl
lcall
inc
ds
test
jbe
push
push
and
loopne
push
push
push
iret
or
jb
andl
adc
jns
jge
fs
push
mov
out
pop
jge
or
pop
mov
mov
imul
adc
out
lds
pop
push
inc
mov
clc
stos
pop
movsl
imul
fucomp
mov
and
mov
imul
loop
jmp
pop
and
jns
ljmp
test
jge
pop
pop
rcll
test
fld
fldenv
dec
icebp
xor
inc
test
dec
std
mov
int3
jl
push
cwtl
cmpsl
mov
adc
movsl
dec
adc
dec
mov
pushf
add
adc
movsb
icebp
push
jb
into
sbb
test
dec
gs
cmp
scas
or
mov
popf
xchg
test
jnp
push
sahf
sbb
pusha
inc
mulb
adc
call
dec
mov
in
cltd
sbb
movsb
cmp
xchg
add
aam
dec
idivb
nop
fldl
xchg
adcl
mov
out
mov
cltd
jmp
add
out
les
dec
out
sbb
mov
sbb
lea
push
sarl
out
pop
aas
stc
inc
xor
fwait
orl
pop
lods
cmc
into
out
pop
push
mov
xor
mov
push
scas
cwtl
inc
cld
call
pop
inc
test
cli
mov
mov
push
mov
xor
loope
jne
push
in
pusha
loope
in
in
fisubl
jl
xchg
lods
or
cmp
mov
test
adc
jb
dec
push
xchg
sub
inc
xlat
sbb
sbb
inc
jbe
sbb
int3
push
outsb
ret
sbb
fists
rcrb
sbb
pop
push
aas
add
fcomps
shll
in
push
sub
lods
add
jg
xor
out
cld
ds
in
adc
iret
mov
pop
add
xchg
cld
lods
ss
xchg
sti
pusha
shrl
hlt
mov
aas
cmpsb
jmp
arpl
dec
mov
push
xchg
stos
loope
and
fcompl
fsubl
inc
pop
and
xchg
repnz
jmp
flds
insl
xor
jo
cmpsb
mov
dec
and
lods
jp
add
mov
out
mov
daa
loope
ret
mov
jg
sbb
bound
sub
mov
push
pop
fisttps
xor
mov
mov
sbb
mov
and
push
fcmovne
dec
xchg
or
push
add
sbb
pop
outsl
cmp
pop
mull
mov
pusha
and
aas
aam
insb
addr16
push
testb
aaa
mov
xor
or
jp
sbb
mov
clc
call
xor
stos
fiadds
int
mov
add
sbb
adc
arpl
rorl
adc
or
rcrb
addr16
in
cmpsl
push
pop
push
cli
rorb
imul
inc
lahf
addr16
mov
mov
lcall
ret
jle
push
sbb
mov
das
dec
sbb
repz
in
es
mov
aas
jae
repnz
sahf
addr16
mov
sub
lcall
fisubs
rcll
fimull
or
stc
dec
fxch
fcom
jecxz
dec
js
ss
push
pop
mov
cld
lahf
pop
push
mov
loope
loop
or
push
nop
in
or
xor
test
dec
cltd
jg
aaa
inc
push
les
iret
fdivrl
ljmp
push
stos
and
aaa
mov
add
adcl
adc
inc
and
aad
cmc
push
xchg
ret
xor
jg
sbb
mov
push
mov
xor
cmp
ret
mov
arpl
add
clc
sub
add
xchg
nop
nop
into
or
arpl
insl
mov
dec
jne
sbb
into
jbe
push
push
sbb
or
movsb
bnd
fs
fucom
pop
cs
mov
fsub
jl
push
ret
jbe
outsl
cmp
push
sarb
sbb
push
adc
lods
gs
jne
fwait
sub
cmp
mov
mov
repz
sbb
repnz
xchg
test
jle
int
sbb
ss
les
mov
outsb
das
insl
and
mulb
outsb
jg
sub
repnz
or
and
push
test
pushf
and
push
outsb
sub
sub
outsl
or
push
mov
imul
lret
xor
push
lods
dec
insb
xor
lahf
mov
push
mov
call
inc
mov
mov
pop
rcll
and
inc
call
or
mov
movsb
outsl
out
mov
insb
pop
insl
outsb
push
popa
movsl
enter
addb
xchg
out
inc
pop
jge
shlb
pop
and
mov
cmc
mov
fists
pop
cs
dec
dec
lods
jle
mov
clc
mov
rolb
ret
pusha
into
pop
add
arpl
inc
adc
xor
addr16
push
inc
pusha
xlat
mov
jle
xor
cli
pop
adc
sub
add
push
mov
push
xchg
mov
roll
push
push
mov
sbbb
subl
ds
pop
out
and
xchg
mov
dec
imul
ret
dec
cmp
aas
mov
jno
jle
cmp
mov
aaa
sbb
fisttps
test
sbb
insb
jns
sub
inc
sbb
aas
sbb
fnstcw
dec
push
dec
mov
push
mov
enter
outsl
ss
xchg
jge
xor
shll
shlb
daa
mov
cmpsb
adc
add
sbb
pop
mov
outsb
xchg
jmp
je
test
pop
mov
dec
imulb
ss
clc
adc
into
fxch
jae
ljmp
cmpsb
inc
pop
daa
lea
adc
dec
call
adc
inc
xor
inc
cltd
xor
pop
mov
adcb
push
xor
jnp
pop
in
pop
cmp
out
ret
mov
add
xorb
xor
roll
mov
xor
jg
jecxz
jl
divb
pusha
pop
scas
mov
inc
lods
dec
pusha
out
test
fiadds
cmpsb
mov
outsl
and
loopne
imul
enter
aam
lret
mov
fdivrs
xlat
xchg
imul
mov
adc
repz
and
repnz
sbb
lea
out
push
cmp
lock
je
popf
data16
lret
push
cmpsl
sub
aad
pop
adc
fnstcw
mov
adc
cmpl
pop
sahf
or
mov
arpl
cmp
fsin
inc
xchg
inc
xchg
and
jp
shl
add
inc
shrl
cmpsl
xor
or
aas
xchg
pop
jg
xor
fadd
daa
mov
setle
push
xchg
in
aas
cmp
ljmp
loop
fxch
rcr
rcrl
xchg
aam
bound
pop
test
mov
mov
pop
mov
mov
mov
lret
loop
shll
cmpsb
dec
or
jmp
jns
sub
mov
ja
inc
dec
mov
sbb
roll
ret
ja
movsl
movsl
lock
fisttpll
or
call
sub
punpckldq
shlb
push
movsb
xchg
fcoms
xchg
test
xor
mov
mov
cmpsl
sahf
add
push
lcall
dec
or
sub
jg
push
fisttps
mov
jmp
sub
cmp
add
mov
or
movsl
imul
sti
inc
jbe
lcall
or
ja
mov
dec
loop
pop
mov
orl
and
aaa
ret
testb
or
push
in
lahf
pop
shrb
xchg
sub
mov
or
cmc
mov
in
sub
add
cwtl
adc
ljmp
int3
stc
xchg
sti
aas
dec
jo
bound
xchg
hlt
loope
push
add
adc
lcall
iret
shrl
jne
sti
xlat
or
popa
pop
out
or
xchg
jb
push
shll
lods
push
mov
dec
fists
sbb
mov
cmpsb
add
or
pop
in
jg
or
jnp
insb
add
add
ret
sbb
mov
xor
sub
xchg
mov
movsl
insb
addr16
add
loop
lahf
orb
inc
fs
fstpl
idivl
repz
fldcw
aaa
shll
fmulp
dec
inc
xchg
cmp
push
cmp
jge
cld
or
pop
addr16
push
sub
stc
adc
push
dec
or
push
dec
inc
inc
mov
jecxz
or
and
lds
mov
cld
push
clc
ja
and
xor
js
outsb
stos
hlt
mov
jne
jle
add
andl
pop
incl
hlt
xor
shrl
pop
pop
mov
ljmp
loope
imul
sbb
mov
sbb
dec
sbb
fisubrs
test
jp
mov
jmp
iret
cmp
cltd
sub
push
xor
cli
dec
fsubs
call
cmpsb
dec
and
mov
stc
pop
rcrl
push
jo
dec
dec
aad
sub
jbe
sbb
pop
fidivrl
mov
call
mov
push
fucomi
andb
dec
push
pop
arpl
aas
out
jmp
fldlg2
jg
imul
xor
mov
arpl
push
aam
push
lahf
sbb
push
punpckhdq
lods
pop
imul
or
xlat
loopne
daa
and
call
pop
lea
sub
out
push
lods
sbb
cmp
inc
shll
xchg
repnz
push
add
or
stos
inc
xor
es
jle
mov
lods
mov
lcall
inc
ljmp
pop
fcmovb
aas
je
stos
fwait
or
testw
cwtl
jb
dec
mov
in
mov
sti
cmp
je
xchg
out
ror
int
notb
dec
je
daa
lret
clc
cmpsl
inc
fstps
dec
dec
mov
leave
lret
cltd
push
ljmp
shr
repnz
adc
xchg
push
sub
mov
sbb
push
stos
pushf
repnz
mov
sbbb
lahf
lods
mov
decl
cmpsl
xor
les
fadds
popf
imul
rolb
in
test
mov
addr16
imul
mov
mov
imul
mov
xor
push
sub
inc
pop
pop
jg
pop
lds
mov
push
shlb
int3
cmp
pop
mov
data16
dec
fimull
popf
sbb
jno
jo
sbb
mov
xor
int
xor
dec
cmpl
or
dec
cmp
push
lods
mov
cli
inc
arpl
lahf
cmp
xchg
cmp
fnstcw
stos
mov
outsl
aad
ljmp
mov
dec
xor
sbb
dec
add
dec
push
sub
inc
hlt
shrd
pusha
xchg
pop
popa
sub
add
fwait
mov
inc
leave
pop
cmp
push
mov
insb
bound
sbb
filds
pushf
xchg
xor
rcll
subb
mov
sbb
lret
xor
cs
test
lods
insb
and
pop
imul
mov
jge
mov
stos
sbb
pop
jns
mov
jge
xchg
or
dec
test
add
adc
in
add
jge
movsb
and
clc
and
xlat
mov
test
pop
arpl
pop
test
shll
test
mov
dec
mov
sbb
sbb
das
lock
push
lock
rclb
sub
cltd
cmp
or
pop
sbb
push
out
jae
sbbb
jno
xlat
mov
testl
jp
fildll
or
cmpsb
pop
sbb
and
adc
les
inc
push
rep
data16
ds
cmpsb
xchg
outsl
test
xor
sub
inc
push
or
fstl
jo
inc
cmp
jae
push
or
jp
call
iret
inc
xchg
lret
fcmovnbe
fbstp
lods
aaa
jae
icebp
ret
sub
imul
sub
xchg
cmc
sbb
mov
loop
stos
dec
inc
push
xor
sbb
jmp
dec
add
and
mov
jp
pushl
ljmp
shl
and
das
push
pushf
inc
adc
cltd
dec
xchg
mov
pop
fmull
idivl
dec
mov
pop
or
push
add
fsubp
ljmp
adc
dec
xor
nop
sub
push
je
ret
andl
andb
divb
cmp
ret
sub
cmpl
jge
fcomip
push
fwait
scas
jmp
jecxz
shlb
inc
lcall
jmp
nop
aam
pop
jl
rcll
or
lods
lds
mov
adc
pop
ret
sub
sub
or
mov
cmpsl
pop
mov
ja
xchg
incl
sbb
in
adc
pop
movsl
cmp
lods
xchg
cmp
inc
cwtl
adc
push
negb
push
sbb
sahf
ljmp
dec
pop
add
lock
fidivl
dec
dec
cwtl
mov
movl
leave
std
call
pop
cmp
cwtl
or
ficompl
fildl
loopne
xchg
push
int
xchg
dec
push
testl
shll
aam
xlat
test
mov
test
sbb
xor
insl
pop
insl
jge
jle
fucomip
push
outsl
sbb
lds
repz
adc
out
cmp
mov
mov
scas
inc
lock
mov
push
and
lahf
ds
mov
stos
das
pop
movsl
int
rol
ljmp
lcall
adc
push
cwtl
jo
dec
arpl
xor
sbb
movsb
pop
push
int
xor
mov
cmp
adc
xor
adc
xchg
lahf
xchg
add
aad
push
cltd
or
addl
jg
not
and
inc
pusha
mov
jle
repnz
push
or
lahf
pop
aaa
push
test
mov
shlb
pop
inc
xchg
call
dec
mov
setp
add
addb
dec
xor
stos
repz
lret
in
mov
lret
jns
movsb
or
pushf
jnp
dec
loope
mov
pop
jo
rcll
or
jle
fwait
outsl
or
popf
imul
lahf
nop
sbb
fildll
iret
xor
push
adc
sub
mov
test
sub
in
lcall
push
leave
leave
mov
and
cmp
fwait
lcall
data16
stos
fwait
inc
xchg
inc
je
xchg
sub
insb
bound
mov
xor
shll
mov
and
adc
and
adc
push
fsubrs
shlb
shlb
pop
int
inc
mov
xlat
mov
xchg
lock
popf
fisttps
addr16
adc
mov
js
adc
add
pusha
jecxz
mov
scas
xchg
hlt
mov
jne
std
pop
mov
push
adc
or
out
push
mov
or
faddl
xor
sbb
leave
or
pop
out
push
jg
nop
pop
cmp
sub
faddp
cltd
xchg
test
jge
sub
ret
ljmp
aas
das
inc
inc
lahf
sbb
test
xchg
addr16
sbb
sbb
arpl
and
xchg
add
xchg
test
push
inc
mov
add
adcl
jg
popf
xchg
int
cmp
sub
and
and
test
cs
repz
ss
dec
insl
enter
mov
fs
mov
lret
insl
mov
insb
mov
imul
adc
sahf
jge
push
mov
cli
cmp
hlt
scas
add
in
lret
pop
pop
add
ljmp
repnz
call
mov
add
cmp
pop
dec
fldt
lea
jmp
call
and
sbb
add
mov
out
jno
fdivrl
imul
mov
push
fisubl
dec
daa
adc
jb
mov
xor
push
sub
dec
dec
lcall
std
into
push
and
mov
add
mov
subl
mov
iret
popa
adc
xor
pop
jno
aas
inc
loope
int
lahf
or
push
lods
les
loopne
bound
sub
cmp
shlb
xlat
push
xchg
roll
pop
sbb
incl
xchg
lahf
pop
insb
test
or
outsb
mov
inc
xor
cmp
and
fsub
into
ds
andl
sbb
insb
inc
icebp
xor
inc
hlt
andb
inc
xlat
cmp
mov
add
or
mov
xor
cmp
cmp
shll
jbe
arpl
roll
enter
addr16
push
sub
jmp
cwtl
je
sbb
adc
xchg
cmp
imul
faddl
movsl
adc
fsts
jnp
sbb
sub
mov
jns
xor
in
int3
add
push
dec
cltd
xchg
xchg
push
movsb
das
cld
stos
fistpll
and
outsb
or
sub
push
jns
mov
fcoml
enter
sti
xchg
repz
mov
mov
nop
insb
dec
lods
dec
rcrb
jmp
clc
adc
sahf
shrb
push
mov
cld
fnsave
in
movsb
xchg
aad
jle
mov
movsl
or
xor
lcall
adc
dec
sub
aad
xlat
scas
jp
sbb
gs
dec
xchg
paddsw
add
inc
sub
pop
mov
in
adc
sarl
test
add
int
mov
lahf
cmp
and
push
mov
test
in
nop
pop
pminsw
xchg
xor
xlat
mov
out
sub
fdivrl
fcmovu
daa
aaa
push
push
addr16
jns
lods
push
xchg
pop
int
lds
xchg
fnstenv
ficomps
cmp
xor
movsl
push
dec
pop
xchg
sub
ds
lods
jnp
mov
xor
fucom
cltd
repz
jbe
idivb
xchg
mov
notl
outsl
repz
sub
add
scas
mov
dec
and
mov
sahf
dec
cmpsb
outsl
adc
incl
movsb
mov
outsb
mov
inc
push
push
pop
push
xchg
pop
hlt
cmp
sbb
jb
fisubrl
jne
dec
pop
scas
loopne
stos
lock
in
mov
pop
lcall
mov
pushf
out
je
and
sub
mov
adc
call
cli
iret
xchg
shrl
mov
adc
push
push
jae
xorl
pusha
sbb
dec
or
dec
ja
data16
shlb
jl
out
icebp
in
lods
and
or
dec
cmp
or
push
lds
pop
push
mov
addl
ljmp
inc
mov
mov
imul
xor
insb
or
jp,pt
push
repnz
mov
adc
mov
lds
int
inc
lret
cmpsl
sahf
adc
push
push
test
icebp
popf
mov
sbb
stos
inc
or
push
sahf
ret
lcall
and
pop
scas
das
lahf
xor
or
add
cmpsb
sub
addr16
pop
push
jns
jg
icebp
sbb
sub
ljmp
mov
mov
stos
test
clc
pop
jns
pop
repnz
xchg
xchg
and
jb
je
addr16
mov
mov
lret
fistl
test
fwait
and
daa
cmp
and
aad
fidivrl
out
fnstsw
mov
add
jo
pop
lods
hlt
inc
dec
or
mov
jg
mov
push
insl
mov
fwait
cmp
pop
loope
fidivrl
lcall
std
dec
pusha
inc
mov
in
push
pop
mov
out
mov
mov
call
lea
lods
mov
sub
jmp
lods
pusha
popf
adc
scas
fmul
xchg
xchg
std
lret
push
inc
test
mov
dec
mov
sbb
dec
sbb
pusha
mov
test
pop
clc
pop
jnp
or
xchg
stos
in
sarb
mov
cmp
es
and
stos
sub
adcb
popa
into
adc
jge
out
inc
cli
jle
repz
adc
cltd
js
jae
inc
jp
test
pushf
sub
push
xchg
pop
lds
dec
cmp
in
xor
jl
aam
adc
xlat
push
loopne
lret
push
cs
mov
pop
out
push
stos
mov
int
add
aad
into
push
sub
push
daa
lock
ficompl
sbb
std
push
iret
cli
shll
movsb
in
das
sbb
aas
jbe
fnstsw
dec
cmp
push
mov
fimuls
cli
lea
sub
rcrl
and
sub
push
mov
or
add
mov
test
xchg
testb
xchg
hlt
lods
add
stos
das
lahf
pop
add
sbb
shl
incl
stos
cmp
add
insl
dec
xchg
int
add
jge
ror
stos
ljmp
mov
or
das
enter
mov
es
xchg
icebp
int
mov
dec
stc
or
stos
aaa
push
sbb
dec
adc
scas
dec
mov
hlt
cmp
mov
mov
xor
sti
mov
lahf
js
dec
mov
mov
dec
inc
lcall
daa
into
or
dec
fwait
addb
lock
dec
paddsb
jae
ja
mov
pop
adc
adc
imul
jbe
xor
mov
aas
sub
pop
ret
das
cmp
cli
out
je
xchg
mov
test
cld
push
insb
sub
cmp
aad
push
and
xor
xrelease
insb
mov
mov
sub
outsl
sbbl
sbb
adc
cmp
aaa
xor
dec
stos
or
and
or
jmp
mov
jp
pop
lods
mov
fcomps
int
adc
and
lods
scas
jo
dec
out
xor
lret
xchg
mov
and
xor
jne
out
and
xchg
cmp
cmp
cmp
lcall
cmp
cld
cmp
daa
jb
lahf
cmpsl
jecxz
aad
sbb
je
jg
jbe
jne
gs
pop
push
xor
xchg
push
aad
and
in
push
popa
adc
cs
lahf
shlb
out
pop
jle
sbb
and
lahf
mov
pop
pop
add
dec
call
shlb
inc
enter
inc
js
mov
icebp
cmp
jmp
fcompl
jmp
dec
mov
cs
sub
test
inc
stos
fiadds
aas
fwait
out
movsl
bound
ret
loopne
enter
mov
dec
notl
testl
mov
dec
push
mov
dec
out
add
pop
shll
add
add
or
xor
cltd
je
push
cmp
dec
push
sbb
xorb
jl
jl
ja
sub
imul
int
insl
or
dec
sub
das
fsubl
cmp
scas
push
out
ja
iret
mov
rolb
xchg
push
sbb
in
inc
jne
mov
fidivrs
jg
xchg
push
fs
cltd
mov
and
es
sbb
mov
mov
daa
push
pop
cmp
into
pop
imul
mov
adc
jge
pop
dec
sti
cmp
xchg
cmp
fs
scas
or
loope
mov
cmpsl
xlat
sbb
xor
faddl
pusha
xor
add
jmp
adcb
jecxz
jbe
iret
bound
cmpsb
or
push
lret
jns
adc
push
adc
jb
cs
enter
rclb
mov
jbe
lret
xchg
sbb
mov
iret
fwait
cmp
jo
enter
adc
push
fdivrs
or
lahf
jle
aaa
bound
lret
push
pop
and
shrl
nop
stos
push
pop
pop
lahf
addr16
lea
add
cmp
ret
mov
or
std
jle
mov
inc
lret
icebp
test
jl
mov
sub
and
pop
sahf
rcr
repz
jecxz
mov
and
inc
jno
icebp
sbb
dec
pop
or
xchg
test
inc
rcll
jb
add
shll
insl
out
out
cmp
mov
sub
test
inc
push
xor
daa
mov
fwait
push
scas
dec
es
idiv
inc
out
into
xchg
adc
movsl
idivl
fisubl
adc
lock
mov
aas
lods
ljmp
pop
cwtl
scas
sub
push
cmpsb
sub
inc
jle
inc
jo
mov
flds
push
push
ss
ret
and
andnps
insl
fsubs
imul
dec
mov
into
xor
mov
cmp
mulb
inc
mov
xor
cltd
popf
stos
lods
fsubs
xchg
push
sub
js
jle
push
dec
les
mov
add
cmc
cmpsl
push
jbe
test
dec
in
and
and
inc
ss
xchg
shl
rorb
or
jg
cmp
push
cld
mov
insl
ret
xchg
push
adc
bound
inc
cmpsb
hlt
or
xor
icebp
pop
or
test
add
xchg
into
aam
jecxz
push
dec
jnp
enter
call
fs
mov
out
ss
add
rorl
mov
mov
cmpsl
sub
negl
insl
add
stos
cmp
mov
outsl
lock
es
test
xchg
imul
lock
lret
dec
jnp
dec
cli
jge
push
outsl
pop
mov
shl
sbb
fdivrp
sti
flds
cmp
cmpl
sbb
pop
in
pop
rclb
mov
cmp
mov
adc
pop
dec
mov
stos
xor
in
adc
hlt
mov
test
sub
sbb
data16
iret
ret
xchg
adc
int3
lods
lock
fiaddl
ljmp
cwtl
cwtl
sub
xor
adc
je
sahf
and
es
out
inc
test
xlat
mov
push
cmpsl
insb
or
dec
or
std
cmp
imul
adc
push
outsb
xchg
or
imul
notb
inc
fsubrl
loopne
lods
add
fs
arpl
dec
aaa
gs
shl
je
cmp
push
jne
cmp
lock
jl
ret
push
pushf
or
inc
lret
mov
dec
sarb
jmp
std
cwtl
test
or
mov
dec
leave
xchg
movsl
idivl
cwtl
push
push
push
cmp
inc
ret
lfs
test
cmp
adc
out
cmpl
pop
add
or
push
adc
dec
adc
add
mov
xor
in
push
or
into
subb
push
sub
mov
mov
sbbb
ss
ljmp
movsl
mov
dec
bound
jg
cmpsl
ljmp
outsb
imul
pop
cmpsb
add
rorl
rol
xchg
mov
call
inc
inc
or
dec
adc
add
mov
rcll
sub
into
mov
shll
test
mov
mov
add
inc
stos
jge
pop
ja
repz
aaa
sub
jbe
pop
jg
or
dec
mov
movsb
mov
adc
inc
les
lgs
adcb
xor
push
pop
or
mov
sahf
lea
dec
repz
sarl
ss
and
mov
outsl
insb
add
push
popa
lock
dec
cli
xor
andb
es
es
mov
cmpsb
mov
or
pop
movsl
sahf
lret
lea
xlat
xchg
hlt
xchg
fsubrl
or
scas
push
and
pop
cmp
add
in
sub
ficoms
jp
aas
cmp
and
add
scas
fwait
nop
pop
rorl
sub
mov
xor
pop
push
mov
pop
arpl
adc
test
inc
xchg
mov
mov
notb
scas
dec
lahf
fistl
mov
es
packsswb
dec
out
cltd
cmp
jge
jns
test
lahf
lock
jae
jmp
iret
cmpsl
nop
neg
mov
push
xor
cmp
adc
xorl
add
mov
inc
movsb
popf
sub
sbb
cwtl
out
mov
inc
mov
hlt
mov
imul
and
push
cmp
arpl
inc
int
or
and
cmpsl
rcr
js
sbb
push
jecxz
jmp
ljmp
in
pop
inc
jmp
and
push
jno
sbb
call
or
popa
pop
jmp
xchg
iret
imul
inc
pop
xchg
pop
and
or
mov
outsl
sub
adcb
leave
aad
mov
dec
mov
adcl
insl
xchg
divb
jl
leave
dec
test
aad
cmp
mov
out
mov
shll
lahf
mov
pop
jae
fisttpl
in
or
mov
mov
sub
push
and
rcrb
sub
xor
adc
dec
test
push
addl
cs
cld
pop
jge
pop
popf
in
dec
mov
pop
fs
fcompl
loope
rcrb
fstpt
pop
scas
mov
dec
stc
mov
imul
xor
jp
in
in
imull
xchg
into
rol
stos
jg
push
jmp
xor
pop
adc
sbb
cmovg
push
pushf
enter
in
mov
fnstcw
lcall
test
repnz
in
int3
mov
outsb
mov
ret
xchg
pop
mov
ss
test
dec
arpl
iret
push
jnp
into
fildl
subl
cmp
or
and
or
loope
push
loopne
popa
push
sbb
sbb
jnp
hlt
mov
sahf
ds
das
jae
fidivrl
adc
sub
add
push
andb
addr16
cld
push
loop
jl
sbb
mov
mov
cld
sti
dec
add
push
mov
enter
idivb
mov
hlt
push
sbbb
xchg
fidivrl
pop
movsb
out
xlat
out
add
pop
adc
mov
movsb
cmpsl
xor
jl
and
es
sub
ret
test
mov
add
in
sbb
cmp
sbb
push
lods
in
pop
mov
pop
xchg
pop
leave
aad
mov
cli
js
scas
dec
addr16
mov
and
pop
stos
les
inc
cs
mov
pop
dec
add
mov
push
cmp
ds
cmpb
add
mov
addr16
mov
ret
dec
loope
in
outsl
add
pop
cmp
icebp
test
inc
in
xchg
lret
push
test
jecxz
jmp
mov
in
pop
icebp
inc
les
sub
jns
mov
divl
xchg
decb
mov
push
dec
inc
inc
add
outsl
xchg
aaa
arpl
push
dec
rcr
xchg
fnstenv
mov
rcl
in
je
dec
cmp
sbb
cmp
mov
jp
lock
test
sub
bnd
fcomi
xchg
orl
mov
mov
stos
sub
fdivs
cmp
pop
inc
cs
shll
sbb
rcl
dec
js
mov
lahf
sub
arpl
outsb
imul
loop
iret
loop
shl
popa
out
or
testb
int3
add
mov
sti
lret
add
push
inc
dec
xchg
xor
xor
or
ftst
into
xchg
xchg
scas
addb
clc
add
ficoms
pusha
lret
lea
test
mov
pop
and
lahf
mov
push
xor
mov
fwait
mov
call
rorl
lea
mov
push
cmpsl
or
dec
aaa
mov
inc
pop
sbb
fiadds
push
add
js
and
jno
cwtl
nop
int
push
cmp
bound
pop
xor
add
push
aam
fldcw
mov
push
pop
push
in
mov
insb
clc
outsl
leave
or
outsb
sbb
int
dec
inc
dec
fsts
lock
test
popa
loope
scas
in
adc
inc
jne
inc
jmp
or
add
mov
lret
lahf
test
sti
lds
addr16
fdivl
ja
adc
dec
sbb
decb
mov
pop
push
jmp
push
and
sbb
insb
pusha
cltd
and
mov
jo
movsl
clc
stos
xchg
mov
sbb
ljmp
dec
mov
fcmovnu
sbb
fs
mov
loop
jge
inc
xchg
lock
notl
jnp
cwtl
ss
push
stc
mov
jo
mov
push
push
mov
pop
aas
mov
movb
sub
insb
adc
scas
mov
and
add
jns
nop
jo
fisubrs
pop
bound
jle
cmpsl
call
mov
pop
mov
lcall
inc
mov
inc
int3
mov
fistl
jns
testl
pushf
data16
test
mov
ret
mov
lods
gs
adc
rol
pop
jo
push
fs
pop
std
sub
push
notb
xor
add
call
out
fidivl
sub
pop
inc
cmp
mov
dec
mov
incl
cmp
jmp
cmp
or
repz
jno
sahf
xchg
mov
inc
test
testb
or
sbb
pop
jl
lds
xor
cs
sbb
imul
jae
cmc
fldt
shl
dec
or
fwait
mov
repnz
ret
pop
fwait
mov
pop
dec
lret
in
shll
mov
cmp
cli
mov
outsb
cltd
or
dec
in
push
cmp
mov
cmp
or
ret
xchg
xchg
sub
in
test
mov
into
fs
ds
sbb
mov
fistl
pop
pop
xlat
adc
loope
lods
enter
das
lock
inc
xchg
icebp
dec
and
cli
lods
mov
adc
adc
and
and
ficompl
mov
or
push
scas
addb
push
call
pop
popa
repnz
insl
pop
inc
das
jl
mov
arpl
mov
and
adc
pop
mov
testb
xor
adc
dec
inc
push
dec
sbb
fists
rcrb
add
test
push
jns
iret
cmp
mov
xor
orl
test
jo
arpl
jp
sub
or
popa
cmp
daa
out
loop
cmp
xor
pop
xor
xchg
into
test
in
mov
ljmp
inc
sub
idivb
out
pusha
rclb
cld
rcll
notb
lret
or
mov
push
jmp
mov
fdivrs
popf
lock
insl
and
dec
jns
lds
xor
faddl
fldl
add
in
inc
aas
push
cmpsl
xor
lods
cmpsl
sub
xchg
xlat
mov
push
leave
gs
adc
jns
cmc
jns
orb
mov
pop
xchg
out
fs
gs
lods
and
repnz
mov
jno
mov
cld
test
mov
repnz
nop
mov
dec
push
stc
in
mov
pop
mov
into
lahf
push
in
cwtl
and
das
rdmsr
ljmp
adc
inc
pop
in
in
ret
inc
jo
push
pushf
sub
mov
movsb
mov
push
shll
sub
xchg
mov
jg
or
xor
pushf
les
nop
sub
and
jle
xchg
into
in
mov
in
mov
or
push
scas
faddl
inc
leave
mov
push
pop
sar
es
mov
mov
std
adc
popf
mov
dec
cmpsb
pop
cmc
adc
mov
add
movsl
dec
cmp
push
dec
pop
mov
and
insl
ret
fldenv
ds
cs
xchg
adc
das
loopne,pt
sub
cmp
lret
xor
fxch
test
in
mov
dec
sti
test
fistl
stos
lret
and
cmp
fwait
or
in
lret
inc
std
roll
cmpsb
sbb
cli
mov
inc
inc
xor
dec
popf
shll
sti
and
fidivl
movsl
out
cmp
xchg
mov
ret
pop
roll
add
add
cmp
adc
mov
and
xchg
in
gs
jecxz
mov
mov
in
push
push
push
cmp
fisttpl
push
dec
add
sbb
sub
imulb
pop
out
fistps
cmp
addl
xchg
mov
pop
pushf
pop
fnstenv
and
test
adc
xchg
loop
cli
inc
pushf
insl
mov
popf
leave
adc
adc
lods
dec
leave
adc
xchg
mov
add
sbb
outsb
push
movsl
sti
fwait
push
les
pop
clc
ja
clc
mov
stc
shrb
popa
fidivs
adc
leave
cmp
imul
rclb
hlt
xchg
push
adc
cmp
fdivs
into
xchg
rol
icebp
cmp
leave
cmp
outsl
xlat
jae
or
or
sbb
fidivrl
sbb
sub
in
addr16
xchg
mov
in
add
inc
add
sbb
hlt
sub
and
test
or
jne
xor
stos
mov
ljmp
add
stc
test
jl
and
jbe
les
insl
inc
leave
xchg
std
mov
call
stos
or
rcll
xchg
mov
cmp
popf
adc
or
mov
rcr
mov
repz
mov
mov
xor
movsb
dec
sbb
in
mov
jno
in
cmc
mov
pop
loopne
mov
mov
mov
fwait
mov
push
pop
je
in
sbb
mov
mov
mov
sbb
jl
xchg
mov
push
sub
push
stos
mov
cmpsl
jbe
mov
add
mov
and
mov
lahf
sti
jge
pop
cmp
lods
orb
stos
pop
inc
sbb
push
sbb
sub
aas
or
sti
arpl
xchg
dec
imul
in
mulb
daa
jbe
and
mov
adc
and
inc
push
sar
xor
fdivl
call
clc
push
mov
push
push
lahf
xor
xchg
iret
mov
std
sub
xchg
adc
and
or
les
jae
ja
int
sbb
jecxz
movsb
dec
cli
incl
in
push
or
xchg
movsb
sbb
add
push
mov
mulb
and
xchg
mov
stos
or
pop
jecxz
aam
testl
jmp
addr16
test
and
xchg
clc
jne
cli
ds
push
xor
lcall
das
hlt
push
adcb
xchg
loop
lret
sbb
pop
arpl
ffreep
outsl
mov
je
jg
dec
and
mov
sti
sub
mov
je
and
xchg
out
sarb
shrb
inc
in
wrmsr
in
shll
outsl
xor
or
mov
mul
out
fisubs
dec
pushf
aam
sbb
add
dec
mov
mov
inc
mov
jmp
dec
and
idivb
dec
mov
sarb
xor
jmp
stos
pop
lcall
mov
insb
sbbl
dec
shll
fwait
push
cmp
arpl
not
mov
add
and
push
mov
adc
decb
ss
in
push
clc
stos
push
mov
jle
cmp
push
xor
xlat
jge
outsl
roll
sub
out
les
insl
out
jl
push
push
fwait
rolb
dec
cwtl
outsb
ret
pop
loop
test
pop
out
mov
or
shlb
mov
push
and
xor
sahf
cmp
jmp
push
imul
stos
cltd
mov
jno
sub
lcall
imul
je
je,pt
cmpsb
lea
xchg
jecxz
sbb
addb
pop
or
pop
subl
jne
mov
jo
fwait
xor
sbb
adcl
stc
mov
mov
sub
jl
push
sbb
flds
mov
bnd
xchg
enter
mov
and
and
dec
adcl
incb
mov
sbb
sahf
pop
aas
dec
sahf
mov
outsb
pop
dec
or
push
jecxz
pop
push
aam
and
es
xor
jle
fldl
sub
loop
fldt
mov
ficompl
add
aaa
and
inc
pop
or
pop
cmc
dec
sbb
mov
adc
lret
push
or
cmp
pop
popa
mov
nop
inc
jae
pop
pusha
xchg
mov
sbb
mov
imul
nop
mov
js
aad
mov
rcr
mov
pop
test
inc
sub
ret
gs
fildll
mov
sub
test
bound
push
test
sub
xor
jb
lret
jle
jge
inc
push
pop
inc
sbb
out
ret
mov
leave
xor
cmp
daa
sbb
dec
stos
xlat
mov
addr16
inc
mov
es
loope
jbe
in
xor
ret
call
insl
jb
insb
test
andb
mov
sub
data16
xor
test
adcb
lea
mov
inc
mov
in
inc
xor
or
and
and
sbb
ror
fiaddl
or
sub
lods
sbbl
cmpsb
jo
test
cmp
lock
lock
js
push
mov
mov
jge
adc
adc
mov
das
mov
pop
jg
add
xor
fs
cmpsl
adc
cld
gs
and
mov
jbe
xor
add
jmp
mov
out
and
data16
outsl
shrb
adc
add
mov
adc
aaa
mov
vpshuflw
mov
and
inc
push
ret
movsl
stos
stos
sarl
xchg
stc
mov
xor
ss
xchg
insl
dec
test
jns
adc
out
pop
imul
cmp
movsl
dec
fwait
cmp
rolb
jb
push
jbe
adc
aaa
add
lcall
mov
push
push
lcall
repnz
fwait
cmp
cwtl
pop
in
je
mov
les
repnz
nop
cli
lods
dec
jp
mov
pop
ljmp
dec
out
int3
dec
sub
jbe
dec
in
dec
das
out
xchg
cmp
das
adc
mov
pop
add
xor
int3
mov
test
mov
mov
insb
imul
test
or
push
xchg
or
ret
cmp
lret
sti
mov
int
dec
popf
mov
add
dec
sbb
fidivrl
push
inc
jbe
push
xchg
scas
adc
lret
fadds
pop
and
pop
xor
add
jmp
gs
mov
adc
in
cmp
pushf
in
incl
and
or
adc
imul
mov
stos
jecxz
xlat
gs
sub
fsts
ret
cmpsl
fwait
and
insl
fists
xor
push
js
jp
subl
stc
out
xchg
xchg
or
jno
mov
jle
fs
lock
inc
jnp
into
cmp
in
pop
jge
jb
push
imul
cmp
dec
enter
loop
mov
lret
inc
mov
sub
jge
mov
push
push
ljmp
jae
jb,pn
ja
push
stc
jmp
lods
xorl
cmp
jae
inc
pop
xchg
mov
shrl
xor
jle
lea
cmp
lahf
mov
xchg
loop
or
out
jb
orl
xor
sub
and
aas
lock
ror
dec
and
test
int
pop
lods
popf
out
sti
mov
addr16
lret
clc
adc
adc
das
mov
test
imul
add
out
loop,pt
sub
pop
jns
push
xchg
je
add
jmp
sbb
imull
adc
popw
push
ss
cmpsl
lea
xor
add
sbb
push
jbe
arpl
inc
xchg
pop
roll
cmpb
jecxz
push
imul
in
dec
inc
push
push
or
iret
mov
ret
inc
sub
jb
xchg
mov
mov
push
push
aad
cmpsb
jl
sbb
cmp
cltd
sub
jo
imul
pushf
adc
aas
mov
jo
adc
pop
push
and
jnp
inc
cmp
sub
pop
and
adc
sahf
sub
out
ret
mov
and
xor
add
cmpsb
fs
les
inc
xchg
outsb
outsb
xor
cmp
xchg
rcrb
push
dec
pusha
cmp
sub
adc
jmp
daa
cli
imul
subb
cmp
xchg
sbb
lock
scas
cli
imul
inc
push
sahf
jb
xchg
inc
jae
testb
dec
dec
push
loop
and
sub
icebp
test
xchg
push
lea
add
and
mulb
jne
stos
mov
lret
adcb
gs
icebp
and
outsb
jo
pop
pop
dec
call
addr16
ret
cld
clc
xor
push
movsb
add
pop
lahf
idivl
add
rorb
jp
add
xchg
inc
in
icebp
jle
push
add
push
add
jle
or
aad
outsl
cmpb
fimuls
xchg
imul
stos
inc
test
dec
sbb
sub
jg
cmpsb
les
adc
addr16
ret
dec
cld
imul
and
mov
add
adc
lods
xor
add
xor
xchg
cmpb
mov
pop
mov
pop
sbb
sarl
clc
test
jmp
jo
mov
filds
test
push
outsl
cmp
aam
js
out
pmaddwd
or
je
iret
mov
pop
xchg
sub
sbb
or
xchg
push
xchg
daa
xchg
dec
fidivl
push
out
mov
jle
pop
daa
repnz
fisttpll
inc
and
jmp
sbb
xchg
inc
rcr
jbe
daa
add
push
scas
mov
mov
rorb
addl
hlt
dec
mov
push
pop
gs
mov
pop
push
ficomps
lret
jno
in
out
mov
xchg
xchg
mov
in
push
addb
lcall
add
jne
xor
je
sbb
iretw
jmp
cmpsb
sbb
cli
clc
inc
xchg
fisubrs
xchg
lds
pop
aam
or
or
sbb
dec
and
inc
popa
cmp
movsl
scas
push
cmp
dec
push
and
mov
mov
mov
add
inc
fadds
adc
dec
mov
adc
in
movsb
arpl
stos
aas
cmp
mov
pop
mov
sub
call
xor
push
mov
ja
into
lds
mov
roll
ljmp
addb
xor
mov
cmp
je
mov
fcos
xor
popf
int
dec
iret
cmp
rcrb
popf
aad
jmpw
jl
repnz
pop
daa
scas
outsb
mov
and
mov
dec
es
lods
mov
and
mov
fprem1
in
mov
lods
mov
sarb
loope
iret
adc
adc
lods
shlb
je
les
iret
jnp
mov
pop
es
ret
divb
fwait
jb
mov
insl
jno
out
xor
shll
jae
mov
cwtl
lods
in
push
daa
xor
mov
fs
jmp
push
inc
push
cmp
fnsave
test
loop
xchg
inc
scas
out
inc
repz
call
jns
in
testb
orb
xchg
push
dec
xchg
mov
and
add
iret
xor
inc
lds
inc
dec
lea
mov
cmp
inc
and
lret
mov
pop
sbb
pop
pop
orb
jmp
insb
cmp
test
fwait
jb
lea
mov
lods
jmp
es
ljmp
dec
test
scas
cmpsl
stos
mov
mov
jno
add
sbb
lret
rcrb
in
cmp
iret
adc
inc
sub
adc
or
int
cld
mov
call
xchg
and
out
lds
adc
xchg
lods
xor
xchg
dec
lret
cmc
fwait
mov
in
sub
adc
insb
xor
mov
movntq
scas
sbb
hlt
add
pop
mov
ret
inc
jns
scas
aas
fidivs
adcl
test
je
or
shlb
or
inc
and
into
push
push
int3
ds
add
cli
xor
jge
in
stos
pop
add
lock
dec
inc
loope
jmp
scas
out
lret
xchg
aas
and
xor
std
cmp
dec
adc
xchg
dec
imul
dec
into
es
pop
les
xor
cmp
fmuls
movsl
imul
into
mov
jb
push
jb
xchg
inc
popf
pop
mov
mov
aad
inc
push
movntq
test
jmp
movsb
stos
ds
or
mov
inc
push
stc
mov
jmp
fwait
cmp
xchg
mull
inc
insl
stos
push
ja
dec
sbb
mov
imul
cmp
adc
fwait
push
sbb
dec
mov
loopne
push
jne
shrb
rcl
mov
push
jmp
push
adc
aam
and
push
or
push
inc
push
into
xchg
mov
mov
or
mov
add
lock
out
add
jo
iret
dec
xor
push
test
addr16
inc
and
sub
dec
mov
jmp
mov
jl
push
popf
stos
mov
mov
and
inc
inc
mov
repz
pop
repnz
cmp
dec
loopne
lahf
std
and
and
pop
call
stc
in
xor
pusha
jp
cmp
in
scas
mov
aaa
add
jle
sbb
fistl
enter
adc
and
hlt
adc
mov
pop
dec
and
add
lods
add
sub
or
sti
mov
test
popa
sub
lret
andb
xchg
lds
cmpsl
mov
mov
inc
lock
pop
sbbl
push
adc
ja
xchg
mov
in
push
mov
jp
arpl
mov
in
popa
add
imul
cld
adc
adc
pop
cld
scas
push
outsl
mov
fistl
push
pop
push
aaa
fistl
adc
or
cmp
scas
movsl
loope
out
insb
test
cmp
mov
push
cmp
sbb
push
dec
test
daa
mov
aam
sub
inc
xor
adc
mov
add
cmp
xchg
mov
aad
int3
test
jbe
test
rol
xor
shl
leave
mov
add
lock
mov
repnz
ss
jne
arpl
addl
fistl
jmp
xchg
adc
out
cmc
cmp
divl
dec
fsubs
aad
popa
lret
dec
inc
pop
idiv
ret
ja
xchg
pop
add
insb
in
xor
or
pop
orb
jmp
hlt
call
push
and
adcb
fimuls
xor
aas
add
test
xchg
test
sub
mov
pop
je
in
mov
shl
adc
sbb
lock
rcrb
adc
js
les
xchg
push
push
outsl
repnz
scas
pop
xchg
lret
ja
mov
mov
mov
inc
mov
push
jnp
mov
das
enter
xchg
aam
jne
xor
add
inc
decl
aam
jbe
ds
push
mov
cmpl
test
mov
jmp
mov
mov
jb
mov
mov
and
xor
int3
inc
int3
outsb
scas
jnp
sbb
negb
xor
inc
mov
gs
and
pop
and
lea
pop
sahf
cmc
push
adc
loop
daa
and
mov
fdivrs
stos
mov
lcall
push
xchg
sub
scas
add
xor
jmp
xor
out
arpl
mov
cmpsb
sbb
rolb
xchg
into
in
adc
lahf
adc
in
pop
sti
xor
imul
frstor
daa
mov
xchg
sbb
or
sub
cwtl
push
add
xchg
sub
sbb
or
imul
push
shl
or
out
lcall
add
or
cmpsb
scas
repnz
mov
fs
mov
icebp
gs
inc
pop
icebp
sub
lds
scas
jmp
scas
mov
adc
add
das
cmp
hlt
fadds
or
ret
test
cmp
int
ret
jl
push
aad
jle
xorb
lock
in
adc
sub
push
fiaddl
add
xor
pop
in
adc
ljmp
and
scas
mov
dec
cmc
stos
cmp
jo
cmp
jbe
and
cmp
bound
mov
clc
mov
daa
hlt
ret
pop
push
fstpl
sarl
push
inc
pop
lcall
cmp
inc
push
cltd
xchg
in
ljmp
cs
sub
adc
icebp
pop
inc
pop
inc
je
sub
leave
dec
fdiv
add
dec
mov
lods
dec
mov
sti
shll
cmp
push
mov
std
xor
pop
ja
addr16
call
orl
xchg
fisubrl
dec
mov
cmp
call
xor
lods
dec
dec
cmp
sbb
aaa
stc
mov
push
xchg
js
shll
xchg
push
je
mov
xchg
popf
xchg
int
cltd
into
push
enter
lahf
push
fists
pop
xchg
loop
dec
cmp
sbb
dec
fsubr
mov
ss
pop
add
mov
rcrb
imul
cli
out
mov
jmp
test
add
mov
mov
and
jle
int
ret
cmp
and
jns
push
mov
cli
adcl
test
js
or
test
and
jb
jmp
lahf
out
sbb
jne
sbb
pusha
inc
push
mov
inc
mov
push
cmp
dec
std
xlat
mov
sub
jmp
scas
sub
mov
xchg
cld
int3
mov
add
cmpsb
xor
ret
or
js
cmp
or
dec
decl
mov
cltd
hlt
jo
lock
sbb
enter
or
lretw
mov
in
pop
iret
adc
in
xor
jp
inc
iret
loop
pusha
sbb
xchg
sbb
jae
sti
inc
push
sbb
cltd
mov
pop
jnp
ret
pop
xor
in
pushf
push
loop
dec
dec
data16
mov
inc
movsb
fistl
or
fildl
sub
push
clc
out
outsb
jns
bound
test
cld
negl
imul
jb
cmp
cmp
push
enter
mov
push
mov
cmp
in
mov
jl
adc
mov
xor
jae
loopne
sub
sub
pop
sti
cmpl
rorb
and
xor
sub
push
loope
stos
fwait
ljmp
pusha
xchg
mov
xor
sahf
sub
xchg
and
cli
add
stos
sarb
cmp
push
mov
aas
or
or
arpl
push
dec
in
adc
test
push
int3
or
data16
jg
jmp
sbb
sahf
mov
jne
mov
rorl
pop
add
testl
jmp
and
adc
push
cld
mov
or
xchg
push
flds
mov
fisttps
lahf
push
dec
pushf
sbb
mov
push
jecxz
inc
int3
adc
ret
aad
push
pop
mov
jl
pop
xchg
sub
xchg
out
aam
inc
inc
push
ds
dec
lods
in
out
cmp
inc
jmp
fstps
icebp
std
sbb
imul
add
into
jge
iret
lods
push
hlt
xchg
pop
std
negl
sbb
orb
je
iret
icebp
add
ja
cwtl
fdivrs
frstor
scas
inc
adc
in
pop
cmp
repnz
cltd
lods
add
inc
cmp
repnz
lea
clc
xorps
outsb
jp
mov
into
xor
mov
cmc
adc
roll
inc
jg
mov
loopne
cmpsb
mov
addr16
rcrl
cmp
scas
movsl
push
mov
repz
adc
push
push
jae
mov
js
add
sbb
inc
je
inc
loope
xchg
dec
fsubrs
scas
push
push
andps
inc
add
lock
sbb
fisubs
push
sub
mov
push
mov
xor
and
in
adc
push
ret
push
ja
ljmp
and
sub
fucomip
push
lahf
jmp
sub
jne
xchg
fcom
push
mov
gs
out
adc
mov
adcl
mov
aas
sbb
ror
cmp
add
ja
cmp
lcall
dec
xchg
mov
pop
push
dec
int
jae
sbb
jp
ja
dec
fldl
idivb
dec
sub
rorb
cmp
movsb
pop
loope
sub
pushf
ror
clc
adc
in
andb
mov
loopne
rcrl
popa
je
clc
inc
dec
mov
scas
dec
test
mov
aad
lea
aaa
aas
mov
mov
inc
xor
mov
shrl
adc
push
sub
sbb
sub
xchg
jp
in
dec
add
xchg
mov
adc
clc
pop
adc
leave
and
inc
mov
cs
inc
inc
movsl
adc
test
leave
lds
imul
push
dec
stos
insb
xchg
into
sbb
mov
mov
fs
add
fs
je
into
jo
pop
dec
xor
fcmovbe
adc
mov
aaa
icebp
dec
jns
mov
sbbb
loop
pop
das
jae
jecxz
sub
movsb
mov
jg
pop
push
or
insl
lcall
rclb
insb
push
or
push
inc
aaa
xchg
sub
cld
mov
cmpsb
call
sbb
pop
fs
stc
sub
inc
repnz
ret
out
or
or
push
fsubrl
add
cmp
dec
gs
xchg
pop
mov
clc
ja
mov
cmp
cmp
imul
popa
inc
cmpsb
cltd
aaa
scas
add
shrb
mov
xchg
sbb
les
lahf
sub
pop
jne
sbbl
js
jp
jp
adc
adc
xchg
std
mov
popl
and
pop
es
test
sti
pop
test
pop
mov
jno
jns
test
and
xchg
leave
xchg
cli
jne
adc
mov
stc
mov
std
loop
jmp
fldcw
stos
popf
negl
mov
arpl
int3
stos
mov
push
mov
in
and
and
adc
popf
in
jno
inc
mov
add
mov
pusha
negl
lahf
or
mov
cmpsl
sarb
mov
pop
mov
jbe
xchg
stos
push
mov
adc
pop
sbb
enter
ds
cmp
mov
imulb
mov
cmpsb
hlt
in
jae
mov
rcrl
in
mov
mov
shrl
adc
mov
jmp
xor
std
sbb
inc
test
clc
xchg
sbb
and
jmp
scas
xor
xor
ljmp
cmp
iret
loop
push
pop
pop
inc
mov
push
cs
cwtl
jb
jae
push
pusha
test
sbb
int3
imul
cmp
test
cwtl
test
bound
enter
ret
xor
arpl
add
ficomps
dec
cwtl
lahf
arpl
and
pop
inc
mov
fcoms
inc
jmp
mov
sub
mov
mov
or
movsb
xor
bound
outsl
cmpsb
inc
or
or
inc
pushf
push
gs
mov
movsb
adc
mov
cmp
insb
mul
aad
cmpl
inc
lcall
add
sarb
xchg
std
xchg
imul
cmpsb
ffreep
lret
dec
movups
cmpsl
sub
push
stc
ret
dec
mov
das
pop
leave
dec
insb
loop
divl
leave
xchg
daa
outsb
cmpl
xchg
xor
cmp
js
mov
mov
dec
xchg
sub
or
cmp
fs
inc
mov
dec
lret
add
cmp
jae
mov
arpl
outsl
inc
add
push
inc
insl
in
cmp
aas
repz
xor
fstpl
negl
test
into
fucomi
pop
movsb
jmp
sbb
xorl
cmp
call
int
addr16
pop
pushf
cmpb
rcrl
ljmp
bound
and
sahf
pop
mov
push
inc
inc
dec
ds
jl
std
fisttpl
mov
jne
filds
lods
repnz
mov
mov
mov
ja
xchg
adc
push
mov
xchg
rorl
loopne
cmp
ss
and
pop
and
xlat
xor
jmp
adc
sbb
fsubrp
scas
js
and
int
aaa
inc
insb
js
out
inc
lahf
cmpl
xor
mov
dec
dec
and
xchg
pop
loope
fcomi
rorb
mov
mov
adc
sbb
nop
cmp
lret
push
mov
movsb
movsb
out
fimuls
sub
popf
pop
mov
adc
or
push
sub
in
push
sub
adc
pop
mov
insb
testb
jg
rorb
rclb
xor
cmp
xchg
das
push
les
cld
pop
js
jge
out
arpl
test
movsb
or
dec
mov
xor
xor
push
fisttps
cmpsb
push
xor
sahf
inc
mov
sub
inc
mov
mov
pop
lods
lcall
adc
jle
rcrb
int
push
mov
adc
fwait
lods
into
ror
popa
and
mov
arpl
add
inc
xor
jmp
pop
jne
lods
test
mov
and
xchg
out
push
dec
and
pop
mov
repz
add
sub
test
jle
fisttpl
push
jmp
das
xchg
lret
pop
fucomp
jns
daa
cld
inc
loop
pop
aam
loopne
outsl
and
mov
mov
adc
pop
in
ret
and
or
jmp
out
mov
out
mov
outsb
iret
jmp
sub
int3
mov
xor
cmp
bound
adc
push
and
lock
ficoml
mov
test
sub
arpl
mov
cmpsl
into
jnp
pop
cmp
xchg
js
xchg
push
out
outsb
or
mov
rcrb
push
lea
fcmovnu
divl
dec
adc
in
and
mov
pusha
fnstsw
and
outsl
jae,pn
pop
bnd
out
dec
ret
xor
test
mov
adc
sahf
shrl
jno
xor
ss
dec
cmpsb
jbe
xchg
dec
mov
mov
insb
push
je
sbbl
push
repnz
mov
shl
shlb
and
test
int3
sbb
hlt
js
sub
mov
push
je
shlb
out
sarl
cltd
and
repz
out
imul
in
rcrb
mov
out
and
loop
mov
mov
jne
hlt
xor
ss
add
cmp
push
rol
sarl
dec
jo
dec
mov
fsubs
stc
cmp
mov
out
adc
mov
into
xor
out
mov
arpl
hlt
enter
or
sub
lds
leave
cmp
cmp
into
clc
and
addr16
cmp
clc
shr
in
shll
imul
outsb
gs
push
xor
fucomp
sub
sbb
cmp
inc
lret
xor
inc
loope
sbb
cli
inc
aaa
dec
fcoms
cmpsl
inc
pavgw
inc
lods
dec
out
sbb
sbb
popa
xor
add
ds
les
mov
hlt
repnz
sub
mov
mov
insl
iret
arpl
mov
and
jno
out
incb
cmpsb
icebp
or
jmp
inc
add
dec
leave
cmp
pop
mov
xor
add
scas
push
or
add
daa
adc
fwait
jb
adc
leave
or
gs
cmp
lret
sub
inc
aam
das
inc
add
outsl
cli
add
fildl
outsb
addr16
xlat
sub
mov
les
dec
mov
js
enter
ss
jge
or
cltd
push
mov
popf
sbb
and
adc
jns
dec
lods
jne
cmp
sub
and
mov
cli
cld
sbb
imul
mov
mov
and
xor
inc
push
jecxz
sub
in
jbe
sbb
into
mov
xchg
pushf
imul
and
cmp
jnp
imul
and
sub
add
xchg
hlt
push
xlat
rcrl
mov
imul
mov
dec
dec
jnp
sahf
in
outsl
hlt
xchg
cmp
mov
and
aaa
jge
pop
mov
icebp
push
das
fmuls
inc
stc
pop
mov
fwait
clc
sbb
push
mov
fidivl
xor
or
dec
jge
or
push
and
repnz
es
jno
pop
xchg
gs
pushf
cld
loopne
icebp
push
adc
xchg
xor
and
xchg
subb
fwait
xchg
jb
mov
jle
inc
adc
sar
and
adc
mov
outsl
and
add
test
mov
sahf
push
cli
sbb
js
or
pop
int
mov
insb
or
push
mov
in
scas
xchg
outsl
xchg
cmpb
and
outsb
pop
pop
repnz
sub
dec
mov
aad
sbb
cmp
xchg
movsl
test
push
imul
scas
and
movsl
dec
dec
xchg
push
inc
cmp
add
inc
xor
andb
imul
rep
sbb
popa
xor
mov
dec
call
push
out
cmp
fstp
inc
adc
pop
pop
push
cmp
scas
sarl
dec
in
subb
inc
dec
repz
pop
mov
rolb
push
dec
scas
lahf
push
je
pop
or
aas
popf
mov
popf
mov
ja
divl
ja
inc
and
push
sbb
sub
adc
fmulp
pop
loopne
pop
push
jnp
pop
addr16
dec
xor
enter
dec
adc
inc
mov
mov
int
xchg
popf
jl
sub
fimull
mov
pop
mov
mov
cmp
insb
mov
adc
pop
pop
adc
add
jmp
int
loope
int3
mov
ja
jmp
cmpsb
adc
push
stos
xchg
xchg
jmp
add
shl
iret
cli
movl
and
mov
cmp
sbb
sub
jg
cmp
xor
pop
adc
cmp
outsl
push
pop
add
std
enter
aad
loopne
fiaddl
test
movsb
dec
movsb
lahf
mov
dec
notl
sbb
mov
adc
aas
push
mov
jne
dec
push
dec
out
cmp
push
pop
or
insl
mov
dec
add
and
out
adc
movsb
xchg
ficompl
shrl
adc
xor
mov
mov
mov
in
cmp
test
nop
mov
mov
loop
and
mov
dec
loopne
inc
stos
sub
add
aas
and
jle
inc
push
or
pop
insb
mov
or
gs
cwtl
movsb
mov
lds
repnz
adc
ret
push
or
arpl
jae
jge
inc
rol
cwtl
rorl
xchg
int3
lret
jae
cltd
nop
pop
arpl
sub
push
das
lcall
in
mov
popa
push
cmpsb
xor
mov
cli
sbb
lcall
and
cmp
jns
lea
push
jno
xor
mov
push
or
fldt
addr16
cmp
in
cmp
fstpt
sub
outsb
loope
stc
into
mov
cltd
jge
dec
jbe
sub
imul
dec
inc
mov
pop
std
jo
popa
ljmp
nop
iret
push
cmp
les
jl
fdivl
mov
mov
xchg
inc
push
fchs
lds
inc
inc
sbb
adc
shl
jno
hlt
jge
nop
insb
loop
push
xor
mov
fisubs
sub
lea
stos
mov
sarl
test
jo
mov
mov
divb
test
xchg
or
testb
in
es
mov
sbb
sbb
ret
mov
sub
mov
xchg
pop
sbb
sbb
ljmp
addb
mov
inc
mov
or
rclb
mov
mov
pop
jl
push
fstl
mov
xlat
mov
mov
adc
js
mov
push
add
lret
jnp
jno
dec
std
inc
clc
mov
mov
push
scas
lret
mov
aas
int3
pop
icebp
or
inc
cli
ds
hlt
cmpl
sarb
or
lret
enter
aad
adcl
dec
insl
lods
lret
mov
jnp
mov
cmp
push
icebp
and
out
mov
insl
enter
lret
lock
lret
movsl
addr16
mov
ret
cmpsl
neg
fmuls
push
insl
in
pop
xchg
inc
int3
lea
inc
cwtl
sub
jae
es
xchg
fiaddl
es
aaa
lock
xor
and
popf
mov
xchg
popa
sbb
jmp
xchg
adc
aad
sub
and
inc
shlb
pushf
insb
in
or
hlt
cld
mov
xchg
outsb
std
adc
xorl
mov
adc
in
stc
or
in
je
jge
adc
repz
lods
sbbb
sti
clc
pushf
icebp
or
stos
push
in
mov
jbe
test
not
adc
lcall
sub
xchg
inc
push
sub
mov
cmpsb
test
dec
scas
dec
cmpsb
mov
jge
stc
xor
lret
sarl
or
test
faddl
cmpsl
hlt
out
sub
hlt
mov
and
adc
pop
cld
aad
or
jb
aam
pop
call
dec
push
dec
aas
mov
aam
rorl
clc
mov
sti
cmp
insl
ljmp
aaa
xor
jp
in
rcrb
cltd
cmp
cltd
xor
aaa
pusha
dec
add
nop
dec
fwait
cmc
jl
xor
jl
rol
movsl
shrl
insl
xor
pop
mov
sub
cmp
adc
popf
or
repz
mov
fisttpl
add
xor
dec
jmp
push
nop
add
push
enter
loop
call
mov
adc
into
lds
mov
mov
adc
stos
test
test
or
dec
cmp
fwait
pop
xor
fmulp
xor
jbe
jp
sbb
xchg
daa
xor
cltd
adc
sti
dec
sarl
push
lods
lea
or
gs
movsb
out
je
mov
cmp
push
imul
push
and
sub
out
test
sub
push
sysenter
cwtl
lock
mov
sub
xchg
fnstenv
push
or
cmc
lods
bound
aad
mov
push
mov
je
lcall
add
sbb
push
aas
lret
inc
mov
dec
and
cld
cli
fsubrl
cs
pop
mov
xor
aam
add
outsb
sbb
lret
leavew
cmc
addr16
pop
fimuls
test
sub
sbb
pop
test
insl
insl
pop
sbb
and
pop
jl
test
int
sti
test
jne
xor
divb
sbb
popf
cld
cltd
dec
jno
push
add
call
clc
inc
adc
mov
lock
jne
sub
test
iret
fcmove
mov
punpckldq
or
pop
inc
add
and
jge
sbb
imul
mov
mov
fwait
divl
xor
popa
lods
mov
loope
fnstsw
inc
xor
clc
mov
movsb
fcmove
int
fisttps
fsts
lods
test
jmp
push
mov
pusha
mov
jo
pop
out
jb
inc
rcrb
out
sbb
push
in
arpl
mov
ljmp
mov
pmovmskb
push
inc
cmpsb
adc
mov
and
cld
pusha
xchg
inc
nop
push
jle
icebp
pop
pop
xor
out
ja
ja
push
pop
cwtl
fsubl
push
outsl
adcb
mov
xchg
shll
sbb
mov
pop
add
scas
loope
dec
enter
insl
push
and
pop
and
fs
fs
jge
xchg
stos
xlat
std
jl
and
je
xchg
int3
pop
scas
mov
loope
cmpsl
aas
inc
ror
mov
inc
ret
js
push
std
sbb
pop
jns
test
cltd
jo
iret
and
sbb
lret
jo
stos
dec
sarl
std
pop
mov
push
loope
jb
lea
nop
sub
sbb
stos
pop
mov
dec
outsb
mov
sub
sbb
rorl
loop
xchg
jmp
add
inc
push
dec
add
lcall
mov
mov
and
stos
inc
cmp
stos
rcll
inc
aas
lds
push
xchg
or
pop
xchg
xchg
mov
jo
jno
mov
xlat
fs
scas
jo
dec
or
movsb
jg,pt
mov
inc
hlt
add
add
lret
and
pop
bound
sub
sbb
pop
outsl
push
push
iret
add
lret
inc
popa
aad
cmp
ds
and
adc
rol
out
lock
push
adc
ss
jecxz
call
pusha
rcrl
add
xchg
cld
loop
inc
mov
pop
mov
dec
lods
lahf
cltd
or
mov
mov
test
popa
stos
and
pop
dec
mov
mov
shll
inc
cli
pop
pop
xor
push
mov
mov
sti
ficoms
lcall
xor
add
sub
gs
push
jp
pop
jecxz
xchg
lods
inc
daa
cmpl
movsl
or
or
out
inc
outsl
clc
push
push
pop
jo
and
and
xchg
stos
es
sbb
aaa
lahf
je
mov
push
loop
orb
jo
insb
xchg
loop
mov
int
pop
dec
xor
gs
and
dec
mov
adc
jae
cmp
mov
in
aas
push
movsb
jecxz
cs
or
xor
int3
sbb
jmp
rcll
std
aas
mov
loope
sbb
or
xchg
negb
xchg
adc
movsl
dec
imul
adc
sub
pop
mov
pushw
stos
daa
js
fidivl
aad
les
dec
js
sbb
aam
loope
mov
add
sti
add
sbb
jmp
inc
lahf
sti
inc
out
inc
fbld
sub
data16
mov
ficompl
mov
rorl
outsb
push
fwait
xchg
rorl
and
jl
jmpw
aad
call
ja
pop
aas
sub
mov
add
cmp
cmp
add
fiadds
and
stos
hlt
pusha
cld
cwtl
dec
out
pop
insl
lock
push
jbe
mov
jle
lahf
movsb
inc
mov
or
insb
repz
lods
mov
xlat
movsl
inc
loop
orb
jnp
es
addr16
int3
push
test
or
testb
mov
xor
cs
dec
lods
push
fimull
mov
lods
pushf
lahf
sbb
sbb
sub
jbe
jnp
cmp
cmpsb
sub
data16
xor
sti
pop
push
dec
add
icebp
adc
test
cmp
xchg
lcallw
dec
cmp
lcall
mov
into
jecxz
dec
clc
fwait
lret
mov
imull
and
addr16
jle
push
mov
pusha
and
arpl
mov
out
ja
aad
fcmovne
addb
jns
sahf
push
xor
push
or
mov
xchg
push
adc
ja
push
pop
in
push
mov
repz
xor
adc
adc
and
push
aas
lock
cli
adc
outsb
push
fisttps
adc
dec
mov
xchg
dec
sub
outsb
lret
mov
pop
adcl
inc
xor
daa
clc
sub
bound
sub
sbb
jg
pop
data16
inc
call
mov
scas
rcrl
push
out
pushf
push
popf
dec
aaa
test
mov
movsl
push
pop
push
xchg
ja
fsubr
mov
adc
popa
xor
fcomps
push
test
sarb
out
in
arpl
cwtl
xchg
daa
add
bound
loop
cmpsb
lret
pop
popf
mov
mov
lret
push
mov
gs
or
cmp
movl
ljmp
mov
or
pop
xchg
cmpb
test
dec
ja
scas
lds
testb
add
bnd
insl
push
popa
adc
sbb
mov
xchg
lret
popa
sub
jae
pop
mov
and
stos
sbb
bound
lods
test
out
fnstsw
jae
cmp
dec
fistpl
or
dec
push
jg
daa
lds
les
dec
pop
pop
push
lds
int
dec
mov
int
mov
iret
jg
xchg
sub
jnp
lea
iret
ret
dec
test
xchg
scas
sub
xchg
xlat
mov
sbb
and
clc
aaa
stos
das
lock
fimuls
adc
push
ds
inc
jg
push
sbb
xor
int
xchg
jecxz
dec
mov
sbb
clc
pusha
xchg
test
mov
hlt
jge
push
mov
or
xor
in
jns
jo
cmpsb
std
js
js
fnstcw
mov
or
outsl
loopne
fldenv
frstor
cmp
xchg
jo
xchg
scas
mov
pushw
pop
bound
leave
fwait
popa
or
inc
pop
ret
mov
cld
and
jp
mov
mov
dec
push
in
cli
mov
das
lret
cs
cwtl
dec
xchg
inc
arpl
jb
sub
sbb
sbb
lds
into
jne
idivl
je
stc
mov
inc
aad
rcl
cmp
xor
lret
mov
cmp
sahf
leave
mov
rclb
dec
scas
xchg
mov
inc
out
push
push
xlat
cltd
add
stc
xor
rolb
sub
jnp
mov
jnp
in
rcll
cmpsb
mov
or
iret
movsb
or
sub
push
incb
bnd
and
dec
xor
testb
movsl
push
add
iret
addr16
repz
aas
inc
mov
pushf
or
cmpxchg
shll
lods
pop
inc
mov
mov
into
frstor
mov
adc
push
aam
cmp
flds
jle
addl
mov
aas
lret
pop
sbbb
mov
sahf
lret
cmp
imul
cli
mov
sub
ret
pop
stos
test
sub
sub
jne
aam
ret
lds
cmp
clc
cmp
repz
aas
outsb
dec
incl
push
sahf
push
cmp
pop
and
ljmp
scas
pop
lea
shlb
rcr
repz
and
jnp
shlb
js
hlt
loop
adc
std
rclb
mov
push
outsl
in
ror
add
sub
imul
in
aaa
iret
decl
shrl
sbb
xchg
and
test
mov
addb
or
call
jg
pop
jb
test
adc
in
sbb
lods
and
je
pop
in
xorl
lods
sbb
push
insl
test
xor
mul
pop
or
enter
mov
sub
lock
jne
sbb
dec
inc
adc
inc
push
rclb
in
pop
cltd
fildll
dec
jbe
push
dec
pop
mov
popf
mov
mov
mov
out
sbb
push
fisubl
xor
pop
gs
sbb
or
xchg
pop
loopne
scas
fsub
mov
inc
xlat
cmp
loope
add
xchg
icebp
scas
push
push
sub
mov
sarl
jae
mov
mov
ljmp
into
mov
mov
mov
dec
inc
mov
pusha
test
xlat
bound
js
testl
lods
test
sub
sti
repnz
xchg
jmp
icebp
sbb
stos
sti
lods
sub
aad
pop
cmpsl
mov
testl
gs
sub
jnp
dec
mov
add
test
xor
inc
push
in
scas
and
mov
inc
sarl
mov
popf
and
in
popf
dec
sbb
and
or
arpl
fisubrs
lret
pusha
imul
jns
imul
in
es
loopne
inc
repz
push
adc
xor
ss
in
negb
pop
mov
enter
fisubrl
shll
popa
push
adc
adc
jecxz
dec
and
das
test
mov
cmp
aas
inc
fdivr
in
cmpsl
test
jge
test
and
cmp
xlat
mov
mov
lods
mov
mov
adc
pop
int3
sub
xabort
and
mov
sub
push
rcrb
jne
aad
xlat
pop
mov
sahf
xchg
mov
push
daa
addr16
adc
fmulp
adc
pop
push
clc
xchg
dec
lret
xor
mov
dec
cmp
lods
xorl
push
push
stos
out
data16
shlb
dec
movsb
mov
aad
lahf
clc
mov
cmp
jo
xor
outsl
ret
gs
sub
fdivl
adc
inc
sbb
loopne
mov
cmp
test
xchg
pusha
sub
fisubl
ret
push
mov
daa
inc
xor
outsl
jge
outsb
adc
push
sub
hlt
inc
dec
pop
pslld
inc
sub
dec
sbb
pop
mov
mov
inc
mulps
mov
sub
jl
and
iret
pop
nop
pop
and
mov
add
cmp
inc
stos
jb
xor
mov
es
cmpsl
cmpb
sbb
adc
shll
xchg
sbb
mov
push
inc
adc
sbb
push
push
hlt
mov
clc
sbb
scas
or
jb
and
push
inc
sub
lods
gs
push
jmp
mov
inc
shll
andb
jbe
fs
mov
sbb
sub
sbb
fimull
cwtl
insl
or
and
cld
xchg
mov
pop
jle
jo
ret
push
lock
shrl
inc
loop
jg
jbe
sbb
lea
cli
adc
jo
xchg
xor
mov
pop
push
mov
movsb
lret
int
lods
in
cmp
aaa
pop
push
ret
cmp
ffree
xor
cli
mov
sub
xor
pop
jnp
xchg
xor
out
and
sbb
adc
push
out
jns
sbb
mov
push
out
push
test
lods
and
jecxz
push
out
jle
or
mov
pop
sub
scas
pop
inc
push
in
jecxz
inc
cld
pop
std
cmp
int
inc
scas
push
clc
pop
ret
mov
sbb
xor
pop
pop
dec
or
loope
mov
stos
aaa
pop
and
push
dec
push
movsl
das
repnz
cwtl
scas
shll
and
xor
pop
ljmp
push
jae
lock
lcall
hlt
adc
das
push
fwait
enter
or
ljmp
sbb
cmpsl
enter
sarl
pusha
popf
bound
pop
repz
and
in
pop
adc
push
imul
pop
lock
jb
or
fsubrl
std
in
adc
out
subl
jno
push
lock
scas
faddl
stc
push
dec
cs
jg
and
stc
mov
mov
xchg
lret
mov
and
mov
lds
and
sbb
nop
adcb
rcr
shlb
push
mov
sbb
je
jbe
fwait
lods
add
add
mov
flds
out
xor
rcrb
push
in
add
fs
shrb
cmp
pop
outsb
or
ja
push
or
push
call
sbb
int3
push
out
ror
fcoms
mov
sbb
filds
or
mov
xor
push
xor
push
imul
imul
stos
popa
push
icebp
nop
ds
push
sbb
fisubrl
fistpll
xchg
repnz
rcll
lods
xor
add
adc
out
in
mov
sub
jnp
sub
insb
cwtl
xchg
add
xor
push
ljmp
push
popf
mov
addr16
cmc
mov
cld
sub
mov
in
sahf
negb
fwait
push
aam
mov
fldenv
fistpl
cld
dec
jge
testl
cmpsl
pop
dec
aaa
xchg
nop
cld
in
daa
aas
cmpl
orb
aas
jmp
imul
into
loop
xor
jecxz
cmp
in
pop
mov
iret
xchg
and
test
nop
notb
sahf
pop
lds
dec
int
mov
lahf
out
mov
leave
jb
inc
xor
cli
fisttpll
ds
fucom
movsb
pushf
hlt
hlt
lea
jg
mov
dec
inc
repz
ss
aaa
out
outsl
pop
sbb
arpl
push
cmp
lea
popa
mov
bndldx
mov
orps
out
xchg
in
je
lahf
fsts
insb
xchg
iret
fcmovbe
xchg
or
inc
insb
imul
or
push
les
stos
sbbl
mov
dec
or
mov
movsb
dec
lcall
adc
es
sbb
out
lods
cmp
xor
adcl
sub
ret
test
sub
jmp
dec
je
test
call
mov
stos
les
int3
in
aad
jnp
stc
test
movsb
xchg
add
ss
push
adc
or
xchg
xchg
ret
fldt
cwtl
test
lret
xchg
ja
scas
mov
xor
mov
cmp
jp
jne
mov
sahf
daa
xchg
out
lsl
push
mov
xor
stos
test
cwtl
imulb
out
repnz
dec
xor
jecxz
or
out
in
loopne
in
and
mov
push
insb
filds
push
push
in
push
xor
sbb
jp
mov
cmp
pop
xchg
and
xor
push
scas
jns
scas
xor
push
sahf
mov
adc
ficoms
hlt
ja
lds
mov
adc
fdivl
lods
xchg
mov
jecxz
lret
addr16
jmp
scas
dec
loop
js
sbb
cmp
stos
ret
loop
and
cltd
xor
mov
add
loopne
jp
jb
pop
rcll
aaa
imul
hlt
imul
divb
and
lahf
pusha
inc
test
adc
jl
push
call
jno
movswl
test
jnp
add
xchg
in
test
arpl
push
mov
out
push
mov
inc
out
ljmp
push
xor
pushf
adc
daa
repz
and
imul
cld
gs
pop
cmp
jb
cmc
jge
mov
test
pop
test
sub
inc
pop
ss
and
test
sbb
or
sarl
repz
outsl
and
adc
xchg
sbb
sahf
insb
int
xchg
daa
dec
sub
mov
jp
inc
fsubp
fcoms
sbb
xor
dec
idivb
add
dec
sbb
mov
dec
pusha
stc
loope
fcomip
loop
pop
sub
push
data16
xor
jnp
stc
and
insb
lock
and
push
xorl
dec
cld
pop
sub
enter
repz
xchg
pop
push
cmp
insb
mov
in
je
inc
mov
pop
ret
jae
sub
mov
sub
sahf
xor
fsubl
addr16
lsl
inc
cld
repz
aad
stc
js
mov
xor
fbld
das
pop
clc
lods
cwtl
mov
jge
es
xchg
mov
sub
add
daa
dec
into
cmp
sbbb
push
movsl
mov
mov
fwait
enter
shlb
sub
or
pop
pop
lock
mov
divb
fs
jg
ss
cmp
add
clc
sahf
in
repz
and
dec
push
stos
mov
add
mov
lahf
pop
lret
mov
iret
or
pop
fmull
test
dec
mov
sbbb
mov
call
mov
test
xor
push
jecxz
add
dec
push
ror
mov
dec
inc
ficompl
xor
inc
xor
lcall
loopne
xchg
pop
xchg
lret
push
shr
ret
mov
pop
mov
jl
rcll
imul
xor
cmpb
inc
and
mov
leave
xchg
mov
aam
sub
pop
loopw
xor
dec
fcompl
into
mov
int3
scas
mov
fsubrp
pusha
das
and
xor
jne
jo
jbe
mov
lret
stc
rclb
repz
cmpsl
clc
popf
jl
jbe
ss
jmp
push
adc
int3
inc
mov
movsl
stos
xchg
lcall
lea
into
cld
fisubrs
jp
cmp
sbb
mov
data16
pop
divps
rolb
mov
in
bound
xlat
xchg
sub
popa
je
add
mov
xchg
cmc
sub
push
mov
cmp
fistps
std
push
fisttpll
and
cmp
mov
cmp
push
das
fnstenv
xor
int3
in
aaa
call
mulb
icebp
lods
lods
into
and
repnz
cmp
pop
adc
daa
xor
xor
sub
in
scas
daa
adc
push
cld
adc
cmp
mov
xchg
jl
pop
inc
scas
rcl
jo
mov
xor
mov
and
fimuls
mov
xor
out
ret
insl
dec
inc
test
std
push
popf
mov
cmp
dec
out
sub
inc
sbb
pop
adc
enter
dec
inc
lock
or
lods
orl
cld
pop
dec
add
dec
dec
lock
or
addb
sbb
mov
pop
pop
add
lods
fwait
inc
inc
dec
sahf
stc
xchg
add
xchg
js
add
sti
adc
addl
int
pmulhuw
sub
cmp
lods
add
xlat
cltd
aam
daa
sahf
add
ret
lds
fildll
xchg
pop
hlt
cmp
mov
inc
ljmp
dec
lahf
mov
loop
jnp
sbb
push
jle
mov
fdivl
leave
jne
inc
jno
jp
fnstcw
lret
cmp
jae
dec
or
inc
enter
pop
dec
sub
leave
jno
jmp
fisttpll
mov
xor
push
pop
movsl
sub
sbb
mov
xor
cmp
and
xchg
pmullw
jecxz
jp
repz
adc
in
sbb
loop
cmpsl
in
je
fstps
aaa
aam
fs
stos
push
scas
not
in
add
movnti
stos
xor
enter
jg
es
enter
lret
popa
in
lock
out
adc
lret
lret
test
aam
mov
adc
inc
push
loopne
push
mov
fsubrl
adc
sub
and
push
aad
repz
inc
rclb
andb
push
xchg
sti
and
ss
fcompl
or
inc
push
mov
in
pop
mov
push
outsb
add
mov
or
jno
mov
adc
push
ljmp
loop
enter
test
add
lret
jle
repz
mov
lods
mov
add
js
testl
xchg
xor
sbb
sbb
cwtl
pop
push
dec
add
cmpsl
out
mov
lds
push
dec
push
inc
jmp
arpl
lea
cmp
scas
sbb
push
iret
in
adc
jno
in
pop
mov
int3
aam
xchg
cmp
mov
pop
add
adc
test
adc
es
adc
mov
mov
mov
test
cli
das
flds
jbe
jle
dec
pop
aad
jge
xchg
out
jmp
mov
sub
add
lods
ja
adcb
xchg
pop
xchg
lret
movsb
mov
repnz
stos
xlat
jle
xchg
mov
pop
pop
xchg
sbb
xchg
push
push
out
adc
loope
dec
push
push
in
sbb
scas
mov
stos
add
rorl
jb
scas
cmp
adc
rorb
das
in
jae
les
std
xor
sti
mov
out
jns
mov
xchg
ret
insl
call
scas
mov
or
push
adc
loop
test
outsb
add
ss
daa
lods
dec
push
cmc
mov
cmp
cwtl
add
xor
jo
inc
sahf
mov
xchg
mov
inc
sbb
or
in
inc
sbb
aad
imul
ret
int3
jne
mov
mov
push
dec
pop
inc
ljmp
out
jp
rorw
js
cltd
add
and
mov
in
jne
std
aas
xchg
clc
add
push
lret
pop
mov
cmp
mov
sub
cli
in
dec
bound
out
push
neg
lock
pop
mov
dec
outsb
xchg
mov
in
data16
test
ljmp
scas
mov
mov
jb
icebp
imul
adc
jo
push
add
pop
mov
jmp
rorl
xchg
mov
popa
repnz
fstps
popf
aas
push
ds
jbe
test
xchg
jle
test
test
push
jmp
jge
cmpsl
sub
outsl
bndldx
jne
dec
incb
in
or
cmpsb
xchg
xor
gs
nop
call
rcrl
subl
leave
and
fs
pushf
lret
mov
add
fldcw
scas
cld
dec
shlb
shl
add
mov
mov
js
popl
push
pushf
jmp
cmp
mov
push
leave
fs
out
in
pop
add
or
jg
or
pop
int
and
xor
jp
jle
divl
dec
addr16
es
std
imulb
adc
cmpb
adc
sbb
gs
pop
push
inc
scas
aad
std
jno
mov
sbb
mov
aaa
jmp
fcmovnbe
jmp
jge
pop
xor
xchg
flds
push
in
or
push
xor
sub
aam
pop
test
pop
arpl
add
je
xchg
les
and
or
leave
jb
adc
pop
sub
xor
pop
dec
xorb
or
sbb
sub
into
sbb
pop
lret
sbb
insb
sub
movsb
jge
inc
daa
sub
or
xor
nop
xchg
lea
push
mov
jnp
rcl
dec
jl
iret
inc
jns
mov
sbb
insb
scas
mov
lret
repnz
loopne
shlb
inc
push
inc
adc
orl
cmp
sahf
push
cltd
jb
stos
xchg
jle
icebp
pop
pop
idivb
push
mov
inc
lods
cltd
jne
into
das
data16
dec
pop
adc
lret
pop
jle
lret
adc
outsl
add
movsl
nop
mov
int3
dec
aaa
je
mov
gs
fwait
js
and
pop
or
and
sbb
ret
cs
add
or
jne
repz
jo
in
shlb
stos
cmp
dec
push
jo
push
push
pop
adcl
xor
mov
stos
dec
pop
and
add
adc
andnps
mov
mov
xlat
addr16
and
cld
mov
int
xchg
call
fnstenv
dec
jle
jb
out
lock
loopne
cmp
addr16
xchg
sub
sub
mov
push
nop
test
sub
imul
xlat
mov
icebp
mov
fcompl
and
dec
movb
dec
mov
inc
mul
mov
in
aad
jne
pop
enter
jo
cld
push
cmpsb
sub
arpl
mov
nop
fidivl
test
in
outsl
inc
adc
repnz
add
xor
in
cmp
ja
adc
dec
sub
fwait
xor
dec
adc
test
in
inc
xchg
insl
pop
pop
clc
data16
js
and
push
test
push
pop
bound
xchg
adc
mov
repz
out
mov
jae
jne
mov
inc
shlb
push
movsb
ds
es
push
incl
mov
jecxz
jne
cmp
push
sub
inc
mov
loop
fnstsw
movsb
out
stos
sbb
pushf
push
dec
sti
pusha
sahf
fisubs
cmovle
push
outsb
es
hlt
popa
xchg
jecxz
mov
ret
das
jge
imul
stos
cli
pushf
push
testb
mov
pop
jp
ret
aas
imul
mov
dec
mov
in
int3
stc
stos
push
scas
adc
daa
lahf
orb
mov
bound
or
daa
mov
movsb
out
test
xchg
xlat
fnstsw
mov
jns
test
loope
shll
push
icebp
lahf
pusha
fs
ja
test
lds
lock
xchg
loop
inc
jb
rcl
cmc
xchg
jg
in
and
mov
sub
adc
jae
mov
and
mov
dec
fcmovu
sarb
push
mov
lcall
cmp
sbb
mov
push
movsl
aaa
imul
cmc
mov
xchg
aaa
clc
inc
push
push
outsb
dec
adc
inc
aad
mov
icebp
nop
add
or
gs
out
mov
and
je
dec
jecxz
adc
lods
mov
outsl
sahf
push
mov
pusha
sti
clc
cmpsb
lods
cmp
frstor
test
sub
push
jnp
das
push
lods
mov
shr
and
mov
xchg
dec
adc
cmp
scas
ror
dec
jle
adc
popf
ret
mov
fs
xchg
cwtl
pop
aad
push
xchg
sub
or
xor
inc
jl
rclb
lods
aad
push
jne
mov
inc
and
or
xor
out
or
push
or
sbb
and
dec
jne
add
push
or
sub
xchg
sbb
stos
inc
nop
mov
cmp
out
ds
test
lods
loope
call
xchg
repz
mov
sub
or
mov
std
dec
mov
add
call
shl
adc
jno
cmp
mov
cmp
bound
jae
jb
xor
fisubl
test
sarl
pop
sbb
test
insl
idiv
inc
mov
es
pop
mov
mov
sbb
ljmp
ficomps
mov
pop
aam
mov
jo
pop
cs
sbb
bound
ss
sub
sub
xor
xchg
xchg
movsl
pop
pop
push
xor
mov
into
and
mov
push
mov
push
mov
shr
mov
mov
lret
xchg
xor
mov
daa
fsubl
aad
gs
das
pop
push
xor
rclb
dec
sbb
sahf
dec
scas
jnp
jnp
enter
aaa
fisubl
test
mov
decl
in
jmp
and
ret
mov
push
or
insb
push
adc
or
sbb
daa
aas
stos
mov
xor
rcl
stc
mov
ret
jmp
fdivrs
sbb
test
stc
test
subb
arpl
fsubl
imul
leave
sbb
dec
jb
sarl
push
jb
jmp
mulb
mov
sarl
ljmp
mov
jp
fldenv
pop
adc
inc
cmp
loop
mov
inc
stos
push
leave
in
sub
add
or
push
inc
adc
jne
pop
addr16
jns
mov
dec
lds
pop
xchg
pop
adcb
and
xchg
jne
pusha
adc
adc
add
inc
xor
jo
sub
add
dec
pushl
adc
mov
xor
setnp
xor
das
js
adc
jne
jno
and
into
jge
int
cli
incb
repz
mov
adc
adc
daa
getsec
test
fnsave
cmpsl
out
inc
mov
pop
jne
insb
mov
push
xchg
xchg
lret
data16
jne
push
arpl
js
imul
xchg
fcoml
inc
mov
sbb
xchg
cs
cmp
scas
adc
lahf
cltd
xor
in
adc
in
rclb
dec
insl
loop
push
pop
xchg
cwtl
sbb
cmp
aam
mov
inc
outsb
add
add
xchg
sti
test
fildll
adc
push
ror
xchg
clc
dec
adc
jle
test
pop
mov
imul
shll
stos
outsl
shl
sbb
std
push
and
xchg
push
das
lods
push
push
outsb
icebp
xor
mov
jb
xchg
jnp
mov
sub
jmp
mov
and
adc
inc
pop
popa
in
sbb
cmp
inc
rcll
pop
pop
int
mov
mov
imul
mov
push
movsl
jo
sbb
arpl
sub
sbb
movsl
push
jge
sbb
repz
int
rol
int3
mov
sub
mov
cmpb
sbb
sbb
jb
icebp
jne
cmp
aas
insb
pop
jnp
call
imul
pop
inc
push
adc
mov
mov
loopne
push
add
sub
mov
push
mov
outsl
mov
ljmp
idiv
ret
sahf
sti
lret
sar
cmpsb
mov
xchg
stos
repz
insb
das
mov
sub
enter
mov
js
push
es
adc
sub
xor
xor
sbb
outsb
and
cmpl
inc
das
push
mov
push
xchg
xchg
clc
notl
mov
push
inc
cmpsb
cmp
out
pop
xchg
cld
shll
lea
jbe
push
xchg
xor
mov
call
ss
lea
test
out
lret
inc
outsl
pop
inc
jo
jg
fwait
sub
push
xchg
stos
aad
pop
xlat
mov
aad
test
ss
and
or
cmp
mov
cmp
cmp
lock
mov
mov
fstps
jno
test
iret
fists
dec
sbbb
push
lock
aad
data16
aaa
and
mov
xchg
imul
shlb
jmp
sbb
adc
in
pop
dec
addr16
or
popf
xchg
push
sahf
fmull
movsl
insb
mov
mov
cmp
or
inc
cli
icebp
sbb
shlb
repnz
jp
adc
fisttpll
dec
testb
fs
fsubrl
xor
xor
roll
jne
das
stos
popf
inc
mov
dec
push
loope
mov
subl
shl
ror
cmp
sbbl
cmc
cmp
mov
cmp
arpl
jp
push
dec
scas
clc
fwait
pop
jno
jmp
ljmp
sbb
pop
out
mov
les
add
mov
push
out
sbb
in
addb
shrb
inc
or
xlat
add
test
aam
lret
popf
push
scas
loope
jecxz
jbe
test
cmpsl
add
test
push
cmp
enter
pushf
stos
mov
dec
push
cmp
mov
outsb
lods
push
push
clc
ja
icebp
outsl
dec
sbb
push
push
cmc
push
push
xor
jnp
pop
cmp
cmc
mov
data16
ret
test
inc
loop
js
xchg
jecxz
leave
mov
xchg
jae
xchg
je
and
shr
enter
jp
aaa
mov
addr16
adc
fmul
mov
sub
iret
sub
fdivrl
addr16
xlat
jb
stos
cmpsb
jne
sbb
jns
pop
fnop
les
xchg
repnz
rcrl
ret
jle
movsl
mov
ret
push
insb
sub
dec
insb
mov
jmp
ss
ja
fimull
iret
xor
mov
add
lock
scas
dec
push
in
ret
sahf
fcomps
cmp
ljmp
push
scas
pop
add
enter
movl
outsl
ficoms
or
pop
lods
mov
stos
push
and
pop
ljmp
sbb
popl
movsb
and
insb
mov
es
notb
les
add
xchg
stos
cmp
xchg
outsl
enter
std
adc
jno
daa
cmp
cmpsb
mov
in
mov
mov
imul
in
cmp
push
mov
dec
sub
lods
hlt
inc
dec
inc
sub
ret
shl
lock
rcrb
pop
mov
xchg
cmp
push
dec
std
ljmp
xchg
dec
xchg
loop
xchg
ljmp
dec
cli
cmpsb
or
loopne
or
cltd
std
stos
rcr
sub
in
sti
aad
xlat
cmp
sbb
idivb
push
mov
popa
fs
mov
jbe
and
es
movsb
cs
pop
add
cs
mov
and
test
test
movsb
mov
xor
lds
fwait
inc
add
les
sbb
jp
lock
loop
mov
xchg
lods
adc
subb
xor
or
pop
adc
nop
aaa
lret
mov
mov
xchg
outsb
cmp
and
and
cmpsb
dec
orl
pop
pop
mov
ss
cld
fdivrl
pop
das
fsubl
sarl
push
sub
pop
aam
pop
int3
fs
pmaddwd
ds
mov
dec
push
add
push
cmp
or
in
fnstsw
out
mov
daa
mov
cmp
pop
mov
mov
jle
popf
and
shlb
dec
cwtl
xchg
scas
lret
test
fdivs
adc
or
int3
and
leave
and
push
outsb
push
sub
dec
lcall
mov
fnstenv
std
xlat
push
les
sub
das
mov
in
icebp
add
mov
adc
add
movsl
dec
and
pop
lods
and
pop
push
leave
pop
insb
xor
inc
lods
aad
and
shrl
data16
cs
xor
add
xor
in
sub
fcomip
inc
or
hlt
xchg
movhps
mov
movsl
dec
subb
dec
out
xor
mov
adc
cmp
xchg
imul
xor
mov
addl
outsb
popf
push
pop
xor
jecxz
test
push
clc
xlat
mull
sbb
popf
fmul
iret
sti
shll
sbb
fsubrl
cs
or
push
jno
repnz
jl
stc
mulps
adc
mov
xor
pshufw
mov
ret
xchg
lds
add
mov
push
push
aas
je
scas
pop
insb
sub
cld
inc
ja
out
sarb
mov
inc
mov
iret
testl
scas
dec
adc
gs
adc
fdivs
pushf
jg
ret
lea
jne
iret
test
in
pop
bound
cmp
movsl
fnstcw
lcall
push
mov
mov
icebp
std
dec
inc
add
ljmp
xor
sbb
shll
ja
dec
jg
dec
movsl
dec
cmp
sub
sti
xchg
lock
lcall
mov
cmpsb
lds
lock
jp
repz
mov
adc
icebp
cmp
mov
setnp
imul
fisubl
imul
mov
xor
imul
bound
add
xchg
pop
fdivs
scas
cmpsb
leave
adc
scas
inc
mov
nop
push
add
cmp
pop
imul
jb
dec
ja
daa
and
stc
jg
push
rep
shll
push
push
out
xchg
call
adc
cmp
mov
addl
jge
aas
repnz
add
add
adc
sub
sbb
dec
pop
mov
sub
push
add
jns
mov
vmovntdqa
cld
adc
sub
pop
push
aaa
pop
push
jl
or
fadds
mov
push
pusha
dec
lret
notl
xor
and
push
js
sbb
in
adc
push
or
rol
push
dec
rorb
push
pusha
sub
inc
or
mov
add
int
and
shlb
adc
push
add
ret
in
push
arpl
add
push
mov
test
andl
inc
mov
mov
pop
sub
or
dec
adc
xchg
push
cmp
add
jp
out
adc
nop
test
into
les
mov
sub
mov
xchg
pop
les
cmp
sub
push
test
test
imul
inc
lea
mov
insb
icebp
jmp
repz
jbe
data16
adc
dec
test
and
int3
loopne
inc
fwait
int3
sub
insl
enter
mov
lret
mov
rcrb
icebp
andl
dec
out
push
inc
filds
sub
xlat
insl
mov
js
aaa
inc
sbb
xchg
jl
repz
xchg
jmp
pop
adc
sti
mov
pop
push
loopne
incl
in
cwtl
cmp
jg
popf
push
fsubs
lcall
aam
scas
imul
mov
adc
mov
outsb
pop
inc
inc
cli
mov
scas
sub
push
push
and
jne
mov
popa
enter
add
in
lret
repnz
pop
xcrypt-ofb
cmpsl
imul
cmpsb
inc
or
push
ficompl
lods
out
shr
pop
sub
lret
xchg
mov
fs
add
arpl
bound
jmp
test
rolb
fs
shrb
lods
fwait
out
xchg
sbb
pop
mov
cwtl
jl
mov
inc
out
ss
fisttpll
jnp
sti
in
sar
mov
add
pop
push
inc
loope
mov
sub
jle
sub
xorb
mov
arpl
mov
xchg
mov
lods
inc
int
add
popf
loopne
ss
das
adc
push
cli
ret
and
inc
mov
mov
dec
inc
or
dec
imul
mov
cmp
cs
jp
dec
inc
les
imull
leave
push
inc
sub
lds
inc
lret
mov
push
movl
adc
sub
sub
sub
ljmp
std
addr16
cmp
pop
ret
jb
fstl
lods
popa
push
jne
add
jo
mov
mov
lcall
sub
jne
dec
cmp
inc
sahf
and
dec
xchg
push
or
cmp
or
jne
call
pop
in
cmpsb
movsb
js
enter
shrb
lods
out
mov
aam
add
adc
jle
pop
dec
rcr
or
add
and
mov
add
jbe
js
js
mov
in
jne
jns
cltd
mov
clc
xchg
lahf
jnp
movsb
cmp
mov
xor
pusha
lods
jo
jae
pushf
test
mov
cld
push
dec
and
in
push
idivl
cwtl
mov
lea
adc
int
xchg
outsl
ret
jae
das
into
shl
mov
cli
add
mov
lea
mov
mov
dec
dec
sub
push
lcall
mov
aam
and
pop
mov
imul
jno
sar
cmp
push
outsb
icebp
nop
pop
inc
and
inc
mov
cmp
scas
push
and
mov
iret
add
xchg
arpl
mov
rcll
mov
or
jnp
xchg
ficoms
std
jmp
mov
adc
sbbl
push
mov
mov
and
cmp
jae
scas
xchg
add
push
sarl
xlat
ja
aad
daa
pushf
in
pop
jecxz
sahf
je
subl
jae
scas
in
cli
fstps
or
rcl
push
xor
lret
jo
adc
sbb
pusha
enter
dec
ffree
daa
repnz
push
fcomip
incb
cmp
sbb
pop
movsl
shl
ffree
bound
arpl
out
or
test
push
xchg
pop
push
xor
cwtl
fisttpl
xor
fsub
mov
mov
mov
int
xor
jecxz
sub
and
stos
push
dec
and
out
enter
out
cmp
mov
sbb
idivb
lcall
stos
mov
adc
lock
push
cltd
dec
repz
adc
int3
std
ficomps
lods
aaa
js
mov
pop
cwtl
int3
stos
popa
push
cli
enter
je
mov
push
and
cwtl
movsb
xchg
rcrb
mov
push
enter
add
cmp
push
clc
mov
popf
repnz
and
in
mov
ljmp
sbb
xchg
and
xchg
mov
and
xchg
mov
scas
push
stos
mov
inc
or
test
sbb
test
orl
jne
ret
and
scas
addb
xchg
test
push
add
mov
mov
push
cmp
fnstsw
sbb
pop
push
jno
prefetch
or
insl
in
inc
jb
stc
lahf
cmp
arpl
xlat
stos
adcb
xor
inc
add
add
mov
mov
cwtl
mov
mov
sub
mov
xchg
xchg
ja
addr16
rorb
lcall
mov
shrl
push
xchg
mov
xchg
pop
pop
xchg
mov
pop
dec
xchg
ret
jp
lret
pushf
into
in
lds
xchg
repnz
sub
popf
push
andb
lret
andb
shlb
test
test
inc
add
lds
mov
cmp
lahf
mov
jb
loope
cli
sub
cmc
ret
test
sub
lcall
dec
imul
cmc
or
push
mov
faddl
sbb
pusha
and
xchg
or
hlt
call
lret
and
inc
xor
and
sub
cmp
outsb
sahf
pushf
mov
sub
push
dec
loop
idiv
sub
cmp
and
mov
fmuls
inc
xor
lods
clc
add
ja
mov
jg
mov
jp
inc
lcall
out
mov
mov
add
and
mov
inc
fdivp
sbb
lods
mov
mov
adc
dec
jg
mov
xchg
repz
bswap
insl
pop
daa
ret
je
loope
imul
lcall
mov
and
sahf
cmp
out
mov
inc
or
in
mov
adc
sub
ja
repnz
jmp
ds
lret
insb
add
push
out
das
mov
pusha
xchg
pop
or
xor
mov
jno
nop
out
and
lret
movsb
fistpl
test
pop
xor
shlb
jecxz
clc
xor
push
dec
cmp
mov
push
sbb
inc
sti
sbb
or
sbb
aaa
mov
cltd
push
in
imul
es
pop
sub
cli
jp
sahf
leave
xchg
jae
mov
sbb
lret
scas
dec
je
ss
jl
cmpsb
sbb
loop
js
lret
decl
push
insb
lods
gs
cmp
inc
inc
aad
jb
addr16
fs
aam
popf
pushf
mov
out
dec
divl
mov
dec
push
mov
cmp
cmpsb
outsl
shr
cmp
push
xchg
dec
loope
leave
jne
jo,pt
std
mov
call
sti
dec
push
insl
xor
pop
push
pop
xchg
cmp
scas
or
subb
sbb
lock
push
jl
rorb
movsb
add
xchg
add
and
call
mov
fdivl
shlb
es
mov
pop
mov
adc
jne
sbb
lret
adc
jbe
popf
and
iret
jge
scas
fnstsw
pop
xchg
lods
mov
je
in
xchg
aam
and
push
mov
repnz
mull
push
xchg
cmp
or
adc
mov
iret
repz
push
push
sbb
mov
out
sub
les
mov
insl
lods
mov
test
movsl
sbb
jnp
loop
xor
mov
inc
ret
cmp
enter
pushf
push
iret
xchg
stc
mov
or
jnp
cmp
test
and
xor
jb
adc
std
cli
jecxz
inc
insb
sahf
test
insl
push
or
push
sahf
adc
mov
mov
and
mov
jno
xchg
sbb
adc
push
sbb
int3
adc
enter
pop
cmp
pushf
pop
sbb
fstl
adc
xchg
jp
popf
xchg
push
mov
rcrb
in
call
or
push
lret
adc
lret
sub
xchg
mov
out
mov
mov
insb
in
int
mov
inc
xchg
fisubl
jno
sarl
or
rcll
shll
cmpsb
or
sbb
lea
inc
ljmp
add
or
movsl
divb
dec
out
cmpsb
popa
sbb
lcall
jnp
pop
fucom
outsl
mov
ljmp
in
mov
dec
xor
stos
push
div
hlt
adc
out
lea
xor
pop
push
xor
fidivl
adcl
add
std
or
inc
inc
std
imul
std
push
mov
sbb
xor
pop
adc
inc
mov
mov
sbb
push
lret
js
std
mov
push
stos
pop
movsb
jnp
push
fmull
xor
cwtl
shll
xor
ja
fnstenv
mov
mov
dec
jbe
mov
fwait
stos
leave
push
xchg
mov
fwait
xor
inc
xor
shrb
push
add
jecxz
adc
jo
pop
sarl
sbb
xadd
or
icebp
dec
stc
push
jbe
push
sarb
loope
fisttpll
cmp
and
inc
subl
cmp
cmp
ret
cmpsl
cmp
roll
cli
pop
mov
xchg
sub
mov
das
pop
push
lods
xchg
inc
push
iret
xchg
mov
fidivrl
scas
cmp
aad
scas
das
mov
aaa
mov
inc
push
je
lret
push
add
adc
loopne
dec
addb
ljmp
in
dec
loopne
push
push
cmp
jns,pt
jns
cmc
jne
push
sti
inc
inc
xchg
outsl
xchg
aam
fcmovu
fidivrl
pushf
int3
call
aaa
out
clc
fimull
rorl
add
stos
cmp
insb
sub
lods
andl
push
clc
jb
movsl
push
xor
lret
cmpsb
into
daa
push
and
das
cmp
inc
cmc
jo
jecxz
mov
mov
shll
xor
imul
mov
mov
mov
aad
outsb
xor
adc
rorl
into
jecxz
and
stos
xchg
lret
inc
sbb
daa
or
sbb
cwtl
push
std
xor
or
xlat
aam
pushf
pop
jl
js
sbb
outsb
dec
sub
aad
jne
add
fidivs
pop
cmc
int
insb
sub
cli
pop
hlt
mov
cmovg
addr16
xchg
mov
sbb
mov
lods
push
push
inc
idivl
dec
mov
sbb
mov
xor
scas
lret
into
sub
pop
popf
xor
insb
fcmove
aaa
sub
lahf
scas
xchg
and
add
mov
xor
mov
mov
inc
daa
dec
leave
leavew
mov
fisubs
notl
lods
leave
mov
in
lret
xor
ljmp
add
scas
dec
add
or
scas
pop
mov
push
imul
loop
inc
stos
ret
popa
jmp
fs
inc
cmpsl
mov
pop
into
es
mov
and
add
test
fsubs
dec
dec
in
dec
mov
pop
xchg
movsl
adc
xchg
and
pop
lcall
mov
xor
pop
sub
out
inc
loope
sbb
pop
or
sbb
jae
inc
mov
aas
cld
mov
into
add
and
pop
add
icebp
aad
dec
mov
test
repz
mov
jp
jno,pt
jge
sub
jmp
inc
xlat
cmc
jl
mov
sti
jne
test
cmp
pop
rclb
lds
icebp
aaa
jp
sub
sub
mov
dec
hlt
arpl
xchg
roll
xor
aam
imul
pop
dec
pop
fcmovb
mov
shr
mov
int
xchg
pop
or
lods
cwtl
xor
test
mov
inc
jp
shl
insb
int
and
fnstenv
mov
pop
and
adc
mov
xor
dec
dec
xlat
mov
in
lret
insl
je
pushf
andb
pop
int3
imul
and
xchg
xor
sbbl
lahf
mov
fldenv
sbb
inc
fildll
into
cmp
stos
jmp
pop
lahf
cmpsl
lret
fwait
mov
stos
adc
sub
jbe
jnp
adc
xor
call
pop
sbb
xchg
mov
push
xor
push
sub
mov
cmp
test
xor
push
idivl
fisubs
pop
arpl
cmp
imull
sbb
xor
pop
mov
adc
jge
inc
lcall
loopne
out
ja
cmp
jg
cwtl
test
test
test
mov
xchg
mov
xlat
and
xchg
jp
jbe
daa
pusha
out
push
jno
jge
cmpsl
jno
out
dec
test
das
mov
sbb
hlt
mov
and
int3
and
test
xor
ja
dec
xor
int
lods
adc
scas
and
and
pop
pop
pusha
lods
adc
pusha
xor
orl
and
aas
cmp
loop
mov
adc
addr16
sub
call
pushf
cmp
jne
jne
pushf
xchg
push
pop
cmp
dec
cld
adc
fdivs
inc
push
bnd
in
xor
outsl
shl
pop
pop
popa
outsb
and
cmc
inc
test
enter
mov
inc
inc
andl
push
lods
fs
cmpsb
push
dec
ret
in
jmp
cmp
xchg
add
adc
xor
mov
inc
push
arpl
inc
les
cli
out
or
addr16
in
in
lahf
dec
shrb
mov
dec
sub
mov
mov
mov
cmp
fsts
movsl
inc
mov
or
inc
mov
mov
mov
and
push
mov
fsubrp
adc
rcl
pop
out
rclb
inc
and
jnp
fistps
jb
pop
inc
sub
pop
push
cmpsb
push
ljmp
cmp
xor
fstpl
push
xchg
cmp
lds
lods
imul
add
mov
mov
shll
jmp
add
gs
sbb
loop
xlat
jb
jmp
pop
inc
xor
subl
mov
outsb
imul
push
pop
push
iret
clc
cs
dec
stos
fimull
adc
jg
mov
pushf
push
or
dec
pop
decb
outsb
nop
je
sarl
adc
mov
and
add
divl
not
pop
push
adc
in
pop
ficoms
mov
and
adc
mov
pop
push
add
dec
add
dec
lock
cmc
xlat
jle
mov
fs
imul
lcall
xchg
sub
dec
xchg
iret
mov
int3
iret
clc
cmp
xchg
dec
in
jl
push
ret
lret
pop
inc
lods
mov
jno
out
dec
xor
and
jb
inc
daa
fidivs
mov
out
push
push
divl
cwtl
jb
fimuls
out
test
int
int3
inc
xlat
pop
lds
xchg
sahf
jle
push
inc
pop
push
in
sbb
xchg
xchg
loop
push
jp
mov
into
push
xor
jmp
mov
cmp
inc
les
in
clc
pushf
ds
pop
lds
jae
clc
mov
in
cmp
adc
xor
insb
loop
orb
sbb
and
mov
fdivs
dec
pop
cmp
fdivs
js
stos
jmp
cmp
ret
cmc
jmp
es
test
push
xor
push
sub
mov
jl
add
inc
ret
ja
cmpb
ss
mov
pop
cs
leave
scas
push
test
sub
cmp
rol
jp
arpl
jns
sub
pop
leave
dec
in
xchg
adc
sbb
or
mov
mov
inc
dec
or
sub
adc
adc
sbb
cmp
xlat
cmp
rorl
sub
fwait
jp
js
lahf
in
iret
add
inc
sub
jne
les
lea
push
scas
dec
mov
jnp
inc
popa
inc
aam
sub
jo
adc
dec
lcall
fisubs
ljmp
dec
out
xchg
add
int
adc
jge
xlat
out
leave
mov
xor
add
cmp
hlt
mov
iret
adc
adc
adc
pop
stc
jns
fwait
mov
call
dec
ss
loop
xlat
xchg
pushl
add
add
xchg
int3
mov
cmp
insl
xor
fstpt
lcall
mov
fdivs
jge
int
xchg
mov
pop
sub
cmp
jae
pop
lock
stos
mov
icebp
outsb
mov
xchg
adc
pop
mov
enter
inc
ljmp
int3
mov
cmp
in
push
lods
dec
fwait
sbb
xchg
adc
std
into
lcall
cmp
ja
push
dec
out
and
cltd
add
or
adc
inc
push
mov
cmp
add
xchg
xor
cmpsl
ret
addl
outsl
pop
fucomip
mov
in
xor
cmpsl
pop
mov
inc
fisubl
mov
scas
jb
add
sub
or
xor
enter
fs
fisubl
daa
push
movsb
pop
cmp
adc
lods
dec
xchg
cld
push
or
in
pusha
and
mov
loop
mov
lods
nop
scas
andl
cmp
adc
or
int
stos
xor
or
mov
cmc
mov
clc
push
test
mov
subb
int
fcmovbe
cmpsl
fbstp
xchg
dec
add
std
mov
dec
mov
adc
enter
jle
pusha
dec
adc
aas
pop
inc
adc
adc
push
shl
add
nop
mov
xor
adc
sbb
jo
es
push
stos
std
insl
or
inc
pop
sbb
and
and
mov
sub
xchg
int
fstl
mov
pop
loopne
push
daa
dec
rcrl
loope
jae
adc
sbb
inc
mov
jne
sbb
push
into
popa
popf
cs
out
insb
into
push
cmp
movsl
cmpsb
push
mov
mov
dec
mov
mov
in
pop
adc
pop
pop
in
cmp
xchg
imul
insb
scas
shll
push
in
out
sub
mov
xor
inc
xor
jl
mov
icebp
push
xor
cli
push
faddl
jne
outsb
les
pop
push
int
push
push
movlps
mov
rcrb
out
or
std
stos
ja
and
push
cmp
cs
in
adc
mov
icebp
mov
test
nop
pop
lea
ds
ret
outsb
push
popa
sbb
scas
inc
dec
dec
in
pusha
jb
call
add
and
dec
push
ds
dec
addr16
push
mov
shll
pop
popa
lcall
insl
out
int
mov
into
outsl
aam
mov
jecxz
test
adc
add
xchg
dec
dec
pop
mov
fimuls
das
shl
popf
xor
out
mov
ror
push
mov
push
out
sbb
lret
test
jmp
xchg
add
mov
jp
adc
pop
mov
inc
cmp
in
sbb
imul
inc
cli
push
cmp
lock
push
cmc
dec
mov
inc
inc
lea
jo
arpl
icebp
inc
inc
popf
mov
add
xchg
jp
inc
xor
test
xchg
mov
mov
test
push
imul
jnp
and
adcl
xchg
scas
or
std
repz
inc
lods
sahf
icebp
inc
adc
pop
repnz
and
push
das
mov
adc
fcmovu
dec
cmp
add
outsl
lds
jne
inc
rcrb
lock
adc
pusha
lods
cmp
call
popa
add
push
cmp
mov
in
push
ds
sub
sti
xor
xlat
add
jne
add
repz
rorl
ds
out
cmp
and
pop
mov
lahf
jbe
enter
sbbb
ret
fldenv
sbb
sbb
xlat
dec
loope
inc
sub
inc
movsl
push
cmp
inc
outsb
mov
mov
shrb
lahf
int
lret
daa
or
arpl
xchg
xor
scas
cmc
jecxz
mov
jle
xor
push
movsl
mov
xor
mov
mov
daa
mov
mov
cmp
movsb
std
mov
dec
add
mov
into
enter
cli
call
jmp
cmpb
lcall
push
pop
ljmp
pop
mov
sbb
jg
gs
dec
add
mov
imul
add
ret
jl
ficoml
xchg
mov
sub
ret
jmp
shlb
push
mov
adc
cmp
outsb
xchg
in
xchg
jg
arpl
jg
inc
pop
adc
jb
test
sbb
cmp
mov
push
mov
mov
jne
jb
mov
and
dec
and
inc
add
fbstp
push
pop
fdivs
xor
mov
fcompp
inc
xor
dec
mov
shl
xchg
jno
repnz
mov
pop
adc
fistps
sbb
je
sti
out
pop
repnz
jmp
daa
dec
insb
jmp
sbb
xor
shll
sbb
jg
rcrb
fsubl
leave
fwait
inc
or
pop
scas
pop
in
cld
imul
clc
mov
pop
gs
punpckhwd
clc
outsl
ret
and
iret
outsl
mov
mov
in
mov
outsb
or
dec
lcall
mov
hlt
cmp
xor
sbb
movl
test
out
mov
dec
jmp
fs
adcb
inc
insl
popa
mov
insb
push
mov
insb
int
or
es
pushf
mov
ret
or
loopne
jno
fwait
add
xor
jo
push
dec
es
test
dec
outsb
aas
dec
sbb
icebp
pop
push
pop
push
push
mov
mov
mov
nop
sub
xlat
push
sahf
add
xchg
lock
pop
testw
xchg
sti
inc
dec
mov
cld
aad
pop
push
pop
jle
dec
pop
add
sub
rcrl
xchg
jns
inc
scas
imul
dec
aas
popa
pop
cmp
add
cld
movsl
lods
jns
mov
loopne
jnp
dec
imul
cmp
cmpsl
xorb
xchg
pushf
movl
pop
push
es
sarl
push
push
dec
sahf
push
nop
mov
push
and
jbe
dec
repz
mov
inc
pop
fistps
or
mov
xchg
xchg
ror
subb
leave
loopne
sbb
sub
pop
aaa
out
xchg
imul
insb
movsb
divl
aad
pop
ds
inc
jae
sti
sbb
call
into
into
cmp
xchg
pop
shlb
push
jno
pusha
data16
fs
dec
xchg
popl
pop
test
arpl
add
push
popf
jg
sub
sar
dec
repz
mov
mov
cmp
ficoml
push
cmp
dec
out
bound
xchg
data16
adc
sub
lret
loop
mov
jge
jg
out
and
push
out
dec
sub
ja
dec
fmull
cld
jle
xchg
cmpsl
fdivp
jp
and
jb
jnp
mov
je
sub
out
xor
imul
enter
sbb
ret
lock
out
insb
inc
add
adc
ret
and
enter
inc
cmp
inc
sbb
daa
les
inc
jl
pop
cltd
ret
sub
push
std
pop
in
push
test
adc
das
ds
mov
or
mov
push
mov
inc
je
mov
bound
or
pop
inc
and
mov
fmulp
lcall
pop
hlt
inc
add
stos
ds
in
lea
loopne
pop
mov
stos
lods
aam
lods
and
cld
mov
or
add
insl
xorl
sbb
mov
mov
or
scas
sub
sbb
pusha
lock
mov
orl
lock
fwait
popa
ret
inc
adc
cld
mov
push
cmpb
jno
dec
scas
pop
mov
rcrb
aad
popa
pop
sbb
pop
push
pop
pop
xor
push
pop
cmp
popa
stos
sub
jo
add
jg
mov
nop
add
ss
daa
imul
adc
cmc
mov
aaa
mov
movl
clc
xorb
jnp
or
movsb
lret
pop
sbb
adc
jge
pop
cld
iret
lret
adc
outsb
cmp
ja
mov
sbb
lock
ret
mov
mov
pusha
dec
test
fwait
or
loop
push
es
mov
jg
sbbb
lcall
jecxz
enter
xchg
xlat
jo
pusha
bound
inc
sub
stc
sbb
ja
mov
cmp
mov
mov
sub
push
cmc
fwait
sub
lret
pop
xor
out
fistl
lahf
fsubl
pop
push
or
push
aam
mov
jae
les
call
sbb
loope
sti
scas
cmp
jbe
inc
addr16
cwtl
push
fnstenv
adc
or
dec
mov
push
ja
and
xlat
shr
push
mov
ss
push
in
inc
mov
cmp
dec
es
mov
ds
stos
mov
das
or
fsubr
pop
jno
sub
cmp
xchg
add
cmc
mov
mov
shlb
xlat
cmp
pop
shll
jge
mov
jnp
fidivs
lds
pop
adc
rep
pusha
mov
rorb
dec
or
jnp
mov
lret
into
pop
fistl
and
sub
add
fistpl
adc
insl
adc
jno
mov
std
cmp
out
out
cld
sbb
dec
xor
and
sbb
pop
idivl
ret
mov
repnz
loopne
notl
sbb
lds
cmpsb
insl
scas
loope
add
notl
mov
ret
sti
mov
push
imul
xor
pop
in
inc
cmpsl
mulb
negb
push
jp
test
bound
sub
inc
fsubs
sbb
cwtl
sarb
stos
mov
jmp
lds
sbb
pop
cmp
repnz
cwtl
cmp
in
sbb
adc
and
or
cmp
pushf
mov
sub
jge
add
movsl
add
inc
loopne
lods
pop
xchg
repz
dec
push
and
sahf
sbb
popf
into
lds
fsubs
lods
aas
ss
lock
insl
dec
sti
xchg
fs
out
mov
aam
mov
enter
mov
lahf
dec
fdivrl
rcll
mov
inc
inc
jne
or
ret
out
xchg
or
adc
in
addr16
mov
scas
jle
jmp
imul
xchg
xor
adc
hlt
rclb
filds
cmpsb
dec
std
rcl
pop
xlat
enter
and
inc
mov
sahf
and
jne
inc
test
or
jno
sub
or
lods
fs
out
movsbl
and
clc
xor
xor
rcrb
shrl
inc
leave
xchg
cvttps2pi
add
pop
sub
cmp
mov
jmp
adcl
insb
ret
jne
stos
shll
fs
mov
mov
call
sbb
hlt
fcomps
cmp
fsubl
cmpsl
cltd
inc
adc
sub
popf
add
ja
fcmovnbe
subl
push
and
insb
pop
lock
fs
out
mov
jmp
xchg
jecxz
js
sbb
ror
cmp
shll
add
je
lret
ret
add
outsb
lds
pop
aam
movsb
adcb
sarl
jnp
push
add
hlt
cwtl
push
popf
and
push
aaa
cmp
ja
jo
dec
mov
cwtl
jle
pop
lcall
xchg
les
mov
and
sbb
shlb
out
cmpl
or
or
inc
pusha
mov
adc
pop
cmp
scas
jp
aas
mov
or
xor
push
test
or
shll
imul
cmpl
or
push
lods
lret
mov
scas
cmp
fmull
jl
loope
mov
or
cmpsb
mov
fidivs
ja
adc
xor
fsubrs
cmpsl
testl
push
aaa
cmc
in
lahf
test
xchg
pop
lahf
lcall
mov
les
lcall
enter
lods
xchg
lods
xor
adcl
and
inc
leave
adc
in
stos
cwtl
rclb
inc
mov
and
lods
add
pop
fldt
call
fs
pusha
mov
jns
out
mov
insb
sbb
xchg
test
lret
mov
int3
cmp
pop
filds
pushf
sbb
mov
rcrb
pop
pushl
xchg
enter
scas
mov
push
and
push
cmpsl
aam
dec
push
and
fisubrl
mov
repz
dec
mov
xor
pop
cmovns
std
mov
mov
pop
xchg
mov
jl
cmp
daa
fadds
sti
or
sub
shl
idivl
jns
mov
jmp
rorl
and
adcb
jge
nop
add
in
jns
push
repnz
rcr
xchg
popf
adc
sbb
adc
xchg
lock
js
hlt
add
test
xor
mov
mov
rorb
pop
adc
mov
repz
add
push
add
jecxz
cmp
leave
das
loope
cmpsb
stos
loop
aad
lcall
mov
inc
jp
push
notb
mov
mov
add
inc
es
hlt
out
xor
sub
add
dec
add
mov
cmp
addb
mov
dec
push
cmc
call
xchg
ret
stos
divl
fimull
stos
cmp
imul
adc
subb
je
jle
rcl
add
jg
pop
mov
xor
repz
lods
sti
or
xchg
test
sbb
aam
and
cld
jo
inc
push
lret
push
adc
in
dec
adc
arpl
mov
mov
inc
sub
mov
out
test
xchg
pusha
adc
xor
aam
fldl
pop
scas
push
scas
jg
addr16
cmp
adc
dec
pop
push
sub
stos
sti
and
mov
int3
clc
ljmp
in
rclb
outsl
arpl
pop
cmp
or
jae
dec
xor
jge
dec
shrl
jae
imul
sbb
mov
out
insb
dec
sub
stos
sub
mov
xchg
hlt
int
cltd
hlt
jg
mov
shrb
mov
ss
movsl
add
mov
outsl
jo
jno
sti
lcall
sbb
cmp
pop
adc
cmp
jge
std
push
int
push
cmp
mov
push
adc
fistps
push
in
in
xor
push
mov
xchg
cmp
xor
aas
test
dec
ud2
xor
sbb
adc
inc
lock
adc
sub
shrb
xchg
mov
je
inc
push
aad
mov
or
sbb
mov
movsb
je
daa
sbb
mov
les
in
pop
lcall
repz
enter
sub
lods
add
jl
test
mov
push
imul
call
call
dec
pushf
jge
pop
vmovhpd
mov
sub
sub
sub
pusha
sub
cmp
fwait
xor
stos
insb
jno
pop
testb
cltd
jnp
call
cmp
dec
mov
mov
fcmovne
adc
stos
jne
inc
sti
push
xor
add
inc
cmp
cld
and
fisubrs
sub
into
jp
mov
nop
int
or
xor
xchg
jno
aam
xor
rorb
rcll
fstpt
es
sub
out
cld
adc
sub
shr
add
lods
test
xchg
xchg
leave
fcoml
mov
aam
div
or
int3
in
sar
mov
xor
inc
in
nop
jecxz
jo
shlb
xor
adc
orb
mov
popl
mov
or
imul
jo
mov
sub
fs
cmp
cmc
jbe
jo
mov
dec
test
mov
adc
inc
dec
das
mov
adc
push
dec
cli
out
and
push
aad
jnp
mov
add
mov
xor
mov
pushf
mov
cli
inc
add
ret
lods
lret
jae
cmp
mov
jge
fldenv
fiadds
outsl
sahf
in
std
bound
pop
jg
push
fwait
fs
std
push
adc
fildl
push
ljmp
das
mov
sub
push
cwtl
and
dec
pop
insb
cmc
out
stos
fnsetpm(287
sub
int
ficomps
aam
decl
pop
arpl
cmp
rcr
xchg
rorl
aad
lahf
lea
xchg
inc
and
enter
mov
dec
out
rol
pop
lret
or
xor
lds
daa
mov
push
pop
push
fcompl
xchg
bound
cltd
loope
inc
add
sti
mov
andb
cmp
lea
mov
mov
sbb
jmp
xchg
lret
mov
jne
adc
pushf
insl
in
enter
push
sahf
int3
sbb
jnp
ljmp
repz
outsb
mov
ss
loope
scas
pop
insl
pop
mov
imul
rorb
fs
out
popl
mov
inc
imulb
cli
in
shlb
jne
cwtl
jae
nop
inc
dec
lahf
pusha
aaa
loope
cs
es
cwtl
adc
dec
roll
pop
cmpsl
cmpsb
sub
push
leave
xchg
in
inc
ja
clc
in
cs
push
dec
loop
lock
fnstenv
xchg
or
jle
aaa
push
mov
xchg
mov
test
lock
fcoml
stos
pushf
mov
or
jg
leave
xchg
adc
xchg
mov
dec
and
ret
notl
leave
ljmp
jge
push
xchg
adc
hlt
xor
xchg
xchg
daa
test
into
mov
stc
sub
dec
jnp
cmp
lea
loopne
movsl
imul
ja
daa
cmpsl
daa
dec
pop
iret
pop
scas
negb
rcrb
into
ja
xor
or
pusha
shr
push
ds
pop
mov
cmp
xor
pop
notb
addr16
out
es
and
mov
jl
mov
mov
aas
mov
inc
ret
cmp
inc
and
adcb
fdivrp
mov
data16
sar
pushf
push
mov
jno,pt
pusha
push
lods
jno
dec
adc
cmp
das
sbb
mov
pop
sahf
xchg
bnd
xchg
mov
das
sbb
push
jnp
scas
sub
rcrl
inc
adc
fs
inc
xor
pop
mov
mov
aaa
jg
mov
leave
lods
mov
sub
mov
xor
mov
dec
jp
filds
sbb
and
outsb
jle
outsb
pop
roll
add
js
jns
or
ljmp
out
pop
sub
xchg
dec
sub
mov
sbb
pop
std
mov
icebp
loop
aad
leave
mov
add
test
push
test
leave
in
popf
es
jae
bnd
mov
scas
lods
push
add
icebp
push
dec
fnstenv
add
scas
out
add
and
mov
insb
repnz
pop
stos
cmpl
stc
jmp
out
in
mov
lock
adc
jne
test
imul
ret
xor
add
jno
or
mov
inc
fnstenv
mov
movb
loop
pop
pop
fists
ljmp
push
xor
pop
fs
dec
sub
or
les
outsl
jp
adc
xchg
repz
dec
stc
cmp
jmp
fs
popf
flds
adc
je
mov
push
fsubrp
les
add
push
cmp
popf
xor
pop
or
subl
lcall
clc
cltd
fstl
mov
sahf
pushf
mov
mov
pop
adcl
push
std
dec
cmpsb
cmpsl
inc
popf
add
lea
push
cli
ljmp
xor
pop
outsl
mov
add
inc
mov
fildl
xchg
xchg
repz
sbbl
cmp
push
mov
js
int3
mov
sahf
iret
jnp
outsl
sub
dec
sub
inc
xor
enter
cmp
xchg
pop
jae
inc
add
aam
mov
sbb
sbb
popf
out
test
sbb
xchg
mov
and
repz
aas
adcb
sub
xchg
fwait
rcll
add
lcall
in
fs
pop
pop
movsb
out
jnp
sbb
cwtl
outsb
jge
push
push
inc
fstl
ret
xchg
mov
ret
xor
mov
jne
fwait
dec
iret
sti
out
xor
inc
or
cmp
mov
sub
adc
push
mov
and
add
aaa
outsl
pop
cmp
sbb
das
xlat
push
lods
outsb
push
push
int
lret
lret
rcr
sub
data16
jnp
mov
cmpsb
cmpsl
xor
test
mov
adc
mov
ficompl
shl
jns
adc
jb
mov
addr16
mov
pop
shl
jmp
pusha
add
lret
adc
dec
dec
test
lret
mov
cmc
xchg
or
call
mov
xor
jbe
cltd
ss
test
mov
je
mov
lahf
dec
fidivrl
sub
lock
orl
sbb
adc
insb
sbb
test
in
mov
cmpsb
cmp
xchg
cmp
mov
dec
inc
imul
cmp
dec
mov
cmp
jnp
jp
cmc
mov
das
lret
add
cli
jl
aas
adc
mov
cmp
xchg
les
stc
je
outsl
jg
loopne
shlb
pushf
insb
mov
jmp
and
scas
cmp
lods
daa
push
sbb
mov
mov
xchg
cmp
dec
test
cmp
or
ljmp
sbb
dec
sti
cmpsl
in
in
clc
shrb
repnz
scas
cmc
sbb
aad
push
movsb
pusha
jo
pop
mov
jns
daa
xor
pop
test
sbb
xor
lahf
and
jl
jg
sub
fdivrs
js
inc
xchg
push
cmp
adc
jg
jae
or
leave
das
nop
stc
mov
push
mov
aam
adc
xor
mov
loopne
xchg
adc
movsl
icebp
sbb
jecxz
cmpsl
loope
mov
sbb
shl
out
xchg
loopne
and
aad
mov
pop
inc
movb
ret
or
push
cmpsl
add
push
shll
xlat
or
jnp
in
scas
fcmovb
mov
cmp
push
std
imul
jmp
shrl
dec
aam
ljmp
cmpsl
sarl
inc
loope
xchg
in
movsb
cwtl
sub
call
pop
cmp
jmp
pop
xchg
imul
xchg
cmpb
movsl
inc
iret
push
scas
mov
mov
roll
mov
mov
out
cltd
mov
mov
lahf
sbb
call
adc
mov
dec
mov
into
pop
lods
je
jle
xchg
cmp
aaa
nop
dec
inc
xchg
push
jno
sbb
add
or
lods
lods
loop
adcl
sub
cmpsb
repz
stc
loope
je
mov
insb
fcmovnb
cmpb
adc
lods
test
dec
es
std
cwtl
cwtl
in
cmp
test
jg
xor
sub
popf
or
mov
jb
aaa
sbb
fiadds
out
cwtl
lcall
jb
ret
pop
dec
jbe
mov
or
daa
nop
jg
popf
in
push
xchg
mov
and
mov
popa
js
push
loopne
jb
test
hlt
mov
sbb
outsl
cmp
test
or
ret
ret
fisubl
adc
shlb
push
dec
fidivrl
mov
in
leave
inc
cltd
lods
out
gs
mov
dec
lds
in
jg
popa
jne
pop
xchg
jno
push
or
lret
loop
sahf
pop
and
inc
lods
fistpll
scas
push
fwait
mov
pop
and
xor
push
aam
adc
cmpsb
fldl
push
hlt
and
enter
and
add
lahf
jmp
xor
mov
mov
sub
shrb
inc
mov
ds
cmp
fisubrs
sbb
cs
mov
pop
lods
clc
testb
loopne
cmp
push
xor
gs
rclb
das
push
xchg
pop
pop
adc
push
add
mov
fadds
push
adc
or
dec
add
xor
aaa
pusha
inc
add
dec
xor
cmpsl
mov
jge
inc
xlat
push
cwtl
arpl
stc
pop
mov
push
popa
insl
out
lret
mov
dec
fadds
push
push
sub
call
push
rcrl
mov
push
dec
mov
cmc
dec
filds
cltd
or
outsb
clc
xor
mov
enter
xchg
pop
mov
pop
pop
stos
xor
or
pop
add
cmp
push
dec
popa
push
jmp
and
jg
or
or
andl
push
adc
xchg
adc
mov
jne
fnstenv
mov
fisubrl
cltd
sahf
push
xlat
fxsave
or
addr16
mov
inc
aad
dec
add
jge
adc
test
or
mov
jl
xchg
iret
mov
jg
outsb
fisubrs
mov
sub
pop
andb
dec
xor
push
decb
cmp
sti
das
push
mov
negb
adc
jae
xchg
xchg
outsl
outsb
xor
ljmp
sbb
xlat
lods
in
add
sub
jle
in
insl
xchg
outsl
and
gs
lds
adc
cwtl
fdiv
push
test
and
sub
scas
xchg
loope
sbb
dec
mov
sub
inc
cli
pop
inc
stc
aaa
xchg
dec
or
and
mov
movsb
dec
je
subb
adc
fsubrl
jle
sti
pop
insb
mov
aas
pop
sbb
sti
movsl
addr16
test
call
movsl
or
and
mov
ret
insl
aad
xchg
pop
pop
xchg
xchg
cltd
out
scas
adc
test
pop
xor
fcoms
shlb
xchg
sti
xlat
dec
nop
adcl
pop
imul
or
cmp
ja
dec
lds
psrad
inc
or
mov
lds
sbb
inc
mov
insb
inc
mov
cltd
mov
cltd
or
rorb
fisttps
test
bound
popa
les
stos
enter
dec
push
daa
mov
push
push
js
je
daa
or
sub
mov
js
movsl
pop
into
mov
pop
lock
popa
fcompl
cmp
out
pop
cmp
mov
out
or
push
add
in
mov
mov
xchg
sbb
outsl
mov
pop
scas
sub
xchg
mov
lret
mov
mov
int3
xchg
pop
and
and
jb
lcall
rorl
fsubrs
sbb
mov
mov
cmpl
scas
and
jnp
dec
scas
add
in
ja
cs
inc
cmpsb
loopne
stos
lock
cmp
rcrb
lods
hlt
and
out
mov
jg
js
lea
and
dec
inc
cmp
stos
and
outsl
into
outsb
and
mov
ret
fistps
fnstsw
mov
dec
xchg
sub
lcall
push
scas
push
mov
mov
rcrb
ficompl
mov
outsl
pop
inc
cmp
test
jl
test
stos
scas
sbb
cmp
push
adc
loopne
out
adc
cmp
test
test
add
subb
or
inc
loope
inc
xor
push
rcl
int
sbb
push
fbld
jg
add
mov
add
cmpsl
mov
dec
jmp
mov
sub
stc
call
mov
push
loopne
and
sub
out
mov
loopne
sub
inc
adc
xchg
or
cltd
in
xchg
popf
cwtl
lock
data16
sbb
imul
inc
repnz
movsl
mov
jne
mov
cmp
mov
mov
mov
dec
adc
loope
or
fmull
mov
lret
inc
dec
adc
ret
mov
int3
out
mov
lcall
shlb
push
mov
or
sub
dec
and
imul
stos
lock
frstor
dec
shrb
in
mov
pop
out
mov
lret
sbb
popf
mov
lods
in
and
std
das
pop
cmp
jle
inc
fcoms
test
inc
cmp
data16
insl
pop
jp
jmp
loope
jl
ds
gs
ds
mov
sbb
cmp
daa
fwait
push
xchg
lds
jp
out
mov
sbb
xor
rcll
rcrl
pop
adc
xor
push
fistpl
pop
lea
dec
repz
outsl
popa
jnp
dec
fisubrs
cmpsb
ret
mov
popf
ret
lods
pop
call
inc
xor
aad
jb
test
fistl
pop
mov
jmp
cltd
jl
mov
push
xchg
out
mov
lcall
ja
pop
mov
cmp
push
movsb
testb
aam
iret
aas
clc
insw
pop
inc
in
dec
sbbb
call
test
xor
dec
aaa
shrl
and
ja
sbb
or
sarl
add
lock
dec
xchg
daa
xchg
ljmp
loope
or
out
aam
jns
stos
enter
movsb
ds
inc
les
xor
iret
add
pop
lds
insb
out
fistpl
rcrb
xor
and
xlat
in
cwtl
and
adc
inc
je
mov
add
push
lock
jecxz
leave
pop
orb
fldt
jg
cwtl
inc
sub
push
push
and
mov
xor
mov
mov
ljmp
insb
out
jmp
test
pop
xchg
mov
mov
das
jmp
addl
sub
call
jg
sbb
add
mov
push
inc
dec
cli
push
or
jmp
fnsetpm(287
cmp
int3
sbb
iret
adc
insl
add
mov
xor
fcomps
lds
xor
xchg
ss
shlb
les
push
dec
push
mov
xlat
add
dec
aad
push
bound
loop
out
or
cli
lods
daa
popa
xor
lcall
add
mov
mov
xor
jecxz
and
dec
fistl
notl
push
lock
das
mov
sti
outsl
add
into
xchg
pushf
cmc
cmp
jbe
sti
adc
lret
sbb
lds
sbb
and
cli
mov
jae
jno
mov
notl
dec
jns
imul
or
jb
push
aaa
jno
mov
mov
inc
inc
dec
mov
pushf
xchg
lea
mov
jge
xchg
mov
out
aaa
imul
mov
mov
adc
xchg
mov
mov
es
jmp
add
sub
iret
jnp
ret
sub
mov
cmp
insl
or
pop
jecxz
imul
lds
in
mov
cld
xor
cmp
inc
leave
rorb
iret
cmc
mov
mov
sub
mov
push
xchg
xchg
cmpb
adc
test
out
ljmp
jmp
out
ficoml
jecxz
mov
cmp
push
andl
inc
add
aad
sets
aad
notl
and
dec
pushf
out
pop
dec
das
arpl
xor
stos
mov
imul
cmp
ficomps
push
dec
lea
pop
xchg
leave
shrl
push
cmp
mov
push
cli
add
dec
sbb
add
gs
std
inc
adc
imul
fwait
lcall
and
sti
sub
mov
fisttps
pusha
jno
push
insl
insb
rcll
adc
xchg
pop
cld
ret
addl
cmpsb
lahf
inc
addr16
cli
clc
sbb
jle,pn
pusha
sbbb
push
mulb
mov
pusha
fstpt
dec
cmp
jmp
lret
iret
inc
adc
imul
stos
mov
xor
push
add
jp,pn
push
lods
sub
jo
ret
push
adc
ss
push
xlat
xorl
dec
pop
movsl
sub
pop
mov
js
inc
xor
pop
mov
or
inc
xor
loope
mov
adc
pusha
push
xlat
mov
cwtl
cli
sub
and
dec
dec
mov
or
xchg
das
jb
mov
dec
sbb
jbe
mov
xor
es
and
and
out
jo
pushf
jp
sub
cmp
xchg
jo
fsubrl
sbb
out
sub
jmp
orb
es
imul
push
sbb
div
inc
inc
int3
and
sub
into
fidivrs
mull
pop
pop
pop
or
sbb
lock
xor
sub
mov
add
inc
ficompl
ret
push
addb
mov
sub
es
and
inc
aam
in
cltd
add
ret
aad
cmp
repz
sahf
ss
xchg
xor
imul
mov
jp
add
shrl
mov
pop
and
lods
mov
mov
movsl
bnd
out
icebp
ret
adc
loop
adc
and
xor
mov
daa
insl
in
add
inc
imull
mov
cmpsl
pop
leave
push
pop
inc
sbb
imul
fdivp
lcall
lock
sbb
stc
push
lcall
cwtl
rorb
pop
or
stos
inc
mov
call
stos
fs
pop
loope
push
xchg
dec
jge
lock
sub
jbe
xchg
out
mov
push
xchg
or
mov
lds
sbb
imul
pop
sub
in
jge
xchg
mov
xchg
pushf
fisubs
cli
les
adc
outsl
jb
lret
fcmovb
pop
fistl
call
shrb
inc
adc
packuswb
sbb
call
mov
sbb
jp
xchg
mov
repz
lods
lcall
lret
add
and
adc
cmp
add
mov
bound
add
fisttpll
xchg
and
xor
cltd
movsb
jge
xchg
dec
stos
leave
int
data16
pop
sub
outsb
mov
test
das
addr16
cltd
xchg
aas
and
or
inc
test
xchg
pop
push
ja
mov
leave
pop
sbb
push
pop
inc
jb
filds
shlb
jecxz
push
jno
into
and
push
cmpsl
jecxz
xchg
mov
xor
add
xchg
push
cs
icebp
inc
dec
popf
pop
mov
ret
adc
fstps
push
les
inc
dec
adc
jno
in
mov
add
mov
push
rorb
sbb
mov
gs
or
popf
mov
xchg
add
ds
mov
or
insb
lods
pop
lock
scas
fwait
xchg
loopne
sbb
rcll
push
ret
sub
pop
inc
iret
fistpll
xchg
xchg
mov
adc
in
adc
sbb
xchg
pop
inc
cmp
mov
mov
jge
shrb
mov
fsubp
pop
test
jmp
popa
inc
and
mov
push
fbstp
xchg
fwait
sub
adc
mov
xlat
pop
push
mov
jecxz
fbstp
stos
nop
mov
sub
jge
pop
add
xchg
addl
cmpsl
lock
push
mov
test
loope
lcall
pop
in
lret
dec
jge
push
and
push
xchg
sbb
das
das
stc
sub
mov
dec
jbe
aam
pop
jae
fcompl
cmp
faddp
jne
mov
int
sbb
mov
decb
xor
jp
fwait
cmp
xor
popa
test
fidivs
jle
imul
dec
pop
shl
sar
mov
and
inc
dec
aam
lods
js
fsubs
dec
test
stc
xchg
mov
repz
outsb
pushf
bsf
lahf
ret
out
jae
adc
out
into
mov
aam
fstl
pop
fldl
jns
inc
sub
jp
stos
stc
ljmp
das
xchg
cmc
arpl
xor
jae
orb
cmpsb
push
mov
push
addr16
repz
dec
lods
jecxz
test
std
clc
cmpsb
je
das
aaa
pusha
mov
shrb
sti
clc
jle
jg
xor
aaa
in
xchg
mov
iret
mov
popl
or
sahf
call
fildll
stos
ficoms
mov
jnp
stos
test
sbb
mov
adc
dec
push
int
rcrl
add
mov
pop
rorl
ljmp
popl
push
xor
sub
pop
cs
int3
adc
and
pop
mov
mov
rorb
mov
in
sub
ret
xchg
imul
xchg
sti
sti
and
or
or
xlat
dec
jo
adcl
cmp
lock
aad
sbb
outsb
pusha
scas
mul
add
enter
sub
pop
lcall
mov
hlt
sub
stos
jne
mov
es
rclb
cmp
sub
test
fimull
ljmp
stos
xor
push
pop
shl
push
and
cmpsl
and
mov
mov
das
inc
add
pop
push
xor
push
fisubrl
xchg
xchg
pop
je
mov
mov
enter
pop
jns
mov
lret
pop
push
cltd
push
insl
cmp
imul
scas
mov
movsb
dec
cmp
push
aas
lret
dec
aas
cli
es
leave
dec
xor
jl
leave
push
hlt
lods
or
out
insb
sarl
sub
leave
loope
push
je
orl
inc
xchg
sub
std
outsl
nop
test
mov
lods
daa
hlt
jns
loop
fs
pop
and
incl
scas
cmp
mov
mov
inc
aas
in
and
pop
pop
mov
int
mov
scas
adc
ret
xchg
xchg
daa
dec
pop
and
lea
xchg
repz
xlat
aas
adc
dec
pop
mov
sub
dec
inc
lcall
fiadds
cld
sub
xchg
out
cmc
adc
push
inc
arpl
or
ja
ds
sbb
mov
add
mov
mov
jge
adc
loopne
sti
dec
movsl
fistl
jge
mov
xchg
push
dec
scas
loopew
inc
mov
mov
adc
push
rol
aas
frstpm(287
push
mov
push
outsb
mov
pop
dec
sub
mov
inc
iret
shrd
sbb
lret
pusha
fs
aas
adc
scas
mov
jmp
jg
mov
pusha
test
fisttps
or
call
fadds
dec
inc
js
icebp
data16
mov
pop
adc
sarb
cmp
cwtl
lret
rorl
and
pop
pop
sub
mov
inc
int3
insb
mov
rorb
jmp
rolb
test
aaa
mov
ja
sub
or
add
lods
fstps
out
repnz
frndint
push
xor
lahf
lahf
mov
inc
scas
fistps
push
sahf
or
adcb
add
sbb
jle
xchg
push
popa
lret
push
mov
jae
and
repz
dec
pop
xor
rcl
add
mov
lcall
outsl
mov
arpl
orb
mov
cmp
jae
fdivs
aam
das
cltd
pop
jne
repz
push
faddp
push
or
sub
imul
inc
daa
fistl
and
call
lahf
mov
jge
mov
push
mov
lds
imul
lahf
mov
int3
fisubrs
popf
push
ror
add
movsl
add
enter
test
cld
and
bnd
clc
mov
gs
popa
fdiv
xlat
mov
pop
pop
sahf
add
lods
add
sbb
iret
sub
adc
in
sub
mov
std
mov
xor
lea
sarb
stos
pop
jg
mov
xor
jb
addb
adc
aam
pop
int
sbb
and
lock
repnz
into
xor
dec
cld
loopne
pop
jmp
jle
sub
es
cmpsl
xchg
aam
sti
lret
sub
inc
xor
push
pop
jo
inc
inc
fxch
push
jl
sub
jno
mov
pop
shlb
push
mov
insl
mov
push
ret
imul
hlt
test
mov
pop
sbb
add
minps
jg
xchg
inc
orl
lret
lock
cmpsl
scas
sahf
xchg
and
mov
dec
or
xchg
or
push
xor
jle
inc
pop
adcl
mov
stos
jo
lahf
imull
fistps
jns
sub
sbb
jmp
icebp
mov
addr16
aas
mov
scas
fisubrl
lcall
xor
pop
adc
in
pop
add
add
popa
int
fwait
sub
xor
stos
mov
fstl
push
fs
mov
xor
fwait
daa
push
or
xor
lock
inc
aad
xchg
fisubrl
jg
fsubl
add
mov
adcb
movsb
and
lods
xchg
cwtl
push
cmp
test
movsb
xor
test
dec
sub
mov
mov
xchg
int
xchg
arpl
shll
clc
aam
sub
icebp
jnp
orb
shll
mov
subl
push
imul
inc
jno
xchg
fisttpl
test
adc
and
dec
int
fisttps
cs
xchg
mov
xchg
pop
and
into
cli
sub
ret
nop
dec
outsb
sub
scas
idivb
mov
xor
and
xchg
subb
pop
cmpsb
test
or
pop
fimuls
daa
jge
push
es
js
shrl
add
sbb
outsl
mov
imul
jge
jmp
jo
outsb
sub
dec
cmp
xor
stos
lret
jg
push
and
xchg
rcrb
scas
mov
mov
mov
inc
fimull
jmp
mov
add
or
mov
xchg
outsl
movsl
rorb
test
push
test
aad
xchg
inc
xchg
lods
in
lock
mov
mov
cwtl
jno
adc
push
pop
subb
xor
and
push
cmpb
jp
subl
inc
loop
push
cld
movsl
mov
loopne
shr
adc
xchg
lods
daa
mov
pop
jb
rorb
in
daa
in
lea
inc
daa
mov
fisubl
pavgw
rcrb
or
mov
sbb
in
dec
cmp
int3
daa
mov
enter
in
add
push
sbb
mov
push
sbb
sti
xor
xchg
movb
push
pop
lea
lds
test
cltd
loope
xchg
mov
and
es
enter
adc
pop
loopne
push
xchg
icebp
sbb
ret
sahf
xor
roll
stos
cmp
and
xor
and
test
notb
loop
rclb
push
dec
test
pop
into
lock
jg
jp
add
cltd
clc
fs
jnp
insl
les
cli
sbb
xor
scas
push
cmp
fidivl
cwtl
nop
and
iret
cmp
sahf
inc
inc
loope
xchg
adc
daa
add
xor
dec
sbb
xor
dec
je
mov
fs
mov
test
leave
nop
mov
es
fldenv
sbb
ficoml
notb
mov
ds
arpl
mov
push
sar
jbe
mov
xchg
pop
xor
jns
jp
cmp
ret
fs
mov
add
mov
insl
movsl
jo
aas
dec
and
out
clc
adc
imul
pushf
lock
or
pop
or
mov
jb
shr
dec
sbb
and
add
imul
mov
push
pop
repnz
lcall
xor
lea
and
pop
aad
jmp
add
mov
outsl
outsb
mov
sub
sbb
imul
arpl
jge
rolb
adc
sti
cmp
push
mov
dec
fildl
out
fimuls
jecxz
pop
add
sub
repz
mov
sbb
or
leave
stos
mov
push
cmpsl
pop
dec
sub
xor
psubw
mov
mov
and
pop
cmp
xchg
nop
adc
mov
mov
inc
xchg
mov
mov
lods
xor
or
inc
in
enter
push
cmc
loopne
dec
xchg
sbb
mov
inc
aaa
mov
and
push
dec
mov
int
xchg
scas
fs
fisttpll
mov
adc
fstpt
mov
arpl
mov
add
mov
or
lods
mov
mov
jbe
jmp
dec
aam
movsl
stc
jmp
or
mov
xchg
adc
mov
mov
shl
out
lret
pop
mov
pop
xor
or
nop
inc
mov
push
mov
mov
pop
sti
ret
lret
sub
je
mov
pop
jmp
lods
sub
mov
lcall
jp
hlt
daa
lahf
inc
fmul
pop
enter
test
mov
jecxz
dec
adcl
mov
fstpt
ds
adc
pop
pop
repnz
es
mov
fst
xchg
mov
mov
jecxz
lods
aaa
int
inc
test
iret
cmp
jp
push
add
adc
aam
xor
mov
movsb
cld
mov
inc
push
fdivs
jecxz
pop
adc
mov
fsubs
cmp
add
xor
or
xchg
addr16
lcall
enter
and
mov
mov
mov
repz
mov
int3
out
push
push
into
iret
scas
mov
leave
icebp
out
mov
ljmp
icebp
dec
pop
sbb
fmuls
les
inc
xchg
mov
xchg
push
out
sbb
lock
cmp
add
or
jne
xor
mov
test
rcll
cmp
xchg
jb
lret
cs
push
mov
pop
cmpsl
dec
jl
scas
ret
movsb
addl
sbb
mov
sbb
movsb
or
pop
bound
hlt
add
xchg
into
mov
dec
aas
cmp
loop
fistps
icebp
sti
idivb
lret
pop
pushf
enter
xchg
scas
cwtl
and
and
ss
or
xorb
adc
mov
push
dec
sbb
jne
push
orl
adcl
adc
xlat
push
int3
sbb
inc
mov
enter
in
sahf
out
mov
jae
scas
add
add
jne
pop
push
xor
lret
outsl
lea
xor
cmpsl
pop
or
sbb
adc
rol
inc
and
enter
push
sub
ja
pop
imul
lret
mov
xchg
inc
add
fidivl
xchg
push
mov
adc
sbb
insb
xchg
dec
add
xor
shr
mov
outsb
inc
imul
cmpsl
andnps
dec
pop
xchg
scas
movsb
mov
and
rorb
xchg
mov
cli
shr
lock
add
mov
xorl
mov
inc
mov
mov
outsl
adc
lcall
mov
cmp
mov
fcom
mov
data16
ds
adc
pop
cmp
jmp
inc
push
sbb
fidivrl
inc
sbb
sbb
stc
or
out
scas
sub
sbb
xor
push
sar
mov
jnp
xchg
ja
shrb
inc
lret
lods
test
js
fwait
insb
cltd
mov
ficompl
dec
in
sbb
leave
push
xor
mov
inc
mov
or
mov
sarl
cs
sub
xor
push
cld
inc
arpl
in
dec
incb
mov
roll
inc
ror
xchg
jmp
jnp
out
cs
cltd
pop
movsb
les
mov
mov
lret
dec
or
aas
and
sub
jb
into
mov
in
xor
jbe
inc
inc
and
add
mov
test
mov
test
scas
xchg
adc
in
mov
lods
clc
cmp
xchg
sub
and
adc
cmp
add
sti
mov
iret
xlat
sti
adc
dec
and
push
xchg
mov
mov
push
insl
xor
xor
or
mov
mov
sub
push
repz
in
out
shll
bnd
dec
das
stc
dec
mov
icebp
rorb
pop
cs
adc
dec
xor
cmp
les
sub
adc
call
or
addr16
int
push
xlat
sbb
in
jge
int
or
inc
jo
cmc
adc
insl
push
and
daa
sbb
push
push
iret
xchg
xchg
lret
cld
push
les
outsb
int
mov
jl
mov
cmp
cmc
dec
cmp
and
sub
call
popa
mulb
mov
sti
xor
sbb
dec
aas
cmpsb
and
jo
pop
dec
popf
fadds
dec
in
xchg
ja
enter
inc
push
mov
stc
and
cmc
test
jbe
loopne
cli
and
xchg
pusha
inc
xchg
shlb
daa
jmp
mov
push
pushf
mov
rorb
mov
pop
mov
out
jle
jne
arpl
pop
jno
jae
stos
xor
sbb
cmp
fnstcw
add
lcall
sbb
pop
cwtl
popf
xchg
xchg
ds
and
sub
js
push
and
adc
sub
jle
fwait
test
add
mov
mov
insb
or
mov
outsb
jns
cmc
arpl
and
push
xor
mov
sub
jp
adc
push
xchg
and
add
mov
mov
pop
fstpt
xor
pusha
sbb
ficoml
and
or
xchg
adc
sbb
cmpb
xor
fldenv
mov
lret
pop
mov
push
adc
stc
rcr
fistps
mov
ret
sbb
test
mov
mov
popa
jl
in
cmp
ja
push
pop
jg
in
pop
adc
cli
std
mov
sbb
dec
in
mov
in
jae
sbb
imul
leave
cwtl
mov
fs
lahf
xchg
xor
sbb
aam
mov
jne
push
mov
dec
mov
fwait
dec
outsl
lret
mov
or
int
outsl
sbb
rcrl
js
jle
and
das
xor
pusha
fsts
dec
mov
sub
cmp
sarl
repnz
push
sbb
push
sub
pop
or
movl
jmp
loop
cltd
lock
and
in
inc
notl
jo
mov
pushf
rcll
out
dec
and
or
cmp
add
addb
shlb
loopne
add
pop
push
mov
mov
dec
dec
xchg
mov
jecxz
and
lea
dec
pusha
aam
jo
and
mov
repnz
test
jge
loopne
rorb
lds
test
int
aaa
add
xchg
icebp
call
pop
mov
pop
out
push
inc
cmpsb
cmp
cli
out
adc
mov
jnp
push
mov
mov
cmp
cmp
push
or
sti
cltd
in
push
dec
inc
data16
mov
stos
jge
out
cmp
lcall
in
xlat
inc
inc
sub
leave
out
cmp
adcl
cmp
and
cmp
pop
push
ret
xor
dec
sbb
adc
int
xor
imul
adc
xor
repnz
cs
insl
and
jb
jp
xchg
cli
cld
sbb
test
clc
jecxz
sarb
in
fs
out
insl
jl
sti
enter
es
sub
lods
cmpsl
hlt
or
mov
mov
shll
cmp
push
add
mov
sbb
pop
and
in
rolb
jle
int3
inc
lcall
lods
and
lea
out
lods
gs
cmpsb
jecxz
les
inc
lret
shll
andl
fdivp
and
icebp
les
sub
jl
jo
cmp
jnp
int3
out
test
cs
mov
adc
pop
adc
dec
xchg
imul
inc
push
outsb
mov
sbb
xor
push
cs
mov
fimull
cmp
hlt
adc
nop
sub
jns
xchg
jl
into
xor
dec
fcmovu
mov
out
mov
xlat
lcall
inc
out
adc
dec
push
mov
repnz
push
xor
mov
jnp
add
cmpsb
push
and
aas
dec
dec
mov
fs
outsl
arpl
sub
icebp
mov
mov
gs
pop
mov
cmc
arpl
aad
faddp
int
pop
jp
jno
jae
mov
sbb
adc
xchg
inc
mov
push
dec
sbb
xlat
sbb
add
test
je
pop
mov
inc
xor
iret
xchg
repz
shlb
movsl
rolb
mov
sbb
pop
adc
int3
xor
inc
inc
shrb
repnz
sub
cmpsl
out
sbb
and
xchg
mov
in
sbbb
lock
lds
in
bound
mov
jae
mov
rcll
and
sarl
rcrl
stos
mull
in
stos
iretw
pop
dec
in
push
jo
pushf
xchg
and
sbb
leave
pop
push
pop
dec
xlat
in
inc
loopne
clc
lcall
mov
mov
mov
outsl
aad
jmp
pop
stc
xchg
loop
mov
jo
jl
test
in
xchg
xor
jne
jae
add
out
jbe
hlt
lret
sub
rolb
out
cmp
jg
jbe
dec
dec
adc
sar
lahf
mov
sahf
jne
pop
cwtl
dec
ja
xchg
push
lea
cmp
imul
cli
testl
lret
das
jmp
push
xor
pop
sbb
pop
pop
mov
cmp
add
fwait
or
or
out
scas
int
popa
dec
decl
das
pop
xlat
lock
adc
iret
dec
ret
int3
das
push
jecxz
dec
cmpsb
and
pop
mov
or
popa
jl
in
inc
xchg
and
pop
cld
out
xor
and
mov
outsb
mov
lea
cmpb
cltd
repnz
out
idivl
adc
jle
push
scas
into
pop
es
test
adc
add
decb
repz
mov
inc
aam
push
jp
jo
ljmp
and
in
mov
hlt
sbb
stc
pop
sbb
and
xchg
pop
inc
ss
mov
pop
sbb
sbb
sub
pop
insb
call
pusha
aas
push
jo
xor
mov
cmp
js
xlat
pop
push
mov
ljmp
orl
xchg
dec
mov
jle
mov
shll
mov
sti
jae
mov
sbb
pop
mov
ret
int
sub
or
dec
pushf
push
pop
xor
aad
mov
hlt
dec
in
jle
stc
cld
add
add
adc
sbb
insl
mov
jmp
in
out
cmpsl
lret
out
lds
push
push
mov
inc
pop
add
lret
sbbl
push
xor
js
ret
sbb
hlt
and
sbb
mov
test
mov
adc
ds
cmp
cwtl
shll
fcomps
lcall
hlt
push
xor
aad
in
sub
movsl
imul
dec
mov
xlat
or
loop
add
xchg
mov
and
repnz
stos
mov
xchg
sub
and
add
xor
ror
movsl
mov
mov
pop
out
daa
pop
inc
scas
or
sub
cs
and
shrb
movsb
or
lds
and
fxch
xchg
mov
xchg
adc
test
cli
jl
mov
ret
out
in
sbb
dec
jbe
push
bound
push
mov
stc
jmp
shlb
rol
imul
hlt
jae
and
push
out
xor
fcomps
rcll
pop
push
das
pushf
jmp
inc
jmp
xchg
adc
pop
nop
dec
or
mov
ljmp
outsb
outsb
imul
dec
lret
dec
mov
mov
loopne
test
faddl
out
dec
and
cmp
mov
jne
fbstp
push
sub
inc
jne
js
cmpsb
mov
dec
ret
sbb
jbe
insb
jae
mov
insb
test
jp
pop
in
add
std
lahf
mov
dec
jae
add
clc
cmp
nop
mov
pop
scas
mov
inc
outsl
push
push
inc
in
push
pusha
subl
pop
cwtl
cld
fbld
roll
or
cmc
scas
fldenv
pmaxub
test
xchg
out
in
push
and
cli
shlb
cmc
aaa
add
mov
dec
fucomp
outsl
jmp
call
add
xor
mov
stos
shll
fisttps
pop
rcrb
xchg
and
pop
clc
stc
in
fidivs
inc
nop
jno
int3
shll
out
stos
das
dec
ds
inc
aam
into
cmp
cmpsb
push
xor
mov
scas
lret
mov
je
mov
mov
lcall
popf
je
sub
pop
xchg
push
movsb
cli
dec
mov
cld
loop
addr16
sahf
fiaddl
inc
xlat
dec
insb
inc
aas
push
or
sti
mov
imul
mov
lods
xchg
pop
jecxz
cmpsb
adc
sub
sub
iret
adc
jnp
leave
xor
jo
jo
aaa
leave
cmp
mov
dec
stos
fcoml
repnz
jmp
xor
xor
mov
jp
aas
inc
addl
or
pop
fisttpl
sbb
xor
mov
loopne
test
xor
jp
or
xlat
in
aas
pusha
dec
or
mov
mov
push
xor
jne
fstpl
rcrb
mov
adc
jp
sahf
mov
pop
xorb
mov
test
test
jne
adc
xor
ret
int3
rorb
xchg
mov
xor
mov
mov
ja
pop
push
sub
out
pop
loopne
cmp
test
pop
mov
push
adc
outsl
into
hlt
sbb
movsl
pop
iret
jbe
stos
or
cmp
or
and
jns
dec
fstpt
xchg
pop
inc
int
push
or
stos
and
ja
and
pop
mov
popa
dec
sbb
sbb
cmpsb
xchg
push
sahf
dec
rol
or
fisubs
or
int3
add
repnz
popf
pop
int
aaa
and
push
sbb
mov
hlt
aas
and
insb
inc
stc
lret
in
xchg
leave
xchg
aaa
out
cmp
mov
decb
pop
mov
xor
mov
jns
dec
xlat
jle
iret
dec
adc
stc
test
cli
pop
pop
xchg
imulb
xor
repz
xchg
mov
scas
adc
cmc
cmp
mov
xlat
mov
add
dec
mov
rorb
and
mov
in
mov
in
stc
xchg
mov
into
mov
xchg
fmull
mov
aaa
xor
movsb
xor
adc
std
jle
aad
inc
dec
pop
int3
imul
add
fcomps
mov
js
frstor
fsubrs
cmp
push
xlat
mov
xor
imulb
xchg
pop
aaa
cmp
jbe
or
popf
lret
lret
mov
aas
pop
cmp
filds
pop
sub
les
pop
cmc
inc
push
cwtl
pop
inc
out
jg
sbb
pop
inc
push
das
push
outsl
fdivs
lock
mov
mov
mov
out
out
scas
cmp
pop
mov
ret
jnp
cmc
lea
inc
sub
addr16
adc
popf
inc
jae
jae
scas
push
imul
nop
ret
dec
adc
es
pop
jl
jle
add
loopne
cmp
push
push
and
jl
cmpl
xor
arpl
data16
nop
mov
nop
sbb
xor
scas
outsb
maxps
lods
mov
jns
mov
popa
in
lods
and
add
sub
je
xchg
inc
popa
add
jno
jp
jmp
push
fistpl
mov
lcall
sub
or
aad
ret
frndint
or
lock
xchg
dec
dec
jne
dec
cmpsl
fnstcw
loopne
sbb
push
jno
cmc
popf
std
out
cmpsl
loop
gs
add
or
pop
ret
adc
rorl
fwait
mov
movsl
cmp
xchg
arpl
loopne
jp
int
nop
or
mov
mov
inc
mov
adc
xor
addb
mov
jp
mov
clc
xchg
pop
xchg
or
cmp
insb
stos
in
xor
mov
add
jae
add
sbb
leave
or
mov
out
xchg
jle
xor
mov
bts
ja
jb
lods
cmp
mull
add
mov
dec
pop
mov
pop
sbb
rep
aaa
sbb
push
aas
mov
pop
iret
cli
jl
fadds
dec
cli
stos
jno
cld
mov
jb
mov
std
adc
popf
js
push
adc
es
mov
scas
mov
mov
inc
mov
pusha
or
or
cmpsb
inc
jle
repz
lea
mov
sbb
mov
fs
push
xor
aad
shrl
cmp
push
jb
adc
mov
popa
push
in
inc
cmp
inc
loop
sbb
icebp
xchg
inc
sub
out
dec
jle
jmp
fistl
ret
jnp
mov
jge
cld
xchg
repz
in
lret
xchg
insb
jmp
inc
xor
pop
or
sub
gs
iret
xchg
jbe
mov
scas
jge
insb
mov
fdivl
in
cmpsb
hlt
pop
fs
mov
and
push
sbb
je
out
sub
mov
fcmovb
jle
fldl2t
das
lret
xchg
mull
popa
lcall
stc
push
rcr
and
cmpsl
cmc
inc
xor
out
stos
inc
mov
test
sbb
in
mov
ljmp
sti
xchg
ret
je
mov
lret
adc
gs
adc
repnz
pushf
es
adc
xchg
mov
sub
sbb
ret
cmp
sub
inc
ret
pushf
int
in
and
xchg
lret
and
and
lahf
mov
push
hlt
adc
pop
mov
dec
pop
mov
xor
pop
and
sbbl
jl
addb
bound
pop
xchg
dec
loop
xor
pop
jmp
pop
cmpsb
fiaddl
mov
jnp
jp
xchg
fs
out
push
addr16
pop
push
push
sub
rclb
cli
movsl
out
or
push
jns
mov
pop
in
add
jle
lods
pop
push
popf
jmp
test
fidivs
mov
jno
cs
pop
cmp
jmp
inc
mov
out
lret
jnp
mov
jg
lret
bound
fs
movsb
out
inc
pop
es
add
mov
out
mov
jo
fnstsw
sub
xchg
mov
pop
dec
shll
int3
cmp
stos
clc
lock
xor
cmp
sub
out
mov
mov
scas
or
add
jp
orb
jl
rol
mov
push
push
lods
sti
dec
data16
iret
sbb
push
fldl
aam
mov
sub
mov
inc
sub
xchg
insl
andl
jl
cwtl
cmp
mov
jecxz
out
aaa
jl
dec
jl
jp
mov
dec
repnz
pop
lea
mov
popa
in
jp
sub
pop
aas
push
movsl
shl
lahf
cli
sbbl
mov
out
xor
pop
repz
xor
iret
es
movsb
pop
mov
xchg
jnp
dec
add
std
neg
jmp
jns
mov
ja
aaa
fnstenv
stos
or
orb
jle
mov
and
shll
int
aas
cmpsb
mov
bound
scas
mov
inc
or
and
fsubl
imul
mov
aam
mov
mov
dec
movsb
insb
jns
jg
mov
loopne
lods
test
pop
inc
inc
add
cmp
add
decb
stc
sub
adc
shrb
mov
push
or
and
in
lods
or
xchg
in
xchg
add
xchg
dec
leave
mov
aas
jne
insl
loopne
cltd
inc
jo
push
out
lahf
mov
loopne
jg
xor
scas
inc
sahf
scas
mov
pop
xchg
mov
or
psubusw
mull
pop
rorb
shl
movsb
int
decl
lahf
sbbb
lods
pushf
dec
outsb
mov
cmp
in
cmp
jae
xor
mov
jns
sbb
fwait
scas
daa
fdivrs
sub
mov
into
testl
pop
lods
ficompl
push
adc
loope
push
shr
scas
pop
or
mov
or
push
mov
fiadds
inc
out
mov
push
aad
push
mov
cmp
popf
repnz
out
inc
lea
mov
negl
pop
sub
mov
aaa
out
lods
mov
cli
cmp
mov
mov
daa
rolb
in
add
sub
jl
stos
sbb
js
rcrl
bound
cwtl
xlat
mov
push
fnsave
mov
dec
rclb
and
in
or
xchg
movsb
stos
dec
loop
mov
loope
ljmp
int3
addl
mov
cmc
stos
mov
jecxz
add
stos
jnp
cmp
ja
jmp
xorl
cmpsl
les
ret
lds
mull
jmp
xchg
xor
jo
jne
idiv
jmp
lods
push
inc
lcall
sub
orb
dec
movsl
or
pop
fbld
mov
pusha
xchg
cmp
mov
pop
xor
pop
xchg
jle
pop
xchg
es
mov
dec
inc
pushf
icebp
pop
fwait
lock
mov
fnsave
and
mov
inc
xchg
pop
enter
mov
faddp
mov
cmp
arpl
dec
push
add
sahf
divb
jecxz
and
inc
mov
and
jnp
movsb
arpl
inc
and
pop
inc
sbb
filds
sti
pop
pop
aad
xor
insb
daa
aaa
shrb
ds
adc
aad
orl
add
xchg
pop
mov
pop
xchg
cmp
cwtl
mov
sub
jbe
fistpll
adc
ja
shrl
sbb
cmc
xor
leave
icebp
push
adc
mov
xchg
cltd
push
dec
sub
adc
scas
les
sarl
adc
xchg
mov
iret
adc
mov
adc
cmp
rolb
clc
gs
fcmovu
add
lock
out
lock
in
loopne
test
incl
push
mov
mov
imul
je
aad
sub
imul
and
mov
mov
add
test
xchg
ret
add
leave
or
rcr
mov
inc
fisttpl
aaa
xorb
fadd
mov
jle
push
add
jl
adc
enter
pop
nop
ja
sub
sbb
aas
mov
push
push
in
add
lahf
pusha
nop
dec
in
arpl
pop
into
mov
cld
je
mov
add
cmpsl
leave
and
mov
enter
js
mov
jecxz
movsl
dec
outsb
popf
inc
xor
xchg
jle
adc
mov
sub
xchg
fnstcw
mov
mul
xor
xchg
cmpsl
aam
aas
lret
xchg
gs
mov
mov
xchg
or
push
pop
ds
lods
std
jmp
mov
mov
scas
addr16
mov
test
adc
out
in
cmpsl
clc
mov
push
sbb
cmp
jae
jp
xchg
aam
fldenv
popf
negb
xchg
jle
ret
inc
mov
dec
mov
pop
mov
pop
push
cltd
add
mov
push
adc
dec
std
xor
and
jbe
sarb
ja
pop
mov
dec
jb
pop
jae
imul
mov
and
mov
xor
std
pop
loop
insb
push
xchg
push
jo
decb
mov
dec
inc
add
into
test
sbb
jnp
xor
imul
xlat
sub
sti
ja
into
jle
out
movsl
ds
pop
and
and
push
jl
and
rcr
imull
inc
pop
jbe
mov
loope
pop
and
xchg
add
jnp
inc
sub
jo
shlb
stc
sti
xor
adc
mov
aaa
fcomp
fisubl
and
xchg
push
inc
js
lods
insb
mov
or
addr16
mov
cmp
fisubl
cmp
lods
push
std
mov
es
pop
push
test
movsl
out
push
sub
cmc
cmp
ficoms
negb
jecxz
dec
aad
outsl
out
clc
or
popf
add
das
out
out
testl
add
cmpsl
mov
push
mov
aam
xchg
fmull
loopne
jno
mov
jl
mov
bound
jno
push
jne
push
sti
in
mov
out
xchg
sti
xor
pop
sub
loop
test
jmp
inc
leave
cli
xchg
ds
fwait
xlat
stos
push
notl
stos
inc
cmp
ja
cmp
jl
inc
mov
test
adc
jle
ficompl
pop
dec
add
stc
cmp
pop
loop,pn
mov
loope
mov
imul
pop
lock
and
into
pop
in
in
or
test
pop
cld
es
add
test
add
insl
sarl
jge
cmp
push
imul
pop
sbb
repz
adcl
lds
jno
bnd
out
mov
push
add
inc
out
mov
lret
adc
xchg
in
sub
xor
xchg
flds
mov
push
stos
das
pop
popa
lds
int
scas
jnp
mov
or
sbb
out
sub
das
cmpsb
js
jae
mov
aam
notb
mov
push
sub
sbb
std
sbb
or
add
push
xor
sysexit
enter
mov
push
push
dec
scas
jg
sbb
es
pop
stc
sbb
lcall
or
stos
orl
pop
fldt
test
ss
push
sbb
cmp
push
sub
call
xchg
push
push
stos
stos
lods
stos
jno,pn
jae
psllq
in
mov
mov
shr
pop
pop
and
ficoml
inc
inc
addr16
fldcw
aad
dec
imul
jle
pushf
clc
gs
pand
jnp
pop
push
jge
jmp
enter
mov
push
loope
cmpsb
mov
xchg
insb
bound
fcomi
jg
enter
sub
jp
xchg
cld
sub
jmp
je
pop
bound
mov
xchg
push
mov
xor
int
mov
xchg
dec
mov
les
and
loope
mov
push
add
dec
cmp
rcll
and
loop
push
or
sub
fsubr
sbb
out
insb
call
stos
icebp
packssdw
xchg
adc
sbb
insl
or
xchg
pop
mov
mov
or
cld
jmp
mulb
dec
mov
out
xor
ret
xchg
xchg
dec
mov
mov
jmp
loope
pop
push
out
cmp
sbb
nop
loope
mov
bnd
and
mov
int
lahf
repnz
enter
cmc
test
sbb
mov
mov
fldt
jge
out
inc
jb
push
xchg
jns
add
aad
lds
or
adc
dec
pop
xchg
mov
loope
or
imul
movd
insl
fstpl
jg
adc
cmpsb
mov
adc
push
std
jle
pushf
xor
jbe
push
pop
sbb
xor
imul
push
sub
xchg
inc
xchg
and
subl
shlb
mov
cmp
cmp
into
lahf
push
adc
aaa
push
mov
enter
pop
and
loopne
insl
jle
out
iret
pop
popf
mov
aas
fidivs
push
lock
mov
and
jo
dec
push
mov
mov
cwtl
jl
std
adc
jae
jmp
cwtl
xor
rcll
out
mov
pop
sbb
cli
jo
inc
out
cmpsl
adc
loop
sahf
sub
xor
pop
dec
sbb
fiadds
fidivs
push
ja
push
cmp
mov
inc
mov
push
cmpsl
out
inc
and
xchg
notb
notb
gs
lret
fiadds
into
mov
xchg
sub
iret
dec
int3
imul
fbld
bound
ret
push
inc
pavgb
leave
scas
jnp
sahf
shlb
ficoml
jns
pop
ds
xchg
mov
repz
cld
std
insb
int
xlat
or
stos
pop
in
adc
call
mov
pushf
dec
xchg
mov
sbb
movsl
xchg
jae
lock
fwait
ljmp
gs
gs
nop
xchg
mov
and
jg
lock
xchg
lock
cmp
push
popa
cmp
fidivl
push
mov
js
add
mov
cltd
movsb
aas
pusha
push
jle
scas
scas
pusha
test
shl
test
movsb
cwtl
arpl
cmp
je
mov
push
int3
mov
adc
inc
fdivp
test
jle
xchg
pop
mov
or
fisttpl
cmpsl
test
icebp
pop
out
popa
fstpt
aaa
in
mov
movsb
jae
cmp
mov
cmp
dec
enter
add
sub
adc
loopne
hlt
int
dec
sti
leave
das
jb
cs
mov
stc
in
pusha
daa
sub
movsl
add
pushf
loope
bound
push
jl
xor
jmp
daa
stos
test
sub
sbb
ret
mov
xor
jmp
or
sbb
mov
and
shl
jge
sub
jae
add
cwtl
xor
js
in
rorb
imul
add
or
ljmp
cmpsb
cmp
or
mov
and
popf
cmp
inc
dec
lock
sti
jnp
sub
xor
jecxz
sahf
mov
cmpsb
adc
pop
arpl
lret
test
in
sbb
inc
cli
sub
sahf
jno
sbb
xor
fisubl
jne
mov
shr
popa
leave
cltd
xorl
mov
push
cld
mov
in
sbb
lods
pop
ret
and
leave
sub
repz
mov
mov
push
pop
nop
cs
mov
adc
mov
or
lcall
sahf
add
pop
mov
aad
arpl
scas
lds
xor
add
xchg
loope
adc
lds
fnstenv
xchg
cmp
imul
mov
mov
fwait
outsl
push
popa
mov
out
cld
repz
dec
aas
mov
loopne
cmpb
push
insl
pop
cmc
pop
mov
das
sub
fwait
mov
mov
jnp
fmulp
subl
dec
pusha
lods
inc
out
mov
push
sub
jg
xchg
movsb
subl
inc
test
add
push
insl
xchg
or
test
jge
sub
push
sub
sub
out
add
fstpt
jo
or
out
sti
mov
push
pop
jle
cmpb
ficompl
repnz
aas
out
notb
xrelease
cmpl
add
mov
push
aaa
cmp
sbb
sub
sarb
rcll
or
iret
in
add
popf
xchg
add
out
lcall
scas
repz
popf
aas
imul
pcmpgtw
mov
lcall
inc
cmpsl
and
xor
push
stos
and
push
subl
adc
xor
int
cwtl
sbb
xchg
flds
xchg
mov
lcall
cmp
push
mov
pop
sub
xlat
in
adc
add
ds
xor
stos
push
test
mov
mov
ljmp
hlt
fisubl
gs
mov
lea
popf
cld
pop
push
sub
mov
in
or
mov
out
cmp
rorb
sti
xlat
mov
add
sahf
push
ljmp
pop
test
xorl
and
idivb
pop
xlat
mov
sbb
cmp
scas
in
invd
sub
xchg
mov
cmc
int
outsl
adc
add
mov
loope,pn
cmc
push
pop
jmp
inc
es
ljmp
std
dec
stos
pop
add
or
ds
data16
add
and
mov
into
mov
mov
aaa
lret
addr16
cmp
cmpsb
gs
or
dec
pop
dec
sbb
mov
outsb
or
sub
mov
cmp
xchg
leave
jge
add
cmp
in
fistl
int3
jge
and
adc
aam
hlt
repnz
jb
sbb
lahf
call
lea
xchg
enter
push
aad
jmp
sub
test
and
pop
cmp
pop
push
pusha
shlb
ja
xor
mov
inc
push
xor
jmp
dec
pop
xchg
fwait
test
andl
int
mov
cwtl
popa
push
xchg
inc
aad
and
mov
into
pop
jae
clc
cmp
rcr
dec
out
jge
inc
xchg
pop
addl
dec
outsb
into
inc
sbb
push
jl
dec
das
xchg
cli
sbb
pop
mov
aad
adc
idiv
and
lods
nop
pusha
ucomiss
cmpsb
adc
fs
mov
dec
add
mov
les
test
jp
mov
pop
inc
xchg
jns
push
mov
xchg
inc
adcb
adc
dec
and
ret
addr16
in
fimull
mov
fwait
sub
pushf
pop
xchg
adc
ja
push
repz
and
je
gs
mov
add
push
inc
movsl
test
idiv
xchg
cltd
jp
push
rorl
xchg
shlb
jl,pt
aaa
inc
or
add
cltd
aad
sub
or
or
sub
and
dec
sbb
mov
pop
jae
std
mov
cmc
mov
cmp
ja
pop
fstpl
aam
mov
cmp
mov
cwtl
push
jle
pop
inc
mov
or
mov
inc
aas
or
mov
xor
jno
lods
sub
jno
xor
imul
cmc
mov
and
mov
mov
cmpsb
je
dec
xor
repz
shl
leave
fucomi
aad
xchg
js
mov
sbb
lcall
mov
inc
jo
pop
push
and
ja
pushf
test
arpl
addr16
sub
inc
mov
inc
test
jno
push
mov
int
inc
outsb
rcr
xchg
fnstcw
sarl
ja
int3
jne
aad
aad
gs
sahf
cmc
das
les
insl
adc
mov
cld
jl
andb
push
cld
jg
ja
push
popf
xlat
aad
mov
outsb
stos
fldt
jmp
pop
test
xor
xor
jo
cmpsb
jge
lret
cmp
loope
ljmp
mov
scas
lret
loope
sub
je
xchg
pushf
inc
adc
and
jle
sahf
adc
xchg
cli
fistl
out
lcall
and
add
insb
rcr
rcl
xchg
mov
push
jp
jge
aad
mov
sarb
das
mov
mov
repz
pop
and
inc
dec
stos
dec
jl
mov
mov
inc
mov
pop
mov
cltd
inc
xor
sbb
xchg
pop
push
sub
and
inc
sub
dec
xchg
mov
in
pop
push
and
call
subb
lods
push
iret
mov
mov
adc
fs
call
sbb
rol
add
inc
fbld
pushf
pop
sbb
sub
rcll
xchg
jae
clc
inc
adc
fs
cltd
fsubl
in
sub
mov
lods
cmp
into
xor
jb
inc
clc
sbb
aam
mov
mov
mov
mov
out
push
mov
sbb
lea
rcrl
loop
pop
pop
imul
pop
neg
cmpsb
test
leave
pop
jns
and
jb
push
cld
nop
sbb
daa
or
sbb
test
pop
xlat
inc
scas
or
std
mov
add
stos
test
mov
pop
clc
cmp
push
or
mov
call
leave
cwtl
pop
push
or
sub
jae
xor
or
hlt
dec
xchg
outsl
jg
out
loop
popf
mov
pop
jle
fiadds
lds
dec
xorb
sbb
pop
movsl
imulb
stos
mov
push
pop
icebp
loop
push
and
shlb
jg
fsts
imul
push
sahf
aam
aaa
sub
add
push
pusha
call
sub
stos
incl
mov
jo
call
aas
and
out
cmc
cltd
mov
fwait
jne
pop
inc
mov
mov
data16
jb
aaa
lods
stos
test
outsl
lods
fadds
jb
xor
inc
bound
frstor
fcoms
aam
jae
add
lods
loop
push
mov
je
jge
mov
cltd
mov
cmp
xchg
mov
pop
mov
loop
pop
jge
sub
rol
insb
pop
xor
nop
or
sarb
call
nop
out
aas
and
insb
push
rcl
je
xor
mov
mov
in
and
es
aaa
push
sbb
adc
subl
scas
xor
clc
mov
mov
pop
jb
push
int3
ljmp
mov
sub
dec
sub
hlt
mov
mov
xchg
int
sub
adc
lret
pop
cmp
pusha
dec
sub
xchg
popa
movl
push
scas
jmp
bnd
insl
fsubrs
or
pop
sbb
cmp
jnp
adc
pushf
leavew
inc
in
imul
fildll
mov
ja
fisttps
in
js
ret
outsb
int3
inc
pop
mov
int3
fcomi
fdivrl
and
gs
mov
jo
cli
cmpb
int3
adc
add
iret
jbe
pop
or
pop
popf
add
mov
stos
outsl
pop
lods
add
faddl
sti
scas
push
mov
stos
pop
sbb
repz
shll
add
loopne
pop
inc
mov
jecxz
stos
jo
test
sbb
cmp
out
mov
int3
cmp
sbbb
push
daa
lds
int3
loopne
shrl
and
in
pop
loopne
or
cmp
cmp
cmp
adc
mov
scas
push
push
jg
jbe
jo
pop
outsb
mov
negl
cmp
pop
ret
mov
mov
mov
cmp
icebp
and
jb
divps
les
mov
adc
jp
mov
sub
push
mov
cmp
mov
lock
out
rcll
jle
adc
js
mov
or
add
mov
sti
push
mov
loopne
stc
push
mov
sbb
xchg
inc
aas
mov
jmp
mov
cmpsl
cmp
cmp
xor
test
rolb
cs
mov
dec
mov
loop
push
lock
fidivs
loop
mov
push
in
fwait
ljmp
dec
add
mov
xchg
out
and
adc
out
jl
adc
sti
adc
mov
cld
mov
sbb
mov
sub
int3
int
test
lahf
sahf
rcll
lcall
pop
mov
cmp
insb
movsl
mov
pop
cmpsl
or
sub
jbe
repz
mov
fwait
lcall
lods
adc
xchg
lcall
fstpl
aaa
sbb
mov
loopne
out
inc
xchg
adc
mov
mov
orb
shrl
ljmp
loope
test
push
fadds
clc
outsb
dec
push
add
pop
mov
mov
push
insl
out
int
mov
cmp
xchg
out
sub
icebp
xchg
stos
shr
mov
imul
dec
popf
addb
sub
aaa
pop
mov
dec
or
mov
lcall
or
push
jecxz
aaa
fmuls
dec
daa
jae
cmpsb
aas
insl
int3
rcrb
sarb
inc
sahf
icebp
addb
push
testl
stos
jns
addr16
xchg
add
push
cmpsl
jl
je
mov
out
add
in
sti
fs
xor
adc
addr16
mov
mov
inc
lret
std
mov
cmc
inc
ja
sbb
mov
cmp
iret
lea
fsubrs
addl
mov
mov
mov
enter
or
gs
push
xchg
jbe
stos
hlt
test
mov
mov
jno
add
sti
adc
cwtl
inc
pop
js
scas
jae
int3
pop
iret
scas
outsb
repz
dec
notb
pop
inc
ret
mov
add
and
xor
dec
push
fcmovne
sti
lahf
pop
dec
push
rolb
cs
cmpsl
in
data16
push
add
mov
lods
scas
inc
mov
rorb
xchg
add
inc
push
sbb
add
cwtl
call
test
lds
int
mov
push
outsl
test
iret
cld
sub
nop
sahf
popa
inc
fdivrs
sarl
dec
out
pop
loopne
dec
movsb
pusha
dec
outsl
sbb
outsb
popf
jle
push
xchg
push
into
fimull
flds
leave
mov
jl
lea
iret
dec
push
xor
add
add
sub
or
inc
inc
add
push
add
int3
sets
insb
add
cmp
sub
add
mov
or
fdecstp
push
and
shll
sbb
lea
fst
mov
mov
mov
adc
pop
arpl
jae
fs
out
into
add
call
pop
jno
adc
out
cld
xor
mov
les
mov
pcmpgtb
je
ja
sbb
stos
rcrb
mov
sbb
test
adc
int
push
ret
jp
scas
stos
shlb
mov
dec
inc
test
pop
inc
cmp
adc
outsb
adc
sbb
icebp
mov
pop
mov
cmp
sub
pushl
lahf
int3
mov
ret
mov
sub
pop
push
mov
scas
xchg
mov
xor
mov
aas
or
sti
mov
mov
inc
mov
notl
xor
leave
arpl
nop
pop
sub
pop
pop
test
je
add
es
and
je
and
push
and
jnp
jbe
jne
push
aas
inc
push
mov
repz
sbbl
pause
xchg
pop
push
lahf
or
insl
ret
test
mov
test
ficoml
andl
and
cmp
leave
leave
xchg
cmp
fldl
lret
rorl
in
lret
cmpsl
cmc
aaa
mov
mov
add
arpl
jle
or
mov
dec
pop
xchg
add
pop
dec
inc
sti
fisttpll
fs
push
cmp
cmpsb
add
orl
adc
and
xor
xor
push
cltd
adc
cltd
or
outsb
adc
mov
pop
and
xor
out
mov
in
std
aas
cmp
insb
pop
lret
mov
pop
mov
xorb
mov
pusha
jecxz
cmp
das
iret
loop
or
call
cmp
imul
and
mov
loopne
in
in
cmpsb
jbe
ds
icebp
addr16
cmp
aam
xchg
out
mov
or
mov
pop
sub
leave
scas
dec
push
cwtl
jns
clc
std
outsl
inc
adc
xchg
jecxz
mov
fstpt
sbb
jbe
int3
adc
xor
ss
test
stos
out
dec
xor
pop
add
jg
sub
dec
sub
pop
int
orb
inc
or
mov
out
mov
test
xchg
in
enter
cmp
xchg
add
or
or
fnclex
fmuls
mov
movsb
imul
push
lods
ret
xor
inc
icebp
pop
ret
stos
push
push
nop
dec
or
jnp
or
ja
mov
mov
pop
lahf
push
cmc
jne
out
in
push
mov
icebp
add
xor
push
mov
jnp
cltd
fucomip
xor
das
in
movsb
or
inc
jg
nop
fcoml
ljmp
jecxz
cs
loopne
insb
jns
inc
add
jae
aas
out
nop
jns
mov
mov
cltd
dec
cmp
scas
ss
mov
pushf
pop
sub
dec
cmp
jge
ret
scas
sbb
jb
pusha
das
xchg
mov
jne
sub
ds
push
rorb
rep
cmp
test
aam
add
shl
pop
shrb
out
dec
mov
and
loope
testb
sbb
xor
push
jnp
cmp
xsave
popf
sbb
jno
cmp
je
sbb
scas
mov
dec
sbb
psubd
add
stos
lea
sub
push
bound
faddl
sbbb
mov
aam
loope
dec
jp
cmp
xchg
in
or
mov
outsb
bound
fcomi
cmp
mov
mov
nop
aaa
mov
fwait
imul
sub
adc
scas
lret
cmp
add
push
pmaxub
mov
add
sub
in
pushl
je
mov
dec
mov
aad
pop
popf
jb
ljmp
jne
xchg
xor
mov
scas
loope
jl
jl
test
arpl
push
push
cmp
mov
add
lds
aaa
mov
adc
sbb
mov
or
movsl
xor
or
lahf
gs
call
movsl
iret
out
hlt
or
xchg
mov
add
cmc
aaa
int3
dec
pushf
popf
mov
dec
lods
or
or
push
clc
or
inc
int
xchg
jp
pop
push
stos
out
mull
sbb
xchg
in
scas
loopne
jbe
cmp
imul
ret
repz
sbb
push
aad
out
ljmp
inc
and
scas
xchg
and
adc
pop
cmp
push
add
shll
mov
dec
mov
gs
test
in
pop
cmp
xchg
ja
loop
ret
ret
mov
add
dec
and
cwtl
and
scas
jmp
imul
jmp
repnz
xchg
push
ss
andb
add
pop
dec
cmp
inc
out
shl
rcl
push
fildll
sub
bound
adc
push
test
aam
pop
in
jb
mov
pushf
push
adc
test
fsub
jp
sbb
faddl
jge
test
stos
scas
rorb
scas
rolb
push
insb
sub
ja
cmp
cmp
pop
lret
sub
lock
or
mov
out
out
pop
sarl
nop
push
test
icebp
adc
dec
fdivrl
sub
xlat
addl
adc
into
lock
jge
add
out
out
add
mov
add
sbb
xchg
inc
sub
xor
or
sbb
aad
xor
aas
inc
nop
mov
mov
scas
cmp
cmp
sbb
mov
or
mov
pusha
notl
ret
pop
jge
jecxz
in
push
pop
xchg
inc
dec
mov
cmp
jmp
mov
mov
dec
xorb
cmp
pop
int3
in
int3
aas
xchg
mov
xchg
jno
scas
xchg
push
pushf
outsl
lock
arpl
sub
mov
xor
lcall
jns
xor
sbb
cli
stc
loope
xchg
cmp
and
fildl
fstpt
cli
out
dec
adcl
add
cmp
mov
aad
and
jl
mov
lds
sti
mov
add
push
in
dec
inc
xor
sub
mov
cmc
push
ror
mov
adc
and
cmp
out
push
push
pop
and
leave
mov
jmp
stos
fmuls
shrl
enter
sub
pop
xchg
std
sub
leave
jl
and
sahf
fstps
bound
mov
inc
fnstcw
cmp
sub
jecxz
pop
jle
and
cs
dec
rclb
jo
mov
inc
addr16
or
data16
lahf
scas
mov
pop
sub
adcb
sub
mov
jg
cmp
stos
add
popa
ret
in
outsb
test
dec
sahf
adc
mov
cltd
fidivl
daa
sub
cli
sub
push
push
insl
mov
scas
fdivrl
xor
xchg
xchg
fstps
daa
adc
cwtl
jbe
inc
xchg
jge
js
lahf
std
loopne
cmp
enter
das
bound
cmp
mov
enter
nop
arpl
ret
repz
loope
jg
pusha
cmp
cs
in
cmp
fcompl
daa
cmp
js
aam
lcall
in
into
mov
lock
test
mov
or
popa
loopne
inc
mov
jl
test
add
sbb
fidivrs
data16
stc
imul
pusha
cli
imul
xor
push
sahf
mov
cmp
push
fldenv
aam
xchg
pop
push
jge
adc
inc
scas
inc
mov
lcall
pop
push
mov
lea
lahf
popa
inc
loopne
shll
insl
mov
xlat
out
xchg
sahf
inc
rcrl
push
stos
add
xchg
loope
iret
pushl
das
jns
imul
cmp
out
mov
jo
jno
jg
lods
xor
or
xchg
push
inc
out
or
jecxz
dec
pop
jge
int
xchg
xlat
stc
mov
adc
mov
mov
jg
out
int
push
int3
lahf
adc
lret
shlb
or
test
mov
lods
clc
pushf
cld
mov
movsl
mov
bound
ret
push
jae
insb
outsl
push
outsl
sbb
std
ret
lahf
mov
add
addr16
lahf
lock
fdivrl
mov
jbe
add
fstps
xchg
cmp
pop
dec
cmpb
xor
add
mov
in
or
outsb
dec
popf
adc
push
pop
mov
and
leave
ret
push
stc
enter
mov
in
mov
mov
sub
jp
leave
mov
sub
jbe
neg
clc
inc
sbb
das
jb
sbbl
pop
shl
sbb
dec
jno
outsl
loope
xchg
or
add
inc
in
sti
mov
aad
sbb
and
cmc
mov
mov
sub
stos
sub
push
sbb
mov
jae
and
push
mov
es
push
inc
jecxz
dec
push
push
mov
jmp
mov
lret
repnz
into
push
or
sub
or
xchg
sub
mov
arpl
mov
repnz
mov
pop
popf
sub
mov
sahf
jge
inc
adc
xchg
mov
sarl
mov
lea
movsl
jno
popl
lods
mov
and
sbb
inc
pop
enter
push
jle
dec
jns
add
mov
dec
fcmovbe
insb
cmp
movntps
lods
xchg
mov
mov
mov
push
hlt
aas
lcall
ds
cmp
repnz
jb
ss
xor
shll
xor
out
adc
pop
iret
je
or
ficoml
cmp
je
subl
add
dec
jle
mov
or
into
jmp
and
call
sub
aam
pop
mov
fs
sbb
stc
push
mov
jmp
mov
je
sar
mov
and
ds
pop
jge
popf
ljmp
bound
sbb
xchg
inc
loop
in
push
cmpsb
push
mov
and
loopne
fs
push
pop
fstl
arpl
add
mov
out
cmp
icebp
inc
mov
ret
mov
pop
sub
cmp
das
addr16
add
push
ja
adc
xor
es
icebp
jbe
pop
mov
outsl
mov
inc
aaa
and
ret
nop
adc
sar
out
andl
sar
clc
fidivs
xor
mov
sbb
movsl
cwtl
not
mov
pop
push
jne
adc
pop
in
xchg
ljmp
xchg
test
jne
lods
mov
mov
lcall
sbb
add
mov
pusha
mov
xchg
push
cli
mov
xor
sbb
mov
popa
jnp
add
sub
xor
cmc
fdivrp
add
clc
fs
cs
shlb
mov
outsw
and
ss
pop
addr16
scas
xor
scas
inc
jno
dec
cwtl
pop
ficoms
loope
scas
insb
adc
lret
add
scas
call
dec
and
adcl
insl
ja
sub
scas
notb
nop
xor
ljmp
push
test
sbb
dec
add
push
clc
imul
sub
je
pop
and
iret
pop
or
std
test
mov
dec
dec
aam
xchg
add
and
out
mov
in
sub
insl
pop
shl
aaa
cmpsl
lea
arpl
lock
std
stc
test
mov
ljmp
jno
xchg
xchg
out
rolb
scas
pop
and
pop
add
iret
push
int
ror
xlat
mov
jle
or
sub
jl
into
sub
movsl
fnstenv
iret
lahf
mov
sti
cs
push
push
adc
inc
scas
sbb
jns
mov
push
xchg
cmp
or
xor
sti
push
lods
dec
jns
mov
ret
movsb
dec
aad
outsl
or
mov
xor
xchg
lods
movsb
sub
xor
xchg
mov
int
gs
and
xor
fcomip
pop
and
jmp
lret
movsb
xchg
fiadds
out
daa
popfw
pop
into
into
inc
les
fcmovbe
iret
ljmp
pop
pop
push
ja
push
jecxz
lret
jmp
inc
dec
adc
pop
fsubrl
test
pop
out
clc
cld
ds
pop
lods
in
fidivrs
push
loopne
or
fcomi
fldz
bound
pusha
outsb
leave
dec
mov
adc
call
sahf
sbb
adc
sub
or
ror
mov
jns
add
adc
scas
out
js
dec
pushf
jge
inc
xchg
out
or
lret
add
dec
sbb
and
mov
push
sub
nop
pop
mov
ss
cli
js
xchg
std
xor
call
jae
out
aas
jg
popa
adc
mov
enter
xor
mov
imul
cli
in
pop
mov
aaa
stos
mov
lds
jmp
mov
pop
push
popa
clc
sbb
push
pop
ffree
mov
and
or
jae
cmpsl
mov
ja
adc
mov
dec
pop
xchg
cmp
int3
pusha
jo
int3
rcll
xchg
fidivl
mov
loopne
mov
push
pop
push
jg
adc
pop
pushf
pop
mov
jmp
shll
test
push
jp
add
dec
adc
ds
push
sbb
adc
adc
xchg
cltd
cmp
and
inc
mov
jmp
popa
in
iret
cwtl
ljmp
jns,pt
sarl
nop
push
outsb
lret
xchg
movsb
inc
sub
pop
mov
pmullw
clc
mov
and
add
inc
es
sbb
add
mov
xchg
popa
ja
jne
test
push
push
push
pop
scas
stc
lcall
pop
sahf
pusha
inc
insl
jecxz
out
fs
add
shrl
xor
rcr
push
push
push
mov
mov
jg
js
pop
mov
mov
roll
adc
xor
pop
xchg
cmp
pop
mov
stc
cmpsb
das
jmp
cli
fldenv
mov
fiadds
inc
popf
pop
mov
dec
jmp
inc
loopne
int3
push
dec
xchg
mov
cld
scas
ja
mov
add
jle
push
or
aaa
inc
stos
xchg
sahf
enter
mov
pop
push
loop
push
shll
leave
lock
dec
pop
sbb
xor
cmp
jl
push
jle
daa
popf
out
jecxz
inc
shll
cs
pop
mov
popa
inc
mov
data16
div
push
lds
dec
ljmp
mov
mov
ja
jg
pshufw
rorb
cli
push
pushf
addr16
xchg
repz
sbb
add
xor
outsb
xlat
mov
icebp
std
mov
imul
pop
dec
jo
jo
mov
test
insl
lock
jmp
ljmp
or
add
pop
sub
das
adc
xchg
ds
mov
in
decl
push
inc
pop
add
adc
cmpl
aaa
lcall
mov
rcrl
xorl
cmc
add
pop
xor
fidivl
iret
xchg
adc
jns
in
aas
jl
icebp
pop
and
andb
xchg
xchg
ficoms
ljmp
adc
mov
add
sbb
in
mov
cmp
push
push
inc
movsb
inc
daa
dec
mov
jb
jns
jl
les
inc
or
jmp
mov
fiaddl
or
lret
leave
dec
aam
call
dec
inc
in
mov
je
loop
mov
les
xor
push
push
mov
fldenv
rcr
scas
test
stos
fcoml
jb
jae
sbb
xor
lcall
frstor
or
pop
nop
dec
push
nop
mov
jbe
xchg
mov
xor
mov
pushf
mov
imul
dec
out
or
outsb
out
inc
sarl
out
flds
stc
mov
lods
and
loop
sub
push
mov
mov
jne
mov
sub
inc
aaa
xchg
lods
mov
push
aaa
inc
cmp
bound
sub
fcoml
mov
arpl
push
sbb
repnz
mov
mov
push
jne
push
jle
pop
mov
sub
fistpl
cmp
jne
fiadds
and
vmaskmovdqu
push
or
es
add
cmp
test
loop
fiaddl
add
dec
sub
in
pushf
insl
jns
outsl
call
loop
je
jb
lds
dec
cltd
push
jle
jg
les
add
xchg
pop
popf
repz
movb
inc
mov
mov
repz
stos
stc
mov
mov
fmull
sub
mov
mov
inc
ret
inc
add
mov
inc
imul
fsubr
or
scas
stc
xchg
popl
fwait
xor
out
rorb
iret
popf
jecxz
sub
dec
mov
cwtl
sub
pop
pop
js
popf
test
pushf
stos
pop
out
lods
push
in
sbbl
ja
dec
ljmp
xchg
adc
push
das
idivl
loopne
cmpsl
or
hlt
jmp
mov
data16
fs
or
addr16
imul
dec
mov
popl
je
cmp
mov
pop
and
cwtl
push
incb
inc
jb
and
outsb
ficompl
addb
dec
mov
xlat
push
mov
repz
sbb
xor
gs
mov
nop
daa
inc
fisubrs
std
mov
test
add
xor
and
xor
outsb
jb
and
mov
add
fstpt
mov
push
fwait
sbb
jae
call
mov
pop
xchg
int3
mov
sbb
loope
insb
lahf
adc
popa
inc
enter
xchg
dec
outsb
sti
pop
push
dec
repz
bnd
aas
push
cwtl
push
andl
sub
push
sub
lods
rorl
test
mov
mov
rcrl
and
add
out
ret
call
push
mov
push
sarb
sbb
add
and
sbb
test
bnd
fistl
imul
sbb
testl
mov
jg
gs
inc
jecxz
jecxz
ja
lock
mov
xchg
cli
ret
pop
fs
fstl
push
or
push
pop
push
movsl
mov
ffree
mov
test
cmp
mov
popf
cmp
inc
sbb
clc
addr16
cmp
push
lret
ja
imul
mov
rorl
test
xchg
in
jl
and
jb
sbb
loop
jo
cmc
pop
add
test
je
aad
andl
cmp
test
sub
cltd
mov
aad
push
push
inc
cmpsl
daa
xchg
rcl
rclb
adc
inc
sahf
repz
shlb
out
sbb
daa
fisttpll
ljmp
mov
add
pushf
sub
sub
fsubs
imull
jp
push
loope
push
add
push
je
mov
sahf
inc
xchg
add
add
adc
cmpsb
ss
xchg
addr16
aad
jae
pop
jle
push
cmpsb
scas
enter
or
add
mov
add
jl
cld
xchg
scas
pushf
aaa
arpl
adc
mov
and
inc
xchg
mov
push
xor
sarl
mov
add
add
js
aad
daa
pusha
push
sub
dec
pop
inc
dec
mov
inc
lods
xchg
mov
push
mov
dec
xchg
data16
or
xchg
and
cmp
push
xchg
faddl
dec
jae
sbb
inc
out
xchg
loop
push
xor
imul
mov
mov
mov
rcll
dec
jg
loop
ficomps
inc
fidivrs
mov
xor
imul
mov
jbe
pop
ja
shlb
lahf
inc
popf
sub
jns
mov
mov
bound
mov
addr16
in
scas
push
dec
ret
addr16
jp
inc
xchg
ss
test
and
cmp
jne
xlat
iret
ficoml
jbe
mov
adc
jno
sub
inc
inc
sahf
mov
or
pop
dec
jb
call
add
pusha
jmp
pusha
imul
mov
mov
ret
pop
enter
add
lahf
xchg
les
rclb
ljmp
or
adc
cmp
adc
sarb
sahf
inc
data16
dec
mov
mov
jb
inc
in
scas
adc
sub
out
push
mov
adc
sub
push
add
test
pushf
push
in
add
leave
scas
negl
inc
mov
sbb
pushf
stos
dec
lds
aam
xchg
push
adc
jns
xchg
fs
and
mov
add
jbe
sbb
and
xor
out
push
dec
cltd
or
sbb
lcall
fnstsw
and
into
ljmp
xchg
dec
nop
xor
mov
mov
movsb
out
dec
dec
scas
ret
es
std
push
cmp
push
adc
outsb
cmpsl
and
adc
int3
dec
jo
fists
std
cmc
inc
insb
cmp
adc
or
push
adc
lea
fs
je
jo
adc
dec
addr16
je
insl
pushf
mov
or
xor
mov
and
loop
sbb
push
andl
fstps
inc
js
sbb
pushf
cltd
fistpl
xchg
movsb
out
cmpsb
mov
mov
push
lods
lret
xchg
sarl
fstpl
sub
stc
je
int3
out
sbb
xor
in
aaa
cmp
adc
xchg
push
lcall
mov
fistl
js
adc
cwtl
imul
mov
fnstcw
or
and
test
mov
hlt
jp
stc
dec
pop
xchg
inc
ret
add
mov
mov
fdivp
popf
xchg
inc
loope
mov
imul
inc
ror
cli
sar
pop
sub
lock
sarb
jns
jmp
sub
test
out
or
mov
icebp
cmc
mov
or
or
and
imul
jecxz
push
push
or
insb
jge
insl
imul
sti
xor
arpl
jg
push
outsl
cmp
pop
test
mov
adc
or
jbe
loop
add
cltd
sub
fs
out
movsl
pop
es
xchg
cmp
das
enter
stc
lods
xchg
fisttps
adc
or
rcrl
pop
fidivl
scas
inc
fdivrl
adc
mov
stc
test
cmp
sbb
adc
mov
mov
out
aas
mov
or
inc
push
mov
clc
lret
mov
pop
imul
fidivrs
adc
add
mov
and
xor
jmp
sub
pop
in
lds
mov
mov
repnz
dec
mov
in
shrb
cmp
rcr
lcall
leave
dec
pop
cmp
popf
pop
es
mov
cmpsl
inc
shrb
insl
fldcw
ror
cmpsb
push
pop
jecxz
dec
out
adc
cmp
push
decl
test
loope
in
nop
andb
dec
fdecstp
dec
sbb
lock
dec
inc
cmp
adc
mov
mov
call
jge
pop
rcll
jb
cmp
jge
or
xor
mov
sbb
sub
lds
leave
stos
sbb
inc
dec
repz
lock
or
inc
scas
icebp
outsb
pop
sub
pop
daa
pop
iret
sub
in
push
cs
test
lods
xchg
test
imul
or
inc
inc
add
mov
and
out
stc
cmp
jle
popa
js
jmp
jo
nop
jecxz
adc
out
ret
popf
sbb
insl
cmc
adc
sbb
cmp
int3
shrl
mov
std
into
mov
jge
into
pop
cmp
jle
and
xor
lds
call
int
outsl
int
out
push
adc
sub
dec
mov
and
xchg
inc
add
mov
pop
out
icebp
or
movsl
mov
inc
rcrb
mov
jnp
sbb
xchg
mov
mov
clc
imul
leave
xchg
ja
mov
fsubs
adc
xlat
stos
repz
rorl
inc
push
push
inc
mov
lret
imulb
jl
sbb
mov
addr16
jbe
fcompl
jae
adc
cmpsl
mov
mov
push
dec
mov
mov
movntps
stos
push
jb
add
subb
inc
aaa
add
jge
push
jmp
mov
xlat
incb
pop
mov
fwait
or
push
push
rolb
sub
aaa
fmulp
aas
jns
repnz
fcmovu
push
in
mov
pop
pop
add
aam
inc
sbb
jg
push
addr16
and
fsubrl
repz
rep
cmp
push
out
mov
jp
mov
add
imul
decl
push
ficoml
push
movsb
and
fucom
mov
data16
arpl
hlt
fucom
mov
pop
dec
into
out
or
or
dec
cmc
cs
test
loopne
xchg
adc
xor
cld
and
lods
test
sub
inc
adc
mov
insl
adc
jp
xchg
cli
test
test
pop
sub
sub
sti
loopne
sti
lcall
fildl
push
cltd
dec
test
sbb
int3
lret
xchg
in
sbb
adc
cmp
imul
in
loop
mov
fdiv
mov
lret
mov
fidivrl
mov
mov
popf
mov
les
jb
inc
xchg
inc
arpl
adc
xor
sbb
sub
gs
lret
push
push
fisttpl
movsl
pop
dec
cltd
push
and
notb
dec
int
push
mov
mov
sarb
outsl
push
cmp
leave
fdivl
ljmp
mov
mov
push
out
fcompl
or
lds
or
mov
mov
std
adc
xor
adc
out
sbb
or
fadds
push
or
pusha
inc
cmp
out
repz
pop
int
dec
ror
ljmp
and
data16
js
ret
xorl
mov
insl
sub
adc
jp
add
jns
aas
cmp
test
and
xchg
cwtl
add
mov
push
ljmp
cs
fbstp
pop
jbe
icebp
mov
in
test
inc
sub
frstor
std
repz
ret
sahf
loopne
mov
push
xlat
xchg
pop
dec
adc
mov
pushf
outsl
ds
fldenv
cs
sub
daa
pop
dec
lret
sbb
fisubl
dec
data16
cmpsb
jmp
imul
popa
aad
imul
sbb
lret
mov
and
mov
out
mov
cmp
jp
jbe
mov
and
outsl
cmc
dec
cmp
sbb
stc
add
scas
or
faddl
cmc
mov
movsl
cmpsl
ret
not
in
pop
mov
outsl
jno
mov
sbb
negl
sub
gs
pop
and
movsl
pop
cmp
arpl
aas
mov
out
xor
cmc
and
inc
xor
sbbb
mov
sbb
movsl
movsb
xor
rolb
lods
mov
out
pop
xchg
sahf
stos
das
fstl
jne
mov
or
xchg
xchg
dec
push
dec
adcb
inc
loopne
xor
xlat
scas
in
xchg
inc
xor
pop
insb
sub
sbb
dec
mov
sub
add
test
mov
call
adc
imul
ja
mov
imul
xor
das
sub
sub
jno
adc
jo
mov
mov
lea
in
cmp
sar
cmp
and
mov
jmp
scas
mov
mov
add
and
shl
mov
aaa
lods
inc
shll
loop
mov
out
xor
call
hlt
or
stos
push
pop
pop
adc
les
xchg
ficomps
inc
lds
pushf
orb
frstor
xchg
push
xor
fisttps
inc
nop
pop
std
or
jbe
mov
mov
in
in
cmc
mov
adc
mov
jl
push
and
mov
ret
jns
push
lock
addl
jne
dec
call
pop
jae
loope
add
je
xor
mov
and
jnp
shrb
lcall
sbb
lahf
add
dec
mov
push
pop
fadds
xchg
pop
mov
lahf
ljmp
mov
push
xabort
paddb
rorl
imul
inc
mov
mov
movsl
lea
pushf
in
in
lret
jg
movsl
jns
sbb
scas
jo
dec
add
inc
jmp
cmpsl
or
push
das
ja
ja
sbb
std
or
jecxz
test
aad
pushf
sub
hlt
jge
int
data16
pop
cmp
inc
sbb
pop
mov
mov
mov
add
mov
fisttpl
jecxz
lods
jmp
push
cmpsb
sbb
xchg
movb
inc
mov
push
push
das
jmp
loop
cmp
pop
mov
mov
jmp
int3
cmc
aaa
dec
and
cmpsl
loop
ret
adc
cmp
push
jmp
push
jb
push
sbb
idivl
adc
sub
or
outsb
push
cmc
sub
add
jb
jo
and
cmpsl
push
shrb
xorl
xor
mov
xchg
mulb
out
in
bound
mov
fdivp
fnsave
ret
pop
aas
lcall
pop
arpl
lock
mov
test
or
jg
ds
cmpsl
rcll
jmp
push
notl
jns
and
std
xchg
lret
xchg
dec
mov
jecxz
imul
jne
mov
in
sti
pop
aas
out
or
sbbl
outsl
arpl
sub
inc
jo
es
stos
cwtl
mov
movsb
push
lods
cmp
aam
ret
cmp
sbb
xor
mov
add
mov
lahf
test
clc
fstpt
out
mov
scas
aad
and
push
incl
pop
pop
out
rclb
pop
aas
cmp
aas
scas
adc
xor
sub
mov
push
cs
loop
in
ficomps
out
imul
pop
xor
lret
jge
push
lea
test
xchg
push
push
xchg
insb
into
test
hlt
hlt
mull
in
jmp
daa
push
jg
sub
jmpw
cmp
insb
add
or
movsl
push
fdivrs
into
popa
xchg
or
adc
test
cltd
rorl
test
inc
xchg
or
mov
xor
push
cmp
int3
adc
int
ss
iret
shlb
aad
or
cltd
lea
sti
movsl
inc
ja
and
push
push
fiaddl
cmpsb
scas
adc
aaa
outsb
jne
sbb
xchg
int
mov
mov
mov
add
xor
popa
loope
mov
sti
ds
xor
inc
jne
dec
adc
and
cmp
jne
test
in
sub
orl
dec
jl
lods
xor
out
repz
cmpsb
mov
add
push
cmp
sub
xorl
es
fwait
sub
and
cmp
xlat
adc
push
out
sub
cmp
cmp
sbb
mov
cli
sub
xchg
or
push
outsb
mov
cld
add
fwait
lret
pop
sbb
stos
mov
cmc
sub
stc
cmc
dec
sub
sbb
xor
out
ret
push
cmp
ret
lret
test
popa
cmpsb
addr16
scas
pop
inc
push
cltd
dec
pop
aam
jne
mov
sub
imull
pop
xchg
lea
pop
call
mov
pop
mov
xchg
out
xchg
fs
jp
sub
sub
cmpsb
or
pop
xorl
lret
mov
push
enter
sbb
push
stos
leave
push
mov
inc
fcompl
push
add
mov
subb
inc
cmp
dec
or
aam
sbb
and
out
xchg
jno
pop
inc
int
cmp
jmp
popf
iret
cmp
xchg
cld
inc
xchg
mov
xor
ljmp
mov
mov
int
or
addr16
cmp
inc
in
mov
out
lret
push
sub
fldcw
pop
mov
ret
or
sub
sub
arpl
cmp
insl
mov
pcmpgtb
push
inc
adc
adc
addr16
push
test
push
add
or
imul
punpckldq
test
shll
inc
mov
push
push
outsb
scas
gs
out
sbb
xchg
hlt
ljmp
cmp
add
mov
leave
sbb
add
pop
jecxz
repz
or
in
or
jle
xor
dec
aas
jnp
stos
add
mov
mov
out
lret
or
pop
aad
xor
pop
pusha
sub
les
add
idivb
xor
movsb
xchg
or
xchg
in
and
adc
jp
inc
sub
loop
sbb
dec
outsl
movsl
scas
inc
jbe
sti
cmp
outsb
bound
pop
mov
int3
and
or
adc
rcl
or
xchg
push
sbb
or
es
mov
mov
xchg
ds
repz
mov
mov
addr16
gs
pushf
add
mov
inc
cmpb
inc
fcmovnbe
jmp
cli
scas
arpl
stc
nop
mov
rcrb
mov
test
in
stos
in
aaa
out
mov
pop
xchg
ss
lock
add
dec
pop
adc
xchg
movsb
jbe
je
leave
cmp
push
insl
lea
fstl
sbbb
add
leave
and
sti
add
stos
sub
push
in
fildl
mov
pop
fistpll
mov
push
cmp
jl
rolb
adc
dec
mov
cmp
arpl
dec
loopne
rcll
repnz
cld
and
aam
out
and
shrb
outsb
mov
mov
adc
xchg
jnp
lds
aad
xchg
shll
rorb
cmp
loop
add
loopne
int
add
fisttps
les
outsl
aam
lds
negl
add
and
movsb
int3
xbegin
loopne
cmp
add
xchg
cmpsb
sbb
inc
sub
dec
xchg
cmp
push
and
sub
jno
push
sub
rorb
inc
jecxz
or
mov
xchg
adc
cs
ss
add
rcrb
ret
xchg
mov
push
inc
fwait
loop
cwtl
and
outsb
mov
sub
pusha
test
sub
inc
in
push
cmp
push
push
aas
negl
cmovl
add
adc
lret
in
lahf
cmp
mov
frstor
xchg
add
jle
pop
push
jne
add
mov
iret
pop
lret
and
subl
out
aad
jmp
push
xor
stos
outsl
rcrl
cmc
test
out
and
pop
pop
fs
repnz
ret
data16
mov
cmp
dec
xor
push
jl
jne
and
pushf
out
push
cmp
add
jp
sub
int
je
add
out
adc
cmp
inc
dec
inc
pop
fbstp
sbb
cs
lret
outsl
push
mov
aam
std
dec
in
sarl
mov
subb
or
cmp
loop
adc
repnz
outsb
and
adc
push
mov
push
cltd
dec
push
lock
mov
lea
fmul
add
xlat
xchg
xor
jo
loope
loope
outsl
iret
cmpsl
mov
dec
mov
scas
jns
cmp
mov
push
scas
inc
cs
popa
inc
pop
cli
repnz
xchg
inc
scas
push
mov
sub
shll
xchg
imul
pop
xchg
xchg
cmp
add
mov
sbb
cmp
push
mov
lds
pusha
ss
xchg
ss
fcmovu
insl
inc
jg
push
sub
lds
sub
lds
xor
or
mov
lea
push
mov
dec
xor
pop
push
add
aam
mov
inc
add
xchg
frstor
add
jecxz
mov
imul
cmp
popa
adc
es
fsubp
imul
add
pop
push
pop
push
test
pop
insb
xchg
mov
mov
adc
and
xchg
dec
jecxz
mov
inc
fwait
sbb
rep
adc
es
lcall
mov
int3
dec
subl
test
sbb
dec
jns
mov
dec
stos
ret
adc
sbb
push
popf
push
mov
gs
pop
mov
inc
or
repz
fbstp
add
lcall
fs
jg
movsb
cltd
enter
shrb
mov
fidivl
add
movsl
mov
fs
adc
out
imul
sub
hlt
inc
rcll
scas
cmp
cmp
lds
dec
cmc
mov
cld
and
xchg
mov
sar
sbb
movhps
cmpsl
push
push
and
xor
leave
xlat
hlt
gs
push
js
lock
popa
mov
sarl
loope
pop
push
or
sub
jle
ds
lods
loope
ss
jmp
pop
xor
push
out
cld
lea
shll
and
jl
imul
mov
rcll
fisttps
sub
lret
pop
sub
xlat
add
sbb
and
out
movsl
inc
adc
int3
and
push
sub
and
insl
movl
mov
push
xor
dec
gs
cmp
jmp
pop
into
je
pop
fwait
arpl
fmulp
loope
pusha
out
aad
notl
add
ss
out
lcall
push
inc
add
insl
cmp
push
neg
add
mov
mov
push
sbb
jmp
in
pop
pop
fwait
jae
inc
mov
in
mov
xchg
in
in
add
inc
enter
sbb
out
and
cmp
inc
int
enter
ret
mov
ss
je
add
pushf
pop
testb
inc
sbb
in
and
jno
push
sti
stos
and
clc
in
out
lcall
xchg
mov
mov
mov
es
arpl
pop
cmc
stc
cmc
sahf
jno
fstps
push
lods
int
les
dec
cmovo
jo
test
sbbl
in
mov
stos
mov
jmp
out
fmull
mov
push
callw
inc
outsl
cmc
push
xchg
aaa
in
mov
push
outsl
cmp
je
das
cld
xor
data16
scas
clc
sbb
in
mov
bound
mov
in
sbb
jle
or
add
lods
sbbb
test
cmp
jno
loop
mov
idiv
aas
mov
cmp
inc
in
ja
ljmp
jecxz
dec
or
subl
stos
jge
es
in
stos
xor
push
into
push
or
jecxz
insl
xchg
jg
or
sub
jp
xchg
inc
imul
imulb
insb
cs
cmc
pop
rcrl
stos
test
mov
js
aaa
pop
ret
and
daa
fisubl
jmp
shrl
sub
cmp
cli
pop
mov
call
push
jg
pop
mov
sbb
add
or
scas
sahf
mov
xchg
movsl
or
ljmp
push
mov
imul
mov
and
insl
push
into
and
inc
rcr
pop
adc
movsb
or
insb
sub
mov
push
or
dec
mov
shl
ds
push
gs
popa
xchg
and
add
jecxz
adc
scas
shl
cmp
jl
xchg
jge
or
out
pop
xchg
jl
add
push
adc
fcomi
out
and
or
dec
dec
lock
cmc
push
adc
roll
pop
pop
fcompl
scas
dec
popf
aaa
mov
add
push
sti
insl
sub
sub
ja
inc
popf
arpl
and
scas
lock
fbld
add
jno
fwait
add
mov
sbb
arpl
popl
xchg
and
repnz
lds
mov
lods
mov
inc
sbb
mov
shrl
daa
les
add
mov
and
xchg
aaa
nop
jno
les
sbb
jb
xchg
ficomps
or
jno
push
dec
scas
sti
clc
xchg
mov
or
mov
cmp
orl
sahf
pop
dec
mov
pop
and
mov
mov
fincstp
xchg
xchg
ss
jnp
pop
out
jno
dec
test
mov
aas
imul
sbb
mov
iret
adc
push
cmpsl
sbb
add
psubq
cmp
or
pop
imul
adc
fcmovb
add
sub
jl
jmp
je
imul
xchg
cmpsl
xchg
cmc
rcl
or
add
xchg
out
fstps
jno
out
lret
outsl
push
rcl
loope
std
xor
adc
arpl
out
sbb
and
mov
daa
xor
dec
and
cmpsl
test
mov
mov
data16
push
adc
pop
aam
lock
pop
stc
clc
inc
sbb
outsb
shl
inc
iret
neg
mov
mov
mov
test
jecxz
jb
xchg
or
pop
push
mov
xchg
inc
mov
repnz
out
cmpsl
stos
mov
dec
imul
push
cmp
cwtl
js
fdivs
sub
scas
test
test
and
push
popf
push
dec
fnstcw
jmp
sub
xor
faddl
mov
xor
dec
inc
rcrl
pop
jnp
stos
push
out
imul
adc
das
mov
cmp
shlb
cmp
and
jns
out
adcl
pop
add
lods
outsl
je
ss
add
stc
jmp
jno
pop
inc
pop
std
loop
movsb
pop
sbb
jae
in
xor
jle
xor
push
jno
jmp
and
ja
sub
push
sub
icebp
jns
cmpsl
cmp
jmp
pop
int3
xor
lahf
in
lods
adc
loope
mov
call
outsb
roll
mov
outsb
cmp
ret
xor
aas
scas
fwait
aam
push
and
shrl
xchg
test
xlat
jae
push
icebp
sahf
sbb
sahf
add
daa
mov
lds
ficoms
lock
clc
mov
push
aas
stos
mov
sbb
imul
jnp
mov
xchg
rcrl
mov
dec
fsubs
jns
sub
es
mov
in
xchg
jbe
pop
int3
push
pop
pop
lock
divl
adc
push
jge
sbb
jns
add
xchg
into
enter
jne
addr16
inc
addr16
xchg
push
mov
imull
sub
cmc
sbbb
lds
lds
cmp
cmp
xor
out
addr16
insl
loope
scas
lcall
xor
pop
xchg
ljmp
fmuls
xorl
push
xor
mov
jo
fiadds
ja
mov
sub
loope
mov
rcll
lret
xchg
cmp
pushf
rcl
inc
dec
cmpl
add
add
pop
xchg
rcrl
inc
hlt
adcl
dec
enter
test
or
xchg
or
dec
adc
std
or
pop
jae
fildll
cmc
dec
mov
test
addr16
mov
cmpb
pop
pop
push
out
aaa
push
inc
inc
inc
inc
pop
jg
push
and
iret
cmp
add
daa
jge
das
cmp
pop
mov
shlb
sub
pop
ret
sub
and
popa
clc
dec
jle
cmc
or
jae
sbb
push
inc
xor
or
lret
inc
pop
in
mov
scas
pop
push
insb
call
push
mov
insl
adc
xchg
dec
pop
adc
mov
xor
mov
rcrl
mov
mov
pop
sub
push
pop
inc
fildll
jb
sub
adc
mov
lods
and
mov
push
xchg
push
es
adc
in
lock
dec
or
push
push
push
test
push
jne
sub
ret
and
jmp
mov
roll
pop
sbb
adc
es
mov
ljmp
ljmp
divl
rcll
cld
sbb
mov
lahf
ljmp
xchg
dec
jge
stc
push
lea
hlt
enter
push
adc
out
adc
sbb
jle
sbb
pop
lahf
loopne
enter
incl
mov
iret
ficoms
cmp
cli
mov
loopne
jmp
sub
inc
or
xchg
mov
jg
mov
rorl
pop
jmp
and
mov
insb
gs
inc
addr16
adc
and
daa
cmc
jle
sub
jle
scas
xchg
mov
call
lahf
test
loopne
inc
mov
sti
pop
xor
movsb
and
ljmp
test
pop
sbb
inc
jns
gs
shr
cmp
sub
xor
jle
mov
sub
cmp
sar
clc
sbb
mov
pop
mov
inc
out
test
or
or
xlat
mov
mov
repz
and
inc
pop
cs
lcall
add
fisubrs
mov
mov
mov
movsb
jo
testb
ds
xor
sbb
or
mov
xchg
or
fidivrl
sbb
push
fcmovu
pop
xor
test
out
cwtl
adc
sbb
pop
clc
push
lcall
mov
adcl
icebp
pop
or
mov
in
fmuls
jl
imul
sub
lcall
cmp
pop
lods
sub
dec
sub
ror
add
lret
dec
push
fs
loop
call
adc
outsl
push
into
cmc
add
ficoml
stc
ficoml
sub
add
es
xor
push
fildl
test
orl
subl
cmp
xlat
or
faddl
jns
push
fwait
jg
jl
enter
adc
adcb
xchg
ja
not
xchg
adc
cmpb
push
popa
xchg
mov
mov
dec
fwait
xchg
nop
pusha
out
and
mov
shll
aad
sbb
std
jbe
enter
inc
mov
sbb
ja
xor
divb
fidivs
push
loop
mov
add
scas
scas
jl
cmp
mov
loopne
lods
cwtl
sub
in
push
push
mov
loopne
jae
mov
mov
xor
into
jo
adc
pop
inc
mov
std
xchg
add
jecxz
cmpxchg
nop
pop
js
fstps
cmp
sub
pop
testl
mov
leave
gs
jbe
cmp
jbe
lcall
pushf
jnp
push
movsb
hlt
jp
addr16
and
out
mov
orb
mov
in
jl
mov
shrb
insl
out
fsubl
int3
fistps
scas
cmpsb
xlat
xchg
push
popf
mull
cmpsl
push
in
scas
icebp
pop
lock
fcompl
push
aad
mov
sub
lods
sbb
sub
rcrl
divb
in
or
rdpmc
into
cmp
dec
pop
sti
xchg
lret
sub
sahf
stc
and
cld
out
cmc
cmp
ss
push
lret
jnp
xchg
mov
mov
loop
adc
in
call
repz
and
sub
jmp
mov
stos
mov
xor
push
mov
pop
jge
mov
jp
mov
or
inc
xchg
fisttps
rcrl
add
rclb
cwtl
fnstsw
or
inc
cmp
pop
inc
mov
popf
lret
xor
roll
pushw
push
cmp
push
scas
inc
mov
and
in
mov
daa
cwtl
add
jno
mov
cmp
jmp
fstpt
jg
mov
sub
fisubl
stos
ftst
add
jmp
sbb
inc
mov
daa
push
sahf
shlb
xchg
lret
jmp
stos
dec
sub
lods
sub
jnp
leave
inc
xor
cmpsl
adc
loopne
push
push
mov
push
dec
pop
cmc
mov
iret
movsb
jecxz
xchg
push
add
aaa
adc
jmp
hlt
sarl
mov
lret
icebp
inc
bound
hlt
xchg
mov
pusha
and
adc
mov
stos
cltd
iret
mov
js
and
lods
ss
out
push
notb
mov
arpl
jmp
nop
mov
aad
lea
shll
jl
test
push
or
or
jae
stos
push
lret
cmc
jge
stc
cld
aaa
jl
call
pop
mov
jp
sbb
mov
outsb
out
shlb
dec
add
rcrb
fstps
enter
sub
cwtl
and
mov
mov
std
mov
lock
pop
je
pop
fmuls
hlt
les
sub
xor
and
and
dec
rcr
stc
loop
jl
les
divps
push
xor
mov
jns
sub
idivb
aaa
and
scas
mov
cwtl
mov
and
mov
xchg
lea
xchg
aad
movsl
out
sbb
xor
es
fnstenv
nop
fs
cmp
addb
mov
push
icebp
and
xorl
adc
rclb
insl
mov
dec
ss
mov
xchg
gs
xchg
pop
mov
ds
dec
xchg
dec
xchg
jns
fsubrl
iret
lods
mov
pop
add
xchg
jp
jg
lods
xchg
push
stos
stc
es
test
loopne
adc
adc
repnz
or
push
adc
fstl
mov
ficomps
dec
sbb
ret
pop
push
pop
gs
and
inc
je
add
das
add
push
cli
rcll
xchg
sbb
fdivrs
int3
aam
out
add
mov
sub
sarb
mov
mov
ret
sub
push
xchg
lcall
xchg
mov
xorl
cmp
push
push
xchg
data16
es
cmpsb
nop
mov
inc
ret
jb
ds
ret
pop
jb
mov
xchg
cmp
gs
arpl
lret
fimull
adcb
add
cmc
int
xchg
xlat
stos
or
add
popa
test
ret
mov
dec
pop
dec
jl
fcmove
mov
in
cmp
or
mov
sarb
mov
cwtl
sub
fdiv
enter
pop
adc
lcall
popf
addb
inc
and
pusha
andb
test
sbb
jecxz
fwait
sbb
adc
push
dec
jb
lcall
shlb
aad
cmpsb
jp
push
scas
fidivrs
pop
out
dec
pushf
cli
jno
add
fs
and
cltd
mov
lret
in
cmp
push
lock
lods
out
jge
or
inc
inc
movsl
std
mov
adc
lock
fdivl
mov
push
mov
add
ffree
das
aam
mov
loope
test
adc
aam
sbb
adc
sbb
jl
and
sti
cmp
cmp
mov
xor
out
cmpsl
rol
js
push
test
fmull
inc
sub
mov
cmp
push
cmp
gs
bound
xchg
mov
insl
inc
adc
adc
cltd
clc
pop
xchg
sbb
lds
push
es
jmp
das
or
int
daa
in
mov
pushf
cs
pop
es
test
lret
push
xchg
in
mov
sub
int3
dec
inc
cli
mov
loopne
punpckhwd
popa
insb
scas
jl
add
xchg
add
cmp
adc
push
repz
add
cltd
cwtl
lcall
mov
mov
cmp
push
pop
sbbb
or
gs
stos
stos
dec
aam
push
aam
movsb
mov
add
test
aaa
fnsave
loope
cmp
and
inc
sub
ss
lods
jl
pop
stc
add
push
cltd
iret
leave
les
aaa
jno
test
outsb
insl
out
ss
addr16
in
jle
lret
mov
fldcw
push
sahf
xchg
add
and
cmp
out
mov
es
jg
mov
data16
or
sub
in
push
insl
inc
xor
imul
rcll
sbb
out
mov
inc
fidivrs
push
scas
pop
jge
fidivl
xor
idivb
inc
or
sbb
and
dec
daa
subl
ds
mov
subl
in
in
inc
std
imul
out
orb
pusha
icebp
aaa
xor
adc
in
mov
lret
aam
ficomps
insl
jns
xchg
addr16
fidivrs
shlb
aad
mov
xchg
sub
std
push
add
mov
addr16
loope
xlat
mov
or
mov
lahf
or
dec
add
movsl
test
insl
sub
pop
ja
int3
xchg
sub
mov
xchg
or
adc
data16
call
sahf
pop
cmpsl
and
mov
std
sub
in
or
mov
xchg
xchg
lcall
lcall
mov
mov
js
cmp
pop
fdivrl
xor
aas
clc
fisubrs
fs
nop
and
xor
out
sahf
bound
push
pop
stos
fistl
jmp
xchg
mov
clc
push
or
push
push
fmulp
mov
cli
jns
jae
add
xchg
stos
aas
les
cmpsl
clc
and
mov
xchg
xchg
ljmp
cmp
jp
fldenv
pop
insl
or
adc
cmc
and
les
imul
cs
cmp
loope
sub
cs
push
jmp
jns
add
xchg
cmp
lods
and
or
and
test
scas
xorl
ss
push
adc
movsl
imul
xchg
call
shll
inc
push
mov
das
filds
fsubp
sub
mov
sbb
rolb
ds
dec
adc
dec
aam
lea
cmpsl
lods
fcoms
scas
push
sbb
pop
dec
lea
sbb
jbe
and
rcr
mov
xor
inc
fucomp
xor
and
cmp
fwait
scas
rclb
lods
or
jne
std
rorb
mov
sub
sbb
xchg
nop
cmc
movl
push
popa
inc
hlt
adc
jo
xchg
mov
and
in
xor
in
movsl
gs
xor
pop
call
push
pop
and
cmp
mov
adcl
enter
xchg
fmuls
sub
ret
pop
sbb
iret
pop
jne
scas
mov
xor
mov
fldenv
sahf
adc
outsl
xor
mov
xlat
in
fsubr
cmp
jb
bound
jae
aas
test
insl
pop
incb
cld
inc
pop
ret
cmp
hlt
jne
pop
fcmove
stos
jle
loop
cmp
incb
ret
cmp
cmp
dec
sbb
adc
xchg
dec
sub
jb
inc
mov
imul
lods
fstl
push
outsl
mov
xchg
mov
scas
mov
sbb
xor
cmp
dec
loop
jns
loope
pushl
mov
aaa
in
pop
or
cmp
or
mov
or
repz
mov
inc
dec
push
repnz
cwtl
dec
push
leave
or
loopne
or
fs
lcall
cmp
mov
pop
inc
fsts
xor
adc
int3
les
es
int
jne
into
add
adc
jp
repz
xlat
jo
add
xsha256
cmpsb
xlat
or
imul
push
push
pop
repnz
xchg
or
pop
dec
jle
and
rolb
and
and
pop
jo
dec
das
test
adcb
xchg
iret
fdivs
movhps
cld
mov
out
adc
ljmp
cmp
xchg
stc
cltd
arpl
cmpsl
jns
mov
jne
das
jbe
push
xchg
pop
loope
popf
fldt
cmp
sub
jecxz
pop
adc
and
in
cmp
mov
inc
repz
stos
into
pop
fidivrs
loop
repnz
insb
les
mov
addr16
arpl
sbbl
mov
jne
xor
xchg
imul
loop
repnz
test
mov
inc
xchg
call
mov
nop
shlb
fidivrs
mov
and
ljmp
lea
inc
cmp
mov
outsb
notb
lds
xchg
fcos
faddl
lea
adc
cmc
jae
pop
cmp
cld
cmp
mov
xor
mov
jne
and
sbb
cltd
inc
inc
repz
std
mov
hlt
and
inc
sti
push
push
and
lea
notb
pop
or
lock
mov
dec
cs
jle
adcb
add
cmp
lahf
movsl
mov
jno
pop
outsl
imul
sarl
into
mov
dec
pop
mov
inc
dec
jmp
xchg
bound
int
shl
cmc
pop
and
push
xor
pop
cmc
mov
popa
dec
es
sub
adc
jnp
dec
out
rclb
sbb
imul
mov
sub
aam
negb
rcrl
mov
ds
jno
jge
lret
fisubrs
ljmp
pop
nop
push
jo
xlat
es
jle
inc
das
sbb
fwait
sbb
inc
insl
dec
leave
jo
and
neg
push
aad
andb
mov
adc
andl
push
cmp
mov
decb
hlt
sbb
lcall
sti
push
inc
jbe
xchg
adcb
fsubs
das
in
xor
bound
nop
mov
inc
adc
inc
sbb
pop
jbe
xlat
stos
sub
pop
cld
sbb
out
push
jge
test
into
iret
repz
cmp
sbb
into
push
dec
mov
daa
fcmovne
push
or
push
jg
stos
pusha
test
mov
pop
inc
pop
aas
decl
adc
je
out
stc
insb
insl
jl
mov
add
cwtl
xchg
fdivrl
cli
and
mov
xor
sarb
pop
sti
jbe
in
stos
int3
mov
ds
movsl
dec
jmp
stc
jns
out
sub
test
inc
ljmp
mov
fwait
stos
nop
insb
or
mov
add
jecxz
mov
mov
stc
movsl
mov
pop
jl
xchg
adc
and
ret
push
aad
lahf
daa
dec
inc
xor
xor
jge
dec
outsb
int3
sub
outsl
sar
nop
in
mov
fisubl
dec
mov
aam
aad
stos
jg
jne
stos
push
xor
xlat
sbb
fwait
xchg
mov
cwtl
aaa
rcl
mov
xchg
cmp
lcall
dec
inc
in
mov
ret
cmpb
or
in
xchg
xlat
fisubs
test
js
xchg
inc
inc
arpl
aas
jbe
les
push
int3
aam
jae
xchg
cld
repnz
test
jmp
icebp
cmp
jl
out
test
outsl
sub
pushf
lds
xchg
hlt
dec
xchg
jl
pop
add
ja
insb
dec
or
ja
out
sahf
daa
loope
cmpsl
in
or
cs
mov
daa
das
out
pop
push
lcall
call
push
push
or
pop
adc
enter
jae
addl
in
inc
adc
ljmp
in
aad
fldcw
fidivs
aad
pop
inc
push
push
bound
dec
insb
ret
repnz
sbb
sti
imul
fs
mov
mov
sub
sbb
push
inc
cmp
imul
lahf
repz
sub
fsubl
dec
mov
iret
mov
sub
sub
sbb
push
or
pusha
xor
inc
aad
inc
and
movsb
lahf
das
subl
imul
adc
or
inc
jge
inc
inc
adc
cltd
xor
hlt
add
xor
adc
pop
stos
xchg
mov
push
fldl
aas
lahf
inc
test
push
int3
push
or
loopne
test
sub
pop
add
nop
orl
add
and
sahf
jle
lods
inc
mov
add
cld
outsb
xchg
jp
inc
inc
sub
gs
xor
cs
nop
data16
fcoml
or
outsb
mov
testl
out
fnstsw
int3
sub
daa
pause
int3
loop
add
nop
outsb
pop
pop
iret
pushf
aam
cs
pushf
lock
cltd
jae
dec
pop
dec
jns
sub
sub
xor
add
insb
adc
sahf
jp
push
sbb
mov
lcall
or
mov
bound
testb
daa
mov
pop
subb
and
jne
fwait
cmp
pop
js
add
dec
cmpsl
mov
cmpsl
xor
loope
out
in
xor
or
add
xchg
push
inc
inc
shl
and
fistpll
xchg
ja
lods
pusha
aam
mov
insl
xlat
pusha
iret
or
xchg
or
test
mov
sbb
fisubrs
mov
xchg
mov
mov
xchg
stos
xor
call
movsb
dec
shl
pop
mov
pop
push
daa
out
add
add
or
stos
sub
lret
mov
pop
pop
push
pop
jmp
sub
mov
cmp
push
xchg
sbb
pusha
imul
push
fldenv
jp
fwait
pop
dec
xchg
cltd
adc
dec
movsb
sbb
gs
std
mov
rcrl
fcmovu
mov
add
or
lods
loopne
xor
negl
cmpsb
push
int3
popa
nop
inc
cmc
pop
jle
adc
cltd
leave
push
mov
jbe
inc
out
clc
xor
dec
cmp
push
add
out
mov
xchg
dec
test
mul
sti
mov
stc
push
mov
push
mov
cli
push
fistpl
xchg
shr
inc
lret
jb
mov
das
stos
inc
dec
sub
sub
enter
nop
jg
ret
inc
mov
test
cli
cmp
das
cmpsb
sub
cli
test
sbb
in
std
test
ficoms
mov
sti
mov
int
inc
adc
xor
xchg
pop
cmp
popf
call
jl
in
stos
adc
adcl
lahf
pop
imul
mov
scas
in
lds
shr
xor
iret
xchg
pop
xchg
mov
adcl
repz
and
lahf
pop
jne
add
scas
aad
das
leave
fadd
clc
inc
cmpsb
pop
sti
mov
lock
std
jb
movl
add
enter
and
push
pop
cmp
and
repz
inc
and
repz
inc
insb
lock
and
jl
xchg
lcall
addb
std
test
mov
call
loopne
xor
and
test
mov
ss
sub
std
lock
dec
std
mov
push
scas
jp
xor
cmc
jge
push
mov
stos
mov
sub
aad
jnp
and
shll
pop
xorb
nop
jo
and
push
sahf
mov
add
shl
mov
jne
cli
stc
mov
shrb
pop
inc
mov
ljmp
add
lods
mov
pop
imul
xor
sub
data16
cmp
repnz
or
faddl
jg
or
mov
mov
cmc
jns
jae
xlat
movsl
cmpb
mov
pop
fistpl
or
movsb
cmp
outsl
or
and
sbb
lcall
sbb
xor
add
imul
sbb
into
cmp
pop
xor
add
lea
adc
jmp
add
push
aas
scas
rcr
test
nop
jecxz
pop
dec
sbb
jecxz
jl
jl
loope
xchg
xor
add
xchg
xor
cwtl
pop
imul
pop
stos
lods
lods
push
push
jns
push
mov
std
adc
mov
mov
std
aas
mov
push
scas
add
std
shlb
cmp
stc
mov
jne
add
out
push
inc
loope
push
sbb
mov
mov
inc
pushf
jge
mov
dec
daa
inc
lea
loope
mov
xor
push
cmp
je
movsb
in
xor
jp
xchg
scas
repz
cld
push
push
adc
pop
sarl
adc
nop
jae
mov
rcll
jmp
jg
mov
lds
pop
fbld
push
arpl
cmp
lods
into
stos
mov
dec
mov
dec
rcr
or
out
sbb
bound
xchg
xchg
loop
pop
cld
xor
cs
add
adc
rcl
int
xchg
jb
arpl
sub
scas
inc
jg
ret
addr16
or
mov
test
daa
je
popf
test
in
movsb
jmp
cmpb
das
jne
mov
int
idivl
xor
jae
dec
in
sub
mov
pop
int
xchg
test
cmp
lock
dec
lock
cmp
lret
icebp
lahf
outsb
cmpsl
sbb
mov
lret
fcomps
pop
rorb
sub
dec
shlb
fwait
pop
sbb
dec
dec
mov
outsb
std
das
aaa
loopne
rcrb
sub
cltd
push
adc
outsb
pop
or
je
lds
notl
aas
daa
sbb
pop
sbb
xor
pop
xor
jl
xor
in
ja
call
and
dec
call
or
hlt
cltd
mov
push
js
dec
push
jmp
push
inc
lret
popa
sbb
xchg
push
ljmp
stc
pop
xchg
inc
iret
mov
add
pushf
sbbl
xchg
movsb
mov
mov
and
out
rcl
xor
sbb
dec
cmp
es
cmp
test
sbb
pop
movsb
and
add
xchg
faddl
mov
ror
stos
psubb
add
cmp
lahf
pop
inc
nop
xor
test
or
lahf
and
jo
ja
cli
jo
pusha
insb
cmc
add
mov
ret
ljmp
jle
add
cmp
aad
rclb
mov
into
sahf
mov
scas
xchg
lret
cli
shrl
test
cmp
loope
into
andl
jg
push
repnz
in
cmpsb
inc
in
ja
in
orb
cmp
repnz
lods
fs
pop
jle
jmp
mov
leave
and
clc
jne
push
jne
stos
jbe
xchg
pop
and
add
xchg
dec
pop
push
or
sub
mov
mov
jecxz
add
popa
xor
mov
jcxz
clc
mov
call
data16
sbb
mov
dec
ret
leave
cmp
jo
test
inc
cmp
push
cltd
push
loopne
adc
inc
lock
cmp
fdivr
imul
cmp
pop
ret
into
outsl
ds
out
test
sbb
fcom
inc
roll
or
push
mov
mov
pop
movsl
pop
dec
mov
jge
cmp
adc
movsb
mov
fmull
sahf
sbb
push
fbstp
imul
cmp
push
jne
pop
sbb
dec
stos
dec
mov
or
or
addr16
lret
jno
cli
ret
addr16
xor
nop
mov
jnp
movsb
sbb
adc
ret
xor
xor
cmp
scas
pop
cmp
lods
add
mov
push
dec
mov
les
cmp
xchg
inc
or
xchg
out
pushf
mov
shlb
call
push
clc
xchg
in
pusha
je
dec
cltd
aaa
enter
xor
fwait
mov
add
fs
stos
xchg
cmp
cmp
jecxz
cmp
jle
in
je
jb
cmpsl
fchs
adc
fsave
fucomip
xor
aam
dec
lods
jns
push
inc
test
pop
stos
push
call
pusha
test
fdivs
pop
ja,pn
jecxz
sbb
lret
adc
insl
sar
hlt
mov
inc
call
out
jecxz
stos
and
and
pop
pop
jl
int3
imul
jno
fdivl
into
push
pop
pop
pop
mov
call
int3
jmp
idiv
push
lahf
adc
push
or
cmp
je
pop
mov
imul
mov
inc
lods
add
push
scas
in
shll
stc
xchg
lcall
sub
dec
addr16
or
fldt
mov
sub
fdivl
imul
nop
pop
je
jbe
cmc
lods
push
xlat
stc
push
jb
fbstp
adcl
jge
and
test
scas
xor
mov
ret
into
jb
cmp
cmp
sbb
dec
fs
jns
hlt
icebp
jmp
sarl
cs
jb
xchg
lret
loopne
shrb
js
mov
cmp
call
fadds
cwtl
test
sbb
icebp
push
das
icebp
pop
push
ds
xor
stc
mov
pop
test
mov
mov
fadd
in
int
inc
and
hlt
jle
pop
mov
cmp
jp
out
inc
mov
lret
mov
dec
clc
push
movsb
testb
mov
and
xor
movsb
mov
or
mov
insb
div
sbbl
daa
and
dec
call
mov
aam
sarb
js
int
inc
dec
iret
xchg
je
aam
dec
xchg
cmp
xor
fcmovnbe
lret
sbbl
ret
popa
jg
sub
cmp
dec
mov
mov
sahf
jl
ds
xchg
dec
xor
xor
jmp
pop
add
shll
adc
and
sub
rcrb
into
stos
inc
pop
adc
imul
pop
ds
pop
repnz
loop
mov
push
or
clc
adc
data16
aaa
xchg
lds
shlb
xchg
loopne
out
fdivl
aam
repz
mov
mov
xchg
push
add
jbe
cmpsb
insl
jb
pop
jle
adcl
pushf
mov
rclb
imul
xor
xor
ret
inc
push
jle
pop
push
mov
mov
insb
hlt
ds
call
pop
ficomps
xchg
cltd
test
inc
nop
lock
mov
add
pop
in
lahf
in
jo
inc
dec
jecxz
cmp
mov
sbb
mov
cmpsl
push
stos
dec
ja
inc
ror
movsl
jbe
jl
push
or
ljmp
rolb
outsb
sub
push
es
inc
and
push
je
loop
fidivl
insb
adc
shr
push
jl
push
stos
jl
mov
in
add
das
adc
aas
add
ficompl
je
jae
rclb
jmp
sbb
popa
add
ss
jecxz
mov
pop
inc
xchg
ficoms
insb
sbb
dec
out
nop
jnp
mov
out
lea
mov
add
call
jge
push
scas
mov
outsl
pop
push
cld
dec
rorb
xor
sbb
ror
push
adc
out
ret
les
push
call
std
shl
inc
scas
in
sbb
xor
adc
loopne
pop
cmp
jl
fucomip
xor
sub
xor
xchg
ds
fs
dec
mov
inc
cmc
sbb
lock
sub
dec
sarb
xchg
insb
inc
fwait
out
fucompp
hlt
out
mov
sub
jmp
add
out
jge
and
hlt
icebp
jl
sub
ljmp
stos
loop
in
xor
aaa
lahf
cld
movsl
jl
fmulp
mov
fbld
xchg
movsb
decb
inc
test
out
mov
popf
addb
in
lods
dec
push
xchg
xor
inc
mov
jae
iret
inc
in
aaa
clc
idivb
inc
inc
aam
out
mov
test
out
sub
loop
rcrb
mov
icebp
subb
in
clc
push
pop
xchg
inc
imul
pop
icebp
mov
adc
cmpsb
pushf
pop
or
lret
mov
add
push
test
xor
dec
xchg
or
fcmovu
adc
inc
mov
dec
cmp
nop
jecxz
inc
mov
movsb
sti
and
push
loopne
mov
mov
push
movsb
xchg
ja
mov
hlt
fisttpll
enter
and
pusha
adc
jmp
mov
pop
jb
iret
cmpb
adc
push
popa
pushf
xchg
cmp
xchg
xchg
popf
pushf
cs
cmc
lahf
mov
add
mov
mov
inc
mov
push
cmc
jg
cwtl
into
mov
orb
in
pop
test
dec
mov
imul
out
out
fsubs
jbe
push
inc
call
imul
mov
lahf
imul
add
pop
call
xor
dec
outsl
inc
addb
cmp
push
jns
mov
sbb
mov
js
in
loope
outsl
cmp
adc
mov
aam
push
lret
xchg
push
mov
xor
mov
notl
adc
lret
in
and
mov
out
subb
lods
subb
jl
push
dec
fistps
and
mov
inc
icebp
in
cmpsb
pop
loope
cltd
adc
cmc
imul
and
inc
mov
cs
mov
inc
or
fdivrl
clc
jo
dec
push
scas
scas
jmp
inc
adc
or
xchg
sub
push
out
or
inc
and
xchg
push
mulb
fdivp
mov
adc
inc
cmc
test
repz
xlat
mov
push
inc
enter
sbb
mov
test
jne
testb
mov
sahf
ja
popf
adcb
jecxz
dec
repz
sub
pop
and
jno
mov
pop
movsb
push
les
cmpsl
data16
push
sarl
test
pop
adc
cmc
adc
or
pushf
sub
pop
psadbw
inc
push
popa
mov
mov
jecxz
ja
cmovg
jg
loop
cmpsl
jbe
mov
ds
sahf
in
mov
adc
call
call
cmp
pop
or
shl
movsb
push
rorl
pop
int
and
je
or
stc
add
cwtl
jle
mov
and
popa
je
push
insb
loop
fldenv
shrb
jecxz
cmc
outsb
pop
jge
push
sbbl
std
insb
pop
sti
leave
notl
cmp
stos
bound
push
test
jp
jnp
push
cld
inc
mov
cltd
sub
jne
ficomps
inc
sti
scas
hlt
les
cmp
test
dec
mov
xor
lods
jnp
sub
mov
das
lods
dec
mov
mov
pop
in
out
int
sbb
cmc
lock
outsb
mov
dec
out
and
pop
fwait
push
sub
mov
mov
in
std
fdivrp
jg
loop
sub
jge
dec
dec
or
scas
mov
or
sbb
jge
out
xchg
pop
rolb
sub
mov
push
ret
inc
sar
daa
or
mov
and
jb
mov
cmp
mov
mov
pushf
lods
mov
pop
add
mov
push
pop
rcl
push
mov
pop
lea
mov
jo
or
js
movsl
dec
dec
dec
jecxz
and
fcomip
fmul
sbb
out
lods
sub
dec
jmp
xlat
arpl
jmp
dec
push
mov
aaa
or
pop
dec
pop
jle
push
pop
xchg
sbb
test
push
xchg
icebp
ja
and
inc
cmp
adc
xlat
push
sub
sbb
cmpsb
rorl
adc
loop
xorl
mov
xchg
inc
pop
call
in
leave
mov
ljmp
xchg
rorb
fcoms
in
lahf
test
xor
das
jecxz
add
inc
cwtl
sbb
adc
stos
hlt
daa
pop
sbb
enter
sbb
cmp
jno
lea
sub
jns
mov
cmp
pusha
mov
lods
or
add
out
inc
push
loope
inc
lds
cmp
mov
xor
xchg
seto
fdiv
scas
loope
lods
jmp
arpl
imul
cltd
movsb
repnz
rclb
sbb
bound
mov
stos
fs
loop
subl
test
push
pusha
popa
repz
mov
loopne
sbb
push
xor
xchg
jo
dec
ficoms
cmp
xchg
daa
xchg
cmp
pop
ds
cmp
cld
xchg
add
lds
push
jb
add
sbb
adc
dec
movsl
adc
push
xor
xchg
lahf
dec
pop
popf
adc
mov
cmpsb
pop
arpl
and
fimull
test
loope
cwtl
xchg
jns
inc
in
movaps
cmp
shr
push
inc
and
pop
mov
add
fs
xor
mov
xor
xorb
lret
bound
jge
adc
add
dec
daa
jge
add
adc
inc
and
push
add
sub
insb
jg
int3
jno
in
cwtl
push
jl
hlt
in
xor
lret
pop
dec
sbb
bound
mov
pop
scas
add
stos
mov
jge
mov
pop
mov
aas
cmpsb
pop
movsl
mov
and
hlt
int
test
roll
xchg
mov
xchg
ljmp
leave
mov
pop
dec
repnz
push
xlat
pop
xor
mov
push
cltd
out
es
adc
test
fwait
les
dec
mov
cmp
test
testb
imul
cld
inc
js
and
shll
dec
inc
adc
xchg
or
push
std
jmp
adc
mov
mov
insl
imul
push
out
inc
or
lods
jmp
xchg
sub
in
mov
jo
or
in
mov
lods
add
rcrl
mov
les
ret
movsl
enter
lret
insl
cld
je
pushf
icebp
jmp
mov
fcompl
rolb
cwtl
pop
iret
cmp
push
dec
jno
add
sub
add
lea
xor
and
stos
sysenter
push
dec
lds
xchg
mov
enter
and
insb
sub
pop
add
loopne
in
sub
pushf
data16
nop
mov
arpl
inc
adc
stos
adcl
fidivl
dec
fadd
inc
data16
stc
mov
mov
push
push
andl
xchg
jno
lea
cli
xchg
movsl
rorl
mov
rclb
sub
fistpl
in
sti
push
sub
mov
add
jg
add
test
repnz
test
lahf
popf
cltd
insl
jge
jo
cwtl
lret
mov
sub
mov
push
xchg
nop
pop
mov
insb
mov
bound
ret
inc
cmpl
test
push
fisttps
ficompl
inc
incl
repz
test
aam
adc
lret
cmp
shll
out
mov
pop
insl
ret
daa
inc
dec
push
imul
lret
mov
and
hlt
and
fdivs
jb
bound
pusha
addr16
jmp
pop
mov
mov
idivl
xor
je
shlb
dec
cld
data16
push
test
cwtl
int3
and
les
cmpsb
test
jne
dec
ljmp
pop
aas
adcb
insb
sbb
xor
arpl
sbb
pop
sar
cwtl
inc
sbb
test
mov
data16
adc
je
xchg
inc
or
cmp
cmpsl
int
cmp
pop
ss
aaa
xchg
jmp
mov
dec
mov
lahf
cmp
imul
xor
cmp
inc
cmp
push
mov
lcall
jb
popa
pop
lods
push
lock
cmp
mov
sbb
inc
mov
addr16
popl
arpl
sbb
inc
movsb
xchg
lcall
push
mov
add
mov
xchg
sub
pop
mov
fadds
into
ret
cmp
lock
mov
movsl
mov
dec
pop
or
ds
push
push
out
sbb
jnp
pop
out
lahf
nop
adcb
js
and
insl
cld
repnz
js
adc
jle
and
push
mov
aaa
aam
xor
scas
sarb
fwait
daa
mov
jbe
xchg
or
mov
adc
aam
js
lock
xor
cmp
push
rcrb
pop
adc
mov
pop
pop
lods
mov
pushw
push
dec
into
test
jl
sarl
xchg
jbe
lahf
push
sbb
bound
cld
push
push
int
add
add
push
jmp
inc
sub
cmp
das
lock
scas
dec
mov
call
cltd
popf
or
or
ja
pop
lock
cld
sub
rcrl
add
lds
push
cmp
cmp
pop
in
lret
mov
xchg
jge
pop
scas
inc
mov
sub
jg
sbb
cmp
pop
imul
lock
jl
enter
sarl
or
data16
lds
dec
popf
cmpsl
jge
test
fwait
mov
popf
rclb
idivb
push
sbb
dec
sub
sub
cmpsl
test
xchg
and
leave
mov
addr16
sti
mov
loope
fiaddl
mov
fdivrl
int
mov
scas
fwait
arpl
jecxz
out
mov
inc
xor
call
gs
mov
cmp
pusha
adc
aam
dec
add
sub
xchg
jp
jne
xlat
int3
or
cmp
cli
cltd
stos
cmc
mov
inc
inc
xchg
jb
pop
pop
nop
cmp
popf
popa
arpl
cld
ret
lods
cmp
sahf
test
dec
xor
pop
cmp
outsb
lock
inc
hlt
cmp
std
bound
push
push
sub
jne
jp
jg
shll
add
outsb
jb
sbb
into
adc
push
outsb
add
mov
mov
xchg
ss
xchg
mov
data16
adcl
lods
inc
pop
xlat
out
xchg
sbb
repz
mov
and
stos
cmpsb
lahf
fcoms
jmp
mov
les
out
in
in
cwtl
jbe
mov
push
lock
std
sub
fdivrs
idiv
out
int3
xor
dec
jmp
ret
xor
or
mov
mov
pop
in
sub
fdivr
sub
xor
sub
rolb
pop
and
stos
xchg
ds
pop
dec
or
inc
cmpsl
inc
xor
xchg
xor
aas
shr
sbb
inc
jne
adc
xor
cmp
push
lods
fwait
mov
aam
mov
pop
testl
adc
mov
or
push
bound
lcall
push
out
xchg
js
push
enter
jl
js
mov
popf
add
cmpsb
and
fincstp
mov
mov
enter
sub
jmp
xor
arpl
in
sbbb
add
cwtl
add
adc
pop
inc
test
jecxz
mov
rorl
xlat
jne
mov
out
lcall
int3
jbe
xchg
testb
push
dec
orl
add
sbb
das
jmp
mov
out
sub
mov
cltd
inc
cli
push
push
insl
sbb
repnz
imul
movsb
movsb
pop
cwtl
cmp
fnstsw
ja
es
mov
xchg
insl
or
adc
jne
lods
and
in
dec
or
mov
or
int3
mov
or
enter
mov
xchg
cmp
dec
and
jno
pop
adc
scas
sbb
adc
xor
test
sbb
sahf
lahf
push
movsb
xchg
cmpsb
xchg
lods
sbb
xchg
sbb
jae
int
outsb
nop
cld
fadds
insl
inc
mov
ljmp
mov
mov
sbb
xor
iret
rolb
loope
lret
xchg
xchg
lret
loope
lcall
and
fsubrs
and
inc
ret
inc
outsb
bound
mov
les
push
or
and
sub
dec
shlb
lcall
shlb
sub
cltd
in
fs
jmp
push
in
cmpb
jne
clc
mov
dec
jnp
sbb
jge
fsubrl
dec
mov
mov
add
addr16
testb
adc
imul
and
sarl
mov
das
ret
popa
aaa
outsl
outsb
andb
jnp
pop
jp
push
push
movsb
daa
daa
dec
xchg
inc
jo
fsub
and
cmpsw
pop
add
and
sub
pop
lcall
xchg
rolb
popa
ret
jbe
cmp
enter
xlat
sbb
ret
push
fsubrp
mov
xor
add
jb
mov
lds
pop
int
mov
lods
pop
lods
pmuludq
xchg
sub
jb
inc
cmc
jno
aam
sbb
mov
ret
push
aas
cvtdq2ps
imul
push
fstps
dec
push
mov
inc
int
adc
scas
pop
inc
add
jo
adc
insl
pop
add
add
jp
ret
or
mov
sbbl
aaa
push
push
mov
push
bound
cmpb
xchg
ljmp
scas
push
ret
mov
cmc
push
jge
cli
xchg
mov
movsl
and
sbb
pop
bound
or
stos
lret
mov
mov
or
jne
cmp
cmp
outsl
outsl
sub
dec
gs
push
and
setne
sub
mov
or
clc
cs
jns
mov
or
pop
shrb
jbe
sub
xchg
pmullw
mov
scas
jmp
xchg
dec
jmp
scas
cld
jp
add
xchg
inc
stc
aam
in
hlt
ficoms
sub
out
pop
lock
sbb
pop
dec
icebp
xor
and
push
sub
sub
mov
mov
or
adc
out
add
dec
sbb
cs
inc
negl
lods
add
adc
xor
pop
or
loop
xor
push
lret
mov
cmp
movsb
inc
sub
idivl
xchg
stos
in
sbb
jmp
xlat
push
mov
sbb
mov
in
cmp
and
fstpt
subl
test
push
loope
call
mov
lods
mov
add
outsl
cmp
jp
test
push
pop
mov
sbb
mov
fisttpl
sbbl
int
ret
imul
cmp
adc
xor
js
outsb
in
sbbl
fptan
add
jns
mov
aas
rorl
mov
fsubrl
xchg
dec
mov
repz
inc
cs
push
adc
insl
dec
sub
gs
push
mov
cmp
mov
cvttps2pi
adc
test
adc
popa
xlat
roll
or
sub
cli
lret
mov
pop
mov
mov
xchg
lret
add
mov
pop
cld
pusha
jns
pop
aaa
cltd
adc
clc
repz
enter
jbe
push
mov
push
icebp
mov
fs
in
xor
shll
and
push
loopne
stc
orb
push
xor
xlat
and
mov
or
cwtl
mov
mov
mov
mov
je
subb
inc
rcl
jmp
je
outsl
repz
dec
jmp
jno
add
mov
adc
push
lods
loope
scas
cltd
fldl
mov
add
repz
push
cwtl
outsb
mov
daa
mov
cmp
add
adc
xor
test
mov
imul
cmp
xchg
push
lods
mov
lods
outsb
cld
data16
out
adc
int3
aas
lret
insb
das
push
es
outsb
psubw
lret
ror
negl
lock
xor
les
or
xlat
and
fstpl
xchg
cltd
adc
je
fisttpl
jecxz
xchg
popa
bound
push
jle
aaa
mov
mov
mov
inc
pop
pushf
loope
push
push
test
shlb
mov
and
fstpl
push
imul
jb
pop
mov
int3
cmp
mov
mov
cmpb
sbb
pop
repnz
push
stc
push
pop
daa
pop
les
imul
jo
das
and
cltd
arpl
add
or
sub
lock
adc
int3
xchg
insl
imul
mov
popa
andb
insl
adc
sete
pop
faddl
cmpsb
xchg
in
sbb
aam
fidivs
lock
loopne
dec
sub
pop
mov
mov
sub
xor
repz
fmul
setnp
sbb
and
xorl
adc
les
pop
push
and
ljmp
mov
lret
cmp
rcll
dec
mov
jecxz
imul
adc
mov
scas
mov
into
movsb
fwait
je
popa
hlt
int3
mov
add
mov
or
gs
push
pusha
xor
push
jl
xor
push
xchg
sahf
inc
popa
in
mov
dec
mov
cld
pop
or
clc
outsb
jp
pop
inc
cltd
or
lret
mov
aaa
push
push
popa
xor
mov
cmp
and
mov
out
inc
mov
push
add
add
jo
imul
jge
repz
xchg
outsb
cltd
push
std
push
xor
add
push
int3
push
lea
pop
adc
dec
clc
adc
imulb
pusha
mov
clc
bound
sub
test
or
xor
lret
jg
xchg
jecxz
add
mov
sub
xchg
inc
std
cmp
lahf
sbb
lea
dec
in
ljmp
arpl
in
mov
jl
cmpsl
push
jno
or
cli
out
add
xor
ljmp
call
aas
xor
xchg
cmp
stc
insb
aad
jns
dec
cmpsl
mov
pop
test
pop
add
adc
leave
dec
jnp
lds
jge
sarl
in
cmp
lahf
jmp
add
icebp
cli
in
and
pop
jecxz
xchg
insl
pusha
push
subl
bound
pop
xor
les
stos
add
pop
pop
xchg
call
nop
push
ja
xor
in
xor
inc
scas
sbb
xor
mov
mov
jo
popa
adc
je
cmp
cmc
add
scas
in
out
mov
stos
movsl
jg
lea
call
nop
fcoms
xchg
jbe
shll
test
shrb
cmp
adc
insb
int
ret
shl
aad
or
scas
xchg
sbb
and
sub
mov
jno
scas
sub
dec
jmp
sub
and
outsl
sbb
sub
fildl
stos
add
xor
das
aad
xor
ja
imul
adc
loopne
pop
dec
dec
add
scas
out
cmp
fistps
or
out
push
jg
sarl
into
mov
call
and
mov
outsl
nop
test
sbb
xchg
stos
aad
pop
rorb
pop
mov
push
xchg
mov
add
nop
daa
imul
test
jnp
pop
data16
sahf
repz
sub
pop
jp
xchg
add
sbb
add
or
pusha
xchg
fsubrl
lea
roll
add
mov
add
int
adc
jns
sub
scas
int
push
fwait
inc
lods
mov
push
loop
enterw
sub
jbe
flds
mov
jl
mov
cmp
add
xchg
nop
or
cmp
adcb
push
mov
xchg
pushf
leave
mov
mov
mov
out
cmp
mov
lahf
cld
and
shll
iret
into
or
popf
aad
jne
rcr
push
cwtl
aad
std
arpl
popf
idiv
shlb
iret
in
push
mov
jns
lret
pop
mov
pushf
addr16
adcb
mov
push
je
pop
in
mov
pusha
mov
pop
cmpsl
test
xchg
mov
iret
cwtl
jge
mov
notb
lahf
push
test
popa
or
adc
ljmp
ss
push
jge
dec
xor
xchg
cmp
sbb
push
cmp
adc
insb
cli
jmp
or
inc
rcr
leave
pop
mov
jmp
pop
push
je
adc
sub
negl
lret
sub
addr16
lcall
movsb
adc
add
ret
imul
cwtl
movb
adc
and
pop
test
imul
hlt
cli
je
outsb
imul
rcll
mov
lahf
aam
jmp
push
dec
in
pop
xchg
mulb
iret
inc
inc
aam
sbb
xchg
enter
mov
decl
mov
adc
add
xchg
inc
pushf
les
jo
pop
mov
hlt
std
xor
test
sub
and
sbb
pop
loopne
add
es
mov
jbe
sbb
or
data16
push
jae
xchg
push
push
icebp
mov
test
les
or
push
xor
lret
out
jbe
aad
in
xor
add
and
mov
cwtl
es
shrl
push
push
xor
push
cli
sbb
dec
adc
mov
inc
cld
inc
int
daa
pop
add
cltd
clc
push
fisttpll
out
mov
aas
sbb
test
lret
sti
out
pop
xchg
pop
sbb
std
popa
cs
cmp
dec
stos
int
mov
movsl
mov
ficoms
pop
xchg
and
clc
fwait
bound
sti
ror
inc
rclb
cmp
adc
outsl
loop
fcoms
inc
ficompl
or
xor
mov
inc
inc
test
xor
jecxz
push
sbb
dec
lods
jecxz
inc
sub
sub
out
pushf
scas
sub
aam
adc
cmp
inc
insl
jmp
inc
std
jle
cld
outsl
out
stos
xchg
fnstcw
popf
mov
inc
pop
adc
xchg
in
adc
into
mov
mul
push
inc
sbb
and
sub
hlt
or
ret
jno
add
movsb
shrl
int
sub
and
cwtl
jl
out
xor
icebp
imul
les
inc
xor
sub
ljmp
sbb
arpl
ret
addr16
cld
imul
rclb
mov
shl
rol
ljmp
scas
mov
ja
add
push
xor
loopne
jge
in
nop
add
bound
out
out
das
pop
or
in
mov
enter
cmpsb
cmpsb
loop
fdivrl
sub
arpl
aas
lahf
leave
cld
and
inc
ja
pushf
lock
cld
and
sbb
jne
mov
in
mov
xlat
mov
cld
mov
xchg
dec
dec
pop
daa
out
sarl
insl
dec
lret
sub
sub
cwtl
cmp
les
xor
pop
into
mov
inc
test
mov
mov
inc
push
fstpl
add
scas
out
fnsave
xchg
scas
ds
cli
mov
icebp
outsl
inc
lea
ret
adcb
imul
loop
xchg
rorl
mov
rorb
ja
pop
dec
xor
lret
cmp
test
jbe
sbb
jae
jg
popf
scas
lods
dec
imul
movl
shr
sarl
mov
hlt
es
orb
mov
cli
shrl
test
mov
fsubl
xchg
aaa
xchg
xchg
out
sbb
pop
mov
ret
xor
lcall
insb
shrl
inc
or
imul
dec
sbb
jge
pop
mov
xlat
add
hlt
pop
repz
out
mov
push
push
arpl
aam
mov
mov
inc
or
dec
push
loop
mov
or
push
jnp
jle
or
mov
inc
xor
es
cmpsl
les
inc
sub
outsb
cmpsb
imul
and
sbb
mov
imul
jp
inc
pushf
movsb
in
data16
or
stc
adc
or
adc
and
and
negb
and
jns
jnp
out
gs
mov
insb
stos
dec
cmp
or
pushf
stos
xor
dec
and
xor
shlb
icebp
cs
dec
xchg
jmp
jae
mov
insb
sub
push
dec
ja
int3
cmp
jecxz
cmpsb
jge,pt
clc
mov
and
rcr
loopne
idivl
sbbl
mov
jg
push
out
pop
push
jle
mov
and
enter
leave
stos
jg
mov
inc
pop
sub
pop
and
push
jo
mov
sub
lahf
dec
and
pop
sub
xchg
xor
into
sbb
loop
test
dec
test
repz
push
jb
fcoml
pop
sub
sbb
ret
xor
jbe
rcl
ljmp
movsl
pusha
je
dec
xchg
inc
mov
pushf
andb
not
out
sbb
in
cli
fs
popf
jbe
fstp
movsl
imul
mov
aam
inc
push
adc
lret
lret
cmp
or
xlat
pop
mov
xchg
cwtl
inc
mov
add
aam
push
int
sbb
test
xchg
mov
in
cs
mov
and
xor
dec
call
inc
pop
ret
addl
ja
mov
sub
cmpb
jecxz
push
push
clc
cmp
aaa
xchg
push
in
push
xchg
push
mov
inc
mov
lret
fxch
testl
lea
out
cltd
inc
into
push
sbb
sbb
aam
add
rolb
inc
or
insl
sti
mov
ret
mov
adc
cmp
rorb
in
mov
xchg
sub
mov
mov
lahf
fsub
mov
repz
cmc
push
fmul
sub
mov
jecxz
push
je
arpl
adcl
lods
mov
cmp
popf
pop
sbb
cli
gs
std
pusha
mov
jmp
mov
dec
cmp
sbb
sbb
movsl
mov
and
jg
jo
shl
cs
xor
jp
outsb
roll
movsb
jns
mov
dec
pushf
lret
or
icebp
push
and
stos
ja
push
pop
or
fwait
lcall
xchg
dec
sub
add
movl
mov
ret
inc
cmp
cmp
pop
or
stos
or
xchg
and
bound
ror
in
int3
push
popf
leave
bound
cmpsl
bound
push
sbb
mov
mov
enter
add
mov
mov
add
daa
dec
out
js
aaa
xor
sub
push
adc
push
dec
stos
fwait
test
ss
ss
out
mov
pushf
mov
cmp
pusha
pop
push
pop
xor
bound
cwtl
pop
xchg
jo
jecxz
adc
les
lds
sbb
mov
and
mov
mov
pop
cmp
sti
dec
orl
insl
fwait
pushf
scas
and
lret
jp
cmpsl
cmp
jecxz
clc
mov
pop
icebp
inc
loop
out
rolb
push
jo
add
ret
jo
mov
pop
fldz
pop
out
inc
sbb
ds
mov
in
movsb
cld
pop
cmpsb
push
iret
sbb
pop
or
xor
loopne
cli
mov
shll
pop
jge
xchg
mov
or
ds
imul
repz
js
in
jmp
aas
inc
fistps
mov
jmp
pop
stos
es
imul
lds
dec
add
and
call
gs
pop
inc
sub
dec
lret
jp
or
adc
outsb
dec
testb
dec
inc
js
mov
inc
pop
js
js
inc
out
stos
fildll
clc
cmpsb
ja
jb
es
or
jno
ret
inc
mov
push
gs
cmp
push
and
xchg
es
into
push
fldcw
add
jle
inc
dec
dec
xor
add
cmp
jns
mov
mov
sbb
dec
pop
inc
andl
jne
incb
jno
jbe
loop
cmp
and
xlat
shr
adcb
xlat
lock
jns
in
add
cld
jg
add
mov
adc
jp
sbb
fcomps
inc
or
push
mov
mov
and
hlt
leave
pop
lret
adc
pop
cmc
jmp
xchg
pop
clc
lcall
mov
movsb
jg
mov
std
fbstp
arpl
mov
adc
jno
pop
sub
enter
mov
sub
xor
ds
jmp
and
sub
add
cltd
mov
jl
pop
jecxz
ja
dec
mov
fucomip
sbb
in
stc
mov
mov
dec
orb
aam
mov
dec
push
test
push
ljmp
push
test
dec
adc
fldcw
movsb
xchg
stos
jo
fiaddl
cmp
pop
fistpl
pop
inc
into
call
in
mov
and
cltd
loop
mov
jge
push
mov
sti
outsb
mov
mov
inc
cmpl
fbstp
outsl
into
push
jno
ret
es
sar
jnp
or
popf
pmaxub
sub
jmp
fnstenv
je
mov
aas
cli
int
pop
ja
mov
flds
ja
pop
das
push
dec
adc
mov
add
or
add
dec
xlat
pop
dec
lcall
sbb
add
fiaddl
cmp
arpl
enter
mov
std
xlat
push
push
cmp
jns
ficoms
les
lods
out
add
pop
cmp
imul
adc
jno
xchg
xor
xchg
pop
mov
push
mov
or
adc
pop
push
rcl
push
cld
cmp
ret
jp
lods
xor
sti
inc
xor
stos
addb
lcall
leave
ds
movsl
and
pushf
sub
out
cmp
and
dec
mov
push
cld
jne
push
dec
and
adc
jp
repz
das
test
shll
mov
mov
dec
sub
test
ret
push
ss
lcall
inc
cmc
push
into
inc
cmpsl
out
je
or
lcall
divb
sub
outsb
std
inc
loopne
loope
fs
sub
fisttpl
mov
mov
insb
inc
hlt
test
pop
jl
nop
dec
jl
sbb
push
lahf
mov
xrelease
pop
jo
cltd
or
jmp
cmc
adc
in
pop
push
mov
in
fistps
lds
xlat
xor
scas
lea
jno
mov
xchg
ja
movsl
jae
push
and
cmp
scas
iret
cmp
fs
mov
aam
inc
jecxz
in
mov
mov
aaa
insl
xor
mov
and
loop
ficoml
adc
stos
pop
fstpt
nop
outsb
xchg
mov
sti
lods
mov
inc
mov
push
push
pop
jne
mov
pop
shll
and
push
cli
pop
pop
lock
sub
fsub
rclb
daa
mov
fnsave
or
inc
dec
in
inc
sbb
pop
mov
notb
sarb
ds
ret
sbb
jae
mov
fdivrl
cli
mov
addr16
clc
pop
iret
jg
cmpxchg
mov
in
ljmp
sarb
aad
xchg
jg
shll
addb
mov
fiadds
negb
mov
cmpsl
out
xor
lods
shll
sti
sub
fildl
push
pop
jmp
pusha
in
jp
or
or
out
mov
sbb
pop
lea
lret
icebp
scas
jns
fwait
xor
aas
cmp
or
pop
popf
ljmp
movsb
lret
cmpsb
mov
cmp
dec
mov
sub
es
mov
outsb
outsb
cld
lret
and
add
test
or
lret
jne
xchg
push
xchg
in
add
dec
and
shlb
dec
stos
leave
daa
out
aam
or
jecxz
cmp
in
lret
mov
imul
sub
fdivr
or
dec
jmp
dec
mov
fstpt
xor
inc
cmp
lods
dec
fstl
or
popa
push
sub
dec
and
stos
sbbl
jecxz
in
pop
xchg
jl
sti
scas
push
bound
cmc
popa
or
mov
mov
mov
mov
flds
addb
pop
int
dec
jmp
andl
bound
dec
add
nop
xchg
xchg
std
shlb
or
pop
aad
out
stos
and
mov
addb
ljmp
jns
sbb
fimull
jns
mov
mov
iret
and
ret
lcall
je
sbb
jae
cmpsb
repnz
xchg
fistpll
cwtl
mov
mov
jmp
or
pop
push
sbbl
jge
sub
insb
stc
lahf
mov
and
iret
sub
or
lock
cli
fs
lds
inc
xor
rcrl
rcll
adc
adc
lea
lods
xchg
cmp
push
dec
fninit
int3
addr16
pop
push
bound
xchg
mov
in
aam
push
into
sub
out
icebp
sub
dec
mov
scas
cmpsl
sbb
test
mov
mov
adc
or
cld
jle
adc
cmp
dec
shr
fisubl
mov
pushf
adc
scas
inc
dec
xlat
daa
gs
fcmovnb
mov
mov
sbb
lcall
cwtd
inc
cmp
aaa
je
jmp
les
pop
adc
sti
fsubr
add
cld
icebp
jno
add
movsb
mov
in
cmp
pop
jmp
sub
adc
add
mov
cmp
inc
imul
insb
insb
jo
addr16
and
mov
add
or
sbb
mov
fnsave
nop
arpl
cltd
cmp
add
mov
pop
sbbl
aaa
add
out
inc
push
mov
lock
ret
cmc
mov
int
pop
mov
push
adc
cmp
cmp
mov
shl
pop
dec
in
je
daa
stc
testl
jns
sub
dec
xchg
ss
xchg
xor
aaa
loope
fmulp
and
dec
es
movsb
jne
lahf
fs
ja
inc
cltd
inc
inc
ds
push
insb
xor
adc
mov
sbb
test
ret
aaa
or
add
js
and
pop
dec
imul
mov
test
dec
sbb
cmpsl
adc
sti
mov
inc
scas
cltd
pop
iret
out
dec
mov
mov
lret
xor
pop
incb
or
bswap
lock
rorb
gs
dec
and
and
in
sub
inc
cmpsb
sbb
jns
mov
cmp
and
outsl
enter
jp
and
sbb
push
jge
adc
sti
int3
int3
adc
pop
xchg
cltd
add
pop
mov
inc
subl
xorl
jmp
and
push
inc
aas
pop
mov
sbbb
pop
pop
out
jecxz
push
or
cld
jne
scas
mov
xchg
cmp
inc
xchg
idivb
rolb
sbb
cmp
ja
pop
or
xor
enter
or
mov
lock
repnz
xor
ret
js
test
cli
rol
les
lods
clc
push
repz
pop
cwtl
das
hlt
lods
lret
lcall
xchg
add
insl
jns
ret
xchg
test
enter
repz
sbb
aad
or
lahf
fsubrs
clc
out
mov
pusha
xchg
scas
xor
das
mov
bound
sti
mov
hlt
shll
adc
mov
mov
adc
mov
lea
notb
andb
jl
sub
adc
dec
int
mov
insl
pushf
jmp
popa
cmp
sbb
xchg
jo
lcall
test
mov
cmp
gs
jbe
mov
add
arpl
call
imul
out
push
pop
insb
js
pop
cmp
sbb
rcrl
sub
test
ss
pop
addb
daa
sub
cmp
inc
dec
fiaddl
adc
rolb
xchg
add
jno
add
mov
xor
addb
push
jns
mov
das
stos
dec
push
and
out
imul
cmp
es
sar
lea
cli
xor
inc
cwtl
adc
fstl
icebp
movsl
popf
xor
or
jnp
xchg
je
stos
scas
mov
and
mov
or
xor
dec
cmp
outsl
cmp
dec
out
pop
push
je
cmpsb
movsb
cmpsl
test
jl
loopne
dec
aad
data16
cmc
inc
insb
and
aas
ret
jo
inc
jl
fidivs
mov
mov
sbb
jb
jbe
popf
iret
sahf
and
and
push
xlat
out
adc
and
repnz
mov
xchg
pop
test
stc
out
aad
jmp
jo
fidivrs
cmpb
insb
lret
mov
loopne
jo
lock
dec
enter
icebp
mov
out
leave
fildll
adc
push
divps
repz
cmc
jge
imul
cs
lock
mov
xchg
jo
ljmp
mov
dec
cwtl
jbe
xor
cmc
out
rep
sbb
out
aad
sar
push
out
mov
js
outsl
jg
jmp
cld
jnp
dec
mov
sub
cmpsb
sub
push
lret
decl
fmuls
lret
xchg
iret
xchg
cmp
testb
ja
inc
jmp
ds
pop
xor
sbb
jae
data16
in
dec
jmp
pop
rcrb
push
push
stc
adc
in
sbb
das
mov
mov
add
xor
mov
add
test
add
pop
inc
ret
in
pop
shr
mov
mov
cmp
xlat
add
dec
pop
or
test
aad
stos
pop
shlb
loop
mov
and
cmp
in
iret
dec
dec
dec
cmp
mov
ficompl
jge
mov
orb
dec
ret
jg
xor
repz
nop
cmpsb
sub
rcll
insl
cli
cmp
in
rcrb
add
int3
push
shrl
sub
dec
ficoms
jl
cmp
das
addr16
mov
push
xor
cmc
ret
xchg
js
outsb
in
test
pop
pop
fdivrs
add
mov
xor
sub
repz
stc
pop
leave
stos
or
leave
aas
mull
adc
adc
sbb
out
xor
push
jns
inc
cmp
mov
xchg
scas
jl
stos
inc
lcall
cmp
fmulp
lods
mov
jnp
and
mov
mov
test
pop
lret
sub
out
lret
mov
pop
mov
push
mov
xchg
mov
jnp
xchg
push
repz
cli
enter
jl
add
cmp
out
movsl
sbb
xchg
cmc
int3
pop
add
xchg
data16
xchg
lahf
movsb
fsubp
add
jecxz
dec
mov
jl
mov
cli
out
xchg
jmp
fisttpll
or
std
sub
outsl
ljmp
into
mov
pop
jecxz
lods
icebp
sub
arpl
data16
dec
scas
xor
fstpt
jb
and
mov
xor
xchg
cmp
or
xor
sarl
loop
enter
inc
mov
inc
jb
cmp
fdivrs
push
push
cs
mov
cmc
fcmovnbe
sub
mov
adc
lods
cltd
xor
shrb
push
and
push
out
test
fwait
ss
push
pop
sbb
push
xchg
mov
jb
cmp
aaa
pusha
mov
or
std
dec
jge
xorl
imul
out
xchg
jnp
pop
fs
mov
pop
xor
sub
aas
or
cmp
daa
outsb
mov
pushf
jo
xchg
inc
or
or
mulps
push
out
inc
pop
or
data16
les
cld
jmp
xchg
aam
mov
add
sbb
add
fnstenv
lods
lea
jle
jb
xchg
ret
shlb
inc
jle
mov
mov
jecxz
mov
in
pop
out
add
mov
ja
mov
adc
add
xor
push
inc
movl
sub
lock
cmp
loopne
mov
inc
rol
dec
dec
xorb
push
adc
sbb
cmp
and
mov
aad
mov
stc
sbb
out
pop
ds
dec
outsb
mov
push
shlb
lret
push
iret
fcoms
dec
bound
mov
xor
addl
lret
ret
jae
lods
lock
xrelease
adc
cmp
rclb
mov
mov
push
ret
mov
xor
xchg
cmpb
push
cmp
xchg
push
popf
shrl
mov
subl
push
out
outsb
inc
mov
cwtl
sbb
xor
dec
adcb
xor
mov
xchg
mov
inc
adcl
das
mov
cmp
pop
outsb
jmp
stos
movsl
pusha
cli
fiaddl
inc
adc
pop
mov
pop
sbb
jo
aas
into
mov
sahf
cmp
add
lea
and
xor
aas
jbe
mov
test
or
mov
movsb
adc
sbb
mov
js
insb
jbe
sbbl
cmp
movsb
in
mov
or
imul
lret
les
lret
iret
inc
dec
pop
and
loopne
aaa
pop
in
mov
jle
mov
insb
push
mov
add
push
jge
xor
jle
xor
or
fstps
mov
sbb
out
shll
and
addr16
popf
lret
inc
lret
mov
movsb
movsb
mov
ror
ss
cli
mov
mov
cmp
push
je
ret
mov
mov
pusha
push
stos
test
out
push
outsl
aaa
fadds
cmp
pop
push
pop
cmp
dec
test
jge
insb
adc
arpl
sbb
cli
daa
addr16
movsb
inc
out
ds
sub
mov
nop
pop
enter
push
loop
xchg
add
mov
and
mov
int3
mov
inc
fwait
fwait
push
sarl
stos
roll
mov
pop
jns
fcompl
jbe
xchg
popa
adc
add
into
xor
add
insb
rorb
mov
mov
es
imul
fst
jne
hlt
mov
test
mov
cs
xor
aas
dec
pop
bound
leave
push
push
add
scas
mov
out
sbb
jnp
adc
ss
mov
mov
pop
sub
cltd
mov
stos
pop
nop
add
pop
pop
fisttpl
les
stos
enter
stc
and
call
les
or
jne
rolb
ja
jl
out
mov
jae
jnp
in
add
push
sub
xor
aad
inc
and
lods
sbb
popa
add
lea
pop
or
sub
add
mov
xorl
sub
daa
pop
push
sbb
in
stos
and
push
les
mov
xchg
adc
xchg
repnz
movsl
mov
aas
and
lcall
aaa
insl
popa
repnz
inc
push
fidivrl
jmp
push
xor
and
cmp
and
jbe
cmp
decb
sbb
into
xchg
cltd
fcoms
xor
test
jne
das
and
dec
xor
aam
or
cmp
aad
pop
mov
push
and
dec
xchg
cld
inc
inc
mov
mov
pushf
sahf
cmc
mov
push
and
fcomi
imul
daa
xor
dec
or
in
sahf
and
rolb
dec
push
push
stc
cld
inc
aad
inc
enter
fs
lea
cmpsb
add
xchg
jecxz
jns
xchg
add
pop
xor
scas
dec
in
lock
xchg
insl
dec
fsubp
iret
mov
or
insl
movsl
sub
inc
mov
ljmp
and
mov
test
loop
xchg
imul
push
les
xchg
jg
lret
pop
sbb
cs
xor
sbb
xchg
cmp
leave
shr
xor
call
cmp
cmp
add
xor
cmp
jns
das
mov
je
adc
and
jp
mov
mov
imul
cmp
dec
or
pop
adc
dec
scas
jns
jl
add
adc
cmpsb
into
cs
jle
push
mov
dec
shll
cmp
jae
popa
push
dec
outsl
imul
pop
adc
leave
pop
and
decl
mov
adc
push
cmp
and
mov
jns
out
cmp
sahf
ds
xchg
cmp
mov
out
sub
dec
cmp
or
outsb
in
icebp
fs
aaa
mov
ljmp
loope
cmpsb
adc
pop
test
sub
add
sub
andl
or
mov
ljmp
popf
adc
jb
jecxz
cli
mov
lahf
dec
rcr
push
loopne
lea
cmp
pop
mov
add
loopne
clc
lcall
jmp
dec
imul
and
jbe
cmp
add
sub
mov
add
inc
dec
xchg
out
adc
stc
les
add
pop
js
push
mov
nop
jbe
and
lea
sbb
outsb
std
and
push
jge
mov
das
adc
mov
imul
bound
aas
xlat
xchg
mov
imul
cmp
int
cld
adc
arpl
sub
mov
and
test
stos
sbb
divb
or
adc
lcall
inc
rcr
sbb
adc
repnz
aam
xchg
sub
ror
xchg
bound
jae
push
fsubl
push
adc
push
mov
cmpsb
mov
dec
add
mov
movsl
jp
mov
mov
xor
and
jbe
loopne
xchg
lods
cmp
dec
enter
push
stos
dec
cmp
cs
vsubsd
aad
scas
mov
clc
mov
in
pop
mov
cmpsl
or
and
push
cmp
push
gs
lret
mov
pop
adc
movsb
negl
mov
lods
jg
cmp
call
enter
dec
ss
xor
orb
es
cwtl
jno
or
push
mov
imul
lret
mov
inc
in
xorb
and
sarl
add
rcl
push
dec
cltd
or
aas
into
out
jnp
into
es
push
rcr
into
pop
mov
xchg
test
adc
hlt
pop
imul
pop
sbb
fyl2x
mov
xor
xor
mov
fisttps
mov
or
inc
test
fs
sub
cltd
fcompl
aaa
mov
insl
ss
jp
popf
mov
outsb
cmp
inc
mov
fs
jl,pn
push
sub
cmp
add
stos
int
insl
dec
or
pop
adc
mov
fildl
cltd
add
jne
insb
rol
xchg
repz
imul
add
fwait
into
into
xor
xchg
mov
dec
daa
cmpsl
xor
cmp
mov
jae
jge
pushf
test
pop
jbe
lret
imul
fadd
pusha
insl
mov
xorb
mov
imul
xchg
adc
aaa
sub
insb
cmp
enter
mov
or
shrl
xchg
push
rep
dec
jo
pusha
push
fs
jnp
cld
mov
adc
push
push
lcall
je
mov
pop
and
cmp
cwtl
je
filds
mov
stc
mov
ljmp
inc
int
and
gs
inc
and
mov
push
xor
ffreep
and
jl
cmpl
sbb
ss
in
push
cmp
mov
or
out
lea
dec
push
pop
inc
test
in
push
repz
and
fmull
or
xor
dec
mov
neg
mov
push
loop
repz
mov
or
pop
pop
jb
pop
movsb
stos
cli
call
or
jle
cmp
test
ds
shl
pop
sub
repz
outsl
mov
pusha
imul
imul
andl
mov
lret
rcll
bound
push
push
packuswb
mov
xchg
sub
sub
sti
inc
sbb
fmull
stc
and
daa
fwait
adc
jecxz
pop
and
stos
cld
pop
xchg
add
adc
sub
popf
scas
insb
into
cmp
int
lcall
xchg
stc
icebp
mov
ds
mov
inc
ret
leave
jb
out
pop
arpl
outsl
cld
cmpsl
adc
add
xor
daa
or
notb
sub
pop
pop
push
jecxz
or
stc
aas
scas
std
cmp
add
ss
dec
sub
imul
adc
jno
pop
cmp
inc
gs
pop
insb
das
jg
icebp
xor
fs
mov
xchg
mov
pop
inc
std
xor
fsubr
xchg
mov
inc
jmp
jo
push
je
sbb
inc
int3
int3
shlb
or
jno
enter
mulb
push
cmc
loope
fucom
mov
mov
arpl
lea
cmp
les
cld
or
out
xchg
mov
sub
cld
hlt
push
push
jp
jmp
and
loope
das
sub
scas
sub
adc
cld
sbb
lea
dec
or
xlat
out
jnp
add
repnz
pop
sarl
jg
imul
pop
stos
mov
data16
inc
daa
mov
push
mov
dec
popa
xlat
dec
push
sti
mov
adc
cmpsl
out
aam
push
aad
mov
cld
lock
pop
ret
pop
leave
xchg
sbbb
jecxz
cmp
xor
mov
push
xor
lea
jmp
mov
mov
mov
mov
push
mov
mov
outsl
aaa
mov
adc
fistl
or
add
pop
jns
in
pop
jl
push
loopne
out
xlat
jbe
push
int
iret
push
int
push
imul
mov
loop
dec
xor
xor
call
mov
lods
adc
push
fs
subl
sbb
mov
les
push
inc
dec
movsb
or
sub
loop
push
sarl
push
rcll
pop
insl
sub
rcrb
sbb
sti
jge
lods
push
arpl
int
jne
int
pop
jno
mov
jnp
or
gs
add
push
ds
mov
xchg
test
xor
imul
gs
mov
sub
je
sbb
cmp
rorl
dec
ljmp
lods
mov
fcompl
dec
sub
inc
pop
pop
sbb
push
shlb
fisubrs
popa
aas
or
ret
add
rolb
inc
xchg
sbb
inc
setnp
cwtl
enter
ljmp
movsl
sub
adc
sahf
stos
ret
jmp
das
loopne
and
jg
jnp
pop
hlt
push
mov
out
mov
or
scas
arpl
push
fiaddl
shlb
fldt
lahf
xchg
imul
or
ss
xchg
cld
xor
xor
jmp
mov
pop
pop
inc
sbb
add
inc
jb
xor
incb
add
adc
mov
mov
add
xor
jae
fnstenv
lods
shrl
cli
jbe
pop
or
stc
mov
orl
jp
ret
and
pop
mov
aaa
neg
fbstp
sub
mov
repz
jns
inc
mov
sbb
test
leave
ja
imul
push
push
popa
pop
lret
in
ret
insb
and
aam
mov
dec
inc
xchg
xor
movsb
out
push
ret
scas
dec
push
sbb
xchg
adc
imul
cmp
daa
pop
pop
not
push
cs
jge
dec
cmpsb
scas
repnz
shlb
push
pusha
xchg
sub
out
push
loopne
sbb
xchg
cmp
and
mov
enter
or
fnstcw
push
mov
xor
subl
add
ss
test
sti
shlb
push
movsl
jno
hlt
int3
adc
fsubs
push
pop
ja
cmpsl
lret
fwait
sbb
xchg
cmpsb
push
push
test
jne
inc
fdivrl
xchg
cmp
test
inc
or
into
inc
imul
loop
filds
sub
mov
popf
ss
dec
sub
lcall
jns
dec
test
mov
add
inc
jb
jnp
add
lods
mov
mov
add
es
jb
dec
inc
into
gs
push
imul
out
xor
add
jle
jp
adc
add
popf
jp
cmpsl
pop
sbb
mov
loopne
jnp
dec
leave
dec
stos
outsl
icebp
jg
lock
xlat
call
ret
push
mov
jge
xlat
mov
pop
arpl
sub
push
ret
fistpl
loop
ja
inc
cmc
mov
sub
ret
outsb
pusha
dec
xor
enter
xchg
in
loope
loop
fsts
lods
lods
jno
in
loope
jmp
push
es
and
xor
popf
pop
sub
in
fnstsw
jmp
xchg
pop
push
jns
out
mov
or
jne
push
or
push
xchg
cwtl
addr16
jnp
test
or
insb
cwtl
and
lret
es
cmpsl
xor
inc
sti
sub
cld
xor
popa
push
bound
out
lea
jg
mov
sbb
sub
push
addr16
test
inc
sarb
jno
popf
in
xlat
adc
and
int
enter
es
sahf
and
sub
and
jnp
mov
jmp
aam
rolb
jecxz
addr16
in
jno
int
or
jbe
pop
aas
mov
push
jo
or
mov
gs
mov
sub
push
dec
aas
add
loop
shll
repz
pop
scas
scas
aad
test
shrl
xor
dec
in
test
sub
sahf
inc
orl
in
aaa
inc
mov
into
xchg
mov
imul
incb
dec
pop
xor
mov
fbld
jno
xor
push
push
mov
inc
stc
jbe
pop
mov
sarb
in
and
aad
add
sub
cltd
mov
mov
pop
ljmp
jmp
dec
ljmp
pop
lds
mov
jbe
mov
fcompl
ret
xchg
mov
cmp
mov
in
and
jecxz
es
mov
fcoml
loop
push
arpl
leave
and
dec
or
jb
add
std
and
lret
sti
decb
jns
lods
js
imul
push
mov
sbb
test
or
sahf
mov
jo
rcr
mov
jne
dec
dec
mov
jmp
inc
add
cmp
std
repnz
lock
divb
jecxz
fsubr
repz
gs
shl
insl
inc
mov
sbbl
push
mov
mov
push
pop
add
add
arpl
movsb
clc
jne
mov
sub
stos
pop
pusha
jnp
ljmp
push
jg
daa
cmp
adc
mov
loop
mov
daa
shl
clc
push
or
xchg
add
vbroadcasti64x4
jge
and
arpl
fistl
inc
addb
lcall
and
int
and
test
test
adc
fistl
inc
insb
push
xor
rolb
std
push
fldcw
push
inc
out
push
stos
mov
push
mov
imull
mov
dec
xchg
fstpl
adc
cmp
mov
in
pushf
in
or
jge
xchg
pop
or
inc
cli
inc
mov
dec
out
dec
xor
mov
jp
inc
or
sbb
xchg
jle
and
lds
outsl
fiadds
lret
mov
or
push
rcrl
mov
stos
lds
fsubs
cmp
xchg
mov
dec
cmc
sub
pushf
mov
fs
scas
lea
rcll
ret
mov
in
call
rcrb
lret
xor
mov
push
xor
xchg
dec
bound
andb
mov
lods
out
mov
mov
mov
jae
dec
push
xor
sarl
mov
and
notl
lret
dec
mov
mov
lahf
les
test
fidivl
mov
das
pop
out
jge
xchg
mov
add
into
cld
shl
adc
orb
jb
pop
and
stos
gs
pop
out
addr16
aam
stc
push
sbb
pop
cltd
and
inc
std
idivb
jns
sub
cmpsb
int
xlat
ljmp
jge
scas
adc
cmp
fst
fildll
faddl
jbe
lods
jns
jae
aad
loop
xchg
mov
push
shl
loop
push
cmp
push
add
xor
mov
aas
aas
cld
in
mov
mov
pushf
pop
outsl
mov
into
sbb
dec
dec
testb
aas
jp
ja
and
sbb
and
sbb
js
call
push
test
ja
outsb
stos
mov
cmp
rclb
scas
xchg
movsl
add
dec
sbb
sub
dec
das
lcall
jae
insl
lret
mov
ja
das
sub
movsl
fisttpll
scas
lret
mov
andl
and
cmovno
or
test
cmp
jp
outsb
ljmp
out
xor
ficoml
je
iret
sbb
dec
mov
mov
adc
loope
pop
sub
int
or
jo
jae
jb
lods
inc
dec
loop
call
icebp
xchg
push
jo
xchg
mov
loop
adc
jns
outsb
mov
jbe
jb
test
in
out
xor
xchg
mov
cmp
js
and
mov
int
cmp
std
js
mov
repnz
xchg
push
stc
inc
pop
fnstenv
adc
dec
mul
push
add
or
jo
adc
mov
adc
mov
xchg
jno
jbe
mov
aaa
icebp
enter
jl
orb
scas
xchg
pop
rcl
in
mov
mov
addb
loope
inc
call
add
faddl
repnz
addb
pusha
int3
or
cmp
stos
fimull
outsb
sbb
inc
leave
outsl
lahf
dec
mov
inc
fs
in
or
arpl
sub
lea
test
add
mov
or
fdiv
sub
xor
adc
popa
or
cs
test
scas
lahf
lods
lahf
cld
push
inc
mov
mov
inc
popl
fimuls
add
jmp
roll
rcll
cmc
inc
jae
mov
outsb
aas
mov
adc
ja
xchg
mov
mov
aas
mov
xchg
cmp
inc
and
pop
mov
add
stos
xchg
inc
test
loopne
outsl
jle
or
mov
push
sub
hlt
mov
push
jbe
mov
les
leave
add
fwait
notl
call
xchg
sbb
test
push
push
repz
ja
or
stc
leave
inc
pop
lock
aaa
pop
outsl
divps
sub
ljmp
nop
xchg
lret
mov
dec
cltd
mov
movsl
into
aad
stc
rorl
push
fwait
cld
mov
inc
and
sbb
ds
sti
jno
outsl
pop
mov
lahf
mov
les
dec
cmpsl
imul
pop
jno
leave
fmull
in
jge
jg
lahf
xchg
pop
out
scas
sbb
clc
lret
adc
xor
mov
adcb
sbb
fsqrt
mov
jg
pop
ret
sub
xor
mov
dec
mov
scas
push
dec
inc
or
inc
pop
xor
sbb
sub
jle
jl
bound
inc
les
lds
push
lods
jns
jo
push
cmc
fsub
es
and
sahf
jl
aad
sbb
mov
or
push
dec
xchg
xchg
stos
mov
les
inc
fists
daa
fldcw
outsb
subl
test
out
into
mov
xor
dec
mov
movsl
sbb
fwait
jo
in
xchg
pushf
movsl
push
stc
stos
mov
mov
int
sbb
jmp
aam
xchg
scas
js
push
iret
cmp
addl
sub
xor
jne
mov
lret
lahf
mov
inc
clc
pushf
test
data16
mov
pop
push
sbb
lret
dec
xlat
fwait
push
pusha
dec
sbb
test
mov
cs
pusha
insb
push
ss
in
adc
and
call
ja
jbe
cmp
sbb
pop
shlb
jnp
push
rcl
dec
es
leave
mov
int
lret
loop
mov
in
outsb
notl
mov
xchg
push
xor
cmpsl
jae
sahf
addr16
mov
and
adc
mov
fcoms
pop
pushf
cmpsl
adc
not
or
xor
ror
out
adc
sub
jno
pop
jae
aas
mov
pop
outsl
lds
aad
int3
dec
or
stc
scas
lods
or
cltd
add
cmp
add
push
cld
cli
jns
or
ret
sub
pop
es
sahf
adc
pop
repz
cwtl
sbb
add
ror
pop
pop
int
xor
or
das
xchg
xchg
cmp
aam
das
sub
and
and
ljmp
jne
decb
lods
push
jg
sub
lahf
mov
add
inc
loope
aas
stos
pop
mov
push
adc
or
cld
mov
xchg
loope
push
xchg
mov
jmp
mov
popa
lret
sbb
in
scas
xchg
inc
fistps
jno
xor
imul
pop
cmp
mulb
mov
test
lods
mov
mov
orb
adc
inc
popa
mov
and
dec
ret
add
mov
adc
push
mov
or
jge
pop
sti
jecxz
idivl
xchg
or
pop
cmpsb
out
addr16
cmp
std
jbe
call
arpl
aas
jmp
cmc
mov
into
repz
cmpsl
or
xchg
add
jg
and
dec
and
cld
pop
mov
loopne
sti
outsb
loop
cmpsl
ret
fbstp
sbbb
adc
adc
repnz
and
in
cli
mov
enter
push
fmul
push
cli
pop
dec
cmp
mov
inc
pop
lea
dec
das
bound
rcl
or
mov
pop
jl
mov
adc
test
xchg
lea
mov
and
mov
in
fsts
mov
shr
ljmp
std
sbb
jp
cmp
dec
cmpsl
pop
cmpsl
faddl
addr16
pop
add
fsubp
int3
mov
add
vphaddwq
xchg
inc
xchg
or
jmp
push
lcall
insl
mov
lret
pop
mov
stc
sbb
or
addr16
inc
inc
popf
mov
mov
mov
mul
xchg
das
shll
xlat
loope
dec
xchg
mov
je
jb
jmp
mov
xor
scas
es
pop
pop
jb
mov
ret
test
sbb
pusha
jl
sahf
aad
and
dec
das
lds
adc
dec
hlt
push
inc
mov
jns
inc
stos
mov
jge
inc
push
dec
xor
xchg
imul
xor
adc
and
imul
sahf
ret
mov
and
out
add
sbb
mov
test
adc
jbe
int
push
idivl
xchg
push
xchg
pop
cmc
sahf
mov
call
sbb
insl
mov
push
mov
and
mov
repnz
arpl
sub
cli
loop
insb
incl
mov
push
sbb
sub
dec
adcl
sti
popf
sub
xor
inc
jo
mov
test
mov
sub
rolb
dec
repz
cwtl
cltd
adc
pop
stc
out
xlat
test
les
mov
lret
push
fcompl
movsb
pop
fdivp
shl
push
cmp
xchg
pusha
ficompl
dec
push
cmpsw
out
push
cs
lods
lcall
and
xor
and
xor
push
loop
pusha
test
cmp
dec
lods
mov
add
jb
and
test
inc
push
lock
test
inc
into
pop
test
ljmp
into
mov
icebp
or
testb
cwtl
fiaddl
test
mov
popf
inc
sbb
ret
repnz
std
xor
sub
into
test
push
mov
lcall
and
push
scas
push
nop
add
inc
adc
sahf
movsb
mov
aaa
insl
into
push
subb
outsl
lcall
outsl
loope
xchg
out
sbb
mov
mov
xor
push
cmp
inc
out
jb
pusha
pop
fldenv
hlt
aam
add
es
sub
jns
mov
inc
inc
sbb
xor
or
cltd
mov
xchg
mov
or
xorps
xor
lret
push
and
shl
rclb
dec
jecxz
dec
mov
inc
in
or
in
lret
fwait
sbb
xor
xchg
cli
and
fildl
lods
fnstcw
mov
enter
adc
inc
ljmp
adc
xchg
mov
inc
sbb
popf
lods
lret
daa
adc
imull
repnz
out
test
push
outsl
call
mov
lcall
cmp
push
lcall
inc
lcall
mov
test
dec
and
aad
int
xchg
mov
push
call
and
jne
ret
bound
std
mov
push
ficoms
adc
ljmp
iret
mov
push
lcall
insl
push
dec
imul
jbe
jge
cwtl
push
push
ret
cmp
inc
push
insb
pop
mov
aas
push
lahf
ljmp
orl
rclb
insb
loopne
ja
or
out
addr16
xchg
inc
je
xchg
pop
xor
xchg
jb
stc
sub
and
lods
push
and
or
outsb
imul
inc
or
daa
pop
lods
call
adc
jge
shl
imul
xor
jge
sti
scas
lock
stos
xorb
mov
push
sub
imul
aad
test
dec
cs
imul
dec
xor
cld
pop
push
xchg
lods
lret
mov
lahf
mov
jno
into
or
out
jge
scas
pop
dec
shll
std
xchg
lods
std
or
unpckhps
dec
jle,pt
in
int
scas
rcrb
and
add
idivb
dec
mov
daa
outsl
jge
sar
push
ss
popa
pop
scas
dec
lea
ror
add
cmp
pop
push
push
sub
push
sub
scas
popa
dec
call
arpl
mov
orb
mov
pop
jecxz
outsl
dec
cwtl
enter
xor
inc
cmp
leave
or
lahf
fs
arpl
je
xchg
jns
add
fldt
inc
or
orl
xchg
mov
ljmp
adc
dec
cmp
xor
adc
sar
cmp
xor
cmc
xorb
insl
or
repz
outsb
xchg
mov
test
adc
hlt
cmpsb
mov
in
in
adc
dec
xchg
daa
pushf
or
mov
clc
mov
stos
stc
sarb
jne
xchg
or
push
test
pushf
int
or
pop
push
cmc
mov
xchg
andb
loope
add
dec
cmp
add
pop
fwait
in
cmp
ss
inc
inc
lret
sbb
mov
std
jp
ret
push
xorl
xor
inc
mov
and
jo
leave
push
iret
mov
test
imul
xchg
cmc
jo
mov
jnp
jg
mov
mov
lea
or
cmpsl
cmp
fcomip
mov
cmp
jmp
test
fidivrl
les
jge
and
mov
dec
das
xchg
xorl
cli
pop
jg
rorb
sub
xor
jns
in
mov
leave
fbstp
pushf
adc
iret
popf
loopne
dec
lods
fwait
jns
sub
int
call
hlt
pop
es
rcl
push
jp
cmp
cmp
cmpsb
lahf
and
nopl
dec
std
je
inc
sub
mov
fdivs
popa
aaa
sarl
push
ja
scas
pushf
ret
inc
stos
add
mov
cmpsl
mov
fwait
inc
pop
dec
cmp
xchg
add
jmp
or
mov
int
sbb
push
outsb
sbb
jnp
out
push
inc
push
mov
mov
out
in
cmp
jne
pushf
lret
sbb
jle
inc
adc
sbb
movb
mov
fsubrs
scas
fwait
dec
shrb
dec
mov
jns
add
aam
int
es
lcall
mov
adc
add
scas
add
sbb
xchg
aam
clc
pop
sbb
imul
push
push
ret
mov
sub
push
rcrb
dec
enter
dec
sbb
insl
lahf
adc
out
xchg
stos
xchg
stos
roll
push
scas
or
mov
jmp
jne
test
scas
popf
pop
inc
orb
sbb
andl
fiaddl
cmp
in
lcall
push
or
add
insb
xchg
arpl
mov
sbb
sub
call
int3
sbb
or
mov
pushf
or
mov
enter
lea
dec
test
loop
ljmp
push
push
xchg
and
movsl
lret
dec
or
sbb
insb
and
movsb
loop
dec
imul
lock
call
push
nop
push
out
jl
js
push
ss
jg
cmp
mov
sbb
or
mov
mov
inc
aad
gs
shl
or
enter
cmp
or
sub
pop
push
or
adcb
out
test
sbb
stos
loop
loopne
mov
push
sbb
pop
and
xchg
ljmp
shll
sahf
jmp
stc
cmpl
inc
push
popa
jecxz
jns
push
jno
ss
mov
push
cmp
int3
xlat
cmpsl
mov
rolb
pop
pop
cwtl
jp
sub
pop
sbbb
push
arpl
lret
inc
add
and
cwtl
nop
fwait
push
pminsw
loope
adc
jg
push
lods
popa
cmp
lds
not
shll
xor
xchg
cmpsl
xorl
gs
cltd
jne
mov
hlt
inc
addr16
test
xchg
sbb
mov
mov
ret
dec
insb
adc
mov
jnp
jns
aas
fisubrl
adc
mov
iret
out
pop
sub
mov
xlat
add
jb
or
fsubrs
mov
roll
inc
in
adc
xor
xor
xchg
lods
pop
fidivrl
jecxz
iret
arpl
push
sub
nop
push
js
or
dec
sar
xchg
in
insl
push
dec
ret
aaa
and
enter
arpl
call
addr16
movsb
pop
imul
cmc
arpl
add
xchg
je
add
pop
xor
mov
pop
iret
int
les
mov
leave
and
mov
dec
adc
test
adc
mov
sbbl
popa
testb
ret
cmp
int
aam
imul
dec
mov
jmp
inc
sahf
rol
add
sbb
je
sbb
sbb
lea
lods
xchg
push
mov
aad
cmp
ljmp
inc
popl
nop
das
dec
testl
sbb
sbb
popa
cmp
fldl
je
pop
pop
push
pushl
adc
je
fstpl
jno
sarl
loop
xchg
mov
incb
push
lds
jmp
jmp
cltd
pushf
filds
movsb
or
jge
repnz
mov
nop
mov
ror
mov
push
popa
mulb
or
hlt
sahf
shl
shrl
jge
les
cmpsb
into
sub
cwtl
fcoml
pop
sahf
adc
pop
inc
ret
iret
ja
lea
out
movsb
call
mov
push
loopne
scas
dec
popa
sub
push
out
cmp
sub
xchg
push
nop
cmp
mov
mov
jb
iret
orl
stc
in
in
add
ss
shll
popf
pusha
jmp
pop
pop
xor
js
push
xchg
dec
fimuls
out
cwtl
adc
stos
push
mov
loopne
mov
xor
fsubrl
js
arpl
out
pushl
out
rolb
and
cmp
cmp
fwait
or
add
jmp
into
xor
repnz
inc
add
xchg
adc
push
mov
dec
mov
mov
jge
js
fwait
mov
fcoms
sbb
movsb
pop
stc
push
fdivrs
lds
mov
jg
movsb
movsb
xor
pop
pop
add
aam
ja
fiadds
pop
push
scas
imul
sub
les
pushf
or
test
inc
lcall
push
mov
push
push
fsubrs
sub
aas
data16
lea
or
addr16
mov
mull
inc
rolb
bound
and
mov
add
mov
cmpsl
mov
bound
dec
fcoms
sti
movsl
xor
fstpl
cli
aam
ljmp
adc
push
subb
mov
inc
xchg
xor
cmpsl
je
pop
insb
cmc
push
test
les
mov
mov
jge
inc
mov
mov
je
enter
iret
sbb
and
leave
outsb
je
push
sbb
pop
push
cmpsb
dec
inc
mov
out
fmull
dec
xchg
movsb
xchg
mov
ror
test
push
inc
pop
push
inc
shlb
aas
push
jb
mov
dec
mov
pushf
je
pop
xchg
cli
sti
push
repnz
pop
xorb
push
inc
ret
sub
push
jne
adc
dec
adcb
cmp
ja
adc
inc
scas
mov
ret
xchg
dec
and
sbb
add
popf
lret
adc
loope
push
pushf
jae
jnp
and
adc
pop
push
stos
stos
mov
lock
and
mov
andb
and
cmp
xchg
lds
out
jo
cmpsb
call
mov
push
push
aad
mov
cmp
inc
xchg
adc
jg
jno
icebp
lea
mov
jle
mov
dec
push
mov
jb
cld
cmc
mov
sub
and
push
loop
mov
std
mov
lods
jne
mov
je
push
insb
cmc
js
mov
pop
and
mov
sub
and
jmp
add
ret
out
pop
sbb
insb
and
xchg
daa
push
fsubrs
mov
ja
fisttps
push
loop
or
dec
and
dec
or
test
inc
push
mov
mov
out
xor
push
stc
sub
adc
push
into
cltd
and
cld
push
sbb
notb
jb
and
aam
cli
arpl
cmc
je
das
lock
or
cli
mov
scas
ds
sub
jo
rcrl
inc
repnz
loopne
ljmp
sahf
icebp
or
cmp
pop
xlat
mov
sbb
imull
mov
adc
js
loope
adc
push
inc
pushf
mov
jle
mov
inc
les
test
mov
stos
or
rorb
sub
adc
daa
data16
cmp
hlt
jp
push
pop
dec
push
arpl
test
mov
aad
lcall
sbb
pop
adc
push
mov
or
pop
rolb
orb
xor
outsb
lock
xchg
xor
loopne
and
jae
mov
aad
push
fldcw
cmpsl
push
mov
imul
mov
stos
fimull
sti
dec
jge
add
mov
ret
xlat
sahf
push
xchg
xorl
sub
cmp
iret
jg
sbb
test
lds
ds
repz
jle
adc
mov
and
scas
test
imulb
fldl2t
ret
push
mov
iret
inc
sahf
outsl
enter
sub
push
lahf
pop
mov
and
shl
jmp
adc
mov
idivl
sbb
in
movsl
loopne
adc
push
rolb
cmp
mov
mov
outsl
daa
cltd
jbe
push
ja
add
xchg
ret
add
aam
outsb
repz
sub
add
mov
sahf
frstor
pop
xchg
jle
and
enter
in
jecxz
sub
pop
push
cltd
mov
xchg
or
cmpsl
loopne
or
jno
imul
fidivrs
adc
in
or
je
fmulp
fwait
pop
incl
or
sbb
insl
fldt
repz
push
dec
sub
outsl
xchg
stos
cmp
and
xchg
push
mov
loopne
jp
push
adc
xchg
mov
xchg
add
xchg
add
jne
jno
jecxz
xor
clc
in
jecxz
jg
add
cmp
xor
mov
sub
or
jl
mov
js
xchg
into
mov
inc
cmp
mov
cli
push
dec
pop
mov
jbe
mov
push
xchg
add
sbb
jb
sub
hlt
jle
pusha
mov
insl
pop
mov
sub
xor
movsb
mov
popf
lret
inc
adc
test
dec
jmp
dec
iret
nop
lret
mov
ficoml
mov
and
mov
push
xchg
add
fs
add
popf
dec
std
mov
mov
mov
leave
ss
mov
push
lret
ret
lds
jno
ljmp
xor
cmp
in
shrl
insl
xchg
xor
lods
pop
cwtl
xchg
mov
and
xlat
arpl
dec
adc
pushf
lahf
inc
mov
dec
mov
out
push
or
mov
xchg
jmp
arpl
in
dec
jns
gs
or
pop
outsl
cmp
push
arpl
outsl
cmp
fwait
ljmp
addl
cmpsl
mov
xchg
jno
insb
sub
fadds
jo
add
lret
add
fwait
xor
dec
mov
cltd
pop
mov
cmp
mov
cmpsl
and
mov
ja
push
jnp
add
stos
xor
cmp
pop
cmpsl
int
jl
addr16
xchg
add
shlb
sub
cmp
pusha
into
push
hlt
out
jns
add
xor
loopne
jmp
mov
insl
cli
add
ret
fsubrs
out
inc
in
xchg
mov
lods
mov
push
pop
inc
aad
inc
sub
add
cmp
pop
xor
push
je
sbb
out
leave
xor
fdivl
push
fcoms
jl
icebp
mov
dec
xor
xchg
pop
fs
pusha
mov
jl
daa
mov
jae
cli
ret
or
push
xlat
icebp
mov
xlat
dec
pushf
ljmp
imulb
cltd
jb
mov
dec
subl
fdivrl
aas
mov
mov
adc
ret
icebp
sub
adc
inc
xchg
aam
fucomip
xchg
rcll
out
cvtps2pd
ret
vpcmpgtb
call
lods
sub
mov
aad
icebp
inc
shl
cmpsb
popa
addr16
push
jae
mov
js
leave
movb
cmpsl
mov
mov
push
out
dec
sub
loop
inc
mov
jmp
push
pop
adc
mov
sub
and
and
lock
sbb
push
fsts
adc
jl
sub
mov
mov
push
int
cmpsb
bound
call
push
lods
jmp
out
fmuls
daa
cli
jge
mov
in
ljmp
popf
cmpl
add
mov
xchg
pop
sarb
int
mov
dec
lods
movsb
add
and
mov
push
fcmovnu
andb
scas
andb
sti
out
or
jae
insb
jmp
jno
adc
inc
nop
shlb
test
pop
out
outsl
ljmp
adc
xor
dec
cmc
fldcw
pop
ss
xor
and
or
gs
and
rcr
mov
mov
fildll
call
gs
daa
inc
notl
pushf
ljmp
xor
sbb
mov
sub
sahf
fidivl
das
frstor
filds
pop
out
adc
cmp
push
bound
xchg
jns
push
or
stos
pushf
xlat
js
add
ljmp
mov
xchg
dec
xor
aaa
pop
lcall
mov
xor
xor
sbb
shll
dec
xor
sbb
cmp
call
add
loope
test
mov
mov
mov
stos
mov
adc
fmuls
ret
adc
repz
push
and
or
stos
push
testb
or
push
test
ja
jg
cmp
frstor
mov
iret
jne
nop
mov
sub
popa
enter
push
push
or
jne
mov
push
dec
pop
xchg
into
adc
cltd
jge
arpl
cmp
mov
dec
mov
sarb
add
loop
jmp
loope
inc
out
addr16
outsl
push
sti
push
lcall
push
xchg
test
mov
movsl
inc
push
ret
mov
sbb
fisubrl
and
xor
mov
mov
adc
addr16
cld
xor
jle
imul
test
and
jecxz
shrb
jmp
frstor
cltd
stos
js
jbe
fcompl
insb
sbb
fnstsw
inc
and
lret
ret
adc
lods
aam
ss
mov
rcl
js
push
push
repz
push
ljmp
fwait
jl
xchg
repz
and
xchg
rcrl
push
pop
lds
sbb
mov
fnstenv
adc
mov
shll
xor
popl
sbb
insb
sbb
or
es
ret
jns
push
mov
movsl
pop
jge
jmp
mov
jb
jae
push
cmp
mov
fs
cltd
pop
pop
sbb
hlt
lcall
gs
sbb
aad
jo
call
cmp
les
xchg
mov
leave
mov
sub
nop
cmp
movw
push
mov
and
fdivs
cmpsl
or
push
xor
cmp
cmp
mov
call
push
xor
addr16
int3
push
xchg
mov
aaa
lods
inc
push
push
fdiv
ret
out
test
cmp
pop
and
xchg
sbb
cld
inc
sbb
lcall
aam
ret
mov
xor
divl
or
cld
fucomi
pop
mov
in
in
adc
xchg
push
push
sub
add
mov
test
arpl
dec
pop
je
cltd
clc
jmp
inc
enter
out
addr16
adc
push
andl
rorl
imul
vminsd
test
pop
jb
inc
js
adc
test
inc
inc
add
cwtl
or
push
pop
mov
pop
gs
push
jbe
ja
xchg
out
fstps
jge
clc
fidivrs
stc
pop
or
inc
cmpsl
dec
fcoms
out
xlat
jmp
out
aam
sbb
fistl
xchg
test
outsl
sub
shlb
mov
push
in
hlt
pop
fsts
add
data16
sbb
mov
push
cmp
cltd
out
adc
lods
repnz
mov
xor
movb
pop
sub
lcall
lea
or
movsb
sub
xor
repnz
xor
lahf
mov
mov
mov
mov
jae
cmp
jnp
push
les
fwait
xor
repnz
loop
dec
xor
jecxz
test
in
push
and
retw
sti
mov
stos
mov
gs
jns
in
call
mov
fs
xor
clc
push
or
xor
mov
jns
subb
sbb
mov
out
pop
sub
les
mov
mov
dec
sub
xor
sbbl
pop
mov
je
test
cli
addr16
add
push
and
add
lods
insl
insb
or
mov
pusha
sbb
or
inc
sub
jb
fcmovbe
stc
inc
jno
inc
icebp
adc
clc
rcr
jmp
fisttpl
push
push
mov
clc
pop
leave
push
loope
push
dec
outsl
inc
xchg
mov
or
or
push
jnp
dec
dec
fnstcw
sub
cmpsb
pop
mov
mov
pop
and
add
test
adc
lret
inc
lret
xchg
or
cld
enter
scas
push
fdivl
jl
stos
cmc
mov
mov
loop
aad
outsb
imul
pop
jbe
lahf
push
and
or
pop
and
sub
mov
enter
push
ss
pop
and
pop
jno
push
pop
in
mov
dec
mov
lret
arpl
fildll
ror
xchg
in
dec
or
mov
cmp
out
sub
xchg
maskmovq
push
pusha
test
pusha
lret
dec
xchg
fdivs
popf
iret
push
fnstenv
sub
mov
je
leave
fcompl
arpl
xchg
mov
sub
fcompl
test
adc
lahf
sbb
inc
cld
add
aas
sahf
adc
hlt
notb
pop
pop
mov
push
jecxz
mov
testl
es
jle
inc
movsl
cmc
xor
pop
stos
xor
or
lea
lret
mov
cld
mov
std
jae
sbb
push
push
pop
mov
ret
outsb
push
pop
xlat
sub
lods
sub
fldcw
insb
imul
ds
pop
sbb
in
mov
inc
mov
dec
sbb
sahf
pop
dec
daa
mov
cmc
and
stos
adc
out
and
lods
out
mov
fisubl
pop
dec
dec
fwait
pop
fcompl
and
jg
leave
cli
cmp
lret
popa
mov
and
mov
xchg
icebp
inc
rcll
fdivs
gs
leave
sbb
movsl
xchg
sub
sub
inc
pushf
ja
leave
xor
add
inc
and
pop
pop
lea
fmul
popf
fisttpl
adc
rcr
xchg
shll
sbb
pop
mov
mov
sbb
xchg
jb
popa
bound
or
and
mov
int3
mov
push
es
incb
ja
jle
pusha
xorb
ret
and
pop
adc
rclb
jnp
lea
pushf
test
repz
jmp
mov
pushf
sahf
mov
sbb
ja
sahf
lods
xor
adc
mov
ljmp
cmc
bound
bound
adc
cmpsl
sbb
sbb
outsb
sbb
xchg
jl
xchg
pushf
or
push
fmull
xor
fidivl
push
add
mov
push
cmp
inc
das
cmc
mov
cmc
je
jo
mov
jle
lds
je
xor
ja
lahf
inc
and
addb
les
enter
xor
jmp
cmp
es
cwtl
rcrl
out
jmp
sbb
jbe
push
push
pushf
push
adc
jns
inc
xchg
jge,pt
cmp
xor
mov
inc
dec
lahf
out
xlat
cmp
fdiv
arpl
sbb
and
call
es
sarb
cltd
xor
xor
cmp
mov
imul
lret
loopne
out
mov
icebp
outsb
mov
sar
jb
jnp
insb
fs
out
jnp
xor
sbb
and
add
bound
adc
pop
dec
fidivrs
inc
mov
xlat
test
and
push
jb
mov
shll
inc
daa
inc
mov
fldenv
sti
add
inc
ss
std
add
push
add
mov
pop
filds
daa
sub
cmp
mov
scas
dec
movsb
loope
idiv
dec
or
cld
dec
pop
or
dec
lret
push
fwait
subb
je
dec
push
int3
pop
call
pop
outsl
lods
and
pop
mov
in
lret
add
imul
ljmp
mov
xchg
push
jmp
ja
mov
ljmp
cwtl
cmp
sahf
cmp
pop
or
push
and
cmpb
or
push
data16
sub
jmp
mov
inc
mov
cltd
mov
or
incl
jne
mov
rorl
lods
fistpl
ss
shll
scas
pushf
or
nop
sbb
pusha
jecxz
mov
sub
je
jb
adc
cli
inc
or
imul
jnp
aad
lretw
dec
mov
jb
jg
mov
lcall
cmpsl
inc
stos
inc
xchg
js
sub
sahf
add
lcall
dec
inc
dec
pop
aam
sbb
aad
adc
push
cmp
mov
push
add
sahf
in
stos
fsubr
outsl
js
jno
or
sbb
rorb
ljmp
push
jmp
iret
popa
adc
cli
lahf
insl
add
dec
pop
add
xchg
push
xor
xlat
adc
fs
gs
les
inc
pop
jg
repz
dec
push
out
fwait
xchg
or
aam
outsb
dec
rolb
jg
push
add
icebp
movsb
xlat
pop
inc
int
and
push
int3
dec
cmp
add
aaa
xchg
mov
mov
dec
and
into
jnp
cpuid
fdivl
aaa
scas
sbbb
jle
imul
jg
gs
jmp
cli
jg
inc
mov
int
jno
jno
leave
icebp
rol
es
push
inc
inc
rol
int
and
in
xchg
and
cltd
push
xor
pop
sub
out
xchg
dec
fsts
mov
sbb
sub
int
cli
and
dec
loopne
sub
pop
aaa
out
and
shlb
cltd
movsb
mov
mov
in
sub
add
mov
sbb
add
notl
cltd
mov
cli
loop
repnz
int3
adc
mov
or
add
cli
addr16
scas
mov
inc
mov
dec
imul
gs
in
stos
dec
repnz
es
and
into
rolb
leave
and
in
movsl
sbb
orl
test
imul
mov
imul
test
lods
xor
in
mov
sbb
out
push
add
test
cs
cmpsb
or
mov
adc
sub
sub
je
mov
xor
push
inc
add
std
mov
add
and
cmc
or
xor
adc
in
cmp
sub
idivl
mov
dec
push
xor
push
sbbl
bound
mov
mov
test
xchg
cmpb
xchg
add
xchg
xor
sub
jbe
cmpsb
movsl
fnstsw
cmp
xchg
into
or
shll
pop
or
mov
inc
jb
int3
xchg
lcall
and
mov
je
jo
in
leave
jae
mov
js
sbb
adc
test
mov
adc
dec
push
outsl
inc
pop
jne
xorb
imul
imul
sub
mov
je
mov
test
cmp
mov
fildl
xchg
mov
std
jl
jne
or
ficoml
pop
or
sahf
push
fidivl
or
mov
add
cwtl
rolb
adc
sub
cmpsb
push
mov
sbb
jno
add
mov
int
es
test
and
out
mov
adc
cmp
bound
xchg
xor
add
aas
pop
scas
stos
negb
mov
adc
scas
mov
sub
aas
mov
dec
lea
sbb
inc
or
test
sti
out
sbb
sbb
loope
pushf
imul
pop
and
pop
bound
cmp
jno
call
aad
cld
out
push
aas
andb
fidivs
cmp
xchg
jp
and
int3
jg
fstpt
cld
out
ljmp
stos
jns
cmpl
mov
xlat
scas
or
out
repnz
cmp
jp
mov
pop
cmp
fisubrl
andl
jp
pop
xchg
mov
pushf
out
sub
leave
sbb
ds
loop
roll
mov
jo
loop
imul
scas
lock
es
xchg
jae
xchg
xlat
mov
sbb
rol
mov
enter
mov
push
adc
inc
adc
lods
subl
ret
fnstenv
js
mov
popa
shlb
pop
ds
or
cld
mov
int3
mov
lret
loop
repnz
push
lea
test
pop
xor
into
popa
std
pushf
bound
pop
lgs
push
lahf
push
add
pusha
aad
popf
ljmp
idiv
push
outsl
ret
shl
nop
ret
aad
lock
pop
incl
jns
inc
jns
xor
xor
lret
pop
scas
sub
sub
mov
rcrb
or
dec
xchg
sub
sahf
inc
lcall
imul
and
hlt
lods
and
push
mov
enter
pop
test
scas
xchg
orb
sub
jns
xchg
gs
out
in
push
test
jbe
push
sub
in
iret
ljmp
ficoms
mov
movsl
arpl
iret
repz
push
sub
ret
or
lds
adc
inc
add
sbb
jmp
cmpsl
imul
mov
cli
loope
stc
xor
xchg
cmpsl
and
inc
dec
jno
out
xchg
test
jbe
movsb
in
inc
jl
push
and
out
sub
push
daa
add
dec
dec
sarb
xorb
dec
test
scas
jno
pop
or
push
cli
ja
lods
jne
dec
clc
or
cmp
fs
dec
shrl
js
inc
xor
ret
jnp
mov
std
inc
pop
leave
in
adc
mov
gs
stos
out
les
add
cwtl
fs
jecxz
inc
and
mov
stos
jge
lret
stos
ss
dec
add
dec
and
pop
or
cmp
repz
rclb
adc
cmp
cmp
call
and
xor
sub
push
ljmp
stos
jns
adc
dec
ljmp
lock
mov
addr16
std
stos
js
idivb
dec
or
das
xorl
into
jge
sub
pop
sub
push
push
repz
dec
or
insb
xchg
adc
loopne
push
mov
ret
out
pop
xor
addl
jmp
daa
jae
sbb
xor
mov
and
sub
mov
hlt
je
mov
mov
fstp
int3
adc
push
lcall
fcompl
inc
cmpsl
and
cmp
sti
pop
push
jmp
ret
adc
mov
outsl
jg
pop
jno
aaa
stc
sbb
jmp
popf
or
inc
sub
xchg
sbb
cmc
in
stc
popa
dec
fdivr
in
or
fcompl
sar
shll
pop
dec
or
cmp
sarb
jnp
repz
mov
iret
mov
les
mov
mov
int3
call
mov
gs
sbb
push
xlat
data16
mov
pop
mov
sar
sbb
sub
mov
les
loopne
scas
xor
sbb
push
adc
in
cwtl
fistps
in
repnz
out
lret
adc
insb
ss
lea
inc
faddl
mov
cmp
clc
icebp
jno
out
inc
mov
or
mulw
aad
nop
or
mov
mov
int
mov
cmpsl
sarl
xor
fnstenv
sti
mov
mov
push
cs
or
mov
mov
sbb
out
push
stc
ljmp
hlt
and
orb
js
or
imul
je
xlat
mov
ret
cmp
sub
daa
or
inc
xchg
push
lret
in
shll
add
add
cmc
jl
xor
push
adc
lret
mov
fcoms
xor
push
or
das
insl
dec
inc
pop
mov
or
jmp
ljmp
pop
cmp
lahf
inc
xor
fildll
testb
mov
sbb
std
sub
js
aaa
hlt
or
in
pop
in
xor
out
dec
sbb
into
bound
xchg
sub
push
cmp
jecxz
mov
cltd
ljmp
mov
push
pop
jno
push
adc
cli
je
insl
cmp
cwtl
mov
mov
dec
das
dec
jae
cmp
cmp
roll
test
ja
pushf
pop
int3
dec
andb
mov
sqrtps
leave
data16
xor
push
arpl
nop
pusha
xchg
pop
cmp
movsb
lret
push
ljmp
cmp
movsb
cmpsl
mov
mov
hlt
call
dec
std
xor
loope
fs
dec
dec
scas
lock
mov
andb
push
stc
cmp
cmpsb
aad
inc
js
sar
pop
push
test
sarl
jp
out
mov
jne
jne
les
adc
ja
cwtl
xchg
mov
sbb
in
or
push
or
daa
les
movsl
xchg
pop
jnp
adc
xadd
test
jecxz
push
aam
pushf
rorb
es
aad
dec
mov
popa
pop
xor
sbb
xor
iret
leave
scas
push
repnz
sub
cmpsb
fsubs
and
in
cmp
push
push
xchg
cmp
stos
push
mov
adc
fstpl
jmp
out
mov
sbb
jg
insb
test
push
add
dec
jg
fistpll
aaa
lods
sti
loop
shl
cmpsl
pop
mov
icebp
push
icebp
rcl
aam
mov
jnp
js
pusha
mov
xlat
fsubs
add
loop
les
clc
cmpsl
push
imul
add
adc
pop
add
mov
ljmp
mov
cmp
mov
out
sub
shrb
jp
cmp
sti
fdiv
mov
adc
pop
cmp
lret
xor
adc
dec
lock
idivl
add
mov
sub
orl
test
add
in
outsl
popf
pop
nop
or
cmp
dec
aad
sub
push
gs
mov
lret
lds
imul
pushl
push
gs
mov
dec
adc
cli
mov
lods
iret
stc
test
mov
movsl
adc
dec
fldcw
ljmp
and
xchg
jmp
or
popa
test
push
pop
sti
mov
pop
xlat
cmp
push
and
adc
sub
sbb
or
xchg
push
pushf
andnps
in
insl
mov
insb
xchg
dec
push
lock
dec
movsb
mov
rclb
rcl
and
loopne
adc
mov
lods
adc
std
jecxz
cmp
sub
cmp
rcll
jno
xchg
adc
shlb
in
clc
adc
lods
iret
sbb
pop
xchg
mov
js
mov
lahf
mov
nop
mov
cltd
add
mov
cmpsb
and
cld
dec
cmp
xchg
push
es
repnz
lds
insl
cli
dec
sti
test
out
cmp
xor
mov
jns
pop
mov
jno
xchg
pop
shl
pop
sbb
add
mov
cs
mov
xor
stos
icebp
mov
xchg
push
in
cli
cmpsb
les
lea
ret
mov
and
jae
gs
mov
cmp
in
cmc
sbb
cltd
in
dec
add
adc
scas
mov
adc
movsb
mov
xor
or
push
out
push
mov
xadd
test
rclb
loopne
xchg
jnp
cltd
cmpsb
lods
and
je
aad
testb
mov
flds
sbb
xchg
sahf
cwtl
mov
push
sbb
cmp
shll
into
mov
pop
or
popf
sbb
imul
xor
mov
stc
add
mov
shlb
test
fwait
push
and
nop
aad
fcmovnu
push
and
rcl
js
sbb
xlat
sbb
imul
inc
mov
sub
mov
je
sub
cmp
mov
push
and
and
in
inc
pop
sub
jns
loop
scas
and
ret
ficomps
mov
push
cmpsb
loop
stos
call
xor
fldl
cmp
push
repz
mov
inc
xor
dec
inc
filds
mov
add
repnz
stc
rorl
jle
xor
scas
cmpsb
fs
push
jb
mov
cmp
xchg
cmpl
sbb
popa
jns
xchg
fcmovne
int
pop
add
xlat
fadd
push
mov
xor
cltd
aad
imul
testb
push
jnp
lods
and
out
xchg
aas
mov
add
jnp
sub
mov
into
insl
mov
mov
jo
incl
loopne
icebp
es
sub
jo
mov
pop
push
jae
inc
sahf
ret
jecxz
int
insl
jmp
cmpsb
call
xor
dec
idiv
xor
pop
aam
pop
cltd
clc
sbb
add
pop
jb
cmpsl
shrl
cmc
in
popl
lods
inc
lds
les
dec
mov
aaa
shrb
inc
nop
push
adc
test
push
cmp
jns
cmp
rolb
enter
jmp
jl
lock
jne
or
fcoms
lcall
xchg
movsl
jecxz
sbb
imul
xchg
je
into
adc
ljmp
xor
inc
test
mov
test
mov
andl
in
iret
adc
out
adc
inc
sbb
std
adc
mov
or
lret
cs
movsb
lock
loopne
int3
cs
lea
xchg
pop
sbb
push
outsl
scas
stos
xorb
rcr
pop
mov
mull
inc
into
add
mov
mov
shll
insl
jno
pop
popf
mov
push
cmpsb
aas
outsb
pslld
push
aaa
cmp
add
cmp
or
jne
stc
lcall
push
add
ret
inc
in
cmp
lret
loope
repnz
lahf
lea
inc
jecxz
lods
scas
popf
push
cmp
xor
icebp
std
divl
outsl
jbe
push
fldt
xlat
and
mov
push
xor
mov
jecxz
sub
dec
cli
icebp
xchg
addl
mov
dec
xor
xlat
push
cmp
mov
fiaddl
ds
insb
gs
clc
xchg
jo
sbb
shrb
rclb
sbb
xchg
mov
loopne
xchg
xchg
out
jp
aam
adc
or
stc
xchg
rolb
shrl
or
xchg
mov
add
jg
sub
xchg
cs
in
pusha
add
mov
int3
and
and
mov
mov
mov
pop
jg
jp
xchg
xchg
in
lods
dec
mov
outsb
pop
mov
mov
inc
xchg
test
pop
loop
mov
imul
movsb
andb
bound
scas
in
mov
cmc
mov
inc
cmp
sahf
aas
stc
pop
jle
mov
inc
and
sbb
js
popa
stos
push
imul
mov
mov
out
push
cli
jge
arpl
mov
pop
mov
aad
xchg
cli
ficomps
and
std
sub
jbe
pop
rcr
adc
mov
mov
jbe
push
sub
icebp
mov
mov
fildll
in
mov
mov
hlt
movsb
aam
jg
aad
adc
sbb
jl
xlat
sub
stos
add
mov
push
sub
inc
shrb
fsub
ret
adc
dec
push
loopne
stos
cmp
rolb
adc
dec
insb
fcmovu
mov
out
push
stos
sub
sub
shl
ljmp
cmp
cmp
cld
lahf
mov
jmp
mov
arpl
leave
push
fcoms
cmp
lods
dec
xchg
mov
stc
xchg
mov
xchg
or
lods
jg
and
mov
xchg
dec
movsb
mov
mov
stc
inc
pop
jle
mov
data16
push
jmp
test
cmp
shlb
xchg
adc
pop
aaa
stos
sbb
sub
pusha
jb
mov
push
pop
add
pop
and
mov
incl
test
sbb
xchg
pop
lods
add
jo
fisubrl
addl
cmp
std
outsl
rorb
pop
adc
cld
sti
ss
inc
mov
bound
out
push
jge
clc
and
push
inc
cli
adc
cs
fdivr
xchg
push
add
int
mov
lds
cld
mov
int
mov
and
or
pop
lret
sub
xchg
pop
cltd
aam
sbb
lahf
std
mov
cmp
fistpll
lock
sti
jns
out
sub
mov
mov
push
clc
loopne
daa
dec
ret
or
inc
div
dec
pop
push
and
adc
shll
fstpl
mov
push
mov
repnz
into
lret
sub
out
lock
gs
jle
sbb
pop
mov
jg
xor
xlat
jne
mov
dec
cmpsl
pop
leave
add
cwtl
or
pop
dec
inc
mov
xchg
pop
mov
cmpsl
int
xchg
popf
mov
push
sub
pop
sbb
sahf
cmpsb
xchg
mov
outsl
ret
bound
pop
cltd
lds
cwtl
lahf
fwait
sub
xor
pop
in
xchg
cmpsb
cli
xchg
ds
add
std
jo
pop
fiadds
jb
lea
int
push
repz
loopne
push
adc
js
nop
insb
loope
inc
hlt
sub
sub
das
mov
popl
loop
loop
in
cmp
add
and
in
push
xor
and
loope
push
push
leave
or
and
pop
or
js
cmp
lods
xchg
push
mov
stc
sti
ss
xchg
ret
push
sahf
ficoms
push
sbb
in
jg
out
enter
rorl
and
dec
fcmovnu
adc
or
add
rorl
jle
aam
jbe
lcall
pop
insl
push
push
mov
fs
pop
add
lock
or
adc
cmpsl
pop
mov
mov
xor
add
fs
add
loop
lahf
popf
icebp
in
icebp
sub
fistpl
jnp
dec
notl
cmp
xchg
lea
jnp
loope
movsl
dec
or
xor
int
mov
push
mov
mov
test
into
pop
test
mov
mov
test
push
xchg
mov
notb
fsubrs
pop
iret
add
push
push
mov
aam
sub
cwtl
sahf
rol
cmc
es
sbb
imul
mov
aas
repz
inc
shrb
outsl
add
call
sarl
xor
xchg
jg
xchg
cmpsl
push
test
je
mov
mov
push
pushf
mov
push
mov
xchg
push
call
lret
inc
adcb
or
pop
sbb
vpmuludq
dec
fistpl
and
and
inc
jne
or
in
es
add
dec
sub
push
ret
aam
into
out
loop
outsl
or
in
xor
xchg
dec
cmc
fsts
rclb
pop
cmp
mov
pop
add
inc
inc
xor
xchg
lds
lds
adc
pop
or
push
cmp
sbb
nop
popl
or
and
sub
test
out
xor
lods
dec
in
scas
push
sub
scas
mov
mov
pop
pop
xchg
pop
jne
dec
rsm
call
or
jne
or
sub
sbb
ret
sbb
push
push
stc
inc
test
jle
lock
push
add
ja
mov
inc
daa
push
jnp
shrb
lret
push
dec
mov
xor
xchg
xor
pop
ficoms
cwtl
xchg
in
fisubrs
scas
xor
mov
push
repz
int3
lock
outsb
add
enter
sbbl
jle
loopne
sar
push
add
test
gs
cs
inc
outsl
add
xchg
insl
or
rorb
xchg
into
out
aam
cmp
insb
out
xor
jbe
lods
xchg
aas
inc
out
cmp
inc
jae
inc
pusha
or
notl
stos
cmpsl
adc
sub
incl
mov
mov
ds
sar
arpl
xchg
add
add
fdivrl
or
pop
dec
imul
int3
cli
into
loopne
dec
adc
divl
cli
fcomps
jg
xor
test
shrb
xchg
fwait
sbb
enter
lahf
cmp
ret
mov
into
rcrl
pop
pop
xchg
xchg
int3
xchg
sub
outsb
xor
mov
inc
into
loopne
lds
or
fwait
sbb
je
push
inc
into
hlt
inc
std
loope
stos
stos
test
cltd
push
pop
leave
aaa
cltd
es
mov
repz
and
int
test
ljmp
pop
xchg
dec
cld
aaa
imul
outsb
adc
scas
cltd
xor
jb
pop
lods
aas
sub
push
adc
inc
mov
iret
cli
inc
in
xchg
sbb
mov
pushf
push
mov
faddp
pushf
inc
xchg
ja
in
mov
or
test
popf
aas
push
mov
sub
adc
jmp
lods
sub
mov
imul
add
add
or
test
addr16
dec
jbe
ljmp
push
inc
add
fidivs
rcr
add
cmp
or
mov
xchg
pop
dec
pop
xor
pusha
inc
rcll
cmp
dec
adc
add
ret
nop
icebp
and
mov
mov
cmc
cmpsl
mov
in
cmp
dec
mov
call
and
shrb
xor
and
add
inc
mov
aam
test
sub
mov
or
jp
adc
enter
dec
imul
imul
mov
inc
push
arpl
adc
aas
ret
cwtl
mov
adc
mov
push
and
adc
mov
mov
add
cmc
adc
lock
or
push
loopne
repnz
adc
mov
lret
pop
stc
arpl
jmp
mov
mov
sbb
add
jae
sbbb
frstor
adc
in
imul
fstpt
lcall
xchg
rorl
lcall
mov
adc
das
cmp
push
cmp
and
cmpsb
movsl
mov
inc
je
cmp
mov
loopne
lahf
faddl
flds
lret
ficoml
jle
jle
cld
mov
sub
daa
mov
arpl
out
sti
fimuls
adc
mov
xor
lods
jno
pusha
inc
movb
ljmp
pop
aas
das
add
ja
int
and
shr
push
pop
icebp
push
test
sahf
fs
sbb
mov
cmpsb
xor
mov
add
jecxz
dec
and
sub
test
mov
adc
add
cs
mov
mov
push
orl
jb
leave
xchg
sbb
xlat
cs
stc
fucom
arpl
out
lods
xchg
and
mov
repnz
push
dec
pop
mov
adc
or
jl
lret
sahf
mov
adc
sub
cmp
testb
lahf
out
pop
adc
repz
js
add
lods
lahf
sub
xor
inc
or
xchg
add
xchg
push
sbb
lods
leave
or
lret
nop
clc
lods
call
scas
ret
sub
aas
sub
jmp
lret
mov
lods
or
mov
lods
sub
aad
gs
scas
pop
nop
js
xor
sbb
insl
andl
xor
pop
insb
es
lret
mov
mov
inc
sbb
stos
bound
in
popa
outsb
adc
and
xchg
movl
jb
test
fcmovb
xchg
sub
loop
xchg
or
or
gs
mov
mov
mov
sbb
mov
jg
lcall
jae
push
cmp
adc
xchg
movl
js
cltd
lret
push
sbb
ret
push
nop
ja
in
outsb
lahf
into
cmpsb
scas
out
mov
jg
add
sbb
add
add
negb
test
push
ja
fmuls
cmc
lret
in
gs
and
movsb
bound
orb
aaa
mov
sti
int3
repnz
mov
or
jns
mov
call
adc
sqrtps
loope
add
mov
andb
mov
and
push
pop
fs
test
incb
push
ret
les
into
ja
imul
pushf
inc
dec
dec
sahf
pusha
cmpsl
cltd
lcall
scas
lods
int
ret
push
mull
mov
shll
movq
mov
fldl
lret
jecxz
je
inc
lcall
aas
xchg
out
daa
cs
into
xor
mov
fidivl
cmp
popf
std
negb
mov
cltd
iret
cwtl
adc
sti
orb
cwtl
mov
rorl
mov
stc
enter
mov
fsubl
xor
imul
mov
stos
mov
add
mov
xchg
add
inc
pop
mov
push
push
pop
dec
sbb
or
ljmp
xor
mov
lods
or
and
jne
mov
ficoms
mov
mov
incl
int3
rol
loopne
scas
jns
call
bound
addb
lcall
mov
js
out
pushf
inc
cs
in
das
mov
push
mov
cld
ss
pop
aas
popa
lods
enter
cmp
scas
fs
add
test
pop
sbb
mov
mov
xchg
fnstsw
testl
cmc
push
xchg
push
or
mov
mov
dec
das
test
jbe
bound
dec
mov
xor
mov
mov
jb
mov
enter
out
outsl
pop
add
cld
jo
leave
push
xchg
push
jge
fiadds
or
and
insb
sbb
dec
out
stos
fimuls
jae
js
push
cltd
js
jnp
aaa
fistpl
cmp
out
xchg
les
leave
cld
sbb
xchg
xchg
and
arpl
imul
aad
outsb
shl
xlat
mov
or
adc
jae
mov
pop
sub
add
sbb
mov
mov
xchg
insb
mov
push
subb
push
in
sahf
and
push
sbb
fbstp
movsb
int3
outsl
in
push
and
xchg
pop
inc
out
imul
std
sahf
xor
andb
xchg
clc
in
in
mov
xchg
filds
fimuls
inc
ret
lret
andb
adc
mov
mov
cs
mov
notl
add
in
cmp
nop
js
fists
push
mov
adc
cmc
mov
push
movsl
inc
dec
mov
xor
insl
mov
insb
mov
pop
mov
jns
sub
stc
and
subb
add
dec
mov
and
js
aaa
xor
imul
test
jnp
into
push
mov
sbb
mov
mov
mov
ja
test
mov
dec
rcr
or
cmp
sub
mov
les
loope
cmp
xor
mov
mov
inc
les
mov
imul
pop
iret
jecxz
mov
fs
mov
sub
dec
stos
pop
rcrl
addr16
pushf
rclb
sub
pushf
movsb
jmp
inc
scas
loope
loop
mov
or
mov
and
jecxz
sbb
in
imul
push
or
sti
pop
sbb
mov
push
movsb
loope
sub
jecxz
shl
mov
shrl
loopne
repz
fwait
sbb
pop
out
lret
fsqrt
std
push
or
mov
lahf
dec
pushf
and
cs
adc
add
pop
pop
out
pop
inc
adc
fcoml
add
or
stc
xchg
mov
repnz
in
mov
add
push
jne
out
cld
shll
adc
mov
add
and
push
sub
test
aaa
pop
cmc
adc
sbb
mov
lret
dec
mov
fcom
push
xor
in
nop
sub
inc
movsb
xchg
shr
test
xlat
cmpsb
lea
push
sub
inc
mov
cmc
movsl
ss
mov
shlb
dec
and
push
daa
shrb
clc
movsb
popf
pushf
mov
out
push
pop
dec
ljmp
add
call
lods
inc
dec
inc
andb
roll
sub
push
xchg
pop
addb
jo
fsubrl
jno
fbstp
lahf
in
mov
pop
mov
hlt
xchg
lock
call
adc
mov
dec
jb
sti
jge
lcall
stos
outsl
cmp
add
adc
inc
cmp
in
dec
arpl
mov
sbb
mov
dec
sbb
mov
in
xchg
dec
cltd
pop
dec
dec
or
jl
adc
test
and
mov
push
pop
mov
dec
icebp
mov
mov
mov
pop
addl
cltd
mov
orl
lahf
fdivrl
fldt
cmp
and
jecxz
out
loope
and
lods
jbe
xchg
sbb
jns
push
shl
mov
rcr
rcr
cmp
push
dec
and
cmp
pop
mov
or
lods
xchg
xchg
aad
shlb
call
jb
inc
imul
test
adc
mov
std
xor
leave
push
cs
sti
pop
fldt
cs
orb
mov
and
lret
sbb
cmp
xchg
into
in
fistps
mov
les
pop
jns
jge
int
fprem1
adc
shll
cmc
fstl
daa
loop
fs
dec
jmp
xorb
loop
sub
add
push
mov
lea
xor
ljmp
and
sbb
pop
pop
and
jnp
jecxz
daa
test
or
dec
xchg
cmpsb
std
push
adc
push
mov
ror
push
xchg
jl
pushf
mov
mov
mov
sbb
lock
rcrl
push
inc
jp
movb
jb
mov
cmp
mov
in
test
fstpl
mov
out
dec
push
pop
cmp
aas
ds
mov
shll
push
fisttps
dec
sarl
test
mov
jg
leave
into
dec
ljmp
jne
cmp
lahf
mov
pop
pop
push
mov
dec
mov
sar
subl
dec
fimuls
les
shlb
push
jl
mov
gs
xchg
fsubr
sbb
adc
cmp
pop
cmc
adc
fwait
aad
xchg
es
leave
add
cmc
sub
jg
fildl
xor
loop
sahf
and
mov
out
jge
mov
in
push
int
adc
xchg
xor
mov
adc
push
popf
jnp
icebp
cmp
imul
push
cmp
pushf
mov
lds
das
or
enter
push
ja
jno
push
outsl
jle
and
add
xor
jae
lods
imul
adc
out
jo
setno
push
or
stc
dec
push
pop
out
je
lret
cli
dec
push
inc
aad
dec
loop
icebp
push
adc
mov
inc
jnp
pop
and
aam
jl
or
sti
pusha
das
test
cwtl
test
inc
mov
and
mov
out
fiaddl
gs
sbb
fdivr
dec
pop
ja
and
pop
lock
mov
fwait
xor
aaa
xchg
fstps
push
sbb
mov
pop
pop
jns
sub
aad
add
cmp
xchg
cmp
push
push
cmp
sbb
std
sahf
add
mov
test
pop
enter
fcoml
into
adcl
in
jnp
fiadds
push
in
pop
add
push
stc
xchg
fcoml
jne
xchg
jecxz
xor
int3
sahf
jecxz
mov
popf
cmp
mov
dec
mov
in
adc
xchg
inc
bound
iret
sbb
mov
adc
push
jne
bound
dec
rep
xlat
jp
repnz
fsts
xchg
mov
nop
xor
pop
nop
aad
mov
popa
push
and
xor
mov
mov
lahf
movsl
adc
sbb
ret
mov
push
dec
ljmp
dec
adc
mov
mov
push
cli
cmp
adc
inc
xor
out
cs
pusha
js
adc
cmp
leave
adc
push
test
dec
not
add
fiaddl
scas
jl
notl
cmp
in
cmp
or
inc
in
jle
lods
xchg
outsl
sti
inc
fdivs
clc
pop
jae
sahf
and
mov
aas
and
inc
sbb
mov
fnsave
xlat
insb
adc
jecxz
lcall
sub
jge
xor
fs
adc
clc
xchg
fiaddl
mov
xchg
addb
decb
push
in
xlat
fists
push
push
sbb
cs
mov
js
ret
in
and
dec
inc
add
popf
sbb
aad
xchg
pop
adc
inc
sahf
shrl
add
mov
jge
loope
xchg
bound
loope
lcall
xchg
sar
add
or
xor
xorl
stos
mov
sub
ret
popf
pop
jp
movl
test
popl
dec
add
iret
jmp
repz
jo
lahf
loope
cltd
dec
hlt
lcall
adc
add
mov
jb
jns
cli
adc
and
leave
bound
cs
or
xchg
mov
fldcw
jp
cmpsl
mov
jp
fsub
aaa
insl
dec
sbb
xchg
daa
daa
sbb
inc
push
xor
sub
ret
outsl
ja
test
sbb
xchg
call
jp
mov
mov
push
gs
sbb
out
xor
cmp
sub
jge
and
nop
dec
adc
pop
lret
rcrl
xchg
pop
not
scas
push
out
ret
or
xchg
fidivs
fldt
gs
mov
xchg
addr16
jnp
dec
movsb
icebp
addr16
fld1
imul
mov
mov
cmp
pop
sbb
repnz
lcall
cmpsb
xchg
push
fildll
out
or
ds
flds
fsubl
mov
out
fisubl
lea
shlb
inc
jl
scas
dec
push
test
aad
inc
lds
and
mov
cmp
adc
xchg
add
icebp
inc
xchg
call
hlt
movsb
pop
mov
push
dec
nop
ret
jmp
adc
mov
or
or
loopne
movsb
mov
pop
sub
out
in
rcll
outsl
loop
ja
pop
pop
jne
sbb
sbb
push
pop
mov
mov
push
or
or
xlat
add
cmp
movsl
xor
mov
inc
nop
nop
pushaw
gs
je
adc
push
hlt
jl
aaa
mov
into
andb
ret
dec
dec
push
arpl
or
or
icebp
jno
sarl
cld
jne
imul
das
xchg
xor
mov
sti
pop
fmuls
xchg
push
clc
lods
movl
xor
add
repnz
jge
mov
imul
mov
push
xchg
sub
cmpsl
loop
sub
push
fmull
shll
push
repz
rep
or
sub
xchg
or
lods
xchg
pop
mov
in
pop
sbb
frstor
bound
xchg
movsl
jg
dec
inc
cmp
mov
data16
int
shll
cltd
mov
insb
std
cltd
xor
push
ss
sahf
mov
test
lret
mov
sahf
add
int3
xor
cld
fdivs
sub
sub
fidivs
sahf
out
ss
inc
mov
ss
ss
rcll
sub
sbb
sbb
loop
inc
inc
popf
mov
outsb
fidivrs
lock
enter
mov
std
fistpl
test
sysexit
movsb
lods
cmpsl
xchg
stc
lret
xchg
lds
dec
push
lret
gs
jae
sbb
dec
outsb
adc
xor
aad
mov
dec
dec
js
lods
loop
lea
mov
jns
cmpsl
push
repz
movntps
dec
pop
or
or
sbb
jge
pop
pop
loopne
mov
frstor
lods
cmp
pop
mov
out
mov
xchg
jle
cmp
dec
mov
cmpsb
call
push
arpl
cmpsb
insb
rcr
imul
int3
or
jmp
push
cmp
ds
into
fs
pop
sbb
and
pop
out
test
lds
jecxz
dec
repz
xchg
jnp
jb
rcrb
jns
mov
pop
pop
nop
xor
mov
push
inc
loope
fs
ficomps
xchg
fwait
andl
cltd
mov
add
sahf
mov
jge
in
scas
ss
pushf
fidivl
mov
lahf
addr16
test
push
sub
cmp
jg
fisttpl
test
mov
nop
jle
adc
inc
sarl
in
inc
fnstcw
mov
popw
jp
test
imull
test
add
lea
in
inc
mov
mov
jnp
cwtl
mov
stos
adc
ljmp
xor
leave
pop
cmp
mov
jle
stos
sbb
mov
scas
ljmp
cwtl
fs
dec
or
sbb
xchg
mov
add
jbe
or
shrl
dec
shl
jbe
sbb
scas
rclb
jp
jne
cmpb
outsl
jo
pop
repnz
jbe
dec
jnp
pop
push
loopne
sub
mov
mov
pushf
sub
jno
lret
push
iret
mov
movsl
or
cltd
add
dec
xlat
xlat
sub
movsl
xchg
hlt
pushf
pop
cld
lret
ficoml
data16
test
xchg
hlt
into
sbb
movsl
mov
sbb
sbb
xor
jl
mov
test
retw
scas
cltd
add
sti
xchg
mov
lock
push
pop
xchg
xor
dec
adc
imul
popf
inc
icebp
push
cmp
mov
and
shrb
lock
gs
cmp
ret
adc
aam
sub
xchg
lds
sub
test
enter
fnstsw
push
and
test
pushf
cmpsl
mov
dec
dec
pop
daa
int3
cmp
repz
subb
sahf
les
add
xchg
mov
mov
jne
push
mov
rcrl
mov
xor
loope
jne
iret
dec
std
adc
cmp
outsl
scas
loope
adc
or
xchg
int3
cli
xchg
pop
inc
fisttps
inc
loop
stos
ret
mov
lods
movsl
sbb
add
pop
sbb
pop
pop
repz
je
dec
xor
push
inc
push
xchg
dec
cmpsb
lds
xor
inc
pop
pushf
daa
pop
push
ja
xor
adc
mov
test
outsb
fwait
pop
js
out
aad
jns
lds
mov
icebp
jno
sub
test
jecxz
movsl
jno
cwtl
pop
jno,pn
rolb
adc
and
jo
or
inc
ficoml
dec
iret
sub
or
lcall
or
mov
jge
and
or
adc
bound
xor
inc
out
push
inc
sbb
add
xchg
popa
scas
enter
push
and
dec
mov
mov
cmovg
cmp
mov
pop
jecxz
loope
xchg
das
movsl
in
cli
rcl
xchg
pop
adc
mov
inc
insl
mov
leave
cltd
jmp
lahf
or
cmp
mov
push
repz
xor
pop
xchg
push
in
out
nop
xor
repz
dec
cs
out
mov
cmp
pusha
mov
aam
push
inc
add
pop
add
mov
xor
dec
inc
sti
es
pushf
sahf
test
jae
shrd
sub
dec
mov
jne
pop
out
mov
pop
nop
outsb
insb
or
arpl
cltd
cmc
mov
ljmp
push
inc
ret
xchg
mov
repz
sbb
in
loope
dec
stos
out
scas
cmp
adc
sub
push
jg
and
das
jbe
pop
push
and
rclb
scas
mov
add
or
adc
popf
push
push
dec
fldcw
in
cli
mov
jg
shll
icebp
jg
adc
cmp
jp
mov
sub
dec
push
mov
and
mov
mov
insl
mov
xor
cli
pop
lds
push
popf
sbb
stos
arpl
cltd
cmp
push
das
rolb
cmpsl
jmp
cmp
int3
inc
in
ljmp
lret
repz
adc
adc
jbe
dec
and
dec
sub
jmp
and
ljmp
mov
ret
sub
dec
pop
mov
mov
add
xlat
mov
and
sar
fiaddl
jl
sbb
xchg
je
rorl
fcompl
cmpsb
or
cmp
repnz
repz
mov
sub
lcall
fwait
jmp
pop
jno
lret
repnz
rorb
or
es
lods
sti
daa
or
mov
sub
iret
lds
jns
imul
jb
lcall
addr16
mov
jmp
dec
lock
xchg
xchg
sub
lahf
xor
lds
mov
pop
jmp
mov
mov
mov
insl
jmp
test
add
add
xchg
or
fldenv
je
sub
mov
inc
dec
sbb
or
or
aad
daa
stos
ffree
fnsave
jbe
xor
out
das
adc
sub
mov
cmovne
imull
pop
je
add
test
fisttps
mov
imul
xchg
lahf
fsubs
xchg
cwtl
inc
mov
fstl
and
std
jl
bound
inc
call
jecxz
lock
add
mov
in
xchg
cmp
cmp
mov
add
sbb
xchg
mov
sbb
fcomps
xchg
stos
push
inc
push
xor
insl
inc
xchg
xor
lret
push
out
adc
mov
cwtl
out
insl
scas
cmp
push
add
stos
data16
ss
leave
cmpl
js
cli
xchg
pop
pop
int3
adc
out
and
fldl
pop
or
test
bound
stc
push
dec
idiv
mov
rolb
lock
cltd
in
fnstenv
pop
popf
jmp
pop
inc
in
xchg
scas
push
daa
adc
addr16
mov
dec
ret
mov
mov
mov
adc
inc
mov
scas
dec
mov
lcall
lahf
and
ret
jp
add
testb
addr16
pop
out
push
mov
movsb
lds
fcmovu
shlb
movsb
js
movsb
push
jg
fisttps
frstor
fscale
shrl
adcl
bound
pop
xchg
test
xor
mov
imul
cmpsl
sti
mov
int
xor
or
xchg
adc
sub
mov
adc
and
mov
into
adc
add
out
push
int
xchg
cld
movsb
mov
pop
das
push
cmp
fistl
or
adc
push
sbb
mov
jl
scas
rep
inc
loope
aad
fisubs
ds
jle
jl
lret
xlat
mov
repz
fcoms
cli
sub
lds
sub
inc
nop
jp
pushf
enter
push
push
push
int3
loop
test
int
clc
daa
repnz
dec
mov
add
cmpsl
adc
mov
iret
je
adc
aad
leave
mov
mov
pop
test
daa
in
and
mov
or
push
test
std
push
cltd
in
test
pop
inc
pop
call
mov
cmp
push
nop
cmp
fs
push
xchg
enter
inc
pop
push
push
in
aad
push
test
into
xlat
jecxz
push
mov
test
sbb
mov
in
mov
sub
push
cmc
sub
inc
imul
nop
push
pop
clc
inc
or
repz
pop
sbb
test
int
bnd
or
enter
pop
test
mov
lret
shll
or
mov
ret
fs
pop
xor
lds
in
jb
cs
push
call
mov
insl
sbbb
nop
addr16
testb
dec
fstps
fnstcw
aaa
adc
sub
js
cwtl
xor
addr16
push
lock
mov
jnp
ret
sub
lock
ret
lret
mov
lret
ds
sub
xlat
xchg
push
lods
popf
or
sub
das
nop
adc
rcrb
pop
xor
popf
aas
out
and
mov
fcompl
push
aaa
sub
push
test
add
outsl
jb
idivl
mov
jl
es
lock
je
mov
clc
pop
push
pop
fnstenv
test
lds
pushw
dec
in
push
rclb
sub
and
add
xchg
loope
pop
das
clc
sub
hlt
cmpsb
xchg
xchg
das
adc
cmpl
loopne
je
mov
test
repnz
push
mov
cltd
sub
ja
mov
repz
rcrl
mov
gs
xor
repnz
ret
filds
pop
sbb
loope
add
aaa
xchg
pop
out
pop
mov
inc
frstor
or
jg
dec
es
mov
xchg
out
sub
cwtl
xchg
mov
rorb
fnstcw
push
add
and
clc
inc
mov
imul
sbb
hlt
sub
in
sub
pop
dec
shrb
pop
or
aas
mov
cmp
sbb
stos
fldcw
sub
lea
fucomi
rolb
cltd
or
stos
push
jb
lods
jb
std
add
xchg
push
inc
pop
es
sbb
or
or
jecxz
mov
add
in
and
mov
int3
test
dec
mov
fidivrl
fidivrl
or
insb
mov
pop
loopne
mov
and
pushf
shll
dec
sarl
dec
mov
sbb
cmp
cld
xor
push
fldl
lret
je
addr16
xor
adc
fiadds
iret
mov
daa
repz
cmp
jmp
icebp
mov
dec
cmp
sahf
fisttpll
daa
cmp
mov
push
daa
dec
mov
jge
loopne
xor
mov
imul
jge
les
jl
xor
mov
xor
mov
mov
dec
dec
xor
and
ficompl
ficomps
loope
movsb
pop
je
cmpsl
pop
nop
push
dec
insl
add
adc
xchg
sbb
dec
sub
xor
outsb
pop
clc
or
push
in
sahf
pop
or
lahf
out
add
aam
or
mov
xchg
sub
movsl
push
icebp
adc
icebp
jmp
or
bound
rcll
jmp
mov
fiadds
ja
movswl
ds
stos
jmp
daa
repnz
and
dec
ret
adc
fmuls
mov
sbb
aaa
aad
xchg
mov
mov
out
mov
ljmp
rcrl
push
xchg
ljmp
std
xor
xor
pop
sbb
lret
mov
mov
rolb
andl
imul
xchg
out
cmp
sbb
mov
cmp
push
adc
adc
sub
test
leave
dec
dec
inc
loop
and
and
subb
daa
out
cmp
sbb
lock
pop
dec
mov
xchg
jmp
and
scas
ret
ljmp
loope
shl
rol
push
fists
inc
add
push
jle
pop
mov
push
and
stc
adc
faddl
mov
mov
sub
sbb
stos
cmp
or
stos
test
inc
addr16
sub
test
cld
aam
pop
iret
pop
mov
pop
aas
int3
pop
mov
cld
inc
cwtl
push
js
jp
or
pop
or
popa
dec
sbb
es
mov
pop
scas
js
and
push
mov
and
sub
int3
lahf
dec
jl
aas
adc
in
dec
xchg
cs
fistpll
faddl
and
faddl
out
cld
inc
sbb
int
xorl
movsl
or
movsl
das
outsb
loope
jno
data16
mov
int
in
adc
mov
fcompl
rolb
mov
aad
xchg
sub
jb
add
push
sub
lret
add
mov
xor
xchg
xchg
sbb
sub
ja
cmp
ljmp
nop
fdiv
js
pop
jo
dec
xor
push
add
mov
pusha
jecxz
fwait
into
push
push
pop
gs
sbb
lcall
inc
mov
sbb
les
sbb
mov
stos
and
fwait
dec
mov
pop
outsb
out
inc
fadds
ret
iret
jnp
pop
mov
out
test
jp
cld
push
cmp
xchg
repz
pushf
mov
ret
lahf
shl
jo
mov
xlat
mov
popa
push
cmpsl
filds
cmp
adc
out
andb
aad
pop
test
xor
mov
sub
adc
nop
int
mov
inc
mov
mov
dec
shrb
rcl
adc
test
xchg
cmc
ret
ljmp
dec
xchg
mov
in
adc
sub
popa
dec
in
shll
shll
fmulp
push
enter
push
rclb
fnstsw
cmpsl
outsl
icebp
pop
sbb
popa
jnp
xlat
pop
scas
push
xchg
lcall
jl
cltd
xchg
ljmp
push
sahf
jle
dec
pop
ljmp
aad
mov
mov
fldcw
mov
xchg
jae
or
jp
sbb
les
mov
dec
sub
lods
lahf
cs
add
and
mov
scas
sub
outsb
fcmovu
loopne
pop
into
jno
in
test
mov
pop
mov
and
xlat
sbb
aad
out
mov
push
je
inc
fs
xchg
mov
std
mov
and
idivl
jo
pop
outsl
lea
and
stos
ljmp
out
jb
icebp
sbb
push
insb
out
imul
pop
pop
sub
dec
mov
imul
sbb
mov
arpl
fsts
inc
adc
jecxz
xchg
cli
and
xchg
cmp
xor
inc
xchg
ds
and
clc
and
shll
mov
mov
imul
mov
mov
int
inc
sbb
sub
cld
cmc
sub
lock
mov
mov
mov
int3
sbb
into
std
jb
negb
outsb
loop
xchg
addr16
add
movsl
mov
jnp
lret
cmp
sub
aas
jae
lret
cmp
outsb
loop
dec
dec
xor
cmp
adc
xor
push
jae
add
pop
or
xchg
js
pop
pop
ljmp
pop
push
jle
pusha
xchg
out
jno
jecxz
lret
adc
scas
sti
ss
lds
fstpl
dec
push
stos
test
sub
jge
int
out
popa
mov
cli
test
call
push
sub
jp
dec
insl
shrl
leave
les
lahf
clc
jnp
jae
inc
inc
jb
aas
sbb
mov
adc
insb
jecxz
lret
push
imul
sbb
fadd
push
mov
sbb
xchg
sub
inc
lcall
adc
dec
adc
and
push
in
cltd
jle
push
inc
xor
lret
xchg
outsl
adc
out
es
arpl
dec
jno
aas
xor
mov
loop
data16
je
inc
test
out
pop
cmp
sbb
push
movsb
xchg
ja
add
push
mov
sub
jne
movsl
out
mov
ja
gs
mov
sub
movsl
adc
cmpsb
repnz
xchg
mov
out
add
push
jg
mov
mov
sbb
pushf
mov
cltd
lahf
push
mov
dec
dec
cmp
dec
fldenv
mov
test
loopne,pt
mov
popf
aam
and
cmpsb
movb
sbb
movl
pusha
in
ja
xchg
imul
ret
xchg
insb
lcall
cmp
or
sub
and
fs
rcl
push
shll
fwait
dec
and
adc
in
inc
xchg
je
push
mov
adc
mov
popf
mov
push
bnd
jmp
outsb
mov
mov
cmp
das
cmp
scas
dec
jno
leave
xchg
sar
mov
out
pop
mov
adc
imul
cmp
shrb
inc
xor
cmp
inc
jg
lcall
add
dec
shlb
adc
cmp
lds
pushf
pop
jmp
lahf
test
test
outsb
add
inc
sahf
jle
xlat
inc
and
fildl
or
xorl
push
jb
insb
pop
jle
dec
inc
mov
inc
cmp
sbb
and
es
loop
sarl
dec
push
pop
int3
or
pusha
outsl
imul
cltd
insl
ljmp
cs
jle
jle
push
add
cmp
out
or
incl
jmp
ss
and
inc
jge
repnz
add
mov
xchg
cmp
hlt
mov
stos
jle
sti
mov
int3
push
adc
pop
jecxz
stc
pop
sub
pushf
sub
mov
test
call
lldt
dec
lcall
pop
push
add
test
imul
pop
adc
sub
jmp
sarb
dec
pop
gs
fwait
xlat
data16
je
stos
bound
pop
rcrl
rcl
cmp
dec
pop
popa
shrl
adc
xchg
subl
cwtl
cs
pop
aas
leave
or
shl
in
mov
xchg
ljmp
popf
cs
cmpsb
idivl
cli
nop
push
xchg
imul
jbe
cwtl
dec
test
mov
jae
or
test
inc
jbe
test
and
mov
rcr
jmp
and
shrb
push
push
jbe
or
push
shlb
sub
stos
mov
push
pusha
out
xchg
jmp
add
leave
imul
pop
xor
dec
icebp
jnp
xor
pop
addr16
jae
sarl
imul
sahf
call
sbb
pop
test
iret
xor
mov
fsubrs
arpl
aas
fdivp
mov
stc
dec
push
sahf
cmpb
test
fdivp
loop
ds
jb
sahf
mov
mov
mov
ret
jno
outsb
aad
rclb
std
mov
jl
xor
xor
xor
pop
vmaxss
mov
scas
add
jno
mov
dec
or
roll
mov
jp
in
or
inc
adc
mov
std
test
add
in
or
int3
jae
mov
imul
dec
add
jmp
addb
stos
xchg
cmp
sub
push
inc
sahf
push
movsl
ja
inc
jge
pop
test
mov
in
mov
sub
cli
daa
xchg
stc
xlat
push
pop
and
bnd
jnp
inc
aam
add
mov
in
testb
in
jmp
fwait
das
out
pusha
mov
pushf
xor
add
int
add
popf
jne
mov
pop
add
push
add
xchg
mov
push
movsl
pop
push
shll
mov
push
pop
xor
jmp
dec
fs
mov
sub
adcl
pop
lods
push
and
jp
xchg
xchg
dec
sbb
dec
dec
imul
dec
jmp
mov
sti
leave
mov
sarb
cld
and
xor
rolb
mov
jle
shr
mov
lock
pop
stc
es
push
enter
iret
dec
pop
in
inc
pop
mov
enter
ja
iret
cmp
adc
add
icebp
sub
xchg
es
xchg
xorb
mov
mov
mov
sub
aad
fs
jo
scas
pop
int
dec
dec
fisttpll
shlb
jae
adc
test
lcall
sub
divb
aas
push
test
pop
arpl
sti
push
inc
cmp
je
xor
fistpl
mov
dec
sbb
rolb
fstl
movl
jbe
pop
daa
loop
push
or
ret
outsb
xchg
adc
push
push
outsl
in
jmp
rorl
addr16
jg
mov
test
push
and
sub
leave
mov
fcmovb
inc
stc
inc
push
and
inc
cmpsl
ljmp
pusha
mov
enter
imul
and
bound
sbb
pop
ljmp
mov
or
stos
mov
mov
cmp
into
data16
leave
and
jno
pop
stos
aaa
shlb
ss
subl
mov
scas
das
movsl
jne
cs
outsb
in
rorb
dec
xlat
mov
push
mov
sub
das
adc
adc
daa
sti
xchg
pop
fadds
repz
bswap
xor
lods
roll
mov
jge
roll
data16
scas
jb
ds
sub
jne
or
scas
push
dec
mov
jae
loope
fdivr
or
sbb
xchg
xorl
push
mov
adc
lods
and
repz
dec
add
scas
dec
mov
push
andl
lods
mov
stos
sbb
repnz
inc
lock
or
test
mov
pop
ret
aam
mov
imul
sub
aam
jge
add
icebp
loope
in
nop
xchg
push
inc
mov
inc
insb
xchg
inc
jb
mov
rclb
mov
aas
inc
adc
rcl
xchg
xor
xchg
xlat
mov
aad
sbb
sub
push
dec
fbstp
xchg
pop
loopne
push
call
fwait
push
ds
loopne
xor
aam
test
mov
fucomi
ficoms
push
leave
mov
sub
xor
cld
inc
fdiv
scas
mov
fs
loop
push
enter
xor
sets
fs
test
fidivrs
or
jecxz
dec
pop
mov
fwait
pop
inc
xor
xor
out
test
ss
cmp
fldcw
bnd
shll
sub
jno
in
lds
sub
jo
stos
cwtl
xchg
mov
std
xor
test
fwait
fwait
cltd
bound
cli
out
pop
shlb
nop
addr16
inc
push
push
fwait
xor
xlat
sbb
lock
adc
or
inc
fsubp
jmp
test
or
in
adc
je
adc
in
jno
jb
ljmp
sarb
xor
scas
xchg
add
cmp
hlt
fnstcw
stos
outsl
sub
mov
jmp
scas
stos
mov
pop
dec
dec
adc
fnstcw
into
outsb
and
mov
aam
in
xchg
xchg
fs
call
cmc
pushf
fisubs
bnd
xchg
jl
jle
insl
push
ret
cmp
jge
std
pop
add
mov
xchg
add
add
ljmp
xchg
cld
xchg
adc
pushf
inc
cmpsl
add
pop
sub
outsb
bound
in
mov
mov
dec
jl
jmp
inc
insl
or
mov
push
aam
adc
jp
cmp
negb
mov
mov
aaa
imul
lods
xchg
stos
bound
mov
push
push
lret
push
or
test
rorb
inc
dec
scas
add
fisubrs
enter
jmp
iret
into
inc
shl
sbbb
lcall
and
pushf
pop
jno
dec
dec
mov
sbb
lods
enter
gs
jmp
jecxz
jle
or
sbb
sbb
sub
inc
shrb
adc
cltd
jl
mov
xchg
not
cs
lods
sbbl
insl
add
lret
imulb
pop
clc
pop
jg
outsb
lods
add
sti
dec
xor
stc
cltd
stc
mov
negl
jp
loop
repz
inc
xchg
add
loope
repnz
jmp
jne
insl
std
scas
mov
adc
jmp
jg
mov
stos
mov
cmc
push
scas
or
lret
sub
mov
lret
addr16
fdivrp
inc
mov
xor
mov
call
es
pop
push
cmp
dec
lcall
test
shrl
pop
jmp
call
push
jg
mov
ja
hlt
ss
in
pop
int3
js
push
push
sub
les
int
mov
mov
push
test
ljmp
ljmp
stos
ljmp
push
movsb
fidivs
dec
lahf
sbb
inc
mov
lea
sbb
sbb
movl
xchg
adc
xchg
orl
cli
sub
aam
lret
repnz
sbb
adc
inc
mov
push
dec
lods
xchg
repnz
shll
mov
xchg
lds
jle
sbb
xchg
adc
pop
add
ret
jnp
aam
cmp
xor
mov
loope
mov
int
shlb
pop
cmpsb
jae
or
popa
enter
lahf
orb
xchg
lea
adc
pushf
lock
outsb
sahf
in
pop
jno
cld
xor
mov
fisttpll
shr
outsl
movb
rclb
loopne
aad
cmpsl
imul
scas
jl
rorl
decl
xor
lahf
lods
cwtl
out
hlt
pop
push
pop
test
mov
inc
mov
cmc
add
dec
mov
pop
or
jne
in
ficoml
cld
cmp
or
cmpsl
add
imul
xchg
cmc
sbb
mov
aas
into
pop
imul
retw
imul
inc
add
push
add
insl
jle
sub
andb
mov
out
shrb
pop
mulb
mov
imul
movsb
mov
dec
mov
loop
jo
jp
push
add
xchg
out
jbe
scas
mov
add
xor
lea
mov
sbb
stc
jbe
push
mov
or
fnstsw
or
addr16
jo
cmp
pop
subb
dec
sbb
dec
cmpsl
add
out
gs
ret
mov
sub
sbbb
adc
and
inc
cmp
pop
xor
mov
pop
inc
ja
insb
jecxz
xor
push
inc
jbe,pt
lret
repz
lods
mov
insb
in
lods
addl
mov
or
push
xchg
outsb
cld
cmp
sub
lret
pushf
inc
adc
add
fcomps
add
adc
and
mov
cld
ret
ret
decb
and
int3
mov
std
or
mov
jno
and
mov
push
int
scas
ds
jns
sub
or
mov
orl
xchg
repz
pop
add
add
iret
cmp
xchg
in
popf
pop
test
sbb
sti
add
pop
add
cmp
ljmp
xchg
ficoms
ss
in
xor
mov
pop
idiv
je
ret
mov
jno
rclb
and
jecxz
fwait
xchg
roll
sbb
bound
add
stos
popf
imul
out
pushf
shlb
sahf
sbb
and
push
data16
cs
popa
pop
inc
pop
cmp
jb
mov
cld
push
pop
loopne
ret
sbb
add
and
stos
into
mov
push
mov
add
mov
mov
cwtl
data16
sub
cli
ret
loop,pn
lea
mov
and
cmc
mov
mov
push
push
call
bound
leave
xchg
jne
xor
xchg
ss
cmp
fiaddl
adc
push
mov
movsb
fsubs
pop
ja
rclb
pop
leave
sub
mov
mov
jne
repz
stos
sbbl
pop
in
jge
add
cmp
cmp
lret
sbb
repnz
sub
icebp
xchg
cwtl
sbbb
mov
inc
mov
rol
pushf
lock
add
lret
dec
sbb
mov
loop
leave
push
test
cmp
out
leave
popf
xor
cmp
clc
mov
inc
xor
popa
enter
mov
je
ret
dec
test
in
inc
dec
cmpsb
shlb
sbb
ja
rclb
decl
mov
arpl
js
pop
test
push
int
cwtl
mov
push
call
stc
dec
inc
xor
out
stos
mov
notb
lcall
movsb
test
xor
cmp
ja
imul
insb
test
push
lret
aas
mov
xor
inc
cmp
xchg
xor
mov
pop
adc
mov
aaa
mov
mov
dec
push
inc
dec
dec
jp
push
jl
xchg
test
pop
fsubrs
popa
mov
xchg
sti
and
mov
pop
arpl
pop
mov
xlat
daa
mov
push
push
pop
cld
jne
and
aam
jecxz
cld
fdivr
dec
popf
push
push
pusha
add
insb
test
and
fdivl
add
dec
jae
int3
out
dec
rorb
outsb
shll
cld
cli
icebp
and
adc
sbb
pop
sub
adc
push
sub
xchg
xchg
jecxz
xchg
outsb
push
mov
adc
mov
add
loopne
cmp
lea
scas
in
movsb
xor
sbb
jno
mov
or
dec
js
fidivl
mov
pop
push
xor
divl
xchg
pushf
jp
call
dec
inc
notl
jle
shl
scas
jo
jp
das
xor
cs
sub
cmc
adc
dec
fmuls
hlt
shlb
mov
movsl
aas
pop
shlb
push
or
pushf
ret
inc
pop
push
jo
icebp
imull
cmp
loope
jbe
push
or
cld
orb
add
or
push
lea
loop
inc
stos
xor
outsb
sub
and
cmpsb
mov
sub
dec
stc
movsb
lret
das
mov
sbb
loop
divl
pmulhuw
jae
xchg
jns
cwtl
and
mov
adc
xchg
lea
mov
stc
stc
addr16
cld
pop
jnp
sbb
ljmp
add
fimuls
or
add
std
popa
dec
xchg
sbb
cmpsb
mov
aam
jae
mov
mov
bound
or
add
ss
inc
mov
sub
and
sbb
incb
adc
push
lods
cmp
jg
push
daa
mov
push
xor
out
dec
fs
inc
mov
ljmp
sub
ljmp
clc
out
inc
sbb
add
in
jo
test
je
inc
pop
imul
sbb
and
repnz
das
mov
jae
xchg
ficomps
push
xor
and
daa
mov
imul
mov
add
push
dec
int
stos
xor
nop
or
xchg
mov
xor
mov
and
fsubl
mov
dec
js
mov
jle
mov
push
jle
cmc
mov
in
es
push
sbb
xchg
repnz
ja
add
in
mov
jg
fwait
fs
fists
ljmp
and
rclb
test
enter
icebp
xlat
cmp
cmp
push
cmpsb
mov
addr16
pop
in
loopne
jne
or
pop
push
es
or
or
scas
push
test
xor
mov
mov
mov
popa
shrl
jnp
sub
iret
sbb
in
ljmp
pop
fsubrp
dec
inc
inc
fldcw
adc
lret
pop
xchg
inc
loope
lret
jle
js
arpl
fstpt
sahf
xor
xor
xor
or
les
loopw
dec
push
jbe
mov
fstps
shrb
push
xor
icebp
sbb
out
mov
adc
pop
lret
cmp
aad
mul
xchg
enter
outsb
shr
sbb
adc
and
es
notl
out
imul
push
imul
sub
xor
adc
outsl
int
xchg
jmp
stos
add
test
fucom
or
dec
lret
aam
shll
mov
jge
sub
in
mov
imull
nop
dec
lds
imul
cmp
cltd
stc
popa
jnp
std
jl
mov
addr16
xor
dec
pop
int
cltd
cmc
push
mov
mov
or
fnstenv
mov
pop
jge
mov
popa
aaa
push
sahf
mov
adc
clc
or
cmpsb
sub
mov
push
sti
jg
xor
push
dec
xor
mov
cmp
sbb
pop
mov
pop
daa
into
dec
adc
addr16
jbe
xchg
inc
dec
push
xchg
push
les
in
xor
xor
mov
pop
lods
push
push
inc
iret
outsl
add
inc
cmpsl
push
andb
mov
ret
ds
push
fimuls
cltd
push
push
popa
incb
mov
dec
xchg
fldpi
insl
mov
mov
lahf
sti
into
loopne
add
inc
addr16
rclb
pop
jbe
mov
cld
and
cmc
cmpsl
js
push
xor
and
push
sbb
adc
addr16
sbb
call
jge
cltd
cmp
push
sub
stos
mov
dec
outsb
push
aas
mov
mov
inc
xchg
push
cmpsb
cmpsl
sbb
mov
sbb
pushl
fucomi
cmp
mov
loopne
bound
inc
xchg
syscall
push
adc
scas
scas
mov
cli
sub
test
cs
iret
jg
pop
xor
lods
cmpsb
mov
jno
xchg
adc
mov
xlat
loop
inc
xchg
scas
mov
iret
cwtl
or
inc
cmpsl
lods
sti
adc
add
push
jl
add
sub
imul
or
cmp
loop
sub
mov
or
and
bound
es
jge
and
rcrl
stc
xchg
mov
mov
jmp
jno
mov
add
mov
and
jp
imul
jg
pop
bnd
repnz
pop
enter
push
inc
pushf
inc
jle
int
xor
xchg
dec
adc
lret
push
in
outsb
outsb
lahf
lods
mov
pushf
adcb
xchg
mov
push
push
movl
jmp
mov
cwtl
pop
or
stc
mov
mov
mov
in
fsubs
ret
out
rcr
push
jnp
and
jecxz
dec
push
out
leave
mov
jecxz
sbb
xchg
std
dec
add
xor
pop
adc
es
mov
and
or
dec
in
mov
inc
std
push
nop
jne
ja
jns
jns
jge
popa
test
mov
dec
xchg
pop
mov
cmp
cmp
cmp
fmuls
mov
push
pop
pop
cwtl
pop
pop
adc
push
and
mov
fstpt
in
xchg
add
cmp
mov
std
jo
stos
adc
test
mov
pop
jne
add
mov
rcrb
xchg
jmp
inc
add
cmp
pop
xchg
push
mov
in
pop
add
cwtl
xchg
push
dec
sbb
push
pop
ret
sbb
bound
imul
loop
xchg
movb
add
inc
xchg
into
adc
ss
mov
or
push
jno
adc
jg
and
xor
sub
jl
ja
mov
jg
in
ss
or
outsb
mov
lcall
repnz
pushf
adc
mov
pop
jge
adc
cmpsl
add
lods
psllq
shll
outsb
jo
lds
ret
fidivrs
mov
imulb
mov
stc
scas
pusha
jae
inc
ss
or
arpl
lods
add
push
adc
icebp
orb
jge
add
aad
sub
aad
js
cmp
pop
lahf
fs
xchg
add
je
mov
ret
add
mov
jbe
fs
data16
outsl
cs
push
mov
cmp
mov
scas
popa
sbb
loopne
mov
imul
cmp
sub
lcall
mov
push
pop
in
fwait
and
mov
mov
mov
or
xchg
sub
push
sbb
testb
lds
daa
insl
or
add
pop
psrlq
cmp
lods
cmp
xor
dec
test
clc
lcall
mov
loopne
jbe
fcom
lods
test
pop
dec
inc
pop
jae
ret
mov
and
insl
mov
lahf
lahf
and
fisttpll
dec
in
ret
dec
lds
xor
mov
and
mov
sbb
in
xor
xor
js
int3
insl
ffreep
lret
fisubs
loope
add
add
sbb
insb
sbb
daa
arpl
sbb
jnp
scas
pop
mov
pop
sar
fwait
in
dec
jl
mov
in
je
dec
jle
mov
sti
stc
lock
insl
xchg
dec
sub
inc
das
fwait
int
dec
dec
and
push
pop
xchg
shrl
fcomps
outsb
adc
and
push
or
mov
add
sub
sub
jg
xor
ficoms
pop
or
or
fs
xchg
fucom
add
mov
stos
push
add
dec
cmpsl
xchg
mov
mull
scas
pop
mov
repnz
mov
rolb
adc
int
mov
fs
jbe
xor
push
nop
mov
movsb
add
mov
lahf
xchg
jle
inc
into
mov
rolb
aam
movsl
pushf
sub
lcall
test
push
cmp
loope
rclb
push
cmpsb
jno
test
pushf
cltd
iret
insl
idiv
xor
pop
xor
inc
mov
cmp
pop
rcl
ss
lds
rclb
and
shlb
cmp
add
adc
adc
rcr
sub
out
jmp
xchg
mov
enter
add
sarb
xor
out
xchg
lret
popa
dec
xor
or
jno,pn
inc
movsl
sahf
mov
jecxz
jg
shrl
and
loope
clc
loope
out
push
cwtl
add
int
mov
movb
mov
add
push
scas
sub
jne
fisttps
imul
push
das
mov
das
sbb
inc
or
mov
pop
aas
lahf
bound
rclb
fldt
xchg
stos
adc
ds
stc
jle
pop
cli
push
inc
fs
shl
jmp
popf
jbe
pop
cmpsb
push
pop
neg
mov
cmp
mov
add
push
inc
cwtl
pop
mov
imul
adc
xor
lahf
add
mov
lods
sbb
jo
jae
mov
ucomiss
pop
cmp
arpl
cwtl
repnz
pop
ljmp
dec
push
in
fdivl
bound
pop
or
lock
jmp
shlb
push
push
mov
xor
push
popf
xchg
sub
shll
sbb
imul
pop
bnd
imul
add
fists
into
pop
imul
mov
push
clc
les
xchg
pop
lret
jne
out
cwtl
mov
inc
movsb
inc
je
test
xchg
clc
adc
push
mov
jmp
push
ret
mov
mov
insb
add
hlt
push
scas
sub
or
or
dec
xor
sbb
clc
lea
and
xchg
stos
cmpl
xchg
adc
repnz
add
cmp
out
or
iret
pop
jg
loopne
mov
inc
aaa
into
inc
or
aam
insl
xchg
push
cmp
addr16
shlb
bound
inc
cmp
jne,pn
push
jae
aaa
ss
iret
mov
rcrb
inc
into
cmp
push
daa
pop
add
push
mov
mov
shrb
loopne
mov
xchg
cmp
sub
mov
dec
jns
add
mov
push
lock
mulb
ja
adc
or
cmp
arpl
mov
push
sub
imul
and
sbb
ljmp
add
sbb
jae
xchg
push
imul
dec
mov
xchg
xchg
into
sbb
mov
ss
mov
dec
loopne
jno
stos
mov
aam
incb
mov
ja
jecxz
pop
mov
cli
and
and
push
sbb
inc
ja
xchg
mov
dec
mov
adc
shlb
imul
mov
mov
cmp
cmp
jge
add
pop
nop
sbb
mov
xlat
push
sbb
pop
xlat
mov
aad
adc
mov
lea
int
or
mov
add
xorb
xor
pop
sarb
adc
clc
adc
mov
setno
xchg
adc
enter
xchg
sbb
sti
mov
fdivs
cmpsb
mov
stos
in
pop
insl
subb
in
jne
test
icebp
call
push
pop
pop
daa
push
inc
test
pushf
js
int
inc
mov
add
cmp
push
dec
pop
aad
pop
push
pusha
ret
popa
mov
mov
xor
bound
push
and
jmp
xor
movb
scas
cmp
sub
repnz
stos
or
stos
in
pusha
fildl
sbb
testl
mov
pop
fadd
icebp
int
mov
idivl
cwtl
scas
mov
fwait
adc
jge
xchg
push
push
sbb
jge
cmp
push
jl
pusha
bound
xlat
mov
push
int3
sub
or
xchg
scas
cli
shlb
loop
mov
ds
sbb
icebp
mov
jae
push
or
inc
mov
enter
and
stos
into
imulb
pusha
inc
ss
or
ljmp
jb
dec
mov
test
in
call
outsl
adc
sub
scas
xor
adc
xor
int3
lds
or
mov
or
sub
rcl
mov
mov
mov
cmc
mov
or
inc
fsubl
lahf
sti
pop
mov
loope
ret
mov
out
cmp
dec
hlt
fs
inc
fistpll
push
inc
lock
out
pusha
popf
or
cld
ja
or
or
out
testb
fisubl
dec
xlat
mov
jbe
dec
sbb
sub
jnp
ss
fnstsw
repz
inc
test
add
push
dec
fldcw
sbb
aas
sbb
pop
sbbb
pop
scas
dec
inc
insl
out
sbb
cmp
das
jp
fsubl
sti
ficoms
iret
clc
cld
or
pop
adc
cltd
sub
push
pop
jmp
pop
bound
pop
mov
mov
jmp
mov
mov
sub
ret
jmp
and
mov
add
bound
jg
mov
and
ret
repz
mov
loope
jnp
ret
test
jb
cmp
jno
sbb
mov
lods
arpl
movl
ret
lret
mov
dec
scas
jecxz
loopne
lock
sub
adc
popa
fldcw
sbb
cli
insl
lods
mov
or
jp
popa
pusha
or
movsl
and
addr16
jecxz
aaa
xor
sbb
es
repz
ljmp
scas
jbe
or
lret
sti
mov
mov
adc
and
ja
call
rcrl
cmp
or
aam
push
adc
or
pushf
inc
xchg
faddl
mov
adcl
test
ret
pop
push
and
outsl
xor
lods
cs
mov
pop
dec
sbb
mov
pop
add
mov
sete
xchg
mov
clc
and
cld
imul
and
dec
push
popf
mov
movsb
sbb
data16
into
add
xlat
mov
add
lahf
push
dec
ret
inc
fst
jbe
sbb
mov
add
sahf
outsb
dec
jg
sti
in
push
add
pop
mov
or
adc
sbb
insb
pop
xchg
adc
inc
addl
sub
sub
mov
shlb
gs
adcl
push
in
stos
nop
lahf
subb
push
jle
inc
jp
sub
daa
jmp
popa
ror
pop
lahf
in
adc
sub
mov
inc
pop
adc
xchg
xchg
push
rorl
adc
mov
jo
sub
dec
adc
or
pushf
test
mov
xchg
cmpsl
lcall
cli
jnp
loop
movsl
scas
jmp
leave
pop
sub
stos
jle
mov
out
jp
lock
lods
xor
pop
aam
xor
pop
mov
icebp
jno
out
mov
push
push
out
aad
jno
push
mov
jl
add
and
xchg
and
insb
mov
inc
xchg
stc
call
loopne
adc
cmp
je
movl
mov
fmuls
repz
xor
mov
sbb
add
loope
sbb
push
lret
mov
loopne
in
int3
outsb
repz
jno
inc
or
push
xor
and
add
movsl
test
loop
xorb
add
fldenv
sub
push
arpl
repz
or
fs
lret
mov
jb
adc
jge
push
pushw
fistps
rol
hlt
mov
jge
sbb
push
cmp
xchg
jmp
mov
fdivrp
push
lods
sub
inc
xor
mov
aad
dec
mov
rorl
movsb
jns
or
adc
lahf
or
lcall
enter
aas
pop
add
fildll
inc
imul
shrb
sub
xchg
clc
pop
mov
std
mov
in
pop
mov
xor
inc
mov
or
push
inc
push
imul
jno
pop
mov
add
pop
mov
pusha
mov
inc
mov
sbbl
outsb
test
stc
cmp
cmp
in
test
xchg
sbb
testb
mov
pop
test
xchg
cltd
lea
dec
add
dec
arpl
mov
dec
in
mov
repz
loope
cmp
test
mov
dec
push
xor
xor
mov
mov
pop
jbe
loope
leave
int
icebp
int3
aad
ret
or
imul
psrlw
fistpl
jne
sub
int3
and
pop
sbb
aad
popf
mov
or
dec
jl
and
pop
popa
pop
mov
push
iret
repnz
xor
sbb
pop
pop
pop
sbb
loop
sbb
jecxz
das
adc
dec
xor
dec
mov
inc
mov
ds
fimull
and
mov
and
pop
and
lds
sub
push
xor
shrl
dec
mov
mov
mov
or
addl
inc
mov
call
jae
aad
lret
adc
test
xchg
mov
jle
out
and
xor
or
hlt
push
mov
add
push
and
push
in
cmp
jecxz
insl
repnz
cmp
mov
cli
push
jl
jae
add
mov
lds
jp
pop
popf
and
aam
cmp
xchg
data16
cmp
adc
inc
push
stos
push
roll
fs
pop
lods
xor
sub
aam
fistl
dec
pop
mov
xor
mov
mull
sub
push
icebp
jo
and
pushf
scas
add
roll
push
and
sbb
lds
mov
push
fs
mov
push
fdivrs
jb
mov
and
jno
popf
dec
xor
call
js
pop
lret
scas
test
adc
pop
loope
xor
adc
dec
ret
int
inc
inc
sbb
sub
xor
mov
es
das
scas
lods
dec
cmp
adc
cmp
dec
addr16
push
inc
lds
mov
adc
xor
mov
sarl
fcoms
or
adc
or
fidivrs
mov
dec
inc
outsl
popa
mov
mov
push
xor
push
sbb
mov
push
das
cli
sbb
jo
lahf
aam
adc
xchg
inc
xabort
adc
xor
xor
nop
nop
push
add
lret
divb
push
imul
fnstsw
call
cmp
stc
pop
ret
xor
pop
mov
push
push
out
stc
sbb
insl
outsb
mov
xchg
add
push
fdivr
adc
leave
std
aam
decb
adc
jl
push
pusha
inc
in
fists
scas
inc
shlb
pop
xchg
inc
xor
xor
outsl
sahf
and
scas
fstpl
dec
dec
sub
cmp
or
lea
mov
int
ljmp
aas
mov
mov
and
xlat
incb
pop
or
repz
iret
std
sbb
scas
gs
mov
sub
sbb
outsl
jge
fsubrl
mov
or
loop
mov
and
push
and
sti
inc
dec
pop
inc
lahf
shl
in
jo
mov
sbb
add
mov
inc
push
adc
or
gs
aam
jl
mov
fidivrs
lods
xchg
sbb
and
xchg
aas
mov
cmc
dec
mov
popa
mov
push
push
dec
sub
push
xchg
lahf
mov
jl
push
sbb
dec
inc
in
jae
test
or
sahf
popa
sbb
xor
pop
fidivrs
sahf
xor
and
fistpl
outsl
add
pop
incb
jnp
fwait
xor
sbb
aad
lds
adc
icebp
push
in
pop
sub
mov
fldl
mov
xchg
mov
insl
out
mov
mov
jae
sub
fwait
std
bound
notb
test
nop
dec
out
push
out
into
jo
sub
mov
xchg
jl
push
push
popl
adc
push
sarb
ds
push
push
mov
mov
sbb
gs
mov
ds
push
les
sbb
cltd
adc
dec
into
xor
inc
in
pop
cld
or
jb
test
add
jl
in
add
push
add
in
repnz
call
push
jmp
pusha
mov
xor
push
lret
sbbl
push
pop
idivb
dec
arpl
adc
lahf
xchg
mov
or
cmp
sub
inc
push
add
push
roll
lds
je
lods
imul
mov
imul
sbb
mov
sub
lock
test
xor
arpl
add
dec
js
aam
and
loopne
dec
call
sbb
bound
sbb
dec
mov
inc
adc
mov
sti
shl
jg
fidivrl
jns
jbe
sub
add
mov
ljmp
sub
scas
add
icebp
inc
or
add
adc
jecxz
cmp
xchg
jbe
imul
cld
mov
icebp
mov
jg
mov
jb
jne
or
sub
test
mov
outsl
mov
test
outsl
mov
and
js
lahf
mov
shr
fucomip
dec
mov
push
push
test
jecxz
add
push
or
mov
inc
pusha
xchg
jnp
jns
add
aad
int
pop
xchg
push
loope
rorl
dec
subl
ljmp
jg
int3
and
hlt
cmp
mov
rorb
stos
cmp
jb
pop
cld
pop
lods
pop
or
cmp
js
add
dec
ljmpw
push
mov
mov
mov
push
pop
scas
xor
lock
adc
lret
and
imul
stos
mov
inc
mov
adcb
nop
adc
js
int3
pop
cltd
in
cltd
lea
jg
mov
nop
pop
push
sub
scas
xor
add
sub
adc
iret
inc
fidivrl
imulb
aam
lds
test
mov
push
push
push
sbb
fdivp
lahf
mov
pop
mov
dec
xor
mov
test
cltd
lock
out
ficoml
push
inc
aaa
push
gs
dec
xchg
inc
mov
cmp
mov
dec
loop
add
addb
push
sub
pushf
in
add
pop
cmp
xchg
das
sub
scas
push
pop
in
int
dec
fxtract
xor
jne
sub
cltd
jge
int3
insl
in
adc
pushf
cmp
xchg
rclb
push
sbb
out
inc
je
into
test
xchg
mov
enter
xor
clc
shlb
jno
mov
inc
test
add
loopne
insl
test
fsubrs
outsl
xchg
adc
out
cli
mov
ret
adc
data16
adc
xlat
xor
sti
jb
xchg
mov
cmp
enter
ja
pop
lock
sub
in
sub
aam
out
push
cmp
sahf
jge
imul
xlat
sahf
ss
mov
addr16
je
leave
xor
jae
mov
mov
mov
lret
inc
pop
adc
mov
test
xchg
or
push
jns
mov
and
cmp
cmp
nop
cmpb
sbb
inc
stc
add
adc
xlat
sbb
adc
test
in
mov
mov
aad
jp
xchg
mov
cmp
add
pop
dec
xchg
js
inc
sub
cmp
jge
push
mov
pop
pop
adc
rol
xor
lea
jns
cmpsl
mov
sbb
or
push
fbstp
leave
cmp
je
and
js
cld
push
xchg
jbe,pt
inc
das
jecxz
inc
sbb
lock
xchg
fisttps
xor
pop
mov
and
nop
imul
and
and
cld
repz
clc
int3
dec
jnp
leave
in
push
imul
gs
pop
ret
cmp
jns
mov
loope
xchg
shr
xchg
aam
out
mov
sbb
es
mov
push
push
mov
mov
inc
mov
jo
cmp
lcall
data16
xchg
lods
movsb
inc
push
mov
push
mov
pop
and
jno
jb
test
mov
fildl
aad
cli
in
movsl
imul
stos
call
aad
pushf
out
dec
push
lods
lahf
lock
insb
cmp
lahf
scas
jmp
call
cmp
psrad
add
gs
push
jb
cmp
xchg
xchg
push
fistpll
add
pop
mov
mov
add
mov
bound
fisubrl
add
fdivr
ret
ljmp
leave
sub
add
inc
dec
clc
sub
roll
dec
xor
stc
fbld
xor
int
pop
pop
cli
stos
stc
inc
dec
fadd
arpl
or
sti
lds
xor
call
mov
cld
out
inc
ss
insl
cmp
pusha
or
and
jmp
push
mov
notb
out
les
xor
ljmp
call
sbb
clc
inc
push
pop
insl
in
sarl
sbb
add
xor
jmp
inc
mov
loopne
pop
inc
dec
jb
mov
mov
repnz
jg
push
dec
mov
shll
int3
mov
ret
mov
sbb
bound
xchg
jo
sub
pop
dec
xor
mov
sarb
mov
shlb
mov
inc
mov
out
incb
xor
dec
es
xor
sbb
shlb
cld
add
jmp
pop
mov
hlt
scas
adc
aas
mov
and
add
pop
in
pop
push
stos
fld
cmpsb
jmp
imul
jecxz
cmpsl
inc
or
bound
iret
mov
or
adc
add
addr16
sahf
xchg
shrb
cwtl
enter
cmp
inc
cmp
inc
pop
cltd
mov
pusha
sub
mov
or
sbb
popa
mov
test
enter
ret
cmp
and
dec
in
inc
push
dec
fidivs
nop
mov
ret
cwtl
iret
push
cld
pop
xor
fdivr
in
cmp
mov
mov
movsb
cld
ret
pushf
andl
ljmp
sub
inc
add
addl
xchg
and
stos
lahf
ret
push
outsb
push
cmp
jle
lcall
fcompl
lods
dec
fld
fnstcw
sub
cld
inc
stos
xor
clc
std
fcompl
cmp
jecxz
ficompl
sub
cmp
xorb
mov
jp
int
push
add
lods
gs
in
call
lret
xchg
sbb
sahf
bound
push
sarl
bnd
gs
pop
cmpsb
ret
sbb
add
mov
cld
xchg
das
push
adc
fisubl
out
fidivs
and
lretw
imul
repz
add
nop
dec
cmp
pop
cld
dec
pop
dec
shlb
mov
mov
fsubrl
lea
pop
int3
imul
lea
adc
frstor
pop
dec
dec
sub
cs
out
and
int3
lock
mov
sub
outsb
and
or
cmp
inc
mov
sub
test
leave
mov
push
sar
pop
and
filds
ljmp
xchg
and
pushl
int3
scas
mov
shl
and
cmp
cmp
imul
decb
inc
aas
jae
jl
shrb
clc
jp
add
push
push
xchg
inc
fildll
dec
je
lea
lds
mov
pop
adc
in
shrl
push
mov
sbb
loopne
xchg
js
movsb
insl
sub
pop
sbb
iret
xlat
test
loop
jne
pop
add
sahf
jecxz
add
pop
mov
addr16
adc
push
xor
cmp
xchg
cmp
add
fstp
notl
pushw
imul
dec
adcb
add
jns
ficompl
stos
mov
dec
nop
inc
movsb
aaa
pop
in
loop
xchg
pusha
gs
pop
adc
mov
mov
dec
enter
ljmp
push
dec
std
push
mov
call
decb
mov
dec
pop
push
jne
cmp
leave
enter
loope
sub
xchg
ret
into
in
lds
xchg
push
mov
inc
xchg
jne
or
xchg
xor
and
je
sbbb
xchg
mov
xor
imulb
int3
inc
jecxz
dec
push
push
pushf
dec
sbb
loope
mov
test
xor
das
andps
mov
jle
arpl
cmp
xchg
and
xor
lret
cmp
repz
sub
adc
lret
cmpsl
push
mov
or
pop
mov
fnsave
mov
pop
cmpsl
xchg
pop
xor
pop
pop
jmp
data16
pop
jne
imul
xchg
sbb
inc
scas
pop
mov
push
inc
mov
out
sub
dec
lea
inc
in
rcrb
fdivl
jmp
pusha
fistpl
shll
lea
and
test
pushf
sbb
fistpl
push
lock
rcll
ret
sbb
sbb
pop
js
repz
rcrl
cmc
fldcw
ss
iret
into
fistps
sub
data16
sub
aam
xor
sbb
jns
outsb
into
aad
ds
pop
push
jmp
loope
lods
enter
inc
imul
dec
mov
xchg
jl
insl
jecxz
stc
mov
pusha
lea
bnd
or
dec
loope
orl
inc
and
add
adc
sbb
jecxz
ds
addr16
mov
inc
mov
stos
add
jmp
test
and
pop
adc
add
xchg
cmpsl
js
and
pop
xor
and
pushf
lret
cld
and
and
rol
test
popl
sbb
subl
in
out
imul
test
shll
and
movsl
jno
inc
xchg
mov
lods
jg
arpl
or
addr16
sbb
ret
and
fidivrl
sub
mov
js
fisubrl
mov
jecxz
cmc
lret
jp
push
loop
cmp
loope
sti
iret
jnp
jle
and
mov
stc
cld
push
cld
ss
js
lcall
mov
in
sarb
nop
lods
xchg
in
mov
loope
outsb
pop
ds
int3
pushf
xchg
adc
lret
xchg
and
add
jl
mov
pushf
fimuls
sbb
loop
jge
cmp
popf
test
mov
push
sahf
aaa
mov
sbb
or
cmpsl
adc
inc
jge
imul
mov
mov
es
out
mov
xchg
fdivrs
or
lds
test
xchg
pop
xchg
sub
cmp
movsb
repnz
or
mov
or
es
repnz
icebp
pop
aad
cli
pop
mov
sbb
data16
sbb
sub
and
insl
in
jle
outsb
jle
or
sbb
jno
adc
jge
lahf
cmp
insl
mov
sub
cmp
inc
sbb
bound
cwtl
aas
iret
pop
pop
pop
xor
cltd
xchg
pusha
lds
popa
pop
xor
cmp
cmp
mov
pop
push
jmp
rcrb
pop
nop
pop
mov
dec
fimuls
aam
mov
iret
icebp
lods
mov
xchg
xor
insl
repnz
cmp
mov
inc
xchg
and
aam
cmc
cmp
hlt
dec
pop
push
sub
loopne
stos
adc
sub
test
fidivrs
push
imul
push
aad
push
cli
add
or
cmp
movsb
pop
mov
sub
in
jnp
jge
cmp
sbbl
adc
adc
mov
out
je
fld
into
lds
popa
addr16
pop
mov
push
std
mov
lahf
cmpl
xor
mov
adc
stos
fmull
test
inc
inc
inc
jg
loope
mulb
sti
dec
std
inc
add
add
mov
xchg
aaa
sub
pop
or
in
not
mov
add
mov
es
xlat
pop
cltd
sti
add
xchg
pop
push
mov
xchg
mov
ja
push
and
mov
js
movsl
sbb
push
pop
jle
inc
ficompl
jl
jb
loop
xchg
adc
js
mov
adc
jbe
mov
adc
aas
sbb
jne
test
mov
sub
xor
ret
ljmp
dec
cwtl
push
push
icebp
and
mov
loopne
stos
hlt
adcb
mov
add
cmp
xlat
decl
sbb
fwait
gs
jb
mov
fidivrl
jns
sar
test
xlat
imulb
cmp
pop
arpl
sub
test
roll
out
and
in
mov
jbe
ret
mov
dec
pop
out
shlb
into
jnp
inc
loopne
cmp
repnz
adcb
into
adc
pop
in
xchg
pminsw
icebp
and
aad
or
push
popa
imul
mov
shl
aas
add
popf
pop
dec
adc
sub
loope
sahf
pusha
mov
insb
cmp
adc
aaa
xlat
cmpsb
inc
iret
nop
fs
and
inc
sbb
mov
into
lds
cwtl
sti
mov
xchg
xor
in
repz
mov
cs
add
sar
inc
push
add
popf
shll
cmp
add
and
movsl
mov
dec
stc
loopne
sub
push
out
sub
insb
sbb
mov
decb
stos
mov
fldl
push
jmp
ds
mov
jp
inc
push
adc
gs
jnp,pn
push
jle
mov
std
push
inc
mov
mov
ljmp
cmp
inc
adc
into
adc
psubsb
mov
dec
or
inc
popa
and
cmp
lods
cld
mov
sub
lret
mov
dec
xor
push
dec
xor
js
dec
cmp
test
and
sbb
xchg
push
aaa
fstpt
sub
push
sti
imul
xlat
test
xchg
push
adc
stos
into
jmp
aas
xchg
dec
cmp
cmp
xchg
leave
cwtl
daa
in
jb
push
sti
sti
cltd
sarb
pushf
inc
neg
cmp
mov
or
insb
insb
fldenv
cmp
pushf
adc
mov
leave
xchg
inc
movsb
lahf
adc
sbb
push
add
push
cmp
push
xchg
aaa
lcall
les
jmp
jo
sub
and
int
or
out
jo
shlb
pop
orl
sbb
jle
sbb
fstpl
andb
push
mov
xor
fs
clc
mov
data16
xor
pop
pop
xor
dec
add
adc
ds
push
cmp
and
das
adc
lds
xchg
xchg
adc
inc
es
pop
into
pop
stc
arpl
pop
cmp
mov
or
dec
je
in
xor
ljmp
enter
add
lock
jp
fdivrs
adc
insl
or
outsb
insb
xor
push
xchg
pop
xchg
mov
and
test
gs
jmp
push
push
sbbb
mov
lret
mov
mov
add
jge
sbb
push
inc
xchg
mov
icebp
repnz
lods
imul
andl
add
push
jge
mov
xchg
inc
in
xchg
inc
add
or
mov
or
xor
mov
mov
popf
in
and
out
or
mov
jae
cmp
popf
adc
lods
in
xlat
mov
mov
sub
loopne
out
push
scas
dec
and
jae
xchg
lret
imul
loope
shlb
dec
pop
aas
rcrb
xchg
add
ret
mov
push
cmp
enter
mov
in
das
fdiv
cmpsb
mov
leave
addr16
ret
shll
adc
cmc
test
pop
pop
clc
sub
es
xor
xor
lahf
neg
mov
xor
push
jb
mov
mov
out
pop
adc
xlat
jbe
scas
call
inc
mov
sbb
shl
sub
xor
repz
add
movsb
lds
mov
shlw
lock
not
xchg
out
xor
cmpsb
dec
cwtl
mov
push
lret
pop
daa
or
jo
int
data16
cwtl
jl
and
jle
add
mov
aas
or
push
xor
add
inc
lret
adc
and
call
mov
ret
jbe
sarl
xchg
xor
sti
mov
movsl
out
add
push
pop
xor
clc
cmc
mov
stos
insl
mov
shll
inc
inc
loope
stos
test
call
aad
cmp
or
pop
sbb
adc
xchg
icebp
or
xchg
cld
test
lea
cmp
jmp
xor
insb
loope
ljmp
jae
mov
dec
pop
mov
stos
in
scas
ds
mov
inc
sbb
idivb
adc
hlt
and
mov
gs
xchg
stos
js
fcomip
call
pop
xchg
scas
xchg
add
jl
pop
jo
mov
popf
cmp
aas
loopne
mov
sbb
lcall
test
das
dec
stos
in
inc
enter
add
mov
in
and
cltd
or
int3
lret
cmp
lcall
sbb
lods
lds
clc
aam
into
pop
inc
call
pop
lret
stos
ss
rcr
xchg
fs
inc
inc
jmp
mov
cmp
sub
test
orb
inc
push
pop
insb
rorb
outsl
test
pop
xor
fnstsw
add
addl
rcrl
sbb
lcall
mov
xchg
sbb
icebp
stos
jbe
rep
ret
push
ds
and
mov
insl
je
shrb
push
adc
rcrl
pop
inc
lock
fs
push
shlb
push
jmp
mov
mov
jle
inc
adcl
pop
inc
or
shrl
cs
fsub
out
push
iret
push
adc
cwtl
fcoms
and
cmp
fsts
and
out
dec
push
fcmovbe
out
fmuls
sahf
int
mov
repz
lods
outsl
cli
xchg
roll
nop
pop
fsubr
loopne
mov
xor
repnz
aas
fldlg2
dec
push
push
mov
adc
push
or
or
imul
lahf
mov
dec
repz
pushf
es
mov
cmp
inc
jp
rcrl
mov
inc
jnp
mov
subps
pop
or
push
test
adc
xchg
ss
cld
addr16
xor
pop
je
inc
inc
sbb
fisttpll
sbb
lods
into
sub
sbbb
subl
xor
pop
aaa
icebp
aam
cmp
repnz
imul
xchg
adc
clts
fisttpl
push
or
icebp
add
xchg
cmp
sbb
ret
ret
fiadds
pop
xlat
pusha
lret
test
cltd
sub
fstpt
cmp
xor
fcomp
sahf
cmp
adc
and
stos
pop
mov
add
aaa
dec
addr16
aas
adc
pushf
or
sub
hlt
mov
pop
push
incl
or
cmpsl
daa
mov
int
mov
lret
loope
bound
das
outsb
push
or
push
dec
xchg
add
pop
xchg
negl
mov
faddl
xchg
fbstp
sbb
or
incb
mov
leave
es
out
mov
dec
sbb
jp
les
jl
test
les
cmpsb
mov
in
int
push
mov
lock
je
mov
lahf
stc
jecxz
mov
stos
pop
scas
mov
insl
sbbl
and
push
xchg
lret
mov
sub
jecxz
cmp
pop
push
scas
out
aam
xchg
lock
pcmpgtb
dec
lret
sub
sub
pop
adc
or
ror
movsb
push
test
mov
sub
inc
jnp,pt
push
cmp
imul
jbe
aad
xlat
jbe
mov
ss
ficompl
bound
push
hlt
cld
xchg
pushf
fldl
sub
mov
lods
in
or
mov
pusha
and
push
sbb
mov
test
ljmp
sarl
add
cmp
mov
xchg
into
fistpl
fs
outsb
cli
pop
add
push
xor
decl
pusha
cmp
dec
pop
pop
add
iret
inc
popa
in
aaa
add
or
dec
jle
loopne
stc
mov
sbb
cmp
rorb
call
add
pop
idivb
dec
cs
mov
mov
stc
es
cmp
jno
jno
cltd
icebp
jnp
cs
repnz
aaa
out
cli
adcl
call
sub
lds
push
sbb
cmp
cltd
jecxz
xor
xadd
pop
scas
mov
jnp
dec
xor
sbb
sti
add
stos
cwtl
ljmp
jae
mov
fstpt
int
mov
xor
inc
jae
cmc
cmpsl
mov
mov
dec
scas
pushf
add
das
sarw
mov
out
cltd
sub
call
xor
dec
loope
lcall
push
mov
push
adc
pop
out
push
adc
sbb
sub
stos
xor
mov
jo
xchg
testb
lods
out
sahf
fsubrp
xchg
push
mov
pop
jb
enter
add
xor
dec
mov
jl
adc
sub
dec
gs
sbb
lds
push
xor
subb
pop
shr
sbb
mov
cmpsl
or
dec
cmc
dec
xlat
fsubs
stos
stos
out
add
cld
pop
mov
stos
sbb
adc
lock
push
int
cwtl
adcb
jl
mov
cmpsb
psllq
xchg
lret
in
rcl
popf
add
lods
cmpsb
adc
stos
in
pop
push
cmovb
cmp
inc
clc
rcr
dec
inc
push
movsb
pop
iret
pop
scas
idivb
loop
cmp
imul
iret
sbb
add
pop
das
xor
push
add
fwait
ror
mov
icebp
pop
aas
dec
into
sbb
aam
js
and
add
xchg
fucomp
loope
pop
cmp
cmp
in
push
sbb
xchg
xchg
stos
or
jne
and
aad
xchg
sub
sub
into
push
adc
push
cmp
loopne
leave
mov
cmp
sbb
or
cmp
fucom
mov
aas
ret
imul
flds
les
inc
daa
pop
pop
es
cwtl
out
inc
sar
decb
sub
push
fisubrs
out
cli
lret
data16
cld
mov
loop
insb
enter
ror
inc
jns
mov
fisttpll
sbb
cmpb
adc
data16
adc
jns
fwait
lock
jne
fimuls
orl
in
sbb
pop
dec
je
dec
or
clc
fidivs
jmp
push
mov
out
pop
cmp
jns
mov
call
cs
lods
pop
js
mov
push
in
mov
fdivs
xor
aaa
aam
sbb
adc
ljmp
xor
fiadds
shrb
icebp
cwtl
js
xor
push
maxps
js
std
clc
fwait
jge
mov
mov
jne
mov
sbb
dec
pusha
and
xchg
xchg
sub
aas
enter
and
idivl
icebp
movsl
xchg
fldt
insb
xchg
and
das
add
out
pushf
push
sti
mov
loopne
out
ret
sub
jo
test
pop
rcrl
shl
xchg
shl
arpl
mov
sarb
movsb
test
outsb
mov
insl
jl
and
test
adc
add
int
pop
pop
add
cli
ret
adc
addr16
data16
add
jns
in
mov
mov
gs
nop
pushf
rolb
lret
cmp
and
cmc
scas
das
ss
push
sarl
aas
imul
loop
out
fdivrs
xchg
cmc
sbb
lcall
cmp
add
or
jo
or
cmp
pushl
inc
stc
les
xchg
jl
hlt
out
pop
inc
mov
rolb
pop
push
push
imul
xor
inc
sub
gs
sti
lock
xchg
pusha
cmp
cmc
loope
mov
or
xlat
xor
add
inc
outsb
cltd
pop
push
fstps
pop
popf
sarl
test
insl
scas
cmp
jnp
mov
xchg
cli
push
or
xor
imul
xchg
inc
hlt
stos
xchg
orb
cmpsl
mov
mov
jecxz
mov
cwtl
push
divb
mov
sbb
out
dec
sarl
xor
dec
sbb
or
pop
adc
cmp
and
push
iret
dec
pop
jmp
in
int
mov
mov
shrl
daa
adc
shrl
push
add
xor
cmp
shlb
out
add
sub
js
pusha
popa
pop
push
int3
mov
mov
cmp
xlat
dec
or
inc
add
mov
xchg
xchg
fbld
fnstcw
les
push
lret
or
push
movb
sub
pushf
fsts
pop
aas
gs
dec
xchg
xchg
pop
in
roll
mov
jp
sub
cld
xchg
fstp
rorl
out
into
xchg
shufps
pop
jg
clc
out
mov
mov
ja
aam
xor
mov
decb
mov
pop
pop
shlb
adcb
sbb
cmc
lret
frstor
and
jmp
pop
in
add
and
jns
jns
inc
mov
out
outsl
and
add
pop
mov
lds
jno
loopne
xchg
lea
mov
imul
hlt
cmp
or
lcall
and
mov
xchg
push
aas
bound
mov
inc
mov
insl
mov
jbe
pusha
pusha
fisttps
jl
iret
icebp
lea
adc
mov
inc
xchg
arpl
in
lahf
mov
push
lcall
aam
pop
fdivl
push
xor
push
mov
cmp
cmp
inc
pop
ret
jo
or
pop
test
inc
lods
das
sbb
in
push
lea
pushf
pop
cmp
dec
mov
mov
or
mov
aaa
fsubrl
adc
cmp
sar
mov
ret
mov
inc
pop
mov
enter
push
movsb
es
test
into
ret
push
scas
dec
jg
cmc
mov
std
mov
pop
jb
lods
adc
xchg
mov
xlat
aas
mov
cmp
dec
imul
mov
shr
aas
xor
add
dec
je
inc
pop
cld
loope
pop
loopne
fwait
and
xchg
fs
fwait
incb
add
xor
add
push
mov
or
out
push
loopne
ljmp
and
mov
sub
adc
xchg
jle
sbb
push
imul
add
cs
push
repnz
cmp
adc
or
cltd
pop
cmp
fs
fs
lea
sbb
cmp
inc
daa
insl
negb
pop
gs
sub
jl
jmp
dec
ljmp
pop
mov
inc
rolb
mov
mov
mov
dec
aam
jp
test
mov
mov
inc
bound
add
loopne
mov
outsl
sbb
and
adc
rorl
mov
push
mov
push
dec
enter
sub
cltd
cmp
xchg
cmpsb
xor
mov
clc
mov
ret
xchg
mov
xor
or
enter
fs
sbb
dec
lods
es
jecxz
imul
inc
sbb
xchg
lea
push
mov
cmpb
test
pop
je
or
mov
stc
cmpsl
xlat
and
mov
jl
out
pop
jne
aas
xor
inc
dec
inc
pop
pop
fdivrl
lret
jns
fiadds
std
xchg
sub
adc
jb
pop
loop
cmp
ret
or
push
adc
mov
inc
cmp
adc
push
out
fadds
testl
pop
xor
mov
es
inc
mov
jnp
xchg
outsl
mov
rolb
add
mov
mov
xor
inc
lret
outsb
pop
push
or
out
and
fsubrp
pop
rorb
shll
dec
and
aam
add
add
add
stos
cmp
jecxz
outsb
inc
cld
push
imul
fimull
aam
repnz
nop
mov
rolb
cmp
add
in
push
push
xchg
out
xlat
jl
xchg
pop
mov
push
andb
out
aas
loopne
adc
leave
sub
stos
push
dec
dec
mov
imull
sbb
push
div
rclb
jp
mov
shlb
addl
adc
dec
or
addb
ret
iret
imul
jb
mov
push
sti
xchg
xchg
inc
push
imul
andb
sub
test
add
dec
add
lret
jmp
ds
push
mov
add
cld
mov
dec
cmp
sub
xor
std
roll
sub
lahf
std
sub
lret
repz
inc
sbb
add
push
cmp
sub
mov
pop
enter
ret
dec
mov
enter
push
mov
xchg
insb
les
fisubl
inc
aam
lds
mov
inc
mov
test
xor
pusha
rolb
repnz
ret
lock
pushl
in
leave
push
pop
lret
sbb
in
mov
pop
popf
xor
std
mov
sbb
xchg
int
sbb
nop
rcrb
mov
clc
cmp
xchg
aam
or
lds
jge
mov
adc
jl
imul
pusha
pop
in
test
fs
cmp
xchg
sub
imul
roll
jle
mov
jne
push
push
movsl
pusha
bound
sbb
cmp
sar
repz
test
push
inc
pop
cmp
call
test
xchg
mov
or
int3
jbe
mov
mov
repnz
sub
fsub
ja
je
cmpsb
adc
fstl
mov
imul
sbb
je
enter
add
ret
jo
in
aas
xor
adc
cltd
sti
or
lods
call
cld
retw
sti
in
lahf
xor
mov
enter
mov
xor
shrb
add
inc
xchg
lock
in
cwtl
subb
ret
repz
dec
out
adc
fildll
pop
jge
jnp
xlat
mov
push
jp
push
jno
loop
xor
jecxz
sbb
jb
int3
mov
mov
pop
jmp
roll
pop
push
and
inc
mov
stos
and
push
and
dec
popf
aad
mov
sub
imul
add
stos
push
add
js
cmc
loope
es
cli
cmp
adc
enter
hlt
cmp
movsl
pop
mov
jge
mov
repz
inc
jge
mov
mov
repz
out
push
xchg
push
or
stos
rcrl
mov
mov
jbe
int
push
mov
insl
cmp
lds
js
xchg
pop
pop
mov
push
xor
jns
jecxz
pop
jns
inc
mov
int
movsl
shrb
fcoml
sub
fdiv
or
adc
adc
les
xor
js
cld
jb
cld
pop
enter
jg
inc
scas
sub
movsl
add
mov
pop
aaa
addl
xor
xchg
adcl
mov
xchg
and
sahf
push
dec
sub
adc
add
lret
sbb
inc
cli
mov
or
mov
aas
mov
inc
repz
popa
push
add
imul
and
fnstenv
stc
cmp
sub
mov
push
clc
lahf
add
int
sahf
jmp
mov
and
js,pt
daa
out
rcrl
aaa
add
pushf
fsubrp
cld
movsb
push
add
sbb
push
pop
inc
fdivrl
loopne
cmpsb
xor
clc
das
cmp
das
ror
mov
cltd
mov
add
fsub
jae
push
and
pop
dec
cmpb
dec
inc
xchg
pop
or
sbb
jo
outsl
push
mov
into
jge
pop
push
ds
dec
movsb
in
mov
xchg
or
jmp
xor
shlb
stos
mov
inc
ret
push
stc
subb
push
jae
test
mov
in
jge
pop
pop
ss
cwtl
clc
sbb
sub
add
mov
sbb
icebp
repz
and
sbb
lods
out
cmp
adc
add
jl
xchg
loope
iret
fisttps
push
lock
xchg
inc
sbb
jb
mov
mov
xchg
cltd
lods
mov
pushf
add
into
inc
repz
ljmp
adc
pop
in
rclb
shll
push
push
flds
gs
bound
loop
and
ljmp
adc
pop
xor
dec
mov
scas
aam
jne
incb
and
mov
test
iret
aaa
leave
ljmp
insl
out
sbb
dec
mov
stc
sbb
jb
mov
sahf
icebp
fs
test
adc
das
addl
enter
mov
lods
das
add
xchg
xor
je
push
dec
jns
adc
mov
rolb
mov
popf
jp
cltd
mull
and
in
cmc
pop
or
xchg
jl
filds
inc
cmc
loopne
cltd
arpl
cmp
mov
ret
popa
int
fadds
mov
or
loope
je
add
mov
dec
adc
push
pop
pop
xchg
inc
mov
push
add
ss
inc
xor
add
icebp
jno
and
push
paddw
lret
push
sub
mov
jp
pop
mov
mov
lods
test
repnz
filds
ljmp
dec
fldcw
mov
jmp
enter
pop
sub
lahf
fs
mov
jo
mov
mov
or
lods
jae
sub
xor
loop
fisttps
sbb
in
in
test
dec
xor
lret
push
mov
dec
scas
ss
and
arpl
ret
add
imul
sti
mov
neg
sbb
dec
repz
xlat
nop
inc
lcall
mov
sub
in
loopne
mov
mov
outsb
jmp
xchg
scas
cmc
data16
xor
cld
into
imul
leave
testl
or
sub
aaa
push
and
lret
xor
or
adc
outsb
pop
andb
push
dec
sbb
mov
pushf
and
push
push
xor
enter
test
shll
xorb
loope
ret
dec
lock
cmp
fisubrs
jl
pop
jmp
mov
loop
xchg
pop
icebp
enter
cmp
mov
insb
add
lcall
inc
jecxz
test
xchg
dec
and
ljmp
ljmp
cmp
jecxz
scas
test
lcall
inc
rorb
mov
arpl
loop
lahf
icebp
and
xor
je
jmp
addr16
mov
pop
mov
push
jbe
sbb
loop
enter
movl
pop
jnp
lahf
out
push
test
sbb
cmp
mov
dec
popa
enter
nopl
into
xchg
outsl
cmp
fcomps
push
call
in
and
xchg
scas
and
sbb
sbb
jno
fstps
sti
setge
pop
dec
lock
repnz
lahf
cmp
pop
and
out
jl
jmp
repnz
fists
call
xchg
fdivr
mov
lea
ja
mov
in
pop
cmp
int3
push
and
movsb
nop
mov
and
popa
push
cmp
ror
flds
es
or
inc
gs
sub
inc
pop
test
lds
addr16
add
xchg
sub
jmp
les
incl
sub
int
loop
ficoms
ret
shrl
out
xlat
xchg
push
lret
movsl
or
and
lret
fwait
aad
xchg
stc
pushf
addr16
and
mov
js
in
hlt
ret
or
sarl
shlb
std
push
cld
push
fwait
repnz
fdivrp
mov
js
push
lahf
cmp
aas
dec
adc
push
mov
xchg
enter
add
test
sahf
mov
add
push
data16
mov
std
mov
dec
adc
mov
icebp
and
gs
inc
jne
jp
or
pop
movsb
ds
adc
lcall
in
ds
pop
into
cmpsb
fbld
adc
mov
shr
adc
inc
cmp
sbb
mov
ret
stos
sar
cwtl
push
sub
insb
xor
js
pop
cmp
cwtl
xlat
inc
mov
xor
pop
sbb
dec
aam
xor
mov
repnz
pop
cwtl
lock
int3
sub
sub
mov
div
push
jo
ja
sbb
or
xchg
add
jp
and
inc
pop
clc
sub
cltd
jnp
xor
or
sbb
dec
adc
jbe
push
aaa
inc
in
push
ja
leave
ds
leave
dec
pop
jnp
fnsave
cmp
push
ss
sti
enter
pusha
xchg
mov
inc
sub
xchg
cmp
or
or
sub
cld
gs
or
mov
out
mov
sub
add
push
je
aaa
jns
arpl
pop
push
stos
cmp
repnz
mov
dec
xor
pop
jo
adc
ret
outsb
sti
out
aaa
or
mov
call
xchg
pop
data16
neg
inc
pop
push
dec
xlat
dec
nop
sub
mov
pop
jge
sub
cmc
std
jnp
cmp
mov
js
add
mov
jl
cmp
stos
jge
xchg
dec
mov
nop
enter
or
mov
lret
adc
es
rcl
xchg
sub
push
int
dec
mov
pop
movb
shll
das
lret
lock
mov
push
aam
testl
cmpsl
dec
jl
jmp
jno
scas
mov
jmp
inc
xor
pop
aas
xorb
add
push
sub
mov
js
fiadds
ret
ss
push
repnz
in
lcall
inc
adc
add
lahf
or
sub
mov
out
addr16
jecxz
sub
add
call
testl
stos
aas
jecxz
xor
mov
fsubp
sub
push
push
and
stos
jl
je
adc
cmc
enter
lds
idivb
mov
adcl
pop
lock
cmp
cwtl
mov
jmp
or
sub
ret
mov
and
test
pop
repz
or
imul
cmp
inc
lods
aam
cs
sbb
lret
jno
js
arpl
jg
in
pop
movsl
ficoml
xchg
movsb
dec
movsb
inc
xor
xor
stc
jae
pop
cmp
and
jmp
pop
in
add
sbb
aaa
xor
inc
fwait
pop
mov
lret
in
and
cmp
out
cs
or
jmp
daa
ret
add
fsubrs
cmc
push
push
mov
sbb
fmuls
dec
dec
xchg
and
jle
cmp
int3
mov
in
fwait
lods
mov
test
out
popf
adc
stos
sub
and
xor
ja
imul
addb
fisttps
inc
mov
mov
mov
lcall
xorl
popf
push
mov
cmc
lret
lret
fwait
mov
pusha
push
lock
call
arpl
add
xchg
cmp
jmp
scas
or
pop
lcall
or
rcrb
jmp
pop
pushl
jmp
add
sub
sbb
dec
mov
inc
dec
or
lock
outsl
dec
mov
mov
push
mov
addr16
xchg
rorb
xor
leave
sbb
adc
or
dec
arpl
mov
inc
jns
mov
mov
adc
and
dec
mov
jnp
push
pop
fwait
iret
mov
mov
mov
hlt
jb
fwait
jmp
adc
jg
fdiv
jnp
out
int
idivl
popf
cli
push
es
xchg
dec
test
xlat
ss
cmpsb
xchg
addb
cmp
test
out
ja
pop
clc
xor
inc
cmp
sub
in
mov
sbb
repz
xor
icebp
push
add
pushf
movsl
pop
mov
stos
inc
in
push
insl
and
scas
adcb
aaa
ja
hlt
add
out
push
push
adc
jnp
lret
test
rcr
push
mov
and
lret
imul
stos
or
enter
and
inc
aam
ds
jge
sub
lret
aam
js
mov
xchg
pop
jb
lods
aam
das
sub
jmp
adc
xor
adc
mov
testb
out
imul
jno
push
sbb
filds
cmp
jns
mov
dec
mov
adc
popa
push
inc
add
lcall
mov
xchg
mov
inc
xor
bound
lret
mov
dec
negl
adc
jle
fs
test
in
dec
dec
pushf
cmp
sahf
out
or
icebp
lahf
pop
xor
lret
inc
mov
fs
movsl
cwtl
icebp
out
pushf
inc
dec
out
jnp
or
sub
jp
loope
push
mov
mov
lock
in
and
dec
or
test
cltd
xchg
fidivl
jp
loope
ljmp
mov
push
xor
aam
mov
mov
rcl
sub
adc
sub
aaa
mov
inc
push
cmp
popf
xchg
ror
imul
sub
jmp
cmpsl
js
jb
dec
cmp
fdivl
sub
fsubl
lods
dec
imul
loope
or
loope
subb
cmp
or
add
in
jno
cmpl
clc
clc
movsl
mov
sub
add
lds
in
in
js
cld
dec
xchg
mov
and
mov
icebp
push
pop
sub
inc
lret
icebp
and
inc
dec
inc
test
frstor
mov
cmp
jge
inc
decl
ds
cmpsl
sub
xor
sbbl
or
rclb
dec
cmp
stos
jns
jo
sub
in
cmp
lret
mov
lcall
push
cmp
pop
lock
js
mov
cmp
enter
or
int3
dec
dec
mov
fsincos
pop
mov
sbb
pop
jle
inc
sbb
mov
mov
push
test
dec
out
push
aad
cli
adc
cmp
mov
mov
pop
out
movsl
shl
jnp
jge
lret
pop
dec
in
inc
xchg
cmp
ret
lret
ret
fsubrl
leave
repnz
mov
movsl
push
xchg
ja
or
mov
and
shll
cli
mov
lcall
loop
adc
popa
les
insb
mov
rcrl
and
stos
dec
add
fisttpl
test
loop
sbb
stc
push
jmp
outsb
mov
xor
dec
in
xor
push
xor
aaa
pop
dec
in
ljmp
sbb
shlb
lock
jp
xchg
sbb
fmul
xor
aad
insl
push
or
xorb
inc
out
inc
sbb
cmp
and
dec
mov
ret
enter
dec
ja
dec
roll
and
push
sub
orl
add
mov
cwtl
push
movsl
sti
jl
mov
aam
cli
mov
dec
cmp
cwtl
adc
jp
lock
loope
cmp
rorb
or
or
adc
repnz
inc
subb
and
mov
loope
push
jbe
sub
push
dec
dec
sbb
cmpsb
fcompl
call
push
add
cmp
imul
pop
cwtl
mov
or
dec
xchg
jle
aad
ljmp
lcall
inc
mov
cld
test
cmp
call
sbb
mov
inc
movsl
aam
sbb
mov
das
fisttpl
xchg
add
sarb
dec
sahf
add
call
aad
fmul
movsb
jne
xchg
sti
or
pop
vphaddwq
fstpl
and
xchg
sbbb
pop
into
sbb
sub
loope
cmp
ret
aam
iret
push
dec
sbb
jns
dec
jbe
or
mov
arpl
pop
adc
jb
xchg
push
xchg
push
cmp
cwtl
pop
lret
cmc
fld
pop
fs
adc
mov
inc
jmp
aad
les
in
xchg
inc
inc
lock
icebp
pop
in
cmp
mov
cmc
xlat
push
pop
js
sbbb
int3
xor
mov
in
sub
leave
insl
loopne
inc
inc
mov
inc
out
pop
sbb
in
jge
mov
sti
push
push
sti
or
push
stos
lcall
mov
out
jbe
push
jae
cmp
pop
insl
jp
test
out
lret
fdivs
xor
pop
stc
jb
push
jne
testb
subb
out
cmpsb
das
pop
imull
in
or
push
js
cmp
cmp
sub
xchg
sbb
jge
enter
xor
xchg
loop
add
cs
inc
xor
in
cmpsl
sub
pop
out
mov
inc
xchg
xchg
xchg
outsb
aad
cwtl
pop
inc
dec
fs
mov
sbb
adc
cwtl
out
jp
nop
ljmp
mov
pop
push
aam
and
jne
in
mov
mov
bound
mov
adc
imul
cmp
ljmp
mov
sbb
cmp
xchg
rorl
repnz
adc
imull
cld
inc
ja
and
out
pushf
adc
ftst
frstor
sbb
inc
mov
mov
aam
sbb
push
addr16
pop
stos
fnop
aad
pop
lret
jmp
jb
fidivs
or
loop
sbb
aad
gs
aas
das
and
stos
mov
sbb
repnz
push
xor
leave
and
mov
test
cs
ljmp
xchg
xchg
mov
inc
clc
fptan
imul
sub
inc
mov
mov
mov
mov
mov
nopl
fcmovnb
lret
aam
adc
push
add
pop
lods
lods
jnp
dec
push
sub
lahf
mov
in
jp
aad
aad
jbe,pn
sub
sbb
pop
les
int3
lds
push
pop
jmp
outsl
cmpsb
popf
mov
rol
mov
pushf
pop
xchg
rcr
imul
cmp
ret
pop
inc
loop
movsl
outsl
fnstenv
ljmp
mov
je
or
push
mov
adc
mov
addb
cmp
cli
nop
cmpsl
xor
call
shlb
call
cld
inc
sahf
pop
push
or
push
sbb
vpsrlw
or
add
subl
arpl
dec
fcoml
or
jbe
ds
fmulp
aaa
push
push
je
in
cmp
test
mov
and
popa
cld
shll
xchg
jmp
addl
inc
je
sti
and
pushf
xchg
jl
lret
adc
mov
test
out
dec
movzwl
and
js
movsb
ss
jp
movsb
mov
lret
cwtl
aaa
lds
mov
xor
movsb
repnz
jge
addl
lock
imul
fdiv
mov
ret
js
bound
mov
sbb
push
call
dec
insl
push
mov
pop
and
or
xchg
sub
mov
xor
dec
imul
adcb
push
mov
out
test
daa
in
sbb
mov
or
xchg
inc
mov
out
shr
cmp
popa
pop
in
inc
add
jmp
lea
insb
shll
inc
outsb
rep
mov
es
fmul
push
mov
bound
ret
das
dec
jecxz
lods
jp
pushf
pop
cmp
mov
loopne
es
icebp
mov
xchg
jl
rorl
lcall
jecxz
ds
mov
inc
ret
popa
aad
cld
and
pop
mov
xlat
leave
mov
loope
sbbb
call
scas
jg
push
lea
xchg
jmp
pop
add
dec
hlt
inc
pop
pop
shrl
xchg
xchg
mov
add
dec
flds
in
scas
mov
in
adc
rol
movsb
addr16
xor
das
lods
das
pop
sub
iret
or
jb
ds
daa
stos
fiaddl
or
cmp
inc
mov
cmp
scas
lods
mov
jae
hlt
push
je
mov
ret
sahf
sub
sarb
outsb
in
arpl
push
mov
orl
mov
inc
or
push
jae
ret
cmpsb
out
mov
aad
fldt
pop
loop
mov
inc
mov
xorl
push
mov
push
push
test
fucomp
xor
sahf
xchg
add
enter
shl
mov
inc
push
mov
ret
jne
or
jp
sub
data16
into
imul
mov
mov
mov
mov
arpl
xlat
repz
pop
jl
test
mov
jnp
push
sbb
lcall
ficompl
add
jb
push
adc
cmp
cmp
in
mov
inc
test
sub
dec
or
data16
mov
mov
add
sub
cmp
push
pop
sub
inc
scas
xorb
mov
sbb
lods
addr16
cmp
cmp
adc
leave
rcl
adc
mov
test
lcall
add
pop
jno
fwait
mov
mov
andl
or
test
ljmp
pop
jl
jp
hlt
xchg
add
mov
cwtl
mov
add
in
aas
pop
jmp
sbb
dec
mov
mov
in
mov
call
shlb
mov
cmpl
addr16
lret
popf
cmc
enter
push
and
out
dec
fldenv
js
sbbl
testl
loop
out
mov
ds
push
stc
out
jbe
daa
xor
addr16
int
inc
sti
pop
pop
adc
in
push
dec
sbb
mov
stos
ret
dec
mov
pop
adc
cmp
das
mov
pop
pusha
fisubrs
lds
subl
ficoml
popl
xchg
lcall
xor
adc
inc
jmp
dec
mov
and
add
out
dec
adc
mov
imul
mov
adc
or
fsubs
ljmp
or
sarl
or
push
insl
dec
test
pop
lods
xchg
xchg
sbb
cwtl
lods
add
les
fsubrp
or
sysexit
aam
sbb
ret
xor
out
pusha
fists
cmp
insl
lds
gs
pop
add
cld
lds
testl
lcall
fnstcw
mov
dec
sbb
push
xlat
aad
cmpsl
xchg
je
add
test
lret
sbb
sub
jo
js
jl
in
dec
cmp
test
ja
lret
test
scas
outsl
es
lds
inc
mov
in
mov
dec
mov
es
jne
dec
cmp
adc
add
add
xor
or
or
adc
dec
idiv
lock
loopne
and
push
pop
negb
or
enter
jmp
pop
inc
leave
dec
nop
add
ds
fiadds
jae
sti
bound
and
ret
jmp
push
pop
push
mov
mov
es
mov
fs
movlps
and
pop
loopne
mov
adc
aam
sub
out
cli
ficompl
bound
ljmp
lea
mov
es
mov
lods
xchg
xchg
lea
jbe
sub
ficoms
dec
or
mov
stos
js
inc
popa
rcl
jo
jno
push
jl
loopne
xchg
add
jne
aas
add
pop
cmp
iret
insl
sbb
jp
push
cmpsl
out
stos
loope
inc
pop
pop
xor
push
ljmp
shlb
fadd
add
mov
mov
cs
dec
lods
jmp
je
outsb
and
pusha
push
jae
int
jno
sbb
inc
jecxz,pt
pop
jecxz
outsl
test
aam
push
sbb
push
cmp
and
pop
sbb
push
fsubrl
mov
scas
jb
mov
test
into
lea
out
add
pop
and
xchg
cmp
push
lret
mov
pop
shl
mov
sbb
stos
repz
lds
daa
xchg
push
leave
repz
lret
dec
ret
push
inc
mov
aaa
or
pop
jae
xor
and
dec
mov
add
jmp
mov
adc
ds
aas
pusha
fs
mov
loopne
stos
in
xlat
xchg
js
aam
inc
sub
aad
enter
mov
inc
jmp
test
pop
imul
sbb
mov
inc
int
test
pop
jno
jne
in
aas
xchg
lds
int3
jge
inc
fcom
les
add
xor
xor
cmp
dec
fwait
icebp
pop
stos
jp
adc
mov
push
ss
loope
dec
mov
push
inc
es
jns
popf
add
add
or
cmp
imul
sti
xor
movsl
jne
fsubs
xchg
nop/reserved
and
test
addb
mov
pop
pushf
call
ret
call
pop
scas
inc
push
or
repnz
adc
leave
mov
test
fs
jbe
lds
test
insb
decl
cmp
lods
popf
push
into
cmp
insb
scas
sbb
adc
cltd
int3
fiaddl
sbb
aaa
cmp
sub
adc
fs
icebp
fists
bound
or
mov
or
fimull
jne
popa
adc
shl
js
imul
xchg
pop
lahf
sub
adcl
ja
test
mov
fcompl
out
mov
inc
call
pop
adcb
cmp
data16
shlb
mov
mov
lahf
into
jmp
inc
xchg
add
dec
push
inc
test
and
addb
sub
sbb
mov
insl
rcrl
arpl
push
inc
xchg
push
pop
xchg
and
push
scas
cwtl
test
rcrl
and
ss
addb
repz
daa
das
pop
mov
lock
cmp
js
jnp
loope
int
mov
dec
daa
push
mov
xlat
test
call
mov
sbb
in
in
ret
out
jnp
push
js
fidivs
cmp
mov
push
iret
mov
cmpsl
test
in
cmpsb
iret
mov
mov
mov
das
mov
orl
repz
xor
push
out
in
sbb
jae
cmpb
and
push
push
cmp
sti
daa
sbb
dec
inc
add
jnp
push
and
js
mov
dec
adc
pop
pop
jo
cli
mov
mov
les
push
mov
cld
push
xlat
ds
pop
jbe
xchg
jae
popf
add
push
out
inc
fsts
add
repnz
iret
fstl
jb
add
sbb
ja
adc
movsb
and
push
inc
jns
rcl
xlat
sub
shr
dec
scas
inc
sbb
scas
pop
push
mov
dec
cmp
fsub
bnd
jbe
jb
mov
dec
or
or
dec
mov
outsb
inc
insl
mov
add
xor
ret
mov
lret
mov
add
sub
pop
sub
dec
jb
push
sbb
jmp
lret
notb
imul
pusha
mov
popf
in
aad
mov
enter
mov
arpl
mov
inc
stos
mov
f2xm1
divb
sub
out
movsb
cmc
inc
jg
push
pop
pop
and
lds
mov
roll
or
push
push
mov
xor
add
stc
xchg
dec
test
pop
mov
dec
fcompl
xor
jns
in
push
aaa
int
push
and
mov
imul
mov
push
xor
mov
push
arpl
lock
popl
leave
pop
add
lahf
mov
inc
lret
mov
push
cli
mov
xchg
daa
xlat
std
sub
shr
in
movsb
sub
dec
sbb
inc
mov
adcl
jnp
jge
jg
push
sbb
popf
jge
leave
add
cwtl
dec
cmpb
inc
loopne
cli
xlat
inc
jp
dec
stos
hlt
lcall
dec
add
fildl
jne
leave
addr16
or
outsb
test
mov
xchg
add
out
mov
in
ret
cmc
mov
icebp
test
mov
push
test
mov
fcoml
out
xor
loop
outsb
add
xchg
iret
rcr
push
aad
sbb
rcl
iret
outsl
xchg
into
adc
fisttpll
adc
sbbb
ljmp
xchg
push
in
jbe
mov
loopne
scas
cmp
push
adc
movsb
mov
call
add
sbb
cmp
out
clc
stos
jns
sbb
fstps
into
call
out
push
add
lods
jo
cmp
fcoml
jno
sub
sahf
cmpsl
aad
xor
ljmp
insb
or
stos
pop
lds
or
mov
mov
shll
mov
cmp
jo
aam
jns
sub
test
sbb
add
or
xchg
stos
mov
loopne
mov
shlb
sub
sbb
fdivrl
loopne
out
data16
cmp
sti
dec
cmp
leave
dec
lods
mov
dec
jne
out
xchg
and
mov
and
push
pmullw
jne
cmp
xchg
dec
mov
testl
push
add
insl
mov
mov
or
sub
jl
xchg
outsl
cmpsl
nop
mov
pop
and
ja
mov
sbb
loopne
bswap
jp
inc
ret
test
gs
jns
ficoml
stc
jbe
and
js
sbb
sub
add
pop
lcall
es
sub
inc
xor
inc
pop
lock
loop
hlt
out
test
out
pop
loopne
ja
cs
mov
mov
and
mov
fadd
test
pop
std
fwait
sub
dec
daa
popf
and
sahf
dec
sub
mov
or
push
les
push
add
or
inc
push
push
mov
push
faddl
sarb
sti
insb
fs
xor
fdivl
movsb
stos
jg
jg
adc
mov
push
push
push
test
mov
mov
or
ficoms
arpl
stos
daa
test
std
mov
adc
xor
jge
mov
adc
into
jo
ds
xchg
lods
lea
mov
mov
mov
lcall
hlt
inc
fwait
or
stc
test
fcoms
jmp
sub
mov
push
stc
add
sbb
in
test
movsb
push
sub
inc
add
and
pop
movsl
mov
stc
clc
loop
jge
out
shl
push
mov
es
leave
roll
sbb
jg
or
sahf
pop
push
dec
lea
mov
sub
lods
sbbl
arpl
mov
int
adc
sbb
fistpll
push
out
fs
dec
mov
mov
sbb
mov
js
enter
mov
sbb
cmp
inc
sbb
xorl
test
movl
inc
xchg
inc
add
pop
repz
jge
or
and
iret
int3
adc
sbb
filds
pop
int
push
lock
add
neg
push
ljmp
aad
pop
or
push
arpl
mov
mov
int
dec
out
jmp
int3
lcall
test
push
pushf
hlt
scas
clc
push
ret
das
mov
jno
mov
and
pusha
pop
adc
push
es
add
fdivl
iret
mov
ljmp
aam
lods
daa
jge
leave
dec
cs
mov
cltd
push
sbb
pop
aaa
and
mov
out
into
shlb
popa
jl
mov
adc
pop
popf
test
pop
push
inc
mov
and
popf
push
lahf
shrl
stos
mov
in
jge
test
push
adc
adc
ds
fidivl
dec
pusha
enter
imul
cwtl
mull
popa
cmp
js
scas
fdivrs
push
mov
mov
cmp
loopne
sbb
cwtl
frstor
mov
push
add
ret
or
popa
ja
call
movl
adc
xchg
sbb
mov
jl
adc
inc
mov
xchg
lret
fisubrl
or
and
mov
loop
xchg
mull
cmp
popa
cmp
pop
in
pop
xchg
xchg
mov
rcrb
ja
jnp
jne
mov
rorb
out
mov
or
mov
call
jmp
or
imul
xchg
push
jae
dec
push
test
cwtl
dec
cmp
movsl
xchg
ja
jg
pop
nop
clc
sbb
aaa
movsl
lods
es
xor
or
push
cs
icebp
idivb
pushf
and
mov
fnstsw
lahf
inc
cmp
mov
enter
push
xlat
jle
inc
insb
push
popf
repz
dec
adc
fs
stos
pop
inc
xor
lods
adc
rclb
cltd
imul
add
jbe
out
lret
or
or
push
adc
or
mov
leave
loope
jbe
data16
mov
xchg
mov
jns
movsl
and
xchg
xchg
xchg
push
mov
bound
stos
mov
xor
lcall
jne
sub
mov
cmp
sub
fnstcw
or
into
and
bound
mov
repz
adc
test
inc
mov
ret
fbstp
adc
adc
ret
jp
sahf
cld
sbb
and
sub
mov
lea
shll
shl
dec
dec
ja
lods
and
xchg
xlat
add
or
loop
xchg
mov
xchg
fiadds
mov
sub
mov
push
pop
into
push
iret
arpl
sbb
iret
jo
sarl
sbb
pop
lea
jge
popf
jle
shl
sahf
insl
jge
push
jle
sub
cmp
sbb
lods
and
mov
test
icebp
movsl
int3
mov
cbtw
pop
stos
pop
rolb
js
push
sub
push
or
push
sbb
and
xchg
sar
movsb
jle
and
xlat
push
mov
icebp
inc
cmp
iret
lahf
mov
dec
pop
aas
mov
inc
insb
and
cmpsb
mov
stos
mov
dec
jnp
jns
jmp
and
jno
jge
ss
mov
insb
add
mov
cli
rcrb
xor
push
push
sbb
das
push
jle
cwtl
mov
fchs
dec
inc
cmp
out
in
shrb
mov
adc
mov
sub
rcll
xor
xor
inc
insl
xchg
icebp
outsb
xchg
push
dec
andb
out
sti
push
icebp
int3
cwtl
adc
subb
push
push
int
std
sti
ret
ds
lret
movsl
lock
icebp
out
adc
mov
jns
fistpl
mov
and
push
icebp
repz
inc
inc
fldenv
dec
in
pop
ljmp
hlt
dec
pop
cmpsl
in
add
lods
je
faddp
aam
cmc
xor
push
mov
mov
pop
sub
andps
pushf
or
aas
popa
lea
leave
lret
add
jl
call
iret
xor
inc
xchg
jecxz
movsb
mov
adc
push
les
inc
loopne
cli
jns
loop
das
mov
or
jne
and
test
push
outsb
xor
stos
stc
sbb
dec
sub
cld
dec
mov
xchg
mov
lock
lds
cmp
inc
fcom
pop
outsl
push
inc
lods
fisttps
or
insl
jbe
lcall
adc
filds
cwtl
pop
pop
inc
popf
mov
jle
mov
hlt
arpl
mov
scas
xchg
add
loop
cmp
sbb
lock
roll
movsb
mov
mov
hlt
loope
sub
shrb
xchg
and
add
push
or
mov
mov
outsb
dec
mov
mov
dec
popl
sbb
add
jge
ds
insl
fcoml
loopne
xor
cltd
jns
ja
mov
cmp
push
pop
push
sarb
or
jbe
sbb
cmp
call
scas
cltd
nop
bound
movsl
mov
cmp
xor
dec
pushf
lock
dec
pop
mov
inc
lret
mov
jge
out
adc
adc
in
fwait
push
adc
mov
xor
jo
and
in
pop
out
and
repz
fdivrs
xor
xchg
and
jno
pop
test
int3
mov
xor
xchg
lcall
ret
and
and
jae
xor
jle
stos
call
jbe
dec
jae
dec
pop
jnp
jo
xor
mov
push
mov
stos
insl
add
das
pop
cmpsl
mov
jp
inc
push
xor
pop
and
and
pop
cmpsl
adc
je
mov
pop
cmp
iret
lds
xchg
into
pop
in
sti
adc
cmp
popf
pop
sbb
sbb
cmp
mov
or
ret
or
leave
stos
lds
test
cli
pop
xchg
call
jbe
jnp
xor
adc
cmpsl
xorl
jne
xor
or
in
and
clc
mov
pop
mov
push
inc
into
push
cmp
loopne
adc
sub
dec
inc
mov
xchg
xchg
xchg
stos
sub
in
dec
mov
mov
in
cld
jbe
cmpsb
adc
fistps
out
movsl
mov
xor
mov
sbb
push
push
or
xchg
lahf
cmpsl
sarb
fisttps
insb
and
sti
mov
inc
fsub
sahf
and
sbb
test
mov
out
bound
mov
mov
ds
xor
lods
dec
call
dec
xchg
mov
sub
sub
mov
cld
scas
and
out
das
sub
xchg
outsl
mov
adc
jge
jno
mov
jp
sahf
out
mov
or
inc
mov
mov
mov
lods
lods
fsts
lods
add
test
inc
frstor
out
push
hlt
in
dec
mov
sbb
inc
cmp
movl
cmp
jge
scas
insb
shl
loopne
addl
out
and
repnz
orb
mov
mov
jl
jno
pop
ror
add
sbb
sbb
dec
mov
andl
xlat
rclb
lahf
sbb
xor
xchg
outsb
mov
mov
cmp
jo
lea
imul
or
pop
rcrl
test
inc
add
fwait
sahf
movsl
cmpsb
cmp
mov
stos
cmp
fildl
or
addb
sbb
dec
test
jg
fistpll
push
scas
pop
aas
imul
pop
pop
push
mov
pop
jp
aaa
jmp
les
add
jae
xor
imul
jmp
out
out
mov
subl
push
mov
fidivrs
cli
mov
shll
pushl
test
addb
jae
xor
sub
add
sbb
push
cmp
inc
pop
test
lret
ucomiss
jp
loop
lcall
cmp
dec
mov
mov
lds
scas
loope
xchg
stos
mov
out
add
ret
cwtl
fidivrs
adc
mov
mov
mov
test
cmc
fs
fisubl
sub
fdivs
in
data16
addr16
lods
xchg
sbb
lods
xchg
sbb
cmp
mov
loopne
adc
push
pop
pop
je
push
push
lods
fidivs
aad
cld
mov
add
mov
in
ljmp
sub
sub
imul
icebp
orl
lea
cmp
adc
fsubrl
sbb
ljmp
repz
cmc
repz
sub
dec
jl
in
add
loop
bound
ljmp
adc
mov
cmp
mov
repnz
sti
stc
inc
repnz
aaa
adc
dec
inc
xor
test
bound
sahf
and
or
push
out
push
pop
insb
and
mov
dec
inc
notb
f2xm1
and
inc
xorb
shll
ret
mov
iret
cmp
xor
dec
test
dec
add
and
lods
int
lret
sub
xor
insb
outsl
jmp
fsubrp
adc
mov
fnstenv
xchg
sti
mov
dec
mov
les
xchg
lds
test
sahf
cmp
xor
xorb
pop
test
arpl
xchg
sahf
jmp
je
push
bound
cli
repz
in
cmpsl
sbb
xor
sbbl
enter
leave
inc
pop
mov
fs
mov
fwait
add
rol
repnz
notl
addr16
shrl
sub
movsb
xor
xchg
movb
mov
jns
mov
movsb
xor
xchg
push
test
adc
stos
xchg
mov
xor
dec
stos
orl
push
adc
into
lock
mov
das
ret
cmp
int3
xor
mov
pop
cmp
jns
bound
xor
iret
jns
or
shll
xor
and
dec
outsl
aaa
inc
shll
adc
out
pop
enter
leave
pop
sub
xchg
push
add
cmpsl
fs
out
sbb
and
idivl
aas
jae
scas
add
ds
ror
xchg
rep
push
sub
les
or
jae
lods
jmp
cmp
mov
jmp
inc
bound
clc
jle
mov
sbb
mov
dec
cmp
fdivrl
inc
push
daa
adcb
mov
arpl
push
adc
dec
lcall
xor
fstpl
jnp
pop
lock
cmpsb
test
fsubl
sub
dec
cmpsl
arpl
ret
popa
xor
inc
pop
push
imul
jno
or
pop
push
adc
mov
test
mov
insb
dec
push
push
movsl
cmp
int3
jnp
scas
hlt
mov
repnz
inc
pop
sub
pop
xlat
push
jecxz
or
xchg
adc
in
dec
popa
push
inc
out
in
imul
in
mov
aaa
cwtl
and
jp
scas
xorb
cmp
inc
sbb
loope
jle
xchg
pop
rcrl
add
inc
mov
cltd
cwtl
push
bound
stos
cmp
stos
xlat
dec
in
cld
push
lahf
nop
lret
xchg
inc
les
push
add
out
sbb
stos
movsl
testb
or
fdivl
nop
and
or
push
fisubs
orl
sbb
mov
in
inc
xchg
mov
xor
sbb
jl
lcall
jo
xchg
int3
push
cli
mov
push
cmp
mov
or
js
jbe
push
int3
loope
lods
outsl
setle
pop
fdivrl
jae
ret
fcmove
add
add
mov
into
ss
xor
inc
jnp
adc
aas
sub
and
call
xchg
jp
pop
sbb
xchg
ja
mov
lock
dec
sbb
fwait
jae
xchg
jg
push
adcl
mov
pop
lret
inc
jbe
movsl
mov
ficoml
xchg
inc
cltd
fmull
idiv
jno
test
pop
das
je
popa
add
xorb
popa
mov
out
mov
mov
mov
sub
mov
shrl
mov
mov
jne
fucom
adc
ret
and
push
imulb
ret
inc
mov
cltd
pop
orl
pusha
or
fyl2xp1
jns
insl
or
inc
cmpsb
xor
lea
imul
test
add
aad
mov
push
test
mov
inc
xor
xor
xor
jno
adc
or
stc
mov
test
xchg
cmp
sti
mov
push
mov
clc
lds
xchg
push
or
xchg
es
idivl
cmp
lret
popa
rolb
adc
adc
ficoms
mov
movsb
xor
lret
cmpsl
bound
mov
lret
or
lds
aad
dec
ss
xor
jne
add
shrb
dec
dec
jno
sahf
movsb
jl
pushl
mov
dec
pop
dec
xchg
adc
lret
fs
pop
sbb
jo
movsb
cmp
xchg
jmp
jne
sbb
cwtl
cmp
jbe
scas
fnsave
nop
in
pop
test
int
pop
movsb
scas
mov
in
dec
loope
sub
pop
rolb
shrb
shlb
inc
popa
in
test
sbb
pop
cs
cwtl
dec
loope
imul
mov
fdivrp
mov
fcompl
cmp
clc
sbb
rolb
inc
cld
dec
mov
add
mov
cli
xor
jae
and
mov
movsb
stos
lds
mov
cmp
inc
mov
sbb
sti
scas
scas
dec
sub
aad
and
pop
and
mov
ffreep
insl
nop
jb
cltd
sub
mov
std
sbb
icebp
das
jg
mov
ss
inc
fisttpll
jne
rcr
mov
sub
xchg
adc
sti
dec
inc
adc
in
xchg
inc
repz
ret
xchg
int
sbb
mov
shll
fxam
rcl
out
cmpsb
call
cmc
jle
lcall
popl
repz
nop
pop
add
dec
xchg
test
cwtl
out
aam
in
xor
into
mov
loopne
test
and
fisubs
cmp
hlt
bound
leave
sub
daa
dec
xor
pop
fstpt
rcr
sbb
cmp
fimull
inc
addb
in
ds
repnz
ret
insl
fs
enter
sbb
pop
jae
push
fldln2
hlt
lock
fldcw
scas
push
mov
adcb
inc
xchg
ds
sub
bound
pop
sbb
sbb
ss
lret
lods
jp
jl
sub
mov
pop
and
aam
push
push
push
call
dec
leave
cltd
mov
test
pushf
jno
in
ds
lods
inc
xchg
cwtl
push
sbb
js
pop
call
or
push
pop
or
pop
inc
clc
scas
pop
push
in
lock
push
mov
add
jae
sbb
mov
insl
in
std
shll
and
ds
ja
mov
outsl
cmp
xchg
add
popf
popf
clc
mov
mov
and
imulb
xor
aas
outsl
ja
fisttpll
sub
fstps
mov
icebp
xchg
add
jae
add
imul
mov
mov
xchg
xchg
mov
add
fucomip
inc
xchg
cmp
jmp
adc
push
cmpsl
sub
cmpsl
or
in
scas
pop
pop
cmp
add
insb
lret
push
pop
inc
cmp
or
std
test
inc
mov
mov
mov
in
jp
inc
jp
push
xchg
or
loop
push
fcmovnu
mov
movsl
mov
mov
sub
stc
and
jle
and
pop
aaa
push
xchg
aad
xchg
lret
adc
shl
stos
movsb
pop
cli
xchg
out
imul
in
shlb
mov
add
mov
and
push
cmpsl
loope
aas
xor
lahf
lcall
sub
pop
xchg
rorb
mov
sub
xor
into
shlb
jb
testb
cmp
in
cli
andl
daa
stos
cltd
aad
push
out
or
inc
addr16
fmuls
adc
cmpsl
mov
push
mov
dec
aad
push
or
adc
adc
push
sbb
ret
pop
sbb
adc
imul
jmp
pop
sbb
sbb
and
cwtl
jp
inc
popf
fxch
cmp
rep
push
dec
jecxz
or
jae
inc
push
sbbl
jle
jbe
cmpsb
lds
je
ss
xor
sbb
xor
mov
lea
or
das
add
cld
sahf
mov
lcall
and
shl
cmp
xlat
sbbl
fmull
and
ja
cmc
dec
jae
ss
into
in
push
ret
xchg
into
sbb
lds
mov
test
imul
xchg
fadd
sbb
pop
jge
lret
ret
xchg
xor
push
popa
xor
stos
cs
xchg
add
sti
xor
xor
sbb
push
mov
les
and
pop
and
jecxz
xor
mov
into
push
fisubrl
mov
std
ret
jg
arpl
xchg
sbb
imul
sahf
push
movsl
scas
lret
es
mov
sub
test
pop
dec
xor
loopne
sub
fimuls
cwtl
shrd
out
fwait
add
cli
or
mov
jmp
lret
push
push
cmpsb
sbb
stos
inc
lahf
cld
or
gs
sbb
orl
mov
cmp
aad
mov
mov
push
pop
adc
xchg
mov
push
dec
out
push
test
cli
push
fnstsw
jno
iret
xor
and
mov
lods
rcrl
test
xchg
inc
push
xchg
xchg
mov
shll
adc
adc
inc
adc
xchg
mov
fisttpl
add
fisttps
and
repnz
mov
shl
movsl
or
ret
push
push
out
stc
and
scas
cmp
adc
jno
xchg
adc
adc
inc
clc
dec
pushf
dec
push
into
fwait
test
mov
in
ja
inc
stos
push
rcr
gs
adc
pop
popf
xlat
xor
xchg
xchg
pop
cmpsb
out
mov
scas
in
clc
push
ss
popa
pushl
fstl
nop
daa
leave
xorl
inc
movsl
pop
rclb
fdivl
dec
jbe
sub
outsb
cmp
dec
lret
aam
jmp
inc
cmc
decl
mov
imull
js
roll
mov
cmp
cmpsl
jnp
xchg
test
out
mov
jb
out
cmp
mov
pop
xchg
dec
mov
rclb
cltd
inc
scas
lahf
adc
dec
cmpb
shlb
scas
mov
movsl
adc
sbb
sbb
iret
xchg
push
out
lods
cltd
lret
lds
rcll
and
aas
jmp
push
imul
fcmovnb
jb
add
test
mov
mov
int
inc
xchg
cmp
je
xlat
cmc
fisubl
sti
xor
add
xchg
dec
fidivl
and
mov
fmull
mov
cwtl
dec
cmp
push
pop
sti
mov
xlat
fdivl
cmp
push
sbbl
jae
dec
dec
cmp
push
sub
scas
rcrb
jmp
lahf
push
fldl
push
sbb
aas
jle
stc
jg
xor
mov
lahf
adc
cmp
out
sbb
and
jl
mov
mov
fldcw
mov
jbe
fistpl
add
int
and
jae
jecxz
mov
lods
inc
jne
lahf
clc
es
pop
icebp
xchg
lea
mov
shld
mov
xor
lods
fcomp
icebp
sti
daa
out
addr16
jns
imul
cwtl
ret
stos
fldl
lock
push
lods
mov
cmp
test
lea
jae
sbb
out
mov
dec
jbe
or
lock
outsb
lock
fistpl
mov
notb
push
add
out
mov
push
push
orb
gs
repnz
mov
mov
jl
jge
mov
mov
sbb
sub
rorl
icebp
add
mov
push
pop
push
ja
pop
add
mov
into
test
popa
mov
push
adc
jmp
bound
xchg
adc
sub
movsb
inc
adc
jl
adc
sbb
push
int3
loopne
adc
pop
mov
arpl
pushf
fstps
call
mov
pop
std
xor
push
dec
test
das
pop
cmp
jl
or
add
rolb
inc
popf
adc
sub
and
push
cltd
ja
sbb
je
cmp
es
cmpsl
add
cwtl
or
mov
dec
add
and
std
adc
and
inc
mov
adc
fwait
push
mov
in
pop
data16
popa
loop
outsb
pop
ret
push
imul
cmpl
loope
pop
outsl
aas
hlt
in
jns
push
cmp
dec
dec
fsubrl
scas
into
xlat
add
ljmp
cld
adc
sbb
mov
stos
dec
in
or
adc
inc
pop
stos
add
dec
jecxz
add
test
jbe
je
imul
into
push
in
clc
inc
mov
movsb
popa
add
movq
mov
rcr
mov
mov
ja
sub
mov
ret
inc
sarb
jmp
mov
mov
push
cmp
jmp
xor
sti
dec
call
hlt
cltd
pop
xchg
insb
in
loopne
mov
test
push
push
repz
or
xchg
sti
in
test
push
sbb
out
sbb
ljmp
push
add
cmp
ds
pop
cmp
pop
adc
pop
ljmp
jae
add
addr16
fwait
ret
xor
adc
or
into
xor
add
int3
push
pop
jp
pop
pinsrw
divb
sub
enterw
loope
sbb
lret
jno
call
bound
add
call
insl
add
sub
in
jmp
xlat
outsl
addr16
jns
stos
push
xor
sar
xchg
pop
sub
cltd
imul
jo
shlb
insl
adc
mov
mov
inc
sbb
lcall
leave
imul
or
clc
js
rolb
imul
adc
je
sbb
call
xchg
and
cmp
scas
inc
mov
jle
mov
and
sub
pop
pop
enter
rol
lea
xor
xchg
cmp
fimull
dec
xlat
jle
push
and
mov
fisttpll
and
rcrb
add
sub
cmp
mov
test
cs
xchg
jecxz
outsl
mov
push
lods
inc
int
aad
dec
clc
jo
adcb
enter
lahf
add
rcl
lahf
mov
out
jmp
cld
jb
sub
fidivl
ljmp
ret
pusha
enter
sub
aaa
popa
mov
dec
cmp
jno
xlat
fwait
call
jmp
dec
ret
shll
loopne
xchg
cmp
std
jmp
cmp
xlat
dec
loop
fs
shll
adcb
aad
add
nop
aaa
mul
mov
test
iret
push
ret
add
dec
mov
xor
mov
lret
xor
mov
and
bound
ss
sahf
mov
int
fdivrl
cmpsl
inc
int
jnp
mov
xor
or
mov
and
xchg
cltd
insb
ds
cmp
test
popf
lods
data16
sub
xchg
pop
pop
or
cmpsl
loop
loop
cli
adc
push
push
xchg
xor
sbb
into
xor
pop
loope
fwait
push
stc
fnstcw
mov
dec
cmp
cmpb
in
adc
test
sbb
fldl
enter
pop
xor
sbb
sbb
jmp
pop
out
int3
clc
out
jg
push
pusha
mov
inc
jg
rorl
lock
lahf
dec
and
xchg
sbb
cli
mov
icebp
mov
les
repz
jmp
push
lret
sarb
xchg
and
xor
inc
dec
movsb
sbb
sub
insb
mov
mov
mov
imul
fcoms
es
pushl
mov
xchg
sti
int3
je
pusha
or
mov
out
pop
fs
stc
mov
and
iret
fs
mov
rolb
out
xor
mov
dec
gs
sub
outsl
adc
movsb
cmc
cltd
testl
lcall
les
dec
or
das
jmp
lds
jg
lret
movsb
mov
lods
mov
push
shrb
mov
rcll
pop
dec
push
mov
hlt
lahf
xor
rcrl
std
repnz
stos
dec
pop
mulb
mov
dec
stc
dec
jmp
or
mov
push
mov
lock
test
stc
pop
jge
stos
xorl
jmp
mov
imulb
dec
and
data16
rcrb
sbb
fwait
popa
int3
sti
and
mov
stc
sarl
mov
xchg
mov
push
inc
adc
xlat
pop
data16
mov
iret
out
imul
popa
cmp
lock
inc
add
imul
push
pusha
jne
mov
cwtl
mov
icebp
mov
fmull
data16
fmul
sbb
mov
sub
xchg
xchg
mov
jno
and
in
cmpsb
cmp
fwait
xchg
lret
pop
sahf
cltd
adcl
outsb
popf
and
loope
int3
jno
fdivrs
mov
jle
push
leave
jno
xlat
pop
mov
stos
dec
adc
sbb
or
pop
inc
stos
lret
mov
imul
jno
gs
out
mov
push
pop
lods
inc
cmc
filds
xor
flds
mov
cmpsb
cmpsl
mov
mov
cmc
jae
adc
push
and
cld
pop
dec
imul
and
and
jg
in
push
test
mov
push
movsl
mov
mov
sub
and
test
lahf
xchg
mov
iret
sbb
mov
xchg
jl
push
mov
mov
dec
dec
lds
fiadds
mov
mov
ret
loopne
out
pop
mov
cwtl
and
inc
mov
xlat
rorl
out
sbb
cmp
inc
shrl
jo
fdivl
xlat
and
xor
cli
jne
sbb
jns
out
dec
insb
sbb
jmp
aaa
adc
outsb
push
push
push
cmp
sub
cmc
fidivs
or
and
test
sbb
sbb
push
arpl
je
mov
mov
iret
stos
movsb
inc
pop
mov
sbb
push
xchg
shll
inc
ja
sbb
sub
cmp
inc
in
jne
js
pop
fsts
into
mov
jle
das
je
push
or
and
rcll
nop
sbb
js
inc
inc
call
ds
or
test
or
ficoms
pop
mov
dec
les
and
repz
sbb
sarl
inc
push
xchg
push
out
jge
popa
mov
std
jg
imul
lock
subb
adc
dec
mov
sub
jl
insb
out
jge
hlt
rcrl
out
fwait
xchg
cmc
mov
cmpsb
push
scas
cmp
int3
dec
xor
dec
nop
mov
out
pop
loop
into
fsubl
mov
xor
inc
or
rorb
test
inc
inc
decb
sub
gs
imul
int3
std
and
xor
out
mov
sar
ja
xor
mov
pop
xchg
dec
in
jmp
cltd
mov
lea
adc
jmp
imul
bound
lahf
add
arpl
cmp
cmc
inc
inc
sub
ja
push
dec
inc
loopne
lods
jne
sahf
pusha
int
cmpsb
stos
sbb
daa
cmp
jp
in
or
pop
imul
push
rol
adc
cmp
lahf
mov
mov
pop
stos
push
dec
cmc
xor
jb
jle
mov
jecxz
mov
mov
fisubl
jo
inc
cmc
in
lds
xor
imul
push
mov
sbb
add
pusha
bound
jge
aas
or
outsl
inc
rcrl
or
pop
pushf
lcall
dec
jnp
andb
or
sub
pop
fsubrl
lahf
xor
jbe
outsl
pop
sub
call
and
and
out
addr16
ret
in
add
xor
repz
daa
cmp
arpl
mov
leave
adc
andb
pop
jge
dec
jle
sbb
push
pop
jns
mov
cmpsl
movsl
ret
dec
jno
sub
sub
dec
xor
fisttpl
or
fidivs
mull
mov
mov
sahf
insb
mov
jno
adc
mov
pop
out
es
into
clc
xor
addr16
lcall
xchg
push
fcompl
jnp
sub
ror
cmp
ljmp
dec
jo
movsb
mov
adc
pusha
ja
sub
cmp
aas
dec
test
sub
clc
and
outsb
lods
nopl
aas
mov
or
sub
add
leave
and
mov
lcall
add
sbb
xchg
push
lahf
inc
aas
sbb
sub
sub
mov
mov
int
add
and
std
or
xchg
stos
push
mov
mov
jae
inc
bound
push
sbb
lock
popf
lret
and
dec
mov
push
cmpl
scas
daa
add
jl
pcmpeqw
jmp
sti
sbb
scas
push
xchg
xor
fistl
lret
xor
cmc
icebp
add
int3
inc
push
bound
jbe
inc
or
js
inc
and
dec
cmp
fsubrl
pop
xor
mov
xchg
movsl
mov
lcall
xchg
data16
dec
test
aas
out
mov
inc
fdivl
sub
les
cmc
aam
or
lret
popf
push
xor
adc
iret
movsb
xor
push
ljmp
fwait
jbe
call
loop
push
jle
test
das
pop
jmp
in
mov
mov
push
xchg
movsb
int3
ss
jae
divl
rorb
rorl
push
xor
mov
mov
fdivl
adcl
xor
into
shrb
sbb
mov
jmp
mov
dec
repnz
imul
test
lret
dec
cmp
and
add
lahf
jae
adc
mov
xchg
sti
mov
into
loopne
cmpsl
inc
mov
test
je
xchg
mov
rclb
repnz
pop
setle
push
andb
xor
sub
stos
xchg
std
ficomps
pushf
in
xchg
xor
aas
fstps
adc
lret
mov
push
dec
pop
mov
rol
fwait
cs
cmp
sbb
push
rcrb
sti
and
push
mov
sahf
ja
dec
inc
mov
push
adc
dec
je
orb
pop
pop
dec
xchg
into
xchg
rcrl
and
jg
dec
test
in
syscall
pop
pop
gs
inc
into
cmp
test
cmpsb
xor
fsubrs
mov
push
faddl
and
cmp
gs
mov
inc
pop
fcmovb
addr16
mov
fsubl
lea
add
insb
clc
icebp
mov
push
ret
jmp
push
testl
fiaddl
insb
push
cwtl
sub
mov
in
rcrb
dec
jg
sahf
adc
push
in
imul
and
sub
mov
xor
mov
and
jnp
push
mov
mov
aad
rcll
push
in
or
lods
repnz
jbe
ja
sbb
push
fstl
es
dec
stos
jle
popa
pop
pop
ret
add
adc
pop
jno
sbb
out
pusha
xchg
ds
push
mov
sub
pop
mov
sti
loope
jg
cwtl
andb
cmove
adc
inc
sahf
je
ffree
test
lds
xchg
shll
insb
cmp
gs
jle
jnp
out
adc
outsl
sub
mov
fcoml
adc
enter
and
jecxz
ja
cs
jge
xor
mov
and
and
mov
insb
jne
shl
dec
jnp
unpckhps
pop
aas
es
std
push
jo
test
fimull
sbb
xor
in
xorb
gs
mov
js
outsl
lahf
fcoms
cli
adc
and
inc
mov
mov
outsb
loopne
push
and
imul
adc
enter
pop
int3
mov
dec
mov
xchg
mov
push
mov
push
ljmp
pop
das
sub
add
push
jne
je
loopne
test
nop
into
into
loope
fwait
push
jbe
jecxz
mov
jb
or
sub
jne
in
xor
imul
mov
addr16
int3
js
dec
sub
sub
les
ds
mov
jle
pop
jge
jmp
cs
jo
cmp
or
mov
xchg
dec
sahf
lcall
ss
cmpl
add
sub
xor
cmpl
enter
mov
cmp
adc
pop
xlat
push
dec
insb
mov
fwait
xchg
sbb
adc
fmuls
pop
repnz
mov
push
dec
mov
cs
cmp
xor
or
out
sub
xchg
lds
push
cmp
add
mov
cmpsb
outsl
ds
push
adc
xor
mov
sub
push
mov
ljmp
pop
jmp
adc
sub
roll
cmp
pop
sub
inc
mov
dec
out
jo
inc
jge
mov
out
cmp
iret
popa
fcom
stos
mov
pop
arpl
es
lds
dec
int
pop
sub
mov
jbe
jns
ja
push
adc
test
xor
cmpl
mov
xchg
adc
mov
js
popa
jbe
dec
cmpsl
xchg
fmuls
inc
aas
push
jmp
mov
sbb
dec
xor
pop
mov
gs
imul
jg
loop
les
cmpsl
mov
repnz
test
ljmp
lahf
bound
clc
cmp
jno
jl
mov
xor
std
mov
sbb
dec
jnp
or
xchg
fstl
xchg
sbb
or
stos
dec
push
mov
dec
dec
out
push
into
xchg
pop
orb
leave
popf
push
mov
jns
push
xchg
adc
jl
adc
and
nop
mov
cli
add
nop
xchg
out
xor
sti
add
fnstcw
mov
ds
addr16
inc
and
lahf
push
fnsave
xor
das
sti
jno
push
mov
mov
ds
ret
in
addr16
sbb
jecxz
xor
jmp
pop
jl
xor
outsb
dec
sbb
jl
mov
pop
mov
mov
int3
int3
stc
sbb
push
adc
cmp
addb
cli
ret
push
insb
mov
jle
and
inc
sbb
or
mov
xchg
sarl
shlb
mov
scas
fistl
adc
adc
mov
inc
fwait
std
in
test
pop
test
pop
mov
jne
mov
ss
push
add
push
lods
aam
xchg
dec
push
cld
mov
stos
jo
aam
push
mov
popf
xchg
pusha
sbb
cmp
push
outsb
pop
add
sub
lret
aaa
cmpsb
mov
sub
ja
and
adc
sbb
lret
dec
cmp
lcall
test
sbb
out
pmuludq
aam
out
pop
loope
jge
rcrl
cwtl
mov
aaa
iret
dec
inc
mov
inc
pop
or
inc
xchg
stos
dec
and
xchg
in
pop
test
scas
dec
into
or
pop
inc
lahf
push
and
mov
popf
sbbl
hlt
jmp
mov
xchg
jmp
add
std
les
mov
lds
inc
sub
xor
iret
inc
pop
and
je
fsubrs
adc
xchg
xchg
mov
adc
dec
lods
or
push
dec
das
pop
lahf
sub
xor
mov
mov
or
fisttps
repnz
and
cmp
jns
fdivrs
mov
test
outsb
mov
mov
icebp
mov
dec
lock
sbb
xchg
dec
pop
popf
and
or
xchg
pop
adcl
fadd
inc
rcl
stos
repz
in
loopne
lea
insl
test
sbb
push
pop
push
gs
pop
adc
daa
mov
xchg
sahf
sbb
nop
insl
xchg
lahf
xor
std
and
jp
sti
pop
in
movsb
sbb
push
testl
test
adc
jno
push
cmp
ds
test
in
outsb
inc
insl
testb
xchg
popa
aas
dec
leave
sub
das
mov
push
in
cmp
pop
sub
clc
sahf
in
sub
movsb
scas
lods
mov
js
xchg
push
sub
mov
xchg
subb
or
dec
push
subb
mov
iret
inc
pop
clc
xor
cmpsl
outsl
push
or
jno
sbb
adc
pop
pop
jle
jo
lock
movl
mov
icebp
mov
clc
push
and
jge
outsb
stos
lods
scas
out
jno
enter
cld
adc
sbb
inc
not
or
inc
push
movb
test
mov
sub
loop
inc
je
push
lahf
fnstsw
rcrb
cmpsl
repnz
pushf
lods
inc
or
or
add
push
rorb
outsb
push
push
push
jg
hlt
outsb
jge
cmp
stc
aad
movsb
and
inc
out
pushf
and
sbb
loope
jne
jmp
mov
mov
add
xchg
inc
or
cmp
xor
cmc
xchg
enter
sarb
popa
aas
xchg
js
xchg
jns
fdiv
xchg
sub
add
movsb
push
push
jg
cs
shlb
in
mov
aad
hlt
or
xchg
sub
dec
inc
insl
jbe
jno
fisubl
test
dec
xchg
int3
xor
cmc
mov
xor
mov
cmp
mov
cltd
jg
call
push
int
pusha
xchg
or
cmp
mov
ds
fistps
pushf
sbb
and
mov
add
aad
test
outsl
jbe
pop
dec
inc
outsb
inc
and
pop
and
and
mov
xchg
jnp
into
push
jnp
mov
mov
fnstenv
je
jnp
xchg
xor
cltd
or
jnp
and
notb
dec
mov
je
xchg
lahf
mov
call
pop
sbbl
int
movsb
outsl
int3
movhps
pop
jl
ror
js
jb
push
and
jns
dec
cli
pop
add
sbb
lds
loope
lret
and
jle
and
xchg
andb
sbb
xchg
mov
adc
inc
sar
out
in
push
and
fdivs
pop
and
in
push
enter
jo
jmp
mov
push
aaa
inc
dec
adc
cli
add
movl
mul
xchg
inc
mov
roll
inc
fs
aaa
popf
push
into
xor
add
mov
pop
jle
leave
push
hlt
xchg
ret
in
mov
inc
cmc
sub
pop
mov
fwait
addr16
out
std
in
repnz
rorb
paddsw
dec
mov
scas
xor
mov
fistl
or
or
jmp
xchg
mov
push
aam
push
pop
cmp
arpl
inc
xor
xchg
ret
sbb
add
sub
dec
test
mov
cmpsb
xor
pop
outsb
xor
jb
sub
xlat
lods
pushf
test
push
dec
or
lods
lahf
int3
fdivrl
iret
lds
bound
mov
loope
pop
xlat
pusha
movsb
pop
mov
or
mov
addr16
inc
les
jle
fdivl
push
push
lock
addr16
rorl
xlat
pop
movsl
cltd
int
pop
ret
jge
ljmp
mull
add
lcall
xchg
fidivrl
decl
sbb
test
or
popf
xchg
pop
call
jo
xchg
add
rorl
nop
ja
int3
jp
cltd
lahf
mov
xchg
out
aam
ja
jmp
dec
addl
shll
jecxz
sub
mov
xchg
adcl
mov
cld
and
sub
rcl
shll
insl
add
cmp
xor
inc
mov
mov
ja
stos
lods
dec
mov
and
popa
add
sub
pop
and
inc
fcompl
cmp
mov
mov
xchg
std
mov
mov
sbb
lret
mov
lret
or
adc
int3
dec
mov
lods
stos
clc
cmp
je
jmp
sbb
mov
sbb
xchg
inc
test
lcall
addr16
xchg
and
cmpsl
pop
or
add
mov
pop
fists
movsl
rcll
popf
push
jo
xchg
stc
mov
jae
push
pop
or
icebp
pop
rcrb
sub
cmp
in
lods
lea
push
test
in
sbb
cmpsb
xlat
adc
xor
jge
jge
sahf
mov
js
daa
sbb
sbb
or
pop
fwait
stos
inc
loope
xchg
dec
cld
xchg
pop
cli
rcll
cmpb
and
les
or
das
pop
and
std
ja
test
mov
xor
sbb
nopl
bswap
cwtl
push
es
popa
add
pusha
push
adc
pushf
cs
mov
pop
adc
cmpsl
test
add
push
push
hlt
test
mov
loop
push
popa
dec
or
jae
mov
dec
pop
pop
jg
adc
push
bound
out
jne
cld
sti
outsb
in
push
dec
jge
testb
loopne
cs
cld
jo
sbb
and
sub
arpl
mov
movsl
mov
pop
ret
push
mov
fucomi
mov
repz
jnp
mov
adc
xor
into
xchg
ljmp
mov
sbb
ja
in
ds
shl
jmp
scas
movb
mov
cmpw
adc
mov
ja
and
mov
cmp
mov
ja
adc
ja
sub
loopne
negb
jge
xchg
mov
mov
negl
mov
dec
sbb
in
lret
mov
xchg
jge
cmp
mov
jne
out
mov
addr16
cmp
repz
jns
sar
rcll
mov
aas
fbstp
xor
lfs
movsb
xor
cmpsb
cli
inc
fidivl
mov
fs
int
mov
xchg
adc
loop
add
mov
fldl
data16
iret
andl
mov
int
mov
push
rorl
or
ret
arpl
fdivs
cmp
hlt
pop
mov
push
lret
das
mov
jp
inc
lea
clc
aad
lods
xchg
mov
sti
sub
push
fnsave
sub
mov
adc
xlat
std
dec
sbb
pushf
jnp
add
mov
mov
in
mov
push
jp
mov
pusha
stos
bound
setno
lods
in
in
add
add
or
inc
sbb
xchg
xor
hlt
ror
cmpsl
mov
jecxz
jmp
adc
in
addb
pop
jecxz
lds
add
xor
mov
mov
ret
shll
mov
repz
mov
sbb
inc
cmpsb
fdiv
pop
je
insl
sbb
sti
test
cmpsl
popa
xor
dec
sub
lret
fcomi
ret
mov
in
inc
add
lods
adc
adc
adc
push
int3
fwait
das
notl
repz
sbbl
pop
repnz
jb
mov
sbb
imull
cltd
mov
lcall
lods
je
shlb
xor
movsl
sbb
mov
stc
push
push
jae
adc
inc
xchg
sub
pop
subb
mov
dec
gs
xchg
pop
pop
add
outsl
cltd
add
scas
insl
adc
mov
pop
ficoml
aad
xor
sbb
insb
into
negb
dec
fnsave
test
xchg
xchg
mov
aad
and
jb
cld
lea
xlat
jbe
cmpsb
jge
loopne
movl
mov
mov
push
fistpl
adc
out
push
pop
lret
push
push
in
daa
xchg
ficoml
cltd
in
inc
mov
pop
jp
dec
jnp
adc
xchg
bound
push
leave
pop
pop
cltd
pushf
clc
and
or
fisubrs
icebp
test
leave
iret
neg
adc
aas
sub
add
outsl
mov
aas
shll
cs
add
addr16
sbb
shlb
out
sbb
imul
xchg
aas
sbb
xchg
sub
loopne
sbb
in
pop
cmp
sbb
ret
add
je
loop
or
orl
jmp
add
sub
fdivrl
mov
jne
rclb
mov
fisubs
loopne
inc
adc
sbb
imul
push
add
popf
mov
or
mov
xor
popa
or
insb
xchg
or
lock
cmp
push
test
scas
mov
inc
or
mov
aaa
mov
lret
daa
xchg
pushf
mov
pushf
imul
pop
test
mov
fwait
xchg
mov
adc
xor
adc
push
les
mov
pop
add
and
cltd
or
test
mov
insl
add
arpl
outsl
sbb
xchg
cmp
out
push
jle
dec
test
jg
jle
out
push
xchg
mov
stc
test
hlt
cmp
aas
scas
or
xor
cmpl
xor
mov
push
pop
mov
cltd
adc
fiaddl
sub
xor
rcr
repz
mov
push
pusha
out
pop
divb
sub
leave
pop
popf
hlt
repz
dec
mov
cltd
jg
inc
mov
dec
lahf
mov
outsl
push
in
dec
pop
mov
scas
lcall
hlt
test
sub
ficompl
mov
fldenv
flds
sbb
pop
in
dec
sti
inc
repnz
sbb
outsl
jp
lahf
push
fwait
jae
lret
mov
in
push
and
js
mov
lahf
lret
dec
aaa
arpl
mov
sub
xchg
in
and
push
leave
stos
pop
mov
inc
ss
jnp
sub
mov
fwait
movsl
cmpl
gs
fildll
out
das
pop
shlb
xchg
push
or
or
pop
inc
in
cmp
pop
into
mov
jno
or
sarb
pop
je
gs
add
sbb
sub
and
pop
imul
add
pop
scas
int
pop
inc
jl
fs
aad
mov
mov
jb
cmp
inc
push
pushf
push
mov
fistpl
icebp
dec
addr16
insl
xor
push
xor
lret
sub
dec
ja
sti
mov
mov
lret
jle
sbb
ret
notl
fidivs
inc
lret
and
movsl
outsb
mov
sahf
fdivrs
push
insl
jbe
mov
popf
insl
mov
mov
sbb
xchg
and
test
push
xchg
xor
pop
and
or
sbb
loope
pop
in
xchg
fiadds
inc
cmp
jmp
pop
jecxz
stos
outsb
lea
ret
xchg
rorl
mov
rcl
jae
dec
into
lea
push
mov
mov
cmp
and
add
test
jecxz
push
xchg
mov
fisubrl
pop
loop
push
inc
mov
mov
mov
mov
movsb
cmp
push
nop
lahf
pop
inc
in
icebp
mov
hlt
popf
call
mov
addr16
sub
inc
xchg
cltd
pop
mov
jg
or
and
imul
jae
dec
cmp
dec
xchg
mov
dec
inc
push
mov
movsb
dec
cmp
mov
ficomps
push
lret
imul
icebp
pop
xchg
jmp
pop
push
push
aas
sub
test
jl
hlt
mov
sti
jo
sub
inc
in
add
cmp
and
adc
jg
insl
pop
add
or
pop
mov
xor
scas
inc
adc
jp
sahf
loope
or
imul
xor
sub
adc
jb
roll
mov
inc
jl
mov
hlt
or
jo
mov
sub
mov
mov
and
jae
pushf
sbb
in
mov
pop
iret
cli
shr
dec
pop
gs
jp
pop
stos
out
dec
jbe
pusha
repnz
xchg
push
lcall
xor
add
dec
std
push
int3
jae
sub
aam
les
cmc
sbb
sti
xchg
sbb
test
dec
mov
mov
xchg
out
call
pop
xor
cmp
imul
sub
lock
add
mov
adc
aas
cltd
jb
pushf
dec
iret
testl
mov
mov
loope
jns
pop
pop
xor
roll
inc
mov
popa
stos
pop
call
leave
inc
xorb
or
adc
mov
dec
outsl
inc
xor
aas
lea
aas
push
jl
dec
loop
mov
mov
cmp
out
cltd
aad
jecxz
cmp
jp
jns
cmp
sbb
and
cs
les
mov
mov
sub
icebp
jnp
or
into
int3
xchg
jl
jg
lahf
pop
pop
add
cmpsb
and
das
pop
repnz
adc
pop
inc
les
xor
enter
cmp
jmp
ds
xlat
loopne
cs
or
and
or
scas
hlt
sbb
xorl
mov
pop
cli
pop
pop
mov
xchg
jno
bound
pushf
push
pop
push
pop
nop
inc
or
jae
inc
nop
pop
xor
sub
add
jnp
in
xchg
dec
rolb
rcr
inc
pushf
shrb
cmpsb
int3
leave
adc
mov
cmc
shl
mov
cltd
rcrl
push
mov
cmp
cmp
iret
orb
stc
sbb
out
push
jl
int3
xor
mov
xor
cmp
mov
and
cltd
pop
aam
js
data16
jmp
cltd
add
faddp
scas
mov
adc
mov
jb
inc
sub
in
ds
mov
xor
pop
xor
mov
andl
add
dec
int3
jmp
sbb
dec
jnp
arpl
push
xor
jmp
icebp
add
movsl
mov
cmp
pop
adc
add
cs
repz
sbb
or
movsb
or
arpl
or
xchg
mov
or
fsubr
data16
in
mov
fsubl
inc
push
mov
xor
and
add
divl
jno
ror
inc
cmp
in
out
mov
fwait
in
scas
lcall
dec
pop
cmp
leave
insb
imul
pusha
mov
and
lods
pop
mov
stos
mov
and
xor
enter
loope
push
sbb
sete
mov
adc
mov
pop
and
not
adc
and
icebp
mov
cmp
mov
add
outsl
mov
call
mov
dec
stos
and
sub
and
sbb
push
cmp
movsb
push
pop
add
pushf
inc
jae
xchg
inc
push
insb
mov
sub
scas
lcall
mov
push
mov
adc
into
test
push
xchg
xchg
cli
addl
ljmp
loope
rorb
mov
imul
popf
pop
inc
adc
addb
xchg
push
int
mov
push
imul
out
in
jg
sbbb
push
pushf
clc
negl
jnp
or
or
mov
lods
lcall
dec
push
test
jae
add
mov
ss
dec
inc
pop
addb
cld
pop
mov
xchg
loope
adc
out
push
mov
mov
daa
lret
mov
mov
bound
dec
pop
cmc
xchg
inc
mov
lds
flds
stc
mov
xchg
adc
inc
or
fdivs
sub
insl
add
push
or
push
lods
mov
enter
sahf
push
cmp
js
mov
pop
inc
inc
dec
in
and
test
hlt
les
cs
and
inc
jbe
jo
cmp
cli
sub
push
sbb
enter
mov
xchg
int
dec
hlt
xchg
mov
inc
add
dec
mov
dec
mov
out
cmp
and
in
les
mov
mov
dec
insl
adcl
mov
adc
mov
leave
mov
or
leave
dec
int3
dec
dec
cmpb
int3
sub
lahf
xor
sub
std
jge
or
dec
jp
test
or
into
and
lods
jno
add
out
sub
out
pop
ja
loop
out
mov
push
js
test
cltd
aam
loope
pop
sbb
in
leave
mov
outsb
bound
orb
xor
xchg
inc
lock
jnp
jge
mov
stos
push
xor
stos
push
nop
call
pop
rcl
add
fidivrl
add
push
mov
add
lods
dec
cs
mov
out
scas
cli
test
jge
adc
les
mov
mov
cmp
nop
cmp
sub
popa
sub
ds
divb
arpl
sbb
stos
scas
sbb
mov
adc
ja
test
mov
push
mov
stc
scas
les
imul
jo
inc
stos
jmp
sarb
enter
cltd
xchg
icebp
cmpsb
jge
fstps
lcall
repnz
mov
test
sbb
clc
xchg
daa
push
jecxz
sbb
outsl
std
jge
mov
rcrl
cmpsl
mov
in
mov
sbb
mov
rcrl
adc
fldt
sub
rolb
or
aas
shrl
in
mov
das
aad
shll
adc
mov
jo
dec
in
sub
test
popa
cmp
cmpsl
fwait
pop
lret
sbb
jecxz
repnz
cmpl
and
jl
lock
sub
mov
and
in
adc
scas
cmp
inc
add
jle
inc
in
imul
nop
daa
loop
inc
mov
push
insl
sti
or
test
test
das
push
and
pop
loop
mov
inc
std
sub
shr
xchg
or
ret
rolb
fsqrt
mov
loopne
inc
std
and
mov
jbe
cli
es
int
leave
fidivrs
fimuls
ss
dec
mov
sub
aad
aad
test
push
into
add
into
sub
inc
test
test
sahf
mov
ds
dec
shlb
cmpsl
mov
shrb
mov
mov
in
enter
sub
pop
fmul
les
fistpll
loope
dec
iret
push
nop
ljmp
and
sti
loope
mov
fsubs
nop
inc
cmpsb
cmp
out
out
jbe
negl
loopne
sub
neg
rcrb
cmp
repz
daa
jle
xchg
rolb
xlat
inc
mov
xchg
dec
rorl
inc
test
xchg
lds
sbb
test
push
or
sti
pop
and
test
out
les
mov
loopne
add
jecxz
out
mov
jecxz
xchg
jno
lret
test
les
daa
cmpsb
idiv
mov
push
push
sbb
sub
test
jne
lret
test
js
inc
shrl
sbb
in
push
xchg
jns
xchg
sub
jae
jmp
outsb
jge
mov
mov
jne
mov
add
insb
es
mov
mov
jmp
mov
push
xor
push
cmp
dec
mov
pop
push
jno
xchg
jl
es
fnsave
cmpsl
pushf
in
or
dec
jno
sbb
push
inc
inc
in
dec
sub
pop
adc
mov
jge
test
int
and
ljmp
clc
mov
adc
es
adc
rcrl
mov
into
or
push
mov
pop
mov
lcall
sub
fisubs
push
push
js
add
insb
push
and
fcoml
and
inc
stc
dec
addl
xor
test
stos
aam
push
cmp
fbstp
pop
xor
inc
inc
dec
test
mov
add
dec
xor
sahf
es
add
jbe
mov
mov
pop
cmpsb
ret
dec
testl
sbb
jg
xorl
nop
jmp
pop
shrl
jae
mov
and
jge
mov
sbbb
add
shrb
lea
jne
mov
decl
add
jns
mov
xlat
inc
pop
adc
dec
fs
scas
push
mov
mov
popa
dec
mov
ret
cmp
outsl
xchg
sub
loop
aam
add
inc
xchg
inc
xor
mov
push
jne
rcr
sbb
jae
jb
inc
cmpsb
clc
scas
ret
cmp
mov
mov
into
loopne
dec
pop
inc
dec
test
inc
push
mov
push
mov
aad
xchg
mov
mov
push
ret
dec
xchg
adcl
cmp
jnp
addb
mov
mov
sub
push
cmpsb
in
orb
xor
in
cmpb
jb
cwtl
xchg
lea
push
lods
fisttpl
iret
cmp
rdtsc
jg
imul
pop
int
xchg
test
sti
sti
test
sub
mov
sbb
cs
push
add
lea
add
sti
imulb
shrb
or
lds
cmp
dec
inc
ss
xchg
sub
adc
shll
add
pop
push
fdivrs
icebp
test
pop
sub
pusha
mov
fs
push
and
pop
subb
and
out
je
dec
push
test
inc
sub
fidivrl
lret
xchg
out
dec
test
sahf
pop
mov
cmpl
sbb
mov
ja
pop
and
negb
sbb
adc
test
stos
imul
mov
gs
jg
je
out
xchg
lahf
xchg
ja,pn
jge
aad
push
sar
mov
decb
loope
sbb
jle
stc
cs
insb
fs
int3
pop
out
fwait
inc
pop
inc
das
aam
mov
and
call
loop
mov
out
sub
ret
xor
mov
in
sahf
push
push
rorb
add
in
aam
cmpsb
jnp
rorl
cmp
stos
shll
add
xchg
enter
xchg
dec
lock
lds
loop
sbb
je
xchg
es
mov
xor
mov
scas
out
add
cltd
outsb
aaa
int3
pop
aam
cltd
icebp
dec
pushf
dec
imul
xchg
aad
jb
jnp
ret
and
push
and
add
sbb
repz
lret
sbb
pop
dec
iret
jmp
pop
popa
subl
arpl
mov
jnp
xchg
mov
push
and
cmpsb
imul
jne
mov
cmp
and
mov
inc
in
fidivrs
js
cmp
pushf
and
inc
mov
or
cmpsb
hlt
xor
out
mov
mov
xchg
fisttps
pop
cmp
push
and
aad
jne
or
sti
adc
and
add
into
lea
cmpsl
mov
inc
stos
adc
inc
sub
out
lods
dec
das
pop
xchg
jecxz
push
mov
jb
add
mov
arpl
out
test
bnd
cmp
loope
pop
push
mov
adc
movsl
xor
sub
nop
push
mov
push
decb
dec
int3
lret
loope
and
insl
test
sub
mov
push
rcll
fsubrl
inc
jae
fistps
push
addl
addl
enter
xchg
scas
inc
xchg
movsb
je,pn
mov
mov
add
jns
mov
test
mov
adc
sbb
imul
fcomps
cmc
jl
jl
mov
pop
lods
shll
test
ffreep
aas
mov
sbb
inc
xor
mov
sbb
inc
xchg
pop
shlb
lock
es
xor
je
push
cmp
xchg
movsl
lahf
hlt
jg
xor
icebp
mov
mov
inc
dec
mov
add
add
repz
mov
pop
mov
mov
ja
imul
or
mov
jne
stos
xchg
outsl
push
arpl
mov
adc
xchg
adcl
xor
add
xor
push
pop
and
jp
mov
pop
fiaddl
xchg
dec
shll
jmp
cwtl
leave
jmp
sbb
jnp
mov
mov
pusha
pop
cmp
rcpps
outsb
fimuls
loop
push
sub
xlat
inc
outsb
loop
cmp
inc
call
lock
push
ret
lret
outsb
fists
dec
cmp
out
sbb
clc
insl
mov
fucomp
mov
leave
mov
pushf
xor
pop
dec
push
and
xchg
sbb
sti
add
lock
aam
inc
adc
sub
rcrl
movsl
cs
mov
or
mov
rclb
lret
into
or
xor
pop
lods
repnz
sub
pop
call
pop
call
js
fs
push
aaa
pop
mov
andl
jnp
mov
out
or
out
lcall
sub
fistpll
push
es
mov
fwait
inc
xor
jne
mov
sti
sti
xlat
lods
jae
lds
push
call
xchg
jb
cltd
inc
test
and
mov
data16
sbb
call
cli
mov
ja
sub
xchg
push
cmp
ss
adc
push
cmpsb
jle
cmc
je
pop
cmc
fsubrs
dec
or
or
mov
imul
jb
push
sbb
cmpsl
pop
cmp
bound
lock
and
les
hlt
inc
into
std
out
adc
mov
ror
dec
gs
sub
xchg
push
or
add
sbb
fs
xchg
adc
and
adc
aad
inc
xor
push
adc
and
jne
enter
enter
out
mov
and
inc
fucomp
mov
repz
inc
sbb
mov
into
repnz
ret
sbb
cwtl
xor
add
call
leave
mov
sub
shr
out
dec
add
and
rcrb
push
out
insb
mov
jo
inc
push
ljmp
cmp
fsts
jl
mov
or
sub
mov
jecxz
popf
push
mov
push
push
sub
mov
pop
add
idivl
mov
push
xor
cmpsl
xchg
sbb
scas
jecxz
sbb
add
jnp
mov
loopne
cmp
and
and
je
cmp
movsl
fwait
sahf
xlat
pop
iret
ljmp
add
jae
xchg
dec
push
xchg
sub
andl
inc
outsl
dec
cmpsl
mov
outsl
or
sbb
aas
stc
stc
shlb
in
xor
repnz
cmp
insl
pop
or
adc
inc
mov
aaa
dec
sbbb
lods
cwtl
xchg
mov
mov
rcrb
ret
jo
jnp
add
shrb
dec
enter
lret
out
dec
sbb
push
adc
fs
jecxz
xchg
mov
pop
mov
push
test
xor
jl
cli
les
jae
cld
mov
in
adc
inc
mov
push
adc
jbe
xor
jl
inc
mov
lea
xorb
pop
test
adc
mov
pop
loopne
stos
sti
push
inc
xchg
fimull
shll
sahf
lret
pop
sub
xchg
jns
enter
pop
cmp
mov
push
cld
cmp
cmc
cmpsl
cli
test
sub
sbb
dec
imul
push
cmc
xor
cmp
mov
push
nop
xchg
out
inc
push
mov
sbb
mov
sbb
add
rcrl
xorb
ds
or
imul
or
push
jg
dec
loop
add
adc
insb
cs
mov
or
xchg
pop
ror
loop
pop
and
mov
sahf
stos
jne
mov
sti
cld
jo
mov
lret
ret
cwtl
fldl2t
sub
fists
mov
sete
test
jmp
lock
imul
out
mov
cltd
rolb
daa
pop
sbbb
getsec
cmp
lds
leave
dec
xchg
arpl
scas
faddl
mov
xor
arpl
lahf
mov
mov
in
xchg
pop
mov
mov
out
push
sub
pusha
jne
jg
fidivrl
add
sbb
into
xchg
mov
or
cmp
mov
dec
ret
ret
jmp
mov
or
into
in
cli
repnz
mov
xor
or
sub
or
mov
in
inc
test
and
cmp
faddl
and
bound
add
cmp
push
pusha
cmp
xor
rcll
scas
xchg
adc
clc
inc
and
dec
add
call
aad
mov
mov
push
cmpsb
jo
xor
and
sbb
adc
cmpb
push
cld
sbb
loopne
mov
fistps
jnp
push
inc
sbb
cvttps2pi
sbb
or
dec
sub
xor
xlat
mov
incb
std
adc
xchg
fbld
cmpsl
add
cs
add
repnz
jo
mov
mov
add
cltd
insl
out
std
popa
sbb
dec
sbb
pushf
cmp
jno
xchg
jnp
call
jnp
popa
mov
mov
fsubrl
mov
pop
adc
sub
rorb
xlat
popf
xchg
add
add
adc
das
jg
je
xlat
pop
sub
push
pop
or
and
subl
mov
mov
jae
mov
push
jno
mov
ficoms
and
jno
mov
jle
jp
sub
mov
sar
pop
mov
sbbb
das
push
or
cmpsb
fldl
xchg
outsl
repnz
jno
pop
sub
push
stos
and
jp
mov
pushf
push
cmp
push
andl
sbb
lods
adc
cmp
and
push
mov
scas
dec
insb
hlt
pop
sti
cmp
xchg
and
cli
clc
cmp
or
movsb
in
push
xchg
test
imul
jno
fcmove
mov
pushf
pop
cld
mov
test
sub
ret
add
fisttps
pop
movsl
movsl
mov
mov
jle
pusha
cmp
mov
inc
arpl
xlat
and
jne
mov
dec
jmp
rcrb
pop
icebp
inc
dec
outsb
lds
cmpsb
pop
push
cmp
idivl
repz
scas
cmpsl
jnp
xor
push
sbb
sbb
and
sub
fstl
addr16
mov
fs
or
sbb
popf
xlat
inc
iret
stos
pop
cmc
adc
and
sub
aaa
xchg
jns
fs
xchg
pop
sbb
pop
insb
jmp
pop
daa
dec
push
push
outsb
xchg
jmp
cwtl
js
or
push
les
xor
in
mov
movsl
mov
dec
cmp
shrb
repz
inc
out
xor
sbb
ficompl
pop
mov
push
dec
fwait
cmpsl
cmc
repz
das
mov
mov
mov
nop
js
and
mov
ret
repnz
das
ljmp
stos
inc
mov
jmp
cli
imul
and
jp
aaa
jo
outsl
sub
addr16
xlat
int
mov
aaa
mov
ds
lret
xor
jle
test
cmp
js
test
or
fisubrl
arpl
jg
push
mov
sub
rclb
loopne
popf
push
adc
test
or
sti
ljmp
out
sub
repz
test
rclb
mov
mov
frstor
pop
rolb
mov
cmp
xor
lea
xor
mov
cmp
xor
imul
inc
imulb
mov
pop
pop
out
sub
fsubrl
in
andl
cmp
out
and
lret
mov
aaa
insl
test
into
push
stc
add
xor
xor
rorb
cld
dec
sub
adc
add
mov
push
cltd
movsl
jg
repnz
ljmp
daa
xchg
mov
mov
xchg
movsb
cmpsb
pop
or
inc
mov
sub
push
mov
mov
popf
out
xor
sbbb
dec
frstor
test
push
fyl2x
xchg
scas
mov
das
rclb
ja
aas
lods
push
popa
jmp
and
push
mov
jbe
ret
stos
xor
inc
mov
pop
icebp
xchg
cmp
push
mov
cmpsl
test
adc
nop
aad
sbb
mov
push
hlt
outsl
fucomip
inc
cmp
mov
jae
mov
sub
dec
stos
nop
inc
jecxz
fsubl
mov
in
btr
into
mov
lods
hlt
shl
mov
sub
inc
xlat
cld
test
movsb
sub
es
fmulp
out
xchg
sub
and
inc
aas
and
sti
lock
jmp
cwtl
fnsave
sbb
push
xchg
mov
mov
loopne
sub
adc
xchg
push
das
jb
adc
dec
push
lock
push
cltd
rcl
mov
inc
aaa
lcall
sti
dec
mov
push
add
mov
sub
out
inc
movsb
in
mov
jbe
cld
and
mov
lock
cld
add
xchg
jle
inc
ljmp
cmp
mull
and
pop
dec
jne
add
sbb
xchg
mov
adc
fs
mov
and
hlt
call
leave
fcmovnbe
mov
jae
jecxz
stc
test
and
add
cmp
push
pop
in
or
add
stc
lea
mov
cmp
sub
dec
pop
frstor
pop
lock
jo
jg
pop
mov
ja
add
rcr
adc
inc
sbb
fs
inc
jmp
xor
jno
mov
mov
pop
mov
pushf
push
lret
pop
add
dec
int3
sub
inc
pop
lods
adc
pop
mov
add
leave
leave
mov
lods
clc
push
loop
ss
xor
jecxz
dec
xor
shlb
xchg
sub
pop
sub
dec
notl
push
in
stos
push
loop
push
stc
sub
sub
inc
mov
test
lds
inc
stos
xor
cmpb
or
les
cmpsl
test
in
add
inc
jns
gs
into
cmp
notl
std
out
mov
inc
leave
pop
mov
bound
loop,pt
or
pop
jo
cmp
mov
fldcw
fwait
ja
inc
push
enter
lahf
jp
fists
dec
bound
test
js
push
xchg
sub
lahf
scas
cltd
ljmp
out
cmp
repz
mov
js
leave
cmp
add
clc
jno
mov
aad
lock
divl
sarl
push
call
imul
shll
xchg
fisubs
popa
mov
sar
and
out
insl
fimull
repnz
lods
stos
pop
xchg
mov
adc
cmp
lods
daa
xchg
int3
rcrb
outsl
xorb
mov
cmp
bound
divb
call
sub
test
cmp
data16
xlat
sbb
or
rorl
sar
dec
inc
pop
lods
lahf
jge
pop
outsb
push
sub
daa
xor
jnp
sub
sbb
outsb
stos
cltd
cmc
jns
sub
and
mov
addl
jl
jmp
mov
adc
out
sbb
test
imul
and
mov
loope
sub
xor
xor
cs
push
mov
shll
pop
or
add
stc
or
xchg
mov
lods
movsl
cmp
enter
lret
xchg
xchg
and
inc
mov
lret
jle
push
outsl
clc
sub
pop
push
mov
dec
xor
cmpsl
and
mov
clc
inc
ror
push
pusha
mov
adc
cmp
xlat
ljmp
and
jg
cmp
daa
outsl
push
test
pusha
lock
mov
or
lock
dec
inc
and
imul
sub
enter
and
inc
or
xchg
jle
lods
test
out
inc
xor
leave
dec
adc
cmc
rcll
mov
pop
push
or
stos
scas
jae
mov
shrl
jecxz
stos
jne
loopne
cs
jb
pop
push
pop
push
addr16
pushf
push
cmp
mov
repnz
mov
mov
jb
sbb
mov
icebp
outsl
xor
stos
push
inc
dec
xor
cmp
testb
scas
mov
fnstsw
and
adc
scas
jbe
mov
data16
cld
jmp
mov
loop
pop
loopne
pop
pop
pop
std
pop
faddl
fs
insl
aas
adc
xor
imul
lods
loopne
add
scas
lret
jge
call
scas
push
add
les
xchg
lock
push
fnstenv
xor
leave
addl
xchg
push
enter
push
pop
sub
rol
inc
insb
daa
mov
add
mov
fldt
sbb
inc
aas
jecxz
inc
jo
sbb
mov
push
pop
adc
loope
inc
fldenv
add
add
dec
int3
scas
dec
cmp
cmpsb
xlat
icebp
je
cltd
cld
sbb
out
xchg
cmp
aam
call
dec
cwtl
xlat
cmp
push
negl
lods
push
mov
add
out
jp
ja
sbb
lcall
or
xchg
cwtl
lcall
insl
add
sub
dec
in
add
inc
outsl
jge
int3
sbb
das
call
mov
mov
icebp
inc
sbb
add
xlat
into
js
popf
pushf
sbb
xchg
add
std
insl
popf
int3
push
mov
xor
cmp
dec
mov
rolb
and
ljmp
mov
out
dec
sub
orl
ret
dec
add
sahf
and
cwtl
inc
xor
adc
and
stos
lds
cmp
lock
popf
push
in
movsb
into
clc
cld
pop
out
scas
pop
pop
rcll
es
adc
test
test
shll
nop
cmp
and
lods
out
lret
pop
mov
mov
call
pop
jmp
or
call
data16
fxch
mov
jbe
frstor
mov
sub
shrb
jecxz
inc
mov
clc
sbb
lcall
je
adc
adc
and
lock
mov
call
call
roll
xor
rcll
inc
mov
lods
jbe
mov
pop
mov
aad
nop
and
or
add
and
or
mov
push
fimuls
rol
lods
dec
fisubs
or
loop
lret
jae
jae
mov
out
test
scas
mov
jbe
jmp
std
jae
cmp
jge
xor
mov
mov
insl
xchg
jne
out
cmc
stos
mov
cmc
inc
loopne
pop
arpl
sbb
push
ljmp
jp
or
cmpsl
lahf
mov
rorl
call
xor
leave
or
and
mov
dec
sub
jne
xorb
mov
orl
insb
push
stos
popa
inc
fisttpl
shlb
or
bnd
out
and
jge
sahf
scas
stos
inc
out
into
cs
fbld
daa
mov
int3
lock
pop
ss
push
push
out
and
out
pop
outsb
mov
sti
push
jge
inc
sbb
inc
movd
out
inc
imul
loopne
inc
cld
clc
mov
pop
enter
mov
ss
sub
push
lea
test
ffree
or
std
in
jnp
mov
jb
fsubrs
inc
jbe
jae
or
test
je
sub
shll
mov
cmp
mov
inc
mov
nop
pop
push
data16
push
pusha
das
inc
lea
gs
mov
roll
jmp
cmp
inc
mov
cmp
arpl
stos
jae
out
cs
sbb
pop
repz
mov
fs
sub
fildll
pusha
mov
daa
ret
mov
pop
mov
push
mov
bound
dec
or
js
xchg
and
xchg
or
cmp
mov
jns
nop
cmpsb
imul
leave
dec
outsb
dec
push
sub
sti
adc
mov
cmp
and
cwtl
or
clc
sbb
fstps
sbb
shlb
rorl
lods
fisubl
dec
adc
sbb
xchg
popa
daa
add
xor
inc
adc
jmp
in
insl
in
cmp
push
jae
jecxz
mov
cltd
sub
lock
pop
adc
aas
ja
cli
sti
sbb
sbb
inc
push
mov
test
cmc
push
cmpsl
sub
inc
pop
push
movsl
pop
pop
sub
std
push
cmp
or
in
in
scas
push
adc
mov
ja
jl
fdivrl
hlt
mov
jl
sahf
or
mov
mov
aas
sub
pop
je
jmp
mov
or
mov
xor
pop
lret
push
cmpsl
xchg
cli
out
psubq
shlb
mov
imul
aam
in
je
add
sbb
ja
mov
push
mov
xor
sti
mov
movsb
cld
nop
pop
cmp
outsl
sbb
jne
rcll
fdivs
push
jge
int3
xchg
out
adc
mov
cmc
pop
cmp
shll
cli
aas
pop
outsl
jge
mov
loope
xlat
aam
lods
pusha
out
nop
sahf
sbb
jecxz
out
xor
mov
jae
sbb
cwtl
xor
jbe
mov
movsl
imul
sbb
adcl
loope
dec
jg
and
mov
pcmpeqd
xor
adcb
addb
mov
fs
in
mov
and
sbb
cmp
sbbl
leave
div
mov
inc
lret
out
repnz
rep
pop
sti
adc
jne
shrl
dec
js
mov
notl
addr16
cmpsl
outsb
in
xchg
add
and
fnsave
pop
add
adc
ds
adc
or
adc
push
pop
test
mov
enter
daa
push
loope
movsl
imul
mov
pop
shr
adc
clc
mov
cmp
out
dec
es
add
ret
cltd
mov
dec
andb
mov
jo
push
mov
les
nop
imul
xchg
mov
cmc
cmp
imul
lret
ljmp
popa
mov
push
sbb
sub
arpl
xchg
adc
sbb
scas
cmp
jne
jmp
cld
jnp
cmp
mov
ja
rcr
in
inc
jle
js
inc
imul
loopne
fcoml
cltd
lahf
xor
orl
or
xchg
pop
hlt
inc
movsl
ja
mov
in
jo
movl
and
xchg
addr16
push
mov
xlat
outsb
push
add
jp
pop
push
adcb
push
mov
push
jl
inc
sbb
push
test
repnz
je
mov
mov
pop
and
out
mov
xchg
imul
pop
dec
test
sahf
aas
mov
sub
shll
push
aam
xchg
adc
fnsave
je
mov
ds
sbb
orl
sub
aas
push
xorl
dec
and
xor
inc
cmp
and
addr16
mov
ret
cmpsb
mov
mov
leave
xchg
sub
test
mov
fiaddl
cld
or
stos
xor
sbb
jge
adc
ret
call
cmp
jnp
push
leave
jg
aaa
stos
scas
inc
cmpl
push
clc
or
fiadds
jae
xor
jb
fisubl
cmp
or
fcmovnu
sbb
or
in
xlat
jmp
lods
jmp
inc
fistpl
in
cmpsl
hlt
dec
out
ss
sub
and
cmpsl
ljmp
iret
test
dec
pop
repz
fs
jmp
pop
je
jecxz
lock
jge
push
sbb
ljmp
in
lret
sti
stos
into
ucomiss
add
sub
xchg
aaa
dec
and
das
cmp
ja
xlat
std
sbb
ljmp
sub
pop
outsl
jg
xor
cwtl
pushf
lds
jle
mov
lea
mov
pusha
jne
aad
mov
mov
scas
lea
sbb
ljmp
insb
lret
mov
stos
cmp
dec
cmp
pop
push
int3
sub
sub
arpl
mov
mov
mov
lods
sti
inc
and
mov
pop
adc
mov
scas
mov
xchg
stc
add
mov
sub
hlt
mov
pop
jbe
and
jo
adc
fwait
push
sub
ljmp
sub
pushf
je
jle
or
negb
jp
ja
fs
xorl
add
pop
or
call
ljmp
push
cld
mov
leave
scas
outsl
pop
pop
aad
mov
and
and
pop
mov
fdivr
repnz
out
cmpsl
xchg
mov
mov
adc
rorl
frstor
xor
test
sahf
or
and
jp
sarl
and
mov
jmp
add
or
xchg
lret
iret
jg
or
repnz
rclb
ret
jae
cld
pop
lea
repnz
ds
cmp
and
add
iret
and
jecxz
lods
mov
jbe
xor
jne
jnp
aaa
jnp
daa
mov
xchg
push
inc
popf
pop
iret
mov
xchg
add
dec
jb
ds
lahf
loopne
and
cli
je
adcl
call
dec
mov
fdivl
xor
jne
lock
mov
push
mov
adc
insl
mov
jge
outsl
or
dec
mov
sti
push
xor
pop
ds
aad
jle
std
pop
sbb
xor
repz
aas
das
pop
stos
or
cmp
pop
fwait
test
out
push
sub
mov
cld
push
push
sbb
ror
into
push
mov
out
or
add
test
xchg
sarb
cmp
pop
jne
mov
cmp
push
push
lahf
xlat
mov
mov
jne
pusha
sbb
aad
scas
jp
js
and
daa
jle
cld
sbb
int
push
sbb
mov
mov
lea
jbe
in
test
push
fists
bound
jae
sub
cmpsb
rorl
and
notl
lods
push
repz
sahf
sub
mov
pushf
jno
dec
push
rcrl
popa
sub
cs
mov
lret
jb
jmp
subl
cmp
lds
xorl
and
les
dec
cld
add
out
into
aad
xchg
bnd
jecxz
jno
add
mov
inc
insb
cmp
mov
shl
mull
sbb
sub
rcll
cmc
shlb
fsub
mov
incb
movsl
test
mov
or
ljmp
rorb
les
xlat
inc
je
int
lea
and
inc
enter
add
inc
inc
int3
cmp
mov
je
inc
call
pop
adc
xchg
cmp
cmpsl
sbb
aas
movsb
cmp
sbb
mov
fidivrs
imul
mov
dec
hlt
mov
leave
mov
repz
sbb
pusha
icebp
inc
adc
mov
xchg
pop
adc
xlat
sahf
mov
loope
sbb
call
add
fists
ret
lcall
lock
pop
mov
mov
xchg
xor
adc
ds
xchg
loope
jae
inc
jne
loope
push
shrb
aas
addr16
fs
daa
jns
pop
jo
xchg
pop
jl
test
sbb
inc
lcall
icebp
pusha
sub
popf
or
cmp
fcoms
dec
mov
imul
ficomps
inc
adc
sbb
aad
push
cmp
fadd
push
in
addr16
js
leave
jmp
dec
cmp
sub
stc
push
xchg
jge
and
sbb
pop
movsb
xor
inc
inc
pop
fisubs
ja
sbb
in
cltd
subb
test
scas
arpl
fistpll
lcall
sub
lcall
jbe
sbb
sti
push
loope
loope
repz
aaa
jbe
lods
fistl
cwtl
movb
lods
aaa
or
push
and
punpckhdq
fs
mov
not
mul
mov
ljmp
xor
adc
ret
push
push
arpl
addr16
out
nop
sbb
pop
dec
push
push
and
push
cmp
jg
stc
mov
hlt
mov
jns
shl
into
push
pop
pop
sbb
cmp
insl
xchg
jp
xor
add
jae
xchg
out
xor
out
mov
xchg
jno
mov
xor
mov
pushf
xorb
into
roll
ds
dec
sub
movsl
cmp
rclb
imul
sbb
sub
pop
in
lods
std
pop
xchg
dec
rorb
int
push
int
cld
cli
aaa
ljmp
mov
es
fildl
xor
lock
sbb
fldl
lods
loopne
mov
fmull
incl
fsubp
inc
fistpl
ret
push
js
jmp
icebp
rcrl
pop
icebp
sbb
push
mov
pop
jo
mov
sbb
mov
fcmovnb
add
cmpsb
movsb
xor
or
mov
push
out
dec
in
aam
mov
aam
jmp
push
ficompl
sti
or
aad
sub
fldt
out
scas
pop
pop
arpl
scas
rcll
bound
aaa
add
mov
mov
lcall
sbb
lds
aam
push
jecxz
es
mov
ret
inc
cs
cmp
push
test
push
mov
jge
fildl
pop
imul
lea
dec
push
inc
add
loop
mov
std
imul
je
sub
add
fsubp
or
sbb
push
lret
jl
dec
std
shlb
cmp
lods
mov
repz
mov
pop
dec
inc
inc
sbb
mov
mov
jns
sub
shrb
or
icebp
lret
mov
scas
or
cmc
sbb
xor
test
loope
test
stos
lcall
sbb
fsts
and
mov
aaa
inc
cmp
jnp
jge
adc
push
mov
dec
adc
repnz
inc
rolb
das
lahf
test
fmuls
and
lcall
sub
mov
shlb
mov
cli
rcr
testl
outsl
xor
scas
aam
je
mov
pusha
pop
or
pop
adc
adc
jae
lret
or
xchg
lea
inc
and
out
lods
mov
icebp
pop
fbld
push
xchg
mov
mov
repz
push
enter
mov
lret
mov
clc
mov
and
jbe
xchg
sbb
insl
xchg
inc
hlt
and
loop
inc
xor
in
loopne
mov
fwait
xlat
into
sahf
lret
cmpsl
and
add
popf
mov
fchs
pop
inc
stos
arpl
cltd
test
testb
call
adcl
pop
sbb
mov
pop
iret
fidivrs
aam
sbb
pushf
add
mov
fidivl
pop
nop
int
pop
push
lcall
pop
dec
sub
dec
sahf
sbb
gs
mov
mov
and
cmp
lds
je
dec
nop
popf
aam
sahf
pushf
fdivrl
add
int3
inc
sub
jnp
inc
lea
ja
dec
outsl
inc
nop
xchg
jb
mov
xchg
arpl
push
jg
mov
into
jl,pt
cltd
xor
sub
cmp
ja
mov
push
inc
sbb
insl
pop
cmp
jbe
mov
lea
rcrb
sbb
cmp
call
or
mov
push
nop
inc
sub
shrl
cltd
jmp
sbbb
iret
lock
or
or
hlt
fimuls
loop
out
nop
add
in
stos
mov
mov
repnz
push
mov
loop
push
daa
imul
mov
xor
pop
cmp
popf
push
pop
mov
push
xchg
cmp
add
push
outsl
mov
mov
loope
sbb
add
ret
mov
add
fs
push
test
adc
sub
lock
lahf
jno
sbb
aaa
add
mov
jae
xchg
addr16
sahf
int3
jns
sub
mov
adc
pop
dec
pop
dec
repz
inc
and
gs
jns
lret
sub
aam
add
cmp
aam
xor
loopne
mov
xchg
sbb
xchg
push
adc
jno
add
cwtl
rcrl
mov
movsbl
add
gs
jmp
pop
jns
cmp
cli
hlt
xlat
iret
in
lahf
lea
je
shlb
repz
enter
push
cmp
int
movsl
jnp
pop
push
data16
addr16
push
pop
lahf
adc
cmpsb
pop
in
popf
arpl
and
or
xchg
bound
pop
and
fdivr
pop
enter
cwtl
push
push
mov
adc
jno
jp
mov
mov
cmp
xlat
and
inc
ds
js
pop
in
xchg
ds
lret
jnp
ss
stc
bound
lret
xchg
test
pop
push
mov
into
pusha
pcmpgtb
repz
test
dec
in
sub
out
mov
push
xchg
or
lea
insb
pop
repnz
xor
mov
sub
jo
push
fwait
enter
adc
leave
ret
bound
loop
in
enter
jg
out
jge
or
cmc
loopne
stos
nop
rcr
adc
xchg
test
scas
sub
fistpll
dec
andb
hlt
or
insb
sub
push
pop
ds
std
and
pusha
int3
sbb
adc
mov
mov
mov
dec
ljmp
pop
push
mov
mov
jne
repz
add
inc
add
iret
jnp
sub
mov
dec
loope
cmp
dec
jmp
outsb
ja
es
sbb
cmpl
adc
insb
push
fmuls
aas
mov
js
fcomps
pop
xchg
sbb
ss
xchg
lret
adc
and
fsubs
sti
fwait
cmp
mov
hlt
rolb
out
test
mov
xor
test
mov
push
std
mulb
outsb
and
inc
subl
xchg
mov
push
pop
enter
fcomp
pop
in
add
jle
pop
pusha
cmp
cmc
test
aad
clc
out
sbb
enter
adc
sub
out
pop
lods
cmpsl
inc
and
adc
mov
sbb
sbb
mov
imul
lds
lcall
and
push
andb
mov
push
rcrl
inc
add
push
popf
lea
pop
sbb
inc
lea
fsts
xchg
xor
stos
leave
jecxz
lods
cmp
push
push
scas
mov
pop
mov
dec
mov
xlat
adc
cmpsb
push
mov
xchg
adc
fcomp
mov
inc
push
jecxz
push
mov
rorb
scas
jle
jo
bound
stos
dec
fidivrl
out
sbb
jnp
stos
adc
sub
mov
adc
adc
cmp
repnz
fs
or
dec
out
lret
sub
icebp
mov
mov
insl
fimull
pusha
push
adc
and
mov
fs
add
cmp
mov
test
aad
clc
vcvtss2sd
mov
xlat
fisubrs
rorb
jae
sub
dec
dec
jns
cmp
or
pop
xchg
sub
cmp
dec
fs
scas
stc
pop
jmp
pop
and
clc
add
add
jp
out
mov
add
rcrl
xor
xchg
pop
sbb
or
jl
adc
aam
pusha
shrb
push
fadds
jbe
push
sahf
rcrl
imul
inc
mov
cmpsl
cwtl
jns
test
imul
inc
pop
add
push
inc
mov
xor
and
lahf
or
movsb
test
adc
sbb
jbe
popa
jmp
and
jb
negb
mov
lods
sbb
inc
orl
xchg
push
push
ss
mov
in
mov
push
or
es
repnz
mov
or
and
xchg
push
loop
hlt
add
mov
or
test
xor
test
testb
pushl
or
dec
and
cmp
xchg
pop
sbb
add
add
xor
mov
ret
std
jg
push
mov
fs
out
jl
scas
insl
jmp
and
xchg
jecxz
insl
xchg
or
mov
sbb
sahf
stos
mov
or
das
cmc
jb
push
lret
js
dec
push
mov
cwtl
mov
or
fdivrl
jo
and
pop
out
sbb
adc
out
mov
xor
mov
jo
jo
xor
popa
push
movsb
lock
out
pushf
xor
subl
out
push
insb
xor
xchg
sub
cmpsb
not
cmpsl
data16
inc
mov
enter
mov
jecxz
jge
mov
fcompl
mov
mov
xchg
or
in
fbstp
addl
or
sbb
dec
les
and
sbb
xchg
aaa
mov
fs
lret
arpl
mov
mov
push
sbbb
lods
stos
gs
adc
adc
pushf
dec
daa
push
adc
lret
and
adcb
inc
pop
loope
sbb
lds
inc
xchg
jp
jecxz
mov
or
jge
addb
xchg
in
push
testl
cmpsb
push
jmp
xchg
mov
jo
cmc
je
jnp
test
sub
out
push
lcall
jnp
std
adc
push
sbb
push
mov
aas
lahf
inc
push
ja
mov
rep
std
sti
in
stos
cmp
adcb
rorb
loopne
xchg
mov
lods
fisubrs
aad
movsb
inc
loopne
push
jo
lods
pop
cmp
mov
mov
pushf
hlt
mov
mov
stos
stc
xor
xor
adc
push
lcall
aas
add
mov
jae
mov
out
mov
mov
xor
jo
in
or
stc
jno
mov
inc
sub
arpl
xor
or
pop
out
inc
ret
ret
shll
push
sbb
mov
xchg
ja
adc
dec
dec
adc
add
into
mov
mov
ret
loop
cmp
adc
flds
int
push
lock
mov
sarl
mov
loopne
cmc
addr16
mov
mov
xchg
mov
pop
inc
add
cmc
das
mov
jns
fwait
adc
cltd
sub
test
sbb
iret
faddl
push
inc
mov
fidivrs
ret
call
adc
push
mov
adc
mov
clc
out
ja
adc
sbb
sbb
xorb
adc
inc
xor
adc
movsb
sub
aaa
in
xor
in
mov
outsb
popa
sub
cmp
filds
ljmp
mov
xor
pop
aas
xor
movsb
in
pop
pop
pop
lret
sbb
out
pushf
or
out
iret
outsb
out
push
fucomi
cmc
sub
lret
shll
or
or
add
mov
and
sub
xchg
cmp
jno
push
clc
dec
mov
mov
lret
in
xorb
mov
and
pop
cmp
mov
xlat
daa
in
push
iret
and
mov
loope
test
pushf
jno
mov
cmc
scas
mov
fcom
std
ja
mov
inc
into
stos
ret
fisubs
loop
sub
and
adc
xchg
movsl
add
adc
push
xchg
inc
cld
outsb
or
aas
lret
jmp
dec
gs
jae
std
loopne
dec
mov
cmp
dec
dec
je
or
not
loop
arpl
xor
lahf
mov
xor
and
gs
push
mov
mov
pop
gs
mov
sti
xor
lret
inc
cld
push
sbb
jo
lret
push
or
je
jge
jb
lret
add
pop
mov
and
mov
dec
cmc
insb
xor
out
mov
cmp
add
bnd
add
sbb
inc
pop
jbe
jo
add
mov
shrl
pop
jecxz
clc
repnz
outsl
jl
stos
inc
aas
icebp
xchg
add
cmp
insl
icebp
lock
adcl
xchg
dec
mov
jp
lret
inc
or
mov
mov
xor
mov
aas
pop
xchg
insb
test
dec
pop
test
lcall
and
inc
lcall
xchg
sti
in
cmc
mov
out
subb
inc
mov
and
jae
in
lret
jp
pop
pop
scas
xor
mov
or
lahf
push
fimuls
rorl
pushf
ja
iret
sbbb
cltd
bound
addr16
jnp
mov
xchg
repz
mov
repnz
mov
mov
sub
mov
jecxz
mov
fwait
mov
push
aas
xchg
mov
cmpsb
xor
loopne
inc
cwtl
outsl
mov
add
js
add
lret
setge
mov
and
aad
nop
mov
push
stos
mov
mov
popa
mov
stc
stc
push
pop
cmp
cltd
sbb
adc
fnsave
jle
dec
sti
imul
mov
bound
pop
stos
and
pushf
pop
cltd
int
fiadds
in
shlb
sub
test
pusha
jb
push
adc
mov
add
adc
cmp
mov
mov
iret
jae
ss
das
sub
add
addr16
jmp
ss
das
fdiv
cmpl
popa
or
dec
jnp
es
xchg
cwtl
mov
mov
mov
nop
das
rorl
lock
sbb
fsub
push
sti
aaa
fistl
and
test
lea
in
sub
xchg
outsb
fsubs
fildll
lea
mul
mul
icebp
out
pop
mov
mov
sbb
test
jmp
inc
and
inc
mov
std
rcl
cwtl
jb
bound
pop
mov
or
fdivl
inc
les
mov
repz
je
adc
pop
enter
pop
push
cld
lcall
push
call
inc
mov
and
and
push
dec
push
mov
push
and
jns
cmc
mov
stos
insb
sbb
mov
ljmp
inc
pop
xor
push
icebp
inc
fidivrs
xor
sbbb
mov
loopne
dec
sbb
clc
mov
rorl
xchg
stos
dec
and
mov
gs
dec
imul
sbb
into
loope
xchg
enter
pop
push
pop
push
inc
xchg
dec
mov
cld
fs
jge
inc
fidivl
sbb
sub
mov
repnz
sbb
push
repz
out
rorl
adc
xor
insl
sbb
mov
sub
jecxz
cmp
scas
xor
ljmp
inc
rcrl
cwtl
and
jle
xchg
jo
mov
lcall
mov
pop
je
add
mov
ss
cs
mov
repz
in
or
subl
sbb
xchg
out
dec
xchg
ljmp
inc
lds
mov
fucompp
pop
shl
orl
js
dec
int3
sti
or
mov
or
adc
fwait
pop
stos
mov
add
xchg
mov
lds
pop
inc
inc
mov
pop
decl
inc
cmp
enter
push
jb
add
cld
test
loope
rorb
add
push
xor
repz
rclb
es
imul
fidivrl
and
mov
dec
inc
loope
mov
and
scas
pop
mov
inc
adc
dec
or
cli
jns
mov
rcrl
jae
xchg
dec
pop
mov
popw
xlat
mov
out
pop
call
add
xchg
sbb
int3
mov
pop
ds
sbb
ljmpw
adc
adc
xchg
subl
jae
lds
mov
pop
into
jb
push
scas
inc
mov
fadd
rol
mov
mov
xor
bts
pop
mov
sahf
movsl
movsb
add
mov
in
or
adc
dec
cmp
aaa
mov
insl
test
lea
xorl
mov
mov
loop
js
mov
push
or
sub
xlat
pop
mov
loop
sbb
pop
sbb
inc
bound
int3
subb
push
inc
and
stos
adc
adc
or
loopne
mov
iret
mov
lahf
sti
jbe
mov
ja
ljmp
insl
add
add
fsubl
scas
adc
pop
sbb
and
mov
nop
xchg
pop
and
sar
fcmovu
test
movsl
incb
xchg
aaa
inc
adc
jbe
int
lods
push
out
nop
insl
rol
sub
push
inc
xchg
gs
cmp
lock
mov
pop
mov
inc
repz
mov
inc
iret
insb
pop
or
inc
add
mov
jns
in
lock
push
inc
scas
adc
cmpsl
mov
mov
fsubp
cmp
dec
cmpl
pop
in
dec
mov
mov
fwait
adc
jbe
cmp
mov
rorb
ja
outsl
popa
mov
and
xor
sbb
xor
or
fadd
dec
xorl
push
icebp
sbb
xchg
jmp
testb
pusha
cmp
out
loope
mov
xor
popa
push
mov
push
sub
mov
push
rcr
lds
jge
test
inc
stos
js
idiv
callw
inc
mov
bound
cmpsb
inc
fsts
orl
xlat
pop
enter
ds
or
or
mov
test
cltd
cwtl
cmp
je
or
loope
enter
loop
sub
lock
xchg
mov
inc
xor
je
mov
push
sub
push
push
in
and
incl
ds
ds
xor
daa
lcall
in
lahf
jne
xchg
adc
sub
cmp
fcmovnbe
ret
or
xchg
ja
aam
lcall
jne
mov
inc
jnp
das
nop
xchg
lds
mov
xor
jg
dec
out
mov
adc
addr16
xor
in
gs
jnp
pop
jo
xor
fcmovnu
jne
or
andl
adc
repnz
xchg
lret
mov
rclb
shll
mov
sbb
cwtl
lret
lret
cs
inc
pop
imul
pop
outsl
mov
int
sarb
xchg
xlat
push
add
or
xchg
xlat
mov
enter
popf
or
push
jbe
clc
mov
xorb
pop
shr
inc
jnp
mov
pop
sbb
inc
in
mov
sbb
popa
pop
mov
mov
stos
aas
into
pop
popf
mov
mov
daa
cltd
in
sub
adc
jle
pop
jge
cltd
mov
inc
imul
add
lods
pop
push
iret
cwtl
mull
mov
xor
ljmp
repnz
jle
sub
rcrl
push
test
cmp
dec
mov
xchg
loope
cmp
cmp
out
xchg
out
and
aad
xchg
sbb
push
fldl
and
mov
add
dec
or
call
ljmp
inc
and
out
mov
int
fwait
adc
pop
jp
pop
mov
xor
xor
int3
xor
fldz
inc
add
push
cmp
adc
pop
xor
mov
sti
xchg
or
ret
mov
sbb
jae
mov
jecxz
std
push
mov
push
xchg
out
cs
fnstenv
sbb
and
sbb
in
inc
pushf
cmp
or
jecxz
cmp
cmpsb
cmp
sbb
cs
jno
adc
mov
cmp
or
pop
shll
mov
pop
add
mov
aad
aas
xrelease
ficoms
xor
sahf
dec
cmpsb
mov
add
inc
js
adc
mov
adc
jne
inc
jle
out
popa
push
xchg
sbb
jl
jmp
mov
decb
gs
add
jle
adc
cmpsl
popa
out
bound
aaa
sub
pop
add
cmpl
cmp
xor
ss
adc
jecxz
jb
sbb
inc
pop
lock
fidivs
inc
cmpps
pop
ret
dec
je
scas
xor
cmp
xor
lret
out
dec
push
out
xor
arpl
addr16
sarb
in
adc
mov
shll
pop
pop
jb
insl
aad
sti
push
xchg
fsubs
fcmovb
jbe
outsw
mov
icebp
or
gs
sahf
lret
pop
bound
xchg
lods
out
rcl
andb
sub
es
mov
fnstenv
or
cmp
inc
cwtl
inc
mov
movsb
jo
xchg
cmp
bsr
data16
mov
push
dec
push
pusha
push
cli
adc
pop
cltd
shll
pop
aad
push
push
cmp
lods
jns
push
sahf
xor
add
adc
add
std
push
popf
jae
jnp
das
int3
nop
out
lock
call
sub
mov
dec
rclb
leave
out
xchg
dec
out
gs
xor
push
jp
jp
jge
pop
loop
aad
jg
pop
stos
sbb
mov
xchg
shrl
icebp
movsl
cmp
fists
pop
sbb
dec
push
xchg
dec
add
insb
xchg
das
imul
push
add
xchg
sub
xchg
cmpsb
shr
sbb
or
xchg
or
sub
int3
in
movsl
or
pop
or
xor
push
les
push
dec
arpl
mov
add
sub
cmp
and
mov
cwtl
adc
sub
mov
jge
mov
cld
std
mov
roll
push
hlt
dec
add
jnp
stc
mov
xchg
mov
in
mov
add
pop
lret
add
arpl
fsubrl
mov
faddl
es
jae
test
add
inc
push
mov
jae
adc
push
add
lret
popa
int
cmp
lods
int
and
mov
pop
inc
cmp
lock
pop
mov
xchg
into
arpl
push
xchg
das
cltd
imull
repnz
pop
fldt
rolb
cltd
xor
scas
cmp
fmulp
mov
loopne
pop
out
dec
xor
add
andb
xor
clc
fcompl
xor
jle
mov
xlat
mov
aad
out
clc
movsl
ret
rorl
fwait
sub
out
mov
push
jecxz
mov
outsl
cmp
aaa
js
lock
add
into
scas
cmpsb
ja
mov
cli
fisttpll
jecxz
hlt
fdivrp
sub
dec
or
push
mov
and
es
ds
and
cmp
test
lret
stos
nop
jecxz
test
xchg
add
std
aad
lods
out
cmp
xchg
clc
mov
movsl
cmp
or
or
sbb
aam
ret
xchg
out
xchg
mov
out
sbb
mov
sbb
xor
mov
dec
xor
jne
jmp
mov
int
aad
adc
movsb
push
fiaddl
xchg
push
jecxz,pt
es
pop
inc
jnp
aam
out
jb
rcrl
mov
mov
push
stos
xchg
dec
rorb
iret
xor
in
mov
sub
stos
sub
inc
in
add
lea
sbb
sub
pusha
pop
call
pop
adc
out
outsb
daa
lods
jl
jge
mov
xor
fucomp
cmp
seta
inc
jo
dec
ret
lret
jbe
imul
push
push
gs
sti
ss
fildll
cli
pop
jbe
mov
dec
lahf
ret
ja
stos
mov
jae
and
rcll
lret
or
stos
leave
xor
clc
data16
orl
add
adc
aaa
mov
mov
adc
push
adc
enter
adc
xchg
sbb
pop
or
pop
orl
ds
mov
ss
and
sbb
and
stc
adc
cld
lea
lods
pop
mov
push
add
cmp
push
add
loop
hlt
or
movl
out
aas
cmp
dec
jnp
insl
pop
fnstcw
ret
mulb
dec
push
inc
sub
mov
dec
cmpsl
sbbb
clc
xor
cmp
mov
dec
sbb
jnp
add
roll
mov
mov
inc
ficompl
jae
jns
scas
mov
loopne
inc
sarb
ja
push
int
push
mov
push
dec
test
or
jae
pop
mov
adc
ret
popf
xchg
xchg
push
cmpsb
mov
cli
mov
inc
nop
pop
ret
iret
or
ss
dec
pop
sbb
inc
mov
jns
pushw
mov
xor
or
jmp
lods
shlb
outsl
dec
inc
xor
pop
popa
fists
out
mov
std
xchg
and
pmaxub
es
adc
test
and
xchg
push
testl
mov
mov
fistpll
adc
outsl
inc
out
test
mov
in
xor
iret
in
not
xor
fs
in
lds
nop
test
shrl
stos
mov
fld
xor
out
mov
xlat
cmp
xchg
pop
and
fsubl
aaa
nop
push
jae
xor
bound
pop
icebp
icebp
cmpsl
jb
dec
ret
jg
inc
shr
adc
inc
test
vpackssdw
xor
mov
xor
jbe
clc
imul
pop
adc
xchg
mov
or
cmp
and
jp
pop
popa
test
inc
inc
rcll
cmpsb
sbb
lods
into
mov
xor
sub
mov
inc
push
push
les
and
or
js
pop
sub
std
adc
in
lret
nop
leave
xchg
leave
push
add
inc
dec
aam
incb
cli
test
jbe
lock
dec
call
mov
mov
xchg
mov
cmp
cmp
fnstsw
pop
notb
jbe
pop
loop
test
test
in
xor
cwtl
pop
mov
sbb
xor
rcll
fisubrl
or
push
xor
scas
fildll
mov
subb
add
push
fistl
data16
shrb
mov
lret
cmp
xchg
or
add
mov
or
ds
cmp
test
sub
jecxz
in
mov
in
push
adcl
pushf
push
push
dec
cwtl
sub
enter
out
daa
cmpsb
pop
adc
jb
sarb
inc
inc
push
push
jno
out
cmp
cmp
dec
sti
mov
lcall
jl
das
cmp
iret
sahf
xchg
dec
lods
cmp
jb
dec
cmp
in
sub
scas
xor
ja
int3
ja
jmp
sbbb
aad
push
pusha
xchg
stos
pop
cs
imul
sahf
out
repnz
icebp
popf
add
lea
sub
push
pop
cmpsl
aaa
or
jo
int
fiaddl
mov
xor
cs
ja
or
arpl
cmp
mov
arpl
adc
sbb
sbbb
ror
cmp
rol
pop
add
ljmp
fsubrl
popa
sbb
in
ja
inc
popl
daa
mov
or
int
dec
and
jae
loop
fildll
data16
push
addr16
inc
cwtl
cmp
in
jmp
lods
pop
jg
orl
or
enter
add
icebp
lret
mov
sbb
mov
daa
scas
not
ja
cmpb
aad
inc
int3
jbe
add
mov
and
or
adc
or
das
jle
push
xor
or
inc
jg
mov
add
sub
mov
inc
int
adc
fdivrs
push
data16
imul
pushf
popf
sub
xchg
jg
dec
fidivrs
loope
in
mov
out
mov
nop
add
call
aaa
fldl
xor
mov
mov
in
daa
xchg
or
sub
xchg
cmpl
aas
mov
scas
repz
in
mov
jne
inc
dec
add
mov
test
aaa
cs
push
xlat
adc
data16
and
lods
mov
and
xchg
movsl
arpl
out
rolb
or
push
lds
stos
sbb
xchg
dec
jnp
sarb
xchg
adc
shlb
popa
pop
fsubl
add
call
lea
jne
lret
shlb
fiaddl
mov
ljmp
ret
adc
xchg
cmp
scas
and
add
out
mov
xor
fs
fnstenv
jmp
mov
addl
xchg
sub
pop
mov
mov
mov
popa
fwait
in
cmp
mov
and
movsb
jb
xchg
dec
or
lea
ds
and
test
addr16
dec
fnstsw
rcll
dec
xchg
adc
jg
xor
or
mov
fwait
sub
daa
jg
insb
lea
cmpsl
push
adc
fsincos
push
test
rol
popf
jecxz
fadd
jmp
add
pop
mov
xchg
loop
icebp
ror
or
rorl
sbb
cmp
dec
mov
dec
push
ffreep
lcall
push
pop
add
sbb
in
sub
dec
mov
rcr
xchg
inc
jnp
and
nop
add
mov
movsb
or
mov
fcomps
cli
pusha
aas
sbbb
arpl
mov
test
aam
sub
mov
mov
xchg
es
mov
and
cmp
mov
lock
jl
enter
adc
or
jb
mov
jle
push
sbb
pop
push
pop
fwait
sub
or
or
in
xchg
inc
pop
cmp
lea
fcmovnb
lret
iret
xlat
ds
mov
pushf
popa
pop
add
jg
jecxz
shll
cmp
adc
clc
leave
sbb
jbe
mov
das
cmp
push
fidivs
inc
sub
xchg
ret
push
xchg
push
mov
lahf
push
inc
fwait
loop
mov
iret
stos
jo
mov
push
lahf
push
in
sti
int
arpl
xor
mov
cmpsb
jne
dec
jno
mov
js
ret
xchg
pop
push
bound
popa
mov
data16
fdivrs
mov
insb
lcall
lea
icebp
pop
inc
mov
push
movsl
and
mov
sub
jge
jp
pop
in
inc
mov
adc
rcrb
add
sbb
or
and
ret
ja
and
xor
dec
aam
push
push
push
sub
push
add
xchg
inc
push
pop
inc
test
mov
push
int3
stos
ljmp
imul
mov
or
and
sub
clc
jnp
mov
push
inc
sbb
pop
adc
cmp
cmp
or
popf
cmp
dec
je
jae
idivb
jns
insb
push
mov
stos
mov
jecxz
and
out
mov
mov
jne
cmpsb
es
shlb
data16
mov
mov
xor
imul
sbb
or
xchg
clc
outsb
mov
movsw
test
and
jae
fwait
mov
jno
xor
xchg
lock
adc
xabort
mov
gs
arpl
dec
mov
sbb
call
push
int
outsl
ret
repz
aaa
jnp
scas
adc
imul
dec
sbb
or
pop
xchg
into
in
jge
in
mov
xor
xor
ss
ljmp
xor
add
or
cmp
jp
sbb
mov
jmp
cmpb
adc
mov
test
sbb
adc
orb
pop
test
test
and
test
loopne
mov
cmpsb
cmp
popf
mov
fwait
js
imul
ljmp
mov
sahf
sub
lahf
add
call
test
mov
mov
xchg
push
push
sub
ds
push
test
mov
outsb
lret
rcl
fs
lret
movsb
jmp
pop
or
push
add
mov
and
and
lret
lea
push
lahf
add
rclb
inc
cmp
outsb
test
fsts
nop
sbb
xor
mov
or
movsl
imul
ds
out
in
push
stc
push
add
inc
pushfw
add
or
std
dec
fs
shll
jge
sbb
mov
add
ja
outsl
xor
push
adc
icebp
xchg
hlt
imul
leave
jl
cld
frstor
mov
scas
rorl
fisubrs
push
imul
call
jge
test
dec
inc
in
aaa
adc
pop
pop
je
inc
outsb
cs
sti
sub
movsl
inc
pop
inc
test
cwtl
imul
hlt
mov
sbb
out
rcrb
lds
push
sub
xor
into
and
cld
pusha
stos
pushf
push
fs
cmp
mov
or
jp
cmpsb
xor
sub
and
lods
cmp
add
push
pop
lds
adc
stos
and
loop
imul
fcoms
cltd
add
bound
ds
int3
mov
je
jae
xor
lcall
push
add
mov
mulb
cmp
jmp
call
insb
hlt
dec
xlat
mov
push
pop
lret
pop
addr16
fsubrs
aad
repz
xlat
mov
dec
push
cltd
daa
out
xchg
or
cld
pop
sarl
hlt
adc
aam
outsl
xor
fbstp
pop
jmp
xchg
mov
jge
push
adc
in
icebp
jp
es
add
out
faddp
leave
enter
pusha
shll
jns
mov
jle
into
loope
inc
dec
scas
test
jp
rcrb
xor
xor
mov
xor
xor
daa
and
cltd
sahf
mov
insb
scas
insl
insl
push
ret
popf
mov
loop
or
or
add
dec
repnz
mov
rolb
hlt
loopne
adc
stos
mov
loope
adc
mov
popf
iret
push
bound
arpl
dec
mov
jecxz
lods
or
mov
mov
imul
icebp
outsb
jo
aad
dec
pop
xchg
nop
pop
ja
mov
test
jns
mov
clc
mov
test
add
push
data16
into
xchg
cmp
fisttpll
mov
stos
loope
outsl
add
mov
jmpw
xor
xchg
scas
sub
imul
pop
mov
sbb
leave
xor
xor
add
or
loopne
pop
mov
outsl
scas
fdiv
shl
sub
xor
daa
imul
cmc
push
scas
bound
push
es
pop
repnz
jo
shl
cmpb
and
fldcw
mov
fimuls
es
lock
std
lods
setbe
add
and
pop
outsb
andl
sub
pop
cmp
cmp
hlt
or
xchg
or
push
pop
dec
and
pop
stos
push
cltd
mov
jo
outsb
roll
scas
adc
mov
sub
imul
jl
xlat
sbbb
fmull
shrl
add
jno
adc
call
adc
pushf
nop
testl
cmpsl
pusha
dec
fistl
out
jecxz
push
lods
jns
and
les
fs
adc
imulb
mov
push
jmp
adc
mov
pop
dec
fadd
sub
ss
jb
add
mov
iret
jo
lods
pop
loop
inc
jmp
cltd
test
loope
jo
js
test
adc
mov
incl
and
test
imul
cli
push
pop
push
mov
out
mov
data16
sub
test
insl
sbb
push
jnp
cmp
push
ss
xchg
adc
dec
ss
int
iret
cmpsl
dec
cmp
mov
push
movl
xor
in
stc
inc
sahf
or
repnz
xchg
cmc
jp
dec
xor
ffreep
fwait
imul
ljmp
fdivrs
adc
inc
or
pop
xlat
fs
test
dec
in
or
stos
lods
movsl
inc
iret
xchg
dec
enter
imul
and
aaa
pop
aaa
inc
jle
lret
pop
push
xchg
fistpl
jle
dec
mov
cwtl
cmc
cmp
fcmovnbe
mov
push
in
jnp
lock
dec
dec
sbb
push
out
sti
lret
or
xlat
sbb
mov
pop
fstp
subb
pop
cmp
adc
inc
lahf
mov
jecxz
xlat
mov
add
mov
loope
shl
rolb
inc
pop
adc
loope
rclb
sbb
sahf
dec
fistpl
mov
cmp
push
subb
movsl
xchg
js
sahf
jle
push
xor
jle
lods
push
dec
sub
popa
pusha
leave
lods
in
out
lret
pop
xor
add
sub
pop
test
xchg
fnstsw
out
jne
popa
mov
adc
xlat
xlat
push
xor
rclb
push
dec
cmc
add
mov
js
icebp
insb
or
imul
pop
dec
cmp
mov
sub
mov
dec
jecxz
orl
xchg
sbb
imul
dec
mov
shlb
push
dec
aad
sub
inc
aam
sbb
pop
fcoml
pushf
push
or
or
pop
std
mov
in
adc
sub
movsl
icebp
dec
mov
push
aaa
sbb
ljmp
enter
aad
mov
cld
or
pop
ljmp
bound
stos
push
sbb
jmp
sub
sarl
jae
out
pop
insl
ljmp
fdivr
push
out
rcll
xorb
dec
xlat
fwait
pop
sbb
or
fidivl
loop
dec
xor
add
cmp
cwtl
xchg
clc
pop
push
ljmp
xlat
xlat
pop
mov
jp
mov
cmp
xchg
aad
mov
cli
mov
lcall
mov
mov
lock
out
bound
mov
sbb
addr16
aad
lods
cmc
stc
popa
pop
jae
add
sbb
mov
fildll
inc
inc
incl
mov
loope,pt
inc
shrb
repz
arpl
dec
xor
push
fmuls
aad
out
cmp
sbb
sub
lcall
ret
inc
rorl
xchg
lock
inc
mov
jg
pop
hlt
outsl
push
adc
sti
dec
and
in
sbb
sahf
orb
mov
push
dec
dec
insl
hlt
inc
outsl
jnp
add
repz
stos
mov
dec
fxch
int3
iret
add
lahf
xor
sbbb
and
inc
lods
and
dec
pop
cs
fisubrs
dec
dec
je
inc
xchg
inc
cmpsl
cli
jl
mov
add
loope
mov
leave
mov
push
and
out
mov
gs
mov
rcrl
nop
lods
mov
add
inc
sub
mov
insl
pop
cs
rorl
hlt
imulb
jg
sub
cmpsb
adc
stos
dec
arpl
mov
push
mov
push
mov
movl
adc
inc
push
rcl
jl
adc
and
rcr
cmpsl
mov
loopne
loope
fmull
adc
shll
adc
ljmp
push
adc
sti
jecxz
jb
push
cmp
xchg
aaa
pop
fxch
xor
jle
push
mov
push
pop
push
xorb
js
imulb
xchg
aas
jb
dec
int
push
loopne
sub
adc
lods
xor
mov
push
je
mul
aam
stc
jo
int3
dec
mov
xor
xchg
xchg
stos
imul
or
jecxz
jmp
add
push
pop
sti
pushf
mov
fcom
adc
out
iret
sub
sbb
jae
jns
out
mov
loop
xlat
shl
and
jnp
addr16
icebp
test
jmp
add
sub
xor
and
lret
xor
mov
int3
push
mov
ret
imul
mov
xor
push
icebp
shll
push
mov
lret
xor
out
pop
adc
enter
popa
call
repz
les
push
pop
xchg
and
incl
jnp
bound
movsl
sbb
add
jp
push
stos
push
jb
adc
cld
adc
mov
push
jns
mov
cmp
lea
mov
iret
cmp
adc
xor
call
mov
sub
mov
sub
mov
ret
add
test
dec
sub
in
sbb
jg
rcr
sub
xchg
mov
add
mov
shll
fsubl
xchg
add
int
mov
jne
xorb
inc
std
sub
repnz
js
dec
and
pop
ror
leave
adc
xchg
jns
das
jno
les
std
and
mov
pop
fldlg2
cltd
fwait
mov
je
mov
pushf
jg
pop
jno
mov
pushf
sub
lods
int
repz
pop
incb
sub
das
xlat
add
out
cmp
jp
or
jp
test
and
daa
mov
loopne
dec
jecxz
jl
inc
enter
jb
adc
daa
cmp
imul
mov
mov
mov
push
add
and
into
mov
arpl
jp
jg
sbb
das
cmp
sahf
fcomps
cmpsl
jbe
mov
mov
movsb
in
cmp
add
inc
adc
cmp
lds
lret
sahf
orb
xorl
dec
xor
mov
aad
dec
adc
in
pusha
or
es
cmpb
aaa
out
cld
stos
int3
xchg
mov
or
and
clc
movsl
sub
xchg
adc
sbb
sahf
jl
leave
or
fwait
in
mov
inc
inc
add
cld
xor
fstpl
mov
stc
mov
push
cmp
sub
loop
cmp
inc
jne
loop
dec
aam
fwait
push
fdiv
in
jecxz
or
xchg
xor
rclb
lock
stos
push
sub
test
lahf
mov
inc
jo
sbb
cmp
les
cmpsl
pop
push
andb
rcr
xlat
mov
xchg
or
mov
out
cmp
jmp
jge
cmpsb
mov
js
outsb
xchg
push
mov
popf
call
arpl
sub
mov
lahf
test
xor
push
push
nop
pop
cmp
jns
shrl
mov
testb
pop
in
enter
pop
idivb
pusha
scas
in
push
cmpb
or
sub
movsl
aaa
out
jno
loopne
loopne
push
adc
ret
sbb
mov
aas
mov
iret
in
add
or
movsb
xor
jno
jne
push
xor
aam
sti
sahf
xor
cmp
std
cmp
in
push
in
out
pop
xchg
mov
shr
das
addb
push
and
push
push
mov
clc
out
dec
xlat
popf
jge
fs
cmp
rcrb
xchg
inc
cmpsb
xchg
sahf
test
imul
jb
adc
insb
mov
aad
cmp
sub
ret
sub
fnstcw
nop
dec
dec
scas
cmpsb
pop
cli
bound
mov
xorb
mov
mov
or
in
incl
jo
aas
xor
jmp
jecxz
inc
popa
orb
fcoms
gs
cmc
add
out
jo
je
je
push
out
cwtl
lcall
jns
push
test
into
mov
pop
xchg
push
test
xlat
in
rclb
mov
xor
pop
inc
sub
mov
sub
add
scas
xchg
clc
push
or
sub
sub
xor
and
sbb
js
repz
push
push
daa
jns
adcl
fsubl
push
dec
push
loope
dec
call
std
insl
ficompl
pop
xchg
xchg
sarl
push
scas
sub
mov
xor
sub
pop
mov
in
dec
xor
leave
fstl
ret
mov
pop
dec
mov
mov
stc
std
pop
ljmp
movsl
add
cmpsb
in
aad
pop
inc
ja
push
mov
in
jnp
les
sti
cmp
add
ljmp
sub
movsb
xchg
push
push
mov
xor
sbb
push
mov
and
ficompl
inc
and
sub
jbe
dec
push
inc
dec
adc
loope
and
je
jmp
mov
aaa
insl
and
ret
sahf
xchg
in
jle
pop
rcl
popf
cmpsb
mov
inc
movsl
xchg
and
or
divb
adc
jb
mov
pop
js
mov
dec
pop
mov
fcmove
aam
pop
aaa
mov
pop
dec
sub
lods
adc
xchg
mov
xor
les
ficoml
pop
mov
lret
fmuls
fs
xor
scas
push
fimuls
jge
jno
and
or
sbb
pop
sti
leave
negl
jl
loopne
jnp
dec
jae
and
dec
mov
testl
lock
sbb
sahf
cltd
cli
cld
push
push
icebp
jnp
pop
adc
es
dec
dec
ret
mov
xor
jmp
dec
jbe
xor
dec
arpl
lock
cwtl
sub
mov
xchg
mov
push
shlb
mov
sbb
jecxz
xchg
out
insl
mov
sub
cmp
dec
loope
imul
push
push
arpl
rolb
inc
dec
shrl
push
dec
adc
dec
inc
jno
mov
ret
cmp
push
fwait
push
leave
sbb
cmp
gs
ret
mov
in
mov
fldl
fdivl
jae
rcrl
jp
or
pop
outsl
addb
daa
arpl
test
fisttpl
lret
sbb
xor
inc
sahf
rcll
andl
popf
sub
ljmp
jge
inc
xchg
sub
jno
pop
jnp
and
cmc
aam
outsb
scas
fdivr
inc
daa
scas
jbe
ds
js
cli
mov
pop
mov
insl
push
adc
add
sbb
pusha
nop
push
sub
popf
mov
and
xor
mov
das
fs
out
mov
fildl
pop
lahf
mov
mov
bound
adc
jmp
jns
inc
jnp
lds
adc
mov
sahf
popf
xor
jmp
sub
dec
mov
lahf
lahf
gs
adc
arpl
add
aam
hlt
mov
cmp
ljmp
cltd
pop
frstor
or
pushf
mov
mov
sub
push
les
jmp
loope
in
ljmp
sub
repz
rol
jecxz
daa
pop
or
jno
leave
test
movsl
mov
hlt
and
push
sbb
inc
xchg
lret
mov
test
xchg
test
fwait
sub
hlt
adc
es
sub
sbb
stos
cmp
pop
popf
sub
idivl
dec
daa
clc
fcmovb
add
call
testl
mov
mov
jo
out
cltd
sbb
das
push
outsb
out
add
and
fs
ror
cmc
push
sub
lea
sbb
ja
cmp
inc
shlb
incl
fsubrl
adc
inc
mov
scas
arpl
int
push
or
aam
sub
pop
fldl
int
fistpll
aas
sbb
fwait
cmp
loop
mov
xor
xchg
add
ret
out
orb
cmp
xchg
ds
xor
xchg
nop
push
mov
jmp
lret
mov
loop
sbb
nop
les
add
and
or
jle
mov
adc
js
lcall
xchg
mov
lods
testl
lods
mov
sahf
jecxz
cmp
mov
fsubp
dec
mov
push
or
stc
loopne
pushf
outsl
pop
inc
cmp
in
rorb
lds
and
mov
sub
scas
jmp
add
pop
jne
cld
jp
mov
mov
enter
push
xor
clc
jb
adc
rorb
jge
jl
and
inc
mov
sub
imul
push
daa
ljmp
and
or
inc
sub
mov
add
mov
lret
sbb
ret
std
fdivrl
inc
or
or
nop
xchg
jb
jecxz
orb
ror
mov
ljmp
mov
cmc
or
dec
mul
out
adc
cs
pop
gs
stos
adc
arpl
rcl
or
dec
std
aam
mov
pop
pop
mov
imul
rolb
pop
dec
mov
jo
cmp
sti
lods
stos
dec
or
sahf
stos
or
daa
mov
add
loopne
push
jnp
test
cltd
ljmp
jle
push
mov
ret
mov
jbe
jg
in
stos
shrl
pop
sbb
les
mov
dec
outsl
xchg
cli
sarl
mov
int3
test
ja
stc
testl
sub
jmp
mov
mov
xor
add
inc
test
cld
and
pop
ja
subb
lods
fstl
xchg
cmpsl
and
into
dec
ficoml
fstpt
fists
pop
test
jb
push
insl
or
sbb
jp
adc
mov
in
adc
push
test
rcrl
ret
movsl
jb
mov
cli
daa
mov
pushf
inc
xchg
in
test
xorl
add
in
into
push
dec
mov
dec
test
push
jae
adc
xor
xor
rcrb
loopne
xchg
add
xchg
lahf
cmc
jmp
test
dec
or
jle
testl
jo
sbb
jno
cltd
sbb
rcrb
stos
xchg
cltd
jl
gs
mov
in
lret
cmp
xlat
pusha
inc
int3
jns
push
jmp
lods
sahf
mov
subl
idiv
mov
and
cmp
mov
mov
jnp
lret
and
mov
sub
pop
addl
fnstsw
addr16
cld
repnz
push
out
adc
mov
subl
jl
mov
sbb
lret
adc
mov
mov
mov
pop
sbb
add
lahf
bound
ljmp
inc
and
fptan
pop
stc
clc
test
rcl
dec
leave
mov
in
or
imul
cmp
mov
pusha
mov
push
out
or
push
ljmp
xor
in
pop
add
popa
sbb
lods
push
pop
in
pushf
movlps
cmp
and
loop
or
or
ja
lret
loop
pop
loope
dec
xor
mov
loop
jb
lret
push
movl
loop
lock
ficoml
fcmovnu
mov
ja
push
sub
sbb
into
xchg
xchg
lea
test
mov
cmp
inc
adc
stos
sbb
xor
ret
inc
test
cmp
loope
les
lods
pop
jae
cld
or
or
jp
mov
adc
xchg
xchg
dec
push
jmp
inc
pop
add
add
jnp
xor
cmp
shll
daa
pop
inc
pop
les
mov
es
inc
pop
cs
add
test
pop
bound
fnstenv
lret
cmp
mov
or
and
mov
stc
sbb
fld
in
rorb
jge
add
leave
push
sub
dec
fwait
in
fstpt
lahf
xor
mov
icebp
popf
dec
push
add
or
fwait
jae
cmp
hlt
lock
addr16
cmc
jbe
mov
adc
cmp
lods
inc
scas
jne
rclb
ds
outsb
cmpb
xchg
mov
gs
adc
push
stos
lcall
xchg
adc
push
cmpsl
xchg
xchg
dec
jmp
das
lds
xchg
push
xlat
sub
hlt
bound
stos
push
mov
lock
test
mov
xor
adc
mov
loop
int
jmp
push
mov
inc
or
push
pop
loope
testl
mov
or
js
jne
add
xchg
mov
adc
inc
push
xchg
frstor
jecxz
call
fs
dec
and
fldt
cmc
jecxz
pop
pop
xor
or
or
sahf
and
mov
pusha
dec
fisttpl
jns
js
cwtl
mov
adc
xor
icebp
jge
ret
cmp
xchg
jge
push
int
pop
cs
ret
jmp
push
inc
jp
lret
sbb
or
jb
ret
mov
icebp
test
rol
stos
mov
push
jb
les
pop
push
roll
add
cmpb
sbb
fisubrl
lret
shl
mov
mov
mov
push
mov
xlat
nop
loopne
ja
fmuls
test
fdivrs
mov
mov
adc
imul
js
repz
cmp
push
lods
adc
fwait
push
popf
sti
fisttps
and
and
fidivrl
mov
push
int
mov
out
ficoml
sub
cli
jnp
or
aas
cld
inc
lret
movsb
mov
loope
jno
mov
xor
mov
mov
or
scas
jl
test
dec
dec
pop
push
lcall
inc
aaa
xchg
aas
cmpsl
enter
aas
adc
jbe
xchg
inc
adc
mov
xchg
adc
pop
mov
add
xchg
inc
adc
add
push
mov
loopne
mov
icebp
xchg
cmp
js
mov
push
adc
add
xor
mov
xor
sbb
mov
fs
or
cmp
hlt
xor
std
mov
jg
dec
mov
sbb
mov
call
ret
addr16
frstor
ror
lcall
repnz
cmpb
imul
movsl
sub
andl
inc
cmp
std
lods
xchg
fcompl
stc
mov
xor
inc
bound
mov
pop
xor
cld
add
dec
pop
shrb
adc
sbb
and
mov
notl
sbb
int
dec
cmc
sub
add
jnp
jae
rorl
mov
sbb
pop
shlb
lret
sbb
arpl
and
mov
lret
les
ds
add
jg
push
pop
and
loop
lret
gs
add
inc
out
stos
adc
scas
or
andb
and
cmp
movsb
movsb
xor
sub
xor
adc
mov
stos
sahf
mov
insl
jmp
inc
xchg
mov
aad
pop
pop
mov
push
sub
fwait
lods
lret
dec
add
cmp
cmpsb
in
mov
dec
inc
jbe
lods
leave
xorl
xchg
cmp
in
push
das
bound
int3
add
dec
scas
data16
fwait
jl
enter
xchg
cmp
flds
fbld
ds
lea
mov
imul
mov
mov
gs
lock
mov
cmp
je
imul
pusha
xchg
rcr
outsb
xor
inc
not
dec
pusha
fisttpll
pop
xchg
push
das
add
ficoms
mov
out
out
mov
xor
push
pop
ret
cltd
push
mov
in
mov
jae
dec
shrb
or
add
mov
xchg
mov
xchg
push
mov
out
cli
dec
pop
stc
shrb
stos
aam
mov
imul
aam
shlb
mov
filds
scas
add
and
aaa
push
outsb
mov
pop
mov
jo
outsb
mov
imul
jb
addb
testb
cli
cmp
jne
ljmp
push
fs
jbe
lea
mov
push
lods
bound
lahf
fldt
pop
inc
and
insl
inc
sahf
in
add
ljmp
and
addr16
cmp
test
push
rclb
mov
push
dec
pop
lods
repnz
lods
movsb
testl
pop
cmp
cmpsb
insb
jnp
lds
shrl
out
gs
xor
imul
xlat
gs
jmp
pop
fidivs
repz
fisttpl
push
push
pop
imul
cli
outsb
in
hlt
aaa
add
cli
lcall
imul
or
push
adc
mov
inc
and
xor
dec
mov
pop
sar
fstp
adc
and
pushf
pop
jnp
clc
fldcw
sub
int3
cltd
sbb
adc
ja
xchg
movsl
mov
orb
ret
push
adc
loope
ret
or
jne
in
push
movsb
pop
jmp
inc
ja
jle
mov
cmpsl
push
add
loopne
xlat
mov
loopne
scas
shll
add
sbb
mov
imul
adc
aam
jmp
pushf
out
sub
enter
imul
add
out
imul
test
outsb
cmp
mov
jbe
jno
adcb
addr16
in
icebp
insb
enter
push
popa
lret
push
int3
pop
test
xor
dec
outsb
js
push
xor
push
mov
jo
push
push
add
orb
jnp
movsb
sbb
clc
mov
inc
adc
stc
or
lock
das
lret
sbb
int
mov
dec
sbb
mov
mov
sbb
and
xor
aad
xchg
or
mov
das
dec
mov
lret
adc
sbb
jo
xchg
repz
out
aam
dec
ja
mov
mov
scas
stos
dec
pop
pop
push
xor
adc
nop
popf
pop
test
sbb
jnp
int
xchg
stos
ret
shrb
dec
enter
mov
pop
scas
out
jmp
jecxz
push
cld
jns
cwtl
or
cmpsb
clc
add
cmp
xor
out
inc
enter
mov
out
dec
adc
cmp
fwait
sbb
int3
jge
fldcw
xchg
pop
add
cmp
push
pop
push
pop
mov
imul
xchg
mov
icebp
adc
and
jno
mov
cmpsl
scas
xor
pop
bound
push
mov
decl
lods
nop
popf
mov
in
pop
lret
push
cld
mov
fimull
shrl
mov
cli
push
mov
inc
and
and
adc
int
cmp
in
clc
lahf
jg
es
lahf
imul
rorb
adc
hlt
mov
test
nop
nop
sbb
xlat
push
fwait
sti
ja
push
pop
mov
repnz
mov
cwtl
iret
jae
std
mov
jmp
sub
fldl
call
pusha
push
pop
arpl
loopne
ret
or
sbb
sbb
xchg
cs
aad
inc
xlat
ret
or
ja
jbe
cmc
cmpsb
addr16
cmp
mov
xchg
fisubl
or
mov
jnp
inc
pop
and
stc
iret
mov
scas
adc
iret
andb
xor
push
dec
dec
lds
icebp
inc
xchg
dec
test
std
xchg
insb
inc
xchg
lahf
imul
jae
add
insl
incb
cmpsl
jg
pop
cwtl
sbb
dec
mov
out
push
cld
inc
scas
rcrb
lods
and
add
bnd
add
inc
out
out
xchg
mov
push
gs
push
jmp
hlt
push
mov
mov
push
cmp
or
jg
push
imul
hlt
fwait
pop
lret
test
out
xchg
mov
iret
cli
lea
mov
jmp
add
sarl
popa
sub
add
lods
fcompl
mov
test
sub
jmp
add
or
gs
or
push
cli
imul
lods
imul
call
loope
jne
loopne
jbe
out
and
scas
insb
arpl
mov
fisubrs
cmp
add
sub
lret
mov
js
out
jecxz
xor
test
lea
std
fisubl
cvtpi2ps
test
cmp
add
push
int3
push
jp
stos
sub
mov
inc
jmp
popa
aaa
and
test
xchg
pop
dec
xchg
inc
shrl
cmpsl
pop
dec
aas
stos
sbb
mov
sub
in
inc
adc
or
nop
dec
test
dec
je
mov
pop
push
xor
enter
test
std
icebp
loopne
xor
dec
daa
insb
inc
fwait
enter
arpl
pop
mov
je
jo
jae
lret
pop
push
push
mov
popf
pop
mov
lcall
add
pop
or
xchg
les
push
xor
repnz
mov
rcrl
out
pop
hlt
call
dec
mov
rclb
call
gs
pop
pushf
std
fildl
sbb
je
movsl
in
mov
pushl
aaa
repnz
mov
daa
stc
aas
inc
xor
fs
xor
push
cltd
lcall
jbe
repz
cwtl
jge
out
xchg
mov
cltd
inc
inc
add
andl
mov
jno
shll
cld
test
adc
or
lret
mov
mov
xor
push
in
mov
jne
and
mov
lcall
jg
pusha
out
mov
dec
sbb
mov
or
fsubl
push
sbb
mov
mov
lret
mov
loope
ficompl
lods
shrb
mov
arpl
lret
std
das
jl
xor
mov
or
mov
inc
lock
pop
fists
adc
jecxz
loope
rep
and
cwtl
pop
mov
xor
adc
pop
dec
jp
test
cmp
lods
ds
sbb
jmp
cli
jbe
push
push
subl
push
mov
xchg
int
loopne
mov
mov
dec
cmp
outsl
mov
dec
inc
sub
je
push
inc
pop
or
fadds
mov
xchg
sbb
sbb
les
add
sbb
mov
cmpsb
mov
adc
fidivl
into
cld
xchg
mov
add
outsb
push
mov
inc
in
mov
sub
pop
and
fwait
dec
test
jle
popa
mov
fsts
pop
inc
movsl
inc
sbb
xor
mov
xor
lahf
pop
push
les
clc
pop
jno
mov
mov
ja
pop
mull
movsl
mov
push
test
fs
lcall
out
stos
das
ds
dec
push
repz
push
stos
in
aaa
sbb
decb
pop
aaa
movsl
stos
xorb
jne
sbb
mov
xchg
xchg
fistl
loope
and
insb
sub
adc
mov
mov
jge
je
or
movsl
mov
nop
pop
push
ss
cmp
inc
push
test
xor
sbb
into
scas
jbe
mov
mov
stos
push
mov
adc
test
add
inc
pusha
scas
or
ret
test
add
aaa
pop
enter
mov
stos
add
mov
adc
xor
mov
xchg
sbb
bound
jno
loopne
dec
pop
sub
insb
stos
xor
jl
test
bsr
dec
or
lock
cmp
fwait
orb
add
scas
cmpsl
jge
xchg
cmpsb
mov
push
and
inc
sub
insl
dec
mov
mov
insl
aam
mov
cld
mov
jg
daa
sti
push
jo
xor
mov
fwait
lret
jo
or
insl
scas
jp
les
mov
ret
and
mov
je
fcom
xchg
sub
cmp
pop
pop
or
cmpsl
inc
adc
xor
sbb
pop
fwait
jp
sbb
lret
sbb
int
jg
ds
sti
xchg
mov
lcall
imul
dec
mull
cmp
out
repz
jmp
mov
jnp
mov
push
loop
push
lret
xchg
or
pop
and
pop
or
loop
xor
or
and
jp
inc
jl
loope
lret
call
jp
push
rorb
dec
les
add
jmp
int3
hlt
imul
jl
pop
fyl2x
cli
lahf
dec
adc
idivl
xchg
sbb
into
or
xchg
and
mov
nop
roll
and
dec
mov
cmp
lock
jg
inc
xlat
pop
push
mov
inc
push
pusha
jo
ss
mov
stos
cmpsl
shlb
lea
dec
sub
and
ficomps
cli
push
jecxz
outsl
inc
or
mov
testl
push
push
mov
test
mov
cli
loopne
das
jp
mov
sub
rclb
cmp
mov
or
pop
add
int3
mov
adc
mov
lods
xor
test
scas
xlat
xor
lods
dec
pop
stos
push
arpl
pop
out
sahf
jns
pop
mov
je
add
mov
inc
loop
push
mov
sub
cld
inc
add
ljmp
sub
std
add
insb
inc
movsb
cwtl
iret
cmp
test
jne
mov
pop
cmp
rcrb
imull
and
adc
pop
jmp
mov
push
aad
jg
stos
sti
mov
pop
xchg
bound
in
mov
mov
enter
xchg
mov
mov
ds
add
xchg
sbb
jno
xor
mov
inc
cmpsb
push
loopne
inc
push
lea
ljmp
dec
es
movsb
xor
xor
andb
pusha
dec
pop
sub
adc
bound
push
stc
mov
cs
push
lods
jl
sahf
jecxz
lock
push
mov
xchg
jne
std
addb
aam
aam
jecxz
adc
pop
out
shrb
push
sbb
and
imul
mov
mov
inc
inc
or
ljmp
ret
cs
in
mov
cld
test
stc
scas
adc
ficompl
mov
xorb
in
or
mov
xor
lcall
sbb
loopne
outsb
cmp
lret
add
out
push
push
aas
gs
or
mov
repz
sbb
frstor
lcall
and
inc
es
pushf
fbld
out
xchg
mov
sbb
dec
js
mov
adc
shll
or
bswap
imul
rol
daa
int3
test
ret
leave
mov
sbbl
pop
jb
mov
inc
mov
inc
fs
push
in
mov
stos
sub
es
fwait
mov
out
test
pop
cmp
test
fstp
rol
aas
pop
or
cmp
lret
push
push
scas
imul
dec
mov
push
lahf
lret
sbb
popf
pop
stos
rclb
add
jb
jmp
inc
jl
imul
cld
sbb
daa
in
dec
fld
fcomps
idivl
xchg
test
push
movsl
mov
xor
aaa
clc
in
movsb
and
enter
outsb
cmpsb
mov
aaa
cmp
enter
mov
sub
pop
push
inc
scas
mov
notb
jle
or
testb
stos
ja
cli
add
jle
mov
sbb
jnp
and
add
fisubl
sbb
cmp
popa
sbbl
fcomps
lock
lret
test
adc
xchg
cwtl
push
jne
cld
fstl
sbb
push
adc
push
lock
xor
jns
cmp
popa
pop
cmp
cld
lcall
and
cld
pop
sub
mov
lcall
data16
dec
fstpt
cli
or
into
hlt
mov
push
loopne
gs
jne
inc
mov
and
sbb
jge
xchg
lahf
jmp
jb
or
add
mov
insl
fdivrs
loop
ret
jae
pop
pushf
inc
add
lret
das
xchg
mov
aaa
mov
lret
add
adc
leave
mov
jl
xlat
popf
insl
dec
leave
call
nop
add
fsubrp
xor
xor
icebp
mov
in
pop
dec
mov
xlat
mov
hlt
nop
sbb
adc
mov
pusha
inc
adc
nop
xchg
pop
in
mov
mov
fbstp
test
das
xchg
mov
or
sahf
dec
adc
ficompl
loopne
leave
mov
pop
shll
call
mov
pop
test
adc
pop
dec
loope
jmp
push
sbb
and
mov
push
in
inc
push
xor
rcl
mov
mov
dec
jmp
notb
xchg
scas
popf
ret
clc
dec
stos
xor
negl
roll
loope
scas
xchg
pop
in
inc
xlat
jo
xor
jo
lret
dec
and
jecxz
in
pop
int3
pop
enter
stos
dec
cmp
aas
dec
adc
aam
iret
pop
xor
outsl
mov
jp
lods
push
inc
mov
inc
lods
and
data16
add
jge
mov
xor
test
in
mov
xchg
pop
mov
fcmovu
inc
and
or
cmc
icebp
lea
mov
jecxz
add
or
loop
cmp
popl
daa
popf
ret
pop
jecxz
inc
mov
outsl
or
mov
roll
jmp
sbb
cmpsb
cmp
std
pop
in
push
ret
push
ljmp
int
mov
fidivl
sbb
xchg
cmp
push
scas
sbb
cmp
xor
pop
jge
ret
enter
addr16
sub
decl
ja
jg
fimuls
mov
push
dec
cmc
in
push
nop
setge
and
cmp
popa
inc
jo
out
testb
pop
inc
add
xor
inc
inc
repz
jno
outsb
inc
ror
mov
push
leave
adc
sahf
jp
and
cltd
sub
fs
inc
lret
lcall
mov
jle
cmp
pushf
cli
in
jl
add
or
mov
fxch
xchg
push
cwtl
or
idivb
sub
dec
hlt
in
pop
xchg
test
loop
and
jne
mov
xor
push
xlat
fwait
pop
jb
sub
xorb
cmp
xor
mov
inc
push
inc
pop
push
jnp
movl
xor
mov
mov
addr16
cwtl
and
pop
lods
mov
push
mov
movsl
outsb
in
add
insb
shrl
mov
inc
int3
xor
mov
xchg
shrb
and
mov
and
mov
dec
mov
aam
push
int3
lret
mov
add
cmp
int
mov
push
mov
insl
add
stc
inc
mov
or
sub
inc
movsb
enter
test
loop
push
mov
mov
fbstp
mov
or
push
fs
jp
sbb
jns
out
in
sub
data16
add
negl
int3
aaa
icebp
ljmp
stos
dec
sbb
mov
iret
xchg
insb
call
and
ficoms
out
movl
mov
into
mov
popf
mov
rorl
xor
popf
fwait
movsl
or
sbb
mov
xchg
jo
sarl
mov
add
in
mov
adcl
pop
ja
mov
movsb
mov
mov
mov
jns
jnp
xor
pmuludq
inc
std
xor
fldcw
mov
pop
and
das
mov
rcrb
in
fstpl
pusha
add
loope
std
sub
pusha
push
mov
push
and
insl
cltd
out
sbb
pop
dec
inc
jg
or
insl
jns
addb
mov
lcall
push
divb
mov
icebp
test
pop
add
test
push
sub
cmp
cmc
test
cmp
or
cli
jbe
divb
adc
jecxz
daa
adc
addr16
insl
jno
loop
imul
enter
repz
int3
pop
mov
push
mov
int
ret
add
inc
mov
sub
lcall
ret
xor
sub
xlat
outsl
int3
push
push
into
es
daa
cmp
popa
fucomi
les
std
adc
xchg
pushf
push
mov
fidivrs
in
pop
adc
inc
sar
stc
adc
in
sbb
mov
js
aas
inc
test
insl
clc
sub
or
dec
or
mov
loopne
push
iret
flds
cmp
inc
mov
inc
loope
add
lcall
pop
stc
jl
idiv
sbb
adcb
fsubs
lcall
or
pop
pop
test
cli
stos
testl
lock
mov
jae
adc
mov
pop
psubsb
or
pop
outsl
lahf
cmp
test
jg
add
out
rcll
jle
push
imull
ret
cwtl
movsb
sar
popa
sbb
or
mov
je
xchg
xchg
pop
into
or
adcl
fnstenv
cmpsb
xchg
mov
dec
mov
scas
mov
stos
mov
int
jle
jmp
mov
nop
mov
scas
movsb
imul
dec
movsb
push
sub
sub
scas
mov
or
loopne
mov
lds
test
xchg
pop
pop
dec
pop
je
lea
fcomp
loope
iret
xor
fistpl
test
xor
test
aaa
cmc
ds
and
mov
in
pop
enter
adc
xorl
inc
iret
and
lret
adc
push
cmp
xlat
or
cmpsl
in
or
push
lea
pop
push
inc
mov
shl
ja
in
ss
xor
lds
roll
scas
movsl
scas
lds
add
ret
or
cltd
adc
jo
lods
and
repnz
aaa
lea
and
jge
xchg
pop
push
fs
scas
push
inc
hlt
mov
mov
dec
fldcw
mov
roll
cmp
adc
test
mulb
aad
dec
push
ret
test
addr16
mov
add
into
jle
push
adc
sbbl
outsl
jmp
pushf
pop
sbb
repnz
or
pop
sub
mov
jbe
sbb
adc
mov
ret
xchg
dec
dec
lea
inc
lods
lret
insl
data16
and
push
pop
push
loop
adcl
and
lcall
rcll
adc
int3
bound
shrb
push
es
lock
xchg
into
lret
scas
lret
fbld
aaa
dec
out
adc
or
and
xchg
pop
repz
sub
insb
xor
hlt
repnz
fidivrl
fldl
setnp
daa
and
out
lea
dec
mov
xor
data16
mov
outsb
lcall
sti
inc
sub
push
jnp
shlb
add
sub
jmp
rcl
loope
jbe
mov
pop
or
cmpl
lcall
xor
bound
pop
jae
mov
jge
inc
mov
inc
ljmp
mov
xchg
popl
xor
ja,pt
repnz
int
scas
push
aas
dec
pop
push
lods
adc
loope
loope
mov
pop
mov
cmp
ja
mov
mov
push
jae
add
mov
pop
std
adc
lahf
das
fnsave
inc
mov
pop
out
xchg
pushf
jp
mov
pop
orl
push
rclb
add
cld
mov
and
pop
xchg
or
mov
inc
add
in
adc
into
insb
ljmp
mov
fisubrl
pop
fcompl
aaa
mov
push
lcall
ds
sahf
lods
rclb
arpl
enter
mov
pop
out
dec
shll
pop
pop
dec
and
sub
xchg
mov
bound
mov
ss
xor
push
mov
scas
scas
or
shlb
jo
cmp
xor
enter
xchg
mov
jmp
lea
arpl
push
inc
mov
fstl
jl
pusha
add
into
je
dec
test
sub
imul
mov
outsl
popa
sahf
flds
dec
inc
sub
dec
pop
std
sub
xchg
push
push
cld
ss
aad
in
sbb
add
push
jecxz
inc
in
pushf
seto
xchg
mov
mov
mov
out
in
aaa
arpl
les
test
fistpl
push
push
xchg
jecxz
lods
dec
out
or
jae
push
push
pop
mov
inc
or
xchg
adcb
repz
out
mov
push
cmp
sub
cmpsb
cmpsb
pop
jns
cmp
sub
push
mov
mov
mov
push
mov
push
fstpl
xor
xor
pop
xchg
adc
push
xor
test
stos
in
xor
idivb
sub
lret
dec
push
jecxz
jb
and
call
xchg
jmp
cmp
xchg
pop
pop
leave
rcrb
lock
lods
std
adc
lahf
xor
sub
dec
or
popf
xor
movsl
lahf
xchg
ret
inc
in
cmp
cwtl
mov
clc
lods
cli
std
inc
ds
jmp
or
pop
pop
push
sub
in
out
rorl
bound
adc
aad
rclb
mov
adc
fdivrl
xchg
push
fwait
dec
fstpl
test
jbe
cmp
jae
ret
xor
je
jmp
imul
inc
sbb
pusha
inc
popa
adc
push
dec
mov
mov
xchg
sub
cmp
mov
mov
inc
repnz
mov
mov
arpl
les
sbb
jp
int
mov
xchg
xchg
jnp
cmp
mov
in
cmc
in
jns
gs
pop
jnp
stos
push
and
push
mov
inc
sub
cmp
xchg
jbe
xchg
dec
out
loopne
sahf
push
push
cltd
adc
out
jbe
mov
ljmp
xor
bound
arpl
add
cmp
sbbb
ficoml
sub
jp
mov
mov
lds
xchg
add
das
pushf
xor
push
pushf
add
cs
inc
ret
loop
mov
outsl
push
popf
xor
dec
cmp
and
xchg
mov
sub
inc
ror
flds
or
sbb
mov
stc
or
out
fdivrs
loopne
pop
inc
dec
xchg
cmp
mov
cmc
jl
call
add
repnz
sbb
or
fdivs
andb
in
mov
es
jle
jb
sahf
and
fisubs
cmpsb
fcmovnu
in
loopne
les
lret
loop
jno
adc
push
push
loopne
repz
stos
add
out
mov
inc
mov
sub
sarl
sbb
cs
xchg
jg
cli
pusha
xchg
push
cli
popf
lret
or
pushf
xchg
xchg
cmp
mov
inc
add
sbb
dec
dec
std
imul
add
pop
jge
add
pop
pop
jp
popf
inc
jl
jle
adc
pop
mov
mov
popa
ret
ror
leave
or
jmp
fsubs
lods
xchg
xor
add
ds
cwtl
jno
add
dec
pop
ja
lds
cltd
inc
into
aam
mov
mov
jns
mov
orb
jno
out
lret
sub
or
movl
pop
and
or
mov
mov
mov
add
adc
lcall
mov
insl
sub
andl
repz
jno
ljmp
xchg
cmp
sarb
xorl
push
mov
cmp
xor
loop
test
xchg
test
imulb
xor
or
pusha
rolb
adc
test
adc
jnp
shr
cmpb
mov
mov
mov
je
into
or
xlat
dec
fcoml
push
mov
or
fildll
or
stc
inc
pop
aam
pop
and
mov
jno
xlat
aas
jb
in
repz
lcall
cltd
inc
stos
iret
xor
add
hlt
push
andl
mov
mov
adc
push
rorb
lret
sub
xchg
je
and
mov
xchg
shr
fwait
pop
adc
xor
lcall
dec
outsb
stos
push
mov
cld
cmc
mov
cld
adcb
scas
jl
xor
pop
dec
fiadds
cmpsl
in
dec
jb
std
dec
out
test
js
scas
aam
pop
inc
fimuls
adc
pop
gs
push
sbb
xchg
inc
xor
jne
lock
into
cmc
imul
lret
jne
mov
cs
sub
push
push
sbb
arpl
mov
rorb
inc
jge
daa
ss
cmpsl
test
mov
pop
jecxz
ficoml
aad
pushf
sbb
imull
fdivl
jecxz
movsl
in
jnp
jo
out
scas
add
psubd
mov
insl
or
dec
bound
jae
xor
mov
pop
mov
mov
push
xlat
aam
adc
sbb
inc
in
or
dec
cli
rcrl
mov
popf
bound
pop
out
rclb
xor
push
xchg
ret
dec
xor
shll
shll
mov
cli
push
rorb
jae
and
jne
loope
fsubrs
cmp
inc
rol
dec
or
inc
cwtl
mov
xor
fwait
out
inc
into
arpl
fmull
mov
push
push
mov
mov
dec
or
aas
mov
push
add
nop
or
pop
dec
stos
in
push
jmp
dec
xchg
testb
xchg
cmp
push
mov
popa
or
sbb
aas
pushf
cmp
iret
and
out
or
pop
jp
fcomps
sub
inc
jne
in
lods
fisubrs
mov
pop
fs
jbe
add
cmp
dec
add
and
mov
jmp
in
pop
mov
cmpsl
mov
push
mov
mov
xor
bound
sub
scas
out
or
enter
or
lds
ret
pop
add
add
inc
jl
insl
mov
rcl
divb
clc
les
cli
jmp
jp
pusha
jmp
mov
pop
test
stos
add
in
sahf
inc
mov
push
jmp
sbb
add
and
add
enter
int3
xor
mov
add
lret
int
sub
rorl
jl
push
cwtl
mov
mov
das
in
mov
add
in
test
or
stos
jle
call
mov
wrmsr
pushf
push
ret
outsb
test
lcall
push
scas
insl
imul
push
sahf
pop
cmp
mov
nop
mov
inc
pop
lock
mov
lret
xchg
popf
lds
jmp
mov
ret
xchg
int3
pop
sbb
sbb
adc
mov
paddusb
ret
cmpl
addr16
outsl
mov
or
stc
or
pop
int
jb
cld
lea
xchg
mov
jns
and
int
adc
mov
cmp
mov
pop
mov
mov
mov
mov
pop
add
jmp
xchg
mov
jae
xchg
pop
add
mov
fmull
dec
add
jb
insb
inc
sub
in
xor
adc
dec
jb
clc
jg
mov
or
jmp
lahf
mov
mov
sbb
push
push
mov
sbb
mov
inc
hlt
shll
outsb
rcrl
lret
mov
push
mov
ds
dec
lcall
in
dec
scas
pop
adc
jg
loope
push
lods
adc
jne
xchg
scas
xchg
stos
push
jp
push
mov
lods
dec
add
pop
push
das
aam
pop
loope
aas
mov
dec
roll
add
jmp
mov
pop
add
in
pop
adc
cmp
aaa
jle
mov
xchg
mov
cli
rcrb
dec
arpl
xchg
adc
ret
bnd
ljmp
std
aam
push
imul
clc
push
icebp
jno
cmp
xchg
js
cmp
pop
mov
rclb
mov
sbb
adc
fcoml
adc
inc
sbb
inc
insb
push
bound
test
fdivs
add
jmp
push
pop
xor
jb
dec
and
enter
stos
mov
in
mov
es
sub
testb
jnp
jl
lret
stc
inc
xchg
rcll
int
inc
mov
repz
xchg
cmpsb
test
push
adc
push
mov
mov
mov
loopne
hlt
insb
mov
mov
inc
in
push
mov
lahf
jbe
stos
mov
cmp
jecxz
pop
pop
out
xor
rorl
adc
jmp
cmp
ljmp
dec
inc
aam
divb
mov
int
and
bswap
push
gs
adc
sbb
popa
cmp
ds
mov
icebp
cltd
dec
ljmp
jbe
leave
ret
pop
in
jecxz
insb
push
std
push
je
sbb
cmpsb
cwtl
loope
arpl
dec
repz
mov
cmpsl
push
shlb
adc
mov
adc
imul
fiadds
subb
pop
out
jl
jmp
ret
jae
jne
xchg
mov
mov
ret
jbe
std
dec
in
pop
sub
mov
cli
test
jmp
pusha
sub
inc
lea
inc
pop
pop
pop
pop
mov
popa
les
lret
xchg
sub
inc
aam
add
inc
sbb
mov
dec
mov
xor
add
shlb
sub
lods
mov
xor
jnp
dec
sub
fistpll
add
mov
pop
test
iret
jo
jg
add
cmp
push
cmp
ds
mov
push
or
mov
mov
inc
rorb
int3
popf
inc
sub
jns
jmp
leave
mov
add
cltd
add
fs
mov
loopne
fildll
test
faddp
mov
call
iret
add
cld
mov
mov
idiv
dec
mov
stc
mov
jbe
adc
inc
lret
lcall
sahf
mov
sbb
adc
adcl
filds
fs
lods
xchg
mov
inc
stc
add
mov
mov
inc
sbbl
repnz
clc
inc
cs
and
inc
xor
out
dec
test
int3
fiadds
xchg
lock
or
jno
call
fisttpll
xchg
ds
cmp
aas
xchg
and
and
fs
sarb
lret
pop
daa
inc
xor
je
sbb
repnz
inc
lret
pop
ret
cmp
push
inc
sti
fwait
mov
cmpsl
fsubrp
fwait
rolb
imul
push
inc
inc
ret
aaa
outsl
in
cli
and
imul
lahf
mov
adc
dec
aas
pop
mov
adcl
xchg
cltd
xchg
adc
repz
adc
mov
and
sbb
pop
enter
imul
mov
arpl
dec
mov
push
push
sbb
mov
mov
out
jno
lock
sbb
dec
enter
rcr
ss
mov
data16
scas
dec
mov
jl
xchg
inc
ret
jecxz
or
mov
sbb
xlat
pop
jmp
mov
cmp
sbb
push
or
test
mov
jne
jecxz
movsl
cmp
dec
loop
pop
test
ja
outsl
imul
enter
push
and
mov
cmp
and
adc
fidivl
scas
push
mov
lods
mov
push
inc
pop
or
mov
xchg
je
and
test
adc
and
or
loope
jmp
cmp
in
cmp
scas
ljmp
mov
push
int
outsl
xor
in
cmp
sar
popa
shrl
mov
imull
mov
pop
pop
mov
cmp
jns
add
lcall
pushf
orb
testb
jnp
cmp
mov
inc
incb
ret
mov
fcomps
jecxz
adc
jnp
sbbl
or
sbb
shll
or
cmpsl
cmp
mov
leave
aad
push
cmp
jnp
ret
lock
shl
in
fmul
ljmp
dec
xchg
dec
in
pop
out
mov
int3
cmpsb
and
jle
cltd
jg
xchg
hlt
push
cmp
fcompl
add
jno
inc
sbb
cmpsb
xchg
hlt
jg
and
mov
ss
imul
push
out
stos
pop
mov
fwait
lea
mov
dec
push
sarb
sub
jo
clc
sub
xchg
and
test
pop
sahf
imul
xorb
imul
jb
hlt
outsl
adc
js
negb
push
fsubp
je
dec
or
imul
jle
test
inc
jo
pop
xchg
dec
lcall
add
mov
lea
add
shlb
pop
aad
add
mov
add
mov
inc
mov
jg
pop
pop
xchg
pushf
sbb
sub
jb
lret
mov
bound
xchg
test
in
sti
push
test
and
mov
jle
mull
inc
test
lods
scas
ret
cmpsb
add
cmpsl
adc
jp
out
and
sub
inc
fdivp
sub
flds
stos
adc
rorl
xchg
in
jg
imul
push
inc
sbb
enter
cmp
in
int3
xchg
mov
test
xchg
sub
shll
adc
push
pop
or
testb
fsubl
out
xchg
pop
sbb
cmp
mov
cmpsl
stc
or
testl
leave
aam
inc
cmc
in
das
xor
add
sahf
nop
aad
loopne
mov
mov
xor
adc
push
aad
fldcw
sub
lahf
imull
mov
loope
out
mov
fwait
mov
fwait
jnp
dec
call
sub
cmp
std
push
xor
inc
aas
push
das
sub
insl
jecxz
cmp
out
out
cmp
inc
pop
sbb
or
pushf
push
mov
ljmp
jnp
cli
repnz
push
lcall
mov
push
icebp
and
ret
and
lret
stos
cld
popf
daa
mov
scas
pop
sbb
mov
sbb
or
xor
aam
pop
inc
dec
lcall
jecxz
filds
js
xchg
popa
or
xor
mov
push
and
insl
xchg
mov
cs
jns
cmpsl
dec
je
test
jl,pt
lahf
cmp
and
mov
or
fmulp
xchg
cmp
xchg
mov
adc
int
add
and
sub
mov
xchg
dec
or
cmpsb
add
sub
or
rcrb
jl
inc
shll
mov
out
push
addr16
add
mov
lret
in
mov
mov
xchg
orl
and
jle
jno
clc
clc
push
out
frstor
fidivs
mov
or
mov
in
insb
or
sbb
rcl
mov
jg
xchg
movl
add
add
xlat
ljmp
add
mov
divb
mov
test
rol
int
adc
and
fisubrs
mov
adc
and
dec
fsubs
in
adc
in
imul
pop
inc
xor
dec
pushf
clc
daa
jo
jno
adc
lock
jg
mov
and
fldl
sbb
add
sahf
or
mov
and
fidivrs
sub
imul
sti
xchg
lcall
dec
mov
mov
test
mov
scas
xchg
pop
clc
pop
bswap
std
daa
inc
and
ds
pop
push
mov
adc
imul
jnp
mov
xchg
out
xor
push
jne
imul
pusha
les
test
and
sbb
xchg
push
fcomp
stos
cmpl
movzbl
mov
lds
adcb
lods
push
dec
push
cld
pop
aad
rorb
out
mov
mov
js
test
jmp
adc
inc
xchg
movsb
int
dec
inc
rcl
and
jne
push
mov
rorb
arpl
or
cltd
and
xlat
and
aas
lcall
clc
lret
add
pop
test
les
notb
repnz
orl
and
push
jmp
inc
push
movsl
xlat
dec
idivl
xlat
into
mov
mov
pop
sbb
stos
into
push
outsb
dec
mov
lea
das
sbb
dec
pop
and
out
cmpsb
push
cmp
sbb
add
jl
sbb
sub
mov
push
dec
and
into
cmp
pop
mov
pop
loop
fwait
out
mov
loop
cmpsl
or
call
sti
lea
and
cwtl
sarl
adc
pop
and
js
popf
aad
sbb
adc
popf
dec
add
xor
dec
xchg
cmpl
cltd
cs
popf
es
push
jb
inc
pop
jecxz
mov
xor
mov
fwait
xor
int3
addb
test
fstpl
cwtl
lret
sub
mov
stos
mov
lcall
cmp
inc
cs
and
in
jge
pop
addb
add
lcall
xchg
dec
mov
enter
out
and
xchg
dec
pop
cwtl
jno
stos
mov
lock
mov
push
xchg
add
and
testl
xor
subb
cmp
and
pop
sti
arpl
sbb
push
mov
xlat
dec
loop
pause
addb
test
rorl
enter
mov
fdivrl
add
mov
loopne
loopne
pop
punpcklwd
adc
dec
imul
add
pop
and
ror
fdivl
pop
jnp
loope
xor
mov
sbb
roll
lret
jo
mov
lcall
xor
xchg
outsl
in
sbb
push
sarl
dec
xor
call
mov
aam
xor
out
ja
hlt
aad
jg
jne
pop
shlb
dec
fidivs
ja
sub
pop
cmp
shll
ss
pop
loope
push
pop
loop
pop
mov
jg
xchg
les
push
lret
xchg
ljmp
inc
pop
in
into
ret
cmpsl
rcr
dec
dec
mov
jo
mov
add
jae
mov
jae
push
daa
sbb
pushf
jno
mov
das
cmc
pop
imul
ret
addr16
out
xchg
test
lret
hlt
xchg
insl
and
push
push
push
mov
insl
jle
sub
push
adcl
mov
xchg
dec
call
loop
cmp
sbb
jne
and
sahf
in
in
filds
sub
jmp
popf
ja
cmpsl
in
rcr
outsl
push
cmp
inc
out
stc
xchg
xor
jmp
insl
pusha
push
cmp
jge
addl
sahf
jl
pop
cmp
ljmp
fldcw
jecxz
scas
jo
repz
aam
fldcw
fildl
je
and
int3
int
insb
sbb
inc
dec
pop
lret
adc
movsl
dec
cmc
sub
mov
cmp
es
xor
pop
inc
add
ja
lock
sub
mov
lahf
test
or
aam
pop
enter
lret
pop
mov
sub
cmc
out
les
clc
ficompl
adc
dec
sub
enter
mov
sbb
push
push
jg,pn
add
cwtl
rolb
out
addr16
sub
mov
cmp
popa
dec
in
test
lcall
and
mov
inc
pop
jp
mov
shrb
loop
daa
cmp
or
scas
pop
push
add
push
lock
addr16
lods
cwtl
mov
jb
movb
dec
and
jge
insb
test
fisubl
mov
jge
sub
in
fbstp
xor
fiaddl
jae
mul
std
sbb
daa
adcb
inc
leave
jl
cmp
fldcw
dec
cmp
mov
ret
push
addr16
dec
and
fistpl
aam
add
mov
push
adc
pop
cmpsb
or
add
cld
bound
xor
adc
enter
adc
loopne
add
leave
loopne
jg
mov
inc
lahf
lret
lods
test
jo
repz
adc
adc
pop
xor
outsb
inc
out
mov
in
cmpsb
pop
xorb
jle
mov
mov
cld
fdivs
cli
dec
pop
sbb
pop
cmp
leave
loope
mov
push
divb
xchg
lret
dec
and
jnp
pop
and
xor
xor
ja
into
xor
mov
out
je
cltd
mov
adc
mov
movsl
mov
jge
fbld
gs
daa
mov
adcb
fistps
mov
or
mov
pop
das
verr
dec
and
leave
lea
outsl
mov
pop
mov
loop
test
sub
jge
mov
decb
cltd
xchg
nop
sub
sbb
sub
sub
jl
fimuls
adc
popl
faddl
stos
mov
cs
add
cs
sub
lret
movsb
xor
mov
inc
jno
adc
cltd
cwtl
aaa
or
pushf
mov
jecxz
add
lcall
and
mov
xor
xchg
iret
adc
pop
in
mov
data16
js
xor
inc
movsb
cld
gs
mov
add
jno
js
mov
and
pop
jns
imull
lahf
push
mov
cmpsl
pushf
sarl
dec
push
sbb
jne
inc
adc
in
push
rorb
aaa
xlat
in
mov
cmc
mov
add
rolb
idivb
push
movsb
adc
xorl
pop
fcmove
lret
aam
fnstenv
mov
shlb
out
mov
mov
cmp
jg
mov
jmp
int3
lods
xlat
ljmp
out
pop
pusha
lahf
ret
pop
das
imul
movsb
jg
fdivrp
bndldx
imul
mov
les
fs
push
pop
sub
jbe
dec
rolb
sub
test
mov
jmp
cmpsl
rclb
lock
xchg
adcb
push
lret
mov
jns
cmp
mov
mov
adc
inc
daa
adc
dec
mov
cltd
lods
xchg
jl
xchg
push
lods
adc
mov
sbb
push
fnstenv
xor
addr16
cmp
xchg
andl
movl
mov
cmpsl
arpl
pop
arpl
jns
jne
pop
sub
mov
in
jmp
mov
mov
lods
pop
cmc
xchg
push
stos
push
outsb
arpl
mov
mov
mov
dec
adc
and
inc
xchg
sbb
push
mov
fsubl
and
cs
or
ja
jge
mov
sbb
mov
ja
les
inc
cmp
and
jnp
pop
jl
mov
fs
push
rclb
aaa
sub
es
imul
ss
movsb
and
sub
add
sbb
stc
and
lret
daa
xor
aam
mull
cmp
lret
inc
lea
mov
enter
add
cli
in
scas
nop
les
mov
mov
jo
and
and
in
adc
sbb
addl
ficomps
cwtl
out
bound
insl
sub
out
xlat
sahf
push
movsb
add
mov
pop
sbb
pop
jl
add
out
jle
mov
xor
cltd
jbe
sub
std
adc
pop
iret
andb
imul
mov
mov
xor
push
jnp
outsl
lret
in
loopne
and
jne
push
jmp
repnz
fisubl
iret
addr16
dec
repnz
enter
psubw
popa
shlb
dec
test
sbb
add
sbb
cmpsb
mov
pop
sahf
jmp
mov
add
add
mov
enter
leave
jge
shll
fs
movsb
popa
sarl
in
mov
push
or
pop
inc
lret
xchg
cmpsb
push
push
out
ret
jecxz
cs
sti
push
loope
push
xchg
jg
push
mov
andl
mov
out
cli
icebp
mov
aaa
pop
jo
jecxz
and
mov
push
pop
pushf
pop
inc
fwait
sbb
inc
popa
adc
pop
jge
repz
inc
inc
rcll
cmp
mul
lock
jns
and
nop
popa
adcl
aam
inc
jl
enter
xlat
movb
adc
push
pop
testb
dec
addr16
pusha
cmp
sbb
inc
jge
fs
clc
stos
push
mov
popf
adc
jnp
movb
lcall
and
cmp
aam
push
popf
mov
fdivs
idivb
ret
add
out
pop
dec
rorb
push
dec
ljmp
into
test
sarb
jbe
sbb
lods
jg
mov
and
sarb
dec
xor
inc
pushf
inc
push
clc
into
mov
push
ret
sahf
test
push
sarl
int
enter
xchg
imul
or
mov
clc
ror
xor
out
push
xor
test
xchg
xlat
sbb
adc
aaa
mov
and
inc
xchg
fcoml
pop
jbe
js
bound
adc
daa
shrl
les
sub
and
adcb
fs
nop
fwait
pop
push
sub
jae
or
or
jg
pop
aas
pop
les
xchg
fldcw
pop
push
xor
adc
push
popa
mov
insl
out
test
int3
movsb
and
iret
pop
ret
imul
pop
mov
aaa
add
aaa
movsb
xor
jno
mov
inc
xor
scas
inc
negb
jmp
mov
xorl
enter
scas
adc
mov
test
mov
loop
clc
xchg
std
and
filds
cwtl
test
lock
out
mov
subl
js
repz
clc
xlat
stc
mov
sti
xchg
jne
and
adc
mov
xchg
adc
push
jmp
sub
inc
stos
repnz
jp
mov
add
jg
xor
jno
add
out
scas
dec
in
sub
mov
or
jp
loope
mov
out
xchg
divl
mov
movsl
mov
sarl
stc
xchg
adc
jnp
inc
push
stc
pop
cmpsb
xor
lods
push
fdivs
rcrb
lods
cli
out
mov
and
stc
in
cmpsb
mov
mov
es
jb
cmc
push
dec
scas
fwait
pcmpeqd
mov
sbb
rcrl
fwait
mov
hlt
jmp
xlat
scas
pop
mov
aaa
out
inc
lods
or
leave
sub
outsl
fnstcw
aad
add
inc
pop
data16
or
mov
cmc
xchg
cmp
mov
lret
xor
add
add
ss
jle
enter
movsb
ret
mov
push
cwtl
call
jbe
stos
xor
out
ret
outsl
test
add
adc
push
pop
aad
ss
pop
xor
dec
jg
cmc
dec
sti
pop
mov
movsb
rorb
pop
add
pop
xchg
nop
sub
into
mov
ss
sub
xchg
inc
imul
cltd
and
mov
pop
addr16
pop
adc
jns
dec
mov
inc
xor
std
mov
mov
lret
aad
fsubrs
imul
andl
mov
scas
out
scas
adc
imul
push
popa
sub
push
daa
fldenv
mov
call
aaa
test
ja
add
insl
push
stos
cmp
sbb
inc
or
and
leave
pop
xchg
xchg
sti
jae
push
mov
mov
pop
fs
cs
sahf
mov
xchg
fsubrs
lahf
test
mov
mov
pop
and
mov
imul
stos
adc
or
and
jge
jmp
cmc
mov
pop
sbb
lods
test
scas
imul
push
lret
xchg
add
scas
stos
shrl
xchg
sbb
pop
push
je
push
jp
mov
add
fildll
out
lods
push
pop
out
sub
insl
mov
pop
sti
test
jns
pop
gs
mov
inc
xor
pop
mov
stc
popf
pop
lcall
lock
pushf
mov
lcall
fmul
pop
inc
adc
dec
es
jne
jnp
jp
adc
cmp
cld
movsl
fstl
pop
mul
inc
add
movsl
pop
xchg
mov
mov
stos
inc
imul
rcrl
add
sub
xchg
or
mov
fdivrs
outsl
mov
mov
dec
cmc
nop
mov
fdivl
mov
adc
jns
nop
ss
jg
fs
and
into
push
call
in
pop
lret
mov
push
out
or
jge
push
ss
jbe
je
pop
sub
mov
xlat
test
push
aam
inc
cmp
jb
out
stos
add
movb
dec
push
inc
test
mov
jecxz
je
xor
imul
imul
mov
imul
gs
dec
mov
add
and
dec
cmp
icebp
add
stc
fadds
add
mov
add
lret
sub
lods
xor
or
out
and
leave
push
loop
mov
gs
jnp
in
xchg
push
mov
mov
rorl
subb
adc
sbb
aad
sub
lcall
dec
or
call
daa
add
mov
dec
inc
mov
mov
adc
push
dec
mov
pop
sbb
lods
and
shl
stos
dec
pop
cltd
mov
jae
movsl
xor
aaa
fmul
mov
mov
movsl
sbb
fimull
hlt
push
mov
inc
add
mov
das
arpl
stos
inc
push
cmp
push
pop
lods
mov
dec
in
in
adc
jne
jbe
xor
dec
add
outsb
ljmp
mov
pop
inc
mov
dec
fucomp
cmp
and
inc
ljmp
xor
aaa
xchg
lcall
jp
jecxz
lret
mov
cmp
add
adc
das
test
mov
mov
cmc
mov
cmpsb
out
outsl
test
shlb
mov
pop
pop
mov
mov
shl
jne
aas
sahf
and
xchg
mov
jb
outsl
xchg
push
mov
jmp
dec
loop
mov
scas
and
outsb
sarl
shll
jo
pop
ss
hlt
rcrb
push
lahf
add
leave
jae
out
push
xchg
add
sub
loopne
adc
mov
xchg
jno
sub
jnp
aaa
xchg
mov
test
scas
test
cmp
sahf
hlt
inc
pop
mov
mov
lret
xor
mov
push
iret
xchg
imul
lea
es
mov
inc
mov
jne
stc
and
cmpsl
in
mov
sti
xchg
push
pop
add
pop
jb
insl
insb
arpl
out
sub
pop
inc
pop
std
orb
repnz
rcll
test
icebp
shll
or
sbb
pusha
in
xchg
ficoml
mov
inc
mov
pop
pushf
jl
mov
pop
and
adc
xchg
lods
iret
icebp
dec
inc
mov
push
sete
in
and
jecxz
xor
dec
xor
std
and
jne
pop
or
push
lret
xchg
pop
lret
in
imul
push
into
mov
and
lock
leave
insl
ret
in
add
sahf
enter
icebp
add
mov
test
sti
and
push
icebp
arpl
mov
jae
inc
sbb
rcrb
lahf
imul
inc
mov
fs
adc
xor
imul
stc
dec
sbb
xor
fadd
jae
std
dec
leave
fwait
mov
or
sub
cwtl
iret
sti
lret
pusha
stc
pop
scas
mov
jo
int3
cs
enter
jb
jne
mov
fwait
push
adc
xchg
xchg
xor
movsl
cltd
mov
cmp
ss
pop
test
xchg
mov
fmull
sti
and
in
in
jns
shrl
dec
cs
and
das
cmp
dec
lea
out
or
add
cmp
aad
in
or
popf
pop
pushf
loopne
fucomp
fnstenv
pop
dec
jne
ret
call
cld
cmc
jmp
stos
lahf
add
jno
lods
xor
xlat
arpl
es
ljmp
lea
inc
xchg
in
data16
push
push
mov
jae
adc
ret
dec
adc
test
mov
xor
inc
mov
inc
leave
cltd
repz
andb
and
cmp
fisttps
enter
adc
pop
bound
add
adc
push
jmp
repnz
add
mov
shrb
leave
xchg
daa
aam
mov
mov
fidivrl
mov
decl
push
int
loope
dec
loope
jo
fcoms
aam
and
lcall
loope
cmpsl
dec
add
leave
adc
pop
lock
mov
pop
and
insb
jnp
lods
cmp
mov
adc
arpl
push
and
shrl
cltd
or
pop
jp
nop
popf
or
arpl
popf
dec
cld
les
imul
sti
insb
lret
mov
dec
mov
sub
loop
inc
sub
mov
mov
in
jae
xor
loopne
mov
pushf
icebp
or
popa
mov
out
jne
repz
jae
test
adc
fs
bound
imul
mov
mov
dec
int
xor
lcall
inc
lret
push
cmpsl
aam
bound
add
xor
lods
in
dec
xchg
fcmovnu
and
or
jp
fcmovbe
gs
out
xor
data16
in
outsl
loopne
std
cmpsl
out
out
call
jp
adc
xor
mov
fstpt
test
test
call
jg
enter
sar
xchg
pop
pop
xchg
addr16
adc
pop
push
cmpsl
fwait
and
shrb
sub
test
arpl
mov
push
mov
sub
cs
mov
jnp
fdivs
int
mov
pop
and
mov
pop
add
xor
popf
cmp
pop
add
mov
sbb
adc
mov
test
inc
int3
fldt
pop
mov
lods
outsb
dec
loop
outsb
add
dec
das
add
repnz
jnp
addr16
xchg
push
jns
mov
dec
das
clc
negl
jne
fldl
xor
lods
lods
sub
and
add
iret
or
outsb
sahf
and
push
in
mov
sbb
aam
dec
cmpb
xor
lock
movsb
mov
adc
sbb
sbb
clc
jns
sbb
gs
imul
push
pop
add
add
inc
sub
and
xor
push
sbb
or
pop
cwtl
fdivr
sbb
into
repz
popa
and
fxam
push
cmpsb
lock
lea
fmull
cmp
sub
push
pop
sub
sbb
push
fsubr
repnz
lods
aas
in
push
xchg
push
or
ret
inc
push
mov
out
jno
sub
jl
jo
inc
adc
int3
call
in
notl
cmp
or
mov
mov
sti
mov
jle
sub
cltd
imul
js
sub
and
aaa
shlb
jecxz
pusha
xor
mov
xchg
add
outsb
lret
lahf
lock
scas
sahf
insb
jecxz
ljmp
or
add
rorb
push
out
xor
cwtl
dec
mov
daa
mov
push
dec
adc
pop
sbb
fisubrs
in
into
push
andl
pop
pop
sbb
push
or
mov
adc
or
inc
add
lods
pop
cwtl
cmpsb
cmpsl
clc
stc
pushf
int3
push
mov
xor
dec
mov
imul
in
repnz
fstpl
aam
add
xchg
mov
add
test
sub
mov
xchg
mov
fld
popa
ret
dec
sahf
inc
sub
loop
sbb
je
jb
out
sub
imul
jmp
jbe
insb
shl
xlat
rcr
cs
in
fmul
push
mov
pop
mov
loopne
add
push
mov
out
scas
int
pop
add
and
test
into
jl
ret
mov
pop
dec
test
jp
sahf
mov
int3
loope
jo
cmpb
lret
dec
scas
sub
push
dec
imul
fistl
pop
addr16
mov
pop
test
les
push
ret
cmp
out
jecxz
mulb
mov
and
ret
and
push
or
inc
mov
xchg
stos
xchg
ficoml
insb
negb
push
inc
push
rcll
inc
mov
icebp
dec
cli
int3
inc
iret
enter
ds
stos
popa
mov
rcr
xchg
pop
xor
dec
xor
jae
jmp
adc
sahf
inc
adc
xor
leave
fs
mov
and
xchg
sti
jo
cmpsl
test
dec
pop
inc
outsb
xchg
mov
mov
mov
push
lcall
fwait
xchg
sbb
pop
adc
add
stc
jecxz
and
or
js
inc
mov
xchg
imul
fstpl
les
hlt
pop
and
mov
je
into
icebp
push
and
nop
mov
and
enter
or
pop
clc
pop
ljmp
and
faddl
and
fcmovnbe
enter
mov
arpl
das
sbb
mov
cmc
dec
wbinvd
jns
xchg
mov
sbb
jne,pt
addr16
mov
shrl
pop
pop
inc
jne
push
adc
push
adc
cwtl
jle
mov
push
out
add
ds
add
add
mov
push
ja
test
push
lcall
rorb
jecxz
cmp
xchg
inc
cmp
mov
lock
ss
roll
xchg
sbb
push
ja
pop
push
repz
out
daa
sarb
popa
dec
loop
push
mov
pop
xor
sti
cld
sbb
mov
inc
insl
iret
or
pop
pop
int
scas
movsb
pop
jae
loop
fdivrl
xchg
cld
les
jmp
andl
pop
and
lds
push
push
mov
bound
loopne
aas
arpl
push
aad
jmp
fisubrs
push
lods
mov
pop
aam
aaa
mov
push
push
jg
mov
dec
push
mov
outsb
sub
mov
or
cmp
xorl
icebp
ret
inc
lea
or
cmpsb
sti
outsl
mov
mov
xchg
or
xor
push
leave
lcall
push
bnd
xchg
ss
cmpsb
dec
cmp
nop
inc
ds
dec
fdivrl
fimull
mov
fldz
jmp
aas
pop
ja
pushf
outsb
aaa
icebp
das
sub
sbbl
icebp
cltd
mov
clc
cwtl
sub
push
popa
add
xchg
xchg
aas
sbb
addl
inc
es
andb
push
fucomp
ret
popa
push
push
mov
fs
lcall
pop
fisttpll
mov
dec
divl
cmp
lcall
aad
hlt
push
fs
cmp
out
jmp
mov
sbb
imul
mov
les
push
xor
popf
mov
push
jle
ja
jno
jp
ljmp
or
dec
push
jno
cmpsl
enter
dec
daa
movsb
add
shlb
adcl
mov
push
fucomi
push
sbb
xchg
fwait
cs
pushf
cmp
into
mov
movl
loop
mov
xchg
testb
movsl
arpl
add
or
pop
mov
ds
mov
clc
loop
stos
into
imul
pop
adc
ljmp
add
mov
or
sbb
in
pop
add
iret
xchg
scas
dec
jg
sbbb
jmp
fisubl
sbb
add
lcall
jg
loop
stos
sti
adc
mov
fistpl
and
dec
mov
aaa
insl
data16
xor
jo
jns
push
mov
adc
cmp
ljmp
dec
jp
decl
bound
in
jge
jp
jns
lcall
xor
xchg
fsubl
stos
addr16
je
pop
pop
je
adc
je
jnp
mov
inc
imul
loope
inc
jo
dec
aam
push
fildll
cmp
pop
cwtl
dec
cmc
dec
add
stc
push
insb
pop
insl
sub
lea
fld
mov
jl
add
mov
jle
xchg
int
add
clc
mov
in
mov
in
js
sub
and
jg
jmp
jg
mov
arpl
fdivrs
imul
mov
clc
jne
sbbl
frstor
aam
xchg
mov
mov
mov
rcrb
cmpsb
sub
or
popf
pop
cwtl
inc
in
pop
or
mov
push
jge
scas
mov
sub
test
mov
data16
sarl
jle
inc
aad
jo
push
loope
adc
push
das
aaa
add
add
pusha
shrl
repnz
test
mov
and
jmp
cmpb
fcoml
jge
xchg
push
xorl
mov
xor
test
and
inc
jp
sub
or
cmp
arpl
scas
xchg
movsl
loop
mov
adc
pmullw
and
xor
sbb
ret
outsl
push
rclb
test
aad
cld
mov
ljmp
loopne
movsl
pop
pop
in
sbb
add
pop
and
mov
in
loop
jl
repnz
aas
leave
adc
xchg
faddl
and
out
cmc
aaa
cmp
jno
xlat
out
sbb
xchg
icebp
pushf
xchg
scas
notl
mov
fwait
es
xor
ret
js
xor
sub
fisubrs
repnz
jnp
fisttpll
pop
sub
gs
dec
movsl
inc
inc
and
sub
loope
jns
and
popa
popa
ljmp
jmp
pop
loop
cmp
rol
movsb
cmpsl
push
xor
xchg
push
repnz
int3
sub
icebp
testl
pushf
int3
lods
mov
test
cltd
inc
xchg
ss
xchg
int
mov
dec
dec
jmp
push
xchg
test
or
pop
sub
add
fscale
and
cmp
and
cltd
pushf
test
dec
scas
jns
negl
xor
adc
sub
rorl
icebp
push
insl
arpl
call
xor
cltd
jecxz
cmpl
icebp
cmpsb
cmpsl
mov
jecxz
test
call
cltd
jne
xchg
in
push
jnp
cmp
mov
ss
mov
xchg
test
jmp
inc
mov
leave
push
cmpsb
cmc
insl
jmp
nop
lcall
sbb
out
daa
and
push
dec
xchg
or
mov
outsb
mov
jno
stos
xchg
xchg
pop
ficompl
into
inc
add
lar
cli
cmovl
cmp
subl
push
insl
aaa
mov
mov
sbb
mov
out
out
sub
mov
dec
sbb
jno
sbb
xlat
and
inc
jo
dec
cmp
shrl
dec
andl
cld
mov
ja
xchg
js
ds
sub
mov
cmp
xchg
xchg
or
sti
aad
fsubrl
dec
out
inc
lea
xor
stos
lcall
shrb
push
stc
push
sub
cmp
mov
mov
fwait
cmpsl
sbbb
xor
push
imul
sub
mov
add
xchg
cmp
std
jae
ret
dec
pop
icebp
push
sub
add
mov
imul
mov
and
jle
mov
push
adc
pop
xchg
dec
lret
jl
jmp
flds
cs
dec
dec
cli
lods
movsb
add
jns
mov
cmp
stc
mov
gs
xor
rol
fxam
sbb
pop
mov
fmull
jmp
mov
pop
es
loopne
cmp
mov
cmc
mov
jb
pop
in
into
xor
adcb
hlt
daa
inc
int3
insl
adc
in
jge
subb
sbb
inc
and
push
popf
jnp
test
jo
ret
ret
add
int
add
push
addr16
mov
ret
mov
jnp
shrl
rorb
scas
sbb
mov
out
jp
cmp
rol
mov
mov
cmpsb
into
cmp
cli
adc
call
test
fs
inc
std
cwtl
ljmp
mov
repnz
mov
push
mov
fsubs
sbb
lods
jb
or
and
int
stos
dec
or
movsl
pop
gs
sbb
bnd
out
push
push
les
or
adc
sub
insl
and
xor
int
jp
in
push
mov
in
add
jg
iret
or
mov
daa
sub
pop
shlb
push
or
mov
mov
pushf
lds
mov
sub
cli
fcmovb
inc
sbb
cltd
lret
add
test
cmpsb
push
sti
dec
push
push
out
push
fdivl
roll
lret
aad
shll
xchg
cmp
outsb
and
pusha
repz
xchg
mov
jbe
outsb
mov
rorl
loop
ljmp
mov
xor
fmuls
xor
lock
cmc
mov
and
sbb
es
dec
outsb
xchg
xor
pop
andb
or
adc
dec
outsb
pop
fstl
mov
push
inc
and
push
add
xor
inc
pop
mov
push
int
jb
mov
mov
stos
test
mov
nop
out
mov
int3
imul
fldenv
add
aas
jne
pop
mov
ds
xchg
jmp
pop
push
fwait
push
jle
rcrb
push
jnp
or
add
cmp
mov
add
into
test
repz
xchg
mov
pop
adc
mov
mov
mov
xlat
jae
jnp
pop
mov
cmpsb
cli
push
stos
push
pop
cld
pop
inc
test
or
sub
clc
out
shlb
insb
nop
outsb
pop
call
decl
popf
add
nop
dec
out
nop
insl
in
inc
or
leave
adc
add
jl
pop
and
mov
pop
jb
aam
mov
jae
icebp
rcr
add
aas
sbb
es
out
mov
imul
addr16
jno
xchg
and
hlt
repnz
test
or
sahf
or
cmp
sub
mov
insl
sbb
jl
push
pop
jg
aas
inc
adc
mov
out
out
cli
mov
dec
rclb
cmp
sbb
fisttpll
ret
icebp
testb
loopne
mov
ljmp
add
into
mov
aas
idivl
mov
pop
mov
outsl
or
cmp
sbb
pop
movsl
sbb
stos
fisttpll
dec
cmp
les
jp
lock
cmc
fisubs
push
add
outsl
loop
pop
cltd
or
in
out
mov
fiadds
lret
loop
cmp
subb
sbb
sub
out
mov
loopne
cmp
xor
loope
repnz
jg
dec
jns
mov
xchg
or
mov
xor
mov
mov
int3
jb
xchg
mov
aad
jne
push
gs
gs
insl
shll
add
pop
push
or
imul
hlt
into
add
jns
lea
js
add
popf
int3
pop
mov
stc
xchg
cltd
cmpsl
fdivrs
sbb
xchg
repnz
int3
cmp
daa
or
aaa
insb
movsl
int3
sarl
arpl
mov
aas
cmpsb
xchg
push
pop
dec
mov
rcl
xchg
ss
cltd
fistpll
dec
sbb
push
les
addr16
push
mov
in
xlat
hlt
stos
cmp
std
cmp
add
rorb
add
outsl
loop
leave
es
negb
jge
adc
mov
or
in
leave
and
outsl
in
ret
jecxz
clc
sbb
fdivs
loop
cld
pushf
mov
insb
dec
xchg
outsl
dec
pop
sub
pop
fildll
fdivrl
jns
push
xchg
add
add
mov
repnz
jo
cltd
or
mov
out
pusha
jle
fidivs
lock
push
in
imul
sahf
sub
inc
movsb
jl
xor
pop
movsl
pop
test
dec
cmp
out
stos
xor
xor
sbb
lea
leave
push
out
cmp
popa
movsb
mov
pop
adc
sbb
push
popa
jb
fabs
hlt
divl
or
punpcklbw
fsubr
sbb
jp
xor
pop
push
lods
push
ja
data16
inc
lods
jb
insl
push
rolb
in
fnsave
cmc
fucomip
pusha
out
bound
mov
cmpl
pop
arpl
pop
sarb
and
add
mov
in
xor
insl
jnp
rol
mov
adc
sti
xor
inc
jp
jl
stos
test
notl
mov
cmpsb
jno
in
inc
shlb
mov
mov
pop
dec
sti
movsl
pusha
pop
mov
and
jnp
aas
cmpl
mov
xchg
jno
mov
jb
cmp
jae
jbe
rcll
jecxz
sub
fidivl
adc
sub
push
dec
popa
in
inc
push
cs
jge
cmpsb
outsb
orb
data16
sahf
mov
repz
clc
sub
mov
xor
dec
mov
into
adc
leave
inc
xchg
data16
leave
into
and
xor
pusha
mov
xorb
or
sub
xchg
aas
andl
addr16
stos
cmp
mov
jno
cmpsb
cmpb
jo
clc
sub
xor
scas
je
pop
jne
mov
lds
dec
popw
cmp
and
mov
push
dec
lods
sbb
lahf
into
insl
inc
mov
out
dec
cmp
hlt
mov
mov
fdivr
cmc
popa
xchg
push
fisttpll
xor
dec
push
push
pop
loope
das
sub
pop
lret
int
jmp
mov
movsb
and
in
addr16
mov
xchg
addr16
ja
pop
jae
cmp
sub
cmp
mov
xchg
btc
je
sti
enter
je
push
inc
rclb
cli
mov
ljmp
aad
inc
cmc
shlb
xor
lock
divl
adc
sar
call
arpl
xchg
cs
cltd
cmp
xor
mov
out
inc
mov
shrl
push
testl
mov
mov
sarl
pop
mov
lock
or
mov
hlt
xchg
enter
ss
imulb
inc
out
push
push
jp
jb
xchg
xor
cmp
pop
xchg
jmp
xlat
insb
movsb
sub
loopne
call
pop
lock
out
cmpb
aad
mov
in
pop
mov
cmc
mov
and
out
pop
dec
cmp
outsb
inc
dec
clc
out
inc
mov
aam
outsb
xorl
push
jp
jg
in
jns
cld
fwait
push
lret
jns
fs
push
enter
cmp
pop
jp
mov
or
jne
js
xchg
loopne
add
pusha
or
pop
gs
xor
xor
outsl
mov
test
jmp
mov
jle
mov
or
inc
and
pushf
aam
fisubl
push
adc
fiaddl
and
xor
in
in
sbb
out
outsb
fcomps
push
sub
shrl
inc
xchg
mov
lock
pushw
or
sbb
mov
roll
sbb
mov
repz
push
repnz
inc
xor
xchg
jb
and
push
jg
pop
popa
lret
sti
cmp
and
sar
popf
loopne
dec
pop
insb
aas
dec
enter
shlb
jb
add
icebp
lret
ss
push
iret
loop
or
xor
sub
lods
xor
inc
inc
mov
shll
and
adcb
lret
or
cmc
or
out
jecxz
xor
aaa
rcl
mov
loopne
xchg
lret
test
int
mov
xchg
ljmpw
ret
adc
rclb
dec
sbb
sbb
stos
mov
push
cmp
cmpsl
es
fwait
insl
clc
mov
loope
test
mov
dec
in
movl
scas
add
aas
xchg
xchg
pop
jae
testb
fwait
ja
imul
jb
xchg
push
adc
xchg
push
xchg
jbe
test
dec
dec
xor
inc
mov
push
mov
hlt
cmpsl
fiaddl
stos
pusha
jbe
enter
icebp
movsb
mov
push
lahf
in
arpl
rcl
test
leave
jb
or
jnp
ret
mov
addr16
jmp
jmp
rclb
push
in
mov
out
leave
jae
push
leave
mov
add
cmpsl
adc
pop
nop
jne
mov
push
in
mov
ds
xchg
out
add
dec
shl
nop
repz
shll
js
fdivrs
sahf
scas
mov
nop
mov
and
call
dec
dec
mov
test
je
and
rorb
and
or
jge
call
add
pop
adc
sbb
cmp
xchg
and
push
out
xchg
push
push
lds
and
cwtl
rol
xchg
negb
pop
ljmp
cmp
mov
adc
inc
orl
in
mov
dec
and
cmpsb
xor
pop
shr
cs
test
add
push
lahf
xorl
push
or
js
jnp
aas
inc
dec
mov
pop
aam
sbbl
insb
mov
test
sub
push
imul
in
and
mov
mov
nop
rcr
imul
je
aad
fldt
dec
pop
adc
adc
xchg
dec
rcrb
cmp
jge
repz
sub
test
ja
push
pop
dec
push
pop
and
hlt
cltd
and
jecxz
and
mov
cmp
pop
aaa
push
outsb
jge
mov
cmpsl
data16
sbb
hlt
lea
cmp
or
and
xor
sbb
clc
addr16
xchg
add
repz
popf
std
xor
movsb
leave
xchg
movsb
ficoms
add
ds
das
mov
xor
arpl
fs
mov
pop
adc
xchg
push
xor
mov
lea
sbb
or
inc
aam
insl
pop
push
ficompl
in
test
aaa
and
mov
mov
insb
inc
cmpsb
push
dec
cltd
or
into
out
or
mov
filds
pop
subl
lcall
cmpsl
mov
mov
mov
add
add
xlat
imul
inc
xchg
repz
clc
dec
std
or
js
xchg
mov
jp
sti
add
mov
inc
sbb
imul
lds
dec
ljmp
dec
icebp
mov
mov
push
cmpsb
js
ret
ret
aad
cmp
jb
pop
pop
jne
sub
test
xchg
iret
and
mov
xchg
add
or
popa
stc
das
lcall
enter
scas
mov
sbb
push
cmp
call
je
pop
ret
stc
mov
jns
call
add
cs
decl
and
aam
jns
out
inc
fistpll
inc
scas
pop
ss
dec
inc
pop
hlt
int3
fs
jo
push
fmuls
or
rcr
push
fs
xor
push
jmp
mov
insl
lods
mov
or
ja
adc
mov
fistpll
sbb
or
enter
xchg
inc
mov
enter
inc
xor
insb
sub
test
mov
ja
add
ljmp
and
scas
push
lock
lret
lods
shl
clc
fwait
lods
shll
int3
nop
test
cltd
xor
jb
adc
cmpsl
test
stos
fcoml
and
ljmp
mov
fnstsw
cmp
std
sarl
pop
push
and
aas
sub
adc
inc
inc
mov
orl
pusha
leave
add
rcll
popf
mov
fmull
mov
and
aam
stc
inc
jae
adc
rcrl
cmp
das
adc
and
jl
lods
pop
shrl
push
ja
icebp
mov
cmp
js
xchg
or
mov
xor
fdivrs
pop
iret
in
mov
push
dec
nop
dec
lods
mov
icebp
ret
sub
les
xor
pop
imul
sti
in
loope
add
fwait
gs
fcoms
jmp
push
jo
sub
loop
push
bound
lret
ret
fcoml
cltd
fisubs
fchs
cmp
dec
scas
jge
scas
jae
jle
int
mov
jl
xchg
push
sbb
rol
xchg
ds
sub
pop
sub
jmp
lods
cmpsl
scas
mov
aad
int3
mov
adc
ljmp
sbb
repnz
inc
jmp
fistl
pushf
les
sbb
xchg
adc
xchg
xchg
jle
push
add
push
pop
jp
flds
xor
cmp
insb
loop
int
in
or
or
jnp
out
stc
and
insl
clc
fwait
loop
pop
mov
call
mov
cmp
bound
mov
dec
cmp
jmp
xor
mov
fistpl
xchg
jge
mov
repnz
lock
fucomip
dec
cmp
xor
cmp
cwtl
stc
mov
cmp
jl
mov
aad
sbb
lods
xchg
mov
inc
outsl
int
mov
pop
dec
outsl
dec
dec
ret
aas
daa
sbb
loop
mov
xor
cmp
adcl
jbe
out
ja
push
cld
bnd
mov
mov
inc
add
arpl
gs
mov
cmp
dec
mull
mov
mov
pop
push
pop
popf
xor
out
push
scas
push
pop
mov
sbb
xchg
imul
push
sub
sbb
jp
ror
pushf
push
push
fisttpll
jl
dec
cmp
pop
jb
in
xor
adc
jmp
xor
adc
sahf
andb
mov
inc
mov
test
dec
adc
jle
mov
sbb
aam
cltd
out
cwtl
dec
sub
adc
movsb
jle
pop
inc
imul
jbe
mov
xchg
push
out
inc
mov
cld
es
inc
jae
pushf
pop
pop
jns
pop
sub
inc
mov
jb
repnz
push
lods
stc
and
xor
inc
movsb
movsb
lds
out
ret
add
xor
adcb
push
fs
jns
add
cli
xor
cs
mov
mov
xor
push
repnz
mov
cli
shrl
pop
inc
in
imul
or
jne
adc
in
inc
jg
adc
jge
lea
inc
mov
loopne
test
fisubrs
sbb
je
test
decb
cmp
arpl
xor
imul
sbb
xchg
dec
imul
iret
ja
rcrl
cmp
cmp
outsl
pop
repz
lock
aas
outsl
dec
and
insl
test
cmc
jno
push
ret
mov
or
cmp
lods
xchg
mov
dec
jle
push
push
mov
fstl
mov
lock
sub
or
fsubp
ja
out
lcall
mov
dec
es
jmp
es
mov
cs
ds
ret
mov
test
push
clc
adc
testl
mov
pop
in
mov
mov
sti
cwtl
repz
test
adc
repnz
cmc
out
cmp
pop
mov
pop
xor
shlb
push
ja
iret
call
mov
mov
outsl
das
lods
and
and
jle
adc
inc
mov
and
pop
cltd
rol
mov
jg
test
cltd
cmpsb
test
in
test
mov
les
jp
mov
outsb
fstl
jmp
les
sbb
xor
lcall
nop
mov
lcall
xchg
fisttps
aas
add
jg
rcr
sarb
push
mov
push
dec
data16
hlt
ret
daa
push
in
or
shlb
xlat
fdivp
dec
inc
fnsave
shrb
aaa
cmp
mov
pop
ret
xchg
add
testl
ret
lock
add
push
mov
sub
lahf
dec
xchg
fimull
lret
lods
cwtl
fidivrl
cmp
rclb
xchg
push
sahf
mov
out
and
xor
xor
jg
enter
pop
jnp
pop
hlt
out
jp
and
mov
cmp
mov
xchg
call
fisttpll
scas
mov
push
adc
mov
aam
mov
mov
das
mov
daa
inc
cltd
push
sar
cmp
addr16
shrb
push
pop
push
jne
sbb
mov
fidivrl
test
fcomi
fadd
mov
test
cs
test
mov
mov
stc
inc
jle
rcll
mov
add
xor
cmovnp
push
in
add
cmc
jns
sahf
add
hlt
xchg
shrl
jmp
mov
in
out
and
popf
xchg
lcall
and
int3
xor
mov
mov
sbb
cmp
mov
repz
or
and
adc
vorps
loope
test
cltd
daa
adc
sub
mov
push
or
and
popa
add
fstpl
or
out
je
xor
jg
and
pop
dec
adc
mov
scas
mov
dec
mov
jp
pop
push
ror
pop
sahf
aad
mov
in
outsl
mov
sbb
in
cmpxchg
xor
fdivs
and
sbb
jns
push
sbb
inc
pop
mov
dec
pushf
adc
push
loope
out
std
dec
stc
popf
jns
xchg
mov
inc
jg
add
pop
adc
aas
inc
mul
inc
xchg
ficompl
cli
pop
dec
ss
daa
sti
mov
and
cmpsl
aas
xchg
shl
add
inc
add
ret
push
xchg
pop
jae
push
stos
sub
sub
mov
lahf
int
cmpsl
and
out
add
int
andb
mov
dec
repz
dec
xchg
test
pop
call
andl
pop
cmp
bound
daa
mov
leave
sub
iret
mov
enter
jo
pop
inc
dec
push
mov
sbb
lock
fsubs
cwtl
stos
xchg
fidivrs
call
pop
enter
push
jmp
sub
pop
cmp
mov
in
xlat
jmp
ret
mov
xor
mov
fisttpl
test
cmp
mov
jnp
arpl
or
outsl
mov
mov
add
mov
or
addb
rorl
or
mov
movsb
ss
lods
lahf
sub
leave
or
addr16
dec
cmp
mov
and
in
aaa
rorl
daa
cltd
cltd
mov
hlt
mov
ds
not
cwtl
movsl
push
adc
xor
cmc
or
xor
jbe
dec
shrb
test
in
and
mov
inc
bound
dec
sub
filds
xchg
add
push
mov
shrb
dec
sbb
rorb
mov
fs
jb
jbe
push
pop
or
test
insb
daa
mov
sub
dec
outsb
cmp
in
pop
repz
adc
cmp
sub
jne
dec
pusha
in
into
icebp
adc
xchg
or
nop
subb
and
mov
mov
add
inc
and
inc
mov
out
stos
mov
pop
fisubs
or
jo
lods
mov
push
js
jbe
inc
shll
xchg
jle
pop
xor
insb
fstps
mov
les
jmp
in
sbb
cmpsb
jb
pushf
cmp
jne
pop
dec
iret
jae
xchg
lock
outsl
cltd
notb
es
insb
and
add
out
xchg
rolb
xor
xor
in
in
or
inc
mov
mov
stos
aam
and
mov
push
xchg
xchg
and
pushf
or
mov
aam
add
sbb
cmp
icebp
push
repz
dec
aad
pop
fimull
add
ja
and
das
adc
fcmove
sbb
push
in
test
adc
andb
jge
mov
sbb
mov
and
std
fisttpl
mov
nop
xor
sti
insl
test
xor
sbb
adc
subb
icebp
icebp
mov
fwait
mov
cmp
out
jp
test
cli
iret
sub
pop
xor
cli
call
adc
xor
je
subb
fnstcw
icebp
mov
dec
lret
mov
and
outsl
adc
cmp
insl
xor
call
mov
loopne
push
sbb
insb
sbb
rcrl
inc
daa
xchg
add
dec
enter
ljmp
insb
psrld
xchg
lcall
sbb
and
jnp
push
jmp
xchg
ljmp
inc
push
cmp
jbe
xchg
je
and
iret
lea
js
scas
int3
aas
mov
ret
sub
mov
add
popf
sbb
daa
mov
mov
dec
in
push
dec
add
loop
xchg
mov
dec
fsubs
or
cmp
pop
dec
push
outsb
inc
dec
sub
cmc
daa
stos
scas
adc
lahf
popf
sub
cs
pop
dec
testl
and
sub
test
sub
push
call
add
repz
fsubrs
push
add
in
lds
mov
cli
jbe
fiaddl
xchg
std
or
sbb
movl
mov
jae
push
rcll
jns
call
or
gs
leave
push
mov
test
test
mov
leave
lret
pop
cmp
inc
mov
mov
mov
sub
int3
aad
outsb
pop
push
sbb
pop
mov
mov
popf
pop
lods
jno
test
jnp
leave
jae
jecxz
out
dec
rcrl
lods
sub
sbb
push
sub
mov
pop
cmc
sbb
adcb
je
imul
fisubl
sub
popa
cmp
cld
xchg
dec
jns
lods
stc
ds
mov
xchg
and
enter
incb
stos
inc
lret
enter
loope
addr16
inc
pop
fistl
imul
ds
lods
arpl
pop
dec
push
jecxz
ja
jmp
iret
and
add
lods
pop
cmp
xor
xchg
cmp
mov
test
movsb
xchg
sahf
pop
mov
cmp
pop
stos
push
and
or
jg
lock
pop
adc
enter
test
mov
loop
jae
mov
repnz
sbb
imul
popf
mov
mov
xrelease
add
movsl
jmp
sbb
cmpsl
shr
push
adc
sub
add
fistpll
push
jb
inc
fucomp
pop
pusha
out
add
pop
test
dec
xor
aas
rolb
xor
or
cs
and
jbe
jge
mov
sbb
aas
popf
icebp
mov
pop
mov
lahf
clc
adc
loopne
mov
push
aaa
stos
sarl
mov
mov
cmpsb
and
aam
shl
dec
pop
fisubs
gs
scas
cmp
addb
adc
jge
mov
in
add
push
xchg
and
hlt
rol
jb
std
jp
lock
out
ds
mov
xchg
mov
das
cltd
scas
mov
xchg
adc
xchg
jae
mov
in
test
adc
push
jae
loopne
int
jb
pop
mov
sbb
pop
pop
xchg
pusha
dec
xchg
inc
adc
sbb
sti
bound
adc
cmp
sub
inc
jb
dec
mov
jge
push
inc
lods
and
dec
repz
les
test
push
push
cld
call
stos
push
mov
in
jno
std
mov
fstl
mov
add
add
cltd
scas
loop
or
int
out
in
add
push
sub
pop
cmp
mov
test
mov
ss
call
pop
push
sub
sub
inc
mov
jbe
add
sarl
sub
pushl
jnp
shlb
jno
and
popf
fwait
jl
sub
cmp
adcl
outsl
ljmp
and
push
push
xor
xchg
xlat
jno
adc
jl
sub
inc
push
mov
and
and
push
pusha
inc
lret
jns
loopne
out
sub
mov
sbb
xchg
sub
flds
jno
jb
ret
and
pop
insb
pop
out
scas
and
mov
ror
push
or
mov
ss
jnp
pop
stos
gs
add
mov
mov
jge
scas
stos
lea
in
add
mov
xorl
xor
push
aad
xor
jnp
scas
xor
hlt
repz
out
dec
imul
xchg
dec
push
push
mov
je
dec
pop
push
pop
fwait
add
daa
jnp
cmpsl
fdivs
lret
sub
push
dec
cwtl
ret
loope
jb
or
daa
pop
mov
or
sub
fwait
sbb
push
mov
dec
jp
fcmovnu
shll
notb
je
js
or
adc
mov
scas
and
xchg
xchg
add
loope
push
aas
cvtps2pi
pop
repnz
xor
mov
sub
xor
shlb
mov
mov
push
push
cs
cmp
push
push
ja
jae
insb
xor
test
aam
sbb
cs
stc
sub
lds
jg
or
adc
iret
or
and
ret
in
dec
int3
data16
cld
push
xchg
dec
rcll
jmp
jl
cld
sub
add
aas
loope
dec
pop
mov
daa
push
hlt
popf
in
cmpsl
fimuls
loopne
push
in
ret
xchg
mov
mov
js
daa
sbb
popa
idiv
cld
ljmp
call
and
std
out
xchg
sbb
outsl
pop
aad
mov
divl
imul
push
arpl
mov
push
cwtl
push
dec
insb
mov
andl
dec
stos
arpl
pop
in
or
cmp
xchg
sbb
bndstx
mov
and
mov
lahf
cmp
cmp
mov
popa
ljmp
sub
ss
push
lds
popa
push
stos
cs
movsb
or
sbb
lahf
push
rcr
jg
pop
and
add
scas
xor
incb
push
xchg
in
mov
rcrl
into
jmp
lods
mov
mov
or
inc
xchg
fisttps
sbb
cmp
sub
test
xchg
pusha
add
popf
jg
fldt
jl
aas
mov
sub
add
rorl
cs
nop
test
xchg
adc
mov
repnz
aas
std
and
je
adc
sub
jne
push
ljmp
test
add
mov
inc
lcall
scas
push
loope
test
or
stos
aaa
xor
or
xchg
js,pt
or
xchg
aaa
shl
fldenv
cmp
lds
nop
ljmp
jbe
push
mov
push
subb
jl
inc
aam
cmp
int3
jno
dec
popa
je
mov
mov
push
cmp
rolb
push
nop
std
cli
aam
je
rcl
pop
inc
lret
in
inc
adc
cs
sbb
dec
push
cmp
ljmp
aam
dec
mov
scas
jge
ja
nop
sub
dec
test
movb
lods
test
int
push
dec
lcall
mov
insb
outsb
xchg
xor
std
jae
imul
sbb
pop
mov
sahf
mov
xor
rolb
or
mov
mov
and
rcrb
sub
add
shrb
jne
mov
ss
xor
jno
pop
lret
pop
jl
lea
jmp
and
out
lret
mov
lods
frstor
add
push
out
xlat
js
and
dec
into
and
or
movsb
pop
jns
xchg
jl
out
inc
xor
mov
pop
jmp
das
fidivl
jnp
outsb
inc
aad
ds
jp
xor
xor
fwait
xchg
mov
es
lahf
jns
cld
ja
mov
andl
sbb
cld
out
mov
inc
or
jecxz
jle
xchg
loopne
das
lods
jmp
xchg
push
inc
jo
mov
aam
pop
outsb
mov
adc
fadds
mov
mov
sbb
sbb
frstor
test
addr16
mov
loope
cwtl
fnsave
and
dec
fildll
dec
ljmp
repnz
pop
mov
xor
fnstsw
push
mov
jecxz
pushf
jl
adc
cwtl
xorb
mov
mov
cmpsl
sub
imul
adc
lock
cvtps2pi
push
or
lock
jo
push
ret
pop
sbb
test
xchg
xor
ljmp
repnz
pop
cmc
jne
mov
and
jns
dec
cmpsb
jne
xchg
aas
lock
je
jg
lds
push
arpl
int3
pop
pop
sub
push
insb
mov
jmp
xor
jnp
rcrb
dec
sub
inc
xlat
sub
sub
pop
outsb
ja
cmpsl
sahf
dec
sub
sbb
in
std
add
sbb
xor
sbb
daa
into
mov
mov
jne
inc
loopne
cmp
outsl
jecxz
push
stos
xlat
sahf
push
sbb
aas
call
cmp
insb
jl
ficomps
sbb
add
jns
mov
or
mov
jns
jae
sti
lds
pop
xor
pop
in
lret
mov
and
out
or
andl
push
loopne
jecxz
inc
daa
enter
xchg
xor
push
ficoml
fldcw
test
or
cmp
repnz
dec
jle
mov
and
das
neg
test
xchg
inc
repz
loopne
mov
cltd
mov
lahf
jnp
or
pop
shlb
dec
subl
push
xchg
mov
sbb
lret
and
stos
and
and
push
mov
sbb
into
push
into
cmp
xchg
push
mov
adc
push
fnstcw
jge
inc
imul
jae
shr
adc
enter
pop
movsl
push
jmp
xor
pop
insl
in
movsb
shlb
adc
roll
dec
adc
in
xchg
pop
xchg
lea
sbb
insl
aam
outsb
insl
mov
dec
enter
mov
ss
mov
fbld
fdivrl
cmpb
push
mov
inc
divl
pop
stos
mov
out
imul
and
in
ret
xor
das
inc
mov
cmp
fcmovnbe
mov
idivb
add
enter
sti
or
movhps
and
jbe
dec
fiadds
lds
scas
mov
add
jnp
iret
xchg
pop
jno
dec
stc
rcl
jae
push
xchg
xor
jg
and
adc
push
mov
mov
cs
jno
inc
mov
fbstp
pop
xor
and
inc
int
push
out
push
test
jns
mov
js
ret
push
lahf
jl
mov
mov
into
adc
or
push
testb
ss
push
repz
inc
pop
xchg
mov
in
jecxz
dec
subl
dec
ret
sub
gs
das
or
or
and
jmp
fwait
or
pop
lock
popf
xor
xor
mov
cmp
mov
push
call
sbb
leave
fldenv
fcmovnb
xchg
jmp
jecxz
inc
popf
inc
sub
jl
int
jnp
repz
aas
jle
lods
ret
sub
mov
add
xor
xor
cmp
mov
and
ljmp
pop
jnp
dec
cwtl
call
sub
add
ficompl
mov
inc
push
int3
cmc
add
int3
sbbb
mov
clc
cli
in
jp
mov
arpl
imul
inc
addb
clc
les
dec
outsl
pop
aam
ljmp
mov
cmp
fdivs
aam
adc
pop
fsubrl
ret
inc
lcall
push
jae
xchg
dec
sub
test
stc
pusha
xchg
ret
cwtl
mov
sub
ss
sbb
mov
lahf
out
mov
es
adc
es
push
pop
mov
jmp
ret
mov
iret
icebp
sbb
enter
sub
inc
test
int
out
dec
fdivl
pop
mov
movsl
mov
roll
adc
inc
hlt
push
add
imul
jnp
fistpl
in
lcall
push
xchg
popa
xchg
lahf
mov
cmp
popf
fwait
out
sbb
in
and
daa
mov
pop
push
movsl
ja
mov
dec
cmp
repnz
sub
jbe
push
pop
xchg
mov
lods
mov
xchg
sbb
cmp
dec
out
dec
sbb
jg
hlt
test
in
mov
leave
push
ret
out
cmpsb
stos
jae
lret
lret
mulb
fs
xchg
enter
push
xor
rol
xor
outsb
push
aas
test
fidivrs
push
jle
popa
lods
loopne
cvtps2pd
push
push
lock
push
cltd
jle
or
mov
pop
in
push
xor
xor
rcl
mov
popa
scas
pop
push
mov
sbb
mov
fildll
or
lods
cld
or
add
ds
mov
jge
out
adc
shl
cli
or
xchg
hlt
mov
ret
adc
jne
fsubs
adc
call
out
in
mov
enter
push
sub
dec
cmp
sbb
lock
mov
out
push
sub
jns
not
fdivl
cmp
jae
fcomps
movsl
int
daa
dec
jge
xorb
shlb
jb
arpl
xor
sbb
add
hlt
imul
enter
lahf
push
cmpsb
mov
leave
js
mov
push
js
xchg
fidivl
jge
popa
neg
nop
jmp
out
fs
jle
lods
fdivp
pop
imul
enter
pop
push
fwait
gs
in
or
add
sbb
inc
jp
es
and
xchg
in
inc
imul
data16
in
roll
jne
gs
lock
sbb
cmpb
and
add
xorl
sbb
fdivrl
add
out
push
das
loopne
gs
test
jb
jg
mov
jbe
pushf
mov
call
ljmp
rcrb
sbb
sbbl
xchg
add
fisttpll
push
cld
mov
lock
or
push
fnstcw
sbb
sahf
inc
cmpsb
nopl
fstpl
add
push
xchg
fstp
in
adc
pop
cld
int3
test
pop
ljmp
arpl
push
scas
adc
xchg
mov
fwait
cmc
sub
loope
cmp
sbb
shlb
inc
cmp
rcrl
aam
ds
inc
stos
loope
popf
add
or
jp
in
lods
js
mov
lcall
xor
jle
enter
fnstsw
jbe
std
inc
jg
clc
mov
sbb
dec
adc
nop
jp
mov
rcr
cmc
ja
int
xor
fiaddl
clc
ja
loop
pop
mov
dec
fisttpl
add
sub
xchg
les
mov
inc
aam
xchg
xlat
pop
inc
sarb
daa
hlt
pusha
jg
pop
sbb
push
cmp
clc
dec
das
push
xchg
cmp
pop
out
adc
cmp
jnp
testb
data16
es
mov
xchg
dec
sbb
aam
sub
aaa
idivl
pop
sub
mov
dec
loop
cs
and
dec
cmpsb
dec
and
orb
jo
ljmp
cwtl
jns
xchg
push
repnz
sub
push
push
pop
lahf
or
cmp
hlt
push
icebp
stc
dec
inc
or
testl
sub
inc
stos
fwait
inc
fmul
dec
jb
aad
push
or
cwtl
fdivrl
add
push
dec
out
xchg
in
popf
xchg
pop
hlt
stos
sahf
inc
cld
inc
jo
loopne
in
adc
xchg
jae
ljmp
lcall
cltd
inc
pop
jg
clc
mov
pop
rol
xrelease
call
push
fistpll
sbb
rcrl
std
fidivl
xor
test
in
cli
out
jecxz
mov
mov
mov
fisubrl
js
cmc
mov
xor
or
fbld
sbb
lds
les
aad
lds
repnz
xchg
xchg
outsb
flds
sub
arpl
das
js
scas
sbb
sub
cmp
mov
inc
pop
jne
sti
leave
sbb
adc
sahf
enter
dec
lret
pop
stos
in
pop
pop
jne
xchg
dec
cli
cmpsb
pop
sahf
adc
and
addr16
or
mov
repz
xchg
stc
push
jl
push
cmp
xor
xor
bound
sub
dec
mov
add
dec
lret
stos
dec
outsl
cli
sbb
insl
push
add
pop
movsb
inc
rorb
add
and
jle
sbb
inc
lods
call
xchg
cmp
push
mov
adc
fildl
adcl
dec
inc
pop
gs
dec
cmc
and
xchg
xor
and
jo,pt
mov
mov
pop
dec
push
jmp
push
or
les
shl
jns
in
mov
pop
jle
jecxz
lret
inc
into
aam
test
js
sbb
dec
fwait
xor
icebp
jbe
xchg
ds
fdiv
cmp
sbb
jge
aas
sub
aad
mov
add
dec
pop
push
ret
add
or
mov
insb
push
push
push
and
pop
stos
add
jnp
inc
pop
push
cmp
icebp
daa
dec
imull
std
jbe
cmp
in
test
sahf
js
fwait
pop
in
or
add
scas
lcall
icebp
pop
or
ss
push
xchg
lds
push
pop
cs
cmp
pop
scas
xor
insb
lret
ljmp
xor
cs
test
cmp
mov
rorb
fcmovbe
addr16
aas
mov
insl
out
dec
stos
lds
mov
jb
and
lret
xchg
adc
pop
pop
fstl
iret
dec
out
out
pop
sbb
adcb
mov
outsb
imul
pop
pop
and
or
stos
xchg
cmc
inc
pop
push
mov
and
inc
jge
aam
push
sbb
hlt
pop
cmp
mov
and
int
xchg
push
dec
nop
jb
pop
dec
cmpsb
or
minps
sbb
push
imul
mov
sahf
sub
pop
insl
cmpsl
shl
jecxz
loopne
arpl
add
and
in
in
out
cmp
mov
ret
jp
adc
sbb
inc
and
sub
xchg
lahf
dec
cwtl
adc
xchg
xchg
adc
repnz
dec
aas
jb
adc
insb
mov
mov
loop
xor
in
pop
jae
pop
lret
mov
jno
or
inc
shlb
sti
xor
test
mov
aaa
loope
dec
mov
adc
and
movsb
jb
jae
popa
jno
sbb
rcr
jge
push
hlt
dec
mov
cmp
lods
xchg
out
lods
dec
mov
adc
mov
mov
fwait
imul
and
jg
pop
stos
inc
jp
cmp
cmp
sub
mov
fsubl
imul
mov
add
loop
mov
clc
sbb
sbb
mov
out
loopne
stos
push
jb
xor
movsb
inc
mov
xchg
sbb
test
add
sbbb
adc
out
push
aas
xor
and
fidivs
cmp
bound
mov
add
dec
cmp
dec
js
js
lcall
xchg
cltd
add
lock
cltd
shl
test
out
adc
and
mov
rorl
dec
and
adc
add
mov
dec
jecxz
jae
cmp
test
push
xlat
inc
mov
movsl
test
and
xchg
adc
icebp
rolb
dec
jno
orl
xor
inc
aam
fwait
ds
popa
ja
ljmp
sub
jno
shlb
mov
into
dec
jecxz
lea
mov
xor
and
jno
ss
inc
sbb
adc
mov
mov
stos
data16
lds
dec
lock
out
adc
inc
sbbb
xchg
cmp
fcmovnbe
jmp
or
scas
mov
mov
hlt
pop
xchg
push
dec
outsb
xchg
pop
jnp
cs
xchg
or
xchg
out
rorl
xchg
stos
subl
iret
xchg
icebp
ljmp
das
scas
or
xchg
dec
mov
mov
cmp
add
dec
push
outsb
ret
dec
fcoml
pop
sbb
fstps
shlb
pop
push
pop
rorb
movsb
push
jg
outsl
imul
jle
xchg
insb
cmp
pop
xchg
xor
mov
mov
lock
pop
cmpsl
mov
jo
mov
std
push
pop
dec
pushf
rol
xchg
ljmp
in
jnp
icebp
gs
or
das
mov
outsb
sub
cwtl
fsubrp
add
rclb
arpl
mov
out
adc
push
mov
sti
in
call
mov
cmp
repnz
xchg
mov
psubusb
ja
xor
pop
cmp
lods
jnp
mov
add
ja
push
mov
in
test
jg
insb
pop
inc
popf
enter
popf
movsl
pushf
push
fs
cmpb
or
pop
jne
dec
mov
xor
dec
mov
dec
pusha
out
jns
xor
and
in
scas
out
aas
cmovp
pop
jle
lcall
ror
aas
out
fldpi
dec
jl
in
inc
fwait
mov
or
pop
inc
jns
pushf
add
es
inc
sub
stos
sbb
cmp
inc
pop
jae
test
cmc
sbb
inc
xchg
jo
pop
fstps
xor
bsf
dec
cs
repz
iret
cmp
adc
jne
sbb
add
jnp
in
test
outsl
sub
cli
xor
jmp
std
pusha
leave
and
mov
add
shlb
sbb
adc
dec
xor
loopne
scas
sub
shlb
dec
adc
sbb
insl
lahf
jmp
inc
insb
jns
adc
push
iret
xor
in
ds
lcall
divl
icebp
adc
sub
scas
and
mov
inc
jg
jo
in
add
test
pop
mov
orb
jnp
cmpsl
scas
xor
sbb
pop
add
clc
sbb
mov
dec
xor
sub
ja
inc
adc
lret
insl
sarl
int
fcmove
scas
nop
test
mov
rol
mov
in
das
js
xor
stos
sub
jb
push
scas
adc
iret
aaa
push
xchg
mov
mov
testb
pop
call
inc
push
mov
les
and
mov
fwait
shlb
dec
pop
fs
push
lret
ret
cmp
mov
mov
addr16
sbb
cmp
cmp
clc
pop
clc
adc
jmp
mov
and
xor
loopne
adc
mov
andl
mov
or
jecxz
fwait
rcll
aam
sbb
pop
std
cmp
mov
ja
mov
cmp
cmp
jmp
add
add
rol
std
shlb
in
lcall
add
aam
ja
or
pushf
sahf
in
popa
out
cltd
inc
insb
ret
cmc
test
loop
into
sub
jno
xor
aam
push
xchg
loop
ljmp
or
add
imul
and
sbb
sbb
mov
jb
sarl
push
adc
cmp
pop
insb
jecxz
ficoml
ret
cmc
jbe
mov
daa
add
add
and
mov
mov
dec
fstps
and
fldt
mov
pshufw
sbb
outsl
lock
jo
imul
int
mov
dec
test
cmp
imul
jae
sbb
shlb
and
dec
int
mov
ja
out
test
and
cmp
add
loop
icebp
jb
rcrb
jmp
lods
ret
push
jo
add
aas
push
dec
push
or
sti
scas
xchg
xchg
outsb
in
std
adc
pop
jo
cmp
out
fisttps
adc
aad
out
repz
push
imul
cmpsl
int
adc
cmp
out
pop
repnz
sbb
mov
cmp
rcll
pusha
fiaddl
jno
sub
gs
adc
sarb
add
jo
leave
push
dec
lock
ja
es
lods
adc
repz
out
scas
pop
nop
adc
mov
outsb
push
fwait
mov
jae
cmp
pop
mov
repnz
jmp
jns
mov
or
sub
or
push
fcomps
cmpsb
aaa
xor
xchg
int3
sub
pop
outsb
inc
jns
ret
sbb
outsb
add
cmc
jge
mov
insb
fisttpl
push
popf
xlat
es
mov
mov
inc
sub
mov
aas
rolb
sub
ja
pushf
stos
scas
jp
pop
push
rorl
mov
mov
pop
xlat
std
fwait
leave
int
xchg
loop
addb
mov
push
pop
mov
lahf
xor
leave
jno
sbb
xor
sbb
in
add
sub
cmp
pop
sbb
jno
arpl
or
sbb
or
ja
aad
mov
dec
rcr
into
cmp
or
inc
rol
push
dec
mov
adc
sub
mov
xchg
sub
mov
mov
sti
cmp
dec
add
shr
repz
xchg
aam
int
in
jns
adc
subl
mov
hlt
or
mov
xchg
cli
inc
leave
xor
adc
sahf
mov
sub
adc
add
fsubrl
push
lea
js
lret
out
pop
mov
sub
jecxz
out
xor
bound
test
pop
adc
lret
testl
sti
xor
bound
xchg
sbb
aas
jle
push
lret
push
dec
mov
mov
loope
xor
inc
cmpsl
or
sbb
xchg
mov
push
das
jo
lea
mov
add
inc
xchg
mov
or
sbb
xchg
es
push
push
out
dec
call
pop
call
push
cltd
adc
cmp
sarl
fwait
push
inc
out
or
cmp
dec
mov
int3
movsb
adc
jne
int
jo
dec
in
xchg
addr16
cld
jmp
and
scas
sub
lods
add
inc
lds
ljmp
add
out
sub
loop
loopne
mov
aam
cld
lods
ss
push
movsl
xor
cmpl
mov
cwtl
dec
int3
rorb
or
js
mov
dec
and
mov
push
xor
mov
call
mov
jmp
jno
je
adc
xor
and
loop
sub
push
jl
xor
test
cmp
xchg
jo
dec
int3
rclb
rclb
and
scas
jae
inc
inc
jg
push
fnstsw
addr16
sbb
ds
cli
push
and
jmp
add
jmp
icebp
loopne
and
scas
mov
mov
aaa
jno
gs
in
nop
or
jg
ret
sub
mov
insl
shll
aas
mov
jbe
xchg
jp
cmp
aad
lods
cmpsl
jae
push
xchg
push
mov
add
call
push
cmp
push
call
dec
fstpl
or
mov
xor
mov
int3
push
rcrb
lea
dec
inc
pop
lcall
jbe
sbb
cmp
ljmp
mov
cmpsl
push
xchg
push
scas
pop
or
popa
test
add
sbbb
sbb
mov
pop
stos
daa
cmc
rcrb
and
in
es
loopne
lcall
imul
aaa
out
cmp
mov
lahf
and
or
inc
and
push
push
cmp
sbb
into
lds
outsl
lea
xor
xor
out
mov
imull
jecxz
pop
jnp
adcl
push
push
dec
popf
adc
add
fists
fildll
lret
std
mov
xchg
sub
pop
xchg
xchg
or
or
dec
fistpll
fisubrs
cmp
push
or
xorl
popl
es
jb
jmp
imul
pop
arpl
dec
out
stc
lds
fwait
bound
push
ljmp
mul
mov
or
mov
fwait
inc
jecxz
and
jae
pop
or
cmp
mov
jnp
pop
push
das
jmp
sub
inc
push
mov
lods
in
bnd
hlt
lret
dec
fnstcw
dec
inc
fdiv
in
lds
and
ljmp
jecxz
mov
sbb
dec
adc
mul
mov
mov
sbb
push
int
mov
add
xchg
jae
adc
sarb
pop
outsl
mov
xchg
repz
sub
ds
cmpsb
mul
mov
daa
daa
mov
add
xor
mov
xor
scas
cmp
into
push
inc
adc
sahf
test
out
fiadds
movb
or
adc
aaa
out
mov
mov
inc
inc
fsts
push
loopne
cmp
sarl
or
inc
xchg
push
xorl
sti
pop
nop
inc
dec
xor
inc
les
mov
or
xor
or
sub
shrb
filds
xchg
lret
fmulp
test
push
out
xor
rclb
xchg
into
lret
sbb
xchg
test
test
or
in
leave
loopne
mov
les
adc
lcall
xchg
push
push
sti
lret
or
test
xchg
inc
add
cwtl
add
inc
jl
lea
pop
stos
lods
push
je
sti
adc
inc
sub
xchg
pop
pushw
aas
add
aas
mov
stos
adc
fs
xchg
mov
int
sbb
clc
pop
push
popf
sti
mov
or
movb
mov
sub
mov
sbb
mov
in
add
pushf
xchg
pop
sub
mov
add
lea
out
pop
mov
aas
push
add
subb
push
xor
inc
cmp
inc
pop
bound
mov
mov
je
or
loopne
lret
dec
dec
icebp
mov
loope
push
mov
lods
sarb
dec
cmpsl
sbb
add
pop
arpl
add
mov
and
mov
push
or
mov
pop
push
pop
mov
xor
sub
add
push
ret
les
dec
mov
jne
cli
stc
repz
inc
jge
outsl
movsb
mov
gs
nop
jno
nop
inc
addb
fnstsw
and
sti
adc
std
shr
mov
xchg
pop
shll
cs
movsl
and
pop
test
ror
data16
aas
ja
dec
lds
leave
pop
pop
push
ljmp
imul
aaa
inc
mov
roll
mov
xlat
insb
cltd
fdivrs
pop
jno
add
sbb
ljmp
lret
sbb
ret
mov
pop
or
push
jp
outsb
xor
dec
mov
sub
mul
mov
mulb
rolb
add
or
insb
push
cmp
push
cmp
loope
gs
movsb
mov
dec
es
xlat
adc
lahf
mov
into
mov
xlat
sub
loopne
dec
loop
es
mov
call
in
cmp
mov
cmpsl
and
mulb
aam
mov
mov
rorl
inc
xchg
sub
cld
add
shl
loope
fs
clc
pop
inc
mov
rorb
test
bound
xorl
and
pop
add
push
loope
mov
das
mov
insb
jo
sahf
sub
dec
mov
jnp
jl
cmp
das
popa
lds
scas
jle
test
jno
aam
mov
sbb
stc
push
cwtl
mov
inc
xlat
dec
and
aad
adc
popl
leave
adc
jno
pushf
push
lods
inc
inc
jge
jno
jl
movsl
jl
xor
in
xor
dec
push
dec
mov
jmp
pop
jno
push
or
pop
dec
idiv
inc
sbb
sbb
xor
jne
pop
add
mov
xchg
insl
jae
mov
mov
inc
sbb
jbe
jns
scas
and
fbld
test
inc
jbe
popa
call
jmp
pop
dec
xor
das
mov
sbb
mov
dec
nop
imul
rcl
movsb
xorb
add
mov
ss
adc
inc
adc
aad
sahf
frstor
pop
cmpb
and
dec
jne
outsb
mov
sbb
inc
pop
xor
push
sub
es
adc
ds
mov
testl
and
aas
mov
insb
sbb
push
aaa
jmp
mov
sbb
rcll
jnp
sahf
cmc
stos
mov
xchg
add
add
imul
rorl
and
mov
push
adc
and
or
add
xchg
mov
mov
push
sbb
add
movsb
aas
je
scas
test
or
or
pop
decb
fstpt
adc
mov
in
jp
es
cwtl
lahf
jbe
or
das
les
rcrl
mov
add
outsl
jp
ret
push
pusha
mov
mov
jl
mov
mov
mov
test
js
enter
cwtl
adc
enter
je
negb
add
mov
pop
adc
push
in
sahf
mov
sahf
mov
pop
mov
sbb
loope
mov
outsb
jbe
js
xchg
dec
cmp
in
lock
push
imul
das
pop
xchg
push
aad
test
loope
xchg
rcll
cmp
nop
testb
outsl
lods
add
pusha
or
sbb
jno
pop
dec
loop
push
aam
jae
sub
jno
clc
insl
mov
and
xchg
gs
dec
xor
mov
idivl
sbb
mov
pushf
pop
cmp
xor
push
arpl
dec
cs
cwtl
orl
cmp
add
mov
dec
movsb
push
das
sub
sti
lret
pop
pusha
aaa
outsl
mov
ret
mov
push
into
enter
pop
push
push
and
lret
xchg
and
xor
pop
cs
mov
sub
lahf
sub
mov
mov
cmp
mov
add
stos
dec
xor
lea
repnz
in
das
xor
aam
xor
cmpsl
push
adc
push
push
arpl
push
add
dec
clc
lret
sbb
fidivrs
pusha
aam
inc
das
mov
mov
test
fsubrl
jmp
or
in
lods
aas
fwait
add
into
sbb
in
roll
loopne
loopne
adc
ss
fwait
jns
inc
or
divl
pop
cmp
addl
adc
xlat
and
stc
pop
pop
out
scas
movsb
stos
out
mov
movsb
sub
pop
imul
add
jb
push
mov
inc
fcomps
xchg
mov
adc
cmp
aam
mov
pop
imul
repnz
jnp
inc
cmp
dec
out
into
push
in
imul
dec
xchg
cmpsb
inc
mov
xchg
jo
cmpl
sub
sub
cmp
cmp
xor
cmp
pinsrw
add
sbb
insl
sub
sbb
lahf
stos
add
and
add
lcall
lods
and
cmp
mov
and
or
mov
push
in
or
into
adc
cmp
xor
into
inc
out
inc
and
sarl
imulb
jmp
pop
push
mov
rep
ror
adc
divb
inc
fcompl
rorl
mov
popf
cmp
lahf
mov
mov
leave
call
adc
gs
and
int
lods
and
lea
addr16
pushf
mov
lea
inc
out
push
sub
mov
repz
xlat
adc
adc
push
xchg
inc
pop
cld
xchg
bound
jmp
xorl
mov
roll
loope
test
fists
test
mov
xchg
popa
mov
push
xor
xor
add
xor
cmp
adc
mov
outsb
inc
mov
in
add
std
in
or
dec
lret
push
int
pop
push
cmpsb
add
xchg
pop
jo
out
insl
mov
mov
jmp
jecxz
in
mov
dec
mov
push
sti
out
in
push
mov
mov
pop
ret
lods
add
into
stos
mov
push
testb
or
add
test
negb
adc
mov
rclb
nop
or
lods
repnz
adc
xchg
enter
hlt
inc
cli
scas
or
out
sbb
push
dec
mov
or
pusha
cs
cwtl
xchg
stc
lock
bound
push
inc
push
lret
mov
repz
out
lds
push
xorl
mov
xchg
push
sbb
stos
outsb
mov
in
mov
inc
mov
cs
mov
xor
add
int3
adc
pop
jbe
xchg
cmpsl
cmp
cmpsb
jne
xor
fmulp
inc
fidivrl
notl
aam
enter
push
in
mov
int
fisubrl
mov
jns
js
push
pushf
imul
inc
mov
cmpsb
xor
in
sub
rep
pop
xlat
popa
and
dec
add
mov
gs
jle
pop
je
jecxz
clc
xchg
movsl
mov
lock
inc
jmp
cmp
jnp
ss
stos
std
push
sub
xor
or
push
xor
xchg
jb
in
jmp
cmpsl
icebp
push
rcl
add
or
cmp
rorl
jecxz
inc
pushf
mov
pop
mov
mov
lods
test
je,pn
movsb
dec
clc
mov
cli
jb
stos
inc
je
xor
cmp
hlt
push
and
jno
out
mov
pop
jge
stos
imul
lret
call
inc
dec
ja
jb
daa
in
cmc
add
mov
fstpl
sub
mov
sbb
cmp
bound
dec
dec
rcrb
and
pop
ss
xchg
push
and
dec
shlb
mov
mov
jns
inc
jo
push
dec
cltd
mov
jmp
out
cmp
stos
aas
das
pusha
movsb
subb
mov
or
sbb
sub
jle
dec
js
aad
fxch
loopne
or
or
cmp
mov
loope
push
pop
lahf
xchg
lahf
xor
sbbb
aad
movsl
je
mov
pop
xchg
and
lods
aad
or
lods
rolb
xchg
jnp
js
inc
shll
clc
mov
sub
push
cld
sahf
in
in
popa
sub
or
mov
mov
ja
popf
inc
popa
movsb
mov
adc
mov
rcrb
mov
push
in
in
vmovq
sub
pusha
mov
and
dec
mulb
lods
jne
fimuls
fdivl
xchg
jno
sub
out
sub
scas
jo
mov
xlat
fstpt
mov
xchg
xorb
mov
mov
jnp
fldt
shrb
cltd
sub
fmull
fisubl
mov
repz
test
mov
hlt
or
insl
das
inc
inc
cmp
inc
mov
daa
xchg
pop
test
flds
jno
es
rcl
int3
mov
fs
adc
aad
enter
push
adc
decl
in
lea
mov
xorb
fs
cli
out
xchg
xchg
pop
or
mov
mov
dec
inc
sub
hlt
push
cwtl
and
xchg
rcrl
sub
inc
sarb
inc
mov
nop
cmp
mov
cwtl
lret
mov
ret
sub
xor
loopne
add
push
push
inc
movswl
add
icebp
mov
jne
adc
sahf
add
mov
adc
outsl
fbld
sub
adc
adc
mov
mov
lahf
sbbb
mov
jp
scas
sbb
sti
pop
loope
push
jno
inc
int
mov
sarw
lret
imul
cmpsb
xchg
rorb
mov
in
jg
les
jl
jae
xor
std
and
out
insl
into
xchg
sahf
mov
lock
sbb
daa
mov
or
sbb
lret
lahf
or
pop
inc
scas
dec
aam
push
xor
test
lret
and
in
adc
add
call
daa
popl
mov
mov
mov
and
mov
mov
adc
ja
rcll
daa
and
mov
xor
sbb
faddl
aam
arpl
call
mov
push
jno
pop
cltd
inc
mov
mov
jb
roll
inc
add
mov
push
add
ljmp
ds
arpl
xchg
inc
aad
pusha
mov
rcrb
or
xchg
pushf
out
test
mov
dec
lods
jae
notb
fwait
arpl
jnp
xchg
push
xlat
mov
std
loope
adc
adc
pop
mov
mov
xchg
into
pop
mov
fs
pop
jl
pusha
out
push
pop
movsl
imul
and
imul
sub
or
mov
xchg
push
js
aam
jge
pop
xchg
into
dec
fdivp
jnp
jno
and
lock
repnz
sub
dec
jnp
inc
imul
insl
into
sbb
shl
movb
out
add
adc
pop
dec
popf
push
rol
fs
inc
adc
test
adc
clc
shlb
pusha
cmp
mov
and
sahf
sub
lds
daa
movsl
add
insb
jnp
les
mov
subl
jecxz
hlt
mov
out
xchg
insl
shll
and
push
mov
jne
cmp
out
jne
aad
sbb
dec
push
jbe
mov
jle
outsl
fldenv
in
jae
and
pop
punpckhdq
je
jmp
data16
or
pop
dec
dec
sub
add
cmp
and
lret
mov
mov
mov
dec
sbb
jle
mov
ret
loopne
ret
jmp
aas
mov
sub
mov
mov
mov
divl
cmp
xor
xor
jle
mov
xor
mov
fimull
xchg
dec
outsl
mov
loope
dec
jns
pusha
dec
roll
mov
test
push
enter
stc
xchg
jae
dec
xchg
rcrl
xchg
jge,pn
cmpb
sbb
cs
and
out
xlat
lea
ret
adcl
sub
mov
xor
inc
sub
icebp
rorl
in
xor
sub
pop
ret
xor
jecxz
icebp
xchg
xchg
data16
jl
dec
mov
mov
add
clc
pop
dec
mov
sbb
pusha
push
mov
lcall
cli
arpl
cli
mov
into
mov
dec
xchg
xchg
bound
ret
push
mov
mov
arpl
add
in
insl
jl
ja
mov
xor
lods
cmp
out
pop
dec
lock
dec
pop
xchg
cltd
lgs
mov
lcall
stos
das
xor
dec
stos
add
pop
negl
add
lea
jno
clc
adc
and
mov
popf
jnp
lods
inc
andb
and
or
repz
jp
mov
enter
xchg
jo
mov
xor
daa
sbb
cmc
cmc
inc
insl
mov
int3
sub
bound
or
insb
adc
jo
mov
and
and
mov
les
icebp
jecxz
xchg
push
mov
stc
movsl
test
mov
lods
mov
add
and
cli
pusha
sub
push
push
ret
xor
inc
lahf
pop
xorb
jmp
or
cmp
cmp
addr16
movsl
std
mov
and
xchg
sbb
jne
pusha
fistl
inc
mov
mov
xor
add
adc
pop
lret
ds
dec
mov
push
rcr
adc
mov
push
pop
xchg
sbb
mov
cmc
insl
stos
push
mov
je
das
outsl
cwtl
jmp
cmpsl
sbb
nop
or
and
mov
dec
jmp
sti
and
xor
mov
xchg
les
rcr
xchg
cs
sub
movsl
sbb
inc
out
sti
mov
test
xchg
and
cwtl
cmp
repnz
arpl
or
jmp
roll
add
mov
cmp
movsb
sub
pop
sub
push
subb
pop
int
sarl
in
dec
rorl
adcb
push
jnp
jbe
adc
icebp
or
xchg
scas
loop
jnp
rolb
mov
jno
fs
int3
lds
imul
mov
pop
mov
dec
shlb
pop
std
jo
push
sbb
loopne
jp
scas
ja
cmp
outsb
mov
jae
adc
xor
jb
xchg
lock
jne
pusha
bswap
mov
dec
aas
jae
std
xor
mov
rolb
pop
repnz
fwait
cmp
or
inc
in
mov
ja
das
test
inc
xor
dec
push
fcompl
ret
loop
pop
enter
and
sarl
dec
xlat
cmp
adc
dec
testl
out
loope
cmc
insl
dec
imul
faddl
mov
cltd
xor
icebp
sbb
hlt
ret
mov
pop
js
xor
pop
hlt
sub
test
clc
xchg
and
loope
loop
roll
divl
or
loope
rcll
adc
into
or
mov
sbb
or
jp
xchg
int
and
outsl
push
xlat
filds
mov
ficompl
movl
and
cmp
xchg
pop
insl
mov
mov
cli
sbb
decb
hlt
pop
flds
sbb
cmc
ret
aam
pushf
scas
cli
adc
cmp
xchg
cmp
popa
cld
js
hlt
test
push
lea
mov
gs
sbb
pushf
xor
inc
xor
add
cmp
shll
xor
add
pop
pop
test
xchg
and
lahf
pop
shll
push
js
add
popf
imul
in
push
jne
inc
or
repz
xchg
mov
mov
push
sbb
dec
xor
fsub
mov
xchg
push
jp
or
mov
in
cmp
dec
out
sub
xchg
push
imulb
cmp
push
mov
push
clc
xchg
and
adc
mov
sub
pop
js
jno
dec
cltd
xor
dec
sub
or
add
xchg
inc
movsl
jbe
lods
sbb
mov
int3
dec
push
jp
test
cmpsb
ret
pop
cmpsb
mov
cmp
idivb
sbb
shlb
addr16
cs
loopne
cwtl
insb
call
pusha
sbb
jnp
daa
nop
xchg
ds
cmc
cmp
loop
push
mov
push
in
sti
sub
push
inc
pushf
dec
mov
stos
ficoml
cli
enter
sub
lods
sub
les
pusha
pop
mov
test
and
cmp
mov
add
dec
jle
push
add
loop
scas
xchg
inc
xor
lock
fbstp
aas
inc
jbe
sub
mov
movsl
sub
mov
mov
mov
fidivrl
adc
or
pop
xchg
movsl
dec
and
cs
sbb
cli
mov
dec
aad
xchg
cltd
pop
and
jl
lahf
or
inc
xchg
push
lret
fstpt
xchg
and
push
cmp
mov
mov
fwait
xor
mov
mov
dec
adc
xor
decb
and
clc
ret
lods
in
insb
jmp
dec
push
push
cltd
mov
jo
mov
push
ret
int3
ret
test
sub
orl
roll
adc
mov
mov
mov
jo
sbb
rorb
inc
cmp
push
xor
xchg
mov
jae
imul
cmpsl
aad
dec
daa
lret
xchg
cmp
sbb
outsl
jo
adc
jg
adc
pmulhw
fs
and
gs
xchg
dec
mov
pop
ds
xor
and
inc
std
push
adc
sub
push
inc
in
push
mov
fstps
add
xlat
xor
jmp
scas
xchg
movsb
inc
dec
mov
push
mov
add
mov
aad
mov
inc
std
cmp
push
ret
fsubl
enter
imul
cmp
mov
add
lret
loope
sbb
jno
adc
sbb
cs
and
data16
icebp
loope
mov
outsl
or
push
and
xchg
and
sbb
mov
cmpsb
add
cmp
mov
cmp
xchg
sti
jge
pshufw
cli
mov
es
push
or
sub
scas
push
bound
jb
movsl
fistpll
in
pop
int
rcl
ss
dec
push
popa
sbb
out
clc
mov
ja
pop
les
mov
jl
jo
loope
pop
push
fdivl
push
push
pop
ss
lea
ret
xchg
mov
fdiv
dec
out
add
mov
insl
lock
les
inc
fs
dec
sub
test
sti
movsl
jo
adc
mov
in
pop
xchg
out
shll
jle
aaa
xchg
xchg
lods
or
iret
fcmovb
or
movsb
iret
and
mov
mov
jp
pop
rorb
loop
or
test
js
cs
scas
rcll
daa
inc
sub
jo
sbb
sub
lcall
repz
or
movsl
inc
movsb
xchg
push
push
insb
loop
add
and
nop
out
jg
push
sahf
cltd
jae
pushf
outsb
test
inc
std
xor
mov
test
psrad
std
fdivrs
repnz
je
sbb
cmp
sub
lods
push
ds
mov
fwait
iret
dec
test
push
scas
inc
dec
jno
lret
in
test
scas
and
pushf
mov
lods
add
xor
idivl
test
cmpsl
mov
fs
data16
loop
out
or
push
pop
fsubl
lods
jmp
fwait
cmc
xor
orb
add
movsl
push
mov
loope
dec
call
sbb
cld
mov
out
outsb
mov
mov
push
or
fldl
subl
sub
dec
fmull
stos
add
sbb
fs
fldl2e
inc
sub
xor
in
inc
sbb
push
adc
sub
fisubrl
mov
imul
out
aam
adc
and
and
xor
gs
and
adc
mov
adc
inc
movsb
mov
inc
inc
dec
add
mov
mov
cmpsb
test
xlat
inc
and
mov
inc
iret
filds
stos
aad
in
mov
dec
movsb
cmp
pop
inc
sbb
mov
fwait
ret
stos
fs
rcrb
lock
insl
rcrl
jnp
push
and
out
fwait
xor
mov
dec
add
dec
inc
out
mov
mov
mov
jl
lcall
xor
push
vunpckhps
shl
daa
cmp
cmpb
push
movb
xor
les
sbb
adc
subl
sub
sarl
mulb
pop
out
clc
mov
ds
pop
fldcw
add
cwtl
popf
or
mov
jbe
iret
push
es
mov
xchg
out
fdivs
push
mov
push
stos
clc
mov
jp
push
cwtl
jmp
xchg
fwait
mov
pop
fs
shrb
adc
fcmovb
dec
cmp
xchg
cs
dec
out
mov
push
inc
shrl
xchg
fwait
cmpsb
jecxz
pop
push
ljmp
jmp
push
ds
mov
cmp
jg
sysret
or
int3
je
cmc
fadd
clc
xor
repz
pop
sbb
or
subl
dec
fimull
lods
jmp
lahf
push
inc
add
mov
xorb
insb
add
or
enter
test
xchg
addr16
adc
pop
out
popf
push
in
xchg
in
out
xchg
fldcw
lods
in
add
adc
outsb
int3
into
mov
sub
rcll
into
xor
movsl
fxch
mov
and
mov
push
loop
push
mov
loop
fisubs
loope
pop
pusha
dec
popf
xor
in
lret
jle
dec
push
je
cmp
xlat
out
pop
cmp
xchg
ss
xchg
add
subb
data16
je
and
cmp
scas
test
into
mov
sti
test
ss
xor
jnp
aad
cmp
adc
fstl
or
divl
cmpl
int3
mov
cmpb
cmp
mov
nop
fnstcw
xchg
clc
inc
mov
mov
sub
stos
lock
pop
aaa
push
xchg
cli
pop
lret
cltd
stc
jae
push
push
fadd
sbb
fldenv
xor
setnp
push
push
cli
xchg
fldt
add
pop
xchg
rolb
std
data16
mov
sti
int
cmpsb
fcmovu
xchg
push
movswl
fsubl
movl
adc
pop
adc
gs
adc
or
cwtl
dec
mov
imul
xor
stc
jmp
push
push
sti
sub
dec
inc
xorl
fistps
mov
dec
dec
pop
fwait
or
fs
sbbl
or
fcmovu
sub
or
aaa
cmp
cli
flds
pop
xor
jbe
and
cli
sub
es
daa
cmp
pop
cmpb
xchg
gs
aad
inc
jbe
movsb
fdivr
mov
push
faddp
pop
mov
push
or
fidivl
jle
mov
xchg
push
sarl
xchg
and
daa
scas
lret
ret
bound
repz
loop
push
cmpsb
pop
in
push
int3
adc
adc
sub
in
fisubl
sub
popl
sub
lret
test
cmpsb
lret
mov
jmp
hlt
dec
in
icebp
push
hlt
hlt
lds
add
iret
adc
cmp
cld
mov
pop
add
mov
data16
lcall
pop
mov
leave
fsubs
call
adc
pop
lds
sbb
dec
push
notb
pop
pop
inc
lds
hlt
lock
push
flds
jae
mov
pop
cmp
stc
mov
sarb
daa
int
aas
xor
lock
loope
or
adc
out
sahf
add
add
popa
xchg
pop
jmp
cmc
mov
inc
lahf
xor
xchg
cmp
test
sub
out
insb
leave
fidivrl
pop
js
hlt
mov
fcompl
shlb
or
and
aaa
sub
inc
mov
jmp
cmp
sar
inc
aas
push
ret
sbb
mov
out
mov
into
ret
scas
fmul
adc
add
daa
jl
sti
jmp
into
lea
incb
push
adc
mov
scas
sti
ljmp
cltd
cli
aam
out
mov
xchg
add
push
jbe
sbb
in
jns
mov
push
adc
add
fiaddl
xchg
xlat
jecxz
push
and
test
mov
fsts
sahf
adc
lds
ror
mov
enter
in
aad
pop
mov
mov
out
mov
jnp
fildll
test
or
pop
cmp
sbb
xchg
imul
ds
cli
mov
and
fiaddl
push
in
inc
insl
or
dec
add
pop
fstps
push
fldcw
pop
inc
daa
mov
sbb
leave
movsl
loop
xor
sbb
or
sub
mov
push
sarl
push
pushf
add
incb
leave
cltd
aaa
push
addr16
std
cmp
rorb
test
push
orl
out
add
mov
sub
pusha
ja
sbb
add
mov
mov
sbb
push
icebp
jge
and
cmp
xorl
lock
call
leave
das
mov
frndint
sbb
dec
jns
repz
push
mov
or
adc
jmp
pop
dec
nop
and
jp
jns
int3
xor
repz
dec
shrl
out
dec
inc
xor
inc
cmpb
xorl
xchg
outsb
mov
jmp
test
push
orl
jg
mov
test
inc
jne
xor
insl
rolb
stos
push
xor
pop
xchg
idivb
rorb
popa
push
push
push
lcall
fstpl
loop
clc
dec
or
xlat
xor
inc
aam
push
push
jnp
ret
mov
jno
out
inc
dec
pop
cs
add
mov
pop
ja
fsubl
sub
cwtl
and
push
aaa
test
pop
jnp
into
dec
out
jno
jge
sbb
es
sub
mov
and
sub
adc
sahf
nop
and
stos
xchg
mov
cmp
fstps
das
xor
jnp
adc
in
and
cltd
lea
cmp
cmp
stos
mov
and
test
jbe
cld
fildl
popa
lds
aam
sti
stos
cwtl
aaa
cmp
bound
jl
adc
pop
xorb
cmp
in
lcall
fs
cltd
mov
fiaddl
mov
mul
ja
adc
pop
push
jl
shll
push
add
mov
gs
cmc
clc
dec
push
ret
xchg
fiadds
pop
mov
or
jl
insl
daa
outsl
inc
daa
movsl
leave
adc
jmp
dec
fistpll
mov
push
insb
jl
je
sbb
repnz
rclb
sbb
adc
sbbb
push
loopne
xchg
out
orps
aas
lds
mov
mov
adc
or
or
push
ds
int
loope
or
mov
sti
gs
out
jo
cmc
mov
add
pop
sbb
movsb
hlt
add
js
sbb
adc
cld
mov
xchg
lea
orl
pop
dec
push
xchg
out
push
call
xor
sbbb
test
insl
std
mov
fwait
lods
shrb
mov
loop
pop
cmp
push
mov
push
je
jae
mov
pop
pop
adc
out
cld
xchg
cmp
lods
dec
dec
xchg
repnz
sbb
pusha
jg
cld
and
popf
add
pop
jo
mov
call
aaa
scas
inc
insl
in
fistpl
das
jne
adc
dec
or
je
popf
subl
gs
xor
fildl
jp
mov
lods
aaa
aaa
out
xor
push
jb
and
xorl
pop
adc
insl
roll
cli
lret
adc
xchg
nop
and
pop
xchg
popf
arpl
mull
pop
insb
addr16
inc
pop
cmp
or
insl
int
cmp
sbb
or
lret
lahf
cltd
inc
out
cltd
arpl
rcll
arpl
in
adc
cmp
sub
xchg
enter
or
clc
loop
sub
and
lods
clc
fadds
ljmp
xor
insb
neg
dec
or
push
ss
push
cmpb
inc
lods
aaa
ds
std
ret
xchg
pop
add
popa
cltd
jp
inc
sbb
cmc
hlt
hlt
mov
sahf
dec
pop
rcrb
roll
sti
jg
clc
mov
xor
imul
xchg
cmp
mov
pop
enter
cmp
int3
mov
into
out
dec
sub
insl
cld
sbb
pop
pop
inc
jbe
sub
pop
aad
mov
orl
inc
mov
push
test
outsb
or
loopne
es
daa
dec
jp
or
lea
mov
sbb
jnp
test
scas
out
dec
mov
cs
or
ret
mulb
cmp
scas
loope
cmp
sub
movsl
inc
sbb
xorl
clc
leave
popa
jge
adc
lret
cs
insl
add
fadd
xchg
bnd
pop
dec
push
out
dec
jge
sti
sub
xchg
aam
xchg
sub
ret
inc
das
xchg
into
movlhps
and
cmovge
xchg
je
cmp
je
sub
sbb
add
int3
or
xchg
icebp
push
add
daa
pop
pop
sub
mov
add
or
mov
mov
ds
out
mov
jl
ljmp
pop
in
insl
aas
adc
ficompl
scas
lcall
dec
pop
ret
neg
scas
lods
mov
repz
out
mov
add
jae
iret
aad
test
ds
jg
mov
cmp
mov
shrb
pusha
jmp
pushf
pop
shll
fbld
or
and
cld
inc
sbbb
movsl
lock
dec
adc
loope
xchg
xlat
xchg
xchg
repz
popl
pop
mov
test
sub
out
push
insl
fwait
mov
inc
xchg
pop
add
test
dec
outsb
push
push
dec
scas
lcall
push
push
sub
in
mov
aam
fsts
mov
xchg
fwait
mov
imul
lret
rorl
jecxz
sub
stos
jmp
clc
mov
or
push
mov
sub
hlt
pusha
or
divl
mov
loopne
filds
push
sahf
repnz
flds
push
in
mov
jns
or
add
or
mov
mov
in
outsl
shll
ss
push
aaa
or
ss
add
cwtl
cmp
dec
daa
mov
bound
push
or
adc
or
xchg
inc
and
inc
out
in
leave
add
jmp
mov
jno
and
leave
iret
das
sbb
or
push
push
and
push
push
repz
ret
xor
jo
xchg
sbb
dec
cmc
cmp
outsb
inc
xchg
or
xor
push
ret
mov
lret
pop
out
sbb
test
cmc
push
inc
jecxz
fs
repnz
hlt
and
ss
repnz
pop
adcl
rcl
mov
lock
or
or
sbb
loopne
jg
inc
dec
jo
ret
cmp
out
ret
sbb
sbb
into
add
xor
mov
xor
loope
mov
sbb
mov
out
fldl
out
lock
test
jb
or
cmpsl
fisttps
arpl
out
enter
sub
adc
add
mov
loop
sbb
aas
in
add
cli
pop
pop
and
imul
xor
xor
xchg
enter
scas
jp
cltd
or
cmpsb
adc
xlat
mov
sub
jbe
aad
lret
addr16
sub
jl
add
stos
add
adc
inc
cli
les
pushf
ffreep
and
inc
and
push
arpl
jle
in
mov
sub
jmp
loope
cld
mov
sub
mov
xor
pusha
outsb
in
out
push
mov
mov
stos
iret
and
add
sti
loopne
mov
ret
and
pop
fcoms
in
jae
xor
xor
fdivs
call
dec
cltd
push
mov
addr16
sti
rolb
cmpsb
cmp
dec
lcall
jnp
leave
xchg
addr16
shl
push
pusha
addr16
inc
adc
and
popf
push
mov
imul
ja
add
mov
push
cmp
jg
adc
nop
shrb
xchg
and
outsl
sub
mov
rcr
cmp
adc
sub
adc
dec
loope
jae
fstpl
loop
adc
rcll
out
int
in
fyl2xp1
xor
cmp
mov
dec
cmp
and
arpl
orl
fcmovnbe
sbb
pop
adc
jg
fwait
jecxz
test
lods
xor
stos
dec
jnp
in
adc
xchg
test
stos
fiadds
adc
mov
fnstenv
fistpl
jo
add
dec
sbb
sub
imul
repnz
fnstsw
or
jp
ret
aas
cmpsl
out
xlat
or
lret
jmp
aad
insl
pop
loop
mov
add
add
loop
ds
xchg
int3
stos
xlat
xor
rorl
lcall
out
fadds
shlb
sbb
aas
jnp
xchg
roll
fbstp
shl
pop
ds
mulb
sti
sbb
shr
xor
lcall
in
mov
pop
push
push
pop
mov
mov
das
cmp
cmp
xchg
out
aad
rcrl
sub
js
pop
add
cmp
nop
cmp
je
stos
imul
out
loopne
movsb
ds
and
xor
out
imul
mov
stc
push
out
cwtl
mov
ret
pushf
dec
iret
movsb
ja
sbb
jp
jmp
add
outsb
mov
add
sbb
lea
xchg
add
in
hlt
ds
cmp
cmp
rolb
push
dec
cmp
mov
fstpl
inc
jns
xor
mov
cmpsl
repz
mov
and
je
stc
pushf
pop
adc
jl
sbbl
inc
xor
jnp
and
xchg
sub
scas
mov
and
shll
xchg
iret
cwtl
or
xor
jnp
loopne
rorb
icebp
add
scas
jbe
mov
cmp
dec
jb
repz
inc
mov
jno
lods
mov
int
mov
push
add
in
shlb
sub
adc
scas
or
jae
add
sbb
inc
pop
leave
push
cmpsl
dec
and
or
adc
xchg
insl
sbb
pop
pushl
push
ss
mov
pop
push
xor
decl
jae
rcrl
inc
stos
pop
jnp
stos
fdivrs
cmp
aas
push
cmc
adc
fnstenv
mov
xor
lea
mov
mov
ficoms
out
jmp
fldt
adc
not
or
add
gs
sub
insb
adc
jge
mov
push
push
adc
jg
sub
cmp
js
sahf
test
repz
fmuls
std
push
mov
outsl
adc
lcall
stc
data16
pop
cmpsl
pop
gs
pushf
pop
hlt
pop
scas
mov
daa
jbe
mov
pusha
mov
push
mov
or
test
inc
test
mov
mov
jge
out
mov
xor
shrb
lret
fwait
jle
mov
adc
or
ljmp
lods
fsub
mov
addl
iret
aad
cmp
repnz
mov
push
out
sbb
aam
aam
loop
push
pop
and
pop
loopne
loop
xchg
add
out
adc
orb
push
adc
int3
in
sub
lret
dec
mov
movsl
xor
fnstsw
pop
cltd
cmp
mov
inc
push
ljmp
js
sbb
push
inc
stos
mov
call
out
js
pop
jp
mov
lods
push
jg
xor
fidivrs
sahf
iret
push
mov
imul
ret
lahf
fs
mov
decl
push
orl
or
add
push
notl
mov
xchg
repz
adc
addr16
adc
imul
mov
mov
mov
movsl
jmp
jns
adc
push
mov
std
rolb
stc
xor
mov
sbb
xchg
das
pmaddwd
pop
dec
pop
outsl
inc
sbb
movsb
ja
loop
movsb
adc
ds
adc
shlb
repnz
inc
cmc
sbb
sbb
popa
hlt
pop
xor
mov
sub
sbb
aas
pop
xchg
cmp
and
push
orb
dec
aaa
das
sbb
in
xchg
leave
shll
add
xchg
pop
mov
jge
lcall
and
lods
lock
outsb
and
loopne
add
jg
push
push
jne
lret
stc
addr16
mov
enter
xchg
imul
mov
cmp
andl
xor
iret
rcr
xchg
mov
cmp
sbb
jb
pop
jl
punpcklwd
mov
cltd
xchg
fs
leave
push
mov
mov
out
and
fidivl
das
push
add
ss
daa
sub
xor
mov
bound
int
sti
xor
jg
lea
addb
adc
data16
std
cld
or
outsb
into
xchg
pop
in
adc
sahf
jmp
sbb
jmp
das
test
movsl
inc
out
xor
imul
or
inc
scas
aaa
jg
fstpt
outsb
jmp
xor
inc
mov
xchg
pop
push
shl
jecxz
test
cld
xchg
dec
lret
mov
mov
cld
ljmp
std
aas
xchg
insb
and
dec
dec
sbb
cli
out
mov
in
xor
lock
outsl
aas
xor
int3
jge
xor
inc
add
sahf
les
mov
fistpll
mov
dec
imul
xchg
mov
aad
pop
mov
fsubl
test
lret
push
dec
inc
push
sbb
xchg
loope
ja
andl
jmp
out
xchg
xlat
or
daa
dec
arpl
outsb
or
adc
dec
and
and
add
lods
testl
jle
cmp
adc
push
push
loope
mov
hlt
add
test
js
xchg
imul
inc
sbbb
fisubs
cmp
inc
jbe
add
xor
hlt
push
mov
out
pop
xchg
sbb
sarb
jno
pop
out
sbb
push
outsl
mov
cmpl
andb
adc
mov
jge
popa
xchg
outsb
inc
xor
dec
ret
inc
pushf
push
xchg
or
mov
adc
dec
xor
mov
sbb
outsb
in
or
lock
test
or
sbb
dec
ret
loope
xor
mov
aam
cmp
pop
pop
mov
pushf
dec
xor
insb
lods
pushf
add
call
pop
fcoml
das
mov
shll
jge
in
push
mov
cwtl
mov
addl
fs
popa
cltd
stc
mov
dec
imul
in
aas
xor
stos
jle
adc
sub
xor
mov
les
mov
push
cmp
inc
dec
mov
pop
cld
jle
lea
mov
mov
pushl
punpckhbw
jb
hlt
adc
xor
xchg
movsl
arpl
aad
push
orb
sarb
inc
inc
xchg
sbb
gs
add
adc
xchg
sbb
ljmp
add
xor
mov
sub
and
pop
rol
popa
ds
insl
std
icebp
test
sub
cmp
cmp
icebp
int3
les
adc
dec
test
outsl
xchg
addr16
popf
int3
xchg
mov
cld
outsl
lahf
xor
cli
enter
decb
out
imul
mov
rorb
fldl
out
out
mov
out
or
ss
push
inc
and
xchg
mov
jnp
sbb
cmpb
add
inc
cli
subl
sbb
cmpsl
push
mov
psubq
sarl
jb
dec
std
dec
f2xm1
stos
pop
roll
sub
mov
repz
rep
fistps
pop
sub
inc
jg
jns
bound
pop
rorb
cmp
and
sub
loop
pushl
ja
lret
push
cli
sub
add
adc
rcr
or
mov
jmp
jbe
inc
inc
pop
out
lahf
sub
bound
mov
shl
dec
in
adc
cmp
xor
fimuls
testb
movsl
sbb
jl
inc
mov
stc
jge
mov
leave
in
popa
adc
je
xor
orb
aad
insl
and
stc
xor
add
les
lret
and
dec
gs
pop
repz
lea
mov
js
test
push
sarl
dec
fstl
adc
fsubrs
sbb
adc
fs
cmp
xor
and
sti
jb
arpl
int3
call
repnz
xor
movsl
sbb
addr16
xchg
dec
aam
xchg
or
sub
pop
cmc
mov
sarb
insb
int3
sbb
jmp
xchg
call
or
mov
pusha
jns
inc
cmpsb
cs
fnsave
mov
mov
dec
pushf
jae
jg
inc
testb
ss
stos
add
sbb
and
lea
out
arpl
les
cmovns
sahf
pusha
mov
loope
push
jmp
adc
das
outsb
pop
and
dec
push
jbe
cltd
inc
insb
pop
pop
dec
push
loop
into
gs
cmp
inc
leave
inc
test
mov
ss
jl
mov
outsl
push
cmp
fisubl
and
repnz
or
int
aam
xlat
pop
and
mov
adc
fsts
in
mov
and
xlat
movsl
int
cli
xlat
rclb
push
mov
adc
std
shlb
xchg
mov
xchg
je
jns
andb
jo
add
lcall
les
shrl
fldlg2
fs
add
mov
aam
cmp
or
hlt
inc
adc
out
pusha
aas
mov
shr
sarl
mov
jnp
aas
add
sub
sub
test
popf
iret
push
subl
or
and
or
fstpl
loop
dec
test
xchg
nop
push
imul
push
scas
and
push
stc
cmp
icebp
scas
testb
or
fbld
fbld
and
jg
movsb
aaa
sbb
addb
loope
mov
mov
rcrb
popa
xor
js
cltd
stos
and
fimuls
pop
stos
sbb
pop
ret
add
jmp
in
cmp
cs
ret
jo
gs
dec
stos
adc
adc
aam
dec
mov
loop
and
arpl
mov
pop
adc
adc
insb
fs
push
adc
xor
shrl
repz
shlb
lods
add
mov
cmpsb
sub
jb
and
mov
adc
cwtl
inc
xchg
jg
int
mov
cmpsl
lock
add
cmc
xchg
gs
or
popf
add
and
cwtl
dec
nop
pop
add
sbb
divl
mull
dec
lret
insb
rcrb
sbb
sbbl
and
lahf
enter
fimuls
adc
insb
push
loope
add
leave
ret
repz
stc
mov
dec
repnz
mov
push
sub
xchg
push
xchg
push
cmp
ja
cld
outsl
std
mov
push
mov
inc
mov
jecxz
fisttpl
ficoml
addr16
call
xchg
out
imul
ret
push
andb
sbb
inc
pop
cmp
push
int3
cwtl
cmp
shrb
xor
push
lds
jp
and
mov
dec
ja
sahf
rorl
fidivrs
and
pusha
loope
adcl
jne
sub
pop
adc
xor
arpl
cmp
ret
test
cmpsb
adc
xchg
sahf
outsl
inc
push
push
jns
arpl
sbb
mov
push
xor
sub
and
sub
call
add
cmp
leave
lret
fisubrs
add
leave
adc
or
inc
mov
std
scas
jmp
adc
icebp
loop
jecxz
or
adc
and
sbb
test
mov
les
inc
lds
incl
or
cmpsb
pop
js
push
scas
xchg
mov
rolb
bound
sub
jbe
lock
sub
test
in
movsl
mov
test
xchg
lock
or
add
test
popf
and
xchg
inc
aas
lret
xchg
xchg
jge
add
test
adc
test
xor
bound
mov
dec
testb
push
test
or
mov
lss
jmp
mov
arpl
push
cmp
add
test
sbbl
in
mov
mov
jo
jbe
lret
or
dec
sub
imull
in
dec
and
mov
or
sahf
xchg
xchg
fwait
pop
testl
insb
push
in
push
in
cld
in
xchg
sbb
sub
mov
stos
adc
and
dec
aas
inc
xchg
dec
or
insb
pusha
ljmp
mov
cli
mov
icebp
jle
push
dec
or
xchg
adc
aaa
std
cmp
xchg
lret
jne
push
imul
and
push
sub
add
or
add
xor
add
adc
lds
push
sub
sbb
in
out
loop
mov
ret
ja
pop
jns
adc
fisubs
mov
inc
and
int3
and
stc
xchg
dec
lret
cwtl
inc
dec
mov
mov
push
pop
sbb
and
mov
jge
add
or
addb
cmp
cs
enter
push
loope
daa
sti
repnz
cmp
or
xlat
ret
cmpsl
jnp
lret
and
xchg
mov
jmp
jbe
pushf
xchg
es
jg
js
adcb
sahf
fsub
cmp
mov
fisubrs
stos
lea
bound
dec
lahf
ficoms
popa
cltd
insb
sub
adc
jbe
shll
arpl
stos
aaa
or
inc
and
xor
jnp
imul
mov
pop
and
sbb
cmpsb
in
shrb
je
mov
sahf
lret
idivw
xchg
push
jecxz
mov
push
shlb
in
mov
lods
mov
pop
aad
enter
call
rorl
jl
xchg
pop
int3
sti
outsb
sbb
aad
pop
mov
cmp
cmpsl
inc
sbbb
adc
fs
add
add
cmp
dec
sbb
bound
inc
pusha
iret
jecxz
out
push
pop
and
cmp
sbb
add
xlat
xor
mov
xchg
dec
lret
fldlg2
mov
push
pop
mov
negl
sbb
sub
mov
fsubl
fidivs
out
sahf
pop
dec
mov
rcr
clts
movsl
pop
xchg
lahf
js
iret
js
gs
jecxz
insl
mov
orl
mov
sub
sarl
ret
lahf
or
popaw
or
xchg
or
mov
les
sub
and
cmp
or
xor
aam
sbbl
add
out
push
sbb
mov
push
mov
or
leave
dec
sub
pop
cmpl
xlat
int
test
cmpsb
jns
in
xor
daa
push
fwait
popf
lahf
mov
cwtl
out
cmp
pop
push
dec
loop
pop
fsubrl
pop
jmp
xchg
mov
sti
add
inc
cmc
xlat
rcrl
xchg
jmp
test
jnp
mov
shlb
push
leave
mov
xor
inc
ds
iret
fisttps
pop
jns
fisttps
or
push
add
add
leave
scas
mov
outsb
push
cltd
arpl
or
push
imul
and
das
cmp
mov
test
test
sahf
mov
sub
pop
js
outsb
xchg
fcmovne
mov
mov
je
mov
cltd
jmp
outsl
or
hlt
cmpsl
lods
call
cmpsl
inc
sbb
add
outsl
adc
into
sub
and
fidivrs
rolb
loopne
pusha
jno
in
subl
fildll
mov
mov
mov
fmulp
movsl
pop
popf
pop
sub
test
push
pand
sub
pop
ds
xor
js
lods
xor
call
pop
aas
push
aam
test
jb
cmp
mov
fwait
aas
popf
hlt
xchg
add
rolb
push
pop
cmc
or
mov
outsl
arpl
inc
cmovg
mov
cltd
lds
xchg
loop
bound
inc
dec
rorl
fdivr
or
xchg
jb
mov
call
lahf
sub
pop
xor
cltd
or
and
aaa
rcrl
pop
call
pop
out
pushf
in
in
pop
mov
mov
ds
clc
pop
pop
or
pop
fst
xchg
mov
mov
mov
and
sbb
xchg
add
sbb
pop
mov
ret
push
stc
xor
pop
js
adc
ss
aaa
push
pop
pop
mov
les
in
mov
rcll
or
jnp
xchg
dec
imul
mov
dec
iret
xchg
fldt
inc
pop
lar
mov
insl
outsl
lahf
jmp
adc
cmp
xor
mov
jmp
fnstsw
and
ds
adc
jmp
sub
lahf
cltd
fldt
fwait
aas
in
addr16
addr16
call
adc
pop
test
pop
pop
imul
push
xchg
fs
sarb
std
test
mov
mov
pop
xor
inc
push
push
aad
fmulp
dec
imul
pop
das
lcall
gs
arpl
adc
and
iret
jmp
push
test
loopne
mov
flds
sbb
test
lahf
sbbb
add
shlb
psubsw
push
fadd
and
pop
dec
add
loop
xlat
add
insb
xchg
mov
mov
xchg
pop
rorl
add
test
rcrb
ret
add
out
into
xchg
pop
test
pop
xor
loope
scas
lcall
and
and
iret
int
popf
frstor
out
pop
popf
adc
xchg
test
mov
cmc
add
pop
cmp
or
rcl
mov
xchg
xchg
dec
testl
jecxz
sbbl
je
or
pop
dec
mov
scas
and
mov
pop
add
movsb
add
inc
and
cmp
andl
imull
les
pushf
push
mov
mov
out
cmc
push
mov
sub
loopne
movsb
jp
pushf
add
lret
lock
add
pusha
dec
das
mov
sbb
mov
cmpsb
andl
add
shrb
mov
jecxz
lods
vpmulhuw
lds
mov
xchg
mov
jae
psllq
leave
pop
sub
idiv
inc
pop
add
or
mov
mov
pop
fwait
xchg
pop
inc
add
xlat
cmpsl
or
lea
idivb
mov
jp
lods
sbb
bnd
pop
lahf
push
into
xor
out
inc
out
pop
rorb
insb
popa
mov
or
mov
icebp
or
arpl
push
hlt
ds
cmp
sub
mov
push
mov
ret
xchg
lret
xchg
sbb
stos
fprem1
je
mov
or
mov
test
gs
mov
xchg
lret
or
add
push
lods
push
inc
icebp
cmp
dec
adc
sbb
xchg
lds
ret
lcall
popa
push
xor
jo
aaa
jne
call
inc
ret
ja
repz
adc
pop
push
and
int
nop
test
imul
cwtl
xchg
pop
fs
mov
mov
pushf
testb
adc
icebp
test
and
push
add
hlt
add
fsts
dec
add
dec
subb
jle
jnp
xor
cli
inc
ret
dec
cmc
push
xlat
add
loopne
int3
mov
test
fsubrs
and
into
push
in
int
mov
in
jecxz
shll
es
xchg
cmpsb
push
or
xchg
jmp
mov
jmp
xor
inc
icebp
nop
xchg
inc
icebp
fucompp
dec
jmp
stos
mov
scas
mov
inc
arpl
daa
pop
outsl
out
jns
dec
mov
not
pusha
or
and
xchg
ja
or
xchg
pop
xor
xchg
repnz
cmpb
mov
int3
xor
jnp
or
inc
push
cs
fucomi
test
ret
xchg
mov
xchg
enter
xchg
les
push
test
sbb
pop
cmp
ret
xor
xorb
xchg
inc
int3
subb
or
das
mov
repnz
bound
in
pop
mov
inc
hlt
xchg
stc
xor
gs
fwait
mov
jnp
sub
scas
pushf
lock
int3
pop
sub
ss
sub
out
and
mov
adc
in
jae
fwait
lods
out
mov
popa
lret
imul
mov
sub
inc
fs
ss
bound
push
inc
popf
inc
xor
arpl
test
pop
ficoms
loop
and
ret
into
repz
cld
push
dec
or
fcmovu
jg
enter
iret
adc
je
jns
push
nop
loop
mov
dec
bound
add
outsl
xor
or
mov
mov
inc
sarl
popf
xchg
subb
jns
push
je
dec
outsb
nop
cmp
mov
pushf
inc
mov
loop
mov
les
imulb
xor
xchg
lret
lcall
push
pop
mov
ret
add
into
and
mov
xor
into
mov
xchg
cmc
dec
in
jle
and
out
and
lock
xchg
xor
sub
inc
push
jnp
ret
pushf
out
push
icebp
push
dec
shlb
xor
or
xchg
fimuls
adc
dec
mov
cmp
push
pop
push
push
jle
inc
mov
dec
push
push
jne
dec
adc
jnp
mov
lods
push
jg
ljmp
jmp
or
popf
inc
aaa
push
and
and
sahf
pop
clc
pusha
xchg
sbb
daa
mov
inc
dec
aam
adc
dec
push
adc
aam
fsubrl
je
sbb
push
xchg
dec
lret
addr16
psubusw
ljmp
push
dec
stc
xchg
jl
cmpsl
sbb
subl
jle
and
cmp
lea
xor
loopne
jle
fildll
dec
fisubrl
shlb
loopne
sub
sub
cmp
pop
xchg
jle
subl
movsl
mov
test
or
add
call
loop
test
cmp
push
xchg
xorl
in
mov
adc
jno
mov
adc
sbb
dec
in
cli
cltd
dec
push
pop
and
repnz
daa
rcrl
loopne
mov
leave
pop
sub
repnz
ret
pop
test
ror
shrb
push
hlt
leave
repz
iret
xchg
jp
stos
cmp
fdivs
mov
mov
divl
pop
xchg
scas
xor
pusha
mov
ret
mov
inc
jle
pushf
sbb
push
inc
inc
xchg
xlat
pop
rolb
pop
xchg
jae
xchg
mov
push
test
sub
and
cs
xchg
lret
adc
test
cli
mov
lods
test
add
adc
test
sbb
pop
mov
or
ss
pop
iret
call
adc
mov
push
shrl
xchg
bound
jb
inc
repz
cmp
add
pop
lock
dec
cmp
dec
repnz
jae
pop
add
mov
push
mov
rol
aas
mov
cmpsb
xor
clc
enter
std
stos
cli
cld
xor
popa
push
loop
into
xchg
inc
icebp
mov
leave
mov
mov
in
ret
aam
call
pop
int3
dec
icebp
and
sbb
xchg
rcrl
inc
stos
xor
adc
mov
adc
mov
outsb
lret
xchg
dec
mov
sub
mov
jmp
cmp
mov
add
in
adc
and
add
push
push
mov
xchg
ds
mov
in
mov
hlt
sbb
jnp
jno
or
out
pusha
fldenv
int3
mov
or
cmpl
xor
inc
cwtl
dec
inc
mov
pop
ss
inc
push
push
test
je
bound
mov
addr16
cmp
inc
sbb
test
push
cmp
cwtl
pop
aam
xchg
call
or
xchg
mov
sti
sbb
push
rcll
popf
sbb
ficompl
adc
pop
jmp
imul
xlat
add
pushf
dec
mov
pop
xor
sbb
dec
mov
loop
or
add
dec
mov
lods
jecxz
out
mov
mov
out
ffree
cs
fmuls
push
jns
cmc
mov
mov
jbe
jmp
repnz
pop
mov
pop
sub
loope
arpl
jbe
les
pop
push
dec
sbb
mov
jge
xlat
js
sbb
sub
mov
fdivp
pop
call
mov
dec
xor
addr16
stos
jo
mov
shl
lcall
push
movsl
mov
loope
jns
dec
mov
fnstsw
rol
xchg
pop
ss
out
adc
pop
lea
inc
pop
loopne
inc
push
pop
push
hlt
xchg
mov
jl
and
mov
sub
cmpsb
sbb
aaa
mov
cmp
inc
xor
and
add
add
test
arpl
ror
shrl
add
dec
mov
enter
inc
jbe
sub
push
subl
out
cmpsb
sbb
repnz
sbb
fs
xchg
and
xlat
push
es
mov
jae
xor
xchg
idiv
sbb
fistl
push
add
pop
hlt
rcr
into
popf
clc
xchg
outsl
jmp
stos
fbld
jnp
leave
stos
xor
test
jbe
xchg
jg
push
lds
jle
xor
test
cltd
ja
cmp
xlat
push
mov
adc
jle
rorl
xor
jmp
xlat
rcll
jnp
dec
shrl
stc
dec
push
icebp
loop
movsl
and
enter
or
imul
xor
nop
xorl
jns
push
cmpsl
add
movsb
mov
aas
mov
std
mov
pop
cwtl
movsb
push
mov
add
push
or
fxch
das
push
push
push
shlb
and
push
test
jmp
in
pusha
and
int3
and
sarl
cmp
pop
sub
out
inc
iret
or
loop
add
or
shll
ret
test
cli
and
ret
mov
pop
inc
scas
push
loope
xchg
xchg
addr16
xor
pop
into
inc
loopne
sub
pop
sbb
xor
or
pop
mov
inc
xor
push
push
mov
adc
shl
or
cmp
add
xchg
dec
fidivl
mov
adc
push
xor
xchg
cmp
jne
stos
jns
inc
pop
fldl
push
imul
inc
and
in
xlat
jle
ja
mov
xchg
outsl
ret
in
dec
mov
xchg
outsl
xchg
fisubl
lds
fbld
xor
mov
je
ja
cmp
or
rcrb
out
sbb
sti
sub
inc
aam
adc
insb
dec
outsl
fiadds
out
adc
test
addb
test
pop
and
jo
mov
jbe
and
mov
sub
stos
ret
sbb
mov
or
ja
or
int
je
push
fisttps
cwtl
mov
loopne
xor
cmp
cwtl
and
idivb
add
faddl
popa
cmpsb
mov
bound
sar
cmp
mov
sbb
mov
cmp
push
inc
stc
std
mov
xchg
mov
movl
into
scas
mov
stos
out
stos
mov
mov
inc
mov
lret
sub
in
popf
push
repnz
push
inc
sub
lods
add
or
shll
lcall
xchg
aam
lahf
lcall
int
nop
mov
arpl
sti
sub
push
testb
test
imul
xchg
mov
mov
sbb
mov
enter
mov
call
mov
sub
addr16
dec
in
mov
xor
jle
mov
mov
sbb
dec
mov
jb
fst
or
and
in
in
jge
sub
jae
outsl
xor
mov
pushf
sub
jg
ret
call
push
stc
es
jnp
jp
mov
rcr
jne
push
clc
ja
ss
xorb
push
pop
inc
sahf
in
fisubl
fstpt
cli
or
mov
sbb
push
sbb
popaw
int3
jae
push
add
mov
popa
out
and
sbb
jecxz
clc
and
sbb
jb
xorl
hlt
fs
popa
or
push
jnp
nop
sbb
and
sub
test
pop
dec
mov
lcall
fsts
mov
stc
icebp
clc
mov
sbb
sbb
inc
sbb
sbb
add
xchg
pop
stos
sahf
pushw
mov
negl
mov
jmp
test
dec
fistpl
mov
add
call
fwait
aas
inc
jp
push
sub
loopne
mov
fdivp
mov
shl
jp
mov
jmp
in
mov
cmp
pop
and
mov
jb
mov
loopne
mov
push
adc
jae
in
movsb
pop
adc
negl
je
mov
test
es
xchg
lahf
fdiv
ja
mov
aad
or
call
fcmovne
sub
lret
mov
int
movsb
inc
pop
sub
cmp
fstps
xchg
fwait
mov
mov
ds
pop
repnz
xor
mov
notl
jecxz
lret
nop
xchg
ret
add
push
fcoml
dec
and
adc
lods
loope
sti
xor
dec
xchg
bound
push
inc
inc
push
call
and
stos
dec
pop
orb
mov
outsl
mov
aas
xchg
and
sarb
bound
xchg
xor
pop
adc
lret
push
cmp
hlt
mov
xor
sub
mov
scas
lret
sti
dec
dec
mov
jle
sahf
int
in
orl
mov
push
cmp
jmp
stos
jmp
call
data16
add
ljmp
imull
jge
jmp
xor
addr16
mov
mov
mov
icebp
dec
int
mov
out
sub
and
mov
or
cmp
jb
pop
fmuls
dec
push
enter
dec
aaa
push
out
add
mov
daa
insb
jmp
int3
addl
pop
incb
mov
ja
sub
lahf
cmp
sti
aas
inc
nop
int3
int
push
or
decl
push
jg
xlat
inc
pop
adc
mov
cmc
xchg
dec
push
cmp
js
mov
xchg
mov
dec
repz
cmpsl
loopne
sbb
mov
stc
mov
push
or
ret
js
or
in
cli
fs
lea
mov
rorb
imul
test
sub
add
jne
leave
repz
inc
jno
mov
pop
pop
shlb
push
and
push
xlat
push
popf
dec
sti
xchg
inc
sub
push
cwtl
or
out
add
cmp
stc
jmp
clc
sub
dec
cmc
adc
adcl
and
mov
test
loopne
mov
pop
inc
out
clc
outsb
and
mov
xor
test
nop
ret
mov
imul
xchg
adc
insl
ljmp
add
inc
and
jg
lock
jl
in
xchg
data16
cwtl
push
mov
loope
sub
xchg
pop
es
sbb
adc
mov
rcrl
mov
cmpsb
es
xchg
loope
xor
push
add
sbbl
adc
push
out
or
push
imul
adc
loopne
and
ljmp
hlt
hlt
pushf
or
or
jmp
dec
push
adc
push
dec
jbe
mov
mov
or
push
mov
xchg
sub
jo,pt
mov
xchg
mov
fwait
pop
pop
mov
add
lret
pushf
xchg
ficomps
pop
lock
jno
add
xchg
fs
mov
jge
nop
and
arpl
mov
dec
cmp
add
jl
fldl
mov
push
pop
lcall
lret
sahf
lods
lahf
cmpsb
int3
out
movsb
out
imul
push
imul
mov
jg
cmpl
pusha
dec
je
movsb
add
loop
xor
ret
add
arpl
fdivp
clc
cmp
leave
imul
inc
xchg
test
fsubrs
cmp
scas
dec
mov
scas
jg
jo
icebp
cmpsl
and
in
jbe
sbb
in
fisttpl
xlat
xlat
xor
xor
popa
push
movsl
daa
loop
arpl
mov
dec
test
xchg
int
or
es
movsb
movb
push
lret
loope
repz
push
and
push
rorb
pop
fsub
scas
ja
ss
mov
cmpsb
hlt
sbb
bound
sbb
push
push
les
xchg
pop
lret
js
cli
rolb
cmp
cli
enter
push
push
cmc
and
lret
and
mov
pop
push
xchg
and
inc
int
mov
cmp
jmp
aaa
xchg
rorl
mov
test
movsb
jl
pop
scas
and
sbbl
imul
sbb
jg
fisubs
fisubrs
mov
lock
pop
xchg
neg
sbb
mov
sub
sti
pop
sbb
sbbb
ss
scas
sub
clc
fiaddl
stos
loope,pt
add
js
sbb
ror
movsb
xlat
mov
fcomps
lret
cmpsb
push
or
lds
mov
mov
imul
popf
sub
aaa
xchg
xor
adc
rclb
outsb
lret
loop
jno
mov
xor
add
in
pop
sbb
dec
lahf
adc
ds
mov
sbb
cli
das
and
jnp
cmp
dec
sub
sarb
xchg
cmc
or
add
xchg
dec
fcmove
mov
xor
mov
mov
push
pop
imul
mov
dec
movsl
xor
or
cmpsb
cmp
push
jb
add
xor
cltd
into
fidivrs
or
loopne
mov
mov
sub
or
stos
fstl
adc
cmp
dec
in
xor
mov
imul
inc
fistl
push
push
mov
mov
test
jg
pop
insl
jp
call
out
mov
fbld
or
imul
push
scas
sub
mov
insb
dec
push
mov
dec
cli
and
arpl
pop
stos
xchg
sahf
adc
ja
lret
sbb
xchg
into
push
sbb
cmp
sub
add
ljmp
insl
sti
lahf
mov
dec
sub
adc
int3
pop
aad
cmp
fcmovnb
es
repnz
pop
pop
or
mov
push
mov
jbe
xchg
in
dec
and
lods
inc
push
and
inc
icebp
mov
adcb
es
mov
and
pop
pop
std
xlat
or
add
fs
jg
pop
sarb
xor
data16
pop
jmp
push
sub
or
cli
pop
ljmp
and
sbb
stos
inc
ja
imul
std
bound
add
gs
ljmp
mov
cltd
fiadds
stc
scas
popf
fnstenv
and
add
sub
cmp
mov
enter
jecxz
lret
pop
sub
push
sub
repz
cltd
jne
mov
pop
xchg
inc
or
mov
and
jne
push
lret
push
in
push
cmp
fs
xor
test
push
dec
arpl
jns
gs
jbe
push
stos
scas
cmc
shll
mov
in
ljmp
popf
sbb
movsl
in
jo
in
mov
les
dec
sub
push
sbb
xorb
push
push
cld
cwtl
jnp
es
or
aaa
push
push
xor
xchg
push
popa
add
inc
xchg
pop
sahf
movsb
mov
mov
rcrb
inc
cmpsl
mov
sbb
sub
andl
test
popf
jmp
mov
mov
into
add
mov
or
adc
jnp
mov
and
std
adc
sbb
pop
or
cli
sbb
cli
push
shll
push
fcoms
mov
pop
add
xchg
loopne
out
xchg
test
fadds
push
jae
xchg
or
fwait
dec
mov
hlt
xor
lret
movsb
test
jne
int
scas
xchg
mov
frstor
inc
fisttpll
xor
and
imul
cmp
adc
push
imul
push
sub
xor
inc
dec
mov
jno
mov
adc
add
stos
or
cmp
mov
jle
std
push
lods
call
jno
stc
sub
add
cmpsb
sub
xchg
or
or
and
pushf
pop
xor
jle
and
cmp
cmp
enter
rorb
and
shll
add
push
inc
jg
pop
in
aaa
mov
inc
mov
mov
cmpsb
sbb
lds
pop
int3
sub
xor
aam
fsubp
arpl
jmp
lret
mov
mov
push
pop
jmp
xchg
sbb
push
adc
pop
pop
or
pushf
mov
sbb
inc
or
and
push
push
shll
cmpb
ja
mov
or
hlt
mov
stos
xor
or
mov
mov
imul
loopne
cmp
xor
call
pop
lret
fiaddl
sbb
mov
outsl
xchg
pop
test
stc
dec
push
ffreep
and
das
or
cli
lcall
mov
fwait
mov
cmp
pop
push
push
jae
test
adc
stc
jmp
in
push
mov
ss
fwait
and
mov
pop
or
fprem
or
mov
inc
shl
jl
mov
out
je
cmp
out
or
adcb
out
sti
cs
xor
or
push
imul
xor
mov
xchg
inc
xor
fcompl
mov
fisubrs
push
mov
xchg
out
shll
ss
xchg
notl
mov
pop
sbb
fstpt
push
sub
sarl
bound
adc
outsl
pusha
push
sub
stos
in
sti
cmp
es
or
sbb
add
adc
popa
mov
xchg
or
imul
push
in
out
int3
dec
lods
fnstsw
int3
xor
shrl
divb
subl
aas
in
rcrl
pop
stos
mov
flds
loop
jno
int3
pop
leave
inc
pop
cwtl
xor
enter
idiv
mov
mov
mov
adc
sbb
and
mov
push
movsl
dec
fimull
or
pop
push
xchg
cli
jnp
gs
lds
mull
sbb
addb
jbe
mov
push
push
push
pop
xchg
stc
cmp
in
xor
shll
cmp
xor
xchg
rcrb
jnp
sub
inc
mov
pop
ret
pop
clc
cmp
data16
xchg
sub
xchg
mov
aas
jbe
fisubrl
jb
test
pushf
jne
sbb
and
movsb
call
loop
fadd
xor
adc
sbb
bound
aaa
ds
push
push
dec
push
mov
push
imul
loope
mov
inc
jns
pop
fs
mov
add
mov
int3
leave
inc
mov
mov
pop
inc
push
sub
mov
jnp
fnstsw
andl
pop
xchg
divl
mov
insl
ljmp
jno
or
in
inc
ja
lret
adc
scas
rep
sti
xchg
and
sbb
pop
rcrb
shl
inc
test
jne
in
cmpsl
adc
les
insb
fdivrl
cmpsl
add
ja
pop
movsb
lea
xchg
pop
ds
push
stos
pop
pushf
mov
fistl
mov
out
jmp
test
and
add
push
mov
xchg
pop
sbb
adc
xchg
jle
lahf
sti
pop
stos
dec
adc
fs
jne
lcall
xchg
mov
inc
sbb
and
xchg
jp
and
je
outsb
repz
inc
fistpll
jmp
sub
movsb
dec
movsl
enter
inc
loopne
sbb
mov
cmc
jmp
cmp
mov
and
mov
mov
popf
lods
popf
into
xchg
xor
xchg
je
fcmovne
cmpsl
mov
push
icebp
xor
cmpsb
cmp
jmp
mov
add
notb
add
dec
push
sub
cmpsb
xchg
add
and
cli
mov
mov
mov
sahf
jle
pop
loope
ror
imul
dec
mov
scas
adc
add
jae
divl
js
cld
xor
xor
jno
add
lret
xor
scas
push
xchg
or
inc
movsl
in
outsl
enter
xor
popl
lods
adc
push
cmp
fcomp
inc
xchg
mov
orb
jle
xchg
mov
inc
xchg
repnz
push
mov
and
lods
mov
cwtl
jb
in
lock
jmp
test
es
jns
inc
stc
adc
or
mov
push
clc
push
inc
js
push
ss
imul
or
pop
sub
and
sbb
dec
enter
and
lcall
push
lahf
lods
mov
xor
icebp
jmp
gs
into
adc
lea
lea
fwait
mov
mov
ret
add
xchg
lcall
insb
stos
je
jbe
sbb
jp
jb
iret
pop
push
jo
mov
insl
movsb
xchg
std
mov
xor
add
push
sub
dec
mov
mov
lock
or
xor
xor
push
add
popa
popf
add
pop
stos
inc
dec
lds
mov
push
dec
sahf
mov
aad
xchg
inc
stos
lret
cmc
push
into
dec
stos
sahf
or
mov
inc
jmp
cwtl
movsb
jbe
xor
test
or
lret
xor
jl
scas
push
cmpl
movsb
add
popf
bound
jle
inc
jbe
mov
push
jecxz
sbb
xor
and
or
bound
icebp
insl
fisubl
jl
and
test
loope
mov
popf
repnz
lds
or
sarl
and
stos
pusha
push
int3
xor
js
test
jge
xchg
jp
popf
popf
mov
jge
cmp
lds
pop
inc
and
jnp
dec
testb
dec
pushf
call
mov
imul
push
les
xlat
pop
xor
aaa
cmp
lea
cmpsb
xor
jge
shrl
lret
xchg
adc
outsl
imull
adc
mov
cwtl
sahf
int
scas
lret
xchg
jo
int
add
mov
cmp
xchg
push
cmp
xchg
pop
sub
gs
mov
mov
ljmp
pop
or
movsl
shll
push
js
in
movsb
or
les
push
xchg
lods
sti
push
jg
lret
aam
int3
out
push
add
sarb
push
mov
sbb
int
stos
mov
addb
mov
mov
loopne
push
pop
outsl
mov
insb
int
test
fcmovnu
mov
lds
jp
add
dec
jbe
scas
in
lea
stos
jecxz
shlb
push
inc
loopne
dec
jae
fdivl
stc
xchg
dec
pop
mov
aas
pop
push
sub
add
popf
rclb
or
adc
xchg
lock
out
test
lock
and
imul
mov
jmp
pop
movsl
aad
fdivrs
ds
mov
adc
vpunpckhdq
cmp
rclb
incl
xchg
sarl
out
push
loope
sbb
mov
jns
or
aad
clc
mov
dec
test
insl
lahf
syscall
sbb
inc
loope
sub
cmp
call
aas
sbb
adc
popf
dec
mov
inc
hlt
sti
push
int3
adc
cmp
rorl
xor
test
cmp
adc
and
in
add
or
fistpll
or
push
sbb
fs
data16
adc
cltd
push
cwtl
pop
je
fwait
xchg
inc
mov
sub
sbb
in
inc
jae
dec
xchg
push
sbbl
ja
out
push
mov
inc
shll
mov
inc
fucom
push
inc
mov
ds
mov
xchg
sbb
cmp
cmp
push
lahf
sub
into
push
popa
inc
ja
xor
dec
leave
and
adc
sbb
int3
mov
push
push
xchg
test
add
lock
jle
fwait
lods
lods
jl
mull
xchg
or
xorl
test
incb
outsl
cmpsb
lahf
push
pop
mov
jp
rcrb
sub
lea
mov
and
addr16
mov
addb
mov
add
pop
test
fdivs
lods
lea
mov
popf
push
inc
imul
pop
std
insl
fiaddl
mov
mov
dec
addb
movsl
xlat
or
jp
xor
push
mov
stc
cmpsl
lods
adc
fldt
jge
xchg
xchg
xor
lret
shlb
mov
incb
sbb
cmp
inc
call
jl
or
adc
shrb
leave
inc
pop
insb
xchg
push
jnp
xor
pop
mov
lea
or
or
pop
sahf
sbb
add
ss
lret
mov
xchg
nop
fisubrl
mov
lock
xor
xor
sbb
fimull
ss
in
hlt
js
rorl
sbb
mov
jmp
or
or
pop
lock
aas
cli
dec
push
lods
push
movsb
sub
mov
and
idivb
inc
or
adc
xchg
xchg
inc
sbb
inc
cmc
xchg
imul
add
shrd
jmp
arpl
dec
nop
sub
mov
test
cmp
stos
cmp
das
xor
pop
aam
leave
cli
add
cmp
sti
loopne
dec
fldpi
loop
cmp
sbb
xor
imul
in
mov
lds
shrb
fsubl
nop
push
add
das
cmpsl
mov
sub
movsb
js
mov
inc
das
pop
das
cmc
sub
jbe
push
dec
lahf
sub
ss
bound
in
add
data16
outsl
sar
dec
pushf
cmp
in
inc
ljmp
push
or
adc
dec
lock
dec
imul
mov
mov
repz
jle
jnp
fcmovnu
movsl
les
lret
jnp
pop
mov
sbb
lods
push
cmp
sub
div
add
dec
lret
push
fidivl
jno
inc
mov
cmp
cmc
pop
mov
dec
leave
into
xchg
fdiv
jbe
jno
aad
aad
dec
xchg
test
pop
lods
rorb
sub
dec
push
xchg
xor
pop
add
xor
aam
or
arpl
out
dec
cmc
mov
sub
pop
sbb
int
aam
xor
insb
dec
out
jbe,pn
mov
int
pop
push
shlb
add
or
lods
shrd
push
cmp
ds
std
cli
pusha
jb
cld
ljmp
fisubrs
dec
stc
and
test
scas
mov
pop
cmpsl
stos
leave
lods
jns
or
sarl
mov
xor
sbbl
push
outsl
cmpsb
inc
cmp
pop
sti
cmpsb
pop
pop
mov
dec
enter
mov
dec
xchg
rcll
test
pushf
jae
fsubrs
add
sub
jo
xchg
shrl
test
nop
loop
int3
xor
mov
mov
flds
cmp
xchg
mov
mov
fldt
cmp
rcrb
lcall
push
cltd
cwtl
aas
out
and
inc
or
push
lret
ja
cs
inc
lahf
jle
mov
aad
sbb
dec
sbb
adc
inc
mov
inc
ljmp
jmp
jle
pop
jb
mov
mov
sub
mov
and
icebp
cmp
fsubrs
xchg
xchg
dec
outsb
mov
js
nop
bound
sbb
insl
mov
mov
jg
dec
dec
adc
cmp
lods
es
pop
or
ja
scas
lods
insl
sahf
cmp
cmp
scas
inc
xchg
push
pop
sub
mov
inc
enter
fcmovnu
int
out
mov
mov
scas
aas
repnz
or
push
adc
sti
mov
cmpsb
dec
cmp
xor
xchg
pop
fs
pop
ret
jbe
mov
popf
enter
jge
xchg
push
jnp
xchg
add
mov
movl
jmp
outsb
insb
jecxz
jg
loopne
push
mov
les
mov
test
stos
movl
xchg
sub
idivl
sbb
push
test
pop
lret
jne
lcall
lock
addr16
sbb
adc
dec
hlt
popf
push
clc
pop
pop
sbb
dec
in
cmp
shll
adc
imul
fistl
por
mov
sub
rorl
or
sbbl
sub
imul
shlb
pop
mov
das
cmpsl
mov
xor
enter
add
jmp
sbb
cltd
scas
arpl
lcall
sbb
inc
dec
mov
jle
mov
mov
xchg
scas
push
lret
pop
inc
pop
mov
hlt
iret
or
push
arpl
mov
mov
test
mov
add
inc
adc
xchg
stos
out
mov
gs
pop
jp
out
test
stos
ret
lret
aad
or
add
and
lret
insb
jnp
mov
jl
jmp
mov
or
stos
pop
jl
mov
xchg
jbe
adc
xchg
and
cmp
sub
xor
xchg
call
pushf
sub
ja
cltd
inc
push
sti
xchg
sbb
xor
in
insb
repnz
fistps
out
lcall
inc
mov
sbb
iret
jle
xchg
mov
clc
mov
in
pop
pusha
cmp
je
pushf
lds
fdivr
movsb
push
cwtl
pop
inc
js
out
loope
fnsave
aas
push
aaa
lret
xchg
insb
xchg
xchg
xchg
jne
arpl
popf
push
dec
call
inc
sub
inc
rcll
inc
push
xor
jns
cwtl
enter
rorb
aam
lds
mov
push
test
inc
fldlg2
enter
sub
pop
jg
jbe
push
hlt
mov
sarb
dec
jp
in
outsb
jne
ret
out
bswap
in
xor
add
and
push
mov
call
mov
xchg
mov
adc
inc
cld
out
cs
lahf
push
shlb
lret
sub
sub
jl
shl
push
or
sub
xchg
leave
incb
xorl
pop
sbb
addr16
stos
pop
sarl
push
dec
xor
fistpll
lods
out
push
clc
jbe
fnsave
sub
sbb
pop
jnp
and
scas
into
xor
subb
jmp
mov
add
xchg
add
gs
jg
inc
xchg
xlat
mov
fisubl
lea
mov
adc
or
lods
mov
dec
xchg
cs
cmp
jns
and
sub
xchg
sub
cmp
inc
inc
int
rsqrtps
fsubrs
repnz
sbb
pusha
adc
sbb
mov
xchg
jb
std
jecxz
mov
dec
loope
sub
sbb
inc
xchg
iret
bound
dec
jl
shrl
sub
adc
enter
ds
loopne
add
and
add
aam
lret
js
jo
xor
cmp
mov
dec
sahf
popf
scas
leave
das
add
outsb
inc
inc
dec
or
sbb
xchg
imul
adc
dec
jecxz
pop
decb
xor
mov
adc
push
mov
sahf
mov
or
sub
repnz
orb
inc
pusha
es
imul
adc
icebp
stc
into
adc
lds
inc
xorl
xchg
pop
lock
dec
shrl
stos
loopne
push
sbb
testl
and
add
lock
stc
lods
or
std
and
pop
mov
dec
cmp
pop
push
dec
jne
sti
dec
mov
mov
lret
dec
mov
aas
mov
inc
add
mov
lcall
adc
mov
push
jae
sahf
inc
rolb
in
out
roll
adcb
mov
fs
xchg
aam
addr16
ret
stc
repz
ljmp
mov
jb
xor
mov
testl
sbb
es
rorb
mov
inc
or
pop
mov
sbb
imul
rcll
xchg
aaa
add
push
in
jns
pop
adc
push
cmpsl
lock
stos
rorl
js
pushf
sub
lcall
inc
jge
or
lds
imul
imul
add
inc
adc
mov
lods
cmp
or
xchg
movsb
in
ss
sarb
or
push
fbld
sarl
in
or
sbb
cmp
sbb
pop
or
mov
insl
out
fs
dec
bound
out
xchg
ret
mov
inc
pop
inc
loop
popa
lock
jbe
test
or
dec
jle
stos
orb
mov
xchg
arpl
xchg
jb
and
pop
sbb
jne
fstpl
sub
xchg
pop
clc
dec
test
dec
mov
inc
xor
lods
adc
lds
cld
mov
xor
test
and
sub
mov
push
mov
push
xchg
pop
rol
daa
sti
mov
mov
inc
jnp
mov
shlb
setb
xchg
add
bound
pop
jecxz
out
dec
rcrb
popf
out
sbb
mov
sbb
dec
jp
adc
aaa
xchg
sbb
iret
xor
cmp
jns
inc
ss
loopne,pn
mov
jbe
outsb
add
iret
mov
into
push
jl
bound
lods
pop
jecxz
shlb
cmp
cmpsb
nop
sbb
pop
dec
mov
mov
mov
stos
shrl
ss
out
push
add
adc
addb
cmp
loopne
std
in
inc
fistps
sub
ret
jno
or
ret
inc
and
add
xchg
pop
push
popa
in
sub
and
out
cmp
lds
mov
faddp
jl
mov
out
inc
adc
mov
or
mov
shld
and
xor
lds
ja
jl
xchg
in
nop
pushf
mov
insb
loope
sub
jge
and
loopne
mov
add
in
orb
dec
sbbb
lcall
jp
mov
int3
lds
dec
sbb
xchg
cld
sub
loope
fsubr
mov
xchg
push
nop
shll
dec
clc
push
sbb
cmp
rorl
jg
decl
push
imul
rol
test
sbb
jne
jge
dec
pop
cmp
cld
cmp
cmp
or
into
lea
mov
inc
or
pop
or
not
lds
fnstenv
jns
aam
mov
xchg
idivl
sub
or
outsb
jmp
loop
cmpsl
and
cltd
or
lock
add
adc
xchg
ja
andl
lcall
sahf
adc
dec
push
imul
aad
inc
jle
aas
and
xor
iret
xor
ja
cmp
lds
or
pop
dec
das
jle
outsb
xchg
test
cmp
fs
jmp
sub
scas
lret
orl
dec
lock
out
lock
mov
jns
dec
lods
arpl
sbb
xlat
push
inc
and
insb
fidivrs
mov
mov
add
loop
push
psubsb
jecxz
mov
push
repnz
lahf
mov
xor
into
testb
imul
test
insl
xor
addr16
in
rorb
push
inc
orl
pop
ljmp
test
jne
mov
gs
inc
lock
fcomip
call
pop
xchg
cmp
jg
out
jl
scas
fisttpl
push
dec
push
jmp
ss
lods
mov
loopne
inc
cmp
mov
push
lods
jl
mov
cli
xchg
xor
mov
loopne
imul
or
loopne
pop
jg
popa
or
mov
mov
icebp
inc
mov
push
dec
lret
test
cmp
cltd
inc
cmp
ljmp
test
fisttps
int
push
nop
pusha
dec
imul
inc
ret
xor
lret
call
and
cli
std
mov
lahf
adc
jo
pop
mov
jbe
adc
pop
lea
adc
sbbb
rorl
adc
pop
dec
dec
pop
loope
mov
sbb
xchg
rorb
lods
cmp
jecxz
lahf
pushf
arpl
popf
cmp
out
xchg
lods
sbbl
add
sbb
mov
cmp
ljmp
xor
fldt
xchg
add
bnd
ret
in
cmp
enter
repz
inc
push
adc
inc
ret
imul
outsb
jns
rclb
cli
or
clc
adcb
popf
sub
idivb
mov
shl
or
push
jo
negl
div
adc
fucomip
addr16
jle
sub
mov
std
sbb
xchg
and
jbe
jg
shll
es
mov
pop
lock
push
jmp
cwtl
xchg
mov
mov
pop
je
push
jae
call
push
pop
mov
adc
cs
fs
mov
dec
popa
pop
ss
enter
sbb
lahf
aas
imul
test
inc
insb
outsb
cmp
mov
outsb
pop
fwait
dec
adc
movsl
nop
inc
cmpl
movsb
lret
fcoms
stos
mov
movsl
imul
pop
sbb
jmp
jge
adc
call
in
hlt
jae
inc
and
or
cwtl
pusha
inc
int
mov
ja
cmp
jne
mov
xchg
xor
jae
jmp
mov
pop
and
aam
aad
inc
inc
fmulp
cld
jns
shrl
dec
cli
jbe
movsb
jle
inc
gs
push
andl
shlb
jl
add
sbb
stc
xor
xor
movsb
mov
mov
cmpsb
lods
dec
and
bound
leave
lret
sbb
mov
sub
dec
add
mov
sbb
neg
jp
mov
mov
call
test
add
stos
mov
dec
cmpsl
leave
and
imul
lret
outsl
jo
aas
stos
movsb
and
xor
repnz
xor
cmp
insb
xchg
mov
dec
push
add
dec
inc
cmp
mov
mov
call
sti
sti
outsb
jns
ljmp
es
lcall
arpl
scas
push
mov
out
cmc
adc
daa
xor
xor
sahf
jns
mov
into
or
cltd
lret
outsb
cwtl
jno
xchg
rcrl
into
jo
add
js
xchg
mov
iret
int3
into
call
fwait
mov
or
push
sbb
cwtl
out
mov
cmpsb
sub
mov
cmp
mov
out
daa
repz
add
pop
in
fldcw
push
ret
jle
jge
xor
int3
stc
cmp
cmpsb
cmp
xchg
movsl
popa
inc
ret
data16
cmp
add
and
nop
push
xchg
pop
mov
dec
adc
mov
sti
nop
lret
and
sub
outsl
jns
xor
fadd
dec
sub
push
cmp
or
sub
stos
sbbb
je
aaa
dec
add
dec
es
dec
ja
inc
xchg
imul
jbe
stos
and
mov
and
and
lods
sbb
das
pusha
fstpt
sahf
cmp
mov
cltd
add
cmp
push
pop
loopne
add
sub
inc
repz
fwait
mov
ja
pusha
jns
ret
mov
insb
movsb
mov
mov
es
mov
jp
cmp
mov
in
jge
jmp
cmp
ret
dec
mov
bound
insl
je
mov
pop
pop
cmp
xor
mov
jb
lea
xchg
adc
aam
arpl
jle
pop
jae
test
dec
or
jmp
popa
insb
pop
fisttpl
xchg
mov
mov
cmp
push
inc
shl
in
push
push
mov
cmp
out
jmp
inc
je
std
aas
test
inc
cmp
scas
dec
add
mov
movsb
in
ja
pop
lret
sbb
les
in
xor
fsubrs
mov
jge
mov
adc
lds
ljmp
dec
dec
fmuls
pop
push
sarb
xchg
addb
mov
jle
adc
dec
jne
cmp
pop
pop
fdiv
ja
aaa
ftst
sub
push
sarl
xchg
enter
cmp
rcrl
outsl
shl
jl
pop
cmp
cmp
pop
pop
pop
je
out
lret
mov
cwtl
or
mov
sub
add
jae
out
movsl
add
iret
in
mov
dec
jle
or
rorb
stos
mov
sub
imul
mov
push
push
and
addr16
cmpsb
outsb
ret
or
add
sub
clc
lods
nop
aam
jo
out
add
lods
std
mov
jge
sbb
idivb
stos
pop
je
xchg
aam
mov
sbb
adc
fld
shr
icebp
adc
out
or
mov
mov
dec
fcmovu
jmp
mov
in
ss
xchg
rcll
adc
cmp
fmul
push
or
inc
sbb
rcr
jle
mov
fwait
add
fistps
cs
stc
out
mov
in
or
sub
mov
sbb
pop
sbb
jns
pop
push
popf
lods
sub
mov
cmp
pop
decl
adc
cmp
idiv
inc
adc
imull
testb
imul
pushf
sbb
movsb
js
icebp
mov
aad
rcrl
test
popf
jne
cli
dec
mov
pusha
mov
cmp
jg
xchg
lods
aad
lods
daa
mov
test
jp
xchg
incb
push
lret
jge
repnz
jbe
aam
ds
popa
mov
and
int
std
in
mov
fs
pop
sub
fcoms
push
adc
fwait
pop
scas
not
hlt
inc
lret
cwtl
dec
adcb
mov
outsl
incb
push
jge
loop
scas
pop
mov
pop
out
sti
push
sbb
nop
dec
mov
and
mov
mov
rclb
cmpb
xor
scas
pop
clc
insl
and
lret
int
jp
cmpsb
pop
inc
xor
stos
mov
loop
les
mov
cltd
jecxz
cmp
lea
hlt
imul
push
js
insl
fimuls
sahf
mov
bound
in
or
jecxz
or
sbb
getsec
xchg
bound
jg
icebp
ret
mov
lret
pop
jl
ret
mov
cmp
add
lahf
adc
popf
pop
ljmp
das
jp
pusha
ret
mov
fsts
out
sti
repnz
rorb
pop
ljmp
and
leave
stos
mov
pop
xchg
aad
and
loop
in
lcall
xor
mov
pop
cwtl
jbe
clc
mov
out
pop
in
jle
cld
scas
aad
mov
insb
xor
int
pop
lods
sub
sti
aad
mov
adc
sbb
aad
xor
xchg
mov
fistpll
orb
mov
pushf
xchg
inc
jb
icebp
and
repz
push
pop
lock
leave
jo
jne
dec
sbb
scas
pop
push
gs
lods
lahf
fnsave
test
xor
cmc
fstpl
cltd
cmp
movsl
xor
addb
mov
push
pop
jbe
inc
mov
mov
and
dec
xadd
divb
add
lahf
sahf
push
adc
int3
jmp
pop
and
xchg
lret
mov
outsl
mov
cmp
jno
shrb
xor
in
jl
pushl
or
lock
xor
push
out
loop
sar
inc
sahf
mov
int3
xchg
and
jmp
sub
add
mov
repnz
loopne
pop
push
out
iret
sub
ljmp
cmp
push
jnp
addr16
xor
mov
ss
push
clc
fmuls
push
inc
shrb
icebp
cmc
dec
test
xor
cmpsl
sbb
adc
iret
dec
mov
shl
cmp
daa
mov
fsubr
pusha
iret
lret
sbb
add
out
out
aas
pop
pop
push
stos
lcall
in
cld
insl
test
addr16
out
inc
push
notl
std
cmpsl
adc
lea
jecxz
jge
ss
subl
pop
jae
fcomi
mov
int
mov
outsb
fistps
mov
pop
fnstcw
movsb
cmp
inc
sub
push
push
stos
push
roll
pop
popf
xrelease
in
jb
rorb
mov
adc
in
aad
adc
or
xchg
dec
pop
pop
pop
cwtl
and
stc
xor
mov
or
dec
lds
pop
xchg
fldln2
iret
jb
arpl
or
xlat
clc
mov
adc
into
mov
adc
dec
xchg
mov
mov
aaa
push
lods
mov
lods
fnsave
and
xor
out
leave
inc
add
das
lods
sub
xor
inc
into
mov
pushf
and
mov
enter
xor
gs
adc
xchg
clc
dec
shlb
mov
fistl
ret
fstl
mov
cld
dec
js
iret
sahf
push
cmpps
and
popa
cmpsl
inc
pop
imul
jl
js
cmp
dec
nop
and
dec
cmpsb
das
mov
xchg
les
int
loop
jmp
not
stos
xchg
push
sub
xlat
push
mov
roll
imul
movsb
ljmp
xlat
andb
xor
push
xchg
in
push
sbb
sbb
loop
cltd
mov
arpl
jns
in
jp
cwtl
jmp
shl
test
adc
mov
and
js
popa
xorl
shlb
xor
loopne
decb
or
mov
sub
jmp
jae
sub
add
jnp
stos
ds
cltd
std
push
sbb
xor
cmpsb
roll
int
hlt
xor
xor
int
mov
scas
mov
fwait
mov
lret
in
mov
decb
xor
rorl
or
or
pop
arpl
mov
pop
idivb
inc
cmpsb
nop
jg
test
sbb
pop
imul
sub
inc
gs
fadds
rolb
sti
iret
insl
ja
pop
push
test
pop
mov
jbe
mov
sub
andl
adc
sti
dec
movsb
dec
inc
jp
repz
mov
popf
mov
or
push
rol
mov
inc
dec
notb
adcb
mov
fisubrl
cmp
stos
clc
mov
jnp
in
and
and
jmp
ljmp
inc
mov
push
xchg
cmp
push
push
sub
pop
rclb
in
loop
fldcw
ds
xchg
mov
mov
xor
insl
jecxz
mov
pop
repnz
mov
test
pop
inc
cmpsb
data16
lret
iret
or
or
mov
jmp
inc
jmp
lcall
lock
sbb
outsb
mov
pop
and
roll
or
mov
sbbl
mov
sub
mov
push
or
cmp
movsb
cmp
imul
aad
xor
mov
or
add
ljmp
fnstcw
inc
sbb
std
dec
push
iret
cld
repz
and
fdivs
into
aas
pusha
popf
add
ds
clc
sub
lret
jb
imul
pop
mov
mov
mov
xchg
push
jg
sub
lea
repz
sub
addr16
pushf
negl
inc
movsb
lcall
ljmp
sub
mov
ret
data16
mov
lret
fldcw
mov
and
into
pop
in
and
add
aam
push
das
or
repz
fbld
sub
sbb
call
adc
mov
push
leave
out
xorl
mov
aad
sbb
jecxz
je
outsl
ss
lret
cmp
push
mov
std
mov
push
loope
je
loop
lahf
popf
repz
pop
sub
popf
pop
mov
mov
lock
addl
in
mov
cmpsl
xchg
add
sbb
jns
jg
fildl
into
add
jno
jmp
data16
mov
inc
adc
dec
and
adc
adc
dec
dec
stos
dec
cmp
add
mov
push
mov
mov
or
test
mov
sub
shlb
sbb
aad
iret
cs
add
loopne
aam
outsb
xchg
push
push
sbb
addr16
jg
call
push
or
out
idiv
cmpsl
dec
fldt
sub
cmp
mov
push
or
movsb
test
rcll
jge
pcmpeqb
and
fs
imul
daa
aad
lds
cwtl
or
scas
and
js
sub
ljmp
mov
mov
mov
or
insb
bound
xchg
or
stos
xor
sbb
pop
ret
sub
movsb
mov
icebp
xor
xchg
test
xchg
in
push
inc
cmpsb
jns
push
orb
push
mov
insl
xor
std
and
pop
fcmovnb
jbe
rclb
stos
scas
movl
fsubp
fcmovbe
in
push
add
adc
xor
push
jle
inc
dec
mov
and
das
push
stos
sub
jl
dec
adc
or
cmp
cmpsb
mov
in
imul
adc
mov
push
inc
test
mov
loop
cmpsl
and
insb
inc
faddl
scas
negb
add
sub
outsl
inc
mov
mov
out
cmp
out
test
stc
data16
xchg
cmpsl
mov
iret
fcom
sbb
xor
fldcw
testb
scas
jo
push
sbb
mov
stos
jns
ret
es
xchg
xor
lds
in
jle
inc
pop
cmp
faddp
push
insb
fs
es
fnstcw
orb
add
movsl
push
and
push
jbe
jb
sub
xlat
cltd
lret
lods
jmp
cwtl
jnp
xchg
ret
repnz
dec
xchg
mov
push
xor
mov
dec
cmp
xor
movsb
imulb
mov
cli
aad
dec
ljmp
xor
mov
and
mov
push
fbstp
fs
push
sub
movsl
push
push
test
or
rolb
aam
and
push
andb
daa
orb
cmpsl
cmpsl
jne
pop
popa
xchg
pushf
test
lea
and
xchg
jno
add
xor
mov
loopne
cltd
daa
test
test
jecxz
jo
int
imul
cltd
cmp
xor
ret
or
fiaddl
aam
gs
movsb
out
leave
add
popa
inc
je
enter
xchg
xchg
roll
int
push
add
inc
mov
jns
enter
iret
mov
mov
repz
inc
sbb
and
in
jb
mov
es
ret
mov
clc
mov
lea
or
mov
jo
rolb
jnp
and
push
inc
shl
aas
pop
pop
pop
mov
aam
mov
pcmpeqb
jbe
cltd
inc
test
add
dec
bound
pop
sub
xchg
mov
test
movsl
and
leave
mov
pop
pop
in
sub
les
adc
out
add
mov
sbb
mov
add
popa
cmc
sub
and
shll
cmp
xor
bound
addr16
hlt
inc
pop
sbb
xchg
jl
cmp
push
repz
mov
sbb
stc
rep
std
int
inc
xchg
scas
jns
inc
es
in
jbe
push
jecxz
push
pop
jecxz
dec
shrl
jo
out
insb
scas
in
pushf
xchg
pop
imul
xchg
inc
pop
sbb
push
xlat
pop
negb
notb
into
jne
popa
sbbl
pop
jnp
mov
les
jecxz
and
pop
pop
into
test
fdivl
cld
dec
insl
test
or
push
es
push
pusha
std
dec
hlt
cli
jmp
shrb
adc
push
adc
fxch
xchg
int
sub
xchg
xchg
push
and
sbb
or
cltd
sbb
dec
bound
mov
mov
push
dec
xchg
mov
outsb
jmp
or
push
js
or
mov
rolb
mov
mov
inc
icebp
sub
loop
push
insl
xor
pop
data16
inc
lret
mov
test
push
jle
idivb
and
adcl
jg
mov
out
jecxz
ds
movsl
test
adc
inc
jae
cmp
sbb
ss
jecxz
mov
cmp
jb
pop
sub
mov
stc
pusha
adc
mov
lret
dec
dec
push
lcall
rcrb
cli
sbb
cli
vaddsubps
pop
aas
iret
sub
or
and
das
sbb
push
dec
test
push
outsb
cmc
pop
xchg
xchg
xchg
test
inc
xchg
pop
mov
sbb
jno
cli
xchg
inc
pop
jecxz
jge
outsl
or
adcb
pop
in
dec
lods
xchg
lcall
xor
xchg
cmc
pop
push
insl
clc
imul
js
xchg
imul
cmp
jnp,pt
insb
loop
fmulp
xchg
dec
adc
mov
sbb
xor
test
loop
rolb
cwtl
stos
call
jmp
push
test
jae
sbb
test
in
clc
or
es
lock
jbe
push
das
pop
jp
cmpsb
aad
idivl
ja
lods
out
neg
shl
fidivrs
std
aad
movsw
rcll
adc
in
or
in
jno
aas
add
repnz
lea
dec
inc
arpl
jmp
mov
inc
data16
nop
sbb
cs
lcall
pop
fsubrl
fstpt
xchg
mov
cmc
and
shlb
mov
inc
popa
sbb
out
shll
les
push
xor
xchg
fidivrs
shl
sub
mov
mov
test
inc
pushf
push
shrl
jns
imul
xor
insb
xor
mov
jne
rcl
and
mov
mov
bound
xlat
adc
out
mov
pusha
jmp
xlat
inc
mov
scas
andl
mov
enter
fwait
inc
push
or
shl
imul
out
aaa
cmp
adc
cltd
jns
movsb
push
jge
paddq
shll
shlb
clc
mov
inc
fidivl
addr16
push
bnd
mov
fcomps
popa
aam
cmpl
in
mov
dec
in
es
aaa
dec
xchg
or
sti
mov
insb
ret
mov
and
jae
into
jecxz
adc
lcall
ja
and
outsl
outsl
mov
fcmovnbe
sahf
mov
dec
lock
scas
xor
xor
stos
jnp
adc
les
outsb
sub
lds
xor
xor
cmp
lock
stos
jmp
sbb
and
je
hlt
mov
nop
mov
es
in
sbb
test
icebp
lret
shrd
xor
pop
fcom
dec
adc
xor
sbb
dec
lret
cmp
xchg
outsl
push
or
jbe
and
stos
lret
mov
inc
cwtl
xchg
xor
pusha
or
mov
push
xchg
mov
mov
mov
adc
xchg
scas
sbb
mov
and
cli
enter
jge
lret
pop
push
push
pop
push
sbb
pop
adc
js
sub
jge
mov
cmp
test
cwtl
not
lods
inc
jbe
inc
fs
in
dec
add
pop
fstps
inc
cmp
cli
into
jp
push
cmpsb
cld
sbb
adc
dec
cmp
clc
stos
scas
xchg
xlat
sbb
ret
jne
adc
cs
iret
iret
cs
lock
push
imul
xlat
jmp
ret
ret
xor
pop
insb
popf
test
or
pop
addr16
jo
movsb
push
mov
jne
sub
mov
and
fdivrp
jne
test
pop
test
push
pusha
inc
pop
add
inc
lea
std
movsb
and
pop
mov
adc
aad
fdivl
lock
xchg
fs
dec
push
xorb
dec
out
mov
jb
lea
push
pop
icebp
aaa
add
inc
std
jecxz
inc
push
xchg
cmp
jl
pop
ds
jp
addb
cmpb
dec
push
adc
loop
iret
iret
or
out
popa
cmpsb
sbb
jle
cmp
mov
repnz
and
push
mov
outsb
sbb
mov
sbb
add
aam
and
sti
dec
inc
add
mov
or
xchg
loope
repnz
mov
mov
jnp
cmp
scas
int
bound
jecxz
lods
fidivrl
mov
icebp
mov
sti
fbld
adc
jl
repnz
ret
inc
push
nop
sub
add
je
fwait
jae
push
imul
push
pop
mov
fists
pushf
or
imul
lea
fldz
push
rcrb
sub
mov
jb
leave
xchg
bound
dec
sti
imul
add
cmpsl
ljmp
sarb
scas
mov
sbb
mov
mov
xchg
mov
add
into
sub
out
dec
jmp
push
or
pusha
sub
mov
mov
out
pop
leave
pop
mov
das
insb
pop
ja
rorl
cmp
cltd
sahf
xchg
in
jns
push
mov
xor
popa
pusha
out
jmp
mov
adc
xor
cmpsl
filds
mov
lcall
mov
jo
jp
stos
repnz
fadds
cmp
mov
jnp
xchg
xor
jg
and
outsb
es
xlat
or
cld
mov
lret
xor
lahf
lcall
repnz
repnz
inc
pop
shll
mov
or
mov
inc
or
test
pop
jae
dec
add
rcll
lret
adc
xor
mov
xor
decb
xchg
in
add
cwtl
cmp
push
loopne
lods
sub
mov
cwtl
and
pop
sbb
mov
mov
inc
add
xorb
cli
aas
ljmp
ljmp
pop
cmc
pop
xchg
push
ljmp
mov
dec
sbb
mov
cmp
lock
ret
mov
mov
or
mov
sahf
jbe
sub
lahf
jl
push
loopne
dec
hlt
imul
outsb
mov
mov
movsb
sub
mov
mov
ror
aaa
pop
mov
ror
xchg
push
or
adc
out
inc
mov
xchg
push
lea
pop
xchg
push
into
inc
pop
push
cltd
dec
cli
movsb
loop
or
in
hlt
jnp
cld
enter
and
test
xor
pop
add
add
pop
enter
lret
mov
add
stos
mov
mov
rorb
fsubl
jno
data16
mov
lret
cmpsb
cmp
fsubl
add
jo
fnsave
jne
add
and
add
es
mov
fidivrl
mov
adc
dec
mov
pushf
add
dec
adc
and
sbb
loope
xlat
inc
mov
xchg
pop
out
push
fmull
lahf
int3
mov
faddp
fsubrp
test
sbb
push
in
adc
insb
aam
lret
sub
sbb
loop
shrl
push
push
pop
xor
and
pop
mov
pop
mov
push
mov
inc
into
in
daa
pop
dec
nop
sbb
mov
rorb
add
out
into
add
imulb
mov
cmp
fwait
xchg
xchg
addr16
and
or
and
dec
fadds
push
add
loop
scas
or
movsb
add
mov
cwtl
xchg
jno
pop
mov
std
xor
shlb
fwait
push
sti
stos
into
mov
cmp
jno
or
adc
dec
loopne
pop
repnz
sbb
lods
mov
jp
jb
cmovae
test
xor
test
std
arpl
xchg
push
jle
mov
sbb
lret
mov
xchg
lret
cli
cmpsb
adc
data16
mov
push
lret
test
in
push
mov
sarl
mov
jmp
lock
lret
dec
push
add
sbb
jne
jae
or
and
sbb
adc
ja
adc
jmp
adc
nop
sbb
lods
xchg
std
xchg
inc
popf
push
gs
pushf
push
iret
adc
jmp
sub
mov
in
enter
jp
xor
sub
cmp
test
adc
inc
sub
mov
mov
andnps
mov
out
add
jg
clts
rcrb
icebp
xchg
fst
into
popf
xlat
add
xchg
mov
sbb
pop
dec
out
scas
cmp
ret
dec
mov
jle
int3
fst
cmp
loopne
adc
out
mov
daa
dec
pop
testb
fs
arpl
not
inc
cmp
aam
inc
test
fwait
iret
mov
sbb
arpl
and
testl
arpl
test
xor
cmp
inc
lret
fs
adc
mov
push
mov
mov
insl
lcall
jo
sub
sbb
xor
jb
sub
dec
aaa
mov
sub
cli
stc
jmp
mov
mov
inc
mov
xchg
fwait
cmc
inc
mov
sbb
lds
jl
lret
mov
push
add
mov
xchg
sarb
xor
inc
lahf
push
gs
push
push
lods
subps
inc
mov
xor
xchg
cmp
mov
sub
dec
cmc
push
into
cld
pop
xchg
mov
out
test
adc
mov
jno
jo
add
sub
sub
fildll
sbb
or
scas
ja
mov
jge
or
xchg
cmp
pop
lea
jp
or
xchg
pop
call
lahf
xchg
ss
cmpsb
push
dec
and
jge
cmpsb
lds
and
lds
and
leave
filds
lods
inc
adc
imul
divb
mov
mov
mov
bound
jnp
dec
sub
lds
rcr
lods
or
jnp
sarl
mov
inc
ret
fidivs
fscale
inc
in
mov
sub
ret
js
into
ljmp
adc
sbb
mov
fisttps
push
push
ja
cli
mov
scas
push
or
push
jbe
rcll
inc
add
jl
bound
fiadds
test
or
jp
cld
ficoms
lods
imul
jge
push
dec
cld
or
jae
shl
int
sti
inc
inc
dec
pop
or
lahf
dec
ljmp
loopne
lret
jl
mov
nop
lds
pop
test
mov
scas
sbb
sbb
cmp
mov
fcmovb
out
dec
testb
ficoml
out
pop
inc
cmp
pop
mov
sarl
cmp
mov
insb
loop
xchg
dec
aam
out
popf
mov
push
xchg
fbstp
inc
adc
sub
or
les
push
or
and
roll
push
xchg
mov
into
out
rcrl
xchg
outsb
in
popa
mov
mov
mov
push
xor
out
movsb
out
inc
add
roll
addl
rorl
lahf
mov
les
pop
cmp
and
popf
arpl
es
adc
sub
lods
clc
dec
adc
fstpl
fwait
adcl
push
xor
fsubl
sbb
push
push
xor
cmpsl
push
dec
loope
and
sub
add
in
fcomps
scas
pushf
jge
xchg
lahf
jno
fsubrl
out
insb
call
loop
add
cli
test
das
aaa
inc
pop
das
pop
add
push
sub
in
pop
aaa
lahf
dec
sub
imul
or
jb
punpcklwd
ror
push
and
aas
push
in
dec
pop
inc
xor
mov
sbb
out
sbb
jp
dec
nop
loopne
jge
ja
xorb
test
and
mov
inc
fwait
out
add
decl
outsb
inc
xchg
cmpsb
mov
fstl
xchg
adc
sub
popf
and
insb
stc
lods
pop
mov
xchg
and
adc
dec
mov
outsb
and
xchg
jg
xor
fwait
inc
xor
les
or
push
not
fsubrl
int3
mov
aad
fcompl
and
out
mov
sbb
sbb
test
rcll
lods
fs
sbb
lods
in
jp
xor
mov
psubsb
push
outsb
faddl
and
push
sti
sub
in
push
and
adc
push
dec
dec
push
fiaddl
pop
adc
dec
fs
or
jnp
cmp
or
pop
lahf
dec
hlt
jle
adc
and
and
leave
ljmp
fisttpl
dec
fucomi
pop
mov
cld
cmp
addr16
sub
mov
or
jle
push
pop
shlb
cmpsl
mov
cmp
subl
dec
jne
sahf
mov
push
jecxz
scas
out
bound
cmp
xchg
push
push
sub
fmuls
sub
popf
aaa
mov
insb
sbb
jmp
test
dec
hlt
or
not
pop
arpl
xchg
mov
adc
fucomi
or
add
es
fs
sbb
rorl
fisubrl
test
xor
rorl
hlt
int
add
mov
sub
jmp
cli
adc
jg
xor
jmp
cmp
xlat
je,pn
add
out
cs
std
imul
lcall
fsubs
xchg
mov
or
ds
mov
outsb
sbb
dec
cmp
cmp
dec
push
insb
lock
jl
into
push
add
dec
loop
push
lfs
push
data16
push
push
repnz
mov
jns
arpl
add
and
hlt
adc
mov
dec
lds
or
addr16
or
jno
mov
jg
mov
cwtl
push
cli
into
pop
mov
fxch
xor
ss
cmp
pcmpeqd
and
jle
lds
fists
adc
adc
cmp
jmp
jno
popa
insb
jg
popf
push
inc
addl
mov
fs
ss
dec
cmpsl
adc
inc
arpl
and
fildl
cld
jne
mov
xor
in
or
es
es
sub
jl
mov
adc
pop
or
mov
stc
enter
insb
andl
jae
and
pop
or
in
pop
mov
cli
negl
andl
pop
jecxz
out
or
or
cmp
lret
push
cmpsb
mov
scas
fcomps
das
xchg
mov
jp
mov
repz
scas
mov
mov
cli
mov
add
and
sub
mov
inc
xchg
sbb
adc
pop
movsl
inc
xlat
cmp
in
mov
ss
test
lock
aad
gs
cmc
ja
dec
xor
out
repnz
loopne
jnp
xorb
mov
scas
sbb
dec
inc
ret
push
mov
cmpb
xlat
lods
dec
sub
or
int
mov
sbb
loop
sub
mov
aam
xor
jp
enter
jo
shlb
iret
les
jnp
fwait
dec
push
in
jmp
addr16
pop
mov
push
xlat
xchg
test
filds
add
test
leave
jbe
xchg
mov
jg
inc
cmc
mov
dec
in
dec
push
scas
push
arpl
cmovno
ret
cmp
shrl
sub
lret
imul
jl
fucomip
test
push
push
sahf
mov
mov
call
xchg
or
int3
mov
pushf
mov
lods
push
sbb
cli
push
mov
sbb
or
or
mov
xor
inc
div
imul
call
xchg
mov
jp
imul
fiadds
dec
push
and
mov
leave
or
mov
cli
cmpsl
ret
jb
mov
idiv
scas
pop
jne
out
pop
nop
push
rorl
sub
xor
fdivl
loop
mov
cmpsb
or
pop
loope
and
stos
pop
mov
xchg
dec
sbb
xlat
inc
ret
xchg
and
test
xchg
sti
xchg
ds
jecxz
lods
pop
xlat
insb
aad
cmp
dec
mov
lcall
repnz
enter
or
adc
xor
mov
popa
push
insl
iret
ljmp
xchg
add
in
pop
and
scas
sub
pop
imul
mov
push
adc
jg
pop
mov
in
push
stc
push
imul
lods
les
cmp
pop
jecxz
mov
push
mov
hlt
xor
and
dec
inc
mov
fcompl
sahf
push
sub
dec
inc
dec
lcall
xchg
addb
push
insb
mov
jge
sarb
lahf
jb
pushf
xchg
cmp
and
pusha
out
shrl
mov
stos
add
xchg
out
mov
push
movsl
dec
sbb
or
sbb
add
imul
add
sub
or
clc
sbb
in
lahf
data16
adc
int3
cwtl
cli
jbe
pop
dec
push
fdivrp
mov
inc
push
cmpsl
test
cmp
cmp
pusha
mov
nop
in
out
pusha
rorl
aad
push
cltd
cs
sbb
xchg
cmp
out
andb
cwtl
xchg
sbb
sub
out
dec
mov
lods
lods
hlt
pop
xor
xor
mov
lods
mov
call
jnp
arpl
sbb
or
push
loopne
inc
jge
xchg
hlt
lods
fsubr
fdivs
xchg
sbb
das
push
pop
add
sub
call
leave
jne
imul
lea
imul
aam
outsb
mov
outsb
mov
mov
stc
nop
mov
and
cld
bound
push
movsl
ret
fstps
out
jno
sbb
adc
dec
push
dec
es
lret
arpl
sub
sbb
xchg
cli
ljmp
and
out
lcall
or
pop
xor
or
daa
movsl
mov
dec
in
xor
dec
add
cmpsl
jmp
faddl
mov
push
in
sub
mov
ja
outsl
xor
test
leave
les
into
or
cmpsb
add
nop
sahf
push
xchg
into
pop
pop
enter
cmp
sbb
out
and
in
popa
fisubrs
dec
cwtl
lea
pop
lret
rcl
int3
call
leave
dec
cmp
mov
lahf
in
and
ja
int3
lea
and
xchg
call
dec
mov
adc
mov
nop
orb
subb
loope
test
push
in
mov
nop
mov
cwtl
and
fildl
subl
add
jnp
jge
push
je
dec
scas
add
mov
shrl
xlat
mov
rclb
xchg
dec
sbb
push
jae
add
test
out
dec
into
stc
and
sub
lods
cwtl
jne
mov
push
fidivs
into
ja
xchg
std
pop
add
rcrb
or
adc
pop
jns
sbb
pop
je
pop
stos
outsb
popa
and
xchg
rcr
stos
jns
in
dec
mov
testb
lret
shll
jno
lahf
xchg
and
sub
jg
pop
mov
cmp
pop
test
cmp
xchg
cmp
stos
pop
faddl
bound
adc
cmp
pop
and
lret
fs
sbb
xchg
inc
jecxz
ds
out
pop
scas
hlt
ja
ja
cmpsb
adc
loope
pusha
ret
pop
or
mov
pop
icebp
inc
mov
out
jmp
add
and
mov
mov
rclb
icebp
pop
in
xchg
push
mov
push
pushf
jge
rcrb
push
leave
pop
and
dec
mov
adc
lret
std
mov
pop
stos
push
lds
loopne
mov
xor
pushf
gs
or
sub
mov
cmp
int
leave
mov
leave
mov
mov
add
jmp
jo
aam
sub
push
jl
sahf
scas
adc
inc
push
outsb
repz
jle
mov
jl
sub
xchg
push
call
in
inc
sub
jecxz
sbb
push
mov
call
add
movsb
adc
xor
xchg
loope
stos
pop
and
push
adc
jae
out
xchg
sub
jge
xor
adc
inc
or
or
dec
inc
data16
xchg
out
mov
imul
xchg
or
imul
mov
and
jg
mov
adc
adc
movsb
pop
pop
jo
push
jmp
outsl
mov
ljmp
cmc
add
sub
lods
decl
mov
or
cmp
and
popa
push
mov
push
pushf
cwtl
xor
xor
adc
xchg
sbb
xchg
adc
repz
ja
movl
push
call
hlt
fstpt
popa
es
mov
xor
std
cmc
or
sbb
fbld
add
fcoml
je
shrb
and
jno
mov
in
gs
clc
jbe
and
add
xchg
add
mov
sub
ret
stos
sub
inc
cmp
sub
cmp
scas
and
fimull
cld
inc
jno
cmc
mov
hlt
inc
cs
in
xor
push
iret
sbb
cltd
and
and
gs
mov
cmpsl
rcr
ljmp
and
rorb
push
push
sbb
lock
decb
fcomip
movsl
daa
mov
push
stc
ss
insb
cmp
daa
popa
lret
mov
test
sarl
adc
xchg
inc
jg
xchg
jecxz
test
jmp
push
push
inc
lods
cmc
sahf
mov
notl
cmp
dec
rcll
mov
mov
mov
les
adc
mov
movsb
xchg
mov
ljmp
lods
gs
jle
sub
mov
pop
lcall
xor
add
lods
xor
jo
xor
xchg
push
faddl
in
push
cltd
pop
mov
cmpb
arpl
mov
rorb
lods
shl
dec
lret
cmp
jne
scas
xor
jb
adc
cmp
xchg
inc
imul
inc
pop
mov
xchg
scas
test
dec
push
or
js
lcall
neg
cmc
and
scas
sub
shl
lds
xchg
mov
mov
sbb
int3
or
std
fs
xor
sub
fldcw
loope
jae
das
push
xchg
lods
mov
push
sbb
shlb
aad
mov
sbb
xlat
dec
inc
push
shrb
sbb
fs
std
jge
mov
and
add
int
or
push
aaa
pop
mov
mov
jecxz
xor
test
cmp
sbb
xor
test
sbb
imul
sti
cmp
dec
sbb
mov
out
push
sub
nop
js
push
xchg
push
inc
scas
xor
jp
xchg
cmp
orb
pusha
pop
mov
ret
flds
out
jmp
int3
push
sub
jge
inc
pop
adc
pop
inc
cld
or
cltd
jne
cmp
inc
mov
jae
jl
mov
cwtl
movsl
xchg
enter
and
cwtl
mov
mov
sub
call
xor
inc
mov
movsb
mov
or
pop
pop
stos
inc
movsl
ret
mov
jns
lret
shll
mov
push
adc
inc
iret
out
mov
mov
adc
imul
jno
cmp
inc
fwait
push
xchg
scas
mov
lea
sbb
test
gs
dec
add
xor
ja
sti
pop
adc
jle
das
ucomiss
int
mov
inc
pop
test
jl
bnd
jmp
mov
shr
mov
stc
sbb
xorb
jecxz
and
addr16
dec
iret
inc
mov
add
pop
lods
xchg
roll
int
mov
push
push
jnp
xchg
gs
data16
push
mov
push
jle
sbb
jmp
je
je
test
pop
push
lahf
mov
inc
mov
stos
xor
cmpb
rolb
stos
and
fildl
insl
sub
mov
or
daa
push
sbb
daa
in
or
cmpsl
ficompl
mov
aas
andl
shll
jge
mov
cmpps
xlat
xor
push
ds
out
jge
xor
and
imul
bnd
inc
jmp
fdiv
pop
leave
dec
shrb
pop
gs
incl
out
mov
push
movl
or
addb
adc
dec
inc
sbb
push
inc
pop
dec
jnp
iret
cmp
out
mov
mov
mov
in
sbb
addr16
mov
xchg
hlt
mov
push
aas
lret
aaa
lds
pusha
in
mov
push
jmp
test
fisttpll
loopne
push
dec
sbb
jnp
ja
and
cmpsb
xor
aaa
mov
call
cmp
je
cmp
xchg
and
mov
push
cmp
imul
cmpsl
mov
test
dec
cmp
jae
xor
push
xchg
popf
adc
pop
mov
sbb
pushf
sub
mov
cli
pop
je
ljmp
xor
ret
ret
lret
scas
jl
mov
inc
mov
add
xchg
test
fists
add
or
ja
or
jecxz
jno
ljmp
aam
std
clc
pop
outsl
fdivl
mov
mov
sarl
scas
xchg
cli
adc
daa
adc
imul
pop
add
cmp
ficompl
pop
dec
push
cltd
inc
test
into
sarb
sbb
push
push
insb
dec
lcall
mov
inc
xchg
fidivrl
shrl
xor
pop
fcoml
inc
and
xchg
daa
mov
adc
sub
push
lret
mov
lock
sbb
mov
dec
data16
inc
mov
cld
pop
jne
or
jbe
outsb
sub
mov
in
pop
dec
bound
xchg
inc
gs
loop
or
sbb
std
mov
push
push
sub
or
cmpsb
lcall
dec
sahf
mov
out
jg
int
das
rcrb
push
mov
int
add
push
add
daa
not
cmp
ss
data16
fstl
pop
mov
push
je
mov
sbb
pushf
mov
int3
adc
mov
int
mov
and
out
sub
sub
and
mov
adc
adc
mov
loope
sub
add
jmp
push
sti
jg
mov
dec
shl
sbb
into
es
push
jo
std
fcmovnb
arpl
cli
rorl
imul
out
loop
sbb
push
mov
lock
testl
scas
out
push
outsl
sbb
das
add
repnz
pop
sub
sar
cmp
clc
add
push
push
push
inc
stos
adc
inc
shlb
fsts
cmp
lahf
out
icebp
and
or
sbbl
add
test
filds
aad
cltd
data16
jmp
jp
pop
lods
push
mov
les
and
mov
fisttpll
adc
inc
aad
xchg
push
cld
mov
fmull
xor
sbb
in
mov
daa
jb
fdivrl
push
cmpsl
adc
jp
and
mov
rcll
sbb
push
subl
jmp
sahf
inc
int
dec
mov
inc
or
lea
imul
stos
xlat
xchg
xchg
xor
sbb
loopne
cwtl
adc
pop
shlb
mov
mov
xor
pop
leave
aas
aaa
and
sti
add
aad
popa
testl
icebp
inc
and
clc
insl
or
mov
insb
pop
lods
jae
push
push
jmp
jns
leave
or
mov
sub
frstor
sarb
pop
test
lea
movb
push
loopne
lods
pop
sub
jnp
push
adc
ja
xchg
pop
adc
out
ds
daa
int3
lds
push
push
lcall
adc
or
je
add
push
jne
pushl
js
sti
fsubrl
divb
push
es
cmp
ret
into
jge
adcl
mov
out
adc
cltd
and
enter
into
repnz
ja
stos
mov
repnz
loope
sub
test
fwait
lods
push
icebp
call
cmc
aam
mov
inc
add
pusha
add
sbb
add
test
dec
icebp
sbb
and
repnz
push
in
mov
adcl
pop
test
mov
out
sbb
push
jnp
mov
outsl
in
out
cmp
ficompl
cmove
aam
stos
xchg
sub
insl
pop
test
imul
push
std
outsl
mov
and
lahf
sarl
xor
pop
mov
jge
fsubl
fstpt
or
add
cmpl
aad
std
icebp
mov
inc
jp
loope
scas
ret
pop
dec
fwait
shrl
xchg
pop
cli
xor
or
scas
dec
xor
loopne
popf
je
push
icebp
es
das
sbb
inc
es
mov
in
cwtl
jle
push
imul
jmp
push
xchg
in
or
mov
and
xor
shrl
add
mov
mov
pop
fimull
mov
adc
sub
inc
mov
push
int3
inc
jns
subb
outsb
and
mov
loope
cmp
pop
int3
cs
cmp
push
pop
cmp
filds
cmp
aad
xchg
sbb
xor
roll
mov
adc
push
jo
fs
lea
jb
mov
mov
sbbb
jns
jl
imul
mov
lret
push
sbb
ret
push
push
sub
push
outsb
stc
scas
out
adc
or
ljmp
iret
push
fdivl
subb
jns
or
lock
mov
jmp
jnp
add
add
sarl
sti
fdivs
mov
cltd
cwtl
mov
cs
sbbl
jo
test
sbb
pop
mov
mov
jno
int
jnp
lock
fdivl
mov
fsubrl
scas
call
pop
pop
add
mov
enter
jae
inc
inc
cltd
sbb
call
mov
aas
jl
mov
sbb
cmc
push
sbb
mov
mov
ljmp
jnp
adc
push
adc
or
std
les
test
mov
stos
fwait
lret
das
jmp
fcoms
sbbl
mov
cmp
fsubr
xor
popf
push
decb
xchg
and
jno
mov
adc
cmpsb
push
mov
divb
cmpsb
cmc
aam
test
lahf
push
enter
mov
cld
faddp
retw
cmp
and
aad
ds
into
cwtl
out
jg
jae
and
jo
in
cs
setg
fisttpl
dec
mov
sbb
mov
cmpsl
xlat
mov
dec
xor
xchg
dec
jl
inc
lea
loop
orl
scas
mov
inc
cmpsb
cmp
dec
mov
jl
testl
arpl
or
xor
aad
cmpsl
orl
loopne
fsubl
push
or
sbb
addr16
lcall
adc
jge
lods
fdivrl
sub
fdivrl
mov
dec
ret
inc
pop
sub
lock
lock
icebp
arpl
sub
hlt
pop
jg
mov
popf
push
jbe
cltd
pop
mov
negl
das
pop
push
js
push
outsl
mov
mov
and
dec
mov
mov
pop
js
inc
iret
push
or
dec
dec
mov
scas
lock
cmp
sub
and
outsl
inc
add
xor
adc
aaa
call
outsl
test
imul
xor
or
or
xchg
push
dec
pop
test
jl
xchg
scas
outsb
xlat
mull
cwtl
pop
cwtl
hlt
push
push
lahf
stos
or
push
pop
aaa
rorl
push
jne
ficoms
subl
push
ss
adc
mov
rcrl
inc
hlt
imul
cmp
sbb
or
mov
sbbl
das
aas
or
inc
inc
mov
cld
mov
sub
loop
xchg
movsl
ror
xor
mov
pusha
adc
pushf
rcll
ds
and
arpl
pop
outsb
push
sbb
sbb
ret
mov
data16
adc
dec
ret
cmpsb
shlb
popf
cwtl
pop
adc
mov
fucomip
aaa
jp
stc
pop
mov
clc
dec
mov
dec
pop
lahf
add
xor
jmp
xchg
dec
push
sbb
sub
mov
jne
fidivrl
xor
lea
icebp
in
ret
out
test
mov
mov
dec
ds
mov
inc
dec
notb
xor
mov
mulb
adc
sub
daa
das
fcmovne
dec
dec
mov
add
pop
jmp
lahf
cmp
pop
push
xor
dec
cwtl
lret
add
cli
popf
rcll
neg
lds
add
sahf
fcomps
insb
cmc
dec
or
adc
outsl
add
sbb
push
adc
xor
dec
adc
and
call
dec
mov
leave
in
mov
roll
iret
sub
cmp
adc
mov
add
stos
imul
dec
push
cltd
mov
cmp
xchg
cmpsl
call
jge
arpl
adc
sti
mov
aas
push
mov
xor
in
stos
xor
test
sub
sahf
pop
rep
cmc
aam
lock
test
cmpsl
into
bound
jge
faddp
lahf
fwait
dec
xor
adcb
mov
leave
push
dec
daa
pop
jmp
dec
out
xchg
popf
es
mov
or
mov
dec
or
mov
lret
adc
iret
lret
jae
idiv
xlat
xor
mov
mov
push
push
and
push
jb
in
loope
jo
fisubrs
ljmp
mov
jp
inc
jmp
and
ljmp
cmp
jecxz
add
ss
inc
jo
inc
outsl
enter
jae
sub
lods
data16
fisttps
and
cmpsl
ds
pop
neg
xchg
xchg
imul
jae
push
cmp
cmpb
aaa
push
and
and
cmpsl
in
test
jge
inc
mov
jmp
ja
inc
loop
add
insb
nop
rcr
fwait
cwtl
cmp
and
insl
fsubr
pop
std
xor
xor
lret
dec
test
in
add
add
xor
mov
mov
movsb
add
push
cmp
lock
sbb
in
push
mov
xor
ja
xchg
sti
test
mov
or
push
aad
xchg
roll
mov
and
pusha
pop
sub
xchg
and
mov
or
jp
orb
sub
sti
xor
adc
and
inc
scas
push
mov
jle
cmp
pop
cs
push
jnp
pop
subl
cmp
mov
jbe
jno
add
sub
out
fdivs
sub
xchg
inc
cmp
sbb
xchg
xlat
mov
pushf
mov
cmp
inc
pushf
dec
xor
fsts
jno
das
push
jmp
aaa
dec
and
lret
ljmp
jecxz
push
mov
mov
int3
dec
xor
jecxz
mov
xchg
push
push
test
push
call
jns
pop
pushl
sub
aas
jle
test
push
in
mov
add
dec
in
sti
outsl
jns
pop
stos
jnp
add
xchg
pusha
adc
xor
pop
add
scas
nop
fchs
ja
pop
insl
in
jb
test
into
inc
push
fidivrl
sub
and
or
insl
gs
sub
in
adc
lods
push
fadd
xchg
jmp
inc
add
test
mov
or
lea
arpl
aam
inc
and
xor
rolb
mov
xor
out
das
mov
leave
jp
xor
mov
mov
inc
stc
mov
jp
jge
movsl
js
insl
or
adc
xchg
sets
push
inc
ss
cmp
mov
scas
sbb
or
out
xor
js
mov
xor
sahf
xor
std
sbb
cmp
push
out
mov
sbb
rorl
fsubr
mov
jp
in
jp
push
push
mov
jne
inc
notl
mov
mov
jmp
test
push
mov
mov
scas
sub
add
jo
cmp
mov
ja
dec
and
mov
out
insl
mov
div
test
push
jecxz
inc
pop
test
adc
inc
push
adc
rclb
out
mov
fcompl
adc
ss
loopne
mov
ret
popa
std
dec
shl
pop
mov
cmp
xor
test
pushf
cmpsb
push
adc
fwait
or
jno
jle
fldcw
pusha
mov
in
cmp
mov
bound
sbb
cmp
jns
xchg
add
mov
call
into
outsl
or
push
fsts
in
pop
mov
and
mov
xlat
ja
mul
int3
xchg
sbb
jecxz
xlat
mov
cmp
outsl
int3
popa
mov
or
push
mov
fbstp
push
lcall
push
sub
lds
pop
inc
fcmovb
test
push
xchg
mov
mov
les
movsb
les
add
xor
inc
xlat
or
adc
bswap
inc
les
fsubl
lea
cmc
ss
lods
pop
out
test
out
inc
pop
mov
sbb
cld
sbb
xchg
push
lods
mov
cmpsb
hlt
sub
dec
jo
push
negb
cmp
je
cmp
push
rol
int3
repz
or
add
aaa
pusha
scas
inc
cmp
test
dec
into
call
fisubrs
add
jns
subb
xchg
mov
sub
sub
jne
testl
lret
js
fidivrs
push
adc
pop
sub
pusha
jns
into
sbb
fnstsw
sbb
out
in
jle
jne
daa
enter
or
popf
ret
sbb
ja
inc
insb
adc
mov
jno
dec
mov
rcrb
or
sbbb
sub
fwait
mov
cmp
notb
and
cmp
int3
or
push
jp
and
cmpb
push
xor
cmpsb
push
jge
jbe
dec
dec
jae
pop
dec
pop
lock
or
or
loope
xchg
ds
or
lods
or
outsb
cmp
and
shlb
in
sbb
push
adc
fcmovu
incb
cs
scas
fsubs
les
push
outsb
fdivl
int3
cmpsb
daa
dec
mov
cmp
jg
lods
scas
jecxz
leave
add
fldl2e
jp
insl
decb
div
or
mov
push
push
scas
in
mov
fidivl
add
jno
fidivl
mul
xor
cld
inc
cld
call
stos
lea
scas
js
sbb
mov
dec
mov
das
stos
jne
ljmp
cmp
cld
pop
push
xor
adc
sahf
bound
push
jle
std
mov
aas
or
xchg
sbb
xorb
sub
repnz
ss
fsubrs
sbb
out
inc
cmp
push
popf
sbb
mov
add
xchg
aaa
sub
xchg
movsb
int
xor
stc
xchg
pushf
mov
pop
fistpll
in
incb
ss
iretw
jne
mov
xorb
or
sub
dec
pop
jg
cmp
addr16
push
call
out
pop
push
dec
sub
sarb
aad
xor
sbb
push
cmp
push
mov
iret
or
fxch
or
fs
insl
and
lahf
add
loop
gs
sarl
jne
sub
mov
xor
pusha
in
push
int3
xchg
or
push
shrl
inc
mov
cli
into
xorl
dec
in
xlat
mov
outsl
stc
pop
push
aam
cmp
inc
pextrw
ja
sub
adc
ja
cmp
leave
fs
mov
push
xor
mov
das
or
sbb
or
pusha
insl
sarl
cld
ret
mov
or
adc
test
out
addb
xchg
call
arpl
in
push
hlt
cs
mov
loop
xor
dec
sbb
mov
iret
shrb
adc
inc
iret
pop
ror
jge
xchg
mov
add
inc
repz
inc
fsts
cmp
test
out
jle
xchg
lock
cmpsb
pop
jp
test
aam
pop
cmc
fildll
ret
lods
push
enter
add
fisttpll
dec
lock
mov
enter
lahf
clc
add
mov
mov
fstps
out
jg
adc
sbb
daa
adc
enter
add
push
arpl
mov
jmp
sbb
jmp
cmp
loop
push
lock
adc
xchg
dec
jnp
cli
and
arpl
cmc
sub
scas
lock
jbe
add
movsb
stc
cld
mov
mov
sbb
cmp
in
movsb
lret
fadd
mov
xchg
out
shl
fidivl
in
aad
int3
sub
test
cmovl
test
cltd
push
jg
pop
scas
or
jb
stc
outsl
sbb
lcall
mov
cs
xchg
adc
jno
in
or
or
in
popa
or
cli
insl
in
ss
or
mov
ret
dec
mov
dec
fpatan
pop
xchg
xlat
dec
push
inc
mov
stos
adc
mov
mov
subl
and
jecxz
adc
out
push
cmp
jno
inc
push
inc
in
jmp
push
xor
dec
fcmovnbe
test
add
or
jecxz
into
enter
lcall
arpl
ljmp
iret
ljmp
pop
int
push
int3
cli
lock
sbb
rcll
jnp
or
xchg
pop
imul
xchg
shr
or
pushf
dec
mov
xchg
ret
orl
xor
cmc
mov
inc
and
movsb
movsl
jge
scas
lods
mov
and
test
arpl
arpl
jnp
loope
xlat
and
jnp
pop
sub
out
stc
jle
mov
xor
and
ljmp
push
jecxz
nop
lock
jle
and
xchg
push
sbb
pop
loope
xor
ljmp
fldenv
pushf
jle
dec
cmp
sbb
insb
mov
cmp
sub
mov
out
iret
call
push
mov
cmc
mov
mov
sub
popa
pop
iret
int
je
loopne
jmp
mov
aam
jb
es
adc
and
and
dec
mov
out
sbb
mov
cmp
jnp
mov
inc
bound
cld
enter
xchg
pop
mov
mov
ljmp
sti
mov
or
xor
aad
jo
xchg
out
std
mov
xacquire
and
mov
lret
adc
jbe
jg
int
mov
das
sub
clc
jne
dec
xchg
mov
mov
pop
lret
scas
and
in
sub
rcr
sbb
pushf
add
jnp
into
sbb
cmpsl
pushf
out
sbb
xchg
mov
jne
xor
mov
ret
sbb
mov
sbb
xor
jo
jnp
mov
mov
imul
push
mov
cld
inc
push
mov
jnp
std
sbb
pop
adc
ja
cli
pop
jmp
jbe
mov
lret
js
xchg
cmp
sarl
mov
add
lods
pop
push
bswap
fs
out
ret
cmpsl
mov
cmpsl
cmpl
test
dec
pusha
push
push
xlat
jp
mov
imulb
adcb
popa
jmp
orb
rcll
mov
mov
xchg
out
idivl
or
outsb
xchg
lods
test
inc
inc
inc
sbb
add
fcom
insb
je
adc
movsl
test
ds
jnp
fdivs
aad
mov
adc
gs
mov
cld
sahf
cmp
xchg
popf
sbb
add
and
mov
lock
mov
clc
inc
cmc
push
cli
in
inc
mov
jecxz
outsb
push
cmp
out
or
cmpsl
cmp
push
stc
out
lock
mov
mov
imul
sti
loope
pop
std
sarl
xchg
outsl
sub
lods
adc
in
mov
pop
push
incw
or
sub
jns
inc
or
push
shrl
cmc
movsb
xchg
ja
mov
sti
outsl
jle
fmull
orl
and
loope
shll
or
cmpsb
fildll
cmp
lods
cmp
dec
in
rclb
fcoml
mov
mov
jl
cmp
jb
adc
pop
and
and
inc
or
negl
mov
sbb
push
lcall
adc
shl
in
sbb
jmp
jae
clc
xchg
ret
or
jg
push
dec
adc
and
dec
mov
lret
xorb
daa
lods
ret
dec
jbe
das
push
div
scas
shlb
lcall
pop
push
fisubrs
inc
pusha
sbb
jge
js
ror
std
enter
pop
cmp
repz
xchg
sub
imul
scas
rorb
sbb
add
push
icebp
adc
pop
iret
mov
in
inc
xlat
dec
mov
mov
fbld
add
add
lea
mov
adc
sub
gs
push
lcall
lcall
or
stos
les
adc
mov
sbb
jne
aad
aas
in
pop
inc
pop
aam
push
sub
pusha
cltd
adc
lods
jmp
popa
aad
loope
jae
js
popf
stos
or
sub
movsl
inc
std
dec
push
lds
dec
ljmp
in
adc
into
jle
outsl
gs
add
pop
ret
fcoml
jge
negl
xchg
fs
add
and
push
scas
lcall
xor
xor
adcb
add
daa
add
cmpl
push
iret
mov
imul
les
push
inc
lock
outsb
mov
cwtl
add
roll
shrl
orl
popa
fst
cs
ret
mov
mov
cld
call
xor
mov
mov
cmpsl
pop
xor
dec
into
scas
push
testb
pop
cmp
push
sbb
cltd
imul
scas
rcrl
xor
into
in
inc
leave
shr
adc
insb
mov
int
rolb
rcrb
adc
or
or
or
inc
hlt
lea
xchg
outsb
out
or
stos
ret
cmc
pop
cs
xchg
cmc
push
stos
push
xorb
dec
fcmovnbe
test
nop
nop
or
xchg
mov
fildll
in
out
cwtl
sbb
loopne
inc
jbe
pop
mov
mov
in
popa
insb
mov
sbb
insl
mov
sbb
faddl
jg
xor
cmpl
cmp
cmp
lea
push
repnz
xchg
inc
js
ret
imul
or
fldcw
or
and
push
lods
ret
add
mov
inc
add
daa
jae
in
jae
test
dec
data16
mov
or
xchg
daa
push
mov
ljmp
push
and
icebp
dec
xchg
push
mov
push
xor
imul
sarl
push
loopne
mov
in
repnz
loope
mov
pop
loopne
cwtl
mov
xorb
in
leave
arpl
clc
out
mov
adc
mov
enter
dec
outsb
and
xchg
out
andb
jg
inc
mov
in
imul
rolb
popa
sarb
aaa
das
xor
mov
or
gs
mov
cmp
adc
fs
or
scas
rorb
test
xchg
add
mov
pop
sub
outsl
in
push
xchg
jp
test
mov
jg
aad
add
push
stc
imul
sbb
ret
cltd
mov
inc
mov
orl
cmpsb
mov
es
sbb
xchg
xor
std
cmp
adcb
rol
and
cwtl
lcall
mov
lret
lahf
cmp
inc
outsl
xchg
sub
cmc
push
cli
into
lret
jns
xchg
movsb
pop
mov
dec
sub
push
jmp
sbb
in
lret
or
push
call
mov
lock
test
jl
shll
push
pop
mov
stc
push
in
ja
ljmp
and
mov
or
rorl
into
int
pop
out
xchg
orb
jg
pop
dec
into
mov
in
ss
ret
nop
push
xor
out
jl
jns
adc
hlt
and
sbb
jae
xlat
sub
sbb
adc
push
dec
push
rolb
mov
pop
xchg
mov
push
out
dec
or
dec
add
insb
or
rolb
test
pop
subb
mov
sub
fwait
mov
sbb
adc
dec
jns
fisubrl
sbb
mov
sbbb
and
adc
ret
sub
and
xor
imul
cmp
inc
inc
lret
adc
fistpll
or
mov
add
aad
jle
dec
push
dec
pushf
cmp
pop
push
outsb
das
fs
nop
xchg
jnp
mov
roll
loopne
mov
gs
shr
das
pop
movsb
lods
movsl
jnp
jns
mov
clc
mov
lods
inc
lret
sbb
xlat
or
xor
xor
int
out
sub
iret
lds
ljmp
mov
adc
cwtl
lea
cmp
out
xchg
lock
or
sbb
mov
arpl
dec
dec
jne
rolb
lahf
scas
js
inc
mov
imull
cmp
pop
cld
aas
jge,pn
sarl
aaa
pop
ret
stos
add
andl
cmpsb
add
cmpsl
in
movsl
in
notb
es
inc
loop
fadds
pop
sahf
lock
int
popa
pop
into
sbb
cwtl
and
push
add
sub
jge
inc
shr
fchs
int
and
xchg
bound
xor
leave
es
add
jle
cwtl
shlb
push
nop
cltd
add
in
das
ljmp
mov
movsb
out
push
add
mov
and
fwait
insl
roll
jp
dec
push
mov
test
pop
sarl
movsl
mov
jo
or
pop
mov
adc
xchg
outsb
xchg
pushl
mov
shl
dec
dec
adc
inc
outsb
js
out
leave
int
xchg
pop
push
insl
xor
mov
outsl
and
sub
mov
xchg
nop
and
das
mov
ret
cmp
call
mov
movsb
in
sub
out
in
or
sbb
stos
insb
add
add
pop
lea
insl
pop
subl
adc
stc
pushf
pop
ds
mov
shrb
bound
aad
jnp
dec
pop
or
repz
cmp
jle
adc
stos
mov
adcb
das
xchg
fldcw
or
shrb
push
stc
or
add
pusha
cmp
ret
je
jmp
leave
fucom
mov
cwtl
dec
stc
inc
xchg
push
aas
nop
aam
lods
and
roll
push
in
dec
xlat
mov
mov
leave
data16
in
cmc
jbe
cmp
cmc
sub
mov
jb
stos
bnd
mov
scas
out
stos
bound
ret
clc
cs
xchg
mov
loopne
clc
std
pop
and
bound
ljmp
imul
jecxz
shll
addr16
mov
js
mov
fidivrs
into
mov
pop
subb
icebp
mov
enter
aaa
and
lcall
inc
shl
fnstcw
mov
adc
push
jl
jb
mov
cmpl
aaa
mov
push
nop
or
cmp
test
add
scas
dec
lret
insb
roll
and
add
out
nop
inc
adc
add
mov
pop
dec
push
inc
test
inc
cmpsb
movsb
frstor
sahf
mov
or
loopne
add
popa
inc
mov
mov
xor
ljmp
sar
mov
dec
mov
mov
dec
in
cmp
inc
shl
push
shlb
pop
jnp
xchg
loop
cmpsb
divl
mov
ljmp
lods
pop
adc
sbbl
cmpsb
int3
std
cmp
loop
outsl
and
pop
jo
mov
sub
jecxz
pushl
and
fisubrl
pop
les
sbb
push
sbb
and
mov
fdivl
fsub
insl
sub
cmp
das
mov
dec
cmpsb
inc
mov
enter
push
sbb
hlt
jp
sbb
mov
mov
inc
stc
add
pop
sbb
les
push
lods
pushf
adc
xchg
cli
nop
rcll
jmp
xchg
cwtl
stos
push
add
stos
jbe
int
cmp
fildll
in
jecxz,pt
ljmp
or
addr16
jae
cmp
xor
addr16
pop
adc
lahf
adc
add
movsl
xchg
out
nop
lds
jle
lret
lea
xchg
mov
jbe
leave
cli
pusha
in
cmp
cmc
or
dec
lods
insl
es
clc
mov
sbb
sbbb
jnp
add
and
sub
out
fs
mov
lret
pop
and
jmp
push
fsub
sbb
loop
xor
lret
add
pop
cmpb
out
jbe
and
or
frstor
mov
jno
je
jmp
pop
loop
scas
rcrl
mov
icebp
insl
add
pushf
adc
sbb
pop
mov
mov
dec
mov
mov
ljmp
stos
push
cwtl
out
push
mov
sbb
in
in
mov
into
sbb
or
mov
sbb
sbb
fs
fs
cmp
mov
push
mov
adc
push
push
mov
stos
gs
and
mov
fstp
adc
je
sub
out
xchg
into
lods
nop
addr16
mov
push
lret
sub
daa
mov
lea
repnz
xchg
adc
jbe
cmp
push
ss
jo
imul
or
jno
push
sbb
outsl
test
mov
push
or
mov
stc
frstor
xor
fsub
mov
xchg
rcll
out
sti
fmuls
shrl
dec
out
add
mov
jae
jle
mov
scas
fcomps
inc
mov
rclb
scas
sti
xchg
pop
xor
xchg
out
mov
insb
sbb
int
jo
sbb
lahf
iret
aam
out
xor
inc
mov
mov
xor
xchg
xchg
scas
pop
adc
pop
gs
ret
subb
cmpsl
icebp
cmp
mov
or
arpl
sahf
popa
xor
xchg
fimull
add
push
mov
stos
loope
mov
sub
mov
mov
fstpt
faddl
push
bound
addr16
imul
fwait
or
dec
mov
inc
aas
lods
jbe
ret
and
icebp
popf
jae
pop
jnp,pt
cmc
pop
sub
sub
push
push
push
dec
sub
cld
mov
js
sub
not
cli
inc
mov
pushl
lea
jnp
out
in
cmp
xchg
push
pop
xchg
and
pop
dec
mov
lahf
ret
xlat
test
loope
mov
push
stc
mov
outsl
lock
rcrb
roll
test
lahf
pop
jle
and
rolb
imul
cld
jl,pn
xchg
fnstsw
pop
sub
and
aas
std
and
in
sub
in
push
sti
fdivrs
fstl
jle
xchg
fwait
cmpsb
std
sti
adc
ret
pop
mov
mov
lods
aaa
jp
pop
nop
loop
stos
sub
push
dec
sbb
es
adc
cmp
cmp
ficoms
sbb
cwtl
gs
je
add
xchg
mov
or
jbe
mov
push
lods
mov
loope
sbb
adc
mov
pop
add
sub
loope
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
hlt
in
out
out
mov
test
jle
test
pushf
lea
cltd
add
cli
decl
add
xorb
xchg
mov
aaa
call
shrl
lods
mov
push
jle
sbb
pop
jns
jecxz
aaa
es
jmp
xchg
add
lods
mov
popf
add
sar
sbb
loope
push
push
jp
fsubs
xchg
aam
ljmp
and
sub
pop
push
in
shr
dec
and
call
fbstp
or
shrb
push
out
mov
call
popa
xor
lods
ret
fdivl
test
jp
ja
lret
jnp
xchg
cmp
popa
lahf
sub
hlt
dec
sub
pop
inc
xor
lock
jle
out
pop
inc
lret
cmc
shr
in
pop
fisubl
dec
adc
fcmovnbe
rcrb
lock
push
std
cld
dec
icebp
mov
ja
mov
rcrl
cmpsb
mov
stos
push
cli
cmpsb
cli
repnz
pop
sbb
sub
out
pop
dec
sub
sbb
jp
std
inc
jo
in
dec
test
imul
inc
pcmpeqd
mov
jl
iret
mov
test
loop
pop
fadd
test
test
mov
inc
leave
cmp
push
push
in
pop
mov
cld
cmp
loop
sbb
push
mov
push
cltd
and
mov
push
sub
mov
push
sbb
sbb
gs
adc
jne
out
les
xor
ljmp
inc
cld
lds
pushf
xor
mov
bound
out
jb
xchg
leave
adc
fwait
sub
xchg
push
repz
xchg
test
in
push
cs
fistps
jg
pop
cmp
cli
mov
shrl
insl
pop
adc
sahf
pop
fistps
sbb
jbe
add
add
add
add
inc
xchg
pop
add
mov
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
add
xlat
lahf
