rorb
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
shr
cmp
jne
cmp
jae
mov
mov
push
push
call
mov
call
pop
ret
xor
mov
push
push
call
mov
call
pop
ret
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
mov
mov
shr
cmp
jne
cmp
jae
inc
and
and
shl
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
xor
mov
mov
mov
call
js
inc
jl
xchg
push
rcr
and
mov
mov
mov
mov
pop
ret
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
inc
jmp
add
add
insb
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
mov
test
je
mov
push
mov
mov
mov
mov
mov
in
icebp
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
mov
mov
mov
mov
mov
mov
shl
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
add
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
movl
lea
movb
mov
call
push
mov
movb
movl
call
mov
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
jne
mov
mov
push
push
push
push
call
mov
test
je
lea
lea
add
add
add
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
add
push
push
mov
add
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
pop
ret
nop
nop
mov
mov
ret
nop
nop
nop
lea
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
mov
mov
sub
push
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
mov
call
mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
in
add
jmp
xchg
movsb
add
add
add
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
cmp
inc
add
ret
add
push
loope
add
mov
add
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
stos
loope
add
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
addr16
inc
add
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
int3
add
je
mov
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
jmp
inc
add
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
mov
inc
add
add
inc
jp
add
call
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
popf
cli
inc
add
add
cmpl
faddl
pop
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
xchg
clc
inc
add
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
mov
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
push
fiaddl
inc
jo
inc
add
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
leave
aam
add
push
ja
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
pop
sti
inc
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
xchg
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
push
lea
push
mov
push
lea
push
push
push
lea
push
push
mov
call
test
je
pop
pop
pop
xor
pop
ret
cmp
jbe
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
pop
pop
pop
xor
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
pop
pop
sbb
pop
inc
pop
ret
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
push
call
mov
inc
lea
push
call
mov
add
test
jne
mov
pop
pop
pop
add
ret
push
push
push
call
mov
mov
add
lea
mov
mov
push
mov
push
push
lea
push
mov
mov
push
push
push
push
push
mov
mov
call
test
je
mov
push
call
mov
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
push
mov
cmp
jbe
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
test
mov
je
lea
push
push
push
call
add
jmp
movw
test
je
mov
push
mov
mov
push
lea
shr
rep
mov
and
rep
pop
pop
mov
lea
push
mov
lea
add
push
push
mov
lea
push
push
push
push
push
push
call
test
je
xor
pop
add
ret
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
lea
push
lea
push
push
push
call
add
test
je
xor
add
ret
push
mov
test
je
mov
lea
push
push
push
call
add
test
je
mov
xor
test
mov
setne
mov
pop
add
ret
movl
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
xor
push
push
mov
mov
call
mov
add
cmp
jne
pop
xor
pop
add
ret
mov
cmp
je
cmp
je
push
lea
push
push
call
add
jmp
lea
push
push
push
push
call
add
test
jne
mov
lea
push
mov
push
mov
test
je
cmpw
je
mov
xor
test
jne
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
lea
lea
push
push
call
add
test
jne
mov
mov
neg
sbb
lea
and
add
push
mov
push
push
push
call
add
test
je
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
je
mov
inc
test
je
jmp
mov
test
jne
mov
test
je
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
jmp
push
lea
push
push
call
lea
push
lea
push
push
push
call
add
test
jne
neg
sbb
mov
and
lea
add
push
mov
push
push
push
call
add
test
je
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
mov
test
jne
lea
push
lea
push
push
push
call
add
test
jne
mov
lea
push
push
push
push
call
add
test
je
cmpw
jne
mov
lea
push
push
push
call
add
mov
mov
lea
push
push
push
push
call
add
test
je
movl
mov
push
call
push
call
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
push
call
mov
add
add
add
add
add
pop
add
call
repnz
gs
add
sti
mov
loopne
add
push
jae
iret
int3
add
add
lcall
mov
add
push
push
push
lea
push
lea
push
push
push
push
push
call
aam
mov
add
pop
jge
mov
push
jmp
jmp
in
add
add
stos
cld
add
lcall
inc
in
push
lea
push
push
push
push
push
push
call
add
mov
add
add
les
lea
faddl
add
popf
add
mov
xchg
bound
mov
in
mov
add
lods
jp
add
add
rclb
add
add
xorl
ja
pop
arpl
mov
loope
in
in
push
push
push
push
push
push
push
push
push
call
in
xchg
faddl
stos
mov
subl
add
add
xchg
add
xchg
jae
add
mov
arpl
pop
add
into
aam
fld
pop
add
jbe
in
in
push
push
push
lea
push
lea
push
push
lea
push
call
jae
add
add
add
ja
add
data16
mov
fiaddl
xchg
add
pop
jl
push
add
add
addl
sub
add
out
add
push
push
call
mov
cwtl
add
add
mov
add
mov
add
mov
xchg
out
test
pop
mov
mov
jle
int
add
sub
pop
push
push
push
push
push
push
push
push
push
push
push
call
push
addr16
lods
mov
mov
stos
int3
mov
mov
faddl
rcrb
add
mov
jbe
add
je
popf
pop
jecxz
jno
nop
add
call
jmp
push
push
push
call
cmpsb
fs
jbe
add
add
add
add
add
mov
xchg
lret
add
xchg
clc
add
aam
add
add
jbe
in
hlt
lcall
push
lea
push
push
push
push
push
push
push
push
push
call
imul
outsl
nop
add
pop
add
in
mov
lods
add
push
mov
mov
add
in
out
push
push
jecxz
add
ja
fiaddl
jp
add
jae
clc
push
clc
outsl
mov
stc
shll
add
mov
fdivr
lcall
inc
hlt
push
lea
push
push
lea
push
push
push
push
lea
push
call
imul
lret
add
int
add
pop
jno
push
divb
test
outsl
out
add
push
mov
add
jb
add
add
add
add
add
jns
repnz
add
add
sub
pop
mov
push
push
push
call
xorl
add
jo
insb
add
mov
testb
aad
loop
in
xchg
add
add
cmpb
add
add
add
push
pop
out
data16
jno
addb
sub
pop
add
add
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
add
nop
lret
add
add
add
mov
add
xchg
jge
add
add
xchg
add
rolb
jb
imul
rcr
jns
cld
add
add
test
lods
add
js
add
add
add
lcall
ret
jecxz
add
mov
push
push
push
push
lea
push
push
push
push
call
lea
cmpl
lock
jl
rclb
add
out
popa
add
movb
add
jp
add
add
pusha
jnp
push
add
jle
lea
fidivs
fadds
add
add
jo
sub
pop
xor
push
push
push
lea
push
call
mov
jl
mov
mov
ljmp
add
xchg
add
xchg
pushf
push
aad
jne
add
ljmp
cmc
mov
ftst
xchg
jmp
rcll
incb
mov
add
sub
pop
add
push
push
xor
push
and
add
xor
add
not
sub
lea
pop
sub
pop
push
lea
push
lea
push
push
push
push
push
lea
push
call
cmpsl
cld
jno
pop
add
mov
add
add
add
popa
enter
add
add
out
add
nop
add
cmc
out
mov
jnp
mov
test
lods
loop
in
loopne
lcall
jne
push
push
push
push
call
nop
les
jge
filds
repnz
jp
cwtl
xchg
testb
add
add
cmc
mov
cmpsb
movsl
add
stos
pop
iret
mov
insb
mov
add
aad
add
mov
lock
call
mov
push
lea
push
push
push
push
call
xchg
fbld
fadd
in
mov
add
andb
add
add
mov
add
add
test
xchg
add
lods
adc
push
add
add
idivb
mov
mov
add
add
add
add
flds
arpl
in
in
lcall
inc
call
push
push
push
lea
push
push
push
lea
push
call
ret
mov
mov
insb
jecxz
fidivl
add
add
std
mov
stos
xchg
std
add
add
add
add
adcl
add
jne
lret
mov
ja
add
pop
lea
push
push
push
push
push
lea
push
push
push
call
add
add
jmp
aam
imul
add
mov
ljmp
add
ljmp
push
push
push
push
lea
push
push
push
push
call
enter
repnz
push
into
arpl
loope
fcoml
cld
je
push
add
shl
add
iret
out
leave
ljmp
arpl
add
mov
hlt
mov
imul
in
add
add
mov
popf
add
in
sub
pop
pushl
pushl
push
push
push
lea
push
call
jle
fcom
mov
clc
push
xchg
add
lahf
add
add
loopne
mov
popa
pushf
add
add
pop
flds
mov
scas
in
add
in
lock
lcall
mov
push
push
push
push
call
add
mov
xchg
jns
xchg
arpl
push
jnp
ja
leave
push
addl
add
mov
incb
mov
mov
add
je
loop
mov
add
push
pushf
je
add
lods
jae
lret
mov
fldcw
jge
cbtw
mov
add
jne
push
lea
push
push
push
call
add
add
nop
add
out
add
add
add
ljmp
fnstenv
movb
pop
pushl
push
lea
push
push
push
push
push
push
push
call
mov
cmc
jecxz
enter
les
fildll
cmpsb
jae
stos
mov
add
add
add
add
add
add
pop
push
add
jo
fs
cld
jecxz
add
push
add
jo
mov
sti
add
enter
pushf
push
and
add
cli
push
sub
pop
call
push
push
add
sub
push
or
inc
add
not
lea
sub
rol
pop
xor
not
pop
push
push
push
push
push
call
rolb
mov
gs
mov
jp
data16
add
movsl
add
test
popa
mov
add
test
add
pop
mov
pop
ljmp
loope
stc
push
add
test
lcall
jne
call
push
lea
push
push
push
push
push
call
imul
add
mov
iret
mov
add
addr16
fnstsw
mov
add
test
into
jge
lds
inc
push
push
dec
not
push
xor
add
ror
inc
sub
sub
pop
shr
rol
dec
add
pop
push
push
push
push
push
push
lea
push
lea
push
push
call
push
roll
fwait
add
sti
add
insb
add
lahf
int3
add
add
testl
add
clc
add
pusha
mov
mov
test
pop
icebp
mov
add
fnstenv
bound
add
out
add
add
add
add
int
add
sub
pop
push
push
push
lea
push
push
call
xorl
xchg
out
add
add
add
jecxz
add
jns
push
xchg
jno
add
clc
jmp
les
in
add
add
push
add
shll
mov
add
addl
add
sub
pop
push
push
push
lea
push
lea
push
call
stos
add
add
push
rcl
bound
push
je
xchg
xorl
movsl
outsl
xchg
nop
jo
add
add
bound
in
add
fldl
add
test
add
mov
call
in
lock
call
mov
push
push
push
push
push
push
push
call
jmp
mov
add
mov
lods
jo
jae
into
fistps
mov
gs
add
xchg
fbstp
add
lahf
xchg
add
xchg
lea
lock
loopne
fidivrs
je
mov
xchg
in
fucomip
test
ja
out
into
fwait
add
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
call
std
movsb
add
add
lods
mul
push
add
add
add
xchg
clc
mov
add
add
pop
add
add
lret
jmp
mov
loop
add
add
mov
cmc
addl
add
add
loopne
lcall
push
lea
push
push
push
lea
push
push
push
push
call
xchg
add
cmc
imul
add
aad
mov
add
add
add
mov
mov
add
mov
pop
add
xchg
pop
imul
add
add
mov
out
mov
mov
add
cmpsl
xchg
sub
pop
mov
push
push
lea
push
call
add
push
stos
mov
cmpsl
add
jne
push
add
jnp
int
lret
push
fs
add
add
aad
fwait
add
push
imul
addr16
mov
hlt
add
add
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
aad
xlat
xchg
add
sarl
push
fsts
add
add
add
sarl
add
push
add
mov
mov
ja
jle
in
in
push
aad
sub
pop
add
push
push
call
stos
jno
not
loope
mov
enter
add
add
into
add
les
jl
cmc
add
loope
add
jl
jle
jle
out
fwait
lret
mov
loopne
out
add
fwait
add
pop
outsl
add
add
xchg
mov
lcall
ret
jecxz
add
mov
xor
push
push
push
push
push
call
xchg
nop
arpl
push
add
out
xchg
out
in
ficompl
push
imul
mov
fidivl
pop
add
addb
std
ljmp
add
add
nop
add
in
lods
add
mov
lcall
jne
push
push
push
push
call
fsubr
outsl
jp
add
xchg
add
add
into
add
add
lcall
nop
pop
std
mov
add
ret
add
add
xchg
add
add
xchg
mov
js
imul
cmpsl
leave
add
mov
clc
sub
pop
mov
xor
push
push
push
lea
push
push
push
push
push
push
call
xlat
loopne
xchg
pop
add
movsb
mov
mov
jns
add
cmpsl
fucomi
push
mov
pop
les
jecxz
xchg
xchg
mov
fdivr
lcall
lock
push
push
push
push
push
push
push
push
call
fwait
add
addr16
pop
add
shrl
popl
add
add
call
shll
fcompl
mov
push
push
push
call
mov
loope
loop
loop
lret
add
fs
ljmp
add
add
faddl
call
push
mov
lahf
aam
pop
test
add
xchg
nop
add
popl
movsb
push
incb
add
insb
cmpsb
mov
xor
push
push
push
push
push
call
les
add
jno
stos
in
mov
jl
add
jno
xchg
sti
fists
mov
in
rorb
add
fidivl
add
hlt
lret
xchg
add
pop
push
lret
add
jnp
add
add
pop
mov
lcall
les
add
push
push
call
out
mov
lret
jne
add
popf
fsubr
add
xchg
add
loope
jb
lds
add
add
add
add
icebp
add
push
push
lret
add
popa
add
addb
jmp
add
faddl
add
mov
xor
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
cltd
popf
jne
cwtl
sahf
lret
add
xchg
xchg
in
insb
cmc
out
push
add
xchg
add
add
mov
fists
test
mov
stos
xchg
xchg
fldl
test
fnstcw
add
add
add
mov
sub
pop
sub
pop
push
push
push
push
call
xchg
in
add
imul
ret
popf
in
add
shr
xchg
add
in
jno
add
std
add
jnp
add
add
imul
add
lcall
movsb
push
lea
push
lea
push
push
push
push
push
push
call
imul
add
mov
add
cmc
add
xchg
mov
add
lret
sti
lods
add
cmpb
add
add
popa
add
add
add
in
add
addl
add
add
push
mov
add
lcall
push
push
call
mov
icebp
rol
add
jecxz
push
jge
fs
pop
add
add
bound
add
icebp
mov
iret
add
add
jmp
add
mov
add
add
testl
add
sub
pop
mov
add
push
lea
push
lea
push
push
push
push
call
add
mov
xchg
cwtl
mov
add
nop
in
mov
add
stos
add
add
mov
mov
jne
add
add
mov
stos
mov
clc
add
movsl
sub
pop
add
push
push
push
push
push
push
push
push
call
add
add
pop
add
rorl
add
mov
mov
enter
add
mov
add
push
jge
aad
add
jno
add
add
fisubs
pop
jge
add
sub
pop
add
push
lea
push
push
push
push
call
loop
xchg
fidivrs
je
scas
add
jmp
roll
push
in
cmpsb
add
add
mov
add
icebp
jmp
in
add
mov
lret
mov
xchg
mov
divb
add
repnz
add
cmpsb
add
roll
add
add
add
sub
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
mov
jns
bound
arpl
add
add
mov
add
mov
out
pop
add
add
add
notl
aad
add
add
add
jl
fs
add
add
popf
out
push
idiv
mov
les
sub
pop
mov
xor
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
call
int3
test
mov
add
lcall
add
mov
fnstsw
jns
pop
add
push
mov
outsl
xchg
into
ljmp
add
add
sub
pop
mov
push
push
push
push
push
push
push
push
push
call
insb
push
cmc
add
add
pushf
xchg
add
xchg
test
push
add
int3
mov
subb
popa
jecxz
add
add
in
loopne
lcall
or
push
push
push
push
push
call
mov
shll
add
mov
add
add
pop
imul
insb
add
hlt
add
add
cltd
in
add
add
xchg
stc
jl
add
push
cli
aad
rolb
les
mov
push
cmc
jge
cli
fcompl
pop
add
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
test
mov
push
addl
xchg
add
cmpsl
add
add
add
jge
jmp
xchg
add
pop
cwtl
loopne
les
push
lret
lods
xchg
icebp
sub
pop
add
push
push
push
push
lea
push
call
add
je
jecxz
icebp
hlt
add
add
add
add
mov
add
bound
add
jo
testl
xchg
loope
test
cld
imul
xchg
jl
sub
pop
add
push
push
push
push
push
push
push
push
lea
push
call
add
fildl
pop
mov
lods
rolb
fincstp
mov
mov
add
pop
add
mov
popl
aam
add
pop
pop
xchg
sub
pop
mov
push
push
ror
ror
push
or
not
add
ror
not
sub
add
lea
pop
ror
pop
push
xor
inc
pop
pushl
call
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
rcll
test
lea
cli
fnstenv
icebp
add
scas
add
add
add
push
lcall
mov
subb
mov
mov
test
xchg
add
shrb
mov
add
lcall
add
cmp
pop
add
sub
add
rol
sub
add
lea
sub
pop
rol
shl
sub
pop
push
add
sub
shl
pop
push
push
xor
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
add
push
add
adcb
mov
addb
add
cld
mov
sub
pop
call
push
pop
mov
push
lea
push
push
lea
push
call
add
add
jne
add
add
pushf
add
add
push
add
add
add
mov
add
fsubrl
add
movsb
add
jecxz
filds
add
aad
mov
add
mov
jo
add
in
lock
push
push
add
shr
shl
pop
push
push
shr
pop
mov
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
add
cld
xchg
out
push
ja
add
add
les
xorl
roll
jno
mov
popf
fdivrl
cltd
lods
add
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
push
or
add
out
pop
add
jae
xchg
lret
nop
mov
add
testl
add
add
std
jae
enter
mov
add
add
insb
add
pop
pushf
mov
mov
mov
loopne
push
lret
sub
pop
add
push
sub
lea
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
iret
add
scas
push
add
pop
add
stos
outsl
xchg
test
loopne
out
test
mov
cwtl
add
cli
je
mov
jp
add
addl
movl
add
add
hlt
push
testb
add
movsb
pop
mov
mov
pushf
popa
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
push
call
icebp
testl
add
mov
xorb
lcall
add
movsl
add
add
add
add
lret
aam
add
add
mov
popa
add
add
add
jo
xchg
jle
popf
cmc
test
mov
fldl
test
lcall
les
add
push
not
pop
add
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
jb
les
cmpsl
je
mov
jmp
arpl
add
push
push
add
les
add
add
add
add
add
lret
add
mov
mov
jnp
jbe
mov
add
lahf
add
icebp
xchg
mov
push
push
push
push
push
lea
push
push
push
call
adcl
popf
add
popf
add
jmp
insb
add
in
lret
add
add
leave
enter
cli
pop
cmpsl
xlat
add
xchg
push
add
clc
add
add
mov
mov
lahf
pop
jae
add
mov
add
lcall
add
push
push
call
jb
mov
add
push
add
mov
mov
nop
in
add
lods
stos
add
add
rolb
jno
aam
add
add
jp
hlt
add
xlat
xchg
repnz
pop
arpl
add
add
clc
pop
add
push
sub
pop
add
push
xor
pop
pop
mov
xor
push
not
add
not
pop
rep
push
lea
push
push
push
push
push
push
call
jno
lods
add
jo
add
scas
xchg
add
push
add
add
push
add
push
lea
mov
jmp
push
pop
cmp
push
les
in
lcall
dec
and
xor
adc
add
xor
mov
xor
jae
shr
push
push
push
call
add
int
iret
pop
add
add
pop
add
jne
mov
loope
out
divl
add
pusha
add
add
sub
pop
xor
push
push
push
push
push
push
call
stc
stos
add
jmp
add
add
pop
mov
mov
cwtl
mov
jo
popa
xchg
insb
jnp
fisubrl
nop
push
add
in
call
add
push
sub
pop
or
je
push
push
lea
push
push
push
call
add
loopne
add
in
add
call
in
lods
add
add
jbe
pop
add
add
add
jge
outsl
xchg
mov
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
push
call
push
out
lret
in
icebp
jns
cld
lds
pop
jno
mov
mov
jle
aad
out
stos
repnz
add
push
mov
add
shlb
add
xchg
add
cmpsb
add
cltd
mov
in
add
out
add
in
fcomps
xor
push
lea
push
push
push
push
push
push
push
call
pop
add
dec
add
flds
push
add
sti
add
push
lea
addr16
cld
add
add
add
js
jnp
add
add
in
loopne
add
push
lea
push
push
lea
push
push
push
push
call
add
in
mov
mov
add
in
mov
add
add
cmc
or
fst
add
ficoms
add
xlat
add
add
mov
add
lcall
push
sbb
jno
adc
cmc
push
push
lea
push
push
call
lahf
xchg
aad
int3
shrl
add
int3
add
add
leave
add
aam
add
add
or
cmpl
in
fiaddl
insb
arpl
xchg
mov
sub
pop
xor
push
push
push
push
push
lea
push
push
call
add
jnp
mov
add
ljmp
aad
icebp
mov
add
add
loop
popf
loop
add
icebp
mov
add
lcall
les
add
push
rol
sub
pop
add
push
add
xor
pop
add
push
ror
sub
pop
push
push
add
pop
mov
xor
push
push
push
lea
push
push
push
push
call
add
add
sti
add
push
add
pushf
xchg
icebp
mov
push
iret
add
add
add
add
add
add
jecxz
xchg
xchg
lods
arpl
add
dec
add
mov
in
in
lcall
lock
push
rol
pop
rep
mov
push
push
push
push
push
push
push
push
push
push
push
call
xchg
add
add
add
lret
add
mov
add
mov
lahf
je
stos
add
add
add
mov
loope
movsb
test
in
fdivr
lcall
or
push
push
push
lea
push
push
push
push
push
push
call
lea
les
mov
add
lret
mov
add
add
test
add
cmpsl
filds
loop
fnstenv
add
cmpsb
std
add
in
fdivr
lcall
les
add
rol
not
pop
or
je
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
add
push
arpl
mov
add
scas
leave
add
roll
add
add
roll
add
mov
push
add
lahf
mov
mov
insb
arpl
in
mov
in
fcomps
repz
add
inc
pop
add
push
ror
xor
pop
add
push
xor
not
pop
rep
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
insb
mov
xchg
add
add
jno
mov
add
add
add
loop
add
add
jb
add
jo
lahf
add
enter
add
mov
loopne
add
add
jl
add
scas
shl
add
mov
pop
push
push
sub
not
push
sub
add
ror
sub
shl
sub
ror
ror
pop
inc
not
inc
sub
pop
push
push
call
mov
movsl
add
add
jae
add
mov
shl
in
add
mov
add
sub
pop
pop
push
push
push
push
push
push
push
call
je
add
add
mov
lock
add
add
push
add
push
add
jge
pushf
add
push
add
add
ljmp
fs
jbe
add
jbe
add
lahf
add
add
push
addr16
pop
orl
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
iret
stc
push
add
mov
xchg
add
add
add
pop
xchg
mov
int
add
mov
add
add
add
data16
fcompl
lret
add
add
popf
out
loope
add
into
add
idiv
lea
sub
pop
mov
mov
push
not
rol
pop
jmp
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
lcall
xchg
mov
int3
add
ficompl
mov
add
add
add
sub
pop
mov
push
rol
dec
pop
add
push
lea
push
lea
push
push
call
scas
mov
add
add
lock
add
add
add
add
mov
call
mov
pop
clc
mov
sahf
fscale
in
push
enter
cltd
mov
pop
cmc
sub
pop
push
push
ror
add
rol
dec
pop
push
push
sub
pop
push
push
push
lea
push
lea
push
call
popa
add
mov
add
add
add
imul
into
add
cwtl
add
mov
add
add
faddp
roll
pop
mov
pop
push
lea
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
shll
aam
jge
pushf
std
add
add
add
xchg
add
cld
popa
ja
movl
add
mov
jo
add
add
insb
pop
pop
test
idivb
pushf
sub
pop
pop
push
not
xor
pop
pop
pop
push
xor
pop
leave
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
jl
add
add
les
call
add
xchg
add
fcoml
std
pop
nop
into
loopne
add
add
jo
add
sub
pop
ret
push
push
push
call
add
pushf
cwtl
add
add
mov
lock
std
mov
push
mov
arpl
in
add
lret
popa
mov
arpl
addb
mov
add
add
gs
enter
jp
scas
jae
add
lcall
in
push
push
lea
push
push
lea
push
call
add
enter
lea
add
out
xchg
lea
add
je
mov
mov
mov
add
add
pop
fildl
add
lock
sub
pop
add
push
rol
not
pop
push
push
shr
rol
pop
push
push
ror
inc
add
pop
push
push
push
call
xchg
add
fwait
sarl
add
lds
aam
push
xchg
add
add
fwait
mov
mov
lds
cltd
push
addb
ljmp
add
lcall
mov
hlt
movl
jmp
pusha
iret
sub
pop
push
push
lea
add
xor
pop
movl
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
mov
cmc
push
add
mov
pop
push
in
in
add
cmc
add
in
add
out
lods
pop
add
jnp
jecxz
ja
push
jbe
cmc
hlt
cmpsb
pop
iret
jno
mov
sub
pop
addl
test
je
push
lea
push
push
lea
push
call
jge
cmpsb
or
add
add
scas
sahf
add
add
test
call
add
popw
nop
fadds
add
xchg
add
call
add
xlat
out
ret
add
fldl
movsl
addb
pop
les
cltd
out
jo
in
lock
mov
pop
push
push
call
add
add
add
test
add
xchg
add
add
mov
add
lods
push
add
cmc
add
aad
jmp
add
pusha
roll
add
mov
add
popf
xorl
add
mov
test
arpl
lret
ja
mov
sub
pop
pop
pop
push
push
push
push
push
push
call
call
sahf
fcoms
repnz
shl
add
push
popa
loopne
add
xchg
add
out
arpl
test
fwait
jmp
add
arpl
sahf
push
scas
add
xchg
fmul
mov
test
add
cmpsb
fucomip
mov
stos
add
leave
push
push
lea
push
lea
push
push
push
call
pushf
add
cmc
stos
jnp
lds
cli
faddl
xchg
movb
popl
pop
add
in
je
je
data16
add
mov
mov
add
lcall
add
push
push
call
lea
in
add
jbe
add
mov
sarl
std
add
jbe
cli
jecxz
js
movb
mov
insb
pop
pusha
cwtl
mov
shlb
sub
pop
push
mov
push
add
pop
add
push
push
push
lea
push
push
call
add
add
add
imul
add
mull
add
add
addl
add
add
add
in
add
test
jnp
jnp
pop
mov
in
popa
lock
add
push
push
rol
not
ror
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
jno
fst
fadds
mov
xchg
add
cltd
add
mov
jno
pop
pop
lret
add
add
out
rcrl
popf
add
loope
out
add
fildl
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
fdivs
lea
add
add
mov
clc
hlt
out
mov
test
mov
add
out
add
data16
rol
fiaddl
add
add
lahf
add
enter
in
fdivr
lcall
inc
cld
add
add
push
push
push
push
call
xchg
add
add
add
add
add
popa
add
icebp
add
movb
stos
push
mov
ficoms
stos
mov
add
stos
imul
add
add
pop
add
add
lahf
sub
pop
addl
push
push
push
call
loope
add
add
add
push
iret
fwait
add
add
push
add
xchg
add
add
add
add
mov
int
add
cmc
add
add
add
xchg
mov
add
mov
fwait
add
xchg
repnz
pop
push
push
push
lea
push
call
jbe
xchg
mov
add
cld
xchg
pop
nop
insb
add
add
mov
lds
push
mov
add
mov
add
filds
pop
add
sub
pop
call
push
push
push
push
push
push
lea
push
push
lea
push
call
add
lcall
add
lds
subl
add
add
add
je
int
add
mov
add
in
fcompl
inc
cld
push
lea
push
push
push
lea
push
call
dec
jnp
imul
add
out
arpl
add
add
add
add
push
loopne
push
add
push
add
jns
push
add
mov
in
pop
pushl
push
xor
pop
push
push
push
push
push
lea
push
push
push
call
pop
mov
add
add
int
add
mov
test
jnp
pop
xchg
add
sarl
add
lcall
add
loopne
pop
call
cmpl
jne
push
push
lea
push
lea
push
push
call
mov
xlat
cmpsl
movsb
push
add
std
add
shll
add
add
addr16
mov
add
add
in
in
lcall
push
shl
pop
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
loopne
in
hlt
adcb
mov
addr16
add
jecxz
std
pusha
add
out
lahf
push
xchg
mov
add
add
test
mov
les
add
ret
stos
add
add
add
add
in
arpl
je
add
jle
push
faddl
leave
push
push
lea
push
push
push
push
call
out
pushf
add
jae
add
push
sar
mov
out
movsl
lret
pop
aam
test
jle
add
mov
scas
movsb
add
pop
add
mov
push
add
ljmp
xchg
add
vcvttps2dq
stc
sub
pop
ret
push
push
push
lea
push
push
push
push
lea
push
call
jle
pop
cwtl
adcl
xchg
mov
fwait
push
xchg
leave
clc
add
add
add
add
mov
lods
repnz
push
add
add
add
jne
outsl
add
add
jb
mov
add
push
xchg
fildl
addr16
add
mov
push
xor
sub
dec
pop
add
push
lea
push
push
push
call
add
push
add
test
addb
pusha
mov
rcrl
out
mov
add
add
in
ja
out
in
add
add
in
lock
lcall
push
push
push
lea
push
call
add
roll
lret
aad
jecxz
add
add
add
add
mov
xchg
add
andl
cmpsl
cli
mov
add
cli
mov
add
jmp
add
sbb
add
add
mov
mov
lahf
add
add
jne
jbe
add
sub
pop
push
push
push
lea
push
call
ret
out
outsl
add
mov
mov
lock
lret
add
xchg
jl
mov
mov
in
hlt
lcall
push
push
push
push
push
call
out
lcall
add
call
xchg
popf
mov
push
mov
jp
sar
add
add
lods
jge
push
jns
add
add
inc
cld
add
push
push
lea
push
push
push
call
mov
pusha
jl
mov
test
add
fldenv
pop
add
add
pop
incb
sti
push
add
push
movsl
push
aam
add
xchg
sub
pop
push
push
not
pop
call
push
add
shr
pop
push
push
push
push
push
call
add
jge
add
cwtl
pop
add
test
push
add
push
mov
add
add
enter
test
mov
mov
in
lock
call
subl
push
shl
pop
cmpl
jne
push
push
lea
push
lea
push
lea
push
push
call
add
ljmp
add
mov
lret
mov
mov
mov
mov
loope
imul
sahf
scas
jns
xlat
xchg
cltd
add
jb
cli
add
jl
movsb
fsts
xchg
mov
in
call
pop
push
shl
pop
pop
push
push
push
lea
push
push
push
call
lahf
add
add
sarb
mov
sbb
lods
pushw
pop
fcoms
add
mov
add
jo
icebp
mov
hlt
mov
add
lea
ja
jae
in
add
mov
lret
sub
pop
pop
push
xor
ror
rol
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
add
pop
add
add
mov
jo
mov
add
jbe
lods
mov
hlt
add
jl
xchg
mov
mov
add
push
add
add
int3
push
fwait
xchg
fimuls
mov
add
roll
pop
fildl
sub
pop
leave
push
not
pop
ret
push
sub
pop
push
push
ror
pop
mov
add
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
andb
jmp
loope
stc
add
add
in
mov
add
add
mov
add
mov
add
add
add
add
xchg
in
xchg
push
add
xchg
cmpsb
jns
add
mov
scas
add
add
xchg
add
add
test
add
add
push
push
push
push
push
push
push
push
push
call
jecxz
add
pop
imul
fcom
add
add
lea
into
pop
mov
mov
mov
jo
add
addb
pop
push
push
push
push
push
push
push
lea
push
push
push
push
call
out
int3
testl
cmpsb
mov
add
imul
rolb
add
add
add
lahf
cli
mov
lcall
mov
push
push
push
push
lea
push
push
push
lea
push
push
call
add
cli
add
mov
add
add
mov
add
add
mov
add
movsb
xlat
icebp
add
in
add
push
movsl
out
mov
add
out
filds
jae
add
int3
jnp
mov
add
stc
stos
aam
add
add
fsub
ja
mov
clc
mov
add
sub
pop
lea
sub
push
inc
pop
mov
push
lea
push
push
push
push
lea
push
call
insb
iret
mov
add
add
pop
popa
ljmp
add
mov
mov
add
shlb
fwait
add
push
add
rcrl
add
mov
fs
add
repnz
pop
add
addl
add
add
test
add
mov
fsubr
add
pop
mov
sub
pop
shr
push
rol
shr
pop
add
push
push
lea
push
lea
push
push
call
in
mov
roll
add
fisttpll
addb
add
shl
xchg
fistpll
xchg
jno
lds
add
mov
stos
stos
clc
bound
mov
push
add
add
je
add
add
add
aad
xchg
jae
add
add
jecxz
sub
pop
mov
push
push
lea
push
call
xchg
jb
mov
mov
add
push
jb
jmp
push
mov
stos
add
sti
icebp
mov
cmpsl
jo
incb
out
test
int3
iret
arpl
add
call
jbe
xlat
add
add
lcall
andb
or
lea
push
push
push
lea
push
lea
push
push
call
mov
jnp
popa
fdivr
je
add
add
mov
call
add
rolb
incb
sti
add
jb
add
mov
add
aam
add
add
lcall
shlb
shr
ror
pop
mov
push
dec
not
ror
pop
mov
cmp
jne
push
push
push
push
push
call
cwtl
add
addl
add
in
imul
faddl
add
sti
stos
aam
add
loopne
xchg
xchg
out
jne
sti
out
popa
push
jno
mov
add
cmpsb
push
test
lea
sub
pop
cmp
jne
push
push
push
lea
push
push
lea
push
call
rolb
xchg
bound
fists
add
push
int
mov
add
cli
lock
xchg
out
cli
add
mulb
pop
lahf
aam
andb
mov
cwtl
out
push
mov
lods
outsl
add
add
push
xchg
add
add
ficompl
sub
pop
mov
movl
push
lea
push
call
jb
scas
lods
xchg
in
pop
int
add
add
popf
add
fnstsw
arpl
jne
shll
add
hlt
mov
testl
add
lds
add
mov
add
aam
xlat
mov
add
add
add
jbe
add
mov
lcall
jp
add
push
inc
sub
pop
mov
mov
push
inc
pop
sub
jne
mov
push
push
push
push
push
lea
push
call
out
add
push
jbe
aad
xchg
add
add
add
hlt
shlb
add
add
mov
add
add
add
clc
mov
mov
lcall
icebp
ja
scas
ljmp
pop
ja
add
add
in
pop
popl
fs
add
add
add
movl
jmp
push
inc
pop
mov
push
sub
dec
pop
mov
push
shl
shr
pop
cmp
jne
push
add
add
lea
dec
pop
mov
push
sub
rol
add
pop
movl
push
push
push
push
push
call
mov
mov
loop
sti
add
push
mov
out
xchg
push
fldenv
add
mov
stos
add
jne
stc
push
xchg
xchg
add
add
mov
add
enter
xchg
add
mov
js
out
sub
pop
jmp
push
sub
shl
pop
mov
push
push
push
push
push
push
push
call
cli
mov
cmc
outsl
add
add
faddl
add
lahf
add
int3
ret
jp
add
push
pop
rolb
lds
add
mov
cli
mov
sub
pop
cmpw
jne
mov
push
push
lea
push
call
xchg
bound
mov
mov
push
movsl
stc
mov
out
jb
pop
mov
mov
in
add
mull
pop
stos
cmc
sub
pop
movl
push
push
push
push
push
lea
push
push
push
lea
push
call
into
jge
in
shl
out
add
fs
xchg
add
loope
add
testl
repnz
in
js
xchg
add
add
popf
add
iret
pop
leave
jae
lahf
pop
loop
nop
add
rcll
nop
add
fs
sub
pop
jmp
pushl
push
push
push
call
add
fists
test
mov
add
mov
add
jmp
add
repnz
xchg
add
lahf
scas
rolb
add
xchg
add
mov
add
add
add
push
jl
add
add
lahf
mov
sub
pop
pop
mov
push
shl
add
pop
mov
mov
push
push
xor
add
dec
push
sub
add
shl
xor
add
sub
not
pop
shl
pop
push
not
pop
push
call
push
lea
push
push
lea
push
push
push
push
push
call
ja
movsb
sahf
pop
lds
add
add
add
hlt
mov
test
add
lds
mov
add
pop
add
in
jne
into
add
pop
lret
rcrl
sub
pop
cmpl
je
push
push
lea
ror
push
xor
add
shl
sub
sub
ror
shl
pop
add
sub
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
jnp
pop
mov
add
add
jae
add
fwait
push
mov
add
lcall
jae
add
out
mov
add
mov
add
popf
nop
pop
fmul
fsubrp
xchg
add
push
cmc
add
call
push
rol
xor
shl
pop
cmpl
je
push
push
ror
not
rol
push
or
inc
add
ror
add
rol
sub
rol
sub
pop
xor
xor
dec
add
pop
push
ror
xor
pop
push
push
push
call
icebp
add
add
imul
mov
jnp
add
fildl
add
add
mov
jecxz
add
lods
mov
add
add
mov
lret
roll
add
add
xchg
test
add
push
add
add
pop
call
push
add
add
pop
cmpl
je
push
push
xor
add
lea
push
and
add
shl
sub
lea
pop
shl
ror
pop
push
lea
push
push
push
push
push
call
lcall
add
add
stos
pop
add
add
xchg
add
fcomip
add
mov
push
out
add
add
fiaddl
arpl
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
call
mov
add
add
leave
jb
add
add
add
add
mov
fcompl
jp
add
movsl
ret
mov
add
scas
out
fmull
mov
jno
mov
divl
leave
mov
mov
lcall
in
add
cmpl
je
push
push
dec
shr
push
xor
add
ror
dec
xor
lea
sub
rol
xor
pop
sub
pop
push
lea
shl
ror
pop
push
push
lea
push
push
lea
push
push
push
push
call
mov
add
add
add
int3
xchg
jge
in
add
add
add
mov
mov
roll
test
push
imul
cli
mov
jmp
fldl
push
roll
add
xorb
xlat
out
mov
enter
addb
xchg
add
cli
add
pop
movsb
mov
call
push
push
call
mov
jo
add
std
jge
insb
push
out
add
stos
js
jae
mov
insb
mov
jae
jle
jge
push
mov
add
add
xchg
add
hlt
pop
ljmp
xchg
jb
sahf
movb
add
add
bound
add
pusha
flds
notb
lods
mov
sti
je
sub
pop
cmpl
je
push
push
sub
push
or
inc
add
shr
shl
sub
shr
xor
pop
shl
sub
pop
push
lea
push
push
call
xchg
scas
add
outsl
push
add
add
mov
push
add
mov
push
stc
add
add
mov
loop
lea
lret
pop
add
mov
add
add
imul
xchg
add
mov
mov
in
hlt
pop
push
push
push
call
add
add
add
xchg
add
add
fisubrs
insb
push
jmp
lock
lcall
cmpl
scas
ljmp
add
movsl
add
add
add
mov
add
lcall
mov
add
push
pop
cmpl
je
push
push
inc
add
dec
push
xor
add
inc
sub
add
dec
add
rol
pop
rol
sub
not
shr
pop
push
xor
shl
add
shr
pop
push
push
lea
push
call
add
add
push
add
add
mov
xchg
data16
add
jnp
add
roll
xlat
mov
les
lods
add
test
mov
mov
imul
mov
scas
rcll
ljmp
out
add
sti
cmp
add
lret
shl
rcrb
cmp
or
int3
je
push
push
push
or
not
add
add
sub
shl
pop
shr
pop
push
lea
push
call
test
bound
push
testl
add
clc
out
mov
add
test
loop
mov
push
mov
add
xchg
jl
loope
mov
pop
add
add
sarb
movsl
xchg
xchg
adcl
addb
in
clc
pop
push
push
inc
shl
pop
call
push
add
lea
rol
xor
pop
cmpl
je
push
push
xor
push
push
pop
add
xor
lea
sub
ror
sub
pop
shr
not
rol
pop
push
not
shr
xor
pop
push
push
sub
pop
call
push
dec
sub
rol
add
pop
cmpl
je
push
push
dec
not
add
lea
push
xor
add
rol
inc
sub
pop
rol
shl
ror
pop
push
add
pop
push
call
push
rol
shr
shl
pop
cmpl
je
push
push
shr
ror
push
and
add
dec
sub
not
add
pop
rol
ror
pop
push
push
lea
push
call
add
cmpsb
repnz
pop
add
add
xchg
iret
fcmovnbe
add
stos
shlb
shr
mov
push
add
add
mov
loope
add
push
in
test
fcmovu
add
mov
hlt
sti
add
hlt
add
add
add
add
testb
mov
pop
jge
add
push
sub
pop
call
cmpl
je
push
push
xor
sub
add
sub
push
push
pop
add
sub
sub
lea
sub
dec
pop
inc
ror
pop
push
push
call
add
add
push
add
data16
mov
outsl
scas
add
add
mov
push
aam
add
pop
mov
add
add
mov
add
fcmovnu
mov
add
mov
push
scas
js
add
roll
add
add
call
push
shl
pop
cmpl
je
push
push
add
shl
push
or
not
add
sub
add
sub
ror
sub
inc
pop
lea
sub
dec
sub
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
push
lods
add
add
add
in
pushf
sahf
jb
bound
add
add
add
add
lods
pop
lock
add
add
mov
negb
add
add
lcall
push
ror
pop
call
push
add
lea
xor
pop
cmpl
jne
push
push
push
push
lea
push
push
push
push
push
call
mov
add
into
popf
rolb
leave
jo
rol
add
add
jmp
ret
leave
shl
pusha
add
add
jo
add
rolb
fadds
pop
add
div
aad
add
add
pop
mov
movl
push
push
lea
push
call
add
icebp
add
les
add
mov
add
jae
gs
add
add
insb
lcall
fs
out
pop
in
add
pop
outsl
jmp
add
add
add
sti
orb
add
jns
incb
add
jnp
push
pop
jmp
xor
push
sub
shl
pop
pop
push
inc
add
shl
pop
pop
pop
push
ror
pop
pop
leave
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
ljmp
fdivrs
enter
fadds
cmpb
add
pop
add
cltd
add
add
test
add
icebp
push
add
loope
in
add
popa
add
addb
rolb
test
add
add
in
loopne
lcall
or
push
push
ror
pop
mov
push
add
lea
sub
pop
add
push
push
push
push
lea
push
push
call
add
add
add
pop
add
clc
add
fildl
test
add
lret
filds
mov
fdivp
hlt
fucomi
in
add
add
data16
rclb
add
lcall
jge
add
test
add
add
mov
xlat
push
lea
push
and
add
ror
sub
add
sub
lea
pop
sub
inc
rol
pop
push
shl
not
rol
pop
pushl
push
add
xor
not
pop
call
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
icebp
popf
add
hlt
mov
add
pop
add
imul
add
test
add
mov
add
lcall
call
test
add
add
jnp
lods
add
push
mov
pop
fwait
add
jns
ror
idivl
add
loop
add
popa
add
icebp
add
jne
mov
scas
add
add
add
mov
clc
pop
call
push
rol
pop
jmp
cmpl
je
push
push
lea
push
push
call
fiaddl
scas
mov
mov
add
add
movsl
pop
mov
in
arpl
mov
xchg
add
add
fdivs
add
lcall
jge
add
add
push
lea
push
push
push
lea
push
push
call
add
mov
sarb
fbld
jnp
add
add
add
aam
jmp
add
je
add
jns
add
add
add
jb
mov
add
mov
mov
add
add
shlb
leave
push
lea
shr
xor
pop
add
push
rol
lea
rol
pop
pop
push
push
call
add
add
pushf
jo
jle
add
cld
xchg
add
cmpsl
mov
add
mov
rcr
mov
jae
addb
fwait
add
sti
add
add
add
add
mov
gs
arpl
idivb
xchg
fs
scas
add
add
add
push
add
pop
pop
push
shl
pop
pop
push
rol
sub
xor
add
pop
leave
push
inc
xor
add
not
pop
add
push
not
lea
not
pop
ret
push
lea
push
push
lea
push
call
enter
add
arpl
mov
pop
add
add
lcall
add
movb
les
jmp
add
jle
push
clc
lock
pop
jmp
push
push
push
push
push
push
lea
push
push
push
push
call
out
movsl
add
pop
add
enter
pusha
add
mov
add
in
int3
mov
add
add
addl
in
mov
add
add
cli
cwtl
add
mov
add
stc
mov
xchg
aad
pop
push
add
add
add
sti
add
sub
pop
cmpl
jne
push
push
sub
push
or
not
add
shr
rol
sub
add
add
add
sub
pop
add
pop
push
push
push
push
push
push
lea
push
call
add
add
mov
jle
add
xchg
shll
fs
add
push
add
push
add
je
add
jecxz
add
pushf
fldenv
aad
push
pushf
lds
add
add
imul
add
add
sub
pop
pushl
push
push
lea
push
call
movsb
add
les
push
add
mov
xchg
mov
add
in
stos
ror
stos
jns
movsl
push
jl
add
add
jmp
sarb
lcall
xor
shr
pop
push
push
ror
rol
pop
call
push
shr
inc
pop
jmp
cmpl
jne
push
inc
sub
ror
lea
pop
mov
mov
push
not
pop
push
push
push
sub
xor
push
or
not
add
ror
xor
inc
rol
sub
lea
add
pop
not
add
pop
push
add
not
rol
pop
pushl
push
add
xor
ror
pop
call
call
push
push
shr
shr
push
and
add
add
sub
shl
lea
shl
pop
add
pop
push
not
rol
add
pop
pushl
call
push
push
push
lea
push
push
call
add
add
add
add
add
test
add
fsubrl
pop
mov
add
pop
xchg
lcall
xchg
add
push
push
add
add
cmpsl
stos
add
jbe
push
add
sub
pop
call
push
push
sub
push
or
inc
add
sub
sub
lea
add
shl
add
pop
dec
pop
push
sub
add
not
pop
pushl
call
push
push
call
add
test
popf
add
clc
xchg
ja
jb
in
add
js
mov
xchg
pop
out
mov
mov
add
add
add
fldl
in
add
sahf
sub
pop
call
push
push
add
ror
ror
push
xor
add
shl
sub
shr
shl
xor
pop
dec
shl
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
call
nop
add
add
stos
add
pop
add
add
imul
push
pushf
scas
cmp
xchg
cmpsl
in
add
stos
mov
add
add
add
push
add
ret
popf
lcall
add
add
nop
mov
add
incb
push
cmpsl
mov
add
add
add
lcall
jne
push
push
lea
push
push
call
popl
add
add
add
push
push
add
pop
sbbl
mov
jge
xchg
insb
sub
pop
call
push
sub
pop
call
push
push
shr
sub
push
and
add
shl
inc
sub
not
pop
sub
pop
push
lea
pop
pushl
push
add
inc
pop
call
call
push
push
inc
push
or
inc
add
ror
sub
shr
sub
lea
pop
not
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
pop
ljmp
in
fwait
stc
add
movb
add
xchg
aad
add
enter
jno
popa
jno
loope
jmp
jne
xchg
in
push
cltd
xchg
add
in
sub
pop
pushl
call
push
lea
push
lea
push
push
push
lea
push
push
call
movl
popf
add
jl
add
lock
std
add
mov
add
mov
fprem
jne
fbld
pop
faddl
push
movsb
add
add
scas
in
add
jo
xchg
testl
call
push
push
add
inc
push
xor
add
not
sub
add
pop
not
ror
pop
push
shr
pop
pushl
call
push
lea
pop
call
push
push
inc
inc
push
push
pop
add
add
add
sub
rol
rol
sub
pop
sub
pop
push
not
inc
shl
not
pop
pushl
push
push
call
shr
pusha
mov
insb
js
add
mov
call
pop
imul
jp
fistpl
enter
fsubrl
arpl
clc
lea
aam
pop
add
ljmp
into
push
addb
je
pop
sti
int
movsb
in
jmp
ja
sub
pop
call
push
add
ror
inc
pop
call
push
push
sub
lea
ror
push
xor
add
sub
inc
shr
xor
pop
shl
rol
shl
pop
push
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
push
call
out
sahf
add
add
cld
push
cmp
add
mov
add
add
lods
out
add
mov
add
test
fistpl
add
jge
not
jo
test
pop
add
add
add
lods
xchg
add
add
fs
add
jp
add
jne
add
sub
pop
call
push
push
push
push
push
call
jmp
add
add
add
push
shll
add
test
nop
add
add
addl
mov
lock
andl
pop
add
add
mov
jno
cmpsb
out
into
push
mov
ja
lock
push
xchg
add
add
addb
in
in
lcall
shrb
xor
sub
rol
inc
push
sub
add
shr
dec
inc
sub
add
add
pop
add
ror
pop
push
xor
shr
pop
pushl
call
push
sub
inc
shr
sub
pop
lea
push
lea
add
pop
push
call
push
push
rol
not
push
xor
add
lea
add
sub
shl
rol
xor
pop
add
pop
push
push
push
push
call
push
out
add
add
cltd
mov
test
loopne
add
lahf
add
sahf
fsts
mov
enter
mov
ja
filds
popl
lcall
fbld
add
push
gs
std
adcl
xchg
pop
add
movsl
mov
lcall
jne
call
push
sub
pop
call
push
push
add
dec
not
push
xor
add
xor
ror
sub
rol
inc
lea
shl
pop
add
sub
pop
push
push
push
call
add
mov
add
movsl
pop
mov
fldl
mov
into
add
imul
xor
add
test
push
add
add
add
jbe
add
add
xlat
rolb
mov
push
mov
jne
pop
add
rcr
add
add
lcall
jne
call
push
push
lea
push
lea
push
call
add
data16
add
add
pop
push
add
mov
lahf
add
add
in
push
stc
mov
rcl
add
loop
mov
cmpsb
add
add
add
aam
in
lock
lcall
shrb
push
push
sub
push
push
pop
add
rol
shl
sub
rol
rol
shr
pop
xor
xor
lea
shr
pop
push
sub
sub
xor
shr
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
push
push
call
int3
jae
add
flds
fiaddl
into
jae
add
jp
fs
add
pop
mov
incb
out
mov
ja
mov
sub
pop
call
push
push
call
iret
pop
clc
add
add
rcl
icebp
add
mov
jmp
outsl
fsubrp
fldt
lds
add
out
int
into
add
fisttps
add
add
leave
xlat
in
add
xchg
lea
sarl
cli
mov
movsb
mov
add
clc
lea
rorb
ljmp
shlb
adc
into
push
add
shl
sub
sub
sub
ror
pop
sub
pop
push
push
push
push
push
call
add
add
je
fsubrs
add
jbe
js
shll
ja
imul
sti
add
call
add
cmpsb
add
mov
jb
add
jns
je
pop
xlat
mov
lods
add
cld
jns
int
std
add
addl
std
xchg
lods
add
lcall
jne
push
pop
call
push
push
lea
push
call
add
add
cmc
or
lods
push
scas
cmpsb
std
scas
push
add
add
mov
lahf
les
ror
shrl
mov
jae
popa
cmpsl
andl
add
add
pop
call
push
push
sub
rol
sub
push
or
not
add
inc
sub
sub
pop
shl
not
shr
pop
push
lea
push
lea
push
push
lea
push
call
add
add
add
test
pop
add
add
add
aam
add
jno
jo
pop
stc
in
pop
add
pop
lret
add
movsl
add
out
add
add
sar
out
jmp
int3
push
add
loope
add
arpl
stos
add
pop
pushl
call
push
push
call
shl
add
jp
cltd
add
jb
xlat
aam
fidivrl
cmc
add
mov
mov
add
fwait
ja
mov
insb
in
icebp
xchg
add
add
icebp
add
add
push
fadd
add
lcall
cwtl
fldl2e
aam
lods
add
mov
clc
lcall
rorb
ljmp
push
ror
push
sub
add
sub
sub
rol
pop
inc
lea
pop
push
lea
push
push
push
lea
push
push
lea
push
call
add
lods
mov
cltd
add
mov
jge
test
add
add
lods
loope
stc
fdivl
mov
add
add
mov
mov
jnp
lea
std
add
add
mov
add
cwtl
add
fdivr
cmc
add
lcall
jne
push
xor
pop
call
push
push
lea
push
push
push
push
lea
push
push
push
push
call
je
movsb
mov
xchg
add
enter
iret
in
stos
fs
push
mov
loopne
add
add
add
cmpsl
add
jno
push
add
mov
add
stos
add
add
test
xchg
lock
lcall
add
pop
pushl
call
push
push
add
inc
shl
push
or
inc
add
sub
add
sub
lea
not
add
pop
not
sub
ror
pop
push
push
push
push
lea
push
lea
push
call
mov
mov
mov
ficoml
popa
scas
mov
pop
in
add
mov
jo
mov
push
jnp
ret
out
add
add
lret
je
sub
pop
pushl
push
dec
add
xor
xor
pop
call
push
push
sub
shl
not
push
push
pop
add
not
sub
rol
xor
pop
sub
pop
push
push
rol
xor
push
or
inc
add
sub
sub
sub
shl
pop
ror
shl
sub
pop
push
lea
push
call
add
pusha
loope
add
xchg
add
lret
pop
mov
push
add
jns
div
jle
pop
loope
int
std
test
add
push
pop
call
push
push
dec
inc
push
and
add
rol
not
shr
rol
sub
ror
shl
dec
pop
sub
pop
push
rol
ror
inc
pop
pushl
push
push
lea
push
push
call
mul
aam
test
sahf
sti
xchg
push
push
into
gs
add
add
add
add
add
add
push
add
out
lahf
in
data16
add
add
add
push
add
xchg
sub
pop
call
push
lea
push
lea
push
push
push
push
push
push
call
mov
add
add
mov
add
add
add
push
add
add
add
push
push
addl
arpl
push
add
je
add
add
mov
add
push
add
add
mov
iret
sub
pop
mov
push
sub
dec
pop
lea
lea
push
push
push
push
call
xchg
in
je
aad
cwtl
add
add
call
fldcw
add
rcl
roll
add
add
test
mov
hlt
movsb
push
push
add
add
stos
addl
push
push
call
jns
in
add
xchg
ljmp
lea
andl
add
add
aad
jp
hlt
int
add
mov
push
jl
add
push
add
mov
lds
addl
add
add
push
add
xchg
add
add
lret
in
hlt
lcall
push
push
push
lea
push
push
push
lea
push
push
push
push
call
mov
add
leave
mov
sti
add
add
xchg
movsl
add
pop
leave
add
add
jecxz
push
testb
mov
push
testl
jo
lcall
add
sbb
dec
add
add
add
lcall
cmpsb
in
bound
roll
mov
push
call
imul
add
push
xchg
pop
fdivl
add
mov
sar
stos
jmp
lods
mov
mov
fwait
add
in
clc
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
jne
add
movsb
mov
add
add
popa
add
jecxz
jbe
add
add
cli
add
push
add
out
cmc
add
outsl
stos
loope
add
mov
jno
sahf
filds
jmp
fcoml
movsl
in
out
push
add
jo
scas
push
rcl
mov
add
mov
push
push
not
pop
push
push
shr
rol
pop
pushl
push
inc
dec
pop
push
push
push
push
call
add
arpl
nop
mov
nop
stos
fwait
data16
mov
pop
addb
add
sbbb
in
hlt
pop
call
push
push
add
ror
dec
xor
push
xor
add
inc
inc
shl
sub
add
shl
add
pop
rol
pop
push
push
push
push
call
lods
addb
add
hlt
bound
scas
add
add
rolb
test
add
mov
jecxz
jp
add
mov
movsl
add
mov
mov
xchg
popa
xlat
add
ficoml
leave
in
call
add
add
aam
insb
fcomps
jp
add
mov
add
fdiv
cmpsb
sub
pop
pushl
push
add
xor
pop
call
push
add
sub
pop
call
mov
push
push
push
push
call
loopne
add
xchg
add
add
test
add
sahf
mov
mov
add
sti
insb
add
add
mov
lcall
push
push
push
call
js
lock
add
add
add
scas
idivw
add
addr16
pop
lret
pop
outsl
lret
add
lods
add
sub
pop
dec
jne
push
pop
jmp
push
shr
shr
inc
lea
pop
call
push
push
rol
push
or
not
add
shr
sub
sub
pop
shr
not
ror
pop
push
push
push
lea
push
push
call
jmp
jl
fisubrs
add
add
iret
add
mov
mov
add
movb
mov
mov
add
int3
mov
jnp
stos
add
jl
iret
in
iret
add
add
sti
movsb
shlb
add
add
movsb
add
push
add
scas
call
xlat
ljmp
jne
call
push
sub
pop
push
push
shl
sub
pop
call
push
push
lea
push
push
push
push
push
call
push
fiadds
add
add
mov
pop
outsl
add
test
insb
mov
arpl
stos
xchg
incb
in
add
fcmovb
icebp
in
mov
mov
sahf
pop
add
add
adcl
fwait
add
fld
gs
pop
cmpsb
insb
call
add
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
add
test
push
out
filds
je
xchg
test
add
add
push
mov
rolb
stc
outsl
xchg
repnz
add
jl
xchg
js
add
add
pop
push
jge
add
add
add
add
add
add
mov
arpl
add
pushf
and
ljmp
add
add
lea
lea
push
or
not
add
add
sub
sub
sub
xor
inc
pop
rol
pop
push
push
push
call
in
pop
add
fstl
mov
add
cwtl
bound
add
add
cltd
push
add
lcall
push
jns
mov
xlat
add
add
lret
add
movb
add
arpl
movsl
shll
mov
add
mov
add
add
add
aam
test
lcall
jne
push
shr
inc
pop
call
push
push
push
push
push
push
call
add
ja
nop
lock
addl
bound
add
outsl
push
stos
xchg
add
xlat
je
add
add
add
jmp
rolb
add
add
test
test
pushf
nop
add
push
add
sub
pop
push
push
dec
rol
lea
pop
call
push
push
add
shl
push
sub
add
sub
lea
lea
pop
add
add
add
pop
push
add
pop
pushl
call
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
aad
add
gs
repnz
mov
add
call
rcrl
pushf
push
mov
push
into
add
add
imul
jp
test
in
fcomps
rclb
pop
mov
push
push
push
push
push
push
push
push
push
push
call
imul
xchg
lea
fildl
sti
add
push
add
andl
mov
add
int
std
movb
add
mov
movsb
pop
add
add
add
jge
adcl
sub
pop
lea
push
push
sub
push
or
inc
add
xor
inc
shr
sub
shr
shl
not
pop
inc
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
jmp
add
pop
stc
cld
add
ror
aad
jno
pushf
fwait
xchg
lret
add
lods
add
popa
add
add
rclb
add
add
iret
loopne
pop
mov
jle
fnstcw
jecxz
stos
mov
ja
fsubrs
mov
sub
pop
pushl
push
push
push
lea
push
call
add
mov
add
sahf
add
movl
add
mov
lret
push
jge
pop
insb
stc
add
lea
in
fcomi
add
add
add
sub
pop
call
lea
push
lea
not
pop
push
push
push
push
push
push
push
push
call
add
shlb
arpl
add
repnz
add
imul
fucomp
gs
add
in
in
lcall
add
push
lea
push
push
lea
push
call
add
leave
add
into
mov
mov
rcrb
jge
int3
add
hlt
add
add
enter
stc
cltd
add
out
add
je
addr16
icebp
stos
add
lock
pushl
push
push
shl
add
shl
shr
push
push
pop
add
shl
sub
sub
sub
ror
pop
xor
sub
pop
push
ror
pop
push
push
push
push
lea
push
call
mov
xchg
xchg
fld
add
icebp
pop
mov
ror
xchg
cwtl
jge
test
pop
add
data16
add
push
add
hlt
mov
add
in
les
inc
fildl
lcall
shrb
popa
out
in
push
xor
lea
lea
push
or
not
add
xor
sub
xor
sub
inc
shr
pop
dec
add
pop
push
not
shl
add
rol
pop
pushl
push
push
push
call
popf
add
lea
push
jns
popf
xchg
add
mov
pushf
and
push
add
in
popa
add
cmpsl
add
pop
mov
push
add
mov
xchg
pop
add
cmpsb
not
lahf
sub
pop
call
push
push
push
push
push
push
lea
push
call
add
lret
jecxz
aad
add
jnp
out
add
clc
add
popa
mov
rcrl
ljmp
mov
mov
les
jne
add
ja
jbe
add
out
add
sub
pop
push
call
push
push
sub
shr
push
push
pop
add
add
inc
rol
sub
rol
pop
dec
pop
push
inc
xor
pop
pushl
call
push
push
push
push
push
call
lahf
jae
movb
mov
add
movb
test
in
pop
add
lds
je
shrl
sahf
add
addl
add
fcmovb
mul
rolb
cmc
mov
xchg
xchg
add
pop
add
addb
test
lea
insb
add
lahf
add
lcall
shr
rolb
add
push
lea
push
push
push
push
call
push
add
outsl
add
add
add
add
jl
js
orl
clc
add
pushl
mov
push
sub
inc
ror
rol
pop
jmp
push
push
shl
ror
push
sub
add
shr
sub
xor
sub
add
shl
pop
not
rol
pop
push
sub
pop
pushl
push
shr
pop
call
push
inc
pop
push
call
push
push
lea
shl
shl
push
or
inc
add
shr
ror
shl
sub
sub
xor
not
pop
lea
ror
shr
pop
push
shl
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
push
call
cld
add
mov
sarl
imul
add
js
pop
add
jp
add
add
jp
add
add
add
scas
pushf
jp
xchg
lcall
cmpsb
mov
pushf
insb
faddl
lcall
push
push
push
push
push
lea
push
push
push
call
mov
je
pop
pop
testb
scas
cld
shr
mov
add
add
cmpb
add
fadds
imul
loop
incb
push
pushf
add
add
xchg
add
mov
push
pushf
add
add
fadds
add
enter
loopne
call
leave
push
push
push
push
push
push
call
lcall
stos
add
xchg
add
sahf
add
add
ljmp
xchg
outsl
enter
xchg
push
mov
add
add
xchg
pop
add
pusha
stc
incb
push
je
jle
add
lcall
les
push
push
push
push
push
push
lea
push
push
lea
push
call
jns
imul
filds
add
scas
add
push
call
mov
mov
mov
icebp
icebp
faddl
ret
add
mov
fs
mov
scas
loopne
add
sub
pop
pop
push
push
lea
push
call
mov
add
add
add
mov
xchg
ljmp
add
mov
mov
cli
arpl
add
test
push
push
lea
push
push
lea
push
lea
push
push
call
sarl
xchg
rol
call
movsb
add
enter
repnz
mov
in
add
nop
add
mov
jecxz
xchg
addb
add
mov
add
aad
in
in
lcall
push
lea
push
lea
push
call
jp
out
out
add
roll
in
mov
lods
add
fcoms
iret
iret
add
add
imul
add
add
fiadds
xchg
test
mov
mov
sub
pop
pop
push
sub
sub
inc
pop
leave
push
push
push
push
push
push
call
lret
hlt
imul
icebp
add
fiadds
loope
mov
jle
movb
enter
jo
add
push
add
add
push
add
out
add
cmc
lret
lds
xchg
add
faddl
add
add
pop
add
mov
int3
add
test
add
add
xlat
stos
add
fadds
mov
in
call
push
dec
shr
rol
pop
ret
push
xor
add
shl
pop
leave
push
add
lea
add
pop
ret
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
pop
repnz
lret
jo
cltd
add
jecxz
movsl
add
add
mov
lods
les
lock
add
pop
test
jp
int
aad
jp
add
fdivr
lcall
mov
push
push
lea
push
push
push
push
push
push
push
push
call
fwait
push
jecxz
aad
add
cmpb
test
testl
cltd
mov
mov
jmp
add
jle
lret
xchg
xchg
scas
add
jb
jne
xchg
lcall
add
popf
addl
mov
add
push
push
aad
add
in
fdivr
lcall
jge
add
test
add
push
lea
shl
pop
mov
push
push
call
add
icebp
roll
cmpsl
gs
imul
rclb
shl
jns
add
jecxz
add
add
jb
mov
shr
cli
fwait
pop
add
add
push
add
add
in
clc
pop
jmp
push
not
pop
mov
push
push
lea
push
push
push
push
push
call
add
call
xchg
add
aad
add
mov
lahf
add
js
aad
cmpsb
insb
pop
into
ja
leave
add
add
mov
xchg
mov
push
in
fwait
ljmp
pop
fbstp
add
add
add
movsl
add
sarl
in
in
lcall
and
xor
push
push
call
sahf
add
movsl
fistpll
add
js
add
stc
mov
jp
jno
testl
jne
in
fistpll
fcmove
lea
sbb
int
scas
in
add
add
bound
clc
lcall
push
add
add
ljmp
add
fadds
mov
add
xchg
js
movsb
in
mov
push
add
add
push
repnz
pop
je
lods
popa
fldl
cli
add
stos
add
mov
add
lcall
rolb
push
push
lea
push
push
lea
push
call
cmc
add
rol
imul
ljmp
rolb
push
arpl
add
mov
fstps
int3
mov
add
add
add
jge
add
iret
test
fisubs
add
mov
add
rcrl
filds
cli
add
call
xor
dec
push
push
push
lea
push
push
push
lea
push
push
push
call
fisttpl
js
rolb
push
push
add
add
add
lods
add
enter
fldl
jmp
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
pop
add
lret
mov
add
cltd
mov
add
movsb
mov
stos
add
fs
arpl
pusha
jns
sub
pop
jmp
push
push
push
lea
push
call
push
add
jno
push
add
addb
mov
mov
testl
xchg
fildl
push
add
add
pop
add
add
sub
pop
sub
push
push
push
call
push
add
jno
pop
mov
add
xchg
pop
jns
add
add
into
add
push
xorb
lahf
js
in
lods
jne
cld
jl
push
js
movsb
add
add
add
movb
xlat
fiadds
xchg
sub
pop
pushl
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
jne
xchg
mov
mov
test
xchg
cli
cli
mov
jge
stos
jb
add
pushf
mov
les
outsl
test
xchg
data16
jae
add
xchg
sub
pop
pop
sub
push
ror
shl
xor
pop
cmp
jne
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
js
xchg
add
add
repnz
mov
add
pusha
test
add
cltd
xchg
add
andl
clc
add
fwait
iret
pop
fdivrl
mov
xchg
add
std
add
add
xchg
mov
add
lcall
mov
sub
pop
mov
push
push
call
add
xchg
lea
cwtl
pop
mov
add
fnstsw
xchg
mov
mov
xchg
mov
add
flds
lcall
dec
cmp
push
push
call
mov
jmp
add
add
push
add
addr16
les
add
mov
add
add
mov
ror
add
stos
add
faddl
add
out
add
pop
lods
add
lcall
jmp
call
push
mov
cltd
add
add
test
data16
mov
add
js
stc
add
add
add
js
add
lock
mov
sti
pop
add
lock
iret
fldl
add
ret
add
add
add
cltd
cli
mov
in
clc
lcall
or
enter
adc
add
sub
push
push
lea
push
push
push
push
push
lea
push
call
cltd
add
add
movsl
iret
std
movsb
mov
xlat
xchg
fdivrs
pop
mov
mov
add
pop
lret
push
addb
pop
jbe
add
add
add
testl
add
add
add
add
add
jne
mov
data16
add
add
add
xor
call
add
add
add
jnp
add
mov
aam
roll
jl
add
out
mov
arpl
add
testb
mov
add
add
clc
sub
pop
pop
shr
push
add
inc
pop
and
push
push
push
push
lea
push
push
push
push
call
fistpl
pop
jmp
mov
add
add
cmc
mov
shrl
add
add
add
add
add
lcall
jmp
push
push
call
add
pop
mov
idivl
js
shlb
mov
loope
mov
lock
add
add
add
add
fs
imul
jo
scas
mov
addl
add
jo
scas
add
mov
sub
pop
cmp
jne
leave
push
add
ror
inc
pop
ret
push
shr
pop
push
mov
push
shl
sub
pop
add
push
shr
not
sub
sub
pop
push
push
push
push
lea
push
lea
push
push
push
call
js
add
shll
in
enter
stc
out
pop
jnp
add
add
mov
mov
mov
out
pop
orl
cmpsb
add
roll
jp
add
add
rolb
jbe
jmp
push
add
mov
add
sub
pop
push
push
push
push
push
call
add
add
out
cld
stos
mov
lods
cli
add
add
add
add
mov
xchg
add
add
mov
ficoml
lea
add
push
out
lods
popf
add
fs
cld
add
add
lods
add
in
add
mov
add
iret
push
add
push
push
call
mov
ljmp
add
add
loopne
test
add
roll
mov
mov
ret
test
fstps
add
add
add
add
add
mov
push
add
in
clc
pop
mov
push
push
lea
push
push
push
push
call
adcl
mov
mov
sti
add
mov
add
add
jp
int3
pop
shlb
add
pop
mov
mov
imul
add
mov
fwait
add
add
mov
mov
loope
pushf
add
jecxz
add
fldcw
lcall
push
cmp
shl
pop
sub
push
shl
shl
pop
mov
push
lea
push
lea
push
push
push
call
aam
rolb
add
roll
add
add
mov
mov
add
add
in
add
push
jl
add
jb
mov
add
mov
add
ljmp
filds
add
add
iret
in
sub
pop
shr
add
push
inc
xor
pop
mov
push
push
push
lea
push
call
add
add
mov
popf
add
mov
fwait
jbe
mov
popf
xchg
loope
incb
mov
xchg
notl
jno
iret
add
mov
sub
pop
add
mov
push
not
dec
pop
add
push
inc
lea
pop
xor
mov
push
push
push
push
push
push
push
call
arpl
leave
jge
add
out
rclb
scas
add
mov
aam
cli
fldl
loop
add
add
clc
add
add
mov
add
cli
popf
out
scas
add
add
test
test
add
add
cld
sub
pop
and
push
shr
dec
pop
rol
rol
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
lock
add
add
mov
add
loope
test
xchg
jno
out
mov
push
mov
add
ljmp
mov
pushf
add
mov
fnstenv
je
imul
lcall
add
pop
inc
cmpb
jne
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
jle
mov
test
out
add
add
add
mov
add
add
stos
mov
add
add
add
lods
loop
add
cmc
sahf
push
push
add
push
mov
int
lods
sub
pop
add
cmp
je
push
push
push
push
lea
push
call
mov
cmc
pop
pop
out
js
lahf
hlt
out
iret
add
add
je
stc
loop
sti
add
xorl
mov
shll
mov
in
fisubrs
in
in
lcall
ret
adc
push
push
push
push
push
call
add
mov
mov
cmpsb
jmp
jl
add
les
add
push
add
add
xchg
ljmp
add
add
pop
bound
push
add
add
jl
add
pop
movsb
add
add
out
in
add
popl
jnp
add
test
push
push
push
push
push
push
lea
push
lea
push
call
add
popa
add
add
roll
add
pop
add
add
jle
fldt
add
add
add
xchg
add
add
add
rclb
push
push
push
push
push
lea
push
call
aam
add
pop
pusha
add
add
imul
xchg
xchg
add
sarb
add
addl
imul
mov
add
mov
addr16
bound
add
jno
sub
pop
pop
push
shr
pop
pop
pop
push
push
push
push
push
push
push
call
jbe
imul
add
js
aad
fwait
add
nop
imul
xchg
enter
xchg
add
sahf
mov
mov
jns
push
in
not
add
pop
xchg
add
pop
stc
cld
mov
pop
mov
push
int
in
iret
push
iret
jne
xchg
stos
cld
popf
std
enter
pop
pop
pop
push
push
call
add
hlt
add
jo
jl
add
leave
push
xchg
lds
add
add
add
mov
add
add
add
shrb
repnz
add
pushf
andb
arpl
bound
cmpsl
std
add
mov
clc
pop
leave
ret
push
push
push
push
push
push
push
lea
push
push
push
call
add
cmc
in
add
stc
imul
jno
imul
add
cld
add
add
add
add
add
add
cmpsb
addl
lcall
push
adc
push
or
fcomps
push
sub
pop
push
push
xor
shr
pop
add
mov
push
sub
pop
testw
pop
push
sub
pop
pop
mov
push
xor
sub
xor
pop
push
call
push
lea
push
push
push
call
in
imul
mov
add
add
add
jno
test
push
int
add
in
mov
add
add
pop
add
mov
pop
test
lock
add
push
loope
add
add
stos
sar
popa
lret
pop
add
add
test
insb
add
add
lcall
xor
push
add
sub
pop
pop
push
sub
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
ja
sti
mov
add
add
add
fstpl
xchg
in
insb
add
mov
cli
loopne
add
add
xchg
mov
enter
pop
fdivr
push
add
ja
add
push
push
push
push
push
push
push
call
add
mov
sarb
loopne
bound
aam
mov
add
ficompl
mov
mov
add
add
fisttps
in
in
pop
pop
push
push
push
push
push
push
push
push
push
call
cmpsb
test
add
arpl
rolb
add
add
lret
jp
add
sub
pop
leave
ret
push
add
xor
xor
pop
push
mov
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
mov
jle
mov
add
push
add
add
lret
push
lcall
lret
imul
push
push
stc
add
mov
jbe
outsl
add
add
add
lcall
hlt
push
push
push
push
push
push
call
mov
push
add
test
push
jl
add
mov
aam
ret
fidivs
xchg
jne
out
addr16
add
jno
mov
jge
xchg
add
pop
sub
add
fs
mov
call
add
add
add
push
out
jecxz
sub
pop
push
push
lea
push
push
push
push
push
push
call
bound
movl
add
lahf
ja
add
out
add
add
in
add
push
jge
imul
add
add
std
jmp
pushf
add
pop
add
add
scas
cwtl
add
add
sahf
sub
pop
push
push
not
pop
push
push
push
lea
push
push
push
call
add
add
add
add
add
mov
jbe
add
div
fwait
loopne
mov
repnz
add
popf
lock
add
fcmovne
cmpsb
addb
sub
pop
push
push
shr
add
pop
mov
push
shl
pop
push
push
add
rol
sub
lea
pop
pop
lea
push
lea
rol
sub
pop
sub
mov
push
lea
pop
shr
add
push
push
call
sahf
mov
add
jmp
pop
cwtl
out
shl
add
push
shll
mov
jb
data16
outsl
fsub
rolb
std
cld
fbld
roll
lods
aam
leave
push
enter
jmp
add
jp
xchg
xchg
xchg
pop
stos
add
bound
mov
add
jp
in
clc
pop
mov
add
push
lea
push
push
lea
push
push
call
add
add
lret
xchg
movb
jl
add
lahf
mov
in
mov
test
add
fisubrs
std
add
nop
pop
cltd
add
jo
mov
jbe
rolb
scas
jl
std
xchg
fwait
bound
xchg
add
add
add
add
add
sub
pop
pushl
push
add
pop
popl
push
push
push
lea
push
lea
push
push
push
call
popf
add
jp
insb
cli
fildl
xchg
pop
add
add
add
popl
add
add
mov
je
jae
sub
pop
mov
add
push
push
lea
push
push
push
call
test
popl
add
pop
cmc
enter
add
push
ret
mov
push
int3
cmpsb
popf
add
pop
add
add
add
cmpsl
je
xchg
jp
add
mov
jmp
data16
in
in
lcall
testb
lea
push
push
push
push
call
add
insb
add
cmc
add
rolb
fs
shl
xchg
add
andb
jp
add
aam
mov
add
out
add
jmp
repnz
add
adc
ja
lret
in
push
add
add
icebp
add
mov
mov
add
add
mov
add
js
pop
int3
pop
addb
aad
ror
mov
loopne
jns
add
jne
add
in
stos
ljmp
lods
loopne
add
lock
aad
stos
add
addb
add
lcall
rcll
xlat
pop
xor
push
push
push
push
lea
push
lea
push
push
call
add
add
add
js
add
add
rol
pop
add
into
lock
add
sahf
pushf
mov
lods
loope
add
add
mov
mov
add
xchg
add
imul
pusha
add
lahf
loope
sub
pop
rol
nop
push
push
push
push
push
lea
push
call
push
add
ljmp
add
rclb
add
add
xchg
cmpb
testb
lcall
movsl
add
jns
mov
push
mov
andl
clc
add
add
pop
bound
add
add
test
jns
add
mov
loopne
pop
sub
pop
nop
push
rol
not
pop
xor
nop
push
ror
xor
shl
pop
nop
push
push
push
push
push
call
mov
loopne
push
jb
in
scas
lret
loope
mov
jo
add
jno
add
add
pop
mov
add
mov
mov
mov
add
mov
add
in
add
rcr
add
out
add
scas
add
in
lcall
push
push
push
lea
push
lea
push
call
pop
in
xlat
cmpsl
mov
ret
faddp
add
imul
add
add
add
cmc
ja
add
int
pop
popa
add
movsb
add
mov
add
cmpsb
add
add
xchg
add
stos
push
mov
add
in
add
add
mov
xchg
sub
pop
nop
push
lea
not
not
sub
pop
nop
push
inc
rol
lea
pop
cmpb
jne
push
push
call
jle
ja
add
xchg
add
flds
add
add
mov
cld
push
jbe
pop
iret
add
add
add
loope
pushf
fs
pop
cli
in
lea
add
inc
pop
ss
push
xor
pop
nop
push
rol
inc
pop
nop
push
not
pop
cmp
je
push
push
push
push
push
call
pop
mov
test
in
pop
scas
pop
jle
fstp
ljmp
mov
add
mov
jecxz
lret
xchg
mov
aad
mov
movsb
fmuls
in
in
lcall
nop
push
lea
push
call
ja
mov
arpl
mov
add
jge
movsl
jnp
int
jle
sahf
mov
movsl
add
add
add
gs
add
shll
mov
add
cmc
mov
add
ffree
add
add
pusha
mov
mov
add
test
sub
pop
inc
nop
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
cltd
test
push
mov
add
fstl
add
mov
cmpsl
add
shrl
jl
pop
test
add
jnp
xchg
add
add
add
ficoml
pushf
add
rolb
mov
add
mov
in
add
lcall
cmp
jb
push
shl
pop
xor
push
shr
sub
shl
pop
jmp
push
lea
push
push
push
lea
push
push
lea
push
push
call
fisttpl
add
xchg
mov
mov
je
add
data16
xchg
ljmp
add
pop
add
cld
add
add
shlb
mov
imul
loopne
in
loopne
lcall
push
and
rcll
call
loope
add
cltd
mov
mov
push
lret
jle
add
fsubr
pop
add
add
in
add
add
add
fdiv
add
add
je
pop
mov
cwtl
in
roll
nop
cld
add
sub
pop
movzwl
mov
push
add
pop
add
push
xor
shr
pop
mov
push
shr
xor
pop
xor
xor
push
push
push
push
push
lea
push
push
push
push
call
add
pushf
pusha
les
mov
add
add
jae
add
add
notl
ror
sti
add
arpl
leave
into
leave
add
lret
lret
add
out
fiadds
in
add
fsubr
add
push
test
add
add
fwait
sub
pop
shl
push
push
push
push
push
lea
push
push
push
push
push
call
add
leave
pusha
outsl
xchg
aad
in
add
add
stc
add
lods
add
add
add
push
add
in
xchg
pop
mov
in
fdivr
lcall
dec
nop
add
loope
push
sub
pop
xor
push
ror
lea
ror
pop
shl
push
shl
pop
xor
mov
push
ror
add
lea
sub
pop
add
pop
push
not
rol
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
jp
jbe
add
cmpsl
stos
add
out
xchg
aad
cli
xchg
add
add
in
imul
add
add
iret
aam
add
add
jle
mov
loopne
lcall
push
inc
rol
pop
pop
push
shr
pop
leave
push
add
pop
ret
push
lea
push
lea
push
call
pop
add
jl
nop
add
add
add
ljmp
je
add
call
push
cmp
hlt
lcall
push
sub
ror
pop
mov
push
push
lea
push
push
push
push
push
call
incb
pop
ljmp
add
push
cli
aam
fnstenv
add
jns
pop
mov
fnsave
movsb
mov
mov
add
push
add
loop
mov
xchg
in
in
lcall
push
push
push
push
push
push
call
add
jge
in
add
scas
add
mov
sti
jle
add
add
movsl
out
add
xchg
in
mov
lock
mov
arpl
xchg
add
add
rolb
pop
lcall
add
add
push
add
mov
mov
shlb
mov
push
add
sub
sub
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
jl
add
add
scas
add
movb
popf
rcl
jge
add
ret
clc
jns
add
add
pop
add
sahf
mov
add
add
push
fucomip
mov
add
lea
add
mov
loope
pop
bound
jmp
cmpsb
jbe
call
add
sub
pop
push
mov
push
xor
lea
not
not
pop
mov
push
push
call
add
ja
pop
mov
out
xchg
movl
mov
js
add
add
faddl
push
mov
hlt
add
push
xchg
mov
xchg
mov
rolb
mov
movb
mov
add
test
add
notb
ficoms
fsubr
push
mov
fwait
add
clc
lcall
jge
test
je
push
push
push
push
call
leave
shrb
add
fadds
call
jnp
add
test
jmp
fmulp
fldln2
add
xchg
call
add
in
lock
lcall
jno
push
push
push
push
push
lea
push
push
call
arpl
add
pop
jmp
add
rolb
add
mov
cmpsl
add
add
add
add
in
stc
js
add
add
mov
in
lcall
testb
popa
add
add
push
call
add
jne
add
subb
add
add
jae
add
xchg
std
in
rolb
mov
cli
add
stos
add
add
add
hlt
pop
mov
push
add
dec
add
ror
pop
mov
mov
push
push
call
add
add
out
jne
movsl
add
les
push
mov
mov
push
pop
faddl
cmpsb
lret
add
mov
movsl
imul
ljmp
repnz
add
pop
inc
cmp
je
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
mov
jbe
xchg
add
cmpsw
std
rcrb
pop
mov
jns
add
add
add
add
call
cld
sub
pop
test
je
push
ror
pop
mov
push
shr
shr
inc
pop
inc
cmp
je
push
shl
add
ror
sub
pop
test
jne
push
pop
xor
push
push
push
push
lea
push
push
call
scas
clc
lock
add
shll
les
add
js
bound
testl
jmp
add
in
jp
add
pop
add
xchg
icebp
into
add
movsl
sub
pop
pop
pop
push
shr
shr
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
call
push
rclb
xchg
mov
mov
add
mov
add
add
xchg
mov
insb
pusha
cmpsb
add
addr16
flds
add
stc
push
cmpl
push
xchg
add
lds
add
sub
pop
pop
push
push
push
push
lea
push
push
push
call
bound
add
enter
add
addb
add
call
pop
pop
scas
icebp
add
pop
les
mov
mov
add
add
cltd
jb
add
fiadds
lcall
ret
push
xor
not
pop
mov
push
push
push
call
add
add
add
mov
lret
xchg
notl
js
mov
mov
mov
mov
stos
add
add
test
add
fidivrs
add
add
add
sub
pop
inc
push
push
push
push
push
call
add
mov
lea
test
mov
enter
mov
movsl
add
add
shrb
lock
jb
mov
pop
stos
jae
xchg
bound
add
add
shlb
insb
mov
cmpsl
add
jle
stos
mov
xchg
out
add
popa
out
aam
hlt
add
lock
push
add
dec
pop
lea
mov
push
lea
xor
pop
test
je
push
xor
add
inc
pop
mov
add
push
push
push
push
push
push
lea
push
lea
push
push
call
xchg
cmpb
mov
in
test
scas
ret
push
lds
mov
out
push
add
lcall
loopne
test
decl
sub
pop
test
je
push
sub
add
xor
not
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
loop
jno
loope
xchg
xchg
sahf
add
add
in
test
add
add
fwait
clc
lcall
lea
add
mov
lcall
roll
rol
pop
cmp
je
jmp
push
not
add
shl
pop
xor
push
push
lea
push
lea
push
push
push
push
push
push
push
call
test
mov
mov
jns
lret
add
add
add
add
xchg
sbbb
test
int3
add
add
outsl
testl
in
fdivr
lcall
pop
push
push
push
lea
push
push
push
lea
push
call
jb
cmpsl
stos
outsl
add
add
add
add
int3
cltd
xchg
add
movsl
mov
add
mov
imul
mov
loope
pop
mov
out
jp
add
push
pushf
repnz
pop
mov
sarb
iret
add
add
push
not
pop
pop
push
xor
pop
leave
push
add
pop
ret
push
lea
push
push
lea
push
push
push
call
jge
push
pop
add
mov
add
mov
lcall
add
xchg
mov
add
aad
addb
add
out
cmc
out
jmp
add
lret
mov
mov
imul
add
add
add
add
lcall
inc
call
inc
lea
push
push
call
mov
add
push
mov
add
cmpsl
mov
lea
xorb
out
add
xorb
cld
add
add
add
ja
add
add
push
push
push
push
push
push
push
push
push
call
xchg
add
roll
add
add
imul
movl
push
jbe
out
add
jne
cmc
cltd
add
add
lret
shl
pushf
insb
add
fwait
jb
loope
pop
add
add
adcb
add
flds
mov
lcall
pop
push
push
push
push
lea
push
push
push
call
pop
jo
xlat
cmc
scas
data16
push
roll
add
xchg
add
add
loop
pop
mov
add
add
xchg
fs
data16
pop
test
mov
mov
xchg
xlat
xchg
fnsave
std
jns
filds
add
add
mov
sub
pop
pop
push
not
pop
leave
push
push
push
push
push
push
push
push
push
call
add
lret
push
add
insb
add
add
push
scas
mov
add
in
add
add
add
jne
ret
jmp
mov
add
mov
add
outsl
add
lcall
or
push
sub
shr
pop
mov
push
add
add
add
pop
pop
pop
push
dec
rol
not
add
pop
pop
pop
push
add
lea
add
inc
pop
leave
push
push
push
push
push
push
lea
push
push
call
in
testl
add
add
jne
add
add
add
jp
add
add
add
xchg
push
aam
add
lcall
or
xor
cmp
mov
cmp
xor
adc
and
adc
dec
cmp
add
adc
popa
cmp
xor
adc
cmp
push
mov
push
jle
mov
out
xchg
mov
mov
pusha
data16
scas
inc
aam
pop
add
push
rolb
xchg
pop
mov
cwtl
jge
or
lahf
adc
icebp
add
push
mov
std
scas
imul
mov
mov
ds
fucom
pop
std
jae
mov
xor
sub
sbb
add
jb
arpl
enter
inc
sub
loopne
ja
hlt
xor
test
or
jae
mov
or
xchg
xchg
pop
call
jmp
jno
mov
gs
xchg
dec
int
jae
cld
mov
mov
shrb
loopne
popf
and
jecxz
pop
aaa
inc
xor
mov
imul
mov
fdivrl
adc
mov
mov
cs
fidivl
rclb
xor
fnsave
xor
jle
imul
hlt
imul
sarl
enter
xchg
or
jmp
inc
in
dec
xor
in
cmpsl
add
js
insl
mov
flds
xlat
adc
aas
pop
xchg
dec
dec
mov
add
stos
jns
in
xchg
mov
push
pop
cwtl
pop
lret
in
loop
push
test
mov
orb
mov
inc
std
sbb
cltd
cmp
add
test
sbb
pop
jb
sub
xlat
xchg
inc
cmc
pop
xchg
inc
mov
lods
dec
daa
push
ljmp
jle
out
fs
inc
sub
lahf
fadds
vpunpcklbw
fistpll
iret
subb
mov
imul
lahf
jo
jle
stos
pop
outsl
pop
and
adc
mov
jg
jb
dec
xor
or
add
xchg
add
clc
mov
mov
mov
cmovp
mov
sbb
xorl
icebp
pop
mov
ret
test
push
enter
add
ss
ss
test
je
cmp
rorb
sbb
pop
push
mov
shl
sub
mov
xor
movsl
fcomps
adc
cmp
cmp
mov
push
inc
and
sub
sarb
mov
push
test
inc
mov
insb
push
in
and
test
and
jb
pop
mov
cmp
fsubrs
loop
sbb
je
gs
in
test
pushf
jno
add
sbb
ret
cmpsb
jne
xchg
stc
nop
in
stc
mov
into
nop
subl
pop
pop
add
loopne
xor
stos
jl
inc
mov
ds
pop
xchg
and
test
pop
ret
mov
movsb
iret
aas
incb
js
add
int3
aad
xchg
enter
cwtl
mov
int3
mov
leave
mov
dec
imul
jo
icebp
int3
pop
rcr
push
int3
testl
xchg
lods
icebp
mov
or
fwait
cmp
add
mov
mov
scas
aad
daa
ficompl
sub
jmp
add
sbb
jno
mov
adc
fwait
enter
aad
sarl
xor
pushf
pop
jae
mov
mov
mov
test
dec
rol
or
stc
in
push
xchg
cmpsl
sub
hlt
xlat
hlt
adc
sahf
lahf
test
fs
pop
lea
sbb
inc
outsl
sub
std
ret
xchg
jnp
or
or
pop
adc
insb
xchg
pop
adc
jle
dec
ljmp
test
or
add
mov
mov
roll
jo
adc
mov
xor
sbb
rolb
push
adc
dec
data16
jbe
pop
loope
pop
imul
mov
rorb
lcall
sarb
scas
push
xchg
adc
lods
outsl
cmp
xchg
jmp
lret
aas
or
ljmp
mov
popa
sti
out
mov
add
jne
add
push
add
inc
dec
xchg
xchg
push
test
stos
mov
clc
sub
cmp
lods
inc
inc
in
add
clc
orl
out
mov
gs
mov
ret
pop
xchg
dec
mov
cwtl
ret
adc
push
sub
je
jbe
xchg
out
rcll
cmp
cltd
mov
sti
ret
hlt
dec
not
fwait
popa
mov
dec
cmp
test
out
pop
cmp
add
in
inc
clc
ret
xor
xor
arpl
cwtl
lock
mov
lods
xor
fmuls
rclb
or
inc
test
sub
adcb
lds
jno
add
cmp
test
lcall
push
adc
sbb
jnp
out
jecxz
sub
arpl
xor
in
mov
cmp
push
push
enter
push
fimull
mov
popa
ja
sbb
mov
clc
sbb
push
pop
cs
xchg
outsb
jge
add
je
jns
dec
jb
pusha
sbb
lahf
pop
out
inc
and
mov
and
and
mov
outsb
or
cld
nop
fisttpl
xchg
sub
sub
outsb
mov
fmulp
iret
insb
ret
cwtl
mov
dec
jnp
inc
repz
scas
and
ret
enter
test
es
adc
jne
test
cmp
add
add
aaa
add
repnz
xchg
jbe
loope
mov
arpl
push
cs
cmpsl
inc
aam
int3
or
jle
cmp
dec
lds
call
stos
xchg
shll
loop
xchg
pusha
in
mov
lods
mov
mov
dec
imul
mov
cmp
pop
jmp
sbb
repnz
dec
out
or
and
add
arpl
jno
adc
gs
or
or
xor
xor
adc
mov
inc
aas
sbb
es
and
sti
sbb
aas
into
out
xchg
fsubl
pop
adc
cltd
inc
inc
gs
mov
lock
xor
push
push
fsts
test
movsl
dec
fldenv
inc
add
ret
negl
ljmp
pop
add
inc
push
inc
dec
repz
xchg
mov
scas
mov
adcl
jb
rolb
mov
ljmp
mov
push
jne
jnp
jno
aas
lcall
sahf
sbb
leave
movsb
test
test
push
cmp
sub
mov
out
cmp
lock
dec
jecxz
adc
jmp
pop
sbb
push
int3
push
cmp
adc
push
lret
push
inc
push
xorl
aaa
and
out
test
jge
push
and
push
mov
stc
push
sbb
rcrl
call
inc
lahf
add
inc
cltd
cld
loop
cs
mov
fisubrs
sub
fdivrl
test
dec
inc
scas
dec
in
and
scas
mov
and
mov
mov
pop
pop
dec
imul
jae
adc
outsl
divl
mov
adc
hlt
lock
scas
mov
cs
or
arpl
arpl
cmpsl
outsl
add
mov
and
mov
in
pop
pushf
std
xchg
lret
sbb
xchg
aas
lret
movsl
sbb
mov
or
jnp
jmp
inc
hlt
pop
jae
adc
push
fwait
add
jmp
mov
xorl
add
hlt
ret
lods
jbe
push
xor
lret
mov
pop
sub
push
xchg
pop
inc
pop
and
cmp
cmc
testl
xchg
xchg
mov
and
test
or
pop
into
pop
ud0
lea
test
loop
or
loop
outsb
fwait
lods
icebp
xchg
pop
aam
fbld
loope
mov
sbb
jp
jns
jae
mov
test
loope
in
addr16
push
pop
pop
stc
push
mov
ja,pn
ja
movsb
mov
cs
pop
aad
ss
mov
xchg
imul
sub
addr16
jnp
xlat
xchg
scas
dec
jge
dec
or
cli
pop
or
pop
dec
cmp
jmp
inc
cmp
fsts
or
mov
pop
or
fidivrs
pushf
jae
loopne
jbe
mov
out
sub
test
xchg
pusha
cmp
movsb
js
loope
mov
inc
jnp
sbbb
testb
mov
xchg
lds
jbe
sbb
mov
mov
pop
clc
pop
sub
sahf
js
es
or
fldl
daa
mov
sbb
je
or
cmp
ss
into
mov
stos
rolb
pop
inc
xor
shl
jns
jl
call
mov
push
sub
add
es
or
cmpsl
adcb
in
sbb
jbe
clc
adc
lret
mov
mov
test
jns
jmp
jb
mov
xchg
dec
shl
les
push
ds
mov
repz
test
outsb
push
mov
jp
pop
mov
push
cmp
movsl
gs
pop
cwtl
movb
das
jae
dec
cs
jb
mov
shr
jl
cmpsb
sbbl
or
jno
out
sub
cmp
jmp
fwait
in
xchg
icebp
or
rcll
sub
pusha
aaa
scas
sahf
out
gs
push
loop
js
rolb
shll
lret
orl
sbb
mov
test
cmp
pop
into
orl
xor
lock
push
jne
cli
aad
mov
sub
add
aaa
xchg
popa
dec
jae
pop
mov
xor
sbb
cmp
std
xchg
sub
and
lods
sub
out
jmp
and
adc
cmpsb
mov
sub
pop
and
lock
mov
mov
loop
scas
stos
cmc
je
cmp
sti
mov
mov
pop
repnz
jmp
pushf
push
xchg
xchg
xchg
mov
push
loop
std
leave
out
xor
jg
out
imul
mov
int3
jb
leave
loop
mov
jge
test
loop
push
sbb
pop
sahf
inc
es
icebp
xchg
jo
mov
out
daa
mov
idivl
leave
fcompl
dec
fsubrp
mov
outsb
pusha
jnp
outsl
adc
fwait
inc
xchg
in
sbb
mov
addr16
pop
cmp
xchg
pop
jge
jecxz
pop
mov
inc
dec
icebp
fldt
dec
xor
cmp
lea
imul
cmp
test
push
pop
vmwrite
loopne
clc
repnz
jnp
shrb
subb
stc
jmp
mov
mov
aas
std
test
fmull
gs
fwait
aam
push
inc
fldln2
int
pop
sub
js
pop
cltd
enter
dec
in
jae
fiaddl
lea
cmp
inc
push
add
inc
jbe
filds
movsl
idivb
pop
push
fbld
mov
sbbl
into
dec
or
je
fistps
push
mov
sahf
add
stos
xchg
xor
mov
popa
dec
mov
sbb
adc
inc
imul
jg
sub
add
and
js
xchg
test
lds
scas
divb
ja
loopne
mov
jmp
cmp
in
test
mov
movb
or
fcomip
pop
lret
clc
fs
push
add
xchg
push
loop
add
pop
loope
test
lcall
pop
push
mov
cmp
cmc
ljmp
loope
and
jae
imul
lods
mov
jge
enter
xchg
dec
pop
sub
mov
ret
pop
jae
movsl
xadd
sub
mov
movsb
xchg
push
lret
push
nop
xchg
sub
loop
in
inc
inc
pushf
mov
xor
mov
sub
adc
or
daa
repz
mov
insl
jg
xchg
stc
ss
rclb
lock
sub
repz
push
sub
add
out
pop
jmp
mov
into
pusha
mov
repz
jno
or
in
jle
insl
jbe
cmp
xor
sbb
adc
jae
mov
or
les
insl
mov
pop
sti
out
inc
lea
mov
cwtl
xor
je
insl
xor
lods
lahf
mov
push
dec
xor
xor
dec
dec
fwait
test
mov
js
fiaddl
cmp
cmpsb
mov
out
or
addb
mov
and
sub
dec
xchg
in
fchs
push
lea
in
scas
jno
cltd
jnp
mov
and
call
inc
gs
out
mov
dec
leave
loopne
adc
xlat
rcrb
mov
mov
sbb
sbb
cmc
in
xor
roll
aam
fsubrl
add
mov
int3
mov
xor
repz
push
dec
or
stos
xchg
xchg
cmp
mov
aaa
notb
mov
negl
dec
call
adcl
or
cmc
shll
sbb
int
jmp
scas
xchg
mov
lock
dec
and
subb
push
int
lret
popf
dec
cltd
or
mov
mov
and
mov
lret
push
in
cmpsl
icebp
mov
lahf
adcb
int
cs
or
cmc
sahf
xchg
sbb
stos
hlt
mov
xlat
push
jns
xchg
sahf
jle
cmp
outsl
lea
push
sub
xchg
jp
repnz
adc
pusha
mov
lds
xchg
hlt
pop
ret
call
mov
into
inc
imul
ljmp
lds
adc
adc
shlb
mov
aam
pop
and
lret
mov
cmp
fcomps
jl
cmp
popf
xchg
inc
fcoml
movl
stc
fidivs
xor
jecxz
cltd
lea
outsb
leave
sbb
cmp
in
and
push
out
adc
cmp
jnp
xchg
xor
add
xchg
stc
pop
add
xchg
data16
mov
cmp
insl
je
fs
lods
roll
xchg
and
jl
loop
dec
data16
in
insb
out
minps
sti
bound
sbb
jge
fcoml
sbb
jnp
push
andl
fs
sbb
adc
aad
inc
jns
push
mov
jae
or
ret
stc
mov
xor
scas
ret
out
ja
das
xor
add
add
adc
jmp
and
cld
lods
ror
adc
out
jb
int3
push
sbb
pushf
fsubrl
add
mov
push
hlt
enter
sub
test
ret
dec
test
and
mov
xchg
sub
loopne
adc
cmp
cwtl
es
inc
lods
push
orl
dec
out
xchg
hlt
jp
jnp
lret
mov
jbe
stc
das
jns
sar
and
sub
shrl
stos
push
loopne
ljmp
or
shlb
inc
dec
mov
sbb
xor
ficoml
rcr
cmp
in
jno
mov
inc
fwait
shlb
loopne
pushf
cmp
in
pushf
lret
push
pushf
xchg
sbb
or
push
out
jmp
sbb
sub
clc
pop
rclb
inc
scas
fdivrl
push
sbb
popa
cltd
mov
iret
xor
test
or
jle
aad
cmpsl
xor
push
and
int3
fidivrl
dec
pop
test
inc
out
aad
and
test
bound
scas
fldln2
outsl
nop
stos
xchg
ror
mov
rcl
lcall
mov
sahf
push
push
xor
push
sti
hlt
xor
cmp
testb
pusha
roll
pusha
mov
sarb
in
xchg
or
dec
mov
dec
sbbl
pushf
adc
ljmp
fwait
mov
dec
enter
je
cli
fsubl
add
popa
xchg
cmp
repnz
and
sahf
outsl
lret
and
adc
push
ds
insl
in
cltd
sub
int3
mov
shll
xchg
pop
mov
xchg
flds
mov
lea
pop
xchg
push
pop
je
xor
iret
push
mov
jg
lahf
popf
leave
sub
and
sub
sbb
pop
dec
mov
adc
and
mov
out
out
repnz
pop
rclb
adc
and
arpl
testb
cmp
adc
inc
push
xchg
mov
in
cmc
mov
shr
dec
lret
mov
imul
fmuls
shll
mov
repnz
jle
sub
cmp
mov
mov
dec
movsb
sub
outsb
push
jnp
cld
arpl
mov
aas
jb
add
xchg
sub
cld
enter
and
mov
jne
test
mov
pop
push
pop
imul
cltd
pop
sub
dec
add
nop
aad
xor
retw
add
sbb
push
cmpsb
call
xchg
fstps
jmp
push
fdivr
adcl
xchg
gs
fs
dec
aaa
nop
fldenv
movsl
loop
scas
mov
ficompl
pop
and
aaa
ds
mov
cmp
fbstp
cmc
pop
sarb
mov
mov
std
roll
leave
or
dec
ss
dec
pop
pop
adc
movl
je
cltd
lods
and
mov
outsl
rcrb
movsl
cmpl
mul
mov
jle
out
in
imul
mov
call
dec
adc
je
sub
stos
sti
je
ret
loopne
push
out
in
or
mov
adcb
xchg
jmp
or
add
repnz
mov
push
xor
or
imul
dec
rorl
jecxz
mov
out
push
rorb
lret
pop
bound
scas
into
mov
push
loopne
dec
outsl
ljmp
dec
mov
das
mov
js
dec
add
stos
rcrl
xchg
movsb
mov
shrb
adc
punpcklbw
sbbb
adc
pop
mov
mov
je
outsl
or
outsb
mov
mov
fsts
enter
out
ds
cs
lock
iret
cwtl
xor
repz
ret
test
pop
popl
pop
pop
mov
dec
out
xchg
test
outsb
mov
mov
mov
mov
sahf
mov
int3
add
push
xor
addr16
mov
nop
sub
loop
mov
test
mov
adc
mov
mov
dec
mov
fdivrs
add
mov
push
push
inc
loope
mov
fisubrs
loop
inc
stc
lods
test
rorl
push
movsb
lea
loope
leave
icebp
xor
fistpll
jo
cs
xor
fsubrs
scas
jl
pop
int
mov
jl
lcall
jbe
andl
mov
faddl
sub
lods
popfw
mov
pop
dec
enter
xchg
jg
add
inc
insl
mov
jmp
movsb
pop
xchg
xlat
ljmp
fldt
sub
mov
fdivr
int
sub
aaa
test
popf
jns
mov
ret
mov
shlb
mov
dec
testl
cld
xlat
add
int
sbb
in
adc
stc
cmp
xchg
aas
shlb
mov
lahf
bound
jecxz
sub
and
or
sbb
sub
mov
movsl
bound
and
adc
outsb
mov
inc
scas
inc
inc
adc
negb
jmp
mov
orl
hlt
mov
insb
int3
sahf
rorl
les
xchg
pop
repz
arpl
sub
xor
jb
inc
dec
je
xor
jp
mov
mov
and
int
sbb
lret
pusha
jnp
sub
push
stos
dec
in
push
add
sbb
pop
popf
or
or
sub
insl
gs
dec
pop
test
jmp
imul
mov
inc
test
push
movsb
iret
and
push
outsb
push
cmp
fmuls
add
push
les
add
sbb
inc
jecxz
xlat
movsl
pop
jmp
pop
je
xchg
fnstenv
dec
std
add
and
loope
cmp
aaa
or
cmp
cmp
in
ljmp
inc
cmpb
adc
int
or
add
mov
jbe
pop
ret
push
out
ret
inc
lret
or
mov
cmp
aam
and
je
jecxz
cli
int3
iret
mov
out
insl
mov
mov
mov
sub
adc
iret
inc
xor
cmpsl
arpl
popf
mov
repz
adc
cmp
data16
in
sar
jbe
dec
mov
mov
subb
leave
sub
aam
cmp
ds
push
in
dec
inc
xchg
cmp
and
and
xchg
cmp
lods
and
mov
out
xchg
inc
ret
and
sarl
or
addr16
mov
dec
sub
sbb
xor
mov
xor
ret
ficoml
mov
pop
scas
int
push
xlat
xchg
jne
fcmovu
adc
cmp
cmp
push
hlt
aam
push
cmp
cmpsl
out
mov
ja
mov
or
push
ja
enter
pushf
sbb
test
into
in
cmc
popf
pop
sti
filds
jg
jno
xor
mov
jne
stc
insb
aad
sub
mov
cmp
jge
add
cmp
xchg
test
pop
mov
cmp
xchg
and
cmc
push
mov
fadds
pop
xor
lds
and
aam
cmpsl
fadds
fldenv
xchg
lret
or
sbb
cld
pop
pop
add
xchg
cmpsb
or
add
aaa
mul
enter
shrb
inc
dec
jg
xchg
fs
insl
lretw
lahf
adc
repnz
lock
cmp
xchg
pusha
shlb
bound
or
mov
stos
aaa
ja
sbb
dec
lahf
pop
sub
bound
adc
nop
mov
push
add
pop
xlat
mov
bnd
push
cld
inc
lock
stos
dec
mov
outsb
mov
inc
push
jp
jle
lock
inc
push
fsubr
in
push
or
cmpsb
mov
divl
out
pop
loop
in
and
test
cmp
cmp
sbb
fmuls
jle
scas
jg
mulb
scas
je
sbb
cmp
pop
mov
cmp
aaa
call
sbb
adc
daa
and
loopne
or
popf
outsb
enter
xchg
insl
sub
fsubrs
rcl
push
sub
cmp
inc
push
sub
fs
fidivrs
adc
adc
and
jo
sub
add
jne
xchg
inc
scas
outsl
ret
in
add
enter
push
aam
mov
xlat
fildl
clc
sub
push
rcl
call
xor
inc
inc
lret
dec
push
lret
mov
lret
push
inc
mov
add
neg
inc
or
xor
jae
orb
push
lds
mov
sub
ljmp
bound
shlb
int
dec
jne
mov
sar
test
sbbl
cmp
sar
stos
test
loope
xchg
cli
outsl
stos
pop
insl
cltd
and
dec
mov
fistpll
fisubrl
imul
pop
gs
outsl
inc
pop
add
or
dec
fnstsw
mov
lret
inc
insb
stos
negb
in
and
mov
mov
xlat
je
jge
jl
xchg
pop
lods
insb
add
fsubrp
adc
xor
mov
fildl
xchg
aam
mov
xchg
adc
fcoms
jnp
mov
jmp
pop
jnp
sbb
sbb
adc
js
enter
mov
cmpsl
xchg
in
mov
out
popa
scas
mulb
mov
fcoml
aaa
aaa
sti
in
jo
xchg
cmp
sahf
insb
cwtl
push
fwait
cwtl
movsl
in
pop
fstpl
mov
mov
xchg
movsl
lds
cmp
cltd
stc
out
jg
pop
shl
push
cmp
in
scas
push
jmp
cmp
mov
dec
loop
adc
mov
enter
test
add
stos
push
or
cmc
lods
nop
push
add
mov
sahf
out
aas
decb
in
aam
stc
daa
cmc
aad
leave
and
pop
cmp
shll
imul
adc
add
scas
cmpsl
fiadds
inc
pop
int3
test
repnz
aam
insl
jmp
pop
sub
or
loopne
xor
jl
daa
jae
imul
dec
outsb
pop
jmp
pop
pop
and
xchg
decb
pop
cmp
test
push
mov
or
ffree
call
jp
pusha
mov
shlb
jmp
insb
sbb
mov
push
jecxz
xchg
ret
jae
fucom
xchg
push
jb
in
mov
cmpsl
addl
mov
push
scas
je
stos
or
sub
jg
cmp
cmpl
push
xor
movl
mov
ret
jmp
push
lea
fwait
loop
and
and
ret
bound
jo
std
mov
or
push
xchg
sbb
sti
pop
and
fstpl
add
lahf
movd
inc
mov
fidivs
jae
sub
pop
cmc
sub
dec
adc
pusha
leave
mov
nop
arpl
imul
and
xor
fiaddl
push
mov
mulb
and
and
loopne
ffreep
rorl
pop
inc
fisttpl
imul
or
subb
xor
cld
loopne
cmp
ret
push
std
in
mov
sbb
adc
pop
mov
cmp
sbb
mov
add
or
jp
mov
outsl
jl
add
iret
xchg
pop
cmp
xchg
fidivrl
cmp
jecxz
sub
jns
jecxz
sbb
dec
pop
int3
mov
push
cld
jl
fbstp
mov
pop
sub
xchg
ljmp
pop
pop
testb
push
push
loopne
pop
cmpsl
insl
out
mov
mov
sti
inc
add
push
fbld
xorb
jns
cmpsl
sub
add
ds
push
jecxz
jo
lds
adc
pop
or
sbb
push
out
mov
pop
xlat
or
push
lahf
out
es
cmp
jae
in
mov
xor
pop
int3
rolb
jp
pop
jbe
or
test
dec
out
push
cmpsl
xchg
leave
fcomip
push
into
repz
lods
lret
pop
in
daa
lret
es
je
or
sub
aad
xor
mov
jbe
lahf
imul
xor
ret
mov
jmp
pop
and
ja
out
xor
pop
adc
or
into
mov
inc
dec
lods
hlt
movsl
int3
cmp
xlat
jp
pop
jg
stos
xor
adc
pop
pop
pop
call
cmp
negb
stos
stos
stos
pop
add
aam
imul
movsb
cmp
lcall
addr16
add
add
scas
stc
test
jne
and
cmp
and
and
fsubr
inc
int3
push
dec
dec
adc
fld
in
push
sub
nop
jae
ss
xor
jno
mov
and
jae
call
jmp
jo
mov
jno
sarl
xchg
test
pop
push
xor
cmp
outsb
lods
jnp
xorl
pop
xor
std
cmc
sub
and
nop
aas
sbb
hlt
sub
xchg
cmp
push
test
mov
pop
jns
jp
jmp
sub
and
xchg
dec
jbe
jno
sbb
cmp
lds
mov
mov
mov
shl
push
jne
add
jns
cmp
mov
push
pop
mov
jmp
outsb
mov
icebp
ss
mov
scas
push
jns
mov
icebp
jns
cltd
xchg
push
insb
fdivp
jmp
add
test
push
xchg
pop
fimull
lods
adc
adc
leave
push
jecxz
and
xchg
adc
fstp
adc
pop
xchg
pushf
out
sub
into
sub
mov
mov
mov
jl
insl
sbb
inc
stos
lds
lahf
mov
xor
clc
imul
outsl
inc
push
pop
out
ljmp
push
fs
lods
cld
aad
insl
mov
sbb
or
data16
push
xchg
mov
in
sbb
add
adc
fstl
ret
mov
push
mov
cmp
push
outsb
pop
jl
xchg
jae
stc
cmp
push
or
lret
out
pop
cld
xor
push
add
adc
jl
hlt
xor
cli
inc
cmp
pop
jl
lcall
fnstcw
inc
xchg
xchg
lock
jb
cmpsl
inc
and
or
icebp
sbbb
sbb
xchg
sub
push
and
mov
data16
sbb
orl
jbe
stc
jge
xchg
inc
push
iret
test
or
in
sbb
jg
daa
mov
loope
xchg
add
dec
cli
mov
mov
fisubrs
xor
lds
adc
sub
sbb
or
mov
in
popa
mov
adc
andl
sub
mov
ret
imulb
pop
and
dec
gs
mov
cwtl
xor
mov
sub
aas
add
mov
test
out
jno
ljmp
shlb
push
iret
dec
jno
jnp
das
dec
aas
fs
ja
outsl
fcomip
les
mov
adc
fidivrs
repnz
mov
mov
pop
inc
sarl
pop
scas
aaa
aad
xchg
pop
loope
and
xchg
fadds
das
inc
jae
xor
addr16
mov
clc
push
sbb
je
nop
jnp
xchg
lahf
cmc
cmpl
mov
jns
out
fs
push
adc
add
fdiv
mov
push
sarb
aas
imul
stos
ret
std
mov
add
jl
cltd
pop
sub
sub
bound
loope
and
aas
rclb
aas
pop
mov
adc
dec
adc
pop
jl
adc
mov
and
or
int3
mov
adcb
mulb
adc
dec
fmuls
adc
fldt
les
sbb
iret
and
inc
sar
sbb
push
fistps
xchg
loopne
xchg
mov
push
pop
inc
mov
mov
loope
out
mov
push
subl
adc
mov
lods
stc
jg
iret
cmp
inc
mov
pop
push
push
adc
pop
inc
cmp
xor
mov
ja
jecxz
sarl
outsl
mov
add
call
mov
push
jne
outsb
loopne
push
pop
cmc
xchg
push
fmull
sbb
daa
push
lcall
mov
sahf
rcrl
dec
popw
adc
scas
add
adcb
adc
clc
movsl
mov
sub
push
adc
inc
jge
xchg
xor
fdivp
sti
movsb
jp
add
add
push
pop
fstpl
fbstp
pop
fmul
cmp
mov
rclb
lods
push
push
mov
inc
jne
in
movsb
jae
fidivs
cmp
outsb
into
add
imul
cmp
or
push
push
lock
jno
aam
in
imul
imul
movsl
lret
fldl
xchg
push
ja
aas
mov
fwait
or
push
push
shrl
jo
je
inc
addl
fwait
scas
lods
fisubs
xlat
cmpsl
jae
pop
pop
aas
divb
insb
mov
xchg
pop
xchg
dec
pop
xchg
inc
adc
jne
dec
cmc
xchg
xchg
mov
iret
std
sbb
das
adc
fidivrs
xor
lock
scas
fisubrl
sbb
jle
jmp
rcr
mov
fs
js
mov
incb
lea
mov
out
or
je
adc
subl
fisubrs
test
mov
gs
arpl
pop
adc
mov
jmp
pop
outsb
iret
shrl
aad
jp
jp
imul
xchg
nop
dec
lcall
mov
dec
jnp
add
add
jns
test
fwait
sub
adc
jns
insb
dec
lret
sbb
hlt
inc
mov
enter
enter
aas
or
hlt
push
and
sub
aas
cld
mov
les
pop
xorl
nop
or
jle
fcoms
das
sbb
sub
pop
add
ljmp
test
movsl
jge
pushf
pop
cmp
sahf
jp
movsb
cld
in
or
mov
mov
mov
rolb
or
inc
shl
fdivs
stos
movsb
mov
or
cmc
loope
inc
sub
dec
adc
pusha
aam
xor
arpl
mov
or
push
ljmp
sub
pop
addr16
jnp
icebp
fisubrs
cmp
rclb
mov
jmp
lock
int3
adc
aaa
and
lock
cmp
fs
ds
mov
pusha
lea
inc
int3
push
cwtl
fists
push
rcll
mov
xor
cmc
xlat
clc
roll
push
jle
or
daa
dec
mov
movsb
dec
cli
jne
mov
xchg
cmp
and
pop
stc
loop
rcll
push
push
xor
jge
in
into
mov
int
jb
dec
cmp
in
shl
xchg
loope
inc
jmp
cmpsb
ror
shlb
pop
pop
push
mov
lcall
pop
ss
fldenv
jns
aam
test
and
push
aas
or
xor
and
fldl
out
sub
aas
dec
fstpt
stos
cmp
enter
scas
mov
pop
cmp
loopne
aam
negl
fiadds
add
mov
in
imul
into
mov
out
rclb
scas
ljmp
xor
lret
cmp
xchg
hlt
out
xor
fdivrs
pop
adc
mov
ja
popa
sahf
cmpsl
pop
movsb
jne
iret
add
jae
or
addr16
pop
cmp
fsts
or
shl
shlb
out
adc
fldenv
cltd
mov
aam
jb
mulb
fs
mov
dec
es
sarb
adc
and
repnz
jmp
por
pop
xlat
sti
jne
paddusw
mov
lcall
and
mov
push
add
sub
or
xchg
clc
xchg
push
in
jmp
test
mov
icebp
out
cmpsl
sbb
xchg
pop
pop
pop
sub
push
call
mov
test
cmp
aaa
mov
icebp
sbb
jl
or
xchg
nop
clc
mov
icebp
sti
cmpsl
pop
push
leave
dec
les
popa
fs
pop
add
test
dec
xchg
mov
and
cmp
int3
or
mov
sub
loopne
lds
xchg
setge
sbb
xlat
out
insb
flds
daa
sub
mov
and
mov
rclb
aas
popa
ror
sub
add
xchg
and
cltd
sub
test
movsl
aam
repz
stos
stos
and
mov
dec
je
ret
into
pop
mov
mov
xlat
xchg
loop
movl
push
jno
call
mov
adc
mov
and
mov
out
hlt
xchg
cmc
mov
lea
ss
sti
xor
xchg
bnd
out
inc
adc
jae
adc
cmc
mov
sbb
arpl
out
shrb
sub
xor
call
cmp
jne
shl
gs
mov
dec
adcb
or
xchg
mov
ret
mov
cmp
cmp
xchg
xor
cmp
xor
enter
mov
dec
pop
push
jns
repz
mov
jl
sub
js
xchg
mov
inc
pop
push
push
outsl
movsb
aad
jge
add
fimull
adc
call
js
mov
loopne
adc
addr16
cs
aad
mov
aaa
ret
sub
les
mov
sbb
data16
in
mov
icebp
pop
or
pop
sub
orb
insl
jnp
xor
je
in
dec
in
jg
lds
mov
xchg
mov
mov
daa
sti
popa
dec
cltd
iret
sub
pop
cmp
xchg
mov
sub
fdivl
sub
adc
ss
call
fwait
mov
scas
or
cmpsl
cmp
repz
orw
push
pop
sub
mov
mov
in
add
mov
add
test
push
dec
or
push
int
push
das
cmpsl
push
lods
sbb
in
cs
nop
mov
pop
mov
or
inc
dec
mov
ret
push
mov
scas
sbb
mov
test
pop
mov
fstpt
imul
mov
les
fnstcw
sub
mov
mov
xor
xchg
xor
outsl
xor
outsb
jne
in
pusha
test
pop
insl
dec
int
or
jge
aam
sub
inc
xchg
or
sub
jmp
enter
inc
mov
je
or
xchg
leave
jg
push
jb
movsl
fcom
fistpll
daa
pop
addr16
pop
jae
fnstsw
push
xchg
sbb
stc
pop
js
mov
sub
lcall
inc
push
cmpsl
je
jp
xchg
cmp
mov
aam
sbb
rorl
or
ret
cmp
lret
mov
es
mov
aas
nop
fdivrs
mov
mov
cmpsb
jecxz
loopne
pop
xor
addl
das
inc
cwtl
mov
xchg
xchg
mov
xchg
aam
outsb
dec
repnz
jae
sarb
cmpsb
loop
jb
pop
add
dec
or
mov
lea
loopne
mov
xor
jne
cmp
xor
push
and
dec
sarb
out
scas
lea
cli
adc
or
sbb
fdiv
push
aam
lcall
in
icebp
adc
fstp
icebp
pushf
rcrl
cld
jnp
push
roll
aad
sub
imul
mov
mov
jno
dec
ror
inc
mov
or
scas
pushf
out
and
dec
test
xchg
lahf
fnstsw
jae
xor
faddp
cmp
ja
cmp
cmp
cmp
dec
inc
sub
call
mov
jmp
mov
dec
xchg
mov
inc
aad
stc
xchg
pop
mov
adc
les
lret
mov
scas
adc
and
xchg
dec
arpl
in
into
adc
mov
push
sub
mov
add
hlt
jmp
out
js
pop
push
insl
stc
cmp
pop
mov
sahf
pop
push
ficoms
jnp
xchg
hlt
inc
pop
test
nop
adcl
notl
gs
mov
ds
jo
cli
mov
push
inc
test
or
lcall
sub
mov
scas
push
and
and
or
dec
shlb
xchg
enter
jno
outsb
mov
adc
push
add
cmp
lea
xchg
sahf
or
insl
push
ret
add
sahf
js
filds
adc
bound
lcall
push
mov
jg
scas
pop
dec
mov
rcrb
adc
mov
cmp
rcrb
aas
pusha
xor
dec
int
sbb
adc
xchg
repnz
mov
xchg
popa
jle
mov
xchg
or
jnp
push
mov
cmp
rorl
cwtl
vpsubsb
idivl
loope
je
and
push
into
sbb
aaa
dec
insb
dec
loope
inc
xor
ljmp
out
aas
bound
fstpt
pushf
loope
and
test
sbb
inc
xchg
stos
enter
addr16
ret
push
addr16
shlb
ja
mov
xchg
sub
mov
mov
outsl
inc
pop
daa
test
test
sub
mov
sbb
mov
lahf
dec
or
dec
arpl
out
xchg
mov
mov
mov
outsl
jne
ja
jle
dec
xchg
mov
fstl
push
pusha
xor
gs
fwait
mov
cmp
cmpsl
inc
pop
adc
mov
mov
lock
inc
sbb
ret
jge
out
gs
les
inc
mov
dec
xchg
lods
movsb
std
and
mov
fsubl
pusha
aaa
mov
stos
lret
fs
jbe
cmp
daa
fdivs
fbld
aam
jp
xor
insb
out
add
sub
nop
pop
fsubl
cmc
arpl
in
jg
bound
jo
sti
out
ss
loope
in
push
rcrb
sarb
test
cmc
imul
sub
or
popfw
push
js
push
popf
sub
dec
daa
je
hlt
fnstcw
stos
insb
nop
jbe
loope
fsubrl
xor
mov
inc
dec
lcall
jg
adc
jge,pn
test
sbb
mov
dec
inc
loope
sub
unpckhps
add
rorl
sbb
inc
mov
xor
popf
mov
add
clc
mov
hlt
icebp
jae
cs
dec
rol
jae
mov
xor
mull
push
vminsd
daa
enter
into
mov
sahf
lcall
fadds
int3
sti
mov
push
adc
sub
shll
cmpsl
xor
das
push
dec
jmp
fildl
aam
push
jo
dec
sbb
push
mov
inc
jg
cli
cs
clc
xchg
xor
icebp
in
xlat
aad
jp
leave
dec
daa
mov
cmpsb
std
xchg
push
lcall
imul
lds
arpl
xchg
pop
pop
addr16
aas
xlat
mov
jecxz
orl
adc
popa
pop
jno
push
mov
in
xchg
repz
sbb
les
out
cmp
pop
mov
test
flds
push
jle
les
mov
mov
dec
adc
mov
jmp
or
lea
movsb
gs
loopne
aaa
pop
insb
pushf
adc
in
xorl
sbb
je
xchg
in
test
cmp
sub
mov
mov
push
pop
inc
jl
pop
mov
mov
pop
in
push
cli
enter
pop
das
mov
btr
cmp
clc
jb
jno
sub
sahf
jns
das
out
pop
dec
shll
invd
daa
out
push
adc
loope
ret
notl
pushf
adc
adc
push
jbe
in
scas
icebp
inc
add
repz
sarb
xchg
sbbb
pushl
push
lock
push
rcr
mov
fimull
movsb
repnz
xor
in
imul
cmc
imulb
push
loope
add
fdivrp
push
lods
inc
ss
mov
mov
lcall
out
push
pop
mov
in
scas
in
cwtl
out
mov
inc
xor
push
ss
dec
pop
loope
outsb
pop
sbb
xlat
imul
iret
inc
lods
xchg
out
leave
shll
mov
cmp
inc
mov
mov
jae
adc
mov
inc
sbb
cmp
mov
jle
or
iret
jl
dec
int3
popf
mov
ljmp
add
decl
daa
jmp
nop
jmp
xchg
imul
pushf
xor
lcall
jg
mov
xchg
movsl
sub
sub
adc
ret
les
or
push
testb
lea
ret
into
sub
aas
jp
daa
add
mov
push
mov
push
fnstsw
xchg
xor
jnp
inc
or
cmc
and
add
mov
leave
jle
popf
xchg
inc
adc
in
mov
inc
mov
aam
cmpsb
outsb
lods
int3
cmp
fbstp
jns
and
or
orb
push
scas
and
leave
inc
xchg
int3
dec
out
fisubs
add
leave
jns
shl
incb
jge
cmp
lods
fidivrl
daa
mov
cltd
mov
push
push
fisttpl
dec
add
push
pop
sbb
push
pusha
lcall
orb
pop
scas
ljmp
in
sbb
mov
mov
fildll
arpl
mov
sub
mov
je
adc
mov
or
dec
roll
mov
pop
xor
movsl
xchg
cmp
jge
cwtl
jge
xchg
addr16
jmp
test
popf
push
shl
leave
mov
aad
adc
rorl
push
out
push
adc
notl
lock
mov
adc
lock
sti
sub
gs
test
mov
inc
dec
xchg
xchg
lcall
mov
scas
leave
int
sahf
out
push
mov
jae
xchg
orl
xor
fadds
syscall
sub
das
icebp
icebp
mov
pop
xor
sti
and
jmp
sbb
js
inc
adc
jge
mov
int
xor
fdivrp
lods
mov
inc
jno
jl
call
mov
ret
std
inc
jno
inc
inc
push
jns
push
jae
call
push
and
scas
fsts
push
xor
adc
xchg
movq
mov
insb
inc
or
scas
xchg
dec
mov
jecxz
cmp
add
sub
bound
push
aam
gs
or
cmp
dec
mov
mov
mov
pop
sub
sahf
dec
push
outsl
push
cmp
xor
or
fnstenv
test
popa
pushf
add
ljmp
inc
mov
mov
sub
jecxz
jnp
sti
xchg
mov
push
fs
jae
loope
icebp
push
jnp
pop
mov
test
mov
mov
dec
dec
mov
in
mov
sub
dec
je
sbb
pop
mov
call
mov
sub
lcall
and
or
dec
pop
add
pop
and
fcmovbe
fdivr
and
xchg
add
and
fwait
push
leave
sub
pop
cmp
or
in
aam
dec
cmpsb
leave
lcall
inc
xor
scas
sbb
bound
mov
push
xchg
jbe
mov
dec
push
sbb
scas
pop
into
adc
dec
roll
clc
fs
jg
data16
insb
jo
inc
lcall
push
imul
push
js
lret
in
push
cltd
pop
push
daa
inc
aas
pop
lods
sub
mov
movsb
mov
sub
into
jecxz
fwait
mov
in
jle
pop
sub
xchg
push
jge
inc
cld
inc
push
sbb
hlt
cld
add
test
or
pusha
xchg
call
in
popa
lret
inc
jge
mov
enter
movsl
insl
and
xor
sub
cli
insl
cmp
rcr
loopne
xor
xlat
lret
adc
cmc
ja
pop
in
clc
dec
xlat
pop
inc
pop
aaa
fisubl
sbb
mov
and
mov
popf
push
xchg
aad
pop
test
imul
pop
int3
aad
xor
sub
sbb
add
dec
pop
adc
ret
push
push
cmpsl
add
shr
mov
jecxz
pop
mov
cmp
icebp
daa
push
sbb
andl
xor
xchg
call
arpl
out
pop
pop
mov
repnz
int3
pop
mov
push
les
scas
sbb
bt
pop
mov
pushf
dec
icebp
cmp
loop
mov
add
popa
cmpsb
out
inc
in
add
xchg
movsb
xchg
mov
aam
pop
movsl
sub
and
popa
pushf
or
pop
add
xor
dec
test
cmpsl
xchg
push
popf
dec
pop
jmp
mov
test
jne
mov
mov
mov
gs
push
mov
sbbb
mov
dec
pop
xchg
or
je
mov
cmp
mov
popf
add
ficoml
mov
movsb
push
cmp
xor
inc
push
jns
add
xor
insb
cld
rcl
cmp
cwtl
mov
jo
or
insb
pop
sarb
loopne
stc
sbb
mov
xchg
lahf
je
repz
subb
mov
in
orl
lcall
sbb
jmp
jno
and
enter
dec
dec
cmp
add
ja
outsb
adc
test
sub
push
pop
nop
lock
jae
fcom
cltd
xchg
sub
push
repz
fdivrl
and
push
inc
xor
and
sub
std
loopne
xchg
out
adc
xchg
jo
out
sbb
sbb
fdivl
lahf
icebp
out
dec
enter
stos
pop
mov
xor
mov
pop
xlat
mov
js
jmp
cmp
adc
xchg
nop
ret
dec
in
sahf
push
mov
sub
fisubrl
mov
ficoml
in
out
push
test
out
iret
repz
into
repnz
and
or
push
jns
ljmp
jl
add
mov
lock
push
push
xorb
int3
and
sbb
cmc
adc
leave
in
pop
mov
call
xor
xchg
jbe
cwtl
xor
push
sbb
or
shll
in
jecxz
lcall
xor
fsubl
pop
inc
rcll
filds
jle
mov
clc
shrb
cmp
inc
fs
jmp
cmp
cs
testb
lea
add
cld
mov
mov
xchg
or
daa
xchg
int
mov
mov
cli
add
add
in
jle
orl
subb
ret
jecxz
ljmp
fidivrl
xor
divb
mov
lds
scas
add
xor
aam
in
push
int
pop
fcoms
xchg
popf
dec
jno
call
mov
add
sub
push
push
mov
sbb
scas
xchg
lods
mov
sbb
test
fisubrs
add
clc
adc
lret
jl
lds
fs
mov
xchg
and
dec
dec
jbe
mov
pop
stc
sbb
mov
jne
es
popa
lret
jge
pop
pop
xchg
mov
mov
and
mov
mov
outsb
hlt
and
inc
mov
mov
push
lock
mov
jne
outsl
xchg
mov
xchg
faddl
lods
fs
bound
fidivs
stos
jae
mov
add
gs
mov
push
cwtl
push
add
fisttpll
mov
or
nop
mov
test
adc
dec
push
fidivs
mov
push
call
jp
jmp
mov
pop
ret
gs
mov
sub
xchg
jo
shrl
mov
scas
or
das
dec
mov
mov
stos
pusha
int3
jne
push
dec
lods
and
mov
hlt
xchg
das
incl
cmp
mov
ds
je
push
sub
pop
insb
sub
xor
aam
outsb
jb
loopne
lahf
fiaddl
testb
mov
std
xor
and
add
test
mov
mov
fidivl
fdivp
lret
jbe
movsl
adc
mov
imul
adc
icebp
cmp
mov
ja
jmp
enter
icebp
shll
add
mov
out
jecxz
ss
jmp
mov
rolb
cwtl
aas
mov
mov
inc
add
out
xor
gs
in
ret
and
pushf
cli
mov
fs
cwtl
sub
jg
jl
imul
cmp
pop
mov
ficoml
shll
ja
xor
xlat
notb
xchg
scas
cmc
stos
mov
dec
sti
push
test
daa
clc
rolb
and
popf
xor
push
jnp
mull
aas
pop
enter
maxps
lcall
pushf
sti
js
cmpsb
loopne
sub
test
add
push
add
mov
repz
pop
pop
nop
jae
cld
xchg
inc
inc
les
pop
decb
movsl
xor
fstl
and
aaa
mov
std
loope
pop
jmp
and
mov
mov
bound
fbstp
xor
xchg
jno
jecxz
push
cmp
add
sub
mov
pop
dec
push
sti
insb
cmp
jmp
cmpb
pusha
outsl
pop
shlb
or
je
data16
lret
xchg
aaa
push
push
push
mov
push
adc
push
mov
inc
outsb
rclb
in
repz
sbb
lock
ljmp
mov
lcall
mov
xchg
cltd
jne
lea
repz
mov
popa
add
rcrl
je
jmp
mov
test
jbe
add
nop
push
mov
das
mov
ret
lret
insl
pop
loopne
cmpsb
lock
xchg
iret
xchg
int3
xor
mov
xor
push
mov
pop
sbb
lea
lret
push
inc
inc
or
int
xor
xor
mov
ret
cmc
jp
inc
mov
xchg
or
mov
sbb
hlt
and
xor
or
xchg
pusha
fists
fimuls
push
sti
mov
aad
hlt
lock
sub
pop
push
cmpsl
shrb
sub
push
pop
sub
jmp
fadd
mov
stos
xchg
xchg
pop
outsb
jecxz
repnz
add
ss
adc
call
cld
test
inc
out
or
js
test
sti
and
or
ja
adc
sbb
add
imul
mov
or
sub
dec
fs
cmp
add
jecxz
test
push
hlt
outsl
roll
pop
lcall
loopne
fcom
xor
mov
outsl
stos
cwtl
cld
mov
ficompl
mov
xor
or
lods
add
and
sub
add
jo
and
lahf
sub
add
enter
and
push
push
mov
sub
outsb
mov
lods
pusha
mov
inc
push
sbb
sti
sub
cmpsl
add
pop
xchg
sbb
xchg
push
in
sbb
dec
fs
xor
repnz
adc
and
inc
or
cld
add
cmp
xchg
pop
ret
fbld
pusha
out
stos
in
loopne
and
dec
popf
inc
enter
sarb
pop
mov
sub
or
mov
dec
in
addr16
movsl
loop
dec
inc
xchg
nop
enter
dec
cmp
xchg
xchg
or
dec
sbb
xor
sub
mov
jo
add
mov
xchg
ljmp
sub
push
mov
shrb
dec
jno
lret
sbb
and
fcoms
leave
pop
xchg
mov
mov
or
adc
or
stos
xchg
movsb
mov
lods
addr16
sti
jecxz
sub
outsl
jns
jle
jp
cmpsb
jmp
aas
gs
inc
jno
sarb
or
sbb
adc
cli
inc
outsl
hlt
ss
push
xor
pop
stos
dec
stos
in
and
and
sub
xchg
mov
jle
xchg
jns
imul
test
add
jnp
xor
cmp
push
add
cmc
add
xchg
addl
dec
aaa
repz
movhps
dec
pop
inc
lods
mov
pop
and
fs
mov
mov
add
int
push
push
jb
mov
enter
xchg
daa
sbb
icebp
call
xchg
int
add
repnz
popf
mov
negl
mov
cmp
pop
out
push
mov
jbe
cmp
ret
ja
sub
sbb
xor
shlb
or
sub
into
jo
shlb
shl
sub
xchg
fwait
jae
push
push
imul
bswap
in
pop
sbb
and
mov
aam
ds
sub
outsb
mov
pop
xchg
and
jl
xor
push
data16
dec
pop
test
ja
jns
xchg
pop
push
sbb
inc
ss
insb
fldt
jmp
jp
ret
and
pop
xor
les
dec
add
jecxz
pusha
cli
adc
hlt
adc
out
add
mov
pop
and
aam
out
sbb
iret
cmp
clc
ret
sub
shlb
pop
cmp
mov
inc
pop
push
add
pop
or
arpl
pop
xorl
xchg
and
fisubl
test
ja
lahf
cltd
stos
fldenv
and
outsb
add
xor
inc
jo
fdivl
mov
dec
test
mov
aam
cmpsl
ret
pop
or
mov
mov
mov
ret
rolb
hlt
dec
in
pop
sbb
ret
fdivl
xlat
fistpl
push
imul
into
jmp
mov
xor
mov
dec
mov
jle
ret
cmpl
sbb
sbbb
inc
movsl
pop
int
mov
pushf
mov
push
pusha
push
lock
xchg
sti
inc
jb
fidivrs
movsb
xor
cmp
push
imul
inc
ret
pop
std
clc
in
rolb
xchg
test
outsl
fmuls
cltd
js
lcall
fmuls
lret
or
sub
mov
ss
mov
xor
jb
fmuls
subl
push
imul
add
adc
xchg
mov
test
xlat
jbe
cwtl
ds
sub
dec
out
cld
cmpsb
cmp
or
call
subb
in
fcmovnb
out
aaa
pop
fcmovne
test
xorb
adc
imull
mov
lcall
stc
cmpl
shll
jbe
push
rorb
adc
lret
xchg
pop
push
fadds
pop
xchg
fidivs
dec
inc
sub
or
mov
inc
push
add
sbb
mov
ss
jb
adcb
jno
adc
mov
lods
lahf
repnz
jp
shrb
adc
push
push
outsl
loopne
or
or
push
sub
jge
sbb
mov
jno
imull
ret
pushl
lcall
addl
jno
or
sub
mov
mov
mov
mov
inc
cmpsb
shrb
xor
cmp
xor
js
aas
or
xchg
pop
sbb
cmovp
cmp
inc
fildll
push
insb
inc
mov
jl
pop
dec
xor
fsub
and
or
fistpl
push
scas
push
cs
sub
push
jnp
insl
sti
ja
xchg
pop
adc
out
insw
or
jmp
es
ret
mov
fdivrp
fwait
and
jle
dec
dec
and
out
jb
jo
or
cmp
adc
loope
xchg
ret
int3
sti
lret
leave
add
aaa
pop
jbe,pn
sbb
cmpsl
call
push
mov
loop
enter
jl
ds
dec
cmova
mov
insb
add
outsb
dec
cwtl
push
fistpl
clc
sub
hlt
gs
fsts
jg
jb
push
sahf
out
nop
test
lock
fimuls
xor
xlat
scas
dec
int
test
xorl
inc
movsl
sbb
push
jg
mov
and
fdivrp
divl
adc
and
mov
and
jmp
inc
popf
push
pop
cmpsb
dec
inc
pushf
mov
adc
int
inc
lods
lret
aad
sbb
out
lret
push
mov
outsb
lret
ret
repnz
mov
sbb
aaa
jno
xchg
test
test
test
mov
je
out
pop
and
xchg
and
cmp
data16
cmp
sbb
mov
scas
mov
pushl
mov
repz
movl
enter
lock
pop
in
push
mov
xchg
jnp
movd
or
sbb
icebp
out
cmpsb
ret
pop
dec
xchg
inc
enter
movsb
shl
popf
dec
stc
sbb
xlat
out
jg
or
addb
mov
iret
cmp
sbb
dec
into
xchg
ret
popf
mov
leave
aam
lret
mov
addr16
fsubs
xor
lahf
or
xchg
lock
mov
dec
push
fildll
popf
or
inc
inc
stc
in
int3
xor
ja
inc
arpl
out
stc
sub
pushf
out
in
repz
cltd
sub
mov
cltd
mov
sbb
mov
sub
mov
dec
or
cmp
das
adc
pusha
inc
pop
cmp
mov
call
adc
loop
sbb
lcall
rclb
into
stc
mov
pop
mov
loopne
xor
xchg
call
jb
imul
sarb
mov
and
popf
das
mull
mov
mov
outsl
mov
or
inc
mov
insb
xor
lea
push
push
fdivr
icebp
test
imul
ja
jne
jl
mov
xor
xor
ja
sbb
xchg
fnsave
cltd
cmp
adc
push
mov
bound
add
xchg
cmp
pop
loopne
push
xchg
bound
stc
xor
push
cmp
stc
jle
les
push
rep
push
xchg
xchg
inc
xchg
jl
lods
stos
inc
cld
adc
pop
and
test
xchg
xor
xchg
popf
mov
and
mov
cmp
jb
mov
cmp
mov
jb
lea
ret
sub
in
or
jae
and
pop
add
pushf
cmp
and
mov
xorb
and
add
mov
jbe
cmp
jae
xchg
mov
inc
fsts
les
adc
das
cmp
popa
stos
stc
insl
jae
loop
stos
mov
fsubl
lock
bound
fsubs
mov
cmp
cs
pop
pusha
push
mov
insl
jnp
lcall
pusha
push
fidivrl
push
jp
movsl
jg
inc
es
mov
jne
lret
xchg
insl
push
pop
out
out
and
pop
lcall
xor
xchg
push
clc
ret
xchg
pop
dec
scas
mov
lcall
movsl
mov
cmp
ret
les
das
sub
nopl
or
jle
pushf
inc
mov
cmp
fldcw
jmp
aas
add
jne
mov
lds
inc
cmc
sbb
inc
mov
mov
dec
out
test
std
mov
cli
popa
lds
xor
ljmp
sbb
arpl
fwait
push
rcr
movsl
jge
mov
ljmp
scas
inc
arpl
and
dec
mov
mov
add
jo
imul
jns
jmp
sbb
cld
fisttpll
es
lret
sub
sbbb
inc
xor
out
mov
push
outsb
xor
cmc
sbb
out
icebp
and
push
jg
cmp
les
adc
push
sbb
enter
roll
jecxz
fxch
mov
xor
loopne
in
js
movsl
or
mov
adc
iret
iret
fwait
and
mov
stc
repnz
lret
sub
adc
mov
mov
test
arpl
or
hlt
mov
test
test
lahf
push
scas
xor
push
xchg
mov
insw
loopne
in
aad
and
cli
pop
adc
in
int
inc
cli
ss
mov
mov
pop
fildll
mov
call
fstl
bound
repnz
mul
or
in
lahf
push
aam
dec
mov
inc
pusha
popa
pusha
xchg
pop
fmull
add
out
fwait
cmp
ficompl
pop
mov
test
nop
dec
popa
jne
inc
popf
inc
ret
sub
xchg
xchg
dec
pop
jno
test
inc
popf
shll
xchg
idivl
jmp
fcompl
out
jmp
jae
mov
push
add
arpl
fwait
cmp
push
mov
sbb
loop
jnp
push
enter
or
pop
xchg
inc
adc
or
leave
movb
cmp
dec
add
pop
jo
lods
dec
mov
test
lret
or
push
push
out
ds
or
dec
mov
and
idivb
xlat
mov
cmp
int3
jl
cwtl
lret
pop
xchg
shl
adc
sub
mov
dec
jb
add
out
inc
and
test
lret
mov
cmpl
dec
sbb
int
xchg
push
enter
push
scas
pop
cmp
pop
cmp
mov
and
mov
leave
push
mov
jg
add
das
lea
cltd
inc
mov
cmp
mov
sbb
gs
mov
out
ss
imul
adc
and
or
dec
pop
adcl
call
negl
mov
jnp
fldt
pop
mov
jl
lods
int
dec
inc
xor
jecxz
or
les
push
xchg
xchg
or
push
pop
bnd
adc
pop
daa
bt
or
adc
fcoml
aaa
xlat
and
pushf
fdivrl
mov
push
stos
ss
jmp
add
dec
pop
in
xor
xor
mov
imul
sti
xchg
insl
arpl
insb
in
pop
test
inc
push
mov
adc
out
jbe
push
xlat
stos
push
push
pop
mov
aad
xchg
or
xor
das
test
fdiv
mov
jl
jge
rorb
mov
or
xchg
push
test
cmp
cmpsb
inc
push
out
popa
mov
adc
loop
nop
push
lods
iret
and
mov
add
and
das
adc
add
adc
lock
sti
fcmove
xchg
fdivrl
fnstcw
jns
mov
dec
leave
or
jbe
int
push
loopne
notb
sbb
push
dec
add
pop
scas
sub
gs
sbbl
cmpsl
notb
sti
sbb
cmp
test
dec
inc
aaa
cwtl
inc
inc
mov
sbb
mov
sub
push
adc
repz
and
xor
pop
imul
ss
adc
lock
add
icebp
sbb
lcall
dec
lock
cmp
sarl
pop
pop
pop
jno
jbe
insl
xchg
xor
xchg
xchg
inc
movsl
xchg
mov
popf
mov
jmp
push
lods
xchg
jg
xchg
push
jb
xchg
into
cmp
inc
movsb
ljmp
repnz
push
cld
sti
push
push
xchg
dec
mov
das
cmp
xor
jns
sbb
cmp
mov
in
xchg
fsub
cmpsb
sbb
add
mov
rcrl
out
out
dec
das
loope
sub
stc
bound
mov
neg
mov
mov
shr
add
adc
or
mov
aaa
jp
lds
test
push
dec
push
push
or
in
inc
sub
nop
push
mov
xor
inc
jns
loopne
mov
pop
adc
xchg
add
dec
mov
xchg
inc
int3
jmp
fstpt
pop
push
sti
cli
mov
scas
cs
clc
gs
fdecstp
fwait
adcb
push
jnp
jg
inc
sub
cmp
cmp
imul
das
xchg
adc
ret
data16
in
inc
hlt
sarl
rclb
ja
xor
lret
rolb
mov
outsl
testb
push
mov
sub
imul
xor
ret
mov
xor
mov
jae
pop
mov
mov
call
mov
pop
xor
cltd
lret
mov
imul
cmp
and
je
imul
push
push
push
out
mov
dec
xchg
test
movsl
push
int
mov
stos
insb
add
jecxz
jbe
xorl
and
test
xor
loop
xor
or
xor
cmp
lods
dec
bound
adc
mov
or
out
push
mov
out
push
adc
in
mov
cmp
mov
xor
in
mov
sbb
test
and
xor
xchg
shll
mov
in
sbb
mov
in
xchg
ljmp
pusha
loop
fists
jae
lret
mov
imul
lock
or
jecxz
std
add
dec
push
cmpsb
std
movsb
mov
lea
rorl
leave
pop
sub
pop
or
xchg
jp
pop
pop
rol
loope
scas
test
arpl
fmuls
mov
pop
clc
push
cld
loope
fsubr
js
cmp
lods
jno
cwtl
mov
push
leave
mov
add
cmp
jecxz
sub
push
dec
imul
sub
jmp
and
xchg
in
cld
add
jb
clc
aam
sub
insb
stos
pop
loope
loop
mov
test
sbb
sti
and
and
sub
xchg
scas
or
mov
push
movsb
inc
pop
idivl
sarb
adc
xlat
iret
cmp
aam
xchg
adc
mov
sub
push
or
sbb
in
mov
pusha
mov
in
jmp
sbb
icebp
mov
and
add
or
js
fldenv
push
dec
jb
jmp
test
and
std
xor
insb
into
jmp
dec
mov
out
jmp
sub
adc
push
and
sbb
dec
jb
or
mov
cmp
std
orl
push
test
fimull
dec
fsubl
adc
movsb
cmp
jecxz
leave
loope
push
sbb
push
sbb
imul
mov
lret
cmp
ljmp
shrb
sbb
sbb
adc
fsubr
sbb
mull
loopne
sbb
ficoml
inc
add
xor
mov
push
in
xchg
sub
cmpl
mov
ljmp
cmp
push
lahf
adc
dec
add
mov
sbb
and
pop
push
in
inc
xor
test
jg
add
push
and
pop
mov
arpl
pop
ds
lret
stos
inc
fistpl
sbb
mov
pushf
hlt
bound
int
inc
push
pop
clc
inc
jnp
dec
push
fcoml
adc
aam
adc
adc
mov
loopne
test
in
out
inc
fs
sbb
in
push
pusha
cmc
insb
jecxz
cwtl
sti
jo
sbb
repz
mov
mov
outsl
jae
add
cli
lret
adc
mov
fists
pushf
or
and
or
arpl
outsb
leave
mov
push
repnz
test
xchg
xor
add
pop
lret
sahf
test
int3
push
aad
ljmp
add
ficompl
movl
fs
fnsave
leave
rclb
popa
ror
std
mov
stos
cmp
jb
sub
in
mov
inc
jp
sub
pop
mov
xor
add
stos
cltd
int3
pop
mov
hlt
mov
sbb
mov
adc
data16
leave
fcompl
sbb
jmp
stc
je
cltd
inc
push
sbb
mov
mov
sahf
sbb
mov
inc
aad
pop
pop
mov
std
or
push
xchg
xor
lret
sbb
pop
call
lods
xchg
xchg
xor
jae
icebp
in
sub
testb
pushf
push
std
scas
cmp
dec
cli
or
insl
inc
jae
fldln2
pop
cli
rcll
divl
mov
sti
and
pop
xorl
sub
mov
loop
push
inc
scas
mov
add
daa
push
stos
inc
mov
sbb
iret
andl
je
xchg
sbb
add
cmp
call
movsl
cmp
mov
jnp
fprem1
sub
iret
sub
shr
push
cmpsl
rcrl
mov
xorb
mov
outsb
rcll
scas
push
ret
dec
shrl
jl
lea
jp
shrl
sbb
out
lret
ret
sbb
jo
jb
lahf
sbb
and
mov
pusha
xor
ss
in
popf
aam
adc
test
incb
scas
stos
insb
mov
cmpsb
sub
mov
and
mov
outsl
popf
inc
cltd
push
test
sub
into
mov
and
sub
in
bnd
sub
fs
insb
mov
adc
push
sub
js
std
insb
and
add
jl
sbb
or
es
fwait
cltd
les
inc
mov
leave
pushf
repz
aaa
stos
ds
or
je
out
les
jmp
adc
stos
xor
ret
add
fwait
cmp
lcall
jo
mov
jp
dec
xlat
pop
gs
fldenv
leave
in
pop
lahf
push
lds
mov
mov
xchg
lcall
clc
mov
jle
push
fcomp
jp
ret
out
add
jno
sarl
push
imul
jne
outsb
mov
sbb
rcr
mov
into
sub
jb
test
xchg
xor
dec
add
mov
mov
das
and
loopne
scas
sub
out
rcll
fimull
xor
ja
pop
inc
clc
adc
jae
xchg
push
les
cmc
int
in
cmp
imul
xchg
lret
mov
scas
ljmp
in
int3
std
adc
rol
xor
add
adc
or
cwtl
mov
insb
lods
scas
dec
jne
repz
add
je
mov
js
pop
out
shr
aas
test
aam
add
xchg
jg
xor
stos
jmp
call
stos
dec
ss
xchg
sub
xchg
adc
inc
jle
mov
stc
and
mov
aad
lock
ljmp
mov
orl
inc
sbb
repnz
rcr
hlt
jae
andl
sub
jne
push
inc
mov
inc
cmp
leave
out
outsb
push
xchg
push
out
ret
add
fs
cmp
clc
mov
sbbb
outsb
mov
lods
rorl
pop
inc
xchg
dec
iret
sbb
cmp
ret
mov
jmp
jmp
mov
push
push
fwait
iret
int3
pusha
lods
aaa
cmp
stos
push
push
mov
fcoml
xchg
pop
scas
xchg
roll
shl
push
jle
mov
je
gs
adc
aam
fnstcw
cltd
push
in
adc
mov
cld
xchg
push
pusha
lods
daa
js
int3
mov
inc
pushf
imul
js
test
dec
mov
sarl
filds
movb
mov
jbe
into
addr16
and
mov
lea
sti
xchg
sub
inc
adc
sbb
test
das
inc
jae
xor
rorl
xchg
xchg
nop
ja
mov
add
mov
pop
out
pop
je
pop
jns
jns
lods
and
mov
jb
mov
and
negl
dec
jmp
sbb
lea
or
enter
lods
mov
cmpsl
xchg
inc
jno
mov
scas
fistps
cli
out
insl
and
addr16
movsb
nop
cmp
lods
xor
sbb
mov
pop
cmp
jae
in
repz
ljmp
fdivr
sub
jnp
inc
cmc
fnsave
sar
push
sti
jle
pop
cltd
cvttps2pi
ds
inc
cltd
int3
leave
sbb
adc
push
mov
cmp
cmpsb
pop
addr16
pop
mov
hlt
loopne
popf
push
jecxz
fnstenv
mov
aad
enter
out
and
or
sti
xchg
pop
aad
dec
out
sti
push
dec
in
add
dec
or
cltd
cmpb
jo,pt
inc
cmc
add
xor
pop
lds
jp
ja
or
idiv
jl
mov
push
fsubrl
insb
scas
mov
mov
in
fnstsw
je
int3
add
mov
inc
lret
hlt
pushf
ja
cmpsl
mov
xchg
and
sub
mov
lahf
hlt
adc
pusha
mov
aaa
dec
or
jo
inc
fildl
fdivr
sbb
lock
adc
and
popa
push
test
or
xchg
jae
jge
cmp
loopne
imul
test
cmp
leave
and
cltd
mov
aas
imul
aaa
imul
cmpsb
jns
test
cmp
pop
add
test
add
in
cmp
jmp
mov
test
dec
es
scas
jge
pcmpgtb
gs
pop
loop
jg
pusha
leave
loopne
imul
lock
pushf
push
repnz
nop
cmc
cmp
lcall
fwait
shrl
inc
inc
loopne
cmpsl
mov
popa
loopne
jecxz
pushf
scas
clc
push
loopne
fldcw
cmp
or
mov
mov
mov
cli
mov
fwait
jb
sahf
adc
inc
dec
mov
or
lret
add
add
pushf
sbbb
cwtl
in
dec
jne
cltd
mov
push
sub
aam
mov
in
enter
xor
jne
xchg
out
mov
pop
dec
push
pop
fidivrl
sarl
cmp
mov
subl
add
cmp
aam
xchg
decb
enter
pop
sub
imul
mov
loope
xor
subb
or
sbb
xchg
cmc
mov
mov
xor
add
jne
idivb
mov
jb
jl
imul
xchg
leave
stc
std
add
mov
pop
cmp
jnp
and
xchg
sbb
mov
inc
jb
cs
in
and
lret
andl
mov
outsb
push
repz
or
cmpsb
push
dec
sti
int
int3
pop
std
je
out
pusha
enter
dec
bound
les
mov
je
sub
or
and
insb
lahf
mov
push
jecxz
add
pop
ret
stos
fnsave
cmp
push
jg
sub
push
mov
jnp
pop
std
sbb
jbe
and
push
xchg
loop
jae
adc
enter
add
xlat
and
pop
or
iret
pop
jae
xchg
or
mov
dec
push
xchg
fs
scas
mov
ret
mov
into
lock
leave
loopne
inc
push
or
cmp
cmp
xchg
inc
dec
adc
mov
or
or
push
enter
push
stos
xor
mov
out
cmp
cld
cmp
mov
sbb
sbb
push
jb
sbb
xchg
dec
xor
dec
rolb
xor
push
push
les
lret
inc
pop
and
ljmp
dec
mov
jge
jne
js
jne
mov
inc
or
das
lret
cli
sub
cmc
xor
popa
les
ficomps
mov
fildl
push
push
cmp
ror
cli
in
cmp
dec
xor
mov
ret
and
mov
push
jnp
in
cmp
ret
andl
daa
inc
push
in
shll
cmc
or
adc
lcall
ret
xlat
imulb
jmp
xor
into
push
push
xchg
shrl
mov
xor
sbbl
mov
loope
mov
lds
lret
sub
adc
sbb
dec
inc
cmp
xor
xchg
push
cmp
out
dec
push
movsb
mov
sbb
fisubl
jmp
pop
jmp
stc
into
jns
test
movsb
and
test
add
fwait
enter
cli
mov
cmpsl
imul
xor
cwtl
xor
lret
rcrb
xor
add
scas
enter
aad
mov
insl
mov
adc
fldt
test
xchg
jmp
mov
pop
mov
iret
frstor
lea
movl
loope
inc
adc
clc
ret
stc
imul
je
cltd
rcr
mov
fcoml
push
fistl
push
pushf
sub
xchg
cmpsl
pop
mov
jp
outsb
pop
mov
sti
bound
in
movsl
sbb
shl
adc
mov
loop
pop
adcb
mov
negl
std
and
pop
pop
leave
aam
mov
repz
push
mov
shlb
faddl
std
pop
cmp
xor
jle
dec
inc
mov
cwtl
pop
fsts
jge
cmpsl
mov
cmp
mov
jb
gs
call
or
push
pop
add
lds
aas
mov
arpl
and
pop
mov
vsubpd
push
xchg
shll
sbb
jbe
sub
or
movsl
dec
cmpb
xchg
lods
fisubs
pop
add
jge
mov
out
mov
mov
pop
ret
pop
sub
mov
or
cmpb
movsb
fsubl
in
jle
bnd
push
xorl
mov
inc
stos
out
test
xchg
xchg
mov
pushl
mov
push
push
jl
repnz
rcrb
xor
push
out
aad
insl
mov
pop
mov
fwait
sub
inc
out
lods
ja
int3
cmp
icebp
scas
lds
shlb
iret
inc
dec
loop
pop
fstp
or
cli
sbb
ja
push
xchg
shrb
add
xchg
pop
xor
push
mov
test
push
jg
dec
cmp
cwtl
std
dec
inc
pop
lret
out
cmp
imul
jmp
repnz
cmp
xor
sbb
outsb
dec
and
ret
push
sub
pop
test
nop
jb
push
sub
aaa
cltd
filds
iret
stc
ljmp
mov
lea
or
and
mov
mov
mov
fldl
rcl
leave
in
adc
inc
xchg
xchg
fdivrp
add
ret
and
shll
dec
aam
hlt
and
fcomp
out
stos
into
into
push
and
cwtl
fcoml
add
enter
das
fsubrl
hlt
aas
insl
test
xor
mov
jmp
xlat
stos
mov
mov
or
loope
faddp
fwait
mov
fs
xchg
pushf
sbb
add
jmp
ret
adc
scas
pushf
pop
jb
mov
mov
mov
xchg
xor
into
hlt
mov
outsb
or
mov
push
jge
stos
push
or
gs
dec
aad
push
xchg
clc
adc
xor
outsb
inc
inc
negl
cli
aam
inc
xor
sahf
and
mov
enter
test
sbb
js
inc
test
jbe
mov
pop
pop
pushf
sahf
notl
imul
mov
push
mov
pop
icebp
push
popf
int
sbb
das
andl
jne
mov
cmp
ror
mov
sbb
in
mov
push
adc
cmp
dec
int3
je
mov
cwtl
pushf
repnz
push
sbb
test
sub
mov
pop
mov
dec
neg
or
dec
or
push
fneni(8087
push
jp
mov
mov
roll
mov
test
mov
jl
add
push
or
dec
stos
das
aas
sti
outsl
push
mov
hlt
pop
mov
or
mov
push
jns
jecxz
lcall
out
mov
popa
cli
rcl
sub
mov
push
jmp
dec
jmp
fs
push
dec
sbb
mov
adcb
out
roll
stos
mov
pop
arpl
test
pop
add
dec
icebp
and
ret
mov
jg
dec
dec
sbb
cld
rol
jge
jo
sub
cltd
jle
rolb
ss
xor
cmp
aas
jne
jnp
xchg
cmp
or
or
fwait
cmp
icebp
shll
aam
arpl
imul
ljmp
fisubl
mov
outsl
adc
inc
outsb
shlb
pop
pop
movsl
cmp
mov
loope
nop
in
or
jecxz
pop
stc
movsl
pop
cmp
mov
adc
ret
jge
xchg
adc
clc
cmp
mov
es
mov
and
push
cmp
out
out
jns
lea
mov
leave
mov
loop
idiv
mulps
std
adc
aaa
mov
arpl
enter
scas
sahf
pop
cmp
push
enter
sti
sub
aam
sub
aad
fs
and
lcall
das
sbb
add
sub
adc
lret
repnz
imul
pop
decl
addr16
icebp
lret
mov
lock
or
add
add
and
xchg
adc
shl
mov
cmp
push
dec
pminub
lock
aad
stc
cmp
adc
js
or
add
xorb
xlat
sti
neg
ljmp
xchg
mov
jl
outsl
jmp
pop
xor
mov
iret
pop
jb
mov
sub
mov
mov
or
mov
push
push
or
dec
sub
addr16
shrl
cli
xchg
add
cld
dec
xor
xchg
adc
xor
or
ja
mov
ret
sbb
iret
out
lahf
mov
mov
test
pop
shlb
out
pop
scas
pop
scas
dec
inc
mov
insb
in
lret
lar
std
dec
imul
fucom
pmaxsw
pop
or
cltd
imul
fstl
ret
sti
add
sbb
pop
sbb
sahf
jb
ja
sub
mov
inc
and
into
and
sbb
jbe
xchg
jp
xchg
mov
sbb
push
adc
pop
mov
fisubrl
mov
cmp
jnp
adc
les
imul
aam
pop
fwait
sbb
out
sti
in
shlb
int3
es
mov
mov
daa
or
mov
mov
mov
fstpt
mov
cltd
inc
cmp
xchg
dec
xor
in
dec
sbbl
adc
xchg
mov
mov
xchg
dec
mov
sub
push
xchg
mov
jns
sub
push
cltd
mov
into
push
and
test
ret
ds
xor
shll
pop
sbb
adc
jle
pop
pop
add
jp
loop
and
or
daa
pop
sarl
pop
pop
pop
sbb
jae
xor
loop
mov
pusha
inc
leave
pop
outsl
and
xchg
aam
push
or
and
pop
subb
push
xor
adc
insl
jecxz
cli
int3
or
push
mov
daa
or
mov
or
cmpsb
outsb
cli
mov
pop
inc
lods
pop
out
out
xchg
subl
pop
and
ret
lret
mov
pop
les
push
pusha
mov
or
inc
jb
loope
mov
in
leave
mov
inc
ret
jmp
jge
sub
fwait
lea
xchg
push
mov
push
outsl
adc
dec
loope
popa
test
jge
and
inc
pop
cmpsl
dec
and
fdivs
test
pop
fldenv
cwtl
and
arpl
lds
mov
jne
or
stos
out
jle
add
xchg
adc
sbbb
int
add
fldz
loopne
cmc
arpl
ds
jg
int3
xchg
mov
lcall
dec
imul
scas
mov
subb
jp
loope
lcall
dec
xchg
cmp
xchg
fadds
jmp
add
mov
sub
mov
sub
xorb
fldenv
leave
outsl
dec
fwait
dec
int
xor
and
icebp
dec
rep
sbb
jp
add
je
addl
and
call
enter
orb
fsubrs
adc
jle
and
push
popa
or
push
daa
cmp
adcl
mov
shl
test
outsb
dec
jae
fcomip
js
push
imul
push
jae
stos
push
xor
sbb
pop
sub
popa
push
jmp
loope
xchg
mov
outsb
dec
sbbl
mov
mov
clc
and
mov
sub
inc
inc
mov
xchg
popa
mov
mov
rolb
mov
mov
xlat
cld
jno
dec
sbb
mov
test
repnz
mov
stos
mov
pop
mov
mov
sbbb
hlt
mov
pop
jle
push
or
inc
iret
add
les
mov
mov
jns
pop
mov
cmp
pop
and
jle
mov
ss
and
jge
sub
cltd
mov
fsqrt
cmpsl
mov
mov
dec
ret
mov
loope
fdivr
inc
sbb
inc
push
mov
pop
xor
jbe
popf
sub
test
mov
mov
cwtl
add
decb
dec
sbb
add
cmp
leave
pusha
aad
dec
arpl
push
aaa
mov
aaa
adc
push
mov
adc
addr16
lret
xchg
mov
in
ret
scas
mov
mov
or
imul
xor
push
cld
jb
pop
sbb
insl
cld
cmpsb
mov
and
sar
push
daa
outsl
push
add
mov
sub
packssdw
aad
and
mov
mov
icebp
sbb
lahf
lds
push
and
es
mov
push
jl
dec
aam
pop
inc
hlt
dec
push
scas
inc
fidivrs
push
pop
pop
mov
enter
scas
mov
mov
jge
inc
nop
cmpsl
push
adc
cmp
test
movl
loope
daa
jecxz
in
push
inc
add
outsl
adc
mov
sbb
shlb
xor
xchg
stc
icebp
in
jmp
inc
pushf
or
cmp
mov
pop
aad
xor
xchg
fisttpl
sub
adc
pop
hlt
mov
jp
xchg
hlt
stos
stos
aas
xor
repnz
mov
lea
push
sbb
mov
xor
xchg
xchg
mov
fildll
fadd
sti
xchg
xor
test
jnp
sub
pop
insl
pushf
xor
out
jle
pop
mov
push
mov
arpl
pushw
fwait
lock
xchg
cmp
xchg
ret
pop
pop
mov
sbb
pop
adc
jae
out
cld
mov
xchg
mov
adc
cmp
xchg
lret
adc
into
shll
add
push
lds
cs
dec
inc
jp
loope
sub
xchg
fcmovb
andl
orl
scas
xchg
jecxz
dec
pop
jl
mov
xchg
scas
lea
dec
adc
outsl
dec
mov
addl
lret
cmpsl
rcrb
hlt
loope
insl
pop
dec
addl
mov
call
lods
aaa
adc
iret
push
dec
push
dec
inc
dec
repz
fnstcw
sti
mov
int
adc
test
lea
sub
push
cmpsb
in
test
test
imul
pop
sub
cmp
inc
cmp
sbbl
sbb
add
mov
das
fimull
stc
leave
xchg
pop
jae
enter
hlt
pop
out
ss
in
lds
push
push
addr16
sbb
xchg
pop
cmp
inc
dec
mov
cmpsb
sub
add
cmp
dec
dec
pop
enter
adc
insb
add
dec
out
mov
inc
jle
shr
pop
addr16
mov
cli
icebp
cmp
outsl
ret
pushf
xchg
pop
xorb
loop
cmp
scas
repnz
pop
clc
cli
cli
mov
sahf
push
dec
pop
popa
sbb
adc
outsb
sahf
or
push
test
and
jae
mov
and
sbb
andl
fildll
push
sub
and
add
lods
lahf
testl
or
xchg
xchg
jmp
and
jle
mov
xchg
push
jmp
lds
fidivrl
xchg
push
rorb
enter
push
and
das
push
xor
clc
popf
mov
pop
call
ficoml
jecxz
inc
sysenter
adc
sbb
push
cmc
pushl
pop
icebp
cmc
jg
sbbb
icebp
mov
adc
sub
dec
pop
cmp
cmp
cmpsb
push
repnz
xor
push
sub
cmp
lahf
or
fs
mov
xchg
jle
fisubrs
stos
lret
sahf
insb
inc
adc
push
das
lret
ret
adc
jl
incb
inc
cmp
mov
mov
mov
adc
movl
dec
dec
pop
in
ljmp
test
sarl
lret
push
xchg
ss
mov
xlat
adcb
cltd
sti
mov
adc
cmp
ret
xor
mov
inc
or
shrb
push
cmp
int
aaa
ret
cmp
test
lock
cmc
stc
pop
push
mov
fstpt
ret
lods
jle
push
and
in
sub
dec
mov
jg
mov
aas
dec
and
shll
jecxz
dec
sub
xor
mov
punpckldq
add
adc
aad
mov
sbbl
jmp
loop
push
scas
lds
lds
aam
ja
push
mov
push
sbb
sti
push
jae
mov
xchg
rorl
rorl
mov
cwtl
pop
outsl
mov
or
lret
mov
fcoml
xchg
les
addr16
and
loopne
xchg
adc
dec
lahf
inc
jne
dec
fsub
pop
add
lret
iret
xchg
mov
pop
nop
js
dec
and
pop
stos
jno
mov
stos
jb
repnz
jmp
adc
andb
mov
dec
test
mov
outsb
mov
xchg
jecxz
std
repnz
in
sbb
rcl
insb
mov
or
lds
out
into
shrb
ror
xor
dec
dec
rorl
movsl
push
xor
pop
mov
push
push
mov
and
pop
xchg
scas
cli
daa
popf
mov
adc
loope
cltd
mov
mov
das
mov
dec
les
sbb
mov
sub
cwtl
sti
rcr
lret
or
cmpsl
push
movsl
inc
inc
adc
subb
cmpb
ret
jb
int
test
movsb
mov
cmp
sbb
daa
stc
cmc
es
sbb
inc
nop
push
lods
push
aad
xchg
icebp
sub
pop
add
les
addl
sbb
dec
aam
test
scas
lret
xchg
cli
pop
jb
imul
xor
cmc
inc
add
enter
mov
mov
xor
into
inc
xor
ss
loopne
sti
lock
lods
mov
mov
arpl
fsubrl
cwtl
xchg
pusha
bound
lret
pop
inc
leave
cs
inc
or
enter
loop
xchg
mov
xor
ficompl
out
imul
push
cmp
cli
aas
sti
mov
adc
and
mov
ficoml
cmpsl
hlt
sbb
sbb
pop
fildl
jne
ja
cmp
loop
call
mov
and
sub
repz
jnp
loopne
pop
push
jge
mov
jno
mov
inc
loope
inc
fidivl
in
mov
es
lahf
je
movsb
icebp
xchg
inc
xlat
sub
jg
pop
pop
pop
clc
push
mov
and
test
arpl
sar
and
mul
aaa
mov
addl
xor
mov
mov
rcll
movsl
into
lds
test
add
jl
mov
cmp
icebp
aad
sbb
aaa
sub
lea
movsb
rcrl
insb
mov
xor
cmp
mov
push
sub
addr16
adc
dec
cmp
sub
in
push
dec
mov
decb
lcall
push
in
test
sub
pop
das
mov
jbe
xchg
out
sbb
call
je
jne
pop
movsl
outsl
jp
mov
push
push
mov
add
je
shlb
pop
cwtl
pop
and
jb
mov
mov
jle
in
dec
mov
aam
jno
mov
fucomp
call
mov
mov
lcall
mov
push
push
outsl
ret
sbb
xor
add
jge
mov
mov
test
inc
pushf
mov
sahf
jle
cmc
jo
out
fwait
and
je
xlat
jmp
mov
leave
or
pop
xchg
iret
adc
fimull
cwtl
ds
lock
movsb
lret
clc
or
arpl
fnstsw
movsl
scas
jge
into
int
ret
push
and
cmc
sub
aam
jbe
js,pt
in
js
mulb
ret
sub
pop
cmp
adc
sar
shl
dec
mov
pop
xchg
lahf
jno
add
fwait
testl
repz
xor
lahf
popa
sub
cmp
shl
sbb
and
add
mov
cmp
adc
fwait
mov
cmp
jge
cmc
cmpsl
cmc
mov
add
aas
cmp
sbb
sbb
add
mov
mov
pop
outsl
fisubrs
xchg
pop
sbb
push
sub
loop
mov
ret
roll
sbb
xchg
cmp
xor
dec
jnp
mov
cmp
repz
test
adc
loop
scas
clc
fnstsw
cmpsl
arpl
mov
mov
sbb
stos
xchg
aad
test
cltd
aas
sahf
orb
sar
mov
scas
cmpsl
xchg
xchg
sarb
scas
sub
mov
les
pusha
aas
les
pop
and
js
pop
adcb
adc
mov
sbb
bound
add
sbb
test
fwait
sbb
mov
dec
jl
sbb
mov
dec
ljmp
add
pop
fsubp
sbb
adc
cmp
push
data16
shl
hlt
ja
mov
je
int3
lods
xchg
or
adc
fisttps
and
mov
fsubrs
and
add
cmp
add
jne
scas
cld
mov
outsb
in
lret
pop
js
jge
xchg
in
push
dec
out
adc
lds
or
andb
dec
mov
push
cld
add
lods
jbe
leave
xchg
loopne
stos
or
out
pop
mov
stos
cmpsl
sbb
int
adc
push
push
stc
dec
sti
xor
imul
icebp
jg
pshufw
xor
jbe
cmp
jecxz
in
pop
out
jae
or
scas
in
repnz
mov
pop
scas
out
inc
mov
js
xor
adc
pusha
add
mull
push
cltd
and
mov
mov
fwait
xchg
push
bound
and
mov
pusha
sub
or
sub
cltd
ret
adcl
lcall
inc
cmp
ret
dec
inc
rol
jb
sub
mov
cmp
xchg
enter
pop
fstpl
dec
fstpl
mov
dec
lahf
pop
mov
adc
lock
in
mov
mov
fcoml
jecxz,pt
dec
xchg
jne
clc
les
jg
push
mov
ss
scas
pop
fcmovnbe
jb
pop
cmpsl
js
hlt
insb
sbb
loope
std
ret
mov
inc
mov
jo
fnstcw
ds
insl
fistl
addr16
loope
xchg
outsb
push
hlt
sub
add
sub
lods
rcrb
mov
mov
pop
inc
cli
pop
xor
dec
in
push
mov
loopne
cmp
repnz
pop
hlt
inc
fisttpl
mov
in
adc
iret
jo
mov
sbb
notl
aas
pop
insl
jns
rcrb
jns
mov
dec
ret
aad
push
sub
mov
pop
inc
or
roll
add
stos
xchg
push
fcoml
mov
inc
adc
pop
fidivrl
sub
out
lods
daa
add
mov
outsb
mov
add
insb
mov
dec
xlat
cmp
pop
mov
daa
lock
test
icebp
call
ret
loop
fmulp
xchg
jl
lods
push
mov
in
sahf
ss
mov
inc
adc
movsb
hlt
or
addr16
das
hlt
xor
sub
scas
shrb
int3
stc
dec
ret
and
lret
jl
mov
imul
jecxz
jp
ss
xchg
mov
cmp
mov
xchg
jg
pop
xorb
mov
ret
testb
push
test
push
je
orl
sub
lock
push
jae
sub
sbb
aas
push
scas
pusha
movsl
and
stos
fstps
push
or
cli
test
or
dec
cmp
dec
xor
cmp
cmp
cwtl
lret
sub
out
inc
cld
dec
imul
mov
lds
xchg
fistl
add
dec
faddp
adc
pop
sub
fs
pushf
or
add
xlat
lods
jns
add
cwtl
and
arpl
test
sub
mov
push
and
inc
mov
fistps
xor
add
mov
clc
and
xchg
push
inc
add
inc
lock
mov
stos
inc
repnz
push
testb
insb
dec
push
cmpl
and
xor
jecxz
inc
inc
dec
and
cltd
jne
push
rcrb
or
mov
sbb
test
ja
mov
loopne
scas
fldcw
pusha
lahf
stos
stos
outsl
mov
loope
sbb
cmp
inc
jnp
enter
xor
pop
mov
loop
test
addr16
aad
lret
imul
adc
xor
add
out
cld
loopne
fsubrl
xchg
iret
inc
outsl
pop
push
shrb
ret
cmp
and
enter
scas
std
popf
cmp
out
mov
mov
mov
jae
cmp
cld
stos
aam
mov
gs
dec
mov
mov
push
xlat
loop
outsl
push
fstpl
insl
sahf
lods
xchg
xchg
push
stos
dec
fcompp
adc
xchg
movsl
pop
xor
cld
push
adc
sbb
and
inc
push
mov
ror
cmp
cwtl
shll
mov
stos
test
mov
aam
out
inc
test
cwtl
sub
scas
xchg
in
faddl
xlat
lds
std
sbb
dec
dec
call
dec
lret
cmp
push
inc
xchg
adc
js
test
mov
and
cmpb
cmp
jne
cwtl
movsl
mov
mov
aaa
pop
jmp
cld
pop
ret
mov
bound
sub
aas
push
adc
xchg
xchg
leave
and
pop
fucom
jle
lret
adc
insb
orl
cmp
mov
xorb
xor
cmp
lret
daa
negl
popf
cmpsb
rcl
sub
push
arpl
inc
xchg
push
popa
fcomp
sbb
daa
jmp
inc
sbb
pusha
scas
mov
sbb
je
mov
xchg
into
mov
add
cmp
inc
mov
push
cmpsl
fildll
fsub
mov
mov
inc
jle
stos
cwtl
aaa
or
mov
sti
std
pop
sbb
push
out
mov
push
xchg
lock
cmc
mov
pop
xor
pop
jo
cmp
mov
test
orb
push
test
stos
jl
xchg
pop
int
xchg
dec
fcoms
xor
jle
mov
cwtl
or
mov
mov
sub
fildll
imul
aam
pusha
les
sarb
call
shrb
iret
aaa
lcall
xchg
leave
inc
imul
adc
std
mov
cli
and
into
cs
int3
jmp
sbb
movsb
aam
pop
nop
cmp
popa
sub
xchg
iret
arpl
mov
pop
roll
cs
scas
cmp
data16
psadbw
and
lods
jmp
xchg
mov
and
pusha
xorb
pusha
cmp
test
insb
fldcw
stc
fildll
and
jp
sub
pop
and
out
fildl
mov
mov
mov
adc
test
out
jecxz
push
test
fldt
push
inc
jmp
loopne
sub
adc
iret
int3
cmp
decb
outsl
in
sbb
xorb
mov
cmpsl
cwtl
lret
fldcw
lods
cmpsb
xlat
cmp
sub
ds
mov
xchg
mov
dec
sahf
mov
lds
enter
xor
push
sbb
test
std
inc
cmp
jnp
repnz
rcl
push
repnz
std
inc
xchg
inc
pushf
jae
iret
push
lea
sbb
hlt
test
push
xor
xor
cld
mov
mov
add
ljmp
xlat
mov
ret
aas
repnz
popa
call
cwtl
loopne,pn
sub
rol
inc
rcr
cmc
or
mov
ret
cmp
pop
mov
xor
std
push
lret
shlb
xor
sbb
in
add
jl
stos
push
addr16
test
fstl
xchg
cli
jns
out
or
rcr
les
xor
sub
push
jge
inc
rol
pop
add
stos
mov
mov
mov
xchg
jb
mov
aad
mov
sbb
and
fildl
roll
xchg
pop
fs
dec
rorl
mov
xor
dec
or
ja
and
mov
dec
sub
out
xlat
rcrb
pop
mov
pushf
pop
sub
test
ljmp
mov
ret
fnstenv
or
sti
jge
xchg
shlb
fs
adc
scas
xor
test
sub
mov
push
sbb
adc
jle
sbb
mov
or
and
decb
jp
xlat
in
xor
call
inc
sahf
mov
leave
pop
sbb
outsl
fsubs
jne
adc
add
sti
stc
leave
xchg
cs
cmpsb
or
mov
jl
test
add
sub
arpl
sub
mov
sub
push
add
add
mov
and
mov
inc
sub
xor
mov
in
sarl
xchg
mov
ret
std
jge
adc
inc
xor
repz
stos
es
fs
adc
in
repz
loopne
cmp
movsl
in
testb
mov
imul
sti
in
lds
or
aam
jmp
movsl
stos
pushf
inc
test
xor
movsb
pop
push
xor
mov
fsubs
lret
cmp
cmp
fidivl
loop
jge,pt
push
loop
cmpsb
lods
mov
imul
cmpsb
movsl
adc
test
sbb
syscall
xor
nop
shrb
dec
sbb
push
sbb
shlb
pop
inc
rcrb
jnp
adcb
addr16
push
out
inc
cs
add
pushl
idivb
lods
mov
rcrl
pusha
xor
shlb
cmpsb
mov
pop
std
xor
seta
cltd
adc
push
aad
push
in
addl
push
mov
or
lds
cmp
daa
xchg
mov
sub
shrl
jae
test
ret
jge
xorb
stc
mov
fstp
jbe
mov
test
cmp
adc
pop
push
mov
pop
sbb
jne
mov
mov
push
push
push
pop
xor
inc
outsl
dec
pop
fwait
xchg
out
or
mov
rcrl
jno
push
ret
pop
inc
inc
pop
sti
insb
mov
inc
cmp
std
mov
jp
mov
fcomps
negl
lahf
ret
adc
mov
mov
addl
loopne
push
add
rcl
stos
adc
loop
push
add
jecxz
imul
or
jle
out
loop
pop
dec
dec
loopne
jg
divl
insl
fsubrs
ds
sbb
in
adc
xlat
pusha
mov
test
repnz
mov
cwtl
xchg
mov
jmp
out
out
stos
andl
xchg
or
xlat
or
xor
adc
cmpsl
and
cmp
jp
xchg
cld
jae
cmc
push
in
cmp
enter
xchg
repz
hlt
shll
dec
cmp
fcoml
mov
or
stc
stos
popa
pop
bound
push
pop
ds
subb
popa
adc
mov
scas
out
dec
cmp
cmp
cmpsl
arpl
test
push
fbld
loopne
cmp
out
adc
cmc
jno
push
test
loopne
mov
fildll
loop
test
xchg
and
cmpl
push
cld
add
loope
cmp
insl
xor
addr16
add
xor
or
cltd
cmp
mov
sbb
push
rolb
add
insb
out
adc
fldcw
or
push
rclb
popa
shrl
nop
mov
popf
mov
loop
mov
push
mov
mov
scas
aaa
rclb
inc
ret
add
ret
jg
mov
pop
jnp
mov
inc
mov
fwait
adc
pop
ret
sti
faddl
into
lea
insb
mov
scas
xor
int
adc
adc
adc
mov
je
sub
xchg
stc
cld
mov
xchg
or
add
mov
ret
or
pop
ffree
out
ret
sarl
mov
add
insb
andl
push
xor
or
popf
out
mov
push
lret
in
aaa
popf
jge
cli
lahf
jno
fadd
mov
shrl
lock
add
push
or
mov
flds
cld
mov
inc
and
dec
and
xchg
out
loop
push
pop
jmp
lcall
push
jg
into
mov
jns
std
loopne
fmull
push
adc
push
jl
lea
mov
jno
push
jns
sub
pop
cmc
inc
inc
dec
cmpsb
and
mov
push
cli
mov
fs
jbe
ds
xor
mov
iret
sub
lods
fsubrp
xor
sbb
mov
dec
cmp
cmp
out
imul
mov
and
pmulhw
jp
mov
lret
pop
out
mov
mov
cmovg
movsb
into
ret
outsb
inc
aas
add
sub
sti
cwtl
xlat
mov
jo
xor
data16
push
icebp
inc
inc
fwait
or
mov
stos
imul
add
fbld
inc
jmp
ss
pop
and
cmp
pop
lret
xchg
movsb
push
and
cmp
test
sub
js
lds
jae
and
rclb
add
xor
pop
or
out
xor
add
sbb
pop
ficompl
mov
dec
mov
push
dec
jae
pop
xchg
adc
aad
sbb
lret
jns
mov
popa
inc
xlat
cmp
insb
int3
daa
cmp
ja
sahf
push
push
xchg
mov
push
mov
add
or
inc
push
lds
adcb
mov
aaa
lret
jno
pop
cmc
cli
nopl
mov
test
and
mov
cmp
stc
jne
idivb
add
arpl
mov
movsb
daa
and
fs
popf
mov
add
mov
push
adc
dec
int
pop
aad
cli
ljmp
and
xorl
sti
rcrl
mov
adc
sbb
xlat
jns
dec
sbb
or
popf
iret
cmp
dec
les
xor
adc
stos
adc
aad
sbb
xor
jno
cltd
mov
icebp
and
insb
imul
pop
outsb
add
mov
cmpsl
xchg
aas
lea
adc
adc
cmc
je
push
pop
cmp
rclb
push
lds
mov
movb
mov
jbe
insl
push
fstp
sbb
sub
sbb
inc
sub
cmp
cmc
jecxz
and
xchg
fldl
add
insb
shlb
popa
pop
jmp
pop
pop
fldenv
sub
std
sbb
movsl
pop
jbe
scas
ss
sub
jle
fs
sbb
sbb
out
minps
in
mov
scas
xchg
pop
add
or
xchg
pop
stos
in
std
mov
mov
jne
cli
jmp
xchg
push
repnz
inc
test
xor
les
xchg
inc
dec
sub
mov
jae
cld
in
hlt
jae
ret
xlat
push
cwtl
dec
cmpsb
or
dec
xchg
fstl
pop
mov
mov
inc
repnz
fdivrl
xchg
sub
push
arpl
push
imul
mov
or
and
fildl
inc
ss
cmp
or
inc
das
fxch
sub
int3
lahf
nop
pop
jnp
mov
ljmp
xlat
sbb
xor
jnp
lock
sti
in
pop
ss
ss
daa
icebp
sbb
je
insb
mov
subb
aam
call
mov
rol
aas
inc
sarb
popf
jae
mov
popf
mov
or
shl
sub
out
mov
in
inc
data16
jo
jnp
insb
into
mov
cmp
cmpl
ret
insb
dec
enter
test
sub
jge
cmp
in
sub
inc
shrl
lock
gs
std
js
adc
pop
sahf
ficoml
cli
mov
add
lea
lds
add
or
mov
enter
pop
xor
mov
lcall
and
xor
stos
aaa
icebp
or
adc
push
dec
add
call
and
jle
xor
into
fcoms
mov
dec
sbb
inc
jg
ja
ror
rcl
push
add
lcall
push
notb
xor
sbb
xchg
mov
dec
lock
xor
fnstcw
loopne
mov
push
mov
and
mov
icebp
and
sbb
test
cli
mov
bound
jl
jns
jle
fnsave
lahf
xchg
js
xlat
lods
xor
addl
mov
shlb
aaa
out
roll
popa
xchg
cmp
mov
ret
push
loope
xchg
mov
loop
xor
cmp
inc
int
movsb
push
ficoml
lcall
lret
adc
je
setp
xor
jb
xor
mov
lcall
mov
ljmp
mov
ss
out
mov
jbe
int3
mov
stc
push
push
aaa
je
mov
test
adc
ss
adc
and
or
popa
and
clc
mov
xchg
push
cwtl
aas
ret
dec
aaa
iret
jmp
inc
mov
dec
aaa
add
jbe
and
test
sti
jb
adc
pop
fnstsw
leave
or
popa
rcr
outsb
xlat
in
adc
jg
or
sub
cmpb
add
sahf
lods
push
jns
pop
scas
xor
scas
jno
adc
adc
call
xchg
adc
cwtl
cmp
shlb
ret
popf
lods
jp
ds
pop
cltd
mov
inc
sub
ficomps
fs
or
lret
add
push
xor
cli
pop
jmp
inc
xor
or
push
push
push
repz
mov
xlat
popa
cmp
das
and
dec
cld
lods
xchg
xor
cli
pushw
mov
ljmp
outsb
and
call
loopne
or
mov
mov
jno
das
push
int3
dec
clc
inc
xchg
xor
push
push
insl
fistpl
lock
or
cmp
cmp
test
rorb
andl
xchg
fisttps
push
movsb
add
xchg
call
xchg
add
stos
mov
inc
sbb
add
dec
jne
aas
jne
or
push
xchg
push
xor
push
push
sbb
aas
es
jecxz
push
hlt
in
mov
pop
xor
pop
or
mov
popf
ljmp
in
into
jne
jb
icebp
ficompl
hlt
and
icebp
adc
sub
or
push
std
jmp
shl
adc
cwtl
add
jge
ret
notl
repz
jge
pop
cwtl
add
inc
dec
adc
mov
hlt
fidivs
dec
mov
jo
adc
pop
cld
es
cmp
packssdw
inc
mov
hlt
or
cmp
cli
cmp
sahf
clc
int3
ss
sti
pop
scas
adc
insb
addr16
lock
cmpsl
fcomps
shlb
jp
loope
sub
mov
xlat
jo
sub
addr16
xchg
jge
mov
mov
and
push
push
mov
fistps
pop
cmpsl
fbld
mov
or
push
inc
jae
out
cltd
or
add
test
fistl
repnz
xor
nop
sub
mov
aad
inc
xor
lcall
mov
xor
std
xchg
cs
pop
insl
pop
xor
mov
and
je
mov
dec
imul
in
popf
in
loopne
aaa
sub
add
insl
jnp
mov
nop
test
iret
repnz
jo
sbb
int3
jnp
seto
pop
cld
push
pop
mov
fsin
cmp
dec
cmp
movsl
mov
fwait
adc
loope
push
jmp
lods
jp
les
daa
sbb
out
lea
inc
les
test
xchg
outsl
xchg
lret
or
and
jae
dec
ja
popf
popf
lea
call
or
pop
mov
xor
push
jnp
sub
mov
adc
ss
push
add
shll
pop
xchg
inc
sbb
mov
cmp
call
dec
sub
lock
lods
xchg
hlt
je
call
jnp
dec
clc
ljmp
mov
jle
imul
and
rcrl
mov
mov
loope
popf
mov
xor
sbb
mov
neg
xchg
mov
xor
jmp
cmp
mov
add
lcall
mov
mov
jns
lods
or
adc
adc
xor
mov
or
dec
incb
lods
pop
lods
test
and
outsl
mov
jae
jg
gs
into
xchg
mov
sub
out
loope
clc
fwait
imul
xor
insl
int3
sub
rcl
lock
add
lret
jno
lea
sub
outsl
push
loopne
cmp
pop
jns
xor
fwait
bound
xchg
jl
mov
lcall
xchg
sub
mov
mov
fwait
dec
imul
les
jmp
int3
pop
xchg
and
and
std
pop
jp
push
jnp
jecxz
jnp
sub
xor
nop
pop
dec
insb
addr16
jecxz
jecxz
rclb
jb
mov
adc
and
or
andl
sbb
mov
or
jle
lret
xlat
lock
sbb
pop
hlt
cmp
fwait
outsb
es
push
lret
fsts
push
arpl
cmp
sti
pop
fldl
mov
jbe
xor
in
adc
xchg
and
loopne
sahf
push
add
jl
lahf
inc
dec
push
xor
cwtl
ret
and
cltd
mov
mov
or
jge
ret
add
adc
add
mov
or
imul
mov
adc
outsl
mov
push
popa
jle
cmp
mov
mov
sbb
mov
pop
arpl
mov
repz
push
cli
lahf
mov
add
insl
mov
push
push
mov
lea
pop
mov
sub
jo
xchg
xchg
out
adc
push
popa
in
mov
pop
mov
dec
orl
jns
aas
and
xchg
sbb
lods
in
mov
loope
aam
dec
push
shl
sub
das
out
xor
ja
clc
cs
push
cwtl
push
jmp
mov
pop
add
xchg
lret
push
fldenv
or
xorb
xor
fs
cmpsl
and
jo
fdivrp
out
test
movsb
outsl
add
adc
bound
xchg
in
stc
mov
fwait
mov
and
nop
fstpt
outsb
repz
mov
xor
in
dec
cmc
fistpll
jns
int
xor
jne
in
insb
push
ret
or
xor
inc
or
push
mov
add
xor
mov
jb
xchg
leave
pop
sbb
cmp
dec
clc
mov
test
xor
and
stos
inc
shrb
decl
and
clc
or
mov
enter
add
outsb
leave
cmp
popf
bound
imul
call
fxch
push
add
addr16
mov
call
dec
dec
inc
pop
jns
lcall
cmp
mov
mov
call
call
fsubl
jl
sub
jmp
aad
ss
push
lods
mov
gs
fldl
pop
out
push
sti
in
mov
insl
scas
mov
dec
jmp
jle
sub
and
js
mov
imul
mov
popa
adc
pop
adc
add
mov
gs
add
lds
cmpsl
mov
push
cmp
sub
sbb
jmp
add
stos
andl
or
loop
fisubrs
mov
and
fidivs
xchg
movsl
test
shll
or
sub
jl
xchg
popa
mov
dec
mov
or
pop
out
movsb
add
sahf
xchg
testb
dec
dec
fdivr
fwait
push
cld
hlt
sbb
xchg
lods
xchg
cmpsb
sbb
das
scas
enter
outsb
and
mov
xor
imul
jnp
out
scas
sbb
push
ss
pop
mov
or
and
lock
movsb
or
lock
movb
push
sub
and
jle
movsl
or
nop
hlt
and
lods
movsl
stos
mov
mov
sbb
push
inc
adc
ja
loopne
and
ret
cwtl
push
sti
xor
xor
imul
jae
mov
dec
lods
rcrl
add
lods
xor
fsub
shr
loop
out
icebp
and
out
pop
sbb
insb
cmp
mov
jecxz
in
pop
cwtl
mov
xor
lods
and
insb
hlt
outsl
sbb
push
mov
ret
push
call
adc
mov
pusha
push
dec
adc
sbb
jle
loopne
add
pop
or
pop
push
xor
cld
inc
lret
jns
mov
lds
mov
cmpb
out
inc
cld
cltd
push
adc
or
int3
lods
adc
cwtl
and
imul
roll
lea
aaa
jns
jne
push
rcr
rorb
mov
fcmovnbe
addb
pop
inc
push
mov
mov
dec
dec
dec
xchg
sub
in
and
pop
lods
push
fwait
addr16
sbb
out
hlt
cmpsl
out
pop
sub
adc
clc
data16
jnp
cmp
insb
ret
ljmp
pop
gs
lds
jl
addl
outsb
test
insb
mov
inc
test
lret
add
adc
insl
inc
stc
mov
subw
mov
gs
mov
or
sbb
js
pop
int
inc
mov
xor
lods
mov
movsl
mov
cmp
mov
aam
outsl
divb
ljmp
sbb
cmpsb
mov
inc
mov
iret
or
mov
aaa
pop
dec
aas
aam
adcl
lds
or
ss
add
push
rclb
or
data16
outsb
dec
idiv
sbb
in
lret
add
icebp
aas
mov
inc
fldt
aas
push
aam
mov
cmp
pop
inc
adc
arpl
jnp
leave
mov
xor
adcb
je
mov
vcvttps2udq
and
outsl
ljmp
dec
mov
fdiv
pop
and
cmp
mov
pushw
loope
inc
inc
test
mov
mov
les
pop
scas
pusha
mov
pop
xor
sbb
lods
loop
sbb
mov
test
adc
sahf
incb
xor
sub
sub
xor
fldenv
pop
jns
push
mov
mov
in
iret
jns
push
mov
dec
sbb
xchg
jno
cmp
pop
mov
sub
xchg
orl
xchg
pop
push
inc
cmp
xor
aad
in
dec
scas
ljmp
leave
fcompl
add
xchg
scas
pop
in
lcall
rolb
rcr
inc
mov
rcrl
pop
mov
cli
scas
or
lret
push
and
mov
dec
movsb
xchg
movsl
push
dec
or
cmp
xlat
xchg
pop
lcall
call
in
shl
in
pop
enter
addr16
iret
xchg
loopne
jle
pop
cmpsb
jo
nop
sub
addr16
arpl
aad
mov
jle
mov
pop
pop
mov
loope
in
mov
fwait
sub
mov
xchg
test
lods
sub
lock
mov
jp
mov
sub
aam
sub
cli
ljmp
jnp
sbb
rolb
hlt
sub
cmp
addb
mov
mov
adc
mov
or
adc
ljmp
push
jne
dec
lods
cld
lods
mov
out
pop
mov
aam
aaa
dec
cmp
push
call
xchg
pushl
pop
push
fwait
mov
or
imul
cmpsl
in
cmp
in
rcrb
adc
push
cmp
pop
inc
jl
orl
sbb
sbb
addr16
mov
andl
fidivrs
jmp
mov
xor
jo
insl
cltd
cmc
mov
cmp
mov
into
lcall
jns
jl
fwait
js
mov
jae
xchg
lahf
sub
push
xchg
pushf
imul
in
mov
jns
lcall
jno
loop
sbb
mov
pop
imull
mov
pop
jecxz
shl
scas
cmpsb
stos
inc
repnz
dec
pusha
or
int3
and
out
test
shl
mov
std
fs
leave
popf
popa
repnz
imul
mov
stos
mov
mov
xlat
pop
jg
dec
insb
lods
das
pop
ficoms
xor
and
mov
dec
cmp
scas
xchg
stos
mov
pusha
sub
mov
jmp
in
dec
imul
lea
cmp
loop
pushf
push
clc
mov
xchg
inc
and
pop
cmpxchg
cltd
and
sahf
sbb
dec
pop
cmp
aaa
out
xchg
hlt
inc
clc
or
shll
test
loopne
inc
addr16
mov
hlt
xchg
sbb
xor
inc
repz
jmp
outsb
xchg
rorl
cmp
pop
mov
xlat
js
out
sti
mov
pop
sti
fidivl
test
es
aad
movsl
gs
add
repz
mov
rorl
mov
push
daa
fmuls
or
aaa
movsl
push
cmpsl
push
or
or
dec
gs
xchg
jge
sahf
push
mov
xchg
or
push
jae
in
mov
repnz
outsl
jecxz
push
sub
or
js
cmp
stos
ja
add
xor
xor
sbb
fucom
jne
test
fisubrs
adc
fidivrs
sub
dec
and
aas
xlat
or
mov
mov
mov
mov
in
and
lds
insb
sub
in
push
and
xchg
fldl
stc
xor
xchg
cmpl
mov
je
fs
mov
stos
xchg
lea
sbb
sahf
cmp
jnp
sub
shll
and
or
mov
xor
sbb
or
int
lods
repnz
loope
sbb
clc
jecxz
lock
call
fcom
imul
jmp
adc
bswap
lods
sahf
xor
mov
inc
cmpsb
inc
and
pop
icebp
std
loope
loopne
pop
std
into
mov
cmpsl
ret
mov
xchg
outsb
push
mov
pop
lret
xchg
leave
aaa
lcall
aam
fidivl
jmp
and
push
das
inc
ss
fidivrl
inc
int3
ljmp
lcall
enter
frstor
cld
jno
pop
or
jg
js
xchg
loop
sar
fnsave
insl
mov
mov
aas
ljmp
fisttpll
xor
cmp
mov
in
fchs
daa
bound
mov
mov
repnz
sbb
popa
repz
lods
pop
movsb
sub
subl
xchg
jnp
lods
lcall
loope
ljmp
ret
sti
jae
test
xor
int
pop
push
xor
sub
rol
xlat
or
mov
jne
push
mov
cmpsb
jl
outsb
xchg
out
dec
aas
xchg
cmp
lods
ljmp
mov
dec
jnp
mov
sbb
outsb
fstl
pop
iret
out
shll
nop
jne
cmpsl
and
pushf
and
or
mov
add
testb
and
outsl
cld
insb
jb
outsl
mov
mov
mov
mov
loop
dec
loope
or
add
adc
js
dec
scas
aaa
push
and
addr16
dec
cmp
push
xor
mov
fldenv
hlt
sbb
mov
mov
nop
fbld
and
or
dec
fisttpll
cmpsl
repz
outsb
pop
adcb
iret
pop
sahf
popa
sarb
fwait
test
mov
imul
jecxz
sub
sub
pop
add
daa
add
dec
xor
xor
cmpsb
xchg
xor
popa
add
mov
pop
lock
sbb
out
int
fxch
lret
pop
sbbb
jg
pop
aam
dec
mov
cmp
rorl
pop
fs
adc
lret
sarb
stos
pop
cwtl
mov
loope
pusha
sbb
mov
and
fs
fmul
outsl
fcoml
inc
jae
enter
popf
sbb
rcll
int3
jb
push
out
add
fsubrp
lods
lahf
cmp
sahf
lcall
jo
xor
add
scas
out
lea
mov
pop
mov
jmp
push
shrl
sbb
pop
imul
dec
and
mov
add
iret
fs
and
mov
divl
insb
emms
lods
insl
mov
and
jb
stos
adc
inc
stos
adc
or
sbbb
or
imul
or
icebp
cmp
add
push
or
mulb
inc
mov
nop
sub
xchg
adc
add
icebp
mov
sub
mov
out
into
jns
fdivrl
pushf
sub
or
mov
xchg
mov
mov
clc
adc
hlt
and
sbb
sub
loope
dec
test
stos
jns
ljmp
sarw
or
jae
out
xchg
sti
icebp
or
push
xchg
rorb
xchg
ret
xor
cld
add
fcomi
or
lret
push
decl
bound
or
testl
xchg
and
gs
xor
test
mov
mov
cs
pop
jmp
push
ret
jl
icebp
xchg
push
dec
cmp
scas
jecxz
mov
add
stos
insb
push
out
aad
filds
lds
push
sbb
imul
cs
pop
mov
xchg
adc
or
pop
fisubl
cld
test
inc
pop
aaa
push
push
cwtl
fstps
mov
sbb
call
addr16
int
xchg
addr16
add
pop
push
ja
and
imul
adc
bound
adc
sbb
in
mov
mov
nop
sbb
mov
rcl
out
sti
stos
nop
or
sbb
mov
cs
sbbb
and
lret
loop
rorl
push
call
sbb
jno
outsb
and
ja
push
and
adc
lea
jge
cs
fstps
sub
or
mov
xchg
add
push
out
enter
xchg
sub
mov
arpl
mov
dec
stos
sbb
inc
stc
rcrl
pushf
push
insl
scas
jl
pop
andb
push
loope
add
cmpxchg
or
or
cs
jns
ret
dec
add
pop
xchg
jp
ds
or
adc
insb
mov
jg
mov
sti
mov
mov
dec
lcall
call
fstps
scas
xor
lcall
add
push
sbb
mov
test
scas
or
test
push
ljmp
mov
in
shlb
in
pop
dec
jns
mov
inc
scas
fisubrs
xchg
movsl
leave
add
xor
sti
aad
jmp
pop
mov
pop
inc
push
xor
popf
xor
mov
push
lea
jmp
xor
pop
int
loopne
push
hlt
mov
mov
std
cld
xlat
jo
pop
sbb
dec
push
mov
or
jp
push
sub
mov
out
cmovle
imul
sbb
push
mov
mov
push
sub
lea
out
lret
push
pop
fisubrs
jns
flds
testb
lds
mov
xor
aaa
adc
inc
loopne
lret
cmp
and
jne
repz
test
push
mov
fwait
cmc
pop
pushf
cltd
scas
xchg
stc
dec
in
aaa
mov
adc
xchg
and
stc
pop
xchg
mov
fcompl
scas
cmp
push
or
xor
popa
iret
lds
jnp
pop
mov
dec
cld
fwait
scas
adc
push
les
and
sbb
lcall
out
cltd
jmp
gs
sbb
inc
int
fidivrl
jg
ja
enter
jns
sti
mov
out
and
cmp
fadd
pop
aad
sahf
jmp
mov
outsl
sahf
imul
pop
and
test
inc
and
push
stos
outsl
insb
xchg
test
sub
mov
rcrl
out
push
and
mov
and
adc
fwait
xchg
inc
pusha
add
test
jnp
push
out
and
sbb
jmp
jge
sbb
sub
mov
inc
ja
cmpl
inc
mov
cmp
cmp
repz
sub
cmp
test
test
les
test
rorl
mov
sub
lret
shl
push
push
in
lea
out
loope
mov
ja
hlt
adc
sbb
mov
pop
lahf
and
jb
push
shl
mov
jecxz
xchg
add
pushf
xchg
fsubrl
lods
inc
and
mov
into
pop
sarb
adc
cmp
add
or
popf
in
out
test
jecxz
pop
or
push
insl
out
push
mov
shrb
and
nop
imul
jo
into
call
mov
in
pushf
fmull
and
fmull
or
mov
adc
mov
orl
imul
in
add
popl
mov
sub
adc
jno
and
mov
setns
jo
stos
add
inc
mov
or
mov
mov
pop
scas
jae
fwait
push
mov
inc
jg
scas
cmpb
test
cmc
testb
cmp
mov
mov
andl
push
push
ret
mull
lds
inc
les
repnz
popf
jge
push
adc
ffreep
je
mov
leave
loopne
inc
adc
call
loope
pop
add
les
sbb
adc
mov
das
lahf
outsb
loop
bound
repz
adc
sbb
mov
lds
rorl
inc
pop
js
add
pop
xlat
sub
leave
jo
mov
fimuls
je
rcll
sbb
pop
xor
or
mov
xchg
mov
ja
adc
xchg
icebp
xor
loope
test
fstpl
jmp
dec
mov
or
int3
pop
jecxz
adc
jbe,pt
pop
adc
xchg
ja
sbbl
in
adc
es
pop
pop
pop
xor
or
mov
mov
or
subb
insb
roll
ds
mov
ljmp
xchg
pop
mov
and
xchg
lods
jb
pop
push
adc
mov
mov
jp
or
neg
xor
stc
lea
push
cmp
sbb
fdivl
pop
xor
dec
cmc
cmp
out
and
xchg
mov
xor
push
xchg
clc
test
js
xchg
test
ret
jb
sahf
aam
fiaddl
jg
fistps
movsb
pop
lret
divb
cld
adc
sub
xchg
push
and
inc
xor
add
into
mov
rolb
fbld
dec
cli
cltd
ja
and
cmp
mov
and
jg,pt
mov
pusha
test
sbb
jo
mov
cld
mov
or
cmpsb
mov
cltd
hlt
adc
rcrb
ffreep
hlt
pop
push
push
inc
sub
popa
sub
inc
jp
scas
push
mov
dec
cmc
jb
xchg
mov
rorb
iret
xorl
pop
xlat
out
shlb
and
bound
sbb
mov
jbe
cmp
pop
dec
sub
inc
mov
add
jne
jp
test
out
and
jno
dec
cwtl
sbb
sub
xor
rsqrtps
cmp
jne
push
sub
in
loopne
jae
cmp
loop
lods
cmp
fldt
loopne
mov
mov
lret
out
jne
out
sub
fsubrl
ret
push
xor
hlt
in
jno
outsl
pusha
xchg
sub
xchg
sub
inc
rolb
std
mov
pop
add
imul
aad
push
std
xor
xchg
imul
movsb
pop
test
mov
pop
push
movsb
mov
fmull
add
popl
and
adc
stc
inc
stc
push
addb
xlat
iret
sbb
jo
shll
add
cmp
jno
cld
icebp
scas
cmp
xchg
sub
inc
test
mov
push
fisubrs
push
xchg
daa
fs
pop
push
pop
push
movsl
imul
adc
scas
idivl
ffree
mov
sbb
adc
jmp
fcoms
mov
or
popa
jne
mov
push
xchg
sbb
movsb
mov
and
rcrb
xchg
adc
dec
add
test
adc
mov
pop
inc
mov
imul
jge
adc
lods
inc
ret
sahf
lea
xchg
jb
out
add
or
fnstcw
loop
iret
or
mov
xor
xchg
push
mov
scas
add
test
xchg
push
mov
xorl
mov
scas
out
add
sbb
adc
clc
jmp
cmpsl
stc
sub
mov
sub
test
fildl
sub
push
mov
fstp
push
jne
jae
mov
push
sbb
fnstsw
or
add
xor
pop
jno
and
popa
out
mov
pop
xchg
test
rol
jg
cmpb
ficoml
les
lret
outsl
pop
filds
nop
mov
cs
pop
pop
mov
sbb
lret
ljmp
push
or
and
pop
add
sbb
lahf
jmp
ss
lcall
stc
xor
ja
out
mov
xchg
jns
sahf
roll
arpl
orl
sbb
dec
loop
lock
out
push
pushf
lds
fwait
jg
daa
iret
gs
ret
add
mov
pop
mov
or
mov
data16
jle
jge
xchg
lods
shrb
mov
xchg
fistpl
dec
inc
scas
pextrw
push
xchg
mov
jae
sub
loope
mov
lods
les
enter
stos
push
nop
xor
addr16
and
pop
pop
outsl
push
push
gs
in
out
jecxz
loope
jge
imul
lds
imul
nop
dec
subb
sbb
mov
lods
and
jne
into
push
adc
cmpsl
insb
adc
in
push
mov
or
cwtl
sbb
testb
sub
je
daa
nop
mov
jge
mov
sahf
dec
lods
pusha
aas
sub
cmp
shlb
lock
jle
and
inc
imull
push
aaa
sub
jno
mov
push
or
pop
push
aaa
and
sub
aam
or
xchg
mov
sbb
shr
mov
orl
push
fbld
test
movsb
inc
insb
add
jp
cmc
cltd
sub
rcl
out
enter
push
mov
imul
lahf
daa
mov
aad
pop
out
test
in
and
push
jp
xchg
call
jg
out
ja
jo
clc
adc
fwait
leave
mov
push
lret
in
sbb
aam
aam
outsl
xlat
inc
jns
xchg
xchg
ret
dec
mov
mov
jo
xor
or
in
aaa
mov
fcomi
jnp
mov
lret
es
fwait
mov
cmp
repz
test
add
mov
xlat
dec
adc
dec
mov
pop
stos
cmpsb
xchg
xor
scas
fwait
xchg
repnz
outsb
sbb
in
mov
or
outsb
push
jg
sbb
inc
jbe
sub
xchg
ja
xor
add
inc
mull
lds
sub
sbb
roll
pop
xlat
frstor
mov
mov
mov
sbb
fistps
dec
testb
in
jnp
sub
hlt
pop
mov
jmp
inc
adc
iret
fcmovbe
movsl
xchg
mov
or
mov
dec
test
adc
xchg
or
adc
int
lahf
pop
fmul
add
sti
or
fwait
xor
js
mov
jecxz
sbbb
lcall
mov
leave
or
aam
cmp
xor
lea
mov
lods
mov
push
lahf
sti
push
sbb
xor
lock
jmp
cwtl
ss
and
data16
imul
mov
scas
pop
jge
arpl
pop
and
cmp
js
xchg
sub
jae
cmpsl
movsb
cmp
jbe
call
lret
or
cli
dec
repz
mov
and
ffree
xor
arpl
lret
add
jl
mov
sbb
push
pusha
dec
loope
lret
mov
sbb
out
pushf
and
xchg
pop
inc
bound
mov
stc
xor
jmp
sub
jmp
das
mov
ja
insl
loop
jp
dec
xor
in
bound
out
nop
pop
jnp
push
pusha
repnz
mov
stc
ja
cmc
ljmp
dec
jle
mov
mov
mov
push
push
imulb
dec
outsb
and
cmp
rcrl
pop
fsubrs
jle
mov
loope
mov
jp
repz
push
stos
xchg
clc
js
data16
ret
mov
iret
pop
rolb
add
out
stos
rcrb
sub
fstpl
jb
jg
clc
movsl
mov
xor
sbb
and
sbb
xchg
jl
lret
into
sub
dec
loop
push
dec
aas
repnz
fildl
es
pop
mov
cltd
xor
ror
and
in
not
sbb
pop
push
call
outsb
cmc
iret
cmpsl
scas
shrb
xchg
sub
loop
cmp
iret
mov
pop
xchg
dec
and
add
out
loop
jecxz
notl
test
dec
into
or
outsl
mov
adc
inc
add
sbb
add
les
dec
add
xchg
sub
arpl
xchg
imul
int3
imul
jmp
cmp
push
ret
jbe
or
bound
aaa
pop
lock
sub
lcall
and
dec
inc
sbb
scas
add
cs
mull
adc
and
out
nop
scas
js
cld
mov
push
notb
in
mov
gs
pop
pop
fimuls
and
xchg
andb
jo
sti
outsb
ret
pop
xchg
mov
daa
jle
add
push
xor
inc
push
outsl
fsubr
add
shll
outsl
mov
mov
es
lcall
cmp
mov
rclb
fisubl
aaa
pop
cmp
in
sub
dec
jne
jge
pop
mov
xor
mov
push
sbb
iret
rorb
int3
imul
push
push
pop
in
mov
pop
lahf
pop
and
cmpsb
test
scas
xor
roll
pop
test
fmull
insb
sbb
inc
imul
insl
je
mov
ret
mov
cmpsl
shl
and
es
dec
mov
sub
xchg
lcall
sub
jne
cld
or
sbb
push
ret
sti
xchg
jg
bound
mov
mov
jae
mov
dec
pop
sbb
or
ja
mov
clc
scas
dec
mov
mov
and
sbb
cmpb
cmp
inc
jbe
and
cmpsb
imul
add
push
cmp
xchg
or
int
and
cld
pop
stos
loope
mov
rcrl
out
mov
cmp
cmp
fcmovne
push
and
mov
ljmp
roll
popf
pop
dec
mov
imul
insl
orl
fisttps
data16
inc
and
mov
push
fcmovbe
jae
leave
outsb
and
clc
mov
sub
cmp
lret
adc
inc
fmuls
test
pop
jns
sub
sub
arpl
jno
insb
cs
cs
iret
pop
ljmp
cs
test
adc
cmp
adc
sti
lahf
xchg
add
jl
aam
fdivrp
aam
or
pop
xor
dec
hlt
outsl
sbb
sub
push
add
jg
or
cmp
cmc
cmpsl
dec
mov
mov
pop
roll
sbb
mov
imul
push
and
ret
imul
imul
inc
mov
and
lret
ds
stc
mov
std
mov
icebp
es
pop
or
push
sbb
jecxz
mov
and
scas
repnz
push
adc
inc
fsubs
or
xchg
push
pop
or
sub
mov
and
or
push
or
and
add
adc
inc
aaa
push
cmp
or
cmpsl
xorb
jp
adc
scas
and
mov
mov
stos
pop
xor
les
or
pusha
mov
dec
xchg
inc
xlat
xor
or
aas
lds
cmp
std
loop
xor
stc
dec
add
gs
sub
jmp
in
int3
int
push
inc
hlt
aaa
pop
mov
outsl
or
pop
sub
xchg
lds
push
popf
aaa
ds
pop
xor
mov
pop
jmp
pop
fidivs
pop
fistpll
jno
push
insb
pushf
rorb
mov
sti
aaa
push
lods
and
adc
pop
sbb
lea
scas
pop
scas
into
cmc
mov
hlt
cli
adc
jle
xor
adcb
test
incb
add
and
mov
js
les
aaa
jmp
adc
inc
mov
jge
push
cmp
repz
ds
fcompl
add
popl
mov
adc
stos
inc
jmp
push
mov
mov
add
pop
jp
or
push
into
fcmovnb
sahf
add
push
and
mov
pop
dec
xor
ret
call
int3
sub
or
mov
pop
aas
iret
pop
pop
icebp
mull
mov
je
fistpl
cmp
insb
or
shr
sub
sahf
mov
cwtl
lods
lret
jle
shrl
dec
sarl
leave
cli
sbb
sbb
add
pop
adc
pop
add
dec
sub
push
xor
inc
scas
jl
lcall
cmpl
cmp
pop
cmp
jae
cwtl
add
xor
xchg
add
ret
jecxz
out
subb
inc
fmull
lea
mov
jbe
loop
sbb
push
fst
stos
loopne
and
jo
stos
cmp
test
sub
sub
mov
mov
cmp
inc
inc
mov
outsb
push
fnsave
insl
repnz
sub
ss
inc
inc
cwtl
inc
and
mov
and
mov
ret
sub
repnz
pcmpeqw
adc
mov
mov
test
scas
mov
shll
nop
or
pop
inc
add
mov
mov
inc
jno
xchg
push
cld
mov
outsb
inc
push
cmp
fstl
rcrb
imul
clc
add
popf
shll
pop
mov
ja
mov
daa
lock
repz
hlt
out
mov
pop
aam
and
insl
sub
cmp
cmpsb
dec
and
mov
adc
push
xchg
stc
cli
pop
xor
xchg
clc
xchg
mov
xor
push
psubd
cmp
dec
mov
movsb
jnp
stos
cmpsb
loope
jo
movsb
inc
add
inc
mov
in
fs
out
mov
leave
gs
out
es
mov
inc
sbb
aas
pop
outsb
jmp
test
mov
lock
mov
icebp
sub
adc
adc
inc
add
popa
pop
lret
and
rcrl
popa
out
sub
je
in
fwait
pop
in
mov
hlt
mov
lret
sub
and
sahf
mov
jecxz
mov
lods
mov
mov
dec
cmp
cwtl
mov
in
in
jge
mov
std
pop
outsb
out
lods
movsb
mov
sbb
inc
dec
leave
leave
cmp
cmpb
pusha
push
lcall
sub
leave
jg
jge
dec
rcr
pushf
or
popa
adc
out
dec
lcall
xchg
in
adc
das
inc
out
mov
inc
cmpsl
jp
pop
dec
dec
xchg
out
inc
pop
add
push
psubw
and
xchg
or
add
mov
add
sahf
mov
jnp
push
cmp
push
or
mov
adc
rcrb
fistpl
cs
sbb
movsb
arpl
xchg
sbb
jge
outsl
clc
pop
test
inc
add
imul
mov
into
cmp
xchg
pusha
pop
inc
sub
mov
mov
add
dec
insl
ss
lock
popf
cmc
cmpsb
into
push
mov
mov
clc
mov
addr16
push
scas
push
in
cwtl
xchg
mov
call
push
fldenv
mov
scas
scas
dec
mov
adc
mov
mov
push
xchg
shl
das
test
mov
cmc
push
sbb
mov
jo
ja
push
mov
cmp
ja
mov
scas
rcrb
repnz
cmpl
data16
daa
lods
push
mov
mov
out
cmp
cmp
jl
ja
lret
adc
sbb
popa
sbbl
stc
not
mov
fdivrl
mov
add
aaa
push
mov
add
mov
lcall
jo
jbe
dec
sar
pop
push
aad
inc
jns
inc
mov
fnstsw
sarb
jp
pusha
jae
xchg
cwtl
fsubp
out
icebp
jns
cld
xor
xor
imul
mov
sbb
cmp
mov
mov
std
jp
mov
jge
xchg
pop
pop
xor
mov
cs
pop
push
les
das
xor
test
stc
pop
lods
aas
call
add
pushf
data16
aas
lock
mov
mov
ljmp
mov
icebp
std
int
testl
jl
and
sbbl
pop
pop
mov
mov
add
test
ret
mov
mov
insb
mov
je
in
stc
pop
add
mov
xor
jnp
and
cmpsl
rol
xor
mov
in
jb
inc
lock
jmp
push
call
pop
dec
inc
pop
mov
inc
ficompl
mov
push
inc
and
jmp
arpl
lahf
rep
sub
inc
add
rcr
xor
lods
push
add
pusha
iret
and
mov
cmp
or
repnz
dec
jl
popa
cmpsl
push
int
cmp
inc
dec
xchg
cmp
mov
aaa
xor
scas
jno
flds
shlb
cmc
int
sbb
pop
push
mov
addr16
dec
sub
mov
mov
icebp
pop
aas
sbb
mov
pop
adc
out
test
sub
jne
dec
lods
lods
adcb
inc
pop
sub
out
or
mov
and
fmull
add
in
push
mov
and
clc
xchg
or
mov
daa
out
sub
adc
in
sbb
nop
test
imul
cli
xchg
lret
mov
bound
test
fsub
sbb
xorl
arpl
call
inc
in
rcr
pop
pop
pusha
and
sub
pushf
out
movsl
and
lds
ret
dec
sbbb
loop
gs
xchg
ret
pusha
xor
or
jno
aas
pcmpgtd
xor
shll
outsl
mov
xor
int
rcr
jb
mov
icebp
aam
and
sbb
mov
push
repz
or
xor
jnp
repnz
cmpsl
test
mov
xor
sub
shl
sub
and
bnd
mov
vhaddps
adc
dec
scas
push
out
addr16
in
jo
adc
imul
and
xchg
mov
loope
dec
rclb
iret
inc
rcl
cmp
insb
adc
xlat
loopne
scas
xor
push
jne
lods
sbb
xor
push
and
adc
lds
inc
add
jp
xor
inc
js
xchg
ret
adc
aam
fimuls
inc
or
and
je
xor
mov
lds
cli
jg
fsubs
adc
dec
out
mov
xchg
lods
sub
leave
stos
flds
ret
mov
fisubrs
dec
loope
add
lret
adc
hlt
sub
pop
mov
mov
ja
fstps
arpl
daa
aam
lcall
jae
adc
iret
hlt
movsb
sub
neg
aam
mov
jb
clc
arpl
pop
mov
jecxz
xor
ss
les
adc
enter
sti
pop
leave
dec
cmp
aad
jb
imul
mov
nop
mov
mov
jns
jmp
ja
lods
mov
popf
popa
push
rcrl
gs
xlat
outsb
es
icebp
sub
xchg
into
bound
ds
mov
or
lock
ja
int
jno
mull
insb
jmp
xchg
jo
mov
stos
dec
mov
cmc
icebp
sahf
mov
fucomip
and
cmpl
lock
shlb
xor
fldenv
dec
push
cmp
ret
leave
jle
pop
cmp
xor
push
push
or
cmpsl
xor
or
inc
roll
mov
adcb
in
outsb
inc
jb
iret
sbb
push
loopnew
arpl
sub
cmp
fdivl
inc
xor
jle
push
rcll
rcl
mov
in
dec
dec
data16
bound
xchg
mov
fucom
ds
mov
cld
cltd
pop
fistpl
sub
add
xchg
cmp
bound
lret
sar
add
scas
fs
jnp
inc
push
aaa
outsb
aaa
repz
mov
pop
stos
cmp
jle
xchg
xlat
out
jnp
jno
loopne
mov
and
ret
sub
dec
add
imul
push
mov
inc
movaps
push
cli
icebp
or
imull
sbb
and
mov
xchg
xor
lcall
sub
xchg
call
jo
sub
fdivr
cmp
inc
sbb
test
adc
in
je
inc
xchg
sub
gs
cli
inc
insb
inc
inc
stos
adc
loope
push
stos
gs
and
ret
lret
jp
inc
xchg
popf
adc
sub
dec
rcll
out
push
in
pop
fstpt
xchg
bswap
lds
sbb
rolb
repz
popf
repnz
xor
cs
push
mov
inc
hlt
stos
sbb
aaa
fiaddl
xchg
cmp
jle
outsl
add
fs
sub
js
aad
mov
lret
es
hlt
scas
lret
out
add
adc
inc
add
js
mov
jbe
or
imul
and
cmpsl
loopne
popf
mov
hlt
xchg
pop
xlat
xchg
inc
jle
test
andl
cli
inc
mov
cli
mov
fldt
push
sbb
dec
sub
orl
into
dec
and
mov
aad
add
sub
clc
pop
push
enter
jmp
leave
insl
add
mov
dec
and
jg
mov
sub
nop
push
in
sub
jne
loope
jge
adc
leave
jb
cmp
and
mov
lcall
mov
pop
inc
sub
pop
or
ljmp
mov
lock
fbld
std
add
lock
mov
scas
dec
outsl
xor
push
outsl
sub
gs
aam
add
mov
sbb
out
pop
lea
mov
in
sub
push
xorl
mov
fucomi
mov
cmp
xchg
ret
mov
mov
fs
jns
push
sub
adc
mov
addl
xchg
lds
fbld
jmp
sbb
movsl
push
sbb
ds
sbb
jnp
scas
jecxz,pt
xlat
inc
insb
adc
lea
test
add
stos
inc
sub
cmpsb
aad
cmp
push
mov
call
dec
xchg
bound
call
fisubl
cmp
add
ret
cmc
aad
in
pop
adc
sbb
dec
loopne
push
cwtl
pop
das
aaa
and
and
lahf
add
nop
ret
fadds
jmp
bound
sbb
pop
jns
cltd
cmp
xchg
add
repnz
cmpsb
leave
and
sbb
gs
lret
sub
jmpw
cwtl
fldt
daa
int3
xchg
jge
in
dec
mov
add
imul
fdivrl
pop
ss
mov
in
or
push
inc
jl
xchg
sbb
dec
dec
jnp
call
pop
sarl
add
inc
mov
leave
push
or
cld
imul
jno
inc
sbb
loope
loopne
aam
push
dec
lret
shll
testb
fcompl
scas
sbb
ficoml
jg
sub
xor
and
lock
gs
xlat
fisubs
cmpsb
inc
stos
aas
cmp
sahf
jle
mov
mov
ret
jle
jecxz
sbbb
mov
mov
ds
addr16
movsl
cmp
sbb
sub
ja
sbb
push
mov
xchg
lahf
sub
xchg
dec
in
inc
mov
mov
mov
xchg
movsl
adc
movsb
andb
or
insl
sbb
sub
push
pop
and
or
inc
mov
dec
inc
rcrl
sbb
out
dec
sar
ret
loopne
fsubrs
inc
jnp
xor
xor
ret
and
iret
scas
xor
in
es
adc
lahf
push
loopne
and
cmpsl
out
sub
adc
dec
xchg
les
adc
jo
test
dec
sub
mov
xor
add
int
or
add
js
add
or
mov
repnz
sarl
cs
pop
outsb
imul
out
xor
cltd
adc
xchg
sbb
test
push
ds
mov
movsl
int3
push
push
jno
repnz
int3
xchg
sahf
into
or
mov
fistps
xchg
sub
xor
sub
dec
cmp
pop
sub
std
gs
pusha
cwtl
push
mov
sbb
xor
push
xlat
aas
jmp
std
cmp
mov
fs
mov
jg
outsl
xchg
mov
lock
out
mov
es
inc
sub
pop
jl
lret
fstpl
mov
cmp
and
into
xor
insl
xor
mov
sbbl
ljmp
rorl
insb
movsl
fmull
xor
popa
jl
mov
fisubrl
hlt
xor
mov
sub
push
das
xor
mov
or
cmp
stos
stos
jne
adc
gs
inc
sbb
idivl
jb
push
cmp
cld
jb
and
push
jle
inc
push
xor
sahf
pop
psrld
leave
loop
dec
fdivrl
in
loope
ljmp
subl
xchg
pop
cmp
outsb
mov
jno
mov
loope
jnp
xchg
mov
cld
cmp
sbb
xor
sub
mov
ss
fstpl
fbld
push
add
sbb
aaa
push
in
inc
jp
sbb
lret
or
xchg
jne
add
dec
xchg
mov
inc
push
and
pushf
hlt
inc
xchg
push
adc
pop
cwtl
sbb
pop
xchg
cmc
loop
cmp
xchg
aas
cmpsb
repz
jns
stos
xor
bnd
cmpb
or
sub
loopne
bound
push
sahf
dec
cmp
push
adc
sub
pop
jne
scas
cld
pop
outsb
cmp
xor
push
daa
int
dec
popf
stos
scas
jmp
cld
stc
jo
hlt
dec
and
push
cmp
js
out
mov
pop
mov
mov
dec
xchg
andl
ret
les
push
maskmovq
negl
sbb
cpuid
and
fadds
lcall
test
push
in
xchg
mov
pop
mov
leave
gs
idivl
data16
lcall
sub
mov
imul
ds
push
jmp
int3
push
xchg
or
int3
rorb
test
adc
mov
ja
sub
ficoms
in
lock
mov
jge
sbb
sub
stos
outsb
sbb
ss
dec
dec
add
xor
addb
fldt
fmull
inc
add
popa
sbb
sub
add
add
dec
mov
and
jo
jecxz
int
int3
ja
les
sbb
ret
js
adc
out
xor
cmp
gs
sub
neg
dec
pop
flds
xor
aas
jo
and
sbb
lcall
ret
mov
jp
loopne
pusha
jle
sbbl
dec
xchg
xchg
loopne
dec
xor
lods
sub
nop
dec
xor
xchg
sub
dec
in
cwtl
repnz
inc
pop
cmpsb
dec
popf
push
mov
adc
adc
cld
jns
xchg
push
cltd
call
rorl
add
shlb
cmp
fsubs
outsb
push
gs
push
cwtl
loop
mov
mov
das
loopne
xor
cmp
daa
ficoms
push
testb
lahf
sub
add
stos
cmp
shl
inc
cwtl
cwtl
xchg
sbb
mov
jnp
and
xchg
loopne
push
outsb
bound
out
push
xor
add
mov
into
cli
push
and
ljmp
mov
inc
in
cmp
sub
ljmp
stos
pop
ds
mov
dec
inc
xor
sahf
lcall
cmp
roll
push
mov
pop
xor
cwtl
fldt
and
pop
mov
lret
fs
ret
mov
mulb
sub
cmp
add
aas
bound
pusha
dec
jb
jl
cmp
notl
lods
cmp
add
jmp
addb
js
mov
xchg
in
ss
push
dec
pop
shlb
fimull
xor
inc
leave
lock
aad
lds
mov
out
dec
fdivp
add
mov
hlt
lods
pop
les
loopne
dec
popa
dec
mov
dec
cmp
pop
pushf
pop
mov
inc
into
out
roll
sub
out
insb
jno
inc
jecxz
cli
sub
mov
outsb
dec
pop
sbb
scas
arpl
es
xorb
imul
and
lcall
repnz
bswap
dec
aaa
cmp
in
mov
cmp
cs
shll
aaa
out
ret
outsl
add
cmp
sti
stos
bound
loope
lods
xchg
jmp
pop
jp
loopne
and
sbb
mov
inc
xchg
mov
jmp
fiaddl
leave
mov
rcl
cmpsb
sub
cmp
repnz
in
js
flds
inc
outsl
enter
cmpsl
add
and
cmp
mov
adc
xchg
mov
push
adc
aad
sbb
inc
lods
lret
call
add
cmpsl
add
fldl
pushf
lahf
push
lret
adc
sbb
xchg
inc
pop
push
push
inc
mov
notl
mov
lret
dec
mov
cmpsl
dec
leave
jne
mov
lahf
mov
xor
cmp
les
cwtl
inc
or
mov
dec
mov
push
ja
mov
xchg
inc
dec
ret
and
js
stos
mov
add
sub
ljmp
inc
mov
push
leave
dec
stc
pop
mov
lahf
clc
inc
daa
ja
jle
fwait
pop
mov
jb
bound
or
pop
rcll
inc
imul
iret
stc
aad
mov
fldenv
xor
fwait
mov
xchg
mov
int3
loop
ss
pop
roll
mov
in
push
mov
pop
mov
mov
lods
inc
decb
jecxz
mov
or
sbb
scas
cmp
iret
outsl
inc
xchg
lcall
inc
insb
inc
jae
xor
dec
in
cltd
cmp
xor
movl
mov
hlt
add
push
xchg
int3
sbb
movsl
push
jno
mov
pop
sub
or
sbb
add
popl
jo
jo
cmp
sbb
test
cmpsb
lahf
data16
or
jmp
aad
mov
mov
fwait
add
mov
mov
mov
push
pop
push
loop
adc
or
test
push
fbld
sub
pop
clc
testb
shlb
pusha
int
sub
sti
and
inc
out
in
or
mov
mov
xchg
rorl
pop
negb
xchg
mov
test
pop
add
jb
pop
push
jne
std
xorb
push
jl
lret
iret
enter
outsb
leave
jmp
sbb
xor
fs
fbld
in
outsl
cli
mov
das
sbb
mov
sub
jl
lods
jnp
inc
mov
push
cmp
jecxz
cmc
cmpsb
and
jl
mov
sub
push
imul
pusha
lret
adc
sti
xchg
sub
pop
cmc
sbb
das
les
and
pop
pop
mov
xor
ret
out
sub
lods
inc
movsb
in
sub
popa
cmpsb
add
hlt
xchg
stos
mov
pop
adc
jb
jmp
xor
into
test
mov
sub
stc
adcl
mov
dec
push
aas
dec
inc
push
rcrl
lahf
lret
xchg
push
adc
scas
mov
or
divb
cmpsl
or
xlat
ljmp
xchg
xchg
pusha
mov
loope
mov
push
push
jecxz
mov
call
enter
je
or
mov
dec
xchg
in
xchg
popf
aas
or
cmp
xor
sahf
repnz
inc
ret
stc
fucomip
fldt
in
mov
mov
outsl
rcl
dec
pop
test
aas
push
scas
pop
cmpsl
push
cli
sbb
inc
out
cmp
xchg
nop
js
mov
fsts
dec
ss
daa
sbb
dec
loopne
aad
call
cld
adc
push
test
aas
icebp
loope
xor
jo
je
adc
sbb
pop
add
mov
push
ja
adc
pusha
fmuls
cmpsb
push
pop
mov
adc
aam
mov
lahf
shr
jecxz
sbb
cmpsl
and
jbe
stos
pop
mov
mov
into
cltd
sbbl
mov
push
mov
and
inc
inc
and
arpl
iret
notb
repz
pop
rcl
cwtl
data16
fistps
inc
nop
xchg
mov
cltd
jbe
jmp
sbb
sbb
mov
lret
cmpsl
pop
lcall
mov
rcrl
pop
std
aaa
cltd
jmp
das
xor
les
and
xor
jne
jnp
adc
or
aad
negl
loop
push
adcb
mov
lock
jns
add
mov
icebp
ja
fldcw
mov
imul
roll
xchg
lret
jnp
or
mov
xor
addr16
mov
dec
mov
mov
cmpsl
movsb
or
push
enter
out
repz
inc
xlat
mov
callw
movsl
add
insl
into
dec
test
sub
push
add
inc
mov
cmpsl
lods
and
shr
jecxz
mov
adc
adc
inc
or
jg,pn
data16
icebp
xchg
adcb
lcall
mov
sbb
mov
adc
sub
xor
iret
add
mov
insb
mov
into
mov
scas
pushf
cmpsl
dec
shrb
jmp
ds
ficoms
incb
mov
es
testb
push
in
mov
scas
enter
dec
cld
out
inc
lods
push
sbb
sbb
jmp
xchg
imul
mov
mov
js
adc
xor
sahf
adc
lret
cs
push
lods
jmp
jmp
mov
sub
pop
jecxz
push
outsl
sub
out
leavew
mov
push
loop
cld
les
lea
inc
mov
int3
test
loopne
dec
out
enter
cmpsb
pop
jb
mov
jle
xor
pop
xlat
lret
ror
dec
xchg
addr16
pop
ficomps
cmc
or
mov
inc
mov
mov
loopne
std
nop
mov
xor
inc
out
in
mov
std
pop
daa
push
in
cltd
dec
movsl
mov
imul
test
popf
mov
in
hlt
repnz
push
ds
mov
dec
insb
pusha
xchg
sbb
push
sbbb
movsl
movb
loopne
xchg
lcall
mov
bound
pop
xchg
int3
popf
lret
or
lods
repz
mov
sbb
in
xchg
ret
sbb
das
ret
js
jne
push
mov
test
pop
jb
test
dec
cmc
jle
mov
aad
xor
push
cld
mulb
ljmp
hlt
inc
loopne
cwtd
adc
hlt
dec
push
aaa
xor
test
jle
sbb
push
cmp
push
loope
aas
jg
cli
dec
imul
push
cmp
xchg
mov
mov
push
fisubrs
fmull
sarl
mov
stc
add
mov
pusha
add
test
or
fistps
mov
sti
mov
dec
push
movsl
xor
divl
addb
add
ss
jns
cmp
jg
jo
inc
icebp
dec
xchg
mov
mov
inc
mov
fisttpl
cmp
shll
push
dec
mov
cmp
or
sbb
pop
aad
sbb
cltd
cmp
into
test
sbb
imul
shl
sahf
ljmp
dec
sbb
mov
sub
add
test
outsb
int
xor
push
out
lods
lret
push
roll
sub
fisubrl
bound
lret
xchg
adc
test
cli
outsl
loop
xchg
fsubl
sar
pop
je
jb
enter
cltd
cmp
and
pop
or
mov
jp
lods
fcoml
mov
ds
pop
push
insl
xor
jecxz
lret
lock
jae
cmpsb
xchg
sub
cmpsl
fstl
xor
in
test
jmp
adc
dec
js
cld
push
xor
bnd
add
cs
jns
jl
mov
pop
fbld
push
mov
cmp
push
testb
in
push
les
sti
jmp
arpl
ret
adc
xor
adc
sti
adc
xchg
je
bound
add
cmp
xor
inc
cwtl
pop
scas
aad
push
xchg
sbb
lret
cmp
test
ja
push
out
pop
inc
fwait
hlt
cwtl
fildll
arpl
shll
cs
leave
inc
and
dec
out
jmp
test
inc
dec
mov
mov
leave
scas
out
fildll
cld
fisubrs
push
out
stos
cmp
out
loopne
or
pop
arpl
or
and
or
stos
outsl
xchg
iret
push
int3
test
mov
adc
stc
sbb
pop
in
mov
aad
xchg
sbbb
cmc
jnp
mov
js
lods
adc
in
push
dec
lahf
mov
jo
and
insb
mov
fs
add
lahf
cmp
and
pop
add
out
push
lret
lock
cmp
mov
cmpsb
andl
addb
out
add
imul
mov
pop
cmpsl
je
sub
lret
xchg
sbb
inc
or
mov
add
xchg
cwtl
iret
ficomps
sbb
dec
test
add
es
mov
dec
repnz
imul
out
mov
dec
mov
lret
adc
std
leave
adc
mov
in
insl
mov
mov
in
push
mov
push
adc
nop
jbe
xchg
xchg
pop
outsl
ljmp
enter
and
mov
pop
ret
hlt
inc
mov
jge
jmp
lods
mov
cmpsl
ss
and
in
jo
mov
hlt
mov
je
fbstp
jb
jbe
iret
dec
mov
enter
mov
sti
enter
sub
jne
inc
aam
sahf
sar
adc
test
sub
outsb
mov
sbb
repz
dec
js
loopne
mov
jno
int3
mov
mov
sub
mov
stos
outsb
aaa
in
gs
rcr
pop
insb
inc
movsb
sbbl
mov
pop
cmc
mov
inc
test
jmp
or
mov
jbe
push
push
pop
inc
xor
mov
cwtl
mov
iret
xchg
add
iret
outsb
lahf
pusha
mov
cmp
outsb
outsl
cmp
mov
xlat
or
sub
inc
outsl
jnp
add
imulb
out
out
imul
sbb
stc
inc
imul
cld
adc
push
insb
cld
jg
dec
rcrl
stc
pop
pop
test
sbb
xor
ja
xor
adc
inc
jno
jmp
xlat
les
movsl
cmpsl
or
and
cs
fcompl
xchg
call
adc
cmpsb
dec
and
mov
pusha
fildl
and
clc
jns
out
jge
aas
sbbb
jg
out
or
mov
xchg
cmpsb
sub
insb
push
xor
xor
jmp
xchg
mov
mov
lock
add
ficomps
or
mov
imul
mov
icebp
pop
test
dec
cmc
jbe
push
fsts
rolb
inc
and
lret
mov
mov
add
adc
outsb
cmp
pop
mov
jbe
sbb
rol
push
jb
nop
shlb
cmpsl
push
les
ficompl
pop
jnp
mov
push
fdiv
mov
pop
and
lods
nop
xlat
out
and
getsec
pop
add
mov
sbb
xor
push
mov
adc
and
sub
outsb
fsubl
dec
push
sub
cs
sar
jge
negb
mov
inc
jl
lods
lret
push
scas
jne
jle
mov
rcll
dec
push
inc
dec
leave
aas
bound
out
testb
add
aaa
cmp
dec
notl
rorl
leave
fwait
add
jbe
lret
and
mov
jns
adc
jle
clc
and
mov
and
in
adc
outsl
sub
and
in
or
mov
inc
rcrb
push
fucomp
mov
insb
pop
insl
mov
std
pop
xchg
add
lods
jbe
popf
inc
inc
outsl
pop
sahf
stc
leave
icebp
cltd
xor
out
or
incb
sahf
in
in
or
ja
enter
lods
push
mov
push
jge
mov
xor
mov
xchg
test
inc
mov
xor
mov
dec
aaa
shlb
mov
dec
xor
jmp
bnd
test
jecxz
mov
dec
insb
mov
mov
inc
shr
dec
setle
pushl
xchg
cmp
aam
pushf
add
add
fwait
jno
icebp
and
fwait
jle
nop
and
js
add
ret
adcl
add
mov
pop
pmuludq
cmovns
push
lret
rcll
xchg
inc
dec
cli
inc
fs
andl
addr16
xor
mov
ja
pop
push
pop
filds
xlat
or
dec
push
rcll
or
xchg
cmp
adc
shll
add
in
xor
cs
xlat
mov
jmp
fisttpll
dec
movsl
mov
loope
negl
add
mov
repnz
cmp
ss
jecxz
mov
or
mov
pop
xchg
and
add
out
and
sarb
push
jne
mov
pusha
fnsave
lahf
lea
fldcw
push
js
test
mov
test
and
sbb
imul
jnp
fadd
xor
rorb
repnz
mov
push
mov
inc
xor
ficoms
out
das
pop
push
mov
les
repz
das
push
inc
andl
sub
daa
test
pop
lds
out
out
cmp
ds
xlat
inc
nop
push
pop
pusha
sbb
repz
jg
int
pop
ret
pusha
adc
fisttps
mov
push
jle
pushf
pop
and
clc
pop
sbb
cmpsb
sub
ljmp
and
push
adc
aas
pop
roll
and
mov
in
mov
fadd
adc
call
arpl
cld
pop
mov
xchg
arpl
mov
add
icebp
clc
jecxz
insb
xlat
loopne
imul
int3
int
std
loope
push
fdivr
mov
cmc
mov
mov
fnsave
cltd
dec
cli
xor
movsl
insl
push
fidivrl
add
bswap
test
fisubrs
ret
pusha
fiaddl
and
adc
mov
pop
int3
das
sub
jmp
mov
or
add
je
xor
jle
aad
movsb
or
aam
in
and
arpl
in
frstor
push
mov
mov
fadds
push
into
mov
rcll
pop
fiadds
mov
jnp
clc
cmp
popf
or
lock
mov
popa
push
std
xchg
data16
jnp
mov
cli
outsb
xor
xchg
dec
xor
adc
or
mov
fbstp
daa
std
and
xchg
pushf
sub
sbb
imul
xchg
pop
hlt
cwtl
or
movsb
dec
or
scas
pop
in
cltd
fwait
cmp
mov
mov
mov
ds
jl
nop
sub
fsubl
gs
testb
leave
subl
jecxz
loope
dec
test
enter
dec
push
jge
out
loop
or
aas
shrl
dec
mov
popf
pushf
push
loop
mov
xor
repnz
imul
int
pop
jp
add
xor
xchg
outsb
add
adc
fs
and
lcall
mov
mov
xchg
push
mov
loope
aaa
sbb
inc
inc
cmp
mov
cltd
mov
sub
dec
insl
inc
movsb
add
xchg
xchg
sbb
int3
jno
add
xchg
mov
mov
push
in
inc
xor
iret
test
inc
sti
cwtl
test
fsubrs
xor
fisubl
pop
les
rcr
repz
inc
fimuls
mov
pusha
cwtl
ja
push
sub
mov
xor
rcr
inc
sahf
lds
in
int3
mov
ljmp
es
jmp
xorb
cld
push
sbb
push
pop
push
xchg
test
push
pop
in
mov
xchg
xchg
insl
dec
inc
aaa
inc
test
inc
adc
xorb
aam
in
nop
stos
or
sti
in
shll
mov
cmp
nop
push
ljmp
sub
lods
stc
sahf
adc
add
in
jae
fs
mov
xchg
dec
push
scas
xor
sbbl
dec
xchg
pop
xor
lahf
add
and
aaa
lcall
mov
out
cmp
mov
out
mov
pop
jl
dec
mov
lret
inc
aas
pop
lret
imul
xorl
test
js
sti
fadds
dec
xor
cli
dec
scas
sbb
bound
mov
pop
add
sub
mov
aam
xorl
cmp
mov
lret
mov
cs
mov
mov
ljmp
nop
add
fcomip
add
sub
xor
pop
rclb
push
pop
add
sbb
xchg
out
mov
leave
pop
mov
xchg
jns
and
xchg
rclb
mov
push
cmc
stos
rcrl
test
xchg
jp
dec
mov
repz
fistps
adc
add
test
add
repnz
aas
jge
inc
je
pop
inc
cmp
ja
and
lds
adc
test
adc
call
ds
and
int
rcrb
ss
xor
pop
ss
or
bound
or
mov
jne
jo
or
popf
out
ljmp
jb
adc
mov
jbe
fdivr
xchg
adcb
inc
and
sbb
movsl
jge
push
mov
xchg
clc
pop
imul
sarb
mov
fadd
push
dec
jno
data16
sbb
cltd
fcompl
dec
aad
push
mov
and
sub
out
adc
bound
popa
cmp
mulb
xor
mov
xor
insl
sahf
push
daa
mov
lods
arpl
mov
dec
hlt
pop
imul
fstps
inc
test
es
xchg
mov
scas
fdecstp
fdivs
inc
inc
icebp
subb
mov
data16
dec
mov
fs
sbb
mov
mov
arpl
mov
jnp
aaa
movsb
fildl
and
push
inc
subl
lahf
xchg
fidivs
mov
push
mov
mov
or
lea
scas
jne
or
xor
sti
and
pop
jns
fwait
iret
or
cmp
mov
jns
pushf
mov
in
ret
das
mov
pop
cmc
jecxz
out
and
sub
and
or
mov
imul
fnstenv
rcll
jl
add
sub
sbb
mov
mov
push
inc
pushf
dec
in
push
rorb
dec
mov
and
adc
mov
pop
icebp
xchg
mov
sbbl
cmp
lea
ds
repnz
add
push
cmpsl
lcall
pop
lahf
dec
inc
aam
pushf
addr16
and
pop
or
dec
or
bound
dec
fisttps
sbbb
cmp
in
sub
sub
in
clc
int
push
es
lods
add
sti
jmp
jo
xor
adc
pop
push
shll
pushf
pushw
out
pop
cmp
jge
sbb
cltd
scas
jae
mov
push
pop
addr16
dec
in
sub
pop
fidivrs
ss
in
push
add
jle
leave
mov
ljmp
jne
jnp
cmp
gs
pop
xchg
jbe
addr16
and
cmpsb
sahf
mov
sub
fmuls
inc
and
cmp
adc
adc
call
cmp
sbb
cmpb
push
ljmp
das
pop
xchg
ljmp
pop
adc
mov
rcr
clc
mov
xor
sahf
loop
rorb
dec
push
pushf
xchg
outsl
ret
sub
and
sub
fadds
aam
mov
push
pushf
xchg
mov
jge
jb
jb
mov
xchg
dec
ffreep
xchg
dec
lods
inc
inc
out
sbb
lods
dec
mov
or
pop
stos
add
mov
sub
ficoms
or
dec
out
decb
pushf
icebp
js
imul
popa
adc
lret
sbb
hlt
aaa
dec
fdivl
cli
dec
je
sti
xchg
adc
push
mov
repnz
push
lea
ss
cwtl
fldl
inc
lods
add
pop
pop
add
scas
insl
sub
xchg
ds
push
sbb
push
xchg
loope
popf
add
xchg
cmpl
roll
add
mov
loopne
cmpsl
dec
std
sub
mov
test
push
pushf
addr16
daa
push
xchg
sub
stos
mov
je
movsl
mov
dec
stc
sbb
out
xor
or
in
pop
out
inc
popf
lods
int
add
pop
gs
in
mov
inc
fnstcw
vunpcklps
push
insl
in
add
push
sbb
add
pop
repz
adc
int3
xchg
mov
sbb
xchg
jns
lds
das
pusha
mov
add
jne
aas
pop
clc
pop
add
ret
mov
jae
aaa
imul
scas
xor
call
lods
xor
sbb
cld
jae
push
mov
fisttps
ja
ds
ret
in
mov
sbb
sub
filds
aas
clc
data16
or
daa
fsubrl
xor
loopne
push
cmp
push
fmulp
xchg
dec
sbb
add
icebp
or
mov
pop
push
insl
adc
pusha
aas
sub
rolb
ds
xor
mov
pop
dec
jge
aas
lret
out
aaa
nop
cmp
xor
cmp
jl
cwtl
lods
cltd
outsb
and
mov
jecxz
sbb
pcmpgtd
jne
cld
add
mov
aam
pop
fstpt
mov
cmc
jbe
adc
pushf
adc
cli
jns
jg
cwtl
push
sbb
dec
lcall
outsl
test
push
and
fistpll
in
pusha
sub
loope
pop
int3
ljmp
into
xchg
adc
jp
mov
inc
fisubrl
lods
sbbl
cmc
inc
sub
mov
push
dec
fucomi
shll
ficompl
mov
imul
sbb
pop
xchg
fadds
jge
push
adc
mov
lahf
fsqrt
jbe
add
adc
sahf
jle
dec
jge
mov
pushf
xchg
shll
jbe
sbb
in
in
cs
adc
call
push
je
cs
outsb
testl
loop
push
sbb
notl
div
sub
adc
call
pop
or
xor
pop
or
push
and
js
mov
mov
fcmovnb
fistps
lret
negl
lds
pop
pop
xor
out
sub
xchg
xchg
adc
cmp
jmp
xchg
fmul
xchg
jno
add
push
shlb
mov
outsl
popf
pop
mov
sarl
fmull
and
mov
js
orb
shll
add
lea
jmp
es
testb
mov
inc
andl
mov
les
pop
nop
lock
inc
sbb
pop
out
jecxz
popf
nop
mov
mov
mov
addr16
and
cmpsb
sbb
insb
js
and
mov
dec
xchg
xchg
cmpsl
clc
and
cmp
sub
fisttpl
sbb
mov
je
jo
jge
fwait
rcrb
push
jno
bound
push
jbe
add
cmpsb
mov
push
inc
cli
test
data16
out
sbb
mov
fmull
xchg
shr
out
mov
push
mov
je
out
fsubr
pop
cmpl
adc
dec
out
lods
mov
bsf
movsl
dec
popa
and
aaa
repnz
mov
sbb
dec
pop
jmp
in
adc
add
icebp
cwtl
mov
lret
rorb
cmpsl
outsl
xlat
decl
rcr
jno
push
lds
lods
push
cltd
pop
push
fsubrs
dec
stos
fwait
mov
xor
out
out
pop
mulb
fwait
enter
int
dec
cmpsl
xchg
push
mov
mov
push
mov
xor
dec
idivl
fcomps
jl
xor
cmp
leave
inc
loopne
push
ficomps
xchg
sarb
sarl
sbb
and
add
and
sbb
pusha
push
lret
pop
xchg
lret
xchg
int3
fiaddl
cmp
arpl
jnp
cmp
andl
cmc
out
mov
mov
and
mov
movsl
addr16
mov
inc
adc
jg
call
cmp
and
sbb
jo
sub
pop
push
repnz
repz
xor
add
mov
mov
mov
push
adc
pop
mov
ss
test
lea
mov
loope
cmp
je
push
or
sbb
nop
insb
add
outsl
lods
dec
lahf
std
cmpsl
mov
into
int
cmc
and
add
dec
push
push
enter
sbb
int
call
imul
adc
sub
ds
xor
inc
inc
jno
mov
aam
mov
add
imul
aad
inc
inc
mov
inc
in
not
lock
add
add
repz
rcl
inc
popa
iret
movsl
mov
in
xor
out
adc
dec
shrb
cmp
inc
ljmp
hlt
adc
jl
add
in
pop
pop
div
xchg
jno
inc
test
testb
adc
add
inc
sub
add
lahf
xchg
sub
in
insl
cmp
ret
xchg
out
scas
test
lcall
dec
psubb
push
adc
bound
outsb
mov
dec
ffreep
lock
aad
mov
and
mov
aam
mov
into
orl
push
dec
mov
or
movsl
dec
mov
lods
mov
add
inc
pop
loop
mov
xorl
jmp
cmp
jmp
jns
push
add
ret
xor
das
pop
pop
addl
imul
stos
pop
stc
jmp
add
xchg
int
das
pop
sti
or
push
push
hlt
cmp
and
cs
jmp
ficomps
push
xchg
mul
daa
push
cmpsl
mov
jbe
enter
sbb
dec
lods
pop
insl
lret
mov
push
or
adc
sub
mov
xor
pop
and
xlat
pop
cld
out
movb
cli
xor
cmp
dec
fidivs
clc
push
push
sub
cmp
mov
in
and
test
and
rclb
test
mov
test
cmc
cmovs
cmp
or
int3
jmp
inc
jae
and
and
aam
in
push
adc
js
lret
std
arpl
mov
gs
in
aaa
notl
push
cmp
js
mov
stc
pop
out
mov
mov
push
mov
das
cmp
or
xchg
fbld
jmp
mov
cld
cmp
jge
fsubrs
outsl
incb
dec
rcl
out
pop
imulb
fdivs
je
dec
inc
ljmp
pushf
cmp
jl
js
inc
push
jne
add
insb
outsl
sbb
or
add
add
xchg
enter
pushf
xlat
cmp
in
es
cmp
ss
mov
mov
pop
xchg
xchg
pop
add
stos
or
inc
incb
aad
mov
dec
bound
aam
mov
xchg
push
bnd
leave
arpl
std
jne
nop
mov
push
lret
sarl
sub
and
jp
cmp
push
ret
push
repz
jno
inc
sbb
cmp
xor
loope
and
adc
lret
mov
jp
xor
lahf
fnstenv
mov
ds
shrb
enter
in
push
mov
les
mov
push
addb
and
je
add
loop
les
stos
sbb
int3
jmp
in
xor
out
inc
lods
mov
enter
add
mov
mov
popf
or
sarb
inc
or
scas
cmp
sti
lock
xchg
ss
sub
or
lret
jae
clc
das
jne
mov
into
fbld
xor
jnp
sbb
les
sub
or
inc
or
pop
addr16
jo
outsl
jmp
cmc
out
push
push
insl
and
in
and
mov
cli
xchg
pusha
repnz
sub
jmp
push
push
xchg
shl
out
pop
mov
cs
or
xchg
mov
mov
pop
leave
xor
pusha
das
push
cmp
mov
push
bound
mov
div
mov
push
dec
cmp
adc
xorl
sbb
jo
fildl
inc
clc
adc
xor
mov
mov
xchg
out
push
sub
es
inc
sahf
hlt
int
fdivs
enter
cmpsl
xchg
push
int
test
inc
movsb
in
dec
xor
daa
insl
dec
and
movsb
add
jl
ja
rcr
push
call
cmp
xor
in
mov
das
and
mov
in
dec
push
pminsw
mov
test
cmp
repz
mov
dec
imul
pop
imul
rcl
push
test
sub
aas
mov
div
sbb
sbb
popa
mov
jle
pushl
mov
pop
or
aas
out
xchg
jae
andb
shrb
aad
adc
aas
add
xchg
pop
ss
jecxz
outsl
mov
mov
shrl
lret
enter
sti
sbb
loope
xor
into
test
mov
gs
add
in
cmp
jle
jg
cwtl
popa
mov
or
mov
inc
or
inc
jp
sub
mov
push
mov
jle
pop
pop
fists
mov
mov
in
das
icebp
xlat
rorb
enter
mov
bound
xor
xlat
jle
jo
cmp
xor
test
sahf
stos
ret
fmul
mov
mov
mov
popa
call
popf
push
ds
push
imul
pushf
cmp
push
or
sub
inc
cmp
mov
sbb
dec
jecxz
dec
pop
xchg
jmp
mov
cmpl
xchg
repz
in
pop
cmp
xchg
andb
mov
ficoml
ljmp
pop
int3
cmp
jns
sub
movsl
sbb
cmpsb
lret
out
ror
sbb
pop
sub
cmp
test
test
xchg
addr16
dec
in
loopne
pop
adc
xchg
pusha
ret
push
xor
hlt
mov
enter
dec
and
add
imul
or
imul
std
mov
int3
or
adc
cwtl
add
cld
clc
into
cli
sti
xor
cwtl
sbb
inc
out
mov
aaa
pop
jb
imul
jp
stc
cwtl
jne
loop
aad
mov
mov
dec
mov
push
and
sub
fldcw
mov
test
lods
lock
adc
dec
adc
stc
cmpsb
shlb
jnp
in
pop
repnz
push
inc
scas
mov
sbb
inc
add
ret
fidivrs
mov
hlt
add
in
movb
adc
dec
stos
je
cmp
idivl
and
cs
mov
pop
inc
adc
sub
test
xor
inc
sti
je
cmp
push
nop
sarl
into
cmp
fistl
int3
fs
jge
push
call
insb
inc
push
sub
sub
cmp
stc
fnstcw
aad
add
mov
cmc
das
cwtl
stc
into
adc
loope
xlat
sarl
mov
sub
dec
ja
movsl
fadds
xor
aas
shrb
js
ljmp
lret
fdivrs
scas
lds
cmp
insl
sub
jnp
loope
cmp
in
mov
movsb
sub
xchg
push
std
cltd
mov
xlat
out
push
cmp
shr
les
les
out
cltd
cmc
add
frstor
push
repz
push
mov
cmp
push
flds
or
pop
xchg
mov
push
push
push
stos
out
in
sub
adc
scas
jb
arpl
js
and
jne
fwait
leave
dec
sub
popf
xor
mov
movsb
push
sub
mov
push
mov
test
mov
enter
fiaddl
iret
or
push
xchg
pop
int3
out
pop
arpl
lahf
push
cmpl
movsl
mov
cmp
popf
sbb
cmp
sahf
sbb
inc
std
mov
lods
lret
inc
sbb
pop
or
enter
sbb
mov
jbe
lahf
shll
dec
jbe
xchg
cmpsl
dec
mov
stc
mov
mov
ret
rcrb
push
push
sbb
adc
mov
ffree
das
into
rcl
or
xchg
lret
fistpll
add
jno
jns
pop
loope
or
adc
std
lea
adc
jmp
sti
faddl
sahf
xchg
xor
mov
mov
out
paddusw
sub
stos
mov
mov
lds
stos
cmp
jnp
add
sub
jle
pop
dec
mov
mov
dec
testl
pop
cmc
loop
std
jle
mov
jno
imul
dec
gs
imulb
lret
cmp
fwait
mov
push
xchg
addr16
sbb
adc
adc
mov
push
xchg
sbb
pop
mov
lcall
in
insl
or
fxch
bound
xor
adc
ret
cmp
mov
insb
mov
cmc
pusha
pop
aad
dec
jb
mov
pop
in
push
mov
sti
mov
jl
popf
pop
mov
in
mov
or
xchg
in
es
cmp
mov
mov
cs
xchg
cs
int
and
push
jle
sbb
push
mov
jp
xor
negb
ljmp
push
push
pop
mov
xor
sbb
out
mov
mull
dec
js
jns
leave
cmp
xchg
mov
jecxz
insb
repz
les
test
lcall
inc
inc
test
sti
shll
jmp
sub
subb
lock
fildl
fstps
mov
xchg
fldl
cmp
stc
out
insl
jne
lcall
sti
ljmp
sarb
addr16
scas
jge
scas
inc
dec
mov
jge
dec
jg
mov
cltd
xor
push
ror
pop
popf
push
into
fwait
clc
inc
mov
sub
push
push
aad
dec
fldcw
nop
mov
ja
dec
pop
mov
divb
ja
jae
pushf
add
and
xor
roll
push
dec
lds
stos
ja
push
push
test
pop
dec
pop
stc
jg
daa
stos
imull
std
test
pop
xor
cmpsb
pusha
xor
cmpsb
fidivs
scas
fstps
or
inc
push
test
shll
jg
xchg
mov
imul
shld
ret
daa
mov
mov
lcall
rcrb
cmpsl
in
and
fs
je
andw
orl
mov
add
daa
movsb
fs
andb
sbb
inc
adc
mov
or
mov
jae
mov
add
test
insb
cmp
lock
leave
xchg
es
arpl
jl
aaa
aas
cld
rclb
lcall
insl
mov
stc
mov
repz
and
pop
lret
jecxz
std
pop
push
xchg
add
cmp
cmp
xor
sarb
push
adc
xchg
and
mov
scas
int
hlt
insl
pop
inc
cmc
xchg
xor
out
jecxz
or
scas
xor
push
shlb
popa
lret
xchg
sbb
and
xchg
test
lgs
push
clc
and
xor
jp
out
shrb
mov
xor
jge
jnp
or
and
mov
inc
arpl
mov
mov
out
or
xor
sub
repz
loope
dec
mov
and
dec
mov
mov
lods
mov
mov
xchg
adc
paddw
and
xor
adc
mov
lcall
aam
push
dec
paddw
mov
xchg
jbe
aad
pop
xchg
jg
daa
ffreep
or
jns
ficoml
jge
push
jl
mov
push
fistl
fidivs
jecxz
jmp
pop
add
fsts
cmc
mov
mov
xlat
in
sub
jbe
les
pop
int3
ja
stos
cmp
jge
call
ss
stos
xchg
lock
inc
fcoml
aam
in
add
stos
pop
or
push
imul
hlt
out
mov
pop
std
hlt
dec
ret
inc
push
or
cmp
in
jb
dec
clc
cmp
fistpll
xchg
xlat
int3
add
lret
or
xor
out
push
inc
hlt
sbb
mov
cmpsl
cmpsl
mov
cwtl
push
pop
jg
movsb
jnp
add
addr16
inc
movsb
in
fwait
mov
inc
mov
rorl
and
daa
xlat
mov
cs
pop
fistpll
pop
into
jno
dec
inc
sub
loope
xchg
fstp
cmc
adc
clc
ficompl
adc
add
std
shll
in
mov
cli
sbb
fistpl
pop
xchg
jo
lret
and
push
int3
jnp
xchg
arpl
pushf
call
jmp
clc
xchg
mov
testl
inc
inc
jo
push
fwait
jge
imul
cmp
mov
dec
psubb
xor
sub
or
sti
jb
lds
push
sub
jno
gs
inc
adcl
cmc
notb
icebp
xchg
clc
mov
dec
loopne
adc
dec
push
mov
ja
jp
xor
sub
push
test
cld
rcll
push
pushf
stc
jp
in
pop
ljmp
fisubl
outsl
xchg
test
cltd
leave
pop
mov
push
xchg
es
aas
add
mov
and
rcrb
push
sub
test
xchg
loopne
jmp
push
xchg
out
add
cmp
push
int
js
xor
pop
adcb
ja
xchg
ja
inc
pop
adc
inc
flds
cmp
pop
nop
ret
enter
aaa
and
inc
cmp
pop
das
add
lcall
insl
push
mov
push
dec
insl
or
adc
mov
fdivrl
movl
cmp
mov
push
fcom
jo
cmp
sbb
out
xor
movsl
inc
cmpsl
out
popw
adc
clc
jb
loope
cmc
dec
test
sub
mov
pushf
test
out
add
mov
fmuls
jae
test
mov
inc
out
stos
add
and
ret
imulb
mov
inc
inc
inc
cmp
stc
outsb
jmp
jecxz
roll
faddl
xor
pop
movq
popf
mov
out
inc
and
or
std
stc
and
dec
addr16
and
cmp
cmp
in
lret
lea
test
add
mov
mov
xlat
xchg
pslld
and
inc
aad
in
iret
jnp
sub
stos
xchg
inc
adc
cmp
js
xchg
pop
mov
loopne
pushf
popf
ja
xlat
mov
fwait
add
adc
jmp
lret
stos
sti
and
push
sbb
mov
add
cmpsb
test
insb
jecxz
mov
lea
aad
cmc
mov
sub
jns
cmpsl
repnz
es
and
iret
rolb
shlb
cmpsb
mov
aad
scas
nop
or
jo
jl
lods
push
sub
cmpsb
fucom
outsl
dec
mov
dec
sti
jbe
mov
jns
sub
out
xlat
push
jg
push
sbb
arpl
push
pusha
pop
mov
icebp
lahf
add
jmp
cmpsb
in
pop
and
daa
push
cmc
xor
inc
les
ja
inc
adcb
inc
aas
mov
cmp
lds
dec
xchg
test
mov
or
es
das
adc
push
sar
cwtl
outsl
sub
dec
hlt
jl
lods
arpl
xchg
dec
es
jnp
pop
mov
test
mov
out
push
scas
mov
test
shlb
shrl
fidivs
stos
dec
je
pushf
orl
inc
inc
jns
push
repz
and
pop
testl
pusha
adc
out
push
push
insl
mov
inc
sbb
add
movsb
mov
inc
inc
lret
dec
pop
out
cmpsl
lahf
lret
inc
jbe
adc
and
stos
mov
inc
les
and
pop
call
mov
dec
add
lahf
mov
cmp
testl
mov
arpl
sub
and
mov
mov
inc
cmp
push
xor
daa
ss
movsl
fwait
jo
fdivp
pop
jbe
repz
mov
push
mov
cmc
mov
inc
call
loopne
test
mov
dec
icebp
mov
cwtl
out
fcmove
pop
adc
fcoms
mov
sbb
xchg
sar
sub
mov
out
xchg
hlt
cmp
sub
inc
or
pop
mov
daa
insb
data16
jo
dec
stos
arpl
enter
sub
sub
xchg
xchg
pusha
adc
jb
loopne
lock
sbb
rorl
dec
fstpt
jge
push
mov
or
hlt
movsl
out
incb
shlb
loop
fldcw
mov
repz
xchg
insb
fdivr
jmp
cmp
push
xchg
int3
pushf
mov
sbb
je
movsb
out
xchg
cmpsb
call
icebp
inc
jg
ficomps
sub
jns
fwait
insb
add
cmc
xchg
notl
dec
adc
loopne
dec
xchg
das
das
scas
mov
orl
lret
sub
fildll
cli
push
adc
mov
dec
adc
add
mov
sbb
jbe
push
lea
push
mov
pop
out
bound
dec
cmp
lea
add
fadds
repz
lods
outsb
or
push
jb
stos
xchg
jmpw
inc
push
divl
cmpsl
enter
mov
jns
arpl
out
repz
sbb
rol
push
out
out
sbb
movsb
stos
cmp
cmp
inc
pop
out
xchg
fs
sub
insl
xchg
dec
push
in
add
pop
fwait
sbb
mov
arpl
jmp
or
lock
pop
ret
pop
jns
pusha
loop
or
push
sbb
rclb
xchg
push
jl
dec
stos
in
into
cmp
push
mov
idivl
cltd
xchg
shrb
lret
inc
xor
repz
out
loop
lock
mov
mov
das
mov
mov
int3
pusha
inc
mov
lds
mov
lds
jmp
outsl
mov
sbb
xchg
outsb
add
jp
test
add
lcall
pop
scas
hlt
mov
out
mov
mov
sbb
hlt
movb
test
or
lock
mov
or
inc
lods
fsubrl
insl
test
in
xchg
mov
sti
lods
iret
cmpl
mov
cmp
fmuls
rcrl
or
and
test
add
jg
jge
xor
lret
mov
out
aaa
sti
mov
mov
arpl
add
dec
sarl
add
out
mov
in
sbb
lret
dec
mov
sub
pop
lods
mov
or
push
xchg
push
push
andps
or
or
inc
movsb
fcomi
mov
mov
les
sub
ljmp
xchg
gs
lcall
lods
movl
mov
cmp
adcb
jecxz
pop
xor
enter
daa
sub
mov
jno
outsb
mov
push
bound
push
test
out
jg
adc
sbb
mov
stc
loope
or
inc
mov
xor
ss
push
sbb
add
dec
subl
scas
test
xor
jecxz
fldenv
sub
jbe
js
dec
inc
jae
movsl
jle
icebp
icebp
aad
daa
jl
mov
jns
icebp
iret
outsl
xchg
fs
push
mov
push
sub
dec
testb
sbb
push
shll
add
push
mov
daa
push
cmpsb
jg
pop
cmp
mov
popf
enter
jp
pusha
les
jmp
cwtl
loop
lea
mov
add
rol
sub
jns
xor
das
in
fisubrs
ja
inc
ficoms
leave
stos
pop
xchg
jns
adc
and
pop
sbb
xlat
cmp
mov
out
or
jo
add
fwait
cmp
jle
push
push
jge
add
leave
adc
jo
cmp
sbb
sub
mov
test
enter
push
mov
out
out
insl
mov
jmp
test
push
ds
roll
xchg
push
cld
daa
ficomps
sub
stos
mov
fwait
daa
add
push
jne
push
jge
mov
push
push
test
cmc
nop
ds
imul
mov
mov
jl
and
nop
sub
push
or
or
cmp
xor
iret
sbb
loope
mov
lret
pop
mov
jb
push
frstor
pop
sbb
mov
ja
xchg
iret
adcb
lret
adc
xor
dec
mov
decl
push
into
imul
mov
lock
stos
pop
push
movsl
or
xor
jle
orb
lahf
sbb
jne
aas
jg
int
lret
jbe
pop
cmp
jecxz
pop
sub
je
mov
mov
mov
xor
sahf
fsubl
inc
jns
vpaddd
xchg
inc
cmp
std
cmpsb
outsl
ds
insb
xor
mul
in
arpl
out
decb
orb
repz
mov
cs
andl
jae
cmc
push
push
loope
push
std
xor
cs
xor
or
arpl
int3
lcall
mov
outsl
iret
adc
subb
stos
aas
xchg
fidivrs
outsl
mov
cld
sbb
in
es
xchg
and
mov
addr16
or
aas
jo
notl
call
leave
push
jmp
repz
adc
or
and
cli
jbe
dec
inc
and
jg
xlat
jge
mov
jg
push
jbe
movsb
pop
xchg
jmp
mov
sti
cmp
mov
call
sbb
enter
popl
pop
popa
xchg
mov
aas
xchg
fwait
outsl
in
sbb
xor
push
or
das
pop
mov
inc
push
call
test
sub
xchg
arpl
dec
jb
mov
and
adc
and
popf
movsl
mov
dec
call
mov
ja
insl
jne
push
or
dec
sbb
jnp
mov
enter
adc
orb
pop
es
aas
push
mov
out
adc
xchg
and
test
xchg
mov
push
ljmp
stc
shlb
and
sbb
repz
imul
imul
inc
lcall
jb
fdivs
jne
mov
mov
int
adcl
lcall
mov
and
lcall
sbbl
nop
mov
lds
push
sbb
daa
les
sbb
cmpsb
mov
fdivr
pop
fs
jae
imul
repnz
je
xchg
dec
lods
dec
roll
aam
xor
rclb
mov
jns
mov
inc
jp
nop
push
inc
inc
lcall
test
xchg
clc
pop
loope
xchg
xor
aaa
mov
sahf
sbb
push
outsb
sti
cmp
lret
fwait
jle
lea
sbb
ret
mov
mov
adc
arpl
mov
lcall
inc
imul
jae
insl
xchg
push
and
mov
xor
int3
add
testl
dec
fdivrl
dec
push
and
adc
lds
add
ret
xlat
jns
fidivrl
mov
insl
popa
sbb
out
out
lcall
mov
pop
xchg
lret
arpl
xor
mov
addr16
dec
hlt
int
fdivl
xor
jno
data16
push
adc
sub
sbb
inc
pusha
add
xchg
sbb
mov
push
movsb
stos
roll
lahf
cltd
ret
push
and
das
into
mov
mov
mov
test
test
jmp
xchg
add
out
push
mov
xchg
push
cmp
fwait
fs
cld
bound
jo
inc
fcoms
xchg
rorl
mov
add
jge
inc
mov
adc
iret
pusha
dec
fldenv
stos
pop
jge
out
jp
dec
leave
push
pop
pop
sti
add
repz
insb
mov
sbb
orl
shll
stos
push
dec
ja
in
dec
daa
mov
cltd
fisubrl
test
stos
ret
add
mov
inc
mov
inc
lret
push
ja
shrb
jae
mov
xor
aam
icebp
pop
xchg
rol
xchg
test
rcll
xchg
aas
test
orl
push
add
cmp
fwait
aaa
insl
loopne
and
mov
out
jne
lock
pop
mov
cmp
loopne
mov
cmpsb
mov
pusha
sbb
int3
push
and
sub
adc
int3
test
call
stos
sub
sbb
add
data16
cmpsb
lret
in
pop
dec
scas
xor
fistl
and
pop
popa
and
in
shrb
xchg
dec
xor
push
mov
in
cli
add
jg
cmp
loope
daa
mov
test
xor
insb
or
add
mov
pop
fisubs
mov
inc
and
lods
popl
push
mov
out
push
xchg
add
xchg
lret
ret
outsb
scas
lahf
cmp
push
mov
pop
std
jl
lods
in
scas
pop
es
les
push
fs
sbb
mov
es
or
pushf
ljmp
cmp
cli
sub
xchg
cmpsb
sub
rcl
mov
dec
inc
loope
adc
mov
pop
mov
ss
psllq
pop
ret
cmp
xchg
dec
sbb
ret
loop
jb
push
rol
mov
mov
pop
testb
or
inc
js
push
shlb
jb
loope
xor
cmp
cmp
sbbl
inc
dec
xchg
and
mov
adc
add
loop
xchg
mov
insb
dec
adc
inc
jns
pop
pop
cli
adc
ja
hlt
icebp
outsl
mov
sub
adc
pop
sub
notl
adc
sbb
es
fnstenv
loopne
je
jbe
xor
cld
pushf
lcall
sahf
add
int
pop
dec
add
mov
into
fldenv
xor
rolb
je
xchg
aaa
add
push
or
and
and
sbb
lret
jl
rorb
sub
lods
sbb
jne
xchg
sub
dec
xchg
pop
ss
xchg
icebp
cmp
adc
pop
jg
mov
sbb
add
cmp
in
sbb
mov
pop
clc
xchg
cwtl
test
push
in
pop
push
adc
sub
push
dec
andb
mov
hlt
mov
mov
or
push
sbb
addl
dec
cmp
xor
inc
sbb
lea
rorl
xor
imul
inc
lods
sbb
and
pop
jbe
fiaddl
jns
xchg
mul
or
cmp
fcom
dec
mov
sbb
add
mov
jbe
mov
cmpsb
push
pushf
xchg
in
inc
fistl
jnp
addr16
iret
push
lcall
fldt
inc
inc
lahf
fisubrs
in
jg
or
and
sar
leave
xchg
jno
adc
pop
sub
mov
inc
sub
dec
push
mov
dec
adc
movsb
xchg
sub
loope
jmp
js
push
mov
xor
mov
mov
outsl
mov
outsl
clc
sbb
pushf
mov
inc
out
mov
fbld
inc
inc
cmp
sbbb
add
push
dec
jecxz
enter
adc
cmp
sbb
mov
or
jnp
les
ja
jae
xor
inc
stc
test
and
outsb
add
mov
ja
cmpsb
rclb
leave
nop
mov
ret
jb
xor
pop
shlb
cwtl
push
mov
jp
xchg
xchg
faddl
out
jo
adc
rcll
jb
lock
push
add
lds
sahf
pusha
inc
jno
push
das
pushf
fisubrs
insb
movsb
into
adc
mov
bnd
aaa
mov
ljmp
in
push
leave
in
pop
es
iret
or
out
test
cltd
fidivrs
jno
das
hlt
ss
mov
mov
cmovae
dec
aas
inc
push
cli
aad
shll
shr
imul
int3
std
imul
pop
pushf
and
pop
addl
jmp
and
mov
mov
push
add
cmp
push
movsb
arpl
xchg
popf
stc
lret
and
push
std
push
lea
pop
mov
insl
dec
pop
xor
pop
pop
bound
call
dec
hlt
add
into
adc
sbb
ss
aaa
and
leave
shll
pop
notl
add
insb
xor
xchg
mov
cmpb
adc
mov
fidivrl
fadds
lods
xor
mov
sbb
lea
loop
add
ds
sub
jmp
pop
mov
mov
xchg
xcrypt-cbc
cmpsl
adc
pop
cmp
insl
mov
xor
pop
in
stc
in
mov
notb
sbb
ficomps
loop
pop
push
inc
shlb
daa
arpl
call
cmp
lea
dec
stos
sub
mov
mov
add
inc
xchg
out
mov
hlt
outsb
cmp
inc
jno
out
roll
loopne
xchg
in
rolb
jne
mov
mov
mov
mov
cmpsb
shll
clc
ljmp
adc
lret
pop
push
in
dec
pushf
sbb
and
xchg
add
sbb
xor
aas
mov
idivb
sub
lods
lcall
mov
mov
cmp
mov
jne
dec
cld
xchg
xchg
repz
push
cmp
mov
add
ficoms
and
and
std
dec
mov
xchg
das
call
dec
xor
out
lds
push
mov
decl
scas
rcll
addr16
sbb
xchg
imull
mov
mov
je
sarb
hlt
dec
pop
ja
roll
dec
mov
sub
push
insl
jne
test
push
sub
or
add
sub
push
or
mov
mov
adc
add
jg
or
pop
data16
popa
jecxz
ja
outsl
xchg
lods
sbb
mov
adc
push
dec
aam
fs
js
cmp
add
add
sub
frstor
fadd
imul
mov
adc
ret
jecxz
sbb
mov
mov
daa
adc
xor
push
out
adc
push
push
add
jmp
outsl
mov
push
mov
ret
or
inc
xor
fsin
ja
xor
mov
mov
pop
xorl
movsl
jge
sub
push
xchg
fimuls
jge
xlat
sbb
ja
xchg
add
dec
mov
arpl
daa
mov
mov
cmpb
divb
pop
movsb
mov
sub
sub
lods
std
inc
or
leave
jo
fidivrs
jp
fistl
xchg
dec
or
adc
das
push
push
cmp
mov
orl
xor
mov
test
cmpsb
push
cmovns
scas
pop
sti
es
dec
jecxz
cli
shlb
aam
mov
and
in
loop
mov
sbb
mov
jle
xor
jecxz
fimull
push
stos
xchg
cmp
push
repz
loop
adc
push
mov
cmp
push
lcall
jae
adc
dec
sub
fsts
mov
in
addr16
out
bound
mov
mov
lock
lock
fstpt
xor
mov
jnp
pop
in
jl
push
or
lea
stos
inc
pop
call
sub
xchg
inc
imul
cmp
out
push
cmp
js
dec
es
mov
fcomps
xchg
mov
popfw
inc
loope
mov
pop
aam
xlat
inc
xor
out
pop
aaa
out
sbb
and
cmp
shrl
lcall
pusha
and
aam
sub
mov
cmp
sub
push
inc
insb
addb
jno
daa
cs
orl
arpl
sahf
push
inc
dec
pop
cmp
pop
pop
jno
stos
jns
adc
cmp
gs
dec
fs
daa
dec
scas
lret
into
xor
lock
or
jl
lods
mov
leave
das
fidivrs
out
repnz
sub
ss
adc
lea
push
add
sbbl
sbb
in
xor
xor
push
xchg
sbb
addr16
cmpsb
cmp
cmc
aad
ret
mov
cltd
dec
inc
adc
outsb
add
inc
aam
mov
insb
jno
out
mov
test
adcl
jae
push
pusha
mov
xor
out
loop
jmp
jb
push
jmp
aas
and
mov
cmp
jb
stos
and
gs
xor
jle
add
ss
mov
insb
jbe
pushf
in
push
or
gs
sub
xchg
data16
pop
rcl
inc
daa
aad
enter
pop
call
pop
adc
add
mov
jnp
mov
sti
dec
loopne
imul
imul
pop
aad
push
outsb
sti
shrb
pusha
sub
testb
and
mov
arpl
sahf
rcrb
mov
scas
outsb
js
pop
stc
mov
in
and
add
test
int
push
cmp
sub
int3
inc
mov
lods
les
int
and
out
fwait
aam
loopne
mov
dec
jmp
inc
sbb
div
push
mov
add
rorl
add
shlb
mov
dec
pop
out
inc
mov
cltd
std
addr16
adc
or
adcb
sbb
jle
jmp
imul
pop
pop
or
push
jno
mov
icebp
and
jle
scas
jne
jl
scas
jo
cltd
lret
mov
pop
mov
pcmpeqb
sti
lods
mov
push
insb
xchg
pop
jbe
pop
pop
jbe
mov
data16
xor
mov
cmp
adc
push
pop
sbb
jne
lahf
dec
sbb
cmp
adc
mov
dec
fdiv
sti
dec
xchg
xchg
clc
push
daa
mov
lea
repnz
mov
push
pop
inc
faddl
cli
sbb
fdivl
push
int3
lret
sahf
pop
and
xchg
pop
fsubs
add
mov
loopne
add
orl
adc
stc
inc
pop
pusha
insb
aas
neg
mov
push
cli
jno
icebp
nop
sub
into
jnp
fdivrs
fisttpll
and
jnp
sub
int3
insl
mov
mov
je
scas
adc
mov
xchg
repnz
out
adc
xchg
fdivs
in
jp
sarl
cmp
inc
mov
daa
jg
fbstp
scas
or
shl
pushf
mov
test
jge
xchg
repz
jmp
cld
inc
jno
push
jb
mov
shrb
imul
loope
mov
les
xchg
xchg
push
or
lahf
dec
lcall
jb
mov
or
pop
ficomps
dec
xorl
jbe
sub
mov
ja
cmpsl
ds
loopne
mov
mov
fisubl
repnz
lds
add
pop
add
in
inc
xchg
pop
mov
in
dec
mov
cmpl
and
sub
and
lahf
sub
idivb
aad
inc
sbb
dec
push
mov
imul
lds
jl
cltd
pop
dec
pop
or
out
push
sbbb
fnstenv
adc
cmp
lret
adc
push
cmc
or
inc
les
mov
pop
ret
int
xor
ss
lea
gs
loope
jp
adc
sbb
cltd
and
test
pop
scas
cltd
test
cmp
out
pop
inc
xlat
inc
sbb
push
ret
in
sti
mov
outsl
adc
ror
sbbb
or
jbe
sub
jo,pt
cmp
mov
xchg
sub
add
and
data16
add
push
dec
insb
pop
push
cltd
fsubr
or
jmp
cmp
inc
fbstp
imul
sbb
mov
push
sub
and
pop
jmp
pop
dec
aaa
add
push
aaa
push
jo
push
adc
pop
mov
cltd
dec
ret
add
movsb
sub
add
out
xor
out
stos
inc
insb
pop
jo
xor
mov
addb
pop
mov
inc
cmpb
pop
adc
jg
push
jno
fs
mov
sub
cmp
cmpsl
inc
mov
push
mov
icebp
cmp
xchg
sbb
rep
push
bound
rcrl
dec
scas
jl
test
iret
inc
or
lret
and
cltd
movsb
xchg
mov
inc
arpl
in
xor
xchg
add
cmp
test
xchg
inc
jnp
xor
imul
sub
shr
scas
mov
jo
cwtl
xchg
xchg
in
mov
in
daa
enter
inc
lret
cmp
iret
in
pop
scas
fs
int3
popf
rolb
push
push
fwait
or
sbb
jge
into
mov
mov
cmp
aad
inc
iret
out
in
push
fimuls
jb
cmp
mov
pop
mov
pop
xchg
mov
adc
sub
push
mov
in
jno
and
inc
filds
pop
add
pop
add
imul
cmp
lret
adc
in
dec
pop
mov
test
pop
mov
loopne
je
inc
sbb
std
ret
bound
cmp
mov
jo
movsb
inc
mov
push
into
adc
mov
aam
cmp
arpl
shrl
push
push
incl
shlb
or
mov
out
repz
out
orl
mov
pop
xchg
mov
push
jle
add
ds
cwtl
or
ret
ss
inc
movsl
icebp
jae
xchg
push
jg
cltd
lods
jae
popa
pop
mov
rolb
mov
xor
xor
push
fsubs
jle
lret
ret
lahf
pushf
mov
addb
mov
stos
fstl
mov
add
rep
decb
movsb
mov
mov
mov
loope
leave
sub
testl
and
cmp
lea
nop
daa
mov
aaa
js
sub
shlb
sbbb
cs
jno
lods
jg
pop
adc
movsl
divl
and
dec
aam
test
aam
fs
mov
test
xchg
js
popa
mov
mov
sub
sbb
call
push
dec
push
fidivs
jns
xchg
xor
push
add
ljmp
subl
push
xchg
cmp
jmp
jle
call
out
rol
lret
incl
cmp
xchg
pop
outsb
push
add
popl
std
insl
sub
jp
mov
stos
not
mov
lret
into
fcom
data16
sbb
loopne
pop
xchg
inc
addr16
push
les
pop
stc
movsl
icebp
cmp
fnsave
xor
js
mov
nop
cmp
dec
rcrb
movsl
aas
mov
insb
dec
and
movhps
fisttpl
call
xchg
and
mov
mov
mov
and
mov
xchg
mov
cmpl
mov
in
ss
dec
fistps
inc
loope
and
hlt
sub
push
xchg
popf
das
mov
pop
adc
data16
and
subb
dec
push
xchg
in
pop
outsl
jmp
repz
sarb
cld
jne
pop
repnz
enter
and
cltd
xchg
insl
and
jl
jp
pop
into
jnp
adc
or
pop
cmc
addr16
jbe
or
pop
icebp
pushf
popa
mov
add
insl
mov
mov
popa
sahf
push
shll
push
xorb
stc
pavgb
movsb
aas
xchg
inc
ds
inc
jne
lret
loope
or
cmp
xor
jno
shrb
mov
mov
jne
mov
mov
mov
stos
fwait
test
dec
sub
repz
mov
shll
daa
cmc
ret
out
ss
stos
or
movsl
mul
sbb
and
cltd
xor
adc
ljmp
and
mov
push
mov
jl
cld
testb
xchg
outsb
mov
adc
push
cli
cmc
outsb
fisubrs
mov
mov
jecxz
addr16
bound
jns
aas
pop
sbb
push
popf
int3
sbb
push
jecxz
xor
push
aad
adc
jns
pop
sub
fucomip
leave
incl
and
in
add
lds
scas
test
xchg
sbb
or
pop
push
ficoms
mov
sbb
ret
add
jg
jnp
push
or
xchg
decb
cld
mov
fiadds
mov
loope
fistpll
ret
into
sahf
leave
pop
or
push
xchg
mov
fsubrs
xchg
call
sbb
aas
or
movsl
rcrb
mov
sub
pop
xchg
inc
xchg
xchg
add
scas
addb
sbb
fistpll
xchg
cmpsb
dec
push
es
ja
lods
mov
xor
xchg
call
das
and
sti
pushf
imul
adc
sbb
dec
xchg
ds
cmp
mov
and
jae
clc
outsb
mov
jge
mov
jns,pt
mov
xor
sub
imul
sti
mov
aas
lock
or
in
pop
mov
inc
lock
lcall
lds
das
xor
imul
aad
jp
xchg
stos
xor
adc
push
mov
std
jp
sarl
mov
movsl
in
mov
ja
dec
push
icebp
lcall
scas
jmp
inc
adc
add
pop
adc
ror
pop
push
mov
ljmp
imul
scas
or
mov
je
xchg
in
sub
mov
and
pop
insb
pushf
xchg
stos
xlat
and
sbb
and
sahf
and
cmpsb
mov
inc
mov
dec
push
cmp
inc
sbb
lret
out
sub
mov
shll
out
cld
js
adc
mov
sub
test
and
sbb
cltd
mov
add
ret
pop
aam
test
push
cmp
dec
pop
adc
xor
enter
loope
cld
outsl
lret
xlat
xlat
jns
mov
jne
or
adc
adc
jl
inc
xchg
cwtl
add
cmp
and
out
fisttps
add
jl
sar
mov
dec
fldl
insl
neg
mov
cmp
dec
or
aas
xor
pop
fcoms
inc
pop
xor
out
and
clc
mov
mov
mov
jl
ss
pop
clc
sbb
and
int
pop
cmp
jo
jp
call
cmpsb
inc
push
fnstsw
mov
fdivrl
test
add
lcall
inc
fidivrl
xlat
les
mov
push
pop
out
adc
les
subb
jle
stc
sahf
call
xchg
jo
cmc
sub
jae
movb
cmp
addb
out
fbld
pop
inc
jge
mov
mov
xchg
rol
test
dec
es
pop
imul
sub
jmp
cli
dec
nop
shrl
push
sbb
push
shll
push
jle
aad
je
push
dec
fdivrs
shlb
loopne
aam
pop
xchg
push
mov
clc
je
or
sbb
ljmp
mov
rcrl
dec
adcb
cmc
je
cmp
pop
push
outsl
int3
sbb
mov
in
jo
cli
or
add
jns
xor
mov
lahf
dec
jg
lds
jl
sub
adc
mov
inc
mov
sub
sahf
pusha
xor
shrl
inc
mov
jl
jecxz
mov
popa
testl
jmp
xor
sti
shl
mov
add
cltd
xor
lret
scas
mov
bound
mov
rol
inc
movb
in
mov
hlt
mov
xchg
js
pop
repnz
push
push
push
lea
faddl
bnd
movsl
dec
into
ret
dec
lret
ljmp
xchg
fdivl
pushf
repnz
sbb
cmp
jbe
sti
sbb
mov
scas
pusha
outsl
mov
cld
and
dec
push
int3
insb
call
divl
or
and
das
aas
push
in
xor
mov
push
push
mov
into
in
push
int
xor
leave
out
mov
popa
push
out
pop
add
xchg
mov
push
ds
mov
mov
inc
lods
pushf
add
imul
jl
stos
mov
push
sub
or
into
jb
push
popa
jge
sarl
pop
xchg
pop
enter
mov
push
fwait
mov
fists
dec
out
or
sub
fucomi
xchg
xor
sti
jns
pop
xchg
jecxz
cmpsb
call
sbb
int
icebp
mov
adc
sbb
push
in
mov
and
jmp
fists
mov
cmp
jns
mov
pop
insb
pop
push
mov
inc
dec
pop
adc
mov
dec
ljmp
repz
and
ds
xchg
jae
rolb
fs
push
cmp
sub
jp
imul
jae
pop
push
xor
lods
inc
adc
sub
sbb
lret
push
ret
enter
mov
nop
push
jne
inc
das
in
xrstor
mov
sbb
push
std
jne
mov
or
repz
lds
loop
addr16
dec
lret
push
inc
pushf
add
and
xor
dec
mov
gs
xchg
mov
aas
xor
daa
jle
fdivrs
lcall
xor
inc
jns
je
sahf
jg
and
sub
pop
xchg
imul
in
fstpt
cltd
mov
lcall
sub
add
jp
mov
pushf
sbb
sub
push
shrl
add
or
mov
js
test
movsl
jge
push
jecxz
rolb
sub
scas
popf
test
adc
js
push
push
in
repz
mov
movhps
jns
stc
scas
es
test
mov
jecxz
es
stc
mov
rclb
push
xor
xchg
cmpsl
outsb
adc
fstps
xor
or
fsubl
fcomps
adc
jb
inc
sub
pop
xor
aam
xchg
adc
mov
jle
ja
loop
inc
mov
push
popf
sub
bound
or
scas
shll
push
push
inc
ss
repnz
fisttpll
jb
je
push
jl
xchg
dec
xor
out
mov
jp
cmpsl
mov
or
repnz
sub
bound
sub
sbb
pop
pop
cmp
insl
outsb
lods
test
fs
xor
mov
add
sbb
pop
push
cwtl
insl
xchg
mov
aad
in
cmp
das
das
cli
pop
xchg
mov
ljmp
pop
cmp
data16
arpl
add
les
movsl
push
sub
push
int
xchg
dec
adc
push
inc
scas
fcoml
popa
jecxz
test
pop
mov
mov
aad
and
mov
movsb
sbb
mov
dec
mov
sti
ja
adc
xchg
jmp
push
xor
or
loope
int
pop
lods
out
mov
inc
int
fstpl
dec
int
mov
loopne
cmpb
in
std
push
popa
inc
mov
push
les
sti
push
and
mov
inc
sbb
push
fiaddl
aam
mov
pushf
movsl
int
sub
ret
inc
sbb
push
jecxz
jecxz
in
loope
mov
cmpsl
sbbb
scas
out
call
movd
push
std
sbb
push
sub
push
addl
repz
or
daa
fisubrs
pop
lods
clc
add
ja
xchg
hlt
sub
mov
push
add
mov
int3
jnp
jecxz
bound
js
adcl
xor
negb
mov
jecxz
in
jns
dec
loope
js
out
shll
adc
sub
mov
sub
lock
call
and
outsb
dec
push
cmp
in
ss
js
xchg
inc
stos
loop
leave
or
cli
adc
aam
scas
xlat
inc
and
in
mov
jmp
subb
adc
sbb
xchg
mov
gs
sbb
hlt
out
gs
inc
lea
xorl
push
shrb
add
xor
inc
adcl
outsl
pop
add
addr16
sbb
sarl
stos
call
lods
cmp
jge
repz
js
jnp
sarl
call
jns
xchg
lret
int
or
insl
imul
ret
xor
test
adc
inc
outsb
mov
xchg
pop
mov
mov
jmp
mov
xchg
stos
ret
mov
add
lcall
sub
lods
cmp
jp
sbb
sub
jl
add
jl
mov
int
loop
push
clc
in
inc
shl
ja
arpl
inc
fstl
add
inc
mov
shll
clc
jmp
cmpsl
nop
pop
inc
jnp
xchg
cmp
es
jle
rcll
adc
xchg
or
push
icebp
fcompl
xchg
mov
es
pop
or
insb
cltd
sbb
in
push
cs
sbb
hlt
sub
lods
pop
scas
les
out
push
xlat
cmpsb
leave
mov
inc
adc
or
mov
jb
jle
inc
movsl
int
mov
fdivp
lods
movsb
and
ret
cmp
pop
pushf
pop
xorl
inc
mov
mov
mov
lahf
mov
pusha
push
mov
ud0
or
mov
and
sbbl
or
push
movsb
call
cmp
pop
push
add
mov
jns
push
pusha
subl
lods
jp
pop
es
jno
es
out
stos
sub
inc
insb
lods
or
cmp
sub
scas
adcl
sbb
rolb
xchg
aaa
movsb
cltd
mov
inc
call
imull
adc
sbb
push
mov
jne
xor
cld
inc
push
addr16
push
cmp
sub
pop
jne
into
push
dec
mov
cmpsb
push
sub
pop
or
shll
pusha
mov
dec
inc
loopne
loopne
bound
lea
cmp
shl
test
mov
iret
stos
stos
in
push
sub
mov
mov
data16
inc
xor
inc
jnp
mov
scas
ret
shlb
stos
xor
pop
jns
sub
mov
cltd
dec
dec
dec
sahf
jmp
xchg
mov
jmp
fnstenv
pop
ja
lea
out
lea
loopne
mov
jmp
jnp
aam
aaa
push
inc
xor
mov
mov
mov
mov
pop
aam
sti
divb
imul
mov
dec
mov
mov
dec
adc
dec
lahf
fbld
dec
xchg
lods
adc
push
lahf
rclb
repz
int3
or
ret
leave
mov
outsl
imul
mov
mov
ret
jne
mov
sub
in
pop
mov
pop
xchg
mov
ret
dec
in
inc
push
cmp
cmp
ja
mov
fisubs
repz
mov
mov
xchg
cmp
or
popf
xlat
cwtl
pushf
imull
xchg
xchg
push
outsl
test
repz
dec
and
in
jo
test
mov
fcomi
sub
adc
dec
loope
sahf
das
repnz
mov
icebp
add
xchg
add
testl
aas
sub
adc
subb
xor
imul
js
mov
mov
sti
test
out
ja
cmp
jle
in
inc
cli
loop
pusha
or
hlt
cmp
mov
push
movsl
cld
decb
call
jp
push
xchg
add
fs
dec
mov
cmp
iret
mov
cmpsb
pop
js
outsl
pop
in
into
sub
insb
loop
stos
iret
push
jle
push
dec
aam
pop
and
pop
add
xor
cmpsl
push
call
push
pusha
in
out
loopne
mov
mov
push
repnz
push
cwtl
addb
insl
pusha
fdivrs
cli
fstl
int
enter
xchg
pop
push
mulb
adc
xor
and
enter
lahf
out
pop
repnz
leave
and
or
cmp
cld
jl
xor
jl
xchg
jne
pusha
insl
xor
test
or
jns
or
punpckhbw
or
lret
addr16
and
or
lds
jle
pop
cmc
jg
jecxz
push
jecxz
movsb
sub
jecxz
ffreep
sbb
arpl
cmp
lcall
sbb
lock
sahf
mov
jp
into
adc
inc
pop
jno
dec
cmc
jae
xchg
adc
xchg
xor
aas
cmc
and
sub
repnz
xor
jecxz
shll
bound
ret
repz
mov
sbb
jb
xchg
stos
mov
sahf
jo
pop
fsubs
pop
inc
fsts
cmpsl
iret
aaa
sbb
or
out
cmp
mov
cwtl
cmpsl
pushf
or
notb
adc
jle
xchg
sti
mov
jecxz
aad
js
inc
jmp
mov
pop
jo
ret
out
in
xor
sbb
lds
loop
gs
sbb
mov
add
mov
pushf
lods
sub
jno
in
jnp
xchg
add
fisubs
mov
dec
lcall
push
xor
or
push
cmp
mov
jecxz
icebp
or
and
or
jo
pop
push
push
push
push
fadds
pop
lds
loopne
mov
mov
sbb
inc
and
pop
bound
push
jns
les
cltd
js
push
pop
lahf
sbb
mov
inc
mov
loop
testb
mov
push
test
push
mov
fsubrs
out
jl
mov
or
and
sar
jmp
push
loopne
out
leave
or
push
shlb
xor
lods
gs
int3
cmpsl
ret
inc
in
push
dec
push
mov
mov
cmp
loop
dec
stos
int
std
jp
scas
sub
clc
je
push
loopne
imul
cs
dec
inc
push
stos
addr16
inc
sbb
dec
dec
outsl
mov
and
rcrb
in
daa
scas
call
mov
mov
stos
mov
sub
sbb
test
dec
xchg
push
in
jbe
flds
enter
sbb
scas
shrb
nop
frstor
push
push
lcall
sub
adc
shl
xchg
adcl
and
mov
js
xor
lock
lcall
or
insl
dec
setge
jno
adc
mov
xor
pop
mov
pop
sub
mov
mov
inc
jns
push
sub
add
scas
aad
add
test
cli
pushf
es
sbb
cli
bound
int3
xchg
mov
je
ret
js
fimull
int3
dec
out
pop
or
push
jge
add
dec
stos
es
xchg
adc
gs
int3
mov
push
add
pop
jo
sarb
jmp
sub
arpl
fadds
mov
test
ds
inc
push
arpl
divb
cld
gs
push
xor
add
jp
cmp
int3
cmp
in
clc
dec
aad
mov
lcall
push
adc
pop
jl
jmp
inc
push
adc
repz
lahf
xor
push
les
jns
lahf
jns
lds
jge
sub
popa
adc
ret
rcrb
mov
mov
xorb
sbb
jne
jge
out
sub
shrb
sahf
scas
xorl
cld
cli
sbb
inc
sub
dec
sahf
fmull
mov
xor
add
xor
std
and
lea
add
xchg
sub
enter
adc
dec
arpl
bound
xchg
add
inc
outsb
icebp
enter
pcmpeqd
xchg
pop
gs
sub
aam
xchg
add
or
dec
adc
inc
push
data16
fcmove
push
cmp
ret
mov
or
and
mov
push
dec
mov
sub
push
addr16
or
pop
push
jnp
shrb
test
les
or
lods
mov
and
sbb
nop
fists
aas
push
in
inc
aaa
mov
jns
add
cmp
rorb
test
jle
jp
out
mov
in
inc
and
fnstcw
loop
push
mov
fidivs
jg
jg
adc
arpl
inc
jbe
push
push
xor
in
imul
ret
mov
add
fisttpll
jle
fwait
cmp
pop
subb
imull
mov
push
ret
jbe
xlat
pusha
int
arpl
mov
mov
mov
pop
fstpt
and
xor
mov
fdiv
push
and
jns
push
pop
cmp
mov
or
pop
popf
pop
add
out
jge
add
nop
mull
fcompl
inc
mov
cs
aaa
mov
cmp
outsb
cmp
push
and
mov
xor
pop
mov
test
shrb
jecxz
pushf
mov
dec
out
push
fildll
cmp
clc
push
mov
or
add
mov
sub
jl
lods
popa
dec
fsts
and
nop
repnz
lods
or
or
jmp
loope
inc
inc
inc
cld
loope
pop
mov
ds
dec
push
push
jp
pop
punpckhwd
ret
pop
hlt
sub
xor
popf
int3
xchg
int3
in
shlb
cmp
test
sarl
hlt
fidivrl
jae
xchg
dec
inc
fstl
lea
push
in
lahf
lret
inc
dec
xor
xchg
ret
push
inc
stc
rorb
add
sbb
adc
xchg
repnz
fldenv
xchg
gs
popf
out
jle
in
xchg
inc
cwtl
push
cld
xor
and
mov
add
hlt
stos
test
push
testl
repz
lods
addr16
nop
xchg
fs
sub
cld
shrl
push
jp
inc
aad
std
adc
lret
aad
or
cmp
sbb
and
cli
and
roll
mov
or
clc
ja
jo
sti
hlt
mov
xchg
xchg
lret
xlat
leave
lahf
cmp
clc
sub
inc
xor
mov
jge
aad
stc
loope
mov
pop
and
mov
sub
inc
push
jp
adc
stos
pop
cmp
xlat
icebp
pop
jbe
scas
lahf
pop
mov
mov
shll
popf
inc
or
ret
xchg
setg
popa
mov
cli
clc
aad
and
or
pop
push
mov
jmp
mov
in
add
sub
sbb
repz
mov
cmc
les
in
cmp
out
dec
dec
inc
outsb
push
rorb
rol
ljmp
fwait
cld
and
cs
dec
ret
sbb
hlt
insb
and
nop
sub
test
outsb
cs
cmpsb
mov
xlat
in
icebp
cmp
pushf
lods
adc
and
cmp
mov
insb
pop
das
lahf
mov
add
jno
adc
push
orb
cmc
push
scas
dec
pop
or
and
sbb
mov
arpl
movsl
std
mov
into
cmpsl
mov
fldcw
sbb
nop
mov
cmpl
cmp
insl
icebp
pop
or
hlt
shrl
inc
int
stos
repnz
inc
pusha
xchg
and
mov
mov
jb
mov
and
cwtl
sbb
mov
adc
inc
roll
adc
les
lret
cs
out
push
fs
lock
mov
pop
adc
daa
jl
adc
insb
cmp
aad
push
aas
gs
pop
add
and
or
pop
xor
jbe
xor
inc
and
push
jno
push
clc
xchg
stc
push
loope
pop
jg
push
pop
sbb
or
jmp
xchg
and
add
movsb
jb
dec
das
lret
sub
mov
pop
mov
lcall
lret
jae
fdivl
jb
fbld
cmpsb
cmpsb
gs
loop
out
xchg
out
and
arpl
mov
testb
inc
inc
inc
xor
push
lods
xchg
xchg
sub
jo
adc
lahf
add
es
lcall
cmp
jne
ja
movsb
jnp
pop
fnstcw
push
jle
mov
adc
pop
mov
fistpl
mov
popa
stos
lds
ja
xchg
scas
jmp
pop
and
add
mov
loop
inc
push
scas
lahf
bound
fimuls
mov
dec
mov
notb
ret
in
inc
mov
pop
repz
jecxz
sub
mov
mov
cwtl
scas
mov
xchg
in
test
inc
je
ds
jle
push
sbbb
xchg
cmpsb
int3
inc
mov
mov
adc
je
aam
inc
jnp
push
push
dec
adc
xchg
cmp
jl
adc
sub
pop
jge
or
sbb
pop
mov
push
scas
push
sbb
and
add
jo
imul
or
clc
xchg
push
imul
out
das
imul
sbb
out
stos
push
sahf
imull
sbb
pop
jo
sub
in
pop
mov
pop
xchg
sahf
dec
mov
or
or
add
cld
jo
rorl
les
inc
into
mov
push
scas
test
scas
jb
pop
mov
jbe
pop
fs
sbb
test
repz
adc
in
pop
cmp
push
testb
in
xchg
add
mov
sbb
lock
jnp
cmp
or
mov
pop
mov
int3
adc
push
jo
inc
xchg
cmp
mov
pop
std
mov
jo
xchg
sub
je
sub
dec
movsl
xchg
les
lret
mov
or
and
ds
cmpl
testl
out
pop
nop
sbb
out
scas
inc
lret
xor
inc
ret
sar
push
pop
pop
xor
adc
fsts
mov
aaa
cli
iret
jb
and
shrl
dec
sub
inc
jg
daa
mov
roll
in
and
jno
push
ljmp
add
jnp
dec
push
lret
push
push
sbb
cs
or
jo
outsb
sub
jle
lahf
stos
lahf
rcrl
sub
ja
inc
data16
icebp
gs
push
es
cmp
or
sahf
xchg
inc
encls
lret
outsb
sub
cmpsl
fwait
lods
sub
les
in
hlt
fiadds
add
xor
sub
adc
mov
cmp
push
xchg
xchg
fdiv
or
addr16
sbb
sbb
test
or
call
push
orl
or
xor
xchg
mov
icebp
mov
mov
and
jecxz
push
and
and
mov
cwtl
jb
int3
lret
jns
pop
out
out
lds
pop
push
int3
jnp
les
addr16
inc
lock
cmpsl
out
loop
insb
inc
mov
dec
jnp
lcall
fiadds
sbbl
pop
ret
jmp
mov
mov
movsl
mov
add
movsb
dec
push
dec
push
imul
call
add
negb
ja
inc
add
jb
xchg
aam
pusha
pop
jns
mov
iret
push
add
sar
lods
das
jp
fnstsw
sarl
dec
or
xchg
addl
xor
cmp
jge
mov
sub
pusha
inc
push
adc
movsl
and
das
movsl
pop
js
push
cli
xor
adc
xor
cmp
in
out
lret
rclb
sbb
lcall
mov
call
lods
mov
sarb
ret
jle
mov
inc
jns
sbb
pop
je
repnz
cmp
cwtl
ljmp
jmp
je
andl
jmp
sub
xchg
add
or
xchg
push
pusha
addl
sub
popf
scas
adc
mov
ret
call
test
popf
or
adc
mov
xchg
mov
pop
mov
movsb
push
and
mov
add
push
rolb
call
and
xor
mov
push
insl
sub
nop
pop
and
lret
es
js
or
or
jl
inc
stos
mov
dec
add
js
shll
jne
xor
sbb
sub
adc
ret
aas
jl
add
int3
push
dec
shl
mov
push
loopne
xor
inc
inc
lds
mov
sub
pop
sar
add
call
jmp
es
sahf
in
adc
sbb
clc
jbe
mov
mov
mov
scas
or
fsubr
mov
add
cmp
cmp
sbb
jbe
sbb
das
data16
leave
mov
xlat
jae
pop
push
mov
popf
add
adc
xor
enter
mov
jno
sbb
mov
xchg
in
fnstenv
add
scas
test
jg
sahf
xchg
jo
lea
orl
mov
pop
sub
xor
mov
repnz
jp
cmp
sbb
and
fs
dec
adc
mov
jp
push
xchg
sbb
mov
sub
sti
stc
aad
xor
fnstenv
daa
pop
repz
xor
sbb
shl
push
xchg
inc
lds
int
jno
pop
loopne
aad
outsb
imul
shrd
fcom
inc
mov
jp
icebp
xchg
xchg
jle
sahf
test
cwtl
jmp
cmp
mov
lods
mov
jmp
imul
cli
leave
aam
addr16
shlb
icebp
xor
cli
mov
lock
jno
lahf
push
lock
fwait
ret
clc
loopne
sbb
push
lea
mov
pop
xchg
lds
pop
shll
aad
out
push
nop
lods
divl
adc
or
lahf
and
movsb
xor
in
in
mov
jns
jmp
cmp
int
movl
xor
inc
ja
andl
xchg
stos
divl
dec
sbb
sub
add
sub
test
test
hlt
test
dec
add
adc
roll
and
jb
repz
daa
sbb
cmp
loop
dec
bound
xchg
pop
js
add
pop
out
adc
mov
pop
popa
and
lock
push
negb
fisttpl
xlat
pop
or
leave
test
nop
push
jmp
mov
mov
out
add
and
into
inc
scas
out
adc
dec
movsb
arpl
clc
aad
jge
dec
or
push
fldt
mov
or
lahf
inc
adc
jmp
sbb
inc
mov
in
inc
js
scas
je
fisttps
out
push
mov
sub
cs
xchg
dec
popl
cmp
xchg
daa
nop
mov
rorb
sahf
push
adc
push
dec
pushf
cmp
inc
xor
mov
scas
xchg
std
addl
mov
fwait
aaa
jbe
ret
fs
clc
and
jo
mov
ds
call
pop
push
pusha
cmp
incb
xchg
jecxz
into
out
cli
mov
inc
int3
push
push
idivl
sub
mov
fcompl
prefetch
or
add
pop
ret
iret
dec
je
fisubl
xchg
inc
mov
sub
mov
sbb
fs
rdpmc
lods
push
or
fnsave
mov
cmpsl
sbb
xchg
jns
jmp
or
xchg
js
data16
aad
inc
sbb
mov
dec
adc
fidivs
icebp
out
popf
pop
shll
aas
fsubrs
jbe
lret
xchg
jp
stc
repnz
dec
pusha
and
movsl
mov
jle
aam
test
sahf
jp
sbb
lods
ljmp
mov
aad
aas
jg
outsb
or
cs
sub
adc
cmp
aas
jnp
mov
cli
cmp
xchg
data16
inc
test
cmp
cmpsl
pop
jl
inc
push
fwait
push
mov
xor
pusha
pop
enter
dec
inc
fadd
cmp
lds
or
sar
cmp
mov
stos
pop
push
test
scas
addb
inc
pop
cmp
dec
jo
sbb
cmpsb
ja
inc
push
sub
jl
aad
nop
into
mov
mov
ja
pop
out
pop
int3
das
pop
lret
cmp
ja
add
repnz
lret
jmp
roll
inc
xchg
ret
pusha
pop
dec
xor
mov
cmp
sbb
jecxz
pushf
bound
insb
dec
push
je
loop
adc
jecxz
cmpsl
dec
inc
dec
mov
outsb
jecxz
rolb
rol
neg
xor
divps
mov
test
sbb
clc
xchg
push
pusha
insl
sub
enter
rdpmc
jne
sbb
push
lahf
movsl
rol
inc
data16
shlb
sbb
add
xor
cmp
icebp
mov
ret
xor
movsl
lock
push
and
jae
cmp
loope
aam
data16
rclb
cld
pusha
mov
mov
fimuls
or
arpl
mov
imul
ds
imul
out
fildl
sbb
rclb
outsb
rol
ret
es
lcall
jge
or
pop
jmp
jecxz
xor
add
popa
and
enter
rorb
adc
mov
popf
push
test
fisttpll
lds
sbbb
rorb
and
add
les
and
inc
mov
iret
xchg
inc
pop
jb
test
push
inc
insb
fcoms
out
push
pop
subb
hlt
or
les
cltd
mov
cltd
xchg
pop
insb
jb
cmp
les
mov
xor
movsb
scas
ret
mov
fsubs
push
data16
out
pop
scas
push
jo
cmp
add
pshufw
loop
xchg
out
cmpb
jg
pop
movsb
mov
enter
fwait
adc
mov
xor
jg
add
mov
and
push
sarl
add
pop
je
scas
insb
pop
add
sbb
mov
inc
cli
scas
xchg
pop
or
pop
inc
cmp
outsb
mov
out
fs
push
mov
fldt
inc
sbbb
pop
in
popa
dec
movups
mov
and
repz
aaa
xchg
push
sbb
cmpsb
push
adc
xor
cmp
call
pushf
sbb
mov
fnstsw
mov
lcall
mov
adc
imul
mov
sub
lock
int
pop
rcrl
or
push
add
pop
add
and
testb
in
mov
mov
movl
outsb
xor
sub
cmpb
or
cwtl
rol
lods
fcompl
mov
mov
jmp
mov
cmp
out
or
pop
lock
fisubl
icebp
imul
daa
pop
iret
mov
sbb
data16
imul
add
xlat
lea
and
in
mov
pop
test
push
pop
lods
mov
in
pop
mov
call
popa
js
scas
push
and
loope
je
pop
sub
clc
lds
cmp
pushf
ror
in
push
sbb
xor
xchg
mov
mov
in
push
mov
iret
shlb
mov
sub
cmp
cmp
or
cmc
add
jne
pushf
into
push
xor
and
in
mov
xor
mov
jbe
into
out
ljmp
xchg
sub
loope
sbb
cs
jp
add
adcl
mov
pusha
mov
test
sub
xchg
in
testl
stos
cmc
xor
add
jnp
imul
pop
sub
cld
pop
mov
adc
jns
sub
sbbb
jnp
jmp
jns
jmp
or
inc
sub
mov
pop
fldcw
rcll
jmp
push
aaa
repnz
test
inc
jecxz
xchg
mov
xor
mov
adc
cltd
mov
adc
dec
hlt
xor
pop
daa
push
popa
es
xchg
cltd
adc
subb
xor
push
cmp
lods
dec
dec
push
sbb
dec
dec
or
out
pop
adc
jp
jl
mov
mov
inc
add
adc
ljmp
push
pop
xchg
cmp
lea
pop
shlb
stc
sbb
mov
xor
inc
and
jbe
jmp
shl
mov
adc
xor
bound
decl
or
in
inc
add
lods
loop
and
das
jmp
or
insb
data16
cld
aaa
popf
jne
pop
mov
push
push
mov
mov
insl
clc
mov
jmp
jl
sub
push
test
or
or
cmc
insb
daa
sbb
dec
xchg
lods
aam
bswap
mov
lock
sub
ljmp
cmp
and
sbb
fstl
dec
cld
mov
aas
jb
jae
sbb
cmp
lcall
dec
mov
cmpsb
out
dec
and
mov
int3
mov
mov
pusha
mov
cmp
cmpsb
sbb
or
cmp
mov
sti
lods
mov
addl
les
push
fmull
jmp
pop
inc
or
cmp
lods
and
adc
insl
adc
sub
test
xchg
lods
shll
and
mov
sbbb
out
pop
int3
mull
pop
lods
dec
test
stc
rolb
cmp
inc
int
jbe
mov
js
xor
mov
inc
scas
clc
pop
fcomps
lret
mov
fcoml
leave
gs
push
jns
repnz
cmp
lods
fmuls
jmp
jge
loop
int
push
dec
inc
push
xchg
xchg
push
imul
andl
jecxz
pusha
cli
xor
pop
push
inc
push
ljmp
ss
shlb
inc
jns
adc
and
lahf
adcb
xchg
mov
push
fs
adc
mov
adc
stos
scas
out
sub
fists
push
jecxz
scas
leave
add
cs
xor
inc
loope
jbe
fs
outsb
push
outsb
daa
push
push
jno
lds
or
jae
inc
pop
and
inc
inc
outsb
xchg
cltd
mov
mov
std
sbb
xor
mov
clc
dec
stc
nop
push
filds
mov
mov
jns
jnp
mov
stos
and
in
xor
xor
inc
inc
arpl
int
enter
mov
sarl
sbb
mov
cmp
sub
xchg
pop
xlat
push
sub
in
loopne
mov
repnz
fs
fildll
mov
daa
add
stc
jb
sarb
adcb
aaa
sub
orb
pop
jb
sub
movsl
xor
loop
imul
ss
push
clc
sbb
xchg
jge
push
jle
fcmovbe
scas
je
pop
scas
out
dec
mov
mov
fcmovnb
call
sar
lea
xor
cmpsl
and
loop
lock
add
jmp
lahf
xchg
pusha
or
fsubl
cmp
fisubrl
inc
je
adc
xchg
jg
bound
movsb
sub
lea
push
nop
cld
push
aad
cmp
and
fadd
loop
and
or
sbb
adc
movb
test
jle
or
cld
xchg
push
out
sarl
iret
cmp
mov
inc
jo
test
insb
imul
and
adc
cli
neg
push
sti
xchg
stos
popf
into
and
push
mov
iret
in
cmp
je
andl
inc
adc
je
xor
mov
inc
movsl
jno
add
mov
outsb
insb
inc
fstpl
insl
and
mov
and
fsubr
insb
loopne
pop
clc
push
pop
xchg
test
or
and
mov
xlat
mov
call
dec
pop
pop
out
lds
add
cs
and
push
loop
cld
sub
inc
or
in
and
iret
stc
repz
jbe
ret
push
xor
jmp
repz
mov
add
icebp
dec
push
out
jl
scas
hlt
mov
inc
aaa
lods
pop
testb
push
pop
or
xchg
data16
daa
ljmp
orl
push
mov
inc
cmpsl
sbb
mov
test
jmp
aas
push
repnz
repnz
cmp
rorl
loop
in
sti
and
pop
popa
cmp
or
sub
dec
pop
sub
add
jbe
push
fsubl
pop
mov
pushf
pusha
adc
pop
mov
mov
mov
loop
inc
mov
mov
pushf
mov
mov
inc
sub
sub
loopne
stos
push
xor
test
adcb
out
xchg
adc
or
fs
sti
out
pushf
int3
lods
fidivs
xchg
fnstsw
and
aam
inc
je
or
sub
lret
xchg
popa
xchg
pop
dec
cmp
stc
inc
mov
mov
mov
ret
das
sbb
insl
mov
call
notl
xor
push
mov
dec
xlat
stos
adc
in
push
addr16
cmpsb
aam
mov
into
frstor
sarb
push
hlt
mov
mov
scas
addr16
in
or
dec
sub
repz
movsl
bound
push
push
test
cld
rcl
inc
sbb
push
adc
jnp
ret
push
pop
loopne
sbb
stos
arpl
imul
stos
jae
icebp
xchg
mov
test
mov
fdivr
sarl
repnz
jb
dec
mov
pusha
sarl
add
ljmp
dec
mov
int
sbb
scas
sub
loope
push
pop
stos
loopne
imul
int
jmp
mov
mov
push
sbb
stos
add
lds
lds
cmp
push
test
sub
mov
cmpl
test
lcall
nop
cwtl
scas
arpl
pop
inc
sbb
sbb
push
gs
cli
test
filds
lds
and
je
add
push
in
xchg
xor
push
mov
dec
add
leave
jmp
nop
pushf
out
clc
sbb
imul
addr16
xchg
aam
repz
cmp
ficoms
mov
mov
push
mov
xchg
and
popa
push
movsl
scas
cmc
mov
out
clc
loope
cmpsl
sbb
push
cmc
or
flds
fs
or
into
xor
sarb
adcb
pop
leave
mov
and
lea
mov
ds
add
xchg
lret
icebp
imull
adc
push
ja
fisttpll
int
pop
push
inc
clc
cli
dec
mov
mov
aad
cmp
cmp
rol
cwtl
std
inc
addr16
add
mov
jp
sar
sahf
lods
xorb
leave
jae
cmc
aam
push
or
mov
or
mov
popf
mov
aaa
movb
xor
iret
mov
pop
sbb
subl
adc
cmpsl
popf
pop
xlat
or
jno
cmp
mov
and
hlt
sub
sti
or
lock
add
jno
inc
mov
inc
push
and
mov
mov
pop
insl
stos
jecxz
push
and
add
popa
aaa
stos
lcall
int3
xor
cmpsb
mov
inc
movl
aam
outsl
mov
fcoms
addr16
jae
in
xor
imul
adc
add
lods
daa
jae
jmp
push
xchg
das
rcrb
cmp
fcompl
pop
sbb
fidivs
sub
mov
pushl
jne
pop
mov
lock
dec
xor
dec
pop
movsl
xchg
call
ret
cmc
pop
shl
insl
pop
push
inc
cmp
pop
test
ljmp
sub
pop
push
pop
ss
insb
insb
mov
sbb
test
mov
rorl
jmp
mov
push
push
mov
test
jg
dec
sbb
jb
fisttpl
idivb
lds
push
in
imul
sar
dec
jl
sbbl
add
cmp
mov
jb
cmp
cmpb
mov
cmpsl
je
xor
outsl
pop
in
adc
xchg
pop
inc
pop
jle
jns
push
sub
mov
gs
jmp
jno
orl
sub
push
and
mov
and
leave
sbb
shl
pop
lea
scas
mov
sub
and
ds
sar
pushf
faddl
sub
push
and
cmp
pop
cmc
sbb
jns
xorb
and
into
arpl
mov
push
outsb
jnp
xor
pop
adc
ljmp
lods
lret
divb
into
xchg
adc
fistpl
cmpsb
jge
daa
in
es
mov
mov
xchg
imul
jb
adc
fcoml
das
inc
adc
adc
adc
lds
sub
inc
popa
cli
sarb
loopne
fistps
mov
jo
mov
add
iret
in
mov
and
sti
sub
je
inc
xchg
adcb
insb
dec
or
insb
das
xor
and
pop
inc
push
pop
out
or
loope
imul
xor
decb
adc
gs
mov
push
leave
push
testl
push
dec
cmpsl
push
sbbb
inc
clc
in
subl
cmpsb
cmp
je
int
jns
into
xchg
sbb
cmp
aaa
mov
lcall
jp
xor
or
or
subl
addr16
cmp
bound
xchg
popa
out
addr16
push
paddusb
cs
repnz
lret
jne
loop
jb
pop
add
dec
lock
xchg
mov
loop
dec
jmp
adc
sbb
xchg
jo
mov
cmc
jp
repnz
mov
mov
push
or
xchg
sbb
push
frstor
xchg
jl
data16
stos
popf
add
loopne
cmp
xor
pop
adc
sbb
sbb
testl
pop
outsl
stc
cmpsl
xor
lahf
jecxz
shrb
pop
out
pop
cmp
popl
outsl
mov
adc
in
sbb
mov
xor
fnsave
xchg
and
mov
mov
inc
and
pop
pop
jbe
aas
adc
cli
xor
mov
andb
fs
test
xchg
lds
mov
and
movl
add
dec
cli
push
cwtl
je
stos
shll
test
add
lock
xchg
dec
inc
jecxz
inc
push
mov
lea
scas
cmp
es
inc
js
outsl
xor
push
rorl
shll
jne
adc
jb
call
inc
fstpt
sub
out
adc
lds
jnp
ja
insl
lods
xor
mov
mov
jns
jb
cmc
push
and
aaa
lret
fstpl
imul
aaa
sbb
cmp
aas
cmc
insl
mov
mov
push
and
mov
add
push
and
lods
mov
out
mov
loopne
nop
push
cmp
xchg
gs
mov
jo
mov
or
pusha
fs
cmpsl
movsl
cltd
loope
push
cli
xchg
xor
fstps
lods
clc
jp
push
jae
jo
pop
inc
or
sarb
jne
xchg
shrb
and
inc
mov
mov
out
fldl
lock
jl
aas
pusha
icebp
ja
stos
and
cld
pop
fisubs
pop
ljmp
dec
jl
and
in
inc
test
aaa
add
pop
cltd
daa
push
xchg
xor
repnz
and
out
movsb
dec
dec
push
xor
pop
dec
push
sbb
aas
cmpsl
pop
lahf
repz
xchg
mov
or
pop
sbb
lods
sbb
add
xor
mov
xchg
pusha
or
fbstp
sahf
add
movsb
xchg
addr16
dec
cmp
lret
mov
adc
insl
adc
and
insb
and
push
movsb
gs
sahf
out
dec
mov
sub
adc
and
test
hlt
or
pop
addr16
ret
jo
sbb
fwait
mov
sub
pop
ja
adc
test
cmp
jg
pop
loope
in
or
or
jg
aad
sbb
mov
inc
out
dec
cmp
imul
and
das
insb
add
ret
mov
add
mov
and
adcb
push
insl
ds
ja
pop
popa
fcmovu
lds
stos
fwait
mov
ficomps
add
cltd
inc
js
sbb
sub
push
pop
mov
cmp
push
popf
mov
jp
into
inc
mov
jbe
xchg
push
adc
jns
push
add
jmp
idivb
nop
jne
jae
mov
push
push
pushf
and
outsb
jo
inc
and
leave
mov
push
add
mov
or
push
lds
xor
jne
movsl
fsubrl
repnz
fcompl
arpl
sbb
mov
sbb
jns
pop
fcoms
mov
arpl
jg
xchg
test
xlat
sahf
sbb
sti
andb
or
push
jbe
ret
roll
andb
mov
cmpsl
xor
add
add
or
lret
iret
in
pop
cmp
cmpsb
mov
and
andb
in
jp
push
push
loop
adc
mov
pop
stc
out
mov
repnz
fstpt
repnz
sahf
cmp
fs
pushf
ret
adc
mov
lock
in
pushf
mov
xchg
aas
scas
pop
sbb
dec
inc
fsubrl
mov
mov
stc
inc
mov
mov
in
push
roll
mov
movsb
orb
xor
dec
jg
test
movsl
sti
out
scas
in
iret
arpl
pop
int
in
imul
push
lret
lea
pop
loop
mov
mov
xor
popf
lret
sub
or
inc
sbb
fwait
jbe
arpl
and
out
mov
cmp
jge
jge
sarb
push
jecxz
addr16
aaa
sub
pop
pop
sub
mov
cmc
xchg
sti
xchg
adc
xor
sbb
insb
ja
and
sahf
sbb
xor
pushf
shr
movsb
mov
das
push
fcompl
mov
add
mov
sbb
add
or
push
and
mov
sbb
mov
fucomp
adc
push
push
xorl
bound
out
pop
inc
push
jne
xchg
les
or
cmp
and
insb
mov
push
mov
aas
fs
and
out
cmpsl
jg
arpl
cltd
pop
xchg
sub
cmpsl
shll
hlt
cs
shlb
mov
orl
clc
push
push
fs
fnstsw
aaa
scas
jmp
sbb
inc
mov
fcomps
xor
cmp
sub
jg
or
aaa
cmp
inc
stc
dec
cmpsb
lcall
sbb
jge
xor
lret
jae
sti
push
sbb
test
inc
sub
push
mov
and
scas
fcmovnb
jp
int3
push
fstpl
dec
cmp
roll
insb
sti
in
jle
mov
test
xchg
idivl
add
lods
sub
fists
test
dec
jne
sti
leave
jle
and
jp
fs
dec
xor
loope
das
pop
mov
push
lcall
lods
mov
bound
dec
stos
sub
repz
and
test
sbb
imul
test
fisttpl
fsubr
mov
and
pusha
iret
xchg
inc
mov
pusha
outsb
sbb
ss
sbb
lods
ljmp
in
rclb
orl
rcl
js
and
push
cmp
and
pop
pop
repz
add
inc
mov
enter
mov
in
and
loopne
xchg
insl
dec
std
in
sub
sub
int
cli
imul
adc
mov
pushf
mov
test
jns
push
lret
xchg
jl
fs
pop
ret
test
pushf
push
push
repnz
ret
popf
inc
insl
push
shrl
cmpsl
aaa
les
int3
int3
fwait
js
lret
bound
lods
les
enter
dec
cmpsb
sub
adc
loop
jl
xor
ficoml
jmp
pop
inc
sub
cmpsb
or
and
clc
sahf
sbb
push
pop
std
movsl
sub
scas
fwait
mov
jecxz
mov
add
push
inc
mov
into
mov
inc
aas
inc
inc
mov
rclb
and
inc
imul
std
cmp
mov
push
stos
jl
push
sarl
push
and
push
jge
xchg
jge
sbb
xchg
mov
and
imul
mov
xchg
mov
inc
xor
push
subl
pop
jecxz
jne
jmp
rorl
xor
in
mov
jecxz
das
in
pop
sub
and
xchg
jg
add
push
adc
loopne
cld
or
add
inc
sbb
in
sbb
pushl
xchg
push
sarb
bound
in
xor
hlt
movsb
mov
frstor
mov
fnstsw
test
dec
fsubr
push
jns
nop
rclb
pop
ja
dec
stos
nop
lods
in
sbb
jp
aam
or
jno
test
in
icebp
popa
int3
sbb
sub
sbb
dec
out
or
mov
fdivrs
push
ljmp
sub
pop
lcall
cmp
pop
add
fldenv
mov
jecxz
loope
xchg
or
pop
jae
bound
enter
xchg
mov
dec
flds
pop
push
xchg
shrl
jecxz
mov
sub
push
std
dec
fnstcw
add
sarl
mov
lea
sbb
pop
call
and
popa
adc
xchg
dec
cs
bound
bound
jae
mov
sti
movsb
jb
inc
sti
leave
lods
inc
pop
sbb
mov
aas
loopne
mov
sbb
icebp
cltd
mul
and
fistl
add
and
push
mov
cmp
pop
mov
cld
imul
xor
rcrb
nop
add
inc
fmul
and
popa
push
sbbl
mov
push
jge
mov
and
lods
pop
lods
add
inc
cmpsb
sti
inc
mov
pop
inc
decl
cs
fistps
out
sbb
cmp
out
adc
out
nop
push
jl
dec
sub
mov
push
push
mulb
or
adc
push
sub
repz
sub
pop
stos
cmp
sub
lods
fisubs
in
lods
cmp
adc
arpl
xchg
mov
outsl
push
xchg
test
jb
or
sarb
imul
testl
push
push
fdivrs
sahf
or
sbb
rcll
cwtl
mov
mov
cmp
jge
sub
js
xchg
push
push
pusha
in
jg
int
mov
fldenv
movsb
fwait
cmp
or
iret
rcr
aad
adc
xchg
inc
push
adc
test
movsl
fdivs
xor
push
mov
jecxz
ja
call
adc
dec
mov
cs
jns
xchg
popa
and
push
in
mov
inc
mov
leave
cmpb
mov
jne
shll
xchg
xchg
sti
je
xor
cmp
cmp
mov
adc
pop
movsl
mov
and
xor
sub
push
pop
fimull
xchg
loop
enter
adc
jae
sbb
jae
jp
ficompl
xchg
mov
mov
sub
rol
inc
dec
sbb
sbb
daa
nop
lahf
jmp
loope
jmp
xchg
nop
jg
and
sub
mov
lds
pusha
out
sbbb
test
push
das
rcrb
sti
mov
xchg
xchg
loop
outsb
fwait
sub
lret
je
sbb
bound
xor
inc
mov
rclb
aas
jno
or
mov
jae
test
jno
inc
or
inc
sbb
adcb
loop
lret
mov
daa
adc
pop
lcall
mov
leave
cmp
and
mov
sub
sub
rcr
int3
imul
sub
and
outsb
sbb
stc
je
and
push
daa
loop
adc
mov
jnp
daa
icebp
xor
inc
inc
and
int3
ja
or
iret
dec
or
sub
xchg
test
pop
aad
xchg
mov
mov
and
inc
mov
jp
imul
movsb
lock
aaa
xchg
fs
xadd
jmp
mov
pop
insl
jecxz
pop
jnp
mov
jecxz
adc
pop
add
ja
mov
mov
decb
push
xorb
imul
stos
dec
outsb
cmp
mov
into
mov
mov
add
test
mov
out
enter
xchg
leave
int
mov
jno
cmp
out
cwtl
and
clc
mov
mov
mov
mov
dec
add
pop
push
mov
adc
mov
out
repnz
sbb
cmpsb
sub
inc
xchg
pop
arpl
xchg
mov
movb
loopne
add
rclb
lods
add
push
inc
lea
sti
roll
push
xor
push
push
jp
sahf
dec
push
lret
sbb
or
fwait
loopne
push
mov
jmp
mov
rclb
mov
scas
gs
outsb
adc
inc
xor
and
lds
clc
fs
test
xchg
lods
popf
dec
jb
nop
in
js
pop
or
inc
fs
jg
lods
jae
fcomps
fiadds
sub
pop
or
xchg
aas
push
nop
inc
adc
inc
into
mov
jno
inc
shlb
cwtl
mov
pop
ja
sarb
sub
paddb
pusha
daa
xchg
add
sti
and
je
aas
and
mov
mov
sbb
sarb
adc
add
add
not
jecxz
loope
sub
dec
int3
arpl
adc
daa
data16
sti
into
insb
jbe
push
inc
push
aam
push
mov
movsl
lahf
inc
cmp
sbb
ss
push
push
xor
jo
mov
loop
test
fsubrp
adc
or
adc
mov
inc
jp
inc
std
xchg
inc
loopne
jnp
add
pop
cmc
xor
pop
sbb
pushf
push
shl
pop
mov
sub
cmp
xchg
sbb
test
pop
xchg
insb
jno
fcompl
sbb
testb
mov
xchg
push
arpl
enter
pop
cwtl
pop
bts
cmpl
sbb
mov
mov
movsl
xchg
insb
rorl
sub
gs
mov
push
push
mov
push
ja
or
cmp
adc
bound
inc
push
xchg
aaa
je
stc
xchg
ret
pop
stc
hlt
xor
mov
bound
adc
push
hlt
jmp
enter
lds
stos
or
dec
pop
jae
dec
cwtl
cmp
jae
aad
push
push
jnp
jmp
cmpsb
xchg
test
pop
add
pop
pop
add
mov
or
cs
out
je
int3
cmp
mov
stos
lea
cli
rolb
std
mov
int3
lcall
data16
jbe
and
jmp
inc
stos
cmp
or
call
jbe
xchg
sbb
enter
std
push
xor
jg
rcrb
sub
out
push
mov
or
sti
jmp
push
and
lcall
hlt
mov
mov
mov
mov
jo
sbb
adc
addr16
xor
mov
adc
loope
or
jg
jge
dec
push
nop
bound
lret
jmp
in
nop
mov
pushl
fsubrl
insl
loop
call
iret
rcr
jns
and
cmpl
push
mov
mov
mov
out
adc
scas
popf
jl
loopne
pop
cmpsl
leave
xchg
fwait
add
cmp
mov
lea
sti
jb
enter
das
aam
fsubs
fcomip
outsb
xor
lods
jmp
popa
cmp
mov
xor
sti
cs
mov
sub
loope
pop
xchg
out
je
dec
push
push
mov
jns
mov
pop
mov
inc
xor
adc
sti
shrl
mov
in
insl
xchg
scas
xor
aam
mov
imulb
fstpt
xor
xor
mov
xchg
sub
or
dec
test
imul
scas
aam
or
mov
add
mov
sub
test
push
inc
inc
xchg
fsubrs
pusha
adc
pop
jmp
jb
and
popf
pop
adcb
dec
subb
dec
mov
xchg
insl
scas
lock
es
lcall
mov
jns
cmp
pusha
pop
mov
dec
xchg
icebp
adc
push
std
jl
mov
push
push
sbb
pop
inc
mov
mov
lret
pop
stos
dec
push
sub
lret
sub
xchg
pop
jns
leave
gs
fisttps
mov
push
in
aas
js
movsl
jle
pop
jecxz
scas
loope
sti
jle
jle
cwtl
jmp
mull
out
lock
jl
repz
inc
jbe
lock
xor
pushf
jns
add
mov
cmpsl
packssdw
nop
jnp
in
stc
mov
jge
leave
pop
jnp
lea
pushf
dec
mov
fsubrs
lds
test
dec
mov
call
mov
pop
mov
mov
inc
push
xchg
mov
int3
adc
xchg
inc
mov
sub
pop
jp
clc
sbb
add
cli
adc
test
scas
xchg
rcrl
in
xchg
mov
int
hlt
push
mov
inc
cmp
ljmp
push
adc
cmpsl
int
mov
cltd
push
and
pop
jo
nop
inc
jae
mov
mov
xchg
push
push
outsb
imul
jecxz
movb
mov
jnp
iret
push
or
sti
dec
dec
add
sti
andb
or
push
aas
push
inc
or
mov
fbld
bswap
in
adc
pushf
outsl
jns
pop
mov
cld
jp
ss
cmpb
mov
adc
or
cmp
add
lret
mov
mov
or
pop
aam
xor
loopne
sub
das
dec
pop
scas
cmpsl
mov
test
dec
xchg
cmp
fs
xlat
lret
inc
mov
sub
and
mov
addr16
inc
xor
je
arpl
jnp
pop
dec
scas
scas
mov
push
and
sub
cmc
pushf
and
repnz
push
jmp
lcall
fdivrs
adc
cld
pushf
jmp
inc
cwtl
sahf
popa
cwtl
push
adc
insb
cmp
in
dec
orb
sub
sub
stos
cmp
or
xchg
mov
movsl
sub
jle
popf
xchg
es
pop
mov
out
shlb
fildll
xchg
cmp
adc
add
jmp
insl
pop
mov
adc
sub
adcb
add
pop
push
loope
shl
xor
test
ret
out
adcb
daa
ja
int3
push
xabort
xchg
xor
pop
inc
mov
add
je
sub
in
addr16
inc
and
adc
jp
incb
mov
mov
xchg
adc
jnp
mov
pop
or
data16
inc
sub
and
add
cmpsb
movsb
shll
rol
leave
int
enter
repz
fs
shrl
mov
and
orb
xor
xlat
into
jl
pusha
pop
mov
lods
fcoms
stos
test
push
xchg
xor
lret
inc
and
cwtl
les
pop
mov
into
push
repz
test
push
jb
pop
dec
test
loope
xor
call
cmp
mov
fs
test
lods
jbe
add
repz
pop
adc
call
dec
leave
inc
dec
into
dec
stc
mov
cmp
into
mov
outsl
xor
leave
imul
inc
inc
cmp
xchg
aas
ret
das
sbb
dec
fimull
dec
fdivr
shll
arpl
lret
outsl
fcmovne
and
popa
sub
cmp
xchg
int
popa
shlb
sbb
sbb
xchg
xchg
cmc
cmp
mov
cmp
and
cs
repnz
jp
mov
aad
jnp
fs
jbe
insl
add
fimuls
inc
adc
stos
cmp
lret
fs
test
inc
xchg
test
push
aaa
and
not
xor
divb
fnstenv
mov
inc
or
fnstenv
lret
in
or
rcll
add
in
xchg
mov
adc
fadd
jmp
stc
pop
xchg
in
sarl
outsl
std
je
insl
mov
cs
shll
sbb
sbb
shl
rcrl
dec
push
mov
xor
fstps
rcll
jns
sbb
fsubrs
push
lods
pop
orl
push
andnps
xchg
jo
mov
pop
jecxz
in
xchg
mov
loope
mov
cli
test
push
xorb
sbb
jnp
inc
cld
shrl
pop
addr16
sub
scas
in
xchg
ret
or
jno
or
inc
mov
inc
inc
pushf
xchg
stc
nop
mov
push
inc
sub
adc
inc
xor
mov
xchg
outsl
pusha
jns
jbe
dec
sub
dec
ja
ja
dec
add
loop
lret
insl
xchg
outsl
lret
test
and
addr16
cmp
push
and
ljmp
jbe
fdivrs
repz
add
stc
mov
cmpsb
or
inc
add
cmc
movsb
xor
shl
pusha
cmp
push
add
std
lahf
in
mov
cmp
push
and
jb
mov
or
cld
add
dec
adc
xor
cmp
rcrb
mov
cmp
iret
lods
xor
mov
stos
mov
adc
shlb
cmc
outsl
in
cmpsl
add
push
aas
inc
test
xor
ds
nop
jae
mov
arpl
icebp
jno
sub
push
dec
xchg
sub
or
clc
test
xchg
xchg
cli
mov
adc
cli
pusha
in
push
ss
and
dec
dec
xchg
adcb
sub
sub
mov
dec
sbb
push
enter
inc
xor
xor
xor
das
dec
cmp
dec
xchg
and
lcall
jne
mov
sbb
mov
loop
pop
mov
lods
adc
push
xor
push
xor
lds
loope
cld
js
dec
push
lret
xchg
dec
addr16
adc
add
mov
ja
imul
adc
mov
aaa
xor
daa
push
lahf
mov
cmpsb
shrl
lret
or
mov
mov
daa
cmc
lds
and
test
out
cli
push
imul
ljmp
inc
pop
ljmp
xor
xor
movsl
rolb
sbb
xor
into
push
add
testl
push
add
dec
mov
in
and
xlat
ret
ret
stos
dec
gs
insl
out
mov
js
icebp
js
adc
fwait
mov
test
pop
lock
xchg
or
fisubrs
mov
cmp
pop
jbe
rep
scas
xor
mov
inc
push
push
jne
or
mov
pop
cli
sub
orl
sbb
jmp
fdivr
lods
lahf
incb
jl
inc
adc
mov
leave
inc
push
mov
test
mov
cmp
imul
cmpsl
mov
and
sahf
mov
push
push
inc
mov
mov
mov
push
pop
mov
xor
jmp
fsubrl
pushf
pop
xor
shll
push
jno
out
cmp
iret
pop
orb
scas
ja
scas
mov
cmp
jb
or
sub
mov
int
adc
movsb
xchg
aad
sbb
and
outsl
adc
jle
cmp
stos
gs
andb
add
sbb
adc
sahf
bound
mov
mov
cmpsl
rolb
pop
cmc
orb
adc
imul
xor
or
lds
push
icebp
sarl
push
dec
or
jbe
cmpb
xchg
movsl
dec
pusha
test
xchg
jbe
mov
cmpb
pop
or
jno
movsl
leave
sub
scas
xchg
push
hlt
int3
sti
repnz
in
mov
push
in
frstor
test
jp
cmp
scas
ja
mov
pushf
push
cwtl
enter
xchg
mov
mov
fwait
movsl
dec
jo
and
add
or
add
mov
sbb
xchg
into
jb
dec
add
sar
push
add
aas
add
fcmovu
test
cmp
or
enter
in
pop
push
mov
daa
fs
inc
aam
sbb
dec
ficoml
sbb
mov
fnsave
les
push
sub
idivb
test
and
push
mov
mov
addb
nop
pushf
cmpsl
push
push
out
loope
sti
loopne
test
sahf
in
shrb
mov
push
js
pushf
xchg
lret
mov
add
push
pop
je
xchg
mov
jmp
mov
in
int
dec
adc
loope
and
inc
sub
enter
mov
push
inc
in
cs
int
pusha
mov
pop
xor
xchg
ds
adc
clc
jns
std
insl
dec
or
add
add
jge
inc
push
push
enter
or
icebp
pusha
out
andb
clc
adc
arpl
or
push
jb
fsubrs
sti
and
loopne
xchg
lock
insb
mov
mov
or
mov
xchg
xchg
cmp
std
stc
push
ss
mov
test
mov
xchg
mov
addb
or
clc
cmpsl
outsl
push
mov
cmp
and
push
push
mov
pusha
pop
cmp
sbb
pusha
das
sbb
bound
loop
ljmp
jp
les
into
test
or
xchg
in
scas
and
das
sub
leave
imul
and
add
lock
dec
pop
mov
scas
jae
xchg
mov
mov
mov
shll
adc
or
mov
dec
loop
jbe
adc
jmp
mul
imul
pop
pushf
or
lret
jecxz
cmp
jge
push
test
sbbl
enter
and
insb
jle
add
hlt
out
adc
insl
cmovo
or
pop
ss
and
mov
sti
mov
pop
lods
pop
dec
lcall
jp
cmp
test
das
test
jno
pusha
insl
sar
push
dec
stos
sbb
jo
fsubl
popf
cmp
enter
mov
xchg
push
iret
and
ljmp
dec
mov
dec
xchg
push
imul
xor
test
inc
stos
jbe
adc
inc
pop
call
and
jae
xchg
nop
leave
loope
cwtl
nop
adcl
xchg
sbb
mov
xchg
daa
popa
shlb
aam
xchg
out
lea
inc
fucomi
add
arpl
insb
mov
pop
xor
outsl
pop
das
adc
sarb
jno
mov
sbb
std
aad
orl
pop
test
lods
popf
scas
fs
outsl
jo
int
mov
out
mov
xchg
ss
in
push
xor
fbld
cmpsl
in
mov
and
and
jle
jle
repz
adc
inc
es
or
jb
sub
jno
push
mov
ljmp
cmp
sbb
pop
fdivs
jmp
in
imul
movsb
lea
std
repz
sub
orl
cmpsl
and
mov
push
sub
pop
push
fcompl
movsb
xchg
adc
outsb
mov
dec
cmp
loopne
test
pop
cmpsb
les
xchg
pop
push
stos
or
insl
es
jle
pop
pushl
mov
mov
shll
jp
or
xchg
dec
push
dec
dec
jb
xchg
push
lret
test
push
sbb
push
xorb
rcrl
cmpsl
xchg
lret
jp
stos
adc
lret
fcomi
out
lea
or
pop
repnz
jl
in
lret
xor
adc
lret
cmp
mov
lods
xchg
das
pop
aaa
jp
pop
idivb
outsl
gs
cwtl
gs
pop
gs
jp
xchg
and
dec
push
sahf
test
out
insb
mov
sahf
xchg
mov
and
fmuls
dec
dec
and
test
mov
dec
mov
fdivr
mov
mov
jmp
and
imul
inc
or
mov
fsub
test
mov
cwtl
icebp
lret
sbb
push
outsb
and
lods
xor
testl
jmp
sbb
inc
jg
idivb
lock
sahf
ss
inc
xchg
sub
orl
xorb
cmp
push
out
ds
in
and
mov
sbb
push
sub
jecxz
les
out
aam
divb
js
fimuls
mov
mov
push
sar
inc
stc
push
ret
jge
pop
out
cmp
mov
and
pop
xlat
daa
ja
lret
into
dec
dec
decl
add
inc
add
add
rcl
sbb
xor
pop
in
jne
in
sub
das
psllw
push
xor
jo
and
add
adc
icebp
dec
adc
dec
mov
sbb
ja
sbb
add
push
add
leave
cmc
call
in
push
les
mov
inc
push
mov
test
jno
ret
in
in
ud0
mov
ljmp
sarl
stos
sbb
and
shll
addr16
inc
mov
mov
aas
andl
loopne
xlat
pop
dec
inc
mov
inc
mov
outsl
push
add
and
iret
cli
push
push
cltd
inc
mov
arpl
shll
int3
xchg
push
lahf
push
mov
mov
enter
fildll
mov
cmpsl
pop
gs
leave
ljmp
cmp
mov
inc
ljmp
stos
in
pop
sbb
inc
pop
sahf
dec
aas
add
pop
lahf
mov
fstpt
out
fnstsw
pop
mov
dec
xor
mov
xor
fnstcw
out
cmp
pop
push
push
jnp
inc
rcl
xor
mov
xor
push
ljmp
cmc
imul
or
xchg
or
push
pop
out
mov
adc
or
inc
cmp
mov
mov
aad
mov
mov
lock
push
jbe
pop
dec
push
xchg
sbb
push
les
cmp
fdivr
adc
in
in
jns
int
jmp
fiadds
and
cmp
xchg
cltd
repnz
jle
lahf
push
sub
in
mov
mov
js
dec
pusha
jo
pop
out
mov
cmp
cmpsb
scas
test
cltd
inc
jecxz
lea
inc
stc
xor
iret
das
rcr
pop
loope
dec
pushl
add
xchg
test
data16
xchg
out
cld
rorl
jns
iret
adc
cli
scas
cli
adc
mov
push
jg
push
in
sbb
inc
adc
and
sub
sbb
out
xor
cmp
fisttps
or
gs
inc
loope
push
ror
scas
pop
push
jge
adc
dec
or
sbb
and
jno
insl
ret
xor
faddl
xor
or
bound
shrb
cs
icebp
inc
pop
cmp
or
adc
repnz
sbb
add
dec
xlat
imul
movsb
xchg
push
call
aam
sub
mov
push
repnz
mov
rclb
xchg
add
gs
ds
hlt
dec
xchg
mov
inc
mov
rol
lret
sub
shrb
or
mov
add
adc
xchg
push
test
leave
aam
dec
aad
cmp
xorl
add
jl
mov
bound
lock
xchg
loopne
mov
subb
out
pop
jns
pop
jg
and
lock
lea
mov
call
mov
test
add
ds
adc
sahf
aad
xchg
test
mov
sub
dec
xchg
outsl
inc
xor
lea
sbb
mov
add
xchg
je
xchg
sub
sbb
adc
pop
add
lret
arpl
pop
cmpsb
pop
pop
sub
into
cmpsb
and
cmp
mov
sahf
out
imul
je
popa
aad
mov
fwait
pop
cltd
enter
repnz
push
push
push
sub
xor
xchg
or
lret
loope
dec
xor
push
icebp
mov
and
setne
test
test
lret
lahf
fisubrl
jl
dec
test
insl
lods
add
int3
push
les
es
jns
and
ret
stc
outsl
outsl
ss
aas
adc
adc
xlat
jno
in
jns
and
push
gs
mov
jb
frstor
lock
and
xchg
lcall
dec
lods
mov
dec
mov
sub
in
mov
adc
push
insl
test
outsl
mov
fiadds
scas
movsb
inc
cli
test
ljmp
jmp
insb
cld
inc
pop
addr16
sbb
das
push
jns
imul
inc
nop
aas
es
not
and
pop
pop
sbb
aas
adc
mov
pop
sbb
or
push
hlt
fldl
test
mov
repnz
add
inc
jo
inc
ja
cltd
mov
sbb
cmpsl
pminsw
les
out
cmp
push
arpl
mov
sbb
inc
push
jbe
fisttpl
int3
les
bound
jo
xor
fst
dec
fucom
ljmp
adc
mov
jp
dec
mov
in
push
add
lar
scas
sub
or
loop
xchg
bnd
add
sbb
enter
scas
fsubrs
and
shlb
rorb
mov
stos
cmpsb
notb
mov
icebp
orl
into
es
pop
xor
pop
rcrb
das
or
lea
lret
xchg
std
jmp
sbb
xchg
adc
outsb
jnp
cltd
div
rcr
fcomip
jecxz
cmp
pusha
cmp
dec
insb
cmpl
repz
call
jl
stos
xchg
xchg
cmp
or
repnz
arpl
and
mov
cmp
push
clc
xchg
mov
into
int
leave
pop
mov
loope
data16
scas
idivl
lock
repnz
pop
call
inc
cld
shl
xor
jecxz
mov
jne
repz
or
lcall
push
mov
sbb
mov
mov
out
das
pop
pop
test
inc
movsb
movsb
pop
mov
popa
dec
stos
jo
dec
sbb
das
push
mov
jp
add
mov
insb
add
xchg
fisubrs
aaa
adc
mov
xchg
mov
cld
cmp
push
imul
cld
test
test
push
xchg
stc
dec
dec
or
sub
notb
aaa
or
mov
insl
movsb
rcrl
les
sahf
int3
inc
int3
mov
cs
mov
xor
pop
fldcw
ss
add
push
dec
lahf
mov
sbb
or
jnp
popl
test
or
fdivr
lods
or
mov
push
push
and
mov
shlb
je
fnstsw
or
adc
adc
test
test
imul
fdivp
mov
and
jne
mov
cs
mov
mov
dec
pop
popa
arpl
xor
mov
jo
loopne
push
and
cmp
popf
aaa
xor
int
in
jns
and
call
fwait
jl
push
dec
sarb
fldenvs
rolb
sbb
lret
scas
pop
mov
jnp
in
test
xchg
jmp
call
orl
sub
out
xchg
pop
pop
lahf
lds
rorl
jecxz
dec
mov
sarb
stos
jae
adc
jb
push
addl
imul
adc
adc
push
mov
jle
mov
cmp
mov
stos
imul
xor
inc
js
jp
and
add
test
sarl
mov
adc
je
sbb
push
repnz
or
sbb
cmp
icebp
xor
inc
push
sbb
lahf
xchg
imul
gs
je
cmp
push
int
jp
xchg
pushf
and
lods
dec
or
loopne
mov
inc
jne
xlat
push
filds
outsl
dec
xchg
add
jmp
fsubs
jne
xor
xchg
pop
jb
repz
xchg
mov
rsqrtps
and
jecxz
sbb
hlt
mov
xor
cmp
loope
rclb
mov
add
leave
cli
lahf
andl
add
sarl
pop
out
adc
add
inc
jne
or
add
xor
jge
sbb
jl
inc
jb
jno
data16
cwtl
xchg
test
mov
mov
sbb
add
mov
aam
jecxz
pop
movb
dec
clc
idiv
jmp
sub
fisubl
jbe
mov
negb
sbb
lods
repz
imul
ffree
cltd
icebp
mov
dec
fld
cmpsl
mov
sbb
fs
ret
push
xor
xchg
rorb
hlt
int
push
inc
mov
push
dec
loope
jb
stc
mov
inc
dec
push
mov
mov
cmc
add
mov
rorb
mov
push
add
sbb
sti
hlt
or
fidivrs
decb
xor
cmp
mov
mov
cmp
cld
jmp
mov
lahf
inc
cmp
insl
mov
stos
imul
mov
pop
cmp
jge
dec
cmp
adc
mov
mov
xchg
xchg
xchg
pop
inc
addr16
std
or
aas
xor
dec
ret
sub
cmp
ds
mov
adc
dec
sub
and
out
jmp
pop
jns
test
dec
cmc
add
enter
xchg
cmp
mov
and
test
add
movsb
pop
pop
mov
mov
fdiv
call
addr16
cmpsb
mov
fidivrl
in
xor
fimuls
sub
push
dec
int3
jne
jne
add
cmp
xor
jo
push
mov
pop
cmp
mov
add
or
fisubs
fisubl
inc
adc
aad
bound
fists
decl
push
iret
sub
adc
pop
les
lret
testb
or
aad
out
cmp
ret
mov
fcoml
sbb
ja
mov
lock
mov
stc
subl
sarl
jne
inc
rcll
push
or
xchg
ret
mov
xor
jge
push
daa
cs
pop
adc
or
sbb
ds
mov
jno
test
jl
addr16
cmp
sub
lock
pop
lods
jp
jnp
in
push
iret
sub
cmpsb
lcall
or
xor
clc
adc
enter
dec
lods
mov
hlt
ds
dec
out
mov
xchg
loope
test
mov
mov
rcrb
fcmove
add
inc
add
adc
iret
mov
mov
xchg
int3
enter
test
dec
movb
and
pop
sub
dec
pop
mov
cwtl
pop
sbb
xlat
iret
mov
sbb
fsubrp
mov
incb
add
sahf
jnp
sub
jbe
aaa
cmp
xchg
outsb
outsb
xor
fisubrl
push
into
stos
xor
movsl
int
pushf
jmp
lret
sub
in
and
cmpsl
mov
ret
pop
sbb
fnstcw
dec
sub
inc
std
test
loop
ret
and
loopne
inc
test
sub
cmp
xchg
mov
out
jecxz
sub
aas
jg
test
push
cmpsb
popf
out
and
jge
jne
cs
dec
out
sbb
ljmp
xchg
js
sti
inc
enter
or
mov
stos
int
jle
xor
mov
mov
mov
jecxz
pop
mov
xchg
enter
arpl
add
das
dec
aad
jp
add
sbb
pop
add
push
mov
xor
push
cmpsl
mov
mov
icebp
sbb
jbe
xor
jo
aas
lds
test
inc
jnp
inc
nop
lahf
mov
or
mov
inc
outsl
cmp
sub
pop
mov
pop
or
ljmp
dec
in
shr
sub
test
popf
add
fistpll
fs
insl
cs
arpl
inc
inc
or
ljmp
xor
pop
int3
pop
call
shrb
mov
pop
popf
je
leave
xchg
cld
or
imul
popa
jns
leave
mov
or
sahf
movsb
or
cmp
mov
insl
fiadds
dec
outsb
or
stc
mov
icebp
sub
dec
adcl
jle
add
jne
sahf
ss
push
jnp
cmovno
mov
push
xchg
sub
clc
fsubp
pop
in
pop
add
loope
pop
aas
shrl
add
pop
jmp
xor
lock
jo
dec
ljmp
xchg
fidivs
shl
mov
xchg
cmp
xor
fs
inc
push
movsb
aaa
or
cmp
sarl
sbb
fs
mov
dec
int
or
xor
push
rclb
in
inc
lds
cmpb
sub
test
mov
bound
jnp
cmpl
lea
hlt
nop
pop
shlb
into
rorl
out
mov
cmpsb
push
aam
cs
loope
icebp
repnz
aad
inc
ret
in
inc
sahf
in
movsb
fldt
mov
cmpsl
mov
dec
jb
adc
ja
data16
mov
push
shrb
adc
mov
cli
lock
push
movntq
out
lea
divb
add
push
outsb
mov
dec
mov
daa
jp
jmp
dec
bound
pop
mov
out
lds
mov
sbb
push
sub
inc
sbb
add
inc
roll
sbb
xor
jle
add
cmp
sub
fidivrl
lret
pop
sbb
jmp
lds
scas
xchg
lock
mov
mov
pop
out
or
inc
sub
ljmp
xorb
int
xor
jecxz
test
aaa
pop
adc
test
sbb
xchg
sub
sub
cld
inc
xor
aad
loope
dec
mov
inc
pop
pop
xor
sbb
outsl
int
xchg
addr16
cmp
test
inc
cmp
rolb
inc
dec
or
ret
and
adc
xchg
mov
out
xchg
cmp
jo
loop
dec
sbb
xor
repnz
and
cmp
jmp
xchg
inc
dec
sub
outsb
pop
jle
lds
daa
icebp
pushf
in
pop
and
sbb
xchg
loopne
movsb
sahf
fimuls
imul
pop
mov
xor
xchg
scas
ja
es
out
jbe
fsubl
inc
jbe
mov
dec
pop
mov
and
or
aad
adc
jne
movsb
sbb
push
aaa
and
inc
iret
movsb
movsl
or
test
sbb
movsb
xchg
cwtl
adc
add
pop
sub
ret
hlt
dec
out
fiadds
mov
clc
xor
lcall
mov
push
xchg
jb
lea
sbb
inc
pop
dec
aam
sbb
inc
jbe
cmp
or
dec
mov
mov
add
xchg
adc
rclb
ljmp
loope
bound
sbb
orb
rol
mov
movsl
mov
pop
xor
sub
mov
es
xchg
aam
inc
xor
and
mov
push
lods
daa
arpl
insl
jmp
in
push
int
cld
and
leave
jae
jle
mov
scas
cmp
int3
sbbb
cmp
mov
sbb
or
xchg
repnz
leave
jge
testl
arpl
cmpsl
push
cmp
adc
js
cmp
dec
mov
mov
pusha
and
add
loopne
test
lret
mov
or
dec
mov
jo
notl
push
mov
hlt
enter
jno
jb
inc
add
jno
push
xchg
jo
movsb
adc
in
test
inc
scas
mov
lcall
enter
pop
repnz
jle
adc
mov
inc
mov
cmp
jmp
and
test
xor
mov
push
pop
add
out
int
inc
movsb
push
jge
push
mov
adc
outsb
test
add
mov
inc
push
movb
test
out
mov
insb
lcall
lods
in
inc
jmp
fsubl
ds
out
cld
inc
mov
jb
mov
lea
mov
inc
adc
daa
sahf
jmp
outsl
xor
push
push
loope
gs
scas
sbb
jl
fdivl
dec
or
es
clc
or
sub
hlt
xchg
pop
sarb
sub
movl
sub
data16
mov
mov
pop
adc
mov
addr16
stc
push
mov
pusha
cmp
clc
ret
pushf
sbb
fwait
adc
shlb
jl
dec
outsb
mov
cmp
fbstp
rcll
orb
lret
push
cmpsl
inc
mov
stc
push
push
jae
lahf
push
cmpsl
xor
and
push
shll
mov
sbb
std
inc
and
inc
outsb
inc
popf
xlat
iret
inc
mov
xchg
gs
add
mov
sbb
inc
repz
add
repnz
add
test
xchg
mov
fst
popf
dec
pusha
pop
fcompl
mov
dec
ljmp
int
dec
imul
push
push
adc
xor
mov
jnp
lods
pop
scas
push
push
lahf
rol
jl
aad
pop
and
fwait
lock
mov
adc
sub
and
push
mov
add
xor
pop
xchg
jae
cmp
mov
lods
popf
xor
mov
in
cmpb
addr16
fimull
outsl
push
stos
sar
adc
add
popa
cmp
vdivpd
fsub
inc
mov
dec
ljmp
sbb
mov
add
xlat
sub
and
test
repnz
cmp
and
test
mov
loopne
rsm
inc
sbb
sub
and
xchg
cs
pop
mov
sbb
cwtl
sub
or
hlt
scas
mov
cwtl
lods
add
cmp
push
fistl
jns
mov
push
sub
cmp
mov
fwait
pusha
add
ret
addb
xchg
or
pop
mov
cmp
mov
jle
adc
insl
imul
fnstsw
pushf
out
lods
cmp
adc
aam
into
jo
add
add
out
push
and
jb
mov
aam
cld
xchg
inc
mov
inc
lods
lods
xchg
lea
pop
fldcw
adc
sub
fldenv
shlb
jae
rorb
pop
aam
fnstenv
add
mov
rol
jnp
dec
ds
push
push
pop
sub
pusha
or
pusha
mov
push
rcll
out
mov
in
and
mov
or
jg
xor
divb
arpl
dec
mov
jmp
xor
shll
scas
sbb
inc
and
lds
jg
jnp
jbe
aad
pop
push
sbb
pop
pop
dec
aas
loopne
jecxz
mov
cmpl
jle
xchg
sub
sbb
imul
mov
xor
or
fcompl
neg
rclb
out
push
sbb
lret
enter
outsl
jbe
xchg
movd
mov
cmp
mov
loop
pop
mov
sub
jbe
shll
lock
and
jg
xor
push
arpl
in
int3
jl
inc
mov
mul
in
iret
cwtl
jge
aad
add
and
mov
jne
xchg
jb
jge
add
ss
out
or
mov
rcll
dec
xor
lods
adc
jno
dec
out
sub
ljmp
or
mov
popa
cmp
adc
sarb
xor
mov
cld
add
cld
and
lods
sbb
fwait
das
dec
mov
and
add
mov
into
mov
divb
imul
cs
add
loopne
inc
pop
xchg
xchg
mov
xor
int3
ficoml
xchg
and
xchg
mov
pusha
mov
xchg
mov
jno
inc
or
repz
push
int
mov
pop
dec
dec
dec
clc
mov
jae
stos
addr16
dec
stc
push
insl
into
cmpsb
adc
bound
sbb
mov
push
insl
adc
jae
ret
dec
jl
xchg
add
lcall
sbbl
mov
daa
push
dec
push
push
testb
cmpsl
jne
sahf
adc
adc
ret
dec
js
add
mov
mov
lods
xor
mov
xor
movsb
daa
jmp
rcrl
pop
pop
mov
es
lahf
xchg
sahf
xchg
int
sub
mov
dec
sub
out
repz
cmp
xor
in
out
inc
shrb
push
lds
dec
das
or
push
push
push
jae
hlt
loop
in
lods
insl
insb
cmp
lret
insl
mov
subl
movsl
out
es
js
mov
mov
cli
loope
clc
push
in
scas
imul
vhsubpd
das
dec
sbb
or
mov
jb
movsl
fucomp
scas
and
xlat
cmpsl
or
fucomi
data16
xchg
ds
push
movsl
cmpsl
sarl
lahf
jmp
sbbb
ss
xchg
jns
insl
and
inc
test
lods
daa
mov
sub
xchg
mov
sub
filds
fwait
stos
adc
xchg
add
cwtl
sub
jne
cmp
xchg
fwait
and
adc
pop
and
jl
adc
ja
jecxz
cmp
faddl
xchg
sbb
shl
push
pop
cltd
dec
repnz
inc
sahf
xlat
cltd
inc
pop
push
in
mov
mov
bound
test
loopne
movsb
test
cmpl
cmp
nop
es
jge
sahf
popl
or
mov
xchg
repz
sub
in
jnp
xchg
aaa
std
adc
jbe
daa
jecxz
test
pop
and
shll
push
es
or
xchg
xor
push
sahf
in
inc
fisttpl
mov
inc
pop
notb
cltd
movl
shlb
xchg
iret
mov
js
scas
lahf
inc
push
iret
lret
es
pop
cmp
push
imul
mov
out
sub
fsubp
out
mov
mov
push
push
cld
ret
js
or
add
ds
dec
shrb
push
cmp
mov
xor
test
adc
scas
test
xor
adc
inc
mov
pop
and
cmp
adc
inc
cmp
push
push
dec
mov
dec
push
adc
sti
lock
xor
and
shlb
sub
add
xor
mov
push
cwtl
cmp
sub
out
pop
dec
sub
sahf
icebp
and
lock
jmp
jae
xchg
in
xchg
sub
pop
test
ljmp
movsl
out
sub
std
sbb
testl
outsl
mov
fstpl
inc
dec
scas
fwait
sbb
hlt
loop
lods
popf
push
xchg
push
pop
jne
mov
pop
popf
incb
outsl
fiaddl
adcl
imul
or
test
call
adc
push
ss
inc
mov
cmp
dec
movsl
pop
in
or
andl
xchg
push
rorl
movsb
mov
test
add
mov
popf
or
add
or
dec
adc
push
hlt
in
cmp
dec
call
cmpsb
es
inc
test
cld
add
sbb
shrl
bswap
adc
cmp
jns
fistpll
xor
and
inc
mov
xchg
lahf
ret
xor
repz
bound
ss
inc
aad
std
push
dec
lods
gs
xor
lods
push
sub
js
movsb
sbb
mov
aad
add
shr
je
out
add
lea
mov
clc
rorb
mov
orl
xchg
jno
hlt
outsb
add
std
das
ret
or
dec
ja
aaa
xchg
fwait
and
movb
jg
or
in
push
push
mov
xchg
fidivrl
add
inc
and
xor
lcall
jge
fisttps
mov
mov
imul
sbb
or
or
stos
insb
pop
xlat
std
aaa
jo
fs
push
nop
jo
aam
add
or
addr16
ret
daa
inc
cmp
pop
les
jmp
mov
or
mov
xor
out
jno
push
shrb
mov
mov
xchg
push
jo
inc
and
pusha
aad
rol
loop
jnp
outsl
pop
jl
sti
lret
fdivl
mov
add
cli
mov
push
mov
shrb
aaa
jmp
sbb
jle
jge
hlt
xchg
push
js
pop
and
sarl
mov
fisubs
sub
push
xchg
stos
mov
lods
fwait
push
iret
loopew
adc
iret
mov
and
in
mov
xchg
mov
cld
fisttps
push
ds
xor
add
out
aaa
cltd
ds
fs
lods
imul
add
das
mov
add
jne
inc
test
cmp
dec
dec
clc
cwtl
and
rcrl
subl
mov
inc
mov
flds
dec
in
xchg
pop
shll
mov
jne
addr16
xor
cmp
xchg
sub
mov
insb
imul
pop
fcoml
sti
xchg
push
mov
flds
outsl
int3
xchg
test
mov
or
pminub
sub
test
push
stc
xor
cmpsl
cli
xor
pop
or
and
and
cmp
pop
push
pop
pushf
mov
out
adc
leave
mov
iret
into
push
cld
adc
sarb
xor
sub
adc
dec
xlat
mov
pop
mov
and
mov
movsl
jae
xor
jns
subb
sti
in
pop
push
fmull
insb
inc
xchg
inc
ljmp
es
lcall
sbb
out
xchg
cli
or
sahf
adc
pop
push
adc
jbe
divl
insb
addb
jb
pop
inc
sahf
pushl
xlat
or
loop
and
stos
out
push
cld
push
mov
mov
inc
repnz
sti
fwait
mov
data16
shrb
push
push
fistps
jo
lcall
adc
pushf
push
sub
mov
stos
or
mov
pop
and
xchg
xchg
xchg
popa
pop
ret
jne
ret
push
xor
or
popa
loop
xor
lret
and
push
das
movsl
arpl
add
stc
pop
pop
and
sub
leave
lret
dec
jae
jb
and
mov
out
daa
out
lcall
rorb
add
jno
jno
cmp
insb
xchg
stos
xchg
mov
out
in
mov
popf
loope
dec
add
cmp
xchg
test
out
icebp
xchg
rcl
call
shrb
adc
mov
sbb
sub
leave
mov
xchg
pop
xor
sbb
jno
iret
push
lods
or
lahf
push
inc
in
jo
sub
mov
mov
push
sub
lock
cmp
outsb
add
mov
jno
fdivrs
arpl
nop
fimull
xchg
pop
xchg
and
cmpsb
ss
cwtl
xlat
orb
cld
imul
dec
mov
or
popa
aas
out
push
call
ret
mov
test
cmp
mov
test
shrb
lods
mov
in
or
push
daa
jge
sub
xchg
sub
andb
sbb
mov
pop
mov
cmp
mov
enter
fdivs
jle
cmpsb
out
arpl
fdivrl
and
loop
xor
sahf
pop
test
lock
xlat
fldl
dec
repz
mov
hlt
pushf
iret
inc
sub
in
pop
pushf
xlat
loopne
imul
xlat
xor
add
mov
and
test
push
mov
adc
push
sbb
xor
into
enter
cs
mov
loop
inc
rol
jb
lret
xchg
je
stos
xor
and
xchg
xchg
pop
ss
xchg
stos
faddl
fbld
inc
jae
mov
enter
push
xchg
ficompl
sbb
cmp
mov
repz
push
js
in
or
shrl
nop
repnz
stos
mov
addr16
das
and
mov
lahf
inc
or
push
repnz
lods
ljmp
cmpsl
jl
push
je
sbbl
pusha
test
mov
sub
daa
mov
inc
scas
movsb
and
push
insb
out
cwtl
out
lret
and
rclb
sub
or
dec
orl
mull
lds
and
addl
add
mov
xchg
repnz
pop
test
ret
in
mov
cmp
test
mov
adc
mov
leave
imul
xchg
aad
test
mov
outsl
cmp
mov
popf
sti
xchg
das
sub
dec
jp
outsl
mov
les
pop
push
or
cmc
mul
in
inc
inc
or
xchg
fsubrs
leave
scas
xor
lds
sbb
jns
xchg
dec
pop
and
lock
or
and
cmp
jge
cmc
and
rclb
mov
sarb
jl
fldl
xchg
dec
scas
ret
lret
add
lcall
fldt
lret
dec
push
mov
cmp
enter
ficoms
es
insl
in
xadd
leave
adc
js
add
dec
and
test
mov
xor
loope
or
xor
popf
mov
sub
pushf
test
inc
into
in
stos
add
or
push
testl
movsl
lods
test
inc
xchg
cmp
push
rcll
js
repz
movsb
adc
jp
cli
out
leave
add
test
insl
int3
lods
fcmovnb
movsl
ret
out
test
push
sub
jno
fstp
dec
xchg
test
mov
aam
test
icebp
jmp
pusha
lcall
xor
push
sub
adc
ficompl
jo
lods
adc
in
inc
dec
fs
sub
inc
fwait
in
xor
xchg
js
fidivrs
addr16
jl
inc
adc
rcll
fmul
lret
add
pushf
orb
add
push
ficompl
and
and
lock
push
xchg
lods
push
mov
push
jecxz
xor
xlat
add
scas
rolw
in
push
aas
and
out
mov
cs
ja
inc
ret
pusha
xlat
mov
mov
ss
jbe
pop
push
xchg
ds
into
push
xchg
xor
das
push
incl
add
shll
jb
inc
fisttpl
xor
out
lods
fnstenv
lea
adc
inc
inc
push
aaa
pop
inc
fsub
jae
or
insl
je
js
xlat
mov
inc
in
int
sub
sub
sub
shl
je
and
addr16
insb
std
jge
pop
dec
cs
mov
ja
sub
imul
sti
lock
pusha
mov
rorb
xor
movsb
mov
inc
mov
push
setns
sbb
sub
add
inc
outsl
in
mov
dec
cmp
cmpsl
mov
pop
adc
stos
mov
lea
mov
lods
fsubs
and
ret
or
lret
sti
dec
jnp
addl
and
push
inc
outsb
and
pop
hlt
ja
loope
cwtl
inc
mov
add
jns
repz
shl
mov
sbb
mov
in
das
xchg
push
inc
push
mov
fisubl
xchg
dec
push
loopne
jmp
xor
rcrl
cmp
cltd
push
xor
xchg
dec
sahf
push
mov
xchg
or
lret
pop
and
xchg
push
sbb
rol
xchg
cwtl
adc
imull
push
divl
dec
loope
and
ret
and
or
jns
jecxz
rolb
lcall
adc
je
cli
xchg
dec
push
insb
shl
jns
jg
es
push
inc
fs
or
cli
test
rcrb
add
push
in
adc
pop
flds
and
mov
int
push
rcrl
or
jge
hlt
mov
push
cmp
lds
jg
test
cmp
nop
adc
push
arpl
repnz
adc
inc
push
popf
sbb
ds
mov
in
jge
pop
das
jb
sub
out
jmp
mov
cltd
loopne
vpgatherqd
addl
add
mov
jb
pop
aaa
enter
sub
mov
jmp
stos
mov
pop
cltd
jno
mov
xchg
xor
adc
fldl
dec
fisttps
in
jg
xchg
lret
cmp
cmp
lcall
lcall
adc
adc
imul
sbb
and
cmp
addb
mov
pop
adcl
pop
hlt
jae
popf
icebp
scas
js
dec
loope
and
ds
lret
sbb
jnp
mov
pop
fcomps
inc
sbb
pop
ficoml
push
mov
push
mov
lock
aad
push
cwtl
stc
fmul
adc
sbb
xchg
sbb
stos
aaa
or
inc
roll
cmp
aad
pop
pushl
xchg
cmp
scas
inc
cmpsl
dec
nop
enter
call
jge
inc
adc
js
push
imul
xchg
xor
xor
jno
mov
jp
xchg
movsb
fildll
rorb
cmp
cmpb
ds
push
cwtl
insl
hlt
outsl
shrb
inc
dec
aas
jl
shll
push
push
mov
cmp
sbb
mov
sbb
mov
ret
leave
shrb
mov
push
push
jno
xor
cld
pusha
hlt
insl
int
jne
mov
jns
jle
push
jnp
dec
adc
dec
iret
or
out
mov
xchg
andb
fs
sub
outsb
pop
sbb
imul
push
js
into
mov
das
mov
adc
cmpl
and
aaa
sti
sahf
xor
lods
and
or
push
fwait
pop
xchg
push
mov
mov
jp
xor
testb
mov
inc
push
lahf
or
xor
mov
fwait
mov
sbb
test
add
insl
xchg
addb
aas
mov
push
cmp
pop
xorb
aad
movsl
dec
mov
xlat
scas
or
sbb
ficomps
jl
xorl
pop
fsts
addl
jno
jp
jnp
sub
gs
movsl
mov
es
xchg
mov
push
cmc
adc
sbb
jns
mov
cmpsb
repz
idiv
inc
lret
jne
sbb
pop
fsubl
jns
xor
cmpsb
dec
sbb
adc
xor
fs
xchg
movl
stc
loopne
jecxz
lds
rcll
sbb
sbb
rclb
and
xlat
push
sbb
fldenv
sbb
movsb
insl
mov
out
jno
sub
inc
pusha
ret
aad
mov
js
pushf
mov
inc
dec
jbe
out
sti
sbb
sarl
mov
into
imul
sub
cmp
scas
loopne
out
push
out
rorl
js
dec
sahf
sarl
or
iret
mov
push
bound
arpl
and
out
out
pop
aaa
jl
push
xchg
popa
out
arpl
in
adc
adc
shrb
out
sti
xor
jbe
inc
cmp
repz
push
imul
jno
jns
push
divl
lds
mov
mov
mov
aad
sub
xchg
push
shl
add
jle
mov
sub
cmpsb
push
sub
pusha
mov
shlb
add
cmp
jg
addr16
or
sub
sub
les
mov
adc
rcrb
dec
repnz
pop
cs
dec
pop
pop
sti
in
jecxz
mov
jge
test
repz
fdivs
mov
lock
or
mov
xchg
lahf
sub
pop
decb
in
flds
mov
jl
aam
xor
adc
and
pop
push
adc
aas
inc
ljmp
xor
adc
cmp
pop
pop
cmp
in
out
test
inc
jb
aad
cmc
negb
and
mov
das
mull
add
push
sbb
push
lcall
lds
das
insl
std
sbb
ss
push
mov
cmpsl
jne
adc
mov
xor
cli
jb
or
repz
test
mov
ss
loopne
pop
mov
adc
inc
fidivs
repnz
iret
cmp
adc
outsb
repz
fs
dec
imul
sub
push
xchg
mov
mov
negb
jae
repz
or
insl
xchg
in
push
add
movl
or
lods
pop
test
pop
in
xchg
in
dec
call
xchg
divb
lret
mov
cmc
in
pop
mov
cmp
push
je
stos
push
jne
scas
mov
and
mov
dec
ret
out
dec
mov
pop
js
sbb
dec
dec
int3
pop
cmp
sbb
xor
cmpsl
sub
pop
aad
mov
mov
sbb
lret
psubq
xor
sub
out
mov
notl
adc
cwtl
cltd
xor
cmpl
lods
cmp
std
cmp
ret
gs
std
pop
notb
push
xlat
xor
mov
adcl
push
aad
pop
adc
pop
lods
jl
add
mov
and
out
add
jnp
sahf
pop
mov
jnp
arpl
mov
mov
jno
in
jmp
lock
push
fldl
bound
stc
rorb
pop
aaa
stos
jne
jmp
lods
dec
pop
iret
nop
pop
jl
cmpsl
push
out
or
push
out
ss
movsl
ss
les
jg
mov
sub
out
dec
lods
sbb
sub
cmpsb
in
inc
sbb
mov
push
or
pop
push
mov
jns
add
push
jge
fldenv
loopne
add
jmp
inc
std
out
dec
out
repz
je
dec
or
push
inc
dec
std
push
shlb
enter
pop
mov
dec
lea
mov
dec
imul
or
cld
outsb
loope
ljmp
popf
call
dec
pop
sbb
jmp
push
stos
inc
xor
sbb
inc
inc
jns
dec
std
mov
call
push
sti
or
add
pop
mov
and
outsl
add
sbb
fmull
clc
aam
fldlg2
or
mov
xchg
insl
or
lret
enter
stos
xchg
call
shlb
and
jmp
pop
dec
pop
xor
jp
xor
call
dec
ret
sub
mov
rcrb
and
aaa
stc
xchg
add
lods
and
pushf
into
push
dec
sub
sarb
repz
sbb
pop
push
imul
inc
sub
xor
pusha
fsubrp
adc
mov
inc
adc
loopne
popa
imul
fwait
add
mov
xchg
mov
test
js
pop
jnp
cwtl
sahf
repnz
mov
loop
mov
sub
pop
aad
jo
jne
or
in
in
sbb
and
mov
arpl
scas
push
sbb
out
sub
jo
sub
dec
cmp
dec
mov
jge
or
xchg
pushf
and
cwtl
jp
or
popa
das
ret
bound
imul
aam
addr16
add
out
int3
jmp
out
iret
test
pop
mov
add
inc
leave
mov
in
sti
mov
lods
test
data16
dec
jnp
mov
or
pop
mov
mov
imul
xchg
mov
inc
push
pop
aam
inc
adc
cmp
test
sub
out
cmp
inc
sbb
or
cs
mul
push
insb
xchg
sub
xchg
sub
mov
add
nop
rcrb
jle
pop
jo
add
dec
repz
adc
mov
aam
dec
shrb
or
aas
add
aam
in
cmp
lock
mov
jge
cwtl
sub
pop
dec
mov
aam
pop
je
call
arpl
lahf
mov
push
push
inc
int3
insb
sbb
cmpl
data16
sbb
inc
mov
add
loopne
or
xchg
xchg
xchg
or
cmpsb
js
mov
mov
scas
test
jbe
push
out
or
adc
movsl
outsl
inc
insl
imul
minps
sub
xor
jmp
push
fneni(8087
dec
inc
aas
jnp
inc
jo
stos
cmp
sbbl
jecxz
mov
ljmp
sub
test
add
pop
pop
rcrl
dec
dec
andb
sti
cs
pop
cmpsb
or
fstpt
shrl
pop
fs
mov
ret
cmp
add
sar
mov
jns
dec
mov
push
cmp
cmp
mov
test
rcrl
shlb
out
in
mov
ds
insl
cmpsb
sub
mov
mov
lea
jecxz
pop
movb
adc
scas
sbb
xchg
add
shrl
je
imul
pop
repnz
xorb
popa
ror
not
cwtl
jno
push
bound
sbb
in
mov
popf
mov
mov
push
imul
mov
mov
sub
cmp
push
in
sbb
ffreep
ret
mov
jns
inc
jge
ret
lahf
dec
cld
xchg
and
in
add
pop
dec
sub
xor
pop
xchg
stos
and
scas
jmp
push
nop
outsb
lods
ret
daa
out
jae
daa
push
sub
mov
test
in
lea
lods
icebp
not
insb
mov
jnp
subb
xlat
xor
pop
or
roll
fbld
pop
xchg
xchg
pop
sbb
popf
outsl
cltd
mov
lods
cmp
jp
and
sbb
or
push
pop
icebp
mov
pop
push
cmpsl
mov
sarl
loope
sub
imul
inc
leave
jmp
sub
and
mov
push
aad
sti
cmp
lret
inc
pusha
popl
lods
int
int3
pop
cmp
outsb
adc
pop
aad
les
mov
mov
insb
pop
mov
addr16
adc
scas
inc
sub
or
cltd
adcb
mov
or
and
mov
xchg
sbbb
popf
movsb
xchg
mov
jl
std
popl
lahf
or
lret
mov
push
pop
inc
pop
mov
hlt
pop
negl
jnp
gs
out
sbb
push
ret
imul
sahf
fcmovb
pop
test
push
inc
xor
in
xor
lock
dec
fbld
dec
or
ret
sub
roll
cmpsb
or
dec
in
shrl
cli
inc
icebp
add
in
fdivrl
inc
xchg
in
daa
jae
add
cmpsb
jnp
mov
inc
shrb
jns
popf
inc
fiadds
or
xor
in
and
and
lods
ficomps
adcl
cmp
scas
in
mov
xchg
rcl
lahf
xor
xchg
ljmp
fcmovnb
inc
push
lods
cs
xchg
ljmp
inc
jo
xlat
or
mov
hlt
and
mov
and
je
lret
mov
jno
adc
mov
xor
out
mov
xchg
cmpsl
mov
sub
mov
repnz
movsl
rolb
adc
add
mov
or
out
xchg
lret
mov
inc
cld
sarb
xchg
or
fwait
notb
and
push
js
xchg
insl
call
pop
fs
mov
jns
mov
sub
lods
xchg
fcmovnu
mov
gs
push
xchg
rcll
pop
jne
test
std
push
sub
push
push
loope
repz
or
adc
add
jle
loopne
xchg
scas
sub
xchg
sub
mov
data16
or
mov
test
addb
fsubrp
pop
push
xchg
dec
jmp
mov
mov
jno
or
pop
and
movl
sbb
test
xchg
jbe
xor
or
pop
insb
jmp
or
js
arpl
scas
insb
popf
outsb
inc
add
scas
mov
sub
mov
inc
dec
dec
fiaddl
dec
popl
arpl
out
push
aaa
cmp
push
push
es
jge
imul
xchg
inc
out
out
je
sbb
xchg
movsb
cmp
pop
add
pop
cmc
push
xchg
pop
xlat
repz
sub
xchg
push
cli
gs
adc
push
arpl
and
mov
pushf
ret
push
jnp
jg
adc
insl
pusha
out
xor
cltd
xchg
and
sbb
inc
in
sbb
xchg
add
and
out
or
ljmp
out
mov
jmp
rolb
xor
addr16
mov
xchg
nop
in
fs
out
ljmp
xchg
cltd
push
jle
pop
jp
pop
jecxz
movsb
sub
dec
pop
mov
out
fcoms
add
into
les
cmp
push
and
or
jp
ss
testb
push
fldt
jnp
pusha
popa
shlb
pushf
mov
adc
out
ret
adc
xchg
adc
or
add
lret
cwtl
inc
adc
arpl
ljmp
js
push
jno
clc
stos
xchg
jbe
aas
repz
sbb
stos
fs
xchg
leave
inc
popf
movsl
fcompl
leave
lock
cmp
test
dec
rdmsr
jecxz
rol
mov
xchg
mov
std
test
or
shll
push
mov
mov
cmp
in
rcl
dec
xor
mov
and
sub
in
mov
mov
repz
es
cmp
push
jp
std
xor
mov
test
in
cmpsl
sub
mov
mov
jbe
lcall
mov
push
xor
lds
dec
xor
lcall
push
shl
and
pusha
cmp
out
cltd
sti
adc
rcll
dec
sub
jle
jp
pop
and
in
dec
mov
leave
lods
pushf
lds
mov
jo
pop
mov
enter
mov
push
push
cmp
and
sub
dec
sbb
jne
cli
pusha
mov
and
imul
pop
aaa
sbb
add
dec
addr16
sbb
or
sbb
mov
out
xlat
mov
dec
and
and
sbb
jb
push
lds
sbb
fstpl
bound
andb
push
add
cmc
jp
dec
sbbl
idivb
jb
xchg
loope
divl
xlat
icebp
stc
adc
outsl
add
mov
push
shl
push
pop
leave
shrb
inc
loopne
xchg
scas
jecxz,pn
cs
call
leave
adc
test
lods
pop
or
mov
xchg
ficoms
xchg
scas
inc
fwait
popf
xlat
cmp
jbe
dec
pushf
addr16
cld
faddp
sbb
stos
cs
movsl
mov
lds
loope,pn
test
push
aas
inc
lret
lcall
pop
ljmp
das
jp
mov
pushf
ljmp
inc
dec
mov
sahf
inc
add
add
xchg
lcall
cmp
xchg
mov
aaa
fs
ljmp
lret
cmp
nop
nop
mov
out
lods
ss
insb
xor
cmc
les
fistpl
movsb
dec
das
mov
dec
or
ficoms
mov
leave
mov
test
daa
pusha
or
jo
rcrb
cmc
xchg
lods
sahf
loopne
cltd
xchg
jecxz
adc
add
cmc
mov
fldl
aaa
insl
mov
clc
mov
mov
push
clc
in
iret
mov
push
out
xor
out
mov
les
cmp
and
and
test
scas
daa
aas
jmp
popf
repnz
addr16
push
into
mov
cmp
movsb
fists
mov
in
xchg
ja
scas
sub
out
xchg
idiv
data16
pushf
adc
or
cli
cmp
jg
into
rol
loop
pushf
insl
outsb
cwtl
in
clc
cwtl
jo
repnz
jp
clc
sbb
dec
push
xor
icebp
fcompl
jb
aam
mov
mov
int
sbb
mov
imul
dec
or
pop
or
mov
fisubrs
lcall
cmpl
jno
pop
test
add
xchg
jbe
mov
ss
adc
push
out
dec
sub
stos
cmpsl
cmc
in
daa
adc
jg
outsl
jbe
adc
cmp
scas
add
fdiv
movsl
sbb
xlat
call
and
fs
add
pop
lahf
cmpl
scas
fdivrl
stos
loop
cli
popl
mov
and
or
xor
push
jecxz
mov
inc
aad
mov
testb
fsubrl
imul
cmp
mov
dec
int3
push
sti
jno
push
fildl
xchg
aaa
sub
aaa
or
push
in
call
dec
mov
shlb
aaa
sbb
cmpsb
push
add
adc
ljmp
cmpsl
test
adc
mov
mov
sub
test
cld
xor
pop
adc
cmpsl
mov
or
leave
sbb
scas
push
sahf
jb
add
push
add
cmp
pop
icebp
test
repnz
pop
push
xchg
jno
aam
sbb
arpl
jne
ret
or
mov
sti
mov
jmp
push
test
adc
or
cmpsl
adc
rolb
xchg
fbld
mov
loopne
sahf
jmp
mov
push
stc
mov
cmp
xor
out
out
xchg
cmp
jnp
mov
ret
mov
sub
or
test
jae
xchg
ljmp
adc
ja
in
cmp
test
setno
dec
jnp
inc
stc
pop
lods
adc
pop
inc
pop
dec
push
mov
mov
inc
push
insl
xlat
jge
addr16
mov
scas
and
sbb
dec
mov
clts
pop
mov
stos
das
pop
sti
dec
push
mov
mov
sub
nop
lock
mov
sub
addb
cmpsb
arpl
sub
xor
imul
fdivrl
fimuls
pop
adc
or
test
gs
in
nop
inc
loop
inc
inc
cmp
push
iret
lods
iret
sub
popa
and
sbb
sbb
jl
lret
dec
negl
mov
mov
fistpll
xchg
mov
xchg
inc
mov
stc
sbb
cmp
int3
adcl
sub
mov
sub
mov
adc
fmuls
or
aaa
ss
sub
mov
in
mov
cmp
jmp
dec
out
shrl
mov
mov
xor
and
or
or
pushf
scas
in
xchg
out
xor
xchg
add
or
call
jle
cs
jno
int
fmull
sbb
sbb
xor
loope
fistpl
adc
push
cmp
inc
mov
dec
mov
in
nop
add
mov
neg
cmp
xchg
sub
jge
ret
outsl
xchg
insl
sbb
outsb
pop
mov
push
imul
cmp
xchg
pop
pop
xchg
mov
aam
mov
sbb
je
cmp
and
loopne
xchg
out
stos
mov
mov
add
mov
in
loop
ret
ljmp
mov
lahf
mov
mov
ja
mov
gs
mov
imul
fmuls
das
or
clc
lahf
dec
sbb
stos
je
mov
sbb
mov
cmpsb
push
movsl
xor
fistps
test
loopne
xor
cmp
cmp
dec
and
iret
sub
inc
out
jno
cmpsb
testb
stos
pop
adc
mov
inc
jle
inc
in
jno
rcrb
out
push
adc
cmpsb
shlb
push
data16
mov
inc
mov
clc
and
mov
xchg
mov
add
cltd
lock
fisttpl
xor
xor
popa
in
out
dec
cmp
shll
ja
pop
cmp
sbb
xor
push
cmp
xchg
mov
fdivrs
push
dec
mov
ss
or
sub
mov
das
xor
dec
iret
jl
mov
cmp
cltd
ja
add
sbb
lea
and
xchg
out
filds
xchg
mov
add
mov
mov
dec
jg
mov
in
pop
cmpxchg
subl
pop
out
mov
dec
xchg
adc
mov
adc
or
jl
sbb
lds
dec
mov
stc
jge
adc
lods
cwtl
lods
cli
mov
mov
fstl
jb
and
test
test
push
jae
xchg
and
cmp
int3
mov
frstor
fadd
insl
popf
jo
jmp
scas
jecxz
sti
cmp
test
lret
aad
popa
jg
and
je
and
fldt
test
xorb
stos
or
push
int3
jmp
cltd
maskmovq
shlb
insl
mov
mov
push
scas
cwtl
push
popa
and
sub
fs
xchg
imul
lcall
arpl
outsb
gs
fsubl
sbb
frstor
jns
jecxz
mov
dec
jl
mov
mov
icebp
dec
jbe
andb
mov
sbb
pop
pop
into
cs
test
cmp
xchg
sbb
mov
jg
sub
jg
es
and
mov
jmp
enter
ja
imul
subl
stos
adc
lahf
or
add
add
loop
hlt
pop
sub
dec
jbe
ljmp
std
jo
fbstp
rcr
ss
mov
ljmp
pop
pop
rcll
je
into
jnp
jbe
push
add
loopne
push
lahf
mov
lods
mov
icebp
pop
movsl
bound
pop
jmp
lret
and
xor
pusha
lret
jecxz
dec
daa
cmp
adc
mov
cld
stc
bound
in
dec
pop
gs
sub
sbb
jg
shrl
mov
mov
cld
cmp
dec
xor
inc
and
aaa
dec
js
repnz
clc
cmp
cmpsl
repz
hlt
repz
frstor
mov
ror
lret
ss
jmp
leave
std
xorb
mov
adc
push
fisubrl
lret
out
add
pop
popl
mov
int
xchg
loop
jns
lcall
lret
lret
addb
xchg
out
insl
es
fwait
mov
pop
icebp
addr16
or
in
daa
cltd
pop
adc
jno
addr16
cwtl
imul
xchg
in
mov
add
pop
mov
jmp
rcrl
lods
sbb
xchg
jae
jecxz
xchg
dec
sbb
fisttpl
mov
cmp
icebp
int
adc
fsubr
push
in
xor
or
xchg
test
dec
outsl
lea
or
call
pop
lea
test
add
setb
xchg
xor
mov
and
enter
push
xor
xor
cmc
mov
repz
in
jbe
inc
call
mov
fsubp
xchg
push
test
test
or
sub
mov
movsb
iret
in
stos
add
lods
pop
and
iret
mov
sub
lcall
out
jne
std
or
or
movsl
scas
xor
push
clc
mov
mov
mov
push
js
std
loopne
inc
aas
jnp
mov
and
dec
mov
cmp
jno
ret
and
dec
xor
call
and
fimull
fucomip
mov
dec
je
sub
loop
ljmp
js
ret
jge
aam
adc
xor
fstps
cmp
outsb
test
test
pop
dec
push
mov
pop
dec
push
int3
pop
or
insb
sub
jb
push
or
xor
lahf
xchg
ds
mov
pop
cmc
out
ret
shl
daa
mov
adc
inc
pop
sbb
push
leave
pop
push
movsl
adc
mov
sbb
inc
ficoml
cmc
pop
es
bound
push
pop
mov
adc
fs
pop
adc
andb
hlt
sbb
or
jle
in
rcrl
movsl
leave
or
or
loopne
xlat
dec
sbb
mov
add
fucomip
in
cmpsl
cmp
popf
inc
lods
and
hlt
mov
pop
sub
and
outsl
and
in
sub
lds
sub
lea
xor
int
mul
dec
xchg
jb
inc
aas
outsl
fbstp
movsb
and
stos
jl
push
pop
subl
dec
mov
sbb
xchg
fs
pmaxsw
pop
inc
push
push
dec
aaa
cs
in
cwtl
dec
mov
mov
pop
jb,pn
adc
or
sub
cmp
jnp
hlt
repnz
addr16
fldl
mov
xor
shll
mov
loope
jb
jge
sarb
xorb
push
or
outsl
pop
movsl
inc
or
loopne
cmp
jge
dec
leave
cmp
pop
push
pushf
jmp
in
lahf
mov
mov
stos
pushf
inc
inc
nop
xor
sub
xchg
cmc
dec
mov
xlat
int3
loopne
pop
fstp
xor
std
outsl
dec
jg
inc
jg
sbb
xchg
pop
loop
loop
mov
or
je
cmp
push
popf
or
jmp
push
adc
loop
enter
loope
test
sbb
mov
pop
fwait
cmpsb
and
scas
fstpt
cmpl
sar
into
jnp
test
in
dec
jg
cli
adc
xchg
fidivrs
and
les
jg
dec
inc
cld
jmp
inc
jle
std
addr16
lds
pop
xor
mov
arpl
test
repnz
xchg
out
mov
test
fucomi
add
mov
lea
cmp
test
xchg
out
mov
cmp
cld
jmp
mov
adc
push
jno
in
cmpsl
jbe
xor
dec
ds
dec
mov
idivb
ret
stos
sti
sti
ja
mov
push
cmp
enter
rcl
pop
dec
lods
mov
stos
fcoml
mov
inc
dec
cmp
pop
cs
adc
aaa
xchg
je
fstpt
aam
pusha
adc
dec
dec
nop
sbb
mov
xor
pop
mov
xchg
cmpsl
cmp
pushf
and
xchg
add
adcl
inc
das
outsl
or
lahf
sub
pop
sarl
or
adc
cmpsl
xor
call
ret
movsl
dec
xchg
ret
in
js
iret
dec
inc
daa
js
mov
int
sbb
lcall
add
loopne
pop
mov
pop
xor
pop
fcoml
js
mov
xor
jp
jp
cwtl
mov
fstp
pop
jecxz
cmpsl
int3
mov
es
dec
pushf
jae
repz
sub
bnd
ficompl
sub
mov
mov
test
imul
inc
fs
filds
add
sub
bound
push
inc
sbb
and
dec
jecxz
lahf
push
movsl
gs
iret
adc
mov
mov
cmp
lcall
ret
cmc
arpl
and
pop
add
cmp
test
cmpsl
or
adc
cld
pop
dec
shrl
es
pop
popa
jle
in
scas
mov
mov
mov
imul
xor
stos
jp
outsl
dec
push
in
test
dec
adc
xor
sti
mov
cmp
popf
mov
std
xlat
cltd
in
pop
out
cmc
ret
push
lret
iret
test
mov
aaa
xchg
mov
ja
sub
dec
push
faddl
pop
popl
rcrl
scas
adcl
dec
sahf
adc
stos
dec
or
scas
fwait
sbb
stc
repz
fs
fcos
pop
shlb
int
jno
cmp
push
push
ja
repz
mov
add
mov
inc
mov
xorb
xchg
movsl
lcall
mov
mov
push
cmp
jb
dec
sarl
fs
cmp
mov
sub
mov
pushf
fcoms
imul
insl
dec
shlb
and
lahf
jg
add
mov
xchg
jp
adc
mov
mov
pop
and
mov
jge
pop
lret
add
scas
add
scas
dec
hlt
pop
jnp
mov
add
and
or
mov
push
test
mov
sbb
repnz
xchg
sbb
pusha
mov
sub
mov
cmp
adc
shl
pop
data16
sub
or
sbb
ja
push
xchg
stos
cli
mov
out
jg
clc
xchg
pop
xor
xchg
stos
mov
data16
sub
cmp
mov
in
and
or
lock
adc
lods
call
bound
clc
shrl
push
imul
icebp
pop
inc
sbb
cmp
push
push
inc
mov
popf
sti
loopne
mov
scas
and
insb
addr16
inc
cmp
icebp
mov
and
inc
leave
cmpsl
in
std
fst
stos
call
xchg
sbb
aam
xlat
loope
jns
mov
ss
push
iret
scas
push
push
pop
mov
or
nop
insb
push
clc
es
fldl
cmp
add
lret
dec
jns
movsl
mov
add
mov
inc
adc
push
xlat
sub
xchg
aam
sub
cmp
cmp
je
ja
outsb
cmp
pop
pop
int3
inc
xchg
jb,pn
mov
lahf
ja
les
ret
lock
or
je
xchg
xor
push
pop
pop
daa
add
int
push
cmpsb
testl
scas
cmpsb
test
cmpl
leave
hlt
gs
pop
cmpsb
mov
shrb
cmp
enter
jnp
dec
sub
mov
adc
mull
lea
arpl
clc
adc
inc
ljmp
adc
in
pop
movsl
push
jne
or
and
xchg
popf
xchg
bound
inc
cmp
popa
les
jmp
test
loope
push
shrb
jmp
scas
mov
sbb
cs
lea
xchg
xor
xorb
mov
push
xchg
push
ret
rcr
mov
in
insl
data16
sbb
xchg
adc
cld
pop
pop
divl
jns
jnp
ror
sbb
xchg
enter
out
dec
add
push
cmp
outsl
cmc
inc
loop
cmp
mov
fidivrl
ja
jg
or
dec
xor
xor
insl
dec
push
and
jmp
xlat
add
fidivs
xor
add
add
adc
lcall
fimull
dec
mov
push
lea
push
sbb
push
xchg
add
push
repnz
or
rclb
xchg
adc
sti
or
cmp
aas
sbb
test
addb
pop
inc
mov
xchg
lret
mov
stos
xlat
fdivl
mov
push
aam
jns
mov
mov
outsl
lret
mov
imul
scas
icebp
hlt
xchg
push
mov
mov
scas
mov
ret
insb
push
sbb
cs
rcrb
pop
push
jg
mov
add
fs
or
aad
out
jnp
mov
mov
mov
cmp
or
and
dec
push
cmc
fisttpl
adc
aaa
cwtl
hlt
adc
scas
adc
es
adc
adc
shlb
pushf
testl
jle
xchg
cld
repz
ja
ret
out
enter
sti
xchg
lea
or
cmpsb
xchg
es
fs
je
daa
cld
ficomps
out
cmp
xchg
adc
aas
rcrl
enter
aaa
pop
lock
mov
stos
xchg
pop
fwait
xchg
dec
cmp
jo
faddp
mov
push
lds
lods
and
push
xor
call
icebp
in
xchg
push
xchg
mov
adc
jb
rclb
jl
aad
insl
stos
or
aas
loop
out
out
lds
xor
adc
and
mov
and
mov
iret
daa
ret
dec
orl
ds
push
cs
fisubrl
cs
popf
mov
fisubrs
cli
mov
ret
andb
cmp
loopne
xchg
hlt
jp
jmp
daa
sub
jne
mov
cmc
mov
mov
push
pushf
lcall
pop
dec
adc
jbe
popf
pop
loope
insb
bound
sub
test
sub
into
imul
and
dec
xchg
mov
ss
push
xor
mov
and
lcall
test
jne
stc
movsl
fsts
and
outsb
cmp
jno
enter
pop
fcomi
and
inc
int3
xchg
adc
fs
dec
mov
sbb
stos
mov
jb
cmc
fwait
add
sbb
sbb
pop
jmp
cmp
hlt
test
lret
aaa
jp
push
hlt
add
jmp
pop
and
push
fbld
pop
cmp
push
jo
leave
dec
lcall
pushf
icebp
ss
mov
stos
mov
and
jmp
lods
mov
imul
js
movsb
aas
decb
or
add
in
dec
jns
mov
inc
pusha
lods
cltd
push
jns
nop
sahf
mov
dec
shl
dec
popa
in
and
bnd
and
dec
push
jp
sahf
adc
cltd
jo
mulb
sbb
and
jns
shrb
and
fs
jnp
ror
sbb
cwtl
sbb
pop
out
fs
sbb
imul
xlat
jl
mov
push
clc
jmp
mov
or
das
repnz
icebp
add
push
dec
push
stos
loopne
xchg
push
adc
mov
es
and
jle
dec
sub
pop
mov
in
icebp
pop
imul
mov
clc
and
pop
mov
and
push
mov
inc
outsl
xor
sarl
lcall
es
pop
fs
and
sarl
bound
sub
fcomi
cltd
lods
xchg
std
lds
xchg
cmp
mov
add
loopne
fcmovne
outsb
and
scas
push
movsb
dec
inc
mov
and
xor
adc
outsb
fsub
mov
or
jnp
inc
mov
aam
cmp
repnz
cmp
ss
xor
cmpsl
adc
repnz
les
pop
leave
mov
orl
mov
jle
lcall
mov
jo
adc
aas
and
addl
out
andb
cmp
aad
fsubrs
add
push
rcrl
scas
push
jb
push
cmp
inc
cmp
stc
orb
mov
enter
xor
fsubrl
mov
xchg
dec
add
or
loop
mov
xchg
mov
sbbb
push
fsubrl
mov
lock
pop
add
xor
or
inc
cli
enter
fisttpl
mov
jle
pop
mov
cltd
out
leave
sub
movsl
pop
call
pop
enter
dec
jle
call
sub
frstor
fcmovbe
sahf
adc
rorl
and
fcomi
hlt
xlat
or
adcl
adc
stos
ror
add
lret
dec
inc
aas
clc
int3
push
out
aaa
insl
sbb
push
xchg
data16
mov
inc
addr16
or
adc
cmp
es
cltd
push
pop
cmp
adc
xor
stc
xlat
icebp
push
out
mov
stos
inc
lcall
cmpsb
enter
pop
sbb
mov
hlt
cli
cmp
dec
aas
mov
test
add
mov
lods
push
dec
cmp
gs
bound
out
and
inc
stc
cmpsl
cld
sub
lret
xor
dec
bound
es
adc
push
jns
aas
sub
dec
adc
insb
inc
xor
sarb
mov
mov
and
mov
mov
mov
mov
rcrl
jae
sti
fucomp
jmp
xchg
mov
push
push
inc
cltd
in
jb
orb
es
sti
push
adc
jp
cmpsl
pusha
push
mull
shlb
shl
scas
insb
add
into
subb
lods
and
popf
add
outsl
add
enter
neg
in
xchg
and
sub
or
cmpsb
or
rorl
sbb
adc
fs
or
xor
mov
das
pop
pop
out
xlat
inc
cmpsl
xchg
in
dec
mov
ret
jl
mov
push
call
lret
cmp
das
js
adc
in
inc
mov
mov
fsub
mov
xor
data16
xlat
jle
jne
js
jmp
pop
rcrl
stc
les
dec
pop
popf
std
lods
into
mov
pusha
ret
stos
fdivr
xchg
stc
in
clc
pop
mov
dec
fidivrl
int
pop
mov
fs
and
mov
clc
fists
aam
pop
in
jno
jns
icebp
ds
lret
cmp
sbb
aas
popf
push
ss
or
enter
ret
les
and
enter
fiadds
mov
xchg
mov
pop
or
pop
nop
xor
dec
push
shlb
mov
push
add
and
mov
mov
jnp
sub
push
in
mov
stos
xchg
mov
sarb
push
pop
pusha
xchg
mov
or
negb
inc
add
xchg
iret
scas
bound
pop
push
rol
and
test
pop
fdivrl
out
mov
dec
mov
push
js
aam
aad
cmp
repnz
push
sti
ljmp
aaa
add
xchg
jmp
adc
jbe
push
pop
pushf
mov
mov
mov
pop
adc
pop
iret
xor
icebp
mov
dec
sbb
sbb
xchg
out
stc
icebp
mov
in
or
mov
mov
lds
xlat
mov
sbb
imul
cmp
jb
mov
jmp
mov
inc
ret
sub
outsb
ret
stos
lcall
jg
push
xchg
rcrl
sahf
shl
fcoml
pusha
test
cmp
cmp
xor
dec
repnz
leave
mov
push
pop
insl
or
fstps
ret
pop
inc
mov
fs
cltd
stos
sub
and
pop
mov
inc
daa
pop
lds
in
cli
jnp
mov
mov
sub
sbb
hlt
mov
pop
jno
xchg
aas
frstpm(287
lds
sub
xor
scas
je
sbb
ss
or
cmp
stos
outsl
inc
stc
test
xchg
movsb
push
into
inc
sub
loope
pushf
call
shlb
cmpsb
pop
les
cmp
shrl
cmovbe
test
lock
fdivrp
pop
ss
movsb
cmp
je
jno
loop
bound
xchg
js
mov
inc
js
adc
or
push
add
jns
jo
push
xlat
jne
sahf
mov
and
add
jmp
lods
cmpsl
test
and
out
stc
ss
sahf
inc
pop
inc
lds
mov
jl
sbb
push
popa
loope
js
ja
pop
mov
cli
imul
push
add
insl
shll
out
das
dec
cmpsb
cmp
jge
ror
lock
out
movsl
cmp
or
add
xor
aam
pop
and
mov
fildl
inc
ljmp
adc
and
adc
sub
and
test
fs
test
mov
outsb
std
cmp
mov
outsb
mov
jecxz
xor
push
ja
popa
push
mov
pusha
mov
incb
cli
adc
bound
in
push
int
test
dec
jp
xlat
negb
dec
fdivl
pop
int
inc
cmp
cmpsb
mov
testb
dec
pop
dec
imul
lods
mov
inc
mov
mov
mov
cmp
adc
push
test
xor
dec
ficomps
add
imul
xchg
popf
shrl
or
ss
lock
ds
nop
jb
sub
fwait
jmp
out
pop
mov
inc
ss
inc
call
mov
push
push
popa
cltd
mov
fxam
dec
iret
das
pop
das
fs
inc
out
add
ja
in
pop
loop,pn
or
movsb
cwtl
stos
imul
clc
add
je
sub
scas
fwait
mov
into
jmp
inc
sub
cli
mov
sarb
dec
jo
std
sysexit
xor
insl
mov
imul
sahf
fnstsw
fcomps
push
pop
into
mov
or
in
ficomps
sbb
sbb
and
pop
adc
lahf
dec
bound
lret
pop
inc
ja
dec
mov
ja
jbe
mov
mov
adc
xchg
inc
out
cld
push
mov
rcrb
aas
pop
push
mov
andl
fidivrl
cmp
mov
dec
rolb
test
cmp
xor
inc
insl
push
mov
jno
pop
mov
jle
pop
jmp
xchg
pop
iret
sub
fst
sbb
mov
mov
push
test
inc
xchg
stos
stos
or
lods
sub
ret
movsl
adc
stos
inc
push
dec
cmp
fs
mov
cmp
cmpl
shrl
jb
pop
lahf
push
mov
push
push
shrb
jge
pop
sub
enter
testb
loopne
icebp
add
repnz
lcall
std
and
into
and
and
pop
in
mov
dec
aad
sbb
notl
push
rolb
stos
sti
imul
inc
add
pop
test
inc
pop
sbb
es
mov
mov
loope
ret
hlt
enter
fxch
das
dec
and
push
in
shlb
scas
push
jae
xchg
lds
imul
pop
test
and
nop
jno
arpl
cmp
cmp
xchg
mov
add
jecxz
jae
pop
jb
in
xchg
je
sbb
addr16
push
loopne
pop
push
out
cld
aam
addr16
roll
mov
inc
sahf
push
adc
fcomip
inc
bound
push
sti
loopne
sar
orb
push
bound
jno
loopne
inc
loop
pop
jg
cmovs
pop
je
cli
rol
insb
xchg
mov
jne
imul
rorb
sub
lcall
pop
add
sub
inc
sahf
sub
add
push
ljmp
adc
and
jl
and
ret
mov
iret
jno
stos
inc
fists
and
and
aad
lea
pop
in
mov
mov
lock
lret
ret
shll
imul
pop
mov
mov
hlt
bound
pop
daa
sub
mov
outsl
outsl
fnstsw
rcrl
inc
mov
inc
aas
fsubs
adc
pushf
cs
pop
sarl
add
push
and
ret
pushf
sbb
sbb
in
xlat
fdiv
or
int
cmc
addr16
sbb
add
add
rcll
adc
repz
dec
cmp
out
es
sbb
adc
xor
push
lods
lea
and
lds
cmp
push
pop
fdivrs
or
sahf
jl
fsts
and
sbb
sbb
andb
std
add
or
hlt
ja
push
xor
rcr
lock
out
lods
hlt
popf
movsb
xor
mov
mov
sbb
mov
lock
movl
scas
mov
cmpsb
jo
adc
xor
repnz
rcll
sub
mov
cltd
xlat
mov
mov
mov
jb
dec
sub
push
adc
sub
loopne
inc
mov
cmpsl
fs
add
jno
adc
xor
xor
enter
cmp
mov
pop
into
dec
call
add
jecxz
aas
nop
jg
or
jo
cmp
or
add
xchg
nop
xor
insl
jne
pop
mov
stos
dec
mov
shlb
and
lcall
mov
out
mov
mov
fdivs
jnp
xor
pushf
add
es
call
dec
pop
sahf
ret
mov
mov
mov
sub
cmp
cmp
mov
je
std
jbe
rorw
sub
mov
mov
push
js
push
and
mov
lods
enter
pusha
xchg
adcb
fadd
clc
or
ret
lds
icebp
stos
arpl
loop
aaa
rorb
lock
jl
add
sub
xchg
lea
and
js
push
pop
cmp
sbb
mov
test
sub
movsl
test
pop
fisubrl
aam
push
add
push
cmc
shll
loope
or
cmp
lods
sub
jb
sbb
sbb
sti
jle
or
mov
cld
into
mov
add
psubq
push
mov
mov
inc
shl
push
inc
in
imul
dec
or
ja
push
decb
mov
sub
mov
push
ret
pop
dec
fstpl
inc
aas
inc
insb
jno
pushf
lock
and
test
mov
cmp
pop
outsb
add
and
pushf
cmp
xlat
test
pop
push
in
nopl
js
add
cmp
or
shlb
and
dec
stos
sub
fs
std
iret
push
es
adc
clc
jmp
jmp
jge
adc
pop
pop
hlt
sbb
ret
repnz
jne
testb
adc
ds
cmp
es
adc
or
gs
cmpsl
int3
inc
lret
scas
repnz
iret
int
and
xchg
aam
xchg
loope
sub
add
pushf
push
mov
sub
lcall
push
cmp
into
dec
lock
stos
icebp
push
mov
sub
icebp
or
push
lret
outsl
aaa
xchg
adc
xorb
cmpsb
test
sti
shrl
cli
inc
push
dec
cmpb
sub
pop
fidivrs
ja,pt
imulb
leave
xor
enter
mov
sub
loopne
mov
mov
jg
mov
popf
cli
dec
inc
call
cmp
fistps
or
sbb
scas
repnz
inc
and
mov
or
cmpsb
ds
lods
push
cld
scas
cmp
into
aam
mov
flds
xor
mov
xor
adc
stc
into
rclb
sbb
nop
out
add
lods
mov
add
ljmp
pop
jns
dec
pushf
cmp
cmp
xrelease
jge
jnp
icebp
jl
data16
xchg
rorl
fdivl
and
jae
push
inc
sbb
movb
dec
dec
cmpsl
addr16
mov
xlat
pop
jne
push
add
loope
adc
or
sbb
mov
imul
loopne
fwait
mov
sbb
ja
outsb
fistpl
fisubrl
push
cwtl
dec
inc
add
inc
call
jecxz
add
xor
stos
shlb
push
enter
pop
imul
jb
pushf
xor
jmp
and
aad
xchg
dec
in
xchg
mov
movsl
stos
mov
xchg
mov
xor
call
jmp
jae
imul
scas
xor
sub
adc
lcall
out
xchg
je
mov
sub
vpsrlw
xorl
push
xor
gs
loopne
test
pushf
fbld
cld
jmp
or
and
loopne
mov
push
aaa
jl
sub
inc
push
mov
in
lock
lock
pop
add
jb
jle
sbb
pop
cmpb
and
js
jbe
outsb
adc
cmp
ficoms
and
adc
cmp
and
insl
jns
and
pop
inc
fbstp
mov
xor
sub
rolb
in
js
sbb
pop
stos
mov
dec
mov
and
mov
das
test
cmp
xchg
adc
movsb
out
fs
loopne
add
cwtl
dec
mov
fnsave
aas
cmpsb
sbb
in
stc
fmul
in
out
mov
adc
call
or
lods
mov
jmp
inc
notl
nop
dec
cmp
jo
mov
insb
shl
sbb
jns
es
add
dec
pop
lret
adcb
scas
or
adc
pop
loope
aam
cltd
sub
imul
jbe
lods
pop
mov
int3
iret
das
mov
jae
pop
bound
lds
mov
mov
xor
or
or
in
mov
lea
or
add
nop
nop
sbb
out
push
pop
dec
hlt
out
fs
fldl
or
mov
insb
movsb
jnp
cmc
lds
aam
fmull
test
sahf
ret
daa
cmp
iret
jg
dec
cwtl
out
scas
mov
and
push
pusha
imul
push
mov
out
lock
mov
mov
xor
mov
stos
adc
mov
sti
mov
sbb
xchg
andb
or
das
lret
stos
xor
sarb
test
cmpsb
xor
mov
xchg
pop
jp
out
inc
inc
rcr
ds
sti
frstor
out
xor
pop
into
fcomps
and
adc
sub
fs
sbbb
cmp
pop
sbb
adc
xchg
stos
xor
jo
mov
cs
add
sbbl
mov
mov
mov
stos
out
mov
stc
dec
jl
add
jg
jne
mov
adc
pop
xchg
pop
pop
pop
out
lcall
cmp
sub
imul
mov
ljmp
jge
fnstcw
ja
push
pop
xchg
imul
inc
cltd
fisubrl
jno
sahf
loopne
jns
dec
mov
and
add
stc
out
pop
xchg
mov
cmp
fimull
jmp
repz
add
aas
inc
lcall
roll
xor
in
pop
shr
pop
xchg
ljmp
inc
shll
xor
movsb
sub
gs
push
jmp
call
cmpsl
mov
dec
insl
cmp
rcrb
bound
sbb
loope
scas
or
adc
pop
fistpl
push
in
fisttpll
xchg
add
push
rcrl
ss
adc
imulb
cmpsb
pop
mov
scas
das
out
xchg
cmpsb
xchg
push
insl
jnp
mov
cmp
bound
movsb
xchg
shll
fidivs
fcoms
xor
out
pop
or
aaa
dec
test
lahf
es
mov
mov
add
das
dec
dec
adc
pusha
add
sti
setne
mov
out
or
jl
fstps
and
mov
xchg
push
adc
outsl
mov
push
call
fstpl
popa
pushl
dec
aad
push
in
adc
lret
xchg
push
divl
push
dec
push
ret
pushf
pop
mov
jb
loop,pt
mov
mov
sbb
xor
lret
pop
fwait
inc
add
cltd
subb
mov
inc
dec
out
jae
and
in
xlat
orl
loop
inc
mov
xlat
pop
dec
rclb
fnstsw
pop
or
sub
push
push
inc
das
jecxz
sbb
ljmp
dec
adc
mov
cwtl
jle
fwait
mov
cmp
pop
es
ja
xchg
and
hlt
stos
and
iret
adcb
xor
mov
out
clc
movsl
enter
repnz
xchg
out
mov
mov
jo
movsb
or
jb
ret
out
clc
jo
call
add
lret
fadd
sub
and
shll
pop
mov
pusha
andb
cmp
sub
fildl
mov
dec
test
out
aas
repnz
pop
out
sub
mov
test
ss
inc
or
jecxz
xlat
out
popa
lds
mov
js
nop
jmp
cmp
adc
mov
mov
mov
leave
mov
jle
arpl
rcr
pusha
push
or
lret
add
bound
push
iret
ja
inc
xor
leave
and
mov
and
mov
fwait
add
out
outsl
pop
pop
dec
cwtl
imul
icebp
mov
fsubrl
test
adc
mov
sti
push
add
fs
mov
movsb
sbb
mov
loop
cmp
jne
pop
fisubrs
roll
js
mov
jne
je
lods
cwtl
scas
test
push
add
cmp
xor
jne
mov
dec
dec
add
nop
shlb
or
out
mov
lods
mov
adc
dec
xlat
stc
push
jns
jno
inc
cs
mov
fisubrl
inc
lcall
mov
pand
lahf
dec
or
mov
push
fisubrs
xchg
dec
cli
fwait
mov
add
mov
out
lret
xlat
add
rcll
xchg
cwtl
out
mov
push
push
or
movsl
inc
push
cmp
push
jo
sar
gs
movsb
and
test
mov
les
call
ret
outsb
mov
loop
lahf
lods
repnz
inc
loopne
push
push
xchg
xchg
out
lods
int
stc
dec
aas
out
aad
jle
mov
and
jne
insb
lock
ret
mov
mov
ljmp
jle
push
call
xor
sahf
pusha
iret
lret
jae
push
clc
and
sub
push
xlat
mov
hlt
fdiv
push
push
dec
mov
cmpsb
fsubrl
and
gs
add
cmp
push
ds
icebp
clc
les
cltd
mov
cltd
or
sbbl
adc
or
js
loope
mov
mov
xchg
or
jmp
mov
xchg
ret
xchg
cmp
mov
pop
cli
jns
dec
mov
stos
in
pop
jb
push
adc
add
xchg
lcall
cmc
xor
mov
xorl
or
xor
jo
jns
stc
push
sub
xchg
adc
mov
add
push
pop
or
adc
mov
mov
mov
add
fcompl
adc
ret
rcrb
mov
mov
xor
pop
mov
dec
push
sbb
ljmp
jo
dec
sbb
adc
clc
in
push
jns
jle
push
fmuls
lods
jb
pushf
test
add
sahf
mov
loope
out
lea
imul
scas
aad
sti
shll
in
outsl
ds
mov
dec
lret
pop
in
out
xor
mov
fwait
mov
or
aas
aaa
imul
inc
js
aad
inc
lret
mov
pop
mov
pop
add
cmp
hlt
into
ss
push
int
into
mov
pusha
push
xchg
mov
lds
ficomps
jle
xchg
ss
lock
sub
jo
xlat
cltd
les
xchg
mov
sar
sbb
cmp
inc
sub
xchg
das
xchg
aam
out
mov
js
inc
pop
xchg
fs
mov
xor
mov
fnstcw
cmp
sarb
filds
and
push
jmp
in
jb
sbb
and
sbb
or
outsl
loop
sbb
mov
call
push
adc
fistpll
pop
stos
ds
test
call
lea
mov
jl
hlt
sahf
or
mov
loopne
insl
inc
and
xchg
sarb
mov
inc
lret
jle
ja
test
mov
in
movsb
add
scas
test
inc
js
jp
sbb
and
je
dec
lcall
xchg
jbe
add
push
into
adc
or
ret
xor
and
inc
fcomip
mov
rol
adc
mov
dec
sbb
dec
hlt
xor
bound
fstps
dec
xchg
mov
adc
arpl
cmp
add
mov
in
pop
dec
push
out
insl
dec
mov
mov
jb
in
test
pop
dec
and
add
cmc
pop
popa
rorb
adc
xchg
push
push
pop
mov
inc
jp
nop
mov
mov
mov
pop
jmp
lahf
out
fisttpll
inc
mov
mov
test
punpckldq
fadds
mov
dec
pop
xor
inc
pop
mov
push
outsb
inc
sub
aaa
dec
inc
mov
xchg
insl
sbb
fmul
pop
mov
cmp
movsb
xorb
loopne
inc
xchg
push
mov
and
mov
sti
xor
fsubr
scas
lods
mov
lods
jg
or
jmp
cmp
mov
pop
push
inc
leave
bswap
loop
sahf
insb
rolb
lahf
sbb
sub
decl
sub
or
clc
in
js
adc
mov
fsubrs
je
cmp
push
dec
js
inc
popa
dec
test
sub
psubusb
sbb
pop
mov
dec
and
sub
filds
mov
cmp
stos
gs
aaa
add
and
lds
inc
fmull
mov
pop
fildll
or
sbb
inc
dec
xor
out
adc
loope
mov
scas
inc
hlt
sar
cmp
fnsave
xchg
dec
pop
add
sti
xor
jae
or
rol
cwtl
jl
fnstenv
pop
enter
cmpsb
pop
push
push
std
xorl
comiss
fwait
xchg
dec
adc
pop
out
jne
int
mov
sbb
add
adc
sbb
fcoml
sti
les
lret
jo
pop
push
lret
pop
pop
out
out
and
push
sbb
sub
loop
aam
mov
dec
mov
xor
nop
mov
or
mov
in
clc
xor
aas
frstor
push
xor
adc
arpl
stos
add
aad
dec
dec
push
jae
mov
insb
inc
sbb
dec
pop
mov
fadds
nop
mov
push
lret
push
add
test
xor
mov
decl
xchg
xor
lcall
repnz
js
sbb
sub
mov
sbb
dec
and
bound
stc
nop
xchg
fcmovbe
dec
jbe
lds
lods
sarb
inc
sahf
mov
sub
stc
cltd
out
in
xor
pushf
mov
out
movsb
sarb
movswl
or
pop
int3
sub
sub
stc
adc
sub
inc
cli
and
hlt
xchg
mov
xor
sahf
dec
loopne
leave
insb
pop
push
nop
jb
lar
insl
into
mov
or
adc
xchg
mov
sub
adc
popa
mov
movsl
sub
jp
cmp
mov
daa
mov
and
into
out
and
stc
adc
sub
or
aad
inc
in
and
icebp
add
inc
aad
insb
adc
hlt
in
jnp
cmp
pop
dec
inc
xlat
loopne
lods
cmpsl
andb
or
ds
xchg
fists
out
popf
and
fs
pop
dec
aam
cmc
or
mov
sub
mov
fstl
call
nop
adc
mov
mov
xor
leave
adc
mov
out
fildll
hlt
aas
and
je
pop
into
pusha
in
xchg
sahf
mov
stos
push
js
int
pop
mov
and
sub
sbbb
mov
xchg
adc
cmpsl
jg
sub
cmp
pop
lea
fnstsw
neg
out
push
jecxz
je
mov
or
shl
or
shrb
and
jne
dec
push
push
mov
inc
sub
jle
add
sbb
in
call
inc
adc
mov
pop
mov
inc
jae
sarl
loopne
insl
test
or
sti
subl
pop
sahf
es
sbb
xchg
adc
and
xchg
fcomps
shll
mov
lahf
pop
sarl
addl
inc
rolb
mov
cmpsb
push
scas
xchg
stos
les
inc
xor
or
daa
shlb
dec
or
das
pop
push
and
sarl
jb
pop
add
pop
mov
dec
fisubs
cli
imul
lock
test
arpl
fistpll
lret
fdecstp
sub
sbb
push
shll
cmp
xor
stc
inc
dec
in
fistpl
mov
lods
dec
pusha
xchg
shll
nop
adc
in
out
pop
shrb
les
push
mov
outsb
xor
and
cmp
mov
sbb
ss
mov
push
inc
inc
cmp
jo
inc
mov
push
inc
dec
mov
leave
dec
mov
ror
xor
push
mov
in
out
lock
and
and
jns
icebp
cwtl
popa
and
aaa
jle
repnz
mov
fwait
arpl
orl
sub
shll
sti
and
in
outsl
jbe
push
xor
fwait
jns
cmpsb
or
dec
inc
insb
cmpb
xor
sahf
imulb
dec
push
xor
aas
repnz
or
fsts
sbb
or
sbb
xchg
push
loope
andb
lahf
not
xchg
sbb
popf
inc
adc
jnp
and
hlt
iret
add
mov
mov
fstl
xchg
leave
rcl
into
test
dec
push
popf
sub
shrl
fwait
mov
mov
mov
in
arpl
decl
mov
cmp
adc
out
mov
out
jecxz
stos
lcall
jp
inc
fcmovne
cmp
jno
loop
rclb
mov
and
ficoms
pop
xchg
adc
push
mov
add
movsb
and
xchg
pop
and
cli
xchg
mov
ja
cmp
sbb
fmuls
and
mov
sbb
add
bound
jecxz
shll
je
roll
outsb
test
and
mov
addb
xchg
jb
xchg
test
test
lea
and
push
add
sub
or
and
js
adc
int3
mov
cmp
outsb
rorl
cmp
jp
call
fidivs
cmp
jmp
fyl2x
mov
cmp
arpl
mov
lea
or
sti
ds
sub
lret
jae
in
add
add
ds
push
leave
xchg
flds
pop
cld
pop
lcall
ficomps
xlat
xor
out
les
dec
jmp
dec
jne
mov
arpl
dec
add
mov
sub
pop
into
push
fsubr
shr
fwait
lods
push
pop
pop
push
mov
cmpsl
lea
roll
sar
rcrl
dec
repz
ljmp
cltd
dec
js
lcall
sub
jecxz
mov
insb
pop
addr16
repz
dec
add
in
and
inc
push
sbbl
dec
shrl
cmp
jne
in
adc
inc
dec
inc
pushf
imul
dec
ror
fdivrs
ret
push
mov
fcoml
push
adc
outsb
sub
cmpsb
dec
mov
es
mov
cmp
lret
aas
fucom
cmp
outsl
mov
push
mov
mov
or
in
dec
call
repz
loope
mov
ficoms
clc
scas
xchg
push
xchg
loop
pop
andb
mov
xchg
mov
dec
addr16
mov
stos
loop
and
or
mov
pop
loopne
mov
into
or
fadds
pushf
cltd
jg
hlt
or
mov
leave
dec
lret
stos
adc
mov
push
cmpsl
add
or
and
nop
mov
mov
cmp
sub
out
aam
imul
mov
int
mov
push
loopne
aam
hlt
mov
dec
mov
dec
pop
mov
jle
movsl
mov
mov
fcmovu
ja
inc
sahf
jne
xor
cmp
aas
fistpll
xor
loop
sbb
xchg
fwait
dec
outsl
lods
mov
sar
mov
sbb
inc
test
fildll
xor
dec
ja
and
sub
cmc
push
cmp
inc
sbb
and
pop
cmpsl
pop
cs
xlat
push
popa
leave
mov
jae
xor
adc
fisttpl
jno
cld
icebp
sub
jle
sbb
or
cmpsl
divb
dec
std
xorb
or
and
inc
pop
mov
xchg
add
vrcpss
in
xor
mov
dec
out
and
shll
push
jp
sbb
mov
outsl
pusha
movsl
ret
cwtl
xor
lods
sbb
stc
jne
adc
cpuid
xchg
mov
sub
push
and
mov
into
mov
movsb
mov
xchg
jnp
add
jl
xor
into
cmp
ret
mov
cltd
nop
mov
push
push
jbe
leave
xchg
sub
gs
sbb
jge
cmp
jb
xchg
shlb
mov
subl
into
mov
sbb
stos
inc
int
adc
or
dec
les
push
fidivl
sub
sub
dec
xchg
out
jb
mov
jp
jo
fwait
xor
pop
cltd
js
int
sbb
inc
push
push
daa
ror
movsl
mov
mov
push
les
cmc
add
sbb
pop
push
sub
in
inc
lret
test
stos
ret
or
push
push
sub
xchg
ja
mov
ret
xor
sub
mov
mov
jge
jb
cld
shlb
ret
mov
ds
jg
pop
js
push
push
fnstcw
and
mov
mov
fwait
or
scas
xlat
in
jb
mov
test
sub
add
push
stc
dec
movsl
arpl
sbb
dec
sub
loopne
pop
or
ljmp
sub
lret
pop
xchg
mov
mov
ret
sub
daa
push
icebp
push
and
test
das
pop
aad
mov
mov
dec
lret
divl
bound
xchg
cmpsb
imul
mov
ret
mov
or
mov
push
nop
jle
dec
mov
out
add
xlat
test
pop
loopne
adc
shl
lds
mov
bound
pop
add
mov
mov
push
cltd
pop
fsts
dec
ds
dec
sbb
and
shl
and
mov
out
adc
fstpt
inc
mov
inc
inc
cmp
dec
adc
pminub
push
mov
dec
data16
mov
push
int
mov
lods
cmp
sub
repz
in
arpl
ljmp
pop
jae
xchg
lret
fsub
movsl
sub
ja
fildl
xchg
sahf
push
push
addr16
std
in
xorl
mov
xchg
and
insb
or
aam
mov
dec
cmp
push
add
push
jns
in
pop
sbb
mov
and
scas
jns
push
out
mov
scas
mov
lahf
stos
ja
fcom
mov
or
jnp
fisttpll
mov
int
in
lds
cmpsb
pop
mov
int
fdivrl
out
fwait
stos
cmp
enter
ljmp
mov
out
pop
jp
test
push
test
add
lock
inc
inc
lret
xlat
popf
cmpsb
add
cmp
inc
fisttps
mov
push
leave
out
aam
sub
and
ds
fmull
push
decb
scas
inc
nop
adc
lret
repz
mov
xchg
add
std
pop
xchg
mov
xchg
cli
push
push
fisubrl
test
add
popf
ss
pop
xchg
inc
lahf
sbb
push
mov
outsl
popa
jg
mov
adc
cld
xor
inc
scas
dec
push
or
stos
fstpl
add
icebp
sbb
adc
jmp
call
orl
ja
hlt
lret
out
jne,pn
adc
mov
pop
into
push
jp
imulb
and
out
stos
pop
in
out
mov
cmp
mov
loope
mov
shll
cmp
cmpsb
xor
aas
repnz
lods
mov
dec
push
xchg
mov
test
or
jne
adc
cmp
das
xlat
std
testb
push
imul
movsl
xor
add
cs
xchg
lds
lods
or
adc
int
or
add
push
jecxz
cmp
inc
mov
fisubl
arpl
jle
cmp
mov
jg
inc
push
cmc
enter
sub
inc
outsb
ljmp
add
shrl
xchg
or
cs
sbb
fsubs
fwait
pop
push
sbb
jle
mov
sbb
repz
js
inc
pushf
dec
sbb
jp
in
xor
mov
aam
xchg
mov
push
jle
xchg
sbb
adc
push
mov
popf
sti
sub
or
es
cmp
dec
cmc
fadd
mov
jecxz
data16
mov
lock
dec
cli
movsb
lcall
lods
inc
int3
xadd
add
sbb
xchg
das
mov
popa
cli
or
mov
call
scas
or
dec
adc
dec
jno
scas
pushf
outsl
push
xor
or
xchg
pop
sbb
mov
jne
sub
pop
dec
sub
jae
dec
pop
cmpsb
cmp
push
jno
sbb
push
dec
adc
loope
xchg
and
pusha
xchg
into
sub
leave
gs
dec
and
adc
and
pop
jbe
stc
inc
nop
hlt
lea
push
jno
adcl
xor
pop
popa
pop
aad
push
and
cmp
fs
mov
rorb
and
pop
xor
scas
popa
sbb
in
lea
sbb
add
sub
nop
ret
testb
xor
add
in
loope
mov
sbb
mov
sbb
xor
cmpsl
cltd
scas
xchg
xchg
icebp
dec
gs
lahf
and
lret
or
leave
aam
cltd
loope
aaa
ds
rcrl
pop
jmp
sub
imul
mov
test
orl
scas
sub
inc
test
jle
jle
repnz
retw
add
iret
aam
add
and
adc
adc
int
jge
pop
ds
dec
cmpsb
shll
add
pushf
inc
cld
into
stos
into
and
fadds
lcall
xor
mov
scas
xchg
cmp
loopne
pop
out
daa
js
mov
out
push
lret
or
or
jb
mov
sub
subb
in
nop
adc
fs
or
push
cltd
jne
in
mov
rclb
and
mov
out
ss
je
or
xchg
dec
mov
inc
mov
pop
bound
gs
insb
pushf
mov
popa
jmp
dec
mov
sbb
and
push
inc
jle
inc
mov
xor
xchg
or
clc
pop
xchg
mov
fcoml
xor
xchg
mov
aam
mov
data16
cld
fyl2xp1
add
sti
ficoms
pop
add
and
xchg
mov
outsl
push
aaa
stc
ret
out
cmp
dec
daa
popf
sub
cmp
add
test
cmc
mov
jnp
pop
inc
dec
or
jecxz
arpl
cmp
and
xchg
jo
subl
rclb
jge
mov
std
and
in
or
loope
sbb
outsl
sub
aas
add
hlt
in
fisttps
inc
add
lods
add
icebp
popf
test
leave
lret
nop
call
out
lahf
mov
mov
add
sbb
push
test
test
ljmp
ret
sbb
mov
je
jnp
push
std
out
shlb
jo
dec
out
sbbb
cmp
adc
test
mov
mov
fsubs
outsl
adc
fidivrl
mov
add
pop
push
out
mov
cmpsl
rol
xor
ret
dec
cmc
fs
pop
dec
pop
mov
testl
scas
jge
push
xchg
fdivl
popl
push
popf
push
out
xchg
adc
shl
mov
cmp
pop
sub
inc
movsl
nop
cmp
sahf
aaa
in
jnp
loopne
lds
jle
push
outsl
js
mov
lods
fs
lds
pop
icebp
adc
loope
sub
add
jecxz
gs
inc
sbb
cmc
sub
dec
loop
xor
cmpb
or
cmc
pop
fmul
into
cmp
sbb
test
dec
cmpsl
insb
sub
and
das
aam
jnp
arpl
js
jp
dec
cwtl
or
inc
ret
loope
lret
jne
push
int
insl
push
sahf
daa
iret
fdivrs
fldenv
fistps
mov
add
or
pop
movmskps
in
mov
scas
mov
outsl
shlb
and
jae
repnz
or
pop
adc
xchg
stc
add
into
cmpsl
popa
lods
stos
xor
add
repnz
repz
lods
push
mov
jae
nop
test
lret
pop
stc
push
mov
dec
jecxz,pn
mov
out
jg
cli
sbb
mov
inc
out
cmc
lods
pop
notb
fnstcw
and
fcmovnu
and
push
and
fbstp
mov
imul
jae
mov
mov
add
jae
test
xchg
pop
in
popf
mov
xor
rcl
adc
push
int
lock
push
std
pop
push
ud0
cmp
sub
ret
or
imul
pop
jecxz
out
push
xchg
dec
cld
aam
sub
sbb
dec
adc
bound
test
pushf
sbb
jl
dec
dec
fbld
test
jmp
jnp
mov
pusha
add
dec
sub
sub
insb
mov
add
xchg
or
addb
ds
mov
pop
mov
bound
sar
dec
or
fs
fmuls
push
jp
xor
push
rclb
scas
pop
push
repz
lds
add
mov
xor
fs
cmp
bound
jns
adc
rol
adc
and
orl
inc
xchg
daa
add
stos
pop
push
ljmp
mov
xor
iret
mov
jle
fidivrs
frstor
and
xchg
inc
mov
cmp
jno
cwtl
sub
inc
into
mov
imul
addr16
aad
nop
sbb
or
lahf
xchg
add
addr16
in
cltd
sub
fwait
xlat
sub
mov
pop
pop
movsl
mov
fildl
sbb
movl
fidivrs
xchg
push
push
mov
aad
pop
xchg
sub
push
fwait
hlt
nop
add
push
push
push
jl
into
mov
sub
mov
add
sbb
mov
inc
outsb
inc
or
xor
rorb
inc
mov
jo
es
mov
je
pop
fbstp
sbb
push
inc
popf
jne
mov
lds
lods
int
leave
das
subb
bound
fnsave
lods
mov
sub
mov
mov
cli
lods
bswap
jns
dec
inc
xor
int
lcall
or
xor
shll
popa
insb
lods
xchg
jne
cmpsl
out
add
stos
test
jmp
lahf
bound
pop
dec
mov
rcll
outsb
dec
loopne
orb
or
mov
cmc
mov
dec
sbb
enter
mov
mov
mov
mov
fnsave
fwait
aad
sbb
lds
and
cmp
pop
fcomps
jbe
cli
stc
bnd
sub
fwait
and
loopne
fs
pop
lock
sar
cmp
jbe
fnsave
add
xchg
out
dec
xlat
lahf
icebp
pop
sarb
push
test
cwtl
stc
dec
imul
and
inc
xor
xchg
std
shl
js
add
mov
iret
jmp
mov
xchg
in
xor
xchg
ljmp
push
and
gs
or
xor
bound
inc
std
push
mov
mov
lret
and
mov
dec
divl
dec
int
neg
clc
popf
push
jmp
test
mov
fisubrs
in
in
xor
cltd
leave
ds
pop
dec
inc
int3
ljmp
sbb
push
cmp
sbb
es
cmpb
push
test
and
jmp
cmpsb
mov
cltd
ret
jecxz
lea
pop
or
push
ss
cmc
sbb
cmpsb
pop
lea
push
ds
mov
dec
push
inc
adc
xchg
subb
gs
adc
sbb
popf
inc
movsb
ss
sbb
sbb
dec
cli
bound
ja
bound
or
in
in
aaa
ss
xchg
shr
sbbb
mov
push
mov
jne
adc
fs
idivl
mov
sub
cltd
testb
push
sbb
stc
xchg
loope
add
cltd
enter
lahf
out
loopne
aas
sbb
cmp
inc
test
ljmp
add
daa
movsb
dec
bound
mov
std
sub
pop
xchg
fisubrs
xor
leave
pop
aas
jmp
pusha
test
rorl
mov
enter
xor
pop
repnz
mov
ds
cmpb
inc
jbe
out
int
cld
dec
push
mov
lahf
cld
mov
jb
mov
scas
psubw
lret
loop
xchg
cmpsl
push
xchg
pop
aas
sbb
xlat
push
and
mov
inc
popa
shll
sbb
lea
stos
mov
jmp
imul
pop
jo
lea
jecxz
xor
mov
xor
repz
arpl
out
push
xchg
mov
js
int3
push
mov
fisubl
clc
data16
mov
push
push
xchg
jb
pop
imul
dec
cli
mov
fbstp
ja
xchg
push
sub
inc
mov
mov
push
rcl
mov
test
add
sub
xchg
scas
pusha
and
xchg
jmp
pop
sarb
fnstenv
fstps
inc
add
add
movsb
sub
pop
aas
jb
cmp
adc
mov
icebp
cmpsb
ficompl
pop
adc
jmp
test
loope
imul
enter
adc
shll
lcall
stos
out
aam
je
or
add
mov
pop
push
fucomp
xor
mov
xorb
jo
push
and
mov
rorl
mov
jnp
outsb
fs
mov
outsb
stc
xchg
inc
scas
mov
in
add
jle
aaa
cltd
je
jae
aam
jmp
pop
pop
or
popf
pop
or
in
jle
inc
into
arpl
pop
jp
nop
ficomps
icebp
cmc
cmp
pop
inc
daa
jae
mov
sti
in
frstor
lods
mov
dec
push
xor
call
ljmp
shr
loop
lret
inc
inc
popf
xor
insb
ret
ss
outsl
iret
xor
and
clc
and
pop
sub
movl
jge
sbb
rcrl
fwait
push
cmp
loop
arpl
adc
stos
mov
and
mov
jecxz
mov
pop
push
inc
or
mov
out
xchg
xchg
fs
push
mov
pop
inc
imul
jp
test
xchg
and
push
arpl
ljmp
adc
mov
cmp
lods
out
cmova
fdivl
sbb
mov
fcomps
pop
insb
pop
call
push
mov
pop
sbb
pop
xor
mov
iret
fwait
dec
pop
xor
pop
pop
iret
cld
hlt
scas
and
testb
pop
and
lcall
xchg
dec
pop
jecxz
inc
inc
push
jge
in
push
shlb
sbb
mov
mov
outsb
cld
in
ret
cmc
mov
cwtl
mov
movsb
in
or
pop
int
jecxz
push
push
mov
in
imul
mov
lcall
div
cmpl
jo
fstps
mov
xor
in
sbb
inc
lret
sbb
xor
gs
pop
push
mov
and
cltd
fiadds
pop
pop
fcomi
out
sbb
ficompl
fstps
and
lret
int3
pop
std
push
lahf
jl
and
adc
sub
dec
stos
sbb
movsl
outsl
push
scas
xchg
ja
out
sbb
cmpb
int3
add
sahf
dec
std
sub
das
add
es
fwait
xchg
daa
cmp
test
or
or
mov
lods
xchg
test
mov
test
mov
cmp
aaa
in
pop
testb
aad
jge
push
repnz
outsl
mov
leave
push
add
cs
aam
pushf
lcall
xor
xor
xlat
loope
sub
fwait
xchg
mov
jo
xor
loop
push
leave
cmp
xor
outsb
sbb
xchg
mov
jmp
call
jmp
mov
or
mov
pop
clc
ja
mov
xor
jo
pop
or
add
or
clc
out
xchg
jbe
add
xor
sarb
test
mov
add
sub
shlb
repnz
xchg
cbtw
or
jl
sbb
std
cmp
aad
insl
xor
sub
mov
jns
or
push
cmp
jne
imul
and
xchg
and
xor
das
jmp
ret
jnp
ljmp
and
rorl
sbb
dec
mov
xor
pop
push
lods
adc
cmovo
adc
mov
fs
addr16
roll
je
cmp
jne,pt
or
push
jo
pop
lods
sub
ss
pop
sbb
cmpsb
mov
xchg
xlat
pop
mov
imul
movsb
lock
or
or
dec
add
jb
stc
jns
fidivrs
pop
bound
jg
inc
aaa
inc
add
cmp
cmpsb
mov
inc
int3
aam
inc
test
movsl
aad
cltd
xchg
sub
or
rolb
cmc
and
shrb
inc
in
sub
push
push
pop
add
insb
out
mov
out
inc
xor
ss
xchg
jg
pop
push
lds
test
mov
xchg
dec
sub
in
mov
repnz
xchg
ret
push
push
sbb
add
dec
jae
into
insb
fsubs
mov
mov
adc
xchg
int3
mov
dec
inc
cmp
sti
add
jbe
gs
xchg
test
mov
sbb
outsb
mov
and
xor
popl
imul
adc
das
sub
icebp
add
inc
cmp
pop
shl
rorl
outsb
pop
int
jg
mov
dec
push
xor
testb
ljmp
lret
sub
roll
js
and
xlat
mov
movl
lea
push
or
jb
mov
mov
into
imul
scas
fsubl
clc
mov
inc
js
push
cmpb
out
sarl
xlat
or
adc
enter
in
lods
aaa
or
bound
mov
or
and
mov
incl
sub
sbb
imul
pop
sub
dec
xor
push
xchg
movsb
inc
mov
ja
aam
outsb
fmuls
mov
lcall
sub
ffree
inc
leave
jbe
mov
ret
xbegin
cmp
lret
xlat
pop
into
push
inc
xor
arpl
jae
stc
add
adc
repnz
lahf
gs
sub
flds
inc
in
xchg
push
or
xlat
test
or
and
push
popf
int
imul
aad
stos
dec
lea
xchg
test
adc
cmp
jne
jb
adc
xchg
mov
sbb
push
mov
leave
test
xor
cmp
pop
push
stos
jb
mov
pusha
pop
inc
cli
outsb
arpl
sbb
lds
pop
mov
dec
dec
jle
idivb
mov
adc
rcrb
cwtl
mov
ffreep
inc
mov
bound
fstpt
mov
repnz
mov
cld
pop
fwait
mov
decb
mov
mov
test
std
pxor
shrb
rclb
sahf
push
jle
mov
dec
adc
jecxz
cmp
imull
pop
or
fisttps
jmp
xchg
and
pop
inc
scas
in
cltd
test
call
push
cmpsl
push
jg
fstpl
ljmp
mov
out
stc
dec
xchg
adc
push
dec
movups
mov
xchg
aad
in
fimuls
cmp
fs
adc
jle
inc
cs
fstps
jae
jl
jb
inc
adc
mov
jp
dec
and
jne
xchg
enter
cmp
pushf
pop
fwait
sbb
mov
in
in
cmp
push
test
gs
lods
stos
mov
inc
xor
int3
and
xor
clc
movsl
add
inc
sub
or
daa
nop
push
scas
les
out
pop
xor
adc
push
push
call
jmp
sbbb
mov
and
aas
sti
mov
pop
loop
scas
sbbb
fisttpll
cmp
arpl
push
aam
push
aaa
lret
aam
dec
push
dec
mov
cmp
flds
cmp
mov
add
data16
jl
adc
cmp
adc
or
lret
jecxz
push
out
fcoms
adc
push
push
icebp
pusha
movsl
lret
in
mov
loopne
adc
dec
inc
mov
add
pop
jmp
push
test
test
add
and
xor
mov
jmp
dec
mov
dec
and
mov
stos
shlb
jle
mov
push
sbb
inc
lret
push
decl
fadds
data16
dec
xchg
mov
jecxz
push
mov
mov
add
jle
push
jb
ret
pop
push
mov
shll
in
jge
inc
xor
mov
cmp
inc
ljmp
mov
cld
scas
add
jg
mov
out
out
jecxz
mov
aaa
mov
add
in
sbb
cwtl
fdivs
push
test
cmpsb
xor
or
jp
fistpll
push
mov
xlat
or
sbb
mov
inc
test
jae
aad
mov
divl
or
div
iret
rcll
mov
pop
lods
push
jo
cld
mov
jg
ljmp
in
pusha
lods
push
jecxz
mov
dec
pusha
dec
cltd
in
mov
les
ret
int3
mov
imul
rcrb
sub
addl
add
and
inc
jecxz
les
test
pop
movb
das
lcall
inc
jmp
int
sub
call
pop
mov
lods
imul
xorl
clc
nop
mov
adc
rcrl
into
cmp
movsb
aam
cld
test
call
fxch
jne
fwait
sbb
push
adc
test
mov
cmp
jmp
shrb
mov
and
out
scas
mov
outsl
dec
in
fiadds
pop
sti
jecxz
push
pushl
fstpt
add
fwait
mov
and
pop
xlat
xor
pop
call
lds
adc
movsb
xchg
or
adc
clc
out
in
mov
divb
test
das
mov
sbb
pop
ror
add
mov
push
lcall
gs
mov
fcomps
or
mov
xor
mov
iret
add
aam
sub
xchg
sub
and
movsb
inc
daa
pop
aad
outsb
aaa
jmp
jmp
out
ljmp
sti
stc
je
pop
push
out
movsl
popf
xlat
ja
inc
ljmp
xchg
jg
push
cs
push
jg
cmc
dec
enter
push
mov
scas
or
xor
and
int3
imul
repz
rcrl
leave
fsubrp
or
sbb
aad
cltd
push
cmp
cltd
mov
push
jbe
clc
dec
outsb
mov
mov
and
push
push
push
sbb
cli
xchg
std
mov
xchg
inc
je
clc
aas
mov
ret
scas
add
outsl
push
movb
add
push
inc
aas
jne
add
movb
fstpl
cmp
add
rclb
inc
or
stos
add
bound
jnp
sbbl
mull
add
fwait
jmp
in
aaa
xchg
mov
fwait
inc
mov
in
xchg
testb
mov
cmp
jbe
flds
ficomps
pop
lret
push
movsb
rolb
jns
mov
repnz
sbb
push
aad
sub
in
mov
jp
mov
fidivs
xor
sub
sub
movsl
loop
ljmp
sti
push
clc
mov
out
jg
add
test
loopne
mov
and
cmp
adc
pushf
int
add
mov
push
lea
ret
sub
xor
inc
push
lcall
stc
lret
mov
cmpsb
loope
xchg
sbb
fsubs
mov
xchg
push
cmpsb
rclb
cmp
pop
loop
in
incl
test
sub
add
test
call
xor
jne
adcl
arpl
rcll
cmp
clc
xlat
jno
add
pop
xor
mov
adc
sub
inc
inc
pop
les
mov
mov
dec
repnz
pop
mov
pop
xchg
ljmp
insl
fisttps
mov
sahf
lods
inc
icebp
rcl
iret
pop
das
inc
data16
inc
and
sub
jnp
pop
rorb
scas
pop
dec
dec
testl
ret
pop
cmp
aaa
fldt
inc
stos
sbb
in
popa
and
sbb
adcb
fmuls
cmc
dec
sbb
cmpsl
iret
insl
lods
stos
or
jo
cmp
dec
or
dec
sub
sub
shlb
daa
sbb
push
cmpsb
test
adc
push
or
out
dec
push
jmp
test
lods
hlt
cltd
inc
ret
test
push
and
lea
hlt
adc
sti
jo
or
jo
mov
jbe
loopne
in
mov
sti
dec
mov
data16
push
mov
fisubs
xchg
xorl
cmp
jg
inc
inc
aad
mull
push
cmp
data16
loop
cmp
push
lahf
lret
fnstsw
mov
xor
pop
mov
inc
stos
lahf
test
xor
popf
adc
xor
dec
push
xchg
push
mov
dec
push
jnp
mov
push
pop
lock
mov
push
cmp
jns
xlat
ja
xchg
sbb
ljmp
mov
rclb
inc
cwtl
adc
in
jnp
inc
shlb
out
mov
scas
sub
inc
lcall
shr
mov
or
lcall
sub
push
stos
int
push
dec
jle
mov
fwait
cmp
mov
mov
in
push
xor
aad
sbb
mov
insb
pextrw
addr16
pop
pop
xchg
jge
fidivs
mov
mov
mov
js
cmp
aas
adc
xor
xchg
int
nop
or
add
rcll
add
adc
sbb
sub
lock
fs
ss
inc
push
cmp
cs
bound
sub
mov
repz
add
adc
rcrl
test
jbe
pop
ficompl
repz
jb
test
lock
inc
push
mov
lods
cmc
lods
js
mov
xchg
stc
or
pop
add
cmp
add
das
loope
test
sahf
sub
hlt
inc
mov
and
fsts
fs
arpl
pop
push
outsl
cmpsb
push
lret
pop
adc
cltd
mov
push
mov
mov
negl
shll
movsb
addr16
mov
fwait
pusha
or
push
push
cmp
jnp
cmc
jmp
fwait
jne
mov
and
inc
iret
dec
or
icebp
xorl
add
xor
pop
arpl
mov
cli
js
loopne
aaa
lock
jg
stc
xor
gs
dec
xchg
cld
inc
sub
les
dec
add
in
in
addb
jge
js
mov
in
xor
adc
mov
jae
enter
popf
cwtl
cmp
mov
shlb
xchg
nop
adcl
les
push
movsb
in
sub
push
jne
and
repnz
xchg
aam
and
push
mov
loop
in
inc
test
stc
or
mov
in
fiadds
xchg
mov
clc
jo
mov
js,pt
les
and
into
movl
inc
add
jge
fiaddl
mov
adc
xchg
and
and
movsb
popf
lret
xchg
cltd
loop
mov
mov
inc
js
xchg
push
adc
rcrb
jno
adc
or
shr
mov
add
xchg
add
add
test
es
mov
es
and
out
jp
aam
outsl
pop
popa
xorl
lds
test
mov
mov
inc
mov
mov
jmp
mov
xchg
sbb
xor
mov
int3
xchg
dec
and
xchg
loopne
push
outsb
scas
pushf
jp,pn
jp
imul
jno
decb
dec
ds
mov
mov
fistpll
fstpt
cld
push
push
into
cmp
rcrl
pop
lods
outsl
jae
or
and
jecxz
inc
insb
outsl
scas
aad
pop
jp
sub
jge
pop
out
stc
fsincos
pop
xchg
sbb
cli
int
fbld
mov
or
or
mov
xchg
dec
push
fucom
add
stos
push
sbb
imul
add
cmpsl
call
inc
test
push
pop
aad
dec
fstpt
push
mov
sti
dec
xor
stc
or
std
sti
insb
daa
imul
into
adc
xchg
cld
mov
mov
rolb
dec
dec
adc
es
push
xor
push
lds
scas
adc
sub
push
pop
xchg
and
xchg
sti
pop
outsb
lock
inc
cmp
lahf
ja
cmp
xchg
or
cmpsl
dec
test
hlt
mov
mov
sbb
push
jp
xchg
das
hlt
mov
std
jmp
jg
aas
mov
mov
sub
xchg
imul
enter
pop
rcl
xor
mov
shr
mov
scas
add
add
xor
shlb
pusha
push
mov
mov
ret
jbe
aad
gs
pop
imul
into
sub
dec
hlt
fsubrs
fistpl
pop
mov
xchg
adc
aas
addr16
test
cmp
xchg
mov
mov
sub
test
repnz
jns
mov
clc
movsb
out
and
enter
pop
sbb
mov
pop
outsl
cmp
arpl
jno
mov
xchg
cmpsb
xlat
or
adc
fidivs
jno
dec
inc
fldcw
ja
jno
sub
xorb
cmpsb
les
jecxz
push
arpl
mov
inc
iret
mov
gs
push
sbb
jmp
add
ja
insb
data16
push
cmpb
sub
cltd
dec
or
and
fisubs
inc
sub
sub
fcomi
mov
sahf
test
jno
inc
insl
adc
and
mov
lahf
xchg
aaa
sub
adc
les
jecxz
popf
inc
icebp
pusha
xchg
cmp
popf
push
ljmp
inc
shlb
lods
or
arpl
fcomp
ja
mov
icebp
dec
test
sar
jae
iret
and
mov
outsb
mov
jecxz
out
cmp
cmp
stos
add
push
sbb
xor
adc
dec
adc
stc
sti
push
aam
popa
add
repz
cmpsl
out
shrb
inc
loope
adc
iret
cld
xchg
or
insl
sub
in
leave
repz
dec
xchg
imul
mov
jg
sub
inc
mov
pop
jmp
mov
mov
imul
cmpsb
inc
push
push
sub
addr16
or
dec
neg
jnp
jo
push
test
or
jo
fisubs
pop
ja
nop
jb
test
add
into
stc
jo
loopne
push
add
gs
fidivl
inc
stos
bound
fstl
or
cltd
lret
cmpsb
repz
scas
cmpsb
stos
lcall
test
xorl
aaa
sahf
insl
lahf
dec
paddusw
scas
xlat
mov
mov
and
push
sbb
add
leave
stc
dec
mov
pop
add
punpckhbw
fwait
fwait
in
repz
xor
loopne
idivl
shr
and
lods
rcl
out
jp
sbb
stos
push
aas
push
xorb
movsl
sub
cmpsb
ss
addl
aam
push
imul
mov
stos
imul
jmp
loope
mov
push
rolb
xchg
rcll
xchg
mov
adc
lahf
jbe,pn
imul
insb
test
cmp
nop
sub
pop
je
jle
mov
add
and
loopne
ss
imul
pusha
pop
pop
insb
pop
inc
mov
enter
lock
or
shll
popf
out
pop
arpl
mov
push
test
fdivrl
popa
pop
scas
jecxz
jno
repnz
mov
mov
dec
jge
adc
daa
or
or
arpl
int
das
test
pop
jge
inc
fwait
pop
fists
fldcw
mov
and
aam
jne
loopne,pn
adc
ja
sbb
adcb
pusha
rorb
xor
stc
lahf
adc
xor
adc
std
bound
stc
dec
cmpsl
jecxz
pop
cmpsl
inc
push
mov
inc
in
sbb
out
je
sub
subb
adc
movsb
into
lods
inc
sahf
sbb
cld
and
aad
test
dec
sub
test
sub
ss
test
fistpll
aam
cmp
lods
loop
jns
sbb
mov
xor
add
inc
hlt
shlb
lcall
jns
xchg
xchg
imul
fmul
scas
in
mov
dec
enter
jo
mov
fwait
int3
add
sahf
mov
sbb
lods
and
or
sub
sarl
mov
std
or
inc
out
and
repnz
adc
sahf
pop
mov
and
jecxz
jmp
add
sbb
in
adc
js
push
int3
pop
push
mov
test
jmp
inc
popa
add
loop
int
shr
sub
call
pop
xor
lods
ds
and
mov
clc
cltd
stos
aas
inc
adc
jnp
add
pusha
mov
mov
mov
dec
lea
stc
pop
rcrl
aam
out
and
mov
sbb
push
subb
nop
in
pop
lcall
dec
dec
ret
es
mov
add
dec
and
sti
cmpsb
shll
xor
movsb
lds
cmp
cmp
sub
add
jle
fstpl
rcrl
les
lret
cmp
cmp
and
lahf
cmp
sbb
outsb
shll
add
adc
pop
and
aad
and
je
pop
lcall
mov
mov
mov
mov
fimull
out
pop
imull
xchg
push
cs
pushf
movl
dec
aaa
fadd
lcall
xchg
jo
mov
adc
ljmp
and
push
pushf
sub
ficoms
xchg
or
jne
push
xor
std
insl
lret
mov
jp
push
cs
stc
je
popf
mov
negl
sbb
xchg
inc
cmp
adc
adc
push
fld
inc
ljmp
inc
popa
xor
imul
pop
jg
xchg
int
gs
jp
les
or
je
int
mov
fcmove
add
mov
add
pop
mov
lock
inc
mov
setno
dec
repnz
insl
clc
or
daa
jp
push
mov
mov
push
jle
mov
sti
insl
cmp
jo
popa
mov
inc
push
leave
scas
cmp
or
mov
jbe
jge
pusha
cld
xchg
in
out
mov
mov
sbb
dec
fists
jno
push
adc
iret
or
in
and
pop
cmp
and
subb
adc
jne
lret
arpl
addr16
push
xor
out
inc
mov
push
sub
loop
scas
pushw
test
dec
jo
add
mov
pushf
or
movsb
jle
adc
hlt
repnz
imul
ret
sub
mov
clc
sbb
loopne
sbbb
and
and
mov
enter
fnstenv
pop
mov
push
mov
cwtl
adc
push
outsl
int
push
cld
sub
mov
repnz
ret
scas
push
mov
insl
mov
mov
insb
fcom
aad
lahf
icebp
inc
leave
push
dec
js
jbe
inc
xchg
xorl
inc
add
in
sub
popa
lock
cmp
movsl
push
xchg
jnp
mov
ret
mov
scas
orb
ljmp
lret
cmp
cmc
arpl
xchg
jo
or
add
mov
xor
sbbb
push
psrlq
inc
cli
aas
sar
or
in
bound
mov
xchg
adc
scas
mov
cmpsl
sahf
jnp
or
inc
in
hlt
push
pop
and
or
mov
push
pushf
mov
ljmp
scas
cwtl
jmp
subl
pusha
mov
iret
lcall
fsub
and
inc
push
lret
outsl
mov
jns
movb
push
pop
in
xchg
pop
cmp
sub
push
adc
xor
mov
sub
mov
xchg
out
data16
imul
je
std
cmp
mov
adc
sbb
out
leave
cmp
js
xchg
mov
test
lahf
clc
pop
ret
sbb
or
stos
pop
jmp
les
pop
fnstenv
test
rcl
lea
das
xchg
cmp
dec
jg
rorb
cltd
cmpsl
imul
insb
neg
dec
ja
mov
lods
ja
jne
test
xor
arpl
pop
jae
xchg
jle
out
cmp
pop
loope
mov
loop
xor
xchg
lods
pop
movsb
dec
inc
mov
pop
dec
cwtl
cmc
cmp
mov
stos
jo
outsb
dec
pop
add
arpl
pusha
sbb
into
xchg
add
push
dec
cmp
lahf
jl
adc
mov
adc
jle
cwtl
loope
jecxz
lcall
aam
scas
push
lahf
movsb
add
repz
dec
sub
sub
fldl
mov
stos
or
roll
adc
mov
daa
loopne
mov
dec
jne
imul
mov
test
xchg
jecxz
pushf
xchg
or
or
jae
xchg
push
push
pop
bound
mov
clc
mov
add
jmp
push
shlb
test
jo
xor
xor
lds
loopne
jg
add
push
sbb
lret
movsl
pop
jmp
shl
push
mov
aaa
cmp
leave
jnp
in
pushf
add
insl
orl
dec
das
jbe
push
adcl
or
adc
mov
test
and
rclb
fwait
push
fwait
dec
sbbl
out
xchg
mov
mov
pop
cli
sub
cmp
ret
jge
sub
pusha
mov
ja
lods
in
dec
loop
cmp
add
jge
jmp
pop
push
rcrb
jle
dec
mov
inc
and
jecxz
jmp
frstor
and
test
jo
js
punpcklwd
jbe
fstp
popa
adc
xor
add
sub
add
in
out
sub
data16
outsb
jo
jno
xor
cmp
lods
bound
adc
jb
dec
mov
mov
dec
int
or
xor
es
push
aas
dec
in
ret
jge
inc
ret
or
mov
jb
and
cmc
sub
xlat
lsl
add
ds
xor
sub
inc
adc
mov
rorb
sub
fs
mov
add
cs
inc
mov
popf
clc
das
cmp
loope,pn
mov
icebp
push
push
jb
outsb
bound
pop
out
scas
out
rcl
mov
jp
adc
cmpsb
dec
and
sbb
dec
add
sub
iret
enter
js
cli
adc
daa
mov
ret
jae
call
xor
in
mov
sbb
mov
nop
repz
jnp
out
push
aaa
xor
jno
popf
jb
outsb
push
xor
in
sub
pop
and
or
int3
and
int
mov
sti
xchg
std
inc
lea
out
push
pop
mov
aas
xor
pop
cli
js
popw
mov
idivl
sub
mov
imul
outsb
or
dec
cmp
mov
mov
add
pop
push
notb
mov
mov
jmp
jo
adc
jmp
std
sub
pop
mov
xchg
dec
arpl
in
inc
and
out
outsl
fs
dec
push
jns
imul
loopne
push
and
mov
inc
xor
cmpsl
cs
fsts
xor
sbbb
mov
xchg
test
sub
or
insl
sub
or
xchg
gs
inc
mov
or
or
xchg
lcall
sbb
aam
test
roll
jne
imul
stos
cmp
ds
fwait
movsl
push
cwtl
xchg
pusha
pop
adc
ds
or
mov
flds
sub
sub
xchg
shr
mov
rorb
popa
js
jbe
fdiv
idivb
mov
inc
xor
push
jb
shrb
dec
add
mov
out
into
lock
aas
push
mov
xor
loope
sahf
xor
push
ret
int3
inc
rorl
jg
adc
mov
jle
shlb
dec
sbb
sbb
mov
pop
insl
sbb
jg
jmp
lret
ret
inc
loope
mov
push
jo
add
aam
das
inc
lea
out
subb
mov
movsl
nop
aas
aas
fidivrl
inc
rcll
aam
pusha
add
jne
jp
sub
xlat
dec
lods
sti
out
scas
add
lds
push
sub
call
repz
movsl
sbb
pop
inc
or
ja
loopne
jne
xor
pushf
push
inc
pop
popf
sub
xchg
mov
mov
out
mov
fwait
cmc
lods
daa
pushf
les
test
insb
push
mov
pop
das
lds
push
jns
add
pushf
popa
addr16
xchg
data16
mov
inc
xor
jge
jno
and
jge
inc
sbb
cld
adc
divps
cmp
and
cltd
xor
and
add
xchg
and
mov
pop
sahf
icebp
adc
int3
hlt
sti
cmpsl
add
sbb
stc
or
outsl
stos
and
dec
sbb
and
imul
add
jnp
xchg
roll
xchg
mov
sbb
dec
mov
mov
outsl
xchg
pop
add
lds
sbb
sub
pop
xor
xor
fildl
lds
adc
cs
sbb
inc
pushf
test
add
mov
insb
and
lea
subb
sub
adc
xor
cli
push
cmp
push
faddl
xor
into
outsb
sahf
pushf
cld
lods
nop
flds
add
sbb
adc
sbb
sub
xor
sub
mov
pusha
iret
mov
cwtl
data16
fstps
lds
dec
push
out
jns
aam
lds
fdivl
imul
xor
movsb
sub
popf
pop
add
cmpsb
insl
cmc
lods
sub
sub
loop
push
or
push
pop
jmp
fnsave
jge
movsl
in
insl
flds
and
les
push
xchg
and
push
ret
notl
jge
push
add
add
test
sahf
sbb
xor
push
stc
frstor
jecxz
mov
sbb
jbe
and
sbb
push
dec
jno
mov
cmp
test
incl
mov
dec
arpl
fcomip
sahf
imul
aas
jns
test
out
imull
test
hlt
movsl
std
push
sbb
fwait
pop
cmc
stc
and
test
cmp
jnp
insl
mov
mov
outsl
les
lcall
punpckhwd
dec
and
lock
cmpsb
lock
or
jge
mov
idivb
pop
pop
mov
lds
bound
xor
cmp
fwait
test
mov
pop
mov
int
movb
in
mov
mov
or
mov
sahf
mov
icebp
iret
jmp
icebp
fmul
mov
sub
pushf
orb
add
adc
jae
lods
mov
mov
push
test
sub
loop
pop
adc
mov
jnp
sub
fidivl
in
int3
pop
lea
jg
cs
jl
add
sbb
mov
cmp
in
dec
sbb
in
cld
add
xchg
popf
adc
dec
mov
pop
lahf
aaa
sub
inc
xor
ljmp
scas
pmaddwd
xchg
fwait
sbb
arpl
mov
dec
cltd
and
enter
frstor
nop
insl
testl
shrb
ficompl
out
xchg
adc
xor
adc
arpl
inc
mov
xchg
mov
std
adc
loop
stc
fisubs
inc
ss
mov
stos
mov
test
xor
dec
dec
dec
mov
mov
adcl
sarb
scas
ret
cmc
dec
out
mov
mov
mov
stos
cltd
xchg
jl
lods
aam
xor
push
out
inc
cmp
mov
mov
in
scas
jne
popf
test
pop
sbb
ja
test
es
xchg
mov
jmp
dec
push
xor
dec
pop
lods
in
push
test
mov
incl
xor
lods
mov
cmp
push
inc
in
cmpsl
mov
nop
movsb
adc
and
or
outsb
xor
je
fimull
sahf
fwait
inc
sbb
xchg
pushf
mov
and
icebp
notb
leave
dec
rcl
cmp
sbb
inc
push
jnp
dec
imul
rcrb
pop
dec
add
repnz
stos
movl
mov
jne
and
pop
push
bnd
xchg
test
bound
js
out
ja
stc
mov
mov
inc
xchg
pusha
push
sbb
in
dec
push
stos
xor
mov
fdiv
xchg
dec
xor
xor
jno
in
aam
test
clc
jg
test
dec
or
out
jle
mov
addr16
push
rcll
and
fidivrl
stos
sub
xor
ss
inc
xchg
lods
pop
pop
and
add
jb
lahf
faddl
scas
or
inc
or
test
push
mov
xchg
fsts
add
jle
cmp
xor
js
out
lcall
outsl
jns
cmp
insb
mov
xchg
ret
into
xor
fimull
leave
push
rcrl
mov
insb
and
inc
cmp
popf
ds
loop
sbb
in
stc
test
mov
xor
ja
push
lods
out
mov
sahf
jno
dec
aas
stos
iret
aam
adc
dec
imul
sub
mov
sub
es
shlb
loopne
into
ss
and
and
out
mov
and
les
dec
and
or
mov
sbb
xchg
shl
scas
enter
in
inc
jg
cmp
mov
jo
xor
xor
push
in
or
jnp
push
test
mov
mov
rcll
and
jne
and
push
cmpsb
sbb
and
xor
rcrl
scas
shrb
inc
push
pop
lock
dec
inc
aas
push
xor
lea
xor
addl
push
dec
or
fdivs
xor
lahf
jge
mov
dec
sbb
adc
hlt
add
add
addr16
lret
cmp
add
and
in
lahf
aas
pop
sbb
inc
fwait
ret
cmp
js
mov
mov
adc
cmp
sbb
sbb
xchg
in
lret
cmpsl
enter
loope
adc
fdivr
dec
push
sub
stos
rorl
or
and
popf
mov
mov
jmp
int3
je
add
jecxz
leave
mov
mov
xor
stos
jp
dec
hlt
stc
push
mov
push
cld
sub
aaa
add
cmpsl
jbe
cmp
adc
xchg
mov
imul
push
stos
dec
les
mov
push
adc
or
jo
lea
scas
xchg
sub
pop
js
xor
and
movsl
push
pop
mov
dec
jg
jge
jge
sub
popf
xor
xor
sub
cli
lahf
or
outsb
lret
pop
out
sub
mov
test
jno
pop
out
cmpsb
mov
add
push
ds
shrb
pop
xchg
scas
jmp
sub
fidivrs
fwait
test
jns
mov
repnz
das
pusha
mov
insl
or
outsl
jge
mov
mov
rorb
daa
cmpsl
inc
stc
mov
lahf
sti
xchg
xchg
mov
stc
or
mov
sbb
xor
mov
mov
mov
add
daa
dec
pop
mov
arpl
lret
push
mov
mov
mov
dec
push
cmp
fsubrl
sbbb
lods
incl
inc
sbb
mov
jl
dec
enter
loopne
jmp
fsubl
xchg
fidivs
xor
std
mov
add
cli
rcrl
mov
push
sbb
sbb
push
imul
lret
into
xor
and
mov
shr
stc
xchg
std
mov
sub
dec
adc
push
xchg
dec
add
mov
jge
xchg
pusha
rcr
scas
ret
into
data16
mov
ds
divb
mov
xor
lret
into
dec
rorb
sbb
push
or
cmp
pop
cmp
dec
cmp
ds
add
jnp
fisubrl
enter
movsb
or
rcr
and
jo
in
jecxz,pt
fcmovbe
pop
inc
test
int3
icebp
ja
ja
lods
jge
mov
push
shl
cmp
inc
dec
push
inc
inc
aaa
or
add
mov
leave
enter
push
add
jle
test
jmp
lock
jb
adc
mov
addl
les
imul
ret
inc
cmp
movb
in
pop
sahf
xor
inc
jb
mov
lret
inc
inc
xchg
mov
arpl
sbb
in
xacquire
jl
cmp
es
lret
sti
xchg
mov
sub
sbbb
addr16
sbb
dec
push
dec
mov
pop
jl
repnz
sbb
pop
xchg
cwtl
mov
mov
xor
mov
sbb
call
jno
mov
outsl
aaa
jecxz
cmp
xchg
in
adc
sbb
pop
cmpl
bound
ret
jno
fnstcw
adc
or
xchg
ret
cmpsl
pop
mov
test
fbld
lea
push
inc
add
push
fistpl
mov
out
inc
pop
pop
gs
jbe
rcll
xor
incl
lds
inc
pop
xlat
loopne
mov
icebp
ljmp
aaa
sub
negb
push
lcall
mov
adc
scas
ljmp
cmp
xor
mov
enter
pop
pushf
jbe
jne
jmp
out
fwait
mov
fdivrs
xor
mov
out
pop
lret
mov
dec
out
aam
std
or
movsb
sub
fdivrs
rorl
inc
adc
ret
out
movsb
push
xor
in
pop
dec
xor
sbb
js
sbb
inc
dec
jp
pusha
adc
sub
test
lods
mov
lds
sub
stc
and
repnz
xor
adc
mov
icebp
aam
adc
lahf
dec
sbb
adc
pop
gs
mov
nop
cmp
push
imul
or
arpl
and
xchg
cli
insb
adcl
mov
pop
and
push
sub
jl
aaa
nop
pusha
mov
into
xchg
pusha
sub
pop
mov
mov
jo
add
mov
out
mov
das
popf
and
push
pop
sub
fldl
inc
mov
test
pop
sub
insl
xchg
pop
rcrb
jmp
test
out
push
push
mov
popf
xor
mov
shlb
pop
call
xor
imul
jl
es
sub
ja
faddp
idiv
xchg
outsb
jmp
divl
push
test
outsl
sub
add
mov
outsb
sbb
les
jns
xchg
xchg
negb
jb
dec
sub
sbb
cld
xor
test
cltd
insb
mov
std
xchg
xor
fildll
and
cmpsb
test
xor
outsb
mov
pop
arpl
pusha
stos
add
mov
mov
mov
rorb
imul
xchg
or
aas
sahf
into
lcall
mov
or
cmpl
inc
fstpt
jecxz
mov
ret
jnp
pop
dec
gs
stc
dec
shrb
das
lods
sbb
pop
sbb
cli
iret
arpl
or
out
cmpsl
jns
test
pop
into
test
sbb
sub
or
sub
std
push
xor
mov
mov
stos
inc
scas
fwait
xchg
pop
in
mov
cmc
and
ret
cwtl
xor
or
ret
inc
outsb
jnp
xor
push
nop
repz
popa
iret
lret
les
es
pop
mov
rcrb
adc
xchg
sbb
test
xchg
out
data16
jno
cmc
mov
pop
or
dec
add
xor
jb
inc
fcomp
jnp
pop
inc
xlat
aam
or
sub
adc
jae
jo
mov
sarl
ja
xchg
cs
addr16
mov
xor
jb
popa
jle
pushf
mov
jp
rcrl
js
shrl
cmp
push
dec
sahf
xlat
push
stc
dec
xchg
cwtl
xor
lahf
stc
cmpb
mov
shll
vdivss
mov
or
icebp
ljmp
das
or
sahf
mov
add
inc
xchg
pop
jp
bndstx
jb
jle
arpl
jle
pmaxsw
mov
lret
sbb
stos
and
jp
xor
in
outsl
pusha
pop
mov
and
sbb
fsts
dec
adc
mov
sub
cmp
imul
pop
repz
jbe
ds
rorl
inc
and
mov
and
lret
inc
lret
sahf
inc
pop
sbb
pop
int3
sub
dec
sbb
lds
mull
out
adc
repnz
fwait
call
dec
loopne
aad
push
and
out
ret
aas
aam
xchg
xchg
adc
xor
arpl
aam
add
int3
pop
cmp
aam
xor
pop
pop
test
inc
lds
add
xchg
das
adc
sbb
lahf
pop
loop
push
daa
icebp
jg
push
or
add
lcall
lahf
js
cmp
ss
fstpl
sbb
adc
call
out
rcrl
xlat
push
negl
adc
xchg
xor
mov
push
shlb
pushf
inc
jnp
mov
hlt
ret
adc
cmpsb
in
or
push
add
adcb
or
lods
nop
testl
jb
clc
mov
dec
mov
fiaddl
jae
or
aas
xchg
lea
lret
test
sarl
insl
mov
out
cmp
xor
es
int
sbbl
push
and
add
xchg
fstl
mov
lcall
mov
clc
dec
adc
jge
cs
and
mov
js
or
inc
fidivl
or
frstor
cmp
pop
cs
es
outsb
lods
sub
pushf
shrb
mov
sbb
lcall
sub
xchg
mov
int
sub
loop
dec
jbe
cmpsl
mov
inc
push
test
aad
push
and
sbb
jg
inc
jmp
fwait
and
ja
cmpsb
clc
push
dec
fldl
clc
fsts
sub
nop
add
mov
jg
aad
mov
mov
rorl
addr16
jnp
stos
jecxz
cmp
hlt
jnp
xchg
dec
aam
stos
xor
push
mov
xchg
inc
pop
mov
lods
pop
cmp
mov
dec
and
cmp
cld
cmp
jbe
cmp
ret
divl
stc
sbb
xor
adc
or
fisttpl
shrb
das
loopne
mov
push
mov
lcall
push
jge
jb
in
pop
inc
cwtl
inc
es
jne
in
xor
orb
jge
pop
ret
mov
stos
pop
xchg
inc
add
mov
je
imul
xchg
jp
addr16
pop
pop
mov
movsl
cmpl
loopne
jecxz
add
lcall
mov
ja
insl
xor
inc
pop
lods
xchg
cmp
fistpll
xchg
pop
std
call
and
jne
inc
iret
std
aad
inc
adc
sarl
outsl
dec
jmp
lcall
or
jae
int
sbb
xchg
clc
sar
add
xchg
xchg
push
mov
mov
and
rcll
and
inc
adc
popa
rol
aam
jg
pop
jnp
adcl
das
ss
sti
add
ljmp
jbe
and
push
das
xor
dec
stc
jnp
test
push
or
cwtl
insb
mov
aam
mov
and
cmpl
push
clc
repz
aas
mov
sbb
je
mov
mov
adc
jg
lods
mov
mov
iret
sub
dec
mov
aam
leave
scas
xor
pop
jmp
fisubrl
push
sahf
fstpt
ret
push
and
pusha
popf
inc
inc
dec
pop
mov
inc
xchg
push
loope
jne
hlt
outsl
icebp
jne
lea
fwait
out
fdivrp
test
mov
mov
dec
enter
imul
or
nop
pop
out
or
mov
outsl
pop
imul
scas
xor
cmp
sbb
xchg
testb
pop
and
in
cli
addb
lret
sahf
jne
or
call
xabort
cmp
or
out
repnz
inc
adc
packuswb
shr
fimuls
daa
cld
cmp
pop
ja
and
push
xor
xor
push
mov
incb
inc
jo
adc
leave
ljmp
cmp
outsl
les
and
or
mov
xchg
jg
push
and
sarb
lds
or
push
push
mov
bound
push
push
mov
movsl
rol
push
inc
mov
rol
push
mov
out
idivl
mov
pop
daa
movsl
in
xor
jle
out
sbb
push
add
es
mov
cltd
xchg
cmp
in
add
push
dec
lret
in
jl
rorl
fiadds
sub
mov
rcrb
adc
or
repz
push
insb
sbb
and
dec
inc
pop
stc
aas
cmp
ret
inc
arpl
push
js
jb
pop
mov
jmp
lret
sarl
cld
movsb
sbb
clc
arpl
out
addl
adc
mov
cmp
fst
orb
push
xchg
add
mov
je
xlat
jmp
xchg
out
pop
dec
xor
cmc
inc
lds
inc
ds
xchg
shld
inc
fdiv
jmp
fcoms
aas
fldenv
andl
or
in
enter
jp
and
cmp
push
iret
mov
pop
pushf
pushf
out
sub
nop
pop
enter
fistpl
mov
out
stos
pop
les
jns
sti
cmp
in
add
mov
stos
push
add
out
and
pushf
fcompl
mov
and
or
test
add
lea
into
mov
fs
insb
in
test
iret
ds
add
scas
out
js
sub
pop
leave
dec
leave
repnz
fcoml
pop
mov
pop
sbb
popf
loope
test
in
imul
pop
lock
adc
or
adc
loope
inc
or
dec
stos
mov
ss
movsb
cs
packuswb
lret
xchg
sub
adc
or
mov
leave
xor
add
jno
ja
add
dec
rcrb
jmp
xchg
cmp
fnstcw
outsl
adc
cwtl
jnp
xor
notl
leave
sti
cmp
mov
rcl
pop
popl
sbb
dec
mov
mov
dec
mov
dec
popf
jne
push
loope
ficomps
mov
popa
cmpsl
jnp
sarb
mov
movsl
aad
xor
fs
out
push
sbb
mov
cmc
sbb
inc
imul
aas
and
xor
add
call
fiadds
mov
jae
enter
adc
movb
sbb
jl
add
sti
addb
sub
stos
enter
push
xchg
add
push
leave
rcl
aas
push
into
xchg
testl
dec
enter
pop
cmp
adc
sbb
mov
mov
push
pop
or
lret
inc
mov
pop
xchg
mov
out
cmc
and
or
fadds
adc
outsb
add
clc
dec
ljmp
ret
lea
test
pushf
push
inc
or
jge
fstl
loop
pushf
xchg
mov
jns
mov
call
and
push
pop
adc
sbb
push
stos
loope
xor
fwait
inc
and
push
cli
lcall
inc
ret
mov
sarl
xor
add
test
int
or
je
add
xchg
push
mulb
xor
adc
jae
popf
mov
ror
clc
sub
mov
in
popf
mov
and
mov
mov
daa
hlt
loopne
sub
mov
inc
rolb
repz
enter
sahf
shrl
sbb
xchg
addb
mov
movsb
int3
adc
mov
dec
stos
shlb
in
add
ljmp
mov
inc
xor
inc
mov
jge
les
bound
push
xchg
jno
adc
jmp
int
fbstp
jno
scas
hlt
lret
cmp
movsl
pop
popl
mov
mov
hlt
dec
and
xchg
testl
pop
mov
mov
lock
jle
jnp
inc
sbb
inc
test
sub
inc
test
pop
push
xchg
sbb
mov
outsl
into
jg
bound
pop
cli
mov
xor
sub
shlb
subl
pop
or
sbb
cmp
aam
inc
mov
lcall
sub
jo
rcrb
mov
mov
or
jmp
notl
sbb
mov
in
cmp
push
nop
out
mov
sub
add
dec
push
pop
push
std
lahf
movsb
xor
cli
pop
jae
mov
mov
fidivs
mov
sbb
jecxz
out
in
bound
ficompl
adc
pop
sti
mov
mov
push
jbe
adcl
cltd
sbb
bound
shl
shll
outsl
sahf
pop
aaa
mov
icebp
inc
dec
push
int
jnp
and
fcmovnb
fwait
hlt
daa
scas
pop
aam
divb
aad
pop
xlat
mov
cmpsl
sbb
adc
hlt
adcb
sub
mov
test
jo
inc
scas
je
lret
jg
adc
jno
call
jb
xor
mov
stos
mov
arpl
cmp
or
xor
insl
mov
pop
or
mov
cli
cmc
jl
aas
mov
ret
insl
in
sbb
adc
mov
cld
insl
mov
or
in
or
fisttpll
les
mov
or
cmc
push
out
insl
addr16
lods
fists
mov
push
lock
sbb
pop
repnz
pushf
cmc
pop
into
dec
pop
dec
movsb
les
push
lret
add
scas
out
sbb
in
xchg
push
fdivrp
jp
adc
and
pop
daa
das
xor
push
xlat
xchg
lahf
pop
push
jp
insl
lahf
daa
mov
inc
mov
popf
pop
rcr
add
scas
inc
ljmp
xchg
fsubp
mov
fdivl
movsb
fwait
int3
pop
push
mov
xchg
inc
inc
scas
mov
orb
jbe
mov
xor
dec
push
cmp
adc
and
daa
jp
popf
cmp
hlt
add
xchg
psrlq
je
cld
or
cltd
sbb
subl
add
ss
call
pop
mov
daa
aad
cmp
pop
jns
and
adc
pop
dec
sbb
or
sbb
xor
add
dec
sub
lahf
sahf
sarb
fst
inc
sub
ret
mov
sub
outsb
aas
stc
inc
aaa
dec
idivb
or
out
pop
sahf
cmpl
inc
mov
lcall
adc
mov
adc
movsb
jb
test
push
xor
bound
in
add
fdivl
js
sbb
je
xchg
clc
and
inc
dec
fmul
adc
jne
cwtl
jmp
and
push
fcoms
or
jp
cmc
cltd
jge
mov
ss
push
les
jo
test
sub
leave
movb
js
cmp
lods
and
loopne
data16
xchg
xlat
ja
push
push
pusha
roll
lock
inc
aas
cwtl
shlb
fists
mov
ljmp
ficoml
fidivrs
lret
push
and
or
sbb
inc
jne
ret
mov
jbe
dec
sub
adc
daa
lods
fdivs
and
lret
mov
call
jle
dec
mov
jns
and
shl
test
jo
or
movl
int
xchg
sbb
fwait
in
sub
xor
jns
xor
xor
stos
push
jge
in
pop
jp
dec
ret
mov
inc
movsb
out
dec
push
test
add
shlb
repnz
lods
add
imul
lea
xchg
outsl
cmpsb
ds
out
pop
and
cwtl
in
or
adc
aad
hlt
pusha
add
int3
cmpxchg
mov
out
sub
fnstsw
fcmovb
push
push
mov
cld
jmp
xor
lahf
repz
pop
mov
ss
xchg
test
out
pop
pop
shlb
add
inc
mov
loopne
mov
les
repnz
jo
inc
fimull
outsb
daa
mov
xchg
mov
ds
mov
arpl
adc
mov
add
jp
inc
xchg
leave
mov
xchg
addb
pop
add
iret
or
cs
pop
cwtl
or
jbe
les
lds
out
jp
mov
sbb
out
pop
inc
lret
movsb
adc
out
pop
fldenv
mov
push
pushf
mov
sbb
lret
gs
sub
leave
xor
call
mov
stos
div
inc
sbb
jnp
lods
leave
pusha
data16
adc
cld
or
std
insb
mov
hlt
mov
arpl
int3
mov
out
outsb
fsubr
fs
lahf
cmc
insl
xchg
add
outsl
mov
sub
loopne
adc
jne
ljmp
aam
cmp
pop
mov
jnp
lds
cwtl
inc
hlt
pop
push
sub
fisubrs
testl
xchg
jle
add
sahf
sbb
gs
rep
ljmp
js
outsl
xchg
in
cli
pop
push
lret
sub
adc
jb
inc
inc
pop
daa
int3
scas
cmp
dec
outsb
sbb
jg
fs
mov
inc
cwtl
and
fsubrl
stos
sub
lcall
popa
xchg
aaa
sub
iret
inc
lods
jo
and
mov
pop
push
jmp
inc
pop
shl
lcall
mov
fcoms
lret
mov
frstor
loop
mov
int
into
jnp
jae
dec
push
mov
das
mov
push
xlat
fildll
rolb
insb
adc
push
test
and
push
cmpsb
aas
scas
mov
pushf
aad
sbb
test
and
xor
cmp
loopne
push
sbb
inc
out
dec
push
rolb
mov
push
aaa
mov
mov
push
sub
dec
daa
je
sahf
ret
andb
xchg
scas
sbb
aam
lret
cltd
lahf
ds
fistpl
push
loopne
fiadds
cmc
mov
mov
sbb
sbb
call
and
jge
out
iret
push
mov
test
jae
xor
jl
sub
or
add
add
or
stos
sub
push
adc
ss
inc
shrb
add
nop
aad
out
ret
xchg
std
add
fcompp
xor
fs
cli
xorl
cwtl
loope
adc
stc
sbb
xlat
lods
mov
sub
das
cwtl
iret
add
jg
inc
push
sub
adc
mov
mov
push
or
aaa
hlt
mov
dec
hlt
ret
or
cmpsl
sub
adc
stos
mov
or
add
das
pop
shl
pop
bound
sbb
push
add
sub
xchg
adc
inc
out
fs
dec
cmpsb
mov
aad
loop
lcall
cmp
or
repz
xlat
insl
adc
pop
sbb
dec
rcll
call
cmp
sub
and
cwtl
test
xor
sub
shll
scas
sti
enter
lods
mov
xchg
jbe
and
std
and
xorb
loope
lods
divl
pop
cmp
cmp
mov
popa
popa
mov
xchg
out
scas
sti
pop
xlat
push
repz
insb
mov
pop
lahf
cmp
pop
in
mov
test
lahf
insb
mov
mov
das
mov
les
adc
in
push
lock
iret
inc
aad
jae
push
repnz
outsl
xchg
ret
clc
aaa
mov
cli
loopne
lcall
push
lds
push
les
icebp
sarb
or
shrl
enter
notl
cs
sbb
mov
inc
test
dec
into
mov
add
inc
jo
sbb
adc
cmp
xor
subb
jg
adc
pop
xor
inc
outsl
test
mov
mov
in
jnp
jmp
jbe
jmp
pop
bswap
aaa
iret
mov
xchg
mov
outsb
jecxz
mov
repz
dec
adc
sub
push
push
inc
ja
test
pop
or
mov
sbb
cltd
pop
push
mov
outsb
dec
and
enter
push
stos
iret
adc
cmp
outsl
outsl
idivb
cwtl
pop
imul
mov
push
enter
data16
mov
mov
jbe
mov
aad
in
in
jne
inc
push
mov
adc
cld
icebp
pop
inc
ss
mov
adc
fidivl
or
fdivs
cmpsl
mov
into
mov
inc
jle
or
outsl
jp
and
ja
addl
popf
cmpsb
pop
sbb
jge
mov
cmc
shrl
movsl
les
pusha
sub
lods
cmp
dec
xor
pop
ret
cmc
fmull
cmp
aam
fsubl
scas
cmp
jge
test
cmp
and
enter
push
sbb
repnz
cmp
cmpsb
enter
aad
or
fst
mov
jmp
pop
clc
testb
fistpll
xor
lods
out
inc
mov
sub
fimuls
mov
hlt
iret
or
push
movsl
jecxz
daa
movsb
js
stc
imul
mov
mov
push
or
pusha
dec
test
stc
pop
cmpsl
negb
fists
cmp
fwait
andb
stc
sub
mov
push
mov
add
and
fistps
bound
frstor
jecxz
xor
out
inc
insl
add
pop
inc
sbb
jl
stos
outsb
js
pop
mov
mov
das
dec
loope
and
sub
xchg
xchg
lods
stos
subb
shll
dec
pop
fisttpll
jae
rcl
mov
mov
mov
inc
add
frstor
js
jg
sbb
cmp
xchg
jp
sbb
push
sub
sub
lcall
jle
jle
es
mov
into
or
std
cmc
and
gs
or
stc
lods
xlat
fwait
pop
rorb
xor
xor
push
dec
mov
inc
sbb
inc
aam
add
shl
inc
sbb
mov
out
lret
repz
movsb
pusha
cmp
jmp
or
cmpsl
stos
stos
xchg
xor
iret
inc
fisubs
xchg
mov
leave
inc
jnp
out
dec
aas
add
pop
cmp
adc
and
push
xchg
es
xor
pop
mov
mov
vpand
cmpsb
cmp
pop
inc
fidivrs
add
lds
stc
mov
btr
iret
in
hlt
ds
jne
add
cmp
in
js
test
sti
jl
enter
inc
jnp
imul
ss
outsl
das
lods
or
call
inc
inc
adc
mov
roll
pop
xchg
movsl
leave
adc
call
stos
adc
mov
adc
mov
pop
in
bound
mov
dec
pop
mov
pop
minps
test
lret
test
int
or
jae
xchg
mov
adc
mov
or
push
daa
pop
xor
test
jae
daa
inc
pop
and
sub
mov
inc
loopne
hlt
dec
or
fs
xor
mov
rcr
roll
pop
daa
pop
in
sub
xor
add
jae
pop
push
cmp
add
dec
lret
pop
jle
and
out
ja
cmp
out
mov
mov
lds
testb
repnz
dec
nop
adc
or
adc
push
loop
jne
push
mov
cmpsb
dec
mov
das
jp
push
fs
mov
and
jno
jae
faddl
popa
sub
iret
call
push
push
pop
jo
fidivs
ret
insl
or
and
stos
mov
clc
pop
cmp
jle
mov
adc
push
imul
inc
shlb
in
mov
mov
pusha
cmp
mov
sub
jns
ljmp
imul
nop
mov
addr16
arpl
cli
jge
and
xchg
fisttpll
adc
xor
push
mov
add
insl
mov
or
dec
mov
cmpsl
andb
adcb
shll
sub
or
mov
push
cmp
imul
push
icebp
lcall
or
sub
push
adc
fbld
mov
push
mov
xor
mov
push
add
push
mov
mov
mov
or
sbb
push
out
push
outsl
fwait
xchg
xchg
dec
test
inc
pop
insl
mov
dec
enter
cmp
pop
pusha
leave
push
bound
dec
pop
enter
ror
jne
cmpsl
add
pop
and
outsl
pop
cld
in
int
xchg
xchg
sbb
scas
xor
pop
or
mov
ljmp
and
jo
dec
inc
inc
xor
mov
data16
mov
jbe
and
lods
or
xchg
xchg
mov
xchg
outsw
mov
out
mov
in
ret
int
xor
cmovs
jp
mov
loope
das
pop
in
cs
pop
or
daa
or
leave
xor
imul
aad
xorb
gs
jae
repnz
dec
cmpb
xchg
xchg
sub
cs
pop
and
out
sub
adc
inc
cld
addl
add
inc
xchg
xor
adc
xor
insb
inc
xchg
and
popf
adc
mov
sbb
out
leave
aad
ret
test
std
shlb
in
cmp
ljmp
sub
jge
push
mov
xchg
hlt
push
add
aad
imul
pop
xor
cltd
xlat
push
or
ret
out
sbb
fisubrs
mov
xor
mov
push
mov
xchg
pop
mov
test
rcl
test
adc
bound
add
imul
cmp
adc
scas
xchg
insb
movsl
or
in
jg
imul
xchg
hlt
fsubl
jl
ret
xor
mov
jne
stc
enter
push
cli
sub
int3
je
into
arpl
xchg
aas
mov
ljmp
mov
int
mov
enter
mov
add
rcr
cld
sahf
daa
cmpl
lcall
inc
test
cmp
test
inc
mov
nop
call
scas
mov
xchg
xchg
jge
test
or
out
add
jns
stos
cmp
test
lahf
adc
mov
insb
dec
sarl
mov
stos
xchg
pop
push
aam
testl
popf
xor
or
sbb
ret
xor
mov
xor
and
imul
pop
sub
add
pop
fcomps
ds
xchg
mov
mov
std
inc
popa
and
add
inc
int
mov
mov
out
shlb
xor
inc
pushf
push
cli
movsl
mov
xchg
mov
jae
outsl
aaa
movsl
or
cmpb
and
push
scas
stos
sahf
stc
sub
rolb
lea
scas
mov
mov
push
out
mov
pop
loopne
cmpsb
int
jo
cmc
rcrb
cmpl
dec
ljmp
and
inc
in
iret
clc
add
xchg
popa
inc
jns
dec
lods
cmp
xchg
subl
sub
sbb
js
or
dec
xor
fwait
shlb
sub
in
fsubr
cmpsl
addr16
sub
push
ficoml
push
dec
repnz
dec
out
movsb
mov
shll
enter
out
push
and
lcall
or
push
push
in
in
into
cld
cmp
lret
int
sbb
or
lret
and
xchg
xor
cmp
mov
jp
mov
imul
popa
faddp
and
ret
out
fs
pop
jmp
pusha
push
jb
bound
and
inc
fcompl
or
or
out
pop
xor
push
xchg
mov
xor
inc
xor
adc
cmp
pop
fstps
aad
sub
popf
push
jp
lods
jecxz
pop
sbb
out
inc
dec
push
sub
mov
push
mov
push
lret
push
inc
mov
cwtl
test
mov
cmpl
mov
mov
test
xor
xchg
sahf
sub
push
adc
xlat
push
iret
mov
mov
add
jns
or
sarb
xor
lock
into
mov
sbb
cmp
rclb
xchg
mov
push
adc
cmc
adc
lds
xchg
and
cmpsl
in
push
test
inc
mov
icebp
sbb
out
xchg
inc
inc
pop
lahf
leave
lods
inc
shr
outsl
cli
std
aam
out
repnz
out
jg
or
mov
sbb
cli
dec
mov
dec
mov
mov
xor
movb
cmp
insl
push
lods
mov
xchg
mov
cmc
fwait
mov
fstpl
mov
adc
mov
loop
and
cmp
mov
and
jae
out
lcall
fwait
addb
loopne
jge
stos
repz
push
or
hlt
pushl
sub
pop
mulb
mov
imul
xchg
inc
addr16
mov
sub
imull
ret
sbb
jno
sbb
aam
in
outsl
adc
adc
std
mov
sbb
cmp
inc
mov
jne
add
push
insb
xchg
addr16
fs
jg
dec
mov
aas
sbb
push
icebp
mov
int3
aaa
in
sub
sub
mov
pop
xchg
cmp
ljmp
and
in
inc
test
add
neg
mov
cmpsb
mov
push
push
add
jp
inc
add
jle
repz
push
gs
xchg
mov
mov
inc
lods
shl
iret
add
mov
aas
mov
adc
enter
dec
cltd
dec
xchg
push
ret
mov
test
jnp
fneni(8087
enter
mov
cmp
mov
push
das
repz
das
mov
cld
cmp
xor
sbb
stos
add
and
adc
cmp
js
jae
sub
push
mov
int
inc
push
cmpsl
xor
daa
pop
stos
adc
mov
adc
mov
mov
test
stos
stos
cmp
dec
in
lret
xor
adc
je
sbb
sbb
mov
stos
aaa
fsub
or
sbb
lahf
icebp
adc
xor
andb
es
lea
in
inc
test
or
std
push
rcrb
cmpsb
mov
in
es
rcrl
and
js
subl
cs
push
decb
sub
mov
cmp
pushf
mov
lcall
add
and
adc
mov
cmp
ret
add
push
idiv
popf
add
repz
fldenv
mov
ss
mov
stc
pop
cmpsl
adc
sub
shrl
mov
mov
mov
das
data16
mov
movsl
ss
mov
fwait
icebp
insb
xlat
repz
cmp
pop
lcall
jb
fs
int
shlb
sub
sbb
mov
imul
and
dec
push
sbb
sub
into
pop
xor
sbb
add
pop
jl
push
xlat
mov
mov
cmp
dec
cmp
icebp
xor
mov
ja
fs
pusha
adc
mov
jmp
jnp
mov
xchg
cmpsl
push
inc
sarb
sub
add
mov
enter
arpl
arpl
fs
loope
xchg
pop
gs
imul
fs
cs
lret
jo,pn
jb
or
sub
std
imul
push
lret
add
out
int
imul
mov
xor
xchg
rolb
mov
or
test
rcll
push
xchg
mov
movsb
pop
inc
adc
rcrb
cmp
lds
dec
add
int3
xchg
xor
and
push
ja
jmp
rol
mov
sahf
bound
aad
ret
mov
mov
xor
pop
sarl
jge
dec
jne
pop
cmpsl
mov
jle
mov
or
jmp
sbbl
push
cmpsl
cmp
xchg
pop
imul
push
sub
xlat
fistps
jae
push
push
pushf
xlat
fwait
pop
adc
xchg
push
aaa
imul
jne
and
xchg
cmp
in
pop
popf
push
ret
cmp
cld
mov
je
loop
in
mov
ss
xor
in
mov
stos
xchg
mov
inc
cwtl
loope
xor
sbb
lds
sbb
jmp
cmp
mov
sbb
or
aad
jne
sbb
data16
push
cwtl
dec
xchg
cmp
push
sbb
pop
xchg
push
outsb
int3
push
incb
ss
rclb
pop
addr16
test
popa
stc
imul
and
inc
mov
inc
push
push
stos
in
stc
push
push
jno
nop
das
loope
icebp
adc
mov
sbb
ret
mov
xchg
cld
sub
sbb
or
mov
clc
out
pop
or
insb
pushf
and
ljmp
fldcw
push
in
dec
sti
mov
xor
shr
xchg
test
arpl
mov
push
and
jne
sub
add
add
dec
cmp
pop
dec
pop
adc
pop
xchg
loop
mov
mov
cmpsl
jne
inc
mov
push
test
mov
dec
cmpsl
xor
jno
cli
mov
lods
lds
jnp
ss
lock
mov
adc
clc
clc
mov
sub
xor
cmp
mov
scas
mov
mov
stc
mov
repz
sub
cmp
call
and
lea
push
xor
rcrl
in
hlt
xchg
lock
shl
fbld
imul
jle
fs
pop
mov
loopne
loope
imul
mov
movsl
in
addr16
lods
or
dec
outsb
push
sbb
movsb
sbb
imul
xor
mov
fsubs
lcall
stc
xchg
lret
dec
imul
sub
jmp
cmp
xor
add
test
dec
cmp
or
loop
mov
xchg
add
insl
lret
popa
push
dec
mov
test
jne
jmp
negl
jmp
and
jns
mov
loope
std
mov
lods
sub
test
or
mov
mov
movb
jge
sbb
imul
xor
add
int3
mov
fsub
fcmovne
mov
fcmovnb
fdivs
cmp
mov
pop
aam
mov
pop
imul
mov
insb
xor
dec
dec
mov
xchg
xor
les
push
sahf
fildl
mov
cmpsb
push
shlb
loopne
inc
lods
repnz
in
or
sub
sarb
imul
mov
pop
mov
int
push
adc
lretw
cwtl
mov
mov
mov
pusha
inc
sub
cmpsl
push
out
pop
das
mov
pop
xchg
pop
int3
push
push
sti
cltd
adc
sub
mov
addr16
inc
fdivrl
fnsave
enter
mov
mov
xchg
dec
xchg
movsb
mov
imul
in
jbe
enter
pop
iret
into
push
dec
mov
sbb
test
ss
push
adcl
pop
lea
inc
imul
dec
adc
mov
xchg
pushl
cli
inc
mov
test
je
out
test
push
jo
and
fidivrl
fsubrl
repz
cmp
pop
lods
fcmovbe
mov
push
jnp
sub
xor
xchg
sub
cmpsl
in
push
jae
stos
enter
xor
xor
jmp
adc
fcompl
adc
dec
lock
notl
xor
pusha
push
push
xchg
sar
stc
xchg
enter
sti
in
cmp
mov
xchg
cli
mov
lret
outsb
ljmp
xor
fidivl
sti
and
add
lcall
out
fdivr
cwtl
sub
pop
leave
cwtl
test
jl
push
jnp
push
add
inc
stos
movsb
in
es
add
in
outsl
in
iret
cmp
sbb
push
or
pop
cs
lret
pop
outsl
aas
xorl
mov
loop
cli
jge
sub
pop
imul
sub
ljmp
adc
and
sub
push
xchg
rcll
in
pusha
adc
popf
sub
adc
xchg
repz
mov
leave
pslld
mov
cmp
lea
add
movl
sbb
sub
add
pusha
notl
les
mov
repnz
addb
add
jle
ljmp
xchg
sbb
sbb
jmp
fs
sub
xchg
outsl
mov
test
inc
jecxz
pusha
or
sub
inc
hlt
int
insb
mov
inc
popa
out
insl
shll
lret
jmp
and
enter
push
outsl
cmp
int3
ljmp
pop
and
ljmp
dec
jp
aam
popf
lods
inc
dec
mov
mov
sbb
sub
lret
das
sbb
cmp
push
pusha
cli
cmp
ffree
mov
jno
pop
in
pop
lret
inc
cmp
cwtl
and
pushf
xlat
repnz
imul
mov
es
mov
sbbb
rolb
xor
push
jb
nop
and
lds
cwtl
mov
or
xchg
mov
stc
mov
repz
mov
je
sbb
or
push
scas
inc
loopne
in
push
divl
lods
test
cltd
sbb
inc
mov
push
sub
into
inc
jno
popf
adcl
daa
stos
std
ret
gs
rcpps
fisttpl
shlb
push
in
pop
adc
xlat
adcl
xchg
cli
mov
xor
movsl
cltd
in
sarb
sbb
idivb
push
jg
mov
mov
ss
ljmp
popa
out
xchg
mov
mov
jmp
mov
ret
adc
sbbb
and
mov
xlat
addl
xor
cmp
inc
decb
cmp
js
mov
cmp
push
adc
jae
xchg
dec
popa
or
addr16
xchg
xchg
pop
stos
enter
adc
jg,pt
insb
xchg
jecxz
lods
pop
andl
pop
mov
jl
push
mov
dec
and
ret
aad
ss
pop
out
mov
pop
sbb
cmp
rcll
dec
inc
mov
xchg
xor
stc
and
sub
imul
push
add
fildl
out
ljmp
flds
ds
fmul
sarb
pop
roll
jb
add
xchg
adc
insl
cmp
jle
fs
fstpl
mov
add
push
imul
cmpl
sahf
mov
fbld
sahf
shrb
cli
je
or
out
rclb
jle
arpl
pop
test
jl
mov
mov
inc
fdivrl
dec
stos
jno
ror
popa
dec
or
sahf
mov
imul
arpl
fdivl
add
pop
xor
jecxz
jmp
add
in
out
insl
cmp
mov
cmp
int3
out
push
das
push
and
dec
xchg
std
cmpsl
or
shlb
push
xchg
xor
inc
jo
mov
inc
sahf
push
mov
pop
push
mov
mull
cmpsl
jns
mov
into
pop
enter
ljmp
add
or
js
int
sbb
mov
sbb
cmpsl
stos
insl
fcmove
lcall
sbb
xchg
push
mov
xchg
cli
and
sahf
mov
sbb
rcr
lds
mov
adc
xchg
mov
add
movsl
mov
ja
pop
cmc
call
nop
sub
icebp
psrld
lea
cs
dec
test
sti
out
rcr
xchg
repz
je
fstp
shlb
test
add
or
xchg
jle
adc
jbe
stos
xchg
cmp
clc
popf
pop
sbb
jo
std
push
out
and
sarl
pop
push
mov
sahf
shll
xchg
jmp
shr
cwtl
inc
push
movsl
mov
stos
mov
adc
cld
movsl
push
and
cs
push
cmp
add
dec
movsl
inc
xor
roll
addr16
dec
mov
out
outsl
out
inc
loopne
and
cmp
push
dec
in
pop
add
sub
push
cmc
push
arpl
movsl
in
lret
or
shl
stos
or
ja
mov
xchg
shr
fcoml
cli
pop
jecxz
push
sub
lds
mov
push
push
into
bound
dec
adc
sbb
ret
push
fcompl
lea
sub
dec
cld
xor
mov
push
imul
xchg
fnstcw
xchg
test
and
test
rorl
pop
scas
clc
pop
mov
aad
cmpsb
dec
rolb
dec
xchg
mov
mull
sub
cli
imul
xor
cmp
test
icebp
mov
testb
jnp
dec
pop
gs
movsb
movsb
ficomps
inc
mov
xor
enter
shll
int
push
mov
jecxz
shll
xor
call
das
lahf
xor
aaa
sub
adc
mov
movsl
aad
scas
jg
lsl
ljmp
mov
mov
rclb
insb
adc
cmp
and
and
add
in
neg
out
adc
outsl
stc
int
lods
mov
jne
ficomps
or
addr16
xabort
arpl
mov
insb
ljmp
xchg
hlt
cmp
mov
add
shlb
cmpsb
xor
sub
push
cli
sbb
cmp
outsb
cmpsb
stos
mov
push
aad
xor
notb
dec
lea
mov
roll
pop
insl
add
inc
out
and
aam
jecxz
push
std
stc
lcall
cmovl
je
adc
sub
and
cmp
hlt
shll
insb
popa
push
mov
sbb
dec
popa
int3
sbbl
dec
xchg
into
stos
incb
cmp
add
dec
mov
xchg
out
ja
stos
inc
mov
scas
lcall
sub
pop
arpl
ret
dec
std
mov
in
rcr
int
or
jecxz
xchg
pop
sub
gs
loop
push
sbb
iret
shrb
xorl
test
mov
loopne
aad
fadds
mov
in
inc
mov
mov
dec
inc
shlb
cmc
xchg
mov
das
shll
imul
jecxz
jmp
add
dec
sbb
fs
roll
push
jge
xchg
xchg
and
or
fs
mov
xor
pop
lock
add
movsl
mov
outsb
out
mov
or
lock
add
sbb
mov
mov
pop
mov
leave
fidivrs
xor
pop
cmpsb
push
and
movsb
jnp
mov
aad
lods
hlt
xor
inc
xchg
cmp
xchg
xor
imul
mov
pop
aad
pop
outsl
lock
mov
sbb
mov
jmp
adc
les
daa
dec
lods
adc
bswap
lahf
mov
dec
and
sub
inc
push
xlat
imulb
enter
adc
fwait
aaa
jbe
out
xor
sahf
jecxz
fiadds
mov
ret
cmpsl
hlt
fucomp
add
filds
fiadds
pop
ret
les
repnz
mov
jae
imul
sbb
stc
mov
pop
push
sbbb
xchg
push
cmp
mov
fs
adc
pop
cmp
pop
jnp
insl
dec
add
ret
sbb
test
mov
popa
ds
xor
sti
jb
add
push
cmpsb
repz
mov
ljmp
stos
lods
lret
decb
je
notl
sbb
ret
int3
mov
jo
es
test
es
gs
cltd
xor
testl
mov
jge
mov
sub
out
into
mov
out
inc
js
in
jg
lret
xchg
mov
aaa
dec
hlt
int
mov
pop
xor
xor
jl
and
idiv
in
in
popa
loope
pop
popa
mov
idivl
out
jbe
mov
outsl
pop
pop
test
iret
xchg
shld
data16
add
mov
movsl
mov
inc
adc
repnz
or
push
push
in
mov
mov
dec
mov
in
pop
sub
jno
or
xchg
mov
inc
cmpsl
sahf
cli
xchg
mov
les
xor
lea
push
mov
mov
cvttps2pi
cmp
xchg
ret
cmc
loop
aam
push
push
jb
xor
xor
mov
cwtl
jo
loop
sbb
ja
sub
cmpsb
sbb
lock
sbb
sub
fisttps
cs
out
mov
push
adc
jne
sub
push
ss
pop
mov
push
int
mov
sub
jp
jb
aam
and
pop
adc
mov
dec
jb
lds
or
cmp
push
cmp
mov
or
push
scas
movsb
xchg
inc
mov
or
or
or
shrb
out
and
aam
sub
test
mov
aas
cmpb
scas
dec
push
inc
dec
jbe
push
sysret
aas
sbb
adc
sbb
lods
mov
test
shll
fimull
or
nop
or
dec
jae
jae
mul
dec
lds
mov
jb
lods
sbb
pop
push
or
into
fmuls
rcll
pop
mov
ror
adc
adc
dec
sub
imul
xchg
loopne
mov
clc
fucomip
test
pop
movsb
jge
insb
rcll
cmp
pop
aam
mov
pop
sarl
arpl
adc
mov
inc
ss
jecxz
fisubrl
sbbl
mov
div
lods
jge
fs
rcrl
mov
adc
adc
cltd
mov
aas
repz
pusha
mulb
ds
ret
jge
pop
sub
sti
enter
sarb
dec
pop
imul
je
push
inc
push
out
imul
mov
xchg
jae
sub
lods
icebp
or
sbb
subl
xchg
in
and
or
repnz
and
or
or
pop
sbbb
mov
xchg
dec
mov
into
xchg
fs
inc
dec
and
clc
cmp
mov
imul
outsl
xchg
outsl
addr16
or
incb
cmp
jo
lea
mov
or
or
ljmp
pusha
outsb
jmp
popf
jp
cmp
shrb
stos
mov
sub
sbb
xchg
aam
xchg
sbb
mov
movsl
sbb
dec
push
repz
dec
ljmp
xchg
lahf
xlat
icebp
lcall
das
aad
sub
sbb
dec
dec
mov
cmp
jle
movsl
pop
pop
push
jns
sub
roll
icebp
ss
cmp
dec
lods
inc
in
mov
mov
shrb
rcll
js
imul
pop
aaa
mov
mov
cltd
rol
aam
mov
in
or
and
sbb
push
in
mov
das
mov
ljmp
jl
scas
inc
imul
je
push
nop
dec
fists
mov
cmp
add
scas
lods
popf
add
mov
cmc
jnp
sub
test
lret
insb
xor
ficompl
jne
add
sbb
dec
xor
loopne
dec
pop
insl
jecxz
adc
inc
mov
push
insl
jb
sub
pushf
inc
push
imul
das
dec
jnp
cmove
cmp
adc
mov
loopne
adcl
rclb
adc
xor
dec
pop
jecxz
sub
add
mov
push
test
adc
jg
icebp
aam
fcompl
clc
or
shl
sbb
insl
arpl
mov
lret
fldl
mov
xor
cmpsl
push
add
mov
ljmp
or
push
into
ss
ds
adc
fsub
in
dec
sub
jmp
loop
sti
int
dec
jno
adc
xor
fldenv
stc
repz
mov
std
cmpsl
sub
jecxz
cmp
xlat
mov
mov
pop
inc
out
cld
sbb
push
dec
mov
mov
mov
mov
dec
dec
xchg
dec
jmp
jg
sbb
add
mov
push
push
loopne
ret
jl
ret
mov
inc
xlat
lea
pop
push
or
loop
or
cwtl
and
cmp
add
sbb
ja
cld
and
sbbb
adc
cmp
stc
xor
or
hlt
mov
cmp
xchg
lds
jno
dec
mov
lods
pushf
les
hlt
lock
bound
jne
dec
scas
sbb
je
adc
rorb
shl
sbb
loope
pop
popf
mov
cmpb
sbb
sbb
mov
fs
subb
shrl
push
popf
bound
iret
mov
cwtl
aaa
cmpl
sub
add
data16
das
dec
icebp
ja
pop
pop
sub
cmpsl
mov
push
xchg
mov
pop
inc
xchg
bound
rorb
cltd
int3
xor
cmpsl
mov
fcompl
mov
arpl
leave
inc
clc
inc
pop
test
punpckhwd
inc
jae
in
rcrb
mov
lock
jle
push
clc
pop
fdivs
push
cmpsl
lcall
je
mov
sub
sbb
aam
inc
sbb
arpl
test
icebp
cmpb
orl
scas
call
jno
sbb
fsubs
dec
popa
popa
inc
gs
cs
das
stos
lret
rol
push
jb
sbbb
pop
cmp
push
jae
lcall
shrl
push
xchg
xor
cmp
scas
fnstsw
xor
cwtl
xor
test
clc
xor
cmp
or
or
daa
cmpl
xchg
mov
hlt
sub
push
push
mov
stos
out
pushl
mov
jae
xor
push
jnp
les
pushf
mov
sbb
dec
fldt
fidivrl
insb
sbb
les
bound
jle
pop
inc
pop
arpl
cltd
xchg
shlb
es
into
lcall
int
cmpsb
js
xchg
loop
popa
jmp
xchg
and
jne
xchg
mov
xor
xor
push
orl
outsl
js
and
stc
hlt
fldl
js
adc
ja
and
mov
in
mov
add
lahf
add
movsl
xchg
cmpl
mov
mov
les
xor
jp
imul
pop
nop
and
push
cld
pop
cmp
movsb
mov
orl
mov
and
mov
mov
mov
push
or
cmp
rcll
out
sub
push
dec
inc
pop
mov
je
cli
xor
hlt
clc
daa
roll
test
gs
aaa
aad
pop
and
inc
pop
sbb
and
xor
enter
cmp
sti
xchg
fistpl
movsb
and
pusha
adc
dec
xchg
xchg
xchg
lods
dec
xor
lock
ret
imul
lds
xor
jo
sbb
stos
mov
test
scas
push
mov
bound
xchg
js
or
out
jge
jne
cmpsl
lahf
jge
int
jp
mov
add
pusha
mov
mov
mov
push
addb
or
jle
icebp
mov
ror
pop
push
out
outsl
fwait
mov
jmp
repnz
out
push
fcompl
and
jae
scas
pop
pop
rcl
daa
sahf
stos
inc
xor
das
cs
dec
mov
les
mov
gs
adc
shll
fists
pushf
jae
xchg
pop
adc
push
cmp
repnz
push
cmp
hlt
sbb
rcl
stc
leave
or
mov
inc
scas
mov
xchg
add
pop
movd
push
jno
and
mov
iret
insl
cmp
aad
negb
outsb
push
ficoml
popa
xchg
repz
fidivs
inc
jge
icebp
mulb
gs
lds
test
push
add
test
out
xchg
stos
ror
call
fimuls
shlb
mov
inc
xchg
lret
enter
xchg
cmp
push
je
or
mov
pushf
mov
mov
daa
pop
pop
int
in
std
add
dec
mov
push
aam
dec
sahf
test
xor
mov
js
add
and
lods
xor
stos
jle
pop
gs
mov
imul
push
movsb
sub
push
mov
or
adc
testl
xchg
cmp
imul
lods
out
pop
fdivr
std
jp
push
mov
clc
mov
hlt
push
sub
xchg
test
sbb
jbe
jmp
xchg
add
out
mov
rcrb
jnp
push
dec
xor
inc
out
xchg
jg
mov
mov
xchg
push
inc
adc
xchg
loopne
pop
dec
or
dec
clc
loope
aaa
mov
fldenv
adc
movsb
sbb
scas
hlt
leave
mov
lret
jecxz
push
mov
push
rolb
adc
adc
ficoms
adc
mov
bound
into
stos
lods
mov
jne
sti
sti
dec
loopne
jl
xchg
xor
out
aam
loope
clc
inc
outsb
fucomi
cmc
push
aad
and
sub
mov
mov
scas
adc
xchg
fisubrl
sbb
addl
push
mov
aas
mov
pop
rolb
daa
fbstp
push
pop
sbb
inc
sbb
or
add
fwait
test
and
mov
add
mov
nop
add
out
sub
cs
pop
push
rolb
xchg
daa
push
lret
sbb
dec
lock
dec
sbb
frstor
outsb
cmp
push
icebp
xchg
pusha
lods
lods
push
stos
mov
jge
inc
pop
push
outsb
mov
aam
aas
jmp
pop
add
jne
jo
add
and
lock
cld
std
jg
and
out
mov
sahf
int
mov
sbb
jno
scas
jne
sub
sbb
sbb
xor
test
scas
add
gs
cwtl
fs
idiv
inc
rorl
outsl
pop
decb
outsl
xchg
pop
outsb
dec
cmc
push
sub
adc
push
popa
arpl
repnz
test
ret
sbb
cmpsb
mov
dec
mov
or
lahf
loopne
dec
sub
mov
call
or
xchg
mov
jb
test
outsb
bound
xchg
aam
jecxz
mov
push
xchg
inc
or
adc
mov
in
and
lods
ret
out
jb
lods
popa
notb
push
push
push
push
mov
push
je
push
sahf
outsb
xchg
aaa
adc
popa
push
xchg
fcmovbe
lods
nop
insb
cli
loopne
xchg
fsubrl
gs
dec
jb
sub
pop
mov
call
mov
cmc
cmpsl
stos
ljmp
pop
cltd
cmpsb
or
int
gs
push
mov
adc
fcompl
cmc
mov
pop
or
rol
ljmp
movsl
mov
aad
push
push
cmp
xchg
outsb
pop
hlt
sbb
add
popa
jb
nop
shrl
jb
test
jecxz
add
sarb
inc
jno
repnz
je
clc
jmp
inc
into
mov
pop
mov
xor
outsb
inc
push
mov
leave
pop
push
ljmp
mov
rcrb
out
mov
adc
addr16
inc
pusha
jecxz
movsb
dec
sahf
push
movsb
cmc
mov
lahf
loop
arpl
dec
mov
push
movsl
adc
sub
and
cmpsl
sbb
loope
ss
pop
enter
std
sbb
and
cmpsb
adc
mov
push
fsubs
unpckhps
sbb
das
insb
js
mov
mov
rorb
popa
fnsave
lock
jmp
jne
aaa
mov
push
pop
add
mov
and
jg
aam
shl
mov
adc
push
cwtl
jmp
rorl
test
cmp
jb
pop
dec
fldenv
std
dec
repz
mov
sbbl
fwait
leave
aaa
popf
jnp
ss
push
in
cwtl
arpl
mov
imul
dec
mov
std
lods
repz
pop
add
mov
jb
cmp
call
sti
sub
xor
pop
xchg
insl
mov
das
inc
lods
arpl
mov
int3
shr
jbe
into
ret
leave
adc
les
mov
repnz
cvtps2pd
jl
push
mov
mull
and
pop
sbb
ret
addr16
jno
fsts
das
cli
mov
stc
outsl
jnp
scas
shl
xchg
stc
sub
stc
jge
dec
mov
loope
xchg
leave
cmpsl
jno
push
sub
hlt
ret
push
mov
adc
push
imulb
movsb
jns
sbb
aaa
aad
cmpsb
push
pop
stc
aad
push
push
cmpb
dec
fldt
in
cld
push
mov
pushf
cltd
xchg
add
out
mov
loope
and
ret
cmp
inc
lea
mov
xchg
sub
repz
pop
mov
push
mov
xor
add
cmpsb
push
in
iret
lods
sti
push
adc
adc
cs
mov
pushf
es
add
scas
scas
stc
lds
in
mov
cli
mov
cmc
in
mov
lret
add
jb
mov
mov
xchg
jo
das
sbb
inc
test
mov
lret
aam
mov
xchg
int
push
push
popf
mov
jo
cmp
orb
cmp
and
shl
mov
stc
or
mov
imul
stc
xchg
inc
pop
inc
adc
loope
fdivs
pop
adc
mov
in
adc
cmp
mov
inc
fistl
ljmp
ret
xchg
inc
dec
icebp
jbe
lret
in
push
test
int
adc
arpl
pushf
adc
in
mov
sub
push
adc
adc
sbb
cmp
push
sbb
mov
cmc
or
cmp
and
pop
push
in
adc
mov
mov
cmp
push
subb
and
mov
fadds
adc
mov
xor
xchg
and
pop
mov
test
mov
xor
das
enter
ds
pop
repnz
sub
adc
outsb
addr16
into
jle
inc
xchg
pop
sub
cmp
sbb
ljmp
cmp
pop
loopne
dec
gs
push
jmp
and
sbb
cld
cs
mov
sub
scas
mov
pop
stos
jge
mov
lea
movsb
outsl
movsb
sub
push
fs
inc
mov
in
push
test
loopne
stc
mov
or
testb
dec
push
adc
dec
jl
pop
insl
std
dec
xor
push
cld
push
aad
push
lret
loope
pop
jg
clc
dec
test
inc
and
jg
pop
leave
push
jle
sub
sbb
sub
or
dec
aas
rcrb
cmp
sub
shl
bswap
in
sahf
leave
pop
push
push
test
pop
lods
fdivs
cld
ret
mov
les
insl
adc
imul
stos
adc
test
in
daa
mov
daa
push
shll
les
mov
push
mov
fdivs
shl
notb
push
dec
or
pop
in
sets
sbb
insl
int
sub
and
rol
stc
fstps
stc
add
and
push
popa
sub
xchg
cmc
mov
xchg
sbb
iret
es
xchg
push
int
add
imul
adcb
mov
gs
jg
add
ljmp
mov
jp
push
jo
adc
sub
dec
or
aad
xor
inc
jnp
xor
sti
add
or
adc
adc
call
lock
aad
fldenv
push
push
leave
or
aaa
sub
mov
mov
mov
xchg
insb
inc
jecxz
ret
inc
mov
aaa
jge
xchg
pop
movsl
repnz
div
cmp
sbb
rcrl
mov
mov
cli
or
dec
icebp
cmpsb
imul
fcoms
lahf
pop
mov
movsl
lret
test
mov
add
push
pop
imul
outsl
jae
or
or
mov
xchg
insb
in
gs
in
jae
xor
xor
popa
sub
sub
leave
sarl
popf
stc
push
mov
ljmp
inc
or
cmp
sub
lcall
hlt
xor
mov
or
pop
push
test
movsb
inc
mov
inc
push
cli
jecxz
rcrb
movsl
mov
or
push
in
xchg
ret
shlb
xchg
jns
clc
or
icebp
mov
pusha
pop
pop
leave
loope
push
sub
cwtl
xchg
or
adc
loopne
pop
mov
and
jo
mov
xor
iret
push
fldln2
js
inc
jmp
fcompl
out
stos
or
stc
scas
mov
fndisi(8087
adc
push
pop
inc
xor
and
cwtl
pop
out
mov
dec
jo
test
stc
das
call
add
mov
cmc
scas
xor
fwait
jle
dec
pop
mov
sub
jle
and
outsl
lret
pop
add
ret
sub
add
int
orb
xor
and
std
stc
insl
outsl
mov
test
xchg
cmp
out
mov
subl
aas
aam
into
nop
mov
cmp
ret
inc
pop
sahf
mov
adc
repz
insl
mov
gs
cmp
and
jnp
xor
cmp
mov
test
roll
mov
mov
ds
jle
movsl
sti
inc
add
mov
pop
dec
pushl
dec
rol
in
or
cmpsb
mov
push
fsubr
loope
icebp
add
icebp
test
mov
mov
stos
mov
and
mov
xor
or
mov
or
add
push
lret
lock
inc
jnp
push
mov
mov
daa
in
test
cmp
lcall
fisubl
adc
pop
popa
adc
cmp
lcall
mov
movsb
loop
cmp
mov
jne
pushf
cwtl
xlat
or
mov
lret
shll
xor
mov
outsb
shlb
inc
fs
sub
mov
xchg
fsts
and
in
scas
divps
mov
rol
or
sbb
push
pop
out
sub
xchg
mov
and
std
jecxz
xchg
sbb
ja
adc
nop
std
movsl
jecxz
cmp
mov
outsl
adc
stc
leave
call
add
pop
xor
mov
cld
je
mov
or
mov
lea
xor
fwait
pop
xchg
dec
arpl
jnp
shrb
arpl
cld
repnz
pop
mov
push
loope
pop
popa
sbb
loopne
sub
fsubrp
in
push
test
imul
test
add
jp
xchg
js
fcoml
imul
sbb
repz
or
pushf
imul
sbb
cmpsb
fs
adc
mov
js
push
fstl
inc
adc
pop
lock
sub
icebp
scas
dec
cmp
cmpsl
lahf
imul
mov
fcoml
mov
ret
add
xchg
shlb
xor
sahf
rcrl
shlb
inc
sbb
dec
fs
cmp
jnp
cmp
mov
pusha
xchg
call
push
mov
into
subl
sub
stos
mov
mov
das
push
xlat
insl
inc
mov
or
cmp
or
xchg
imul
insb
lret
mov
xorl
mov
cmpsb
shll
loope
dec
cmpsl
cmpsb
push
movsb
mov
insb
fsubr
mov
mov
out
xchg
in
scas
out
mov
sub
movsb
pushf
xchg
dec
pop
or
aaa
es
jne
div
movsb
cmp
fs
push
and
dec
stos
or
xchg
push
insl
inc
and
adc
das
imulb
jp
adc
pop
mov
push
in
dec
mov
pop
lds
xchg
jl
mov
and
mov
sub
cwtl
mov
sti
popa
int3
daa
sbb
adc
rolb
cmp
mov
and
dec
jle
pop
mov
sti
inc
jl
mov
xlat
int
jl
lea
sub
lahf
sub
xor
pop
pop
mov
jl
push
adc
hlt
lret
and
cmp
xor
or
aam
jae
out
jmp
mov
int
aas
inc
fildl
into
inc
scas
or
shll
es
pushf
shl
mov
mov
sbb
cmp
mov
inc
add
mov
stos
sti
and
stos
xchg
add
test
lahf
add
ds
add
xchg
aam
push
mov
and
andl
pop
andl
jne
mov
ljmp
jae
add
mov
inc
ja
jecxz
mov
sbb
push
jle
inc
rorl
sub
jecxz
incl
add
test
movsl
fisubs
push
xchg
mov
sub
xor
jecxz
dec
push
inc
lds
push
call
lret
loop
pop
cmp
push
fisubrl
mov
xchg
ret
and
icebp
jae
adcb
pop
mov
mov
mov
xor
das
xor
jbe
popf
mov
mov
sti
xchg
adc
shrb
sahf
mov
sub
scas
das
cmc
es
das
or
enter
mov
mov
xor
mov
sbb
pop
cmpsb
push
add
fidivl
xchg
jno
cwtl
push
test
mov
push
xchg
mov
icebp
pop
sbb
sbb
pushl
cmp
out
mov
cmpsl
insl
pop
in
jns
notb
dec
xchg
mov
insl
xchg
sub
sahf
sbb
pop
nop
sub
and
mov
dec
sub
xor
jge
pop
pop
movsl
lahf
mov
loop
pop
and
outsl
push
xchg
daa
repz
lock
jmp
sub
sub
fwait
enter
sub
loop
inc
addl
xor
push
inc
cmpsl
xchg
xchg
mov
mov
lret
and
and
xchg
lea
push
aaa
test
dec
es
jmp
or
jns
mov
mov
fstpl
les
test
cmp
lret
sbb
mov
imul
mov
cmp
xlat
jae
loopne
or
dec
ja
and
xchg
cmc
scas
fldt
and
out
jl
subl
out
and
adc
push
roll
dec
js
cltd
mov
xor
ds
aaa
aad
mov
mov
mov
inc
mov
jmp
dec
andb
sub
shlb
mul
es
insb
and
lds
data16
divb
jns
jecxz
loope
add
lds
jecxz
or
dec
pop
ds
vcvtss2si
scas
test
mov
iret
mov
add
popf
xor
sahf
clc
sbb
jle
mov
xor
pop
cmpsl
imul
in
jbe
and
lret
mov
nop
or
push
cmp
jnp
repnz
faddp
fimull
push
cwtl
negb
cmc
cmpsb
inc
sbb
insl
cmp
imul
fwait
cwtl
dec
fstpt
pop
subl
sub
jno
xor
fisttpl
daa
mov
movsl
inc
ja
add
jnp
inc
pushf
jne
jecxz
orb
or
jecxz
mov
push
fwait
iret
inc
pop
dec
lds
jmp
addr16
bound
filds
fld
rolb
rcrb
into
test
push
dec
mov
xlat
stos
aad
mov
int
push
mov
pop
aas
cmpsb
jnp
in
adc
cmp
in
out
pop
push
pcmpeqb
js
out
and
lret
lds
sub
mov
or
xchg
lret
shl
push
adc
or
je
test
outsb
iret
jmp
adcb
ja
pop
ficomps
daa
xchg
icebp
xchg
cmp
dec
jne
dec
sahf
je
push
loop
xlat
xor
or
popf
inc
cltd
mov
cmp
in
mov
or
dec
jg
sbb
jns
pop
xchg
pusha
xor
loopne
in
stos
pop
ljmp
or
inc
js
dec
and
popa
roll
subl
push
outsb
adc
pop
and
aaa
movl
fstpt
aas
push
fst
inc
ja
repnz
xlat
or
mov
rcll
pop
sub
lods
xchg
xor
jmp
dec
test
add
iret
pushf
mov
mov
sbb
push
pop
xchg
loopne
ljmp
inc
mov
out
cmp
les
stos
cltd
dec
lea
in
mov
cmp
mov
sbb
mov
pop
mov
push
leavew
out
pusha
pop
pop
lods
loope
cmpb
mov
mov
jb
out
or
xchg
jb
or
int3
cmp
jg
test
loop
lods
cmp
mov
xchg
popf
lcall
loope
adc
push
and
repnz
cld
movsl
fildl
ljmp
push
imul
cmp
jl
jae
stos
sets
scas
sbb
movsb
mov
int
sub
aas
dec
push
lock
mov
data16
out
mov
idivl
xor
adc
push
adcl
or
sbb
loope
in
fdivr
jnp
push
jbe
pop
stos
and
pop
test
stos
push
xchg
ds
mov
stos
fdivr
push
mov
fs
dec
fcompp
jge
adc
out
loopne
and
xor
xchg
testl
pop
out
mov
pop
pop
fildll
inc
jl
jo
cmpsb
pop
push
les
hlt
cmpsl
dec
or
cmp
mov
jp
or
mov
sar
adc
movsb
fildll
sbb
xor
sub
xchg
shlb
jge
mov
lea
jns
cld
iret
mov
int3
push
ficompl
sub
lcall
xchg
cmp
insb
fstpt
add
aas
dec
in
jns
xor
mov
inc
inc
into
insl
cmp
call
sti
stc
loope
stc
fadd
xorb
dec
mov
pop
and
fiadds
int3
and
es
out
push
or
or
mov
mov
pop
mov
sbb
and
dec
dec
and
cli
int
jo
push
sbb
and
mov
insb
dec
aad
or
enter
loope
xchg
sarl
je
fsubs
cld
sarb
orb
pop
sti
out
sti
mov
mov
mov
jnp
out
imul
and
aad
add
shll
out
mov
in
fidivl
cmpsb
lods
int3
clc
sahf
movsb
sahf
pop
cs
mov
sbb
stc
jl
push
sub
aaa
dec
scas
dec
adc
push
wbinvd
mov
jno
cmpsb
pop
out
mov
popa
outsl
push
inc
cwtl
adc
mov
push
fstp
cltd
cmpsb
add
pop
jne
scas
movsb
pop
xor
mov
xor
cs
js
lea
testl
inc
jae
xchg
jge
scas
add
stos
std
inc
add
lods
add
insb
adc
insl
sbb
mov
out
mov
rcll
insl
dec
pusha
sbb
jbe
and
xor
cli
neg
jg
sarb
xorb
add
lret
mov
adc
pop
dec
pushf
into
pop
arpl
cmp
and
loop
jne
test
loop
cs
adc
pop
jnp
pushf
or
cwtl
iret
pusha
cmc
sbb
das
je
sbb
mov
in
and
nop
dec
call
adc
adc
and
xchg
jb
cld
das
shrl
rep
and
xor
int
mov
subb
loope
add
sbb
and
push
adc
dec
cmp
imul
add
dec
insb
fcomps
push
popf
jge
loope
xchg
scas
lods
ss
sub
and
scas
ljmp
mov
inc
add
clc
jno
pop
add
mov
and
fstps
imul
fists
fistpll
sbb
shll
hlt
lcall
ss
push
jmp
xchg
pop
cli
pop
and
int3
dec
lods
jnp
cwtl
dec
push
mov
mov
lods
xchg
pusha
xchg
jl
jno
inc
addr16
xor
out
lcall
add
addr16
xchg
fs
popf
mov
je
push
dec
dec
pop
sub
ss
cmpsl
popf
inc
in
test
outsb
adc
inc
pop
lret
push
cmp
pop
mov
mov
cmpsl
push
sub
mov
push
mov
pop
add
int3
insb
xor
aad
sub
mov
fpatan
mov
ss
inc
xor
xor
xor
mov
stos
lock
loope
push
es
fists
push
outsl
cmp
insl
xor
addr16
mov
mov
stc
xor
std
ret
cmp
sub
out
jecxz
into
xchg
test
mov
and
sub
xor
push
aam
scas
adc
inc
int3
les
in
ret
sti
test
cmp
rcll
push
lods
andb
outsl
cwtl
sub
push
notl
fsubrl
sbb
pop
cmp
push
mov
cli
and
push
jno
dec
mov
xchg
push
in
insl
test
clc
popf
adc
xor
pop
and
es
outsb
cmp
xor
or
lods
mov
cli
shrb
pushl
sarl
cmc
stos
or
push
loop
jno
enter
jg
xor
sbb
mov
mov
mov
or
fisubrs
push
daa
std
stos
test
xchg
adc
sahf
dec
sub
adc
cmpsb
stc
xchg
xchg
jmp
cmp
stos
pop
test
push
pop
call
daa
xchg
mov
mov
out
adc
xchg
shll
xchg
and
jbe
ds
std
jbe
fstl
adc
inc
cmpsl
sub
add
push
sub
fcmovbe
outsl
ret
mov
and
cmp
mov
dec
and
test
and
loopne
mov
xchg
testl
cltd
jp
xor
inc
mov
ret
jo
daa
lods
or
xchg
or
xchg
ror
push
addr16
inc
adc
enter
cmc
fwait
test
mov
or
jge
mov
sbb
test
call
mov
addl
nop
push
push
dec
out
fiadds
cmp
mov
in
push
xor
loopne
pop
mov
push
cmpsb
xchg
repz
mov
pop
sbb
jne
popf
inc
in
subl
je
mov
xchg
cmp
sbb
sub
les
mov
jecxz
inc
push
ret
pushf
lods
lret
pop
inc
mov
pop
out
mov
cmp
xchg
scas
scas
in
mov
xorl
pop
repz
lret
je
pop
jnp
or
aad
scas
rcrb
test
push
stc
add
sub
imul
loop
lds
enter
mov
add
push
dec
andl
jb
pop
pop
push
mov
mov
add
mov
xor
bound
jno
out
in
movsb
aaa
mov
insl
push
inc
pop
inc
inc
or
leave
lret
fsubrs
bound
out
and
in
aas
adcl
mov
sbb
adc
push
loope
lock
call
mov
pop
lods
jbe
add
imul
push
mov
loopne
jge
jno
bound
pop
icebp
insb
inc
xor
out
mov
pop
sub
lcall
adc
ljmp
mov
in
inc
divl
cmpsl
xor
add
leave
sub
sbb
xchg
jbe
test
cmpl
call
jo
ss
ret
inc
and
movsl
loop
push
lods
insl
xor
mov
push
dec
xor
stos
cld
cmp
sub
stc
jb
mov
movsb
in
inc
jl
fcmove
push
jle
and
mov
inc
sbb
sahf
test
dec
das
mov
arpl
shlb
adc
idivl
ljmp
sbb
sub
jp
add
iret
push
dec
repz
pop
xchg
popa
sbb
movsl
pop
jge
jbe
clc
push
adc
mov
jecxz
xchg
and
xor
sbb
xor
xchg
xchg
mov
filds
mov
fsubp
cmpsl
push
push
pop
mov
stos
xor
imul
ja
bound
cs
aas
jo
sbb
aaa
inc
arpl
push
je
pop
orl
and
jge
jp
imul
jmp
xor
cwtl
sbb
jg
sbbl
sub
test
addr16
cmc
aaa
xor
xchg
mov
arpl
jge
jg
add
add
and
and
rorb
nop
inc
cmc
int
imul
sbb
sbb
mov
push
test
pushf
imul
outsb
inc
mov
out
cmpsl
std
repnz
jns
jmp
inc
test
loop
repz
loopne
mov
xchg
pop
sahf
pop
sbb
sti
xchg
jge
imul
call
mov
mov
jmp
cmp
leave
in
push
lock
mov
jg
xchg
in
mov
test
sub
push
and
stos
test
or
ret
repz
std
je
sti
shll
pop
inc
cwtl
ljmp
lods
and
adc
daa
xchg
fdivrs
mov
cmpl
dec
subb
pop
andb
rcl
inc
xor
and
test
adc
sub
push
push
pop
add
add
xchg
pop
mov
xchg
into
push
push
stos
test
icebp
outsb
push
test
xchg
filds
and
mov
scas
or
jle
scas
mov
pop
sqrtps
data16
movsb
out
call
dec
or
outsb
mov
cmp
mov
test
pop
dec
pop
xchg
aas
push
inc
pop
pop
inc
and
add
fnstenv
or
jle
pop
mov
int
cld
sbb
popa
lock
ja
push
dec
out
xacquire
in
jmp
adc
gs
enter
in
daa
mov
push
push
gs
sbb
flds
lock
xor
shrw
add
push
inc
mov
jne
aad
cmc
pop
inc
sbb
push
nop
mov
hlt
mov
cmp
push
pusha
fiaddl
int3
mov
aad
and
sbb
adc
scas
pushf
or
je
sti
jp
add
or
dec
daa
add
push
xchg
repnz
test
daa
dec
lret
jne
ret
mov
aam
jns
push
enter
pop
mov
stc
aad
loop
jg
repnz
dec
or
pushf
mov
mov
lahf
push
loopne
lock
add
cltd
out
dec
jg
insb
sbb
sub
and
popf
scas
dec
out
add
pop
mov
adcb
inc
jg
xor
ja
dec
cmp
and
std
and
fnstcw
mov
jns
lods
loope
xchg
fildll
notb
xor
aas
push
cs
push
push
sub
and
sub
jle
push
out
stc
pop
xlat
pop
nop
fdivrs
pop
add
fdivl
dec
test
fwait
lret
lret
dec
std
xchg
sub
cmp
cmc
in
pusha
push
vsqrtss
rolb
pusha
adc
cwtl
repz
cmp
sahf
dec
inc
fists
popf
ror
and
push
sbb
repnz
std
bound
imul
cmp
inc
sbb
push
fistps
jbe
push
push
adc
lret
jge
adc
xor
jnp
or
movsl
imul
xor
cmpsb
sbb
sub
les
std
mov
xor
mov
sbb
pop
repnz
fildll
fisttpll
das
lret
lds
jl
rorl
xor
fistpl
cli
cmp
mov
mov
dec
cmp
push
mov
jo
fcompl
rolb
or
push
pop
aaa
or
ffreep
mov
pop
mov
or
das
out
dec
mov
mov
fcomps
inc
adc
push
out
mov
dec
and
fwait
pusha
pop
mov
add
fidivrs
pushf
aas
and
or
or
xchg
shrb
push
push
push
lock
xor
outsl
lods
xchg
xorl
mov
pop
add
cmp
lods
out
xor
or
xchg
mov
push
xor
out
mov
dec
xchg
push
xlat
or
push
imul
push
aad
pop
push
mov
out
mov
sahf
aaa
xchg
jle
dec
mov
addl
push
fst
jb
aam
adc
push
leave
sbb
jns
sarl
mov
push
test
inc
mov
jno
push
push
fidivrl
test
iret
pop
test
stos
jns
mov
and
push
xchg
dec
cmp
xchg
imul
hlt
mov
rcr
xor
clc
sbb
sbb
das
cmpsl
inc
xchg
xchg
les
negl
xchg
push
cltd
or
mov
fs
or
clc
loop
ret
xchg
sub
push
dec
adc
out
ljmp
insl
movsb
xor
cld
jns
imul
add
in
into
sahf
or
popf
cmpsl
add
inc
loopne,pn
or
jns
call
dec
shll
ds
shrb
repnz
loopne
out
aad
xchg
add
loop
std
rcrb
xchg
mov
lods
arpl
adc
cli
mull
push
jb
fistl
jg
mov
loop
inc
push
sbb
les
cltd
jno
mov
inc
mov
ds
pusha
pop
sbbb
sub
xchg
nop
xorb
repnz
jl
fldl
fildl
mov
push
jo
popa
cwtl
das
adc
mov
sarb
mov
jne
push
pop
sar
sub
push
sarl
push
data16
aam
inc
sbb
mov
fldt
in
pop
ja
add
mov
rcll
in
cmpsl
cmp
cmpb
mov
mov
lods
or
mov
popf
lret
stc
sub
addr16
outsb
mov
dec
dec
fucomip
mov
push
push
mov
push
push
movups
jbe
cmc
pop
pusha
leavew
fidivrl
in
stos
xor
sahf
cwtl
jne
xchg
fsubl
and
inc
shll
add
insb
xor
std
push
or
dec
push
or
dec
stc
cli
fldcw
sbb
arpl
add
mov
and
jcxz
adc
mov
or
and
mov
ss
jns
add
dec
test
xchg
cmp
fcompl
sbb
sbb
testb
jb
loop
xor
stos
das
idivb
popf
push
xlat
adcb
pushf
fdivrl
mov
test
aad
repz
pop
jae
imull
lock
int3
dec
inc
bound
dec
push
sbb
icebp
adc
pop
test
aas
sbb
std
subl
mov
mov
push
mov
fdivrl
out
es
adc
ja
sarb
lds
cmp
lea
mov
fildl
jmp
cmp
cmpb
into
push
and
mov
dec
lcall
pop
mov
sbb
pusha
mov
xchg
fbld
jmp
nop
inc
xor
jb
inc
jae
xchg
mov
lods
out
stos
scas
mov
in
jmp
add
mov
mov
imull
xchg
ljmp
aas
mov
lret
popa
push
clc
hlt
or
aam
inc
mov
push
sbb
push
mov
out
testl
adc
ljmp
aaa
sbb
push
lds
mov
mov
arpl
int3
xor
or
jo
daa
mov
cld
xor
xchg
add
adc
dec
js
fstpt
pop
out
fists
jle
add
sub
jne
xchg
mov
gs
adc
inc
repnz
mov
jmp
mov
cmpsb
adc
popf
in
push
mov
int
pop
fwait
ds
push
daa
jge
out
int
mov
cmp
xorb
xor
lods
adc
xor
xchg
addr16
dec
mov
xchg
fisttpll
fsub
push
mov
adc
outsl
inc
jmp
fwait
lock
aam
aad
cmc
pop
mov
ljmp
pop
aam
in
filds
jp
mov
inc
pop
out
push
xchg
shll
orb
fldpi
push
ret
mov
push
std
dec
xchg
mov
push
mov
mov
pop
ljmp
mov
inc
daa
ret
div
xor
mov
push
mov
xchg
movsb
cmc
aas
xor
add
insl
fcompl
divl
imul
sbb
mov
xor
lods
fsubr
push
xor
mov
mov
loop
lock
jmp
xor
fiaddl
shlb
aam
addl
repnz
cmpsb
add
dec
and
cs
cmp
dec
sbbl
inc
loope
add
fistpl
pushf
push
clc
ja
inc
push
pop
add
rclb
xchg
sbb
repnz
cmp
ficomps
or
jbe
pop
adcb
mov
mov
into
or
mov
pop
testl
push
roll
test
daa
inc
inc
pop
pop
add
mov
jno
inc
jmp
les
loope
pop
idivb
inc
lods
imul
fisubrl
aad
scas
xor
jo
in
clc
and
sub
push
cwtl
inc
stos
nop
test
in
mov
dec
dec
mov
jno
orb
mov
sub
jb
jnp
mov
lret
add
or
jl
lcall
popa
mov
popf
cmp
lcall
mov
or
aaa
mov
scas
adc
popf
cmp
fwait
jmp
pop
xlat
mov
popa
and
cmp
test
dec
adc
loopne
outsl
push
je
outsl
sub
mov
jl
movsb
xchg
dec
cmp
cmp
cltd
iret
iret
fiadds
ljmp
icebp
mov
and
test
sbb
adc
mov
lret
and
sar
jnp
leave
mov
cmp
push
mov
and
xchg
sub
outsl
ja
xchg
mov
in
mov
inc
mov
fadds
mov
sti
aam
les
adc
inc
lret
pop
mov
cltd
outsb
dec
popf
test
adc
fwait
mov
cltd
cmp
push
popf
jbe
mov
mov
in
adc
and
xchg
aas
or
inc
les
icebp
xor
inc
rcrl
int
or
cmpsl
pop
or
push
cmc
stos
int3
xor
jecxz
ja
repnz
add
cwtl
add
mov
jmp
les
xchg
xchg
cli
inc
mov
xchg
xor
gs
sbb
push
sbbl
mov
nop
add
push
adc
dec
jg
sub
xchg
leave
mov
repz
sbb
fs
inc
test
rcrl
adc
lahf
bound
jmp
cmp
in
push
sbb
jge
stc
negl
stos
jg
mov
lea
mov
jmp
add
cmp
cltd
loope
fcoml
cmovo
fisubl
mov
push
mov
sti
hlt
popf
loope
fnstcw
xor
sub
cmp
dec
pop
mov
fiadds
shrl
loop
mov
out
mov
or
cmp
lods
sub
out
insb
shlb
push
addr16
jmp
incl
mov
nop
andl
cmp
shlb
fldcw
dec
xchg
test
mov
outsl
call
in
in
or
jo
and
ret
mov
mov
stos
mov
pop
or
push
cmp
mov
jnp
clc
push
pusha
in
ret
leave
push
push
sub
dec
xor
dec
jns
mov
xchg
mov
lea
cwtl
xchg
fdivrs
add
mov
repnz
xchg
jne
sti
xorl
adc
push
xlat
movsb
add
sarl
jno
push
mul
inc
pop
or
mov
scas
andl
lret
fs
cmp
or
stos
ss
mov
in
mov
sub
xchg
insb
orb
lds
lret
dec
jno
pop
xlat
loop
in
arpl
jae
sub
jo
inc
push
dec
push
push
fldt
test
movsb
push
add
xchg
out
jae
insl
rolb
outsb
fwait
mov
mov
pusha
ret
lcall
aad
xchg
sbb
cs
inc
mov
leave
subl
data16
in
sbb
xchg
lds
test
push
sub
das
mov
add
ret
push
imul
dec
fscale
pop
leave
hlt
scas
xor
jg
mov
sbb
xchg
jl
adc
push
mov
pop
in
mov
bound
adc
mov
imul
xchg
mov
pop
das
ficoms
sbb
push
inc
mov
xor
inc
dec
je
mov
mov
loope
xchg
xchg
mov
in
in
mov
jb
xchg
adc
rcr
imul
fldenv
mov
pop
imul
mov
testl
jnp
cmp
cs
repnz
aas
jge
imul
js
ds
sub
jge
xchg
or
insl
or
pop
pop
pop
adc
adc
stos
ret
adc
and
ret
jns
sbb
adc
clc
mov
or
cmpsb
addl
pop
adc
in
loope
int
daa
xchg
lea
pop
sbb
jnp
and
addr16
mov
in
xor
push
stc
mov
mov
pop
int
mov
push
mov
out
mov
jmp
repz
mov
adc
stc
ret
js
lret
push
and
xor
fsubrs
or
out
mov
sub
hlt
mov
adc
jae
fistps
ja
mov
adc
test
sbbb
or
in
shl
cmp
or
gs
notl
mov
inc
out
pop
dec
adc
adc
and
pop
push
imul
jmp
cmp
imul
or
jbe
xchg
cmp
pop
iret
jne
in
push
push
or
push
mov
mov
outsl
loope
mov
bound
push
pop
rclb
repnz
stos
out
loop
ss
sub
stc
stos
adc
scas
rcll
push
push
jo
sub
jnp
push
outsb
dec
push
push
jns
cmp
ja
lret
sbb
mov
add
dec
out
mov
cmpsb
rolb
adc
pusha
sbb
fimuls
dec
idivl
cmp
test
push
into
mov
lods
sbb
and
xchg
add
rorb
icebp
sub
mov
cmpsl
sub
es
vmulsd
dec
push
into
shrb
pop
into
in
push
ret
sar
daa
int
imul
xchg
and
subl
adc
outsl
adc
lock
shl
insb
cli
xchg
xorl
fdivrs
and
dec
out
lea
popf
mov
int
les
into
push
mov
xchg
lds
in
hlt
xchg
fidivl
int3
loop
sbb
nop
or
data16
daa
inc
shll
test
push
scas
into
adc
mov
push
jle
js
push
in
addr16
push
fcoml
adc
sarl
hlt
cwtl
std
into
jge
mov
mov
and
fs
iret
or
mov
fcoml
sti
inc
sbb
or
ja
es
xor
xor
adc
xor
ficomps
call
mov
in
not
orps
dec
push
mov
cmc
icebp
pop
dec
popa
push
pop
jge
lds
mov
mov
data16
and
sbb
sbb
aam
mov
rorb
incl
adc
int
pop
sub
xchg
mov
mov
shlb
adc
loope
std
lea
pavgw
shrb
loopne
sub
sti
lods
fimull
push
xchg
data16
rcrb
mov
popa
int
xchg
mov
je
pop
adc
adc
mov
xchg
lea
dec
dec
pop
out
xlat
lcall
mov
dec
mov
inc
aam
mov
jp
adc
or
aad
movsb
cmc
daa
out
es
xor
aam
loop
lea
stos
xor
jmp
aad
mov
ljmp
in
push
jae
lock
add
jnp
scas
ljmp
cmpsl
dec
rolb
xchg
testl
into
jns
pusha
mov
mov
out
in
pop
inc
or
in
inc
into
jns
in
xchg
mov
mov
adc
xchg
sub
sbb
in
out
mov
push
mov
push
aad
sbb
mov
push
inc
xlat
jmp
sahf
repnz
inc
in
adc
inc
mov
mov
or
cmc
jae
gs
mov
cltd
rorl
xor
lcall
lret
int
iret
aas
mov
iret
adc
out
and
ret
pushf
fcoml
fwait
dec
xlat
pop
inc
sahf
in
fcmovb
push
sbb
es
lds
xchg
cltd
vpaddd
dec
push
inc
xor
mov
adcb
jmp
cmp
fsubr
cmp
xchg
cmp
push
pusha
push
lea
mov
inc
popa
andb
pop
sub
pop
jmp
cmpsb
rcrb
cmc
adc
mov
in
inc
repz
adc
stos
data16
push
push
imul
dec
push
cli
xor
cmc
repz
xor
dec
push
addr16
sub
mov
xor
jbe
sbb
pushf
rcl
sbb
fdivrl
loope
jmp
inc
test
jns
pushf
ret
cmpb
fimuls
add
cmp
int3
subb
jno
push
adc
pop
in
sbb
mov
cmpsl
cmp
push
jae
fldl2e
jl
xor
adc
push
or
xchg
subb
xor
mov
or
cwtl
insb
pop
in
jg
pusha
dec
sti
jmp
inc
mov
xchg
inc
mov
insl
mov
sbb
sbb
leave
xchg
adc
cld
jnp
inc
jo
out
push
pop
xchg
mov
xlat
inc
inc
dec
fidivrs
lods
and
cld
in
fstp
cmp
cmp
inc
lods
mov
push
and
or
ret
enter
negl
cmpsl
cmp
sti
sub
in
add
call
je
iret
movsl
xor
fimull
xchg
lds
shll
scas
sbb
shlb
sbb
gs
jae
lret
jb
add
xlat
inc
fwait
pusha
mov
sub
mov
jnp
pop
cmp
sbbb
jecxz
out
imul
xor
jge
inc
sahf
sahf
std
mov
outsb
je
inc
outsl
lods
repnz
adc
and
jns
and
push
es
mov
pusha
push
into
add
in
lea
incl
imul
lds
lock
and
nop
sbbl
hlt
std
push
mov
test
int3
inc
pop
pushf
cmc
movsl
and
sub
aaa
clc
test
cmp
leave
into
mov
push
mov
pop
repz
sbb
sbb
fsubr
sub
or
lods
fwait
in
cld
aas
xchg
add
out
dec
nop
std
lahf
sbbb
ret
push
mov
inc
test
out
jl
inc
mov
pop
push
bound
jl
dec
test
add
jnp
and
and
mov
ret
addr16
pop
ret
push
mov
movsl
stc
test
lret
pop
testl
mov
testl
lods
mov
mov
movsb
pop
aam
comiss
mov
xor
inc
sarl
fildll
lret
mov
lock
inc
shll
aas
fbstp
pusha
mov
lods
lret
inc
mov
inc
push
inc
cltd
stos
push
xchg
pop
mov
jo
insl
es
pushf
adc
mov
leave
aam
lds
pusha
shll
rcll
lret
jae
jecxz
mov
push
cmpsl
ret
sub
jo
test
xor
cmp
and
or
mov
fndisi(8087
adc
dec
lahf
xchg
in
sbb
bound
loope
bound
add
sarb
dec
testb
cli
aas
jno
cwtl
push
push
pop
xchg
stos
enter
ds
fcos
out
mov
inc
stos
xor
mov
xlat
test
or
or
lds
push
dec
jb
cmp
std
jae
cmp
js
outsl
clc
rcr
aad
ds
mov
adc
repz
jmp
push
pop
mov
int3
outsl
dec
loop
fstpt
mov
movsb
sub
jno,pn
mov
pop
push
adc
and
jge
adc
lock
rcrb
mov
jge
dec
push
dec
xor
arpl
jg
iret
push
ljmp
repnz
into
fidivl
fsubrl
jnp
add
inc
fildl
inc
pop
xchg
aad
sarb
je
mov
outsl
cmc
fmul
enter
or
jbe
sub
jo,pt
and
sahf
xor
pusha
dec
sub
mov
movsb
fwait
daa
movsb
std
sub
mov
ret
daa
add
sarl
sbbl
xor
sbb
push
lret
and
sub
ljmp
lahf
fiaddl
push
test
cmp
mov
int3
sub
jmp
push
cli
cmc
fst
popl
out
movsl
js
loop
cmp
cmp
push
mov
icebp
ss
xorb
adc
jne
insl
dec
cmp
dec
lods
push
mov
or
out
xor
pop
dec
add
insl
sbb
pop
fnstcw
pop
xchg
mov
rclb
add
repnz
fnstcw
jle
stos
xor
std
jne
mov
stos
adc
hlt
lea
pop
mov
mov
out
push
fidivl
lahf
mov
cmp
lods
add
mov
or
rorb
mov
mov
in
mov
lahf
fnstsw
loopne
or
pop
rolb
mov
dec
fiadds
mov
out
sub
jle
sbb
mov
loop
loope
push
lret
cli
push
adc
adc
add
dec
jno
outsl
repnz
or
insl
pop
jl
push
sbb
fcmovu
mov
sar
test
fisttps
and
cli
adc
ss
pushf
lods
cmpsb
dec
fnsetpm(287
mov
mov
jecxz
mov
push
sbb
faddl
xchg
sub
ljmp
test
das
sbb
sub
fildl
jne
outsl
add
ret
cwtl
sub
jnp
test
sbb
addb
jecxz
jb
rcll
in
mov
dec
xchg
jne
cmc
nop
xor
rclb
dec
clc
mov
jbe
xorb
xchg
adc
test
dec
push
add
cltd
sub
mov
int
je
cltd
sub
aad
jno
inc
int3
cli
xchg
dec
xor
inc
dec
add
push
flds
add
ret
scas
xor
rclb
push
addr16
roll
jo
cmpxchg
orl
notl
jns
inc
mul
outsb
int
push
and
pop
jge
in
adc
mov
cmc
stos
mov
push
test
andl
int
rol
mov
mov
push
push
addr16
cmpb
xchg
lret
dec
jl
adc
cmp
pop
orl
fidivrl
divb
cld
xlat
imul
or
pop
push
les
dec
pop
pop
pop
les
or
push
repnz
aad
mov
jl
arpl
bound
cmp
std
xchg
push
imul
shlb
test
repnz
popl
dec
and
int3
mov
xchg
test
sbb
ret
ss
orl
lods
lahf
jb
mov
cmp
in
pop
es
out
jbe
mov
jbe
testb
in
xor
jl
std
adc
mov
daa
or
sbb
mov
jg,pn
sub
push
xchg
js
inc
xchg
stos
popa
push
in
stc
jo
sub
adc
das
ja
lret
xor
mov
shr
pop
dec
lds
push
sub
mov
sbb
push
fidivrl
mov
aam
mov
fwait
cmp
lds
jge
xchg
iret
jle
test
imul
int
dec
cmpsl
or
std
lahf
stc
in
imul
loope
inc
sti
fxtract
cwtl
push
xor
pushf
pusha
push
cmpsb
icebp
fldenv
xor
inc
mov
insb
dec
rol
clc
imul
fwait
fwait
call
add
mov
mov
pop
inc
push
sub
mov
mov
inc
stos
inc
fsubl
xor
sub
out
cmp
int
popl
adc
inc
dec
jge
jno
pop
leave
negl
jns
sub
hlt
xchg
push
lret
rcrl
mov
cmp
outsb
fdivs
pop
lahf
shr
in
cwtl
add
xchg
loopne
js
scas
icebp
inc
cld
ljmp
push
outsl
mov
test
aad
sbb
xlat
lods
cli
das
call
lods
or
jo
jns
inc
pushf
js
scas
sbb
testb
sbb
in
mov
dec
shl
dec
int
sbb
mov
pop
shlb
clc
jge
mov
cld
xor
repnz
in
stos
pop
dec
jl
mov
pop
mov
inc
popf
mov
lahf
push
stos
jp
pcmpeqb
jg
imul
loope
ljmp
sub
test
icebp
mov
in
mov
or
rorb
or
push
das
jae
testl
stc
jge
jae
gs
sti
aas
jns
xor
xchg
push
out
jnp
inc
push
loopne
sub
mov
push
outsl
dec
xor
adc
mov
jmp
xchg
repnz
adc
pop
orb
cmpsl
lret
xor
pop
or
xchg
aas
stos
arpl
xchg
xchg
sub
push
int
push
or
add
add
fists
hlt
or
mov
sbb
fs
adcb
ds
fimuls
cmpsl
lahf
jmp
and
dec
ja
insb
int
cld
dec
cmp
daa
xchg
rorl
ret
jo
cmp
cltd
sahf
mov
push
jl
outsl
cwtl
mov
pop
mov
fsts
mov
pop
or
push
pusha
inc
int
push
mov
out
pop
sub
or
adc
in
dec
out
fisttps
push
mov
test
jns
or
dec
push
sahf
pop
insl
fs
dec
sub
jns
stos
cmp
out
xchg
and
ss
lret
ljmp
xor
pusha
fnstenv
arpl
fisubl
int3
dec
in
test
mov
fwait
outsl
mov
mov
fxch
cmpsl
sub
idivl
mov
cmpsb
imul
push
jle
insl
outsl
clc
cmp
jecxz
insb
push
idiv
fsubrs
ficoml
in
mov
mov
lds
mov
adc
test
inc
push
pop
pop
cmpsb
push
test
pop
jge
cmpsl
int
imul
inc
xor
shrb
fimuls
vpcomub
aaa
scas
xchg
pusha
icebp
mov
mov
mov
aaa
and
xchg
repz
pop
and
mov
push
out
xor
out
sbb
imul
fxch
and
mov
es
pop
popf
mov
xor
mov
sub
jae
cmp
cwtl
jge
fcmovb
pop
shl
std
stc
leave
add
addr16
sbbl
mov
lcall
mov
adc
mov
cld
cli
daa
test
iret
push
mov
aad
push
sbb
inc
into
in
aaa
fbld
mov
jno
gs
cmp
jo
lret
stos
lret
jle
mov
and
flds
sub
jle
and
inc
dec
loope
jae
pop
insb
shll
lret
jl
gs
shl
mov
shlb
nop
sahf
jl
int3
mov
jle
fldl
mov
jns
xchg
jbe
jbe
adc
or
dec
js
sub
sahf
sub
push
loopne
cmp
scas
sti
mov
xchg
js
aas
mov
int
test
xchg
leave
fdivl
addb
int
xchg
cwtl
or
push
xchg
mov
leave
inc
mov
push
or
fwait
dec
data16
dec
mov
ja,pt
xchg
push
sub
xor
pop
cmpsl
add
xchg
outsl
inc
daa
adcb
in
xor
test
popf
cmp
xor
lds
or
outsb
dec
mov
and
ret
cs
stos
jb
pushf
shll
mov
adc
jns
mov
dec
ficomps
addb
mov
stc
adc
inc
fimuls
ficoms
jb
daa
fldcw
mov
outsl
xor
aas
cltd
andl
sbb
clc
lahf
shrl
xor
mov
sbb
xlat
aad
sub
es
or
ds
stc
pop
cwtl
push
mov
add
aas
lods
decl
add
fdivl
inc
and
int3
daa
subb
cmp
fwait
and
ret
into
test
out
push
rcrl
sti
push
ds
mov
mov
pop
rcrb
stos
scas
sub
mov
das
jns
xor
insb
loopne
inc
lret
fs
adc
dec
mov
pop
int
mov
push
mov
pop
mov
pop
xchg
mov
cs
cltd
rolb
mov
sbb
cmp
mov
xor
pop
jne
inc
jb
lcall
cmp
bound
out
jb
out
and
mov
inc
jnp
clc
clc
inc
xchg
loope
dec
psrld
adc
outsl
dec
repnz
out
xchg
lret
imul
xchg
cwtl
in
pushf
pop
jg
ljmp
jp
testb
add
mov
xor
pop
inc
cld
adc
adc
std
or
inc
xchg
cmc
jb
xchg
inc
rcr
and
jbe
movsb
push
dec
mov
cmp
ljmp
adc
fiadds
mov
sbb
cmp
outsl
mull
repz
insl
jle
cmpsl
stos
nop
ds
in
sahf
test
dec
add
mov
dec
mov
mov
sub
cltd
das
loopne
daa
xor
dec
dec
neg
jmp
or
mov
mov
cld
pop
xor
mov
aad
sub
pushf
xchg
jno
or
leave
roll
jnp
jb
pop
mov
insl
pop
add
test
jbe
jno
cmp
xchg
pop
mov
pop
mov
pop
and
jecxz
aaa
adc
inc
lret
jne
in
dec
not
mov
mov
add
out
ret
mov
xchg
stos
repz
cwtl
push
pop
insl
pusha
ss
pushf
jbe
inc
jecxz
cmp
xchg
ret
xchg
lods
push
mov
adc
ror
mov
sub
jns
mov
lea
je
subl
sbb
cltd
pop
leave
or
enter
mov
mov
mov
fcmovu
cwtl
sub
jno
scas
xor
in
fwait
or
popa
scas
or
sub
mov
pusha
jnp
in
repnz
mov
dec
push
icebp
aam
mov
push
sbb
adc
loop
ret
lret
mov
into
stc
xor
xchg
lods
sub
ljmp
lahf
lea
and
ret
leave
mov
dec
inc
or
insl
pop
inc
push
and
scas
push
sbbb
xchg
add
mov
pop
negb
movsl
jns
mulb
movsb
fs
imul
loope
test
xchg
popa
or
or
movsl
and
or
push
fs
popf
cwtl
adc
sbb
shll
or
lcall
jno
scas
test
cmp
lods
cmp
vpcmpgtb
xchg
push
ja
xor
add
adc
push
xchg
sahf
pop
cwtl
mov
sub
paddsw
loop
test
mov
jmp
orl
notl
in
es
fldcw
outsb
sbb
aam
pop
stc
or
or
aas
or
out
cmp
pop
loopne
pop
in
mov
mov
pop
push
outsb
loop
rcll
cmp
xchg
sti
jbe
mov
mov
lcall
lcall
cli
lods
insl
outsl
jmp
cld
add
xor
gs
dec
cs
rcrb
mov
adc
or
loop
xlat
pop
push
sbb
lock
sbb
lret
jp
lea
inc
mov
or
push
test
loop
lcall
pop
lods
data16
xor
jnp
push
aam
push
repz
pop
pusha
push
std
cltd
sbb
enter
pushf
push
add
push
iret
xchg
loope
fsubl
pop
inc
test
out
addb
pop
mov
jecxz
inc
jp
xlat
jmp
insb
mov
aas
xchg
and
add
pop
jle
push
loope
cmp
iret
mov
xchg
add
jmp
pop
test
sub
cmp
jmp
call
mov
aam
shrl
fld
pop
or
shrl
movsb
add
pop
push
addr16
sbb
bound
cld
xchg
call
dec
push
jne
jecxz
stos
push
sbb
push
push
sar
fcmovnbe
and
pop
cli
jno
and
xor
mov
outsl
filds
popf
cmp
add
fistl
mov
mov
lock
fstps
xchg
rol
ljmp
xchg
add
xor
aad
ss
sbb
jno
mov
mov
stos
subb
dec
imul
sub
mov
or
mov
xor
xor
shlb
scas
rcrl
leave
and
add
fmull
aaa
or
mov
stc
or
outsb
jae
xor
mull
push
test
mov
and
xchg
cld
sub
mov
xchg
pmulhw
sub
fsubr
push
mulb
add
dec
jmp
push
push
js
sbb
sub
mov
mov
out
push
push
xchg
jne
xchg
fbstp
pop
jecxz
adc
and
repz
inc
fdivs
rep
push
mov
sbb
loop
js
jmp
pop
add
push
ds
mov
mov
sub
addr16
cmp
add
mov
fwait
rcll
jns
bound
xchg
jae
dec
mov
sub
cmp
or
cmp
sahf
addr16
sub
xor
pop
and
adc
dec
mov
sbb
sbb
hlt
or
sub
test
shrl
mov
xchg
loopne
sbb
and
int
pop
orl
repz
idivl
into
xor
mov
xchg
lret
aas
cld
lds
fsubl
mov
mov
cmp
add
add
xchg
mov
pop
lcall
dec
mov
cmp
push
jnp
jae
adc
scas
test
dec
mov
scas
in
xchg
mov
mov
push
repnz
mov
stos
mov
shll
dec
call
fdivrl
or
roll
pop
shrl
cmp
mov
pusha
popf
mov
stos
lret
xchg
mov
mov
call
sub
pop
sub
data16
xlat
imul
mov
sbb
or
xorl
push
aas
xorb
shlb
xor
jns
out
pop
push
inc
pop
and
addr16
sahf
mov
cltd
mov
xor
repnz
and
inc
daa
add
jecxz
and
inc
cld
sub
xchg
pop
imul
push
andps
sub
test
shlb
test
adc
fildll
outsl
and
aas
js
stos
shrl
mov
bound
jg
cli
cmp
in
xchg
or
pop
scas
adc
loope
idivl
push
lret
mov
adc
jge
or
push
andb
jle
shrb
cltd
std
dec
stos
xchg
loope
sti
pop
and
fiaddl
mov
pop
jmp
pop
cmp
mov
inc
xchg
stos
sub
pusha
icebp
sbb
mov
outsb
and
ret
sbb
es
push
sahf
cmpsb
nop
cltd
push
and
add
cli
mov
mov
cmp
and
hlt
xchg
cmp
pop
stos
or
push
adc
xorl
or
sub
fdivs
xchg
dec
xchg
mov
lea
xor
lcall
cmp
pop
cli
mov
cmp
inc
and
xor
add
outsl
repz
pop
jge
xlat
ret
push
call
int
movsb
inc
xchg
movsb
jmp
nop
jle
sbb
in
popf
adc
mov
push
rcrb
pop
jle
sub
push
leave
jbe
add
enter
xor
lcall
int
and
xor
mov
cmp
mov
movsl
mov
xor
mov
cmp
add
cmpb
lods
test
frstor
push
fldt
mov
push
jg
dec
ficoml
fs
lods
hlt
add
outsl
jle
jle
lds
sarl
arpl
jge
es
popa
and
or
movsb
mov
int3
inc
addr16
push
subb
dec
push
sbb
lret
cmp
jae
inc
int3
add
xchg
mov
pusha
rorl
insl
xchg
mov
enter
inc
mov
xor
leave
cmpsb
sahf
xchg
cmp
loopne
mov
cld
xor
add
add
push
push
sar
adc
mov
int
push
xlat
lods
dec
call
rcll
jge
xchg
add
lret
bound
lock
inc
mov
je
jbe
repz
out
adc
idivb
sbb
cmp
outsb
int3
roll
in
xchg
repz
scas
jbe
int
xchg
xor
mov
mov
fwait
rorl
xor
and
fwait
sbb
stos
test
inc
and
lea
xchg
lahf
rcrl
xchg
imul
lock
jno
ss
jbe
jne
flds
or
je
fstp
push
push
imul
stc
ret
fs
sarl
sub
jp
cmp
dec
push
dec
and
scas
push
cmp
mov
ficomps
dec
sub
je
push
and
cltd
cli
cmpl
test
mov
aaa
add
fcmovu
xchg
int
mov
call
inc
insl
jno
dec
mov
jnp
xchg
xchg
jle
aas
in
jg
mov
fldt
push
sbb
cltd
faddp
xchg
sbb
shrb
jmp
dec
pop
aaa
lahf
sbb
push
mov
xchg
xor
xchg
push
cmp
cli
or
lock
popf
ljmp
fcomp
movb
dec
xchg
cmp
xchg
mov
sti
mov
fldcw
icebp
out
shrl
sbb
xchg
std
les
add
sub
mov
or
lahf
jno
adc
sbb
xchg
fadds
sbb
add
sub
mov
and
mov
pop
movsb
dec
xor
gs
mull
in
inc
or
push
lds
ljmp
push
addr16
and
mov
mov
repz
outsb
and
mov
loop
mov
test
jno
sarb
add
pop
push
mov
shr
scas
popa
les
mov
inc
repz
insb
cmp
mov
addr16
rclb
pop
inc
jg
cmp
mov
pushf
cli
leave
outsl
cmpsl
xchg
fdivr
mov
mov
sbb
push
pop
mov
mov
mov
mov
mov
pop
popa
in
sbb
jne
insb
fs
add
mov
add
jno
hlt
pop
out
cmp
pop
lds
into
outsl
push
add
fsubl
dec
mov
cmp
pop
push
test
gs
xchg
dec
and
add
push
imul
sub
test
or
or
inc
ja
fsubrl
ss
nop
adc
loop
lds
sub
jns
shr
fisubrl
mov
push
pop
xchg
or
call
cltd
aas
mov
cltd
pop
pop
xor
pop
les
mov
fldenv
std
pop
push
pop
mov
dec
push
jg
test
fisttpll
jb
lcall
mov
or
mov
loopne
and
jecxz
mov
es
mov
push
sub
dec
lock
jp
or
imul
jg
std
pop
jno
ret
nop
ret
lret
aad
mov
sbb
inc
xor
xchg
xor
imul
sub
cmpsl
into
stos
cmpsb
inc
inc
dec
mov
stos
call
push
sti
sbb
jb
mov
hlt
xor
je
mov
mov
and
cmc
xor
adc
and
xchg
ljmp
push
adc
imul
cmpl
mov
les
adcl
lret
add
jl
jle
push
ficoml
jmp
test
mov
add
sti
mov
packuswb
pusha
outsl
sub
mov
test
addr16
flds
cmp
out
sbb
mov
mov
push
sbb
movsl
add
add
out
adc
cmp
inc
xchg
mov
cltd
or
xchg
jmp
mov
shl
inc
or
push
xchg
clc
dec
cs
in
pop
aad
fcmovbe
sar
jmp
clc
ljmp
jecxz,pn
repz
inc
adc
xor
lret
in
rol
cltd
es
mov
sub
mov
out
push
cmp
jbe
or
movsb
dec
arpl
addr16
pop
jns
sbbb
and
aas
into
scas
jae
shll
add
xor
xchg
inc
inc
or
jmp
imull
xchg
subb
cmpsl
sub
shrl
xchg
mov
pop
sti
pop
jp
inc
jo
mov
dec
sbb
iret
scas
shll
int3
adc
xchg
fs
shrb
mov
cmpsl
mov
loope
out
loopne
std
or
pop
ss
mov
sbb
or
hlt
cmpsl
and
sub
sti
and
pusha
mov
sbb
cmp
adc
fwait
fs
cmp
iret
cmp
jnp
imulb
es
jecxz
les
cmp
fisubl
xchg
stc
popf
jg
jge
jg
or
lahf
lock
pop
xlat
sarb
dec
lock
mov
jmp
xchg
divb
shll
pop
cwtl
enter
and
inc
sahf
cmp
enter
mov
fs
bound
xchg
dec
jae
mov
adc
idivb
sub
fcmovnu
ss
daa
insb
inc
fiaddl
cs
and
loopnew
inc
hlt
insl
jb
push
mov
int
loopne
or
jmp
adc
push
ret
vandnpd
mov
xchg
bound
fdivs
test
cmpb
mov
scas
decb
push
pop
and
fld
into
jne
cmp
cmp
mov
call
repnz
inc
adc
test
and
lret
cmc
std
jns
daa
lods
dec
call
push
movsb
popf
popa
aas
pop
rcll
mov
push
inc
in
lahf
xor
jmp
sbb
dec
sbb
pop
loopne
dec
or
pop
sub
xlat
lret
adc
adc
sbb
lret
cmc
sbb
cmp
ds
in
imul
mov
or
xor
xor
jl
mov
dec
lock
mov
subl
lahf
aaa
dec
aas
pushf
mov
jmp
movsb
pop
jno
bound
das
cmpsb
stos
jns
cwtl
xchg
dec
mov
lcall
xchg
shlb
sbb
sub
dec
jl
mov
cmpl
into
cmc
add
jge
mov
cmp
imul
cmpsb
arpl
adc
jp
call
mov
fcmovnb
cmc
inc
fs
lret
std
dec
icebp
inc
bound
add
dec
push
mov
dec
adc
xchg
dec
add
fdivrl
adc
outsb
bnd
js
jns
add
mov
xor
bswap
insl
pop
mov
mov
adc
fmull
sub
scas
adc
and
adc
in
jecxz
lahf
lds
xchg
inc
imul
and
jmp
xor
xor
aam
ret
mov
adc
push
push
data16
lea
pop
gs
repz
jmp
ja
xchg
jnp
inc
stos
sub
shrb
inc
ja
jbe
cmp
cmpsl
cmp
scas
xor
outsb
sub
and
mov
cmp
xor
cmp
push
aad
dec
ss
sbb
xor
adc
xor
std
repz
pop
jae
lcall
adc
mov
cmp
xlat
jp
jae
out
cmp
xchg
scas
es
jae
dec
jbe
insl
popa
mov
fnstsw
stos
push
cmp
lods
pushl
outsb
mov
lcall
push
pop
xor
lcall
mov
jae
lods
outsl
jge
xor
icebp
xchg
mov
out
loope
lcall
jae
mov
jne
cmpsl
adcb
jle
sbb
mov
pop
pop
sbb
icebp
fldl
mov
stc
inc
leave
in
loope,pt
jge
sub
mov
adc
mov
mov
in
lcall
sahf
push
inc
aas
flds
jp
sbb
pop
insb
xchg
daa
xor
fstps
scas
pop
cld
movsb
adc
dec
fs
dec
sub
es
stc
mov
orb
mov
dec
xor
ljmp
cmp
push
dec
outsb
lods
jecxz
cmpsl
push
inc
pop
push
or
adc
shl
cmp
leave
and
mov
pop
repz
jmp
pop
sbb
je
insl
or
sbb
iret
sub
cmc
mov
sbb
es
inc
xor
jo
xchg
inc
cmp
lds
and
scas
movsb
or
movsb
movsb
dec
clc
push
mov
jge
shrb
mov
ret
dec
fldenv
cmp
pop
jno
dec
xchg
jge
or
bound
pop
data16
out
mov
push
xchg
ret
add
jle
movsl
mov
push
cltd
jmp
or
jmp
pop
adc
lea
inc
rolb
xor
pushf
mov
imul
cmp
gs
sub
inc
cmp
rorl
jle
stos
outsl
sbb
je
imul
push
incb
stc
rorl
stos
fs
jecxz
mov
or
call
mov
push
cld
nop
push
movsb
inc
fwait
out
sbbb
sbb
ret
mov
fiadds
out
lds
cmp
ret
neg
test
in
stc
aas
dec
push
xchg
out
das
push
ret
popf
jecxz
pop
push
cmp
fsubrs
test
and
push
inc
ret
andl
adc
mov
add
pusha
xchg
imul
mov
loopne
andl
shll
sets
arpl
ficoms
cmc
add
xor
fmuls
mov
outsb
stos
mov
ret
inc
sbb
cld
jg
lods
out
ret
adc
and
mov
and
xchg
leave
scas
out
cltd
pop
mov
push
add
pop
data16
mov
xchg
imul
pop
jmp
loop
imul
or
pop
jae
xor
ja
mov
ss
push
pop
pusha
les
jle
sub
and
aaa
sub
into
in
lock
cmpsb
mov
andl
ficoml
cmp
sub
push
or
fmuls
movsl
sbb
rcl
jle
test
cwtl
ret
dec
or
jo
xor
out
sub
xchg
test
pop
cmp
or
mov
lahf
add
push
in
sbb
adc
inc
enter
test
mov
mov
push
subb
pop
insb
dec
mov
sbb
lds
jns
insb
xchg
ss
clc
ja
shl
or
sbbl
pop
loope
lods
mov
inc
call
das
jg
pop
push
shrl
sub
pop
cmp
std
sub
mov
test
jecxz
mov
lahf
pusha
adc
jbe
popf
mov
xchg
out
ds
int3
pusha
mov
and
cmpl
dec
sub
dec
test
add
jb
rcrl
pusha
mov
pop
lds
pop
add
mov
clc
sahf
into
push
mov
mov
sar
scas
inc
stos
dec
test
pop
roll
lret
je
mov
xor
addr16
xchg
or
fwait
dec
fdivrl
popa
sar
xorb
leave
subl
cmp
jmp
push
scas
xchg
into
loope
movsl
movsl
fld
ja
mov
dec
add
scas
adcl
mov
in
and
es
stos
mov
or
xchg
sub
push
and
sub
mov
pop
enter
popa
inc
push
adc
data16
movsb
test
dec
add
mov
nop
pop
es
popa
push
pop
out
xor
sub
int3
lds
call
clc
stos
mov
rclb
ds
jne
test
negl
mov
and
shrb
cmc
ret
inc
or
cmp
insl
lods
cmp
xchg
sub
cmp
data16
fstp
iret
movsb
test
xchg
dec
push
cld
imul
stos
outsb
insl
jmp
cmp
insb
cltd
daa
sub
fisubrs
repnz
cltd
int3
cmp
in
adc
inc
mov
enter
xor
cmp
or
mov
shlb
leave
loopne
test
mov
dec
lods
fsubs
lea
jmp
add
addr16
sbb
adc
daa
cmp
rcrb
in
pop
and
add
sub
daa
movsl
inc
adc
cmpsb
mov
push
inc
mov
out
aas
pop
sub
aas
iret
dec
jl
xchg
pop
cvtps2pi
scas
add
aaa
aas
mov
adc
daa
sbb
mov
inc
lods
aam
mov
out
aam
repnz
xor
cmp
xchg
adc
arpl
rcrl
and
cld
repnz
cwtl
stos
test
movups
call
pop
daa
pushf
hlt
xchg
mov
test
add
out
int
scas
inc
dec
push
mov
ud0
jnp
std
and
add
cmpsl
mov
dec
loop
pop
sahf
push
mov
lret
sub
shrb
mov
pushf
mov
dec
mov
inc
mov
hlt
js
mov
jno
cld
pop
xorb
push
and
insb
orb
xor
inc
push
dec
outsl
movsb
outsl
inc
push
dec
mov
fcomps
stc
fdiv
xchg
test
stos
push
outsl
jno
pop
ret
sub
sti
add
jne
cli
sahf
push
add
inc
add
and
cld
jnp
sbb
in
andb
das
stc
scas
mov
mov
fs
pop
jge
jnp
bound
inc
divl
mov
stos
leave
jge
into
cwtl
dec
sbb
push
xchg
addl
add
or
jle
xchg
test
pop
pusha
xchg
cmpsb
mov
test
jecxz
icebp
pop
roll
jo
pusha
mov
pop
int
int
pop
add
nop
mov
in
xor
insl
loope
repz
pop
inc
push
clc
add
dec
pop
pushf
sti
inc
push
clc
xor
rorb
or
lods
in
out
sar
popf
stc
and
scas
and
pop
dec
add
xchg
mov
stos
outsb
lret
pop
cmp
lret
xchg
pop
dec
cmc
mov
sbb
dec
adc
jo
sub
mov
jg
jbe
xchg
xor
xchg
xchg
mov
inc
cld
cld
insb
add
nop
mov
xchg
push
decl
xor
ret
hlt
pop
test
fnstenv
leave
movsl
add
orl
xchg
adc
dec
addb
add
fwait
pop
push
test
enter
rorl
push
arpl
jecxz
jbe
xor
gs
jmp
and
repnz
sbb
cld
data16
dec
push
movsb
out
in
pop
cmp
jp
repz
cmpsl
cmpsl
xchg
inc
jb
icebp
jne
and
insb
mov
cmpsl
xor
jp
mov
filds
xchg
sbb
cmp
in
filds
add
loop
cmp
in
hlt
sahf
mov
in
dec
cld
xor
scas
or
xor
hlt
repz
xor
fcmovnu
jle
jbe
sbb
popa
dec
dec
out
cmpsb
add
sub
out
xor
or
sbb
cwtl
sub
dec
pop
es
cmp
dec
or
fdivrp
dec
cmp
dec
idivl
andb
ret
jae
xchg
ds
cli
sbb
lret
gs
dec
jmp
leave
shl
push
mov
and
jne
mov
into
pop
loop
stc
fsub
cmp
rorb
leave
mov
rorl
xchg
xchg
ja
popa
decl
loopne
mov
inc
inc
xchg
leave
lret
ds
jb
dec
push
in
pop
push
push
arpl
xchg
push
stc
xor
aas
push
bound
mov
mov
cwtl
mov
clc
cmp
add
sahf
mov
jnp
push
popa
cmp
sub
mov
popf
test
aas
movsb
fcomps
pop
sahf
enter
xor
repnz
mov
jno
lret
fcmovne
je
enter
aas
push
dec
vcvtdq2ps
sub
lcall
or
test
jge
fs
lcall
mov
mov
xor
mov
pop
lods
inc
xor
scas
loop
xlat
jp
fcmovnb
fisttps
mov
cmpsb
mov
pop
push
pusha
cli
jns
pop
dec
sub
sbb
popa
pop
jbe
lea
fs
js
cwtl
aaa
mov
adcb
jns
adc
stc
in
xchg
xor
sub
dec
popa
sub
repnz
repz
dec
dec
ret
lock
push
mov
and
jno
pop
daa
lret
jb
leave
scas
cld
push
daa
cld
test
mov
rcll
dec
outsl
or
out
and
pop
dec
add
movsl
cli
mov
lcall
or
sti
loop
mov
int3
inc
ljmp
rorl
xchg
push
mov
aad
jmp
push
rclb
idivl
or
imul
je
test
inc
jg
cmp
rcll
fwait
into
inc
mov
ret
xchg
sub
movsl
adc
bound
jl
pop
loopne
jb
xchg
push
adc
jecxz
ret
clc
pop
pop
repz
xchg
cmp
mov
ret
out
push
push
or
stos
cli
add
insl
clc
sti
sbb
faddl
mov
inc
dec
or
xchg
loopne
iret
sub
test
test
test
sub
daa
push
insl
insl
daa
js
xor
dec
and
ja
test
loope
push
scas
std
out
popf
pop
repnz
pushf
inc
ficompl
out
mov
pusha
push
pop
sbb
cmp
popf
xor
mov
fiadds
daa
out
xchg
add
lahf
pop
cli
jp
pop
xchg
and
lock
test
in
xor
out
fxch
out
test
les
sbb
xor
inc
punpckldq
mov
outsb
out
mov
or
scas
sub
and
mov
mov
call
shll
cbtw
jae
mov
mov
jns
sub
mov
test
or
dec
push
xchg
cmp
cmp
mov
mov
cmp
inc
out
mov
hlt
and
in
cmp
pusha
repnz
cmp
lret
xor
adc
lret
and
mov
cmpl
ds
xchg
dec
sbb
sbb
popa
jnp
fldl
jae
lock
popa
scas
mov
jne
xor
cmp
pop
dec
cmp
pushf
bound
test
cli
xor
jl
out
or
test
xor
jno
push
fisubs
cmpb
jns
xchg
pop
and
add
insb
sub
push
inc
jno
pop
pop
mov
mov
mov
cwtl
pop
mov
mov
xchg
pusha
and
mov
inc
sbb
xchg
cmp
dec
loopne
cs
sbb
and
lods
dec
pop
mov
loopne
fcoms
sub
cwtl
inc
ffree
jne
loop
lock
aas
sbb
aam
call
xor
inc
lret
xor
dec
loopne
mov
and
push
xor
pop
mov
je
cltd
mov
aaa
ja
les
jmp
ret
xchg
mov
ljmp
lret
shrb
insb
lock
and
mov
scas
adc
cs
push
lods
je
inc
sub
mov
out
stos
push
pop
scas
mov
rolb
sub
imul
out
pop
fists
fisubrl
inc
cmpsb
jmp
mov
ss
subb
lret
push
inc
pop
scas
pop
in
xor
pop
mov
mov
push
lcall
pop
adc
mov
adcb
fsubrl
inc
sub
push
dec
fcompl
xor
push
jl
push
data16
clc
push
jbe
cmp
arpl
and
sbb
addl
add
push
pop
pop
jne
cltd
or
insl
sbb
xchg
rolb
adc
ljmp
cld
cmp
dec
call
fsubrs
sti
jge
ds
push
jno
jmp
testl
es
rcr
cltd
lret
in
xchg
sub
shrb
push
sbb
lea
sub
mov
test
mov
xchg
repz
jbe
fwait
setbe
inc
mov
inc
push
adc
inc
movl
sub
xchg
mov
out
push
shlb
pop
sbb
mov
mov
sub
jb
pop
push
ret
pop
xlat
jl
pop
push
outsl
pop
int3
iret
pop
in
jg
or
push
outsb
pop
mov
bound
pop
and
pop
shl
push
loop
addb
bndldx
jne
jno
shlb
add
xchg
movsl
insl
enter
jbe
jbe
mov
jle
cmpsb
into
mov
fdivrl
lcall
pop
add
test
repnz
cld
jmp
jae
mov
mov
inc
loope
mov
fstpt
sbb
mov
inc
inc
lret
push
jno
fnstenv
jmp
fdivs
pop
jb
loop
fsub
test
jmp
and
dec
movsb
call
jbe
push
jecxz
inc
cmpsb
mov
and
cmp
jp
dec
push
jbe
fs
shrl
mov
lea
dec
scas
or
inc
gs
dec
imul
jae
sbb
enter
jp
push
push
scas
push
fcompl
mov
fbstp
xchg
push
shr
out
lret
repz
cmp
mov
fsub
cmpsb
jne
fistpl
outsl
jmp
stos
outsl
mov
mov
mov
cltd
clc
sarl
movsl
imul
lret
xchg
shll
cmp
xchg
or
xor
into
push
test
adc
xchg
movl
xor
or
xchg
out
dec
jp
mov
dec
pop
fiaddl
or
jnp
and
data16
fstpt
imul
fwait
cmpb
mov
mov
fsubs
sbb
icebp
dec
or
pop
stos
sbb
cmpsb
add
and
aam
nop
mov
rolb
sub
or
mov
or
aad
stos
inc
mov
jg
mov
inc
icebp
sbbl
cmp
dec
adc
mov
xchg
push
dec
pop
xchg
pop
mov
ret
mov
cmp
mov
add
pop
clc
lret
lret
sarl
mov
xchg
cmp
dec
popf
mov
mov
testl
cltd
adc
test
xchg
xor
aad
push
ret
xor
ja
outsb
aam
lock
pop
ds
pminub
addr16
cmp
add
lea
cs
fcoml
adc
mov
pop
mov
cmp
jb
mov
jnp
mov
pop
dec
xchg
mov
je
or
adc
sub
dec
rcrb
imul
xor
push
es
call
in
and
stos
mov
aam
mov
in
cmp
push
mov
adc
mov
jle
sbb
popl
shll
dec
and
add
aam
cmpl
sahf
mov
sbb
add
cmp
xchg
pop
xchg
icebp
jmp
or
clc
push
pusha
mov
ficomps
push
out
in
sub
ret
ja
outsl
jb
leave
fwait
xor
xor
mov
fimull
mov
test
sbb
adc
push
imulb
push
shlb
mov
xchg
lcall
shrb
sub
dec
imul
je
aam
insl
das
push
bound
mov
negl
gs
adc
mov
dec
mov
adc
repnz
push
fwait
rcll
push
into
aas
fcoml
jbe
popf
popa
pop
cli
sbb
pusha
lods
ja
or
js
mov
out
lret
mov
push
jo
and
push
inc
mov
dec
push
loop
loopne
int3
jne
cmp
shl
popf
and
push
roll
int
lcall
stos
fdivrs
mov
dec
cmp
dec
nop
inc
sbb
pushf
sbb
cld
loop
pop
sarl
xor
out
lcall
repnz
movb
ljmp
arpl
sub
sbb
and
push
orl
lcall
xlat
pop
fdivl
dec
inc
leave
js
xchg
lret
aam
cmp
mov
or
fnstenv
xor
inc
fistpl
pushf
rcl
cmp
fs
xlat
and
dec
mov
fwait
loope
push
aas
push
adc
in
iret
mov
mov
out
adc
jnp
mov
insb
inc
mov
dec
imul
xchg
jns
and
mov
in
gs
loope
outsb
or
pushf
gs
pop
repnz
push
ljmp
test
jae
xor
mov
loop
jg
cmpb
insl
ret
cmp
rcrl
inc
into
dec
jb
push
std
es
test
sub
les
xor
lods
repz
lds
movsl
lret
mov
in
mov
sbb
fs
aam
test
adc
ss
jns
inc
sbbl
test
rorb
mov
add
mov
jmp
push
sub
xor
sub
mov
adc
fstpl
mov
imul
mov
rcrl
std
lea
adc
aam
fcomps
imulb
insl
lods
ficoms
fcmove
cmpsb
sahf
lods
push
xchg
xchg
mov
fimuls
mov
rcll
pushf
inc
add
adc
in
lahf
dec
xchg
mov
or
dec
sbb
lret
add
xor
icebp
cmp
adcl
jae
lods
xchg
push
xchg
inc
dec
data16
scas
lcall
mov
cmovae
clc
cmc
push
scas
cmp
mov
dec
mov
sbb
stos
push
cmp
mov
pop
inc
sbb
ljmp
scas
push
push
pop
stc
jge
stos
shll
scas
loop
call
sti
xchg
movsl
xchg
in
test
lock
aaa
jecxz
lahf
xor
xchg
cmp
aaa
push
pop
stos
loope
push
mov
add
sbb
ret
mov
aam
and
icebp
jg
jae
push
cmp
and
dec
cmpl
sub
inc
repz
push
orl
lods
jns
adc
icebp
mov
imul
je
lea
xchg
mov
fistps
js
stos
sbb
fstpl
call
pop
lds
addr16
sbb
dec
mov
test
aam
ss
xchg
adc
cwtl
fadd
inc
cmp
out
push
sarl
les
fsubs
or
push
das
ret
adc
lahf
sub
out
ror
stos
rcrb
inc
or
gs
xor
and
data16
xchg
jl
in
repnz
jp
les
imull
or
cltd
fst
in
push
mov
inc
sbb
pop
push
cmp
dec
mov
and
sub
sbb
jns
jo
xchg
xor
test
cmp
add
push
inc
aam
push
dec
mov
aam
movsb
add
or
ret
test
inc
cs
mov
xor
ss
xchg
or
cmp
pop
test
or
js
jno
add
ja
xchg
shlb
pop
push
leave
jns
into
addb
mov
and
pusha
adc
sbb
xlat
imulb
bound
sbb
xchg
dec
mov
xchg
mov
mov
fidivl
out
pop
jg
rol
out
pop
sar
adc
cmc
cs
cmp
jo
insl
push
es
pop
pop
ret
cmp
push
xchg
sub
pop
or
inc
aam
mov
fmuls
dec
inc
jle
aad
pop
mov
mov
cmpsl
adc
insb
push
fidivrl
mov
or
xchg
fiaddl
mov
cmc
imul
xor
fiaddl
rcrb
mov
in
xor
mov
nop
loop
test
std
ficomps
imul
aam
cld
xchg
jecxz
add
test
xor
mov
insb
pushf
cli
dec
and
cltd
or
inc
repnz
movsl
sbb
and
enter
scas
gs
cmpsb
cltd
mov
cmp
das
sahf
mov
scas
sarl
xlat
add
aam
mov
mov
leave
lret
in
incb
sub
or
push
xchg
lods
stos
jns
test
and
dec
dec
xchg
cmp
and
pop
aaa
insb
mov
in
inc
popa
std
jecxz
std
fiadds
arpl
xchg
aaa
fs
pop
fsubs
repnz
mov
imulb
mov
sti
leave
inc
in
std
xchg
push
stc
add
cmp
jecxz
inc
int3
loopne
mov
loope
sti
or
sub
in
ja
cwtl
adcl
mov
aas
jb
int3
push
movsb
fcmovb
dec
mov
mov
fildl
movsl
mov
ljmp
xor
or
mov
xor
enter
jne
pop
movsb
test
daa
stos
nop
xchg
xor
mov
jmp
mov
lds
outsl
pop
loop
fildll
test
lret
cmp
lret
cmp
test
sti
cmp
stos
mov
arpl
xor
cmpsl
aam
icebp
ficomps
sbb
push
cmpsl
pop
sub
and
xchg
or
ss
xor
nop
xor
mov
jmp
scas
jb
cwtl
mov
adc
push
mov
scas
into
dec
jge
mov
sbb
pop
lret
or
xor
pop
mov
mov
sub
insl
out
push
xlat
mov
mov
data16
clc
mov
cli
iret
cmp
mov
insb
in
out
push
mov
mov
loope
xchg
jae
sbb
sub
cmp
loope
jmp
push
cmpsb
and
jecxz
pop
sbb
fists
negl
dec
repnz
and
sbb
mov
inc
enter
stc
mov
cld
inc
scas
mov
call
sahf
aaa
in
mov
jae
jne
lds
sub
fbld
push
std
adc
mov
in
xor
or
dec
mov
cmp
jne
jecxz
fmul
dec
pop
sbb
loop
iret
enter
jne
sub
fldenv
pusha
and
ffreep
add
cmp
inc
outsl
icebp
fdivrl
add
or
sti
sbb
sub
sahf
sub
jb
xor
rep
push
pop
out
xor
cmpb
es
and
or
jmp
sahf
inc
cmpsb
adc
mov
mov
call
andl
lcall
adc
push
sti
jg
pop
add
xorl
enter
jle
fidivs
or
and
mov
jg
jl
lods
sbb
mov
test
mov
insl
inc
add
dec
inc
arpl
aas
lret
pop
push
sub
mov
pop
outsl
dec
push
int
aad
pop
inc
rorl
sub
add
pop
dec
push
cmp
or
push
icebp
std
sahf
dec
scas
mov
pop
pop
fisttpl
lock
mov
mov
or
sarl
pop
xchg
pop
cld
jmp
add
mov
pushf
enter
dec
lahf
movsl
cltd
add
nop
sub
xor
flds
sbb
mov
int3
jo
xchg
jb
daa
and
dec
or
push
mov
out
outsl
adc
fs
mov
loop
pop
movsb
or
mov
jp
or
adc
scas
pop
aam
sbb
jg
lock
xchg
mov
test
pop
in
int
gs
mov
jb
push
repnz
out
add
mov
xchg
mov
call
push
dec
hlt
shll
mov
or
inc
and
ficomps
xchg
adc
adc
dec
cmpsb
sub
xchg
jb
inc
dec
push
enter
inc
xor
negb
loope
movsl
or
jg
call
mov
pop
push
dec
roll
push
push
loop
and
xor
lcall
mov
sarl
mov
fwait
lahf
cmp
loopne
xchg
imull
icebp
mov
aas
pop
xor
leave
pop
cmpsl
ror
mov
loope
push
int3
aad
mov
push
lret
xchg
fbstp
data16
leave
out
pop
out
mov
ja
cmp
mov
cli
mov
xor
inc
cmp
adc
sbb
insl
das
push
aas
scas
mov
sbb
std
lret
mov
in
sahf
cmp
std
lods
cmp
mov
lret
inc
sub
out
jne
test
mov
jno
jecxz
or
and
std
js
mov
fdivr
stc
inc
mov
sbb
roll
int3
aas
pop
inc
jae
test
xchg
sub
or
es
jno
cmp
push
lret
fidivl
rolb
shlb
mov
adc
push
out
or
ja
loopne
out
ljmp
lock
mov
mov
jo
sub
out
leave
leave
rorb
dec
mov
dec
jg
popa
lock
or
pop
jne
and
lahf
cmp
test
sub
dec
inc
frstor
sti
movsb
sbb
push
lret
movsb
push
adc
mov
add
test
outsb
push
call
sub
dec
cmpsl
push
sbb
jmp
scas
mov
lods
jg
mov
cmp
js
xor
dec
add
test
mov
pusha
lcall
add
loop,pt
sub
push
push
sti
or
xchg
cwtl
ljmp
stos
ja
add
push
jp
loopne
or
mov
mov
fnstenv
call
xor
jae
adc
popf
dec
sbbb
addl
jmp
bnd
xorl
fbld
scas
pop
cmp
imul
insb
outsb
or
xor
out
push
pusha
xor
inc
cs
out
testl
adc
lahf
xchg
das
and
pop
push
cmc
cmp
dec
sahf
cmp
inc
push
cwtl
push
sti
cmpsb
es
scas
dec
iret
mov
emms
mov
stos
inc
pop
mov
sub
aad
push
mov
insb
and
mov
in
pop
outsl
cmp
mov
dec
cs
add
inc
mov
enter
stc
scas
dec
or
loopne
hlt
and
enter
xorl
and
and
imul
movsb
test
mov
jo
out
and
xchg
fldl
mov
mov
add
dec
add
fiaddl
scas
push
in
pop
cmpsl
cmc
test
jge
xchg
icebp
out
ds
mov
add
mov
mov
pop
mov
inc
pop
xor
adc
xchg
lcall
jg
daa
jecxz
clc
inc
movsl
outsb
pop
jno
sub
dec
fwait
jb
cmp
pop
or
add
xorl
dec
sti
aas
push
and
jbe
loop
mov
pop
mov
mov
pop
jno
mov
lds
pop
in
sbb
fistpll
scas
mov
adc
jg
cmpl
sbb
outsb
add
iret
pop
adc
add
pop
and
and
daa
ret
sbb
or
sbb
push
pop
mov
sti
sahf
xchg
mov
push
mov
pop
or
movsl
loopne
and
fdiv
dec
xchg
push
stos
jg
pop
bound
dec
xchg
fcomps
int
xor
enter
enter
sub
rclb
xchg
mov
dec
xchg
cltd
inc
jo
out
or
movsb
add
jl
sar
push
js
inc
pop
out
out
test
out
stos
loop
or
sbb
sub
cmp
loopne
cmp
add
ds
subb
mov
les
jmp
mov
push
xchg
gs
dec
divb
fldl
sub
dec
aas
or
std
jg
out
mov
cli
xlat
mov
mov
ffree
mov
addb
mov
mov
cmp
dec
int3
push
in
jb
lahf
into
jns
es
stc
pop
cmp
in
movsl
jecxz
das
pop
jb
es
loop
push
cmp
mov
push
cmpsl
and
jg
lds
js
dec
negb
aaa
cmp
test
sahf
adc
lock
repnz
add
out
mov
sub
and
or
scas
push
pop
fstps
sub
stc
add
mov
jbe
xchg
popf
dec
aad
movsl
out
jbe
data16
mov
arpl
adc
cli
sbb
sti
xchg
cmp
xlat
inc
xor
push
inc
fwait
jp
adc
xlat
mov
jns
mov
xchg
sub
push
jnp
and
xor
outsb
pop
call
push
repnz
pop
out
sbb
movsb
fwait
mov
mov
ret
sbb
mov
fldl
dec
loopne
jecxz
lcall
mov
das
dec
out
dec
xor
arpl
ss
aas
dec
push
and
imul
imul
js
loop
pop
adc
pop
nop
adc
outsb
jb
in
or
lahf
insl
or
stos
xor
iret
sbb
adc
lret
lods
inc
add
aas
arpl
stos
stos
adc
xchg
je
test
mov
and
dec
and
ja
sbb
aam
fbstp
push
cwtl
lea
xor
andl
mov
inc
nop
rcrl
mov
and
ret
and
and
lcall
sub
adc
test
sbb
xor
clc
or
cld
mov
jo
js
inc
je
mov
push
popa
cmpsb
pop
repz
fisttps
jle
lock
mov
cld
pop
mov
sbb
xlat
es
jbe
jg
adc
mov
cmp
cs
sarl
outsl
into
fwait
inc
popf
mov
mov
adc
lods
jp
add
dec
push
inc
cwtl
and
or
shr
mov
mov
mov
xor
sub
ja
movb
enter
xchg
jecxz
mov
incb
fldl
int3
or
scas
sbb
fidivl
jo
orl
out
jbe
rep
ret
or
mov
test
push
test
xchg
sub
xchg
cwtl
cmp
pop
les
jecxz
xor
add
popa
xchg
fnstsw
ds
aam
mov
es
cmc
mov
mov
inc
test
mov
mov
and
jmp
push
jmp
dec
das
add
adc
pop
adc
es
fstpl
cmp
adc
sti
sbb
xor
mov
xchg
adc
shll
mov
mov
fisubrl
mov
adc
and
in
jp
push
cmp
cmc
repz
dec
fisttpl
loope
fcmovnb
sahf
cmp
js
in
scas
mov
das
mov
mov
ds
test
jnp
enter
adc
and
cmpsl
stc
cs
lcall
rorl
inc
and
loop
test
mov
cmp
mov
aam
jo
pop
pop
ret
movsb
loope
xor
mov
adc
or
nop
jp
lcall
pop
mov
clc
cmp
imull
idivb
inc
fcoms
xchg
lahf
stos
inc
pusha
xor
sub
xchg
neg
lcall
clc
mov
mov
xchg
test
sub
enter
sbb
push
ficoms
sub
cli
xlat
das
les
push
xchg
and
jo
mov
roll
mov
hlt
cmpb
jne
mov
faddl
xchg
adc
cmpsb
jnp
push
xor
inc
fisttpl
movsl
mov
xchg
imul
pop
js
mov
dec
mov
idivl
dec
into
loop
cmp
data16
fcoml
jae
push
mov
lahf
shll
mov
aad
jl
hlt
test
and
test
arpl
fdivrs
or
cwtl
sub
aas
inc
lret
mov
test
push
adc
mov
jmp
sub
mov
out
mov
inc
dec
repz
xor
inc
mov
push
mov
jnp
fbld
cmpsb
xchg
inc
pop
mov
mov
loopne
int
or
mov
loope
mov
aaa
fsubl
and
dec
aam
lds
cli
push
scas
mov
mov
xchg
inc
fmuls
aad
jae
aad
test
and
pop
push
popf
jb
movsl
or
fbstp
push
jns
cmc
mov
mov
iret
jo
mov
and
sbbl
icebp
pop
clc
rcrb
lock
mov
test
lods
gs
aas
mov
lods
fmulp
add
fistpll
sbb
mov
inc
aas
and
xchg
dec
xchg
mov
mov
jnp
sahf
ffree
scas
pop
or
pop
repz
popf
adc
sub
fs
push
push
cmpsb
out
xlat
lret
xorl
cmc
mov
ss
call
add
xchg
push
pusha
mov
add
imul
push
jmp
xchg
add
scas
cmp
iret
wrmsr
mov
outsl
xor
mov
ret
inc
push
stos
pop
loope
in
testl
jl,pn
push
push
lds
ds
xor
adc
and
adc
cmc
imul
mov
cld
dec
push
pop
or
cmp
out
jno
jo
adc
aas
pop
aaa
or
cmp
dec
aad
in
es
inc
les
in
addr16
cmpsb
xchg
sbb
psubq
repz
rcrb
sarl
inc
cwtl
xchg
lods
lcall
fstps
loop
add
sbb
xor
in
aam
lea
mov
push
sub
in
shlb
sbb
jp
sbb
cmpsl
and
lahf
test
push
lret
and
xchg
adc
pop
imul
pop
adc
xchg
rcl
rcrb
repnz
fmull
xor
outsb
add
pop
dec
xchg
outsl
mov
andb
mov
outsl
lods
ret
pop
cs
insl
idivl
dec
jae
mov
jmp
adc
mov
mov
leave
aad
jle
sar
movsb
and
cmp
scas
push
sub
push
subl
imul
adc
add
cmpsl
mull
addb
das
mov
sahf
pop
xlat
push
jmp
rorb
xchg
fcomps
in
and
sub
mov
sub
dec
cmp
adc
dec
and
lcall
cmp
add
adc
sub
loope
fildll
out
imul
in
outsb
mov
mov
aad
mov
int
or
hlt
std
dec
call
jo
fcomip
int3
mov
repnz
jecxz
dec
jg
jg
add
xor
adc
rorb
subl
jne
and
jnp
je
add
xorl
gs
mov
aam
pushf
cmp
push
push
adc
xor
push
cmp
das
mov
lods
jo
mov
add
pop
bound
cmp
push
cs
jmp
add
jae
add
jbe
sbb
cmp
fstl
jns
mov
fwait
inc
lahf
enter
and
out
and
mov
sbb
dec
jle
mov
cs
data16
popf
inc
push
jns
mov
sbb
jb
add
mov
fsubrl
lods
test
dec
cmpsb
arpl
cmp
arpl
inc
enter
mov
pushf
mov
add
sub
pushf
xlat
dec
sbbl
imul
adc
xchg
jno
cmc
jns
cmp
mov
imul
packuswb
ja
mov
add
insb
lods
xlat
mov
iret
scas
sbb
imul
xor
xlat
xor
pop
cld
sub
gs
enter
inc
outsb
pop
fnstcw
and
test
hlt
or
mov
addb
sti
enter
scas
dec
es
ds
lret
hlt
repnz
and
push
out
js
push
in
cltd
fldcw
xor
xchg
fwait
mov
and
dec
icebp
sbb
cwtl
gs
data16
mov
xor
mov
icebp
stc
jle
adc
jmp
sub
pop
mov
jns
dec
sub
dec
mov
mov
lahf
subb
push
lods
loopne
xchg
leave
push
out
cltd
jge
test
mov
das
sbb
aas
add
sbb
jl
aam
daa
pushf
shl
push
jg
jb
lcall
insb
lcall
cli
ds
and
jg
mov
fsubp
mov
cltd
bound
or
sbb
lahf
addb
cwtl
repnz
xchg
adc
lock
negl
inc
stos
cmpsb
sahf
clc
into
outsb
push
fisttpl
lea
test
fidivrs
push
in
daa
bswap
in
jmp
and
test
mov
push
rorl
adcb
sub
xchg
cli
sub
push
sbb
xchg
and
in
divl
add
test
jae
out
out
mov
lods
pop
xor
sbb
push
cmp
jge
std
out
push
jno
or
dec
jnp
push
sub
lret
lds
mov
xor
and
jecxz
push
iret
fwait
jb
add
test
mov
mov
xchg
mov
sub
cmp
mov
fwait
fs
xor
inc
aas
pusha
mov
inc
or
cmp
adc
sub
negl
sub
or
adc
ljmp
test
jns
addr16
loop
jl
sbb
js
xor
rclb
cld
xchg
jno
push
adc
cmp
pop
inc
fnstenv
mov
xor
insl
dec
lret
push
scas
sbb
pop
repz
adc
jae
and
xchg
inc
divb
lret
add
ficoms
dec
adc
cbtw
icebp
testl
push
jl
and
out
sti
sub
mov
aaa
fnstsw
xor
repz
xor
or
out
movsl
sbb
or
imul
dec
les
dec
dec
daa
ss
push
test
mov
mov
pshufw
jecxz
insl
in
adc
xchg
fisubrl
test
nop
sti
cli
adc
lea
adc
mov
mov
pop
jle
adc
cmp
jecxz
jns
hlt
jno
jo
ret
mov
dec
add
stos
jg
loop
xchg
jg
ret
mov
bnd
cmpsl
fists
lcall
aad
icebp
sbb
xlat
test
add
test
mov
aaa
loopne
jl
mov
mov
rcrl
fadds
xchg
push
cld
leave
enter
scas
add
iret
push
jo
imul
cmpsl
ja
into
xchg
mov
dec
fidivrl
xlat
mov
negl
jmp
mov
imul
inc
lret
in
into
loopne
imul
or
or
jo
in
lahf
cs
lds
inc
xchg
fisttps
xor
inc
adc
loopne
push
in
arpl
ret
pusha
xor
sub
out
and
dec
dec
and
adc
mov
into
add
stos
cs
or
push
pop
fistps
cmp
lods
negb
push
push
aas
push
and
adc
inc
js
cmp
jae
call
les
pop
jo
sub
jmp
es
fisubrl
lahf
mov
and
or
je
hlt
js
jns
call
enter
insl
sbb
popa
and
shrl
mov
imulb
inc
xchg
cwtl
push
sar
inc
inc
popf
xchg
sbb
xor
rcrb
dec
pop
mov
testl
arpl
cld
int
adc
add
fdivrl
sbb
ja
pop
ja
lock
aas
loop,pt
movsl
outsb
and
movsl
adc
clc
in
push
mov
jae
fadds
cld
or
test
jge
add
inc
jb
cmpsb
fistpl
mul
and
cmp
insl
and
lds
adc
ljmp
mov
jmp
daa
test
in
push
outsb
fs
mov
cmpsl
push
and
imul
push
in
lods
jb
sbb
inc
cs
fdivrs
subl
enter
sbb
cmp
adc
cmpsb
daa
inc
clc
cmpsl
mov
into
mov
movsb
xchg
popf
and
sbb
jne
movsb
iret
adc
test
in
cmp
sti
lcall
add
add
daa
xchg
aas
xchg
inc
add
mov
or
dec
jl
xlat
dec
inc
and
arpl
fisubrs
test
sarl
mov
xlat
test
mov
sbb
fstl
push
test
cmp
out
jle
xlat
iret
aaa
cmp
pop
push
mov
or
sub
pop
in
xor
out
ds
jo
adcb
adc
add
mov
enter
push
insl
ja
sar
add
inc
jae
cmp
sub
sbb
and
aas
pop
lret
nop
jno
add
ljmp
sbb
cmp
les
aam
adc
push
dec
gs
or
lret
test
out
leave
xchg
dec
pop
sbb
popf
sub
mov
add
ja
imul
sahf
jbe
arpl
xor
jbe
loop
flds
pushf
push
xor
int
dec
dec
jmp
jmp
stos
ffreep
repz
adc
lret
jae
ret
aam
mov
xchg
xor
mov
repnz
dec
andb
stos
dec
incb
iret
adc
jne
pushf
mov
pop
out
push
push
repz
jmp
jge
or
mov
inc
stos
test
add
sahf
stc
inc
dec
xchg
mov
add
in
ds
push
xor
fcomps
jle
pop
push
enter
xchg
or
aaa
adc
sbb
jns
mov
pop
xor
pop
movsl
jl
sbb
jmp
jo
cltd
lcall
cmp
mov
mov
fistps
dec
bound
add
jmp
imul
adc
or
xchg
adc
jbe
negb
decl
inc
jl
sahf
jae
aas
in
call
pop
nop
scas
jle
ficoms
sahf
push
adc
iret
gs
or
bound
addr16
or
pushf
dec
add
push
jns
adc
test
xor
insb
push
ds
testb
enter
jmp
mul
inc
inc
cwtl
cwtl
mov
test
test
loope
repz
cwtl
mov
sarl
imul
test
mov
call
cltd
mov
pop
push
and
xchg
add
cli
out
fs
mov
in
cmp
push
push
mov
cli
xlat
mov
or
and
in
jns
ret
dec
jae
cwtl
inc
sbb
pop
adc
jmp
out
jl
rcr
lahf
jne
shl
ss
mov
ss
mov
rcll
inc
inc
mov
jne
setp
cli
mov
popa
jl
insb
inc
xor
arpl
test
les
inc
adc
out
mov
fucomip
push
xlat
sbb
rcrb
fwait
ja
imul
mov
inc
jno
inc
push
in
movsl
pop
mov
fdivrs
lret
and
add
sub
xchg
cld
imull
fnsave
push
out
aaa
xchg
cmp
aam
loopne
clc
cs
rclb
notl
push
sub
jmp
xor
insb
push
negl
adc
jecxz
fimuls
xchg
daa
cld
dec
pop
cld
pushf
in
jbe
repz
lock
mov
adc
mov
mov
and
inc
ret
pop
xchg
stos
in
out
ss
sub
or
mov
rclb
into
mov
push
mov
bound
ret
add
push
cmp
js
lahf
or
sbb
insl
adc
scas
sahf
or
jl
xchg
outsl
pop
pushf
push
jns
pop
sub
inc
xlat
dec
popa
out
in
xor
sbb
clc
out
call
mov
movsb
mov
or
bnd
xor
in
xlat
push
lock
and
sar
push
dec
icebp
pop
jno
jg
bound
pop
cwtl
int3
mov
adc
xor
addr16
paddq
popa
inc
dec
mov
jbe
pop
imul
xor
test
inc
adc
gs
test
xchg
mov
push
test
test
and
out
mov
sbb
push
shl
adc
imul
jns
xor
repnz
pop
jg
mov
mov
sahf
or
sbb
xlat
lods
imul
push
cmp
fnstenv
das
imul
or
in
outsb
mov
push
jns
ret
in
pop
cmp
push
and
push
outsl
add
xor
sbb
outsl
loopne
fdivs
xor
add
out
and
mov
xchg
fadd
mov
push
es
shrl
in
ret
adc
cmp
pop
test
jno
pand
push
dec
cs
mov
and
sarb
neg
xchg
push
hlt
int
cmpsb
ret
and
adc
or
or
in
inc
mov
mov
stos
inc
idivl
out
gs
jle
leave
mov
cmp
ja
daa
mov
or
push
leave
mov
mov
add
and
add
dec
cmp
nop
in
push
dec
call
test
jb
int3
jns
popf
sbbl
inc
jmp
push
cmp
sbb
in
sub
mov
sub
out
insb
cmpsb
fnstsw
das
sbb
shll
xor
sbb
mov
repnz
loop
fistpll
sub
mov
sbb
inc
ficompl
shlb
jl,pn
xchg
cmpsl
ja
mov
aam
xchg
mov
jae
shll
cmc
xlat
popa
mov
pop
push
lcall
fstps
in
mov
pop
xchg
orl
add
push
js
aad
andl
nop
push
add
in
call
mov
adc
test
insb
cmp
adc
out
in
jnp
adc
mov
sbb
mov
aad
or
in
iret
in
and
scas
aaa
or
stc
inc
sub
pop
and
test
dec
daa
mov
mov
mov
xchg
jne
aaa
nop
xchg
mov
in
cmp
dec
out
mov
jl
pop
cmp
or
push
mov
mov
test
add
scas
sub
or
ljmp
inc
mov
sub
loopne
scas
loop
xor
mov
push
xchg
nop
sbb
repnz
cmp
or
mov
xor
iret
out
mov
cmp
xor
pop
and
imul
in
ficoml
mov
add
ss
adc
mov
sti
out
jle
js
xlat
mov
notb
js
scas
pop
mov
aaa
es
outsb
pusha
jg
gs
pop
cmp
xor
sbb
aaa
loop
push
repz
inc
das
jne
pop
xor
add
imull
mov
xlat
sub
fldenv
xchg
xchg
dec
add
mov
mov
das
test
mov
jl
mov
in
test
add
and
push
leave
aas
mov
addb
adc
rolb
pop
js
bound
imul
aad
outsb
cwtl
cmc
pop
lahf
cltd
icebp
cmp
inc
pop
sub
or
jne
mov
inc
inc
popf
pop
ja
xor
mov
xchg
outsb
sbb
mov
pop
popf
dec
sub
mov
lahf
lds
xor
enter
popf
gs
jecxz
dec
xchg
hlt
xor
loop
push
or
mov
aaa
bound
add
jecxz
ja
pop
iret
xlat
jl
imul
push
sbb
fnstenv
inc
scas
adc
ja
lret
cmc
repnz
fnsave
lret
jbe
pop
dec
or
in
das
stos
cmp
ret
cmp
inc
xor
sahf
add
cmp
xor
dec
jecxz
add
scas
add
rorl
mov
dec
lret
jmp
call
pop
outsl
cmpsl
enter
push
push
adc
adc
leave
sahf
mov
and
mov
call
inc
insb
cmp
cmc
push
jnp
loope
jae
in
jnp
mov
leave
and
push
sub
xchg
in
mov
jne
scas
popl
imul
aaa
push
jae
mov
xchg
inc
sub
lret
or
pop
movsb
mov
add
adc
jg
pop
cmp
in
into
adc
push
pop
cmp
mov
mov
adc
dec
cmp
divl
cmp
cmp
lahf
addr16
inc
shl
and
mov
int3
cmpsl
sub
lds
mov
push
pop
jmp
movsb
bound
jne
add
insl
cli
cmc
shl
lds
pushf
aam
int
or
lahf
cwtl
sub
push
cmp
repz
mov
jecxz
out
mov
inc
mov
imul
ficoms
stc
fs
fwait
add
and
gs
rcrb
daa
scas
in
pop
lahf
xchg
mov
cmp
lret
aad
cmp
mov
loopne
lahf
push
and
sbb
and
xor
jge
outsb
out
cs
out
dec
push
and
lcall
je
adc
loope
pop
adc
fidivrs
pop
fcompl
pop
jecxz
sub
sarl
push
push
sub
stos
and
ja
dec
cwtl
ss
inc
pop
dec
and
jne
or
push
inc
inc
das
sbb
fs
xor
adc
scas
or
test
mov
sub
cmp
cmp
rol
and
sbb
mov
jbe
andl
aaa
xchg
jg
lret
dec
push
xchg
jnp
mov
cmpsl
push
mov
stos
or
jne
and
adc
lods
lock
arpl
test
and
mov
fwait
sub
hlt
jg
insb
insb
mov
fs
push
xchg
pop
pop
adc
lock
inc
push
pop
mov
mov
subb
stos
stc
repnz
aas
adc
daa
ds
imul
push
mov
sti
scas
lcall
xchg
jo
leave
sbb
mov
movl
mov
cmpsl
jae
or
or
push
jns
mov
outsb
scas
idiv
cld
movsb
cmc
stc
es
xchg
scas
lret
fists
mov
xchg
sbb
rolb
mov
push
out
cmp
je
paddb
and
adc
or
je
pop
outsb
jmp
dec
in
mov
lods
xchg
divb
dec
add
xlat
push
sbb
mov
push
shlb
push
call
sbb
push
jbe
jbe
roll
mov
nop
lea
imul
push
inc
lret
adc
js
adc
fsubs
mov
dec
into
adc
push
jns
adc
pop
repz
mov
mov
push
mov
dec
jmp
add
pop
cmp
xchg
dec
xchg
loop
jecxz
sub
mov
lods
aaa
inc
rolb
inc
fistpll
xor
sub
mov
add
jae
scas
add
cmc
mov
test
es
cmc
xchg
test
pcmpeqb
xor
mov
sahf
jecxz
stos
xchg
std
dec
je
pop
rcrb
arpl
and
int
jbe
arpl
push
imul
sti
cmp
jmp
pop
xchg
push
adc
shld
inc
ss
mov
call
iret
jnp
gs
imul
call
cs
lcall
pushf
pinsrw
or
cwtl
enter
int3
mov
cltd
dec
aam
stc
gs
mov
add
adc
or
pop
mov
cs
dec
and
jmp
insl
fldl
cmpsl
insb
mov
or
repz
rcrb
mov
or
dec
mov
mov
cmp
cmpsb
fimull
mov
xor
rcrb
jnp
inc
push
xor
push
xlat
xchg
dec
adc
add
jns
jo
sbb
or
jne
jne
mov
aam
sub
mov
popl
std
mov
inc
mov
mov
xchg
pop
jo
fwait
or
mov
mov
mov
fisttpl
leave
out
mov
popf
dec
or
xchg
js
inc
fs
dec
jecxz
add
jbe
pop
stos
imul
dec
popa
std
fbstp
push
push
inc
sub
mov
ja
xchg
insb
jge
pushf
inc
or
sti
into
mov
xchg
dec
ss
xor
cmc
dec
dec
jle
daa
lods
xchg
repnz
mov
push
rcrl
sbb
cmpsl
dec
xchg
mov
and
mov
sub
fnstsw
mov
add
cmpl
out
push
je
jmp
and
dec
fldt
inc
lahf
adc
loopne
out
mov
ret
aas
loopne
inc
subb
cli
adc
push
add
push
iret
push
fcompl
mov
int
pop
add
ds
mov
in
cmp
repz
xchg
sahf
test
rcrb
mov
icebp
mov
inc
inc
mov
shlb
push
les
add
xor
sbb
aad
decb
ss
or
adc
leave
pop
jmp
lahf
lret
mov
jae
jecxz
xchg
dec
and
xchg
push
stc
push
shl
fcoml
out
inc
fsubl
push
cmp
fstpt
inc
std
jp
iret
loopne
xchg
jno
cmpl
cmp
mov
and
xchg
mov
ret
shlb
jmp
xchg
add
mov
or
and
mov
in
cltd
fstl
and
in
aad
popf
jb
adc
lods
pop
xchg
lret
outsb
dec
pop
int3
jae
and
mov
scas
divl
sbb
lds
adc
fildl
inc
cmpsb
test
jnp
push
out
fimuls
sbb
mov
pop
cmp
dec
pop
and
sbb
inc
pop
mov
xchg
xor
push
push
enter
sbb
lea
cmc
out
push
or
xor
imul
mov
iret
lds
dec
scas
adc
mov
in
xchg
loop
push
aad
daa
push
iret
hlt
fsubs
sub
inc
rcrl
and
lahf
sub
push
or
xchg
and
in
fmul
cmp
mov
dec
fisubl
jno
mov
jne
fwait
insb
dec
and
mov
or
mov
fildll
xchg
loope
inc
xchg
and
repnz
cmpsb
in
mov
sarb
icebp
repz
lret
pop
lret
sahf
pop
pcmpgtw
addl
aas
cmpsl
cltd
xor
out
mov
bound
addl
adc
adc
or
sub
xor
divl
inc
inc
outsl
imul
repz
pop
inc
loop
inc
out
or
out
dec
add
cmp
lock
and
push
pushf
rcrl
xlat
add
pushf
jge
fdivrl
adc
insl
inc
mov
cmpsb
cwtl
xchg
xlat
ret
sbb
push
lea
bound
into
pop
addr16
xor
lret
xchg
imul
scas
mov
fwait
mov
scas
roll
mov
sbb
insb
and
mov
add
push
dec
mov
jmp
or
mov
sbb
xorb
sbb
lock
fldenv
jno
adc
mov
scas
test
cld
mov
jge
cs
adc
sub
lcall
cmp
mov
ja
dec
adc
rolb
lahf
or
xlat
ljmp
sbb
movsl
mov
rcll
sub
xchg
clc
jecxz
adcl
movsb
imul
pop
push
xor
daa
lahf
movlps
push
dec
cmc
mov
dec
mov
cmp
pop
inc
fsubrp
sbb
dec
push
dec
jbe
mov
xchg
popa
mov
xor
lds
mov
pop
push
xor
or
xchg
imul
jmp
fs
out
ret
dec
or
lock
adc
mov
sbb
xor
into
lret
jns
xchg
fucomi
add
test
xor
cltd
push
and
nop
xchg
add
jg
cmpsl
and
out
dec
aam
movsb
jb
push
jb
fs
clc
xchg
xor
mov
frstor
faddl
loop
xchg
ret
xchg
sub
pop
fdivs
push
or
mov
cli
sbb
inc
aad
call
shll
xorb
mov
jecxz
xchg
add
sahf
inc
ret
lcall
mul
and
test
test
cmp
dec
xor
cmp
sbb
ret
push
add
cmp
in
xchg
mov
lds
insl
jae
test
mov
and
and
adc
dec
mov
les
cmp
es
mov
add
push
lods
cmc
pop
pop
test
dec
cmc
dec
add
sbb
rcll
aad
adc
sbb
mov
lds
loope
pop
sub
mov
sub
imul
outsl
incb
inc
xor
push
fiadds
imul
loop
push
xchg
xchg
jge
gs
dec
sbb
jns
or
cmp
int
sub
test
lea
jae
push
pop
add
jbe
jle
xor
xchg
jno
mov
int3
pop
dec
add
sbb
push
mov
sbbl
xor
aam
test
cmp
and
fisubs
in
cmp
mov
push
mov
into
das
clc
xlat
push
ret
pop
mov
inc
fs
lods
jmp
arpl
cmp
sub
or
into
dec
xchg
jb
inc
cmp
push
les
out
shlb
pop
out
xchg
test
daa
das
and
mov
xorl
dec
pop
pop
or
dec
jo
mov
int3
sub
pop
cmp
pop
sub
pushf
jge
dec
insl
mov
in
popf
leave
or
out
xchg
imul
and
jle
stc
fnstcw
dec
sub
ficoml
inc
pop
and
outsl
sbb
nop
mov
sbb
mov
dec
std
into
sub
add
call
mov
mov
xor
cmp
mov
adc
imulb
adc
push
jne
repnz
pop
jo
add
push
adc
fiadds
int
dec
sbb
jno
xor
cmpb
stos
push
cld
nopl
inc
popf
pop
rorb
jno
mov
cmp
arpl
cwtl
adc
push
hlt
shl
xor
mov
xchg
sbb
or
push
add
jp
psrlw
push
push
jne
jp
std
push
jns
lret
dec
fmuls
loope
nop
in
cmp
shl
imul
or
sub
int
int
sub
cmpsb
sbb
ja
mov
inc
lea
push
adc
fstpt
pop
dec
push
in
xchg
fwait
xor
movsl
test
cmpsb
mov
stos
scas
pop
and
fnstcw
jae
ret
and
sbb
mov
cmc
jge
xchg
pop
imull
xlat
xchg
pop
sti
mov
adc
and
cmc
xor
in
test
fcomps
lcall
push
hlt
enter
mov
or
pop
or
mov
dec
fimuls
hlt
push
adc
test
icebp
flds
pop
sub
and
xchg
out
lret
jl
sti
mov
lea
push
mov
stc
push
cmp
jo
loope
fsubrl
fwait
push
push
aad
and
sub
in
lods
and
push
out
or
jg
cld
in
repz
imul
jle
imul
add
jl
sbbb
pushf
or
bound
out
repnz
stc
test
inc
mov
popl
xchg
jnp
iret
add
adc
mov
cmpsb
les
test
push
fs
add
or
add
pop
add
jno
outsl
lcall
push
cmp
rcrb
js
cltd
orb
dec
mov
jae
adc
fwait
imul
imull
and
add
push
push
ds
sub
inc
int3
stos
mov
mov
scas
mov
addb
stos
sbb
dec
sbb
adc
int3
stos
mov
mov
xor
shld
negb
dec
cltd
push
mov
jle
adc
ficompl
lcall
and
sub
sub
pop
aaa
fcompl
mov
inc
imul
loope
dec
insl
xchg
xor
test
adc
xor
ss
into
icebp
fdivr
inc
inc
cmp
inc
outsl
jb
or
push
mov
in
fadds
sub
sbb
mov
inc
es
cmp
ror
into
movsb
xor
pop
and
lock
es
cmp
xor
xchg
in
and
lods
push
scas
test
lods
outsb
stos
adc
outsb
shl
xor
xor
dec
push
mov
addr16
xchg
mov
sti
fisubrl
or
rol
pusha
shll
call
mov
cmp
cmpl
repz
dec
out
test
arpl
and
jmp
add
les
sub
dec
mov
jns
arpl
cmpsl
jge
test
jno
ljmp
shrb
data16
cli
xchg
gs
dec
push
scas
int
jecxz
je
mov
sub
mov
pop
loope
mov
lahf
call
or
mov
xchg
fists
test
add
jno
movsb
pop
cmp
push
dec
dec
repnz
mov
xchg
jecxz
lret
jp
outsb
insl
lahf
pop
lods
adc
call
adc
add
xchg
lahf
in
jmp
rcrb
push
in
in
mov
xchg
cli
mov
repz
jle
mov
jne
aaa
hlt
cli
clc
dec
add
xchg
cmp
int
mov
dec
inc
xor
or
decb
jmp
ljmp
xchg
call
sbb
