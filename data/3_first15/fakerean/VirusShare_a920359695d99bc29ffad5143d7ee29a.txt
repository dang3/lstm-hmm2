add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
clc
add
lea
je
call
add
popf
pusha
decl
test
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
dec
add
xorps
pop
inc
add
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
mov
call
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
jge
inc
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
inc
add
testb
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
jb
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
out
repnz
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
add
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
jle
inc
add
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
add
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
add
into
pop
inc
add
rorb
pop
mov
test
xor
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
dec
sti
inc
add
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
adc
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
sbb
nop
or
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
or
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
sbb
add
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
pop
inc
add
push
add
add
fnstenv
idivb
stc
pusha
sti
bound
add
xchg
lods
lahf
fmul
sti
shlb
pop
lock
add
add
jbe
roll
out
add
push
add
add
stos
cli
std
add
mov
icebp
pop
mov
js
add
roll
add
push
mov
add
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
add
jae
add
jns
xlat
jecxz
add
add
pop
fmuls
mov
push
add
add
int
mov
add
jbe
in
add
roll
add
lock
add
jl
push
testl
mov
fmull
inc
in
push
push
push
lea
push
push
lea
push
push
call
jne
cmp
lret
fcomps
mov
notb
add
pushf
icebp
add
add
xchg
add
lret
mov
hlt
add
xchg
xchg
scas
add
int3
pop
test
jmp
test
jae
add
pop
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
test
add
add
pop
stc
add
gs
lcall
add
in
add
js
addl
jp
add
rolb
add
add
add
mov
add
add
jp
jle
add
add
adcl
aam
add
push
add
pop
push
push
push
push
push
call
add
cltd
add
ja
std
add
pusha
add
pop
pop
rcr
xchg
mov
mov
fcmovnu
jae
pop
add
add
jecxz
mov
add
add
faddl
add
mov
adc
push
push
push
lea
push
push
call
add
pop
imul
mov
lods
out
xchg
add
jmp
add
pop
mov
arpl
add
movsb
data16
mov
add
into
add
add
mov
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
pop
lods
mov
add
add
add
add
add
lret
push
add
add
mov
push
iret
cmp
testl
loope
push
add
jb
pop
jae
add
add
jo
add
nop
pusha
add
add
outsl
add
add
lea
pop
call
push
lea
push
push
push
push
lea
push
lea
push
push
call
lret
movl
add
rolb
filds
add
arpl
add
mov
add
xchg
add
xchg
clc
addl
movsl
add
add
add
add
out
std
lods
add
into
jecxz
sti
add
cmc
add
add
sahf
add
add
pop
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
movsl
ljmp
lret
mov
add
lret
mov
mov
in
mov
fsubp
mov
add
mov
in
jl
frstpm(287
add
mov
add
and
fmuls
add
outsl
mov
lea
add
mulb
add
mov
ret
aam
add
mov
jae
jl
nop
mov
lea
pop
push
call
push
lea
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
out
add
add
add
add
pop
add
loop
xchg
mov
add
add
fcmovu
in
mov
test
add
scas
push
mov
test
jmp
jae
push
push
add
test
pushf
mov
lea
pop
jmp
ret
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
out
pop
in
aad
movsl
push
add
cld
mov
int
fimuls
push
test
add
add
pusha
fptan
movsl
add
pop
hlt
jle
add
xlat
aam
jne
add
xchg
popf
mov
add
add
aam
bound
pop
mov
push
push
push
push
push
push
call
js
mov
ror
add
jne
les
call
loope
pop
add
scas
movsb
mov
mov
lods
xchg
add
add
hlt
mov
arpl
add
add
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
lea
in
fldl2e
cmpl
in
pop
add
mov
bound
pop
jbe
call
add
imul
add
cld
std
add
add
repnz
insb
cltd
add
add
add
jmp
pop
add
xchg
cmpsb
mov
add
add
xchg
add
incb
jge
push
add
add
pop
add
push
push
call
add
add
add
add
mov
cmpsl
add
ret
mov
je
add
mov
mov
fs
xlat
add
push
ljmp
mov
mov
lea
pop
add
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
push
nop
add
xchg
add
fdivs
add
sti
add
fldl
repnz
test
rcr
fadds
jo
mov
jae
in
add
add
test
icebp
mov
push
fldt
mov
lea
pop
add
push
push
push
push
push
call
lds
add
in
add
filds
pushf
cwtl
aam
add
jecxz
data16
cltd
add
jmp
push
add
testb
nop
add
xchg
jne
add
jno
jle
bound
add
jecxz
add
mov
fadds
shll
mov
jno
push
ja
pop
arpl
add
fxch
mov
lea
pop
mov
push
push
push
push
call
fwait
enter
add
add
fadds
add
jnp
in
add
rcrl
pop
jge
add
add
add
jo
int
add
add
stos
xchg
leave
add
movsb
cmpsb
jl
xchg
jmp
pop
fiaddl
push
fldenv
in
jge
add
pop
xor
push
push
push
push
call
add
insb
add
std
add
roll
add
data16
fldenv
jecxz
pop
jne
clc
add
add
add
add
add
push
push
add
int3
cmpsb
icebp
scas
add
mov
int3
lea
pop
add
push
push
ror
push
or
not
add
shl
inc
sub
not
xor
inc
pop
sub
pop
push
push
push
push
push
push
push
push
call
add
xchg
add
push
add
ja
push
in
jnp
xchg
outsl
sti
scas
popa
xchg
test
add
mov
add
pop
add
add
add
lock
roll
mov
cld
jns
lea
stos
out
in
jnp
add
in
insb
add
add
cli
lods
pop
jnp
clc
jecxz
push
cmc
jge
jle
ret
mov
lea
pop
pushl
call
push
push
push
push
push
push
call
mov
cmpsb
mov
sarb
out
add
add
mov
add
mov
add
add
add
add
add
mov
add
push
aad
add
shlb
mov
add
mov
lea
pop
mov
push
lea
push
call
stc
shl
push
add
jp
leave
add
add
mov
add
outsl
add
test
lahf
add
test
enter
add
addr16
sahf
stc
add
add
add
clc
add
ljmp
leave
rolb
add
add
push
pop
add
mov
add
rolb
add
mov
lea
pop
movl
push
push
push
push
lea
push
call
add
lods
stos
cmpsl
scas
icebp
pop
add
add
scas
imul
add
ja
aad
add
arpl
add
xchg
pusha
loope
popa
mov
divb
je
add
addr16
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
pop
mov
mov
cmp
mov
add
push
pop
add
test
rorl
lret
add
add
mov
add
push
mov
xchg
addb
add
add
xchg
stos
push
fstpt
fldl
mov
rorb
imul
jno
mov
lea
pop
pushl
pushl
push
push
lea
push
push
push
call
lods
rolb
lds
jle
push
mov
sar
add
xchg
addb
stc
pop
add
add
add
aam
add
add
mov
add
add
in
add
mov
add
mov
mov
lea
pop
call
push
push
push
push
lea
push
push
lea
push
push
push
push
call
test
lret
add
xchg
loopne
lods
add
add
testb
imul
mov
js
xchg
add
add
into
add
add
enter
add
out
add
add
add
push
jae
arpl
fwait
mov
lea
pop
pushl
push
lea
push
push
push
lea
push
call
add
mov
add
std
mov
testl
jp
arpl
add
stc
push
add
push
loope
call
add
in
add
clc
mov
add
cmpsb
mov
push
popl
fnstsw
enter
pusha
adc
pushl
call
push
push
xor
push
push
pop
add
add
add
sub
add
sub
pop
rol
sub
ror
pop
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
add
add
add
lret
addb
jb
add
out
scas
ljmp
fiadds
add
mov
add
add
mov
lea
pop
pushl
push
push
push
push
lea
push
call
in
add
aad
mov
add
add
out
pop
add
call
add
nop
hlt
lods
nop
add
add
add
in
add
pushf
mov
add
stos
fiaddl
lea
test
add
cmpsl
add
pop
add
add
add
cli
lahf
sahf
ret
add
jno
jbe
xchg
mov
xlat
cld
fldl
push
cmc
jns
out
add
repnz
lea
pop
call
push
push
push
push
lea
push
call
add
out
add
jmp
in
scas
add
cli
add
mov
fwait
mov
pop
cwtl
fiaddl
mov
push
add
faddl
test
imul
call
faddl
and
lahf
int
jo
push
into
add
add
add
add
cltd
int3
mov
lea
pop
push
push
push
push
or
inc
add
sub
inc
sub
shr
pop
sub
sub
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
mov
mov
movsl
add
add
add
add
mov
add
xchg
add
movsl
movsb
add
enter
loope
add
mov
add
add
out
movsl
mov
in
mov
add
mov
add
mov
std
xchg
jmp
add
in
fisubl
jbe
les
and
push
push
call
mov
add
add
add
mov
pop
add
mov
add
movsl
ret
pop
add
stos
lret
lret
add
xchg
mov
repnz
add
pusha
or
add
rclb
xchg
lea
push
push
push
push
lea
push
push
call
mov
mov
xchg
repnz
add
movsl
add
cli
add
cmpsb
fidivl
loop
popl
add
add
mov
xchg
lods
js
popf
cmpsl
cmc
sti
lahf
arpl
lods
scas
je
add
arpl
lret
add
push
xchg
testl
lea
push
lea
push
call
add
add
xchg
je
imul
popl
fildl
add
mov
add
testb
push
add
add
pop
rclb
add
add
rolb
add
in
add
add
add
lock
or
push
push
push
lea
push
push
call
cmpsb
outsl
add
outsl
add
icebp
loope
add
mov
add
add
add
addb
xlat
imul
hlt
add
mov
add
mov
add
ficompl
add
ret
add
add
js
add
test
cmpsb
mov
pop
cwtl
mov
lea
pop
push
mov
push
push
push
lea
push
push
push
lea
push
call
lods
add
icebp
mul
add
add
addl
mov
jnp
ja
xchg
push
add
shl
movsl
xchg
mov
xchg
mov
mov
add
xchg
add
pop
mov
out
jl
mov
lea
pop
add
add
push
push
push
push
lea
push
call
lahf
add
jno
jno
add
add
add
loopne
add
add
add
jo
filds
jl
pusha
add
int
nop
add
xchg
push
push
js
mov
lea
pop
add
push
push
push
push
call
add
shll
add
add
add
mov
add
add
movsb
sahf
add
loopne
mov
jnp
mov
add
add
notb
lods
add
imul
adc
xor
pop
jae
push
lea
push
lea
push
call
lds
add
test
pop
faddl
outsl
jo
push
pop
add
popa
add
mov
jecxz
mov
mov
loopne
add
ja
xchg
add
je
mov
std
xchg
add
test
add
add
aam
in
loopne
add
xchg
fcoml
imul
add
in
pop
mov
push
add
pop
xor
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
add
fiaddl
add
jb
in
add
add
xchg
test
outsl
push
sahf
add
pusha
mov
pop
mov
ret
add
add
xchg
xchg
add
in
jns
mov
lea
pop
add
push
push
call
pop
jne
fdivrs
push
test
jae
add
lcall
lea
cli
mov
add
add
sarl
ret
hlt
jmp
xlat
ja
jbe
js
cmpsb
add
fmulp
mov
mov
add
add
add
imul
mov
shl
push
mov
lods
addb
add
fiaddl
sar
out
imul
fdivrs
lea
pop
add
push
lea
push
lea
push
call
arpl
hlt
lock
bound
test
scas
pop
add
rcr
add
mov
push
add
lods
add
xchg
add
fsubr
add
add
xchg
addl
mov
lea
pop
push
push
push
lea
push
push
push
call
mov
add
add
xchg
movb
jne
lock
mov
lods
xchg
xchg
add
rolb
cld
add
cmpsb
add
push
add
in
test
add
lds
out
add
aam
int3
jnp
popf
mov
add
add
ret
lea
pop
mov
push
push
push
push
lea
push
push
push
call
add
xchg
js
aad
pop
insb
add
xchg
fadds
jae
enter
pop
fmul
add
jp
out
pushf
fsubrs
cld
add
lcall
pop
add
add
in
add
mov
addb
jbe
add
in
add
jge
add
pushf
add
add
mov
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
push
call
mov
jae
insb
cwtl
add
out
add
add
add
add
mov
addl
ja
add
int
lds
loop
pop
ljmp
mov
xchg
add
add
mov
in
fadds
jns
lods
shl
add
pop
add
push
push
push
lea
push
push
call
fldcw
add
pushf
add
bound
icebp
data16
add
add
out
sbb
add
push
add
mov
add
out
add
add
push
add
loop
add
movsb
mov
xchg
add
int
add
add
mov
lea
pop
add
push
push
push
push
push
push
call
add
xchg
add
jb
add
mov
add
in
add
rolb
jb
add
add
push
jns
test
add
add
add
add
leave
add
add
mov
add
mov
add
add
add
into
pop
imulb
add
pop
pop
push
push
push
call
add
fidivl
add
out
cltd
mov
lahf
push
add
cmpsb
cli
iret
lock
movsb
movl
add
xchg
add
std
popl
add
add
xchg
add
mov
out
jmp
add
add
mov
jbe
add
rcrl
iret
rolb
leave
xchg
add
add
add
cld
jo
mov
lea
pop
mov
xor
push
push
lea
push
push
call
enter
mov
js
mov
pop
jnp
test
mov
add
add
mov
fwait
lock
add
into
add
xchg
push
jp
int3
lea
pop
push
push
push
push
push
push
lea
push
push
push
call
nop
jo
cltd
adcb
add
add
add
add
add
out
add
push
call
loopne
mov
add
add
push
add
hlt
mov
aam
bound
pop
mov
xor
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
add
add
xchg
add
ljmp
movsb
mov
add
cltd
add
add
push
pop
add
stc
scas
lds
pop
hlt
add
xchg
add
mov
add
gs
roll
mov
add
add
stc
add
cmpsb
addr16
lea
pop
sub
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
xchg
xlat
imul
add
add
cli
add
add
add
lds
add
mov
fdiv
mov
lcall
push
insb
push
mov
in
add
loop
lds
aam
xchg
add
imul
add
data16
rcrl
lahf
out
add
add
mov
lea
pop
pop
rep
push
pop
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
pop
add
mov
ljmp
add
loop
repnz
nop
add
fisttps
add
add
add
cmpsl
add
popa
loope
add
add
push
mov
xchg
in
enter
lret
lcall
popa
sub
pop
in
ret
add
add
push
inc
pop
add
push
lea
push
push
push
lea
push
push
push
push
push
push
call
rclb
pushf
fiadds
xchg
add
fs
add
pop
cmpsb
add
out
arpl
push
add
mov
mov
stos
jnp
xchg
add
out
add
add
jecxz
add
mov
cld
lea
pop
mov
xor
push
lea
push
call
mov
add
lock
add
lods
movsb
add
add
hlt
mov
test
mov
ror
movsb
pop
stc
add
lea
add
pop
xchg
add
xchg
pop
xchg
add
cld
xor
xchg
add
sarl
hlt
add
add
in
stos
sbbb
add
lea
pop
mov
xor
push
push
push
push
push
push
lea
push
push
push
call
mov
add
in
add
fs
movsb
out
cmc
cmc
addb
jb
icebp
ja
pop
popa
jnp
xchg
jb
add
leave
leave
fildl
add
add
add
mov
add
add
test
add
add
loop
scas
fs
popa
add
add
mov
bound
out
mov
arpl
mov
xor
push
xor
lea
shl
inc
pop
add
push
push
push
lea
push
push
push
push
call
mov
loopne
xchg
add
out
add
push
add
in
enter
push
add
sahf
add
ljmp
add
xchg
scas
xchg
add
add
mov
xchg
scas
mov
add
mov
loopne
add
mov
add
js
les
rcll
not
sub
pop
mov
push
push
rol
inc
push
and
add
dec
shr
sub
not
add
add
pop
pop
push
push
push
push
push
push
call
js
fisubrs
add
xchg
test
push
add
loope
lret
add
xchg
mov
add
xchg
mov
cwtl
jge
xchg
add
add
cwtl
andl
jbe
jle
mov
test
ret
add
fiaddl
add
add
add
add
jp
mov
sbb
jne
push
lea
push
push
push
lea
push
push
push
push
push
call
call
fsub
popf
out
xchg
push
je
popl
add
jmp
mov
add
add
out
pop
fistpl
mov
call
pop
test
ret
add
push
xchg
lock
fiadds
add
add
outsl
add
popa
mov
lea
pop
call
push
ror
pop
push
push
push
add
not
inc
sub
push
and
add
shl
lea
dec
add
sub
sub
pop
ror
pop
push
sub
pop
push
push
push
lea
push
push
call
movsl
add
push
out
add
push
lret
bound
lods
mov
push
rcrb
jmp
add
testl
mov
out
jnp
jecxz
xchg
add
arpl
mov
add
clc
add
repnz
movsb
addl
xchg
insb
stos
loop
mov
lea
pop
call
push
push
call
add
movsl
jge
add
in
mov
jge
jae
add
std
mov
sti
out
pop
jae
add
add
ljmp
add
hlt
mov
add
hlt
lretw
nop
scas
add
fstpt
add
pop
add
subl
mov
lea
pop
mov
push
lea
push
push
push
push
call
pop
mov
in
add
add
add
cmpsb
jp
mov
call
fnstenv
mov
add
add
mov
arpl
add
xchg
rcrb
sahf
insb
out
push
mov
add
pop
out
nop
mov
mov
mov
cld
lea
pop
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
push
add
add
add
add
lret
jbe
in
mov
add
add
lods
jmp
add
add
test
mov
repnz
add
add
add
leave
add
jo
int3
lea
pop
push
mov
push
inc
xor
shl
pop
add
push
rol
pop
add
push
lea
push
lea
push
push
push
lea
push
call
lcall
bound
add
add
stos
lahf
add
add
push
rcll
add
fsub
xchg
mul
movl
fdivl
add
outsl
add
ret
loopne
add
jp
test
aam
bound
pop
add
mov
xor
push
push
push
push
lea
push
push
call
jmp
cld
push
hlt
add
add
leave
lods
add
andb
add
sarb
xchg
stos
jecxz
mov
lret
pop
add
test
ficoml
jmp
add
pop
add
lea
pop
add
push
push
push
lea
push
push
push
push
push
lea
push
call
roll
add
add
movsb
ficoms
jo
add
ja
mov
pop
cltd
mov
clc
aad
mov
fadds
jmp
popa
push
imul
mov
pop
mov
leave
jmp
sahf
les
push
add
jmp
add
testb
in
in
add
cltd
nop
add
add
add
mov
add
add
mov
lea
pop
push
push
push
push
push
push
lea
push
call
cltd
movl
add
pop
xorl
leave
out
iret
add
push
fstpt
fcmove
icebp
add
add
clc
in
add
push
add
in
xchg
add
xchg
lret
xchg
add
pushf
lcall
pop
in
push
lock
lock
add
add
add
add
add
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
lea
push
call
pop
add
add
test
add
scas
add
push
mov
add
lret
leave
sahf
push
sahf
add
out
pop
push
add
add
sti
push
cmpsl
add
mov
add
faddl
jne
nop
cltd
add
jl
add
add
add
push
arpl
pop
xor
push
push
push
call
xchg
jmp
xchg
add
mov
pop
add
add
add
loop
hlt
shll
pop
pusha
add
push
jmp
addr16
cli
lcall
xchg
icebp
pushf
pusha
add
lds
add
add
js
ja
add
rorl
add
push
sub
not
add
pop
add
push
push
push
push
push
push
push
push
lea
push
call
pop
pop
add
repnz
mov
xchg
add
xchg
lods
add
pop
add
add
mov
jne
mov
repnz
add
push
cltd
add
mov
mov
lea
pop
pop
mov
push
push
lea
push
call
les
shr
clc
add
mov
add
pop
mov
add
add
add
add
cli
in
add
js
rolb
jo
add
xchg
add
add
mov
lock
lea
aad
jns
jae
shlb
add
mov
lea
pop
xor
push
push
push
push
push
push
push
push
call
pop
mov
add
addl
mov
push
test
pop
loope
mov
out
add
into
outsl
push
pop
mov
jo
pop
clc
add
mov
adc
leave
add
add
icebp
push
add
test
testl
arpl
pop
add
push
pop
rep
mov
push
push
lea
push
push
call
rcrb
fiadds
cmc
mov
add
add
fists
repnz
ret
lcall
pop
je
je
icebp
add
add
repnz
pop
stos
add
cwtl
add
jmp
push
add
jecxz
push
std
add
pop
xor
push
push
push
push
push
push
push
call
mov
arpl
add
pop
leave
add
add
jns
cmc
mov
cli
add
insb
ret
mov
pop
enter
icebp
add
clc
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
iret
roll
flds
cmpl
add
pop
fldenv
mov
jecxz
out
rolb
add
fwait
xchg
lahf
jmp
add
add
mov
xchg
lret
push
push
xchg
fmull
pop
or
je
push
push
push
push
push
call
add
mov
leave
icebp
add
mov
add
cmc
add
jmp
jle
jno
add
add
add
xchg
add
mov
jne
mov
lea
pop
mov
xor
push
push
push
push
call
ljmp
into
mov
add
lock
add
int3
enter
flds
add
add
xchg
out
add
jmp
jp
lods
mov
out
add
add
mov
jbe
add
add
add
addl
fldl
push
push
shlb
lea
pop
mov
push
push
push
lea
push
call
arpl
mov
ret
enter
push
repnz
add
mov
xchg
add
xlat
add
mov
imulb
in
cmp
add
popfw
fdivs
or
xor
push
push
push
push
push
call
push
adcl
add
xchg
test
mov
add
cld
mov
test
mov
testl
stos
add
add
mov
loop
add
lea
pop
add
push
inc
sub
pop
add
push
push
push
call
add
mov
pop
push
cmpsb
mov
add
int3
mov
add
add
xchg
add
add
outsl
testl
pop
push
add
popa
jmp
add
add
jge
jl
cmc
add
mov
add
jmp
add
add
mov
add
lea
add
mov
lea
pop
add
push
sub
pop
push
push
sub
xor
add
pop
mov
push
push
push
call
add
hlt
add
add
add
add
shr
lock
lret
xlat
test
fadds
xchg
filds
arpl
add
mov
add
mov
test
sti
shll
flds
add
enter
jnp
out
add
fs
hlt
lea
pop
xor
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
lret
cwtl
add
jl
fld
push
stos
cli
add
add
sahf
add
clc
add
add
add
ljmp
add
out
jecxz
pusha
pop
test
pusha
add
add
jecxz
in
fwait
push
jmp
add
addr16
add
out
shl
cmc
fstl
fmull
les
push
lea
push
push
push
push
push
push
call
add
pushf
popl
shr
test
in
in
leave
push
pop
pop
push
add
movsb
addr16
popl
xchg
add
mov
jnp
add
push
jle
add
lahf
push
movb
push
mov
test
add
add
add
add
push
add
push
cmpsb
add
push
lods
mov
add
aam
add
push
mov
push
and
lock
pop
pop
push
pop
rep
mov
push
push
lea
push
call
aam
add
add
mov
add
lahf
add
add
mov
stos
jmp
add
stos
scas
fstp
push
stos
add
jo
add
outsl
test
push
in
add
add
insb
pop
fwait
add
add
data16
add
add
roll
imul
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
ret
xchg
sbbl
xchg
popf
add
lret
add
add
add
ret
mov
cmpsl
insb
add
xchg
xchg
push
add
pop
call
flds
fs
add
dec
add
fwait
add
aam
bound
pop
add
push
xor
add
pop
or
je
push
push
push
lea
push
push
call
jbe
add
int
mov
add
add
in
add
lds
add
fisubrs
loop
fldz
jecxz
pop
cld
fildll
imul
mov
push
xchg
loope
jb
add
add
pusha
add
add
sahf
add
pushf
add
testl
jno
shll
lea
pop
mov
push
push
push
push
call
scas
js
out
add
add
mov
add
cmpsb
add
add
icebp
jle
lcall
add
lods
add
mov
fwait
popf
add
addl
jbe
cmc
push
pop
shlb
add
in
jb
add
fdivs
add
add
add
rcll
add
mov
lea
pop
add
add
push
push
lea
push
lea
push
push
push
push
lea
push
call
pop
add
mov
push
fiaddl
add
xlat
add
int3
add
mov
xchg
addl
add
mov
int3
add
add
sti
js
popa
add
movsl
stos
je
int
add
cmpsl
push
leave
add
push
leave
mov
add
pusha
xchg
test
add
add
add
jae
shlb
add
mov
lea
pop
rep
push
sub
not
dec
sub
pop
pop
push
push
not
shl
sub
push
or
not
add
shl
sub
sub
sub
lea
pop
ror
add
pop
push
not
pop
pop
mov
push
inc
shr
lea
pop
mov
push
push
lea
push
push
call
stos
add
data16
cld
mov
imul
scas
mov
add
xchg
mov
pop
imul
add
mov
add
icebp
add
mov
rcll
enter
mov
lea
pop
mov
jmp
push
shl
lea
shl
pop
push
mov
push
pop
add
push
push
push
call
int3
mov
lods
bound
aam
lods
pop
int3
bound
lods
add
pushf
stos
add
add
add
push
sar
ja
pop
loopne
jo
incb
popl
test
lret
mov
add
je
out
icebp
add
mov
add
int3
hlt
popf
imul
test
add
jge
mov
add
jne
fs
mov
lea
pop
push
push
push
lea
push
push
push
call
add
movsl
ret
repnz
ljmp
add
jno
add
lods
add
je
push
xlat
in
mov
jp
imul
add
mov
arpl
push
push
push
dec
pop
mov
pop
push
pop
pop
push
lea
shr
rol
lea
pop
pop
pop
push
shl
inc
pop
leave
push
inc
pop
ret
push
push
lea
push
push
lea
push
push
push
call
movsb
lret
in
jp
add
add
popf
lea
add
add
mov
add
add
xchg
and
jb
in
add
int3
lea
pop
push
mov
push
sub
add
xor
pop
add
push
push
push
push
push
lea
push
call
mov
add
mov
test
data16
cwtl
jae
mov
xchg
add
add
add
add
repnz
push
ljmp
add
add
mov
mov
imulb
add
push
push
add
cli
xchg
add
cmc
in
add
jno
add
jp
xlat
fstps
arpl
arpl
pop
push
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
xchg
jbe
out
popf
add
fisubrs
add
mov
jl
add
add
rcrb
mov
pop
fisubl
add
movsl
loope
add
pop
push
push
shr
lea
sub
shr
pop
push
push
sub
pop
push
push
push
push
push
push
push
push
push
call
push
lea
mov
lcall
push
pop
add
leave
push
add
int3
add
stos
add
cltd
outsl
jae
icebp
add
jecxz
mov
push
pop
mov
hlt
lea
pop
movl
push
lea
pop
addl
push
lea
shl
add
pop
test
je
mov
push
sub
pop
pop
push
add
lea
pop
pop
push
xor
add
lea
add
pop
pop
pop
push
lea
push
push
push
push
lea
push
call
int
jnp
push
cltd
add
add
jp
add
add
add
add
add
add
cwtl
popa
pop
add
add
add
cwtl
add
addr16
add
vphaddwq
shlb
mov
push
add
mov
lea
pop
leave
push
push
lea
push
lea
push
call
jp
mov
add
addl
mov
scas
xchg
push
mov
jmp
jo
shlb
xchg
mov
xchg
pop
xchg
add
mov
add
xchg
xchg
add
stos
add
adc
add
push
push
lea
push
push
lea
push
push
push
call
add
add
in
add
add
icebp
std
mov
mov
ret
jmp
test
add
xchg
shlb
xchg
call
in
idiv
add
shl
mov
jecxz
lret
add
add
sbb
mov
add
ret
add
add
jo
add
arpl
scas
pushf
add
mov
lea
pop
push
push
push
lea
push
push
push
lea
push
push
call
out
adcl
fmuls
shl
je
add
movb
popf
add
cltd
mov
xchg
add
add
pop
add
roll
add
fscale
lods
fs
jnp
bound
in
fiaddl
xchg
add
aam
add
xchg
add
xorb
lea
pop
mov
push
rol
sub
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
add
icebp
fs
add
shr
add
leave
int
imul
jne
shr
add
pop
stos
lret
jo
add
xchg
add
add
adc
jl
pusha
hlt
add
add
mov
add
repnz
rol
xchg
mov
lea
pop
push
push
push
sub
sub
shl
pop
push
push
push
push
push
call
mov
jle
add
adcl
xchg
mov
pop
xchg
rcr
mov
xchg
movsl
add
jecxz
add
pop
add
mov
xchg
movsl
push
lret
mov
adc
inc
cld
add
add
push
not
shr
pop
addl
push
push
sub
sub
pop
call
push
lea
pop
mov
pushl
push
lea
pop
push
push
rol
pop
push
push
lea
pop
call
push
push
push
lea
push
call
loopne
mov
add
jge
int
fadds
add
add
add
add
xchg
xchg
add
push
push
add
shlb
mov
xlat
movsl
imul
mov
fs
xchg
aad
out
mov
fsubr
add
add
gs
push
stos
add
mov
imul
movb
arpl
add
add
pop
add
bound
lods
add
mov
lea
pop
cmpl
jne
push
lea
push
lea
push
lea
push
call
ja
xchg
add
cwtl
jbe
add
iret
add
add
in
icebp
aam
push
out
add
cld
add
icebp
cld
popf
bound
js
popf
fistpl
push
add
add
fwait
sahf
add
aam
mov
mov
add
arpl
arpl
mov
mov
xchg
add
add
pop
pop
pop
push
add
pop
pop
push
lea
push
push
call
lret
add
push
add
data16
push
mov
call
add
push
out
pusha
push
add
lods
add
imul
push
in
gs
add
add
push
jnp
add
mov
pushf
imul
popa
add
nop
mov
add
jb
add
add
imul
out
add
popf
lods
imul
adcl
arpl
pop
push
push
lea
push
push
push
push
call
add
je
fcmovu
add
add
js
loope
add
add
add
add
xchg
int3
rolb
les
sti
add
add
mov
add
arpl
push
test
outsl
add
lea
add
cmpsb
rolb
cwtl
ljmp
roll
test
add
mov
aad
add
int3
lea
pop
leave
ret
push
shr
pop
push
push
add
pop
mov
push
inc
add
xor
pop
add
push
push
ror
xor
lea
pop
push
push
push
lea
dec
add
pop
push
movl
push
push
push
push
push
lea
push
push
push
call
jmp
test
addb
popf
xchg
jne
jo
add
add
test
fadd
add
add
out
stos
popf
jns
pushf
lds
shlb
shll
arpl
pop
add
lds
add
jno
add
push
repnz
cli
add
lods
mov
scas
push
mov
popa
and
add
scas
push
push
lea
push
call
fmulp
lret
add
ja
aam
in
stos
add
mov
fisubl
cmpsl
test
lods
add
add
jl
pop
add
add
add
rolb
fadd
add
lods
rolb
push
add
add
bound
hlt
lea
pop
call
push
rol
pop
push
push
push
lea
push
push
call
fwait
add
addr16
mov
scas
add
add
add
mov
add
add
add
add
xchg
add
jo
rcll
add
mov
std
add
shrb
add
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
add
hlt
mov
add
mov
add
js
add
add
movsl
add
pop
add
lret
jae
lds
add
addl
add
lret
data16
add
loope
sahf
push
add
xchg
rolb
cli
fmuls
add
mov
sbbl
mov
mov
movsl
add
add
push
push
cli
mov
lea
pop
subl
push
lea
pop
cmpl
jne
pop
push
dec
pop
pop
push
push
call
add
xchg
clc
mov
pop
add
jmp
test
add
add
rolb
add
mov
mov
cmpsl
pop
add
jns
cmpsb
cltd
add
add
insb
mov
rolb
insb
add
loope
add
add
divl
add
addb
add
fiaddl
mov
hlt
lea
pop
pop
push
lea
xor
pop
pop
push
shl
not
dec
pop
leave
push
lea
push
lea
push
push
call
add
add
add
ficoms
hlt
cltd
adc
add
popf
add
add
add
add
fiaddl
add
jl
jmp
jae
push
add
scas
add
ffreep
int3
add
add
add
push
add
add
test
mov
push
add
mov
add
loopne
add
adc
push
push
xor
not
lea
pop
mov
add
push
push
push
lea
push
call
add
popa
out
and
lret
add
cmpsb
add
jo
ja
jbe
pop
popa
pop
add
addb
push
add
mov
add
add
add
add
add
lock
mov
jp
jnp
mov
aam
aad
add
add
cld
lea
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
int3
data16
stos
fadd
cwtl
fnstsw
mov
arpl
jp
add
mov
add
add
cli
bound
xchg
iret
mov
ficoml
out
out
jno
add
popa
insb
leave
add
add
jb
cld
lea
pop
push
push
xor
inc
shr
pop
push
push
push
shl
pop
mov
push
inc
shl
pop
lea
push
shr
inc
lea
add
pop
sub
mov
push
rol
pop
shr
push
rol
shr
pop
add
mov
push
lea
push
push
push
push
push
push
lea
push
push
push
call
jmp
cmpsb
xchg
imul
mov
jae
pop
xchg
fildl
int3
xchg
add
add
out
xorb
shll
js
add
cmpsl
out
in
add
add
push
jae
fcomps
push
add
jmp
xchg
add
push
pop
mov
add
push
add
shl
not
xor
pop
add
mov
push
push
push
lea
push
push
call
mov
add
add
add
je
js
mov
add
mov
add
stc
lock
add
add
add
bound
add
scas
add
jp
add
add
add
scas
jl
insb
add
bound
mov
push
sub
rol
pop
cmp
jne
cmp
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
imul
add
mov
add
mov
push
add
add
loopne
mov
push
add
rolb
cmc
stos
addl
fs
addl
into
enter
fwait
push
roll
in
add
push
idivl
aad
int3
add
pop
add
vmulsd
pusha
and
mov
push
push
push
lea
push
push
push
call
add
addl
xchg
jge
popa
add
add
jge
add
loop
add
add
aad
aad
push
add
cli
notl
add
push
add
add
mov
add
mov
lea
pop
movl
push
rol
not
add
pop
jmp
mov
push
shl
add
pop
mov
push
push
call
lcall
mov
fistpll
hlt
out
fnstsw
add
mov
add
pop
mov
pop
add
jmp
nop
sti
outsl
add
mov
push
add
add
add
xchg
mov
cwtl
mov
add
add
mov
add
push
je
add
lea
pop
sub
jne
push
add
ror
pop
mov
push
add
shl
rol
pop
movl
jmp
push
dec
ror
pop
mov
push
lea
not
shl
pop
mov
cmp
jne
push
shr
pop
mov
push
push
push
call
mov
loopne
sbbb
addl
mov
pop
stos
add
mov
mov
add
add
add
add
std
add
add
insb
add
mov
cmpl
addr16
movl
push
lea
lea
dec
rol
pop
jmp
push
push
push
push
push
push
call
fs
arpl
add
add
icebp
cltd
add
add
push
add
add
add
jecxz
sti
je
add
add
add
mov
hlt
jmp
xchg
add
mov
add
add
add
hlt
add
add
push
iret
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
rcr
movb
mov
bound
add
mov
add
xchg
add
jecxz
out
add
pushf
divb
enter
iret
add
jne
out
add
cwtl
sti
pop
pushf
add
add
loopne
mov
push
clc
stc
pop
add
testb
mov
add
roll
bound
imulb
loop
not
xchg
stos
mov
lea
pop
cmpw
jne
push
rol
shr
pop
mov
push
push
push
call
fstps
ficoml
add
add
mov
add
xlat
out
add
add
int3
add
lahf
shlb
cwtl
push
add
adcl
movb
lret
add
add
add
lods
add
add
xchg
aad
clc
mov
add
nop
mov
in
pop
roll
add
add
leave
add
add
pop
movl
push
push
push
lea
push
push
push
lea
push
call
add
lea
pusha
add
add
add
test
rolb
add
in
jb
mov
data16
add
test
sti
pop
rolb
mov
lret
stos
jl
add
xchg
aad
add
scas
xchg
je
mov
add
fadds
mov
add
add
popa
sbb
jmp
pushl
push
add
dec
pop
pop
push
inc
pop
mov
push
not
ror
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
mov
iret
add
push
data16
jnp
add
iret
xchg
call
roll
add
in
xlat
ret
in
cli
add
add
lds
push
enter
xchg
rcl
insb
rcr
mov
rcll
pop
add
mov
add
mov
lea
pop
mov
push
push
xor
push
xor
add
inc
rol
ror
lea
sub
xor
pop
lea
sub
sub
pop
push
lea
pop
push
push
shr
pop
call
cmpl
je
push
push
inc
shr
sub
sub
push
or
not
add
ror
inc
shr
add
sub
add
xor
ror
sub
pop
lea
add
pop
push
shr
ror
sub
pop
push
call
push
lea
push
lea
push
push
push
push
push
call
clc
std
out
iret
loop
fldt
add
into
in
add
les
xchg
jb
add
cltd
add
stc
mov
add
xchg
add
jecxz
loope
add
pop
add
mov
in
call
movsl
add
add
mov
lea
pop
cmpl
je
push
push
shl
add
push
xor
add
sub
shr
pop
add
dec
ror
pop
push
sub
shr
lea
pop
push
call
push
push
call
mov
cltd
add
shlb
pop
add
or
add
call
lods
add
clc
imul
enter
movb
aam
fs
push
mov
pop
add
add
add
mov
add
add
add
jb
add
add
lods
add
add
imull
add
add
je
rolb
add
fldcw
or
js
int3
fldz
ret
repz
add
push
push
dec
not
shl
sub
push
or
inc
add
add
sub
sub
xor
pop
shr
pop
push
shl
add
rol
pop
push
call
push
push
push
lea
push
push
push
push
call
sbbb
add
loop
loop
add
push
push
ja
sahf
jle
push
push
loopne
fnstsw
rolb
add
divl
push
add
push
mov
adcb
add
add
jbe
lcall
mov
lea
pop
cmpl
je
push
push
sub
add
push
and
add
add
sub
sub
ror
pop
add
xor
pop
push
xor
shr
pop
push
call
push
add
pop
cmpl
je
push
push
lea
add
not
xor
push
xor
add
sub
sub
lea
pop
add
pop
push
pop
push
push
lea
push
push
lea
push
push
call
add
jp
jae
in
test
mov
je
push
add
add
add
push
add
add
mov
mov
add
add
add
add
int
add
push
mov
lea
pop
call
cmpl
je
push
push
add
push
or
not
add
rol
not
add
sub
shr
pop
shl
inc
pop
push
push
push
push
push
push
push
call
add
add
add
loope
add
out
add
add
out
ljmp
add
add
mov
cmpsl
xchg
push
add
test
pushf
add
add
add
add
add
loope
cld
pop
xchg
mov
lea
pop
push
push
pop
call
push
lea
rol
pop
cmpl
je
push
push
dec
xor
sub
push
sub
add
add
not
add
sub
shl
rol
pop
xor
not
not
pop
push
pop
push
call
push
lea
push
call
test
push
cld
add
incb
xlat
push
jb
lret
mov
xchg
add
fwait
push
add
cmpsb
add
add
in
pop
add
mov
add
cld
mov
gs
movsb
xchg
lcall
add
add
movsb
add
add
pop
cmpl
je
push
push
add
not
shl
push
or
inc
add
sub
inc
pop
dec
lea
add
pop
push
lea
push
push
lea
push
push
push
push
call
mov
stc
lcall
add
in
jne
mov
mov
cmpb
pop
clc
add
outsl
xchg
add
scas
add
add
add
add
mov
push
les
loop
pusha
test
out
in
add
add
mov
sahf
jbe
mov
lea
pop
push
push
push
call
jns
xchg
add
add
mov
loopne
ret
loop
add
mov
add
add
cmp
stc
mov
add
xchg
push
je
jae
lret
add
out
enter
aam
lock
add
jb
add
lret
mov
mov
add
les
call
cmp
rol
je
push
push
shr
sub
add
push
push
pop
add
not
sub
ror
sub
rol
pop
shr
pop
push
lea
push
push
push
call
movsl
mov
push
imul
add
fisubl
add
rolb
mov
pusha
push
xchg
fucomi
pushf
pushf
add
int
jl
add
test
pop
add
leave
xlat
hlt
ljmp
xchg
test
in
add
stos
add
add
add
mov
lea
pop
push
call
push
push
push
lea
push
push
push
push
push
push
call
nop
mov
out
lds
ljmp
xchg
int3
add
pop
add
add
stc
add
stc
add
popf
add
out
add
mov
xchg
leave
mov
int
in
pop
xlat
fadds
test
add
popa
add
add
sti
add
call
add
jne
fiadds
int
in
jle
cmc
add
add
mov
lea
pop
cmpl
je
push
push
dec
push
or
not
add
sub
inc
sub
rol
pop
sub
not
pop
push
dec
ror
lea
pop
push
push
lea
inc
pop
call
push
push
push
lea
push
push
call
ljmp
clc
push
mov
jle
fwait
jl
add
xchg
mov
add
jl
addl
mov
pusha
add
out
jl
mov
add
fadds
add
add
cmc
add
pusha
pop
cmc
add
add
xlat
push
lods
hlt
push
add
pop
cmpl
je
push
push
sub
sub
push
or
inc
add
inc
inc
sub
inc
shr
pop
add
not
add
pop
push
not
inc
dec
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
add
push
iret
incb
ret
add
cwtl
insb
fbld
dec
add
add
xchg
add
add
add
add
add
jp
in
fs
add
jns
add
add
pushf
add
and
and
add
cmpl
je
push
push
ror
push
push
pop
add
not
xor
sub
rol
pop
shl
shr
pop
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
lret
xchg
je
imul
icebp
jmp
stos
mov
lods
repnz
imul
add
xchg
add
ljmp
add
add
shrb
push
add
add
sub
call
push
push
push
push
push
push
lea
push
lea
push
call
jns
push
std
cld
les
add
push
add
popa
outsl
add
add
add
stc
addl
sarb
add
mov
mov
fsubrs
arpl
pop
cmpl
jne
push
sub
pop
mov
movl
push
push
push
push
push
push
push
lea
push
push
call
mov
jl
xchg
add
xchg
add
ja
fnsave
aad
mov
pop
mov
lcall
bound
add
loop
repnz
std
pop
call
add
add
shl
add
add
fiaddl
xlat
iretw
mov
add
data16
push
xchg
push
pop
mov
lea
pop
jmp
push
sub
rol
lea
pop
xor
push
push
call
mov
movsl
jmp
mov
bound
mov
jmp
xchg
in
pop
movsb
in
arpl
xchg
jae
movl
xlat
jge
add
clc
xchg
add
mov
popa
add
lret
add
add
outsl
add
add
pop
add
in
out
add
mov
cld
lea
pop
pop
push
lea
inc
pop
pop
push
push
lea
push
call
imul
jge
fwait
ljmp
add
jl
mov
add
roll
icebp
jno
testb
faddl
add
mov
add
jl
add
add
jns
ja
call
add
add
pop
lahf
test
push
pop
out
mov
mov
into
pusha
add
popa
or
pop
push
push
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
pop
faddl
add
stc
add
add
xchg
add
nop
add
loope
add
mov
add
lds
add
pushf
add
add
mov
add
add
add
jle
add
add
mov
lea
pop
pop
push
lea
not
sub
pop
leave
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
mov
cmpsb
mov
xchg
add
add
lods
mov
add
mov
mov
addl
add
cmc
add
mov
stc
je
jle
add
add
loope
add
add
add
add
aam
stos
add
add
in
fucomip
andl
mov
cmpsb
imul
lea
pop
ret
push
push
push
lea
push
push
push
call
test
add
fmul
pop
pop
jmp
shlb
arpl
add
aam
stos
movsb
jns
outsl
sahf
jno
add
add
cmpsb
add
add
add
push
sahf
lret
mov
lods
mov
stos
xchg
add
lcall
lahf
jl
les
push
ror
dec
pop
mov
push
pop
add
push
push
lea
push
push
push
push
push
call
loope
add
lods
xchg
pop
add
add
push
add
imul
xchg
mov
add
notb
jl
pushf
out
ret
push
mov
add
add
xchg
push
xchg
xchg
pop
add
rolb
mov
lea
pop
cmpl
jne
push
push
dec
ror
push
or
not
add
xor
lea
sub
sub
shr
not
pop
lea
xor
sub
xor
pop
push
xor
pop
pushl
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
add
xchg
push
add
fs
stos
add
add
add
add
popf
fsubl
out
jb
mov
enter
ja
cld
andl
push
arpl
fcomip
add
lds
add
add
ljmp
add
add
mov
les
mov
add
push
rol
pop
push
call
push
sub
pop
jmp
push
lea
push
push
push
push
lea
push
call
hlt
add
fs
add
pop
xchg
hlt
add
ret
lahf
lock
jp
add
scas
add
fcompl
scas
add
mov
add
iret
lds
pop
in
out
add
add
add
add
fs
jle
add
int3
lea
pop
cmpl
je
push
push
push
lea
push
call
int3
add
data16
push
push
add
add
add
add
stos
jle
mov
add
add
icebp
cmpsb
js
stos
cmpsl
add
xlat
add
add
add
add
add
xchg
add
pop
cmpl
jne
push
pop
leave
push
shl
pop
add
push
push
push
push
push
push
push
push
push
call
mov
add
add
mov
add
add
add
mov
xchg
add
xchg
insb
jmp
add
incb
jmp
bound
jle
mov
add
dec
test
mov
popa
pop
lods
add
add
pushf
in
add
add
add
add
in
gs
add
add
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
call
test
jo
add
frstor
xchg
rolb
pop
lock
add
add
movsb
lods
add
xchg
push
mov
ljmp
sahf
mov
adcb
fbld
add
call
push
add
add
xchg
cltd
add
arpl
pop
pop
push
push
push
lea
push
lea
push
push
call
lret
enter
addr16
add
mov
add
pop
jo
mov
iret
mov
fsub
mov
add
add
mov
add
loope
add
lcall
fidivrs
add
fwait
add
aad
add
add
add
addr16
add
add
add
add
int3
lea
pop
pop
leave
push
lea
sub
pop
add
push
push
lea
push
call
add
add
jnp
add
add
mov
add
add
addl
add
add
xchg
cmpsb
test
fisttpll
add
add
lcall
ja
ret
lea
pop
ret
push
lea
push
call
add
push
mov
int
add
add
pop
mov
add
pusha
roll
add
add
scas
cli
push
mov
add
xchg
push
add
out
mov
add
mov
ficoml
mov
add
add
jno
add
shlb
pop
jmp
push
sub
xor
add
ror
pop
cmpl
jne
push
push
shr
add
rol
ror
push
xor
add
add
sub
ror
add
pop
sub
pop
push
push
push
lea
push
call
cmpsl
add
mov
xchg
jge
outsl
add
add
arpl
test
fbstp
add
iret
add
add
imul
jno
mov
add
add
adc
jne
push
inc
shr
pop
call
push
rol
lea
sub
add
pop
push
push
push
push
push
push
push
push
call
pop
fldl
pop
sti
add
fadds
shl
jge
mov
cli
mov
mov
add
add
xchg
lcall
in
add
fs
add
cld
lea
pop
call
push
push
push
lea
push
push
push
call
out
leave
notl
in
bound
negb
add
push
lahf
insb
mov
add
repnz
jno
add
lcall
add
mov
lea
pop
jmp
cmpl
jne
push
inc
not
shr
pop
mov
push
push
push
call
pop
xchg
add
hlt
add
add
out
add
add
push
push
pop
fs
ljmp
mov
xchg
fsubs
push
add
add
test
add
push
add
mov
add
push
lcall
fldl
add
add
fmull
add
add
push
sub
shr
pop
push
push
push
inc
ror
push
or
not
add
add
sub
not
add
shr
add
pop
sub
pop
push
lea
push
call
add
in
out
pop
mov
outsl
in
mov
add
add
add
add
jp
add
lea
fs
add
fwait
roll
add
add
leave
add
imul
out
add
add
jecxz
cmpsb
xchg
fcomps
insb
inc
pop
mov
add
addb
mov
lea
pop
pushl
push
add
dec
inc
sub
pop
call
push
push
sub
push
push
pop
add
shl
sub
sub
shl
sub
lea
pop
sub
shl
pop
push
push
lea
push
push
call
out
add
imul
imul
push
add
add
mov
out
pop
pop
xlat
add
loop
in
xchg
add
sti
add
pushf
mov
jge
mov
fsubrp
jge
imul
pushl
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
test
add
icebp
add
add
add
stos
add
xor
add
add
mov
mov
int
add
addr16
in
testb
hlt
add
add
insb
mov
scas
movsl
cmpsl
pop
je
hlt
xchg
add
ret
xchg
jp
add
int3
add
add
pop
call
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
xchg
shll
jmp
add
addb
mov
shll
xchg
aad
xchg
into
xlat
mov
add
pop
lods
xchg
mov
pushf
jl
mov
enter
mov
lea
pop
call
push
push
push
sub
add
sub
xor
sub
xor
pop
xor
pop
push
push
push
push
call
add
test
andb
into
cmp
test
add
flds
jge
out
add
add
jo
mov
sahf
xchg
in
shlb
nop
add
hlt
lea
pop
pushl
push
shr
pop
call
push
push
push
push
push
push
push
push
call
add
stc
addr16
sti
movsl
add
add
add
mov
add
movsl
rolb
add
std
arpl
add
mov
test
arpl
jb
fisttpll
pop
call
push
push
push
or
not
add
xor
add
add
add
sub
add
not
rol
pop
shl
xor
rol
lea
pop
push
inc
not
xor
pop
pushl
push
not
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
call
add
test
add
push
xchg
add
add
push
in
add
add
add
iret
repnz
lcall
cwtl
add
pop
mov
add
add
pop
xchg
mov
push
push
idivl
add
fs
repnz
add
imul
add
add
stos
mov
add
and
call
push
push
dec
add
shr
add
push
or
inc
add
inc
inc
sub
lea
pop
shr
pop
push
inc
shl
pop
pushl
push
not
lea
pop
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
loopne
jmp
add
in
jle
mov
add
add
add
pop
jp
add
mov
testl
hlt
add
mov
lea
pop
call
push
push
push
or
inc
add
dec
not
sub
ror
pop
pop
push
pop
pushl
push
push
push
lea
push
lea
push
call
fldcw
add
jns
jns
into
mov
add
rcrb
add
adcb
in
add
add
mov
add
add
mov
add
imul
add
add
out
addl
repnz
jmp
rclb
push
adc
call
push
push
lea
push
push
call
add
add
sahf
add
mov
popl
add
add
add
add
js
stc
fdivl
xchg
add
add
add
sahf
add
add
xchg
nop
add
popf
add
lret
sti
add
and
add
add
push
lds
add
in
shll
jmp
lea
pop
call
push
push
lea
sub
push
and
add
lea
rol
shr
sub
inc
pop
inc
shr
sub
pop
push
push
call
add
mov
xchg
popf
push
add
flds
lret
add
add
mov
add
pushf
pop
add
add
stc
add
mov
roll
mov
in
pushf
jmp
gs
add
cltd
frstor
jnp
sub
cmpsl
stos
test
mov
lea
pop
pushl
push
push
push
push
call
add
add
push
add
add
shll
mov
scas
add
outsl
add
mov
in
add
gs
add
test
add
stc
pop
add
pop
call
push
dec
ror
inc
pop
call
push
lea
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
add
fiaddl
add
add
in
pop
mov
add
add
les
add
add
add
lret
add
add
add
mov
test
add
pop
lods
scas
pop
xchg
add
ret
imul
les
add
xor
not
pop
lea
push
push
inc
push
sub
add
sub
sub
xor
ror
shr
pop
shr
dec
pop
push
push
lea
push
push
push
push
push
call
leave
push
nop
out
incb
add
mov
xlat
out
mov
scas
aam
stos
leave
add
add
add
add
int3
fadds
xlat
popl
insb
add
sti
add
les
mov
test
add
leave
xchg
add
mov
add
movsb
out
add
out
test
cmpb
addr16
pushl
push
push
push
push
lea
push
push
push
call
loop
add
testb
into
add
add
add
pop
add
std
add
add
mov
mov
add
je
cmpb
add
add
add
jns
ret
add
add
bound
mov
subl
shr
mov
aam
bound
call
push
lea
push
push
push
lea
push
call
ffree
add
cli
imul
add
pop
int3
add
pop
je
popf
repnz
sarl
add
mov
xchg
jb
mov
jae
lea
test
push
lods
add
add
add
rcrb
add
ja
mov
jae
imul
add
fs
aam
bound
push
push
not
xor
sub
pop
call
push
push
sub
shr
not
sub
push
or
inc
add
ror
lea
rol
sub
rol
pop
lea
pop
push
push
lea
push
lea
push
call
add
sarl
add
add
ljmp
add
add
add
imul
add
add
add
xchg
mov
mov
lea
pop
pushl
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
faddl
stc
add
add
add
scas
mov
add
add
movsl
add
jne
add
add
cwtl
add
out
mov
lea
pop
call
push
push
push
call
not
add
cmpsb
add
add
add
jne
lods
add
ja
jmp
mov
mov
fistpll
lret
jno
sahf
add
scas
mov
add
pop
mov
out
test
add
add
mov
icebp
add
outsl
add
add
mov
mov
add
mov
lea
pop
call
push
push
lea
push
call
negl
add
in
mov
lret
sar
add
add
add
lds
in
loop
pop
fwait
data16
imul
xlat
add
add
enter
pushf
add
add
pushf
pop
pop
add
mov
add
pop
add
push
add
mov
jns
lock
xchg
clc
cmpsb
add
scas
mov
add
pushf
lds
add
mov
fildll
mov
lea
pop
mov
push
push
shr
dec
push
and
add
shl
xor
rol
rol
sub
add
rol
pop
dec
sub
lea
pop
push
lea
lea
pop
pushl
call
push
shl
pop
push
pushl
push
lea
lea
add
pop
call
push
push
add
push
push
pop
add
dec
dec
sub
not
sub
shl
not
add
add
pop
dec
pop
push
push
lea
push
call
test
add
xchg
shl
shlb
add
add
xchg
mov
xchg
je
fildll
add
add
out
add
aam
fidivs
pop
pushl
call
push
push
shl
rol
sub
push
and
add
sub
sub
sub
ror
pop
shl
shl
sub
pop
push
push
shr
push
or
not
add
sub
inc
rol
sub
ror
pop
not
pop
push
push
push
push
push
push
call
add
add
fbstp
add
add
fbstp
push
popa
ja
add
add
add
mov
lahf
jb
add
xchg
stos
mov
add
add
pushf
adcb
add
mov
add
pop
call
out
jno
xchg
scas
xchg
jmp
bound
push
hlt
lea
pop
call
push
push
shl
ror
push
sub
add
xor
sub
inc
dec
pop
shl
dec
add
pop
push
push
push
push
push
push
push
call
xchg
mov
jae
jp
add
mov
in
xchg
mov
jecxz
jnp
cltd
dec
mov
fldl
add
pop
cwtl
jle
add
lods
sahf
pop
add
filds
add
add
out
add
jp
movsb
lahf
lods
insb
add
add
add
push
pop
xchg
add
fisubrs
add
mov
and
add
add
mov
lea
pop
pushl
push
lea
push
push
lea
push
call
stos
add
jmp
jecxz
add
mov
jge
cwtl
push
aam
push
call
mov
je
push
imull
pop
add
js
add
out
call
filds
mov
lea
pop
call
mov
push
push
push
call
test
rorb
add
adcl
out
jge
add
roll
add
mov
xchg
les
add
add
push
mov
xchg
clc
add
fiaddl
outsl
sarb
les
pushf
and
decl
call
mov
xor
into
rdpmc
div
pop
push
push
add
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
je
add
flds
cmpsl
xlat
pusha
add
mov
fdivrs
add
add
fucomip
pop
out
xchg
add
movsl
popl
loopne
test
loope
add
add
mov
xchg
test
lea
pop
push
push
shl
pop
push
push
push
add
pop
push
push
ror
shl
pop
push
push
push
push
call
jno
add
scas
add
mov
add
lret
mov
add
cld
push
add
add
add
lret
test
mov
add
adc
xorl
add
out
test
cmpsl
popf
jl
add
in
test
hlt
lea
pop
pushl
push
push
call
into
je
add
xorb
imul
jnp
repnz
add
clc
add
xchg
add
add
add
mov
jge
cld
add
add
pop
pop
add
icebp
add
mov
arpl
xchg
add
mov
subb
add
add
jno
add
mov
mov
pusha
gs
mov
lea
pop
push
push
push
push
call
add
add
add
fiadds
faddl
in
add
nop
fstpt
add
insb
cmpl
pop
add
addr16
aad
stos
mov
pop
imul
add
std
bound
data16
out
add
add
pop
call
push
push
shr
lea
sub
push
push
pop
add
shr
shl
not
sub
sub
add
pop
shr
add
dec
pop
push
sub
lea
pop
pushl
push
push
lea
push
push
push
call
in
addb
fsub
lahf
add
pusha
lods
scas
add
add
add
xlat
add
arpl
add
pop
shrl
rolb
sarb
mov
out
int3
jnp
movb
enter
push
pop
mov
lea
pop
call
call
push
push
push
push
lea
push
push
push
lea
push
call
add
lock
call
popl
add
add
in
add
add
add
mov
jl
into
add
cwtl
cmpsb
cmpsb
lods
add
add
add
xchg
ljmp
mov
add
in
out
scas
add
rolb
jne
pop
add
add
add
mov
lea
pop
mov
pop
push
push
lea
push
push
push
push
push
push
push
push
call
mov
add
rol
leave
popa
add
add
les
fmuls
add
add
aam
add
lahf
xchg
add
mov
add
add
add
add
add
xchg
add
movsl
add
imul
add
jns
add
add
pop
out
mov
lea
pop
dec
jne
push
lea
push
push
push
lea
push
call
mov
push
add
imul
jns
shl
add
add
adc
push
shrl
mov
add
xchg
add
push
fistpll
pop
add
imul
add
push
jmp
jecxz
xchg
add
imul
lea
pop
jmp
call
push
push
add
shl
push
or
not
add
dec
add
sub
add
pop
sub
pop
push
push
call
jge
add
mov
scas
mov
mov
js
mov
add
sahf
lret
add
jae
les
add
jle
add
add
mov
xchg
pop
mov
mov
lea
pop
pushl
push
lea
push
push
push
lea
push
push
call
repnz
add
add
lods
add
cwtl
scas
xchg
add
sarb
lret
aad
add
add
add
stos
jl
mov
lea
pop
call
push
push
pop
call
push
lea
push
call
add
pop
movl
add
idiv
in
add
pop
ja
pop
add
ljmp
jb
in
xchg
add
js
add
pop
les
add
jb
mov
mov
jge
add
imul
add
lea
pop
mov
push
push
call
add
mov
xchg
mov
out
lret
filds
xchg
stos
movl
test
stos
in
add
add
add
aad
ficoms
icebp
lret
push
mov
add
rolb
jbe
add
cltd
ret
add
push
mov
add
add
jge
add
enter
aam
bound
pop
lea
push
push
not
push
sub
add
add
sub
shl
add
pop
ror
dec
rol
pop
push
push
push
push
call
fdivrs
add
cmpb
mov
add
lds
shll
test
scas
add
mov
fiaddl
add
test
imul
fiadds
jno
shrb
xchg
cli
add
mov
lea
pop
pushl
push
add
add
not
pop
call
push
lea
pop
push
push
lea
push
push
call
add
stos
cmpsl
outsl
test
add
add
mov
cmpsl
add
cwtl
add
lret
add
mov
add
xchg
stc
add
add
push
imul
cltd
iret
push
in
add
add
mov
or
call
push
push
add
sub
push
or
not
add
shl
sub
sub
sub
shr
pop
dec
sub
add
pop
push
not
lea
sub
pop
pushl
push
sub
dec
rol
xor
pop
call
push
add
ror
ror
pop
call
mov
push
push
call
ljmp
add
cmpl
add
fmul
scas
add
xchg
add
test
push
jmp
lret
add
out
fidivrl
lds
cmpsb
add
lcall
pop
lea
push
push
xor
sub
push
or
inc
add
sub
lea
not
sub
add
rol
pop
add
pop
push
push
push
push
push
lea
push
push
call
cmc
add
add
add
divb
clc
add
xchg
mov
jmp
add
mov
lcall
jecxz
hlt
addb
xchg
lock
add
add
ljmp
add
add
imul
insb
jne
pop
lcall
sbb
pushl
call
push
push
push
push
lea
push
push
call
loope
jge
je
lods
add
insb
add
pop
cltd
add
cld
add
fsts
add
int3
loope
jb
cmp
jno
lahf
add
mov
add
add
add
cli
addb
add
add
add
xchg
add
add
mov
lea
pop
lea
push
lea
push
lea
push
push
push
call
push
add
jno
cltd
add
add
nop
add
add
add
xchg
jb
js
bound
add
mov
jle
add
jne
sti
jle
in
add
add
push
xchg
add
ret
add
test
add
add
pop
mov
jle
lcall
enter
ficoms
loope
rcrb
lea
pop
push
push
push
add
pop
push
pushl
push
push
inc
lea
push
xor
add
add
add
sub
sub
sub
sub
shr
pop
inc
lea
shr
pop
push
sub
pop
push
push
rol
inc
pop
call
push
push
not
push
sub
add
not
shl
lea
sub
sub
pop
pop
push
push
lea
push
push
push
call
cld
add
fcomps
jp
add
rcrb
add
jp
ljmp
loop
bound
bound
test
iret
add
test
in
pop
pop
lods
pop
mov
adc
pushl
call
push
sub
pop
push
push
xor
pop
call
push
push
add
not
push
or
inc
add
shl
add
sub
inc
rol
pop
lea
pop
push
xor
pop
pushl
push
ror
pop
call
push
add
pop
call
push
shr
pop
jmp
push
xor
inc
pop
pushl
push
push
push
push
push
push
call
xchg
add
mov
add
add
add
insb
mov
xchg
add
add
add
add
push
add
add
imul
icebp
add
shl
subl
add
add
add
add
fadds
add
fnsave
add
fwait
mov
pusha
lahf
dec
mov
lock
rolb
add
pop
mov
jmp
push
push
dec
push
or
not
add
shl
ror
add
sub
not
sub
pop
xor
pop
push
push
lea
push
lea
push
push
call
out
add
add
jno
insb
data16
add
aad
add
mov
add
add
add
rolb
aad
shl
sarb
pop
int3
cli
mov
fldl
mov
jo
aam
bound
pushl
push
lea
push
push
push
call
loopne
sahf
mov
add
cli
mov
movb
add
in
mov
add
jb
add
enter
add
leave
add
add
add
add
add
add
jle
add
jle
mov
xchg
add
add
add
fwait
lods
add
add
test
add
les
mov
lea
pop
call
push
push
push
push
push
lea
push
push
push
push
push
call
cmc
add
add
pop
movsl
add
pop
xchg
fs
mov
mov
ja
add
add
push
push
mov
test
mov
xchg
incb
push
add
add
testl
add
idiv
add
mov
lea
pop
call
push
push
inc
rol
shr
push
and
add
rol
sub
pop
pop
push
shl
pop
pushl
call
push
push
push
lea
push
call
std
add
lcall
jb
imul
mov
push
lods
mov
push
mov
arpl
stc
mov
cld
add
add
stc
add
fistpl
cli
add
add
add
pushf
jb
movb
out
nop
mov
ljmp
adc
push
add
pop
call
push
rol
pop
leave
push
lea
push
lea
push
call
lahf
std
popa
push
mov
add
out
add
jne
push
add
testb
fldl
cwtl
lahf
in
pop
add
pushf
xchg
sti
add
add
add
jnp
add
add
add
push
lods
mov
movsb
lcall
call
and
lcall
add
mov
out
jns
add
add
pop
add
push
dec
pop
pop
push
push
push
call
add
mov
add
add
jne
ljmp
add
movsb
fimull
fwait
mov
xor
push
call
into
add
jb
fnstsw
add
insb
cmpsb
scas
add
add
add
pop
add
mov
sti
add
cwtl
fadds
test
mov
lea
pop
pop
pop
push
push
push
lea
push
push
push
push
push
call
mov
add
add
add
int
mov
jecxz
in
fnsave
push
xchg
lods
jns
int
clc
add
add
mov
add
xchg
je
jae
mov
testl
loopne
add
add
mov
lea
pop
pop
push
rol
pop
leave
add
push
inc
pop
ret
push
push
lea
push
lea
push
call
add
add
mov
mov
loopne
addb
push
lret
add
stc
enter
add
js
add
into
push
std
shll
stos
add
add
negb
les
add
add
loopne
fisttpll
pop
leave
ret
push
push
push
lea
push
push
push
push
push
call
loope
add
add
mov
xchg
test
jl
add
repnz
lods
add
out
pop
add
fadds
lret
roll
fdivrl
add
test
mov
mov
shll
call
add
insb
mov
add
out
lahf
cmpsl
movsb
mov
pusha
and
push
inc
inc
add
pop
mov
push
rol
pop
cmpl
jne
mov
push
push
push
lea
push
call
add
add
add
lds
lods
rol
add
xchg
add
pushw
jne
movsb
add
jnp
fsubr
les
pop
add
add
je
jae
add
popf
push
mov
lea
pop
jmp
mov
push
lea
push
push
push
push
push
push
push
push
call
pusha
xchg
add
movsl
add
mov
pop
add
add
cmpsl
push
add
mov
add
loop
popl
popf
into
clc
add
fst
add
add
out
mov
lea
pop
and
xor
push
rol
xor
ror
pop
xor
push
push
lea
push
push
push
push
call
add
mov
add
cli
in
bound
nop
add
insb
scas
sti
loopne
bound
add
add
jmp
mov
mov
add
jmp
mov
add
cld
lea
pop
add
push
push
lea
push
push
call
add
mov
fmull
jmp
mov
mov
lahf
xchg
scas
add
push
cmp
stos
add
add
pop
ret
movsb
add
xchg
add
adcl
mov
mov
add
add
pop
imul
jo
jbe
roll
add
add
add
add
jmp
add
sti
add
add
cli
add
add
mov
adc
dec
decl
shl
pop
sub
push
ror
sub
pop
jmp
push
rol
dec
pop
sub
pushl
push
dec
dec
pop
pop
sub
push
ror
not
rol
pop
cmp
jne
push
sub
add
sub
pop
mov
push
push
lea
push
lea
push
call
add
jecxz
test
mov
rolb
std
add
push
mov
fadds
add
mov
lahf
loop
add
aam
add
add
add
xchg
xorl
in
lahf
add
add
add
add
cwtl
pop
add
jl
push
aam
bound
pop
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
cld
add
add
push
add
repnz
add
add
fwait
insb
jns
add
insb
add
addr16
mov
add
add
pop
add
xchg
xchg
mov
lea
pop
sub
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
fnstenv
pushf
add
jle
stos
lea
add
lret
xchg
add
add
add
add
mov
mov
out
add
mov
lea
pop
shr
add
push
lea
push
lea
push
push
push
lea
push
call
flds
add
mov
add
pop
xchg
xorb
add
add
xchg
push
mov
add
mov
add
pop
add
in
je
enter
add
add
xchg
clc
mov
lea
pop
sub
push
sub
pop
pushl
pop
push
push
push
lea
push
push
call
add
lods
icebp
mov
jmp
stos
add
mov
add
outsl
add
ja
rolb
fidivrl
fwait
rorb
scas
addl
add
mov
test
repnz
popf
mov
add
push
leave
out
add
insb
movsb
mov
add
add
test
fildl
movsl
rorl
mov
lea
pop
shr
push
dec
ror
pop
and
sub
push
push
push
call
add
jp
mov
out
add
cmpsb
add
lea
in
in
push
add
add
jo
scas
add
add
fmull
xchg
in
in
add
enter
sbbl
xchg
add
aad
add
fmull
stc
sbb
test
push
lea
push
lea
push
lea
push
call
std
leave
add
mov
enter
jmp
sahf
stos
jl
into
add
into
jle
xchg
push
mov
xchg
mov
ja
add
add
filds
add
mov
push
add
add
scas
lret
push
mov
add
add
add
mov
orb
add
add
fmull
push
sub
rol
add
pop
ret
push
pop
push
push
sub
pop
mov
push
xor
add
inc
inc
pop
add
push
pop
push
push
lea
not
rol
sub
pop
push
push
sub
shr
pop
push
push
push
dec
pop
push
push
push
push
lea
push
call
add
fstl
add
add
add
add
add
xchg
add
frstor
push
jb
add
movsb
add
add
add
add
add
add
pop
add
js
addr16
add
push
jo
add
aad
jl
rolb
in
add
add
popa
add
lea
pop
mov
lea
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
insb
add
fstpl
add
add
add
add
add
mov
add
lods
mov
addl
jmp
add
out
mov
cld
fnsave
hlt
add
icebp
add
lock
add
add
mov
js
xchg
addl
pop
int
add
add
add
mov
mov
les
ljmp
adc
push
push
push
push
push
push
call
stos
stos
test
add
add
repnz
add
xchg
jne
test
ret
lahf
test
mov
add
add
cli
push
add
int3
ror
add
mov
mov
lret
mov
fldl
mov
add
adcb
bound
pop
mov
shr
push
xor
inc
pop
add
push
push
push
push
lea
push
push
call
jno
sti
fisttpl
ret
lods
add
stc
mov
add
stc
add
add
add
add
push
mov
mov
je
sarl
lods
arpl
jp
gs
add
xchg
mov
add
add
rorl
mov
add
pop
mov
add
push
ror
add
pop
mov
push
inc
shl
pop
add
xor
push
push
push
push
push
push
call
out
loopne
jmp
in
test
add
mov
xchg
add
hlt
add
repnz
mov
mov
add
add
jae
fldl
mov
std
xchg
add
jae
mov
bound
pop
mov
push
not
shl
pop
and
push
lea
push
push
lea
push
push
lea
push
push
push
call
lahf
jle
lods
add
add
aad
loope
test
imul
add
enter
roll
mov
add
and
add
add
add
jnp
mov
nop
add
lcall
add
add
mov
lds
stc
jp
cld
lea
pop
rol
rol
push
pop
xor
push
lea
push
push
push
push
push
push
push
push
push
call
testb
add
lock
mov
icebp
iret
jge
add
fsubs
xchg
add
mov
add
mov
pop
jno
add
add
pop
xlat
mov
pusha
nop
jle
ljmp
sub
push
inc
pop
cmpb
jne
add
push
shl
add
ror
sub
pop
cmp
je
push
push
push
call
xchg
add
lock
add
mov
add
add
add
add
fwait
test
push
xchg
ja
add
in
aad
cli
int3
add
xchg
xchg
add
lea
mov
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
push
call
pop
lea
movsb
push
jp
add
nop
mov
mov
jmp
out
add
xchg
add
gs
pop
lock
fwait
into
add
add
insb
jb
add
add
mov
add
aad
xchg
into
cmpsl
bound
testl
insb
add
add
xchg
xchg
push
add
mov
lea
pop
cmpl
jne
push
lea
push
call
out
lahf
fs
mov
add
add
add
add
movsb
push
mov
in
add
xchg
addl
stos
popa
test
jb
int3
out
aam
add
std
add
mov
add
xchg
pop
xchg
add
movsl
add
add
ja
negb
add
scas
pop
filds
jecxz
mov
add
lea
pop
xor
pop
push
push
lea
push
push
lea
push
push
call
xchg
mov
data16
add
leave
in
mov
pop
add
add
in
pop
add
push
push
imul
test
imul
add
add
lret
insb
popl
mov
loope
add
cli
mov
nop
enter
jnp
mov
lea
pop
pop
pop
push
dec
add
pop
pop
push
ror
lea
not
pop
pop
push
push
push
push
push
call
add
loop
add
add
pop
add
out
add
movsb
add
add
loop
add
add
xchg
add
xchg
add
add
add
mov
add
arpl
add
nop
xchg
add
push
xchg
xchg
add
jge
add
xchg
enter
mov
idivb
add
add
movsl
out
add
test
pop
leave
push
push
call
mov
add
roll
mov
add
add
push
mov
imul
cld
out
add
ret
add
data16
loopne
add
xchg
insb
add
add
add
js
leave
add
data16
or
mov
push
dec
pop
add
push
pop
push
push
push
lea
push
lea
push
call
jb
add
out
fcompl
add
sti
add
mov
test
in
mov
add
testb
cltd
mov
test
addb
jle
fwait
imul
lea
pop
add
mov
push
lea
not
pop
cmpw
pop
push
inc
shl
pop
pop
push
push
lea
push
push
push
lea
push
lea
push
call
ficoml
ret
mov
test
cmpsl
add
push
lods
fiaddl
test
mov
add
cltd
lods
pop
mov
mov
add
add
mov
lcall
mov
mov
add
jne
in
jmp
add
in
xchg
enter
clc
add
ja
ficoml
add
add
add
fldl
clc
mov
lea
pop
mov
push
push
push
push
push
call
add
sti
in
mov
movb
fwait
stos
mov
add
add
pushf
lret
popf
imul
push
test
test
push
add
xchg
mov
jne
ret
repnz
fmull
call
push
push
push
push
push
push
call
imul
gs
hlt
add
popa
aam
int3
mov
roll
imul
test
notb
pop
gs
outsl
add
add
xchg
add
arpl
add
cltd
add
lret
add
add
add
imul
add
sbb
xor
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
shr
sti
loope
pop
mov
icebp
std
imul
add
jecxz
add
addr16
add
mov
js
add
sti
pop
imul
jle
mov
cld
add
testb
fadds
push
add
mov
sti
rolb
add
mov
loop
les
pop
pop
push
sub
dec
ror
not
pop
pop
push
push
push
push
push
call
xchg
add
add
loop
iret
mov
movsl
stc
add
into
loopne
lahf
add
pop
loopne
add
mov
add
sahf
add
clc
jecxz
fwait
mov
lretw
xchg
add
addb
add
gs
flds
mov
fmull
pop
push
dec
sub
pop
leave
push
ror
rol
pop
ret
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
jecxz
lods
divb
insb
pusha
mov
hlt
pop
movl
jae
mov
push
add
add
fsub
lcall
loop
add
jmp
jb
jmp
add
push
add
mov
add
mov
lea
pop
push
push
dec
lea
pop
mov
push
lea
shr
add
pop
add
push
push
push
push
push
push
push
lea
push
call
add
push
add
add
mov
cwtl
movsl
lods
add
add
icebp
add
xchg
add
add
fcmove
add
mov
jb
add
data16
into
movb
data16
add
push
add
mov
scas
roll
add
add
lret
repnz
push
cli
mov
mov
arpl
pop
push
push
push
push
push
push
push
push
push
call
add
add
add
negl
outsl
movsb
add
pop
add
add
add
in
jne
int3
inc
loop
add
add
in
xchg
add
ret
add
add
add
arpl
cmpsl
add
fistps
jo
add
add
stos
add
mov
lea
pop
push
push
sub
sub
add
pop
push
push
xor
inc
pop
mov
push
push
lea
dec
dec
pop
pop
push
push
call
add
mov
stos
mov
add
mov
add
add
add
pop
add
cmpl
push
xchg
les
add
lock
push
addr16
pop
push
fisubrl
scas
hlt
add
add
add
rolb
pop
add
roll
loop
hlt
lea
pop
lea
push
ror
sub
not
sub
pop
sub
push
add
rol
pop
mov
push
sub
sub
pop
shr
push
push
push
call
movl
imul
xchg
push
jmp
add
movsb
add
add
roll
jns
mov
mov
pushf
add
in
aad
mov
bound
add
scas
add
push
out
repnz
add
pop
fwait
popf
add
add
push
loop
jl
test
or
add
push
push
lea
push
push
push
push
push
call
jmp
shll
loop
add
push
add
stc
add
pushf
push
add
sti
add
add
leave
enter
add
sub
cli
push
popf
mov
clc
popf
pop
add
add
jle
add
lahf
stos
fldt
add
movsb
testl
add
push
add
mov
lea
pop
mov
push
push
call
lea
sub
out
popl
add
ficomps
filds
add
add
jno
mov
add
push
fcmovu
push
add
cltd
test
mov
lea
pop
add
push
sub
dec
not
pop
pushl
push
push
lea
push
lea
push
lea
push
call
add
add
push
mov
loopne
cli
test
rcl
lds
jp
movb
sti
jmpw
push
add
cmp
add
mov
pop
add
add
add
mov
mov
lea
pop
popl
mov
push
shl
ror
sub
pop
add
push
add
pop
xor
push
xor
shr
shl
not
pop
lea
push
rol
sub
ror
pop
mov
add
push
lea
push
push
lea
push
push
push
call
jmp
add
xchg
add
out
add
push
into
add
call
sti
cmc
add
add
fists
mov
add
add
add
add
imul
icebp
lock
add
mov
jge
les
rclb
push
push
push
push
call
push
fwait
add
ret
jmp
js
add
add
stos
add
xchg
test
add
pop
push
add
outsl
mov
xlat
add
bound
lcall
xorb
push
add
jp
add
cwtl
out
lds
add
pop
shrb
add
in
iret
xchg
cltd
add
mov
data16
rol
nop
push
add
xor
pop
nop
xor
push
lea
push
push
push
lea
push
lea
push
push
push
call
push
mov
mov
mov
mov
lods
add
add
jno
add
add
pushf
mov
hlt
add
in
leave
jb
fmul
xchg
add
pop
nop
nop
push
rol
rol
pop
inc
nop
push
shr
pop
nop
cmpb
jne
push
lea
push
lea
push
push
call
add
gs
fstp
mov
add
jge
bound
add
jmp
push
jecxz
add
add
jb
xchg
push
out
movl
rol
add
popf
mov
lret
add
add
cmpsl
data16
add
add
cli
add
lret
addl
fyl2xp1
mov
lea
pop
add
nop
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
rcrb
add
add
mov
mov
add
into
add
add
cmpsb
ljmp
repnz
jo
movsl
pushf
add
lea
pop
nop
push
lea
push
push
push
push
push
push
call
rolb
add
data16
stos
add
add
add
pop
mov
add
sbbl
lods
add
xchg
je
add
add
scas
test
add
push
fwait
add
in
fldenv
push
fmuls
add
hlt
add
nop
add
add
add
call
add
pop
stc
push
fcomip
fwait
add
int3
lea
pop
cmp
je
nop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
sti
lods
add
test
add
add
faddl
add
xlat
repnz
add
in
add
push
add
in
add
add
mov
add
push
testl
popa
ret
pop
add
add
pop
nop
push
not
inc
ror
pop
inc
push
sub
pop
nop
nop
push
rol
shl
not
pop
cmp
jb
push
lea
shl
lea
pop
xor
push
dec
pop
jmp
push
push
push
push
push
push
call
add
mov
test
add
lea
add
stc
pop
cli
add
in
add
fs
lret
in
add
aam
out
icebp
aam
add
add
jp
add
xchg
mov
jo
into
ja
mov
add
add
add
popa
add
loopne
add
add
bound
add
addl
arpl
pop
mov
add
push
dec
lea
ror
pop
movzwl
push
ror
dec
pop
mov
add
push
inc
sub
rol
dec
pop
mov
push
lea
push
push
push
call
add
popf
notb
aad
add
add
add
push
je
add
mov
add
gs
fdivrs
cltd
cwtl
jo
insb
lahf
lods
mov
add
scas
movsb
lcall
xchg
add
push
add
pop
xor
push
rol
pop
xor
push
lea
push
push
lea
push
call
push
mov
add
xchg
add
add
mov
ljmp
add
mov
add
fisttps
push
enter
in
xchg
lret
mov
mov
lret
arpl
clc
fisubrs
popf
addb
arpl
mov
add
add
xlat
add
xchg
jno
mov
lea
pop
shl
xor
push
inc
lea
sub
shl
pop
shl
xor
push
shr
pop
shl
push
add
add
rol
pop
xor
mov
push
push
call
test
add
add
stos
loop
push
leave
add
add
nop
add
add
add
imul
ja
lret
sti
add
testl
add
mov
add
add
rol
movsb
add
test
je
xchg
data16
xchg
add
cmc
mov
add
mov
pop
add
push
push
lea
push
push
call
mov
sahf
test
mov
add
fldt
pop
call
insb
jmp
add
outsl
mov
jb
roll
insb
push
fdivl
leave
jle
add
add
js
add
incb
mov
lea
pop
pop
push
shl
pop
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
pop
lods
mov
add
push
add
data16
add
fmuls
movsl
xchg
add
fistl
je
roll
add
pop
add
add
jb
add
jbe
add
je
add
ljmp
xchg
add
mov
lea
pop
pop
push
push
lea
push
push
push
push
push
call
pop
aam
mov
filds
jne
rclb
xchg
roll
testl
fiaddl
mov
mov
jno
mov
pop
add
add
pushf
add
add
add
add
add
shrb
add
cmpl
cmpsl
mov
lea
pop
pop
push
lea
ror
lea
pop
leave
ret
push
push
push
call
add
fdiv
aad
testb
add
lea
add
fldl
jle
xchg
imul
add
mov
add
add
jecxz
popa
lods
fadd
mov
add
pop
add
xchg
add
mov
aam
bound
push
mov
push
add
not
pop
push
push
rol
pop
push
push
push
push
call
cmpsb
add
add
jle
fldt
push
mov
movsl
loop
add
cmc
push
add
add
add
pop
sti
add
add
lods
push
sahf
cwtl
add
out
mov
lea
pop
push
push
add
inc
not
pop
push
push
push
call
lret
lcall
out
pop
add
lret
add
lcall
out
sarl
pop
add
iret
push
loop
enter
xchg
add
push
add
jno
mov
lea
pop
mov
push
shr
lea
pop
mov
push
pop
mov
push
push
call
outsl
mov
add
movsb
stos
test
add
add
jb
test
add
int3
fimuls
mov
rolb
mov
mov
or
rorb
test
sub
ror
shl
pop
mov
test
je
push
sub
sub
pop
mov
push
sub
pop
mov
mov
push
add
not
pop
inc
push
shl
inc
rol
pop
cmp
je
test
je
push
shr
add
not
pop
mov
push
rol
ror
pop
inc
push
add
pop
cmp
je
push
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
jecxz
ljmp
jo
movsl
add
jb
pop
iret
push
add
rolb
push
jecxz
add
push
jecxz
mov
xchg
pushf
push
mov
lret
push
push
push
lods
xchg
push
cmpsb
pop
std
imul
add
sarl
jecxz
mov
addl
cwtl
add
pusha
and
test
jne
xor
push
push
push
call
gs
movl
pop
mov
add
add
mov
lods
add
xchg
mov
add
ljmp
aad
negb
add
add
xchg
add
push
jmp
push
lods
add
mov
add
add
out
jle
add
add
or
pop
push
xor
pop
pop
push
shl
not
pop
pop
push
not
inc
pop
pop
push
push
push
push
lea
push
lea
push
call
add
add
add
add
movl
test
xlat
mov
add
mov
aam
lock
add
scas
hlt
add
mov
add
hlt
lea
pop
leave
push
lea
push
call
test
add
add
add
mov
fwait
xchg
xchg
jecxz
add
add
push
add
push
add
xchg
mov
add
test
pop
push
mov
lahf
cli
jae
mov
lea
pop
ret
mov
push
push
push
call
xchg
add
add
test
mov
push
out
add
out
xchg
test
imul
fwait
clc
add
mov
jmp
add
add
int
add
ljmp
push
mov
push
mov
lea
pop
inc
cmp
jne
push
ror
add
pop
lea
mov
push
pop
test
je
push
push
call
add
icebp
add
jl
add
add
xchg
add
lahf
mov
mov
add
scas
add
add
add
cmpsb
jo
add
add
add
roll
add
add
xchg
add
test
add
pop
mov
add
push
lea
push
push
push
push
push
push
push
push
call
aad
std
enter
mov
scas
add
add
add
add
add
ret
pop
xchg
add
add
mulb
cwtl
scas
icebp
add
lahf
stos
subl
jle
mov
mov
jmp
cmpsl
xlat
cli
cmpsl
cltd
imul
add
mov
and
cmp
jne
push
lea
shr
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
test
cli
add
cmc
test
imulb
fs
add
cltd
lods
mov
mov
js
mov
add
pop
out
push
add
cltd
mov
into
mov
mov
mov
add
pushf
add
push
add
mov
add
lock
mov
lea
pop
test
je
push
rol
sub
pop
mov
add
push
sub
pop
cmp
je
push
sub
inc
inc
pop
jmp
xor
push
push
push
call
mov
jge
lods
test
add
lea
push
add
fnstcw
mov
rorl
add
add
add
add
add
add
push
add
jecxz
movl
add
add
add
add
mov
lea
pop
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
imul
add
add
add
lret
add
add
add
add
add
add
into
mov
add
add
in
add
add
xchg
push
add
movl
loope
ret
add
popl
les
roll
iret
add
fwait
add
add
mov
lea
pop
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
push
leave
pop
mov
faddl
loop
add
add
cmpsb
add
test
int
rcrb
add
cltd
rcl
add
jp
push
add
add
mov
xchg
pop
add
lret
lret
add
lahf
add
lcall
mov
in
pop
xchg
add
add
mov
lea
pop
pop
push
push
call
xchg
xchg
add
adc
ljmp
loop
out
aam
add
addl
add
push
outsl
add
push
xlat
pop
add
mov
add
mov
sti
addb
add
mov
fnstenv
fucomp
pop
lcall
test
lret
add
arpl
add
mov
lea
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
mov
out
ja
add
stc
lcall
mov
int3
add
pop
mov
push
add
add
mov
add
icebp
add
aam
outsl
mov
movsb
mov
insb
add
add
outsl
add
lea
pop
ret
lea
push
push
push
call
lds
out
push
add
add
add
ja
mov
add
add
add
push
jl
add
or
add
push
add
icebp
add
mov
mov
cmpsl
add
add
add
add
add
bound
pop
push
add
dec
pop
pop
push
rol
rol
pop
pop
pop
push
rol
inc
xor
pop
leave
ret
push
push
lea
push
push
push
push
push
call
fiaddl
je
jl
mov
add
add
add
xchg
mov
add
mov
add
add
outsl
lods
mov
add
flds
add
add
aad
test
mov
cltd
add
pop
mov
pop
push
sub
pop
pop
push
push
call
test
jmp
jl
test
add
add
add
jmp
mov
add
movsb
shrl
out
loopne
add
pop
loopne
in
add
fiadds
ja
hlt
push
mov
lea
pop
pop
pop
push
push
push
push
push
push
call
test
mov
add
add
jae
jae
hlt
movb
xchg
xchg
aad
xlat
in
gs
add
xchg
add
in
add
pusha
add
add
jp
js
add
lret
out
in
out
add
jmp
add
stos
add
ja
mov
lea
pop
leave
ret
test
jae
or
test
jb
or
shll
sub
jae
test
jae
sbb
jb
in
arpl
clc
inc
out
mov
shlb
mov
add
cwtl
cld
iret
in
repnz
mov
jno
aaa
sbbb
stos
xchg
ret
les
mov
or
out
pop
mov
stos
sti
call
lods
lods
push
and
lret
arpl
add
lret
ret
add
sbb
mov
jg
adc
jp
mov
addr16
xchg
add
repnz
push
sarb
xlat
rorb
push
mov
sbb
sbb
and
add
inc
push
out
xor
cwtd
pop
dec
popf
adc
push
pop
scas
enter
mul
push
aad
dec
pop
test
mov
shlb
into
cwtl
xor
rol
or
clc
or
pop
std
mov
push
inc
loop
add
loopne
sbb
mov
cmp
pushf
test
jmp
dec
jmp
mov
pop
addr16
jns
pop
mov
pop
mov
sbb
pushf
mov
dec
sub
xchg
test
push
mov
dec
addl
cmp
and
mov
mov
xchg
cltd
cmp
loopne
out
movsl
jo
dec
cmp
fmuls
mov
inc
xor
inc
loop
ds
add
xchg
movsb
xor
mov
pushf
xchg
je
hlt
xlat
mov
dec
out
lret
sub
maskmovq
mov
mov
mov
xor
je
jle
push
and
call
fdivr
iret
xor
cmc
mov
mov
dec
fdivrs
add
cmpsb
xor
out
imul
repnz
cltd
fnstsw
outsl
in
iret
push
pop
and
aas
scas
ljmp
inc
out
or
sbb
icebp
adc
es
pop
sub
jge
mov
jle
cs
jne
sub
pop
jae
daa
aaa
jns
out
imul
xchg
xor
pop
ret
shr
mov
pop
lds
cwtl
shlb
push
lcall
sti
loope
jl
inc
outsb
loopne
mov
push
pusha
movsl
cli
sub
jg
imul
lret
cmp
cmpsb
xchg
fwait
inc
or
enter
or
rcl
mov
cmc
and
adc
and
and
xchg
xor
jb
and
mulb
xchg
pop
cmp
shrl
sub
mov
lea
je
add
sub
ja
push
cmc
bswap
add
in
mov
mov
jecxz
test
xchg
sbb
or
fucomi
sbb
cmc
adc
pushf
push
xchg
sub
push
cli
cmp
pop
push
dec
push
jno
aam
adc
aad
xor
xor
and
xchg
daa
test
or
fstl
inc
in
jne
xor
xchg
addr16
pusha
push
pushl
add
in
and
stc
adc
xchg
cwtl
shlw
mov
adc
clc
xchg
out
inc
addb
jnp
adc
jne
sub
outsl
pop
int
ficompl
popa
sub
pop
jne
xor
jbe
fcoml
sub
in
mov
cltd
jb
sub
fcoml
add
sub
push
das
or
mov
imul
xchg
xor
leave
add
pop
dec
cmc
outsb
jno
test
xor
cmp
icebp
pushf
add
out
sahf
jmp
bound
daa
pop
push
mov
ret
pop
xor
into
inc
imul
daa
cmp
xor
pop
mov
and
and
lock
lods
sti
rorl
sub
jmp
sbb
pushf
fldcw
cmpsl
push
xor
xchg
mov
adc
xchg
fimuls
push
or
xchg
inc
dec
push
fildl
lahf
out
scas
jmp
dec
mov
pop
inc
cltd
dec
mov
cld
cli
jnp
stc
in
sub
xor
ds
cmp
fwait
jg
mov
loope
imul
mov
jle
sbb
in
xchg
add
movsl
out
sbb
outsl
popf
inc
sbb
int3
adc
subb
cmp
and
xchg
mov
data16
popf
xor
mov
movsb
dec
push
sbb
jbe
ss
aam
xchg
pop
mov
icebp
cltd
in
xor
imul
lahf
out
dec
idiv
sbb
sbb
jle
push
rcr
cmpsl
jmp
fsubl
add
loop
outsb
inc
push
adc
push
dec
adc
jl
bswap
pop
mov
sbb
and
dec
xchg
fcoms
sub
pusha
push
pop
std
add
xor
and
xor
dec
rorl
pop
lcall
adc
adc
ja
jnp
mov
stos
dec
xor
cmpsl
mov
vdivpd
xchg
arpl
inc
dec
mov
pushf
pop
idivl
xchg
and
xor
xchg
ds
jns
sbb
ds
in
dec
inc
xchg
jmp
and
xchg
cmp
sub
xchg
cld
jnp
mov
mov
std
imul
fxch
ret
dec
cmp
ja
cmp
test
lods
mov
or
pop
xchg
aam
push
insb
jmp
dec
stc
fildll
ja
cmp
adc
jo
mov
push
dec
loope
stos
pushf
mov
cmp
or
out
mov
data16
das
cmpsl
jle
notl
mov
dec
jb
js
xlat
fimuls
inc
jge
xlat
xchg
stos
mov
xor
sub
out
sti
cmp
loopne
int3
cmp
or
outsl
xchg
shl
mov
jbe
sbb
inc
bound
ljmp
mov
dec
jg
add
pop
stos
push
inc
nop
popa
push
and
inc
or
xor
lahf
inc
jnp
xlat
inc
loopne
xchg
xlat
or
and
dec
ret
dec
mov
imul
es
xchg
outsb
lods
in
in
test
shlb
mov
xchg
iret
mov
lcall
dec
cmc
sub
push
push
add
push
cmp
mov
mov
fsubs
or
out
and
jg
push
jl
mov
enter
mov
mov
sub
push
jmp
rcrl
push
or
push
or
sbb
cltd
sbb
jns
push
call
sbb
icebp
scas
test
push
jmp
adc
fsts
sub
das
pop
mov
push
rcrb
mov
insl
sbb
pop
xchg
js
clc
adc
sub
inc
pop
call
shlb
leave
push
and
and
mov
enter
fs
lock
dec
jg
or
mov
sti
repz
inc
fnstsw
loop
push
movsl
cwtl
outsl
icebp
xchg
mov
or
fldcw
loopne
sbb
cmp
clc
sbb
daa
das
xrelease
lods
das
sbb
mov
sub
fbstp
test
loopne
in
pop
ret
xor
shl
cli
xchg
icebp
out
sub
mov
arpl
notb
js
gs
dec
call
out
dec
xchg
add
push
fistl
mov
lods
jmp
jae
roll
lret
push
sbb
fwait
add
je
xchg
ss
nopl
xor
push
and
jbe
sarl
subb
xor
push
andb
hlt
mov
aad
xchg
iret
sbb
adc
pop
or
mov
repz
and
mov
leave
pushf
inc
mov
insl
cmpsb
rolb
or
icebp
subl
stos
add
shrl
mov
ror
icebp
mov
fistpl
pop
jb
sbb
movsb
jb
sub
lret
xchg
mov
mov
movsl
push
and
inc
and
push
add
add
push
int
mov
xchg
pop
adc
cmpl
add
sub
fistpl
add
sub
insl
jl
out
and
in
sub
jo
adc
mov
mov
out
jle
lds
push
jp
sbb
test
call
fadds
push
mov
jecxz
outsb
mov
xchg
ror
mov
jb
dec
subl
out
daa
lahf
push
js
jmp
fs
sub
pusha
jmp
xchg
lock
and
lret
ret
or
nop
mov
outsl
adc
mov
or
loope
pop
sub
call
push
push
loop
shll
out
ret
jbe
xchg
dec
out
lcall
shl
aas
push
inc
imul
test
adc
and
fs
fistps
and
ljmp
sbb
or
mov
or
into
jl
shlb
jmp
or
cmpsb
sbb
pop
jg
rcl
movsb
pop
xchg
stc
pop
push
dec
inc
xor
out
and
add
adc
dec
sub
repnz
pop
cmp
mov
adc
lods
insl
sub
xchg
scas
push
push
mov
sub
pushf
dec
jle
insb
mov
test
in
repz
addl
xor
mov
testl
fidivrl
dec
push
sub
cli
in
jge
mov
fnstcw
jo
and
mov
push
adc
in
outsb
mov
mov
or
out
push
mov
aad
cld
scas
daa
sti
jb
adc
loopne
push
cmp
sub
adc
filds
fstl
std
outsl
lds
sbb
add
clc
and
loope
inc
pop
aaa
xor
xchg
and
sti
inc
dec
inc
popl
outsb
fisubrs
xchg
sti
xchg
sub
pop
sub
push
push
dec
dec
mov
sbb
mov
out
lods
and
push
dec
adc
push
inc
insl
out
jl
pop
inc
aaa
dec
ret
fiadds
push
dec
and
out
adc
sbb
xchg
loopne
pop
sbb
mov
mov
xor
rcl
and
mov
incb
inc
js
or
or
jns
push
cli
xchg
hlt
mov
dec
jne
loopne
add
repz
or
cmpsb
add
ja
ss
sbb
push
call
and
cmp
push
push
outsl
mov
or
jle
leave
ja
pop
adc
cmp
xchg
lcall
xchg
movsl
mov
ljmp
cmp
lahf
pop
testb
sub
testl
fs
pop
xchg
sub
cmpsb
sbb
enter
cmp
imul
inc
dec
scas
add
xchg
xlat
int
popf
rcl
mov
cmp
out
sbb
dec
incl
sub
adc
std
sbb
in
push
les
xchg
pop
mov
mov
add
leave
adc
imul
scas
xchg
lods
clc
dec
lods
pop
rorb
mov
imul
mov
sub
ja
arpl
repz
scas
mov
scas
add
cmp
aas
fcoms
pop
sbb
mov
test
push
xchg
jbe
test
xchg
mov
mov
mov
fldl
incb
pushf
mov
test
iret
sbb
push
xor
jmp
pop
mov
xchg
mov
popf
outsl
sbb
push
rolb
xchg
cmp
gs
scas
fwait
mov
sub
ss
cli
imul
outsb
ss
dec
jno
fsubrs
add
pop
addb
enter
lahf
movsb
aas
pop
inc
nop
jne
clc
iret
shlb
dec
daa
lods
mov
fists
fsubrs
mov
mov
mov
data16
cltd
mov
sbb
outsb
and
mov
lds
cmp
into
fidivrs
insl
in
idivb
mov
cli
jecxz
dec
andl
jae
and
out
lcall
call
pop
nop
add
ljmp
inc
sbb
cwtl
mov
std
lds
xor
xchg
pop
sub
push
das
pop
mov
pop
or
xchg
add
loop
inc
fiadds
pop
push
mov
shrb
or
ret
sub
jo
lods
cli
inc
rclb
push
rcll
je
in
jecxz
and
or
xchg
outsl
adc
pop
gs
jmp
shrl
adc
sbb
ftst
inc
jbe
inc
ljmp
pop
adc
adc
jle
push
test
loopne
je
push
fsubs
lock
mov
mov
into
cmp
sbb
pop
pop
test
movsb
sbb
aas
cltd
mov
ret
icebp
insl
push
js
pushl
sbb
mov
negb
xlat
push
cmpsb
push
xchg
pop
fistpl
cmpsl
leave
inc
ror
cmp
dec
cmp
add
pop
and
jl
adc
sbb
inc
imul
pop
lods
es
shll
inc
pusha
repz
xchg
lahf
dec
out
push
pop
nop
adc
jb
push
cmp
clc
and
in
dec
xor
imul
lcall
outsb
leave
dec
xchg
add
inc
xchg
pushf
jne
addb
cmp
insb
insl
mov
pop
add
jnp
aam
sub
mov
inc
inc
cwtl
dec
adc
outsb
popa
shl
xchg
xchg
adc
pop
and
lods
fwait
daa
lds
rolb
mov
int
arpl
ljmp
cmpsb
push
insb
dec
push
mov
popf
jno
xor
push
out
fcomps
rol
adc
dec
mov
outsl
insl
push
mov
insl
or
jmp
cmp
pop
lcall
je
and
jae
xchg
jmp
and
scas
adc
jle
sub
popf
rclb
addl
jge
cmp
add
sbb
fs
add
sbbb
dec
in
ss
leave
ja
les
xchg
xor
mov
in
adc
ss
jno
and
aas
mov
pushl
mov
cmp
mov
scas
addb
bound
inc
dec
clc
arpl
cmc
cltd
inc
sbb
adc
test
adc
repnz
push
inc
sbb
bsr
push
push
lret
pop
lock
sub
icebp
outsb
inc
test
mov
pop
xchg
lods
andb
add
mov
cmp
das
out
mov
frstor
and
addr16
mov
loope
imul
inc
mov
fisttpl
dec
mov
in
out
mov
loopne
add
jnp
mov
jns
aad
mov
mov
xchg
xor
cmpsb
nop
jmp
insl
mov
out
lds
leave
in
mov
fisubrl
xchg
lret
mov
es
shll
jb
push
or
ret
in
pmulhuw
dec
sub
mov
mov
cwtl
sub
loopne
ljmp
mov
push
pop
cmp
dec
ret
ret
sub
lods
jne
xchg
inc
inc
cmp
jb
pusha
push
les
iret
lret
out
movsb
scas
pop
cli
mov
ja
andb
mov
inc
testb
mov
jmp
ljmp
sub
xchg
and
int3
mov
xor
xchg
push
dec
and
int
insb
or
movsb
int
inc
movsb
ficomps
or
adc
shrd
pop
dec
cmc
out
sar
sahf
test
adc
mov
add
mov
mov
ljmp
ficompl
mov
jb
jbe
cmp
ror
pop
adc
pop
arpl
popf
lcall
pop
sub
sub
fsubrs
lcall
js
sbb
add
cmp
mov
lock
gs
xor
mov
pop
repz
jle
movsb
mov
mov
inc
cmp
push
jb
lret
xor
xlat
jo
add
push
mov
or
mov
mov
add
mov
xchg
dec
pop
sub
rcrl
and
cmp
daa
lds
sub
jno
cmpsl
cwtl
ret
mov
orl
inc
xor
and
mov
arpl
or
inc
insb
shll
nop
pop
cmp
fimuls
jbe
ret
jae
testb
jne
ss
cmp
movd
lods
cmc
cmp
sub
or
jl
dec
je
inc
rorl
pop
sbb
sub
push
cmp
sub
lods
popa
repz
sub
pop
xchg
dec
cmc
push
inc
add
popl
mov
ss
mov
stos
jne
dec
sti
xchg
testb
dec
cltd
mov
aam
daa
add
sub
repz
adc
lret
mov
outsl
jp
mov
rorb
addr16
xlat
ds
xor
psllq
mov
push
mov
add
frstor
jo
cmc
enter
mov
adc
lock
in
lea
stos
std
jmp
gs
into
test
jmp
out
in
or
jb
inc
das
pusha
cld
inc
mov
enter
cmp
int3
test
aas
xor
dec
aas
mov
jb
add
rcl
roll
xchg
in
push
add
movsb
pusha
sub
pop
insb
mov
dec
bound
rorb
pushl
jl
jle
shl
adc
jmp
and
jae
mov
jnp
sub
sub
js
es
mov
outsl
cwtl
push
rcrl
js
icebp
aas
ljmp
mov
xor
xor
bound
std
and
adc
notb
adc
add
dec
mov
jo
lahf
test
or
movsl
and
mov
out
scas
cmp
pop
sbb
dec
jae
xchg
clc
inc
or
lahf
and
or
mov
mov
cvtdq2ps
lret
cmpb
inc
test
ret
push
es
pop
out
lret
sarl
sub
xor
mov
dec
jg
sbb
or
pop
enter
sbb
inc
pop
clc
test
ss
addr16
fisttpll
push
jo
test
jbe
fwait
xchg
imul
popf
js
or
dec
mov
push
jno
mov
cmp
mov
dec
xlat
dec
sti
imul
mov
add
xchg
ss
mov
mov
faddl
mov
pop
stos
jmp
sti
inc
test
sub
pop
imul
pop
ljmp
leave
pop
inc
or
loopne
fmull
iret
test
mov
imul
cli
orb
mov
lcall
ret
pop
xor
xchg
movsb
sahf
and
rolb
jp
cmp
jne
jae
push
add
mov
fbstp
inc
mov
sbb
push
jne
nop
sbbl
outsl
ja
pop
or
jae
mov
or
scas
and
sub
sti
ds
mov
ret
mov
test
int3
lahf
xchg
jecxz
ss
jmp
add
add
and
mov
sub
jp
enter
push
fbld
cs
in
cmp
repnz
mov
or
cmp
imul
inc
jo
xor
add
divl
adc
jmp
lret
movsb
clc
inc
sbb
sub
dec
xchg
fisubrl
xchg
scas
sub
dec
mov
dec
and
xchg
xchg
insb
shl
ret
fstps
sub
icebp
xlat
and
jge
mov
arpl
lret
and
js
out
push
mov
sbb
cmp
inc
sub
adc
xor
hlt
cmp
lret
movsb
out
fwait
jge
and
xchg
mov
mov
mov
imul
js
aad
imul
lcall
mov
jp
sub
inc
stc
stos
subl
mov
in
xor
in
aas
arpl
ficomps
jecxz
out
sub
mov
das
xchg
repnz
xor
popl
and
movsl
cwtl
dec
push
adc
imul
or
repz
nop
mov
jecxz
call
pop
xlat
loope
repnz
pop
and
fldenv
repnz
int3
cmp
nop
mov
mov
lahf
xor
sahf
int
adc
cld
rorb
out
jnp
ja
icebp
cltd
sub
shrb
outsl
mov
pop
ss
xchg
cltd
orl
sub
and
rolb
gs
mov
jp
pop
lods
pushf
scas
pop
sub
sbb
dec
mov
or
cmpsb
das
cmpsl
in
push
iret
je
pop
add
js
jmp
dec
cmp
cmc
call
push
bound
sbb
outsl
leave
dec
and
push
and
and
xor
jns
stc
outsb
div
aas
sub
shlb
arpl
sub
add
adc
fistpll
sbb
cli
xchg
rcll
push
pop
outsl
in
stc
call
mov
out
push
xor
aaa
cmpb
mov
pop
mov
mov
out
les
add
xor
cmp
out
insb
xchg
nop
jno
dec
mov
sbb
aas
nop
dec
imul
mov
lock
mov
xchg
sub
popf
jp
adc
push
xchg
adc
daa
into
bound
push
jne
in
adc
pop
iret
push
push
mov
sbb
adc
mov
pop
insl
mov
adc
insl
sbb
loope
mov
stos
scas
xchg
lea
push
sub
scas
es
test
mov
xchg
sub
cmp
sti
pushf
push
mov
test
pmaxsw
out
mov
jno
mov
xor
xchg
pop
add
fstl
sbb
pop
jge
movsb
ret
lcall
sarb
jne
mov
sub
or
dec
sbb
adc
mov
xchg
and
fisubrs
sub
gs
shlb
bound
cmpsb
mov
mov
jl
clc
pop
jns
sti
push
ficoms
loopne
xlat
and
adc
rcrb
add
out
je
xchg
fisttpl
arpl
aas
std
xor
scas
xchg
pusha
or
enter
or
inc
enter
dec
test
and
ret
ljmp
addr16
adc
mov
movsl
movsl
mov
or
adc
mov
js
xchg
adc
adc
jecxz
push
lahf
xchg
ljmp
in
ja
mov
scas
in
insl
sub
push
repnz
or
stc
pop
sub
subb
popa
mov
lock
dec
push
and
push
arpl
aad
test
decl
cmp
ss
pushf
jmp
sub
hlt
lcall
dec
mov
adc
pop
jo
pop
or
arpl
aas
jmp
aam
nop
shrb
add
mov
push
lea
ret
test
pop
mov
mov
inc
clc
out
push
sub
fcmovnbe
jnp
xor
push
cmp
loopne
cmp
xchg
push
mov
cltd
stos
loopne
adc
cmp
lcall
mov
mov
imul
jo
inc
jno
aad
mov
ljmp
dec
push
fmuls
and
sub
mov
xorb
pop
call
jae
sub
push
into
out
andl
cltd
add
pop
cmc
sub
iret
xor
in
loop
cs
sbb
dec
shrl
xor
mov
pop
inc
mov
sahf
in
das
popf
jge
push
cvttps2pi
out
dec
sub
pop
imul
cmp
inc
or
sbb
lcall
mov
or
add
enter
mov
loopne
rclb
cmp
cmpsb
std
out
push
mov
cld
dec
hlt
cltd
int3
jecxz
test
cli
jge
mov
ds
add
jp
icebp
imul
lahf
add
xchg
jno
stos
ror
mov
movsb
adc
mov
mov
mov
or
cld
dec
xchg
sub
mov
out
pop
mov
pop
daa
mov
mov
jmp
or
jg
bound
test
cwtl
mov
ja
gs
cmpsb
into
cmp
mov
jnp
mov
xchg
sub
dec
jl
cltd
cmp
into
xorl
xchg
cmp
pop
int
shr
mov
mov
repz
arpl
sysret
test
repnz
cmp
jle
mov
les
jae
xchg
negl
mov
iret
pop
fwait
add
cwtl
inc
or
lds
scas
arpl
fdivl
xor
and
lods
pop
js
xchg
shll
mov
push
shl
addr16
jae
add
es
xchg
dec
enter
and
or
sub
cmpsb
inc
xchg
clc
test
sub
or
xor
and
cmp
data16
cld
push
popl
lcall
lea
xor
cli
cmpsl
mov
loope
sbb
jbe
arpl
nop
vphaddubw
mov
jmp
push
ja
int3
jne
fcmovne
imul
and
adc
je
mov
sbb
loopne
push
sbb
hlt
shll
jns
data16
out
pop
stos
shl
pop
stc
int
jbe
jl
mov
pop
scas
dec
ds
xor
inc
cmp
add
add
in
test
mov
stos
out
stc
shll
in
dec
test
imul
cld
cmpsl
mov
in
hlt
mov
mov
push
adc
cli
dec
int
std
es
mov
xchg
bound
ss
and
out
addb
sahf
jne
adc
push
in
fists
mov
xor
push
inc
xchg
pusha
mov
sbb
pusha
jp
ljmp
mov
sub
add
or
test
ss
lret
sbb
inc
imul
push
popa
fwait
fwait
xor
mov
sti
cmc
mov
add
dec
mov
andb
test
popa
fsub
sarb
or
mov
sub
pushf
or
inc
je
inc
mov
lret
nop
in
cltd
cs
sti
test
push
xor
jae
lcall
mov
xchg
push
mov
cwtl
lods
pusha
sarl
cmp
push
sti
bound
inc
or
enter
xor
push
cmp
outsl
jbe
cmpsl
int3
ja
sti
mov
adc
lea
pop
pop
arpl
cmpsb
inc
jnp
nop
xor
repz
cmp
iret
mov
cmpsb
jle
test
adc
gs
out
jnp
repz
sub
push
mov
outsl
push
add
mov
pop
cmpsl
jecxz
lea
icebp
push
jo
gs
inc
dec
dec
lods
callw
jo
imul
scas
test
mov
push
mov
push
vcomisd
leave
cmp
push
rorl
xchg
pop
cmp
jns
arpl
add
or
mov
lahf
sbb
push
test
pusha
sub
push
mov
lret
sub
outsl
push
cmp
outsl
cltd
cmp
or
xchg
arpl
lcall
adc
dec
adc
adc
and
xchg
pop
add
mov
mov
lock
or
roll
je
popa
sbb
pop
dec
or
out
cmpl
int
jnp
dec
jnp
aad
test
popa
lods
pop
test
outsl
xchg
cmp
push
loope
add
icebp
mov
sti
add
cli
fnstenv
sahf
mov
cmp
insb
jp
add
loope
pop
mov
movsb
out
sti
inc
sti
cltd
test
inc
jae
mov
sbb
dec
cmp
cmpsl
out
bound
jb
push
and
mov
xchg
xchg
fsubs
sub
popf
enter
aaa
ljmp
jg
xchg
add
adc
call
orb
jp
out
mov
cli
cld
ret
mov
lea
lret
dec
dec
in
sbb
jno
mov
add
and
pop
nop
xlat
insl
adc
pop
xchg
mov
sbb
jno
and
pop
into
loope
jmp
mov
or
mov
xchg
and
inc
ss
xchg
inc
and
repz
inc
jae
pop
or
mull
shl
stos
ja
adc
out
mov
loop
aaa
sti
pop
mov
stos
test
jmp
pop
test
loope
xor
arpl
shrl
or
adc
lds
fucomi
or
scas
lret
or
adc
xchg
mov
jle
push
fsubrs
sbb
mov
mov
fadds
outsl
add
cwtl
xchg
xchg
xchg
lret
push
sbb
cmp
push
enter
inc
mov
sbb
ds
leave
imul
bound
dec
adc
aaa
sbb
fucom
aaa
jno
inc
push
in
imul
popf
out
dec
push
adc
insl
fstpl
test
pop
and
aad
add
xor
lods
jp
push
push
gs
int
xchg
xor
out
pop
mov
cmp
sub
or
loope
outsl
dec
sub
fwait
lret
cmp
push
adc
mov
jg
clc
stos
js
aad
lock
addr16
aad
push
loopne
fsubp
xchg
lock
ret
jno
fisttps
push
mov
sbb
aaa
pop
mov
leave
add
repnz
lahf
jecxz
mov
adc
jmp
movsl
lret
pop
sbbl
fadd
loopne
jecxz
sbb
in
adc
dec
inc
push
add
sbb
in
testb
hlt
sbb
sarb
push
lret
jbe
inc
cli
mov
mov
cmp
es
sbbb
mov
lods
sahf
ret
sub
jecxz
and
imulb
inc
test
adc
imul
push
popa
xor
jl
pop
push
mov
cmp
add
adc
push
mov
fs
movsb
adc
xchg
and
lahf
cmp
push
cmp
pusha
xlat
xor
add
mov
xchg
and
fstps
in
cmp
mov
test
sti
lahf
in
push
mov
iret
push
js
xor
scas
ljmp
imul
push
sub
out
mov
clc
cmpsb
xchg
cmpsb
jnp
cmpl
fcomip
inc
rcr
aad
mov
fbstp
jno
sbb
ret
arpl
push
sbb
filds
jnp
pop
add
jne
mov
xchg
fs
clc
mov
sbb
xchg
or
test
ficoms
jp
push
sbb
es
mov
push
jbe
jle
dec
out
inc
or
xlat
js
inc
push
shll
bound
rcrl
pop
cs
mov
mov
inc
les
jns
pop
mov
into
ss
and
and
outsb
cmc
iret
outsb
ljmp
inc
test
dec
in
call
cli
add
rorl
adc
jle
outsl
pop
or
je
sub
mov
cmpb
adc
add
cmp
gs
ss
dec
mov
sub
arpl
fcmovnb
lahf
push
push
call
adc
cmova
es
fcmovnbe
add
shrl
push
lret
jge
out
stos
lcall
mov
jl
jne
lcall
orb
adc
int3
fdivl
jle
inc
int3
adcl
scas
and
ficoml
sbb
ret
aad
arpl
and
xchg
into
icebp
mov
jge
xchg
xchg
sbb
loope
or
sub
stos
fadd
shlb
cmpsl
xchg
mov
lock
cmp
mov
push
adc
fnsave
mov
mov
les
pop
call
pop
das
ja
push
lahf
sbb
xor
stos
subl
fisubl
and
psllq
mov
push
mov
pop
mov
mov
or
pop
shr
mov
inc
sbb
jno
mov
and
js
pop
xor
inc
or
lahf
mov
sahf
sahf
mov
mov
inc
adc
mov
jmp
sub
push
mov
icebp
stos
fcomps
pop
ja
popa
stos
sub
or
jbe
add
negl
es
pop
sahf
sarb
mov
adc
cmp
lcall
aam
adc
mov
sub
xchg
in
popa
imul
movaps
sbb
fcmove
xor
sub
or
or
hlt
aam
sbb
adc
pop
jno
jecxz
mov
aam
jmp
inc
negl
mov
int3
popf
in
push
or
paddsb
adcl
shlb
jmp
xchg
and
es
inc
or
fdivl
imull
movsl
repz
outsb
lods
add
push
mov
incl
dec
lods
rcrb
in
add
pushl
sahf
cmc
dec
lds
ret
add
rorl
or
sahf
jne
jno
mov
cltd
dec
jbe
mov
ljmp
aam
aaa
mov
cmp
sti
cmp
stos
mov
mov
icebp
mov
call
lcall
inc
out
pop
int
cmc
dec
das
mov
cs
xchg
iret
cmp
repnz
add
daa
fidivl
inc
gs
fcompl
sub
std
repz
add
adc
pop
xchg
mov
lods
clc
mov
cs
xorb
inc
lods
jmp
les
xor
mov
xor
dec
cmp
mov
movsb
mov
jo
mov
fcmovnu
call
les
mov
cmp
fldt
push
test
out
mov
insl
mov
mov
adc
lods
xor
xorb
popa
dec
pop
pushf
cmp
sub
xchg
sbb
and
fildll
es
ret
cmpsl
movsl
clc
popf
call
lcall
push
ljmp
lods
iret
inc
mov
icebp
pop
test
mov
rorb
and
stos
addr16
inc
sub
cmp
dec
jno
jle
adc
repnz
out
cmp
je
fldl
movsb
or
add
mov
imul
xlat
ret
into
roll
loop
andl
rcll
xor
jno
dec
insl
inc
pop
and
mov
xchg
shr
add
cmp
xor
loopne
test
lahf
sub
xchg
js
rcl
lret
xlat
push
fldt
mov
adc
arpl
cmpsl
inc
in
stc
pop
pushf
xor
popa
pop
lods
dec
xlat
scas
and
fisttpl
call
clc
lret
mulb
push
mov
or
xchg
pop
jmp
adc
pop
outsb
adc
notl
and
gs
in
fwait
pop
in
or
or
lret
push
xor
scas
and
aas
xchg
imul
push
mul
leave
cmpl
iret
stos
push
sbb
cs
jbe
pushf
adc
cmp
or
jmp
jns
mov
test
add
mov
pusha
jns
adc
adc
inc
jns
movsl
cmp
pop
xchg
or
rclb
mov
stos
push
sub
aaa
pop
repnz
jmp
icebp
mov
jb
jae
inc
addr16
jae
test
adc
aam
sub
cmp
mov
and
dec
mov
inc
inc
andl
lock
jno
rcl
pop
dec
push
divb
scas
jl
cld
mov
xchg
xor
xor
movb
mov
dec
sbb
xor
insb
es
inc
xor
pusha
pop
mov
dec
jbe
or
ret
xor
mov
push
push
sahf
xor
mov
cmp
push
fucomp
xor
push
mov
mov
dec
add
jae
cmpsl
xor
mov
lock
cmp
cmp
xchg
mov
je
mov
cwtl
lret
pop
cmp
dec
in
hlt
daa
in
lret
jl
adc
movsb
mov
stc
scas
icebp
adc
push
or
into
mov
jecxz
cs
stc
faddl
lds
xchg
in
cmp
fwait
shl
cli
fcoml
ljmp
pop
repz
inc
or
adc
mov
inc
outsl
aaa
bnd
mov
mov
pop
push
jnp
jmp
xor
shrb
clc
push
ret
dec
xor
test
xor
and
jae
pop
in
fcomps
lods
out
lods
das
mov
das
imul
sub
imul
and
dec
in
stc
push
out
jge
pushf
out
loopne
lahf
movsl
ss
xorl
inc
adc
pop
cmpl
xchg
cmp
cs
les
adc
mov
inc
aas
aam
fs
mov
add
and
push
or
lret
adc
aam
sub
addr16
pop
mov
adc
psrad
shlb
sbb
js
jecxz
xchg
sub
out
aas
inc
or
mov
add
push
push
stos
shrl
andl
ljmp
pop
adc
pmaxsw
out
mov
mov
sti
ret
mov
sub
stos
or
adcl
or
sbb
mov
movsl
jbe
push
cltd
ret
or
inc
insb
hlt
pop
cs
mov
das
insb
sub
lds
mov
in
aam
sti
scas
xchg
gs
cmp
jp
fnstenv
xor
es
jne
pop
imul
lods
rorl
arpl
xchg
cmp
push
mov
sub
jge
call
bound
mov
or
out
insl
inc
dec
lds
inc
pop
ret
or
jno
ljmp
mov
and
xorb
xlat
xchg
call
pop
mov
fcomps
adc
push
sub
jmp
test
fisttpll
or
idivl
fmull
and
in
dec
push
mov
addl
cmpsl
adcb
mov
jo
out
cmp
leave
les
movsl
add
mov
insb
shrl
cmp
adc
pop
imul
xchg
jg
sbb
stc
aam
pop
pop
fiadds
add
inc
adc
daa
pushf
jmp
pop
aas
hlt
add
cwtl
inc
xchg
dec
inc
test
sbb
shrb
jae
inc
xchg
imul
loope
jo
jecxz
jb
sub
and
shlb
mull
or
sbb
mov
subb
fidivl
dec
loopne
iret
fiadds
rclb
or
cmp
shlb
sbb
int3
pop
push
push
lods
mov
int
in
jns
xor
mov
push
cwtl
sub
push
dec
xor
add
dec
test
notb
jae
sub
or
fistpll
fdivrs
add
add
lock
push
les
int
enter
into
adc
jae
xchg
roll
data16
dec
add
loop
arpl
loopne
mov
jge
and
sub
cmpsb
into
xlat
push
lods
adc
jge
jns
cmc
adc
cmp
and
dec
jge
lds
jge
aas
or
scas
gs
pop
jns
push
ja
loopne
push
js
mov
cmc
mulb
scas
cmp
jne
mov
cmc
push
sub
pop
loop
insb
mov
cli
enter
dec
mov
clc
dec
push
adc
mov
repz
fmull
insb
adc
jb
dec
icebp
jne
imul
insl
sarb
add
mov
sub
enter
push
push
and
lods
subl
aaa
nop
fistpll
test
fs
outsb
xchg
pop
lods
sub
outsb
dec
inc
cmp
test
cmp
push
cli
jo
add
xchg
lods
sbb
jns
xchg
or
nop
lock
dec
mov
mov
sub
mov
ret
cmc
push
popa
daa
mov
jb
adc
scas
cmp
mov
ficoml
cmpsl
jge
cmpl
push
xchg
jno
cmp
cmp
repnz
xor
sbb
inc
jns
lret
push
sahf
mov
inc
jmp
sub
addb
cwtl
lahf
inc
mov
xlat
sarl
sub
cmpl
shll
test
and
jo
jbe
dec
sub
xor
iret
outsb
push
mov
adc
push
push
pop
inc
negl
ret
imul
cld
or
or
push
arpl
pop
xchg
ljmp
jnp
ljmp
mov
cli
lahf
popa
ss
popa
and
cwtl
les
out
fcmove
das
sub
lea
sbb
decl
xchg
dec
push
adc
fwait
and
fcomp
jnp
mov
dec
pop
addb
out
add
int3
mov
mov
xor
xchg
sub
sbbb
xchg
add
jns
push
fsubrl
in
fiaddl
pop
or
jnp
pusha
scas
push
inc
lret
imul
or
movsb
xchg
mov
fsts
dec
and
adc
xor
popf
inc
fcmovnb
cmp
scas
and
sar
add
or
adc
inc
mov
mov
inc
out
aaa
fsubrs
push
pop
jl
push
pop
outsl
int
push
sbb
push
mov
push
ss
cwtl
or
ret
jge
loopne
adc
inc
addr16
push
add
xchg
cmp
sbb
rorb
pop
ret
outsl
sti
fs
jg
dec
push
lods
sub
mov
lahf
ret
lcall
lret
pop
inc
inc
idivb
or
push
les
outsl
xor
in
out
lcall
dec
aad
es
jge
xor
sub
test
test
mov
inc
xor
arpl
shll
gs
ja
sbb
sbb
xchg
daa
adc
orb
aaa
gs
out
inc
mov
jns
aad
pop
daa
cmp
lcall
mov
push
push
dec
inc
jmp
xchg
and
sarb
movsl
pop
enter
and
lret
lods
rorb
sub
sub
mov
pinsrw
ret
rcrb
ja
inc
outsb
pop
inc
cltd
mov
xchg
imul
jle
adcb
dec
test
mov
xlat
cmp
ljmp
pushf
stos
out
sub
inc
xchg
push
js
loop
pop
mov
add
push
lret
notb
inc
jecxz
and
xor
add
pop
lcall
cmpl
ret
mov
aam
push
cmpsb
push
xchg
xor
mov
sbb
jg
mov
out
rcl
dec
sbb
dec
jg
lret
push
fcomps
pop
fwait
pop
arpl
cmpsl
xchg
push
and
clc
scas
out
or
pop
mov
jae
mov
lret
mov
cs
or
sbb
mov
jecxz
test
pop
outsl
jmp
adc
lock
jmp
hlt
xchg
sbb
mov
cmp
fisubs
cmp
adc
mov
inc
inc
mov
xor
ss
jns
and
repz
roll
mov
jbe
movsl
imul
shrl
movsl
ja
mov
movsl
dec
mov
mov
sbb
icebp
cwtl
sub
mov
out
xchg
icebp
insl
sub
pop
cmpsb
sar
andb
pop
fnsave
call
dec
dec
sub
jge
push
frstor
clc
jl
out
shlb
and
inc
xchg
or
test
mov
inc
lods
call
jno
lods
iret
into
add
mov
push
mov
push
stos
jns
iret
jae
jne
repz
xchg
and
and
adc
insb
std
add
xor
lret
add
arpl
inc
pop
or
push
or
mov
cmpsl
pop
sbb
addr16
or
stos
or
in
es
and
je
call
aas
vmread
sub
inc
stc
gs
cmp
cmp
fstl
sarb
fsubr
and
inc
and
fwait
add
mov
pop
pop
jo
jmp
sahf
lret
std
clc
sbb
push
outsb
orl
cmp
into
or
cli
push
lods
xor
add
mov
cmp
sub
imul
imul
pop
loopne
jae
test
movups
push
inc
popf
lds
dec
inc
jle
fimull
and
movsl
jb
adc
sbb
xchg
sbbb
call
and
cmpsl
aam
clc
pop
data16
jbe,pt
mov
daa
cwtl
and
out
mov
or
pop
orb
insb
scas
and
mov
das
sub
sbb
repnz
jecxz
les
inc
sbb
xchg
fisubl
sub
cmpsb
loope
outsb
fcompp
iret
add
addl
mov
mov
pushw
push
pop
push
in
dec
mov
jmp
pop
iret
into
or
loop
dec
out
fisubrl
xor
mov
jo
test
aad
mov
pop
cmp
shrl
lds
sbb
xor
mov
jae
pushl
imul
testl
sub
icebp
push
loope
jne
pop
add
shr
mov
mov
lret
push
test
aad
je
loopne
mov
mov
aas
paddw
repnz
adc
jns
test
push
and
push
mov
and
nop
pop
cli
mov
ror
pop
adc
stos
scas
ret
pushf
jnp
rdmsr
mov
xlat
mov
cli
hlt
sahf
test
jno
mov
inc
push
daa
mov
test
and
xchg
testb
out
ds
inc
lods
lcall
mov
data16
fsubrl
les
lods
add
imul
lods
pop
push
mov
mov
push
mov
adc
mov
inc
enter
fadds
test
icebp
dec
pop
jbe
mov
xchg
rcrb
sbb
jmp
mov
cltd
dec
std
jno
inc
adcl
lods
leave
mov
scas
xchg
int
jnp
stos
sub
iret
sub
popf
pop
lock
xchg
lods
pop
ret
sahf
dec
into
sub
mov
pusha
sub
leave
xor
dec
ret
insb
arpl
dec
mov
mov
sub
sti
rcll
popf
mov
insl
pop
sbb
mov
ljmp
in
mov
stc
jcxz
outsl
sub
imul
jecxz
mov
mov
mov
pop
xchg
sub
fbld
push
add
movsb
sub
or
and
ret
aas
loopne
mov
or
cmpl
push
xchg
xor
cmp
push
outsb
pop
in
push
sub
sub
lds
jecxz
mov
sub
loope
ret
addr16
jmp
out
adc
popa
popf
lret
sub
mov
pop
jmp
or
test
mov
out
or
push
mov
sarb
xchg
dec
sti
mov
mov
xor
idivl
mov
fiadds
mov
and
int3
je
into
call
out
push
cwtl
popa
in
add
popa
mov
call
daa
repz
loope
lret
lea
fwait
mov
jae
pop
xchg
cltd
or
mov
push
lahf
popf
orl
inc
mov
add
lret
fwait
es
push
or
cmp
jg
mov
xchg
dec
leave
xchg
popa
std
push
sub
pop
jl
mov
mov
xchg
or
xlat
incl
jb
mov
call
sarb
rcll
aad
jb
test
jne
adc
rorl
mull
mov
rorb
mov
cltd
lcall
dec
clc
outsl
jb
xor
in
gs
stos
es
dec
into
outsb
jbe
mov
add
mov
cmp
and
leave
add
cs
mov
mov
and
arpl
rorl
dec
in
inc
lret
js
stc
ret
mov
pop
push
xor
push
mov
push
lds
mov
cmp
and
push
es
lock
sub
xchg
mov
xor
mov
jg
sub
dec
sub
into
pop
xchg
xchg
pop
mov
test
push
inc
xor
incb
repnz
dec
cmp
fsubrs
pop
lods
daa
sub
xor
gs
adc
mov
or
pop
dec
andl
lahf
mov
jmp
adcb
rcr
push
pop
pop
fimuls
adc
jae
inc
sbb
imul
add
adc
sarb
lcall
outsl
cmp
push
imul
xchg
or
adc
xor
icebp
cs
jg
addr16
cmpsl
push
movsl
xchg
cwtl
mov
aaa
mov
pop
das
inc
dec
clc
push
mulb
lcall
push
dec
mull
ljmp
push
fcomps
in
mov
cmp
lock
lods
insb
adc
test
pop
jmp
icebp
pushl
pushf
cmp
scas
or
test
pop
xlat
sysret
test
movsb
mov
lock
jmp
cmp
inc
xor
loop
sbb
cmpsl
enter
out
scas
movsl
outsb
pop
pop
jg
xchg
jmp
orb
dec
fcomi
or
push
test
xchg
insb
test
scas
sub
loop
mov
out
mov
std
sub
insl
xchg
push
in
and
and
cltd
mov
leave
jns
ds
and
pop
cltd
adc
stc
jmp
mov
pop
push
mov
dec
or
jne
mov
push
push
sbb
sbb
out
pop
and
int3
and
sti
pusha
and
imul
xor
sub
cmp
or
inc
jbe
push
mov
fimull
or
das
xchg
sub
sub
jae
pop
cmpsb
les
jb
inc
jae
push
push
data16
xlat
inc
pop
movb
jnp
adc
popf
mov
pusha
xchg
xor
jno
and
cmp
leave
push
in
addr16
adc
dec
mov
fnsave
mov
or
or
push
pop
cmpsb
mov
into
adcl
dec
daa
icebp
ja
adc
daa
xchg
sti
or
pop
daa
jnp
pop
lea
xor
or
mov
fwait
das
int
or
and
loop
xchg
mov
mov
ret
cmc
mov
lods
mov
push
outsb
cmp
fstl
dec
and
stc
push
dec
mov
inc
decb
push
cmc
cmp
pop
add
daa
xor
loopne
ljmp
adc
push
scas
daa
das
push
gs
add
push
xor
and
enter
or
je
pop
cmp
mov
push
int3
xchg
cmp
add
hlt
mov
outsb
pop
mov
loopne
into
cwtl
xor
jae
and
adc
push
out
fsubr
and
mov
mov
popa
lock
inc
cli
or
in
dec
in
mov
xchg
sub
push
lds
dec
fld
push
cmp
dec
sahf
pushf
jg
jl
xchg
mov
sub
or
xor
lcall
addr16
cltd
movb
movsb
or
push
and
xchg
or
shll
arpl
mov
and
and
enter
insb
out
test
xchg
push
mov
fistl
jnp
cmc
sub
std
rcrl
xor
mov
dec
push
out
sbb
ja
jb
sub
mov
clc
inc
sub
fcomps
not
xor
dec
repnz
jp
lret
cltd
cmp
daa
mov
stc
mov
repnz
push
es
lcall
or
push
add
lret
mov
mov
xchg
mov
call
cmp
fwait
xchg
cmc
pushf
adc
in
pop
and
stos
mov
pop
inc
outsl
add
lea
sub
mov
jnp
clc
fnstsw
in
pushf
je
addb
cmp
lahf
cs
stc
mov
cmpsb
adcb
push
mov
cmp
nop
xchg
int
or
in
inc
sti
push
xor
stos
shlb
add
add
jge
adc
jnp
lcall
or
jae
shr
das
push
cmp
fxch
stc
push
inc
iret
xor
adc
mov
mov
inc
sbb
jmp
cmp
stc
push
mov
fldenv
fisubl
fisubl
mov
les
data16
mov
push
je
jno
mov
inc
int3
cmp
or
arpl
dec
dec
les
data16
mov
and
clc
mov
inc
test
into
in
dec
mov
pop
cmpsb
stc
xor
int3
push
sbb
lret
xor
mov
jno
add
jnp
dec
shl
fnsave
loope
xor
rcll
sbb
fwait
rol
sbb
xchg
mov
lock
xchg
jno
stc
sbb
data16
and
mov
jne
push
aad
xchg
cmpsb
out
cs
cmp
repz
insb
xor
lea
ret
jmp
mov
hlt
leave
inc
or
mov
in
xchg
pop
adc
sub
push
xchg
xchg
cmp
push
push
mov
and
aad
subb
mov
xchg
das
test
rorl
dec
jb
outsb
mov
add
push
roll
pop
popa
out
and
sbb
pop
pop
push
jnp
out
sub
je
orb
mov
mov
mov
jl
jbe
rclb
jge
mov
inc
call
rorl
push
dec
mov
add
in
jecxz
lret
leave
xchg
or
pop
pop
insl
lods
in
fildl
mov
fnstsw
and
adc
xchg
andl
mov
popf
sub
jmp
lahf
push
mov
sbb
dec
dec
xchg
pop
fdivs
sbb
mov
ret
inc
imul
xorb
stos
repz
cmc
or
js
rclb
insb
xchg
dec
repnz
mov
lods
cmp
mov
imul
pushf
push
jnp
add
mov
std
add
push
daa
add
mov
xor
mov
mov
pop
shl
mov
lcall
xchg
mul
cmp
jnp
add
push
xlat
insl
push
jecxz
lods
movsb
cmp
dec
xor
addb
dec
inc
mov
xor
pop
sbb
shrb
lea
sub
dec
cwtl
mov
add
xchg
adc
sub
and
push
repz
or
mov
cli
out
mov
jo
cmp
mov
aas
pushl
test
bound
repnz
mov
scas
xchg
mov
sub
push
mov
xor
mov
or
inc
in
mov
sub
xor
pusha
and
xor
fwait
inc
ja
daa
mov
pop
pop
scas
ror
push
or
sub
icebp
movsb
push
mov
inc
adc
inc
insl
lock
xor
addl
mov
xor
addl
mov
ljmp
lock
xor
stc
pop
mov
stos
sub
push
jnp
xchg
stos
pop
inc
adc
add
loope
xchg
loope
sbb
mov
xchg
or
xor
loope
out
add
xchg
fcompl
mov
out
xchg
fldcw
orb
test
cmp
mov
lret
ss
outsl
clc
mov
stos
or
aaa
repnz
and
cwtl
mov
ret
out
push
mov
test
subl
or
mov
sbb
lret
sub
push
adc
or
or
cmp
cmpsb
lods
xchg
les
push
push
scas
bextr
fildll
xchg
cmp
les
out
stos
ljmp
sub
add
push
add
out
popa
ja
pop
ja
adc
rclb
inc
ret
fists
call
xor
mov
dec
dec
je,pn
sbb
mov
xchg
pop
mov
pop
mov
xor
adcl
xchg
out
arpl
in
push
dec
sarb
push
out
xlat
outsl
sti
mov
cmp
arpl
shl
pushf
gs
scas
push
push
adc
pop
pop
fnsave
loop
sarl
jmp
mov
aam
pop
js
ja
and
mov
mov
push
cmp
std
xchg
aam
sbb
sbb
out
lret
mov
push
rcrb
sti
adc
pop
cs
cmp
pop
outsb
jmp
enter
inc
notb
fiadds
mov
movb
jnp
mov
mov
xor
adc
test
jle
inc
jl
sahf
sub
das
push
jo
dec
fidivs
jnp
sbb
js
rol
out
mov
lods
push
xchg
add
es
inc
sar
fwait
rorb
push
sub
imul
sti
cmpsl
mov
fisubl
stc
lods
adc
popa
xor
cs
xor
sti
and
xor
fdivl
mov
push
loop
dec
mov
mov
sbb
ds
jno
jne
std
popa
hlt
imulb
movb
js
jns
adc
cwtl
push
lahf
ret
ret
mov
aaa
jg
out
push
or
add
aas
pop
cmp
push
xor
cmp
mov
or
jne
test
jae,pt
add
pop
jmp
cmc
jecxz
cmp
in
mov
xchg
cwtl
mov
sbb
mov
push
lret
xor
fcoml
loope
jne
mov
js
cmp
mov
sub
addr16
xchg
insb
adc
fstp
ret
les
shlb
fisubrs
andb
popf
or
inc
xchg
adc
insl
cmp
arpl
add
fcomps
loop
xchg
mov
mov
xchg
aaa
and
push
jbe
pextrw
test
fst
or
push
push
xor
cmp
xor
sub
dec
out
icebp
iret
pop
out
and
cmpsb
sub
xchg
pop
in
or
mov
jb
cli
mov
inc
cmp
inc
pop
jle
adcl
movsl
push
jbe
mov
stos
je
mov
lret
cs
shll
sub
ret
sbb
dec
push
in
jb
mov
jmp
sub
clc
sbb
mov
insl
pop
push
push
ficoms
arpl
inc
std
aad
mov
fsincos
adc
insb
push
lret
loop
add
subb
or
fldcw
mov
xchg
pop
lds
sbb
ds
fcompl
call
vmovupd
inc
dec
stos
cmp
mov
lcall
pop
mov
mov
es
shlb
xor
or
in
adc
cwtl
cwtl
negb
sbb
mov
out
sbb
dec
fs
leave
pop
jae
cld
lcall
aam
imul
into
push
add
add
dec
adc
daa
lret
cwtl
xchg
aam
inc
xor
and
push
dec
xchg
dec
pop
xchg
mov
dec
test
jbe
or
cmpl
fucomi
inc
insb
jno
loope
insb
cmp
hlt
lock
es
ret
push
or
shl
in
mulb
movsb
lds
mov
push
les
mov
jge
cmp
stos
pop
mov
sbb
and
or
cwtl
dec
jecxz
cmp
push
pop
add
xchg
xchg
jge
addl
and
rcrb
or
call
rcrb
insb
sub
xchg
pusha
xor
es
add
mov
ljmp
jno
mov
sub
imull
dec
jae
insb
mov
fildl
aam
jge
pusha
xor
in
sub
movsl
cmp
sar
xor
addb
scas
jge
add
xchg
xchg
ret
ret
mov
or
shrl
imul
jns
lret
sbbb
or
pop
out
sub
in
mov
cmc
dec
cmp
xchg
cmp
adc
sub
pop
ret
jle
and
outsl
push
jl
test
aas
repz
jecxz
out
pop
std
je
mov
in
sbb
cli
dec
test
xor
pop
int
fsubs
aad
jge
mov
jecxz
push
pop
mov
mov
xchg
inc
adc
cmp
rsqrtps
and
in
clc
mov
inc
push
sub
cmpsl
into
mov
daa
loop
and
sub
inc
add
fs
push
adc
add
dec
rcl
mov
adc
loop
mov
push
repnz
inc
cmp
cwtl
enter
xor
ffreep
adc
repnz
pop
xchg
mov
sar
cmp
xchg
popf
mov
daa
cmpsb
and
scas
adc
in
or
inc
stc
lret
push
push
roll
mov
lea
retw
nop
cli
ret
sbb
dec
ss
sub
inc
loope
pop
sbb
sarl
push
xchg
xchg
cmp
or
mov
aaa
jnp
pop
inc
cwtl
xchg
out
mov
faddl
xchg
inc
cltd
test
imul
mov
pushf
dec
xlat
cmp
inc
and
loope
bound
inc
inc
add
xor
inc
add
popa
mov
jbe
push
and
lods
icebp
loopne
int
inc
test
test
lods
xlat
insb
xor
loopne
add
sti
insl
push
in
negb
push
out
insl
xchg
mov
test
or
add
push
popf
mov
addr16
mov
and
add
adc
lcall
xchg
ret
loopne
mov
dec
iret
jno
pop
nop
shlb
xchg
rolb
pop
out
iret
mov
imul
mov
mov
test
pop
mov
repz
pop
cmpsl
js
lret
daa
sub
push
xor
push
adc
jne
cwtl
pop
xchg
sub
insb
rorl
ljmp
or
mov
in
orb
adc
mov
inc
add
sub
sti
daa
adc
mov
adc
and
loope
inc
push
push
repz
nop
mov
sbb
subb
lret
or
push
mov
jne
lea
mov
or
jnp
adc
mov
andb
push
cmp
filds
cltd
movsl
fdivr
pop
andb
sbb
ret
sbb
ljmp
sbb
leave
mov
add
jbe
mov
cmp
mov
les
bound
add
gs
stos
ds
je
xchg
lods
sub
or
mov
loopne
or
aas
lcall
mov
adc
hlt
imul
les
fcompl
in
repz
out
fstpt
sti
je
jae
ret
out
dec
mov
pushf
xor
lret
in
ss
out
insl
inc
movsl
add
mov
mov
icebp
in
outsb
push
mov
outsb
push
or
sub
adc
movsl
push
lea
outsb
cli
xorb
dec
cmc
pusha
or
jle
adc
bswap
out
jb
popf
gs
stos
imul
push
adc
clc
fxch
sahf
js
pop
cmp
popf
aaa
in
add
add
data16
insb
dec
mov
and
out
push
adc
ja,pt
push
flds
rcll
push
xchg
push
jne
scas
and
mov
clc
fs
dec
add
mov
dec
stc
iret
sub
pop
out
inc
iret
xchg
nop
into
test
std
mov
jne
out
xor
fnsave
mov
cmc
and
inc
in
mov
or
lret
mov
sbb
cmc
or
adc
push
out
pushf
adc
sub
aam
pop
repnz
cltd
es
or
fcomi
jne
sub
dec
mov
cmp
das
arpl
push
xor
loop
hlt
cmp
or
cmp
add
test
inc
mov
pushf
pop
es
scas
cmp
in
lock
jo
dec
inc
pop
outsb
adc
xchg
jmp
mov
mov
jge
stc
or
jge
push
cwtl
pop
mov
mov
mov
sub
int3
jl
adc
rcrb
jnp
fldl
mov
push
divl
sub
popf
out
inc
jbe
cmpsb
rorl
mov
std
inc
jo
xor
dec
xchg
sub
push
inc
add
inc
sub
or
mov
jne
xor
repnz
xchg
mov
int3
dec
int
fucomip
mov
stc
int
std
scas
sbb
sbb
cmp
sbb
in
shll
mov
xor
mov
mov
loopne
shll
adc
push
jle
pop
mov
leave
sub
and
lods
fists
insb
and
xchg
jmp
push
pop
mov
lods
mov
cmc
aad
mov
dec
lret
movsb
rcrl
out
push
sti
mov
or
and
and
mov
fbstp
nop
adc
push
mov
push
ja
out
mov
push
pop
insl
push
or
lahf
stos
cmpl
push
mov
psubw
xor
and
fcmovb
inc
cmpsl
js
jns
adcl
enter
call
mov
ljmp
jne
push
sub
jl
mov
loop
cmpb
ret
add
rolb
cltd
push
xor
push
sbb
pop
imul
aas
faddl
repz
jne
scas
stos
popa
movsb
aas
push
push
mov
in
xor
xchg
mov
cmp
and
cmpsl
repz
push
mov
sbb
scas
rcrb
lods
and
mov
fwait
mov
jne
add
in
ret
popf
mov
pop
or
xlat
cmovno
shrl
xchg
test
xchg
or
leave
xor
push
int
push
push
sti
push
xchg
les
iret
xchg
cmp
movsb
in
data16
pop
rolb
sub
dec
or
xchg
mov
adc
pushf
sbb
and
xchg
std
lret
mov
pop
inc
push
push
jnp
inc
push
adcb
sbb
mov
leave
shrb
lea
in
adc
aaa
cmp
outsb
enter
je
aam
push
enter
dec
mov
movb
hlt
pop
or
xchg
test
in
cmp
mov
and
popf
xchg
nop
add
mov
aas
push
xor
mov
rcrl
adc
sub
test
inc
cld
test
mov
push
push
dec
xcrypt-ofb
cmpsl
insl
dec
lret
mov
movb
push
xchg
iret
or
out
and
add
jecxz
sbb
sarb
lret
sub
std
mov
stos
jae
xchg
arpl
imul
cmpsb
mov
sbb
ret
push
js
push
mov
sbbl
and
pop
mov
mov
das
mov
add
fcompl
add
xor
mov
inc
or
std
sbb
push
mov
jge
in
sbb
orl
mov
jp
mov
and
outsl
aad
sbb
xor
out
add
sbb
jge
add
jo
mov
insl
imul
leave
mov
push
iret
or
pop
jno
mov
notb
push
imul
mov
adc
outsb
into
push
shrl
bound
popa
and
andl
fs
or
sub
jl
das
inc
dec
mov
and
nop
push
inc
addr16
popa
cmpsl
test
orb
sbb
mov
outsl
push
dec
ret
roll
dec
mov
push
jno
add
inc
js
jno
push
std
push
icebp
xchg
add
movsb
mov
in
add
push
xchg
fstl
imul
rclb
lods
xchg
xor
lods
mov
add
lea
test
in
jo
jne
stc
andb
inc
enter
in
fldcw
movsl
pop
pop
pop
pop
push
xor
mov
inc
xchg
rcl
iret
or
fstpl
push
ret
push
enter
jl
nop
std
jbe
sbb
and
jg
pop
pop
jmp
cwtl
xor
mov
faddp
sub
sbb
or
or
pushf
mov
add
sub
push
xchg
insl
xchg
xchg
xchg
mov
jno
inc
nop
mov
in
add
test
les
fidivrl
mov
jnp
dec
adc
popf
int
popl
insl
fldenv
adc
jnp
mov
pop
jg
repz
xchg
adc
jne
xor
cltd
cli
dec
cltd
lock
fisttpll
xchg
es
out
xor
sahf
sarb
mov
lods
xchg
enter
fildll
mov
mov
into
jb
adc
mov
lcall
stc
dec
addr16
es
jmp
xchg
aad
add
clc
rolb
pop
xchg
add
mov
mov
ja
dec
ret
push
lods
xchg
jnp
adc
xchg
jle
or
roll
fildll
fsubrl
mov
jmp
add
test
popa
jl
movsb
das
popf
pop
xchg
xlat
add
subl
and
xchg
loop
iret
or
pop
hlt
mov
xchg
sub
adc
xchg
out
daa
notb
movsl
lock
aas
dec
mov
iret
pop
sub
fs
xchg
cmpsl
pushf
outsl
lcall
stos
and
or
icebp
sub
inc
out
lret
rcrl
jmp
push
imul
jne
inc
fsubrs
popf
fdivr
add
dec
jg
and
mov
ds
xor
loope
sbb
cwtl
pop
scas
rclb
cltd
mov
lds
jae
dec
aad
gs
popa
imul
leave
xchg
sbb
nop
mov
lret
mov
out
mov
stc
cmp
cmp
adc
pop
out
cmpsb
js
adc
pushf
and
dec
out
mov
push
jg
xor
xchg
mov
mov
fsts
jl
inc
dec
ror
xor
and
sbb
or
fdivrl
xchg
test
cmp
sub
mov
cmpl
xor
dec
repnz
xor
pop
jge
push
sub
in
cltd
mov
js
mov
pop
mov
in
iret
xor
add
xor
inc
cmc
or
mov
cmp
push
mov
mov
dec
or
mov
pop
pop
addr16
adc
outsb
push
sbb
jo
rclb
jnp
dec
jb
push
inc
out
xor
cwtl
inc
push
int3
cmp
das
cmp
dec
js
test
rcll
dec
add
cld
orb
lret
lock
out
jmp
stc
lods
mov
cli
xchg
arpl
pop
dec
fldenv
rorl
mov
test
cltd
cmp
jmp
jle
mov
add
lcall
sbb
pusha
sbb
xchg
lds
pop
inc
ljmp
nop
push
add
rcrl
cmpsl
xlat
pop
jp
sbb
sub
add
dec
lods
inc
lahf
sub
jae
add
fsubrp
xorb
xchg
lods
adc
mov
jo
bound
shll
and
mov
inc
mov
ljmp
popa
pop
test
mov
inc
je
sahf
lock
sub
in
jo
push
divl
mov
dec
int3
xchg
aam
and
scas
ss
xchg
sbb
or
sbbl
mov
loopne
jge
sbb
mov
roll
lret
add
lcall
icebp
lods
mov
xlat
out
fyl2x
and
mov
and
dec
inc
mov
lea
mov
pop
sbb
add
in
and
test
dec
fnstenv
jg
xor
mov
xor
lods
ficompl
outsb
mov
jo
add
add
shl
inc
push
push
int
xchg
lahf
adc
mov
rclb
pop
stc
dec
out
pop
inc
mov
xchg
push
fwait
pmaxsw
ror
xchg
xchg
push
mov
popf
fldl
mov
aam
roll
mov
dec
sub
add
sub
mov
and
mov
jnp
shrb
movsl
scas
aad
dec
and
pop
outsl
inc
int3
inc
push
data16
cli
sbb
xchg
lods
dec
jb
mull
int3
adc
cmp
repz
add
aad
mov
push
stos
cmp
imul
add
repnz
cs
inc
imul
popa
mov
mov
mov
mov
imul
in
adc
ja
ja
aam
sub
scas
jmp
mov
sar
xchg
cmp
jne
testl
nop
push
add
or
lods
addr16
sub
lret
mov
add
or
xlat
and
shlb
imul
ds
pop
idiv
cmp
or
sbb
jl
loopne
pop
cld
out
sub
lcall
jl
ljmp
push
cltd
and
push
scas
sarb
xchg
out
pop
inc
out
mov
mov
les
cld
es
lock
inc
or
sub
fsubs
fcoml
pop
in
repnz
testb
dec
clc
fists
xchg
add
arpl
dec
faddl
out
push
mov
inc
adc
les
cwtl
out
mov
push
push
js
fsts
cs
out
lds
cli
lahf
pop
push
cmp
cmp
or
sbb
decb
mov
mov
jmp
clc
lahf
mov
add
ljmp
sbb
fisubrs
jl
jl
and
sub
bound
mov
xchg
stc
sbb
inc
mov
pop
xchg
ret
xchg
cmp
sbb
xchg
std
cmp
or
enter
adc
repz
xchg
adc
icebp
popa
orb
hlt
fcomps
sti
pop
inc
xor
mov
jecxz
out
add
push
aam
cmp
roll
out
cmp
add
mov
call
pop
dec
aad
mov
sbb
pop
mov
pminsw
ds
pop
xchg
sub
xor
inc
jmp
dec
jo
push
movlps
push
jle
rclb
mov
idivl
add
ss
jns
sub
mov
cltd
aas
push
pop
mov
jp
icebp
dec
lea
mov
and
cld
sti
add
mov
mov
or
xor
mov
lods
or
pop
sbbl
inc
popf
jge
add
sub
add
fsubl
and
mov
or
lret
les
les
out
and
push
cmp
push
jg
xchg
or
cmp
sub
inc
push
pop
sub
push
insb
push
fstps
push
inc
xchg
imul
ja
or
mov
sub
in
mov
popa
leave
dec
add
std
adc
clc
cltd
xchg
add
and
ret
std
or
and
stc
loope
outsb
push
sub
xor
lods
cmp
push
out
fs
hlt
sbb
or
mov
mov
push
in
adc
lret
stos
push
leave
inc
xchg
dec
cwtl
pop
mov
and
pop
aad
add
pop
fwait
jo
mov
xorb
xor
leave
int3
mov
jnp
insl
sub
arpl
xor
jo
ss
stos
dec
mov
xor
cs
sbb
stos
inc
clc
and
mov
lea
mov
push
in
cmpsb
loop
xchg
mov
ljmp
leave
mov
dec
xor
test
das
jmp
and
insl
fildll
loop
int3
mov
xchg
or
sub
lds
sbb
xchg
sti
addr16
cmp
outsl
stos
push
ds
sbb
aad
subb
and
and
das
sub
jnp
fbld
adc
and
out
imul
add
out
hlt
xchg
jo
mov
inc
jb
cmp
ja
out
inc
in
lret
xchg
fisubs
fs
mov
movsl
arpl
inc
sub
pushf
incl
int3
push
or
or
jecxz
pop
in
nop
push
fwait
inc
rorb
mov
pushf
das
call
cmpsb
fidivs
mov
xor
pop
daa
rolb
adc
cmpsb
add
push
inc
mov
sub
ds
fldcw
xor
js
roll
outsl
fistpl
neg
push
rclb
jge
jnp
insb
sbb
inc
cmc
mov
imul
push
add
mov
add
sub
xor
push
imul
xchg
ljmp
pop
fsubr
mov
xor
shrb
es
stos
jecxz
push
and
outsl
out
cmpsl
lds
dec
mov
jns
sub
rcll
rorl
lret
stos
movsb
cltd
mov
pop
aaa
mov
inc
or
loop
xchg
sub
aam
push
adc
and
sub
cs
cmp
stos
rol
cltd
imull
mov
aad
or
in
insb
lods
repz
add
pop
push
aas
aaa
pop
inc
pop
mov
push
shrb
pop
mov
pop
xlat
or
mov
xchg
std
cmp
leave
test
xor
push
jmp
sbbb
jle
inc
or
aad
fidivrs
xor
daa
xor
xor
dec
pop
pop
dec
push
add
outsl
xchg
ljmp
xor
sti
idiv
inc
pop
xchg
test
adc
sbb
repz
or
gs
enter
sbb
stc
mov
orb
cmpsb
jns
fcomi
xor
clc
add
dec
insb
or
stos
nop
pop
aas
loope
pop
out
xchg
xchg
sarb
push
js
adc
pop
cmpl
lcall
shl
pop
daa
cwtl
pop
mov
scas
loope
lcall
sbb
sub
or
int3
dec
roll
sub
iret
repz
jo
cmp
lea
dec
mov
scas
jne
sbb
push
mov
push
mov
cwtl
sahf
xchg
jg
and
loopne
fisttpll
in
push
adc
dec
pop
movsb
xor
loopne
lea
stc
ret
clc
and
fisubs
bound
jecxz
pop
xor
dec
test
mov
sti
or
pop
pusha
mov
xlat
aaa
ret
cmpsb
shl
pusha
and
test
xchg
test
je
xlat
movsb
add
aam
test
jmp
ss
mov
pop
push
xchg
or
xlat
fadds
repnz
fs
and
add
and
repnz
inc
dec
xor
pop
jle
pop
push
mov
xlat
scas
mov
orl
aad
clc
je
shl
jl
sbb
test
inc
cwtl
and
mov
dec
or
mov
or
jno
hlt
lds
adc
mov
and
push
mov
mov
xchg
andb
out
outsb
inc
fdecstp
stos
popf
shr
mov
les
ss
inc
stc
pop
jmp
aas
lds
jne
or
ds
loope
mov
aaa
push
jnp
pop
jae
lock
popf
ds
adc
in
xorb
jmp
mov
mov
inc
jns
pop
js
mov
mov
dec
jno
jns
inc
mov
test
jp
and
frstor
sbb
xchg
cmp
imul
jecxz
push
lret
inc
jmp
cmc
popf
inc
push
std
je
mov
jl
shlb
cmpsl
test
sbb
je
test
mov
mov
cmp
inc
jnp
cmp
into
fisttpl
nop
mov
sahf
jp
into
ja
jne
inc
sbb
fs
inc
mov
push
inc
repz
or
test
enter
icebp
movsl
cmp
dec
or
inc
fld1
arpl
cli
mov
addb
xor
mov
mov
int
xchg
shr
pop
aas
cmp
or
pushf
scas
sahf
lea
jmp
int
ja
in
add
and
mov
mov
xchg
mov
mov
dec
or
or
sub
rorb
je
insl
out
aam
mov
js
mov
call
cs
inc
xlat
insl
lcall
data16
pop
into
jnp
setg
cmp
cmc
pop
mov
in
enter
out
pop
leave
jl
psubd
adc
sub
jae
js
push
or
sub
out
add
roll
fs
scas
add
cld
ljmp
xchg
adcb
push
popf
jge
dec
sub
adc
pop
mov
xor
fwait
ret
or
mov
ss
xchg
imul
add
push
andl
inc
dec
addr16
sub
data16
inc
add
or
sbbl
push
or
mov
jle
fildll
xor
out
or
loopne
in
cld
mov
xchg
inc
fcmovbe
test
decl
testl
cmc
ds
out
nop
inc
xor
dec
bound
sbb
push
arpl
pushf
sbbb
fsubrl
pop
xor
xchg
xor
roll
clc
mov
mov
and
stos
mov
iret
mov
inc
subb
je
cs
inc
inc
mov
cmpb
xor
insl
leave
iret
stc
cmp
inc
pop
in
test
add
pop
imulb
shrl
mov
jmp
jno
jge
mov
adc
xchg
cld
dec
adc
and
mov
cmp
jl
adc
orb
aaa
mov
sub
out
mov
and
popf
push
cmpsl
mov
adc
icebp
insb
add
in
mov
nop
lahf
mov
jne
in
cli
daa
iret
xchg
sbb
lea
add
jno
shlb
jo
and
sbb
mov
in
push
and
pop
ja
push
aad
xchg
test
ljmp
out
mov
adc
sbb
pop
push
add
lods
jae
adc
test
out
out
pop
xor
jmp
push
in
mov
or
xor
mov
jne
push
push
mov
stc
xchg
fbstp
sarl
rcr
sbb
cmp
out
and
hlt
xor
loopne
jg
jnp
dec
gs
mov
fdivrp
push
add
push
cmp
xchg
cltd
sarb
test
fidivrl
stos
or
lods
push
pop
sbb
int
dec
std
sub
cmp
subb
idivl
mov
jecxz
repz
fsubs
push
jp
jle
xchg
pop
push
mov
or
adc
adc
jge
xchg
xor
xchg
cmp
adc
pushf
add
repz
aas
imul
mov
outsw
cmpsl
mov
ret
xchg
sarb
sub
lret
iret
hlt
fmuls
jbe
lods
push
enter
jne
add
int
push
in
movsb
push
test
es
mov
testb
xor
fmull
out
jg
enter
lods
push
cld
les
inc
shr
inc
icebp
and
and
fsubr
and
lret
mov
or
and
out
xor
cmp
rcrb
jbe
sarb
movsl
nop
popa
cmpb
dec
roll
add
scas
das
mov
pop
pop
mov
sbb
add
mov
pop
sub
xor
enter
sbb
stc
add
or
and
cmp
push
insl
movsb
xchg
lods
or
loope
adc
push
ja
sahf
std
pop
adc
cmpsl
nop
cmpsb
cltd
out
mov
sub
aam
push
fstp
loope
aaa
testl
fnstsw
cltd
ret
out
add
insl
lock
jae
inc
repnz
or
fstpt
mov
inc
push
movsl
addr16
mov
jns
decb
jnp
jbe
popa
loop
fstpl
repnz
ret
ljmp
int3
add
inc
addr16
ds
xchg
lcall
fmull
jns
es
jo
imul
dec
call
mov
and
push
pushf
jno
nop
mov
aas
xchg
jg
test
mov
mull
sub
mov
jns
inc
clc
repz
dec
mov
adc
mov
adc
iret
cli
inc
or
ficoms
mov
nop
fldt
sbb
addr16
or
testl
jbe
and
xor
out
enter
xchg
sub
push
add
shll
aad
aad
adc
lds
or
sti
and
movl
scas
bound
and
xchg
outsb
jne
mov
dec
test
insl
push
or
mov
adc
add
mov
add
ja
add
cmpb
sbb
outsb
aaa
bound
cmpb
std
mov
mov
adc
stc
adc
add
stos
add
jl,pt
es
into
shll
inc
jge
adc
test
cmp
pop
xor
outsb
push
dec
int
mov
out
ja
sarb
and
bound
dec
loope
lea
or
sahf
loop
aam
add
insb
jmp
adcl
jge
outsl
push
not
and
cmp
mov
outsl
dec
icebp
fsubl
mov
aad
push
cmp
sub
xchg
pop
jle
lret
adc
stc
rcr
ljmp
jae
fwait
jae
push
int
pop
xor
ljmp
or
mov
aad
lods
jecxz
add
mov
fs
std
sbb
sti
or
pop
mov
mov
lea
pop
clc
negl
adcb
jae
imul
ds
inc
popa
or
mov
movsb
sbb
mov
jo
xchg
cltd
xor
loop
lea
or
ficoml
mov
adc
ret
in
ljmp
pop
xchg
out
mov
push
daa
or
lods
sbb
jo
xor
js
cmp
sub
and
das
stos
jle
and
xor
and
imul
push
xchg
xchg
mov
mov
cwtl
mov
ja
or
call
jecxz
add
int3
pop
dec
adc
rcll
lods
mov
ret
mov
xor
shl
or
testb
daa
bound
mov
shr
cmp
test
aad
cld
add
pop
out
nop
dec
mov
lods
lcall
clc
loopne
call
gs
shlb
push
ja
sbb
push
sbb
cmp
shl
xchg
into
xlat
outsl
inc
cmpsb
lret
xor
testb
add
ja
mov
and
fnsave
pop
add
cs
je
inc
jbe
or
mov
test
push
mov
mov
jl
cmp
inc
mov
sbb
mulb
sbbb
call
ret
pop
dec
inc
jmp
fwait
call
fidivl
sub
mov
jbe
inc
cmpsl
loop
jmp
test
cwtl
ss
frstor
adc
icebp
mov
popa
mov
jmp
xor
or
xchg
pop
or
add
movsb
insb
insl
xchg
jne
test
repnz
xor
pop
jnp
fs
cmpsl
xor
sbb
sub
cmpsb
mov
sbb
jae
rcrb
cmp
test
addr16
dec
repz
fcom
dec
mov
inc
jbe
movsl
xor
les
mov
fwait
out
xor
dec
popa
add
sub
push
divb
ret
xorl
call
out
sub
jmp
scas
push
push
mov
popa
mov
or
jo
cmc
pop
pop
fs
popa
and
mov
ret
xorb
cmp
int
inc
out
jae
adc
lcall
mov
in
mov
jb
sub
ret
cmp
dec
out
lret
push
pushf
add
cltd
aaa
int3
cmp
add
jge
cld
mov
pop
jg
jmp
sarl
push
out
out
mov
cwtl
fdivl
pop
leave
jp
jecxz
xchg
or
mov
jl
cmp
pop
aad
mov
cld
pusha
sbb
popf
lods
bound
pop
mov
inc
ret
out
xor
fldt
inc
jg
cmp
sahf
mov
mov
clc
jge
dec
loope
adc
bound
lret
insl
out
aad
arpl
outsl
xor
out
inc
std
cltd
in
cli
xchg
xchg
pop
mov
adc
jb
data16
arpl
addr16
daa
fs
hlt
sub
adc
loope
adc
clc
add
add
lahf
mov
or
xchg
dec
inc
ds
pusha
jp
shlb
frstor
cmpsb
jmp
shll
test
in
inc
out
loopne
mov
cmp
aam
movsl
testb
adc
inc
or
mov
jl
ficoms
sahf
mov
iret
sbbl
xor
mov
mov
add
xor
iret
arpl
add
mov
fcompl
in
insl
jg
dec
out
popa
mov
jbe
lds
aaa
fwait
sarb
stc
sbb
cmp
sub
cli
stos
push
aas
mov
jle
and
push
cmpsb
rol
lsl
int3
lcall
xchg
lret
push
inc
xchg
inc
aad
cmp
popa
enter
inc
movsb
mov
or
pop
push
jne
mov
adc
push
not
std
jbe
cmp
mov
and
mov
mov
ds
dec
jb
and
push
pop
cwtl
cmp
ficoml
xchg
jns
ret
xchg
ss
cmpsl
ja
sbb
loop
imul
lods
rcrl
stc
sub
in
int
idiv
mov
aas
jl
mov
fnstsw
lock
inc
or
dec
jns
adc
sub
insb
mov
outsl
pop
inc
sub
movlps
outsl
int
out
jbe
jecxz
int3
mov
dec
adc
sbb
xchg
or
mov
mov
dec
fcmovne
xor
mov
mov
lods
or
sub
mov
lret
inc
jmp
jg
into
cwtl
sub
and
and
cmpsb
lods
sahf
movsb
je
fstpl
ret
dec
in
shlb
imul
xchg
divb
mov
testl
pop
jge
mov
rorl
lahf
jge
and
inc
xor
adc
adc
das
jno
mov
fnstenv
mov
pop
cmp
loop
cmp
cmpsl
loope
adc
jp
addr16
test
add
out
in
cmpsb
inc
ljmp
jnp
dec
dec
push
or
aas
lods
pop
imul
or
inc
nop
mov
ret
jne
jecxz
enter
or
xchg
bt
adc
mov
out
cltd
push
mov
or
push
cmp
sahf
fsubrl
loope
cltd
jg
insb
inc
mov
push
lds
fnstcw
jle
cmp
test
add
fsub
xchg
push
or
inc
inc
mov
sbb
xchg
imul
imul
xlat
scas
inc
aas
dec
outsb
jmp
imul
mov
push
dec
movsl
xor
add
jno
in
mov
lret
pop
leave
in
in
out
or
and
pop
fisubl
push
fstl
repnz
pop
mov
jecxz
fcoml
das
dec
out
sub
stc
and
rol
pop
inc
dec
daa
jne
dec
in
cld
xor
jae
cld
fsubp
jne
jmp
mov
push
rolb
icebp
lods
mov
cwtl
adc
out
lret
sub
repz
lock
add
xchg
in
repnz
jae
inc
fsubrl
imul
sarb
out
inc
cmp
sub
and
xchg
pop
jb,pt
push
data16
mov
outsl
std
enter
pop
mov
sub
xor
or
clc
mov
push
mov
inc
xchg
arpl
add
hlt
int
sbb
fnstenv
imulb
pop
or
out
inc
lret
sbb
sti
sarl
scas
lods
mov
lahf
out
pop
xor
addl
out
cmp
rcl
or
cltd
or
arpl
stos
sub
les
mov
push
xchg
sub
push
lock
or
inc
xchg
fildll
movsl
data16
jmp
mov
stos
cmpsl
icebp
cmp
lahf
adc
xchg
xor
mov
xchg
lea
mov
scas
xchg
mov
cmpsl
inc
sbb
outsl
inc
pop
mov
cmpsl
add
mov
dec
adc
and
aas
cld
jb
mov
repnz
pop
sbb
lods
fldl
or
push
cltd
inc
scas
int3
sub
or
out
jnp
lret
shll
sub
sti
mov
push
in
mov
insl
popa
test
mov
push
lcall
cltd
in
sbb
stos
fbstp
sub
dec
cmc
jle
push
and
movsl
mov
pushf
jmp
pop
int3
aaa
shll
mov
pop
fistpll
add
test
fisttpll
mov
pop
adc
cld
jbe
daa
inc
and
and
fwait
add
sub
seta
in
mov
movsb
test
in
xchg
mov
add
int
sub
leave
clc
inc
sahf
lea
std
sub
or
fimull
dec
pop
pop
and
sbb
jle
pop
gs
or
or
testl
inc
cmp
test
mov
push
sbb
pop
push
les
sti
ret
adc
mov
bound
jg
inc
mov
mov
sbb
xchg
mov
and
adcb
cmp
aaa
xchg
sbb
mov
and
ret
mov
inc
mov
cmp
addb
cli
dec
pusha
repz
cltd
sbb
fstpl
xor
dec
andl
clc
dec
sbb
mov
lods
pushf
mov
sbb
xchg
inc
dec
inc
inc
xchg
leave
xchg
gs
decb
cld
fsubs
inc
adcb
insl
jl
and
popf
fistpl
js
cmp
jno
sti
shrl
cs
call
movsb
ret
out
repz
and
push
inc
or
add
in
flds
sbb
xchg
push
add
pop
inc
enter
fdivl
sub
jmp
int
loop
jg
test
dec
aas
push
and
repnz
push
lret
pop
jge
stos
test
mov
ffree
popa
adc
ja
aam
ja
mov
mov
pop
negb
std
sbb
xchg
call
dec
jl
xor
out
neg
inc
mov
test
or
or
pop
pushl
xor
cli
xor
adc
test
fcoml
cmp
leave
movsb
jmp
mov
xchg
bound
aas
push
out
jns
push
daa
in
pop
or
test
cmp
int3
out
push
xor
sbb
sub
sbb
inc
push
stos
mov
mov
fsub
add
mov
stos
test
jecxz
adc
test
sub
dec
lret
jle
push
xchg
mov
roll
das
mov
rolb
enter
mov
loop
inc
sub
pop
xor
outsb
push
mov
xor
pop
dec
cmp
jb
dec
dec
pop
dec
pushf
into
adc
and
mov
dec
in
dec
sbb
loope
add
adc
adc
add
jne
and
xchg
cmp
lock
rorb
inc
lds
out
into
pop
fisubrl
cs
or
fwait
mulb
push
jg
inc
lock
push
mov
push
movsb
ja
hlt
sbb
imul
mov
movb
xchg
mov
js
test
ret
add
std
fldcw
ret
fsubl
mov
or
mov
push
mov
repz
push
cmp
push
inc
sahf
nop
cmp
imul
and
rcl
out
shrb
lcall
sub
mov
jb
sbbb
in
mov
cmc
mov
adc
ret
mov
adc
mov
sti
pop
xor
mull
out
leave
rcll
ficomps
out
cmpsl
dec
sbb
popf
jbe
or
adc
je
or
pop
adc
inc
mov
imul
jo
rcrb
cs
imul
jo
fiadds
push
je
mov
xchg
scas
fnstenv
cmp
mov
shll
pop
xchg
adc
cmp
test
sbb
xchg
test
inc
clc
out
lret
out
sbb
add
adc
test
and
dec
inc
xor
jg
mov
xchg
popl
shrb
mov
mull
repnz
jo
dec
rcr
pop
rcrl
xor
test
js
sti
and
jbe
aas
addb
ja
lock
jnp
lret
xor
push
jns
sub
test
sbb
jl
hlt
jns
or
call
addr16
sar
ret
push
in
pop
leave
aaa
in
fsub
gs
jp
in
scas
fisubrl
outsl
ss
rorl
xchg
loop
in
pop
insb
fisubrl
add
adc
imul
push
sbb
sub
mov
mov
and
and
push
mov
rcl
pop
or
and
dec
dec
orb
into
jg
int3
pop
fstp
lock
aas
pop
cmp
push
leave
gs
and
in
add
xchg
flds
in
mov
test
icebp
scas
loope
ljmp
mov
push
cmp
loop
aad
cmpsl
inc
mov
jmp
cmp
pop
adc
jns
jbe
in
sub
arpl
pop
ror
in
and
mov
push
sar
fcmove
mull
outsb
sub
pop
mov
icebp
mov
dec
mov
lret
cmpsb
cmc
fiadds
repnz
mov
dec
sub
rcll
push
xchg
mov
addb
rorl
pop
add
push
rcll
jmp
push
inc
lcall
mov
ds
loop
xchg
pusha
jae
xchg
inc
xor
fwait
lods
in
xlat
cmpb
dec
xchg
rolb
or
mov
mov
enter
stos
std
add
lods
loope
scas
pop
int
adc
jmp
push
cmp
jecxz
sub
std
dec
les
jns
scas
mov
xchg
inc
inc
leave
xchg
mov
mov
add
add
lods
int
dec
pop
xchg
sar
cltd
shr
test
cs
aam
outsb
rcl
jae
cmp
flds
or
leave
push
decb
inc
adc
test
sub
sub
xor
icebp
out
ja
mov
fstps
add
add
dec
imul
mov
pop
and
fnstcw
cmpsb
and
lods
in
inc
outsb
cmpsl
loopne
push
mov
pop
repz
inc
fnstsw
mov
fcoms
cmpxchg
imul
mov
jb
xor
sub
xor
aaa
mov
jbe
aam
cmpsl
addl
outsb
jle
push
aad
addr16
cmove
mov
orb
jno
mov
inc
xchg
pop
jecxz
lds
xlat
jne
push
push
int
in
jle
jbe
add
and
adc
out
xor
dec
lcall
inc
mov
mov
adc
mov
push
add
jl
test
sbb
xlat
out
push
dec
sti
imul
push
dec
push
aaa
mov
xchg
xor
lods
jns
jle
outsb
and
jmp
bound
mov
inc
sbb
out
lcall
and
int
in
imul
repnz
and
insl
adc
adc
mov
fisubrs
test
ss
adc
lea
and
or
pop
cld
scas
mov
push
add
mov
stos
xlat
push
adc
cwtl
lret
popf
adc
lds
sahf
adc
movsb
jecxz
push
daa
adc
mov
pushf
jl
mov
cmp
inc
jb
sub
add
sbb
adc
xchg
outsb
jne
mov
xor
popa
sub
bound
or
out
sub
stos
or
test
cltd
les
xchg
stos
out
cld
lods
fadds
scas
iret
cmp
push
pusha
mov
bound
loop
cli
aas
icebp
xchg
sub
es
rcrb
test
int
sbb
jbe
fdivrl
sbb
imul
cmp
lret
dec
sbb
inc
imul
outsl
lock
ja
cmp
test
mov
inc
jb
divb
add
adc
cld
stc
xchg
or
stos
repnz
mov
sarl
inc
xlat
iret
sti
jecxz
push
jp
enter
std
jecxz
stc
scas
test
xchg
jne
pop
jle
ja
aas
push
js
xor
cltd
mov
pop
fisubl
mov
pop
int
or
sub
das
xchg
jbe
jno
out
jecxz
push
daa
xrelease
aaa
pushf
loope
scas
or
adc
fnstenv
jg
fwait
pop
sub
mov
cmpsb
dec
lods
cmp
mov
js
imul
clc
push
mov
out
push
outsb
loopne
daa
gs
xor
push
inc
and
stos
test
lock
or
popa
cmp
adc
cmpxchg
leave
xchg
call
incl
mov
xchg
ja
pop
pop
lret
cmp
xor
cmpsl
stos
pushw
add
sbb
inc
push
add
xor
push
outsb
repz
hlt
inc
arpl
int
jbe
fnstsw
sub
fdivl
js
pushf
movsl
and
mov
xor
add
sub
sub
dec
mov
mov
test
inc
sbb
push
std
or
or
jbe
in
lret
in
imull
push
hlt
fimull
daa
jnp
xor
pop
pmaxub
push
cmpsb
loopne
and
mov
mov
loopne
or
movsl
jle
dec
mov
xor
push
nop
sti
outsb
pop
xchg
add
or
stos
stc
lea
pop
and
ret
aaa
push
cmp
addr16
movsl
lock
push
jb
movsb
push
mov
das
inc
popf
inc
scas
mov
pop
jno
mov
std
mov
stc
mov
arpl
ja
movsl
mov
or
jno
or
cmp
jne
fbstp
jmp
test
ret
mov
and
sarl
inc
cmp
test
or
jo
movsb
push
shll
push
mov
push
jno
aaa
sbb
dec
sbb
iret
mov
adc
mov
sub
enter
adc
enter
mov
out
inc
push
mov
int
mov
imul
mov
push
testb
xor
push
rcll
sub
repnz
daa
fldl
xchg
ja
sub
cmc
mov
les
or
fistpll
cmpl
xchg
mov
scas
pushf
adc
push
mov
out
mov
dec
or
mov
clc
mov
push
lret
dec
push
cmp
into
aas
out
or
xchg
jle
sub
mov
jp
sti
inc
inc
ljmp
daa
push
stc
andb
lret
inc
out
lock
jge
and
add
imul
jb
ret
mov
imul
mov
int3
xor
frstor
jae
and
adc
ds
scas
rclb
shlb
mov
push
and
mov
mov
or
gs
movl
rcrl
mov
pop
bound
jnp
iret
mov
inc
out
orl
sub
cltd
movsb
mov
out
jb
jecxz
cmpsl
mov
inc
cmp
jle
and
inc
subb
sbb
dec
add
mov
popl
jl
adc
dec
or
into
dec
and
xchg
inc
negb
mov
pop
das
mov
insl
xor
sub
adc
in
repz
and
movsb
stos
xrelease
jle
and
sub
fisubs
sbb
sub
out
shl
and
xchg
into
dec
inc
pushf
popf
lret
mov
jle
out
bswap
mov
mov
dec
cltd
ja
in
lahf
hlt
decl
xor
add
sar
jle
inc
pop
scas
movsl
mov
push
xor
ss
sub
push
lahf
sarl
cmp
aaa
aaa
pop
cli
or
jnp
mov
fdivs
scas
push
jl
push
mov
sub
fidivs
and
and
mov
scas
in
ss
mov
jl
adc
aad
pop
fnstenv
cli
ja
mov
iret
daa
ficoms
int
aam
mov
cmp
iret
test
inc
and
imul
adc
adc
sub
cmp
jle
dec
imul
cs
sub
xchg
mov
xor
dec
aas
pop
dec
mov
mov
mov
pop
xor
cmp
mov
jae
je
movsl
fidivs
push
and
xor
shrl
mov
addr16
arpl
xor
jg
jle
inc
lock
aad
insl
pusha
xchg
int3
test
aad
popf
movsb
mulb
lahf
dec
mov
mov
jno
aad
mov
add
jbe
test
add
arpl
mov
jmp
sbb
add
aaa
in
cmp
mov
jmp
cmp
xor
mov
sub
dec
xlat
xor
stos
sub
js
das
mov
sub
jecxz,pn
pop
sarb
icebp
div
xor
inc
mov
or
xchg
out
mov
daa
fldcw
inc
lret
int
inc
cli
cli
out
pop
inc
pop
loope
orb
out
pushf
fiadds
cmpsb
cli
jb
arpl
inc
or
aaa
div
push
jo
stc
fstpl
je
cmc
pop
sbb
std
cld
inc
cs
xorl
mov
pop
push
loopne
mov
leave
outsl
lods
outsl
add
inc
push
inc
das
pop
sahf
push
xchg
pop
rclb
mov
push
mov
in
mov
rorl
push
shlb
das
mov
xchg
push
scas
movsb
pop
and
dec
jae
push
andb
push
movsl
ja
in
loop
stc
add
push
icebp
and
or
pop
push
mov
mov
adc
mov
push
mov
mov
jl
cwtl
shlb
cld
imul
imul
mov
add
lret
test
pop
adc
nop
mov
fcmovne
cs
sub
lods
jg
cmp
jnp
icebp
daa
or
sub
and
dec
dec
repnz
leave
sub
inc
xchg
nop
jp
adc
xchg
cs
xor
sub
push
int
in
mov
outsl
flds
aaa
and
idivl
push
xchg
jmp
mov
pop
add
adcl
cwtl
stos
mov
dec
fs
jmp
jae
lods
xor
lds
icebp
shr
and
aad
inc
cmp
or
or
jno
sbb
mov
adc
dec
jmp
sbb
jns
mov
addr16
stos
dec
push
adc
shl
push
mov
fildl
or
inc
sub
push
faddl
fldenv
stos
lcall
fisubs
decl
jno
mov
jmp
jg
xchg
lret
mov
cmp
jp
lcall
sub
cmp
mov
and
subb
imul
pop
or
hlt
add
jns
fcomps
loop
dec
pop
jnp
pop
std
dec
lret
adc
and
lcall
sti
jno
jecxz
push
fisubrs
push
or
xchg
mov
and
repz
bound
pop
sub
mov
popa
pop
into
mov
hlt
xor
icebp
adc
push
mov
pop
inc
add
add
fdivrp
fistps
call
mov
lret
push
xchg
je
push
jge
xchg
xor
aaa
imul
pop
test
dec
mov
sbb
scas
mov
pop
mov
pop
push
loopne
adc
inc
ss
aas
subl
fdivr
mov
adc
pop
xchg
insb
sub
mov
xchg
loop
and
jae
xor
add
rcrl
sahf
push
shlb
bound
cltd
pop
xlat
pop
xchg
cmc
cltd
push
scas
pop
push
mov
lea
mov
mov
adc
dec
push
cmpsl
xchg
mov
lea
jp
mov
imul
cmc
pop
add
mov
faddp
push
popf
cmp
jecxz
in
sbb
dec
cmp
inc
and
in
push
mov
ja
cmp
adc
mov
xor
xlat
pop
pop
testb
cltd
call
dec
shrb
in
mov
xor
filds
in
push
xchg
cmp
xchg
cmpb
push
add
inc
push
xor
inc
pushf
push
jno
imul
mov
clc
hlt
sub
jo
stos
mov
jnp
decl
adc
out
xchg
lods
inc
fdivrs
stos
jecxz
inc
inc
aas
mov
pop
fstl
mov
sahf
pop
lock
xor
inc
nopl
dec
add
sbb
mov
push
outsl
xchg
pop
mov
dec
xor
fcoml
sub
outsb
xchg
inc
mov
xor
mov
jnp
push
pop
add
jb
mov
fsubl
jno
icebp
dec
mov
jno
jbe
mov
mov
ljmp
jge
mov
cmp
and
cld
fmull
dec
or
sub
push
add
sbb
dec
push
je
add
xor
out
push
imul
xchg
add
shrb
notl
mov
popa
xchg
mov
pushl
jnp
scas
fisttpl
dec
cwtl
mov
inc
movlps
jge
or
xchg
adc
test
or
popf
xlat
enter
fsub
std
vucomiss
push
or
jecxz
mov
mov
stc
mov
jg
xor
inc
call
enter
sbbb
cmp
in
ja
jle
test
or
int
dec
push
std
test
sbb
call
dec
cmp
and
mov
lods
pop
mov
gs
inc
xchg
inc
jno
add
xor
je
roll
and
or
adc
fsts
pop
cmpsl
inc
dec
mov
pop
xchg
hlt
and
or
mov
int3
pop
pop
cmc
out
jge
cmc
jge
cmp
movsl
jne
pop
scas
das
xor
jns
scas
sar
cmpsb
aaa
xor
dec
mov
lcall
das
inc
mov
popa
mov
out
mov
push
and
cld
cwtl
jp
mov
pushf
jle
and
mov
es
mov
into
scas
mov
push
je
cmp
cmp
push
pop
xchg
icebp
mov
vsubpd
pushf
mov
sub
outsl
les
push
jae
movsb
ret
push
and
jns
cld
cs
and
mov
lret
loope
add
push
mov
fidivrl
adcb
in
das
jg
jo
xchg
shl
test
xor
inc
mov
nop
jecxz
or
cwtl
add
dec
mov
fucomp
xor
in
pushf
jo
mov
bound
push
movsl
push
sub
cld
out
fsubs
shlb
cmp
decl
jnp
dec
xchg
das
cli
jnp
mov
dec
cltd
adc
sti
std
jmp
sti
sti
pop
xchg
leave
sbb
in
mov
fs
sbb
stos
or
adc
mov
outsl
insl
psrlw
jge
mov
inc
std
ds
sbb
fadd
and
xorl
adc
add
mov
int3
pusha
cmp
push
outsb
cmp
mov
cmp
cld
xchg
mov
mov
sbb
int3
stc
add
std
mov
cmp
mov
push
jnp
sub
fistps
hlt
inc
lds
adc
movsl
mov
addr16
out
mov
fwait
or
leave
mov
sbb
jbe
cmp
sbb
jno
stos
in
xor
fidivrl
clc
jmp
dec
mov
push
push
and
jnp
pop
je
inc
je
sub
dec
cmp
scas
mov
xor
push
popf
movsb
push
pop
sub
xchg
dec
test
int
lock
jnp
sbbl
mov
jns
ror
lret
je
push
sub
rolb
cmc
dec
inc
dec
sahf
xor
cs
push
mov
mulb
jno
insb
jmp
inc
xchg
aad
nop
lea
lea
cmp
dec
push
cmp
and
push
adc
pop
inc
jle
cmpsl
movb
push
int
mov
mov
jl
or
stc
inc
loope
sarl
add
dec
mov
test
rcrb
ss
pop
or
fldcw
inc
ret
enter
lcall
flds
movsb
mov
dec
pop
jmp
jge
push
leave
stos
lock
cmp
lock
pushf
sarb
fs
repnz
lret
imul
xchg
add
mov
mov
lret
lods
xorb
and
mov
jns
shll
inc
mov
and
aaa
daa
imul
bound
int
jmp
xchg
aad
popf
out
inc
enter
lds
ljmp
xchg
adc
pop
cmp
into
xor
scas
pop
mov
mov
stc
in
movsl
notb
jp
aas
jo
xchg
rcrl
test
xchg
mov
jo
xor
cmc
cli
mov
mov
inc
xor
jae
pop
cmp
mov
mov
hlt
mov
jae
mov
lret
cmpsb
pushf
gs
inc
mov
push
mov
lret
xchg
mov
leave
cmc
jmp
imull
gs
mov
fbld
adc
aad
push
push
or
loope
jae
rcrb
les
adc
cmp
test
repnz
sub
jne
inc
adc
pushl
test
jo
or
add
xor
gs
or
pop
lea
inc
adc
mov
clc
inc
test
xor
inc
imul
cmpsb
push
mov
ficoms
dec
pop
push
mov
adc
dec
pop
sub
xchg
jbe
sti
pop
mov
sbb
xchg
ret
pop
dec
sub
insb
mov
les
test
cmp
mov
mov
push
sub
out
aas
mov
cmp
sub
ja
add
sub
std
add
repz
aam
loop
fsubl
das
out
jle
mov
bound
lods
push
push
or
das
xchg
loope
mov
cwtl
inc
add
fisttps
pop
dec
out
jmp
xchg
sbb
cmp
cmp
ret
out
sub
jae,pn
add
jnp
call
cli
push
mov
push
pop
fcmovnb
push
loope
mov
cmp
insl
dec
inc
sub
int
xor
or
mov
fwait
daa
in
ja
daa
push
gs
push
cmpl
cmpsl
incl
cmp
insb
imulb
imul
jb
xor
gs
jp
or
mov
negl
out
inc
push
xchg
test
inc
sbb
stos
lret
dec
add
rcrl
mov
data16
packsswb
repnz
in
rcl
xchg
or
sub
arpl
mov
dec
xor
or
lahf
mov
enter
pop
fidivrs
jge
iret
dec
or
jne
sti
push
mov
jnp
jmp
push
and
pop
push
ret
cmp
jne
movsl
or
inc
fildll
and
mov
test
fidivrs
test
xchg
imul
pop
cmp
popf
dec
jo
test
push
and
scas
mov
hlt
add
add
sub
push
adc
adc
cld
jne
sub
push
roll
cld
movsb
inc
push
ret
or
cmp
or
mov
hlt
inc
ret
cmp
cmc
sti
fimull
dec
roll
cmpsl
xchg
pop
push
cltd
adc
rolb
out
mov
xor
into
outsb
inc
add
xchg
mov
pop
cmpsl
jmp
gs
push
push
je
adc
ja
or
dec
sbb
mov
fisttps
or
pop
push
lret
addb
and
xor
dec
jecxz
dec
xor
nop
das
aas
sub
outsb
fnsave
and
cld
lret
fwait
loop
inc
push
in
mov
inc
sub
int
ss
adc
mov
in
stos
and
adc
ss
mov
sub
pop
mov
ficoms
mov
addr16
xchg
cmp
pushl
xor
iret
ret
cld
fistpl
xchg
jp
gs
inc
repz
dec
mov
xchg
insb
daa
mov
pop
mov
inc
inc
out
jp
and
lds
stos
push
adc
xor
aaa
adc
pushw
addr16
xchg
push
xchg
or
repz
push
cmp
and
js
mov
sub
fnstcw
arpl
inc
shrl
scas
cmp
adc
mov
je
mov
dec
movsb
fldt
in
mov
int3
sbb
rclb
divb
lahf
pop
mov
xchg
inc
mov
dec
push
rcrb
lret
xor
aad
sbb
xchg
lock
lods
ljmp
xor
push
mov
inc
pop
mov
push
xchg
mov
ret
mov
and
cwtl
iret
inc
out
mov
je
push
mov
adc
cmpsb
mov
testl
lcall
mov
call
sbb
push
ds
inc
cli
jl
sbb
stos
add
or
mov
iret
add
dec
dec
xor
shrb
std
add
dec
dec
outsl
clc
lcall
mov
sahf
xchg
arpl
in
insb
daa
ret
orl
adc
fwait
lods
je
mov
mov
dec
pop
lret
stos
lock
adc
faddl
cmp
push
pop
and
repz
add
mov
shlb
and
cld
mov
int
loope
mov
push
xchg
aad
outsl
sbb
mulb
scas
sub
cmp
add
jl
icebp
jb
jl
or
push
cmp
xchg
icebp
lods
jo
inc
std
lea
cmp
leave
jp
cli
mov
stc
sbb
outsl
push
xchg
outsl
out
fsubr
out
xor
lret
cld
test
lret
daa
push
sub
push
jl
sarl
jne
xchg
sarl
mov
imul
jbe
mov
pop
sub
cmp
mov
or
inc
adc
cld
or
jmp
test
call
movsb
sbb
inc
pop
dec
aaa
test
ret
pop
shrl
add
out
jge
xchg
movnti
dec
sbb
je
sbb
fwait
push
push
in
sarl
dec
push
fwait
nop
add
dec
push
and
daa
mov
popa
push
pop
add
std
mov
jb
and
add
mov
stc
outsl
loope
repz
jnp
test
mov
xchg
insb
lock
fwait
or
inc
add
loopne
or
xchg
mov
push
daa
mov
add
pop
push
scas
add
adc
ljmp
ret
xor
stc
repnz
push
pop
inc
pop
xchg
je
std
inc
cs
into
mov
in
dec
insb
cmp
pop
add
lods
mov
dec
sti
mov
jg
inc
ret
xor
out
adc
sbb
insb
movsb
mov
push
cmp
outsl
push
popa
shlb
add
rcrb
pop
dec
enter
jle
cmpsb
loopne
inc
enter
loope
stos
sbb
arpl
cmp
adc
cmp
sbb
test
aaa
lret
mov
sahf
inc
mov
sub
jb
mov
xor
cld
cmpsl
outsl
lret
cs
mov
jmp
scas
sbb
add
fucomip
mov
mov
in
xor
xchg
mov
push
push
add
je
adc
lds
icebp
imul
js
ret
mov
cmp
cmp
dec
cs
mov
mov
fidivs
inc
enter
iret
xlat
lahf
dec
in
mov
cmp
push
arpl
pop
and
pop
rcll
push
mov
es
sbb
sbb
mov
aad
gs
mov
out
push
movsl
inc
es
pop
pushf
mov
bound
jge
mov
mov
cmc
mov
idivb
shl
aad
xchg
jns
decl
mov
ja
lahf
pushf
mov
cmp
rorl
jno
aad
test
ficoml
inc
add
xorb
loop
iret
sbbl
or
mov
xor
stc
es
push
pop
xor
scas
test
xchg
push
mov
adc
sahf
into
sbb
sub
or
add
repz
push
push
jno
in
jg
andnps
test
mov
insb
push
xchg
cmc
aaa
std
lcall
movsl
je
addr16
aad
scas
mov
test
lret
idivb
and
std
xor
sub
int3
hlt
jmp
data16
gs
icebp
lahf
pop
cltd
sbb
mov
jo
or
mov
dec
sub
outsl
and
mov
out
das
mov
test
add
enter
xchg
mov
hlt
out
jae
fwait
shl
outsl
push
sbb
in
mov
in
jmp
cwtl
push
cmp
push
lret
out
cmpsl
inc
adc
push
lock
aam
pop
in
dec
pop
stos
cmp
sub
cmp
in
pop
jbe
std
or
cltd
push
cmp
andb
cli
or
cmc
mov
mov
mov
mov
or
shrb
sub
mov
mov
clc
or
xor
or
clc
mov
push
adc
cwtl
stc
std
nop
out
adc
dec
jbe
outsl
data16
cmpsb
data16
das
lea
addr16
shlb
dec
cwtl
pop
mov
es
mov
and
mov
cmp
dec
sub
fidivs
sub
es
fnstcw
lahf
jle,pt
scas
push
mov
pusha
mov
clc
in
inc
cmp
jb
xchg
aad
loope
fldenv
in
js
inc
push
call
stos
inc
fisttpll
jp
inc
in
sub
movsb
scas
cmp
mov
mov
mov
mov
inc
jne
stos
add
lahf
and
ret
push
xchg
jge
clc
movsb
pop
mov
sub
xor
movsb
dec
mov
imul
mov
aas
mov
shlb
adc
ficompl
fwait
xchg
or
and
lds
push
cmp
mov
daa
push
in
dec
imul
inc
ss
add
cmp
and
mov
xor
movsl
dec
jg
daa
sbb
data16
sbb
jmp
mov
sarb
push
dec
hlt
test
pop
dec
cmpl
jnp
xchg
mov
iret
inc
push
inc
xchg
imul
inc
xchg
jmp
loop
xor
lcall
daa
mov
mov
daa
iret
sti
mov
xchg
movl
mov
dec
mov
movsl
xor
int
jmp
in
sub
sarl
ja
imul
lods
xor
and
repnz
inc
scas
pushf
dec
adc
add
mov
cld
fwait
inc
lret
ret
mov
sahf
into
push
mov
xor
dec
lods
call
mov
dec
inc
or
sahf
loope
lods
orl
shll
mov
sbb
add
das
mov
mov
mov
mov
fmuls
push
sub
jns
sub
out
in
mov
push
push
out
adc
inc
idivb
push
and
sub
jnp
and
xchg
mov
fsubrp
xor
sbb
fwait
push
sbb
jae
testb
loop
pop
xor
cli
icebp
xchg
xor
in
adc
out
in
inc
pop
sub
sbb
lock
and
sbb
es
add
mov
jg
bound
test
sbb
sbbb
insl
fwait
int3
inc
sub
mov
loope
adc
cmp
push
sbb
xchg
imul
cltd
out
rorb
mov
xor
cmp
or
imul
movsl
dec
mov
pop
lods
adc
das
jle
iret
arpl
mov
mov
sbb
lcall
ret
sahf
dec
inc
jmp
mov
inc
scas
xor
mov
shlb
sub
sbb
test
mov
mov
bound
or
in
mov
mov
in
push
push
in
xchg
loopne
jmp
sub
mov
cmp
xlat
fwait
mov
xor
out
gs
testl
loope
div
sti
test
enter
push
data16
repz
fmuls
jl
jl
sub
push
cli
xor
into
cmp
cmp
iret
add
int
lret
les
jl
lds
les
leave
pop
mov
push
mov
cmp
pop
out
in
cmp
jmp
pop
cmp
xor
sub
add
repnz
lods
or
sti
jnp
imul
and
rorl
mov
push
daa
into
mov
in
mov
jns
sub
add
mov
sbb
sti
dec
jnp
idivl
adc
mov
out
nop
dec
cwtl
pushf
adc
push
mov
push
mov
test
cmpsl
jle
lret
fs
pop
inc
jl
push
push
outsb
push
mov
inc
sub
orb
push
stos
test
jp
dec
xchg
mov
bound
sbb
call
jns
out
mov
and
adc
sbb
push
cli
je
imul
push
push
or
xor
sub
jb
pop
pop
push
in
cli
bound
mov
xor
inc
roll
jl
pop
out
sub
int
cmp
adc
in
push
push
mov
dec
xchg
and
mov
cs
add
shrl
cs
xchg
mov
rorb
xchg
fisubrs
fwait
subl
mov
out
loope
push
or
jle
and
fdivrs
push
jp
les
icebp
mov
mov
pop
shlb
lods
xor
lea
xchg
jns
fbstp
mov
sbb
dec
dec
jnp
mov
push
dec
xor
or
jl
imul
or
pop
cltd
fwait
pop
pop
mov
pushf
add
xor
mov
xor
inc
lods
cld
test
frstor
mov
add
inc
mov
dec
movsb
loope
xor
ret
mov
mov
pop
push
xchg
adc
fisttpll
fsts
mov
mov
pop
or
idivb
or
movsb
scas
xor
inc
in
rclb
jo
cmp
mov
sti
mov
aaa
mov
ds
xchg
mov
shlb
pushf
jp
ret
clc
cmp
or
pusha
ljmp
lods
in
in
sbb
xor
out
sub
aad
js
jge
fsts
jg
or
xchg
add
mov
push
js
add
dec
addr16
sahf
pusha
cmp
adc
inc
lcall
jo
movsb
aad
loopne
clc
arpl
lock
xlat
fcompl
mov
mov
push
cmp
cwtl
dec
cmc
jecxz
repnz
and
arpl
addb
mov
jl
jno
incl
inc
je
and
scas
js
push
repz
dec
outsb
fldlg2
aaa
mov
icebp
or
mov
ret
clc
out
mov
xor
pushf
inc
imulb
les
shll
sub
fsub
cmp
loop
and
and
mul
stos
adcl
sub
scas
xchg
mov
int
pusha
xchg
icebp
jmp
aad
loope
test
xor
pop
push
inc
mov
pop
cmc
jmp
xor
shrb
ss
push
fwait
mov
aaa
push
lcall
daa
sahf
push
orl
test
test
sub
push
inc
or
mov
add
fstl
add
jmp
rcr
mov
cli
shrb
call
jge
repz
inc
imul
test
adcb
cmpsb
mov
inc
inc
pop
jmp
xchg
ret
adc
jp
int3
jecxz
repz
mov
inc
popf
adc
and
sub
push
jnp
pop
das
std
rclb
pop
sbb
fiaddl
rcll
outsb
into
mov
sbb
lods
sbb
dec
adc
and
fs
jmp
lock
fstpl
rcrb
mov
jne
outsl
push
in
andb
stc
mov
inc
cmp
mov
daa
das
push
shrl
inc
imul
lahf
dec
arpl
adc
hlt
push
ljmp
arpl
inc
push
rclb
in
sbb
notb
push
sbb
scas
jno
fnstenv
lret
and
and
xchg
jns
lret
ret
push
cs
xchg
rcll
mov
out
push
mov
xchg
jle
sbb
xchg
rorb
aad
mov
aas
cmp
add
xchg
pop
test
jne
test
lahf
jg
add
mov
dec
jbe
pop
int
sbb
inc
mov
xor
ljmp
ds
xor
in
ja
inc
insl
cmp
sub
xor
jb
or
or
mov
jbe
inc
mov
add
mov
fiaddl
mov
pop
dec
jbe
mov
adc
jp
adc
pop
cmpsb
fs
imul
popf
or
mov
pop
xchg
xlat
jle
push
repz
lret
mov
nop
jnp
fidivrl
in
leave
out
movsl
testl
lea
adc
adc
ret
arpl
push
sub
outsl
pop
fcmove
enter
pop
stc
mov
cmc
mov
mov
orl
mov
icebp
inc
push
in
fwait
and
leave
sti
push
inc
les
movb
repz
jle
adc
inc
iret
xlat
push
adc
mov
adc
pop
adc
js
es
add
rorl
out
lret
cli
sub
je
add
push
enter
insb
mov
test
cmpsb
sbb
or
pop
add
push
dec
adc
mov
fwait
xor
mov
xor
nop
sar
hlt
cmp
in
dec
adc
add
xchg
movsl
pushf
add
in
repnz
enter
cmpsl
out
inc
jmp
sbb
sbb
add
or
imul
inc
pop
xchg
or
lahf
sarb
cmp
jge
mov
jmp
and
rcrl
aam
xchg
incl
and
into
fwait
les
clc
enter
lcall
pop
xlat
push
jbe
mov
je
dec
lds
xchg
pop
call
gs
out
imul
xchg
push
push
mov
fistl
pop
xchg
sarb
or
je
test
push
jmp
aaa
repnz
cmp
add
mov
sbb
mov
xor
dec
mov
lret
xor
fsubrs
inc
sub
sub
jmp
insl
fsub
jg
or
xchg
pop
out
adc
in
dec
ror
mov
fs
sbbl
mov
dec
mov
inc
testl
fsubrl
out
and
xchg
fcomp
xchg
cld
sbb
jnp
pop
or
loop
jb
push
mov
mov
push
test
insw
xor
xor
jg
cmp
inc
in
lahf
es
mov
mov
pop
pop
int
jecxz
lock
jns
mov
jmp
pop
jno
inc
mov
inc
dec
adc
jno
push
nop
inc
mov
insb
push
dec
sub
mov
mov
mov
xchg
pop
das
repnz
xor
repz
test
mov
xchg
sbbl
fwait
mov
sub
mov
test
shll
aaa
push
add
mov
call
repz
sbb
mov
or
mov
sub
push
in
cmp
lea
mov
data16
xchg
or
sbb
jmp
sub
sub
outsl
cli
pop
sub
jmp
in
test
or
jo
push
sti
adc
fidivl
lds
mov
pop
xor
inc
mov
sbb
xchg
add
ja
inc
lcall
adc
gs
xor
or
or
enter
orl
les
push
filds
lods
bound
add
outsb
xor
call
xchg
cli
mov
dec
jns
sub
cwtl
in
pop
push
mov
sbb
inc
call
and
cmpsl
add
dec
xor
xchg
fwait
xchg
xor
mov
dec
jecxz
adc
jnp
xchg
mov
aas
aaa
jp
rorb
in
xor
jecxz
repz
cmp
fnstsw
jge
lret
pop
sub
inc
data16
movsb
mov
arpl
mov
jo
test
cld
or
das
icebp
mov
mov
into
jae
cli
xor
mov
dec
xor
out
jmp
sub
lock
cltd
jl
lods
mov
or
pop
aas
push
das
xchg
rcrl
sub
jbe
lods
stos
jae
xor
sbb
sub
sbb
int3
insb
ja
outsb
cmpsb
mov
cmc
nop
lds
add
mov
dec
or
inc
adc
xchg
cmpsb
pop
loopne
dec
decl
frstor
pop
into
enter
sub
imul
push
sub
and
push
inc
add
or
lcall
dec
inc
jecxz
jp
lret
jg
subb
inc
outsb
xor
iret
mov
and
xor
mov
stos
mov
ret
andl
push
stos
shll
int
out
jge
arpl
mov
stos
ss
nop
cs
sbb
xchg
ret
mov
pop
push
fidivrl
rcrb
push
mov
jne
sbb
xchg
xchg
pop
lock
fwait
daa
dec
dec
jnp
out
into
imul
and
or
call
daa
and
pop
mov
xchg
sbb
cmc
xor
cmp
out
inc
fbld
pop
mov
adc
sbb
add
lods
loopne
cmp
imul
inc
ror
cli
sarl
push
movb
pop
ud0
test
pop
sbb
mov
aam
mov
xor
cld
xchg
add
repz
xchg
in
mov
xchg
sub
xor
xchg
pop
ret
out
xchg
and
inc
roll
cmp
orb
and
mov
daa
movsb
xchg
mov
push
lods
ljmp
test
dec
xchg
lods
jns
cmpsl
andb
push
mov
push
dec
adc
fcmovnb
add
and
test
rolb
movsb
lds
lea
mov
sub
inc
mov
pop
xchg
addr16
jae
mov
sti
insl
push
int
sbb
pop
inc
fcomps
push
or
test
sub
add
pushf
mov
test
imul
les
pop
cld
fs
aad
adc
int
mov
xor
xor
nop
xor
cltd
adc
inc
andb
dec
sub
and
fwait
xchg
lods
ja
lds
push
mov
int
fidivs
cli
movsb
pop
ss
faddp
xor
adc
adc
push
jle
hlt
outsb
pop
jno
in
imul
roll
pop
jecxz
incb
subl
mov
mov
and
adc
adc
cmp
dec
test
add
jo
popf
mov
fildll
outsb
mov
repnz
lock
and
push
push
xor
sub
xchg
or
out
ss
xchg
ror
jge
xchg
or
gs
sbb
daa
in
jg
add
cltd
ljmp
clc
adc
mov
ljmp
mov
xor
xchg
mov
mov
push
jmp
leave
nop
test
lcall
adc
cltd
push
add
xorb
or
sub
push
mov
insb
out
push
xor
stos
xchg
in
call
sub
and
stos
mov
push
sti
fadd
xchg
aaa
mov
dec
jmp
and
jns
mov
mov
testb
pop
and
popa
aad
lods
and
lret
repz
arpl
push
and
push
cld
testl
pop
dec
dec
hlt
cmpl
xchg
lcall
jle
popa
push
xchg
sub
fucomi
jns
fwait
inc
dec
mov
scas
jecxz
imul
or
jae
ret
js
inc
jp
push
dec
movsbl
ficoml
mov
icebp
mov
iret
jb
sahf
lret
xlat
enter
mov
cmpsl
cs
xchg
cs
push
add
add
cbtw
adc
sti
imul
xchg
mov
cld
pop
xchg
pop
sbb
and
sub
dec
inc
jp
cmp
jg
jmp
popa
cld
sub
in
pushl
hlt
lods
inc
repnz
jmp
outsb
cli
xlat
fldenv
ds
fadds
hlt
das
lods
jae
sbb
ds
lcall
mov
lea
fidivrl
movsb
cmpsl
pop
push
clc
pop
pop
and
pop
je
jo
or
and
sub
andb
jp
outsb
icebp
xchg
lcall
jmp
push
jne
aas
sbb
and
test
mov
pop
addr16
xchg
fwait
xchg
dec
mov
loop
xchg
cld
pop
arpl
cmc
mov
pop
and
ja
sub
daa
sbb
movsl
sub
mov
fdivr
lret
and
and
enter
in
cli
int3
jmp
cli
insb
repnz
dec
stos
cmp
js
jnp
jne
mov
ret
dec
pop
adc
or
or
xchg
or
in
in
jmp
sbb
cmp
xorl
insb
or
imul
adc
lret
and
out
scas
pop
test
pop
testl
add
mov
xchg
iret
rorl
jle
inc
leave
lock
sub
mov
jns
and
jne
jns
lds
adc
add
imul
mov
test
loope
sub
sbb
jle
arpl
in
movb
dec
orl
test
lret
push
jecxz
cmpsb
scas
ja
pop
fimuls
sahf
cmp
push
into
pop
addr16
push
and
adc
fimull
insb
in
xorb
mov
dec
les
adc
inc
jmp
idivl
xchg
hlt
sbbb
repz
xchg
mov
push
mov
lock
or
xchg
aam
xchg
orb
stos
mov
pop
int
out
test
es
cmpsl
adc
mov
fsubl
enter
lds
inc
jbe
push
mov
xor
stos
mov
fbld
xor
in
call
mov
cltd
sbbb
cmp
test
mov
mov
test
xor
pop
push
fstps
mov
jmp
sbb
cmc
outsb
mov
or
adc
pushf
and
fimull
inc
and
int
hlt
sbb
ss
shl
jp
mov
bound
enter
mov
jae
and
jge
pop
mov
in
jnp
test
aaa
or
mov
pop
int
test
xlat
decl
jmp
jnp
or
xor
movl
sub
xor
ljmp
cmp
adc
es
loop
testb
ljmp
jb
mov
inc
push
jo
pop
or
repz
sbb
decl
imul
sub
push
xchg
out
or
inc
jge
rorb
cmp
cmp
cmp
and
and
inc
sarl
ljmp
ds
jecxz
cld
sahf
sbbl
addl
xchg
inc
adc
lock
sti
pop
sti
in
das
movsl
or
mov
movsl
add
movsb
push
dec
jle
pop
popa
fwait
inc
aaa
int
xor
pusha
sub
mov
lahf
jae
test
bound
add
lret
std
in
inc
mov
push
ret
shlb
cmc
cwtl
test
mov
jle
push
cmp
or
xchg
mov
lea
aad
faddp
dec
and
and
dec
out
mov
or
fwait
or
inc
mov
dec
loop
in
ret
push
adc
pop
mov
jp
pop
mov
shrl
push
jecxz
lret
jmp
ret
adc
sub
cs
add
pop
pop
fisubrl
mov
jo
cltd
or
aaa
fcoms
jbe
test
in
add
jb
repnz
jmp
out
test
inc
fnstcw
jae
cmc
scas
addb
or
addb
xor
lds
popa
xchg
stc
in
loope
cltd
lea
movsb
xorb
lds
or
push
stos
movsb
push
das
lods
dec
out
je
mov
push
stos
leave
mov
pop
cmpb
les
cmpsl
fstpt
loop
mov
loopne
inc
ss
movsb
mov
clc
xchg
div
int
push
insl
ds
test
out
sbb
xchg
push
xor
rcrl
fdivrs
shl
sub
dec
xchg
add
lods
adc
jo
fisubs
sti
pusha
xor
pop
orb
mov
or
inc
es
out
andb
cmp
mov
inc
icebp
sbb
sub
cmp
ret
xor
sbb
repz
shlb
jae
in
or
or
dec
sbb
jecxz
and
lcall
cmp
mov
flds
inc
mov
pusha
dec
bound
gs
hlt
in
push
insl
add
pop
mov
fdivr
std
push
push
inc
ds
mov
xor
pop
ret
jno
xchg
jno
fisubl
in
mov
mov
rcrl
jbe
pop
sub
cld
addr16
dec
xlat
out
push
mov
mov
push
inc
xlat
inc
cmp
and
nop
adc
shl
push
insl
inc
std
stos
cli
in
lea
loop
sarl
mov
xor
mov
gs
pop
jle
inc
add
lods
mov
mov
lock
cmp
mulb
and
push
popf
repnz
push
pop
pop
mov
push
out
push
and
cld
mov
addl
shrl
ja
pop
pop
movsl
and
mov
fs
jae
sub
insb
testb
xor
xchg
jno
loope
pop
dec
sti
cmp
jae
data16
lcall
xchg
xchg
sbb
xchg
sbb
xchg
iret
enter
pop
test
dec
mov
sbb
jl
mov
insb
add
mov
mov
clc
aam
ss
leave
rorl
and
jp
sahf
daa
jbe
mov
mov
jp
sub
test
mov
testl
nop
xchg
mov
sbb
out
ret
imul
adc
xchg
mov
aas
cmp
fisttps
mov
shrl
dec
lock
arpl
mov
mov
pop
adc
xchg
outsl
and
mov
add
cmp
xor
leave
xor
pop
mov
mov
sbbl
jecxz
pop
jns
push
icebp
les
adc
inc
test
out
stc
bound
and
in
mov
adc
shlb
push
xchg
sidtl
jbe
and
cld
lds
xchg
cld
push
jle
aaa
xlat
xchg
in
int
mov
test
mov
sbb
mov
pop
rolb
sbb
aaa
and
ficompl
sub
jnp
mov
push
and
dec
fdivr
ja
cmpxchg
dec
rorw
jg
xchg
push
movsl
and
pop
test
addr16
push
in
into
jp
scas
xor
cli
int3
pop
xlat
sbb
push
cltd
lahf
fs
sub
fcomps
pop
das
cmp
push
scas
mov
jns
fbld
popf
jle
inc
adc
dec
lods
jno
aad
sti
movsl
imul
cmpsb
ret
in
push
pop
ret
mov
or
subb
notl
cmp
sbbb
mov
popa
bound
mov
dec
or
push
adc
imul
adc
daa
leave
std
fs
test
inc
adc
jecxz
iret
movsb
clc
je
nop
adc
cmp
je
mov
add
xor
xchg
fwait
jmp
xchg
add
add
or
xchg
scas
cmp
sub
dec
xchg
xchg
int
mov
pop
inc
dec
fstpt
pushf
fwait
in
sbb
xchg
repnz
xor
pop
or
pop
scas
fistpl
fucom
jo
jecxz
xchg
out
mov
mov
xchg
mov
std
mov
sbb
mov
rcrb
lea
popa
icebp
inc
std
pop
xchg
xchg
jb
jg
daa
push
or
dec
pushf
or
mov
xor
test
ficomps
cmp
mov
lods
popa
mov
aas
or
icebp
ds
movsl
out
fucom
js
movsl
mov
and
rcl
int3
popa
add
jne
xchg
je
std
or
pop
pop
cmp
jecxz
xchg
fwait
imul
mov
jno
pop
mov
and
jmp
scas
test
jno
popf
pop
add
mov
pop
push
pusha
dec
cmc
stc
jne
mov
ret
divl
mov
jmp
call
aad
sbb
add
or
push
jne
movsb
outsb
lcall
dec
mov
lcall
stos
cld
rcrl
mov
mov
mov
mov
mov
insl
lahf
push
adc
sbb
inc
fsubrs
lcall
add
mov
jl
into
cltd
dec
pusha
push
sub
fnstsw
lock
rcr
pop
nop
test
mov
mov
test
scas
and
daa
icebp
or
inc
aad
stos
aad
inc
and
add
addr16
xchg
pop
fs
je
dec
js
mov
mov
push
loope
xor
or
adc
cs
xor
xor
sahf
sbb
inc
and
fnstcw
in
jne
inc
sub
pop
mov
add
in
xchg
pop
pusha
mov
cmpsb
in
adc
pop
scas
jnp
push
push
subb
pop
outsl
xor
lahf
inc
mov
inc
fs
mov
mov
xor
mov
popa
aaa
mov
mov
sub
out
adc
mov
in
or
cmp
dec
xlat
test
xchg
sub
jbe
inc
pop
subb
mov
into
fmull
add
ss
addr16
mov
pop
into
jo
sbb
insb
lret
hlt
and
popa
mov
pop
jecxz
mov
xorb
fsubrs
dec
mov
test
sahf
inc
clc
int3
jle
dec
jbe
and
hlt
mov
or
popa
jbe
popf
add
pop
push
pop
pop
daa
scas
xchg
dec
filds
pop
cli
adc
repnz
mov
fsts
hlt
xchg
fsubl
int3
nop
mov
sbb
lcall
loope
lea
movsb
sbb
add
xchg
js
int3
aaa
adc
lret
jno
and
out
out
fmulp
js
and
shlb
sbb
pop
popf
sub
scas
adc
mov
nop
movsb
mov
pop
out
add
cli
lods
xlat
pushf
repnz
and
xchg
loop
scas
xchg
dec
xlat
mov
dec
lods
mov
ljmp
mov
push
cmp
dec
loope
jbe
dec
inc
test
cs
jge
stos
mov
push
sbb
and
dec
movsl
jecxz
in
pop
inc
mul
movsl
sub
adc
lahf
paddq
shrl
add
push
rcrb
lcall
sahf
das
sub
mov
cltd
aas
lea
ds
movsb
push
loopne
sahf
and
mov
mov
rolb
pop
into
loope
into
scas
xor
push
out
xchg
mov
jnp
jnp
push
mov
sarl
lods
popf
xor
dec
lret
popa
mov
fstpl
lret
dec
scas
cmp
test
nop
je
loopne
rcll
cltd
xchg
sbb
xchg
pop
mov
lcall
push
dec
out
shll
push
cmp
insl
das
scas
mov
push
and
ds
ss
push
jns
movsb
out
mov
hlt
imul
shlb
pop
pop
jno
mov
xchg
lds
mov
push
rcrl
je
shr
cmc
stc
and
ds
loop
js
mov
mov
pop
xchg
stos
into
inc
fwait
and
push
xchg
jnp
add
lret
jp
cmp
leave
cmpb
pop
mov
scas
dec
and
sub
dec
cmp
fisttpl
jnp
gs
push
inc
cmp
sub
scas
inc
in
popf
mov
in
lcall
flds
repnz
imul
aam
fisubrl
inc
jmp
filds
jp
cmp
ss
insl
mov
jecxz
inc
shr
fisttpll
add
sub
sbb
jge
inc
in
ficoms
ret
popa
scas
ror
cmp
and
dec
mov
hlt
pop
mov
fidivrl
sub
or
push
lds
mov
push
xor
jno
int
and
inc
add
lret
add
xchg
pop
clc
scas
xor
dec
fstps
cmpl
jae
aaa
pop
js
push
nop
fcoml
es
adcb
xor
inc
xorl
pop
cmp
xlat
inc
test
xor
stos
and
pop
shrb
dec
iret
test
outsb
and
or
out
mov
add
cltd
lret
sbb
pop
push
testb
pop
int3
fs
sbb
enter
shrl
mov
jp
dec
mov
pop
mov
hlt
das
ja
in
or
inc
pop
xor
jb
hlt
sti
push
and
and
inc
inc
rorl
inc
mov
xor
mov
test
dec
or
dec
fcoms
les
mov
pop
sbb
mov
sub
insl
mov
inc
fmull
and
add
sub
inc
jno
aad
push
movsl
movsb
cltd
sbb
pop
fdiv
pop
imul
pop
push
mov
aad
mov
loop
stc
cmp
push
cmp
cmp
sub
mov
movsl
dec
cmc
icebp
sub
aaa
lods
jmp
dec
or
je,pn
test
test
lea
adc
push
xchg
lret
jns
arpl
xchg
sub
and
lea
adc
outsl
pop
sbb
pusha
xor
xor
lds
xor
ds
sub
and
lods
orl
jmp
mov
and
int3
jmp
addl
inc
imul
mov
mov
into
iret
or
nop
dec
and
push
lret
cmp
jecxz
imulb
pop
sbb
xchg
dec
cwtl
jbe
cmp
lods
enter
int
sarb
outsl
enter
pushl
repz
push
popf
push
mov
adc
bound
mov
addr16
dec
fcmove
jno
loopne
mov
call
xchg
cltd
sub
jmp
fiadds
dec
pop
addr16
sub
enter
mov
cmc
leave
sbb
pop
insb
add
xchg
aad
sti
push
aaa
test
push
and
xchg
jbe
xorb
mov
lds
stc
xor
pop
lret
pop
out
mov
push
jno
mov
insb
push
test
stos
push
sahf
mov
xor
push
insl
jp
cltd
or
xchg
ljmp
mov
jmp
pop
rep
mov
pop
cs
loope
loopne
pop
pop
mov
xchg
push
mov
pop
in
pop
fimuls
and
stos
cmc
pusha
xor
shll
fldl
add
mov
int3
add
and
ret
arpl
push
aaa
adc
lret
cwtl
call
dec
mov
xchg
mov
shr
pop
push
stos
addl
xchg
fcomps
movzwl
fldt
mov
pop
out
inc
outsb
hlt
xchg
sub
add
cld
adc
or
xchg
adc
mov
mov
mov
loop
out
push
xchg
repz
loopne
fisttps
lds
das
pop
mov
push
pop
test
push
mov
mov
pushf
mov
call
dec
sbb
lods
jp
mov
mov
loop
cmc
outsb
jp
lock
sahf
mov
push
lcall
aaa
xlat
arpl
enter
in
jo
pop
or
fidivl
enter
mov
enter
lahf
add
cmp
xlat
inc
daa
pushf
jbe
and
jne
fistpl
push
imul
adc
fistl
pop
sbb
fcmovbe
dec
scas
call
jne
xorb
push
les
add
enter
pop
cmp
xchg
icebp
cld
sti
cld
mov
lcall
inc
idivl
scas
or
movsl
push
add
subb
js
cld
orl
add
rep
test
sbb
mov
inc
dec
sbb
add
lock
mov
mov
ficoms
sarl
or
es
data16
pop
sbb
leave
out
push
mov
inc
int3
cs
mov
imul
add
pop
daa
test
xchg
mov
arpl
pop
shlb
add
or
or
int
push
std
cli
xor
adc
fmuls
adc
cmp
jecxz
push
test
loop
jmp
cld
popa
shlb
std
aaa
sub
outsb
or
inc
mov
dec
stc
repnz
subb
stos
xchg
push
sub
data16
mov
lret
and
imull
pop
sbbl
add
add
sub
or
stc
or
push
mov
adc
xchg
and
sbb
test
sub
mov
je
push
mov
push
mov
mov
mov
xlat
lea
lcall
pop
adc
rorb
das
cmp
cmp
mov
andl
mov
mov
push
dec
sub
xchg
cli
ficompl
icebp
add
movsl
and
popa
mov
push
mov
sbbl
dec
mov
sbb
in
pop
ret
mov
andl
mov
ret
jno
into
inc
dec
and
ficompl
and
mov
adc
pop
imull
testl
dec
add
inc
divl
mov
adc
push
in
data16
push
push
xchg
adc
insb
jl
pop
xor
sar
mov
insl
xchg
or
add
cmp
xchg
adc
xorb
or
fwait
push
pop
cmp
andl
xchg
cli
push
mov
out
das
mov
sahf
add
loopne
fsubrp
sub
outsb
mov
fcompl
cmc
cmp
push
or
addr16
aad
in
fldenv
mov
xchg
sub
call
push
mov
xor
mov
je
jge
xchg
dec
push
mov
mov
add
or
in
flds
adc
ror
aas
movsb
push
fsts
hlt
pop
jnp
and
sbb
xchg
aas
inc
xor
cmpsl
imul
sahf
call
mov
fistpl
inc
or
pop
cmp
out
scas
test
icebp
pop
std
pop
dec
ret
xchg
cmpsb
adc
ficoms
es
xor
inc
cmpsb
mov
mov
rolb
test
xor
push
je
cmc
push
fwait
stos
mov
push
test
scas
stos
iret
pop
imul
add
xchg
mov
mov
xor
sbb
inc
mov
cld
dec
lods
pop
and
xor
dec
mov
fs
hlt
fmull
mov
or
lahf
xchg
repz
out
pop
mov
sbb
mov
lret
inc
push
push
out
imul
sbb
rclb
movsb
adc
jnp
xor
mov
xchg
in
fs
fwait
rorb
cli
jle
or
cmpsl
mov
mov
cmp
xor
imul
shll
dec
addl
xchg
pop
xor
xor
shlb
ja
into
and
outsl
jae
cwtl
dec
ss
mov
xor
lds
pop
jmp
jb
push
mov
add
cmp
mov
cmpsl
or
xor
sahf
cmpsl
jge
mov
mov
adcb
sbb
les
ds
pop
orb
das
fstp
ret
scas
out
stos
mov
testl
pop
gs
inc
xor
aaa
mov
xchg
ret
pusha
fs
int3
leave
jae
pop
push
or
insb
mov
inc
or
sbb
outsl
pushf
int3
mov
cmp
pusha
enter
lods
adcl
aas
mov
and
fs
push
scas
mov
dec
add
cs
cld
pop
add
xchg
mov
cmp
dec
mov
pop
adc
mov
mov
inc
mov
adc
imul
jo
dec
test
mov
shll
jge
xchg
rorl
movsl
inc
or
xchg
pushf
cld
xor
push
xchg
sbb
xor
cmp
rclb
jl
inc
xor
add
mov
mov
push
dec
or
call
popa
xchg
or
xchg
and
ret
int
insb
dec
mov
jle
jnp
pop
cmpsb
mov
repz
jnp
fbld
sub
mov
sbbb
jns
pop
push
movsl
push
scas
add
adc
and
outsb
jl
cmpb
inc
sub
lret
xor
sbb
xor
iret
ss
test
cmpsb
and
xchg
xchg
cmpsl
aas
gs
or
inc
lcall
fldenv
jp
enter
test
jne
push
fstps
cmc
push
or
xchg
or
rcrl
inc
inc
std
ljmp
out
cmp
sub
push
push
in
hlt
mov
adc
into
aad
scas
xorl
fsubr
jb
xor
fisubl
mov
dec
cmpsb
xor
pop
int
outsl
sti
jns
daa
inc
push
ret
dec
pop
ja
testl
outsl
and
call
dec
inc
imul
or
inc
xchg
aaa
pusha
imul
and
les
ret
mov
or
fcomi
cmp
out
dec
stos
incl
loope
add
insb
sbb
xchg
sbb
or
outsl
iret
inc
inc
sub
loop
xchg
xchg
jb
pop
jne
ss
mov
je
iret
xchg
mov
mov
roll
pop
rcl
pop
testl
mov
xchg
mov
std
into
and
mov
notb
inc
lods
jns
sbb
jae
xchg
insb
in
mov
sub
pop
jp
in
es
inc
push
ret
cs
imul
add
dec
xor
loopne
push
ret
mov
int3
and
rclb
jb
add
xchg
iret
mov
pop
add
fdivr
adc
lock
dec
mov
and
loopne
insl
cmp
cmc
sbb
addr16
inc
pusha
ret
jmp
mov
cmovl
lret
in
cmp
lret
stc
push
cld
xor
ficomps
and
ljmp
add
push
mov
enter
push
and
stos
in
ljmp
adc
dec
int
out
ss
xchg
mov
dec
xor
dec
xor
xorb
in
fs
aad
shl
lock
cld
add
mov
push
jmp
mov
inc
out
repnz
inc
sbb
loopne
push
dec
cmp
lahf
jne
and
jl
sub
mov
mov
les
push
or
push
xchg
xchg
inc
arpl
pop
sbb
sbb
les
add
les
shrb
js
cmc
push
xchg
out
add
and
dec
scas
cmp
cmp
cmc
mov
push
pushf
cmp
xor
pushf
in
jo
mov
test
lcall
xor
je
jl
xor
add
sbb
into
mov
out
xor
ss
inc
sbb
lods
shll
push
gs
xchg
mov
sti
in
sbb
mov
outsl
mov
dec
jno
jle
imul
out
sub
sub
and
mov
mov
mov
mov
sahf
fildl
sub
inc
int
xchg
dec
jne
callw
inc
shlb
ljmp
adc
inc
push
arpl
mov
and
faddl
in
cs
fst
fisubl
movsb
pop
gs
push
jno
sbb
outsl
mov
jbe
jo
mov
jb
adc
push
xor
mov
xchg
or
je
pop
sbb
sub
call
ja
pop
jnp
mov
leave
fidivl
cmpl
ret
aaa
or
jmp
sbb
dec
dec
adc
jge
rcrb
mov
push
mov
cli
dec
mull
mov
and
popf
dec
push
cmp
xchg
nop
xlat
jbe
push
mov
es
aam
lods
sub
mov
inc
loopne
test
int
pusha
nop
jl
push
jbe
ror
int
adc
aas
les
xchg
in
je
aaa
xchg
scas
mov
sub
adc
pop
out
and
sti
pop
and
test
xchg
jne
add
andb
dec
add
mov
sub
cmp
xchg
mov
lcall
jno
sbb
lods
pop
xor
fistl
or
inc
out
subb
add
insl
push
inc
divl
xor
pop
sub
ror
push
sarl
bound
push
out
push
imul
movsl
aam
outsb
xchg
inc
xchg
mov
outsb
inc
jl
pop
call
pop
push
dec
mov
into
icebp
aaa
js
fwait
dec
mov
pop
inc
subl
pop
add
dec
fistl
pop
stc
push
mov
jl
ljmp
lea
sbbb
jp
inc
cs
mov
fwait
outsb
cli
fs
xor
sub
add
jmp
loop
ret
or
xor
dec
in
lret
mov
roll
jecxz
hlt
jmp
filds
call
in
xchg
scas
or
pop
lea
xchg
outsb
imul
movsb
pop
push
xchg
sub
insb
mov
data16
mov
movsb
shrb
rorb
dec
push
in
mov
xchg
lock
cmp
bound
imul
mov
and
or
call
pop
push
outsb
fstps
stos
fidivrl
cs
jmp
adc
add
hlt
mov
inc
jmp
mov
scas
sbb
jl
cmp
mov
push
pop
or
mov
fsqrt
adc
rcrb
mov
jbe
pop
push
dec
movsl
inc
xchg
inc
mov
dec
mov
sbb
mov
mov
push
outsb
xor
out
icebp
push
and
dec
repnz
mov
or
daa
nop
sub
aaa
outsl
fldt
pop
and
xor
movl
rol
push
xchg
nop
jo
ds
push
xchg
fiadds
jle
and
in
lret
loope
iret
mov
inc
jl
mov
out
nop
mov
jecxz
call
adc
push
cwtl
or
sbbb
out
push
and
loope
and
stc
scas
stos
and
mov
filds
jno
out
rcl
jns
mov
insl
add
mov
dec
cmp
mov
sbb
adc
and
les
sahf
and
jnp
and
addr16
sub
rcl
mov
and
aam
loope
add
inc
mov
pop
and
stos
fcmovbe
call
into
xorb
leave
push
adc
pop
sub
pop
push
lret
addr16
icebp
in
mov
pop
mov
cmpsl
pop
iret
out
popa
shl
mov
pop
lret
adc
loopne
dec
pop
fs
push
adc
in
into
pop
add
or
mov
in
outsb
lds
mov
imul
call
aam
lcall
inc
xchg
add
pop
sarl
sub
in
pop
lret
lock
mov
hlt
je
jmp
mov
adc
mov
adc
xchg
adc
imulb
mov
sahf
addr16
aas
clc
stc
movsb
fisubl
test
stos
push
add
and
dec
pop
inc
mov
outsl
push
push
inc
ret
sti
pop
pop
sbb
sub
enter
inc
dec
fcomps
fstl
push
cwtl
sub
adc
mov
int
pop
add
bound
and
lret
jl
aaa
scas
insl
or
cmpb
lds
insb
or
clc
push
or
add
or
cmp
pop
jo
je
out
movsb
call
xchg
push
sub
jo
push
fisttps
mov
dec
xor
inc
in
add
fs
ss
lea
je
in
lds
outsl
sti
and
inc
push
sbb
mov
pusha
cwtl
mov
fld
outsb
outsl
insb
xchg
lock
mov
dec
scas
lock
xlat
push
cmp
sti
add
sahf
mov
les
and
gs
rorb
lds
inc
push
inc
incl
xor
stc
dec
mov
jno
xchg
and
aaa
iret
icebp
aam
sbb
rorb
pop
jae
fdiv
cld
xchg
xchg
and
add
mov
dec
mov
and
jns
insl
lret
jl
bound
and
adc
mov
mov
aam
cmp
lret
stos
shlb
jg
mov
jne
and
push
cltd
aam
je
enter
test
lret
cmpsb
sahf
jmp
xchg
outsl
pop
mov
hlt
test
xchg
sub
xchg
adcb
cmpsb
inc
pop
movsl
push
enter
adc
fiaddl
andb
adc
mov
mov
mov
les
sub
shll
push
add
push
cld
scas
adc
adc
std
pusha
testl
fdivs
and
mov
repz
push
pop
lret
fcoms
xchg
fmull
test
scas
repnz
add
mov
lods
add
jp
jmp
les
fwait
cli
ds
push
fwait
insl
lahf
addr16
movsb
mov
xor
cmp
mov
lock
xor
mov
mov
mov
and
jecxz
aaa
out
jae
xchg
mov
add
jo
pushf
or
jb
loopne
adc
mov
in
and
clc
pusha
xchg
cmp
lret
push
fcomi
cmc
push
xchg
ljmp
push
jne
std
push
addr16
push
push
stos
call
cmp
movsb
mov
cmp
xchg
xchg
popa
test
out
inc
fstp
fnstcw
jno
xchg
jmp
push
fsubr
cmp
mov
add
mov
mov
add
jle
ja
je
rcrl
mov
cs
sub
je
push
stos
dec
out
xchg
fucomip
js
fildl
sbb
push
jge
xchg
add
into
ljmp
test
imul
sbb
outsl
test
add
hlt
pushf
clc
inc
lods
insb
pop
loope
sub
lahf
push
insl
xchg
sbb
sbb
push
adc
push
mov
cmp
xor
stc
repnz
outsb
bound
pop
sbb
pop
adc
push
orl
popf
data16
and
fs
xchg
int
movl
jae
lret
jns
shlb
add
cmp
jp
xchg
mov
ds
xor
fs
in
lcall
mov
mov
fsubrl
shll
or
pop
sti
cli
xor
shll
or
enter
sbb
icebp
jae
imulb
lahf
xor
xor
gs
lock
sub
shrb
and
mov
mov
je
dec
ficoml
or
je
mov
mov
push
iret
add
mov
cmp
cmp
mov
sub
loop
cmp
pop
xchg
pop
sahf
adc
aaa
xor
cs
cmc
repz
ud1
or
sti
cmp
sbb
iret
in
jl
fwait
xchg
mov
orl
cmp
les
pop
inc
clc
fldt
pop
aad
and
xchg
ss
adc
ss
fdivl
jecxz
inc
pop
push
xchg
or
in
out
jb
lahf
out
stc
sbb
fildll
jns
shll
ss
jns
je
lret
sub
lcall
push
sub
or
sahf
lcall
push
fs
xor
ds
xchg
dec
dec
mov
mov
mov
push
jnp
or
dec
mov
mov
add
iret
arpl
mov
mov
adc
jl
addr16
jmp
xchg
jae
out
enter
inc
add
insl
imul
fwait
testl
inc
inc
jl
pusha
jp
sub
pop
pop
mov
imul
lahf
and
ret
cmp
inc
cmp
arpl
aad
add
adc
negb
mov
out
pop
bound
out
pop
es
rcl
out
or
mov
cwtl
xorb
mov
jno
inc
popf
pusha
adc
int
mov
fldt
shlb
movsb
adc
jb
mov
sti
ret
hlt
sbb
sbb
jbe
xor
in
popf
sub
scas
popf
xchg
cmp
outsb
std
sub
mov
mov
testb
push
push
mov
push
ret
push
and
filds
and
fstpt
into
jne
loope,pn
sbb
jae
jae
rol
pop
cwtl
mov
jp
in
cltd
cld
test
mov
push
out
lret
add
lods
lahf
cltd
faddl
rorb
lcall
mov
sub
or
test
lock
sub
aas
outsb
jns
mov
sub
pop
repnz
insb
xchg
sub
fstp
cli
std
fisubs
insl
fsubs
xchg
rorl
loop
dec
stc
and
cmp
fiaddl
or
lock
fwait
mov
fcmovnb
inc
sub
ret
dec
or
pop
mov
add
fs
cmc
or
iret
xor
shl
xchg
bound
jns
inc
xchg
jecxz
mov
stc
xor
push
cmp
cli
scas
sbb
mov
push
mov
cs
imul
pop
rorl
mov
sub
add
dec
fists
or
mov
adc
into
push
sbb
sub
add
mov
or
outsb
cmp
sub
call
int
cmc
inc
rcr
into
inc
adc
gs
push
bound
cmp
ljmp
rolb
jp
cmp
hlt
adc
pusha
shl
jno
enter
cmp
xlat
push
fstpl
nop
cmpsl
in
scas
xorb
xor
ja
inc
or
outsb
mov
and
aam
mov
cmp
in
into
call
mov
cwtl
sarb
test
or
cmp
and
mov
divb
in
es
push
insl
adc
inc
or
xor
cwtl
das
dec
sbb
jb
cs
jp
mov
ficoms
xchg
in
dec
mov
push
mov
xchg
fidivl
in
cs
add
iret
mov
cmpsl
push
sub
movsl
push
sahf
jecxz
push
cmpb
mov
jbe
lcall
fs
test
xchg
std
stc
jmp
mov
fsub
sbb
pop
adc
xchg
into
mov
inc
mov
mov
mov
in
or
leave
pushf
inc
stc
xchg
sub
pop
inc
push
in
sub
xor
ret
testb
xchg
mov
and
mov
aas
and
adc
pop
cmpsl
out
xchg
xchg
sbbl
cmp
movsl
icebp
inc
mov
xor
inc
xchg
jno
add
mov
mov
sub
add
mov
cwtl
push
push
sarl
bound
arpl
daa
lods
push
ja
push
cmp
out
inc
sub
inc
fstps
adcb
ds
movsb
xor
xchg
or
movsl
dec
out
fldenv
sub
sub
cmp
cmpsl
and
or
cli
adc
add
mov
xchg
outsl
pop
add
orl
das
lods
movsl
push
mov
shll
inc
inc
cmp
jnp
and
scas
sbb
and
mov
sub
in
xchg
sbb
sub
mov
pop
inc
sti
gs
dec
loop
or
in
pop
and
dec
cmpsl
mov
jns
fidivl
xor
les
sbb
out
clc
outsl
js
fidivrs
cs
in
xor
repnz
test
cmp
pop
mov
xchg
popf
loopne
xlat
and
repz
cmp
dec
xlat
xchg
ret
xor
push
xor
cmp
cmp
test
mov
and
adc
cmp
das
fdivs
int3
jle
xchg
mov
xor
rorb
repz
xlat
jecxz
pop
cs
push
pop
lcall
dec
fbld
dec
mov
gs
pop
xchg
enter
and
sub
jmp
xor
stos
aad
orl
nop
push
imulb
sbb
sub
cmpl
iret
mov
clc
jo
inc
inc
mov
add
sahf
stc
push
push
xor
imul
add
scas
mov
or
popf
pop
movsl
xor
mov
insb
and
sub
mov
daa
std
xchg
test
xchg
push
les
sub
dec
in
fiaddl
outsl
int3
sub
adc
icebp
rcrl
pop
cltd
xor
sahf
lcall
andl
sbb
pop
repz
and
or
fsincos
imul
movsl
loopne
sub
push
test
push
incl
test
dec
test
xchg
mov
xchg
and
outsb
jg
push
add
cld
stos
sbb
mov
stos
jne
andb
mov
dec
jno
test
idivl
inc
cs
xchg
push
jnp
push
mov
mov
out
in
adc
xchg
dec
loope
jb
ret
sahf
jae
in
jle
mov
sub
xor
add
decb
mov
das
add
xchg
loop
lock
insb
sub
das
or
adc
test
sti
lea
jno
or
adc
dec
inc
mov
jo
mov
xor
xor
jne
lods
fwait
push
std
jae
rep
insl
xor
into
cmp
mull
nop
dec
dec
fs
cmpsb
fstpl
cmp
insl
lahf
aaa
out
ja
mov
sbb
jno
push
dec
icebp
mov
lcall
fldl2e
xor
and
cmp
pop
add
test
xchg
daa
xchg
repnz
jmp
ljmp
pop
in
jge
repz
test
sti
in
aaa
repnz
and
fcoml
in
ja
in
sbb
enter
jge
pop
addr16
xchg
and
decb
aaa
add
int
dec
ficoms
push
mov
xor
mov
fidivrs
loop
sbb
sub
pushf
out
scas
jp
xchg
movl
mov
aad
inc
out
imul
push
aas
inc
and
aas
and
push
jne
jl
mov
mov
push
inc
lcall
roll
sbb
stos
insb
push
mov
ds
popf
mov
out
sbb
push
sahf
scas
xor
mov
jno
enter
sbb
pop
sbb
pop
pop
pusha
in
call
repnz
arpl
mov
test
fwait
mov
xchg
pop
fdivrp
or
dec
sub
push
pop
xchg
mov
mov
adc
push
in
je
adc
dec
inc
dec
insl
jb
mov
in
dec
in
add
js
xchg
dec
or
dec
fsts
ret
jp
shrb
push
mov
ds
mov
call
add
loopne
imul
jnp
mov
mov
pop
cwtl
add
xor
dec
mov
mov
outsb
push
shl
mov
jb
dec
pop
mov
leave
mov
xchg
mov
xchg
loop
mov
dec
dec
push
roll
inc
in
aaa
outsb
test
adc
push
cmpsb
mov
pop
add
cmpsl
dec
dec
jno
mov
in
push
mov
inc
cmp
lods
push
in
orb
add
rolb
nop
mov
mov
push
jle
test
movsl
aaa
xor
push
dec
cld
jmp
leave
loope
sub
dec
push
push
fistpl
cld
ss
mov
adc
fwait
enter
testb
fucom
cmp
notl
mov
xor
adc
push
add
in
mov
pop
jae
shrb
out
popa
xchg
aas
mov
movsl
repnz
fsubs
pop
xor
sbb
mov
pop
fnstcw
adc
and
imul
mov
jge
mov
push
repz
push
jle
cltd
jb
pop
push
cmpl
xor
lock
movsb
and
scas
test
mov
xchg
push
mov
imul
push
push
clc
subl
fsts
orl
inc
jne
xchg
cmc
lds
push
pop
outsl
sub
aas
stos
sbb
mov
pop
and
repz
fimull
mov
ror
mov
cmp
sbb
sbb
mov
add
repnz
in
jb
dec
je
adc
das
xor
dec
lahf
and
jno
push
lcall
fld
popa
mov
add
addr16
cli
adc
iret
lds
pop
mov
mov
cmovo
push
lock
iret
sub
cmpsl
subb
inc
lea
dec
cmp
sbb
gs
mov
jns
xchg
add
or
rorl
arpl
add
push
js
btr
xchg
adc
insb
fs
das
sbb
sub
clc
xchg
add
jb
lret
mov
mov
mov
stos
jle
jbe
sahf
std
push
inc
stc
add
pop
mov
fisttpll
mov
mov
pushf
cmpsl
mov
mov
push
repnz
xor
xchg
sbb
ret
mov
std
cmp
and
stc
add
ror
repnz
push
in
jmp
popa
icebp
cmp
cmp
jg
mov
popa
xor
in
insl
sbb
jmp
call
out
test
mov
stc
or
loopne
sbb
sub
ror
movsl
mov
ljmp
cmpsl
xchg
lock
xor
pop
sahf
jne
push
lods
xchg
subl
pop
aas
out
fstpt
add
cltd
sub
movsb
dec
cmpsb
ret
and
ret
jmp
and
or
add
jnp
mov
fnsave
in
movsb
ja
mov
jmp
movsb
dec
xor
mov
pop
imul
andb
into
or
movd
cmp
ljmp
insb
stos
je
sbb
fcompl
lea
and
ffreep
jno
out
inc
mov
xchg
shrb
mov
mov
test
aaa
into
bound
xchg
pop
clc
inc
mov
push
leave
or
adc
notb
int
mov
loope
dec
sub
test
add
cmp
cltd
dec
push
and
or
jbe
repz
xor
mov
pop
mov
out
xchg
dec
mulb
add
pushf
lods
int3
cmp
sbb
in
inc
imul
inc
ja
xchg
inc
cltd
or
xchg
adc
and
cmc
inc
mov
xor
xor
jle
adc
add
pusha
push
adc
xor
xchg
addr16
stos
test
rcrl
ret
sahf
sub
jecxz
cmp
push
jmp
cwtl
xor
sti
fldcw
xchg
aaa
add
imul
repz
call
mov
sahf
sbb
xor
jno
adc
xchg
movsl
or
pusha
sub
iret
or
faddl
pusha
sarb
jno
cmp
outsb
std
mov
inc
add
in
addr16
mov
orl
clc
dec
lahf
dec
jbe
outsl
in
push
fiaddl
icebp
xchg
sahf
mov
daa
sahf
dec
int
sarb
stc
inc
fld
adc
faddl
jge
sbbl
aas
daa
insb
insl
enter
xchg
aam
mov
mov
xchg
mov
fmull
icebp
adc
into
negl
dec
cli
insl
sti
sub
push
daa
test
push
adc
movsl
sub
mov
ja
inc
fimull
insb
mov
jbe
arpl
out
shrl
mov
decb
lahf
mov
and
mov
push
dec
push
notl
fwait
imul
les
add
xchg
mov
mov
pushf
lcall
add
xchg
sbb
xlat
mov
repnz
inc
loopne
popf
cld
pushl
pop
mov
nop
xchg
push
inc
cwtl
out
shl
lret
lahf
movsl
aaa
pop
mov
xchg
cmpsl
xchg
dec
mov
mov
jb
pop
inc
cmp
mov
push
arpl
dec
jmp
fisubrl
mov
addr16
push
inc
pusha
dec
cmp
repnz
jp
lods
push
dec
dec
and
sti
aam
mov
test
inc
inc
ja
sub
xor
xor
ljmp
stc
inc
xlat
or
or
mov
ret
mov
call
and
sbb
insl
mov
jnp
arpl
mov
push
lds
mov
pop
or
imul
hlt
out
and
pushf
rcrl
jb
cmpb
je
pop
cld
stc
sub
fildl
mov
pushf
out
loopne
test
sub
and
mov
xchg
mov
mov
ja
shl
mov
sub
mov
aad
imul
repz
add
jle
orl
push
mov
mov
addl
loopne
jne
aam
mov
in
mov
mov
mov
ljmp
sub
jl
push
mov
gs
xor
loop
sub
xchg
or
into
dec
fsubrl
add
loope
icebp
ret
in
adc
bound
cmp
dec
sbb
sub
xor
sbb
or
dec
push
and
dec
add
rcrb
int3
inc
or
mov
lret
aas
adc
idivl
and
push
loopne
add
adc
jbe
sahf
pop
test
push
xchg
cmp
and
test
repnz
pop
cmp
movsb
dec
aam
push
push
inc
fidivrs
fldt
pushf
adc
pop
jno
xchg
inc
add
adc
lds
xchg
cmpsl
xchg
dec
dec
adc
adc
lods
pop
jg
xchg
cwtl
and
push
jno
movsl
enter
mov
push
int
lea
lods
and
cs
int
dec
incl
push
and
and
pop
push
push
adc
int3
scas
fstp
inc
cs
add
jmp
nop
and
mov
mov
or
push
in
add
sub
push
inc
pop
mov
mov
or
jb
mov
aas
add
fstps
lgs
push
xchg
push
sub
in
aaa
dec
inc
aad
pushf
push
out
test
add
xchg
cmpsl
imul
in
or
or
je
movsl
out
fs
inc
test
jb
stc
lods
test
adcl
and
dec
inc
scas
jecxz
jb
incl
cmp
movsb
fmull
and
call
pop
pop
pusha
test
jge
loop
orl
fwait
sub
push
sub
sbb
lods
int
jnp
mov
dec
inc
pop
sti
sti
jne
fdivrs
mov
xor
push
push
aad
sbb
and
mov
and
nop
xchg
shlb
test
nop
add
add
fimuls
pushf
frstor
sub
sahf
movb
fmull
xchg
mov
and
or
repnz
jmp
outsb
xor
cmpsl
idivl
data16
test
cmpsl
rorb
les
insb
jb
mov
sbb
xchg
cmpsl
cltd
push
push
je
dec
sbb
inc
shlb
pop
fsubr
aam
outsb
int3
jo
hlt
sti
xor
jb
clc
dec
push
test
push
mov
fdivrl
repz
mov
and
dec
and
push
jmp
adc
jmp
add
clc
sub
pop
xchg
dec
push
inc
jmp
outsl
mov
push
mov
ja
dec
mov
adc
push
jecxz
aaa
lods
movsl
cmp
push
out
sbb
stos
inc
popa
imul
mov
inc
sbb
or
pop
sbb
fisubs
and
push
jge
mov
rcl
mov
inc
sbb
mov
push
pop
loope
xor
int
sub
xlat
jb
xor
cmc
jno
inc
pusha
push
sub
mov
pop
pushf
mov
or
add
addr16
sub
outsb
and
push
cmp
leave
mov
inc
adc
push
ljmp
repnz
popa
cld
or
push
inc
aas
dec
cli
add
xchg
aam
mov
adc
and
add
ja
jge
sub
insb
arpl
in
mov
mov
loope
popl
in
daa
xor
push
jp
xor
xor
and
sbb
jle
add
in
or
fistpll
jecxz
mov
insl
mov
aam
adc
sbb
sub
xchg
fcoms
jg
pop
jne
inc
push
lahf
jp
clc
mov
push
jnp
pop
out
xchg
rorb
and
pushf
sbb
xchg
test
jge
mov
ret
and
ja
xor
shrl
insb
mov
lret
lea
mov
shlb
sbb
mov
aam
sub
out
add
push
rcl
mov
fs
or
jmp
jp
mov
xchg
shrb
in
adc
add
popf
iret
fstp
adcl
sub
sbb
sbb
scas
jbe
jmp
dec
or
pop
fcmovnu
pop
mov
jae
cmp
dec
mov
push
icebp
xor
ss
dec
fldenv
inc
inc
lret
adc
mov
fldt
push
ljmp
insb
xor
mov
pop
popf
mov
sbb
inc
gs
fldl2t
pop
rcrl
shlb
cmp
sub
jbe
mov
ret
sbb
mov
dec
xchg
or
in
inc
mov
mov
cmp
jp
pop
pop
shrl
sahf
jns
or
leave
popa
mov
ret
rcr
sahf
notb
hlt
aad
je
shl
mov
sti
mov
out
xchg
and
push
mov
fwait
mov
xchg
adc
dec
lahf
sub
call
sbb
xchg
or
jbe
adc
hlt
pop
mov
mov
test
je
sub
scas
inc
mov
test
mov
in
cmp
dec
mov
cmp
sahf
pop
xor
push
cmp
icebp
sti
push
dec
imul
pop
icebp
insb
mov
rorb
inc
sub
rcr
add
jae
icebp
es
push
mov
lds
aaa
dec
xchg
test
jnp
into
mov
movsb
jae
jg
aaa
mov
or
popa
test
aam
aas
lret
fdiv
mov
pop
ret
insb
aas
pop
or
fcom
mov
lods
xchg
testb
fsubs
inc
sub
fldl
xor
push
sbbb
adc
jmp
mov
mov
in
lret
xchg
lods
ret
jns
xor
adc
mov
sti
mov
adc
mov
out
xchg
shlb
sar
test
cmp
xor
roll
popf
sub
sub
or
ret
aam
and
iret
dec
cmpsl
xor
and
stc
outsb
mov
jo
xchg
mov
sbb
pop
int
test
shl
ficoml
cmp
ret
aad
push
cld
sahf
dec
mov
jg
shrl
mov
mov
movl
and
cs
mov
jne,pn
or
call
push
mov
adc
ficomps
push
nop
aaa
mov
jbe
push
xor
xor
cmovle
gs
fnstcw
in
hlt
jnp
push
or
sti
insb
sbb
jle
pop
pop
lds
aas
pop
mov
mov
sbb
xor
xor
mov
test
test
loope
sbb
std
jl
xchg
xchg
aad
mov
add
push
jb
pop
in
push
dec
repz
push
fsubl
inc
lcall
jns
in
lods
loope
dec
lds
stos
stos
pop
or
inc
push
fisttpl
pusha
jle
scas
hlt
movsl
scas
insl
and
outsb
out
aam
insl
es
shrl
int3
and
jle
xchg
jnp
mov
aaa
pop
arpl
insb
test
jmp
mov
aas
sbb
lds
adc
or
xchg
xchg
in
xor
movsl
mov
mov
fsubrl
mov
mov
mov
sub
jno
movsb
rcrb
pop
outsb
cmc
xchg
xchg
cltd
add
mov
add
sub
mov
fwait
inc
into
je
fisubrl
fwait
aad
mov
mov
jno
leave
dec
jmp
sti
mov
bound
mov
inc
pop
or
and
sub
test
out
mov
or
mov
js
dec
or
pop
jl
mov
inc
jns
mov
cli
pop
sbb
fadds
leave
lret
aad
dec
jo
jbe
mov
dec
arpl
and
add
cli
xor
mov
or
inc
mov
mov
cli
sub
and
movsb
dec
ss
sar
push
fsub
xor
mull
leave
mov
sub
push
sbb
jle
aaa
dec
call
mov
lahf
jl
pop
hlt
mov
mov
xlat
mov
in
das
imul
lods
push
mov
divl
icebp
sbb
push
aam
xchg
mov
in
aas
mov
jbe
xchg
sbb
ds
cwtl
cmp
test
js
xor
mov
pop
nop
aas
les
push
push
push
mov
cld
in
push
sahf
or
aam
or
xor
mov
dec
fiadds
fisttps
push
pop
push
ss
push
out
inc
cmp
aaa
out
sbb
mov
xchg
mov
cmp
jecxz
pop
and
xchg
push
cmp
lcall
adc
inc
pop
sbb
xchg
jg
sbbl
mov
fdivrl
pop
cmp
enter
test
pop
jno
js
sbb
pop
xchg
les
addr16
mov
adc
aad
addb
stos
test
or
dec
ljmp
mov
jno
rorb
mov
or
jmp
sbb
sbb
test
or
mov
sub
pop
jl
mov
mov
adc
insl
loopne
loop
pop
ret
xor
dec
cmp
gs
cmp
fcmovu
scas
push
aam
lahf
ret
scas
mov
enter
sbb
test
ret
adc
outsl
scas
mov
sbbb
jo
lods
shlb
xchg
xchg
mov
outsl
mov
pop
add
jp,pn
cmpl
push
cmpsb
addr16
jne
fisttps
sub
dec
push
xchg
jl
and
mov
inc
outsb
mov
pop
pop
loop
cmc
xchg
hlt
mov
mov
fidivs
lea
inc
pop
xchg
fisubs
jmp
mov
and
lods
xor
xchg
push
testl
inc
xchg
mov
adc
idivb
sbb
popf
push
out
push
into
push
mov
addr16
mov
mov
mov
mov
js
push
sbb
and
dec
push
push
outsl
sub
shrb
cmc
sub
jp
xlat
jbe
test
test
push
inc
pushf
gs
xchg
pmuludq
loopne
leave
inc
add
mov
and
repnz
in
rcrb
rorl
sbb
jmp
xor
mov
je
mov
testl
inc
pop
sub
rcll
jbe
xor
or
and
ja
movsl
pop
les
outsl
insl
inc
fnsave
mov
fildll
xor
aas
aaa
aam
ja
in
into
imul
jmp
and
and
sub
in
cs
mov
pop
in
scas
mov
jne
mov
in
into
adc
in
or
insl
out
push
test
mov
cmpsl
sub
xchg
btr
xchg
ret
mov
leave
aaa
dec
daa
sub
arpl
test
push
imul
add
mov
scas
push
fmulp
int3
push
dec
aas
filds
lods
icebp
jp
movsb
and
loopne
sbb
pop
mov
jg
insl
mov
dec
jmp
pop
push
jne
pop
cli
mov
lods
jle
add
push
or
dec
icebp
les
and
lds
leave
in
rol
push
xor
cmp
xchg
push
cmp
rorl
mov
stc
pop
call
xchg
adc
cmpsb
ds
cmc
pop
xchg
repz
jp
ds
nop
mov
lods
lcall
pop
pushf
cmp
mov
arpl
sub
or
mov
xchg
adc
scas
push
mov
and
outsb
push
sahf
in
cmc
lods
fs
lcall
cmp
push
btc
cmp
xor
roll
push
out
cmp
jl
mov
flds
addr16
cwtl
daa
mov
push
xor
jb
xor
scas
stc
and
rcrb
out
fnstenv
mov
dec
mov
jmp
cltd
enter
ret
test
sub
add
lea
clc
in
push
enter
pop
jb
pop
jb
repz
cmc
jb
clc
ljmp
mov
aad
enter
cmpsl
jl
sti
in
mov
mov
pop
fsqrt
in
mov
adc
or
inc
mov
fwait
int3
lret
sti
or
adc
aaa
ficomps
pop
pop
int
adc
adc
lds
lcall
pushf
ret
sbb
fbstp
mov
fs
or
dec
fidivs
insb
aaa
mov
mov
ror
lret
jbe
mov
sbb
faddl
nop
out
movsl
stc
dec
and
out
imul
inc
in
mov
dec
test
fiadds
or
cs
std
dec
xor
xor
mov
aas
addr16
sub
arpl
push
cltd
cmpsb
jp
gs
pop
test
xor
mov
xor
sub
mov
dec
sbb
or
dec
das
das
aam
inc
push
jecxz
adc
sar
jmp
pop
in
push
mov
or
jae
sub
inc
out
xchg
pop
ss
fwait
out
inc
insb
add
xchg
mov
push
daa
mov
aad
inc
shll
add
lds
dec
inc
mov
in
pushl
repz
fwait
pop
xchg
mov
pop
imul
scas
gs
orl
add
mov
ljmp
sbb
daa
shrl
mov
dec
dec
test
bound
sub
xor
jmp
in
add
popl
mov
mov
inc
scas
repz
push
addr16
jnp
adc
jge
stos
scas
push
xor
mov
pop
sub
ja
mov
test
mov
adc
xor
pushf
jl
test
enter
enter
out
aad
xor
rcrl
out
dec
xor
or
inc
mov
inc
dec
xchg
inc
rolb
ds
cmp
in
xor
xchg
sbb
mov
imull
lea
mov
jno
gs
dec
push
addr16
or
mov
fcoms
xor
pop
xchg
or
or
lahf
ret
les
in
stos
or
repz
mov
pop
jl
loope
ja
sbb
mov
push
cmc
push
orl
sbb
ja
fildl
out
inc
jb
les
ret
and
fmuls
cs
jp
push
or
pop
xchg
add
mov
lret
lods
or
jl
cmp
or
push
cmp
xchg
xchg
inc
jb
loop
adc
cmp
sub
push
mov
mov
loop
call
push
jbe
out
iret
add
ror
lahf
sbb
inc
or
cld
pusha
jbe
pop
push
stc
sar
in
jb
fldt
fldl
cmp
popf
out
stc
ret
lods
push
fisttpll
and
jl
mov
cmp
and
sub
mov
sub
cmp
inc
scas
fbld
jmp
adc
adc
or
jae
pop
xchg
push
pop
sub
xor
jns
hlt
mov
rcr
mov
nop
int
pop
popa
test
enter
xchg
mov
sbb
cmpl
inc
test
cli
push
lret
cmpsb
xor
push
pminsw
pop
jbe
xlat
mov
mov
mov
and
fsubr
adc
aam
fcoml
mov
mov
xor
pusha
jnp
mov
pop
pop
push
push
stc
insl
pop
sub
xor
fsubrs
out
push
sti
test
mov
jge
flds
sbb
leave
jge
push
adc
jge
int3
pop
xlat
sbb
jne
jmp
jnp
jle
loopne
std
ljmp
cmovp
dec
mov
ror
and
dec
pushf
dec
pop
cmp
orl
cmpsl
adc
jecxz
test
ret
imul
mov
xor
movsb
movsl
inc
or
dec
jge
mov
jecxz
repz
sbb
andb
mov
xchg
dec
push
mov
in
fisubl
stos
inc
pop
in
mov
push
roll
push
mov
mov
push
cld
xchg
call
scas
roll
ljmp
sub
sbb
xchg
lods
inc
in
lock
sub
scas
cld
cmp
das
push
xchg
repz
cmp
jl
mov
sbb
cmp
inc
scas
xor
js
cmp
insb
xor
xchg
ds
mov
push
fstpl
jae
outsb
lret
xlat
sbb
lcall
cmpsb
sbb
sarl
mov
jle
mov
lock
and
loopne
aas
or
enter
sbb
inc
sub
mov
adc
enter
popa
add
cmc
ljmp
outsl
aam
mov
adc
push
fldenv
xor
inc
clc
imul
iret
inc
dec
and
add
cli
mov
xor
inc
push
in
hlt
mov
into
and
or
cmp
mov
fmul
lcall
xchg
sub
aas
and
xchg
sbb
daa
mov
add
pushw
movsb
inc
cmpsl
and
rcrb
ret
push
xor
or
call
cs
add
lea
xor
cltd
mov
rorl
std
xor
in
mov
sahf
in
dec
mov
int3
add
mov
pop
aas
lock
ret
add
bound
cltd
dec
add
or
push
mov
frstpm(287
and
inc
rcrl
sub
lods
push
xor
rep
mov
int3
xchg
jmp
pop
sti
jge
mov
repnz
sarl
push
sahf
movsl
cmp
xor
out
and
hlt
out
push
fsubs
mov
mov
pop
fs
push
push
cmp
dec
iret
loope
aaa
sub
adc
fwait
jno
orb
jno
pusha
push
int3
push
or
pushf
sbb
mov
rcrl
rcll
leave
push
cmp
push
fists
jnp
xchg
inc
xchg
scas
jo
xor
shlb
decl
xchg
adc
dec
xor
jnp
add
xor
call
and
inc
int3
arpl
xchg
push
jnp
pop
addb
movsl
fisttps
mov
mov
out
jo
mov
xchg
fdivrs
push
mov
cmp
lahf
aad
lret
sarl
add
mov
in
imul
push
xchg
jecxz
out
sti
arpl
scas
scas
dec
out
push
loopne
jnp
add
mov
mov
ljmp
xorl
add
push
paddsb
test
xchg
push
scas
aam
or
xchg
sub
loopne
shrb
insl
cmpsb
fstl
cmp
jae
xchg
mov
sbb
rolb
in
addr16
mov
fs
fcoml
mov
jne
and
sub
cmp
das
movsl
popa
in
movsl
mov
cld
test
imul
dec
shll
or
sti
ror
mov
sub
xchg
fnstcw
pop
sbb
xor
ja
mov
pusha
dec
scas
fsubr
cmp
xor
ja
push
sbb
pop
adc
ret
cmp
push
outsb
xchg
imul
adc
aas
add
movl
inc
push
decl
jp
stos
xchg
mov
sahf
push
ret
or
and
int
push
xchg
cmp
pop
fcmovne
aas
outsb
lret
aas
cltd
add
jno
or
aad
jle
ret
test
add
jle
insb
and
out
aad
outsl
icebp
in
sub
cmpsl
dec
cmc
cmc
push
mov
cmp
adc
dec
jnp
add
cmpsb
add
push
std
mov
adc
pop
and
dec
xchg
enter
daa
mov
adc
xchg
insl
cld
out
imul
ds
push
pop
loop
push
push
cs
cmpsl
lods
arpl
add
lcall
mov
or
pop
leave
stc
pop
mov
push
push
sub
push
fsub
ja,pn
pop
cltd
pop
inc
outsb
data16
lret
loopne
adc
and
xchg
or
jp
loopne
dec
nop
or
and
jg
iret
pop
xchg
dec
lahf
scas
cltd
ja
push
shrl
lods
xorl
out
mov
mov
jp
jo
scas
push
push
xor
xor
lock
icebp
rclb
inc
enter
loop
push
pop
aaa
insb
or
mov
fidivrs
jno
adcb
stc
out
sub
push
fmuls
or
mov
jp
push
cmp
shll
rcrb
dec
fsts
or
jmp
jb
add
in
aaa
sbb
jno
shr
pop
mov
fiaddl
aad
retw
insl
cmc
in
xor
mov
adc
into
andb
jp
mov
dec
mov
inc
subl
inc
in
pop
call
bound
mov
test
leave
mov
dec
inc
enter
iret
fstpt
sbb
cli
or
mov
and
jnp
and
popa
mov
movsb
mov
into
mov
add
cld
test
sub
jg
sbb
pusha
push
dec
sbb
out
cmpsb
test
je
das
adc
mov
lret
scas
daa
in
fwait
push
xor
ljmp
jecxz
xchg
push
inc
jne
xchg
mov
cmpsb
rcrb
push
inc
sub
mov
nop
xchg
adc
mov
xchg
adc
pop
sub
and
stc
mov
jne
pop
into
inc
or
push
pop
repz
jg
mov
mov
pop
insb
jp
stc
out
dec
and
adc
loopne
es
mov
mov
in
jae
push
js,pt
ret
das
lcall
test
inc
dec
cmp
push
imul
jae
fldt
je
and
stos
mov
sbb
pop
pushf
jmp
adcl
clc
std
mov
aam
jl
dec
or
xchg
adc
ret
stc
pop
sbb
push
sarl
add
ret
and
push
out
push
lock
push
test
leave
push
sbb
xchg
mov
out
inc
orl
mov
je
call
popa
jmp
or
xor
xchg
jecxz
fmuls
pusha
sub
lock
inc
pop
nop
rcl
lahf
cmp
lcall
push
xchg
test
rolb
stos
xor
xorl
and
mov
insb
cld
sbb
test
divl
jp
ja
stos
xchg
out
xchg
hlt
lahf
rorl
pop
cwtl
jg
jge
das
jns
test
imull
pop
leave
xlat
fs
mov
cmc
cmp
loop
rcll
push
shrl
cmp
xchg
or
test
arpl
mov
outsb
sbb
push
inc
jp
flds
fsubrs
std
adc
dec
push
fdivrl
dec
mov
pop
push
add
js
pop
adc
mov
mov
jno
rcrl
sarb
mov
push
icebp
push
or
xlat
sbb
push
or
adc
mov
pop
push
ret
dec
lods
pop
or
ja
call
in
add
jp
mov
gs
add
aas
lahf
push
mov
push
push
outsl
jne
movsb
jle
pop
or
fs
and
fsub
inc
jae
fchs
add
sbb
jmp
jbe
add
mov
dec
lcall
cmp
push
cmpl
stos
sub
into
jns
jne
hlt
mov
mov
ljmp
xor
mov
xor
and
xchg
push
stos
xchg
and
nop
pop
add
mov
mov
inc
mov
cmp
xlat
gs
pop
pop
sahf
into
push
aad
inc
jno
stc
les
sti
leave
mov
inc
pop
mov
pop
jae
adc
sar
mov
or
popa
lock
push
inc
mov
inc
aam
xchg
popf
divb
repnz
stc
adc
gs
cli
pop
mov
sbb
xchg
push
ret
rol
mov
shlb
scas
rcll
les
in
adc
push
fcmovnbe
sbbb
gs
cmp
inc
pop
outsl
and
stos
push
xchg
xchg
pop
test
mov
enter
push
mov
xchg
aam
dec
dec
movsl
sub
fwait
jo
sub
inc
dec
or
mov
js
jl
stos
xchg
es
nop
xchg
and
aaa
jbe
jg
into
push
jmp
mov
xchg
ds
add
mov
dec
fildl
sbb
xor
scas
pop
add
je
ret
add
xor
pop
popa
sub
outsl
mov
sub
stos
ljmp
adcb
adc
repnz
out
add
xchg
xchg
add
sub
repz
mov
mov
nop
pop
call
in
mov
iret
fnstenv
jecxz
mov
roll
arpl
jne
mov
pushl
or
mov
jle
sub
inc
shl
dec
cs
outsl
sub
adc
scas
mov
dec
pop
inc
data16
adc
sbb
aad
mov
repz
inc
pop
mov
lods
jbe
sub
ja
mov
push
mov
mull
pop
xchg
leave
inc
outsl
cmpsl
aad
das
xchg
cmc
sbb
ret
sub
jb
lret
inc
daa
push
jp
pushf
loopne
shr
mov
pop
or
sbb
mov
and
cmp
outsl
sub
sbb
xchg
jg
sub
cmc
xchg
push
les
nop
jg
cmp
leave
mull
cli
or
push
incb
mov
adc
adc
dec
inc
mov
mov
mov
loopne
xor
repz
ja
loopne
add
cwtl
push
sbbb
push
lcall
pushf
sbb
bndldx
sub
or
sub
mov
ds
add
sahf
fcomps
sub
fsubrl
outsl
iret
lods
mov
jp
dec
push
mov
pop
aad
loopne
inc
scas
mov
lds
popa
dec
pusha
pusha
push
xor
nop
jbe
fs
mov
lods
lret
pop
sarb
xchg
push
jb
push
and
aas
lea
dec
inc
cmpl
aaa
add
ret
dec
inc
xchg
lret
ss
xor
mov
lahf
add
xor
inc
jbe
push
jae
sti
pop
lcall
dec
mov
mov
adc
scas
imul
xchg
add
out
shrl
pusha
lea
pushf
add
movsl
aad
push
mov
fs
inc
in
xchg
mov
jg
mov
movsl
scas
ja
jl
pop
imul
aam
aaa
decb
test
sbbb
inc
es
jmp
cld
sbb
mov
inc
xor
xor
dec
shll
mov
push
in
popa
push
aad
popa
push
inc
push
jo
sbb
xor
addr16
push
dec
fwait
int3
cmpsb
testl
ds
mov
inc
std
xor
add
aad
dec
pop
test
aam
mov
sahf
pushf
mov
or
scas
inc
loopne
dec
js
rclb
fidivrs
adc
ret
pop
inc
mov
lods
lsl
movsb
fldenv
notb
daa
test
call
or
fsubp
push
mov
mov
int3
daa
clc
aad
cmp
xor
je
sti
jbe
add
jns
stc
adc
shll
and
cmpsl
and
jnp
sub
es
inc
movsl
xor
xchg
push
sbb
sbb
cmp
repz
add
mov
mov
adc
or
daa
lock
adc
dec
int3
fcomi
inc
lods
mov
cmc
cmp
stos
std
popa
daa
sbb
jnp
xor
xor
and
subl
add
cmpsb
in
adc
pop
add
loop
mov
sub
test
jne
jl
lahf
xchg
sub
mov
pop
mov
xor
inc
lock
test
pop
jne
addr16
xchg
sub
test
push
add
or
inc
sbb
cltd
cmp
mov
andl
mov
jbe
adc
xlat
sbb
lret
inc
popa
xchg
int
sub
cmp
add
lea
jb
lods
jl
xchg
push
sub
sti
call
mov
into
mov
jl
and
sub
xlat
mov
xlat
sbbl
mov
roll
aas
pop
push
dec
es
addr16
aad
lahf
xchg
pusha
pop
popa
pusha
mov
jb
mov
push
pusha
lahf
cs
stc
call
test
jmp
stos
and
mov
js
outsb
int3
jmp
jge
sahf
lock
adc
in
adc
and
pop
mov
sub
jecxz
inc
sub
dec
bound
adc
xchg
dec
and
or
dec
mov
mul
arpl
rclb
mov
icebp
ljmp
mov
push
lcall
sub
sbb
push
add
push
jno
dec
xchg
sbbb
dec
inc
fcmove
mov
or
inc
cwtl
or
leave
rcrl
test
pop
icebp
popa
lahf
add
test
pop
mov
xor
jnp
lret
sbb
stc
in
int
jle
lock
icebp
xor
sti
outsb
inc
and
mov
dec
ljmp
and
sbb
mov
mov
sub
adcl
pusha
nop
dec
sub
cmp
push
lds
insb
es
aam
dec
fdivrl
ret
fistpll
cwtl
test
and
sbb
into
aaa
aad
lods
push
hlt
jl
add
sti
mov
push
lods
arpl
call
mov
icebp
popa
movsb
adc
out
push
push
repnz
popf
sub
push
adc
dec
dec
adc
fsubr
clc
add
cmpsl
xor
push
clc
mov
cmp
sbb
pop
js
or
adc
mov
lods
push
sbb
test
xchg
lods
movsb
cld
cmp
dec
lea
jl
or
fiaddl
jns
jp
pop
push
data16
jle
lods
rorl
jp
or
pop
loope
cmc
sbb
shlb
sub
lds
call
shll
adc
lods
cwtl
jnp
div
in
lods
mov
out
cli
insb
mov
repz
adc
mov
push
mov
aaa
fcompl
or
jns
mov
dec
mov
in
sbb
xchg
push
and
pushf
rorl
xor
or
cmp
jg
xor
mov
xchg
out
cmpsl
int3
test
movsb
pop
repz
cmpsl
popf
lods
adc
pusha
imul
fwait
inc
inc
out
repz
movsl
lds
xlat
fisttpl
sub
adc
outsb
pop
out
xchg
sub
movsb
sbb
dec
jae
sahf
hlt
orb
clc
or
sbb
lea
jnp
rolb
xchg
jecxz
sub
inc
mov
and
gs
test
dec
cmp
push
outsl
jae
push
fs
cwtl
dec
sarb
mov
xchg
mov
es
mov
adc
dec
dec
add
movsb
in
push
bound
sti
and
pop
jmp
cmp
sub
idivb
fsubp
je
jmp
fstpl
jmp
flds
inc
aas
pop
adcl
mov
mov
push
ss
mov
popf
ss
ss
icebp
pop
jl
jle
cmpsb
popf
inc
sar
push
jae
sbb
outsb
jecxz
and
pop
mov
testb
ds
pop
cwtl
or
push
es
fs
inc
outsl
loope
mov
mov
addr16
int
xlat
fldt
fstp
xor
dec
out
fildl
xchg
cmp
sbb
dec
out
stc
in
inc
lahf
xor
stos
or
pusha
scas
jmp
repnz
scas
inc
dec
lea
adc
out
lcall
push
pop
inc
push
xor
add
in
stos
pop
pop
xchg
jl
dec
in
popf
aaa
sbb
mov
loop
inc
xlat
sub
dec
sbb
push
mov
in
shr
mov
add
adc
scas
mov
gs
ficomps
rclb
loopne
ss
fdivp
xchg
add
movsl
mov
cs
mov
out
push
repnz
add
in
into
les
andl
cmc
dec
mov
mov
js
les
pop
jg
cld
insl
dec
pop
call
gs
addb
fcmove
fs
test
mov
cmpsl
ret
andb
push
dec
pop
mov
xor
cmpsl
cwtl
cmp
insb
or
xor
nop
add
add
cs
pop
outsl
insb
add
arpl
popw
mov
or
and
cmpl
pop
stos
aad
and
cmc
gs
scas
iret
fisttps
mov
dec
stos
mov
cwtl
push
lock
mov
push
lahf
imul
jmp
das
ficompl
sbb
lahf
pop
fwait
pop
arpl
jecxz
outsb
stos
and
sub
cmc
adc
enter
sub
fs
lret
inc
std
pushf
cltd
adc
and
shll
push
fcmovnu
in
mov
cwtl
mov
xlat
aad
dec
or
push
in
mov
stos
insb
jge
add
fs
jg
orb
les
jno
lret
imul
lds
movsl
mov
pop
fbstp
std
lcall
test
jecxz
or
into
and
push
ja
xchg
xchg
push
int3
inc
insl
sub
lcall
and
iret
dec
push
call
inc
xchg
fisttpll
or
dec
sub
dec
pop
xor
jo
cmp
sbb
lahf
repz
push
xor
clc
aam
mov
sahf
pop
pop
pushl
pop
cmp
or
test
add
mov
add
pop
fmul
mov
loop
xchg
mov
jae
xchg
pop
pushf
je
xor
xchg
xchg
pop
and
jl
adc
cmpb
scas
sbb
pop
mov
cmpb
jnp
fisubl
pop
add
lcall
sbb
mov
adc
mov
mov
dec
aad
xor
pop
cmpsb
adcl
mov
test
sahf
mov
ret
jne
cs
mov
scas
mov
dec
and
pop
in
repnz
fimuls
outsb
mov
xchg
dec
or
push
adc
leave
stos
pop
fisttpl
xlat
out
cmc
sub
dec
pop
data16
stos
mov
mov
test
sbb
push
sbb
sub
pushf
mov
xchg
imul
push
sbb
jns
push
sbb
outsl
call
iret
rcr
add
aaa
jae
mov
push
mov
inc
sbb
fmul
push
push
or
into
loopne
insl
cld
adc
mov
xchg
mov
mov
iret
cld
dec
xchg
imul
les
mov
setae
fwait
push
cmovb
aad
xor
mov
add
pop
into
mov
mov
outsl
adc
ficompl
leave
into
push
mov
add
imul
ret
pop
push
jecxz
cltd
loopne
popf
fwait
jae
sbb
clc
ljmp
sbb
outsb
mov
add
mov
add
out
add
pop
sbb
cs
sbb
mov
sbb
rcrl
incl
addr16
inc
cli
mov
and
ljmp
daa
repnz
pusha
mov
orb
push
xor
mov
mov
lds
push
add
dec
mov
lret
jne
cmp
mov
sbb
sbb
xorl
sbbb
dec
mov
mov
sar
addr16
sbb
fdecstp
mov
inc
fmuls
shrb
and
mov
inc
pop
dec
xchg
ret
xor
arpl
mov
rorl
xchg
dec
rclb
jl
dec
icebp
pop
ret
xchg
movsl
or
scas
mov
xchg
sub
fsubl
inc
aad
popa
out
xchg
cmc
lahf
jg
scas
mov
or
and
gs
ret
mov
cmp
in
cli
scas
hlt
jae
jbe
push
xchg
or
add
rol
add
add
mov
test
test
lods
cmpb
in
cmp
push
decl
push
lret
test
shlb
insb
roll
into
notl
push
es
inc
mov
mov
rolb
andl
daa
int3
mov
test
lret
lods
lock
cmp
mov
lret
std
fisubrs
pop
add
push
sub
es
in
cmp
sti
xlat
jl
dec
stos
sbb
js
mov
ret
push
dec
icebp
lcall
in
add
mov
frstor
out
add
das
out
xchg
dec
add
push
xchg
jo
sub
xchg
lcall
sub
jp
xchg
dec
scas
ficoml
std
jmp
cmp
jnp
insl
sub
call
mov
mov
xchg
adc
push
ret
outsb
push
mov
imul
and
and
setle
out
mov
push
xor
add
or
insl
push
sub
in
mov
jbe
and
int
bound
jmp
pushf
cmpxchg
rcrl
movsb
and
repnz
cli
lret
lods
pop
dec
daa
sub
lahf
sub
mov
scas
orb
fnstcw
lock
rol
int3
jge
pusha
enter
push
adc
add
sbb
and
lret
leave
mov
lods
push
push
fldl
outsl
push
cmp
push
and
ss
xchg
cmc
hlt
lods
pop
mov
sti
jmp
out
mov
cld
xor
add
lea
cmpsb
sbb
cmp
out
into
jg
inc
sbb
sub
std
cmp
in
loope
nop
cmpb
jo
xor
leave
push
push
imul
faddl
sahf
fmul
ficoms
jle
loop
pop
mov
cld
cmp
ss
dec
inc
scas
test
roll
push
pushf
mov
repz
arpl
sbb
pop
int
cmp
add
mov
adc
cltd
sbb
cwtl
je
divb
adc
fsub
dec
ja
ret
jbe
and
outsb
ret
pop
xor
dec
xor
rol
mull
sub
pop
outsl
fsubrs
out
pushf
lahf
push
and
sbb
ja
ss
sti
dec
sub
dec
adc
pop
fs
sarl
in
repnz
fcomps
fnsave
mov
and
shrl
fucomi
movsb
push
mov
loopne
dec
ret
pop
popa
sbb
cmp
mov
movsb
or
mov
int3
cmp
clc
cmpsl
mov
pop
into
subb
xor
dec
pushf
push
aam
roll
mov
inc
sti
lock
mov
jle
jle
mov
fldcw
xchg
mov
addr16
fisttpl
lret
xchg
sarl
inc
mov
sarb
push
outsb
xor
into
enter
iret
mov
add
sub
fcmovnbe
xor
imul
sbb
xchg
and
popa
dec
cltd
inc
inc
es
pop
sub
fcompl
xor
cmpsl
insl
sbb
or
mov
pop
sbb
movsb
push
gs
sub
and
out
mov
popf
xor
shll
cmpsl
lret
pusha
inc
mov
mov
adc
xor
xchg
push
or
pop
ret
test
adcb
out
and
xorb
dec
add
imul
mov
mov
hlt
cmp
jnp
ljmp
sbb
mov
out
shrd
adc
out
dec
dec
mov
add
xchg
aad
push
imul
fcomi
stos
orl
sarb
xlat
mov
les
ficompl
sub
xor
push
mov
adc
xlat
xchg
movsl
dec
pop
push
ffree
outsl
sub
pop
aaa
dec
int
sub
dec
lret
loop
imul
rcll
stos
inc
and
inc
mov
fucom
movsb
pop
mov
push
jmp
and
outsl
cs
adc
insb
stos
mov
hlt
ror
cmpsl
pop
je
iret
push
sbb
aaa
negb
stos
and
dec
xchg
and
mov
lods
xlat
jecxz
leave
jno
xchg
mov
movsl
outsb
mov
addb
mov
adc
push
jae
pop
shll
rcrb
das
lcall
xchg
pcmpeqd
pop
movsl
sub
in
imul
mov
lock
fdivl
adc
cpuid
ljmp
xchg
xor
ljmp
nop
fidivs
adc
push
adc
addr16
pop
lahf
dec
add
sti
test
arpl
add
xor
das
jae
sub
sbb
ljmp
cmpsb
fld
jnp
and
mov
in
mov
add
hlt
add
mov
cld
adc
xchg
addr16
mov
jbe
fwait
sbb
out
xor
or
mov
adc
cmp
cld
loopne
in
inc
out
imul
shrb
je
gs
les
fcoml
test
xor
adc
sub
sbb
out
lds
out
push
jp
testl
clc
sahf
add
and
cmpsl
sar
inc
movsl
das
dec
mov
outsb
aaa
test
out
dec
enter
rcll
mov
xchg
lods
aas
in
dec
rcll
adc
orl
scas
or
notl
pop
mov
dec
rorb
jns
pop
sub
mov
push
inc
xlat
dec
and
sti
sub
idiv
popf
push
adc
iret
mov
addb
pop
into
rolb
and
arpl
in
pop
jne
ljmp
subb
xchg
sub
in
test
mov
jmp
stos
adc
mov
xor
cmp
loop
repnz
jnp
mov
sub
mov
int
int3
cmpsb
or
fpatan
jns
or
add
cmp
mov
ljmp
mov
aaa
pop
add
sub
push
in
sar
adc
mov
mov
push
subb
jl
jmp
mov
push
mov
repnz
push
xchg
pop
cmp
sub
jb
repz
faddp
dec
cmpsl
lret
mov
out
mov
xchg
adc
es
push
push
movsb
sub
popf
sbb
jae
in
inc
and
pop
lahf
ret
push
loopne
push
cmp
inc
xor
out
xor
mov
pushf
out
cmpsl
in
rolb
mov
or
sbb
inc
cwtl
sbb
fwait
mov
and
cmp
cwtl
js
push
pusha
sub
mov
sbb
shlb
dec
add
and
shll
mov
mov
jno
xchg
sbb
rorl
pop
jae
imul
jns
es
mov
mov
jg
sub
sbbl
sub
pushf
mov
mov
out
jp
mov
es
add
lea
ficoms
jb
jb
mov
dec
add
push
jmp
ficompl
inc
cmp
cmpsl
int3
add
mov
hlt
xchg
out
out
lahf
adc
les
pop
pop
shr
outsb
xchg
das
dec
sarl
inc
repz
mov
xlat
cmp
stos
imul
xor
inc
into
sbb
xchg
mov
jl
insb
ss
cli
inc
fsubl
adc
pop
push
aam
lret
pusha
bound
shr
andb
mov
push
push
xor
out
mov
pop
push
sbb
andl
fwait
xor
daa
mov
in
fdiv
imul
mov
mov
mov
icebp
sbb
lret
inc
hlt
es
xor
push
lods
arpl
xchg
xor
mov
adc
pop
pop
push
mov
mov
je
pop
jecxz
test
rolb
and
insl
xlat
or
xchg
imul
int
enter
repnz
and
movsb
cs
pop
xchg
jg
pop
andb
mov
mov
cmpsb
sbb
insb
mov
hlt
into
add
xchg
ffree
cmp
pop
cmp
jno
fcompl
and
mov
pop
into
sub
push
ficoms
mov
ljmp
icebp
pop
jp
pop
stc
xchg
call
inc
lret
mov
or
cmp
jnp
test
jmp
pop
sar
imul
cmp
hlt
movsl
jnp
aam
adc
push
sbb
loope
jne
stos
jo
lods
lods
sub
adc
xor
stos
mov
shlb
fstpl
sub
lea
cs
add
mov
test
ds
jmp
imulb
add
hlt
lods
pop
cwtl
cmp
into
fwait
lcall
push
sbbl
jl
mov
cmp
jae
mov
push
or
add
jle
lahf
stos
jo
jp
fwait
ds
jns
loopne
pusha
dec
or
cmp
xor
stos
mov
loopne
iret
lea
pop
mov
jbe
lret
push
repz
push
je
push
andb
jns
mov
mov
popa
faddl
jb
negl
outsl
xor
xor
inc
push
add
jae
jae
xchg
push
and
xor
incl
sahf
jmp
int3
jb
mov
cmc
aad
or
dec
cmp
pop
xor
lret
jl
mov
dec
jmp
push
mov
filds
push
mov
test
mov
mov
and
lea
iret
dec
pop
jne
fcmove
rcrl
inc
ds
dec
ret
jge
cmp
insb
mov
hlt
adc
iret
into
fwait
jne
pusha
lea
jle
adc
xchg
stc
push
or
xchg
cmpsb
roll
out
leave
out
mov
pop
rcl
jmp
lret
roll
lret
jl
mov
push
adc
dec
into
mov
mov
lds
stos
add
aas
cmp
fwait
cmp
pop
addr16
adc
jb
mov
inc
adc
idivl
imul
cli
cld
jle
pop
mov
stos
jle
les
fisttps
popa
ret
or
pushf
or
mov
cmp
ret
repnz
repz
call
fidivl
sbb
jno
xlat
pop
stos
fwait
test
das
mov
pop
mov
enter
jnp
adc
fsts
mov
mov
stos
call
je
inc
lods
sti
aam
imul
jae
les
jmp
inc
fs
mov
xchg
fdivp
adc
mov
jmp
cld
in
das
mov
sub
pop
leave
testb
pop
inc
jecxz
out
int
bound
push
fwait
rorl
sub
int3
lret
test
out
push
nop
or
subl
in
xchg
insl
test
cmpsb
fld1
inc
add
dec
lret
jp
stc
xchg
push
add
loop
push
dec
scas
jge
inc
daa
jmp
inc
cmpsl
lahf
adcb
mov
dec
pop
sbb
and
pop
out
jecxz
shrb
out
mov
xchg
popl
jne
cmp
xor
ljmp
xor
and
mov
sti
inc
test
fisubrl
sbb
mov
lret
jp
enter
dec
dec
pop
loop
hlt
stos
or
xchg
testl
aam
and
jbe
into
push
imul
mov
in
inc
repnz
inc
loop
data16
packssdw
test
pop
dec
test
cmp
sti
inc
popa
cltd
sti
aad
adc
pop
adc
lods
push
leave
mov
js
ret
ret
sbb
mov
ret
es
mov
sub
sub
xchg
scas
ficoms
adc
in
xchg
push
push
cmpb
rcrb
test
cmp
cld
test
inc
sahf
pop
dec
sahf
icebp
popa
test
inc
mov
stc
test
jnp
cmp
test
cmp
notl
jbe
stos
js
jb
push
enter
pop
cwtl
fs
cli
xorb
imul
pop
lea
aad
pop
inc
daa
jmp
cs
xlat
scas
mov
shlb
lret
test
les
out
push
push
push
jecxz
imul
push
ljmp
fs
xchg
adc
out
xlat
aam
cmp
fwait
or
sbb
cmp
fwait
rcrl
shll
cld
testb
push
adc
lock
aaa
push
xchg
call
push
pop
jae
xchg
and
xchg
iret
push
adc
rcrb
cmpsl
cli
sarb
rcrb
repz
xchg
jae
mov
lret
in
cmp
push
push
adc
iret
sbb
and
fdivrs
push
mov
mov
call
cltd
push
cmp
aad
test
cmp
pusha
adc
sub
fwait
movsl
in
sbb
fwait
cmpsb
out
sub
int3
add
and
std
stc
popa
mov
push
ljmp
imul
sub
dec
push
fidivrs
dec
fxch
scas
imul
je
fcomip
shlb
jmp
in
aad
adc
je
lret
lret
mov
mov
adc
call
add
cmpsb
sbb
popf
testb
xlat
in
dec
fdivl
out
cmp
push
or
push
pop
out
or
cmp
lock
dec
arpl
movsb
fstps
test
and
lock
cmpsl
out
insb
mov
repnz
inc
fildl
fst
push
shl
cmp
in
jb
mov
push
out
fwait
sub
add
cmp
jl
push
push
dec
insb
test
mov
ffreep
out
pop
outsl
ljmp
loop
or
mov
cmovge
mov
je
mov
jg
ret
outsb
or
push
mov
jmp
sarb
gs
xchg
arpl
icebp
mov
pop
jle
mov
pop
sbb
idivb
inc
stos
into
nop
rorl
xchg
mov
jo
mov
cmp
dec
xlat
push
loopne
add
imul
dec
popa
pop
cmp
push
dec
mov
outsb
or
vpsubsb
jp
jnp
scas
std
int3
dec
add
jge
mov
shrl
movsb
or
pop
stos
fstpt
test
jo
mov
pushf
add
mov
xchg
adcl
mov
inc
lret
int3
inc
aam
and
ficoml
and
pop
dec
and
outsl
cmpsb
mov
mov
aad
sub
js
mov
js
push
add
movsb
push
bound
ror
pop
adc
addl
pop
mov
sub
orb
test
repnz
cs
ret
xchg
mov
loop
rcl
dec
push
lods
xor
cwtl
sbb
dec
mov
pop
dec
mov
add
insb
add
pop
pop
xchg
sub
inc
sub
aam
test
dec
and
sarl
fildl
sbbl
or
jbe
ret
pop
cmp
in
pop
cmp
shlb
cmp
in
test
sahf
dec
push
mov
fsubrl
dec
xchg
cltd
sub
dec
dec
fistpl
add
ja
ja
repnz
repnz
daa
push
mov
ljmp
or
cltd
cmp
pushf
mov
rorl
jecxz
pop
pop
sbb
push
scas
dec
jo
dec
test
cmp
jle
pop
inc
sahf
popl
repnz
or
add
push
leave
mov
inc
mov
aad
cmp
push
adc
cmc
clc
movsb
lds
js
xchg
add
enter
pop
pop
into
xor
subl
scas
in
mov
clc
push
xchg
xchg
mov
sbb
push
sub
fsub
fdivr
push
mov
adc
aas
gs
test
and
adc
arpl
mov
dec
pusha
cmp
cmp
mov
mov
push
and
movl
clc
mov
icebp
sub
pushf
js
cmp
clc
sbb
jno
and
jno
out
lds
pop
inc
in
sbb
xor
inc
outsb
lcall
inc
jl
xchg
xorb
inc
popa
subb
sahf
popf
mov
outsb
adc
add
aam
mov
pop
roll
jge
jbe
or
jl
inc
push
jp
xchg
jge
jne
les
inc
fsubrs
outsl
mov
aad
jp
mov
dec
in
cmp
adc
out
mov
test
mov
jmp
cmp
add
outsb
idivl
ss
fsub
sarl
pop
mov
xchg
or
mov
shrb
push
or
fimull
nop
xor
jecxz
cmpsb
je
pop
push
shlb
lods
dec
loop
inc
shrl
or
or
cwtl
or
or
into
push
in
in
push
loope
repnz
dec
mov
mov
mov
cmpsb
xor
aas
fists
fists
loope
pop
icebp
imul
inc
add
arpl
dec
mov
clc
nop
mov
movb
mov
dec
adc
pop
jl
cmc
xor
addr16
cmp
add
and
adc
push
push
daa
fisubs
into
lcall
inc
pop
call
cmp
xchg
xchg
mov
fimull
mov
xor
inc
int
mov
xor
jne
addl
xchg
mov
push
jmp
xchg
leave
lret
jb
subl
inc
ljmp
ljmp
cltd
cmp
into
pop
enter
in
mov
jb
cmp
imul
sbb
popa
adc
lods
push
aam
inc
lahf
jl
pop
popf
addl
call
inc
das
out
inc
cli
fsubp
inc
pop
and
jns
and
sbb
outsb
js
and
inc
inc
pop
xchg
sbb
sub
push
bnd
push
xor
mov
loop
shrl
aad
adc
sahf
jmp
hlt
hlt
addr16
lock
pop
cld
sbb
add
pop
cmp
testb
jno
dec
out
cmpsb
mov
or
inc
add
or
adc
stos
inc
xor
enter
dec
xor
movsl
mov
mov
mull
dec
push
in
aam
pop
or
pop
add
mov
push
ret
xchg
pop
xchg
aam
mov
inc
sbb
xchg
lds
push
sahf
repnz
sub
mov
mov
andb
xchg
inc
dec
or
dec
mov
add
mov
inc
into
push
xchg
push
mov
cmpsb
xchg
dec
ds
pop
fmul
outsl
push
pop
or
jns
sub
out
and
xchg
loope
cmc
jo
inc
sahf
inc
pop
scas
ret
jo
fsubrl
jo
gs
icebp
jb
mov
ret
stos
xlat
call
inc
out
rolb
inc
in
out
test
jmp
push
aam
pop
or
cmp
mul
daa
fldcw
into
shrb
jae
add
jecxz
fiaddl
pop
fisttpl
pop
xor
ds
es
sbb
or
inc
andb
out
lods
mov
or
scas
call
out
je
mov
aaa
rcr
and
add
fdivs
push
adc
xchg
int
popf
mov
aam
sub
mov
je
push
mov
mov
sub
jnp
xchg
mov
cmp
or
push
fs
xor
loope
rolb
fisubrs
mov
cmp
dec
pop
inc
in
fimuls
jo
aam
cmp
sbb
sub
add
push
dec
aaa
sbb
cltd
inc
mov
dec
test
inc
fnstsw
insb
in
mov
mov
jl
cld
cld
mov
xchg
xchg
in
cmpl
test
mov
inc
mov
loope
sbb
scas
cmpl
and
fwait
xor
lret
sbb
mov
aaa
or
leave
cli
jge
xchg
test
in
dec
fildll
fsubs
aam
sti
data16
xor
jmp
xchg
and
movsb
mov
mov
ja
add
cld
fldcw
pop
mov
aad
and
mov
aaa
popa
arpl
cmp
lock
sub
in
pusha
test
stos
out
pusha
add
mov
pop
aas
push
repnz
and
mov
ret
mov
inc
mov
mov
inc
and
decl
clc
jo
lcall
xchg
pop
jnp
lcall
push
xchg
and
xchg
js
ret
ds
and
cmpl
xchg
fwait
call
mov
and
call
sub
test
sbb
mov
ret
push
jl
jo
lods
lods
pop
add
pop
sub
cmp
int
sub
cmpsb
shrb
cmp
or
loop
xor
pusha
xchg
xchg
adc
fcomp
inc
fs
mov
les
idiv
add
incl
jmp
or
xchg
or
and
push
mov
xchg
pop
adc
pop
xchg
pop
leave
std
and
fsts
orl
dec
dec
xchg
dec
mov
sbb
cmpsl
clc
push
lea
xchg
mov
shld
push
xchg
sub
outsb
pop
out
jae
xchg
mov
push
inc
pop
ljmp
ficoml
jecxz
pop
push
outsb
fsts
icebp
orl
add
pop
dec
mov
cmp
sbb
mov
clc
aam
out
mov
leave
shll
inc
inc
imul
inc
in
cwtl
bound
jae
mov
inc
fsubrl
mov
int
jle
add
pop
jmp
insl
in
mov
je
mov
add
jae
jbe
mov
movsb
in
mov
popf
das
imul
scas
iret
out
popf
lock
ljmp
push
xchg
int
mov
cmpsl
add
ja
int
pop
rep
test
sbb
xor
xor
dec
xlat
xor
shl
jg
mov
iret
xor
cmp
inc
adc
nop
enter
popl
pop
lds
je
or
icebp
inc
add
sarb
ds
sbb
jle
pop
or
cwtl
scas
push
push
push
arpl
xchg
fidivs
xlat
loopne
loopne
aas
dec
fs
fisubs
rcr
mov
lret
stos
adc
inc
and
xor
movsb
ljmp
out
pop
xorl
pop
xor
inc
mov
fdivrs
cltd
push
subb
out
add
jp
inc
push
lahf
xchg
stos
out
data16
sbb
lret
xchg
jo
add
lea
lret
repz
sti
mov
pop
sbb
daa
pop
push
sub
lods
xchg
xchg
xchg
push
lahf
jbe
cmp
xor
pop
cmp
lds
add
js
or
test
int
dec
jne
push
jnp
push
pushf
scas
add
mov
dec
sbb
cmpsl
and
pop
xchg
imul
loopne
inc
mov
push
nop
pop
fs
add
pop
mov
sahf
ret
pop
cmpsl
aaa
mov
dec
pop
in
in
in
loopne
xlat
das
mov
stc
xchg
xchg
mov
pop
pushf
fadds
jnp
jnp
dec
lret
inc
out
iret
mov
mov
mov
inc
add
test
add
xorb
lret
jecxz
push
pop
sbb
data16
cltd
jecxz
cs
sbb
add
mov
xor
pop
dec
pop
adcb
and
adc
add
jbe
lret
mov
and
movsb
jge
adc
or
pop
dec
sti
fiaddl
leave
mov
pushf
cltd
stos
outsl
js
test
xor
stos
mov
in
test
arpl
adc
mov
mov
pop
pop
mov
xchg
aaa
insb
std
cmp
push
mov
push
fsubrl
cltd
push
fldenv
jo
icebp
std
fdivr
aaa
je
adc
cmp
mov
xor
popa
stc
inc
cmp
cmp
pop
rclb
lcall
icebp
stc
outsb
cmpsb
mov
push
mov
repnz
cmpl
fmull
shlb
call
sub
int3
and
push
sarb
add
divb
insb
mov
or
hlt
fdivp
sbb
add
mov
sub
inc
jmp
cmp
push
arpl
das
mov
mov
inc
or
pop
js
popa
into
outsb
std
test
xorl
adc
mov
add
inc
xor
pop
inc
js
pop
cmp
popf
inc
das
jg
rolb
out
lahf
adc
outsl
testb
mov
sbb
and
jb
jno
shrl
sbb
movsb
test
into
loop
test
hlt
mov
sbb
push
dec
inc
inc
pop
cmp
cwtl
pop
repnz
mov
xchg
mov
jecxz
mov
or
out
or
sbb
mov
data16
movsb
sub
popa
lods
dec
fbld
ret
xor
jle
push
repz
icebp
adc
push
fwait
test
test
lret
mov
xchg
xchg
lods
in
xchg
sbb
mov
insb
arpl
and
adc
pop
ss
mov
jae
hlt
or
jle
mov
mov
lods
fdiv
movsb
cwtl
sub
int
mov
xchg
push
mov
and
add
es
pop
out
mov
scas
loopne
leave
mov
sbb
ja
fs
outsb
movsb
ror
xor
fisubl
mov
loop
xlat
test
push
adc
sbb
dec
pop
push
jp
out
xchg
fldenv
out
dec
repz
inc
mov
pushf
push
fcomi
xlat
out
sub
push
inc
or
les
out
mov
jae
popf
mov
ret
jl
into
sub
lods
mov
js
data16
cmc
and
mov
in
lods
outsb
negl
out
mov
and
xchg
ret
nop
sbb
dec
sbb
mov
pop
push
ror
js
stc
mov
add
push
dec
clc
mov
imul
ret
out
call
cmp
sahf
out
out
cmp
pop
arpl
jnp
mov
aas
mov
repz
push
cmpsb
mov
fbld
push
xchg
jmp
shl
fldl
pop
jne
sbb
jb
jp
lret
mov
jp
icebp
jle
fnstcw
shl
sbb
sub
mull
arpl
popa
sbb
push
sbb
cltd
ficoml
xchg
lock
xor
xchg
and
cwtl
mov
jle
cwtl
das
add
xchg
add
fdivl
jl
push
fcomps
out
loope
pop
inc
test
mov
adc
outsb
xor
les
or
xor
xor
xchg
stc
mov
je
pop
cmc
xchg
mov
mov
bound
mov
pop
inc
arpl
add
test
int3
jnp
and
push
sub
movsl
sub
xchg
mov
push
push
xor
fidivrs
mov
cmpsl
popf
into
cmpsb
or
ret
insb
jbe
mov
mov
mov
andb
mov
shrl
push
adc
xchg
adc
cmp
vmovhps
sub
jb
aam
push
cmpsb
scas
and
aaa
test
pop
rcrl
dec
repz
jae
ret
test
adc
sti
jg
sub
and
cmpsl
stos
decb
xor
lahf
popa
mov
mov
add
pusha
inc
adc
sbb
dec
test
inc
popf
xchg
push
mov
inc
and
shrb
pop
lret
dec
dec
add
add
fcomps
push
push
mov
push
pop
add
in
dec
jne
mov
data16
nop
mov
push
repnz
jecxz
leave
sbb
cld
push
out
loopne
fists
insl
mov
ljmp
inc
hlt
scas
jb
out
fisubl
ret
and
jmp
sbb
pop
sub
add
ljmp
push
jecxz
inc
dec
lret
std
adc
or
xor
div
mov
cmpsl
lret
insb
push
fs
shrl
pop
clc
ljmp
in
insl
inc
adc
fbstp
cmp
inc
mov
mov
inc
test
adcb
lahf
cmp
test
adc
push
inc
jle
or
mov
jns
into
jmp
xchg
jg
and
sbb
xor
insb
into
in
sbb
jae
bound
stos
loop
dec
fwait
daa
cmpsb
jnp
jne
cmpsl
ss
sbb
mov
mov
add
stos
mov
icebp
in
mov
inc
mov
pop
stos
data16
fcomp
negb
inc
fwait
pop
movsl
mov
icebp
fstps
jb
xchg
sub
mov
iret
cmp
xlat
dec
cmpsb
adc
jp
mov
mov
movsl
mov
out
mov
xchg
pop
cld
sub
in
aam
les
daa
dec
cmp
call
sbb
mov
and
mov
enter
leave
and
inc
pop
sbb
push
loopne
or
sbb
push
jle
cli
lock
push
sbb
push
adc
fisttpl
dec
cmp
mov
inc
andl
cmp
inc
adc
cmp
orl
mov
ss
fstps
lret
pop
or
mov
jl
lock
aaa
and
mov
ss
xor
adcb
hlt
negb
inc
bound
mov
daa
lds
frstor
push
mov
add
mov
and
push
mov
and
sbb
cwtl
incb
cmp
pusha
xchg
cwtl
out
mov
pop
aaa
lods
hlt
push
dec
fdivl
adc
mov
pop
xchg
cmp
jecxz
xchg
outsb
cmpl
cmpsl
sti
mov
pop
lahf
dec
bswap
mov
jge
sub
out
ljmp
dec
loop
sbb
sti
lock
fdivrl
add
sub
in
int
test
rcrb
inc
cmp
inc
xor
inc
inc
dec
xchg
addr16
or
pusha
jbe
dec
adc
lcall
stos
mov
test
sub
push
jl
sbb
repz
mov
mov
push
lea
mov
clc
dec
jl
cmp
cmp
fbstp
xchg
std
nop
mov
test
jg
sub
test
pop
aaa
jno
add
out
xchg
dec
test
inc
lcall
push
push
dec
pop
sarb
push
les
cmc
dec
inc
shrb
out
jne
jl
push
mov
mov
mov
pop
mov
push
loope
jle
inc
test
pop
lcall
jmp
push
jecxz
stc
xchg
cmc
jo
mov
mov
pop
mov
mov
mov
fisubrl
cs
inc
repz
shl
jne
icebp
aam
mov
jle
sbb
lds
pop
loope
int3
addr16
lea
rcl
sbb
insl
add
xor
repz
push
jmp
data16
insb
outsb
jp
xlat
mov
and
movsl
popf
data16
fs
bound
testb
mov
and
mov
mov
add
xor
rcrb
ja
js
push
push
popa
inc
leave
loopne
lea
push
adc
mov
and
shlb
rep
divl
add
gs
insl
sub
in
dec
movsl
les
std
or
sub
push
inc
in
inc
dec
outsl
mul
movb
repz
jp
xor
out
jg
xchg
and
insl
aam
push
pop
jns
xchg
jns
out
cmp
out
sub
xor
scas
xchg
les
lock
cmovp
and
jge
pop
xor
inc
inc
mov
pop
sbb
adc
cmp
pop
es
add
push
jmp
jae
nop
xor
and
xchg
mov
rorl
mov
arpl
faddl
pop
insb
ret
shl
iret
dec
jmp
jmp
add
dec
lods
xchg
mov
jae
mov
lods
ljmp
xchg
sub
jno
xor
stos
rorl
or
add
xchg
adc
sbb
mov
cmp
add
jp
les
sbb
fdivp
dec
arpl
sti
in
fistl
sbb
hlt
push
pop
inc
aaa
roll
aad
and
or
sbb
add
lods
pop
movsl
sbb
pop
leave
mov
imul
addr16
adcb
add
mov
aaa
mov
dec
mov
stc
mov
fsub
fidivrl
mov
adc
movsl
and
rolb
inc
dec
and
andl
jb
cs
cmpl
pop
xor
adc
arpl
jne
pop
daa
cmp
sbb
cs
lret
cmc
adc
fisttpll
out
jp
mov
call
aaa
mov
cmp
dec
mov
sub
push
inc
adc
inc
prefetcht1
out
mov
rol
xor
clc
xor
mov
and
ffree
icebp
ss
push
mov
into
push
pop
adc
loopne
sbb
add
loop
mov
out
ja
mov
jbe
imul
cwtl
pop
dec
pop
xor
daa
sti
or
leave
pusha
lahf
fldenv
ja
dec
cmp
or
je
test
or
and
rorl
dec
cmp
imul
data16
loop
test
nop
das
mov
jne
xor
pop
into
add
scas
sub
scas
push
in
testl
jnp
push
lahf
arpl
hlt
sbb
dec
rcll
pop
mov
xchg
jl
pop
xor
sub
mov
dec
outsb
mov
fs
les
inc
add
lcall
sub
inc
test
ss
movl
push
jbe
pop
loop
sub
ja
dec
and
addr16
sub
pop
jg
cmpsl
and
js
shlb
aad
mov
cld
sarl
dec
sbb
add
or
stc
das
fwait
movsb
addr16
jl
xchg
push
dec
inc
push
mov
faddp
or
movsb
fs
shl
and
inc
inc
lods
out
flds
mov
lods
fs
fisttpl
xor
popa
enter
mov
std
lret
rcll
inc
test
jle
xor
loop
or
hlt
loop
das
mov
lahf
jbe
adc
jmp
add
int
int
movsl
pop
lods
sahf
mov
adc
stc
in
lahf
add
adc
call
push
outsb
je
stos
mov
cmp
jne
sub
loopne
fdivrs
stc
out
shll
push
cmp
test
fcoms
int
and
insl
sbb
das
and
push
push
inc
xchg
inc
add
mov
dec
andnps
rorl
xor
or
loopne
push
scas
inc
filds
xor
shrb
test
jbe
inc
mov
fildl
mov
sub
sub
adc
imul
xlat
imul
pop
into
adc
shrb
jno
mov
frstor
mov
pop
hlt
dec
loop
mov
ret
mov
xchg
cli
dec
ffreep
jnp
sub
pop
mov
stos
push
push
ror
mov
push
stos
mov
xchg
repnz
gs
lahf
xor
and
push
notl
imul
and
mov
imul
inc
divl
sti
daa
andb
xchg
mov
pushf
js
or
jl
pusha
xor
push
inc
ret
jg
inc
inc
sbb
adc
xlat
adc
and
sbb
mov
pusha
pop
out
jb
pop
cmp
lock
jae
mov
cmp
lods
fnsave
test
sub
ja
repz
int3
mov
sbb
je
jmp
pusha
iret
mov
jno
cmp
pop
cmp
clc
sub
sbb
mov
add
sbb
in
pushf
dec
push
and
or
mov
mov
ret
leave
rorl
icebp
sub
add
roll
cmc
adc
pushf
or
fldcw
or
and
inc
lods
aaa
jae
icebp
pusha
nop
jge
sbb
cmpsb
xor
pop
mov
jno
jecxz
pop
or
loopne
jnp
outsl
mov
js
shrb
ret
out
add
jecxz,pt
lods
jg
aaa
xchg
sbb
fsubl
xlat
arpl
lret
lea
negl
adc
inc
xor
iret
push
pop
ja
and
test
xchg
loop
adc
jmp
xor
loopne
mov
movsl
mov
push
movsb
aad
fcompl
pop
pop
xchg
lret
mov
leave
out
xchg
sub
popa
sarl
lods
inc
and
inc
dec
inc
mov
in
mov
iret
lahf
inc
enter
popa
in
stos
negl
mov
fs
ss
fisttps
inc
mov
fcmovnbe
sarb
jecxz
fdivrl
jle
pop
push
out
leave
cs
movsb
xchg
or
into
das
out
dec
andl
jmp
hlt
add
testb
dec
push
mov
cltd
movsb
or
and
inc
mov
inc
pop
cmp
movsl
pop
fcoms
push
xchg
mov
cmp
scas
dec
sbb
dec
mov
insl
and
mov
lret
mov
xchg
add
ljmp
fwait
inc
jo
daa
je
dec
fldenv
jp
loopne
testb
inc
lods
push
es
sub
out
and
xchg
mov
nop
inc
stc
and
push
xchg
cmc
cld
pop
jmp
cmp
stos
imul
push
xor
push
mov
mov
pushf
xor
mov
enter
test
sbb
jg
cld
out
inc
push
je
imul
daa
xchg
cmpsl
xlat
pop
sub
std
jl,pn
jbe
mov
inc
in
fldt
dec
lahf
adc
pop
sub
outsb
mov
xor
jg
rcrb
orb
fadd
clc
lods
inc
pop
add
hlt
clc
fsubs
lret
mov
cwtl
fisubrs
stos
pop
imul
push
leave
mov
mov
push
fstl
enter
out
test
push
xchg
orb
and
fs
int3
adc
cwtl
repnz
js
and
xchg
and
movsb
movl
notb
xchg
cmp
xorl
call
add
pop
sarl
hlt
jecxz
sbb
cli
sub
ja
test
cmc
xor
int3
in
lret
dec
pop
mov
sbb
cmpl
cli
aaa
pop
push
and
push
or
push
aas
or
outsb
sarl
cltd
mov
ror
mov
imul
and
sbb
push
test
jge
mov
sahf
sbb
mov
add
outsb
xor
fcmovb
mov
xlat
enter
ficomps
and
xchg
or
mov
aad
mov
fmuls
inc
jae
mov
jno
cltd
xchg
and
ljmp
cmpb
cli
sbb
loopne
mov
cld
aaa
xchg
sub
shl
fistpl
sub
jns
repnz
push
cmpsl
xchg
xchg
outsl
xchg
mov
ds
add
pop
jb
int3
cmp
aad
mov
and
cmp
xchg
lahf
xor
lods
inc
iret
test
push
fstpt
dec
imulw
mov
pop
pop
repnz
lea
insl
pop
and
add
pushf
dec
push
pop
mov
pop
sbb
jle
adc
sbb
add
jnp
fimuls
or
cli
aam
pop
xchg
out
fadd
sti
sub
push
loopne
outsl
repnz
sbb
idivl
loope
pop
jae
adc
repnz
xor
inc
aaa
lret
outsb
jmp
and
sbb
adc
nop
push
mov
pop
and
fbld
in
cmp
outsb
rcrl
arpl
sahf
cmp
in
mov
lods
mov
into
movsb
lock
mov
fistpll
jbe
cltd
arpl
lods
mov
xchg
mov
or
push
mov
nop
xor
imul
sub
jcxz
adc
push
bound
mov
cmc
cwtl
in
pushl
mov
inc
sub
pop
sub
xchg
ret
jp
cmp
adc
test
pop
aam
jmp
iret
mov
sahf
adc
pop
dec
jb
jno
adc
fs
aad
push
stos
xchg
ja
jae
out
xchg
push
ret
shr
mov
mov
mov
add
outsb
mov
ret
enter
inc
fnstsw
out
cmp
push
int3
xlat
cmpsb
imul
pop
pusha
jne
inc
lock
and
in
cld
sbb
test
pop
scas
cmp
sbb
sub
xor
or
jne
inc
push
dec
addl
popf
call
movsl
aad
xor
push
mov
pop
popf
inc
inc
inc
cmc
subb
lret
dec
aad
mov
lods
lret
mov
push
test
sqrtps
rorl
xchg
pop
push
sbb
scas
push
pushf
adc
xor
dec
mov
jne
aaa
jmp
lret
or
xchg
jno
stos
arpl
sub
xlat
and
lock
pushf
lods
repnz
mov
adc
fsts
xor
mov
mov
fwait
xchg
dec
outsb
fmuls
pop
mov
movsb
rorb
xchg
jo
xchg
dec
xorb
or
std
add
mov
daa
and
js
repz
sbb
pop
ds
sti
ficoml
mov
xchg
cmp
pop
stc
xchg
push
insb
jg
mov
pushf
pop
or
cmc
inc
xchg
jmp
sbb
push
pop
inc
gs
clc
iret
rclb
sbb
sti
mov
mov
push
xorl
aam
dec
mov
pop
int3
xor
aam
xchg
jo
inc
dec
outsb
adc
jmp
pop
hlt
js
inc
in
or
nop
sahf
hlt
jge
arpl
je
jle
mov
jae
in
popa
sub
out
cmpsl
xlat
dec
das
test
jl
mov
fdivrs
movsl
mov
fisttpll
jbe
js
jl
scas
and
and
ret
enter
inc
push
inc
cmpsl
jg
popa
mov
cli
mov
sbb
lcall
fcomi
loop
in
cltd
sbb
mov
push
popf
pop
dec
and
imul
pop
xor
test
bound
std
pusha
es
out
dec
jne
mov
fdivl
pusha
fldt
out
adc
or
adc
dec
shll
jns
in
and
cmp
lods
enter
adc
adcl
cmpsl
adc
scas
out
fisttpll
imul
jp
inc
xchg
lods
xlat
in
fsubl
adcl
out
add
cmp
jne
fsub
cwtl
xchg
cld
mov
pop
xor
mov
rolb
leave
cmp
xor
mov
push
fistl
iret
inc
jo
cld
lahf
out
icebp
jno
mov
jge
inc
jge
mov
es
add
xor
sbb
dec
aas
sarl
or
mov
adc
scas
mov
movsb
in
xchg
jbe
cmc
sub
lret
imul
cmpl
iret
mov
sti
pusha
or
lahf
inc
adc
push
mov
imul
dec
pop
test
adc
xor
inc
movsl
jge
add
sbb
clc
cmp
sbb
push
es
aad
in
leave
mov
mov
sbb
or
cltd
inc
sub
jbe
mov
in
fcom
cli
mov
add
jne
lret
fdivr
mov
add
cmpl
mov
inc
jae
lods
mov
jnp
cwtl
std
stc
lods
dec
jns
stos
fmull
cli
icebp
fildll
imul
xor
xor
add
push
dec
cmc
lods
jae
cli
lahf
jl
push
cltd
insl
mov
mov
jnp
mov
jb
popa
pop
sbb
cmp
pop
mov
jecxz
cld
lea
and
xlat
add
hlt
push
pop
jle
mov
pop
ja
sbb
movsl
bndstx
and
cmp
movsl
repnz
xchg
and
add
sub
pop
inc
mov
and
jecxz
mov
sbb
or
and
jge
jl
sbb
add
int
sub
iret
pop
fwait
test
daa
adc
sub
sub
dec
xor
test
cmp
xchg
test
popa
inc
or
lcall
mov
in
dec
aas
bound
ss
arpl
sti
add
pop
mov
xorl
cmp
rcrb
clc
cmp
mov
inc
mov
js
mov
pop
addr16
dec
mov
arpl
push
and
out
aam
test
mov
dec
bound
push
dec
scas
lretw
xlat
cmp
add
ficompl
mov
lret
inc
pop
and
fidivs
xor
outsw
mov
cs
dec
inc
and
mov
sub
jge
adc
outsl
sbb
out
add
ret
push
sub
nop
std
ficoml
pop
push
je
cmpsb
lock
dec
inc
push
jno
enter
dec
xor
fwait
daa
sahf
fcom
add
and
lret
and
push
lahf
jne
adc
add
ds
jp
sub
mov
inc
or
das
in
out
jge
adc
pop
pop
aad
jmp
mov
lea
pop
xchg
push
ja
lea
outsb
inc
out
imull
jp
push
push
jmp
mov
sbb
add
add
mov
rorl
movsb
jl
std
xor
divb
dec
ja
dec
insb
dec
or
dec
adc
pop
rorl
jp
divb
lcall
insb
sbb
pushf
lret
add
mov
push
lahf
adc
cwtl
push
xor
cwtl
outsb
andb
enter
vmulpd
and
mov
jns
stos
std
outsl
in
xchg
xor
cmp
mov
fimuls
mov
out
fisubrl
ss
pop
mov
imulb
xchg
xor
mov
daa
adc
xorl
push
add
shrl
popf
arpl
push
and
xchg
inc
mov
cmp
xchg
xor
sbb
test
or
lods
push
andb
jns
fcompl
sahf
cwtl
subl
out
ja
sbb
sub
testb
jae
mov
rorb
scas
pop
xchg
mov
push
icebp
jno
mov
jg
insl
scas
or
mov
js
sub
dec
cwtl
jo
aam
mov
sarl
xchg
adc
mov
or
jne
inc
mov
out
sbb
mov
shlb
mov
mov
ret
idiv
adc
bound
pop
cmc
lds
add
fstpt
dec
stc
lcall
and
cltd
les
je
or
test
dec
out
rorb
dec
popa
pop
sub
xor
pop
adc
xchg
stos
xchg
addr16
jmp
into
mov
add
hlt
ja
xchg
rcrl
mov
inc
loop
in
dec
loop
scas
nop
xor
push
xor
xchg
out
inc
leavew
out
loop
xchg
dec
mov
daa
pusha
mov
dec
pop
bound
int
icebp
or
push
lret
pop
movsl
push
nop
imulb
xchg
popa
or
lds
sbb
jp
mov
fstps
call
lcall
jnp
xchg
lods
adc
pop
cli
mov
fildl
adcl
ret
xchg
jne
test
jp
dec
mov
sbb
push
lret
sub
mov
repz
mov
dec
aam
mov
dec
and
mov
cmp
mov
imul
test
test
lock
iret
xor
das
insl
push
cmp
shll
test
or
push
call
cli
imul
out
subl
scas
aaa
mov
dec
mov
std
pop
stc
cmp
inc
incl
je
mov
xchg
lea
or
incl
les
push
jbe
shrb
jge
adc
dec
shll
and
fbstp
sub
push
jno
inc
mov
mov
mov
icebp
cs
je
cld
nop
mov
pop
push
and
add
mov
test
es
xchg
mov
xchg
inc
fildl
jg
fimull
mov
ret
push
stos
lret
jp
loopne
xchg
add
rolb
or
lcall
jno
neg
add
jae
out
ss
sbb
icebp
and
jl
out
aas
int3
jge
scas
shll
dec
mov
inc
test
lods
push
and
add
outsb
and
add
xchg
cmc
rcrb
bound
sub
scas
sbb
lgdtl
repz
sbb
pop
pop
cmp
dec
pop
dec
dec
push
aad
sahf
cwtl
mov
mov
divl
adc
xchg
or
and
mov
imul
jnp
mov
or
push
dec
fs
and
mov
int
scas
imul
std
sub
cld
push
scas
or
mov
or
repnz
cmp
xor
push
aaa
or
gs
fcmovb
cmp
mov
jecxz
dec
cmp
subl
das
mov
and
sub
mov
dec
jno
jo
roll
jne
mov
in
xchg
insb
jb
mov
jge
dec
and
mov
pop
mov
lcall
xor
jecxz
and
cmpsb
aad
popa
ret
xor
out
lds
pop
cmp
pop
mov
jae
sub
add
cs
sbb
mov
je
jnp
enter
shl
xor
adc
jp
fs
cld
and
movsb
jne
pop
mov
scas
xchg
cld
add
mov
push
sub
inc
and
imulb
add
repnz
and
or
sbb
shl
vmread
lret
cmp
lahf
ja
mov
add
incb
cmp
arpl
jecxz
enter
adc
popf
jmp
arpl
in
mov
imul
daa
test
push
insl
mov
imul
inc
retw
in
fadds
imul
and
inc
es
jne
xor
outsb
adc
jno
xchg
and
test
adc
insl
punpcklwd
sub
mov
add
inc
xor
adc
sub
mov
push
mov
lea
jge
mov
ja
sub
xor
mov
or
xor
xlat
int3
pop
push
dec
jg
call
and
add
fwait
js
pop
adc
pop
andb
push
cmpsl
adc
jecxz
bound
testb
xchg
cs
mov
inc
shl
iret
inc
cmp
js
daa
pop
push
and
je
das
adc
pop
dec
das
xor
mov
xor
mov
out
movsl
jecxz
and
test
push
fidivrl
call
xlat
push
in
and
out
xor
aas
call
sbb
cld
pop
inc
fsubrl
repz
push
sbb
aad
push
sarl
loop
orb
mov
push
cli
dec
aad
scas
add
pop
fldcw
pop
cmp
xlat
mov
xchg
pusha
jbe,pt
fs
mov
clc
in
inc
aad
mov
mov
pop
test
sbb
test
xchg
nop
movsb
xchg
cmp
aam
mov
mov
pop
adc
sbb
jge
test
movsb
ljmp
xchg
cld
add
jp
add
fs
fisubrs
mov
lods
jl
pop
fsubrs
movsl
cld
fcompl
push
xor
mov
adc
in
ljmp
shr
enter
pop
shll
mov
inc
movsb
add
orb
movsl
push
shrb
stos
push
cmp
sahf
es
and
push
fisubs
cmpsl
and
add
or
push
gs
adc
fistl
popa
cmp
popf
mov
ret
pop
mov
mov
insb
mov
aad
mov
pop
lret
mov
in
sub
std
shrb
and
sub
rclb
and
jnp
cmp
mov
arpl
mov
add
jge
inc
pop
jns
aad
stc
and
mov
scas
sub
or
push
das
sbb
je
call
fnstsw
pop
out
int
ss
jae
inc
jge
out
cmp
jp
mov
imul
lret
mov
pop
aad
fbstp
jmp
jl
test
stos
dec
sub
ds
fistpl
mov
hlt
add
mov
mov
shr
xchg
cmp
or
jecxz
and
push
cmp
mov
mov
xor
int
pop
test
pop
addb
and
int3
mov
gs
add
sub
lret
scas
repz
inc
inc
ret
bnd
out
loop
mov
push
les
mov
sbb
call
lea
cmp
stos
mov
lahf
gs
movsb
mov
xor
sbb
jmp
push
mov
inc
rcr
inc
out
repz
hlt
fldt
mov
jmp
xchg
fnsave
adc
pop
mov
mov
jle
int3
cli
in
orb
cmp
dec
sarb
sbb
in
dec
push
adc
jl
idivl
mov
in
loop
psubw
nop
sbb
lahf
int
and
movsl
outsl
push
not
and
jb
movsl
mov
movsb
inc
fld
in
cmpsb
popf
movsb
lcall
and
ljmp
bound
cld
arpl
mov
or
mov
push
lret
cmc
sbb
jge
mov
movnti
in
mov
xchg
popa
fs
lcall
cwtl
movsb
sbb
cmpsl
push
xlat
ds
xchg
stc
stc
std
shufps
xor
push
or
mov
loop
push
outsl
popa
outsb
sub
and
mov
mov
pop
sbb
xchg
and
scas
call
iretw
fdivl
sbb
sub
mov
xorb
lahf
in
jb
and
xchg
or
in
incl
xchg
mov
hlt
imulb
fldl
out
adc
sbb
sub
cmpsb
xchg
cmpsl
xor
inc
imul
js
xchg
xor
loope
push
sahf
and
pusha
push
and
adc
dec
mov
xchg
enter
push
or
in
dec
ret
sub
mov
fnstenv
mov
cmp
or
push
dec
ds
fdivs
pop
movl
mov
addr16
rcll
push
fldcw
pop
pusha
pop
dec
rol
xchg
stos
cmp
push
jmp
cmp
pop
daa
adcb
in
or
mov
jmp
push
mov
mov
pop
jo
adc
lods
lods
sbb
inc
push
mov
and
push
pop
int
or
xor
outsl
dec
sub
in
mov
mov
xor
cld
jp
xchg
push
adc
rcll
xlat
sbb
bnd
iret
les
inc
xchg
rcrb
aad
insb
mov
flds
fcomi
test
sti
mov
fwait
push
sbb
dec
cmp
mov
out
mov
sub
leave
mov
xor
adc
sbb
dec
lock
adc
insl
mov
push
arpl
dec
test
jl
fmulp
jmp
sbb
lock
dec
ret
repz
adc
daa
outsb
bound
lret
adc
and
test
mov
sub
loopne
loope
pop
cwtl
inc
sub
xchg
lods
cli
and
aam
iret
cmp
fucomp
rorb
out
sti
faddl
mov
mov
repz
pop
cld
out
arpl
push
je
outsb
fldcw
loope
loop
jb
dec
xchg
lock
sub
es
in
cs
xchg
cmc
loope
mov
std
or
pop
ljmp
push
js
loope
and
imul
insl
xchg
scas
into
adc
ja
add
xor
xchg
mov
test
call
sbb
cmp
in
into
mov
aam
mov
outsl
xor
mull
call
int3
jg
dec
mov
repz
mov
xor
adc
push
imul
xchg
loope
gs
fwait
in
imul
or
jnp
enter
dec
fdivrs
xchg
mov
stos
jle
call
push
add
movl
pusha
xor
orl
aas
inc
jecxz
xchg
pop
mov
icebp
mov
fmuls
ret
pop
inc
mov
mov
mov
das
popf
add
test
icebp
ret
dec
push
loopne
lea
cmp
loopne
les
stos
pusha
sub
cld
mov
sub
xor
mov
push
pop
leave
lcall
or
das
cltd
scas
or
push
jl
cmp
lret
and
dec
dec
in
hlt
leave
jno
cmpsb
pop
leave
test
data16
aam
inc
scas
out
arpl
jne
dec
push
xorl
out
fiadds
out
je
mov
cmp
push
imul
fsubl
inc
shrl
xor
enter
add
inc
popa
stos
sub
cmc
bound
call
dec
mov
push
loop
pop
cltd
mov
and
popf
adc
mov
jg
xor
stos
mov
outsb
cwtl
js
inc
cli
jns
bound
xor
lods
pop
pop
adc
enter
stos
daa
ficomps
push
jo
inc
lock
andl
aaa
pop
pusha
cmpsb
lret
out
inc
cs
insl
xor
mov
mov
shl
fstps
mov
sbb
fsubrl
mov
or
shll
inc
mov
imul
mov
cmp
outsl
fidivs
push
mov
add
aam
repz
push
xchg
xchg
ss
imull
fcoms
aaa
add
test
sbb
push
inc
xchg
ret
lock
fdivrl
test
ds
push
outsl
and
lcall
and
push
cmp
pop
cmc
push
pop
or
cmp
insb
mov
mov
jae
jl
mov
popa
adc
xlat
jmp
xor
imul
or
add
fstps
das
inc
lcall
xor
scas
pop
in
or
je
adc
and
and
xorl
and
pop
sub
je
cmc
inc
push
cmc
push
add
je
xchg
leave
mov
movsl
and
mov
push
shlb
or
popf
add
imul
div
mov
pop
pop
xchg
leave
js
sub
lods
in
clc
adc
jo
dec
xchg
loope
loope
cmp
mov
mov
jmp
movb
and
pop
popaw
xchg
sbb
mov
cmp
lret
test
outsb
shrl
xor
pop
mov
pop
mov
mov
and
push
pushf
and
test
jmp
cltd
mov
dec
mov
inc
jnp
cld
mov
ljmp
sbb
mov
push
jnp
out
rcll
movsb
mov
insb
mov
stos
es
lahf
pop
inc
dec
out
movb
subb
cmpsl
push
adc
mov
into
bound
loop
ftst
pop
add
sub
jne
mov
lcall
ds
and
cltd
mov
in
push
sbb
or
xchg
mov
nop
push
jg
and
rcrb
cwtl
addl
add
cmp
push
aaa
mov
dec
and
xor
adc
test
or
jb
in
xor
mov
dec
inc
stos
push
clc
roll
hlt
ljmp
xchg
mov
popf
aaa
icebp
push
xor
mov
jl
rcrl
in
lret
stos
outsb
push
add
mov
into
stos
stos
add
push
lods
shll
lock
xchg
cmp
es
inc
loop
push
and
pop
shrb
ljmp
fdivrl
mov
cmp
inc
sbb
lds
push
jg
dec
adc
jecxz
test
loope
loop
ljmp
addr16
adc
ret
popf
lret
xchg
inc
pop
mov
jno
scas
sbb
outsb
xchg
lods
jns
jle
es
rcrl
sbb
xor
pushf
mov
fnstenv
dec
or
repz
mov
arpl
cmp
push
mov
inc
pop
sub
push
inc
inc
or
dec
sub
nop
jo
or
or
rcrb
movsb
divl
mov
or
add
stos
lods
aas
mov
scas
or
in
gs
gs
pop
out
mov
pop
les
je
mull
ret
pusha
hlt
xchg
xchg
int3
mov
stc
inc
cmp
push
jo
pop
adc
and
pop
repz
fsubl
pop
imul
sub
ret
cli
ljmp
cwtl
outsb
shlb
push
call
xor
je
push
stc
jae
mov
fisubl
ret
xchg
or
mov
xchg
or
sti
mov
mov
sbb
cmp
and
pop
dec
push
push
sub
inc
push
ljmp
stc
pushf
test
mov
dec
mov
imul
aad
sbb
mov
sbb
fidivs
lret
fldcw
scas
sahf
push
xor
push
or
es
outsl
xor
out
das
scas
push
add
mov
int
push
cmp
xor
test
mov
jno
scas
rcrl
test
call
and
cmpsw
mov
xchg
adc
repnz
xchg
cmp
xchg
xor
mov
mov
xchg
aaa
hlt
call
jp
push
jns
in
pop
cli
mov
inc
jl
pop
xor
sbb
mov
add
adc
sbb
sbb
pushf
jle
mull
xchg
or
jno
inc
pop
xor
stos
fwait
shrl
jne
cld
nop
fldl
mov
cmc
mov
lods
lock
lods
pop
mov
bound
xchg
shl
sbb
sbb
add
xor
and
jnp
and
sahf
dec
out
sub
pop
pop
imul
pop
cmpsb
and
pop
fistl
xor
rolb
mov
push
or
xor
and
out
movsb
mov
bswap
push
and
and
pop
pop
testb
test
imul
sub
fidivrs
out
dec
lock
fldcw
cmp
cmp
cmpsl
lods
sub
cmc
pop
push
stos
inc
inc
xor
test
mov
mov
scas
inc
neg
push
retw
mov
roll
data16
mov
bound
aaa
xor
jp
loopne
xchg
and
mov
adc
test
cwtl
jb
mov
test
mov
push
lods
dec
inc
mov
cmpsb
mov
test
sub
sub
fiaddl
mov
mov
mov
fsub
into
sub
imul
int3
push
and
pop
pop
xor
or
test
cmpsl
aas
cmp
xor
loopne
and
std
pop
idivl
push
add
sub
ret
push
fwait
push
js
pop
icebp
xor
mov
fiaddl
xlat
mov
or
rorb
xlat
push
adc
inc
and
movsl
pop
pop
push
std
mov
ja
xchg
stos
daa
dec
push
data16
pop
jl
and
outsl
mov
push
stos
lea
inc
or
sti
sar
arpl
aaa
das
dec
loop
mov
cmp
movsb
jbe
xor
ror
movsl
sarl
dec
lret
or
push
mov
or
inc
outsb
aad
loope
test
and
shll
cmpsl
ja
in
xchg
fdivrs
gs
mov
adc
cmpsb
or
dec
mov
fsubrs
xchg
pop
div
popf
test
in
jl
xor
inc
out
xchg
daa
test
cs
cli
lea
scas
lea
cltd
xchg
insl
adc
nop
or
movl
push
mov
jbe
orl
nop
sbb
leave
adc
xchg
xchg
or
jo
inc
mov
mov
or
icebp
add
pop
sub
mov
fistps
test
or
inc
dec
jmp
stc
jge
mov
xor
into
jp
xchg
mov
dec
fnstcw
lret
add
pop
clc
add
cmp
fsubs
jg
stc
mov
out
clc
push
das
sar
cmp
setg
cmp
xchg
adc
push
je
pop
or
add
test
les
add
sub
xor
push
mov
or
cwtl
out
jmp
ret
enter
in
nop
leave
icebp
push
jl
pop
cld
inc
fwait
push
loope
push
cmp
subl
aad
xchg
cmp
mov
rorl
or
mov
lds
loopne
sub
leave
add
sub
sti
lret
mov
enter
int3
fwait
adc
es
dec
outsl
adc
insl
nop
jno
dec
std
mov
inc
iret
frstor
fwait
add
dec
lret
jp
sbb
mov
outsl
cmp
sbb
mov
cmc
mov
jge
inc
fs
inc
sti
sahf
jbe
cld
mov
or
mov
add
jbe
and
lock
cs
mov
and
push
dec
sub
inc
pop
imul
stc
mov
jmp
dec
and
in
iret
lahf
jle
mov
dec
outsl
sbb
jns
cmp
mov
scas
jo
test
test
push
inc
push
inc
popf
cli
hlt
sbb
and
lcall
js
or
mov
pop
insb
inc
jno
lods
lahf
scas
xor
inc
sub
shr
sbb
iret
push
jmp
push
sub
push
hlt
lret
sub
out
lea
test
out
out
adc
loope
rcr
and
sbb
inc
call
push
push
inc
mov
xor
in
dec
aam
ja
lahf
test
icebp
hlt
movsb
shlb
mov
dec
in
mov
das
fistl
push
sbb
daa
lods
sbb
jle
add
lahf
pusha
xchg
mov
or
and
sbb
jno
ret
sbb
fcompl
mov
xor
adc
mov
pop
xor
int
mov
andb
cld
in
dec
xor
pop
addr16
out
cmp
xor
or
jb
int
scas
or
insb
add
stc
push
call
test
lods
inc
call
movsl
insb
sub
cli
sahf
arpl
sbb
or
push
inc
cmc
stos
fdivrs
in
cmp
outsl
lret
lods
aam
rcrb
call
test
int
incb
pop
repz
mov
inc
jge
and
nop
push
in
stos
sbb
subl
rcl
inc
mov
add
lahf
add
dec
push
lcall
addr16
ljmp
dec
clc
cmc
sub
scas
add
lcall
xor
imul
call
sub
stc
sarl
loopne
adc
xchg
call
lahf
loop
and
mov
int3
dec
ret
enter
push
and
popa
and
jae
aam
adc
lret
sbb
mov
ss
sbb
mov
lods
inc
movsb
sub
cwtl
icebp
xchg
lahf
jp
cmc
mov
es
insl
xor
in
imul
std
jg
sub
mov
pushf
nop
dec
andl
int
dec
roll
in
stos
sub
cwtl
mov
out
xchg
test
in
mov
jne
push
popf
test
and
jp
dec
add
and
ret
enter
flds
cmc
sbb
sbb
imul
pop
jb
data16
loop
in
out
inc
adc
arpl
cmp
mov
inc
test
and
pop
xchg
aam
push
imul
test
adc
addr16
sbb
jo
inc
pop
sub
jmp
sbb
in
enter
xlat
mov
mov
sahf
inc
xlat
pushf
cmc
fnstenv
xor
fs
imul
pop
or
movsb
fcomps
out
ficomps
jge
orl
cld
sub
cmp
rcr
aas
add
les
sub
sub
cmp
push
ja
cmp
and
pop
cwtl
xchg
mov
mov
lods
add
push
mov
xor
inc
xchg
pusha
mov
lds
xor
xchg
loop
jae
sbb
movsl
dec
mov
xor
lods
cmp
insb
adc
xchg
mov
fildl
lea
lods
xor
add
shrl
dec
inc
ljmp
mov
je
lahf
iret
je
pop
sbb
ja
addr16
and
mov
adc
push
jl
inc
lret
cmp
cmc
xchg
fldcw
shrb
movsl
iret
movsl
mov
rcrb
mov
pop
or
xchg
or
aas
mov
pusha
scas
loopne
ret
pushf
mov
loop
es
orl
les
dec
mov
outsl
data16
ss
pop
mov
xor
cld
out
cmp
popa
ds
enter
mov
xor
mov
aam
pop
in
cmpsl
cs
cmpsb
cmp
and
jmp
add
fadd
repz
pusha
call
je
loope
daa
lret
std
sub
sub
sub
mov
and
scas
test
add
sbb
cltd
lcall
mov
inc
pop
and
adc
ss
push
out
jl
dec
jecxz
ret
in
xor
sub
js
mov
in
xchg
movsl
hlt
in
adc
inc
les
xchg
jp
xor
pushf
sub
mov
push
sbb
or
adc
jg
lods
dec
and
ss
jb
sub
mov
inc
push
mov
sub
cmp
xchg
dec
aaa
sbbl
xchg
daa
or
rorb
pop
int
sbb
clc
jae
loop
xchg
scas
enter
insb
out
xor
sub
sbbl
jmp
adc
adc
lret
fucomp
sub
dec
adc
mov
out
lea
jnp
cmpsl
cmp
sarl
inc
pop
adc
js
test
cmc
mov
ss
mov
cmpb
jecxz
jno
push
mov
or
sub
adc
loope
shr
dec
xor
push
add
jne
mov
dec
rorl
xor
dec
scas
leave
mov
xor
inc
and
push
imul
sbb
andl
ja
std
clc
jg
idivl
lds
inc
in
and
in
adc
int
imul
and
sub
jecxz
or
lock
or
jg
adc
pushf
movl
adc
jmp
out
jmp
inc
lret
fsub
std
nop
fxam
cmp
xchg
fsubrl
rcrb
jecxz
mov
int
push
push
push
lahf
mov
xchg
je
outsb
enter
hlt
int
js
inc
sbb
inc
mov
dec
dec
add
rcr
cmpsl
push
es
in
sub
lods
nop
add
dec
sbb
pop
xlat
gs
ja
loop
icebp
shl
lock
adc
mov
jl
lret
mov
popf
pop
movsl
clc
js
sub
insl
test
sub
repnz
jno
aas
adc
mov
jecxz
outsb
mov
jp
popa
sub
int
ds
scas
jbe
mov
scas
xchg
arpl
push
fmul
mov
xlat
gs
data16
add
sbb
mov
mov
lock
imul
pop
mov
add
push
pop
mov
clc
out
into
inc
cmpl
popa
push
xchg
mov
pop
inc
xchg
lods
adc
roll
mov
jns
in
cmpsb
mov
in
in
lret
mov
jle
jl
lret
add
mov
fldenv
sbb
push
test
push
iret
adc
or
popf
pop
scas
mov
mov
lea
adc
pop
das
popf
mov
pop
and
hlt
sbb
jb
sub
xor
jns
xchg
cld
add
stc
fcoms
xor
mov
sbb
addb
sbb
cmp
clc
repz
lods
sbb
cmp
iret
jmp
cmp
mov
add
sub
xlat
cwtl
fs
test
in
and
ja
outsl
xchg
stos
xor
inc
inc
adc
jo
jnp
lcall
cmp
pushw
jecxz
bound
xchg
sub
enter
mov
popa
adc
call
addr16
lret
push
mov
out
lea
jnp
imulb
repnz
or
cltd
decb
sahf
sti
stos
adc
cmp
lahf
test
xchg
popa
inc
pop
mov
and
and
cmp
shrb
dec
lret
int
rep
push
subb
inc
mov
fistpl
fcmovbe
push
mov
fdivl
je
sbb
adc
cld
aaa
sub
inc
xor
gs
out
xchg
aaa
jge
icebp
xor
mov
shlb
jnp
or
shlb
int
aam
int3
mov
rcl
add
mov
and
test
and
mov
cs
movsb
add
das
sbbl
int
and
push
inc
out
mov
pop
or
inc
addl
lods
xchg
hlt
pop
pop
jle
es
jns
inc
loope
cmp
inc
loope
cmpsl
into
push
in
mov
inc
je
adc
popf
xchg
ljmp
push
mov
mov
mov
sti
les
out
push
adc
popa
xor
push
jge
sahf
mov
js
test
ret
mov
jbe
leave
rorb
or
mov
pop
and
inc
in
xlat
add
imul
aaa
aam
ljmp
xchg
add
loop
xchg
aaa
cmp
jns
sbb
hlt
xor
cmp
jle
or
lcall
adc
test
add
and
imul
repnz
scas
clc
lret
inc
das
xor
pusha
inc
pop
jmp
shlb
rol
mov
cmc
stos
jno
sub
sarb
addr16
mov
stc
xor
sbb
fdivs
mov
movl
ret
adc
mov
jno
push
nop
add
aad
popf
mov
sbb
loop
dec
movsl
js
loopne
test
and
popa
sbb
dec
push
push
hlt
cmp
sub
mov
jne
inc
or
or
sbb
mov
jge
std
pusha
xchg
stos
out
lahf
push
dec
dec
sbb
jmp
and
in
dec
mov
stos
xchg
jle
popf
fwait
loope
xor
daa
rcr
inc
jb
pop
dec
or
adc
das
adc
add
pop
jecxz
and
clc
push
mov
je
outsl
insl
int3
bnd
add
jae
and
jge
pop
ror
sbb
mov
or
clc
daa
cmp
arpl
cmc
in
xchg
stc
xchg
push
mov
inc
sbb
sbb
ljmp
sbb
jo
inc
and
push
ret
pop
jbe
xor
jmp
add
dec
pushf
inc
mov
mov
or
loop
mov
sub
mov
aad
adc
test
int
fs
inc
mov
inc
adc
mov
dec
addb
dec
push
rcrb
pop
rclb
dec
aam
mov
mov
stos
jecxz
dec
je
dec
xchg
iret
imulb
int
mov
int3
lock
pop
repz
add
lds
push
inc
jne
sbb
stos
and
or
negl
mov
or
stos
loopne
xchg
fmuls
mov
sahf
add
mov
in
jno
sbb
js
je
lock
pop
pop
sahf
mov
movsb
test
xchg
inc
hlt
inc
test
jl
inc
sub
scas
cmp
out
sbb
scas
popf
int3
ljmp
sbb
mov
ja
int3
or
jno
jecxz
jp
bound
clc
faddl
lods
or
in
mov
dec
lcall
adc
imul
imul
mov
mov
popa
loope
fistps
clc
out
incl
xchg
orb
mov
jae
lds
cmc
in
setbe
cltd
test
out
xchg
out
fstpt
roll
jo
nop
jg
cmp
xorl
sahf
call
jnp
cmovne
ljmp
mov
pop
push
test
add
inc
add
rcrl
dec
push
out
sub
inc
sub
or
add
xchg
xor
pop
addr16
adc
stos
jg
fistps
sub
fs
out
dec
test
dec
sbb
popf
outsb
adc
mov
inc
in
push
cmp
sbb
dec
push
sub
sbbl
fwait
js
and
bnd
push
or
xorl
fs
jae
dec
loope
enter
test
rcll
dec
jae
cmp
inc
or
sarb
out
fidivs
mov
pop
nop
mov
outsl
insb
inc
cmp
adc
dec
pop
mov
xchg
movsl
push
insl
inc
push
add
inc
inc
mov
cmpsl
imul
lds
inc
pop
lods
mov
push
in
in
pop
dec
mov
ja
sbb
and
cmpsl
decb
lret
out
cmp
dec
push
loop
dec
push
sub
push
dec
xchg
pop
leave
push
fnsave
out
in
stos
fidivl
mov
stos
loope
icebp
enter
mov
movsl
pop
cld
sub
mov
repnz
rcrb
fiadds
shr
pop
xchg
shrl
rorl
mov
add
es
in
hlt
jno
dec
and
mov
sahf
shrb
sub
cwtl
pop
rcll
dec
dec
inc
movsl
cmp
sti
jg
dec
jnp
push
cld
adc
repz
push
les
pop
nop
mov
inc
xor
mov
sti
mov
ljmp
jne
repz
inc
or
dec
mov
sbbl
movsl
jne
adcb
test
in
sbb
rorb
mov
push
sbb
push
loopne
xchg
mov
aas
and
nop
sbb
or
daa
pop
inc
jmp
shll
sbb
xchg
add
insl
daa
out
fistps
mov
ds
adc
sub
jo
inc
repz
sub
cmp
add
dec
dec
sbb
cmp
outsl
cmpsl
or
rolb
cs
sub
ja
pushf
sbb
jnp
cmc
test
lret
inc
adc
mov
inc
and
xchg
test
jns
xchg
das
out
mov
das
inc
aas
jp
jno
dec
mov
or
cs
dec
push
sub
mov
cmp
add
stc
adc
jmp
cmp
je
out
or
adc
jmp
push
pusha
loopne
sub
call
inc
ret
int
push
xchg
adc
in
stc
and
sbb
cmc
pop
fldenv
rorb
mov
inc
and
cltd
or
xchg
push
xor
add
xlat
aaa
inc
and
das
outsb
dec
aas
popa
sbb
mov
cmp
jge
loope
insl
mov
add
sbb
fdivrl
adc
fdiv
pop
hlt
fs
or
sub
push
int3
jge
adc
imul
jl
cld
push
pop
orb
mov
ret
loope
xchg
lahf
in
add
negl
repnz
xor
xor
push
inc
mov
mov
dec
mov
push
mov
adc
jge
mov
es
or
add
daa
popf
xchg
ret
lret
das
les
fpatan
adc
inc
xor
or
fisubl
daa
inc
out
xor
jno
mov
push
mov
shlb
fmuls
sub
outsl
cmp
jp
ret
arpl
mov
dec
das
sbb
fmul
js
jbe
add
lea
aaa
cli
mov
movsb
outsb
xor
js
sbbb
scas
fisubrl
jo
int
ret
xor
insl
andl
mov
fcompl
push
daa
cmc
lock
pop
inc
mov
mov
arpl
sbb
insb
mov
pop
jle
mov
add
or
rorl
pop
xlat
or
inc
pop
fisubs
insb
cmc
push
cmp
and
pop
pop
bound
sbb
sub
int
inc
test
sbb
dec
dec
gs
ds
notb
pop
fwait
xchg
mov
push
fstpt
int
lahf
rclb
arpl
loopne
cmovno
inc
je
xlat
ljmp
mov
ljmp
pop
xor
ja
dec
mov
fmull
scas
fcmovnb
fwait
stc
insb
and
xchg
dec
mov
xor
call
mov
mov
pop
push
fsubl
mov
in
pusha
mov
or
shl
leave
cmp
cmpl
sbb
es
push
daa
add
dec
addr16
xor
pop
dec
pop
push
or
fdivl
repz
sbb
leave
shlb
je
jmp
lds
roll
pop
cmp
jmp
data16
xchg
push
hlt
pop
jmp
cmpsl
inc
outsb
lcall
mov
mov
pop
xchg
mov
scas
imul
cli
cmpsl
inc
push
ljmp
out
outsb
in
sub
out
mov
jno
xchg
pop
or
iret
mov
push
xorb
push
mov
in
dec
lods
pushl
inc
daa
push
gs
jmp
sub
lcall
mov
popf
fs
clc
pop
aas
out
arpl
mov
sti
and
jne
test
mov
jl
loop
jl
sub
mov
xchg
out
dec
int3
or
xchg
jnp
clc
mov
jne
mulb
movsl
xchg
lret
push
movsb
sbb
inc
loop
jge
sbb
loopne
nop
popa
test
adc
sub
aam
cli
dec
push
bound
lds
add
push
sbb
aad
lret
cli
pop
xchg
sbbl
sub
mov
lahf
sbb
shll
shlb
je
mov
inc
inc
call
push
xor
inc
mov
sub
and
leave
inc
aam
xchg
int
imul
sbb
adc
xor
or
xchg
xchg
cli
shl
push
scas
fldenv
adc
testl
es
jmp
outsl
ret
mov
in
shlb
or
cltd
jle
mov
dec
dec
pop
xchg
test
dec
push
aam
push
sbb
fmull
dec
inc
lods
mov
cmp
push
enter
mov
aam
add
jle
and
xor
out
repnz
scas
push
jecxz
xlat
ss
and
sub
push
mov
lahf
push
add
pop
popa
fmull
icebp
push
inc
test
out
repz
jb
xor
int
ja
arpl
adc
xchg
mov
in
dec
std
sub
insl
test
pop
loope
mov
xchg
xchg
or
jae
fs
lahf
sub
add
sub
mov
jmp
push
outsb
xchg
pop
adc
inc
mov
cmp
aad
adc
push
adc
xchg
xor
stos
dec
jg
fldt
loope
xor
push
jmp
or
xor
lock
lods
adc
movsb
aad
push
pusha
mov
sti
test
cmp
pop
add
fistl
daa
stos
mov
sbbb
int
int3
popf
mov
mov
lods
test
xchg
loope
daa
in
enter
data16
jne
mov
ficompl
jnp
je
jbe
negl
cwtl
in
mov
ret
imul
mov
movsb
stos
adc
mov
int
sub
pushf
or
sbb
shrb
or
movl
or
xchg
cmp
dec
push
and
inc
inc
inc
sbb
dec
xchg
dec
mov
fidivs
pop
out
inc
jno
pop
movsb
xchg
mov
or
mov
and
adc
cmp
push
sbb
fdivp
gs
xor
and
nop
dec
es
mov
push
cli
pop
shll
in
adc
mov
mov
addr16
vandps
out
cmp
daa
sar
cwtl
pop
jl
xor
jp
mov
jge
cmp
or
cmp
lcall
push
adc
xor
popa
push
call
xchg
fwait
rcll
arpl
mov
mov
shr
mov
movsb
ffree
fdivrs
popf
xchg
push
or
inc
xchg
dec
dec
in
fimuls
das
push
jge
sbb
pop
daa
or
xor
test
jbe
sbb
adc
pop
mov
cmp
mov
push
xchg
mov
push
add
or
pop
cmpsb
outsl
lea
lret
pop
out
inc
mov
mov
xbegin
bound
lahf
stc
je
out
fdiv
call
test
lods
add
adc
xor
sub
orl
pop
pop
jnp
pusha
xchg
sub
push
pop
mov
in
dec
jo
adc
mov
xor
enter
rolb
call
xor
fcomp
rolb
push
outsl
int3
inc
mov
popa
lea
loopne
loop
ljmp
les
xor
or
popf
pop
inc
mov
insl
in
jno
rcll
add
dec
pop
cltd
cmp
push
nop
mov
clc
mov
lods
push
pop
rcrl
cltd
test
add
js
mov
shll
sbb
inc
into
and
sbb
jecxz
js
inc
xor
inc
outsl
je
mov
dec
fiaddl
jae,pn
repz
and
rclb
adc
jo
sbb
add
and
xchg
push
stos
mov
pop
xchg
jbe
out
test
and
jl
xorl
sbb
in
lds
in
mov
xor
mov
mov
cmp
sahf
dec
mov
adc
dec
fcmovu
icebp
mov
mov
in
ljmp
ret
dec
adcb
ljmp
adc
js
jp
jmp
insb
shrl
fldt
iret
mov
fnstcw
ficoms
ret
push
xor
xor
aad
xor
add
hlt
in
ja
dec
inc
adc
pop
leave
xchg
stc
mov
ficoml
cltd
pushf
jp
dec
stos
jle
or
push
lock
bound
popf
cmpsb
jl
pop
jge
sahf
jns
scas
push
ja
jp
cmpsb
xorb
ljmp
sbb
fmull
push
mov
mov
repz
loopne
test
pop
sub
movsl
mov
dec
call
adc
rcrl
pop
cmpl
dec
inc
mov
sahf
mov
jle
xor
ret
mov
cltd
lahf
push
jo
and
ds
movsl
mov
test
adc
in
or
mull
popa
inc
fwait
or
cs
je
and
mov
test
adc
xchg
inc
dec
inc
test
in
in
hlt
sbb
pop
cld
and
adc
ret
push
ret
sbb
iret
push
xor
in
rcr
imul
push
lods
mov
fwait
cmpsl
stc
jmp
push
inc
sti
pushf
lcall
loope
xchg
adc
loopne
add
repnz
adc
daa
es
sbb
cmp
out
or
xchg
out
test
sarl
ror
out
push
sub
pop
test
pushf
mov
js
mov
sbb
jnp
xor
nop
and
in
push
test
cmpsl
push
mov
xor
adc
pushf
xor
in
popa
cmp
lret
js
sbb
in
mov
inc
es
cmp
test
std
add
pop
push
push
xchg
pop
fmul
or
rcrl
mov
pop
sbb
repz
dec
mov
lods
mov
shrb
and
lcall
out
sbb
xor
sahf
inc
loop
stos
out
inc
rcrb
rolb
push
mov
pop
addb
mov
inc
sub
test
and
call
pop
push
outsl
add
outsl
test
and
into
pop
jecxz,pt
mov
mov
test
sub
stos
push
mov
rcrb
mov
xor
lds
pop
jne
xor
or
cmp
fiaddl
leave
test
inc
jnp
lret
cwtl
aaa
inc
shl
add
or
and
and
pop
inc
push
out
in
mov
rorb
mov
cmp
xor
dec
push
fisubl
ret
js
das
dec
adc
cmp
cmp
lea
loop
mov
and
fbstp
lret
cmpsb
adc
rcrl
pop
sub
mov
outsb
stos
out
and
in
jno
xor
les
xchg
lea
scas
inc
pop
lods
and
dec
mov
aas
mov
js,pn
inc
loope
fs
xchg
mov
xor
push
inc
enter
sub
cmpsb
into
out
xchg
mov
cmp
insb
testb
test
or
daa
add
cmp
push
data16
xchg
rcrb
ret
push
mov
test
xor
loope
sbb
lret
xchg
pop
out
dec
push
in
test
push
mov
push
push
pop
push
ror
jmp
call
pop
ja
pop
int3
hlt
cmp
lret
xchg
dec
push
inc
jne
sbb
leave
push
push
test
xlat
mov
or
mov
cmp
mov
scas
xchg
cmpsb
sti
out
mov
lods
int3
in
imul
jle
cmp
mov
out
cmc
dec
xchg
xchg
cltd
loope
pop
lock
dec
cmp
inc
add
iret
outsl
and
sbb
jns
cwtl
mov
data16
imul
int
js
cltd
cmp
outsb
jg
out
and
jecxz
or
mov
fimuls
repz
cld
xchg
sub
pop
jg
divb
in
push
or
pop
fsubrs
jmp
dec
cs
sbb
xchg
pop
imul
pop
add
cmp
mov
sub
inc
lea
dec
dec
lret
out
in
popa
std
jae
scas
jae
rcr
adc
mov
cs
mov
shl
sbb
pop
xor
clc
js
sub
xchg
pop
dec
lret
cld
loop
mov
cmpsb
or
xchg
iret
xchg
frstor
xchg
push
pextrw
sub
push
mov
fdivrl
or
xchg
dec
je
push
sub
push
insl
mov
inc
jnp
or
add
or
in
cmp
imul
mov
jbe
mov
or
aaa
lods
fabs
cld
aam
dec
adc
dec
and
in
les
mov
lcall
addl
leave
test
mov
pushf
xor
xchg
les
sbb
in
nop
adc
pushf
mov
in
push
inc
adc
dec
add
fadds
jl
sahf
mov
fwait
jb
mov
jge
stos
push
pushf
jg
bound
xor
sub
add
in
lret
sbb
mov
out
xchg
xchg
mov
ret
testl
jb
jge
imul
cmp
cltd
jno
jb
cwtl
and
xor
leave
fimull
add
inc
lock
call
pop
and
out
and
test
mov
mov
jmp
in
xchg
imul
adc
sbb
jecxz
aas
inc
push
aas
push
lds
lock
push
into
fstpt
stos
xchg
jbe
mov
mov
mov
lahf
test
ror
inc
mov
lcall
mov
pop
pop
dec
cmp
push
dec
pop
adc
idiv
in
xchg
outsb
jno
mov
fwait
inc
in
cmp
xchg
popf
jle
mov
int3
inc
ret
sbb
inc
lods
out
jbe
lret
push
cmpsl
daa
mov
jl
scas
or
dec
shrl
cwtl
pop
mov
cmp
inc
repz
movsl
or
je
pushf
inc
sub
mov
adc
out
jae
mov
int
shll
das
aaa
inc
xchg
adc
mov
arpl
int3
inc
xchg
cmpsb
sti
add
cli
ja
out
push
add
and
dec
xlat
sbb
out
mov
loop
xchg
push
pop
aam
push
jno
lahf
das
aad
sbb
pop
xor
inc
popa
mov
shl
popf
push
pop
adc
lea
fcompl
hlt
mov
xchg
imul
scas
xchg
xchg
mov
adc
mov
dec
cli
movsl
dec
pop
adc
push
int3
gs
lea
js
in
rorl
dec
out
hlt
sti
xlat
sub
lods
xor
ja
cmpsl
jle
cvttps2pi
shll
dec
ljmp
xor
cmpsl
sub
mov
jl
aam
rcr
add
pop
xor
jno
cld
mov
or
dec
ja
mov
lods
stos
xchg
xchg
dec
hlt
stos
hlt
out
lea
cmp
xlat
fldcw
and
add
sti
add
fisubs
jle
lods
cmpb
jns
inc
inc
fbld
pusha
pop
xor
ret
xor
pusha
cmp
fwait
fisttpll
and
ss
lret
sbb
push
aaa
mov
mov
lcall
xor
fldt
leave
lods
insb
outsb
pop
pop
jnp
push
out
pop
dec
mov
mov
xchg
hlt
push
jmp
push
mov
nop
in
jp
lcall
in
sub
push
stos
out
arpl
imul
add
inc
inc
mov
shll
and
xchg
jmp
lea
cld
pop
les
aad
clc
es
gs
mov
in
ss
mov
cli
iret
ss
or
jbe
cmp
jg
dec
and
jns
and
inc
test
iret
xchg
cmove
int
pop
mov
xchg
lcall
pop
out
add
inc
in
movsl
jae
shr
stc
add
fstpt
dec
mov
repz
dec
lcall
das
cmpsl
jge
push
pop
lds
sbb
daa
sub
loopew
push
xor
adc
push
sub
xor
hlt
xchg
mov
lds
daa
and
sbb
cmc
cmp
mov
enter
cwtl
cltd
mov
dec
mov
loopne
popf
jmp
mov
inc
add
pop
jb
shll
mov
clc
int3
mov
test
mov
test
jae
daa
cmp
sub
mov
ficoms
adc
xor
pusha
mov
fcoml
fwait
stos
popf
inc
pop
cmc
sub
mov
mov
adc
mov
mov
or
xchg
mov
mov
repnz
xchg
sbb
cmp
xor
neg
mov
inc
and
adc
mov
out
sub
aad
jo
sub
and
stc
xor
int3
das
dec
loop
roll
scas
and
lcall
mov
or
pop
loope
test
adc
or
jp
in
lret
sti
loope
mov
pop
imull
loope
mov
test
scas
pop
loopne
cmp
jno
roll
inc
inc
outsb
hlt
mov
push
fistpll
mov
fistpll
push
ds
fisttps
iret
mov
std
pop
xchg
mov
nop
mov
or
fimuls
call
mov
adc
push
pop
push
aaa
sbb
dec
shl
jecxz
sbb
das
push
inc
sub
cmc
push
shlb
loope
xchg
cmp
std
push
nop
pop
stc
xchg
outsb
dec
mov
cmpb
fsts
div
pop
imulb
je
sbb
mov
sbb
add
test
flds
bound
add
sbb
rclb
xor
xlat
mov
jge
add
adc
in
rcll
dec
ret
ds
push
loop
and
fisttpll
fs
cmp
and
pop
adc
xchg
push
std
dec
loopne
popa
cltd
pop
sbb
pop
cmp
je
cwtl
jbe
std
imul
mov
jp
call
xor
std
xor
int3
in
adc
mov
pop
lods
adc
icebp
add
xor
pusha
ja
setae
inc
add
iret
imull
movsl
insb
lret
pop
mov
cltd
xchg
and
jns
sbb
mov
sahf
cmp
jns
loopne
cli
mov
mov
pop
jl
adc
mov
fidivrs
and
leave
adc
adc
ret
popa
or
cmp
mov
imul
loope
mov
mov
or
pop
xchg
icebp
push
aam
je
push
ljmp
mov
dec
int3
pop
sbb
mov
les
push
pop
hlt
push
pusha
fwait
leave
inc
sub
jmp
loope
mov
cmp
mov
or
cmp
mov
cmpsb
and
scas
test
in
dec
insb
pop
xor
leave
add
out
cmp
sub
aad
mov
and
lea
push
dec
mov
jmp
je
cmc
adc
push
xorb
scas
insl
into
add
scas
inc
push
push
gs
in
pop
pop
mov
sahf
shlb
test
stc
push
lahf
push
loopne
push
rorl
mov
dec
mov
xlat
jmp
aas
imul
jnp
pushf
jl
add
xchg
inc
add
js
push
iret
mov
jmp
ljmp
pop
scas
jmp
stos
lods
ljmp
divl
inc
push
cltd
xchg
and
jmp
jmp
xchg
int3
aad
pop
shrl
mov
ror
lret
mov
and
ret
cli
stos
aam
mov
push
xchg
js
mov
xchg
mov
jb
dec
cld
fisttps
xor
and
xchg
mov
ds
outsl
iret
subl
or
jl
jl
push
sub
pusha
jo
sub
decb
add
push
cmp
xchg
jl
dec
xlat
sub
xchg
rcrl
lret
sbb
adc
repnz
leave
sub
sbb
or
rcll
sarb
xlat
mov
stos
enter
mov
sub
mov
xchg
dec
addb
pusha
into
or
sar
insb
cmpl
lock
sahf
lea
jp
jl
adc
inc
fistps
xchg
or
cmpsl
xchg
mov
popf
mov
mov
adc
jno
stc
clc
aad
ret
lcall
dec
mov
sahf
adc
and
or
add
dec
pop
outsb
lea
push
test
call
sahf
cli
pop
adc
addr16
cli
mov
mov
push
fnstenv
arpl
out
popf
adc
dec
add
sub
and
jp
jecxz
dec
pop
stos
daa
pop
outsl
mov
jnp
fmull
mov
mov
daa
xchg
xchg
mov
iret
pop
jg
inc
popf
js
insl
push
ljmp
shrb
inc
fisttpl
push
adc
push
push
out
cmp
gs
std
sbb
mov
xchg
clc
xchg
mov
sub
subl
mov
add
testl
mov
mov
mov
dec
jno
outsl
pop
push
cmp
xchg
push
dec
iret
sub
or
add
mov
and
imull
xorl
outsb
adc
mov
in
cld
push
pop
xchg
call
int3
cmp
fstpl
mov
mov
fs
mov
enter
fwait
imul
scas
les
stc
fstpl
orb
cwtl
cmpsb
lock
cmp
aam
push
ds
lods
lods
lret
aam
test
adc
dec
cld
loop
loope
enter
int3
inc
daa
lds
jp
loopne
sti
outsb
jns
mov
jns
cmc
pushl
fdivl
or
sub
mov
ss
sti
arpl
adc
fwait
in
lds
or
and
in
fdivrp
iret
mov
popf
sub
sub
cmp
aaa
push
xchg
mov
jl
xchg
inc
fadd
imul
negl
dec
dec
lods
xor
cmovno
mov
cmp
lcall
rcrb
outsb
mov
sub
mov
push
mov
inc
in
push
mov
sbb
pop
xchg
add
les
insl
jle
pushf
xorb
mov
jmp
inc
in
dec
jae
enter
shr
xor
popf
mov
aad
lahf
xor
push
adc
jecxz
cmp
jae
inc
push
mov
shrb
xor
dec
xor
and
pushf
dec
sahf
sbb
inc
jne
lret
imul
lods
push
iret
das
sub
rcrb
xchg
cmp
insl
mov
fxam
arpl
and
ret
lahf
mov
outsb
push
loopne
lahf
repz
inc
jae
jnp
popa
xorl
and
pop
lcall
jne
mov
fdivp
lahf
inc
cs
repz
inc
jmp
dec
sub
bound
fnstsw
into
loopne
mov
dec
loope
out
outsb
rol
xorb
fiadds
out
adc
aad
mov
adc
dec
jecxz
sub
mov
lret
dec
push
xchg
loopw
fnstcw
mov
ja
lcall
arpl
sysexit
loopne
cmc
xor
les
leave
cmp
test
jge
call
ss
jns
pushf
dec
ljmp
ret
or
or
xchg
nop
mov
aas
push
pop
mov
cmpsl
sbb
fnstenv
dec
jp
shll
xor
dec
fcomps
lcall
pop
mov
or
add
les
repnz
push
mov
mov
jg
add
or
push
shll
adc
dec
cmpl
xor
js
ljmp
push
lods
fcoms
jae
ret
inc
jp
add
pop
sub
fsubs
lea
loope
outsb
scas
mov
bswap
out
or
test
or
lods
sub
or
xor
icebp
std
test
xchg
xchg
inc
sbb
pop
js
pop
sti
stos
xor
sti
in
loopne
mov
and
data16
gs
mov
mov
sub
fwait
pop
ret
inc
dec
xchg
cmp
adc
inc
clc
pushf
pushf
sbb
pop
movsb
les
mov
or
xor
int3
insl
mov
stos
xor
cltd
icebp
cmp
loopne
add
cwtl
xchg
sbb
xor
popf
icebp
inc
popa
test
ret
mov
push
js
or
mov
dec
aam
sub
lret
push
not
xor
dec
lods
dec
lea
das
mov
adc
mov
push
or
cmp
xchg
lods
mov
stc
call
inc
jmp
out
cli
sbb
hlt
jp
lock
je
dec
dec
add
add
mov
icebp
pop
mov
jmp
sub
sub
int3
insb
push
mov
push
sbb
sub
into
mov
and
repnz
lcall
es
or
pop
lret
int3
sbb
daa
into
cmp
aam
mov
pusha
test
jmp
int3
repnz
and
pop
and
nop
jle
push
pushf
mov
or
jp
sub
mov
push
pop
jnp
test
sti
xor
add
or
add
add
cmc
into
loope
mov
fisubrs
cli
xchg
push
repz
cmp
rolb
call
push
aad
sti
push
pop
dec
or
pop
fildll
dec
cltd
js
ss
je
mov
mov
iret
pop
mov
inc
inc
mov
dec
fcom
add
ja
popa
cltd
inc
addr16
ret
mov
cmp
inc
iret
adc
jge
push
mov
xchg
pop
mov
in
add
mov
mov
or
cmp
out
je
adc
sub
sbb
cltd
sbb
sub
imul
jp
mov
mov
into
lcall
nop
add
or
aam
add
jl
adc
mov
or
les
fs
push
movsb
cmp
pop
cs
testl
fldenv
cmp
mov
push
imul
mov
call
jae
imul
fs
stc
add
scas
iret
dec
leave
stos
inc
fdivrp
cmp
cwtl
mov
mov
int
push
sub
sti
dec
addr16
inc
add
jb
rcll
iret
leave
ss
dec
aam
mov
push
js
clc
push
das
inc
out
cltd
fisttpl
jecxz
inc
rorl
lods
movsb
fldcw
shl
mov
adc
dec
stos
pop
push
in
dec
in
data16
aaa
jnp
lea
sub
mov
jmp
jns
xor
testl
imul
cmp
mov
sub
test
insb
sbb
pop
jl
mov
sub
sub
pop
mov
dec
add
xchg
mov
aad
popf
repnz
push
loope
xchg
jge
push
xor
pop
or
and
rcr
out
ljmp
jnp
add
and
inc
xor
hlt
fisubrl
inc
and
cli
push
int
sub
adc
xor
sbb
loope
adc
or
movsb
jbe
jl
mov
adc
sbb
xchg
aaa
pop
mov
inc
jmp
lcall
mov
mov
stc
jle
loop
out
stos
inc
sbb
xchg
sbb
cmp
ret
and
xor
cmpsb
xchg
inc
xor
stc
mov
xchg
mov
mov
pop
xlat
out
mov
fistpl
movsl
mov
mov
out
cld
mov
mov
mov
xor
sub
test
divb
pop
cmc
xor
test
or
inc
roll
or
int
sahf
shll
imul
lods
xchg
jns
insl
jo
in
mov
add
mov
or
pop
sub
lret
mov
dec
in
lahf
scas
fnsave
stc
mov
add
call
dec
push
pop
sbb
push
movsl
out
gs
jae
and
jo
test
stos
or
les
cmp
loopne
in
push
fsubl
ret
xor
mov
push
dec
out
stos
cmp
cmpsl
mov
xor
lods
scas
int
das
ljmp
add
js
mov
xor
xchg
dec
xchg
lret
and
sub
imulb
popa
xchg
std
stc
xor
int
xor
lret
dec
ror
insl
ds
xchg
inc
sbb
icebp
daa
dec
xor
icebp
mov
mov
in
push
mov
enter
imul
dec
ljmp
les
pusha
adc
fdivs
std
push
dec
mov
add
rcll
cmp
push
lahf
push
fwait
mov
cmp
pop
adc
add
cmp
xchg
xchg
pop
xor
cmp
in
test
das
jge
insl
int
daa
pop
jg
cmp
pop
lahf
and
popf
and
lret
stc
sub
cmpsb
push
or
dec
shrb
shrb
mov
xor
jno
xor
add
xor
cmp
movsl
repz
xchg
jge
cld
shrb
cltd
push
mov
call
mov
push
inc
ja
sbb
xor
jno
nop
or
mov
jle
lods
cltd
je
xchg
sub
xchg
and
gs
pusha
push
adc
cwtl
dec
out
xchg
js
inc
gs
pop
jno
stos
pop
adc
xchg
leave
lods
jbe
stc
jb
mov
loopne
outsb
js
sbb
dec
ja
cmp
cmp
je
cmpsb
dec
cmp
sub
mov
rol
lret
fcmovnu
dec
stos
mov
push
inc
dec
into
leave
mov
ds
lods
xor
in
out
and
push
loop
adc
mov
in
unpcklps
ja
fisubrl
cmp
adc
in
ficoms
xchg
scas
imul
inc
xchg
xor
addl
loope
mov
mov
iret
sarb
jns
decl
pop
movl
mov
mov
rcrb
jbe
shrl
mov
xor
mov
jo
test
or
push
lock
jp
cmp
in
xchg
inc
pop
inc
jo
rcrb
pop
nop
sub
xorb
mov
mov
push
jb
mov
sbb
jne
jle
push
jge
jmp
aam
pop
test
dec
jns
fnstcw
fdivr
inc
jl
psrad
shll
aas
jmp
jmp
sub
pushf
in
ror
negb
pushf
sarb
les
popf
add
sub
dec
lock
cmpsl
std
mov
sub
iret
cmpsb
clc
and
aas
sbb
outsl
fistpll
mov
adc
movl
cmpsl
xchg
push
and
lds
call
or
subb
pop
clc
dec
mov
mov
adc
shrl
nop
add
je
orb
push
insb
ret
push
adc
popl
mov
cmc
sub
sub
or
sti
aas
jle
popf
dec
sub
mov
mov
and
sbb
jno
roll
sbb
jmp
mov
sub
push
sbb
mov
aad
push
and
cmpsl
lret
loopne
xor
std
mov
sub
add
xchg
scas
xor
pop
mov
inc
or
sub
xor
xorb
cmp
ja
pop
cmpsb
iret
push
nop
popf
mov
adc
mov
or
inc
mov
inc
lea
les
repnz
and
shlb
iret
jae
mov
inc
imul
hlt
repnz
repz
cmp
sub
or
mov
jmp
dec
cs
adc
and
xor
push
scas
sub
jl
sub
nop
cmp
pusha
ret
in
xlat
js
inc
sub
aaa
std
push
ljmp
mov
stc
ja
and
push
inc
inc
jg
cmp
add
fdivrs
jl
or
pop
fdivrl
divb
pop
xor
push
jecxz
into
pop
or
loop
mov
imul
sbb
faddl
or
int
mov
pop
lock
xor
jl
clc
fbld
xor
cmp
dec
fwait
in
out
xor
push
jg
loope
sbb
or
inc
gs
imul
push
xchg
jb
sbb
lcall
dec
scas
mov
push
push
test
adc
mov
jbe
movq
xchg
inc
popf
mov
repz
enter
sub
pusha
dec
insl
int3
roll
push
int
jns
mov
adc
mov
daa
jl
jnp
std
push
dec
leave
add
mov
mov
pushf
adc
add
cwtl
push
in
xchg
mov
jg
into
inc
ret
mov
and
and
inc
cs
mov
xlat
ss
rcrl
popa
addr16
xchg
sbb
mov
stos
imul
xor
xchg
pop
pop
out
adc
rcrl
mov
push
pmaxsw
cmpsl
int
sbb
stos
xor
push
sub
mov
cltd
inc
and
push
stos
cwtl
daa
xor
int
cld
call
rolb
dec
mov
shll
mov
aam
pop
call
ret
fcoml
out
mov
shrb
jbe
sbb
outsb
dec
pop
sbb
xchg
push
mov
push
movsb
sub
cmc
sub
jns
sub
push
fwait
adc
int
repz
xor
xchg
dec
push
and
jmp
mov
gs
ds
js
fwait
inc
ja
aam
fisttpll
xchg
xlat
sbb
int3
mov
fadds
mov
mov
aad
stos
or
push
mov
and
adc
leave
adc
imul
sbb
pop
xchg
mov
mov
mov
ret
leave
add
arpl
jmp
jp
sub
jo
sbb
orb
les
push
pop
sti
sub
popa
sub
data16
pop
sbb
fwait
xchg
pop
inc
mov
jnp
jmp
mul
lret
add
pop
int
stos
sbb
pusha
rcrl
enter
xchg
or
dec
arpl
leave
in
pop
xor
jmp
adc
xchg
xchg
cmpsb
jecxz
xor
fmul
pop
mov
mov
pop
ljmp
cli
lock
insb
hlt
dec
notl
test
or
inc
mov
or
gs
push
lret
iret
jmp
pop
pop
xor
arpl
and
ret
call
stos
adc
aaa
cs
stos
movsb
imul
xor
mov
enter
ja
aam
xor
fldenv
cmpsl
xlat
cmp
inc
and
adc
xchg
repnz
incl
rcr
dec
test
and
repz
fistpll
fildll
fs
out
into
add
mov
clc
mov
cmp
imul
mov
pusha
shrl
ds
xchg
pushf
jnp
cltd
mov
xchg
imul
inc
adcb
or
push
ss
pop
fcompl
or
cmpl
jb
sub
jp
cmp
test
jmp
cli
add
jbe
xlat
cmc
repz
cmp
imul
dec
test
mov
ja
std
mov
cmp
aad
pop
pushf
mov
testl
sub
fisubrs
mov
cld
mov
sahf
out
jne
pop
pushl
inc
out
add
dec
adc
and
dec
push
call
adc
lods
xor
in
mov
sub
xchg
in
fistpll
pop
gs
adc
cwtl
pop
mov
jl
notb
popf
mov
jge
fs
dec
out
lock
cmp
imul
mov
cli
pop
mov
dec
pop
inc
sub
lahf
out
xchg
cltd
jne
in
jae
pushf
add
stc
adc
push
mov
or
cmp
lods
adc
xchg
movsb
aas
adc
xchg
sub
pop
popf
lea
arpl
std
cwtl
lret
std
lahf
dec
rep
cmc
cvtdq2ps
shlb
mov
not
push
sub
and
addr16
xchg
rclb
mov
ret
mov
sbb
cmpsl
fimull
imul
das
sahf
mov
stos
jl
ret
test
pop
jecxz
and
ds
ja
xchg
push
jne
add
fcoml
mov
cmp
call
jns
mov
jg
es
bnd
mov
cmc
sbb
cmc
pushf
movsl
push
idiv
jnp
sub
jecxz
out
push
cld
mov
int3
push
jno
int
movsb
mov
jo
sub
scas
leave
dec
andb
loope
sub
push
dec
mov
ficoml
mov
jge
sbb
xor
and
mov
jmp
lods
cld
leave
sub
nop
negb
mov
insl
imul
or
mov
and
mov
push
popf
xchg
lahf
xchg
cmc
shl
adc
cmpsl
mov
lods
cmp
and
sub
adc
cmp
pop
js
and
ss
sub
inc
in
loopne
clc
aam
inc
mov
xchg
aam
stos
and
addr16
mov
pushf
or
mov
pop
and
test
mov
lods
cmpsl
and
loopne
xchg
rorb
iret
add
cmp
push
dec
pop
jecxz
or
repz
add
jno
jle
inc
xor
and
sbb
in
cwtl
imul
pop
sbb
mov
and
addl
outsl
fistl
cmp
inc
cmp
in
jae
movhps
shlb
inc
mov
sub
aas
push
std
rorb
push
outsl
sar
inc
ret
dec
loopne
imulb
fsts
cmpsb
cmp
jae
scas
rcr
js
fdiv
incb
pop
push
mov
sbb
push
int3
das
loope
or
mov
add
ds
shll
xor
movsb
push
adc
out
std
dec
scas
out
adc
pop
or
fldt
cmp
or
repz
mov
xchg
in
pop
imul
scas
jae
cmpsb
shlb
push
rclb
xchg
xchg
pop
and
pop
mov
cmp
mov
and
in
push
cmp
lods
stos
loop
ljmp
ret
push
sbb
jecxz
call
out
jo
mov
adc
push
push
les
xchg
add
pop
xor
sub
mov
xchg
jle
out
dec
sahf
insl
or
mov
cwtl
popf
lods
aam
in
sar
or
lret
loope
and
xchg
xchg
loop
rolb
mov
clc
and
repnz
mov
cmp
mov
fsubp
aas
jns
out
stos
mov
xchg
xor
ss
xor
and
pop
sub
imul
or
pop
xchg
sub
inc
fstps
xlat
mov
mov
add
dec
test
pop
jbe
sub
lock
jge
push
add
lods
jmp
ret
pop
dec
jecxz
xor
shlb
mov
or
inc
cmpsl
jo
es
or
in
or
pop
or
cmp
into
xchg
dec
mov
adc
pop
out
lcall
hlt
ljmp
in
int3
jbe
stc
imul
pop
arpl
in
outsb
cmc
lahf
shlb
cmp
mov
xchg
in
stos
mov
scas
push
dec
rclb
call
sub
rcrl
jl
lret
lahf
inc
push
add
or
mov
or
or
jmp
adc
xchg
inc
mov
push
fsub
xlat
xchg
in
cltd
mov
cmp
in
mov
das
or
in
sbb
mov
or
into
das
cltd
js
inc
sbb
loopne
movsb
movsb
testl
out
pop
shll
bound
jns
xor
lods
add
addr16
adc
insl
xchg
mov
xlat
xchg
loope
pop
lods
mov
xlat
addl
adc
jl
and
sbb
cli
mov
lahf
inc
lea
jecxz
and
arpl
in
stos
fsubp
lods
cmp
xor
cld
adc
flds
je
repz
push
mov
mov
mov
fs
test
dec
mov
xchg
inc
mov
xchg
int3
mov
inc
cmpsl
sub
lds
stos
adc
aam
cld
mov
adc
lea
cmp
js
shrl
and
pop
test
lahf
sub
jl
daa
sub
add
out
mov
xchg
testl
cmovle
mov
push
ja
mov
and
mov
daa
sbbl
inc
pop
shrl
icebp
mov
add
lcall
pop
cmpsb
pusha
sbb
inc
pop
insl
shrb
push
outsb
jne
adc
add
cld
loopne
int3
xor
stc
jecxz
popa
push
jb
rcl
fcmovbe
add
sbb
pop
jb
test
mov
stc
pop
dec
dec
jbe
mov
lock
das
das
dec
pusha
jns
jge
cmp
jno
jle
cmpsl
or
enter
adc
mov
hlt
pop
movsb
adc
xchg
xchg
mov
or
outsl
imul
xchg
sbb
pop
aaa
inc
jge
cmc
inc
arpl
or
arpl
insb
xchg
into
dec
add
xchg
jl
pop
movsl
push
lret
mov
out
push
dec
js
cmp
sbb
jno
popl
xor
lahf
mov
cmpsb
inc
pop
push
popf
sub
ja
mov
adc
mov
xor
in
cli
popa
scas
push
xor
outsl
pop
ja
cltd
sub
jle
cmp
mov
mov
xor
xchg
inc
cmp
dec
addb
push
repnz
ljmp
test
inc
push
arpl
movsb
les
cmpsb
pop
and
mov
enter
pop
cmp
dec
push
cmp
mov
cltd
adc
mov
stos
mov
jae
movsl
out
cwtl
mov
push
ret
sbb
addr16
mov
mov
and
push
call
lods
adc
iret
cmc
cmp
psrad
add
lods
rclb
add
sbb
mov
push
sbb
test
push
stc
enter
mov
or
mov
pop
inc
jp
lods
dec
mov
push
int
adc
add
jbe
xor
lcall
pop
clc
mov
cmpl
jne
jbe
sbb
and
inc
je
sti
push
push
clc
stos
and
xor
cmpsl
inc
mov
jl
mov
sub
loopne
mov
jg
push
aaa
jo
les
rcll
pop
pop
fcmovnbe
xchg
inc
loope
movsl
add
clc
push
jne
add
int3
cs
iret
and
ljmp
aad
lds
sbb
je
jge
xchg
adc
movsl
cld
hlt
or
ret
enter
les
mov
and
cwtl
jl
xchg
mov
adc
int3
mov
cmp
or
gs
popf
bound
imul
adc
mov
jo
jae
fisttpll
std
outsb
lret
movsb
lods
mov
jp
popa
and
jecxz
mov
xchg
test
ss
and
push
in
and
out
stos
repz
popa
push
sub
push
pop
cmpsb
cwtl
dec
cmc
in
jo
jb
fstp
out
stos
mov
and
cmp
inc
xchg
dec
push
dec
and
jne
cwtl
xchg
mul
push
pxor
dec
fwait
push
pop
outsl
mov
xchg
mov
movsb
pop
pop
xchg
leave
add
insb
jecxz
sbb
dec
push
push
movsl
gs
mov
cmp
daa
xor
mov
sahf
enter
cld
and
test
jae
push
mov
stos
idivl
out
inc
mov
mov
jb
pop
dec
cs
mov
xchg
imul
push
adc
pop
movsb
nop
or
sub
sub
and
fimuls
test
insb
sbbb
lret
fldenv
cli
out
mov
out
xchg
sahf
mov
push
push
sbb
cwtl
shlb
mov
jne
outsb
cwtl
out
test
outsl
imul
sub
jmp
test
inc
ss
int
mov
cld
pop
pop
hlt
fnstenv
jb
stos
inc
bound
dec
sbb
int
mov
andl
push
sub
jp
add
aad
sub
lret
jae
repnz
cli
rol
jg
inc
push
addr16
jno
dec
mov
sbb
jg
aas
jb
cmp
pop
inc
pop
in
cmp
movsl
lods
js
cmpsl
mov
cmp
add
fldenv
pop
mov
test
fsubr
in
jmp
testl
mov
in
nop
sahf
mov
mov
jnp
stc
pop
popf
ret
jge
mov
test
mov
cltd
and
xchg
or
pop
cmp
test
push
or
jo
fisttpl
das
pop
in
push
lods
sahf
sbbl
cmp
jle
inc
inc
mov
dec
jmp
jno
aaa
nop
hlt
nop
adc
mov
cmp
mov
pop
incl
xchg
dec
cld
subl
push
shll
repnz
cmpsl
repnz
outsb
sub
sub
add
pushf
add
loop
roll
jb
aam
loope
ds
cmp
ss
rorb
std
inc
or
aas
in
lods
xchg
mov
lret
mov
pop
jne
cs
mov
push
gs
cltd
lods
jno
jge
shlb
loop
inc
pusha
mov
loopne
enter
add
mov
out
jne
pop
movsl
inc
pop
push
add
aas
add
push
pop
adc
outsl
jns
cmpb
mov
xchg
int3
sbb
cmc
in
int3
jecxz
cs
mov
test
stos
xchg
mov
nop
jb
stc
out
mov
dec
aam
push
and
sub
push
xorl
or
fadds
aaa
sbb
negb
aas
aaa
je
icebp
jmp
int
add
jge
jno
lret
fdivl
lock
lret
test
in
scas
std
ja
pop
adc
push
inc
punpckhwd
pushf
cmpl
subb
inc
scas
sahf
mov
loope
jb
jge
jle
and
xor
mov
sahf
mov
outsb
inc
sbb
les
imulb
nop
inc
cmpsb
jle
mov
inc
lret
jbe
ret
mov
setnp
inc
mov
push
mov
push
xor
cmp
fldt
add
int
pop
dec
scas
cmp
mov
cs
push
jmp
adc
cli
xor
jb
xor
inc
dec
and
inc
or
mov
sbb
sub
scas
jbe
sbb
dec
mov
jae
adc
cmc
lock
pop
inc
push
add
pop
adc
xchg
jle
inc
das
cmp
sti
mov
mov
lahf
adc
adc
inc
ds
jg
xchg
mov
cmp
ds
adcl
inc
mov
in
or
enter
repz
addr16
cmc
clc
cmc
sahf
xchg
cld
test
sbb
pop
inc
or
jle
cmp
fmul
mov
cmc
or
xchg
aam
nop
sub
sub
mov
aaa
xchg
pop
dec
cmp
mov
fsubrp
out
aas
pusha
push
icebp
lea
mov
lcall
sar
lret
or
jl
das
cld
ljmp
cmpsl
xchg
popf
or
xchg
sbb
xorl
test
hlt
fisubs
loopne
mov
daa
mov
xchg
ffreep
mulb
mov
aas
les
ret
jmp
out
lock
xchg
add
cmpsl
sbb
add
andb
xchg
jmp
xlat
fdivl
sbb
sbb
mov
sub
orl
movsb
int3
in
ja
stc
inc
and
sbb
mov
or
dec
jp
xchg
mov
cmp
push
mov
enter
out
lret
mov
fincstp
test
sub
aam
mov
sub
jo
ja
outsb
sbbl
sahf
and
jl
jns
sahf
pushf
jae,pn
pop
add
add
push
add
scas
fldl
test
in
mov
mov
sahf
mov
shrb
add
mov
mov
clc
mov
clc
fs
int
das
mov
mov
pop
pop
xchg
xor
sub
mov
or
gs
js
lcall
leave
jl
push
jecxz
es
int3
cmp
xchg
shl
push
aam
arpl
push
stos
test
jns
mov
cwtl
mov
mov
insb
aad
je
shrb
subb
aad
ficomps
sub
and
shlb
shlb
and
mov
jecxz
and
lods
inc
loop
push
xor
pop
sub
mov
and
ret
je
movsb
movsb
loop
xor
adc
lock
daa
je
or
fisttps
repnz
arpl
out
leave
dec
xchg
jo
inc
sub
int3
test
mov
scas
jmp
mov
jl
xchg
add
mov
cmp
aas
adc
sbb
inc
and
jo
and
inc
adc
add
icebp
ret
cmp
dec
sarb
mov
or
test
in
add
jle
cmp
sbb
sub
pop
decb
fists
repz
pop
and
cmc
mov
and
xor
sub
cmp
stc
fcmovnb
inc
aad
jge
stos
fldt
insb
sbb
xchg
push
xor
decl
push
pop
gs
arpl
ja
jp
push
adc
mov
push
pop
sarl
out
sbb
xchg
xchg
cwtl
adc
lods
xchg
mov
dec
test
movsl
push
pusha
mov
insb
mov
push
cwtl
cli
cld
mov
hlt
insl
cmc
rclb
leave
movsl
jecxz
imul
lcall
push
nop
out
ret
cs
push
testl
xlat
daa
shrl
push
sub
sarl
fidivrs
add
pop
add
inc
stos
lock
movb
inc
and
dec
daa
mov
jmp
cmp
clc
mov
rcrl
ljmp
pop
mov
pop
les
xor
or
popa
cmpsl
mov
fldcw
push
dec
sbb
lret
stc
iret
es
sbb
or
xchg
cs
int
out
dec
and
out
jp
lret
dec
call
pop
test
push
pop
aad
jno
jp
sbb
xor
sbb
popa
xorb
add
in
xor
in
sub
mov
cmp
outsl
or
inc
sub
xor
push
jno
mov
pop
cs
lods
add
inc
cwtl
mov
jbe
stc
mov
inc
xor
fsubrs
pop
xor
daa
pop
mov
div
adc
shl
addl
xchg
fisubl
cld
push
dec
data16
sbb
adc
iret
push
div
add
outsb
xchg
aam
push
inc
fidivs
mov
push
add
es
mov
mov
insl
in
aaa
xor
es
mov
push
out
scas
xchg
sub
lods
out
sbb
popa
sahf
cmp
jb
rorb
cmpsl
mov
mov
pop
xor
sbb
xor
sub
mov
cld
pusha
addl
inc
test
cmpsb
cmp
insw
iret
test
pop
lods
int3
leave
xchg
stos
out
jge
dec
ljmp
mov
mov
mov
clc
ljmp
pop
inc
or
lret
aam
shlb
jbe
xchg
sub
adc
inc
push
xor
jno
jmp
iret
xor
push
mov
inc
nop
mov
das
insl
sub
fcompl
fcmovb
fdivl
mov
mov
pop
dec
call
inc
cmpsl
sub
pop
add
dec
data16
inc
push
in
add
xchg
pop
sub
movsl
or
jge
aad
mov
aad
dec
mov
pop
into
jg
dec
dec
andl
in
inc
sub
mov
pop
clc
call
inc
movsl
cmc
aam
mov
enter
inc
stc
test
add
and
add
pop
das
rclb
jg,pn
lds
cmc
std
repnz
movsl
dec
int3
jb
cmp
test
lcall
mov
jl
insl
dec
pusha
dec
popa
push
dec
mov
cmc
ljmp
sbb
mov
xchg
mov
pop
sbb
test
inc
xor
adc
pop
and
ret
xchg
sub
mov
xor
jge
daa
mov
stos
orl
sbb
ficoml
or
xchg
ficomps
inc
adc
push
out
jne
or
std
lock
es
loop
mov
xor
pop
inc
xor
ret
test
outsb
adc
mov
cltd
data16
hlt
lods
fcmove
mulb
inc
add
adc
lahf
and
inc
mov
xor
adcb
or
inc
sbb
in
adc
cmpsl
mov
cmpsl
movsb
push
in
xlat
jle
dec
cld
mov
or
nop
popf
inc
inc
dec
add
pushf
enter
xor
add
std
xchg
cmpsb
sub
cmc
sarb
jbe
pop
push
iret
push
ss
imul
idiv
pop
insl
push
daa
fdiv
xlat
lcall
pop
mov
gs
loop
insb
aas
mov
inc
push
in
lods
rcll
aas
fstl
dec
push
push
or
mov
dec
jae
xchg
rcrl
sub
icebp
cmp
cs
and
fistps
fistl
xchg
stos
pop
std
lock
dec
xchg
pop
xchg
cmp
das
enter
js
int
int3
adc
fcmovb
jne
cltd
mov
shrb
ror
std
aad
mov
pop
stos
dec
addb
sbb
mov
inc
movsl
pushf
jno
mov
lea
test
jl
lock
fistpll
cli
inc
mov
in
ret
and
xchg
les
out
and
jle
outsl
ds
cmc
inc
jb
pop
sub
cmp
stc
jbe
rolb
sbb
mov
lods
push
and
lahf
push
jle
pop
jecxz
fcoms
adc
icebp
insb
xchg
adc
push
stos
xor
cmp
hlt
inc
xor
mov
repz
dec
call
icebp
cmp
mov
lahf
insl
sub
fs
or
or
out
cs
lea
sub
mov
xchg
jp
mov
mov
nop
push
mov
jmp
mov
and
push
mov
pop
and
and
mov
mov
mov
mov
hlt
pop
lahf
das
aad
jle
cmpsl
out
or
dec
cltd
scas
jb
hlt
adc
xchg
mov
pop
push
lret
ljmp
and
xlat
mov
mov
adc
push
int3
jnp
or
addb
jbe
cwtl
loopne
push
jnp
lahf
xor
jae
stc
in
or
cli
sarb
mov
mov
bound
add
mov
out
push
icebp
cli
or
sbb
into
repz
xor
es
xor
iret
sbb
aas
cs
out
icebp
das
xorb
pop
ret
jg
mov
lret
insb
push
repnz
push
lods
jg
hlt
mov
clc
adc
pop
mov
in
jbe
aas
les
sbb
push
jle
cmp
out
add
stc
fsubrl
jae
sbb
leave
hlt
insl
gs
xchg
jecxz
cmc
mov
hlt
outsl
lods
mov
sbb
adc
and
push
pop
fdivr
mov
out
cmp
push
scas
mov
inc
pop
add
jbe
pop
out
xchg
in
lret
sbb
dec
jge
loop
in
sub
add
mov
xchg
cmpsb
push
imul
in
les
push
and
ljmp
and
sbb
sbb
sub
xchg
sub
out
clc
iret
mov
in
rorl
jnp
cs
jle
xor
lahf
inc
pop
cmp
fsts
jae
xchg
lods
mov
pushf
push
dec
dec
push
bound
lret
out
fidivs
popf
test
stos
mov
lods
pop
jns
adc
lahf
mov
dec
dec
cmp
nop
fisubrl
test
mov
out
sub
inc
cmc
jmp
xchg
insl
mov
test
arpl
cmp
mov
inc
dec
add
sbb
mov
test
add
iret
xchg
pop
and
dec
inc
movsb
cmp
pop
cmp
negl
es
xor
ret
scas
aam
insb
pushf
cli
jnp
xlat
test
cwtl
push
xchg
fidivl
jnp
es
mov
xchg
je
jge
adc
xchg
xchg
push
or
pushf
dec
test
jno
jno
pusha
negb
fildll
jno
aaa
dec
icebp
xchg
scas
es
popf
fbld
jns
pop
sbb
jne
jbe
jne
enterw
jl
lods
push
and
ss
or
mov
sbb
jecxz
xchg
or
cmp
xor
jecxz
adc
push
mov
xor
dec
or
jl
push
xor
daa
mov
movsb
lahf
iret
add
xchg
enter
sbb
lea
mov
cli
pop
shrl
lock
jnp
daa
push
aaa
xor
xchg
sub
dec
jno
sbb
arpl
push
fdivr
test
and
inc
pop
and
mov
movsb
lea
cmp
push
cwtl
adc
cltd
data16
jne
out
jmp
mov
int3
mov
into
lods
arpl
cli
push
jle
icebp
cld
neg
dec
sbb
out
subb
xchg
push
add
fmull
test
popa
jne
lods
popa
fstpl
stos
jmp
fs
xchg
xor
pushf
loopne
sub
cli
and
mov
out
or
jmp
jns
aaa
cld
mov
inc
pop
cmpsl
aam
mov
test
inc
iret
inc
out
test
or
gs
mov
sub
int
in
push
pop
cli
lds
lret
jo
sbb
cmp
mov
mov
push
lea
out
pop
adc
xchg
xor
sbb
or
xchg
xchg
or
dec
cwtl
aad
int3
icebp
or
xchg
or
roll
inc
xor
lcall
push
mov
cwtl
sub
xchg
cmc
popa
stos
outsl
in
ret
sbb
dec
movsl
pop
lahf
mov
add
xor
sub
int
push
jecxz
dec
out
add
xchg
mov
popf
iret
in
pop
and
cmc
add
mov
xor
pop
out
ret
jae
enter
call
dec
cmp
mov
push
ljmp
out
lods
jmp
outsb
inc
dec
sahf
gs
xchg
fisubrl
in
js
push
leave
pop
sahf
inc
dec
inc
rcll
leave
cmp
dec
aad
push
dec
sbb
daa
mov
push
lahf
mov
inc
adc
adc
fldcw
and
push
pop
mov
xor
inc
inc
in
aas
dec
jno
cwtl
and
lock
cmp
mov
setle
test
xor
cmc
aaa
out
mov
fidivs
mov
int
sbb
out
push
cmp
pop
nop
popf
cmpsl
mov
mov
fs
mov
mov
jbe
lods
test
lds
inc
or
dec
in
jl
lcall
ret
enter
sar
or
mov
push
outsb
aas
cmp
je
sarl
popa
mov
jne
mov
out
in
jle
rolb
inc
xlat
cmp
repz
negb
xchg
repnz
or
jnp
fbld
xchg
mov
dec
mov
pop
dec
shll
push
adc
sub
fbld
es
daa
add
pop
or
jns
dec
nop
cmc
jne
popf
icebp
clc
mov
ljmp
add
mov
push
movsb
movsb
rol
sub
into
into
cli
nop
pop
test
sbb
xchg
adc
mov
xlat
pop
imul
mov
or
xchg
add
shlb
mov
add
arpl
shlb
into
mov
mov
inc
xor
ljmp
mov
mov
roll
lcall
idivb
dec
mov
inc
imul
inc
in
jbe
jb
lcall
lahf
xor
push
xlat
shrb
stc
or
scas
ss
and
or
into
clc
jl
xchg
or
dec
adc
add
jmp
enter
pop
xchg
dec
into
mov
test
inc
and
stos
fwait
lds
xorl
addr16
adc
cld
test
outsb
sbb
ret
mov
xchg
sbb
in
mov
and
repz
push
fldl
and
hlt
pop
inc
lcall
test
add
jecxz
lret
adc
repz
lods
add
push
testb
mov
divb
and
jnp
imul
clc
xor
test
mov
int
or
or
shll
adc
js
dec
shll
cli
dec
adc
fisttpll
js
bound
jge
inc
cmc
testl
in
push
cmc
mov
mov
test
rorb
pop
sub
xchg
shrl
aaa
sbbb
out
jno
clc
xor
lds
aad
mov
ja
mov
adc
in
movsl
mov
popf
pop
mov
pusha
push
sarl
mov
push
xchg
fimull
add
lods
fmuls
xor
int
pop
jnp
mov
fmulp
and
cmp
out
push
jmp
xchg
dec
mov
jmp
stos
sbb
mov
outsb
lods
and
arpl
xorps
xor
push
ret
mov
mov
and
add
sub
and
int3
sbb
mov
xchg
orb
inc
inc
sbbb
scas
int3
adc
sub
pop
int
fmuls
mov
lret
add
mov
or
push
pop
fsubrl
jno
xchg
inc
xchg
imul
mov
mov
fs
mov
addr16
sub
cwtl
cmp
fists
mov
or
lret
int
jg
and
add
sbb
dec
xlat
mov
enter
stc
repz
subl
data16
mov
mov
cltd
inc
pop
sbb
iret
dec
sub
dec
insl
sti
int3
mov
mov
dec
push
push
sub
jmp
inc
sbb
or
in
jg
les
loope
jle
mov
scas
pop
pop
in
cwtl
std
clc
mov
jge
and
xchg
test
fs
iret
std
fldenv
enter
mov
popf
subl
mov
sbb
stc
stos
loop
jp
mov
xchg
outsb
mov
xor
shl
dec
sub
dec
pop
add
add
out
ja
paddw
pop
mov
adcb
sbb
mov
mov
leave
repz
cmpsb
fidivl
cli
mov
push
mov
cld
frstor
push
inc
les
scas
cmp
shl
mov
lret
xchg
mov
push
arpl
fs
sbb
sub
mov
and
sub
mov
and
popf
jns
mov
push
enter
lea
add
ret
inc
mov
mov
clc
push
out
sub
mov
xchg
fstl
das
mov
ret
stc
add
add
inc
data16
scas
mov
dec
js
mov
negb
dec
sti
test
jne
andb
xchg
mov
sbb
or
push
xchg
jge
jae
pushf
sbb
inc
or
xor
movsl
pop
cli
mov
cwtl
scas
mov
push
repnz
jle
xchg
insl
inc
loop
out
fsubrl
iret
and
jp
lret
sub
add
jno
pop
sar
punpcklbw
fwait
mov
mov
dec
xchg
arpl
xchg
leave
xchg
out
js
mov
jmp
in
mov
repnz
std
xadd
xor
inc
cmc
pop
xchg
inc
xor
jbe
aad
jmp
jl
rorb
bound
pop
push
out
mov
std
lcall
lcall
jmp
int3
es
les
pop
test
xchg
inc
fs
push
into
jg
icebp
loopne
rclb
lahf
xor
rorl
int
mov
fsub
ss
ret
imul
lret
test
xchg
sbb
add
mov
lods
mov
fadds
mov
or
xor
push
arpl
popa
inc
loopne
and
movsb
mov
mov
mov
adc
ss
sbb
sbb
nop
jo
gs
leave
ret
movsb
inc
out
xchg
sbb
push
adc
ret
fsubl
out
add
out
push
mov
mov
push
lea
cmpsb
daa
test
ret
stc
iret
lcall
mov
into
in
xorb
jbe
mov
add
inc
aam
jb
test
inc
or
outsb
enter
mov
jbe
repz
push
repnz
add
sub
xchg
xor
or
fstpl
fsubl
sbb
clc
imul
stc
xchg
scas
sbb
xchg
fwait
mov
in
push
lcall
aam
imul
jnp
push
mov
jecxz
negb
daa
jg
gs
fdivrs
int
ljmp
dec
pop
out
mov
addb
sbb
mov
xor
lods
lock
fisubrs
xchg
stc
in
add
mov
pop
lahf
push
ja
out
lods
shl
jle
cli
lods
xchg
in
inc
dec
or
iret
out
mov
subb
dec
icebp
or
add
dec
mov
mov
sbbb
lahf
pop
lods
cmp
pop
sub
push
pop
into
cs
cmp
inc
sti
enter
sti
inc
dec
movsl
into
push
icebp
push
enter
dec
bound
cwtl
hlt
or
inc
ficoms
fdiv
adc
pop
xchg
dec
xchg
jecxz
adc
or
pop
xor
mov
in
mov
rolb
mov
inc
inc
xor
stc
sbb
cwtl
fcmovnb
subb
xor
or
sbb
ja
and
sub
ja
adc
call
dec
add
scas
pop
mov
pop
add
cmp
cmpsb
adc
add
js
mov
and
push
sahf
jae
mov
xorb
inc
shll
xchg
incl
mov
sub
mov
push
jle
adc
jp
push
cs
pop
sbb
or
jb
sbb
fildll
dec
rclb
js
test
sub
addr16
leave
and
mov
lahf
fiaddl
or
xchg
mov
jne
xlat
adc
shr
add
mov
out
std
fcompl
xchg
cmpsl
out
dec
jne
lret
test
stc
mov
mov
push
cmp
int
in
ds
lds
out
add
mov
xor
sbb
cmp
sbb
mov
popf
push
xor
shlb
icebp
nop
xlat
pop
or
mov
jp
or
sub
and
iret
shl
inc
dec
push
push
lea
push
fwait
mov
or
fdivs
mov
scas
push
push
mov
frstor
or
add
pop
xchg
mov
enter
sahf
sbb
add
cltd
sbb
inc
filds
xchg
mov
mov
fnstsw
cmpsl
and
repz
pusha
add
push
daa
rorb
popa
dec
int3
xor
cmc
insl
dec
cmp
inc
add
lret
aas
sbb
test
daa
jecxz
out
xor
adc
testb
js
mov
into
mov
mov
mov
fsubl
or
iret
dec
sti
testl
add
sub
js
test
xor
dec
xchg
push
outsb
cwtl
mov
enter
iret
shll
shl
push
mov
notb
push
es
push
mov
daa
sbb
jbe
bnd
sbb
ret
xor
icebp
fwait
add
pop
jns
mov
pop
in
arpl
iret
xor
aas
idivb
icebp
mov
xlat
sbb
popa
outsb
in
push
sbb
cmovo
adc
sti
jge
xor
aas
mov
stos
or
mov
js
lcall
add
cmp
movsl
xchg
dec
call
cmovp
movsl
jbe
xchg
faddl
push
or
pop
xchg
testb
lods
and
fcmovne
cmp
pusha
push
xchg
pop
ljmp
fld
fyl2xp1
mov
enter
mov
pop
rorb
mov
mov
pop
jp
xchg
inc
inc
jns
sbb
cli
lret
sub
aam
and
xor
pop
xchg
and
hlt
mov
and
push
sti
add
xchg
int3
es
and
mov
inc
mov
shlb
sub
and
sbb
jecxz
int
jp
mov
push
jle
out
mov
xchg
cwtl
mov
in
or
adc
mov
jnp
mov
jg
cmc
mov
lret
fcomi
cbtw
xchg
lock
cmpsb
add
outsl
popa
adc
mov
add
pop
mov
fdivrs
test
jbe
jno
jg
aad
int3
imul
sub
jmp
or
sbb
add
mov
mov
push
psrld
rclb
adc
rcl
pop
nop
fwait
cmpsl
cmp
out
es
fwait
outsl
fsubrs
pop
push
out
jne
cmp
shlb
pop
loop
push
jno
mov
xor
and
inc
sub
mov
cmp
push
dec
je
inc
filds
data16
data16
repnz
inc
neg
jne
into
mov
pop
lock
inc
movzbl
aas
add
xor
cmpsl
aam
push
cwtl
sbb
jle
lds
test
out
cli
and
xchg
adc
mov
jle
jmp
mov
fimuls
push
mov
scas
mov
mov
sbbl
jl
inc
out
mov
sub
pop
sbb
mov
mov
ror
and
test
mov
popa
inc
mov
mov
adc
xor
or
rolb
aas
gs
out
inc
lds
outsl
loope
dec
outsb
lods
ds
outsb
inc
dec
or
inc
xchg
dec
jno
mov
xchg
add
push
mov
adc
js
in
ret
mov
jp
fldcw
push
rcrb
mov
sarb
sbb
adc
mov
cwtl
movsb
ret
mov
push
mov
mov
xchg
lcall
movsl
mov
out
push
frstor
ja
mov
jg
pop
daa
inc
push
test
xlat
outsl
cmpsb
inc
test
mov
dec
dec
hlt
dec
nop
sub
xor
push
cmp
cltd
iret
loop
ret
ja
mov
in
mov
sbb
and
repz
lea
sub
mov
push
jmp
add
sub
mov
rcl
or
mov
jns
pushf
cmc
cli
sbb
imul
xchg
mov
sub
jmp
dec
ret
sub
mov
mov
mov
ret
xchg
data16
mov
xchg
dec
iret
les
and
xlat
enter
ss
jb
dec
imul
sti
loope
cmp
inc
inc
paddusw
dec
inc
shl
cmp
inc
insb
cwtl
fwait
pusha
mov
jmp
enter
dec
mov
xchg
inc
aas
je
lock
aam
and
and
shrl
enter
aas
inc
jne
in
xchg
gs
ret
cmpsl
push
test
jge
mov
jecxz
mov
xor
mov
clc
shll
jae
jl
cmp
mov
or
rorb
adc
dec
jns
jmp
sbb
sbb
shrb
and
or
pushf
or
mov
sub
dec
gs
out
bound
pop
mov
cmp
jmp
stos
inc
sahf
dec
js
and
ja
xor
out
js
inc
xor
inc
pop
dec
popa
bound
cmp
add
cmpsl
xor
jmp
jbe
sbb
mov
jge
and
das
sub
xchg
fwait
lods
mul
inc
inc
sub
push
jecxz
in
cmpsl
sub
in
or
sbb
mov
stos
fwait
test
shrb
mov
mov
cmp
xchg
faddl
loopne
pop
mov
xor
or
sub
data16
rorl
jbe
dec
call
sub
decl
lret
icebp
add
lock
test
jg
ficomps
testb
mov
mov
out
mov
shlb
pop
cltd
xlat
movsl
dec
sub
gs
movsl
push
les
and
mov
outsl
lock
mov
mov
mov
jmp
adc
sub
sub
mov
mov
outsb
add
jnp
mov
sub
and
push
aas
jne
lods
push
ret
aam
mov
push
lods
mov
or
daa
movsb
dec
push
inc
in
and
sti
add
sbb
je
ret
inc
repz
icebp
mov
sti
inc
xchg
lods
testb
lret
cmp
arpl
mov
adc
movsb
mov
subps
scas
shl
sub
out
add
hlt
mov
push
scas
test
fimuls
mov
mov
pop
push
jb
in
xor
push
insl
ja
push
pop
out
out
pop
jnp
push
jnp
leave
les
lret
sbb
stc
adc
mov
add
xor
rcrl
and
inc
lret
sti
xor
lea
xorb
or
adc
lea
icebp
test
jne
xchg
mov
add
or
int3
int
aad
pop
daa
les
sbb
xchg
iret
insl
jns
pop
leave
adcl
add
push
cmp
jno
push
rcll
cmc
jg
lea
in
xor
in
stc
mov
outsl
adc
decl
or
jmp
nop
test
and
out
bound
jl
jg
pop
pop
mov
dec
daa
cmp
out
scas
mov
mov
pop
mov
inc
fistl
sti
ljmp
push
and
pop
std
neg
jno
pop
xor
cmp
push
imul
mov
or
ret
aaa
mov
dec
pop
push
sub
jl
repnz
cmpsl
test
cmp
adc
jb
sbb
mov
pop
mov
popf
or
ret
cmpsb
cmp
dec
cmp
push
iret
dec
or
mov
inc
leave
xor
cmp
ficompl
nop
xchg
xor
push
xor
sahf
loope
and
mov
adc
sub
shrb
jp
aad
add
sbb
xorb
jno
pop
adc
jmp
jns
ljmp
stos
or
out
call
js
pusha
loop
cmp
xor
xchg
or
mov
test
push
xlat
pop
mov
xchg
mov
mov
test
sub
xchg
or
sbb
dec
xchg
or
dec
mov
jecxz
xchg
or
push
fsub
mov
or
sub
jno
orb
push
pop
add
sub
mov
xchg
scas
stc
inc
arpl
adc
push
inc
mov
pusha
lret
std
mov
popf
mov
aam
sbb
mov
push
push
push
push
mov
mov
jno
stos
out
dec
lods
pop
lods
cld
push
aad
stc
lret
cltd
inc
and
cmp
scas
neg
sub
mov
lret
enter
pop
int
xchg
out
rorl
daa
sub
add
dec
outsl
sbb
xchg
icebp
jle
pushf
add
aad
dec
or
ss
sbb
adc
dec
add
and
lret
xchg
insb
aam
test
sbb
ja
pushf
mov
push
push
testl
cld
fsubrl
cld
inc
inc
fadd
fiadds
add
adc
insl
sub
out
jp
sub
inc
mov
and
repnz
orl
xor
mov
mov
sahf
cmp
cmp
mov
and
cmp
and
mov
stos
sbb
xchg
mov
sbb
mov
nop
es
movsl
pop
xchg
sbb
inc
pusha
iret
push
add
jnp
mov
loope
aas
aaa
out
add
vlddqu
dec
push
or
dec
xchg
pop
mov
pop
cmp
inc
cmp
sub
test
insb
or
aad
cmpsl
out
adc
xor
cmc
push
sti
xor
nop
add
jg
cmpl
test
lds
cmp
fbld
loopne
sub
incl
aad
jg
lret
ret
or
test
and
int3
cli
stos
cmc
je
flds
jb
inc
xor
testl
cmp
mov
in
test
jp
xchg
es
movsl
insb
fistl
aas
rcr
data16
movsl
add
arpl
jns
xchg
aas
cmp
mov
adc
mov
xchg
xchg
jne
add
ljmp
pop
or
rclb
xchg
dec
leave
das
jl
mov
ja
pop
inc
dec
or
cltd
shrb
daa
jmp
mov
mov
fidivrl
jle
imul
popf
add
sbb
or
addr16
adc
ret
hlt
sbb
sti
mov
lds
fs
push
add
inc
and
mov
cmp
jno
es
sbb
mov
sbb
adc
xchg
hlt
cmp
xchg
sub
adcb
sbb
pop
or
test
subb
loop
stc
test
adc
mov
xor
pop
fldl
xor
inc
test
jg
pop
rcrb
int3
lea
pop
mov
add
inc
in
inc
fmull
or
out
fcmovb
orb
test
or
jmp
popa
pop
js
fwait
leave
or
jae,pn
add
adc
cmp
and
pop
push
xchg
adc
jge
cmp
outsl
mov
jmp
push
loop
lahf
mov
ds
mov
fldt
movsb
test
into
addr16
out
dec
lahf
jle
jae
xor
or
stc
lret
test
inc
movsl
lea
pop
mov
xchg
popf
fwait
dec
mov
imul
js
dec
jmp
lcall
shl
jo
out
and
mov
or
push
and
test
mov
push
in
mulb
popa
in
xor
adc
stos
or
test
in
or
mov
scas
xlat
dec
mov
pop
clc
adc
mov
xchg
divb
and
pop
sub
dec
pavgb
popa
repnz
pop
cmp
loopne
pushf
fsubp
push
sbb
shl
dec
push
inc
xchg
xchg
dec
cmp
jbe
fsubs
sub
xchg
fadds
nop
scas
push
lahf
jecxz
movsb
sub
pop
mov
push
les
test
icebp
and
scas
js
cmp
loope
cmp
hlt
cmp
pop
dec
jmp
jo
and
adc
sbb
insl
push
pop
cmpsl
pop
bnd
mov
cmp
inc
and
sti
jne
xchg
jne
inc
ja
aas
add
sti
addr16
je
push
stos
aas
jno
test
ss
aaa
imul
insb
xchg
add
inc
ficomps
cmp
cmp
push
cltd
xchg
cmp
js
leave
jbe
mov
inc
out
loope
mov
lcall
or
push
pushf
addr16
pop
jb
push
popa
pop
aam
mov
mov
sub
jp
cs
or
ljmp
lds
fidivrs
mov
jp,pt
inc
mov
cs
mov
and
add
push
xor
mov
sbb
lock
insb
sarl
sti
fcmovbe
pop
cmpsl
out
mov
cmp
adc
xor
inc
push
mov
xor
in
add
std
push
sub
daa
adc
xor
sahf
inc
mov
fimuls
cmpsb
or
sub
pop
pop
mov
sub
mov
es
jns
sub
push
stos
repnz
into
fistl
js
test
dec
xor
aam
ja
jl
jne
aad
fsts
xchg
sub
out
call
adc
jb
cmc
sub
rcrl
in
std
mov
mov
sar
cmp
mov
ret
int3
push
shll
cli
xchg
jne
push
mov
icebp
push
enter
fildl
push
sbb
lds
mov
sub
or
fldenv
mov
xchg
jae
mov
adc
or
jno
push
pop
jne
in
adc
rcll
in
jge
lods
cmc
dec
rclb
sti
popa
cmpsl
movsb
mov
sub
mov
inc
inc
dec
pusha
divb
mov
lea
push
inc
add
ljmp
mov
xchg
or
cli
or
clc
shrd
push
mov
data16
inc
pop
mov
jae
dec
in
sub
jg
push
xchg
clc
jns
xor
and
dec
dec
lahf
add
jae
add
in
aaa
outsb
pop
shrl
fwait
lret
inc
mov
push
cmpb
mov
mov
cmc
popa
push
fidivl
push
xchg
imull
push
repnz
lahf
jmp
xor
addr16
add
dec
ja
imul
cmp
clc
adc
aas
mov
cmp
and
mov
xchg
adc
add
outsb
lea
sbb
xlat
sub
sbb
fsubp
or
cmpb
pop
inc
mov
adc
mov
and
hlt
xor
mov
jl
scas
xchg
daa
jns
mov
daa
sbb
xchg
and
pop
subb
sub
test
ja
jle
and
shrl
insl
fstpl
iret
or
shll
out
inc
lock
pop
mov
fsubrl
adc
xor
adc
into
iret
dec
jnp
mov
rorl
xor
adc
enter
call
xor
dec
inc
mov
stos
jnp
jg
xchg
sbb
jne
adc
push
and
push
aaa
gs
mov
dec
cmpsb
stc
shl
pushf
sahf
add
xchg
mov
mov
adc
ja
movsb
dec
push
outsl
incb
xchg
repnz
je
pop
or
sti
adc
inc
imul
push
and
mov
xchg
loopne
leave
mov
js
add
test
xchg
add
mov
cli
cmp
test
ret
jae
fidivrs
inc
test
stos
fcos
push
fcoms
add
xor
and
sub
daa
dec
lods
xlat
jbe
sbb
movsb
roll
orl
and
sti
add
iret
in
insb
mov
pop
xor
adc
fcomi
je
add
or
pop
cmp
and
add
xchg
pushf
dec
cmpsb
pop
dec
clc
xor
rol
repz
mull
dec
das
dec
push
push
int3
xor
into
adcb
leave
test
mov
ffreep
pusha
je
and
pop
adc
xlat
cmp
jle
jecxz
hlt
inc
std
rcr
rcr
sub
cmp
mov
shl
push
rorl
aas
cmp
inc
inc
adc
cmp
dec
inc
add
sub
push
push
cmpsb
adc
daa
inc
and
pop
fucom
cmpl
inc
mov
mov
pop
sub
rolb
int3
icebp
jg
fiadds
jne
outsb
adc
sub
and
fwait
cmpl
xlat
addl
adc
les
add
mov
outsl
pusha
sbb
lods
test
pop
shlb
fsubrl
or
inc
cwtl
cmpsb
inc
cli
mov
xor
js
dec
cltd
in
in
das
decb
push
xlat
arpl
clc
xchg
leave
sub
int
xchg
js
fld
push
fwait
cmp
inc
rclb
jecxz
popa
xchg
into
dec
mov
cmc
in
call
pop
and
fs
xbegin
imul
or
and
and
scas
pop
pop
imul
sub
and
mov
stos
movsb
stos
push
dec
gs
adc
daa
add
add
mov
push
stc
xor
inc
and
mov
sbbl
pop
mov
das
test
xchg
xor
dec
stos
adc
rcll
pushf
pop
mov
sub
push
add
pop
fwait
in
sub
in
sbb
adc
pop
les
push
xchg
jnp
adc
test
ret
imul
cmpsb
popa
cli
sub
and
addr16
movsb
dec
mov
aaa
sbb
jmp
xchg
mov
add
les
push
fmuls
and
adc
xor
sbb
mov
xor
sub
dec
push
sbb
icebp
xchg
imulb
in
jno
fisttpl
dec
js
outsb
mov
jg
jmp
pop
pop
cmpsb
cmp
jmp
jns
cltd
sbb
fwait
gs
pop
xor
int3
enter
xchg
divb
xchg
inc
mov
fnsave
mov
data16
outsl
call
fs
loope
sarl
ljmp
jae
pop
dec
fmulp
std
xor
xchg
mov
stos
dec
sub
mov
fiadds
imul
imul
js
cmpb
in
mov
mov
pop
js
xchg
gs
inc
jp
shl
mov
lods
jns
pop
dec
mov
adc
in
inc
out
cmp
mov
bound
push
inc
ljmp
jo
out
lret
mov
dec
out
outsl
push
add
push
push
jecxz
pop
jle
test
loop
jp
and
int
fildll
cmp
shlb
mulb
data16
pop
lock
ljmp
out
arpl
ret
add
mov
mov
test
mov
mov
ja
push
stc
mov
cmpsb
ret
mov
test
imul
mov
cmpsb
std
negb
sbb
lea
and
rcr
mov
or
in
push
mov
dec
insl
rorb
imul
pop
xor
jle
subl
mov
jno
xor
push
jbe
rcl
in
les
cmp
scas
jmp
pop
inc
dec
xchg
sbb
ljmp
mov
mov
xchg
mov
sub
push
inc
jb
cs
mov
pop
cmp
lcall
jno
push
icebp
unpckhps
shll
cmp
icebp
aam
mov
jne
push
lahf
andb
lcall
nop
pop
popf
and
arpl
in
std
lret
jb
inc
int
inc
jb
loopne
aaa
jb
mov
test
cmp
aas
sbb
pop
mov
pop
daa
bound
nop
xor
rcll
sbb
ret
outsl
add
js
jne
adc
inc
cmc
push
xlat
fistl
push
fs
subl
scas
in
pop
fld
es
lea
xor
fildl
mov
push
rorl
sahf
or
push
mov
repnz
adc
add
push
cmc
les
push
jp
xchg
test
iret
fcoms
push
or
adc
imul
loop
cs
xchg
xor
xchg
nop
les
push
sbb
push
jnp
sahf
mov
and
jg
shlb
scas
mov
pop
iret
lds
mov
dec
mov
push
repz
xor
sbb
fwait
std
fbstp
ss
inc
push
inc
cmpsb
lcall
scas
out
shll
cld
mov
add
inc
cltd
pop
fcoml
loope
lcall
lea
aaa
pop
out
out
mov
mov
pop
loope
dec
ret
inc
movsb
mov
leave
icebp
outsl
lahf
mov
mov
bound
dec
cmpsl
add
lret
loopne
inc
jo
jecxz
fimuls
ljmp
inc
mov
nop
or
or
dec
jl
dec
pop
pop
push
adc
add
loope
ret
and
test
and
imull
push
dec
xchg
inc
scas
mov
arpl
movsb
fst
ss
loop
add
mov
enter
cli
lods
adc
movsb
je
test
push
push
movsl
push
popf
jbe
mov
lar
pusha
adc
cmpsl
es
test
in
pushf
mov
mov
pop
mov
sbb
sbb
or
hlt
cltd
cmpsl
xor
rorl
mov
popf
cmp
xor
mov
mov
stos
into
pop
push
push
sbb
xor
loopne
js
outsl
loopne
lods
or
ljmp
aam
adcb
cmp
enter
push
bound
test
mov
das
and
sbbb
xchg
loop
leave
mov
jge
shlb
shrb
push
inc
sub
inc
push
loop
stos
call
cmpsl
xor
push
test
adc
int
and
jmp
xchg
push
imul
and
push
shl
enter
cmp
or
out
fmuls
test
cmp
aas
cmpsl
iret
in
mov
and
xchg
mov
mov
into
test
repz
leave
or
or
jp
xchg
test
sti
lret
push
dec
adc
and
adc
dec
jge
jmp
fisttpl
out
lds
xchg
add
cmovae
loopne
std
xchg
add
sbb
sub
test
mov
mov
or
lea
xor
mov
popa
jmp
je
test
in
sar
cmc
nop
shr
fisubs
mov
inc
sub
ret
jo
je
fisttpl
pushf
jno
push
mov
xor
aad
inc
insb
adc
cmp
nop
insl
add
in
jmp
nop
ret
jg
rorb
pushl
sbb
bnd
testb
lahf
gs
icebp
jmp
ljmp
sub
bound
add
pushf
xchg
cmp
les
mov
mov
test
fxch
cmp
and
cmc
cld
mov
push
push
xor
inc
test
adc
add
and
test
and
mov
inc
xchg
loope
shlb
les
je
scas
out
hlt
push
sbb
add
filds
push
mov
mov
mov
xchg
jmp
movsl
aam
cmpsb
scas
std
aaa
xor
cwtl
movsl
adc
xor
jle
pop
or
in
in
hlt
adc
jmp
xor
fnstcw
pop
out
xor
xor
cmp
out
jmp
sbbl
pop
jo
cmp
sub
push
cmp
dec
lea
in
in
and
pop
movsb
mov
ja
inc
xor
ret
add
jno
push
mov
int
popf
popf
into
in
mov
in
mov
cltd
adc
das
daa
push
in
aam
stos
jo
xchg
cmp
add
adc
addr16
xor
imul
push
int
movl
or
push
xor
pop
jl
lret
cmp
ljmp
adc
mov
mov
fucomp
cmc
iret
sti
insb
pusha
rcl
lahf
decb
cmc
notl
inc
push
add
sarb
jo
cld
leave
fidivs
jg
mov
jae
mov
fs
fisttpl
mov
dec
jg
test
jo
push
arpl
jp
out
xchg
pop
rol
and
cs
push
and
aam
aas
xor
int
pop
rclb
inc
jb
dec
lret
xchg
fldcw
and
int3
add
sub
fisubl
xchg
cli
ja
out
push
cltd
in
push
into
daa
push
popa
lods
or
adc
inc
loope
arpl
aam
mov
jle
icebp
addl
shl
cwtl
push
jmp
pop
and
adc
push
push
or
jno
shrl
add
sub
add
xchg
idivb
dec
hlt
dec
mov
fidivs
jmp
outsl
inc
call
xchg
and
mov
xor
adc
xchg
inc
lahf
xorb
enter
add
mov
and
sbb
fsubrs
aam
push
dec
lret
movsl
pushf
lahf
negl
add
nop
jb
mov
lock
push
pushf
hlt
popf
stos
pop
pop
adc
rcll
stc
subb
add
xor
xor
cmp
mov
mov
pop
push
out
sti
sub
repz
outsl
pop
mov
jle
and
sbb
push
inc
mov
mov
jecxz
pop
stos
std
enter
sbbl
pop
mov
sbb
iret
or
cmp
lods
and
shl
divb
xchg
dec
shlb
fiadds
loop
inc
mov
mov
jge
jne
sub
pusha
xchg
js
shrl
push
aas
jmp
sub
icebp
pusha
jnp
outsb
mov
in
xchg
push
int
je
adc
pop
and
mov
push
cwtl
and
mov
int3
in
inc
xor
mov
add
roll
test
pop
jmp
push
mov
subb
test
xlat
or
sbb
pop
das
xor
cli
out
jmp
jg
ljmp
jmp
mov
jae
daa
push
gs
sarb
sti
lcall
xchg
jbe
inc
imul
pop
jp
aam
rcrb
arpl
push
jns
sbb
popf
pop
pop
jmp
pop
adc
lret
xlat
loop
and
xchg
cmpsl
call
sbb
pop
mov
mov
imul
clc
jmp
ja
repnz
outsl
into
inc
hlt
sub
mov
mov
nop
ffree
cmpsb
pop
loopne
jo
lods
push
mov
push
orl
inc
stos
dec
sbb
shll
push
mov
inc
les
stc
aam
fdivrs
stc
xchg
adc
cmpsl
add
mov
add
mov
fwait
or
push
cmpb
sbb
or
inc
mov
gs
mov
pop
in
rol
addl
aaa
add
jmp
dec
pop
xorl
xchg
dec
movsb
jl
insl
xchg
mov
call
cmp
popf
arpl
jmp
les
negb
pop
xchg
jae
jecxz
pop
cltd
push
mov
test
dec
sub
adc
sbb
jg
mov
push
xchg
inc
fisubl
outsb
pcmpgtd
adc
pop
add
je
shr
fwait
xchg
push
adc
mov
mov
in
cmp
xchg
xchg
nop
mov
fbstp
sub
push
jnp
adc
clc
sbb
sbb
dec
mov
jbe
xchg
mov
repnz
mov
fidivrl
jecxz
jne
enter
jp
push
int3
fmull
shlb
es
into
xchg
lcall
push
lock
cmp
ja
ret
push
sub
dec
imul
push
pop
arpl
leave
bound
xor
sub
das
sbb
dec
sub
lods
mov
mov
xlat
lods
cmp
mov
mov
imul
mov
jo
jb
pop
scas
adc
js
mov
sub
or
lock
fcompl
repz
mov
jecxz
inc
ljmp
out
popa
dec
lret
mov
aad
mov
adc
xor
mov
adc
mov
cwtl
and
push
sarb
jecxz
jecxz
mov
mov
cmp
or
push
mov
les
adc
loop
jmp
pop
mov
dec
pushf
std
cwtl
mov
outsl
jae
iret
pushf
lret
inc
jo
aaa
mov
adc
and
iret
mov
rorb
pop
aam
jg
sub
nop
nop
jecxz
or
mov
movsb
pushf
in
adc
xorb
imulb
fs
inc
mov
xor
xor
int3
inc
and
xchg
dec
pop
xchg
pop
sub
jb
mov
lods
shrl
sbb
cmp
sub
iret
out
jbe
xchg
xor
iret
pop
cmc
fcompl
ljmp
lcall
mov
jg
iret
pop
mov
ret
push
stos
cld
xchg
sbb
movsl
sbb
dec
jns
je
jge
loop
aam
into
sarl
pusha
xchg
shll
sbb
push
and
je
push
mov
xchg
fxch
insl
fstps
aam
mov
xor
dec
inc
cltd
inc
dec
push
popa
cmpsl
xlat
dec
mov
imul
mov
mov
push
pop
mov
xchg
sbb
xchg
mov
rcrl
fisubrl
mov
stc
add
in
jmp
mov
mov
pop
mov
shll
loop
pop
cwtl
lret
sbb
out
or
daa
notl
xchg
mov
cltd
and
push
int
out
into
cmp
cmp
or
outsb
sub
and
das
jp
lret
popl
lret
mov
test
jecxz
cmpsl
sbb
add
hlt
imul
add
testb
pop
sbb
sbb
sarl
inc
test
sbb
fs
ret
repnz
insb
inc
mov
xchg
iret
cmp
mov
insb
jns
divb
mov
xor
sbb
cmpsl
pop
call
pop
and
and
pop
or
dec
mov
mov
mov
dec
imul
scas
mov
jne
xor
cmp
mov
push
jmp
nop
call
mov
daa
dec
cmpsl
inc
in
mov
mov
jl
pop
jbe
cld
pop
loop
fiadds
sbb
adc
leave
clc
sub
stc
jge
enter
or
cmp
out
addr16
xchg
xchg
sahf
movsl
push
mov
jo
stos
insb
sahf
mov
jl
bound
sbb
in
cmpsb
mov
bsf
ud2
sar
adc
cmp
mov
orb
stos
cmpsb
movhps
pop
fnstsw
add
xchg
and
mov
cmp
sbb
hlt
adc
xchg
js
inc
scas
loopw
lcall
xor
stos
sbb
adc
das
mov
dec
out
and
push
pop
aam
and
add
dec
mov
fs
or
mov
cmc
les
nop
ds
pushf
push
sbb
daa
data16
cli
loopne
mov
sbb
jo
loope
xor
shlb
ja
fsubl
inc
sub
mov
movsb
insl
lods
jbe
sub
mov
pop
aad
push
cmpsl
rcr
lret
fcoms
or
lea
stos
mov
js
aam
mov
mov
add
out
mov
rolb
mov
add
mov
and
jp
pop
cmp
mov
loope
imul
xchg
loopne
xor
ret
icebp
sbb
mov
cmp
cli
dec
movsb
in
and
fwait
push
repnz
test
mov
rol
fimull
pop
mov
cltd
aas
cli
cmpsl
in
sahf
jmp
out
xor
cmp
dec
mov
shrl
mov
pop
pop
push
sti
popf
jge
je
mov
push
jmp
cmpl
repnz
out
into
mov
scas
jl
rolb
mov
and
jns
in
adc
lea
cmpsl
xchg
pop
nop
repz
xor
mov
xchg
adc
out
into
mov
sahf
out
rolb
lock
outsl
aad
jmp
je
call
cwtl
test
enter
xchg
into
mov
pop
int
enter
lods
mov
cmp
inc
sub
js
push
pop
imul
cmp
les
or
cltd
fstps
stos
add
jns
add
mov
repz
daa
cmc
or
ss
jge
jp
xchg
sbb
cmp
dec
neg
scas
jb
mov
lock
filds
sub
scas
test
xor
mov
xor
loopne
insb
scas
das
push
xor
adcb
stos
idivl
xchg
add
add
ljmp
scas
je
int3
imul
rcr
jb
out
or
xchg
loop
dec
lds
add
xchg
hlt
mov
fwait
xor
test
test
bound
xchg
xor
xor
imul
jp,pn
and
jmp
and
sarb
push
dec
xchg
add
adc
outsb
dec
imul
sahf
gs
outsl
push
push
lcall
js
lret
idivb
or
inc
jmp
mul
cmp
and
jp
lahf
cmp
aaa
leave
mov
pushl
jo
in
or
mov
ret
cmp
in
scas
push
dec
movsb
ds
popa
pop
aad
ret
aaa
mov
adc
outsb
imul
enter
xchg
jae
push
out
inc
clc
loop
xchg
mov
imul
xor
sbb
addr16
shll
lds
fst
push
clc
jg
add
and
jnp
cwtl
push
mov
out
std
pop
int
sub
mov
sub
sbb
xor
jno
pop
ret
jne
jno
push
bound
mov
je
xchg
scas
subl
shrl
add
movsb
stos
nop
das
dec
test
out
xor
fiadds
jle
ja
es
scas
adc
add
ret
inc
push
inc
std
sbb
jo
gs
sbb
sbb
icebp
in
data16
jns
mov
mov
sub
pop
out
mov
jg
sbb
cmp
jae
aam
shll
xchg
cmp
inc
pop
popa
xchg
in
les
push
imul
sbbb
fidivl
mov
dec
jne
push
add
lret
xchg
xor
xchg
mov
fsubs
loopne
mulb
mov
fists
push
xchg
int3
je
shrl
adc
ja
ljmp
in
insb
cmpsl
scas
inc
shrl
push
sub
mov
add
rcr
ljmp
pop
into
cmp
dec
mov
and
adc
enter
repnz
cltd
adc
aad
cmpsb
cmp
xlat
push
packuswb
sub
pop
sub
sub
push
or
jns
dec
adc
lret
lea
insl
mov
movsl
out
xchg
sti
xchg
add
fildll
push
sub
js
mov
pop
mov
and
push
fstp
cmp
fs
jecxz
test
inc
ss
inc
pop
rolb
test
fildll
rorl
fwait
push
jecxz
jno
scas
push
mov
lock
pop
adc
adcl
inc
arpl
cltd
dec
xchg
pop
in
cld
lcall
push
movsb
sub
or
xor
cwtl
fistl
iret
lret
js
xchg
sub
jne
adc
cmpsl
out
inc
jo
adc
aas
xor
jecxz
inc
adc
ja
clc
imul
xorl
mov
lock
nop
aaa
popf
in
mov
xchg
jne
iret
loop
mov
mov
mov
aaa
push
shr
sub
movb
add
out
in
xchg
pop
stc
pop
lds
scas
pop
aas
subb
adc
mov
pop
push
fimull
mov
shrb
adc
out
in
mov
mov
pop
push
mov
movsl
aas
add
aam
jb
ror
and
dec
mov
inc
mov
ss
outsl
jge
jecxz
add
pop
mov
outsl
cltd
aam
addr16
cmpsb
xchg
xchg
pop
pop
or
lods
idivb
clc
fadds
pop
and
popl
sub
dec
aaa
pop
scas
pop
adc
or
loop
repz
cwtl
imull
push
ss
adc
movsb
je
and
loope
in
repnz
or
xor
rorb
inc
insl
cs
lods
add
push
cli
frstor
or
repz
shll
mov
dec
xchg
xorb
in
fdivrl
add
rcrl
mov
xor
loop
test
sbb
pushf
arpl
clc
xchg
add
sub
test
mov
jb
iret
ret
pop
xchg
push
xchg
fimuls
sbb
inc
pushf
pop
int
enter
sbb
dec
out
out
pop
insb
mov
cmc
test
outsl
push
fs
pop
lock
inc
jns
sbbl
xchg
cmp
add
andb
cmp
sti
ss
sub
and
or
jl
cmp
pop
inc
mov
or
les
push
pop
xchg
or
in
movsl
sbb
xchg
mov
push
lods
adc
push
stos
mov
out
dec
aaa
lret
pop
add
mov
xor
push
fnstcw
xor
out
dec
mov
xorb
adc
jecxz
jb
xchg
ficompl
js
in
fldt
rolb
and
mov
pop
jns
add
fwait
sub
mov
adc
mov
mov
jg
repnz
cltd
jo
cmp
or
cmpl
add
sbb
cld
or
int
jg
addr16
aaa
mov
xchg
repz
inc
out
fstl
push
lcall
addb
xchg
pop
js
dec
inc
adc
cmp
cwtl
jl
daa
dec
mov
arpl
jnp
mov
or
mov
sarb
ljmp
mov
ficomps
mov
aad
mov
test
or
pop
jl
or
mov
sbb
or
mov
lock
dec
lcall
add
adc
loop
in
aas
push
cwtl
jno
stos
bound
imul
fcoml
push
fisttps
pop
leave
lahf
data16
dec
fs
push
adc
xchg
sahf
aam
icebp
push
popa
sub
xor
dec
inc
mov
sahf
or
inc
pop
adc
jle
cmp
mov
js
dec
push
insl
lahf
pop
cmpb
test
lods
mov
ds
jmp
sub
mov
int3
lock
insl
into
stos
ljmp
adc
cli
dec
jno
dec
gs
inc
std
dec
xor
push
inc
sbb
lcall
xor
loop
into
popa
loope
call
loopne
dec
scas
call
dec
cmp
mov
mov
pop
add
enter
lahf
mov
movsb
rcrl
xor
push
mov
lods
jle
sub
mov
push
fs
jnp
outsl
cmp
lcall
cld
add
leave
in
scas
xchg
lods
test
and
scas
sti
xor
lret
out
adc
inc
loopne
rcll
jle
lcall
jg
jg
xchg
add
adc
rcl
mov
jg
and
add
cmp
test
stc
sub
decl
lds
mov
mov
adc
sub
lret
xchg
mov
cmp
ficoms
push
fld
ljmp
mov
pop
push
xchg
mov
shlb
iret
outsb
fwait
jl
push
adc
insb
repz
add
jge
cltd
dec
jne
pop
mov
push
insb
inc
aas
outsb
cs
int
sub
jge
and
mov
stos
test
imul
mov
pusha
fidivl
in
outsl
add
cmpsb
in
fistps
fidivl
addr16
arpl
dec
inc
repz
dec
lcall
push
notl
sti
xor
addr16
dec
pop
jae
insb
jg
mov
mov
repz
in
mov
stc
add
lret
xchg
push
inc
scas
mov
int3
push
aam
and
mov
std
jmp
sub
push
cli
push
cli
jne
sbb
mov
popa
jle
call
lods
dec
mov
or
dec
int3
ja
icebp
add
jp
mov
jle
dec
repz
cmp
jno
cmc
ss
push
or
nop
ds
data16
and
sub
adc
fnstenv
out
inc
cld
mov
inc
jg
data16
pop
jp
arpl
lods
mov
lcall
pop
scas
push
pop
pop
add
stc
inc
add
jecxz
xlat
imul
cmp
gs
in
lock
xchg
or
icebp
mov
shrl
cld
inc
cltd
and
jl
or
push
and
cmp
sbb
xchg
pushf
outsl
out
sbb
add
sbbb
xor
lahf
push
iret
ljmp
jo
xchg
scas
lods
xchg
scas
lods
add
cmp
insb
xchg
inc
dec
mov
mov
xor
in
cmp
inc
adc
int3
lahf
lock
dec
pop
dec
mov
mov
and
testl
mov
and
dec
stos
adc
inc
mov
mov
and
sub
mov
addb
insl
aam
lret
dec
xchg
scas
fidivrl
repnz
mov
fldz
and
imul
andl
sbb
stos
lahf
mov
xchg
lods
arpl
xchg
inc
xchg
jmp
std
adc
insb
dec
and
inc
fs
mov
pop
mov
inc
sbb
in
sbb
sub
mov
fsub
mov
sub
add
scas
movsb
loope
push
sbb
cwtl
iret
dec
int
sub
call
jp
push
arpl
nop
xor
decl
xor
dec
shlb
jne
or
aam
and
imull
fst
adc
aas
or
cs
jae
xchg
jno
xor
testl
in
inc
pop
out
lea
mov
scas
push
scas
sub
pop
popa
mov
xchg
cld
push
sbb
push
push
cmc
cld
pop
or
test
mov
lcall
mov
mov
fmulp
or
and
js
inc
mov
cli
xchg
xor
movsl
in
mov
push
cmpsb
and
lds
push
test
pop
sarl
test
pop
adc
xchg
out
insl
sub
lods
pushf
xchg
pop
xlat
or
clc
shll
lods
cmp
not
pop
jne
inc
jae
mov
sbb
cltd
addr16
push
xchg
and
sahf
jmp
adc
jecxz
jmp
lds
shlb
int
iret
mov
cmp
repz
mov
call
cld
fists
addb
lcall
fbstp
rorb
pop
push
jae
pop
and
arpl
jns
mov
scas
iret
cmp
mov
cmp
lds
in
pop
out
xchg
jg
push
mov
push
mov
pop
inc
loopne
call
les
add
or
sub
imulb
mov
sbb
pushf
lods
lret
mov
aas
scas
cmp
ss
push
out
fyl2x
mov
xchg
pop
mov
std
mov
pop
imul
sub
loope
xchg
loopne
push
sbb
or
jl
and
popa
daa
aad
adc
shl
stc
add
xchg
mov
shrl
pop
add
and
lock
ljmp
popa
movsl
adc
movsl
ja
add
lahf
and
imul
js
inc
in
adc
dec
enter
testl
pusha
iret
inc
test
cmp
push
pop
and
leave
adc
add
aas
and
jg
in
hlt
mov
inc
lret
out
shlb
loop
lods
ss
adc
cmp
sbb
cmp
push
lret
loopne
sbb
faddl
test
sub
xorl
mov
jmp
inc
and
adcb
loope
inc
inc
or
dec
pop
cli
rorl
aas
pop
test
mov
add
fwait
in
pop
xor
xchg
jl
push
inc
lds
jecxz
jp
push
scas
pushf
andb
and
mov
jl
es
sbb
cmc
push
dec
pusha
sbb
sub
xor
sbb
rcll
repnz
push
mov
movsb
push
std
pop
in
iret
ljmp
mov
sti
cld
cmp
shrl
inc
pushf
lahf
pop
push
add
add
das
push
popf
cmp
in
jg
in
lahf
jns
mov
fstl
dec
shrb
pop
outsl
clc
sub
or
setne
mov
cmp
ret
xchg
inc
cmp
fs
shl
sub
dec
in
xchg
xchg
pop
dec
dec
test
dec
jb
mov
pop
fcomp
cmp
push
in
ss
out
cmp
fldl
adc
add
xchg
jnp
leave
cmp
pop
push
sub
push
fcomps
xor
cld
rcrb
mov
popa
fabs
xchg
inc
add
mov
loope
xchg
mov
sub
adc
inc
subb
and
inc
popa
xlat
jg
sub
add
add
sub
xchg
mov
and
xchg
xchg
dec
sbb
daa
push
mov
cmp
hlt
lret
adc
dec
sub
orb
test
sub
jb
daa
in
dec
dec
dec
jmp
gs
sub
cli
jnp
mov
or
pop
loope
pop
fstpl
popa
movsb
call
dec
xor
fstps
mov
inc
dec
push
cmp
mov
mov
xor
insb
push
pop
mov
jbe
jo
int3
sahf
adc
bound
and
pop
push
pop
sti
imul
daa
jno
ret
pop
push
test
sbb
or
clc
mov
mov
sub
push
xor
xchg
jmp
leave
daa
mov
xchg
pop
inc
lea
mov
push
ret
xchg
sahf
cmc
scas
rcll
lods
gs
sub
pop
insb
xchg
push
loope
rcll
cmp
test
sub
xchg
xchg
pop
cmp
inc
push
pop
and
xor
add
dec
fs
lods
or
pop
mov
in
nop
and
es
ljmp
mov
xor
lea
pop
in
cwtl
sbb
pop
insb
in
jge
push
int3
repnz
loopne
mov
xor
push
mov
sub
iret
cmp
mov
xor
mov
ss
mov
sbbl
jo
add
pop
inc
push
cmpsl
sub
stos
pop
sub
cmpsb
js
sub
addr16
pop
mov
mov
pop
jge
adc
notl
adc
test
xlat
jns
mov
scas
aas
mov
sahf
lock
jo
jb
sar
and
xor
dec
or
jle
dec
std
in
jb
adc
mov
push
xchg
mov
test
scas
add
ret
rcll
jge
add
imul
in
pop
dec
xlat
ds
loopew
scas
push
fisubrs
cmp
jg
jo
subb
adc
into
jle
adc
shll
iret
loopne
push
imul
fwait
bound
or
fnsave
sbb
cltd
mov
xor
loope
jg
shlb
push
call
movsb
popf
in
jecxz
test
jg
test
js
inc
pop
sub
pop
pop
aas
bound
insl
lahf
fcmovbe
push
xchg
sahf
adc
gs
and
and
mov
mov
in
outsb
jne
inc
mov
ret
setle
xchg
ret
mov
hlt
leave
pop
add
jmp
cmp
shll
lock
addl
mov
and
mov
xchg
test
push
mov
rolb
fdiv
xor
push
lcall
mov
lods
fcomp
or
pop
mov
mov
mov
mov
sub
out
or
lods
lods
cmpsl
xor
insl
loop
pop
stc
dec
imul
dec
push
aad
adc
sub
notl
movsb
cmp
bnd
push
pop
pop
das
repnz
sub
or
jne
mov
ja
addl
repz
imul
rolb
aam
insl
sbbl
aam
adc
das
movsl
xor
mov
sbb
shl
push
sbb
push
xor
mov
cmp
jbe
push
dec
mov
dec
lods
add
lock
hlt
xor
jno
outsl
or
adc
sti
mov
pop
mov
jns
aam
cmp
cltd
fisubrl
mov
lcall
es
ja
sub
mov
jmp
imul
std
mov
sub
jno
cli
add
pop
mov
test
arpl
adc
xchg
and
sub
movsb
lret
sub
rcl
mov
pushf
stos
out
inc
mov
push
rcl
sub
mov
clc
fstps
sub
enter
je
rcrb
dec
rcrl
fnstcw
fisttpl
dec
mov
xchg
fwait
jo
pop
rcrl
imul
xchg
add
ss
or
adc
lahf
mov
cmp
xor
push
jp
sbbb
xchg
out
sbb
sbb
cmp
mov
shl
std
outsl
and
mov
jp
jl
jne
push
and
xchg
sub
sub
pop
lahf
outsb
stc
test
or
xor
xchg
sbb
rorb
in
push
mov
testl
push
test
and
aam
loop
jge
rcrl
pop
mov
std
jl
adc
add
out
rcl
aad
lods
sbb
jl
jmp
imul
lods
test
dec
lret
loopne
xchg
das
lret
fildll
sub
pop
pop
shrl
sub
push
mov
mov
jae
or
add
sub
ja
and
adc
rcl
xchg
inc
arpl
xchg
xchg
enter
jle
mov
mov
xchg
and
inc
xchg
jge
xchg
scas
mov
shrb
xor
jl
xchg
sub
ds
data16
test
add
mov
scas
mov
cmp
loop
outsl
or
pop
lea
scas
adc
add
mov
ljmp
es
aad
iret
mov
fmul
lock
cmp
repz
lcall
jecxz
fsub
leave
fisttpl
insb
push
push
das
adc
add
cwtl
sub
les
in
cld
aas
ret
xor
lret
push
cli
cmp
inc
in
pop
lock
pop
xchg
incl
adc
sub
push
test
aas
mov
sbb
repnz
lret
lret
sbb
cmpsb
pop
movsb
sarl
sbb
cmp
mov
ljmp
adc
sub
out
and
test
ret
jae
popa
pop
cltd
xchg
jmp
push
loope
xchg
add
mov
pusha
inc
dec
and
mov
nop
push
mov
pop
popa
pop
cmp
jb
out
pop
add
hlt
testb
jo
jg
xchg
mov
decl
imul
fldenv
xor
fucom
xchg
xor
pop
xor
mov
sti
add
sarb
pushl
mov
jg
jle
hlt
sub
pop
xchg
aas
xchg
mov
push
in
mov
xchg
imul
cmpsb
push
stos
dec
clc
pushf
das
jmp
clc
in
or
nop
shl
shlb
js
dec
mov
sahf
or
mov
inc
and
adc
jg
and
mov
cmpsl
in
stc
cmp
add
pop
xchg
sbb
adc
lret
pop
or
or
cmp
jmp
adc
jns
add
lahf
scas
loopne
jmp
je
out
push
push
outsb
dec
testb
out
fistpl
add
test
mov
push
xchg
mov
dec
cwtl
pop
sub
adc
mov
or
inc
fmul
jge
and
lods
arpl
sub
adc
xchg
fisubl
push
jecxz
xchg
int
hlt
push
negl
lret
or
test
pop
mov
aas
cmpsl
test
pop
jno
and
pop
sahf
dec
cmpsb
push
ret
shl
insb
xchg
cmpb
mov
push
xchg
or
pop
addb
xor
es
bnd
filds
idiv
sbb
adc
push
mov
pop
les
sbb
dec
mov
and
mov
out
mov
xchg
call
dec
loopne
dec
mov
sbb
outsl
fldcw
imul
mov
mov
push
cmpl
lods
loope
cmpsb
clc
cli
dec
aas
js
push
push
imul
mov
dec
push
nop
fnsave
sbb
pop
iret
mov
in
sub
enter
orl
pop
loope
mul
pop
or
movsw
adc
mov
aam
adc
adc
jnp
mov
divb
test
stos
fisttps
dec
loopne
mov
adc
leave
cmp
outsb
add
sub
inc
jl
sbb
insl
mov
pop
xchg
pop
aaa
ja
scas
mov
lret
xor
testb
pop
mov
inc
sub
fdivrs
out
adc
mov
mov
bound
mov
in
lahf
pop
sub
adc
or
movsb
xor
in
or
mov
faddl
mov
jo
aam
sub
pop
cmp
jp
outsl
sub
ret
xor
sub
rcr
test
test
xor
cmp
and
jecxz
stos
daa
adc
shrl
data16
mov
pop
push
cmp
xchg
ja
andb
std
mov
inc
js
test
xchg
in
cmp
jmp
ss
je
nop
jg
shl
sbb
mov
jle
flds
and
and
mul
adc
imul
dec
ja
jo
jl
dec
leave
aaa
push
imul
imul
adc
andl
xchg
cmp
jb
movsl
out
test
mov
jl
imul
pop
shlb
scas
pop
shr
sahf
scas
push
sbb
jne
and
xchg
pop
jg
or
frstor
mov
repz
pop
adc
pusha
xchg
or
pop
sub
icebp
fs
loop
sahf
loop
in
jae
inc
mov
push
sub
in
pop
andb
adc
popf
in
push
call
cmp
int3
fucomp
clc
cmpsb
dec
mov
loope
loop
inc
pop
rorl
dec
mov
aas
out
pop
mov
cmpsl
push
lea
mov
adc
mov
mov
incl
inc
out
push
sub
inc
insb
loope
insb
and
pop
notl
cmc
stos
add
jns
out
testb
cmp
stos
push
add
and
in
sbb
leave
ret
push
sub
je
sub
jmp
insb
inc
popa
and
fxtract
ficoml
loop
dec
xor
inc
dec
jmp
int3
nop
xor
stc
imul
adc
xor
mov
cmp
push
push
adc
xchg
pop
in
pop
push
pop
inc
sbb
bound
push
shll
mov
mov
mov
cs
pop
insb
add
dec
call
movsl
repnz
xchg
aad
clc
mov
push
test
lcall
es
leave
mov
loop
lds
adc
and
xchg
data16
imul
loopne
push
rcrb
ret
fisubl
jmp
and
int3
fwait
push
test
das
fisttpl
icebp
pop
lahf
push
das
out
xchg
xchg
xchg
mov
cmp
stos
sahf
out
push
aad
mov
sub
lods
lahf
int3
xor
xchg
jae
outsl
cmp
shl
loop
push
add
push
push
mov
and
pop
mov
shll
mov
pop
inc
mov
es
xchg
and
outsl
inc
lret
push
push
iret
cmp
pushf
aam
inc
and
lret
ret
inc
js
mov
sub
inc
inc
pop
mov
sbb
adc
daa
xchg
leave
iret
lods
cmp
sub
out
sti
ret
lahf
inc
imul
dec
repz
lods
int3
mov
adc
push
add
adc
mov
adc
ljmp
mov
out
lods
dec
subb
and
and
scas
or
xor
adcb
outsl
mov
int3
outsl
xchg
pusha
das
xchg
xchg
bound
orb
pop
mov
sti
adc
xchg
jp
jb
mov
je
repnz
dec
mov
mov
aaa
lds
cwtl
add
dec
loopne
int
scas
loopne
jmp
xor
sbb
rolb
and
inc
xchg
and
pop
int
pushf
repnz
in
add
je
mov
adc
mov
pop
mov
dec
ds
cltd
or
xchg
leave
xchg
fwait
call
sub
cmp
lcall
jns
sbb
arpl
jae
ljmp
adc
dec
push
hlt
pop
jae
iret
loope
mov
add
gs
push
test
xchg
sbb
adc
push
jbe
sub
loopne
call
es
sbb
hlt
sbb
mov
dec
addr16
dec
aas
ja
or
shrb
cwtl
pop
pop
mov
enter
pop
fmull
jo
jns
jmp
jo
xchg
rol
push
mov
fidivrl
fcmovnu
sti
jb
pop
cmp
ret
ret
jp
fdivl
mov
shlb
push
or
rolw
mov
and
fs
lahf
movsb
jne
dec
fsubs
icebp
scas
sub
dec
push
rorl
lds
aam
mov
in
inc
std
and
mov
rcll
jle
lret
testl
adc
int
adc
out
xor
and
mov
add
push
sbb
addr16
sbb
repz
mov
bnd
adc
cli
test
rol
add
adc
test
fs
cmpsl
imul
outsb
js
xchg
testl
insl
mov
imul
lea
test
je
subl
scas
pop
or
lea
push
xchg
aam
popa
mov
and
repnz
inc
inc
pop
mov
jns
sbb
ljmp
fbstp
sub
test
jb
xchg
push
push
int3
sti
leave
cmp
dec
push
or
rorl
mov
icebp
cmp
lret
incl
clc
shrb
jno
and
push
ficoms
pop
add
adc
and
adc
daa
xor
mov
add
pop
loopne
xlat
pop
fwait
ljmp
mov
insl
xor
adc
lret
mov
insb
dec
nopl
cmp
jo
aas
dec
push
mov
in
sub
add
decb
or
outsb
add
pop
testl
pusha
add
xor
push
sbb
das
data16
popa
icebp
mov
jno
jns
sub
mov
sbb
dec
iret
aad
mov
fucomip
shrb
stos
pop
movsb
add
sbb
out
adc
scas
fstpt
aad
loopne
enter
loopne
or
icebp
dec
movsb
push
ss
mov
jge
inc
inc
int3
and
fdivp
imul
mov
fwait
pop
push
and
in
sub
flds
push
fstp
pop
mov
xchg
pop
cli
xor
xor
push
jmp
pop
cwtl
lahf
test
xor
adc
mov
dec
jnp
pop
push
out
mov
jg
jmp
stos
mov
mov
sbb
movsl
sub
es
sbb
inc
sbb
push
dec
ficomps
sub
jle
in
faddl
dec
xlat
ret
out
fsts
dec
outsl
into
inc
push
or
fildll
sub
sub
push
jns,pt
or
mov
inc
popa
sub
pushf
jmp
stos
push
inc
ss
sbb
repnz
mov
mov
sbb
popf
mov
cmpb
push
out
fldcw
dec
rclb
out
jno
in
adc
mov
test
mov
jno
loope
cwtl
cmpsb
cmpl
icebp
aam
xchg
shll
jne
mov
cmp
sub
xor
sbb
out
xorl
mov
xchg
ja
inc
cwtl
add
shrb
mov
dec
loop
pop
into
push
adcb
sub
dec
xchg
fbld
add
sbb
mov
clc
mov
inc
sub
jo
adc
inc
dec
dec
cmp
sub
sbb
jg
push
lret
loopne
rcrb
fistl
in
pop
ljmp
xor
iret
ds
cmpsb
push
xchg
shlb
mov
es
rcrl
loopne
pushf
and
push
sbb
adc
jecxz
mov
add
mov
dec
les
mov
mov
adc
insl
ljmp
sbbl
