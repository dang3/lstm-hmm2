sbb
add
mov
sbb
imul
dec
mov
shrb
push
sbb
dec
xchg
out
push
mov
lcall
shll
dec
addr16
dec
in
dec
test
jne
ja
mov
outsb
lods
push
mov
stos
and
test
or
ret
frstor
xor
dec
mov
mov
popa
xlat
in
push
rcl
sbb
std
sbb
mov
inc
stc
add
jne
rcrl
hlt
mov
ficoms
rcrb
daa
cmp
dec
inc
stc
lods
inc
fstl
cmpsl
outsb
jmp
inc
inc
or
mov
push
cmp
sbb
dec
pop
insl
cmp
outsl
adc
cmp
inc
clc
and
lods
xchg
push
or
ficompl
dec
mov
inc
lahf
call
outsb
xchg
out
jb
int3
sub
and
add
or
ja
or
sub
adc
inc
push
popa
mov
dec
lods
xchg
mov
insl
scas
adc
sahf
jns
mov
push
lret
out
jns
lret
mov
xchg
es
movsb
xlat
mov
sub
aad
xor
sbb
add
xchg
rclb
push
mov
out
adc
sbb
insl
jno
mov
cmp
xchg
cwtl
pop
or
test
mov
cmp
mov
bound
push
icebp
dec
mov
pushf
cmp
notl
in
pusha
inc
xchg
bound
cmp
mov
pop
iret
xchg
or
xchg
js
sarl
fildll
jns
rorl
ficomps
sti
pop
cmp
into
adc
cwtl
mov
scas
mul
lret
popf
int3
rol
add
pop
sbb
mov
test
nop
add
jg
scas
je
incb
xor
std
or
stos
lret
jg
in
popf
gs
inc
mov
subb
flds
pop
mov
and
xorl
push
arpl
addr16
jge
push
sti
pop
int3
popa
mov
popf
sub
sub
fadd
mov
loope
arpl
cmp
das
xor
mov
inc
sti
cmp
rcrl
sbb
sbb
xchg
xchg
adc
jb
adc
pop
xlat
cld
adc
cmp
out
push
and
cmp
inc
adc
mov
out
filds
xor
mov
dec
and
pop
cmp
andb
pop
arpl
cmp
fisttps
das
mov
addr16
jl
aaa
jmp
cmp
cmp
cmp
xchg
cmpsl
stos
jo
pusha
inc
js
or
sbb
mov
ds
mov
je
mov
jl
andl
hlt
xor
sbb
es
insl
outsl
mov
add
cld
repz
imul
sub
das
out
xchg
push
cwtl
push
mov
push
in
mov
jge
xchg
sbb
jmp
cmpl
fldl
push
nop
aam
test
rclb
cltd
pop
fstpt
das
and
pop
dec
xor
out
push
and
int3
inc
out
mov
cltd
pusha
xor
gs
mov
cli
out
push
pop
stos
mov
sbb
ss
inc
daa
ja
dec
and
cwtl
jmp
out
stc
push
xchg
mov
das
cmc
aad
std
cmpsb
xor
mov
cmp
inc
into
lods
inc
movsl
push
cwtl
test
cld
sbbb
xor
arpl
add
push
jle
mov
lea
out
mov
xchg
or
leave
insl
cmp
add
scas
insl
inc
push
mov
and
gs
sub
xchg
add
adc
add
out
jge
xchg
mov
cmpsb
xor
fst
mov
mov
mov
jne
lcall
std
js
add
or
and
mov
pop
mov
and
es
popf
ret
jg
outsb
or
mov
leave
push
push
push
mov
dec
sub
add
popa
push
arpl
xchg
shrb
aas
lahf
sbb
shlb
sarl
mov
add
inc
addr16
js
mov
pop
cmp
into
imul
lods
adc
rclb
mov
dec
pcmpeqw
outsb
and
fwait
and
mov
inc
push
pop
dec
pop
sbb
ljmp
jmp
push
mov
xchg
inc
popa
movsb
cmc
movb
scas
aas
iret
inc
lret
or
inc
sub
sbb
cwtl
cmc
dec
push
sti
lock
daa
mov
jo
jmp
and
or
shl
pop
outsb
ljmp
push
cwtl
cmpsb
insb
inc
adc
xor
xchg
cmpb
xlat
outsb
fcmovbe
mov
cmpsl
dec
inc
jecxz
sarl
addl
or
adc
xchg
jo
sbb
cmp
pusha
lret
jg
scas
mov
std
pop
and
aam
shll
push
ja
mov
xor
add
call
lret
stos
mov
outsb
sub
add
sub
loopne
pusha
popf
cmpsl
sbb
shrl
sbb
cltd
or
jns
jl
jecxz
rcr
mov
or
xchg
testl
mov
aad
rclb
lret
xchg
mov
fisttps
loopne
and
cmp
shr
jnp
mov
jnp
movq
push
jbe
push
mov
sahf
lret
pop
xchg
clc
mov
jmp
push
or
test
mov
pusha
sub
stos
cmp
xchg
inc
arpl
and
fstpt
ss
cmp
or
adc
sbbl
and
sbb
push
xchg
adc
jmp
fldenv
enter
or
push
insl
dec
out
push
les
movsl
dec
xchg
dec
sbb
xchg
es
jge
movsl
add
repz
mov
popf
fisubl
loopne
or
repz
and
xor
fwait
iret
fstpl
sbb
sub
sbb
ret
xchg
dec
jmp
clc
sub
ret
into
out
outsb
adc
clc
cmp
jno
add
sub
rorl
cmc
leave
adc
sbb
inc
push
out
clc
stos
int3
jae
sbb
jb
adc
stos
dec
loope
xchg
in
mov
in
aam
out
jae
pop
imul
in
mov
inc
cmp
cli
mull
push
inc
mov
dec
jecxz
cwtl
lret
out
xchg
imul
clc
rorl
and
dec
adc
stc
icebp
mov
dec
mov
lods
and
jg
mov
out
push
lret
out
sbb
xor
and
cmc
lcall
es
cmp
rcrl
xlat
insl
addr16
push
in
ljmp
das
sarl
mov
mov
leave
jb
add
lret
cmp
sbb
lock
mov
xchg
sub
outsb
dec
mov
cmpsl
cld
xor
push
out
sbb
push
xor
mov
ret
xorb
jg
das
es
ja
into
inc
and
in
mov
loopne
aaa
adc
in
mulb
popf
lret
jae
repnz
jmp
inc
inc
mov
push
ret
testl
das
inc
dec
push
jmp
xchg
jecxz
sub
loop
addr16
xor
and
sub
add
insl
fiadds
mov
xor
dec
ljmp
adc
cltd
jbe
push
inc
cld
icebp
cmp
lods
leave
hlt
lock
les
pop
subl
outsl
sbb
xchg
lods
in
mov
dec
dec
jnp
pusha
and
jnp
test
xor
pop
pop
data16
insl
jne
adc
xchg
andl
sub
loopne
gs
pop
mov
cmp
out
fstl
test
xchg
sub
sahf
lret
sahf
add
dec
insl
lods
cmp
sub
cli
cwtl
cmp
and
enter
inc
dec
add
orb
gs
loop
pushf
or
or
sbb
mov
dec
inc
dec
repz
dec
and
cmp
push
pop
movzbl
mov
outsl
dec
stc
cmp
idivl
mov
add
sub
test
mov
push
fists
mov
inc
notb
aas
xor
inc
cmp
jg
pop
push
cs
stos
mov
pop
cmp
mov
sub
shl
add
aas
out
mov
lcall
lock
xor
xchg
push
mov
fdivrs
inc
loope
push
rclb
sbb
cmp
jo
mov
push
add
lret
fisubrs
or
aam
cwtl
adc
sbb
popf
mov
rolb
pop
sarl
stos
pop
stc
decb
and
jbe
mov
xchg
mov
pop
or
push
mov
jnp
mov
into
sub
add
push
mov
test
inc
sbb
cmc
gs
add
xchg
aad
sub
cmp
push
fcompl
xchg
jns
dec
cwtl
test
loop
outsl
xchg
lret
orl
mov
xchg
cmpsl
int
sub
mov
clc
lcall
xor
cmpsl
adc
pop
retw
es
pop
xlat
xor
mov
stos
push
pushl
pop
ret
mov
cmp
aad
cwtl
call
nop
cmpsb
xchg
int3
pop
pop
xchg
aam
popa
lock
std
push
or
fnstenv
mov
xchg
lods
data16
outsl
mov
mov
adc
push
movsl
out
roll
xchg
mov
js
mov
pop
push
sbb
imul
stos
jg
subb
cmc
dec
pushf
sbb
mov
xlat
mov
subb
ret
popf
jmp
xchg
mov
jle
fldcw
push
lea
fsubl
fdiv
mov
aam
fildll
mov
mov
scas
xlat
push
jb
loopne
jo
popa
lret
pop
adc
mov
jmp
out
adc
test
fisttpll
and
cmp
ljmp
negb
pop
inc
mov
mov
cwtl
sub
dec
pop
stc
fbld
push
in
movsl
rcrb
nop
lcall
jl
mov
sub
leave
mov
imul
icebp
push
imul
mov
les
and
inc
test
and
jg
push
sub
push
shrl
and
pusha
or
sti
xor
fs
add
hlt
jg
cli
mov
pop
lret
mov
je
mov
sbb
sbb
gs
xor
mov
push
mov
and
or
sbb
shlb
add
ucomiss
pop
mov
into
mov
sbb
push
pop
fistps
jmp
stos
adc
hlt
test
push
jp
jb
inc
subb
lods
cmp
inc
in
xchg
fisttpl
sbb
sub
or
out
lods
mov
fs
add
mov
arpl
push
add
mov
pop
lods
mov
andl
movsl
ret
cmpsb
push
cmpsl
leave
cmp
bound
mov
sbb
rorb
xchg
mov
or
clc
imul
inc
mov
mov
sub
sbb
cmp
es
clc
leave
or
add
in
sbb
or
scas
test
cltd
jg
jae
movl
mov
inc
sub
hlt
out
mov
or
subb
mov
xchg
fldcw
mov
cmp
or
not
dec
lahf
xchg
insb
mov
scas
sub
stc
fldt
out
cmp
dec
and
sbb
cmpsb
aas
push
and
cli
jge
mov
rorw
out
jne
int3
rcll
fidivrl
hlt
sahf
mov
pusha
pop
cmpsb
mov
and
dec
iret
sub
stc
lcall
insb
xchg
or
test
notb
mov
mov
xchg
mov
push
adc
or
xor
mov
xchg
fmulp
loopne
or
mov
add
imul
into
lahf
mov
in
pop
push
stos
mov
cmp
aaa
lods
pop
and
xor
int3
pop
mov
xchg
imul
movsb
jg
inc
inc
push
addr16
test
pop
sbb
pop
popf
ljmp
fcompl
inc
lods
or
jmp
cmp
add
add
jge
loop
inc
aas
fsubrl
push
sbbb
xchg
lret
cmpsl
inc
fidivs
mov
test
dec
add
andl
sbb
enter
imul
mov
pop
jno
xchg
leave
mov
in
repz
ljmp
test
aaa
sarl
adc
mov
inc
fnstsw
xchg
sub
mov
cmp
push
inc
fcoml
bound
rorb
mov
mov
and
lods
aam
mov
pop
mov
stos
cli
push
popf
xlat
mov
mov
cmp
lds
cmp
mov
pop
addl
test
push
mov
fsubs
inc
test
xor
mov
stos
inc
mov
fdivrl
xor
xchg
jne
out
int
pop
cmc
mov
mov
sub
cmp
mov
mov
xor
ret
push
test
jae
jle
outsb
cmp
movsb
shr
push
cmp
xor
sbb
rcrb
mov
xlat
jl
sub
std
imul
push
mov
pop
jle
and
popf
repnz
mov
popf
pusha
mov
je
mov
xchg
pop
in
fisttpll
push
xchg
jb
leave
das
jle
mov
pop
mov
scas
leave
das
jge
mov
cmp
into
lahf
and
shrl
cmp
fistps
dec
js
gs
out
rol
mov
lcall
push
mov
cmc
sbb
sbb
sub
lret
mov
sahf
inc
rolb
aad
icebp
sarb
xchg
mov
jp
pop
icebp
xchg
sub
es
es
mov
inc
stos
mov
xor
loopne
jno
out
call
dec
clc
mov
cmp
dec
mov
sbb
sub
ret
in
mov
adcb
outsb
sarl
cmpsl
mov
test
in
hlt
add
cmp
push
jp
imul
cs
jecxz
imul
inc
mov
in
sbbl
adc
cwtl
mov
pop
ja
xor
ret
cltd
and
fs
and
test
pop
repz
fs
popa
adc
mov
movsl
jbe
cmp
sub
pop
int3
cli
xor
je
mov
cmpsb
mov
movsb
mov
in
adc
daa
mov
sbb
mov
in
popa
ret
sub
lds
or
mov
jmp
mov
sbb
ds
mov
idivb
pop
push
sbb
adc
sbb
arpl
lret
jecxz
inc
das
mov
pop
mov
sub
pop
sub
push
pusha
mov
lcall
cmc
into
int
push
push
xchg
mov
lods
sub
das
call
or
xor
lahf
sub
cmp
jbe
sahf
notb
cmpsb
icebp
pop
stos
inc
pusha
lea
ss
mov
jmp
xor
lock
test
mov
cld
add
pop
adc
ljmp
mov
les
mov
xor
mov
mov
and
mov
mov
movsl
sub
stos
adc
mov
lock
jnp
addr16
outsb
lods
repz
cmpsl
sub
bswap
jne
lret
dec
or
dec
pop
into
iret
mov
sti
lcall
test
fucomp
in
in
inc
jl
mov
mov
and
loope
pop
movsl
mov
push
fwait
mov
loope
and
or
out
cmpb
jae
pushf
mov
xor
aas
adc
in
ja
dec
in
add
or
cmp
cmp
xor
mov
mov
jl
jnp
scas
mov
fidivl
js
jmp
add
add
sub
aas
in
adc
push
enter
not
out
push
les
fs
cmp
addl
imul
call
adc
lods
dec
fbld
cmp
push
mov
idivl
jle
movsl
mov
movsb
mov
and
inc
sub
sub
mov
call
dec
movsl
ja
adc
sbb
lcall
imul
xor
mov
in
add
popf
mov
push
jb
test
mov
dec
mov
es
roll
sbb
out
push
lcall
mov
scas
and
dec
inc
fmul
rol
xor
cmp
mov
xchg
shl
pop
jecxz
mov
outsl
das
jmp
sub
test
subb
xchg
xchg
push
jb
pushf
mov
push
je
adc
leave
out
fcmovbe
in
call
movsl
cmp
mov
mov
mov
add
scas
in
lods
aaa
cs
cmp
cmpsb
psllq
pop
jne
add
pop
pop
in
xchg
and
and
fistl
jge
mov
sub
hlt
lcall
xor
add
or
and
jmp
aas
or
shlb
fisubs
pop
xor
mov
shlb
in
mov
cmc
pop
dec
shrl
xchg
call
shr
mov
add
pop
ret
jecxz
inc
add
push
movsl
or
call
cwtl
sbb
daa
lock
mov
clc
cmp
mov
cmovb
sub
mov
add
cmp
dec
and
mov
push
mov
pop
inc
std
repz
scas
repnz
arpl
dec
loopne
mov
or
or
pop
mov
xor
mov
aad
sub
xor
call
xchg
cltd
or
popf
movsb
mov
mov
mov
cmp
sub
andl
lcall
mov
pop
call
fidivrl
loopne
gs
mov
es
jg
cmp
or
xchg
stc
les
or
insl
mov
sahf
add
ja
inc
shlb
mov
dec
addr16
aam
and
sub
in
int
xor
mov
inc
outsb
adc
repz
ljmp
xor
sbb
push
dec
mov
test
or
repz
dec
addb
loope
fs
aam
jo
sub
push
aas
push
push
shlb
repz
sub
xchg
cli
jecxz
imul
inc
sub
add
rcrb
popf
inc
adc
rcrl
add
outsl
test
in
rolb
dec
xor
stos
push
fcomi
iret
sbb
push
inc
outsb
jl
jae
and
out
out
movsb
cli
and
cmp
xchg
js
aam
jg
sub
jmp
add
or
fs
sbb
pop
cmpsl
mov
push
dec
mov
scas
in
aam
shll
pop
mov
lahf
fnstenv
xor
inc
and
mov
ja
mov
mov
push
sahf
loopne
fbld
mov
test
cld
jp
lods
daa
mov
mov
jge
test
jmp
lock
scas
pushf
pop
and
ds
and
adc
xorl
mov
in
cwtl
cmp
into
and
jno
ja
lcall
jb
ret
ja
imul
mov
pop
xor
add
push
xchg
push
ret
ss
rorl
out
pushfw
sub
shll
add
jl
push
dec
pop
cmp
or
adc
mov
xlat
aad
fbld
pop
int
mov
rcr
jl
imul
inc
stos
or
dec
or
aas
inc
loopne
adc
mov
out
jne
gs
or
mov
jge
fs
pop
adc
adc
adc
push
lret
pop
mov
mov
stc
jge
mov
pop
ret
push
xor
inc
test
xchg
sub
cld
xor
inc
mov
imul
imul
jecxz
mov
add
fldenv
jle
fwait
fs
and
in
cli
repnz
repnz
xchg
insb
mov
dec
pop
addr16
aam
stc
dec
pop
jno
std
pop
outsb
sbb
dec
inc
dec
outsl
imul
enter
dec
fdivs
gs
jle
das
cmp
sbb
fidivrl
cld
adc
jae
cmp
xchg
into
xchg
xchg
jb
mov
aam
adc
cmpsb
outsb
addr16
jae
dec
add
mov
xchg
in
repz
loopne
test
mov
aad
pop
sbbl
mov
inc
inc
xorl
cs
inc
push
xorl
xor
movhps
jge
ds
jnp
out
lock
es
pop
out
test
sbb
inc
xchg
pop
sbb
and
mov
xchg
out
cld
das
mov
fprem
ja
test
push
sbb
outsb
dec
shll
call
scas
mov
call
cmp
sub
dec
fcomps
jae
pop
mov
scas
dec
fdivp
pop
jnp
pop
imul
push
sbb
ds
cmc
pop
mov
shll
ret
idivl
cmc
stos
sbb
sub
ljmp
dec
and
adc
adc
sbb
mov
push
mov
leave
inc
scas
pusha
mov
fdivp
out
push
mov
xor
dec
sub
repnz
popa
in
pop
stc
and
jb
femms
leave
aam
pop
xor
xchg
hlt
mov
cmp
andl
xor
cmc
fucompp
dec
xchg
jbe
push
sub
xchg
addr16
sub
dec
or
stc
sahf
mov
pop
cmp
dec
dec
lret
je
xchg
xor
jbe
xor
lcall
int
aam
das
mov
in
das
inc
mov
pushf
scas
sub
pop
ret
add
cmp
cmp
add
mov
cltd
jae
loope
negb
psubusw
sub
pop
dec
mov
push
xchg
sub
neg
js
popf
iret
pop
pusha
xchg
mov
inc
xor
in
faddl
lcall
pushf
in
aas
lods
rcll
cmpsb
mov
movsb
rorb
xchg
in
xlat
imull
popa
and
mov
in
xor
out
popf
lods
out
addl
xchg
add
mov
jmp
jp
xlat
add
or
hlt
sbb
imul
or
cmp
repz
ret
sahf
cmc
cld
cmp
fstpt
orl
mov
cmp
sbb
lret
stos
clc
scas
xorl
movsl
xor
test
test
iret
mov
or
or
inc
cmpsb
sub
push
into
in
mov
and
xor
pop
xchg
shr
jp
and
test
xor
gs
cmp
movsl
repz
lods
mov
jl
movsl
jns
ja
cmp
in
sahf
adc
add
sahf
dec
push
xlat
adc
fistpll
or
mov
fs
lahf
sbb
pusha
enter
or
inc
mov
andb
or
inc
jns
stos
jns
xlat
mov
jmp
mov
jne
inc
es
dec
push
in
fxch
loopne
pop
imul
sbb
adc
movsb
cs
loop
add
cld
dec
pop
xchg
test
pusha
test
dec
add
data16
and
dec
imul
pop
shrb
mov
lahf
push
add
cmc
cwtl
push
ficoms
mov
gs
xchg
ljmp
xchg
mov
incl
cwtl
aas
in
stos
imul
adc
popa
xor
push
jg
push
btrl
aam
mov
adc
arpl
pusha
xor
lds
sti
scas
mov
lock
xor
repz
jmp
or
xchg
rclb
clc
shlb
adc
cmc
xor
push
jbe
cmp
cmp
mov
inc
pop
dec
push
daa
inc
sub
iret
mov
imul
sti
ds
mov
jbe
or
sub
ljmp
push
inc
jbe
pop
adc
adc
add
sbb
jl
jne
cmp
ret
stos
jne
jle
sbb
insb
push
xor
cmc
repnz
sub
or
jbe,pt
mov
cmp
sub
cmc
in
std
pop
sub
scas
mov
sbb
push
push
stc
xor
movsl
and
adc
pop
ret
pop
jnp
push
mov
jns
cmp
in
pop
mov
sub
aam
into
or
mov
and
jp
out
test
push
stos
sbb
enter
dec
mov
cmp
rol
mov
nop
and
das
xchg
leave
mov
fwait
arpl
jge
mov
dec
imul
xorb
inc
add
mov
cmpsb
dec
jo
mov
mov
cmp
mov
push
in
popa
pop
cmpsl
mov
insb
pop
xchg
aaa
cli
pop
scas
adc
mov
das
cmp
push
xchg
pop
imul
mov
jmp
sbb
jmp
push
jae
pop
inc
out
dec
mov
stos
and
push
sbb
lods
cs
cwtl
pop
cmc
stos
xchg
push
or
pop
cwtl
mov
insl
rolb
push
mov
mov
sarb
pop
add
jl
outsb
call
in
sbb
adc
add
dec
add
sbb
cmp
add
enter
aaa
push
pop
fbstp
pusha
movsb
jle
fwait
pop
mov
outsb
adc
and
pushf
sub
into
notb
shl
mov
xchg
bound
inc
test
jbe
mov
js
lds
fidivl
xor
into
xchg
xor
jne
leave
mov
mov
sbb
outsl
cmp
cs
sarl
sub
and
dec
sbb
inc
sbb
mov
sub
daa
xchg
add
adc
xchg
xchg
push
fidivs
mov
enter
push
xor
into
sbb
jbe
pop
mov
xor
insb
xor
or
jae
in
aad
push
cmp
mov
cmp
mov
inc
in
mov
push
mov
mov
out
sti
das
xchg
adc
lods
cmc
mov
push
sub
cmp
out
stos
sub
cli
mov
fadd
sub
push
testb
shrl
psrlw
int
and
cmp
lahf
add
xor
ss
insb
mov
lock
addr16
fldt
ffreep
jne
test
inc
int
and
scas
or
sbb
pop
mov
and
clc
popa
outsb
js
arpl
cmp
fcmovnbe
addr16
pop
cltd
movsb
movsl
jl
arpl
or
int
or
pop
aam
push
nopl
xchg
cmp
sub
adc
enter
xlat
mov
sbb
loop
jbe
inc
xlat
out
push
inc
adc
mov
lock
push
rclb
rolb
add
push
inc
mov
sub
sub
rcll
mov
xchg
xchg
int3
inc
popf
fistpl
dec
adc
sbb
sahf
adcb
shll
dec
and
pop
xor
jb
mov
cmc
sbb
loopne
xchg
push
jle
pop
insb
stos
push
and
lea
jbe
lcall
mov
add
out
jo
lea
xor
adc
and
jno
inc
fldl
and
test
mov
cmc
shr
mov
pop
shlb
xor
and
xlat
stos
stos
test
es
cmp
out
icebp
in
cld
fdivr
cmp
int3
pop
cmp
inc
arpl
jg
fldenv
adc
bound
add
lea
and
into
jge
mov
mov
out
sahf
sub
xchg
sub
mov
jecxz
mov
mov
out
mov
dec
push
sbb
or
cld
fwait
aas
sbbb
jb
insl
hlt
fs
jge
outsl
incb
ret
mov
mov
outsb
int
shrl
icebp
adc
mov
pop
xchg
sti
push
sub
push
jno
sub
ds
jb
xchg
cmc
stos
jb
bound
popf
sbb
in
mov
xchg
mul
loop
sbb
xchg
mov
scas
adc
mov
popf
ljmp
imul
jp
je
cmp
pop
push
scas
ja
add
cmp
fs
mov
cmp
ret
jecxz
sbb
pop
in
add
add
in
div
in
rcll
andl
jge
cmpb
in
jno
stos
jae
insl
bound
push
aas
jecxz
jecxz
xchg
aaa
jns
mov
add
scas
movsl
sub
mov
sub
stos
clc
imul
sbb
addr16
and
and
push
dec
stos
insb
push
inc
cmp
pop
mov
into
pushf
mov
and
sub
test
adc
xorb
adc
arpl
es
jnp
mov
and
mulb
push
push
ret
dec
jno
mov
add
das
mov
lret
movsl
shll
cltd
js
push
push
aas
pop
pop
dec
lods
repz
popa
add
js
icebp
mov
adcb
jecxz
sub
iret
xchg
sti
bound
pusha
or
mov
int
cmpsb
sti
dec
iret
push
jge
into
lds
inc
adcb
popf
push
or
mov
mov
sub
inc
or
cltd
rolb
sbb
push
adc
dec
pop
popa
xchg
mov
scas
sub
dec
mov
stc
xchg
mov
adcb
pop
or
adc
cld
or
andb
lret
add
rorl
mov
pop
mov
cmp
pop
outsb
lret
jbe
mov
inc
pushf
out
and
jo
push
push
pusha
sbb
movsb
js
clc
xchg
pop
jo
sub
call
mov
mov
push
jns
mov
xor
sbb
cltd
rorb
inc
dec
cmc
bound
lods
adc
pop
outsl
pop
adc
inc
in
test
notl
mov
xchg
fildl
lods
popf
jle
cs
hlt
xchg
popf
mov
cmp
aad
xchg
jg
mov
js
into
into
jmp
popa
push
push
ss
insl
stc
lret
movl
iret
fsubr
or
popa
pusha
test
and
scas
xchg
adc
jmp
lock
add
inc
xchg
pushf
adc
in
pop
mov
loop
pop
loop
xor
enter
aam
les
push
scas
and
insl
mov
cmp
jl
add
mov
and
insl
xor
aas
loopne
mov
xor
ret
pop
jl
push
jecxz
lea
fwait
int
adc
add
pop
pushf
lahf
scas
ficompl
popf
test
push
lea
aad
pop
mov
cmp
fisttps
sub
stos
add
scas
ljmp
pop
outsb
add
xchg
test
push
ret
fdivrs
mov
dec
add
shrl
dec
mov
or
or
jl
cltd
adc
shll
jns
pop
push
and
sti
in
xchg
xchg
jl
test
mov
pop
imul
xchg
incb
insb
sbb
push
push
pop
xlat
mov
stc
adc
cmp
adc
sub
adc
pop
das
dec
push
pop
ljmp
sbb
jb
pop
rclb
mov
push
jns
cmp
mov
loop
scas
jnp
ja
fwait
mov
sbb
adc
arpl
nop
sbb
adcl
jne
cmp
out
adc
push
icebp
arpl
ds
in
int3
inc
or
pop
fdivl
add
or
outsb
div
dec
rorb
or
iret
pop
push
inc
xchg
icebp
in
inc
pop
shll
jae
sahf
push
xor
push
es
fists
popf
xor
pop
mov
and
mulb
lret
cmp
xor
pop
aas
in
or
jg
push
inc
das
jg
das
lods
cmp
cmp
test
push
pop
xchg
inc
push
dec
mov
xchg
neg
into
fisubs
pop
cmpsl
or
cmc
jp
stos
cmp
xchg
inc
and
lea
mov
gs
addb
das
arpl
ds
ficoms
mov
sahf
lcall
sub
adc
ds
pop
dec
and
test
orl
lret
fsubl
cmp
loop
mov
push
lret
and
cmpsl
or
ficoms
mov
je
dec
out
inc
push
or
push
movsb
or
sar
or
repnz
arpl
out
iret
sar
xchg
xor
leave
loopne
push
or
int3
sbb
in
push
xor
cltd
push
xor
jecxz
lret
cmp
xchg
mov
cs
or
fidivs
int3
js
jo
jmp
outsl
cmp
clc
rol
fldt
xchg
mov
xor
leave
add
roll
push
in
sub
pop
push
mov
pop
in
insb
pushf
aad
ret
out
fisttpl
cmp
jle
mov
loope
xchg
fmulp
pop
xor
test
cmp
and
test
in
fistps
jb
int3
movsb
xor
pop
ret
sub
mov
pushf
jnp
xchg
je
or
in
stos
sbb
data16
subl
out
inc
add
sbb
icebp
ja
and
fnstsw
or
jl
sub
xchg
mov
mov
rorl
mov
sbb
add
loopne
sbb
push
hlt
adc
shlb
and
cmc
push
jmp
pop
shrb
pop
ss
xlat
mull
aad
sbb
dec
dec
mov
repnz
aad
cltd
sti
pop
cmc
shl
subb
jle
cwtl
inc
mov
inc
jge
sbb
je
lahf
movl
xchg
mov
ljmp
addr16
or
sbb
aam
push
movsb
imul
stos
gs
jne
dec
jb
sub
adc
daa
outsb
stos
cmp
cmpsb
mov
inc
jns
dec
adc
addr16
das
add
popa
divb
es
mov
jns
insl
fs
mov
mov
xorl
pop
lods
dec
je
insb
ljmp
add
mov
test
jge
stc
or
sub
mov
pop
ret
inc
je
shll
ret
pop
aad
push
and
scas
insl
lret
cld
sub
adc
mov
addr16
lret
hlt
jno
push
add
pop
or
jne
dec
int
and
sbb
xchg
xchg
std
mov
xchg
pop
in
subl
dec
imul
movsb
mov
ja
mov
ljmp
std
rcrl
fnsave
sub
xor
sub
outsl
dec
inc
jge
repnz
pop
push
mov
stos
lods
aas
repz
lcall
int
into
mov
cmp
cmpsl
ja
add
and
fsubrl
cmp
lret
lds
jp
iret
xor
daa
jl
std
out
push
inc
xchg
adc
xor
dec
movsb
addr16
arpl
jmp
lods
sub
jmp
imul
lret
mov
add
add
xor
lods
pop
ja
addb
mov
jg
imul
aad
dec
int
push
stc
push
add
mov
push
insb
pusha
sub
lcall
dec
lea
xor
shll
test
jge
sbbb
je
inc
dec
je
sub
pmulhw
or
cli
out
insl
outsb
rorl
xchg
sub
xchg
insl
or
dec
mov
push
inc
imul
mov
inc
add
inc
or
cs
cmpsb
in
xchg
int
jmp
pushf
jl
mov
mov
sahf
pop
std
xchg
inc
xchg
pop
push
xchg
movsb
sub
xor
insb
mov
xchg
nop
sub
and
cmpl
icebp
stos
add
loop
cmpsb
adc
xchg
and
xchg
cmp
jge
rcr
add
xchg
cmp
ljmp
add
inc
and
shlb
adc
add
xor
movsl
mov
push
jo
cmpsb
sub
movsb
mov
dec
jp
and
mov
dec
cmc
mov
mov
lret
sbb
movsl
cmp
loopne
mov
jns
pop
dec
mov
icebp
mov
add
pushf
jb
push
sbb
lret
leave
mov
stc
pop
add
mov
adc
push
mov
or
imul
scas
jnp
xor
popf
ja
cli
and
sub
xchg
cmp
popa
sub
and
insl
jl
in
push
pop
sbb
cmp
shr
mov
push
xlat
xchg
ficomps
cmpsb
mov
mov
jmp
xchg
sub
int3
imul
cmpsl
fildll
xchg
in
xor
inc
push
push
lret
imul
ret
xchg
out
xchg
cmpsb
cmc
mov
pushf
xchg
gs
insb
jge
adc
inc
jg
lret
xor
inc
xchg
lret
mov
mov
sbb
mov
lahf
test
jns
lock
sbb
sar
and
enter
jae
mov
ret
xchg
mov
shrl
mov
cmpsl
mov
jo
bound
mov
cmp
push
enter
fcoms
out
push
jbe
dec
ljmp
in
cltd
xchg
cmovno
mov
or
in
and
mov
mov
jmp
lahf
mov
insl
and
cmp
xor
jmp
xor
testb
dec
repnz
ljmp
xchg
leave
or
dec
mov
pop
adc
dec
inc
imul
cs
in
in
mov
fwait
dec
push
mov
or
mov
push
popf
sub
movsl
rcll
cltd
lods
add
inc
adc
sub
jge
sbb
loop
dec
imul
movsl
idivb
xchg
cmpsb
xor
das
inc
fadds
int3
lds
in
add
push
jmp
xor
adc
leave
pusha
lock
stc
fiaddl
repz
xchg
mulb
xchg
out
js
jae
mov
and
scas
mov
divl
cwtl
sar
std
sub
iret
xor
aam
sub
pop
xchg
inc
jne
sbb
mov
ret
stc
cli
repnz
or
mov
xchg
mov
adc
in
jbe
pop
movsb
push
scas
in
shlb
ret
fiadds
mov
movsl
dec
cltd
lret
les
popa
dec
scas
decb
movsl
int
adc
fwait
ds
jno
push
bound
push
and
sub
scas
push
cmp
xchg
mov
xchg
lods
stc
vextractps
cmp
cli
pop
jb
shrb
popf
mov
stos
mov
lcall
mov
pop
jle
xor
cld
out
fs
data16
imul
cmp
pop
xor
jo
nop
add
cmpsb
sti
inc
lods
push
jae
ficomps
add
lds
sub
jo
fwait
jns
ljmp
lds
filds
adc
iret
mov
add
aaa
cmpsl
inc
iret
dec
cld
jno
subb
es
ds
sti
and
mov
inc
lcall
xor
mov
movsl
jae
jg
or
jg
lods
pop
pop
ljmp
mov
fidivs
jl
arpl
jnp
mov
adc
icebp
dec
xchg
ds
dec
lea
js
jae
daa
iret
jno
sbb
test
mov
idivb
jae
xlat
sbb
xchg
xchg
dec
test
pop
xchg
shrb
rcr
cwtl
fwait
mov
ja
xchg
mov
adc
lods
call
inc
js
xchg
addr16
hlt
adc
mov
loopne
leave
fwait
out
cmp
clc
mov
pop
xchg
cmp
cmc
cmp
dec
decb
into
arpl
inc
test
add
repz
popf
pop
sub
scas
ljmp
dec
pop
push
pop
repnz
test
add
mov
pushf
repz
ss
and
dec
mov
cmp
mov
out
fs
and
js
in
and
jno
adc
bnd
dec
xlat
mov
sbb
adcb
lahf
andb
daa
fwait
int
sbb
push
popa
jno
inc
sub
loopne
xchg
cwtl
mov
cmp
repnz
jae
cmc
xchg
aas
mov
jbe
les
adc
cmp
dec
adc
cmp
pushf
popf
daa
and
mov
xor
lret
xor
mov
sbb
jg
sub
arpl
scas
sar
push
push
mov
lret
lods
dec
adc
jo
stos
repz
inc
pop
bswap
adc
mov
clc
dec
roll
push
es
pop
nop
lods
add
fldcw
orb
sub
ror
decl
sub
xor
jns
out
fldt
push
pop
pop
ror
js
add
mov
sbb
jg
sar
in
cmc
in
lret
scas
cmp
ljmp
ljmp
pushf
xlat
inc
jg
pusha
dec
xchg
mov
xchg
inc
sbb
outsl
hlt
jecxz
jbe
push
es
and
jle
xor
lods
rcrb
inc
into
mov
icebp
stos
loopne
and
mov
cmp
dec
aad
das
add
into
sbb
subl
call
out
push
lret
je
or
sbb
mov
mov
and
and
xchg
pop
push
rolb
cmp
mov
jecxz
or
into
and
mov
sub
adc
push
inc
orb
pusha
outsl
jp
adc
jne
or
xor
ja
add
xchg
ljmp
sbb
adcb
test
pushl
xchg
cmp
cmp
pusha
cmpsl
push
imul
out
mov
cs
mov
enter
je
sahf
sub
dec
stos
mov
jno
push
repnz
pusha
mov
push
xchg
stos
outsl
or
ds
les
into
shrl
push
daa
push
add
or
xor
out
pop
push
cli
fadd
stc
pop
aaa
out
sti
or
push
xchg
jp
imul
fcomps
mov
cmc
js
and
loopne
mov
jne
push
ja
orb
push
fldcw
inc
jb
or
out
dec
mov
fs
sub
popa
xchg
adc
cmp
ret
fs
jg
sub
in
pop
mov
scas
adc
push
inc
outsb
inc
add
sarb
sbb
inc
cld
je
inc
out
dec
adc
push
addr16
push
dec
addl
mov
pop
dec
push
dec
and
mov
or
js
and
sbb
pop
xchg
iret
push
fincstp
cld
lds
imull
and
cmp
fxtract
mov
push
mov
adc
lds
push
add
cmpsb
sbb
pop
jecxz
or
jnp
cwtl
pop
mov
enter
repnz
inc
fldl
rol
mov
inc
push
jns
xor
mov
cmp
clc
gs
sarl
mov
pop
dec
inc
lods
mov
push
pop
mov
add
inc
loopne
dec
inc
jmp
cmp
jo
leave
xorl
xchg
in
jae
xor
push
inc
mov
xor
in
repz
mov
sbb
or
jl
shll
and
leave
jmp
negl
and
mov
push
and
push
cs
imul
xor
popa
push
lods
pop
arpl
pop
inc
sbb
and
data16
cmp
push
lods
push
jl
ja
dec
icebp
cld
movsb
push
clc
das
xor
stc
or
and
fsubr
inc
out
mov
int
das
enter
jb
cltd
pop
cmp
int
or
popa
outsl
mov
shrb
lds
repnz
cwtl
rcr
sub
mov
mov
sub
xchg
xchg
scas
dec
and
mov
or
aas
stos
xchg
pop
inc
popf
loope
stc
bnd
dec
jle
pop
sub
mov
mov
adc
cld
jb
daa
push
insb
inc
int3
test
pop
fildl
rcrl
sarb
fwait
add
shll
or
mov
pop
push
out
ljmp
pop
jbe
or
mov
mov
insl
in
ds
pusha
jb
dec
bound
outsb
add
push
stos
outsl
cltd
mov
dec
loop
xor
int3
imul
jo
sti
js
mov
mov
dec
jmp
mov
rcrl
push
out
or
sub
jb
xchg
xchg
std
lea
fildll
ss
jl
mov
mov
sbb
loope
in
enter
enter
movsb
pop
mov
subl
hlt
lret
inc
mov
rcl
movsb
incb
lret
divb
mov
mov
das
popf
mov
mov
mov
pop
movsb
jge
nop
out
sbb
popa
add
push
jecxz
pop
rorl
pusha
jnp
setp
lahf
mov
mov
pop
and
mov
xchg
cmpb
sarl
dec
jg
push
sti
push
test
cld
jmp
sub
dec
jnp
and
inc
sbb
push
pusha
fistps
aad
mov
mov
push
outsb
xor
lret
dec
loope
push
xchg
push
jg
mov
mov
ret
sarl
pop
pop
sub
bound
push
cwtl
idivl
mov
loop
jmp
mov
stc
cwtl
sub
mov
jg
in
or
stos
enter
or
popf
or
hlt
fiadds
xchg
inc
loopne
cmp
pop
insl
and
jae
lds
hlt
mov
mov
inc
cli
cwtl
adc
mov
cmp
pop
adc
adcb
stc
outsb
pusha
sub
repnz
leave
fsubs
sbb
add
fistpl
and
dec
or
scas
shll
dec
lock
push
es
jle
xchg
aam
stos
in
xor
hlt
mov
shlb
push
cltd
fisubs
lahf
mov
mov
clc
cmpsb
scas
jmp
daa
fstpt
arpl
ss
dec
leave
lods
leave
dec
xlat
mov
out
inc
rorb
test
push
ljmp
jmp
in
mov
clc
lods
movups
add
mov
jne
sarb
loope
mov
jge
test
mov
mov
lret
push
add
and
iret
pusha
xor
ss
cmpsb
dec
mov
dec
jb
mov
and
dec
cmpsl
xor
daa
cli
insl
lock
pop
in
je
mov
cmp
mov
add
xchg
imul
inc
aas
and
in
mov
adc
lods
mov
loope
xchg
fwait
test
or
mov
cmp
sahf
lods
add
std
roll
or
jp
leave
dec
ret
mov
cwtl
push
loop
jecxz
xchg
adc
shll
sub
sbb
loop
icebp
loop
lcall
mov
adc
jmp
mov
mov
cmp
ret
out
daa
pop
popa
clc
arpl
mov
and
pop
into
jb
std
pop
inc
pop
loope
or
xchg
jle,pn
inc
ljmp
jae
dec
push
jecxz
or
stc
mov
dec
fldt
jo
cmpsl
ss
shlb
outsl
mov
inc
ret
pop
adc
xchg
dec
or
in
ds
inc
out
push
cli
sub
loopne
popa
cli
lods
xor
ja
scas
fcompl
repz
sbb
xlat
cmp
cmp
xor
hlt
pop
bound
fadd
mov
pop
idiv
ljmp
cmp
movsl
inc
cli
jbe
cmp
add
sbb
movsb
lret
inc
pop
pop
xlat
inc
cmp
insl
scas
push
add
insl
xchg
pop
mov
xchg
xchg
xlat
frstor
loopne
mov
stc
add
jae
add
mov
sarl
xchg
mov
mov
add
xor
lret
jp
shll
adc
loopne
inc
jg
idivb
into
enter
xchg
pop
and
pushf
push
arpl
mov
aaa
jne
xchg
mov
xlat
jno
add
or
dec
inc
sahf
in
pop
lods
xchg
int3
jp
jg
and
mov
cmp
repnz
jnp
sub
push
mov
test
jb
sbb
lcall
loopne
xchg
add
mov
mov
test
jne
xor
daa
orb
out
cmpsb
dec
testb
idivb
orl
adc
and
and
jg
call
dec
push
lahf
icebp
pushf
dec
imul
lret
gs
xor
dec
pop
adc
rorl
test
mov
hlt
gs
pop
iret
cmp
dec
xor
nop
adc
inc
fdivp
sub
fdivs
dec
fucom
mov
adc
mov
push
xchg
jno
jmp
sub
mov
adc
push
pop
fptan
out
push
js
mov
repz
out
push
cs
xchg
add
test
adc
aad
sbb
dec
out
cmp
pop
nop
mov
mov
jne
jge
test
add
stc
idivl
push
addr16
mov
in
out
adc
adc
and
inc
fs
jnp
xor
xchg
ljmp
sti
es
inc
cmpsb
out
xchg
lds
and
xor
ljmp
test
iret
mov
pop
cs
fidivs
inc
cli
adc
mov
movsb
popf
sbb
aaa
repnz
stos
pop
adc
add
sbb
xchg
imull
stos
ss
or
cmpb
sbb
and
xchg
mov
cmpsl
push
cwtl
ljmp
rolb
pop
addr16
xchg
sub
rep
and
mov
or
fsubl
push
inc
nop
xor
test
out
loopne
ret
xchg
dec
sub
arpl
push
mov
outsb
aaa
dec
mov
and
std
mov
mov
sarl
push
insl
aad
inc
dec
adc
test
gs
push
xchg
and
aas
lods
cld
mov
add
inc
sbb
add
inc
mov
xchg
js
out
hlt
dec
xchg
cmp
lods
lods
and
ljmp
dec
icebp
mov
pop
push
std
pushf
pop
and
mov
lcall
in
cmp
inc
or
sbb
mov
push
xchg
cmp
ret
cmp
dec
inc
mov
inc
lods
push
jne
jnp
pop
outsl
dec
dec
dec
xlat
mov
and
sahf
ret
addb
xlat
sbb
push
das
pop
fdivrs
mov
and
mov
push
adc
and
mov
lahf
jle
jp
mov
ud1
add
pop
iret
jbe
outsl
loopne
bound
adc
sub
jb
push
cld
test
orb
xor
mov
bound
push
mov
out
icebp
cld
dec
repz
test
jecxz
push
sbb
and
xchg
divl
add
lods
jp
cs
icebp
mov
sbb
mov
cli
scas
sub
sti
pop
ljmp
out
cwtl
loope
jp
xchg
iret
stos
pop
sbb
cmp
xor
jmp
daa
sub
mov
cmp
sub
jb
push
lret
aas
lret
mov
mov
xchg
push
adc
aaa
int
cmp
pop
shlb
loop
fisttpll
sahf
pop
xor
cmp
dec
dec
and
dec
push
cmpl
les
shr
push
loope
sbb
movsl
mov
jle
sti
jb
adc
cltd
xchg
inc
std
out
rclb
sub
add
andps
mov
bnd
cmp
pop
popa
hlt
add
fnstsw
sti
xchg
repnz
jno
test
push
xchg
or
mov
sbb
jae
repz
push
test
addr16
les
mov
mov
add
jo
jmp
inc
or
lds
cli
pop
cli
and
ss
push
mov
roll
decb
movsb
sbb
mov
cmp
les
mov
lock
js
pop
mov
mov
test
or
sti
test
cmpsb
sub
push
lret
add
sahf
xor
mov
lods
aad
push
mov
sbb
pusha
push
mov
pop
xchg
sti
pushf
sub
aam
cmpl
ret
ss
mov
push
test
jb
sbb
jno
outsl
and
mov
inc
arpl
jnp,pt
outsb
add
jno
sahf
outsb
or
cmp
jecxz
and
roll
xor
adc
test
xchg
jno
xchg
sub
dec
xchg
adc
imul
repnz
xlat
rcl
or
add
test
jno
and
dec
mov
fbld
mov
flds
xchg
ss
push
cli
std
mov
cld
mov
push
xor
cmpsb
xchg
sbb
xchg
sbb
popf
pop
jae
inc
mov
cld
mov
push
lock
repnz
cwtl
xchg
mov
cld
iret
jbe
repnz
cmpsb
push
out
xchg
fcmovbe
xchg
pop
xlat
inc
xchg
ss
imull
and
pushf
outsl
jne
ljmp
movsl
push
or
cltd
cld
in
or
cmp
int3
out
xchg
mov
mov
fs
into
pop
xchg
jo
push
push
pop
sub
daa
push
test
sub
rcr
fldt
dec
and
mov
es
and
xchg
ret
insl
decb
adc
popa
jno
into
xor
pusha
loop
sub
xchg
jbe
stc
in
push
sbb
popf
jnp
call
xchg
add
lods
xlat
call
mov
pushf
sbbb
call
in
mov
into
aas
pushf
jmp
xor
cmp
cwtl
pop
sub
cld
mov
insb
xor
pop
ret
out
cmp
subl
test
cmpb
mov
out
ljmp
lock
add
sub
ja
or
in
pop
mov
jno
mov
mov
push
mov
adc
lea
das
outsl
pop
jmp
xlat
cmp
rorb
test
scas
aaa
and
test
out
dec
jle
or
stos
pop
aad
cmp
test
clc
cmc
dec
insl
shrb
sbb
es
bound
pop
xchg
inc
mov
adc
push
in
adc
fs
xor
in
in
aad
cmp
out
aas
pop
insl
int
fdivr
mov
cmp
sub
pop
enter
es
dec
inc
xchg
xchg
test
cmp
lock
out
pop
push
inc
rcll
outsl
fcmovu
sub
sbb
lods
add
mov
xor
sbb
std
mov
xchg
jo
add
aas
mov
or
push
adc
sbb
addb
stc
imul
cld
daa
inc
or
stc
mov
mov
enter
popa
ret
adc
fnstcw
cli
test
call
cmc
or
mov
loope
xchg
or
mov
xor
mov
dec
lea
jge
mov
lahf
xchg
aas
adc
mov
mov
push
mov
mov
and
sub
int
pusha
fsubs
push
shrb
mov
rolb
in
cmc
loop
sub
pop
and
inc
and
inc
mov
fadds
std
fstpt
push
sbb
mov
je
xchg
sti
mov
cmp
adc
test
sahf
xor
mov
and
lds
push
gs
shll
insb
mov
sub
mov
movsb
xchg
xchg
jnp
sub
gs
out
xchg
mov
lret
loope
sbb
sub
jo
adc
arpl
dec
or
hlt
mov
adc
push
imul
xlat
dec
jmp
push
das
iret
aad
inc
fcoml
dec
stos
lock
out
xor
mov
xor
jno
sub
stos
jb
mov
in
mov
fcoms
pop
jle
insb
cld
add
sub
xor
xchg
pushf
lods
push
test
roll
rcll
fdivs
rorb
sbb
shlb
push
lock
jg
cmp
sbb
add
cmp
adc
imul
push
movsl
mov
inc
dec
es
jnp
cmc
fiaddl
mov
push
mov
sti
lock
stc
push
in
sbb
jnp
fldln2
aas
sbb
shrb
inc
mov
inc
push
mov
aas
shll
arpl
jmp
sbb
shrb
insb
in
sub
daa
push
test
rorl
mov
imul
mov
pushf
stos
mov
test
movsl
and
xchg
andb
fiadds
push
mov
mov
mov
in
xchg
sub
lods
push
shr
or
insb
dec
insl
mov
jecxz
into
dec
in
pop
and
outsb
mov
sbb
icebp
sub
idivb
dec
out
fiaddl
fldcw
xchg
push
lods
sub
int
jne
mov
pop
test
cli
lea
lods
cmp
cmpsb
xchg
mov
into
jecxz
xor
sbb
push
dec
das
pop
fsubrs
mov
bound
std
mov
adc
fsubp
or
inc
cld
and
lods
cmp
sbb
mov
mov
fsubrs
xor
cmp
xor
sar
or
test
aaa
inc
jmp
inc
mov
into
push
mov
jne
lock
jmp
fistpll
or
mov
test
roll
pop
cmp
out
pop
jmp
pop
data16
movsl
pop
sub
push
cmp
mov
cwtl
mov
stc
lds
jo
loop
add
rcll
mov
and
mul
push
repnz
cmp
push
push
ret
jne
lcall
mov
sub
pop
push
insb
cltd
and
data16
dec
int
into
das
mov
cmp
pop
hlt
pop
push
mov
mov
or
inc
sbb
mov
hlt
pop
jae
ljmp
test
mov
jl
mov
sbb
sbb
sahf
ss
inc
orb
lds
lock
mov
out
inc
lret
xor
jmp
shlb
cmp
inc
mov
call
test
movsb
mov
cmp
icebp
mov
cs
int3
outsb
std
jmp
mov
push
inc
cld
or
push
xchg
ret
pop
and
mov
sahf
mov
mov
jbe
xchg
inc
out
jge
jg
jle
ljmp
jbe
xchg
dec
scas
add
sbb
sub
jbe
test
or
dec
hlt
pop
dec
push
adc
mov
pop
push
dec
add
xor
enter
fcomp
and
adc
inc
test
jbe
inc
les
pop
push
push
sbb
fldt
cwtl
enter
push
dec
xchg
les
cmp
sub
das
imul
sub
dec
mov
inc
fildll
mov
aam
mov
cmp
inc
inc
ds
lret
fcmovb
jecxz
dec
mov
mov
mov
push
inc
cmc
jo
pop
shrl
jmp
mov
fidivl
xorb
inc
je
sbb
dec
notb
sub
push
mov
pop
or
inc
push
dec
std
cmp
xchg
inc
rol
rcrb
lret
adc
scas
sub
dec
mov
icebp
jl
mov
rclb
jbe
or
testl
sbb
push
mov
scas
das
aas
movsl
push
fwait
jle
incl
pop
les
cmp
sub
es
and
mov
rcll
mov
divl
lcall
xor
sub
push
das
std
hlt
and
push
mov
or
loopne
inc
loopne
outsb
sti
and
sbb
stc
out
adc
or
inc
jl
mov
clc
mov
inc
test
and
fldenv
add
int
mov
push
fcoms
and
add
mov
mov
mov
cltd
pop
daa
inc
insl
scas
imul
pusha
xchg
imul
or
and
jbe
movsb
mov
cmp
xor
adc
push
cwtl
out
push
lock
mov
mov
dec
ficompl
loope
mov
arpl
jge
mov
cmpsb
dec
fisubs
inc
dec
stos
test
xor
divl
xchg
test
jae
inc
and
xor
fisttps
cmp
sbb
xor
sbb
ds
lea
inc
adc
inc
xchg
push
out
dec
movsl
and
xlat
xchg
xlat
xchg
adc
or
popl
pop
pop
cmp
outsl
dec
dec
adc
stos
mov
cmp
xchg
mov
data16
pop
inc
sti
rolb
movsl
loop
inc
dec
ljmp
jp
pop
xchg
add
dec
inc
cli
jmp
mov
or
ja
dec
pop
lds
movsb
loope
cmp
pop
gs
nop
fcoms
pusha
insb
in
cmpsb
jb
cmp
in
pusha
ret
daa
lods
outsl
std
dec
icebp
cmp
mov
pop
inc
shl
mov
mov
loopne
subb
mov
nop
push
loopne
dec
mov
xchg
mov
pop
cmpsb
aam
orl
das
adc
test
xor
cs
lret
cs
sub
mov
sub
testb
adc
jl
dec
das
sub
xor
pop
adc
orl
dec
xchg
lods
pop
mov
out
xor
mov
adc
dec
popf
js
loop
shll
push
aaa
loope
jecxz
and
iret
jmp
jo
scas
cmpsb
and
es
or
inc
fldt
pop
testl
shrb
je
notl
cmc
test
testl
dec
sub
adc
mov
inc
andb
xor
add
das
icebp
les
aas
stc
lahf
jle
sbb
aam
cmpsl
call
pop
popf
lods
divb
cmp
loope
fcomps
adc
xchg
mov
mov
repnz
mov
jecxz
out
cmp
test
dec
and
push
or
ss
xchg
adc
jmp
push
inc
mov
mov
adc
mov
dec
or
cmp
sub
mov
jge
outsb
push
test
in
out
pop
xchg
cltd
scas
dec
pop
mov
fldt
lock
push
pop
repz
add
daa
and
dec
jo
pop
add
insl
xchg
dec
xchg
sahf
or
cmc
incl
and
cmpsb
es
inc
lcall
lret
repnz
stos
divb
enter
pop
lea
rcrl
int3
push
rcrl
aaa
adc
jl
pop
addb
into
mov
stos
insl
hlt
add
mov
ja
movsl
cmpsb
mov
pop
xor
dec
lahf
push
mov
mov
mov
dec
fdivl
xor
xor
lahf
mov
enter
iret
mov
pop
int
cmp
jbe
jmp
xor
das
mov
cld
pop
add
and
movsb
inc
loop
loop
les
adc
aad
out
and
xlat
dec
rolb
or
jbe
push
pop
xchg
sahf
inc
ja
cli
fnstcw
jp
jmp
xchg
xlat
inc
mov
cmp
inc
shl
lret
mov
sbb
andl
push
out
pop
clc
fisubs
mov
pop
mov
adc
push
iret
loope
push
xchg
push
loope
dec
mov
dec
jne
mov
andl
xchg
movsb
xchg
cmp
adc
dec
js
jno
sub
cmp
aam
xlat
lods
aad
notl
add
pop
js
pop
mov
cli
out
cmp
mov
add
loop
push
xchg
mov
or
popf
push
in
in
lret
nop
pop
imul
mov
fidivrl
inc
sub
jo
int
shrb
leave
lods
xchg
or
sbb
pop
mov
push
into
cmp
mov
xor
fimuls
cmp
test
into
in
jnp
into
sbb
mov
or
or
mov
pop
mov
add
push
xchg
test
push
ret
mov
add
fnstenv
sahf
bound
lea
out
jle
loopne
enter
imul
loope
and
lea
cmpsl
jp
stos
adc
aam
loopne
lret
fstpt
fwait
sub
or
xor
fwait
test
jae
push
mov
mov
je
ret
shlb
or
mov
sub
jmp
mov
add
shrl
mov
nop
dec
nop
inc
rcrb
loopne
xchg
arpl
xor
gs
jecxz
insl
fcmove
sub
orb
repz
pop
push
outsl
fdivr
cs
or
cs
xor
or
pusha
pop
mov
ds
je
icebp
cmpsb
test
lahf
xor
push
sub
mov
jl
iret
dec
xlat
cmp
mov
int3
addr16
iret
int
es
leave
adc
or
aas
lods
jb
adc
or
orb
jle
lahf
sbb
shl
dec
sub
cmp
icebp
imul
faddp
call
push
enter
arpl
div
loopne
jmp
mov
sbb
gs
rcrl
call
push
mov
and
jl
roll
and
push
fisubrl
xor
icebp
mov
mov
inc
pop
push
ret
mov
mov
mov
xor
cmp
cltd
add
adc
push
xchg
and
cmc
mov
mov
dec
jb
xor
mov
insl
loope
xlat
std
push
in
negl
loope
cltd
pop
mov
add
jge
sbb
dec
cmp
aas
js
xchg
push
add
lret
in
cmpsl
or
scas
pop
pop
sahf
cli
sub
jp
xor
frstor
sub
mov
xor
cmp
lods
mov
mov
popf
sarl
out
lcall
aaa
scas
inc
xor
cmpsb
xchg
dec
jl
xchg
imul
cmp
mov
sub
push
pop
daa
imulb
xchg
mov
pop
pop
cmp
jno
and
test
cmp
insb
mulb
loopne
mov
and
jns
sub
int3
hlt
mov
scas
cmp
sbbb
das
add
das
sub
lahf
shl
scas
subb
push
fs
shlb
xchg
sbb
inc
push
call
scas
pop
mov
xor
rorl
fs
push
sub
ror
xor
pop
sub
jbe
mov
sti
inc
mov
cmp
in
jecxz
addl
inc
mov
insl
pop
inc
mov
sbb
pop
jmp
outsb
pop
stos
pop
rcll
add
mov
stos
sbbl
iret
loopne
outsb
or
sarb
lcall
test
inc
cmp
jle
mov
or
outsl
jb
mov
xor
dec
daa
add
mov
int
mov
pop
xlat
inc
out
and
fdivrp
fdivrp
xchg
fsts
shl
fsubrs
sub
stc
in
push
push
vpcmpeqb
mov
cltd
jno
int
push
lea
jmp
cmpsb
or
aad
int
pushf
push
rcr
push
push
dec
lcall
clc
stc
sub
repnz
stos
mov
inc
enter
sub
mov
sub
shrb
lret
xchg
dec
cwtl
mov
test
pop
call
pop
cmc
xchg
cmpps
pop
or
dec
mov
int3
add
xchg
pcmpgtb
sub
test
loop
into
xor
mov
sbb
insl
adc
sahf
lock
cmc
add
movsl
dec
push
push
pop
mov
sub
cltd
jo
inc
scas
xor
add
or
push
pushf
js
mov
cmc
inc
iret
rorb
fimull
push
ds
dec
scas
movsb
insb
aad
inc
xor
fistl
ds
imul
fcoms
push
dec
std
in
and
jno
mov
cltd
dec
add
mov
in
xchg
test
subb
in
or
rolb
jmp
leave
insb
lea
inc
sub
nop
adc
fstps
xchg
sar
cmp
mov
dec
pop
dec
jne
in
mov
inc
cld
cmp
icebp
sub
std
pop
sbb
insb
adc
lods
sub
sbb
dec
pop
cmpl
imul
pop
jbe
push
inc
push
dec
xchg
fldcw
pop
pop
ficomps
popf
inc
push
fs
push
fstpl
sub
ja
adc
xor
scas
hlt
jg
icebp
push
test
movsl
pop
sbb
jmp
cltd
ljmp
and
aas
push
mov
push
add
leave
inc
cmp
pop
aam
and
sub
scas
movsb
sub
sbb
sbb
mov
inc
je
or
push
or
jnp
cs
push
or
movsb
and
gs
loopne
fdivl
sbb
xchg
xor
sub
sarl
lock
mov
pusha
xor
cmp
ficoml
push
aaa
int
hlt
shll
ret
cmpsl
bound
test
and
fstps
or
cli
pop
adc
nop
fcoms
movsl
gs
ja
loope
push
push
shll
imul
bound
jg
sahf
cmc
dec
mov
pop
adc
in
dec
cmc
push
dec
addb
lret
xlat
and
push
fdiv
mov
pop
mov
cmpsb
fists
movsb
and
movsl
xchg
and
mov
int3
mov
in
out
clc
add
push
mov
inc
mov
jb
jp
cs
call
jae
out
jmp
mov
xchg
mov
jecxz
dec
lret
push
je
out
lods
lahf
ret
lock
icebp
jns
xor
sbb
xorb
cwtl
test
jnp
push
dec
clc
and
mov
cmpsl
fmull
clc
loope
ds
mov
enter
mov
push
into
and
and
jnp
push
leave
in
sti
push
dec
sub
add
dec
push
pop
aam
pop
pusha
ret
sbb
pop
jmp
sub
add
add
mov
fldenv
xchg
outsl
inc
cmp
xor
mov
pop
je
add
js
icebp
addr16
loop
xor
fisubs
push
flds
cmp
mov
inc
mov
addr16
push
scas
fnstsw
xchg
fstpl
fwait
xchg
cmc
mov
shl
and
adc
leave
and
jg
out
lret
into
ret
mov
pop
sarb
jmp
cs
inc
stos
mov
fwait
js
xchg
cli
cli
addr16
fbstp
cwtl
ror
cmp
push
inc
adc
mov
pushf
in
jecxz
adc
shrl
ds
pop
insb
xchg
insl
js
pusha
mov
dec
sti
insb
mov
roll
mov
mov
push
out
mov
scas
cltd
nop
pushf
dec
loope
jmp
daa
dec
rorb
loop
dec
mov
push
adc
addl
push
lock
push
fcompl
jge
inc
inc
cli
pop
fdivrl
das
xor
or
pushf
xor
adc
inc
sub
pop
push
jne
fcoms
lds
out
jbe
push
and
js
and
sbb
into
lret
sbb
sahf
cmpsb
mov
popa
and
dec
scas
mov
adc
or
ret
sub
inc
out
xor
daa
shrl
ds
popf
and
mov
pushf
jecxz
jo
scas
jae
add
imul
xor
test
mov
repz
icebp
mov
pushf
adc
rcrb
xchg
popf
jle
lcall
cmc
popf
or
lahf
iret
test
popf
inc
jg
adc
jns,pt
bound
lahf
ja
scas
rcll
pop
push
cwtl
pop
out
daa
xor
mov
sbb
ss
fadd
dec
pop
sub
ret
sub
dec
lret
sti
cwtl
idiv
sbb
bound
lret
jl
arpl
inc
daa
imul
call
mov
or
repz
les
les
shlb
mov
popa
arpl
iret
insl
insb
push
es
xor
fists
pop
shrl
mov
xor
push
adc
fstl
mov
push
push
mov
sub
imul
adc
gs
repnz
or
ds
lea
push
leave
inc
mov
mov
push
lea
dec
mov
ret
xchg
aaa
mull
fistl
and
cs
ja
test
ss
bound
repnz
mov
mov
aas
mov
push
mov
mov
cmp
push
shl
lcall
cltd
cmpsl
mov
insl
gs
sub
push
int
or
and
push
iret
stos
lock
push
cli
and
mov
lds
cwtl
int
mov
imul
jecxz
arpl
popa
call
icebp
out
inc
and
mov
xor
in
pop
cli
xor
fistl
pop
pushf
add
mov
int3
cmp
and
cmp
inc
pop
movsb
sub
mov
lds
movsl
inc
sbb
stos
push
xchg
cmpsb
lea
pop
inc
and
lods
dec
xor
rcl
clc
cmp
or
into
sub
adc
adc
add
sar
jne
arpl
pop
xorl
test
mov
lock
mov
sbb
inc
xor
jecxz
dec
cwtl
dec
cwtl
push
or
adc
mov
jge
ljmp
aas
jmp
mov
movsl
dec
test
jo
jmp
mov
xchg
jb
jbe
jb
cmpsb
sub
add
in
mov
das
fsubrl
sbb
fwait
sub
rcrb
sub
xlat
push
dec
or
pop
pushf
cmp
mov
mov
cmp
xchg
jge
xor
adc
sub
push
jae
fdivrp
sub
aam
js
inc
mov
cmc
xor
pop
fwait
jg
mov
inc
sub
push
fidivrl
mov
add
and
fimull
and
cltd
loopne
ja
repnz
pop
jl
in
fwait
jle
repnz
test
ficoms
nop
cmp
jne
adc
sub
jo
and
jo
push
adc
sti
xchg
andb
adc
clc
sub
aad
cmpsl
es
inc
mov
in
mov
loop
sbb
cli
sahf
xchg
cmp
lahf
dec
aad
mov
dec
daa
jb,pn
fwait
shlb
mov
stos
sbb
jne
in
sbbb
loop
adc
pop
subl
inc
clc
sbb
xor
loop
sub
xchg
sarb
lods
jne
and
repnz
sbb
incb
imul
aas
arpl
stos
inc
das
or
xchg
add
ds
and
dec
jmp
pop
mov
bound
xor
add
out
adc
aaa
and
fmul
jl
xor
dec
std
mov
pushf
int3
cs
mov
adc
out
jge
sub
xor
cmpsb
pop
inc
mov
xor
xor
sbb
ret
dec
fisubl
in
jnp
fnstsw
push
and
mov
pop
jo
sbb
xchg
fists
xor
and
fstsw
adc
push
push
stc
enter
cmc
jno
ret
cwtl
add
int3
sbb
stos
loope
jo
insl
jmp
sub
clc
scas
xlat
fnstsw
dec
mov
jmp
sahf
test
in
pop
mov
aaa
int3
inc
push
pushf
mov
xchg
sub
outsl
mov
cmp
jle
lcall
pop
sub
test
pop
mov
ret
xor
sbb
imul
cmpl
mov
xchg
imul
inc
enter
push
jmp
jp
aas
cmpsb
mov
loope
cli
sub
mov
pop
fwait
lret
cmp
jg
jbe
pop
loope
or
cs
repnz
aas
xchg
and
decb
loope
and
pop
sahf
cmpsb
fists
psubb
ljmp
jb
jb
subl
je
sbb
out
loop
lods
into
mov
data16
jmp
inc
push
leave
jo
xor
clc
scas
push
in
or
sti
add
mov
and
outsl
das
dec
jno
les
cld
cld
xchg
aad
sbb
adc
mov
or
out
xchg
xor
adc
xorl
mov
xchg
loope
iret
icebp
ret
and
imulb
int3
sub
push
dec
stc
jp
popf
hlt
repnz
scas
insb
cmp
mov
ret
lds
nop
jg
aas
sub
mov
lret
pop
pushf
jl
je
repnz
js
mov
mov
test
jne
das
lret
cmpb
adc
xchg
cmp
std
sub
jp
test
adc
jne
mov
push
daa
outsl
push
js
gs
stc
jne
stos
sub
mul
xchg
into
dec
aas
mov
inc
mov
scas
fbstp
aad
popf
les
jnp
pop
movsb
add
icebp
hlt
sbb
dec
in
mov
ss
mov
xchg
add
aas
xchg
mov
int3
dec
in
mov
fcomip
or
shl
xchg
cltd
and
mov
mov
jg
jne
pop
jne
add
repz
daa
fs
loopne
lods
adc
fstps
add
jle
dec
mov
inc
mov
mov
dec
daa
pop
dec
out
lock
sbb
in
incl
xchg
push
sub
outsl
stos
mov
mov
roll
sbb
cmp
mov
icebp
pop
out
sub
jg
out
sbb
pushf
cld
push
jo
out
in
cmp
icebp
das
movsl
pop
lock
push
bound
sbb
fnstenv
sbb
jne
loopne
call
xchg
cmp
stos
pop
movsb
clc
cmp
cli
sahf
test
mov
movsl
inc
mov
out
and
aaa
in
out
jge
push
and
pusha
xchg
aas
and
and
outsb
pop
sbb
ss
push
lods
push
push
mov
fidivl
loop
out
enter
aam
jmp
es
js
or
push
in
add
xor
cmpsb
mov
adc
dec
sbb
stos
mov
and
repz
sub
mov
sbb
adc
call
in
subb
xchg
mov
xchg
and
pushf
pop
dec
cmc
push
cld
hlt
dec
vpackssdw
xor
mov
outsl
dec
test
add
and
and
sub
cmpsb
sub
into
sbb
mov
xchg
aad
cwtl
popa
loop
push
jo
ja
dec
inc
mov
mov
lods
jg
mov
lahf
dec
push
outsb
sbb
and
or
ja
rcll
jg
fstpt
loop
sti
xchg
shr
dec
data16
jbe
sub
mov
orb
or
mov
lret
fimull
jecxz
add
call
cli
nop
mov
aaa
in
xchg
popf
psubusw
cmp
mov
mov
imul
cli
loope
sbb
ret
scas
xlat
scas
adc
dec
push
sbb
mov
das
adcb
sub
je
lcall
mov
rolb
pop
mov
dec
pop
stos
addr16
sahf
xchg
add
mov
lahf
inc
and
out
insb
push
inc
imul
imul
pop
in
out
clc
rclb
cmpsl
incl
sbb
scas
dec
jns
das
repnz
adc
fcomps
adc
scas
push
mov
out
jns
adc
cmp
inc
cmp
cmpsl
adc
xchg
lds
lods
ja
sbb
pop
or
lret
sahf
scas
mov
stos
cmpb
push
in
fidivrl
popf
outsl
fisubrl
mov
pop
sub
outsb
xor
repz
fdivr
out
cli
pop
sbb
hlt
push
pop
cli
cmpsb
sbb
movsb
test
das
shr
data16
or
fisttps
pop
mov
in
push
sbb
out
inc
je
inc
gs
dec
addb
mov
rcrb
mov
fistl
add
or
inc
sarb
in
or
jne
xor
gs
dec
fdivrl
test
mov
mov
sbb
lahf
adc
xor
arpl
lret
dec
pop
test
mov
insl
fisttpl
and
repnz
shl
les
mov
rcl
inc
lahf
or
roll
jbe
mov
push
fldenv
mov
fisttps
and
lods
dec
jl
sbb
int3
jmp
adc
and
loop
loopne
adc
inc
or
pop
fwait
xchg
cmpsb
mov
mov
std
neg
fwait
popa
stos
and
test
push
scas
push
adcb
mov
loopne
pop
cmpl
dec
insl
in
test
mov
sbb
cli
xchg
mov
cs
sahf
sub
shlb
addr16
loop
push
call
xor
in
or
push
je
xchg
ret
sbb
fs
adc
pop
dec
andl
fsubp
out
pop
imul
mov
and
dec
subb
pop
fwait
or
push
mov
sub
sbb
test
mov
add
xor
inc
mov
mov
xchg
lret
push
lret
test
adc
lret
or
js
icebp
into
test
daa
and
or
test
in
xor
mov
js
jle
sti
mov
inc
mov
push
stc
out
cmp
insl
stos
push
clc
jne
enter
push
add
cmp
inc
mov
dec
enter
fwait
setno
push
pusha
pop
enter
shlb
shrl
xchg
sarl
cld
fisttpl
decl
xor
aas
pop
in
aas
mul
sbb
push
jb
cmp
lahf
in
xor
sbb
dec
shll
hlt
mov
jge
pop
sti
cli
lods
sub
retw
or
std
mov
loop
xor
sbb
push
fcomps
in
jne
mov
out
je
popf
les
aas
push
paddsw
push
orb
mov
cmp
imul
adcb
inc
fnstsw
cmpsb
mull
fimull
push
xor
lds
pop
or
and
sbb
jne
cs
aaa
or
jg
aaa
lea
test
xchg
push
mov
pop
out
and
jbe
push
push
fcoml
addr16
sub
xor
cs
lds
lock
xor
iret
sti
mov
push
div
iret
leave
out
jne
push
mov
adc
in
mov
xchg
ret
adc
loope
and
cli
add
ds
push
add
and
aaa
dec
mov
dec
xlat
lea
lcall
dec
cmp
push
adc
ss
sbb
xchg
lods
jg
jo
test
push
and
xchg
sbb
rcrb
fs
pop
xchg
add
icebp
ss
hlt
xchg
add
adc
enter
sub
mov
psllw
pop
pusha
scas
cmp
xchg
in
addr16
push
loop
sub
arpl
and
cmc
xlat
les
mov
cld
sbb
cmp
inc
push
cmp
add
xchg
xchg
lret
mov
cmp
add
out
lret
shr
aaa
jne
and
adcl
xor
xchg
dec
xor
rcr
je
in
les
imul
dec
add
cmpsb
mov
mov
imul
flds
fidivl
jo
push
das
dec
sarb
cmpl
fwait
shlb
sub
inc
sub
add
sbb
sbb
sbb
cs
addr16
push
das
inc
mov
ljmp
leave
xchg
xchg
std
pop
lods
mov
sub
push
sbb
fistpl
jecxz
fbstp
add
fstpt
xor
pop
inc
pushf
xor
lds
insb
rorb
lret
fcomps
sub
cmp
flds
pusha
int3
dec
pop
adc
into
push
mov
dec
mov
xchg
cmpb
push
cmp
iret
inc
adc
sbb
xchg
mov
jg
jge
jge
cmp
mov
clc
push
mov
sub
inc
xchg
xor
mov
test
inc
call
inc
dec
std
inc
pop
incl
or
and
cltd
push
cmpsl
loop
aaa
or
inc
mov
or
das
addr16
stos
insb
jbe
ja
lods
ficoml
cmp
iret
movsb
xor
jo
in
adc
sti
mov
mov
jmp
repnz
jle
jno
je
and
mov
adc
dec
lahf
mov
mov
in
insl
jo
into
sbb
ljmp
out
cmp
push
nop
sbbb
loop
into
push
mov
scas
movsl
jg
movsl
or
fidivl
sbb
jns
sbb
or
imul
imul
loop
fs
mov
je
mov
mov
nop
scas
cltd
jno
dec
stos
or
pop
jns
in
inc
inc
nop
gs
mov
mov
daa
add
sbb
jnp
les
jo
mov
xor
add
stc
lods
fcomps
xor
fmul
mov
fdivrs
out
divb
loop
scas
mov
ret
cld
icebp
pop
xchg
sbb
or
add
pop
and
jo
inc
sahf
and
addr16
cmp
mov
xor
inc
push
mov
push
cmp
sub
and
fistpll
popf
dec
repnz
mov
sar
cmp
dec
js
popf
ljmp
inc
stos
movl
ss
popa
sub
aam
fcomps
cld
sbb
mov
mov
out
push
fcmovnbe
sub
outsl
mov
lods
ljmp
lret
inc
adc
mov
mov
or
cmp
push
or
int3
cli
imul
adc
andl
xchg
bound
mov
clc
cld
daa
scas
sti
sub
xlat
mov
out
push
xchg
leave
lret
jnp
and
xchg
pop
push
jns
test
les
insb
movsl
mov
cmp
push
lods
or
jb
imul
dec
cwtl
imul
xlat
fs
stos
push
fildll
and
inc
add
mov
rclb
sub
data16
mov
cmp
mov
jmp
mov
lahf
sbb
in
inc
adc
pushf
cmpsb
adc
mov
aas
dec
dec
mull
movsl
aam
mov
pop
arpl
push
cmp
cmp
push
int3
aam
cmp
and
sbb
adc
popf
fnsave
hlt
mov
push
mov
inc
aas
rdmsr
mov
pop
lahf
mov
imul
iret
cmp
cwtl
cmp
pop
imul
pop
jbe
adc
cmpsb
cmpb
add
pop
enter
adc
sub
or
stos
xorl
sbbl
xor
sub
enter
add
mov
mov
jp
xchg
popa
jle
jmp
adc
aaa
pop
fsts
roll
je
gs
mov
stc
ljmp
scas
xlat
xchg
cld
ja
cmp
leave
mov
mov
das
ret
sub
jl
jmp
nop
mov
jecxz
mov
xlat
movsb
addr16
subb
sub
dec
sbb
and
xlat
cmp
dec
mov
addr16
popf
push
mov
iret
cwtl
lods
mov
shlb
inc
adc
les
out
shlb
xchg
mov
push
lret
jb
jl
sbb
mov
mov
and
cs
mov
imul
dec
dec
cmp
loope
shll
xor
adc
in
rorb
dec
sbb
outsb
addl
leave
out
in
ja
dec
inc
pop
stc
xor
rcl
out
clc
dec
and
sub
mov
loop
mov
mov
stos
stos
rcll
gs
push
popa
xor
fcomp
mov
in
xchg
sub
pop
xor
push
xchg
frstor
aas
xor
sub
and
adc
pop
pushf
scas
repz
pop
mov
xor
sub
cwtl
dec
mov
jbe
ret
hlt
mov
jo
cld
stc
xchg
cmp
fwait
loopne
sti
ja
mov
lods
mov
roll
cwtl
push
rcrb
push
jl
imul
xor
jl
adc
cmpsl
sahf
cltd
adcl
pop
data16
cmp
sahf
push
mov
ja
mov
mov
jbe
jge
jo
orl
fnstsw
pop
sub
scas
cwtl
fcmovnbe
mov
movsl
sub
je
ljmp
movzbl
das
sub
enter
push
or
and
loope
add
push
loope
aas
in
cmp
jb
mov
fidivrs
mov
sub
mov
dec
pop
fmuls
xchg
test
dec
sbb
in
jge
repz
aas
cltd
sbb
test
sbb
dec
adc
mov
in
inc
inc
adc
mov
rcll
testb
lods
sub
jo
sti
add
insl
rsqrtps
cltd
dec
or
into
std
sub
xchg
lock
sub
jb
dec
std
and
push
icebp
popa
jns
repz
pop
lcall
addr16
mov
aaa
sbb
inc
mov
fildl
loope
shll
repnz
insb
stos
rcr
into
movsl
dec
and
in
cmp
out
mov
xchg
lods
add
sub
fcoml
aam
add
inc
mov
stc
repnz
and
orl
push
loopne
push
test
pop
xchg
pop
mov
shrl
and
lea
ja
mov
xor
inc
out
xchg
sub
gs
mov
or
sub
jbe
dec
in
and
and
dec
sub
and
test
addb
sub
jo
test
mov
inc
scas
out
repz
add
pop
dec
psraw
outsl
mov
jo
in
fisttpl
push
mov
add
mov
dec
xlat
mov
cli
jae
arpl
pop
imul
shrb
pushf
mov
inc
cmp
sahf
icebp
repnz
pushf
les
dec
pop
xorl
cltd
ret
mov
cmp
cmp
cli
adc
test
inc
inc
mov
sub
gs
ds
inc
sub
mov
xchg
cmc
ljmp
fisubrs
xor
loop
fmull
push
inc
pop
fnstsw
sarl
cld
mov
jne
xor
jnp
shrb
and
adc
push
es
cmp
popw
lock
repz
hlt
xor
fldcw
je
cli
fldl
xchg
pop
sub
out
push
mov
cld
sbb
jp
into
inc
ja
jb
and
fcoml
mov
aam
cmc
fisttpl
insl
mov
leave
ss
ja
mov
fisubrs
fcoml
mov
mov
movsb
cmpsb
add
andb
cwtl
or
out
dec
lods
jmp
sbb
pop
jb
pusha
dec
lret
sub
daa
mov
jecxz
adc
push
mov
sbb
jge
and
adc
pop
aaa
aam
push
push
push
dec
rol
pop
sub
inc
icebp
cwtl
or
mov
in
sbb
jne
push
cli
pop
jae
sbb
mov
imul
jge
inc
pusha
fcmovnbe
sbb
mov
mov
mov
ja
sarb
mov
mov
cli
cmpl
xor
cltd
dec
xor
mov
lret
lcall
xchg
cld
push
pmullw
idivl
clc
jl
xor
sub
les
mov
sbb
cmp
jmp
in
stos
pop
mov
arpl
mov
jae
push
xchg
dec
and
lahf
push
inc
pcmpeqd
pop
aas
mov
jnp
jmp
popf
repnz
enter
mov
in
and
inc
leave
mov
fstpt
ret
test
imul
jbe
cs
xor
sub
jl
cmc
adc
fsubs
and
inc
out
lods
sub
or
iret
xor
clc
out
inc
inc
aam
lea
mov
cmc
lret
rcll
pop
jg
push
sbb
into
stos
xchg
scas
xor
test
cmp
int3
pop
jb
addl
jne
ret
incb
sbb
inc
jmp
push
sbb
xchg
ret
ljmp
xlat
mov
sbb
xor
js
jb
fnsave
mov
std
push
insl
shlb
das
and
inc
push
cli
xorl
xor
mov
adc
and
pop
mov
ja
inc
cmpsl
test
jnp
in
push
add
xchg
mov
adc
pusha
xchg
test
ror
inc
pop
jp
test
inc
push
sbb
push
adc
push
xchg
pop
or
sti
ja
fidivrl
pop
fmuls
inc
cld
subl
sub
lock
ds
test
push
in
add
xor
in
push
cmp
push
cmp
je
outsl
lret
lret
and
arpl
inc
mov
call
mov
lahf
mov
inc
cmp
or
xchg
jle
and
mov
xor
fmul
xchg
jecxz
out
or
mov
mov
test
cmp
andl
sub
xor
fbstp
dec
lret
cli
daa
add
ret
fstpt
repnz
in
mulb
ljmp
enter
ss
cmp
sbb
sub
push
mov
fxch
cmp
roll
xchg
sti
xor
mov
stos
stos
cmp
xor
lret
xchg
lds
xchg
mov
fadds
or
loopne
add
mov
cli
cli
sub
sbb
sbb
pushf
fwait
aas
mov
lret
es
jne
push
sub
pop
inc
adc
push
pop
data16
sbb
insl
ss
popa
jp
sti
pop
xorb
hlt
dec
loope
movb
and
cmp
or
scas
mov
xchg
jle
mov
mov
lods
les
ja
lds
lret
loop
sbb
jns
lcall
jne
cmp
push
jp
fidivs
push
clc
les
jae
test
or
testb
negb
subl
lods
dec
rorb
inc
mov
and
stc
stc
lods
push
cmp
aaa
int3
sbb
lcall
enter
jp
jl
xor
xor
out
aam
fisubl
adc
and
mov
aaa
mov
sbb
icebp
insb
out
dec
pop
add
notl
cmc
and
jne
dec
sub
pop
loopne
ret
pop
cmp
imul
jnp
or
in
ss
mov
ja
push
addr16
cmp
rorb
pop
dec
stc
daa
inc
lea
add
ja
add
adc
mov
mov
ret
push
ja
aaa
dec
push
shl
lock
mov
add
testl
and
mov
pop
dec
ljmp
sbb
xlat
movsb
insl
xchg
push
adc
inc
dec
push
xchg
xlat
mov
mov
mov
pop
adc
mov
cs
iret
add
movsb
mov
inc
mov
or
repnz
jecxz
xor
mov
mov
pop
cwtl
sub
sti
out
out
dec
into
repnz
xchg
lret
loop
clc
adc
adc
ja
mov
or
push
jbe
clc
aad
popl
jne
fs
ja
inc
in
dec
out
jns
sub
mov
arpl
les
push
jb
mov
sub
js
pop
lods
xchg
ret
xchg
or
iret
pop
push
stos
ljmp
enter
or
lahf
push
loop
fstps
jecxz
or
mov
dec
dec
sub
sub
popa
mov
scas
cmpsb
outsl
outsl
ja
push
insl
mov
cmc
pop
mov
popf
or
mov
pop
pop
aam
movsb
lcall
push
jae
lcall
pop
daa
cmp
clc
aam
fisubrs
inc
mov
lahf
repnz
fdecstp
lcall
inc
and
leave
test
imul
insl
xchg
jle
stos
cmp
jl
pop
incb
ret
xor
pop
mov
pop
xor
cmp
pop
lahf
mov
pop
pop
xchg
rcrl
outsl
inc
popa
test
in
in
jae
push
jbe
push
pusha
pop
mov
adc
mov
inc
push
dec
and
cs
or
shlb
in
mov
cmc
adc
pop
mov
xchg
idivb
jo
mov
iret
jg
lret
sub
and
daa
icebp
cmp
xchg
mov
hlt
mov
mov
and
insl
cmp
mov
mull
cltd
shrl
data16
sahf
jl
pop
jae
lods
xchg
cmp
call
push
sbbb
pcmpgtb
lock
std
mov
out
pop
into
addl
dec
test
icebp
xchg
pop
cmpsl
pop
push
std
jbe
inc
lret
and
les
dec
mov
add
les
adc
or
mov
pop
adc
push
mov
ss
jae
adc
aad
out
mov
imul
cmp
lea
popf
inc
cwtl
int
add
xlat
jp
sub
cld
add
push
rep
jbe
pusha
mov
lret
or
or
insb
and
adc
cmpsl
sbb
and
pushf
mov
inc
imul
mov
jb
mov
call
inc
dec
je
fstl
lea
jecxz
cvtpi2ps
orl
xchg
jo
mov
mov
jp
and
popf
jb
addr16
pop
or
push
cmpb
icebp
mov
add
pop
pop
pop
pop
mov
test
inc
xor
test
fldenv
je
sub
sbb
int3
and
movsl
mov
add
imul
sahf
dec
dec
je
in
lea
stc
adc
mov
mov
mov
mov
loopne
cmp
test
jno
pushf
in
ss
mov
xor
mov
xorb
inc
and
and
call
sub
call
adc
sbb
cmp
add
inc
fisubrs
je
sub
mov
mov
shl
stc
mov
xorl
mov
jnp
or
or
outsb
mov
jge
aaa
jle
movsl
fs
add
in
sub
pop
pushf
xchg
in
aad
xchg
mov
cmc
inc
mov
pop
pop
in
fldt
cmpl
adc
adc
sbb
add
pop
mov
push
mov
imul
int
mov
les
mov
xchg
mov
push
lock
fwait
push
int
pop
mov
mov
lds
in
int3
add
leave
movsl
xchg
xor
and
fnstenv
mov
jo
inc
out
lahf
jp
dec
sti
xlat
cmp
mov
in
imul
mov
xchg
dec
hlt
adc
lock
jp
xchg
addr16
sbb
jp
cmp
lods
adc
mov
fmull
sbb
sbb
lods
lahf
shrb
jbe
adc
int
movsb
mov
jno
stos
and
dec
and
inc
dec
dec
das
pop
mov
sub
push
add
push
sub
sub
scas
jb
aas
push
imul
mov
cltd
push
mov
cmc
mov
add
adc
sbb
rcl
pop
mov
aaa
sub
push
and
sbb
in
cld
push
ret
cli
or
add
inc
and
js
andl
in
popa
mov
dec
lds
push
jnp
repnz
push
xchg
and
jo
fistl
insb
in
mov
stc
bound
lea
in
xchg
ret
mov
jmp
dec
in
jg
cmp
mov
loope
mov
jle
cmp
repz
xchg
and
dec
jmp
add
mov
repnz
jo
fs
arpl
fisubs
icebp
ds
sbb
cmp
divb
add
push
and
adc
iret
outsb
fdivr
aam
mov
addr16
iret
rol
cmc
adc
jne
pop
lods
call
mov
lock
pop
jbe
std
or
push
lret
push
inc
fwait
mov
xchg
stos
or
imul
mov
cld
push
push
mov
js
fnstsw
outsl
inc
les
insl
shl
mov
sbb
cli
mov
or
sbb
insb
aaa
popf
loop
aas
dec
push
adc
xchg
dec
mov
push
divl
fdiv
aas
or
add
arpl
lcall
pushf
pop
ss
in
es
xchg
xchg
pop
push
roll
mov
clc
push
fsubs
dec
or
js
sub
push
stc
xchg
or
addr16
ja
icebp
sub
hlt
pop
adc
lods
out
pop
pop
iret
mov
je
icebp
aas
cmp
insl
rorb
bound
adc
arpl
adc
pop
clc
lret
adc
outsb
mov
fisttps
adc
aad
dec
leave
stc
mov
mov
adc
and
std
sub
fsts
aam
insb
aam
adc
cmpb
push
enter
pop
cmpsb
jae
stos
adc
inc
les
sbb
adcb
clc
jle
mov
push
test
and
loop
xchg
data16
out
mov
fistps
mov
mov
addb
ret
daa
popf
jne
fcmovu
push
data16
clc
push
stos
std
pop
lods
fwait
movsb
xor
cmp
out
inc
mov
rolb
mov
stc
data16
mov
xchg
or
xor
in
mov
out
or
and
shrl
dec
hlt
mov
insl
pop
popa
sbb
jne
in
js
push
push
stos
mov
dec
add
test
cmpsl
inc
lret
enter
imul
rcrl
and
test
insl
xchg
out
and
jecxz
sub
push
inc
add
lret
mov
mov
imul
leave
stos
into
or
xchg
fistl
std
mov
push
adc
sbb
jnp
mov
outsb
imull
ret
pop
cmp
loope
movl
ficoms
mov
sbb
xor
mov
and
sarb
xchg
inc
push
je
scas
rolb
push
jae
jb
xchg
faddp
mov
fidivrl
sbb
adc
mov
in
data16
mov
mov
in
and
push
and
xchg
or
lods
xor
mov
push
sub
jle
enter
mov
pop
or
call
test
jmp
cltd
pop
mov
jmp
int3
testb
push
cwtl
lock
lea
rorl
add
cmp
mov
loope
jbe
subl
mov
push
mov
dec
push
adc
jge
sti
imull
adc
mov
mov
add
pop
xor
rol
shrb
inc
cltd
shll
jmp
or
and
inc
insl
icebp
aaa
adc
cmc
lret
cmp
loope
pop
jmp
jb
pop
test
ror
mov
cmp
adc
jg
jmp
cli
cld
dec
stos
or
into
lods
ret
ja
dec
cmp
notl
rclb
loope
fiaddl
out
negl
mov
xor
xchg
call
push
jl
fisttps
or
inc
mov
imul
aaa
add
scas
pop
adc
push
int
push
mov
movsl
sar
mov
push
int3
fs
xor
shll
call
xor
les
shll
jmp
inc
sub
ja
fwait
pop
arpl
mov
push
stc
adcb
sbb
jl
pop
sbb
mov
push
lret
fnstsw
pop
mov
push
add
push
lret
dec
push
mov
jle
rcrb
sahf
xchg
stos
mov
imul
ds
jmp
pop
out
xchg
enter
mov
cmp
inc
arpl
in
pop
push
xor
arpl
idivl
mov
in
jmp
and
loopne
pop
out
push
mov
xor
movb
arpl
adc
test
stos
call
xor
push
push
mov
sbb
xlat
incb
sbb
icebp
push
mov
or
sbb
push
inc
dec
jne
notb
jns
fs
and
into
sub
xchg
out
pop
cmc
mov
push
jecxz
or
cli
ret
xchg
pop
mov
cld
push
imul
fidivl
movsb
loopne
gs
aam
push
xchg
jne
jg
dec
fdivr
or
cltd
lea
icebp
cmp
xchg
sbb
xchg
push
pop
jl
mul
jmp
insb
ret
sub
mov
cwtl
loop
dec
and
dec
incl
rdtsc
ss
mull
mov
jge
lahf
mov
shr
pop
cmpl
jns
push
add
out
sbb
push
push
inc
mov
pusha
push
fldl
inc
loopw
andb
fistpl
sub
push
ljmp
mov
sbb
mov
add
outsl
gs
and
inc
shll
test
push
insb
rcrl
adc
insb
and
enter
jg
ror
rcr
icebp
mov
sub
lock
lea
push
ss
dec
fisubs
push
xor
popl
roll
inc
test
shlb
andb
xor
push
rcrb
and
fs
xchg
inc
push
ret
into
add
subb
cmp
cs
outsl
out
mov
sub
jne
jmp
cmp
mov
push
xchg
xor
imul
push
cmc
inc
cmpsb
mov
lock
pop
or
arpl
sub
je
jnp
js
mov
popf
and
add
test
sub
sti
push
notb
test
adc
arpl
loop
adc
mov
aaa
fwait
clc
insl
lods
pop
aaa
je
jg
aad
push
push
sub
mov
out
cmpsl
mov
ffreep
cmp
pusha
insb
adc
mov
mov
push
popa
push
lods
inc
cmp
add
fucom
and
das
pop
mov
pop
enter
int3
lahf
incb
mov
pop
addr16
jecxz
jg
xlat
cmp
jne
fcmovnbe
stos
sahf
sbb
loop
ja
or
sbbl
mov
loope
xchg
sub
dec
nop
jp
lret
imul
sbb
sbb
sarb
out
adc
aam
pop
aam
jecxz
cmp
sub
test
push
fildll
push
hlt
incb
push
sub
dec
sbb
mov
repnz
mov
iret
cmp
adc
in
push
adc
gs
fdiv
or
out
js
addr16
icebp
insb
adc
es
je
loope
and
mov
cmpsl
pop
rep
cmp
sbb
pop
adc
mov
lret
cmc
int3
cs
adc
push
sti
push
and
xor
movsl
mov
lods
inc
call
daa
popa
or
ja
rcll
jp
jo
rclb
in
lds
rcll
xchg
lret
loope
outsl
es
int
mov
addr16
jecxz
imul
xchg
loopne
fwait
or
sub
inc
mov
lea
sub
loop
adc
test
and
mov
jns
xchg
cmpsl
dec
pop
inc
pop
addl
mov
mov
rolb
xor
and
inc
out
gs
lret
std
js,pn
adc
jecxz
outsl
fiadds
mov
mov
outsl
push
mov
xor
push
lock
leave
outsl
add
inc
nop
inc
jl
cmpsl
push
adc
rolb
lret
sbb
xor
sbb
cmp
ret
sbb
xchg
cmp
mov
sub
push
push
in
cld
and
cmp
pushf
jae
push
sub
clts
push
nop
and
xorb
adc
mov
sub
mov
andl
inc
dec
jne
scas
cwtl
repz
mov
daa
mov
pop
push
test
push
rcrl
jmp
das
addr16
add
inc
pushw
in
dec
inc
subb
inc
mov
in
mov
loope
cmpsb
xor
fs
push
stos
mov
mov
stos
ret
ljmp
mov
push
shlb
xor
pop
jne
mov
leave
les
fmul
or
cld
mov
mov
movsl
int
inc
xor
out
fcomi
in
sbbl
popf
fs
mov
xchg
jmp
or
mov
ljmp
sub
push
sti
popf
call
cmp
pop
pop
pop
test
adc
cs
jne
push
xchg
lret
fsubs
test
xor
or
push
aad
ljmp
loope
inc
xchg
xorl
dec
cwtl
dec
mov
dec
in
sub
aaa
sbb
dec
push
loopne
fsubs
mov
stos
pusha
in
sti
inc
sub
int3
std
mov
arpl
test
sub
icebp
add
xor
aam
mov
mov
cmp
push
pop
aam
fiaddl
test
mov
pusha
bound
add
lods
add
add
loopne
pop
std
into
pop
push
or
int3
push
mov
add
pushf
gs
dec
pop
std
sbb
sti
mov
mov
push
movl
inc
and
je
mov
add
ljmp
cwtl
pop
sbb
mov
and
je
in
xor
xchg
jnp
xor
popa
jl
aam
push
add
jl
mov
fnsave
mov
add
adc
out
test
into
push
cmp
test
jge
test
cmc
leave
xchg
clc
mov
and
bound
cmpsl
or
xchg
add
xchg
mov
jl
adc
xor
pop
inc
repz
dec
push
rcrl
inc
and
ret
lods
push
push
lods
sgdtl
out
sub
sub
sub
cmc
in
push
sub
fdivl
pop
lods
mov
fwait
stos
or
inc
in
add
js
or
in
out
sbb
pop
arpl
loope
sbb
jg
xor
outsb
cs
pop
fbld
pop
fcoms
push
loope
call
and
adc
jb
mov
mov
jns
mov
push
daa
add
call
mov
ds
movsb
repz
shlb
jecxz
push
repz
fistpll
imul
ds
data16
or
push
or
xlat
mov
inc
mov
lret
xchg
mov
push
test
or
cmp
mov
jl
pusha
fimull
cmp
xchg
add
lcall
rolb
xor
inc
and
add
mov
ror
jno
xchg
cld
mov
dec
aad
or
fistpll
add
lds
pop
negb
jo
mov
jae
xor
scas
je
mov
les
cmp
ret
hlt
mov
test
jmp
mov
add
cmp
jns
mov
mov
lods
fsts
adcb
ficomps
xchg
mov
test
lock
ret
fwait
in
cmc
pop
outsl
sbb
add
mov
push
xlat
jbe
stos
icebp
sbbl
pop
jmp
mov
shll
jl
cs
les
loopne
ret
fcompl
into
dec
pushf
ja
jmp
shr
dec
sub
shl
cmp
and
xchg
std
dec
adc
xor
popf
insb
push
insl
in
mov
fists
addr16
pop
es
test
mov
xchg
sahf
xor
call
ret
jecxz
sbb
mov
jmp
outsl
ljmp
or
jg
fdivr
sub
jo
enter
sub
and
push
insl
add
mov
sub
imul
mov
test
cmp
aam
jnp
cli
dec
and
lahf
mull
add
xchg
out
or
sub
in
xor
sub
pusha
sub
ljmp
push
shl
lods
scas
rolb
lret
and
push
ljmp
mov
mov
inc
popf
xchg
iret
arpl
icebp
inc
xchg
jl
sub
xor
cmp
gs
push
cmpsb
outsl
push
cmp
ret
std
inc
lods
mov
nop
cld
popf
dec
push
test
repz
jg
adc
ja
sbb
ss
int
cmp
sbb
sub
xchg
aaa
test
outsb
mulb
imul
aad
mov
cmp
dec
inc
in
xchg
rol
js
sub
shrl
inc
ljmp
subl
dec
out
xor
mov
adc
pop
xor
gs
or
inc
addr16
popa
insl
sub
sbbl
pushf
je
daa
popa
insl
leave
xchg
xor
rorl
lcall
shr
cmp
xchg
sti
xor
ljmp
mov
xor
xchg
aam
aaa
sbb
xor
ja
cmp
push
mov
out
inc
jne
scas
stos
pushf
insb
xchg
mov
ds
das
jmp
leave
cmpsl
dec
or
nop
lret
and
sub
stos
lock
pop
clc
fisubl
loope
adc
shr
and
imul
aas
mov
in
popa
ds
ret
out
pop
cmpsl
cmpsb
outsb
jmp
test
lea
inc
dec
cmp
cmp
ljmp
mov
in
jmp
mov
and
shrb
add
shl
jmp
addr16
or
loopne
cmp
pop
cmp
das
inc
rcl
dec
jle
test
loop
lahf
ret
ror
push
pop
or
inc
xchg
arpl
cmp
mov
xchg
mov
decl
mov
adc
into
pop
and
js
xchg
and
mov
insb
adc
mov
add
xchg
loop
xchg
jo
pop
addb
mov
jle
addr16
pop
xchg
pop
sub
mov
movb
push
lret
mov
fisttpl
inc
mov
test
cli
ljmp
inc
mov
mov
iret
subb
jno
mov
aad
and
lea
mov
and
cmc
testl
test
sbb
int
pop
mov
sbb
scas
pop
adc
push
bound
xor
dec
popa
divl
xchg
movb
imul
popf
cmpsl
daa
xchg
adc
shlb
jb
jmp
or
lock
not
mov
xchg
sbb
xchg
sbb
pop
mov
cmp
fists
pop
orb
movsl
mov
sub
jmp
jmp
lods
sbb
fsubrs
pop
test
jne
pop
bnd
xlat
and
inc
cmp
xlat
jns
sub
loopne
or
adc
push
mov
sbb
xchg
mov
adc
or
popa
cmp
aaa
shrb
pop
inc
sbb
fisubs
dec
jo
sbb
inc
sub
xor
mov
in
mov
lret
loopne
xchg
lret
mov
enter
and
nop
xchg
or
lock
loopne
mov
and
mov
xchg
call
push
jae
and
bnd
das
stos
inc
aam
jge
popf
xchg
mov
aaa
or
insl
mov
mov
ret
xor
pop
dec
add
or
mov
outsl
ljmp
sbb
loopne
pop
xchg
xor
dec
cmpsl
xor
push
out
popa
test
push
pop
pusha
into
mov
add
test
ds
icebp
jb
lea
lret
sbb
push
les
dec
xor
nop
iret
cmc
push
lret
inc
into
dec
mov
sbb
sti
mov
sub
dec
dec
jb
dec
pop
jbe
push
jg
enter
decb
sub
cmc
test
pop
adc
cmc
mov
jge
pop
test
and
pop
and
mov
xchg
cmp
lret
lods
data16
data16
push
sub
sub
add
cli
jns
mov
xorl
in
xchg
push
cwtl
std
nop
fnstsw
sbb
cltd
scas
pcmpgtd
bound
push
sbb
stos
fmull
aam
ja
and
xchg
int3
std
iret
add
loop
adc
enter
mov
jl
inc
hlt
lods
nop
add
sub
cmp
out
adc
outsl
shl
cmp
popf
mov
in
xchg
lock
lea
aad
fstl
adc
ret
sub
jne
shlb
es
add
aaa
insb
decl
cwtl
cmp
sbb
outsl
xchg
jl
xlat
test
es
imul
jmp
ret
je
dec
insl
dec
int
jnp
pandn
pop
shl
movsl
fwait
fs
xchg
jo
adc
jno
push
sbb
mov
mov
mov
out
mov
mov
jl
insl
xor
add
fdecstp
adc
movsb
out
call
dec
jo
shrl
xchg
lods
arpl
fisttpll
jo
mov
sub
xchg
adc
testl
cmp
iret
jl
das
sbb
mov
or
jo
lds
js
subl
or
sbb
inc
adc
pop
fldenv
xchg
mov
test
mov
xchg
mov
imul
mov
aam
orl
fistpl
push
rclb
cltd
sbb
dec
loop
ja
mov
jb
mov
mov
loop
cmp
aaa
inc
and
mov
push
fnstsw
fcoms
inc
pop
repz
into
mov
decb
mov
cmp
jae
decl
push
mov
and
cmc
aam
inc
pop
pop
scas
data16
xor
or
mov
push
jns
ljmp
inc
pop
mov
out
pop
mov
sahf
xor
insl
add
fnstsw
lods
rorl
mov
les
and
jns
je
mov
pop
nop
sbb
sbb
push
fldl
or
mov
xorl
pop
mov
xchg
xadd
sub
xchg
out
add
cmp
cmpsl
inc
inc
test
jne
mov
aam
lret
enter
jmp
jecxz
adc
or
mov
fwait
out
push
iret
call
jmp
jmp
mov
fstps
and
es
jo
repz
std
inc
imul
inc
int3
dec
cld
dec
sbbb
and
cmp
imul
aam
cmpl
or
shlb
jmp
sbb
sub
jp
stos
sbb
popa
loopne
adcl
lea
mov
sub
mov
fwait
mov
and
add
fdivr
add
sbb
xor
adc
andb
push
das
mov
mov
test
pop
das
leave
xchg
lods
call
lds
cld
loopne
fdivrs
dec
xor
jae
xchg
subb
push
out
sbb
out
daa
mov
lock
mov
jmp
pop
mov
mov
inc
sub
in
enter
into
sub
fsubp
mov
mov
xor
jns
leave
mov
jae
xchg
popf
cmp
in
orb
mov
push
fmuls
jecxz
xor
lret
es
adc
fcmovbe
loop
rcrl
outsb
cmpsb
fisttpl
mov
dec
div
push
pop
push
imul
fsts
or
insl
and
lea
movsl
std
xchg
adc
enter
rol
stc
addl
daa
sbb
mov
cld
std
push
outsb
sbb
mov
pop
mov
lock
push
sbb
xchg
outsl
sub
stc
push
xchg
enter
sbb
test
adc
pushf
repnz
mov
dec
push
sub
nop
repnz
test
idivl
pop
mov
mov
fisubrl
sub
and
das
scas
pop
insl
int
fstps
dec
inc
imul
sub
or
dec
stos
mov
clc
test
and
addr16
into
jnp
ficomps
push
aad
mov
cmc
movsl
dec
xchg
add
mov
dec
dec
push
int
pop
pop
rcll
fdivs
js
mov
jae
xor
ja
dec
xchg
inc
adc
cwtl
fsubs
pushf
lock
lret
stos
xor
cmp
pop
mov
mov
and
adc
arpl
mov
jo
push
pop
iret
cmp
fidivrl
dec
inc
sbbl
out
inc
xor
ret
add
pop
sahf
cmpsb
les
cmpsl
or
add
clc
inc
jnp
mov
jbe
lahf
jle
mov
xlat
popf
mov
insb
and
and
mov
fstl
int
sub
mov
dec
movsl
jmp
out
or
and
leave
adc
pop
inc
rcrb
xor
inc
add
and
push
loop
je
imul
cwtl
push
fstps
sbb
mov
enter
mov
adc
sub
mov
jb
xchg
mov
stos
pop
lea
push
pop
sti
lods
or
push
inc
int
aam
add
cs
add
enter
lock
fldt
gs
pusha
cltd
stos
sbb
lods
xchg
iretw
or
ljmp
cmp
jg
push
jp
dec
cmpsb
mov
aam
ds
arpl
xor
or
inc
and
cwtl
xchg
xorl
pop
sub
in
jge
ret
ljmp
or
and
xchg
jl
popl
testl
in
mov
mov
call
jno
fistpl
outsb
mov
js
mov
mov
push
popl
and
xchg
add
dec
inc
cmp
mov
iret
push
sarl
pop
mov
mov
rol
clc
in
mov
repz
outsl
inc
ss
enter
inc
stos
sub
jno
cmp
stos
mov
int3
repz
out
and
das
cwtl
outsb
les
sbb
mov
push
push
pop
dec
mov
frstor
divb
xor
xchg
insl
and
or
dec
imul
or
nop
mov
and
and
add
cmp
jge
mov
adc
pop
dec
or
stc
adc
sbb
sub
sti
xchg
pop
inc
or
movsb
jp
sti
or
std
fildl
adc
aad
adc
addr16
xchg
xchg
cmp
lcall
cld
lret
imul
lods
pop
mov
movsb
into
in
ja
pushf
adc
into
lods
into
add
and
mov
or
fmul
mov
sti
mov
dec
mov
in
mov
dec
inc
and
fisubl
xor
and
out
inc
testb
ret
xchg
dec
sbb
mov
in
mov
jno
sti
mov
pop
je
push
dec
xchg
rcrl
test
adc
xor
rorb
mov
mov
pop
dec
std
les
dec
or
in
clc
sar
ret
dec
insb
into
test
push
pushf
loopne
cmpsl
clc
arpl
inc
lock
mov
aad
xchg
in
jne
push
and
das
scas
dec
les
shrb
dec
push
jl
cltd
inc
arpl
xchg
push
mov
out
loope
daa
inc
inc
iret
or
mov
mov
dec
xor
sub
int3
adc
mov
pusha
sub
call
xchg
arpl
fwait
sub
les
push
dec
add
dec
xchg
adc
enter
push
movsl
repnz
add
scas
push
jb
xchg
int3
jo
xor
fwait
mov
xchg
pop
xor
jo
mov
and
xor
push
out
dec
mov
inc
fcmovb
add
rol
and
rcll
adc
pop
adc
sti
shl
add
push
popf
mov
aaa
and
mov
lret
stos
fisttpl
cmpsl
xchg
add
xor
int
pop
ret
add
shlb
sahf
sbb
xor
jle
out
idivb
aam
aas
dec
add
int
push
test
iret
out
xlat
sbbl
dec
scas
and
mov
jo
imul
repz
xor
ret
sub
xor
sbb
push
sahf
cmpsb
fidivrs
rcll
int
push
int
pop
xchg
mov
sub
sarl
and
call
xchg
add
mov
ret
cmpl
sub
mov
out
xlat
mov
ja
ljmp
das
aad
addr16
mov
xor
or
jge
inc
imul
sbb
gs
push
cmp
imul
lahf
sub
cmpsl
shl
out
enter
scas
shrb
fs
mov
std
les
lcall
push
aam
jmp
imul
xor
adc
jns
sbb
imul
lock
js
push
cld
xor
mov
jp
loope
pop
fisttps
push
xchg
cmc
lahf
negb
js
aad
call
sub
mov
loope,pn
pusha
add
pop
aam
adc
push
add
cmp
decl
lock
ljmp
jno
roll
fidivrl
lcall
push
rcrl
stos
scas
cmpsb
into
mov
test
insl
cmp
xor
dec
leave
and
dec
push
lahf
or
js
mov
mov
mov
lahf
insb
mov
sub
lods
mov
pop
sahf
enter
jne
rol
mov
lock
mov
push
adcb
cmpb
mov
cmc
fmull
mov
dec
out
pop
repz
je
sbb
push
adc
dec
sbb
movsb
outsl
pop
dec
and
mov
xchg
mov
and
lcall
out
jbe
push
nop
pop
repnz
js
xchg
inc
sahf
stc
popf
loopne
jl
repz
lds
imul
hlt
insb
popf
cmp
dec
js
push
pop
cltd
nop
movsl
and
sbb
mov
inc
out
out
imul
jmp
adc
aad
jl
sbb
jo
mov
js
cmp
xchg
and
insl
mov
add
fildll
mov
pop
mov
imul
outsl
dec
jg
adc
sbb
outsb
xchg
mov
cmovge
xor
add
in
jmp
pop
mov
mov
andb
lret
sub
ficoml
int
jl
dec
mov
jge
pushf
adc
cmp
cli
push
mov
shrb
pop
outsl
sbb
cmpsb
push
jle
xor
or
sbb
inc
dec
test
int3
je
lret
lret
mov
inc
pop
test
js
jno
rclb
testb
mov
ret
iret
dec
lret
cmp
xor
aam
stc
mov
inc
jbe
jbe
jle
insb
xchg
xchg
push
inc
mov
jmp
push
or
mov
fmuls
cmp
js
in
push
dec
dec
int3
fisubrs
stos
mov
es
ret
outsb
sub
or
push
scas
cs
es
lret
xchg
and
xchg
dec
addl
mov
hlt
pop
dec
notl
pop
pop
in
xor
or
mov
adc
int
adcl
dec
dec
sub
cmp
sbb
cmp
arpl
faddl
movsl
adc
xchg
xor
in
dec
int3
addr16
mov
lahf
outsl
sub
sbb
jl
adc
call
pop
push
les
outsl
mov
sbbl
lock
dec
nop
cmp
xor
sbb
mov
fisttps
jns
jp
mov
sti
ja
sar
dec
sbbl
pop
dec
pop
int3
adc
rorb
jbe
dec
js
jbe
sub
les
inc
mov
out
int
dec
movsl
push
xlat
shll
stc
cmp
fldl2t
mov
lahf
dec
scas
mov
in
arpl
dec
repz
inc
xchg
testl
xor
lock
sbb
subb
jmp
outsl
inc
pop
pop
jp
dec
push
sbb
dec
imul
ret
or
imul
or
inc
loop
dec
arpl
xor
inc
mov
pop
cld
aas
jb
sbb
cmpsb
fistl
popa
and
pop
rcrb
dec
je
jecxz
cmp
repz
pop
dec
scas
xchg
je
stc
dec
add
push
sub
ret
outsl
push
push
adcb
repz
stos
add
or
jae
and
sub
add
je
movsl
cmp
mov
rorb
lods
insb
in
pop
fwait
in
cli
aad
and
outsb
lods
add
mov
jmp
inc
lcall
inc
push
or
mov
mov
dec
imul
lods
scas
sbb
cmp
and
syscall
cmp
outsb
test
std
xor
sahf
xchg
test
rcrb
mov
mov
fistpll
repnz
lret
add
xor
dec
aaa
or
rorl
mov
pop
shll
push
xchg
xlat
dec
or
lret
shl
fdiv
js
repz
mov
ja
mov
xchg
les
mov
mov
lods
jl
arpl
pop
sarl
mov
mov
dec
arpl
xchg
sbbb
mov
movsl
in
testl
test
jns
mov
mov
adc
jnp
xchg
stos
add
xchg
out
push
rcl
push
arpl
enter
mov
dec
je
mov
inc
pop
fdivr
cmp
aad
push
push
mov
mov
pop
sbb
sub
inc
movsl
jb
mov
jae
test
out
xor
rcrb
leave
cmpsl
and
es
mov
mov
mov
dec
out
loopne
inc
xor
pop
sub
or
aam
push
mov
int
loope
fidivs
stos
lea
mov
sub
iret
cld
cmc
fldt
xor
mov
push
lahf
fistl
xlat
call
cwtl
pusha
or
fbld
ja
ffree
mul
mov
ljmp
mov
xor
daa
out
in
leave
sub
add
lcall
xor
mov
aad
xor
testl
cmp
push
mov
icebp
sub
push
clc
pusha
mov
hlt
mov
push
cld
popa
mov
in
stos
add
test
mov
cld
ret
cld
mov
push
mov
push
xlat
fisubs
sub
push
pop
xor
add
pushf
inc
ja
aam
mov
jno
ficoms
mov
loope
mov
cld
lahf
clc
pop
add
xchg
ficompl
sub
mov
sub
pop
mov
mov
push
xor
shl
mov
xor
in
cmpsb
sti
and
inc
push
rorb
aaa
xchg
inc
jns
movb
xor
pop
sbb
or
jnp
inc
mov
jns
dec
aad
test
icebp
sbbb
outsb
sahf
xchg
repz
aaa
std
cwtl
lea
dec
jge
xor
inc
imul
popf
inc
xor
sbb
adc
addb
mov
mov
dec
popf
fnstsw
call
sbb
cmp
fsubrl
ds
mov
outsb
in
xchg
aas
filds
mov
ret
mov
lods
jmp
add
push
fmul
insl
cmp
out
add
out
or
xor
xor
insl
out
dec
mov
cld
mov
mov
adc
xchg
pop
in
fnstenv
jmp
cmp
hlt
push
addl
mov
mov
nop
pop
cmp
xchg
test
call
sub
sbb
adc
mov
xor
rclb
enter
jae
push
or
out
pop
pop
cmpl
pop
push
in
int
xchg
mov
in
iret
cmpsb
mov
std
cmpl
add
mov
xor
aam
and
inc
pusha
dec
call
mov
cmpl
pop
pop
xor
pop
or
cld
lock
inc
cmpsl
dec
dec
pop
mov
add
movsl
movsb
imul
arpl
sub
or
or
ja
enter
pop
push
push
rolb
mov
push
push
push
pop
lods
or
out
addb
in
bound
pop
or
stos
cld
in
xchg
mov
dec
lock
add
cmp
dec
faddl
dec
push
pop
mov
sbb
adc
hlt
mov
test
test
das
xor
inc
sahf
sub
lods
and
inc
cmp
cmp
arpl
jno
jp
outsb
mov
sub
mov
scas
mov
or
cmpl
outsl
in
mov
sarl
pop
jne
ss
rcl
in
mov
pop
and
fdivrs
cmpsb
pop
xchg
rcr
push
cli
sbb
push
xchg
ds
in
je
xlat
add
jb
fstpt
or
cli
loope
mov
lret
out
add
fdivrs
push
sahf
mov
fwait
jo
pop
test
mov
out
cli
pop
hlt
clc
jg
jno
push
aam
xchg
dec
into
xor
and
inc
xor
dec
dec
mov
lret
enter
hlt
sub
xor
sub
mov
fisttpl
fistpll
roll
not
mov
pop
push
mov
add
fisttps
in
pusha
dec
inc
xchg
lahf
xchg
icebp
rolb
out
mov
cmp
mov
jecxz
std
adc
stos
mov
xchg
subb
sbb
mov
xchg
loope
or
out
push
les
dec
inc
push
hlt
push
je
mov
mov
sbb
loope
mov
ret
fisubs
or
lret
sub
popf
cwtl
scas
mov
imul
jmp
ss
adc
cs
call
mov
pop
mov
mov
cltd
out
les
adc
loop
mov
shll
inc
pop
mov
pushf
or
cmpsb
lods
or
mov
lock
insb
push
out
frstor
xor
mov
cmpb
xchg
cld
jb
xlat
xchg
or
mov
xor
xchg
scas
pop
aas
pop
iret
out
cld
push
mov
repnz
movsb
or
or
mov
pop
shlb
fucom
ss
and
idivl
movsb
loop
adc
je,pn
and
scas
xor
or
test
les
popl
leave
mov
pop
sub
inc
lods
insb
mov
out
mov
cmp
jecxz
ret
into
cltd
pop
out
mov
dec
outsl
add
roll
inc
repnz
xchg
push
loope
push
jnp
gs
fcom
jnp
fnstsw
aam
lret
jmp
imul
cwtl
lret
and
push
add
stos
sti
xchg
lock
jmp
lahf
ljmp
cwtl
in
dec
add
int3
dec
fisubs
shll
mov
mov
jecxz
add
push
fisubl
js
xor
add
push
out
cmp
fidivrl
out
ror
mov
pop
outsl
lds
lea
js
xor
jnp
fwait
xor
leave
data16
push
pop
movsb
shll
sbb
gs
or
orl
sbb
aad
sbb
jae
bound
les
ror
sbb
out
cmp
popf
aas
lahf
vmaxps
js
inc
js
jns
pop
bound
leave
mov
fistpll
outsb
xor
and
decb
das
cli
cmp
lret
data16
add
std
inc
push
and
adc
xor
fadds
and
jno
ds
adc
sahf
scas
adc
cltd
loope
or
dec
pop
jmp
fildl
pushf
cmp
pop
in
jl
das
fmuls
mov
push
jl
insl
add
mov
repz
sahf
xrelease
push
lods
xchg
mov
ljmp
outsb
fbld
mov
xchg
push
test
pop
mov
pop
fs
pop
xor
out
loope
dec
push
jbe
push
movsl
and
ljmp
and
push
lods
adc
lret
fisubs
sar
fdivrl
inc
mov
subb
loop
push
fwait
xor
add
jae
push
jns
cmc
and
cmp
mov
insl
sub
jmp
fimull
fisttpl
dec
fs
in
sub
cmp
jnp
or
adc
cmpb
inc
lahf
scas
gs
jp
ret
xchg
shl
add
bound
clc
adc
add
iret
jl
nop
and
loope
xorl
arpl
inc
jb
or
stos
ds
sub
std
jns
aas
les
aaa
cmp
pop
lahf
sahf
mov
ljmp
inc
mov
cmpsl
imul
dec
test
dec
cmp
and
fwait
lret
lret
rolb
rorb
scas
and
mov
sbb
pop
aas
cld
push
out
push
std
divb
mov
xor
js
jo
sbb
in
imull
inc
mov
ficoml
mov
stos
scas
jnp
aaa
mov
aas
dec
dec
dec
enter
mov
push
push
mov
xchg
push
inc
xor
pop
loopne
mov
mov
ret
push
scas
shl
pop
leave
pop
jecxz
sbb
ret
cmp
cmpsb
orl
insb
out
rcll
xchg
or
inc
dec
cmpsl
aad
xchg
inc
push
and
jno
push
jmp
jae
mov
test
das
and
scas
cmp
rcl
popa
sub
icebp
or
add
call
xchg
out
jg
mov
inc
inc
mov
in
mov
movsl
stc
or
add
push
loop
lods
rorl
jp
sub
ds
inc
out
push
popf
adc
aas
repnz
mov
xchg
add
mov
popa
scas
pop
leave
test
in
orl
fsubrl
sarl
cs
push
popa
out
xchg
std
mov
mov
mov
lea
lods
arpl
mull
xchg
jl
inc
dec
jmp
out
cmp
fwait
and
push
jb
jp
movsl
fs
out
popw
stc
mov
shll
dec
ret
xor
clc
push
xlat
jle
mov
pop
jecxz
sarb
xor
outsl
push
sub
jns
xchg
mov
lds
pop
xchg
jle
xor
mov
mov
sub
jo
rol
jae
xor
ja
std
dec
mov
fdivrs
std
aad
ret
sbb
jmp
movsb
ret
rolb
xor
rcr
adc
inc
dec
mov
pop
push
lods
lahf
push
loop
pop
xchg
sbb
into
lcall
and
mov
inc
or
sbb
mov
pop
dec
xor
pop
or
mov
xchg
fldenv
push
jns
lcall
in
movsb
out
lahf
cmp
jnp
fidivrl
and
xchg
adc
lret
sti
cmp
jae
outsb
push
inc
adc
push
movsl
mov
inc
lea
addb
jo
sbb
or
pop
dec
les
jnp
pop
pop
notb
insl
into
cmp
inc
push
popf
movsb
push
icebp
mov
fucomp
xor
repnz
cmp
jmp
sub
mov
ja
adc
fmul
sbb
push
ret
pop
jb
mov
rcrb
mov
lret
jo
fsts
out
inc
xor
pop
mov
jo
sub
mov
push
clc
in
pop
pop
push
cmpb
movsb
xchg
adc
and
sub
in
push
fadds
test
scas
int3
push
mov
outsb
testl
dec
and
in
jl
inc
in
sub
adc
insl
inc
mov
ficompl
ret
dec
shll
insl
sub
jle
imul
mov
cwtl
xlat
and
jmp
mov
xchg
out
add
cmpsl
mov
push
mov
push
mulb
stos
cmpsl
cmpsb
lret
and
push
out
xchg
in
cmc
scas
and
xchg
imul
adc
shr
insl
popf
or
cltd
insb
repnz
cmpb
adc
imul
and
or
mov
lret
pop
xor
mov
sbb
loop
xchg
test
pop
mov
inc
xor
mov
adc
mov
inc
lcall
push
inc
icebp
scas
mov
shll
adc
ror
shlb
rclb
int3
push
jle
add
dec
loopne
cmp
xchg
lahf
ficompl
aas
and
push
mov
lcall
aaa
xchg
mov
sub
jp
jmp
fdivrl
icebp
mov
mov
pop
into
pop
push
jb
cmp
insl
movsl
sbb
es
or
cltd
jmp
inc
sbb
cmpsl
jns
pop
push
mov
loopne
and
enter
inc
jbe
je
adc
out
mov
icebp
sub
push
sub
dec
dec
lods
push
popf
adc
mov
xor
repz
mov
xor
sub
ljmp
xor
jb
inc
sti
jo
dec
push
mov
arpl
movsb
imul
adc
mov
jecxz
imul
hlt
inc
sub
xlat
int3
into
movl
rcrl
clc
add
repnz
push
stos
subb
pop
aad
push
mov
arpl
outsl
or
push
pop
movsl
mov
adc
addr16
addl
addr16
and
and
fs
jae
adc
mov
out
hlt
cli
inc
push
mov
arpl
add
fdiv
mov
stc
pop
push
mov
and
jno
movsb
clc
mov
inc
cltd
push
test
dec
das
and
and
lret
lcall
out
roll
mov
push
mov
push
xchg
scas
int
and
sahf
insb
jl
mov
push
fistps
add
movd
add
enter
fidivl
movsb
push
push
lods
addr16
cmp
inc
enter
sbb
pop
cmp
mov
pop
movsb
xchg
xor
negl
mov
pop
mov
fs
xchg
or
repz
sbb
cmp
mov
insb
test
pop
pop
sbb
loop
lret
arpl
test
out
sub
mov
int3
pop
outsb
lock
jnp
fimuls
sbbb
cld
ret
test
nop
or
loope
ret
xor
nop
lret
bound
dec
push
sbb
xchg
jne
cmp
into
mov
pushf
inc
cltd
fdivrl
add
in
sbb
sti
or
or
cli
rolb
mov
std
and
shrb
lea
cmc
aaa
mov
test
iret
jmp
lods
fisubl
jbe
mov
sbb
mov
ja
mov
xor
and
mov
out
lods
shll
test
int
pop
enter
fcoml
clc
mov
cmp
imul
loopne
jae
jge
cmpsl
and
inc
dec
in
sbb
rolb
test
cld
fwait
mov
mov
dec
lcall
pop
sbb
scas
and
mov
or
enter
fistps
repz
ret
mov
xorl
push
xorl
test
cmp
mov
dec
fildll
sbb
pop
push
and
push
or
ss
dec
push
rcrl
out
pop
cltd
mov
add
out
pushf
les
repnz
or
push
mov
lea
xlat
dec
adc
iret
pop
xchg
idivl
sbb
pop
xchg
pushf
or
xor
mov
test
and
out
mov
sbb
lods
iret
push
sbb
lods
test
fidivrl
add
ret
cmp
mov
mov
mov
int3
pop
sti
out
cld
xchg
test
or
pop
mov
adc
push
pop
mov
rcl
les
jbe
mov
imul
scas
shll
inc
sub
jns
or
int3
vmwrite
and
push
sub
pop
lds
pop
xchg
add
stc
push
popf
adc
imull
je
shll
popa
sub
push
cmpsl
mov
test
shll
sub
push
out
mov
sbb
pop
push
push
adc
mov
xor
push
lahf
jmp
or
shrl
dec
mov
mov
and
sti
jno
out
in
outsl
inc
push
and
lret
sahf
or
mov
jp
mov
pop
in
test
mov
aaa
jge
pop
stc
push
add
mov
insb
sahf
lds
cmpsl
xor
cmp
and
lret
das
sub
ret
xor
and
ljmp
lahf
adc
add
sbb
fwait
rol
pop
addr16
outsl
fsubr
scas
xor
pop
pop
sub
fs
jp
mov
xchg
xchg
xlat
push
mov
aam
inc
ljmp
add
mov
mov
int
call
adc
arpl
iret
movsb
add
in
xor
add
nop
or
popa
push
aas
push
filds
mov
add
repnz
aad
arpl
movsl
adc
dec
popf
repz
mov
xchg
imul
jne
mov
fbstp
sbb
push
lds
aaa
das
push
sub
dec
enter
add
lahf
jmp
sub
fdivl
push
cmp
cmp
cmp
gs
fs
xchg
inc
jnp
add
popf
xchg
imul
dec
fwait
mov
add
outsl
popl
loopne
fsubrl
and
adc
push
lds
xchg
inc
jnp
xchg
adc
pusha
fs
jb
pop
mov
add
aaa
push
clc
arpl
and
lods
out
aam
jnp
push
mov
icebp
inc
jl
clc
outsl
std
xor
mov
daa
push
dec
sar
mov
add
jle
mov
inc
cmp
insl
lea
sbb
inc
push
js
adc
mov
fistps
mov
rep
out
sbb
call
in
mov
mov
jp
jl
push
pusha
add
push
push
rcrl
fsts
mov
pop
dec
mov
js
jo
lcall
sub
fildll
sub
sub
xchg
cwtl
mov
loope
daa
mov
xchg
mov
imul
int3
rcl
pop
jb
imul
fistps
and
push
fldcw
lret
jp
inc
std
dec
push
enter
or
mov
daa
mov
mov
jecxz
xor
mov
and
ljmp
es
test
mov
negb
test
adcb
push
daa
xor
sub
cmp
in
mov
sbb
popf
fldt
lods
or
xor
adc
lret
dec
int
jmp
sub
frstor
jb
inc
adc
test
sahf
insb
dec
ja
inc
shlw
push
xor
or
sti
jp
mov
mov
push
fwait
pop
ss
sbb
loop
adc
or
ret
mov
je
push
leave
clc
hlt
icebp
in
xchg
sbb
inc
push
mov
mov
lock
sub
fistpll
test
jne
lret
cs
push
sub
sub
in
mov
mov
sysret
jle
mov
cmp
std
xor
pop
jge
call
add
popa
ss
data16
imul
xorb
sub
push
jl
jns
jle
lods
mov
or
mull
pop
push
js
aad
dec
xchg
sbb
mov
sub
sub
ss
cmp
shlb
dec
movsl
test
orl
inc
aaa
push
or
push
cmpsb
xlat
out
cmpsl
mov
subb
out
popa
sub
cltd
repz
sub
loope
add
roll
cld
mov
adc
cmp
test
xor
adc
cmpsb
outsl
xchg
ljmp
cmc
inc
frstor
jmp
dec
xchg
outsl
push
pop
mov
mov
or
notl
jl
pop
add
imull
faddl
dec
cwtd
movsb
cmpsb
push
adc
or
cmp
jle
nop
pop
push
jl
xchg
jmp
mov
push
mov
pop
xor
adc
psrlw
sub
pop
mov
sti
pop
je
lret
add
loopne
cmp
daa
test
movsl
bound
adc
mov
or
int3
fmul
leave
stos
and
sbb
icebp
mov
mov
push
imul
dec
jp
insl
push
mov
add
adc
pusha
push
pop
xchg
cmp
or
jmp
xchg
or
mov
inc
call
std
jg
jp
dec
mov
pop
add
repnz
lds
push
push
sub
rclb
sbb
stos
pusha
movsl
lock
mov
mov
sbb
sarl
loopne
xchg
lret
mov
shll
arpl
ret
mov
lods
mov
mov
sub
push
mov
notb
pop
mov
fwait
inc
add
stos
cmpsl
call
push
lret
mov
enter
call
cmp
ds
cwtl
cwtl
push
sub
push
cmpsl
mov
nop
and
jo
decl
pop
pop
dec
jb
dec
sub
adc
push
cmpb
adc
out
or
popa
cmp
mov
lods
popl
push
lock
mov
mov
icebp
lcall
cld
fimuls
int3
push
cmp
out
int
mov
fs
jo
dec
test
lahf
lock
into
shrl
fstl
ret
push
out
test
test
push
cmp
mov
sub
mov
cs
mov
pop
pop
scas
sub
and
xchg
sub
movb
mov
xchg
ret
pop
aam
push
xor
cli
popf
stos
adc
adc
mov
sahf
jg
xchg
cs
ret
push
repnz
cwtl
in
aaa
addr16
nop
jmp
lcall
or
sbb
mov
xchg
mov
add
inc
lret
sbb
adc
lods
jbe
movsl
test
loop
adc
and
sub
leave
daa
and
leave
cld
insl
fwait
or
xchg
imul
lock
cld
daa
mov
sbb
mov
outsb
shrl
mov
cmp
aad
aam
rolb
faddl
fistps
cmp
inc
mov
fwait
push
ljmp
push
cmpsl
mov
jb
iret
int3
mov
out
pusha
inc
push
enter
lea
hlt
fcmovu
cmp
ret
pusha
add
mov
mov
arpl
mov
sub
and
mov
xor
ret
fcmovnbe
sub
movsb
jbe
cltd
enter
and
pop
and
addl
xor
push
bound
movsl
and
mov
lods
repz
jge
dec
daa
add
ror
shlb
pop
jp
mov
pusha
dec
mov
dec
cwtl
insl
adc
lock
loop
cmpsl
sarl
and
dec
pop
leave
aad
int3
loop
sti
fdivl
lock
ja
jmp
mov
fnstenv
cmpsl
ror
sub
mov
mov
jnp
xor
lods
inc
xor
push
js
push
int
jge
or
rcr
movsb
pop
sbb
shll
inc
mov
pop
cmp
pop
lods
or
cmp
mov
jne
mov
adc
aas
cmc
push
mov
sbbl
arpl
lea
xlat
pop
push
ficoms
mov
test
outsb
and
fistl
mov
fistpll
jge
lret
divl
sub
mov
inc
in
push
lods
jmp
jbe
shll
sbb
jl
xorl
stc
lods
hlt
sub
adc
leave
ret
adc
sub
jnp
cmp
push
push
inc
mov
leave
sar
cmp
mov
jne
jb
add
add
in
lahf
adc
seta
enter
mov
jb
add
movsl
rcrb
lret
nop
push
cwtl
mov
shll
sub
jae
cmp
xchg
movsl
and
lahf
pop
cld
add
xchg
add
or
xlat
repnz
cwtl
jmp
inc
lock
cmc
iret
insl
cs
rdtsc
and
add
sti
stos
cmc
stos
mov
popa
dec
xor
push
sbb
add
dec
cmp
jl
push
loopne
sub
dec
mov
out
push
and
sti
std
into
out
enter
pop
add
jle
mov
enter
iret
out
xor
mov
cwtl
fcomp
fldt
pushf
out
lods
filds
decl
xchg
out
fnstsw
jne
add
dec
lret
in
push
pop
std
cmpsb
into
mov
and
decl
mov
xchg
pop
sbb
add
decl
and
fldl
jle
cwtl
push
mov
inc
push
ds
sbb
lahf
aas
adc
jmpw
ds
sub
addr16
and
sahf
mov
or
insl
aas
icebp
js
inc
sub
cmpsb
jo
outsl
push
sub
and
dec
repnz
xor
push
push
adc
pusha
fsubrp
or
mov
sbb
mov
push
add
std
and
mov
pop
inc
xchg
xor
ss
inc
adc
sbb
fmul
fwait
dec
adc
jbe
xor
stos
ss
sbbb
dec
imul
sbb
in
aad
inc
dec
lds
daa
mov
mov
cmp
inc
test
sub
insl
rorl
adc
rol
roll
lret
mov
or
and
push
popf
pop
cmp
push
out
ljmp
int3
dec
les
pop
loopne
pusha
mov
sbb
dec
loopne
mov
jns
iret
shrl
mov
mov
sbb
add
push
xor
aad
pop
nop
je
sbb
inc
mov
sti
mov
jo
int
fs
add
and
and
ds
jp
out
aam
xchg
into
dec
cmp
xchg
dec
mov
dec
add
orl
cmp
xchg
aam
insb
or
and
sbb
int
in
lcall
mov
enter
fstps
mov
cmpsl
imul
mov
sub
int
iret
push
les
push
stos
lds
jmp
mov
faddp
hlt
mov
out
das
sbb
test
add
fiadds
or
mov
pop
in
mov
inc
lods
outsb
mov
inc
stos
mov
call
ret
mov
inc
les
dec
xchg
shl
jns
mov
aaa
ljmp
outsl
dec
ret
lret
xor
lret
sub
dec
dec
xor
dec
push
jmp
pop
and
out
xor
jp
idivl
clc
jo
out
xchg
rorb
enter
adc
mov
cltd
mov
xchg
pushf
pop
ljmp
cmpsb
aas
mov
and
scas
mov
imul
inc
nop
sub
aam
pop
iret
ds
adc
adc
call
jmp
fstl
sbb
insl
sbb
stos
jae
and
sub
ror
inc
mov
pop
mov
xchg
daa
cmp
sbb
shll
ret
fidivrs
test
cmp
sarb
aam
mov
sbb
pop
out
clc
movsb
push
movsb
push
mov
cltd
dec
lods
shll
arpl
stc
out
jl
movsb
mov
inc
fsubs
xchg
or
mov
pop
cmp
mov
insb
sarl
dec
les
lahf
and
outsb
sub
mov
out
out
lcall
xor
and
jmp
jp
aad
adc
push
xor
xchg
fs
insl
mov
mov
and
js
in
add
and
inc
and
inc
in
pop
ret
push
popf
cmp
inc
jbe
mov
sbb
xor
or
jo
push
or
cmpsb
cmpsl
data16
cmp
push
fs
gs
add
push
mov
mov
mov
sub
sbb
pop
add
jnp
std
xor
cmc
and
push
sub
arpl
sub
jbe
fisubl
in
mov
cmp
aaa
mov
add
insb
in
jecxz
mov
loopne
and
mov
mov
dec
pop
rcl
fadd
lock
outsb
movsl
dec
jb
jo
pop
lock
inc
sbb
cs
in
push
jnp
xor
sub
ss
andl
mov
mov
imul
les
jl
icebp
cmp
pop
addr16
cltd
pop
mov
xchg
mov
pusha
cmpsl
test
movsb
mov
int3
lea
jne
sbb
push
sub
je
mov
inc
jno
jne
cmp
mov
sarb
inc
ja
push
jg
cmpsl
movb
icebp
arpl
sub
dec
and
adc
push
jge
inc
out
pushf
xchg
test
sti
sbb
rcrb
xchg
int3
cmp
cmp
je
xor
adc
push
out
sbb
mov
cli
mov
push
outsb
lods
enter
fdivrl
rep
and
dec
pop
cmp
add
gs
jge
sub
sub
imul
sbb
pushf
jnp
inc
out
in
cli
xchg
xchg
jle
jnp
inc
orl
movsl
push
into
ror
mov
imul
add
inc
jne
int
std
orb
xor
pushf
push
pop
gs
lea
jecxz
jnp
repnz
fidivl
sbb
cli
add
aas
inc
mov
pusha
add
insl
sub
out
cmp
sub
int
xor
cltd
push
andl
leave
in
shlb
jle
lods
and
sbb
or
inc
test
sub
fwait
cli
pop
push
pop
enter
adc
les
mov
les
cmpsb
push
pop
lods
fiadds
and
pop
push
pushf
mov
mov
cs
jmp
test
push
sub
test
xchg
int
xor
adc
inc
xor
or
dec
push
sub
mov
movsb
mov
push
cmpsl
test
dec
fucomi
idivl
xchg
push
mov
push
cmp
push
gs
adc
adc
mov
stos
repnz
or
call
mov
adc
mov
mov
pop
lods
out
jge
stc
loope
sub
jmp
repz
mov
aam
mov
cld
dec
jmp
inc
xor
adc
sub
dec
jmp
cs
dec
flds
mov
pop
fs
xor
int
divl
mov
fs
imul
addr16
incl
cmpsl
icebp
push
sbb
ret
or
movsl
lds
rcll
cs
jnp
inc
outsl
rcr
or
loope
adc
das
dec
ss
orl
lcall
stc
pushf
cmpsl
sbb
jmp
jle
adcb
jbe
xor
and
jns
xor
mov
rcr
push
push
pop
push
cmp
mov
repz
daa
sub
inc
xor
xor
and
jl
or
xlat
adc
push
imul
fisubl
cmp
in
fisubs
loop
add
cmpsb
jle
lahf
jecxz
repz
inc
or
in
daa
jno
lods
push
dec
pop
sbbb
mov
push
in
enter
hlt
movsb
test
and
stc
push
mov
pop
hlt
push
popa
push
pushf
mov
je
pop
test
nop
aaa
pop
ds
lcall
data16
mov
push
sub
or
loop
pop
and
adc
mov
push
mov
and
shlb
mov
dec
call
aam
ljmp
mov
adc
frstor
push
into
dec
jns
js
test
outsb
scas
popf
dec
pop
dec
push
push
stos
pop
xchg
xchg
inc
in
mov
sub
push
mov
jp
xor
dec
psadbw
dec
in
sub
stos
into
xor
dec
push
dec
xchg
add
lahf
pop
xchg
xchg
scas
aas
sbb
je
scas
ja
xchg
out
adc
jbe
push
jb
enter
fistl
push
mov
std
nop
outsl
sbb
jmp
imul
dec
fisttps
add
clc
push
ja
aas
shl
fimull
push
shl
scas
cltd
imul
sub
lods
pop
mov
cmpsl
les
mov
fildl
dec
insb
repz
loope
lret
and
sahf
mov
cmp
sub
popl
stos
pop
in
jnp
inc
adc
repnz
jne
scas
popa
cltd
mov
add
and
into
mov
les
pushf
xor
cltd
imul
lods
rorl
shlb
shl
push
cltd
sbb
xor
jae
notb
sbb
shrl
fs
dec
sahf
aas
lds
dec
loop
popl
xor
ljmp
push
outsb
repnz
insl
js
mov
mov
dec
dec
es
out
ss
mov
mov
pop
add
cmp
dec
cmpsb
loope
or
out
ja
mov
mov
mov
fisttpl
divl
and
sub
xor
inc
je
cmp
mov
jno
mov
push
add
ja
mov
mov
pop
out
rcrl
push
and
lea
dec
je
dec
cmp
pushf
dec
jbe
test
clc
int
cmpsl
sub
stos
or
int3
dec
cmpsb
jns
pop
pop
xchg
bound
or
fxch
test
in
dec
in
or
mov
add
nop
sub
and
xchg
aad
or
repnz
jle
loop
ja
js
xor
in
loopne
clc
jge
sub
aas
dec
repz
push
movsl
roll
fsubr
jns
arpl
test
xchg
repz
repnz
insl
pop
jbe
clc
iret
add
push
shlb
jo
test
or
cmc
sbb
cmp
and
xor
mov
jnp
test
inc
test
xor
pop
ja
inc
fisubs
mov
push
cs
mov
xchg
and
inc
add
pop
or
xor
cmp
sbb
push
shrb
loopne
testl
inc
je
stos
jge
dec
dec
pop
sub
fists
jo
mov
pop
fsubl
push
and
mov
xor
dec
pusha
jle
fldl
test
sub
mov
mov
shrb
or
mov
add
or
stos
pop
mov
lahf
loop
popa
call
repz
mov
mov
xor
ret
fcmovnu
shrl
ficomps
add
jp
es
insb
cmp
dec
pop
jnp
sub
or
jecxz
adcl
lods
sahf
ljmp
adc
and
jge
xor
cmpsb
xchg
and
and
xchg
fistpll
pcmpeqw
sbb
pusha
test
in
jo
jle
shrl
sbb
lret
jne
jb
inc
arpl
xchg
imul
and
xor
pop
or
incl
shll
xor
push
int
loopne
lods
inc
push
icebp
enter
sub
add
mov
mov
lret
sti
stos
cs
fs
lret
lock
jp
push
ljmp
jnp
lds
jnp
adc
inc
jp
cmc
inc
mov
cwtl
lods
jnp
ja
cltd
add
fs
jl
xchg
inc
insl
out
xchg
ljmp
adc
mov
sub
mov
lock
gs
ficoml
or
iret
add
fwait
dec
cmpsb
and
jle
inc
push
sti
or
push
fisttpl
fwait
aas
out
cwtl
or
shrb
int3
and
lods
cs
fcmovu
mov
mov
push
push
jmp
adc
imull
ds
pop
inc
xchg
mov
mov
aad
aaa
jecxz
fisubs
test
fucomi
popf
mov
mov
xchg
lock
and
cltd
das
adc
dec
clc
push
jb
sbb
mov
mov
pop
in
es
add
fcomps
mov
mov
scas
sti
jns
in
movsb
fadd
hlt
cmp
jg
dec
rcl
lahf
xchg
rcr
lods
rorb
xchg
cmpsb
cmp
into
mov
push
jbe
lcall
jae
pop
ljmp
add
or
mov
out
push
push
fwait
xchg
lret
sub
or
cmp
push
dec
mov
adc
pop
lock
jle
or
sub
jge
jmp
insb
fwait
jmp
push
mov
iret
push
out
pop
outsb
push
and
test
mov
push
hlt
push
mov
sub
inc
lea
sti
std
inc
ljmp
mov
xchg
inc
push
stos
pushf
in
add
pop
mov
inc
inc
loope
mov
jae
pop
jl
mov
loope
xchg
push
push
jbe
cmp
jmp
ja
adc
jns
scas
xchg
mov
adc
jb
imul
adc
mov
movsb
pop
and
insl
cmpps
mov
insb
std
mov
test
dec
add
dec
jnp
test
mov
mov
pop
call
or
iret
fldcw
test
xchg
cwtl
push
pop
shl
pusha
inc
cmp
pop
inc
mov
inc
cli
int3
gs
cltd
test
mov
sbb
out
shlb
mov
pop
mov
jle
aas
xchg
jg
xorb
or
jle
jg
push
jo
sbb
push
xchg
pushf
inc
test
mov
jo
dec
fstp
xlat
and
cmpsl
cmp
test
cmp
mov
dec
ljmp
sti
cmp
and
sbb
ret
mov
dec
or
cmp
ds
push
imul
push
mov
sub
popa
jge
stc
loopne
mov
test
ret
rclb
daa
push
nop
dec
and
outsl
ss
out
adc
insb
scas
push
sub
and
lock
fistpll
cmp
in
cmpsl
pop
add
inc
jns
lds
mov
in
push
aaa
lcall
subb
cmpl
rcrb
insb
call
clc
push
xor
in
add
add
sub
scas
xlat
mov
xor
cltd
and
jle
pushf
aad
pushf
pop
inc
or
sbb
out
rorb
dec
fidivl
cmpsl
mov
addr16
lods
adc
push
mov
jae
inc
lret
sub
iret
int3
imul
insb
stos
cld
adc
xor
in
sub
mov
outsb
and
popa
lds
scas
jb
mov
or
ret
call
adc
xor
jbe
inc
in
mov
int3
push
test
les
popf
xchg
clc
movsl
shrl
and
xchg
daa
jbe
inc
inc
cmc
stos
jnp
add
test
pop
daa
xchg
push
mov
test
adc
in
push
dec
iret
outsb
or
repnz
enter
sbb
cmp
pop
push
mov
sub
sub
fisubrs
push
push
ljmp
inc
jbe
or
or
cmp
adc
out
push
inc
sbb
cld
jg
clc
mov
rep
sub
sbb
xor
jecxz
pop
add
xor
jo
sub
test
xchg
daa
mov
stos
mov
aad
insb
sbb
lret
addr16
cmpsb
and
ds
push
in
xchg
xor
jne
cwtl
jae
push
jecxz
xlat
xor
arpl
mov
sbb
ss
dec
mov
jne
test
bts
ja
xor
out
ret
enter
xchg
push
push
iret
lahf
dec
stos
xor
adc
loope
out
add
stos
mov
dec
out
outsb
inc
ss
repnz
out
aas
dec
xchg
push
pop
lods
adc
adc
and
mov
pop
lea
or
in
movsl
add
arpl
cmp
jg
adc
stc
mov
addr16
ja
addl
and
leave
cltd
fstl
lods
rorl
insl
iret
cwtl
cwtl
mov
dec
inc
cmp
ret
test
insl
xor
lcall
fstps
cmp
loopne
xchg
ljmp
mov
lahf
cs
mov
nop
xchg
std
xchg
cli
push
loopne
push
cmp
aad
jg
lahf
pop
mov
shlb
cmc
adc
dec
movsl
push
pop
sub
popf
add
jmp
and
inc
lret
fstps
js
xor
in
or
in
xchg
fcmovu
or
cmpsl
pop
jne
or
das
pop
shl
push
cmp
int3
pushf
jle
outsb
cmpsl
imul
cwtl
mov
out
in
rolb
or
sub
test
push
or
sbb
cs
sahf
inc
aad
popa
add
mov
inc
pop
push
cs
insl
jg
addr16
adc
xchg
jo
repz
lahf
xchg
mov
fcmovb
and
out
mov
xchg
bound
hlt
cwtl
inc
scas
inc
pop
cmp
sti
call
lds
xor
push
pop
in
mov
nop
les
jae
scas
pop
cld
jo
fmuls
js
into
fisubrs
inc
jno
lea
inc
pop
stos
popl
mov
icebp
and
pop
rcl
push
scas
ss
call
mov
push
aam
add
iret
dec
cmpsl
jb
arpl
repnz
jp
ret
aas
test
dec
cld
fnsave
cs
dec
and
mov
push
or
jl
das
sahf
pop
inc
jg
push
or
add
repz
cmp
push
lcall
call
and
dec
test
push
lahf
mov
dec
test
call
scas
cmp
test
in
jae
outsb
int3
ret
push
fisubrl
jp
jb
pop
sbb
gs
divb
push
orps
call
cld
add
fcmovnb
gs
lahf
ds
movsb
in
xor
xchg
lcall
loope
push
mov
mov
ret
jno
adc
sub
ljmp
out
push
mov
mov
xor
mov
mov
push
fisubrl
xchg
jg
push
arpl
stos
imul
jb
jle
add
ja
lcall
cmpsl
loopne
inc
es
sub
jnp
jmp
bnd
cmpsb
loop
xor
bswap
outsb
out
enter
sbb
or
jne
xchg
xchg
leave
and
dec
mov
lret
sub
pop
adc
loope
addr16
xor
adc
inc
dec
mov
test
xchg
das
xchg
mov
dec
aaa
pop
stos
testl
ret
out
add
addr16
mov
inc
cmc
loope
mov
jmp
call
and
cmp
mov
mov
les
test
sbb
mov
cmp
icebp
outsl
sub
enter
adc
pop
movl
xor
add
pushf
into
lret
je
push
and
inc
into
mov
or
repz
sbb
push
push
loope
adc
dec
scas
mov
fwait
sahf
push
out
cmpsb
mov
lcall
xchg
rorb
and
imul
flds
lock
aam
mov
clc
loopne
cmp
pop
lcall
pushf
imul
addr16
stc
xlat
arpl
push
lea
loope
sub
stos
dec
aas
jns
jne
cmp
bound
mov
test
pop
ret
out
lret
jbe
stc
sbb
sbb
mov
je
pop
pop
sbb
jae
mov
sahf
pop
and
xchg
aas
xor
inc
orl
sub
adc
daa
outsl
push
popf
pop
xor
mov
ficoms
xchg
cmp
repz
cmpsl
mov
or
imul
aam
mov
add
jp
faddl
mov
lods
jnp
scas
out
pop
add
fidivl
xchg
pop
dec
jg
fildl
cltd
out
or
ds
and
stc
lahf
in
push
add
test
test
iret
mov
cmp
push
rcll
int3
ss
not
lods
pop
repnz
mov
push
sbb
or
out
daa
movsb
mov
xchg
hlt
icebp
pusha
shlb
outsl
out
mov
stos
add
in
adcb
outsl
fwait
popa
cmp
movsb
mov
xor
push
hlt
xor
push
fimull
stos
inc
rcrb
xchg
bound
pushl
mov
mov
jp
sbb
push
mov
adc
enter
push
mov
xchg
mov
shl
outsl
push
jo
fimuls
movsl
loopne
pop
fiaddl
xchg
hlt
fiadds
dec
movsb
mov
push
stos
scas
mov
imul
jne
mov
lds
fstl
outsl
or
push
xor
repz
movq
inc
adc
nop
mov
pop
les
mov
push
jle
sbb
aam
adc
loope
push
mov
pushw
sti
or
out
aad
sti
mov
mov
ljmp
fiadds
jg
fimuls
cltd
inc
outsl
jge
enter
cmpsl
das
or
outsb
cwtl
sub
hlt
lock
sbb
xorl
std
data16
inc
add
lock
mov
dec
sbb
push
xlat
push
sbb
sub
jmp
sbb
aad
mov
add
or
jecxz
cwtl
mov
cmp
jne
bound
sbb
pop
xchg
mov
sti
pop
or
test
cmp
mov
mov
push
xchg
or
fistpl
adc
adc
or
xchg
scas
mov
shll
xor
jmp
mov
mov
jo
test
outsl
jle
inc
into
mov
push
jb
mov
dec
and
popf
push
or
jmp
jnp
ret
cmp
mov
aaa
cltd
mov
and
mov
es
add
inc
dec
clc
enter
sbb
jae
ss
mov
push
icebp
pop
mov
out
push
push
sbb
pushf
leave
outsl
arpl
popf
lea
xchg
in
call
mov
fdivrl
cltd
adc
rcrl
les
outsb
lret
lods
dec
pop
popf
mov
mov
ss
adc
imul
pushf
imul
shrb
icebp
dec
mov
shll
loop
cmc
inc
mov
sub
sahf
std
aam
movsb
jg
clc
call
push
inc
lahf
fwait
push
movsb
mov
push
sub
mov
xchg
jno
jnp
jmp
scas
inc
iret
add
loop
imul
in
mov
repz
movsl
ret
int
mov
dec
mov
pusha
or
sub
clc
sbb
pop
or
out
test
fldcw
sbb
dec
mov
shlb
fldcw
xchg
lret
ss
imul
imul
or
jmp
or
test
xchg
outsl
gs
aam
gs
dec
out
sbb
subb
or
or
pop
add
in
cmp
nop
lret
test
jae
std
loopne
mov
mov
stc
mov
and
jb
sti
push
sub
loop
out
mov
push
dec
fisubs
sti
fld
std
cmp
repz
movsl
push
xor
inc
dec
movsl
cld
push
icebp
dec
jns
test
stos
in
pop
shll
and
and
pop
sbb
std
pop
adc
pop
subl
popa
cmp
out
pop
mov
push
mov
xlat
pop
push
cmpsl
pop
mov
cmp
test
test
mov
xor
adc
adc
cwtl
xor
test
fbstp
insl
lahf
inc
insl
or
xchg
arpl
add
popa
push
inc
popf
jnp
push
jp
arpl
test
lods
xchg
lret
test
out
or
and
scas
sub
lret
roll
sbb
jp
andb
pop
pop
cltd
jle
out
scas
sub
push
mov
mov
xchg
pop
pop
pop
lret
mov
mull
push
sahf
movsl
test
sub
cmpsl
into
in
cmc
fdivs
inc
repnz
mov
dec
les
subl
sti
and
cmpsb
dec
sbb
fcoml
sub
outsb
cmc
add
mov
jno
stos
jo
cwtl
sub
cwtl
mov
sbbb
pushf
shrl
fimuls
lea
ret
jge
test
cmp
ret
bound
aas
aad
clc
cmp
mov
test
jbe
push
pop
mov
lret
xor
mov
nop
fwait
mov
inc
mov
paddusw
mov
shrl
mov
push
jge
test
cmp
pop
mov
add
adc
cmp
xor
jecxz
movsb
cmp
cmp
das
int3
xor
into
shl
lret
mov
jg
je
mov
pop
cmp
cmp
rcl
fcomps
xor
mov
pop
shrb
lods
scas
out
clc
loopne
lods
jl
xchg
sub
mov
les
clc
inc
adc
mov
add
hlt
mov
inc
push
inc
popa
sbbb
lods
imul
push
cmp
mov
ss
or
mov
outsl
jmp
pushf
call
mov
cmp
pop
jae
mov
pushl
push
sub
dec
adc
push
dec
push
push
ret
lds
cs
insl
lea
in
aaa
sub
mov
in
pop
leave
mov
jl
mov
scas
bound
ficoms
sbb
add
cmp
push
ss
stos
inc
pop
insb
repz
lret
divl
mov
sti
mov
or
sahf
push
idiv
jnp
fildl
jmp
push
int
adc
push
in
push
adc
jne
lahf
sbb
xchg
and
shll
pop
popl
scas
in
xchg
xchg
and
push
adc
fsubs
mov
push
xchg
faddl
movsl
sbb
push
out
pop
dec
mov
mov
testb
mov
jle
inc
fnstcw
jae
mov
and
mov
ficoms
mov
cmp
xor
into
lret
lret
ror
add
out
fstpt
or
scas
push
xchg
test
push
xchg
inc
sbb
mov
push
cld
push
addb
call
mov
mov
xchg
and
or
out
ds
pop
cmpsb
lcall
jae
add
jbe
xchg
pop
js
mov
push
or
std
jle
movsl
adc
adc
lea
mov
outsl
xchg
loopne
mov
arpl
adc
inc
fnstcw
data16
or
in
or
xchg
cmp
cwtl
aas
inc
outsb
lods
xchg
jo
adc
inc
sbb
in
ret
ffreep
and
xor
and
cld
les
mov
or
scas
stos
imul
dec
mov
hlt
jne
sti
mov
outsb
inc
pop
jo
jecxz
test
xchg
push
cmpsb
add
sbb
or
movb
push
jnp
xorb
outsb
cwtl
js
cmc
enter
mov
inc
pop
aas
inc
ja
cld
movsb
rcrl
movsb
xchg
andl
lss
int
sarb
cmp
fistpll
dec
push
out
or
lds
jns
int3
xor
data16
clc
xor
adc
fsts
adc
rclb
xchg
push
pop
jp
or
es
mov
mov
fs
arpl
xor
xchg
jg
pop
adc
bnd
imulb
fldt
push
inc
insl
repnz
int
push
mov
sahf
add
mov
jge
aaa
dec
sbb
jmp
js
jg
lcall
fidivs
mov
pop
cs
mov
inc
shrb
or
mov
inc
jno
sahf
xor
pop
data16
jge
nop
pop
sahf
mov
cmpsl
nop
daa
mov
icebp
cmp
mov
rcll
add
or
adc
or
xchg
push
outsb
testl
cmp
mov
or
shrb
cmpsb
dec
dec
mov
cmp
std
jnp
xor
test
call
scas
out
in
lret
inc
sbb
stc
dec
les
dec
adc
rorb
inc
cmp
pop
imul
lods
out
popa
cli
test
movsb
call
dec
movb
scas
pop
movsb
xchg
dec
ja
test
fsub
into
ja
mov
in
sbb
sbb
outsb
xchg
sub
jns
xor
sub
pop
mov
aaa
lods
arpl
dec
cld
ret
loopne
iret
sub
ljmp
pop
pop
xor
mov
pop
ret
in
push
ljmp
aas
sub
das
pop
inc
push
cmp
pop
mov
or
movsl
inc
sub
jp
seto
imul
push
cs
insl
movsl
lock
mov
repz
imul
mov
pop
fldcw
ret
cs
inc
push
jbe
pop
mov
push
fwait
lcall
bound
jp
xchg
jns
jle
push
sbb
mov
dec
lret
push
jb
lret
leave
jp
push
in
ljmp
sbb
mov
outsl
jmp
push
jge
clc
or
out
or
arpl
lock
add
cli
test
movzbl
stos
and
xchg
enter
or
xchg
fcomps
adc
inc
scas
lds
jne
mov
push
int
inc
mov
mov
sub
jg
out
mov
mov
popa
nop
pop
pop
imul
push
inc
sti
aas
inc
test
sub
sbb
mov
push
jb
pop
inc
push
mov
insb
int3
jno
aas
push
leavew
jns
lret
enter
ror
mov
inc
movsb
mov
shr
jno
push
push
mov
pop
loope
push
adc
xor
out
cmp
out
pushf
lcall
mov
cmpsl
orb
mov
xor
cmp
into
mov
add
mov
sbb
jecxz
rcll
mov
insl
test
mov
xor
daa
bnd
sbb
loope
inc
mov
push
mov
push
push
outsl
inc
sbb
mov
mov
adc
imul
les
in
mov
gs
stc
shrb
lods
mov
fwait
inc
mov
or
adc
daa
jno
sbb
imul
pop
outsl
rorl
pop
jge
mov
loop
xor
mov
pop
xchg
mov
int
dec
cmpsl
mov
test
sbb
xor
leave
cmp
mov
xchg
loop
lcall
ss
adc
jp
lods
inc
test
or
int3
ja
testb
adc
cmp
push
jb
ret
insl
xor
int3
xor
adc
data16
stc
roll
mov
jp
and
adc
lret
rcll
xor
adc
cmp
sub
add
jl
mov
sbb
inc
cmp
pop
lods
adc
dec
cmp
shlb
bound
xchg
mov
or
adc
mov
aas
stos
push
jmp
out
mov
insb
jp
cli
push
or
sub
cmp
pop
nop
and
add
add
loop
add
and
adc
ss
sahf
xor
jp
ret
mov
sub
jo
push
inc
aam
cmpsl
xchg
or
fs
or
test
scas
push
add
rolb
xchg
jmp
out
imul
fwait
jnp
test
ret
in
pusha
imulb
int3
add
subb
aam
jo
sti
or
xlat
add
into
sahf
jno
push
lods
jg
xor
pop
dec
imul
xchg
xor
pop
loop
outsl
adc
ds
in
sub
ss
jno
or
pop
repz
data16
mov
jbe
es
xchg
jae
push
dec
pop
movsl
jo
add
scas
or
out
popf
popa
out
push
sti
lods
cmp
scas
sub
xlat
popa
cmp
cmp
data16
xchg
arpl
jg
pusha
fwait
cmp
out
insb
aas
inc
pushf
mov
inc
cli
in
test
mov
test
into
and
sub
sub
ljmp
test
mov
mov
sbb
test
sub
adc
shrl
inc
mov
sahf
es
or
je
sub
ja
loop
sbb
popf
mov
add
xchg
mov
xchg
rcrl
pop
jb
pop
fsubs
xchg
movb
xchg
fdiv
inc
ficoml
mov
pop
fwait
push
ret
repz
push
pop
jno
nop
test
stos
push
jg
testl
aam
add
xor
xchg
pop
cmp
hlt
lea
push
js
pop
in
xchg
dec
into
rcll
jo
xor
push
mov
pop
rcl
pop
mov
dec
inc
add
fwait
push
out
inc
jb
sbb
push
jnp
or
mov
leave
and
out
cmp
mov
scas
test
pusha
mov
loopne
or
and
xlat
lahf
jns
xchg
or
push
xor
pop
add
mov
adc
xor
adc
test
addr16
repnz
adcb
test
pop
mov
cmovl
aaa
xchg
sahf
xor
mov
std
in
lahf
and
movsl
pop
xor
cmpsl
stos
inc
mov
orb
cmp
or
sbb
cmp
insb
mov
fldcw
add
and
push
sub
jnp
enter
outsl
aas
aam
test
iret
or
jle
push
add
inc
rcr
or
pushf
out
loope
in
xchg
pop
xor
pop
jmp
lds
pop
cmp
jae
cmp
xor
cmpsl
mov
in
mov
icebp
push
inc
push
cmpsl
int3
or
pop
push
mov
push
negl
mov
shlb
test
adc
pop
out
rorb
push
and
and
loopne
jae
dec
pop
insl
xchg
lods
aaa
vunpckhps
add
mov
lock
push
xchg
les
mov
insl
in
mov
dec
sbb
mov
sbb
push
dec
push
jae
nop
dec
pop
fcompl
xor
add
mov
popf
xorb
outsl
rcrb
imul
cmp
mov
and
cmc
adc
iret
cmp
push
mov
mov
mov
add
cmp
jne
ret
out
sbbl
cmpsb
jnp
dec
xchg
mov
leave
or
fwait
and
pusha
xor
jns
cmp
decl
cmp
adc
out
pop
idiv
add
mov
inc
and
cli
add
popa
pop
mov
inc
mov
cltd
cld
push
pop
pop
cmp
jbe
notl
in
mov
inc
push
pop
leave
hlt
mov
into
std
mov
in
into
cmp
shrd
jbe
cmp
pop
adc
leave
ret
jle
mov
es
lods
pop
jnp
cmpsb
cmc
push
mov
mov
jge
push
hlt
push
pop
adc
or
fs
loope
pop
pop
fs
push
int3
push
or
xchg
adc
or
stc
andb
fwait
es
lods
adc
xchg
xor
in
out
popa
andl
mov
into
and
xor
int
scas
fstl
pop
pop
movsl
xchg
mov
int
dec
insl
jecxz
add
xchg
adc
dec
popa
lock
cwtl
jo
clc
add
pop
push
jle
ror
jno
jg
sub
jecxz
push
loop
loope
lea
mov
add
and
loopne
les
sub
inc
push
les
mov
lret
and
popa
cmpsl
pop
xchg
shll
jecxz
adc
ror
add
in
push
cmpsl
or
popf
stos
mov
popa
loope
push
lahf
lret
leave
and
jge
adc
dec
inc
mov
fadds
dec
out
mov
cmp
add
out
in
into
test
mov
push
fldl
push
subb
dec
popf
cmp
push
xchg
lcall
rclb
es
mov
mov
xchg
mov
int
addr16
fisubl
repz
arpl
mov
adc
fucomp
push
jnp
pop
pusha
mov
fwait
mov
fwait
inc
jae
rclb
call
jo
push
pop
das
iret
jmp
mov
or
clc
popa
inc
push
pop
mov
and
subb
ret
imul
dec
movsb
mov
lods
lods
and
fiadds
cmpsl
mov
nop
or
xchg
adc
pop
fisttpl
mov
adc
mov
or
add
cltd
in
fst
shll
jg
iret
inc
dec
shlb
fxch
push
sbb
sub
scas
sbb
or
into
lea
dec
mov
or
aad
call
hlt
and
jle
xchg
xchg
enter
push
or
fwait
xchg
xlat
stos
sub
jle
lret
fcomp
sahf
fmull
push
cltd
pop
jne
xor
sbb
sbb
jnp
jmp
frstor
sahf
movsl
dec
lds
aaa
ret
sahf
clc
std
sbb
sbb
sbb
inc
cmpsl
iret
call
xchg
lea
pop
push
cs
arpl
fsts
adc
add
outsb
loopne
into
dec
jne
mov
mov
popl
or
adc
cmpsb
dec
push
push
mov
outsl
out
ds
push
adc
or
adc
ss
xchg
cmc
sub
addb
imul
mov
ds
or
ljmp
push
lcall
mov
enter
xor
xor
ret
subl
pop
popf
xchg
loope
imul
xchg
loopne
cli
jns
sbb
jne
inc
cmc
mov
inc
and
cmp
adc
mov
into
into
out
aad
push
test
mov
test
mov
insb
xchg
movsb
lahf
jmp
mov
xchg
add
shl
not
pop
lcall
fdivr
mov
movsb
mov
int3
sarb
mov
xchg
verr
push
iret
push
pop
xor
mov
repnz
cmp
leave
fcoml
adc
mov
ror
push
loopne
add
test
ret
pop
mov
and
call
pushf
lcall
xor
push
push
rolb
inc
pop
push
push
jno
or
push
jne
sub
jle
inc
stos
mov
mov
xor
mov
fxch
and
xor
and
xor
mov
mov
pop
xchg
xchg
aaa
mov
jne
and
push
in
jmp
xor
ret
mov
jl
or
sub
sarl
push
inc
add
dec
add
sub
push
enter
fistpl
dec
mov
or
mov
sub
int
nop
test
leave
cltd
rcl
sub
sahf
mov
cmpsl
out
mov
xor
scas
hlt
movsb
inc
jnp
aam
in
cmpsl
inc
jb
cmp
loop
sub
in
inc
xchg
aam
lea
push
call
xlat
icebp
dec
repz
ja
xchg
mov
add
xor
in
into
lock
dec
and
fists
xchg
jge
shrb
mov
sbb
push
loopne
out
xlat
outsb
aad
xor
jmp
loop
pop
fidivl
mov
loope
movsb
test
xor
fcomp
jne
nop
lods
xchg
xchg
mov
ss
cmpsb
arpl
jp
jno
xchg
push
movsb
lds
push
add
es
pop
mov
mov
std
loop
xchg
mov
ljmp
rcr
push
pop
cmp
push
popw
mov
fs
fs
sahf
or
dec
sub
or
adc
pusha
pop
adc
mov
sub
hlt
addb
outsl
lret
dec
mov
cmp
pop
sahf
inc
jb
js
xchg
pop
adc
mov
stos
dec
jge
fwait
rcrl
data16
stos
xor
jo
push
add
in
rorl
cmpsb
test
jbe
sub
pop
mov
pop
je
pop
adc
imul
inc
jbe
mov
jbe
in
incl
jp
int3
xchg
scas
or
inc
sti
push
call
mov
mov
add
jge
mov
mov
sub
fsubrl
mov
mov
cmp
popf
in
fcmovb
mov
add
jae
xchg
stos
inc
test
int3
xchg
lock
mov
loopne
mov
repz
adc
add
fdivr
or
pop
xchg
or
xor
loopne
aam
push
add
sub
fdivl
roll
stos
adc
loope
adc
sarl
cmc
xor
pop
or
inc
jp
sub
rorl
rolb
popf
fcmove
cmpsl
testl
jns
incb
inc
or
xchg
lcall
jbe
cwtl
cmp
cwtl
xchg
jbe,pn
es
ss
push
fistpl
inc
inc
shll
add
ret
sub
jo
xor
inc
add
pop
push
stos
push
push
ficoms
outsb
repz
pusha
dec
jmp
inc
inc
pinsrw
dec
pop
dec
push
add
out
jmp
or
popf
cltd
mov
pminsw
subl
push
jbe
adc
ret
sbb
push
scas
cltd
sub
adc
cmpsl
mov
cmc
and
add
popa
sub
ss
cmp
sbb
jns
mov
ss
notl
ljmp
mov
cmp
addr16
popa
outsl
ret
and
test
sbb
sti
push
out
fwait
sbb
imul
pop
inc
popa
jmp
dec
dec
xchg
mov
insl
add
jmp
les
inc
outsb
mov
mov
test
and
cmp
lret
test
outsl
cmovae
mov
adc
adc
sbb
add
add
jbe
sub
fimuls
sbb
clc
pop
pop
aaa
or
push
popa
icebp
lds
jo
imul
rolb
aas
int
add
addl
scas
outsl
enter
and
xchg
cmp
shll
imul
and
cmp
jns
test
jecxz
cs
pop
fsubrp
mov
inc
pop
mov
dec
cltd
lret
add
je
sub
in
sbb
mov
int3
or
and
out
icebp
adc
test
lods
in
sub
xchg
push
lret
or
mov
gs
fidivl
lret
xchg
xchg
jne
mov
pop
pop
and
test
arpl
flds
cmp
mov
sub
test
out
ljmp
cvtps2pd
mov
xor
popf
mov
out
je
int3
sub
movsl
mov
daa
pop
lock
lods
das
xor
xchg
xchg
mov
sbb
pop
ss
xchg
and
sbb
cmp
pop
mov
mov
inc
fdivrs
rep
adc
mov
pushf
mov
jp
xchg
jo
out
mov
pop
fidivl
dec
fs
sbb
popa
mov
push
mov
outsb
push
clc
int
push
shll
and
mov
sahf
push
sub
test
cmp
adc
or
leave
fwait
cli
jae
sbb
and
push
sbbb
jb
out
and
xchg
mov
enter
mov
add
adc
mov
das
sub
mov
mov
ret
push
popa
push
in
pop
outsb
inc
lods
popf
xor
and
insl
push
loop
out
and
mov
int
and
xor
gs
xchg
popa
cmp
pop
mov
push
ror
rolb
andl
sbb
mov
shlb
pop
fdivp
movsb
clc
lret
rolb
repz
push
loope
push
lds
cli
xchg
add
jmp
adc
notl
ficoms
loop
ljmp
std
add
in
xor
popa
loop
icebp
xlat
jnp
mov
mov
dec
nop
push
and
pop
push
inc
xor
cmp
lret
push
pop
xor
inc
shrb
sahf
outsl
jb
leave
push
shll
mov
loope
push
jae
pop
loop
in
mov
ja
cmpsb
daa
inc
out
loop
popf
xchg
sbb
push
and
push
mov
iret
mov
xchg
adc
push
add
int3
cwtl
in
jne
sub
lds
fadds
inc
jb
outsb
pop
pop
dec
cmpsb
pop
repnz
dec
mov
push
lock
dec
bndstx
mov
in
pop
cmpsb
lea
std
cmc
pop
add
pop
loopne
cmc
xor
inc
dec
fnsave
mov
jnp
popf
pop
aam
out
fwait
push
fs
push
push
mov
les
lock
pop
sub
mov
and
push
push
fs
inc
mov
mov
daa
mov
mov
mov
push
insl
bnd
jge
lods
cmp
or
fdiv
dec
mov
dec
pop
dec
or
jle
and
loope
mov
gs
push
mov
rcll
xchg
fidivl
aam
stc
adc
lea
inc
adc
or
push
cmp
push
cmp
and
fxch
lods
mov
mov
pop
lret
xchg
pop
cld
inc
inc
out
jbe
test
out
push
jnp
inc
ja
dec
or
xorl
aas
into
inc
arpl
stos
jp
xor
and
xchg
std
loope
jmp
sbb
movsb
out
mov
pop
sbb
push
mov
movsb
sbb
xchg
scas
or
shl
push
pop
adc
sti
xor
push
stc
scas
jne
xor
add
in
mov
idiv
sbb
stos
cmp
jb
stos
mov
hlt
pop
mov
out
ret
jge
roll
ja
test
push
dec
fnstenv
dec
call
and
mov
dec
ficomps
out
aad
xor
cld
jl
into
aaa
sub
pop
jg
ret
test
add
test
mov
sbb
cmpsb
xlat
sbb
daa
sub
push
test
jno
inc
jb
aas
cmp
mov
jbe
dec
mov
insb
push
aaa
dec
sub
rolb
sbb
and
pop
lahf
popf
adc
and
int
sub
leave
mov
mov
ja
sub
sbb
addl
mov
clc
add
bts
push
sti
popa
dec
fstps
fmul
clc
xlat
xchg
mov
xor
inc
frstor
nop
outsb
sub
push
jbe
outsb
nop
adc
andl
jmp
or
add
adc
jg
clc
stos
es
jnp
push
hlt
cmpsb
sub
hlt
cmpl
cld
jl
push
xchg
cld
xlat
push
sub
ds
sub
cltd
adc
xchg
fs
pop
jg
push
pop
loop
sub
inc
or
sbb
sbb
cmpsb
mov
data16
pop
andb
pop
into
in
shlb
dec
fstps
test
iret
fwait
add
inc
inc
add
ljmp
mov
andb
cli
shrb
mov
cmp
xchg
addb
sbb
xchg
dec
test
imul
lea
rcll
and
in
jle
decb
cmpsl
ret
popf
iret
sti
inc
sbb
jnp
test
cmc
arpl
sub
cmp
out
imul
xor
lret
rorb
aas
push
adc
enter
dec
fcomps
in
mov
mov
ss
inc
add
pop
pushf
xchg
pavgb
data16
inc
inc
fisubrl
sub
js
inc
and
push
push
sbb
divb
stc
inc
loope
fistpl
push
inc
dec
iret
out
lea
mov
ror
sub
scas
sub
mov
mov
fxch
je
fs
add
jnp
cmpsl
je
out
std
loope
in
mov
sbb
mov
data16
std
test
xchg
lock
jl
dec
xor
mov
pop
mul
ficoms
push
mov
fwait
mov
inc
or
stc
daa
or
js
rol
and
mov
mov
sbb
jae
xchg
sub
outsb
loopne
xor
mov
cld
pop
sbbb
pop
mov
jl
cltd
lret
fsubrl
stc
sub
mov
or
inc
loopne
sti
out
adc
mov
gs
jb
xor
jno
mov
xor
dec
fimull
test
xchg
popf
jl
xchg
sub
push
outsl
adc
mov
cmp
loopne
and
aad
cmp
out
shl
in
adc
xchg
into
cwtl
mov
and
nop
mov
add
aas
fs
inc
sub
loope
push
movsb
rcrb
insl
xor
add
add
outsl
sub
sub
outsl
fldt
ljmp
add
scas
into
mov
mov
mov
idivb
sarb
jbe
data16
dec
or
dec
cmp
repz
push
or
rolb
popf
jle
aam
xlat
mov
mov
outsb
cmpsb
cmp
mov
mov
iret
and
pop
add
mov
cmpsl
cmc
jae
sbbl
jle
jp
pop
sarl
test
mov
fwait
div
mov
bound
xchg
fiaddl
mov
mov
adc
add
in
dec
sbb
cmpsl
iret
and
inc
adc
std
mov
vcvtss2sd
cmp
in
rcl
test
sub
mov
fdivrs
ret
or
pop
and
lret
movsl
or
add
cmp
in
lahf
cmpsb
and
icebp
fsubl
cmp
add
sarl
stc
loop
sbbb
cld
loope
xor
sub
pop
mov
push
out
mov
jg
mov
test
adc
rorl
call
xor
clc
iret
jge
pop
and
sarb
stc
mov
shl
pop
int
aad
jmp
movsl
push
or
ds
xlat
mov
push
lock
mov
outsl
faddl
test
inc
shr
mov
cmc
add
pop
or
lea
jp
ja
jle,pt
cmpsl
add
decl
imul
stos
or
in
repnz
jl
shll
dec
sub
push
inc
daa
sti
fiadds
cwtl
out
pop
addr16
and
mov
push
sub
aas
or
test
mov
inc
scas
jno
cmpb
xor
mov
out
jp
in
nop
mov
cmp
dec
sub
sbb
aas
roll
or
shrl
adc
stc
push
pop
mov
inc
mov
or
push
aam
lea
mov
rclb
lcall
fidivs
sub
dec
imul
loopne
gs
xchg
or
mov
psllq
fsubrp
cmp
pop
cmp
xchg
mov
insb
xchg
ds
and
outsl
loopne
outsb
int3
dec
aad
pop
cmc
inc
loopne
push
cmpsb
ss
pop
push
push
cmp
pop
add
imul
push
pop
stos
xor
ret
inc
add
jne
outsl
xor
adc
and
dec
cli
cltd
in
inc
test
fwait
pop
outsb
adc
inc
sbb
xchg
push
dec
push
ja
lret
xchg
dec
xor
loope
inc
cs
loope
les
push
and
sbb
dec
mov
mov
pop
outsl
les
cmp
push
mov
inc
and
out
jge
pop
dec
sub
ljmp
push
push
pop
repz
pop
push
popf
dec
rcr
movsb
mov
js
lcall
imul
pop
add
push
and
popf
lods
pop
or
fcompl
inc
test
push
inc
or
jo
mov
data16
imul
xor
sub
push
inc
imulb
fwait
push
subl
push
mov
loop
mov
cli
xchg
lods
imul
sbb
repnz
out
adc
mov
inc
fcomi
mov
and
pushf
stc
jmp
scas
mov
xchg
dec
mov
xor
pop
or
imul
popa
ficoml
fistl
pop
dec
mov
dec
xor
xchg
push
cltd
cmp
cmp
in
lahf
sbb
dec
ja
imulb
cmp
mov
push
test
and
shlb
jnp
mov
fs
cmp
xchg
xchg
dec
fisubl
mov
dec
cmp
and
sbb
cmc
mov
jp
cld
mov
cli
push
push
cwtl
ja
dec
mov
iret
adc
or
es
enter
imul
and
cmp
scas
and
in
dec
cmp
dec
outsb
adc
sbb
mov
mov
push
call
pushf
pop
inc
push
xchg
xchg
ss
fs
pusha
pop
inc
mov
inc
loop
sub
test
inc
lea
addr16
rorl
cmp
or
lock
scas
adc
jle
pop
loope
dec
mov
loop
pusha
xchg
ljmp
push
or
pop
push
out
jae
adc
ljmp
and
adc
out
sub
iret
imul
cmpsl
add
clc
daa
mov
shrl
push
iret
pop
imul
pop
mov
subb
cmp
mov
cmp
out
jns
sarl
js
adc
lods
aam
movsl
mov
jg
and
push
cltd
and
out
and
sti
mov
insl
jno
in
pop
inc
dec
fcos
inc
repz
or
scas
in
mov
xlat
loop
insb
cmp
push
test
hlt
sahf
cmp
insb
imul
test
pop
or
sbb
rolw
cmp
push
mov
xchg
or
dec
sbb
and
fistpll
or
ret
dec
dec
test
fsubl
mov
dec
mov
mov
push
mov
and
pop
cmc
das
stos
iret
adc
popa
sbb
pop
inc
pop
mov
push
cmp
sbb
bound
push
gs
jg
fistpll
test
jge
bound
xor
rorl
and
fbstp
xchg
mov
or
stos
xchg
cmp
sub
inc
inc
mov
cmpsb
sti
sub
push
push
inc
mov
loop
cmc
cmpsb
xor
and
scas
xchg
and
daa
sbb
fistps
pop
das
les
pop
cmp
mov
mov
in
xor
xor
jns
xchg
cmc
ja
sub
push
mov
dec
adc
in
pop
pop
push
push
cld
call
dec
rcrb
pop
jg
and
push
imul
mov
stos
rorl
sub
loop
lahf
stos
daa
mov
in
sbb
xbegin
mov
xor
imulb
mov
add
bound
xor
test
addr16
test
dec
ljmp
or
call
xchg
sti
shrl
adc
mov
adc
cwtl
or
xchg
inc
rolb
dec
shrl
stos
mov
or
dec
mov
mov
inc
pcmpgtd
lods
xchg
or
jae
mov
add
pop
fmull
sub
jp
xor
loope
sub
sbb
bound
mov
jne,pn
lret
xchg
idivb
test
aad
mov
xor
inc
mov
xor
sbb
stos
xchg
ja
test
popa
scas
jg
inc
mov
aas
fstps
ss
nop
dec
dec
inc
shll
ljmp
das
jae
xchg
into
sarl
stos
aas
cmpb
test
xorw
add
cmc
xchg
lret
dec
jne
inc
mov
in
pop
out
mov
in
mov
sbb
fwait
xor
lods
movsl
and
dec
fildll
pop
iret
lahf
cmp
lods
fisubs
gs
out
and
cmp
inc
mov
sahf
and
inc
jb
aad
imul
ficompl
int3
aam
cmp
loop
iret
movb
icebp
imul
xchg
pop
sbb
test
add
repz
cmp
jp
daa
jmp
mov
or
icebp
and
sbb
dec
ljmp
xchg
mov
es
mov
or
mov
scas
xlat
and
inc
mov
push
lret
push
fs
fimull
xor
xor
sbb
and
ret
sbb
das
shll
mov
out
xlat
imul
xchg
iret
adc
sarb
hlt
xlat
out
adc
xor
push
fsubrs
and
call
out
jns
mulb
push
call
lock
movsl
into
cmp
push
aad
cs
mov
jno
inc
jno
jp
test
xor
dec
pop
hlt
or
enter
adc
sbb
aad
xor
ret
popa
pop
add
cmpsl
push
sbb
repnz
jge
cld
jne
jno
imul
inc
imul
cmp
fsts
sub
cmp
movd
lahf
or
push
ja
aad
sahf
movsl
cmpsl
adc
aas
mov
push
xor
mov
xchg
test
test
dec
mov
call
into
repnz
scas
pusha
lds
pop
add
inc
pusha
xchg
sti
push
in
cltd
xchg
enter
add
xchg
leave
or
stos
jge
mov
seta
rcrb
mov
jbe
xor
jns
pushf
fimull
repnz
aaa
repz
mov
push
sbb
gs
push
dec
aas
mov
test
lods
adc
ja
adc
jl
hlt
test
inc
sub
out
das
add
call
out
xor
inc
aas
in
jno
lds
mov
retw
cmp
daa
call
mov
and
inc
sbb
sub
push
and
cltd
lea
fwait
shrl
dec
add
or
scas
shlb
push
pop
jle
mov
adc
adc
movsl
and
and
dec
mov
and
pop
mov
fsubl
ret
pop
dec
pop
outsb
test
or
lds
sub
add
xor
dec
jg
cmpl
and
add
fs
and
pop
mov
loopne
mov
jmp
cmp
pushf
sti
sub
pop
sbb
inc
movsb
push
aad
jns
cmpsl
ret
outsb
cmpsb
sbb
rcr
lea
jno
pop
jge
xchg
fadds
pop
je
fisubrl
pop
popf
lahf
jmp
clc
dec
in
subl
push
lea
popa
lods
xchg
int3
fstp
and
pop
or
lods
cltd
inc
call
add
xchg
ja
cmp
loop
add
mov
mov
ret
jl
movsb
iret
push
xor
push
adcb
jne
cld
xchg
mov
nop
in
push
fiaddl
addb
add
les
rcrl
scas
xchg
jo
dec
xorb
dec
rolb
mov
mov
jecxz
xchg
andb
lea
fwait
out
jae
jno
sub
flds
mov
roll
xchg
push
push
lds
fnstenv
stos
popf
mov
lea
pop
jmp
ret
pop
test
es
js
movsb
add
data16
in
nop
movsb
lcall
mov
negl
dec
adc
cmp
icebp
inc
not
frstor
les
loop
adc
sbb
xor
into
cltd
or
lahf
data16
cltd
ds
test
jp
cmc
sbb
es
fisubs
push
dec
cmpsb
test
cmpl
xchg
cmc
js
xor
scas
xchg
in
cld
rorb
cmc
adcb
mov
incl
xor
push
test
je
xor
sub
sub
ret
cmp
jo
popl
push
inc
inc
in
cmp
scas
sub
jno
clc
lcall
mov
pop
jnp
sbb
clc
mov
in
cmpsl
loop
push
adc
or
xor
lock
xchg
bound
jbe
jmp
lahf
dec
aam
loope
cmp
push
lock
xchg
cld
and
and
int
adc
bound
addr16
xlat
mov
pop
mul
mov
mov
mov
stos
inc
xchg
je
lds
jmp
lcall
filds
cmp
and
push
test
loopne
jnp
scas
push
int
imul
fmull
mov
cmpsl
cmp
shl
jg
push
cmp
and
outsl
ret
inc
les
sbb
mov
pop
lret
imul
sbb
test
xor
cmpsb
mov
add
mov
push
insl
and
out
sub
aad
push
jle
sbbb
fs
xor
mov
cld
xor
adc
fnstenv
xorb
repnz
cwtl
push
pop
or
or
xchg
and
push
adc
mov
iret
push
testb
push
xor
repnz
xor
sub
push
xchg
loopne
push
sub
in
stos
scas
rcll
fistpl
xchg
lock
add
xor
lods
adc
mov
cmc
or
clc
stos
jmp
dec
xchg
test
ret
jmp
stos
mov
push
mov
hlt
test
jns
and
fdivrp
fisubrs
push
cmpsb
mov
sahf
in
jno
inc
cmpsl
jp
shl
and
popf
adc
lock
inc
ljmp
jmp
shl
jl
or
add
stc
shrl
stc
insl
xchg
loopne
fisttpll
in
repnz
pop
es
xrelease
cmp
popf
cmp
adc
out
pushf
in
dec
push
aam
or
fmull
and
out
dec
mov
pop
stos
xchg
mov
sbb
repz
es
fwait
add
rcll
push
fists
mov
jnp
jne
mov
mov
das
mov
shlb
pop
mov
movsl
daa
leave
rclb
mov
mov
sub
rorb
test
jbe
cmp
adc
aad
adc
negb
inc
adc
shr
mov
xor
cmpsl
push
movsl
fld
subl
or
dec
push
fstl
push
add
mov
xor
ret
cmp
das
rcrb
arpl
or
xchg
adc
push
pop
push
icebp
pop
out
jp
mov
je
push
mov
jb
push
mov
sbb
pop
or
aaa
mov
mov
inc
shll
cld
adc
test
cmpsb
or
sahf
arpl
aas
and
pop
inc
inc
in
ss
cwtl
pop
add
inc
inc
je
stos
sub
or
movsb
andb
cmpsb
or
outsb
imul
mov
dec
xor
dec
cli
fcoms
int3
adc
jmp
push
fwait
enter
sbb
lds
inc
out
mov
dec
xor
adc
insb
leave
ret
sahf
mov
pushf
mull
cmp
add
loop
sbbl
mov
popf
das
repz
aam
sbb
push
pop
jg
inc
xchg
js
andl
adc
scas
loope
idivb
aad
pushf
nop
repnz
xor
mov
dec
pop
sbb
lock
jg
add
xor
mov
mov
rcll
push
and
mov
imul
dec
inc
jnp
jne
pop
jae
push
inc
cmp
xchg
dec
sti
stos
int3
mov
sbb
pop
mov
mov
stc
or
sub
stos
loop
loopne
test
arpl
insb
adc
pop
add
ds
icebp
cwtl
add
jns
push
adc
adcb
sarl
scas
and
fst
push
out
aaa
in
add
je
divb
loope
ret
sbb
adc
mull
ss
scas
mov
nop
stc
int
aad
sub
sbb
rorb
push
aas
lds
sub
xchg
mulb
xor
lods
cmp
pop
cli
into
cld
test
and
mov
les
push
pop
xchg
cmpsl
add
xchg
mov
mov
cmpsb
xchg
movsl
pop
xchg
into
stos
adc
and
xchg
ds
int
dec
or
mov
mov
add
out
scas
cmp
and
cli
data16
dec
sub
lock
cmp
call
enter
out
dec
mov
mov
xor
lret
cmp
pop
add
movsb
inc
jl
test
mov
gs
imul
fnstsw
jbe
mov
dec
jbe
pop
jle
movsl
ds
xchg
aam
jbe
js
jl
cld
push
mov
pop
sbb
push
mov
lret
push
xor
jns
imul
lock
or
cmp
hlt
sub
outsl
cwtl
out
jp
jge
cs
pop
loope
inc
add
sbbl
inc
inc
iret
and
cbtw
and
or
sbb
fadd
jle
int
test
cmp
add
xchg
popf
ja
mov
fldt
das
sub
test
mov
xchg
lock
and
sub
dec
sub
movsb
fidivs
repnz
ds
xor
in
pop
call
inc
cwtl
xor
mov
pop
popa
iret
mov
cli
lret
or
sbb
inc
movsl
xor
xchg
hlt
push
sahf
cmpsb
cwtl
bound
mov
push
sahf
cmpsl
xchg
jmp
rorl
mov
enter
jb
xor
test
pop
pop
xor
pop
sbb
xlat
shrl
mov
and
sub
xor
inc
das
sub
adc
xchg
pop
jns
mov
adc
mov
push
fsubrp
xchg
test
fisubs
aas
loopne
mov
arpl
nop
pop
jl
out
scas
fwait
lret
gs
push
ret
stc
es
scas
fistps
sarb
push
mov
arpl
pusha
adc
loopne
mov
cmp
inc
add
push
and
cmp
sbb
sarb
jecxz
mov
mov
ds
inc
imulb
push
sbb
inc
sarl
rolb
out
fisttps
pushf
inc
sbb
add
push
pop
xchg
jno
fs
jmp
dec
cld
jecxz
clc
pushf
loopne
push
insl
inc
push
cld
lds
dec
mov
andb
enter
mov
inc
in
enter
sub
cmp
fs
rorb
cmp
and
out
xor
adc
jl
mov
and
cwtl
mov
sub
out
int3
mov
inc
test
fisubrs
hlt
sbb
mov
mov
mov
push
ret
jo
movsb
jnp
lcall
sub
pop
clc
inc
jg
mov
out
jmp
mov
adc
pop
mov
mov
xor
repnz
icebp
mov
leave
push
test
lea
sbb
jbe
into
push
mov
push
fists
adc
pop
test
data16
sub
ds
push
push
or
rclb
outsb
repnz
insl
nop
test
clc
mov
outsb
rcr
in
or
ss
mull
and
mov
xchg
and
xor
fnstcw
jns
inc
sbb
inc
mov
add
cltd
push
inc
stc
fs
mov
xor
sub
or
outsl
test
and
dec
sub
icebp
or
xchg
jg
inc
enter
add
cld
sub
push
call
out
cmpsl
gs
sub
loope
adc
fs
mov
jl
shl
jnp
xchg
pusha
and
xchg
cmp
xor
add
insb
std
push
adc
aaa
test
cmp
ja
cmc
cmp
lea
cld
adc
or
hlt
pop
jne
sbb
addr16
imul
or
stos
aaa
ljmp
push
mov
int3
outsl
imul
cld
fdivl
jle
mov
sub
and
lods
movsl
mov
pop
sbb
aam
clc
pop
popa
out
xchg
aam
or
jb
in
push
push
ficomps
push
shll
adc
jb
bound
out
test
mov
lods
pop
mov
push
xor
jno
in
push
scas
pop
pop
into
out
mov
cmpsl
test
lods
push
dec
cmp
jo
bnd
push
icebp
pop
or
lods
mov
mov
int
sub
lret
cmpsb
add
inc
lea
jnp
cmc
adc
jmp
mov
test
ret
ficoml
push
popf
nop
es
mov
sahf
xor
pop
stc
or
in
in
cmp
xchg
add
outsl
test
xchg
jbe
int3
lds
call
mov
inc
add
fwait
mov
push
jmp
and
or
pop
fsub
inc
xor
lds
dec
dec
mov
and
jmp
inc
pop
mov
inc
insl
cmp
mov
sbb
ds
aad
shll
pop
repz
cmpsl
xchg
insb
and
push
lds
and
faddl
push
push
and
mov
mov
cli
imull
dec
xor
lret
jle
lock
lar
sub
dec
or
scas
jbe
pop
loope
aas
sub
sbb
iret
adc
insb
loope
xchg
clc
or
sbb
ror
shrl
es
sub
ret
lds
aam
das
jae
fsubs
inc
inc
inc
adc
push
mov
jb
cmp
dec
dec
or
mov
cmp
outsb
cmp
cli
hlt
icebp
outsl
fistps
test
call
jle
add
mov
xchg
stos
jg
lret
dec
enter
cmp
sub
outsl
mov
pop
cmp
mov
repz
jmp
push
push
add
scas
dec
loope
es
in
das
cmp
jle
sarb
mov
add
and
int
dec
incl
push
xor
cmp
mov
jg
inc
in
push
insb
sub
push
cmpsb
mov
fnsave
call
gs
cld
mov
xchg
or
xchg
inc
int
inc
std
pop
fldt
and
cld
xchg
jecxz
icebp
xchg
add
cmc
dec
add
pop
jle
fwait
push
sbb
js
dec
aas
cmp
aas
pop
jo
xor
adc
mov
aam
jl
dec
ficoml
repz
dec
push
dec
lods
fstpt
mov
push
cmc
mov
jb
xor
cmp
cmp
jns
lea
leave
sti
xchg
dec
pop
repz
xchg
jns
xchg
shrb
loop
je
ret
imul
cmp
inc
inc
cmc
dec
mov
mov
test
cmc
adc
je
imul
push
push
pushf
jb
add
cmpsb
call
mov
inc
sub
xor
out
cmc
or
and
mov
das
and
cmp
lret
aaa
lods
or
push
imul
incl
mov
mov
cltd
dec
inc
and
and
addl
stos
jnp
testb
lret
fnstenv
inc
subb
inc
xor
scas
mov
pop
out
iret
sub
scas
adc
arpl
rorb
jno
mov
sbb
out
gs
or
nop
daa
gs
sbb
imul
cmp
es
jb
xchg
stc
andb
cs
and
cmpsb
stc
cmc
jle
inc
sub
jo
and
pop
jg
addl
cli
xor
add
or
addl
ljmp
adc
es
addr16
inc
andb
jo
sbb
loop
pop
pop
pop
jl
aam
cmp
pop
shlb
jo
shll
pop
iret
xchg
nop
inc
cmp
sbb
inc
ljmp
mov
popl
pop
loopne
pop
push
test
lea
jmp
popa
mov
lods
aas
push
gs
xor
adc
test
imul
mov
movsb
je
adc
mov
or
out
mov
icebp
fmull
sahf
xchg
das
or
or
xor
popf
push
sahf
inc
bound
mov
cmp
imul
or
xchg
loop
hlt
push
and
jl
mov
lods
cwtl
pop
cmp
rcll
loopne
adc
mov
fadd
add
inc
xor
test
mov
sti
jecxz
in
rcrb
bound
adc
mov
lahf
cmpsl
xorb
rorl
fsub
pop
in
inc
inc
push
xchg
mov
xchg
cmp
mov
fisubl
dec
hlt
mov
mov
js
jnp
mov
loopne
pcmpeqb
cmpl
aas
mov
xor
xorl
mov
cmc
fsubr
mov
aas
mov
jmp
lods
fcmovnbe
inc
inc
in
adc
push
dec
fcmovnb
mov
dec
or
inc
insl
sbb
and
dec
mov
mov
and
nop
setg
pushf
popa
repnz
jb
xor
jae
fiaddl
sub
mov
stos
clc
pop
sub
sub
dec
mov
aad
dec
xor
ss
pop
push
test
push
aad
mov
sbb
cmp
mulb
inc
bound
mov
out
sarl
insl
mov
mov
dec
cwtl
jae
dec
loop
movsb
fcmovnu
adc
mov
adc
mov
xchg
rcrl
pop
incb
jb
xchg
lahf
out
jg
leave
aad
sub
cmp
cmc
xlat
sbb
mov
frstpm(287
insl
mov
add
push
mov
fcompl
xor
and
jb
and
fwait
xchg
leave
test
or
mov
adc
or
inc
ja
lds
push
lcall
fisubs
clc
lret
inc
inc
cmpsb
sub
imul
pop
pop
fsubr
sbb
pop
push
jno
call
lods
push
les
inc
out
nop
push
fcoms
cli
mov
scas
ficoms
push
idiv
shll
jb
mov
stc
cmpsb
mov
dec
movsl
jae
xor
gs
jb
xchg
push
ficoms
test
push
inc
repz
cmpsb
xchg
ficoms
outsl
ljmp
out
cld
dec
xor
scas
ds
inc
pop
fistpll
sbbl
mov
scas
mov
lcall
je
rcll
vpmaxub
lahf
lret
lahf
rol
sbb
mov
push
xchg
or
jmp
cmp
call
jnp
sub
jecxz
pop
rorb
mov
pop
cmp
adc
dec
mov
movsl
rolb
xor
dec
imul
fiaddl
adc
mulb
adc
mov
sbb
cmp
das
or
pop
outsl
daa
ret
nop
out
negb
push
outsb
sub
xchg
xchg
mov
adc
push
int3
out
imul
add
mov
jp
pop
out
xchg
jmp
stos
inc
stos
clc
shl
or
pop
mov
pop
scas
movb
cs
jne
jmp
sarb
mov
sbb
rcrb
sub
stc
popf
mov
fadd
nop
cmpsb
pushf
in
aad
ja
xor
cmp
sub
jns
inc
mov
je
mov
mov
sahf
dec
int
push
and
and
in
sub
or
jl
and
sbb
out
dec
int
push
inc
outsb
pop
mov
or
jp
ret
mov
faddl
mov
or
inc
popf
jmp
in
adcb
cwtl
adc
xchg
xor
in
nop
rep
adc
jg
mov
sbbb
aaa
lret
pop
and
jne
out
lea
mov
ljmp
cmp
inc
push
mov
cmp
push
dec
push
xor
add
pop
and
push
pop
mov
jns
cmp
fisubrl
adc
add
mov
das
sub
fisttpll
lods
shll
shrb
lea
test
cmp
pop
add
jecxz
fwait
mov
jle
jne
loope
push
gs
adc
das
rcl
sbb
sbb
cmp
lret
mov
lcall
xor
repz
xchg
roll
cmp
mov
dec
stc
rcrl
dec
push
int3
inc
je
pusha
adc
test
push
mov
lahf
les
push
pop
inc
push
push
and
std
dec
adc
ficoml
addr16
xor
pushl
pop
int
lock
jge
adc
pop
shl
inc
enter
push
xor
sub
mov
push
test
in
fwait
leave
lcall
mov
cmc
imul
cmc
mov
lret
jb
pop
lret
mov
into
scas
and
push
push
jg
mov
dec
adc
adc
pop
enter
xor
ficompl
out
jmp
outsl
test
out
sahf
sub
sahf
jb
lret
int
in
mov
xlat
in
cmp
les
imul
enter
or
xor
jne
sbb
push
stos
imul
xor
or
inc
loopne
fsub
ret
mov
clc
inc
dec
addb
mov
adc
imul
inc
jbe
mov
or
or
mov
ss
xchg
mov
mov
mov
sbb
or
xlat
aaa
push
add
push
test
icebp
scas
or
push
jecxz
out
mov
push
inc
ja
in
ds
enter
sbb
loope
xor
pop
sub
fcomp
pusha
scas
add
int
popf
in
shlb
rcll
mov
test
test
dec
scas
popa
xchg
movups
jbe
jecxz
xchg
mov
sbb
cwtl
push
jg
lahf
stos
cmp
xchg
lret
and
pop
jecxz
mov
nop
lahf
jae
jl
sbb
dec
repz
cmpsb
cmp
lcall
les
inc
repnz
and
mov
mov
mov
icebp
pusha
mov
jecxz
sti
or
adc
pop
xchg
mov
and
xchg
test
movsl
fistps
popf
xor
mov
dec
jle
and
dec
sbb
out
jge
sub
mov
mov
mov
and
addl
pusha
clc
mov
orl
jge
popf
fisubrs
push
movsl
xor
popa
std
inc
mov
push
inc
push
or
lret
xlat
add
inc
xchg
adc
cmp
mov
xchg
int3
xchg
adc
mov
cmpsb
jns
and
jb
sub
int3
pop
xchg
int3
ljmp
data16
pop
aaa
fwait
les
dec
pop
jecxz
add
je
inc
fs
mov
push
test
pop
adc
mov
xor
ss
addb
addb
pop
movsl
mov
mul
xchg
mov
and
daa
mov
pop
loope
ljmp
sub
test
repz
sub
ljmp
or
xchg
xchg
mov
xchg
jne
out
push
je
xor
lea
aaa
in
cmp
sub
sbb
and
out
or
mov
hlt
pop
and
and
jno
sub
imul
sarb
add
sti
gs
adc
jl
test
pop
add
or
movsl
out
pop
jl
shll
call
aas
aam
stos
mov
jno
or
cmp
dec
mov
cmp
jno
out
sub
adcl
or
imul
mov
pop
cmpsb
and
mov
push
int
sbb
mov
or
lcall
in
cli
out
jle
jno
sub
sbb
aaa
pushf
push
adc
adc
rorb
mov
fstp
jmp
dec
mov
push
fistps
or
repnz
pop
mov
sbb
sbb
mov
dec
cmpb
xor
sbb
cli
test
push
stos
add
adc
mov
jmp
dec
adc
jns
adc
or
pop
xor
adc
sub
dec
mov
pop
repnz
fwait
push
mov
dec
sbb
rorb
int
mov
xor
xchg
scas
dec
jno
insl
outsl
test
rcrl
and
jo
sbb
mov
xchg
fwait
push
mov
or
mov
nop
hlt
xchg
lret
jo
adc
mov
lcall
mov
cwtl
or
ret
repz
jb
push
mov
loopne
hlt
aad
clc
insl
arpl
testl
add
fdivrl
inc
je
dec
adcl
repz
or
icebp
dec
sbb
jae
cld
in
pop
imul
outsb
mov
popa
iret
lock
hlt
or
imul
jl
push
repnz
and
out
mov
rcrl
jmp
mov
mov
enter
jb
adc
mov
int
lds
jecxz
inc
and
scas
in
sub
sub
inc
cmc
or
shrb
popf
add
or
xchg
shlb
pusha
xor
cmp
push
daa
iret
jle
sbb
rolb
and
inc
popa
mov
mov
notb
lds
xor
and
dec
fcoml
jo
mov
std
xor
int3
fimull
jmp
cwtl
in
lods
pop
fwait
sbbb
cmp
sub
loop
cmp
stc
outsb
insb
lea
popf
loopne
pop
inc
inc
inc
jp
pushl
and
cmovbe
jge
sub
mov
test
fwait
pop
mov
shr
xchg
out
cmp
stos
inc
in
add
mov
mov
pop
adcb
mov
sahf
xchg
mov
pop
push
cmp
cmp
jg
cmp
jo
out
xchg
cmp
rcl
cltd
arpl
inc
xchg
push
dec
xchg
mov
sbb
loop
mov
fiaddl
ret
dec
dec
sub
out
loop
bound
mov
add
jnp
movsb
je
sbb
test
xor
lret
mov
insl
lock
inc
fadd
hlt
popa
rcl
mov
xorb
in
popf
dec
jg
push
sub
in
out
cltd
outsl
movsl
inc
add
jle
adc
sbb
gs
jg
movsb
hlt
fadds
shrb
aas
xor
mov
pop
lahf
xchg
lret
push
dec
ljmp
pop
movsl
or
xchg
and
stc
mov
out
dec
cmp
movsl
sbbl
insl
sub
stc
pop
pusha
fwait
bound
mov
stos
inc
int
iret
xchg
pusha
subl
pop
jae
out
int3
imul
mov
dec
jecxz
cmp
xlat
jg
lods
inc
cmc
aam
xchg
cltd
xchg
pop
dec
mov
mov
xor
repz
mov
xchg
mov
sbb
xor
inc
push
mov
mov
std
or
sbb
fs
fildl
arpl
insb
fnstsw
sub
add
das
mov
cmp
shlb
dec
fists
hlt
fsubrp
fcoms
and
xchg
dec
nop
lret
scas
ds
in
xlat
sarl
daa
repz
pushf
ficomps
pop
ja
add
xorb
or
lahf
jbe
xor
cld
pop
push
mov
fstpt
jae
mov
pop
sub
xor
adc
bound
imul
mov
cld
rcr
in
ljmp
insl
call
pop
jb
pop
push
xchg
mov
es
pop
aad
js
push
repz
jne
fdivs
leave
cmc
pop
pop
fmull
or
adc
pop
lds
ret
cmp
rclb
jnp
sbb
mov
xor
nop
cmc
mov
enter
jae
fistpll
xor
pusha
ror
popa
stos
ret
arpl
cld
adc
jno
pushf
movsl
in
rcll
adc
cltd
adc
cmp
sub
out
mov
mov
jl
fdivrp
loop
fcomps
cltd
mov
mov
and
inc
test
mov
pop
jae
mov
add
imul
call
fstl
xchg
inc
or
jge
inc
sahf
sti
mov
mov
call
repz
push
dec
lret
dec
pop
mov
pop
sti
sahf
cwtl
and
add
push
fcoml
xchg
ror
jg
jns
jno
sbb
orb
and
sub
mov
mulb
pop
in
popf
das
rorl
mov
adc
std
inc
sbb
or
stos
ret
imul
lret
lret
leave
inc
dec
and
jnp
mov
cmpsb
mov
sub
int3
mov
inc
std
cltd
shr
pusha
adc
pop
lea
mov
in
and
mov
push
popl
xorb
jl
out
idivb
mov
lea
jl
addr16
cmpsb
out
leave
mov
popa
push
mov
cld
push
pop
sub
pusha
pop
mov
cmp
cli
daa
lods
aaa
fdivs
in
pop
nop
dec
movsb
leave
std
in
lods
inc
addr16
call
insb
or
sub
push
dec
push
jmp
leave
dec
mov
mov
cmpsb
cmpsl
sbb
test
fwait
mov
out
ss
add
push
push
mov
lods
mov
test
cmp
push
js
movsb
mov
aaa
mov
idivb
cmp
lret
cli
dec
inc
mov
or
push
aaa
pushf
fcomps
inc
add
rcrl
mov
int3
out
mov
dec
cli
jno
fs
clc
rorl
lds
cld
inc
mov
inc
popf
addb
push
mov
jmp
inc
outsb
mov
push
push
xor
cmpsb
and
int3
imul
mov
inc
cmc
in
ficomps
ret
dec
subl
mov
enter
or
cmp
inc
add
lret
xchg
mov
sub
rorl
pop
fcmovnu
test
jge
dec
push
mov
or
mov
out
stos
push
pop
frstor
and
fsubl
xchg
dec
cmp
lds
rcr
idivb
and
jns
shl
xor
adc
addr16
push
or
inc
in
xor
jg
xor
cmp
cmp
in
push
pop
dec
movsb
sbb
pop
shlb
data16
mov
scas
cmp
adc
sub
jp
adc
xlat
subl
lcall
and
adc
sbb
mov
mov
xchg
andb
fildll
sbb
lods
mov
pop
les
popf
jg
popa
nop
mov
jae
jne
imul
and
inc
mov
push
test
idivb
out
mov
cmp
das
sub
mov
sbb
or
in
repz
add
cli
fstpt
jne
adc
data16
sbb
sub
mov
pop
xchg
mov
push
fwait
repz
pop
push
jae
dec
stos
sub
push
cmp
adc
fstpt
imul
sbb
jg
mov
and
das
mov
and
out
push
mov
outsb
cmp
dec
hlt
insl
xchg
insb
xor
xor
cs
iret
pop
into
jo
lcall
mov
in
jge
enter
out
jo
loopne
rcll
jo
sbb
jo
sahf
xorb
dec
fldl
leave
es
or
adc
lea
lcall
test
mov
rcll
aaa
push
pop
push
add
jecxz
popa
add
stos
enter
ret
imul
addr16
sbb
add
test
xor
pushf
xchg
arpl
in
cmc
jne
inc
pop
cltd
mov
push
cmp
sahf
xor
xchg
subl
pop
mov
shr
add
adc
imull
pop
aad
stos
cmp
mov
and
cmp
fstl
data16
std
jl
or
mov
shl
insb
stc
daa
jmp
stos
cld
add
and
ljmp
or
inc
push
or
add
dec
push
push
call
inc
cmc
inc
cmp
loop
test
aad
dec
dec
or
ja
sbb
jnp,pt
or
ja
xchg
rcl
add
cmp
jle
icebp
outsb
push
mov
jmp
int3
fisttpll
inc
cwtl
fs
jns
cwtl
jmp
jecxz
push
sarl
mov
xor
mov
pop
dec
mov
imul
shlb
or
inc
jb
sub
cltd
dec
lret
in
iret
mov
fs
mov
sbb
adc
cmp
out
fiaddl
cmp
fdivs
xchg
xor
cmp
sub
aam
mov
sbb
dec
cmpsb
fs
xchg
add
xor
mov
cmp
sub
mov
or
mov
addb
xlat
add
inc
es
ss
fstl
aas
adc
sbb
pushf
cmpsb
and
push
loope
dec
lea
sbb
lcall
inc
xchg
pop
adc
ret
xchg
popf
pop
rcrl
in
movsb
por
xor
fmuls
pop
enter
mov
and
push
mov
stc
mov
shrb
cmpsl
mov
fwait
cmpsl
push
fs
out
pusha
fldt
jmp
out
aad
sub
cs
sti
hlt
clc
rcl
fsubrl
jp
notl
xor
dec
movsl
dec
jne
popf
xchg
mov
lar
test
mov
mov
dec
jnp
mov
add
xchg
sar
addr16
sub
movsl
out
fsubrl
cmp
sub
daa
mov
cmpsl
add
repnz
mov
flds
mov
lret
inc
aas
out
ss
adc
test
xchg
aaa
scas
xchg
out
jecxz
je
repnz
inc
mov
dec
into
jmp
mov
in
int
cmpsb
filds
insb
cmpsb
mov
and
or
mov
test
xor
repz
and
out
or
inc
jmp
arpl
sub
cwtl
pushf
nop
cltd
sub
jbe
sub
mov
add
imul
push
mov
popf
push
xchg
dec
lods
mov
jo
xchg
aas
jmp
mov
subb
jge
push
insb
xor
in
pop
je
sbbl
cmpsl
out
ror
leave
push
and
jg
loope
push
enter
and
jo
sbb
aaa
push
bound
pop
jo
orl
lahf
pop
cmp
or
std
mov
pop
inc
adc
adc
and
push
out
or
sub
xchg
and
jg
fsts
or
in
in
lahf
mov
adc
mov
or
fs
sub
xchg
cmp
fdivrl
mov
iret
xlat
xchg
cmp
adc
test
jne
out
test
mov
or
int
or
ja
roll
sub
mov
orb
mov
xor
push
sahf
mov
pop
les
sub
out
push
pop
stos
nop
in
scas
or
dec
outsb
sbb
dec
pop
jnp
jg
mov
or
and
aad
xchg
test
mov
mov
scas
into
mov
int
sbb
sbb
test
hlt
sub
test
sub
adc
mov
outsl
dec
jl
mov
adc
mov
pop
mov
xchg
and
pushw
sarb
fstps
mov
sub
in
xchg
sbbl
cmp
cld
in
popa
enter
dec
outsl
xor
fs
add
loopne
pop
sti
jnp
into
xor
fcompl
push
mov
test
pop
jbe
imul
dec
inc
and
sub
sahf
mov
loop
inc
mov
lea
xor
negl
xor
dec
add
shlb
jns
sbb
sbb
shr
jnp
sub
adcl
mov
fsubrl
add
pusha
fs
xchg
xchg
mov
scas
or
in
outsb
ja
rclb
sahf
dec
push
add
cmc
mov
sub
popa
lret
scas
div
xchg
aas
sbb
push
inc
cwtl
adc
push
test
jecxz
cmc
push
cmc
leave
xlat
int3
nop
loope
mov
mov
lods
mov
and
xchg
enter
lret
push
mov
iret
xor
push
mov
mov
and
jecxz
sti
push
lock
inc
ret
ucomiss
in
out
aam
repnz
add
fbstp
mov
mov
push
xor
cltd
and
or
sub
andl
and
in
aad
jo
fcomp
decl
push
fs
ss
mov
adc
and
loop
hlt
xchg
add
pop
stos
fcmovb
dec
pushf
lods
fdivs
cwtl
gs
rorl
mov
jge
jmp
push
out
cli
adc
xor
imul
fs
call
inc
jno
cltd
imul
loopne
rcrb
aas
mov
shrl
arpl
imul
sahf
popf
add
inc
cmpsl
jg
scas
je
std
adc
xor
push
jne
imull
insl
aam
aaa
imul
stc
or
jnp
test
push
dec
pusha
sahf
mov
ljmp
aas
dec
jo
call
ljmp
pop
and
dec
out
inc
popa
dec
icebp
call
test
sbb
cltd
and
rcrl
sahf
ja
mov
loopne
xchg
arpl
push
mov
lret
or
stc
jne
out
cwtl
push
outsb
mov
repz
out
fidivrs
mov
mov
mov
jecxz
sub
mov
jp
mov
jp
sub
sub
jne
pop
imul
cmp
sub
pop
inc
int
repz
les
bound
push
and
imul
sahf
lahf
jmp
lret
sbb
xchg
mov
dec
cwtl
inc
test
push
divb
push
in
jb
xchg
stos
lods
push
addr16
mov
nop
push
xchg
mov
pop
mov
inc
into
arpl
xchg
add
xor
push
movsl
xchg
ljmp
mov
push
inc
mov
jo
fldl
popa
push
enter
testl
push
ss
push
in
rorl
mov
test
inc
or
pop
sub
adcb
movsb
test
mov
sarl
es
lods
cli
inc
pop
jle
fnsave
clc
dec
loopne
mov
sbb
dec
sub
push
adc
lods
testb
dec
mov
add
inc
mov
lret
lret
or
cmp
mov
push
xchg
out
aam
pop
fidivs
cmp
in
inc
mov
sbb
fisubl
sbb
xorb
xor
inc
lahf
test
scas
ret
nop
adc
loop
idivl
inc
push
int
in
mov
mov
mov
fsub
push
push
adc
punpckhbw
decl
add
add
adc
int3
push
and
inc
dec
test
mov
insb
push
jmp
ficomps
mov
jae
and
jle
inc
roll
cli
out
lret
int
sbb
pop
mov
cmp
push
stos
or
mov
popa
mov
rorb
into
fwait
popf
cmp
into
roll
jbe
insb
jmp
xor
in
pop
scas
in
adc
pusha
sti
and
sbb
loop
push
pop
sub
dec
sbb
fstp
pop
insl
cmp
xor
or
es
fbld
xor
loope
loope
push
ljmp
icebp
push
pop
mov
jae
popa
leave
fdivp
in
add
mov
xor
out
aas
das
scas
xor
dec
mov
pop
jb
adc
popa
xchg
inc
sbb
mov
aam
out
in
data16
daa
test
sbb
push
daa
cmp
flds
xchg
pop
sbb
out
repnz
aaa
fcompl
lcall
and
shl
xchg
xchg
mov
jl
lret
fists
mov
cmp
add
jl
dec
call
ds
mov
push
fwait
mov
insb
add
or
sbb
addr16
scas
hlt
push
and
jne
jge
stos
daa
aad
mov
jge
jge
pop
scas
aad
shrl
add
inc
mov
mov
mov
fstpl
sbb
iret
lds
sbb
pop
sahf
jecxz
xor
jne
cmp
sub
test
cmpsl
clc
mov
xchg
shrl
dec
iret
std
rolb
in
xchg
int
repz
les
cs
inc
xor
stos
nop
sahf
push
jae
pop
ss
lret
imul
popa
das
int
movsl
ja
das
and
cmpsb
inc
jmp
test
and
push
or
mov
push
call
pop
lea
or
bound
and
cmpsb
xchg
dec
add
add
das
add
clc
shlb
or
jns
jecxz
ja
aaa
mov
or
shlb
inc
fwait
enter
add
hlt
xchg
mov
push
lods
rcl
ja
mov
dec
jno
mov
cmp
cmp
sbb
stos
sbb
inc
bound
jge
shll
lret
inc
clc
insb
add
push
dec
outsl
sub
jae
je
pop
std
dec
xor
out
add
sbb
xchg
bound
js
hlt
popf
call
std
mov
add
dec
orb
cmp
xchg
add
inc
hlt
mov
orb
jmp
ljmp
icebp
pop
in
ja
rclb
dec
and
cmpsb
pop
in
adc
dec
dec
sbb
adc
lret
xor
gs
xchg
dec
inc
inc
outsl
sahf
sub
push
or
mov
add
jmp
iret
test
mov
aas
mov
cmp
jb
fnstenv
push
mov
lcall
cld
xchg
cmp
inc
movsl
cld
mov
pushf
aas
enter
jne
test
gs
aam
inc
push
or
mov
adc
jp
mov
cmp
es
add
repnz
push
das
inc
int
in
or
fldl
dec
gs
out
cmp
xor
out
inc
rcrb
in
pop
cltd
ret
js
pop
adc
aas
aas
and
xor
popa
daa
rcrb
mov
loope
push
cmp
lahf
cli
mov
push
or
pop
daa
out
lahf
adc
mov
daa
mov
cwtl
mov
sub
or
mov
int3
push
test
jg
add
dec
and
repnz
push
mov
jl
sbb
mov
push
or
and
mov
popa
push
into
mov
push
jle
scas
test
push
movsl
mov
subb
shlb
sahf
xor
xchg
xchg
les
push
push
lcall
sub
outsb
pop
and
mov
jecxz
mov
xlat
jno
mov
sub
sub
jmp
movhps
sub
insb
cltd
mov
mov
jle
test
out
dec
testl
sub
push
push
test
stos
mov
test
outsl
inc
mov
ret
mov
mov
mov
mov
jle
push
mov
pop
repnz
mov
enter
int3
mov
jae
loop
jecxz
dec
inc
cmovg
rcll
jne
push
je
inc
gs
fnstsw
jne
or
ljmp
imul
pop
jb
mov
add
and
add
adc
or
xor
pop
in
rcr
mov
aas
mov
mov
xlat
or
leave
adc
mov
jmp
or
inc
pop
cltd
mov
mov
mov
push
jno
cld
mov
adc
jno
mov
sti
and
mov
or
setns
ret
mov
mov
pop
mov
xor
xor
jecxz
dec
sbb
dec
jecxz
xchg
sbb
loope
xor
mulb
repnz
sbb
es
dec
jno
enter
sub
shlb
xor
ja
and
adc
push
scas
sub
and
push
movsb
sbb
xchg
pop
sub
adc
adc
jmp
int3
or
push
and
into
push
mov
mov
js
xor
fwait
popa
es
insb
rcl
add
pop
imul
mov
scas
pop
push
cs
xchg
cltd
fsubrs
sbbl
lods
fiadds
shr
add
popf
inc
gs
mov
ds
clc
pop
pop
and
mov
jnp
xor
push
mov
test
pop
rcrl
jg
mov
inc
jge
lcall
ret
dec
mov
mov
sub
stos
or
mov
cmp
fdivrl
mov
push
js
cmpsl
hlt
sbb
rorl
sbb
push
add
leave
xor
mov
mov
test
mov
or
js
or
pop
rorl
out
jbe
pop
add
cmpsl
cmp
ret
cmp
stos
sub
inc
ret
pop
jg
dec
or
lahf
jo
out
aaa
repnz
movsl
jp
sub
outsl
nop
mull
push
xor
loope
scas
and
out
inc
sub
adc
icebp
cmp
and
mov
stc
test
popf
in
adc
sub
pop
js
mov
aaa
rcll
adc
xchg
neg
jno
jl
cmc
aas
aas
dec
pusha
out
arpl
adc
fmull
mov
ss
movsb
clc
jl
test
lret
dec
mov
cmp
in
cmp
mov
push
sbb
cmp
pop
or
inc
sbb
imul
push
xchg
pop
repnz
jo
jb
sbb
xorl
and
mov
jbe
jmp
sub
lods
sbb
inc
call
loopne
push
mov
sub
fucom
adc
dec
mov
idivb
iret
stc
xor
lock
push
dec
std
jl
rcrl
jg
and
setle
cmpl
arpl
and
mov
sbb
insl
pop
outsb
adc
inc
lds
dec
sbb
cmpb
or
imul
loopne,pn
mov
fsubrl
movl
jbe
adc
rolb
xlat
shl
jl
mov
push
pop
std
call
shll
xchg
push
push
lds
push
fs
dec
sbb
add
xchg
enter
arpl
aas
cmpsb
js
sbb
pop
in
subb
cmc
jo
pop
and
cli
xor
dec
xchg
cmp
cwtl
push
leave
mov
inc
mov
add
std
cmp
or
inc
std
fwait
xchg
push
inc
jnp
daa
out
lock
mov
cmp
sub
jb
add
lret
mov
imul
bound
xchg
jo
jle
xchg
dec
pop
sub
and
xchg
aam
insb
popaw
pop
jo
and
cmp
into
inc
pop
lcall
sub
mov
cmp
xchg
lahf
repz
xchg
fisttps
je
loopne
push
mov
inc
mov
mov
jne
sarb
cmpsl
mov
fstp
xchg
inc
sub
xacquire
inc
sub
and
aas
movsb
jae
pop
notb
xchg
pop
inc
nop
jmp
pop
movsl
lea
loope
dec
push
rorl
push
add
loop
in
jne
sub
lahf
int
xlat
xchg
xchg
movsb
push
push
into
sbb
adc
push
enter
sbb
fcmove
dec
adc
mov
std
or
nop
test
in
or
sbb
pop
inc
sbb
out
int3
lea
jl
ja
mov
xlat
cmpsb
mov
mov
test
push
and
push
jmp
out
pop
cvtps2pi
out
dec
rol
push
pop
xchg
lds
add
loopne
jmp
lea
call
lods
lcall
sbb
rolb
mov
sbb
mov
mov
shr
xchg
add
cmp
hlt
mov
mov
and
test
cld
xor
sbb
or
push
inc
lock
fcmovnu
sbb
std
sbb
or
xorb
sbb
std
adc
lret
ficoml
dec
ss
int3
and
cmp
addb
cmpsl
jae
test
cmpsb
jns
mov
jg
mov
mov
popa
lret
adc
jbe
xor
pop
sub
dec
xchg
inc
fimull
push
addl
outsb
jns
out
out
fsubrs
and
pop
pop
movsl
mov
insb
xchg
orb
adc
xchg
xor
cmpxchg
pop
and
push
into
lcall
cmp
into
mov
enter
xchg
sbb
std
sbb
push
filds
inc
cli
mov
nop
adc
sub
test
xlat
lret
daa
gs
fildll
pop
imul
mov
sub
or
cbtw
fildll
sub
mov
repz
sub
jae
decl
and
xchg
pusha
and
sbb
pusha
in
jno
jae
or
cld
add
inc
or
rep
into
or
pop
pop
xor
add
fwait
xchg
repz
test
xchg
lock
in
cltd
insb
adc
out
push
imul
sub
sahf
ja
xchg
mov
fcoms
or
in
cmp
imul
dec
mov
aad
sbb
sbb
pop
or
and
add
fildll
and
add
icebp
sbb
jb
mov
in
popf
xchg
sbbl
loope
movsl
push
cmp
inc
inc
sub
and
fmulp
mov
adc
int3
imul
lret
lahf
ret
sub
jb
mov
xlat
mov
xor
outsl
mov
stc
mov
dec
push
mov
test
and
repnz
daa
sbb
daa
clc
inc
mov
jb
dec
dec
jg
lds
nop
sti
jbe
push
mov
call
dec
mov
cmp
adc
je
adc
sarl
mov
push
in
leave
mov
scas
inc
and
inc
pop
repnz
sbb
push
jbe
xchg
movsl
mov
xor
sbb
inc
aaa
fdivl
mov
mov
sub
insb
pop
pop
ljmp
arpl
nop
mov
or
push
shlb
cs
fisubs
fsubrl
mov
sbb
out
mov
mov
jnp
mov
mov
test
mov
inc
testb
or
push
dec
inc
mov
lret
ja
mov
nop
imul
lds
aaa
mov
scas
pop
lds
sub
pop
mov
sub
lea
fsubl
or
mov
fdivl
push
arpl
xchg
xor
mov
dec
pop
out
sahf
mov
fimull
test
lahf
mov
sub
nop
ja
xchg
orl
add
iret
cmp
mov
xchg
and
outsb
ja
rorb
les
fnstenv
int
and
clc
lock
std
jno
push
adc
dec
mov
mov
push
out
inc
xchg
into
jbe
push
inc
mov
fwait
icebp
inc
push
lock
fildl
pop
pop
mov
lret
push
scas
and
pop
lahf
inc
pusha
cmp
call
mov
pop
adc
test
jae
lcall
jbe
ds
lods
lret
pop
mov
push
stos
adc
ret
xchg
sbb
arpl
mov
dec
push
arpl
jae
push
xchg
test
mov
pop
orl
add
aad
outsb
jno
or
cmp
punpcklbw
fwait
dec
cwtl
ret
xor
and
in
ss
iret
xchg
inc
andl
in
inc
or
js
rclb
sbb
shlb
dec
cs
mov
adc
les
jp
fninit
push
clc
mov
jne
repz
lock
lret
cmp
mov
in
mov
arpl
jb
stos
gs
movsl
inc
cmpl
cmpsb
add
cmp
jl
outsl
dec
sub
xlat
les
insb
push
ja
arpl
leave
push
ds
jge
in
xor
mov
daa
adc
dec
xlat
sub
lahf
ret
mov
cwtl
stc
cmp
adc
mov
push
xchg
mov
sti
loop
pop
push
add
xor
ret
cmp
aas
xor
mov
into
mov
xlat
loop
out
lahf
jo
sbb
dec
fdivrs
mov
fldenv
xchg
sti
jae
mov
dec
jne,pt
cmp
iret
subb
loope
fwait
xchg
scas
call
jle
xchg
jp
jecxz
pop
mov
ret
ror
jmp
mov
aam
mov
mov
inc
sub
test
loop
mov
or
cmp
sub
test
aaa
xor
repz
jg
arpl
aaa
mov
out
shll
xchg
jo
movsl
sub
jno
bound
push
lods
add
push
cwtl
xor
mov
inc
add
inc
fcomps
outsb
sbbb
popl
dec
rcll
inc
push
std
mov
int
push
xchg
mov
add
pop
inc
pop
adc
xlat
sbb
insl
aam
push
jo
sbb
sbb
dec
xchg
aas
lahf
dec
mov
call
lock
xchg
lcall
mov
jl
jle
neg
test
sbb
es
out
in
repz
or
xchg
sbb
xchg
aad
cld
in
sbb
fnstenv
mov
xchg
cmp
fnsave
shl
test
aas
js
dec
inc
xor
ss
xchg
and
mov
jg
int3
test
rolb
mov
enter
adc
loop
xlat
outsl
shlb
mov
mov
hlt
cltd
out
mov
sub
or
jne
push
shll
lcall
fxch
lods
cmpl
js
sbb
pop
je
dec
pop
mov
inc
jns
hlt
jne
fstpl
aas
out
sub
jae
lahf
cmp
mov
lahf
adc
cmp
js
sbb
lret
leave
insl
adc
xlat
or
jg
mov
insb
lods
in
mov
pop
repnz
out
hlt
stos
push
dec
repz
jnp
mov
mov
lock
dec
xchg
jge
push
std
es
xchg
test
dec
test
add
bound
push
cltd
test
jp
leave
mov
ds
dec
daa
dec
cmp
fcompl
jo
movsb
jp
sbb
push
out
out
lock
adc
clc
outsb
xchg
lods
pop
ret
scas
test
sbb
inc
fdivr
xchg
push
pop
out
fcmovu
mov
fisubl
xor
or
es
mov
lahf
lret
push
les
xchg
inc
inc
testb
jb
es
xchg
xchg
sub
push
sbbl
aaa
jbe
daa
inc
fwait
fwait
sbb
inc
dec
add
push
clc
ret
xchg
add
pop
movsb
fcmovb
and
inc
fidivl
inc
push
imul
add
aas
xchg
jmp
jecxz
jge
and
xchg
add
mov
mov
shl
sti
mov
add
push
fcompl
jbe
vpmadcsswd
loop
dec
call
mov
sub
add
jge
scas
and
jns
int
lods
sbb
inc
sub
xchg
mov
xlat
xlat
ret
aad
pushf
cmp
icebp
enter
divb
fdiv
jge
addr16
in
test
add
dec
lret
jb
mov
push
outsb
mov
aad
daa
mov
repnz
dec
les
hlt
cmpsl
jo
gs
mov
push
mov
push
push
inc
cmc
daa
fdivrl
enter
cwtl
xlat
fisubrl
or
iret
leave
xchg
ficomps
std
gs
cwtl
pushf
push
bound
mov
jo
negb
outsl
les
push
xor
inc
or
and
xor
mov
jge
add
movsb
shll
pop
stos
dec
aaa
pop
adc
test
mov
jo
sbb
ss
adc
and
xchg
push
adc
rcll
sbb
test
sub
ffree
cmpsl
inc
mov
jns
das
adc
ja
mov
cmp
and
into
mov
xchg
je
xor
cmpsb
adc
xchg
and
shrl
leave
cmc
rcrb
push
mov
mov
lahf
andb
inc
jp
nop
pop
mov
xor
mov
cmpsb
cmp
fwait
shr
mov
push
clc
insl
mov
and
stos
rcl
out
push
inc
xor
bound
mov
out
inc
enter
xchg
inc
fld1
es
jl
pop
push
mov
movsb
push
mov
xor
movsb
lods
ljmp
pop
insl
test
imul
aaa
icebp
add
sbb
fcmovnb
ficomps
xor
mov
mov
dec
inc
mov
sub
inc
adc
mov
xchg
sub
repnz
jle
dec
xchg
sub
jg
sbb
clc
xchg
arpl
mov
aas
push
pop
xchg
pop
scas
data16
mov
lds
iret
push
mov
push
stos
shl
mov
cmp
adc
cmpb
inc
loope
pop
dec
push
aam
int
cmp
pop
xor
lahf
fwait
scas
test
xchg
push
movsl
xor
jecxz
sub
pop
popa
mov
mov
shrb
adc
in
out
leave
cmpsl
nop
xchg
roll
inc
ds
dec
ret
push
sbb
push
sbb
jae
mov
mov
insl
xchg
pop
ret
sub
outsb
icebp
and
scas
mov
ret
outsl
lahf
mov
fmull
pop
ljmp
pushf
xchg
and
stos
je
push
sahf
xchg
aad
xchg
jp
sub
repnz
sti
dec
sbb
dec
ret
push
xlat
and
or
scas
lret
les
jb
lret
jg
cltd
icebp
inc
push
cmp
adc
in
lods
sub
in
mov
mov
dec
sbb
push
sbb
aaa
lods
add
push
adc
pop
mov
fistpll
push
xor
lods
xchg
stos
scas
inc
fnstsw
cli
cli
and
jl
inc
mov
ret
sub
fs
jnp
dec
mov
std
outsl
insb
imul
mov
int
or
mov
inc
popa
mov
dec
imul
fstpt
push
fsubr
outsl
or
jl
xchg
cmp
or
push
push
lahf
es
test
lock
imul
dec
shrb
test
jne
pop
sub
sub
jmp
jmp
adc
call
adc
fistl
scas
cmp
mov
jno
out
or
xchg
loop
jnp
push
inc
fsubr
je
mov
mov
in
cmc
jo
mov
mov
xor
dec
add
push
and
mov
cmp
push
xor
push
or
cltd
fistps
loope
adc
sbb
cmp
inc
fmul
int3
dec
jne
test
cs
xor
inc
in
icebp
sbb
sbb
and
jbe
outsb
hlt
add
inc
xchg
jle
pusha
leave
jg
sbbb
les
subb
or
push
test
lret
xchg
xchg
mov
jnp
cmp
lcall
pop
ljmp
mov
sub
insb
cli
out
int3
js
xchg
movb
mov
sarl
popl
pop
scas
push
mov
add
xor
xor
lds
repz
out
xchg
cmpsb
inc
push
push
inc
stos
imul
ja
lods
pop
jb
sbbb
movsb
js
fists
mov
pop
shl
dec
adc
push
cmp
mov
adc
call
push
mov
arpl
add
sub
sub
divl
mov
mov
movsl
add
xchg
pop
xchg
cs
mov
mov
test
fnstsw
lret
stos
mov
std
jmp
add
inc
cs
sub
jp
int
adc
ja
addb
adc
inc
inc
in
inc
dec
push
rorb
icebp
mov
lods
fldl
out
or
jnp
sub
pop
ficomps
xchg
mov
mov
repnz
push
aaa
lods
pop
mov
add
jo
shlb
inc
xor
call
sub
aam
sbb
mov
jnp
in
outsb
ljmp
xchg
xlat
test
lahf
add
push
inc
outsl
rol
pop
push
xor
sbbl
fidivs
shll
sbb
imul
sub
idivb
into
sub
fs
pop
sub
jbe
mov
iret
aam
mov
push
dec
jo
pop
inc
test
jbe
mov
jg
insl
dec
arpl
out
cmp
pop
sbb
out
loop
lea
inc
pop
sahf
xor
rclb
inc
cmpsl
push
sbb
jp
jmp
jb
xor
add
mov
xchg
je
bound
mov
icebp
mov
jb
xchg
fstpl
mov
pop
push
ficoml
lret
pop
sti
arpl
mov
jle
enter
popl
ljmp
movsl
xor
arpl
lock
into
adc
in
xorl
jnp
sub
push
mov
lock
jmp
mov
paddusw
mov
cmp
leave
das
lcall
loope
and
push
cs
clc
cld
sbb
je
repnz
adc
pop
push
jg
adc
sub
sub
push
sbb
aam
lea
lcall
loope
inc
pop
xor
add
mov
cld
scas
inc
repz
daa
movsb
mov
subb
mov
aas
clc
lea
in
xor
inc
xor
lds
cmp
add
lods
dec
mov
pop
test
pop
fs
cmp
fs
stos
scas
in
sarb
shrl
sub
or
mov
dec
sbb
dec
mov
ja
push
push
cmc
mov
add
sub
movhps
and
sbb
jge
dec
cwtl
insb
fsubrl
mov
out
cs
fucomip
mov
inc
arpl
xchg
adc
stos
repnz
sub
ret
or
pop
int3
jmp
inc
mov
push
in
mov
call
int3
arpl
mov
aad
pop
pop
cmpsl
jb
ds
mov
jle
sub
loope
xchg
sbb
cld
cwtl
gs
cld
in
out
add
mov
inc
shll
out
out
rcrl
test
rclb
fdivrl
mov
cmpxchg
hlt
or
jp
adc
lcall
addr16
push
xchg
shlb
fdivr
lock
sbb
pop
and
cmp
cmp
in
popf
popf
divl
mov
xchg
inc
xchg
mov
call
jmp
or
xchg
inc
cmp
lea
inc
leave
andl
mov
and
aas
aad
adc
xor
std
orl
or
aam
dec
in
cmp
push
xchg
repnz
scas
jmp
test
or
xor
xlat
daa
push
cld
das
mov
adc
pop
fxch
js
jmp
sub
jmp
sub
popa
xchg
imul
cmc
add
adc
notl
pop
dec
in
xchg
inc
lcall
in
xor
pop
add
xor
xchg
sub
push
sub
xlat
xor
int
mov
dec
fisubrl
scas
ds
lahf
push
pop
cld
shll
js
out
xchg
sub
jne
and
cmp
jae
and
or
xchg
ret
pop
jae
adc
jns
adc
cmp
lret
je
add
fadd
jg,pn
dec
jmp
aam
ret
jmp
sbb
test
push
clc
sub
mov
clc
push
into
aam
sbb
mov
ja
cmp
and
rcl
testb
es
and
lcall
pop
pop
inc
pop
push
lret
xlat
xor
into
hlt
xlat
and
inc
jo
pop
fdivl
lret
mov
fcmovnu
addl
adc
paddusb
negl
mov
lret
push
out
sub
pop
loopne
notb
pop
aad
inc
xor
mov
ds
incl
lcall
add
ss
ja
in
mov
mov
mov
jns
mov
aaa
jo
or
andb
imul
in
add
jno
fwait
or
in
inc
mov
and
pushf
jb
add
jnp
mov
movsb
cli
pop
hlt
xchg
push
call
cmp
xchg
insl
mov
sbb
pop
sub
and
push
xchg
je
and
out
fadd
call
loop
stos
cmpsb
out
mov
or
scas
mov
cltd
xchg
in
outsb
push
movsl
xchg
sbb
pop
xchg
cmp
lahf
test
popa
cltd
jno
movsb
popa
je
faddp
dec
push
pop
mov
stos
or
pop
push
addb
jbe
in
bound
nop
call
jg
adcl
movsl
popa
ss
lcall
and
in
hlt
xor
std
mov
pop
xchg
xor
lock
sbb
cmp
fldl
ja
lods
dec
push
and
lock
mov
pop
ljmp
push
enter
out
inc
repnz
cld
aaa
int
enter
nop
xchg
fwait
sahf
sbb
and
out
xor
lds
clc
push
jae
les
sahf
push
xchg
xchg
loope
movsl
and
ds
insl
leave
jno
push
test
iret
stc
test
scas
dec
fnstsw
stc
icebp
jecxz
mov
in
fsts
xor
pop
add
js
frstor
aas
mov
je
push
or
and
dec
or
mov
lods
cld
mov
push
jmp
test
iret
push
movsb
pop
cmpb
push
test
xor
test
xchg
jnp
imul
inc
mov
pop
mov
adc
cwtl
lret
xchg
fdivr
push
mov
xor
push
lcall
pop
mov
ljmp
sbb
xchg
sbb
or
ja
mov
clc
mov
mov
fildl
jne
fcomp
adc
mov
jo
or
sbb
mov
pop
aad
xchg
dec
out
fldt
in
jns
add
jne
popa
ret
adc
jnp
data16
fists
adc
enter
aaa
fsubr
dec
cmpsl
mov
addr16
inc
sub
in
pop
cmpsl
pusha
popf
clc
cmp
inc
mov
fldl
int3
ror
cmc
mov
rol
sbb
ficompl
sub
insb
arpl
aaa
sub
mov
cld
sbb
call
mov
xor
dec
arpl
movsl
imul
cli
mov
mov
mov
mov
push
jbe
dec
call
out
mov
iret
in
fiadds
add
loop
xchg
fsubr
sub
xchg
xchg
fsubr
add
jmp
inc
mov
fnsave
imul
lods
enter
or
rolb
int3
repz
cmp
stc
js
into
push
pop
outsl
sub
jo
pop
jmp
call
mov
stos
sahf
in
les
inc
aaa
and
and
stos
mov
outsl
jae
iret
xchg
psubsb
xchg
push
or
fdivp
rcrb
jl,pt
pop
mul
rcr
pop
popf
xchg
adc
dec
stos
test
out
jnp
outsl
dec
xchg
dec
aam
pop
addl
cmpb
cmp
inc
mov
mov
jl
ret
test
mov
xor
aam
adc
mov
outsl
insl
dec
fnstenv
dec
push
add
sub
ss
adc
jae
cmp
scas
in
movsb
dec
fbld
aam
mov
adc
insl
out
lret
shr
xor
mov
mov
mov
xor
call
mov
pop
notl
lcall
xor
pushf
mov
mov
fildl
movsb
mov
xchg
jle
mov
pushl
scas
cmp
jb
rcr
lret
inc
mov
mov
xchg
inc
outsb
adc
ror
push
sub
and
pop
jo
enter
outsb
movsb
push
add
js
lahf
icebp
pop
sbb
and
das
mov
leave
in
push
add
scas
xchg
push
mov
stos
mov
adc
mov
int
daa
cwtl
inc
fstl
or
sub
push
jecxz
or
pop
mov
lods
pushf
push
mov
and
pop
push
out
ret
jb
pop
cmp
shrl
data16
mov
rorl
dec
in
fisubrs
aam
aam
inc
mov
es
dec
test
push
xor
sub
mov
in
xor
inc
sub
mov
mov
push
ficoms
mov
ret
insl
push
or
adc
push
and
scas
imul
mov
mov
xor
push
or
or
xchg
add
xchg
arpl
out
or
sbb
mov
lret
ds
and
pop
inc
xchg
gs
andb
adc
push
lock
adcb
add
pop
in
test
mov
mov
and
or
sbb
loop
mov
loop
sub
mov
movl
xor
loopne
jge
int3
add
sub
roll
rorb
xor
popa
push
xor
cmc
lahf
push
divps
mov
or
out
les
loopne
stos
cmpps
mov
daa
inc
inc
pop
lret
cmc
fiaddl
dec
jne
jb
jno
mov
aad
cmp
xlat
popf
dec
rcrl
fcoms
cli
int
adc
or
mov
loope
pop
lahf
mov
xchg
gs
dec
jp
icebp
mov
clc
sbbb
add
fistpll
fmulp
push
xchg
fs
add
xchg
in
clc
pop
out
nop
inc
xor
loop
jno
dec
cmp
sbb
xor
imul
dec
cltd
cmp
lods
adc
jns
pushf
pop
push
lds
decb
cmp
rclb
and
fs
push
shr
ljmp
je
adc
orb
iret
mov
movsb
in
sub
mov
or
xor
loopne
add
mov
adc
add
ja
inc
cmp
pop
adc
xor
cmp
pushw
lahf
stos
and
fcom
call
incb
and
movsl
mov
add
repnz
mov
sbb
cmp
aad
inc
xor
and
dec
arpl
loop
call
mov
xor
clc
mov
and
push
adc
cs
into
jg,pn
fmulp
inc
cmp
pusha
pop
push
lods
mov
enter
and
and
dec
sarl
sub
or
jnp
xor
xor
adc
mov
lret
mov
xor
xchg
fimull
enter
xor
mov
add
sub
jno
pop
into
and
pop
push
add
pop
dec
pop
mov
sti
push
inc
das
add
cmc
add
mov
pop
cltd
jl
push
je
pop
add
add
orl
mov
popa
out
and
data16
sub
xor
or
xchg
cmp
in
es
cmp
sti
cmp
or
out
push
insb
dec
sbb
or
jnp
push
push
ds
and
inc
out
mov
pushf
mov
mov
sub
cs
fsqrt
pop
cmp
mov
mov
pop
mov
mov
cwtl
lret
jecxz
arpl
enter
jbe
push
pop
das
mov
inc
lods
mov
mov
mov
push
stc
add
data16
mov
mov
push
push
rcrl
mov
dec
dec
pop
lock
loop
mov
and
push
jmp
das
ljmp
dec
shr
loopne
cmc
pop
int
push
add
xchg
lock
xchg
movsl
jmp
dec
jnp
movsl
mulb
adc
or
mov
rorl
inc
fwait
add
daa
dec
mov
mov
mov
push
sbb
mov
pop
fcompl
or
arpl
int3
lret
adcl
jl
das
ficoml
sarb
sbb
test
loope
add
scas
enter
arpl
pop
push
loope
arpl
inc
or
cmp
pop
leave
push
aaa
adc
jg
out
ud1
mov
shll
mov
xorl
and
fstpt
pop
fisubl
xchg
imull
add
out
add
push
shr
adc
scas
rclb
mov
movl
pop
out
test
xchg
mov
mov
xor
mov
xchg
inc
add
push
popa
jl
sub
test
adc
pop
decl
sub
or
in
outsb
sub
outsl
and
push
jns
inc
inc
cmp
jbe,pn
sub
sub
mov
dec
or
adc
ss
push
sbbl
rcll
dec
lds
loope
sbb
in
mov
sub
lret
mov
hlt
fsubp
cmp
inc
nop
popf
mov
jmp
adc
jle
popf
add
les
fimull
sub
test
sub
push
aas
mov
jae
popf
sbb
ja
jg
stc
push
jl
mov
push
ds
daa
push
add
jmp
fmulp
cmp
icebp
push
mov
mov
scas
adc
sbbb
repz
nop
das
adc
in
pop
pop
jp
cmpsl
mov
cli
fs
arpl
adc
int
ja
push
rolb
test
cmp
add
insl
loopne
pop
cmp
lock
cs
incb
sahf
mov
aam
push
fwait
add
sbb
aas
pop
cwtl
stos
jle
mov
pop
pop
shrl
jl
mov
mov
hlt
sub
jp
add
push
rclb
add
out
cmp
or
adc
fmuls
repz
roll
pop
lret
aam
insb
push
or
inc
push
shrb
cmp
sbb
jne
and
mov
mov
iret
inc
or
out
es
enter
dec
push
cmpsb
pop
jno
jae
aaa
mull
mov
jae
testl
pop
mov
mov
loop
pusha
push
daa
xchg
ss
fbld
pop
lcall
cmp
xor
or
movzbl
cltd
mov
mov
push
fstp
mov
std
ljmp
mov
ret
cwtl
je
and
push
add
enter
inc
push
push
mov
adc
mov
mov
pop
stc
loope
insl
lret
cmp
sbb
mov
sbb
inc
add
ret
pause
adc
in
cmp
mov
aaa
add
flds
sbb
sub
cmp
std
or
scas
gs
lret
or
cld
xor
daa
adc
sbb
fistpl
loopne
stos
movsl
pop
pop
into
xor
mov
inc
jecxz
cmpl
dec
loope
jp
lret
add
jno
fmuls
sub
add
mov
mov
subl
fidivs
mov
inc
cmp
jns
mov
push
xor
call
cli
pop
jl
clc
call
dec
shrb
out
push
sbb
push
int
jmp
gs
jo
xor
enter
add
icebp
jne
inc
xor
xlat
movb
inc
inc
sbb
aaa
hlt
mov
mov
ja
lcall
push
out
pop
pop
adc
sbb
jl
imul
aam
dec
lods
mov
xchg
inc
imul
shl
dec
push
mov
sub
insl
and
sbb
stos
and
mov
flds
push
push
adc
mov
mov
into
cmp
jo
cltd
fsubp
jl
and
outsl
outsb
repnz
cmc
jnp
inc
idivl
cmp
repnz
sbb
pop
push
out
outsb
test
jbe
cmp
fs
mov
fwait
xchg
ret
add
cwtl
pop
repz
fidivl
in
or
inc
movups
scas
mov
push
sbb
sub
test
inc
cwtl
push
loope
inc
js
in
sbb
mov
push
push
jnp
arpl
test
and
pop
movsl
movsb
or
cs
xchg
jecxz
loopne
cmc
pop
mov
mov
or
adc
cmp
iret
insl
loop
es
mov
test
mov
addl
sub
jb
aaa
add
js
jg
dec
les
sbb
pop
cltd
mov
sbb
mov
mov
scas
mov
fiaddl
test
imul
dec
cmp
into
sub
mov
xor
sub
test
stos
push
mov
out
add
iret
test
and
jp
test
sub
cmp
scas
push
punpckhbw
cmp
fistl
jp
in
mov
sub
pop
or
fs
jb
iret
in
cwtl
pusha
push
and
cs
sub
shll
cli
insb
jge
push
fistpl
push
stc
jno
hlt
std
hlt
fcomp
fwait
xor
adc
push
dec
xor
cmp
and
fmull
xchg
sahf
mov
and
loop
inc
pop
xchg
rolb
cld
nop
inc
mov
rclb
push
scas
test
out
adc
sahf
pop
cmp
mov
dec
imul
push
cmp
sub
fidivs
mov
mov
std
icebp
enter
subb
mov
cmc
lods
movb
push
movsb
pusha
aas
addr16
pop
sub
jo
xchg
scas
push
cltd
imul
jno
aam
and
test
xchg
jbe
or
xchg
pop
sub
int3
pop
testl
sbb
iret
cli
xchg
and
ds
cwtl
push
pop
pop
push
test
mov
mov
loop
dec
or
inc
push
icebp
dec
and
pop
sbb
sti
decl
lock
lret
adc
pusha
lahf
stos
xchg
fimuls
inc
je
mov
add
cwtl
into
dec
arpl
jbe
stc
dec
js
outsb
ss
jmp
xchg
nop
movsl
push
lret
call
pop
dec
mov
or
mov
xchg
lea
aaa
xchg
imul
sti
aaa
outsb
jecxz
mov
xor
mov
out
shlb
push
lods
fadds
adc
fwait
jae,pn
mov
fisttps
jb
and
scas
repz
sbb
lahf
jne
lahf
or
cmp
daa
dec
pop
leave
jbe
in
aad
mov
in
jo
iret
sbb
insl
imul
pop
in
addb
push
out
xor
aad
xor
cmp
inc
movsl
mov
mov
and
aad
mov
cmpsl
inc
push
out
jo
sub
in
ret
bsf
out
dec
pop
lods
rcrl
les
shlb
test
daa
adc
mov
ds
mov
mov
pop
mov
pop
test
mov
out
push
inc
mov
cmp
push
out
cmc
out
inc
repnz
jp
or
addr16
loope
int
xchg
lea
movsl
xchg
and
test
adc
cmp
mov
scas
mov
mov
cs
and
fwait
and
cwtl
ja
jecxz
inc
in
pop
icebp
arpl
loop
aam
xchg
mov
pop
rcll
pop
mov
rcrl
pop
xchg
dec
imul
dec
icebp
jne
popa
xor
int3
xchg
jecxz
addl
push
out
aaa
cmpl
shl
mov
outsl
outsb
push
aam
add
dec
or
xor
and
call
pop
dec
xchg
jne
out
in
sub
mov
mov
pop
sti
inc
cmp
cs
scas
add
xchg
mov
hlt
xor
out
jg
stc
ficompl
sti
arpl
pop
int
push
pop
in
adc
fwait
cltd
int3
mov
push
divb
xor
push
mov
lds
and
lcallw
jno
mov
data16
mov
cmpsl
pusha
cmp
aam
insb
mov
and
js
jg
out
xchg
add
mov
mov
rcr
push
rcrl
cmp
cs
add
cmpsb
dec
fidivl
lahf
xlat
shl
and
xchg
jp
mov
outsl
xor
stos
sbb
shll
lods
fs
dec
cmp
test
insb
fisubl
shll
movsl
sub
sub
out
test
push
mov
repnz
jecxz
dec
sahf
mov
push
sub
popa
sbb
movb
pop
cmp
sahf
out
pop
into
pop
cmpb
sbb
pop
nop
adc
mov
and
xor
mov
push
loopne
mov
push
push
addr16
pop
out
and
sti
jl
inc
sub
insb
mov
xor
lcall
imul
push
pop
mov
jmp
rclw
jno
dec
outsl
inc
mov
mov
enter
sub
repnz
leave
xor
mulb
xor
jecxz
divl
push
test
cmp
sbb
mov
jb
int3
inc
lock
adc
test
pop
mov
call
lds
cmp
and
inc
lahf
sbb
in
cld
les
iret
push
adc
lcall
sahf
in
push
fld
sub
mov
jge
jbe
jmp
fidivl
out
les
rolb
dec
stc
xchg
aad
dec
negl
ja
int3
sub
cli
rcrl
cmp
inc
cli
dec
mov
xor
mov
sbb
test
xor
in
scas
leave
pushf
xchg
xchg
push
test
cmp
test
xchg
pop
stos
call
imul
mov
insl
stc
mov
lret
xorb
or
shll
das
aaa
mov
out
sub
cwtl
and
cli
adc
jo
jns
xchg
lret
std
pop
stos
mov
aaa
pop
fdivrs
dec
sub
mov
orl
lock
and
mov
xchg
ror
add
test
cmpsl
insb
sub
loopne
mov
mov
fwait
bswap
sbb
xchg
pusha
sbb
jns
rolb
in
fistpl
mov
adc
outsb
push
icebp
leave
mov
xor
scas
or
lea
add
out
and
loop
xchg
cltd
dec
add
in
mov
aaa
or
lock
mov
xor
fsubrs
xchg
loop
stos
mov
mov
mov
cmpb
and
aaa
xor
lea
xchg
call
mov
jbe
rorb
ja
aaa
cmova
mov
mov
and
xor
jno
mov
jmp
add
bound
stos
mov
mov
adc
test
dec
sub
sbb
outsb
push
lds
nop
jg
sbb
fcoml
push
add
jle
jnp
or
add
es
hlt
lods
sbb
std
adc
pop
mov
sub
pmulhuw
fcomi
sbb
cmp
push
test
jle
or
js
negl
push
mov
test
push
inc
inc
fsubl
push
psubb
loope
jmp
imul
pop
leave
fnstsw
dec
pop
or
or
imul
lods
mov
rolb
pushf
jbe
xor
jmp
cld
or
dec
jge
jl
jp
movsl
ds
imul
sbb
dec
mov
inc
and
pop
jp
or
cmp
jns
mov
xchg
lahf
outsb
loope
fsubrl
repnz
adc
or
mov
pop
stos
mov
and
jbe
mov
xor
dec
dec
out
jge
add
mov
dec
jns
ss
xchg
testl
mov
inc
add
cld
cmp
xor
push
lcall
lods
fldcw
inc
repz
mov
jns
sub
and
pop
add
inc
add
cwtl
sub
sti
fsubr
leave
sahf
mov
jo
stc
daa
jb
jle
sub
mov
pop
jp
push
inc
xor
loopne
into
mov
cltd
rcl
xchg
cmp
testb
out
inc
jmp
sbb
pop
pushf
push
cmp
jbe
sub
add
add
je
rcrb
sub
sbb
sub
add
cmc
sub
std
in
adc
not
xchg
movsl
or
and
cmpb
inc
jae
push
fwait
shll
in
xor
mov
outsb
lods
hlt
insl
jge
sbb
dec
jl
mov
in
lods
pop
sbb
popa
add
stos
sub
cli
in
scas
int3
popa
push
aad
cs
stos
int3
dec
aas
cld
sbbl
xor
sti
xor
jmp
pop
cmp
in
or
xchg
jle
push
and
lret
dec
movsl
gs
or
subb
loop
and
shl
dec
jno
lcall
repnz
cmp
cmpsb
fimull
mov
push
je
xchg
push
dec
arpl
add
divb
decl
idivl
or
bound
mov
and
jge
call
inc
ror
adc
and
mov
loop
inc
mov
dec
adc
jle
faddl
jp
aam
push
or
xchg
test
cmp
fmull
mov
mov
lods
repz
pop
mov
clc
addr16
les
cmp
push
int3
push
push
xlat
mov
sbb
xor
into
pop
sarl
push
push
idivl
pop
hlt
mov
push
fimuls
insl
cs
xlat
jb
cmpsb
push
aaa
out
or
xchg
push
push
js
jecxz
gs
pop
in
or
sub
and
fwait
pop
outsl
mov
push
cwtl
inc
xor
sub
mov
cmp
jp
jnp
out
dec
mov
ds
cli
jno
arpl
daa
jge
inc
adc
fucomip
decl
imul
and
fistps
out
sbb
int3
lcall
jmp
adc
in
popa
icebp
adc
data16
pop
mov
lods
hlt
and
xor
fistpl
clc
inc
jmp
test
push
add
adc
jns
sti
rcrb
xchg
and
mov
lock
push
or
adc
test
add
bound
cmp
jae
cmp
jb
jmp
inc
rcr
repnz
xor
popa
daa
add
in
mov
mov
ss
inc
inc
dec
repnz
outsl
add
jl
cwtl
cld
or
lahf
insb
adc
loop
hlt
jno
cmp
test
xchg
aaa
jnp
mov
cmp
fdivr
xlat
daa
movsb
inc
mov
fs
mov
pop
iret
jb
aaa
lahf
or
scas
dec
sahf
or
out
aaa
lcall
adc
inc
insl
push
aaa
xchg
adc
pop
sbb
clc
lcall
aaa
hlt
sbb
popf
adc
or
scas
dec
adcl
xor
mov
aam
and
lea
or
and
inc
repz
lahf
in
jns
jp
shr
mov
addl
rcr
or
rorb
cld
lock
adc
rorb
cmp
jbe
daa
jb
insl
add
cmc
out
mov
ds
mov
mov
in
fcmovnbe
xor
cmp
cmpsl
inc
inc
dec
xchg
cmp
jg
pushf
xor
mov
mov
xor
dec
pop
sbb
movsb
push
repnz
mov
js
leave
sub
xchg
and
movsl
andb
hlt
pusha
int
out
test
stc
pop
adc
jnp
adc
insb
mov
add
jne
faddp
and
iret
inc
or
sbb
add
mov
cwtl
or
insb
ficoml
roll
inc
dec
test
mov
addb
decl
inc
jno
stos
ss
dec
lods
insl
sbb
lea
icebp
mov
scas
and
lock
sbb
scas
in
add
sahf
sti
das
xor
mov
in
or
sub
pop
leave
push
sarb
jae
mov
adc
hlt
jbe
xor
xchg
loope
lret
mov
out
sbb
dec
clc
pop
mov
test
cwtl
ret
fs
inc
andb
movsl
addb
xchg
lcall
jae
or
cmpsl
add
or
jnp
inc
ret
xor
dec
lds
mov
sti
loope
stos
sub
pop
jg
lds
ss
lds
fildll
or
inc
pop
mov
sbb
cli
mov
jge
cli
iret
mov
movsb
jmp
xchg
lock
arpl
xor
out
stc
int
enter
fstpl
outsb
xchg
ja
pop
sub
pop
mov
cmp
xchg
push
aaa
mov
push
imul
jb
popf
jo
push
mov
sarb
add
xchg
repz
push
ljmp
popa
dec
lea
movsb
or
push
jg
xchg
or
in
mov
mov
mov
inc
mov
mov
mov
dec
xor
or
lcall
jge
xor
imul
or
imul
repnz
mov
mov
das
pop
lcall
sub
mov
ret
cmp
push
mov
inc
add
jge
cmp
lea
sbb
repz
dec
jnp
push
rsqrtps
jne
arpl
pushf
cmp
ds
pushf
inc
sub
or
movsb
pushl
lcall
pop
and
or
xchg
lods
mov
sti
aam
sbb
repnz
xor
dec
inc
ror
push
daa
inc
mov
ja
sbb
out
cli
pushf
inc
mov
jae
lcall
jl
add
and
inc
xlat
mov
cmpsl
rol
fsubl
mov
test
mov
iret
in
rorb
cwtl
into
lods
sbb
mov
jge
mov
dec
xor
dec
rcrb
inc
push
mov
jle
mov
fwait
sbb
pop
ss
inc
inc
push
adc
out
insl
enter
popa
ds
enter
jmp
xlat
popa
jg
xor
icebp
call
scas
or
arpl
jbe
mov
repnz
cmp
cmpsl
or
nop
dec
ds
sbb
fidivrs
mov
add
in
adc
sbb
lock
mov
aaa
popf
lds
cwtl
pop
mov
pop
mov
inc
das
xchg
inc
arpl
push
inc
int3
shrb
fdivs
into
ss
adc
mov
int3
or
aas
pushf
fcom
xor
cmpb
js
adc
ds
mov
fwait
in
cmp
movsl
sbb
icebp
ror
test
jp
adc
adc
inc
jge
movsl
or
imul
jecxz
add
push
lret
cmpsb
inc
sub
mov
fldl
or
adc
arpl
mov
xchg
daa
test
jl
push
pop
mov
loop
jae
inc
sti
xor
inc
out
cwtl
ja
or
popf
and
mulb
ljmp
in
push
or
ficompl
lcall
dec
test
xchg
inc
popf
inc
inc
in
add
and
arpl
xchg
imul
ds
cwtl
jmp
lcall
lods
in
cmpsb
jmp
inc
dec
pop
dec
xor
aaa
adc
fdivr
fwait
enter
adc
adcl
loope
js
mov
ret
leave
mov
sti
das
aas
or
add
or
mov
push
adc
cmp
push
or
fs
mov
arpl
out
iret
and
aad
cwtl
jge
jge
loope
jle
sbbb
inc
aam
adc
and
add
sbb
cmpsl
in
mov
fsubr
clc
ljmp
out
jle
adc
lods
jmp
cli
and
jae
fcmovne
mov
cltd
jnp,pn
rorl
dec
xchg
sub
sbb
jbe
jmp
test
sub
lds
outsb
cli
mov
mov
es
in
arpl
rcrb
in
call
add
bound
test
in
adc
or
adc
mov
icebp
fwait
arpl
and
data16
ds
aas
xchg
icebp
das
sbb
movsb
iret
adc
mov
dec
or
das
ret
ret
or
orl
imul
push
cwtl
mov
and
ficompl
cmp
push
jnp
xchg
jae
stos
aad
fldt
sbb
dec
jecxz
mov
sub
push
and
or
or
jp
lods
cmc
pop
les
fimull
mov
push
lahf
pushf
push
out
fcoml
sti
push
loop
adc
in
mov
or
addb
in
dec
pop
dec
ficomps
dec
int
sti
jge
rcl
loope
mov
or
scas
imul
roll
push
jmp
pop
xchg
iret
mov
mov
push
sbb
add
jle
movb
aaa
sub
flds
dec
xor
inc
lods
and
divl
rcll
mov
imul
stos
jge
sar
shr
rorl
pop
data16
push
jno
dec
outsb
xchg
cs
cmp
je
int3
cmp
lock
pop
call
jno
das
mov
ljmp
in
pop
jecxz
inc
out
fcmovb
push
and
mov
sbb
or
inc
test
push
mov
mov
and
scas
jl
dec
xor
push
push
mov
xchg
sbb
adc
cmp
fprem1
sub
mov
dec
out
or
dec
jle
dec
xchg
sbbl
mov
repnz
imul
jmp
sub
mov
jge
insb
inc
pop
sub
sahf
push
stos
out
jo
mov
pop
fcoml
xchg
sub
pushf
mov
push
mov
xor
jmp
fbld
sahf
xor
pop
movsb
mov
mov
push
jl
dec
lods
scas
lds
and
pop
add
das
xor
cvtpi2ps
push
lcall
jge
mov
mov
push
lds
in
js
pushf
lahf
out
cmp
sub
out
push
pop
pop
insl
dec
sub
inc
negb
repz
int
je
shl
ja
fldl
xlat
sbb
mov
pinsrw
not
rcll
xchg
jae
aaa
jne
imul
test
push
xor
mov
or
lods
xchg
je
rolb
push
sub
fisttpll
shlb
outsl
sbb
jae
cmpsb
mov
dec
inc
movsb
movsb
inc
aaa
ret
pop
mov
jl
xchg
or
in
les
sti
out
pop
cmp
push
addr16
nop
inc
in
aad
push
push
mov
sar
xchg
out
add
or
ljmp
imul
dec
push
jge
scas
outsl
mov
jecxz
sub
sbb
sub
mov
inc
cmp
nop
nop
fcoms
push
jae
cmc
bound
sub
jo
cwtl
and
aad
mov
jle
pop
test
movsl
daa
dec
daa
ret
fwait
jns
xchg
xchg
cmp
sub
pminsw
scas
and
jnp
xorb
jmp
xlat
jle
pop
and
dec
push
mov
inc
stc
in
push
mov
sub
std
iret
rorb
cmpsl
mul
adc
jg
or
repz
or
testl
sub
cmp
into
cmc
je
movntps
mov
and
mov
push
jmp
loop
ret
lcall
test
add
mov
dec
repz
adc
mov
dec
cmp
mov
aas
cmp
inc
shrb
sub
aad
jecxz
jo
hlt
mov
popa
js
mov
shl
xor
cmp
sbb
fwait
aam
lock
insl
adc
adc
pop
cmpsl
add
mov
jo
fldcw
jb
aaa
xchg
fldenv
movsl
or
aaa
sqrtps
sbb
retw
mov
in
cli
lock
push
cltd
xchg
leave
ljmp
cwtl
adc
xchg
ljmp
cmp
pop
loop
rclb
pop
xor
push
cwtd
gs
sub
sub
jp
aam
xlat
movsl
adc
lock
push
icebp
push
sbb
push
addr16
push
das
arpl
xor
cmp
or
addb
inc
dec
cwtl
dec
shlb
or
cli
lock
lcall
loop
insl
mov
mov
jle
aam
pusha
out
negl
rorl
inc
and
lods
enter
aas
and
decl
sbb
push
xor
xor
dec
ja
testb
xor
sarb
pop
sub
xchg
inc
clc
pop
push
dec
out
scas
test
iret
pop
in
loope
pop
and
scas
or
ret
scas
or
add
and
fiadds
scas
mov
cmp
in
mov
test
adc
sbb
jmp
add
gs
pusha
cs
mov
stc
ret
push
push
out
mov
popa
sbb
pop
jg
mov
aas
sub
adc
iret
xchg
out
sbb
aam
inc
out
int3
pop
mov
sub
sti
ja
mov
mov
int
add
jo
aam
loopne
aam
mov
push
shll
add
stc
fidivs
lret
sbb
call
sub
fisubrs
imul
mov
cmp
cld
cmp
push
sub
pushf
iret
or
mov
into
js
push
cli
sub
mov
push
sbb
out
lock
push
inc
push
jl
mov
mov
test
jbe
mov
inc
stos
ljmp
adc
std
or
insb
sub
mov
push
xor
mov
das
ds
iret
fidivl
jnp
xchg
push
aas
pushf
stc
nop
pushf
fprem1
fstl
mov
jno
mov
mov
inc
mov
stos
add
je
dec
fldt
nop
xchg
inc
sbb
rclb
outsl
pop
arpl
pop
scas
add
pop
in
push
jae
je
out
cmpsb
xor
push
and
test
in
clc
in
sahf
pop
lcall
dec
jb
out
sbb
push
add
dec
mov
popf
stos
gs
dec
mov
repnz
pop
xchg
dec
rol
xor
bound
negb
jno
rcrb
addl
or
jnp
ja
lods
and
push
adc
ffreep
inc
cmp
aaa
mov
jbe
xor
in
push
cmpsb
int3
sub
rcrl
mov
jns
jae
ss
xor
pop
xor
loop
cmp
push
mov
jae
out
or
sar
js
icebp
xchg
xchg
cltd
loopne
jb
movsb
adc
adc
jae
sub
fwait
push
popf
adc
icebp
xor
fsubrs
aaa
add
xor
xchg
or
ficomps
loopne
mov
xlat
jno
jp
fldt
sbb
pop
fiadds
xchg
sbb
jmp
dec
stc
fwait
or
ss
shr
sbb
xor
ljmp
addr16
mov
ret
push
xor
and
cltd
fwait
test
aad
mov
xor
cmp
fistpll
mov
lock
cwtl
or
sub
push
cli
add
inc
stos
push
push
xchg
xor
and
jo
add
and
loope
adc
pop
push
in
xor
mov
and
scas
incl
call
into
mov
or
stos
stos
std
icebp
cmp
div
adc
add
jne,pn
mov
shll
sub
pop
loop
adc
push
shlb
xchg
das
outsl
outsb
or
clc
sub
enter
and
xor
mov
ss
xchg
in
cmp
dec
sahf
jnp
fimull
mov
xchg
fnstenv
movl
adc
daa
xor
mov
roll
or
add
aaa
pop
cmp
jo
push
mov
lcall
loop
movsb
jecxz
or
dec
dec
js
hlt
loop
arpl
or
push
xor
cmp
xchg
test
call
and
or
fbstp
add
sub
lock
stos
ljmp
cmp
mov
xor
add
ljmp
mul
push
dec
pop
or
push
fsubrs
or
inc
imul
sub
in
adc
fwait
repnz
mov
pop
xchg
dec
imull
cltd
xchg
sbb
jmp
cmpsl
ja
scas
adc
daa
cmp
mov
dec
sti
jl
dec
cli
mov
push
push
inc
sub
and
adc
adc
lahf
lock
inc
xchg
scas
pop
mov
popa
test
xor
cmpsb
movsl
iret
mov
cmp
call
inc
test
ret
mov
add
mov
push
pushf
test
jb
sarl
cmp
mov
les
lods
push
pop
mov
inc
test
pop
inc
pop
loopne
clc
adc
negl
enter
lea
mov
mov
jbe
aam
cmp
xchg
rolb
ss
lds
or
lods
sub
imul
inc
stos
jns
hlt
and
orl
aaa
andl
pop
and
mov
sbb
cltd
sbb
xlat
mov
imul
imull
sahf
int
jp
mov
jno
cmp
mov
arpl
mov
aam
mov
push
out
jb
fcom
es
pop
repz
or
push
fwait
shll
icebp
ja
scas
les
lds
jmp
loopne
enter
sub
test
or
cmp
bound
or
adc
sub
flds
mov
lret
inc
or
mov
xchg
xor
adc
pop
into
mov
adc
xchg
jbe
mov
lods
in
pop
ljmp
adc
fmuls
cmp
cmp
inc
mov
xchg
mov
adc
push
pop
sub
xchg
fs
pop
lahf
jecxz
lret
adc
pop
scas
mov
and
sarb
lods
out
jecxz
test
add
push
jl
fdivl
push
jg
iret
outsb
sub
pop
xor
jl
daa
stos
jnp
adcl
push
icebp
fadds
mov
mov
dec
dec
xchg
icebp
cmc
incl
mov
pusha
cmpsb
not
cmp
xchg
dec
mov
test
rolb
dec
mov
pop
sbb
enter
ds
fnstsw
jno
pop
ret
daa
sub
add
pusha
pop
mov
imul
xchg
or
fwait
subl
jl
rcrl
insl
dec
in
sbb
clc
and
test
jb
pusha
cmpsb
lcall
rcr
dec
ss
cltd
lret
mov
ficoms
cli
pop
mov
lods
stos
call
add
fnsave
ud0
mov
jl
sbb
adc
out
loop
pop
mov
sub
daa
mov
sub
out
ja
aam
pushf
mov
mov
lret
int3
xchg
in
loop
and
insb
or
fstl
rorb
test
jl
mov
cmp
sti
daa
sarb
into
mov
imul
or
js
es
sbb
sbbl
xor
push
mov
rclb
or
test
icebp
pop
outsl
shl
xor
push
inc
and
leave
lahf
out
push
xchg
orl
rcll
imul
rcll
xchg
gs
add
jnp
jne
ret
sub
cld
loopne
mov
mov
adcl
dec
mov
or
out
ds
insb
vorps
stc
cs
cmpl
mov
in
ljmp
push
pop
sbb
mov
cmp
aad
sbb
push
sub
xor
pop
das
dec
icebp
cmp
mov
mov
adc
and
out
pusha
pop
mov
xchg
stos
xor
add
sbb
xor
icebp
xor
imul
jae
push
cld
pop
cli
lods
dec
ss
sahf
sbb
cmp
push
xchg
and
jge
mull
or
fdivl
ret
sbb
fsubrs
pusha
scas
jae
jnp
inc
dec
rcr
test
pop
ret
rcll
add
and
int3
jne
push
lods
inc
loopne
sahf
daa
jne
idivl
pushf
push
into
enter
dec
cmpsl
dec
outsl
loope
inc
sub
sbb
lret
cld
rorb
jae
out
inc
sub
pop
hlt
jge
andl
sbb
pop
pop
lret
mov
loopne
push
bound
test
sbb
int
mov
mov
into
sbb
lret
pop
rcl
mov
cmp
inc
dec
shlb
add
arpl
cs
mov
cltd
mov
add
or
iret
ja
mov
andb
cmovl
faddl
fldcw
mov
sub
stos
addb
sub
adc
push
pop
mov
dec
jl
dec
jae
jns
je
in
inc
js
and
sbb
test
jge
stc
inc
aad
dec
scas
icebp
les
movsl
lea
insb
xchg
xor
in
pop
and
movsl
repnz
pop
cmp
ljmp
jmp
xor
les
mov
xchg
mull
dec
mov
js
or
pop
mov
jbe
ds
into
cmp
ss
outsl
outsb
xlat
ret
call
cltd
cmp
imul
outsl
aam
or
pop
or
jge
jae
mov
loop
nop
dec
xor
jno
iret
and
xchg
dec
lock
cmp
xor
aam
push
adc
int
and
add
in
mov
push
ret
shlb
or
xchg
sub
int3
xchg
outsl
cmp
inc
arpl
in
adc
movsl
lahf
fs
add
xchg
jg
pop
push
add
lods
pushf
dec
notb
and
popf
mov
xlat
sub
lods
aam
loopne
gs
mov
adc
pushf
push
sbb
pushf
adc
orb
test
adc
sbb
pop
adcb
rclb
sub
adc
sbb
ret
add
push
lahf
fwait
or
cli
sub
cmp
push
icebp
movsb
mov
cmp
lcall
fiadds
mov
lret
call
inc
fisubrl
sub
inc
lret
icebp
sbb
adc
inc
push
fisttps
int
dec
pusha
pop
shll
sahf
bound
cs
out
and
dec
jne
and
lods
in
push
mov
xchg
adc
cmpsb
inc
xor
push
in
pop
or
jno
push
xchg
jg
or
xor
cmp
mov
and
inc
and
jmp
xchg
xorb
into
cmp
mov
fiadds
sbb
cli
orb
dec
cld
jmp
pop
fsub
sahf
jmp
sbb
aaa
jmp
mov
jle
dec
mov
mov
outsl
repz
mov
inc
jo
aad
pop
jecxz
int
lods
idiv
mov
inc
xor
fdivl
sbb
add
adc
jbe
jb
mov
sub
outsl
ja
enter
in
mov
dec
add
mov
xor
mov
mov
inc
ljmp
cmpsl
sub
aam
mov
movsb
jg
xor
inc
jle
push
mov
jp
fprem
shlb
push
mov
sub
icebp
mov
sbb
adc
cwtl
cltd
aaa
testb
cmp
sbb
jnp
out
stos
sub
push
orb
xor
loopne
jbe
adc
mov
add
pop
fcmovu
pop
insl
cltd
or
mov
fidivrs
stos
and
xor
lods
stos
mov
jp
pop
mov
mov
cmp
cmpsl
out
pop
call
lods
sub
cmp
mov
pop
jns
test
inc
or
loope
out
sbb
mov
mov
movsb
mov
sti
je
sub
inc
popa
push
rcrl
arpl
cmpb
clc
mov
jo
sub
push
stos
sub
clc
shlb
mov
idivl
call
cmpsb
clc
std
das
arpl
pop
inc
xor
aam
mov
inc
push
dec
jns
pop
lods
gs
in
dec
rcrb
loopne
data16
xor
out
push
cmpsl
adc
fwait
mov
enter
cltd
cmp
es
mov
cmp
push
jno
popl
jmp
dec
jg
or
das
xor
fsubr
arpl
cmp
aad
push
loope
mov
ret
cwtl
cltd
lahf
out
fidivrl
loopne
lds
insb
bound
daa
push
xchg
lret
jb
mov
ss
xchg
push
sar
jne
loope
xchg
or
imul
jecxz
sbb
shrb
sahf
je
dec
dec
mov
sbb
dec
call
jge
sub
imul
inc
ds
xor
or
fiadds
in
or
xchg
into
adc
pusha
mov
jo
sahf
mov
adcl
dec
xchg
das
icebp
repnz
sbb
mov
sbb
and
sub
add
xor
aaa
xchg
mov
sti
add
dec
add
dec
mov
inc
pop
mov
mov
sarl
out
rorb
ret
lcall
rol
daa
lcall
xor
mov
add
jge
dec
fwait
dec
cmp
stos
cmp
in
xchg
jp
frstor
loope
cltd
inc
mov
inc
hlt
dec
cs
xor
mov
and
adc
mov
data16
aas
pusha
test
fcomps
and
jno
int
mov
or
dec
int
call
mov
mov
add
dec
mov
loope
insb
test
mov
shll
test
cmp
pop
xchg
fdivrs
sar
fidivl
adc
ja
das
cmp
inc
cs
sub
jmp
or
jmp
jg
sahf
mov
cwtl
xchg
push
call
les
in
loop
mov
cmp
inc
mov
mov
xchg
add
xlat
sahf
mov
cmp
mov
cmp
mov
pop
movsl
mov
xor
rorl
cld
xor
adc
jle
adc
lret
subl
mov
and
xor
test
add
stc
xchg
sub
dec
addr16
fsub
and
test
sahf
push
jmp
and
cmpsb
mov
or
gs
xor
pop
sub
mov
jmp
push
fidivl
add
mov
leave
test
in
push
push
out
jae
movsl
jecxz
sti
dec
call
or
shrb
adc
dec
dec
mov
cmpsb
cmc
inc
mov
or
into
fnsave
aaa
adc
add
scas
and
jmp
fwait
jl
aas
mov
push
incb
add
sub
aad
mov
sbb
fsubrl
mov
test
sbb
mov
fstl
pusha
cmp
daa
hlt
flds
lret
add
out
or
cmpsb
adc
clc
adc
ficompl
idivl
mov
mov
dec
fwait
pop
sub
sub
insb
outsl
adc
dec
add
mov
lcall
sbb
pop
pop
cmp
pop
mov
idivl
insb
inc
or
adc
ja
push
shl
and
xor
inc
pop
and
lods
test
pop
inc
dec
and
scas
mov
ljmp
stos
mov
push
mov
pop
mov
fdivp
add
xchg
xchg
popa
loope
cmp
in
push
pop
or
or
sahf
lcall
ja
sbbb
or
in
pop
and
vpmacssdql
es
xchg
xchg
add
push
pop
xor
aaa
mov
sub
pop
imulb
dec
sbb
push
jecxz
popa
mov
push
sub
jl
or
inc
inc
dec
outsl
pop
sbb
scas
inc
pop
fidivs
out
mov
imul
inc
mov
scas
cwtl
pop
in
xor
xchg
xor
out
loopne
fistps
mov
out
or
enter
js
jge
mov
xor
push
inc
mov
push
jno
and
cmpw
pop
jl
stos
adc
sbb
push
mov
rclb
fwait
mov
repnz
xor
shll
sbb
adc
mov
js
cmp
dec
cmpb
xor
or
jg
sub
jne
xor
into
repnz
jne
jnp
outsb
jle
js
or
loop
sti
lock
xor
sar
popa
movsb
inc
lret
pop
out
out
roll
push
in
rcll
inc
xchg
dec
js
pop
fidivs
nop
das
and
and
adc
mov
lods
push
push
mov
adc
mov
cmp
push
adc
push
ret
mov
cli
cmp
js
mov
and
enter
adc
dec
and
loop
rorl
cmp
scas
clc
pop
cli
jecxz
movsl
mov
pop
sub
jge
mov
jl
shl
mov
leave
or
sbb
adc
lahf
movsl
les
xchg
jmp
dec
jle
add
or
imul
push
ss
loop
std
idivb
mov
scas
xor
sbb
or
push
aam
ss
xchg
and
stc
xor
in
hlt
mov
add
mov
push
dec
jle
pop
pop
mov
mov
add
push
mov
push
dec
mov
sub
dec
and
pop
clc
sbb
xchg
out
xchg
es
pop
pop
xor
mov
dec
pushf
pop
incl
scas
das
mov
mov
jp
cmpsl
ret
inc
js
mov
inc
insb
popl
loop
int3
pop
stos
js
adc
jnp
push
dec
decb
jl
jo
jno
fidivl
pop
shll
iret
xchg
or
gs
and
jae
fs
and
xchg
lods
push
sbb
adc
jne
or
lods
xchg
add
xor
loopne
fstps
xor
and
fs
add
pop
loop
stos
cs
int3
lret
add
mov
xchg
jo
leave
mov
jne
mov
lods
stc
shl
addr16
push
out
daa
scas
lods
add
cltd
mov
aaa
xchg
lcall
in
fdivrs
arpl
aaa
jle
fimuls
int
and
inc
xchg
leave
or
xor
mov
loopne
outsl
sbb
fsub
inc
and
dec
fsubs
loop
cwtl
rcll
dec
xor
bound
fmuls
lods
mov
mov
sub
push
std
jmp
test
jg
lcall
lods
in
mov
daa
in
xor
xor
sbb
pusha
pop
xchg
insl
xor
mov
pop
lds
mov
mov
cld
jbe
add
fistpll
add
lea
pop
imul
aam
add
and
mov
and
jmp
stos
aam
incb
cmp
mov
adc
mulb
push
loope
add
aas
adc
repnz
jmp
pop
dec
or
out
test
jne
pop
sub
jp
push
in
pop
test
mov
pushf
pop
fsubrl
lods
inc
push
push
test
jno
test
pop
cltd
add
mov
push
sti
andl
xlat
sub
ror
cs
in
push
push
fcompl
aam
xlat
loopne
lock
adc
fcmovne
hlt
jg
pop
sbb
cmpsb
mov
or
popf
xor
adc
inc
mov
xchg
repz
je
mov
iret
cmpl
mov
pop
push
or
mov
shll
int3
int
dec
movsl
out
jg
outsl
cmp
mov
lahf
inc
outsb
xor
jle
mov
cmp
mov
jae
and
call
add
out
clc
inc
sbb
mov
dec
adc
inc
js
scas
movsb
xchg
jb
or
pop
and
adc
dec
xchg
add
cs
xor
jecxz
inc
movsl
add
jbe
int3
lret
sbb
incb
cmc
enter
enter
mov
inc
fst
testb
arpl
inc
lods
lret
sbb
add
sub
pop
pop
inc
add
rclb
sub
cmp
push
jge
notl
mov
sbb
shrb
repz
sub
xlat
cmc
cmp
xor
mov
and
cmpsl
shrb
sub
in
adc
stos
mov
cmp
mov
pusha
test
jb
jmp
in
jge
test
cmpsl
xchg
jp
cld
inc
pushf
fisttps
ljmp
in
xorl
mov
inc
mov
in
dec
lock
cmpb
and
adc
mov
int
out
lahf
decb
pop
push
insb
aad
dec
and
bound
jecxz
xchg
in
repz
xchg
push
mov
pop
or
cltd
mov
inc
in
out
mov
dec
shr
push
or
repz
push
jbe
cli
add
jnp
andb
sbb
lret
ljmp
enter
cmp
inc
push
imul
inc
cmp
fstps
mov
pop
inc
insb
and
sarb
inc
jg
dec
cmp
mov
iret
inc
inc
call
sahf
clc
cwtl
jbe
ljmp
addr16
rcrl
out
addl
and
ljmp
inc
cs
sbb
in
sub
xchg
and
pushf
jne
dec
sbb
mov
lea
fdivs
push
push
mov
or
decl
add
ja
mov
scas
push
into
lds
test
rol
jbe
test
add
gs
pusha
lock
jbe
xor
mov
psubq
fildl
pop
jecxz
or
sbb
fnstsw
clc
inc
insb
cmp
add
adc
out
dec
sbb
push
test
dec
cmp
popf
iret
in
int3
push
add
jns
jle
fdivl
fisubs
clc
push
xchg
sub
into
rolb
push
mov
ds
push
and
jmp
sub
jp
dec
mov
aad
pop
pop
insl
push
fcompl
in
mov
hlt
bswap
sahf
mov
arpl
repz
aam
mov
les
insl
jo
lahf
mov
xchg
in
jg
cmp
hlt
lock
lret
xchg
xchg
pop
add
shlb
xchg
xchg
lcall
inc
cmp
mov
inc
mov
lret
insb
inc
cmp
imul
add
jg
dec
jns
xchg
ljmp
repz
jbe
and
icebp
scas
jne
fbld
loop
mov
xchg
fnsave
dec
push
pop
ss
xchg
xor
push
aaa
jge
xlat
mov
ret
xchg
mov
dec
stc
testl
cli
idivb
stc
mov
cmp
or
push
xor
add
sub
cmpb
call
lea
push
mov
and
jns
imul
stos
and
aad
add
in
decl
inc
sub
add
scas
mov
mov
cmp
jg
mov
in
xor
dec
js
in
jae
test
adc
xchg
or
in
je
pushf
sub
in
mov
sub
xchg
icebp
adc
adc
sbb
pop
in
inc
fstps
xor
add
or
ja
fsubl
icebp
push
add
add
cmpsl
push
cmp
pop
sysret
mov
dec
add
repnz
push
fistps
push
ss
ret
ds
in
xor
cmp
pop
push
adc
insl
shrb
mov
int3
adc
or
arpl
xchg
jp
in
pushf
cld
adc
or
sub
adc
js
stos
lcall
add
pop
test
xchg
mov
mov
pop
loop
clc
inc
int3
jbe
call
pop
jae
pop
inc
or
imul
loopne
pop
sub
xchg
sbb
imul
inc
loop
loopne
dec
out
aad
adc
mov
and
out
outsb
xor
cld
cs
xor
lock
mov
call
push
gs
sti
lret
cwtl
and
lret
jo
jp
sub
cmp
mov
test
push
sti
ret
cmpsb
xchg
cmpsb
sbb
int
dec
push
sbb
add
mov
jecxz
xor
adc
fidivrs
cmp
pop
mov
outsl
mov
in
loope
orb
push
test
jne
daa
adc
add
mov
mov
mov
jae
mov
mov
rolb
fwait
inc
jg
pop
shrb
mov
je
in
cmp
popf
mov
orl
add
cmp
test
dec
jns
inc
pop
jnp
or
sbb
out
test
nop
sahf
or
cmpsl
xor
and
xchg
scas
test
sbbl
xor
mov
scas
xchg
sbb
andl
in
lods
and
stc
add
in
cmp
add
mov
scas
and
inc
sub
iret
sub
push
jl
push
jbe
pop
push
icebp
pop
mov
cld
xor
adc
lret
fldcw
xor
jno
arpl
sbb
inc
pushf
push
cmpsl
or
or
xchg
dec
jmp
and
xchg
addr16
ss
add
fcomp
mov
rcll
pop
xchg
sub
int
pop
mov
stos
xlat
in
xchg
insb
pop
add
std
leave
test
mov
cmpsb
das
arpl
mov
xchg
cld
push
dec
lea
addr16
icebp
mov
andl
dec
cmpsb
add
popa
nop
sub
mov
or
pop
add
test
call
xchg
dec
jbe
jg
adc
enter
clc
xchg
icebp
shr
sahf
cmp
dec
rcl
mov
mov
add
pop
cld
cmpsl
xchg
ret
lcall
push
jns
and
cwtl
or
add
stos
adc
pop
push
imul
pop
lods
push
lds
adc
cmc
into
mov
push
movsl
lods
icebp
popa
scas
fwait
jmp
xchg
data16
sti
adc
mov
sbb
je
xchg
cmpsl
cmp
test
ss
or
shl
pop
pop
xor
mov
sub
xchg
fldl
fs
orb
cmp
cmc
cltd
out
add
es
sbb
sub
ret
pop
dec
nop
xor
fidivrs
lods
popf
in
push
add
pop
inc
enter
lea
mov
xor
push
es
ror
mov
aad
pop
cmp
ss
lret
mov
movsb
push
mov
mov
pop
xlat
out
jne
cmc
into
jne
pop
dec
and
push
cmp
xor
lret
roll
push
cs
push
xchg
and
jecxz
pop
jns
test
xor
std
xchg
jbe
popf
push
les
arpl
shl
in
pop
repnz
pop
or
mov
mov
push
test
pushf
inc
sbb
outsb
sbb
cmp
clc
push
jb
mov
test
ret
shrb
push
pusha
sbb
cli
inc
sti
and
out
ds
cli
subl
data16
sub
sbb
mov
sbb
mov
mov
daa
and
adc
sub
and
dec
andb
mov
sahf
sub
lahf
sub
cmpsl
arpl
int
push
adc
shrb
xor
adc
mov
xchg
xchg
in
xchg
pusha
xstore-rng
cmpsl
inc
add
jge
fldl
pushf
mov
int
imul
in
inc
mov
mov
and
shll
and
sbb
aad
outsb
pop
mov
mov
xchg
add
add
mov
dec
ror
xor
or
out
cmpsb
mov
mov
in
mov
mov
and
cmp
sbb
repz
fwait
xor
outsb
add
and
hlt
sub
outsl
popa
outsl
int3
pop
cmpb
jb
pop
jmp
lods
loop
ret
mov
mov
dec
xor
add
mov
mov
adc
dec
push
mov
aam
imul
inc
sub
jbe
or
pop
das
add
nop
das
js
stc
dec
jmp
xchg
ficomps
mov
mov
jae
fs
sub
mov
cmpsl
jno
mulb
mov
mov
sub
cwtl
mov
cmp
jmp
in
aam
xchg
pop
push
sbb
sub
mov
mov
enter
cmp
xchg
sub
rcll
sbb
inc
out
pop
push
jmp
cmpsb
inc
jb
loop
jbe
icebp
mov
mov
push
jbe
push
cmpsb
xlat
repnz
scas
mov
fs
xchg
cmp
xlat
adc
cmp
inc
cmp
xchg
stos
mov
call
stos
stc
repnz
jnp
out
jg
add
mov
cltd
notl
loope
dec
sti
aam
xor
add
cwtl
push
pusha
shll
sti
pop
cmp
js
sbb
fmulp
out
ds
cmpsb
and
sub
push
ret
push
or
and
es
jmp
add
sbb
leave
test
test
fstpt
xor
les
mov
sbb
and
les
inc
std
pop
inc
xchg
sub
xchg
enter
cli
cltd
out
outsl
sub
jno
inc
out
repnz
jg
mov
loop
mov
int3
mov
mov
mov
jp
int3
mov
daa
pop
lds
pop
cwtl
inc
iret
cltd
lods
hlt
gs
popf
pop
cwtl
push
stos
test
cwtl
fs
lds
mov
std
aaa
test
int3
out
xchg
push
add
xchg
xor
inc
adc
in
mov
movsb
adc
or
imul
push
andb
clc
xchg
add
int
mov
pop
pop
in
push
jg
hlt
xchg
xor
push
aam
xor
int3
stos
out
jp
jns
xor
or
push
mov
dec
sub
adc
push
out
adc
js
and
out
push
xlat
call
add
fwait
stos
in
lret
outsl
ja
add
inc
jg,pn
mov
sbb
stos
xchg
pop
insb
xor
xchg
negb
test
jae
mov
mov
sbb
in
sbb
xor
push
je
repz
lret
rclb
and
sbb
adc
fistps
mov
sub
aad
mov
sub
add
sbb
pop
mov
mov
push
cmp
adc
fnstenv
push
ljmp
mov
xor
scas
addb
loope
mov
ss
bound
gs
cmp
adc
enter
xor
lock
fisubrl
inc
mov
adc
das
jle
and
testl
loope
in
movsb
into
ret
aaa
stos
sbb
jnp
jge
lea
jbe
mov
aas
aad
sub
movsb
subl
movsl
jno
push
fs
cmp
mov
push
push
lret
dec
loopne
jae
lock
pop
jl
push
and
ja
js
inc
stc
arpl
insl
in
push
aas
outsb
nop
lods
sub
stos
adc
xchg
xor
fs
cs
adc
sub
outsb
mov
sbb
xor
repnz
or
or
and
sub
cmp
cmpsl
outsl
sahf
inc
int
mov
loope
cmp
xchg
jb
jp
iret
pushf
mov
cmp
adc
dec
mov
ss
rcrl
pop
mov
sbb
sbb
stos
in
add
ja
popa
push
fnstcw
inc
sbb
addr16
mov
das
lods
xchg
cmpsb
test
xor
repz
addr16
xor
lea
fdecstp
movsl
and
xchg
push
ljmp
insb
out
imul
mov
stc
mov
insb
jo
or
es
xchg
lcall
and
inc
cmp
ss
data16
xor
sbb
dec
cwtl
outsl
loope
out
xchg
scas
mov
jae
outsb
aam
mov
sbb
sub
and
sub
cmp
pushf
mov
es
cmc
mov
push
dec
inc
jo
in
or
dec
inc
loopne
cmp
push
pop
mov
out
xor
push
clc
xchg
jg
imul
mov
and
add
xchg
xlat
out
aaa
testb
mov
jge
xchg
add
mov
adc
mov
push
or
scas
pop
mov
sbb
pop
insl
pop
mov
loop
dec
xor
cld
scas
mov
pop
scas
fistpl
lods
fisubrl
shrl
mov
test
xchg
mov
push
insb
cmp
cmpsb
mov
loopne
xor
push
xchg
aam
imul
adc
fcomps
xor
sbb
pop
dec
pop
lea
jb
mov
or
mov
shrb
jne
gs
rol
repz
jbe
int
daa
fcmovbe
stos
xchg
loope
icebp
and
daa
fiaddl
jmp
dec
cs
cmp
in
push
test
lods
inc
xchg
mov
mov
enter
cmp
mov
data16
xchg
jne
sbb
add
lea
adc
push
jbe
and
push
pop
fistpll
loope
adc
rorl
mov
inc
movsb
inc
jmp
mov
mov
pop
add
sub
or
mov
and
xchg
add
mov
sbb
mov
call
jbe,pn
jnp
lock
mov
and
or
pop
arpl
out
fcmovnbe
outsl
into
sbb
jecxz
lods
mov
stc
mov
fucomip
sahf
sbb
sbb
jecxz
je
sub
sub
cmp
sub
and
mov
xor
fsubrl
clc
sbb
sbb
dec
int
and
push
lret
sub
cmp
push
jl
inc
leave
adc
hlt
jnp,pt
pop
lods
cltd
xchg
push
sub
and
push
idivl
pusha
mov
jb
movb
aam
out
cmpsl
int3
jnp
das
sub
xor
out
and
orb
or
sti
ljmp
dec
adc
cld
xchg
rcr
test
jp
xlat
pop
test
xor
xchg
rcr
xor
sahf
lods
adc
scas
mov
popa
fisttps
adc
xchg
sub
int3
fdivr
sub
jl
push
repnz
pushf
aaa
pop
cmp
adc
sti
subb
movsb
jl
test
nop
in
inc
sarl
je
jno
inc
or
add
popf
adc
rcll
adc
jbe
xor
mov
push
int3
lods
mov
lods
xchg
push
jp
pushf
push
pop
lret
lcall
sti
xchg
add
shl
jnp
sub
loop
xchg
sub
push
arpl
xchg
mov
and
je
mov
cld
jle
push
xchg
icebp
movsb
gs
xchg
push
cmp
pop
sbb
push
dec
sbb
gs
cs
insb
repz
inc
fsin
ljmp
addr16
aad
push
sbb
xlat
test
in
dec
and
out
mov
mov
mov
fists
mov
stos
std
jl
lret
push
dec
repnz
xor
cmp
push
addl
scas
cmp
inc
movsl
inc
add
cmp
xchg
push
mov
stos
insb
mov
out
imul
push
inc
mov
into
dec
push
negl
xor
mov
fdivs
adc
mov
inc
mov
fisttpl
pop
adc
add
jmp
stc
xor
and
in
cmpsl
fstpl
or
xor
pop
sub
lock
sub
addr16
cli
into
jecxz
push
popf
xchg
aaa
decl
js
inc
int3
dec
dec
popa
inc
aaa
arpl
insl
clc
and
lock
pop
cmp
scas
divb
jmp
inc
ror
test
negl
fs
cwtl
add
mov
xor
cwtl
mov
sahf
add
mov
rorl
add
xor
or
repnz
mulb
dec
sbb
test
dec
cli
out
dec
lcall
inc
out
cld
ftst
cmp
mov
inc
xchg
xor
or
pop
icebp
fisttpl
jbe
ds
mov
mov
aad
inc
jno
and
cltd
jno
in
movsl
and
jb
adc
adc
test
out
ds
arpl
arpl
jb
push
stos
jns
push
hlt
aas
nop
hlt
and
push
mov
or
cltd
push
test
cmp
cs
sbb
lods
pushf
dec
stos
dec
fs
or
rcll
das
add
movsb
add
sti
dec
cmpsb
out
int
mov
repz
fcomp
mov
cmp
mov
test
adc
fsubrs
mov
adc
and
icebp
enter
mov
mov
sub
push
pop
mov
push
mov
scas
jne
pop
in
daa
xchg
cmp
dec
gs
push
dec
push
or
addr16
mov
push
mov
cmp
xor
mov
insl
repz
xchg
in
aaa
cltd
shlb
enter
fmuls
ss
pop
push
aam
movsl
testl
loope
fs
testl
sbb
movsl
call
lret
mov
xchg
leave
lcall
fs
dec
sbb
push
insl
jl
incb
push
outsl
inc
or
cmp
inc
mov
pop
hlt
idiv
push
jle
sahf
inc
in
mov
pushf
into
pop
push
xor
rcrl
pop
movsb
push
mov
adc
in
add
adc
in
dec
mov
js
dec
test
jmp
jns
inc
cmp
movsl
stos
movsb
cmp
pop
ss
pop
sbb
or
insb
and
cmp
jo
adc
inc
test
push
test
and
incb
mov
push
push
xchg
fxtract
pushf
call
test
mov
xchg
push
andb
push
cltd
mov
sub
lea
and
das
lahf
inc
std
dec
jecxz
js
es
jae
inc
mov
ficoml
inc
mov
fldenv
and
andl
mov
inc
je
xchg
sub
lret
mov
jmp
xchg
adc
add
mov
dec
negb
arpl
jbe
nop
push
or
fwait
outsl
aam
fcomps
cmp
mov
pop
add
stos
push
dec
fisttpll
push
lcall
stos
pop
pop
les
outsb
and
push
dec
xchg
xor
mov
jmp
mov
sub
push
pop
mov
cmp
hlt
push
lods
subb
in
mov
xor
xorl
inc
rol
mov
out
sbb
jne
xor
rorb
ljmp
rolb
lcall
push
lret
push
push
jae
dec
sbb
test
fnstenv
imul
daa
sub
hlt
jl
in
adc
pop
cwtl
scas
jg
movsl
test
sarl
popf
and
scas
xor
xor
add
jg
movsl
sub
dec
mov
push
mov
repnz
lret
add
push
pop
cmc
mov
jbe
ror
mov
imul
mull
hlt
pop
les
leave
inc
cwtl
clc
shlb
outsb
stos
sahf
repnz
and
ljmp
lods
test
and
repz
int
bound
add
mov
in
daa
pusha
xchg
imul
adc
sub
ss
bnd
pop
pushf
ljmp
cmpl
inc
sbb
lock
mov
imul
daa
enter
mov
out
into
cld
fldcw
xchg
int3
pusha
enter
push
adc
aam
sub
incb
jns
mov
sbb
insb
ret
cmpsl
sar
jp
push
daa
ja
cmc
faddl
inc
ljmp
cmp
sbb
mov
xor
pmaxsw
sbb
enter
dec
adc
mov
or
test
dec
sub
mov
add
call
into
inc
cli
les
mov
push
cmp
les
insl
xor
pop
dec
aad
rcll
pop
ja
push
push
xchg
insl
mov
push
out
lret
pop
add
ret
push
lea
mov
and
roll
stc
adc
call
fidivrl
ficoml
bound
mov
mov
and
mov
cli
or
popa
mov
sub
jl
cmpsb
mov
dec
push
out
cmp
or
jae
inc
dec
or
ljmp
fiaddl
das
out
in
popa
cmp
test
arpl
out
outsb
test
jg
mov
in
lret
shrb
jb
cmpsl
icebp
sub
xchg
popf
push
ljmp
fimull
daa
rcrl
cltd
mov
cld
adc
xlat
pop
dec
lcall
jecxz
je
jl
pop
cmp
popf
aam
push
push
rorb
mov
sarl
xor
imul
imul
cmp
lds
int
loop
lahf
inc
addr16
mov
pushf
lret
cld
scas
shll
gs
fisttps
jecxz
fisubl
out
jp
xor
lret
push
mov
pop
mov
enter
cmp
xchg
and
movsl
js
mov
or
sbb
out
mov
adc
in
pop
add
pusha
out
jl
outsb
stc
cmp
or
outsl
push
adc
rcrl
cmpsb
in
lock
shr
adc
cld
test
outsb
in
xchg
xchg
xor
dec
stc
pop
je
repz
mov
xchg
std
ja
subl
out
insb
rol
fistl
xchg
jg
movsb
sub
jmp
loope
xor
mov
in
jl
push
dec
stc
xchg
and
mov
sbbb
out
sub
or
xchg
xchg
mov
add
ret
fcom
push
sbb
jecxz
jbe
stos
inc
sbb
jae
xor
adc
jns
cmpl
push
inc
aaa
mov
mov
push
cmpsb
cmpsb
lea
lea
xchg
and
or
and
push
pop
dec
out
nop
cs
push
outsb
rol
mov
push
pop
push
mov
outsb
dec
popf
ljmp
mov
out
pop
nop
clc
clc
adc
cmpsb
mov
fisubl
pop
mov
xchg
gs
and
lea
dec
mulb
sti
movsb
ja
cmp
lods
enter
sbb
jb
jae
pop
push
lret
lea
mov
addr16
sub
iret
es
sbb
sbb
lcall
mov
leave
sub
faddl
cmpsl
adc
push
add
push
push
dec
movsb
stos
ret
xchg
sub
pop
sub
and
mov
scas
daa
shrb
shrl
insb
gs
mov
sub
adc
popa
neg
call
movsb
addr16
mov
cmp
std
ljmp
in
mov
inc
scas
call
mov
or
push
pushf
mov
inc
in
xchg
jns
lock
xor
mov
xchg
inc
mov
dec
cld
push
popa
mov
xchg
cmp
pop
je
es
mov
shrb
fwait
pop
or
mov
pushf
push
decb
test
adc
adc
cmp
aam
mov
js
int
push
fisubs
ret
pop
divl
xor
sbb
scas
int3
inc
dec
ljmp
lods
leave
sbbb
adc
movsb
sahf
xchg
adc
imul
sub
sarl
inc
push
xlat
ja
xchg
jmp
push
insl
push
lcall
jae
gs
or
pop
push
add
push
into
inc
sub
xor
aad
cmp
stc
mov
into
nopl
jno
jle
add
addr16
xor
repz
int
insl
popl
adc
lods
push
and
jl
gs
pusha
cmp
hlt
xchg
jl
push
xchg
ror
xor
fsts
roll
lahf
insb
ja
jp
sbb
daa
rcrl
pushf
bound
dec
in
mov
mov
dec
and
lea
test
ss
push
cmp
adc
mov
xorl
cmpsb
aam
sbb
ljmp
xchg
push
or
cmp
inc
adc
mov
dec
mov
cli
jge
xchg
lret
mov
cmc
cmp
std
sbb
dec
jno
icebp
int3
xchg
mov
jb
outsb
cmp
daa
and
xor
hlt
stos
add
mov
xchg
fldcw
sub
faddl
pop
sti
shrb
jae
mov
outsb
push
mov
dec
xchg
out
filds
fs
inc
lcall
jge
jp
addb
fwait
pop
jp
jno
mov
mov
stc
mov
mov
jno
mov
decl
mov
jnp
call
jg
hlt
into
and
mov
lret
mov
test
int
mov
and
cmp
xchg
lds
in
inc
notb
jecxz
push
popf
mov
push
push
sub
pushf
sti
cld
and
inc
ret
jno
push
je
push
mov
and
push
adc
mov
xor
es
mov
dec
xor
iret
sub
adc
jecxz
test
mov
cmpl
imul
mov
sub
jno
popf
icebp
mov
mov
lea
mov
test
pop
pushf
or
fdivrl
fxch
leave
stc
rcrl
or
into
pop
lret
stc
pop
aam
inc
imul
imul
jge
or
dec
std
in
sbb
ja
popf
cltd
lods
filds
push
scas
push
pop
sahf
add
clc
ja
push
lcall
cmp
nop
call
popf
push
shrb
mov
push
mov
shl
xor
imul
and
addr16
pop
rcr
sub
pop
idivb
fdivr
cmp
iret
push
insb
imul
loopne
in
fcomi
orl
inc
mov
sarl
jmp
pop
mov
aas
cmp
gs
push
icebp
inc
aas
sub
mov
hlt
sub
or
add
enter
add
inc
je
push
aaa
outsb
dec
push
ss
pop
and
xorl
fadd
out
fistps
and
sub
aas
inc
and
call
cli
in
adc
rcrl
lcall
xchg
cmc
and
and
aaa
or
xlat
adc
jne
dec
dec
jno
test
dec
sti
adc
ror
add
inc
rcr
push
rcll
mov
stos
xor
ret
fisttpl
rorb
xor
push
xchg
cmpsb
mov
mov
sub
les
pop
mov
push
andl
sub
cwtl
in
les
pop
lcall
ja
push
pop
jne
cmp
jo
jne
loope
sub
adcl
iret
mov
arpl
ret
push
mov
or
sub
insb
sub
scas
gs
cmpl
mov
push
sub
mov
pop
pusha
data16
jbe
adc
jae
xchg
popa
sti
and
cmp
pushf
gs
ret
iret
mov
pop
movsb
movsl
or
lods
jl
aas
divb
pop
xchg
jae
xchg
mov
xor
mov
add
iret
lahf
mov
mov
js
jnp
sbb
scas
lds
xlat
out
xchg
outsl
lods
fstp
pushf
xchg
movsb
inc
sub
pop
movsb
inc
xchg
mov
pop
xchg
and
out
insl
adc
lea
sub
stos
push
xor
movsb
mov
sbb
push
mov
icebp
loope
fiadds
sahf
sbb
cmp
sub
pop
or
lret
xor
orl
imull
fstpl
fwait
push
xchg
push
lcall
repnz
mov
push
pop
lock
mov
in
xor
hlt
jp
imul
pop
or
adc
cmp
pop
push
ljmp
xchg
pop
fs
inc
repz
shrl
sub
dec
aaa
test
dec
add
push
test
mov
je
jg
cmpsb
mov
mov
pop
add
or
lcall
cmp
outsl
stc
xor
je
repz
cld
pop
rcl
int
xchg
enter
xor
jg
push
repz
fwait
outsb
je
and
popf
sub
mov
mov
mov
pop
jecxz
or
enter
js
sbb
popf
loop
dec
les
imul
cmp
cld
daa
xchg
fdivrp
pop
test
or
ja
and
js
ja
js
ss
dec
xor
imul
jbe
mov
mov
call
jecxz
push
pop
fs
push
or
cld
in
aam
orl
jg
lea
jo
fdivrl
sub
mov
adc
mov
rcr
in
call
test
push
xchg
pop
dec
sbb
or
nop
scas
jge
or
xchg
pop
or
pop
jp
push
es
dec
sti
inc
fstps
inc
jecxz
aam
push
icebp
lcall
jo
leave
inc
mov
in
cmc
cmpsl
sbb
mov
pop
inc
out
cmp
mov
leave
andl
push
test
jg
inc
add
test
mov
jbe
xor
in
xchg
and
jp
out
out
cld
pop
push
popf
mov
jbe
shll
or
cmpl
sbbl
popa
call
jns
sahf
mov
dec
out
xor
jmp
test
aad
in
or
xor
enter
xchg
cltd
jmp
jnp
outsb
jnp
fimuls
add
and
aas
lahf
sbb
iret
mov
fbstp
ja
push
rcl
jp
mov
xor
in
xchg
cmp
mov
mov
pop
add
mov
popf
fiaddl
ficoms
cmpsb
push
xchg
and
cmp
cmp
adc
rorb
mov
mov
jne
xor
cmp
bound
mov
loop
rcll
fcmove
add
inc
enter
lods
cmpsb
movl
addr16
and
bound
ficomps
sarb
dec
and
inc
arpl
pop
in
aam
and
pop
adc
rcrl
ss
and
jge
out
mov
lods
rorl
pop
cwtl
sub
cmc
inc
cltd
push
int
lret
mov
mov
dec
xor
leave
and
ja,pn
lock
push
int
adc
in
or
lock
mov
rclb
daa
rclb
adc
dec
pop
stos
inc
pop
outsb
mov
shl
xchg
inc
shlb
mov
repnz
inc
add
and
leave
scas
jne
fisubs
repz
lds
push
jb
push
inc
pop
gs
or
sub
arpl
dec
fisttps
pop
das
or
pop
dec
ret
aad
fisubrs
ja
imul
jecxz
aas
in
xor
or
es
scas
out
push
out
or
je
ss
outsb
fs
popf
fs
fsubr
shlw
std
andl
mov
adc
cmp
pusha
jle
mov
bnd
in
mov
inc
jbe
adc
stc
cmc
dec
paddusw
add
sbb
jb
lods
enter
cltd
je
lret
in
jecxz
pop
subl
jecxz
out
hlt
or
inc
jns
mov
inc
push
or
ljmp
sbb
pop
or
lods
add
or
push
push
fs
je
xor
cmp
sahf
cltd
pop
ljmp
lahf
add
or
lds
insb
pop
sub
data16
repz
shl
pop
daa
push
lock
push
out
sbb
dec
pop
mov
or
stos
xchg
add
xchg
shll
or
lea
xor
push
and
fdivs
inc
fdivrl
fbld
cltd
aas
xchg
movsb
or
das
iret
mov
mov
xchg
sub
addr16
cli
push
jge
push
push
mov
sbb
mov
sbb
lods
jne
mov
dec
fidivs
int
jmp
aam
clc
cmp
mov
daa
js
inc
lea
js
call
sub
mov
rolb
mov
inc
adc
pop
std
repz
sbb
mov
movsl
dec
incb
pop
rcrb
das
int
pop
out
xchg
add
repnz
lahf
dec
push
xchg
push
mov
fistps
fdivrs
cli
test
in
stos
filds
call
orl
sti
call
push
bound
mov
test
adc
fcompl
push
push
nop
inc
outsl
mov
stos
outsl
jne
in
mov
cmp
mov
aam
xchg
rcrl
or
neg
in
push
cs
dec
imul
xor
pop
fs
or
bound
js
aaa
out
inc
cwtl
rorb
ss
push
sub
and
fstl
add
cmp
dec
pop
lock
mov
cmpb
out
jecxz
jae
dec
and
mov
cli
jge
xor
add
push
sub
subb
imul
mov
mov
mov
cwtl
add
outsl
xor
in
jp
lods
jae
xchg
xchg
ret
lret
add
and
test
mov
pop
and
xor
ljmp
cmpsb
cmpsl
lret
shlb
scas
cmp
andb
adc
cmovnp
dec
push
sbb
outsl
adc
nop
inc
addr16
stos
adc
cmp
or
les
sub
lcall
mov
push
test
and
scas
outsb
push
test
xchg
lds
lods
inc
pop
sbb
dec
arpl
xor
mov
dec
sub
mov
mov
fwait
pop
xor
xor
movsb
mov
and
inc
ja
fisubrl
pop
ret
bound
filds
rorb
sti
dec
mov
cltd
out
push
xor
sbb
xlat
jb
pushf
sbb
jno
pop
push
push
pop
test
or
popa
pcmpeqw
int3
xor
xchg
cmp
movsl
rorb
xchg
insb
cmpsl
mov
imul
and
lahf
xor
mov
mov
mov
jmp
fistl
cs
lret
jle
dec
xor
inc
inc
out
sub
mov
push
add
jns
pop
es
stc
jecxz
loope
dec
fidivrl
mov
pop
mov
aas
sti
gs
xchg
int
add
add
sub
aad
adcb
repz
addl
and
cmp
loopne
mov
aam
mov
lock
cmc
aaa
aad
xchg
daa
imul
testl
xchg
lock
xlat
lahf
repnz
xchg
ja
cmp
sub
sbb
nop
sub
fmull
jae
mov
xor
push
cmp
xor
nop
cli
sub
xor
push
mov
mov
fstps
pusha
insl
test
adc
mov
in
inc
cmpsl
test
xchg
rolb
stc
inc
mov
and
xor
pop
and
jno
xchg
icebp
cmp
movsl
adc
jmp
negl
stc
sar
lds
shr
push
test
aad
mov
inc
or
xchg
stc
xor
lods
sub
ret
fsub
or
and
rcrb
xor
and
ja
mov
pop
outsb
pushf
xchg
jecxz
or
cld
sub
mov
inc
adcb
or
adc
int3
dec
mov
cs
fcmovnbe
inc
pop
imul
outsb
cmp
inc
add
popf
dec
sbb
or
lods
push
push
cwtl
cmpsb
push
lahf
cltd
test
rolb
xchg
loop
lods
loop
daa
out
mov
inc
mov
imul
imul
div
hlt
mov
movsl
outsb
and
sub
pop
push
outsl
fwait
dec
sub
and
mov
dec
stos
and
xor
daa
sbb
sbb
aam
mov
leave
push
bnd
xor
in
push
pusha
scas
aas
test
insb
je
push
ret
inc
fs
xchg
movsb
out
das
and
clc
xchg
cmp
pusha
lcall
jno
sarl
sub
sub
jmp
push
subl
jno
arpl
fidivl
cmpsb
nop
dec
mov
inc
and
push
or
imul
pop
adc
xorl
xchg
jg
jge
xchg
cmp
outsb
jmp
xchg
mov
jbe
lret
popf
xchg
imul
fcmovnu
pop
pop
and
cli
xor
sar
test
sahf
mov
mov
sub
addr16
or
dec
pushf
pop
mov
or
mov
inc
nop
jmp
add
push
push
dec
jp
inc
and
test
into
sbb
xchg
jmp
mov
xor
mov
lea
or
lods
mov
out
cmpsb
enter
imul
es
mov
sub
lret
cmpsl
push
jecxz
adc
in
mov
stos
cwtl
fistl
cmp
mov
jge
xchg
ret
out
loop
inc
pusha
xchg
sbb
aam
gs
inc
mov
mov
cmpsl
and
dec
inc
icebp
out
xor
inc
loope
pop
sub
pop
mov
or
cltd
das
cmpl
push
xlat
outsb
je
or
jae
jmp
push
pop
or
jp
loope
repz
and
pop
and
jecxz
dec
fwait
subl
jg
shrl
fsts
jge
movsb
push
or
mov
jns
or
rolb
sub
pop
jb
out
mov
dec
lods
dec
mov
jns
sub
outsl
xchg
popa
into
jno
sbb
in
mov
push
lods
aas
leave
add
mov
and
dec
icebp
jae
in
ret
cmpsl
mov
jle
lcall
mov
jmp
cmp
jno
mov
mov
pop
cwtl
xor
mov
xchg
std
xchg
jp
sbb
jo
fucomi
ljmp
sbb
cmpsb
pop
arpl
es
adc
clc
into
mov
or
mov
or
in
nop
adc
jge
fs
mov
jbe
sahf
xor
jnp
leave
inc
icebp
mov
fcompl
or
ss
xchg
mov
lock
push
pop
dec
mov
xlat
cmp
fimull
mov
mov
dec
test
cwtl
adc
ret
pushf
mov
repz
xor
mov
pop
mov
and
adc
sbb
ljmp
sub
dec
cli
mov
sub
bound
stos
mov
xlat
clc
push
fidivl
je
shr
call
daa
les
xor
sub
outsb
ficoml
inc
dec
dec
mov
lret
mov
adcl
add
shll
add
popa
hlt
xor
into
and
scas
popa
push
and
push
pusha
notb
ret
mov
jmp
mov
repz
ret
inc
push
cmp
inc
or
nop
iret
mov
mov
stos
sbbb
lret
or
cmp
inc
sbb
push
cmp
adc
push
xchg
lods
sub
mov
dec
lods
mov
mov
imul
fldcw
inc
push
es
sub
icebp
aad
inc
test
jge
mov
mov
xor
repz
test
inc
aas
add
inc
fisubrl
add
push
mov
inc
fisttps
in
es
jl
lea
outsb
pop
adc
pop
xchg
loop
cmp
das
repnz
push
js
inc
xor
mov
je
loop
mov
and
xchg
dec
je
pop
or
je
loopne
or
xchg
cli
xor
adc
pusha
addr16
cli
or
imul
lods
aam
or
dec
cmp
jl
mov
aad
dec
sbb
xor
and
mov
dec
add
iret
xchg
int3
cld
lret
pop
es
loope
adc
lock
pop
fadds
pop
clc
xor
icebp
cmp
fisttpll
or
inc
mov
pop
add
cmp
add
enter
hlt
push
add
shrl
sub
nop
mov
stos
shrl
fimuls
adc
orl
mov
sub
addr16
dec
adc
xchg
sbb
mov
adc
flds
cmp
mov
aaa
aad
pop
cld
cmp
sub
in
xchg
mov
rorb
loope
dec
je
icebp
jecxz
mov
repnz
not
into
bound
xchg
add
fstl
inc
mov
add
xor
cmovns
stos
add
pop
push
push
sti
jmp
mov
push
testb
sub
jnp
xchg
icebp
rolb
sbb
push
add
pop
out
xchg
sub
sub
shrl
dec
cmp
shrl
jns
cmp
pop
xchg
in
scas
out
and
mov
cmp
out
xchg
fsubrs
push
lock
push
mov
out
jno
sbb
jne
push
rcr
push
xlat
xchg
inc
xor
add
les
inc
loop
sbb
shrl
xchg
xor
ret
stos
test
or
call
mov
pop
pop
bound
jb
enter
in
sub
in
push
lret
mov
xor
cmpb
nop
cld
subb
push
loopne
push
sub
lods
jno
mov
and
popa
mov
sub
ret
dec
daa
test
mov
movsl
mov
inc
outsb
bound
cs
in
add
js
dec
lods
cmp
xchg
push
xor
pop
fwait
cli
push
and
or
or
int
adc
sbb
test
andb
dec
test
pushf
hlt
test
inc
add
faddl
ds
mov
xchg
out
dec
sbb
sahf
ror
cli
add
stos
and
xor
fcomps
ljmp
icebp
adc
xchg
inc
fildll
xchg
hlt
imul
test
in
mov
mov
aad
jns
rorl
fcoms
out
jl
rorb
test
mov
jbe
add
sti
cli
push
mov
add
lcall
xor
mov
icebp
ret
lahf
out
je
mov
pop
out
shl
cmp
insl
adc
push
sbb
mov
xchg
pop
xchg
fs
inc
ret
fwait
les
subb
dec
jle
jp
lret
mov
dec
sahf
out
inc
sub
push
mov
cli
push
mov
dec
pushf
sbb
shll
jl
loop
xchg
xor
dec
sub
lock
mov
push
cmp
mul
jmp
movsl
mov
mov
mov
push
dec
int3
pavgw
or
lods
adc
inc
stos
loop
out
mov
ja
xchg
clc
add
push
dec
cmp
lods
mov
movsl
mov
push
xor
and
adc
int
sub
lds
ja
and
cmpsb
dec
and
mov
sbb
ret
adc
mov
pop
test
repz
pop
lret
ret
lcall
sbb
add
dec
cmpsl
call
arpl
fldenv
enter
stos
in
lods
and
loopne
xor
mov
mov
mov
inc
xor
mov
movsb
test
fdivr
sarl
fwait
dec
stc
bound
enter
jg
das
fdiv
jge
push
sub
lahf
xchg
cs
and
stos
pop
test
sti
mov
rorl
jnp
sti
mov
mov
inc
dec
sti
mov
xchg
lcall
pop
jno
fs
enter
jo
and
mov
ret
fiadds
ljmp
cwtl
loop
scas
in
cmpsb
push
dec
jb
push
nop
sbb
mov
outsb
cmc
jbe
loope
inc
push
xor
stc
dec
cmp
testl
adc
por
and
mov
mov
rorb
fsts
aam
stos
xor
sti
popa
add
mov
outsl
fnstsw
dec
fistpll
jmp
int3
and
test
adc
fcmovbe
sti
jge
cs
jno
sbb
ja
int
rorl
and
jmp
jae
mov
push
movsl
shrl
dec
adc
mov
movsl
icebp
sub
push
push
mov
push
fdivs
dec
test
jnp
les
or
xchg
jg
and
lock
inc
jns
test
or
dec
add
stc
ficoms
xlat
sbb
xchg
lahf
jmp
xlat
xchg
cmp
lcall
inc
in
jle
pop
incb
cmc
mov
mov
mov
mov
int
pop
leave
xor
mov
iret
out
cmpsb
cmpsl
xchg
or
xor
lods
mov
gs
lret
std
sbb
in
pop
xchg
mov
pusha
add
lret
je
push
lcall
push
xlat
dec
xor
push
in
test
xchg
xchg
notl
add
xchg
dec
dec
jmp
mov
push
sbb
popf
scas
pop
mov
mov
or
fnstenv
pop
adc
add
adc
fiaddl
mov
adc
nop
and
pop
jo
data16
hlt
pop
jnp
or
jno
lock
aad
sbb
mov
out
xchg
loopne
call
add
repnz
pop
fs
sbb
xor
divl
pop
in
xlat
cmp
xchg
mov
repnz
cmp
add
ret
xchg
adc
jmp
push
leave
mov
pop
xor
hlt
mov
sub
int3
sub
aas
inc
and
lcall
pop
jp
fstpt
ret
or
ret
testb
cltd
mov
inc
sbb
push
xchg
and
loope
in
ljmp
decb
inc
push
xchg
cmpl
adc
mov
or
outsl
xor
and
jo
cld
hlt
fdivs
push
add
inc
mov
bnd
mov
pop
mov
lahf
push
popa
icebp
cli
or
ja
je
iret
ds
adc
xor
jbe
push
jb
xchg
scas
dec
push
mull
mov
stos
xchg
dec
cmovno
xchg
insb
cmp
daa
outsl
gs
push
in
lods
cmp
das
imul
lahf
push
mov
out
ljmp
add
in
adc
movsb
out
push
jecxz
push
outsl
or
aas
in
test
adc
pop
push
mov
mov
xchg
in
clc
leave
jle
into
push
push
dec
movb
ret
scas
or
sbb
jne
mov
inc
jge
cmp
cmpsb
aaa
sbb
pop
mov
pop
xlat
mov
mov
jns
mov
adc
sub
xchg
lds
mov
cmp
xor
stos
dec
lahf
adc
movsl
sbbl
sbb
ror
enter
and
push
aam
rcll
rcrb
xchg
and
xor
jno
xchg
imul
punpckhbw
rcrl
inc
or
out
or
cmp
xor
movsb
jmp
dec
pop
jecxz
in
dec
adc
roll
adc
pop
fs
test
mov
pop
ja
cltd
ja
inc
rclb
out
sub
adcb
xlat
sub
mov
sbb
push
test
sti
aas
mov
and
in
mov
push
jne
xor
gs
loop
addr16
test
sbb
jl
jb
sbb
into
popf
cmp
mov
jg
sub
inc
test
push
pop
pop
ror
fistl
pop
test
ret
dec
mov
jne
fstpl
xchg
sbb
cld
shrd
je
add
out
mov
stos
mov
sti
test
gs
pop
push
popa
in
cmpsb
jmp
jno
sub
aad
push
mulb
test
mov
pop
mov
sub
ja
rolb
xor
divb
cmpsb
push
fistps
je
stos
mov
push
cltd
and
dec
pop
js
mov
aam
repnz
and
add
into
fimull
shl
bound
mov
mov
test
mov
jmp
xor
out
or
sub
pop
pop
adc
cmpsl
sub
aad
lret
mov
or
push
icebp
sbb
cmp
sub
sub
mov
xchg
pop
mov
cmp
push
cmpsl
ja
popf
mov
arpl
sbbb
fdivrs
jg
cs
loopne
push
or
fcmovnbe
mov
sbb
xor
out
fistl
pop
sub
xchg
inc
mov
andb
xchg
lcall
in
inc
jnp
and
cwtl
ficompl
push
inc
or
mov
inc
sti
cmova
pop
adc
cmc
rsqrtps
push
push
out
jb
aad
xor
sti
inc
add
lret
aad
adc
inc
rorl
cmpsb
jp
jmp
and
fbld
pop
ja
fmuls
js
fsubrs
cmp
jb
mov
shlb
pop
push
rcrb
lods
loop
pop
subb
adc
and
cmp
xchg
icebp
fisttpl
insb
jge
mov
jp
repnz
mov
mov
ds
outsb
mov
jmp
movsb
ret
jae
jns
aam
out
push
out
jns
cmp
cwtl
cmpsl
add
mov
pop
sbb
pop
js
add
aaa
aad
cmp
fstpt
adc
lods
mov
xchg
int3
xchg
inc
jnp
mov
addr16
aad
in
xchg
imul
xchg
icebp
lcall
daa
xchg
fcmove
cli
shll
cs
jne
mov
push
adc
push
push
ret
pusha
dec
into
leave
fwait
popf
pop
add
dec
out
xchg
hlt
nop
icebp
into
xor
dec
mov
loope
in
imull
adc
insb
lcall
in
js
adc
ffree
lods
mov
test
cmpsb
xchg
jno
mov
cmpsl
adc
xchg
addr16
inc
mov
cmp
pop
push
xchg
sub
pop
into
xchg
loopne
jae
adc
movsl
and
subl
aas
xchg
xor
int3
aas
aad
fucomp
divb
jae
cld
sbb
xor
out
push
cmp
lret
imul
cmc
int
pop
cld
sub
repnz
push
gs
mov
notb
pop
testl
fisttpll
sub
mov
push
lcall
pop
les
test
jae
push
arpl
cmpsb
cmp
scas
sbb
cmp
mov
hlt
ds
fsubrl
jne
out
lret
xchg
imul
mov
bound
test
cmc
jecxz
outsl
add
adc
jns
pop
jle
clc
push
movb
rclb
nop
push
stos
add
push
sbb
fnstcw
and
mov
mov
fdivrp
sub
cmc
pop
xor
mov
pop
ljmp
out
cmp
lock
shll
repz
push
decb
pop
pop
test
jo
mov
fsts
daa
fxch
adc
rcrl
inc
imul
insb
out
lahf
xchg
add
loop
sarb
add
jle
and
xor
or
and
lret
cmp
push
sbb
adc
loope
pusha
fcmovnbe
sbb
loopne
mov
orl
jmp
mov
cmp
mov
lock
xor
insl
int3
sub
imul
dec
adc
es
test
mov
or
jnp
xor
pop
test
into
mov
inc
cmp
fucomip
scas
sahf
cmp
rcr
inc
push
sbb
and
ffreep
mov
cld
aaa
adcb
decl
adc
imul
aas
pop
dec
jmp
or
mov
cmpsb
mov
jle
rcll
jo
stos
movsl
jmp
stc
icebp
ds
test
xchg
jb
testl
lock
mov
cmpsb
mov
or
xchg
push
cli
jmp
rcr
xor
cmc
cmp
scas
adc
in
mov
xor
icebp
dec
add
push
loopne
push
sub
xchg
pop
ljmp
outsb
sbb
or
data16
frstor
sub
adc
jp
xchg
pop
or
imul
icebp
push
imul
mov
icebp
aad
mov
or
shl
push
mov
std
repnz
arpl
dec
jg
pop
loopne
inc
or
scas
test
pop
pop
fbld
sahf
repz
in
add
sbb
lods
pop
xchg
out
add
xchg
inc
sbb
adc
mov
iret
inc
sub
add
cmp
ds
mov
cmp
ret
popl
in
imul
cs
lods
filds
daa
sub
jnp
xchg
xor
pop
mov
mov
mov
pusha
xlat
add
jbe
insb
movsb
inc
jge
pop
movsl
popf
xchg
jb
dec
add
cli
fmul
in
push
inc
push
loopne
add
sbb
aad
aad
cmp
sub
jne
sbb
scas
aad
jo
scas
les
cli
inc
rcrb
nop
insb
xor
or
lret
fcoml
pop
imul
rcll
push
mov
cmp
mov
sbbl
shrb
sub
xchg
iret
pop
push
cwtl
or
sub
sub
stos
push
shl
pop
sub
push
adc
subl
lcall
js
imul
or
movsl
or
mov
lahf
inc
sub
rcr
icebp
mov
repnz
mov
insb
pop
jns
lret
test
mov
and
xchg
adc
loopne
xlat
dec
cld
push
int
mov
aam
xor
pop
xor
idivl
cmp
lcall
dec
int3
or
add
mov
shlb
pop
arpl
int3
or
pop
sbb
sbb
adc
pop
inc
insb
int3
test
data16
pop
mov
dec
xor
stos
and
sti
int3
fsubrs
inc
in
iret
hlt
xor
enter
mov
cli
adc
je
dec
adc
rcll
jecxz
xchg
and
cld
and
cltd
je
dec
notl
push
cli
push
subl
loopne
cli
push
fildl
xchg
loope
fdivrl
xor
or
add
jmp
imul
pop
lcall
sbb
popf
leave
mull
jl
sbb
rol
mov
fisubl
push
mov
xchg
cmpsl
ret
outsb
dec
push
nop
xor
mov
mull
test
xchg
lret
add
ss
rorb
pop
sub
xchg
inc
pop
call
inc
call
scas
stos
imul
push
addr16
push
stos
jns
pop
inc
pop
ja
cmp
cmp
in
neg
cmp
push
in
ja
fwait
mov
xor
gs
mov
fdivr
mov
sub
push
xor
fistpl
xlat
add
jle
stos
test
pop
movsb
dec
fimuls
cmc
shll
enter
xchg
pop
lcall
ljmp
sub
push
or
int3
add
imul
jp
mov
jne
ja
bound
in
popf
adc
cmpsl
adc
stc
aaa
jmp
pop
fwait
mov
jge
inc
mov
out
ret
mov
call
shr
repnz
sti
jmp
mov
pop
inc
push
cmpsl
mov
add
push
inc
mov
xor
xchg
mov
jns
sar
push
xchg
jecxz
and
popa
mov
pushf
repnz
jbe
push
pop
dec
cmpsl
ds
push
cmpsl
pop
test
push
icebp
hlt
leave
push
call
jb
lods
out
mov
mov
jae
in
inc
jae
dec
cmp
mov
imul
mov
mov
xor
xchg
lcall
dec
roll
in
and
cltd
cltd
ret
sbb
mov
dec
and
mov
icebp
fnsave
jns
scas
dec
es
and
jbe
jno
pop
cwtl
mov
lahf
mov
adcb
xchg
movsl
and
in
pop
nop
mov
nop
in
mov
mov
stos
enter
add
xor
adc
xchg
incl
push
mov
mov
mov
fcmovbe
xchg
and
lret
jp
lret
sbb
push
mov
add
xchg
fdivrl
daa
jle
fstpl
mov
test
cs
stc
inc
stc
cmp
sbbl
sbb
add
icebp
push
fsubs
out
pop
shl
cmpsb
faddl
pusha
pushf
andb
mov
movsl
mov
mov
sbbb
or
push
negl
mov
js
leave
out
mov
jno
and
mov
clc
jnp
outsb
sti
push
jl
mov
cmp
pop
inc
je
adc
rclb
xor
push
mov
push
pop
rcl
aam
stos
in
xchg
jle
push
xor
xchg
insl
mov
cmp
repnz
push
pop
cmp
rcrb
fisubs
cmp
bound
ljmp
push
jns
or
rep
clc
les
jge
sbb
cmp
jle
test
jo
idiv
test
daa
dec
imul
xor
in
xor
push
mov
ja
push
pop
test
inc
fwait
cmpb
xor
mov
jle
call
jecxz
insl
test
andb
push
lcall
call
jg
fisubrs
xchg
dec
insl
nop
outsl
inc
les
popa
xor
in
sub
xchg
subb
shr
inc
mov
push
or
arpl
mov
faddl
into
jp
popa
cmp
dec
into
not
pop
push
sub
sti
push
cmp
sub
xchg
and
out
mov
out
sbb
pop
in
xchg
clc
push
mov
or
xchg
shl
or
xchg
or
fdivrs
mov
outsb
movsb
pop
dec
xor
cltd
decb
inc
jl
mov
mov
cwtl
xchg
test
lods
stos
scas
inc
pop
stos
popf
xchg
sbb
inc
fnstsw
pop
add
cmp
and
cld
test
inc
adc
and
adc
mov
push
sbb
rcrb
cmp
inc
std
test
lret
int3
xor
push
sahf
pop
mov
shlb
pop
imul
aaa
xchg
shrl
pop
push
dec
jbe
push
insb
bound
test
insb
imul
ljmp
dec
pop
ss
fldcw
xlat
arpl
pushf
mov
imulb
fstps
jnp
inc
adc
cmpb
xchg
enter
sub
pop
fcmovb
imul
ret
xchg
add
or
data16
aas
iret
inc
jb
push
jnp
bound
mov
sbb
fwait
sti
lods
mov
repz
dec
push
mov
sti
jne
lock
xor
inc
sub
jae
sbb
inc
mov
call
push
push
out
xchg
call
aad
pushf
aaa
les
sub
into
xor
les
mov
sbb
sbb
sub
and
dec
loopne
push
popl
add
xchg
fwait
sub
ds
mov
insb
xor
insb
cmpl
or
nop
add
sbb
aas
or
movsb
cmpsl
xchg
insb
cmp
fstpl
adc
mov
aaa
outsb
push
sub
outsb
push
pusha
decl
mov
xchg
cld
je
je
adc
es
xlat
lahf
pop
mov
sbb
push
cmpsl
repz
mov
mov
sysret
or
mov
sbb
and
sub
dec
aaa
xchg
mov
dec
pop
loope
push
push
lret
dec
aaa
hlt
icebp
mov
or
xlat
cmp
cwtl
outsb
sbb
jbe
add
pusha
test
push
cmp
cmp
lea
clc
loop
push
imul
mov
and
sub
add
mov
fdivrl
xchg
inc
pop
mov
jmp
sbb
and
xor
mov
call
push
stos
jne
pop
test
pop
icebp
push
or
push
shrl
mov
inc
pop
dec
fwait
add
test
decb
sbb
loop
sub
jno
push
dec
mov
mov
jae
les
xlat
inc
xchg
jns
and
jbe
mov
mov
xor
aaa
or
loop
mov
outsb
jl
aad
pop
push
jmp
xchg
inc
sub
insl
sti
xchg
and
aaa
xchg
sub
loop
sbb
lcall
gs
out
shrb
push
pushf
or
iret
iret
xchg
mov
jnp
cmp
movsl
je
pop
ret
mov
idivb
sub
je
push
mov
fsubrs
xchg
cmp
jp
cmp
ud2
test
test
add
outsl
dec
stos
push
test
add
aam
addr16
mov
out
in
into
movsl
bound
aam
sbb
pop
test
enter
or
mov
push
push
es
shl
push
mov
push
mov
loop
cmpsl
jmp
ss
inc
cmp
mov
jb
rorb
cmpsl
enter
lahf
insb
ljmp
mov
sahf
add
add
repnz
push
je
inc
push
cmpsl
lret
sub
les
imul
sbb
cmp
dec
push
inc
jle
sarl
repz
sub
xchg
sub
lods
sub
or
insb
cmp
leave
cld
pop
jp
lret
adc
ret
inc
sbb
in
jle
mov
popl
and
dec
inc
std
adc
mov
mov
pop
adcb
test
nop
jo
sbb
adc
dec
sub
mov
mov
ss
jle
adc
lret
add
add
cmpsb
jecxz
and
roll
inc
dec
rorb
pop
std
mov
dec
xor
adc
push
xchg
xchg
mov
les
and
rcl
out
das
ret
sti
mov
ja
cmp
stos
scas
mov
stos
decl
mov
xor
loopne
outsb
mov
push
xchg
pop
arpl
mov
or
sbb
lcall
imul
xor
push
xor
xchg
add
pop
stos
mov
in
cmp
cwtl
sbb
push
std
rdtsc
ss
dec
xor
mov
mov
repnz
and
mov
xchg
fld
xlat
shlb
sub
inc
mov
pushf
xor
xchg
ja
sahf
mov
pop
jle
aad
xchg
mov
mov
cmpsb
ficoms
cmp
push
imul
mov
cmp
cltd
popf
jmp
xor
out
sbbl
fildl
addl
js
or
ret
jae
or
adcb
jmp
jne
pop
lods
add
mov
outsb
pushf
pop
repnz
insl
sbb
pop
pop
and
mov
ss
je
cld
pop
loop
js
jo
xchg
and
inc
daa
add
inc
aad
dec
mov
je
mov
cmpsb
call
adc
aam
jb
jnp
push
insl
pop
sub
adc
add
aad
mov
fcomp
stos
enter
in
inc
sub
sub
pop
dec
adc
es
in
push
cld
jns
subl
pop
xchg
inc
stos
int
jl
sub
xorb
jne
movaps
xor
std
int3
daa
and
cltd
push
push
adc
push
push
cld
loope
mov
in
inc
add
mov
add
cmp
shll
fstpt
dec
hlt
mov
lret
mov
jge
movsb
mov
add
mov
dec
fs
jmp
or
jb
or
xor
mov
nop
outsb
fcmovu
out
sbb
cld
and
rorl
mov
decl
or
lock
jne
clc
cmp
push
or
sti
arpl
dec
shrl
pop
daa
leave
and
add
movsl
stos
shrb
sub
dec
aaa
inc
test
pop
pop
mov
cmp
or
mov
cmp
sbb
jg
mov
add
cmp
push
xchg
inc
dec
mulb
inc
sub
jl
cmc
loop
loop
test
int3
mov
fcompl
mov
xor
cs
call
int3
jns
or
subl
pop
cmp
cwtl
jne
les
lods
adc
fisttps
jmp
iret
push
adc
mov
sub
fsubrl
mov
bnd
outsl
mov
lahf
leave
jg
cwtl
sub
out
cmp
dec
or
mov
iret
fs
lock
aaa
sub
shrb
out
stos
in
adc
stc
dec
sub
fmulp
jns
pop
cmp
jge
inc
repnz
and
xchg
or
mov
js
rcl
jl
fbld
mov
lds
mov
mov
test
mov
and
inc
mov
and
pop
pop
lea
mov
rep
push
mov
iret
movsl
cmp
inc
mov
in
lahf
mov
outsl
xchg
out
jno
es
jo
popf
mov
cwtl
sbb
mov
in
push
jle
inc
loop
inc
nop
jle
jge
icebp
loope
push
mov
fidivrl
push
pop
cmp
cmp
sub
lock
pop
adc
xor
mov
in
ljmp
pusha
dec
mov
xchg
scas
repnz
in
loopne
push
icebp
mov
xchg
mov
pop
jo
roll
dec
movsl
xchg
orl
mov
jp
and
mov
inc
cmpsb
mov
shrb
cld
xor
mov
jle
pop
cli
mov
lods
add
rcr
das
sub
out
in
imul
mov
popa
add
rol
pop
pop
andl
rcrl
std
adc
fidivrl
bound
push
mov
in
cmpsb
cmc
jg
sbb
hlt
xchg
ja
insl
pop
fdivrp
inc
or
add
fsubrl
loopne
cmp
call
outsl
add
in
mov
outsb
sbb
sub
add
or
roll
push
iret
adc
sbb
mov
mov
add
out
sub
ss
and
pop
mov
insb
imul
sbb
sub
mov
in
roll
rorb
and
mov
mov
cmpsb
movsb
popf
and
movsb
xlat
shrb
fwait
scas
mov
lret
scas
sbb
sub
push
sbb
shrl
xor
in
arpl
add
imul
das
jl
cmc
ljmp
fwait
cmpsb
cmp
adc
add
cmpb
fdivs
push
mov
enter
enter
cmpsb
mov
int3
xchg
pop
fnstenv
sbb
test
pop
push
sbb
xor
sbb
xchg
push
aad
in
imul
clc
xorb
mov
jp
inc
sbb
jnp
jb
daa
test
std
mov
arpl
imull
inc
add
enter
add
add
or
roll
sahf
sbb
add
xchg
into
cmp
ds
jb
shll
sub
or
mov
xchg
fildll
and
cmc
adc
loop
imul
ss
pusha
cmpsl
xchg
pop
mov
fnsave
cltd
push
dec
dec
xchg
test
jo
inc
jbe
mov
adc
movsb
in
cmp
addr16
in
lods
or
rol
test
sub
mulb
jl
mov
pop
in
mov
dec
sbb
sub
fidivs
shl
fistpl
adc
jmp
aas
dec
int3
ss
popf
es
lret
push
xchg
sub
scas
bound
cmpl
inc
das
idivl
divl
in
jns
mov
arpl
sbb
ret
sbb
push
pop
js
sbbb
mov
push
adc
hlt
jnp
aad
and
sbb
pop
dec
popf
aam
imul
inc
mov
jo
in
jnp
xchg
ja
nop
cmp
scas
fadds
add
scas
mov
push
add
jb
mov
stos
jmp
jb
mov
jmp
mov
mov
mov
loop
roll
jnp
mov
mov
push
adc
cwtl
jle
sub
adcb
and
xor
in
fimull
in
jns
loop
dec
xchg
cmp
jl
xor
adc
test
cs
popa
int
mov
iret
sub
aaa
pop
mov
stos
loopne
iret
rcrl
bound
mov
je
pop
jne
lods
jbe
inc
xchg
in
into
cmpl
cmpsl
sub
outsb
mov
dec
pop
andl
bound
repnz
jbe
or
push
sub
dec
test
jmp
out
mov
shll
sub
imul
jl
fldl
push
aad
insl
dec
repnz
sub
xor
push
hlt
sbb
xchg
dec
dec
das
nop
dec
inc
mov
test
notb
pop
scas
add
fs
ss
scas
testb
mov
movsl
mov
mov
mov
mov
fldcw
addr16
jp
jmp
add
insl
push
mov
repnz
in
call
mov
xchg
dec
outsl
or
push
add
jge
je
outsb
lods
mov
outsb
and
and
jl
adc
dec
daa
push
in
cwtl
shlb
xchg
outsb
jle
dec
inc
pop
inc
sub
adc
mov
loope
sti
jp
xlat
inc
dec
push
repz
pop
push
inc
cmp
adc
out
pop
frstor
and
push
mov
push
ljmp
xor
fstpl
push
aad
dec
ret
mov
insl
lods
addr16
in
je
icebp
gs
cmc
pusha
dec
xchg
xor
cli
into
ret
add
adc
cmpsb
addl
test
xor
cmp
and
fisubl
dec
inc
pop
pop
cmp
mov
je
mov
pop
ds
cltd
inc
add
cmp
clc
dec
push
fsubr
dec
scas
mov
outsb
test
imul
jb
xor
aaa
into
xchg
icebp
xor
mov
mov
inc
cli
jbe
sbb
mov
clc
xchg
adc
push
sub
loop
lahf
sti
insl
outsl
insl
pop
mov
test
repnz
decl
push
cmp
mov
fldenv
cmp
pusha
xlat
adc
inc
insl
imul
cmp
mov
xor
sarb
sub
add
movsb
aad
sahf
aam
pusha
jno
xchg
lea
pop
pop
int
sub
js
push
mov
cwtl
adc
das
idivl
repz
into
push
push
and
cmp
inc
dec
les
lahf
xor
inc
mov
add
xlat
pop
pop
das
scas
out
dec
fnstcw
inc
enter
shll
mov
mov
outsl
dec
repz
jae
sub
into
std
adc
mov
stos
mov
push
int
ljmp
xor
sub
leave
fbstp
popf
push
push
aas
mov
mov
inc
incb
out
bound
xchg
in
mov
jns
adc
mov
sti
shrb
adc
std
dec
scas
jp
mov
dec
mulb
mov
jnp
xor
stos
popf
xchg
dec
sbb
adc
jae
pop
xchg
enter
push
mov
mov
in
and
lods
into
fs
xlat
fisttps
add
aas
inc
fiaddl
inc
push
pop
adcl
dec
jle
fwait
pop
frndint
hlt
sahf
ljmp
insl
sbb
je
or
movsl
andl
mov
or
xor
jl
loop
jl
and
push
data16
mov
clc
pop
iret
adc
dec
pop
mov
cmp
cmp
mov
aam
push
fucomi
mov
xchg
mov
push
bound
xchg
push
jo
daa
or
shl
repnz
stc
cwtl
xor
xchg
pop
mov
clc
push
mov
jge
mov
adc
dec
mov
ret
test
bound
cmp
inc
sbb
roll
daa
ret
ss
dec
cmp
inc
mov
push
xor
aad
popa
dec
xchg
mov
std
sub
jg
arpl
popf
mov
sbb
sbb
mov
jle
ds
je
cmp
pop
arpl
addl
push
push
mov
inc
test
enter
pop
jno
pop
jmp
ljmp
or
dec
mov
inc
and
sbb
cmp
pushf
cld
mov
out
pop
sub
scas
fsubrp
pop
and
aam
dec
or
xchg
dec
ljmp
sarl
arpl
dec
ret
sub
pop
jmp
int3
gs
lret
pop
inc
cli
lcall
lcall
adc
cmpsb
lock
xchg
xchg
cld
jge
ss
lcall
outsb
loopne
les
push
fbstp
ja
shll
cmpsl
orb
mov
mov
dec
jle
decl
std
movsl
xlat
cltd
out
xlat
xorb
add
and
xchg
xor
xchg
xchg
mov
std
shr
pushf
push
sbb
aad
or
shll
jp
daa
loope
seta
xor
les
insl
popf
mov
sbb
inc
push
or
jecxz
ret
cmp
sbb
bound
inc
gs
and
adc
dec
push
xor
pop
arpl
add
mov
lahf
mov
cmp
lret
data16
ss
dec
xor
add
mov
push
mov
imul
add
in
adc
ret
test
cmp
outsb
sub
leave
fcompl
mov
nop
and
xchg
fdivrs
and
lods
cltd
rcll
mov
mov
enter
cld
push
or
and
push
fnstsw
loop
mov
fwait
test
lods
leave
adc
cs
lcall
inc
movsb
out
mov
loopne
cltd
pop
adc
cmpsb
pop
arpl
ss
stos
rcrl
popa
add
aaa
je
fcompl
cmp
imul
adc
jge
inc
ds
icebp
ja
test
xchg
pop
lock
push
inc
inc
dec
ss
mov
mov
cmp
mov
sbb
mov
and
dec
and
mov
xchg
and
leave
scas
jo
icebp
mov
mov
push
ljmp
push
test
es
xor
popa
sbb
inc
cmp
pop
insb
xchg
mov
das
mov
sti
rcl
shll
enter
mov
adc
pop
inc
shl
orps
rolb
iret
xchg
pushf
jle
or
jp
aam
pusha
and
or
lds
out
jno
jp
sub
or
arpl
jmp
pop
into
sbb
pop
movsl
je
jp
scas
xchg
mov
or
cmp
cmpsb
pop
pop
ret
loop
sbb
add
or
pop
popf
and
sub
xchg
pop
in
jae
cld
mov
test
add
adc
ja
repnz
xchg
cmp
mov
outsb
out
stos
cld
ret
fwait
xchg
mov
in
jge
bound
lods
and
outsl
fucom
daa
lret
lods
in
dec
push
stc
sbb
pushf
push
fmuls
andb
adc
add
fistl
xorb
mov
in
test
je
cs
imul
adc
mov
mov
and
cmp
pusha
adc
cwtl
cli
cld
scas
mov
fs
xchg
add
inc
cwtl
jge
mov
les
xor
andb
lret
push
pop
lock
mov
mov
sub
mov
pop
mov
and
inc
push
lea
push
mov
fidivs
lahf
push
repnz
adc
mov
fnstcw
popf
dec
jmp
es
lods
clc
lea
xor
and
cmp
iret
cli
test
xchg
pop
xor
mov
mov
mov
dec
jb
shlb
sbb
mov
call
xor
in
cmp
test
testl
cltd
mov
xor
jns
push
adc
and
or
bound
out
mov
pop
loope
aaa
fsubrs
out
dec
scas
lret
dec
jb
push
xchg
adc
rclb
aas
decb
lret
cmp
pusha
push
jge
pushf
cmpsl
lods
xor
dec
mov
add
mov
ret
lret
and
sbb
mov
cs
dec
push
gs
jg
scas
add
inc
jne
loopne
testl
cltd
and
fadds
mov
cmpsb
test
add
fmulp
adc
adc
in
xorl
out
test
rorl
push
mov
ljmp
inc
es
fwait
mov
fists
or
jecxz
fisubrs
lret
std
xlat
arpl
fnsave
mov
inc
nop
ss
icebp
xor
shl
fisubs
addr16
mov
call
pop
or
loope
sbb
int
mov
shrb
inc
cmp
test
xchg
in
clc
cmc
adcb
push
rcrb
xchg
fidivrl
rcll
movsb
push
lods
mov
insb
fdivr
cmpsl
adc
jecxz
test
loope
pop
dec
pop
stc
push
fdivrs
xlat
push
nop
xorb
aaa
jg
int
arpl
xchg
jno
push
push
push
xchg
pop
lcall
push
jecxz
and
bound
and
push
cs
cmp
scas
pusha
mov
sbb
and
leave
mov
cmp
xchg
repz
lret
movsl
add
add
inc
ret
test
add
out
and
jle
xchg
push
adc
dec
aam
adc
mov
adc
or
fldl
pusha
ret
xchg
inc
jne
mov
ss
jecxz
test
in
or
arpl
cmp
cmp
rorl
outsl
daa
iret
sub
xchg
pushw
push
clc
shl
push
or
or
call
add
gs
or
into
inc
bound
jge
mov
cmp
loope
ret
and
inc
test
mov
inc
or
mov
cli
iret
dec
adc
fnstcw
adc
repz
popa
fsubr
adc
pop
jbe
mov
xor
mov
loopne
adc
mov
dec
sub
mov
mov
rorb
pop
shrb
add
adc
in
jns
xchg
ret
jo
mov
je
mov
dec
add
sbb
stc
dec
and
sti
arpl
pop
xlat
shlb
push
xor
pop
popa
in
mov
call
jbe
cmp
popa
stc
cmp
sub
inc
and
dec
cmp
adc
out
sbb
mov
or
xor
scas
daa
shlb
lea
movb
inc
mov
pop
roll
jp
jg
mov
push
or
popf
push
jge
insb
sti
sbb
dec
xchg
push
xchg
cwtl
cmp
cltd
imul
sub
inc
mov
aad
push
inc
inc
test
cmp
pop
xchg
into
xchg
loope
lret
mov
push
mov
loopne
outsl
xchg
ds
mov
cmp
popf
jge
cmpsl
in
sub
push
jecxz
les
fmuls
lret
jb
cltd
lret
insl
pop
adc
or
es
pop
push
out
out
pop
jo
shl
dec
pop
mov
mov
arpl
sbb
je
fldl
sti
lock
movsb
mov
imul
xchg
pop
inc
popf
or
and
mov
push
pause
dec
mov
lods
fnstenv
sbb
cld
xchg
add
mov
insl
rcll
cltd
mov
jne
lret
fcom
out
pop
scas
mov
cmp
sub
push
es
fmull
pop
ljmp
mov
push
pusha
pop
dec
fisttpll
mov
inc
in
fbld
inc
inc
jno
adc
call
ja
pop
mov
adc
out
xor
cld
inc
fwait
pop
mov
mov
adc
xlat
pop
and
sbb
ds
jmp
in
mov
addr16
pop
pop
jbe
ficompl
ja
repnz
pusha
call
lea
test
push
xchg
pop
lret
filds
jle
mov
and
sarb
xor
outsl
and
stos
mov
enter
sub
out
pop
jle
arpl
ja
cmp
mov
pop
mov
cmpsl
out
pop
pop
int
pop
mov
pop
pusha
decb
lahf
sub
and
pop
stos
adc
stos
lcall
inc
ljmp
xchg
fstps
push
imul
add
cmp
dec
call
in
pusha
sbb
dec
jns
les
adcl
dec
out
add
cmp
jl
xor
call
pop
aad
cmp
add
jg
cld
jl
pop
sti
ret
inc
inc
in
add
and
fimull
insb
push
lcall
xor
sahf
push
je
std
mov
ja
jmp
lgs
mov
mov
mov
xor
and
fldl
push
inc
adc
cmc
mov
aad
int
mov
xchg
pop
imul
int3
pop
mov
scas
add
adcl
adc
popf
and
or
or
scas
sbb
inc
dec
gs
or
mov
scas
into
jno
insb
mov
hlt
popa
cmp
fcmovne
inc
xchg
mov
loope
sbb
rol
jb
mov
xchg
mov
lret
popa
sub
movsb
add
mov
test
mov
mov
popa
jge
insl
jns
or
je
xchg
and
data16
adc
jne
hlt
mov
jecxz
lock
in
out
repz
sbb
cmp
cli
jnp
pop
xor
lcall
test
roll
sbb
stos
repnz
jle
sub
cmc
xlat
mov
lret
adc
push
fwait
lret
xor
mov
adc
arpl
mov
xor
sub
sbb
ds
cmp
in
jno
dec
fidivrl
xchg
pop
push
cmp
push
jbe
and
out
push
xchg
imul
inc
bound
mov
sub
out
addr16
test
fcmovu
xchg
pop
cmp
dec
mov
in
aam
xchg
mov
or
mov
fdivs
sahf
scas
aad
push
inc
add
jbe
jp
xchg
adc
pop
sbb
mov
or
dec
fs
pop
mov
push
xor
push
mov
aam
add
jl
add
pop
lock
cmp
and
ror
or
mov
bound
dec
jnp
int
push
or
inc
nop
iret
or
xchg
inc
or
fsubl
int
addb
ret
add
lret
lock
push
aad
shlb
sub
shrl
push
call
in
call
out
adc
test
xchg
adc
xchg
fcoml
nop
movsl
rcrl
rcr
ja
sub
fildl
sti
fidivl
mov
adc
sarb
imul
push
add
add
lea
sub
sti
ret
push
dec
arpl
cmp
lret
aam
adc
inc
testl
jo
adc
xchg
stos
push
sti
fs
outsb
jp
fidivl
sbb
stos
out
push
out
gs
fwait
mov
inc
or
rcr
mov
sub
cmp
inc
lods
fucom
movsl
sbb
das
shll
mov
and
dec
pop
and
lret
dec
in
adc
dec
sbb
mov
stos
push
adc
sbb
std
addr16
mov
xor
cli
jb
fildll
mov
imul
or
in
stos
mov
mov
sub
xchg
xlat
fsub
cmpsb
les
jae
sub
cmp
je
sti
insl
out
sub
mov
xlat
mov
mov
and
imul
mov
ret
imul
popf
cmp
push
movsb
stc
inc
mov
imul
xchg
jno
aas
or
test
jge
dec
xchg
idiv
mov
mov
add
dec
gs
gs
subl
popf
les
lret
outsl
pop
mov
cmp
ss
addr16
cmp
push
test
or
mov
jo
push
inc
rorb
lods
mov
pop
repz
outsb
fdivrl
adc
mov
push
insb
cmc
sub
mov
arpl
pusha
sarl
shlb
jbe
mov
jecxz
cmp
shlb
insb
pusha
mov
cmp
gs
sub
sti
movsl
jge
sub
push
inc
sahf
pop
mov
test
loope
push
mov
sarl
push
jns
xor
repnz
bound
pop
popa
dec
cltd
shll
push
scas
push
xor
mov
mov
fidivs
insb
ds
loop
or
mov
daa
add
loopne
jmp
push
mov
dec
sub
xchg
and
pop
fnstsw
loopne
arpl
rsqrtps
dec
scas
popa
ljmp
add
push
and
or
xor
out
fsub
mov
mov
insl
sti
or
sahf
push
add
notl
push
pusha
imul
xchg
add
sahf
js
lahf
jge
inc
dec
movsb
mov
std
mov
mov
test
lods
call
adcb
aad
cs
push
add
int3
jecxz
cmp
ds
push
xchg
jb
or
mov
out
add
in
add
jns
adc
adc
arpl
sbb
sbb
jge
cli
clc
inc
sbb
pop
xchg
push
add
sbb
xor
mov
loope
addb
mov
lea
push
jnp
push
ret
int3
xor
std
subb
mov
xchg
mov
or
adc
mov
ss
inc
push
and
push
pop
mov
inc
hlt
arpl
sub
inc
and
adcb
push
jmp
inc
push
pop
sbb
mov
jg
int3
movb
jnp
jg
jecxz
push
jns
and
ljmp
jecxz
int
hlt
mov
test
jnp
jle
sti
ret
outsb
dec
and
mov
push
mov
mov
lcall
cs
fistps
push
xor
inc
and
mov
adc
addr16
std
push
repnz
jle
divl
js
idiv
push
outsb
das
in
dec
stc
or
jmp
mov
mov
push
es
dec
or
mov
cs
sti
in
lret
inc
mov
inc
arpl
aam
cltd
mov
ja
cld
sbb
cltd
fldt
and
adc
pop
cmpsb
rcrb
lahf
xor
pushf
push
push
cmpsb
cmovle
and
jno
je
inc
and
das
add
or
jo
testb
jnp
inc
enter
xor
stos
inc
and
mov
pop
sti
push
xor
lret
lods
dec
push
jge
pop
jno
insb
nop
pop
mov
pop
decb
push
aaa
add
and
inc
int3
les
ret
ja
mov
mov
push
loop
int
jg
in
mov
mov
jle
das
xchg
add
or
cmpsb
test
lods
adc
leave
xor
and
pop
cmpl
pop
rol
fistps
inc
pop
jo
sbb
neg
mov
les
push
lea
repz
out
aas
in
and
inc
mov
pop
das
pushf
sub
or
push
jne
add
add
addr16
push
dec
fsubs
jmp
mov
ljmp
mov
out
loope
and
test
lahf
jbe
test
shr
subl
fwait
or
movsb
jb
jo
xchg
shll
push
std
adc
adc
add
cmovbe
es
dec
push
shl
mov
mov
sub
out
sub
arpl
sbb
mov
nop
cmpsl
mov
mov
push
xor
pop
fsubrs
mov
mov
adc
xor
jno
daa
insb
psllq
cld
xchg
imul
insl
pop
lret
fsts
stos
cmp
jae
stc
jo
or
fnstsw
xchg
popa
and
cwtl
lret
fwait
xor
and
push
push
lcall
lcall
push
lea
or
or
call
aad
or
cmp
xchg
cwtl
jp
mov
subb
jb
les
fstpt
loope
mov
daa
xchg
mov
or
pusha
jnp
aas
cmc
or
nop
sub
push
pop
js
pop
pushf
and
cmp
hlt
dec
mov
fistpll
std
mov
sub
loope
outsb
inc
iret
fildll
hlt
loop
push
dec
dec
out
push
arpl
pop
mov
mov
sbb
aad
inc
or
push
mov
cli
insl
into
push
mov
pop
mov
jo
fadds
cmpsl
pusha
push
jne
out
mov
pop
xor
cmp
loop
xchg
or
stos
ret
in
pop
dec
test
xchg
in
xchg
mov
aam
sub
stos
sbb
sub
imul
push
cmp
or
out
jmp
sti
adcl
inc
or
adc
jecxz
xor
jmp
push
jne
and
add
fcmovne
mov
loopne
dec
lods
inc
aad
add
lods
xchg
mov
xchg
mov
fnstenv
aam
pcmpgtd
out
jbe
and
scas
cmp
pop
pop
cmp
inc
cwtl
mov
movsl
sbb
test
lods
inc
pop
adc
stos
out
addr16
mov
test
sbb
or
push
mov
mov
lock
and
rcl
sbb
mov
push
push
push
loopne
inc
mov
mov
lret
mov
lret
and
sbb
sahf
mov
adc
mov
pop
pushl
and
test
decb
dec
int3
scas
mov
sbb
shrl
add
lods
jb
cmp
fstpt
jl
xor
mov
jno
push
sahf
aam
data16
scas
rcr
in
gs
dec
leave
scas
pop
xor
imul
or
sbb
dec
test
cs
fcmove
mov
fnstsw
adc
hlt
cld
sub
or
cmovns
jge
pop
adc
addb
xlat
lahf
push
add
stc
push
add
xor
mov
dec
mov
or
std
movsb
push
ss
aam
xchg
cli
inc
inc
stc
jge
std
and
pop
into
xchg
into
testb
inc
ljmp
and
mov
mov
in
cltd
sbb
xor
or
arpl
or
jnp
sbb
push
fstpl
into
or
and
xchg
pusha
add
cmp
int
jge
test
jo
sub
cmpsb
mov
add
add
not
addr16
int
dec
sbb
mov
push
sbb
fwait
cmp
sti
sub
sbb
pop
fwait
and
xor
cs
rol
fs
xchg
lds
fldenv
lret
mov
mov
or
int3
jo
stos
dec
lea
push
int3
and
jns
sub
gs
push
or
mov
inc
mov
xchg
or
mov
xchg
lock
dec
scas
fidivrs
sbb
sub
inc
loope
xchg
cmp
jle
mov
rcll
cmpl
lods
or
fisubl
lahf
in
enter
adc
mov
pop
aas
xchg
aas
push
pop
sub
out
rolb
daa
mov
dec
fnsave
push
aas
or
iret
out
adc
ljmp
push
movsl
or
test
cwtl
mov
xchg
test
in
scas
xorl
dec
sbb
sbb
ret
cmp
aam
push
sub
pop
pop
rclb
mov
mov
mov
loope
mov
adc
adc
ds
mov
outsl
and
and
icebp
push
or
mov
push
js
mov
repnz
shlb
sbb
inc
cltd
cmp
in
mov
inc
call
mov
dec
cs
loope
mov
fs
xlat
adc
mov
inc
jbe
jns
dec
cmp
scas
les
subb
pop
or
dec
xchg
scas
mov
xchg
or
int
out
sahf
xchg
push
addr16
dec
pop
jbe
adc
scas
dec
lahf
cmpsl
stos
push
pop
mov
fxch
add
and
and
imul
or
mov
popa
sahf
stos
xor
test
es
sub
movups
dec
mov
test
push
push
ret
lcall
push
call
ds
cmpsl
js
leave
mov
in
cmpb
xchg
jp
inc
sbb
lods
loop
and
inc
mov
push
or
mov
dec
addr16
movsb
or
test
xor
push
ret
sbb
jns
cmp
mov
sub
jns
fsubp
xor
call
mov
mov
mov
imul
adc
insb
in
push
mov
lcall
pop
mov
mov
xor
std
or
dec
and
lods
pop
sub
jo
jmp
xor
into
mov
lahf
push
ret
sbb
sub
push
xor
push
fnsave
in
inc
hlt
push
repz
ja
mov
daa
orl
dec
sahf
or
pop
pop
loopne
dec
inc
xchg
and
cwtl
fldenv
sbbb
cld
jle
bound
out
or
push
loopne
jl
inc
mov
int
jnp
pop
xchg
div
cmp
mov
dec
aad
adc
stos
popf
repz
stos
jp
in
mov
pop
mov
ss
js
jg
adc
dec
rol
stos
iret
pusha
xor
cmpl
gs
sbb
call
rcrl
push
ret
sbb
add
sub
adc
pop
ds
mov
imul
insl
add
or
test
fldenv
cltd
sub
cmpsl
mov
stc
adc
cmpsl
lret
out
inc
fcomp
push
icebp
adc
push
arpl
aas
pop
stos
shlb
and
mov
inc
addr16
mov
xchg
pop
int
xor
pop
mov
iret
pop
dec
jmp
push
dec
aad
stos
popf
adc
xor
push
call
scas
or
jb
les
scas
stos
repz
sub
fnstcw
sub
stc
xchg
arpl
inc
inc
mov
add
xor
add
popa
sub
dec
add
mov
add
iret
xchg
mov
sbbb
pushf
mov
pushl
pusha
ss
push
cmpsb
fwait
mov
repnz
xlat
xchg
daa
je
stos
int3
aam
std
out
sub
and
or
push
pop
repnz
setno
push
and
inc
leave
inc
repz
scas
mov
test
push
add
lock
add
adc
mov
inc
js
pop
sub
xor
sub
xor
sub
es
push
adcb
or
jo
jo
xchg
cmp
and
clc
clc
and
xchg
mov
nop
mov
dec
xchg
sbb
dec
inc
insl
mov
aas
jp
in
push
movsb
mov
aad
inc
jle
in
rolb
mov
and
jmp
lret
pop
in
lahf
icebp
jecxz
out
pop
les
dec
sub
fdivl
sti
cwtl
pop
iret
test
adc
mov
jecxz
mov
pop
inc
dec
lahf
inc
das
jl
xchg
insl
adc
push
scas
testl
and
mov
jo
in
xchg
lret
sbb
loope
cld
daa
add
divl
fnstsw
sub
jl
ljmp
pop
sub
jo
sub
sub
sub
pop
sub
clc
mov
jmp
or
push
sub
cmpsb
js
cmp
sub
clc
lret
mov
mov
and
scas
call
test
pop
call
push
out
stos
pop
dec
int3
jg
out
iret
leave
xlat
pop
pushf
and
fs
xor
jmp
push
scas
pop
sbb
jp
add
inc
jb
dec
mov
jp
pop
mov
popa
push
mov
ljmp
call
daa
mov
je
mov
mov
jo
jmp
cmpsl
aaa
pop
fldl
mov
pop
loop
scas
scas
jbe
cmp
test
lret
push
orl
mov
mov
mov
jae
mov
or
das
repz
cmp
jecxz
leave
je
cmpsb
cmp
xor
sahf
pop
imul
jno
cmp
jmp
sti
std
iret
sub
jno
add
push
scas
arpl
je
insb
or
mov
xchg
or
mov
push
inc
cmp
rol
dec
xorw
pop
andl
mov
movl
test
xchg
insl
scas
cmp
outsb
dec
sbb
add
adc
adc
aas
hlt
loope
mov
adc
cmpsl
loope
out
test
pop
addr16
pop
sub
add
enter
jecxz
pop
add
sub
mov
imul
ud2
lret
shlb
mov
fs
sub
fwait
popf
jno
mov
aaa
ljmp
test
aad
pop
aas
jbe
das
test
mov
inc
mov
sub
movsl
jp
notl
jnp
push
outsb
pop
jmp
adc
pop
scas
ret
imul
aas
pop
popf
xchg
jecxz
fisubs
out
pop
aaa
xchg
shll
mov
push
or
mov
enter
popf
stos
and
mov
pop
cmc
movsl
xchg
out
lret
dec
xchg
jle
xchg
es
push
negl
cmp
or
dec
push
dec
jecxz
repz
xlat
rcrb
lahf
add
push
addr16
cld
pushf
adc
mov
cmp
std
in
cmp
jne
pop
test
andl
pop
sub
popf
sub
push
mov
ja
pop
jge
mov
and
out
xchg
lock
pop
iret
cmp
aaa
jmp
dec
cmpsb
mov
orps
sbb
xor
jns
cmpsb
in
push
outsl
aas
push
jmp
aad
cmp
lea
sbb
pop
pop
adc
inc
jae
popf
je
mov
mov
out
hlt
pop
xlat
mov
mov
mov
pop
sbb
insl
or
aam
imul
pushf
mov
mov
es
adc
jle
repnz
push
lcall
sub
inc
xor
mov
pop
push
int3
div
jl
rcrl
pop
repnz
in
sub
aas
xor
dec
add
hlt
inc
icebp
adc
lods
imull
lret
out
pop
in
adcb
popf
dec
das
mov
cli
in
add
jo
lods
adc
mov
jg
stos
sub
daa
mov
push
rorb
cmpsb
dec
test
sub
push
fists
in
int
scas
add
dec
and
xchg
jb
add
in
in
aas
jl
push
mov
mov
xchg
push
dec
push
lret
jns
sti
jge
adc
aaa
clc
fists
jmp
jnp
jae
or
jl
cwtl
inc
or
cltd
pushl
test
cmpsl
cltd
call
popa
cmp
adc
mov
mov
jg
lahf
lods
sbbl
cltd
fsts
jmp
repz
mov
and
fs
shrb
cwtl
int
and
mov
psllq
out
fwait
xchg
mov
jbe
loope
and
mov
hlt
scas
mov
cmp
es
xlat
mov
jb
test
jne
inc
jae
sub
and
call
subb
shlb
inc
scas
stos
inc
xor
mov
stos
and
jl
push
cmpsl
cmp
adc
pop
dec
rep
imul
test
sbb
sub
test
mov
jnp
cmpsb
and
fcoml
mov
ss
jge
imul
xor
cmp
xchg
cmp
or
jnp,pt
and
push
out
xchg
mov
cmpsl
stos
mov
popa
icebp
cmp
popa
mov
mov
and
sub
cmp
call
pop
call
sub
push
leave
out
popf
pop
xchg
mov
sub
pop
adc
pop
xlat
mov
aas
stos
sbb
fidivrl
dec
sti
jno,pt
cmp
cmp
aad
mulb
mov
lcall
mov
xor
cmp
sbb
test
mov
mov
dec
out
mov
incl
aad
inc
loop
call
in
psrad
mov
rolb
sbb
push
outsb
xchg
in
mov
push
and
xor
insl
das
test
cmp
mov
push
in
fimuls
adc
mov
or
cmp
inc
add
push
cmp
adc
sub
popl
cmp
dec
mov
jns
mov
dec
mov
push
iret
lcall
pop
add
roll
pop
loop
jp
adc
inc
nop
mov
ret
pop
dec
std
sub
mov
int
js
std
cmp
mov
mov
notb
xor
int
xchg
or
cmpsl
adc
xorb
outsl
in
jnp
pop
push
or
mov
int3
mov
mov
push
jle
popf
lea
xchg
mov
dec
fsubs
scas
pusha
push
outsb
cmp
lea
adc
push
dec
sbb
push
pop
nop
call
data16
mov
cmp
bound
xchg
lret
mov
cmpsb
jle
test
in
jo
xor
sub
icebp
inc
xchg
adc
pop
sub
cmpsl
stos
inc
sub
sti
push
stc
xchg
enter
fdiv
inc
ljmp
mov
inc
rorb
sbbl
add
xchg
inc
shlb
popf
mov
push
xor
pop
addps
shl
or
add
mov
inc
movsl
in
rcrb
xor
mov
mov
inc
or
inc
insl
fdecstp
xchg
mov
pop
adc
aaa
outsl
shrb
fcmovu
sub
xor
insb
pop
js
mov
addr16
xchg
and
inc
icebp
imul
rcll
mov
lcall
pusha
xlat
xchg
dec
adc
cld
jle
faddl
or
in
dec
repz
xor
xchg
fucomip
or
push
push
mov
icebp
push
and
or
cmp
cs
pop
ret
xchg
iret
and
xchg
dec
loop
mov
ljmp
mov
cmpb
in
mov
push
mov
lahf
mov
push
loop
xor
mov
test
mov
fs
sbb
cmp
pop
pushl
fists
adcl
sarl
dec
mov
outsb
push
pusha
jle
test
and
test
mov
mov
mov
shll
scas
cmp
pinsrw
jg
ja
pop
dec
pop
fcompl
fists
cmc
push
dec
inc
sub
aad
stos
push
sbb
das
cltd
push
adc
test
shll
test
lds
jne
dec
std
add
fisttpl
cmp
dec
lds
jno
fidivrl
add
or
adc
or
mov
jno
inc
ja
into
sbb
sbb
push
mov
mov
push
stos
sahf
or
out
cmpsb
loop
dec
loopne
rclb
xchg
xlat
xchg
test
or
gs
sub
pop
aad
pop
mov
sub
std
lret
clc
insb
mov
int3
ds
mov
or
enter
cmpsb
lret
out
push
setns
cmc
pop
xchg
push
mov
and
imul
mov
inc
inc
jb
add
cmp
sti
es
outsl
scas
adc
mov
nop
push
xchg
cmp
test
mov
inc
sysenter
sbbl
sti
fidivs
mov
jl
push
xchg
sub
cmp
xor
or
dec
rorl
lds
repz
push
pusha
int
push
out
jmp
xchg
mov
fwait
xchg
out
pop
subb
std
sub
sub
mov
nop
enter
scas
sbb
cmpsl
dec
divl
push
cmp
xchg
mov
mov
cli
notl
in
lods
scas
arpl
hlt
cmc
cmpsl
push
fbstp
fld
mov
jae
repz
cwtl
fldl
and
imul
mov
or
mov
shll
xor
arpl
sbbb
sbb
into
ds
lock
sbb
sbb
aad
popf
adc
adc
xor
inc
cmp
movsb
push
cmp
push
mov
leave
xchg
and
ss
clc
sub
adc
mov
push
xor
jge
lret
mov
mov
in
cwtl
sub
add
mov
enter
out
inc
jmp
int3
icebp
std
sbb
mov
in
ljmp
xlat
mov
mov
pop
cwtl
rclb
add
test
sbb
inc
out
gs
rol
test
sub
repz
mov
or
cltd
rcll
rol
pop
xchg
movsl
hlt
mov
sahf
je
pop
mov
out
popa
mov
jecxz
xor
ds
dec
xchg
mov
lret
les
ja
pop
rcll
lret
out
insl
int3
scas
jecxz
test
pushf
adc
jb
push
vpunpckhwd
scas
incl
sarl
es
xchg
lea
out
pop
jge
out
xchg
pusha
xchg
adc
adc
test
add
aaa
jb
ret
adc
mov
mov
data16
jge
pushf
inc
repnz
sbb
xor
mov
mov
mov
pushf
lret
incl
inc
or
fists
imul
inc
jp
mov
out
push
xor
sahf
cmp
adc
out
testl
sub
push
mov
gs
mov
popf
mov
sarl
stos
lock
sti
fsubrp
inc
in
outsl
mov
clc
add
sbbl
pusha
jae
addr16
adcl
inc
lret
or
xchg
add
pop
les
mov
inc
or
cld
aad
aaa
sbb
inc
mov
leave
lods
push
arpl
mov
sbb
inc
lock
iret
push
mov
push
jbe
ffreep
xchg
sbb
jge
pop
sbb
pop
popf
ficoms
cmpsl
xchg
and
xchg
iret
mov
pop
cmp
mov
test
lea
lahf
fnstcw
mov
sbb
lods
sub
jge
into
out
pop
pop
aam
xor
pop
inc
in
cmp
and
popf
cld
and
inc
paddd
daa
mov
sbb
ljmp
xchg
or
lahf
sub
dec
jns
icebp
push
adc
inc
jo
hlt
jns
jl
lcall
js
fnsave
mov
push
lods
jae
mov
mov
std
dec
fcoms
sub
fstpt
jl
loope
jmp
popf
pop
mov
xchg
jo
and
xor
dec
test
pop
repnz
out
mov
mov
int3
xchg
fwait
cmp
cmp
pop
test
ror
sahf
or
mov
cmpsb
scas
sbb
sbb
sub
lret
mov
jge
push
jne
adc
int3
dec
push
add
add
enter
outsl
and
mov
popf
push
mov
mov
sub
adc
push
js
call
cmp
adc
pop
aaa
jp
sar
inc
lds
push
inc
out
cltd
add
test
xor
xchg
cld
scas
jg
aad
out
mov
sbb
xchg
push
lcall
push
repnz
xchg
out
addb
sbb
push
mov
xor
sub
sbb
or
icebp
out
or
fwait
repnz
pop
add
inc
xchg
mov
roll
mov
lock
dec
ja
dec
jle
jo
sub
fisubrs
jmp
sbb
push
test
jecxz
mov
lcall
jl
popa
das
push
rorb
shrl
inc
add
mov
dec
iret
std
shll
xchg
sbb
insl
test
stos
sbbb
insb
sbb
rclb
test
push
mov
cmp
sbb
sub
pusha
mov
dec
push
and
scas
dec
cld
jbe
adc
or
std
sbb
xchg
sbb
cltd
push
pop
pop
fsubrl
inc
inc
jnp
xchg
testb
fimull
and
imul
cs
call
popf
es
cmp
xor
inc
jg
jno
push
adc
jecxz
push
cmpsb
daa
stc
inc
push
push
repz
cvtdq2ps
lret
cmpsb
leave
test
test
xor
jecxz
adc
aam
sbb
out
fcmovb
xor
call
jg
lcall
add
xor
mov
mov
inc
jg
or
repnz
shll
stos
jae
push
push
mov
imul
enter
movsl
dec
insb
test
or
ja
ljmp
test
sbb
mov
mov
xchg
add
mov
scas
jne
push
aad
in
movsl
push
jle
fwait
inc
ljmp
sbb
pop
data16
mov
outsl
mov
rcrl
push
jle
das
icebp
pop
or
stos
push
cmp
aam
imul
cli
std
addl
inc
xor
cltd
repz
pop
jmp
mov
sub
das
jge
add
xchg
add
mov
pushl
lock
inc
and
out
int
inc
popa
push
sbb
jp
dec
sbb
aam
imul
mov
xor
pop
addr16
arpl
bound
cmp
fs
add
or
pop
xor
je
fdivrp
adc
in
sbb
push
cli
push
xchg
fwait
pop
sbb
add
fmuls
call
mov
les
pop
adc
xchg
lea
push
js
inc
fildll
lods
or
xor
lcall
jp
cmp
jge
cmp
xor
xchg
repz
dec
lret
jnp
stc
push
insb
mov
orl
sbb
in
cmp
fisubrl
sub
inc
jp
jno
imul
lods
mov
call
aam
gs
pop
mov
mov
mov
mov
cli
faddp
xchg
hlt
loopne
or
aam
adc
hlt
jecxz
mov
sub
cmp
stos
push
xchg
sti
loope
dec
mov
movsb
je
test
dec
fwait
sub
sub
adc
ja
sbb
xor
dec
xchg
test
cmp
push
cmp
xor
mov
adc
int
jp
jno
mov
dec
or
test
jl
outsl
outsl
dec
lods
stos
push
add
and
test
lahf
out
cmpsb
jmp
dec
pop
outsb
cmpsl
cli
and
or
xor
or
dec
mov
push
test
lahf
das
jns
xor
imul
xor
divb
xchg
push
mov
push
add
mov
sti
mov
and
loop
clc
scas
es
xlat
aas
lcall
jmp
rorl
lock
std
movsb
mov
jp
mul
out
add
jmp
sub
push
inc
jl
xor
fisubrl
dec
and
inc
or
lock
mov
pop
cli
mov
push
mov
fbld
lods
popf
add
test
push
dec
test
mov
xor
rclb
lods
sti
ljmp
pop
in
sbb
les
repz
sbb
push
mov
les
push
iret
sbb
mov
xorb
xchg
push
in
int3
adc
aaa
mov
mov
jnp
pop
jbe
into
in
and
mov
pop
fidivl
pop
or
test
jmp
mov
aaa
xor
cmp
bound
lock
mov
adc
repnz
inc
rcrb
lock
es
ret
jle
jo
sub
clc
fstl
jae
cmpsl
mov
int3
hlt
movswl
push
int
int
fnstsw
adc
push
jle
xchg
sbb
into
aam
sbb
leave
pop
popf
sub
cltd
test
xchg
repnz
adc
or
jns
mov
scas
int3
js
fadd
push
cmp
mov
add
jnp
fwait
mov
mov
pusha
xor
adc
aaa
lret
das
and
jle
mov
adc
inc
ret
test
mov
lods
leave
cltd
fnsetpm(287
push
in
push
out
sahf
dec
push
push
cltd
loope
xor
das
pusha
push
movsb
push
and
pop
mov
push
jne
lcall
out
xor
mov
stos
pop
dec
sarb
shl
outsb
xchg
arpl
add
outsl
xchg
iret
in
jp
xchg
dec
cmpsl
shlb
gs
lods
ficompl
ds
dec
movsb
pushf
shlb
add
mov
lods
stos
call
in
mov
imul
add
or
pop
daa
mov
gs
add
imul
mov
and
dec
in
xadd
dec
jb
lods
cmpsl
add
sub
push
ret
add
and
push
pop
jns
repnz
and
rolb
pop
divl
fwait
mov
mov
movsl
addr16
notb
outsl
into
sahf
or
push
or
enter
inc
dec
mov
test
fstpl
dec
pusha
xchg
shr
pop
cwtl
nop
pushf
cmc
or
or
jbe
nop
sub
lahf
adc
test
leave
xchg
mov
movsl
pop
and
ja
push
lods
js
mov
loope
fcmove
dec
imulb
ss
dec
or
xchg
and
dec
pop
bound
loopne
add
lret
push
fwait
test
fstpl
jmp
and
pop
iret
imul
imul
fildl
ss
and
test
jo
inc
nop
adcb
or
lcall
lds
je
cmpl
rclb
dec
push
in
in
jl
clc
loopne
inc
cmp
or
loop
roll
mov
push
jno
mov
mov
popf
js
fsubs
rclb
pusha
mov
in
insl
mov
fnstenv
adc
popa
push
dec
push
add
fdivrp
subl
dec
cmp
mov
psubw
sti
adc
les
pop
mov
test
jle
pop
mov
or
stos
das
iret
outsl
fiadds
push
xchg
adc
mov
inc
test
pop
aaa
push
fsts
mov
xchg
int3
rclb
cmp
jns
mov
cltd
mov
xchg
push
jne
shll
nop
xchg
mov
inc
nop
scas
lock
test
arpl
jbe
inc
out
mov
pop
sti
or
inc
xchg
sti
add
jns
add
pop
fs
inc
or
loopne
fnsave
xlat
xchg
and
and
daa
mov
xor
sbb
lods
iret
test
xchg
or
xchg
xchg
mov
iret
imul
jae
inc
adc
in
mov
test
call
xlat
sub
push
dec
add
mov
arpl
push
xor
aas
sub
xchg
lods
pusha
in
xchg
pop
jle
xchg
out
lds
andl
lock
fcompl
or
rcrb
divl
sub
int3
popl
dec
mov
cmp
or
fs
mov
mov
push
ror
stc
dec
stos
and
xchg
jecxz
adcb
es
dec
ss
cmp
test
push
fwait
sub
mov
bound
jmp
adc
jg
push
xchg
dec
insb
jecxz
mov
lea
xor
shll
hlt
lock
test
inc
cld
rol
iret
subb
mov
xor
sbbl
test
out
pop
jle
lods
xchg
sub
lcall
imul
lret
mov
sbb
lret
mov
shll
sbb
insl
pop
icebp
dec
cmc
aam
cltd
xor
adc
ficoml
sarl
add
push
icebp
add
and
cmp
sub
lcall
jecxz
jmp
aam
inc
rcrl
mov
outsl
jne
test
das
fsubrl
cmp
mov
push
out
xchg
sub
cmpsl
rcpps
stos
pop
stos
pusha
cmc
xor
push
incb
mov
xorb
xchg
mov
lahf
mov
xchg
xor
pushf
mov
cmpsl
sub
int3
mov
cmpsb
jecxz
faddl
fstps
sub
pop
mov
xchg
mov
cmp
cmpsl
cmp
aam
insl
je
out
out
daa
cltd
mov
gs
push
mov
mov
sarl
hlt
mov
adc
dec
pop
mov
and
jns
xchg
mov
cltd
lahf
std
jle
addr16
sub
or
xor
call
add
fwait
adc
scas
movsb
fcmovb
jns
fucom
mov
imul
cmpsb
int
push
pop
mov
add
jmp
cld
andb
mov
call
or
sbb
inc
xchg
cmc
jmp
in
int
enter
out
xor
shlb
add
push
and
ds
mov
nop
dec
jns
insb
cld
sahf
iret
fsubr
sti
ret
push
jno
mov
push
sbb
rol
imul
loope
lcall
cmp
rcll
sbb
popa
popl
lods
rorl
push
jg
rcrb
insb
lock
insl
scas
stc
cmp
cs
sub
jb
or
cld
out
mov
xchg
mov
out
cmc
ret
inc
cmp
aas
out
push
push
dec
or
rclb
sbb
and
sbb
out
fcomp
xchg
rorl
dec
dec
jge
inc
mov
pop
test
dec
lret
in
mov
mov
lahf
xchg
xlat
or
mov
jne
cli
iret
or
add
push
pop
pop
andl
sbb
and
inc
sbb
sub
dec
jae
rcr
dec
ret
sbb
cmpsl
or
cvtps2pd
push
mov
xchg
in
fwait
roll
add
or
cmp
sub
cmp
or
mov
hlt
lods
or
ret
mov
mov
or
xchg
in
addb
xor
or
addr16
loope
and
mov
inc
lret
dec
movsl
xchg
pop
or
or
mov
fistps
aam
insl
or
xchg
sub
scas
sbb
sub
stos
imul
leave
jnp
push
pop
stos
xor
popa
mov
inc
add
push
sbb
jnp
mov
cmp
bound
add
jecxz
jnp
inc
hlt
daa
push
sbb
cwtl
ss
fisubl
xchg
icebp
pop
mov
mov
push
mov
scas
aam
idivb
xor
mov
adc
jmp
or
jge
loopne
pop
clc
or
lret
or
fdivrl
and
push
pusha
repnz
pop
inc
push
inc
fcoml
xchg
adc
xchg
dec
sahf
pop
aad
aad
ret
popa
mov
mov
dec
push
fmull
cli
mov
jp
leave
jae
push
sub
lods
shl
popa
ret
dec
mov
mov
outsl
js
popa
xor
or
inc
xchg
mov
pop
or
inc
sti
ds
shlb
cmp
sbb
lds
scas
pop
push
rcrb
dec
inc
sahf
mov
enter
bound
inc
add
test
pop
pushf
scas
mov
mov
push
shlb
add
adc
mov
inc
mov
je
mov
repnz
bound
xchg
pusha
subl
gs
int3
cmp
repz
imul
and
sub
test
and
and
sub
outsb
mov
mov
inc
out
jne
pop
movsl
sahf
cmpsb
and
mov
lock
mov
loop
push
sbb
inc
dec
in
lret
lds
jns
jno
and
cmp
test
jmp
dec
cmc
and
xchg
hlt
jbe
ret
jp
imul
xor
and
addl
int3
jp
adc
cmpsl
movsb
cld
ja
enter
out
outsl
dec
xchg
xchg
cmpb
cmc
and
lods
dec
iret
mov
push
movsb
adc
js
dec
out
or
or
icebp
adc
shlb
sbb
test
sub
mov
repnz
popf
mov
mov
dec
adc
mov
mov
jb
xchg
notl
push
xor
cmp
rorl
or
aas
test
xor
loope
mov
roll
loope
ss
mov
adc
inc
push
lahf
lds
push
fwait
movsl
push
and
dec
cld
add
dec
jns
shrl
mov
and
lcall
into
pop
mov
adc
dec
dec
fldl
and
gs
adc
or
dec
mov
adc
les
enter
bound
aaa
add
orl
insl
int
leave
jle
arpl
sahf
or
push
rcr
outsl
rclb
out
lods
or
ja
sarl
adc
xor
sub
sub
sbb
add
stos
cli
test
stos
sbb
or
fsubrl
clc
pop
and
or
js
mov
push
nop
repnz
jnp
cmp
pop
andl
insl
sub
adc
sub
data16
push
out
cmpsb
adc
js
movsl
mov
repnz
push
out
jno
push
xor
jae
xchg
xchg
jg
not
pop
inc
sub
jbe
lods
dec
xchg
jno
les
push
stos
add
xchg
clc
push
in
in
mov
add
add
mov
repz
lret
fcompl
je
rorb
pushf
adc
fs
out
cmp
insl
cmp
inc
xor
fsubp
pop
add
insl
arpl
daa
lds
inc
scas
add
push
getsec
test
scas
ljmp
mov
jp
in
pusha
fildll
push
dec
inc
lds
mov
mov
mov
lods
lret
push
or
mov
icebp
int
pusha
movsb
ds
push
jmp
pop
test
leave
stos
pop
add
cmp
mov
notb
or
inc
lods
fnstsw
mov
fisubl
jg
lcall
call
leave
mov
sbb
roll
aam
xor
movsb
sbb
adc
iret
test
icebp
cmp
xor
jns
mov
rclb
fistpl
xchg
jne
shr
sub
and
sbb
push
cltd
mov
outsb
sub
mov
mov
cltd
aas
fmuls
mov
sti
iret
lods
sbb
pushf
push
in
xor
pushf
cmp
int3
xchg
add
cmp
and
xchg
ror
xchg
arpl
out
clc
sbb
pop
and
pop
pushf
xchg
push
addl
adc
jmp
imul
mov
stc
ds
pushf
pop
jmp
push
pop
xor
jg
sbb
es
cs
and
cmp
enter
ss
push
mov
ljmp
test
popf
mov
in
xchg
les
cmpsl
ljmp
lcall
pop
push
repz
sahf
pop
ret
xor
dec
sbb
inc
sub
pop
mov
mov
mul
mov
cmp
pusha
or
sub
cmpsl
mov
jp
addb
adc
mov
adc
sub
sbb
notl
data16
mov
mov
pop
add
and
js
popf
and
sbb
inc
sbb
les
mov
cltd
xchg
sub
fsubl
mov
in
aas
pushf
lret
sti
stc
xchg
mov
rclb
popl
insb
mov
ret
sub
shlb
sbb
and
je
fwait
bound
out
in
fs
daa
mull
mov
add
jno
jecxz
nop
in
sarl
fwait
cli
stos
xchg
adc
and
fisttps
ja
fsubrl
sbb
sbb
std
out
xchg
aam
inc
popf
shlb
stos
jns
repz
stc
not
xchg
sub
jg
inc
arpl
fidivs
ret
push
jle
jmp
sub
popf
cmpsl
sbb
jnp
dec
cs
push
insl
fisubrl
fdivrs
sbb
rorb
mov
call
loop
nop
push
in
jle
sbb
lret
add
les
jo
stc
out
les
sti
loopne
pavgb
sbb
jo
icebp
lock
xchg
jle
push
dec
gs
adc
xor
mov
movsb
adc
sbb
mov
pushf
ss
sub
mov
jp
arpl
adc
xor
fstpl
cmp
aas
mov
push
fisubrs
fldt
adc
xor
or
rolb
jae
mov
rolb
inc
stc
fstp
and
adc
jle
cli
jae
mov
push
cld
cvtps2pd
popa
stc
gs
ret
sti
fcompl
sub
ret
in
rorl
sbb
and
push
inc
mov
add
adc
stos
xchg
es
mov
mov
mov
mov
inc
movsb
lds
int3
xchg
movsb
jle
dec
jmp
mov
adc
arpl
lret
test
pop
lods
and
arpl
inc
push
adc
adc
sub
or
dec
hlt
cs
push
inc
cmpsb
cli
cltd
popf
mov
int3
movsl
test
dec
setns
dec
jo
mov
xor
cmp
je
jns
int3
pop
ja
ljmp
cmc
bound
push
mov
push
inc
test
jp
ret
fs
stos
mov
add
xchg
sbb
scas
xchg
movb
int
in
adc
cmp
pop
andl
notl
in
cltd
jl
test
int
roll
adc
in
fildl
jbe
andl
in
rcll
add
inc
jmp
fistps
gs
jbe
outsb
adc
aad
mov
out
dec
test
mov
push
xor
sahf
imul
pop
jg
mov
faddp
and
mov
pop
rclb
or
cmc
mov
test
sbb
xchg
jl
ror
mov
mov
hlt
gs
xchg
and
mov
out
and
imul
lret
adc
xchg
jae
mov
fsts
into
fimull
adc
fs
xchg
cld
cmp
jmp
daa
aad
sbb
addb
sub
sti
and
shr
sub
pop
repz
add
sub
lea
rol
repz
mov
pop
mull
daa
inc
dec
add
inc
je
mov
jmp
fstpt
mov
cmc
loope
fdiv
pusha
das
pop
movsl
mov
les
xor
xchg
sbb
and
ds
test
sti
cli
shll
adc
insb
inc
outsb
jae
sbb
mov
in
dec
loopne
fstpl
dec
jns
aaa
cmp
je
aam
aaa
jmp
sub
jne
jg
xlat
mov
or
xchg
or
cmpsb
xchg
add
ja
notl
xor
sub
mov
mov
lret
mov
inc
inc
pushf
imul
ss
test
pop
add
sub
mov
movsb
mov
and
jns
adc
fisubrl
xchg
fisubrs
ds
sub
lods
int3
movsl
and
enter
lock
xor
xor
sub
fidivrl
inc
sti
cmp
and
loopne
iret
pop
orl
lcall
inc
and
xchg
xor
aas
and
add
loopne
xor
adc
clc
mov
mov
int3
arpl
popf
shlb
sbb
inc
xor
outsl
sub
insb
data16
mov
xchg
aad
mov
std
push
das
sbb
pushf
cs
data16
pextrw
cwtl
xor
and
test
rcll
push
rol
popf
xor
sbb
jl
div
pop
jae
sbb
cmp
lahf
pop
stos
pop
movsb
xchg
enter
mov
fmul
push
lcall
imull
std
mov
xchg
pop
xor
push
ja
lods
fs
rolb
sbb
das
xor
add
aaa
pop
lods
inc
daa
lock
cltd
pushf
fdivrs
iret
pop
dec
pusha
aas
push
movsb
test
and
cmp
push
xchg
jbe
or
insb
jecxz
lea
sbb
imull
push
scas
xor
lret
das
lret
mov
shll
test
xchg
push
xchg
test
rol
lea
fdivrl
in
in
and
cli
test
push
dec
inc
adc
cmpsb
or
mov
and
cmp
add
jl
out
js
movsl
int
popf
mov
sbb
aaa
scas
lret
jo
adc
aaa
cld
push
mov
or
cmc
and
imul
int
enter
lods
xor
add
jo
and
cmp
outsl
inc
jo
rcl
and
adc
mov
ret
arpl
jne
ret
imul
push
cli
test
push
add
mov
cmp
mov
dec
arpl
fadds
fmul
mov
cld
inc
mov
mov
mov
pop
adc
add
jbe
popa
fstl
adc
mov
add
shl
loopne
addr16
adc
int3
aaa
icebp
mov
out
xor
sub
movsb
pop
pop
jl
into
and
repz
add
pop
mov
movsl
shll
hlt
lahf
mov
mov
aam
aaa
inc
lea
or
push
jg
mov
clc
into
sub
inc
ret
movsl
repnz
push
shlb
inc
jnp
adc
mov
lea
mov
fadds
popf
jmp
loope
cld
cwtl
imul
mov
loopne
dec
pop
push
pop
push
fcoms
mov
mov
jl
pop
mov
jg
data16
stc
rorb
sahf
push
sbb
cmp
xor
es
fdivs
loop
pop
shrb
mov
and
cmp
pop
sub
daa
arpl
sarl
cmp
cmovb
xchg
imulb
dec
lret
fists
imul
ja
push
int
adc
cmp
dec
data16
push
add
push
mov
or
mov
outsb
mov
dec
pop
subl
loopne
iret
inc
test
mov
xchg
sub
cld
and
in
lea
gs
lahf
jg
jb
xor
jo
jge
sar
es
pop
cmp
jno
scas
sub
addr16
negl
cvtps2pi
rorl
mov
adc
popa
stos
ja
cmp
jo
clc
pop
push
fs
jae
cltd
jns
sbb
pop
lock
push
aam
imul
add
pushf
add
push
pop
out
or
or
pop
mov
daa
lds
lret
fdivrs
mov
mov
pop
mov
mov
dec
loopne
cli
arpl
xchg
mov
xor
daa
lock
aaa
mov
mov
mov
cmp
mov
mov
cli
aam
push
je
inc
xor
jb
popf
subb
push
scas
mov
inc
out
aas
repz
sti
cld
mov
es
icebp
sahf
lret
call
adc
jmp
cmp
mov
notb
test
outsl
mov
push
ja
repz
and
inc
testl
aam
frstor
aad
jmp
jns
inc
mov
out
and
es
dec
jo
imul
xchg
std
fistl
subb
js
out
mov
rcrl
mov
push
lret
pop
cmp
adc
call
add
fs
push
nop
cmc
pop
mov
jmp
fwait
jbe
adc
cmpsb
cli
in
mov
add
and
sub
inc
pop
push
aad
or
aam
addl
jo
ret
cmp
outsl
mov
sbb
pop
testl
jo
stos
dec
push
sub
arpl
add
orb
xor
adc
ret
jp
add
jb
data16
sub
adc
fs
pop
adc
in
shl
push
shll
ficomps
dec
stc
jns
mov
out
lea
imul
push
mov
jns
cmp
ss
neg
cwtl
jae
cmp
xchg
daa
imul
cli
mov
inc
mov
mov
popf
clc
pop
or
insl
and
pop
outsl
rcrl
pop
inc
and
jne
arpl
cmc
push
lds
push
jge
bound
js
xchg
pop
pop
jb
stc
imul
pop
cltd
sub
out
sub
and
mov
call
pop
lret
outsl
bound
dec
das
add
push
mov
inc
movlhps
cmp
mov
lock
and
ds
push
sub
cld
push
and
cmp
adc
adcl
dec
pushf
std
xchg
fildl
xor
adc
push
out
mov
cmpsb
xchg
loop
int
pop
fisubl
outsl
and
fisttps
sar
repz
cmp
gs
and
ljmp
cmp
and
fisubs
stos
outsb
inc
insb
mov
pop
cmc
jle
pop
clc
call
xor
test
frstor
mov
out
dec
inc
jl
inc
iret
push
sbbb
pushf
cmp
jns
xor
in
dec
mov
dec
shrb
fimuls
lret
js
adc
lret
inc
inc
inc
stos
jno
gs
cs
orb
mov
out
cmpsb
push
push
adc
xchg
sub
dec
pop
cmp
loop
dec
jb
test
dec
xchg
and
xchg
mov
mov
js
bound
fldl
scas
mov
sbb
xorl
or
mov
rcrb
jnp
xchg
stc
mov
je
hlt
js
adc
arpl
xlat
and
lret
adc
dec
add
lock
fimuls
push
ret
sbb
jb
sub
lcall
lret
dec
mov
xchg
shlb
aaa
das
adc
out
add
mov
sbb
ljmp
shl
ds
push
negb
aaa
hlt
xor
inc
jg
mov
in
insl
pop
dec
ja
mov
jae
in
sbb
cmp
xor
stos
xor
cltd
addl
hlt
lcall
inc
mov
mov
int3
adc
add
imul
mov
loop
pop
lds
jecxz
in
addl
imul
adc
lea
push
insb
ljmp
push
sub
cmpsl
vandps
test
imul
ja
out
push
push
sbb
enter
mov
call
sub
and
pop
mov
outsb
push
add
mov
pop
or
scas
xchg
pusha
push
mov
lock
sbb
lret
mov
push
jp
js
dec
sbb
mov
notl
dec
lods
cmp
sahf
mov
and
inc
cmpb
fnstsw
cmp
sahf
pop
xor
repz
jne
pusha
outsl
jl
and
rorb
cmp
aaa
inc
sub
inc
rolb
gs
iret
stc
jbe
xchg
adc
pop
aaa
cmp
push
dec
push
inc
push
inc
test
sub
test
out
xor
mov
aaa
mov
and
in
mov
mov
sub
inc
xchg
lcall
emms
in
add
addr16
and
xor
jp
dec
movsb
adc
inc
mov
cmpsl
mov
cmc
adcl
jmp
lahf
pusha
mov
arpl
outsl
mov
jmp
fistl
cmp
fisubrs
rorl
popf
push
into
xor
jb
adc
addr16
leave
cmp
scas
adc
mov
xor
jnp
sub
lcall
out
push
jl
pop
or
mov
jp
cmpsl
aaa
inc
adc
test
stos
or
xchg
gs
adc
pop
sahf
mov
inc
mov
mov
mov
pop
jg
call
pop
jo
and
aam
xor
cld
loopne
pusha
pop
push
cwtl
push
out
pop
pop
jl
cmpb
pop
mov
notb
shr
add
sbb
mov
mov
mov
lods
insl
and
adc
xor
cs
repz
ja
dec
sub
or
pop
pop
mov
and
bound
aaa
aam
jecxz
stc
add
jge
dec
sbb
fdiv
negl
ficoml
mov
lcall
mov
insl
xor
add
std
es
aam
xor
dec
cmc
pushf
sub
jae
sbb
test
inc
mov
in
leave
js
pop
cmp
push
lods
lds
negb
xchg
sarl
enter
daa
jecxz
mov
notl
mov
in
xchg
sbb
and
push
adc
push
lret
stos
lcall
loop
das
stos
cs
cs
sarl
mov
loop
xchg
sub
jb
rcr
fsts
pop
xor
sbb
add
shrl
into
adc
xchg
es
mov
fimuls
push
lcall
gs
inc
sub
sbb
stc
loope
jl
mov
mov
ret
pop
dec
cmp
cmp
inc
adcl
stc
sub
aas
push
push
test
mov
sub
xchg
ret
iret
lret
lret
mov
lret
ret
ret
lods
jmp
popf
into
das
jmp
es
sbb
pushf
and
mov
orb
sub
add
mov
sbbl
pop
adc
testl
aas
fsubrs
add
in
loopne
sbb
testl
test
xor
mov
lahf
mov
cmp
scas
pop
mov
cwtl
cmp
dec
sbb
fs
sbb
push
xchg
mov
sub
addb
mov
bound
fnstcw
inc
adc
jl
js
repnz
movsb
bnd
out
adc
repnz
pusha
sbbb
bound
cmc
or
mov
decb
cli
dec
add
push
xlat
flds
test
shlb
mov
mov
rol
mov
out
mov
sti
or
xchg
sub
pop
mov
xor
or
rcrl
xchg
popa
lret
js
cld
lcall
dec
lds
jne
cld
shll
mov
adc
out
aaa
sahf
lods
insb
loopne
fimuls
aas
lods
dec
xorb
lahf
icebp
ss
lea
mov
mov
icebp
lock
push
les
ljmp
lea
popf
jecxz
push
lcall
mov
rolb
fists
and
loop
mov
adc
xchg
hlt
mov
in
push
imul
or
fmull
push
bound
mov
xchg
and
pop
dec
xchg
lret
xor
mov
mov
sbb
sub
mov
mov
outsl
add
xchg
out
faddl
lods
mov
loop
jp
adc
cmc
aam
popa
test
lods
dec
std
adc
dec
pop
push
fsubr
loopne
inc
mov
mov
leave
pushf
xor
inc
cli
and
jecxz
and
daa
js
cmpsl
cmp
stos
xor
and
mov
divb
jnp
push
and
fimuls
jmp
out
daa
jle
xchg
adc
sar
scas
push
cld
lds
sbb
sbb
push
jb
int
into
neg
sbb
mov
dec
mulb
pop
subl
add
stos
lahf
sub
push
ljmp
mov
sub
je
dec
movsb
mov
test
out
sub
push
clc
xchg
jl
lahf
push
fs
sub
mov
fs
insb
xchg
scas
xchg
pop
ret
and
popa
lret
xor
sbb
and
pop
xlat
stos
adc
mov
dec
sub
jl
fbld
or
mov
pop
ja
inc
xchg
mov
mov
shl
jecxz
push
cld
cmp
sub
and
and
fwait
jb
daa
loopne
mov
clc
and
and
dec
dec
repnz
ffreep
push
loop
mov
sbbb
or
movsb
push
xchg
pushf
in
insb
mov
mov
adcb
mov
out
stc
bound
subb
andnps
and
in
pop
pop
test
pop
push
mov
jno
xor
rorl
in
dec
mov
cld
inc
sub
jb
fcomip
dec
call
movsb
xlat
jle
dec
ljmp
mov
dec
fisttps
adc
lret
out
je
mov
shlb
mov
cs
insb
lea
mov
mov
imulb
pop
int
ja
sti
repz
pop
shll
jnp
icebp
jge
cmp
sbb
je
add
iret
fs
loop
in
push
xlat
in
xchg
mov
loopne
jne
cmpsb
les
inc
xchg
inc
or
jge
push
int3
pop
jns
xor
rorb
ja
push
jns
stos
cmp
lahf
sbb
lret
sbb
sbb
add
inc
shl
fsubr
popa
ja
xorb
xor
pop
mov
sahf
ficompl
mov
cmpb
les
imul
lea
iret
sahf
dec
lods
push
inc
test
sub
lds
pushf
outsb
xchg
sbb
mov
and
jbe
xor
test
cmp
jno
je
arpl
sbb
push
inc
mov
std
inc
sub
lahf
jmp
or
flds
pop
jae
mov
out
pop
push
dec
push
stos
xchg
mov
or
cmovae
adc
cmp
rcr
mov
xor
rorl
push
jno
movsl
sbb
dec
jmp
sub
jecxz
dec
jb
ja
jge
jmp
sbb
jnp
jo
sub
pusha
leave
in
jge
das
add
aas
xchg
sti
xor
push
dec
adc
pop
push
push
imul
loopne
test
pop
cmp
test
inc
cmp
push
sahf
sub
arpl
and
mov
cmp
push
jno
jae
pop
inc
cmp
outsb
xor
insl
mov
push
xor
js
dec
stos
insb
cli
sbb
push
fstpl
add
sbb
loopne
shrl
data16
jmp
push
or
mov
ss
xor
notl
testl
dec
aas
pop
enter
jmp
push
mov
xor
inc
xor
xor
and
jae
xchg
xlat
aas
std
mov
stos
sub
pop
call
and
jp
mov
sbb
hlt
js
push
xchg
inc
inc
sahf
pushf
jecxz
and
js
fsubl
mov
cltd
mov
push
mov
push
inc
nop
push
sbb
mov
lock
xchg
jle
in
sahf
xor
pop
rorl
imul
push
push
pop
cs
fstpl
xchg
or
xchg
leave
cmp
sbb
int3
push
repnz
sub
in
shll
push
pop
fs
mov
lret
push
enter
stos
js
xor
insl
gs
fnsave
or
mov
sahf
fnstenv
and
fstsw
jb
aad
sbb
mov
cmc
popf
and
fldl
inc
jae
cmp
shll
bound
mov
repnz
mov
inc
popf
lods
inc
jmp
pop
cli
test
xchg
fcompl
insb
or
lods
pop
loopne
and
fimull
mov
jae
xchg
mov
jge
inc
inc
insl
sub
mov
pop
and
popa
and
rcll
adcl
xor
jg
jae
gs
mov
xor
aas
icebp
test
and
insb
mov
in
mov
dec
loopne
sahf
xchg
das
cmp
pop
mov
xchg
repz
es
mov
xchg
jle
and
out
mov
dec
or
movsb
sbb
sbb
vcvtss2si
xor
pop
cmp
test
cli
dec
stos
dec
lock
jb
cmp
mov
xor
outsb
daa
jp
rcrl
pop
xor
clc
mov
orb
loope
orb
outsl
hlt
pop
and
sub
pusha
xchg
loopne
aad
shlb
pushl
mov
jle
popf
cmpl
mov
push
and
dec
orl
inc
xchg
test
int3
rcrl
dec
mov
push
cmc
nop
mov
sub
sbb
or
insb
cltd
add
icebp
sti
xor
xor
pop
dec
adc
fnstcw
bound
dec
sbb
test
mov
sbbb
lods
pop
or
fidivrs
and
dec
pushf
push
leave
test
dec
cld
fists
push
into
shll
sbb
in
divl
sub
ret
jnp
ret
push
loope
fisubrl
cmc
clc
stos
je
xchg
popf
fld
and
jle
std
gs
fwait
dec
jmp
dec
adc
or
test
push
mov
rorl
and
inc
mov
loopne
adc
popf
dec
fbstp
inc
shrb
xchg
into
push
and
sub
jbe
dec
pop
mov
mov
cmpsw
add
jmp
jp
les
repnz
dec
nop
add
flds
mov
clc
sub
flds
lods
lret
jo
push
jmp
push
mov
movsl
cmpsl
push
fsubr
jns
pop
xchg
fnsave
mov
add
loopne
je
sub
ds
mov
jne,pt
dec
or
daa
mov
adc
ss
mov
or
into
out
and
lods
and
cld
add
dec
loop
xchg
mov
pop
lahf
mov
mov
hlt
test
into
sahf
popf
in
mov
adc
dec
hlt
lds
xchg
fbld
xchg
xor
jne
lret
mov
int
jno
adc
mov
push
mov
outsb
push
cmp
add
into
aam
mov
adcb
jl
movl
outsb
mov
xchg
gs
addb
push
popf
fisttps
mov
mov
mov
mov
and
lahf
or
xchg
cmc
pop
or
les
sub
lea
add
ja
out
aaa
test
int3
inc
les
mov
sbb
mov
leave
test
loopne
xchg
out
add
adc
xchg
jecxz
int3
adc
mov
sub
out
bound
sti
out
loopne
in
jnp
fisttpll
mulb
mov
out
mov
nop
ljmp
sub
sub
out
sti
pop
mov
roll
push
in
xlat
xchg
xchg
adc
mov
add
and
mov
lds
movsb
out
loopne
repz
icebp
xor
xchg
daa
sub
mov
mov
xchg
cmc
pop
pushf
sbb
inc
add
leave
data16
data16
lods
adcb
inc
mov
and
and
loopne
jp
fwait
lret
orb
hlt
je
pop
gs
repnz
dec
push
adc
shll
fcoms
idivl
adc
mov
xor
cmpsb
push
dec
xchg
pushf
xchg
and
mov
pop
in
adc
push
out
and
lock
cmp
lret
stos
xchg
add
mov
add
xlat
and
mov
test
and
mov
mov
mov
add
popf
fadd
xor
les
test
and
fs
sbb
movsb
jp
mov
cmp
sbb
std
fst
test
mov
int
jg
cmp
push
adc
push
mov
mov
cltd
and
lahf
test
out
ret
mov
fnstenv
lods
mov
mov
push
push
inc
push
in
les
mov
daa
out
clc
sub
gs
je
sbb
jl
in
sbb
mov
adc
insb
xchg
inc
sbb
scas
rcll
insl
jno
pop
lea
adc
xor
jle
xchg
xchg
xor
ret
push
xor
stc
into
je
pop
dec
lods
dec
cmp
movsb
loope
add
stos
lret
or
int
adc
mov
stos
and
adc
pushaw
cmp
test
jle
sbb
inc
jle
add
mov
lret
stc
push
adc
lret
fdivrl
inc
aam
mov
cli
lret
je
test
xchg
add
idivl
arpl
daa
shrl
pushf
fwait
jg
pop
jl
xor
xchg
add
sub
rorb
dec
addr16
jae
icebp
adc
test
add
pop
lahf
jb
out
lock
add
fbld
ficoml
fs
mov
push
lds
div
jnp
insl
fiaddl
jg
inc
push
mov
ja
mulb
jne
xor
faddl
mov
push
xor
dec
mov
and
jp
jecxz
inc
mov
cld
xor
and
xor
pop
subb
xchg
hlt
xchg
js
bound
fmull
stos
pop
aas
jp
add
scas
mov
sub
inc
jmp
fidivl
mov
and
stos
adc
pop
adc
xor
sbb
fwait
jb
sub
int
jecxz
xor
mov
mov
pop
testl
push
mov
mov
popa
aad
dec
sahf
adc
ss
adc
mov
push
xchg
jp
mov
pushf
jmp
lea
cmp
pusha
and
mov
ds
out
cmp
jne
cmp
hlt
arpl
test
out
sub
ds
popa
call
outsb
js
loop
cltd
mov
ret
insl
pop
sbb
jmp
cmp
adc
mov
into
fistps
push
stos
add
and
leave
mov
and
imul
jle
stos
std
push
inc
jge
xorb
shll
mov
add
inc
cmpl
fmulp
dec
jmp
rol
xor
mov
add
pushf
pop
pop
add
jb
jnp
inc
xchg
mov
icebp
movsl
addl
loop
jecxz
lock
icebp
loope
add
ret
lds
aas
lret
or
adc
imul
jno
les
mov
mov
shrl
repnz
push
mov
dec
clc
inc
out
dec
push
es
stos
scas
cld
dec
fs
jb
mov
jae
jle
in
cmp
mov
fisttps
mov
sbb
mov
lea
xchg
mov
adc
rolb
sub
mov
cmp
insl
ret
imul
jmp
les
out
cmpsb
or
js
adc
div
daa
push
movsb
inc
pop
jae
cmp
fldl
cmp
ret
ds
adc
xchg
push
stos
adc
jnp
ss
sbb
jo
add
leavew
in
xchg
imul
out
sub
mov
fiadds
xor
xchg
jg
rcll
movsl
popf
push
aas
mov
inc
pop
mov
sbb
stc
xor
jecxz
pop
fs
or
lods
dec
or
jg
loopne
jbe
push
and
leave
into
sub
sub
into
sbb
lds
jo
xchg
movlps
cmpsl
movsb
xor
sbb
mov
pop
mov
test
icebp
popw
stc
aad
gs
pop
and
outsb
dec
cwtl
xchg
test
pop
sbb
mov
pop
jbe
mov
xchg
imul
lds
pop
test
push
pop
sbb
lods
dec
push
or
rcll
sbb
mov
lock
xor
or
sahf
loop
push
movsl
sub
mov
sub
pop
mov
aaa
roll
xchg
mov
mov
mov
fadd
mov
pop
not
sub
mov
add
stos
orl
scas
loopne
out
mov
mov
movsb
mov
dec
add
inc
jge
pop
sbb
pop
decl
sub
sub
inc
ror
xor
daa
shlb
notl
popf
popf
sbb
lock
mov
xor
insb
lock
cltd
xor
cmpsb
mov
fdivs
xchg
xor
pop
xchg
cmp
ret
sub
push
out
ret
sti
aam
xor
les
into
push
stos
pop
ds
mov
xor
pushf
repz
fdivrl
mov
push
fcmovbe
sub
aam
insb
aaa
and
mov
pop
sbb
mov
addr16
jmp
mov
dec
mov
dec
mov
fidivl
xor
insb
xchg
inc
in
test
mov
or
test
push
rcrb
bound
es
repz
adc
and
pop
or
cld
lcall
mov
mov
nop
scas
andl
or
lea
aaa
add
sbb
xorl
jmp
sbb
lcall
xor
orb
cmpsl
test
loope
dec
adc
adc
dec
inc
xchg
and
or
or
jmp
pop
ret
pop
pop
decl
fidivrs
adc
xlat
insl
outsb
mov
rcr
roll
push
xchg
mov
pop
shrl
inc
cwtl
fsubp
jns
sub
fildll
aad
cmp
xchg
inc
xor
loope
pop
push
cld
pop
inc
xor
sub
pop
nop
push
test
pusha
cwtl
sub
aaa
shlb
stos
push
add
js
push
push
sbb
sahf
cmp
fimuls
je
aas
fsubrs
mov
mov
adc
mov
sbb
dec
sbb
stos
mov
iret
sbb
mov
jno
sbb
ljmp
mov
jne
xchg
neg
rcl
idiv
mov
test
stc
sbb
adc
js
mov
sub
and
dec
pop
lahf
fmulp
sub
jecxz
in
cmp
ljmp
push
fmuls
inc
inc
adc
mov
xchg
mov
add
pushf
cwtl
test
and
sete
cmp
push
pop
imul
cld
fisttpl
jl
sahf
adc
mov
add
aas
xlat
loopne
lahf
into
dec
shr
pop
and
adc
jbe
lahf
ljmp
push
adc
push
xor
or
mov
push
and
inc
mov
xchg
cs
sbb
xchg
xchg
xchg
xchg
cwtl
jae
scas
aaa
mov
or
mov
scas
pop
lcall
int
cmp
icebp
movsl
test
pop
xor
push
and
jbe
adc
je
clc
push
or
cmpsl
inc
push
aam
outsb
pop
mov
lods
inc
cwtl
dec
add
jmp
hlt
mov
add
xor
pop
mov
xchg
push
arpl
lcall
xor
xchg
test
adc
add
sti
es
jns
jns
dec
adc
push
in
cmp
jp
popf
hlt
cltd
inc
clc
push
mov
das
fidivrs
rol
aas
push
and
pop
sbb
mov
sbbl
fisubl
push
fadd
pop
jge
out
cmp
sarb
es
idivb
pop
add
push
dec
cmp
jmp
jl
jbe
mov
dec
int3
jmp
add
subb
bnd
mov
call
je
jle
jbe
jns
mov
push
enter
xchg
loope
in
sbb
cmpb
pop
fbstp
and
sub
dec
xchg
cmp
arpl
icebp
ffreep
jg
ss
dec
adc
dec
ficoml
repnz
movsl
jae
iret
add
fmul
lea
addr16
mov
sbb
inc
jp
sub
sub
or
sbb
xchg
jge
or
imul
in
mov
sbb
add
rcrl
xor
xchg
aaa
dec
out
mov
pop
jle
mov
inc
cmp
and
pop
inc
pop
fadd
jg
das
stos
fidivrs
scas
mov
mov
shr
push
add
xchg
aas
loope
and
out
xchg
or
and
mov
mov
test
sub
jmp
aas
push
and
lahf
fstpt
xchg
mov
cmp
push
fmulp
ret
push
dec
mov
lods
mov
rorb
imulb
aas
movsl
mov
sbb
mov
les
fidivs
adc
pop
icebp
test
popf
inc
jge
jne
xchg
push
lock
lods
test
jno
dec
sbb
pop
adc
fimuls
std
ss
dec
push
mov
jnp
dec
cli
jns
mov
icebp
xlat
mov
icebp
fwait
pop
testb
pop
aad
ret
and
testl
mov
into
pop
andb
out
mov
fists
adc
push
push
pusha
cmp
dec
aam
jbe
fwait
or
sub
outsl
out
or
jb
cmp
andl
gs
rcll
push
mov
jge
aaa
jmp
jecxz
mov
inc
xor
pop
adc
mov
rcrb
loope
stos
or
xchg
mov
push
xchg
out
sub
out
pushf
push
lret
es
test
aam
dec
addl
ret
mov
mov
enter
cmp
dec
daa
ret
es
sbb
or
lcall
cld
dec
xchg
dec
loope
adc
cmpsb
sbb
add
cpuid
pop
sbb
pop
dec
adc
std
mov
loope
rcll
mov
cmp
popa
xchg
sub
subl
push
and
xchg
in
mov
push
inc
sbb
out
repnz
loop
mov
in
das
dec
inc
bound
sbb
sbb
jbe
popa
mov
xlat
aaa
adc
movsl
fistpll
imul
push
arpl
aam
add
dec
out
pop
je
sahf
jnp
xor
mov
sti
mov
add
popf
xlat
pop
in
xchg
ss
jle
ffreep
push
xchg
jle
xchg
sub
popa
sbb
mov
imul
std
mov
pop
loope
pop
sbb
sbb
xlat
ss
stos
push
lods
xor
jb
mov
rcl
jp
inc
or
in
ljmp
dec
sti
push
adc
jb
cmp
push
std
scas
outsl
add
dec
mov
ret
test
sbb
jb
je
mov
lcall
test
outsl
mov
mov
int
mov
xor
cltd
js
movsl
shlb
fiaddl
xchg
rcrb
mov
sbb
sbb
aam
arpl
std
out
mov
hlt
enter
insl
xchg
aas
push
call
mov
inc
mov
adc
cmp
mov
push
pop
cmp
lret
dec
jae
mov
sti
or
and
xor
mov
mov
out
pop
movsb
mov
mov
sahf
mov
or
fs
mov
mov
int
mov
push
dec
cmc
stos
mov
std
jae
mov
and
xor
mov
cli
ret
xor
ficoml
xor
mov
mov
add
cmp
aas
dec
xor
push
cs
jmp
mov
and
andl
xor
sbb
cmp
add
fistpll
push
inc
mov
xor
add
mov
ja
sub
jmp
in
insb
and
or
or
int3
test
mov
xchg
fildl
ret
sahf
sub
lret
xchg
push
xlat
cmc
gs
fistl
mov
xor
sbb
sbb
xchg
lea
dec
pop
test
pop
fdivrs
lret
dec
sbb
or
in
xchg
lret
scas
cmc
les
mov
lahf
sbb
add
out
mov
cs
call
ss
cmpsl
sub
push
and
adc
cmc
fadds
stc
push
fsts
mov
cmp
ret
scas
hlt
mov
imul
pop
popa
jo
cmp
jno
or
mov
lcall
xor
ret
jae
insb
adcl
push
add
imul
fildl
pop
xchg
xchg
loope
fidivrl
push
lds
lret
das
in
dec
cmc
repnz
lcall
cmp
mov
test
ja
mov
and
and
xlat
mov
add
int
push
mov
insl
xchg
shr
inc
mov
stos
ret
das
sahf
mov
pop
dec
sbb
enter
es
sbb
aas
insb
sbbl
jno
jns
outsl
aaa
frstor
std
mov
das
adcl
xor
fdivr
mov
jge
mov
mov
add
iret
mov
or
loop
mov
jne
adc
push
movsl
xchg
dec
hlt
arpl
out
mov
sbb
jmp
aas
push
mov
adc
jmp
rcl
push
test
lahf
aam
ret
into
mov
jl
lcall
stc
jl
and
imull
rcll
cli
rorl
mov
negl
adc
push
sbb
ret
repz
lods
scas
ret
movb
jno
pop
mov
push
or
jbe
mov
sbb
pop
ljmp
daa
les
mov
test
mov
int3
adc
mov
add
inc
repz
scas
mov
fistps
pop
or
fisubl
call
jae
ficoml
into
out
add
mov
jae
pop
js
pop
bound
mov
js
pop
and
mov
popa
insb
fisubrl
inc
and
arpl
outsl
mov
in
nop
mov
rep
bound
push
pop
out
xchg
push
aaa
mov
and
inc
add
and
cmc
pop
imul
cmp
push
clc
cmpl
sahf
xor
dec
jb
inc
sub
outsb
jmp
call
push
sbb
popa
jnp
decb
stos
or
fsubrl
pop
adc
and
mov
pushl
outsb
push
xchg
add
pop
dec
es
out
into
inc
adc
inc
ljmp
add
push
xchg
fwait
sub
fs
push
add
add
enter
adc
test
ficomps
es
mov
js
out
js
pop
int
push
pop
lahf
sub
or
mov
int
jne
xchg
mov
push
iret
ljmp
repz
sbb
popa
add
fnstsw
ror
dec
cmpsl
in
out
jae
mov
icebp
test
sbb
pop
fstl
xchg
test
cmp
das
mov
repnz
xchg
jle
push
rcr
jl
dec
sub
lcall
shll
aaa
jo
rclb
sbb
mov
mov
or
jecxz
mov
aam
insl
xchg
popf
into
cmp
in
inc
or
inc
aad
jg
and
pop
jmp
fdivrs
imul
xchg
cmp
shll
pop
pop
jecxz
mov
sub
cli
std
and
stos
sub
pushf
cmp
sub
mov
leave
in
push
push
pop
push
sti
gs
push
aas
pop
das
in
mov
xchg
adc
jns
sub
fwait
xchg
pop
fistpll
lock
cmp
imul
in
clc
inc
out
sbb
mov
adc
std
movsl
mov
or
pop
mov
jge
ret
enter
lret
stos
call
pushf
bound
cmp
xor
jmp
cmp
lea
lock
mov
mov
in
pusha
mov
lods
dec
aam
inc
lret
into
ds
add
lock
adc
jne
js
stos
adc
pushf
mov
imul
and
notl
cmc
aad
sbb
es
int
decl
fisubrl
mov
cmpsl
sarb
fildll
jmp
inc
mov
jno
pop
stos
sti
jb
fldenv
cmc
popa
add
mov
je
js
test
je
std
scas
call
fwait
dec
mov
pop
jne
call
jg
in
cmp
test
push
or
lret
cmp
filds
imul
and
movsb
sbb
or
mov
xchg
push
adc
pop
sarb
mov
aad
hlt
jecxz
ds
rorb
pop
pop
popl
cmp
xchg
pop
dec
xchg
les
mov
or
jg
jmp
mov
xchg
pop
sub
mov
fsubrl
xor
es
sbbl
lret
inc
fbstp
lea
xor
aad
mov
fsubs
stc
sub
push
enter
jns
jg
push
rcl
jecxz
sbbb
inc
mov
mov
sahf
nop
mov
ror
das
ret
or
fdivp
aam
mov
mov
push
decl
das
mov
and
loop
xor
add
or
call
sahf
jle
xor
test
sub
pop
adc
pop
cmpsb
sar
push
inc
mov
jne
in
add
and
test
pop
push
cmpsb
test
add
outsl
cld
popfw
mov
repz
cmp
push
dec
aad
push
push
pop
imull
inc
pop
scas
fstpl
pop
lods
dec
jb
push
call
incb
cmpsl
mov
push
jmp
jmp
loop
ss
pop
adc
std
aaa
jb
dec
test
dec
dec
nop
dec
jae
rcrb
mov
test
aaa
cmc
pop
sub
sti
ficompl
mov
fs
mov
int
decl
aad
and
inc
out
mov
cmp
aad
enter
mov
je
sahf
clc
lcall
outsl
pop
jmp
fsubr
mov
pushf
ss
mov
cmp
aam
adc
push
sti
sbb
and
imull
inc
pop
lahf
and
daa
out
cmp
and
lods
dec
bound
cmp
pop
mov
mov
ljmp
inc
test
xor
push
fsubl
ljmp
dec
and
mov
pop
mov
test
xchg
or
hlt
push
mov
loope
nopl
adc
loope
push
adc
push
mov
jbe
les
add
mov
jge
pop
xlat
xchg
sub
jne
enter
test
hlt
data16
mov
in
out
jns
mov
sub
int3
inc
lret
les
int
out
std
out
daa
adc
jle
and
sti
mov
sbb
fcomi
mov
xor
cmpsl
dec
push
and
push
loop
pop
lcall
or
dec
add
inc
xor
repnz
mov
stos
test
jle
xor
jp
sub
nop
lcall
mov
pop
out
cwtl
or
pusha
ficompl
or
jge
add
cmp
pushw
dec
cmp
sbb
outsl
iret
and
cmpsl
adc
or
daa
push
mov
xchg
mov
lods
aas
add
add
dec
sti
mov
xor
mov
lods
frstor
xchg
stos
inc
add
adc
and
sub
leave
mov
popa
xor
inc
mov
and
rcrl
mov
mov
xor
inc
je
mov
dec
jo
push
and
inc
repnz
xchg
mov
adc
and
sub
filds
insb
addr16
enter
mov
push
xchg
loop
pop
pop
add
add
pop
stos
mov
mov
or
pop
outsl
cli
push
dec
push
mov
jae
inc
mov
addr16
pop
or
faddl
add
cltd
jle
cs
fwait
mov
sub
xor
inc
mov
movsb
ljmp
jbe
outsb
andb
cmpsb
adc
sahf
das
mov
push
int
lods
pop
and
jmp
sbb
xchg
into
push
out
mov
insb
test
jmp
mov
in
sbbb
cmc
push
mov
pop
pushf
sub
xor
sub
jo
xchg
xchg
andl
lods
adc
push
and
xor
push
mov
or
sbb
clc
je
adc
xor
inc
sbb
add
sti
sti
cltd
mov
add
lods
cli
imul
test
arpl
xchg
add
and
xor
pusha
roll
xor
xchg
ret
adc
cmp
loope
fiaddl
std
jg
nop
sbb
cmp
and
bound
cmp
clc
pop
lahf
xor
mov
mov
inc
xchg
mov
xchg
pop
lods
push
dec
mov
movsl
jns
jmp
stc
jns
je
mov
mov
xlat
repnz
jo
mov
pop
divl
mov
scas
loop
pop
push
or
push
mov
rcrl
or
jp
movsb
ljmp
mov
push
and
sub
add
mov
mov
push
cltd
pop
push
cmp
cmc
aaa
xchg
loopne
mov
mov
testl
leave
jl
out
movsb
rcll
xor
adc
pop
mov
adc
pop
popl
nop
xchg
into
xlat
out
stos
addr16
sti
int
sub
cmp
ljmp
cmp
sahf
and
scas
and
xor
or
xchg
les
clc
int3
cmp
push
sbb
cs
fcomps
mov
mov
sahf
out
sub
mov
shll
add
mov
pop
je
loope
pop
ds
lcall
into
pusha
add
or
ret
adc
imul
das
push
dec
or
mov
dec
pop
mov
mov
arpl
lea
cmp
xlat
push
lock
pmulhw
loope
xor
mov
outsb
pop
mov
lds
jg
xor
popf
mov
ss
push
shrl
nop
push
lret
cwtl
mov
gs
shlb
jns
mov
fs
mov
sub
mov
mov
cmp
dec
dec
mov
lods
je
sbb
idivb
pop
xchg
ret
adc
mov
lods
orb
data16
sbb
mov
add
push
outsb
dec
mov
add
outsl
test
mov
jl
push
cmp
pop
dec
pop
pop
cltd
adc
mov
mov
inc
xchg
inc
mov
ljmp
adc
dec
adc
popf
int
jns
lahf
shlb
pop
in
pusha
int
jmp
test
adc
cwtl
push
and
mov
sahf
lods
fidivrs
enter
fcompl
cmpsl
jmp
dec
xlat
pop
int3
xchg
insl
xchg
adc
shlb
hlt
mov
xchg
rolb
out
dec
enter
cmpl
icebp
ljmp
and
aaa
scas
inc
push
xor
cmp
in
or
push
sbb
movsl
lods
and
add
and
js
ds
cmp
mov
aas
mov
push
cmp
push
lods
ret
inc
mov
pop
stos
add
push
xorl
and
cltd
sarb
clc
fstps
xchg
cs
sub
ljmp
into
sahf
dec
pop
adc
sub
loopne
cmpb
pop
jg
movsl
cmpsl
fwait
bnd
ss
xlat
cmp
bnd
leave
or
push
movsb
nop
mov
cmp
clc
dec
mov
int
push
dec
mov
adc
adc
sub
pushf
aaa
adc
scas
aas
ds
std
mov
inc
ficompl
sbb
enter
lret
repz
mov
and
roll
std
mov
mov
stos
arpl
cmpsl
mov
aam
bound
adc
movsb
adc
add
jle
pop
test
movsb
in
outsb
xchg
lods
and
movsb
pop
mov
adc
jo
fstpt
adc
imul
in
cmp
mov
mov
lds
test
gs
stos
test
push
inc
cmp
dec
xchg
mov
jno
out
aad
mov
mov
mov
adc
and
add
or
push
psllq
adc
mov
xchg
push
pop
xchg
mov
bound
scas
xchg
repz
addl
adc
call
ds
nop
xlat
outsb
xchg
int
mov
data16
or
ljmp
or
shlb
in
in
ja
inc
or
jnp
in
sbb
call
lret
jb
enter
test
out
pop
bound
cmpsl
pop
clc
pop
adc
js
lcall
incl
or
dec
cmp
add
mov
jmp
cmpsb
adc
aam
add
inc
mov
xchg
cs
dec
push
imul
stc
xchg
jp
stos
pop
jp
adc
cmp
ljmp
popf
cli
movsl
stos
cltd
mov
push
icebp
nop
imul
test
mov
and
mov
imul
jno
js
icebp
int
lcall
sbbb
cmp
ja
movsb
dec
push
jo
cld
push
and
dec
cmc
aam
sub
cmp
rcrl
mov
fisubrs
es
or
ret
cmpsl
popl
push
xchg
adc
jo
add
cmp
sbb
sti
dec
iret
loop
or
and
fs
mov
dec
sti
das
add
sbbb
test
mov
repnz
sbb
mov
or
pop
xchg
negl
adc
std
xchg
jne
test
sub
push
lret
gs
popf
fstpt
rcrb
or
jecxz
out
dec
xor
push
nop
mov
dec
mov
pusha
into
push
imul
jbe
xchg
or
outsb
testl
pop
aam
add
imul
lods
sbb
or
div
cs
pop
out
jecxz
lret
sbb
jb
cmp
mov
jl
out
cmpsl
jo
cld
cmc
imul
lods
xchg
mov
sub
repz
sbb
and
loope
outsb
or
cmp
clc
out
pop
dec
ljmp
sbb
and
adc
inc
data16
adc
lret
jmp
mov
jo
add
push
sti
leave
push
mov
pop
jbe
daa
les
ja
fsubs
add
aaa
cmp
js
jae
insl
scas
push
jae
mov
or
jl
add
sbb
xchg
cltd
lods
lea
mov
jno
dec
dec
ss
push
cmp
mov
xchg
pop
jcxz
mov
sti
add
lret
add
pop
stc
xor
add
cmp
out
lock
inc
push
fiaddl
pop
fiaddl
mov
ficompl
sub
loopne
pop
mov
hlt
xchg
test
aam
push
shll
scas
push
mov
fstpt
dec
mov
mov
push
rcr
out
mov
and
xor
fcomi
fcompl
pop
fwait
shl
push
inc
cs
je
pop
push
or
add
add
sti
inc
out
pop
insl
cmpb
xchg
mov
andb
call
out
mov
lods
fisubrl
test
and
out
push
pop
test
hlt
push
scas
ffreep
in
sbb
jmp
shlb
add
int3
add
hlt
in
test
in
scas
in
nop
ret
push
ret
out
lahf
insl
iret
test
rcrl
adc
push
jbe
les
and
adc
and
test
jb
cmp
push
inc
sbb
pop
mov
jmp
rorl
and
imul
outsl
inc
outsb
pop
cltd
cltd
sub
or
sti
or
insb
or
fildl
or
jle
fistpl
inc
clc
mov
mov
imul
mov
mov
pop
jns
aas
cmpsl
loopne
cli
adc
mov
xlat
push
bound
dec
jbe
sub
sahf
imul
jge
repz
jb
and
inc
fcomps
mov
inc
sub
xchg
cvtdq2ps
rol
xor
mov
pop
hlt
dec
dec
sarl
aaa
cmp
fdivrp
mov
pop
arpl
addl
xchg
push
pushaw
sub
stc
les
jg
mov
pop
aad
xor
pop
dec
push
out
xchg
mov
or
les
into
aad
pop
les
jne
adc
out
addr16
pop
scas
and
ljmp
mov
out
repz
aad
cmpsb
inc
dec
hlt
lods
mov
xor
pop
mov
jmp
jmp
jb
lret
adc
inc
pushf
aad
mov
add
and
jmp
mov
dec
and
imul
outsl
push
xchg
mov
mov
and
ljmp
or
cli
sub
and
popa
icebp
lds
pop
ja
push
dec
inc
aad
rcrl
pop
push
xor
and
aas
adc
or
cmpsb
clc
adc
jae
aas
stos
cli
mov
push
je
cmp
pop
and
insl
cld
and
mov
mov
xchg
inc
jbe
xor
insl
dec
or
aad
pop
sub
addl
jge
ljmp
aaa
xor
sbb
add
xchg
inc
subl
xchg
sbb
adc
jge
or
cmp
lea
aaa
rcrl
ljmp
pop
and
lock
sub
sbb
sub
dec
push
mov
cmp
les
cmp
ja
mov
ss
loope
stos
and
push
movl
cmp
jo
imulb
scas
xchg
dec
inc
lcall
dec
add
adc
test
addr16
dec
jle
or
stc
gs
sti
jo
addr16
std
jle
outsl
andb
sarl
push
dec
aaa
dec
nop
sbb
int3
sbb
pop
cmp
pop
and
daa
xor
jno
inc
mov
aaa
add
mov
fistl
bound
add
or
lar
mov
add
ja
daa
int
xor
into
mov
sub
paddusw
mov
and
sahf
lret
mov
adc
xlat
push
mov
jno
pop
mov
stos
xor
add
mov
jo
dec
rcr
fstps
dec
and
fimuls
cmp
sbb
xchg
mov
pop
pop
divb
lcall
lods
jae
jb
outsb
adc
cli
sbb
out
test
jl,pn
sbb
add
test
testb
das
jmp
dec
pop
mov
cmpsb
das
loop
mov
mov
stos
js
or
adc
xchg
inc
cmpsb
xchg
or
out
mov
pop
jns
cmp
adc
or
xchg
xchg
orl
jo
icebp
sub
xor
fisttpll
test
mov
clc
xor
dec
sub
mov
mov
mov
or
into
and
jbe
fcoml
fdivrs
fdivrs
sub
cmpsb
out
add
push
mov
mov
test
mov
aas
in
xchg
les
ret
sub
les
popa
cwtl
push
push
inc
xchg
push
repz
jp
and
movsb
or
cmp
xor
insb
call
subb
mov
jae
jno
ret
pop
sub
add
xor
mov
or
xchg
xchg
pushl
sub
stos
xlat
mov
iret
push
leave
pop
mov
ljmp
insb
notl
jns
mov
faddl
int3
mov
popa
sub
push
ret
mov
fidivrl
pop
xor
xchg
out
inc
push
push
mov
xchg
inc
fwait
inc
imul
test
cwtl
xchg
add
pop
movsb
push
pop
idiv
mov
fwait
lcall
enter
in
pop
jae
xor
mov
xchg
stc
pop
mov
lods
imul
push
pop
notb
cs
push
imul
push
add
lods
mov
or
jge
adc
das
pop
call
inc
in
xor
jmp
mov
mov
or
imul
repz
cmp
lret
xor
jb
sub
inc
ljmp
inc
sbb
adc
mov
sti
test
lods
roll
mov
mov
arpl
xor
test
pop
pop
dec
je
mov
xchg
stos
adc
jmp
fidivl
lahf
push
push
dec
push
mov
lock
adc
mov
int
repnz
dec
stos
xchg
insb
fwait
add
adc
adc
aam
lds
xor
mov
cmp
sbb
into
add
loop
stos
jp
repz
mov
add
fildll
sbb
mov
mov
inc
add
sbb
xor
xor
ja
mov
lcall
shufps
mov
aaa
and
lock
mov
frndint
mov
adc
arpl
fadds
daa
loop
inc
pop
fisttpll
and
mov
aas
mov
inc
test
cwtl
pop
das
int
out
mov
push
mov
mov
dec
inc
xchg
test
shll
leave
shlb
data16
out
cmc
lahf
mov
ds
jo
lea
and
or
cmpsl
sahf
and
xor
cmpb
xchg
shll
cmpsl
lahf
lods
mov
pusha
sbb
test
test
negb
push
sub
mov
push
outsl
cli
mov
cmpsb
mov
les
inc
rcrl
xchg
cmp
push
add
jle
popf
movsl
je
push
test
test
or
xchg
imul
out
sbb
in
jns
jle
xor
dec
adc
mov
jb
mov
dec
in
ficoml
mov
popa
mov
inc
sub
push
sbb
fnstenv
push
imul
jle
out
jne
lret
cmc
fwait
dec
pushf
cmp
mov
dec
inc
jmp
xchg
fwait
dec
pop
push
shrb
imul
pop
push
ds
or
push
cwtl
pop
lds
xor
bound
mov
fiadds
ljmp
push
adc
addl
sbb
inc
ret
nop
imul
fcmovb
pop
sbb
ja
and
lds
ret
rcll
mov
mov
pop
clc
fcoml
sub
push
loopne
mov
or
mov
int3
in
loop
movsb
sub
jmp
xchg
ja
add
imul
insl
ret
pop
testb
or
dec
mov
insl
xor
pop
push
test
daa
mov
mov
stc
orl
outsb
rclb
and
test
adc
nop
xchg
arpl
jl
sti
in
mov
jns
rclb
rorl
xor
loope
cmp
stc
dec
popf
jmp
inc
inc
ss
mov
nop
adc
sub
pop
add
mov
jge
push
loopne
ret
push
cmp
pop
add
push
inc
lock
js
movsl
push
push
and
and
icebp
push
or
sti
outsb
fsubr
cmp
mov
sub
and
js
push
in
xchg
push
mov
push
sbb
push
out
sarl
pop
sbb
push
inc
sbb
and
and
pop
mov
or
pop
xor
xor
sarb
xchg
adc
push
adc
and
stos
outsb
jnp
mov
loop
mov
out
add
das
andb
loope,pt
je
fsts
int3
xchg
pop
add
jo
call
push
xor
xchg
jbe
jmp
dec
subb
cmp
add
sahf
frstor
mov
dec
out
ds
push
adc
and
mov
push
andl
mov
int
addr16
inc
loope
jge
xchg
je
int
subl
pop
int3
xor
pop
add
insb
fs
cmp
sbb
imul
dec
aas
mov
sub
fdivl
jp
sub
pushf
add
mov
in
fldl
imul
js
mov
outsl
popf
jmp
pop
jle
in
dec
xchg
cmc
icebp
or
test
push
add
dec
outsb
push
xchg
lock
ds
sarl
dec
xchg
add
add
cs
or
pusha
icebp
leave
hlt
std
xchg
call
pop
jle
jecxz
insl
cmpl
dec
ss
inc
xchg
sbb
sub
je
xor
imul
clc
cmp
imul
imul
or
cmpsl
pop
stos
add
push
add
push
xor
pop
andl
sub
add
pop
sub
ret
and
mov
cmc
outsb
fucomi
mov
movsl
jp
and
inc
movsb
cmp
ss
cmp
or
insl
test
or
call
mov
and
pop
sub
inc
mov
cltd
push
dec
xchg
aam
sbb
lock
cli
sahf
leave
sub
js
pop
and
sub
dec
and
stos
pop
jnp
into
sub
pop
mov
fiadds
push
xorb
xor
inc
mov
inc
dec
stc
insb
hlt
divl
fdivl
lods
add
jp
iret
mov
or
into
in
xchg
arpl
mov
imul
pop
mov
out
hlt
sbb
outsb
push
imul
aaa
fstl
in
xchg
aad
pusha
sbb
xor
pop
pop
fldenv
loop
addl
sbb
jbe
pop
and
lds
jmp
stc
call
fidivrl
adc
pop
pop
mov
cmp
lods
mov
stos
mov
andb
dec
ficoml
adc
add
add
mov
push
xor
inc
ret
lea
fadds
divl
js
xchg
mov
cmp
loop
adc
std
movsl
pop
add
adc
fisttps
out
lock
adc
call
pop
xchg
out
push
sbb
pop
cmp
adc
pop
mov
popa
fstps
pop
or
add
sub
shrb
push
in
mov
xchg
mov
cli
mov
aaa
cmp
mov
mov
inc
addl
pop
dec
pop
jl
jmp
into
pop
or
xor
addb
adc
cmp
jnp
out
add
mov
mov
mov
pop
add
addr16
ret
fs
jae
in
jbe
dec
lret
cmp
push
fnstsw
jge
faddl
fwait
adc
adc
jmp
dec
in
mov
mov
inc
repz
clc
shlb
dec
mov
ret
pop
aam
jecxz
repz
pop
adc
jp
rcll
scas
shlb
mov
nop
std
xchg
ljmp
sub
and
mov
mov
add
je
jae
mov
pushf
in
dec
aaa
bound
ljmp
adc
xchg
xchg
sti
sub
pop
mov
cld
jb
and
adc
int3
xor
mov
out
shl
hlt
pushf
scas
cmpsl
cmp
inc
or
inc
xchg
dec
scas
jnp
fildl
sbb
imul
push
adc
adc
mov
mov
push
pop
mov
ret
lcall
inc
test
and
cmpsb
jge
or
xor
outsl
xchg
jbe
sub
mov
leave
push
aam
push
sub
sbb
pop
ljmp
cld
mov
push
ss
sub
adc
xlat
inc
pop
out
xor
mov
cmc
push
xchg
adc
pop
jns
add
int3
jle
stc
inc
je
cmp
stos
fadds
add
cmpsl
arpl
out
xchg
rcr
push
cli
loop
gs
push
mov
rcll
sbb
jno
mov
andb
add
pop
leave
movsl
je
aaa
movl
lahf
mov
push
adc
xlat
scas
imul
xchg
mov
aam
cs
jnp
push
or
jp
mov
cmp
inc
xor
loope
push
push
loope
outsb
add
and
cld
test
imulb
mov
mov
mov
roll
xor
lcall
data16
ja
repnz
bound
cmp
inc
push
lret
repnz
pushw
jb
jb
pop
in
cmp
mov
xchg
pop
adc
fadds
fadd
push
inc
imul
fimull
sub
jle
in
inc
cmpb
scas
dec
repz
sahf
out
xor
pop
out
push
mov
out
sbb
pop
cmp
push
fistpll
frstor
mov
lcall
pop
or
stc
dec
aaa
dec
adc
sub
pusha
arpl
ja
lcall
pop
mov
xchg
stc
sbb
sbbl
jl
and
xlat
ss
cmp
pushl
outsl
out
aas
cmp
push
ret
fcmovnb
test
xchg
pop
outsl
mov
mov
push
push
and
jno
inc
cli
mov
push
xchg
int3
rcr
outsl
loop
popa
fstl
cmpb
lock
cmp
pop
sbb
mov
xchg
cli
lods
stos
into
icebp
inc
sub
and
jne
sbb
subb
pop
and
lock
lcall
rcrl
mov
or
inc
pop
adc
iret
sbb
jle
pop
fiaddl
les
cld
mov
pop
push
sub
push
xchg
ljmp
or
jl
stos
jge
pushf
fistl
cmp
xor
add
mull
mov
pop
lcall
hlt
daa
popa
mov
stc
dec
lea
mov
mov
in
add
add
cmpsl
test
daa
or
dec
jae
add
lods
scas
xchg
imulb
cs
cltd
dec
int3
scas
leave
sub
pop
fwait
sbb
fcomps
mov
push
enter
hlt
mov
lock
mov
xchg
jmp
cmp
mov
out
lea
fsubrs
xchg
cmp
cmpsb
add
aaa
popf
mov
push
push
aas
dec
js
test
add
data16
or
nop
repnz
or
or
scas
xchg
cld
pop
xor
popf
fsubl
sbb
loopne
int3
stos
pop
xchg
cld
mov
sub
pop
xchg
insl
outsl
jp
jg
les
mov
mov
cmp
pop
int3
pop
add
push
and
xchg
fmulp
sub
leave
ret
fcompl
insb
or
sahf
or
clc
fdivr
bswap
add
mov
lods
sbb
jmp
insl
and
pop
jecxz
sbb
daa
ljmp
sub
add
sub
mov
jb
in
pop
dec
scas
scas
bound
and
das
add
das
daa
pop
test
or
mov
fsub
nop
arpl
or
mov
xchg
iret
clc
and
ret
test
jnp
call
popf
xchg
cmp
add
sub
aam
cmp
inc
jo
clc
int3
movsl
pop
daa
xor
ds
sub
cmp
xchg
mov
or
and
lret
add
adc
inc
mov
iret
loop
divb
sub
adc
mov
imul
mov
xchg
or
cmp
sub
psubq
inc
jnp
mov
aad
into
push
lret
xchg
test
pop
or
cmp
loop
mov
push
mov
or
fcmove
pop
lds
sub
movsb
mov
leave
fs
xchg
mov
sub
in
mov
jo
in
aaa
adc
cld
adc
cmp
xchg
jecxz
inc
repz
push
adc
cmpsl
and
add
aaa
popa
insl
ljmp
jbe
or
cltd
stos
cmpsb
popa
mov
fstl
or
int
fildll
jbe
out
dec
pop
cs
addr16
push
scas
inc
dec
and
sbb
out
iret
push
repnz
and
xor
cmpsl
mov
adc
ds
cmp
repnz
jge
push
lcall
stos
sub
sub
fisttpl
xchg
jmp
testb
inc
jo
and
mov
in
pop
pop
rorl
push
imul
xchg
cld
stos
push
fcoms
mov
xchg
movsl
sub
sbb
dec
decb
xchg
pop
xor
loopne
dec
mov
shrl
add
sbb
cmpb
lds
inc
cmc
cwtl
and
fnstcw
rorl
sbb
xchg
or
imul
pusha
ret
mov
mov
out
sbb
mov
cld
stos
cmc
pop
scas
into
mov
aas
inc
leave
pusha
add
mov
leave
xchg
jp
sbb
jb
jo
fisubl
iret
aas
lret
lea
fiadds
jecxz
repz
mov
imul
push
lret
icebp
ret
imul
cmpsb
nop
push
cld
mov
inc
lock
icebp
lret
fisubrl
add
or
rorl
lret
mov
cli
fs
pop
mov
xchg
mov
mov
movsl
sbb
pop
test
pop
adcl
push
imul
push
xor
mov
jo
sbb
mov
or
cmp
pop
cs
rorb
push
in
pop
test
lcall
leave
fsub
fidivrs
cmp
mull
test
ljmp
loopne
xchg
xlat
shlb
jb
push
inc
push
loope
test
pop
xor
pop
push
gs
cltd
insl
push
mov
push
js
adc
fstl
dec
add
sub
cmc
mov
and
ss
jmp
fwait
adc
ficompl
cmp
push
pop
lea
das
inc
jge
mov
rcrl
sbb
xchg
hlt
insb
fldt
push
jg
adcb
sarl
daa
negb
rclb
sbb
xchg
push
js
mov
gs
dec
push
push
push
mov
pop
adc
outsb
daa
std
inc
cmp
adc
rolb
pop
or
jg
and
mov
xlat
push
xor
cld
mov
adc
sub
hlt
push
sahf
popf
mov
scas
imulb
rorb
insb
stos
fcoml
xchg
and
inc
jnp
dec
insb
inc
xchg
stos
dec
dec
sbb
sub
mov
dec
and
xlat
sub
inc
xchg
jmp
mov
es
movsl
repnz
iret
scas
or
subl
and
fs
cmp
sbb
lret
int
xchg
fiaddl
mov
pop
mov
push
and
jne
mov
inc
jne
movsl
lcall
push
jp
ds
push
inc
jmp
rolb
adc
nop
es
push
int3
pushf
push
push
xchg
xchg
mov
cmp
lock
and
xor
es
jne,pt
lret
jmp
loop
inc
stos
aaa
fstl
rorb
stos
jno
sub
inc
dec
mov
or
fs
shrl
dec
xor
xlat
add
pop
clc
fs
pushf
sahf
ss
cmp
xchg
mov
cmc
xchg
sub
add
xchg
mov
call
movsb
xor
inc
mov
pushf
das
in
fnsave
mov
mov
pop
jecxz
sbb
mov
cwtl
xchg
mov
dec
jmp
pop
push
in
sbb
aas
inc
push
addl
mov
sub
andb
adc
sub
or
add
sbb
repnz
repz
push
jg
inc
idivl
inc
mov
cmp
jbe
imul
mov
xchg
xlat
testb
pop
cmpsl
mov
cld
fstl
and
adc
cmc
rcrl
pop
push
and
aam
jbe
cmpsb
mov
mov
adc
imul
or
push
notb
push
test
shll
xchg
xlat
lods
dec
ja
stc
jno
push
shll
inc
pop
jmp
ljmp
loop
push
pop
pop
jb
ss
sbb
mov
hlt
std
cld
add
sub
ret
add
jle
in
repnz
pop
xchg
inc
cwtl
dec
cli
fwait
aam
enter
repz
test
loope
xlat
ret
imul
inc
bound
add
lods
xor
lods
inc
add
stc
jae
daa
xchg
mov
xchg
mov
push
sub
test
mov
sbb
and
jne
or
and
scas
mov
dec
adc
mov
enter
jg
addr16
testl
xchg
test
daa
enter
cmpsl
pusha
jbe
test
mov
cwtl
pop
lahf
dec
incl
jp
movsl
xor
inc
xchg
lahf
loop
jle
out
adc
pop
mov
js
dec
dec
cs
push
cmpsl
fnsetpm(287
lret
sub
dec
and
add
pop
xor
cmp
sub
sub
movsl
pop
lods
mov
roll
out
sub
cs
imul
push
mov
jmp
loop
stc
iret
mov
add
jmp
inc
mov
outsl
dec
test
stos
inc
enter
xchg
rcl
mov
test
inc
and
mov
fld
pop
cmpsl
cmp
bswap
lcall
movsl
push
test
adc
mov
bound
ret
mov
out
inc
xchg
cmp
add
jb
xchg
jnp
filds
fdivl
pop
sbb
xchg
adc
push
scas
jb
xchg
add
dec
aas
sbb
sahf
lds
mov
clc
ja
out
sub
gs
mov
into
rol
sub
dec
in
inc
cmp
xchg
xor
cmp
loope
ss
sub
mov
cwtl
fwait
push
hlt
jecxz
sub
xchg
lahf
or
push
xchg
xor
stos
cmp
cmc
imul
xchg
dec
lds
js
popf
fld
iret
sbb
loope
add
fs
sbb
je
popa
sbb
lret
sub
and
mov
out
lret
cmpsl
loop
sub
sub
push
push
adc
xor
dec
sbb
subl
and
test
int
sub
push
mov
inc
cwtl
mov
inc
mov
sbbl
test
mov
stos
pop
lock
sub
es
sub
test
push
sarb
fdivl
andnps
pop
movsl
packuswb
pushf
test
pop
inc
inc
mov
inc
sahf
mov
xlat
ljmp
add
dec
jge
jnp
jnp
xlat
adc
insl
pop
andb
lock
adc
lods
cmp
repnz
mov
dec
xor
in
pop
xchg
lock
mov
test
in
or
loop
leave
daa
outsl
aad
mov
out
hlt
ret
sbb
ret
loope
jae
jno
nop
sub
xor
pop
jle
or
shl
inc
nop
movsb
lods
movsl
dec
popa
lret
sbb
jno
pop
xlat
sti
inc
cmp
sub
fistpl
jb
mov
and
lahf
adc
fadds
push
cmp
les
sbb
imul
enter
in
inc
adc
rcll
mov
push
add
bound
mov
xor
dec
rol
fistpl
pop
dec
faddp
ds
pop
xchg
xor
sbb
movsl
xor
add
jmp
arpl
mov
negl
call
jecxz
mov
mov
sahf
test
xor
insb
lahf
dec
sbb
lret
pushf
ljmp
fsub
loopne
jb
loope
faddp
loop
lock
das
fnsave
loop
and
push
inc
mov
hlt
sahf
rcrl
rorl
dec
pop
lret
push
xchg
scas
ret
iret
adc
clc
lret
dec
ds
movsb
push
sbb
loope
outsl
andb
inc
in
leave
cmpsb
inc
push
ficomps
add
add
pop
adc
xor
mov
fldcw
and
cli
pushl
mov
xor
loope
xchg
test
xchg
jp
out
push
cmpsl
ljmp
out
xor
inc
add
inc
mov
fiadds
lock
lods
pop
mov
push
aaa
das
scas
jo
dec
lock
push
lea
pusha
bound
adc
xchg
push
les
fbld
leave
sbb
loop
popf
mov
test
cmp
outsl
adc
add
xor
out
sbb
aam
and
inc
sub
std
sub
outsl
mov
sub
scas
sbb
push
dec
mov
mov
jl
mov
int
imul
jae
xlat
xor
ljmp
out
fistpll
rorl
shlb
xchg
pop
jns
js
fstl
sub
fmul
jge
rolb
inc
stos
or
call
call
in
fs
inc
jo
and
decl
and
les
jb
mov
mov
sahf
lods
pop
xor
xor
movsb
insb
mov
mov
inc
push
movsl
adc
aas
in
or
and
xchg
pop
imul
dec
pop
sbb
sbb
jnp
xchg
imul
pusha
es
cmp
cltd
mov
lret
mov
fisttpl
fcmove
in
fisubrl
aaa
sbb
sub
pop
data16
aad
es
adc
dec
stc
insl
sahf
in
sub
fisttpl
es
pop
hlt
lds
fwait
jle
push
or
cmpsl
jecxz
lahf
jnp
fdivrp
sub
xor
dec
pop
adc
cmp
jmp
call
or
cmpsl
cmc
sarl
pop
lock
mov
cld
andb
cmpb
pop
mov
nop
data16
mov
and
lret
push
pop
lcall
ret
dec
stc
iret
adc
rcrl
pop
inc
pop
lahf
pop
xchg
jbe
mov
and
sub
cmp
cmp
xor
and
xor
call
dec
clc
test
mov
pop
jg
sub
dec
fsubr
or
adc
mov
repz
push
sub
negb
mov
neg
add
xor
scas
add
and
leave
pop
push
sbb
adcb
arpl
sbb
push
mov
leave
add
ljmp
popf
jnp
add
fidivrs
jle
or
roll
dec
push
mov
fwait
cmp
stos
movsb
fdivrl
mov
addr16
pop
call
fimuls
or
mov
inc
movsb
pushf
dec
or
jns
dec
jne
psrlq
sbb
jo
inc
sbb
push
xchg
dec
push
mov
cmc
dec
dec
pop
out
idivb
pop
es
fdiv
outsl
xor
inc
dec
xor
mov
push
icebp
and
xor
mov
ret
xor
lahf
aad
cmp
jno
loop
adcl
sahf
mov
push
cmpsl
bound
stos
mov
pop
pop
ret
adc
mov
push
adc
mov
mov
push
mov
out
out
in
sbb
pusha
mov
sahf
pop
int3
cld
xchg
jp
cmp
cltd
stc
js
es
jne
leave
cmp
cmp
loopne
pushf
mov
enter
dec
jp
scas
add
xchg
add
xor
loopne
xor
dec
decl
xchg
push
jb
dec
stos
scas
adc
xor
shrb
mov
mov
and
add
pop
clc
addr16
scas
push
inc
mov
shl
push
inc
inc
iret
mov
mov
imul
add
leave
mov
xchg
sub
imul
cmp
mov
stc
pop
add
sbbl
ret
aaa
mov
add
pop
call
xchg
mov
push
jg
mov
cmp
stc
push
faddl
mov
pop
mov
das
jle
or
sbb
pop
cmpsb
dec
push
xor
clc
cld
or
jns
mov
xchg
jns
xor
pop
ds
jl
leave
adc
add
mov
clc
jge
push
add
insb
jnp
dec
mov
aaa
inc
lret
aas
add
mov
les
pop
add
pop
mov
xor
aaa
jmp
iret
push
dec
jge
ljmp
push
adc
frstor
xchg
addr16
dec
push
and
leave
mov
loopne
cmp
mov
aas
insl
daa
call
mov
daa
ret
es
xchg
repz
fiaddl
divl
xlat
dec
sahf
mov
mov
ret
push
adc
fwait
add
call
jo
add
pushf
mov
cwtl
and
retw
dec
cmpsb
divb
testb
jb
cli
push
dec
shrb
pushf
mov
cli
dec
aad
fimull
add
xor
lahf
stc
fldcw
mov
mov
sbb
loop
dec
pop
test
xor
inc
lea
test
leave
and
pop
mov
push
orb
push
fnsave
out
cmpl
out
jl
inc
fs
std
cmpsb
aas
push
mov
and
pop
fisubs
xchg
ret
and
xchg
mov
ljmp
bound
sbb
aam
test
in
sti
js
sub
lret
mov
mov
es
sub
shlb
imul
jae
lcall
jno
test
jnp
bound
and
jnp
cmp
dec
aaa
pusha
and
push
sub
arpl
pop
sbb
dec
xor
sub
sub
xchg
stc
sub
dec
xor
mov
adc
sbb
xor
cmc
and
test
sbb
lods
adc
inc
and
shl
sbb
pop
pusha
jmp
outsb
repnz
insb
test
pop
sub
pop
sbb
adc
in
pop
cli
cmp
xor
pop
sbb
mov
mov
mov
outsl
dec
je
cmc
cld
sbb
fisubs
in
jl
cmp
push
cmp
mov
stc
adc
in
cmpsb
rol
ret
loopne
inc
scas
xchg
popa
push
test
rcr
jg
dec
ja
into
rorl
test
xor
cmp
pop
xchg
outsl
xchg
andl
adc
movsb
push
xor
and
js
das
inc
pop
int
or
add
adc
push
push
sahf
mov
cld
jns
sub
push
lcall
fstp
cmp
mov
mov
xlat
int
lret
out
call
adc
mov
repnz
stos
shll
cltd
cli
xor
or
pop
mov
mov
cmp
pop
or
cmp
cltd
or
outsl
sarl
push
shl
rcll
inc
dec
icebp
push
dec
int3
ret
and
adc
cltd
xchg
mov
sub
out
cmpsb
jge
jne
pop
mov
imul
jge
add
xor
mov
sahf
push
hlt
inc
aad
testb
clc
fwait
sbb
jmp
pop
sbb
lods
pop
dec
movsb
mov
lods
mov
leave
sub
xlat
lds
dec
lret
mov
add
add
fwait
or
xchg
mov
imul
push
push
mov
aad
push
xchg
incb
xchg
scas
icebp
xor
lret
pop
jbe
jecxz
pop
mov
mov
mov
rcll
rcr
jb
or
repz
cwtl
pop
sbb
es
fdivs
stc
faddp
mov
das
sbb
xor
cmp
es
mov
lods
fimull
movsl
inc
cmp
inc
sub
aas
mov
dec
cltd
out
xchg
jnp
in
les
fisubrs
movsb
loopne
cwtl
xchg
and
inc
notl
jge
xor
mov
mov
mov
mov
call
xchg
inc
test
mov
or
mov
and
push
push
mov
frndint
push
fwait
mov
into
repnz
sbb
movsl
and
jl
and
fldcw
or
sar
hlt
or
mov
fstpt
pop
mov
inc
fisubrs
loope
jnp
and
fisubs
jne
repz
mov
fildll
cmp
cli
cltd
or
lock
push
jp
mov
aad
mov
push
pop
mov
loope
leave
mov
shlb
xor
dec
ret
xor
loop
insl
fldt
dec
loop
stos
in
jecxz
leave
or
xchg
test
out
hlt
or
xchg
dec
int
sbb
mov
mov
movsl
data16
add
popf
and
in
sub
das
cmp
pop
push
mov
xchg
mov
stos
and
in
mov
popa
push
daa
push
fwait
jmp
sbb
xlat
and
dec
bound
bound
push
loope
fwait
mov
pop
sub
inc
inc
xor
into
cltd
es
hlt
inc
push
push
stc
sarl
ljmp
les
inc
jecxz
sub
jb
gs
imul
pop
add
lcall
or
push
repnz
push
sbb
outsb
and
push
cld
icebp
icebp
mov
xlat
push
sub
or
mov
or
xchg
sbb
mov
sub
adc
sub
sbb
mov
testb
sbb
popf
test
mulb
test
ss
test
es
jecxz
repz
mov
cmp
lock
js
push
jbe
loop
aaa
fmulp
mov
push
and
shrl
pop
jno
push
imull
subb
push
repnz
inc
gs
xor
and
in
jo
mov
inc
cmpsb
mov
es
in
fcoms
int3
xor
jmp
ljmp
iret
xor
ret
nop
adc
std
xor
arpl
out
and
sahf
mov
xor
xor
rcrl
jns
add
lds
andb
icebp
xlat
sub
in
ret
out
mov
xlat
lahf
push
in
sub
and
xchg
out
cmpsb
orb
mov
lret
in
test
cld
ja
push
xchg
and
shlb
mov
adc
sbb
xlat
pop
les
sti
jbe
xor
push
mov
out
sbb
cld
stos
push
daa
inc
xchg
push
nop
ds
adc
xchg
jle
jg
or
clc
inc
outsb
clc
dec
jnp
adc
push
stc
cwtl
test
dec
cmp
in
imul
and
test
xlat
mov
dec
sbb
and
neg
out
sub
mov
or
imull
jl
stos
ds
dec
lods
ljmp
or
pop
loop
movsb
add
pop
xchg
push
mov
mov
ret
imul
ret
enter
mov
cld
pop
cld
insb
imul
pop
int3
ret
mov
or
aaa
fwait
iret
xchg
push
shll
mov
mov
shl
cli
fistpll
sahf
sub
cmp
test
pop
ljmp
dec
adc
jb
xor
insb
adc
inc
cmp
xchg
repz
and
iret
out
mov
lods
ret
and
test
movsb
fnstcw
inc
pusha
xchg
aaa
push
xor
mov
sbb
lret
fiadds
add
xor
mov
arpl
pop
mov
loope
lcall
pop
adc
jae
sbb
cld
adc
mov
push
xchg
push
fwait
push
lock
mov
or
sub
lret
xor
jecxz
pop
add
gs
xor
mov
cmpsl
mov
repnz
adc
pusha
dec
imul
or
call
addl
in
jbe
push
or
iret
leave
iret
pop
and
fistps
jnp
adc
cmp
outsb
push
daa
movb
int3
and
dec
jno
mov
in
mov
in
add
dec
push
cs
push
xchg
outsl
jb
xor
push
ds
movsb
cmc
sbb
dec
xchg
rcll
push
add
push
gs
jo
dec
divb
jg
mov
ljmp
push
inc
repz
xchg
mov
mov
jecxz
gs
and
push
lret
movsl
cmc
mov
rcrb
inc
mov
scas
movl
insl
mov
mov
adc
lods
and
fcmovnu
inc
cs
cmp
mov
jl
loopne
outsb
pusha
inc
xchg
lods
outsb
xchg
mov
push
hlt
leave
inc
aam
and
jo
push
push
xchg
lods
push
je
shlb
mov
lds
enter
pop
shrb
es
rcll
sbb
lcall
adc
adc
andb
pop
pop
jle
sub
xchg
and
sbb
icebp
jp
mov
add
jl
rcl
jecxz
lret
int
ljmp
call
lret
mov
xchg
loop
in
dec
mov
inc
mov
or
scas
push
ds
adc
outsb
pop
stos
mov
sarb
out
test
dec
dec
jno
fisttps
lods
mov
pusha
testl
ret
fdiv
fisubrs
push
loope
or
inc
adc
adc
sub
scas
xchg
sub
add
testb
inc
xchg
push
mov
jbe
out
or
xchg
xor
xchg
sub
jo
lahf
mov
pop
adc
jmp
push
shrb
sbb
cmc
cltd
jb
xchg
and
loope
xchg
ja
push
and
add
ja
pushl
popf
cmpsl
push
stos
sbb
adcl
scas
sub
push
pop
push
jns
in
mov
push
pop
idiv
inc
add
insl
cltd
or
pop
mov
jle
cmp
out
and
fisubs
psrlw
mov
push
push
test
aam
ja
cld
mov
pop
mov
ss
bnd
or
scas
lods
adc
lcall
or
in
xchg
inc
inc
adc
cmp
repnz
fnstenv
lret
push
fldt
cmp
mov
cld
test
mov
jo
or
stc
jg
jbe
out
sbb
dec
std
xlat
repnz
mov
mov
lret
add
fdivrl
mov
cmp
mov
cmp
je
popa
gs
daa
daa
in
inc
add
dec
leave
test
pop
cmp
loopne
daa
xor
in
mov
mov
xor
xor
mov
gs
aaa
jl
rcll
bound
mov
adcb
cmp
test
lods
xchg
lock
mov
pop
mov
cmp
add
fimuls
xor
popa
jecxz
fnstcw
shlb
pop
dec
ret
call
add
movsl
push
into
mov
sbb
or
shll
xchg
outsl
and
xor
movsl
bnd
lea
fistpll
cmp
mov
outsb
cmp
lea
movb
iret
mov
mov
xchg
inc
pusha
jg
insb
jno
and
adc
pop
lds
fstenv
mov
iret
test
inc
xchg
testl
incb
xor
test
imull
xor
inc
in
sub
mov
shl
cltd
cmpsl
mov
push
iret
pop
fwait
orl
or
mov
mov
jbe
xchg
xor
cs
scas
stc
push
xor
mov
outsb
mov
prefetchw
sub
lods
in
arpl
adc
imull
pop
dec
cmp
mov
jmp
mov
fstl
negb
adc
or
mov
cmpsl
sbb
dec
inc
mov
test
dec
add
add
in
insb
fwait
push
dec
ljmp
jno
lret
dec
xor
bound
leave
and
sbb
cmp
xchg
xor
pusha
mov
das
scas
out
clc
ret
push
jmp
adc
mov
jl
in
adc
jmp
lret
jl
inc
xorl
stos
mov
mov
enter
outsl
lds
aad
xchg
out
mov
test
adc
xor
popf
loop
mov
fsubrl
cmc
mov
xor
imul
fcompl
inc
inc
and
popa
ss
mov
mov
aas
or
sub
jb
push
sub
sbb
jg
je
in
pop
inc
jb
or
sti
dec
mov
mov
xor
leave
add
rorb
repnz
xor
push
inc
adc
arpl
sarb
fistpll
or
mov
jno
into
xor
rolb
repnz
mov
call
push
push
xchg
rorb
ja
movsl
sub
call
ss
xchg
addr16
out
in
sub
lret
or
mov
sbb
fnstcw
rcll
call
imul
cld
push
dec
xor
push
or
xor
cmp
inc
pop
push
pop
dec
pop
test
mov
jecxz
inc
and
or
mov
jp
aad
mov
mov
hlt
movsb
aad
inc
outsb
cmp
scas
pop
pop
rorb
jmp
stos
push
xchg
sbbb
sbb
repz
and
pushf
int3
in
lods
loop
pop
out
ret
pop
fs
mov
out
icebp
inc
mov
outsl
inc
pop
or
and
and
mov
cs
mov
call
iret
js
ficoms
mov
int3
out
push
imul
cmc
pop
mov
insb
repnz
lahf
or
cmp
sbb
mov
adc
js
inc
mov
bound
sbb
aad
repnz
inc
test
xor
mov
xor
cli
aad
cmp
stc
xchg
por
lret
shr
dec
mov
and
fcom
push
dec
fistpll
addl
lods
sbb
mov
addr16
sarl
sar
jmp
xor
cmc
mov
mov
push
push
push
jbe
xor
fidivrs
movsl
out
dec
test
insb
mov
xor
sbb
ret
jge
push
jae
pop
pop
jno
dec
cmpsl
jno
adc
pop
push
fcmovne
and
jne
popa
jns
rorb
adc
lret
dec
gs
and
pop
shrl
clc
sarl
arpl
icebp
das
in
gs
cmp
pop
loop
aad
xchg
lcall
loope
cmp
jmp
repz
or
andnps
push
sub
das
icebp
sarl
fldt
push
jmp
mov
clc
or
add
dec
insl
fwait
xchg
rclw
ret
xor
jne
scas
rcll
and
fs
lcall
mov
les
aam
mov
js
dec
lcall
pop
std
mov
mov
shll
xchg
jnp
mov
iret
mov
stos
in
inc
cmp
mov
push
mov
cmp
stos
sub
rorl
cmp
iret
xor
outsl
dec
jecxz
outsl
adcb
imul
orl
cmp
cmp
pop
and
inc
mov
inc
jbe
push
and
or
jnp
mov
gs
mov
mov
loopne
lahf
pop
cltd
add
add
ret
dec
mov
es
popa
push
ja
in
xchg
push
adcb
repz
inc
rcl
cwtl
and
mov
or
or
mov
iret
jne
sbb
xor
fiadds
cs
mov
icebp
xchg
incl
sbb
sub
movsb
xor
mov
and
sbb
mov
inc
cmp
add
xchg
mov
and
jl
push
pop
scas
fcmovnu
loop
sub
sti
push
cmp
cmpb
iret
hlt
fmull
mov
pusha
imul
ljmp
les
add
into
xor
jbe
aad
adc
jg
push
mov
jns
and
loopne
push
icebp
push
jge
mov
jo
pop
inc
xlat
sbb
stc
orb
mov
dec
pop
adc
mov
mov
out
push
add
out
or
out
ljmp
filds
jns
xchg
int3
sbb
add
mov
lar
or
pushl
hlt
push
stc
mov
stos
or
testb
divl
rorl
pop
pushf
lock
push
jge
rcrl
push
add
cmpsb
fdivrl
popf
jmp
lods
inc
push
push
sbb
dec
repnz
add
ja
insb
in
outsb
pop
dec
outsl
rol
push
or
fisttps
clc
push
jnp
gs
or
xchg
andb
mov
aaa
iret
shrb
iret
mov
adc
xor
sub
ljmp
dec
mov
nop
daa
mov
pop
inc
add
hlt
push
lcall
outsb
push
hlt
imul
mov
cmp
inc
mov
adc
jnp
jmp
mov
inc
sub
gs
aad
sub
adc
aaa
and
add
push
sub
mov
mov
inc
mov
xchg
adc
sti
pop
xor
jge
push
int3
aam
mov
lcall
jecxz
pop
mov
xchg
xor
xchg
stos
cmp
pusha
pop
or
add
call
xor
mov
je
leave
mov
fcomps
loopne
or
call
lcall
aad
xchg
sbb
enter
cs
or
pop
mov
push
andl
mov
jle
and
mov
imul
and
pop
sub
lret
cmc
sbb
pop
ss
mov
jmp
xor
push
push
nop
rcr
leave
mov
xor
and
repnz
mov
imul
xchg
dec
sahf
icebp
int3
and
cmpsb
dec
xchg
add
push
jns
jle
in
mov
leave
jg
xchg
fisttpll
mov
jae
popf
js
popf
xor
adc
xor
jecxz
dec
cmpsl
xchg
adc
rorb
mov
push
xchg
pop
xchg
or
out
jae
ficomps
sbb
xor
shr
fsubl
pop
inc
inc
test
out
aaa
xor
dec
out
or
mov
insb
mov
loop
xchg
rol
ror
jle
xor
sub
std
outsl
xor
stos
in
cmp
sahf
aaa
out
fiaddl
inc
dec
sub
rcll
add
lret
aaa
jns
int
sahf
xchg
sub
jp
pop
js
loop
loop
pop
mov
and
cmp
lods
enter
jl
pop
rorl
jb
add
psraw
add
mov
and
cli
icebp
mov
pop
jecxz
dec
insb
mov
and
leave
sbb
mov
call
cmp
fdivl
mov
mov
mov
insl
jns
xor
imul
arpl
leave
stc
fdivr
xor
jg
push
cs
cmpsl
fwait
leave
mov
nop
mov
popf
push
mov
xchg
es
sub
aad
xchg
repz
xchg
cmpb
cmp
lea
or
cmp
int3
dec
rcl
mov
adc
ret
dec
cmpsl
add
cwtl
call
and
test
lods
lods
push
shl
cmc
pop
jb
daa
mov
jg
sub
shll
lret
xlat
popa
cli
and
adc
jecxz
icebp
or
mov
mov
leave
inc
or
sub
ss
outsb
js
sub
push
out
ss
dec
inc
lcall
adc
xchg
aaa
in
push
cmp
or
cmc
pop
sbb
sti
popa
sbb
arpl
inc
sub
add
clc
xchg
out
add
lods
dec
pop
cmp
jp
fisttpll
fwait
ss
xchg
icebp
hlt
and
xchg
in
cmp
or
popa
mov
jbe
push
and
lcall
dec
rorl
sti
pop
ss
add
dec
ljmp
notl
scas
pop
out
dec
call
sub
ud0
gs
sub
xchg
data16
sbb
in
push
fldcw
sub
jb
fs
mov
mov
mov
ret
jmp
aam
ss
push
stos
and
jno
cmc
mov
bound
icebp
stc
mov
testb
mov
pop
cmp
push
sbbb
lahf
sbb
xor
shl
mov
mov
and
mov
mov
test
xor
or
jl
outsl
push
orb
shrb
inc
icebp
fs
cltd
dec
push
push
mov
xor
mov
jnp
pop
dec
mov
int3
pusha
or
xchg
inc
sbb
sti
push
stc
daa
and
jg
adc
enter
lods
xor
movsl
add
stos
mov
leave
std
test
test
fisttpl
push
sub
xchg
fdivl
stos
jmp
les
les
lretw
subl
adc
outsb
pop
in
cld
xchg
mov
outsb
push
enter
popa
fsubp
adc
adc
pop
xor
adc
xor
and
mov
lret
dec
mov
and
leave
pop
test
stc
jo
sub
clc
inc
cld
cmpl
fsubrl
inc
int
push
dec
out
mov
sti
stc
out
pop
arpl
xchg
jmp
mov
test
fprem1
ljmp
out
fcom
dec
sub
push
je
xchg
push
cmp
js
stos
xchg
ljmp
inc
test
push
test
ljmp
mov
mov
leave
imul
push
dec
jl
pop
sub
addl
rcrb
add
jle
sbb
jecxz
cltd
inc
xor
sahf
fldl
dec
ss
aam
push
aad
sub
mov
mov
clc
pop
jge
nop
cwtl
add
pop
mov
pop
jnp
mov
js
pop
cmpsl
xor
jae
jbe
xchg
push
rcl
pop
cld
and
adc
aad
cmpsb
pushf
imul
ret
xchg
sub
fsubl
dec
jb
out
lods
jae
int3
sub
leave
mov
push
xor
adc
xor
int
cmp
ficoms
xchg
fsubl
adc
scas
push
push
push
cmpl
inc
and
enter
hlt
xor
out
mov
insl
pushl
dec
leave
mov
sti
cmc
mov
pop
in
negl
mov
pop
hlt
inc
jmp
mov
call
je
inc
out
dec
mov
sub
fimuls
adc
movsl
popf
add
lock
cmpsl
or
je
mov
sbb
hlt
popf
jbe
and
movsl
stc
add
ffreep
jge
or
js
mov
xchg
mov
mov
test
idivl
xor
mov
mov
mov
jmp
scas
push
sbb
mov
push
scas
mov
mov
aas
out
std
inc
sbb
ss
test
mov
cwtl
mov
cmc
lods
xchg
test
dec
or
js
inc
test
dec
dec
out
dec
xchg
xchg
loope
mov
out
dec
mov
cmp
pop
divb
scas
jns
popf
push
push
stc
xlat
or
jge
inc
pop
jmp
mov
mov
mov
repz
sbb
enter
xchg
dec
cmpsb
mov
jp
popa
or
add
imull
ror
push
xor
add
fstpt
ret
xor
sub
or
dec
ljmp
lods
dec
ja
cmp
vxorpd
dec
fdivrl
cs
leave
ja
jp
jnp
lcall
stos
jmp
lods
jne
cmp
orl
les
jmp
xor
sub
in
rcll
sbb
dec
push
dec
pop
imul
cmp
sbb
aam
inc
nop
inc
pop
imul
fst
movsl
ficoms
pop
cmc
dec
and
pushf
leave
rclb
cmp
shl
test
xchg
jo
ret
mov
inc
mov
or
test
push
inc
mov
roll
push
add
xchg
les
cmp
cmp
mov
jae
xlat
nop
mov
lgs
inc
add
clc
add
imul
xchg
adc
in
repnz
inc
xor
repz
test
cmp
rorb
call
xchg
mov
pop
pop
jno
mov
mov
or
mov
dec
cld
insb
stos
in
loopne
inc
adcb
aad
mov
cld
icebp
testb
inc
or
adc
pop
add
mov
aad
fsubs
adc
push
or
out
in
mov
sbb
into
punpcklbw
pop
inc
add
jns
jp
or
ss
pushf
inc
test
dec
into
iret
inc
mov
sti
mov
push
add
jecxz
mov
fsubrs
jg
icebp
push
push
shl
repz
loop
add
xor
incb
repz
stc
adc
or
ret
stc
pop
rorl
cmc
rorb
mov
xchg
jle
aam
push
and
inc
add
cs
or
fsubrl
pop
addb
and
push
in
lods
arpl
sub
aaa
pop
add
stos
mov
loopne
mov
cmp
jecxz
inc
testl
xor
xchg
iret
jmp
push
push
inc
mov
xlat
jno
fwait
xor
push
sub
loopne
pop
testb
iret
ja
mov
mov
push
imul
jle
into
jbe
mov
mov
inc
mov
das
cs
cmp
xchg
aam
out
aad
subl
and
int
mov
sbb
cmp
cli
or
lret
clc
pcmpgtb
jbe
add
xor
sub
xchg
push
xchg
aam
cmp
cmpb
xchg
lods
mov
mov
mov
dec
add
dec
push
sub
scas
mov
push
int3
ret
cmp
jne
mov
adc
out
mov
les
mov
enter
test
mov
xchg
mov
pop
jle
xor
lds
enter
sbb
xor
arpl
or
push
xchg
mov
or
into
jns
lret
jge
pusha
jbe
inc
cltd
jp
cld
xchg
mov
and
add
lds
inc
push
xchg
and
into
jnp
movsb
rorb
or
sahf
fistl
aaa
je
les
rcrl
sub
fcmovu
dec
jmp
adcb
sahf
xchg
lahf
hlt
push
jmp
mov
push
pop
outsb
sbb
cmpsb
push
jg
cmp
nop
lret
pusha
in
add
xchg
int3
loope
imul
or
mov
ja
pop
and
pop
data16
dec
imul
inc
pop
int3
sarb
shrl
mov
mov
leave
sbb
int3
test
xchg
pop
xchg
rcll
and
insb
arpl
dec
mov
inc
mov
xchg
outsl
loope
outsl
scas
mov
xchg
out
sbbb
inc
dec
outsb
pop
pushf
sbb
adc
push
cmp
dec
dec
add
pop
mov
aam
stc
icebp
lock
adc
push
fsubrs
mov
div
mov
xchg
aam
pop
insb
call
lods
dec
pop
repz
dec
js
out
imul
jb
push
jb
jns
test
sbb
in
push
sub
mov
jne
in
or
sarl
jg
out
fwait
xor
push
aas
lods
popa
pop
dec
sbb
out
dec
lds
mov
std
cltd
imul
test
stc
or
jno
jecxz
in
call
adc
inc
and
pop
ds
mov
imul
push
negl
sahf
push
adc
test
jne
ss
js
shlb
pop
enter
sbb
in
arpl
mov
std
scas
cmc
ficoml
js
mov
inc
mov
xor
mov
fcmovnbe
inc
or
stos
xor
mov
sub
inc
fldl
movsb
outsb
ds
pop
cmpsb
xor
icebp
idivb
sbb
mov
orb
inc
push
fwait
xor
inc
aad
ret
inc
inc
push
arpl
sub
sub
mov
lods
iret
jb
adc
daa
ljmp
xchg
cmpsb
rcrl
jge
sahf
add
and
ret
hlt
sbb
jg
jl
es
and
sub
sub
mov
push
stos
scas
and
popf
orps
stos
rolb
sub
ja
push
shlb
das
add
push
lea
mov
pusha
push
push
pop
mov
mov
lret
lret
insl
out
sbb
in
out
xchg
adc
push
mov
add
test
lock
lret
fs
xchg
pushf
push
cmc
mulb
pop
cmp
xchg
dec
fisttpll
or
fwait
pop
cmp
ss
jmp
fs
lret
push
lea
mov
mov
add
xchg
push
sub
rorb
in
lret
fwait
xchg
add
popa
sub
xchg
sahf
es
mov
jae
shlb
lret
push
jb
fstl
xchg
and
mov
repnz
imul
js
or
decl
sti
mov
sti
pop
ficompl
cmp
adc
ret
mov
sub
imul
lret
cmp
ja
repnz
mov
jns
xor
jg
ret
addl
pop
or
rcrl
push
inc
jb
push
fisttpl
mov
dec
push
enter
add
inc
jbe
int
add
adc
xlat
jb
rclb
fnstsw
xchg
popf
cmc
jecxz
cmp
jnp
shl
call
cwtl
mov
inc
sub
out
scas
or
iret
pushf
icebp
ja
dec
mov
pop
xlat
xchg
xor
inc
cltd
pop
dec
movsb
xchg
mov
cmc
pop
dec
dec
repnz
xchg
ljmp
sub
xor
add
movsl
out
sarb
loopne
xor
out
arpl
jbe
push
ret
jno
jne
push
mov
ss
cmp
and
lock
jecxz
inc
fwait
mov
pop
add
leave
adc
stos
jge
in
fcompl
icebp
stos
inc
cmp
clc
inc
add
mov
cli
fnstcw
outsb
xlat
push
or
mov
scas
pusha
stc
xchg
adc
or
insb
sti
je
imull
mov
and
and
adc
jecxz
xchg
mov
in
adcb
sbb
push
movsl
test
pop
dec
sbb
ret
in
dec
mov
xlat
xor
mov
out
adc
mov
jmp
iret
mov
mov
cmp
sub
mov
test
xchg
sub
lods
adcb
arpl
loope
arpl
cmpsl
and
adc
call
sbb
adc
mov
lcall
in
dec
cmc
mov
sbb
push
jae
fiaddl
cli
push
aam
or
or
fxch
fucom
inc
popa
sbb
std
movsb
xor
sub
lret
pushf
shrb
daa
sub
sbb
in
xor
test
out
push
mov
lock
or
jmp
insl
pop
mov
into
dec
or
jne
jno
inc
into
xchg
repz
push
in
popa
cli
jl
pushw
mov
mov
cmp
add
lret
cwtl
dec
loopne
imul
mov
imul
lahf
add
pop
pop
sub
stos
add
mov
add
in
nop
stos
out
cmpsb
movsb
es
sub
adc
xchg
dec
pop
pop
es
or
std
test
sub
aaa
cwtl
rcrb
mov
push
ss
add
imul
call
arpl
fdiv
shl
pop
lahf
js
in
push
sub
jae
in
sub
adcl
lahf
push
inc
lea
mov
sub
jne
jmp
adc
out
inc
mov
sbb
add
pop
pop
fstp
jp
inc
xor
jbe
fwait
or
cltd
pop
shrb
adc
and
loopne
sub
repz
test
mov
cmp
cmpsl
pushf
stc
idivl
aas
inc
jecxz
loope
sbb
roll
dec
xchg
insb
lds
or
mov
dec
pop
push
jmp
add
aaa
in
lret
mov
lahf
cltd
sub
push
push
cmp
jecxz
and
mov
mov
xchg
es
clc
xchg
aas
fcoms
push
push
imul
cmp
sbb
sub
mov
into
xchg
and
mov
xor
xor
fs
or
fldt
pop
and
out
xchg
sbb
movsl
push
sbb
fsub
mov
and
mov
xchg
fldt
push
xor
dec
int3
imul
push
das
xor
data16
mov
sti
stc
leave
jbe
aad
inc
test
xor
in
and
add
out
xor
jae
in
lcall
ret
imul
sbb
outsl
lods
cltd
jge
lock
or
insb
idivl
push
or
push
mov
xchg
sar
sahf
and
cmp
sub
popa
insb
pop
gs
and
mov
inc
nop
jge
add
sub
mov
mov
push
xchg
ja
add
negb
rol
inc
inc
mov
jecxz
aaa
cmp
add
inc
mov
xor
stc
aas
push
jecxz
pop
icebp
jb,pn
icebp
mov
and
pop
xchg
insb
adc
test
push
or
dec
js
mov
lahf
cwtl
scas
xchg
mov
sbb
outsb
adc
testl
ljmp
add
sub
jnp
dec
popf
mull
dec
ficoms
adc
divl
xchg
insl
test
int3
in
sbbb
mov
mov
lods
in
cmp
adc
dec
mov
fistpll
push
ss
xchg
test
cmp
je
cmpsl
call
js
mov
out
add
cmp
aam
rcrb
arpl
sbb
and
iret
and
mov
test
lcall
mov
loopne
pop
mov
loopne
add
icebp
mov
mov
mov
aad
mov
mov
lods
std
add
xchg
scas
adc
js
ljmp
dec
or
lods
add
fadds
pop
or
fmul
leave
jne
fs
in
jns
inc
cmpxchg
pop
js
insb
mov
test
aas
aad
lods
into
dec
outsb
xchg
cltd
inc
mov
xchg
sti
in
mov
xor
push
push
xor
fldt
int3
cld
mov
mov
loope
ja
xchg
insb
sub
jnp
insl
cli
aam
testb
mov
sbb
xchg
push
lret
sti
in
mov
sbb
sub
das
cs
push
imull
sbbb
dec
push
cs
xor
inc
cmp
push
mov
fmuls
out
test
and
iret
lock
out
cld
shrb
pop
int3
cs
mov
into
adc
div
ret
push
jae
jmp
das
add
jl
xor
sub
adc
pop
sbb
sub
xlat
mov
mov
cwtl
mov
mov
inc
dec
mov
pop
push
pop
lods
dec
idivl
mov
adc
mov
subl
lret
rorb
sbb
out
push
mov
movsl
lret
in
aas
inc
stc
add
inc
and
int3
cltd
and
pop
dec
leave
gs
pop
test
mov
and
aaa
inc
cmpsb
and
add
mov
outsl
stc
or
clc
cmp
adc
bound
popf
cmp
push
inc
fsubs
test
lret
aad
in
outsb
test
xor
cmpsb
sbb
xor
ficoml
outsl
and
xchg
jo
rcl
push
jp
or
nop
sbb
and
stc
stos
mov
inc
cmp
dec
int
push
test
das
dec
push
shlb
and
sub
sub
jne
push
lods
rorl
fnsave
adc
or
mul
cmp
mov
mov
loop
outsl
stos
addr16
outsb
stos
inc
nop
dec
xorl
pusha
inc
je
lods
arpl
cmc
stc
addb
and
js
ljmp
adc
pop
addb
out
dec
cmp
divb
jae
lcall
jno
les
jp
mov
aad
call
out
push
test
mov
push
mov
nop
fmull
outsl
xchg
mov
popf
fstl
fstps
push
cmc
gs
pushf
movsb
das
cld
insb
pop
cmc
stc
jbe
outsb
ss
fildl
out
cmpsb
push
push
cmp
lahf
xchg
pop
sbb
and
cmpsb
es
aas
add
aaa
push
mov
lcall
adc
push
jl
cmp
pop
mov
loop
push
call
push
inc
add
mov
mov
outsb
add
imul
jnp
bound
push
sub
mov
rcll
xor
sbb
inc
gs
pop
xchg
mov
mov
jo
push
cs
hlt
lods
inc
jmp
push
or
inc
test
dec
pop
or
out
loope
fs
leave
dec
mov
ret
lret
inc
scas
mov
sarl
mov
adc
jo
sti
cmp
sbb
cmpl
mov
lods
xchg
mov
jb
and
adc
add
jb
in
out
filds
cwtl
xchg
pcmpgtw
jbe
pop
shl
inc
or
ffreep
jne
leave
sar
scas
sub
jmp
rolb
cmpsb
bnd
mov
adc
fdivrs
push
fimull
clc
xchg
mov
lods
jnp
bound
je
add
pop
addr16
dec
xor
loopne
fwait
imul
mov
cmp
repnz
adcb
incb
push
adc
dec
imul
pop
and
daa
mov
rcrl
es
negb
mov
inc
cmpsb
jmp
rolb
dec
xorl
popa
and
mov
jo
lods
ss
push
push
bound
mov
cwtl
inc
scas
rorb
repnz
in
sbb
das
jno
pop
sbb
cmp
push
outsl
movsl
scas
lret
cwtl
cmp
scas
push
jne
ret
sbb
inc
jns
and
mov
inc
push
jns
jns
dec
scas
mov
aaa
lcall
mov
cs
xchg
xchg
cs
scas
or
and
jmp
xor
addr16
bound
test
incl
inc
sub
inc
fldt
es
and
insl
add
in
insb
aaa
pushf
adc
stos
dec
cwtl
or
and
xor
cmc
ret
fsubr
fists
daa
push
pop
cs
insl
std
push
adc
pop
fwait
or
mov
lret
and
scas
icebp
lods
or
getsec
jle
hlt
mov
hlt
test
mov
mov
xchg
jae
repnz
push
repnz
pop
shrl
ja
push
cld
popl
dec
mov
sti
or
pop
incb
fwait
sub
in
cltd
mov
test
rolb
loope
pusha
xchg
adc
mov
aaa
ret
adc
add
adc
xchg
aaa
mov
sbb
iret
push
pop
std
push
out
pop
push
sub
clc
push
push
pop
cmp
xor
push
test
fdivrl
mov
sbb
stos
xor
mov
xchg
sarl
inc
inc
roll
sbb
mov
popa
sub
lock
in
stc
sub
adc
imul
hlt
push
out
or
mov
xor
xor
shlb
mov
inc
loop
dec
add
lods
xchg
inc
addr16
dec
fnstcw
imul
shll
adc
dec
clc
out
lock
stos
adc
mov
rcll
push
in
imull
ret
mov
cli
jbe
push
cs
ja
out
aas
cmpb
adc
js
adc
insb
popf
stos
push
fcompl
repz
inc
dec
icebp
ret
rol
popa
icebp
sub
ret
fidivs
test
sub
mov
mov
xchg
sarl
pushl
sbb
outsb
add
mov
movsb
cmpsb
pop
aad
cmp
and
mov
cld
jg
jecxz
xor
mov
outsl
ja
dec
add
xchg
inc
sub
in
pop
aam
jbe
out
or
push
jne
xor
loopne
pop
pop
mov
in
rclb
xchg
xchg
cmp
sbb
push
dec
dec
add
push
imull
test
imul
mov
jns
jp
dec
sub
cmp
sbb
mov
inc
out
dec
lods
pop
inc
stos
pop
mov
push
inc
popf
sub
movsl
mov
pop
rolb
leave
imul
and
fld
adc
mulb
fucom
xchg
out
xor
das
sbb
popf
insl
add
adc
in
sub
lahf
test
mov
popa
push
ret
push
imul
dec
cmp
std
cmp
sbb
mov
jg
les
xor
sbb
mov
scas
xchg
pop
add
dec
gs
xchg
fdivl
stos
cli
faddl
clc
pop
rcrl
gs
cmp
ret
sub
adc
pop
sarl
pop
adc
stc
pop
insl
xor
dec
gs
repz
inc
xor
lock
push
shll
jl
mov
into
jo
pop
jmp
les
out
pop
bound
std
add
mov
mov
ficoms
sbb
mov
cmp
icebp
cmp
cmp
nop
sarb
pop
repnz
faddl
xchg
cmp
add
adc
xor
je
jo
shrb
xor
ss
ficompl
js
insl
fdivl
jnp
ljmp
xor
cwtl
jmp
fwait
inc
aaa
push
imul
negl
xchg
inc
sub
inc
fdivr
and
cld
ljmp
cmp
nop
daa
out
and
movsb
sub
lret
pop
push
aad
sub
push
adc
xchg
lret
sbb
push
dec
iret
cmc
jno
or
sarb
xor
or
cmp
xchg
xor
xchg
jae
movsb
gs
sbb
decl
add
jno
or
mov
sbb
gs
ficoml
cmpsb
ljmp
shrb
mov
pushf
int3
loopne
bound
and
jae
fs
xchg
cmovbe
iret
cli
adc
dec
xchg
cli
lock
aaa
mov
out
int3
sub
cwtl
fsubrp
mov
iret
in
scas
cli
jp
sbb
in
push
andb
xchg
cmp
push
in
dec
jmp
data16
adc
adc
cmp
shlb
sub
fstpt
inc
repnz
adc
and
sub
or
out
inc
notl
ss
popf
jge
jle
out
push
je
dec
insl
call
jecxz
mov
mov
std
pop
popf
icebp
sbb
fnstcw
cwtl
lret
lods
lahf
inc
subb
pop
jl
mov
lock
sahf
dec
ret
mov
push
faddl
push
push
dec
jle
repnz
loope
add
mov
xchg
fiadds
adc
inc
mov
lea
out
cld
sub
mov
fisttps
shl
xor
inc
jecxz
cmp
sarl
aam
sub
std
xorl
xor
popa
mov
mov
pop
ds
scas
pop
test
call
icebp
int
jle
adc
rorl
sbb
lock
test
pop
lret
aas
dec
dec
push
cmp
mov
dec
push
jecxz
lds
clc
mov
je
ljmp
and
inc
lods
push
clc
sarb
inc
imul
mov
int
jae
sub
fdivs
adc
sarb
iret
inc
pop
test
xor
or
movl
lods
inc
xchg
xchg
loopne
andl
dec
cmpsb
or
test
jmp
shl
cmp
cld
dec
jge
cltd
dec
push
xchg
cmp
lret
test
pop
adc
ja
out
insb
push
xchg
scas
sbb
jno
pop
into
je
lcall
jecxz
mov
rcrb
ds
std
mov
test
loop
outsb
mov
fs
mov
lods
inc
ret
adc
fcmovnu
stos
ret
lock
xchg
pushf
nop
cmpsb
lds
and
ja
inc
loope
jecxz
pop
push
adc
adc
shlb
adc
jle
sub
sub
into
ficomps
sub
push
or
add
mov
lahf
xchg
and
pushl
xchg
clc
mov
sbb
xor
cmc
aad
add
popa
sub
add
loope
mov
in
inc
pop
cmp
mov
inc
mov
and
iret
out
push
mov
jo
and
fwait
adcl
je,pt
mov
xor
out
pop
sub
inc
dec
iret
ljmp
dec
mov
jp
sahf
pop
add
adc
or
sub
jo
push
xchg
jmp
jbe
mov
lret
fadd
les
push
jmp
mov
pop
es
subb
push
push
stos
push
adc
shll
cmpsl
push
lods
inc
and
push
push
scas
xor
xlat
jo
pop
xchg
arpl
xchg
xchg
repnz
mov
clc
jno
in
push
and
bnd
in
mov
mov
xchg
pop
test
loopne
aam
xor
test
dec
in
movsl
call
shrd
pop
lods
sub
adc
std
fistpl
xchg
mov
sub
stc
mov
inc
dec
popa
ss
test
stos
push
push
jp
inc
pop
fsubrp
insl
sbb
sti
inc
pusha
mov
pushf
mov
das
sub
iret
jle
lret
dec
or
stos
fdiv
cmp
dec
fidivl
mov
push
testl
sahf
cmp
pusha
dec
dec
jmp
jg
mov
fldcw
test
repnz
jg
ljmp
outsl
test
leave
lds
cmp
rcll
cmpb
mov
das
rorl
sbb
sub
mov
movsl
out
sti
lock
sbb
push
xchg
adc
call
jg
pusha
jle
xor
mov
add
enterw
test
jp
dec
mov
rcl
mov
mov
in
push
mov
xchg
dec
jmp
or
mov
mov
mov
popf
in
out
insl
push
push
hlt
mov
jae
or
xchg
repnz
rclb
cmp
sub
andb
aas
jg
jge
lods
mov
pop
mov
ljmp
daa
je
add
cmp
inc
out
mov
rcpps
mov
inc
hlt
cltd
pop
das
inc
hlt
shll
inc
mov
adc
jmp
nop
or
imul
or
cld
mov
lcall
xchg
in
push
cmpsb
mov
mov
leave
pop
xchg
and
add
sbb
add
movl
xchg
and
fbstp
aaa
lcall
xor
in
insl
dec
adc
fdivrl
out
in
stos
xchg
cmp
jle
rolb
pop
lea
dec
adcl
sbb
adc
popa
ljmp
cli
push
sub
cmp
add
push
test
pop
ja
jmp
pop
and
gs
jge
or
mov
adc
scas
std
pushf
out
pop
xor
push
push
sarb
mov
sbb
jo
inc
jno
cmpsl
loopne
dec
adc
in
sbb
jns
cmpl
movsl
sbb
in
fsub
sti
lods
or
pusha
push
pusha
stos
jecxz
jmp
push
or
popa
mov
jne
push
jo
sbb
and
dec
lahf
adc
mov
pop
cs
ds
lret
adc
sub
fwait
jecxz
sbb
sub
cwtl
cltd
vpgatherqd
fldcw
addr16
ret
divl
and
dec
outsl
mov
pushf
jb
test
cli
imul
cli
inc
sub
push
addr16
dec
pop
mov
mov
sbb
mov
jnp
xchg
xchg
dec
jmp
lods
rcrb
jne
push
xchg
scas
movsl
mov
aas
jbe
jge
ficoml
fldl
mov
pop
ud2
es
cld
sysenter
in
jae
in
lret
jl
popf
aad
push
pop
mov
jecxz
cmp
incb
int
lods
sbb
iret
add
loope
cmpl
ja
sub
shll
cmc
dec
addr16
lret
add
add
jg
imull
aas
pop
test
dec
insl
inc
stos
mov
fs
fwait
in
sbb
push
addl
xchg
and
int
xchg
jecxz
inc
sbb
mov
pusha
daa
iret
sub
pop
jno
enter
mov
inc
bound
cmc
adc
arpl
fistps
and
mov
mov
mov
into
jno
mov
arpl
scas
ret
shrl
data16
mov
xchg
jns
mov
fcoml
xchg
dec
in
mov
push
incb
xchg
or
adc
js
jbe
mov
push
or
inc
xor
fistl
push
mov
xor
mov
cltd
incl
sub
cmc
out
inc
aaa
push
sub
jp
loopne
out
out
inc
xor
jl
push
movsb
js
jl
or
add
dec
imul
adc
test
xor
cwtl
push
mulb
clc
xor
outsb
inc
xchg
mov
jae
cld
xchg
inc
in
jmp
fsubrs
sahf
mov
and
call
pop
xchg
cmc
loop
sar
mov
jp
dec
cmp
mov
mov
mov
cld
out
pop
leave
stos
push
enter
jle
insb
rcll
lods
lds
cmpsl
sub
movsl
test
fs
sub
out
sbb
shr
addr16
jo
stos
outsb
xor
cmp
fsts
mov
mov
push
and
dec
enter
test
or
fistpl
std
push
jnp
push
mov
jmp
rol
mov
adc
jecxz
push
add
and
rcrl
repz
test
push
bound
clc
and
and
add
fnstsw
mov
or
cmp
mov
inc
cmp
roll
in
js
pop
pusha
pusha
xchg
sub
pusha
mov
enter
nop
inc
sti
pop
aas
data16
test
or
test
jg
xor
adc
pop
sbb
push
pop
fnstsw
int
add
mov
and
std
subl
sbb
adcl
sbb
lret
sub
fcompl
add
jnp
lahf
fsubrp
jge
adc
shll
xchg
test
lret
ds
jmp
mov
fidivs
fisttpl
pop
xor
ficoml
out
mov
mov
out
scas
pusha
xchg
jle
adc
mov
sub
insl
call
repz
ret
mov
dec
xor
fstl
sbbb
push
jge
push
stos
js
xor
pop
mov
loopne
rcl
cmp
mov
pop
stc
rcll
fcoms
add
mov
call
mov
inc
cli
stc
lea
stc
jns
cwtl
stc
imul
cs
cmp
sub
aad
int
xchg
icebp
add
out
test
mov
jmp
inc
pop
movsb
xchg
and
cmp
dec
xchg
ficoms
sub
and
jne
push
cmp
mov
or
sbb
xor
lret
push
jae
je
mov
test
sar
out
xor
outsl
flds
adc
pop
into
jnp
js
popa
jg
testl
xchg
cmp
push
les
lahf
or
or
inc
jge
mov
ror
mov
and
sub
push
in
pop
cmpb
lahf
hlt
jle
xchg
or
mov
jmp
ds
jmp
rcrl
lahf
pop
std
mov
xchg
ss
movsb
imul
jb
sub
mov
arpl
xor
popf
inc
jmp
gs
rol
aam
jae
out
ret
int
jg
mov
add
dec
cmovs
lods
cs
xchg
xchg
pushf
jge
testb
out
cld
adc
jne
outsl
xor
fdivrp
add
in
insl
jge
jmp
enter
lods
cwtl
pop
xchg
mov
sub
mov
sub
sahf
lods
mov
and
in
dec
test
dec
push
dec
cmpsb
sub
mov
sub
add
test
call
cwtl
pop
inc
pop
xor
popf
cmp
mov
mov
cltd
cwtl
or
out
jp
xchg
inc
add
add
cld
mov
ljmp
push
sarl
lock
repnz
ret
xchg
lcall
xchg
push
int3
jmp
xorb
xor
fdivrs
lret
jle
xchg
inc
and
xchg
insl
std
add
push
into
popf
repnz
arpl
push
test
popa
dec
out
xchg
mul
xor
bound
xor
sub
imul
mov
movsb
inc
push
stc
bound
hlt
add
ja
sub
adc
popa
sbb
adc
lcall
add
jg
xchg
mov
add
test
scas
inc
sbb
mov
mov
jecxz
insl
mov
lods
cld
loope
ljmp
cmc
and
adc
lahf
movsb
int3
call
rclb
fisubs
cmp
aaa
fdivrl
or
push
addr16
adc
sbb
fstp
outsb
xchg
inc
jnp
mov
negb
pusha
mov
cs
mov
mov
push
fcomp
iret
repnz
stos
adc
outsl
adc
mov
mov
add
cmc
icebp
dec
fadds
or
les
bound
negl
mov
fsubs
aaa
in
lea
pop
inc
lock
inc
fnstenv
int3
mov
cld
dec
imul
mov
fisttps
ret
popa
dec
pop
or
dec
mov
cmpsb
pushf
ret
bswap
and
pop
nop
adc
movsl
sbb
jl
mov
sbb
pop
push
cmp
cmp
jae
in
sub
popf
inc
jg
cmpsl
outsl
add
sub
data16
int
inc
lods
pop
mov
fwait
mov
stc
mov
call
pushf
cmp
mov
call
das
pushf
fdivl
jl
adc
pushf
in
clc
mov
test
add
mov
sbb
js
lods
aad
pusha
add
cmpsl
adc
push
repnz
movsl
and
xor
mov
lret
mov
cmp
mov
lcall
pop
adc
sahf
pop
jg
adc
cmp
push
dec
add
scas
daa
scas
ds
daa
sbb
js
ljmp
insb
xor
addps
mov
adc
addr16
cmp
in
mov
outsl
add
inc
push
fmul
in
adc
inc
sahf
sahf
in
xor
adc
and
or
adc
cmp
icebp
test
sbb
jns
pop
sub
enter
jecxz
outsl
out
int3
push
cwtl
cmp
ss
sbb
andl
cmp
xor
test
into
push
sub
xchg
lods
dec
hlt
mov
and
dec
outsb
mov
insb
xor
lods
sub
lea
repnz
cmp
in
test
shll
cmp
repz
stc
movsb
out
es
mov
sbb
jnp
jl
imul
movsl
testb
xchg
or
pushf
inc
or
call
std
and
jne
fstpt
sbb
fdivrl
fbld
adc
adc
jno
mov
and
mov
jne
pop
xor
stos
sbb
xchg
lahf
int3
into
mov
ljmp
adc
lret
pop
jmp
push
sbb
aas
xchg
std
add
pop
jo
mov
ds
insb
ficomps
insb
out
daa
push
mov
mov
sbb
ror
je
pushf
cmp
xchg
jno
dec
xchg
sub
mov
aam
imul
movsl
and
sti
xchg
in
ljmp
lea
dec
test
mov
xchg
lds
rcrl
mov
pop
xchg
dec
ss
or
push
daa
add
push
fiadds
out
test
lahf
clc
cltd
cmpsb
push
ret
fcoms
js
adc
or
scas
in
mov
pop
add
lock
mov
or
and
cmpsl
hlt
sbb
xor
adc
insb
pop
xor
cmp
mov
fwait
push
or
sti
xchg
mov
push
lods
and
insl
push
inc
mov
movsl
rcll
mov
outsl
cmp
cmpsl
dec
xor
xchg
cmp
lods
sub
mov
pop
adc
sub
cmp
inc
pop
lock
data16
jecxz
xchg
test
jae
lock
jg
cs
sbb
push
push
dec
jb
mov
push
fldenv
shrl
rcrl
add
js
and
and
pushf
dec
addr16
pop
adc
out
mov
xchg
xchg
push
lock
mov
jl
pop
inc
mov
test
xor
dec
insl
xchg
lods
push
dec
test
scas
aad
xchg
sarl
lret
sbb
lret
outsb
add
fbld
jge
mov
jb
inc
dec
pop
jg
push
insl
imul
sub
mov
mov
add
lods
dec
aaa
and
and
insl
dec
cmp
loopne
mov
fnstsw
adc
mov
leave
faddl
mov
div
out
cwtl
aam
push
dec
adc
adc
lods
add
jg
jb
cwtl
xchg
movsl
aam
shll
sbb
push
cwtl
arpl
sbb
or
pop
push
fwait
push
inc
mov
cmp
adc
lods
fstpt
cmp
stos
and
push
dec
push
shll
pop
int
js
xchg
aad
xchg
sub
xlat
test
mov
std
loopne
ret
loope
push
insl
imul
jns
pop
lret
inc
xchg
dec
inc
lods
inc
ja
mull
sub
sub
shl
stc
fldlg2
xchg
jp
mov
cwtl
xchg
fs
add
int3
cmpl
inc
add
mov
push
push
add
add
push
xchg
and
xchg
imul
ja
stos
mov
cmp
push
jne
bound
dec
and
outsl
iret
xchg
mov
jno
cwtd
into
xor
inc
orb
movsl
fimull
int3
jbe
jecxz
dec
scas
int
outsb
fnstsw
mov
lahf
cltd
insl
add
lods
bound
lret
push
pop
pop
or
out
or
xor
or
jno
pusha
lea
nop
shl
push
lcall
shrb
insb
or
cs
je
cmp
lods
fdivrs
pop
std
xchg
xchg
sahf
or
mov
adc
jp
push
mov
stos
jae
int3
mov
inc
repnz
add
mov
jl
cmp
dec
gs
ja
sbb
into
outsb
movmskps
push
inc
cmc
gs
push
mov
jle
inc
call
not
xor
cmp
cmp
adc
jnp
sbb
insb
dec
pushf
push
lods
and
or
adc
subl
stos
cmp
add
gs
syscall
adc
and
and
pop
test
inc
flds
mov
mov
xchg
and
dec
mov
xor
nop
xchg
inc
cmp
add
hlt
sbb
xchg
dec
and
jge
mov
das
xor
cwtl
sub
popa
or
pop
lds
cmp
inc
push
loopne
stos
jb
lods
cmp
fdivrl
ljmp
popf
add
pop
insb
dec
hlt
push
out
and
sub
shrl
dec
jecxz
mov
scas
popf
in
xor
xor
xchg
and
scas
popf
jmp
and
ret
jle
jbe
or
adc
cmp
sbb
push
jb
sub
or
lret
jg
xchg
movsl
idivb
stos
je
lods
inc
hlt
inc
pop
jns
and
rcrb
ljmp
mov
mov
cmp
push
dec
mov
xchg
jge
inc
jl
pop
sti
mov
jmp
sub
push
fisttps
jnp
movb
adc
leave
push
sbb
icebp
cltd
es
cmp
mov
aam
pusha
and
mov
rolb
mov
push
aas
mov
jle
and
xor
pop
ds
or
xor
pop
fisttpll
stc
lea
lock
andb
xchg
idivl
fmuls
xchg
push
pop
out
mov
lock
lcall
in
xchg
rcrb
pusha
fcomi
aad
scas
pop
xlat
fs
xor
test
pop
dec
cmpsb
mov
push
xchg
cmpsl
mov
shrb
hlt
cmpsb
inc
movsl
enter
std
pop
les
repnz
and
sbb
lods
fimuls
pop
aam
shl
insb
jmp
and
lods
inc
pop
inc
push
in
int
pushf
push
lcall
fnsave
push
inc
rcll
jl
mov
ja
lcall
pop
mov
scas
pop
out
scas
stos
fcoml
mov
aad
and
jl
xchg
sbb
add
inc
sbb
xadd
repnz
in
lds
shlb
mov
xchg
cmp
pop
fcom
insl
lock
ret
shll
xor
pop
mov
repz
out
aas
push
xor
jae
imul
inc
or
jp
inc
and
je
mov
and
sarb
mov
rcl
and
mov
fidivrs
xor
or
lahf
and
or
adc
cmpsl
out
xor
out
sbb
outsl
ds
pop
mov
mov
jmp
jbe
leave
pop
sub
ds
sub
pop
icebp
xlat
cltd
cwtl
push
mov
mov
dec
mov
pop
mov
movsl
out
adc
pop
enter
in
mov
sub
jmp
jg
je
dec
lods
adc
cwtl
dec
xchg
icebp
push
mov
decb
jno
je
mov
pop
out
xchg
push
rorl
int3
js
nop
add
imul
add
adc
xchg
fldenv
sub
out
sarb
test
pop
push
adc
or
add
cmpb
push
inc
xchg
cwtl
cld
pushf
out
sub
dec
imul
mov
lret
pop
fdivrl
aad
cltd
insl
lods
adc
sbb
rorb
out
negl
inc
mov
and
lret
cmp
sahf
clc
mov
stos
or
mov
test
into
lods
aas
dec
mov
hlt
imul
inc
and
inc
mov
repz
jle
daa
aaa
dec
sbb
imul
loop
das
lea
hlt
fiadds
dec
fs
or
sbb
inc
or
xchg
push
push
ds
mov
mov
sub
sub
data16
adc
pop
mov
and
jecxz
add
data16
shrb
hlt
movsl
or
pusha
stos
sub
pusha
ror
sub
cwtl
ret
clc
std
jae
push
mov
pop
loop
cmpsl
aam
push
movl
popa
scas
pop
fadd
loope
sbb
push
sub
fidivl
xchg
inc
mov
xchg
aad
scas
sub
push
ret
daa
rorb
lcall
xchg
dec
aaa
leave
xor
mov
dec
mov
mov
or
jnp
out
sahf
jo
add
lods
cmp
jle
jmp
xchg
mov
push
sbb
add
test
mov
test
scas
and
fs
lods
scas
mov
je
add
jmp
lret
fsub
adc
xchg
inc
stc
mov
mov
lret
out
icebp
popa
frstor
out
dec
pop
dec
rol
add
mov
mov
dec
lods
aaa
pop
enter
ljmp
adc
aaa
fimuls
repz
push
aas
sahf
frstpm(287
fdivr
inc
adc
or
mov
xor
loopne
fsubrl
roll
imul
movsl
mull
ss
pop
loope
cmp
pop
fimuls
scas
addr16
jnp
pop
xor
scas
mov
icebp
movq
jbe
test
aas
or
push
mov
pop
inc
cmp
mov
sub
dec
pushf
fwait
gs
movsb
ds
hlt
push
mov
push
mov
sub
sbb
loop
and
test
aaa
insb
add
movsb
pop
aad
pop
push
fisubl
out
aam
push
pop
clc
loope
scas
sub
adc
xchg
push
jecxz
addl
xchg
xchg
in
sub
in
out
aad
lcall
icebp
faddl
cmpsl
test
rol
cld
push
mov
push
jbe
sub
outsl
jne
lahf
in
iret
cli
inc
rol
add
inc
mov
stos
adc
addr16
mov
rcrb
ljmp
decl
xchg
es
cmp
xlat
aad
test
dec
jns
jp,pn
aad
mov
push
insb
fs
mov
ja
cmc
jb
cmpsw
loopne
jns
cmp
int
mov
push
jo
mov
fimuls
push
stc
ret
leave
xor
or
xchg
pop
arpl
and
loopne
cmpsl
mov
test
xchg
ds
hlt
sub
sub
mov
testb
out
push
mov
mov
imul
mov
inc
push
cltd
fs
sbb
jne
lea
addr16
pop
mov
sbb
jbe
cs
mov
nop
fadds
lcall
jno
jmp
cltd
cmpsb
or
push
sbb
xlat
stos
fwait
push
xchg
outsl
dec
cmpsl
leave
jb
sbbl
adc
jbe
xor
daa
subl
lods
andl
xchg
xlat
ffreep
dec
out
fcmovnu
mov
dec
jmp
adc
faddl
pusha
mov
push
mov
inc
pop
sahf
mov
hlt
ss
arpl
xchg
mov
jno
mov
xor
pop
push
inc
add
loope
pop
dec
sti
dec
ljmp
mov
or
mov
xlat
or
jo
xor
fimuls
mov
push
add
sbb
cmp
cmp
pop
lahf
fimull
jmp
fsubs
aam
les
test
push
mov
movsl
jns
adc
popa
popf
fdivrl
int3
cli
xlat
mov
sti
xor
and
movsb
scas
mov
inc
ret
insl
imul
mov
imul
ds
pop
mov
mov
stos
jmp
and
ss
rcr
pop
mov
mov
sbb
mov
add
xchg
out
xchg
xor
xchg
testb
rcrl
outsl
hlt
aaa
loope
push
push
dec
cmp
mov
inc
push
inc
jae
jecxz
cs
out
jle
sti
cmpsb
push
add
into
and
mov
mov
stos
iret
or
adc
push
dec
fadds
or
mov
inc
cmp
cmp
mov
je
popa
sub
fsub
push
pop
mov
mul
sar
mov
fsubrs
jmp
dec
sub
dec
outsb
mov
xchg
out
add
dec
std
test
mov
out
lret
mov
lea
cmc
xor
scas
mov
das
es
icebp
in
mov
and
push
orb
xchg
mul
fs
out
loopne
pop
add
adc
inc
xchg
adc
pop
pop
mov
add
add
add
xchg
scas
ficoms
popl
and
dec
xchg
shll
mov
and
test
loopne
push
pop
fmuls
addr16
movsb
cmpsb
repz
pushl
inc
inc
push
sub
mov
aam
adc
dec
lahf
dec
jno
int
pop
or
insl
ret
daa
push
push
imul
loope
cmpsl
je
and
xchg
sub
mov
call
inc
mov
ja
jecxz
mov
xchg
outsb
scas
lds
and
push
lods
dec
xor
mov
rcl
xchg
insl
out
pop
adc
inc
imul
lea
xchg
xchg
lret
sbb
mov
adc
ljmp
xor
out
loop
sti
cmp
sub
aad
cs
inc
dec
dec
cmpsb
test
lcall
lret
rcl
pop
add
xor
lahf
mov
jnp
imul
bt
cmc
aas
pop
push
or
push
sti
fistl
add
dec
and
sbb
cmp
fs
inc
mov
or
mov
xor
xchg
or
pop
and
sbb
and
mov
push
fisubrl
scas
xchg
in
mov
lods
mov
lret
cmp
add
stos
lret
lahf
sarb
in
out
push
xor
push
bound
adc
pop
stos
rcrl
rorb
mov
and
out
sbb
adc
jmp
push
jo
int
lcall
jne
jge
dec
jg
push
add
js
push
iret
flds
push
fisttpl
and
scas
std
xor
xchg
sbb
dec
mov
fwait
and
jecxz
sub
cmp
pop
cmp
jo
jg
rcr
in
sbb
jo
orb
aaa
loopne
cltd
notb
add
inc
mov
sbb
xorl
cmpl
mov
bound
push
lahf
pop
pusha
insl
int
xlat
push
stos
lock
ja
movsl
enter
das
push
mov
popf
pop
add
xchg
mov
loope
sbb
and
or
cwtl
movsb
dec
push
int
ret
popa
call
jle
ds
pusha
add
lods
shl
push
xor
pop
addr16
inc
mov
push
ja
push
pop
jmp
imul
sbbb
inc
pop
mov
mov
test
rcr
sub
iret
int3
cmp
pop
mov
outsl
sahf
in
fcomp
and
popl
sbb
lret
in
lods
lods
mov
adc
imul
push
daa
inc
xchg
cmp
loope
xor
push
divl
cmp
xor
or
imull
loopne
jns
mov
lahf
xchg
jb
xchg
leave
aaa
jmp
add
andw
xlat
push
push
std
dec
mov
cmp
mov
imul
dec
xchg
sub
inc
mov
fs
mov
or
or
pop
xor
xor
mov
ss
xchg
imull
pop
fisubl
loop
lods
mov
sub
push
lods
add
rolb
push
add
je
pop
adc
in
mov
fldenv
sbb
test
out
pop
ffreep
inc
shrl
mov
cltd
mov
adc
jg
adc
cmp
jp
add
test
lods
jns
cmp
icebp
mov
addr16
xchg
mov
add
sub
shlb
cmp
adc
mov
in
aaa
sbb
sarb
aas
mov
mov
nop
mov
insl
and
mov
push
add
outsb
mov
mov
ret
inc
push
sbb
xchg
loope
dec
ret
sarb
in
repnz
and
and
in
xchg
pop
inc
push
xor
or
lahf
mov
mov
xor
mull
ret
inc
loopne
cmp
jle
std
pushf
icebp
mov
fidivrl
jne
adc
ss
xchg
push
lahf
gs
out
pop
cld
fsubrs
dec
mov
mov
push
sbb
adcl
inc
rorl
dec
jnp
pushf
push
fcmovnb
pop
iret
mov
mov
add
cmpsb
mov
adc
rcrl
repz
cmp
mov
dec
jp
and
lods
push
hlt
incl
and
xchg
int3
in
add
pop
mov
jp
pop
or
in
test
shl
xchg
sar
and
jo
insb
ss
pop
push
cld
or
ja
call
lods
add
sbb
dec
insl
adc
aam
jl
or
orl
pop
mov
es
dec
dec
mov
pop
fs
inc
mul
cmp
std
mov
iret
push
cmp
iret
je
add
fisubrl
pusha
and
sub
nop
dec
divl
ret
movsb
mov
js
je
push
cs
aad
sub
cmp
fstl
inc
mov
inc
rolb
inc
test
push
aas
scas
xor
inc
enter
fbstp
jge
pushf
aad
mov
inc
sahf
ret
push
xor
enter
jp
push
out
aam
inc
loopne
mov
int
test
stc
inc
jp
jae
daa
and
addr16
clc
das
sub
loope
ret
out
sbb
pop
js
mov
bound
daa
or
cmp
jle
mov
test
ficoms
adc
pop
sub
mov
out
sbb
in
test
mov
cmp
cmp
lock
xchg
jbe
jmp
lea
and
inc
add
js
lret
cmp
cmc
push
test
out
outsl
movsl
rolb
lods
push
imul
pop
inc
xorl
push
std
pop
repnz
mov
xchg
jae
inc
fisttpll
rcll
stc
sbb
mov
pop
ficoms
push
pop
push
dec
mov
and
push
add
scas
dec
jg
lods
push
jbe
fisubl
adc
fucomi
mov
push
fwait
jge
pop
inc
scas
js
add
stc
mov
jge
scas
in
lock
into
test
xor
mov
xchg
sub
iret
adc
adc
rcrb
adc
dec
lea
xchg
mov
mov
bound
bound
jmp
arpl
mov
mov
and
aaa
sbb
loopne
stc
pop
and
push
dec
bnd
loopne
jno
dec
outsl
je
mov
in
add
jno
into
out
fists
cmp
fcmovne
out
jne
push
push
push
cmpb
push
jbe
sar
add
dec
adc
aas
mov
or
mov
pushf
xrelease
test
push
or
adc
cmp
mov
cmp
cmp
js
clc
loop
lods
movsb
mov
lret
les
jecxz
daa
pusha
inc
shlb
xor
dec
xor
xor
test
push
push
xchg
sbb
imul
loope
sub
jb
push
push
cmc
insb
fisttpll
pop
and
inc
loope
repz
clc
pop
sahf
push
ror
arpl
mov
sbb
repz
inc
aaa
push
int
arpl
sbb
sub
rcrb
sbb
jl
incl
lret
xor
loop
nop
aas
pop
enter
orb
dec
dec
and
xchg
call
out
cwtl
sub
xchg
dec
xor
std
fwait
push
stc
imul
sahf
or
jnp
in
pop
push
out
dec
pop
mov
inc
push
pop
pop
and
cmp
in
jmp
cld
sbb
aad
mov
sbb
fisubrs
loopne
inc
pop
rolb
jp
jg
in
loope
push
aad
test
mov
fadds
pop
out
ret
repnz
shll
aaa
enter
rcrb
lahf
add
mov
cs
xor
arpl
je
clc
pushf
and
sahf
push
cld
cmpsl
je
xchg
sub
aam
sub
cmp
movsl
mov
insl
leavew
xor
nop
adc
popa
xchg
sub
cmc
fstps
stos
mov
fwait
cmpsl
fidivrl
dec
xlat
mov
test
cs
pop
sbb
sbb
push
fwait
inc
rcr
jmp
dec
leave
jns
sub
xchg
xor
push
cli
or
lcall
iret
add
fnop
imul
push
jb
mov
mov
sarl
push
mov
xchg
inc
xchg
sub
xchg
push
test
cmpsb
push
dec
jns
addr16
cmp
imul
add
jmp
stos
daa
mov
loopne
push
mov
cmp
and
sub
xor
cmp
cltd
negb
leave
mov
sbb
and
shll
aas
xor
in
jmp
sti
add
push
push
adc
cmp
dec
subb
inc
out
pushl
pop
mov
outsl
pop
stos
sbb
lret
push
jno
or
cmp
push
aaa
adc
retw
inc
mov
imul
sbb
sub
jmp
inc
popa
mul
ss
adc
push
iret
or
mov
stc
fimuls
xchg
repnz
in
in
sub
sub
ficoms
mov
sbb
mov
outsl
pop
cmp
pop
test
xor
xchg
and
jp
dec
ror
xlat
rsm
sub
shlb
cli
xchg
push
dec
mov
sahf
int3
and
mov
sbb
mov
pop
push
dec
adc
aaa
aad
jge
mov
jno
jno
andl
sub
fdivs
test
mov
js
sub
xchg
and
hlt
std
jns
and
into
sbb
pop
fdivl
add
xchg
mov
add
fldcw
je
je
dec
add
popa
icebp
inc
ret
cli
std
mov
aaa
jo
push
mov
arpl
out
ljmp
aas
clc
cs
imul
mov
mov
ds
inc
push
xor
outsl
int3
cli
and
shl
in
fs
arpl
cs
jns
sti
inc
add
lock
add
push
pop
jl
jmp
add
pop
sbb
push
xor
pop
aam
add
lcall
dec
ds
pop
lea
enter
inc
je
loope
bound
jb
test
adc
dec
das
mov
enter
mov
push
cmc
jecxz
test
push
mov
sub
push
loope
and
test
std
cmp
arpl
jnp
pop
sbb
pop
inc
or
scas
dec
mov
in
in
xchg
sub
fstl
mov
mov
cmp
dec
mov
nop
in
inc
and
cmp
arpl
sbb
add
pop
mov
dec
mov
movsl
jo
mov
mov
add
add
fadds
jno
lods
xchg
jge
gs
push
mov
xchg
fisttpll
lret
xchg
jbe
lock
orb
adc
sub
xchg
jnp
dec
das
push
mov
push
pop
mov
mov
rcrl
and
loop
gs
imul
in
aad
test
pop
movsl
and
pop
stos
ja
ret
icebp
test
aad
rcrl
stc
sub
xlat
sub
xorl
or
and
in
out
cmp
inc
out
xlat
mov
je
dec
adc
or
mov
cltd
add
and
int
add
push
push
adc
insb
inc
aas
mov
lods
aaa
scas
mov
xor
out
xor
sub
or
cmp
icebp
add
lods
call
pop
cs
jge
cs
sub
adc
pop
push
int
sti
aam
ds
mov
and
shl
stos
out
pop
jns
cli
int3
mov
fnstenv
ljmp
movsb
je
or
cmp
cmpsb
push
dec
psllw
adcl
mov
pop
not
pop
repz
mov
lahf
sbb
loopne
or
push
sub
test
rolb
sbb
stos
int3
int
scas
push
xchg
jo
call
jae
in
les
fcmovb
mov
adc
sbb
cmc
adc
inc
ja
dec
push
sub
cmp
ret
push
push
add
shlb
daa
leave
push
mov
test
pop
dec
jp
outsl
xchg
sub
je
mov
dec
mov
jno
popf
cmpsb
jle
or
add
sbb
je
xor
test
add
or
or
xchg
sbb
inc
or
clc
add
and
rcrb
dec
cmp
pop
adc
lret
mov
les
mov
ljmp
mov
jmp
dec
mov
cld
dec
pushf
cmp
sbb
inc
fnstcw
and
std
pop
nop
insl
aam
cld
fst
cmpsl
data16
loopne
and
push
out
xlat
ffreep
or
out
sbb
xorl
mov
pop
add
popf
cmp
movsl
lcall
mov
mov
jl
push
imul
movsb
movb
iret
cmp
inc
call
lock
in
out
jno
hlt
lock
iret
fidivl
and
fbstp
xor
inc
aaa
sbb
pop
jne
aas
mov
jle
add
cmp
sbb
shrl
fwait
ja
mov
movsl
repz
mov
push
adc
in
decl
shrl
adc
pop
push
jo
shrl
shrl
test
imul
rcr
int
mov
lods
xorb
jno
sub
xor
pop
or
xor
int
fistl
lcall
inc
scas
into
enter
mov
jo
jb
lods
dec
mov
lcall
push
and
fcomps
aad
int
cmp
xchg
sbb
xchg
fsubl
add
jne
sbb
js
mov
fcomps
sub
adcb
inc
pop
cmp
nop
and
mov
dec
push
mov
xchg
mov
int3
enter
fldcw
loope
daa
xlat
sar
or
inc
sbb
jl
enter
addr16
or
xchg
push
adc
mov
mov
push
add
fildl
jno
aam
lea
ss
outsb
pop
dec
daa
xchg
icebp
mov
and
jg
loop
adc
sub
test
or
xchg
adc
daa
std
mov
cltd
aam
insb
aaa
mov
add
lret
cli
lret
jmp
enter
pushf
inc
mov
xchg
mov
fs
gs
stc
push
xor
sub
xor
daa
aam
jbe
push
imul
jo
mov
bound
xor
push
pop
or
cmpsl
pop
xchg
pushf
xchg
movsb
sbb
shl
movzbl
outsl
and
mov
jp
xchg
mov
or
cmp
sub
out
mov
xchg
dec
sbb
rcll
outsb
jne
outsl
and
xor
push
jnp
or
mov
push
mov
dec
xor
aam
push
inc
imul
adc
pop
xor
cmc
pop
dec
xchg
repz
ret
add
mov
repnz
mov
mov
sbb
sbb
push
int3
sub
xor
dec
nop
repz
jns
js
int3
sub
push
out
jmp
std
test
jne
push
mov
mov
sbb
fs
adc
lea
or
in
mov
jno
clc
xor
lds
dec
pop
xlat
pop
sub
dec
xor
test
mov
fimull
cmp
aas
sub
adc
sub
mov
ja
pop
inc
rclb
mov
add
stos
push
mov
ds
stos
clc
jle
or
cmp
popf
xchg
loopne
add
je
imul
shlb
xlat
mov
jne
adc
pop
mov
inc
icebp
popa
bound
lret
or
dec
xor
xchg
loopne
cli
dec
jb
inc
sub
jl
aas
and
or
flds
loope
addr16
pop
mov
ljmp
dec
lcall
mov
pop
pop
fbstp
pop
dec
inc
dec
mov
mov
jb
ret
inc
out
jg
fbld
movsl
pop
sbb
mov
pop
loop
cwtl
pop
shrl
aas
fwait
jo
jae
adc
je
imul
mov
ret
cmovs
xor
je
and
fstp
cmp
stos
cmp
std
scas
ficompl
jecxz
push
out
movsl
mov
cmp
cli
add
add
xchg
pop
pop
xchg
and
mov
adc
xchg
shl
in
xchg
xor
sub
add
incl
and
ss
pop
push
ficoml
push
pop
mov
stos
dec
push
addl
xchg
xchg
stos
dec
sbb
daa
leave
mov
or
das
das
testb
js
mov
jmp
push
sub
out
mov
xor
push
xchg
jnp
push
inc
mov
mov
push
mov
jge
xchg
lret
fmuls
subl
and
or
arpl
push
ret
jmp
test
stos
pusha
cwtl
xchg
lret
add
push
test
jnp
xchg
mov
icebp
push
test
push
movsb
pop
fs
fsubrl
adc
add
fwait
jbe
stos
push
and
fildl
rcrb
mov
lret
push
imul
push
xor
fistl
aaa
add
cmp
mov
mov
mov
arpl
adc
test
aas
cmp
add
pop
mov
rclb
adc
jecxz
cmp
jae
xor
push
cmp
inc
dec
xor
push
xor
negl
push
mov
mov
ja
pop
cltd
out
dec
mov
arpl
adc
adc
xorl
dec
xchg
cmp
aad
rcr
jno
inc
jnp
test
mov
iret
cmpsl
adc
xchg
jo
aam
lock
rcrb
and
push
lret
dec
into
sbb
stos
sbb
push
dec
sub
hlt
out
movsl
out
ret
cld
push
rorl
ficompl
pop
test
rcl
inc
lahf
push
int
dec
inc
cli
xor
fsubp
aad
cwtl
mov
pop
add
xchg
fdiv
jp
sbb
jns
mov
inc
and
out
idiv
movsl
jecxz
add
xlat
clc
inc
in
rol
dec
or
cs
pushf
outsb
and
mov
and
dec
pop
xchg
ss
mov
push
aas
fucomp
jmp
jns
pop
lret
xor
push
pop
ds
outsb
ja
fidivrl
daa
clc
adc
jecxz
cs
filds
lock
xor
or
insb
jo
push
mov
lods
and
xlat
cmc
ljmp
sub
dec
pop
xchg
sbb
mov
xor
loop
push
cmp
rolb
jne
fwait
mov
push
out
ret
cld
lock
xchg
cmpsb
inc
test
and
js
pop
mov
loop
mov
cmp
ds
shll
dec
hlt
xchg
sbb
lea
pushf
int3
ret
cmp
aaa
lcall
repz
andb
adc
xchg
movsb
xor
push
out
inc
sub
pop
xchg
jecxz
shll
inc
pusha
sub
in
mov
cli
lcall
or
popf
xchg
out
push
push
subb
mov
xor
push
pop
and
pmaddwd
push
sbb
call
mov
sub
xor
cmp
je
push
adc
movsb
cltd
jae
aas
addr16
incl
repnz
js
lcall
stos
push
cwtl
orl
push
cmp
mov
cltd
in
out
dec
pop
js
cmp
mov
xchg
lods
cmp
aam
mov
call
pop
pusha
aas
dec
out
insl
pusha
xor
fildl
icebp
jne
jmp
and
and
stos
push
pop
lods
nop
push
daa
arpl
es
xchg
clc
lcall
jo
inc
push
and
xchg
inc
jno
iret
sti
jae
out
stos
outsb
sbb
jne
call
icebp
test
out
cmp
test
jle
or
imul
cmp
fdivl
xchg
cmp
data16
xor
fldenv
jo
xor
into
mov
decl
push
pop
fnop
js
mov
pop
mov
test
in
lcall
pushf
dec
mov
fs
jo
imull
out
fwait
outsb
adc
mov
dec
fisttpl
clc
mov
dec
iret
lds
sub
xchg
xchg
fwait
jmp
sub
mov
add
xchg
inc
xor
iret
jns
cmp
das
jecxz
test
mov
pop
sbb
fcomps
xchg
test
inc
and
sub
mov
mov
negl
in
movsl
push
stc
mov
outsl
aad
add
jb
lret
imul
xor
add
lahf
and
xchg
aas
adc
loopne
or
imulb
jbe
cmp
shr
xor
pop
mov
dec
inc
xor
clc
pop
adc
push
jno
xchg
cld
ret
fsubl
dec
sub
shll
fnstenv
out
call
mov
push
js
adc
mov
inc
popf
imulb
imul
jl
daa
pop
inc
xor
and
sub
scas
jl
inc
mov
icebp
aas
in
sbb
dec
data16
cld
dec
rorb
add
out
gs
adc
pop
fs
fs
push
shrl
nop
mov
jle
mov
or
sub
mov
loopne
pop
add
icebp
inc
mov
and
cs
lcall
or
mov
out
sub
dec
movsb
movsl
fidivrs
sbb
in
movsb
aas
sub
push
stc
decb
cmp
mov
daa
fmull
and
add
jle
sbb
in
aad
jnp
xchg
push
je
fiadds
cs
xchg
mov
out
rcrl
int3
xor
cmp
pop
mov
cmp
and
not
das
push
adc
xchg
lret
call
loopne
inc
fildll
inc
div
jge
push
xor
rcll
test
cli
adc
aas
lcall
and
movsl
cmp
pop
mov
xchg
adc
insb
dec
fcmovb
outsb
xchg
push
loop
repnz
in
mov
xor
and
les
cmp
or
or
lock
cmc
and
dec
cmp
cltd
sti
out
mov
push
push
lret
add
cltd
loopne
or
loope
jae
jge
inc
stos
in
or
pop
imul
mov
add
data16
loop
jnp
or
fwait
pop
jbe
fs
subb
fistps
flds
jp
inc
cli
xchg
push
incb
xchg
xchg
je
sub
push
lahf
dec
add
es
mov
push
lds
push
movsb
pop
outsl
pop
and
test
sbb
js
jnp
or
dec
decb
push
idiv
sub
pop
mov
out
push
cmp
loop
sub
ljmp
push
incl
ret
enter
xor
or
xor
adc
inc
xor
ja
clc
and
adc
test
xor
pop
lods
js
mov
es
push
in
aad
cli
lock
mov
inc
jne
movb
imulb
jge
arpl
mov
adc
mov
lret
jb
or
sbb
add
arpl
in
mov
mov
push
aaa
scas
pop
sbb
or
or
xchg
das
pusha
leave
sbb
fildll
std
call
inc
daa
xchg
lock
repnz
jge
outsl
popl
inc
test
es
and
lcall
or
inc
mov
dec
sarl
jnp
inc
adcl
jl
in
pop
xchg
sbb
mov
jge
imul
outsb
jns
test
mov
fdiv
sbb
inc
fwait
shlb
jo
lods
es
hlt
pop
pop
nop
xchg
es
pushf
in
testb
fidivl
std
pop
mov
repnz
icebp
mov
adc
jno
sub
test
popa
cmp
or
fs
xor
mov
popa
or
lahf
hlt
push
mov
pop
in
das
mov
dec
cwtl
les
mov
fadds
mov
lock
popw
jo
int
repnz
imul
aas
inc
lea
xchg
test
push
jnp
xlat
loop
inc
mov
xchg
insl
aad
sti
push
or
rolb
pop
es
cmp
jae
pop
xchg
jnp
jmp
les
inc
or
mov
clc
rcll
int3
mov
xchg
push
cld
pop
rorb
lret
and
sti
cli
jnp
cmp
mov
inc
in
jae
pop
sub
xor
aam
xor
sub
sbb
pop
xor
dec
scas
xlat
out
loopne
mov
push
pop
add
hlt
gs
push
dec
mov
jl
mov
jmp
push
add
out
or
scas
push
out
daa
dec
add
lcall
hlt
lea
xor
fwait
xor
push
aas
call
lods
or
lea
sbb
xor
push
clc
aas
and
and
cmp
mov
icebp
or
ss
cmp
scas
ss
and
in
cli
cltd
pop
jmp
sahf
xchg
jmp
jle
fisttpl
and
aam
mov
shrl
ljmp
pop
xor
adc
xchg
sbb
xor
bound
sub
add
jle
mov
sbb
fwait
mov
push
jbe
ficoml
pop
xchg
inc
out
pop
lret
mov
popf
or
loope
stos
push
sub
dec
and
or
push
jle
pop
jbe
test
les
jbe
js
push
add
mov
dec
lcall
je
cmp
aaa
int3
insb
in
repz
mov
pushl
xor
leave
cld
je
roll
in
in
and
ror
aam
cmpsb
or
mov
test
enter
mov
adc
stos
xchg
cltd
int
stc
cmpsb
mov
mov
sbb
mov
int
bound
roll
xor
repz
stos
loop
sti
cmpsl
or
jne
movsb
pop
fisttps
lahf
ja
sub
fucomi
mov
and
xchg
xchg
add
add
jbe
sti
arpl
jo
xchg
pop
fldenv
xchg
fwait
pushf
test
jmp
in
sub
push
mov
or
push
cmp
mov
cs
idiv
and
pushf
adc
or
inc
lret
enter
test
push
faddp
popf
push
adc
cmp
inc
mov
mov
aam
jge
test
daa
mov
sarb
shrl
sbb
in
lds
push
pop
enter
in
sbb
jnp
jae
int3
les
sub
insb
out
jbe
outsb
lahf
rcr
js
and
loopne
adc
xorl
lret
pop
xor
mov
lcall
call
popa
pop
mov
add
mov
ds
xor
cmp
mov
pop
adc
cmp
xor
jl
scas
xor
faddl
lods
xor
hlt
push
xchg
imul
or
or
sbb
cmp
adc
std
test
dec
lods
fcompl
dec
icebp
dec
sbb
mov
or
cmpsl
mov
addr16
movl
lret
stos
sar
sbb
cmp
lock
dec
cmp
fldl
iret
insb
shl
stc
xor
pusha
mov
adc
push
or
sbb
xchg
out
dec
mov
lcall
fs
jns
adc
std
inc
shrb
loop
mov
ret
test
mov
fnstsw
mov
and
pop
xlat
loop
es
push
and
xchg
xchg
cmp
std
aad
jb
fimuls
je
dec
lods
aam
mov
nop
in
pushf
pop
add
mov
aad
xor
or
lahf
dec
roll
inc
pop
loope
jg
sbb
inc
mulb
push
inc
iret
add
outsb
xor
lock
xchg
mov
andl
cmpxchg
test
cmp
sbb
jle
movsb
and
in
std
xchg
filds
mov
bound
repz
cmc
jge
sarb
lea
mov
dec
jge
cmp
jnp
or
push
push
lret
jl
add
popf
jne
sub
test
mov
lret
in
addl
out
addr16
cmp
or
mov
cwtl
mov
mov
jle
iret
xor
pop
pop
stos
daa
and
mov
cmpsb
mov
lea
out
mov
adc
cwtl
adc
dec
xchg
add
or
mov
inc
imul
notl
cmpsb
jb
push
ljmp
test
fdivr
insl
mov
sbb
and
push
sub
cltd
push
fildll
or
or
sub
add
sub
xchg
arpl
rolb
mov
fisubrs
mov
jno
pop
mov
xchg
data16
and
movsl
pop
push
or
pop
xchg
push
nop
sbb
dec
test
insl
xor
mov
into
and
out
in
cmpl
movsb
loope
icebp
xor
lock
xchg
sub
cli
push
fs
mov
xchg
fisttpl
xadd
fsubs
sarb
xor
push
push
add
stos
enter
adc
stos
inc
sbb
lods
xchg
xchg
sub
pusha
shlb
pop
lret
mov
xor
je
push
addr16
fcomi
cltd
adc
cmp
in
push
cmc
xchg
pop
enter
int
mov
sbb
dec
aam
mov
push
arpl
fsubrl
out
mov
jecxz
mov
sbb
sarb
xchg
gs
jmp
add
inc
xor
ja
dec
jp
mov
jecxz
xlat
in
flds
jne
ds
inc
mov
pop
jg
ss
sbb
push
push
lcall
adc
in
outsb
fwait
repz
cmp
ficomps
sti
jae
jecxz
in
aam
push
mov
dec
mov
scas
test
jle
sub
sbb
mov
pop
adc
add
xchg
xchg
lahf
fsubrl
int
aas
mov
jne
nop
lea
pop
pop
cmc
jg
repz
xchg
inc
pop
pop
and
and
xor
cld
dec
and
sbbl
pop
out
stos
add
out
xor
hlt
pop
inc
sub
cmp
lcall
push
bound
inc
jl
fisttpl
add
sub
repnz
mov
stos
mov
ret
xor
shrb
int3
scas
cmp
es
dec
push
and
cmpsl
movsb
sub
cmp
sbb
pop
and
sbb
sarl
test
test
in
and
lret
push
xor
cmp
or
mov
movsb
xor
sbb
test
aad
sub
sbb
add
mov
jl
ja
and
and
lods
cmp
adc
inc
adcb
int
and
mov
cmp
or
outsl
jmp
mov
dec
mov
dec
lahf
add
fwait
dec
fwait
std
out
inc
imul
or
fisttpl
outsb
ja
xchg
push
cmpsb
sbb
in
rcll
jbe
sbb
inc
sbb
pop
xor
lret
in
dec
das
aaa
in
xor
icebp
cwtl
and
cmc
push
dec
icebp
pop
mov
mov
jnp
js
lcall
push
and
push
enter
mov
or
mov
xor
xor
dec
push
cld
inc
inc
rcl
sub
or
jbe
mov
mov
imul
xlat
leave
ret
stos
rcl
xlat
push
cld
inc
xchg
inc
fstpt
add
inc
pop
dec
sbb
pop
xchg
jl
pop
shll
loopne
xor
pop
cwtl
add
lahf
dec
push
mov
inc
or
mov
or
sti
cmc
jp
hlt
mov
dec
xchg
mov
dec
call
push
dec
in
in
les
dec
pop
sub
lret
nop
cmpsb
add
cs
mov
adc
sbb
out
fsub
in
inc
test
test
ljmp
ror
jne
test
push
jns
or
hlt
push
push
xchg
shr
shrb
inc
in
or
xchg
push
push
cmp
ds
sbb
insl
out
cmp
or
xchg
in
test
fisttpl
ret
loopne
dec
arpl
inc
int3
movsl
cmp
mov
cmp
ffree
sahf
insb
push
push
pop
lcall
es
or
dec
je
cltd
mov
out
sub
subb
ret
fiaddl
mov
loop
pop
mov
repz
xchg
lods
sub
pop
daa
adc
xchg
adc
mov
mov
test
lret
int3
pop
aad
adc
xor
mov
mov
jle
popf
jns
xchg
lea
mov
addb
pop
inc
or
dec
xchg
xchg
rcrl
call
insl
lods
push
dec
xchg
push
mov
adc
or
adc
and
push
mov
je
xchg
pop
push
mov
in
aad
mov
xor
push
out
xchg
push
mov
movsl
scas
outsb
aam
bound
fiadds
xchg
insl
std
mov
sbb
sub
xchg
mov
rolb
arpl
pop
mov
cmp
fistpll
call
scas
pusha
loope
leave
and
sti
mov
hlt
push
pop
jns
lcall
push
fcomp
movsl
int
add
jecxz
cmp
sub
xchg
or
jno
xchg
push
stos
fidivrl
or
call
xor
dec
mov
sub
test
bound
xchg
dec
push
bound
xchg
adc
js
cmp
cmpsb
pop
cmp
push
xchg
daa
dec
lods
imul
ja
sbb
adc
cmp
jmp
or
cmp
jge
mov
daa
mov
inc
inc
lock
push
inc
rcrl
clc
xor
pop
data16
dec
out
addr16
dec
test
stos
fxch
xor
inc
xchg
pushf
dec
decb
shll
fdivs
repz
jmp
sbbb
or
jo
mov
mov
insb
scas
push
sub
sub
xlat
lahf
and
ja
addr16
bound
rorl
dec
loope
rclb
jo
push
inc
addr16
adc
data16
rcl
icebp
push
imul
cmp
jmp
pop
mov
sub
loope
vsubpd
loopne
pop
into
jge
mov
add
int3
faddl
inc
aam
hlt
pop
or
fimull
mov
daa
sub
push
dec
pop
lods
push
movsb
data16
sub
movsb
cmp
out
lods
jmp
jnp
cmovnp
data16
inc
jg
pusha
jge
adc
int
pushf
mov
dec
fisttpll
jne
fistpll
mov
push
mov
loop
repnz
push
test
fidivs
aam
pushf
ljmp
dec
in
lods
mov
sbb
jg
jnp
rolb
jmp
daa
cmp
cwtl
in
and
mov
aaa
iret
test
es
xorb
and
popa
aas
aad
mov
rclb
jge
mov
pop
pop
stos
sti
and
jecxz
sbb
add
xchg
movsl
icebp
aaa
add
cmp
psubb
popa
bound
push
jle
das
push
iret
std
ficompl
dec
daa
inc
leave
aad
sbb
cld
mov
scas
sbb
dec
fsts
cmpsb
inc
sub
ss
fistps
and
ret
push
das
cwtl
fistpll
mov
and
popa
mul
pop
lahf
jmp
enter
and
xchg
je
pop
cmp
add
pop
das
cmp
xor
insb
push
push
jmp
imull
inc
add
lcall
fnstenv
pop
sbb
cld
in
idiv
sub
pop
and
fmulp
mov
pop
cmp
and
rclb
ror
movsl
hlt
cwtl
lods
xor
test
out
fstps
scas
xchg
and
jg
inc
cmc
pop
imul
push
mov
push
jg
cli
in
into
fscale
sub
cmpsb
outsl
lods
or
sbb
cmpsl
or
xchg
sub
lds
mov
aad
adc
testl
sbb
daa
inc
outsl
sub
rcrb
les
and
enter
cltd
addps
dec
push
cmp
call
nop
adc
mov
sub
sahf
out
push
mov
mov
sub
dec
lret
rcrb
xchg
jne
cs
std
out
inc
dec
xlat
sbb
jl
mov
mov
and
test
mov
mov
cli
jns
fwait
fs
push
insl
and
imul
decb
les
pop
xchg
pushf
xchg
nop
repnz
ss
add
inc
movb
and
cltd
mov
in
xor
mov
xor
leave
int
scas
jecxz
aam
and
mov
lcall
jecxz
and
cmp
push
or
test
les
fldcw
and
sub
out
xor
int
mov
mov
shr
push
incl
out
cli
cmp
xchg
xor
jb
rorl
std
movsb
das
inc
xchg
stos
lock
or
mov
xorl
pop
sub
popa
push
cmp
dec
movsb
imul
xchg
pop
sahf
mov
mov
nop
mov
fldcw
add
push
push
mov
aad
mov
in
stos
in
out
push
xor
lret
popf
movsb
imul
mov
push
test
mov
mov
sti
pop
xlat
fildl
jb
clc
nop
mov
add
sbb
addr16
outsl
sbb
movsl
sub
aam
stc
mov
pop
adc
dec
cmp
popa
jo
mov
aam
jae
xchg
scas
fisubrs
cli
lahf
push
and
push
insl
sti
divl
xchg
or
aaa
mov
or
push
mov
clc
insb
lahf
mov
lock
imul
stos
inc
xchg
cwtl
dec
xor
add
arpl
jle
scas
push
xchg
mov
or
xchg
mov
adc
or
fimuls
aaa
and
cmp
adc
and
sbb
leave
fbld
lods
push
test
popa
cwtl
mov
xchg
shrb
or
jno
in
jne
add
mov
scas
push
inc
mov
xchg
inc
mov
adc
aas
mov
rorb
inc
ret
sar
ds
ja,pt
dec
loop
mov
mov
and
shr
cmpl
xor
int
add
movl
adc
std
test
out
mov
lahf
mov
hlt
ret
stc
cmp
divl
rol
fisubl
sub
aaa
loope
cltd
xchg
push
insb
test
adc
cmpsb
lahf
clc
out
push
xchg
call
insl
je
push
lcall
cmp
rolb
pop
adc
movsb
cmpb
imul
xorl
cmp
dec
test
mov
mov
mov
cmp
jp
ss
mov
and
inc
test
xchg
pop
push
bound
mov
inc
ret
je
les
cmp
push
push
fdivrs
pop
fimull
fiadds
jne
xor
std
aad
and
cmpsb
jmp
rorb
add
repnz
cld
adc
mov
xor
call
js
loop
jp
loopne
and
mov
mov
jnp
imul
or
clc
jnp,pt
xchg
or
test
int
jno
in
cmpl
in
and
pop
jns
or
clc
mov
imul
add
in
push
fistpl
in
jno
popl
ss
and
mov
pavgw
dec
jne
fbstp
inc
stc
add
dec
mov
cmp
inc
xor
mov
sub
pop
push
jl
mov
repz
inc
scas
inc
push
add
xor
adc
add
sbb
movl
hlt
add
jge
loopne
jbe,pn
xor
dec
jo
in
ja
aam
loop
aad
es
clc
push
adc
mov
cs
add
xlat
ds
pushf
dec
mov
jg
das
cmp
in
jmp
or
dec
xchg
lcall
and
jne
xor
or
mov
mov
rcl
push
scas
jg
aas
or
shrb
dec
rorb
sbb
sbb
dec
fisubrl
sbb
mov
les
mov
adc
jg
sbb
cmp
repnz
push
adc
scas
std
dec
add
pop
xor
gs
pop
push
testl
dec
xchg
fsubrp
cwtl
lret
je
or
inc
xor
repnz
clc
fwait
sub
jecxz
jp
shrl
and
xchg
mov
int3
mov
ret
mov
jle
jl
pop
xlat
inc
mov
xchg
lcall
or
sbb
or
cmp
enter
xchg
adc
push
mov
push
push
jge
jecxz
and
outsl
mov
cmpsb
imul
ret
xor
sbb
flds
das
aad
and
xchg
shlb
push
incl
mov
push
cmp
sbb
xor
mov
rorb
push
jno
jge
mov
outsb
repnz
fidivrl
jge
insl
sar
pop
or
xchg
stos
sbb
insl
mov
jg
dec
popf
cmp
mov
mov
sbb
mov
add
lahf
mov
cmp
call
jne
scas
sti
inc
sar
vmptrst
int3
arpl
sahf
mov
dec
fistpl
or
mov
aaa
mov
cmp
pop
pop
sti
push
sahf
cli
js
mov
push
fidivrs
cmc
jno
and
mov
dec
fwait
sahf
mov
mov
mov
xchg
sbb
lret
sub
fwait
push
xchg
test
jne
inc
and
out
push
jae
data16
xchg
js
pop
imul
lock
jne
push
outsb
test
or
cmp
cmp
rcl
in
hlt
jmp
out
mov
or
das
sbb
xor
sub
and
inc
testb
pusha
fdivs
jg
push
xchg
int
pop
adc
lds
mov
add
xor
jg
jnp
mov
mov
pop
jle
ffreep
jno
test
lods
mov
orl
pop
sbb
imul
push
mov
cmpsb
or
out
push
icebp
rorb
jns
rcl
je
sub
dec
out
pushl
or
mov
lret
into
lea
mov
or
icebp
loope
and
xchg
les
push
pop
imull
stos
sbb
fisubl
pushf
repnz
push
push
add
and
scas
mov
xor
inc
cmpsl
addr16
inc
pop
scas
mov
mov
fs
sbb
dec
cmpb
aaa
lock
jno
push
movb
test
jo
cmp
mov
mov
mov
iret
ds
push
sub
shrl
sub
insl
adc
or
jbe
inc
dec
arpl
xlat
popa
rclb
cltd
xlat
aam
lahf
or
scas
mov
mov
or
subl
sbb
mov
inc
adc
add
and
sbb
mov
test
in
imul
icebp
popf
insb
loope
push
mov
push
cs
fs
mov
push
jl
jge
add
xchg
or
outsl
jp
aaa
insl
out
mov
sub
push
iret
and
lret
add
ds
pop
or
lods
fistpll
xchg
cmp
mov
inc
jge
in
out
xor
mov
pop
repnz
xchg
and
std
test
or
rolb
xor
cmp
filds
xor
cmp
ret
lea
push
mov
imul
jmp
push
xchg
xchg
adc
jle
and
mov
xor
adc
stc
push
sub
jb
cmp
sarl
outsl
loop
subl
xchg
js
loopne
push
mov
add
push
add
movsb
pushf
dec
cld
push
rorl
mov
inc
enter
or
cmp
sub
lret
xchg
mov
mov
pop
int
out
je
repnz
jmp
ljmp
sti
pop
jmp
dec
cmp
pop
cmp
jmp
out
push
mov
les
ret
xor
imul
divl
aad
test
clc
or
loope
sub
subl
stos
pop
mov
push
xchg
stc
rol
push
imul
scas
xchg
rorl
jg
cs
push
pop
add
cwtl
jl
roll
ljmp
and
cmpsl
cmpsl
xchg
push
test
cmp
sub
outsl
ret
mov
push
jne
sbb
leave
jg
or
push
icebp
mov
push
stos
mov
xchg
lds
ja
popa
das
dec
and
ljmp
or
jnp
cli
xchg
jl
mov
lds
lock
sbb
inc
mov
push
sahf
lret
cmp
cmpsl
rcrl
xchg
xor
jecxz
cmp
fstpt
pop
stc
bound
cmp
pop
xor
andl
enter
int3
push
ss
pusha
jnp
pop
mov
clc
test
mov
dec
cltd
inc
ret
and
inc
xchg
mov
jl
in
xor
loope
or
outsb
jmp
add
ljmp
fbstp
fcmovnb
imul
nop
cmp
fmull
jle
add
aad
and
push
test
dec
xchg
arpl
xlat
add
jecxz
testl
mov
xchg
mov
fstl
scas
add
int
mov
mov
out
dec
cld
testl
push
rcrl
stc
cld
mov
popf
lahf
jne
xchg
out
clc
in
xchg
cmp
push
jmp
aaa
mov
ret
push
lcall
cmp
and
sub
and
add
or
mov
jmp
stos
xchg
leave
push
push
mov
lock
sbb
inc
mov
loop
sbb
xchg
mov
loop
gs
clc
jb
fidivl
das
lret
mov
inc
fnstenv
mov
dec
cmpsl
shl
jae
pop
jo
xchg
orb
stc
pop
push
add
outsl
shrb
jo
test
mov
loopne
cmp
loop
stos
pop
adc
ret
subl
loop
push
adc
mov
xchg
adc
fadd
push
mov
jg
cwtl
and
xlat
call
or
repnz
adc
into
je
out
cmp
aad
jmp
in
xchg
gs
out
addl
mov
pmullw
test
js
imul
add
and
push
pusha
xor
iret
adcl
imul
fdiv
aas
dec
xchg
or
xor
pop
in
push
xchg
pop
in
jae
cmc
scas
cmp
push
fs
xor
jl
mov
inc
xor
into
jnp
add
pop
dec
push
fiadds
fstp
rcrl
dec
cmp
cs
add
push
add
test
sub
xchg
jae
mov
aaa
out
mov
inc
dec
mov
adc
cmpsb
pop
aam
cli
xchg
xchg
mov
add
call
xorl
and
sub
mov
dec
rolb
or
pop
sub
cld
cmpsb
push
sub
dec
js
fcomps
bound
mov
and
jbe
push
mov
add
ret
lea
lret
dec
inc
in
imul
dec
jge
dec
push
les
cmpsl
cmp
jnp
xchg
fistps
xor
js
cmp
mov
call
xor
call
mov
pop
add
pop
fdivrl
mov
push
jmp
fidivs
dec
and
push
imul
jno
out
test
pop
mov
xor
pop
push
cli
xchg
sub
xchg
fwait
out
nop
inc
jg
dec
arpl
repz
lahf
or
mov
mov
lret
xorb
loop
call
out
jbe
push
mov
mov
jecxz
stos
ss
testb
dec
repz
mov
xlat
aaa
and
arpl
inc
inc
inc
nop
lret
lods
jp
add
jle
shlb
dec
movsl
mov
xchg
add
and
cld
mov
sub
sub
ds
push
add
arpl
shll
inc
arpl
in
mov
or
push
popa
dec
push
iret
lods
xchg
pusha
mov
inc
inc
in
aas
movsl
xchg
push
and
cmp
rclb
jle
stos
adc
fildll
adcl
jno
fwait
mov
in
adc
mov
or
jl
es
jnp
xchg
pop
insb
sbb
add
shlb
popa
cmpsl
daa
sbb
mov
les
inc
orb
xchg
movsb
outsb
mov
cs
push
inc
dec
int3
sbb
mov
mov
ficoms
cld
or
mov
test
mov
dec
mov
ja
mov
sub
jle
push
in
push
mull
sub
inc
mov
or
pop
fdivs
es
mov
inc
mov
scas
repnz
into
mov
test
in
movsb
and
ret
mov
rolb
imul
outsb
ds
pop
cmpsl
in
into
fsubl
js
mov
mov
push
push
jnp
vshufps
push
inc
mov
mov
dec
sub
jo
add
mov
sar
icebp
pop
gs
pop
push
shrl
or
gs
mov
jmp
cmp
or
loope
mov
inc
fwait
push
int
inc
pop
xor
pop
pop
adc
fucomi
and
push
jnp
std
mov
aaa
mov
dec
push
push
push
mov
popa
push
mov
add
test
jg
data16
pop
adc
hlt
mov
cmp
daa
push
insl
incl
bound
lods
and
pop
add
push
lret
pop
dec
cltd
cmp
jge
sbb
pop
add
jne
push
pusha
aaa
into
sub
ret
stc
test
fimuls
fistpl
lea
mov
repz
repnz
adc
in
loop
iret
add
jne
scas
loope
cmpsb
loop
cmp
and
jp
ss
inc
xor
jg
int
sub
mov
into
xchg
pop
neg
aad
sbb
es
fisttps
jecxz
loope
mov
insb
mov
mov
adcl
add
ja
dec
xorl
push
lods
mov
pop
daa
sarb
fwait
hlt
pxor
roll
push
push
filds
sbb
movsl
jns
jae
push
xchg
pop
pop
sub
mov
jmp
sub
addr16
jae
scas
leave
loope
pop
outsb
rorb
pop
pop
lea
mov
outsl
fdiv
cmp
xchg
mov
mov
mov
jns
fwait
mov
loopne
xor
orb
xor
out
add
xor
popa
in
xor
mov
xlat
sub
sbb
mov
push
mov
daa
xor
dec
dec
xchg
loopne
fisttpl
push
arpl
dec
jge
pop
sbb
mov
inc
push
adc
and
mov
lret
fnstsw
xchg
aad
arpl
stos
sub
mov
sbb
les
push
test
lcall
cmp
shll
sbb
or
imul
mov
dec
sbb
jl
mov
aad
in
js
sub
into
stos
push
push
dec
and
jns
shll
mov
mov
sub
popfw
push
or
clc
sbbb
cmpsb
cmp
ret
sub
call
out
xchg
mov
enter
and
stos
pop
pop
sub
sub
cmp
cmpsb
aaa
fstpl
adc
mov
fisubrs
xchg
ljmp
pop
loopne
cwtl
aaa
push
lods
pop
insl
dec
call
in
mov
rcrl
mov
xor
ss
bound
xchg
fidivl
mov
jo
or
inc
int
dec
xlat
je
sub
and
je
sbb
xor
cltd
add
push
jnp
popa
js
iret
xchg
into
xchg
lret
test
notl
sub
xchg
cld
mov
shr
lock
cmc
or
jecxz
or
push
into
mov
lds
fwait
les
sub
insb
sub
ss
xchg
push
sub
xchg
lods
dec
daa
lods
mull
add
mov
add
mov
inc
cmp
dec
pusha
mov
and
sarb
xchg
sahf
mov
fildll
arpl
mov
push
push
mov
lea
jb
insb
lds
sub
inc
int
xchg
dec
pusha
inc
jmp
pusha
adc
sbb
jp
mov
mov
or
sbb
out
and
dec
xor
and
dec
fdivrp
add
xlat
xchg
mov
sub
pop
idivl
repnz
push
arpl
adc
inc
lret
push
addr16
jmp
inc
mov
sub
pop
bound
inc
icebp
aad
xchg
add
out
jge
ror
ret
fcmovnbe
dec
jle
rcll
add
and
mov
in
into
cmpsl
jecxz
arpl
arpl
and
iret
mov
jle
nop
cmpsb
inc
lds
or
mov
mov
js
mov
push
fdivs
in
or
pop
insb
push
sub
and
inc
cmpsb
stos
jp
cwtl
mov
mov
add
enter
mov
sub
dec
jbe
ret
int3
out
push
mov
nop
mov
push
int3
ljmp
pop
cmp
adc
xor
or
inc
arpl
or
out
fsubr
test
jle
icebp
lods
push
dec
jbe
inc
popf
sub
adc
push
xchg
rol
test
or
in
push
mov
push
cld
fwait
nop
xor
cmp
mov
add
test
mov
in
ljmp
jp
sub
mov
aam
fwait
cmp
jne
mov
aad
leave
clc
sub
xchg
outsb
sbbl
xchg
stc
insb
dec
push
sti
jle
xor
cmp
or
cmc
mov
jnp
sbb
ret
dec
pop
fists
repnz
in
and
std
and
sbb
mov
fwait
push
fidivrs
jmp
test
inc
testb
sub
into
xchg
adc
cmpb
mov
cmp
xchg
xchg
xchg
movsl
jle
or
outsb
mov
scas
mov
xchg
dec
push
or
dec
adc
cmp
inc
xor
addl
mov
cmpsl
movsb
dec
push
out
scas
inc
sarl
pushl
enter
and
sub
mov
mov
cwtl
testb
push
stos
icebp
mov
or
xchg
insb
mov
mov
fcomip
je
dec
add
mov
push
push
cmc
mov
gs
aaa
filds
mov
dec
push
repnz
icebp
push
mov
jb
into
jno
int3
mov
dec
popa
xorl
ret
js
push
shll
mov
inc
xor
jg
sbb
imul
in
je
leave
stos
or
lcall
loope
imul
ret
and
out
cmp
dec
push
inc
add
cmpsb
xchg
gs
insb
loope
jbe
mov
ds
mov
in
mov
mul
sbb
jb
shl
push
mov
or
sub
and
inc
fdivrs
loop
push
and
sahf
xchg
je
inc
add
lret
es
lock
lods
dec
out
aas
gs
out
cmp
and
xlat
or
les
or
popa
push
pop
int3
lahf
ret
pop
adc
lcall
cmp
mov
hlt
push
or
push
push
cld
dec
pop
cli
addr16
jb
sbb
iret
jo
or
leave
cmp
or
mov
inc
ret
icebp
arpl
stc
test
xchg
xor
mov
std
mov
hlt
ret
cld
js
fdecstp
rolb
mov
roll
pop
push
mov
shlb
hlt
popa
cltd
pop
loopne
ds
decb
inc
mov
push
and
cli
pop
jae
pop
arpl
leave
cltd
sub
fidivs
aad
leave
mov
xor
xor
xor
fdiv
mov
dec
in
and
and
adc
push
cmpb
adc
das
xchg
and
sub
mov
cmpsb
jo
mov
cmp
sbb
rolb
lret
jl
sbb
mulb
into
insb
iret
and
ret
lcall
push
inc
push
ret
lock
push
lea
push
data16
fdivrs
stos
push
inc
xlat
std
js
aaa
in
fwait
adc
cmp
sbb
cltd
imul
xchg
jnp
mov
aad
and
mov
sbb
inc
and
xor
or
xchg
repnz
mov
mov
stc
fimull
je
push
push
adc
inc
dec
mov
lahf
sarl
xchg
cmp
lock
jae
jl
pop
aas
ret
dec
adc
xchg
or
mov
movsl
adc
add
cli
pop
in
loop
out
insb
fidivs
sub
sub
add
lods
out
mov
js
nop
cld
add
test
jno
mov
mov
sbb
pop
cs
push
ds
arpl
je
or
push
cmp
inc
adc
adc
ret
mov
dec
int
mov
inc
push
mov
mov
insb
adc
bound
or
mov
popa
mov
sbb
mov
cmpb
je
decb
testl
push
insl
push
push
hlt
inc
mov
add
test
ret
les
testb
push
pop
jp
xchg
gs
sbb
add
sarb
test
mov
aaa
test
pop
xchg
xor
pop
aaa
mov
inc
iret
sbb
ja
jns
arpl
lret
ret
adc
int3
sbb
add
mov
mov
inc
fdivrl
hlt
mov
mov
inc
jmp
push
cwtl
mov
adc
cld
popf
pop
add
xor
adc
test
xor
adc
dec
adc
in
into
pop
cltd
popf
add
test
adc
jp
push
adc
daa
push
push
cwtl
xchg
inc
aaa
aad
cs
xchg
cmpsb
lahf
mov
or
mov
cmp
add
xor
push
mov
jecxz
rolb
rolb
xchg
sub
inc
add
loope
test
sbb
push
out
add
mov
aad
lock
cwtl
movsl
push
jg
xchg
mov
arpl
cli
repnz
jne
cwtl
in
adc
jp
les
or
xor
and
push
and
cmp
cmp
repz
and
add
add
cmpsb
mov
sub
xor
pop
and
cld
mov
pop
mov
inc
aaa
mov
inc
out
xchg
mov
arpl
xor
test
int
movsb
aam
pop
xchg
or
outsb
aam
std
mov
mov
push
in
inc
cli
leave
sbb
push
jae
fucomi
mov
fwait
aad
jo
adc
and
daa
cmpsl
faddl
push
ja
cmp
test
cli
pushl
scas
sbb
and
in
movsl
mov
std
dec
xor
pushf
aad
cmpsl
fxch
push
jae
fiadds
loope
adc
test
pop
adc
mov
into
sbb
loop
sbb
pop
cli
lret
mov
pop
dec
mov
aaa
add
lcall
jecxz
pushf
xchg
fucomip
or
enter
cltd
fdivrp
cmc
lods
mov
andb
mov
cmc
add
insb
dec
cltd
imul
push
negb
jl
ljmp
loop
xchg
pop
sub
test
out
lods
mov
fcmovnb
fcompl
pop
jmp
mov
test
sbb
push
ljmp
adc
test
cmp
or
add
inc
cmpsl
pop
jmp
sarb
xor
outsl
xchg
in
add
stos
lds
jnp
cs
sahf
pop
lea
push
enter
fildll
in
inc
push
cld
aaa
fs
shlb
jg
inc
mov
das
hlt
or
mov
mov
cmp
inc
xlat
aam
lds
loopne
aaa
lods
fdiv
shll
insl
iret
pop
mov
and
cmp
inc
lcall
pop
xchg
cmp
and
popf
cmp
andl
cld
push
divl
repz
add
cmp
add
fs
loop
adc
xor
pop
lret
popa
loop
jle
xor
pop
add
call
lret
xchg
jb
dec
sahf
outsl
addr16
push
ret
imul
or
lret
inc
out
test
jecxz
sub
scas
out
clc
movsl
mov
cmp
pushw
jnp
sbbl
jnp
fdiv
mov
movsl
test
sub
cmp
pop
push
xor
shr
lea
aaa
aam
dec
jmp
mov
cmc
cmp
xchg
jmp
inc
xorb
stc
out
roll
dec
sbb
xor
or
les
leave
sahf
adc
sti
jmp
inc
dec
cmpsl
inc
std
fucomp
enter
adc
loopne
pusha
push
mov
add
mov
test
ss
fldl
loope
push
jb
pop
mov
inc
cmpsl
lret
sbb
pop
stc
inc
xor
push
mov
jl
mov
pusha
test
xchg
das
rorb
popa
repnz
sahf
xbegin
les
push
push
ljmp
cli
add
fdiv
fcomps
iret
pusha
lods
jl
and
or
cmc
out
cmpb
aaa
fcoml
inc
cmp
rcll
mov
ja
mov
scas
idivl
cwtl
repnz
mov
push
push
cmp
mov
fimull
jb
outsb
push
jp
and
sub
aam
mov
xchg
mov
data16
fcmove
mov
fnstenv
ret
add
in
loop
cltd
aad
popf
and
orb
xor
sbb
push
push
or
aad
mov
and
mov
sbb
pop
sti
push
mov
test
jmp
ficomps
rol
test
clc
std
leave
xchg
in
addr16
jns
movsl
xchg
push
js
repnz
lret
adc
ss
jno
dec
xchg
movsb
movsb
lcall
loopne
hlt
pop
outsl
loope
mov
flds
cmpsl
adc
imul
dec
nop
test
push
or
push
scas
push
or
icebp
dec
fdivs
jne
stos
cmc
xchg
cmp
inc
xchg
gs
xchg
out
popf
jp
stos
cli
xchg
mov
cli
das
ds
ret
inc
pushf
dec
pop
sub
ret
pop
jp
and
jmp
inc
cmp
fsts
into
sbb
jo
mov
and
push
push
push
xchg
repnz
aam
test
cmp
lret
adc
scas
imul
pop
dec
fstps
outsl
fs
lret
rcrb
mov
sbb
lods
inc
xchg
push
push
add
mov
dec
lahf
scas
add
add
scas
inc
insl
mov
dec
fnsave
lods
inc
xor
dec
in
aad
jne
or
sub
adc
data16
test
aad
fidivrs
fdiv
or
sbb
sarb
sahf
outsb
inc
into
pusha
pushf
fucomip
xor
loop
sub
xchg
xor
repnz
jmp
das
nop
ret
out
fs
fs
cmpsb
jbe
xorl
jge
xchg
sbb
ss
imul
rcr
sbb
push
outsl
add
lea
mulb
mov
outsb
repnz
loopne
jmp
jg
jmp
test
push
xor
fsubs
test
sbb
dec
adc
or
aas
shlb
sbbb
mov
fwait
xor
imul
repz
mov
and
shrl
in
mov
push
fcomip
int
push
das
aaa
sbb
enter
les
sub
add
cmp
inc
and
lret
cld
add
jp
dec
jne
mov
lea
out
cmp
shlb
push
xchg
xor
and
xchg
fmuls
jnp
shll
add
popa
jne
and
fiaddl
leave
sub
fmuls
sub
sbbb
and
xor
sti
imul
jge
jnp
stos
insl
mov
popw
imul
pop
das
js
sub
mov
push
lret
cltd
or
sbb
mov
mov
pop
inc
inc
jle
out
push
inc
cmp
stc
cmp
mov
lret
std
mov
movsb
addb
mov
lea
lret
pop
movsl
mov
orb
pop
fsubl
nop
sbb
inc
sarl
enter
imul
sbb
sbb
dec
outsl
int
mov
sub
push
aad
mov
cli
mov
pusha
hlt
or
or
push
lret
data16
mov
add
add
dec
enter
push
dec
imull
mov
push
aad
push
xchg
jae
pop
push
cmp
push
xlat
xor
add
mov
mov
push
insb
inc
sbb
xchg
push
loope
out
dec
inc
push
mov
xor
push
fidivs
mov
popf
sbb
xchg
mov
pop
push
xchg
sbb
into
push
push
jmp
ljmp
mov
loopne
mov
je
out
adc
and
sub
lret
push
xchg
icebp
or
lret
mov
mov
leave
icebp
xlat
push
aad
mov
fimuls
adc
stos
pop
mov
and
jg
imul
sub
test
mov
mov
add
js
test
nopl
push
pmulhw
xchg
test
sub
or
call
ljmp
es
ljmp
adc
mov
js
and
xor
mov
mov
mov
jns
pop
adc
je
jns
sub
loopne
stos
push
sub
push
jnp
inc
fmull
pop
push
add
push
xchg
rcl
jbe
sahf
ficoms
lret
and
push
or
aaa
nop
std
xchg
inc
movsl
subl
out
mov
stos
dec
aad
cmpsb
jmp
mov
mov
int3
in
enter
fwait
mov
push
insb
cmpsb
push
jmp
push
flds
mov
and
dec
jne
jg
daa
xchg
cmpsl
add
dec
shrl
ljmp
mov
xchg
movsb
xor
int
aaa
test
pop
push
clc
lea
negb
sub
push
movsl
inc
or
shrl
in
ja
sbb
ja
jb
enter
lret
pop
movsl
lahf
push
inc
arpl
mov
int
or
popf
cmpsb
fsubs
les
xchg
into
cmpsb
out
mov
mov
sub
call
xchg
andl
jge
pop
scas
push
xchg
xchg
cmc
mov
test
mov
jg
into
mov
shlb
xchg
inc
mov
cmc
or
aas
lods
int3
jbe
and
pop
repz
fistpll
call
std
mov
cltd
aas
xchg
push
mov
xor
insb
in
inc
inc
jnp
int
lds
mov
add
cld
mov
xchg
shrb
pushf
xor
mull
adc
ret
mov
xchg
jmp
adc
fsubp
stos
shl
cmpsb
sti
xor
pop
add
xor
xchg
inc
push
sub
ficompl
fmul
stos
stc
loop
push
mov
call
leave
testb
xor
jmp
xchg
aaa
mov
ss
mov
jle
xchg
je
mov
xor
mov
push
loope
in
les
fidivl
adc
ret
or
add
imul
dec
ja
ret
adc
dec
dec
repnz
mov
and
jmp
aam
lods
outsb
loopne
mov
je
xchg
sub
cmp
mov
repnz
or
outsl
inc
adc
add
loop
dec
inc
sub
mov
or
das
xchg
inc
inc
xor
or
cmp
sbb
add
push
lds
adc
pop
sbb
and
jns
xor
pop
js
jne
test
mov
cmp
popf
pop
in
dec
xor
out
jmp
sub
cmp
mov
loop
jno
out
xor
pop
push
push
aad
ss
outsb
out
cs
ss
jns
in
xchg
jbe
or
int
or
and
push
test
stos
cmp
mov
outsl
xchg
xchg
pop
mov
inc
loope
sbb
or
sti
jno
push
lods
bound
mov
in
sbb
mov
adc
out
mov
jmp
out
jge
cld
or
mov
lods
xor
cmp
repnz
xor
aaa
push
cltd
xchg
and
ja
pslld
push
push
dec
scas
in
jne
jbe
cli
push
orb
rclb
jae
jp
clc
fisttps
jno
fldl
rcr
push
sar
lahf
jbe
inc
jo
jge
fs
gs
scas
jl
pop
lret
push
rcll
xor
and
or
pop
sbb
je
out
xchg
mov
sub
pop
gs
rcl
out
loopne
and
fisubrl
outsb
mov
lahf
ret
cmpsb
sbb
mov
mov
ljmp
shl
mov
xor
popa
shll
mov
dec
jle
cmpb
pop
orb
pop
js
pop
cltd
test
mov
scas
cmpsl
pop
xorl
mov
mov
or
push
scas
xchg
stos
or
lods
cltd
fisttpl
or
adc
xchg
shll
mov
pusha
movsl
xchg
pop
dec
xor
pop
and
push
gs
jl
popf
pop
mov
test
cld
rclb
int3
shlb
out
nop
fstpl
in
les
lcall
xor
addl
pop
lret
out
mov
mov
mov
dec
test
push
mov
and
sarl
arpl
push
push
in
pop
aam
dec
mov
stc
fmul
and
aad
mov
cmp
push
push
cvtpi2ps
aad
push
jle
push
push
es
gs
gs
jb
mov
mov
or
push
inc
xchg
sub
std
dec
hlt
dec
pop
out
cmp
cwtl
mov
add
add
xchg
out
mov
in
mov
cli
filds
xchg
sub
daa
push
and
rorl
rcll
test
sbb
sbb
inc
imul
mov
sub
cs
loope
std
lcall
fs
add
sub
mov
lock
mov
dec
jecxz
outsb
jle
lahf
lock
roll
ret
mov
mov
push
sbb
mov
mov
outsl
icebp
mov
fbstp
adc
arpl
adc
sti
cmp
mov
sbb
orl
dec
dec
mov
mov
lea
repnz
pop
push
lods
mov
clc
mov
cmp
add
mov
aad
jle
jno
repz
pop
and
cs
xorl
jno
pop
push
cmp
sub
jns
adc
add
iret
in
jecxz
sbb
inc
or
gs
mov
push
dec
pushf
push
inc
fnstcw
jae
mov
mov
out
mov
xchg
and
push
icebp
xchg
lret
push
jmp
mov
fdivrs
aam
lods
fists
or
out
jge
cmp
push
or
fstps
cmp
sub
popa
push
cltd
es
fdivr
dec
popf
dec
aam
dec
scas
sub
loop
xor
jg
push
inc
iret
mov
int
sbb
loop
inc
into
adc
or
or
cmc
sub
rol
jnp
inc
icebp
and
jp
sub
and
fcompl
ljmp
xorb
out
dec
enter
daa
jl
add
jl
icebp
mov
testb
test
and
lods
lahf
lret
cmp
xchg
vmwrite
fcompp
cwtl
pop
pop
idivb
jle
les
call
aas
sub
or
mov
fs
rcll
push
jns
sub
mov
mov
rorl
mov
mov
lcall
ja
call
shll
lret
dec
add
sahf
adc
aas
aad
aas
ret
shll
outsl
rcr
loop
js
mov
aaa
sbb
lcall
call
sub
repz
push
sbb
fstl
sbb
jns
cmpsb
jge
lods
fdiv
xchg
in
jns
mov
and
xor
push
fidivrs
imul
jge
inc
fs
loope
outsl
pop
mov
mov
sahf
xor
adc
cmc
sbb
push
mov
xchg
push
push
mov
xchg
cmpsl
std
sbb
mov
lahf
push
cmp
repnz
sahf
push
mov
xor
jne
jno
fistl
pusha
lret
pop
in
pop
aas
push
into
mov
jne
dec
pop
std
cmc
out
stc
sbb
adc
jmp
es
fsubl
mov
cld
daa
mov
mov
pop
xlat
ss
clc
lret
call
cmc
mov
adc
push
js
pop
mull
or
jo
ds
adc
clc
shll
popf
xor
lret
push
dec
scas
jne
xchg
pushf
sti
stos
mov
mov
cltd
stos
xor
dec
mov
ja
js
xchg
or
jne
pop
push
dec
das
negb
fs
sahf
and
mov
inc
xchg
scas
mov
jno
es
arpl
push
repz
test
insb
adc
int
dec
or
push
push
cmp
ret
popf
scas
push
jge
rorb
js
ja
rcrl
adc
call
xor
das
mov
fs
mov
in
je
add
mov
push
push
popf
push
int
or
bound
adc
jae
mov
mov
movsl
rclb
dec
je
dec
scas
or
mov
inc
cmpsb
xchg
mov
int
or
inc
pop
sub
psubusb
inc
test
in
inc
inc
jo
popa
stos
lods
fidivrl
das
cmp
lret
mov
mov
cmp
enter
je
add
push
int3
adc
imul
sbb
xchg
push
jg
test
enter
mov
pop
xor
push
xor
vsubsd
add
pop
push
push
mov
dec
dec
or
call
movsl
dec
les
pushf
mov
xchg
jo
mov
jle
cmpsl
add
dec
jp
and
iret
add
out
pushf
push
movsl
hlt
push
sub
aas
ss
jnp
les
and
push
cld
and
je
imul
mov
addr16
push
cmp
jg
cli
sub
sub
cltd
mov
xchg
jmp
pop
xor
dec
mov
jle
and
flds
pop
ss
clc
dec
outsl
xchg
pop
mov
sub
mov
imul
and
mov
pop
add
lds
aam
xchg
push
push
dec
cwtl
cmc
mov
lret
pushf
repnz
mov
push
in
mov
fimull
rorl
scas
cli
fldcw
adc
shrb
sbb
mov
mov
mov
inc
xor
add
enter
leave
push
jle
cmp
pop
pop
repz
pop
std
jnp
js
lock
mov
mov
fisttpll
adc
pop
cmpsb
cmp
aam
out
mov
mov
rep
sbb
test
test
cltd
das
mov
push
movsl
xchg
jl
mov
aad
mov
mov
mov
mov
pusha
stos
jo
popf
mov
push
fsub
pop
pushf
sbb
out
cs
gs
push
xor
xor
jge
aaa
ret
bound
push
sub
push
test
cmpsl
add
push
or
add
adc
repz
stc
jg
std
addr16
mov
push
paddq
mov
adc
jg
jb
sbb
dec
test
cmp
push
jae
arpl
cwtl
fldl
out
clc
daa
fildl
scas
das
push
mov
add
inc
das
adc
stos
movsb
std
in
repz
loopne
aas
push
popa
les
cmc
cwtl
pushf
mov
mov
push
pushf
mov
orl
insl
cltd
orb
mov
and
pop
je,pt
push
cmp
cmp
ja
xchg
cmpsl
scas
les
push
and
popa
push
pop
popa
mov
dec
daa
out
mov
push
arpl
clc
test
inc
dec
push
pop
ja
cli
jb
mov
pop
mov
pop
inc
mov
adcl
push
mov
xor
xor
or
adc
repnz
xor
sub
mov
cmc
in
fists
gs
push
cli
mov
loope
dec
outsb
and
push
cltd
into
cmp
dec
push
ds
or
push
pop
sub
mov
out
pop
lock
mov
das
jecxz
ja
pop
stos
repz
daa
push
dec
jo
popa
xor
mov
jno
mov
in
cmpb
jnp
cwtl
push
stos
add
imul
out
mov
aad
add
filds
aam
and
xor
jo
push
loop
or
out
pushf
and
mov
pop
push
lret
adc
in
sbb
mov
cmpb
gs
adc
sbb
jns
jmp
cmp
adc
cpuid
push
xchg
sbb
mov
add
adc
push
popf
rorl
xor
stos
fchs
insl
mov
jb
push
mov
insl
loopne
stos
movsb
xchg
pop
sbb
mov
fstpt
int3
fwait
data16
push
outsb
in
and
outsl
loope
rclb
sub
clc
cmp
or
int3
movsb
push
mov
lock
cmp
hlt
bound
fcomps
pop
xchg
xor
push
ret
cmc
xor
pop
pop
jmp
inc
jecxz
dec
outsl
push
mov
inc
daa
jne
pop
aam
into
dec
lcall
bound
push
sub
aas
rcr
push
daa
rclb
addr16
pop
xor
loopne
pop
lods
xor
push
adc
xchg
into
jg
rolb
movaps
std
out
and
lods
jno
jecxz
xchg
mov
popf
jl
dec
mov
dec
push
repz
icebp
lcall
cld
in
dec
adcb
xchg
jg
xor
out
pusha
push
jmp
push
mov
in
push
sub
cld
xchg
inc
pop
int
adc
test
adc
sbb
sub
adc
sahf
inc
out
sub
aam
cmp
xchg
fucomi
fists
ds
cli
out
movsb
cmp
outsb
adc
cmp
shrb
pop
mov
lock
dec
les
fs
jo
pop
fisubrl
cld
fistps
mov
rcrl
imul
scas
and
cli
dec
int
push
pop
movsb
push
xchg
cmpsb
loopne
loopne
outsb
lods
mov
daa
ficoml
stos
jle
divb
rorb
dec
push
add
das
push
shrl
xor
std
movsl
mov
pop
sbb
cmpsl
xchg
shrl
inc
cs
out
test
call
pushf
mov
xchg
ljmp
push
add
jmp
incb
jns
mov
fimull
pop
es
int
or
sub
movsl
filds
and
sub
pop
and
cmp
mov
dec
clc
push
movntq
inc
push
lahf
push
ss
push
sahf
push
cli
lods
mov
xchg
push
sbb
jo
es
mov
jb
cli
sub
and
or
aad
or
dec
cmp
inc
out
in
xchg
push
mov
je
ljmp
mov
mov
mov
inc
sub
push
lcall
call
mov
outsb
pushl
push
mov
mov
push
add
shr
leavew
stos
hlt
int
add
add
mov
xchg
push
xchg
aas
jno
movsb
and
fcmove
in
in
mov
push
mov
stos
push
mov
and
call
adc
sub
cmp
pop
andb
push
adc
cmpsb
push
out
xchg
xorl
mov
and
and
cmp
or
add
mov
mov
enter
xchg
push
cs
mov
jbe
fwait
popa
or
repnz
inc
xchg
add
aas
mov
cwtl
pop
lahf
insl
sub
js
push
test
and
sbb
cli
shrb
imul
jmp
stos
jecxz
pop
mov
cvtps2pi
xchg
fwait
in
ja
cwtl
mov
jmp
xchg
inc
out
push
std
shr
sarb
les
mov
pop
aad
cld
inc
daa
in
ret
adc
add
sub
sbb
stos
mov
test
mov
or
subb
dec
and
inc
xchg
push
inc
lods
sbb
fcomps
jbe
add
dec
insl
inc
or
inc
lods
mov
inc
sbb
mov
fildl
mov
mov
mov
ljmp
push
inc
gs
push
jmp
pop
adc
jb
mov
cmpl
fmuls
dec
shrl
ds
xchg
nop
jmp
fwait
out
data16
xor
add
lret
cwtl
add
push
nop
subl
loop
mov
dec
xchg
dec
arpl
fwait
subl
mov
lcall
out
enter
pop
pop
orl
and
cli
int
pop
fisubrl
ss
xchg
jmp
repz
dec
outsb
sbb
xor
jmp
cmp
into
jb
gs
popa
movsl
aaa
fistpl
dec
ss
into
mov
arpl
push
enter
add
sub
addr16
mov
cli
add
mov
ret
arpl
in
lods
sbb
cltd
sbb
push
pop
enter
push
ret
jg
movsl
daa
pop
out
push
pop
mov
movsb
dec
out
push
enter
add
divb
mov
push
mov
mov
cltd
mov
loopne
and
sub
insb
push
popa
mulps
fimull
mov
xchg
dec
pop
mov
rolb
or
xorb
mov
into
adc
sub
in
int3
cmp
and
fstp
push
jo
mov
aad
sub
lock
xor
aam
data16
hlt
jo
sbb
int
outsl
fnstenv
inc
js
shlb
arpl
pop
mov
xor
addr16
cwtl
loopne
repnz
aas
dec
xchg
push
mov
rorb
emms
add
cmp
mov
cmc
push
imul
je
repnz
fimull
test
in
call
xchg
push
mov
cwtl
jmp
or
test
and
push
mov
repz
gs
mov
or
and
push
or
fisubs
rcrb
mov
sbb
sbb
std
and
adc
dec
dec
stc
loop
int3
test
push
pop
sti
jmp
pop
inc
or
dec
fidivrl
daa
dec
xchg
ds
cmpsl
push
rorl
cmp
pop
daa
adc
dec
mov
mov
mov
scas
movb
shll
jbe
aam
mov
mov
lcall
es
pop
mov
inc
and
sbb
dec
imul
call
inc
lret
movsl
xor
mov
out
rcrl
in
inc
nop
adc
dec
and
mov
and
push
push
pop
xor
fildll
sbb
cli
movsl
sub
rolb
or
push
gs
repz
je
jns
add
xchg
fistl
popa
dec
je
int3
mov
fmuls
rcl
out
and
aaa
cld
fidivs
mov
mov
adc
mov
mov
adc
mov
sub
xorl
shrb
push
add
add
mov
nop
add
mov
pop
mov
inc
add
into
negb
add
loopne
mov
and
in
inc
cld
add
outsl
adc
adc
stos
fimuls
lock
add
sbbb
ret
dec
test
lret
adc
xchg
das
or
mov
cwtl
ljmp
xchg
popa
dec
imul
add
jo
xchg
out
lret
push
and
scas
hlt
std
mov
fcmovnu
pop
pop
push
sbb
push
rcrb
xor
push
or
pushf
inc
scas
mov
idivl
cwtl
ret
imul
fisubs
dec
jne
push
push
sub
pushf
jecxz
sub
xchg
adc
jae
add
insl
aas
ret
mov
cmp
pop
mov
push
inc
sub
adc
mov
pop
mov
push
add
movsl
js
ljmp
adc
or
mov
mov
push
test
lahf
sub
push
cmp
mov
fmuls
test
mov
leave
cmpsb
fsubrl
xor
add
dec
mov
push
push
mov
mov
push
ret
ret
xor
mov
dec
data16
outsb
xlat
push
popa
inc
je
adc
or
xlat
flds
into
mov
outsb
sarb
loop
std
push
jns
sahf
lds
es
sub
pop
push
xor
mov
out
pop
sahf
and
mov
push
jge
jl
adc
push
jmp
sub
lea
repz
and
in
xor
push
sub
stos
frstor
adcb
push
and
jl,pn
mov
sbb
movsb
lock
and
xchg
mov
adc
push
add
mov
lea
push
push
mov
jns
jnp
mov
aam
mov
inc
lods
rcrb
mov
movsb
xchg
or
mov
cwtl
negl
pop
pop
push
xor
out
push
into
adc
push
xor
lock
jmp
fists
xchg
test
sub
jno
xlat
fabs
mov
push
sarl
loope
jg
inc
ja
xchg
mov
sbbb
imul
push
js
outsb
pop
data16
sbb
ja
jae
inc
sti
xor
fldenv
mov
fldenv
or
jmp
in
pop
pop
in
popa
pop
and
imul
mov
and
xchg
jmp
push
cmpsb
roll
pop
xchg
rol
adc
dec
call
mov
inc
rolb
arpl
pusha
jl
push
inc
cmpb
inc
inc
push
mov
add
inc
enter
icebp
sub
arpl
int
mov
bound
adcl
out
clc
loop
adc
aam
mov
xchg
add
movups
or
cmp
sarl
xor
add
pop
mov
ss
in
lea
or
imul
xchg
daa
lcall
dec
sub
ja
repnz
adc
mov
fsts
pop
icebp
sbb
lret
push
or
push
push
and
cmp
sbb
mov
xchg
repz
mulb
test
in
and
xor
push
push
mov
leave
test
dec
ljmp
out
or
aaa
out
xor
mov
dec
mov
xor
mov
pop
dec
xchg
jg
fdivs
adc
jg
call
jmp
cmp
out
push
pop
repnz
jecxz
aaa
or
fcmovne
add
fmull
jle
fucomip
test
sub
repz
adc
sarb
pusha
sbb
sub
push
push
test
mov
out
cld
mov
cmp
mov
push
lea
sub
jp
inc
xlat
lea
jnp
leave
push
dec
xchg
scas
outsl
sbb
fsubs
imul
loopne
push
add
add
sbb
mov
sub
cltd
popf
pusha
negb
lods
stos
add
js
sub
mov
cmp
push
adc
ss
in
aam
data16
hlt
fildll
lcall
xchg
xchg
fcoms
test
aam
jns
notl
mov
imul
add
pop
cmpsb
leave
jle
mov
ljmp
adc
subb
outsl
sub
pushf
loopne
mov
in
stc
mov
ret
rcl
imull
daa
mul
sahf
ljmp
sbb
negb
imul
push
cs
mov
pop
mov
push
sub
hlt
int3
sbb
popa
inc
out
xchg
stos
outsl
push
add
cmc
adc
xor
in
mov
shll
loope
sbbl
mov
pusha
mov
inc
mov
stos
fists
dec
pop
bound
sub
xchg
cs
add
lods
push
mov
sbb
sub
push
push
dec
inc
add
lock
mov
sarb
xchg
ror
mov
xor
pop
cmp
xchg
cwtl
fadd
imul
mov
decb
aad
sbb
insl
aaa
ljmp
xchg
jb
inc
inc
and
and
mov
jge
jge
pop
out
incb
sbb
cmp
sbb
jg
xchg
sbb
push
jle
lds
jbe
pop
pmaxub
jns
lcall
inc
cmp
nop
lret
inc
fstpl
cltd
push
sub
imul
mov
stos
sub
mov
cmp
scas
loope
cmp
xlat
sub
add
sub
and
leave
push
adc
imul
sub
ret
outsl
mov
adc
pop
clc
and
add
les
lods
shrl
mov
shlb
loope
mov
jg
sub
daa
adc
cmc
das
sbb
movsb
push
ds
or
pop
cmpsl
mov
data16
dec
push
push
sbb
aaa
sbb
cmpsl
push
sub
or
mov
xor
out
cmpsb
cmp
inc
xchg
lret
xchg
adc
dec
add
repnz
and
cmp
enter
mov
cltd
sub
loopne
dec
xchg
pop
sbb
push
int3
add
push
pop
jp
ds
push
add
pop
out
pop
jns
scas
loopne
nop
xor
cmp
cs
mov
sahf
cmp
xchg
sub
lods
fnsave
xlat
iret
aaa
mov
inc
stc
or
push
sub
stos
fidivrl
mov
inc
ret
adc
xchg
int3
dec
xchg
jo
orl
push
scas
outsl
and
adc
xchg
pusha
mov
mov
mov
push
xchg
fistpll
push
loopne
push
xchg
cld
aaa
lods
ss
in
push
subl
xchg
insl
jp
in
mov
loop
xor
and
inc
ss
aas
jno
les
fwait
repnz
cmp
leave
in
push
inc
lret
jg
mov
add
cmp
stos
out
loope
jo
mov
mov
sub
scas
dec
mov
mov
adc
iret
outsb
out
add
pop
ja
call
arpl
pop
lcall
and
xchg
mov
in
loop
mov
cli
popa
repz
sub
cmp
adc
adc
sbb
fidivs
adc
dec
push
fwait
xchg
les
xchg
xchg
or
mov
js
jge
popf
in
js
dec
mov
jns
dec
popf
ja
filds
sahf
add
pop
or
add
hlt
adc
shrb
mov
loope
in
jbe
sub
rclb
repnz
lods
test
movsl
dec
sbbb
cs
and
mov
sbb
fldl
xchg
add
inc
cltd
jg
cs
sbb
outsl
outsb
std
test
xchg
cmp
mov
pop
js
xor
pop
cmpsb
jno
cmp
faddl
sbb
cmp
and
push
sub
sarl
dec
lds
cwtl
dec
cmpb
push
push
sub
xchg
js
jl
test
inc
push
mov
aaa
push
jecxz
inc
out
jne
adc
sub
nop
cld
jp
fcmove
mov
imul
pusha
and
out
jnp
cmpsb
mov
cmpsl
mov
adc
or
es
je
das
lea
fwait
into
inc
or
jns
scas
cmp
jmp
sbb
and
mov
push
push
hlt
popa
in
das
icebp
mov
in
sar
sub
es
mov
sahf
cmpsl
sub
push
or
dec
movsb
aad
jbe
aaa
gs
cmc
xor
add
daa
dec
sarb
add
pop
pusha
xchg
mov
jecxz
fwait
lahf
int3
push
and
rcpps
popa
je
sbb
shll
lret
cmp
inc
add
inc
sub
gs
lret
push
pop
sub
jp
out
add
sbb
bound
fimull
call
push
push
mov
lock
test
inc
or
or
or
pop
mov
pop
inc
cmp
xchg
xchg
es
xchg
mov
sahf
cmp
jae
das
cli
jne
xchg
mov
or
cmp
mov
pop
push
inc
sub
dec
mov
pushf
mov
fmul
enter
ja
pop
out
cmp
jg
pop
ljmp
daa
scas
mov
cmpsb
scas
out
aam
sbb
mov
xor
mov
in
aad
jp
adc
data16
dec
mov
add
mov
popf
mov
jmp
dec
pop
xor
testb
inc
and
xor
or
fnstsw
in
movsl
dec
cmp
shll
lret
xor
repz
jmp
aaa
clc
push
adc
ss
push
mov
or
or
out
rcrb
xchg
pop
fistl
mov
outsl
rcll
enter
in
imull
sbb
push
loop
mov
mov
ljmp
push
mov
shll
mov
add
loope
fstpl
mov
adc
pop
jecxz
or
repz
sub
scas
add
int
jo
pop
xchg
xchg
mov
jne
xchg
xchg
xor
sub
cmc
jg
mov
lock
pop
pushf
ficoms
add
aad
mov
mov
mov
push
xorb
sahf
std
cmp
xlat
mov
out
xchg
es
xchg
xchg
leave
out
hlt
dec
fucomi
out
hlt
sti
lods
sbb
and
mov
sub
mov
rorl
movsb
push
call
or
rorb
inc
add
fwait
push
pop
shll
ljmp
sub
push
push
jge
pop
inc
je
xchg
pop
sbb
lcall
cmp
sbb
sub
cmp
push
cli
incl
fucomip
adc
imul
lock
adc
sbb
push
and
stos
das
jmp
adc
int3
loop
dec
imul
adc
test
mov
movsl
mov
jl
je
clc
or
outsl
fdivs
push
fsubrp
dec
clc
xor
xchg
mov
jle
xchg
jno
xor
inc
sub
sbb
and
arpl
push
in
push
lret
inc
call
sbb
dec
inc
dec
sub
adc
sub
in
not
ljmp
jbe
xchg
and
jnp
xchg
out
jno
inc
test
pop
pop
cmp
notl
out
arpl
mov
xchg
xor
lea
nop
cld
cmp
loop
data16
aaa
fbstp
out
cmp
cltd
xchg
dec
fcmovnu
xor
xor
frstor
pop
adc
repz
addr16
push
cmc
add
push
pop
fwait
insb
push
push
xchg
addb
repz
ret
scas
iret
jle
mov
dec
lea
mov
sbbb
cli
sti
jae
ja
int3
repz
mov
movsl
adc
lods
aam
lea
push
sti
aaa
in
adc
outsl
int
lods
lahf
stos
inc
mov
push
nop
mov
les
pcmpgtd
pop
je
mov
sahf
mov
xor
or
cs
xlat
lcall
stos
dec
lods
inc
out
fldl
rorb
pop
mov
dec
mov
mov
outsl
push
sbb
out
pop
test
test
inc
out
int
imul
movsl
dec
xchg
subb
test
jns
push
ss
enter
xchg
fiadds
out
ja
jp
inc
ljmp
adcl
mov
inc
fisubs
int
dec
jg
jo
lahf
ds
sahf
add
aam
test
rol
or
addr16
jns
cmp
lods
shll
xchg
add
jge
jns
pop
jle
cmp
mov
loop
jae
jae
mov
and
push
jo
mov
int
insb
jge
rcrl
fisubs
inc
cld
push
xchg
repnz
mov
inc
add
push
pop
test
mov
retw
ss
mov
xor
xchg
inc
pop
jb
pop
sub
stos
or
push
js
pop
cmp
mov
aas
iret
xchg
iret
and
ljmp
cld
shl
hlt
addr16
cs
sub
dec
pop
mov
inc
pop
push
cmp
sarl
lcall
pop
arpl
jmp
cmpsl
and
cmpsb
call
push
insb
push
dec
add
data16
xchg
xor
mov
dec
sub
and
data16
scas
leave
jp
adc
push
sbb
movsb
xchg
cmp
jne
inc
lcall
jno
push
in
shrl
pop
add
push
lret
dec
mov
jp
out
and
and
mov
loop
sbb
into
cmp
outsl
sbb
mov
cwtl
or
aaa
pop
adc
cmp
xchg
rcll
test
mov
push
lcall
clc
gs
shrb
mov
xchg
and
sub
xchg
sarb
sbb
mov
and
push
jno
popf
pop
and
es
mov
xor
out
in
int3
test
int3
cmp
neg
mov
adc
adc
lret
dec
pop
movsl
push
sbb
pusha
pushf
pusha
fucomi
xor
movups
add
stos
mov
sahf
mov
es
xchg
mov
sub
imul
cltd
dec
and
sbb
sbbl
push
or
cld
fldenv
and
sub
nop
or
pop
push
adc
cmp
pcmpgtd
out
xchg
mov
sub
in
leave
test
xchg
sbb
mov
or
sahf
pop
repz
int
mov
lea
fsub
push
xor
arpl
imul
mov
cld
dec
or
or
push
pop
mov
adc
sbb
sbb
pop
ljmp
jmp
lods
and
jmp
pop
jns
sub
cs
test
mov
sub
int3
sbb
divb
xlat
insb
subl
mov
xchg
adc
lds
lds
adc
xor
mov
ss
and
sbb
ljmp
in
jecxz
mov
push
fisubrl
or
pop
and
jmp
mov
shr
out
and
test
sti
enter
mov
jbe
pop
and
pop
or
or
xor
jle
scas
add
push
fcomi
into
aam
xchg
jbe
jns
and
push
sbb
push
push
mov
dec
aam
jbe
gs
test
sub
mov
leave
xchg
and
fldlg2
xor
and
inc
mov
inc
push
xlat
cmp
cmp
pop
jb
push
add
aam
mov
xchg
int
sub
aad
fistps
insb
mov
mov
es
cltd
and
xor
adcl
dec
mov
ss
lock
ss
in
iret
daa
push
hlt
adc
shlb
jns
test
fimull
je
pop
cli
jmp
push
loop
loop
inc
arpl
out
out
add
inc
sbb
xchg
or
cmpsl
sbb
clc
enter
scas
scas
shll
or
stos
adc
nop
sub
lret
dec
jge
idivl
xor
gs
orb
mov
mov
lods
lcall
aam
mov
cmpsb
ja
scas
adc
add
push
dec
push
xchg
push
mov
subl
cwtl
jmp
xchg
dec
shll
lahf
or
divb
push
mov
push
push
faddl
pushf
cli
int
daa
pop
inc
push
or
aam
test
out
push
je
dec
subl
push
xchg
test
xchg
rcrb
subl
lods
aad
sbb
js
push
aas
fwait
iret
mul
pop
mov
fmul
scas
cmp
ljmp
scas
inc
inc
inc
and
imul
mov
xor
push
adc
xchg
add
aam
stos
fdivrl
sbb
aam
pop
pop
fwait
iret
ret
xchg
mov
arpl
or
mov
or
jae
imul
adc
loopne
push
mov
pop
push
mulb
jle
sbb
jnp
push
dec
div
std
mov
xchg
cs
out
imul
pop
inc
sub
mov
mov
and
and
xchg
call
sub
adc
mov
mov
adc
rclb
addr16
cmc
sbb
mov
aas
push
cmp
mov
push
insb
fdivp
sti
push
mov
dec
in
xchg
xchg
push
jmp
rcrb
sbb
or
stos
ret
dec
inc
mov
xchg
adc
js
cmp
jb
repnz
jp
shrb
jl
das
push
hlt
sub
in
mov
test
leave
inc
test
movsl
inc
jmp
mov
or
lret
sub
ljmp
adc
dec
arpl
js
sub
mov
movsb
scas
arpl
jg
inc
clc
xor
stos
sub
mov
rclb
adc
scas
xchg
nop
inc
mov
mov
leave
daa
mov
dec
adc
xchg
test
rorl
lods
pop
cltd
push
outsl
adcb
stos
inc
jne
cwtl
sti
mov
mov
ret
test
mov
dec
push
pop
cli
jbe
imul
cmpsl
and
pop
ljmp
rclb
rcl
leave
into
sahf
addl
das
mov
int
push
sub
ss
ret
mov
lock
aam
pop
int3
cmp
jnp
outsl
cmp
fwait
mov
fisubl
jmp
dec
pop
hlt
cmpsb
or
mov
or
mov
mov
push
jmp
adc
stos
aad
mov
das
into
pop
mov
cmpsb
mov
hlt
or
push
sti
and
jmp
and
gs
mov
jmp
push
in
pop
adc
ret
into
sbb
call
mov
add
fcomip
jg
lods
mov
mov
xchg
or
fsubr
or
xchg
add
loopne
mov
ss
out
test
jmp
sti
push
add
stos
cmp
daa
pop
stc
jecxz
xor
jae
push
fadds
cmc
xor
repz
inc
in
or
into
xor
mov
outsb
inc
xchg
push
jae
sub
cmp
and
mov
gs
push
pushl
popf
add
pop
das
push
scas
aam
add
push
or
sub
adc
lahf
ret
jg
scas
push
mov
push
adc
mov
dec
popa
rclb
push
ret
js
andl
js
push
mov
lods
subl
or
cli
in
mov
add
int
bnd
inc
sub
inc
xchg
ja
sbb
imul
cmp
rcll
or
loope
lret
dec
add
cmp
lret
stos
pop
imul
ss
pop
push
lock
div
repnz
or
jl
and
xchg
xor
bound
fwait
inc
mov
cli
in
xchg
fwait
push
sti
scas
sub
stos
lods
call
arpl
mov
call
push
imul
inc
cld
adc
dec
mov
jae
ret
es
push
cmp
mov
mov
mul
inc
xchg
insl
mov
shlb
scas
data16
in
xor
bound
imul
sbb
push
add
dec
xchg
push
in
dec
pop
inc
add
ljmp
cli
inc
mov
imul
cmp
cmp
notl
xchg
pop
sub
pop
addr16
xlat
dec
xchg
xor
and
std
gs
xchg
cmpsl
out
sub
sbb
and
hlt
xor
cwtl
sti
mov
cmp
pop
loop
add
sbb
jge
inc
iret
insb
lods
dec
jmp
push
cmpps
lret
daa
xchg
and
pop
in
ds
in
sahf
enter
rcrb
das
jle
push
das
cmpsl
inc
clc
push
rol
sbb
mov
data16
fcompl
leave
aas
xchg
pushf
dec
pop
leave
cmpsl
out
out
dec
inc
sbb
lret
inc
push
movb
push
insl
mov
pop
mov
xchg
shll
pop
adc
loop
fcmovnb
rorb
push
jbe
inc
lret
pop
xor
xchg
mov
addb
lcall
xchg
cwtl
mulb
and
inc
push
cwtl
scas
mov
cmpsl
call
xchg
mov
and
shlb
cli
add
test
or
cmp
pop
daa
push
jmp
sbb
leave
mov
into
sbbb
and
fs
loopne
sbb
pusha
adc
inc
lret
cwtl
cmpsl
cmp
jns
pop
mov
data16
test
xor
jno
retw
aaa
jecxz
jae
mov
xchg
cmpsb
icebp
and
sbb
mov
cmp
cld
lahf
popa
mov
arpl
jge
adc
jle
jno
scas
jb
inc
lret
pop
cmc
mov
movsb
xchg
sbbb
out
xlat
pop
cld
lock
xchg
cmp
jb
sub
or
out
leave
notl
gs
daa
mov
jge
pop
mov
push
repz
mov
pop
mov
or
mov
jp
pushf
lcall
push
cmp
in
mov
push
mov
lea
in
lahf
lret
aas
or
or
xchg
ret
dec
add
adc
sbb
pop
lahf
int3
cli
dec
mov
ljmp
lcall
dec
aad
cmpsl
ds
sbb
setnp
xchg
lods
cltd
mov
sub
jnp
or
test
lret
aad
push
xchg
and
sbb
mov
scas
xchg
mov
pop
jle
fcoms
es
call
inc
cmpsl
add
addb
mov
in
lea
or
push
cmp
mov
mov
pop
gs
dec
jp
mov
test
fimull
nop
mov
outsl
lret
sub
stc
cwtl
ret
push
and
adc
adc
je
adc
inc
ret
dec
jo
jp
jp
call
test
inc
xchg
mov
mov
jae
je
inc
mov
iret
call
fldl
ja
lcall
into
xor
aad
test
mov
scas
pop
lods
pushl
fistps
lock
xchg
mov
cmp
int3
lahf
lock
test
push
out
xor
and
mov
out
push
jg
daa
in
mov
mov
lock
mov
cmp
xchg
lds
fldl
mov
push
fistpll
aas
nop
cmp
mov
mov
sbb
jge
outsb
dec
mov
and
pushf
or
ret
js
xchg
xor
bound
mov
pop
sub
rcrl
or
push
adc
arpl
adc
addr16
call
inc
dec
cli
mov
push
fisubl
je
cltd
dec
cmpsl
add
rclb
arpl
cmpsl
pop
mov
enter
jne
stos
lock
sub
jp
fbstp
stos
push
adc
fsubrl
fs
push
cmp
stc
dec
mov
sbb
pop
lret
mov
cs
jae
test
stc
mov
inc
cli
loopne
mov
orl
mov
mov
scas
fildl
mov
mov
clc
sbb
xor
mov
pop
push
lock
dec
mov
sub
insb
push
in
sub
lods
and
cmp
sub
jp
sbb
or
fs
cmp
jmp
or
dec
imul
mov
push
jl
fdiv
pop
mov
and
jo
mov
or
mov
jns
faddl
in
jecxz,pn
xchg
cmp
iret
js
hlt
test
mov
ja
shrl
mov
lock
inc
adc
daa
jno
popf
xchg
push
les
sbb
test
cld
mov
add
js
xor
pop
push
test
mov
add
xchg
push
arpl
cmp
nop
les
push
and
push
int3
test
in
jae
mov
lock
in
inc
and
adc
cmpsl
inc
dec
leave
sar
xor
es
push
enter
inc
int
negb
in
insb
cld
sub
imul
dec
sbb
sub
push
pop
sub
imulb
adc
xor
test
adc
or
aam
dec
cmpsb
vmwrite
fildl
repz
mov
mov
add
js
xchg
insb
sub
fcoml
rorl
outsl
notb
and
flds
or
shlb
lds
and
jbe
xor
mov
mov
fsts
xor
cmc
aaa
call
outsl
add
gs
jae
icebp
mov
and
mov
out
ljmp
xor
js
ret
xchg
jp
add
cwtl
or
and
ficompl
ds
pop
daa
imul
ret
pop
lods
filds
ja
les
xchg
dec
jne
mov
push
ret
lea
inc
pushf
outsb
into
fsin
popa
jnp
jl
and
ret
mov
push
mov
add
or
nop
das
out
divl
loope
jne
jbe
clc
xchg
lcall
push
ljmp
cmc
push
ret
sub
scas
pop
fwait
dec
push
subb
das
mov
jg
jl
xor
adc
insb
clc
arpl
add
cmp
mov
fnstenv
pusha
xchg
or
push
xchg
cmp
sub
mov
lods
movsb
cwtl
adc
cwtl
call
lea
ret
daa
das
ret
mov
jmp
mov
jl
cmp
cmpsb
out
mov
sub
subb
pop
xchg
adc
loop
js
cmp
shll
mov
popa
int
inc
jecxz
aad
ja
test
lock
push
and
scas
out
cli
xchg
or
pop
cltd
insl
xchg
xchg
outsb
loope
sbb
lods
and
outsl
dec
inc
pop
cld
or
int3
arpl
jle
jo
repz
mov
pop
cmpb
dec
dec
cmp
idivb
js
popf
mov
aad
push
mov
lcall
lret
sub
mov
std
notb
jle
pop
in
xor
inc
push
sbb
and
sbb
and
aad
or
adc
lret
add
pop
sub
cmpl
sub
addr16
insl
pop
jo
cmp
mov
and
fnstenv
inc
jge
xor
fcomi
les
push
int
jae
xchg
fdivs
aaa
push
jns
repz
addl
or
psubsw
test
test
pop
xchg
xchg
dec
and
xchg
push
comiss
les
mov
into
mov
in
pop
sub
aad
or
sbb
pop
lods
dec
out
hlt
mov
jae
adc
test
xor
adc
in
iret
inc
sub
dec
jb
in
cmp
sahf
mov
mov
ret
adc
arpl
add
pop
aas
jnp
std
push
push
adc
andl
out
sti
mov
imul
sbb
cli
jmp
sbbl
cmpsl
lods
mov
pop
mov
pusha
loope
ret
xor
sub
mov
cmp
pushf
jnp
mov
js
sbb
xor
es
dec
dec
or
push
out
sbb
in
jns
dec
push
bound
fadds
xlat
inc
mov
psrlw
xorl
cmp
xor
sahf
aam
mov
mov
or
cmp
push
jmp
stos
call
shrb
popa
xchg
and
pushf
mov
fnstcw
cmp
dec
sbb
or
xor
test
jle
jo
imul
inc
or
mov
xchg
sub
cmp
adc
or
shll
ret
ret
insl
jmp
sbb
icebp
mov
xlat
cld
adc
xor
lea
sub
fiadds
pop
jno
test
mov
inc
add
lret
repz
push
das
sub
push
int3
push
sbb
sub
cmc
out
jne
and
loopne
das
jg
popf
cmp
push
xor
sahf
popf
push
pop
lret
xlat
movsb
mov
push
mul
aas
cmc
adc
push
dec
mov
data16
cs
and
and
lods
nop
jo
xchg
idivl
push
outsl
loopne
wrmsr
in
pop
mov
fmuls
dec
mov
xchg
sbb
enter
jl
sbb
cs
les
lahf
fwait
addl
cs
rep
push
lock
and
sub
sbb
mov
mov
ss
mov
adc
push
mov
or
test
mov
jecxz
mulb
xchg
jns
pop
ljmp
inc
fidivrl
pop
popf
xor
cs
popa
subl
je
cli
xor
pop
ljmp
xor
add
cmpsb
mov
pop
into
sbb
das
pop
out
test
and
movsl
pop
dec
ljmp
cld
pop
test
fldenv
loopne
ficompl
cmp
xchg
push
mov
push
ss
mov
jns
les
mov
nop
pop
nop
test
cmp
dec
xchg
pushf
mov
adc
movsb
es
out
inc
and
jae
test
xchg
lock
popa
ja
pop
adc
in
ljmp
mov
into
cltd
int3
call
int
mov
psubsw
pusha
add
push
in
jo
push
xchg
cli
add
pushf
in
in
push
mov
xor
pusha
pop
fldenv
mov
insb
testb
ljmp
outsl
dec
or
xchg
out
cmp
movsb
cmc
imul
shll
iret
fidivrl
not
mov
dec
jp
dec
xchg
test
cmp
add
addr16
or
push
fnstcw
jg
ret
in
ljmp
jge
adc
les
repz
pop
push
push
xchg
cmc
pop
ss
fwait
or
aad
lret
faddl
imul
rolb
shll
dec
shlb
dec
sbb
je
add
inc
mov
pop
insl
cwtl
outsb
add
rcrl
sub
add
bound
jge
adcb
leave
mov
pop
xor
or
lret
out
rclb
call
pop
mov
lods
jmp
inc
int3
mov
test
mov
hlt
in
fdivs
cmpsl
out
movsl
sbb
dec
shrl
sbb
add
cmp
arpl
mov
mov
lods
das
stos
loopne
cmp
das
xor
jge
mov
sti
mov
int
les
ss
addr16
es
mov
shll
fwait
shlb
out
xor
lret
int3
xor
shrl
add
popf
jbe
mov
or
in
das
mov
jg
xchg
js
or
push
mov
sti
xchg
and
pop
or
xchg
mov
adc
add
popa
or
sti
xchg
notb
scas
push
cmp
jo
mov
fisubs
lfs
sahf
fimull
lods
sbb
jbe
cmp
mov
bound
hlt
pushf
call
dec
lret
jno
movsb
push
xor
int
and
dec
xor
dec
xor
sub
mov
fnsave
mov
or
imul
fndisi(8087
andl
push
dec
in
adcl
or
imul
shrb
inc
jp
std
mov
fs
stos
mov
es
jp
sbb
adc
pop
add
mov
push
jecxz
int
fcompl
add
sub
mov
popf
sub
nop
sbb
inc
pop
lcall
loopne
sub
xor
sub
fdivrp
adc
int
les
std
lcall
jp
jl
xchg
sub
xchg
hlt
popa
mov
arpl
cmp
in
testl
out
sub
xchg
add
sarl
roll
bound
cltd
pop
xchg
je
in
sub
sti
xchg
mov
popf
clc
dec
pop
push
mulb
sub
adcb
insl
outsb
jo
pop
jae
dec
xchg
jg
cmp
shlb
movsb
sbb
repz
inc
mov
scas
mov
add
adc
push
push
ret
pop
push
fwait
adc
js
sub
xchg
scas
lahf
xor
mov
arpl
mov
jnp
pushf
inc
cmp
out
jmp
xchg
dec
dec
jne
fcmovu
rcrl
or
rcrb
orb
or
pop
lock
mov
fs
call
add
testb
inc
loopne
pop
or
add
icebp
xor
jge
add
stc
xchg
mov
lods
in
dec
push
mov
ja
ja
cmc
jge
out
rcll
int3
stc
negl
dec
cmpsb
xor
mov
in
cmp
xor
pop
fadd
lock
pushf
lds
mov
adc
inc
mov
cmp
cli
xor
xchg
dec
cmpsb
ds
roll
jmp
xchg
push
jle
and
cmp
mov
mov
fldt
xchg
mov
sahf
into
daa
mov
push
push
jbe
inc
icebp
add
and
arpl
jbe
dec
pushf
inc
ss
xchg
dec
push
xchg
mov
loopne
stos
cmc
movsl
jno
mov
fs
in
fsubs
mov
sbb
xchg
aad
sti
bound
stc
jns
or
jae
cmp
fisttpl
lea
mov
xor
and
fsubrl
push
cmp
xor
sbb
dec
sahf
lds
std
sbb
mov
sbb
jmp
sub
xor
mov
xchg
jl
sti
inc
mov
lret
clc
imul
fs
pop
lds
push
test
test
sbb
sti
xlat
push
shld
or
in
cmp
aas
add
sbbb
sbb
cmp
aas
inc
mov
mov
sbb
stos
jmp
inc
lcall
repnz
aam
sahf
push
mov
xor
stc
lcall
stc
xchg
or
add
sub
dec
or
pop
sarb
inc
cmp
stos
or
add
push
add
inc
mov
mov
lds
add
mov
jp
xor
mov
sbb
dec
shll
inc
xor
lahf
mov
jo
cmp
outsb
clc
sahf
std
aam
xchg
inc
popf
pop
aad
adc
push
popa
add
inc
cmp
repz
xchg
sahf
add
push
aaa
pop
add
add
out
in
dec
push
in
pop
in
xor
dec
test
inc
cli
sub
je
ljmp
mov
mov
iret
jle
sbb
enter
jbe
push
clc
cwtl
in
testb
loope
lea
andl
pop
cli
dec
sub
mov
gs
int3
nop
xor
test
and
idivl
mov
or
mov
push
or
sahf
leave
int
xchg
adc
dec
pop
mov
mov
mov
push
pop
add
ret
loopne
sub
jecxz
push
xor
loope
mov
repnz
mov
mov
shl
cmp
mov
jno
mov
mov
rcl
cli
jp
sub
outsb
clc
popf
mov
adc
push
dec
cmp
hlt
sarb
jnp
fsubr
adc
loopne
mov
sub
mov
ljmp
sub
add
test
add
jnp
pop
jmp
mov
mov
push
fbstp
inc
les
bound
or
mov
jae
sub
call
jo
imul
jp
and
add
aas
dec
int
mov
mov
xor
push
mov
call
and
scas
cmpsb
loopne
jle
mov
pop
leave
shr
sub
filds
cmpsl
and
ficoms
or
js
inc
cmp
lcall
mov
pop
loope
xor
mov
aad
ljmp
mov
xchg
and
sbb
cmpsl
jns
ljmp
les
repz
or
jns
mov
aam
xlat
sub
pop
xchg
int
dec
out
jnp
xchg
xchg
push
xor
cmp
insb
js
in
cmpsb
mov
or
xor
pushf
fs
jnp
adc
outsl
test
mov
pushf
or
jns
call
outsb
jbe
push
scas
push
aas
mov
lcall
outsb
mov
lret
out
fadds
inc
or
jne
dec
add
lret
dec
jne
shr
ds
movsb
lret
sti
or
ljmp
push
mov
pop
fildll
fisubrs
pop
testb
push
xor
push
scas
mov
es
rclb
cmpsl
add
int
cmp
fmul
mov
test
or
repnz
jp
out
les
mov
jmp
lahf
repz
mov
rcrl
ffreep
repnz
sub
xor
lret
orb
sub
mov
adc
mov
push
cmpsb
sbb
cmp
ds
test
in
push
sar
push
mov
mov
adc
inc
xor
rorl
leave
cmpsl
or
fdivl
xchg
push
out
inc
loope
inc
push
repz
mov
sbbl
in
movsl
cmp
outsb
fstps
cmp
cld
aad
test
stos
cltd
pop
push
jl
inc
xchg
les
ret
popa
addr16
aam
sbb
arpl
fmull
or
loope
sub
push
out
dec
rcrl
lods
imul
adc
test
sahf
das
add
lcall
ficomps
push
cli
jae
jnp
jno
sub
pop
or
ror
test
arpl
mov
xor
add
adc
mov
xor
xchg
mov
mov
shr
out
lahf
rorb
cltd
add
sub
mov
push
scas
mov
mov
sub
sarb
adc
or
lods
push
inc
lcall
fucom
out
outsb
push
push
addl
jo
ss
mov
sub
dec
push
add
xor
xchg
jp
lods
mov
ret
ss
test
or
push
push
push
or
add
inc
add
fwait
mov
test
mov
push
mov
xor
or
mov
in
pop
loopne
dec
xchg
pop
mov
mov
je
xchg
mov
cmp
adc
stc
imul
inc
jg
fists
mov
xlat
pop
notl
divb
fisttpl
pop
add
mov
adc
fbld
push
aam
jl
ds
das
fiaddl
push
into
cmp
mov
cmp
gs
mov
cltd
fwait
dec
adc
nop
into
sbb
dec
enter
sbb
sbb
stc
sbb
popa
add
fucom
sub
jb
jl
ficomps
add
push
adc
dec
add
jp
cmpsb
xchg
xchg
testb
inc
in
adc
lret
lcall
jns
mov
or
sahf
movsb
lods
cmpsl
adc
lds
lret
out
iret
sbb
jne
mov
in
lea
loope
mov
pushf
arpl
xchg
loope
mov
repz
aas
mov
sub
lock
test
jg
mov
xchg
shll
dec
aas
dec
push
js
nop
ret
pop
aaa
aad
rolb
ds
cmpsb
mov
push
mov
dec
into
mov
cmp
xchg
popf
push
and
xor
out
pop
lahf
fistps
clc
shl
push
mov
js
lret
jmp
aam
mov
or
sub
adc
addr16
push
xchg
outsb
adc
fucomip
sarb
jmp
inc
imul
mov
mov
push
aad
ds
xlat
mov
out
in
jl
mov
push
ror
cmpsl
jne
xor
test
cmp
jns
mov
daa
jne
mov
mov
pop
mov
insb
mov
jnp
pop
xor
movsb
bound
out
xlat
subl
sub
aaa
fistpl
cmp
loop
mov
data16
pushf
or
jo
push
fbstp
cmpl
fldt
mov
sbb
rolb
pop
daa
jp
mov
xor
xchg
cwtl
dec
popf
out
lock
inc
fcompl
gs
add
bound
sbb
push
xchg
sti
adc
loopne
es
repz
and
int3
pushf
sbb
loopne
xchg
cmp
jno
add
cltd
clc
movsb
lret
mov
pop
or
call
das
jp
cmpsl
push
pusha
roll
mov
sub
out
pop
fwait
test
ds
sbbb
mov
mov
dec
mov
nop
lock
inc
stos
mov
jmp
leave
add
cltd
ljmp
orl
lahf
xor
adc
fnsave
cmp
xchg
stos
adc
mov
push
or
ss
movsl
mov
cmp
fisubl
test
scas
fbld
in
daa
jae
loop
inc
repnz
adc
iret
mov
and
sub
repz
sub
daa
adc
cmp
xor
xor
cmp
mov
jmp
lret
xchg
xchg
mov
or
int3
addb
and
call
jnp
ficoms
into
mov
cltd
xchg
loope
andl
pop
cmp
mov
mov
mov
sbb
sub
insb
stos
mov
adc
and
jle
fisubs
dec
inc
fwait
xchg
and
sbb
mov
pop
push
pusha
inc
pushf
and
inc
test
sub
out
std
lcall
push
xchg
jbe
out
cmc
aam
ret
jecxz
mov
mov
imul
negl
ret
movsl
mov
inc
jmp
pushf
inc
add
inc
inc
mov
popa
jno
and
push
sahf
cli
sub
adc
jp
jecxz
sub
mov
sub
jne
add
movsb
repnz
inc
stos
mov
out
gs
sub
pop
sub
repnz
mov
in
js
out
jnp
push
stos
or
xchg
mov
mov
cwtl
cmp
xchg
xor
push
mov
ds
ja
push
and
loop
test
sbbb
mov
shr
pop
cwtl
dec
mov
shld
scas
dec
je
xchg
sub
outsl
xor
jns
test
pop
push
ljmp
mov
mov
inc
scas
xchg
mov
imul
pop
in
or
insl
les
je
fdivl
leave
mov
sub
mov
pushf
leave
ret
movsb
addr16
clc
push
mov
cld
int
mov
xchg
popa
mov
push
neg
aad
mov
pop
cmp
pop
mov
lods
mov
sbb
andl
mov
fstps
pop
aad
cmp
loop
or
lds
inc
mov
cld
mov
daa
daa
push
pop
pop
int3
xchg
fistps
sar
mov
xchg
movsb
add
jno
mov
into
sti
insb
mov
cmpsl
add
inc
sub
inc
adcl
pushf
or
insl
das
aas
repnz
mov
lods
xchg
lahf
int
insb
sahf
movb
sti
int3
xor
or
sbb
aaa
mov
sub
ds
xchg
add
in
xor
ret
pop
dec
ds
fcoms
xor
mov
jecxz
inc
movsb
cmp
movsb
arpl
push
ja
ret
fldt
jp
cmc
aam
cwtl
movsl
sub
gs
jo
mov
cmpl
cmp
in
xchg
jo
xor
mov
adc
jmp
je
leave
or
sbb
and
movsl
les
les
cli
and
test
imul
clc
adc
adc
repnz
sbb
mov
xchg
stc
jmp
sbb
in
imul
clc
pop
js
sub
lods
nop
loop
or
addr16
cmp
mov
int
ret
sbb
fnstenv
sub
out
popa
daa
je
nop
inc
aas
push
out
and
punpcklbw
cmp
push
add
mov
dec
dec
jle
mov
outsl
ds
push
fisubs
jecxz
ljmp
sbbl
mov
aad
add
mov
popl
pushf
out
je
outsl
and
dec
mov
icebp
imul
lret
loope
jecxz
orl
pushf
pop
xor
movsb
mov
cmp
lahf
stos
dec
pop
divb
jmp
enter
xlat
test
lock
fsub
jmp
add
sahf
xor
jo
mov
aam
sbb
mov
pop
dec
repz
push
hlt
lea
pop
xor
xor
pop
push
js
mov
mov
aad
ret
dec
mov
xor
jns
ret
bound
sarl
loope
add
and
mov
push
push
pop
sub
xchg
cwtl
stos
pop
jp
pop
cmp
jl,pn
inc
pusha
cwtl
test
and
scas
lock
ficoml
xchg
mov
shrl
sub
shr
test
xchg
cmp
hlt
push
sub
mov
shlb
sbb
jns
mov
and
push
xchg
pop
jmp
push
or
aam
ljmp
int
push
fmull
gs
lret
push
rclb
mov
in
pop
xchg
mov
mov
in
movsb
lahf
inc
cltd
add
js
test
fcmovnu
rolb
clc
sub
es
in
dec
xlat
xor
mov
rorl
dec
fnstsw
out
cli
daa
mov
call
leave
pop
lea
fwait
xchg
lcall
and
addl
andb
cmp
add
mov
pop
dec
cmp
jns
orl
and
jle
adc
decb
sub
cld
and
xlat
movsl
or
cmp
add
sbb
mov
cmp
jl
mov
cli
adc
ror
push
loope
repnz
rcrl
push
std
adc
xlat
sub
insl
aaa
mov
jae
pusha
test
sti
mov
mov
xor
sbb
stc
enter
xor
mov
cltd
jg
sahf
jns
adc
dec
mov
sti
pop
xlat
insb
in
clc
lods
icebp
adc
cld
pop
push
sub
sarl
add
and
cmp
mov
loope
jge
jp
inc
inc
fucom
test
stos
pop
push
xchg
pusha
cmp
aam
mov
stc
dec
jae
inc
mov
outsl
and
cmpsl
ljmp
push
gs
inc
push
push
sub
lahf
pop
mov
repz
mov
xchg
cli
insb
push
push
xchg
sub
push
push
jbe
and
outsb
cmp
add
ds
sub
int
jecxz
aaa
dec
test
pop
movsb
xchg
mov
mov
push
push
hlt
outsl
sbb
fucomp
xchg
ret
notl
mov
add
sub
push
fs
xchg
in
ljmp
into
adc
mov
push
add
lea
and
enter
in
or
call
cmp
clc
jge
push
push
cmp
shlb
cmp
mov
pusha
and
and
test
adc
mov
int3
shrl
aaa
stos
lods
sbb
xor
mov
cmpsb
mov
push
loope
cmp
pop
jo
inc
aaa
scas
xchg
test
jb
cld
stos
leave
dec
sbb
ljmp
push
pop
mov
les
push
fsubrs
js
xchg
push
cmp
mov
fisttpll
ss
pop
andl
or
or
mov
or
in
scas
in
mov
scas
cld
cwtl
movlps
cwtl
arpl
negl
insl
sbb
mov
jmp
jle
sub
xchg
xchg
ss
scas
fsubrs
pop
lods
add
aam
and
xor
ficoms
idivb
jge
sub
fdivr
mov
and
into
and
push
adcl
pop
scas
sbbb
jo
fs
mov
push
adc
stos
movsl
imulb
mov
jb
shr
mov
adc
push
or
shll
aas
subb
pop
sbb
icebp
loopne
lret
mov
sbb
sbb
jo
xlat
sbb
je
jle
daa
cmp
ret
mov
sarb
clc
cmp
imul
mov
incb
test
xchg
daa
sub
add
pop
mov
int3
test
scas
lret
lods
sub
out
lock
cmp
addr16
inc
ret
jbe
in
mov
push
xor
mov
cld
xor
mov
pop
sub
push
cmp
pop
inc
jg
out
leave
fcoml
outsb
insl
jo
test
call
fisubrs
test
enter
mov
imul
es
lds
or
ss
and
sub
test
jno
mov
dec
inc
sbb
push
icebp
js
mov
cmp
jp
xchg
dec
pop
das
js
mov
outsl
aas
lahf
xchg
sub
in
dec
test
adc
shlb
and
mov
push
popa
xchg
rolb
xorl
cld
movsl
xchg
jp
inc
mov
call
sbb
lahf
out
sub
loope
inc
push
data16
mov
add
and
cmp
sub
pushf
mov
mov
and
xlat
jg
lahf
xor
pop
sahf
xor
add
sub
js
insl
and
fildl
mov
inc
rorl
xlat
sub
sbb
xchg
jl
sub
inc
mulb
inc
inc
jbe
xor
aaa
js
sub
inc
scas
dec
scas
mov
ds
xchg
in
push
dec
popa
fiaddl
lcall
mov
xchg
arpl
ret
addr16
push
cmp
push
add
stc
out
les
cli
stc
xor
inc
aam
pop
dec
xor
push
jo
shrl
mov
addl
lcall
addl
fwait
or
and
jecxz
mov
mov
jge
lods
mov
jnp
ret
jne
ret
xorl
lods
sbb
pop
jp
or
jp
and
and
icebp
jmp
jmp
movsb
sar
jbe
jecxz
sub
sub
ljmp
lock
push
xchg
push
add
mov
mov
sbb
jecxz
add
sub
out
mov
iret
outsb
loopne
mov
std
jnp
jae
adc
imul
jo
pusha
push
inc
iret
cltd
pop
xchg
loopne
pop
mov
mov
sub
mov
sub
mov
jo
ljmp
aad
sub
cld
and
pop
mov
mov
and
aaa
arpl
mul
mov
sahf
pop
test
cmp
ficomps
mov
into
shr
hlt
cwtl
mov
loop
pushl
xlat
xor
xchg
and
sub
and
lret
dec
xor
repz
jl
xchg
mov
push
ds
sub
cmp
sti
ljmp
pop
cmp
out
scas
mov
stos
filds
mov
push
add
test
pop
pop
in
addl
sbb
mov
int
repnz
in
out
mov
mov
imul
xchg
sbb
mov
stc
sbb
mov
outsl
es
dec
mov
cmp
cwtl
mov
sub
mov
jo
pop
mov
push
push
ljmp
mov
gs
jnp
inc
mov
cmp
sbb
mov
iret
test
lret
pop
add
jnp
add
xor
pop
and
push
fwait
jecxz
cmp
mov
fcomi
push
pop
mov
mov
jle
clc
das
cld
rcrl
and
clc
mov
xor
inc
cli
sub
xor
lods
add
std
mov
pop
icebp
fnstsw
adc
mov
int
js
cmpsl
movsb
mov
push
sbb
in
pop
add
cvttps2pi
rcrl
xlat
lds
inc
icebp
xlat
pop
mov
adc
jnp
add
dec
enter
loope
mov
or
fdivl
aam
sub
pusha
das
call
movsb
ffreep
pop
jle
imul
loopne
xor
icebp
ja
pop
jmp
mov
mov
mov
sbbl
push
xchg
lods
jecxz
xchg
fistpll
jno
cltd
dec
and
sub
clc
pause
jns
push
cmpsl
sub
negl
jb
adc
xchg
cmp
mov
icebp
imul
sbb
addb
adc
pop
nop
sub
sub
xchg
mov
and
rcl
inc
mov
push
mov
fimull
mov
sarb
xchg
gs
outsl
into
and
adcb
mov
shll
xorl
lock
sti
push
pop
fwait
dec
insb
int3
lcall
dec
aam
daa
test
mov
sti
test
sub
icebp
dec
iret
int3
lret
xchg
lods
mov
xor
cltd
push
divb
mov
fiaddl
mov
subb
pushf
arpl
js
mov
add
popf
xchg
xchg
mov
sub
aad
lock
xor
cmpsl
rorb
data16
rorl
xchg
sbb
in
aam
sbb
outsl
sbb
jne
jnp
testl
or
in
push
repz
xchg
jg
xchg
mov
jo
ljmp
popw
adc
xor
out
xor
pop
add
dec
add
jl
fnstsw
cwtl
pop
adc
sarb
ret
pop
in
shlb
gs
rcr
sbb
jmp
jmp
cmp
and
sbb
repnz
xchg
popf
data16
repz
jmp
xchg
adc
jle
loop
jp
call
call
repnz
hlt
mov
mov
outsl
bound
xor
mov
das
inc
pushf
xchg
mov
adc
and
rol
sbb
jge
stc
adc
cmp
popf
mov
xor
sbb
push
push
xchg
xor
js
jae
lods
test
pop
cld
jl
gs
pop
cmp
stc
flds
push
mov
mov
mov
fisubrs
xchg
popf
sbb
dec
mov
fnstenv
call
push
lcall
xor
fcomps
mov
popf
lret
cmp
mov
scas
hlt
adc
adc
mov
mov
dec
loopne
sub
mov
mov
mov
iret
add
lret
inc
mov
sub
and
rcll
mov
adc
lcall
call
fmuls
in
cwtl
jnp
out
sbb
imul
std
sub
add
fnstcw
push
cmp
aam
mov
pop
adc
and
sbb
dec
jg
adc
popf
mov
lcall
shrl
jno
push
rcll
inc
movsl
pop
fadds
or
mov
fisttpl
in
ljmp
lret
cmc
inc
pop
std
out
addr16
add
push
or
mov
xchg
mov
fs
dec
sub
pop
outsl
mov
ljmp
cs
push
push
push
dec
test
in
out
push
iret
gs
mov
fnstcw
ljmp
jle
not
cmc
xchg
xor
aad
es
call
jl
pop
movsb
stos
arpl
inc
imul
push
insl
test
pop
call
mov
mov
adc
in
jo
xchg
sbb
mov
fdivs
dec
xor
jp
mov
rcl
dec
pop
call
aad
fistpll
testl
adc
cmp
sub
lods
sti
jle
push
cmp
xchg
cmp
pop
xor
sub
pop
cmp
xor
aad
xchg
dec
push
pop
dec
aad
iret
push
jno
cwtl
es
out
in
add
imul
cli
loope
inc
push
mov
cmp
fisttpl
or
push
imul
lret
mov
lods
ret
jne
fwait
push
gs
test
cmpsb
mov
fidivrl
and
xchg
sbb
adc
in
movsl
aad
dec
loopne
fstpl
push
sub
mov
xor
les
add
xor
outsl
mov
adc
sub
mov
inc
push
cltd
xchg
aad
push
test
xor
scas
dec
pop
adc
mov
fmuls
adc
jb
mov
pop
adc
dec
ret
imul
iret
cwtl
iret
inc
jne
mov
xor
es
jle
cmp
imul
mov
jl
cs
jle
inc
adc
pop
mov
mov
pop
lods
jo
sbb
ja
add
mov
xchg
jo
dec
dec
mov
jbe
test
cmp
mov
jecxz
addb
repz
mov
dec
hlt
dec
push
push
mov
repz
jne,pt
adc
dec
adc
mov
jb
pop
or
xchg
popf
addr16
sbb
xchg
test
cmp
pop
xchg
xor
test
and
and
and
loopne
cmp
pop
andb
or
clc
adc
cmpsl
sub
add
jle
int3
mov
fldcw
rcrb
push
xchg
sahf
out
ja
mov
sahf
rorb
leave
test
ror
sub
ret
or
mov
mov
pop
jmp
xchg
pop
cmp
pop
pop
test
sahf
xor
mov
test
lods
cmc
or
movsl
mov
xor
add
xchg
call
xchg
fisttpll
push
rcr
out
push
sub
pop
in
and
adc
and
push
pop
xchg
clc
ds
jecxz
cmp
fwait
in
ja
and
int3
cmp
or
in
into
ds
aad
les
aas
outsl
in
div
cmpsl
xchg
fs
inc
sbb
push
sbbb
and
imul
xchg
repnz
insb
es
ret
adc
shlb
pop
sti
or
fsub
lds
adc
sar
scas
ss
data16
pop
arpl
jns
fwait
push
adc
sahf
lret
icebp
mov
xor
jp
mov
push
rclb
scas
out
arpl
out
sbb
mov
mov
data16
and
cli
push
add
add
or
dec
jl
xchg
push
aam
in
mov
aas
pop
scas
and
lret
imul
cmp
push
add
roll
mov
gs
push
sbb
or
adcb
push
push
rcr
xor
aaa
mov
cmpsb
in
pop
mov
sbb
push
cmpsl
pop
icebp
and
nop
xchg
jo
pop
xor
xor
scas
add
push
cld
mov
pop
adc
js
cmp
in
add
jmp
add
pop
or
mov
repnz
out
and
inc
pop
cmpsb
ljmp
sarl
pop
sub
pop
leave
xchg
and
jnp
shrl
scas
fdivs
out
add
adc
and
cmpsl
jno
cmp
mov
adc
push
in
mov
xchg
loopne
push
xor
in
loope
lods
dec
mov
rol
ja
push
and
popa
adc
mov
mov
mov
mov
and
frstor
mov
mov
push
mov
cltd
outsl
mov
add
or
push
push
cmp
out
adc
cmc
popa
and
ja
daa
fidivl
arpl
repz
ficoml
orb
push
call
repz
mov
mov
add
dec
add
ss
add
add
data16
inc
aam
xchg
iret
aas
jbe
jg
into
sahf
pop
lret
in
pop
mov
les
jb
mov
inc
std
enter
and
mov
arpl
lods
push
es
cwtl
cmp
cs
inc
outsb
fdivrl
dec
pop
jge
out
xchg
es
lcall
icebp
sbb
cltd
mov
xor
jge
ds
scas
xchg
cs
lret
rcrl
aam
scas
hlt
fwait
jno
ja
mov
movsl
std
out
mov
jecxz
pop
gs
push
cmp
xlat
stos
test
lret
mov
cltd
lret
imul
pusha
add
icebp
or
loop
mov
cmp
lahf
fwait
pop
fwait
jp
xchg
jg
sahf
cmp
or
cmpsl
pop
cmp
lods
cmpsb
dec
dec
fs
arpl
mov
lds
mov
or
push
mov
aad
adc
in
push
stos
lds
and
addl
mov
mov
ljmp
jo
fcomps
sub
xor
mov
fwait
xchg
test
push
cmp
sbb
pop
lock
testl
lods
pop
iret
xchg
push
jg
or
int3
xlat
jp
xchg
mov
and
jl
dec
cwtl
xor
xlat
jl
ds
mov
xchg
testb
xor
andl
mov
cmp
and
cltd
lods
mov
push
mov
mov
arpl
in
iret
es
mov
push
fucom
xlat
fldenv
pop
cmpsb
push
fwait
cmp
cld
xchg
or
lock
out
adc
icebp
cmpsl
add
mov
sbb
push
scas
lock
mov
andb
xor
cwtl
jno
aad
scas
lock
subb
mov
outsl
stc
pop
push
sbb
lcall
js
xor
roll
ret
pop
push
xchg
xchg
enter
sbb
sbb
adc
inc
xchg
mov
fldcw
inc
and
ss
sbb
dec
jge
xchg
or
notl
les
scas
divl
out
mov
in
mov
ret
xor
bnd
pop
adc
lock
fwait
cmp
jmp
fs
dec
aas
cmp
inc
mov
inc
push
jb
pushf
fucomip
iret
mov
mov
lock
stos
jbe
cmp
push
sub
cmc
mov
loop
jo
xchg
push
out
mov
add
push
into
mov
mov
pop
stos
scas
mov
xchg
mov
pop
mov
mov
loopne
mov
xor
shlb
les
dec
insl
and
sub
rcll
pop
add
mov
imul
xor
addr16
js
pushf
aaa
xor
lret
mov
frstor
push
push
cmp
dec
jmp
sbb
lret
xchg
xchg
js
or
add
cld
xchg
cltd
mov
sbb
decl
cmpsb
xchg
push
mov
hlt
call
in
dec
sbb
sbb
lea
sub
subb
mov
out
xchg
gs
cmpsb
push
in
frstor
push
mov
or
out
add
jb
mov
daa
jne
mov
es
xor
jmp
out
cmp
js
mov
ss
mov
sti
cwtl
sbb
xlat
pop
mov
bound
loope
popf
mov
out
inc
cmp
xchg
aas
xchg
fwait
mov
sbb
push
mov
mov
insb
lret
push
loopne
jb
movsl
popf
stos
or
pop
mov
and
jnp
adc
pop
cmp
lret
pop
add
jae
cwtl
pop
inc
inc
inc
push
out
data16
aam
pop
fs
iret
jl
lods
push
rcll
add
cmc
inc
sbb
mov
mov
sbb
mov
cli
shrl
sub
mov
mov
movsl
pusha
push
push
in
pop
in
stos
jge
and
dec
hlt
stos
pop
xchg
ds
mov
mov
lock
sti
jae
aad
jl
and
or
pop
jbe
arpl
call
pushf
jnp
jge
mov
sub
sub
das
hlt
mov
xchg
adc
xor
shl
adc
xor
rclb
add
in
sbb
cmp
lcall
adc
ret
lds
test
xchg
insb
adc
cmp
push
jg
xor
repz
sbb
outsl
xlat
loope
add
jno
mov
push
dec
insl
and
jp
mov
out
popf
xchg
jbe
mov
or
or
ljmp
push
int
sbb
lahf
cmp
fdivl
call
dec
add
cmp
daa
std
pop
lea
sub
mov
data16
adcb
jo
out
mov
add
popf
pop
mov
sub
jecxz
imulb
xor
mov
xlat
cmp
mov
mov
movsl
inc
jecxz
pop
inc
cmpsl
push
lock
dec
mov
jno
inc
xchg
adc
dec
jns
in
mov
imul
xor
imul
push
pop
mov
push
xor
add
mov
and
dec
out
and
sub
out
popa
adc
sbb
jmp
je
sbb
scas
jg
lods
jns
fistpll
xchg
add
dec
push
push
shll
dec
mov
jmp
sub
lcall
dec
inc
push
aaa
xchg
xchg
or
pop
pop
mov
daa
sub
jb
cmpsb
push
les
cmc
fnsave
add
icebp
xor
sbb
jne
pop
mov
mov
outsb
mov
js
sbb
jo
mov
mov
lret
jmp
jge
xlat
sti
mull
imul
repz
aaa
repnz
scas
fdivl
push
ret
lret
xchg
xchg
sti
sub
icebp
fs
dec
test
jl
bound
in
jle
adc
sub
or
pop
sub
int
aaa
data16
nop
rclb
sub
clc
jno
sub
fisttpll
movsl
push
mov
repz
jnp
int
pop
add
jnp
add
and
inc
and
pop
in
mov
add
mov
pop
dec
es
mov
push
jne
daa
xor
inc
mov
cmp
out
inc
adc
es
pop
sub
icebp
or
test
jmp
std
and
jg
or
pop
xor
scas
pop
pushf
fdivrp
xchg
mov
jbe
or
loop
test
mov
inc
jno
int
ss
pop
gs
mov
or
ja
es
test
int3
aaa
fwait
xchg
dec
push
dec
or
test
sahf
cwtl
mov
je
int3
jbe
sub
add
jae
jbe
push
pop
add
in
cmp
es
jne
add
dec
ret
subb
inc
cltd
arpl
xor
das
push
inc
jp
cmp
ss
jno
test
aas
cmpsl
andl
iret
mov
pop
fsubrp
dec
jae
nop
sahf
xor
push
dec
push
out
cmp
out
push
mov
daa
push
jg
int3
xor
cmp
pop
movsl
sbb
aaa
outsl
dec
mov
push
inc
jbe
repnz
dec
push
xchg
lret
xchg
pop
bound
jg
jecxz
jmp
fdivl
or
mov
lcall
push
pop
fistpll
and
mov
dec
cmp
addb
and
mov
pop
rcl
lret
mov
xor
or
shrl
lods
inc
sbb
cs
add
loopne
aaa
jmp
and
loopne
or
push
leave
scas
push
mov
ret
mov
inc
jl
cld
mov
aad
inc
addr16
jecxz
pop
fiaddl
jle
cmc
inc
inc
data16
xchg
lahf
leave
les
inc
push
movb
inc
ljmp
mov
lea
push
mov
mov
stos
mov
sahf
shll
pushl
xchg
rolb
xchg
add
dec
rep
subl
pop
call
shll
ret
pop
jae
ljmp
sbb
add
stos
cmc
cmp
aas
jns
xor
jmp
aas
stos
dec
rolb
cli
sti
out
cmp
jmp
aad
sar
cmp
push
xchg
pop
xor
add
sbb
mov
pop
jle
sbb
push
popa
mov
cld
push
inc
mov
pop
fildll
daa
or
push
cs
jge
sbb
sub
mov
mov
negl
lahf
test
ret
inc
mov
in
adc
jl
hlt
xlat
xchg
push
aas
push
jb
lods
and
dec
inc
rolb
je
or
cmp
jge
pop
sub
jp
mov
push
out
mov
lret
push
lret
bound
mov
mov
adc
add
jmp
add
or
outsl
xchg
dec
loop
lret
stc
cmp
fstl
dec
imul
push
mov
and
mov
aaa
pop
sub
ds
ror
mov
out
movsb
and
fbld
xorl
sbb
adc
jge
sarb
out
sbb
add
fwait
loope
add
mov
sti
loopne
mov
cmp
jb
cmp
pop
push
sti
dec
mov
sbb
sbb
arpl
loopne
nop
fs
fdivr
lea
cmp
cmpsl
and
lahf
inc
mov
push
adc
sub
jl
ret
or
xchg
lret
ficoml
shr
add
jns
popf
xlat
inc
test
jp
das
popa
aad
mov
insl
jmp
ret
push
out
or
pushf
fbld
sbbb
xchg
cmp
jl
mov
sub
xorb
iret
movsb
mov
mov
test
arpl
xchg
test
push
insb
rclb
adc
push
fisttpl
cmc
push
jb
mov
jp
pop
out
leave
add
cwtl
push
mov
cmp
rorl
lcall
or
jbe
sub
insl
xchg
jo
popf
push
sub
mov
jb
cmp
das
mov
push
mov
mov
xadd
jno
pop
not
js
jmp
in
pop
lods
fldl
xor
adc
or
orb
push
in
push
mov
mov
je
xchg
sarl
popa
je
dec
mov
adcl
add
test
hlt
jae
test
push
add
cmc
sub
and
orl
mov
pop
das
pop
adc
inc
inc
cmpsl
xchg
insb
pop
leave
cmpsl
out
pop
jmp
movsl
outsl
ja
jno
movsl
jp
or
neg
es
test
addr16
lret
popa
xor
pop
orb
inc
mov
add
jl
imul
xchg
or
dec
sarl
fmull
mov
hlt
lret
sub
add
dec
popf
mov
test
out
outsl
hlt
push
ret
cmpsb
add
sti
data16
sahf
out
out
popf
xchg
xchg
lods
out
pop
ds
push
mov
repnz
pop
dec
xchg
shll
mov
insl
cmp
dec
lret
push
dec
cmp
mov
adc
pop
and
jae
xacquire
icebp
and
or
xchg
cmp
shlb
jo
cmp
push
mov
sbb
cwtl
aas
stos
sbb
leave
jae
sub
mov
ret
mov
mov
out
insb
js
mov
adc
pop
jnp
jge
push
add
mov
jno
aaa
add
enter
lods
adc
test
in
loop
aam
and
xor
cmp
repz
jnp
jbe
jne
dec
cmpsl
and
sarb
pop
orl
js
and
in
pop
loopne
std
mov
jne
xchg
adc
pop
lods
jne
sbb
addb
clc
les
jae
or
fadds
inc
pop
mov
std
push
adc
sbb
rcl
sub
pop
sbbl
mov
jmp
imul
jbe
int
mov
imul
xlat
cmp
jbe
out
ret
jp
nop
int
mov
sarb
jnp
pop
xchg
jne
inc
pop
stos
in
filds
jg
push
aas
inc
and
xorb
pop
mov
rorl
sarb
div
xor
pop
daa
cltd
sbbl
cmpsb
enter
sbb
add
cwtl
in
sub
cld
inc
iret
out
in
mov
insb
cld
movsl
repz
and
and
into
mov
cltd
cmp
es
sub
cs
mov
loop
icebp
scas
imul
subb
lahf
push
test
iret
adc
scas
dec
mov
fiaddl
and
lret
xchg
xchg
dec
dec
add
sub
xchg
or
call
cmp
les
pop
sub
mov
fisubl
mov
mov
and
and
movsb
sbb
push
sysenter
jmp
movsl
xchg
sarb
mov
push
xchg
ljmp
pop
es
adc
rcl
pop
mov
dec
in
lret
inc
les
xchg
dec
clc
mov
aas
fwait
add
xor
sbb
push
movsl
inc
faddp
rol
je
sbb
adc
stos
repz
mov
ret
xchg
mov
out
jno
nop
mov
mov
fsub
sbb
nop
cmp
call
xor
jecxz
mov
xor
add
pop
pusha
and
push
out
scas
dec
inc
dec
xlat
loopne
clc
dec
subb
cmpsb
sub
in
jle
mov
in
cmpl
in
jmp
sbb
test
add
mov
gs
shl
jae
cmp
pop
push
loope
dec
pcmpeqb
cmp
bound
or
cmp
dec
lret
jp
push
xchg
or
jmp
xchg
sub
push
dec
pop
sbb
cmpsl
or
stos
xchg
popa
xchg
or
nop
scas
mov
lcall
mov
scas
enter
xchg
xor
outsl
in
add
shrb
mov
cmp
sub
lcall
push
dec
add
outsb
int
cmpsl
ss
iret
sbb
jge
sbb
popf
fiaddl
xchg
fiadds
rcrl
sub
adc
pushf
inc
xor
bound
sbb
rcll
jmp
mov
mov
pop
fisubs
dec
jp
mov
hlt
bound
mov
or
pop
dec
clc
scas
xchg
cmc
popf
adc
and
lahf
pop
add
jae
cmc
pushl
cld
aas
xchg
xchg
movl
add
pop
inc
xchg
outsl
lret
sbb
or
sbb
inc
stc
sbb
loope
hlt
jle
add
insb
pop
hlt
insl
cld
jns
sub
das
into
jmp
imul
repnz
popa
mov
lea
pop
popf
or
outsb
pop
add
or
mov
icebp
in
loope
xchg
cmp
or
mov
pop
or
clc
lret
pop
jl
daa
lcall
pop
out
in
jmp
test
mov
add
xchg
push
rorb
or
dec
pop
out
sub
push
xchg
jg
dec
test
push
movsb
mov
inc
mov
out
stos
and
out
sti
fldl
mov
jmp
and
ljmp
mov
xor
adc
xchg
or
sbb
jmp
and
pop
sar
in
ljmp
mov
or
cli
das
cli
sti
adc
jne
nop
outsl
in
jne
pop
test
enter
cmpsl
subl
sbb
scas
mov
aam
jbe
pop
sub
icebp
or
popa
rorl
call
cmpb
add
popa
ljmp
jo
arpl
dec
loop
jge
rcrb
inc
mov
mov
lret
add
fxch
sub
aaa
lret
sbb
jl
xchg
icebp
jp
add
aad
jae
xchg
pop
push
in
add
mov
xor
adc
into
out
and
mov
inc
inc
gs
adc
xchg
sbb
popf
lods
mov
or
repnz
js
imul
popf
dec
mov
loope
insb
dec
lret
and
test
mov
and
sbbl
js
int
push
push
cmp
sub
pushf
push
fdivs
jge
movsb
pop
in
dec
sub
xor
imul
xchg
ficomps
sub
loope
and
push
push
xchg
movsb
push
and
jbe
fs
insb
mov
jbe
daa
imul
mov
js
mov
mov
dec
adc
push
cmp
mov
jo
jo
lods
xlat
rcrl
dec
jb
fildll
mov
mov
pop
push
cli
mov
mov
xchg
mov
ret
jmp
lea
call
mov
aaa
or
add
ljmp
ss
mov
sbb
data16
push
mov
jl
jl
and
dec
sub
dec
inc
mov
pusha
aad
pop
sti
repnz
cmp
icebp
dec
cltd
pop
jmp
enter
add
mov
jbe
xchg
hlt
jl
ja
ss
jae
fdivrs
pop
shl
or
out
and
adcl
xlat
push
daa
aad
and
xchg
and
bt
ds
xchg
jecxz
xchg
testl
stos
mov
mov
push
adc
mov
fucomp
leave
mov
fdivl
aaa
int3
stc
outsl
push
add
fnsave
sub
imul
notb
ja
cltd
add
scas
bound
adc
sub
mov
and
int3
mov
mov
addr16
and
fbstp
clc
loope
adc
push
jno
orb
mov
cmp
lds
inc
or
xor
cltd
push
outsl
pop
roll
lods
cmp
cmp
and
in
dec
fcompl
ret
test
insl
stos
loopne
addr16
outsb
inc
sbb
rcrl
push
cmpsb
pop
inc
pop
cmpsb
lret
fbld
ret
pcmpeqw
stos
push
push
inc
mov
fwait
push
pop
scas
push
add
loop
scas
xor
shl
push
lods
mov
sub
testl
mov
addb
movsl
push
adc
addb
and
dec
subl
andl
addr16
incl
jg
xor
sub
jbe
daa
mov
roll
add
xor
loopne
es
mov
imul
jge
xchg
pop
fldenv
xor
or
sub
inc
mov
inc
jne
add
aam
pop
pop
cwtl
mov
cmp
hlt
mov
or
leave
xor
jmp
insb
test
sahf
fdivl
add
push
push
dec
xchg
outsl
add
fistps
push
sti
xlat
test
orl
shl
fstl
adc
mov
out
sbb
in
sub
xlat
cmpsb
add
fstpl
inc
mov
ss
push
scas
pusha
push
fwait
pusha
mov
pop
mov
mov
lahf
push
dec
loope
movl
cld
pushf
test
je
ds
negl
pop
xor
cmp
inc
fstl
lea
adc
mov
add
xchg
dec
jp
pop
outsb
in
mov
fsubr
mov
rol
lret
int
cs
fstp
dec
push
into
mov
loop
sub
sbb
jge
pop
out
insb
ljmp
pop
jo
xchg
ja
movsl
repz
lret
mov
ficomps
and
mov
mov
les
pop
dec
adcl
movsb
cmp
shlb
fisttpll
int
lods
push
mov
mov
add
ret
fisttpl
int3
pop
aad
or
test
pusha
add
lock
push
sub
outsl
and
mov
xchg
lret
jae
imul
in
mov
sbb
jmp
cmp
pusha
mov
stos
stos
or
stos
test
es
ret
mov
je
js
fldcw
pop
xor
adc
jne
sub
out
in
pop
mov
aad
hlt
xchg
aaa
sahf
jmp
nop
sub
repz
add
mov
sahf
sbb
pop
sub
add
add
mov
add
inc
lock
inc
fisttpll
mulb
jp
and
out
xchg
scas
hlt
mov
subl
dec
xorb
add
enter
jecxz
test
nop
xchg
add
rorb
repz
imul
repnz
sbb
sbb
pop
lock
pop
cld
mov
cltd
jle
std
add
pop
sub
fucomi
xchg
dec
addr16
ficomps
movsl
xor
test
test
cmp
mov
adc
sub
loop
cli
sbb
pushf
mov
cmp
cmpsl
mov
push
sub
pop
fwait
test
add
add
mov
jbe
xchg
shl
add
divb
dec
in
sbb
popf
cmp
sbb
inc
test
insl
mov
or
pop
je
fidivl
xor
fsubl
hlt
fs
ljmp
mov
movsb
ret
push
je
or
cmp
in
xchg
fucomi
xor
test
sbb
and
lret
cmc
popa
loop
mov
cmp
add
cltd
xor
nop
pop
or
jbe
mov
fdivrl
mov
fisubrs
in
mov
sub
mov
mov
mov
call
pop
or
or
xor
or
test
mov
jmp
adc
cli
xchg
movsl
stos
test
mov
jp
sub
xchg
daa
mov
cmp
sarl
add
cmc
or
cmp
mov
lcall
add
fmuls
js
dec
add
cmc
or
mov
enter
icebp
repz
repz
mov
out
stc
lret
fidivrl
push
jnp
je
psubd
mov
fnstenv
lods
push
dec
add
in
imul
inc
dec
mov
mov
in
mov
ret
push
mov
xor
gs
cli
sub
push
push
adc
cmp
out
or
push
sbb
or
pop
test
mov
mov
lds
jmp
int3
or
sbb
push
mov
jle
xchg
pop
adc
out
gs
jg
repnz
stc
push
hlt
mov
and
mov
jecxz
fwait
outsb
lcall
push
sub
jns
or
and
ds
mov
mov
mov
add
push
bound
or
sbb
pop
xchg
aaa
inc
sub
add
stc
arpl
push
test
mov
push
mov
cmpl
or
ss
movsl
inc
loopne
div
popa
push
sbb
test
or
xor
nop
jmp
xchg
test
adc
jbe
lea
dec
iret
dec
add
cs
sbb
aam
pushaw
xchg
fidivs
xchg
jmp
or
shr
jp
sbb
mov
push
gs
xor
pop
rcr
cmp
popa
sub
pop
pop
add
test
mov
ja
jmp
dec
mov
push
cs
xor
sbb
mov
mov
jecxz
sbb
sbb
ror
pop
daa
test
push
xchg
sbb
add
fbstp
std
stos
or
dec
test
fucomip
andl
cmpsb
jecxz
test
jnp
inc
fisttpll
fsubs
xor
xchg
add
in
sbb
scas
push
xor
jnp
pusha
push
lods
mov
sbb
sbb
add
jns
sbb
xchg
outsl
mov
out
mov
cmp
out
outsb
sub
add
rorb
loop
rcll
pop
pop
daa
aas
fldcw
loop
nop
lods
call
cmp
out
outsl
and
sub
mov
mov
xor
lds
xor
and
insb
jmp
xchg
cmp
add
inc
imul
ja
dec
inc
and
push
push
fidivrs
aam
lods
xlat
stos
popa
jg
loope
xchg
test
adc
or
ljmp
pusha
lds
mov
push
inc
xor
sub
aad
rcrb
adc
mov
pop
mov
jne
cmpsl
fs
lret
cmp
fs
sub
popf
jae
bound
fwait
adc
js
ss
xchg
out
push
pop
into
lret
inc
pushf
inc
rcrl
pop
test
aad
inc
cmpsb
fdivs
shll
fld
mov
sub
inc
daa
imull
jmp
shrb
rcr
adc
pop
sub
cwtl
cmp
and
pop
loop
push
sbbl
adc
fwait
jle
gs
adc
pop
xchg
cmp
xor
cli
mov
or
scas
jmp
insl
mov
subb
xchg
les
je
or
popf
jnp
mov
cmpsb
push
sbb
jb
xchg
xchg
or
jecxz
pop
mov
repnz
aaa
jo
ret
pop
in
fists
scas
mov
xor
inc
rorl
jl
mov
inc
push
aas
xchg
popf
xchg
xchg
mov
adc
push
nop
and
out
repnz
cwtl
lock
and
hlt
into
sti
xlat
sub
mov
pop
pop
cmp
scas
jg
mov
std
pushf
movsb
jnp
cmpl
jnp
addb
sahf
sti
faddl
sarl
push
pop
mov
lret
int3
sbb
loop
cwtl
addb
test
loop
mov
adcl
hlt
arpl
cmp
ds
push
lret
adc
cwtl
fidivrs
mov
cmc
out
push
mov
push
pop
mov
adc
or
xchg
add
insb
ss
cmpsl
rcl
push
or
mov
lea
mov
or
dec
mov
mov
mov
sub
sbb
gs
push
add
mov
sub
testb
gs
mov
stos
aas
lcall
and
mov
mov
sbb
iret
and
and
js
lea
mov
cwtl
dec
ja
testl
popf
stos
out
sbb
pop
add
jbe
mov
jne
cmp
int
jnp
cmc
mov
lods
out
sbb
enter
cwtl
aas
mov
add
repz
adc
enter
popf
xor
out
and
sub
jae
cld
sbb
push
jb
bound
lds
inc
test
or
mov
arpl
aaa
push
cmp
fs
mov
sub
out
sub
push
pop
test
push
dec
xchg
push
insl
jg
int3
cmp
fdivrl
jb
cmpsb
mov
shr
mov
scas
outsb
lcall
bound
push
and
cwtl
testl
sarl
jne
push
xlat
push
mov
add
gs
ja
inc
cmpsl
jne
sbbb
xor
clc
int
repnz
jle
jl
inc
lahf
rcrb
icebp
sbb
imul
sub
push
dec
lock
xchg
mov
test
pop
outsb
sbb
push
inc
subb
cmp
pop
sub
push
sbb
mov
mov
cmp
xor
mov
and
or
pop
push
stc
mov
dec
data16
test
inc
insb
mov
or
sub
jl
pusha
mov
jp
mov
das
fdivrs
jo
fs
mov
iret
jmp
cmc
sbb
jge
mov
stc
inc
dec
mov
push
cmp
roll
sahf
ds
cmpsb
jae
rcll
add
andb
lret
ja
mov
push
scas
mov
loopne
popf
and
and
ret
mov
push
negl
sbb
fneni(8087
jb
lods
jg
xchg
divl
sub
out
insb
fwait
bound
inc
js
lods
mov
stc
inc
xor
or
fwait
sub
test
adc
jge
jle
and
dec
xor
lahf
cltd
dec
sahf
sar
cld
add
js
loope
sbb
into
aas
inc
push
cmp
out
and
sub
or
sub
lret
mov
bound
pop
sahf
stos
js
mov
jge
mov
inc
push
in
adc
fbstp
and
das
insl
stos
pop
mov
rorb
lahf
mov
fstps
mov
jmp
cmp
leave
movsb
mov
add
outsl
cmp
gs
dec
cmp
insb
sti
xlat
iret
out
ret
inc
push
es
pushf
mov
lahf
int
test
xor
inc
xor
nop
mov
inc
xchg
stos
push
jnp
jae
jno
cmc
pop
jecxz
cli
add
daa
ss
lock
popl
das
insl
inc
fwait
lcall
jb
push
jb
iret
pop
add
dec
sbb
ljmp
dec
inc
hlt
xchg
mov
and
sar
mov
and
shrb
pop
sbb
inc
ljmp
andb
rcr
shl
mov
loop
fimull
and
and
pop
fprem1
adc
fiadds
push
push
fiadds
loope
mov
and
sbb
insl
push
lcall
xor
and
adc
mov
testb
mov
mov
cmp
add
hlt
repz
in
mov
jecxz
loopne
pop
mov
addr16
mov
cmp
or
or
cmpsl
loop
dec
stos
rclb
sbb
mov
ljmp
loopne
xchg
jne
xchg
add
outsb
jnp
sahf
mov
xor
dec
jle
push
decb
mov
push
in
iret
in
and
mov
sub
inc
shlb
ret
push
cltd
scas
lcall
lcall
or
imul
lahf
jecxz
inc
and
add
and
stc
aas
test
sub
sbbb
comiss
adc
scas
xor
int
push
lret
xchg
ficompl
mov
fiaddl
and
sub
mov
negl
lret
mov
inc
inc
hlt
ss
push
push
rorl
mov
pop
jnp
dec
popf
lock
mov
scas
xchg
lds
xchg
xor
cmp
mov
mov
pop
movsl
ficompl
jns
xchg
mov
mov
sbb
xor
pop
repnz
and
lahf
xchg
nop
pop
mov
xor
push
jae
sbb
adc
lret
mov
mov
pop
mov
adc
sbb
jle
int
push
int3
aas
mov
test
sub
push
je
sub
hlt
mov
clc
mov
repnz
adc
in
and
jmp
iret
sahf
inc
in
cmpl
push
jge
mov
push
je
ficomps
push
ret
dec
icebp
movsb
pop
sbb
inc
cmc
in
pop
mov
add
das
fnstcw
ljmp
shll
pop
scas
add
lahf
mov
lods
push
popf
stos
mov
pop
shlb
test
adc
ja
out
or
nop
cmpl
sbb
push
sub
add
xchg
xor
sub
pop
in
lret
aaa
test
loope
mov
fnstenv
jp
outsl
pushf
mov
and
push
mov
shrb
mov
cld
mov
pusha
cli
cmc
pusha
push
outsb
aad
out
xor
add
pop
push
xchg
sti
push
outsl
repnz
into
std
xor
sub
das
lret
xor
mov
testl
jle
xor
dec
shrl
aas
call
aam
cmc
or
ljmp
imul
jmp
cs
mov
inc
inc
lret
vpand
xor
pop
leave
inc
sub
hlt
lds
mov
andb
xchg
sbb
push
adc
insl
mov
mov
push
hlt
push
div
sub
iret
aas
push
movsb
ja
out
sarl
jle
mov
stc
xchg
test
mov
in
xor
rclb
mov
jnp
xchg
fcoml
fstpt
sbb
fwait
sbb
test
shl
mov
pop
cmpsb
dec
jecxz
mov
cli
cmc
push
mov
sbb
jg
scas
add
fs
or
rolb
inc
popl
ss
sbb
je
cld
mov
cmp
mov
lock
add
sbb
jecxz
and
jge
out
inc
cmpsl
bound
ljmp
mov
sbb
cmp
jo
mov
rolb
bound
lret
cmpsb
in
addl
fistpll
iret
adcl
loop
fisubrs
lahf
adcb
ds
test
pop
dec
inc
xlat
push
cmpsl
cli
adc
ret
outsl
arpl
xchg
and
cli
sarl
inc
push
mov
lods
ja
mov
inc
inc
inc
add
fildll
sbb
ja
mov
xchg
xor
pop
mov
dec
ja
dec
pop
mov
sbb
nop
push
push
loop
test
and
nop
loopne
xchg
xor
mov
ficoms
aam
loope
dec
lcall
lahf
dec
mov
scas
pop
mov
ret
movsl
sub
or
cmp
dec
cwtl
adc
leave
pusha
jl
or
cltd
orb
cmp
xchg
out
shl
fstps
push
push
ss
sbb
mov
xchg
xchg
clc
lret
pop
jle
loope
pusha
xor
hlt
lcall
xor
adc
and
jle
mov
pop
hlt
sub
mov
xor
arpl
jno
ds
in
lret
fsqrt
add
pop
mov
divl
pop
pop
jp,pt
popl
fstps
loope
shlb
dec
nop
sbb
xorb
push
sbb
xor
das
les
movsb
popa
push
shll
mov
sbbl
sti
jl
xor
cld
jno
pop
mov
inc
mull
in
in
mov
cmp
sbb
sub
sbb
sbb
mov
test
clc
outsb
xchg
jmp
jle
sub
sub
clc
lret
dec
int3
scas
popa
sti
cmp
push
mov
jmp
or
push
adc
mov
arpl
cwtl
xor
xchg
dec
dec
cmp
adc
out
fistpl
icebp
lret
and
add
and
push
inc
movsb
xchg
jl
pop
fstps
outsl
xlat
je
jge
mov
cmp
and
mov
adc
popf
pop
insb
loop
loope
pop
iret
add
mov
xor
outsb
pop
aam
xchg
push
pop
ljmp
ljmp
push
dec
add
push
pop
movl
mov
rcrb
add
or
jmp
dec
sbb
imul
test
in
test
xchg
in
add
and
mov
out
cmp
sbb
cmp
mov
push
dec
and
lds
ss
movsl
pop
xor
rcrl
test
jb
lahf
rcrl
in
mov
lock
aam
mov
inc
or
xchg
sub
arpl
add
fadds
fwait
imulb
lock
xor
inc
xchg
push
fstps
xchg
mov
push
addr16
cmp
fwait
pusha
icebp
push
into
inc
jb
sbb
sbb
push
pop
push
rorl
xchg
repz
int3
out
icebp
sub
and
inc
push
add
or
push
loop
aas
aad
fcoms
or
push
ss
stos
push
add
or
inc
jne
add
jg
fdivs
sbb
pop
sub
sub
aas
cli
sub
add
xchg
inc
fdivl
rcrl
sbb
rorb
orb
gs
into
pop
mov
or
inc
pusha
sub
cmp
in
sub
sti
lea
mov
mov
ss
mov
and
sysenter
and
adc
or
mov
pop
test
call
fistps
adc
xchg
icebp
cmp
out
loope
stos
data16
rcl
cmc
jmp
test
lea
and
cmpsb
lret
or
add
popf
aas
sar
jb
outsb
data16
cmpsb
std
decb
mov
imul
incb
mov
loop
out
nop
sti
and
ret
cs
cwtl
adcb
sti
out
fcoms
sbb
push
dec
sarl
dec
xchg
daa
mov
xor
movb
cwtl
faddl
stos
xchg
pop
lds
sbb
sub
iret
lods
rclb
cmp
divl
mov
cli
pushf
daa
pop
adc
lret
dec
nop
test
cli
sub
dec
lds
shrb
cwtl
scas
test
pushf
lds
test
xchg
fcoms
notl
mov
jmp
sub
enter
xchg
xchg
mov
mov
pop
lock
lds
test
mov
jmp
push
pop
nop
sub
add
xor
and
pop
jns,pn
mov
jl
mov
aas
addr16
aad
mov
or
scas
repz
push
and
xchg
xchg
mov
popa
pop
mov
xchg
incl
xchg
repz
cltd
mov
mov
dec
mov
cmp
pushf
mov
push
enter
dec
jmp
pop
xor
popf
test
adc
testl
mov
xchg
mov
sbb
ja
inc
sub
and
mov
mov
mov
cmpsb
push
fmuls
dec
jb
lret
leave
ret
mov
sar
mov
imul
or
mov
addr16
xor
sub
scas
stc
jne
jmp
cmp
testb
sarb
dec
ja
test
ret
stc
mov
std
dec
pop
out
or
push
push
mov
sbb
rolb
xchg
lret
sahf
shlb
mov
je
adc
negb
movsb
inc
xchg
mov
jae
jne
je
mov
shrb
imul
add
mov
inc
sbb
test
hlt
shrl
sar
jg
adc
jle
je
jo
fcomps
je
or
int
fsts
push
inc
adc
sbb
add
mov
pushf
sub
mov
mov
mov
jns
into
cmp
outsl
icebp
add
lods
and
repnz
dec
aas
jae
jmp
test
xor
adc
push
mov
inc
sti
push
fidivl
jle
cs
pop
inc
cwtl
out
loope
mov
add
inc
pop
cs
jbe
push
or
xor
ds
hlt
or
arpl
pop
shlb
and
add
sbb
and
cltd
stc
inc
lret
loope
add
dec
pop
or
das
mov
mov
aas
lea
xor
pop
xor
or
xchg
xor
leave
cwtl
mov
xor
out
jle
loope
scas
stos
sbb
aaa
nop
outsb
out
std
addr16
test
or
popa
out
jo
push
scas
ljmp
fmull
jecxz
pop
mov
mov
loopne
inc
inc
mov
jb
sbb
in
cli
jge
pushw
rcrl
sub
push
ficomps
fwait
nop
or
jp
lods
or
xor
cmpsb
jecxz
ljmp
pop
popf
test
hlt
dec
mov
add
jae
cltd
pushl
mov
testl
orl
push
ret
or
scas
and
hlt
sbb
sahf
mov
scas
jge
andl
dec
cld
fwait
pop
aaa
sbb
out
hlt
out
cld
pushl
xchg
push
cmp
mov
inc
cmpsl
mov
test
fwait
cltd
sub
xor
push
cltd
pushl
or
icebp
dec
jmp
mov
xchg
inc
js
test
loope
mov
xchg
fwait
cwtl
movsb
and
sub
in
sarl
test
mov
sbb
shrl
mov
hlt
jno
sub
push
and
test
loop
movsb
inc
call
add
jns
push
mov
fbld
sub
shlb
mov
ret
and
sub
jle
aas
es
and
cli
pcmpgtb
mulb
repz
or
mov
inc
push
sahf
scas
add
jecxz
jae
out
sub
adc
test
push
shrb
lret
bound
enter
sbb
mov
cmpsb
sbb
andb
sahf
les
and
int3
cltd
gs
lock
out
push
fbld
mov
xor
xchg
rcrb
add
and
jo
rcrl
and
ja
jbe
fmulp
mov
lock
and
or
insb
xlat
push
cmp
inc
push
inc
xchg
push
lea
fcomi
jle
add
push
mov
into
xchg
lahf
std
stos
sbb
mov
test
lods
sbb
sbb
pop
mov
out
adc
sahf
icebp
push
mov
add
add
adc
test
or
inc
or
mov
flds
adc
xchg
and
mov
push
clc
adc
cmpsb
pop
mov
hlt
clc
jae
int
lods
pushf
adc
xorb
add
icebp
lahf
test
lock
femms
and
and
into
repz
mov
mov
leave
pop
cs
jmp
jbe
dec
lds
negb
jns
out
inc
mov
popa
adc
pop
jns
xor
into
mov
sbb
jb
jno
out
movsb
jl
mov
loopne
xchg
fchs
andl
stos
clc
xor
dec
lea
pushf
mov
stc
mov
pop
les
pop
aas
and
mov
lea
sbb
out
push
stos
shrl
jg
out
mov
dec
cli
push
dec
leave
lock
xchg
ret
or
scas
pop
enter
enter
or
jae
cmpl
or
mov
xchg
les
add
lea
sahf
push
add
lds
mov
aas
jmp
push
push
mov
add
outsb
cwtl
push
xor
out
sarl
push
pop
and
in
jne
jne
push
xlat
iret
xor
pop
je
into
ret
sbb
mov
push
mov
jbe
adcl
cmpsb
outsb
inc
outsl
fcomps
mov
fmuls
cmp
xlat
in
sbb
and
cmp
inc
push
push
stos
into
push
push
out
into
loop
xchg
insl
add
push
xchg
subl
movsl
mov
cltd
scas
rcrl
repz
leave
pushf
ja
arpl
fadd
pop
pusha
mov
sbb
and
push
jle
jbe
push
mov
add
stos
mul
movsl
out
adc
sbb
bswap
lea
jl
inc
mov
push
rolb
or
call
sbb
lahf
dec
ret
mov
add
pop
jecxz
push
mov
inc
xchg
and
pop
pop
out
sub
pop
add
add
outsl
jbe
aam
std
push
or
jl
mov
push
mov
mov
les
shlb
popa
rcll
or
sbb
lods
push
sub
mov
ljmp
nop
js
xor
es
pushf
push
jmp
jg
rep
in
out
mov
mov
mov
sahf
or
pusha
xchg
dec
pushf
outsb
mov
sub
imul
mov
push
popf
xor
push
mov
add
movsb
mov
xchg
arpl
incl
adc
pop
test
mov
fiaddl
xchg
xchg
shlb
outsb
xlat
xchg
add
xor
lcall
mov
cmp
adc
xchg
xchg
push
gs
inc
push
mov
test
and
aas
mov
stos
mov
xor
arpl
add
xchg
mov
cmc
test
pop
mov
cmc
rcll
fnsave
loop
fcoms
hlt
lret
push
xor
mov
inc
jae
inc
lcall
mov
icebp
test
pop
xor
mov
mov
add
push
popa
inc
int3
pop
mov
mov
xchg
fidivrs
jns
loopne
xchg
dec
pop
loop
sbb
mov
int3
cwtl
divl
xlat
mov
xchg
mov
scas
sub
mov
xchg
int
dec
jl
mov
out
or
pop
lret
scas
fwait
aad
xchg
js
loopne
shr
inc
in
mov
mov
mov
jbe
repz
jbe
cmp
call
in
inc
insl
cltd
push
repz
leave
xchg
cs
sbb
scas
cmp
sub
inc
inc
test
leave
dec
fs
adc
inc
and
je
lret
nop
jbe
sub
xchg
ret
lds
push
mov
mov
rclb
push
das
pushf
dec
mov
pop
fidivl
outsl
sbb
push
xor
pop
cltd
stos
mov
icebp
jl
xchg
dec
adc
push
mov
ja
add
dec
insl
push
out
xchg
clc
jle
mov
outsb
js
dec
mov
enter
popa
cmp
adcb
add
popf
pop
push
dec
xchg
jbe
imul
dec
stos
adc
loop
and
enter
cmpsb
sub
mov
add
int
pop
sbb
add
scas
xlat
sarb
mov
sub
xor
jl
rolb
imul
sbb
test
pop
stos
lea
mov
lret
fstl
cmpsl
or
pop
icebp
fcmovb
dec
ljmp
or
inc
idivb
mov
mov
push
iret
push
clc
sbb
mov
xchg
adc
pushf
inc
repnz
push
fsubl
mov
dec
repz
mov
shll
dec
lahf
push
push
inc
sbb
xchg
jb
fs
inc
je
ret
stos
pop
andb
sbbl
adc
jg
mov
jmp
xchg
adc
hlt
je
mov
insb
add
pop
sahf
idiv
cmp
sahf
ja
sub
xchg
add
iret
jae
shrl
jg
outsl
out
jbe
jae
adc
idivl
pop
cmp
sbb
adc
push
inc
int
mov
add
icebp
leave
pop
pop
stos
cwtl
push
stos
xchg
movsb
cmp
pushf
int3
in
and
sahf
sbbl
mov
lea
scas
movsl
scas
lods
imull
aam
mov
xchg
inc
fistpl
inc
cmp
mov
movsl
inc
jp
inc
ret
xlat
fstl
mov
jecxz
movsl
xor
repz
test
xor
lret
fstpl
dec
push
fs
mov
out
test
and
push
pop
repnz
into
dec
mov
testb
lret
cli
stos
out
mov
pop
sti
xor
int
mov
int
popa
cmp
cmpl
sbb
push
inc
pop
jae
jbe
xor
xchg
push
push
mov
mov
andb
pusha
js
clc
sbb
cs
mov
add
mov
jmp
es
out
enter
push
jmp
jp
js
jmp
or
sbb
fmuls
sub
xor
js,pt
inc
loopne
lods
pop
shr
lret
enter
scas
mov
inc
outsl
or
jo
dec
jmp
mov
mov
call
aam
or
jae
xor
call
insl
dec
notl
pop
fdivp
shlb
sbb
jmp
mov
dec
push
aaa
notl
mov
loop
cli
ds
pop
or
cmp
adc
push
pop
movsl
imul
fsubrs
xchg
sub
mov
pop
adc
cs
jnp
cli
subl
adc
jno
add
mov
xchg
fwait
or
mov
xor
jb
popl
sbb
ficoms
addl
mov
movsb
pop
mov
add
insb
sbb
mov
mov
cltd
sub
push
ja
inc
pop
jo
inc
neg
inc
pop
jge
sub
jae
stos
and
pop
sbb
mov
js
mov
data16
mov
outsb
test
and
xor
mov
sbb
add
push
jb
mov
or
mov
addr16
or
inc
and
dec
ss
push
push
push
jle
xchg
mov
rclb
imul
push
push
in
sbbb
adc
cli
xchg
daa
jae
jo,pt
adc
stos
push
fs
mov
pop
inc
testb
sub
jmp
dec
hlt
jne
dec
fstpl
lcall
sbb
lds
sti
cmp
js
cltd
add
clc
pop
js
cli
lods
adc
out
xchg
mov
repnz
or
mov
arpl
adc
andl
pop
inc
ljmp
pop
mov
xchg
data16
repz
push
leave
mov
notl
push
cmpsb
mov
out
xchg
add
mov
fsubr
imul
subl
bound
les
imul
cmp
pop
adc
adcb
bound
in
push
dec
mov
daa
pop
outsl
dec
addr16
lret
xchg
add
cmp
andb
icebp
push
push
mov
pop
mov
push
in
call
pop
lret
mov
jecxz
cmp
mov
out
jmp
add
pusha
push
mov
adc
loop
inc
cld
add
push
adc
ds
sbb
sbb
sbb
cmp
dec
xor
jge
ss
int
mov
sahf
fcmovbe
push
add
das
lcall
pop
xchg
add
cli
or
lods
xchg
jo
push
pop
out
into
mov
or
lods
mov
sti
push
daa
aas
inc
scas
and
scas
jae
xor
sub
enter
loope
ret
fnstenv
scas
dec
xchg
sub
xor
lock
sahf
mov
aas
pop
jns
jl
push
jno
je
imull
xor
mov
fs
out
into
xor
js
xchg
lcall
or
shll
call
das
xchg
adc
cs
insl
push
mov
loopne
test
push
and
shll
cmc
in
enter
push
popa
or
xor
mov
push
aas
out
mov
or
jecxz
push
lea
das
sbb
add
mov
jae
int
inc
cmpsb
jecxz
popl
cmp
or
ja
pop
jl
inc
cwtl
xchg
test
bound
fcmovne
aas
loopne
mov
mov
sbb
ds
les
push
add
cmp
gs
out
add
xchg
test
and
inc
cli
dec
insb
dec
xchg
add
faddl
mov
daa
mov
mov
loop
sbb
arpl
and
sub
imul
sbb
or
push
mov
test
xchg
mov
mov
jle
stos
iret
les
xor
insl
sub
loop
in
inc
cltd
add
jle
cmp
out
testb
xchg
aaa
and
rcll
icebp
lea
xlat
fistpll
push
in
xchg
mov
and
dec
dec
sbb
and
loop
movsb
repz
popf
mov
xchg
test
pop
cs
pop
rorb
and
sahf
xchg
xor
ja
movsb
pop
loope
inc
mov
ds
aaa
mov
movsb
test
mov
sbb
test
mov
test
pop
mov
xlat
jns
jp
pop
jnp
rorl
add
test
or
jo
or
inc
popa
or
mov
pop
jo
mov
jle
lret
icebp
jbe
add
mov
pop
sti
mov
ffreep
xchg
pusha
mov
push
push
cld
dec
daa
cmp
mov
mov
jmp
daa
pop
xchg
pop
cld
adc
fbstp
popf
jmp
aam
mov
mov
test
cld
inc
out
std
dec
jg
xchg
aas
nop
aam
mov
rcl
xor
mov
xchg
fstpl
stos
scas
xor
and
jo
push
xor
pushf
inc
movsl
push
lahf
test
out
mov
stos
inc
sub
lods
mov
and
dec
aad
arpl
fucomip
xor
jge
pusha
nop
aam
shlb
insb
in
pop
nop
xor
or
sahf
xchg
push
stos
mov
cltd
push
adc
dec
jae
mov
leave
inc
jb
pop
pusha
sbb
mov
cli
dec
std
insl
mov
sbb
fildl
cmp
mov
out
fs
push
das
pop
out
or
scas
test
push
add
clc
jmp
or
pop
lods
insl
fs
mov
fs
dec
inc
fmuls
aad
cmp
fiadds
pop
dec
arpl
repz
dec
jl
or
jmp
mov
cmp
out
jne
cmpsl
mov
xor
mov
xchg
mov
pop
out
fstps
adc
push
mov
and
je
test
mov
xchg
bound
into
push
xchg
add
in
lock
dec
add
clc
cmp
vandnps
pop
mov
push
shlb
loop
divl
inc
addr16
ret
lds
lret
push
ret
cmp
lds
mov
or
iret
xchg
inc
orb
ds
jl
push
jb
xor
lcall
pop
ss
les
std
push
cmpsl
fs
fsubr
mov
andb
or
dec
or
frstor
div
xor
or
xor
out
ds
sbb
xchg
and
imul
and
mov
push
push
xchg
push
lahf
xchg
mov
das
sarl
jnp
in
cmp
call
es
push
jg
add
call
xor
sub
push
mov
das
icebp
fistpll
testl
jno
sub
scas
mov
add
adc
data16
addr16
xor
in
mov
sbb
out
cmpb
cmpsl
loopne
lret
mov
adc
mov
out
push
xor
add
test
pop
jp
out
xor
add
bound
sbb
sub
jns
sub
xor
mov
dec
inc
pop
sbb
lods
cmp
test
in
mov
in
fcmove
fidivrl
adc
rorl
mov
and
or
sub
inc
enter
pop
inc
xchg
decl
andb
stc
xor
mov
clc
pop
push
sub
sub
jp
mov
mov
out
push
xchg
mov
dec
clc
int
add
inc
popf
dec
roll
repz
out
pusha
cmpsl
popa
or
or
cltd
outsb
xchg
push
jg
testb
dec
imul
lock
aam
arpl
sbb
lock
cmpsl
jle
inc
lds
xor
ja
xchg
bound
in
mov
movsl
ficompl
rcl
es
nop
pop
ror
sbb
cmp
aas
aas
cmp
pop
fistps
cwtl
imul
pop
xlat
mov
outsl
cmc
enter
dec
lret
lret
shlb
fdivrs
mov
dec
jo
push
xchg
ljmp
push
adc
cli
ficoms
in
outsb
mov
xchg
mov
mov
aaa
xchg
and
leave
inc
and
cmp
add
hlt
dec
mov
gs
cmp
adc
test
shr
testl
loope
aad
dec
dec
fistpl
pushf
mov
repz
out
int
mov
add
and
sahf
mov
jmp
aaa
ret
jbe
das
ror
mov
push
xchg
inc
push
pminub
xchg
ljmp
cmp
mov
ja
mov
push
repnz
dec
aaa
and
adc
adc
pop
icebp
pop
add
fbstp
lock
mov
and
pop
fucomp
in
test
js
in
or
aam
into
adc
lret
add
scas
lahf
pop
neg
insl
fstps
xchg
outsl
and
pop
push
clc
or
ficomps
int3
leave
pop
divl
pop
clc
nop
inc
dec
lcall
les
add
or
xchg
aaa
dec
cltd
adc
arpl
scas
ficoml
and
push
std
negb
inc
or
or
jno
addr16
test
jge
fnstsw
sarl
insb
sti
into
fldenv
lret
mov
cmp
les
cwtl
and
dec
push
cltd
jmp
out
adc
in
jmp
imul
mov
cltd
sti
dec
jmp
movsl
lods
and
mov
mov
jno
imulb
lock
movsb
stos
mov
jnp
les
jnp
xchg
pop
lods
pop
pop
aam
add
mov
xchg
cmp
push
pushf
jno
adc
xor
dec
ss
ret
lds
or
iret
lds
jns
or
sahf
andl
movsb
and
lock
aam
mov
pop
mov
dec
xchg
imul
mov
or
dec
cmc
inc
inc
stos
lds
test
cmpsb
enter
mov
xchg
jmp
xchg
mov
test
cmp
add
lret
bound
or
fwait
push
xchg
sbb
pushf
scas
push
imul
xchg
cld
add
add
cmp
loopne
sbb
jg
pop
cmp
cmp
dec
fildl
push
rcrl
xor
cld
or
mov
and
lods
sub
pop
fdivr
mov
xchg
mov
pop
xor
das
cmp
mov
add
xor
test
mov
add
fcomp
jecxz
cmc
sub
lock
sbb
fwait
sbb
dec
fisubs
enter
hlt
pop
xor
adcl
out
jle
pop
in
imul
fsubl
jmp
stos
adc
jno
fldt
fisubrs
stc
or
xchg
iret
adc
fdivrl
orb
mov
cmp
or
jne
pop
cld
inc
adc
mov
cwtl
sbb
push
stos
and
push
xchg
stc
jmp
adc
dec
aam
and
jg
jbe
mov
into
push
fidivrl
fcompl
push
xor
into
push
les
or
or
mov
test
cmp
icebp
jo
sahf
js
add
out
and
cli
insb
jo
test
adc
adc
or
mov
sahf
rcr
pusha
orl
xchg
cmpsb
xor
ss
pusha
outsl
xor
add
and
scas
shrb
andl
nop
jnp
mov
mov
xor
cs
dec
test
jno
inc
stc
mov
mov
stos
cld
fmull
cmp
roll
sbb
test
or
lods
xor
jmp
adc
adc
or
push
scas
pop
sbb
sbb
sbb
int3
sbb
sbb
mov
in
and
adc
shll
and
stc
in
xor
jno
mov
ss
mov
dec
in
sub
fmul
aas
push
sbb
lss
and
fucomp
push
inc
jmp
xchg
aas
xor
sub
pop
ret
cmp
push
mov
mov
push
imul
std
rcrb
push
test
pop
jnp
jg
shlb
inc
add
push
iret
cli
add
pop
pushf
mov
xor
inc
in
and
stc
xchg
outsb
sti
pop
fldl
sub
mov
int
and
lret
inc
pop
outsl
pop
subb
stc
and
popf
xor
dec
cmp
pop
xor
cmp
int3
les
xchg
inc
add
fwait
mov
outsl
aad
mov
js
je
fadds
and
dec
mov
jnp
mov
je
mov
in
cld
pop
mov
cmp
pop
push
lret
dec
xchg
add
jle,pn
in
inc
lret
shll
je
das
push
push
jnp
js
outsb
adc
lea
push
push
adcl
inc
cmp
imul
xor
sarb
fs
inc
dec
xor
sub
cld
cmp
cmp
arpl
sub
cmc
sbb
xchg
leave
repz
out
xor
test
mov
out
ret
sub
push
push
mov
lods
sbb
repz
mov
mov
sahf
and
outsb
mov
ljmp
xlat
imul
insl
pop
lcall
mov
sahf
push
mov
or
mov
dec
icebp
aaa
lahf
loop
jo
xor
shrl
jo
push
push
insl
jns
lret
sahf
jo
sub
in
jmp
and
imul
inc
std
pop
pop
rclb
outsl
pop
inc
movsb
popf
out
sbb
add
shl
jb
dec
push
add
jo
call
cltd
mov
not
cmpsl
js
popa
pinsrw
decl
addb
int3
or
mov
int3
sub
dec
add
jmp
in
push
lcall
xor
mov
arpl
pop
cltd
add
rcrl
pop
jns
insb
jmp
mov
lcall
mov
xor
adc
mov
hlt
je
mov
jle
test
mov
xor
out
push
rclb
inc
dec
cmp
mov
leave
lds
push
iret
mov
inc
iret
sbb
sbb
ret
add
repnz
mov
or
dec
fs
dec
ds
aaa
or
sti
repz
subl
push
outsb
inc
push
mov
mov
into
aad
rcll
sub
into
xor
mov
ficompl
ror
call
jmp
enter
iret
add
jns
clc
jbe
inc
loop
outsb
arpl
pop
add
cmp
cmp
popa
popa
adc
mov
stos
sub
lret
incb
dec
aas
sarb
and
cmp
mov
xor
cmp
or
dec
nop
push
test
pmaxsw
cmpl
dec
fisubs
es
cmp
push
jle
mov
push
es
out
mov
icebp
adc
js
inc
dec
adc
pop
ror
jle
jb
add
inc
lcall
and
mov
adc
inc
push
ja
int3
cs
jns
mov
pop
stc
sahf
pop
add
movsb
pop
shlb
jmp
loope
out
mov
cmp
pop
stos
xchg
in
and
sub
mov
scas
ja
pop
sub
call
add
xor
xchg
add
call
mov
lcall
push
mov
and
push
andb
mov
not
pop
xchg
lds
fyl2x
mov
jp
jns
jne
dec
icebp
nop
sahf
repz
or
fnstcw
push
shl
xchg
ss
call
pop
sti
xchg
adc
xor
jecxz
out
repnz
fiadds
mov
adc
mov
sub
mov
or
jne
das
mov
dec
add
jae
push
add
iret
xchg
xchg
inc
xchg
sub
xchg
test
and
cli
inc
adc
mov
scas
mov
xchg
lock
lock
or
jl
jno
negl
lds
and
insb
outsl
stos
jno
lods
push
cmpsb
mov
in
cmp
jmp
rorl
dec
lock
aas
xchg
stc
cmpsl
popf
sbb
into
sbb
bound
dec
or
xor
dec
mov
lock
adc
xchg
sbb
in
xchg
and
mov
mov
sub
pop
cwtl
ss
xchg
int
sub
add
ret
lds
lahf
jl
shlb
or
inc
and
fildll
mov
cmpsb
mov
gs
icebp
enter
add
inc
sub
cmp
and
jl
cmc
push
mov
leave
pushf
dec
in
push
stc
loope
jl
sahf
popa
shlb
fwait
jne
imul
pushf
int
ret
fcoml
mov
xor
loope
mov
daa
adc
jnp
inc
ret
mov
inc
rcr
subl
fistpl
jb
lods
arpl
xor
adc
push
jg
in
mov
adc
mov
notb
ret
pop
cmp
sbb
mov
push
jo
mov
cli
pop
lock
aas
lcall
les
adc
dec
inc
sbb
loop
movb
jmp
int
insb
aas
push
lds
mov
dec
inc
sti
or
lcall
inc
cmp
andl
loop
sub
out
test
fs
js
jge
repz
mov
xchg
in
add
sbb
xor
adc
inc
out
and
sub
xor
dec
lea
push
add
out
mov
lds
ss
jnp
iret
sbb
sbb
pop
mov
stc
inc
fnstsw
ja
cli
int3
cwtl
pop
cltd
sbb
inc
or
xchg
enter
or
fwait
lods
or
mov
lret
or
lret
xor
and
mulb
imul
cmp
insl
add
xchg
inc
in
arpl
mov
adc
test
push
arpl
imulb
push
xor
popf
add
xor
loop
repnz
inc
in
ss
subb
mov
pop
xor
les
imulb
add
adc
xchg
or
jmp
aaa
stc
sti
add
fsubrs
jns
lods
mov
sbbb
cmpsl
adc
lcall
cmp
repnz
xor
mov
and
rclb
test
addb
add
pop
push
jmp
push
in
repz
leave
sbb
lahf
ljmp
in
xchg
push
in
lds
sub
pop
mov
inc
cwtl
in
mov
add
dec
or
jno
jl
push
adc
and
iret
jp
xor
cmp
cmpsb
inc
adc
insb
inc
int3
lret
cmpb
mov
outsl
arpl
scas
adc
icebp
and
pop
mov
and
test
push
call
and
mov
adc
lods
mov
push
jnp
inc
push
dec
fiadds
or
mov
and
or
cmpl
divl
inc
bound
or
into
ret
mov
or
pop
push
add
dec
mov
sbb
outsl
rep
pop
add
aad
sub
add
jo
loopne
lret
out
mov
rcl
xchg
adc
mov
jge
rdtsc
push
pop
add
ret
pop
mov
rorl
xor
cmp
jle
adc
out
adc
jbe
mov
mov
xor
scas
lds
mov
outsb
nop
outsb
test
sahf
or
jno
aaa
jnp
lret
lret
wrmsr
dec
lods
arpl
xchg
clc
sar
cwtl
mov
fisubl
mov
std
call
xchg
sub
xchg
cs
push
mov
add
and
daa
mov
xor
jge
roll
lods
cs
ljmp
xchg
icebp
test
aaa
es
int3
daa
clc
dec
ficomps
sub
ja
arpl
rcll
jne
mov
in
fisubrs
lds
es
lods
gs
xor
push
jmp
mov
rclb
scas
das
cmc
mov
add
movsb
aas
shl
mov
add
xchg
ds
popf
push
lods
movsb
imul
pop
xchg
xchg
loopne
push
in
add
push
mov
cmp
sbb
js
dec
rorl
adc
and
imul
push
sub
mov
dec
rcr
xor
mov
mov
std
mov
imul
stos
sarl
cmc
xor
test
sub
add
in
out
test
and
shlb
call
xor
pop
adc
mov
aam
in
and
movsb
jecxz
in
push
lcall
push
mov
and
cli
sarl
add
sub
mov
movsl
and
jno
push
hlt
jb
sbb
jecxz
pushf
and
mov
lcall
loope
fbld
shl
mov
pop
xor
cmp
mov
sbb
mov
dec
loope
movsl
inc
and
lods
mov
aad
movb
sbb
cli
sub
loopne
ja
xor
dec
mov
add
mov
xor
xchg
iret
cmp
mov
and
cwtl
stc
cld
lods
aad
mov
sahf
sti
ds
fxam
pop
imul
xchg
sub
aam
dec
cmp
loope
loope
sbb
sti
aam
sub
cmp
sbb
into
cltd
and
sbb
cmp
sbb
or
inc
leave
frstor
cmp
jecxz
mov
fisttpl
pop
inc
insl
jae
push
call
inc
ljmp
cmp
or
jg
in
cmc
push
add
cmpl
into
pop
adc
push
inc
jb
das
xorb
add
cltd
inc
aad
pop
clc
push
jb
pop
pop
rcrl
cmpsb
lea
sub
outsl
jne
hlt
cmp
mov
imul
outsb
pop
xchg
or
xchg
fcmove
inc
imul
out
mov
jmp
sbb
and
in
insb
jecxz
ja
enter
pop
jno
fisubrs
push
dec
or
nop
jae
add
sti
pop
sub
cmp
out
imul
dec
add
pop
inc
shl
pop
aad
or
cmp
cmp
add
push
into
lret
jae
mov
cmp
imull
je
push
popa
xor
cld
iret
test
es
into
in
sub
fadds
orb
push
sti
jp
cmp
dec
out
clc
xchg
lcall
aaa
xchg
cmp
pusha
inc
inc
xchg
mov
inc
fistl
mov
sub
aam
lock
sub
or
pop
sbb
jae
jno
mov
or
inc
and
pop
icebp
jae
and
scas
pop
xchg
std
fwait
stos
mov
add
or
add
xor
mov
movsb
add
int3
xchg
inc
mov
rcrl
mov
mov
inc
mov
stos
popf
pop
mov
push
and
popf
fldl
js
stc
push
aad
leave
bound
push
xor
pop
mov
sbb
xchg
aaa
das
mov
daa
sub
mov
pop
lret
bound
data16
test
and
lahf
adc
sbb
lret
mov
cld
adc
cli
and
push
xor
and
ja
insl
push
xchg
out
aam
or
xchg
mov
sbb
jno
inc
push
pop
jae
pop
subl
cli
cmpsb
jo
mov
in
mov
dec
xor
xor
pop
lds
ss
clc
ja
movsb
add
es
inc
enter
sbb
ds
sti
cmp
andl
pop
das
pop
add
mov
push
pop
out
xchg
adc
cmp
gs
and
fwait
out
pop
andb
lret
das
or
addr16
mov
lock
mov
lods
loopne
shlb
jle
scas
adc
into
push
mov
or
fs
stc
xor
mov
mov
daa
dec
mov
div
gs
call
add
pop
nop
mov
in
ljmp
shlb
divl
dec
je
mov
std
mov
rorb
jno
push
lods
dec
cmp
add
movsl
mov
imul
dec
fstps
pop
cmc
jg
hlt
cmc
inc
dec
lods
sti
ret
fcomp
mov
dec
rolb
sbb
mov
mov
popf
dec
mov
push
popf
call
gs
stos
outsb
or
xor
pushf
and
fldt
mov
or
out
cs
dec
mov
fdivrs
repnz
es
fwait
out
std
sbb
adc
pop
out
into
cmp
ret
rcl
shrl
pusha
sbb
loop
scas
gs
sub
jns
loop
ljmp
popf
sub
repnz
dec
dec
gs
push
sub
mov
jbe
sub
stc
or
cmp
mov
fcomps
and
leave
add
mov
mov
or
dec
add
clc
insb
jne
mov
cli
pop
push
sbb
loopne
cmpsl
loope
xchg
jb
xchg
adc
dec
mov
lret
movsl
gs
jo
cmp
test
outsb
sbb
pop
data16
sub
cmp
add
fstp
sub
xchg
mov
jo
testl
fwait
js
sbb
lods
shl
inc
cmp
mov
clc
lock
mov
add
push
mov
loope
insb
ljmp
mov
cmp
test
push
lods
push
or
scas
jae
cmp
mov
push
js
test
jle
sbb
pop
call
and
or
inc
mov
inc
jb
lcall
jle
pop
aaa
push
cmpsl
orb
jnp
cmp
ret
pop
jns
cmc
xor
loopne
in
loope
sbb
inc
pop
pop
mov
test
divb
jecxz
add
pop
push
sub
jmp
mov
sarb
aas
ret
dec
add
mov
sahf
int3
mov
test
jae
cmp
pop
repz
xchg
roll
outsl
add
jno
lock
or
inc
les
loopne
mov
pop
ror
mov
xchg
out
cmc
push
mov
je
sti
or
cmp
mov
xor
dec
cmc
mov
loopne
dec
cmp
loopne
mov
pop
nop
dec
xchg
fiadds
lret
sub
stos
nop
loopne
sub
imul
mov
sub
popf
push
sub
hlt
push
dec
aaa
ja
movsl
pushf
fistpl
rorl
sub
adc
xchg
jl
sahf
xchg
out
jne
xchg
jns
inc
mov
rol
xchg
ret
mov
dec
pop
cli
es
movsl
dec
or
arpl
mov
jns
dec
mov
mov
mov
push
jmp
negl
lds
adc
jge
add
xchg
mov
out
mov
pop
jne
test
fimuls
push
test
cmc
in
in
fisubrs
fcoml
inc
cs
and
ret
bswap
adc
fs
jb
les
jnp
loopew
ss
sub
cmp
out
xor
xor
xor
cmp
nop
pop
mov
cmpb
mov
add
out
mov
add
dec
shl
pop
jge
lahf
fs
mov
jmp
pop
xchg
cli
mov
loop
or
jmp
xchg
aad
and
or
mov
sub
push
jbe
movsl
aaa
movsb
cli
inc
shrl
adc
inc
js
push
jae
mov
clc
xor
push
out
insl
into
dec
jo
std
movsb
loopne
inc
or
dec
add
stos
cmp
and
mov
xchg
mov
test
out
jne
in
fwait
push
jnp
dec
mov
in
pop
incl
add
xor
pop
call
shl
cmc
das
pop
sahf
mov
sbb
mov
ja
pushf
mov
pop
pusha
aad
xchg
mov
cmpps
inc
nop
jb
xchg
cmp
inc
mov
sub
inc
xchg
lret
dec
add
cltd
jp
jl
inc
sti
or
and
popa
dec
mov
aaa
cmpsb
test
jae
inc
gs
jne
add
int
ja
test
in
cmp
imul
rcll
inc
adc
and
stos
scas
mov
jb
into
sbb
lods
mov
lods
or
cmp
idiv
dec
pusha
mov
pop
xchg
fstl
dec
lret
cmp
in
add
mov
sbb
and
jmp
sbb
cltd
adcl
shlb
nop
xchg
addl
repz
cmp
fldenv
jns
movsl
popa
aam
or
rcr
sti
or
inc
mov
or
fscale
test
hlt
xchg
sbb
dec
movsl
dec
sub
xchg
ljmp
repz
shlb
jnp
lret
cmpsb
stos
lcall
dec
clc
popf
xor
leave
add
repz
movb
mov
jmp
cmc
dec
jnp
sbb
xchg
sub
adc
fldenv
cmp
push
add
xchg
xchg
addr16
push
and
push
movsb
outsb
adcl
popf
jg
imul
sub
pusha
cmc
xorb
lret
sub
and
arpl
cmp
mov
or
cmp
pop
xchg
jnp
xchg
fimull
ret
mov
xchg
or
cld
or
cmp
jg
fiadds
add
add
mov
lret
lds
stos
jb
sti
cmp
dec
cld
jle
ret
jns
lret
cs
cmp
orb
jl
cmp
or
ljmp
push
test
cwtl
cmp
adc
and
and
push
loope
mov
xlat
icebp
jp
clc
fnstsw
xchg
cmpb
inc
pop
xadd
pop
mov
jmp
push
les
mov
xor
cmp
sub
mov
enter
popf
sbb
lds
mov
or
movsb
or
fsubrs
rol
addl
fiadds
daa
mov
in
dec
jle
lret
xchg
sub
pop
stos
fst
popf
pop
xchg
inc
pushf
pop
xor
push
pop
aaa
xchg
shl
sub
jmp
loopne
xchg
icebp
icebp
mov
push
outsb
or
and
les
iret
sbb
push
or
mov
mov
push
cmp
lcall
xchg
iret
adc
out
lcall
loope
daa
scas
adc
subb
popf
ja
add
jecxz
fdivrl
cmp
hlt
rolb
jb
lahf
xor
push
mov
mov
mov
jns
fcmovnu
cmc
clc
repnz
mov
xchg
divl
pop
mov
mov
pop
data16
ret
cmp
xchg
bound
lods
call
or
fldt
mov
sbb
fcmovnbe
xchg
push
jb
xor
cmpsb
movsl
and
and
push
pop
out
cmpsb
clc
fsubrs
test
mov
xor
in
xchg
js
test
mov
enter
adc
lret
test
pop
adc
push
adc
mov
xchg
pushf
push
mov
and
cmp
pushf
xchg
in
bound
cmp
adc
and
xchg
mov
cmp
jnp
lods
dec
jmp
imul
mov
dec
dec
add
mov
cmp
inc
ja
clc
xchg
xchg
mov
gs
add
dec
xor
sti
shr
cmp
cli
mov
add
adc
jle
dec
jecxz
movsl
mov
sub
testl
jno
divb
pop
leave
js
daa
push
inc
rcl
pop
test
cmp
lods
xchg
jg
inc
push
clc
mov
xor
lret
push
test
stos
pop
or
ret
popa
cmc
lret
mov
mov
xor
add
xlat
insb
dec
add
inc
fwait
icebp
mov
out
sbb
push
mov
sbbl
pop
dec
loopne
fsubs
in
sbb
jg
mov
lcall
jno
xor
pop
iret
sub
icebp
arpl
shlb
or
sub
ds
inc
aam
arpl
jg
mov
insl
adc
sbb
mov
inc
imulb
xchg
jl
lcall
xchg
mov
cltd
dec
in
daa
or
mov
filds
jecxz
sub
and
std
je
popa
decl
jns
das
xor
sahf
fcmovnbe
lods
pop
cmp
jl
mov
in
xchg
dec
test
testb
pop
lea
fimull
int3
add
push
adc
outsl
xor
push
add
sbb
lods
jecxz
jb
mov
sub
mov
das
fisubrs
push
inc
popf
push
pop
push
xor
ds
push
inc
shlb
mov
js
xchg
cwtl
mov
hlt
mov
in
lret
dec
or
fildl
mov
dec
cmpsb
adc
hlt
test
call
mov
test
add
dec
pushf
pop
aad
ja
adc
sbb
fildl
ds
pusha
or
adc
xor
outsb
mov
mov
aad
test
jns
xchg
mov
pop
int3
arpl
loop
xor
cmpb
jne
sub
pop
cli
jg
pop
mov
lcall
mov
add
loope
push
jbe
rclb
lahf
sarl
jnp
cmp
add
push
ljmp
jmp
mov
pop
imull
pop
cld
je
xor
outsl
push
add
int
insb
cltd
push
outsl
mov
sub
mov
sub
inc
or
inc
aas
subl
xchg
loop
cmp
jecxz
cmc
lret
sbb
lods
mov
pop
jae
in
outsb
outsb
push
icebp
popf
add
xchg
nop
lahf
fs
cmp
push
ljmp
adc
mov
rcr
daa
xchg
mov
lret
int3
pushf
imul
or
imul
xchg
xchg
test
xor
mov
lret
test
or
js
loop
pop
insl
and
cmp
pop
roll
test
sub
mov
ds
xor
insl
outsl
pop
dec
out
loope
adc
sub
sub
das
lret
xchg
push
dec
leave
lahf
sbb
ret
stos
in
in
dec
repnz
push
lock
pop
pop
std
or
jl
call
adc
pop
mov
dec
clc
incl
je
jo
cmp
bound
loopne
movsb
fisubrs
jnp
testb
arpl
gs
stos
cmc
pusha
adc
rcll
xor
in
enter
call
add
xchg
sarb
jge
imul
orl
push
shll
test
adc
scas
stos
jbe
pop
inc
sbb
or
ret
adc
popf
pop
jecxz
adc
rcll
pop
push
js
out
fidivrs
mov
incb
xchg
stos
rol
add
sub
je
sub
ljmp
fimull
inc
sbb
pop
inc
aam
mov
pop
mov
inc
sub
mov
ja
jl
out
movsl
inc
push
popa
pop
iret
xor
repnz
jnp
mov
in
int
jno
jecxz
mov
addr16
lock
div
outsl
sub
mov
cmp
fistpl
cwtl
dec
xchg
outsb
adc
xor
ss
sub
mov
sub
ret
mov
dec
push
mov
cwtl
sub
movsl
add
stos
into
sbb
dec
mov
sub
mov
ja
push
ljmp
cli
and
in
or
xchg
sbbb
or
and
adc
pusha
lret
dec
jb
pop
push
xor
xor
xchg
in
or
cs
and
not
jmp
repz
and
scas
xorb
popf
fs
mov
mov
jge
jle
xlat
rcrl
lds
popf
cmpl
add
je
adc
les
mov
jp
and
cmp
rcll
sahf
pop
xor
ljmp
arpl
jne
jg
xor
lods
mov
aad
dec
jge
adc
in
iret
pop
call
dec
inc
and
dec
push
pop
lock
sarb
fwait
sub
mov
jo
pop
cmp
sti
cmp
jns
rol
xchg
sub
sti
inc
insl
dec
popa
xor
mov
ss
movsb
mov
aam
cmp
in
roll
sub
stos
push
je
mov
int3
scas
sub
ret
and
cmp
popf
xchg
pop
push
stos
xchg
inc
mov
scas
stos
dec
cmpsl
jne
inc
lock
jg
pop
cmp
shll
push
and
mov
xchg
mov
popa
dec
rcrl
and
hlt
fcomps
loop
cmp
jge
mov
xor
dec
stc
sub
in
test
pop
fisubs
ss
lahf
sbb
inc
add
int3
pop
fcmovb
mull
in
or
int
xrelease
aam
js
cltd
sbb
pop
in
mov
mov
cmp
pop
in
or
cmpsb
rcll
outsl
jae
ret
scas
mov
negl
mov
jl
mov
ljmp
lret
xchg
clc
in
pop
adc
push
mov
cmp
lods
inc
cmp
popa
cs
inc
or
lea
inc
push
subb
and
ror
mov
divl
push
xchg
and
push
xor
xchg
cmp
push
cmp
add
ret
inc
mull
das
sbb
push
sub
cmp
scas
int
pushf
dec
pusha
lds
cmp
cmp
pop
insl
xor
cmp
in
mov
push
sahf
insb
les
cmc
and
xor
dec
repz
rorb
cmpl
inc
cmp
iret
jle
adc
iret
daa
shrl
loope
pop
sbb
out
mov
sub
cmpsb
jnp
jnp
lahf
mov
bound
cwtl
jns
adc
aas
jecxz
xor
cli
clc
sbb
sub
add
xor
imul
cmp
jns
pop
call
addr16
in
sub
mov
mov
push
aas
sub
adc
fs
push
insl
test
xor
mov
or
fcmovne
xchg
addr16
repz
adc
lcall
jo
ljmp
rorb
call
scas
sbb
inc
jmp
sub
mov
outsb
jb
icebp
out
adc
xor
dec
dec
mov
inc
nop
imul
lds
pop
iret
repnz
lea
push
cmp
pop
xchg
dec
cmp
push
jle
inc
sbb
imul
data16
xor
dec
pop
insl
pop
cli
jne
cmp
sub
addr16
decl
rcrb
mov
sub
pop
lds
dec
inc
les
imul
mull
lcall
adc
mov
into
xchg
mov
xor
fisttpl
stos
pop
movsl
enter
arpl
sbb
lret
pop
pop
sbb
adc
jle
jns
fnstcw
daa
cmp
xchg
push
mov
in
jae
lock
out
jmp
movsl
cltd
lret
or
jbe
das
cltd
and
and
cmp
out
cmp
cld
imul
int
imul
shlb
pop
data16
mov
fisubl
jo
stos
fsubs
add
js
in
cmp
sbb
imul
into
push
push
add
pop
gs
fistpll
mov
inc
cwtl
jge
stos
push
call
lods
shlb
ljmp
sub
adc
lds
dec
push
push
icebp
rorl
push
frstpm(287
call
push
es
cmp
and
mov
mov
xchg
cmc
in
jp
cmp
ret
cli
mov
pop
inc
call
mov
xlat
or
push
loopne
inc
and
or
mov
cwtl
and
jbe
sahf
jp
inc
movsl
test
cmpsb
loopne
jne
xchg
jnp
xchg
in
push
mov
dec
xchg
adc
mov
mov
mov
jl
jne
push
lods
vunpckhps
sbb
jge
jb
inc
insl
and
jmp
mov
push
movb
pop
test
pop
imul
ja
out
mul
sahf
sbb
repnz
mov
out
sub
int
adc
xchg
lods
xchg
sub
jns
push
mov
cmp
dec
pop
icebp
fiaddl
lock
mov
pop
fs
inc
aaa
popa
das
mov
and
fnsave
fstpl
mov
or
jbe
and
lret
xor
xchg
outsb
aas
xchg
xor
andb
or
mov
jmp
pop
fs
iret
xchg
adc
jo
aad
cmpsb
inc
mov
shlb
out
inc
mov
inc
xchg
stos
icebp
int3
cld
and
out
rorb
fsts
dec
dec
mov
pop
sub
mov
sbb
lods
out
push
fwait
push
inc
inc
sub
out
cmp
je
inc
adc
rcrl
xlat
sub
push
aam
jl
orl
push
pop
gs
mov
push
xchg
andb
xor
dec
fnclex
mov
jnp
test
jmp
mov
pop
in
lods
fldl
clc
lret
in
and
pop
push
jae
out
and
xchg
inc
mov
jg
mov
shlb
sbb
push
aad
mov
mov
das
sbb
in
sbb
mov
test
sti
cmp
ret
mov
ljmp
sbb
mov
les
sub
cmpsl
mov
pop
jp
push
jo
jns
pop
sbb
sub
sub
xor
dec
mov
lcall
adc
xchg
mov
bound
aaa
out
sbb
test
inc
pop
pop
fmul
push
insb
repnz
and
shlb
sub
movsl
mov
je
test
cld
cmpsb
out
sbb
or
repz
js
sub
outsl
int
hlt
and
inc
scas
imul
pop
and
pop
pop
dec
test
int3
cmpl
cwtl
std
jns
mov
xlat
pushf
outsb
mov
push
add
xchg
mov
cmc
jl
jne
add
ret
jns
ficoms
in
dec
loope
or
lcall
jae
xor
xchg
lock
add
inc
js
rcrb
mov
cmp
dec
rorb
movsb
in
jp
lea
xchg
sub
aad
fisubrs
movsl
inc
call
mov
mov
test
adc
mov
lret
imul
mov
fs
xlat
adc
fsubrl
sbb
mov
fsubrl
lds
in
jb
bound
aaa
shrb
xor
push
shr
push
ficompl
dec
shll
mov
insb
jmp
loopne
into
xchg
pop
les
sbb
daa
add
out
push
or
adc
mov
arpl
outsl
push
lahf
sub
mov
xlat
xlat
xor
pop
pop
shlb
clc
mov
adc
and
push
cmpsl
mov
into
sti
ja
mov
sti
call
lea
fwait
sahf
in
mov
xchg
cli
cli
xor
bound
sbb
mov
dec
in
pop
sub
xor
and
movsl
es
out
push
cmc
lock
nop
add
add
inc
adc
fs
movsb
sbb
nop
jl
scas
fiaddl
dec
add
icebp
fbld
roll
adc
icebp
cli
js
fiadds
mov
shr
stos
idivb
push
das
pop
mov
dec
pop
pop
mov
mov
jno
mov
xorl
scas
ficompl
loopne
mov
adc
cmpb
sbb
cmp
xor
fcompl
das
fwait
xor
mov
inc
jmp
aam
outsb
jo
movsl
xlat
dec
insl
loope
pop
daa
ljmp
adc
icebp
fistpll
sbbl
jecxz
jne
mov
std
inc
das
inc
lods
pop
pop
sahf
mov
cmpsb
subl
fwait
jmp
adc
sahf
sub
sbb
adc
cmp
sub
adc
mul
aaa
fwait
or
xor
mov
xchg
sbb
sbb
test
ret
xchg
jns
fldcw
lods
inc
inc
sbb
sbb
roll
mov
xor
nop
mov
mov
stos
sbb
jb
adc
stc
outsl
fisubrs
xor
inc
les
lea
into
test
or
push
cmp
cmp
jl
lret
insb
dec
mov
adc
xor
jmp
loopne
out
add
lcall
pushf
popa
out
xchg
divb
inc
lds
jb
jno
add
test
das
stos
sub
inc
pop
jno
add
icebp
roll
xchg
cmpsb
fdivr
push
cmp
in
sub
jl
lcall
xchg
test
lods
movl
or
jmp
pop
icebp
and
loope
imul
jo
push
add
xor
insl
pop
mov
xor
insl
pop
adc
xor
and
stos
dec
test
nop
enter
mov
loop
lock
sub
in
enter
imul
fwait
scas
dec
add
mov
movsl
test
loop
inc
out
add
pushf
mov
add
push
ja
bound
mov
jo,pt
repnz
push
repz
sub
mov
adc
andb
mov
mov
icebp
push
or
jno
movsl
xlat
dec
out
mov
xor
mov
lods
fldt
jmp
lock
xchg
mov
sti
test
jl
pop
sbbl
mov
cmp
inc
push
or
push
loop
add
xchg
jle
arpl
sbb
pushf
setb
lcall
addr16
sbbl
pop
mov
mov
aas
mov
push
inc
dec
sub
mov
aas
cmpb
sbb
in
push
jae
ja
adc
pop
inc
sbb
add
movsl
push
and
xor
ret
dec
push
xchg
rorb
cmp
ret
xlat
imul
add
sub
push
cmp
or
lret
jecxz
es
or
into
mov
mov
stos
gs
dec
mov
js
lock
das
dec
roll
test
fstpl
pushf
jmp
or
or
repz
jl
int
orl
sbb
push
dec
std
cmp
jmp
xor
int
pop
ljmp
xor
and
mov
mov
mov
and
enter
add
inc
pop
xlat
in
out
lods
insl
pop
idivl
in
dec
in
sbb
and
pop
mov
cwtl
mov
ss
out
inc
sub
inc
sbb
shlb
sub
sub
push
adc
leave
test
leave
dec
ficompl
push
sub
lea
cli
icebp
repnz
shl
xchg
fldenv
xchg
and
and
xor
xor
cmp
ret
movsl
xchg
inc
push
fdiv
popa
pop
je
adc
loope
add
aaa
adc
jae
jns
pop
mov
enter
xor
cmp
sar
push
int3
data16
inc
mov
sbb
sbb
inc
aaa
jb
fucomi
lods
mov
cmp
andb
xchg
sti
or
jle
xor
push
out
loop
rol
gs
loopne
cmp
mov
in
or
mov
mov
or
xor
jle
sete
ljmp
idivl
push
orb
push
jbe
in
cmpsb
int3
fnsave
pop
xor
cmp
xchg
int3
jo
movaps
repz
and
stos
push
in
pop
cmp
add
add
or
xchg
push
jle
insb
inc
adc
imul
dec
adc
andb
pop
adc
repnz
ljmp
mov
inc
std
jne
call
push
push
cmpsb
outsl
xchg
sti
add
cmpsb
mov
cmp
xchg
bnd
and
mull
fisubs
dec
xor
push
loopne
sti
jnp
ret
jo
call
js
xor
adc
xor
xchg
jne
cmp
sbb
andb
test
jp
mov
inc
movsl
or
add
insb
or
outsb
stc
std
iret
fildl
mov
testb
imul
jne
push
mov
push
add
push
lds
jbe
mov
icebp
xor
cmpsb
stos
jno
ret
xor
cltd
popa
jb
std
sbb
sahf
loopne
enter
les
les
fcoml
push
mov
dec
in
jmp
mov
xor
roll
pop
jg
insb
int
aaa
jecxz
adcb
iret
jmp
je
cmpsb
add
std
cli
push
xor
adcl
add
xchg
dec
xor
ffree
testl
mov
mov
lahf
jo
mov
jle
sbb
adc
popf
fs
stos
aas
xchg
int3
cmp
pusha
push
mov
push
jge
stc
outsb
xchg
int
adc
inc
inc
cltd
in
or
and
ja
cltd
xchg
cmp
lds
fs
xchg
mov
enter
je,pt
adc
fcompp
mov
mov
pop
mov
jbe
xchg
adc
add
sbb
mov
insb
xchg
shlb
mov
inc
xchg
loop
mov
in
fadds
add
inc
icebp
or
push
outsb
dec
mov
inc
dec
call
jmp
arpl
mov
push
loopne
push
pop
sub
xlat
idivl
pop
jp
test
mov
pop
push
xchg
pop
mov
ljmp
sub
imul
out
fdivl
int
xlat
jl
popa
inc
loop
pop
inc
cmp
loope
outsb
mov
jne
jmp
or
adc
cmp
fdivs
mov
inc
dec
clc
ja
dec
out
pop
xchg
cs
cwtl
mov
or
dec
gs
inc
dec
xchg
and
clc
inc
je
inc
fcmovbe
out
xchg
mov
dec
das
mov
cs
push
or
xchg
push
insl
jge
insl
jno
stos
inc
pop
lret
cmp
pop
js
push
mov
cs
out
and
push
mov
and
jecxz
jl
clc
jmp
jp
shrl
adc
gs
jmp
inc
mov
xchg
mov
orl
or
hlt
stos
xchg
mov
sub
push
add
mov
or
dec
sub
ja
xor
pop
jbe
rorl
daa
add
dec
pop
pop
lea
cmp
xadd
sub
shll
push
xor
jecxz
into
enter
in
movsl
and
xchg
insl
imul
dec
inc
insb
add
ljmp
dec
inc
push
lahf
jb
or
mov
and
aad
sbb
jbe
aas
insb
cmp
adc
ret
roll
sub
xor
cmp
ret
scas
hlt
add
into
and
imul
or
lcall
jno
in
sbb
dec
inc
test
mov
pop
and
pop
mov
ffreep
mov
xor
ss
mov
pop
xchg
xor
fbld
negb
sbb
xor
jl
push
sahf
lret
das
mov
adc
xor
aam
inc
sub
lea
out
mov
sub
call
push
fldenv
js
data16
stos
hlt
dec
jp
push
xor
dec
pop
rclb
mov
or
jmp
int
push
sbb
cmpsl
push
nop
sub
inc
xor
int3
ljmp
push
sbb
xor
jae
lret
aas
lods
cs
add
addr16
xchg
or
xor
lods
aad
add
icebp
dec
mov
sbb
adc
bound
mov
xchg
mov
xorb
jg
loop
outsl
sbb
jns
int
mov
lcall
add
ja
pusha
or
ss
sbb
xlat
scas
pop
sub
lods
push
mov
fisubrs
arpl
pop
cmp
pop
int3
sub
mov
movsb
pop
add
or
mov
out
daa
aad
test
aad
dec
cmc
jl
mov
pushf
ficomps
scas
fsubrs
and
fs
icebp
cli
arpl
lret
jno
mov
push
subb
ss
adc
inc
pop
sbb
or
jbe
inc
push
jbe
sbb
sbb
add
ds
stos
mov
cs
popa
push
aad
nop
test
pop
cwtl
pop
sub
mov
or
leave
push
repnz
push
out
jecxz
push
loope
dec
mov
mov
ljmp
xchg
jl
leave
add
jbe
shl
aaa
lea
stos
loop
lcall
int
sbbl
lret
xor
mov
xchg
pop
xor
pop
mov
and
jne
pop
hlt
mov
pop
sbb
pushf
out
popf
pop
jnp
imul
and
add
sbb
inc
or
mov
daa
les
ljmp
mov
ds
pop
nop
jo
inc
cltd
sti
add
fcmovnbe
aad
cmp
in
adc
aas
pop
icebp
loop
xchg
pushf
in
stos
fmuls
cli
mov
test
mov
loope
cmp
push
imul
fcoms
in
sub
movsl
cli
popf
jp
shr
lcall
shll
test
cmpsl
in
sar
cmc
cmp
lret
jg
jnp
data16
xchg
lock
adc
inc
adc
loop
les
xchg
cmc
jmp
sbb
dec
jmp
pusha
xchg
xchg
lods
aaa
je
leave
add
jno
outsl
sub
rcrl
mov
inc
mov
mov
mov
sub
popa
pop
xchg
adc
cld
jnp
cmc
jle
out
decb
lods
mov
int
das
jl
or
daa
lahf
cmc
adc
outsl
imul
into
pushf
mov
testl
insl
push
shlb
pop
xor
scas
mov
sbb
decl
in
xor
cmp
push
cmp
pop
iret
mov
sbb
lock
pop
xlat
fucom
fldenv
xor
stos
and
insl
inc
sbb
subl
sbb
mov
gs
and
push
dec
dec
pusha
mov
jno
subl
push
xor
orb
lea
flds
mov
xor
lods
fdivr
inc
cltd
inc
and
aaa
sub
xchg
lret
mov
inc
mov
cmp
mov
jecxz
mov
pusha
sub
mov
cli
mov
js
or
movsl
lods
mov
or
sub
jae
jge
out
loope
scas
jb
int
insb
push
mov
clc
mov
bnd
and
jecxz
adc
mov
cli
push
inc
jle
pop
in
and
es
loop
dec
inc
lahf
or
data16
jns
insl
jo
sbb
xlat
sbb
add
lahf
jecxz
cli
sub
inc
pushf
sbb
and
dec
dec
sub
sbb
lea
cs
aas
xor
mov
adc
push
in
cwtl
push
repz
lret
pop
xchg
les
inc
les
inc
hlt
lods
mov
vmovlps
stos
jp
stos
dec
nop
cmp
push
mov
jp
sbb
sbb
lods
ljmp
int3
xor
adc
mov
js
xchg
sti
lea
fdivs
pop
push
mov
arpl
and
es
mov
mov
xchg
pop
or
cmc
xchg
rcrl
lret
in
nop
add
jl
xchg
in
mov
hlt
ret
mov
sbb
dec
iret
test
fcoms
or
dec
xchg
pop
leave
xor
mov
sarl
imul
cltd
xlat
dec
mov
add
or
push
dec
or
inc
jo
pop
fs
stos
push
or
addr16
dec
xlat
lcall
push
dec
dec
fistpl
push
in
cmp
xchg
loope
xchg
aad
cmp
repz
fistpl
outsl
push
fs
dec
cmpsl
aas
xchg
sbb
jecxz
scas
das
pop
in
mov
mov
mov
sbb
icebp
mov
call
and
xchg
xchg
mov
xlat
nop
outsl
mov
xchg
cmc
or
inc
xchg
lds
inc
in
mov
add
push
outsl
arpl
adc
push
in
es
movsb
pop
ss
xchg
dec
inc
adc
jp
cmp
jl
pop
dec
mov
in
aam
imul
stos
sbb
mov
ret
cwtl
outsb
xlat
dec
mov
cmp
je
sbb
pop
cmpsl
cmp
xchg
repz
lret
lcall
bnd
divb
mov
sub
sbb
and
add
inc
andl
pop
cmpsb
outsb
dec
sbb
aad
pop
rclb
sbb
fistpl
cltd
cmp
cmp
pop
sbb
sub
iret
add
pop
mov
nop
les
daa
push
lret
enter
addl
push
fdivr
adc
and
jno
cmp
out
scas
cli
dec
lds
mov
es
xchg
mov
ret
jo
cmpsl
inc
into
mov
dec
or
js
adc
cmp
iret
mov
push
jo
jne
test
add
pop
xlat
aaa
cmp
jg
das
xchg
dec
push
std
or
mov
sub
aas
cs
fisttps
cltd
hlt
cltd
gs
adc
push
in
cmpsl
xchg
fistpll
pop
std
push
sbb
add
insl
add
test
addr16
ud1
mov
sub
push
out
aas
and
fsubs
push
inc
jmp
mull
int3
les
pop
adc
xchg
lea
pop
xchg
or
inc
bound
aaa
adc
xor
jns
hlt
out
sub
decl
xor
ja
cmpsb
or
jmp
fldcw
call
sbb
dec
test
mov
xlat
dec
and
mov
loope
arpl
and
mov
mov
test
outsl
int
adc
adc
cltd
or
and
mov
pop
jecxz
mov
or
sbb
mov
cmp
daa
aaa
pop
xchg
jno
lods
xor
mov
xchg
xor
arpl
jb
jecxz
scas
movsl
movsb
sti
push
das
push
dec
mov
sbb
mov
mull
test
in
data16
jge
xor
movsb
push
hlt
adc
xchg
pop
mov
rcrl
mov
rcr
ja
push
pop
cmp
push
mov
sbb
dec
repnz
ja
outsb
inc
pusha
mov
pop
lods
out
jo
mov
fs
ds
in
xchg
pop
in
imul
cltd
jl
xor
xchg
push
icebp
mov
std
or
out
je
je
inc
add
int
sbbl
push
inc
lock
imul
lods
cmp
movq
out
insl
jge
test
push
jg
jle
mov
jl
mov
movsb
sti
inc
push
nop
dec
lcall
fdivr
inc
mov
ror
adc
cli
xor
cmpsb
and
jle
mov
dec
xor
test
andl
je
xor
mov
test
testb
push
mov
xor
xchg
or
dec
mov
insb
cmpsb
cmp
inc
daa
call
sub
pop
jo
outsl
push
in
xchg
add
out
push
les
xchg
div
jns
xor
stos
test
sbb
fwait
stos
shrb
fs
push
pop
xchg
in
cli
xchg
and
sub
pop
cmpsl
pop
shll
pop
cli
stc
pop
push
dec
outsl
inc
fisubs
sub
sub
lds
stos
cmp
inc
pushf
mov
xor
sti
add
lahf
push
push
lahf
mulb
and
scas
lret
out
or
test
mov
les
fisttpll
call
das
sub
inc
out
fcomps
ljmp
stos
lea
mov
xor
mov
push
cmp
loop
mov
sub
sub
inc
sub
or
sub
xchg
ret
mov
cwtl
loopne
imul
iret
loopne
in
lods
xor
cmp
mov
lods
std
fisubl
gs
test
sti
inc
aaa
sub
mov
pop
add
xchg
mov
jl
enter
shl
mov
jb
sbb
in
dec
popa
inc
inc
jg
push
jle
fwait
int3
js
add
mov
cltd
xor
mov
add
out
je
int3
xchg
rclb
dec
rcr
xchg
repnz
push
adc
cmpsl
add
fldt
or
mov
inc
clc
pop
sbb
mull
arpl
sbb
push
mov
cs
pop
and
pop
mov
jo
cmp
push
testb
add
dec
lds
scas
in
rorl
in
push
addl
pop
jle
mov
fisttpl
std
jno
push
mov
aas
pushf
clc
lcall
js
sbb
cmp
loop
mov
xchg
add
arpl
cmp
lret
ds
repz
sub
add
out
pop
push
ljmp
pop
inc
mov
push
out
mov
mov
mov
jp
mov
gs
mov
sub
ret
or
jmp
fwait
and
nop
pop
mov
or
pop
outsb
mov
mov
mov
ljmp
push
fs
mov
fstl
cmp
shrb
lret
rcr
pop
fwait
cltd
and
das
and
mov
dec
push
push
sahf
jnp
and
pop
dec
add
dec
xlat
filds
out
incl
repz
push
xchg
push
ljmp
lahf
xor
adc
mov
std
jecxz
pop
jecxz
fwait
test
notl
hlt
add
xchg
sub
push
jp
dec
jae
shll
lock
subl
jl
ud2
out
mov
xchg
vmovdqa
scas
daa
sbbl
fucomp
addr16
xor
sbbb
or
sbb
loop
lods
scas
mov
fistl
jge
mov
jnp
inc
adc
jle
cs
stos
jg
mov
jo
stos
popa
push
movsl
lcall
and
rorb
sub
out
xchg
mov
jg
arpl
idivb
mov
mov
dec
repz
xchg
jp
adc
aas
rcll
jmp
push
sbbb
adc
push
imul
ljmp
repz
sub
xor
out
mov
inc
push
inc
mov
push
jg
shlb
or
nop
lcall
jmp
pusha
inc
push
add
rcrl
sbb
stos
hlt
je
iret
mov
shlb
pop
push
aam
add
inc
xlat
ret
or
mov
and
dec
push
xchg
dec
jno
sbb
ja
cmp
xor
insl
xor
sub
jno
xchg
aaa
xchg
inc
pop
ja
enter
cmc
cmp
scas
sti
je
or
pop
gs
icebp
outsl
enter
jno
icebp
scas
aas
mov
test
adc
push
out
or
andl
outsb
cwtl
fwait
negb
test
add
jno
adcl
mov
jg
mov
cwtl
repz
add
lods
add
lret
daa
push
pop
jno
add
les
fistpl
repnz
iret
or
test
sbb
je
lret
pop
jge
aam
cmp
fmuls
nop
inc
mov
int
xor
push
jmp
or
lods
mov
jg
add
js
insb
inc
orl
das
repnz
dec
xor
sub
out
cwtl
bound
sub
and
xchg
xor
fdivs
lock
mov
mov
cmpsb
pop
fisubrs
scas
push
mov
pushl
std
lahf
shlb
push
lcall
jns
jg
adc
jno
imul
test
sub
inc
mov
pusha
jno
sub
fimuls
xchg
push
push
repnz
es
test
cmp
subb
clc
push
pop
pop
decl
les
rcrb
lods
mov
aas
outsb
rorb
shrb
int
int
roll
hlt
popa
mov
push
movsl
xor
jno
mov
mov
push
jge
loope
gs
add
repz
sbb
das
jle
jmp
or
add
test
push
mov
adc
out
cltd
push
sbb
jge
bound
and
loope
jecxz
testb
lods
mov
stos
in
ljmp
rcll
mov
dec
lea
sub
mov
ds
fldl
stc
push
pop
xchg
cmp
push
cmc
xor
xchg
dec
fisubrs
fldl
repnz
fucomp
push
loopne
and
push
ds
inc
hlt
push
or
jae
cmp
les
ret
pop
lea
adc
jge
push
les
lock
into
mov
push
pop
rorl
push
add
mov
sbb
add
call
imul
in
frstor
or
inc
jbe
inc
mov
sbb
inc
sub
cmp
push
out
dec
jnp
cli
adc
inc
push
test
js
clc
adc
sbb
add
xor
dec
test
adc
jle
mov
out
xchg
jns
xchg
or
fdivrl
int3
aas
mov
lods
sbb
leave
jecxz
shl
xchg
cmp
cltd
mov
mov
mov
push
pop
pop
adc
push
jae
in
add
mov
jo
fwait
jae
sbb
mov
ss
sub
mov
xchg
fiaddl
adc
cmpsb
push
inc
test
fdiv
push
test
mov
cmp
ret
add
pusha
or
es
xor
fsts
inc
daa
push
sarb
jp
cld
lret
fstpl
jg
push
fucomip
fs
mov
les
aas
rcll
sbb
jge
dec
pop
repnz
aad
mov
scas
mov
cwtl
sub
xchg
ljmp
pushl
cmp
mov
rcll
jnp
out
push
test
sub
sbb
int3
pop
or
sub
and
std
das
shlb
aas
in
insb
mov
iret
push
leave
aad
pusha
std
xor
push
sarb
sbbl
es
imul
mov
js,pn
xchg
jle
cld
mov
outsb
pop
mov
cmp
add
sbb
sub
mov
testl
push
mov
and
orl
adc
xchg
icebp
lods
test
cmp
and
cmpsl
arpl
loop
mov
jns
lret
push
and
mov
and
lods
rcl
scas
and
cmp
xlat
xchg
outsl
fstpl
xor
movsl
or
dec
mov
fnstenv
mov
test
out
add
mov
push
sub
into
dec
xchg
pop
fbld
xor
mov
mov
add
jo
enter
cli
repz
stos
xor
test
cmc
dec
pop
adc
and
lret
insl
xchg
and
or
test
jae
pushf
add
int
push
clc
sub
outsb
jne
sub
lret
or
sbb
xor
xchg
push
dec
and
jb
ja
insl
xchg
jo
jle
dec
inc
iret
jo
movsl
enter
cs
pop
popf
ficoms
add
adc
lock
clc
push
add
jg
sahf
pop
sbb
push
push
cmp
mov
sub
sbb
aaa
jge
leave
xchg
jge
pusha
dec
pop
push
and
dec
jb
daa
clc
sub
pop
ret
cmc
xor
cmp
sbb
or
test
pop
test
push
movsb
xor
inc
loop
xchg
scas
cmp
push
subb
int3
int
and
jne
mov
mov
repz
ror
xchg
shl
aas
cltd
cmpsb
jae
mov
mov
sbb
cmpsl
xor
iret
jne
or
in
sub
call
sti
adc
insl
in
inc
mov
es
ret
jnp
aad
mov
iret
out
stos
pusha
roll
or
add
sbb
arpl
jno
divb
jmp
lock
mov
rcrb
scas
pushf
mov
add
fildll
fwait
dec
lcall
mov
sar
std
push
imul
bound
in
and
pop
xchg
inc
sbb
jno
mov
sbb
aam
pop
je
das
mov
xchg
into
mov
fcmovnu
inc
gs
mov
lods
imul
call
dec
testb
rdmsr
in
add
rcll
push
rorb
cwtl
movsl
xchg
xor
fdivrl
clc
cmp
mov
inc
mov
sub
pop
jnp
sbb
gs
push
iret
in
mov
mov
sub
push
cwtl
pop
mov
push
pop
sub
fmuls
pop
jno
sub
dec
call
jnp
jns
pop
cld
push
sti
cmp
or
mov
inc
xor
call
or
sahf
insb
aam
lret
enter
inc
mov
clc
into
outsl
cmpsl
xchg
dec
lock
inc
cli
in
fnsave
adc
dec
and
sub
call
push
loope
test
repz
push
out
push
pop
sub
sbb
and
jmp
or
sbb
dec
orl
push
call
and
adc
popa
mov
add
lahf
dec
ds
lret
dec
enter
xchg
jp
mov
jecxz
adc
xchg
xchg
pop
mov
imul
cmp
cmpsb
lods
or
cmc
int3
insb
lea
imulb
imul
jno
pushf
xchg
out
mov
outsb
or
mov
xchg
int
add
add
push
push
dec
jmp
mov
mov
fldenv
pop
pop
mov
test
cmp
xor
pop
add
pop
and
mov
call
add
dec
jns
pop
add
sbb
popf
lds
mov
ret
fidivl
repnz
mov
xor
aas
sbb
into
aaa
lock
push
or
and
xchg
pop
push
sub
test
add
push
lods
sahf
fwait
mov
xchg
and
ret
stos
push
test
cltd
rolb
call
scas
pop
sbb
js
aam
sarl
cmp
loopne
sub
std
push
pop
popa
test
rorb
int
or
mov
es
and
pushf
mov
enter
in
push
jae
nop
sbb
cmp
and
nop
dec
sbb
jmp
iret
mov
xor
pop
rorb
inc
push
mov
push
out
mov
or
dec
into
popa
int
or
inc
or
iret
inc
add
in
or
adc
cs
xchg
push
out
fs
rorl
mov
pop
pop
jnp
loop
das
lea
pop
stos
and
sbbl
gs
rol
fs
cs
stos
in
pop
lahf
arpl
cmp
daa
sahf
xor
lock
shlb
xor
clc
ds
gs
inc
mov
addl
out
xor
lds
fmull
jle
cltd
xchg
lock
rclb
addr16
cmp
mov
pop
ljmp
loope
cmpl
gs
hlt
dec
lret
nop
push
out
pushf
mov
inc
daa
clc
fisubl
in
mov
push
or
test
pop
inc
jo
mul
adc
pop
ret
add
lahf
mov
cli
and
pop
sub
sbb
dec
inc
dec
cwtl
adc
movsb
sbb
outsb
push
fiaddl
jle
fcom
das
xchg
jne
push
imul
sub
cwtl
add
aad
xor
out
fsubrs
inc
mov
mov
lods
shr
mov
sbb
mov
sub
and
fnstcw
iret
mov
or
or
pushf
outsl
jecxz
push
dec
mov
lret
or
cli
stc
call
out
and
mov
mov
pop
add
xchg
sub
xchg
jae
cmpsl
out
push
andl
pop
bound
loopne
and
cmc
mov
sbb
lock
ficoms
popf
sbb
pop
lds
outsl
insb
pop
lretw
call
je
cmp
dec
jg
sti
sub
dec
jnp
dec
sbb
test
cmc
xchg
jb
jae
or
and
dec
sub
xor
sub
sbb
popa
mov
insl
dec
pop
jmp
pop
inc
ret
leave
out
pop
xchg
jp
sub
out
sbb
push
or
subb
imul
pusha
out
push
stos
sub
mov
mov
pusha
push
pop
cli
add
xchg
imul
sub
xchg
adc
mov
xchg
mov
cmp
orl
or
lea
xorb
mov
add
lcall
lret
pop
lret
sub
push
nop
sbb
and
cmp
jecxz
adc
push
pop
jae
sub
bound
rsm
fs
jmp
xchg
js
addr16
xor
mov
lret
aam
push
mov
enter
subb
inc
outsl
xor
pop
pop
in
add
loopne
add
dec
lods
jg
jmp
outsb
loopne
mov
xchg
knotw
movb
fwait
sahf
sub
xchg
pop
cwtl
loope
lods
jge
mov
call
ficompl
xor
das
je
mov
dec
xchg
add
aad
lret
sub
cmp
testb
sub
sbb
cmp
fwait
out
outsl
int3
in
sub
fldcw
fsubrp
leave
cmpsl
xchg
dec
cmpsl
lds
ljmp
push
sbb
xor
cmpsl
pop
add
insl
stc
rcrl
xlat
enter
mov
das
aam
mov
ret
xor
fidivrs
inc
mov
orb
mov
test
dec
pop
push
clc
std
mov
lock
xchg
aad
mov
pop
sbb
xor
mov
inc
aas
sbb
pop
lret
jns
out
dec
mov
incl
sti
in
lods
rorb
push
xchg
jecxz
and
lock
popl
pop
das
sub
add
bound
loop
add
sbb
and
jecxz
and
scas
rolb
mov
pop
repnz
or
shll
shlb
dec
push
pop
push
mov
push
scas
jge
xchg
imul
mov
mov
xchg
pop
xchg
pop
loop
lock
inc
out
mov
push
fwait
sub
pop
movsl
out
enter
ror
inc
je
das
push
mov
hlt
rolb
or
mov
mov
std
inc
aaa
ds
jnp
xlat
sbb
dec
push
xor
mov
or
add
push
xchg
fisubl
rclb
movsl
fsts
mov
fstl
loop
mov
cmpsb
dec
out
inc
imul
adc
mov
mov
test
fucomip
push
or
pushf
sbb
ret
hlt
xchg
and
mull
ret
aaa
cmp
js
cmp
inc
pop
das
fld
nop
add
mov
xchg
cltd
xlat
pop
shll
mov
mov
sahf
mov
adcl
into
shrb
movsb
aam
jecxz
pushl
mov
and
mov
outsl
mov
repz
push
dec
and
fnstsw
inc
nop
aam
pop
cmp
add
movsl
das
arpl
xchg
rolb
or
xor
aas
outsb
out
dec
pop
jmp
mov
pop
stos
xchg
mov
dec
int
aaa
sbb
sub
sbb
xchg
and
daa
fsubrl
ja
cmpsb
pop
arpl
call
sub
add
xchg
xorb
cmp
sti
mov
fcoms
sbb
orl
inc
in
insl
dec
inc
add
in
push
mov
sub
cltd
pop
insl
adc
iret
lock
add
shrl
mov
inc
pop
aaa
push
jnp
movsl
pushf
imul
scas
and
sub
xor
mov
cmc
or
mov
push
mov
cli
mov
xchg
es
push
xor
mov
xor
iret
inc
clc
sbb
pop
jecxz
rolb
fimull
and
cli
xor
rcrb
dec
lret
mov
mov
dec
jnp
je
push
dec
in
int
insb
xor
scas
ja
idiv
jo
mov
fstps
xchg
loop
call
sahf
dec
pop
jecxz
sti
xchg
outsb
jb
xchg
dec
or
push
outsl
jmp
inc
arpl
adc
dec
cli
decl
clc
roll
mov
int
es
add
in
or
out
repz
xchg
fs
ret
inc
xor
push
aas
adc
mov
push
mov
jo
jmp
xor
rol
lcall
imul
cmc
sbb
dec
daa
cmpsw
sub
iret
imul
mov
mov
sbb
xor
fwait
leave
dec
sbb
pushf
fs
insl
pop
sbb
sub
stos
and
in
push
pusha
xchg
ljmp
mov
mov
sub
dec
stos
add
push
mov
rcrl
ljmp
imul
data16
xchg
ljmp
outsl
mov
xchg
out
jbe
inc
dec
xor
pop
insl
dec
jb
mov
jb
dec
sbb
xlat
scas
mov
mov
xchg
mov
arpl
hlt
testb
mov
icebp
pop
cmp
shrl
xor
stc
adc
push
ds
stos
cwtl
or
es
xlat
jp
cmp
jne
cmpsb
dec
or
or
in
sub
js
jp
sbb
popf
rorb
mov
xor
add
mov
pusha
or
xchg
out
rorl
cmp
xchg
sbb
pushf
cmp
pop
mull
push
adc
ds
push
punpcklwd
mov
mov
nop
scas
mov
out
in
sbb
test
sub
push
in
xlat
rclb
mov
and
icebp
lret
adc
cs
mov
lods
aad
add
inc
mov
inc
out
loop
nop
bound
ljmp
xchg
rclb
das
jle,pn
jno
push
push
sub
cmpsb
xchg
call
xchg
out
ret
inc
push
mov
leave
negb
cmpsb
mov
mov
out
or
aad
test
jae
test
stos
sbb
in
pop
xchg
mov
xchg
jg
out
xchg
dec
cli
in
and
add
loop
pop
fcmovnb
add
sbb
imulb
mov
xchg
add
jbe
jl
pop
jno
jecxz
js
ret
mov
pop
addr16
add
data16
pop
and
aas
adc
inc
mov
in
jbe
das
shlb
mov
std
push
lods
dec
add
push
or
aad
and
loope
aad
pop
sbb
mov
movsl
inc
push
bound
int3
not
push
jnp
cmp
xchg
jmp
es
pop
loope
in
nop
push
push
xor
push
fidivrl
xor
fstp
xchg
dec
sbb
lods
adc
aam
lcall
lret
adc
iret
mov
push
leave
xchg
sub
pusha
mov
test
sbb
lods
dec
xchg
or
mov
push
mov
sbb
jne
jmp
inc
or
sub
lret
sub
or
icebp
cmp
xchg
int
icebp
fistl
cli
pop
clc
and
cmc
or
mov
mov
lret
inc
mov
xchg
js
pop
lsl
mov
lcall
sbb
fwait
xchg
sbb
xchg
mov
lds
xchg
mov
ljmp
psllw
scas
mov
lods
aaa
or
jnp
sahf
mov
sahf
xchg
fstpl
test
out
pushf
data16
lea
cmpsl
cwtl
frstor
movsl
mov
inc
mov
cmp
jo
jl
lods
add
data16
pop
in
or
loopne
mov
outsl
or
xor
add
xchg
iret
pop
xor
rcr
or
and
mov
mov
and
imul
popf
pop
sbb
pop
dec
or
push
test
inc
js
mov
stos
sub
push
lcall
aaa
mov
inc
std
xchg
mov
and
cld
ljmp
cmp
jnp
mov
add
notl
aaa
lea
cli
sub
mov
push
adc
lods
mov
in
fidivrl
pushf
push
cmpsl
mov
pop
push
in
jecxz
lret
cli
repz
jnp
mov
sahf
dec
mov
dec
pop
out
or
cmp
cmp
and
add
enter
sub
rcl
js
scas
add
lcall
das
push
ror
ljmp
cmp
insl
mov
clc
xor
mov
int3
push
and
xchg
inc
insb
divl
and
aaa
loopne
iret
dec
and
sahf
jae
inc
pop
sub
pop
mov
push
push
and
inc
cltd
mov
insb
mov
jp
push
sub
and
jne
push
lret
and
or
cmp
sbb
mov
rorl
scas
and
add
mov
hlt
jo
icebp
dec
inc
iret
std
or
cmp
fstpt
aaa
or
rcrl
mov
lcall
jb
dec
inc
lret
pop
js
jbe
cwtl
mov
repz
imul
icebp
inc
xlat
xchg
pop
lods
push
mov
js
sbb
mov
rorb
pop
rep
lcall
jo
pop
xchg
mov
sbb
mov
inc
push
repz
mov
adc
jne
xor
xor
xor
int
enter
lea
cmp
jae
daa
daa
cmp
insl
in
dec
mov
testb
sarb
mov
cmp
cltd
pop
add
jp
mov
ret
aaa
jnp
sub
adc
add
add
sub
fmuls
xor
pop
lods
dec
and
arpl
int3
sarb
adc
popf
dec
into
ljmp
adc
ret
dec
addb
push
lock
push
inc
pop
sarl
jecxz
cmp
mov
lock
pop
test
aas
repnz
out
pop
lds
mov
pop
shrl
lods
out
adc
dec
push
je
xor
sbb
lret
push
fnstsw
xor
mov
cs
incb
or
xlat
adc
loopne
cwtl
or
and
jge
fmull
repz
adc
movsl
movsl
or
mov
jns
sahf
into
mov
out
lret
and
xor
pop
xchg
mov
cmp
push
mov
mov
andl
lret
int3
inc
xchg
jg
lods
mov
fwait
mov
outsl
mov
mov
jge,pt
dec
jmp
rorb
jle
adc
xor
cltd
pop
inc
shrl
mov
lods
add
aaa
adc
fwait
int3
mov
fisubl
jmp
sbb
outsb
int
in
mov
pop
stos
ja
daa
pop
mov
and
outsb
fcomip
mov
mov
and
mov
mov
push
push
stos
rolb
stos
inc
hlt
out
add
and
sub
jmp
cmpsb
mov
pop
sub
ds
jg
call
scas
das
xchg
imul
xor
stos
nop
movsb
inc
mov
add
mov
xchg
mov
hlt
lea
cli
sahf
rclb
push
sbb
xlat
jmp
cld
pusha
aad
dec
movsl
loope
imul
ret
xchg
sbb
dec
jbe
mov
lret
xchg
cld
push
jle
int
mov
mov
inc
xor
movzwl
dec
lods
sbb
adc
mov
sahf
sub
sbb
out
cmp
adcl
xchg
shll
mov
mov
jnp
jbe
aam
arpl
jb
nop
xor
add
push
fwait
mov
mov
cmp
movsb
sbb
ret
movsl
xor
or
repz
arpl
pop
les
dec
subl
xchg
out
popf
shrl
enter
outsl
pop
imul
insb
lds
xchg
rcrb
repnz
popa
or
imul
das
mov
xor
arpl
aaa
into
mov
bound
sub
dec
leave
lea
pop
stc
andl
das
jle
neg
cmpsb
cwtl
decl
dec
sbb
mov
dec
pop
pop
inc
js
ret
sub
aaa
xchg
pop
sub
xor
cmpsl
pop
insl
fcom
dec
sbb
push
and
inc
and
push
fs
xchg
movsb
dec
mov
loope
test
popf
cmp
loop
std
out
mov
fdivs
std
test
movsb
pop
mov
lahf
mov
lods
and
pop
into
rorb
daa
sbb
inc
fsubr
rcr
or
adc
and
pusha
jge
ljmp
sub
mov
inc
js
cmp
inc
loop
aas
cmp
xchg
push
jecxz
jge
xchg
pushf
jnp
dec
jo
lods
imul
mov
cmc
fsubrs
fildl
fwait
sbb
std
orb
push
aam
repnz
and
xchg
repz
sbb
mov
dec
and
je
ja
in
lock
cmpsb
pushf
sbb
sub
inc
xchg
data16
fstps
mov
in
mov
and
int
cmp
out
mov
push
fdivs
cmpb
jp
mov
jnp
jb
mov
lock
jecxz
lods
jmp
fisubs
mov
and
shl
xchg
scas
les
push
mov
mov
iret
fstps
negl
ljmp
rclb
fdivrl
push
pushf
mov
and
mov
lock
push
outsb
imul
push
add
cltd
inc
dec
sahf
jno
clc
test
pop
lret
inc
mov
cwtl
aam
pop
xchg
es
popf
scas
or
inc
aad
and
lahf
stos
ja
jl
call
mov
pop
mov
ficoml
mov
sub
cmpsb
and
sbb
dec
push
sub
cmp
push
sub
cmp
cmpb
jo
js
inc
or
cwtl
and
mov
mov
popf
mov
push
ss
scas
inc
cmp
pop
jmp
jle
add
jmp
cmp
int
repz
fs
jmp
sbb
adc
adc
aas
xchg
subb
sti
push
mov
jo
push
shrl
or
ss
xor
xchg
mov
xorb
js
adc
cli
sub
inc
adc
xchg
leave
int
dec
scas
sub
fwait
adc
push
sub
outsb
inc
int3
mov
gs
imul
iret
aam
pop
in
cmpsl
in
dec
push
andb
dec
pop
test
pop
jbe
enter
loopne
and
dec
pop
cmp
imul
sub
xorl
popf
jae
inc
xchg
push
aas
ss
mov
inc
mov
push
ret
jg
cmp
movsb
frstor
setns
and
jno
jle
jae
lds
dec
mov
lcall
mov
in
mov
jo
push
aam
adc
adc
stos
mov
data16
subb
add
pop
arpl
fisubrs
outsl
and
je
push
test
adc
cmp
lds
add
clc
aas
mov
sub
adc
jbe
std
lds
cmp
int3
push
lcall
jle
and
hlt
mov
jmp
xchg
cld
jmp
sub
lcall
es
xor
out
loopne
hlt
sub
and
pushf
ficomps
icebp
shrb
cli
les
adc
and
cwtl
aad
cmpl
stc
inc
adc
je
popf
in
inc
push
popa
popa
or
aas
inc
add
xor
scas
pushf
jae
mov
lahf
jbe
int3
hlt
pop
ret
je
push
mov
jmp
jmp
leave
or
jmp
arpl
repz
jbe
add
mov
mov
out
cs
lea
outsb
pushf
hlt
push
dec
jb
sbb
inc
dec
sbb
seta
repnz
pop
ret
jmp
inc
cmpsl
ret
aam
push
mov
cmc
push
jb
fiaddl
fwait
out
test
sub
mov
lods
mov
adc
sub
sbb
xchg
jge
ljmp
jbe
or
push
sar
jecxz
ret
lea
adc
test
or
not
divl
dec
imul
sbb
faddl
sbb
sub
sub
stos
lahf
jmp
inc
or
push
fisubl
xchg
jecxz
subb
or
pop
ja
add
test
fsubrs
sahf
les
fcoml
cmp
js
sbb
aas
dec
mov
mov
adc
push
lret
xchg
out
push
dec
int
adc
jno
pushf
mov
mov
mov
xchg
outsb
mov
push
sbb
cmp
pop
adc
or
cmp
mov
in
in
mov
and
adcl
aas
sbb
shlb
rorl
dec
icebp
loope
inc
cmpsl
adc
rclb
scas
mov
cmp
jmp
or
mov
clc
in
push
dec
pop
cmp
and
inc
sbb
ljmp
sbb
sub
pop
dec
nop
mov
cmpsb
sbb
push
or
xor
pop
scas
jp
xorl
fnsave
pop
in
xchg
lahf
fmuls
xchg
dec
mov
push
je
test
sahf
loopne
fiadds
add
xchg
sarl
imul
nop
fwait
in
call
xchg
addr16
lret
jge
adc
subb
jae
sahf
sub
push
scas
sahf
lods
stos
icebp
outsb
sbb
icebp
fcmovnb
xchg
fwait
add
sbb
scas
sarl
call
push
out
jns
jl
add
mov
arpl
pop
inc
ret
push
jge
push
xchg
or
shlb
mov
cmpsl
mov
std
jge
je
leave
ficoml
add
stc
out
add
and
stos
and
add
or
sbb
ret
pop
imul
insb
or
sub
testl
cmp
jno
mov
call
pop
mov
pop
cmp
mov
fstl
jno
adc
mov
add
mov
xchg
and
cmpsb
cmp
mov
pop
call
jmp
lods
sti
push
sub
fwait
je
sbb
lahf
rcl
mov
mov
negb
jo
mov
push
popf
sub
popf
arpl
jbe
xor
or
sub
mov
or
jl
mov
out
movsb
pop
jmp
ss
sub
mov
xor
adc
dec
sub
int
xor
cld
jmp
mov
in
inc
lds
jge
fdiv
sub
pop
arpl
out
cmp
xor
cmp
xor
mov
ja
inc
mov
mov
mov
in
push
inc
aas
add
movsb
loopne
cmp
jno
loope
mov
mov
dec
fistl
xor
clc
inc
fistpl
lahf
ss
call
and
pop
dec
mov
jmp
std
jg
leave
negb
test
fs
dec
mov
sub
fisubrs
sbb
nop
test
pop
cli
or
xor
fildll
and
mov
adc
ds
fmul
lahf
imul
bound
sbb
xor
cwtl
pop
pop
stc
dec
ja
daa
push
aad
imul
ficoml
out
repz
decb
fdivl
into
push
es
jae
addl
test
pop
add
dec
iret
rorb
fisubs
je
cmp
inc
adc
mov
dec
stc
pop
int
jl
fwait
aad
rclb
sub
out
xchg
test
ss
popa
sub
pop
mov
sub
icebp
and
adc
mov
push
ljmp
xor
icebp
jnp
cld
adc
sub
add
imul
out
imul
ja
cmp
repnz
fisubrs
mov
push
xchg
pushf
dec
leave
lret
dec
pop
adc
out
iret
stc
add
mov
pop
cld
dec
adc
jle
mov
mov
pop
rcr
aas
jmp
sbb
jae
das
mov
push
arpl
int3
pop
mov
and
add
scas
pop
xor
ljmp
lret
js
jmp
xchg
mov
mov
popf
mov
cmp
sub
mull
cmp
cwtl
aas
out
inc
cmc
jnp
or
cmc
lret
and
adc
mov
clc
cmc
loope
stos
das
mov
add
sbb
xchg
lock
divb
xchg
insl
outsb
xchg
cmp
addl
ss
addr16
push
jge
repnz
mov
mov
jnp
add
mov
fbld
cmpsl
mov
push
mov
xchg
add
rol
sub
lods
pop
sub
mov
jmp
shlb
stos
sahf
xchg
pop
mov
sbb
add
jb
in
or
add
mov
cmp
and
lret
inc
js
push
loope
and
dec
loope
negb
sub
sbbb
push
pop
dec
mov
loopne
in
in
pop
nop
inc
cmpsb
ljmp
sti
subb
out
je
push
loop
insl
test
mov
es
push
leave
test
psubb
or
add
dec
rcr
xchg
stos
iret
dec
pop
pop
dec
enter
inc
jae
or
imul
cmp
aas
movsl
jb
push
add
adc
jnp
mov
cmpsl
mov
mov
push
adc
fbstp
addb
xchg
stos
cmp
bound
push
in
outsl
cmp
mov
lret
leave
aas
js
mov
clc
dec
dec
xor
mulb
mov
push
ds
ret
fbstp
enter
sub
stc
sub
aam
rcll
and
pusha
enter
je
inc
push
repz
mov
test
mov
loop
xchg
cmc
xor
mov
push
mov
movsb
mov
inc
lea
jle
cs
jns
sub
ret
mov
pop
mov
push
dec
leave
jecxz
and
dec
clc
push
push
and
sbb
cld
aam
mov
jg
sbbb
lock
loope
pop
jne
sbbb
fimull
lea
pusha
cmp
cmc
sub
test
lods
jge
lcall
out
cmp
mov
sarl
inc
cld
out
mov
outsl
aas
andl
sbb
pop
iret
jbe
mov
loop
xchg
or
pop
and
out
jns
pop
pop
test
cmp
mov
mov
fs
pop
fisubl
out
or
add
mov
inc
adcl
cmpsl
or
test
adcb
jne
stos
and
and
mov
lods
faddl
pushl
jns
lods
mov
sub
mov
loop
shll
mov
testl
decb
addr16
mov
sub
sti
xor
push
loop
mov
jmp
xor
in
fmull
xchg
mov
lahf
mov
test
pop
mov
movsb
pushf
xor
sti
rol
dec
insl
pop
mov
push
mov
aas
mov
or
pusha
push
jmp
test
outsb
dec
mov
notl
jbe
imul
push
lret
fdiv
pushf
iret
mov
lret
rcrl
test
shrl
mov
mov
mov
int
inc
das
push
add
inc
aad
dec
cmp
out
ficompl
inc
xchg
dec
inc
adc
and
fstl
mov
mov
in
pop
fcom
mov
pop
push
call
or
lods
jecxz
mov
xor
rorb
jae
repz
stos
push
mov
jp
aaa
xor
ja
pop
out
cmc
icebp
or
cmc
test
mov
cmp
pop
add
lret
adc
mov
sbb
ret
call
fiaddl
shll
cltd
test
mov
addl
jbe
mov
int3
rorb
andl
cmp
rorl
jp
lods
cmpsl
add
movsb
sub
in
or
jb
cli
rcrl
imul
insb
sbb
hlt
pop
lcall
aaa
pushl
mov
mov
outsl
shr
repz
add
rcrl
movsb
ljmp
loope
bound
cmp
fidivs
and
xor
push
stos
dec
orl
int3
in
mov
insb
aaa
sbb
jecxz
stos
sbb
adc
lods
pop
test
clc
cmc
ret
repz
xchg
mov
jbe
out
dec
fwait
icebp
push
and
dec
mov
lret
jo
cmpl
jnp
or
jecxz
leave
enter
ljmp
aas
pop
pop
roll
xchg
outsl
adc
shl
lods
sti
xor
dec
test
mov
xchg
mov
inc
cwtl
testb
insb
push
mov
cltd
in
jne
ret
jne
ja
out
sbb
and
dec
bound
pop
mov
nop
cmp
cmp
faddl
jp
or
test
add
cmc
mov
and
lcall
cld
and
mov
nop
mov
pop
or
sub
push
pushf
push
aad
inc
out
adc
pushf
stos
xchg
inc
negl
pop
int
shl
leave
xchg
jge
mov
scas
adc
mov
xor
pusha
mov
in
xor
jns
add
sub
pop
push
dec
xchg
mov
push
ljmp
cltd
shrb
js
scas
in
stc
push
cld
push
xor
pop
aas
jne
cmp
in
clc
movd
loope
rcll
inc
jne
jne
or
inc
mov
xor
xor
push
in
and
mov
dec
mov
jns
cs
jmp
inc
adc
and
adc
cmp
sahf
aad
xor
insl
lock
sbb
pushw
cmpsb
xchg
pushf
inc
and
subb
les
mov
mov
sbb
xor
loopne
jo
incl
mov
sub
outsl
mov
out
lock
fisttps
mov
push
fwait
jmp
dec
push
in
mov
or
icebp
pusha
adc
mov
imul
ljmp
test
cmpsb
data16
js
xor
movsl
sahf
es
lods
in
xchg
and
and
cmp
inc
mov
and
lahf
xchg
ljmp
and
cltd
jg
xor
sbb
cmpsl
inc
pop
lcall
mov
pushf
xchg
mov
pusha
in
in
xchg
fcmovu
mov
repnz
rorl
loop
fsubs
adc
incb
testb
movsl
jns
adc
push
in
lods
in
lock
in
add
sub
xchg
mov
lret
std
cmpsb
lret
cmpsl
xchg
imul
and
xchg
xchg
aad
pop
cltd
int3
mov
and
sbb
sti
pusha
daa
outsb
lahf
jge
cs
movsb
outsl
sbb
cli
pop
fchs
pop
jb
cmpsb
lret
and
fs
dec
mov
inc
daa
jge
mov
rcll
sub
xor
push
add
aad
movsl
stos
adc
int3
insb
jb
bound
shrb
and
aad
out
ret
sub
aaa
mov
cmp
stc
daa
xchg
les
cltd
testb
sahf
inc
je
jb
test
jns
jnp
pop
out
push
push
les
mov
cmp
jb
sbb
in
push
dec
and
xchg
loope
sbb
cmp
mov
and
mov
xchg
sbb
inc
fisttpl
loop
cld
push
ja
xchg
xchg
xchg
lcall
repnz
cmpl
xor
add
mov
and
jnp
daa
xchg
xchg
lcall
insl
loop
mov
fisttpl
pop
pop
dec
mov
sub
nop
jl
xor
add
stos
sahf
adc
or
adc
sbb
in
sub
clc
jbe
mov
nop
add
icebp
repnz
mov
aaa
dec
push
sarb
fcoms
arpl
cwtl
push
mov
xor
xor
inc
and
xor
xchg
jbe
pop
imul
shl
jno
sub
out
iret
je
ret
sub
dec
jle
into
xchg
mov
je
inc
push
nop
mov
xlat
mov
cli
pop
mov
lock
sub
inc
fldl
lcall
mov
push
pop
mov
fsub
sub
xor
mov
imul
icebp
inc
add
shrb
testb
addr16
jg
orb
mov
push
or
pop
popl
into
call
mov
lea
dec
and
out
fs
mov
jns
mov
loope
lds
and
xor
xchg
aad
bound
sub
xchg
mov
loopne
in
dec
lock
push
fnstenv
jnp
and
testl
mov
add
jae
leave
jge
dec
stos
cmpl
shrb
mov
mov
ror
sbbl
mov
mov
mov
cmp
push
or
out
or
imul
ljmp
adc
repz
in
jbe
sub
ss
filds
mov
mov
fs
mov
into
add
insb
rcll
lock
leave
mov
loopne
inc
or
lret
cli
loop
inc
pushf
ficomps
adc
cmpsl
arpl
mov
add
int
jmp
mov
sbb
jbe
inc
in
inc
jp
mov
shl
scas
jns
aas
ret
mov
pop
fldt
push
rcl
sbb
push
stos
or
sti
mov
mov
mov
out
pop
repnz
cltd
push
fs
loopne
pop
pop
inc
mov
inc
xor
pusha
test
fs
xor
inc
outsl
jo
jge
repnz
mov
cmc
int3
loope
das
push
icebp
data16
mov
lahf
outsl
inc
stos
or
aam
lcall
cltd
in
out
pop
and
outsb
sub
enter
and
pusha
lret
dec
push
lea
lret
cld
push
pop
and
mov
outsl
mov
out
arpl
mov
sub
and
aad
lock
cltd
cld
push
xchg
enter
or
jae
aam
lahf
lcall
xchg
sti
xchg
pop
bound
push
ds
into
scas
xor
fisttpl
mov
sub
mov
addl
leave
xchg
inc
and
add
xor
mov
scas
cmpsb
gs
jmp
imul
sbb
js
xlat
inc
stos
and
testl
adc
push
or
icebp
or
add
pop
lcall
xchg
push
pop
mull
adc
mov
movsl
push
pop
call
mov
or
sahf
arpl
sub
push
ret
cmp
xchg
push
dec
inc
in
and
sbb
xchg
stc
pop
test
out
arpl
jmp
ljmp
mov
test
pusha
or
int3
dec
pop
jg
cli
or
dec
shrb
push
inc
sbb
sub
pop
nop
ljmp
add
mov
dec
sahf
int
mov
add
xor
xlat
sub
lds
sahf
pop
std
pop
arpl
paddusb
mov
cmpsb
sub
sti
mov
add
imul
mov
fdivrs
mov
fiadds
push
sbb
adc
dec
dec
xchg
repz
xchg
mov
add
add
add
mov
fimuls
lods
pop
or
push
cmp
jb
add
adc
adc
add
stos
lret
pop
sub
bswap
and
movsb
sti
xor
aas
test
mov
xchg
push
mov
or
pop
sbb
ljmp
ret
xor
int3
sub
jle
inc
xchg
sub
push
std
inc
das
adc
and
push
mov
mov
pop
dec
iret
adc
int
enter
lahf
iret
fdivrs
call
movsb
cmpsb
fdivrs
push
xor
xchg
xchg
pop
into
and
xor
dec
pop
sub
test
addr16
fidivs
fisubrs
lea
mov
enter
dec
bound
push
mov
aas
xchg
dec
sbb
lock
or
jbe
aaa
aam
xchg
jge
cld
lock
gs
sbb
incl
arpl
mov
lds
cli
xchg
sbb
and
or
xor
or
xor
in
insb
dec
push
pop
add
aad
push
bound
popf
sbb
nop
pop
movsl
sbb
lds
jno
pop
iret
mov
push
dec
sub
and
push
lret
iret
lods
adc
add
xorb
xor
fcoms
movsb
mov
rorl
lock
sbbb
lds
mov
into
cmc
rclb
jne
jl
ret
sti
or
cmp
inc
cmp
push
addr16
aas
adc
sub
pop
mov
sbb
pusha
cli
scas
dec
dec
scas
dec
xor
enter
mov
imul
cmp
loope
adc
aam
scas
sub
shlb
outsl
aas
test
mov
clc
stc
imulb
mov
jbe
push
pop
test
aaa
push
or
push
lds
pop
or
daa
mov
pop
cmpsb
mov
outsb
sbb
xchg
lods
bound
aaa
mov
aam
cmc
adc
cmpsl
dec
cwtl
jno
test
sahf
xchg
into
leave
scas
ret
jne
fwait
mov
scas
sbb
adc
mov
and
mov
std
in
jo
dec
idivb
clc
mov
jbe
mov
xchg
insb
in
add
cmp
out
lods
inc
lcall
dec
dec
movsb
mov
pop
dec
in
out
and
push
sbb
repz
sbb
or
mov
fisubrs
xchg
aaa
push
mov
lret
arpl
insl
pushf
mov
jno
or
sub
cli
out
add
mov
rolb
xchg
push
insl
push
dec
push
int
pop
and
sbb
inc
mov
add
in
cmp
mov
bnd
addb
or
adc
dec
loop
imul
repnz
add
mov
push
xchg
ret
adc
push
adc
js
mov
fidivrl
in
flds
inc
outsl
mov
dec
cltd
inc
or
test
lret
movsl
jl
xor
mov
pop
bound
inc
add
cli
rclb
filds
lods
pop
sbb
imull
pop
out
call
es
jbe
enter
sahf
xlat
sub
mov
push
inc
xchg
jl
mov
dec
sbb
cltd
je
lock
or
leave
xchg
inc
or
inc
fcomp
push
mov
sbb
test
and
xor
aam
mov
dec
mull
and
xchg
test
and
push
loop
fsubs
fbld
insl
pop
ja
and
jmp
aad
adc
movsl
jb
add
and
lds
gs
mov
sbb
in
jae
sbb
mov
jnp
jb
insb
sbb
jbe
cmp
and
adc
hlt
fsubrl
sub
adc
leave
dec
out
cld
mov
loop
mov
popa
add
shlb
das
mov
push
ret
mov
mov
adc
dec
dec
ds
mov
xor
cmp
imul
in
xor
fdiv
aaa
clc
mov
sbb
ret
subl
in
fucom
fisttpll
lock
push
sahf
imul
mov
jmp
xor
cmp
out
mov
cmp
gs
mov
imulb
into
push
cmc
sbbl
push
mov
xchg
pop
mov
gs
fnstcw
mov
add
dec
incl
add
bnd
int3
add
mov
xchg
shl
std
mov
shll
adc
mov
jg
mov
out
call
inc
jge
mov
dec
or
add
out
jnp
dec
mov
dec
pop
inc
bound
enter
in
mov
push
mov
sub
mov
loop
in
loopne
cmc
add
loop
popf
jp
addl
cltd
orb
cld
dec
inc
mov
lock
adc
xchg
aam
aam
aad
icebp
cmc
pushl
data16
mov
lock
xchg
xor
sub
sbb
je
out
es
bound
xor
out
lods
test
xor
fldl
mov
clc
lods
adc
mov
ss
push
imul
cmp
dec
jge
mov
rol
lcall
mov
inc
mov
pusha
sahf
adc
daa
test
popa
inc
inc
lret
xorl
pop
and
xchg
gs
fwait
popa
pop
test
pusha
add
and
dec
mov
mov
sub
sarb
inc
adc
add
pop
mov
inc
clc
rcr
mov
fidivs
pop
jecxz
jge
mov
jle
sbb
loopne
daa
in
pop
xor
dec
pop
sbbl
lcall
push
test
push
mov
psubd
mov
jns
inc
outsl
cltd
xlat
xchg
daa
mov
or
xor
rcr
xchg
mov
clc
sub
add
push
and
push
sti
das
sub
cs
shll
nop
add
jbe
mov
les
cli
mov
sbb
repnz
rcrl
jno
cmp
js
rorl
push
or
jmp
mov
pop
subb
add
sub
js,pt
xor
std
inc
fisttps
test
jnp
mov
test
dec
push
dec
cmpsl
inc
lea
jo
mov
roll
sbb
jns
les
cmp
sub
rcrb
aaa
sbb
push
inc
pop
pop
and
call
push
or
add
rcrb
jmp
and
mov
sub
loope
lcall
fld
xchg
lcall
xor
cmc
mov
repnz
push
out
xor
in
dec
movsl
mov
std
movsl
cmp
inc
and
in
jl
and
mov
cmpsb
add
or
jge
jp
cmpsl
outsl
bound
adc
xor
and
fidivl
add
jns
push
es
imul
xchg
fldcw
mov
or
loope
push
pushf
and
sti
ficoms
and
cs
xchg
daa
loope
adc
jle
sbb
dec
xchg
add
sub
mov
jae
aam
inc
add
mov
inc
je
dec
fwait
repz
int3
cmpsl
mov
test
and
jp
int
sub
repnz
lds
sbb
out
es
mov
mov
scas
out
jmp
add
push
outsb
sbb
jno
dec
popa
cmp
das
jno
mov
lcall
xchg
in
or
fnsave
dec
imul
clc
ret
or
xchg
shrl
in
push
inc
fidivrs
mov
movsl
pushf
inc
ja
jnp
iret
pop
or
and
aaa
adc
lea
std
sbb
xchg
or
mov
fnstsw
addr16
sbb
sub
pavgw
xor
jl
mov
je
movsb
arpl
mov
out
icebp
inc
push
testl
incb
mov
out
inc
leave
jge
sbb
and
xlat
jmp
cmp
rorb
enter
inc
and
movsb
dec
in
mov
fisttpl
shrl
xchg
push
dec
mov
dec
push
xor
pusha
cltd
call
mov
mov
dec
mov
sub
xchg
sbb
push
jo
mov
dec
ficomps
lods
cli
cmp
stos
fnstenv
insb
insl
or
dec
sbb
xor
jle
jmp
ret
scas
mov
cmp
cmp
aad
xchg
mov
sub
inc
pop
push
arpl
inc
ss
lds
out
jecxz
rcrb
shr
les
les
insb
movsl
inc
push
subb
xor
int
test
ret
in
arpl
push
arpl
sbbb
loopne
sub
test
push
cmp
mov
dec
mov
addr16
outsb
rclb
sbb
les
pop
and
int3
sbb
mov
mov
add
roll
mov
add
fs
adc
xchg
cmpsb
sbb
or
jle
mov
ret
cltd
jle
cmc
sbb
fs
inc
in
and
mov
cltd
add
ljmp
jo
fcomps
es
add
jne
pop
shrb
sbbb
fmull
cltd
push
into
jb
into
jle
and
sub
sbb
repz
cmc
lods
ss
push
push
in
mov
push
push
mov
mov
pushf
and
or
adcl
lods
lea
add
add
lods
mov
pop
pop
je
stos
jecxz
lcall
sbb
data16
loope
jge
sub
mov
jo
mov
push
adc
orl
out
or
jae
and
mov
mov
lods
outsb
mov
push
mov
inc
add
or
and
inc
shll
aam
xchg
jg
mov
sub
mov
outsb
cwtl
mov
push
ja
insb
xor
dec
jnp
daa
dec
fdivrl
loop
fidivrl
push
xlat
scas
call
in
mov
gs
popf
sbb
lods
pop
subb
inc
sbb
js
das
js
push
sbbl
je
push
xorb
mov
mov
movsl
test
rcrl
sbb
jmp
daa
push
jae
test
mov
cmc
pop
jo
in
cmpsl
mov
mov
daa
imul
add
sbb
add
daa
jle
and
xor
inc
in
cmp
cmpsb
mov
inc
add
loop
and
jno
test
push
ss
dec
loopne
cmpsl
jle
sti
les
cmp
stos
push
xor
jno
cmpsl
cmp
push
mov
xchg
mov
bound
addl
cmpsb
lahf
mov
xchg
jecxz
jbe
sbb
xchg
jno
roll
xchg
jne
xchg
add
adc
sub
aas
shll
cltd
xchg
nop
js
mov
cwtl
les
stos
lds
xchg
in
out
push
push
hlt
hlt
movsb
sub
daa
push
mov
jbe
pushf
sbb
push
mov
mov
fdiv
pushf
and
vcvtdq2ps
aaa
push
neg
add
inc
test
ficoms
mov
in
or
dec
iret
lret
ds
aad
jno
push
pop
inc
es
cwtl
pop
in
ret
stos
dec
lret
push
jae
sbb
and
fs
inc
test
xlat
popa
sub
imul
pop
or
into
mov
clc
jge
adc
out
int3
popa
mov
xchg
jle
lret
jp
in
add
inc
adc
mov
mov
loopne
sbb
jp
scas
rclb
adc
adc
setns
insl
mov
dec
pop
sub
fsubs
cmpsb
enter
xlat
and
jmp
push
sub
mov
add
xor
push
push
mov
sbb
xchg
lcall
push
cmpsl
sbb
in
rcrb
cmp
out
sub
fs
jle
mov
jmp
xchg
mov
add
and
fcompl
jae
rclb
jmp
outsl
pushf
jno
mov
lock
sbb
adc
push
mov
xor
sub
fwait
cli
mov
jns
pop
dec
out
inc
fmull
jmp
sub
nop
jo
sub
sub
xchg
add
xor
xchg
stos
mov
lahf
push
jne
imul
mov
rorl
insb
push
inc
jg
mov
sub
lock
adc
lret
cmpsl
icebp
imul
enter
xlat
sti
loopne
add
push
cwtl
testb
jo
int3
sahf
enter
jb
push
insb
mov
push
shll
xor
mov
lcall
pop
addb
sbb
sub
pushf
lods
sub
fildll
call
dec
iret
xor
in
arpl
cmp
cmpsb
test
enter
in
lds
sbb
push
pop
mov
or
mov
adcl
lods
mov
jnp
aam
in
inc
stos
xor
cmp
gs
jl
dec
fadds
or
pop
jmp
dec
ds
subb
adc
cwtl
lcall
cmp
push
shrl
in
sub
popf
push
xorb
or
gs
hlt
inc
ljmp
pop
adc
dec
mov
add
lods
dec
rorb
ss
cmp
or
dec
lods
testb
hlt
mov
pop
shlb
mov
xchg
test
pop
jge
imul
mov
mov
int3
repnz
pop
cmpsl
movsl
dec
das
and
hlt
mov
pop
push
and
xor
sbb
inc
jecxz
mov
add
pop
roll
addr16
stc
push
mov
inc
icebp
mov
insb
pop
push
add
adc
jecxz
sbb
movsb
nop
cltd
mov
cmp
pushf
pusha
or
push
push
xchg
pop
fwait
ss
lods
cmp
sbb
insl
cwtl
jecxz
sbb
scas
pusha
icebp
jge
push
outsb
pop
addb
test
jae
mov
cli
sub
dec
adc
mov
jge
loope
or
adc
std
ss
daa
jp
push
into
or
in
out
loopne
mov
pusha
lret
outsb
das
adc
in
mov
mov
ret
inc
and
push
loop
imul
mov
adc
sub
mov
xchg
push
daa
push
sti
popa
xor
push
cmp
dec
adc
fbstp
xor
and
sbb
aam
out
ds
pop
xchg
adc
in
jb
mov
mov
test
xchg
pop
in
test
push
xor
jl
imul
and
fimull
in
cld
movsb
xor
fadd
es
or
js
lret
dec
stos
icebp
test
pop
fisubs
pop
push
nop
and
adc
mov
sub
in
or
jnp
push
jns
stos
push
push
or
stos
gs
js
rolb
ja,pn
mov
sti
pusha
push
aad
aas
lock
sub
in
xchg
pop
into
rolb
cmp
aaa
jge
es
fisttpll
lock
jae
inc
loope
movsb
mov
inc
xor
and
push
cmpsl
pop
xchg
xor
out
movsb
lds
and
xchg
aaa
js
ret
test
ja
mov
mov
and
add
fst
roll
pop
xchg
add
mov
dec
lock
mov
stos
mov
push
sub
cltd
lret
fistpll
mov
jnp
jmp
rcrb
sbb
inc
cmc
lcall
xchg
stos
push
inc
iret
jb
sbb
inc
xor
aam
std
pop
xchg
mov
and
inc
cmp
sti
loop
in
sbb
xor
mov
shr
pop
imul
adc
cmpsb
aas
lret
add
enter
orl
dec
fisubl
or
loope
jo
pop
out
and
and
push
dec
push
into
xchg
xchg
fnstenv
pop
cmp
imul
in
xchg
icebp
jmp
out
hlt
fs
arpl
sub
mov
mov
mov
xor
push
cli
jmp
loopne
push
adc
push
xor
cmp
cmp
fldcw
push
rclb
and
jmp
shrb
insb
cwtl
adc
pop
jecxz
pushf
adc
pop
mov
test
repz
mov
mov
dec
jle
ss
sub
xchg
lods
movsl
aaa
mov
pusha
rolb
lock
mov
mov
insl
pop
sbb
and
cmp
add
jae
jl
ljmp
pop
adc
ds
and
or
daa
mov
push
and
out
lods
jle
rolb
push
adc
and
arpl
push
ret
les
andb
cmpsl
movsl
xlat
inc
cmp
in
scas
cwtl
mov
or
adc
xchg
addb
and
stos
fsts
fdivl
sbb
mov
add
mov
mov
xchg
push
mov
popa
lret
icebp
mov
jle
or
gs
sub
mov
bound
les
int3
dec
push
xchg
fnstsw
out
push
lret
sub
movsl
xlat
mov
cmp
xchg
jne
arpl
lret
push
add
push
pop
lock
aas
dec
push
mov
lds
push
call
mov
cmp
loopne,pn
fwait
add
mov
pop
test
out
sahf
inc
jne
jo
jg
lcall
mov
and
insl
mov
and
dec
addr16
jle
push
into
stos
mov
rcrb
lret
mov
mov
pop
jge
sbb
pop
lret
sti
shl
push
call
add
imul
adcb
add
ret
jmp
push
or
rolb
rcrl
xor
neg
test
stc
loope
arpl
test
adc
ret
dec
inc
dec
loopne
inc
dec
pop
mov
pop
jns
fwait
shl
ljmp
xor
sub
int3
cld
icebp
fcmovnb
and
aad
cwtl
test
stos
dec
push
out
pop
adc
ja
call
push
push
pop
or
arpl
mov
arpl
mov
out
jno
inc
insl
insb
ret
addr16
mov
jbe
and
add
mov
jge
jae
mov
xor
daa
aad
mov
pop
push
or
pop
cwtl
push
fmuls
xchg
call
push
mov
jmp
test
gs
in
mov
adcl
mov
daa
aad
mov
mov
mov
mov
lods
cmp
aad
add
or
mov
or
push
sbb
inc
shl
cmpsb
jecxz
mov
fwait
lret
jl
adc
test
imul
pop
mov
pop
dec
test
mov
add
in
pop
sti
in
xor
in
push
jns
dec
jno
bound
jno
sbb
fisubrl
lock
sub
popf
adc
jns
add
bound
push
imull
add
in
sub
lcall
or
sarb
adc
and
nop
mov
loope
and
mov
gs
or
aaa
sbbb
jl
jo
cld
loop
mov
sbb
mov
xchg
out
xchg
inc
xor
dec
and
lods
bound
xchg
fildl
les
aaa
push
mov
mov
inc
cs
outsl
cmpsl
jp
cmpb
movsl
inc
fidivl
lret
test
adc
cmp
outsl
int3
mov
add
xor
pop
nop
outsb
mov
fwait
adc
rcrb
test
fmuls
outsb
mov
adc
pop
add
xor
in
fistpll
jae
and
ret
lea
add
add
mov
pop
cmpsb
adc
cmp
sbb
mov
push
sbb
aad
sub
sbb
div
subl
gs
stc
pop
mov
cli
outsb
sub
aam
out
adc
mov
movsl
dec
jno
inc
ficoms
js
rorl
movsb
cwtl
inc
fisttps
jle
popf
pop
jge
shl
push
lahf
out
sar
mov
mov
negl
js
sub
inc
inc
pop
adc
not
loope
out
jno
pop
arpl
push
cmc
push
sbb
out
jmp
inc
leave
lea
sub
scas
aam
mov
inc
inc
aad
dec
push
insb
push
in
out
jne
test
mov
xlat
or
pop
scas
add
call
mov
xor
mov
sub
xchg
xor
or
sub
sub
in
jo
mov
xchg
mov
rcl
and
nop
sbb
in
xchg
mov
mov
clc
push
pop
xlat
das
sub
arpl
sub
dec
lahf
jge
roll
and
add
mov
mov
jmp
and
mov
add
cmc
jmp
es
or
push
inc
pop
and
xchg
or
or
dec
pop
push
jge
push
mov
mov
outsb
xchg
orb
sbb
xor
stos
loop
aam
pusha
pop
aad
mov
mov
clc
in
xorl
loop
gs
inc
mov
jle
loope
add
adc
and
ss
push
in
das
frstor
push
mov
sub
xchg
leave
aam
in
mov
dec
mov
movsb
sub
pop
mov
popa
jle
push
or
test
pop
rolb
xor
fstps
or
std
popf
jl
std
loop
adc
orl
nop
cmp
sbb
mov
mov
push
mov
jbe
sub
sar
adc
sub
sti
inc
mov
popf
pop
rolb
mov
aad
xchg
sti
cmpsl
test
and
mov
inc
int
push
or
sbb
xchg
fildl
mov
rcrb
arpl
aad
call
gs
adc
mov
xlat
push
outsl
and
pop
movsl
sub
pusha
scas
and
cmp
push
lcall
cmc
xor
aad
mov
aas
sbb
inc
sbb
pushf
rcr
in
ret
mov
mov
lock
cmpsl
or
jmp
jb
lock
cld
and
jae
test
pop
xchg
bound
pop
adc
mov
testb
int
in
xor
sub
xchg
repnz
pop
and
dec
mov
call
dec
xchg
xchg
pop
test
stos
ret
mov
aad
dec
arpl
dec
cmp
test
je
cmp
jae
shll
popa
loopne
inc
mov
cli
mov
enter
sub
cs
adc
mov
sub
flds
dec
cld
cmp
sbb
lods
push
mov
fs
or
xor
push
fdivrl
aad
lret
add
mov
inc
pop
lods
mov
pop
loop
ret
mov
lcall
sub
jecxz
push
mov
mov
sidtl
pop
adcl
fcompl
scas
push
cld
imul
xor
inc
push
in
enter
scas
dec
mov
movsl
fbstp
gs
and
inc
and
rcrb
jl
push
mov
pop
pop
aam
leave
fadds
dec
cmp
insb
rcrb
push
lds
add
lahf
js
mov
cmp
in
mov
in
xchg
and
pop
mov
nop
stos
sbb
insb
jge
mov
jl
mov
in
pop
xchg
test
push
sub
dec
scas
out
pop
lahf
adc
mov
mov
imul
push
push
jno
mov
repz
mov
sbb
cwtl
mov
clc
out
pop
mov
push
ficomps
cmpsb
jg
xchg
rcrb
insb
mov
pop
data16
jecxz
or
dec
sub
dec
insb
icebp
jns
jmp
sbbb
pop
cmp
pop
sbb
sbb
subb
rclb
gs
jle
inc
inc
sbb
fs
into
pop
pop
mov
psubusw
or
dec
mov
inc
xchg
sbb
ljmp
mov
ficomps
repz
push
fisttpll
addr16
mov
jmp
js
je
cld
rolb
imul
clc
daa
lahf
adc
xor
out
mov
cmp
cmpsl
inc
out
pop
cmp
jo
push
mov
xlat
jmp
jle
ds
fcompl
je
aad
frstor
icebp
pop
es
pop
mov
jg
fdivs
jecxz
stos
sbb
jge
int
fimuls
sub
sub
mull
sub
enter
push
jle
adc
sub
mov
mov
sbb
mov
rolb
insb
xchg
sti
aam
data16
lret
add
sub
dec
xor
test
push
stos
lahf
pop
lahf
pusha
sbbl
fcoms
jg
cmpsl
mov
xor
pop
and
cwtl
stos
mov
movsl
push
sub
roll
mov
sahf
rorb
enter
or
out
sbbb
and
dec
mov
push
push
popf
ficoms
dec
or
enter
or
sbb
fwait
inc
cmp
sub
xor
mov
lods
wrmsr
xor
jecxz
or
sbb
or
lret
jnp
fwait
adc
movl
stos
mov
mov
adc
mov
ja
mov
imul
xchg
insl
int
out
inc
mov
xchg
ljmp
dec
sti
lahf
pop
cmpsb
mov
fldt
in
cmp
stc
pop
lock
and
das
sar
cmc
ret
lahf
and
out
mov
mov
nop
jno
shll
adc
sub
scas
mov
testb
mov
mov
cmp
call
sahf
cmp
insb
mov
pusha
and
dec
fdivrl
adc
cmp
pop
jecxz
shrb
notl
mov
dec
stc
xchg
mov
fisubrl
mov
shll
sbb
xchg
pusha
jecxz
repz
je
mov
test
jnp
jg
jp
jb
pop
sahf
xchg
push
cmp
out
fstpl
fidivrs
push
inc
test
add
ret
shll
push
pushf
cmpsb
jns
daa
add
adc
fs
adc
pop
arpl
rorl
loope
fs
jns
hlt
push
js
cmpb
xor
dec
jp
cmp
lret
in
movsl
adc
and
add
fldt
stos
jmp
xchg
dec
nop
aaa
and
push
and
xor
push
subb
or
lea
jecxz
orl
xchg
fucomi
fwait
push
ret
test
xchg
imul
movsb
pop
lcall
pop
inc
lock
mov
js
and
cmp
lods
push
pop
jno
dec
movsb
icebp
in
pop
push
aam
sub
leave
jle
enter
jne
push
cmpsl
shll
fstpt
cmc
negl
orb
push
mov
repnz
adc
sub
mov
clc
push
dec
push
mov
jl
dec
movl
add
push
in
adcl
neg
mov
sub
lcall
jecxz
mov
xchg
fisubrl
scas
xchg
jle
mov
jno
pop
lock
sub
out
mov
dec
scas
push
popa
test
test
faddl
icebp
xorl
fbld
mov
mov
inc
sbb
je
inc
inc
jno
fs
rolb
inc
mov
mov
push
sbb
cli
mov
lods
xchg
pop
inc
adc
popa
lret
mov
pop
aad
or
movsl
xor
ljmp
orl
dec
xchg
xchg
jge
mov
scas
pop
xorl
shll
push
mov
push
in
mov
lcall
lcall
xor
ja
es
daa
pop
fcoml
mov
lock
stc
or
hlt
dec
xor
aam
std
xchg
push
aaa
mov
mov
adc
rcrl
scas
out
sbb
lods
add
jno
js
cltd
jne
add
mov
jnp
daa
and
cmc
mov
adc
mov
cmpb
cltd
jbe
in
test
pop
imull
jge
scas
xchg
iret
icebp
and
into
push
into
push
pop
fs
lret
xchg
pop
cltd
fbstp
lret
fnstcw
inc
sahf
nop
dec
lods
jecxz
xchg
jns
fs
jg
pop
xor
ja
jecxz
bound
aad
dec
arpl
and
mov
mov
fnstsw
jmp
xlat
or
mov
out
xchg
jns
and
fildll
inc
xchg
jmp
and
dec
inc
adc
cmp
cmpsb
loop
mov
xor
sti
push
inc
xchg
scas
inc
ficompl
mov
in
movsb
adc
mov
in
or
push
inc
bound
sub
dec
xor
add
adc
or
cmpsl
loope
sbb
cld
push
and
sub
sti
mov
push
adc
pushf
ss
mov
jns
gs
repnz
test
xchg
or
cmpsl
sbb
or
jo
inc
xchg
push
bound
loop
add
je
xor
push
push
pushf
push
incb
push
pop
shrl
and
push
call
sbb
pop
rcrl
mov
mov
mov
push
cmp
loope
repz
addb
push
stos
sbb
shl
stc
data16
pop
lea
mov
mov
std
les
sbb
pop
xchg
dec
imul
insl
fsubl
shlb
and
inc
mov
push
push
xchg
ret
mov
inc
stc
xlat
xor
jo
mov
mov
sahf
lcall
movsl
enter
xor
mov
jge
and
icebp
fldenv
das
ficomps
sub
lods
push
inc
pop
movsl
add
or
xor
stc
test
mov
mov
pop
add
loop
sbb
pusha
cld
sbb
adc
pop
sub
jle
insb
mov
fs
je
mov
mov
jl
pop
inc
lcall
mov
mov
adc
mov
scas
jns
in
pop
xlat
add
cmpsl
sub
aas
fmull
outsl
dec
mov
pop
fldt
or
aam
mov
icebp
fsts
idivl
push
and
cmp
lahf
mov
mov
push
xor
jb
mov
cmp
xor
push
mov
cmpsb
sub
push
and
jl
jl
es
arpl
lods
out
aaa
test
sbb
test
lods
inc
out
jne
shll
cmpsb
shrl
lret
adc
jae
lahf
and
dec
inc
loopne
aas
leave
outsb
cmp
or
sub
out
fsts
mov
pop
mov
mov
cmp
inc
cmp
arpl
jno
mov
inc
idivl
lds
fildl
out
jae
cmpsb
xlat
xor
add
sub
aad
pushf
push
mov
inc
repz
xor
pop
dec
mov
push
sub
lock
sub
inc
sbb
push
xor
fisubs
das
or
mov
push
test
cmpsl
sub
mov
mov
xor
test
inc
jle
pop
int3
mov
insl
shlb
les
ja
in
fnstcw
fisubrs
insl
lret
mov
fdivs
adc
adc
in
hlt
notb
sub
fstpt
xchg
mov
arpl
out
or
repnz
aam
gs
push
popa
pop
push
jne
inc
imul
scas
inc
hlt
imul
adc
xor
iret
dec
push
push
jle
jmp
jl
and
mov
dec
fadds
imul
shlb
sub
pop
xchg
dec
xchg
repz
mov
cwtl
clc
scas
sbb
test
push
jl
ret
in
add
push
dec
add
lret
inc
pop
mov
aas
jecxz
xchg
mov
inc
or
mov
lock
dec
xor
xor
jge
sti
cmp
mov
into
test
jge
jns
cmpb
dec
pop
mov
pop
mov
push
loopne
mov
dec
scas
test
dec
cwtl
iret
mov
lcall
fidivrs
push
push
jecxz
push
xchg
cmp
nop
mov
in
jae
dec
dec
fwait
cmp
xchg
sbb
sbb
test
cli
adc
int
fldcw
add
jle
mov
rcrb
xor
div
enter
xchg
popa
bndstx
inc
jmp
add
ficoms
sarb
xor
sahf
lahf
pop
jl
mov
aad
fnstsw
test
push
mov
sub
gs
and
lcall
dec
cld
in
bound
mov
push
jno
rcr
sbb
in
dec
rorl
lret
imul
and
mov
in
lret
push
push
jle
lock
int
cltd
cmp
ja
imul
lret
stos
pushf
and
pop
enter
mov
fisubs
fdivl
in
or
dec
fisttpl
sbb
sbb
add
lds
iret
jbe
mov
or
cmp
sub
ret
mov
inc
ret
call
jne
pop
jb
movsl
test
mov
orb
in
rorb
fmulp
jne
dec
inc
jo
les
iret
pop
and
jb
ljmp
fstpl
popa
and
mov
mov
push
mov
aaa
add
jb
ss
xchg
out
mov
cmp
add
loope
mov
pop
dec
and
fwait
push
sub
mov
mov
xor
xor
mov
mov
push
inc
aas
popa
out
lret
jb
inc
jb
ds
addr16
mov
jno
cld
cmp
cmp
mov
out
push
push
pop
mov
mov
mov
cltd
xchg
push
jb
cmp
adc
movsb
push
push
lods
sub
out
mov
adc
pop
rcl
test
adc
pop
faddp
scas
paddusb
je
outsl
fisttpll
popf
dec
mov
mov
stc
ret
stos
mov
xchg
pop
add
popf
lods
mov
dec
mov
mov
daa
iret
outsb
sahf
into
jl
insb
in
inc
jl
cmpsb
inc
in
notl
sti
fiadds
jge
mulb
cmpsb
push
fldl
jg
mov
enter
sti
rorb
adc
pop
aas
bound
sub
mov
stc
js
nop
imul
icebp
or
push
fstps
loop
into
adc
xchg
aaa
sub
scas
pop
insl
push
mov
sbb
fldenv
pop
mov
jmp
test
and
xchg
adc
xchg
sub
movsb
scas
movsb
iret
lds
mov
lcall
jecxz
xor
jbe
mov
fstl
mov
insb
fucomip
lods
xchg
je
adc
lcall
fnsave
adc
jmp
push
inc
nop
shrl
mov
data16
ret
and
sub
lahf
mov
cli
mov
lods
and
faddl
sahf
out
xor
sub
inc
sbb
adcb
lcall
ja
jmp
and
sahf
adc
cmc
adc
cmc
adc
add
adc
xlat
je
jbe
jg
xchg
pushf
add
dec
mov
xor
sahf
imul
push
sbb
stos
out
add
dec
sub
cmp
dec
ja
dec
insl
mov
test
psubq
fimull
xor
test
pop
andb
aas
dec
aam
mov
xchg
xor
rcll
cmpsb
xlat
mov
filds
fstl
cmp
dec
inc
mov
push
insl
xchg
xchg
shrl
or
inc
and
pop
mov
add
dec
pop
jae
fwait
and
xchg
sarb
mov
push
sarl
repnz
fisubrs
ret
lods
jb
shll
lret
sbb
aam
mov
hlt
pusha
out
in
mov
jge
and
adc
stos
decb
adc
aam
test
and
jmp
push
jle
test
aad
xchg
andl
inc
cmp
dec
dec
bound
mov
shlb
arpl
cmp
fwait
sbb
cmp
insb
das
inc
and
xchg
jb
insb
fisubl
call
cmp
imul
stos
test
jns
cmp
fnstcw
arpl
inc
mov
je
es
sub
sub
mov
je
pop
dec
sub
in
sahf
idivb
inc
cmpsl
mov
dec
shl
add
daa
stos
pop
or
adcb
loope
out
sub
ljmp
stos
sbb
sahf
std
mov
shlb
adc
out
test
push
jno
cmp
cmpsb
or
inc
movsl
das
mov
push
mov
mov
in
inc
leave
adc
or
push
fistl
rcrl
push
xor
adc
pop
fdivrl
inc
inc
push
lcall
lds
js
add
inc
das
mov
push
lock
mov
sub
or
pop
ja
xor
test
cmpsb
push
call
mov
dec
test
jnp
fisubs
dec
inc
or
add
push
mov
or
pop
fcomip
jo
out
inc
fadd
shlb
mov
out
aam
insl
repnz
cmp
out
dec
popf
jo
pop
gs
nop
pop
add
jne
mov
jne
js
xchg
mov
std
add
fwait
push
pop
mov
adc
lea
inc
adc
stos
push
mov
pusha
test
js
jmp
push
pop
pop
adc
lods
sbb
push
or
inc
aam
vsubpd
in
cli
jae
xchg
aaa
mov
push
sub
or
mov
ja
mov
dec
inc
js
fwait
les
or
push
xchg
clc
adc
lock
stos
lods
xchg
mov
cmp
rorb
lock
mov
mov
stos
lret
inc
loop
pop
xor
bound
cmp
dec
pop
push
cltd
jno
sbb
mov
lods
test
inc
aam
pushf
and
fcomps
cmc
sbb
jmp
mov
and
sbb
test
and
jecxz
xor
mov
movsl
icebp
pop
scas
shlb
mov
cmp
jle
lods
jmp
int
dec
insl
shr
outsb
mov
add
loop
cmp
push
and
mov
inc
bound
lcall
movsb
sub
loop
addr16
bound
mov
fsubrl
cmp
mov
inc
loope
xchg
inc
int3
mov
jg
adc
or
in
sbb
nop
xchg
cmp
je
xchg
hlt
int3
xchg
push
and
outsb
into
mov
popa
or
test
pop
sbb
sbb
frstor
jne
fstpt
pop
repz
das
orb
jle
jl
inc
push
insl
cwtl
inc
sbb
mov
adc
mov
stos
cvtps2pd
jbe
ficompl
pop
mov
in
out
lret
push
mov
repz
pop
leave
mov
jmp
jl
mov
dec
arpl
mov
jne
jno
or
cmp
and
arpl
dec
push
or
cwtl
push
les
call
repnz
movsl
xor
push
cmp
mov
and
push
pop
sarb
and
mov
add
xor
stos
or
cmp
adc
sub
divl
imul
pusha
xlat
push
xchg
and
ds
pop
in
sarl
lahf
add
adc
leave
adc
pop
mov
inc
testl
bound
mov
pop
adc
das
jecxz
xchg
mov
push
inc
aas
jno
sub
inc
movsl
pop
movsl
mov
in
std
xchg
aad
cmc
popf
enter
cmp
xlat
xor
push
xchg
pop
inc
xchg
jbe
add
out
jp
ds
fdivrl
mov
or
mov
xchg
in
sar
xchg
mov
xchg
pop
jl
pop
fdivs
jns
rcr
fldl2e
addb
fidivrs
jo
sub
push
insb
mov
dec
imul
hlt
xlat
loopne
into
dec
sbb
mov
mov
jecxz
leave
push
mov
adc
push
lahf
jo
out
push
xchg
icebp
mov
push
dec
mov
scas
sub
mov
loopne
enter
dec
test
les
sarl
inc
mov
stos
ljmp
pop
icebp
sbb
mov
dec
push
test
sti
inc
xchg
aaa
mov
mov
or
aaa
mov
stc
add
lea
add
sahf
mov
cmp
and
and
dec
dec
es
cmp
add
fnstsw
dec
mov
les
ja
pop
jecxz
xor
daa
lock
bound
jns
lcall
sahf
lcall
les
push
sub
or
mov
xchg
movsb
mov
imul
jge
cmp
xor
mov
aas
cmc
mov
mov
stos
sub
dec
daa
mov
aam
cwtl
icebp
push
push
and
mov
mov
xor
icebp
push
pop
xor
or
bound
and
into
aam
outsl
pop
dec
sub
and
push
xchg
loopne
and
add
mov
mov
cmp
jle
cmc
cmp
push
sbbb
adc
fildl
enter
outsb
aaa
in
lods
pushf
mov
loope
bswap
cmp
imul
mov
and
dec
xchg
cmp
adc
sti
pop
repz
in
iret
insb
push
or
xor
sahf
shll
aaa
fs
lcall
cmp
int3
inc
xchg
mov
clc
jecxz
or
iret
sbb
adc
add
pop
push
mov
jge
or
pop
mov
stos
dec
out
rolb
inc
xchg
cmp
inc
inc
xor
es
xlat
insb
cmp
mov
mov
xor
cmc
lret
outsl
stc
and
cmp
leave
lea
sub
test
ret
scas
out
sbb
pop
stc
mov
pop
cwtl
mov
push
dec
test
or
pop
or
push
inc
sbb
jae,pt
push
cmp
in
fs
sub
fnstenv
push
xorl
test
push
inc
sarl
dec
clc
sub
cmc
mov
repnz
fstpl
imul
cmc
mov
scas
sub
cmp
push
xchg
mov
outsb
call
pop
or
imul
adc
jmp
pop
adc
fildl
mov
push
mov
mov
lods
add
es
jmp
orb
mov
adc
sti
repz
stos
and
sti
mov
mov
pop
test
jle
jle
mov
sub
std
fists
add
imul
mov
daa
and
xchg
pop
inc
icebp
cmp
daa
cmp
jge
mov
loopne
adc
mov
jbe
int
push
loopne
mov
je
dec
pop
cmpsl
sub
push
fmuls
add
xor
test
mov
sbb
mov
inc
push
shlb
mov
and
bound
dec
pop
sub
jecxz
dec
sti
mov
adc
dec
inc
mov
ja
inc
in
and
dec
fcompl
pushf
stos
push
xor
loopne
sbb
out
notb
add
cld
int
mov
or
dec
in
xchg
fwait
into
xor
sbb
cmp
push
into
pop
dec
push
leave
fwait
sahf
mov
lahf
push
ds
mov
xorl
out
xor
in
shll
fcmovu
xchg
sbb
int
lcall
push
aaa
sahf
push
imul
fnstcw
aad
xchg
push
in
cmp
negl
pop
int
cmp
pop
out
loop
pushl
add
pop
mov
cmovle
pop
mov
ret
push
push
xor
popf
stc
fsubrs
push
sbb
cmp
fsubrp
push
clc
in
push
dec
mov
jnp
sub
ret
insl
cmpsb
mov
jge
mov
mov
or
mov
in
pop
scas
mov
rcl
mov
je
pop
and
icebp
adc
lods
mov
cs
popa
xor
scas
and
fstpt
push
xchg
das
jae
call
cmpb
jns
das
mov
and
pop
pushf
jmp
and
andb
inc
pop
jne
dec
cs
jle
mov
icebp
ja
jns
or
pop
pop
and
jg
in
ja
jo
pop
lods
subb
mov
lahf
cmc
jle
fsubl
adc
mov
mov
insl
mov
mov
sbb
lock
inc
xor
fisubrs
mov
pushf
in
ljmp
jbe
das
insb
push
sub
sti
ja
push
sbb
aas
mov
push
mov
jns
rorl
leave
mov
ret
ret
into
fimull
xchg
imul
mov
adc
pop
push
jge
xor
ret
xchg
adc
mov
imul
cmp
sbb
lret
dec
or
jl
orb
mov
imul
rcl
sub
lret
mov
mov
push
mov
sub
cmp
push
mov
fdivl
jg
dec
loope
aam
cmpl
xchg
test
cmp
sub
es
out
xor
sbb
adc
sub
insl
leave
or
subb
test
jp
adc
data16
in
xor
dec
lods
xor
pop
lds
mov
xchg
stos
pop
sbb
push
in
xorb
es
into
in
adc
shll
insl
add
mov
jecxz
movsb
into
pop
repz
adc
in
jle
add
dec
pop
nop
jno
in
cmp
and
xchg
stc
mull
arpl
and
and
js
ret
dec
and
pop
jo
sub
fcompl
fnstenv
stos
mov
push
mov
cmc
add
shl
fiadds
test
sbb
mov
ja
fildll
push
jb
out
ret
adc
ret
adc
data16
dec
and
std
pop
fwait
test
popa
fs
push
xlat
adc
or
and
sbb
push
loope
xchg
inc
insl
in
sub
repz
mov
jmp
lock
stos
push
popfw
daa
mov
pop
push
mov
inc
mov
sbb
or
jo
test
jmpw
xor
jbe
jg
out
push
mov
in
sub
pop
nop
subb
dec
outsl
jle,pn
idivb
pop
into
jno
sahf
nop
or
push
and
adc
into
dec
loop
mov
pushf
test
and
sbb
jmp
imul
and
cmpsb
mov
pop
mov
sub
adc
xor
sahf
xchg
push
pop
imul
or
jbe
negb
sbb
push
enter
sbb
aad
fidivrs
push
int3
mov
scas
roll
or
push
je
iret
into
push
push
daa
fcompl
mov
enter
mov
mov
aam
fsubrs
arpl
aam
mov
popf
add
mov
inc
push
jp
stos
scas
inc
test
test
test
outsl
add
jns
lcall
mov
fwait
push
clc
test
xor
xchg
insl
aaa
and
jle
mov
mov
arpl
es
int3
dec
out
sub
shr
cltd
cs
pop
sbb
or
lods
sbb
xor
push
adc
jnp
hlt
fcoml
popf
out
test
or
push
hlt
popl
aaa
pop
js
xor
sbb
pop
in
or
xor
stos
test
mov
fldt
and
cld
fs
in
daa
add
inc
adc
cmp
pop
sub
xor
addl
and
jle,pn
xor
push
movsl
int
pop
icebp
mov
add
xchg
mov
aas
push
lods
lods
lods
and
cmpsb
ljmp
jl
out
pop
nop
xor
aad
xor
roll
call
test
dec
ja
pop
sub
std
push
mov
mov
popa
mov
hlt
rorl
aas
push
push
cmpsb
rol
push
dec
and
repz
dec
pop
mov
loopne
cld
data16
pop
jl
test
arpl
popf
data16
push
cld
dec
pop
call
out
cmp
xlat
out
mov
test
xchg
cmp
inc
adc
push
xchg
xor
popa
shl
test
test
push
or
sub
cwtl
fs
xor
lret
inc
aad
xchg
nop
gs
lock
dec
mov
lods
push
add
and
inc
fs
cmp
in
repz
div
rorl
notb
and
pop
sbb
add
repnz
or
sbb
add
xchg
shr
dec
cmp
cmp
mov
inc
mov
es
mov
imul
or
jne
pop
out
leave
lahf
or
push
scas
adc
out
test
in
mov
cmpsl
jp
aam
divl
int
fsubl
push
add
xor
mov
inc
jno
je
pop
ljmp
sub
push
andb
cmp
mov
jne
imul
ljmp
divl
pop
pop
into
and
xlat
lahf
pushf
or
adc
push
mov
mov
lods
cmp
add
aaa
das
sub
mov
pop
incb
fimuls
push
sar
mov
cmpsb
jae
cmpsl
cs
or
clc
inc
cmpsl
and
addr16
aam
pop
fidivrl
aam
xor
mov
or
call
or
push
jg
fs
push
jne
test
sub
pop
cmp
inc
scas
xchg
jl
xorl
outsb
or
out
add
and
mulb
cmp
xchg
shl
or
and
fistpl
int
pop
adc
pusha
test
xchg
cwtl
inc
js
mov
ret
xchg
sub
and
fld
cltd
pop
lods
ljmp
imul
pop
ds
lcall
fdivrs
ret
iret
test
imul
negl
sub
pop
sahf
leave
clc
inc
mov
sub
inc
cs
xor
rcr
dec
shrb
and
mov
aam
mov
add
in
mov
mov
mov
and
in
icebp
rcll
aad
push
mov
insb
cmp
aas
cmp
testb
jmp
stc
aam
xchg
test
lret
insb
inc
pop
push
inc
and
mov
in
mov
xchg
dec
lret
push
nop
repz
aaa
rolb
jae
xchg
fnstenv
push
sub
mov
and
addb
pushf
xor
mov
fwait
fs
nop
dec
inc
mulb
shrb
loop
in
mov
outsb
lea
mov
or
ficompl
nop
fwait
jo
bound
xlat
dec
sub
lea
adcl
lods
int3
popf
jb
cmc
je
lcall
mov
lods
test
dec
pop
sub
cmp
aad
mov
mov
cmc
push
jmp
sbb
aam
push
xchg
fcompl
in
sub
lock
fstps
popa
shl
push
pop
imul
xchg
rcl
lret
xor
lock
into
mov
ror
nop
popw
in
jmp
cs
and
sbb
shlb
insb
lods
les
incb
cmp
xor
out
jl
cmpsl
mov
mov
cs
lret
scas
cmp
inc
mov
inc
cmpsl
fst
mov
jmp
add
cmp
inc
js
xchg
decl
jg
scas
sbb
fwait
sti
ficompl
xor
sbb
mov
inc
fdiv
xor
mov
xor
pop
mov
push
testl
and
fists
pusha
dec
popa
insb
lcall
dec
inc
je
clc
inc
jl
lahf
mov
jp
sti
dec
jge
sbb
pop
sahf
and
test
mov
fsubs
or
mov
pusha
push
pop
test
addr16
or
mov
xlat
adc
dec
rcrb
mov
int3
fcoml
and
mov
sbb
mov
mov
inc
int
out
call
push
fcoml
adc
fistpll
adcb
testb
in
xchg
ja
leave
xchg
dec
mov
fidivl
addr16
test
push
ficompl
bound
xor
int3
pop
add
repnz
repnz
mov
shll
jne
push
mov
negb
and
or
pop
or
mov
call
movsb
cwtl
test
notb
xchg
leave
cmp
outsb
pushf
loope
xor
mov
cwtl
or
imull
mov
lods
inc
aam
mov
enter
add
fimuls
cs
mov
and
mov
aas
and
popf
pop
mov
lret
mov
mov
fcomip
xlat
jo
jae
insb
scas
stc
outsb
xchg
cltd
test
xchg
xor
inc
push
ljmp
imul
fnstcw
mov
jl
lret
mov
faddl
in
lods
jg
jae
les
sub
mov
notl
mov
push
jg
aaa
stos
lods
jo
xor
lock
stos
pop
sub
pop
xor
hlt
cli
mov
iret
stos
jae
xchg
push
int
es
stos
mov
notb
mov
xchg
out
je
xor
fsubrl
jb
lods
mov
mov
jo
push
xchg
xor
xlat
fsts
adc
xor
popa
sbb
and
dec
sub
flds
imul
les
cmp
xchg
jg
rorl
repnz
mov
dec
pop
jns
jns
lret
stc
cwtl
mov
enter
je
filds
push
xchg
fimull
xor
or
xchg
cmpsl
xchg
dec
lock
mov
cmp
mov
shll
xchg
movsb
in
fimull
and
and
dec
jle
rorl
sarl
scas
push
dec
dec
inc
icebp
ret
cmp
and
adc
jbe
push
fiaddl
fistl
mov
xchg
ss
mov
cmp
mov
jp
sub
push
sahf
pop
bound
ret
jae
xor
lahf
push
push
pop
jo
aam
cmp
mov
rcr
jne
lret
sub
fisttpll
insl
fwait
xchg
data16
pop
adc
aad
mov
sbb
in
div
jo
cs
dec
or
push
xchg
push
push
cmpsb
imul
das
lret
adc
shrb
sbb
and
popa
jb
icebp
push
lret
aaa
sub
call
jge
push
enter
mov
dec
push
imul
or
fisubs
lods
ficomps
sub
out
jecxz
mov
addb
cmc
and
jae
xchg
mov
lret
lods
mov
rorb
mov
outsb
jo
lret
jle
xlat
xor
xchg
dec
out
push
clc
jl
sub
mov
ja
jg
inc
fcoms
push
sub
imul
and
popf
outsl
jmp
les
scas
negl
subb
int
jmp
mov
jne
sahf
cmp
les
mov
mov
jg
jne
and
mov
test
hlt
push
das
jbe
xchg
loopne
repz
outsb
push
addr16
popa
inc
add
ss
add
cmp
rol
jnp
data16
xchg
mov
loopne
std
mov
dec
push
lcall
cli
inc
jle
dec
in
pushf
sub
out
dec
ficoms
loop
daa
dec
fildll
or
jl
test
mov
mov
jge
std
mov
push
addr16
aaa
loopne
nop
adcl
test
leave
inc
or
cvttps2pi
sub
mov
into
or
nop
push
scas
mov
mov
sahf
bound
add
jbe
mov
jne
jno
mov
mov
sub
sub
fisttps
add
icebp
jmp
push
pop
pop
and
or
mov
cmp
mov
pop
arpl
mov
jg
lods
pop
cmp
scas
xlat
mov
cmp
inc
inc
jb
popf
jl
push
bound
inc
sbb
outsl
cltd
sbb
stos
incb
push
movsl
add
jnp
inc
xor
jo
ds
ljmp
sub
call
mov
or
imul
mov
insb
fmuls
fists
pop
incb
loope
dec
sub
ret
cmp
sbb
pop
loopne
add
cmp
lods
test
push
arpl
hlt
shrl
inc
js
cmp
psubsw
test
or
jo
jns
ret
push
pop
aas
mov
mov
data16
dec
adc
loope
dec
mov
lds
mov
xchg
in
cmpsl
test
jns
cmpsl
adc
lock
cld
or
xor
fs
cwtl
popf
jge
jle
mov
pop
adc
mov
pop
faddp
data16
push
out
fxch
sbb
fbld
xchg
out
jno
negl
int3
jmp
rcrl
aam
sub
clc
imul
int3
mov
mov
popa
orl
mov
fwait
lcall
lret
jnp
je
push
mov
test
adc
mov
add
mov
xlat
mov
jno
icebp
adc
int
mov
push
xor
js
add
fs
mov
xlat
push
fistpl
pop
mov
clc
push
pusha
jb
ljmp
pop
test
xchg
inc
das
pop
mov
push
test
fimuls
push
mov
movsb
sub
in
je
cmpb
mov
adc
fbld
xor
mov
cmp
add
dec
imul
popa
pusha
in
leave
jnp
aam
and
outsl
add
mov
push
out
sub
xor
call
in
jb
cwtl
stos
cmpl
popa
mov
or
fmuls
sub
push
lcall
push
xchg
stc
pop
or
fstpl
push
fmul
or
loope
icebp
push
dec
movsl
loope
iret
xchg
cld
lods
je
call
mov
cmp
mov
adc
cs
mov
and
cli
dec
sub
aas
add
scas
sub
adc
adc
mov
push
pushf
pop
in
mov
mov
dec
push
push
jmp
lcall
pop
adc
sarb
fldt
ss
push
shrb
xor
and
lods
repz
jmp
jo
inc
pop
or
dec
divb
and
insl
adc
xchg
stc
scas
mov
test
arpl
ja
xchg
dec
imul
dec
pushl
xor
fisubrs
imul
cmc
pop
inc
fisttpl
stos
inc
inc
pop
repz
gs
fbstp
stos
loope
lret
repnz
enter
jmp
jmp
push
mov
sti
repz
clc
cmp
dec
testl
ds
scas
in
or
lods
fwait
jo
mov
iret
pop
imul
xor
mov
stos
lcall
test
pop
enter
cli
bswap
xchg
rcr
outsb
mov
xor
leave
cltd
adc
lods
or
xchg
loopne
xor
add
xchg
cmpsl
imul
xlat
clc
pop
cmpsb
out
jb
push
cmp
rclb
imul
jge
outsb
ss
add
test
or
lock
ljmp
insl
cmpsl
or
cs
in
mov
andb
push
ret
int
rolb
cs
or
ja
jmp
pop
mov
cld
shrl
jbe
xor
sub
test
inc
fcoms
jno
adc
add
mov
mov
add
jno
stc
aad
lret
enter
dec
int
mov
fdivl
mov
jno
cwtl
jp
adc
and
mov
mov
int3
mov
daa
lcall
or
dec
loopne
pop
pop
les
jno
shrl
call
lock
jle
dec
clc
dec
ret
std
dec
scas
fsts
adc
sub
or
add
mov
xchg
xor
or
push
leave
dec
pop
jecxz
sbb
mov
mov
and
sbb
sub
out
xchg
push
fcmovnb
sub
loop
mov
data16
clc
push
inc
hlt
dec
shrl
and
stc
fwait
in
mov
enter
mov
mov
adc
in
sbb
repz
test
inc
push
int3
mov
push
mov
mov
xor
jl
mov
pop
lock
jge
mov
add
cltd
inc
or
je
js
jp
pop
pop
and
dec
repz
ret
xor
andl
xchg
or
cmp
jne
or
add
jns
imul
aaa
fdiv
inc
pop
pop
ljmp
enter
nopl
jg
loop
out
pop
push
sub
idivl
xchg
arpl
das
negb
pop
sbb
ret
testl
js
sub
in
shll
lds
roll
jl
dec
mov
fwait
mov
and
sbb
rcll
out
dec
test
jmp
lods
addl
adc
push
loope
mov
pop
cmpsb
dec
xor
in
fmul
inc
inc
jbe
std
cmc
add
fimull
pop
int
mov
test
stc
jg
mov
cmp
push
mov
stos
fs
rdpmc
call
cmpsb
fisttpl
outsl
lret
outsl
sahf
or
loope
or
add
pop
addb
stos
dec
lcall
stos
adc
jbe
jb
dec
mov
add
mov
lret
fcmovne
test
xor
xchg
into
repnz
mov
in
pop
lret
add
push
mov
enter
icebp
stos
xchg
push
insb
pop
icebp
cs
and
and
adc
adc
xchg
movsl
xor
lods
lock
leave
fs
jecxz
fs
repz
ficomps
jns
nop
sbb
arpl
cli
adc
mov
and
jo
fmuls
adc
mov
out
loope
or
push
mov
cli
lret
cmpsl
std
iret
mov
inc
mov
sbb
pop
pop
push
imul
repz
adc
cltd
mov
test
ret
ficompl
jmp
addr16
lret
insl
pop
or
movsb
icebp
mov
stc
mov
push
and
jae
jb
cwtl
ret
mov
push
movsb
lds
cltd
iret
push
xorl
mov
and
stos
cmpsb
cld
shll
ffree
in
sbb
sbb
inc
mov
cltd
into
test
pcmpgtw
dec
icebp
aad
push
sti
std
lret
ss
movsl
pop
pop
xlat
or
movsl
mov
cld
andb
pushf
lcall
adc
mov
js
fmull
xchg
clc
daa
jmp
hlt
pusha
arpl
mov
fldcw
xor
sbb
cmc
cmpsl
lcall
sub
pop
or
dec
lea
xor
in
dec
lret
stos
icebp
jnp
negl
ja
in
int
jbe
push
jb
and
xchg
nop
pop
aas
popa
leave
scas
fwait
loope
add
inc
add
mov
sub
divl
insl
sbb
fisubrs
inc
pop
pop
jo
inc
cmpsb
imul
dec
das
mov
jb
jbe
cmp
shl
dec
repz
mov
hlt
inc
movsl
popf
adc
dec
outsb
fsubrs
cmp
cmp
inc
into
stos
fdivl
mov
aaa
addr16
mov
rorb
daa
aam
bound
mov
shrl
push
pusha
sbb
mov
jmp
cmp
jg
mov
mov
xor
cmc
add
jae
ja
fidivrl
add
cwtl
dec
add
mov
in
push
cmc
repnz
imul
decb
in
daa
dec
lds
in
js
xchg
cmpl
iret
popf
mov
ja
xchg
out
jecxz
pusha
clc
movsl
stos
jecxz
lock
or
loopne
adc
enter
loopne
rdtsc
inc
data16
pop
int
into
fldt
fwait
push
loop
out
rorb
daa
adc
inc
shll
xchg
in
inc
ljmp
gs
dec
das
or
call
sub
mov
push
scas
dec
lahf
push
in
mov
in
negb
rcl
lods
adc
xchg
push
sub
test
sbb
icebp
mov
cld
call
jae
int3
push
add
sbb
pushf
jb
outsb
mov
pop
jns
mov
stc
jns,pt
inc
sti
mov
popf
dec
dec
xchg
callw
roll
jnp
lret
pop
push
in
lret
mov
and
in
cmp
fsubl
cmp
ja
jmp
cld
stc
enter
xchg
clc
mov
fnstcw
stc
lcall
ja
adc
cmp
mov
repz
decb
icebp
push
movsl
sbb
movsl
pop
mov
jg
popa
cwtl
cwtl
aaa
fmuls
daa
sub
jns
xchg
mov
xor
ss
test
andb
dec
mov
popa
out
clc
ss
loopne
push
jno
push
mov
shlb
ficomps
in
xchg
insb
mov
adc
nop
imul
sbb
js
or
inc
adcl
push
dec
mov
pop
sub
cs
cli
ret
sub
and
cmp
xchg
xchg
fmuls
push
inc
add
jp
xchg
pusha
movsl
std
xchg
xor
lock
dec
mov
and
roll
mov
mov
cmpsl
pop
mov
xor
and
mov
lock
loop
pop
pop
bound
aaa
cmp
and
fwait
or
adc
icebp
imul
pop
xchg
rclb
push
mov
add
mov
xchg
jg
xor
push
lret
and
mov
stos
or
xchg
pop
lret
in
adc
add
xchg
sbb
test
dec
ret
hlt
xor
addl
lea
repz
loope
out
clc
dec
lahf
fcmovb
in
aas
adc
dec
push
dec
imull
sub
dec
ror
push
fnsave
xor
jl
out
add
add
mov
adc
sbb
mov
fdivrl
inc
inc
add
repz
and
pop
ljmp
daa
clc
leave
std
es
shll
dec
jno
lret
enter
imul
pop
sbb
or
mov
fcoml
cmp
test
mov
xchg
push
ss
imul
dec
in
xchg
inc
cmpsl
mov
pand
aad
lret
out
dec
xor
adc
test
je
call
and
pop
loope
inc
out
xchg
iret
imul
sbbl
mov
jg
sti
jne
stc
fistl
mov
mov
mov
push
pop
cltd
into
cmp
xor
insb
cli
inc
push
cs
inc
loopne
adc
and
jae
add
ja
aam
stos
aaa
call
call
into
js
ja
shrl
cs
hlt
add
in
xchg
lds
pusha
mov
pop
and
or
push
jne
xor
mov
cmp
mov
js
cmpsl
sub
outsb
sub
sbb
xor
es
jge
push
fisubrs
andl
nop
stc
mov
and
movsb
movsl
dec
movsb
adc
shll
or
push
imul
sbb
adc
out
mov
test
jnp
mov
mov
inc
jecxz
adc
js
dec
inc
cmp
add
fwait
push
push
push
jnp
push
or
inc
ja
aaa
test
pop
ret
add
sub
and
popa
pop
xchg
inc
les
movl
mov
xor
lret
push
push
jo
cmp
out
mov
adc
or
pop
mov
xor
idivl
xchg
loope
push
cs
loope
adc
and
inc
daa
jnp
iret
rclb
jne
adc
fwait
mov
ds
or
pop
sti
xor
fisubl
push
mov
xlat
and
sarl
mov
outsb
mov
mov
push
out
mov
mov
mov
mov
mov
add
out
mov
lcall
adc
xchg
into
daa
lcall
daa
or
push
fldl
sub
aam
pushf
xchg
fdivl
xchg
jnp
inc
dec
push
aam
test
nop
adc
ds
dec
mov
xor
jp
movsb
shll
bound
mov
lret
push
shrl
or
leave
xchg
movsl
mov
mov
push
enter
mov
xor
xchg
pushf
movsb
pop
stc
cmp
in
xor
cs
arpl
sarl
xor
lds
aaa
cld
jmp
aas
dec
dec
test
xor
aas
jo
fdivrl
popa
mov
add
into
mov
jmp
fs
adc
pusha
repnz
mov
fwait
scas
clc
cmp
cmp
adc
mov
inc
bound
out
inc
out
movsb
mov
pop
pop
cmp
test
fsubp
sarb
jo
cltd
rcrl
xchg
push
rolb
repz
xlat
popf
mov
and
mov
fstpl
xchg
out
pop
adc
mov
mov
inc
dec
imul
test
dec
jno
jb
push
fwait
xchg
jno
xor
std
mov
nop
pop
pusha
jmp
dec
in
mov
mov
ljmp
xchg
loope
insl
add
mov
or
inc
sub
lds
jnp
xchg
pop
inc
bound
lock
mov
pusha
pop
and
or
jp
loopne
push
call
add
dec
sahf
dec
mov
sub
mov
jl
leave
adc
mov
mov
and
jbe
fld1
cltd
add
push
xor
and
in
mov
add
roll
adc
cmp
cmc
mov
scas
inc
aad
sub
lcall
pushf
pop
mov
mov
mov
jp
push
mov
dec
stc
mov
pop
or
jl
shll
std
cmp
push
insb
lret
push
cli
dec
fidivrl
cmp
lds
mov
pop
arpl
mov
push
mov
sub
pop
ret
arpl
sbb
cmp
outsl
cli
inc
decl
mov
mov
dec
aam
mov
decl
push
jns
xchg
fstpt
ret
mov
in
outsl
lock
arpl
cwtl
pusha
push
push
insb
add
mov
pop
mov
inc
and
mov
daa
jns
jne
and
sub
js
in
vmovlps
and
call
hlt
test
outsl
add
push
push
insb
lret
xchg
divl
popaw
sub
idivb
in
fstps
fs
ss
mov
push
lret
shr
mov
inc
aas
xchg
pop
or
test
ja
jmp
outsb
inc
ret
aaa
sub
xor
push
pop
outsl
mov
stos
stos
popa
xchg
dec
push
repz
imulb
push
sarb
mov
test
pop
rclb
xchg
addb
pop
dec
out
cmp
or
dec
outsb
mov
add
sbb
xchg
lahf
xchg
mov
xchg
cmp
ja
ret
mov
imul
hlt
cmp
cmpsl
std
into
inc
or
sub
sti
out
mov
jmp
std
mov
jl
xchg
adc
enter
push
sbb
adc
lods
leave
push
fimuls
arpl
dec
cli
jge
in
xchg
adc
pusha
int3
into
cltd
jle
movsl
mov
fidivs
loope
push
fwait
cmp
pushf
xor
pop
or
imul
inc
in
ret
sarb
mov
xchg
pop
push
loope
xchg
std
sbb
rcrb
jb
sti
or
sub
dec
mov
mov
out
addr16
mov
loop
xchg
cwtl
jb
rclb
sar
push
inc
mov
push
pushf
mov
xor
in
insl
lea
xchg
mov
adc
xor
inc
cmp
xchg
test
fisttpll
inc
xor
adc
fisttpll
insl
inc
inc
dec
xor
sub
lea
outsl
jbe
fdivrs
pop
repnz
movsl
jo
xorl
push
push
adc
ret
ja
scas
icebp
hlt
xor
mov
push
mov
out
xor
sbb
add
insl
xchg
adc
inc
shlb
daa
jb
adc
fisttpl
into
jns
sub
mov
lea
fstpl
cmp
cmc
push
mov
decl
mov
cmc
mov
jne
sarb
and
shlb
mov
ret
lods
mov
pop
and
loope
xchg
and
inc
fnstsw
insl
aam
fmull
sbb
js
aad
pop
cmpsl
lock
inc
mov
outsb
aas
popa
xor
dec
js
into
imull
cmp
adc
xchg
aaa
cmpb
loope
jbe
pushf
cmc
jo
mov
fs
mov
jns
push
jmp
mov
stos
xor
adc
dec
call
pop
pop
lods
mov
lret
mov
pop
mov
inc
add
push
insl
jg
cs
mov
mov
popf
shll
dec
imul
mov
icebp
jb
sahf
lret
mov
sbb
mov
pop
adc
mov
and
lods
jmp
hlt
xchg
into
negl
stc
jp
repz
push
fs
movsl
add
push
int
add
mov
xchg
insb
fists
mov
dec
mov
dec
mov
outsl
add
aad
mov
repnz
adc
fxam
mov
push
cmp
and
mov
int
fiaddl
orb
rcrl
outsb
repz
addr16
pop
xchg
cli
sets
in
inc
mov
outsl
inc
mov
dec
lods
addb
cmc
setne
dec
sti
int3
jg
mov
sub
loop
dec
aad
loop
inc
mov
dec
stc
add
and
jmp
mov
xchg
hlt
mov
ja
sbb
fdivrs
cmp
add
pop
iret
or
imul
insb
mov
xor
dec
mov
sarb
mov
rolb
jo
faddl
mov
pop
sub
arpl
ja
loope
dec
add
xor
cmp
inc
pop
push
ret
jp
jae
shlb
decl
test
insl
stos
jns
mov
dec
lods
add
aaa
js
stc
sbb
jae
xchg
mov
inc
mov
xor
out
jno
adcl
jp
xor
in
mov
mov
repnz
pop
pop
mov
out
cmpsb
push
loop
xchg
mov
repz
ret
add
xor
xor
adc
ja
ljmp
adc
nop
cmp
int
pop
aam
and
or
inc
pop
ja
xlat
cmp
jg
mov
sub
sub
pop
lock
sti
mov
std
jbe
or
data16
or
rcrb
dec
movsb
push
jo
fldt
into
inc
loope
jecxz
and
push
les
dec
shlb
lahf
pop
fidivs
push
or
adc
pop
mov
and
cmpsl
sbb
andl
pop
test
mov
mov
loop
addb
int
jecxz
paddd
mov
call
fstpt
sbb
es
add
cld
cmp
xlat
ds
lds
pop
and
nop
jecxz
jl
add
mov
aam
pop
popa
jle
or
cli
mov
xchg
fisubl
mov
dec
fisttps
insl
mov
scas
mov
rclb
lret
jle
or
sub
gs
mov
ror
push
insb
cmp
rolb
sahf
ss
and
push
mov
enter
mov
mov
xchg
out
lds
pushf
mov
or
dec
inc
xlat
add
dec
loope
jmp
mov
mov
sbb
mov
dec
add
pop
pop
repz
sbb
repnz
jne
xchg
xchg
sbb
lea
sbb
dec
sbb
add
cld
dec
stos
and
xor
mov
push
mov
in
out
sbb
js
fisubs
xchg
jl
sahf
cmp
cmpsl
or
xlat
lods
xor
fildl
out
dec
mov
push
jmp
test
mov
push
fidivl
or
daa
jmp
pop
popf
mov
icebp
jl
mov
adc
testl
sub
iret
test
hlt
addr16
out
neg
repnz
js
mov
jp
dec
xor
xchg
call
jno
out
dec
xor
adc
cmp
mov
fwait
pop
xchg
jle
loop
mov
inc
adc
dec
sahf
dec
dec
mov
push
subb
cmp
movb
xchg
bound
cwtl
stos
mov
dec
jne
mov
leave
iret
mov
psllw
incl
mov
out
lods
mov
push
pop
sub
sbbl
pop
adc
jp
jge
stos
aaa
jp
int3
mov
imul
out
das
inc
pop
add
ss
and
mov
adc
dec
xchg
addr16
sub
add
cmp
add
out
std
mov
jne
inc
cmc
sub
lcall
sub
jo
cmp
mov
push
cmpsl
enter
fldt
xlat
or
xchg
js
iret
aaa
jp
adc
filds
sub
scas
ss
lea
ret
jmp
mov
cltd
loope
scas
adc
xchg
cmp
das
mov
xchg
fidivrl
rcll
mulb
adc
out
idiv
sbb
add
sub
sub
out
push
and
jp
fmull
sub
decl
dec
xor
adc
and
das
je
cwtl
ja
mov
inc
loope
push
mov
mov
lock
je
pusha
mov
push
in
push
ficoms
data16
std
pop
mov
cmp
pusha
dec
sahf
adc
jno
enter
mov
sbb
daa
lret
sub
repz
adc
or
xchg
icebp
cli
insb
loop
pop
std
les
out
shlb
pusha
or
dec
pop
sarl
sub
out
data16
test
shlb
loope
mov
mov
std
add
call
mov
int3
mov
sbbl
ret
jne
xchg
roll
xchg
mov
je
pop
jmp
jmp
mov
jns
xor
dec
push
in
mov
add
lcall
xchg
jle
xchg
mov
fldl
mov
jmp
xchg
pop
fbstp
dec
dec
jno
push
pushf
push
xor
sbb
movsl
xchg
push
imul
lds
mov
std
ja
pop
add
out
clc
inc
movsb
jecxz
emms
fs
cmp
mov
icebp
lods
add
dec
insb
mov
dec
sahf
loop
sarb
test
enter
test
cmpsb
cs
push
cld
lods
pop
push
jno
mov
stos
in
adc
xchg
push
add
sbb
xchg
adc
adc
mov
sub
add
mov
ret
or
int
jmp
popa
push
ja
cmp
test
and
xor
imul
xchg
sub
xor
test
xor
mov
enterw
and
or
cs
out
int
aad
xor
fidivrl
push
ds
jecxz
xor
test
lods
adc
sub
xchg
lea
daa
or
sbb
aaa
call
pop
gs
pop
out
cmc
movsl
sahf
mov
pop
insb
mov
xchg
lods
out
jo
xor
fs
push
pop
inc
pop
mov
andl
adc
es
and
mov
cmp
add
clc
inc
out
xchg
repnz
or
xchg
add
push
adc
shl
popf
mov
pop
sahf
pop
mov
push
sbb
and
insb
jae
jo
repnz
pop
dec
mov
stc
imulb
idivl
cmp
das
int3
bound
sbb
ja
mov
cmc
stos
shl
mov
outsl
shrb
and
in
cwtl
sahf
fwait
xchg
rsm
ret
inc
mov
fsubs
stc
cltd
inc
inc
imul
inc
or
inc
jg
mov
pushf
lds
das
jmp
les
dec
aad
aad
mov
das
flds
decl
or
inc
dec
lret
movsl
push
jnp
mov
cwtl
pop
sbb
pop
mov
inc
inc
xor
imull
lock
pop
xchg
imul
mov
gs
and
mov
ljmp
sub
imul
xchg
in
imulb
mov
add
fdivr
idiv
push
cli
lods
dec
out
mov
cli
dec
lods
repnz
cs
insb
icebp
mov
hlt
iret
sbb
aam
jl
xor
stos
jmp
inc
dec
pop
jb
repz
inc
push
into
xchg
inc
or
fsubrs
test
sbb
arpl
subl
in
clc
out
scas
push
lret
jge
arpl
rorb
sar
sbb
jne
mov
push
out
mov
pop
adc
pop
sbbb
mov
cmp
add
mov
xchg
inc
cmc
sbb
hlt
daa
cmp
mov
and
ljmp
push
out
jb
fsubrs
sub
out
lcall
shlb
aad
es
pop
inc
pop
add
loop
dec
pop
adc
fucomp
in
mov
sbbl
movsl
lods
jnp
out
imul
fisttpl
jo
adc
or
lea
mov
cmp
stc
mov
shlb
pop
repz
out
inc
addr16
mov
jne
subl
insl
cmp
scas
cmpsl
hlt
ffreep
ja
jb
movsl
fmul
lods
pop
cmp
add
sahf
or
dec
inc
xchg
push
xor
xlat
hlt
jmp
lret
frstor
repnz
lods
lcall
jb
test
into
sbb
stos
sbb
pop
cs
in
or
in
negl
arpl
int
or
je
jnp
mov
daa
fbstp
mov
jo
mov
or
xor
out
mov
sbb
aaa
mov
mov
sub
mov
push
gs
je
and
shll
out
mov
mov
or
rol
add
lea
mov
mov
xor
mov
inc
js
lods
mov
call
insb
fidivs
lahf
mov
out
mov
pop
in
out
cmp
xor
addr16
push
inc
cmp
out
aas
jb
push
add
loopne
mov
lret
enter
and
jns
pushf
gs
fidivs
js
add
fstps
call
daa
mov
pop
out
test
xchg
jnp
imul
pop
arpl
mov
out
jl
rclb
or
adc
jmp
ret
sub
push
push
shll
test
mov
stos
aas
and
pushf
iret
pop
sbb
push
cmp
jl
mov
mov
fsubs
xchg
pop
mov
popa
icebp
mov
jns
int3
scas
jns
pop
cmp
fwait
scas
movsl
std
fcmove
sbb
jmp
mov
bswap
sub
sbb
jo
push
test
call
loope
mov
jp
enter
sti
push
add
les
mov
scas
mov
sub
inc
jge
inc
or
nop
push
or
xchg
mov
push
mov
popf
cmp
cmc
push
cs
xor
aas
popa
inc
lods
cmp
test
stc
cltd
les
cmp
rclb
xor
sarl
mov
mov
mov
dec
inc
cltd
add
sub
enter
insl
sbb
push
lock
and
leave
push
sub
mov
cmp
pop
loopne
das
test
imul
test
fxch
mov
scas
push
imul
jbe
sub
into
jmp
lcall
dec
test
fs
rolb
scas
xchg
repz
roll
xor
push
lret
mov
add
fimull
fldt
jmp
push
cmpsb
pop
push
inc
push
std
mov
dec
and
rorl
icebp
sahf
inc
fnstsw
sbb
and
ljmp
jge
jne
testb
xor
lea
aas
add
repz
movsl
les
jmp
inc
mov
stc
dec
cmpsl
cmpsb
pop
pop
popf
xchg
loop
add
cmc
pusha
out
decl
jg
adc
or
mov
scas
lock
dec
loop
in
mov
mov
les
test
dec
and
loopne
dec
dec
push
notb
cmp
cmp
inc
pop
clc
jecxz
or
mov
mull
mov
or
xchg
test
mov
pop
ret
pusha
add
pushf
out
jo
add
xlat
adc
xchg
ljmp
xchg
test
jne
lods
repnz
dec
mov
push
jp
fs
jecxz
aaa
jae
jl
push
movsb
or
add
or
inc
out
jns
lea
sub
fisubrl
and
pop
mov
push
sbb
hlt
xchg
xor
es
or
ljmp
pop
sub
mov
daa
shll
adc
ret
out
mov
mov
rol
dec
or
test
outsb
dec
jl
inc
and
je
mov
mov
stos
inc
jecxz
out
int3
lods
aaa
jbe
arpl
repz
nop
push
pusha
cmp
pushf
outsl
mov
mov
in
add
es
lds
fistpll
es
or
push
loop
adc
pop
cmp
mov
nop
jae
mov
push
daa
add
imul
in
sub
sub
cmc
adc
push
bound
cmpsb
dec
sbb
adc
insb
xor
pop
push
loopne
stos
lcall
add
pop
inc
ret
pop
ljmp
push
int
mov
fwait
adc
push
das
in
icebp
mulb
inc
xchg
aaa
push
mov
or
lea
add
cld
loope
inc
jo
dec
clc
or
add
mov
and
xor
imul
adc
push
adc
push
and
icebp
fldcw
or
push
mov
dec
aad
pop
lcall
pop
inc
push
out
pop
iret
sbb
xchg
mov
shl
mov
sub
fistps
daa
sbb
repnz
and
push
add
inc
pop
pushf
pusha
mov
xchg
sbb
sbb
loop
lods
into
mov
and
fsubrs
inc
sbb
not
sbb
movsl
lcall
enter
insl
ja
cmp
call
ljmp
push
mov
and
fsub
mov
lods
stos
xor
inc
dec
ljmp
je
clc
ror
push
dec
push
fs
xchg
jbe
jp
xchg
mov
mov
and
lret
sub
and
jl
add
mov
jmp
sbb
push
fnstenv
jnp
cmp
push
mov
and
inc
pop
les
or
mov
mov
dec
repnz
shlb
xchg
xchg
outsl
sub
mov
mov
sbb
push
fdivrs
in
jns
jmp
clc
add
mov
cmpl
push
aam
mov
mov
jecxz
and
jae
add
push
jb
xor
negl
xor
mov
in
jecxz
xchg
and
mov
movsl
mov
js
or
mov
mov
inc
ret
test
idivb
jne
iret
ss
mov
aam
ret
cwtl
pop
cmpsb
arpl
adc
les
les
add
adcb
cmp
in
loopne
loopne
in
mov
stc
mov
adc
mov
sbb
xchg
loope
je
lods
loopne
lret
push
adc
fisubrs
dec
lods
xchg
add
cltd
cmpsb
adc
iret
xor
inc
stos
lods
lods
inc
fs
xlat
mov
das
addr16
lods
or
pop
ret
cmpsb
push
imul
lods
dec
push
fs
je
daa
xchg
xor
jecxz
fisubrs
loopne
dec
in
mov
add
adc
pop
and
lahf
dec
pop
xor
mov
add
xchg
add
inc
xor
xor
in
imul
addr16
iret
mov
test
push
or
ret
jge
sub
adc
lods
lds
sti
icebp
xor
adc
je
cwtl
clc
ret
mov
and
repnz
cld
xchg
xchg
in
pop
cld
adc
xchg
mov
outsl
push
and
std
xor
into
out
arpl
outsb
jae
cwtl
test
mov
nop
push
mov
fwait
test
lcall
adc
outsl
lcall
mov
outsb
xor
lods
insb
ja
sub
jmp
sub
dec
movsl
mov
cmp
pop
sbb
scas
jl
inc
push
enter
scas
cmpsl
das
outsl
das
and
loop
int
fbld
les
popa
ret
xor
data16
inc
sbb
unpcklps
lret
daa
loope
cwtl
dec
xor
das
sti
xor
jbe
push
xor
jb
sub
out
or
mov
push
adc
jnp
lcall
pop
dec
shrl
aam
xchg
sbb
sbb
popa
push
dec
jecxz
dec
jle
pop
imul
data16
jae
test
or
push
testl
xchg
and
mov
cwtl
push
mov
jne
shr
mov
inc
push
ja
mov
aam
iret
hlt
or
cmp
loopne
out
out
loopne
adc
push
popf
xchg
lea
mov
outsl
outsl
cli
ds
lahf
repnz
fs
and
ja
scas
add
int3
enter
sbb
les
in
hlt
movb
jmp
and
lods
jg
lret
ja
mov
adc
sub
daa
or
cmp
fucomi
jo
cltd
stos
leave
lahf
and
adc
mov
ret
scas
stos
push
mov
pusha
mov
stc
adc
xchg
mov
cmpsb
mov
inc
xlat
and
dec
jbe
sbb
mov
mov
rorl
push
sub
repnz
mov
or
int3
push
add
pop
mov
into
mov
mov
popf
es
mov
mov
xor
mov
xor
mov
popa
xchg
xchg
add
mov
std
xchg
adc
jmp
mull
xchg
ljmp
and
cmp
and
cmc
inc
lds
pop
cmp
cmp
pop
je
sbb
movl
jno
rcrb
cmp
repz
push
adc
out
sub
inc
std
pop
icebp
inc
xlat
push
dec
test
or
pop
fmuls
lahf
repnz
inc
inc
xor
sub
stos
mov
xchg
montmul
cmpsb
ret
xchg
jp
andb
jecxz
xor
clc
test
push
loop
cs
aaa
test
imull
push
sbb
adc
cmpsb
or
arpl
push
shlb
gs
xchg
pop
imul
pop
add
xchg
dec
mov
repnz
xor
push
sbb
mov
cwtl
movsl
jecxz
sub
jbe
inc
and
into
xor
inc
jge
loopne
sub
jo
popf
push
data16
imul
stos
es
lods
testl
hlt
xchg
lret
mov
dec
addr16
mov
mov
lods
mov
mov
xchg
lea
popa
jbe
inc
pop
fisubrl
sbb
insb
mov
psrad
daa
add
inc
fmull
push
jl
add
sub
inc
or
mov
sahf
lea
add
push
dec
daa
cmpsl
cmp
fistpll
fstl
jnp
xchg
xchg
adc
cmc
mov
xchg
ds
sbb
xor
jns
add
or
clc
sar
jg
lret
sbb
jno
loope
cmp
testl
sahf
in
dec
les
adc
lds
pop
inc
out
cs
je
test
pop
ja
cmp
shlb
and
movsb
imulb
xor
dec
sbb
jnp
aaa
add
adc
adc
push
cmpsb
cmp
shrl
pop
cmp
adc
mov
mov
push
adc
dec
pop
or
out
lods
xor
xlat
pop
lock
stos
cmpsl
sbb
push
fisubrs
xor
sub
xor
fnstsw
pop
push
jg
pop
leave
rcrb
out
sub
xchg
stos
insl
cli
sbb
mov
xchg
and
repz
mov
jp
icebp
call
ljmp
push
das
pop
xor
test
mov
xor
pop
pop
popa
jnp
pop
pop
out
and
movsb
adc
mov
cmp
int
data16
sub
mov
sub
mov
dec
add
sbb
or
sahf
add
repz
test
pop
jl
sti
sahf
pop
lahf
fcmovnbe
cwtl
pop
mov
mov
add
stc
add
sub
testb
xchg
popa
iret
adc
push
mov
push
loop
and
fsts
and
dec
ds
fsubr
mov
enter
idivb
lcall
cli
addr16
ret
int3
rcll
neg
cmp
dec
cmp
loop
sbb
not
xor
repnz
cmp
shrl
xchg
notl
push
and
jae
mov
mov
mov
xchg
arpl
xlat
pop
leave
aas
sbb
or
and
xlat
test
mov
je
repz
mov
push
popa
ds
adc
sbb
adcb
fistpl
jp
test
pop
inc
jno
mov
outsb
negb
iret
cmpsl
xor
mov
dec
testb
pop
fdivs
or
loope
adc
leave
or
imulb
xlat
scas
jl
into
mov
in
jge
xor
repz
lret
ds
pop
cmp
pushf
es
sbb
xchg
xlat
lds
arpl
andl
adc
lds
xor
aaa
dec
arpl
je
icebp
loope
mov
cmc
clc
inc
dec
rorl
fcmovb
pop
mov
ds
fsub
fisubs
popa
and
push
push
aad
gs
mov
lahf
push
jb
cs
add
push
jge
das
mov
xor
inc
dec
mov
xchg
push
mov
mov
call
inc
stos
cmpsb
mov
sahf
jmp
xor
mov
and
mov
int3
das
lock
xor
dec
int3
add
test
jne
dec
sub
stc
movsl
pop
adc
ret
pop
insb
push
pop
cmc
or
pop
scas
clc
mov
sub
pop
nop
loop
inc
fcmovbe
mov
pop
daa
in
movsl
test
mov
sbb
or
mov
adc
arpl
xchg
popf
inc
jne
jns
movsb
push
jae
imul
dec
jmp
add
jne
lea
enter
test
aam
or
out
arpl
jb
test
test
add
xor
popa
cmp
popa
mov
xorb
sbb
xchg
inc
lret
imul
jbe
clc
es
popw
loope
push
ss
lret
lds
add
repz
out
test
jge
or
sbb
mov
cmp
popa
mov
in
lahf
fstps
adc
out
sarb
sar
stos
js
pop
xor
mov
adc
add
aaa
add
stos
mov
in
mov
xchg
mov
daa
cli
inc
pop
xor
mov
mov
ficompl
or
mov
daa
inc
loop
sbb
js
sbb
xorb
inc
inc
or
cltd
jae
mov
xchg
pop
pop
adc
mov
pushf
or
xor
mov
cmp
fdivrs
cmovp
xchg
dec
push
mov
out
pop
insb
imul
inc
ret
icebp
int
push
xchg
out
std
mov
ja
into
cwtl
clc
gs
pop
xchg
xor
jp
bound
mov
inc
mov
outsl
mov
lea
jmp
pop
inc
push
div
aaa
add
popa
adc
ficoms
imull
xor
or
ret
int3
add
inc
mov
das
pop
push
hlt
imul
dec
xor
idivl
jg
sub
jae
inc
dec
dec
stos
and
mov
push
scas
xor
arpl
pop
loope
in
push
mov
out
push
mov
movsl
jmp
dec
sbb
ja
dec
jg
and
in
jle
adc
cmp
add
pop
mov
mov
stos
in
mov
inc
pop
mov
and
movsl
sub
mov
and
mov
fdivrs
mov
add
push
imul
icebp
out
jg
pop
xchg
inc
mov
add
mov
das
jge
jecxz
sub
inc
faddp
mov
int
mov
mov
mov
insl
sbb
push
mov
push
scas
xor
dec
mov
clc
fdivs
gs
mov
sub
sbb
in
fisubs
jbe
in
subb
mov
push
inc
imul
dec
jo
mov
dec
pop
je
xchg
imul
in
push
ds
xchg
dec
inc
push
jecxz
inc
iret
lea
jb
pop
mov
and
flds
and
movsl
add
ret
addl
dec
ds
fadds
js
pushf
mov
sti
adc
add
je
shrl
add
mov
sbb
jecxz
fdivl
dec
xor
xchg
pushf
lcall
std
xlat
mov
enter
jge
or
mov
mov
clc
pop
cwtl
imulb
dec
rcrl
or
or
sbb
outsl
lds
mov
jb
push
jae
xor
jae
lods
sub
insb
dec
mov
xor
dec
pop
adc
cmp
movsb
fildll
and
push
into
jbe
es
mov
push
adc
push
test
jp
cmp
xor
xlat
push
cmp
out
xchg
add
push
cmp
aad
adc
mov
arpl
int3
cmpsb
lea
jle
pop
jns
cmp
addb
and
out
int3
repnz
lahf
mov
mov
xchg
add
dec
fcomps
outsl
push
adc
adc
jo
daa
popa
pop
jge
pushl
mov
ds
mov
xchg
or
mov
mov
xchg
inc
jmp
shrl
push
adc
adc
fcoml
nop
das
and
mov
mov
mov
sbb
adc
add
xor
jb
inc
das
insb
cmp
jl
cmp
fstl
adc
fisubrs
in
lahf
insl
incb
or
and
or
sub
push
test
jp
imul
jnp
sub
xchg
jae
pop
or
shll
jno
rcll
mov
xchg
shll
jmp
je
ret
out
lret
int
lret
hlt
or
lahf
adc
sub
mov
sti
pop
sub
jp
mov
fwait
pop
mov
and
xchg
loope
ret
mov
adcl
lods
pop
xor
andl
cs
pop
or
ds
xor
incb
and
jmp
pushf
dec
sub
in
icebp
inc
bound
rcll
and
test
icebp
out
andl
mov
jb
test
adc
mov
imul
mov
push
push
mov
pusha
push
dec
pushl
xorb
push
and
mov
mov
push
pop
pop
cmovne
push
xor
cmp
lcall
je
and
cmp
punpckhbw
jbe
mov
dec
mov
jae
inc
mov
mov
mov
addl
mov
insb
add
mov
mov
xor
flds
fucomi
lock
sbb
shl
push
mov
push
mov
jno
aas
jo
inc
inc
pop
sub
popf
lods
lahf
xor
mov
and
jo
cmp
or
sbb
lds
call
cmp
out
jb
and
jns
out
adc
jae
or
sub
fcompl
mov
pop
sbb
add
jb
scas
out
test
mov
daa
inc
jns
mov
cs
fsubr
in
stc
mov
or
mov
push
ficoml
mov
xor
pop
inc
neg
or
add
lahf
in
cltd
jne
lret
iret
jle
cmpsl
push
cmpsl
add
fcoml
jle
scas
sub
jmp
andl
mov
cli
shlb
mov
adc
movsb
jp
cmp
fdivs
lods
movsb
jne
xchg
ret
ljmp
pop
lret
test
jns
loop
daa
lcall
inc
and
jge
stos
mov
pusha
bound
dec
cmp
adc
adc
and
fidivs
xchg
adc
xchg
mov
dec
lock
insl
orb
push
lods
mov
clc
mov
scas
inc
jno
and
lea
div
pop
and
xchg
xor
jne
lock
je
cld
ficompl
cmpsb
jg
mov
cli
fldln2
pop
xchg
pop
pop
sub
cmpb
pop
aaa
shl
movsb
ds
or
adc
add
and
cld
pop
add
sbb
sbb
stos
push
mov
xorl
inc
jb
aas
bound
inc
out
imul
push
sub
iret
mov
push
mov
mov
jmp
movsb
imul
push
mov
stos
repnz
xchg
or
test
dec
push
add
inc
sub
mov
sbb
dec
das
leave
and
pop
lcall
jl
out
loopne
cli
pop
mov
push
out
pop
xor
mov
dec
andl
mov
movsb
or
xchg
sbb
jp
lock
and
repnz
icebp
xchg
xchg
push
bound
iret
or
or
lods
arpl
push
data16
xchg
loopne
nop
or
dec
js
or
repnz
orb
pop
popa
mov
lahf
dec
out
mov
mov
in
sahf
orl
mov
cmc
dec
ss
pop
xchg
mov
jno
int3
in
cwtl
jmp
lahf
jne
jnp
sti
jmp
cmp
mov
push
xor
outsb
and
sub
pop
out
sub
mov
inc
xchg
nop
mov
jmp
es
xchg
cmp
and
jmp
jle
addr16
pushf
inc
outsl
jnp
cmp
pop
sub
repnz
outsb
or
xchg
or
movsb
inc
in
into
mov
lret
pop
lcall
outsb
sbbl
xchg
in
sbb
fwait
adc
mov
loopne
faddl
xchg
in
inc
adc
or
aam
popa
ret
mov
sbb
inc
out
dec
sahf
daa
popw
add
cmp
mov
aad
or
hlt
push
in
xchg
push
repnz
xor
lret
jmp
push
leave
lea
jg
test
mov
mov
int3
fnstsw
push
dec
pusha
jp
lcall
add
add
out
and
ret
mov
jle
js
dec
rcrb
fwait
add
bound
stos
fmulp
pop
outsb
xchg
mov
bound
lret
push
mov
inc
inc
fbstp
sbb
outsb
fsubs
xlat
in
jo
subl
xorb
fwait
sbb
xchg
ret
cwtl
jns
sub
lds
cwtl
and
lret
sbb
clc
in
popa
dec
push
mov
xchg
ljmp
outsb
lods
push
int3
xchg
add
and
mov
fisubrl
mov
or
and
rorl
dec
cmc
xor
sbb
mov
iret
xlat
dec
cmp
add
lcall
dec
inc
mov
mov
pop
push
pusha
loopne
test
les
mov
fwait
cwtl
push
lret
mov
jg
loop
ja
xchg
subb
jmp
jp
inc
fwait
popa
adc
fadds
add
lcall
stos
fsubrl
jp
xor
add
adc
push
pop
test
rcl
mov
jbe
push
push
dec
push
inc
dec
int3
out
in
idivl
xchg
sbb
mov
out
in
pusha
jb
xor
sbbb
jne
or
in
stc
adc
pop
mov
mov
xchg
inc
fistps
ficoml
cli
pop
adc
mov
inc
iret
loopne
pop
pop
mov
xor
mov
xchg
adc
dec
xlat
js
fwait
popf
pop
adc
fldl
enter
aaa
jg
movsl
fs
icebp
lods
cmc
negl
xchg
inc
sub
mov
add
and
stc
call
int
enter
iret
cmc
call
mov
push
fmuls
leave
pop
sub
lock
jl
xor
cltd
sbb
shlb
or
mov
xor
dec
enter
dec
sar
gs
push
mov
xor
mov
stos
pop
enter
push
add
fistpl
jb
fnsave
fbld
push
rcrb
mov
jo
sub
add
rol
out
popa
clc
out
bound
outsl
pusha
out
pop
and
test
repnz
xor
dec
idiv
aas
clc
sti
mov
jp
sti
add
out
xchg
shll
test
lea
fucomip
lret
xlat
scas
push
and
test
into
nop
mov
pop
xchg
add
dec
repnz
mov
jecxz
sti
jae
push
xchg
ja
outsb
and
cmpsl
lds
push
dec
pop
imul
and
push
stos
jmp
ljmp
cmp
aaa
in
add
mov
mov
push
test
ret
xchg
out
rcrb
inc
clc
mov
clc
stos
lcall
rorb
adc
push
sbbb
mov
fstpl
sahf
loope
ljmp
int
clc
aaa
xor
xchg
xchg
scas
loop
pop
add
fwait
cmp
cmpsb
mov
jne
mov
push
jne
incb
in
push
jae
ja
mov
cmp
int3
sub
add
push
repnz
sbb
lds
or
and
ss
adc
out
cmp
cli
add
push
xchg
sub
fs
outsb
in
dec
inc
js
sub
xchg
dec
xor
push
fst
lret
call
stos
or
lea
adc
in
popf
in
insl
jno
pop
repnz
push
mov
and
pusha
stos
aad
imul
mov
pop
enter
sahf
mov
je
pop
sub
out
inc
mov
lret
mov
adc
stc
iret
addr16
or
addr16
adc
sub
gs
fimuls
loope
mov
in
or
sub
sub
mov
push
push
int3
iret
dec
addr16
adc
ret
icebp
jns
and
fmull
dec
push
cmc
dec
xchg
sbb
stos
shrl
popf
xchg
fdivp
xchg
mov
mov
in
adc
repnz
test
daa
push
pop
testb
inc
xchg
int
cmp
xor
ja
loope
popf
xor
mov
dec
adc
cmc
das
int3
les
and
lock
test
push
into
gs
adc
push
mov
push
pop
repz
retw
lods
test
sub
sub
outsb
jg
std
sbb
jnp
rcrb
pop
dec
sub
xchg
cwtl
or
lret
dec
inc
loope
xor
mov
xor
mov
fsts
lret
add
fs
adc
movsb
pop
pop
movsl
cli
mov
cmpsb
cltd
pop
sub
enter
cmc
stos
jne
hlt
je
fmul
mov
daa
lretw
cmpsl
rorl
mov
mov
inc
sarb
xor
pop
enter
cmp
stos
mov
inc
xchg
bound
xlat
push
sbb
fs
mov
mov
xor
adc
mov
dec
loopne
cmp
or
ds
stos
es
and
jge
add
jge
push
shrl
pushf
lret
loope
jnp
pop
sbb
mov
into
filds
je
pop
mov
push
xor
cmpsl
hlt
pushf
loope
xor
aaa
inc
ret
jne
gs
mov
xchg
insb
aad
mov
adc
cwtl
mov
hlt
mov
dec
dec
xchg
daa
mov
test
cmpsb
fdivr
int
mov
dec
cmp
jae
filds
lock
int
popf
std
jle
xchg
xor
pusha
pop
movsb
push
or
xor
imul
pusha
scas
fwait
mov
jo
dec
lea
stos
mov
sbb
mov
lahf
mov
shrl
mov
test
xchg
mov
add
jl
dec
fists
xchg
lods
push
sbb
cmp
ds
fsubs
cli
pop
test
les
sub
push
aad
xchg
inc
insb
sub
push
jecxz
cmp
mov
dec
sub
mov
sub
adc
and
pop
cmp
mov
xlat
dec
insb
sub
dec
mov
ja
stos
cmp
xchg
xchg
cltd
adc
jb
shlb
cmp
movsl
loope
ja
arpl
push
sarl
and
sub
or
ss
pop
mov
fs
jp
hlt
data16
inc
mov
push
std
dec
addb
xor
in
repz
cmc
mov
add
icebp
xchg
sbb
insb
inc
add
jg
xchg
push
or
pop
lahf
and
push
incb
add
sahf
stos
inc
std
push
das
imul
iret
addr16
les
push
out
jl
jne
add
inc
xchg
adc
popa
inc
loope
data16
and
push
jp
fmuls
mov
cmp
dec
inc
arpl
loope
mov
into
xchg
adc
push
xchg
lea
out
cmp
or
sti
pop
xorb
and
push
sub
push
mov
cmp
inc
popa
push
xchg
mov
sbb
loope
daa
mov
add
sub
xchg
mov
add
sbb
mov
or
inc
sub
xor
clc
hlt
pop
shlb
mov
inc
pop
pop
xchg
clc
inc
out
shlb
loopne
and
movsl
nop
pusha
cmpsl
inc
movsl
jno
fcompl
pop
orb
inc
jg
xor
xor
inc
ljmp
sub
dec
in
jnp
test
or
jns
mov
ja
in
jo
ljmp
loop
jb
mov
icebp
push
leave
les
add
out
inc
ret
xchg
and
push
cmpsw
jge
rclb
jl
jecxz
add
int3
pop
jo
popf
push
cs
out
orl
adc
insl
pushf
or
mov
xor
outsb
std
mov
imul
xlat
cld
xor
or
in
and
sahf
fsts
in
push
js
ficompl
mov
scas
popa
dec
fs
pop
cmc
mov
pushf
add
cs
sub
push
data16
fdivp
push
clc
dec
cltd
lods
ss
decl
dec
pop
inc
mov
jbe
outsb
push
ds
push
jae
js,pn
std
in
insl
fisttpll
js
int3
push
leave
icebp
push
loop
aas
mov
xorb
mov
flds
rclb
cmp
shll
orb
mov
inc
mov
xor
cmpsl
enter
mov
inc
sbb
ljmp
mov
mov
stos
xchg
xchg
add
mov
aam
in
adc
nop
fnsave
add
shl
cmp
mov
jae
jmp
xorl
ficomps
andb
lea
fdivs
xchg
ffree
ret
ds
pop
inc
pushf
jg
stos
movsl
xchg
imul
inc
data16
jb
das
pop
das
mov
mov
out
xorb
adc
test
xor
adcb
movsl
in
shll
daa
pushf
lret
jno
sti
cmp
jb
mov
or
sub
xchg
mov
daa
popf
push
lahf
sbb
push
data16
mov
lods
xor
jnp
fs
xor
mov
into
push
insl
mov
dec
pusha
scas
in
in
icebp
iret
and
inc
aad
inc
neg
mov
adc
mov
adc
or
imul
xorl
dec
mov
dec
dec
sarb
aas
xor
lods
inc
dec
stc
out
sbb
in
lret
cmp
adcb
cmp
jl
outsb
xchg
daa
push
insb
rolb
test
or
pop
call
cs
fs
mov
ds
cmp
sub
or
scas
mov
dec
in
clc
sbb
cltd
ds
nop
add
jae
lock
mov
mov
test
push
push
adc
fiaddl
in
imul
jae
mov
add
cli
and
pop
imul
dec
jo
or
cmp
or
int3
cld
dec
popa
ja
mov
sbbb
mov
ljmp
pop
pop
mov
jo
mov
scas
ds
cmpsl
sarb
pop
mov
adc
adc
lea
adc
lcall
int3
dec
pop
and
cld
mov
xor
xlat
dec
imul
leave
push
mov
adc
mov
and
mov
cli
insb
test
outsb
int
leave
iret
int
loop
fcompl
popf
addr16
push
mov
outsb
sbb
cwtl
push
adc
cmp
adc
and
xor
push
add
in
add
add
mov
push
into
stos
nop
lcall
inc
mov
cmpsl
dec
inc
pop
fsubs
jle
push
or
adc
cli
xchg
or
das
daa
sub
in
ja
aam
mov
mov
pop
xchg
mov
or
sarb
stos
jnp
in
push
pushf
outsl
leave
rolb
inc
ret
test
jp
in
mov
shr
repz
sbb
sub
add
int
fldl2e
out
add
test
std
sub
insl
jecxz
jb
or
push
jo
movsb
cmp
imul
push
pop
xorl
mov
push
aas
add
mov
pop
or
xorb
jmp
sbb
movsl
repnz
mov
in
push
fldl
jmp
sti
cmp
inc
mov
mov
sbb
shrl
mov
xor
pop
subb
and
push
mov
push
sbb
mov
sbb
push
int3
lock
sbb
pop
push
dec
jecxz
sub
push
or
daa
sub
push
adc
xor
addl
xor
iret
test
repnz
bound
ljmp
pop
mov
mov
mov
imul
lods
dec
test
jg
xchg
sarb
sbb
scas
mov
pop
lds
pop
test
xor
push
in
mov
gs
iret
mov
cmp
adc
push
shlb
dec
loopne
ret
cmpsl
xchg
lods
in
xor
ret
aaa
jmp
mov
push
inc
mov
and
cmp
mov
fwait
sbb
mov
rolb
out
adc
ljmp
dec
adc
mov
pop
pop
push
lock
out
mov
out
xor
subb
sti
in
hlt
out
idivb
sbb
scas
les
mov
push
scas
dec
mov
mov
or
mov
outsl
jge
adc
inc
lret
jge
push
rol
subl
jno
and
cmp
pop
cld
add
loop
jb
jne
shll
mov
fwait
imull
adc
mov
stos
and
out
add
arpl
test
mov
xorl
xchg
pmaddwd
push
dec
inc
notb
cmpsb
mov
xchg
inc
inc
dec
dec
mov
adcb
mov
push
pop
repz
mov
jnp
repnz
test
xchg
mov
xor
and
or
idivl
xchg
cmp
aas
daa
outsl
sub
mov
or
out
pop
mov
dec
imul
push
jp
lret
jp
sbb
mov
cmpsb
xor
mov
lea
push
jnp
dec
outsb
mov
mov
icebp
icebp
cmp
jns
push
xchg
out
sub
xor
adc
and
test
lods
pop
daa
pop
mov
pop
je
int3
mov
or
ds
push
cli
mov
adc
push
test
icebp
lods
mov
xchg
outsb
aad
sbb
hlt
jo
push
mov
in
rcll
jne
inc
test
push
lret
arpl
roll
push
adc
lahf
into
stc
cltd
sti
mov
or
lods
push
lods
inc
sub
mov
dec
push
shl
inc
pusha
ja
push
lds
adc
jb
mov
adc
add
xor
xchg
xor
rclb
cltd
xor
das
pop
scas
add
add
mov
and
or
mov
test
rcrl
js
jmp
cmp
ljmp
cwtl
bound
xor
mov
lea
leave
mov
jg
cwtl
xchg
mov
cmp
mov
sbb
jb
sub
cmp
lahf
and
insb
sbb
push
clc
pop
bound
sbb
dec
pop
int3
enter
imul
adc
push
cmp
xchg
ds
movsl
sbb
mov
xchg
outsb
into
and
daa
mov
sbb
inc
das
jecxz
jns
and
jbe
xchg
movsb
dec
xor
dec
repnz
rolb
mov
xchg
xchg
ds
pop
orb
mov
cmpsl
in
push
mov
add
xchg
stc
adc
mov
in
in
leave
and
push
sbb
cmp
orl
pop
fsubrl
out
jmp
mov
push
dec
xlat
std
addr16
add
mov
mov
or
mov
pop
test
dec
leave
pop
jns
setl
sbb
sbbb
mov
xchg
stos
loop
jge
and
mov
dec
jl
and
idiv
iret
pop
xchg
jnp
adc
and
add
popf
xchg
rcl
adc
stos
inc
inc
mov
popa
ja
call
inc
inc
test
test
jns
bound
dec
fwait
add
push
mov
aam
scas
in
enter
mov
push
dec
xchg
push
dec
fdivr
and
mov
test
push
aad
loop
rcrb
movsl
sbb
xchg
xlat
icebp
das
decb
xor
push
xchg
test
pop
add
popl
adc
dec
push
or
mov
lret
stos
mov
sbb
adc
popaw
push
fdivr
and
sub
sub
shrl
lret
inc
imul
push
pop
mov
inc
leave
push
mov
dec
or
outsb
sub
cs
cmp
push
mov
push
or
mov
cmpsl
fwait
add
jecxz
into
pop
test
and
mov
sahf
inc
pop
insb
jno
mov
push
ss
xchg
pop
cli
movsb
stos
pop
inc
test
cmp
loope
xchg
lret
lods
in
addr16
fsub
ficoms
ret
gs
testl
mov
and
leave
dec
and
inc
jg
es
test
mov
sub
jbe
xchg
cmp
mov
dec
ficoml
inc
popa
jp
pushf
push
cmc
bound
mov
aad
fidivs
cltd
arpl
push
mov
iret
jnp
sub
sti
and
cmp
lods
dec
shll
rolb
xchg
jle
sbb
rcl
or
pop
xor
pop
sbb
ret
or
fisttpll
xor
mov
sbb
mov
lods
jl
cmp
je
xchg
jb
cmp
inc
cmp
aam
pop
cmp
mov
mov
dec
movsb
cmp
and
sahf
push
push
push
add
sbb
pop
mov
push
andnps
cld
or
dec
cwtl
enter
sub
rcll
xor
test
push
adc
or
or
jne
or
sbb
cld
jae
repz
es
hlt
mov
les
enter
add
adc
mov
sti
inc
xchg
xor
jecxz
gs
mov
mov
movl
lods
icebp
push
push
orl
mov
inc
and
pop
mov
in
jo
fcomps
jg
outsb
or
add
divl
xchg
rol
outsb
aad
dec
pop
pop
stc
sbb
push
cmp
lret
inc
arpl
aaa
hlt
lock
int
test
imul
or
cmpsl
lahf
sti
xor
dec
xor
mov
inc
dec
lea
loope
dec
fadd
shrl
and
adc
jge
sbb
out
xor
xchg
out
aam
lcall
mov
cmp
xchg
dec
and
sbb
test
lahf
add
cld
in
push
int
push
jbe
cmp
adc
loope
mov
lcall
mov
pop
cmp
mov
dec
rclb
dec
idivb
jae
fbld
jns
add
xor
mov
icebp
dec
jnp
inc
pop
int
and
pop
clc
xchg
jmp
ja,pn
fucomp
ja
push
fcomps
lock
lcall
in
cmpsb
dec
pop
outsl
sbb
filds
inc
add
fistpl
push
inc
mov
fsub
test
icebp
pop
insl
jne
rcl
mov
scas
je
insl
jmp
xchg
lods
mov
adc
push
or
sarb
mov
fsubs
jl
pop
sti
loopne
push
lods
addl
icebp
frstor
aas
jcxz
sbb
mov
mov
nop
cmpl
outsb
leave
test
push
jb
dec
sbb
es
inc
push
imul
cmc
sub
ljmp
lods
sbb
xchg
out
js
xchg
leave
sub
sti
dec
inc
push
jb
mov
pop
lret
scas
js
or
je
lret
jnp
into
lret
es
sub
leave
jle
sbb
inc
movsb
mov
js
jo
jp
rol
mov
or
ljmp
push
fs
mov
mov
mov
loope
jae
inc
xchg
mov
inc
dec
jg
xchg
mov
lcall
adc
in
xchg
mov
pop
mov
sbb
mov
xlat
sbb
rclb
fisubrs
or
push
int
lods
pop
lahf
pop
mov
pop
xchg
push
sub
or
jae
test
mov
jne
cwtl
fdivr
dec
stc
xchg
and
dec
pop
xchg
sbbl
ja
push
int3
inc
mov
data16
aam
sahf
push
out
fmuls
pop
rcrb
ljmp
cmp
mov
mov
jnp
mov
xor
lods
into
mov
cmc
sub
push
xor
and
mov
mov
rclb
inc
scas
js
lretw
sub
xchg
or
mov
mov
popf
test
movsb
jecxz
data16
std
inc
lahf
cmpsb
arpl
lods
aaa
or
mov
push
jle
xchg
mov
adc
rcrl
inc
or
in
sbb
cwtl
fstl
out
push
cmp
outsb
mov
and
jmp
push
into
test
add
shrb
add
dec
pop
pop
cmp
mov
inc
subb
leave
in
call
lcall
addr16
mov
insl
shlb
popa
xor
insb
jmp
out
mov
outsb
lods
popf
nop
lock
pop
or
adc
xlat
dec
sub
test
jb
xlat
rclb
jnp
push
push
call
rcll
mov
int
loopne
sub
and
lods
fs
sub
mov
in
push
popa
aam
arpl
fmull
dec
and
jmp
dec
bound
std
icebp
pop
in
inc
imul
out
adc
daa
jecxz
adc
mov
jb
outsb
test
orb
scas
aas
mov
idivl
dec
enter
inc
dec
push
icebp
aam
insl
fadd
out
xor
popf
popa
sbb
xchg
dec
push
jmp
xchg
or
mov
and
movlps
ja
stos
jbe
in
sub
lret
sub
adc
jle
xor
test
jp
jo
std
fcompl
aad
out
ret
icebp
movsb
dec
mov
mulb
mov
push
xchg
fwait
cwtd
es
ret
adc
bound
in
mov
mov
test
xchg
jno
jmp
sbb
or
mov
mov
xchg
js
xchg
mov
or
cmp
mov
movsb
pop
gs
decb
sbb
or
outsl
mov
pop
aam
mov
gs
sahf
sbb
xor
sub
jp
mov
jmp
mov
cmp
jp
mov
or
xor
mov
mov
dec
push
fucomi
cltd
mov
aaa
rcll
mov
cmc
imul
jp
mov
lods
xor
push
fstp
out
pop
lock
rcrl
cmp
int
push
add
scas
jmp
idivb
mov
fwait
jnp
or
rcrl
popa
stos
jnp
adc
mov
in
push
cs
push
mov
jno
adc
cmpsb
fmuls
push
rcrl
lds
inc
push
mov
push
and
mov
mov
xchg
int
shrl
cwtl
jecxz
sub
xor
shll
cld
jg
test
jno
jnp
movsb
dec
std
test
pop
xor
jnp
pop
sti
hlt
cli
leave
lahf
stos
mov
inc
int
leave
imul
xchg
fcmovbe
ljmp
mov
ret
sub
gs
std
test
pop
inc
push
mov
popf
cltd
dec
dec
add
sbb
inc
inc
stos
mov
inc
push
mov
xor
sub
imul
sbb
data16
mov
fwait
in
ret
les
lret
and
mov
jl
push
outsl
popf
mov
pop
dec
mov
adc
inc
adc
es
out
pop
jl
iret
lret
test
sbb
xor
stos
cs
jle
mov
imulb
pop
jb
jg
cmp
ss
or
and
loopne
and
mov
and
push
sahf
pop
test
enter
lea
sarl
scas
sbb
das
or
test
lahf
mov
pshufw
push
xchg
std
xor
imul
fs
sub
into
xchg
dec
psubq
jl
aaa
and
sbb
loopne
pop
sub
das
jmp
push
sbbl
testb
push
mov
cmp
ljmp
jmp
lock
sbb
loopne
subb
xchg
ret
mov
xor
mov
neg
add
jne
movsb
sahf
xchg
push
adc
mov
jo
dec
clc
ja
push
mov
das
cli
push
movsl
cmpsl
repnz
fnstenv
push
lock
test
aaa
mov
adc
add
or
xor
cmp
mov
cltd
mov
inc
jnp
jecxz
fsubs
fnstsw
push
sbb
sbb
dec
lcall
fs
dec
movsl
sub
sbb
mov
fldt
lcall
pop
es
outsl
icebp
mov
jo,pt
inc
and
test
popf
daa
je
mov
les
pop
or
imul
lock
sarb
loop
adcb
mov
mov
cs
cltd
sbb
popf
pop
mov
mov
jns
jno
push
nop
mov
push
cmp
xchg
jmp
cli
inc
pop
jmp
xchg
xor
out
sahf
sbb
xor
xor
imul
mov
xchg
gs
popf
mov
push
gs
pop
in
inc
push
jmp
xchg
jbe
test
ljmp
xor
out
aad
std
fisttps
mov
push
mov
data16
cmp
test
subb
xor
loope
mov
sub
add
inc
aaa
mov
addr16
lock
and
jno
jns
icebp
rcrb
add
and
sub
out
mov
lret
mov
stos
cmp
or
sar
sbb
outsb
aaa
jae
inc
push
in
dec
out
mov
mov
mov
imul
popa
or
insb
xor
sbb
addb
sub
rorl
mov
mov
fistpll
cmp
int3
scas
jae
dec
repz
les
mov
sub
movsb
ret
sahf
push
mov
dec
fyl2x
movb
xorl
xchg
nop
shlb
fbstp
cmc
mov
adc
pop
cmc
cmp
sub
mov
inc
js
repnz
outsb
jb
es
ja
cs
pop
scas
cmp
dec
cli
push
mov
stc
maskmovq
idivl
in
lcall
addl
insb
jno
aam
mov
lahf
xchg
popf
add
imul
sti
loopne
adc
push
jno
aaa
xchg
jecxz
leave
push
test
adc
dec
iret
sub
dec
lds
movsb
test
test
xchg
andl
push
sbb
pushl
test
int3
shll
or
movsb
shrl
inc
lock
xor
or
sub
push
xor
ljmp
pop
sbb
mov
negb
cld
push
mov
mov
adc
xchg
mov
mov
cmp
xor
loopne
mov
in
xchg
aam
jg
jp
cmc
loopne
iret
cmpb
mov
mov
out
ret
and
movsl
mov
pop
dec
addb
inc
xor
into
inc
sbb
adc
push
loop
mov
add
mov
ds
mov
mov
push
mov
or
sub
test
hlt
lock
cmp
out
push
mov
sbb
pop
pop
jno
pop
fneni(8087
addr16
cltd
and
mov
stos
ret
sbb
outsl
sbb
cld
push
dec
dec
das
push
std
pop
sbb
punpckhwd
lret
and
pop
mov
pop
mov
movsl
fistpl
mov
push
test
shl
xor
sub
jge
or
xor
mov
sub
xor
cmp
or
jnp
dec
sub
adc
ret
xchg
nop
jle
ljmp
lea
sarb
clc
xorb
dec
mov
xor
push
cmpsl
adc
or
sub
lahf
mov
fdivrp
adc
jno
inc
sub
jb
cwtl
mov
dec
xchg
repnz
ljmp
jl
insl
xchg
stos
int3
xor
sbb
pop
hlt
cli
nop
lods
stos
pop
out
frstor
es
je
or
jns
push
shrl
mov
sub
sbb
pop
mov
test
xlat
repz
or
cltd
int
mov
int3
inc
in
pop
in
jbe
dec
jg
sub
lods
and
cwtl
add
test
jae,pn
and
push
ret
mov
clc
lods
push
inc
or
mov
fwait
xor
test
pop
leave
mov
cmpsb
cmp
pop
loope
jecxz
inc
pop
mov
or
fists
int3
in
mov
js
dec
in
jecxz
lahf
cmp
fadds
mov
test
leave
push
add
lods
add
mov
inc
clc
push
or
add
sbb
jl
fadds
adc
sbb
cmp
mov
cltd
int
add
subl
fmulp
adc
adcl
jp
test
mov
xchg
int
mov
imul
mov
xchg
in
jb
fstpt
testl
leave
movsl
imul
mov
and
addr16
das
xchg
shlb
fldl2e
clc
repz
and
ds
clc
and
or
xlat
xor
repz
jns
xor
pusha
cmp
cmp
das
pop
js
sub
pop
fstps
xor
add
stc
pop
inc
pop
sub
lahf
add
and
push
mov
add
jp
gs
jle
sub
ljmp
mov
sub
cmp
xchg
mov
sub
pusha
xor
xchg
cmpsb
and
jp
push
sub
and
cmp
mov
jno
or
sbbb
xchg
cmpsl
xchg
mov
repz
aad
aaa
mov
push
push
mov
test
fidivs
aas
jmp
xlat
jge
lds
add
cmpb
and
pop
hlt
in
shrl
pop
and
adc
mov
fldl
jo
inc
xor
inc
jmp
cli
pop
sahf
es
cmp
cmpsl
jecxz
push
popf
cmpsl
push
push
lret
fimuls
bound
fwait
mov
fcoms
mov
mov
push
pop
int
repz
inc
jp
sub
push
xlat
cmp
loop
lahf
and
inc
pusha
stos
push
adc
jle
sbb
imul
inc
xchg
je,pt
addl
mov
push
push
cmc
iret
aas
jl
cwtl
inc
in
sahf
push
test
out
push
gs
clc
mov
imul
adc
xor
sarb
fdivr
sbb
push
sbb
out
jns
in
mov
add
push
in
xchg
pop
nop
loope,pt
insb
icebp
jbe
arpl
mov
xor
cmpsb
add
jne
cmc
sbb
jecxz
dec
push
adc
pop
lea
je
int3
push
aas
sbb
aam
je
idivl
lock
fmull
out
popa
insb
mov
mov
cmp
into
or
cmp
cmpsl
rclb
mov
jp
inc
mov
imul
push
cmpsl
gs
xchg
xor
sub
xor
jnp
adc
fbstp
pop
sub
push
mov
ljmp
aad
push
xor
lods
ficoml
lret
push
mov
fldenv
dec
enter
js
repz
fidivrl
lea
pop
inc
dec
mov
lret
fs
popf
push
lea
and
cmp
lret
mov
mov
or
repnz
dec
dec
cmc
or
nop
sbb
xchg
or
jg
adc
icebp
rclb
loopne
lcall
test
jmp
adc
xchg
mov
ss
ret
and
push
repz
aam
xor
dec
push
out
jg
es
std
shll
xchg
repz
jg
fildll
dec
mov
fists
mov
jecxz
xor
fisttpll
and
jnp
xor
or
push
je
hlt
out
mov
sub
rcl
and
pop
xchg
inc
push
ja
ret
das
aas
push
dec
and
cmp
sarl
adc
outsb
mov
or
testb
out
cmp
sbb
xor
inc
adc
fwait
es
sbb
fistl
pop
or
push
imul
stc
push
les
cli
test
ffree
add
ror
cmpl
ja
stos
pushl
pop
ficoml
dec
cld
jge
into
dec
inc
mov
cmpsb
pusha
cmpsb
add
pop
ljmp
xor
arpl
imul
mov
jp
aam
dec
enter
pop
xor
scas
packsswb
scas
mov
lock
mov
stos
stos
sbb
in
scas
and
out
shlb
call
push
adc
inc
pusha
fcmovnb
adc
dec
and
icebp
inc
push
adc
or
loop
cmpsl
sbb
insl
imul
les
push
pop
sub
xchg
call
ficoms
sub
mov
dec
mov
icebp
dec
scas
out
loope
pop
test
ljmp
ret
or
dec
pop
push
movsb
mov
mov
test
outsl
imul
dec
shrl
adc
cld
push
pop
cli
jbe
dec
jb
loopne
test
jne
jg
mov
fwait
lods
je
or
cltd
out
inc
int3
dec
adc
in
push
adc
sar
orb
mov
and
dec
xchg
loope
bound
lods
add
cmp
insb
in
sti
ret
jb
sub
mov
lods
pusha
fcomp
dec
fistps
dec
imul
daa
mov
xor
pop
cmpsl
dec
xchg
pop
cmpsb
pushf
and
jno
ret
sarb
jle
ds
in
jbe
das
call
cmp
mov
lret
daa
maskmovq
testl
mov
insb
ret
fs
int3
out
fisttpll
or
ss
xchg
rcll
cltd
or
mov
add
or
loope
lcall
or
fidivl
lea
repnz
jecxz
pop
mov
mov
test
lds
cwtl
testl
sbb
or
bound
je
inc
or
fdivs
enter
cld
push
outsb
xor
sub
out
mov
jbe
das
and
out
fildl
adc
roll
addl
dec
cmp
inc
dec
stos
xchg
sub
jno
pop
dec
aad
adc
adc
icebp
pop
daa
jb
pop
mov
jl
jno
test
lds
add
addr16
add
repnz
pop
add
add
int
mov
mov
cmc
and
fwait
in
fists
in
jmp
aas
pop
cmp
adc
cs
fisttps
out
push
sbb
lahf
jmp
mov
fwait
lret
aad
mov
dec
and
insb
clc
sbb
lahf
jle
xor
xor
jmp
imul
rol
jo
inc
jge
push
fidivl
cltd
test
hlt
frstor
sbb
lods
cmp
aaa
loopne
xor
cs
push
jae
lcall
push
mov
incb
dec
xchg
sarl
xor
dec
xor
and
popf
cmp
daa
mov
lret
jns
push
pushf
lea
int
dec
cmpb
repz
sbb
pushf
dec
lcall
loop
pop
mov
pop
movsl
and
dec
mov
pop
mov
fcmovnb
jns
dec
mov
mov
shl
leave
inc
dec
sub
sbb
popf
popf
mov
add
cmp
int3
push
inc
test
stc
xchg
add
or
mov
stos
dec
lods
xchg
mov
rcrb
mov
mov
jmp
xor
adc
repz
stos
push
cmp
fpatan
hlt
lods
push
dec
dec
adc
cmp
pop
sbb
mov
lahf
add
jle
or
ret
divl
sub
cmpps
ds
stc
cld
sbb
jl
mov
ret
notl
mov
mov
mov
mov
lea
cmpsl
je
and
movb
push
aaa
push
mov
xorb
lods
and
xchg
mov
pop
inc
dec
aad
rcrl
movsl
imul
push
mov
sarl
mov
sbbb
in
mov
fldenv
pop
push
leave
shll
inc
nop
xor
movsb
icebp
fwait
pop
xchg
inc
hlt
out
mov
stc
mov
clc
sti
sbb
fisubrl
add
jmp
add
sti
enter
aam
scas
faddl
fwait
push
out
lods
mov
js
adc
pop
inc
ret
pop
cmp
mov
in
lea
cmpsb
mov
and
jle
loop
stos
mov
pop
mov
or
mov
cmp
mov
mov
xor
mov
cmp
pop
push
inc
in
jae
addl
pop
shl
mov
stc
stos
jo
inc
arpl
repnz
arpl
imul
rcrb
pop
xor
lock
jo
xor
repz
es
aam
push
test
push
xchg
xchg
js
popf
call
adc
mov
sti
aas
imul
insb
gs
sbb
push
cmpsl
call
mov
out
mov
fidivrs
out
lods
lods
shll
jecxz
in
jecxz
and
pop
test
enter
sub
mov
cs
cltd
stos
add
rclb
mov
cmc
sbb
rcrb
stc
cltd
mov
push
and
out
pushf
popa
push
int
psrad
sub
lock
xchg
test
mov
out
xor
outsl
mov
ret
sub
lret
mov
xchg
push
xor
jmp
lock
rcll
or
add
in
out
jg
inc
icebp
or
and
incl
xchg
in
arpl
shll
aad
std
jae
daa
mov
ds
mov
into
ds
repnz
mov
inc
rorb
in
adc
mov
lods
pop
jne
jae
adc
xchg
cmpsl
scas
xchg
ljmp
cli
scas
ret
daa
push
jno,pn
call
push
and
mov
push
int
dec
adc
sbb
shll
sub
push
test
scas
dec
enter
xchg
hlt
imull
xchg
inc
ret
addl
movsb
lods
xor
sti
mov
popf
lea
loop
pusha
pop
xchg
stos
xchg
inc
and
adc
or
add
mov
sbb
cmp
sahf
js
pusha
jmp
sbbb
xchg
cltd
jmp
roll
ret
jecxz
idivb
sbb
je
mov
fwait
inc
add
or
xor
leave
dec
inc
add
cmc
inc
sti
pushf
arpl
sub
pusha
inc
inc
cmp
insl
lock
icebp
mov
or
icebp
push
sahf
push
xchg
pop
negb
inc
daa
mov
rcr
mov
xor
stc
lods
rcr
mov
scas
pusha
adc
add
inc
jae
mov
repnz
sbb
loop
inc
or
add
xchg
xchg
sub
out
jmp
xchg
sub
enter
cmpsb
or
mov
out
sbb
test
sahf
sub
sar
sub
add
push
xor
xchg
lret
adc
mov
test
scas
sub
rcrb
je
inc
push
jle
mov
jp
add
sub
jl
push
in
jnp
inc
and
sbb
mov
mov
pushf
sub
inc
in
fcoml
rorb
cs
scas
pop
insl
push
dec
sbb
iret
fwait
notb
cmc
lds
mov
rol
mov
cmpsl
inc
push
dec
mov
xchg
pop
rdpmc
loop
inc
jae
and
add
fdivrp
shrb
imul
scas
pop
fists
das
jle
mov
push
ss
and
push
cmpl
stos
xchg
add
dec
xchg
mov
in
pop
mov
mov
push
orb
add
adc
pop
fbstp
mov
imul
jb
repz
inc
test
call
inc
test
out
mov
xor
movl
cs
std
and
xlat
shrb
out
iret
out
push
cmc
dec
js
popa
mov
add
mov
mov
imul
inc
stos
inc
push
sahf
jae
enter
xchg
loopne
and
mov
icebp
fstpl
sti
fsub
mov
sbb
xchg
inc
pop
sbb
push
mov
sbb
sub
ror
pop
ds
in
adc
fsubrp
xlat
scas
subb
inc
scas
stos
add
test
and
or
dec
movsb
adc
mov
ret
sbb
pop
or
inc
clc
or
stos
rorb
in
cmp
jne
rol
add
stc
xchg
imul
fisubl
mov
into
in
jns
cld
dec
push
ja
jle
ljmp
pop
mov
xor
stc
in
sub
add
pop
lods
pop
imul
dec
add
mov
adc
mov
scas
dec
sub
ja
cs
out
pop
int3
push
xor
push
sbb
adc
pop
cmp
dec
mov
nop
pop
fsubs
loopne
popf
inc
lret
icebp
movsb
movsl
jae
xchg
or
add
inc
mov
pop
fwait
jge
mov
push
mov
or
and
sub
jge
pushf
mov
outsl
mov
cwtl
mov
into
add
imul
bound
mov
cld
popf
out
imul
fcompl
dec
gs
stos
fnstenv
leave
fwait
pushf
sub
cmpsl
sub
cmpsb
mov
ds
pop
mov
mull
lret
mov
loop
push
rcll
pop
mov
cmp
and
scas
mov
out
cmp
movzwl
fwait
mov
sahf
aas
xor
mov
pop
xchg
clc
lcall
jns
insl
iret
push
jecxz
cmp
or
xor
movsb
rorb
jne
xorb
stc
dec
jmp
cli
add
loop
xchg
mov
adc
cmp
rol
inc
jl
pop
test
out
xor
jmp
add
add
inc
loope
imul
je
int
hlt
icebp
mov
xchg
fs
cs
jle
cmc
sbb
andps
jmp
or
mov
dec
mov
pusha
adc
dec
push
dec
sbb
adc
adc
orl
fs
mov
adc
mov
pushf
jmp
sub
mov
xchg
loope
lret
orb
aaa
stc
push
loope
arpl
xor
fiadds
add
or
fstl
mov
jmp
xchg
adc
jle
xchg
arpl
inc
mov
out
rcll
push
gs
inc
nop
mov
lret
jno
ja
xchg
leave
inc
dec
or
dec
push
popf
jbe
xchg
pop
dec
icebp
arpl
lods
in
fcomps
or
pop
add
in
outsb
fldl
lcall
dec
loopne
int3
es
pop
mov
inc
jo
or
pop
arpl
lahf
pop
in
and
ficoms
and
pop
loop
decb
aaa
mov
sbb
lret
in
stos
fldenv
inc
mov
mov
add
data16
ljmp
aas
leave
lods
pop
outsl
push
outsb
idivl
cmp
sub
sar
xor
lret
mov
imul
sahf
cwtl
popa
orb
xchg
xor
in
orb
fsubl
mov
stc
jecxz
add
dec
dec
testl
xorb
subl
cmpsb
pop
jmp
xchg
fsts
pop
popa
std
test
pop
clc
push
sbb
out
mov
clc
push
jo
outsl
push
xchg
aaa
add
int
insb
rorl
sub
test
mov
push
and
cld
paddsb
jae
cmpsl
or
mov
sub
jb
repnz
cmpsb
ret
lret
sbb
cmp
push
pop
xchg
sbb
adc
sbb
fcompl
in
adc
popf
loope
enter
pop
sub
mov
jmp
or
ficoml
shrl
fnstcw
insl
or
test
aad
ds
movsb
push
inc
jbe
orl
popa
lods
sti
inc
mov
pop
add
pushf
int3
flds
pushf
mov
add
fldcw
mov
loopne
ds
pop
dec
or
mov
aam
cmpsb
in
sbb
dec
push
xor
lock
xchg
aaa
pop
inc
bswap
rcrl
cmp
fisubrs
mov
shlb
pop
mov
cs
ljmp
add
ret
out
push
shrl
dec
add
or
mov
cmp
sub
xchg
add
adcb
orl
lahf
mov
aas
or
arpl
mov
and
aaa
rorl
aad
stc
movsl
inc
dec
dec
lea
xor
jp
out
push
push
sub
sahf
dec
xchg
loope
mov
mov
scas
pushf
pop
adc
mov
loopne
mov
pop
outsb
sub
lods
inc
ss
jl
xor
mov
aas
jge,pt
inc
gs
or
das
cs
shll
inc
jg
jg
int3
scas
jno
lds
xor
hlt
mov
movsl
and
dec
data16
stc
sub
cmp
push
repz
shlb
ss
aas
add
ret
sbb
pop
cli
lods
mov
stc
cltd
rorl
mov
lea
or
xchg
dec
ljmp
loopne
scas
mov
repz
mov
int3
cltd
movsb
lret
jecxz
mov
xchg
adc
mov
jmp
fisubl
in
sbb
add
jmp
cmp
jns
sahf
test
out
cmp
aas
popf
cld
xchg
jmp
push
xchg
jb
cmp
ds
pop
dec
test
loopne
add
or
mov
cmpsl
xchg
rclb
and
or
inc
outsb
mov
out
cmpsb
pop
es
movl
cmp
fwait
inc
inc
jmp
xchg
mov
inc
outsb
xor
popa
jg
lss
movsb
mov
test
or
sub
scas
push
lret
xor
imul
insl
sub
mov
insb
mov
or
mov
test
fdivr
xor
add
movsb
pop
push
inc
jno
stos
xlat
shlb
fcom
mov
jne
inc
scas
test
jae
jl
xchg
xor
or
pushf
pop
lds
aas
and
rcrb
mov
pop
jle
sti
jo
push
push
arpl
mov
pop
hlt
jno
daa
scas
test
fmul
imul
scas
cmp
xchg
jle
fs
xor
dec
mov
inc
movsb
mov
repnz
icebp
int3
sbb
mov
push
push
lret
sub
sti
push
inc
sbb
ss
sahf
inc
in
jle
pop
scas
cmpsl
mov
mov
dec
push
fcomps
rclb
add
outsb
pop
aaa
popf
fs
jmp
xchg
test
adc
in
push
fldl
push
and
and
sub
push
divl
mov
testb
and
lahf
dec
es
jno
and
jae
ficoml
fidivs
shl
sbb
out
xchg
dec
cmp
pop
sbb
hlt
movsl
push
cmp
push
fsubrp
cli
or
mov
jbe
pop
add
les
popa
popf
arpl
es
lret
mov
movups
inc
push
sbb
sahf
mov
call
loop
xchg
sub
pop
in
pusha
push
inc
cmpsl
test
inc
pop
scas
sub
mov
fcomps
es
dec
out
test
repnz
jecxz
sub
enter
arpl
aaa
ljmp
push
cmp
jbe
adc
dec
inc
je
adc
outsb
jne
in
ret
inc
push
lods
jmp
clc
dec
xchg
add
sti
xchg
or
or
sbb
rcrl
aaa
popa
sbb
jno
and
xchg
lock
in
inc
cmc
fmulp
pop
xchg
call
dec
mov
push
aas
sub
fwait
or
push
idiv
shll
repnz
iret
ss
push
or
adc
movsb
jmp
push
movsb
adc
cmpsl
pop
sbb
and
lds
xchg
sbb
das
mov
mov
pop
push
int
jns
arpl
mov
fadd
xorb
sti
add
outsb
jb
mov
push
cmp
fcompl
and
sbb
mov
add
aad
add
roll
loopne
inc
inc
mov
outsb
std
mov
mov
repnz
loopne
lods
mov
popa
adc
jmp
fwait
bnd
mov
insb
xchg
inc
mov
jnp
jge
mov
or
push
dec
std
aas
push
les
mov
or
enter
cwtl
test
jo
enter
cmpsb
push
inc
cmpl
xchg
and
inc
jmp
test
and
out
mov
fsubrl
js
or
mov
pushaw
ja
or
shlb
insl
jb
lcall
in
push
xor
inc
lahf
push
add
inc
mov
xor
aad
addb
lods
enter
sub
cmp
cmpsl
pop
shufps
push
jecxz
arpl
mov
jge
push
adc
in
xor
push
rcrb
mov
or
and
pushf
pop
movsl
fs
test
stc
les
and
cli
dec
movsl
add
inc
mov
jo
xor
mov
nop
jnp
outsb
push
xor
or
lret
adc
pop
fdivs
xchg
push
lcall
or
xchg
inc
ret
adc
gs
lock
fwait
bound
pop
jbe
je
popf
in
and
into
pop
sub
call
mov
fs
adc
in
push
adcb
xchg
mov
je
xor
inc
fisubl
sbb
sbb
pop
sub
cmp
movsl
add
enter
mov
sbbb
mov
sub
sbb
mov
cmpsb
mov
leave
pop
cmpsb
mov
popa
bound
jo
push
push
mov
xchg
cld
mov
xchg
adc
push
xchg
and
scas
xchg
mov
and
test
sahf
leave
inc
mov
push
outsl
iret
inc
inc
cmp
insb
pop
out
mov
cli
pop
xchg
mov
mov
loopne
mov
jnp
inc
sti
pop
stos
xchg
aam
push
jnp
stos
outsl
aam
fwait
mov
pop
out
jg
pop
aad
call
mov
leave
lock
sbb
jmp
ljmp
fs
inc
adc
pop
xor
add
inc
pop
repnz
lea
fcoml
loopne
in
xchg
mov
push
dec
std
xor
mov
pop
gs
inc
mov
dec
es
fcomps
sbb
pop
out
xchg
out
push
xor
pop
xchg
lcall
icebp
inc
fadds
sub
jmp
xchg
mov
inc
jge
xor
and
psubq
into
fwait
loope
lods
pusha
cmpsl
fisubs
inc
pop
inc
xor
cmp
xchg
lret
push
testl
mov
sarb
loope
bound
push
addb
pop
push
int3
das
repz
inc
mov
add
out
xor
xchg
inc
jg
mov
imul
adcl
outsl
lret
stos
out
dec
fucomi
or
bound
rorl
cmp
outsb
cmp
pop
add
scas
repnz
out
push
dec
and
xchg
xchg
mov
int3
or
or
rcll
hlt
aad
push
repz
mov
adc
out
inc
pop
aad
adc
push
pop
scas
add
loopne,pt
push
cmp
xor
xor
mov
imul
jp
and
push
mov
bound
push
daa
pop
mov
cmp
xchg
rcl
jg
pop
fwait
out
cmp
mov
sub
aam
test
ret
dec
aad
mov
inc
in
and
mov
pop
fwait
xor
mov
stc
and
loopne
jno
inc
sbb
pop
arpl
xor
sub
out
jb
adc
add
jmp
mov
add
rorl
mov
and
xchg
pop
jb
sbb
and
arpl
jmp
in
ds
add
jge
xor
enter
cmp
xchg
or
repnz
sub
sub
ja
push
inc
bswap
test
shrl
jecxz
lret
sbb
out
and
sbb
jmp
cltd
cmpsb
or
es
push
aas
xchg
test
mov
mov
inc
mov
lds
rclb
sbb
dec
pusha
cmp
push
shlb
int3
mov
xchg
inc
sbb
cs
dec
push
sbb
mov
add
pop
fbstp
xor
or
lods
dec
sub
imul
jbe
sub
or
cmp
mov
push
fsts
outsl
orl
ljmp
inc
pop
and
inc
aam
lret
jge
inc
and
fldt
pop
fsubrl
cmp
or
out
pop
aaa
clc
sub
add
inc
or
call
pop
cmpsb
cld
rorl
jnp
jno
and
mov
sbbb
cmpsb
aam
std
out
insl
or
sbb
dec
lock
hlt
idivl
enter
es
and
cmp
pop
push
sub
je
dec
xor
js
cmp
xchg
jo
mov
int
out
xor
int3
jg
ficomps
mov
ror
or
sahf
mov
lret
pop
sarb
push
push
lea
pop
pop
rcr
mov
shrb
outsl
push
stc
jp
flds
dec
dec
adc
xor
cs
mov
lcall
lds
xchg
and
sti
jbe
mov
and
adc
mov
jecxz
mov
ja
dec
fnstcw
movsb
cmp
scas
jmp
addb
xchg
cmp
out
mov
scas
sbb
sti
clc
pop
inc
int
insb
repnz
aas
insb
daa
fiaddl
and
outsl
jo
inc
and
or
stc
pop
out
cmp
jb
cmp
out
leave
push
test
lcall
sti
inc
cmpl
xor
movl
repz
cmp
xchg
icebp
adc
mov
insb
shl
jae
adc
orl
xor
ds
sbb
test
add
roll
lds
mov
in
fistpll
inc
mov
mov
pop
or
push
pop
sbb
lock
sub
insl
in
and
mov
lret
mov
pop
mov
dec
jb
in
ret
xchg
mov
jno
mov
movsl
or
andb
inc
and
mov
push
clc
or
pop
pop
enter
cmpb
repz
mov
in
sbb
adc
jb
sbb
push
mov
aas
ret
inc
mov
adc
inc
mov
mov
movsl
addr16
adc
aas
in
fldl
jno
pop
push
fildl
repz
cmpsl
pop
push
mov
or
pop
xorb
mov
outsl
push
xchg
cmp
int3
data16
mov
pop
pminsw
lcall
pop
xor
insl
cmp
mov
in
pusha
sahf
cmp
loop
dec
sub
call
rcr
sbb
cmc
arpl
ss
xor
fsubrs
sub
lock
mov
jnp
repz
add
sbbb
adc
notl
pop
sbb
mov
test
or
stos
jl
cwtl
in
shrb
outsb
push
mov
mov
hlt
adc
sbb
mov
cltd
movsb
ret
add
xchg
test
leave
jp
or
mov
xor
inc
jbe
mov
pop
stc
movsb
ljmp
jp
jb
fnstcw
push
push
shr
push
push
mov
add
lods
mov
shll
pop
sbb
cmc
and
jns
mov
and
sub
mov
mov
repz
pusha
jl
sub
repnz
dec
adc
mov
lds
sbb
xchg
fstpl
test
idivl
jns
ljmp
addr16
add
jnp
aam
sbb
out
aas
lret
cmp
sbb
fs
movsl
aaa
jl
nop
xlat
adc
xor
xor
sti
jg
jle
movsb
sbb
mov
mov
add
fwait
in
lret
jb
add
mov
mov
cltd
icebp
sbb
push
mov
lods
in
mov
js
call
test
call
jecxz
int3
out
mov
and
mov
xchg
daa
mov
push
mov
std
insb
mov
or
push
aad
jns
test
ljmp
and
shlb
pop
xor
adc
punpcklbw
jbe
add
outsl
adc
mov
push
cmp
dec
popf
das
push
dec
add
xchg
cs
pop
ljmp
mov
in
mov
jp
adc
xor
add
or
je
pushf
mov
xor
adc
lret
dec
lods
sub
sub
rcl
enter
adc
jecxz
imul
arpl
xchg
loopne
aam
xchg
jae
ret
xlat
call
jmp
push
aaa
test
imul
sahf
pushf
sbb
dec
lcall
pop
xor
add
adc
xor
test
mov
xor
leave
push
cltd
loope
push
mov
inc
push
mov
xor
mov
clc
cld
scas
inc
push
adc
daa
sub
int3
sub
xchg
addr16
je
scas
cltd
arpl
popa
sbb
fisttpll
je
mov
jge
aam
dec
add
clc
repz
pop
and
repnz
cli
test
push
popa
in
fadds
lock
dec
fisubrs
popa
pop
mov
and
dec
pop
kaddb
inc
fs
mov
push
add
je
jns
in
and
das
dec
ja
sub
adcl
sub
or
cli
test
add
cmpsl
xor
push
mov
pop
mov
ret
cli
add
mov
mov
mov
orl
mov
std
jmp
sub
cmp
mulb
adc
dec
cs
shr
xchg
test
push
jnp
dec
mov
mov
and
inc
stos
hlt
jg
stos
fimull
call
mov
or
push
sbb
add
pop
cmp
stos
es
std
scas
popf
cmp
lods
scas
mov
pushf
sbb
out
mov
mov
lret
dec
fldcw
ss
pop
lret
xor
in
and
mov
pop
rcrl
popf
jmp
pop
or
jecxz
inc
lods
mov
adc
or
andb
and
adc
sbb
loope
push
mov
daa
rorl
sub
test
mov
and
mov
jns
xchg
pop
cmpsb
adc
cmp
daa
xlat
jae
negb
enter
mov
xchg
testl
cmp
addr16
push
mov
jno
sub
lret
mov
shr
cli
aaa
mov
popa
mov
jno
mov
ja
dec
lcall
sbb
dec
ss
daa
movsb
cmp
int3
xchg
dec
xor
sub
aam
jge
jae
or
sub
push
enter
mov
icebp
jne
push
mov
xchg
inc
fistl
negl
loopne
testl
or
ja
jnp
movsb
pop
test
aaa
in
stos
sub
clc
pop
cmpsl
jle
lret
push
mov
mov
xor
xor
into
test
daa
and
lods
push
daa
test
mov
adc
cmp
mov
es
mov
mov
movsb
fstpt
movsl
dec
or
mov
enter
aad
xor
into
xchg
and
and
popf
cmpsl
leave
jne
lret
cmp
movsb
addr16
daa
rcll
ror
adc
jg
test
rcll
and
xchg
nop
adc
xchg
dec
stc
sbb
push
and
jb
xchg
popa
xor
bound
test
out
lods
adc
es
cli
push
ror
adc
and
jno,pn
mov
mov
mov
or
xchg
stc
add
or
out
scas
adc
orl
cmc
push
cmp
fcomps
leave
mov
push
addl
jg
icebp
mov
mov
push
cmpsb
mov
and
fs
push
outsl
sahf
dec
add
icebp
fidivl
fwait
xor
leave
jle
pop
mov
lea
movsb
ja
xchg
xchg
or
xchg
sub
adcl
jecxz
jns
xchg
sub
mov
jnp
dec
shl
jl
sbb
sbb
stc
gs
loope
clc
inc
cmp
stos
movq
pop
jmp
xor
std
sbb
out
pop
mov
or
ficompl
inc
mov
stc
jmp
or
adc
filds
sub
and
test
pop
inc
dec
mov
das
nop
jge
push
push
scas
mov
addr16
mov
out
lock
jecxz
push
lret
enter
sbb
stos
jns
insb
sbb
xor
mov
es
jne
and
arpl
cli
clc
aam
aam
out
or
cmpsb
cmc
jecxz
sbb
insb
mov
mov
or
xor
dec
pop
adc
lret
fdivr
inc
sti
pop
pop
out
or
into
mov
adc
inc
cmp
andb
xlat
and
pop
rclb
adc
mov
insb
outsl
pop
add
mov
and
add
lcall
rorb
lret
mov
aas
lea
jae
stc
call
clc
sub
fmulp
jae
and
insb
lds
insb
daa
jno
push
enter
pop
dec
popa
std
mov
leave
lcall
loopne
xchg
mov
sub
pop
or
push
sarb
aad
push
jbe
test
jb
push
sbb
and
adc
sub
sub
dec
adc
out
sbb
ds
lret
jecxz
int
int
lret
mov
sub
push
aad
sti
fnsave
mov
xor
pop
pop
or
inc
andb
pop
adc
pop
cmp
mov
xor
mov
jle
or
pushf
cmpsl
mov
add
inc
jno
pop
gs
std
stos
gs
fcmove
mov
push
into
out
pop
sti
leave
push
pusha
push
dec
fsub
shll
ljmp
test
fildll
inc
jmp
pop
mov
xor
xor
push
and
lds
addl
mov
adc
repnz
push
and
insb
inc
dec
outsl
pop
push
pop
inc
scas
push
xor
aaa
fs
xchg
inc
sub
mov
test
cltd
mov
adc
dec
or
movl
fsub
pusha
or
push
sub
ret
outsb
dec
test
push
xchg
lods
sahf
cmpsl
pop
push
lcall
hlt
insl
aam
inc
imul
in
int3
loop
push
sub
lcall
dec
gs
fdivrl
push
mov
push
mov
cmp
aas
not
icebp
divb
stc
xchg
jno
inc
aam
loop
xchg
inc
jae
xchg
sbb
mov
out
aam
mov
dec
out
jl
mov
jl
xchg
cmp
rol
movsl
repz
loope
popf
imul
push
xchg
mov
push
pop
ljmp
lret
imul
cs
mov
sbb
cs
dec
in
inc
dec
andl
mov
add
hlt
iret
int3
adc
mov
dec
test
jae
insb
sahf
dec
imul
in
mov
clc
movsl
pop
xchg
mov
dec
dec
mov
out
fstl
jg
addr16
pop
dec
xchg
insl
adc
dec
jbe
push
xchg
aam
sub
fidivs
fmull
dec
dec
faddl
push
xor
mov
sub
dec
inc
movsl
push
add
lcall
subl
orb
inc
pop
ljmp
fwait
mov
jb
scas
imul
pop
adc
push
cltd
enter
or
into
cmc
fldl
into
pop
cmc
mov
inc
out
mov
sub
hlt
insl
xchg
mov
pop
loope
scas
sub
mov
xchg
in
cltd
mov
or
into
pop
addr16
data16
xchg
or
push
and
mov
outsl
and
nop
push
adc
cmpsl
pop
sbb
mov
dec
std
pop
add
cmpsl
out
mov
cmp
dec
dec
sbb
fnstcw
xchg
fdiv
jecxz
xchg
test
or
aaa
add
ror
out
clc
jns
add
sbb
int3
dec
pop
inc
cs
inc
in
fildll
mov
adc
lcall
mov
sub
inc
mov
and
xchg
xor
enter
mov
scas
xchg
fnstsw
testb
cmc
adcb
enter
lcall
jl
inc
mov
push
jnp
arpl
loope
pop
cmp
push
pop
push
fnstcw
jo
adc
in
loope
adc
nop
add
mov
inc
aas
ret
xchg
xor
subl
or
mov
ds
stos
aas
xor
xchg
out
cli
pushf
insl
fnstenv
int3
xor
sub
add
out
movsb
fnstsw
inc
and
out
jns
xchg
mov
fidivrs
pusha
call
imul
xchg
jns
and
pop
rcrb
ss
insl
enter
jge
in
enter
mov
lods
adc
pop
pop
mov
fmul
pop
call
lret
lret
dec
out
sbb
sub
mov
xor
sub
add
mov
repnz
fs
insb
jg
jg
in
jmp
push
fldt
mov
insb
pop
scas
ja
xchg
push
push
ja
in
xchg
inc
pop
add
jno
cmpsl
push
ret
cmp
inc
mov
mov
hlt
clc
jl
pop
mov
iret
pop
sub
das
sbb
push
xchg
loope
pushf
pop
sti
pop
xchg
pop
mov
jno
xor
adc
lret
cli
test
mov
mov
xor
orb
test
and
inc
pop
adc
pop
push
mov
adc
push
lods
imul
incb
pop
cmp
out
test
xlat
notl
push
push
lret
push
or
sbb
pop
xor
adc
mov
icebp
xor
aam
test
or
jb
bound
and
das
in
and
mov
push
mov
mov
sahf
pop
sbb
mov
addr16
lret
pop
imul
std
sti
and
xor
test
pop
aas
insl
sub
popa
aad
call
mov
pop
mov
pop
jl
das
xchg
push
inc
pop
lahf
adc
pushf
sbb
sub
in
cmp
inc
add
sti
inc
xchg
out
mov
and
or
test
pop
xor
sarl
cmp
jg
iret
incb
sbb
mov
notb
mov
sti
cmpsl
lods
or
xchg
addr16
dec
out
in
pop
dec
dec
jbe
js
ss
jge
sub
inc
loope
adc
adc
fwait
ds
add
mov
pop
das
das
int
cltd
mov
or
popa
fistl
inc
add
pop
sub
pop
dec
insl
mov
add
mov
filds
xchg
jns
ficoml
sti
xorb
test
in
aam
ja
cld
cwtl
cmpsb
stc
jle
mov
sub
je
imul
and
out
loope
cld
push
je
xor
adc
fisubs
sbb
test
stos
pop
insl
jbe
cmc
mov
test
push
push
sbb
andb
je
jns
or
aas
test
mov
shl
or
jmp
xchg
adc
xor
and
jecxz
ret
repz
xchg
call
cltd
imul
cmp
in
jb
jp
sub
fistps
xchg
test
or
and
loopne
arpl
mov
pop
mov
stos
popa
addr16
xchg
imul
ds
lock
pop
pushf
and
js
jb
add
mov
jle
imul
ljmp
jmp
jnp
mov
xchg
jl
rcll
jne
fwait
add
push
call
sbb
xor
cmp
out
out
inc
adc
bound
jb
rcr
addr16
cmp
xor
pop
xchg
fs
push
call
mov
jne
fsubrl
mov
mov
mov
add
sti
mov
and
je
es
loope
lock
cmp
loopne
test
cwtl
in
xchg
mov
sbb
mov
es
arpl
xor
xor
sbb
sbb
add
inc
xchg
or
das
jl
add
stos
mov
or
cmpsl
orb
aaa
lcall
and
je
outsb
iret
push
dec
cmp
fcmovne
outsl
mov
ret
adc
pop
ffreep
or
jno
stos
add
adc
dec
pop
xor
jno
xchg
aas
sub
mov
pusha
icebp
xchg
add
je
xchg
shll
enter
fsubr
idivl
jl
fldl
int
xchg
roll
pop
ja
loopne
or
cwtl
mov
stc
std
xor
cwtl
mov
outsl
xor
les
les
insb
out
iret
sub
adc
mov
movsb
pop
inc
mul
mov
mov
xchg
test
mov
inc
ja
xor
adc
xchg
popa
push
jo,pn
xorl
faddl
xchg
iret
ds
testl
add
fcmovu
sub
sbb
lcall
or
test
add
js
call
pop
shll
popf
mov
pop
outsb
lock
mov
aas
cld
bound
outsb
das
das
cli
je
hlt
cld
xchg
push
shlb
div
data16
mov
mov
pop
dec
and
or
push
mov
xor
idivl
and
inc
and
aaa
push
popf
decb
and
jl
stc
repnz
mov
xchg
fisttps
cmc
sti
or
lods
cmp
cmp
stos
pusha
lods
dec
mov
cmpsb
xor
test
cli
inc
shrb
out
je
fists
ds
testl
test
pop
xor
mov
jae,pn
in
or
ss
ja
xchg
inc
mov
mov
add
or
mov
sub
dec
cltd
mov
mov
mov
sbb
imull
rorl
push
pop
pop
cmp
sub
mov
push
sbb
mov
push
push
dec
rclb
xor
movsl
mov
or
mov
test
nop
into
jnp
mov
and
loope
pusha
adcb
icebp
jno
push
mov
sbb
ret
push
daa
lahf
iret
leave
arpl
dec
jg
and
pop
jecxz
push
sub
popa
xor
je
lea
cmp
mov
int
bound
jmp
fistps
jo
xor
pop
mov
std
out
in
add
iret
stos
jne
cwtl
rolb
ret
ss
shrb
in
leave
aas
xlat
push
into
jecxz
frstor
dec
loop
ret
out
divps
sbb
mov
cmc
fsubl
jecxz
test
sub
mov
adc
lcall
pop
xor
dec
jnp
xor
cmpl
fdivr
inc
dec
pop
xor
insb
push
or
inc
adc
mov
cmp
push
push
aad
lods
popf
mov
mov
not
sbb
pop
jb
mov
jge
js
dec
jno
add
sub
dec
rorl
inc
push
adc
pop
loop
cmpsl
adc
jg
addr16
movsb
ret
mov
out
add
rcll
subb
lret
sub
pop
mov
mov
and
mov
repz
xchg
dec
scas
cs
cs
mov
lea
sub
dec
mov
pop
addr16
in
push
mov
in
xchg
push
test
pop
fwait
jmp
mov
pop
out
jo
pop
adc
jb
sti
adc
sub
mov
and
jne
repnz
cmp
push
mov
inc
mov
je
pop
mov
pop
cli
sub
aam
addr16
repz
int3
mov
or
mov
xchg
mov
push
pusha
push
in
test
idiv
mov
mov
sbb
ljmp
jnp
or
fldpi
lret
insl
mov
xor
mov
roll
add
ds
lret
jp
js
fsubs
out
jae
int3
mov
repz
dec
pop
sub
lret
stos
stos
jg
subb
jb
inc
inc
add
and
gs
mov
cmp
inc
add
jmp
pop
rep
mov
adc
dec
lods
sbb
loopne
and
std
mov
in
outsb
xorl
dec
push
cli
add
sbb
dec
ss
sbbl
ds
sub
out
fdivp
pushf
dec
cmpb
sbb
bound
cmp
xchg
lret
pop
sbb
xor
jmp
or
inc
inc
test
mov
stc
invd
aaa
inc
xchg
xchg
xor
xchg
lcall
jae
sahf
test
cwtl
test
mov
nop
or
mov
mov
loopne
xor
add
ret
shlb
mov
sub
cmp
push
push
mov
cltd
add
fdivl
mov
jmp
inc
mov
sbb
icebp
int
xlat
sbb
testb
push
sub
mov
outsl
sbb
movsb
jg
push
or
lahf
push
addr16
mov
and
mov
cmp
fs
repz
clc
push
jne
dec
cmp
push
mov
push
adc
std
ret
mov
test
cmpsb
insb
sti
sub
cld
or
cwtl
fs
mov
loop
add
inc
icebp
loopne
das
inc
mov
xor
push
inc
fwait
idiv
and
and
cli
insb
cmp
loop
dec
ljmp
fsubrl
ljmp
xchg
idivl
loop
fcomi
lret
sub
ja
sub
fidivl
addr16
sub
out
add
addr16
loopne
sub
outsl
dec
add
mov
rcll
out
and
test
mov
int3
xor
dec
imul
jno
add
push
inc
sub
imul
sbb
pop
sub
test
xor
xor
push
insb
int
cltd
imulb
xchg
xchg
mov
decl
ljmp
mov
mov
frstor
cmp
popf
adc
dec
inc
dec
popa
or
rorl
lcall
por
adc
fdivl
out
shrb
cwtl
iret
pop
testl
sbb
jnp
and
mov
sub
cmpb
lock
pop
std
push
ret
scas
andl
bound
cmp
adc
stos
lret
xchg
jge
jbe
cmp
and
cs
popa
into
push
dec
jecxz
icebp
imul
push
loop
lcall
push
popa
mov
in
xchg
cmp
aam
bound
outsb
jmp
push
and
test
dec
dec
xchg
outsb
pavgw
scas
repz
mov
fsubrl
in
insl
jne
fmuls
jle
popf
andl
sahf
inc
sub
push
insb
fdivl
mov
push
inc
push
pusha
sub
test
data16
jmp
pop
sti
sbb
insb
dec
pop
ja
lods
inc
jbe
ds
int
shlb
sahf
cwtl
add
imul
subl
push
mov
lcall
stc
adc
or
dec
notb
mov
dec
mov
xchg
leave
fiaddl
mov
adc
xchg
add
inc
sub
mov
mov
clc
inc
je
dec
das
xor
and
gs
mov
loopne
mov
in
lret
add
mov
lret
jae
movlps
push
xchg
and
pushf
pop
and
popa
fs
adc
push
shlb
push
push
add
scas
scas
or
shll
push
and
addr16
nop
adc
cwtl
insb
inc
push
int3
mov
add
imul
fstps
int
ja
sbb
stos
out
test
fcoms
ds
jl
pop
call
dec
out
cmc
daa
mov
xchg
xchg
data16
or
add
test
int3
aaa
and
cmp
adc
movlps
and
js
addr16
loop
movsb
pushf
loopne
int3
lea
fisttpll
pop
fsubr
sub
pop
aas
lret
pop
cmp
dec
xor
xchg
fidivrs
int
outsb
adcl
mov
add
hlt
fwait
fs
out
bound
jmp
sbbl
sar
ljmp
cmpsb
outsl
jecxz
push
jnp
scas
in
xchg
adc
adc
mov
push
cltd
imul
pop
fsubrs
jecxz
pop
hlt
repz
push
mov
add
mov
pop
into
dec
scas
ljmp
clc
push
xchg
sub
out
pop
out
push
xchg
pop
imul
cs
mov
addb
dec
cmp
pop
pop
aam
push
stos
xor
sub
das
cld
dec
cld
arpl
or
adc
pop
imul
std
insb
push
cmc
repnz
adc
loope
sbb
jl
imulb
adc
dec
addr16
aad
xchg
mov
pop
pop
loope
stos
shlb
add
xchg
ret
add
pop
lods
mov
mov
cmp
lods
xchg
test
pushf
adc
xchg
aaa
in
mov
dec
pop
jne
data16
mov
clc
xchg
lds
push
sub
xor
ficoml
push
mov
push
cld
imulb
sbb
dec
mov
rorl
dec
xor
aam
sbb
mov
mov
cli
movsb
loopne
fcmovbe
jg
pop
cmp
mov
cmp
inc
fstpt
sbb
xor
int3
adc
mov
bswap
cmp
gs
jmp
pop
mov
je
pop
lahf
aam
ljmp
xchg
pushf
lods
je
popa
jo
hlt
add
xchg
loopne
xchg
mov
stos
adc
pop
add
mov
ljmp
test
inc
xchg
push
lahf
push
jecxz
outsb
xchg
mov
sub
adc
cwtl
push
lret
cmp
insl
sti
out
pop
lahf
push
sti
jge
pusha
and
scas
cmp
enter
xlat
lret
or
subl
dec
mov
jmp
enter
popf
sbb
jns
inc
push
jnp
add
sbb
shll
mov
xchg
test
int3
or
pop
pushf
lods
xchg
and
rorb
stc
push
daa
out
xchg
outsl
js
mov
fldcw
mov
gs
mov
aam
stos
pop
xor
nop
xchg
cwtl
out
xchg
lret
jmp
cmp
test
sbb
mov
lcall
and
sahf
aaa
inc
enter
inc
mov
scas
inc
push
adc
and
mov
out
je
push
add
shrl
rcrb
mov
dec
or
dec
movsl
decl
jmp
js
scas
and
jecxz
sti
repz
scas
inc
ds
sub
sti
cmc
inc
adcl
add
xor
imul
aam
sbb
stos
outsl
scas
lods
bound
mov
fs
inc
jmp
dec
addr16
sub
push
stc
or
imul
mov
add
or
loope
scas
xchg
pop
stos
mov
and
lret
add
mov
or
adc
subl
outsb
cmp
int3
mov
outsl
pusha
cmp
ljmp
data16
pop
jno
xchg
adc
mov
cmp
mov
int
xchg
popa
adc
inc
mov
les
insl
jbe
jne
arpl
mov
sbb
ss
ficoms
lea
in
stos
mov
rcl
ljmp
ljmp
lret
mov
jp
pushl
idiv
pusha
and
stos
adc
mov
push
in
push
mov
mov
test
inc
movsb
xor
es
aad
pushf
jg
jb
push
sub
jne
cwtl
push
inc
shll
push
xor
incl
pop
out
out
or
push
sub
in
addr16
jp
pop
inc
push
push
imulb
xor
push
out
push
lds
pusha
pop
mull
out
sub
mov
subl
sbb
shrl
add
imul
sub
xor
out
jne
sti
cmp
jg
scas
and
add
into
sbb
add
adcb
jae
add
lds
popa
sub
sbb
shr
icebp
outsb
xchg
shlb
outsl
push
das
and
push
icebp
add
or
fidivrs
pop
sbb
ficompl
repz
jle
mov
mov
jge
xchg
xchg
inc
mov
cmp
push
mov
mov
xorb
cmp
jle
addr16
fildl
je
and
or
and
fst
int
ljmp
cmpsb
vphsubwd
jne
imul
lret
inc
int3
mov
jae
stos
cmp
mov
int3
mov
mov
adc
mov
push
sub
mov
mov
pop
xchg
fst
mov
lcall
push
nop
mov
or
out
xchg
xor
fucom
xchg
shlb
icebp
popf
sub
fisubrs
mov
cmp
xchg
fnstcw
rcrl
stos
roll
insb
rcr
cltd
sbb
mov
cltd
fmul
test
lahf
xor
insl
cwtl
stc
es
pop
add
add
sub
and
fcomps
jecxz
mov
or
imul
mov
inc
xor
mov
dec
xor
cwtl
and
add
adc
out
jne
data16
adc
in
data16
inc
lret
adc
fsqrt
mulb
mov
add
mov
pop
xchg
shlb
pop
test
notb
mov
aam
push
cli
push
ja
icebp
xor
adc
xchg
jae
enter
test
push
mov
mov
mov
jae
pop
arpl
mov
imul
lret
test
inc
push
mov
sbb
mov
fdivr
xchg
in
in
aaa
je
loop
pop
insb
aas
movsb
xchg
sbb
sub
and
mov
sub
fstps
push
and
out
femms
ficomps
jge
fwait
mov
cmp
pop
bound
pop
inc
mov
push
bound
hlt
or
insb
fisttps
dec
in
fiaddl
mov
jle
subb
shrb
pop
xchg
mulb
out
mov
sbb
jae
pop
add
jbe
ja
cmp
cmc
mov
jle
cs
dec
mov
jp
pop
inc
std
test
sarb
dec
and
lock
and
cmp
ds
insl
je
xchg
xchg
and
lods
xchg
and
push
push
xor
outsb
fisttpl
pop
pop
xchg
mov
out
andb
out
jae
mov
daa
mov
hlt
push
int3
mov
inc
adcb
cmc
inc
add
cmp
xchg
xor
cmp
int
sahf
lahf
add
roll
das
mov
mov
addr16
fsts
xor
cmpsl
adc
lret
rclb
sti
and
jns
sbb
mov
repz
inc
push
lret
lods
cmp
lods
pop
jne
gs
fisubs
out
jnp
testb
and
adc
xor
and
pop
sbb
pusha
jge
loop
or
outsl
movsb
fs
dec
iret
xchg
movsl
lcall
fldt
push
jecxz
inc
fcomps
add
push
aas
mov
cmp
mov
dec
gs
dec
xchg
ret
jg
mov
movsb
jae
jge
outsb
or
lahf
outsl
dec
cwtl
dec
imul
iret
cmpsl
or
hlt
dec
test
mov
in
jecxz
in
jge
in
pop
or
and
xchg
outsb
xor
cmpsb
test
mov
dec
dec
push
add
outsb
push
repz
mov
jnp
jo
xor
icebp
les
dec
insb
pop
push
out
out
mov
imul
and
imul
xchg
mov
into
test
int
add
in
sti
das
push
mov
mov
and
out
decl
hlt
pushf
addr16
fidivl
pusha
lds
movsl
out
leave
mov
sub
repnz
and
mov
mov
stc
jae
mov
lods
sub
hlt
xchg
push
int
adc
lock
pop
std
out
adc
push
leave
jl
cmp
inc
add
enter
cmp
sub
push
aas
or
sbb
sbb
jge
cs
outsb
mov
push
sarl
mov
dec
shr
mov
loop
call
int
pop
mov
adc
mov
jmp
mov
dec
adc
push
xchg
mov
sub
aad
or
aad
pop
pop
cld
das
hlt
ret
push
inc
mov
push
nop
cmp
mov
mov
xor
mov
mov
out
and
pushf
cmpsb
pop
mov
fildl
sti
xor
sar
xchg
jle
cltd
mov
mov
lock
lods
xor
fistpll
insl
lock
clc
mov
mov
sub
cmpb
dec
xchg
mov
cltd
test
lods
cmp
mov
sbb
mov
pusha
add
cs
repz
cmp
sbb
pop
stc
push
xchg
add
pop
dec
sub
mov
xor
dec
rclb
pop
ja
or
xchg
push
or
or
adc
lcall
dec
in
jle
cmpsl
and
jne
jo
loop
cmc
jg
xor
orb
pushl
add
sbb
je
and
popa
add
xchg
not
add
jns
and
jns
adc
push
mov
enter
repnz
in
fs
mov
jne
dec
lods
shlb
push
dec
faddl
fwait
cmp
inc
cld
pop
cltd
les
ds
push
jns
sub
repz
divl
in
iret
out
adc
pop
mov
popf
pop
pop
inc
jg
ljmp
and
scas
gs
or
repz
xor
outsl
ja
ret
mov
and
add
pop
pusha
cmp
and
mov
das
mov
jg
in
push
sub
sbb
xor
push
lds
inc
loopne
sbb
call
jecxz
mov
pop
inc
popf
dec
xchg
insb
gs
mov
mov
test
add
outsb
fimull
sbb
jno
sar
or
test
arpl
xchg
jno
add
adc
pop
mov
jno
test
inc
in
push
xchg
test
int
add
xchg
mov
fsub
sub
adc
mov
pop
inc
movsl
sbb
int
sti
fidivrs
jge
mov
stc
sub
lret
ljmp
jb
xlat
adc
jle
ljmp
sahf
dec
lock
stos
jl
lea
scas
and
cmp
adc
mov
lcall
sub
sarb
scas
lods
not
sub
xchg
mov
inc
xor
cs
jne
cmp
adcb
gs
pop
sub
fisubrl
and
scas
or
xor
pop
jbe
mov
xchg
shrb
dec
flds
push
cmpsl
push
mov
sub
sbb
sub
out
mov
pop
add
inc
lods
push
or
mov
pop
imul
inc
add
lods
int
test
and
xor
mov
xchg
cmpsl
push
xchg
imul
mov
std
jge
into
cmp
adc
push
int3
pop
xor
outsl
or
sub
mov
ja
cmp
xor
mov
mov
dec
push
in
adc
jae
pop
shrl
leave
mov
stc
add
xor
adc
ror
jge
cmpsl
ds
mov
jb
dec
imul
inc
les
je
pusha
je
pushf
push
clc
xor
fsubrl
push
add
jp
imul
dec
ja
aas
add
sarl
hlt
add
xor
hlt
sub
push
cmp
out
fwait
mov
sub
and
addb
aam
push
sahf
cmp
push
sub
inc
dec
fiadds
sub
cmp
cmp
cmc
arpl
mov
ja
mov
lods
rcrb
ds
add
lods
int
fwait
lods
sbb
test
lcall
adc
xchg
push
adc
sub
stos
cmpsb
stc
xchg
mov
push
or
outsl
push
outsl
add
sbb
pop
sbb
inc
push
das
aam
xchg
mov
std
jae
fwait
imul
add
push
add
add
stos
mov
repz
movsb
sbb
mov
mov
inc
cmpsb
xor
jle
cwtl
dec
sbb
outsl
aas
int3
xor
mov
stos
enter
mov
pop
mov
lret
and
cmp
fs
and
sub
cmpsl
mov
cld
ljmp
mov
lahf
xlat
jb
add
dec
jb
aas
enter
sbb
push
cmp
out
loop
mov
js
inc
mov
repnz
xchg
mov
inc
in
xor
mov
sbb
out
lock
cld
lock
mulb
jne
shr
sahf
divb
add
bound
jle
fldl
sbb
xor
cmp
insl
xor
push
or
mov
rol
or
jnp
icebp
xor
lea
test
pop
mov
dec
jmp
call
pop
add
ljmp
scas
stos
xchg
bound
pop
or
nop
es
inc
in
fidivrl
mov
add
xchg
loopne
sub
jbe
stos
cmpsb
in
stc
lea
out
lods
sbb
fmuls
or
cld
xlat
pop
mov
xchg
push
push
addl
mov
jb
inc
fidivrs
aaa
inc
jmp
data16
les
add
lds
sbb
scas
loop
cmp
ficomps
pop
mov
movsl
iret
mov
add
or
sub
jae
dec
movsl
insl
ja
call
push
sti
adc
ja
pop
mov
aad
sub
ret
leave
pop
xchg
andl
movsb
push
jle
dec
call
flds
inc
rcrb
imul
in
aad
fwait
out
test
mov
or
int3
out
push
shlb
mov
add
cli
dec
stos
es
popf
xchg
in
add
orl
add
cltd
sbb
jmp
enter
ja
add
mov
sbb
dec
xlat
fcompl
mov
insb
push
sti
cmp
cmp
mov
gs
lds
xchg
cli
pop
jnp
push
pusha
lret
addr16
daa
push
sub
xor
call
in
and
mov
sub
inc
mov
insb
int
dec
cmp
and
es
jmp
sbb
cmp
adc
jmp
jl
mov
sbb
and
jge
cmp
ret
mov
cld
or
ds
push
xchg
ja
pop
lea
lds
loope
cmp
xor
lcall
cwtl
mov
js
enter
or
or
pop
push
inc
in
and
adc
adc
and
pop
adc
repz
scas
xor
int
insb
rcl
pop
cmp
leave
mov
das
jl
fistpl
cmp
inc
mov
push
cmp
mov
adc
push
xor
mov
sbb
or
mov
mov
ja
lcall
ljmp
outsb
stc
lods
push
out
mov
push
jg
push
push
jno
mov
pop
or
inc
or
add
out
lds
daa
jae
and
mov
sub
in
popa
xor
mov
jp
fnsave
cmp
sub
add
mov
inc
dec
add
pop
jle
push
adcl
or
xchg
adc
dec
jae
adc
pop
inc
sarl
scas
cmp
pop
je
mov
mov
rcrb
xor
sub
push
in
jle
addr16
push
je
outsl
sub
jg
aad
clc
pop
pop
sbb
repnz
pop
sub
add
addl
jge
mov
add
pushf
mov
dec
jo
out
sbb
in
mov
or
cmp
mov
sti
stos
xor
movsl
lret
cmp
pop
nop
inc
mov
pushf
hlt
fs
fldenv
aas
jae
jl
mov
test
add
nop
lahf
sub
mov
in
clc
sub
cmp
ret
in
jne
inc
or
push
cmc
push
mov
out
cmpsb
outsb
pop
insb
mov
adc
sar
push
movsb
aaa
pop
xchg
popa
inc
xor
ss
sub
xchg
xor
xchg
add
loopne
sti
fbstp
stos
test
add
lock
pop
shrl
fdecstp
fimuls
mov
enter
jbe
mov
and
cmp
ficomps
sbb
dec
sti
cmp
sbb
lods
cmp
lcall
and
xor
sahf
imul
enter
sub
fsts
lds
ljmp
xchg
mov
testb
or
push
inc
jle
mov
or
lds
lret
addr16
or
int
in
adc
dec
lea
and
adcl
out
arpl
scas
aad
jle
mov
movl
out
stos
dec
scas
gs
cmc
fdiv
nop
or
mov
and
jnp
cld
fs
cmpsb
mov
incb
iret
fnstcw
xor
fs
pop
outsb
dec
xor
loop
idiv
cmp
jmp
psraw
imul
mov
out
sub
fimull
mov
jle
loop
cmp
sub
xchg
mov
int
in
outsl
sti
sbb
test
cmp
subb
fs
ret
dec
inc
adc
mov
pop
sti
sub
mov
mov
idivl
adcl
mov
rcrb
adc
mov
jne
icebp
lret
out
shlb
and
ret
jmp
mov
adcl
cltd
xor
insb
inc
or
dec
mov
add
mov
xchg
xor
and
mov
outsl
movsb
out
mov
inc
aaa
sub
cmp
pop
adc
bound
push
pop
stos
gs
or
or
cmc
rcl
xor
add
push
jne
leave
enter
mov
dec
and
inc
sti
pop
and
pop
mov
dec
push
mov
adc
adc
jecxz
sub
je
fdivl
xchg
fldl
aad
sbb
adc
fs
jno
jo
aas
cld
outsb
aaa
shlb
sub
dec
cmp
cld
xlat
sti
mov
push
push
push
ja
aad
repnz
mov
rcl
sbb
sbb
mov
nop
mov
jp
pextrw
lahf
jl
pop
jo
cmp
shll
inc
sub
mov
hlt
std
adc
hlt
aas
fidivrl
gs
fadds
movsb
loop
mov
or
xor
dec
jne
das
jnp
cmp
and
and
or
jmp
cltd
mov
add
push
pop
loopne
lcall
out
or
dec
or
test
pop
stos
adc
or
sbb
movsl
dec
sbb
xchg
aaa
sbb
insb
nop
jbe
dec
add
pop
pushf
sbb
in
xor
ljmp
cwtl
lret
cmc
xchg
pop
lods
rcll
jl
jbe
cmpb
mov
std
mov
in
bound
add
test
iret
add
add
mov
push
cmp
push
cs
sub
hlt
pop
push
adc
in
mov
mov
push
addr16
sub
jnp
push
pop
dec
pop
xchg
mov
xor
aaa
jb
mov
hlt
sub
lret
dec
call
ficompl
pop
adc
test
dec
xchg
mov
add
lods
sbb
sub
hlt
mov
repnz
ja
mov
dec
sbb
movb
jmp
adcb
cmc
or
sti
xchg
inc
shll
out
dec
inc
sbb
jp
mov
fdivl
out
mov
out
pop
js
xchg
and
cmp
lret
insb
in
mov
fmull
jmp
jg
inc
push
repnz
mov
rcll
pop
mov
aas
scas
lock
push
fdivr
mov
xor
cmp
xor
pop
stc
lea
cmpsl
add
roll
clc
mov
out
push
xchg
push
inc
cmpsb
jne
iret
dec
cli
scas
xor
dec
pop
pop
push
mov
mov
xchg
push
mov
shrl
xchg
sub
ficomps
movb
mov
lea
xor
cmp
stos
roll
gs
mov
int
iret
xor
jle
xor
sub
lods
imul
hlt
sub
mov
addr16
xor
jns
sbb
jb
lods
cli
xchg
cmpl
inc
push
dec
add
inc
imul
sbb
sbb
bound
push
sub
sub
jbe
push
mov
mov
mov
divl
jl
jg
xchg
int
ja
cmp
xchg
lcall
inc
fidivs
dec
cmp
out
pop
ret
orl
lock
cli
test
rcrl
dec
scas
das
mov
cmp
popa
mov
ret
sahf
cltd
sub
fnstenv
andl
xor
mov
arpl
sbb
dec
jmp
stos
outsb
adc
mov
jo
orb
push
stos
and
shl
push
mov
mov
outsb
jmp
adcl
push
bound
lock
lea
into
jmp
add
pop
cmp
js
cs
sbb
mov
push
mull
fsubr
jge
mov
in
mov
fisttpll
cmpsb
mov
mov
mov
push
rorl
sbb
sbb
pop
lods
xchg
mov
push
jns
dec
adc
cmpsl
shll
xor
cmp
xchg
add
pop
fneni(8087
jg
xor
in
mov
aas
out
inc
clc
add
mov
enter
inc
jae
addr16
xorb
xchg
or
test
mulb
leave
es
xchg
pop
mov
mov
dec
inc
int
mov
into
insl
roll
jmp
arpl
in
add
mov
push
popa
jno
cwtl
add
cmp
je
test
negl
mov
iret
bound
sub
jo
pop
ror
cmp
enter
scas
ret
fmul
int3
mov
adc
jmp
sub
jo
out
lea
ret
ja
mov
test
out
inc
mov
cmp
in
and
and
or
nop
cli
enter
rcr
mov
loopne
movsl
fiadds
xchg
lods
pop
lds
fdivs
adc
imul
mov
andb
into
add
shll
sub
jnp
or
test
imul
scas
test
test
notb
jae
jbe
cmp
push
push
test
sarb
xlat
lds
gs
loope
sar
dec
jno
mov
mov
test
cmp
xchg
xchg
jg
cmpsb
or
shll
sbb
sbb
jp
adc
popa
out
mov
sarb
mov
or
mov
orl
orb
inc
sub
fimuls
mov
in
dec
sbb
movsb
out
adc
pop
sub
stos
cmp
adc
push
inc
cltd
jecxz
adc
and
test
mov
jne
sub
fldenv
sbb
arpl
stos
pop
push
nop
loopne
fbld
mov
lcall
mov
scas
testb
jmp
stc
cmc
mov
in
push
ds
fstpl
or
xchg
test
mov
addr16
fimuls
aas
xchg
xchg
inc
xchg
mov
lds
stos
jmp
insb
mov
sbb
cmc
iret
dec
and
out
lahf
xor
call
mov
int3
inc
xchg
fildl
ja
push
enter
inc
imul
dec
or
loopne
push
jle
and
and
jge
adc
jae
adc
sbb
ret
jp
pop
fdivrs
mov
add
pop
je
nop
cmp
pop
xchg
cltd
inc
mov
repz
inc
xchg
mov
cli
aam
sbb
andl
rcrb
out
imul
aad
push
int3
mov
pop
subl
test
shlb
mov
or
out
xor
adc
jge
adc
idivb
rcll
pop
pcmpeqd
jg
loope
mov
arpl
mov
lods
sbb
je
jge
push
and
cmp
aaa
roll
repz
add
popa
unpcklps
jnp
add
or
lea
mov
adc
les
lods
or
pop
add
fbstp
mov
mov
or
out
lods
lahf
enter
or
inc
pop
or
jo
insb
sahf
addr16
xchg
test
sub
or
add
test
mov
mov
lcall
and
xchg
or
push
push
adcl
int3
cmp
push
adc
dec
sbb
sub
out
sbb
test
add
shrb
dec
sub
jmp
add
lret
push
sbb
mov
or
cmp
jle
sbb
jnp
inc
cld
mov
mov
shrb
and
mov
sbb
fwait
cmpsb
aam
and
movsl
adc
dec
decb
jns
mov
ss
cs
ja
mov
and
push
outsl
movsb
aad
xchg
mov
dec
std
cmp
mov
loop
xorb
mov
jae
xor
sub
lea
xchg
mov
cli
jbe
or
sbb
mov
or
stos
scas
pop
jae
ret
sbb
js
mov
test
xor
mov
jno
aam
in
out
dec
lock
push
adc
loopne
std
aad
in
push
dec
ret
push
sbb
cmpsl
movsl
inc
sub
mov
movsb
dec
movsb
jae
mov
xlat
pop
fbstp
inc
in
inc
test
mov
aad
loopne
xchg
imul
jbe
scas
sub
sbbb
push
enter
out
xchg
lods
and
cltd
lock
push
adc
jno
andl
cmp
and
ficoml
jnp
dec
mov
popa
fstps
shlb
mov
xchg
mov
mov
adc
mov
push
cmp
icebp
adc
dec
cld
leave
cmp
leave
mov
addl
mov
pop
sub
mov
pop
jl
rorl
jecxz
inc
into
adc
inc
cmp
and
mov
pop
rcll
fwait
or
jns
mov
mov
or
sub
push
push
xchg
adc
or
inc
or
mov
aas
sbb
jbe
jp
dec
ds
sub
cmpsb
add
repnz
dec
je
aas
loope
and
mov
xchg
jno
lds
mov
sub
jae
fcmove
mov
imul
out
adc
xchg
icebp
mov
mov
inc
push
mov
mov
ljmp
sub
cmp
push
pop
mov
push
cld
mov
or
fs
sub
xchg
arpl
mov
movb
enter
mov
mov
or
cli
sub
fwait
insb
pop
mov
mov
cmp
adc
fwait
lea
mov
fcomi
outsl
cmpsb
mov
lods
addb
xchg
fstps
shll
jge
aaa
rorb
andb
je
fidivs
pop
adc
std
fldcw
mov
sti
jecxz
and
cs
pop
hlt
test
movsb
lcall
cmpsb
lret
mov
repz
int3
jns
mov
sahf
repnz
cmpsl
mov
pop
sub
in
popa
lcall
lret
xchg
test
push
addr16
aam
int
sti
std
jbe
inc
mov
dec
movsb
push
jp
mov
movsb
ret
and
mov
notb
mov
mov
mov
xlat
mov
mov
mov
cld
testb
mov
cmp
loop
cmc
dec
popl
shlb
xchg
pop
xor
cmp
xor
adc
es
add
push
xor
lods
daa
lcall
les
push
outsl
iret
pop
incb
dec
mov
or
inc
dec
das
cmp
push
pop
out
and
add
adc
inc
shlb
das
inc
cltd
mov
cmp
inc
add
and
push
inc
inc
pop
js
out
and
fldt
push
bound
insb
mov
cwtl
mov
jbe
fcmove
lock
add
repnz
jb
push
hlt
push
ss
jle
les
faddl
mov
cmp
mov
mov
sub
js
mov
pop
and
xor
add
jbe
pop
pushf
mov
sub
pop
frstor
jle
mov
std
lods
xor
add
cltd
and
adc
fbld
pop
xchg
push
jl
and
out
inc
in
push
data16
repz
int3
outsl
iret
pop
lods
xchg
xchg
jmp
js
lea
jb
sbbb
fsubrs
lods
and
arpl
lahf
in
cwtl
cld
out
or
adc
mov
cs
and
arpl
pop
add
mov
mov
cwtl
sub
fistpl
inc
test
es
ret
loop
mov
imulb
cmp
adc
popf
fs
outsb
repnz
fwait
mov
aad
mov
push
xor
and
mov
lods
xor
sub
cs
sahf
push
bound
dec
enter
xchg
or
cli
leave
in
out
sub
mov
test
or
xchg
and
push
in
rcl
mov
ja
inc
inc
adc
fisttps
adc
jno
ja
xchg
jne
bound
dec
enter
popa
sub
lods
in
or
or
sbb
enter
adc
js
fnstsw
push
das
shrb
shrl
jae
jmp
and
inc
repnz
mov
xor
adc
xor
cmp
inc
aad
sbb
aaa
pushf
imul
push
roll
icebp
dec
pop
call
add
push
sub
in
std
add
loopne
sbb
add
or
stc
or
shlb
fsubrl
mov
push
dec
inc
popf
nop
jl
sub
mov
mov
scas
push
cmp
mov
movsb
movb
fwait
and
sub
lods
dec
mov
adc
cmp
jg
mov
daa
in
sbb
mov
sbb
push
ficoml
sbb
pushf
imul
dec
push
and
inc
cli
mov
jo
mov
repz
lea
stos
popf
and
leave
stos
push
in
sbbb
xor
sti
out
mov
adc
add
sbb
cmp
jne
fsts
nop
mov
xchg
pop
cmp
jae
ljmp
jb
mov
jmp
dec
out
push
push
test
jbe
xchg
cmp
xor
ljmp
dec
jbe
and
pop
jmp
mov
repnz
jmp
mov
mov
pop
scas
into
mov
push
mov
fcomi
xchg
jno
push
scas
push
nop
insl
inc
scas
shl
sti
sbb
add
sbb
mov
mov
imulb
mov
les
in
dec
jecxz
pop
inc
das
push
push
pushf
movsl
mov
fadd
ret
addr16
aas
jno
sarb
add
cmp
jne
mov
daa
lea
mov
mov
in
insb
adc
movsb
pop
xor
dec
xor
and
sbb
xor
xlat
imul
mov
dec
clc
sbb
push
fdivl
add
inc
jle
cltd
push
pushf
outsl
inc
mov
xchg
fwait
and
jmp
jmp
ss
popf
push
leave
cmpsl
data16
pop
sub
inc
cs
repz
mov
je
subb
push
nop
inc
and
lret
mov
sub
and
push
ffreep
and
scas
aaa
cmp
jne
jle
mov
pushf
or
cmp
sahf
xchg
dec
push
es
add
cmp
aam
js
bound
popa
lret
ja
push
pop
mov
jb
sbb
jae
es
fcom
cmp
es
jle
mov
push
mov
mov
lret
insb
mov
out
loope
ja
xor
imul
popa
xor
enter
pushl
inc
add
push
cmpsb
or
adc
stos
loope
fmuls
rcl
mov
push
aad
mov
mov
push
or
das
mov
dec
or
fwait
rep
icebp
push
jmp
dec
call
dec
bound
aaa
stos
inc
es
push
dec
mov
andb
dec
push
xchg
in
stos
inc
jo
lods
dec
mov
cltd
mov
push
scas
bound
add
cltd
xchg
scas
adc
test
pop
jne
xchg
xchg
cmp
mov
mov
mov
inc
push
push
sti
and
in
adc
dec
mov
dec
out
je
insb
test
add
je
cltd
mov
pop
and
inc
cmpsl
mov
std
or
mov
fadds
popf
mov
pop
loopne
sub
sti
ds
dec
mov
adc
dec
das
data16
out
int3
cltd
lds
int3
popfw
cmpsb
xchg
repz
out
scas
movsl
or
movsl
lock
mov
mov
sbb
enter
dec
pop
sub
fwait
out
mov
repz
fnstsw
imul
mov
daa
xor
or
xor
jmp
xlat
movb
pop
in
xor
mov
xchg
sub
cmp
test
test
xlat
negb
test
jg
add
movsl
call
cmp
or
inc
pop
cs
push
mov
or
aaa
out
cmp
ljmp
pop
and
ja
adc
rol
xor
sbb
jbe
and
jle
and
adc
jbe
les
jp
sub
mov
sahf
jo
jp
sub
mov
es
pop
pop
daa
lret
sub
mov
out
in
add
and
outsb
rcrl
sbb
ds
arpl
cmp
dec
dec
ret
mov
push
shll
cmp
xchg
ret
mov
int3
mov
dec
cld
pop
je
cmp
adc
rcll
xchg
lea
rorl
test
adc
mov
push
pop
jmp
jecxz
xor
sub
mov
and
mov
mov
or
das
and
xor
sbb
xchg
je
jmp
pusha
mov
ja
mov
test
mov
scas
adc
xchg
lods
pop
dec
ljmp
mov
inc
add
mov
loop
cmp
mov
sub
decl
outsl
and
mov
les
xor
and
lea
mov
cmp
in
cld
xchg
lret
cmp
jb
in
inc
xchg
cwtl
inc
insl
sbb
loope
and
test
lods
pop
pop
pop
mov
and
dec
mov
int
dec
xor
xor
imul
inc
bnd
jmp
dec
sbb
roll
ss
sti
push
jno
sarb
xchg
mov
mov
leave
mov
xor
pop
adc
ffreep
jmp
mov
jp
gs
call
std
mov
inc
pop
aam
or
mov
pop
dec
mov
fadds
cwtl
loop
xor
fstl
dec
pop
mov
fbstp
fstps
fnstsw
sbb
inc
aad
aam
rol
add
sub
sbb
fldl
jnp
jp
add
insl
sarb
test
in
mov
mov
fwait
lahf
aas
repnz
mov
sahf
adc
mov
scas
fsubr
ja
and
add
sub
test
std
adc
nop
lret
ror
stc
into
or
popf
js
push
cmpsb
cmp
cmp
sbb
add
cmpb
jns
lods
push
out
xor
inc
xchg
mov
in
mov
push
loopne
scas
jno
mov
mov
xchg
data16
leave
mov
cmp
and
es
sti
pushf
mov
insb
mov
enter
xchg
lods
xor
enter
xlat
ficoml
adc
popa
fs
mov
pushf
in
ds
out
mov
leave
stos
imul
jmp
imul
add
add
gs
xor
pop
aaa
inc
cltd
subb
xchg
push
cld
int3
loop
pop
pop
jae
movsb
jb
pop
lds
push
arpl
orb
aam
subl
in
lcall
mov
stos
cli
ss
push
cwtl
test
sub
ret
jl
rorb
sbb
hlt
int3
sbb
sub
push
dec
cmp
add
mov
out
fadds
adc
out
push
test
lods
push
or
lahf
pusha
sub
divb
sub
and
les
mov
fdivs
or
fcoms
sbb
mov
dec
bound
jle
hlt
jecxz
icebp
arpl
adc
mov
mov
js
iret
es
add
ljmp
mov
inc
mov
cmpsl
push
and
push
jecxz
dec
push
mov
cmpsb
hlt
adc
xchg
jle
and
cmp
xchg
enter
adc
dec
ret
xor
xchg
jl
popf
jnp
lcall
push
or
jp
push
gs
clc
adc
xor
icebp
fldl
jle
mov
aaa
in
in
movq
dec
push
fs
mov
add
jp
inc
push
into
add
daa
cmpsl
daa
dec
add
sbb
jg,pt
xor
test
push
gs
push
shrl
mov
sub
cwtl
sbb
pop
add
or
js
mov
aas
mov
mov
xchg
jg
mov
and
sti
out
insl
dec
cli
mov
daa
inc
cmp
mov
js
xchg
xchg
fs
lret
pop
mov
pop
rol
adc
imul
inc
int
ljmp
clc
pop
mov
mov
push
clc
pop
xchg
test
sbbb
sub
xchg
jbe
push
and
jge
xchg
jecxz
pop
pop
stos
and
cmp
or
faddp
push
xlat
dec
imul
jp
pop
imul
mov
fcompl
test
in
add
in
jecxz
dec
mov
pop
fidivrs
cli
lock
negb
sahf
jno
clc
std
sub
jg
xor
out
push
enter
movsb
sbb
inc
loopne
and
mov
push
pop
aas
jne
xchg
sbbb
outsb
aam
sub
fadds
lret
rorb
lcall
mov
adc
cmc
loop
mov
xor
pcmpgtw
test
shll
jns
inc
cmp
sbb
insl
std
push
addl
mov
mov
repz
and
mov
shrl
cltd
lcall
push
mov
stos
lea
cmp
xor
jb
movsl
sahf
xchg
push
in
int3
cs
in
aad
cmp
mov
xor
adc
mov
mov
pushl
out
mov
jp
inc
lds
arpl
ds
mov
imul
jno
jo
or
push
nop
mov
pop
or
lds
mov
into
or
add
cmc
pop
cmp
mov
mov
or
pop
pop
aad
push
fstl
bound
jp
sbb
push
repnz
repnz
lret
test
jmp
sub
cli
fildl
sbb
mov
mov
mov
dec
dec
inc
loopne
addr16
je
stos
addr16
imul
ljmp
mov
jecxz
dec
test
xchg
pop
jnp
pop
aad
mov
cmc
shl
cmp
mov
mov
adc
mov
popf
xor
dec
dec
mov
scas
pop
mov
mov
cmp
push
test
int3
pop
cmp
jbe
lea
jnp
or
ljmp
pop
ds
int3
popf
add
repz
lcall
cmp
mov
dec
and
cwtl
fcompl
xchg
fs
cld
lret
push
mov
xchg
dec
or
dec
cmp
mov
xchg
sub
cwtl
lret
dec
pop
inc
mov
sbb
cmp
pop
ss
adc
push
add
mov
scas
jl
test
and
add
aaa
cwtl
add
in
mov
inc
out
jnp
xor
mov
sbb
pop
or
nop
push
or
stos
and
dec
das
jp
push
jo
hlt
adc
jne
in
add
icebp
popf
adc
aaa
mov
aam
roll
lods
dec
sahf
mov
inc
ret
jbe
popa
cmp
mov
stos
xor
inc
rcrl
xchg
stc
fwait
jmp
sub
mov
lea
xchg
or
mov
xorl
ljmp
call
rorb
andl
sub
dec
jo
xorb
and
mov
repz
lds
sub
push
cs
push
inc
push
shrl
ficompl
add
dec
dec
sub
inc
lret
add
sbb
imul
cmp
inc
push
sbb
cwtl
mov
shll
push
dec
shrb
lret
cwtl
popf
ret
mov
xchg
jb
jo
je
cmp
mov
sahf
jmp
pop
stos
and
adc
out
inc
sbb
test
pop
jbe,pn
fldcw
fdivrp
mov
cmpsb
ds
cld
xlat
inc
stos
daa
lret
sub
mov
scas
mov
mov
insl
push
in
push
lods
inc
cmp
sti
add
cmpsb
shll
addr16
push
sub
std
lret
rolb
adc
rorl
xchg
sub
jne
adc
mov
test
sub
pop
mov
cld
ret
stos
push
cmp
sar
dec
sti
sti
dec
pop
cmpsb
adc
inc
ret
sbb
mov
fwait
in
sbb
cmp
hlt
and
fwait
and
xlat
add
adc
xchg
or
scas
dec
lods
loope
jge
hlt
pop
stos
cmp
jbe
inc
jbe
pslld
add
jne
std
mov
ljmp
mov
movsb
inc
cmp
xchg
add
fldlg2
shrl
jmp
jb
es
fistpll
xchg
mov
cmp
mov
out
jp
dec
rcrl
adc
les
out
mov
or
add
push
and
push
push
sbb
xchg
xlat
fistps
ja
push
jo
sub
in
test
mov
setb
std
lods
test
aaa
dec
cmc
add
or
in
aas
push
divb
insl
pusha
sahf
icebp
sbb
xchg
shrl
xchg
xor
data16
fisttpll
mov
cmp
outsl
xor
cmc
push
push
pop
and
mov
ret
in
mov
cltd
pop
and
mov
push
cmc
cli
fldenv
push
adc
jns
js
sbb
xchg
mull
adc
testl
mov
add
push
idiv
js
xchg
xchg
pop
enter
cmp
and
fcoml
test
push
and
cs
and
and
mov
inc
inc
stos
jb
pushf
xchg
jnp
adc
idivb
xchg
jbe
inc
popf
imul
or
data16
mov
repnz
loop
cmc
out
xor
bound
mov
xchg
arpl
fdiv
enter
rclb
mov
inc
mov
and
add
mov
push
imul
push
mov
pop
stos
cmp
mov
dec
xor
push
int
mov
js
and
or
pusha
inc
clc
mov
rep
push
mov
push
dec
pop
call
mov
fs
js
or
ljmp
sbb
add
sbb
xor
cltd
push
ljmp
push
and
std
and
enter
sbb
test
xchg
fst
lahf
cmp
mov
xchg
inc
fwait
decb
jg
imul
test
icebp
cs
push
jbe
sub
pop
mov
add
les
xor
jno
adc
decl
test
outsb
in
jle
and
push
movsl
pop
movsl
pop
lcall
data16
xlat
rclb
mov
rorb
ljmp
dec
repz
enter
out
enter
lcall
mov
pop
jne
dec
test
int3
gs
mov
insb
jge
lcall
repnz
fnsave
loope
push
fadds
lods
pop
adc
inc
push
xchg
pusha
dec
out
insb
insl
paddusw
pop
mov
push
paddsw
xor
sbbl
mov
mov
andb
jl
iret
sub
xchg
cmp
loopne
into
jl
cmpsl
add
cwtl
sbb
push
in
lock
ret
leave
outsb
and
mov
sub
xor
loope
mov
sub
or
push
loope
add
ror
add
testl
shrb
xchg
pushf
mov
xchg
movsb
jge
xor
push
dec
je
cmp
popa
sbb
xchg
dec
lcall
les
add
test
jge
sub
lods
lcall
mov
mov
push
ds
mov
bound
je
popf
sub
out
mov
out
jle
xor
or
mov
aaa
xchg
in
push
jl
in
sbb
aas
in
cmp
in
sbb
cwtl
push
mov
pusha
adc
xor
addb
lock
fs
cmp
pop
xchg
test
adc
fnsave
in
js
out
mov
mov
daa
rcl
inc
cs
jle
sbb
jmp
xchg
xor
insl
ljmp
dec
out
pop
pop
sbb
sbb
xor
in
sub
xchg
push
cld
fists
filds
xor
dec
xchg
es
mov
notb
push
inc
inc
sbb
leave
sbb
cmp
fsubl
hlt
pop
pop
jae
pop
sahf
popf
mov
mov
sub
packsswb
imul
aas
xor
or
nop
iret
push
push
xlat
push
xlat
loop
pusha
mov
dec
lods
cmc
adc
lock
mov
movsl
rcrl
cld
pop
aad
sub
mov
sbb
sub
out
dec
cmpsb
ds
lahf
sbb
lea
rcrb
int3
sbb
hlt
pop
xor
mov
push
scas
lahf
cs
cmp
inc
mov
rcll
dec
inc
cs
flds
mov
addb
js
mov
out
push
xchg
sbb
aas
add
fcompl
add
fcoms
push
lahf
dec
mov
test
dec
int
lods
inc
or
mov
xchg
repnz
test
mov
imulb
or
cs
mov
dec
call
rcll
mov
xor
pop
pop
pop
add
cmp
jg
mov
lods
ljmp
xchg
dec
lods
fwait
imul
mov
push
mov
add
fsubp
sti
sbb
rorl
mov
pop
pop
lock
dec
testb
adcl
mov
insl
pop
cwtl
mov
in
dec
dec
jns
cmp
pop
cmp
fdivs
adc
pop
repz
and
shrl
jp
xchg
cmp
dec
sub
push
jb
je
mul
cmpsb
jmp
ja
jmp
inc
cmp
aam
insb
add
dec
inc
arpl
lods
testb
xlat
popf
and
add
cmc
lret
cmp
outsb
scas
xchg
jle
pop
push
xchg
int3
nop
stc
iret
sub
xor
sbb
sbb
ud1
stc
mov
fsts
loop
pop
jp
adc
fimuls
and
adc
leave
mov
sti
cmpsl
int3
icebp
add
mov
dec
mov
cmp
inc
or
xorl
push
fs
mov
and
jle
cmp
mov
cmp
lcall
jo
adc
adc
mov
push
test
jns
jg
jne
adc
imul
push
arpl
dec
popa
dec
pop
mov
aaa
jge
jmp
jno
gs
push
add
out
arpl
leave
into
lds
out
jge
xor
xchg
adc
jecxz
jo
and
add
icebp
xchg
in
and
mov
cmc
ret
and
sub
pop
orl
fs
adc
gs
add
xchg
sahf
dec
lock
rorl
push
xor
xor
mov
outsl
add
insb
push
outsb
xchg
mov
ljmp
jb
cmp
cwtl
inc
scas
in
es
dec
popf
hlt
xchg
das
lret
das
sbb
adc
pop
int
dec
push
and
fcomps
repnz
popa
data16
push
dec
mov
addr16
xor
xchg
xchg
push
dec
jne
or
imul
in
cltd
movsl
je
push
inc
jmp
pop
movsl
jae
fimull
sbb
std
push
fdiv
jge
push
and
or
xor
xchg
out
test
pusha
xchg
ds
mov
aaa
loop
cmpsl
std
imul
add
adc
sbb
ja
bound
lds
add
lret
bound
push
out
dec
xor
repnz
pop
inc
call
fs
jp
add
xchg
xor
jo
test
jne
movhps
dec
xchg
incl
mov
xorb
fwait
mov
daa
push
dec
xor
xchg
jbe
psllw
scas
fidivl
inc
mov
test
xor
jmp
out
or
loopne
subl
xor
push
rcr
pop
and
outsb
jp
mov
ja
scas
mov
xchg
adc
or
mov
jp,pt
pop
cmp
push
push
add
lahf
pop
mov
shrl
or
cmp
dec
pop
fisubrs
sbb
jbe
jo
mov
movsb
das
or
mov
jl
dec
mov
rorb
addr16
cmp
shlb
push
mov
cmp
push
sub
js
bound
mov
pop
cmp
and
inc
scas
je
cmp
stos
shll
sbb
pop
cmc
or
leave
xchg
pop
imul
mulb
cmpsl
dec
les
popa
scas
stc
in
dec
cmp
xlat
jg
lods
push
int3
push
fistps
jmp
orb
imul
inc
inc
xchg
movsb
jmp
out
or
loopne
imul
dec
jmp
inc
sarl
enter
mov
insb
or
inc
inc
dec
ret
inc
insb
and
ficoms
xchg
arpl
sbb
lcall
mov
imul
push
cmc
dec
andl
dec
mov
mov
sbb
dec
scas
sbb
sub
cmpsb
xchg
clc
scas
push
shlb
push
cmp
mov
inc
popf
and
xchg
vunpcklpd
jnp
psrlw
clc
mov
fbstp
inc
push
outsb
fs
sahf
cmpl
or
aad
jecxz
adcl
mov
jno
in
in
pop
inc
xor
jecxz
mov
cmp
pop
sub
inc
imul
pop
push
dec
adcl
mov
in
lea
sub
mov
mov
sub
std
popa
cwtl
xchg
adc
clc
lcall
cmp
ficoms
jbe
cmp
mov
inc
xor
add
pop
leave
fiaddl
leave
shl
xor
sub
movsb
add
sub
out
ja
imul
nop
mov
dec
mov
lock
dec
cmp
leave
xor
sbb
sahf
or
or
loop
jns
movsb
adc
mov
in
scas
mov
mov
dec
fbstp
psubusb
movsl
cs
add
sub
pop
lret
pushf
mov
das
sub
sub
xchg
add
push
ss
xchg
insl
cmp
sbb
mov
jl
aad
push
mov
inc
scas
jns
adc
sbb
shr
pop
push
loopne
xchg
nop
aaa
cld
int
cmp
icebp
les
insb
pop
int3
lock
push
xchg
cwtl
fisttpl
cmp
sbb
push
add
mov
or
fistpll
adc
andb
sbb
inc
mov
fisttps
dec
insl
and
or
push
jg
adc
lret
scas
pop
inc
dec
push
mov
add
push
out
push
push
dec
out
sub
leave
push
insl
pop
inc
sub
adc
mov
orl
xchg
cltd
loopne
dec
in
xor
orl
gs
jnp
or
pop
add
fld
fcomps
inc
daa
dec
mov
aad
push
inc
ja
out
push
int
fwait
sbb
aam
fisubs
insb
and
push
pop
or
xor
adc
fwait
iret
inc
cmp
int
inc
pop
xor
je
jp
leave
push
je
in
cmp
jmp
cmp
dec
cmc
lods
comiss
cmp
ficoms
jle
clc
xor
mov
incl
jns
sub
mov
fwait
int
pushl
repnz
aaa
dec
les
xor
or
cltd
test
pop
fadd
xor
or
cmp
mov
push
aas
ljmp
or
sbb
loope
dec
cwtl
jle
and
test
gs
mov
dec
call
push
jp
mov
xor
cld
cmpsb
mov
repz
push
sbb
sbb
inc
insl
push
imul
jae
mov
dec
push
mov
cmp
jmp
mov
xchg
aaa
lret
jns
push
push
outsb
xchg
daa
dec
data16
adc
dec
test
cmpsb
cmp
pop
into
in
in
or
stos
mov
sub
cld
stos
insl
jmp
es
movsb
push
jnp
and
lret
mov
shl
cwtl
mov
mov
add
sti
shl
mov
idiv
movsl
sbb
in
shl
std
sbb
mov
cld
sti
cmp
shll
mov
and
test
cmp
mov
or
sbb
int
push
fiaddl
and
imul
testb
pop
call
inc
inc
cld
rcrl
mov
cmp
mov
inc
daa
push
inc
cmp
hlt
or
inc
jl
cmp
pop
and
cmp
mov
lahf
xor
scas
ljmp
pop
ds
popf
jb
jge
mov
jne
sub
lret
jae
pop
sbb
dec
mov
lods
movl
into
aas
das
test
mov
mov
popf
adc
data16
sahf
xor
notl
and
loopne
scas
pop
cmp
mov
stos
sub
push
xor
fs
lahf
loope
or
mov
shrb
je
roll
mov
xchg
cmpsl
int3
jne
jp
adc
aad
push
pop
mov
in
int3
and
mov
sar
xor
aad
xor
mov
sahf
sub
xchg
sbb
pop
jbe
mov
jbe
sub
nop
xor
cmp
les
sub
in
sub
stos
outsl
cmpsb
lahf
sti
arpl
push
stos
pop
nop
fstp
push
bound
xor
sti
jne
pop
popf
jno
inc
insl
cmc
pop
movsl
mov
enter
insl
and
lock
aad
aam
scas
sbb
inc
add
mov
push
sbb
sahf
and
inc
xor
or
pop
xor
inc
lcall
inc
sbbl
lock
test
mov
jmp
cwtl
aaa
je
les
test
pop
fidivrl
fbstp
jmp
sti
pop
icebp
sti
in
sub
lret
add
int
cld
imul
pop
movsb
adc
jmp
mov
lret
lahf
sub
repnz
dec
cwtl
dec
adc
xchg
iret
sarl
fs
je
inc
cmp
cmp
push
jge
aaa
fimuls
gs
mov
inc
jle
mov
sbb
adc
jae
xchg
dec
cmp
out
test
jle
inc
jp
clc
jge
and
push
adc
mov
scas
jb
dec
jl
std
sub
jae
or
sahf
cmp
mov
inc
inc
jge
loopne
movsb
ds
test
and
inc
outsb
pop
cmpb
out
bound
cwtl
push
rorb
push
std
or
xchg
in
sahf
add
pop
xor
mov
jle
fucomp
mov
xchg
rcrb
jle
push
enter
dec
cmp
cmpsl
jg
push
out
sbb
or
fiaddl
cmp
test
lods
lahf
mov
dec
leave
push
std
cmp
cmp
cli
movsb
sbb
adc
cli
mov
lret
repnz
jl
jno
rcrl
rcr
loope
subl
sub
xor
and
out
popa
mov
mov
mov
rclb
xor
sub
add
push
fistpl
mov
pop
lods
or
outsb
shlb
mov
lods
and
lahf
dec
mov
imul
fwait
pop
call
push
xchg
in
cmp
inc
adc
push
je
and
nop
lods
cli
dec
test
lods
fsubrs
or
inc
xlat
xchg
js
sbb
pop
inc
pop
ss
mov
mov
pusha
xorl
cltd
les
and
test
scas
mov
insb
pop
add
fbld
mov
xor
add
ss
cmp
mov
sahf
and
popf
dec
fisttps
inc
dec
movsl
pop
data16
rclb
lods
jne
cmp
aad
daa
int
lret
xchg
mov
jmp
sbb
fnstenv
cwtl
jnp
int
jae
or
mov
andl
ss
or
push
jmp
mov
mov
adc
mov
sbb
movsb
clc
rorb
push
idivb
sbb
inc
movsb
cs
lcall
pop
adc
cmpsl
test
jge
rcl
iret
pop
adc
sarl
mov
jecxz
xorl
dec
sti
sbb
in
cmp
ret
push
xor
jge
inc
loopne
inc
and
les
daa
dec
cltd
hlt
xchg
js
daa
cltd
test
in
inc
call
push
push
mov
cmp
mov
mov
roll
and
cmp
stos
cmpsl
or
cmp
pusha
jbe
mov
or
add
jne
pusha
jg
fcmovnbe
inc
outsb
mov
fistps
cwtl
sbbl
cmp
or
lret
pop
inc
xor
fstp
fldl
and
subb
mov
push
sbb
fistl
ficoml
sub
pop
shr
mov
adc
outsb
aaa
cmp
andnps
stc
jno
push
mov
or
push
sub
jo
push
xchg
xlat
data16
push
repnz
shr
jnp
xor
ds
arpl
xchg
lods
mov
ds
subl
shrb
inc
sub
adc
inc
stos
mov
xlat
daa
pusha
test
pop
mov
sub
nop
lock
aas
jnp
jnp
mov
ljmp
lret
adc
adc
sub
inc
clc
cld
imul
popf
out
orb
mov
jbe
or
sbb
mov
or
lock
mov
imul
jae
mov
add
icebp
loope
ds
aas
loopne
in
sbb
jl
add
fnsave
bound
lahf
loope
adc
mov
pop
insl
xor
cmp
push
jmp
jmp
sub
push
pop
pop
mov
mov
int
pop
mov
push
or
fmul
mov
mov
pop
mov
lea
bound
add
insb
test
and
sub
mov
or
jl
call
add
sahf
enter
adc
ljmp
arpl
dec
jmp
adc
movsb
mov
add
jecxz
lds
lods
xchg
movsb
or
test
in
rcl
test
sbb
ret
cmp
cmc
int
dec
ljmp
imul
pop
scas
sub
adc
adc
push
ret
sti
rolb
testl
movhps
mov
mov
les
push
pop
fsubrl
faddl
xchg
pop
push
jecxz
gs
push
mov
push
push
je
ret
pop
int
fs
mov
js
add
inc
add
jo
sub
mov
xor
and
add
mov
mov
dec
andb
mov
das
into
scas
pop
ja
mov
xchg
clc
das
dec
dec
push
dec
xor
adc
sub
lods
adc
jg
out
push
sbb
xchg
add
inc
bound
or
push
jns
test
jae
adc
adc
push
popf
int3
mov
cmp
sbbb
pop
push
popf
adc
mov
push
mov
ljmp
insb
cmp
movsb
lods
inc
ss
inc
push
mov
xchg
sbb
sahf
fdivs
sub
inc
je
cmp
sarb
mov
test
in
push
in
pusha
ret
or
mov
cmp
repz
or
push
mov
imul
shll
lock
xchg
sbb
es
inc
pushf
push
cli
jnp
es
fs
jnp
mov
lahf
daa
ljmp
ljmp
mov
sub
dec
adc
bound
xchg
out
test
push
bound
lret
adc
mov
rcl
sbb
shl
xor
dec
inc
les
lods
call
jae
dec
arpl
lret
mov
inc
push
test
add
mov
inc
leave
mov
inc
shlw
dec
sub
jae
and
fsubr
or
out
xor
pop
enter
mov
pop
mov
and
scas
sbb
sub
xor
push
jb
pop
push
arpl
out
fucomp
hlt
aam
lcall
addr16
add
les
push
or
dec
fwait
call
cld
shll
or
test
inc
sub
xor
and
and
cmp
ficoml
sbbl
sub
daa
xchg
ffreep
fwait
popf
dec
scas
shll
xor
shrl
pop
jle
xchg
and
xchg
aaa
dec
cmp
pop
cmp
sub
pop
xor
inc
out
jge
lret
mov
das
adc
loopne
push
jno
aad
ret
sbb
cmp
and
adc
stc
sbbl
stc
jno
xchg
fcmovnu
or
mov
in
cwtl
dec
cmp
fnstenv
fnsave
rcr
lods
add
push
arpl
add
negl
mov
mov
mov
stos
dec
pop
pop
sbb
mov
and
jno
pop
cmp
jl
mov
xchg
insb
std
push
xchg
sbb
pushl
xorl
push
shrd
jmp
imul
jb
jecxz
xor
test
and
in
arpl
mov
push
je
enter
cmpsl
add
mov
pop
lcall
mov
adc
adc
rcrb
rcr
push
pushl
fwait
mov
sahf
inc
sbb
adc
ficoms
dec
repz
jbe
sbb
in
mov
repz
call
insl
push
in
xchg
jne
mov
pop
or
jns
mov
dec
lret
push
dec
aad
loopne
es
mov
aas
push
or
nop
jmp
les
pop
pop
fcomps
mov
dec
movsl
in
push
mov
pusha
pop
xor
ljmp
insb
int3
mov
adc
shlb
cmp
test
loop
or
mov
add
aas
or
sub
mov
push
lret
cmpsb
or
lock
push
and
orb
ficompl
add
fwait
pop
lods
add
mov
mov
leave
xlat
stos
fisubrs
mov
add
stc
jno
fs
add
mov
add
xchg
mov
js
sub
dec
aaa
rolb
mov
in
jae
or
imul
mov
jle
lret
xlat
mov
imul
and
fiadds
jecxz
dec
lret
adc
pop
pop
add
jb
lahf
xchg
into
lea
cli
xchg
xchg
inc
andl
dec
les
push
or
sbb
imul
iret
test
pop
popa
dec
add
push
lcall
mov
pop
negl
decb
jle
loope
push
ficoms
lock
mov
mov
bound
fldenv
bound
cmp
dec
int3
insb
es
sbb
or
out
xchg
mov
mov
mov
mov
popf
or
repz
xor
pop
mov
cmp
lods
fld
jle
outsl
dec
out
ljmp
pop
iret
int
cmc
adc
outsb
push
xchg
negl
in
cmc
pop
div
pop
cmc
rorl
mov
xor
jge
push
in
xor
lea
seto
and
mov
jp
mov
ss
jbe
xchg
in
add
sbb
mov
add
dec
mov
xchg
fsubr
ret
fisubs
into
insb
jge
mov
pushf
call
in
pop
imul
data16
daa
jo
fadds
push
jne
outsl
loope
push
call
push
into
cs
ljmp
cli
sub
fs
pop
mov
ja
jne
dec
inc
push
sub
dec
call
ds
jne
pop
insl
jle
imulb
jl
scas
cmp
pop
jnp
sbb
scas
push
cmp
xor
jae
scas
sbb
orl
add
imul
mov
inc
mov
js
daa
pushf
adcb
ds
movsb
cmp
icebp
and
int
popa
jnp
jmp
xchg
fsubl
jns
or
es
sub
jo
jae
sub
jo
inc
negl
push
lods
subl
pop
or
sbb
das
pop
push
test
leave
inc
add
cld
mov
sub
imul
pop
xchg
rorl
xor
lret
ljmp
arpl
mov
mov
mov
adc
int3
pop
jg
clc
loope
sub
xor
pop
aas
push
cmp
dec
addb
fwait
pushf
sbb
cwtl
cmp
push
retw
mov
decb
das
sbb
nop
sub
mov
sbb
push
out
stos
ret
aas
aad
ret
in
notl
pop
int
dec
ja
adc
sbb
aad
test
or
push
sub
loope
ret
add
insb
and
rorl
pop
inc
jecxz
add
sbb
dec
enter
ja
lea
sub
and
enter
sahf
cmp
mov
rolb
ret
sub
scas
sub
mov
cmp
daa
jns
jns
aas
cmp
and
out
mov
xchg
adc
xor
mov
mov
in
jge
push
jg
cmp
dec
in
and
lods
inc
mov
mov
shlb
or
lea
int
rolb
xchg
lds
pushf
adc
addl
ret
adc
add
test
jp
icebp
add
push
rcrl
fucom
jge
inc
dec
mov
negb
mov
stos
pushf
and
pop
ja
arpl
cmp
js
insl
jno
pusha
jge
inc
int
scas
movb
orb
mov
jo
outsb
je
dec
frstor
shlb
fisttps
push
sbb
dec
sub
cmp
xor
adc
bound
mov
or
arpl
subps
int
movb
cmpsb
xor
adc
pusha
shr
mov
movsl
push
movsb
out
jp
shr
dec
outsb
mov
dec
movsb
out
ljmp
xchg
addr16
cli
test
fwait
xlat
xor
ds
mov
pop
imul
cmp
jnp
xchg
insl
hlt
push
shrb
or
pop
pop
add
xor
sub
int3
leave
outsb
dec
int
insl
dec
jg
lods
daa
dec
fs
mov
adc
movsl
dec
pop
adc
movsl
mov
mov
mov
shll
lods
sub
faddp
mov
inc
mov
sbb
fwait
ja
pop
jmp
fwait
paddusw
lods
xor
cmpl
jb
into
aas
lret
lret
push
and
jle
adc
popf
dec
mulb
sti
xchg
jl
or
sub
dec
enter
add
mov
sahf
rcr
inc
xor
push
pop
fiadds
scas
sbb
dec
or
int3
xchg
out
lods
scas
push
dec
xchg
ja
lcall
push
push
adc
add
stos
int3
in
aas
mov
das
sub
repz
sub
jg
cmp
push
daa
pop
dec
popa
sahf
andl
cwtl
lods
popl
std
mov
fstps
jecxz
sub
cmc
sbb
data16
mov
fsubl
dec
data16
mov
xor
jl
sti
lods
addr16
cltd
mov
mov
mov
out
shll
pop
cwtl
bnd
ljmp
pusha
bound
in
or
leave
stc
push
call
add
jns
dec
fneni(8087
adc
or
shrl
xchg
notl
ret
out
push
insl
ret
dec
lcall
pop
or
enter
push
inc
int
enter
push
fs
jo
mov
mov
and
add
mov
inc
xchg
imul
jo,pt
lds
lds
clc
stos
enter
mov
movsb
adc
lock
inc
push
xchg
sbb
xchg
mov
rcrl
loope
adc
ss
cmp
cli
inc
dec
movsl
loop
jge
pop
sub
movsb
stos
mov
xor
dec
xor
cmp
cmpb
sar
inc
ucomiss
xchg
push
push
mov
mov
jle
push
dec
and
call
mov
dec
jg
imul
and
sbb
mov
sub
mov
add
cwtl
jecxz
stos
insb
std
add
rcrl
xchg
daa
mov
and
addb
adc
test
fwait
cld
and
pushf
add
leave
jl
bound
mov
fsubl
cwtl
negl
cmp
fidivs
push
push
loopne
lods
and
aad
lret
add
mov
rolb
cli
mov
xor
cli
xor
adc
lret
and
mov
jge
test
lcall
xchg
mov
shll
aas
lods
cmp
mov
les
fcmovne
mov
ss
cwtl
adc
pop
clc
stc
inc
pand
repz
ret
mov
adc
mov
mov
push
je
push
loopne
inc
or
adc
cmpsb
adc
aaa
jb
xchg
addl
addr16
mov
jge
nop
test
sub
mov
mov
into
sbb
jp
loope
push
sti
fwait
cmp
pop
mov
orl
inc
mov
std
sub
int3
cmp
fisttps
ficomps
xchg
dec
insb
mov
pop
pop
dec
xor
dec
mov
ret
cmc
jp
cmp
aad
stos
dec
adc
int3
pop
ja
shll
mov
repz
mov
dec
xchg
std
lahf
jb
aad
ret
inc
test
mov
mov
fstps
sbb
xlat
inc
test
scas
shlb
rorl
pop
xchg
sub
push
pusha
push
mov
ss
xchg
movsb
dec
cmpl
adc
sbb
mov
inc
fcompl
je
push
cld
cltd
subb
inc
inc
mov
add
sbb
mov
imul
mov
pusha
pusha
insl
dec
dec
xor
xor
fucomip
out
jae
and
inc
add
idivb
fisttpll
scas
or
test
addl
sbb
test
add
enter
fucomip
pop
int3
jmp
fldenv
inc
cmp
push
pop
divb
jo
sub
shll
mov
jle
out
pop
and
cmp
push
dec
daa
test
mov
and
mov
sbb
jmp
adc
aas
sub
inc
inc
or
mov
outsl
sbb
push
sbb
dec
xchg
pop
test
mov
sub
jo
addr16
popa
jmp
pushf
ja
imul
div
jge
aas
test
add
xlat
cmp
test
dec
sub
test
fadds
xchg
or
mov
neg
fs
inc
jg
xchg
push
adc
xor
sub
les
rolb
pop
fxch
in
dec
add
loope
pop
test
mov
push
insl
aas
mov
or
and
fadds
movsl
lahf
adc
cmc
test
je
sub
lds
or
cmp
xchg
ret
push
aas
jbe
ds
std
sbb
arpl
mov
xorb
lds
movsb
lock
lcall
lods
push
es
aam
pop
xchg
icebp
jb
sbb
xchg
fstl
lret
push
orb
mov
cmp
cmpsl
jecxz
add
arpl
std
mov
sbb
aad
int
sbb
lahf
adc
mov
cltd
rcrb
jmp
cmp
push
sub
xor
xor
xor
sbb
dec
push
adcb
pop
call
mov
jne
add
mov
and
fildl
rcl
adc
dec
xor
jb
pushf
push
and
or
and
fwait
xor
pop
or
cmpsb
stc
pusha
idivl
inc
xchg
cmpsl
push
outsl
cs
lret
icebp
insl
es
imul
and
cmp
js
and
sub
inc
jg
test
das
inc
lret
ficoml
jbe
or
int3
pop
mov
addr16
hlt
mov
pop
pop
inc
xchg
test
mov
aad
fldenv
popa
push
in
icebp
clc
bound
mov
or
daa
subl
inc
cmp
lea
das
insb
inc
js
repnz
clc
fcomip
pop
and
lahf
loope
jne
adc
jbe
dec
adc
test
pop
stc
inc
add
dec
cmp
sub
and
jle
sbb
testb
and
sbb
inc
fs
push
inc
mov
push
enter
repnz
push
adc
cmp
push
dec
int
fwait
pushf
stos
push
push
iret
es
test
or
add
push
mov
mov
cltd
sbb
pushl
shrb
xor
test
movsb
mov
dec
mov
xchg
mov
lock
cmp
adc
das
jns
das
mov
jbe
sbb
adc
pushl
and
push
xor
mov
push
mov
popf
dec
jp
cmpsl
sahf
imul
ret
push
jbe
jae
stos
int
fdivrs
call
out
fldcw
subl
out
shll
inc
pop
add
leave
push
sbb
mov
inc
nop
mov
int3
inc
stos
dec
into
sbb
cmp
xlat
out
call
stc
lahf
fldt
or
inc
lahf
sti
pop
or
mov
and
or
ss
out
je
sarl
in
xchg
in
movsb
or
cmpsl
mov
push
or
xlat
out
inc
in
xchg
pop
dec
aam
sbb
jg
jae
out
fisubs
mov
pop
push
sbb
push
push
mov
clc
fnsave
loopne
jb
pop
icebp
jae
push
jb
push
das
or
add
jns
outsl
adc
cmp
xor
xchg
cmc
in
sti
ljmp
daa
in
pushf
les
in
and
pop
add
arpl
jnp
lea
repnz
rcl
mov
jno
lods
addps
or
dec
rcrl
mov
lea
push
jmp
inc
lcall
sub
adc
ret
mov
xchg
dec
mov
push
xchg
les
and
ljmp
push
sahf
add
add
movsb
jb
lock
scas
jae
dec
sub
mov
filds
push
ficompl
mov
fwait
pop
pop
frstor
pop
mov
fdivl
outsl
out
sarb
pushf
xchg
bound
enter
mov
inc
or
mov
fwait
cmpsb
push
pop
mov
daa
mov
mov
mov
and
jmp
mov
cltd
arpl
fwait
add
and
pop
add
adc
pop
xchg
mov
cmp
dec
das
out
lock
roll
mov
adc
jb
outsl
mov
out
in
dec
jge
sahf
ljmp
shrl
adc
outsl
test
mov
cmpsl
insl
xchg
xchg
jbe
dec
jb
cmp
mov
out
inc
mov
int
sbb
out
mov
cli
lock
jae
imul
add
adc
in
sub
dec
fldl
movsb
mov
test
shlb
test
out
sub
scas
jle
in
test
daa
add
dec
xchg
cmp
test
lahf
xor
in
das
xchg
mov
repz
lock
xchg
mov
sbb
push
aam
jae
stc
enter
lock
loopne
sbb
cmc
dec
scas
aaa
leave
xchg
sub
push
ret
xor
sbb
ret
dec
jecxz
mov
cli
fs
add
fstl
loop
push
fnstenv
mov
pop
pop
fildll
or
inc
fisubrs
insl
cld
fnstcw
sub
jne
inc
ljmp
mov
jl
int3
movb
cli
sub
lcall
vandnpd
bound
arpl
lock
jg
xchg
mov
dec
inc
and
stc
xchg
sbb
shlb
cwtl
sti
rcrb
add
pusha
ror
pop
cli
xor
jle
cmc
jp
movsl
add
lret
test
push
push
ljmp
and
xchg
stos
xchg
jae
xor
call
jmp
xchg
add
lret
jecxz
lcall
mov
bound
mov
mov
orl
rorb
mov
pop
or
cld
daa
cmp
pop
mov
rorb
push
xchg
jp
mov
aad
out
pop
ds
repnz
fldcw
pop
push
nop
mov
lret
movsb
sbb
push
push
add
adc
jmp
xchg
subb
push
adc
nop
rclb
das
xchg
ret
jecxz
pop
cmp
push
mov
jbe
pop
sub
sub
call
rolb
xorb
sbbl
int
jge
push
and
sti
in
movsb
dec
out
fs
xor
scas
or
pop
jg
sbb
add
xchg
lock
pop
fmull
jmp
dec
stos
or
aad
daa
repnz
sbb
lcall
pop
adc
ficoml
pop
inc
in
test
pop
mov
pop
mov
inc
sub
mov
xlat
fisttpl
add
jle
lock
sbb
mov
fs
pop
mov
xchg
imul
sub
jg
mov
jnp
std
div
adc
addb
xor
pop
mov
inc
es
push
loopne
in
lods
pop
push
test
inc
and
add
test
aad
sub
pop
mov
sub
notb
jmp
xor
push
cmp
sbb
mov
in
sub
xchg
rcrb
test
dec
shll
or
sub
jae
sub
test
mov
cmp
test
in
sub
sbb
dec
cmpsb
fnstenv
mov
pusha
xchg
movsb
test
stos
dec
imul
add
gs
pusha
lods
mov
imul
in
or
repz
push
xchg
mov
decb
mov
insl
jmp
mov
test
mov
and
add
jg
xchg
xchg
pushf
je
lods
sub
add
mov
sub
adc
movsb
or
xchg
pop
sti
or
insl
jp
loopne
inc
dec
lahf
xchg
std
movsb
icebp
xor
push
fld
pop
pushf
add
out
adc
bound
adc
mov
mov
divl
cmc
scas
pop
lods
xchg
sub
mov
lret
xchg
xor
add
add
xor
inc
inc
xchg
lods
sub
mov
popf
lock
or
adc
ja
mov
std
cmp
outsb
lea
add
sti
xchg
pop
mov
mov
ja
out
pop
pop
pop
int
push
pop
add
pop
add
outsl
sub
outsb
push
adc
jnp
and
cli
fdivr
lds
mov
or
jo
insl
incl
sbb
shrb
leave
lret
fistps
mov
mov
ret
push
mov
push
jno
xchg
bound
inc
sub
andl
jmp
sbb
lods
das
mov
push
int3
push
loopne
mov
or
push
mov
adc
mov
dec
push
mov
decb
int
jo
xor
push
jl
adc
js
xchg
jo
mov
fs
jge
push
call
adc
push
out
mov
adc
mov
xchg
stos
cmpsb
inc
add
pop
dec
mov
jae
dec
ds
xorl
ret
dec
mov
call
dec
dec
cmp
push
cli
mov
mov
mov
lods
lods
cmp
mov
xchg
jmp
mov
es
xchg
imul
jbe
ret
mov
jmp
adc
jp
cmp
test
inc
push
and
and
push
aad
stos
mov
mov
scas
mov
jne
sbb
push
push
movsl
into
das
ja
js
filds
ret
addl
sahf
jmp
popf
enter
cmpsb
mov
bound
aaa
lcall
lcall
add
mov
ret
sbb
xchg
clc
add
pop
mov
outsb
jge
aam
or
jo
sub
cmp
insb
xlat
jge
int3
cmpsl
cmp
sub
sbb
into
sahf
shll
cmp
inc
push
fstps
in
cs
dec
ret
xor
hlt
nop
pop
mov
stos
movhlps
inc
mov
scas
mov
or
lahf
pop
xor
xchg
push
call
daa
into
push
push
stc
movsb
enter
push
incl
xchg
pop
and
add
loop
push
xrelease
xchg
out
xchg
or
stos
loope
dec
call
mov
bswap
sarb
jge
inc
add
nop
pop
xor
insb
adcl
outsl
imul
sahf
pop
xorb
push
add
es
or
lcall
shrb
leave
loope
fdiv
outsl
push
pop
imul
inc
jge
cmp
add
push
aas
mov
jg
mov
dec
fcoms
popa
mov
xchg
inc
mov
mov
sbb
hlt
mov
mov
mov
sbb
and
cs
loopnew
clc
loopne
imul
dec
mov
js,pt
nop
push
sbb
push
sarl
fsubs
das
push
sti
enter
sti
and
fsts
imul
icebp
aam
sub
cmp
dec
adc
mov
jae
int3
or
inc
incb
test
in
out
mov
fwait
push
movsb
je
lret
mull
imul
lds
inc
popa
push
outsb
daa
cltd
movsl
add
cs
rcr
add
xchg
movsb
nop
rolb
jle
fwait
cld
ja
inc
lcall
sbb
fwait
pop
dec
cmp
repz
dec
adc
add
loopne
add
mov
xor
adc
xor
pop
inc
pop
push
gs
rcrl
push
mov
sub
add
icebp
pop
pop
clc
pusha
jmp
adc
std
fwait
and
clc
mov
inc
mov
fwait
bswap
pop
enter
push
add
adc
mov
sbb
xor
dec
jnp
push
cltd
jbe
sbb
sbb
inc
inc
lds
push
xchg
in
sti
pop
insl
out
cltd
loopne
lds
add
sahf
push
adc
add
in
inc
dec
jmp
lret
jge
mov
add
das
add
and
xchg
cmpsl
faddl
sub
call
inc
jle
adc
cli
stc
jb
pop
and
fcomps
jl
push
js
push
sbb
shlb
out
repnz
push
leave
divl
data16
hlt
inc
add
pop
into
xchg
xchg
dec
adc
xor
fldenv
incb
jno
adc
sbb
pusha
xchg
add
xor
add
stos
push
outsb
push
popl
addr16
fadd
out
sub
cmc
and
rorb
sbb
lret
adc
fistpll
mov
cmc
or
mov
cmp
xor
addb
fwait
sub
xchg
sti
or
leave
fwait
fstpt
jno
sbb
stc
jnp
adc
and
mov
dec
movsb
aaa
mov
mov
in
xlat
dec
sub
and
or
mov
idivb
cli
xchg
jnp
sbb
les
add
sahf
cmpsl
mov
inc
pop
fisubrs
xchg
lcall
mov
out
push
insb
test
pop
sub
inc
add
jo
xor
cmp
loop
movsb
loopne
dec
mov
popa
gs
ret
pop
jg
imul
or
jmp
jne
push
cmp
adc
aaa
jmp
or
lock
in
adc
dec
test
xlat
pop
outsb
cmpsb
mov
inc
fstpt
fistps
push
jl
fsubrs
add
xchg
xchg
lds
mov
mov
mov
call
lea
movsl
sub
and
je
add
inc
add
leave
sbb
pop
frstor
loop
lret
in
xchg
jae
xor
cwtl
xchg
push
popa
stos
dec
imul
cmp
mov
jle
jbe
push
das
ljmp
inc
std
test
repnz
mov
jne
mov
fnsave
sub
fwait
aam
xchg
or
test
push
in
cmp
xor
sarb
sbb
add
cld
sbb
adc
test
cmc
or
dec
mov
call
mov
fcoms
mov
pop
iret
jecxz
les
loopne
inc
scas
jecxz
pop
or
stc
addr16
add
int3
jns
inc
popa
lret
es
mov
adc
imul
cli
lret
icebp
sub
xchg
sbb
leave
scas
pop
jecxz
dec
ja
sub
push
fwait
test
outsb
popa
movsb
subb
fwait
in
xor
and
enter
mov
sub
sbb
stos
stos
lret
js
cmp
dec
andl
je
nop
insl
imul
inc
push
icebp
xchg
sti
sahf
mov
mov
inc
mov
rcll
dec
push
jg
test
mov
dec
cli
mov
adc
pop
lcall
shlb
lock
xchg
jp
shr
xor
clc
fisubrs
adc
sub
ret
push
pop
mov
outsb
mov
mov
mov
clc
rol
movsb
push
mov
adc
hlt
les
mov
popf
mov
out
push
mov
in
fcomip
clc
nop
test
sbb
fistl
icebp
xor
add
int
xor
sarb
push
popa
xchg
stos
jb
xor
xchg
mov
mov
test
daa
sub
cmp
sbb
inc
cld
push
mov
daa
mov
lea
xchg
icebp
mov
sbb
push
in
push
aam
popa
push
in
aam
subps
ljmp
in
sbb
dec
sbb
lods
sbb
call
dec
add
jg
and
ret
shll
jl
cmc
inc
lods
mov
neg
jge
gs
pop
cmpsl
inc
sub
rclb
lods
lret
mov
pop
pop
pop
jl
pop
call
jp
and
cmpsb
movsb
mov
or
lret
cmpsl
fidivrs
cmp
push
add
pop
or
ss
mov
push
push
lds
into
addr16
pop
cmp
push
scas
jb
and
dec
sub
jnp
mov
add
xchg
cmpsl
shl
insb
jp
add
mov
aad
decb
jg
jecxz
outsb
xor
xorb
data16
enter
mov
mov
add
ljmp
rcr
loop
cmp
pop
stos
lret
dec
xchg
xor
push
mov
sti
rolb
out
xchg
or
or
outsb
fs
in
xor
sbb
sbb
fmul
mov
or
push
push
jnp
inc
push
imull
sbb
int
mov
xchg
enter
popa
loope
lahf
in
outsl
push
xchg
dec
aam
hlt
add
sbb
lea
xor
jge
aam
jno
xchg
cs
bound
pop
push
cld
mov
test
lods
xchg
cmp
popf
push
cmpsb
fcompl
outsl
dec
inc
sub
push
inc
sub
scas
in
sbb
fisttpll
icebp
sbb
jge
add
dec
pop
inc
mov
sbb
pop
mov
xchg
lahf
push
xor
mov
pushf
jno
movsl
xor
sbb
xchg
dec
add
mov
les
nop
inc
jae
mov
cld
sub
xchg
sub
rorl
mov
gs
inc
jns
xchg
mov
dec
pushf
cltd
dec
or
mov
aaa
jae
add
inc
inc
nop
sub
test
fistl
pop
or
jne
dec
jp
push
mov
jl
jnp
daa
daa
jmp
mov
xorb
add
adc
push
pop
cltd
das
sahf
cmpsb
xchg
sbb
shll
out
sbb
fdivrs
decb
sub
pop
mov
sbb
xchg
adc
pusha
lcall
mov
rorl
inc
mov
cwtl
or
sub
fnop
push
mov
adc
pop
xor
in
decl
xor
ret
dec
pop
push
sbb
arpl
mov
jmp
cmp
sbb
mov
and
or
gs
ret
sahf
cmp
adc
xchg
mov
mov
out
stos
popf
dec
stc
dec
mov
daa
pop
cmp
jbe
push
iret
inc
dec
inc
inc
mov
movups
or
cmp
push
and
ret
jae
popfw
or
or
xor
xchg
inc
mov
pop
jmp
jno
imul
adc
push
xchg
inc
or
imul
adc
add
xchg
sub
mov
adc
push
or
cmp
pusha
xchg
scas
pop
inc
xchg
shl
sbb
pop
or
push
icebp
mov
push
jle
ss
pop
xlat
leave
mov
mov
sub
jp
outsb
std
int
xchg
adc
cmp
enter
mov
jecxz
or
sbb
fwait
popf
bound
mov
pop
rolb
fwait
sbb
fs
ja
cmp
and
mov
and
cmp
sbb
mov
xchg
jmp
and
dec
mov
hlt
and
add
pop
sbb
cmpsl
inc
aam
test
mov
sub
cmc
insl
cmc
fwait
out
lea
gs
jno
std
dec
stos
call
mov
arpl
imul
dec
stos
mov
fwait
aad
movsb
leave
ficompl
shl
xor
mov
add
pop
out
test
mov
pop
rol
scas
fistps
mov
divl
fsubr
and
icebp
mov
lods
mov
inc
dec
hlt
and
fdivrl
and
sub
inc
adc
mov
fistps
out
shll
add
jl
repz
pop
test
jl
and
pusha
cmpsb
test
jp
inc
lret
dec
dec
loop
shrl
mov
add
add
sbb
jge
sub
inc
repnz
adc
repnz
pop
fsubp
lcall
in
inc
sbb
in
mov
aas
mov
jl
cmp
mov
in
push
repnz
idiv
add
jmp
sti
jmp
mov
cli
scas
inc
cmp
add
loopne
imul
and
mov
xchg
pop
xor
jge
lret
out
aam
out
dec
mov
or
cmpsb
add
jl
ror
xchg
lock
or
outsb
je
mov
dec
and
xchg
mov
and
inc
dec
in
aam
adc
sbb
test
cmc
cs
imul
js
out
jne
rorb
push
push
imul
xchg
inc
adc
test
push
in
lea
stos
dec
rdmsr
hlt
pushl
push
mov
sub
in
pop
inc
outsb
mov
xchg
sbb
ficoms
mov
inc
test
add
or
mov
dec
xor
add
and
jge
popf
in
mov
push
add
jo
jns
jb
rorb
rcrl
add
leave
call
and
imul
icebp
inc
movb
pop
xor
mov
dec
pop
sbb
adc
ret
cmpsb
pop
test
push
pop
bnd
sub
and
jb
dec
loop
xor
cwtl
mov
popa
lret
stos
mov
sbb
inc
loope
inc
cltd
dec
and
stos
mov
hlt
sub
push
xor
leave
xlat
push
addl
jecxz
pop
fistps
test
iret
pop
divb
or
fwait
xchg
push
sub
lds
cmpb
dec
sub
xor
and
and
mov
xchg
pushf
lcall
xchg
cs
xchg
xchg
movsb
cs
xchg
popf
mov
pop
dec
hlt
push
repnz
add
pop
add
pop
bound
cmc
push
fistps
dec
xchg
pusha
std
or
push
ret
add
pop
push
cs
pop
lret
testb
shl
adc
cmp
pop
lret
and
or
insb
repnz
sbb
fwait
mov
je
mov
inc
ljmp
sar
insb
jnp
sbb
fnstsw
lret
int3
push
mov
in
mov
lahf
xor
ja
lcall
sub
rolb
pop
cmp
sbb
ficompl
lret
jge
push
fdiv
add
repnz
sar
pop
cmpl
cmp
cld
cs
jmp
dec
test
and
in
push
ds
ficompl
or
push
pop
daa
out
repnz
inc
push
loop
xchg
jnp
adc
lds
movsl
inc
pop
cs
add
pop
cli
push
jge
sub
adc
or
mov
mov
cmp
sbb
pusha
cmc
movsb
push
arpl
ror
pop
cwtl
jg
or
or
sub
mov
ljmp
push
xchg
gs
or
push
lahf
jg
pop
and
push
lock
xlat
gs
aas
daa
pop
sub
fwait
or
xor
rcr
sbb
test
and
xchg
popa
ljmp
push
xchg
lahf
pop
xchg
js
cmp
enter
mov
inc
push
sub
and
enter
dec
push
adc
fbld
test
pop
je
pop
imul
xor
repz
xor
dec
push
sbb
test
push
adc
daa
hlt
add
movsl
out
in
xlat
pop
mov
insl
fdivrs
fmull
mov
sbb
pusha
mov
pop
test
mov
andl
jl
push
mov
mov
addr16
repz
scas
shrb
lret
insl
rcr
aaa
xor
fs
fwait
subb
addb
iret
negl
aad
mov
enter
or
ss
xchg
sub
enter
in
loopne
fdivrs
mov
icebp
stc
mov
mov
pop
mov
imul
lods
xor
inc
mov
adc
cltd
mov
cld
into
int
cltd
push
mov
or
xchg
scas
mov
scas
cwtl
xchg
jnp
sbb
sbbb
jae
outsb
add
sub
mov
pusha
cmc
push
pop
mov
add
mov
dec
insb
cmp
test
cmp
das
cmp
scas
cltd
insl
pop
imul
mov
movsb
fcmovnu
out
orb
testb
out
jmp
add
in
aaa
xchg
jne
mov
ret
adc
cmp
adc
push
lea
fwait
loope
in
adc
lock
fsubrl
xchg
mov
sbb
jbe
fldcw
inc
cmp
xchg
test
int
clc
cltd
dec
pop
mov
mov
aaa
or
shrl
pop
aad
mov
lahf
repnz
push
daa
pop
or
push
inc
jecxz
xchg
pop
inc
in
xchg
xchg
repnz
cmpb
jg
scas
or
daa
inc
jo
icebp
dec
ss
jne
xor
mov
mov
or
inc
add
pop
sbb
mov
push
inc
sbb
scas
push
push
mov
pcmpeqd
cmp
jbe
ds
mov
shlb
adc
inc
push
fwait
lea
adc
leave
test
pop
in
and
or
sbb
mov
loopne
mov
mov
xorb
adc
outsl
mov
inc
pushf
adc
popa
sub
or
in
add
mov
jmp
das
es
inc
scas
dec
push
nop
sbb
je
xchg
popa
inc
mov
sbb
sub
test
xor
int3
popa
lahf
pop
hlt
sti
jl
stos
mov
pop
push
fwait
mov
dec
adc
mov
mov
xor
idivl
hlt
jne
adc
push
cmp
les
fs
and
xlat
pop
outsl
inc
scas
js
inc
shr
cs
fcom
enter
fistps
adc
dec
iret
and
add
ja
push
sahf
mov
repz
mov
lods
xchg
bound
pusha
dec
push
sub
dec
xchg
xor
loope
mov
inc
imulb
xchg
push
adcb
inc
pusha
mov
dec
call
xchg
xchg
push
jp
cmp
and
mov
xchg
push
lea
sbb
data16
cmp
pop
pop
ljmp
mov
adc
repz
and
and
pop
jo
ror
pop
mov
jle
cs
sbb
sti
push
cmp
sbb
and
mov
mov
and
xchg
push
fwait
nop
inc
stos
outsl
dec
mov
sbb
loop
mov
outsb
mov
and
push
imul
sbb
push
sbb
fisubrl
mov
dec
pop
add
sti
jmp
sbb
push
xchg
pop
test
dec
in
aas
or
sbbb
in
sub
xchg
inc
cmp
adc
push
sub
stos
jnp
popf
ret
stc
mov
loope
leave
icebp
sub
push
ds
movsb
xchg
lret
mov
and
les
insl
dec
jnp
fildl
push
daa
insl
cmp
dec
jmp
mov
pop
sbb
pop
dec
jne
pop
cmpsl
and
jl
cmp
jb
not
aaa
test
jnp
shll
dec
loop
fldt
or
mov
inc
cs
push
in
lods
fists
jp
pop
lret
pop
cld
push
sbbb
es
xchg
pop
idivb
mov
mov
movsl
jo
inc
inc
inc
js
cmp
daa
ret
in
xlat
sbb
sub
lret
cmpsb
neg
and
dec
mov
out
in
inc
push
aam
loope
xor
sub
add
stos
xor
in
or
lahf
ja
stc
iret
pop
mov
push
adc
popa
gs
icebp
inc
enter
push
stc
mov
xchg
and
adc
pop
in
push
dec
stos
push
adc
mov
xchg
lds
push
jns
jmp
fs
aas
sar
and
and
cmp
pushf
std
loopne
mov
jne
inc
aam
push
insl
fcmovb
cmc
cmp
xlat
lock
imul
int3
icebp
rorl
jg
pop
pushf
mov
xchg
sub
pop
sbb
cmpsb
es
and
xchg
addr16
lods
sbb
jae
and
xor
clc
xlat
inc
stos
dec
push
xor
mov
clc
inc
pop
mov
roll
out
out
pop
out
jns
mov
test
pushf
repz
pop
aas
daa
cmp
pop
cmpb
dec
cmp
addr16
mov
pop
or
cs
out
test
in
jmp
pop
fiaddl
andl
cld
pop
inc
add
jnp
mov
xchg
shll
push
cmp
pusha
pop
xor
jmp
adcl
adc
push
xlat
add
lds
and
shll
jno
mov
adc
sbb
iret
cmp
push
jge
mov
or
pop
pop
addb
mov
movsb
gs
inc
jno
out
cmp
mov
sarl
xorb
dec
arpl
inc
bound
insb
and
push
jge
imul
xchg
mov
mov
push
push
push
movsb
jns
cmc
jnp
xor
test
mov
test
bound
fwait
enter
mov
inc
mov
jae
ret
adc
outsb
jp
mov
add
lret
sbb
push
add
pop
dec
scas
sub
imul
push
mov
cmp
lcall
loope
loopne
cmpl
aaa
insl
stc
dec
jp
add
add
mov
adc
ja
sbb
adc
in
pop
test
add
sub
dec
mov
add
in
rcll
lods
roll
push
inc
mov
test
enter
pop
push
out
rolb
popf
push
sbb
push
push
mov
stos
rclb
je
insb
les
subl
icebp
cmpsl
and
out
ffree
vpclmulqdq
movsb
push
inc
xorl
test
xchg
dec
out
repnz
out
and
xor
daa
js
sub
stc
pop
shl
loop
pop
mov
mov
sti
aas
xor
sub
xchg
popa
aaa
sbb
sub
ret
cld
nop
jg
jne
sub
loop
jge
or
mov
mov
push
outsl
outsl
push
cmp
jbe
inc
mov
jp
push
call
pop
lods
sub
bnd
in
sbb
push
mov
stos
mov
inc
xor
fwait
out
jb
cwtl
or
jo
mov
cmpsl
mov
push
adc
pop
imul
or
mov
inc
lods
and
jnp
mov
push
xor
add
push
jl
mov
in
push
pop
sarl
inc
sbb
stos
mov
push
sbbb
ficomps
pop
int
push
sub
cmc
sbb
out
xchg
lahf
adc
pop
clc
mov
arpl
cmpsb
enter
or
lret
inc
xchg
lcall
or
dec
push
popf
imull
pop
or
js
daa
out
sub
ror
mov
movsb
xchg
xchg
cli
ret
jbe
dec
mov
cmp
push
fsubs
adc
fs
dec
ret
jno
pusha
ss
mov
xchg
sbb
inc
inc
stc
mov
arpl
push
call
xchg
or
ret
mov
hlt
and
pop
jae
mov
std
imul
leave
adc
sbb
fisubl
mov
mov
fnsave
xchg
cmp
lret
outsb
jns
arpl
and
lods
repz
xchg
mov
imull
pop
test
adc
movsb
push
int
stos
mov
nop
movb
insl
popa
adc
cmp
sbb
rcr
dec
sbb
cli
xchg
int3
jo
xor
les
mov
inc
fimuls
cmp
popf
adc
push
push
int3
ficomps
push
dec
lods
adc
and
jae
fwait
popf
test
or
dec
daa
push
imul
outsl
jne
jb
sub
insl
and
test
push
pop
mov
fldenv
cmpsb
shlb
add
dec
mov
imul
mov
data16
push
into
xor
loopne
lcall
mov
jnp
repnz
push
jns
fisttps
jns
cltd
lret
pop
mov
cmp
mov
mov
or
or
mov
jecxz
lret
lods
inc
pop
pop
cltd
xchg
lret
in
popa
rcrl
dec
pushf
stc
sub
js
xchg
icebp
arpl
dec
inc
add
lods
xor
test
outsl
sbb
imul
fisttpl
repnz
lret
jle
xor
dec
femms
pop
xchg
sub
into
add
shl
mov
aad
clc
ljmp
pop
insl
pop
mov
negl
jmp
ret
movsl
push
js
mov
jg
mov
fimull
or
mov
sbb
test
push
neg
pop
push
mov
scas
mov
icebp
pushf
inc
jp
cmp
sub
aad
iret
add
push
loopne
adc
or
shlb
jmp
insb
push
push
pop
jno
push
adcl
cmp
push
fildl
mov
insl
jl
inc
imul
nop
iret
mov
mov
loope
test
dec
nop
jmp
and
int
sub
popa
imul
js
test
jg
in
or
aaa
js
sub
xchg
sub
mov
pop
cmpsb
loop
mov
ds
lret
gs
cmc
or
jle
stos
mov
push
sbb
push
clc
out
or
les
orl
sarl
mov
xor
cli
repz
push
and
aam
pop
aad
in
fiadds
mov
in
inc
notl
xor
daa
loope
out
pop
mov
testl
imul
adc
mov
adc
cmpl
repz
sahf
sub
or
sbb
mov
dec
pop
sub
fs
pop
lds
or
rorb
mov
ss
loope
jecxz
imul
pop
pop
loope
insl
xor
inc
fiaddl
leave
loop
popf
imul
outsl
mov
fs
pop
pop
in
repz
cmc
loop
jbe
mov
push
ss
imul
mov
cmp
loop
adc
jp
and
xchg
pop
leave
fdivr
fimuls
push
jmp
lahf
out
inc
jnp
ret
test
in
sub
ret
imul
sbb
insl
mov
cmp
adc
nop
loope
dec
mov
fistps
out
sub
mov
or
sbb
cmpsb
pop
fcom
dec
repz
xor
ficoml
and
push
or
mov
mov
sahf
fcmove
lcall
in
jge
push
jnp
repnz
leave
pop
xor
dec
xor
pop
inc
add
insb
inc
scas
jecxz
shrl
push
aas
mov
and
ret
daa
push
xchg
xor
inc
jno
dec
ret
adc
test
mov
sbb
sub
mov
leave
add
and
into
push
cmp
mov
jo
pop
and
inc
cltd
mov
adc
fwait
jns
dec
loope
push
sub
dec
and
in
test
ret
push
loope
cmc
xlat
lods
stos
test
fs
or
mov
sbb
or
flds
out
int
jae
cmp
sbb
fiaddl
push
jnp
add
sub
mov
mov
js
mov
or
in
push
pop
mov
lret
xor
loopne
stc
rol
or
test
pop
arpl
push
cld
imul
pop
and
push
dec
xor
inc
sub
dec
mov
push
jbe
dec
loop
sub
aas
emms
dec
xchg
mov
popf
xchg
xor
mov
or
pop
cmp
fsts
repz
bound
jp
jnp
inc
sbb
shl
stos
scas
fcoml
cwtl
or
lock
sbb
mov
ljmp
mov
or
mov
loop
test
cld
gs
lcall
int3
ss
rdtsc
iret
jne
out
lock
add
mov
sub
add
xchg
pop
enter
sbb
or
adc
ljmp
jecxz
mov
dec
clc
in
mov
pop
mov
push
xchg
inc
orb
insl
sub
insb
loop
sbb
dec
or
mov
adc
data16
mov
pop
psllw
popa
xor
mov
inc
adc
nop
dec
pop
fwait
lock
or
in
push
push
repz
repz
pop
or
mov
testb
jmp
mov
sbb
cmpsl
lcall
lret
js
pop
cs
jo
fldcw
out
inc
or
sbb
inc
or
in
dec
mov
add
les
inc
cld
mov
xchg
mov
add
imul
stos
rcr
or
push
ret
in
sbbb
fdivp
ja
pop
mov
inc
pop
dec
out
cmpsl
lods
or
inc
inc
pusha
xchg
adc
sti
es
lods
gs
jno
dec
push
inc
adc
and
out
sbb
push
insl
outsb
xchg
les
sub
dec
jl
and
mov
mov
scas
in
cmp
jge
test
and
lret
sbb
jmp
ljmp
inc
cmc
push
inc
and
add
xor
lds
test
adc
push
lret
inc
mov
arpl
fmull
inc
or
les
add
pop
and
cmpsb
mov
sub
test
pusha
inc
push
xchg
xchg
rcrb
movsl
add
stos
inc
mov
lods
pop
or
jno
cmp
xchg
pop
sbb
adc
addr16
cmpsl
lcall
arpl
pop
jnp
jbe
mov
roll
test
stos
sub
mov
test
xor
mov
lods
aaa
flds
cld
jecxz
pop
push
mov
xchg
insb
sub
xor
lods
jmp
imul
mov
jle
push
repnz
popa
push
jge
pop
shll
adc
subl
push
aaa
data16
rcll
test
mov
jns
movsl
cmp
dec
sti
jmp
mov
out
out
mov
mov
push
sub
shlb
dec
pop
fistl
ljmp
jno
fistpll
mov
test
repnz
push
cmp
stc
fdivrs
pop
sbb
lahf
push
stos
lahf
and
pop
mov
sub
aas
jne
fcomp
test
pop
cmpsb
les
ss
mov
andb
push
shr
fcompl
mov
rcrb
jl
mov
std
pop
jmp
sub
lods
sar
cwtl
cmp
sbb
jl
xor
pop
das
inc
ret
xchg
test
xchg
push
add
mov
mov
add
push
stos
jo
pop
repz
fs
mov
jg
add
jmp
cmc
pop
mov
sbb
arpl
inc
mov
pop
loop
repnz
mov
cwtl
push
imul
push
mov
adc
xchg
in
and
aas
in
fisttpl
je
inc
jg
insl
pop
out
push
xor
dec
inc
inc
cmp
cmp
inc
adc
cmp
scas
pop
lds
and
adc
loope
mov
sbb
inc
lahf
cmp
sbb
xchg
inc
addr16
ret
mov
imul
sub
xor
lea
add
mov
movb
mov
mov
push
add
pusha
insl
adc
ror
sbb
fcompl
jmp
sub
iret
mov
shlb
hlt
aad
nop
cltd
ret
mov
sarb
enter
xchg
mov
ja
hlt
mov
daa
arpl
imul
cli
out
xlat
adc
mov
jp
lea
leave
out
xchg
inc
scas
dec
jbe
sbbl
dec
add
leave
ljmp
adc
test
inc
popa
leave
sub
pop
or
cmp
in
shll
mov
cs
pop
and
movsl
sbb
pusha
clc
fsubs
negl
pop
cmp
dec
repnz
mov
loop
sub
ud2
scas
stc
dec
in
cmp
mov
int
in
xchg
ret
fwait
ja
stc
out
imul
test
and
mov
mov
inc
dec
lahf
push
aaa
and
jb
loop
aad
inc
rcrb
mov
dec
pop
sbb
ret
add
lcall
addr16
orb
inc
mov
fstps
lock
stos
loop
nop
cwtl
pop
xor
inc
adc
xor
cltd
fwait
push
scas
dec
adc
pop
pop
movsb
clc
cmpps
mov
inc
adc
pop
xchg
sbb
data16
sub
mov
xchg
in
cmp
mov
fs
ljmp
xchg
and
bound
ss
mov
ret
dec
out
or
sbb
dec
repnz
iret
subb
cmpsb
mov
dec
xchg
popa
xchg
lret
mov
push
jae
or
dec
cmpsb
sub
fisubl
paddusw
sar
fsubrp
lock
in
xchg
cwtl
sbb
cmp
je
les
in
cltd
jbe
cmp
or
rcr
jle
std
inc
inc
push
or
push
xchg
cmc
sub
ret
hlt
jbe
adc
leave
aaa
jle
out
dec
inc
add
sub
test
pop
fidivrl
pminub
daa
mov
cmp
movsl
in
stos
fisubs
mov
aad
adc
daa
xor
cmpsl
pop
mov
dec
ret
mov
and
sbb
or
filds
andl
xchg
pop
hlt
xor
cmpsl
push
or
cmp
cwtl
stos
jl
sbb
push
lods
dec
inc
ret
int
pop
aam
aaa
pop
pop
out
int
je
mov
inc
aaa
xor
in
scas
push
shrl
out
lea
jl
sbbb
mov
and
negb
sti
push
push
lcall
xchg
mov
inc
xor
lock
fs
mov
mov
repnz
jo
xchg
sub
in
test
and
or
std
fisubs
loopne
push
hlt
jne
lock
mov
rolb
arpl
ss
stos
in
cmp
pop
adc
cwtl
jbe
dec
pop
dec
pop
loopne
fsubrl
adc
or
pop
inc
imulb
mov
icebp
xchg
adc
inc
out
pusha
adc
mov
sub
or
pop
aaa
sub
add
loope
adc
shl
imulb
scas
jecxz
jge
pop
mov
test
icebp
pop
test
pop
jmp
xchg
pushf
callw
lahf
xlat
int
xchg
lret
add
lods
leave
or
push
add
jecxz
repnz
dec
xor
inc
sbb
out
inc
pop
or
mov
fldenv
adc
sbb
dec
leave
cmpsb
orb
lods
cmp
aad
xchg
test
and
push
or
mov
pop
hlt
in
aas
push
push
sub
and
jne
xor
pop
sbb
sti
bound
xor
dec
cs
pop
fsts
adc
jne
fcomps
xor
scas
pop
xor
in
dec
iret
push
dec
or
nopl
imul
sarl
cmpsl
jnp
imul
push
push
sti
std
pop
std
cmp
and
mov
dec
mov
daa
pushf
jmp
push
cmpsl
pop
xor
lahf
les
outsb
icebp
mov
bound
jb
lret
pop
leave
addb
or
test
fstl
or
pop
scas
les
mov
adc
jns
fimuls
push
cmp
push
inc
push
mov
xchg
mov
loop
rcrl
sub
mov
scas
and
inc
or
pop
enter
cmpsl
repnz
mov
scas
dec
ss
inc
add
sbb
movl
and
xorb
adc
ficompl
cmc
xchg
mov
shrl
jb
jne
dec
push
xlat
dec
mov
adc
sbb
std
mov
add
lret
addl
test
mov
rorl
fwait
ja
fs
shll
mov
test
inc
outsl
pop
shlb
pop
push
mov
mov
cmp
pop
dec
or
and
insl
add
pop
pusha
xor
or
adc
mov
sbb
das
lods
jne
mov
jno
std
xchg
mov
sub
add
mov
cltd
xor
adc
pushf
cmp
cs
mov
push
inc
ja
adc
mov
mov
fwait
mov
dec
lds
daa
sub
popa
adc
std
out
sbb
jecxz
add
pop
out
jae
rclb
enter
cmp
xchg
dec
xchg
in
xchg
xor
pop
mov
insb
subl
mov
addl
ss
jge
out
aaa
leave
fmuls
mov
scas
xchg
scas
lret
pusha
sbb
cmpsb
push
je
les
sbb
adc
push
or
mov
movsl
push
lret
std
inc
cld
ret
pop
jg
imul
shll
ret
pop
js
pop
or
and
jae
adc
sub
push
lea
push
rorb
pop
push
cmpsl
cltd
insb
adc
sbb
in
les
jo
ja
sahf
jnp
xchg
repz
inc
or
push
sub
out
cmpsl
sbb
das
int3
pop
mov
cmc
pop
lods
dec
adc
daa
iret
cmpl
fwait
das
ret
xchg
rclb
iret
test
movb
loope
cmp
sub
sbbb
repnz
mov
adc
cmpsl
repnz
mov
es
clc
xor
xchg
add
sub
jnp
sub
mov
rol
mov
jl
xchg
cmp
mov
movsb
sub
gs
jo
or
or
scas
cmp
xchg
clc
push
and
das
arpl
mov
imul
push
cmp
jbe
inc
fisubl
cmp
sbb
push
xor
fisttpll
mov
cmp
popf
jnp
push
adc
push
aas
mov
mov
adc
fcoms
adc
iret
mov
pusha
fldl
mov
inc
adc
data16
sti
pop
pop
mov
outsb
jge
lret
imul
xor
out
movsb
xchg
out
xor
movsl
fmull
cs
pop
std
sbb
xor
out
xchg
sub
inc
inc
and
rclb
lret
in
push
xchg
jo
or
fisttpll
pop
lcall
repz
or
push
jmp
fisubrs
push
popf
push
dec
daa
add
cwtl
dec
popa
inc
xchg
rolb
decb
adc
adc
or
xchg
mov
ja
into
add
gs
mov
push
cltd
std
mov
jo
cltd
mov
xor
adc
pop
push
push
fwait
dec
push
mov
je
pushf
adc
push
pop
mov
sub
in
adc
jle
outsl
enter
mov
loopne
sbb
add
mov
pop
std
sbb
add
arpl
sub
leave
mov
and
xchg
stc
shll
lret
mov
jns
jecxz
nop
loope
push
push
jae
rcl
push
pop
sbb
xchg
scas
cmp
xchg
add
cmp
in
jecxz
dec
cltd
pop
add
out
loop
and
int3
jle
adc
push
xchg
jg
push
xorb
add
outsl
loopne
sub
pusha
add
adc
or
nop
shlb
ja
inc
push
sub
pop
fucom
popf
outsl
ja
xchg
and
mov
imul
pop
dec
es
movsb
imul
sub
lods
hlt
icebp
sub
adc
shl
cmpl
shll
adcb
in
mov
pop
jae
imul
mov
lcall
arpl
out
lock
shl
cmp
mov
int3
push
jns
call
popa
inc
xor
mov
rcll
loop
jp
sbb
fbstp
push
sub
fcom
es
arpl
add
inc
jg
ss
dec
sbb
pop
arpl
stos
inc
xchg
cmp
fs
out
int3
ds
and
xchg
gs
je
xor
rclb
cmp
fiaddl
call
clc
test
imul
les
in
add
pushf
cs
sbb
lcall
cmp
mov
fscale
push
mov
in
add
xor
cwtl
and
nop
pusha
xchg
imul
xor
sub
iret
out
movsl
cmp
fistpll
movl
push
loope
mov
stc
sbb
out
test
pop
sub
xchg
xchg
rol
add
push
xor
arpl
add
inc
testb
enter
cmc
out
scas
cmp
xor
leave
cld
popa
or
out
inc
dec
and
and
push
ret
sarl
xchg
inc
das
pusha
sti
fdivrl
lahf
xor
jp
dec
lret
xchg
pop
ret
ret
mov
jmp
push
sub
ret
dec
lock
jecxz
add
into
inc
sbbb
mov
into
jns
mov
mov
jne
movsb
mulb
roll
lcall
xchg
test
insl
stc
fidivl
xor
shlb
cmp
or
adc
mov
pushf
insb
xor
cmc
mov
jno
jns
out
xor
into
sbb
daa
cld
push
imul
mov
hlt
fldl
movsb
mov
xchg
lcall
das
and
enter
ljmp
or
mov
pop
dec
iret
and
aam
mov
inc
insl
outsl
sbb
mov
movl
jl
nop
into
jo
mov
mov
add
mov
test
leave
in
ja
fisttps
lods
fbstp
inc
jne
xor
pop
lret
nopl
rcll
std
mov
mov
ret
into
scas
xor
fstpt
sub
enter
incb
fwait
test
aad
popa
pusha
or
stc
mov
test
lahf
inc
cmpsl
add
sbb
jmp
sbb
push
loopne
dec
push
dec
jno
enter
shll
cmp
fucomip
sbb
imulb
mov
pfmin
rorb
imul
lret
cwtl
ljmp
movsb
clc
roll
jp
stos
nop
ljmp
mov
inc
mov
in
and
mov
adc
mov
imul
cwtl
xchg
cli
adc
push
orb
mov
in
out
hlt
push
or
cmp
in
mov
stos
xor
jg
mov
add
adc
push
cld
sbb
out
sahf
cltd
stc
jl
rclb
sbb
test
loopne
jmp
pop
mov
fdivrs
lret
and
pop
mov
xchg
inc
outsl
scas
jecxz
sbb
sbb
mov
jbe
in
scas
in
std
leave
pop
addr16
in
push
push
mov
stos
ja
hlt
mov
leave
mov
cmpsb
fcomps
outsl
mov
inc
jns
popf
fwait
cmc
dec
and
cwtl
aaa
inc
jno
fucomi
mov
jne
lcall
xchg
cmc
dec
loope
stos
and
xor
imul
fwait
cmp
mov
out
mov
sub
mov
scas
sub
data16
das
jge
push
testl
repnz
or
push
mov
ljmp
in
in
ret
into
ds
lods
sub
xchg
mov
push
test
enter
mov
int3
insl
pop
mov
stos
adc
push
inc
fildl
xchg
add
pop
dec
xchg
mov
inc
cmp
dec
mov
test
addr16
inc
or
sub
and
mov
gs
pop
ret
inc
pop
cmp
test
pop
xchg
cli
orb
adc
push
nop
jno
dec
leave
inc
or
jge,pt
cwtl
inc
adc
mov
xor
pop
test
xchg
pop
outsl
lcall
jne
rorl
sub
cmp
fs
fs
mov
inc
in
or
nop
cmpsb
inc
cli
out
push
adc
dec
xchg
mov
dec
inc
jno
jmp
inc
out
iret
cmp
push
cmp
inc
pop
mov
inc
adc
cmp
popa
jle
loop
jns
cmpsl
inc
jmp
and
push
cmp
add
lock
sarl
sbb
fiaddl
inc
and
or
out
decl
mov
test
mov
int3
loope
jb
or
bound
insl
popf
sub
fldenv
in
pop
cmp
inc
idivl
sub
xchg
bound
faddl
cmp
add
jb
and
jg
lahf
lods
push
inc
outsl
xor
xor
adc
sbb
mov
xor
adc
jle
mov
les
push
lds
bound
movsb
outsl
xchg
push
and
clc
pushf
pop
fidivs
xor
ret
add
lds
out
insl
mov
adc
xchg
mov
inc
push
cmpsl
out
push
pop
jbe
push
add
out
pop
or
push
lock
jmp
lock
nop
std
rol
pusha
push
lcall
loopne
cmc
push
jnp
out
pop
mov
divl
pop
cmpsb
test
out
push
into
mov
or
icebp
xchg
mov
or
adc
mov
mov
push
out
cmpsb
jecxz
jne
push
push
xlat
jg
add
out
rclb
inc
repnz
shll
mov
loope
sub
adcb
ret
popl
rep
daa
filds
xchg
mov
test
jge
pop
rclb
rclb
cmp
mov
jmp
mov
nop
fists
xor
adc
sarb
ljmp
aam
push
fists
dec
enter
pop
mov
iret
dec
adc
or
in
fisubl
inc
sarl
ffreep
jae
arpl
fisttpl
inc
psraw
xor
in
je,pt
pop
mov
in
mov
cmp
push
mov
rorb
arpl
pop
pop
xchg
xor
jne
and
jge
notb
adc
in
jne
adc
cmp
test
nop
data16
pop
push
movsl
lret
xlat
lret
add
push
cmpsb
add
sbbb
mov
mov
rcr
and
cmp
das
dec
repnz
movsb
mov
jl
add
popa
sub
ds
dec
lea
rorl
mov
jg
mov
roll
out
dec
fadds
fnsave
cwtl
addr16
inc
pop
insb
lds
or
add
cmpsl
fmull
scas
or
test
out
ret
je
into
into
mov
sbbb
pop
out
loop
out
mov
gs
mov
xor
inc
push
lds
in
das
sbb
popf
or
sbb
xchg
jg
js
cwtl
sbb
sub
aad
sub
ret
mov
xor
outsl
push
out
xor
mov
aam
lds
ljmp
or
enter
push
jge
sarb
add
adc
cs
jecxz
mov
es
fstpt
test
mov
imul
vmwrite
inc
adcb
shrl
add
fidivs
sub
push
cmp
repnz
mov
push
pop
sarl
push
mov
cmpsb
pop
fs
or
mov
int3
leave
shrb
and
arpl
pop
push
xchg
mov
repnz
push
jge
cmc
pop
jl
fistps
mov
ret
sarb
insl
cmp
mov
out
out
jne
das
loope
outsl
fs
data16
sub
cmc
loop
loope
xchg
mov
or
and
xchg
popf
insb
mov
aam
jg
and
rcll
enter
lea
and
dec
jno
out
jbe
mov
fidivs
and
dec
xchg
adcb
mov
rol
dec
xlat
mov
ja
xchg
enter
jge
insb
imul
jbe
sbb
ds
push
movsb
inc
pop
insl
push
adc
scas
xchg
fcomp
sub
pushf
push
mov
gs
xchg
clc
pop
fisubrs
lret
push
adc
cli
sbb
incb
int3
in
mov
xor
dec
test
add
out
adc
aaa
inc
fs
pushf
enter
xchg
cwtl
popf
out
lods
dec
iret
sbb
inc
inc
pop
das
sub
hlt
call
or
fidivs
push
imul
flds
loopw
insb
mov
insl
xor
fs
mov
shlb
mov
mov
ja
adcl
idivl
loopne
aaa
mov
push
pop
jg
cmpsl
sub
adc
sbb
jns
rclb
sbb
xchg
scas
mov
push
cs
mov
int3
sbb
xor
lods
mov
mov
push
xchg
ljmp
cmp
push
cmpsb
inc
xchg
fs
loop
js
inc
mov
sbb
sahf
lcall
xchg
mov
sarl
je
daa
daa
shlb
adc
add
je
mul
imul
add
leave
les
sub
loopne
ds
fcomps
and
lea
ljmp
fsub
and
mov
repnz
in
mov
jg
aas
push
inc
mov
push
sub
jns
stos
add
pop
outsl
push
push
sbb
xor
pop
icebp
mov
push
pop
stos
mov
xchg
jnp
mov
dec
cltd
imul
inc
pop
xor
xchg
sbb
stos
sti
xchg
dec
xchg
sub
aam
xchg
xor
pop
add
xor
jmp
cmpsl
cld
stos
xor
mov
push
pop
insl
pavgw
jge
fldenv
pop
sbb
mov
dec
ret
in
push
data16
ljmp
notb
sbb
jb
test
adc
cmpsb
push
pop
orl
movsl
pusha
jg
arpl
dec
bound
mov
stos
rcll
or
mov
sbb
and
addr16
jne
jge
cmpsl
xchg
out
adc
mov
js
pusha
fs
movsl
cmp
ja
bound
mov
mov
mov
test
push
cmp
cmpsl
mov
pusha
fidivs
je
fnstcw
jnp
mov
les
jbe
sbb
mov
lcall
out
mov
cld
in
invd
mov
pop
xchg
xchg
push
cmp
daa
push
leave
rolb
add
sub
xlat
mov
mov
ljmp
and
stc
hlt
fnstenv
xor
push
mov
lock
sbb
incl
inc
adc
inc
mov
dec
movsl
adc
fidivs
and
xchg
xor
cmp
jmp
mov
pop
hlt
pop
les
pop
movl
cld
mul
mov
test
ds
mov
or
lahf
or
neg
ss
in
loope
mov
popa
inc
test
or
je,pt
lock
add
mov
mov
mov
aas
ret
sub
sub
jle
pusha
mov
into
xor
jge
xor
or
dec
mov
mov
mov
test
pop
call
pop
xor
fcomip
push
push
pop
cmp
lahf
or
xchg
adc
or
pop
add
mov
xchg
sub
push
push
dec
lods
fwait
add
xchg
cli
jns
popa
add
xlat
push
ds
or
xor
mov
insb
imul
sbb
pop
cwtl
inc
int
mov
ss
and
insl
adc
mov
int
dec
lret
add
jne
fxch
mov
jbe
xor
inc
shll
add
push
push
lahf
push
xor
ljmp
jmp
cli
push
loope
mov
mov
and
sub
into
mov
dec
dec
inc
lea
or
jns
ds
daa
lock
pop
jmp
jmp
notl
pop
incl
add
lahf
xor
jne
inc
fs
adc
pop
pop
sbb
xchg
xor
pushf
test
ds
inc
jecxz
mov
sbb
sbb
lcall
mov
sub
jb
iret
pop
cmpsl
push
dec
outsb
mov
sub
jle
fprem1
ja
or
bound
arpl
xor
sti
mov
inc
or
aam
xor
les
dec
shll
adc
sub
cmp
xorl
inc
ret
pop
mov
jl
inc
mov
jge
rorl
out
xor
inc
clc
cmp
xor
sbb
cmp
cmpsl
loopne
sub
push
push
sub
xchg
mov
repnz
sub
mov
sub
sbb
fndisi(8087
arpl
cmp
bnd
add
adc
rclb
aad
push
add
cmpsb
clc
sbb
sbb
mov
iret
cmc
pop
and
sub
sub
repnz
jecxz
dec
nop
fwait
push
test
arpl
xchg
test
mov
mov
xchg
pushf
cli
dec
xchg
mov
sbb
or
push
roll
movsl
fsubrl
dec
xor
and
lds
mov
inc
pop
sbbb
bound
aas
dec
nop
lds
dec
xor
mov
sbb
xchg
stos
adc
in
jb
jmp
push
orl
ret
dec
dec
popl
dec
mov
xor
push
cs
cmpsl
fstpt
mov
sub
ja
loope
pop
mov
bound
inc
cmpsl
inc
js
mov
loope
lods
cld
xchg
fimuls
ss
inc
jnp
lahf
jns
ss
dec
icebp
cs
xchg
mov
jecxz
mov
push
cmc
int3
cwtl
pop
fisubs
pushf
ljmp
fnstsw
cs
sub
sbb
add
lods
or
cmp
cmp
addr16
jno
outsl
pop
xor
and
fmull
mov
jne
jl
inc
ds
pop
mov
adc
test
sub
inc
and
stos
inc
fwait
jnp
and
mov
lahf
push
in
pop
aam
push
stos
adcl
mov
pop
cli
dec
pop
neg
pop
xchg
jne
addr16
mov
push
push
inc
jmp
push
outsb
cltd
setnp
shll
jne
mov
push
ret
lock
cmp
mov
imul
mov
adc
imul
mov
add
std
push
sbb
adc
xor
sahf
mov
adc
mov
xlat
sbb
aaa
sbb
lods
ret
jmp
pop
lret
sub
xor
cwtl
dec
loope
les
cmpl
mov
shlb
outsb
insl
fsubr
aas
xor
push
jle
xor
arpl
mov
inc
xchg
xor
mov
enter
xchg
sub
imul
add
xor
imulb
sbb
fcmovb
mov
push
lds
pusha
xorb
jne
dec
fs
lret
dec
xor
fucom
lea
pop
call
lods
sbb
or
loope
repnz
in
daa
or
jno
notl
lea
fxch
mov
ficoml
jp
mov
cltd
out
popf
or
mov
das
aad
xor
das
fcomip
add
sbb
mov
int
push
xchg
xchg
push
and
mov
testb
xchg
stc
jo
push
pop
push
repnz
push
add
in
push
add
sbb
out
xor
out
nop
stos
mov
jo
xor
mov
shlb
and
stos
jp
push
cmp
dec
dec
hlt
int
fbld
stos
fwait
jl
lods
imul
mov
gs
or
mov
into
subl
or
js
add
and
pop
mov
inc
add
jne
dec
std
in
testl
mov
jl
data16
jp
jae
pushf
lea
push
lods
shrb
push
push
gs
add
mov
dec
jge
pop
call
adc
mov
push
jbe
sub
cmp
test
loope
mov
dec
add
addr16
test
inc
pop
fiadds
inc
or
rcl
inc
sbb
divl
lock
dec
push
lods
inc
stos
jae
add
shll
or
xchg
cs
xorl
sbb
dec
jmp
jmp
or
sub
jns
jl
inc
pop
cmp
sti
push
movsl
pop
jp
ret
leave
cmp
sub
popf
adc
popf
or
sbb
mov
pop
sar
je
pusha
clc
sbb
insb
fsubrl
pop
push
lea
xchg
mov
scas
mov
mov
push
inc
out
mov
push
popf
jns,pt
inc
cwtl
ficompl
inc
std
lret
test
and
add
dec
sbb
or
xchg
imul
xchg
lods
dec
std
sub
push
notb
ds
push
dec
cmc
inc
xchg
cmpsb
jmp
cmp
rcl
pop
inc
sub
loop
mov
loop
xor
xchg
cmp
dec
jbe
addr16
mov
and
jo
mov
mov
into
lea
xchg
enter
mov
pop
adc
pop
pop
jae
shrl
push
cwtl
cmp
in
nop
rcll
daa
icebp
and
dec
subb
xor
jg
mov
pushf
out
sbb
aam
ucomiss
xor
stc
icebp
rcr
dec
push
jp
pop
xlat
and
inc
mov
xor
aad
ret
int
in
lret
or
mov
adc
jb
fs
or
es
and
cmp
outsb
adc
push
mov
and
test
fidivl
ret
fisttps
pop
xchg
lret
sbb
jp
hlt
btc
daa
pop
mov
imul
movl
repnz
mov
add
cmc
sbbl
xor
ret
sub
sahf
jbe
outsb
outsb
dec
inc
loopne
and
cmp
mov
sub
cmp
xchg
inc
pop
lcall
add
dec
push
popf
call
push
add
scas
push
jb
xchg
pop
or
xchg
lods
push
iret
imul
mov
sbb
shl
and
adc
inc
fs
out
std
rcrb
out
xorl
popf
cld
sub
cmp
cmp
into
mov
adc
xor
mov
fs
jg
cmc
test
sbb
or
push
or
gs
into
inc
and
pop
lret
xor
dec
mov
insb
aaa
or
jecxz
dec
inc
int
push
or
stos
mov
fwait
push
xchg
lret
out
sub
and
add
dec
jns
fcmovbe
pop
lods
out
inc
jle
in
daa
xchg
mov
xorb
xor
pop
mov
in
jl
fdivs
mov
sbb
fidivs
xchg
mov
xor
inc
fdivr
and
or
sub
les
push
cmp
mov
add
lret
cs
mov
xor
dec
imul
jae
xor
shll
rcll
inc
inc
icebp
sarb
rcll
addr16
cmc
jbe
pop
add
stos
xchg
or
sbbl
cwtl
fwait
insl
sbb
lea
adc
mov
fcoms
mov
xor
ss
sbb
sahf
inc
add
arpl
jae
sbb
adc
imul
sarl
dec
sub
ffreep
mov
enter
pusha
in
rcrb
push
jo
push
or
cmp
xor
add
pop
inc
divb
in
scas
inc
cwtl
imul
or
sbb
sbbl
xchg
test
or
push
leave
lods
pop
out
inc
inc
and
jo
test
out
push
mov
sbb
xchg
push
dec
or
je
filds
adc
adc
es
mov
popa
test
pop
pop
mov
or
sub
in
add
inc
out
sar
out
sbb
or
imul
maxps
fucomp
mov
adc
out
lock
lcall
lahf
jbe
in
fadd
test
scas
and
out
stos
mov
pop
out
call
nop
repz
sahf
pop
out
int
cmpsl
adc
cmp
push
pop
jno
sub
fists
dec
mov
sbb
lea
js
in
jl
inc
sbb
ret
ret
xor
lret
add
out
fs
mov
cmp
sub
sti
movntq
out
ds
pop
dec
dec
mov
jnp
xor
adc
push
xchg
pop
adc
mov
xor
xchg
daa
insb
sbb
stc
movsb
mov
pop
stos
pop
cmp
mov
add
aaa
lahf
sahf
mov
inc
mov
repnz
test
arpl
or
inc
xchg
push
iret
xchg
xchg
flds
xor
and
jmp
in
add
rolb
or
mov
imul
ret
cmp
mov
inc
shrb
mov
dec
mov
rorb
xchg
or
enter
jle
sahf
lds
arpl
pop
lea
inc
or
dec
iret
inc
sub
mov
inc
inc
pop
daa
add
outsb
push
sub
and
cmp
pop
loope
jg
test
lret
mov
jp
xor
xor
aaa
cmpsb
mov
push
jns
dec
lret
push
mov
aam
pusha
inc
lods
and
daa
and
gs
pop
mov
xlat
and
and
push
cmpsb
add
add
test
out
icebp
fsubrs
adc
xor
jecxz
ror
mov
js
mov
jne
and
testb
lret
mov
pop
xor
mov
sbb
mov
fnstsw
mov
fisubs
push
adc
pop
sbb
sahf
fmull
mov
and
pop
scas
or
popf
dec
cmp
aad
jns
fsubp
sub
insl
in
and
cwtl
jmp
loope
xchg
jmp
inc
orb
fwait
lret
mull
xor
out
mov
jp
xchg
mov
jp
mov
jecxz
enter
mov
shrl
imul
xchg
pop
imul
xlat
sbb
rclb
std
push
mov
cmpsb
jg
cmc
pop
pop
rorl
scas
xchg
mov
mov
shlb
jmp
sub
push
mov
mov
into
stc
push
push
cwtl
adc
add
mov
xor
test
mov
mov
repnz
test
gs
mov
int3
fnstsw
push
ret
inc
pop
ja
lds
pop
insb
and
xchg
fidivs
add
push
pop
sub
jmp
mov
or
test
jmp
xlat
xchg
inc
test
insl
loope
cld
dec
call
lret
mov
jnp
push
cmp
mov
xchg
add
popa
cmc
in
insb
cmpsb
mov
sbb
loopnew
pushf
loope
mov
fucom
jo
push
stos
das
adc
in
test
jg
mov
scas
xchg
pop
loopne
mov
in
imul
sub
aam
daa
icebp
inc
push
rorb
insb
pop
pop
jo
xchg
jb
ja
mov
sbbb
insb
out
adc
lahf
pop
cmp
or
xchg
scas
push
sub
push
pop
add
cltd
jp
adc
mov
rcrb
push
insl
mov
inc
push
add
or
test
adc
and
sub
adc
sbb
jmp
push
mov
shlb
arpl
cmp
sbb
xchg
xor
imul
push
jg
inc
or
push
dec
sti
xor
sbb
imul
and
cmp
sub
dec
cs
outsl
pop
pop
sbb
or
mov
clc
mov
dec
rol
lret
mov
xchg
call
dec
popf
fxch
testb
xchg
mov
and
stos
add
xchg
xchg
sbb
mov
andl
push
lret
sbbl
adc
shlb
cld
mov
es
dec
inc
xorl
xlat
push
pop
cld
sbb
xchg
or
xor
dec
stc
add
mov
aam
gs
cmp
orl
push
jne
xchg
cwtl
int3
sub
pop
pop
cmp
push
jns
or
push
adc
cmp
add
dec
out
shl
cld
pop
jmp
ret
scas
or
inc
add
jge
jmp
scas
mov
jne
sub
cmp
fistl
jmp
imul
xchg
and
cmpl
cld
out
dec
mov
push
sub
scas
pop
cmp
xchg
adc
jmp
mov
pop
cmp
mov
pop
cmp
mov
pop
sbb
fisubs
or
shlb
adc
push
adc
roll
int3
adc
in
jae
or
rcrb
dec
push
aaa
and
or
mov
adc
movsb
imulb
insl
ret
dec
neg
mov
fisubrs
jg
mov
pop
mov
into
int3
test
mov
add
push
mov
fiaddl
movl
mov
jg
and
inc
adc
pop
mov
fwait
in
jnp
aam
ret
and
pop
pop
jno
or
push
or
mulb
dec
and
je
jmp
mov
daa
sbb
ret
xor
test
cmp
push
test
cli
loopne
fcmovu
xchg
rcrl
add
mov
loopne
push
inc
mov
cld
addr16
push
push
out
dec
ret
jl
cld
sbb
repnz
mov
scas
adc
cmp
stos
jecxz
stos
cmp
sub
push
stos
add
adc
lret
or
test
inc
fiaddl
cli
pop
xor
jb
add
jns
sbb
mov
aas
dec
mov
hlt
lea
rclb
aam
aam
xor
mov
xchg
mov
mov
pop
sbb
imul
sbb
dec
ds
jno
sbb
push
pop
push
inc
aas
shr
fbld
xchg
js
and
into
leave
mov
fcomip
dec
sub
and
pop
test
inc
mov
lea
cmpsl
mov
mov
xchg
stos
xchg
pushf
pop
test
cld
cmp
ja,pn
jg
xchg
xchg
aaa
sub
cs
dec
outsl
push
fisubrl
dec
cs
shll
aad
sahf
jae
xchg
sbbb
adc
sub
sub
cmp
add
inc
fidivrs
jo
pop
dec
ja
aas
add
or
push
imul
jno
and
push
lea
mov
xor
sub
mov
jecxz
pop
les
adc
jnp
testl
inc
andl
sub
stos
ja
xchg
pop
sahf
dec
in
mov
mov
pop
push
mov
xchg
pop
sub
push
dec
mov
mov
mov
iret
ds
clc
cltd
mov
adc
stos
lock
xor
mov
rcrl
ret
jecxz
sub
or
leave
mov
mov
add
arpl
out
mov
cmpsb
inc
push
sub
es
test
add
pop
sbb
shl
addr16
push
aad
faddl
repnz
and
roll
inc
js
enter
jno
jg
dec
pop
cmp
movsb
jecxz
scas
cmp
dec
loop
movsb
gs
pop
or
cltd
dec
xchg
jbe
inc
push
cmp
mov
jbe
daa
scas
adc
outsl
leave
push
fstps
sahf
jmp
subb
lea
sub
xchg
das
jbe
mov
xor
data16
sbb
push
pop
xchg
movsb
xchg
mov
jecxz
mov
cmp
lea
int
xchg
inc
jle
sarb
data16
dec
popf
mov
nop
imul
dec
rolb
arpl
out
movsb
add
adc
adc
sbb
pop
dec
lods
lods
sbb
popl
repz
fistl
mov
stos
insb
pop
into
add
mov
xor
push
xor
xor
test
mov
fildll
outsb
loopne
mov
rcrb
cwtl
add
lds
mov
xchg
adc
in
mov
ret
fsubs
ljmp
loope
pushl
xchg
mov
inc
mov
iret
and
sbb
sub
test
jns
mov
out
pop
imul
or
jp
pop
ljmp
aaa
pop
js
test
adcb
mov
in
mov
negb
ret
add
pop
aas
adc
and
sbb
outsb
jmp
jne
jp
lock
dec
fmul
push
mov
push
fcompl
lret
out
xor
add
jl
movsl
pop
mov
lahf
mov
mov
xchg
and
stos
push
mov
cltd
lcall
add
je
push
mov
push
clc
xor
push
xrelease
iretw
jg
adc
scas
sahf
cmp
xchg
pop
stc
aas
test
clc
dec
bound
iret
mov
daa
loop
cmp
ret
push
adc
push
stos
mov
cld
mov
gs
sub
cmp
mov
pop
imul
pop
dec
mov
std
push
fsubrl
push
sub
movsl
fucomp
rcl
push
cmpsb
lret
sub
cmp
clc
inc
cs
cld
scas
insl
lcall
push
or
fucomp
sub
daa
jne
in
mov
daa
mov
arpl
mov
aas
out
jle
ss
loop
fisttps
jne
inc
pusha
cmp
sbb
sbb
adc
adc
pop
int3
push
fcoms
add
in
dec
js
cmpsl
jbe
inc
jnp
jae
fsubrs
cltd
popa
and
inc
std
xchg
sub
dec
js
test
mov
dec
mov
xor
lods
inc
test
add
imul
dec
or
outsb
jge
lcall
test
or
xor
jg
pop
stos
movsl
or
je
push
pop
inc
push
cmpsl
inc
add
lret
mov
in
repnz
in
scas
push
mov
lock
add
inc
enter
and
pop
mov
dec
xorl
xor
sarb
sahf
in
aam
push
dec
sub
jle
adc
mov
jmp
push
fdivl
mov
push
mov
outsl
mov
daa
mov
adc
push
or
sub
lock
popa
mov
pop
pusha
inc
cmp
fdivs
test
mov
test
scas
fwait
xor
cmp
mov
cmpsl
cli
fwait
or
incb
mov
fcmove
mov
adc
sub
mull
fcompl
push
scas
xlat
sahf
inc
jno
iret
and
rclb
mov
lods
ds
xorb
hlt
ja
or
inc
inc
or
bound
ja
out
add
adc
mov
jnp
adc
jae
dec
add
xchg
push
add
xchg
xchg
push
push
std
sub
adc
pop
xor
fists
mov
out
or
out
fdivs
fisttpll
fdivrl
sbb
jne
in
inc
jl
mov
int3
int
or
mov
dec
ja
xlat
xor
push
pop
ret
shrl
addr16
daa
xor
in
cmpsb
or
xchg
loope
mov
retw
imul
aam
or
out
xchg
mov
je
shl
stc
ljmp
cwtl
insl
jae
add
movsl
loopne
fidivl
ja
ret
fwait
dec
sahf
adc
sbb
mov
daa
cmp
sbb
and
inc
and
push
jb
jb
push
mov
icebp
sbb
or
sbb
mov
test
bnd
mov
jnp
mov
xor
pop
xchg
mov
cmpsb
shlb
lret
cmp
sbb
cwtl
dec
cmp
sbb
pop
stos
sbb
pusha
fwait
mov
mov
mov
add
mov
pusha
test
mov
mov
mov
into
adc
stos
shlb
ja
lea
hlt
add
das
and
test
push
scas
popf
inc
sbb
sub
or
cmpsl
dec
xor
jge
sbb
dec
int
popf
sti
pop
adc
out
mov
sub
sub
aas
jle
jmp
sub
pop
insb
sbb
ror
popa
inc
sub
sub
push
inc
add
adc
in
inc
fildll
jecxz
scas
cmp
jae
push
xchg
and
fidivrl
call
stc
stc
pop
xchg
adc
sbb
mov
fnsave
fistl
mov
test
mov
outsl
pop
in
xchg
mov
xchg
popa
ror
stos
in
sti
push
mov
xchg
aam
and
sub
lret
sbb
sub
add
rol
inc
and
lods
and
je
sbb
daa
sbb
arpl
push
pop
push
ret
mov
pushf
xchg
mov
mov
movsl
stc
outsl
and
xchg
cmp
dec
pop
and
inc
fsubrl
push
out
in
loopne
xchg
mov
imul
fcomip
sub
loope
insb
inc
pop
sbbb
sub
and
lcall
inc
sub
dec
inc
jmp
jns
lods
sar
inc
pop
aad
xorl
orl
adc
sti
mov
push
das
xor
insl
and
in
or
rcll
mov
mov
pop
or
sbb
es
push
into
mov
sbb
mov
and
cmp
add
sbb
xchg
cmpsb
sbb
in
ret
xor
jecxz
jmp
sti
inc
out
in
out
out
push
sbb
jecxz
add
ljmp
inc
sahf
rorl
sub
das
int
inc
cwtl
out
jo
inc
out
cmp
lea
insb
sbb
add
rcr
loopne
fldenv
arpl
jge
scas
addr16
push
fcomps
stos
fistpll
inc
jle
adc
pop
bound
ret
rolb
pop
adc
add
mov
add
in
add
fadds
int3
fs
dec
cmp
xor
mov
enter
stos
mov
and
xor
cmp
dec
bound
lock
inc
sub
idivl
xchg
mov
out
xor
jp
pop
mov
ficomps
nop
pop
cli
fcoms
sub
sbb
mov
xorl
call
sub
aad
decl
pop
pop
xlat
sahf
dec
pop
inc
stos
out
jne
dec
test
xor
das
cmp
es
adc
call
lret
and
add
and
inc
cltd
loope
adc
mov
jne
push
mov
xchg
mov
mov
out
sbb
xchg
in
dec
pop
stc
les
jge
pop
xor
aad
jg
push
pop
pushf
mov
insl
sahf
add
push
mov
cmp
jns
fwait
loopne
xchg
pusha
and
dec
iret
adc
xchg
jns
jne
idiv
pop
shll
mov
cmc
outsb
inc
mov
fs
or
xchg
stos
std
and
in
cmp
xor
sub
dec
jmp
fidivs
lea
testl
test
std
adc
outsb
jecxz
mov
xor
test
push
rorl
mov
mov
daa
loop
cmpsl
mov
push
scas
out
lds
cwtl
into
inc
push
data16
xchg
dec
mov
push
mov
in
xchg
dec
in
pusha
cmpsb
and
sub
mov
add
fs
sub
fistpl
push
rcll
adcl
mov
fdivrp
xor
push
xacquire
lea
mov
addr16
add
inc
mov
stc
mov
or
pop
pushf
xchg
in
jbe
jno
mov
cmpl
loop
mov
popf
jb
pop
pusha
pop
xchg
inc
mov
inc
mov
jb
mov
adc
lods
jp
lret
insb
jp
and
hlt
cmc
cmp
loope
pop
add
fildl
ss
mov
push
aaa
jge
pop
push
xor
in
repz
cmp
in
push
shll
mov
jl
fisubl
pushf
scas
inc
cli
test
mov
das
mov
std
insb
push
adc
cld
mov
int3
mov
or
scas
test
pop
pop
mov
data16
jno
inc
or
shll
xor
xchg
mov
je
mov
mov
and
sub
mov
lock
stc
push
cmp
test
jo
mov
jp
xchg
xchg
sahf
adc
add
sbb
scas
sub
in
adcl
in
mov
repnz
icebp
xorb
sub
ret
or
jle
inc
inc
mov
jge
push
stc
xchg
jns
xor
inc
inc
test
xor
repnz
add
cmpsl
lds
mov
cmp
xchg
out
cwtl
cmp
in
rcrb
call
ja
inc
test
popa
sub
scas
inc
pushf
mov
ret
mov
push
mov
or
jl
imul
ret
sbb
shl
out
jg
lock
scas
sub
mov
mov
jne
ret
dec
outsl
inc
out
cwtl
rcrl
lds
xchg
pop
lcall
cmp
or
xchg
push
pop
stos
iret
mov
and
sbb
stos
popa
mov
pushf
xchg
out
dec
mov
call
push
jl
andl
insb
cs
ljmp
cld
int3
fidivs
and
push
popa
mov
add
xor
pop
mov
pusha
inc
cwtl
jo
adc
mov
jg
loope
push
stos
pop
pusha
inc
sti
xchg
fsub
inc
ret
shrl
inc
cmp
call
dec
jnp
sub
jle
roll
mov
enter
gs
inc
maxps
call
clc
push
leave
sub
divb
imul
xchg
hlt
notl
sbb
repnz
add
cmp
leave
or
add
pop
xchg
dec
xchg
in
mov
movsl
addl
outsl
aad
mov
xchg
jne
outsb
and
in
repz
arpl
stc
pop
lret
aas
adc
inc
mov
ds
pop
popa
loope
mov
imul
dec
fdiv
ss
dec
aam
test
mov
loopne
mov
and
in
mov
xchg
cli
pop
cmp
pop
nop
lret
test
hlt
popa
cmp
jmp
adc
in
adc
bnd
xor
aam
jl
lahf
iret
arpl
jl
jg
cmp
ja
aad
xor
mov
dec
adc
ss
push
and
adc
scas
cmpsl
xchg
fisttpl
ja
and
iret
xchg
pop
adc
adc
jecxz
out
pop
addr16
sub
sub
xchg
loopne
movsb
lods
in
popf
cmp
mov
std
in
clc
lock
inc
lods
neg
or
cmc
jne
icebp
pop
in
stos
insl
hlt
daa
push
popa
rcrl
mov
fmuls
mov
mov
push
jmp
jp
push
aaa
jl
xchg
fstpt
clc
mov
aas
xchg
mov
das
movsb
inc
insb
dec
dec
je
dec
cltd
movsb
mov
pop
mov
mov
push
stos
push
cmp
xchg
jb
mov
add
ret
adc
and
sbb
xor
aam
cs
std
pop
mov
pop
add
adc
outsb
loope
lea
mov
fiaddl
fistpll
pop
xor
pusha
inc
cmp
pusha
inc
mov
add
cmpsb
and
inc
enter
lahf
repnz
pop
mov
xor
cmp
es
mov
bound
fwait
je
mov
mov
das
pop
sub
jbe
and
outsl
mov
xor
incl
lds
cld
in
and
les
xchg
add
dec
pop
ror
enter
rol
dec
xor
push
dec
mov
movsl
pusha
andb
sub
xchg
sbb
push
testb
jo
sbb
into
push
cwtl
lods
push
dec
ja
cmp
fdivrl
ja
pop
pop
jbe
xor
loope
out
or
out
dec
inc
flds
mov
and
sbb
aad
xchg
cli
lret
xchg
mov
cmc
lret
cmp
mov
scas
insl
or
clc
mov
push
mov
and
jle
adc
jle
cs
push
jo
lcall
fnstcw
sbb
mov
fstpl
insb
lea
dec
xor
pop
stos
shll
jl
push
cmp
dec
mov
fsubs
mov
jno
bound
dec
pop
ja
sub
xor
jmp
imul
rcrl
loope
inc
inc
outsl
lret
adc
add
inc
dec
add
and
shrb
xchg
sub
jb
mov
mov
xchg
mov
cmp
lcall
adc
mov
cld
jbe
jp
jl
sbb
sub
pop
cmpsb
push
test
sbb
loop
sbb
push
push
pop
popw
out
or
dec
mov
cmp
jne
jecxz
loop
jp
test
pop
lcall
pop
jl
sub
fdivrp
scas
nop
in
dec
cld
lods
jp
pop
js
push
xor
push
bswap
inc
dec
sbb
or
sti
xor
xor
shll
cwtl
ljmp
lahf
push
ret
push
pslld
repnz
add
mov
repz
add
sbb
xchg
jno
outsb
ja
aaa
mov
int3
push
int3
mov
jecxz
int3
les
add
nop
cmp
mov
cltd
sbb
push
mov
loop
sahf
shlb
mov
or
or
aas
test
cli
dec
pop
les
jne
lcall
clc
xchg
mov
and
lret
jle
add
mov
fildll
push
push
rclb
pop
es
cwtl
sbb
jne
sbb
or
insl
jmp
adc
inc
ljmp
sub
lcall
sub
push
sbb
jmp
sahf
std
dec
pop
ds
les
insb
jge
mov
pop
fnsave
mov
jp
xchg
fcomps
nop
fistl
aas
adc
cmpsb
dec
ret
add
fisubs
sbb
punpcklwd
fdivr
jb
pushf
jp
dec
std
jg
inc
push
jno
and
pop
or
mov
cmp
mov
or
cltd
rcr
mov
sbbl
dec
sub
jb
xor
sub
enter
push
jae
jle
fimuls
cwtl
add
push
jmp
int
inc
test
outsl
xchg
clc
pop
flds
mov
sbb
cmpsb
rcrl
pop
pop
push
nop
xlat
xorb
and
je
pop
jnp
mov
pop
mov
test
popa
and
repz
insb
xlat
imull
jmp
ja
pop
push
andb
dec
mov
mov
icebp
mov
pop
mov
and
std
sub
mov
stc
into
adc
and
cmp
fistpl
jge
inc
pop
fldl
cltd
shrl
and
lock
jp
mov
jmp
add
cmpsb
out
pop
faddl
mov
mov
pusha
fucomp
mov
aaa
or
push
mov
sub
jne
xchg
lcall
test
sub
inc
mov
fimuls
test
cmpsb
dec
mov
pop
xor
mov
test
or
cmp
jmp
or
in
mov
mov
add
les
loopne
push
mov
inc
fwait
adc
xor
mov
jae
xor
jo
xor
dec
daa
sti
and
pop
inc
sbb
xchg
xor
and
adc
rolb
ds
rcr
sti
and
shl
add
cmp
lods
mov
lds
dec
pushf
push
sahf
xor
cwtl
sub
les
clc
das
push
repz
sub
sbb
vphaddubd
aam
jp
sub
clc
sub
dec
cli
stos
std
cmc
mov
mov
xchg
shrb
movsl
pop
or
pop
ficomps
push
sbb
fistps
pop
xchg
lcall
cmp
jmp
add
push
mov
movsb
xchg
xchg
jmp
ret
scas
loopne
mov
test
add
xchg
add
mov
inc
sub
lods
sub
int
lahf
mov
popf
icebp
rorb
jne
add
fs
push
sbb
fsubrs
or
jl
mov
jl
pushf
dec
adc
add
sbb
pop
adc
xor
lcall
sub
aaa
xor
stc
ss
rcr
jno
xor
xchg
xor
shlb
sbb
aam
rclb
jnp
cs
scas
mov
pop
ret
dec
cmp
mov
filds
xor
mov
mov
test
inc
sbb
ret
cli
mov
iret
inc
repz
fsts
add
push
jns
cmp
or
mov
std
jmp
mov
loop
sbbl
mov
test
inc
scas
cmp
mov
pop
into
xor
sub
or
int
jae
or
sub
gs
test
or
jae
pop
cmp
repz
jno
in
or
cmpl
lret
mov
xchg
or
pop
sub
test
cmp
aam
sar
add
mov
ficompl
testl
pop
xchg
sub
cmp
pop
out
mov
popa
push
and
or
addl
lock
lret
imul
adc
addr16
insb
aad
fiadds
dec
sub
push
imul
jns
ljmp
jg
lods
loope
fstpl
adc
mov
cmp
jle
rol
repz
in
mov
loopne
std
aam
ss
hlt
mov
fsubl
loop
divl
mov
push
pop
shll
lock
cmp
xchg
mov
mov
mov
arpl
push
and
pop
stos
pop
lret
in
cmc
adc
pop
or
adc
sbbl
cmp
xor
ds
sbb
cmp
jb
out
xorb
xchg
add
dec
lock
sbb
adc
sahf
mov
mov
xor
cmpsb
ljmp
xchg
shll
out
nop
sbb
mov
and
xorl
adc
xchg
jg
xor
bound
inc
lods
sbb
in
addr16
icebp
jae
push
daa
test
rol
popf
fisttpl
add
add
and
outsl
jo
popf
data16
dec
fucomp
int
daa
dec
test
jg
cmp
jge
test
sti
aaa
dec
scas
push
int
fadds
push
push
jbe
icebp
pop
mov
movsb
fdivrs
hlt
inc
ret
int3
or
jo
out
cmp
inc
push
or
ret
sub
jge
call
cwtl
push
fidivs
repz
imul
or
add
sbb
cmpsb
lret
xchg
mov
mov
out
sbb
aam
out
inc
cmpsl
test
nop
push
negb
int
sbb
sub
or
out
iret
mov
inc
lret
mov
mov
mov
jbe
fwait
ss
popa
cmp
ret
push
sub
jae
pop
das
mov
les
loopne
ret
sub
rcrl
and
loopne
mov
cmpsl
add
sub
out
jae
push
je
mov
cmp
mov
aam
dec
push
add
xorb
clc
push
addr16
jnp
mov
repnz
and
jns
mov
shr
mov
mov
jp
push
xchg
outsl
outsl
and
xorb
subl
xor
or
gs
mov
lcall
lods
add
mov
jp
cld
addl
sub
call
mov
sub
ljmp
js
xchg
cmpb
aas
aas
jno
into
mov
xor
jle
mov
mov
aam
in
dec
push
xchg
adc
push
dec
mov
imul
sub
fcoml
mov
mov
push
cli
hlt
cmp
push
das
int
jno
xor
jp
lahf
int
sub
ret
imulb
inc
shrb
lret
jnp
mov
aas
pop
cmp
inc
pop
dec
js
sahf
sbb
mov
shll
adc
fdivrs
jbe
mov
cld
adc
pop
and
mov
test
mov
test
and
sub
fwait
lods
add
adc
sbb
xchg
mov
xor
aam
repz
stc
mov
mov
jns
push
mov
add
call
adc
mov
jae
cmp
xor
inc
je
insb
mov
icebp
aam
repz
xchg
fldl
enter
aas
sahf
sub
jno
jnp
nop
jo
pop
and
lods
fstps
ljmp
les
pop
cwtl
jecxz
cmp
filds
dec
sub
push
in
sbb
dec
mov
mov
add
mov
jge
and
adc
test
pop
iret
cmp
testl
stos
adc
mov
adcb
sti
dec
cmpsl
notl
lods
mov
inc
mov
in
add
into
aam
lret
sbb
ss
pop
adc
add
add
push
xor
jnp
mov
inc
mov
aad
int
push
sub
icebp
loopne
ffreep
xor
mov
jnp
mov
sti
sub
fildll
call
sbb
dec
sub
pushf
repz
push
fldcw
fidivl
or
pop
add
js
push
test
fisttps
rcrl
test
cmp
and
or
xor
in
jmp
scas
xchg
aad
mov
and
ja
xor
mov
cmp
xchg
cmp
iret
push
mov
jae
negl
lret
or
rcll
shrl
dec
and
pop
cmc
test
lods
inc
jp
add
shrb
pushf
scas
jp
xchg
bsr
jno
sub
and
ret
pop
fsub
test
call
aaa
sbb
mov
jae
mov
adc
and
fisubrs
cmp
mov
arpl
xchg
ror
push
daa
pop
lods
xor
or
stc
movsl
insb
mov
cmp
pop
hlt
cmp
in
pushf
sub
nop
rorl
and
je
mov
fnstsw
add
movl
js
add
mov
adc
lds
cmp
fwait
xchg
insl
aaa
mov
addr16
nop
sbbb
push
fistpl
iret
push
adc
inc
fstpl
lahf
rcl
xor
inc
sahf
je
jae
fs
jo
xchg
jbe
fs
lods
cmc
aad
mov
and
inc
pop
xchg
and
test
adc
pop
stos
stos
loop
je
xchg
push
push
mov
sub
jno
je
mov
sbb
scas
pop
dec
popa
push
lea
xchg
std
ss
test
dec
cmp
or
mov
in
or
daa
bound
gs
cltd
jb
repnz
adc
popa
mov
es
je
inc
dec
jb
mov
ret
fwait
movlps
xor
cltd
hlt
clc
mov
mov
inc
mov
mov
push
scas
dec
ss
and
insl
jbe
jns
repz
cmp
sbb
test
rorb
xchg
adc
inc
imul
jnp
outsl
inc
mov
jns
hlt
inc
out
mov
sub
add
cmc
cld
sbbb
mov
imul
and
cmp
inc
jnp
imul
out
xchg
mov
lcall
jbe
push
addr16
je
sub
mov
fwait
out
fsubs
sbb
adcb
sub
sbbl
cltd
stc
inc
add
push
std
jb
pop
fwait
out
dec
push
push
sbb
jl
lods
or
js
dec
movsb
fsubl
rcrb
xchg
jae
cmp
leave
lods
les
cmp
xchg
lods
dec
in
stos
jl
std
or
jp
mov
jbe
cwtl
pop
xlat
jge
inc
call
lods
or
or
sub
jbe
and
cs
int3
ss
dec
repz
int
minps
pushf
js
xor
jae
cmp
in
leave
lods
xor
xor
data16
loopne
aad
push
xchg
cmp
jns
leave
push
sbb
cli
or
arpl
pop
xchg
sub
xor
mov
add
or
dec
clc
cmp
mov
sub
hlt
dec
sbb
fwait
mulb
nop
movsl
stos
js
sbb
inc
fisubs
je
shll
mov
fstpt
sti
push
shr
add
cld
cmp
jbe
jne
mov
mov
pushf
mov
ljmp
mov
imul
push
push
lock
sbb
pop
pusha
gs
inc
inc
xor
jmp
iret
sub
inc
aaa
fdivr
cld
paddsb
push
ja
movsl
call
cmp
lods
cmp
out
or
out
dec
js
cli
push
leave
inc
cmp
aam
outsb
mov
rcrl
xchg
cmp
dec
ja
pop
cmp
fidivrs
jno
push
inc
mov
xor
cmp
push
adc
fnsave
push
mov
mov
or
scas
aas
notl
daa
lea
rol
scas
or
ror
and
cmp
or
leave
sub
lret
cmp
xchg
xor
fnsave
xor
subb
lcall
xchg
jo
jne
inc
push
xchg
dec
out
cwtl
jns
fisubl
or
mov
inc
fisubrl
mov
pop
iret
repnz
dec
adc
into
lods
shrb
rorl
call
cs
cwtl
icebp
dec
loopne
jbe
test
in
push
xchg
sbb
enter
mov
mov
repz
fcoms
in
xchg
pop
fnsave
stc
sbb
cmp
sub
addl
lods
sbb
call
sbb
cmpsb
gs
cmp
mov
in
outsb
dec
sub
lret
sbb
fbstp
mov
stos
add
mov
inc
mov
mov
ja
rcrl
fisubrl
fs
push
in
in
out
jp
mov
stos
loope
mov
lahf
xor
push
sbb
mov
pop
inc
sti
add
pushf
xchg
dec
adc
aaa
cmp
mov
int3
add
sarl
mov
pop
daa
lds
pop
xchg
fs
jl
jg
sub
cwtl
lods
ret
jp
loop
test
add
mov
xor
mov
sbb
bound
cs
aaa
aam
lret
mov
dec
xlat
jns
je
sbb
xlat
xor
mov
adc
outsl
push
imul
sub
push
pop
mov
aam
out
in
insb
repnz
out
cli
push
test
jl
push
jmp
mov
push
jae
push
mov
lret
dec
push
mov
lods
sbb
adc
stos
or
mov
mov
cwtl
inc
lahf
mov
iret
xor
xchg
and
rol
and
testb
mov
cmpsl
push
mov
je
repz
lds
mov
sti
int
aas
mov
push
adc
mov
cmpsb
lcall
gs
fiadds
dec
rorl
push
pop
dec
xchg
mov
outsl
jecxz
mov
sbbl
cmc
stos
jnp
fwait
sub
mov
outsb
out
jne
and
xchg
shlb
les
mov
add
fsubr
mov
fidivl
adc
bsf
pop
outsl
push
push
jecxz
aad
dec
lcall
jno
pop
mull
div
aam
lods
out
imul
out
add
dec
inc
mov
xor
bound
pushf
xlat
test
fidivrs
or
xor
pop
xor
xchg
mov
popf
out
cmp
xor
xor
and
loope
out
rclb
mov
insl
cmp
test
std
repnz
sbb
mov
pop
sbb
ljmp
lret
inc
mov
cmpsl
jne
les
cmp
add
inc
cmc
xor
dec
jbe
jge
ss
dec
rorl
in
xchg
jg
pop
enter
and
scas
sbb
fists
xor
pop
js
xchg
leave
or
jp
or
shrl
andb
mov
sub
frstor
outsb
lret
dec
inc
xchg
push
aaa
push
push
clc
addr16
xchg
inc
repnz
push
push
fwait
push
clc
int3
mov
jnp
xchg
cmp
pop
xor
adc
loop
ret
mov
js
mov
push
mov
repz
cld
mov
scas
popa
mov
sub
cmpsb
stc
sahf
mov
movsl
xor
mov
inc
or
insb
negl
sahf
enter
mov
mov
sbb
inc
push
xchg
xchg
push
arpl
repnz
push
lods
mov
icebp
push
fcomip
mov
mov
movsl
fistpll
push
orb
inc
and
out
pop
fcoms
pop
shlb
pop
bound
das
fbld
pop
ss
cmp
iret
iret
jae
lea
mov
push
inc
pop
movsl
mov
push
ret
fwait
xchg
pushf
mov
pusha
xor
mov
dec
jp
and
pop
aas
mov
and
inc
jle
sub
dec
jecxz
mov
push
xor
sub
add
and
xchg
jnp
sub
sbbb
repz
push
jl
xor
jno
lock
arpl
cmp
inc
xchg
sbb
addr16
lods
pop
sahf
cmpsl
sub
es
imul
add
and
push
mov
push
aam
stc
push
inc
cltd
daa
mov
push
dec
jnp
roll
inc
filds
adc
mov
and
adc
insl
test
sbb
out
push
cmp
mov
stos
and
fcmovnbe
imul
in
push
pop
sub
cmp
sti
je
push
jp
mov
orl
aad
into
cmpsb
mov
mov
lods
push
push
inc
xchg
adc
loopne
sahf
jb
loopne
xchg
loope
cmp
ret
movsl
xor
outsl
faddl
aas
daa
clc
xchg
addr16
pop
pcmpgtw
imul
sub
sbb
orb
dec
loopne
sahf
adc
cld
test
sbb
sahf
cmp
stos
add
push
stc
xlat
addl
insb
sbb
mov
xor
jb
out
inc
rorb
jle
in
cmpsb
gs
ror
or
test
inc
test
test
enter
sbb
cmc
pop
test
adc
push
mov
iret
xorl
clc
cld
adc
sahf
push
push
pop
add
push
xchg
sub
loop
push
xor
std
xor
mov
add
ret
lret
fldt
mov
xchg
push
xlat
gs
cmpsl
inc
stos
pop
loope
fists
ja
xlat
mov
pop
dec
xchg
in
cmp
ret
push
leave
mov
cmp
imul
add
nop
sbb
cli
das
daa
xlat
mov
aam
fisubrl
add
jns
cmp
loope
iret
sbb
mov
sub
cltd
std
stos
push
in
or
fs
lock
mov
popa
dec
imul
xor
inc
add
xchg
xchg
jmp
enter
add
ja
mov
xor
aam
dec
inc
sub
mov
sbb
pop
fs
and
aad
pop
push
push
lea
repnz
std
nop
push
jno
fmull
jle
pop
insl
js
inc
call
or
fwait
imul
xchg
inc
dec
popf
adc
bound
out
test
aaa
or
adc
push
xchg
outsl
cmp
inc
fcoml
inc
adc
int3
subl
cltd
pop
ja
insb
mov
pusha
pop
pusha
add
mov
cmc
popf
and
mov
push
ss
add
stos
xchg
std
cs
cli
dec
lcall
dec
shrl
pop
cli
and
add
jl
ficompl
inc
leave
mov
loopne
dec
in
pop
mov
xchg
adc
andb
cmp
jmp
mov
or
push
jbe
adc
xchg
ret
xor
pop
jle
cmp
sbb
fwait
mov
push
scas
cmp
inc
call
mov
sti
sbb
icebp
cmp
js
mov
test
add
or
mov
mov
adc
sti
sbb
mov
mov
addr16
xor
ljmp
in
push
mov
loope
outsl
xor
in
lcall
or
jmp
aam
cmp
sbb
mov
in
cmc
mov
pop
push
roll
nop
mov
cmpsl
mov
push
inc
fs
stos
icebp
and
and
sbb
push
sub
sahf
mov
loope
into
or
inc
inc
movsl
pop
push
icebp
je
hlt
mov
in
jbe
dec
clc
dec
cmp
pushf
cmp
or
pop
or
mov
pushf
faddl
xor
daa
fcompl
enter
adc
add
xchg
or
mov
cmpsb
aam
in
push
inc
push
pop
shl
fildl
cmp
enter
pop
mov
pop
sub
mov
dec
dec
out
fstpt
jecxz
xchg
stc
dec
mov
hlt
mov
sbb
add
cmp
and
cmp
clc
popa
repz
and
mov
dec
sub
arpl
movsl
mov
push
iret
lahf
xchg
add
cli
xor
or
outsl
mov
add
rol
hlt
mov
test
pop
adc
pop
lds
sbb
lea
xchg
jne
add
jne
xor
push
shll
xchg
mov
mov
push
sar
aad
xchg
and
cld
out
push
fnstsw
adc
xchg
push
loop
in
inc
pop
jb
daa
adcb
lea
ss
int
xor
ljmp
repnz
pop
scas
sbb
add
dec
lret
test
jl
mov
ret
mov
mov
sahf
mov
daa
mov
adcl
dec
and
sbb
xor
xorl
sub
int3
aam
sub
sub
adc
add
int
cltd
mov
int
xor
icebp
int3
sbb
in
pop
dec
popf
mov
jno
push
rorb
outsl
pop
sbb
lcall
mov
push
mov
sti
mov
fildll
ljmp
add
inc
xor
scas
subl
fmul
mulb
jecxz
cmp
mull
out
or
je
scas
pop
jle
fldenv
repnz
les
and
fstps
decl
xor
mov
in
stc
inc
or
pusha
xor
fiadds
or
push
or
dec
lock
fdivs
jl
jmp
shrb
add
adc
mov
cmp
add
test
or
icebp
mov
lret
orl
mov
cmpb
jmp
mov
pop
adcl
movsb
jns
xchg
and
adc
xchg
scas
lcall
mov
and
mov
mov
lock
aam
icebp
push
xchg
imul
repnz
mov
test
inc
cmpsl
out
jle
lcall
push
inc
xchg
repnz
das
sub
out
les
out
clc
lods
rclb
mov
pop
sahf
sbb
inc
sub
push
sub
jns
xchg
push
fsts
xchg
add
in
mov
incl
xchg
mov
lods
stc
cmc
fsubrl
pushw
sub
js
jecxz
cmp
or
push
sbb
aaa
mov
xlat
je
adc
cltd
push
adc
xor
sbb
adc
das
and
pop
dec
xchg
roll
and
jle
push
inc
shrb
lods
jl
xchg
sub
cmp
sbb
push
dec
pop
cmp
lock
jecxz
xchg
movsl
shll
sub
shl
outsl
int3
or
cli
test
jns
push
hlt
push
xor
jbe
sbb
ja
fstl
nop
xchg
push
sbb
daa
pop
sub
xchg
aad
inc
inc
add
push
mov
inc
outsb
enter
in
ljmp
and
jmp
jne
push
sarb
add
push
ja
pop
mov
push
push
lahf
imul
aaa
mov
and
xchg
add
insl
stos
shrl
add
stc
jb
or
sub
fucomip
aad
dec
mov
fucom
sti
fsubrp
sbb
divl
add
mov
lods
or
nop
test
push
sbb
shlb
adc
test
sub
arpl
jg
testb
test
xor
sub
in
mov
add
lcall
jo
mov
or
pop
and
sbb
mov
inc
nop
hlt
pop
adc
mov
jbe
in
outsb
stos
cmp
and
int3
sub
sub
mov
xchg
mov
push
popf
leave
mov
jbe
pop
stos
sti
dec
push
cmc
mov
xor
pop
add
dec
or
inc
rorl
data16
cltd
sub
sub
add
add
mov
mov
hlt
cmp
outsb
mov
inc
fdivrl
lcall
mov
lock
das
dec
pop
ljmp
and
imul
call
hlt
icebp
xor
dec
testb
ret
inc
je
adc
adc
mov
dec
aaa
pop
push
dec
sarb
xor
jb
cmp
test
sub
push
mov
cmp
add
sahf
push
push
mov
stos
clc
pop
test
les
popf
mov
fld
sub
inc
pusha
dec
mov
test
shl
jge
mov
adc
cmp
sbb
mov
imull
sbb
call
mov
push
fcmovbe
cmpsl
loop
push
mov
cmp
cmp
ret
add
xchg
push
repz
std
dec
sub
xor
xchg
enter
xor
in
das
mov
mov
lods
iret
test
scas
mov
and
ja
scas
test
imul
iret
push
repz
lret
mov
rcrb
imul
xor
add
out
mov
iret
ss
adc
inc
daa
repz
mov
enter
int
nop
push
jmp
test
jle
push
fucomi
arpl
cmc
rorb
pop
cmpsb
ljmp
and
mov
push
sub
imul
xchg
sbb
sarl
fldenv
shlb
aaa
adc
call
push
xor
test
sub
xor
jmp
mov
fcmovu
or
add
sbb
or
sub
out
icebp
xor
cld
cmp
sti
rclb
fstpl
addr16
stc
jp
ss
repz
sub
pushf
pop
out
add
aaa
inc
ret
shll
fsubr
bound
pop
pop
or
aas
insb
je
jg
stos
std
xchg
dec
jp
push
xchg
das
adc
loope
mov
sbb
cmp
cmpsb
xorl
sbb
push
sbb
push
insb
mov
push
jns
push
ljmp
dec
jo
mov
std
jae
pop
iret
add
and
out
or
sub
outsb
lods
imul
fcompl
push
inc
xchg
push
sub
fildll
aad
scas
sbb
or
dec
icebp
mov
push
orl
push
loope
inc
cmp
mov
dec
xchg
inc
fildll
dec
or
not
int
negb
test
repz
mov
lahf
mov
idivl
testl
mov
sub
adc
stos
mov
mov
mov
movsl
or
jb
or
rep
jle
pop
sub
imul
icebp
test
ljmp
sbb
ret
stos
je
je
mov
push
lock
and
push
dec
jl
pusha
adc
das
or
mov
cmpsb
enter
push
inc
sub
mov
lahf
and
dec
xchg
pop
lock
stc
adc
pop
cmpsb
xchg
lret
js
jb
jae
xchg
jno
xchg
mov
scas
adcb
push
push
sub
mov
bound
lds
jl
mov
dec
push
sti
repnz
and
lahf
jp
pop
stc
push
out
sub
daa
mov
lahf
mov
xchg
jg
test
fnstcw
jbe
repz
orl
and
ja
arpl
jmp
push
sub
test
iret
aad
sbb
jb
sub
dec
or
push
pop
fcoms
or
mov
pusha
sub
in
movsl
xchg
xor
sbb
pop
nop
addr16
imul
jae
add
lods
mov
and
sub
and
mov
cmp
call
pop
scas
fldln2
out
dec
push
mov
sbb
pop
jns
push
jge
data16
movsl
and
int
pop
js
es
scas
jns
test
add
jb
shl
sbb
xlat
pop
push
popf
sbb
cltd
ja
pop
les
add
imul
fdiv
mov
xchg
cli
ljmp
xor
nop
jmp
xchg
lods
sub
and
aam
sti
leave
mov
jecxz
rcrb
sarb
rolb
jecxz
outsl
xchg
js
jecxz
sub
jno
xor
fs
out
mov
popa
and
insb
cmc
dec
sbb
inc
out
ds
test
andb
dec
mov
push
jo
adc
into
push
sbb
cmp
push
mov
jge
jne
mov
xchg
dec
push
repnz
cs
cmpsl
xchg
pusha
outsl
xlat
xchg
inc
ret
stos
cmp
popf
mov
das
stos
repnz
jmp
loop
mov
lret
jmp
pop
adc
xchg
ja
and
iret
adc
sub
push
cwtl
mov
jno
negb
ret
jne
test
aaa
or
imul
test
pusha
sbb
cli
jg
push
xor
mov
xor
mov
pushl
les
insl
test
aas
mov
in
xchg
cmp
mov
daa
cltd
int3
std
faddl
cwtl
or
sbbl
cld
in
push
mov
sbb
cwtl
das
pop
pop
push
mov
in
and
pushf
sbb
adc
jo
lea
sub
pop
out
cmp
xchg
jle
lahf
cltd
cmp
mov
dec
rcl
xchg
adc
add
orb
jecxz
dec
std
fidivrl
aad
or
rclb
mov
data16
push
fildll
scas
lcall
jae
push
sbb
add
hlt
inc
andb
xchg
imul
repnz
push
xchg
test
ret
out
out
xlat
sbb
imul
in
ret
mov
push
jno
xchg
dec
mov
ds
mov
push
mov
fnstcw
fwait
shl
cmpsb
add
inc
jl
subl
mov
dec
xchg
sbb
in
jge
sbb
dec
push
in
adc
cmp
lock
sub
adc
mov
jbe
inc
stc
lcall
and
xchg
inc
inc
or
outsl
xor
cmc
icebp
test
iret
sbb
cmp
divl
cld
xchg
xchg
cwtl
and
mov
add
test
enter
push
mov
push
popa
es
movsl
nop
das
pop
lods
aam
enter
mov
enter
enter
clc
aam
mov
sbb
or
fdivl
add
or
and
or
in
mov
mov
xchg
xchg
adc
cmpsb
lds
xlat
mov
test
mov
leavew
pop
pop
sub
cmp
xchg
xor
sub
push
mov
leave
out
loop
lahf
cmp
insl
icebp
sbb
jg
shr
inc
cwtl
or
add
add
jmp
sub
or
jae
pop
jg
es
jae
rep
xor
adc
lds
sti
jl
xchg
or
push
lock
xchg
fsubrl
xchg
xchg
sub
and
adc
jns
mov
jmp
lods
les
ja
imul
out
fldt
xchg
jl
mov
add
icebp
inc
mov
bound
lea
jne
sub
sub
inc
and
shlb
hlt
gs
aas
jge
addb
rclb
jecxz
incl
mov
in
mov
jns
jmp
iret
cltd
jg
sahf
fcoml
pop
or
inc
fst
sbb
in
jns
sub
adcb
insl
push
fsubr
in
jnp
ja
xchg
scas
sbb
or
mov
and
fcmovu
pop
jp
xor
dec
inc
inc
jp
sbb
pushf
push
clc
cli
cmp
pop
incb
dec
sub
lods
imul
mov
mov
ljmp
cmpsl
or
es
aaa
dec
insl
call
add
sbb
test
dec
jl
push
inc
loope
xchg
mov
add
cmp
jmp
or
mov
dec
mov
in
or
add
sbb
rcl
leave
aas
in
imul
into
ljmp
dec
cmp
push
je
sbb
inc
jecxz
aad
inc
movsb
inc
stos
lmsw
imul
cmp
pop
push
jge
lods
fimuls
xor
ret
in
push
lods
push
cli
push
int
inc
jp
cmpsl
or
call
aaa
mov
xchg
add
mov
sub
or
gs
lret
insb
cmp
mov
mov
lds
lret
push
xor
lods
push
inc
mov
dec
icebp
inc
xor
inc
stc
insb
pop
loopne
popf
xor
int
cmp
int
sarl
xchg
or
sbb
call
aam
scas
xlat
out
fsubrs
sbb
pusha
bsr
iret
jb
jge
in
push
pusha
hlt
test
push
in
jne
dec
scas
pop
fstpt
dec
cld
jns
cmp
dec
iret
fstpt
rol
ds
imul
insl
mov
fdivrs
xor
sti
push
mov
loop
flds
dec
mov
add
gs
add
and
enter
gs
negb
push
push
aam
je
mov
cs
add
or
or
call
shrd
mov
jo
jbe
dec
movsl
stos
add
or
lret
jns
adc
mov
xchg
aaa
mov
push
inc
je
das
jle
xchg
push
add
fbstp
aad
add
lods
push
pop
lock
test
hlt
cwtl
pop
add
or
mov
mov
adc
add
adc
decb
xor
bound
adc
sar
lahf
mov
nop
xchg
test
popa
pop
test
xor
adc
orb
and
jns
sbb
cwtl
cmp
lahf
push
sub
je
adc
lock
leave
stc
mov
sbb
cmpsb
clc
test
mov
inc
mov
mov
lock
pushf
sub
fists
dec
iret
out
pop
sbb
lcall
and
cmpsl
leave
sti
pop
daa
mov
mov
sahf
das
adc
inc
mov
inc
int
add
and
fmul
xchg
mov
test
jl
ljmp
cmc
pop
sub
or
sub
loope
lods
push
pop
add
xchg
fldenv
push
into
fisttpl
mov
mov
adc
cmp
xchg
mov
xor
mov
or
or
rorb
idivl
adc
cmpsl
pop
and
xchg
mov
out
dec
fists
cmp
jmp
mov
and
andb
ljmp
int3
std
popa
mov
inc
cs
loop
pop
and
leave
sub
clc
adc
icebp
cltd
lahf
das
orl
mov
xor
std
outsb
fs
in
daa
dec
into
popf
arpl
add
ret
lahf
pop
or
mov
jmp
dec
push
push
into
js
push
pop
adc
cmp
sbb
jbe
or
dec
cld
mov
loopne
lds
cmpsb
mov
ficoms
mov
addss
dec
add
xlat
inc
cmp
shr
xlat
rolb
sbb
ja
push
loope
xchg
aad
jae
inc
inc
mov
gs
cmpsb
pop
test
fcomi
sub
daa
mov
xor
dec
xchg
fucomi
push
dec
cs
jge
es
pop
shrl
mov
or
fadds
xchg
add
fs
push
sbb
out
mov
scas
nop
lock
push
aas
xchg
pop
inc
scas
mov
xchg
mov
mov
je
push
mov
fcmovb
pop
pusha
and
pop
sbb
push
outsl
stos
mov
cmp
in
xchg
in
filds
faddl
xor
out
mov
or
pop
sbbl
sub
xchg
pop
popf
dec
pop
pop
stc
stos
cmpsl
dec
inc
inc
cld
mov
lds
cwtl
push
inc
int
xor
and
aad
ss
loop
icebp
mov
pop
and
shlb
cmp
and
lcall
dec
shl
mov
pop
js
ljmp
testb
icebp
test
loopne
test
mov
sahf
shrb
lret
out
mov
stos
rcll
pop
push
xchg
lods
xlat
dec
test
out
cmp
mov
stos
movlps
cltd
xor
cmc
in
subl
and
cld
pop
stos
aam
jl
mov
mov
jmp
mov
aas
jno
scas
je
adc
sahf
pop
aam
mov
out
mov
add
sub
cltd
scas
test
pop
or
push
add
mov
mov
pop
stos
shr
dec
movsl
outsb
bound
lcall
pop
push
mov
ret
mov
jmp
lds
std
mov
into
movsl
pop
das
push
popa
adc
lods
mov
pop
aam
mov
mov
imul
adc
jo
cmp
push
jo
stc
jb
divb
mov
leave
add
sbb
int3
mov
scas
adc
pop
mov
push
sahf
sub
test
mov
outsb
icebp
add
into
repz
lods
stc
pop
push
jns
add
cli
mov
push
push
arpl
push
cmpsl
outsl
add
jmp
inc
out
push
mov
test
jo
mov
fnstsw
std
outsl
push
aaa
bound
lock
mov
xchg
sub
xchg
pop
sub
and
or
fsubrs
pop
or
out
or
or
das
int
fiadds
popf
sub
xchg
out
inc
je
pop
cwtl
ljmp
dec
test
jns
je
and
jbe
jge
out
fnstenv
adc
jae
ljmp
or
mov
jno
dec
inc
dec
adcb
insb
rcr
rolb
icebp
insb
lahf
pushf
pop
inc
xchg
mov
adc
fisubrl
pop
jno
push
xchg
std
jae
push
mov
jg
jle
adc
clc
xchg
jg
jmp
push
mov
add
arpl
adc
pop
lods
jo
jp
cmp
daa
mov
inc
rcrb
jno
pop
rcr
mov
push
loope
lcall
popf
lret
pop
gs
movsl
cmp
mov
adc
enter
je
adc
in
push
fidivl
inc
stc
or
insb
cwtl
popf
jae
mov
jmp
arpl
mov
into
ds
scas
jae
and
adc
clc
push
jne
pop
out
cmp
dec
xor
or
push
push
mov
stos
adc
or
leave
lea
push
xchg
in
jbe
stc
mov
mov
mov
jo
and
add
fwait
shl
and
mov
pushf
xor
rorb
lcall
adc
incl
lea
add
add
mov
mov
js
ret
inc
pop
add
mov
add
mov
jmp
fwait
pop
outsl
adc
add
addr16
jbe
test
dec
insb
loop
fimuls
pop
test
out
dec
pop
jne
insb
lea
xor
shlb
mov
pushf
sub
std
sbb
subb
and
fbstp
insl
xor
sbb
sub
sahf
pop
scas
jnp
adc
cmp
mov
iret
dec
dec
nop
jne
push
mov
js
pop
mov
das
pop
out
out
arpl
mov
inc
loope
jmp
xchg
sahf
clc
loopne
xchg
cmp
popf
dec
rcr
cmp
xchg
mov
fucomi
xchg
jns
and
adc
dec
mov
mov
mov
push
pop
lock
push
aad
xchg
mov
in
sub
mov
rolb
adc
and
cmp
push
add
add
ret
lret
into
cwtl
aad
xchg
stc
xor
stos
push
mov
lds
outsl
pushf
std
sbb
xor
js
sub
jne
pop
enter
sub
push
adc
fstps
add
pop
clc
pusha
in
inc
js
lret
or
mov
fmull
pop
dec
and
mov
iret
mov
in
cmp
pop
sbb
jge
lcall
in
pusha
push
jne
scas
push
pop
or
mov
sub
mov
xchg
addl
in
enter
adc
or
jp
push
inc
rclb
mov
int3
aaa
lods
shrl
mov
adc
xchg
das
jge
pop
sub
xchg
sbb
mov
scas
int
cmp
loopne
jg
addl
shr
mov
adc
dec
xchg
and
daa
push
arpl
mov
pop
dec
in
sub
mov
repz
jp
dec
mov
hlt
inc
imul
shl
sbb
filds
xorl
addl
and
jmp
mov
aam
push
shll
int
xor
cmpsb
data16
inc
xlat
hlt
cli
loopne
ja
stos
push
sub
ret
fxch
jns
insb
repnz
lds
xchg
or
dec
fnstenv
jno
or
movsb
xchg
mov
ss
mov
and
push
sbb
mov
mov
data16
shl
adc
out
sbb
push
jge
adc
mov
roll
or
mov
test
or
movsl
in
xchg
xor
bound
xor
adcl
test
xchg
repz
and
test
add
test
outsb
pop
or
xchg
sbb
jnp
cmp
sub
iret
mov
mov
sub
arpl
cmp
inc
cld
sub
aaa
xchg
jno
xchg
jbe
mov
lea
ret
and
inc
lahf
lret
xor
cli
xlat
mov
and
mov
pop
das
xor
mov
sub
pop
dec
pop
inc
loop
test
dec
js
stc
add
jb
add
out
call
es
data16
mov
mov
rclb
test
adc
or
sub
dec
sbbb
add
movsl
mov
sbb
jno
pmaxub
in
sub
xchg
mov
aaa
mov
xor
or
cmp
jge
mov
xchg
xchg
rolb
aam
ljmp
mov
gs
sub
call
in
jne
std
xor
outsb
mov
mov
and
icebp
push
mov
mov
pop
and
test
out
push
mov
fs
jbe
jnp
clc
je
xchg
cld
inc
xor
mov
xor
in
and
icebp
xor
enter
enter
jns
inc
imul
rorl
mov
je
adc
les
jp
mov
xor
or
add
jnp
push
and
stc
xchg
jl
mov
add
daa
mov
xlat
mov
loop
mov
scas
sub
or
gs
test
add
outsl
lock
or
mov
sub
mov
and
add
ret
lcall
mov
pop
pop
jae
cwtl
and
sub
repnz
cmpsl
sub
jecxz
jmp
les
cmp
cmp
out
adc
fldl
adc
test
aaa
push
mov
insb
cwtl
xchg
ret
fwait
add
pop
in
or
idivb
push
les
pop
in
add
xor
or
jo
cmp
pushl
push
and
cmp
loope
subb
test
push
inc
lret
xor
into
hlt
out
cmp
mov
inc
faddl
adc
adc
lahf
mov
je
test
xor
rolb
jne
mov
push
xlat
inc
lds
pop
into
xor
unpckhps
pop
and
cs
popa
mov
jecxz
mov
rcrb
out
aad
pop
fwait
aam
sub
sti
lea
jp
jle
shr
addr16
dec
scas
loopne
and
dec
out
pop
dec
in
shlb
sub
xor
mov
loopne
pop
xchg
scas
in
icebp
jbe
inc
lret
scas
jno
add
sbb
cli
push
ret
mov
leave
in
cmp
cli
mov
jmp
in
ljmp
add
sbb
push
test
xchg
pop
sti
mov
push
cmp
xor
ss
test
mov
xchg
push
cmpsb
dec
arpl
fdivs
or
addb
sbb
xor
popf
test
add
add
ja
imulb
lea
and
fists
jecxz
loope
dec
and
mov
in
dec
xchg
jecxz
add
int3
lods
pop
xchg
hlt
cmpsl
dec
ret
sbb
mov
cmpxchg
xchg
cltd
cmp
push
test
outsl
sub
mov
mov
hlt
stos
push
xor
ja
add
add
or
sbb
mov
mov
mov
jge
scas
pop
cmp
rcll
rcll
mov
icebp
mov
scas
fs
sar
out
xchg
cmp
or
dec
mov
lds
out
sahf
test
fcoms
out
std
in
arpl
cld
ror
or
push
imull
lret
fcompl
push
mov
sub
lods
xchg
jle
push
loop
xlat
mov
stos
scas
adc
ret
add
cmp
ja
push
in
xor
fidivrs
mov
ret
rcr
mov
inc
jns
out
jbe
nop
xchg
or
ret
ficompl
aaa
jbe
dec
sbbl
sbb
pop
fnstcw
cld
sub
in
nop
mov
mov
rcrl
sub
fdivl
push
les
push
mov
subb
pop
sbb
je
out
je
in
dec
push
rorl
je
xchg
mov
mov
sbb
adc
das
cmp
xor
pop
mov
js
out
adc
sbb
dec
pop
lods
sbbl
out
pop
sub
int3
fcmovnu
xchg
pmullw
dec
pop
dec
frstor
or
movsl
insl
push
inc
xchg
xor
mov
dec
out
inc
les
mov
gs
add
das
push
test
cwtl
iret
mov
fbld
jb
dec
insl
mov
add
outsl
in
in
mov
and
and
mov
shlb
inc
mov
fcmovne
stos
push
push
dec
inc
movsl
xor
mov
dec
lcall
adcb
orb
int3
inc
push
xchg
mov
popl
jmp
pusha
dec
jg
repnz
scas
sub
fmuls
mov
jnp
ja
push
cmp
adc
fsubrl
adc
lea
lock
add
lock
push
adc
push
xor
cmp
dec
movsl
shlb
sub
jmp
xchg
dec
stos
mov
sub
adc
cmp
mov
int
lret
push
hlt
mov
mov
clc
cmp
mov
push
push
loope
pop
scas
mov
aad
idivb
fs
jb
stc
iret
adc
pop
incl
ss
mov
js
sbb
fcoms
mov
iret
ret
jmp
sub
ljmp
push
movsb
and
mov
or
pop
sbb
fcmove
notb
outsl
or
cli
adc
es
jecxz
aas
cmp
rcll
mov
cmpsb
pop
mov
aad
jg
or
int
push
scas
pop
mov
pop
test
and
imul
adc
inc
inc
sub
sbb
enter
lock
sub
lods
xor
push
or
or
add
sbb
fldl
jmp
push
aad
and
cmp
outsb
sbb
and
inc
adc
mov
pop
shll
sub
pushf
in
out
fdivrs
fsubr
leave
popa
test
cld
mov
data16
je
call
mov
mov
sbb
iret
jecxz
mov
jg
std
lods
je
jb
push
into
scas
int
add
cli
cmp
inc
popa
mov
jno
jb
loopne
daa
sbb
inc
inc
mov
xchg
stc
std
dec
and
jb
test
dec
leave
and
mov
mov
sub
mov
and
dec
testb
cwtl
daa
bndstx
pop
sub
inc
xchg
int
mov
das
lods
je
adc
mov
or
mov
xlat
in
jnp
cs
push
xchg
test
ss
jl
pop
jno
mov
dec
push
out
sbb
cltd
imul
add
sbb
andb
jmp
imul
mov
add
sahf
cmpsl
xor
xchg
lcall
test
push
repnz
add
mov
cltd
stos
and
popa
cmpsl
gs
loope
dec
outsl
or
sahf
jbe
sbb
adc
sarb
add
push
or
xor
out
mov
mov
mov
sbb
push
xor
pop
fnsave
pop
mov
pop
in
subl
ret
test
pop
aam
movhps
cld
cs
xor
push
push
int3
popf
idivl
cmpsl
icebp
scas
jae
jb
inc
fistps
pop
jne
out
pop
jmp
or
inc
ss
repz
fs
sahf
cmp
mov
hlt
in
aam
add
int3
cmpsb
adc
mov
imul
and
sbb
sbb
add
sub
lcall
call
add
jp
mov
push
mov
pop
adc
mov
mov
cmpsl
shll
add
or
shrl
sbbb
push
pmuludq
test
shll
data16
loop
imul
cmpsl
jnp
cs
loope
insl
rcr
outsb
push
loope
ljmp
mov
xor
dec
cltd
aad
mov
mov
push
sub
dec
in
xchg
sub
mov
outsb
or
sbb
push
mov
jmp
popa
leave
xchg
pop
push
cmp
push
movb
push
enter
ret
sub
pusha
iret
iret
movsb
loop
mov
push
pushf
xchg
mov
es
push
xor
cmp
ficomps
adc
sub
mov
adc
mov
jmp
iret
cmpsb
pop
idivl
cmc
push
mov
mov
in
into
dec
je
jbe
psubusw
sbbl
mov
cmp
popa
or
cmp
arpl
sbb
pop
test
jbe
jne
xchg
fdiv
push
pop
jge
inc
and
in
movb
shlb
insb
cmp
rcl
jg
xchg
dec
mov
iret
pop
mull
aad
enter
xchg
push
and
les
sahf
cmp
iret
mov
sbb
xor
jne
into
sub
mov
scas
jno
icebp
pop
add
daa
mov
mov
push
jo
loop
fistpl
cli
inc
push
sti
sbb
or
mov
mov
pop
mov
stos
jnp
sbb
mov
adc
in
outsl
xchg
fisttps
aad
push
pop
xlat
adc
hlt
sub
insl
lds
cmpsl
in
adc
push
aam
sub
jl
mov
cmp
out
push
sbb
das
or
pushf
xor
sbb
stc
mov
lret
cltd
dec
push
or
cmc
sbbb
xor
into
in
gs
outsb
ficoms
xchg
mov
out
movsb
incb
mov
adc
insl
dec
shrb
je
rorb
movswl
out
or
lret
cmp
adc
cmp
mov
les
mov
add
stos
test
inc
in
scas
movsl
pop
fcmovnu
jns
and
cltd
dec
cld
int
jo
lahf
adc
lods
in
call
sbb
clc
out
xor
sti
test
jmp
ret
and
mov
es
jnp
or
outsl
mov
sub
sub
arpl
inc
fstpl
adc
cmpsl
fsubrl
js
lock
and
add
mov
call
xor
mov
sbb
divb
stc
adc
aas
dec
stos
pop
imul
sub
push
stc
jg
cltd
sbb
stc
andl
add
adc
sub
pop
popa
jg
ret
push
push
mov
jecxz
push
cwtl
mov
push
lahf
sti
subl
lock
push
mov
mov
cmp
mov
adc
mov
pop
arpl
sarb
jl
push
cmp
xchg
sbb
test
xor
daa
push
subl
popl
cmc
imul
inc
ljmp
int
adc
mov
movsl
and
jmp
iret
sbb
push
pushf
add
ret
les
xchg
lods
mov
adc
pop
jb
popf
mov
inc
dec
in
push
adc
pusha
dec
movsb
or
mov
mov
mov
add
iret
cld
dec
rcrl
scas
lahf
mov
or
jno
je
cmp
dec
or
ret
sbb
outsb
idivb
sub
sar
mov
dec
fadd
pop
pushf
rclb
test
jo
cmc
dec
outsb
xor
lods
int3
mov
leave
mov
xchg
pop
push
dec
xor
xchg
adc
ret
sub
sub
rolb
aad
and
and
xchg
cmpsl
int3
xor
lods
mov
mov
mov
popa
mov
loopne
xchg
and
xor
cmp
rorb
mov
mov
scas
adc
mov
std
mov
add
jp
sub
adc
sarl
pop
dec
cmp
sub
inc
push
mov
lea
popa
or
popf
hlt
js
repnz
lret
push
orb
xchg
mov
cli
outsl
imul
dec
add
cwtl
inc
jge
mov
dec
inc
push
aam
fsub
xchg
lea
mov
dec
repnz
xor
imul
movsb
sub
dec
adc
js
sbb
push
ljmp
addb
pop
jecxz
hlt
roll
inc
xor
es
pushf
in
jp
enter
jae
sti
arpl
jb
loopne
xchg
push
ret
rcr
jl
jb
movsb
push
jecxz
cmp
aaa
movsb
jle
das
inc
mov
rcll
aas
and
push
sbb
fs
cmp
ljmp
xlat
push
fdivrl
sub
dec
or
inc
loopne
jg
lahf
mov
lods
enter
dec
ss
icebp
xchg
pop
dec
into
cld
pop
rcrl
cmp
inc
push
push
popf
sub
add
mov
cmp
cmp
xchg
mov
pop
aad
shlb
adc
pop
or
cmp
xchg
adc
bound
or
push
in
insl
repz
icebp
js
ds
in
pop
out
jb
popa
into
shll
add
pop
dec
scas
or
loope
adc
push
mov
push
call
into
adcb
bswap
mov
pop
add
ret
mov
dec
loop
stos
cwtl
fwait
mov
xor
cwtl
hlt
add
loope
jno
mov
push
xlat
cmp
rcll
aad
pop
cmp
or
out
andl
cmp
xchg
jo
in
mov
fs
rcrl
cmpsb
dec
popa
xor
jb
adc
ficoml
pop
aas
nop
mov
pop
adc
mov
push
dec
xor
lcall
or
das
inc
jo
adc
mov
adcb
sbb
test
or
mov
adc
cmp
xor
dec
out
xchg
adc
push
push
mov
add
sbb
gs
add
push
mov
sub
loop
xchg
lcall
dec
inc
sbb
sar
es
adc
mov
pushf
hlt
cmpsl
mov
js
lcallw
sbb
xchg
repz
bound
xor
xchg
in
mov
pop
mov
or
mov
and
and
mov
push
mov
mov
int3
mov
lret
jp
dec
mov
jmp
mov
repz
mov
add
pop
lods
cvtdq2ps
pop
out
xchg
out
dec
dec
mov
je
add
mov
pusha
adc
jb
fcoms
jnp
nop
pop
out
std
add
pop
push
xor
push
sub
dec
xchg
mov
out
lock
jecxz
call
mov
sub
lcall
loope
mov
inc
add
out
lods
jb
or
fs
in
lds
popf
orb
loop
idivl
dec
dec
and
iret
dec
addr16
loopne
insl
mov
ja
hlt
jge
ljmp
insl
cltd
mov
popf
push
hlt
daa
mov
lods
ljmp
and
jmp
jnp
cmpl
cli
es
lret
filds
test
scas
roll
fwait
or
push
rclb
ds
adc
loope
in
scas
jp
inc
enter
stc
in
jns
jmp
scas
ret
pop
or
xor
adc
jg
sub
std
adc
xchg
ffreep
cmp
in
or
pop
xchg
popf
or
ds
xchg
int
in
fisubrl
shll
mov
cli
scas
faddl
xchg
orb
pop
sub
das
sub
pusha
iret
lods
inc
cmp
popa
pop
fdivrl
sbb
or
movsl
and
xchg
sahf
outsb
jae
push
jl
mov
aam
push
inc
mov
sub
test
fstpl
lock
stos
sbb
or
sarl
pop
dec
mov
mov
sarb
mov
das
scas
negl
pop
movsl
cld
inc
xchg
stc
pop
lods
jnp
pop
add
jnp
and
sub
daa
ja,pt
and
push
or
call
jnp
nop
cmp
or
pop
and
cmp
loopne
adc
aam
pop
pop
xchg
mov
lds
outsb
push
cmpsl
jo
dec
mov
cmp
lahf
push
mov
divl
ss
movsl
jo
sbb
inc
cs
test
std
pop
ljmp
pop
pushf
in
data16
into
sbbl
and
test
repz
out
add
in
repz
add
mov
and
into
mov
ret
pop
xchg
pop
dec
fwait
push
push
enter
mov
cli
cmp
inc
fsubl
push
fwait
pop
pop
daa
or
incl
jbe
pop
adc
insb
popf
push
nop
add
fildll
jmp
inc
sbb
shl
push
add
xlat
ficompl
cmp
in
xor
movlps
cs
xor
inc
fsubl
and
test
scas
scas
mov
scas
inc
aaa
add
rcll
test
xor
xor
xor
lret
jns
push
pop
jae
stos
inc
fsts
popf
push
add
gs
dec
inc
xchg
ret
mov
pop
scas
inc
sub
outsl
es
mov
xor
inc
insb
cmp
ljmp
jbe
stc
aad
out
fdivrp
iret
ret
cmp
imul
cmp
sub
sbb
scas
xchg
add
adc
pop
inc
shr
push
arpl
faddl
lcall
orl
mov
pop
lcall
dec
cmpsl
sub
out
xor
lea
icebp
pop
lds
addl
sub
sub
jns
mov
imul
fisubl
dec
xor
or
scas
mov
loopne
es
sub
xchg
mov
mov
inc
xchg
add
rep
lock
mov
xchg
jno
pushf
cmp
or
pusha
scas
nop
movsb
into
pop
xchg
je
push
mov
adc
sti
push
cwtl
es
mov
pop
insl
ficompl
xlat
andb
shl
jne
push
imul
loop
adc
sub
clc
lcall
mov
sbb
sti
mov
xor
xorb
pop
js
adc
int
sbb
in
jae
sub
xor
fistl
mov
out
xchg
add
push
add
jl
shll
add
add
push
add
ret
cmp
mov
scas
sub
leave
stos
dec
fdivp
sbb
cmc
shrb
pop
jge
mov
ja
mov
imul
imul
fsubs
daa
roll
inc
repnz
inc
adc
mov
mov
mov
lcall
mov
loopne
xor
xchg
aad
cmp
sbb
cmp
xchg
pop
mov
pop
addr16
add
jle
jne
sub
ljmp
cmp
nop
stos
mov
test
leave
lret
call
sbbb
in
and
pop
mov
push
fisubl
daa
aas
lea
pop
repz
call
xlat
xchg
nop
jo
adc
leave
not
fisttps
pop
scas
jg
lcall
push
fistpll
adc
xlat
mov
dec
sbb
subl
and
xchg
mov
xor
xor
lret
jo
or
lock
pop
and
mov
jbe
sub
popa
test
rorl
and
sub
popa
arpl
mov
nop
adc
jno
xchg
lahf
push
je
inc
and
cmc
ret
clc
fsubp
in
inc
mov
add
mov
mov
add
fldcw
sbb
mov
cmc
into
dec
push
and
pop
inc
mov
repnz
jle
outsb
mov
es
sbb
pop
loope
pop
xchg
gs
inc
lret
cltd
xchg
leave
pop
push
rcrl
add
jge
push
push
push
sarb
cltd
in
jg
daa
sbb
add
insl
inc
inc
lods
sbb
hlt
pop
ds
jg
mov
or
or
mov
mov
dec
pushf
pusha
sub
sub
sti
test
mov
cmp
in
sbb
movsb
adc
es
push
inc
sbb
sbb
push
mov
call
add
fidivrl
scas
xor
stos
test
les
xor
popa
fdiv
jmp
xchg
test
mov
mov
add
dec
into
jnp
pushw
mov
fcompl
inc
test
in
inc
cltd
cltd
mov
inc
pop
in
test
inc
dec
push
mov
daa
js
lods
inc
push
cmc
pop
xchg
rclb
sbb
jbe
and
push
lods
dec
add
pop
and
push
test
stc
outsb
test
push
and
sti
lret
lahf
das
stos
mov
and
test
das
jbe
popa
sbb
cmpl
inc
push
push
jl
mov
subl
dec
xchg
and
mov
cwtl
loope
iret
stos
das
jb
adc
clc
cwtl
sbb
pushf
sub
or
sbb
cmp
mov
push
fdivrl
test
cld
pop
mov
xlat
ret
adc
pop
pop
jb
xchg
mov
ret
negb
cmc
lock
xchg
xchg
shll
pop
pusha
in
or
jle
jge
jno
loop
leave
xchg
adc
test
in
sbb
movsb
lods
dec
add
insb
das
hlt
xchg
push
in
rorl
mov
cs
lods
and
jg
mov
mov
jl
push
xchg
adc
js
insb
enter
adcl
pusha
into
inc
call
cmp
mov
pop
mov
xchg
mov
mov
adc
fs
pop
adc
je
mov
fistps
mov
repnz
sub
aam
xchg
mov
loopne
popa
je
jle
inc
repnz
js
mov
cltd
fildl
fstp
xor
adc
insb
fxch
mov
mov
inc
dec
inc
xor
cmpsl
mov
jo
pop
in
mov
cmpsb
adc
addb
mov
addr16
add
mov
cli
rcll
rcl
popa
inc
sti
xor
xchg
sahf
mov
jp
push
cmpsb
pop
mov
dec
xor
ret
divb
shrb
fisttps
and
sbb
and
sbb
add
sbb
pop
out
push
xchg
jle
in
xorl
push
cld
or
inc
repz
mov
mov
leave
out
pop
mov
leave
and
xchg
loop
pushf
call
push
sbb
loopne
arpl
jle
cltd
addl
movsl
outsl
cltd
pop
int
and
fiadds
jle
roll
cmpsb
movsl
push
test
sub
sbb
rclb
movsl
mov
mov
es
js
adcb
daa
mov
loopne
rorb
cmp
sub
in
clc
mov
mov
and
bound
push
mov
cltd
fldt
mov
push
sub
in
mov
out
xor
cltd
int3
addr16
adc
xor
test
lds
mov
inc
jne
inc
pop
xchg
out
lret
cmp
sbb
fsubp
or
inc
cmp
or
out
cmp
or
adc
nop
jge
bound
push
test
xor
jnp
mov
xor
ret
aad
pop
sbb
pop
stc
xor
shl
sahf
shlb
ficomps
bound
in
sahf
es
or
shr
ljmp
mov
ja
add
add
ds
push
or
enter
sbb
loopne
sub
push
and
stos
xor
mov
bswap
popf
pushf
je
mov
int
arpl
push
adc
cmp
jbe
jns
sbb
mov
mov
cmc
fisubs
cs
add
icebp
lds
fildl
jne
pop
mov
adc
aaa
shlb
lret
fbld
sarb
push
in
adc
mov
in
adc
adc
movsl
fcompl
jmp
mov
dec
sub
lahf
ret
rcrl
movsl
sti
pop
jo
fnsave
mov
cwtl
std
and
aam
insb
fstpl
fsts
roll
mov
sti
jne
jo
enter
popf
in
call
mov
aas
iret
sub
xor
or
fidivs
ss
pop
push
push
dec
cmp
ret
stc
lods
xchg
and
mov
jbe
mov
pop
xchg
mov
dec
and
fsubrs
xor
ds
and
es
push
test
clc
mov
subb
mov
repz
popf
xor
mov
sub
add
repnz
xchg
loope
in
dec
push
lock
int3
sbb
inc
cmpsl
lods
pop
xchg
leave
sti
movsb
lea
scas
dec
add
sbb
fstps
ret
cld
sbb
inc
mov
clc
in
loope
or
fistpll
add
imul
bndldx
and
test
cltd
je
div
dec
sbb
xchg
pop
aad
fs
xorl
mov
pop
sub
popa
jmp
cmc
enter
les
cwtl
cmp
aad
ret
and
stos
stos
popa
cli
dec
adc
jge
and
xor
push
mov
sub
push
ja
dec
shll
sbb
mov
jp
movlps
cli
push
test
sub
sub
lds
lahf
in
dec
mov
lods
andl
sub
out
inc
push
add
pop
pop
out
push
mov
push
mov
xor
divl
mov
insb
lea
xchg
stc
push
jmp
rep
stc
pop
sbb
insb
aam
outsl
aam
iret
mov
shrl
out
and
pusha
jp
movsl
xchg
outsl
out
sbb
mov
icebp
push
repz
cld
push
je
imul
mov
sub
mov
outsb
fmul
xorl
xchg
repnz
cmp
repnz
mov
add
dec
cltd
in
xor
and
ficomps
cmpsb
in
aam
cli
outsl
push
mov
pop
cmp
xchg
mov
aam
imul
repz
lock
push
stos
mov
jo
xchg
je
mov
pop
jl
add
push
mov
jmp
pusha
mov
adc
fdivl
stc
stos
sti
cmp
xchg
outsl
out
mov
inc
dec
inc
mov
pop
pop
ljmp
mov
std
mov
fimuls
clc
or
mov
pop
imul
out
mov
loopne
mov
lods
ds
cmp
pop
or
rcrl
popf
pusha
rorl
mov
in
dec
jg
frstor
in
pop
mov
lock
push
imul
push
roll
aas
out
adcl
fdivs
repnz
add
out
mov
jae
lds
lret
stos
push
inc
ret
mov
mov
xor
test
sub
inc
and
lret
into
cmp
clc
sub
dec
subb
mov
xchg
pop
fsubl
mov
adc
xor
gs
decb
dec
push
push
mov
iret
sbb
iret
jb
mov
cmpsl
mov
jle
cmp
mov
pop
adc
xchg
sbb
in
loopne
outsl
fidivl
in
cmp
mov
pop
lcall
add
mov
sub
sti
aad
xchg
movzbl
ljmp
add
loopne
insb
and
mov
fwait
lock
movsb
iret
into
out
setns
fistpl
push
ljmp
or
into
fsubs
sub
mov
pop
fwait
xchg
push
in
mov
or
mov
sbb
jmp
repnz
dec
cs
sub
scas
jl
out
sbb
std
sbb
mov
aam
mov
test
into
fcoms
and
inc
mov
sub
mov
mov
out
inc
daa
jg
imul
cmc
test
push
adc
xorb
popa
into
icebp
adc
or
adc
adc
mov
pushf
leave
lcall
out
repz
andl
out
push
sarl
jge,pt
mov
cmp
push
jo
mov
scas
mov
fmull
stc
test
and
jecxz
cmp
xchg
rolb
shlb
lock
aas
sub
mov
dec
pop
frstor
ljmp
fstps
sbb
sarb
leave
pop
cmp
inc
xor
mov
pusha
aam
pop
data16
xchg
adc
mov
hlt
std
jg
and
in
cmp
cmp
loop
cmc
adc
inc
addr16
cmp
test
clc
adc
les
dec
mov
mov
gs
lods
movsl
addr16
jge
push
mov
jb
int3
aad
add
loope
cmc
mov
ss
sti
xor
scas
in
push
push
add
jle
test
clc
mov
std
jne
push
mov
adc
cmp
mov
adc
mov
xchg
inc
push
insb
sbb
mov
sub
inc
cmpl
lahf
xor
add
push
sub
dec
mov
pop
push
int
pushf
sub
cmpsb
pop
in
mov
add
sbb
dec
enter
pusha
rol
dec
adc
sub
lock
xchg
cli
in
dec
je
xchg
pop
jo
lcall
cmp
adc
cmpsb
lret
pop
loopne
lea
mov
and
inc
cmp
fldt
or
jg
sub
rclb
and
fldcw
cmpsb
push
repnz
das
pop
xchg
fs
lock
lds
add
iret
push
add
mov
test
out
shlb
inc
mov
sub
insl
xor
xchg
clc
pop
aad
inc
jp
popf
pop
lret
sub
mov
cmp
sub
fimuls
in
add
in
imul
sub
or
int3
inc
mov
inc
sub
push
push
cwtl
dec
cmpsl
lock
pop
adc
mov
in
outsb
dec
call
mov
inc
fxtract
xor
lods
mov
pop
and
push
sub
xchg
xchg
mov
call
cmp
dec
push
les
ja
shrl
jle
arpl
les
push
mov
je
scas
mov
sbb
and
fcos
pop
adcb
sub
aas
int3
add
add
inc
dec
cltd
xchg
xchg
mov
xchg
sub
clc
arpl
das
fcomps
into
cmp
adc
mov
adc
mov
leave
mov
pop
xor
leave
or
push
fsubrl
mov
push
int
scas
test
repnz
repnz
scas
jo
pop
jns
lds
rcl
adc
adc
xor
lcall
sub
sub
in
cmp
lahf
aam
mov
mov
cmp
mov
shll
sbbb
ljmp
out
imul
sti
mov
pop
push
push
pop
out
dec
aam
xchg
sub
insb
out
lods
pop
cli
mov
dec
fwait
fs
ret
add
sub
jns
sbb
bound
pop
shlb
inc
or
pop
test
test
adc
adc
std
inc
jl
mov
dec
xchg
xor
nop
clc
cs
adc
enter
aas
fcmovbe
movsl
xlat
inc
jnp
mov
mov
and
ret
pushf
xchg
hlt
lahf
mov
push
fs
leave
mov
adc
sub
mov
inc
sub
xchg
push
cmpsb
mov
fwait
mov
add
xchg
cmpsb
icebp
sub
out
test
cmp
or
out
aaa
sarb
sub
cmp
clc
aad
es
cmp
in
adc
or
nop
je
stos
ljmp
fsubr
mov
pop
adc
idivl
pushf
filds
xchg
xchg
test
or
stc
lods
bound
testb
lods
xlat
inc
dec
mov
ljmp
jle
cld
sbb
into
jae
jno
movsb
sub
sbb
ja
enter
xor
jecxz
aaa
roll
je
inc
push
aad
sub
xchg
and
inc
pop
mov
or
xchg
sub
or
xchg
addr16
jne
jno
pop
lcall
lds
in
mov
and
shll
sbb
and
pop
mov
arpl
and
adc
pop
jo
xchg
test
mov
das
jb
js
es
xor
lret
int3
sbb
sub
xchg
imul
stos
adc
jns
lea
cmp
std
adc
icebp
fdivrs
sysenter
add
mov
sbb
cmpsb
xor
sbb
inc
add
shlb
call
andb
sub
std
mov
mov
cld
pop
outsl
pop
mov
sub
jbe
pop
push
xor
lret
hlt
in
dec
xlat
cmc
mov
das
pusha
mov
jp
xchg
lea
mov
lods
pop
shll
cmpsl
outsl
call
insl
add
and
jp
fiadds
std
sub
push
xchg
and
cltd
add
dec
push
lret
cmpsl
ja
mov
popf
sub
into
mov
pop
jns
push
je
int
xor
data16
out
outsb
movsl
and
jl
add
or
or
jnp
sub
inc
xchg
xlat
and
xor
iret
clc
std
push
cmpsb
pop
loop
dec
test
test
or
xor
sub
xchg
hlt
stos
cmp
pop
sub
cltd
mov
xor
lds
inc
mov
mov
jbe
push
scas
pushf
ret
addb
inc
push
cmp
test
shll
pop
pop
std
stos
adc
js
scas
push
mov
cmpsb
adc
ljmp
dec
icebp
xchg
gs
xor
push
dec
adc
sbb
jo
mov
shll
xchg
lret
cmp
rcll
jp
mov
jns
jg
daa
mov
sahf
and
hlt
xor
pop
cmpl
sub
sbbl
dec
in
orb
sbb
xchg
push
and
dec
ljmp
sti
inc
hlt
pop
jno
cmp
dec
loopne
icebp
popa
test
scas
dec
sahf
fcomip
addb
mov
loope
pop
cli
pop
out
cmpsb
aaa
clc
mov
pushf
popa
add
dec
mov
mov
push
push
dec
jne
cmpsl
imul
inc
scas
std
inc
adc
mov
lds
mov
adc
mov
js
outsl
mov
leave
loop
add
js
sub
push
pushf
mov
mov
rol
xchg
xor
dec
and
mov
and
mov
adc
icebp
add
dec
mov
jp
aaa
fdivp
cs
outsb
sbb
loope
xor
in
lock
and
push
nop
gs
jmp
jae
out
push
mov
adc
xor
xchg
and
cwtl
lahf
ss
push
ss
adc
cwtl
stos
roll
pop
lret
jno
nop
mov
dec
xchg
sub
lret
aas
bound
or
mov
dec
jb
jo
ret
fmulp
jno
inc
pop
ss
repnz
adc
fisubl
movsb
in
cli
sub
ljmp
mov
jns
jbe
mov
outsl
je
rolb
xchg
mov
shll
out
rclb
cld
or
hlt
jl,pn
sarb
jo
ret
pusha
dec
pusha
arpl
rol
sti
insb
dec
lea
push
sti
shl
out
jmp
pop
pop
imul
sub
test
inc
pop
dec
or
bound
sti
loope
mov
fdivl
jmp
aas
shr
outsb
xchg
jmp
stc
mov
mov
mov
mov
jno
xor
xlat
pop
pop
lcall
fsub
ret
in
pop
dec
out
cmc
push
xchg
xor
jno
mov
add
and
imul
cs
push
mov
mov
or
jge
jp
xor
jmp
mov
stos
mov
sbb
orl
fidivrl
add
jnp
pop
mov
lea
mov
mul
sahf
xchg
mov
push
push
inc
mov
gs
xor
jmp
ljmp
mov
mov
popf
call
loope
fbstp
xchg
push
hlt
in
add
xchg
pop
sbb
lods
les
inc
push
nop
mov
dec
test
mov
cs
jae
ds
mov
inc
mov
arpl
fistpll
aas
add
xchg
jno
xchg
stc
or
je
cmp
pop
in
and
pop
pop
pop
xlat
and
movsl
xchg
out
jne
test
imul
cmp
arpl
push
xor
inc
aas
push
aad
fwait
jmp
sbb
and
repz
into
push
cmp
jg
out
cltd
rcrl
ja
fildl
lcall
sti
inc
cmc
pop
add
call
mov
dec
jae
push
das
inc
add
out
dec
inc
push
dec
push
clc
dec
mov
jbe
popf
xlat
movsb
rcr
or
cmp
push
std
leave
movsb
bound
or
xor
xchg
in
dec
mov
xchg
cmpsl
add
push
sbb
xchg
ljmp
ds
mov
mov
push
xchg
movsl
sar
sub
movsb
jecxz
xchg
scas
in
fstl
mov
xor
adc
daa
js
ficoms
pop
test
ss
mov
loop
jmp
cld
inc
fcompl
cli
jp
jg
je
pop
sub
test
arpl
mov
sub
stos
or
pop
push
ds
jmp
fdivr
cmp
in
lret
dec
ljmp
stc
add
scas
add
jmp
movsl
mov
push
ja
out
or
sbb
cli
sbb
roll
xor
in
lods
xlat
ficomps
loopne
push
mov
adc
push
dec
les
enter
mov
jmp
mov
or
jp
sti
repz
inc
dec
loope
movsl
mov
icebp
jbe
xchg
popa
sbb
lcall
sbb
std
inc
test
stc
fwait
das
stc
ljmp
mov
xor
mov
ret
xchg
out
sbb
jg
scas
jmp
out
lahf
jecxz
and
mov
adc
mov
adc
inc
mov
or
orl
je
hlt
negb
xchg
mov
mov
mov
mov
lods
pop
push
push
xchg
jbe
add
fnstenv
mov
and
mov
jae
nop
repz
aas
xchg
loop
pushf
lock
movsl
ficomps
xchg
pop
cmp
sahf
xor
mov
loop
add
sbb
xchg
fs
pop
pop
mov
push
pushf
jae
adc
dec
add
ret
punpckhdq
fcmovne
pop
movswl
sbb
ss
ljmp
xchg
mov
adc
pop
iret
xor
xchg
xor
push
push
dec
and
mov
xlat
xchg
in
push
jge
sbb
jae
mov
ds
or
or
lods
cmp
adc
add
inc
and
sti
lea
sub
mov
loope
lods
sti
mov
in
xor
dec
pop
ret
pop
or
ficoml
fs
ja
mov
cmp
repz
test
data16
lcall
dec
es
xchg
movsb
xchg
pop
push
dec
shll
fs
dec
test
xor
add
cmc
push
mov
stos
outsl
rorl
xor
xchg
inc
test
jb,pt
add
test
inc
jbe
fildl
pop
push
mov
cli
mov
sub
cmp
scas
subl
fnstenv
mov
lock
lcall
push
mov
jmp
add
adc
jle
adc
lret
push
and
push
add
add
and
xchg
jno
clc
sub
xor
cld
fs
pop
xchg
mov
jg
dec
test
push
cmp
imul
lds
in
mov
adc
pusha
mov
sbb
lcall
mov
push
pop
aas
mov
jle
test
test
cmp
push
stos
mov
lcall
loopne
fdivrl
roll
adc
add
or
fsubrl
add
sahf
scas
jb
shll
add
inc
mov
inc
add
sahf
add
lock
and
cmpsb
sbb
push
cwtl
lahf
mov
jo
inc
sub
jl
jno
pusha
and
inc
mov
sbb
pop
mov
push
cs
les
sbb
add
cmp
or
test
sub
jecxz
mov
push
cmp
xlat
mov
cmp
push
lods
mov
test
out
movsl
icebp
and
adc
cmp
mov
icebp
lret
cwtl
mov
icebp
int3
out
xchg
lods
mov
rorb
and
pushf
mulb
in
jmp
ficomps
pushf
flds
xchg
out
dec
mov
sub
adc
mov
mov
out
fsubl
bnd
icebp
sub
and
neg
mov
pop
pop
push
inc
mov
mov
ss
call
cs
push
add
lahf
jl
and
adc
sbb
movsl
pop
inc
xchg
adc
clc
cmc
insb
repnz
mov
or
mov
mov
sbb
int
rcll
fnstsw
outsl
and
mov
addr16
cmpsb
imulb
negb
add
jge
cs
in
sbb
push
stos
addr16
pushf
test
mov
lock
push
mov
xchg
clc
pop
push
xchg
mov
repz
xchg
push
pop
push
xor
cmpsl
adc
shlb
fmuls
push
cmc
les
es
mov
test
or
push
add
adc
mov
inc
pop
bound
hlt
xchg
popa
cmp
mov
in
das
xor
push
loope
in
or
std
xorb
aam
fwait
cmc
fwait
sbb
lds
stc
int
leave
mov
pop
test
mov
jo
pop
cmp
xchg
adc
add
inc
xchg
stos
inc
out
imul
pop
popf
movsl
aas
mov
add
fildll
adc
in
dec
add
mov
xchg
iret
ljmp
or
fisttps
mov
xchg
push
mov
lea
pusha
cmp
inc
test
ret
stc
push
dec
mov
cmc
dec
movsl
and
in
or
or
adc
shlb
push
leave
mov
lods
pushf
mov
inc
jne
and
mov
lock
leave
and
inc
movb
loopne
mov
fdivrs
dec
adc
push
movsl
cmpsl
inc
mov
sti
test
dec
jle
test
pop
xchg
mov
add
vcvttss2si
xor
out
pop
mov
ffreep
pop
out
xorb
xor
loopne
jo
loopne,pn
sbb
dec
adc
cmpsl
adc
mov
test
dec
mov
lret
nop
cmp
or
shlb
xchg
mov
push
repz
lea
xchg
mov
leave
push
inc
mov
repz
pop
jae
mov
mov
rcr
jns
out
adc
scas
inc
mov
aad
cmpsb
rcrl
adc
rclb
stos
dec
out
xchg
inc
or
outsb
out
xor
nop
pop
xchg
cmp
dec
pop
in
enter
test
mov
xor
mov
push
inc
add
ror
xor
mov
test
mov
jo
mov
or
insl
pop
lahf
aad
sti
cmp
sti
clc
dec
imul
xchg
and
or
xor
leave
dec
test
push
daa
push
jo
sbbb
lea
in
mov
test
xchg
js
loopne
fimuls
popf
add
insl
pop
jg
mov
test
and
nop
mov
aas
xchg
push
pop
cmpsb
cmp
mov
adc
std
xchg
nop
pop
xor
push
aas
push
ljmp
insl
mov
arpl
dec
je
mov
mov
mov
pop
or
stos
fwait
mov
xchg
sub
mov
add
inc
lcall
and
cmpsl
shll
dec
jmp
mov
fcoml
pushf
inc
mov
out
sub
dec
xchg
shl
ficomps
stos
je
cmp
in
in
popf
pop
popf
fsts
mov
inc
push
xchg
inc
jl
aam
mov
mov
pop
pop
popf
pop
and
shl
rorl
mov
dec
dec
mov
ret
jge
jp
add
cld
sbb
inc
daa
sahf
fwait
xor
sarl
jne
xlat
pop
or
xlat
mov
adc
jecxz
adc
les
pop
pop
pusha
fisubl
sub
mov
and
sub
push
cmp
pusha
cltd
or
cmp
pop
cmovb
adc
cmp
cmpsl
mov
les
inc
mov
mov
xchg
lds
popf
fs
xchg
pop
lds
repnz
mul
xchg
iret
xor
rcrl
lcall
mov
sub
adc
ss
int
dec
add
cmp
cli
add
les
cltd
xchg
cli
xor
sub
rolb
xorb
mov
inc
iret
jge
ret
pop
jmp
sbb
shrl
xchg
aaa
mov
frstor
aad
xor
add
dec
and
gs
adc
mov
mov
xchg
pop
sbb
fdivrs
mov
pop
ss
fldcw
je
pusha
test
dec
add
jb
ds
fwait
popf
mov
out
mov
aad
repz
test
sub
stos
mov
std
inc
ret
sahf
sub
sbb
xchg
add
push
lret
adc
loopne
sti
jp
cli
int
imul
pop
ret
or
cs
jno
hlt
sti
icebp
push
rclb
fsubs
out
push
mov
addl
jmp
xchg
arpl
pop
or
fsubrs
jecxz
inc
or
shlb
sub
jb
cmp
add
mov
jg
sub
sti
popf
orl
test
stos
sub
push
fsubr
mov
push
loope
mov
aaa
sub
aad
clc
fs
mov
cmp
mov
cmp
js
push
adc
enter
test
mov
mov
adc
inc
insb
xchg
fdivp
add
pop
imul
aam
pushf
mov
out
xchg
xorl
stos
ret
arpl
cmpsl
out
push
fstpt
mov
into
imul
mov
repnz
cs
jns
outsl
imul
pushf
add
mov
stos
push
add
notl
mov
dec
and
push
fdivp
dec
inc
ja
xlat
aaa
maxps
add
mov
int
dec
xchg
pop
lods
mov
inc
hlt
jle
mov
and
push
pop
dec
fldcw
sbb
jne
rolb
pop
cmp
and
add
pop
sbb
or
xchg
push
push
adc
lods
mov
les
mulb
repnz
subl
mov
repz
push
sub
adc
push
mov
das
sub
mov
inc
sub
es
adc
jmp
sbb
test
push
push
add
xlat
xchg
mov
add
pop
aad
insl
call
add
jb
mov
cltd
push
inc
ds
mov
out
insl
daa
out
fisubrl
inc
and
pop
cmp
pop
mov
out
fwait
loop
mov
fidivl
pop
rolb
adc
jb
adc
jle
sbb
xchg
mov
pop
xchg
mov
dec
mov
mov
aaa
fisubrs
pop
lret
mov
xchg
imul
jae
push
jg
cmp
daa
add
out
cmpsb
ret
jbe
sub
cltd
lcall
in
mov
add
xor
xchg
inc
cld
adc
je
cmc
fs
adc
into
stos
cmp
loope
inc
loope
cmp
pop
popf
mov
in
push
or
scas
ds
pop
jge
or
cwtl
ss
lea
lds
lahf
push
sahf
jge
pop
mov
and
inc
jae
fs
cwtl
in
cmc
cmp
sbb
arpl
testl
aad
shrd
push
xchg
push
pop
jp
fiaddl
mov
out
pop
daa
push
push
jbe
pop
scas
inc
mov
fidivl
push
pop
xchg
cmpsb
jle
call
addb
int3
cmpsl
aam
arpl
or
pop
leave
clc
inc
add
fst
xchg
rorb
pop
lahf
hlt
sub
imul
jns
xor
pusha
bound
imul
test
int3
cmpsb
add
mov
xor
mov
fisttpl
nop
inc
inc
jl
pusha
jae
int
xchg
inc
pop
push
xor
and
lahf
mov
cmp
xchg
stos
in
or
rorb
shlb
cwtl
pop
aam
in
stc
sub
mov
xor
fdivrs
jmp
data16
mov
cmpsl
loopne
out
or
pop
jnp
fbld
aam
dec
and
mov
cmpl
aam
arpl
inc
sub
mov
dec
loopne
xchg
jbe
push
dec
repnz
adc
xchg
pop
adc
push
push
cli
icebp
sub
or
leave
add
cmp
mov
jecxz
bound
dec
push
ljmp
jne
sahf
fdivp
mov
mov
pop
movsb
adc
sbb
jo
and
aaa
scas
stc
cmpl
cld
mov
or
mov
jmp
xchg
call
xlat
ret
xchg
sub
sbb
mov
mov
sbb
inc
sahf
mov
fs
mov
loopne
mov
xor
adc
sbb
in
and
int3
or
push
jp
jl
out
std
jl
fildll
jge
stos
and
sti
icebp
lods
fiadds
sub
lret
push
pop
mov
adc
add
inc
dec
cmp
jb
mov
push
mov
into
or
dec
lahf
adc
inc
and
mov
push
xlat
mov
loope
adc
scas
pop
mov
int
pop
pop
notl
jg
ds
xchg
or
fidivl
mov
ret
stos
dec
sub
scas
pop
and
mov
pop
or
sbb
push
pop
push
dec
cltd
insb
loopne
mov
dec
fcoms
xor
add
out
push
mul
cmp
pop
mov
ret
sbb
jmp
push
fsin
into
mov
cs
jb
repnz
popf
test
stos
mov
std
push
mov
inc
pop
in
adcl
or
jae
push
addr16
dec
dec
xor
mov
mov
or
cs
mov
inc
cmp
das
dec
dec
xchg
mov
shlb
cmpsb
adc
pop
mov
sub
pop
jb
add
jbe
dec
dec
or
pop
stos
jmp
jecxz
insb
je
push
aas
xchg
pop
cmp
mov
lcall
dec
in
push
mov
push
rcrl
jecxz
ret
push
sub
outsb
xor
sbb
adc
xchg
cld
and
out
cs
adc
mov
es
and
lock
pop
inc
mov
or
bound
icebp
scas
sar
add
sub
and
mov
shr
xor
mov
add
sbb
inc
jge
inc
jnp
sbb
ret
stos
idivl
sbb
in
jmp
fstps
aas
cmpsl
les
dec
push
ret
push
es
out
aam
repz
or
push
stc
data16
pop
enter
je
cmp
cld
pop
pop
mov
in
sbb
jmp
pop
into
cwtl
popa
push
pop
out
mov
and
mov
cs
lahf
repnz
test
je
jle
repz
es
and
rorb
sahf
add
mov
jae
repnz
add
lret
pop
mov
stos
mov
loop
pop
js
mov
aaa
xchg
cmp
scas
mov
push
push
add
xor
pushf
lcall
lods
lock
aas
push
pop
cmp
test
cmpsb
cmp
push
pop
push
and
popa
mov
aad
inc
pminub
xor
adc
dec
inc
or
xchg
inc
jne
push
and
xchg
int3
andl
dec
lds
pop
or
xor
adc
nop
out
les
cmpsl
cmp
inc
mov
push
pushf
in
jb
xor
push
loopne
or
sahf
pop
jne
jns
out
dec
inc
mov
pop
loopne
sahf
punpcklbw
dec
fcomps
loop
ds
mov
es
dec
adc
std
je
pushf
pop
and
fnsave
dec
or
jnp
insb
xor
mov
aaa
out
roll
rolb
or
cmpsl
sbbl
test
imul
rol
push
enter
insb
in
push
mov
push
lcall
movsl
jbe
jb
mov
dec
sub
popf
and
dec
push
jg
push
and
std
push
nop
or
sub
mov
inc
sub
out
adc
dec
push
std
cmpsb
aas
mov
xor
pop
xchg
cmpsb
lods
xor
test
fmul
and
adc
lds
nop
sbb
icebp
pop
clc
lds
lea
mov
imul
jl
push
xchg
jmp
dec
sahf
test
stos
cmp
pop
push
cld
movntq
out
cmp
hlt
into
leave
or
jbe
imul
ret
cwtl
xor
test
ret
jmp
movsb
dec
scas
fcoms
loop
mov
push
mov
jl
jle
mov
data16
pop
cwtl
mov
ret
fistpll
cmp
mov
adc
mov
adc
dec
shll
popf
scas
and
mov
test
or
cmc
mov
enter
fsubs
mov
fdivr
sbb
mov
cmp
stc
push
sub
sbb
aad
jnp
mov
not
incl
xchg
repz
sbb
pop
mov
lods
inc
loopne
and
jno
dec
cmp
dec
fildl
fwait
pop
movsb
xchg
dec
xchg
les
cmp
repnz
push
inc
mov
sahf
shll
movsb
ret
mov
jmp
jge
and
mov
fstl
add
xchg
rclb
cmpsl
push
sbb
push
sbb
mov
and
push
sbb
pop
out
sbb
jo
jnp
sbb
cmp
and
sti
pop
push
paddw
negl
cmp
mov
mov
lcall
add
sub
dec
vmread
loopne
or
dec
mov
incb
lret
or
test
iret
add
mov
ljmp
cmp
daa
dec
cmp
lret
out
jb
add
shlb
pop
adc
add
mov
ljmp
jb
lcall
clc
mov
dec
push
idivb
dec
push
outsl
mov
pop
xor
mov
loopne
jmp
repnz
aad
test
push
xchg
mov
shrb
adc
cmp
mov
iret
int
inc
mov
mov
mov
rcrb
ljmp
pushl
pop
or
sub
adc
or
xchg
mov
scas
mov
cmp
dec
cwtl
jge
xor
mov
fwait
push
leave
pop
arpl
ret
sarb
and
cwtl
inc
cltd
add
imulb
inc
xchg
hlt
pop
jnp
adc
mov
cld
lret
push
xor
xor
xor
mov
js
cs
cmp
jns
inc
pop
adc
sbb
in
iret
add
mov
xchg
cld
xchg
insb
pop
and
sbb
scas
test
addr16
bnd
ror
std
push
js
xchg
mov
cwtl
movsl
push
lock
repnz
pop
xor
add
jo
xor
lret
add
sbb
in
fldt
ds
stc
sahf
jb
subl
add
data16
popf
dec
loope
mov
cmp
sbb
loope
cmpl
push
xor
ret
fsub
or
popa
dec
cmpsl
cmp
rcl
mov
pusha
sub
andb
xlat
pop
push
lahf
imull
fs
pop
sbb
cmpsb
dec
adc
imul
fwait
and
mov
inc
les
inc
inc
mov
mov
xor
insl
push
push
insl
xchg
xchg
lea
mov
cmp
sub
mov
jbe
decb
add
sbb
gs
pop
outsb
mov
sbb
xchg
sbb
pop
mov
add
call
lret
cmp
out
pop
sbb
lahf
pop
sarb
addr16
pop
das
inc
mov
or
and
adc
jmp
and
daa
cmpsl
or
push
mov
xor
in
addl
xor
test
in
das
fucomip
lock
dec
cmpsb
push
lea
mov
sub
push
xor
ja
sbb
btc
xchg
xchg
lods
pop
cmp
ds
andb
add
out
inc
aaa
fs
dec
xchg
adc
xchg
ret
or
inc
cs
jge
lahf
dec
sub
lods
dec
mov
dec
mov
mov
inc
daa
lods
rcrb
jae
fdivrl
dec
test
stc
leave
test
rol
xchg
sub
cmpsb
std
cwtl
push
lea
dec
lods
test
int
mov
dec
sub
int
xchg
inc
xchg
icebp
dec
mov
pop
dec
or
inc
ljmp
sub
je
enter
cmpsb
lret
lahf
pop
jb
cld
cmp
nop
ret
mov
lahf
out
pop
jmp
mov
dec
pushf
cld
push
mov
mov
pop
and
lods
es
shlb
xor
sbb
gs
jle
pusha
mov
test
out
inc
in
and
sub
or
ss
add
lods
mov
add
jle
cmp
mov
add
adc
add
mov
into
mov
add
movsb
imul
cwtl
pop
daa
subl
jle
cmp
int3
push
jns
inc
incb
mov
sbb
scas
cli
hlt
mov
push
xchg
inc
lret
mov
xchg
scas
dec
fsubr
mov
mov
shr
hlt
mov
xchg
out
cmp
push
xchg
cmc
mov
push
lock
loop
and
cmp
cmp
sbb
mov
cmp
ja
lock
dec
mov
test
xor
jp
dec
ss
jo
imul
push
outsb
inc
leave
mov
dec
rcr
inc
test
pop
nop
in
lret
imul
mov
inc
sbb
popa
and
loope
adc
adc
js
test
je
add
loop
and
xorl
int3
icebp
or
loopne
je
dec
test
mov
jmp
mov
adc
jbe
rcrl
fcmovb
int3
out
and
jle
stos
or
adc
scas
addr16
adc
shrb
inc
imulb
mov
xor
mov
adc
iret
loop
and
xor
cmc
outsl
lods
mov
push
outsl
andb
add
cmpl
sbb
out
cmpsb
ljmp
sbb
loopne
jge
inc
rolb
ds
mov
bound
fwait
pop
mov
movsl
ret
mov
dec
add
gs
jecxz
mov
mov
mov
mov
ljmp
cwtl
out
adc
sbb
cmpsl
xchg
adcl
fildl
icebp
es
push
push
out
test
daa
hlt
push
ret
in
mov
loope
and
jg
or
dec
loope
adcb
dec
jb
and
mov
mov
movsb
mov
fcoml
inc
das
fldenv
xchg
out
jae
mov
push
adc
cltd
and
es
xchg
addl
pop
add
lds
mov
push
mov
adc
cmpsb
sub
imul
cmp
and
xchg
arpl
pop
adc
in
push
adc
push
jmp
insb
out
clc
or
filds
lret
xor
ret
mov
dec
ret
imul
in
mov
scas
dec
mov
es
mov
cli
sub
shlb
or
sarb
and
outsb
ret
imul
add
add
mov
lods
mov
fwait
movsb
push
lret
enter
mov
and
mov
add
xchg
or
cmp
jnp
pop
dec
mov
insl
and
addr16
fwait
shr
outsl
push
mov
mov
jmp
pop
enter
stos
mov
xchg
sub
sti
jo
xor
pop
mov
std
aam
xchg
pcmpeqw
bound
sbb
sub
pop
addr16
das
dec
xor
js
int
sub
dec
add
xor
ss
stos
sahf
outsl
push
pop
xorb
std
notl
sbb
fadds
mov
lcall
fsubl
xchg
test
pop
cmp
or
xor
jg
shlb
cld
pop
xchg
mov
fwait
aaa
or
insb
sti
std
insb
xor
inc
xor
or
mov
shrb
mov
call
xchg
xor
and
fadd
insl
mov
repnz
scas
movl
scas
gs
inc
pop
fdivs
cltd
mov
test
ljmp
sahf
jmp
inc
push
rcl
icebp
mov
je
test
iret
or
or
outsb
shl
fnstenv
pop
mov
in
cmp
push
test
in
mov
push
mov
cmp
scas
jns
jl
punpcklbw
push
add
inc
sbb
hlt
xchg
jg
mov
sbb
sub
sub
mov
xor
inc
mov
mov
jo
or
inc
imul
mov
dec
rorb
xchg
insl
iret
pop
movsb
scas
cmp
mov
add
sub
jnp
fidivrl
je
ret
or
xchg
push
nop
push
imul
ret
and
adc
adc
stos
mov
mov
xor
cli
idiv
hlt
ret
pop
mov
inc
in
loop
shrb
pop
outsl
sbb
imul
testb
mov
pop
mov
adc
dec
push
mov
and
stos
in
ja
dec
jecxz
sub
nop
add
xchg
test
inc
clc
xchg
inc
daa
pop
cltd
or
sti
fnsave
filds
xchg
add
push
in
in
dec
jmp
mov
dec
stos
int
jecxz
or
daa
in
repz
fwait
inc
sub
xor
push
mov
fisttps
sub
int
out
mov
jg
xor
scas
rcrb
jg
ds
pminub
rorb
repnz
int3
jge
les
inc
mov
and
mov
negb
aaa
jns
std
add
pop
setnp
xchg
mov
xchg
rcrl
push
add
pushf
scas
sbb
cmpsb
adc
sub
shrl
mov
lea
cmp
cltd
andl
mov
jo
xchg
in
jne
std
lret
mov
sti
das
iret
aam
xchg
inc
mov
push
popl
cmp
outsb
mov
addb
add
incb
insb
sub
xor
bnd
lds
sbb
fadds
mov
ret
adc
mov
dec
add
jle
std
mov
cli
inc
add
pusha
xchg
mov
sub
bound
xchg
mov
push
pop
test
mov
push
iret
sbb
sahf
cmp
stc
push
mov
sub
dec
mov
into
mov
push
orl
xlat
test
cmp
mov
lahf
in
inc
addr16
pop
int3
pop
fldt
mov
sbb
loope
and
lock
mov
mov
stc
shrb
fimuls
hlt
popa
je
ror
cmp
inc
push
fisubl
inc
frstor
xor
in
jecxz
sub
sub
xchg
test
hlt
jae
or
inc
adc
rorb
jmp
loopne
xor
sbb
fiaddl
pop
lods
jo
cmp
lahf
jg
hlt
iret
into
inc
jb
fldt
icebp
lods
fistps
lret
jno
xor
leave
push
sbb
sbb
setae
popf
stos
adc
jo
sub
push
xchg
lret
test
lods
scas
sub
sbb
enter
xor
subb
mov
arpl
data16
lret
leave
test
lods
fs
mov
out
lret
pop
xchg
out
or
cltd
inc
mov
cmp
xorw
adc
repz
mov
loope
mov
adc
das
mov
movsb
adc
mov
jb
cmp
es
lret
cmpsb
inc
or
pop
or
inc
dec
mov
adc
out
scas
rcr
adc
lods
xchg
nop
push
jne
pushf
fwait
lock
cmpsl
pop
out
mov
adc
cwtl
orl
mov
cmc
movsb
cmp
cmp
jl
insb
repz
cmp
lret
out
aad
and
fcompl
xchg
popa
sbb
sbb
rolb
push
adc
inc
mov
mov
rcrb
inc
or
sarl
mov
fidivrl
add
jb
sahf
jg
xor
iret
dec
sub
into
mov
xor
mov
inc
ljmpw
subb
push
fcomps
or
pop
jae
fadds
jns
movsb
enter
pushl
xor
jecxz
xchg
mov
mov
pushl
js
sbb
add
pop
push
popf
pop
repz
and
xchg
mov
ss
les
push
xor
and
rcrb
xor
rcr
aad
mov
add
sahf
mov
test
jbe
loopne
push
mov
bound
xor
hlt
es
mov
leave
mov
lahf
push
push
inc
mov
xchg
lret
arpl
imul
xlat
or
jle
push
inc
rcrb
sbbb
addr16
add
rclb
cld
xchg
cltd
rorb
mov
lahf
outsl
jecxz
adc
jge
stos
ss
gs
push
dec
scas
mov
pop
mov
xchg
inc
into
andb
popa
lods
dec
jae
aaa
mov
lods
stos
imul
jle
into
mov
and
popa
and
mov
shr
fimuls
fwait
xor
ss
mov
iret
mov
mov
stos
stos
ret
stc
or
xchg
or
popf
push
sbb
hlt
jp
testl
ds
jae
xchg
xor
ret
orl
sbb
jb
stos
out
or
aad
pop
xchg
sbb
popf
sarl
out
shrl
push
jecxz
pop
mov
lods
inc
add
ljmp
gs
sbb
mov
or
mov
in
ret
test
dec
push
mov
lea
inc
jae
data16
jmp
mov
jae
dec
push
loope
testb
iret
ret
ret
sbb
mov
in
sub
mov
or
imul
rorb
ja
jnp
inc
push
pop
push
sub
xchg
dec
lock
adc
pop
test
xchg
mov
sub
in
mov
jge
and
scas
movsbl
pop
out
ficoml
in
ret
push
out
aad
ret
scas
ljmp
insl
cli
inc
push
or
pop
pop
sti
adc
clc
mov
sbb
mov
add
mov
add
stos
sub
push
jl
or
lcall
insl
popf
loop
xlat
mov
xchg
xor
imul
mov
scas
or
ret
and
cmp
adc
cmp
and
fsubrs
movsl
push
sub
cmc
stos
inc
push
mov
out
adc
js
adc
push
push
int
xchg
addr16
sbb
iret
movsl
das
and
mov
mov
in
inc
inc
sub
popl
cmc
add
aas
add
ret
call
xchg
js
lods
cmc
sbb
jecxz
dec
push
jne
loop
jo
add
mov
incb
int3
int3
push
imul
shlb
add
xchg
stc
in
sub
and
movsb
lods
or
shrb
fisubrl
jne
lret
adc
pop
pusha
imul
fsubs
mov
sbb
daa
mov
pop
cmpsb
aaa
pop
mov
popa
movsl
test
test
fwait
or
dec
mov
cld
mov
bound
mov
testl
iret
mov
mov
xchg
test
loop
aaa
and
mov
jmp
mov
mov
adc
or
jl
shlb
nop
scas
orb
push
icebp
nop
mov
gs
popf
jb
jmp
aad
jp
inc
mov
jns
xchg
cld
insl
inc
dec
mov
sbb
sbb
push
add
dec
sub
sbb
in
stos
mov
inc
insb
fimuls
adc
scas
push
roll
test
fcoms
out
mov
xchg
pop
rorb
mov
or
into
or
or
jl
dec
mov
daa
imul
pop
xor
repnz
lret
sahf
pop
adc
in
jne
orl
adc
adcl
fdivrs
mov
sahf
lcall
or
pop
push
mov
cld
cmp
lret
mov
jne
fidivl
imul
xchg
xorb
pop
push
call
xor
push
and
ret
mov
jo
sub
cmp
jne
or
push
dec
loopne
js
mov
dec
push
push
stos
test
dec
leave
xchg
mov
rorl
test
test
in
or
dec
incl
sbb
icebp
xorb
enter
xchg
jno
cltd
jecxz
rep
mov
inc
mov
js
xchg
mov
inc
int3
or
adc
mov
xchg
mov
push
sbb
insl
mov
jecxz
push
gs
jle
dec
cmpb
xchg
jnp
shl
data16
shrb
mov
in
dec
xchg
popf
xchg
mov
popa
pop
push
lret
sbb
cmc
jecxz
and
test
js
fidivl
dec
repz
sub
push
mov
std
cmp
push
fisttps
movsl
jmp
or
mov
hlt
loope
xchg
xor
movsl
inc
jnp
repz
jnp
test
lds
lea
mov
dec
rcr
mov
aam
rorb
jge
lret
out
mov
jno
ficomps
pop
movsb
mov
aas
mov
or
pop
mov
cmp
test
orb
scas
sbb
scas
sar
xor
jbe
or
dec
jmp
xchg
fildl
or
repnz
adc
jns
ret
push
ja
push
or
rcr
mov
push
fsubrl
lret
push
imul
mov
push
jae
lret
cld
sbb
mov
out
test
cmp
rclb
push
movsl
shll
xor
repz
xchg
mov
sbbl
inc
dec
call
cmpsb
movsb
test
sbb
loope
mov
xor
pop
inc
insb
xlat
add
xor
mov
mov
jle
mov
adc
adc
out
jmp
lds
inc
inc
pop
leave
nop
mov
cli
jno
jae
push
icebp
popa
push
clc
mov
hlt
xchg
push
ss
sub
cmp
ret
out
cwtl
push
scas
mov
dec
add
iret
adc
lods
loop
ljmp
and
jne
repz
mov
pop
loop
sahf
lret
or
jo
xor
fisubrl
cmpsl
mov
add
adc
ficompl
movsb
or
js
out
push
xchg
jmp
mov
les
das
adc
outsb
sub
fwait
dec
inc
mov
xchg
adc
rdpmc
cmp
sub
fimuls
sahf
xor
ja
pop
testb
mov
jp
mov
xchg
jno
cmpsl
push
mov
insl
adc
enter
roll
mov
rcrl
dec
sbb
loopne
push
mov
iret
mov
xor
cs
jb
sub
or
jbe
and
jb
notb
mov
inc
and
cmp
nop
scas
pop
out
clc
ss
lock
es
xchg
mov
sub
mov
mov
jecxz
sbb
popf
loop
pop
adc
scas
jl
cmp
stos
mov
sub
mov
test
cltd
cmp
pushf
mov
jecxz
iret
enter
cld
mov
xlat
hlt
xchg
cmp
cmpsl
xor
das
repz
addr16
jnp
stc
mov
mov
xorl
addr16
cmp
and
push
sbb
jmp
cmpsb
jno
imul
lahf
leave
rcl
jmp
iret
popf
das
test
xchg
mov
ja
test
inc
jle
frstor
inc
ja
int3
xlat
es
xor
std
repz
fstpl
sbb
lahf
add
out
dec
out
mov
cmp
or
fdiv
outsb
push
fldenv
push
cs
js
push
xchg
push
mov
sub
xchg
push
repz
movsb
adcl
jmp
jb
jp
or
jecxz
adc
push
mov
stc
mov
dec
in
push
jg
mov
sti
popaw
lcall
pop
add
fldt
repz
add
xlat
sti
les
cwtl
add
adc
arpl
shrl
insb
pop
out
push
inc
cmc
sbb
mov
xlat
add
mov
sbb
ret
lods
int
dec
cwtl
adc
arpl
and
mul
imul
push
mov
or
mov
loopne
insl
dec
js
or
add
into
dec
addr16
pop
push
movsl
jno
sahf
cwtl
daa
dec
hlt
inc
into
jb
movsl
push
mov
cmp
sub
sub
xchg
lods
jo
fstps
dec
shrb
ror
shl
out
pop
cmpsb
push
fistl
mov
push
xor
insb
mov
mov
loop
mov
shl
pop
lret
imul
incl
addr16
popa
jmp
sub
push
cmc
jno
or
std
or
mull
outsl
and
lock
mov
jae
lret
aad
mov
pop
out
sbb
jp
nop
inc
add
push
daa
mov
add
xchg
adc
jns
push
xchg
mov
inc
bnd
and
jge
adc
shr
and
push
add
inc
mov
add
adc
fcompl
mov
sbb
ficompl
fwait
leave
lret
mov
xchg
or
jns
cmpsb
faddl
mov
lcall
inc
xor
sarl
and
enter
stc
arpl
mov
jle
push
aad
cwtl
ret
xchg
jecxz
int
inc
fstpl
dec
addl
fmul
inc
dec
lock
sbbb
call
adc
lret
xchg
mov
push
jge
push
call
inc
arpl
sbb
pop
pop
cli
imul
xor
cs
jmp
or
pop
mov
pop
mov
movsb
insb
pop
cwtl
jmp
push
lock
adc
push
hlt
xchg
cli
das
and
test
into
dec
jmp
out
sbb
xlat
std
sub
out
xor
neg
ja
xchg
pushf
rcrb
in
pop
test
and
push
clc
rol
pop
sub
test
and
lret
sub
lcall
lahf
sahf
je
icebp
rol
cmp
cmpsb
cwtl
ror
pop
scas
or
les
addr16
and
pop
push
jno
gs
mov
dec
jns
fadds
je
cmp
pushf
adc
xor
fisubrl
xlat
punpckhdq
cmp
pop
mov
cmpsl
jge
lcall
pop
js
cmp
mov
jo
fsubs
mov
push
pushf
das
pop
fsubrl
dec
push
sub
std
mov
add
push
in
inc
stos
shrb
aas
lcall
cmpsb
mov
and
loope
xchg
xchg
stos
rcr
pushf
lahf
nop
fwait
mov
sub
xlat
sbb
jmp
jns
inc
pop
fdiv
push
adc
into
xor
sbb
insb
or
frstor
adc
add
imul
ret
repnz
xchg
mov
int
mov
cltd
fs
std
aam
xchg
pusha
and
cmpsl
mov
add
mov
dec
daa
cmc
out
int
lods
lods
mov
push
ljmp
cmpl
xchg
and
test
cmp
gs
lret
or
and
es
lds
adc
aad
xor
mov
out
int3
pop
and
jg
in
dec
mov
lea
jecxz
jae
ret
cmpsl
xor
nop
movsb
sub
xchg
push
inc
je
add
in
adc
addl
xor
push
in
mov
inc
mov
scas
cmp
pop
ret
add
aaa
inc
dec
push
dec
sbb
aas
adc
xlat
mov
lods
adc
mov
mov
pop
in
xchg
arpl
cmp
lret
add
clc
cmp
sub
movsb
subl
arpl
ss
mov
or
adc
and
addr16
cmpsl
mov
aas
mov
out
pop
ficoml
jnp
jbe
cmp
data16
test
and
popf
or
sub
in
cmpsb
mov
jmp
sub
pop
mov
rcr
inc
mov
or
mov
and
loopne
mov
jnp
sar
sub
cmp
xchg
hlt
pop
push
jmp
data16
jmp
sbb
loopne
or
sub
pushf
rclb
loop
repz
fadds
mov
push
hlt
pushf
je
lahf
fisubs
leave
cmp
addl
cli
pop
jmp
xchg
insb
hlt
or
insl
insl
inc
push
inc
enter
pushf
lcall
cmpl
mov
jno
into
lcall
add
orl
jl
outsl
jg
xor
and
aas
xchg
leave
cwtl
jno
dec
shl
adc
clc
cmc
cmp
lock
mov
arpl
clc
jp
nop
ret
movsl
fadd
sub
mov
sbb
test
popf
inc
sbb
inc
mov
into
jo
orb
loopne
outsb
mov
xchg
lods
push
sbb
sub
cmp
cmp
cmc
add
andl
mov
dec
mov
add
cltd
js
test
sbb
and
push
jne
and
fimuls
xlat
pop
cld
pop
dec
fidivs
rcrl
push
pop
inc
xchg
fcoms
push
jp
mov
je
ljmp
cs
pop
dec
mov
push
mov
shlb
or
daa
add
std
fs
cmp
add
jne
sti
add
xlat
adc
shl
dec
mov
xor
fstpt
sahf
leave
insl
pop
pop
or
mov
mov
push
mov
dec
mov
lods
scas
jp
xor
aad
push
jo
inc
dec
in
pop
cmp
xchg
stc
xor
push
pop
jb
andl
jle
aam
jecxz
lds
adcl
fs
add
cmc
jge
imulb
push
mov
jnp
cmp
into
jg
sub
ret
repnz
or
cmp
xchg
xor
inc
xchg
sbb
xlat
dec
nop
movsb
in
movsl
jnp
jp
xchg
push
mov
push
and
xchg
shlb
and
fldenv
movsl
jp
or
fidivs
pop
dec
lea
push
rclb
and
inc
xchg
sub
in
loopne
int
shrl
fisttpl
call
or
sbb
aad
jg
push
sti
push
idivb
and
and
ss
lahf
movsb
sub
ss
xor
icebp
mov
mov
lock
in
in
dec
js
loop
lods
ret
sbb
not
pop
jno
mov
mov
mov
test
push
dec
cltd
lea
stos
int3
xor
xchg
aas
push
or
inc
mov
pop
movsb
cld
aam
lods
dec
or
loopne
or
or
mov
pop
adc
pop
lods
inc
jmp
cld
inc
dec
cli
pop
cmp
rolb
jno
loopne
es
das
test
adc
push
jbe
xor
xchg
mov
adc
cmp
xchg
mov
ds
jnp
xchg
jg
inc
sbb
inc
sub
add
push
cltd
ret
aam
in
sub
stc
push
add
mov
insb
sub
fs
xor
mov
pop
sub
xchg
pop
arpl
jnp
outsb
out
inc
xor
jne
pop
rolb
loope
ds
jecxz
mov
cs
pop
ljmp
inc
and
mov
xchg
test
scas
adc
lods
gs
jecxz
xor
andb
inc
jnp
pop
lds
stos
iret
pop
adc
pushf
pop
jmp
xchg
add
jnp
mov
sbbb
pop
fldcw
pop
and
sbb
mov
pop
out
pop
fistl
mov
push
mov
mov
mov
popf
xchg
xchg
rorl
jg
pop
add
fnstenv
imul
push
fldcw
push
lods
fs
push
cwtl
ja
xchg
loopne
dec
rcl
pop
fldcw
pop
pop
jp
push
lods
jp
icebp
jmp
sbb
dec
test
enter
bound
fucomp
sahf
test
imul
dec
ds
jp
jae
in
aaa
mov
cmpsl
inc
ds
push
repz
adc
xchg
mov
test
push
adc
mov
dec
and
pop
loope
or
jle
stos
cmp
inc
push
mov
daa
popf
rol
leave
int3
fmuls
push
mov
jp
mov
frstor
inc
xor
sbb
popa
pop
mov
jb
repz
inc
adc
sbb
stos
cmpsl
inc
mov
push
out
repnz
dec
lds
xor
iret
in
cli
mov
or
paddw
fildll
inc
jge
sarb
flds
dec
popa
fnstsw
jb
xor
mov
das
sbb
repnz
xchg
jle
pop
add
dec
sbb
lcall
jle
in
enter
or
icebp
xchg
in
aam
insl
icebp
imul
js
sub
xchg
or
lret
adc
jnp
popf
out
ret
xchg
enter
inc
test
jnp
inc
cmpsl
adc
sbb
push
out
add
adc
jecxz
rcrb
jecxz
dec
jmp
pop
imul
enter
sbb
or
inc
stc
iret
push
fildl
repnz
out
cltd
lret
mov
clc
rcrb
gs
add
sbb
mov
and
cmp
add
inc
je
sbb
ds
jo
cmpsb
adc
ds
pop
std
dec
mov
dec
pop
push
mul
push
sub
mov
shll
pop
orl
inc
xchg
movsb
or
xchg
push
mov
shll
mov
lock
mov
mov
jnp
jae
rcr
push
cld
and
mov
or
xchg
push
xchg
outsb
data16
icebp
arpl
les
fdivrs
popf
or
lods
push
addr16
imul
sub
mov
or
aad
js
in
and
es
pop
test
aaa
dec
mov
xchg
fmull
movsb
mov
mov
ja
aas
dec
xchg
test
fcmovne
push
xchg
adc
mov
mov
sbb
push
push
fcomi
cmp
inc
mov
in
sbb
popa
rcl
mul
test
and
pushf
sub
cmp
cmp
push
imul
xor
jmp
and
outsl
cmpsl
push
into
sbb
cmp
fwait
popa
loope
dec
movsb
arpl
insl
mov
aad
or
sub
push
icebp
dec
push
sbb
lcall
sub
push
dec
adc
jle
push
fnstcw
dec
cmpsb
int3
jnp
clc
push
hlt
jmp
sub
adc
adc
outsb
mov
loop
and
add
pop
push
js
add
or
mov
mov
lahf
push
xor
push
cmp
loop
dec
mov
push
jecxz
out
cmp
mov
rcrl
jne
imul
inc
stos
cmp
cmp
insl
jl
mov
jne
sarl
adc
xchg
icebp
enter
jne
jns
dec
or
movups
push
inc
cmp
and
lret
jo
gs
sub
xor
adc
pop
sub
mov
clc
xchg
inc
arpl
into
adc
add
cmc
in
push
out
add
ja
xchg
imulb
pop
js
push
push
fsubl
jle
lahf
leave
xchg
mov
cmp
sbb
mov
sub
xchg
mov
sysenter
xor
xor
std
mov
mov
into
hlt
dec
adc
popf
or
xchg
mov
mov
xchg
adc
cmpsl
in
movsl
daa
cmp
and
cld
push
out
add
cwtl
loop
push
lret
mov
inc
js
iret
inc
idivb
fisubrs
lods
imul
inc
adc
cld
out
push
add
cmc
lret
add
adc
call
imul
ret
bound
lds
sbb
push
pop
inc
push
mov
movsb
inc
out
stos
mov
popf
imul
ret
dec
sub
movsb
add
daa
in
pop
std
imul
jle
xor
stos
jb
sub
cmpsl
lret
insb
jle
outsb
inc
pop
inc
push
sbbb
sub
cwtl
aam
rcll
adc
rcll
pop
rclb
xchg
pop
lock
sub
jmp
cmp
mov
aas
add
mov
push
push
mov
push
adc
pop
inc
sbb
lcall
daa
jecxz
adc
or
bound
and
cmp
dec
sbb
sub
rcl
dec
in
or
subb
lds
mov
insb
sbb
scas
inc
inc
inc
sub
or
xchg
xor
xor
xchg
sub
mov
sbb
pop
mov
push
mov
incb
or
or
in
sti
sti
push
mov
mov
add
adc
outsb
push
sbb
xchg
adc
xorl
xor
sub
arpl
push
lahf
fsubrs
mov
iret
push
push
pop
or
xchg
push
cmp
test
mov
sar
pop
xor
mov
and
sti
push
aam
adc
or
xor
xchg
adc
stos
fidivrl
js
sti
aaa
jne
sub
ret
or
dec
add
jo
pop
fmuls
push
subps
jecxz
daa
and
cwtl
xor
mov
dec
xor
out
push
cmpsl
imul
push
dec
add
insl
gs
mov
push
daa
push
cs
movsb
dec
inc
add
aam
jno
in
jne
mov
insl
xchg
cs
push
outsl
xor
mov
lea
mov
sbb
mov
mull
rorl
scas
sbb
out
mov
fbld
sbb
jbe
push
pusha
xchg
adc
insl
dec
mov
cmp
cmp
push
xchg
outsb
xchg
sbb
xor
pop
sahf
xor
jp
outsl
and
inc
push
mov
dec
aad
rcrb
adc
jne
popf
pop
imulb
jne
sub
sub
aad
jmp
andl
test
popf
xor
or
cwtl
pop
pop
dec
jae
imul
mov
fnstcw
ds
and
in
loope
adc
mov
lds
imul
loopw
nop
or
scas
jb
mov
mov
cs
test
add
sub
cmpl
sub
hlt
inc
rcrb
push
das
add
mov
mov
ljmp
push
stos
inc
sti
mov
xchg
xchg
or
jo
jnp
cmpsb
cld
cmc
aas
and
int3
sbb
insl
out
jg
aam
cmp
rorb
jge
test
mov
pop
mov
xor
enter
adc
call
stos
and
ss
adc
jb
dec
lret
bound
push
xor
sbb
push
clc
push
popf
loop
mov
cmp
call
adc
xlat
push
shrl
fsubrp
loopne
jns
mov
inc
repnz
hlt
scas
cltd
out
data16
fimuls
pop
pop
xorl
jmp
and
fwait
cmp
icebp
inc
addr16
shlb
xchg
push
jb
std
movsb
mov
jo
jecxz
test
cwtl
sub
cmpsb
imul
sahf
sbb
or
xor
lcall
adc
and
ud1
and
jle
mov
ds
adcb
fstpl
mov
jo
add
aaa
pushl
shrl
scas
xchg
daa
mov
outsl
and
sbb
and
int
push
rcl
aam
out
sub
mov
aas
int3
cmpsb
jge
icebp
adc
xor
ret
or
xor
ret
xchg
sub
add
dec
int3
outsl
test
xchg
in
nop
pop
jns
imul
sbb
lret
sahf
les
and
inc
cmpsl
loopne
aad
dec
jne
and
cli
jecxz
adc
push
adc
out
enter
dec
inc
dec
out
add
mov
test
testl
xlat
mov
inc
xor
bound
divl
jmp
xchg
or
pop
pop
xor
lods
cmpsl
out
mov
rorb
shrl
lock
shrl
lret
aam
enter
dec
ljmp
or
imul
xor
out
xchg
adc
dec
sbbb
cmc
lret
xor
test
mov
insl
in
pop
add
dec
dec
int
nop
ds
in
pop
xor
aam
cmpsb
mov
loope
scas
push
cmp
gs
push
mov
add
inc
push
in
jmp
dec
loope
add
pusha
cld
addr16
mov
and
cmp
sub
push
add
cli
sub
insl
mov
addr16
mov
push
test
dec
sbbl
pop
mov
imul
adc
cmp
fidivs
mov
fs
int3
int3
xchg
pop
inc
or
mov
xchg
insl
js
xchg
rolb
loope
mov
jp
xor
adc
filds
rolb
dec
repz
test
cmp
jp
mov
pshufw
lcall
decb
xchg
test
xchg
out
mov
xchg
or
cmp
xchg
test
lcall
push
fs
mov
xchg
xor
mov
imul
or
jle
cld
std
movsb
mov
sti
dec
js
or
inc
sub
and
sbb
std
pop
mov
lea
xor
mov
icebp
mov
out
fs
sub
addl
addl
jbe
sub
pop
orb
adc
movsb
jnp
sub
push
jne
push
cli
std
push
cmp
in
xchg
test
mov
aas
xlat
and
lret
mov
dec
cli
jle
jl
mov
popa
clc
cmp
push
jae
dec
int3
push
jmp
cmp
inc
push
jp
mov
je
lods
push
repnz
and
mov
nop
mov
out
inc
inc
jae
add
imul
fcmovbe
dec
rorl
in
mov
xor
sahf
sub
mov
xchg
cmc
mov
and
lds
dec
or
test
and
mov
mov
mov
adc
nop
out
dec
sub
das
in
jg
adc
pop
outsl
pop
mov
fwait
xchg
xlat
das
sbb
jo
add
push
mov
rcll
paddusb
push
dec
xor
daa
in
add
dec
mov
dec
pop
pusha
loope
jp
xor
popf
dec
mov
xchg
stos
mov
pop
pusha
adc
cli
mov
jne
sti
dec
mov
das
mov
mov
mov
jecxz
jne
or
ja
in
incl
xchg
testl
sahf
and
call
stos
and
xchg
jl
lahf
add
xor
pop
out
mov
mov
dec
inc
das
das
js
insb
nop
xchg
mov
cmpsb
stos
fidivl
mov
inc
xchg
int3
test
add
push
mov
dec
mov
lock
sub
loope
fdivs
ss
cmp
mov
mov
mov
xchg
sarb
lahf
add
fadds
and
ljmp
daa
sub
jo
adc
mov
sbb
sub
mov
std
jo
mov
sarb
lret
push
adc
inc
xor
inc
daa
js
dec
push
cmp
ljmp
pop
orl
mov
leave
divl
pop
jp
jns
icebp
mov
movsb
xchg
aad
push
fsts
pop
adc
xchg
test
out
mov
pop
lcall
pop
sbb
filds
lea
mov
or
lret
mov
mov
repnz
popf
stos
out
or
push
or
push
xchg
dec
mov
sub
sarl
lret
fucomi
clc
sbb
or
add
mov
rclb
daa
mov
pop
xor
and
loope
push
cmpsl
cmpsl
pop
mov
out
dec
test
sbb
sti
test
add
adc
fstpl
xchg
and
out
js
andl
outsl
add
add
es
clc
outsb
daa
jne,pt
push
and
pusha
or
sbb
loop
rcrl
push
stc
sub
mov
push
arpl
mov
sub
pop
cmpsb
test
ja
pop
cltd
cmp
lcall
loope,pt
ficomps
call
mov
repz
hlt
pop
mov
xchg
subl
mov
add
outsl
mov
inc
sbb
aas
xor
rcrb
sbb
dec
mov
adc
mov
sbb
scas
ja
push
sahf
adc
mov
push
data16
aas
mov
int
push
int
std
xorb
jg
neg
aaa
adc
jae
add
and
sbb
jp
js
push
idivl
jle
in
and
and
lahf
mov
dec
mov
rcl
cmc
push
orb
sbb
insl
push
sti
das
push
test
sbb
adc
popf
repz
sarl
call
and
lahf
rcrl
movsb
jp
mov
outsb
sbb
pusha
repnz
xor
dec
out
fisubrl
hlt
fstl
sub
shll
cld
push
lock
jmp
pop
push
in
movsb
xor
xchg
xlat
jge
jae
bound
daa
imul
in
pop
out
push
xor
cmp
xchg
mov
sub
ss
xor
shll
fbld
jnp
nop
fildll
cmp
shrb
inc
test
pop
sub
bound
jno
adc
dec
movsb
jns
jb
ret
sub
gs
adc
lahf
push
xorl
xchg
xor
xchg
icebp
mov
je
rolb
sbb
mov
pop
xchg
jl
aam
jnp
sti
pop
or
pop
movsl
jmp
repnz
jne
test
arpl
mov
je
inc
pushf
lock
add
inc
fwait
bound
loop
cli
pop
sbb
xchg
fcmovne
mov
pop
scas
jae
push
adc
enter
insb
ss
adc
call
cmp
push
fcoms
in
or
ljmp
mov
dec
jne
sti
push
imul
xor
in
push
jle
mov
jmp
scas
imul
pushf
xorb
mov
sbb
mov
mov
sub
mov
mov
rcrb
mov
lret
xchg
ret
xor
cld
mov
jg
pop
inc
cmp
in
cmp
or
push
or
pop
out
inc
into
mov
push
mov
sub
mov
sahf
mov
dec
popf
and
daa
std
dec
lea
test
mov
imul
jno,pn
bound
mov
cmp
jnp
xor
sarb
lods
enter
xor
jmp
jge
sbb
mov
scas
ds
sub
clc
lcall
sbbb
lods
sbb
jne
mov
adc
inc
jae
jne
das
loopne
xchg
cmpsb
and
lods
negb
push
mov
sbb
inc
mov
xor
lret
call
pop
in
mov
xchg
add
mov
cmp
int3
lea
rcrl
mov
mov
push
or
jns
mov
cwtl
push
cmpl
cld
push
xchg
movsl
fnstcw
push
pop
test
sbb
cmp
loope
adc
stos
fs
pop
imull
int
jno
jno
fdivrp
stos
imul
stos
sub
stos
mov
add
pop
xor
outsl
mov
jge
inc
lock
outsb
jle
jge
stos
xchg
jge,pn
cmp
in
inc
sbb
pop
and
fidivs
mov
xchg
stos
add
subb
nop
test
xchg
sbb
ret
cmp
fwait
shl
add
ret
pop
es
dec
adc
push
out
jae
xchg
mov
sarl
push
cmpsl
loopne
cli
popf
stos
pop
lods
add
cmp
dec
icebp
jmp
mov
loope
xchg
mov
test
int
dec
pop
arpl
sub
pop
and
test
pop
dec
push
fimuls
sub
mov
mov
pop
fwait
imul
push
leave
or
sti
dec
and
pop
jl
lods
jmp
les
jnp
fnstenv
push
in
stc
add
xor
in
jle
insb
icebp
add
mov
sbb
fs
mov
cmpsb
test
fdivl
xor
sbb
push
xlat
inc
cmp
jle
adc
clc
lret
lret
add
mov
inc
mov
pop
movsb
cmpsl
inc
ljmp
in
ljmp
movsl
or
les
adc
xchg
or
push
xchg
and
dec
mov
shll
test
lds
mov
mov
in
xchg
push
mov
cld
push
or
push
pop
inc
mov
ss
xlat
sub
sub
inc
mov
cwtl
es
or
cld
xchg
adc
jge
stc
adc
ljmp
sti
nop
into
xchg
adc
dec
hlt
mov
mov
cmp
pop
push
lods
push
sar
and
push
clc
aad
xlat
outsl
call
lcall
mov
cmp
shlb
xchg
mov
mov
lds
lea
ljmp
test
cmpsl
pop
or
jo
xor
push
gs
test
dec
sub
std
pushl
adc
pop
mov
dec
mov
jb
sbb
push
enter
std
pop
repnz
loopne
popa
sbb
mov
mov
mov
cli
aas
in
rol
or
cmpsw
adc
sub
testl
test
mov
mov
les
stos
idivb
sbb
push
or
adc
cwtl
pop
xor
dec
mov
sub
push
lock
call
sbb
or
test
out
je
dec
jmp
fldl
inc
ds
lret
mov
int
push
push
sbb
mov
jae
subl
imull
aaa
mov
pusha
into
push
fdivrl
mov
push
xchg
add
mov
loope
lret
cmp
jo
idivl
ljmp
loopne
xchg
jl
icebp
inc
into
lea
jecxz
sbb
jb
jnp
push
sbb
test
jg
add
sti
mov
jecxz
push
and
sbb
add
je
sbb
pop
sbb
cmpsb
mov
push
leave
std
aas
push
mov
pop
sbb
cmp
insl
hlt
fidivrl
add
movsl
pop
mov
xor
pop
pop
sti
pop
ja
sbb
scas
cmpl
mov
aad
test
mov
inc
cmpsb
mov
test
mov
clc
or
es
js
negl
outsb
stos
add
mov
int
jmp
mov
xchg
je
outsb
pop
frstor
add
xor
sbb
cwtl
dec
cmp
incl
lods
mov
fdivs
sbb
mov
and
sub
xchg
int3
cmovg
or
jnp
pop
cmp
mov
mov
ret
pop
hlt
leave
mov
daa
push
cmpsl
mov
pop
rorb
in
or
ss
xchg
inc
adc
sub
add
call
into
xchg
cmp
pop
lret
sub
fistl
fidivs
and
xchg
sub
test
fnsave
cmp
andb
mov
fimull
es
xchg
mov
xor
pusha
cmpsl
and
jno
nop
xchg
outsb
push
lods
stc
stos
lods
or
es
add
in
cli
pop
movsl
bound
mov
aaa
cltd
mov
in
js
or
ror
jb
push
xchg
in
xchg
sub
or
pusha
xchg
out
jo
mov
jg
push
sbb
mov
fstps
ljmp
movsb
add
mov
loopne
xchg
jns
lods
xor
or
sbb
sub
xlat
cmpsl
out
stos
fisubl
in
mov
mov
iret
xor
mov
aas
iret
pusha
xchg
xor
repz
faddl
clc
mov
xor
shrl
xor
dec
inc
sub
jns
mov
cmp
pop
pop
sbb
dec
cmp
test
les
mov
lock
mov
pop
insb
out
test
rorb
sub
dec
sub
xchg
fs
mov
call
cli
int
pop
mov
jl
lds
and
inc
dec
pushf
ds
imul
xchg
fs
dec
lods
fs
das
and
mov
mov
aam
jg
jge
ret
add
inc
shlb
fcmove
inc
test
lret
push
test
div
pop
lret
cmp
xchg
xchg
insb
pop
pop
mov
std
fbstp
jo
aam
mov
sub
jmp
or
xchg
repz
xchg
int
or
jo
lds
je
clc
repnz
mov
fldenv
sahf
push
dec
ret
cmpsb
cmp
sbb
cmpsl
fs
stos
or
popf
nop
cmpsl
sub
or
cld
mov
out
inc
push
lcall
mov
pop
xchg
repnz
adc
mov
bound
jge
es
mov
sbb
cmp
inc
add
out
jg
out
cmpsl
out
push
or
or
mov
sahf
lret
and
sbb
xor
loop
mov
mov
fistpll
cmp
xchg
push
jnp
inc
add
sbb
cmpb
pop
out
fisttpl
dec
and
push
nop
addl
xor
sahf
add
test
mov
inc
xchg
fstpl
mov
lods
cwtl
or
popf
test
add
ss
xlat
std
inc
test
add
ret
ds
jmp
cltd
enter
sbb
dec
rcrl
mov
pop
addr16
push
add
hlt
or
jne
sub
imul
roll
repz
xlat
add
dec
xor
push
pop
mov
int
ss
inc
in
sub
adc
push
ror
xchg
cmpsl
mov
mov
pop
in
out
clc
imul
aas
jg
mov
push
popa
enter
call
xchg
xchg
xor
adc
mov
out
notl
add
inc
pop
clc
xchg
shrb
inc
bound
ja
sahf
cmp
xchg
and
imul
and
jbe
mov
rcl
push
sub
push
sahf
in
inc
enter
mov
xor
or
std
loop
xor
pop
incb
pop
insl
insb
pop
aam
pop
cli
fwait
lcall
lods
add
and
cmpsl
or
push
or
mov
aam
mov
push
int
popa
adc
sti
lcall
out
jae
lret
cmpsl
add
xchg
cmpsb
push
stc
ja
cli
pop
lcall
mov
lock
out
mov
dec
push
sahf
fdivp
aas
adc
bound
jp
ret
dec
stc
xlat
inc
and
sbb
mov
xchg
dec
out
and
xchg
es
lret
gs
inc
adc
sbb
pop
shll
jb
xchg
and
cltd
push
xchg
jg
pop
or
repz
stos
outsb
ljmp
pop
ss
dec
pop
dec
add
pusha
popa
out
hlt
push
repnz
push
sbb
xchg
pop
add
insb
pop
fidivs
cltd
das
stos
jmp
cmp
sbb
mov
loope
pop
sbb
sub
sub
adc
pushf
imul
out
dec
and
inc
das
or
es
inc
mov
cmp
inc
xchg
jno
shl
pop
fwait
inc
cmp
imul
iret
sub
dec
in
xor
jl
sbb
fnsave
popf
fs
repz
je
sahf
jbe
mov
and
mov
pop
inc
inc
pop
inc
xor
xchg
rorl
and
leave
and
dec
imul
jmp
shlb
daa
mov
mov
les
add
stos
movsl
aas
test
jp
mov
push
or
push
mov
lods
in
loop
push
iret
or
dec
xchg
les
scas
xchg
shll
fsubrl
inc
jb
aam
push
fs
jbe
cli
mov
inc
fwait
xchg
cmpl
outsl
jo
in
call
inc
xlat
in
lea
jg
adc
aam
js
iret
in
dec
lret
mov
sbb
into
xor
jno
lret
mov
scas
ret
mov
test
inc
std
adc
or
cltd
ret
popf
sub
lock
adcl
add
test
mov
test
ds
fldl
in
mov
or
loope
pop
int3
sti
daa
sbb
mov
sbb
push
push
dec
sub
mov
sbb
cwtl
dec
dec
ficompl
mov
lret
aad
cmp
xor
mov
pop
mov
pop
pop
mov
add
in
out
sub
xchg
sbb
aas
lahf
aas
ds
xor
cmpsl
scas
aad
and
inc
cmp
loope
aad
mov
fsubr
pop
xchg
adc
sub
mov
cmp
xlat
mov
and
sub
orb
xor
mov
push
data16
mov
mov
xchg
stos
fdivp
sbb
pushf
es
xchg
cmp
fs
test
xchg
loopne
mov
incb
das
stc
mov
fwait
mov
hlt
pop
fwait
pop
mov
ljmp
call
ret
push
and
and
inc
aaa
aas
shr
shl
or
rclb
add
and
inc
sbbb
push
sbb
cmp
xor
fnstcw
mov
jbe
mov
mov
sti
inc
sub
lcall
frstor
clc
fs
outsb
movsb
leave
cmp
int3
dec
sbb
outsb
call
inc
xor
mov
shlb
mov
xor
inc
aad
insl
cmp
cmp
orb
fisubl
push
mov
mov
lahf
xor
push
xchg
sub
or
dec
stos
test
cmc
fsubrl
and
pushf
push
jae
or
stc
repnz
out
xor
insl
and
imul
sarl
jmp
and
inc
or
xchg
mov
and
scas
push
nop
xlat
ret
popa
ret
cld
push
out
stos
popl
in
inc
mov
mov
stc
shrb
in
or
cwtl
movsb
dec
jno
daa
push
negb
push
mov
enter
sbb
pop
icebp
pop
aad
sub
or
gs
pop
int3
inc
sbb
clc
mov
pop
scas
mov
fs
inc
clc
and
sbb
ud1
out
lcall
mov
aas
jg
scas
inc
dec
jne
movsb
push
inc
out
sub
and
mov
sti
xchg
mov
outsb
mov
sbb
sub
mov
loopne
adc
mov
imul
cmp
hlt
sbb
loopne,pt
sub
mov
push
aam
shrl
add
aaa
dec
cs
jl
xchg
int
nop
add
fadd
mov
add
fstps
scas
xlat
rcrb
out
or
jmp
scas
xorb
sub
or
in
mov
mov
inc
lods
push
push
mov
ret
mov
nop
lret
or
dec
or
jmp
or
lret
lods
dec
push
sub
sti
cltd
sub
lahf
inc
dec
sbb
xchg
lock
rcr
leave
lods
sti
je
stc
jg
loopne
mov
imul
dec
aaa
adc
jne
xchg
int
fstpt
clc
lods
add
repz
ljmp
sbb
mov
jge
int
xchg
push
fadds
sub
gs
cmpsl
loope
cmp
or
out
sti
ds
loop
pusha
dec
inc
mov
push
rcrb
mov
enter
aam
pop
adc
sbb
adc
dec
adc
and
out
lods
push
sarb
repz
ret
mov
pop
xchg
cmp
jnp
and
cmpsb
pop
cmpsb
rcrl
adc
lea
fidivl
gs
mov
dec
orb
iret
jae
jg
adc
pop
mov
test
fisubrs
mov
repz
neg
out
movsb
ret
pop
in
or
rorb
pop
pop
mov
ljmp
adc
aad
add
xchg
call
xchg
in
mov
idivl
icebp
mov
ret
adc
push
sti
sub
xlat
pop
jo
push
and
cli
push
mov
test
lret
imul
callw
repnz
lds
xor
sbb
stos
dec
xor
jns
dec
je
dec
arpl
or
test
stos
into
push
mov
loop
xlat
testl
sti
test
jno
call
cli
test
push
add
xchg
adcl
mov
loop
in
mov
jb
mov
mov
push
mov
fwait
mov
pop
mov
add
push
dec
mov
push
icebp
pop
std
dec
adc
push
cmp
stos
nop
xlat
push
ss
iret
gs
fwait
shlb
mov
mov
loopne
jno
cltd
mov
insl
leave
pop
inc
in
mov
lea
popf
add
dec
cli
out
pop
xor
dec
mov
adc
testb
jge
add
rorb
lahf
add
movsl
ja
lahf
popa
faddl
dec
shll
cmp
sub
xchg
rorl
lds
and
push
mov
push
or
test
add
cmpsb
sbb
movsl
addb
stos
sub
mov
loop
push
push
rol
xor
cmp
out
cs
loop
xlat
insl
out
add
sub
xchg
lret
jae
mov
dec
lock
mov
fs
shlb
mov
jns
cltd
and
scas
adc
lock
movsb
fucomip
loope
mov
loope
add
xchg
loope
mov
jmp
mov
sti
stos
js
add
ret
loop
movsl
repz
inc
das
jecxz
mov
jge
pop
or
jmp
lret
ja
and
imul
cmp
add
popa
mov
mov
push
xchg
hlt
test
or
repz
dec
xchg
sub
insb
das
xorb
pop
in
lret
lods
hlt
or
aam
pop
jp
inc
test
push
xchg
int
in
adc
int
shlb
mov
call
fistpll
gs
sub
aad
push
push
cmp
das
nop
fcmovnbe
add
or
nop
cs
xchg
int
pop
jmp
sbb
mov
mov
cli
jae
push
dec
pop
lahf
repnz
cli
inc
push
pop
jle
inc
ss
icebp
push
mov
loope
mov
xor
adc
push
push
xlat
sub
stc
imul
add
jg
xchg
sahf
dec
je
mov
mov
aad
in
cwtl
sbb
and
sub
sahf
push
cmp
jae
mov
jp
dec
pop
xchg
add
and
inc
ja
mov
out
cltd
sarb
cmp
push
cmp
xlat
jnp
int3
scas
daa
rorb
push
loopne
mov
push
inc
mov
rcrb
pop
ret
xchg
mov
icebp
iret
push
add
adc
jns
mov
push
ds
push
insb
push
call
push
into
bound
pop
sbb
adc
push
cmp
push
jl
repz
clc
mov
loopne
flds
mov
pop
sub
idivl
clc
lcall
lea
inc
mov
mov
xchg
rclb
jb
sbb
push
mov
stos
push
jns
subl
sbb
leave
fidivs
pop
pop
and
and
ljmp
xchg
adc
adc
or
adc
rclb
xchg
sub
ret
sbb
fsubr
cmp
pop
ja
pop
push
ret
push
push
pop
and
aam
mov
scas
jbe
pop
xchg
rcrb
inc
movsb
push
jge
shll
xchg
fxch
iret
jno
mov
fdivrl
add
jge,pt
pop
mov
mov
addr16
es
mov
leave
ljmp
pop
outsb
mov
popa
ds
les
xchg
inc
lods
leave
jae
push
inc
enter
repnz
mov
outsl
out
push
outsl
out
jbe
orl
stc
sub
inc
xchg
dec
mov
popa
xor
cltd
in
pcmpeqb
push
push
push
inc
adc
movsb
ss
xor
mov
mov
std
in
stos
xlat
or
push
cmpsl
leave
lods
hlt
jbe
rcll
dec
stos
xchg
dec
adc
mov
in
pop
and
jecxz
popf
ja
pop
xchg
dec
stos
nop
cmp
outsb
cmc
xchg
fwait
mov
push
cmpsl
xor
imul
xchg
shll
cmp
adc
lea
xor
mov
jmp
jmp
testb
xchg
or
pop
jmp
dec
mov
rol
mov
sub
jae
gs
jle
jb
adc
js
add
nop
pop
mov
xorb
mov
fsts
dec
push
push
sbb
aad
cld
daa
or
subl
jg
movsb
ret
xchg
cmp
pop
repz
test
clc
popf
imul
adc
and
jns
pop
sub
outsl
pop
cmc
mov
gs
sub
add
add
push
cmpsl
movsb
lcall
test
loop
push
and
in
fldenv
inc
xor
mov
ret
push
or
cltd
add
pop
ret
push
mov
test
add
into
mov
xor
pop
movl
add
scas
adc
outsl
movsb
cs
out
loop
sbb
jg
sbbl
cmpsb
hlt
ss
icebp
leave
cs
insl
mov
xchg
xor
push
lea
cmc
adc
dec
lret
loopne
pop
aam
nop
sbb
dec
push
xchg
dec
insb
cld
mov
js
xchg
ja
pushf
fsubs
sub
fwait
shlb
push
jge
js
scas
stos
mov
or
imul
mov
out
dec
repnz
popf
inc
jg
jecxz
adc
mov
xor
add
imul
daa
fbstp
mov
mov
fisubs
xchg
xor
push
cmp
stc
out
lcall
mov
jnp
clc
int3
fs
les
stos
loopne
inc
lock
sti
cmpsb
mov
inc
adcb
cmp
dec
mov
mov
mov
aas
or
and
jmp
and
pop
push
daa
mov
jnp
add
in
cmp
sbb
rcrl
rorb
cmc
mov
arpl
sub
insl
fsubrs
cmp
ret
mov
cmp
cs
sbbl
leave
pop
cltd
test
dec
ja
adc
arpl
fldcw
jbe
es
pop
es
or
sub
sub
xor
mov
inc
and
rcrl
mov
lods
inc
sub
daa
push
mov
pop
cltd
or
mov
push
int3
lret
fsubl
and
in
les
and
add
sub
mov
cmp
jb
data16
iret
sbb
lock
fimull
pop
jbe
je
cmp
xchg
fmulp
lcall
jg
xlat
xor
mov
cmc
xchg
jp
iret
ja
or
lods
push
or
jle
push
or
xchg
lahf
gs
fbstp
mov
das
dec
xorb
rcl
in
shrb
mov
inc
orb
imul
and
push
xchg
fwait
lods
out
push
repz
dec
fsubl
std
int3
mov
adc
adc
fsubrl
add
jle
rcr
push
adc
jge
addl
movsb
aas
popa
push
inc
jecxz
mov
mov
lcall
xlat
fwait
add
jbe
clc
and
jge
es
add
mov
mov
pop
push
add
pop
cmp
xchg
cs
inc
inc
jmp
aad
int
out
inc
inc
cmc
repnz
push
das
adc
cwtl
leave
xor
aaa
xchg
push
mov
sti
movsb
dec
lea
rcrl
or
and
lcall
loope
or
xchg
push
cmp
loope
jle
hlt
or
mov
iret
xchg
mov
popf
xor
push
test
jmp
lods
mov
add
call
mov
and
mov
sbb
adc
and
mov
jnp
or
mov
mov
lcall
popl
or
or
or
out
push
lock
cmp
addb
call
aam
mov
fnsetpm(287
sub
xor
lret
jnp
add
hlt
lahf
fistpll
mov
inc
add
push
push
mov
iret
int3
push
xorl
andb
mov
ljmp
pusha
fs
cltd
sbb
out
cmp
push
mov
mov
fiaddl
es
push
jns
sbb
jmp
cmpsl
popa
add
sbb
mov
sub
adc
jg
pop
or
add
icebp
add
sbb
gs
sub
lret
cmp
jbe
mov
lret
fiadds
ret
push
xchg
jg
pop
and
ja
mov
push
xlat
jle
xchg
adc
decb
cmp
lret
jmp
ss
lcall
xor
es
fwait
mov
pop
imul
push
dec
rorl
and
ds
jae
stos
or
and
pop
pop
jb
cpuid
and
je
sbb
add
xchg
adc
push
jo
std
add
push
cmpsl
mov
mov
pop
in
dec
cmp
xchg
or
popa
jbe
adc
lock
or
scas
xor
add
and
shll
dec
adc
or
push
xchg
and
and
in
mov
and
mov
and
test
cmpsl
repz
adc
icebp
or
sbb
jns
scas
je
xchg
push
sub
cmpsl
pop
outsb
sub
lods
sbb
mov
sahf
es
icebp
sub
xor
push
test
xchg
mov
lahf
cwtl
lods
or
bound
jg
test
sbb
subb
fidivs
cmp
stos
dec
fabs
jno
es
adc
jbe
mov
pmaxsw
sub
std
movsb
int3
aad
sbb
dec
push
mov
pop
rorb
rcrl
jns
adc
psllq
fbstp
iret
mov
mov
repnz
or
adc
loope
gs
push
je
test
insb
ficomps
stos
aam
or
push
adc
out
sti
push
lea
mov
push
jg
insb
sti
mov
xchg
fsts
mov
dec
imul
in
fstpl
mov
fnstenv
jle
fisubrl
xchg
or
xchg
adc
pop
sti
xor
inc
jae
push
xchg
dec
adcb
adc
out
sub
shr
xchg
scas
lret
stos
mov
cld
xchg
adc
jae
xchg
scas
sub
rcrb
cmpsl
jno
sti
dec
ret
in
or
cwtl
movsb
pop
push
int
scas
cmpsl
mov
mov
jo
mov
ja
sub
mov
jae
fcmovu
imul
stos
sahf
cmp
lcall
xchg
insl
jle
cltd
xchg
adc
daa
je
xchg
ficomps
pop
repz
inc
sub
mov
cmpsb
lods
jbe
mov
mov
fisubrs
movb
pop
push
or
aaa
push
inc
xchg
pushf
stc
fsubrl
adc
ja
lahf
push
cmp
leave
ret
or
inc
in
or
lret
stos
sub
mov
int3
fmulp
xchg
dec
push
ja
push
pop
sbbb
lret
push
dec
and
or
xchg
fs
or
in
imul
sbb
cmp
ret
into
inc
or
sbb
adc
inc
pushf
mov
push
jo
jge
mov
and
lods
outsl
lret
mov
dec
lds
cli
jb
adc
pop
add
aaa
jno
pop
push
into
pop
js
inc
ret
jmp
rcr
cmp
mov
mov
push
sub
inc
mov
mov
mov
xchg
inc
pop
sbb
mov
stos
jl
mov
data16
sbb
cs
sbb
mov
add
mov
pusha
sub
scas
dec
jno
mov
push
fsubs
dec
or
aaa
or
jne
std
stc
dec
fistl
jb
aad
sub
repnz
push
repnz
mov
arpl
aaa
inc
mov
les
test
clc
pusha
mov
in
cld
or
gs
shrl
aas
xchg
mov
nop
fsubl
pop
imul
bound
icebp
and
ret
mov
ret
fs
and
pop
dec
pop
sbb
inc
arpl
pop
cmp
cmp
xchg
mov
cltd
insl
ds
mov
cs
jno
xchg
in
jno
xor
lea
insl
xchg
ss
dec
scas
jne
mov
loopne
mov
enter
shrb
and
jne
push
jno
fidivs
xchg
xor
xor
jmp
ja
mov
outsl
cmpsl
bnd
repz
or
fwait
add
adc
xor
jne
je
push
ja
sbb
xchg
fists
cmp
div
push
ficomps
pushf
mov
cmc
iret
subb
mov
ss
cmp
push
ja
sub
movsl
popa
mov
jnp
and
pop
push
ret
movsb
pop
popa
mov
in
push
ffreep
and
or
test
aad
ss
jnp
out
sub
push
pop
es
xchg
add
jns
mov
push
insl
and
test
out
xchg
filds
nop
xchg
cmp
xchg
aad
fcmovb
roll
ficomps
sub
ret
repnz
rorl
or
js
lods
idiv
sahf
push
push
aaa
imul
pop
pop
fcom
add
movl
sub
stos
sbb
sbb
dec
nop
loope
sub
dec
dec
outsb
ds
arpl
cltd
xor
xor
inc
dec
aad
pop
sbb
leave
ljmp
pop
loopne
aaa
pop
mov
fwait
add
push
sub
or
les
aaa
outsl
add
mov
outsb
in
out
and
dec
sub
push
adc
jmp
ja
jbe
inc
test
xorl
arpl
adc
outsb
cmpsb
jb
cld
stos
mov
and
mov
xchg
dec
rcll
or
outsl
mov
or
push
stos
movsb
mov
aad
jmp
jg
jae
shlb
subl
js
push
jmp
std
mov
rclb
ficomps
fisubrl
cmp
xor
mov
mov
out
outsl
sarb
or
aaa
add
aad
fidivrl
loopne
mov
ss
arpl
push
in
arpl
mov
lret
adc
addr16
mov
push
lds
lods
js
into
les
or
loopne
rol
adc
movsl
js
arpl
pop
jmp
mov
fs
addr16
cld
mov
rolb
xlat
addb
repz
stos
addl
push
loope
fwait
cwtl
push
cmp
cmc
inc
mov
test
idivb
or
xor
push
or
or
mov
cmc
sub
js
stc
sub
decb
nop
cmpsb
pop
jmp
dec
adc
xor
jb
repz
xor
push
inc
std
outsb
ja
jnp
icebp
mov
mov
inc
repz
sbb
mov
or
or
xchg
inc
stos
cltd
movsb
fstpl
inc
xchg
fisubl
jl,pt
mov
cmpsl
aas
movsl
lcall
scas
lahf
add
popa
stos
jo
scas
xchg
imul
fistl
scas
pushf
rol
sti
jb
push
pop
mov
cmpsb
xchg
push
mov
in
in
dec
mov
push
or
mov
ja
jge
cmp
sbbb
add
mov
jg
jmp
movsb
xor
imul
mov
mov
std
push
mov
cs
enter
xchg
mov
jnp
sub
xor
mov
push
or
daa
inc
dec
push
inc
dec
icebp
push
into
lock
fwait
lcall
mov
push
dec
pop
sub
add
repnz
into
cld
out
mov
push
ret
stos
mov
divw
ljmp
nop
rclb
sbb
pop
pushf
and
loop
insl
mov
add
add
js
xorb
stc
xor
inc
flds
out
icebp
addr16
cmp
loop
jp
out
adc
andl
push
jmp
mov
cmp
pop
popl
push
push
repz
mov
int
outsb
addr16
xchg
sarb
inc
adc
push
cmp
ja
imul
fwait
mov
sub
jge
jno
std
test
mov
loope
push
movsb
cmp
in
pop
movsb
push
rcll
sarl
insl
dec
cpuid
jg
fdivl
repnz
movsb
jmp
dec
shll
imulb
out
pushf
push
pushf
cwtl
mov
push
mulb
sbb
into
or
xor
cmp
out
lods
inc
inc
dec
mov
sub
fidivs
fsubl
sbb
subl
icebp
arpl
sbb
xor
rclb
aam
daa
cmp
mov
cmp
xchg
popf
pop
push
push
cmpsl
add
pop
decl
fcmovne
add
test
adc
rolb
pop
imul
xchg
lock
out
pop
fxch
add
push
xor
test
jne
mov
and
lret
or
sub
add
push
shlb
pop
sub
imul
and
jo
pop
and
jge
jne
mov
stc
cmpsb
loop
das
loop
mov
cs
push
ret
mov
mov
daa
jecxz
adc
sbb
mov
imull
add
mov
test
testb
adc
popf
pop
aam
dec
pop
inc
sbb
push
inc
sbb
cmp
cmpsl
movsl
push
ljmp
add
sbb
scas
pop
xchg
cmp
shll
icebp
cmp
push
aad
pop
jae
pop
rolb
ljmp
add
aam
jmp
pop
out
pop
aam
stos
or
dec
xor
dec
addr16
push
or
jbe
xchg
ljmp
push
push
xor
sbb
cmp
mov
xchg
sbb
pop
push
inc
and
push
and
movsb
jns
ja
into
and
sbb
xchg
mov
iret
sbb
cmpsb
and
dec
mov
xchg
push
cmp
push
cmp
push
mov
cmpb
shll
shrl
sbb
xchg
data16
int
or
ficompl
or
les
sbb
and
fistpl
or
push
pop
xchg
cmp
mov
jp
fcmovbe
push
push
mov
fidivrl
stos
xchg
pop
and
xchg
shrl
js
lods
fsubrl
mov
stos
test
adc
mov
mov
sub
call
xchg
or
insb
jmp
mov
push
cwtl
cmpsl
jae
in
xchg
xor
adc
insb
push
gs
enter
xor
sbb
nop
sbb
lret
mov
in
mov
mov
fs
sub
inc
addr16
push
mov
inc
hlt
int3
sbb
dec
out
inc
push
pop
xor
inc
dec
aaa
push
mov
cmp
cmpxchg
movsb
not
xchg
loope
or
lahf
push
cltd
mov
sub
int
aad
repnz
adc
shr
push
xor
xor
jecxz
ror
or
gs
sahf
fsubrs
test
inc
fwait
enter
add
sub
inc
std
in
mov
lret
stos
rolb
push
inc
jnp
cld
adc
add
or
sub
lahf
arpl
mov
fisubrl
adc
insl
cmpsb
pushf
rcr
cmpb
mov
sahf
iret
outsb
cmp
std
dec
test
les
jno
jle
divl
cld
pop
pshufw
imul
xchg
or
xchg
mov
shlb
mov
inc
jns
inc
aaa
mov
ja
adc
push
sbb
gs
cs
jmp
lods
sub
xchg
push
mov
pop
ljmp
clc
xchg
jle
cmpb
pop
jb
jno
jns
repnz
popf
or
xor
aad
sub
or
xor
push
icebp
mov
lea
jo
in
shl
sti
lods
and
sub
and
es
or
inc
insb
aaa
and
test
lea
push
lea
adc
xchg
imul
dec
ds
ret
cmp
lahf
push
xor
js
sub
adc
aad
cltd
push
cmp
test
jmp
nop
inc
dec
lods
push
and
mov
int
repnz
gs
mov
add
jecxz
xchg
subl
mov
subl
jp
fiaddl
test
stos
cmpsb
jmp
shlb
cwtl
push
pop
pop
out
push
dec
add
test
or
fbld
sbb
cli
jbe
jns
test
sti
sub
daa
cld
fsubs
cmp
push
cmp
aam
push
cltd
or
mov
cmp
mov
incb
sbb
inc
mov
cmpsl
aad
jmp
aaa
sbb
je
xor
movsb
xchg
and
lret
xchg
cmp
sub
or
gs
lods
aam
or
out
inc
adc
add
ror
pop
bound
cmp
sub
sbb
or
pop
pushf
neg
les
adc
inc
jle
fs
ds
push
and
xchg
xchg
dec
mov
and
pop
push
out
fdivs
add
adc
xor
mov
dec
aaa
mov
sub
push
jne
sahf
dec
ret
lods
adc
aas
cmp
test
sbb
add
mov
leave
cmpsl
pusha
xchg
dec
push
mov
push
push
or
aas
outsb
mov
mov
fcomp
or
pop
sub
push
daa
ret
xchg
inc
cld
sub
mov
fidivs
push
std
fimull
inc
mov
fs
sahf
loop
sbb
adc
hlt
cltd
mov
std
dec
and
lcall
int3
jnp
mov
clc
sahf
push
dec
cld
insl
mov
push
pop
add
xchg
out
fisttpll
pop
andb
test
adc
pop
jmp
mov
push
sbb
sbb
call
mov
mov
push
dec
jp
movsb
mov
cmp
adc
fbld
sub
cwtl
pop
insb
pop
arpl
lods
call
leave
jae
push
cmpsb
std
js
fwait
rcrl
mov
add
stos
inc
jbe
lea
aas
cmc
rclb
lock
outsl
inc
fwait
sub
imul
dec
movsb
pushf
fmuls
outsb
and
push
xchg
mov
nop
pop
pop
push
out
arpl
pop
jb
pop
push
xor
and
or
dec
mov
dec
lahf
push
adc
int3
sub
je
loope
xchg
push
imul
sbb
movsl
jge
fidivrs
das
pop
mov
mov
cli
mov
pop
sub
leave
test
stos
fimull
jno
aam
test
loope
ds
cmc
into
sbbl
jge
push
insb
adcb
dec
and
popf
aaa
or
insb
loopne
iret
fmull
repnz
outsl
xchg
test
inc
jle
push
cmc
or
sar
cmc
in
sub
mov
push
jecxz
and
jmp
popf
add
mov
xor
fisubl
mov
fucomip
and
cmp
imul
test
in
push
arpl
loopne
xchg
mov
pop
jle
lahf
sti
cmp
sub
sbb
mov
scas
or
cmpsb
daa
add
lods
outsb
dec
xor
stos
rcl
dec
pop
cmp
pusha
loope
or
xor
add
mov
mov
std
int3
int
sbb
inc
pop
rorl
cs
mov
sbb
and
jb
iret
inc
call
cmp
xor
sbb
out
mov
sub
data16
pop
fs
ja
test
insb
push
mov
and
dec
xor
int3
lret
in
push
adc
outsl
xchg
push
jle
cwtl
repnz
xchg
jg
mulb
dec
scas
push
pop
in
stos
lock
dec
cs
stos
sub
in
mov
adc
lea
cwtl
scas
mov
xor
out
and
push
bound
pop
or
jecxz
test
pop
in
add
pop
adc
cmpsl
dec
ret
popa
je
jmp
inc
pop
rcrb
xlat
outsb
xchg
testl
inc
shlb
fwait
xchg
mov
imul
in
data16
sub
add
mov
nop
das
pushf
or
iret
and
push
into
and
ss
flds
jge
mov
in
fnstsw
xchg
test
xlat
pop
loope
lcall
cmp
test
cwtl
mov
sbb
fwait
inc
ja
push
mov
xchg
lahf
js
or
icebp
adc
scas
xor
mov
mov
jl
pop
out
cmpsl
leave
movsb
movsl
leave
sbb
mov
pop
jp
sub
ret
or
lock
xor
pop
cld
jge
cmp
dec
lahf
lret
mov
sub
les
aam
inc
or
xchg
sti
xchg
inc
adc
jp
outsb
mov
xchg
mov
outsb
inc
xor
lods
pop
rcrb
dec
pop
and
add
pop
or
jo
mov
xor
ret
in
and
and
cwtl
imul
mov
popa
mov
xor
daa
mov
jo
xor
mov
shrl
mov
dec
movsb
outsl
out
pushf
add
je
popa
xor
jle
inc
insb
inc
adc
pop
mov
in
orps
bound
jecxz
incl
psubusb
xor
xlat
rcrl
cmp
push
and
ret
aaa
jmp
lock
sarb
daa
pop
adc
mov
dec
cmp
test
inc
and
fs
call
or
adc
cmp
imul
push
hlt
sub
sbb
imulb
cmp
rolb
sbb
cmp
sbb
sbb
pop
repnz
or
into
cmp
rorl
int3
cltd
aaa
cmpsb
popa
out
push
int
jp
in
insb
arpl
xchg
jns
jl
mov
insb
into
inc
outsl
test
aam
xchg
inc
adc
mov
popa
addb
adc
sub
or
sbb
std
loope
add
les
or
mov
gs
adc
xchg
lock
jnp
push
sbb
movsl
sahf
lahf
pop
inc
inc
out
in
shlb
pop
or
fwait
sub
xor
insb
daa
fs
lods
out
sub
lods
mov
push
test
icebp
and
xchg
gs
sbb
stos
enter
or
aaa
or
ret
dec
jbe
fstpl
mov
imul
dec
cli
and
bound
shrl
mov
loopne
mov
shl
cmpsb
xchg
sti
inc
cs
sti
pop
iret
and
outsl
mov
xchg
xchg
jns
fimuls
arpl
push
dec
or
adc
push
jl
xlat
test
stos
je
xor
stc
icebp
pop
aad
push
popf
or
int3
test
repz
les
insl
ds
sub
std
and
ds
lods
xor
push
pop
or
std
mov
xor
dec
inc
cmp
je
inc
jg
mov
sub
lahf
or
dec
pop
icebp
xor
js
rcll
or
das
mov
push
jno
xor
cmp
je
hlt
dec
sbb
mov
addb
sbb
and
sub
in
sbb
aaa
mov
jbe
insb
cld
imul
pop
inc
repnz
or
push
movsl
mov
and
pop
test
mov
fs
and
or
cmp
sub
lock
aad
mov
cmpsl
jecxz
sbb
pop
loopne
pushf
dec
pop
jle
and
stc
sbb
pop
sti
xchg
sti
pop
cmp
iret
aam
pusha
or
shlb
fdivl
cmc
cmp
and
sub
pop
adcl
leave
adc
mov
outsl
xchg
int3
mov
outsl
cmp
sbb
pusha
mov
sub
scas
int
add
mov
xor
xorb
and
add
es
xor
pop
into
shrl
insb
mov
in
out
push
lods
push
mov
add
pop
js
rorb
test
adc
mov
add
mov
loopne
push
rcll
lret
and
push
xor
jg
jnp
and
mov
divb
imull
cmpsb
mov
or
lcall
push
ds
dec
push
cmp
loop
movsb
sbb
mov
xchg
add
mov
xor
fidivs
pusha
inc
cmpsl
xchg
test
icebp
jno
int3
mov
ds
dec
xlat
fldt
xor
xor
xchg
lock
das
add
inc
ja
cmp
cmc
bound
sahf
lahf
fistpll
sub
out
xor
aad
push
xchg
in
nop
push
and
icebp
shll
enter
pushf
loope
add
jecxz
cmp
jo
out
mov
push
add
xor
fidivrl
popa
ret
push
mov
lock
push
data16
popa
les
mov
insb
in
mov
imul
push
add
pushf
lods
xchg
pop
mov
inc
sub
xor
loope
pop
int
mov
adc
sbb
mov
jbe
cwtl
in
fadd
ficoml
push
mov
in
orb
arpl
inc
dec
pop
mov
fldt
push
gs
inc
push
lods
imul
pusha
push
jle
int3
mov
out
jbe
pop
fsubrs
mov
mov
out
test
inc
xor
loope
and
inc
xorb
mov
add
cmpsb
outsb
inc
dec
cmp
sub
mov
dec
aam
push
cwtl
xchg
sbb
pop
jae
sbb
or
cmpsl
stos
mov
in
clc
mov
mov
mov
lods
icebp
and
js
xor
cwtl
cmp
rcrl
pop
push
adc
adc
mov
pop
push
sbb
and
xor
outsl
or
xor
xor
inc
es
xchg
rorl
xchg
mov
leave
nop
je
adc
inc
dec
pusha
mov
ljmp
cmpsb
and
mov
pushf
inc
xchg
sbb
shlb
inc
inc
cli
mov
test
mov
xchg
inc
mov
and
xor
outsl
inc
stos
cld
rcrb
mov
repz
int
dec
das
lods
mov
shlb
in
fwait
inc
adc
in
jge
mov
cbtw
xchg
sub
cmp
xor
cwtl
cli
pop
cmp
fwait
lahf
jmp
and
lea
idivl
sti
adc
dec
inc
mov
sub
cmp
enter
pop
mov
push
fsubp
xor
insb
cmpsl
and
dec
xor
pop
adc
adc
aaa
fisttpll
jle
stos
mov
test
ds
sub
cmc
inc
jl
arpl
mov
xchg
fwait
or
lret
lret
pop
mov
jge
mov
mov
pusha
cwtl
rcll
cmp
pushf
jle
fiadds
push
pop
ret
repz
inc
inc
dec
add
push
and
sbb
ljmp
inc
repz
orb
outsb
lock
loope
out
in
dec
mov
sbb
add
lds
mov
scas
cmp
mov
dec
out
aad
and
xchg
loope
fs
pop
into
mov
sub
and
jge
rcr
dec
into
push
enter
pop
pop
xor
or
pop
jle
mov
jp,pt
orb
xchg
cmp
jp
mov
push
sahf
adcl
arpl
inc
mov
std
and
adc
fistl
lods
add
in
dec
pop
push
pop
sti
mov
and
push
xor
add
add
cmp
outsb
test
or
sub
pop
mov
sub
aam
dec
cli
mov
lcall
and
sti
cmp
dec
enter
jl
leave
cmp
je
pop
arpl
out
mov
xor
fcmovne
cld
test
ret
pop
push
fcomp
test
mov
mov
jae
push
test
test
loope
iret
and
mov
dec
sbb
je
pop
cwtl
js
lahf
or
insl
aad
jns
fisttpl
push
dec
jp
cmp
jae
in
push
adc
call
cmp
jp
fdivr
cmp
out
cs
mov
ss
cwtl
inc
lret
es
cld
add
inc
lret
and
xchg
stc
add
cmp
lcall
or
fs
imul
add
fstl
jge
les
sbb
je
loopne
rcrl
dec
mov
jmp
push
dec
insl
ljmp
gs
nop
mov
pop
adc
sub
push
cmp
fadds
bound
insb
fdivl
loop
sub
inc
in
jg
orb
faddl
push
arpl
je
sbb
iret
dec
sub
mov
aas
les
andl
push
mov
mov
popa
jmp
adc
nop
lcall
negl
ljmp
pop
dec
push
add
insb
out
lds
in
dec
test
fdivrl
ror
and
or
nop
fists
scas
fistpl
add
loop
test
cmp
xchg
shlb
mov
rcrb
icebp
fldcw
lds
mov
sar
cs
mov
add
jecxz
stc
test
or
cltd
lock
ss
mov
enter
mov
jbe
mov
fld
data16
pop
cmp
cmp
lcall
and
ret
aas
push
insl
pop
xchg
dec
xlat
jg
cmpsb
xchg
shr
push
xchg
jl
xchg
ja
mov
fimull
rolb
test
test
push
mov
mov
inc
and
inc
cmp
stos
or
cmpb
or
and
das
ret
insl
or
data16
fdivrl
ljmp
adcb
cmp
gs
rcr
test
mov
xchg
push
jbe
scas
mov
jg
repz
hlt
cmp
jmp
xchg
xchg
mov
jg
scas
xchg
arpl
mov
movsl
mov
adc
fildll
cmp
lahf
xchg
and
pop
mov
lock
mov
int
inc
dec
cmc
mov
iret
mov
stos
sbb
cmpsl
test
pushf
sahf
loopne
mov
xlat
daa
out
jle
and
mov
pop
sbb
add
pop
jne
xchg
scas
dec
sbb
pop
loop
fiadds
or
or
dec
mov
andl
arpl
or
jae
push
jb
jns
add
es
das
mov
xor
sub
push
std
mov
pop
push
call
pop
jl
insl
pusha
imul
fbstp
dec
mov
xor
idivb
fdivs
das
shll
adc
outsb
push
add
pop
scas
jl
adc
adc
out
addr16
sub
push
pop
aam
data16
ret
inc
leave
jns
inc
dec
jbe
dec
pop
aad
and
loop,pt
pop
das
fwait
xchg
gs
dec
aam
mov
ss
test
stc
in
jp
push
call
and
sub
aas
popf
movlps
xor
push
mov
sub
dec
dec
insb
in
aam
int3
ss
xor
scas
dec
popf
jnp
insl
rcrb
jl
mov
mov
xor
mov
mov
sbb
sub
sub
dec
mov
int
xor
pop
inc
push
das
cli
je
and
frstor
jb
mull
into
xchg
push
out
roll
mov
pop
stos
mov
dec
push
mov
and
shr
into
pushf
jb
out
jp
or
jmp
jmp
sarl
xchg
push
jnp
orl
xchg
mov
cmp
pop
into
ja
xor
mov
push
fistl
cmp
or
testb
ss
idiv
call
inc
sbb
push
lcall
test
repz
mov
mov
add
shrl
scas
fldenv
enter
out
out
inc
cmp
je
cmp
adc
mov
cmp
test
cmp
sub
push
dec
in
mov
sbb
jmp
cmpsl
lock
lret
adc
jne
push
push
dec
pushf
test
aas
out
mov
xlat
or
inc
movsb
push
mov
and
repnz
sub
int3
mov
lds
mov
stos
dec
incl
call
loopne
iret
push
xchg
stos
fisubrl
mov
inc
out
xchg
std
mov
or
jge
cmp
sti
cwtl
jnp
in
test
inc
rcrl
loop
inc
stos
xchg
das
adc
fstpt
push
movsb
pop
push
mov
loop
jbe
inc
leave
ficomps
divl
jecxz
mov
xor
or
pop
cmpsl
mov
add
xor
add
jo
adc
cmp
rcrb
xor
mov
push
test
in
jl
cmp
or
aam
ret
sbb
inc
int3
pop
jg
cmpsb
adc
push
loope
jb
jg
cwtl
and
outsb
or
les
adc
jle
xchg
adcl
mulb
push
fsub
xchg
das
mov
cmc
pushf
cs
sub
dec
adc
push
ss
and
jecxz
mov
pop
push
sbb
jne
jle
xchg
int
dec
in
mov
jmp
jle
add
testb
inc
cmp
pop
aad
push
mov
lock
rolb
subb
mov
pushf
fs
fimull
adcb
jecxz
ljmp
fstps
lahf
xchg
cltd
fistpl
push
sbb
fcompl
sbb
cli
push
je
es
sbb
in
iret
loop
out
aaa
inc
pusha
leave
flds
movsl
xchg
xchg
shl
cmp
xchg
rclb
sbb
mov
mov
pop
push
xchg
lods
or
push
hlt
inc
and
je
rcrl
sahf
and
andl
push
movd
inc
push
pop
jge
pop
add
xchg
pop
out
andl
mov
xchg
push
ficomps
and
into
scas
jle
mov
xor
pop
adc
mov
cli
sti
jae
fldt
mov
jns
sarb
jnp
jge
imul
xlat
dec
in
dec
mov
cld
push
fildl
or
inc
sub
enter
push
in
daa
jp
and
sbbl
rep
shr
add
jnp
shlb
xchg
push
scas
sbb
dec
mov
ds
and
nop
sub
jno
pop
cmp
test
lret
out
pop
and
cmpsl
rcrl
fldl2t
push
pop
pushf
bound
xchg
mov
mov
cmp
cmc
repz
fmuls
pop
or
lods
fwait
sub
mov
jo
negb
bound
cmc
xchg
jl
aam
inc
or
jns
pop
pop
cs
adcb
outsb
fcomps
mov
add
mov
cld
stc
stc
stos
fwait
mov
adc
xchg
mov
dec
jl
shrb
xchg
movsl
das
pop
xor
mov
and
pop
xchg
je
mov
imul
xchg
movsb
in
mov
scas
mov
ljmp
int
mov
cmp
xor
add
or
addr16
cwtl
pop
cmpsb
or
xchg
xchg
mov
mov
xchg
add
cmpsb
fsubr
adc
push
lret
cli
cmp
jno
sub
fsts
and
mov
mov
imul
xor
cmc
nop
fldenv
movsb
test
mov
and
sub
fldenv
xchg
mov
xchg
mov
test
sub
mov
rorl
mov
mov
je
pop
lret
xor
imul
mov
fmull
xchg
ret
outsb
cld
out
call
sbb
leave
out
sahf
incl
and
mov
sub
aam
adc
mov
mov
scas
mov
and
pop
jnp
sbb
loope
je
stos
sbb
jmp
cld
push
in
push
scas
pop
lock
cs
inc
push
data16
outsb
scas
inc
pop
pop
jbe
stc
inc
sub
aaa
inc
push
jecxz
pop
popf
cmpsl
mov
sbb
cmp
leave
rorb
divb
dec
decl
stc
pop
cmp
lds
nop
pusha
aam
xchg
xor
mov
lods
es
jbe
test
cmpsl
ja
pop
or
sbb
cld
js
and
inc
cmp
mov
subl
push
scas
xor
and
adc
lea
lods
bound
xchg
push
daa
push
int
mov
insl
and
mov
outsl
push
sbb
sbb
cmc
add
xor
lods
inc
add
lods
lods
push
mov
movsb
pop
iret
cltd
imul
rorb
push
lds
push
xor
call
dec
jo
adc
xorb
mov
ljmp
inc
cli
adc
adc
mov
sub
add
out
lea
inc
mov
or
jge
pop
jo
pop
cmp
mov
lret
je
pop
lret
outsl
aam
and
dec
sub
push
xchg
add
add
sbb
pop
cwtl
js
test
mov
and
enter
test
rcll
jae
fmuls
xchg
adc
jns
push
std
adc
xchg
dec
sub
nop
xchg
or
shr
and
sahf
ret
pusha
lea
outsb
or
sbb
push
aam
dec
push
mov
inc
icebp
pop
lret
push
out
into
hlt
sbb
movsl
cmp
scas
lock
xchg
ss
sub
fs
imul
leave
test
pushf
adc
and
and
lahf
pop
mov
pop
sub
cmp
xchg
imul
out
mov
add
negb
daa
fwait
mov
pop
out
test
cmp
lretw
inc
xchg
movsl
sbbb
or
leave
sbb
and
add
cmp
ja
add
cwtl
popf
lods
xor
mov
pop
xorb
and
mov
xor
dec
outsb
adc
mov
or
fcmovb
jle
cs
loop
js
cs
dec
xchg
jl
push
sbb
mov
sbb
test
movsb
jmp
jge
inc
movsl
sub
ja
cltd
sbb
scas
das
lods
icebp
xchg
pushf
sub
sbb
lcall
ret
sbb
mov
andl
mov
test
pop
push
aam
mov
sbb
pop
add
pop
jge
test
mov
pop
pushf
xor
pop
aaa
daa
xor
xor
sahf
mov
sub
test
out
in
pusha
fs
imul
pop
dec
adc
mov
xlat
and
iret
int
mov
int
adc
lret
cmp
dec
lahf
cmp
adc
fistl
jne
sbb
shll
popa
pop
aas
loope
in
jb
in
add
lods
inc
dec
shlb
pop
or
dec
dec
out
xchg
imul
sub
filds
jns
sbb
and
loope
cmp
out
fwait
xor
inc
sbbl
fldl
js
mov
adc
bound
les
or
sbb
aad
fcoms
roll
mov
lods
or
cwtl
out
sub
fdivrl
lods
aas
ret
lods
enter
jmp
adc
mov
add
mov
cli
xor
mov
popf
sub
and
int
xor
addl
mov
pop
jl
jmp
push
enter
cltd
xchg
pop
outsb
shll
jl
lds
cmp
popa
cltd
gs
sub
jge
test
inc
stos
pushf
icebp
jmp
xor
sub
mov
fwait
lods
cmp
cmp
loope
mov
loopne
repz
inc
shufps
jge
shll
shl
adc
and
sarb
cmp
out
hlt
enter
adc
add
pop
xor
xor
sub
addl
jne
push
inc
cmpsl
inc
pop
ss
ljmp
or
cmp
test
adc
ror
fs
cmp
clc
sub
jbe
xor
leave
cli
ds
lods
and
push
ret
push
cmp
mov
test
inc
jp
xor
dec
movsb
orb
jb
pop
lea
mov
xchg
ljmp
addr16
jae
imul
mov
mov
or
mov
incl
sti
pop
add
loop
jno
push
jle
pop
insb
shrb
sti
rorb
shlb
int3
arpl
push
push
dec
dec
fnstenv
xchg
ds
iret
imul
sub
lods
and
add
cmpsl
pop
jns
xchg
aam
mov
adc
pop
lock
nop
pop
adc
or
ficompl
jb
fsubrl
test
cmp
repnz
test
adc
sbb
add
call
insb
js
xchg
test
inc
rcrl
and
repnz
dec
xor
or
pop
inc
jp
inc
addl
cmpsb
in
dec
xchg
into
push
sub
sarb
push
scas
pop
xchg
loop
adc
aad
mov
int3
adc
dec
ja
inc
xor
ret
mov
push
ljmp
stc
shll
imul
aaa
dec
jne
cltd
cmp
push
aad
ds
xchg
lds
cmp
sbb
test
mov
sub
popa
sub
xchg
sub
cmp
fisubrl
in
xor
dec
loop
imul
mov
jne
xor
rclb
imul
int3
sahf
sub
jmp
mov
loopne
cmp
mov
loope
addl
inc
out
and
repz
fildll
mov
scas
sub
test
out
lea
adc
mov
cmp
addb
xchg
das
pop
mov
xor
es
push
cmp
jb
fisubs
stos
jp
or
or
xlat
jnp
jl
cmp
getsec
inc
repnz
xor
call
sbb
into
sub
sub
sahf
int3
clc
ret
mov
fcoml
and
lcall
sbb
xorl
mov
daa
repz
out
xchg
addb
pop
dec
lahf
loop
push
or
testb
mov
push
mov
mov
pop
mov
mov
jecxz
pop
push
std
mov
mov
inc
push
jg
and
mov
adc
pushf
lahf
mov
sub
xchg
icebp
or
push
pop
adc
xchg
jl
sub
adc
or
lcallw
test
popa
xor
mov
pop
andb
imul
loopne
mov
repnz
movsb
push
mov
pop
dec
or
push
xchg
cmp
enter
pop
and
cli
fstpl
cmp
pop
out
jno
mov
lcall
push
lahf
or
ret
nop
leave
inc
add
xor
stos
mov
xchg
sbb
stos
xlat
cmp
mov
stos
rorb
sbb
pushf
mov
ljmp
jns
mov
jno
fsubr
es
jp
subb
movsb
cmc
dec
clc
fdivs
insl
xor
arpl
rolb
sti
jns
dec
dec
mov
sub
icebp
cmp
xchg
xchg
stos
outsl
sub
ljmp
aam
fxtract
sub
mov
add
xchg
repz
lds
lods
repnz
sbb
mov
and
xchg
out
cli
sti
cltd
rol
les
dec
hlt
dec
adc
mov
ds
inc
xlat
pcmpgtw
xlat
adc
call
xchg
pop
std
push
aam
add
ds
ds
mov
jl
mov
add
add
lcall
cmp
decl
mov
pop
mov
jnp
cwtl
push
cli
div
lahf
aas
mov
nop
fisttpll
xor
inc
clc
fidivrl
add
lods
jns
pop
push
pop
dec
sub
ret
lret
pop
sahf
jge
mov
or
pop
data16
clc
mov
pop
mov
out
push
jp
pusha
xchg
cltd
adc
test
lret
push
insb
mov
or
fs
mov
mov
je
or
lock
mov
fwait
inc
xchg
stos
call
cmp
and
lret
mov
idiv
pop
loop
aaa
adc
repnz
mov
bound
sub
pusha
push
dec
lods
inc
icebp
rcl
adc
sub
push
fwait
cmovne
xchg
scas
cmp
enter
sbb
imul
mov
imul
fisubrs
icebp
lcall
and
xchg
cmp
mov
leave
jae
enter
lock
adc
in
jae
sbb
adc
lods
aaa
shll
dec
add
lods
inc
push
clc
test
xor
jl
fists
jnp
mov
int
loopne
cmp
int
push
sahf
and
xor
imul
push
jecxz
test
test
jbe,pn
and
mov
cmp
sbbb
mov
je
inc
loop
push
int
test
jnp
or
dec
jle
out
jns
sbb
mov
xor
xchg
into
outsl
jg
jo
cmp
in
lret
bound
push
stc
jmp
cmp
ljmp
xchg
jb
testb
mov
and
lcall
popl
mov
push
push
test
outsl
in
xchg
mov
adc
aad
das
testb
xor
and
das
jo
pop
pop
adc
mov
shrl
lods
mov
xlat
sbb
rsqrtps
fs
mov
push
dec
daa
loopne
jns
mov
or
adc
xchg
ror
stc
jo
push
or
fstps
mov
sbb
dec
inc
mov
fisubrl
cmp
scas
cmpsl
outsb
test
pop
ds
addr16
lcall
pushf
jne
daa
arpl
arpl
add
sbb
repz
mov
sti
pop
jns
mov
ljmp
lcall
inc
fidivrs
dec
adc
sbb
notb
fsubrs
mov
out
and
cmp
mov
lahf
push
mov
cmp
mov
ret
jno
dec
bnd
lea
std
sub
mov
adc
inc
faddl
push
cmp
push
or
mov
add
xor
mov
pop
xchg
push
loopne
jnp
je
inc
mov
adc
xor
outsb
xchg
in
adc
mov
or
inc
adc
xorl
mov
mov
mov
mov
mov
stos
pusha
sbb
scas
add
sub
out
pop
mov
movsb
push
ljmp
mov
cmp
pop
test
cmp
cmp
aad
out
js
mov
lcall
sub
adc
add
test
adc
xor
scas
int
and
sub
fidivl
inc
rol
mov
jbe
mov
mov
xchg
jge
fildl
stos
inc
dec
dec
loop
sbb
addr16
inc
jno
and
and
imul
insb
push
mov
daa
ret
rcl
pop
jle
idivl
add
mov
lock
leave
bswap
inc
out
test
cld
repz
popf
inc
sub
je
pop
enter
mov
mov
div
sub
xor
loop
aam
mov
xchg
adc
outsb
movsb
xchg
nop
jl
aas
adc
and
arpl
test
fistpl
imul
pop
push
data16
fwait
mov
mov
push
pop
sub
push
jne
test
add
mov
mov
inc
mov
and
push
sub
out
lret
outsb
rorb
fisubrs
add
test
mov
mov
sbb
sub
sbb
inc
jnp
mov
add
lret
inc
sub
cmc
dec
pushf
jmp
mov
mov
or
xor
gs
sub
cmpsb
jb
popa
or
pop
int3
mov
sub
pusha
cld
push
or
ret
mov
lret
jge
push
inc
jne
xorb
fstl
sti
mov
push
stos
movsl
mov
arpl
cmc
pop
push
sub
int3
ja
jns
out
mov
mov
push
aaa
mov
sbb
and
add
pop
mov
cs
add
nop
lret
dec
dec
mov
cs
mov
and
sub
jnp
mov
ljmp
fucom
add
cltd
shll
mov
movsl
pushf
scas
fwait
cmpsl
pop
add
pop
jae
xchg
push
or
and
sub
fnstcw
lret
push
inc
cmpsl
loope
fdivp
in
or
pop
fbstp
jmp
xchg
insl
out
nop
push
fadd
addb
xor
cmp
jae
pop
mov
in
or
loopne
insb
movsb
nop
push
and
dec
sbb
out
push
out
clc
inc
gs
xchg
add
push
lret
repnz
push
inc
mov
imul
movsb
jo
lret
cmpsb
and
mov
arpl
enter
icebp
push
jp
mov
clc
lcall
test
loopne
push
orb
mov
int3
dec
push
mov
scas
pop
mov
sbbl
dec
cmpsl
loop
mov
add
mov
outsb
jbe
adc
ds
jb
hlt
in
push
add
jle
pop
push
cwtl
aas
pop
jbe
pop
out
mov
je
pop
inc
mov
ja
add
mov
push
inc
out
mov
ret
xor
leave
sub
cmp
dec
push
mov
out
jg
rorl
leave
add
jmp
stc
lret
adc
jge
adc
lret
mov
in
or
pop
mov
sarl
mov
jb
add
sub
xchg
ss
push
lds
sahf
sub
jmp
aas
aas
scas
imulb
aaa
fisubrl
jns
push
idivb
ss
ret
push
adc
loopne
push
outsb
adcb
pop
clc
out
and
mov
jnp
mov
pusha
popf
test
repz
push
int3
jle
ljmp
dec
xor
mov
and
sbb
rcl
pop
ljmp
shrl
stos
mov
addb
mov
mov
roll
cmp
mov
sub
xor
adc
cmp
sbb
sbb
fsubrl
cmc
xor
pop
mov
xchg
xchg
lods
shlb
cltd
mov
aad
ljmp
mov
push
xor
mov
popf
sbb
fbstp
xchg
nop
jne
and
add
les
std
sub
mov
dec
clc
push
sti
idivl
or
jecxz
test
scas
jo
fists
pop
pop
adc
xor
int3
cmp
jmp
outsb
jecxz
cmpsb
lcall
and
xor
push
sbbb
dec
arpl
add
jne
imul
sbb
scas
lock
dec
mov
pusha
rcrl
in
lcall
inc
scas
push
sub
add
jb
push
notb
cmpl
dec
mulps
xor
in
cmp
sub
cmp
in
mov
nop
dec
mov
push
jnp
jno
mov
mov
clc
fstpt
sub
jne
ja
mov
or
mov
inc
xlat
ja
cmp
pop
ret
incb
dec
dec
out
xorb
lods
ja
out
outsl
addr16
xchg
mov
test
mov
mov
movsb
jne
and
test
lcall
and
push
outsl
mov
pcmpgtd
mov
sbb
repnz
pop
out
cmp
sbb
xlat
scas
mov
inc
cmp
fwait
movsl
cld
repnz
jecxz
inc
push
push
ficomps
mov
mov
daa
mov
xchg
into
push
ljmp
lods
push
jb
testb
push
dec
jae
mov
xor
pop
inc
movsl
scas
leave
dec
loop
bound
xorl
inc
cli
aaa
arpl
and
shll
push
imul
xor
or
ja
xchg
fistl
xchg
mov
rcrl
mov
orl
rorl
xor
or
add
mov
mov
cmpsb
aas
adc
pusha
push
push
cmpsb
and
int3
adc
xchg
adc
sti
lock
push
adc
movsb
jge
out
cmp
ss
sbb
hlt
mov
fnstsw
das
lahf
ja
pop
fidivrl
pop
ss
test
pop
aad
dec
mov
jns
jg
fimull
mov
push
rorb
lock
mov
add
xchg
sub
cs
iret
mul
stos
mov
cld
stos
sbb
push
add
into
mov
sub
imul
push
inc
adc
lods
psubsw
adc
inc
gs
test
lock
or
or
loopne
mov
loopne
and
repnz
pop
inc
sti
sub
cmpsb
lods
inc
mov
push
mov
int3
push
inc
jo
imul
cmp
inc
lods
inc
mov
ds
pop
insl
iret
adc
lock
loop
or
ds
enter
jns
imul
mov
clc
loop
sub
outsl
hlt
arpl
mov
mov
add
sub
adc
sbb
cmp
in
cmp
xor
sub
mov
int
call
insb
jmp
cmc
xchg
sub
push
push
addr16
outsb
inc
mov
mov
cmp
adc
aaa
and
add
outsl
pop
and
iret
sub
and
xchg
fxch
and
xor
pop
lcall
cmp
mov
xchg
push
movsl
pop
mov
jl
and
push
jae
dec
xor
divb
add
mov
adc
test
fst
mov
mov
push
jmp
popf
insb
push
fistpll
or
call
addr16
add
push
adcb
mov
daa
jno
mov
mov
imull
fstl
sub
push
mov
xchg
cwtl
pop
dec
dec
and
sbb
lock
fdivrl
xor
pop
xor
in
push
cmp
sub
stos
push
and
push
notb
lret
insb
in
push
and
inc
sahf
inc
push
inc
mov
cmc
mov
mov
sbb
mov
aaa
inc
cmpsb
jne
call
xchg
mov
xchg
mov
roll
cli
test
sbb
sub
insl
cmp
mov
dec
hlt
lret
in
or
stos
mov
hlt
dec
dec
adc
dec
daa
clc
xchg
jecxz
mov
ja
and
pop
mov
mov
inc
lret
icebp
fwait
imul
adc
in
adc
sub
cwtl
sti
testl
jb
repnz
vpcomleb
test
dec
adc
cmp
mov
cltd
inc
cwtl
inc
call
out
sub
xor
sbb
mov
dec
aaa
fnstsw
aaa
fsubrl
sahf
or
ffreep
mov
cmpsb
push
mov
mov
movlps
or
test
fistpl
inc
rcrl
mov
fadds
fcoml
das
dec
inc
mov
repnz
mov
adc
sbb
sub
or
mov
fdivrs
outsb
stos
cld
xlat
xor
xchg
dec
push
push
pushf
dec
add
repnz
sbb
mov
rorb
jns
aas
adcb
jae
adc
test
aam
cmc
mov
push
std
cmpsl
inc
insl
push
test
in
lret
or
lret
in
fldenv
fstps
xor
popa
jl
fstp
push
dec
icebp
xchg
mov
or
mov
add
dec
and
into
push
jge
cmp
sub
mov
push
mov
out
packuswb
jge
inc
neg
mov
mov
adc
adc
pop
sbb
add
in
or
sbb
popf
mov
push
inc
pop
mov
sub
xchg
fldl
push
mov
ljmp
jl
fnsave
cmp
sbb
mov
sub
xlat
mov
lock
mov
xor
mov
mov
cltd
mov
test
xor
fwait
std
xchg
pop
inc
cwtl
mov
fucomip
cmpsl
push
movsl
subb
out
je
sub
sub
in
lret
push
add
add
fistl
push
jl
mov
xchg
or
es
pop
shlb
jae
ret
mov
add
mov
mov
sub
pop
jo
xor
sbb
fwait
mov
movsl
in
lea
in
push
lea
enter
loopne
mov
pop
pop
into
pop
or
mov
mov
sbb
movsl
add
xlat
cwtl
add
mov
mov
mov
cmp
int
sub
insl
xor
adc
lcall
int3
movsl
outsb
sub
dec
push
outsb
sbb
aas
mov
mov
push
and
cmp
dec
fwait
nop
adc
jno
dec
add
lret
dec
aas
stos
ja
je
sub
in
in
lods
icebp
pop
jne
and
lcall
xchg
mov
sub
or
je
inc
mov
cltd
pushf
icebp
push
jne
fnsave
sub
xor
orb
jb
jno
dec
xor
mov
mov
push
xor
fcmovne
sub
add
xchg
js
dec
jecxz
mov
xchg
mov
cwtl
and
mov
or
sti
shlb
sahf
or
fistps
sbb
cld
jecxz
cmp
movsb
cmp
dec
sbb
cmp
adc
add
stos
mov
insb
mov
push
adc
sub
aas
xchg
sub
hlt
cmp
inc
xchg
push
arpl
std
jp
ror
pop
mov
mov
xchg
imul
in
mov
sub
sbbl
fisttpll
mov
jmp
jp
loopne
cmpsl
fwait
scas
dec
fdivrs
mov
inc
mov
cltd
jl
mov
jo
insb
arpl
call
jbe
loop
lea
push
pop
and
jge
adcb
cs
insl
add
mov
add
inc
mov
xchg
test
jle
sub
pop
mov
inc
loope
cmpsl
inc
out
jae
cmp
cwtl
jmp
subl
sub
inc
enter
adc
dec
xchg
int
mov
xlat
xor
push
ljmp
sub
out
and
and
mov
aad
rcrb
fwait
popf
clc
scas
jg
pop
pop
cwtl
outsl
out
mov
jo
xor
or
gs
outsb
inc
pop
add
add
les
out
adc
imul
loope
mov
test
hlt
xor
mov
add
int3
pop
sub
inc
mov
pop
aad
inc
xor
retw
andl
sbb
in
dec
sub
stos
outsb
movsb
mov
sti
test
ret
mov
mov
sbb
cmp
mov
mov
sub
adc
mov
and
int3
in
jmp
xor
imul
outsl
mov
addr16
bnd
pop
outsl
gs
or
mov
in
ljmp
cmc
jo
popf
push
pop
dec
repnz
xchg
aaa
jne
shrb
insl
scas
test
sahf
dec
repnz
sub
push
pop
push
inc
jne
gs
or
adc
stos
lret
in
xchg
xchg
push
or
mov
sbb
pop
in
mov
bound
leave
inc
mov
fidivl
fsubl
mov
jecxz
push
jno
adc
jge
and
sahf
xchg
leave
and
add
and
mov
sbb
arpl
dec
maxps
xor
pop
jb
pop
clc
pop
pop
test
imul
xchg
int3
clc
mov
idivl
dec
xor
xchg
dec
repnz
test
cld
je
sbb
xchg
mov
or
or
mov
int3
imul
or
sub
xor
pop
mov
cwtl
sub
sahf
mov
inc
pop
repz
xchg
ss
stos
xchg
lcall
scas
jecxz
push
cmc
cmp
jmp
mov
adc
insl
out
mov
frstor
in
stos
ja
cld
out
and
jnp
sub
jno
xchg
in
lds
mov
push
mov
smsw
jecxz
scas
pop
mov
xor
std
lods
push
aad
or
sub
mov
test
pop
maskmovq
divl
jns
sbb
jp
cli
aaa
es
jecxz
mov
xchg
icebp
sar
mov
xchg
jo
call
sti
repz
ljmp
pop
fs
xchg
push
xchg
ret
lods
sarl
rclb
mov
sbb
gs
shll
mov
scas
sub
es
mov
mov
outsb
inc
push
jge
or
jl
jae
or
lods
fucomp
test
mov
ja
and
mov
adc
popf
in
testb
inc
aaa
mov
mov
fs
and
sahf
jo
pop
cmp
push
mov
inc
xchg
test
mov
add
jb
xchg
mov
outsb
inc
xor
adc
xor
mov
jecxz
mov
scas
push
cmp
mov
fs
insb
stc
push
int3
je
mov
pop
out
stos
and
js
and
sub
mov
xchg
test
jae
jnp
addr16
sbb
outsb
fcoml
cmp
sub
jne
std
out
test
in
stos
xchg
cs
gs
je
inc
outsb
std
stos
xchg
idiv
cmp
push
push
cmp
jg
or
dec
sub
dec
cmp
test
pop
cmp
cmpsl
arpl
xchg
jmp
imul
mov
jge
fcomps
mov
add
in
mov
inc
pop
sub
adc
mov
xchg
sbb
sbb
daa
aam
jg
out
xchg
sbb
inc
test
and
dec
leave
push
mov
pop
fwait
pusha
push
mov
js
mov
cld
mov
dec
xor
cwtl
mov
lea
sbb
mov
and
add
shll
push
xchg
or
aad
rolb
sub
sbb
or
aam
cltd
ja
lret
sbb
or
cmp
cmpsl
cld
ljmp
mov
sub
shrb
test
mov
pop
and
cmp
fidivs
xor
imul
and
in
fsubrs
adc
sbbb
lock
push
xchg
daa
pop
imul
arpl
hlt
daa
cmp
cmpsl
lcall
leave
mov
xchg
sbb
inc
mov
sub
push
ds
lret
push
cld
mov
mov
adc
int
xor
cmp
adc
or
xchg
push
push
popa
ficoms
int
push
or
cwtl
repz
flds
repnz
scas
in
jns
or
and
add
cmpsb
jp
sbb
mov
mov
iret
popf
add
add
testl
shlb
pop
push
mov
push
fdivrs
or
movsl
pop
loopne
sub
mov
movb
jbe
xor
mov
mov
sub
insb
test
xchg
lret
push
mov
adc
push
or
imul
notl
push
loopne
out
movsb
adc
shll
lock
mov
pop
test
cmp
sub
inc
jnp
das
test
mov
ss
push
push
daa
ja
dec
test
sub
mov
cmp
ror
jnp
popf
sub
sbb
dec
or
mov
jmp
xchg
in
push
xchg
jo
shrb
mov
jl
bnd
mov
leave
pop
nop
cmp
out
jnp
dec
inc
es
das
dec
mov
adc
rcrl
sbb
or
out
add
fs
dec
call
mov
xchg
movsl
aas
or
repz
mov
ja
jns
push
push
cmp
pop
dec
les
mov
adc
pop
mov
cltd
mov
xchg
xor
pusha
jecxz
push
lods
test
gs
mov
in
adc
sbb
jne
adc
sahf
shlb
mov
mov
sti
cli
lods
and
push
mov
xor
and
mov
xlat
adc
inc
xchg
jp
imul
loope
cmp
push
push
int3
sbbl
loope
repnz
adc
mov
cmpsl
jge
ret
adc
jg
ja
mov
stos
sub
shll
ja
cmp
inc
mov
pushf
sbb
push
inc
arpl
clc
bswap
in
mov
mov
cmp
xchg
aad
ja
fisttps
aad
stos
and
or
xchg
clc
adc
add
xor
adc
cmp
or
push
mov
stos
sub
mov
lock
pop
cltd
push
lods
adc
scas
xlat
pop
inc
test
cmpl
enter
dec
fistpl
cmp
or
out
in
pop
lock
and
cmp
mov
mov
adc
sub
mov
mov
mov
rorl
push
mov
sub
cmp
add
cmp
clc
add
push
push
xor
mov
imul
push
push
je
mov
bound
in
adc
pop
in
mov
loop
push
lcall
lds
adc
test
ljmp
sbb
add
cwtl
movsl
push
xchg
jns
popf
not
subb
mov
xchg
dec
mov
dec
loopne
testl
fs
iret
sub
mov
pusha
lods
xor
rcl
sub
in
mov
mov
pop
xor
mov
not
stos
cmp
mov
jmp
sar
enter
retw
push
mov
mov
cltd
pop
xor
daa
push
data16
jo
mov
push
cmp
lods
in
das
inc
or
adc
testl
mov
pop
lret
and
dec
inc
loope
and
arpl
shrl
lods
fdivrs
cli
out
mov
add
in
stos
push
mov
icebp
cmp
cmp
ret
shll
inc
cmp
roll
cmpsl
adc
pop
and
icebp
jp
sub
push
insl
repz
fisubl
pop
out
xor
cmc
movsl
cmp
inc
aaa
movsb
add
shll
es
scas
sub
arpl
test
dec
pop
jno
notl
cmp
and
ljmp
inc
sub
in
outsb
cmp
xor
and
push
bound
cmc
mov
pop
inc
and
test
sub
push
jns
fwait
stos
icebp
test
rcll
sbb
jae
pop
lods
xchg
test
aas
mov
sub
inc
aad
dec
jne
loopne
mov
pop
or
inc
xchg
xchg
lret
add
sub
xor
cmp
adc
pop
jo
mov
loope
shlb
addr16
inc
rcr
cwtl
out
ss
push
ret
fdivs
push
dec
adc
cld
xor
jnp
push
lcall
loopne
adc
ret
shl
xchg
insb
sbb
push
jg
iret
jle
xchg
pop
mov
and
insb
lcall
cltd
xor
push
test
jo
and
adc
insb
inc
dec
xor
arpl
jb
in
sub
mov
mov
dec
sbb
pushf
sub
cmp
sub
cmp
mov
xor
fcoms
idivb
imul
pop
inc
movl
call
pop
into
cmp
adc
and
mov
andl
inc
jbe
test
mov
jl
cld
sub
lcall
sarb
fsubr
dec
dec
rcr
mov
jecxz
mov
xchg
pop
movsl
or
loop
mov
addr16
dec
mov
mov
idivb
push
and
jo
movsl
ficoml
cli
stos
loopne
sbb
loop
xor
xorl
test
and
cltd
movsb
mov
adc
in
out
loopne
lock
not
push
xchg
jo
jo
dec
mov
and
cmpsl
and
xor
movsb
shll
int
loope
push
js
mov
int3
insb
out
push
fldcw
adc
mov
in
loop
pushw
xor
sbb
pop
push
pop
push
sbb
push
enter
pushf
cli
push
rol
insl
lods
or
or
xor
and
shll
fstl
jno
mov
movsb
or
in
fisubrl
jecxz
leave
mov
add
push
int
sbb
push
or
push
imul
lret
test
xor
jo
dec
lret
inc
leave
pop
fildll
movsb
xor
sbb
in
das
stos
add
clc
mov
dec
push
adc
rorb
clc
in
inc
scas
adc
push
pop
lods
arpl
sbb
test
add
js
mov
push
aaa
outsl
cmp
dec
jb
push
test
mov
pop
xor
ret
and
imul
sbb
fdivrs
jle
mov
shl
aam
mov
sub
cltd
iret
xor
inc
cmc
and
cmp
repnz
sbb
and
push
cli
mov
dec
movsl
mov
dec
divl
cmpsl
dec
push
jmp
shl
fcmovnb
mov
lcall
add
icebp
sub
and
lcall
jl
xchg
mov
test
adc
outsl
scas
xchg
jmp
enter
pop
cwtl
mov
xchg
mov
inc
inc
or
js
aam
xchg
jo,pt
lods
xor
or
jmp
mov
xchg
push
jmp
call
pop
lock
fiadds
repz
cld
xchg
xchg
xor
xchg
jp
popf
ss
xchg
mov
popa
out
adc
push
pusha
out
xor
iret
mov
lea
dec
pop
aas
mov
aaa
imul
pop
lock
add
movsl
cmp
inc
mov
mov
dec
gs
mov
nop
insb
in
or
adc
mov
inc
xor
inc
or
mov
or
in
mov
push
lods
mov
fs
jne
mov
fstl
xor
xor
loopne
jecxz
jecxz
adc
sti
repnz
lret
mov
into
mov
ret
jmp
sub
add
int3
pop
mul
mov
out
jp
dec
test
xor
dec
jmp
push
or
xchg
test
fisttpl
scas
repz
movsb
sarl
mov
imul
fldcw
push
loop
insl
xchg
pusha
or
mov
jmp
or
sub
icebp
jb
stos
jbe
sub
jmp
stos
lds
cmc
or
sahf
mov
xchg
rsm
shrl
push
adc
mov
pop
cltd
mov
je
lahf
jg
pop
jae
notl
dec
xor
je
sbb
cmpsl
xor
cmp
cld
repnz
xor
fisttps
mov
or
mov
sbb
rolb
fistps
mov
iret
add
fmull
mov
add
leave
jge
int
iret
mov
mov
dec
mov
push
sub
push
jmp
movsb
repz
inc
dec
xor
aad
ret
aaa
mov
push
addl
mov
mov
aaa
add
mov
dec
stos
dec
xorb
test
dec
cltd
cs
xor
fcoms
lahf
mov
adc
sbb
cwtl
imul
cmpl
pop
jb
xor
lcall
sub
mov
xchg
dec
ljmp
xor
loop
mov
jmp
or
int3
mov
sub
js
jl
cmp
xchg
popa
leave
and
mov
jo
mov
mov
mov
scas
dec
push
push
sub
ret
das
and
xor
scas
xor
pop
inc
and
push
xor
shll
les
popf
cmpsb
enter
dec
rcl
cmp
dec
sti
imul
push
pop
loop
lods
jnp
mov
mov
xorl
jno
sub
cwtl
insl
es
and
movsb
sahf
lahf
in
pop
loopne
dec
out
repz
sbb
ja
mov
sbb
repz
mov
pop
mov
push
xor
enter
cltd
dec
xor
push
add
add
bound
cmp
jne
cmp
pop
add
dec
xchg
inc
jecxz
pop
in
test
addr16
rcl
in
outsb
imul
jge
push
cmpsl
add
dec
xor
add
outsl
pop
adc
nop
inc
sbbl
clc
xor
mov
inc
fldenv
stos
or
repnz
nop
out
imul
mov
dec
adc
outsl
pop
rclb
dec
push
mov
xchg
sbb
leave
imull
xchg
push
mov
adc
dec
push
or
sbb
add
jnp
add
divb
je
mov
mov
jbe
push
pop
sti
jmp
pop
lret
data16
mov
mov
inc
adc
push
inc
outsl
mov
jmp
sbbb
dec
and
and
lret
push
aad
mov
mov
xchg
sahf
imul
loopne
pop
push
daa
or
push
mov
cld
mov
jnp
sub
dec
sub
lea
push
mov
movsb
add
pop
test
ret
dec
add
xorb
lret
push
lcall
stc
iret
cmp
movsl
xor
mov
mov
inc
inc
aad
lods
in
mov
xchg
pop
insb
in
inc
flds
xchg
pop
clc
or
addl
nop
hlt
mov
scas
mov
imul
xchg
jno
cmovl
add
xor
xchg
inc
lahf
bswap
mov
addr16
aaa
jno
out
adc
lea
inc
adc
dec
out
cmp
sbb
dec
dec
push
and
aaa
mov
dec
cmp
push
inc
lahf
jge
mov
mov
pop
movl
add
test
push
lods
xchg
mov
cmc
push
cmpsb
xchg
mov
mov
ljmp
cmpsl
andb
mov
in
sub
mov
mov
pushf
nop
or
stos
pop
mov
stc
mov
inc
test
mov
xchg
cld
lock
sahf
or
stos
mov
std
loopne
dec
jmp
lods
cwtl
mov
sbb
fdivl
call
jmp
fidivrl
mov
mov
fsubrs
rclb
jl
rcrl
lods
mov
mov
loopne
mov
std
enter
jbe
jbe
cmpsb
cmc
je
inc
lods
aaa
cmp
and
dec
ljmp
mov
sub
cmp
int
push
std
dec
lret
mov
inc
scas
adc
mov
mov
out
dec
sarb
cltd
pop
xor
dec
mov
cli
dec
out
add
push
les
clc
loop
jmp
or
xchg
mov
fsubs
jmp
out
inc
stos
jb
mov
mov
test
sar
add
pop
cmpsb
jbe
pop
xchg
inc
ret
rol
jbe,pt
call
xor
and
out
mov
xorl
xchg
test
iret
jo
lcall
test
clc
sub
xor
push
out
jg
sub
test
mov
jle
in
in
cmp
pop
sub
fmul
stc
sbb
stos
rol
insl
movsb
xchg
add
xchg
dec
push
mov
mov
sub
leave
adc
imul
in
mov
xor
cmpsl
aam
adc
icebp
fsubr
jne
std
xor
push
outsl
pop
or
xor
push
shlb
cmp
and
push
cmpsl
pop
cwtl
and
in
popf
adc
pop
sbb
adc
mov
mov
stos
inc
sbb
jg
xchg
push
pushf
inc
pop
cmp
int
push
fidivrs
int3
or
fidivrl
sub
inc
aad
mov
mov
cmpsb
cwtl
jl
test
insb
cmpsb
mov
scas
push
xchg
jo
or
inc
fs
sub
cmp
add
cmpsb
jp
cmp
fistpll
inc
push
les
adc
adc
push
inc
popa
jb
rclb
inc
mov
push
dec
shlb
mov
in
in
sahf
dec
testl
xchg
lock
jge
adc
lret
xchg
sub
incb
mov
adc
bound
out
ss
testb
fs
inc
push
push
sbb
inc
bound
inc
stc
sti
lods
xor
in
cmpsb
pop
push
or
inc
fidivrl
adc
sbb
dec
or
outsl
shlb
mov
sub
mov
inc
mov
mov
cmpsb
pop
mov
jbe
dec
in
mov
gs
fcomps
int3
mov
adc
cli
dec
inc
inc
ds
xlat
ljmp
mov
xor
lahf
add
dec
aaa
data16
jb
xor
xchg
push
mov
cmpsb
sub
rcrl
lret
addr16
jb
cwtl
adc
xchg
cmpsb
out
mov
rcl
adc
outsb
arpl
add
orl
lret
inc
xor
fidivs
ja
lahf
cmp
mov
test
jmp
jne
and
mov
or
leave
movsb
sub
iret
sti
push
fists
imul
aam
push
pop
sbb
adc
test
xor
imul
aam
sub
mulb
xchg
inc
mov
rcll
not
flds
push
xor
and
loop
jmp
sub
or
cltd
lret
mov
dec
bound
xlat
inc
sub
cmp
xchg
rcr
cmp
mov
sub
push
mov
popa
imulb
xchg
mov
cmpsl
sbb
mov
jp
pop
jns
test
psrad
lock
xor
sbb
mov
xlat
inc
call
xchg
push
xlat
test
add
fsubr
lahf
xor
shl
cmp
fcoms
add
pop
push
iret
in
leave
dec
xor
cwtl
scas
xchg
out
fs
xchg
insl
push
cmp
stos
xor
scas
push
shrl
sub
add
jno
jno
test
ror
sbb
pusha
adcb
fiadds
sub
mov
ljmp
dec
lds
xchg
mov
stos
jae
addr16
cmp
or
out
jg
lcall
adc
push
leave
addr16
mov
cmovo
xchg
test
test
mov
loopne
movsl
fisttpll
sbb
ficompl
bound
notb
jge
mov
or
push
rcrl
pop
inc
loope
je
sub
sbb
imul
fdiv
lahf
cmc
insb
and
sub
ds
neg
out
push
dec
enter
mov
bound
in
loop
sub
jo
data16
lock
jge
mov
jns
and
popa
cli
std
dec
shrb
mov
push
add
pop
jno
fstpt
iret
xor
pop
xchg
fldcw
jno
or
inc
pop
sti
adc
cli
out
add
xchg
push
push
push
mov
xor
enter
push
leave
mov
fidivl
shl
dec
dec
xchg
cmpb
adc
lret
and
shrb
in
sbb
aad
lock
adc
mov
lea
inc
jg
lods
xchg
xor
pop
and
addr16
daa
enter
sbb
dec
test
stos
dec
pop
push
mov
andl
lods
je
movsb
flds
int
into
xchg
jg
mov
sbb
xchg
xchg
mov
push
cld
dec
sub
mov
aaa
xor
add
out
cmp
shl
cltd
dec
fsubrs
js
xor
ret
ljmp
andl
sbb
into
jg
cli
sbb
hlt
mov
ret
movsl
fwait
scas
in
pop
add
and
sub
mov
fwait
fs
jg
inc
jl
scas
or
adc
push
pop
mov
jmp
inc
fisttpll
mov
mov
hlt
insl
repnz
add
push
mov
imul
mov
sbb
push
sbb
push
shlb
lret
jge
jge
fwait
xchg
pop
dec
bound
pop
imull
movsb
xor
mov
mov
inc
and
mov
in
sbb
adc
ret
xchg
test
orb
sub
sub
sbb
leave
scas
add
jns
sbb
sub
sbb
popa
inc
sub
inc
jbe
lret
lret
mov
scas
es
cmp
push
leave
cmpsl
cmp
push
jno
into
mov
and
popa
rorb
ss
and
cmp
rolb
es
add
shr
sbb
movsb
aam
xlat
adc
call
pop
jl
xor
test
fsubrp
xchg
sbb
lods
jns
mov
div
lahf
lods
dec
inc
aas
ja
mov
pusha
push
xchg
sbb
dec
mov
addr16
lea
xchg
adc
mov
mov
imul
pop
mov
cs
into
stos
cmc
and
fisubs
adc
mov
out
ret
and
push
sahf
sbb
dec
cmp
xor
mov
adc
in
dec
scas
mov
mov
mulb
cmp
fistpl
cmp
stos
das
mov
ds
ret
cmp
fiaddl
in
cmp
in
std
mov
lea
shr
jae
push
mov
pop
dec
jns
icebp
sbb
sbb
push
jp
lret
push
xchg
cli
mov
lcall
jg
in
int
xchg
sub
pop
or
jg
cmpl
out
dec
adc
and
mov
adc
add
inc
jns
mov
shlb
add
test
xchg
inc
lds
jmp
or
lock
mov
pusha
mov
and
das
repz
nop
mov
ds
mov
arpl
bound
inc
lret
inc
or
add
dec
adc
cmp
add
and
repz
jns
mov
cmp
imul
pop
pop
cmp
adc
and
ja
lods
int3
fdivr
shlb
adc
adc
jmp
pop
mov
ret
inc
mov
mov
xor
fmulp
inc
push
and
jg
cmp
dec
movzbl
cmp
mov
fwait
lcall
and
loope
mull
adc
mov
pop
push
dec
mov
push
rcrl
aas
mov
daa
daa
rorl
jne
dec
stc
or
push
mov
cmp
jnp
mov
stc
imul
rolb
rorl
pop
ret
sbb
jnp
add
or
daa
mov
push
mov
out
dec
inc
loope
rolb
pop
dec
jbe
adc
push
ja
iret
xchg
add
jb
lea
ret
and
fimuls
xor
jecxz
ds
sbb
movsl
cmpsb
push
outsl
push
adc
push
adc
movsl
adc
mov
adc
inc
nop
dec
mov
mov
ds
xchg
lods
push
pop
push
daa
std
jnp
and
cmp
mov
jl
cmp
mov
push
mov
clc
repz
sbb
or
dec
pop
insb
inc
push
pop
out
mov
mov
bound
in
jmp
imul
push
sahf
and
xchg
add
add
dec
push
cmp
mov
scas
loope
subl
cmp
sub
ret
ret
mov
pop
mov
cmc
push
iret
mov
imul
lds
inc
movsb
add
xchg
repnz
add
inc
inc
ficompl
repnz
shrl
push
data16
hlt
xor
movsl
cmp
stos
pop
or
adc
hlt
jno
popa
cli
out
xor
inc
mov
xchg
gs
pop
daa
into
xchg
pop
loopne
in
inc
xlat
sahf
es
push
test
outsb
fsts
lock
jle
mov
mov
in
rorb
mov
jmp
jle
mov
and
test
xchg
xor
lds
or
mov
xor
das
sbb
rclb
imul
gs
cmpl
add
fimuls
jae
mov
pushf
lcall
inc
enter
pushf
xor
sbb
sub
add
dec
pop
add
shrb
dec
insl
movsb
test
gs
or
iret
adc
scas
mov
jmp
repz
in
call
in
sub
jne
out
push
or
inc
pop
jb
inc
dec
or
pop
outsb
dec
add
clc
mov
xlat
cltd
std
loop
adc
mov
mov
lret
xor
loop
or
aad
xor
xor
call
subb
es
xchg
movsb
mov
ret
movsb
pusha
out
dec
test
das
sub
imul
inc
jmp
sbb
sub
mov
xchg
mov
or
sub
bound
mov
mov
icebp
aam
ret
pop
pop
sub
mov
jne
pop
xchg
popf
sbb
cmp
mov
pusha
mov
pop
icebp
jmp
popa
jnp
add
dec
jno
ja
dec
push
push
addl
lahf
xor
popf
adc
mov
sahf
pop
ljmp
xlat
inc
adc
add
sbb
push
dec
ds
jne
pop
xchg
pinsrw
mull
inc
mov
jbe
mov
hlt
push
stos
xchg
ja
adc
inc
negb
mov
xchg
fildll
dec
daa
or
loop
cmp
sahf
shll
cmp
sub
add
add
pop
aas
xchg
popf
addr16
jns
mov
idiv
shr
mov
dec
nop
cmpsb
stos
push
xchg
mov
pop
and
lcall
data16
pop
enter
or
lods
push
sahf
jl
xchg
shll
push
stos
push
jge
fwait
pop
clc
sbb
jno
adc
aas
adc
add
pop
andb
add
ficoms
into
add
inc
lcall
jae
ljmp
xchg
out
in
movsb
popf
out
test
insl
cmp
cltd
jno
sbb
xlat
imul
leave
loope
mov
outsl
xchg
dec
mov
cld
push
rcrl
fstl
mov
sbbb
jecxz
adc
cmp
sub
add
clc
leave
adc
and
loopne
dec
loope
jb
push
hlt
cs
stos
inc
mov
je
in
adc
icebp
inc
and
pushf
enter
cmc
cwtl
repz
hlt
push
aas
sbb
inc
add
dec
shll
mov
shr
and
sarl
mov
lret
cmpps
repnz
push
lods
mov
je
out
push
stc
inc
ret
xchg
fdivrl
pop
jmp
sarl
mov
in
lods
push
dec
int3
xor
mov
stos
stos
adc
mov
ja
fadds
inc
lcall
fdivrs
mov
in
loop
xor
bound
sti
inc
jnp
int3
cmp
lahf
fiaddl
repz
jne
rorb
or
das
insb
loope
sti
insl
sub
inc
in
rcll
and
int3
adc
pusha
stc
and
fsubrs
jnp
jno
push
pop
out
sahf
mov
add
sub
in
mov
fsub
and
fs
in
outsb
stos
add
xchg
adc
int3
adc
mov
push
pop
adcb
je
insl
iret
lds
add
repz
repnz
in
in
mov
sub
psllw
inc
daa
pop
mov
jnp
pusha
test
mov
lret
push
lcall
pusha
mov
cmp
sbb
fs
jecxz
jbe
test
inc
cmp
ds
jae
mov
mov
mov
out
xor
mov
mov
or
pop
cmp
fistps
mov
lret
cmp
and
push
jge
aaa
xor
and
mov
ror
pop
cmpsl
xor
or
jns
adc
xor
or
arpl
or
dec
leave
mov
movsb
mov
daa
jnp
stc
sub
dec
cmc
je
mov
jg
mov
and
imul
or
lods
adc
mov
sbb
mov
push
lds
bnd
ret
and
test
addr16
mov
push
adc
clc
hlt
jbe
out
dec
sbb
xor
xor
mov
pop
mov
xchg
ficoml
mov
repz
fisubs
aam
inc
mov
daa
inc
or
sarl
cmp
mov
dec
adc
inc
pusha
push
fwait
sub
push
call
and
add
jns
push
sub
data16
mov
inc
inc
sbb
xlat
dec
cld
or
pop
lahf
outsb
adc
or
cld
pop
test
adc
push
and
jmp
and
test
dec
aas
arpl
aas
sub
addr16
inc
or
test
addb
add
and
movsb
hlt
rorb
mov
shrl
test
dec
popa
push
mov
cltd
aaa
push
inc
out
es
push
fs
sub
cmp
ds
test
loope
xchg
xchg
dec
fbld
push
mov
adc
and
and
push
pop
adc
aad
scas
ds
clc
test
dec
stos
add
sub
dec
imul
dec
mov
or
xchg
jle
hlt
or
orb
push
aaa
loop
pop
ret
sbb
jmp
mov
jge
jl
or
xor
pop
cld
movsl
aas
xchg
cmp
fwait
dec
mov
dec
aas
pop
sub
add
dec
int
mov
push
loop
ljmp
jle
sub
jmp
mov
nop
jmp
mov
insl
xchg
int3
rol
push
cwtl
cmp
sar
adc
push
lock
dec
fninit
call
out
arpl
sbb
sub
bound
aas
int3
mov
cltd
insb
push
and
in
in
push
out
xor
je
mov
lcall
cmp
dec
jne
aam
mov
call
das
xchg
xor
mov
or
add
pop
aam
outsl
fwait
xor
mov
fdivp
fisttpl
cld
mov
pop
loope
out
pop
xor
fucom
push
out
dec
dec
sbb
sub
xor
js,pt
in
xor
mov
add
jle
jle
inc
sub
cld
push
outsl
sbb
insb
scas
loopne
sbb
mov
lods
cmp
in
xor
in
xchg
enter
lods
jge
sub
insb
fldl
in
inc
pop
subb
and
or
insb
insb
shlb
enter
bound
sub
aam
push
mov
js
fst
xor
aaa
enter
lcall
mov
dec
push
gs
jo
dec
sbb
add
sub
ret
bound
jg
test
hlt
sbb
pop
push
je
movzwl
or
rol
cmpsl
mov
data16
push
repz
sub
cld
ficoml
push
or
fbstp
lock
sbb
add
scas
mov
leave
fcom
add
cmpsb
ficompl
stos
int
push
popa
cmp
cmp
push
mov
movsb
mov
add
mov
cmp
shll
loope
jbe
dec
decl
push
and
inc
jb
xchg
push
les
pop
in
adc
xor
adc
inc
js
push
mov
mov
push
pop
dec
sub
cmp
push
jbe
stos
pop
jbe
lret
adc
adc
cmp
cld
lea
cltd
mov
rcrl
pop
jl
ja
adc
mov
mov
sbb
in
fdivs
test
loop
jmp
push
mov
fnstcw
xor
xor
cmp
daa
lods
jle
xchg
in
aam
bound
mov
je
cmp
iret
loopne
stos
or
dec
or
cwtl
sahf
jmp
shr
jns
jnp
bound
ret
or
clc
sub
push
jns
outsb
and
jnp
aad
lods
bound
pop
and
cld
test
call
imul
shl
test
push
pop
cmp
rcll
cmp
xchg
std
push
nop
fidivs
and
xchg
shlb
jno
pop
aas
jle
and
jle
adc
test
test
fcmovnbe
jno
inc
xor
out
or
mov
loope
in
mov
mov
mov
pop
lahf
or
xchg
mov
xlat
mov
dec
xor
notl
xor
jns
sub
pop
test
mov
lahf
xchg
xchg
or
and
mov
aas
dec
movsb
scas
jnp
sub
in
jne
mov
xchg
sub
iret
nop
dec
adc
jo
leave
gs
imul
and
sbbb
dec
pop
mov
adc
cmc
fcos
loopne
and
xor
mov
or
out
lock
ret
test
nop
lods
and
ret
mov
in
movsb
and
mov
stos
inc
cmp
mov
mov
inc
lods
xor
daa
out
mov
lea
mov
xchg
push
sahf
pushf
inc
es
ret
and
rcl
cmc
pcmpgtd
add
pop
add
push
xchg
or
into
sbb
jns
or
scas
mov
ffreep
mov
lret
jo
imul
sbb
jecxz
push
pop
inc
or
xor
adc
jmp
dec
jnp
pop
jo
xor
pop
push
loopne
les
inc
outsl
mov
daa
hlt
mov
pop
out
mov
aaa
jg
leave
mov
sarl
orl
dec
testl
xchg
dec
out
scas
xor
xchg
jbe
lcall
add
sti
mov
sahf
les
pop
push
mov
insl
push
cmp
std
pop
imul
inc
cmp
pop
popf
sub
or
leave
out
testl
int3
xorb
inc
mov
adc
mov
add
add
inc
push
aas
pop
cwtl
dec
cmp
jne
or
cmp
add
nop
cmp
in
sub
or
stos
pop
mov
push
jle
ds
cmp
dec
push
sub
pop
mov
shr
out
pop
add
out
aaa
jbe
daa
and
test
mov
jnp
testb
cmp
leave
orb
mov
dec
std
stos
insb
roll
mov
xchg
ret
int
xchg
sbb
add
xchg
arpl
cltd
fadd
clc
insb
push
ret
fcomps
in
xchg
loopne
sti
sbb
call
stos
xchg
cmc
cmpsb
movsl
ret
push
and
push
movsb
mov
ljmp
push
mov
pushf
imul
imul
std
mov
sbb
xorb
notb
jnp
adc
push
movsb
cmpsb
xchg
jg
iret
mov
idivl
and
loopne
cwtl
sub
sbb
xor
xchg
hlt
pop
test
call
popf
stos
and
mov
push
sbb
addr16
sub
sub
out
pushf
jmp
lea
and
stc
sub
dec
pop
subb
inc
cmpsb
and
imul
cmp
ret
add
dec
xor
add
inc
std
mov
mov
into
mov
orb
push
cld
es
sub
jl
ficoms
js
inc
jne
jmp
cmpsl
mov
loop
or
or
push
imul
cmp
sahf
je
int3
lds
inc
cwtl
icebp
jl
xor
fiadds
push
inc
pop
push
stc
jb
push
cmp
das
js
std
cmpsb
xchg
mov
inc
adc
jo
pusha
xor
movups
mov
jne
push
jae
shlb
aas
mov
test
mov
and
in
not
lahf
loope
insl
packssdw
sbb
shlb
pop
mov
dec
pop
lret
xor
inc
popf
shll
cmp
fdivrs
push
movsl
cwtl
pop
pop
enter
sub
je
lods
les
mov
aas
ficompl
xor
stos
stos
or
fdiv
mov
aad
loopne
mov
adcl
push
sbb
mov
push
pop
pop
insl
adcl
jo
dec
pop
and
pop
nop
mov
in
pop
cli
aad
xchg
out
test
pop
jecxz
fidivl
outsb
xor
out
mov
and
mov
dec
jns
mov
ficoml
sahf
jb
dec
ja
fsts
movsl
cmpsl
and
cwtl
enter
addl
clc
test
ja
or
xor
je
xchg
test
push
frstor
das
jb
or
jmp
pop
mov
clc
idivl
pusha
add
sbb
sbb
in
test
dec
rolb
mov
xchg
imul
test
mov
add
fnstsw
leave
adc
add
xorl
loopne
stc
sbbl
in
inc
inc
mov
adc
cmp
int
mov
mov
pusha
fstps
mov
repnz
out
and
repnz
push
cltd
fcomp
mov
pop
xor
add
xrelease
repnz
mov
stc
in
mov
xor
jbe
dec
imul
cmpsl
and
cmc
mov
adc
out
pop
push
adc
fdivrp
cmp
scas
ret
xor
or
movsl
aad
mov
mov
inc
mov
sub
add
pop
pushf
jae
ret
in
ret
testl
insl
sub
dec
cmpb
or
insl
xchg
sahf
jecxz
sbb
fucomip
mov
hlt
xchg
cld
mov
xor
bound
inc
lods
insb
push
push
and
cmc
xchg
fiaddl
mov
mull
push
dec
sarl
ja
push
add
pop
movsl
xchg
dec
lods
lret
inc
pop
push
xchg
inc
adc
add
loop
dec
call
push
add
xchg
mov
cmp
mov
ror
jle
xor
data16
lock
sti
sub
add
arpl
sub
fcomps
and
inc
lods
sbb
daa
mov
cmp
int3
or
xchg
addr16
icebp
ss
mov
aaa
mov
sub
push
mov
or
ja
gs
mov
je
scas
enter
rorb
movsb
xor
and
mov
fidivrs
mov
sti
jno
fs
stos
les
test
inc
xlat
enter
in
xchg
loop
push
inc
int
stc
pop
ja
imul
into
std
sahf
add
rcrb
mov
sahf
adc
add
dec
mov
hlt
xchg
stos
fdiv
inc
push
mov
mov
cmpsl
or
xlat
fwait
add
outsb
adc
shrb
or
iret
mov
test
xor
popa
inc
in
fs
int
pop
cwtl
adc
mov
and
pop
or
xchg
and
jle
cmove
dec
das
int
sti
mov
int
xor
clc
arpl
sti
scas
daa
mov
js
in
pop
pop
mov
in
pop
fisttpll
xor
sbb
dec
mov
loopne
aas
lock
hlt
mov
sbb
ret
mov
adc
filds
imul
aad
stc
push
test
movsb
imul
loopne
fdivs
lcall
jecxz
push
pop
push
lock
icebp
je
ds
push
mov
pusha
mov
lahf
loop
pop
lea
dec
adc
in
jecxz
xchg
in
push
mov
ds
sti
gs
hlt
cmc
gs
out
popl
stos
stc
jmp
repnz
push
mov
jo
jo
xchg
cmc
pop
dec
lahf
test
xchg
adc
jbe
clc
pop
xlat
mov
sbb
mov
out
mov
nop
fcomps
test
jb
lret
stos
fnstenv
cmp
mov
fistpl
dec
add
xchg
xorb
insl
cld
pop
cs
fldl
sub
repnz
cs
out
and
sar
pop
or
inc
or
jmp
mov
or
addl
xor
mov
pusha
jmp
sub
cld
aaa
test
xlat
dec
inc
cmp
iret
call
pop
inc
mov
mov
ss
pop
mov
push
cmp
cmp
pop
std
mov
mov
jle
outsb
scas
add
mov
and
xor
ja
cmpsl
inc
pop
mov
or
and
sbb
lret
mov
jne
imul
stc
cmp
xchg
fildll
sbb
mov
push
inc
movsb
dec
cmpsb
dec
scas
enter
mov
fstl
sub
in
sti
popa
add
add
imul
jmp
dec
sub
rcll
xchg
add
cwtl
mov
divl
xor
xor
lcall
clc
cmc
inc
adc
or
enter
adcl
inc
in
mov
fsubl
neg
adc
insl
insl
adcb
xchg
adc
ljmp
jns
jmp
add
add
insl
pop
add
inc
xchg
jno
outsl
mov
bound
sub
dec
mov
and
stc
mov
in
cmp
ret
insl
adc
xor
in
test
ljmp
xchg
nop
loope
inc
push
add
fcomip
mov
fwait
imul
xchg
adc
xchg
pop
popf
aas
and
loope
cld
insb
imul
or
jns
pop
and
cmp
mov
inc
add
mov
std
cmp
mov
movsb
es
push
into
dec
roll
pop
daa
aad
or
dec
or
es
shll
xor
jns
shlb
fs
sar
dec
pop
shlb
cli
mov
jg
adc
rorb
inc
pop
cmpsl
fwait
lret
cmp
jle
and
and
fimuls
mov
push
adc
popf
xor
test
stos
push
insb
shlb
fistl
mov
cmp
adc
add
jle
sbb
cmp
adc
stc
movsl
mov
cmp
popa
hlt
push
push
lea
push
int
push
lods
sahf
add
pusha
out
pop
push
rolb
loope
mov
lret
adc
add
outsl
dec
mov
lods
xor
xor
jge
xor
push
adc
scas
mov
movsl
cmp
push
cli
popf
jne
shll
fdivl
mov
lods
mov
inc
adc
lods
and
jg
jns,pt
es
cmp
add
jnp
addb
inc
or
push
movsb
sub
repnz
in
push
ss
lret
cmp
bound
loope
sbb
cmp
lods
jne
out
addr16
cmp
rcll
push
xchg
push
dec
xchg
jnp
fadd
mov
pop
inc
push
sti
dec
push
cmp
repnz
mov
popa
ja
lock
adc
cs
or
xor
fstp
mov
in
mov
dec
pop
pop
outsl
lds
in
lods
and
add
or
bound
iret
cwtl
mov
sub
cmpsb
add
jge
loope
push
sub
mov
pusha
push
mov
scas
xchg
shl
nop
xchg
mov
pop
inc
push
lods
push
push
mov
es
test
ljmp
jb
test
subl
push
mov
cmp
xor
mov
aam
aam
add
push
rcrb
mov
rorl
iret
inc
test
add
xor
inc
xor
in
loopne
dec
dec
mov
push
fcoml
sbb
fst
xor
in
shll
pusha
adc
arpl
nop
rcrb
into
das
sbb
mov
dec
pusha
or
push
stc
arpl
insb
ja
fs
jmp
ret
mov
int3
mov
mov
cmc
cmpsl
push
shrl
xor
mov
and
imull
adc
aas
out
aam
mov
xor
cli
push
fmull
mov
mov
lods
mov
inc
shr
mov
push
lcall
pop
das
ret
push
push
adc
jae
dec
in
xchg
xorb
mov
mov
sti
in
ret
adc
insl
mov
dec
push
or
and
xchg
xor
or
or
push
rcl
je
leave
std
mov
xchg
aad
jo
jecxz
pop
cmpb
cmp
push
mov
andl
pop
sbb
lods
fnsave
bound
cmp
mov
daa
sub
mov
add
aaa
out
adc
pop
xchg
cmp
testb
sub
aam
mov
pop
lock
test
inc
inc
xor
mov
mov
inc
cmp
mov
pusha
hlt
xor
inc
repnz
lods
dec
xor
mov
fs
mov
or
sub
xchg
push
outsb
pop
fsubrl
pop
mov
mov
mov
insb
mov
push
adc
add
repz
es
and
std
les
clc
adc
js
loope
sub
idivb
mov
inc
and
rcrl
ret
sub
push
inc
test
call
mov
mov
fisttpl
sub
loope
imul
test
and
loopne
in
std
rolb
sarb
repnz
cmpsl
ds
adc
rcl
and
xchg
inc
bound
out
or
lcall
sub
xchg
test
cltd
and
or
xor
push
mov
dec
stos
pop
inc
test
sbb
clc
nop
stos
push
stos
pop
cmp
ss
sub
push
int
cmp
sub
pop
cli
cmp
lcall
mov
adc
imul
mov
leave
clc
xor
gs
add
xchg
adc
inc
sarl
adc
pop
adc
sbb
cltd
mov
cmp
pop
mov
mov
into
add
dec
addl
loopne
fcmove
xor
ss
sub
jmp
push
ja
push
jns
adc
mov
xor
dec
sub
in
in
aaa
push
loope
gs
testl
push
imul
fwait
test
popf
dec
loopne
push
xlat
lods
subl
add
xor
push
shlb
inc
jnp
sbb
ficoms
sbb
out
out
jbe
cmp
scas
xchg
jae
xchg
ret
test
std
mov
mov
mov
aam
push
push
pop
jnp
adc
inc
dec
loop
sbb
aas
cmp
add
inc
xor
xchg
push
jge
clc
movsb
sar
cmp
sub
fsubrl
roll
iret
mov
call
or
call
pop
push
das
ret
lea
lret
xor
pushf
in
pop
int3
leave
cmp
xchg
inc
dec
in
lods
push
arpl
je
xchg
dec
arpl
sub
sti
push
adc
pop
test
aaa
push
in
pop
push
cwtl
inc
cmpsb
or
movsl
pushf
out
cmp
cwtl
les
outsl
stc
inc
imul
in
mov
mov
lea
jp
jge
stos
ljmp
ss
scas
jp
cmp
mov
rcrb
in
and
neg
testb
popf
sbb
mov
mov
pop
movl
jno
jbe
sbbl
ficompl
mov
lock
lods
test
out
sbb
nop
and
in
bound
fwait
jl
pop
dec
ficoml
ss
sbb
jle
mov
adc
adc
xchg
sbb
in
sti
mov
cmc
mov
insl
orb
imul
negb
add
and
aad
lahf
cmp
and
pop
push
fcoms
ds
sbb
xchg
mov
dec
icebp
push
inc
adc
fsubl
out
cli
jl
mov
test
imul
aaa
data16
lret
stos
pop
pop
xor
push
mov
inc
pop
xchg
pop
test
and
jbe
add
adc
ja
cmc
in
jns
cwtl
ret
push
lods
mov
outsb
jge
test
inc
xchg
lods
push
sbb
or
pop
sti
dec
sub
cmc
inc
scas
or
imul
aas
gs
sti
push
push
mov
in
leave
mov
xchg
dec
addl
jb
mov
cld
dec
cmp
mov
loopne
cmpsl
aam
pop
bound
aaa
lds
dec
inc
add
mov
adc
enter
in
out
jp
add
xchg
fcoms
ja
lret
mov
imulb
pop
xlat
adc
and
out
xchg
xchg
sub
adc
movmskps
cld
arpl
fnstsw
arpl
imul
jb
mov
dec
inc
mov
inc
popa
ds
xchg
adc
mov
push
mov
push
mov
jle
xor
addl
clc
inc
imul
cld
mov
adc
lds
lods
icebp
rcr
adc
push
popa
loopne
imul
ret
lods
sbb
push
popa
add
push
pushf
movsl
stos
mov
idivb
push
cmp
and
pop
rorb
jle
call
rcl
lcall
aas
ffree
bound
stos
cmp
sbb
push
or
sbb
shlb
ficoml
in
fstl
sub
xor
inc
push
jnp
and
xchg
in
sub
clc
cmp
out
push
xchg
lds
xchg
arpl
dec
and
or
mov
push
xchg
into
lret
mov
ret
jno
or
cmp
data16
pusha
ret
sub
mov
movsb
xchg
loope
ljmp
dec
adcl
out
stos
mov
arpl
loop
into
shll
incl
hlt
add
cwtl
push
nop
jno
ljmp
sti
mov
jmpw
add
popa
fdiv
push
cltd
mov
fimull
sbb
xchg
push
inc
fmul
fsubrp
fs
mov
cmpsb
loop
pushl
add
ret
scas
mov
xchg
xchg
sar
out
jle
adc
inc
ds
and
adc
add
mov
fcmove
fists
mov
mov
lods
mulb
xchg
addb
push
add
mov
stc
push
adcb
cmpsb
mov
pop
into
insb
cmp
mov
xchg
xchg
movsl
pop
mov
hlt
mov
adc
clc
test
jp
or
mov
mov
mov
cld
jg
insb
jbe
scas
lds
jae
cs
mov
add
mov
mov
cs
test
and
xchg
pop
add
inc
sub
add
stos
jae
add
jae
jl
cld
jne
xchg
mov
xorl
or
dec
out
fcmovne
pop
shll
jne
inc
ficoml
mov
cmpsb
xor
mov
lahf
xor
and
call
cwtl
sub
push
movsl
or
fisubrl
subl
test
daa
xchg
sarb
lcall
bound
loop
xorl
iret
fwait
outsb
sbb
xrelease
mov
icebp
in
arpl
mov
mov
and
mov
out
sarl
lock
jp
inc
xor
inc
lea
sti
xor
les
pop
gs
and
scas
push
push
add
stc
insl
inc
mov
cmpsl
jns
call
lret
sub
stos
popa
mov
sbb
test
push
push
cmp
call
mov
test
mov
dec
cmpsl
adc
inc
cltd
repz
pop
inc
push
shrl
sbb
sbb
sbb
ljmp
insl
jo
je
xchg
mov
xchg
cmp
outsb
inc
xor
push
fnsave
aam
fiadds
jb
inc
ja
int3
mov
stos
fcmove
push
sub
ss
inc
or
cmp
sbb
mov
sbb
xor
scas
je
mov
inc
pop
cmovnp
ja
fwait
mov
add
add
ss
adc
mov
push
bound
mov
cmpsb
mov
sub
pop
lcall
jne
dec
jb
pop
out
enter
dec
test
icebp
daa
mov
and
cmpsl
rcl
call
jmp
daa
shll
xchg
add
inc
mov
inc
cs
push
mov
arpl
lret
jns
sub
cmpsb
fucomi
jp
cld
repnz
xchg
stos
mov
fnstsw
imul
mov
lret
outsb
divb
rcrl
jb
sbb
mov
sbb
mov
shrl
mov
mov
ss
enter
inc
ret
inc
scas
mov
outsb
mov
js
pop
sub
or
outsl
fnsave
ljmp
fwait
daa
orb
movsl
imul
out
pop
out
sub
inc
es
pop
ret
aad
int
cmp
xor
fidivs
mov
jb
mov
lods
fsubp
add
paddsw
ret
xchg
mov
jae
addl
cmpsl
xchg
gs
pushf
adc
repz
or
pop
outsl
mov
mov
push
mov
cmc
fidivs
adc
xor
and
leave
inc
stc
or
and
mov
mov
inc
mov
adc
xor
test
fst
jecxz
jb
hlt
sarl
push
loop
or
test
xlat
repz
pusha
push
push
sub
paddw
cmp
dec
inc
lret
cmc
sub
insb
or
loop
mov
inc
imul
xlat
imul
cmp
popf
ds
fbld
xchg
jecxz
lcall
ret
notl
jno
or
hlt
mov
mov
jge
and
stos
or
idivl
mov
lods
clc
das
mov
sub
test
mov
mov
cmp
mov
adc
ja
push
mov
push
or
add
es
jne
sbb
xchg
push
sub
jnp
xchg
push
mov
cwtl
por
mov
or
or
cmp
push
out
std
add
popf
push
push
iret
les
xor
popf
pop
subl
lahf
sti
shlb
pop
add
roll
or
lahf
rolb
push
fidivl
rorl
mov
and
arpl
imul
fldl
mov
div
sbb
insl
imul
xchg
xor
add
lahf
mov
dec
push
iret
daa
ret
push
adcb
insl
pop
mov
push
rorl
mov
add
mov
ret
dec
mov
mov
fcmovnb
loop
cmp
pop
xchg
jb
dec
rcll
cmpsb
push
mov
mov
add
fnstsw
lea
jle
and
push
lcall
enter
add
fisttpll
pusha
push
xchg
or
inc
cmpb
or
adc
lahf
mov
mov
sbb
xchg
push
gs
out
xchg
add
std
lock
arpl
inc
pop
pop
fdivl
xor
pop
jg
rorb
aaa
sbb
int3
jge
pop
stc
push
aas
idivb
mov
push
and
repnz
in
mov
fdivl
sbb
lods
xchg
dec
sbb
dec
sub
lods
mov
aam
mov
adc
lea
mov
push
es
sub
mov
cld
test
mov
add
bound
push
movsb
lret
mov
dec
stos
cmp
cwtl
push
cld
push
outsb
mov
stc
push
jbe
pop
das
mov
cld
lea
mov
push
mov
sbb
sub
nop
xchg
mov
mov
sub
pop
pop
jbe
xchg
dec
test
jg
push
inc
xchg
jbe
test
inc
orb
xor
leave
xchg
cmp
push
out
cmp
or
push
mov
jle
push
into
int
lahf
mov
adc
xor
scas
pop
inc
add
int3
cmp
xor
dec
iret
inc
cmp
xchg
push
add
out
lret
test
sbb
mov
mov
pop
mov
push
adcl
cld
clc
ret
in
xor
gs
xor
daa
or
dec
inc
push
sbb
movsb
dec
imul
fildl
xchg
fwait
push
std
scas
jmp
into
push
fdivl
out
inc
xor
jg
xchg
and
repz
call
testb
out
pop
fimull
fildl
loopne
add
stos
in
sbb
mov
lahf
fsubrl
jne
call
xorl
and
out
insb
dec
xor
or
loop
mov
fwait
mov
push
jecxz
outsl
into
xor
inc
jg
outsb
inc
mov
or
sbb
sub
dec
fs
aaa
enter
and
fsubr
es
add
mov
std
loopne
add
mov
jnp
shl
mull
push
add
push
xchg
xorl
adc
fdivrs
loopne
iret
jecxz
rorb
jne
push
push
push
or
movsl
jp
and
inc
add
pop
dec
jbe
gs
pop
sbb
ds
in
insb
pushaw
sub
xchg
inc
mov
outsb
mov
xor
fdivrl
jbe
es
xchg
imul
fwait
xchg
lods
es
pusha
aaa
push
jae
test
inc
adc
push
in
mov
jnp
ficoml
add
dec
fdivrs
mov
movsb
rol
push
jge
ljmp
rcr
es
adc
movsb
pop
mov
adc
cmp
inc
sbb
dec
ds
test
add
inc
sbb
cld
notl
sbb
push
mov
push
xor
out
push
push
sbb
fcoml
test
mov
mov
pop
pop
cmp
lods
inc
mov
loop
push
into
shl
int3
mov
xor
push
add
data16
fwait
xchg
sbb
inc
pop
and
mov
mov
test
gs
mov
fidivs
std
iret
stc
repz
and
ret
push
call
popf
adc
in
adc
mov
enter
ror
jmp
or
scas
out
sahf
mov
enter
out
out
push
inc
sub
shrb
sbb
mov
in
and
sarl
loopne
fdivs
test
pushf
sub
int3
hlt
xchg
mov
sbb
sub
enter
mov
mov
ja
lds
inc
sti
andl
adc
lock
and
sub
mov
arpl
lods
pushf
addr16
in
cmp
aas
shrl
xchg
sarb
adc
xchg
pop
or
ss
mov
jg
pop
dec
icebp
sbb
lods
add
enter
pusha
test
fwait
cmc
repz
fldl
push
pop
lcall
jo
nop
dec
nop
repnz
sbb
int
setle
into
loope
xchg
mov
cli
dec
outsb
or
inc
cltd
add
xor
mov
xor
push
aam
es
dec
pop
aad
or
fsts
dec
fs
jb
mov
mov
jle
popf
ret
inc
cmp
adc
mull
call
and
inc
pop
daa
sub
adc
out
jmp
lods
imul
andl
or
in
lret
cmp
dec
sub
inc
dec
mov
arpl
cmpl
or
jae
sbb
xchg
nop
ret
mov
int
pusha
cmp
incl
pop
fistl
sub
test
sub
push
or
bound
mov
mov
pop
bound
sar
pop
test
sub
out
mov
push
or
and
sub
and
push
lret
xchg
pop
ficoml
dec
xchg
dec
stos
dec
adc
cltd
xchg
dec
push
cltd
mov
and
cmpsb
cmpsb
sbb
test
inc
pop
loopne
je
mov
push
jle
fucomip
scas
shrl
sub
and
xchg
js
lret
adc
mov
movl
imul
push
sahf
cmpsb
cmp
lahf
bound
lret
movsb
or
loop
loopne
in
mov
lods
and
jae
cmp
aad
lret
xchg
enter
movsb
test
cmp
xchg
xchg
cmp
pop
test
push
out
stos
loop
jge
andl
or
sbb
sub
out
aam
mov
lds
mov
xorb
pop
push
add
popf
add
cmpb
repz
arpl
adc
dec
std
and
push
xchg
jne
out
aad
sub
scas
lahf
mov
ret
adc
ja
test
pop
test
out
out
cmp
lock
xor
push
ret
insb
or
mov
xlat
clc
mov
pop
test
push
sbb
fimuls
repz
stc
mov
sub
dec
jle
test
or
and
pop
mov
dec
mov
popf
fucomp
push
test
test
aad
ja
add
ficoml
fnstcw
sahf
jno
push
outsb
push
xchg
inc
enter
add
add
mov
jb
fs
or
sbb
inc
jg
inc
pop
das
out
bound
inc
mov
jb
jae
cmc
push
push
push
pop
test
inc
adc
push
and
or
sti
in
jle
inc
xchg
jl
stos
cmp
leave
adc
ja
jl
pop
inc
js
pop
test
clc
stos
movsl
xchg
sti
and
xchg
inc
in
rcrb
js
mov
je
mov
push
xchg
sbb
int
pop
pop
mov
ss
dec
xchg
xor
or
lcall
sbb
rol
addl
cmp
add
and
insl
mov
movsl
or
repnz
outsl
cmpsl
int3
jecxz
sbb
jno
add
mov
mov
add
jp
jno
rcll
adc
out
cmc
lods
pop
mov
adc
repnz
js
scas
fwait
lret
mov
mov
ret
sbb
aam
cmp
mov
in
in
sbb
imul
xlat
xchg
mov
xor
mov
jmp
std
xchg
sbb
push
adc
or
insl
inc
jns
jp
gs
mov
and
xor
cltd
enter
mov
or
call
enter
repz
sbb
and
loope
sbb
sbb
mov
shll
ds
fcompl
in
sub
cmp
testl
jle
jp
jo
in
sub
mov
mov
ja
push
push
or
or
cld
push
aam
dec
mov
pavgb
jb
mov
push
add
push
xor
xchg
mov
jmp
scas
popf
incl
and
fidivs
es
jge
std
pop
cwtl
push
dec
adc
xchg
or
ret
push
lcall
shlb
sub
mov
push
aam
outsl
les
mov
insb
and
out
out
imul
adc
pushf
add
mov
decl
addr16
pop
cmp
fistpll
inc
fsubrp
mov
sbb
lret
mov
inc
and
sbb
cmc
jg
repz
movsb
fisubrl
shlb
mov
mov
lds
test
inc
es
jb
push
sub
mov
inc
out
pop
dec
repz
push
push
mov
push
inc
test
imull
movsl
xchg
sbb
outsb
fiadds
stos
adc
hlt
xor
and
add
mov
mov
fcom
pop
arpl
out
inc
fldcw
stos
iret
invd
cmpsl
mov
xchg
or
loope
xchg
loope
pushf
sar
inc
rcll
pop
or
and
loopne
stc
cmp
sub
mov
mov
fadds
sbb
xchg
loop
push
mov
lcall
repnz
jnp
scas
and
addr16
test
call
xor
les
mov
dec
aas
push
iret
fdivl
pop
dec
sbb
jno
lcall
sbb
scas
out
mov
lret
sahf
mov
aas
out
mov
sarl
inc
push
cli
mov
cmp
xchg
xor
rcrb
cmp
fsubl
add
cmpsl
rorl
xor
data16
jno
or
nop
pop
jo
push
je
jp
test
rcrb
fistl
jno
pop
jnp
sub
sbb
test
cmp
out
sbb
push
imul
mov
je
mov
inc
xlat
fucomp
xor
xor
cmp
pop
add
and
xchg
mov
or
cli
pop
lahf
fildl
lods
inc
mov
ret
cld
arpl
bound
mov
iret
hlt
idivl
mov
xchg
inc
adc
xor
fidivrs
jmp
test
mov
push
xor
jbe
in
jmp
mov
add
je
jl
sub
inc
sbb
mov
cmc
insl
fidivs
mov
push
dec
and
ss
jecxz
test
loop
mov
mov
cmc
xchg
xchg
aas
in
cmpsl
outsb
cltd
mov
dec
sahf
loop
xchg
push
sub
and
lret
cmp
mov
movsl
push
cltd
sbb
cmp
add
outsb
xchg
mov
adc
sti
add
outsb
pop
or
sar
inc
and
imul
test
xor
pop
or
iret
insb
sbb
mov
push
roll
jnp
dec
xchg
mov
mov
fisttpl
scas
cmp
pusha
out
leave
push
loopne
xchg
xor
cmpsl
in
loope
inc
ficomps
enter
repnz
clc
jmp
insl
subl
adc
enter
lock
repnz
mov
scas
stos
call
pop
in
gs
pop
movsl
push
nop
pop
inc
jo
adc
jmp
pop
xchg
aad
jge
push
xchg
les
jle
in
dec
adc
stos
pushf
jb
test
jbe
cmpsl
ljmp
call
int
adc
icebp
nop
jno
mov
aas
rolb
test
test
mov
mov
cmp
lcall
dec
adcl
insl
or
shlb
jb
std
mov
out
divl
mov
js
dec
repz
xchg
lret
lods
imul
sarl
and
stos
inc
cmp
ljmp
adc
add
lretw
pop
xor
nop
inc
xlat
or
mov
adc
das
mov
dec
outsl
mov
xor
cmpsl
cltd
cld
les
xor
sbb
push
push
aas
sub
imul
adc
pop
mov
shrl
stc
pop
loop
js,pt
loopne
mov
sarl
fldenv
push
out
or
pop
fs
mov
xchg
or
add
dec
jl
imull
mov
pop
jecxz
je
xchg
xor
dec
push
xor
ret
inc
movsb
sub
sub
aas
in
mov
les
push
iret
aam
punpcklwd
data16
rcl
popf
arpl
enter
cli
lcall
call
cmp
push
push
mov
mov
pop
lgs
cmp
sub
add
pop
popf
mov
jmp
jge
mov
push
sarb
mov
mov
mov
cli
push
adc
inc
test
out
push
push
lahf
adc
sti
test
sbb
jb
and
adcb
je
mov
incl
jo
loopne
imul
inc
jbe
cmpsb
sbb
and
and
sub
out
outsl
pop
dec
xchg
push
pop
mulb
jp
movsb
mov
and
push
addb
sbb
push
pop
or
xlat
jecxz
repz
cwtl
cwtl
fcomip
sub
sahf
stos
mov
pop
sbb
sub
pop
dec
sarl
jo
cwtl
adc
imul
js
shlb
dec
mov
in
lret
dec
jno
daa
mov
push
test
movsb
enter
push
out
xchg
pop
sub
cltd
pop
add
loop
cld
sahf
call
notl
cmp
pop
cltd
mov
cmp
fcoml
setb
pop
sub
mov
inc
mov
and
mov
cld
insl
push
icebp
je
pop
xor
xchg
out
loopne
xor
mov
sti
mov
sahf
fwait
jb
lcall
mov
dec
sbb
aad
and
push
push
nop
es
pop
in
push
ret
add
mov
jl
push
clc
jge
dec
or
enter
mov
mov
out
jl
sbb
repz
imul
test
jae
outsl
mov
push
cmp
or
pushf
pop
adc
in
fiadds
fistpll
mov
insl
sbb
mov
fdiv
and
in
push
dec
mov
jae
and
jb
mov
push
adc
bound
outsl
mov
in
fimull
mov
jecxz
addl
sbb
add
push
cmpxchg
lds
push
pcmpeqd
jo
cmpb
sbb
inc
push
xchg
popa
faddl
fs
push
dec
stos
sti
mov
and
inc
mov
jo
and
sahf
sub
push
mov
lahf
sbb
sbb
xchg
test
jnp
xor
inc
jne
data16
sbbl
and
fnstenv
dec
test
inc
pop
xor
cmc
push
daa
shl
shr
aaa
xor
cld
add
and
aas
icebp
cmp
jl
cmc
cmp
push
sbb
xchg
add
mov
ss
mov
cs
je
sbb
pusha
shr
in
outsl
mov
subb
daa
dec
fwait
sbb
sub
jb
mov
adc
mov
xchg
stc
pop
inc
xor
xchg
scas
or
or
fimull
wbinvd
rolb
out
imul
lock
in
mov
mov
and
rorl
dec
in
mov
inc
jne
push
pop
imul
xchg
jnp
mov
jecxz
fisttps
xchg
int
mov
or
xor
push
mov
jge
mov
gs
cltd
out
daa
mov
jno
clc
cmp
push
cmp
mov
pop
dec
jmp
mov
fists
or
mov
mov
mov
xchg
das
sub
push
subb
clc
xchg
fisttpl
xor
sbb
mov
push
cli
cmc
or
sub
inc
imul
pop
cmp
push
ljmp
test
xchg
push
repnz
repnz
push
fbld
lods
je
add
and
insl
add
out
adc
imul
ret
mov
add
out
imul
enter
js
fwait
xchg
xchg
lods
aam
cmp
clc
push
sbb
subb
xor
stos
adc
loop,pt
and
clc
stc
test
outsb
mov
sub
mov
mov
add
test
and
sbb
mov
in
cwtl
push
adc
sbb
xor
test
cmp
leave
pop
cltd
out
and
push
insb
xchg
add
adc
int
add
aaa
dec
int
add
push
push
mov
arpl
aad
cmc
repz
das
and
in
out
mov
pop
pushf
or
mov
push
lret
mov
mov
daa
cltd
out
pop
clc
cltd
add
test
mov
in
mov
xchg
mov
outsb
loope
inc
test
inc
dec
in
xor
inc
ret
cmpb
mov
clc
loope
mov
icebp
out
mov
bound
jae
ret
fucomip
movsl
aam
pop
jp
ret
fs
xorb
cmp
in
sbb
pusha
lcall
pop
outsb
or
xchg
aaa
enter
or
loope
adcb
fdiv
push
mov
je
pushf
add
push
adc
xorl
xchg
inc
adc
int3
cltd
pop
add
out
outsl
mov
mov
mov
out
es
add
mov
aas
add
jbe
out
and
inc
add
ss
int
xor
mov
mov
xor
lock
into
sbb
stc
xor
mov
js
imul
lret
mov
pop
or
xchg
cmp
cmp
clc
and
sbb
add
dec
push
add
mov
inc
sbb
mov
adcl
popa
adc
loopne
dec
dec
inc
out
mov
push
std
rcr
roll
lret
imull
lcall
loop
mov
or
lds
mov
mov
mov
cmp
loopne
jmp
sbb
frstor
and
ret
xchg
lret
std
mul
add
lea
aad
insl
stos
mov
push
mov
push
imul
int3
pop
test
ss
out
jg
sbb
jnp
cmp
loop
push
xchg
adc
pop
sarl
xchg
test
aas
xchg
test
out
mov
sub
mov
and
dec
subl
pop
jne
or
xchg
test
and
lock
or
test
pop
sub
lret
fistpl
out
xor
imul
mov
fisubrl
and
cmpsb
sbb
xor
jl
shll
pop
dec
jns
mov
imul
fisubl
or
jne
popa
and
test
lock
adc
dec
adc
popa
fs
jno
dec
lods
pop
shl
xor
jae
imul
jno
mov
cld
xchg
arpl
dec
and
cmp
mov
jg
bound
push
lcall
pop
daa
flds
pop
stos
iret
scas
jb
iret
xor
loope
imul
aad
adc
or
orb
lds
dec
add
pop
pop
or
push
pushf
ss
cmp
sub
fsts
rolb
dec
inc
rorl
movsb
pop
dec
xchg
mov
arpl
cmc
jle
dec
cltd
sbb
jg
mov
mov
call
test
mov
jecxz
cmp
insl
stos
jmp
das
int
mov
inc
pop
mov
dec
push
mov
cmp
push
and
jno
push
jmp
clc
sub
mov
stos
push
outsl
loop
rcrb
push
xor
cmp
sub
mov
shl
and
inc
stos
adc
dec
jecxz
or
je
sub
clc
adc
roll
in
negb
in
scas
sbb
mov
aas
jo
cmp
imul
xor
mov
xchg
xor
fwait
repz
insb
into
fs
xor
lret
in
xor
aaa
scas
mov
jbe
aaa
sub
xor
cmp
xor
or
loop
pop
in
jp
xchg
loopne
test
jae
inc
xchg
jle
out
jmp
pop
jne
pop
loopne
adcb
addr16
mov
xor
or
add
stos
mov
xchg
mov
aas
and
pop
outsb
clc
lahf
xor
stos
inc
mov
push
xchg
ds
or
lds
sbb
adc
js
and
int
xor
imul
insl
incb
jl
cmp
hlt
hlt
ss
sbb
outsb
dec
or
rcrl
mov
cmp
push
iret
ret
das
fxch
out
jae
es
test
data16
add
dec
mov
stos
cmp
sub
test
push
test
pop
cmp
or
cli
mov
xor
and
pushl
cmp
imul
pop
outsb
cmpsb
xor
outsb
push
jge
shrl
loope
pop
add
jge
mov
pop
jmp
repz
push
xchg
pop
clc
push
mov
in
adc
test
rclb
popf
out
mov
lret
test
rcl
push
xor
dec
ljmp
repnz
jmp
out
mov
adc
adc
ja
pop
ficoml
shlb
rol
stos
aas
add
dec
in
mov
pop
ja
xor
rclb
pop
mov
daa
jae
hlt
sbb
mov
cmp
in
lock
in
jo
dec
mov
outsb
or
inc
adc
and
lret
add
add
jmp
or
push
xor
mov
add
inc
sarl
cmp
adc
mov
adc
xchg
xorl
pop
inc
push
sbb
pop
push
mov
xor
les
xor
jb
or
loope
adcb
in
decl
rcr
inc
dec
ficompl
enter
je
jle
dec
call
mov
mov
pushl
ds
sti
push
jg
sbb
sub
and
inc
xor
jg
ret
dec
jbe
adc
xor
or
daa
push
pop
jb
jge
fdivl
mov
xor
pop
jbe
outsl
adc
aas
push
cmp
popa
sbb
cltd
mov
out
notl
outsl
adc
push
out
push
cmp
test
rcrl
loope
pop
dec
cmc
das
cld
mov
dec
add
jne
mov
push
push
aad
and
bnd
out
jmp
cmc
data16
pop
loop
insb
jle
daa
aam
xchg
sbb
call
sbb
xchg
mov
sbb
xchg
popa
adc
enter
adc
jmp
mov
inc
iret
stc
iret
gs
out
ss
mov
pop
cmp
outsb
cmp
pop
mov
mov
cmpsb
push
jmp
shlb
popf
clc
mov
loope
outsl
cwtl
xor
push
inc
pop
add
hlt
fadds
add
or
sub
xor
sub
jge
jno
iret
jle
mov
idivl
jno
dec
sub
sbb
add
arpl
cli
or
sub
push
ret
orl
xor
sub
mov
dec
cli
jge
pop
and
sub
pop
subl
lret
push
test
mov
pop
cvtps2pi
push
enter
cs
jg
sbb
icebp
or
loope
pop
leave
and
dec
adc
add
out
xchg
push
push
mov
and
scas
mov
stos
xchg
je
call
fwait
sbb
rcrl
int
rcr
mov
dec
popf
test
adc
push
jp
mov
test
lahf
jge
test
pop
in
loope
ret
xor
fsubl
pop
pusha
dec
jbe
mov
dec
and
pushf
mov
dec
ljmp
mov
pusha
mov
shll
out
lahf
rolb
jmp
inc
mov
dec
xchg
sbb
pop
mov
inc
rorl
xchg
pushf
mov
sub
xchg
or
cmpb
int
jno
and
stos
mov
mov
sbb
pop
cmp
out
mov
and
pop
or
xchg
push
out
sub
push
mov
popa
adc
mov
xchg
dec
mov
dec
jge
test
scas
out
pop
jecxz
pop
imul
sbbb
fld1
push
adc
and
or
loope
xchg
sub
aas
mov
mov
das
push
sarb
inc
hlt
stos
pop
int
xor
dec
out
lret
pop
jnp
jne
test
lods
negb
fucomp
loop
lds
push
out
adc
mov
or
adcb
aam
or
orl
enter
loopne
ret
pop
scas
leave
repz
xchg
sub
lret
jp
nop
lods
movsb
mov
jle
push
sti
test
subb
ljmp
loop
loopne
mov
jg
hlt
call
test
dec
xorl
push
fwait
ss
sub
jne
stos
sub
dec
cs
mov
xchg
rcrb
dec
xchg
decl
data16
mov
bound
add
leave
mov
js
xlat
add
rorb
add
adc
mov
adc
sub
xchg
adc
mov
rorl
jecxz
sub
mov
leave
pop
push
int
int
imul
addr16
mov
mov
and
adc
cltd
cmpsb
pop
in
dec
xor
movsb
sub
sub
rcrl
mov
imul
lods
flds
dec
mov
mov
movl
xchg
scas
pop
adc
sbbb
cmpsl
roll
inc
sub
rcrl
cwtl
and
push
xchg
add
mov
xor
xor
jnp
popf
jp
mov
fsubr
ds
jnp
adc
jbe
jmp
repnz
mov
pop
fidivl
clc
outsl
mov
loope
lahf
iret
aaa
xchg
pushf
adc
push
mov
or
arpl
jno
xor
cmpb
popa
sbb
bound
xchg
dec
movsb
mov
jp
aas
jmp
aaa
ljmp
pop
add
mov
pusha
push
jbe
fs
mov
aad
cmpsl
dec
dec
add
jg
dec
shll
iret
mov
ss
nop
idivl
adc
inc
adc
push
mov
xor
cmc
mov
lds
ds
mov
jmp
shlb
add
add
push
sbb
dec
mov
lahf
dec
cmp
or
adc
cmpsb
out
addr16
jg
cmp
nop
cld
cmp
sbb
outsl
mov
pop
popf
movsb
testb
les
hlt
jmp
push
mov
inc
movsl
and
jb
ret
mov
jae
xor
add
sbb
test
lds
mov
iret
frstor
pop
mov
or
lcall
repz
aad
xchg
pushf
dec
outsb
dec
sub
sub
jecxz
and
mov
and
aam
pushf
inc
je
lret
jmp
or
out
pop
lret
test
mov
push
jg
jns
dec
movsb
jnp
xchg
and
adc
inc
lret
les
hlt
xchg
pop
pop
xor
inc
test
roll
or
mov
pop
out
loope
xor
jge
clc
xchg
mov
int3
jmp
mov
bound
jecxz
ds
pop
jge
ret
push
roll
jo
in
and
xchg
mov
int
imul
fdivr
js
or
lcall
pop
movsb
sub
rcll
and
ja
ret
xor
addr16
sti
adc
mov
push
xor
push
dec
inc
mov
lods
xor
mov
into
int
pop
dec
sub
dec
adc
dec
pop
lcall
jne
sbb
in
inc
adc
push
int3
push
scas
jns
push
insb
mov
loope
add
cmpsb
push
xlat
in
ja
loopne
sub
mov
gs
scas
sub
out
mov
xor
or
inc
adcb
ljmp
sbb
dec
test
inc
cmp
mov
xchg
inc
in
movsl
popa
divb
je
xor
cld
mov
js
popa
add
jle
cmp
in
mov
xchg
and
dec
repnz
daa
fsubrl
mov
lods
push
mov
adc
pusha
dec
call
mov
pusha
outsl
mov
popa
xor
imull
jns
popf
arpl
rcll
xor
or
call
clc
cmpsb
push
sbb
mov
imul
mov
xchg
js
pop
adc
inc
jb
lods
adc
aaa
test
pop
imul
lock
add
jne
mov
arpl
push
pop
pop
sub
in
cmp
cmpsl
mov
cmp
mov
mov
test
sbb
sub
mov
sbbb
int3
loop
call
push
mov
push
jle
sub
fimuls
outsl
cli
adc
pop
or
leave
sub
adc
pop
inc
aam
outsl
sbb
stc
repz
cwtl
jae
cmp
and
dec
insb
fidivl
and
pop
sar
loop
dec
das
pop
push
nop
lods
mov
xchg
sub
enter
xchg
lock
lcall
cmpsb
inc
jg
sahf
cltd
inc
xchg
or
mov
outsb
jge
movsb
shll
cli
xchg
in
pop
test
cltd
mov
test
push
inc
fs
cmc
jae
fldcw
or
jp
pop
out
loopne
cmp
sub
pop
test
and
fcmovnu
dec
call
pusha
pop
jo
jp
cmp
cli
mov
stos
mov
cmp
test
adc
iret
fcmovnbe
mov
inc
repz
cmp
repz
sub
pusha
dec
push
aam
imul
fsub
outsl
sbb
mov
jp
mov
das
or
outsl
xlat
dec
cltd
loop
pop
cmp
lret
pop
mov
out
or
pop
push
test
push
stos
mov
or
mov
jg
fcmove
inc
mov
pop
cmp
mov
cmp
fiadds
loopne
push
js
sbb
or
in
mov
sub
stos
ret
push
cmpsb
mov
pop
insl
or
push
daa
fimuls
pop
xchg
repz
cli
xchg
lods
aam
xchg
mov
jne
xchg
sahf
dec
add
es
push
mov
sbb
das
sarb
addb
sbbb
ss
inc
xchg
sbb
jle
mov
clc
inc
mov
push
je
outsb
imul
jo
data16
mov
jb
ds
cmp
pop
andb
push
dec
lea
add
dec
fidivs
lods
jnp
scas
mov
lods
out
add
and
out
std
sbb
jno
in
cmc
push
test
mov
dec
inc
lcall
out
jae
jecxz
xchg
add
es
jl
xchg
shlb
dec
clc
dec
push
js
jo
cltd
pop
inc
jno
gs
and
rclb
loop
add
push
sub
cli
adc
push
mov
fsubrl
add
pop
dec
xlat
imul
imul
mov
ret
jne
xor
cwtl
gs
and
cmp
pop
xor
int3
shrl
cmp
lret
and
jb
add
inc
xchg
or
xlat
adc
dec
jno
int
cs
mov
mov
and
jl
push
fdivrs
dec
inc
js
jl
xlat
enter
cltd
loopne
cmp
sbb
push
xchg
enterw
hlt
xor
dec
dec
jle
aaa
mov
pop
fnstsw
icebp
ret
pop
adc
mov
lods
or
jmp
movl
mov
test
popa
in
jge
std
xlat
sub
cmpl
sbb
es
and
aam
xchg
mov
int
aam
xchg
pop
clc
jbe
data16
inc
cmpsb
xor
aad
dec
imul
mov
dec
cltd
pop
fisttps
xlat
ja
or
outsb
push
mulb
add
mov
fwait
xor
out
jno
dec
sub
lods
test
clc
push
xor
adc
test
cmp
shlb
std
pop
adc
sub
push
cs
pushf
or
rcll
addl
lcall
and
shlb
xor
jg
cmp
cmp
or
sarb
repz
sbb
cmpsb
fimull
fiaddl
dec
push
fcomps
pop
push
mov
push
add
or
push
add
add
pop
pushf
jmp
adc
jecxz
inc
jo,pt
addl
shlb
scas
cmp
inc
xchg
and
or
loopne
aaa
pop
aam
jl
or
jmp
add
loop
es
jne
or
sbb
ret
xor
mov
jmp
ljmp
daa
cmc
inc
and
inc
call
sbb
and
ret
lcall
inc
subb
loopne
pop
nop
mov
sub
mov
dec
dec
push
push
fcompl
push
push
inc
shlb
and
in
ret
repnz
cmp
push
or
sub
out
imul
movsl
daa
mov
mov
or
pusha
jle
pusha
mov
into
dec
mov
adc
in
addr16
sbb
xor
ds
pop
rcl
sub
cmp
les
jle
push
jl
jle
or
cltd
outsb
repz
outsb
mov
into
pop
outsl
fxch
xor
xor
ds
pop
fwait
xchg
xlat
or
or
repz
ljmp
ljmp
jl
cmc
seto
jle
movsb
loope
mov
dec
sbb
cwtl
xor
sti
dec
test
popfw
dec
xchg
add
lds
sub
jnp
mov
imul
cmp
imul
into
bnd
aad
sbb
in
sarl
aaa
cwtl
fstp
loopne
add
cmc
push
sbb
push
mov
int
testl
popf
and
inc
jb
fsub
push
mov
pusha
xor
lret
and
movb
xchg
lret
xor
test
js
xchg
or
cmp
xchg
mov
xchg
stc
popf
cmp
les
add
pop
in
xor
sbbl
add
aaa
sti
sub
xchg
mov
sbb
imul
test
cli
inc
shr
push
pop
mov
jne
jl
pushf
xor
xchg
mov
out
fisttps
jbe
outsl
or
dec
mov
or
mov
dec
inc
daa
loopne
daa
xor
jle
mov
sbb
or
or
jb
stc
push
lcall
jp
add
mov
sahf
jne
ds
sbb
sbb
jge
in
aas
popf
sbb
mov
in
add
data16
imul
lcall
jp
out
and
fwait
ja
mov
lock
arpl
test
mov
xchg
xchg
push
pop
pop
mov
into
xchg
pop
test
into
mov
stc
mov
sub
pop
sub
cltd
sti
aam
leave
mov
leave
push
xorl
adc
gs
lods
xchg
in
sarb
mov
jae
int
jno
cmp
and
pop
xchg
mov
mov
hlt
jae
sbb
test
and
or
push
aas
and
in
stos
pop
pminsw
inc
addb
mov
sub
mov
lods
and
jb
aad
and
push
mov
xchg
or
inc
mov
pop
sub
fadds
repnz
dec
cmp
movsb
scas
stc
cs
ss
xor
push
movsl
sbb
mov
inc
test
les
push
testb
xor
sbb
pushf
xchg
xchg
movsb
sub
leave
push
gs
ljmp
inc
inc
mov
sbb
inc
xchg
mov
fmull
inc
xchg
out
cmp
nop
cmpb
mov
jmp
scas
mov
popf
push
mov
sub
or
stos
lock
test
pop
xor
sub
mov
aam
popa
xchg
xchg
push
jge
cmp
push
or
push
divl
lods
sbb
lret
popf
cmc
dec
jg
sub
jo
push
push
adc
ja
popf
shlb
data16
inc
mov
push
and
mov
nop
into
sbb
scas
mov
cmp
pop
sbb
out
fsts
push
xor
roll
mov
sub
mov
ds
inc
dec
subl
cmp
dec
bound
cmp
loopne
mov
mov
xor
or
sub
xor
inc
mov
mov
enter
pop
xchg
das
lcall
hlt
or
cwtl
cwtl
icebp
fildl
je
fisubrs
inc
les
or
stos
sahf
lds
ss
lahf
dec
jge
or
xor
xor
shll
push
dec
sbb
aam
dec
mov
fldpi
pop
ja
push
enter
sub
jbe
sbb
jg
rcll
adc
cwtl
cmp
rol
inc
sub
insl
testl
mov
sar
aaa
call
xlat
or
jnp
icebp
js
andl
sub
cwtl
cltd
repz
cmp
jns
xor
rcll
dec
in
pop
and
mov
negl
and
fdivr
mulb
cli
js
push
cld
in
popl
mov
inc
mov
jns
pop
out
scas
add
out
dec
xlat
jns
scas
pop
dec
mov
sub
xor
push
lahf
test
movsl
jnp
sub
int3
lea
push
ds
or
in
cmpsl
mov
ljmp
sti
sahf
dec
push
sub
or
pop
popf
inc
inc
inc
dec
xchg
xor
clc
push
dec
lret
push
sub
rcrb
sub
jmp
stos
and
mov
sbb
pop
adc
aad
inc
xchg
fwait
cmp
int3
xchg
inc
pop
pop
js
sub
test
out
gs
icebp
cmc
cs
hlt
cmc
mov
xchg
mov
jge
shrl
call
shlb
cmc
out
mov
mov
mov
push
add
mov
jmp
mov
nop
and
lods
inc
out
jmp
mov
ljmp
orl
leave
fcmovbe
int3
mov
notl
ds
jae
dec
sbb
xor
popa
mov
sub
cmpsl
cs
or
jbe
out
ret
cmp
fmull
out
gs
loopne
mov
push
sub
add
adc
cs
mov
in
int
cmpsb
xor
pop
sti
pushf
fcompl
pop
inc
into
movsb
jp
leave
add
dec
mov
jl
jmp
test
cmp
scas
add
jae
test
scas
orb
inc
push
sub
repz
enter
add
pop
add
lret
sub
imul
pop
mov
popa
in
int
icebp
mov
lahf
and
xchg
adc
inc
outsl
mov
mov
mov
dec
pusha
cmpsl
sub
js
cmp
out
jg
adc
inc
or
add
and
incb
xchg
dec
xchg
loop
or
mov
and
mov
jmp
lods
stc
push
mov
cld
ja
mov
cmp
data16
or
psubusb
data16
js
dec
test
xchg
or
test
mov
add
add
pushw
dec
sub
stos
dec
andl
shrb
out
xchg
iret
and
and
xchg
les
cwtl
sahf
inc
repz
sbb
mov
jl
mov
addr16
adcb
pop
jno
xor
mov
ljmp
leave
std
add
xchg
bound
pop
shll
sub
and
jg
pop
jnp
mov
xchg
or
pop
xchg
push
xchg
cmp
ja
fcmovnu
and
and
push
mov
or
add
and
mov
adc
push
jnp
and
popa
cmpsl
jge
jo
cmp
outsl
mov
in
dec
lahf
inc
scas
sbb
mov
sbb
pop
mov
cmp
jle
push
popa
push
pushf
or
movsb
sbb
sahf
ja
push
stos
ja
and
cmp
mov
mov
outsl
loopne
xchg
cmpsb
cmp
icebp
cmp
lahf
mov
cmp
adc
add
and
icebp
leave
aam
add
adc
mov
out
jl
shlb
jecxz
sbb
das
fbld
sti
movsl
mov
adc
pusha
push
fs
pop
mov
push
pop
dec
dec
xchg
ss
mov
push
mov
addr16
mov
inc
push
push
bound
pop
sub
ret
dec
es
in
mov
das
pop
inc
fs
clc
adc
and
sbb
xchg
invd
gs
push
ucomiss
es
mov
out
test
enter
sti
mov
clc
mov
mov
fadds
int3
call
cmp
jl
push
cmp
out
fbld
mov
stos
notl
lods
cs
lret
aad
daa
cs
cmp
gs
ds
aad
mov
mov
add
cwtl
xor
add
sbb
stc
insl
xor
pop
and
fcoms
movsbl
mov
sti
jecxz
or
nop
stc
daa
jge
lds
add
lock
dec
push
adc
inc
adc
lds
fldl2e
mov
loopne
hlt
lods
cs
ret
aam
sti
xlat
or
sti
popa
loope
xor
or
mov
rol
mov
xchg
push
scas
roll
sbb
xchg
pop
stc
fistpl
loop
sbb
dec
push
test
jne
cmpsb
cltd
in
push
mov
and
add
pop
shlb
sub
or
xchg
adc
adc
jne
imul
cmp
cmpsl
mov
outsl
clc
imul
sub
cmc
repz
sbb
jg
cmp
mov
adc
repnz
push
pop
push
xorl
xchg
adc
cmp
ss
fiadds
or
and
ret
cmpsb
and
movsb
mov
xchg
outsl
ja
jp
in
cmp
pop
mov
cli
int
das
out
test
dec
ja
xchg
sarb
lods
mov
jnp
aaa
pop
xchg
loope
shlb
bound
mov
push
sahf
mov
sti
or
jl
idivl
scas
cmp
fs
jecxz
mov
insb
push
rolb
jbe
sbb
adc
adc
gs
and
push
icebp
scas
outsl
insb
adc
clc
mov
cld
data16
or
sub
jl
je
or
sbb
sbb
sub
fisubrl
loop
add
leave
stos
jns
hlt
dec
iret
cs
int3
in
mov
xor
mov
orb
incb
clc
lds
or
shr
pop
ja
sahf
andb
call
movsb
push
mov
adc
shl
sub
daa
les
mov
lods
daa
stos
push
iret
inc
pop
mov
mov
insl
pop
aaa
mov
fdivl
sbb
js
cmp
scas
mov
je
scas
imull
push
pop
jmp
push
inc
add
neg
xchg
pop
movsb
mov
mov
pop
sbb
jno
insb
daa
cli
dec
xchg
push
mov
jnp
mov
inc
xchg
rcrl
ret
inc
xchg
icebp
movb
pxor
stos
loop
out
sbb
pop
sub
insl
lret
mov
arpl
jge
scas
xor
push
dec
gs
pop
dec
add
sub
lret
push
mov
mov
inc
sub
pop
mov
jbe
call
fmull
iret
jmp
outsl
cmp
out
xlat
scas
pop
xchg
xchg
fdivrl
adc
jecxz
loope
call
xor
cld
shr
jle
pop
cmp
mov
gs
pop
xchg
andb
ds
and
ss
insb
dec
in
xor
xchg
scas
lods
push
jno
gs
push
xchg
aaa
cs
fwait
inc
lahf
mov
and
pop
pushf
imul
sbb
and
pusha
push
or
xchg
out
insb
adc
sub
mov
hlt
int3
cld
jg
sbb
inc
push
nop
sbb
rclb
xlat
imul
jo
js
sti
push
sub
mov
lea
fbstp
arpl
mov
idiv
adc
fs
jno
int
cmp
cs
mov
scas
mov
adc
push
mov
jo
stos
mov
ret
mov
mov
fcom
sbb
sbb
adcl
loope
and
aad
add
dec
cs
imul
scas
xlat
in
rcrb
mov
sub
stc
xor
cmp
call
rorl
bound
sahf
test
notb
or
ficompl
xchg
and
in
gs
cwtl
add
jge
adc
sub
into
sub
dec
daa
fs
fldenv
imul
add
leave
and
dec
sbb
adc
inc
cli
dec
push
xchg
sbb
dec
fnstenv
and
je
test
je
mov
mov
push
push
jnp
addr16
fldenv
mov
leave
int3
inc
xchg
enter
cli
in
rorb
add
cli
rol
lret
outsb
cmc
sbbl
jnp
push
sub
dec
push
xchg
aam
add
imul
cmpsb
loop
sub
or
cmpsl
pop
lret
pop
mov
insb
xchg
or
xor
nop
insb
cmp
sbb
sub
dec
dec
mov
jg
data16
lock
cli
icebp
inc
push
dec
ja
aam
pop
inc
rolb
loopne
jb
and
cmp
pop
push
test
mov
cmpl
addr16
push
jl
nop
test
leave
test
xor
sar
cmp
jmp
cld
mov
and
or
repnz
push
imul
jb
enter
fwait
sbb
add
out
ja
xchg
pop
flds
test
stos
aam
push
inc
adc
lret
sbb
add
dec
cmpsl
add
mov
xchg
in
push
lret
repz
dec
xor
xorb
loop
sub
stos
lds
and
std
repnz
cmp
mov
adc
xchg
or
aas
mov
lock
push
sti
insl
sarl
mov
jmp
into
xor
dec
pop
lahf
jg
idiv
repz
or
inc
and
cmp
add
sbb
push
jl
and
out
jb
repz
fdivl
sahf
push
es
jb
cmpl
imul
leave
pop
mov
xchg
aad
arpl
loope
orb
scas
inc
aad
pop
dec
jp
outsb
cltd
mov
das
adc
adc
sbb
inc
xchg
jbe
subb
or
in
xor
fisttpl
test
cmp
out
jge
xchg
movsb
jl
gs
daa
pop
dec
insb
mov
xor
pop
test
clc
nop
gs
pop
push
adc
push
scas
sarb
jno
lret
fstps
push
or
and
sahf
out
in
cmp
jp
jae
cmp
cmp
mov
and
sbb
rcl
push
in
or
cmp
push
inc
enter
ja
js
dec
xchg
dec
sub
push
mov
mov
push
cs
cmc
in
mov
cs
mov
lcall
out
cmpsb
mov
mov
outsb
leave
fxch
and
xchg
movsl
add
mov
mov
mov
mov
cmpsb
dec
das
xchg
in
es
add
fildl
cmp
out
dec
aad
jg
gs
xchg
repz
dec
push
cmp
and
lea
cmp
push
jecxz
dec
xlat
movsl
and
or
stos
adc
loop
inc
push
xor
fmul
mov
repz
into
cld
mov
mov
pop
xor
in
pop
mov
repnz
xchg
enter
mov
mov
adc
adc
scas
mov
xor
inc
adc
inc
out
inc
mov
ja
sub
or
insl
jle
aam
aad
outsl
mov
fbstp
and
out
repnz
push
insb
popf
das
mov
lahf
push
xor
push
les
aad
and
inc
and
in
mov
into
fs
lds
cmp
mov
fldl
je
inc
pop
push
or
into
mov
jge
daa
sub
in
mov
aas
clc
jmp
inc
movsl
xchg
sub
lret
cmp
adc
jb
dec
pop
sub
sti
rorl
cmp
call
cmp
mov
aas
xchg
gs
mov
sbb
test
out
das
test
cs
add
cmp
jg
sub
inc
out
shrl
sub
or
inc
cmp
mov
sahf
scas
pop
adcb
mov
jp
push
mov
out
addr16
fcmovne
in
cld
ret
pop
int3
add
and
add
inc
xor
xor
mov
test
jb
hlt
gs
divb
inc
xor
jns
call
nop
shrb
pop
cs
pop
fisttpll
dec
and
ljmp
inc
mov
aam
pop
xchg
jbe
and
cmp
loope
xchg
fcomps
in
ja
xor
push
jmp
int3
xchg
fnop
dec
push
jns
mov
mov
sbb
pop
out
pusha
jmp
or
xchg
sbb
push
xor
fistl
xor
xchg
pop
cvtps2pi
dec
sbb
lods
jge
mov
cmp
sub
hlt
sbb
cmpsl
out
sbb
inc
cli
mov
push
cmpsb
out
aad
enter
ret
lret
pop
xor
dec
push
cwtl
add
xchg
push
jp
scas
insb
or
nop
stos
add
enter
and
lret
mov
sbb
movsl
mov
xor
mov
and
pop
mov
out
push
pusha
sbb
imulb
jno
aas
inc
push
mov
fsts
mov
mov
ret
jb
sti
movsl
into
push
into
jbe
das
lods
dec
cmp
lret
dec
sti
jnp
pop
mov
call
and
fwait
ljmp
xor
inc
adc
ss
testl
mov
rcrl
xor
mov
imul
adc
daa
pop
cmp
pop
xor
cmpsl
fisttps
mov
and
jecxz
mov
test
jge
sbb
cmp
loope
and
mov
mov
inc
xchg
lods
xor
das
pop
test
into
xchg
mov
cmp
adc
add
or
sbb
fmuls
xor
repnz
and
js
stos
jbe
dec
mov
loopne
mov
mov
lcall
in
inc
insb
bound
dec
cli
push
test
mov
cmp
add
or
cmp
out
xchg
mov
or
sarb
int
pop
test
fadd
or
add
ror
pop
roll
ret
outsb
push
pop
push
add
add
rcrl
mov
stos
fcoms
sbb
out
inc
repnz
xchg
pop
sub
jo
icebp
std
incl
out
cmp
mov
pop
mov
pop
pop
xlat
jmp
rorl
mov
in
ja
in
or
cmp
lea
iret
push
push
mov
or
dec
dec
xchg
dec
les
imul
test
jl
inc
xchg
pop
push
es
push
pop
cmp
push
xor
ficomps
mov
xor
xor
je
mov
mov
arpl
push
xchg
pop
jno
inc
jmp
mov
sub
xor
ja
cmp
icebp
in
lods
jne
dec
or
hlt
orb
xor
inc
in
test
mov
cmp
loop
scas
dec
inc
sub
mov
popa
ret
inc
cmp
js
lods
mov
lea
notl
cli
icebp
jp
adc
icebp
or
adc
xor
imul
dec
stos
repz
adc
data16
mov
adc
fcmovbe
test
andl
ljmp
test
gs
in
mov
pop
mov
or
adc
push
lret
sbb
ds
xor
aas
lcall
sub
mov
and
rcll
xchg
cmp
mov
jo
jne
cmc
orb
and
jb
sub
out
and
movsb
shlb
sub
dec
pop
shr
pushf
insl
push
outsl
dec
xor
mov
mov
push
cmpsl
stc
sbbb
test
rcrb
gs
cmpsb
lods
sub
add
clc
in
pop
mov
ds
push
mov
rcrl
mulb
dec
xchg
jb
cmpsb
and
outsl
mov
and
pop
mull
sti
bnd
xor
loopne
mov
jnp
jg
lods
mov
push
or
stc
and
mov
and
cmp
loope
jle
stc
jnp
mov
cmpsb
jbe
mov
dec
ss
jo
scas
push
aam
out
fimull
out
stc
mov
mov
add
imul
aaa
xor
mov
pop
out
stos
push
or
fiadds
sub
xchg
cwtl
das
ds
push
mov
cmpsb
sbb
sub
lods
xlat
adc
fcmove
lods
cmp
push
js
xor
mov
aad
in
inc
jnp
mov
pop
sbb
xor
fsub
xchg
in
and
add
stc
xchg
insl
xchg
pop
jmp
and
mov
pop
push
addr16
or
lock
and
test
lock
xchg
arpl
cmpsb
bound
adc
insl
test
mov
jo
sbb
and
lods
sbb
pushf
cltd
sbb
call
jmp
push
iret
sub
add
mov
daa
rorl
adc
and
arpl
inc
adc
hlt
loop
mov
xorl
push
test
lods
ja
sbb
cmp
shl
adc
sbb
push
rcrb
out
aad
inc
sbb
inc
inc
cmp
xorb
stos
outsb
xchg
cmp
or
call
shl
or
xor
jb
add
es
and
jae
lret
adc
xchg
mov
testb
mov
push
mov
inc
ret
xor
lahf
mov
ja
adc
fdivs
mov
push
adc
popa
cmp
jbe
cmc
cmc
fdiv
into
push
outsl
sbb
jb
out
inc
push
and
mov
cwtl
les
mov
fwait
ljmp
js
xlat
inc
fadd
xor
jno
aas
and
or
arpl
sahf
lcall
dec
push
pop
lods
push
imul
xchg
gs
inc
mov
jge
test
xchg
test
lahf
addl
ret
in
sbb
out
movsb
add
shrb
jl
cmpb
xchg
enter
hlt
in
aaa
insl
enter
test
push
mov
xchg
popa
out
lahf
iret
stos
mov
xchg
fisubrs
mov
addb
mov
push
test
pop
mov
lcall
cmp
sahf
push
add
inc
lea
add
popa
repnz
outsb
or
push
out
cmpl
fs
pop
lret
sub
mov
jnp
iret
loop
icebp
push
in
or
pop
idivb
sub
add
gs
jl
lahf
sub
insl
jne
scas
test
and
cmpsb
pop
dec
jbe
push
jmp
sbb
lahf
insb
cld
out
incb
jo
es
aad
or
add
les
repz
xchg
fistpll
adc
dec
rcr
rcr
mov
stc
dec
add
cmp
movsd
push
xchg
xlat
cmp
sbb
call
and
popa
cli
loopne
dec
dec
rclb
mov
xchg
cmp
je
popa
push
rorb
pusha
sahf
inc
push
xchg
push
sarl
sub
sbb
sbb
xor
and
mov
cld
mov
orb
add
push
cmpsb
xlat
xchg
push
cmp
lods
lcall
pop
xor
dec
inc
ss
cmp
add
shrl
xchg
out
into
push
add
pop
call
enter
ret
imull
outsb
dec
mov
nop
and
mov
inc
mov
jl
push
cs
dec
sbbb
dec
out
jbe
adc
inc
int3
pushf
test
test
and
and
inc
test
cld
mull
mov
jmp
mov
mov
js
mov
ss
sub
orl
jne
repz
pusha
sub
loop
lock
xchg
insl
fmull
imul
icebp
addl
call
jns
sahf
xchg
dec
mov
gs
mov
je
dec
in
int3
jecxz
mov
or
sub
or
and
fldenv
lret
inc
mov
push
pop
lods
fbstp
mov
push
xorl
fwait
xlat
andb
mov
jl
push
popf
or
add
cs
sbb
cmc
jle
pushf
sbb
rcll
or
sbb
sub
idivl
lock
mov
xchg
adc
add
and
mov
repnz
imul
out
jecxz
cltd
sahf
pop
jae
mov
inc
loop
cmp
pusha
ficoml
in
das
arpl
in
pop
ret
into
jne
mov
loop
paddq
mov
cmc
stc
insb
sub
ret
leave
add
sbb
in
mulb
jmp
stos
mov
add
pop
mov
push
clc
or
iret
xchg
aam
add
std
fbstp
fists
add
sbb
xlat
insb
jnp
das
arpl
mov
nop
es
in
cmp
adc
dec
add
pushf
sahf
rclb
lock
xchg
push
aaa
shr
int
and
or
test
shll
loopne
out
in
and
mov
xlat
mov
xchg
add
adc
in
sahf
loopne
out
xlat
fbld
xchg
in
xchg
lahf
cli
arpl
adc
lcall
test
lds
stos
xchg
pop
xchg
addl
mov
mov
pushf
lcall
adc
mov
pushf
nop
leave
into
jg
inc
into
outsb
push
or
cwtl
push
rcll
dec
scas
lods
bt
dec
stos
mov
dec
roll
in
ret
pop
dec
test
mov
mov
fnstcw
and
jbe
xor
loope
xchg
push
rcrb
xchg
movsb
leave
outsb
push
loop
mov
pop
inc
push
inc
jmp
push
cli
ret
sub
add
dec
xlat
jne
cltd
mov
jmp
or
cli
cli
cmpsl
outsl
fisubrs
cmp
rcrb
push
push
sbb
add
scas
clc
mov
in
sbbl
shl
xor
inc
mov
dec
inc
adc
xchg
cwtl
inc
ljmp
imul
inc
test
sahf
enter
lret
pusha
test
lock
rorb
in
inc
jb
in
shll
test
adc
pop
leave
ds
movsb
iret
xchg
lcall
pop
xor
dec
mov
and
jne
std
pop
loopne
popl
pop
scas
in
ljmp
iret
in
pop
sub
mov
int3
aaa
xchg
dec
jl
imul
inc
lods
in
pop
cmp
lret
lahf
mov
bound
imul
filds
mov
scas
jno
xchg
fidivrl
lahf
idivb
pop
sub
popf
push
cmp
ss
test
mov
aam
push
jmp
les
or
push
xor
repz
pushf
add
jnp
lods
push
or
pushf
cmpsl
test
or
xchg
lods
cld
jns
or
mov
pushf
lock
or
push
mov
pop
lret
adc
in
andb
jp
cld
jno
or
sub
mov
cmc
mov
or
sti
sub
std
stos
arpl
add
enter
mov
pop
negb
push
or
inc
sub
scas
in
imul
dec
jg
lock
shlb
dec
inc
add
dec
jp
xchg
xchg
movsb
push
fcomps
std
mov
mov
adc
mov
xchg
and
js
adc
jmp
fimull
mov
adc
jp
xor
movsl
fwait
out
daa
push
adcl
imul
loopne
mov
lds
and
neg
sbb
shl
mov
and
inc
scas
cs
rcll
xor
test
out
dec
cltd
jmp
insl
pop
sub
ljmp
xchg
out
cld
or
and
mov
rcll
dec
in
push
ljmp
mov
mov
mov
jnp
and
jb
sbb
xchg
stos
or
dec
sbbl
dec
inc
jbe
das
xor
mov
xchg
jnp
xchg
push
mov
fadds
sti
xchg
test
cmp
scas
add
in
mov
cmp
jo
lods
adc
inc
nop
hlt
gs
pop
push
jnp
out
aad
pushf
or
pop
dec
loopne
push
in
movsb
cltd
lods
aas
xor
movsl
or
inc
out
js
pop
int3
xor
movsb
stc
jo
ds
pop
aad
adcb
popa
cmc
and
sbb
adc
xor
adc
stos
stos
jge
sub
mov
fadds
movsl
jo
jbe
leave
popf
loop
mov
xlat
fs
pop
jecxz
inc
pop
jo
push
and
adc
cltd
pusha
test
push
fisttpll
sub
dec
and
das
aam
push
cs
adc
idivl
lods
add
lods
pop
cmpsb
jb
clc
cs
fsts
data16
or
jb
cli
fimuls
pushf
jb
or
pop
push
xchg
or
and
shl
push
and
rcl
push
fistps
jne
mov
pop
sbb
xchg
sarl
fimuls
aas
cmpsb
pop
cli
and
xchg
add
sub
push
andl
inc
jnp
pop
pop
jno
lahf
adc
push
popf
jmp
mov
in
movsb
pop
mov
mov
stos
iret
dec
repz
in
aas
xchg
mov
out
mov
mov
xchg
cli
mov
push
jg,pt
cmp
cmpb
fcomip
and
mov
dec
fsubs
dec
xchg
clc
arpl
cmp
inc
cmp
test
lcall
movsb
pop
or
mov
fimuls
jp
xchg
jns
movsb
jecxz
sub
int3
push
sbb
pusha
inc
cmpsl
enter
adcb
in
sub
dec
hlt
test
les
les
xchg
jns
cmp
sub
mov
mov
jo
fldlg2
loopne
pop
lods
adc
adc
dec
inc
aas
jns
inc
pop
clc
cltd
dec
repnz
sahf
dec
mov
or
std
jge
scas
inc
mov
in
xchg
pop
fwait
xchg
cmp
loopne
fs
lods
cld
push
sysret
inc
lods
cmp
mov
ljmp
imul
push
out
and
dec
addr16
out
adc
repz
fidivs
mov
out
repnz
arpl
mov
push
int
outsb
clc
xor
inc
cmp
cli
mov
jb
mov
fisubl
inc
xor
sahf
pop
in
test
cmp
jmp
pop
out
mov
dec
push
push
aas
cmp
mov
out
fs
imulb
es
loopne
je
aas
fdivs
out
rcl
push
jno
sarb
movsb
fisttpl
lret
dec
push
dec
mov
out
and
loopne
mov
jae
aad
pusha
arpl
xchg
xor
pop
out
dec
push
data16
sub
mov
and
dec
pushf
jnp
data16
push
in
insb
sub
cwtl
or
mov
cmp
mov
jge
push
cmp
pop
mov
pop
inc
inc
cmp
aas
pop
and
cmp
jne
hlt
dec
sub
test
popf
sub
dec
loop
mov
pusha
ss
fsubrs
push
mov
in
mov
cmpsl
sbb
mov
popf
adc
aaa
aaa
push
or
lea
xor
jmp
leave
fldenv
fisubrl
les
call
push
sub
pushf
scas
xor
sbb
dec
xchg
sbb
sub
mov
add
inc
inc
mov
or
jbe
inc
sbb
dec
aad
std
lahf
push
not
pusha
xor
xchg
mov
shlb
xchg
and
cmc
ss
mov
jecxz
imul
xchg
adc
fstpl
sub
int3
and
xlat
cld
inc
fildll
iret
jle
data16
and
test
int
dec
pop
pusha
sti
jg
dec
sub
rcrb
addr16
pop
push
xor
mov
mov
cmp
nop
xchg
xchg
mov
negb
adc
cmp
imul
push
dec
testl
leave
int3
add
add
jl
mov
sbb
push
or
rclb
jl
push
insl
insl
into
pop
sar
negb
or
push
test
loop
mov
push
mov
pop
movl
imulb
cmpsb
imul
mov
mov
inc
cmp
mull
in
push
bound
jg
cli
mov
or
adc
mov
mov
mov
loop
shl
sbb
xor
mov
cmp
jbe
mov
sub
les
lret
bound
inc
xor
lret
outsl
mov
test
call
push
jl,pn
and
insl
jnp
jl
dec
sbb
gs
inc
sbb
sti
std
pop
inc
xchg
adc
mov
cld
xchg
mov
mov
cmp
hlt
adc
cmp
xor
lahf
sbb
push
jb
and
les
dec
shl
lods
arpl
xorl
into
inc
jle
shlb
push
pop
sub
or
sbb
repz
mov
mov
ljmp
lret
jae
lds
push
not
mov
ret
jbe
inc
xlat
insb
inc
cmp
out
inc
xorb
outsl
enter
sarl
ja
divl
movsb
mov
int3
xchg
out
jle
shlb
cmp
pusha
fsub
fsts
and
mov
les
adc
insl
int3
xor
xchg
adcb
fsubl
adc
push
shrb
mov
fildll
mov
xchg
mov
xlat
sbb
aas
push
popf
sub
aam
dec
addl
mov
push
and
adc
xchg
mov
fstp
testb
or
push
and
out
and
jo
mov
int
jmp
mov
shrb
push
push
cmp
out
pop
or
stos
cli
mov
jmp
and
out
aaa
mov
mov
div
adc
lcall
jg
inc
xor
cmpsb
mov
adcb
vunpckhps
inc
ja
jns
mov
mov
loope
sti
pushf
cld
int3
push
push
loop
int
and
xorl
jge
and
add
loop
ficomps
mov
and
mov
dec
scas
je
flds
mov
inc
loopne
jb
aad
cmp
rorl
loopne
hlt
and
push
stc
cmp
mov
fcom
lock
outsl
test
inc
xchg
jb
jp
mov
cmpsl
inc
aas
sub
push
jns
dec
xchg
cmp
mov
or
xor
fwait
sub
std
enter
jbe
dec
jbe
xor
lea
div
push
leave
cwtl
int3
mov
in
dec
inc
add
and
mov
dec
cwtl
mov
sub
pop
xchg
aad
and
lods
xchg
mov
imull
clc
icebp
cmpsl
mov
out
inc
xor
fst
pop
lret
sub
dec
jecxz
xor
mov
lret
call
fucomp
inc
inc
mov
pop
pop
scas
or
jne
xor
loopne
loope
rcll
fs
mov
cmp
leave
es
hlt
dec
cmpsb
es
addr16
pop
jge
mov
or
xor
aas
push
mov
push
mov
filds
adc
fcmovnbe
cmp
jmp
fs
lods
test
adc
pop
fcmovu
add
inc
fsts
test
sub
xchg
pop
dec
adc
push
mov
out
outsl
sbb
lds
add
movsb
jge
mov
push
test
adc
or
adc
cmp
adc
ds
shll
add
cld
sub
clc
sar
test
inc
jg
dec
xchg
and
sbb
or
cld
sbb
mov
out
mov
lret
xchg
sub
iret
out
and
push
js
push
stc
scas
call
rorb
adc
cmp
and
insb
sbb
or
or
or
mov
cs
and
pop
dec
stos
sbb
dec
sar
int
sbb
and
sub
mov
arpl
add
lahf
jmp
popf
sub
cmp
insl
pop
scas
aaa
adc
ss
pusha
stos
repz
lret
jno
dec
fs
sub
cwtl
add
jno
sti
out
addl
call
sqrtps
cmpsb
xchg
mov
jecxz
mov
in
lds
cmpsb
fistpll
decb
imul
xor
jb
mov
push
add
mov
adc
add
cld
loop
out
sbb
mov
pop
sub
xor
inc
sub
sub
adc
xchg
insl
jge
sbbl
mov
xor
cwtl
jl
mov
aam
jne
aaa
sbb
mov
bound
adc
in
pusha
movsl
add
add
and
call
and
ret
pop
push
push
clc
mov
mov
mov
cmp
std
mov
and
subl
mov
movsl
gs
iret
hlt
ret
jg
notb
nop
repnz
cmpsl
cmp
xlat
aam
mov
fstpl
xchg
dec
icebp
out
gs
xor
or
mov
les
jecxz
jg
mov
dec
jbe
jmp
cmp
inc
mov
inc
dec
icebp
mov
inc
cmpb
push
leave
dec
cwtl
loope
lock
in
ljmp
dec
mov
sti
mov
push
xchg
mov
pop
les
loope
enter
xor
in
xchg
testb
div
cmp
xchg
inc
aad
xor
sub
lahf
dec
not
into
mov
dec
cmpsb
sub
movsl
insl
xor
mov
icebp
dec
nop
loop
sbb
in
cli
pop
rcll
sub
add
or
ljmp
mov
test
mov
dec
cmp
xor
sti
loop
movsl
dec
insl
mov
fiadds
push
mov
aaa
out
push
add
jbe
rolb
dec
mov
dec
push
mov
xchg
sub
aaa
mov
in
and
icebp
movsb
test
mov
iret
jle
sti
insb
out
cmp
fstpl
mov
loopne
push
jl
sbb
es
test
mov
inc
addr16
or
xor
sbb
fisttpll
xor
pop
ret
cmp
lea
push
das
and
addr16
or
and
inc
ss
inc
add
movsl
fstpl
aas
mov
jle
iret
stc
sub
inc
popf
push
lock
adc
or
ss
cmp
dec
sbb
or
pop
adc
push
cmp
lret
jp
cmpsb
mov
adc
pop
je
pop
bound
and
and
xchg
ret
pusha
test
add
lcall
fiadds
bound
or
fadds
pop
cmp
mov
fs
ds
int3
cmc
aam
and
mov
mov
cld
xorb
mov
outsl
mov
out
pop
cmp
daa
in
mov
xor
lods
and
cmp
pop
adc
pop
dec
fnstsw
aad
mov
sub
stos
dec
adc
jnp
je
repnz
mov
cmpsl
outsl
jl
in
out
jb
mov
xchg
adc
pop
and
int3
movsb
and
dec
icebp
es
nop
pop
push
mov
repnz
out
out
mov
stc
add
add
outsl
insb
mov
jb
cwtl
mov
sub
call
and
mov
shlb
sub
cmp
adc
jl
xorl
and
push
jecxz
test
jl
inc
in
les
in
test
out
cmp
xchg
loop
test
std
ds
pinsrw
sbb
mov
int3
adc
aam
mov
repz
subl
pop
cmpsl
fcompl
sahf
xor
push
ja
arpl
jbe
mov
inc
or
dec
inc
int
lret
push
pop
xor
movsl
mov
incb
mov
in
gs
test
lret
or
mov
imul
sub
movsb
iret
stos
lods
daa
movsb
push
fsubrl
in
cmp
ds
mov
mov
jmp
icebp
inc
jo
or
imul
inc
xor
iret
or
loope
inc
xchg
add
in
rsqrtps
nop
into
das
push
cltd
push
or
xchg
sbb
stos
jns
lock
mov
sbb
mov
lods
push
mov
fildll
and
clc
jle
cmp
stos
sub
outsb
pop
arpl
mov
jmp
cmp
outsb
inc
xor
outsb
das
adc
dec
cmpsl
dec
movsl
lods
push
loop
pop
mov
testl
adc
mov
jle
adc
lods
cltd
xorl
fmuls
and
jno
sub
loop
ja
stc
or
cmp
imul
movsb
ret
and
adc
movsl
fwait
daa
out
dec
test
jo
xor
add
sbb
inc
add
ret
pop
das
bound
xchg
adc
popa
or
cmovle
cli
mov
sub
adc
dec
xor
pop
test
ss
ficompl
adc
ljmp
add
cmp
inc
andb
or
and
or
stc
mov
es
stos
jae
addb
jnp
popa
pushf
sbb
cmp
mov
jl
inc
adc
ret
test
aaa
or
jnp
into
sti
ud0
push
pop
insl
jne
cmpsl
clc
dec
aas
push
aas
test
int
add
push
fld1
pop
xchg
ljmp
lock
inc
jo
cmp
cmp
dec
jmp
jns
cltd
fsub
shll
fimull
mov
dec
add
faddl
cmpsl
jle,pn
pop
xor
jl
cmpb
fbstp
sbb
pop
jnp
push
sti
stc
xor
outsb
inc
add
xchg
int
mov
sarl
push
outsl
cli
stos
jno
jno
pop
mov
mov
mov
mov
inc
sbb
movsl
jb
xchg
jecxz
mov
cld
out
pushf
add
outsl
mov
push
popf
es
xchg
xor
dec
xorb
add
movsb
xorl
out
popf
xchg
dec
push
push
sub
jnp
mov
push
push
out
xor
sarl
lods
mov
mov
shrl
adc
lods
into
jb,pn
jecxz
test
sub
adc
mov
jo
push
arpl
negl
pushf
lret
jecxz
sbb
in
mov
movsl
lock
xchg
loopne
rol
out
pop
dec
mov
jbe
loop
iret
adc
mov
pop
insl
ljmp
mov
les
jnp
push
xchg
cmc
push
mov
add
push
repnz
icebp
jg
add
arpl
mov
adc
ror
sub
fdivrs
add
sbb
ljmp
push
int
push
outsb
or
test
add
add
fisubs
pusha
je
jl
sti
push
call
adc
aaa
aas
cmpl
sub
mov
aam
popa
cmp
push
sub
jg
jmp
xchg
jne
rorl
dec
insl
mov
and
adc
inc
out
xor
xchg
xchg
popf
lahf
xchg
cmpsb
and
and
nop
dec
xchg
dec
in
mov
je
movzbl
cmp
push
xchg
mov
loope
mov
in
clc
addr16
ja
jo
inc
bnd
jge
jne
and
cmp
outsl
js
in
leave
call
ret
sbb
or
xor
push
fstps
pop
lret
icebp
jb
cmp
push
inc
jbe
cs
lret
sub
jl
stos
mov
lret
or
mov
sbb
incb
out
push
andb
es
or
lods
mov
std
fstpt
andb
popf
add
aam
or
repnz
cs
loopne
push
cmpsl
mov
loop
xor
sbb
cmp
cmp
test
mov
insl
test
out
jecxz
mov
push
sub
mov
iret
clc
test
push
pop
cli
xchg
sbb
dec
add
bound
xchg
cmc
fadds
sbb
in
and
mov
ljmp
sbb
movsl
cmc
inc
cmpb
xchg
jmp
mov
sarb
xor
cmc
mov
icebp
xchg
addr16
jmp
jmp
dec
jmp
fadd
pusha
mov
std
mov
mov
imul
inc
pop
mov
stc
dec
inc
inc
test
jbe
push
inc
and
or
sub
punpckldq
adc
push
cmc
call
shll
xor
aam
js
cmp
sub
mov
cmpsb
and
cmp
cmp
jns
adc
loope
leave
lock
sub
scas
dec
sbbb
cmp
mov
sbb
lods
push
ror
inc
into
sbb
lock
test
inc
jge
mov
push
or
loop
ja
mov
lods
and
popa
jbe
notb
or
fs
fdivrl
cmovle
cwtl
popf
adc
scas
pcmpgtb
cmp
gs
jl
or
xchg
fwait
clc
mov
jg
repz
rorb
push
or
push
fsubrs
popa
ss
mov
into
cmpsb
dec
push
sub
or
push
fnsave
das
adc
push
outsl
mov
fildl
add
js
jae
pop
jmp
pop
mov
loope
push
daa
mov
jmp
pop
stos
dec
inc
and
insl
jne
in
ljmp
or
push
or
sbb
mov
xchg
mov
xchg
cs
pop
xor
es
aas
sub
call
scas
push
mov
jmp
jne
lods
or
nop
mov
jge
test
lock
sbb
in
mov
inc
or
out
aad
ljmp
inc
pop
ret
pop
in
add
push
sar
jae
mov
dec
aam
lea
fwait
cmp
jo
xchg
imul
lods
mov
xorb
mov
ljmp
shl
cmpsb
sbb
orb
stc
repz
bound
adc
pop
into
sbb
sbb
adc
jg
flds
dec
xor
mov
out
jb
pop
testl
xchg
xchg
testb
mov
in
push
push
pop
cmpsl
loopne
push
sub
adc
or
std
daa
int
add
mov
scas
mov
xor
repz
mov
pop
popa
stc
cld
xchg
out
mov
movsl
clc
pushf
and
and
inc
sbb
out
and
rorl
push
cld
push
in
icebp
pushf
movsl
mov
fsubrs
dec
jo
fiaddl
jl
push
push
mulb
cmp
js
dec
bound
jno
mov
lret
mov
xabort
inc
mov
lret
and
jb
jmp
or
cmp
xchg
sbb
pop
cs
test
je
pop
xlat
mov
push
addl
jne
cwtl
push
insb
stc
cltd
adc
leave
fs
jp
int
es
and
aas
cmpsb
shrl
mov
imul
and
call
jle
sbb
pop
cmp
jbe
xlat
or
shlb
jnp
lds
faddl
adc
dec
test
pop
push
fisubrl
mov
cmpsl
fadd
sub
out
xchg
cmp
test
push
insl
adc
xor
sarl
incb
jb
inc
mov
add
xchg
jo
mov
int
cltd
and
lea
push
imul
ds
mov
mov
lds
inc
sub
push
xchg
test
imul
into
ljmp
fwait
push
fildl
pop
leave
rcrb
sub
clc
xchg
test
mov
mov
sbb
adc
sub
add
sbb
addr16
out
cmpsl
push
stos
inc
sbb
ret
lods
test
or
cs
cmp
idiv
addr16
xorl
lret
xor
movsb
sbb
filds
sbb
push
pusha
dec
lahf
pop
push
add
jbe
aad
loop
push
fnstsw
fcmovnu
test
arpl
int
mov
ds
shrl
mov
dec
pop
std
sbb
cwtl
dec
mov
mov
bound
pop
jl
ror
leave
out
jmp
cmp
push
dec
sbb
cmp
mov
xchg
icebp
jo
pop
cltd
inc
push
pop
sub
xchg
add
ja
in
cmpsb
mov
pop
cld
sub
nop
fwait
ret
nop
dec
mov
repz
ret
dec
lcall
jmp
ljmp
xor
adc
mov
jge
xlat
push
es
imulb
jle
and
fmul
das
xchg
jno
pop
xor
leave
lret
movsl
xchg
dec
ds
daa
ret
or
jo
inc
xor
lret
jge
in
in
mov
push
xor
dec
jl
jg
andb
jmp
das
mov
mov
mov
sar
mov
outsl
jns
fs
jne
add
ret
push
stc
rcll
mov
int
jle
js
paddw
popa
xchg
xchg
xlat
jae
sti
pop
inc
mov
lret
push
movsl
add
call
mov
es
or
cmp
out
aad
imul
pop
aaa
push
mov
push
js
push
sti
sub
stos
jecxz
mov
add
xchg
mov
rcll
iret
lret
lcall
ja
pop
insb
movsb
jmp
cmp
shr
mov
mov
int
mov
xchg
stos
enter
fstps
dec
iret
pop
mov
faddl
shll
xlat
sbb
and
inc
addr16
jnp
sbb
ljmp
test
fdivl
add
mov
mov
pusha
sbb
or
bound
mov
sub
out
clc
jmp
negl
scas
push
andb
inc
loopne
popa
repz
lcall
data16
icebp
adc
fmull
ja
lods
and
outsb
adc
mov
ret
mov
mov
sbb
or
enter
and
cmpsb
mov
in
sbb
andl
mov
cmp
mov
ffree
js
sar
lret
fcomip
jae
aaa
jne
repz
cltd
fs
call
lock
jae
xor
cmp
inc
adcl
xchg
mov
add
stc
xlat
andl
xor
pop
sarb
pop
inc
int3
xor
adc
sahf
add
sub
inc
xchg
fwait
mov
pop
mov
insl
add
jmp
sbb
loop
cmp
inc
pop
cltd
stos
inc
das
ror
mov
push
dec
sub
adc
cs
mov
jmp
loop
cmpsb
mov
sarl
sbb
cld
sbb
lock
dec
test
orb
stos
movsb
repnz
out
sbb
loop
shl
das
push
or
xlat
fistl
pop
push
mov
rcll
push
mov
xchg
test
out
mov
in
pop
ret
clc
sbb
xor
outsl
inc
sbbl
fdivl
xchg
das
loopne
je
cmp
inc
cmp
jo
loop
ret
addr16
xchg
adc
or
xor
jp
cltd
cmpsb
outsb
sbb
push
ret
sub
test
es
pop
dec
pop
cld
stos
jae
mov
add
sub
and
xchg
std
in
cmc
xor
or
jp
fsubs
or
or
pop
sub
mov
sub
mov
xchg
or
inc
pusha
mov
jae
out
mov
subl
je
push
fucom
or
and
je
pop
mov
sarb
orl
mov
push
cmc
popa
sub
out
jle
daa
inc
or
push
js
fwait
adc
test
mov
les
mov
lock
push
xorb
dec
mov
filds
add
pop
xchg
lods
push
inc
pushf
jb
test
divl
or
and
out
lcall
mov
int3
out
shll
mov
call
sub
stc
xor
jmp
subb
xor
pop
dec
bound
mov
ret
mov
dec
pusha
jg
in
mov
sub
les
and
jge
out
hlt
mov
mov
dec
test
xor
cmc
ljmp
sub
loope
out
mov
daa
out
je
or
push
stos
fiadds
pop
data16
and
es
cmp
xchg
jo
sub
icebp
xor
jo
xor
sub
pop
inc
lods
cli
jo
pusha
lret
mov
push
push
data16
jmp
mov
xor
andb
xor
sarl
mov
fcmovbe
sub
push
int
aaa
test
jecxz
aad
adc
rorl
xchg
dec
inc
or
sub
pushf
jmp
push
sbb
cmp
aad
lret
mov
out
mov
popf
repz
xchg
jnp
push
pop
insb
arpl
or
jge
push
vmovss
imul
jecxz
mov
or
and
push
adc
rolb
pop
stos
loope
or
into
jo
xchg
sahf
xchg
out
dec
cmp
jno
leave
xchg
push
push
xchg
sub
jp
push
es
ror
push
lret
xor
sbb
xor
fldcw
movsl
cmc
out
int3
pop
jge
add
pushf
test
mov
lahf
dec
jp
cmpsl
or
add
inc
sub
mov
fwait
jmp
sahf
jl
xor
and
out
popa
into
dec
andb
jecxz
scas
aad
xor
jo
movsb
cmp
pushf
std
mov
pop
push
fidivl
mov
or
dec
inc
mov
idivl
sbb
push
jno
test
sahf
je
mov
outsb
mov
fnsave
inc
adcl
bound
cmp
ds
add
pop
outsb
mov
push
xor
stc
mov
mov
or
rcrb
and
xchg
std
sbbb
rorl
push
dec
es
mov
lods
enter
mov
cwtl
fsubs
aas
lods
imul
ret
mov
mov
and
inc
ret
jbe
cmp
lods
fsubs
adc
pushl
out
insb
fs
push
test
xorb
mov
dec
jne
dec
jae
fcoms
adc
in
jbe
in
imul
cmp
ds
xchg
test
mov
add
ret
cmc
cmp
loope
and
add
cmpsb
or
mov
cmpsl
stos
cmc
jae
fdivrl
push
and
dec
out
inc
int
push
xchg
xchg
mov
push
shr
iret
push
add
pop
push
mov
inc
pop
mov
sub
xorl
arpl
push
fdivs
or
xchg
inc
dec
outsb
fisttps
sbb
pop
rorb
popf
xor
mov
xor
cmpsl
in
add
and
xchg
cmc
jnp
xchg
sbb
cmp
popa
out
gs
js
inc
pushl
mov
sar
gs
jmp
mov
cli
jmp
test
mov
shl
mov
scas
popf
jle
adc
shlb
mov
fdivp
je
int3
imul
sub
mov
xor
mov
jecxz
push
cs
out
sbb
repnz
sbbl
stos
push
mov
fst
rorl
aaa
cmpsl
inc
jecxz
and
das
data16
stc
inc
int3
jo
imul
and
test
mov
xchg
mov
movsb
cmpsb
or
push
mov
cs
adc
adc
cs
cmp
pop
test
cmp
aam
mov
mov
jne
xchg
lds
inc
scas
jnp
subb
xor
cmc
pop
stc
jle
xor
lret
stc
sub
and
movsb
jge
repnz
int3
mov
mov
or
adc
scas
mov
inc
outsb
pop
mov
cmp
loop
in
leave
xor
scas
fwait
push
mov
addr16
inc
sbb
xchg
xchg
and
movsb
icebp
aas
ljmp
cltd
lods
and
aas
std
fldcw
xchg
adc
add
sahf
and
lock
daa
add
fstpt
xor
shr
aas
cltd
aam
cli
out
lods
jge
adc
pop
cmc
sarl
mov
cmp
mov
jmp
push
shll
cs
lret
push
lods
movsl
dec
in
addr16
pop
jle
movsb
fs
fbstp
xor
stos
fisttpl
out
push
jbe
rcrb
outsb
inc
cmpsl
data16
pusha
cmp
ja
sbb
outsb
test
pop
faddl
rorb
jge
cmp
xchg
fwait
sahf
fcmovnbe
popf
sbb
aam
pop
dec
enter
lds
xor
jae
inc
mov
xor
xor
in
out
inc
scas
std
es
add
and
push
add
add
pusha
jo
adc
pop
pop
dec
mov
add
scas
repz
repnz
addr16
loope
pop
jo
in
clc
xchg
icebp
in
adc
gs
jle
fstpt
stos
rclb
movsb
int3
sbb
push
fidivs
add
mov
xor
push
or
outsl
out
mov
push
popa
pushf
xchg
push
xor
jns
xor
loopne
xor
fildll
or
jp
push
scas
movsb
cmp
popf
push
in
fwait
push
js
loope
push
icebp
xchg
popf
les
addr16
dec
add
enter
jecxz
andb
mov
pushf
dec
out
nop
rcll
mull
push
lret
enter
pop
call
aam
sbb
cmpsb
aaa
mov
add
sbb
push
lock
addr16
dec
xor
pushf
es
aam
or
cmc
out
xor
sbb
or
jl
or
or
dec
fwait
test
push
roll
aam
cmp
push
int
inc
or
mov
pop
push
cld
loop
rclb
pop
mov
sbb
cmp
clc
hlt
test
rcr
cmpsb
out
arpl
mov
roll
xchg
cmc
inc
shll
das
ljmp
daa
xchg
dec
jecxz
into
xor
xlat
ja
icebp
jl
adc
sbb
mov
sub
mov
imulb
gs
and
fwait
mov
pushf
mov
or
repz
and
es
inc
mov
out
mov
push
adc
adc
add
adc
mov
aas
cmpsl
xor
sbb
push
cmc
sub
mov
rorl
loope
add
ror
cmpsb
sub
bound
test
inc
lock
aam
stc
bound
add
push
sbb
enter
xor
mov
fucomi
mov
push
xor
test
mov
out
andb
mov
inc
insb
pushf
pop
adc
fwait
je
add
xchg
and
in
push
inc
daa
inc
adc
xchg
iret
add
inc
and
or
cmp
es
test
or
push
and
push
mov
or
dec
lret
clc
push
or
inc
loope
cmp
xor
dec
enter
cmpsl
sbb
dec
testb
rclb
jb
jecxz
test
out
cmp
in
inc
push
call
mov
inc
cmpsl
cmpsl
cmpsb
push
mov
inc
jle
in
lods
cmp
and
mov
cmpsl
or
and
test
add
inc
lret
cld
lret
jae
xchg
aam
addb
cwtl
sub
int3
mov
scas
xchg
xchg
xchg
cmpsl
jbe
mov
rcl
xchg
adc
fwait
in
xlat
xor
push
push
insb
mov
cmc
clc
loopne
mov
lahf
jmp
mov
ret
pop
xor
jbe
shlb
or
into
mov
shl
mov
fwait
jb
jnp
add
ljmp
push
xor
add
dec
jp
icebp
arpl
imulb
dec
add
jl
aad
fstl
gs
jecxz
adc
pop
stc
mov
cmc
push
enter
loopne
fildll
ret
mov
push
and
jmp
mov
int3
fs
jle
inc
test
cltd
int3
jbe
mov
mov
jnp
arpl
xchg
scas
mov
mov
leave
jecxz
mov
cmpsb
cmpsl
cmp
repnz
nop
jl
xor
aam
push
sbb
fldl
mov
ljmp
shr
mov
aas
mov
stos
push
nop
adc
pop
push
ficoml
jo
push
mov
jns
add
adc
daa
or
add
push
push
mov
cmpsl
mov
push
jg
pop
inc
add
xchg
imul
adc
jmp
dec
cmp
aas
xchg
mov
insb
xor
into
or
es
or
ss
adc
inc
lcall
or
mov
jmp
adc
pop
add
cmpsl
mov
ret
lret
lcall
fists
dec
mov
out
cmp
push
and
test
mov
pop
call
xchg
movsb
cli
xor
mov
sub
fcomi
stos
or
push
leave
xorb
adc
push
bound
xor
jo
lea
pop
adc
xchg
push
cmp
pop
adc
mov
scas
jnp
mov
sbb
divb
push
and
push
clc
dec
adc
shl
imul
hlt
cmp
mov
and
xchg
ret
jmp
jbe
or
data16
js
pop
mov
fwait
pushf
js
pop
jnp
xor
mov
cmpsl
cmp
push
mov
movsl
insl
mov
mov
pop
dec
xor
cltd
mov
loopne
ja
gs
data16
stos
enter
cmp
ja
rcll
inc
dec
hlt
arpl
iret
add
lock
dec
fadds
pop
sahf
jno
pop
rol
jg
inc
xchg
push
pop
aaa
je
cmpsl
jmp
aas
test
int
pop
loopne
les
inc
fwait
insl
int3
jno
sub
fsubrl
jb
gs
jge
and
add
push
adc
bound
xor
daa
gs
xor
aad
mov
stos
push
sbb
mov
imul
mov
imul
cmp
ret
dec
cltd
mov
or
pop
add
stos
mov
adc
std
jae
or
push
add
ret
mov
popa
fwait
ja
aad
dec
inc
add
ss
jl
or
pop
pushf
jnp
inc
stc
dec
lret
adc
sub
push
insb
shll
hlt
repz
dec
push
stos
cmp
pop
mov
lcall
cmpsb
mov
jecxz
andb
sub
push
fnstcw
dec
enter
outsb
pop
fstpl
into
mov
sahf
push
cmpb
mov
push
loope
into
imul
ja
jmp
push
pop
test
ficoms
fwait
and
out
mov
clc
loope
and
insl
les
xor
sub
dec
lock
sub
out
in
inc
dec
or
and
outsb
add
jge
repz
fldl
jb
hlt
daa
iret
mov
loope
popa
mov
pop
mov
add
inc
jp
or
sbb
aaa
arpl
lahf
mov
stc
cmovl
inc
push
fstp
imul
ret
pop
add
jecxz
pusha
inc
mov
and
adc
jg
inc
jne
loop
xchg
cmp
jmp
fimuls
cli
dec
pop
mov
cld
or
sub
and
xor
jbe
pop
cmpsb
out
push
sbb
inc
jle
push
sub
popa
test
imull
sbb
sahf
lahf
in
lods
jecxz
sbb
sti
pop
fildll
sahf
ds
xchg
push
sbb
fidivl
jo
shrl
add
fs
cli
inc
fcmovnbe
pop
mov
pop
mov
cmp
repz
popf
jge
mov
push
movsl
push
ljmp
xor
jecxz
fs
int3
test
cltd
mov
adc
inc
mov
fstpl
enter
lcall
add
push
dec
iret
cmp
push
cmpsb
test
pop
xchg
xor
lock
test
leave
ja
je
push
mov
push
xor
lahf
sbb
mov
test
lods
out
add
mov
lods
xlat
mov
or
xor
mov
xchg
jns
pop
pop
add
push
pop
es
paddsw
mov
inc
mov
pop
jle
push
cwtl
out
jo
inc
dec
jne
push
adc
pop
inc
push
or
sbb
js
int3
in
dec
fildll
ds
popf
jmp
ljmp
test
outsl
mov
jae
out
jns
shrl
or
xchg
cmp
mov
mov
sub
push
pop
add
or
or
push
inc
fstps
dec
fldcw
cld
lret
mov
push
add
popa
cltd
mov
pop
pop
jp
mov
adc
or
add
push
int3
jno
inc
xor
and
xor
mov
jg
adc
sub
fidivs
repnz
imul
jg
mov
pop
cmpsl
add
inc
and
mov
push
divb
pop
lahf
int3
dec
data16
push
ret
jge
xchg
testl
pop
bound
rorb
xchg
mov
push
lahf
xor
shlb
mov
and
xor
fsubrl
pop
cld
mov
rcrb
bswap
fdivrl
xchg
dec
lds
inc
scas
fdivs
pop
or
pop
orb
loope
cmpsb
outsb
addb
add
cmp
push
or
aad
mov
loope
cmpsb
mov
cmp
xchg
and
dec
test
movsb
in
lods
cmc
inc
mov
lds
dec
push
ja
jb
stc
cmpsb
add
pop
stc
sti
imulb
push
insl
cmp
jnp
cwtl
adcb
inc
mov
aaa
mov
aam
inc
mov
testb
xchg
rolb
out
xor
xor
ret
fimuls
mov
mov
into
movsl
jno
je
mov
mov
push
sarl
aam
mov
push
daa
out
addr16
out
in
or
aad
fmuls
and
aad
jmp
push
mov
out
jmp
jge
dec
shl
test
rorb
insb
sub
out
and
and
das
mov
mov
popa
sub
es
lret
xchg
jns
mov
push
in
icebp
scas
sub
adc
sbb
mov
adc
notb
lret
xchg
lahf
scas
inc
xlat
in
cld
sbb
out
sbb
sarb
xlat
adc
icebp
mov
sub
ljmp
xchg
jp
ljmp
pop
insl
dec
enter
inc
push
jo
push
je
js
add
out
jbe
mov
movsl
cmpsl
jge
adc
dec
xor
pop
aaa
mov
push
mov
mov
dec
dec
sub
push
and
stc
and
push
hlt
repz
into
pop
adc
xchg
pop
inc
add
gs
addr16
fldl
addl
and
mov
add
aam
pusha
outsb
subl
mov
jo
lret
xchg
mov
jns
xchg
jbe
aam
xchg
cmp
xchg
popf
scas
ds
xchg
clc
jae
mov
sbb
je
add
mov
lods
sub
push
aam
stos
dec
xchg
mov
insb
pop
and
dec
mov
into
add
test
ret
test
nop
mov
push
mov
jae
inc
mov
ljmp
push
lret
push
xlat
in
inc
loope
cs
pop
out
cwtl
lock
push
aad
inc
mov
fpatan
lods
cltd
fwait
mov
mov
push
push
ljmp
lcall
sub
push
mov
cmpsl
pop
and
inc
test
sub
andb
leave
int
mov
mov
xchg
xor
pop
add
movsl
icebp
mov
ret
cmovae
adc
pop
sbb
bound
bound
inc
xchg
xor
mov
orl
jle
mov
icebp
imul
mov
pusha
xor
xchg
repnz
and
mov
arpl
sbb
inc
fildll
adc
popf
add
push
js
mov
rorb
ret
xchg
xchg
sbb
cmpsb
and
stos
pop
js
imul
dec
add
xchg
lret
dec
ja
ret
addl
das
in
aad
mov
xor
repnz
inc
lret
mov
fstps
adc
jne
in
sub
sub
jne
sbb
inc
mov
mov
stos
aad
mov
cmp
push
adc
inc
pop
lock
mov
mov
out
cmp
popf
mov
push
dec
fidivrl
and
sub
lock
stos
sbb
inc
std
cmp
sahf
pop
icebp
aad
loop
jp
sbb
jae
out
mul
ret
mov
fldenv
sahf
adc
out
dec
cmpb
addr16
inc
mov
pop
movb
or
xchg
ja
sahf
in
sti
add
popa
mov
xchg
push
xchg
adc
xor
enter
out
subl
icebp
in
stos
push
movl
stos
es
sbb
jl
xchg
or
jne
imul
adc
push
xor
inc
out
jecxz
mov
insl
ret
cli
push
pop
test
das
add
cmc
add
in
leave
andb
imul
xor
cmp
mov
dec
inc
repz
cltd
outsl
or
js
repnz
gs
xor
mov
adc
movsb
dec
dec
mov
add
int
daa
sub
cli
adc
inc
sub
in
mov
jle
adcl
dec
xor
icebp
xchg
cmp
mov
out
enter
outsb
pop
mov
pop
scas
test
stos
mov
into
jecxz
loope
and
test
mov
dec
out
inc
inc
adc
es
add
sub
outsb
mov
jne
lret
icebp
push
lods
fnsave
dec
out
inc
out
pop
sub
cmp
pop
mov
add
jnp
fdivs
inc
inc
mov
test
xchg
cmp
mov
loop
or
mov
mov
lds
scas
nop
xor
es
int3
pop
mov
cmp
movl
push
std
dec
lret
sub
mov
or
sub
mov
fstpl
lods
out
mov
mov
adcl
pop
sbb
lret
aas
inc
jns
test
push
insb
cld
inc
lds
subb
rol
push
jle
cmp
repz
lret
mov
push
in
lret
bound
sub
insl
in
add
cli
adc
jns
jnp
testl
lret
icebp
inc
and
pop
movsb
adc
pop
out
stc
push
mov
popa
inc
test
mov
es
mov
dec
dec
rcr
or
inc
incl
mov
fldl
pusha
stos
xchg
loope
push
outsl
int3
sti
dec
scas
add
out
jp
jae
lods
cli
mov
rcrb
mov
push
push
inc
pop
stc
mulb
je
adc
rorb
mov
bound
shlb
in
adc
pop
icebp
addr16
push
stc
pop
mov
lods
push
addl
lea
addr16
test
jmp
shrl
bound
rorl
subl
xchg
shlb
outsl
mov
sbb
aaa
adc
inc
mov
hlt
xor
mov
stc
jl
lods
push
rolb
ret
aaa
in
aas
lret
push
icebp
cmp
xor
mov
sub
gs
imul
loopne
xor
mov
or
sub
mov
dec
jns
xchg
push
les
mov
xchg
inc
jmp
sbb
mov
inc
push
cwtl
fistpll
nop
ficompl
mov
or
mov
jns
jg
inc
mov
pop
mov
pop
std
hlt
outsb
cmp
xorl
xor
jl
lods
test
push
pop
or
arpl
pop
fisubrl
loop
std
cmpl
test
lahf
mov
xor
push
fstps
pop
lds
pop
xchg
lret
sub
ds
xor
jae
inc
std
rcrl
iret
repnz
xor
add
sbb
jbe
xor
pop
sbbb
pop
sub
stc
jno
into
arpl
sub
and
xor
jae
leave
xor
je
je
outsl
ljmp
rorb
jg
in
int3
xor
divl
dec
sbb
pop
mov
ljmp
sbb
cwtl
dec
cmp
mov
inc
mov
jecxz
mov
pop
cmp
mov
mov
les
repnz
jbe
cli
movsb
and
cmpsb
popf
rorl
or
test
mov
std
out
lds
in
fidivl
lret
outsl
outsl
cld
into
jnp
fisttps
sar
insl
inc
xchg
cmp
mov
gs
mov
addr16
push
xor
jmp
xor
outsb
mov
mov
lahf
je
lods
add
jns
and
out
add
push
xor
cmc
xchg
sub
mov
mov
xchg
jbe
cltd
xchg
ds
out
sbb
aad
xor
pop
dec
xchg
ret
fwait
xchg
gs
jns
cwtl
xchg
cld
adc
test
mov
mov
cmp
hlt
jo
lock
sub
push
ja
lret
add
not
addb
mov
fstpl
pop
and
mov
jmp
repnz
shlb
push
scas
shr
stos
add
inc
cwtl
xchg
gs
test
and
das
int3
cmp
fldl
xor
lods
cmpsb
push
insb
sbb
jb
je
pop
push
cmpsl
decl
lods
inc
cwtl
jae
loope
fisubrs
fidivs
cli
mov
xor
inc
push
lcall
jp
sahf
lods
cwtl
jecxz
roll
mov
es
iret
or
lock
sbb
ja
mov
push
aaa
ljmp
call
les
lock
add
mov
loope
pushl
dec
push
scas
fmul
add
int
rorl
sub
pushf
pop
push
jecxz
movsb
mov
or
sub
pop
rcl
shll
or
cs
xor
fdivp
inc
cmp
lea
pop
cmp
push
mov
sti
sub
sub
inc
pusha
nop
or
adc
or
loopne
lods
and
mov
adc
int3
inc
in
push
outsl
xor
movsb
es
add
xchg
xlat
jge
mov
mov
addr16
pop
out
in
cmp
mov
or
sbb
icebp
dec
and
sbb
fstl
push
pop
mov
pop
call
scas
or
pop
outsb
data16
lret
cli
ljmp
pop
mov
push
scas
stos
mov
stc
mov
xchg
ja
insb
pop
push
int
ret
inc
imul
dec
cmp
movsb
and
pop
pop
push
xor
dec
fwait
hlt
mov
mov
inc
loopne
repnz
mov
xchg
mov
jb
out
push
and
add
xor
jle
in
scas
int
jge
xchg
mov
pop
lret
adc
or
mov
dec
dec
out
lds
in
sbb
and
or
xor
or
cmp
push
mov
repnz
dec
xchg
pop
xor
out
repz
pop
ret
das
into
out
cli
pop
insl
clc
push
dec
scas
filds
andb
ljmp
mov
jmp
fadds
add
js
or
fldenv
addr16
and
inc
in
inc
dec
imul
out
arpl
jne
pop
imul
mov
xchg
sub
popf
loope
sub
andb
ja
inc
sub
or
cmp
iret
popa
cmp
pop
fdiv
movsb
repz
dec
cld
call
dec
pop
out
int3
push
iret
test
insb
stos
push
jbe
fwait
shrl
or
sti
jno
into
mov
cmp
shlb
notl
mov
call
in
pop
xor
lods
les
inc
add
inc
je
or
sahf
xchg
adc
xor
sti
sahf
test
movsb
addb
repnz
mov
push
cltd
les
cld
mov
push
addr16
xchg
insb
cmpsl
fmull
addr16
shlb
andb
ret
and
dec
popa
ret
into
stos
scas
cmp
adc
jb
cli
data16
imul
das
call
push
cmp
test
adc
push
dec
push
arpl
push
cld
test
push
lods
jge
pop
adcb
stos
inc
jae
shr
mov
jo
push
jb
scas
push
xlat
xchg
sbb
je
xchg
dec
ja
push
mov
adc
les
xor
add
jmp
lods
in
repnz
mov
dec
pop
push
cmp
loopne
rcll
out
cmp
bound
mov
insl
dec
test
add
cs
fsubr
ret
negb
sti
ds
mov
bswap
jmp
mov
gs
sub
scas
or
cltd
cmpsb
jnp
jecxz
cwtl
leave
nop
pop
cli
push
mov
adc
adc
sub
repz
cmpsl
pop
fmull
out
imul
and
test
mov
nop
pushf
sbb
xchg
mov
add
popf
cmp
jecxz
inc
mov
add
gs
add
insb
pop
cmpsb
push
hlt
mov
jns
pop
mov
sarb
repz
xlat
in
mov
fsts
pop
ss
imul
imul
add
les
inc
icebp
xchg
iret
in
imul
fistpll
adc
sahf
xchg
and
addr16
pop
test
aad
xchg
ret
or
add
mov
jp
scas
inc
icebp
ret
mov
dec
insb
xchg
xor
mov
inc
mov
popf
test
cmc
and
aas
decl
mov
pop
push
mov
inc
das
or
dec
stos
fwait
lds
imul
sahf
arpl
insb
aaa
in
rcll
mov
cmp
add
mov
sub
pushf
mov
mov
test
cmpsl
neg
mov
jo
addl
push
movsb
call
push
push
mov
mov
and
jnp
pop
outsl
lahf
out
mov
jmp
pop
pop
xor
cmpb
inc
push
fisttpll
mov
lods
sbb
sbb
jp
test
mov
sub
dec
push
and
repnz
pop
outsl
add
leave
aam
pop
mov
cmp
pushf
add
lods
outsl
mov
test
xchg
xchg
or
movsb
insl
icebp
dec
sbb
add
adc
pop
xor
imul
fwait
push
je
push
mov
lret
bound
or
fwait
and
xlat
fidivrs
popl
push
lret
sub
cmp
jl
hlt
push
stos
sbb
push
sbb
mov
pusha
xor
mov
xor
cmc
mov
pop
push
in
add
sti
fcoml
mov
fisubrs
sbb
or
insl
fldt
mov
jb
fsubs
into
das
xor
jnp
sbb
and
dec
fsts
aam
mov
not
sti
or
cmp
adc
movsb
rorl
or
push
fstpl
jne
in
pop
pushf
stos
mov
stc
push
das
das
or
das
scas
sub
dec
daa
insl
rorl
inc
insl
xor
lods
and
mov
inc
inc
adc
xchg
icebp
ret
stos
mov
mov
lock
adc
sbb
xor
push
jae
jb
mov
adc
push
xchg
dec
jl
dec
mov
pop
pushf
mov
push
clc
ret
iret
cltd
jl
jne
adc
shr
pop
sub
sub
cmp
push
shr
mov
scas
sti
aam
je
aas
cwtl
lcall
cmp
sbb
popf
xor
orb
xor
rcrl
pop
bound
stos
movhps
in
daa
les
xor
mov
inc
xchg
das
fsub
sub
clc
rol
jno
jecxz
ds
xorl
push
fnsave
js
mov
sbb
jb
sub
shrb
jo
push
leave
xor
xchg
out
mov
subl
sbb
add
lods
inc
cmp
xor
loop
fistpl
add
xchg
leave
rclb
and
or
push
sbb
mov
pop
and
or
aas
addr16
pop
lcall
lret
cmpsl
mov
rcr
mov
add
daa
incb
xchg
add
xchg
sub
mov
std
mov
cli
sub
rolb
xchg
rclb
shr
imul
pop
call
mov
aas
dec
adc
sbb
add
pop
dec
xchg
insl
dec
pop
sub
sbb
scas
cmp
outsb
out
push
scas
inc
xor
xor
ffreep
popa
cmp
mov
mov
add
adc
push
pop
and
and
xchg
mov
mov
dec
dec
out
lods
and
pop
dec
cmp
ss
adc
mov
shll
cld
cwtl
popa
push
adc
es
popf
pop
fisubs
scas
jg
cltd
mov
lcall
ja
cmpsb
pusha
hlt
subl
mov
imul
mov
and
mov
mov
repz
mov
lock
sbb
lods
fcmovnb
shrl
push
pop
push
mov
mov
pop
aam
out
fistpll
sbb
scas
inc
and
inc
fprem
fisubl
aaa
mov
in
xor
xchg
xor
idiv
insb
daa
pop
pop
inc
sub
sub
pop
xchg
bnd
aad
les
addr16
add
movsl
jge
jo
mov
es
jecxz
mov
iret
mov
mov
insl
data16
lret
lods
scas
orb
mov
xchg
sub
and
or
pop
push
lcall
movsl
inc
add
dec
aaa
divb
andl
adc
ds
mov
int
arpl
mov
imul
call
inc
add
mov
ljmp
pop
jmp
ret
pop
lods
mov
inc
push
push
lock
rol
xorl
sbb
fwait
jecxz
sub
jp
xchg
ret
and
jp
sti
mov
sub
imulb
or
aas
shll
lea
std
rolb
data16
pop
lods
xchg
das
ss
cmp
dec
cmp
or
mov
test
dec
jge
aaa
adcb
repnz
xlat
jmp
bound
and
cltd
xchg
popa
lods
push
enter
jecxz
dec
sar
pop
out
nop
pop
mov
or
in
mov
shll
daa
imul
lahf
lock
test
lcall
mov
sub
jge
cmp
data16
mov
sub
in
aas
loop
push
or
jno
call
xchg
cltd
jae
ds
adc
int
pop
testl
gs
jl
cmp
int
adc
ret
cltd
pop
aas
jns
or
sub
dec
hlt
sub
pop
push
pushf
mov
pop
inc
repz
or
inc
popa
sbb
stc
popf
aaa
add
mov
dec
xor
out
in
clc
popf
in
subl
je
daa
pushf
je
lods
fmuls
gs
ret
push
cmpsb
sbb
idiv
int3
out
xor
inc
dec
cmp
cwtl
popl
dec
mov
enter
popa
scas
jnp
cltd
lret
into
movsl
or
add
popa
flds
sub
adc
pusha
cmpsl
xor
enter
pop
and
push
push
jo
imul
fidivs
sbb
mov
mov
out
inc
loope
fisttpll
sub
movzbl
adc
cld
pusha
inc
rorb
dec
jb
push
mov
mov
xor
hlt
leave
mov
jge
inc
insb
push
push
xchg
mov
cmp
xchg
and
loop
xor
sub
dec
into
push
mov
mov
lods
test
jnp
aam
fs
cmp
pop
cltd
dec
mov
ret
cmpsl
mov
mov
int
cmc
js
adc
repz
jle
mov
sub
repnz
cmp
jecxz
mov
cmp
jmp
sub
cltd
cltd
adc
xchg
lahf
fisubl
nop
pop
sub
lret
jg
mov
rcl
jecxz
sub
popf
mov
les
pop
mov
test
cmpsb
lds
xchg
jge
pop
pushf
stc
adc
lcall
or
das
imul
sahf
negl
push
shll
hlt
scas
lahf
lea
jg
paddsw
jecxz
inc
fisttps
push
mov
jns
sub
outsb
push
ja
cmp
fistps
push
xchg
shrl
outsl
addl
inc
nop
jnp
and
jp
and
aam
xchg
mov
orb
pop
pop
xor
mov
add
enter
cmpb
mov
mov
adc
loope
loope
mov
pushf
xchg
dec
out
cwtl
add
sahf
push
shlb
lds
lret
loopne
cmp
mov
cmp
cld
xchg
in
fwait
xor
subb
pop
addb
rcrb
filds
push
jg
cmp
xchg
inc
lea
dec
xchg
pop
call
repz
ja
cmp
jge
pop
divl
xor
sub
jp
bound
adc
lods
push
xchg
mov
pop
cmpsl
cmp
sub
ret
xchg
arpl
aam
outsb
stos
decb
pusha
xchg
imulb
push
and
mov
imul
pop
dec
lds
mov
adc
add
pop
out
push
out
push
scas
stos
loop
xchg
and
negb
jle
mov
mov
into
repz
xor
enter
push
sahf
fcomps
sbb
je
push
xor
xchg
adc
xorb
mov
mov
mov
shll
sub
cmp
in
imul
aad
mov
cmp
add
jg
add
dec
sub
aaa
xchg
cs
jno
aam
fstpt
aaa
push
mul
js
enter
xor
push
or
xchg
xor
pop
jns
jmp
daa
cltd
test
jae
cmp
add
jecxz
push
shll
add
mov
mov
shll
popa
es
push
sub
sub
mov
js
sub
xor
dec
sub
mov
sub
xchg
loopne
sub
sbb
mov
test
ds
pop
movsb
aad
cli
jno
ljmp
adc
stc
jns
loope
mov
call
rcll
mov
add
lcall
mov
dec
mov
cli
pop
sub
lahf
pop
push
sbb
adc
xor
push
jecxz
adc
adc
stos
pop
aaa
push
and
xor
jbe
out
test
fnstenv
and
jp
out
or
xchg
pushf
movsl
dec
sub
inc
mov
dec
push
jp
sub
ret
push
rorb
shll
cli
mov
ret
mov
aad
dec
test
push
dec
rorl
fsubrs
js
shrl
or
jb
stc
xchg
xlat
adc
mov
sbb
js
cs
dec
test
mov
inc
ret
imulb
aam
shl
loop
fwait
aam
test
fistps
out
sub
add
jns
add
and
test
jae
lock
outsb
sub
clc
mov
push
jmp
cmp
adc
pop
shrl
mov
jno
sub
fcomps
inc
jle
mov
sarl
mov
or
lock
scas
jb
dec
jl
leave
stc
shrb
sub
or
add
test
xchg
push
jmp
pop
mov
mov
popa
adc
out
adcl
mov
outsb
lret
mov
lock
shlb
dec
pop
das
and
nop
mov
mov
jne
pop
cld
sbb
out
shl
movsb
xor
test
cmc
cmp
push
aad
hlt
sub
push
popf
nop
into
roll
and
sbb
iret
add
out
adc
mov
rcr
mov
or
add
adc
sub
fimull
imul
adc
mov
fwait
hlt
pop
lds
xlat
in
xchg
cwtl
cltd
cmpsb
gs
pop
sub
cmp
add
repnz
shll
jp
lret
stos
inc
mov
movsl
and
ror
fs
pop
rcll
ljmp
cs
xchg
pop
sahf
cmpsl
outsb
push
fwait
std
out
mov
imul
stos
xchg
jmp
test
sbb
lret
xor
push
and
das
pusha
mov
das
push
mov
add
jo
stos
cwtl
sub
add
lods
ds
jae
add
mov
push
jle
xchg
std
jecxz
and
sahf
dec
or
sub
and
pop
addl
insl
pop
test
or
mov
clc
mov
popa
ret
int3
in
push
sbb
popa
sub
cmp
lea
jmp
push
jmp
fmull
imul
daa
adc
pop
mov
cmp
push
iret
jle
lret
fcompl
bound
dec
inc
mov
xchg
inc
imul
push
jge
jmp
in
sub
mov
dec
inc
pusha
outsl
push
cltd
or
sbbl
add
push
xchg
dec
xor
push
add
imul
in
loope
jnp
popf
xlat
jg
js
adc
clc
lock
ljmp
mov
andl
incb
lahf
xchg
push
and
mov
jle
loope
xchg
sbb
mov
imul
add
nop
mov
popa
xlat
xchg
xchg
addr16
inc
mov
inc
push
dec
adc
dec
stos
push
jbe
mov
shll
push
mov
lret
xor
mov
cmp
xor
mov
cmp
or
cli
std
mov
push
fnstsw
xchg
cmp
inc
jae
mov
add
fs
mov
push
mov
dec
jnp
in
sbb
jmp
and
test
adc
loop
ss
test
subl
ja
push
enter
pop
fidivl
xlat
mov
iret
nop
fdivp
out
jp
pop
in
daa
iret
jl
repz
jbe
xchg
lea
mov
orb
lock
mov
js
mov
out
jne
fbstp
xchg
stos
js
inc
stc
aad
sub
sbb
jmp
movsb
lea
cmpsb
mov
lcall
fidivrs
inc
fldenv
ss
int
mov
mov
pop
and
or
push
addr16
addr16
out
ljmp
mov
out
cmp
mov
cmp
bound
xor
xchg
popf
push
xor
stos
outsl
adcb
mov
jno
gs
jecxz
jns
test
xchg
jno
sub
ja
out
cli
test
in
add
push
mov
ss
fdivl
jmp
pop
icebp
jmp
or
movsb
je
popf
test
or
push
imulb
ds
aaa
out
enter
xor
xchg
mov
jle
add
pop
mov
push
pop
push
jo
popa
ljmp
jbe
mov
and
push
sub
gs
jne
sbb
jge
or
in
inc
or
clc
ret
pop
iret
or
nop
dec
xor
push
inc
adc
or
and
sbb
push
mov
xchg
mov
pop
sbb
out
mov
jl
push
add
scas
pop
and
or
scas
adc
or
jnp
clc
cli
popa
insl
xor
xchg
inc
stc
or
xchg
insb
jg
cmpsl
loope
aaa
setns
and
mov
psubb
sbb
push
scas
insl
pop
ja
into
xor
loope
aaa
jp
rcll
push
aam
sbb
ret
push
inc
mov
sti
test
jne
aam
popa
dec
or
push
insl
push
int3
adc
scas
popa
push
addb
pop
add
sbb
and
push
sub
or
test
stos
cmpsb
shlb
xchg
cwtl
jg
push
push
and
jle
or
sub
aam
adc
imul
jge
fistpll
or
rolb
push
stos
cmp
fcmovnbe
jne
inc
hlt
push
stos
inc
or
icebp
push
lcall
enter
cmpb
and
xor
mov
test
loop
mov
add
jge
aas
aad
inc
push
mov
pushf
leave
enter
and
cs
xchg
sub
xor
push
filds
mov
jnp
and
cltd
sti
xorl
enter
push
pop
out
bound
mov
pop
mov
sbbl
ja
jns
into
stos
mov
cld
push
inc
or
imul
ss
orl
hlt
sbb
pop
cmp
loope
in
jg
adc
jg
fistl
xchg
cmpsl
sub
ljmp
ret
push
mov
fnstsw
cmp
adc
shl
out
mov
sti
jle
mov
dec
icebp
cmp
dec
gs
xchg
lret
sbb
js
cmp
push
push
cmpsl
dec
or
or
sub
sti
ret
jecxz
jbe
sbb
or
add
pusha
movsl
outsl
mov
shrl
mov
sbb
das
dec
mov
js
js
outsl
imulb
xchg
sbb
ds
jb
jno
sbb
stos
inc
xchg
lcall
pop
adcb
mov
xchg
shlb
sbb
stc
sub
cmp
shl
or
insl
sbb
repz
jle
cltd
sbb
pop
outsb
add
cmp
popa
flds
xor
xchg
lock
repz
imul
pop
push
je
outsb
mov
test
xor
jmp
cmp
ds
test
das
xor
mov
mulb
jle
or
mov
jbe
ret
add
cwtl
jo
test
add
js
jns
mov
test
fsubrs
push
movsb
repz
xchg
mov
icebp
and
mov
es
mov
stos
mov
sbb
imul
cld
xor
cmp
fidivrs
jmp
lea
stos
and
cmpsb
sbb
jb
pop
data16
adc
test
xor
pusha
mov
or
shrl
icebp
ret
add
lock
dec
icebp
xor
mov
mov
mov
mov
test
mov
push
and
imul
imul
and
or
mov
mov
les
outsl
mov
mov
sub
int
lret
int3
sbb
and
sub
out
push
adc
lahf
sbb
add
mov
mov
add
xchg
dec
xchg
xor
pop
enter
xchg
mov
cmc
push
lret
xchg
fwait
or
outsb
xor
stc
in
divb
inc
pop
xor
jno
and
cmp
mov
ret
xor
popf
sbb
sahf
insl
pop
into
add
ja
sub
inc
testl
or
pop
dec
mov
lods
xchg
cmp
ss
dec
mov
out
push
jge
in
mov
ficompl
mov
mov
xor
insl
int
xchg
xor
mov
pop
addr16
xchg
mov
pop
lret
push
ljmp
cs
sarl
jecxz
aaa
and
pop
aad
dec
pop
push
push
sub
leave
fnstsw
and
mov
xchg
pop
cs
inc
fsubrs
addb
shl
iret
jb
xor
dec
lods
js
pop
dec
shr
mov
dec
pop
je
xor
cmc
adc
mov
inc
add
adc
push
xchg
mov
xchg
pusha
mov
in
movl
scas
ror
xchg
fimuls
cmpsb
mov
dec
stc
enter
mov
mov
mov
das
outsb
into
sub
ljmp
enter
rcll
in
jnp
push
mov
pop
xlat
pop
mov
inc
fisttpll
inc
hlt
xchg
gs
and
push
iret
fdivr
sub
push
std
int3
add
cld
xlat
mov
fisttpl
jae
shlb
dec
push
jge
and
idivb
cli
inc
mov
xchg
into
pop
adc
pop
lods
subl
sahf
rcrl
lods
dec
add
xor
inc
fwait
mov
addr16
lcall
or
rcr
loop
int
adc
lds
pop
pop
repz
xor
sub
andb
add
sbb
loopne
int
jp
scas
lock
cs
and
jno
xor
dec
xchg
sbb
lahf
jmp
cwtl
push
leave
dec
fstps
and
inc
jb
hlt
sub
dec
xlat
mov
add
lret
adc
in
lds
mov
es
je
add
inc
in
cmp
int
inc
testl
xchg
mov
adc
push
mov
and
int3
mul
popf
orl
stos
enter
dec
sbbb
sub
es
add
icebp
stc
mov
int3
out
ret
insb
ret
das
cmpsb
xor
test
test
lods
mov
je
xorb
lahf
lods
xchg
mov
and
and
jbe
adc
fwait
addr16
ds
test
out
es
push
cli
cmp
mov
fadd
or
jb
add
arpl
push
sbb
jo
cmp
mov
inc
add
inc
pop
jns
cs
cwtl
out
dec
mov
or
int
adc
jg
mov
mov
or
pop
imul
jb
addl
sub
pop
adc
inc
push
cmp
push
jae
imul
sub
and
fstpl
xchg
sub
cmpsb
push
or
pop
mov
fnstsw
cmp
jo
sub
lret
mov
jg
dec
jns
mov
popa
jno
mov
mov
aaa
mov
xchg
imul
arpl
rcll
into
and
clc
pop
jns
jecxz
push
jns
out
sub
hlt
dec
clc
adc
pop
das
mov
int
mov
imul
jmp
dec
loopne
add
repz
out
repz
and
dec
ret
dec
in
dec
pop
and
and
insb
sbb
sbb
or
mov
ja
out
in
add
jnp
in
movsb
inc
out
push
out
adc
outsb
xor
sbb
sbb
cmpb
cs
andb
cmpl
sub
jno
add
lahf
fwait
add
insl
pop
mov
jno
add
loop
push
mov
orb
sub
pop
out
mov
cld
adc
add
add
int
dec
popf
push
mov
sarb
inc
mov
fistpl
pop
dec
sbb
mov
inc
lea
inc
and
or
sub
push
add
sahf
push
jg
lods
std
cmp
xchg
sub
into
mov
sbb
push
inc
out
aad
mulb
repz
cld
sbb
mov
sbb
mov
add
inc
imul
and
pop
loop
inc
or
mov
scas
xchg
call
mov
inc
adc
jmp
jb
leave
aam
adc
and
repz
ret
adc
mov
sbb
pusha
mov
stos
mov
xor
xor
lea
jecxz
mov
shrl
imul
sti
dec
cmp
scas
sbb
clc
jnp
fsts
inc
lcall
lea
mov
fcoml
imul
inc
pop
stc
mov
rorl
fimuls
cmc
repz
mov
mov
test
jp
ret
aad
lock
mov
xchg
in
popa
xorl
cmp
xchg
sti
push
pop
lods
and
insb
aas
rcrb
popf
je
scas
add
out
xchg
mov
pusha
divps
in
push
push
mov
out
fidivrl
xor
jp
cmp
xchg
jns
mov
jo
cmovb
mulb
and
fdiv
and
fimuls
cld
mov
adc
icebp
mov
cwtl
jo
mov
popfw
sub
out
adc
mov
jne
int
lret
mov
movl
dec
nop
xor
push
in
or
mov
fidivrs
movsl
ja
inc
push
scas
lret
data16
insl
cmpsl
sub
icebp
add
lahf
adc
outsb
mov
jmp
sarl
out
jno
out
cs
dec
xchg
add
adc
aad
sbb
or
jge
hlt
jnp
ret
jno
mov
jb
sub
jl
jb
mov
cmp
pop
sub
or
jb
dec
jp
mov
cltd
fists
xlat
test
lods
adc
xchg
mov
push
inc
push
inc
sub
les
pop
lcall
mov
jnp
inc
lea
jmp
hlt
rolb
xor
lods
mov
cmp
or
fdivr
mov
cmc
mov
or
popa
inc
fwait
stc
mov
jg
pop
or
mov
dec
pop
test
sub
cld
aad
push
or
push
enter
sub
fbstp
or
in
std
pushf
dec
xor
and
out
mov
fcoml
cltd
sarb
aad
pop
cmp
mov
and
into
ja
in
dec
popf
fcoms
mov
or
push
test
mov
push
or
mov
cld
cmc
in
cld
rcr
ffree
lret
stos
jmp
lahf
adc
pusha
push
sbb
pop
mov
mov
mov
fcmovb
lea
mov
fstps
sub
mov
imul
mov
pop
lea
or
lret
cli
push
cmp
fstpt
ret
xor
xorl
push
rcll
cmc
subb
loope
pusha
or
adc
sub
inc
mov
jmp
cltd
pop
xchg
mov
mov
lods
mov
test
xor
inc
fcompl
inc
mov
fstl
mov
outsb
ljmp
fildll
mov
das
push
clc
idiv
arpl
mov
lock
add
jmp
xchg
cmc
repnz
mov
mov
xchg
dec
loop
cmp
inc
xor
inc
pop
push
inc
fwait
xor
push
and
punpcklbw
shrb
mov
fsubrp
inc
jge
je
mov
cmp
jg
add
mov
pop
data16
inc
scas
jmp
cmp
xor
xor
js
add
dec
inc
mov
call
mov
sbbb
dec
xchg
dec
popa
pop
mov
aaa
leave
cmpsl
add
in
adc
pushf
lods
test
call
ja
mov
mov
pop
jne
push
mov
inc
add
outsb
loope
pop
stc
scas
pop
mov
pminub
je
inc
dec
and
push
mov
inc
fdivp
test
dec
cmpsl
push
dec
or
jl
sbb
dec
pop
adcb
mov
or
push
inc
stos
mov
pop
and
push
inc
and
sbb
jns
dec
lds
pop
cmp
adc
push
mov
rolb
ljmp
ja
iret
xchg
out
outsb
outsl
dec
jno
leave
subb
mov
mov
and
mov
mov
arpl
mov
mov
push
aad
mov
popa
pusha
std
pop
aaa
repnz
clc
pop
rorb
and
adc
mov
push
jle
aas
sbb
xchg
fsqrt
push
jns
inc
shrl
jp
clc
out
mov
mov
pop
roll
or
mov
mov
ds
jmp
sahf
lret
mov
or
popa
scas
lret
and
mov
pushf
lahf
sub
jbe
push
in
sbb
sub
cltd
adc
pop
bound
xor
xchg
pop
jg
mov
cmpsl
lahf
aas
into
rorb
addr16
out
aas
push
cltd
mov
adc
in
dec
cmp
lods
lret
jno
add
push
xchg
les
lahf
lahf
mov
xchg
fsub
test
jns
xchg
iret
xchg
add
add
popl
fsubs
and
pop
xchg
fninit
push
test
dec
jle
xor
jge
loope
and
push
mov
lods
jbe
mov
xor
pop
xchg
cmp
aam
or
mov
sub
pusha
popf
inc
int3
sahf
outsl
xlat
mov
pop
sbb
rol
jl
outsl
fisubl
mov
add
jle
jecxz
sahf
and
or
mov
mov
push
or
sub
adc
and
mov
xor
push
xor
in
rcrb
movsl
lods
xor
and
mov
icebp
outsb
jecxz
push
jecxz
mov
sbb
push
mulb
mov
push
out
inc
cmpsl
fmull
and
fisttpll
sub
es
mov
cmpb
xchg
or
pop
aaa
lds
dec
inc
dec
cmp
out
scas
jmp
or
andb
mov
push
call
jne
sub
inc
push
lahf
push
movd
aaa
rol
jae
xchg
popa
mov
cmpsl
call
outsb
cmp
cmp
jp
es
mov
pop
or
push
lock
pop
mov
lods
mov
mov
popa
and
in
fwait
xchg
push
push
gs
adc
mov
push
xor
xchg
gs
jmp
mov
xlat
push
ljmp
popa
lds
addb
lret
lea
aam
xlat
mov
push
test
mov
jo
push
mov
loopne
ret
mov
sub
andb
ficoml
and
dec
fildl
imul
fsubrs
sbb
pop
fsubrs
insb
sub
rorb
sbb
mov
mov
add
mov
insb
sbb
test
call
add
lea
outsl
xchg
pop
pop
fwait
mov
int
mov
lea
push
cli
jbe
sub
adc
mov
repnz
xlat
dec
arpl
flds
xchg
and
or
mov
cmc
ficompl
mov
repnz
xor
out
mov
sub
mov
mov
jae
js
out
add
adc
xchg
repz
sarl
jb
mov
cmovbe
fstpl
xor
lret
bound
cwtl
out
xchg
iret
push
dec
sbb
scas
xor
or
imul
pop
popa
sti
fsubrs
fcoml
dec
push
sbb
sti
js
inc
stos
push
pop
movsb
mov
cmp
push
insb
jno
cmp
cmp
cmp
icebp
loop
add
and
sub
xor
cltd
pop
xchg
jmp
lret
pop
dec
mov
lods
xor
lock
es
pop
dec
incl
jno
jle
jne
sahf
mov
cwtl
jge
adc
mov
jge
inc
mov
mov
push
jecxz
dec
xchg
xlat
dec
in
mov
leave
sub
shrl
sub
xlat
xorb
call
inc
pop
movsb
pop
cwtl
adc
lahf
jne
ficoms
cmp
mov
ficompl
inc
insb
hlt
mov
dec
aam
add
add
cmp
loope
cwtl
bound
ss
out
lds
fxtract
pop
stos
stos
xchg
add
loopne
shrl
push
icebp
cld
loope
push
mov
int
orl
push
clc
sbb
rclb
xchg
push
cmp
imul
push
push
jns
mov
out
mov
xor
and
dec
into
mov
subb
lock
lods
add
adc
mov
mov
lock
jmp
mov
outsl
cs
rol
push
push
in
ror
pushf
test
repnz
adc
adc
lods
into
mov
mov
movsl
jg
pop
push
sub
xor
add
ret
clc
lock
xlat
cmpsb
jg
addr16
sti
addl
jne
push
push
mov
jb
negb
inc
mov
test
or
sahf
aaa
dec
xchg
xor
scas
in
jecxz
lret
out
sarb
dec
inc
jmp
inc
jae
imul
fadd
ds
sub
daa
std
pop
pushl
shlb
sbb
jne
repnz
shr
push
aam
arpl
push
mov
pop
rol
add
outsb
mov
jbe
pop
xchg
push
add
ss
mov
or
int
mov
or
lods
les
xchg
ret
sub
int
pop
out
adc
repz
xor
push
mov
cmp
stos
mov
mov
stos
mov
xorl
jo
pop
addr16
iret
xchg
adc
ret
xchg
fldcw
bound
add
adc
sbb
dec
or
cmc
lock
cmpsl
cmpsl
ja
mov
add
push
push
add
imulb
pop
xchg
imul
test
or
aas
or
ret
jl
in
scas
das
scas
dec
enter
cmp
inc
nop
dec
js
rolb
xchg
jl
stos
ret
dec
popa
adc
je
fwait
add
lock
add
pop
dec
cmp
mov
pusha
jmp
xor
mov
das
mov
aas
mov
sarl
mov
pop
xchg
jne
stos
cmp
push
shlb
std
jg
out
cltd
roll
inc
adc
mov
adc
int
xchg
push
push
pusha
jl
sbb
pop
or
inc
or
ret
mov
dec
adc
xchg
mov
stos
out
mov
jmp
daa
and
sarb
dec
fiaddl
mov
out
push
popa
je
cmp
cmp
outsb
pusha
dec
lds
xor
dec
or
push
cmp
jno
lahf
incl
jae
aaa
or
cmp
jle
flds
sahf
aam
jecxz
mov
dec
lea
sbb
insl
xchg
and
dec
adc
testb
icebp
push
stos
ds
sbb
pop
popf
idivl
loop
iret
lock
daa
call
push
shlb
xor
outsl
mov
cwtl
mov
sbbl
imul
mov
sti
dec
xor
mov
add
mov
sub
sbb
add
das
add
jno
sbb
mov
fwait
jmp
pop
imull
or
sbbb
enter
and
inc
icebp
clc
dec
ljmp
ret
les
faddl
es
and
hlt
jbe
and
gs
inc
fsts
xchg
mov
pop
mov
push
sub
scas
ucomiss
fstpt
jmp
scas
lock
inc
movsl
mov
or
movsb
lods
xor
jge
mov
push
bound
mov
sti
push
lock
sub
inc
icebp
xchg
inc
jg
lods
or
into
pop
pop
pop
dec
and
jbe
push
clc
sub
inc
pop
fwait
inc
pop
inc
inc
std
fstpl
adcl
lret
adc
dec
stos
sbb
insb
mov
and
mov
xchg
lea
mov
sbb
loopne
lcall
jl
stc
sti
xor
insl
inc
daa
aam
dec
fstpl
je
enter
repnz
dec
aad
pop
sub
fwait
add
call
pop
mov
sti
lcall
mov
xchg
pop
in
push
jp
jns
fldpi
shll
and
push
xor
and
daa
test
rclb
or
pop
pop
lea
push
ficoms
push
and
add
bound
xchg
dec
inc
pusha
mov
jl
ds
lea
movsb
cmp
xor
popa
inc
and
movsb
push
les
xor
scas
xchg
pushf
sub
mov
fiadds
fsubl
adc
aam
imul
movd
sub
sbb
inc
movsb
lret
pop
push
lcall
dec
lods
or
inc
xlat
mov
movsl
mull
push
xchg
mov
pop
stos
mov
mov
cmp
fists
add
push
ljmp
sbb
mov
fisubl
out
mov
in
into
cwtl
flds
cli
in
and
dec
mov
cmp
aas
das
out
cmp
inc
jmp
or
fiaddl
rorl
jno
mov
mov
fbld
mov
cmp
addr16
mov
mov
ret
gs
rclb
dec
ret
lds
sahf
cmp
push
cli
add
es
ss
push
push
lcall
xchg
and
lods
sbb
sbbl
popf
cmp
popa
cmp
adc
inc
mov
lods
sub
xor
pop
sbb
mov
outsb
sbb
mov
lock
iret
push
xchg
mov
sub
stos
movsb
inc
leave
sbb
push
inc
imul
inc
je
cs
push
sahf
mov
lods
ret
stos
sub
daa
xchg
cmp
outsb
repz
aam
scas
test
add
es
test
sbb
dec
mov
and
lahf
loopne
sbb
sub
dec
stc
push
mov
jbe
shlb
lret
pop
lock
jb
jno
sub
jecxz
outsb
fisttpll
leave
ja
push
test
dec
aam
mov
inc
jmp
stos
test
das
mov
andb
aam
loope
mov
xchg
sbb
cmpb
lods
mov
sbb
sub
pop
lods
xchg
and
cmp
add
cwtl
adc
popa
xor
push
js
fildll
mov
or
leave
pop
inc
lahf
bound
repz
push
pop
int
sub
test
add
mov
jg
in
mov
subl
mov
push
mov
or
lret
sub
cmp
jmp
mov
bound
xor
pop
lret
mov
mov
sbb
orl
lock
inc
add
sub
push
rcl
xchg
clc
das
or
push
inc
mov
int
jmp
mov
jae
and
stos
scas
aam
mov
ds
pop
mov
lcall
fidivrl
jecxz
xchg
jns
sbb
out
pop
mov
clc
dec
lahf
push
aam
adc
jae
in
jp
jge
mov
push
movsl
inc
into
leave
lret
sahf
loopne
leave
data16
ds
psubsb
out
loop
shrl
test
or
mov
cmpsl
dec
add
or
ljmp
or
xchg
adc
jecxz
lret
rcrl
mov
mov
aaa
in
js
movsb
in
mov
adc
xor
dec
ja
mov
inc
mov
push
test
in
lcall
mov
fs
frstor
lock
pop
push
xor
xorb
outsl
testb
xchg
aam
fisubrs
sub
dec
leave
ja
adc
cmpb
rcrb
mov
mov
jmp
in
cmp
popa
jl
xchg
aam
out
sbb
adc
adc
sarb
push
fisubs
or
push
test
aas
mov
push
jae
mov
inc
dec
leave
cmp
shlb
cld
xchg
mov
lods
push
cs
cld
xorb
mov
cmpb
or
lods
ret
dec
dec
add
jmp
sar
push
inc
hlt
pop
xchg
lret
ret
test
xor
adc
push
andl
cmp
inc
mov
xchg
xchg
in
xchg
lea
inc
imul
xor
cmp
rclb
orl
inc
adc
mov
addr16
cmpsl
and
xchg
and
mov
dec
ss
fistps
ret
sbb
dec
sar
jg
add
mov
adc
fcoml
dec
fcmovnbe
into
sbbl
stos
pusha
jl
jo
lahf
sub
inc
xchg
cmp
imul
out
push
and
dec
popf
push
popa
xchg
mov
ljmp
nop
out
std
inc
mov
rorb
in
and
add
pop
dec
push
insb
iret
insl
leave
add
mov
orl
jbe
in
rcr
test
fisubs
cmpsb
mov
xor
mov
rcll
cmc
ret
in
push
in
fstl
push
pop
lock
dec
add
xor
mov
sub
icebp
push
cld
sti
mov
sbb
out
sbb
mov
sub
stc
inc
and
mov
arpl
rolb
jecxz
jmp
sub
adc
push
sub
ret
jo
sub
mov
inc
sub
stos
imul
loopne
pop
movsl
std
mov
inc
push
sub
or
sahf
int
mov
sti
stc
sub
cmc
xchg
and
sub
sbb
sub
std
inc
lahf
into
fxam
xchg
mov
xor
lods
repnz
lcall
mov
pop
push
fdivrp
push
pop
add
sbb
imul
cmp
test
push
leave
cmpl
shrl
cmp
popf
mov
aam
dec
and
inc
inc
jne
sub
push
ljmp
dec
rolb
fs
jge
loope
lret
into
fsubrp
shrb
jns
jp
mov
pop
pop
xor
cmp
test
movsb
mov
dec
mov
xchg
orl
lds
push
xchg
fstps
or
in
cmp
popf
insb
sbb
jae
loop
cmp
inc
movsb
insb
xor
in
loop
mov
sbb
test
mov
iret
mov
das
pop
mov
scas
mul
out
daa
dec
aam
add
push
pop
stos
shll
clc
scas
lds
xor
repz
fdivrs
jl
clc
lcall
lcall
dec
jno
dec
cmp
movntps
mov
push
cmpsb
jns
cmp
push
out
je
xchg
test
test
xchg
lods
popa
mov
mov
sbbl
in
shrb
sbb
cmc
and
and
cmp
dec
jmp
sub
or
and
sbb
jno
cltd
sar
out
pop
fldenv
dec
mov
lahf
fiaddl
out
loopne
pop
test
insl
out
cmc
lods
lret
cmp
cmc
loope
jns
xor
ds
shll
dec
pushf
gs
gs
cli
rcll
fcmovnu
sub
mov
sub
sbb
xor
and
mov
dec
loop
fimull
cwtl
xor
mov
dec
or
stos
push
adc
test
out
das
xchg
cmp
cmp
sub
pop
push
daa
mov
nop
mov
xor
cld
add
dec
out
insb
outsb
shlb
std
imul
sub
es
push
sbbl
jb
xchg
data16
daa
or
push
adc
iret
and
stos
push
mov
out
les
mov
mov
shlb
inc
call
dec
aaa
ficoms
call
icebp
mov
sti
mov
iret
lods
lret
cwtl
outsl
push
fwait
push
js
inc
pushf
push
ret
aad
mov
leave
jnp
mov
repnz
test
lret
daa
mov
mov
cmp
mov
jmp
or
cmp
sub
push
aad
jp
cmpsb
les
jnp
cmp
mov
jb
mov
pop
lock
xorb
imull
sbb
pusha
pop
fbstp
sbb
sub
jecxz
out
stos
pop
jg
xchg
mov
test
mov
mov
or
jbe
adc
jmp
ljmp
cld
mov
and
aas
xchg
xchg
jl
arpl
mov
inc
repz
pop
sbb
jle
add
stos
inc
add
in
sti
pop
jbe
cwtl
mov
std
cmp
pop
out
mov
repz
add
stc
ror
pop
or
xchg
or
xchg
xor
ja
addr16
adc
jnp
cli
adc
sub
adc
and
dec
int3
dec
xchg
xchg
cmp
or
repz
sbb
mov
insb
xor
jl
outsb
xchg
in
cld
fnstenv
mov
int
pop
inc
popw
leave
sub
jnp
test
mov
enter
loop
fisubs
jo
mov
in
dec
mov
jb
mov
int
sbb
in
sub
mov
insl
xor
mov
jo
dec
popf
lea
roll
xchg
mov
stc
lods
arpl
xchg
test
mov
xorl
xchg
test
outsl
adc
adc
push
rcrl
sub
repnz
mov
js
fbstp
adc
imul
out
push
dec
in
in
ja
mov
enter
xchg
inc
in
jae
imul
ret
push
rorl
mov
in
jp
stos
pop
pusha
sub
pop
push
jge
dec
lcall
xchg
sub
fidivl
push
gs
in
inc
into
imul
cli
hlt
into
arpl
push
lret
js
pusha
es
mov
and
js
pop
mov
cmpsb
pusha
jnp
jbe
add
test
dec
nop
inc
pop
sub
pushf
les
cmpsb
stos
scas
and
icebp
fiadds
inc
and
jbe
sahf
or
dec
adc
jnp
gs
fcomps
jle
mov
dec
add
leave
sub
mov
movlps
push
or
fs
stc
xchg
mov
add
movsb
push
push
hlt
icebp
cmp
ret
aas
dec
lods
int3
push
dec
repnz
xchg
cwtl
jmp
cmc
mull
push
xchg
rclb
and
sbb
jl
or
mov
adc
hlt
or
movsl
pop
cld
lds
push
lods
adc
adc
or
int3
jle
bound
push
lock
loopne
test
test
adc
fdivrs
xchg
leave
adc
ljmp
std
lcall
adc
addr16
add
mov
add
mov
push
push
pusha
push
out
xor
out
arpl
pop
push
pusha
sub
and
fsts
movsb
scas
aaa
push
push
inc
adc
mov
mov
dec
gs
adc
mov
jns
or
cmp
cmc
gs
mov
shrl
sahf
adc
inc
cmc
lret
push
stos
ret
shrb
adc
xor
cmp
and
pop
add
pop
pop
fs
ljmp
cmp
add
sbb
cmp
ret
shll
lock
and
das
pusha
shll
inc
repnz
mov
jp
iret
sti
cwtl
inc
mov
scas
nop
inc
leave
adc
sub
fisttpl
adc
pop
sub
jnp
push
int3
mov
imul
mov
aas
and
mov
lret
xchg
xchg
imul
mov
push
int
mov
outsb
test
adc
mov
jmp
mov
sub
mov
ja
jmp
sbb
dec
std
lea
cli
xchg
adcl
lds
mov
lds
jo
test
rcll
sbb
push
add
cmpsb
pop
cmp
lahf
dec
lock
lds
xchg
xchg
gs
xchg
cltd
and
sahf
and
ljmp
sbb
loope
and
ds
pop
int
push
jecxz
fwait
xor
subb
leave
clc
jl
int3
out
ficoml
jno
or
in
daa
pop
test
dec
pop
adc
ljmp
lahf
fimull
push
enter
dec
aas
movsl
pushf
xchg
cmp
scas
aaa
mov
sub
sub
jmp
in
and
cmp
shl
iret
clc
sbb
jo
or
dec
xchg
lahf
dec
lea
add
xor
jge
xor
or
push
add
cmp
xchg
pop
mov
mov
sub
cmp
mov
or
or
pop
push
or
xor
xchg
sub
call
or
arpl
cmp
mov
repnz
mov
sub
pop
mov
imul
sub
push
fadd
mov
dec
mov
add
push
outsl
sahf
lock
pop
popa
jg
test
xchg
xor
gs
lret
ffreep
mov
scas
clc
stos
mov
fwait
sbb
in
bound
pushf
sub
inc
insl
nop
mov
dec
loopne
filds
stos
inc
imul
js
adc
das
mov
dec
mov
stc
inc
imul
push
fmul
jmp
div
jp
stos
cmp
push
je
push
or
iret
aad
jp
mov
sbb
pop
cld
cld
pop
pop
mov
jb
dec
jae
fwait
int
xchg
lock
adc
or
mov
out
mov
pop
int
rolb
jecxz
lods
inc
mov
jno
jmp
scas
xor
sub
jg
pop
and
out
push
jo
repz
mov
lcall
cltd
aam
xchg
rol
dec
fs
lods
pushw
test
pop
scas
adc
mov
pushf
mov
cmpsb
fistl
mov
mov
push
mov
test
pusha
je
cmp
into
popa
int
int3
popa
add
pop
lock
xor
cmp
jo
pop
jge
adc
mov
icebp
sbb
push
mov
sub
out
xchg
repz
inc
pushf
jno
sbb
sti
idiv
adc
stos
sti
mov
lods
xchg
or
add
out
addr16
mov
inc
jmp
xchg
sti
je
cmp
and
sbb
cmc
in
inc
out
sbb
mov
aas
nop
cmpsl
js
inc
arpl
repnz
rep
jl
add
mov
pop
jns
out
in
repnz
cmp
insl
pop
gs
cmp
lods
sbb
cmp
leave
popf
gs
xchg
test
xor
test
and
adc
cmc
mov
mov
pop
lret
das
mov
dec
mov
xchg
xchg
xchg
mov
sti
pop
jns
loopne
das
leave
sti
jns
and
out
pop
inc
repz
xchg
pop
decb
les
pushf
adc
bound
jle
xor
or
les
mov
sbb
cmp
jo
aam
cli
or
roll
arpl
sub
fwait
dec
mov
or
lea
test
xor
inc
mov
xchg
mov
dec
cmp
or
fwait
les
iret
or
push
add
movsl
loope
and
mov
mov
mov
mov
arpl
aaa
fisubrl
pop
mov
pop
pop
push
adc
inc
enter
shrl
dec
sbb
or
adc
arpl
sti
adc
xor
cmp
push
aaa
push
aam
cmp
or
xchg
xor
xor
test
and
fistpl
sbb
mov
add
jecxz
mov
pop
push
js
pushf
dec
sbb
push
push
dec
nop
loop
out
shrb
xor
in
inc
xor
mov
and
fs
or
mov
sbb
sub
out
adc
sbb
add
mov
popf
inc
sub
xor
call
cmp
mov
mov
sbb
popf
test
inc
sbb
mov
xor
pusha
test
inc
xor
enter
xchg
outsb
mov
jmp
push
cmp
cmpb
mov
xorl
mov
mov
loop
cld
cmp
cltd
cs
dec
stc
and
stos
push
sbb
ss
seto
sbb
pop
or
les
sbbb
dec
ljmp
push
inc
mov
imul
into
inc
push
popa
xor
out
pop
mov
sbbb
out
jmp
or
out
push
sub
mov
aas
call
jno
lea
push
adc
xchg
and
test
rorb
mov
cmp
mov
jmp
les
ret
inc
sub
mov
jl
stc
or
inc
adcl
xor
lret
fldl
dec
shll
add
lods
dec
and
cld
jne
jnp
hlt
pop
fbld
popf
pop
in
mov
dec
lods
popa
arpl
shll
sahf
push
xor
jno
ljmp
add
cmp
subl
and
jge
test
addb
leave
nop
sbb
bound
jge
add
cmc
mov
mov
lock
push
cwtl
xchg
pop
sbb
bnd
cld
movsb
cwtl
xor
cmp
and
sbb
lods
jb
jmp
and
sub
loop
push
add
jne
lock
movsl
pusha
jle
mov
and
in
jmp
pop
fs
lods
ja
jmp
test
jns
xchg
sub
std
ret
shr
lods
aaa
out
loopne
dec
leave
mov
jg
dec
enter
push
clc
jmp
lock
pushf
test
mov
gs
or
fadd
or
pop
mov
in
add
mov
xor
push
sbb
icebp
sahf
clc
mov
data16
xor
js
adc
stos
sbb
dec
inc
xlat
push
mov
pushf
mov
js
push
fcompl
sarb
lea
pop
dec
in
add
int3
aam
addr16
arpl
in
inc
jb
xchg
shld
call
test
push
pusha
stos
mov
jnp
dec
mov
push
testb
andb
dec
push
jmp
sahf
sbb
bound
test
imul
pusha
ret
sbb
cltd
jns
outsb
push
add
cli
adc
dec
js
subl
pop
cmp
xor
mov
pop
mov
cs
in
out
xor
in
jo
jmp
mov
cmp
xorl
hlt
jb
test
and
jmp
pop
imul
mov
mov
rcr
pushf
and
and
mov
roll
cmp
inc
mov
outsl
push
xor
shlb
push
add
mov
orl
cmpsl
xchg
inc
cld
mov
jge
ljmp
ret
fidivrs
adc
adcb
mov
cmp
xchg
in
mov
dec
cld
std
outsb
pusha
pop
sub
lret
pop
stos
shl
outsb
mov
int3
and
dec
xchg
jnp
arpl
inc
push
je
xor
mov
pop
add
stos
and
sub
pop
sub
mov
shl
pop
enter
cmp
das
sar
ljmp
adc
decl
cmpsb
sarb
shld
add
pop
int
das
fisttpl
pop
cltd
or
ret
mov
cwtl
sub
enter
outsb
callw
mov
lahf
mov
pop
pop
push
pop
stos
push
stos
push
popf
dec
loope
push
pop
fildll
jp
cmp
add
and
stos
xor
repnz
mov
imul
jns
clc
sbb
sbb
imul
pop
lods
repnz
lods
dec
outsl
test
mov
in
xchg
sbb
dec
test
in
cs
shll
fwait
iret
hlt
mov
outsl
cmpsl
test
lahf
cli
and
pop
xor
cmp
xor
pop
jbe
lods
mov
stos
pop
repz
insl
push
call
xchg
sub
pusha
pop
inc
int
cmp
lods
add
lret
adc
test
cmpl
lock
jmp
dec
data16
sbb
fildl
daa
pop
xchg
dec
mov
jne
push
sbb
xchg
shl
xchg
sbb
repnz
cmpsb
or
ret
cltd
shl
int3
js
fildl
pop
ret
mov
and
pop
aam
cvttps2pi
aad
sbb
insl
push
imul
mov
jg
xchg
adc
loope
fsubr
cmp
mov
push
movsl
mov
arpl
push
popf
jo
inc
pop
mov
xlat
mov
mov
out
push
mov
sbb
sbb
and
dec
push
lods
rcl
daa
xlat
ss
xchg
jne
call
lods
sub
aaa
mov
mov
mov
mov
mov
in
push
jne
and
fisttps
rolb
jp
inc
adc
jecxz
pop
pop
and
dec
in
popa
add
xchg
iret
pop
scas
and
scas
je
imul
stos
les
mov
arpl
lret
lock
xor
fwait
les
fcos
shll
pop
and
lahf
jns
mov
adc
dec
or
lcall
adc
sub
jo
shll
lock
insb
lods
push
push
mov
xchg
shr
dec
pushf
fwait
mov
gs
jb
or
nop
enter
mov
xchg
inc
mov
scas
pop
jae
lods
ds
lahf
ret
mov
add
sub
fs
cmpsl
inc
or
xor
mov
or
jnp
adc
aad
push
push
xchg
mov
lret
dec
add
nop
jge
cli
int3
mov
push
sbb
dec
std
into
push
and
sbb
dec
cmp
adc
bswap
push
push
xchg
xchg
and
inc
ficomps
cvtdq2ps
out
push
sbb
insl
sub
xchg
cmc
dec
sti
pop
push
or
sbbb
push
mov
jle
shll
loop
int3
fcom
lret
gs
or
adc
popa
push
pop
xor
test
ret
fcmovbe
inc
or
mov
cli
int3
sbb
xor
dec
jmp
cmp
jle
fsubs
and
sarb
jecxz
incb
mov
jp
aad
out
add
iret
sub
pop
and
inc
inc
sti
adc
jns
les
push
aad
jl
out
sti
dec
jno
fistps
ror
dec
mov
inc
les
mov
and
fwait
lcall
testb
cltd
outsl
mov
scas
pusha
mov
out
pushf
sbb
pop
mov
mov
ja
sbb
mov
jp
test
fdivr
aam
insb
out
mov
xchg
outsl
pop
pop
fisttpll
or
pushf
inc
mov
dec
or
mov
bts
sahf
sub
rcrl
cmp
mov
or
cmp
sar
xchg
cltd
ficoml
imul
mov
xor
cmc
inc
mov
mov
addr16
ja
in
add
std
andb
xor
idivb
adc
sub
xchg
addb
inc
jmp
fbld
sbb
mov
sarb
mov
xor
loope
adc
xor
popf
sub
jne
sbb
aas
daa
or
scas
push
add
adcb
hlt
loop
repz
push
das
roll
jo
clc
jmp
movsl
arpl
gs
and
int
jl
mov
stos
nop
sub
cmp
pop
and
pop
mov
inc
gs
pop
push
stos
inc
dec
test
xor
popa
xor
xor
dec
test
push
mov
push
dec
sahf
inc
in
fstpt
scas
pop
out
xchg
imull
mov
jecxz
adc
xlat
mov
mov
insb
repz
dec
xchg
lods
subb
lock
push
cmpsl
jae
and
add
iret
pop
lret
sub
ds
xchg
jne
pop
out
xchg
and
or
adc
sahf
fs
shlb
loope
xor
xchg
ljmp
popf
jns
cmpsb
adc
loope
adc
idivb
and
xchg
dec
jb
cmpsb
cs
aad
popf
jl
shrb
outsb
inc
add
cltd
adc
imul
sbb
jecxz
std
enter
pop
fisttpll
insl
mov
inc
loope
bound
push
adc
aas
inc
inc
pop
and
repnz
add
lcall
in
sub
push
clc
xor
pusha
les
xor
xchg
rcr
hlt
dec
jne
aas
lock
int3
add
sub
fs
fldl2t
mov
fbld
into
dec
adc
nop
pushf
mov
sbb
inc
addr16
mov
jge
or
pop
push
mov
jne
pop
imulb
mov
sub
lret
divl
std
fnstcw
push
add
push
lret
hlt
dec
in
xor
add
into
sub
lds
sbb
pop
and
ds
test
push
repz
and
repz
in
in
adc
mov
fbstp
nop
add
mov
inc
xchg
jo
sbb
pusha
mov
mov
addl
pop
add
sub
and
sbb
dec
mov
jae
lock
dec
mov
add
push
in
jo
xchg
push
mov
cmpsb
test
repz
fstpl
and
xor
inc
mov
jmp
inc
push
cld
cs
dec
scas
xchg
push
jg
repz
xchg
jmp
orb
cmp
lcall
adc
sub
pop
lcall
push
pop
dec
push
xchg
hlt
add
pop
sbb
rclb
lods
jae
cs
cmpsl
fcomps
and
dec
xchg
push
lods
cmp
mov
aam
lcall
add
dec
jmp
xchg
lret
imul
sub
shll
test
cmpsl
movsb
push
rcrl
push
insl
loop
pop
aas
in
inc
pop
xor
pop
dec
outsb
popa
cmp
jmp
not
xchg
mov
xchg
lock
out
scas
mov
adc
pop
sub
lock
xchg
xchg
dec
loope
jnp
add
xchg
adc
aas
lods
xor
mov
into
icebp
test
add
mov
and
xchg
mov
mov
test
jmp
jg
cwtl
scas
stos
in
lea
repz
enter
and
fmuls
hlt
push
mov
sbb
cltd
adc
fidivl
mov
add
fld
dec
mov
gs
ja
aam
mov
fstps
ret
inc
mov
js
xchg
repnz
xchg
add
sbb
in
mov
sbb
or
pusha
std
lea
mov
nop
ja
cwtl
aas
ret
mov
adc
rcr
or
ja
xchg
dec
and
int
stc
inc
push
add
sbb
icebp
int
out
mov
inc
fdivp
xor
dec
mov
lods
push
xchg
and
sti
cmp
mov
cwtl
push
ja
push
out
popf
repnz
pop
addr16
and
cmpsl
mov
fbld
gs
std
imul
inc
and
xchg
scas
dec
or
nop
out
xor
adc
fldt
jns
jge
out
dec
dec
adc
and
sub
or
push
jecxz
add
or
cs
outsl
ljmp
mov
daa
jecxz
hlt
xor
cli
dec
das
lahf
mov
out
xchg
mov
mov
fcoml
mov
push
mov
rorb
push
or
ljmp
cmp
xchg
mov
rclb
iret
fwait
sbb
iret
or
push
mov
fstp
cmc
arpl
outsl
jl
mov
xchg
jnp
inc
xorl
lock
sahf
test
push
and
inc
push
std
jae
dec
inc
cmc
dec
imul
aam
jb
push
jge
out
mov
dec
scas
test
inc
xchg
xor
ret
jecxz
dec
cmpsl
xor
dec
xor
mov
lock
out
cmpsb
pusha
arpl
jo
lcall
aas
notl
and
mov
cmp
add
subl
mov
mov
lods
cmp
bound
adc
popa
cld
test
jo
add
test
insb
mov
int
lock
cmp
or
out
mov
and
scas
mov
mov
adc
mov
add
jo
xor
inc
popa
dec
adc
repz
jnp
jnp
enter
lds
push
lret
jg
xor
cmpsl
outsb
inc
fldcw
sub
and
sbb
xchg
inc
cli
enter
sbb
repnz
dec
clc
cmpsl
inc
outsb
or
push
stc
clc
push
xchg
and
mov
std
push
mov
mov
xor
out
xchg
sarl
inc
mov
int
xor
jle
push
inc
mull
shlb
outsb
dec
jns
adc
jecxz
push
pop
or
jle
stc
in
sub
mov
scas
jo
mov
jb
cmp
pop
enter
or
xchg
mov
shlb
pop
out
pop
out
pop
cmp
addl
ficompl
insl
dec
fmull
outsb
or
add
movsb
push
imul
push
dec
cwtl
lds
aam
dec
jle
mov
jo
mov
fnstcw
pop
gs
dec
mov
mov
lods
sub
jp
mov
insl
push
adc
and
sbb
int
mov
cmpsb
xchg
push
cmc
test
sub
fcoml
popf
ja
shlb
pusha
inc
sbb
aam
decb
outsl
mov
cmp
and
das
xchg
xlat
fldt
aam
test
dec
shl
mov
jmp
arpl
sbb
lcall
or
push
sbb
cmp
inc
mov
jb
cmp
jae
mov
dec
pop
lret
call
test
pusha
sti
xor
hlt
hlt
mov
mov
mov
dec
cmpsl
add
gs
add
push
push
or
jp
pop
fsubl
push
cmp
and
mov
mov
sub
fucomi
mov
leave
jb
or
ljmp
mov
pop
outsl
clc
push
into
pushf
adc
sarb
adc
ja
ss
xor
xchg
arpl
fwait
push
mov
lahf
lods
push
sbb
mov
sahf
pop
mov
out
add
pop
cmp
xchg
mov
mov
repz
or
or
or
sbbl
repnz
call
jle
outsb
mov
mov
lds
push
mov
pusha
mov
ds
ss
cwtl
add
or
bound
push
repnz
pop
int3
xchg
pop
cmp
call
jnp
xor
push
mov
sti
aas
push
stc
or
hlt
or
mull
sub
sbb
inc
test
inc
dec
adc
dec
jnp
sahf
cwtl
pop
dec
cmp
dec
xor
movsl
or
push
adc
cmp
sbb
test
fmulp
jecxz
and
or
jmp
inc
jo
push
out
cmc
adc
sub
mov
mov
ja
orl
or
push
cmc
or
clc
loop
jne
out
jb
int
cmp
jnp
cmp
fcmovne
pop
pop
and
mov
imul
scas
lock
adc
push
popf
cltd
int3
xorl
dec
gs
push
negb
sub
iret
out
sbb
mov
data16
cmc
sbb
js
dec
cmp
push
gs
sbb
pop
fistps
sahf
jmp
loop
and
outsb
jge
pushf
inc
jo
out
out
mov
mov
imul
jg
and
jo
stos
lahf
inc
inc
xchg
adc
cmc
aad
or
pushf
pop
fucomi
or
aad
xchg
xchg
cld
mov
shl
movsb
cmp
push
add
fucomi
ja
shrb
and
xor
call
xchg
or
push
cmp
dec
test
xor
test
int3
cmpb
faddp
movaps
add
les
pop
inc
cmp
std
icebp
outsb
cmp
cmc
and
stos
inc
test
ss
dec
inc
cs
xchg
in
je
lea
mov
push
xchg
mull
popa
push
imul
out
lret
pop
add
repnz
adc
sti
jbe
jle
lods
mov
sub
popa
xchg
std
mov
imul
jbe
add
js
sub
cs
in
and
cld
js
cmpb
inc
lock
xor
push
add
xlat
mov
mov
mov
adc
push
sbb
test
add
add
xchg
cs
pop
sub
xchg
in
dec
xchg
aad
imul
inc
fcomps
and
loop
push
movsl
push
xor
mov
push
xchg
movsl
mov
lcall
xchg
push
dec
scas
push
xor
push
pop
cmpsl
lds
je
add
loope
mov
push
jmp
adc
jae
pop
dec
jmp
xchg
ja
pop
lret
in
mov
push
filds
xchg
lds
iret
fcoml
cld
xor
cmpsl
lea
push
inc
add
in
xchg
js
mov
insl
je
sarb
rcr
inc
rcrb
stos
outsl
enter
push
js
or
push
cmp
data16
loop
pop
and
call
jns
sbbl
cli
outsb
inc
insb
mov
cmp
jge
sti
or
aam
pop
adc
jno
push
mov
xor
mov
adc
mov
inc
push
ds
sub
lea
mov
clc
enter
cmp
xor
aaa
in
xor
fwait
inc
push
jecxz
cli
mov
movsl
lcall
jmp
sbb
in
mov
mov
gs
inc
rolb
sbb
xlat
or
scas
pop
jne
mov
add
cld
shll
cmpsb
jb
popa
mov
fucom
ret
dec
xorb
cli
cmpsb
mov
xchg
mov
and
mov
fwait
xor
xor
push
adc
dec
pop
cmp
scas
mov
shll
xor
in
sub
rolb
jae
sub
and
adc
add
rcll
xchg
adc
cmp
mov
pop
or
insl
out
in
inc
in
fwait
cmp
int3
push
mov
clc
pop
jl
add
add
lock
loop
mov
aas
xchg
imulb
pop
scas
jbe
rclb
xchg
sahf
jo
popf
jmp
sahf
lods
mov
lods
mov
lds
inc
pop
gs
adc
int3
xor
pop
mov
cmpsb
loopne
test
jl
cmp
icebp
mov
mov
push
cmp
add
faddl
jnp
loopne
scas
ret
enter
cmpsl
push
in
add
in
jmp
test
mov
jmp
xchg
dec
loop
in
stos
cmc
adc
cwtl
ret
pop
out
mov
or
pusha
cmovno
lods
dec
dec
mov
lcall
adc
xchg
xor
add
mov
icebp
arpl
movsl
push
add
cltd
rcrl
sbb
int
jne
ret
out
shrl
adc
test
test
popf
push
and
jnp
dec
mov
push
aas
mov
lods
mov
jns
mov
adc
xchg
cmp
jp
cmp
add
movsb
xor
sbb
push
mov
jnp
movsl
mov
ret
sahf
in
sub
fsts
xchg
adc
ss
movsb
sub
jno
and
stos
daa
fstps
int
lds
icebp
js
leave
or
cmc
test
pop
rolb
call
mov
ljmp
scas
push
lods
add
dec
adc
mov
adc
mov
call
aas
shll
imul
pop
xchg
aaa
xor
test
xor
sub
decl
or
push
jbe
jmp
pop
pop
scas
xchg
mov
aad
adc
xchg
in
mov
test
inc
std
subb
inc
ss
or
add
test
sbb
call
dec
out
fst
lret
jp
adc
inc
adc
jg
test
paddsb
push
sub
cmpsl
sbbb
es
fdivr
mov
sahf
gs
add
mov
leave
outsl
xchg
ss
cmpsb
out
xchg
adc
sti
jo
cmc
shrb
fbstp
push
in
lods
xchg
cmpsl
and
cmp
movsl
out
icebp
fisttps
testb
cmpsb
jae
fstpt
into
inc
pusha
fisubrs
mov
aas
mov
daa
aam
sub
adc
push
pusha
add
leave
and
leave
daa
push
push
jge
cmp
ds
mov
scas
or
or
pop
in
fsubrs
mov
mov
mov
lcall
call
mov
das
dec
jmp
and
sub
push
xchg
ljmp
cld
jp
mov
sub
add
int3
orb
pop
shll
insl
mov
inc
cmp
dec
leave
lock
jg
mov
popa
loop
sub
fildll
pop
and
push
mov
push
inc
imul
push
and
adc
mov
inc
mov
sbb
xchg
int3
psubusw
incb
repnz
subl
movsl
jle
and
repnz
jmp
iret
pusha
mov
pop
rcll
scas
mov
and
into
les
mov
push
insb
ror
mov
mov
dec
leave
push
scas
in
fildll
sbb
popf
jp
inc
insl
push
clc
cmp
dec
test
clc
sbb
arpl
mov
aam
lcall
pop
xchg
dec
mov
fsubr
sar
stc
lret
pop
push
adc
jge
jle
std
pop
fsubrl
cld
and
loope
pop
jmp
mov
inc
jp
cmpsl
iret
daa
sbb
out
nop
ret
repnz
mov
cwtl
paddusw
lret
cwtl
push
jae
mov
lds
insl
pusha
mov
xchg
arpl
in
sti
sub
pop
dec
or
sbb
negl
rorb
and
mov
mov
xor
cltd
mov
jno
or
das
add
sbb
adc
and
and
loopne
cmc
ficomps
ja
sarb
cmpl
jne
loopne
cmpsl
or
cs
ljmp
ret
or
decl
push
or
dec
ja
cmpl
sarb
cld
sbb
scas
hlt
cltd
fistpl
xor
mov
sub
xorb
jmp
mov
mov
mov
imul
data16
int
sbb
in
mov
sub
scas
jp
xor
sub
lret
mov
frstor
es
jmp
sti
fs
mov
and
movsb
mov
mov
cli
jp
push
add
xor
imul
sbb
dec
repnz
aad
mov
push
mov
cmpsl
xchg
scas
xor
hlt
movsb
add
fdivrl
pop
pop
fld
sbb
es
sbb
pop
jb
aas
out
pop
cld
int3
cld
jge
repz
das
lret
repz
unpckhpd
cltd
cmc
mov
jne
in
pop
pop
dec
test
and
inc
inc
and
cltd
dec
and
mov
mov
in
data16
jge
add
test
push
inc
sbb
stos
enter
pop
inc
sbb
cwtl
mov
idiv
xchg
xlat
pop
loopne
push
or
fimull
sub
shl
push
push
ja
testl
and
mulb
xor
or
or
ds
inc
mov
jecxz
std
or
lods
inc
loop
mov
cmp
sahf
or
sbb
les
insl
jne
mov
rcrl
aas
push
mov
rorb
daa
idivb
pop
push
insb
push
popa
mov
fwait
dec
popa
or
adc
es
or
mov
les
jo
movsb
sbb
and
sbb
sti
xchg
mov
arpl
stos
test
lret
sub
add
imul
push
pop
sbb
mov
cmp
fs
mov
pop
lret
push
movsl
sbb
cmp
aaa
mov
mov
data16
mov
in
cmp
leave
dec
mov
lods
push
std
pop
jb
rcrb
and
push
sub
inc
sbb
insl
mov
pop
adc
por
sahf
xor
mov
inc
mov
out
fnstcw
xchg
cmpsl
pop
icebp
mov
mov
mov
out
push
mov
and
lahf
leave
xor
pop
jnp
push
mov
aam
adc
add
jmp
sub
xor
xchg
cltd
or
fstl
pop
xchg
daa
shrl
push
loope
or
dec
mov
lds
cli
push
or
adc
sub
jg,pt
sbb
out
repz
test
xchg
dec
rcrb
leave
xchg
sbb
cmc
dec
cmp
or
out
dec
lcall
rol
bound
fcmovb
or
push
mov
mov
or
and
hlt
mov
stos
lds
xor
jg
and
dec
jne
icebp
fsts
or
lcall
lahf
adc
lahf
pop
jns
je
je
mov
mov
mov
lods
xlat
nop
xchg
or
or
mov
xchg
cmp
pop
push
inc
pop
push
pop
in
adc
adc
pop
lcall
inc
in
out
mov
cltd
mov
andb
in
push
stos
jno
movb
scas
lret
xchg
lret
orl
imul
push
xchg
stos
jb
xor
mov
shrb
std
push
cmc
dec
ljmp
jbe
mov
push
cmp
inc
sub
or
mov
test
xor
inc
push
mov
mov
stos
hlt
mov
fisttpl
sbb
fs
fcom
aam
pop
lock
int3
mov
cmp
adcb
in
imul
fsubrs
jne
clc
sbb
pop
call
add
dec
sbb
stc
dec
xor
dec
dec
ret
mov
in
fdivl
jge
sub
inc
aad
mov
das
mov
sets
xchg
mov
jle
xchg
add
dec
loopne
pop
ja
rolb
adc
and
inc
bound
icebp
xor
pop
pop
cli
xlat
or
cs
popl
clc
cli
dec
std
repnz
scas
push
test
ja
int3
push
lods
lods
sbb
stos
int
gs
jp
mov
push
jb
mov
adc
sub
pop
push
sbb
inc
or
je
int
xchg
fidivrl
out
fcomip
adc
aad
dec
mov
aam
xchg
fsts
enter
adc
push
fdivrs
pop
add
test
ret
mov
aad
pop
setb
cltd
mov
dec
jmp
jle
inc
inc
push
ss
sub
lods
or
scas
stos
enter
je
xor
pop
out
mov
test
popf
mov
sbb
push
xchg
and
jecxz
dec
cltd
mov
add
cmpsl
mov
and
loopne
mov
lret
push
or
sub
inc
inc
add
push
cmovbe
rorb
pop
xor
jp
shrb
aam
inc
push
add
aad
jo
insl
sbb
add
lret
dec
and
xchg
out
int3
fsts
dec
or
nop
push
pop
out
nop
mov
or
addb
movsl
xchg
add
mov
xor
xchg
stos
pop
arpl
icebp
lock
mov
pop
pop
das
and
xchg
lret
adc
and
sti
lock
cmc
les
daa
cmp
out
iret
dec
jae
dec
cmp
push
cmpsl
lods
pop
jge
stos
loopne
cmp
and
or
push
mov
dec
and
jnp
loopne
pop
out
push
xchg
sbb
mov
cmp
xchg
into
xchg
out
adc
pushf
mov
cli
xor
gs
mov
rcrl
and
cmpsb
jae
xchg
dec
sub
mov
inc
cmp
fistl
xchg
jnp
dec
pop
mov
pop
cld
fldt
mov
or
fidivrs
fwait
pop
mov
pop
mov
cmp
lods
hlt
inc
or
je
cmp
sbb
nop
outsl
push
arpl
xor
shr
pop
test
xlat
mov
mov
stos
sub
push
insl
dec
jnp
push
fiadds
sbb
xor
pop
adc
rorb
pop
ss
rclb
or
sbbl
loop
pop
and
sbb
push
sub
lods
test
jno
jbe
sar
cmc
mov
cmp
bound
frstor
inc
mov
sarl
rcr
xchg
sbb
jmp
js
ss
bound
mov
xchg
push
cwtl
aam
bound
loope
fucomip
pushf
inc
jmp
xor
es
popf
lret
pop
shrl
sub
div
xchg
fsubs
or
push
pop
inc
lds
fistps
adc
xchg
jb
mov
jns
jmp
xchg
lcall
mov
or
sub
lea
aas
enter
or
xchg
and
xchg
mov
push
adcb
lcall
jl
fiadds
pop
and
outsl
mov
xchg
repnz
mov
outsl
scas
data16
or
test
sbb
add
jno
sahf
or
mov
xchg
sbb
mov
jno
push
push
inc
sarl
and
jg
mov
pop
jbe
mov
inc
ja
jne
fdiv
or
sbb
cmp
mov
mov
adc
test
cmp
pusha
mov
aam
cmp
sub
pushf
push
dec
out
std
repnz
das
xchg
xor
sbb
pusha
or
je
push
dec
pop
mov
mov
sahf
cmpsb
xchg
lods
data16
and
push
inc
mov
cmp
xor
sbb
sbb
xchg
jmp
xor
loop
sti
or
sbb
lahf
push
loope
cmp
enter
stc
and
stos
imul
lcall
fnsave
cmc
sbbl
add
adc
lds
ret
sub
lea
ja
daa
mov
clc
jp
mov
in
pop
xchg
scas
pop
hlt
loopne
jno
aaa
sbb
lds
iret
data16
adc
sub
fiadds
and
or
xchg
fmul
popf
mov
push
jecxz
adc
repnz
fcomps
or
mov
pop
cltd
mov
xchg
add
popf
loopne
pop
ss
int
sbb
in
jp
mov
dec
xchg
shlb
or
push
rcr
fnstsw
xlat
xor
sbb
mov
lds
xor
mov
xor
not
ss
rorb
pop
test
and
scas
mov
mov
xchg
sub
mov
xor
std
sbb
push
fwait
mov
daa
inc
loope
jne
test
sbb
jno
jecxz
mov
jmp
pop
fsts
sbb
xchg
cmpsl
pop
test
pop
xchg
aaa
jne
test
pop
and
mov
push
in
lret
sahf
ret
inc
push
imul
imul
outsb
out
ret
call
cmp
lods
adc
jnp
sbb
pop
cs
pop
test
sbb
pop
arpl
fs
aas
inc
pop
jmp
int
das
xchg
ljmp
das
inc
mov
pop
out
sub
stos
pop
mov
mov
push
adc
lods
icebp
pop
inc
sub
popa
xor
int3
xchg
push
cmp
or
shrl
push
data16
lods
and
lcall
cld
loopne
inc
add
add
aas
insb
iret
mov
lods
cwtl
adc
mov
aad
jp
out
xchg
cmp
cmc
insb
sub
push
sbb
aam
repz
xor
push
movsl
push
and
xor
push
jge
sub
jp
mov
mov
out
bound
xor
dec
dec
add
cmp
shrb
inc
nop
mov
test
sbb
es
mov
js
sub
mov
fsubrl
xchg
push
jbe
lea
cwtl
xchg
lock
push
add
jae
inc
leave
cli
imul
xchg
int3
xor
loopne
pushf
mov
add
lret
mov
aad
jne
out
pop
fidivrl
test
cltd
mov
les
fmuls
jo
sub
aam
mov
repz
iret
lods
cwtl
inc
jmp
push
mov
push
inc
push
lea
push
adc
xor
mov
div
sub
stos
mov
in
test
dec
loop
jae
outsb
xor
outsb
or
adc
popf
and
and
inc
mov
push
jmp
lds
dec
xchg
in
cld
mov
mov
jecxz
loop
pop
push
mov
test
out
mov
xchg
jl
out
add
inc
adc
add
sbb
pop
shll
idivl
xorb
jl
aad
notl
cmp
out
sti
addr16
xchg
cmc
jnp
scas
fnstenv
leave
push
push
stos
push
stos
xor
add
mov
icebp
aam
andl
mov
loop
ret
mov
dec
add
sub
add
daa
inc
sbb
sub
shrb
int
mov
stos
xor
mov
mov
aas
jecxz
cmp
cld
imul
push
jb
sahf
ds
or
add
movsb
loopne
hlt
xor
int3
and
shrl
sbb
arpl
ljmp
repz
loope
sbb
mov
cld
pop
mov
test
xor
add
cmc
lods
mov
fs
mov
lahf
mov
movsl
fnstcw
mov
lcall
mov
push
cltd
fnstsw
mov
or
dec
sub
xchg
jnp
aaa
jbe
sub
add
fcomps
out
hlt
scas
popa
sarb
es
mov
call
mov
mov
pusha
mov
cmpsb
test
cmp
or
aam
mov
lret
pop
jo
push
pop
clc
sbb
in
xor
jbe
push
dec
rclb
je
push
dec
pop
rcll
mov
sub
addr16
push
push
xor
xchg
lods
adc
repz
aad
mov
dec
mov
scas
jns
add
push
loop
outsb
mov
mov
ljmp
jle
mov
outsb
mov
jnp
add
loope
or
push
rcrb
imul
dec
fnstenv
push
aaa
ficoms
mov
ja
subb
outsl
iret
push
xor
cs
add
aas
sub
insl
addr16
cltd
call
inc
cmp
cmpsl
mov
pop
ds
rorl
sbb
cli
bound
xchg
or
or
mov
rolb
sbb
push
sbb
mov
add
pop
imul
out
inc
cmp
lods
out
lds
fcmovu
cli
in
ds
jno
movsl
sbb
testb
add
push
cmp
int
mov
cs
sbb
icebp
jo
add
in
xor
iret
dec
mov
int
cmp
dec
push
andl
mov
movb
aas
jmp
or
test
fsubs
in
leave
inc
addb
aam
mov
in
lock
dec
scas
popf
xchg
insb
notb
sbb
add
jb
mov
and
cmp
lretw
cmp
sub
push
push
xlat
jo
dec
stc
jp
push
les
push
je
mov
popa
andb
mov
cmp
inc
nop
jl
mov
movsl
mov
xchg
pusha
js
push
and
arpl
inc
jbe
popf
lret
in
dec
into
daa
das
stos
add
sbb
mull
jge
bound
adc
rcrb
dec
fnstcw
fwait
pop
mov
and
push
mov
cmp
adc
int
or
or
jge
or
push
sbb
lcall
and
sub
or
add
out
and
xchg
addb
subl
ss
sub
insl
lcall
ds
shll
push
xor
mov
stos
das
fmull
cmpl
bound
adc
cmp
rorl
dec
ficompl
inc
add
loope
push
stos
cwtl
jp
aam
test
xchg
and
mov
loope
lcall
cmp
mulb
mov
lret
mov
jo
add
orl
push
bound
scas
orb
clc
stc
aam
inc
xor
sbb
add
in
xchg
cwtl
hlt
cmp
movsl
add
add
rcll
inc
fiadds
cmp
orl
sbb
or
jecxz
jecxz
sbb
and
lret
sub
enter
fdivs
iret
add
adc
jecxz
pushf
mov
mov
into
cmp
pop
pop
shlb
into
mov
cmc
popf
pop
daa
and
adc
xorb
pop
mov
mov
inc
scas
push
aam
mov
push
rorl
and
add
jo
ja
cmc
push
cli
xchg
fstpt
ljmp
inc
adc
xor
dec
pop
push
xor
int
call
jb
fstps
shll
jecxz
mov
sbb
enter
dec
push
xchg
rclb
mov
shlb
pop
sub
fstpl
loope
dec
mov
outsl
dec
hlt
push
or
out
dec
mov
out
cmp
je
popf
xor
pop
movsb
xchg
push
mov
lahf
cmp
mov
xchg
fs
mov
in
lock
enter
cmp
nop
insb
mov
movsl
sbb
cmpb
adc
lock
lcall
xor
pusha
pop
fcomps
cltd
jmp
inc
scas
fisttpll
or
xchg
leave
les
dec
adc
jp
icebp
arpl
outsl
shll
add
add
movsb
sub
or
sub
jno
movsl
mov
daa
roll
insl
pushf
adc
or
fisubs
enter
xlat
jbe
inc
cs
imul
adcb
ja
popa
xlat
aad
xchg
add
sub
lock
bound
push
rorl
cmp
pushl
mov
ljmp
mov
inc
push
dec
sahf
stos
pop
cmpsl
les
gs
push
popf
popa
xchg
subl
mov
aaa
adc
pop
or
nop
ljmp
hlt
stos
mov
xchg
test
dec
cmp
rol
push
mov
sub
popf
jns
jle
sub
sub
es
push
fcoms
mov
cmp
repz
mov
out
movsb
inc
mov
jo
jmp
out
or
cli
mov
dec
gs
out
cmp
xchg
push
xchg
cmp
sti
and
arpl
in
push
lret
out
push
push
and
push
fsubl
mov
movsl
int
push
gs
scas
and
xchg
mov
mov
xchg
outsb
push
xor
dec
lds
dec
gs
mov
xchg
test
inc
test
jl
ds
inc
out
enter
adc
dec
cmpsl
ffree
movsl
jnp
rolb
rclb
dec
popa
inc
outsb
mov
adc
sub
jo
pop
js
add
adc
mov
lock
into
push
adc
mov
cwtl
fdivl
push
mov
mov
xlat
push
ss
or
sbb
ss
adc
xorl
jle
lea
lret
jp
push
pushf
add
and
adc
rorl
inc
testb
notl
lret
xchg
add
test
popa
cltd
mov
fiaddl
aaa
andb
sahf
xchg
pop
sarl
loope
jne
sahf
jl
and
cmpsl
icebp
cltd
ljmp
sahf
cmp
inc
gs
bound
test
sub
cmp
mov
arpl
push
subb
mov
inc
out
xor
stos
loop
inc
fdivr
sbb
mov
sbb
jmp
mov
ret
and
sbb
stc
mov
jo
cmp
or
push
pop
xor
cltd
xchg
scas
pop
fistpll
push
inc
sbb
out
cmc
push
out
or
pop
arpl
push
lahf
out
mov
fsubrs
dec
xor
das
mov
out
mov
dec
scas
adc
data16
add
and
jbe
mov
orb
add
aaa
inc
out
iret
loopne
sbb
mov
stos
iret
fisttpl
pop
or
and
sub
pushl
in
jmp
push
repz
ja
fbld
jge
rcrl
jp
dec
ljmp
or
rcrb
ljmp
test
pushf
js
sti
popaw
sub
imul
filds
mov
arpl
std
push
daa
and
xor
mov
adc
mov
push
sub
mov
mov
mov
dec
dec
and
lea
fiadds
je
popa
aad
data16
jae
mov
xlat
xchg
pop
js
imul
cmc
lahf
xorb
in
imul
mov
sub
dec
inc
ror
mov
xor
sbb
add
prefetchw
ficoms
sbb
lcall
insb
out
lods
xor
cmp
push
test
jnp
and
and
adc
xchg
ret
pop
add
shll
out
mov
hlt
adc
jp
pop
xchg
xchg
outsb
mov
dec
test
jg
jae
add
xchg
leave
cmp
js
add
mov
xchg
sub
push
aad
mov
sbb
jmp
fldt
out
inc
fmulp
dec
sbb
lret
fmulp
mov
test
jmp
inc
pop
scas
jge
jb
and
jns
jo
outsl
mov
push
in
mull
test
xorb
mov
inc
ds
mov
jle
mov
movsb
add
and
mov
mov
push
xchg
rorl
push
ss
ret
sbb
lahf
cmp
dec
fldl
sub
sti
fdivp
jbe
push
sar
mov
push
cwtl
test
fs
jge
cli
mov
sub
lcall
movsl
test
out
push
jl
add
gs
cltd
pop
gs
loopne
lret
jne
shrl
jno
xchg
or
sub
scas
sti
cwtl
pop
dec
clc
inc
loopne
ror
out
mov
inc
lds
lret
jnp
iret
add
xor
dec
mov
std
enter
sub
pushl
pop
mov
and
sub
cwtl
xor
add
jnp
mov
mov
add
orb
dec
mov
jmp
hlt
rclb
enter
sbb
cmp
in
inc
arpl
cltd
ret
rolb
cs
inc
test
inc
mov
sti
data16
shlb
mov
push
add
negl
fmull
in
adc
cwtl
sub
pop
pop
popl
std
push
push
mov
mov
push
cmp
mov
pushf
in
data16
out
or
pop
sub
sbb
leave
inc
loopne
test
xchg
cmp
pop
xor
lcall
add
into
fwait
xchg
jl
cwtl
add
pusha
div
call
in
push
fs
cmpsb
std
jmp
pop
sub
jne
inc
xor
pop
aaa
mov
inc
movsb
sbb
sahf
add
push
xor
repnz
push
jne
or
into
dec
jae
or
rclb
mov
outsl
pop
fcoms
movsb
push
cmp
add
mov
movsl
cltd
lods
out
mov
out
inc
inc
mov
or
xchg
sti
xchg
lods
or
xchg
mull
and
and
fstps
mov
push
pop
and
inc
fldenv
scas
loope
mov
jns
mov
inc
push
sub
mov
jge
cwtl
das
imul
divl
adc
je
jl
push
ret
lcall
lcall
es
inc
or
out
daa
cmp
dec
out
fsubs
sub
mov
add
sahf
ss
or
mov
sub
aas
jge
pop
fidivrl
push
pop
dec
pop
mov
fst
test
xor
cwtl
mov
aam
add
dec
aas
push
test
fnstenv
loopne
js
xor
pop
sub
scas
push
sub
sub
cmpl
bound
insb
cmpsw
xchg
cltd
cld
lret
xchg
mov
jo
and
xor
rcrl
dec
pop
out
fwait
mov
or
shrb
push
xchg
jmp
aas
xor
lcall
and
gs
xor
push
movsb
push
xchg
dec
jae
out
out
fcomip
sbb
dec
and
sub
cmc
aaa
or
mov
mov
sahf
inc
jg
cmpsb
icebp
es
push
lods
xor
xchg
insb
int3
pop
rcr
ds
into
adcb
or
lea
fnsave
fiadds
dec
imul
jg
imul
sarw
mov
pop
fs
imul
scas
push
push
mov
or
clc
fnclex
xlat
jecxz,pn
xchg
imul
les
sub
into
test
scas
cmp
ret
rolb
sub
mov
mov
ja
js
mov
fadds
pop
pop
iret
insb
aam
pop
mov
mov
icebp
adc
dec
sub
imul
adc
jnp
test
push
jne
xchg
inc
push
mov
sbbl
shll
and
lock
xor
sub
pop
pop
jb
sbb
clc
pop
pop
test
mov
add
push
mov
loope
in
aas
fiaddl
ret
out
pop
sbb
leave
mulb
and
dec
inc
cmp
subl
es
xchg
jns
or
jbe
leave
mov
sub
icebp
mov
sti
push
adc
add
insl
stc
loope
ret
or
pop
mov
negl
jnp
fisttpl
rorb
in
mov
les
xchg
mov
jns
filds
xorl
jmp
mov
mov
and
int
sbb
icebp
add
sbb
das
jo
add
mov
sub
inc
jns
add
inc
mov
xchg
sub
dec
jnp
cmp
and
sub
push
insb
jnp
arpl
jge
fadds
in
xor
fsubp
jle
xor
scas
cmp
inc
test
insb
out
mov
mov
std
cmp
ljmp
mov
cmc
adc
push
fisttps
cwtl
test
pop
out
enter
xchg
jmp
push
inc
dec
repnz
jb
mov
lahf
imul
cmp
xor
scas
xchg
shl
dec
mov
es
mov
cmc
xor
mov
pmuludq
inc
xchg
lods
adc
lds
pop
inc
orb
xchg
inc
lods
cwtl
jbe
scas
scas
loop
mov
inc
inc
scas
xchg
xor
mov
dec
test
movsb
xlat
cmp
mov
nop
dec
mov
stos
adcb
xchg
stos
mov
enter
mov
pop
rcl
push
insl
xlat
mov
cmc
and
aaa
adc
cmp
fs
ljmp
jno
std
xor
ljmp
daa
enter
test
xor
inc
xlat
dec
sbb
scas
pushl
loope
cmpsl
mov
test
fldenv
push
shlb
add
push
xor
cmpsb
xor
mov
xchg
iret
sub
sub
movsl
push
adc
push
in
jns
mov
jle
sub
fsub
scas
int3
test
lods
movsb
scas
mov
mov
rcr
outsl
lea
and
lea
adc
int3
jp
bnd
jmp
xor
add
cld
sub
push
xchg
cmp
data16
mov
fstpl
clc
push
lock
sbb
and
pop
insb
movsb
enter
mov
mov
jae
mov
sti
fstp
xchg
push
push
xor
mov
and
js
jns
dec
xor
addr16
pop
mov
and
dec
movsb
mov
and
xchg
dec
fsts
pop
flds
mov
push
iret
ss
jecxz
mov
shll
push
mov
push
adc
xchg
ret
add
popa
xchg
fcmovu
imul
pushf
xchg
pushf
lods
sub
lcall
fisttps
sbb
imul
fsubs
movsb
rolb
movsl
push
pop
mov
js
mov
test
aas
fldenv
lret
sbb
shrl
out
shlb
mov
mov
outsl
xorb
push
sbb
sub
xchg
rcl
lahf
roll
add
test
adc
mov
scas
sbb
mov
das
into
cmp
and
daa
inc
cmp
xor
mov
rclb
cld
push
and
dec
iret
sbb
fisubs
add
inc
jmp
jp
fidivrs
cmp
push
or
outsb
movsl
mov
sub
mov
pop
test
cwtl
jae
stc
out
mov
pop
mov
repnz
jne
fwait
xor
rorb
popf
pop
push
ss
lock
or
divb
bound
push
inc
sub
xchg
cs
lods
nop
imul
imul
daa
sub
scas
sbb
test
xchg
mov
sub
scas
int
sbbb
xlat
jecxz
push
aas
mov
adc
mov
mov
scas
icebp
insb
out
pushl
lock
jnp
add
fcoml
mov
test
mov
sub
sbb
mov
nop
roll
cmp
mov
cmpsl
int3
and
loopne
jbe
mov
mov
xchg
fxch
add
int
sbb
jle
inc
bound
mov
push
insb
adc
inc
jnp
lods
js
insl
cmp
add
mull
push
inc
imul
das
adc
xchg
jle
ret
fs
mov
push
pop
xor
and
shrb
daa
pop
add
cmc
mov
add
scas
jmp
jmp
adc
das
pushf
dec
pop
out
inc
cmp
clc
mov
push
int
dec
jae
inc
addr16
aad
push
jne
lcall
push
leave
mov
pop
dec
xor
adc
fbld
sub
loop
mov
mov
ds
imul
push
mov
ret
sbb
or
sysenter
insl
inc
pop
cld
shlb
sahf
test
aas
ss
les
js
lds
xor
add
jo
cmc
inc
mov
add
sub
mov
push
push
aad
pop
loop
out
scas
and
aaa
leave
pop
enter
loop
sti
sbb
lahf
js
mov
sub
cmp
sub
xor
sub
jo
lods
adc
int
stc
inc
jbe
bound
xor
jl
mov
fists
jg
and
sarb
ret
stos
pop
xchg
std
xor
pop
ja
mov
mov
xor
inc
or
xchg
add
mov
frstor
mov
sahf
out
sub
mov
inc
cmp
mov
fcomp
outsl
sbb
repnz
mov
dec
and
add
in
xchg
repz
xchg
xlat
sbb
into
and
xchg
sub
jp
jns
add
inc
mov
xchg
clc
sti
push
loope
mov
popf
shl
mov
sbb
jo
lods
jle
cmp
roll
mov
imul
cmpsb
add
gs
xor
adc
fdivr
repnz
xchg
cmc
inc
call
clc
push
cmpsl
mov
enter
shl
aaa
subb
push
pop
loope
ss
adc
jns
clc
cwtl
pusha
cmpsb
cmp
xchg
shrb
mov
inc
mov
and
rol
addr16
jge
iret
lods
cmp
imul
orl
out
out
pop
mov
orb
les
cld
mov
push
insb
pop
mov
or
dec
adc
pop
sahf
sbb
clc
mov
test
adc
int
adc
pop
repnz
ljmp
movsl
jle
jb
test
roll
mov
jge
iret
mov
push
fmulp
mov
xor
ffreep
inc
fwait
rol
dec
stos
and
inc
pusha
int3
mov
push
icebp
mov
cmova
jmp
dec
test
out
add
loope
push
insl
inc
mov
outsb
inc
mov
lcall
inc
lahf
leave
inc
mov
lret
push
mov
mov
xor
push
in
popf
clc
mov
mov
inc
dec
popa
leave
into
pop
test
or
mov
xchg
mov
ljmp
shrb
cmpsb
pop
cmc
dec
stc
sub
imul
decl
lods
jne,pt
mov
mov
arpl
out
pop
test
jbe
sbb
sub
xchg
mov
dec
cmp
dec
or
or
lds
mov
shrl
in
fs
inc
jecxz
aad
fiadds
enter
sub
aas
ret
loop
inc
imul
add
pop
inc
jae
ret
mov
stc
jecxz
mov
adc
add
add
cmc
pushf
notl
loop
xor
and
jg
inc
dec
fadds
cmp
mov
hlt
add
inc
int3
mov
xchg
adc
cmpsb
test
daa
mov
sbb
sahf
dec
sarl
ret
ds
sub
adc
cmc
and
push
fcoms
out
sub
push
daa
or
roll
or
stc
popa
in
mov
ss
aas
testb
fidivrs
fldcw
mov
fadds
and
loop
out
mov
aam
stos
mov
pusha
pop
and
push
fs
or
xor
gs
mov
push
push
push
cwtl
arpl
mov
mov
or
stos
out
jo
lds
and
pop
mov
and
pop
pop
test
fisubl
push
pop
out
sub
sar
stos
jmp
or
pusha
aam
mov
dec
mov
std
hlt
sbb
frstor
cmc
mov
push
stos
loopne
push
sarl
jmp
out
je
sub
stc
sub
mov
pop
inc
pop
xchg
cmpb
mov
push
and
cs
inc
and
sub
push
sarb
lock
mov
mov
add
inc
subb
outsb
xchg
stc
daa
inc
push
stos
stos
out
ja
mov
xor
mov
dec
ja
into
sub
mov
movsl
and
mov
fadd
jnp
out
cmp
stos
sarl
jle
push
cmp
andb
in
xchg
int3
inc
and
shl
fs
dec
add
outsl
clc
dec
fnsave
and
int3
in
xchg
mov
rol
jb
lret
testl
xor
dec
jecxz
cmp
lea
int
fwait
and
test
add
push
shll
stc
adcb
sbb
sub
in
mov
inc
je
popf
pusha
mov
cmp
jl
xor
js
ljmp
pop
sti
mov
mov
sbb
mov
ss
cltd
fistpl
les
inc
mov
or
lret
sub
adc
or
rcll
aas
ds
jp
repnz
in
std
popf
cmpsl
xor
in
and
imul
pop
push
cmp
daa
scas
jle
dec
gs
cmp
mov
cld
shlb
bswap
and
pop
call
sbb
ret
jbe
dec
jns
arpl
out
icebp
test
fstl
lock
stc
cli
in
push
test
push
out
ret
jns
sbb
pop
cmp
add
push
and
pop
push
jg
mov
add
pop
push
sbb
cmpsl
adcb
cmpsl
jne
sti
ds
mov
xchg
lods
jp
pop
xorb
aas
movsl
add
lret
insb
jg
adc
cmpsl
and
or
xorl
push
roll
scas
dec
rol
inc
cmp
sub
int
scas
pop
mov
xchg
mov
sbb
xor
xlat
push
cmp
sub
hlt
inc
lock
in
ja
mov
fisttpl
push
mov
cmp
sub
pop
push
in
mov
fstl
xchg
fsincos
cld
mov
mov
outsb
sarl
lea
mov
sbb
xor
arpl
mov
callw
add
jp
leave
shrl
enter
lret
fcomps
adc
mov
cmc
lahf
out
mov
outsb
pop
push
and
pusha
movb
dec
mov
rol
xor
out
dec
inc
mov
pop
fildl
mov
cmp
or
push
push
xor
xor
pushf
or
cmp
inc
stos
mov
jmp
pop
pop
jo
push
loope
lods
loope
dec
pop
jns
sub
sti
cmp
test
jecxz
enter
ret
gs
lds
sbb
repnz
sti
rclb
in
add
jbe
add
outsb
inc
and
std
mov
push
lds
lret
jp
mov
fs
jmp
xor
add
stos
xchg
jbe
inc
imul
and
mov
std
inc
mov
mov
or
fld
mov
sbb
jne
out
mov
mov
inc
jle
aad
pop
mov
mov
movsb
mov
js
adc
pushf
int3
xor
xchg
pop
jle
test
fidivl
rclb
sub
xor
in
ficoml
cmpsl
xchg
push
mov
add
jb
movsl
popf
inc
stc
sbb
mov
daa
int3
mov
dec
xor
cmp
test
jbe
les
xlat
jnp
rorb
add
mov
shl
in
sub
insl
cwtl
or
in
mov
and
sbb
jns
fisubl
fwait
sbb
stc
mov
adc
or
imul
jae
movsl
out
scas
addb
ja
jge
pop
sbb
pop
jno
cmp
jnp
add
cmc
mov
cmc
lea
cli
in
pushf
mov
clc
nop
or
cmp
lods
mov
lods
je
test
or
or
adc
mov
dec
and
sahf
ja
xlat
fs
rorb
add
or
xor
mov
cli
and
or
out
jb
add
sbb
fildl
pop
loopne
xchg
jae
dec
mov
push
pop
xor
jo
test
and
add
adc
dec
push
mov
icebp
scas
test
add
push
gs
cltd
pushf
mov
add
leave
xchg
outsb
movsb
cmp
test
jno
sub
xchg
inc
and
test
subl
xor
adc
mov
lret
xor
stos
aad
in
cmp
xor
jae
outsl
xchg
jmp
sub
loopne
aam
roll
mov
imul
and
out
sub
test
bound
notb
jmp
ret
jb
in
add
ret
mov
mov
jl
mov
push
enter
sarl
dec
xchg
outsl
mov
push
lods
fildll
inc
scas
mov
iret
outsb
ds
cli
bound
leave
jg
mov
pop
jb
lods
test
sub
loop
test
push
sub
push
fsubrs
and
cmp
sahf
adc
adc
xor
out
js
add
daa
daa
sarb
test
lds
sbb
push
or
add
jge
pop
clc
pop
les
inc
dec
or
subb
pop
lcall
loopne
mov
and
cmc
add
add
adc
test
and
nop
test
mov
sub
loop
add
push
inc
lds
es
popf
pop
mov
xchg
jbe
jb
and
lahf
in
sbb
mov
xchg
es
ja
popa
aam
jge
and
jmp
test
adc
dec
or
mov
rorb
mov
repnz
push
cmc
sbb
aaa
outsl
push
outsl
jo
arpl
imul
mov
outsl
push
loop
fbstp
gs
mov
sbb
adc
cmp
sbb
cltd
dec
loopne
mov
jne
jmp
fwait
add
jbe
sbb
iret
sub
loop
out
inc
loop
mov
jae
mov
ja
cmpsl
imul
xor
lea
mov
adc
adc
mov
cmp
rcll
rcr
in
xor
hlt
jp
mov
test
sbb
aaa
mov
sub
test
or
jl
and
mov
mov
mov
mov
inc
mov
popf
cvtpi2ps
ljmp
out
dec
scas
je
push
cmp
mulb
push
sub
jle
fisubrs
in
mov
fwait
pusha
fmull
add
push
jbe
adc
mov
enter
in
inc
rol
or
idivl
push
cmp
cmp
fbstp
push
add
xchg
mov
sub
mov
enter
fnstenv
mov
in
stos
sbb
testb
or
divb
popa
add
leave
stc
lcall
jae
xchg
imul
aaa
pop
sbb
lods
in
mov
dec
fadds
ja
out
pop
insl
sti
mov
jnp
jl
pop
test
out
or
ss
jmp
pop
rcrl
xlat
in
pop
xlat
repz
rcr
call
cmp
mov
add
xchg
out
clc
idivl
or
cmp
ret
test
mov
jle
xchg
jl
cmp
mov
ja
pop
inc
adc
lcall
fwait
xchg
pop
push
pop
mov
scas
adc
repnz
jg
cmp
push
cmp
call
je
jbe
dec
movsb
jmp
ja
pop
testb
iret
sbb
pop
sub
cmpsb
insl
push
and
xlat
mov
push
jmp
dec
and
adc
gs
cmpsb
xor
push
and
cmp
scas
mov
mov
test
inc
sahf
lahf
std
rcll
je
into
pop
test
fnsave
inc
push
pop
test
and
mov
xor
or
or
shlb
aad
xchg
xchg
in
and
mov
jl
or
js
fcmovnu
xchg
repnz
popf
loop
arpl
das
xchg
and
insl
jne
mov
push
cmp
dec
aad
dec
xchg
fld
lds
mov
mov
subl
rcr
xor
push
aam
std
pop
cmp
xor
xchg
push
mov
in
or
lea
jle
lods
add
jmp
aam
pop
jo
icebp
out
xchg
movsl
movsb
mull
lods
jecxz
pop
loop
dec
addr16
add
sbb
xchg
stos
test
add
mov
pop
mov
sahf
cmpl
enter
out
lret
dec
insl
xorl
rolb
push
ljmp
pop
jle
push
repnz
lret
pop
test
test
add
or
out
mov
cmp
aas
arpl
mov
es
cli
and
lods
mov
adc
xchg
aas
xchg
in
fcmovnb
pop
inc
lods
imul
jnp
addr16
mov
adc
leave
sub
add
aaa
mov
xchg
int3
sub
xor
jge
dec
pop
adc
add
inc
inc
inc
xchg
adc
add
out
cmpsl
fcomps
pop
addps
adc
popf
jo
stc
leave
add
and
in
test
mov
aad
js
lods
mov
sub
or
movsl
stos
sub
adc
popf
lock
push
cmp
dec
jne
xor
cmpsl
push
pop
insl
lods
cmpsb
mov
dec
and
sub
ljmp
add
pop
sub
pop
inc
lahf
pop
pop
xchg
push
inc
sub
jnp
and
fincstp
xor
ret
ret
test
lret
ret
jmp
pop
pop
cmp
cmc
popf
jmp
add
xor
lods
fisubl
dec
xchg
cmpsl
hlt
inc
stc
loope,pn
adc
xchg
arpl
pop
cmp
xchg
push
call
mov
xor
cs
and
cmpsl
lcall
repnz
je
xor
lcall
sahf
sbb
adc
out
test
rcrl
cmp
push
movsl
cmp
sub
inc
push
push
mov
fstl
jbe
or
xor
mov
pop
sbb
les
adc
in
lods
cltd
or
into
fldl
jo
pusha
mov
nop
xor
inc
imul
jno
push
aam
xchg
mov
fidivl
jg
push
add
dec
jno
test
push
cs
push
mov
dec
int3
inc
out
jmp
lret
ret
mov
push
inc
sub
add
in
negl
add
call
dec
fdivl
xor
mov
and
add
rcl
sub
mov
sbb
jnp
outsl
cmp
adc
imul
aas
mov
out
andl
and
xchg
movl
mov
in
cmp
popa
mov
pop
repnz
or
out
cli
inc
xchg
add
sbb
sub
int
call
xchg
mov
ss
adc
insl
jbe
fbstp
ficoms
popf
and
mov
cmc
and
mov
test
negb
fstpt
jae
fidivl
aas
ljmp
imul
mov
mov
sbb
stos
and
fld
data16
sbb
lret
or
pop
popf
pop
and
jno
sub
jp
push
push
orb
cs
cmp
and
cmp
movsb
dec
mov
ja
fildll
scas
imul
inc
clc
pop
std
repnz
jae
mov
and
xchg
mov
cmp
inc
jp
mov
cmp
ljmp
loope
or
mov
xchg
imul
popa
mov
mov
rclb
leave
test
cmp
push
and
test
lods
pop
mov
das
sbb
into
mov
sahf
add
daa
sbb
into
out
pop
rorl
cld
fistl
add
arpl
mov
push
ret
push
jnp
or
mov
into
arpl
adc
cmp
lds
sub
lret
insb
scas
xchg
iret
inc
add
hlt
adc
inc
jo
outsb
dec
fs
pop
adc
xor
into
jp
mov
adc
ja
cmp
mov
aas
dec
lods
add
sti
int
xchg
push
add
dec
pop
jne
shl
pop
cmp
ja
stos
sti
mov
or
stos
adc
mov
pop
rcrl
pop
loop
aas
ret
jb
scas
mov
stos
push
dec
scas
jbe
lds
fsubl
pop
xchg
shlb
test
loope
dec
xchg
loop
repnz
sbb
loop
shrl
insl
in
pop
fdivrl
sti
imul
sbb
add
pop
xchg
fstl
movsl
inc
push
test
adc
enter
fcoms
cld
sub
aad
dec
or
jmp
dec
lret
lds
aaa
cmp
pop
mov
sub
cmp
adc
and
aaa
jp
sarl
push
cld
data16
dec
cmc
testb
clc
sub
fs
movsl
or
pop
sbbl
sahf
jns
loop
mov
dec
mov
inc
cltd
test
xor
sbb
and
xlat
inc
je
daa
fsubrl
mov
fidivrs
sub
jo
dec
test
into
mov
jge
fistps
xor
xchg
jne
stc
outsb
fcomi
rcr
add
inc
sbb
jns
xchg
add
popa
daa
pop
mov
or
lock
push
cmpsl
push
cmp
mov
dec
addr16
dec
vrcpps
pop
and
dec
scas
xchg
aam
xchg
sub
daa
push
icebp
aaa
mov
lret
mov
xchg
jge
aam
movsl
sub
lcall
pusha
jo
cmp
sub
aaa
leave
push
xor
je
xchg
jns
push
outsl
add
jo
arpl
jecxz
arpl
leave
mov
jbe
push
and
pop
push
mov
inc
push
outsb
in
dec
fisttpll
jno
inc
ljmp
sahf
jle
test
mov
push
or
aas
sbb
call
push
cmp
jo
push
xor
xchg
ret
jge
fwait
mov
test
test
lods
ljmp
test
xchg
shlb
mov
sub
das
mov
in
xchg
enter
or
xor
lods
jle
into
inc
cmpsl
out
fstpt
loopne
filds
xchg
call
ljmp
loop
push
dec
xchg
sbb
adc
push
mov
sub
push
out
dec
outsl
add
xlat
add
stos
xchg
mov
push
outsb
stos
lods
jl
dec
adc
movsb
and
cmc
test
dec
sbb
cld
aad
jbe
movsl
icebp
lock
mov
cs
mov
mov
aas
mov
test
or
mov
xchg
ret
int
imul
lret
sbb
and
push
ss
pop
mov
mov
fmuls
push
add
pop
mov
cli
in
fsubrs
repz
clc
mov
mov
mov
xchg
pushf
inc
push
sbb
fwait
outsb
mov
mov
jbe
add
or
mov
ds
test
sub
ss
imul
or
aas
lods
aam
test
sti
lock
jb
jp
push
mov
mov
and
js
xor
sahf
inc
jle
shl
dec
iret
or
jbe
ljmp
sbb
sbb
int3
std
jge
dec
out
adc
sub
xchg
mov
clc
adc
adc
mov
sbb
jo
fstps
pop
sbb
loop
repnz
sbbb
dec
stos
sbb
rcl
pop
and
push
inc
xor
fldl
aad
rcr
or
jecxz
cwtl
test
fsubrl
pusha
movsb
mov
das
lret
shlb
int3
cmp
push
inc
test
data16
in
push
xor
mov
js
repnz
mov
adc
mov
sub
inc
xchg
sbb
cmp
xchg
add
push
xor
xchg
es
jge
lret
mov
ret
into
aaa
cmp
mov
or
xlat
sub
dec
enter
popa
test
xchg
in
mov
or
fisubrl
jnp
xchg
mov
pushf
inc
iret
adc
mov
push
inc
lret
shr
faddl
mov
push
pop
mov
sub
adc
mulb
push
mov
shrl
aad
add
push
jbe
cmpsl
mov
cs
lods
and
dec
mov
push
ss
push
xchg
and
dec
negl
pop
cmp
jmp
mov
jecxz
xchg
in
add
fldenv
xor
arpl
sbb
outsb
inc
int
orl
xorb
mov
push
mov
fsub
ja
out
aad
pop
jmp
gs
xlat
push
decb
pop
imul
std
cmc
sub
lods
or
push
call
test
mov
add
jge
jns
lret
mov
int
pusha
jge
add
cmp
dec
jg
popf
or
adcb
sub
dec
dec
xchg
sub
enter
mov
push
or
inc
lret
adc
xchg
andl
mov
js
aas
in
pop
inc
daa
add
lahf
adc
js
mov
pop
pop
imul
adc
jnp
fcoms
or
push
fsubrs
fstl
scas
pop
pushw
or
mov
and
int3
mov
xchg
jno
shll
scas
loope
aaa
les
fwait
mov
movsb
and
mov
cli
sub
pop
inc
push
push
push
add
je
std
into
push
xchg
into
test
outsl
jno
outsl
std
mov
movsb
adc
fyl2x
push
ja
inc
xor
lcall
out
loope
ss
repz
push
out
cmc
push
lcall
loopne
vcvtpd2dq
adc
clc
jp
sarb
stos
subl
dec
xor
xchg
xchg
stc
es
sbbl
cwtl
or
sti
and
insb
push
jb
scas
lds
sbb
fildll
cmp
test
cwtl
cmp
int
scas
test
push
add
int3
mov
ljmp
popf
in
cli
jo
or
mov
imulb
sub
mov
xor
or
ss
mov
ja
sub
fs
mov
icebp
push
lods
sarb
in
xorl
dec
shl
jmp
push
shlb
jle
insb
pop
mov
pop
inc
or
js
xchg
mov
pop
jb
jmp
test
and
das
or
sahf
xchg
jno
mov
xchg
push
js
inc
les
loopne
inc
sub
test
xor
outsl
aad
gs
mov
mov
int
pushf
pop
and
push
adc
pop
sbb
mov
and
dec
aas
shlb
dec
or
mov
inc
push
je
addb
daa
out
in
test
addr16
jp
cmp
aas
push
lea
mov
fstpl
jle
out
test
in
dec
fstps
sbb
pushf
outsb
jge
sbb
xchg
jmp
cwtl
sti
sbb
sub
push
insb
jno
repz
or
mov
inc
inc
dec
ficompl
js
xchg
pusha
orl
arpl
aam
dec
test
sub
xor
movsl
enter
sub
repz
fcomps
je
insb
add
mov
xlat
loope
xchg
sbb
notl
jns
adc
fwait
mov
inc
xchg
cmc
fmuls
adcb
imul
jmp
pop
stos
push
insl
mov
xchg
xchg
outsb
mov
sub
sti
dec
inc
add
lret
stos
xor
ss
daa
sarl
scas
push
xor
call
fwait
jge
ror
andb
and
loop
cmp
aas
ja
lds
and
arpl
xor
stc
repz
ljmp
and
sub
insl
pop
jge
adc
and
mov
mov
out
arpl
mov
jl
push
outsl
lcall
cltd
mov
int
lret
cmpb
adc
xchg
cmp
aam
xorl
fs
aad
add
and
or
addr16
hlt
push
lds
popf
out
xchg
lcall
pop
mov
push
xchg
mov
stc
jns
adc
repz
dec
or
rcl
stos
xchg
popf
push
mov
mov
xchg
nop
mov
jle
pop
or
hlt
adc
sbb
push
imul
imul
sub
mov
lods
loopne
sub
test
pop
pop
mov
mov
int
lock
xchg
push
cld
arpl
xchg
fistpll
dec
pop
add
xor
inc
mov
aas
fiadds
jb
adc
and
mov
mov
pop
lods
stos
subl
sub
xchg
scas
xchg
xchg
xchg
pushf
aaa
sbb
and
ret
mov
sub
mov
pop
stos
sahf
imul
push
pop
lods
mov
mov
test
xchg
or
fsubrs
xor
or
jae
leave
repz
sbb
sbb
or
push
mov
cmpl
jbe
mov
jne
sub
sub
cmpsl
cltd
sbb
xor
adc
mov
pop
push
pop
mov
ljmp
scas
xor
pop
das
inc
xchg
dec
mov
push
inc
lahf
pop
bound
sub
mov
inc
stos
sub
xor
push
inc
cmp
scas
dec
data16
outsb
ret
scas
lcall
sbb
in
mov
sub
lds
pop
xor
aaa
out
jbe
cmp
mov
xchg
push
and
notb
ret
sbb
dec
mov
leave
and
push
add
pop
repnz
xor
cs
ret
into
xor
jns
mov
in
loope
pop
ficomps
mov
push
nop
adcl
mov
mov
fidivl
or
js
push
push
rcrl
mov
jg
test
or
and
filds
pop
mov
mov
xor
dec
mov
push
pushf
rolb
testl
xor
mov
pop
inc
js
pop
sub
fstl
adc
fists
lahf
or
aas
ss
jmp
adc
push
fsubrl
push
pushf
jnp
adc
pop
pushf
mov
adc
adc
xor
je
je
mov
inc
out
insb
test
sbb
jo
sbb
test
data16
test
push
pop
js
stc
scas
notb
lea
xor
pop
rorb
fwait
std
inc
stos
arpl
imul
mov
ret
div
fldcw
xlat
jnp
int
pop
movsb
outsl
sbb
mov
adc
mov
insb
lret
addl
sub
add
mov
dec
movsl
popa
test
scas
movsl
adc
in
stos
mov
shlb
mov
lahf
pop
mov
and
pop
fdivrs
jmp
sarb
fdivl
pop
rorb
mov
inc
xchg
push
shlb
mov
pop
mov
lods
jo
ss
push
stos
push
stos
sbb
cli
js
fldt
mov
xchg
dec
sbb
or
sti
push
fcom
dec
mov
stc
mov
in
xchg
inc
push
adc
xchg
pop
adc
or
sub
ljmp
mov
xor
cmpsl
rcll
outsl
inc
push
lods
stos
jl
sbb
mov
popf
jl
pop
inc
mov
sub
frstor
mov
into
repnz
inc
das
arpl
pop
push
hlt
jg
movsb
mov
ja
scas
push
movl
push
les
daa
adc
pop
xor
gs
push
mov
cmp
xchg
dec
xlat
out
adc
mov
jns
cltd
mov
outsl
ds
sbb
es
fcmovnbe
loope
push
jnp
gs
leave
aaa
shr
out
imul
xor
bound
cmp
mov
sar
mov
loope
ds
hlt
pop
icebp
lods
and
outsl
pop
test
push
dec
jg
popa
and
enter
cli
sub
rorb
pushf
sbb
negb
icebp
inc
xchg
jno
jnp
std
mov
add
push
sub
mov
sub
fstpt
cld
adc
out
sub
sub
daa
jbe
into
or
add
sub
jmp
add
ret
mov
inc
pop
iret
adcl
mov
mov
mov
push
es
pop
dec
lock
lret
leave
lret
lret
xchg
inc
push
xchg
movsl
xor
add
ds
inc
sbb
cld
shr
shll
addr16
cs
sub
pop
incl
or
jecxz
test
or
pushf
and
add
dec
mov
and
aaa
adc
test
addl
lock
sub
jcxz
mov
dec
repz
jle
or
insl
cs
cmpsb
or
jb
push
jp
movsb
rcr
out
clc
push
fnstenv
sbb
pop
ds
cld
xor
mov
pop
jle
dec
nop
sub
jmp
sub
je
add
mov
mov
cmp
push
insb
shlb
sbb
mov
mov
jb
mov
test
push
push
push
add
nop
in
mov
mov
or
psubusb
mov
xchg
xchg
je
cmp
daa
rcl
in
sub
mov
xchg
insb
popf
xor
mov
sbb
inc
insb
cld
inc
push
xor
fiadds
stos
in
cli
out
push
fdivs
test
mov
sbb
addr16
ljmp
cmp
and
enter
aas
test
xorl
mov
jmp
cmp
in
inc
lret
or
out
aaa
movsl
cwtl
icebp
xchg
pop
sbb
mov
into
add
ds
outsl
and
jecxz
rcll
fwait
je
jle
daa
repnz
shll
pop
xchg
push
into
sub
lret
jmp
js
fmull
mov
test
psrad
push
pop
lods
pop
fs
sub
jle
enter
xor
pop
stos
insl
ja
jg
stc
repz
and
push
or
inc
jg
iret
daa
movntq
mov
sbb
outsb
mov
test
xchg
add
sbb
icebp
xchg
shrl
sub
xlat
in
pop
cs
xchg
sti
pop
ret
stc
pushf
mov
sar
sbb
adc
lret
mov
jae
fdivs
aas
aam
sbb
cs
xor
repnz
pop
outsl
mov
fbld
adc
cmpb
test
cltd
push
test
icebp
jae
pop
outsb
xchg
lea
scas
cld
sbb
imul
movsl
add
add
add
out
cld
fsubrs
std
mov
aam
dec
push
fdiv
mov
and
push
aaa
mov
jo
mov
bound
inc
mov
mov
sbbb
mov
push
rolb
icebp
adc
mov
pop
xor
and
leave
lahf
int
jecxz
data16
ret
jnp
lds
dec
fisubrs
mov
bound
jge
add
stos
imul
xor
xor
and
xor
xchg
nop
das
add
and
nop
jo
and
xor
mov
cmp
aaa
mov
pop
mov
leave
xchg
dec
loope
sti
sbb
mov
and
cmpsb
inc
les
jle
add
mov
popa
cmpl
xchg
cmp
sbb
sbb
jno
ss
push
xchg
sbb
push
mov
or
push
ss
push
movsb
daa
jge
cmp
cli
mov
xchg
shrb
mov
stos
push
scas
jp
push
into
adc
cmp
push
push
or
cmpsb
mov
xlat
xor
mov
dec
inc
jnp
push
icebp
imul
and
sub
je
and
lret
std
dec
mov
pop
outsl
push
bound
jbe
imul
scas
sbb
mov
leave
mov
push
cmp
out
or
das
add
loop
mov
ds
mov
or
out
lods
loope
repz
jecxz
ret
and
push
data16
out
inc
aas
lret
cmp
mov
xchg
pop
push
insb
out
adc
nop
daa
movsl
hlt
jg
xor
lods
xlat
out
dec
push
xchg
arpl
mov
adc
mov
inc
cmp
outsl
inc
mov
stc
aam
movsb
fdivs
gs
ja
inc
jl
addr16
or
mov
loope
xchg
cwtl
or
push
clc
test
xorl
in
incb
push
or
jg
push
fnstcw
xor
adc
aaa
fs
in
in
hlt
imul
in
xlat
int3
fnstcw
js
dec
daa
xchg
int3
cmp
adc
negl
mov
loopne
stos
inc
sub
pop
jl
sahf
mov
mov
mov
sub
xchg
adc
into
scas
test
jno
pusha
and
fwait
sbb
cltd
das
push
jnp
push
jbe
mov
mov
popf
push
fsubrl
rcll
es
daa
pop
mov
ret
xor
push
push
add
arpl
mov
dec
jle
movsb
pxor
cmp
enter
dec
cmp
andl
dec
adc
lahf
xchg
addl
rcrl
add
jmp
dec
mov
out
lcall
leave
pop
bound
es
lea
addb
sarb
popa
pop
icebp
xchg
pop
push
and
test
pop
and
push
inc
xchg
xor
ljmp
push
out
mov
arpl
lock
mov
sbb
vandnps
sbb
mov
push
sbb
repz
cmpsl
dec
arpl
or
insl
fs
or
xchg
dec
mov
jo
mov
adc
sbb
inc
inc
xchg
das
ljmp
xchg
das
mov
repz
test
mov
test
pusha
sahf
pop
gs
es
push
jmp
jno
xchg
fst
and
push
mov
nop
gs
jl
sbb
loopne
ljmp
fisubs
pop
sbbl
sahf
lods
les
cmpsl
inc
dec
dec
sub
sub
add
mov
stos
fbld
popf
push
jnp
lea
add
and
push
daa
xchg
jg
lcall
ds
jne
mov
test
ss
das
cli
aaa
les
mov
inc
out
jmp
icebp
sahf
sti
cmpsl
jae
pop
insb
or
add
inc
repnz
jge
in
mov
notl
push
lcall
in
mov
add
dec
stc
enter
jg
add
fildll
imul
ret
shl
cmpl
pusha
xchg
je
pop
ret
dec
cld
lods
and
shll
daa
out
mov
daa
in
jne
jb
xchg
push
aad
sub
inc
cltd
xchg
ja
sti
ss
sbbb
loop
adc
push
lret
aaa
idivb
or
dec
pop
add
out
mov
sbb
sub
lds
mov
mov
xchg
shll
stc
inc
fcomip
leave
mov
test
lods
xor
pushw
icebp
mov
clc
aaa
jns
cmp
lret
gs
push
mov
icebp
adc
jbe
data16
push
xchg
sbb
add
adc
cmpsb
lret
call
and
jbe
sub
sub
test
xorb
cmp
pop
out
das
daa
mov
and
in
js
out
int3
dec
add
cld
push
cltd
insl
inc
sbbl
fmuls
xor
clc
xor
clc
add
adc
or
cmp
push
movsl
sub
push
push
imul
ficompl
imul
dec
pop
xor
xchg
sub
ficoms
inc
dec
int
jle
addr16
imul
dec
jge
mov
hlt
push
fisttpll
lods
pushw
mov
dec
push
ds
fldenv
mov
sub
insl
xchg
cmpsl
or
inc
or
pop
icebp
test
into
jmp
shlb
addr16
inc
lret
inc
cmp
das
xor
push
cmp
fistl
repz
pushf
sbb
scas
nop
outsl
shlb
cmp
add
pushf
int3
icebp
lret
add
lock
mov
jmp
test
popf
movsb
jno
adc
mov
iret
lods
pop
and
mov
mov
inc
in
xchg
cld
cmp
mov
insb
inc
add
stos
aam
loopne
dec
mov
pop
xor
addr16
lock
dec
sub
jno
pop
repz
loope
pop
dec
pushf
loop
dec
nop
adc
xor
mov
dec
mov
mov
nop
jb
ret
loop
orl
sub
mov
dec
ficoml
adc
xchg
ja
inc
aam
fwait
iret
fildl
mov
addr16
scas
push
cld
cmpsb
jge
sahf
stos
xchg
lods
cmp
or
mov
sbb
sbb
das
and
add
in
test
dec
stos
fstpl
jb
out
jno
das
cmp
test
enter
sub
sbb
loope
mov
das
js
dec
fcoms
mov
mov
lock
add
int3
fidivrs
xlat
les
sub
ja
sbb
xor
mov
aad
cld
jbe
xor
sbb
cmp
in
fnstsw
jmp
popf
popf
imul
rcrl
bound
jmp
or
mov
jno
in
sbb
stc
push
add
cld
rorl
test
sub
xlat
xor
cmp
jmp
pop
fsubl
movb
jnp
fidivrs
cmc
outsb
sbb
xchg
das
or
sbb
cmp
adc
inc
cmp
stc
sub
lds
add
mov
push
xor
sub
mov
aas
mov
push
jbe
add
icebp
add
lret
ds
jae
rolb
pop
jbe
sbb
addr16
stos
jecxz
ja
mov
jb
sub
dec
xchg
sbb
insl
sbb
pop
xchg
sub
xchg
add
std
into
jle
stos
pushf
cmp
adc
or
popa
daa
mov
rcrb
test
mov
mov
test
mov
rolw
adc
cs
and
cmp
das
mov
dec
push
pop
hlt
sub
jnp
xchg
mov
in
pop
ret
or
pop
sub
mov
mov
add
xchg
outsb
es
fdivrl
xchg
pop
mov
or
in
ljmp
sbb
add
sarb
mov
jo,pn
adc
in
fmulp
mov
or
dec
repnz
roll
sub
divl
int
dec
stos
outsl
ss
push
lret
inc
xchg
shl
into
lods
pusha
mov
in
cmpsb
mov
ljmp
cltd
scas
bnd
jmp
xchg
in
mov
scas
popa
rolb
jmp
insl
pop
test
das
outsb
fidivrl
loop
sub
mov
and
cmc
cld
jo
scas
lahf
loopew
xor
push
push
adc
mov
or
mov
repz
dec
jns
roll
out
lock
out
shl
dec
leave
dec
stos
pop
shlb
aas
in
repz
lret
sub
xor
paddusb
daa
push
sbb
push
ds
dec
out
mov
inc
es
loop
jg
addr16
or
push
fsts
xchg
jmp
repnz
negb
add
rolb
incb
or
or
mov
loopew
sbb
xchg
ja
mov
mov
movsb
dec
in
inc
cli
nop
into
gs
jb
sub
test
sub
inc
cmpsb
out
jbe
inc
pusha
xchg
mov
sub
or
sti
cmp
jns
popf
fstps
cmpsl
push
and
push
sarb
mov
rol
shrl
dec
sbb
xor
lods
loop
and
push
mov
ret
mov
call
movups
xchg
sbb
adc
push
aam
cmp
ds
adc
ficomps
jb
lods
xchg
pop
imul
ret
insb
mov
into
push
xchg
jo
bound
and
push
and
shlb
out
pop
jne
loop
xchg
jmp
push
rclb
aas
xchg
jno
pop
pusha
mov
xor
jns
ja
xchg
pop
adc
mov
jmp
pop
mov
and
pop
lret
pop
jae
movsl
and
pop
icebp
lcall
inc
sbb
inc
movups
insl
mov
shlb
in
xor
test
add
aaa
cmp
pop
mulb
sub
pop
stc
ss
call
pop
and
fld
pop
or
dec
mov
aad
rclb
mov
in
sub
lods
add
ret
inc
mov
shl
sub
inc
xor
es
and
popf
jo
pop
mov
mov
mov
mov
test
ss
popf
pop
push
or
insb
fdivrs
out
aam
xor
jb
dec
into
pop
pop
cmp
cld
stc
jg
nop
mov
lock
test
and
sub
adc
adc
ds
mov
dec
shll
in
xor
xor
xchg
out
dec
sbb
shll
iret
lea
adc
daa
enter
lahf
lahf
or
mov
inc
cmpsb
xchg
push
repz
out
sbb
mov
push
xor
jno
in
pop
cmp
inc
cmp
sub
jo
mul
cmp
xor
mov
add
and
out
lret
test
mov
adc
lock
subb
dec
popa
mov
outsl
mov
cwtl
aaa
mov
cmp
out
fwait
adc
aam
pop
sub
sti
add
xchg
std
pushf
push
out
mov
and
sbb
xchg
in
sub
or
ja
pop
inc
dec
push
or
fcmovne
pushf
jg
leave
and
movsb
inc
shlb
imul
add
ret
sub
test
cmp
out
or
in
rcrl
clc
fsts
and
iret
in
es
not
xchg
and
ficoml
movsl
mov
std
rcrl
push
lahf
aaa
or
dec
lret
dec
inc
out
leave
xchg
push
bound
shrb
or
arpl
mov
xor
ja
lret
or
jl
mov
push
xadd
dec
sbb
mov
icebp
and
lahf
clc
fstps
adc
sti
pop
fiaddl
js
mov
outsb
cmp
jge
add
pop
lea
xchg
subb
movsl
mov
cld
push
es
lods
jp
test
push
sahf
loopne
repz
pusha
xchg
std
popa
mov
or
arpl
sbbb
inc
push
xlat
gs
cwtl
out
lret
stos
or
inc
cltd
mov
add
or
inc
cmp
and
imul
pop
call
mov
test
shlb
pop
xor
pop
sub
pop
and
mov
mov
addr16
pop
or
sub
mov
mov
xchg
dec
push
test
xchg
xchg
add
mov
xchg
dec
int
test
popf
and
lret
push
aad
xor
xchg
imul
xchg
out
enter
dec
mov
inc
pop
push
adc
push
inc
xchg
sub
dec
int3
push
add
xor
lea
pop
xchg
sbb
sub
inc
in
leave
inc
rcll
xor
push
ret
xor
lahf
cli
jp
jbe
mov
and
cmc
mov
fnstcw
outsb
jl
jno
sbbl
or
in
push
in
adc
mov
add
lock
iret
sub
jl
scas
lahf
loopne
inc
pop
data16
sub
pop
inc
lods
and
stc
push
mov
lcall
pop
inc
xchg
out
or
jns
cmpsl
insb
mov
fs
mov
fidivl
aam
and
xor
jle
int
sbb
adc
loop
fsubrl
es
sbb
sbb
xor
mov
test
fsubl
out
imul
callw
popf
sub
rorb
dec
and
ja
jns
in
jl
add
jo
xchg
test
adc
lods
imul
int
imul
fdivl
fimull
into
clc
popa
call
fisttpl
popa
push
and
in
xchg
std
enter
pop
inc
andl
out
mov
pop
repz
ret
lcall
fimuls
inc
lahf
mov
jle
or
jl
in
dec
es
in
aaa
cwtl
and
inc
loop
dec
push
dec
dec
testl
decl
and
stc
mov
in
pushf
jg
sti
movsb
notb
rol
aas
cli
pop
fidivrs
cmp
cmpsl
jmp
jns
int
mov
lret
jae
ljmp
jnp
cmp
inc
jb
mov
jmp
cmp
leave
mov
xchg
pop
jae
xchg
outsl
pop
inc
loopne
xchg
xchg
sbb
xchg
ret
pop
and
ja
and
int
sbb
dec
popf
ret
and
xor
sarl
mov
jno
sbb
int3
mov
lock
por
mov
lods
fsubrl
add
xor
lods
je
pop
ja
loopne
jecxz
mov
pop
mov
out
add
xor
mov
incb
push
cmp
add
fcmove
out
pop
lods
iret
fwait
jnp
js
jle
pop
jns
fwait
pop
add
inc
ret
dec
dec
dec
icebp
xchg
lods
into
je
dec
ret
lcall
popl
mov
stc
les
mov
jne
inc
xchg
pavgw
dec
scas
ja
ljmp
or
js
xchg
std
cmpl
mov
bound
inc
lahf
mov
addr16
dec
hlt
lea
inc
enter
shlb
inc
scas
mov
ds
lret
xchg
or
dec
je
cmp
in
dec
pop
call
pushl
xor
ror
xor
ret
mov
ds
movsl
test
sbb
pop
pop
push
dec
pop
push
outsl
clc
jae
aas
dec
push
aas
mov
xchg
add
pop
fisubrs
js
pop
mov
pop
pop
je
flds
sbb
inc
aaa
test
in
imul
out
clc
test
xchg
shr
les
mov
cmp
jnp
mov
arpl
mov
ss
dec
dec
push
jl
jge
jns
aaa
jo
xchg
loopne
aam
inc
mov
mov
jl,pt
jne
xchg
sub
mov
popa
jae
fisubs
sub
or
jns
cmp
sub
es
jmp
das
adc
push
sbb
lods
or
popf
add
cmp
je
inc
pop
and
sti
or
and
xor
mov
push
mov
add
cmp
insl
fimull
mov
scas
dec
fistl
fcompl
cmpb
addr16
add
adc
push
outsb
push
repz
lahf
rorb
push
iret
or
mov
mov
cli
jg
mov
lock
mov
push
push
std
sbb
mov
jg
roll
cmc
gs
bound
cltd
movsl
std
pop
mov
inc
fisttpl
mov
push
mov
loope
out
aad
adc
and
sarl
jp
sub
sbb
mov
gs
push
xchg
out
xlat
insb
pop
popf
dec
hlt
pop
mov
fbstp
movsl
aaa
into
arpl
jl,pt
or
pop
push
adcl
mov
pop
pop
bound
fs
aas
arpl
stos
adc
cmp
movsl
aas
sti
push
and
push
dec
nop
or
stos
add
pop
hlt
push
bound
sbb
ficompl
sbb
adc
in
bound
fstpl
adc
adc
repz
dec
cmp
data16
popf
sti
test
mov
cmp
and
inc
cmp
das
out
or
imul
dec
xchg
xor
adc
jbe
pandn
mov
push
andb
push
xchg
orl
lods
ds
push
add
pushf
loop
sahf
adc
sub
fildll
out
loopne
or
pop
push
dec
cli
fcomi
mov
and
fwait
pushf
hlt
push
cmp
fmull
lret
dec
inc
ja
in
cmp
and
xlat
push
xor
pxor
fcompl
inc
mov
imul
ja
push
dec
movb
push
mov
outsb
mov
jg
sbb
xchg
test
cmp
xor
push
sub
fnstcw
hlt
sbb
add
xchg
pop
and
rep
fisubl
mov
aad
mov
fcmovb
mov
adc
pop
lcall
mov
jg
insl
xchg
cmp
loopne
mov
iret
lods
shrl
ds
push
or
xchg
in
cmpsb
xor
insl
and
pop
cmpsb
les
inc
dec
cmc
mov
shll
pop
cmp
pop
data16
inc
mov
pop
faddl
push
fnsave
push
test
test
cmpsb
std
fisubrl
mov
add
xor
and
test
push
jmp
inc
stos
sbb
adc
adc
cmp
mov
mov
in
dec
das
sbb
push
cli
ret
and
loop
mov
nop
out
xchg
mov
int3
xchg
cmp
xlat
adcl
pushf
notl
ja
movsl
cmp
clc
adc
ret
and
loop
test
pop
jl
mov
addb
inc
cmpsl
lret
dec
inc
aam
out
mov
shrb
dec
scas
shl
fimuls
test
lret
or
out
aad
or
push
cmpsb
cmpsb
daa
pop
mov
sub
sbb
xor
xchg
scas
mov
sub
mov
dec
jno
aad
xchg
push
inc
pushf
in
insl
sbb
mov
pop
mov
aas
fildll
enter
xor
add
imul
fists
or
cmp
iret
mul
jecxz
pop
loop
push
sub
insl
enter
push
cmc
and
adc
cmpsl
mov
jle
addr16
mov
xor
ss
mov
stc
push
mov
cmpsb
or
pop
sub
testb
add
and
xor
inc
addb
mov
hlt
inc
dec
mov
lock
xor
jno
or
push
and
push
or
aam
push
fucomi
fldt
pusha
and
dec
dec
fdivr
push
ljmp
adc
add
fwait
push
inc
cs
in
xor
ljmp
in
js
pop
dec
ficomps
or
xchg
mov
and
repz
outsb
mov
fdivl
bnd
test
or
je
aas
add
pop
pop
jnp
inc
data16
out
sbb
inc
jge
cmp
dec
fistps
jb
sub
xor
xchg
in
xchg
jle
cli
cltd
ljmp
pop
pushf
seto
popa
sbb
jp
mov
ljmp
and
sar
clc
add
movnti
lea
mov
or
mov
sbb
add
lods
mov
gs
inc
jne
xor
ret
cmp
stc
sbb
mov
test
cmp
cwtl
stos
test
arpl
add
push
jno
pop
push
adc
push
aas
mov
lods
into
push
mov
popa
call
push
stc
adc
push
mov
scas
loope
iret
dec
aam
sbb
insb
xchg
xchg
sahf
mov
cmpsl
xchg
rolb
sub
sub
popf
xor
sub
jb
push
jnp
aaa
jmp
mov
dec
dec
jo
xlat
mov
dec
fsubrs
inc
sub
arpl
push
daa
push
arpl
jo
aam
jmp
jmp
mov
mov
inc
push
adc
xchg
or
movsl
pop
je
jns
leave
arpl
das
out
inc
mov
je
lcall
add
mov
xor
hlt
enter
xor
mov
pop
faddl
movsb
call
cmc
into
cmpsl
gs
add
add
xchg
mov
lods
testl
jb
icebp
push
jg
pushf
clc
insl
shrl
mov
stos
scas
mov
jg
pop
mov
xchg
xor
pop
pop
cmpsl
adc
inc
jo
pop
xchg
sahf
out
jae
cmp
aaa
mov
les
jle
fldcw
clc
fisttpll
ret
lock
imul
cltd
sbb
cmp
fdivrs
add
jmp
cmp
imul
dec
ljmp
pop
xchg
ja
popf
jl
sub
loopne
mov
icebp
add
xor
adc
add
sub
mov
jns
ds
dec
sub
enter
int3
jg
push
mov
inc
pop
lcall
pop
and
das
push
inc
pop
push
dec
jae
loop
fcoms
stc
mov
push
aad
cmp
jno
dec
adc
jo
jmp
shrl
push
clc
push
push
sub
xlat
int3
mov
cmp
lret
dec
cmp
mov
icebp
mov
push
add
or
shl
cltd
mov
mov
clc
add
push
jge
adc
mov
stos
push
and
out
jo
jne
lcall
mov
adc
jmp
xor
test
inc
pop
shlb
fstpt
jno
mov
and
inc
cmp
lds
add
or
cld
inc
mov
mov
xchg
lods
xlat
or
xchg
lock
mov
mov
jg
pusha
pop
ss
je
inc
rcr
std
jge
clc
lret
sarl
test
jbe
mov
or
xor
pop
lret
es
lds
mov
cmp
ljmp
or
dec
cmp
stc
rol
push
jl
xchg
add
mov
and
insb
pop
add
push
icebp
fcmovne
add
jmp
push
fs
cmp
stos
ret
push
and
cmp
insb
push
mov
mov
sub
dec
iret
jae
pop
push
ret
xchg
sbbl
lret
dec
xor
pushf
push
jns
test
outsl
sub
stc
and
movsl
rol
mov
mov
adc
pop
mov
stos
mov
fs
dec
sub
gs
sub
dec
push
dec
jae
mov
insl
roll
das
leave
add
imul
jecxz
inc
lret
xor
adc
mov
cwtl
add
out
dec
dec
test
dec
jp
or
cmpsb
pusha
sahf
and
lret
rorb
movsl
cli
mov
lcall
testb
ljmp
mov
lcall
into
push
pop
orb
scas
ds
stos
clc
mov
sbb
jnp
or
or
push
jns
ljmp
dec
addr16
ret
adc
imul
loopne
mov
fwait
sub
leave
xchg
or
ljmp
out
lods
pop
cmpb
loopne
rclb
lods
rcr
into
inc
stc
sti
ret
pop
jbe
dec
mov
xchg
add
and
adc
out
adc
leave
dec
inc
pop
test
lods
sti
sub
cmp
pop
setge
dec
pop
mov
imul
or
rorb
inc
dec
dec
dec
sbb
push
outsl
push
pop
rcll
sbb
out
dec
xchg
sbb
inc
mov
xchg
arpl
mov
add
test
push
aam
fnstcw
sbb
cwtl
push
cmp
mov
cs
cltd
push
nop
mov
mov
mov
jno
xchg
stos
and
shr
and
test
pop
jne
scas
jg
jle
popf
cmc
imul
or
mov
movsl
xor
inc
sub
lock
push
add
das
mov
leave
push
jmp
pop
aaa
push
dec
xor
pop
sahf
add
fwait
hlt
jno
dec
xchg
popa
mov
insb
movsl
pop
out
and
inc
xchg
mov
xor
mov
lods
repnz
pop
push
or
in
mov
out
test
adc
in
push
cmp
in
es
xchg
push
mov
dec
push
test
cmp
xchg
lea
mov
test
cmp
popa
nop
call
mov
jbe
cmpsb
lock
fcomi
sbb
pop
mov
mov
push
or
push
and
or
mov
aam
add
lret
adc
mov
lea
bnd
mov
adc
js
cmp
cli
ljmp
add
pop
out
aaa
cmc
dec
push
lods
call
dec
rorb
jmp
cmpb
icebp
movsb
mov
stos
scas
fadd
inc
mov
or
arpl
or
cli
lods
ljmp
jg
cmp
rcr
push
adc
xorl
pop
and
leave
xor
mov
ljmp
sarb
sti
movsl
pop
pop
or
push
adc
ss
xor
das
xor
ljmp
inc
add
xor
jp
ljmp
push
test
std
bound
mov
dec
lods
mov
in
push
outsl
jl
aas
test
lret
sbb
xor
dec
imul
push
pop
jb
movsw
aas
test
push
xor
mov
dec
jns
jmp
outsb
cmp
and
scas
cmpl
std
in
xor
stos
pop
rcll
push
xchg
gs
movsl
ljmp
pusha
pop
xchg
nop
loopne
adc
rcrb
test
les
or
sbb
jbe
mov
dec
fidivrl
icebp
mov
adc
hlt
stos
xor
mov
lret
ficoms
out
ss
mov
cld
push
push
cmp
mov
in
dec
call
push
in
rolb
sbb
enter
repnz
js
xchg
and
shlb
pop
iret
test
lret
dec
icebp
sub
movsb
lahf
into
and
cmp
add
cmp
pusha
test
xor
and
sbb
dec
push
jp
jnp
inc
dec
pop
clc
nop
cwtl
cltd
pop
dec
fwait
and
mov
lcall
iret
or
xor
sbb
imul
push
jmp
dec
mov
loop
addl
add
mov
mov
pop
popf
mov
nop
mov
jb
and
adc
adc
and
in
and
push
imul
movsb
mov
push
daa
gs
int3
pop
add
mov
movq
enter
push
negb
inc
in
inc
into
jl
jbe
cltd
pusha
in
fmuls
cmp
cld
dec
out
dec
mov
jae
test
inc
sbb
pop
enter
call
sbb
aam
pop
mov
and
push
cmp
fstps
sub
push
xchg
push
cmp
sub
xchg
test
mov
xchg
dec
and
add
lods
add
mov
aad
jmp
pop
rolb
jbe
shl
xor
gs
enter
movsl
cmpl
mov
in
iret
int3
mov
jle
or
xchg
adc
orl
out
add
add
push
mov
out
or
xor
pop
fstl
mov
sub
stos
or
jbe
aaa
push
aaa
sarl
mov
push
sbb
enter
hlt
lea
clc
jnp
adc
mov
stos
repnz
pop
inc
iret
insb
mov
lea
xor
fidivrl
test
imul
mov
inc
mov
push
rorb
imul
nop
lods
arpl
xchg
enter
inc
dec
mov
fiaddl
xor
xchg
cmpsb
mov
cmp
inc
mov
mov
ja
pop
pop
cmp
dec
push
fadds
movsb
int3
xchg
and
xchg
cmp
inc
xchg
je
sahf
xchg
stos
lds
jno
fs
jecxz
sti
repnz
outsl
mov
arpl
ljmp
pop
jns
xchg
xchg
rorb
sbb
insb
icebp
adc
xor
scas
test
jno
lods
stos
repnz
mov
fdivr
push
std
jb
loopne
mov
stos
xor
data16
lods
rolb
and
insb
je
fisubl
and
push
les
push
bound
pop
dec
or
cmp
fdivrl
loopne
hlt
push
cltd
test
push
jns
in
adc
push
in
mov
xchg
cltd
daa
push
jg
fwait
insl
xchg
mov
idivl
xchg
pop
jb
aad
mov
test
add
jne
mov
popf
ror
dec
mov
stos
add
or
dec
iret
add
dec
xchg
xchg
int3
sbb
adc
pop
mov
and
test
fs
jb
mov
jae
int3
aas
fprem
jl
data16
mov
pop
mov
inc
sti
xchg
iret
stos
das
in
lock
jl
add
cmp
xor
cmpsb
sub
outsb
and
and
mov
jns
fwait
lock
lret
rcr
mov
int
loope
pop
push
push
and
addr16
enter
jnp
fcmovnu
jp
and
aaa
xchg
call
data16
xor
dec
daa
lret
inc
adc
xor
adc
les
stos
fucomip
dec
sahf
cli
fsubs
and
je
test
xorl
das
daa
ret
imul
push
clc
cmp
ret
int
adc
xor
arpl
push
stos
xor
cld
push
mov
sub
iret
or
or
jb
negl
fs
fs
in
lahf
repz
sub
shll
inc
mov
cmpsl
shr
aam
and
mov
aad
inc
fwait
jae
jge
jo
rolb
jo
pop
xorl
stos
pop
adcl
pop
nop
push
mov
jp
ljmp
and
and
ret
lds
iret
and
sbb
repz
addr16
les
xchg
stos
adc
inc
jae
pop
les
mov
mov
add
xchg
pop
jecxz
in
sub
adc
and
pop
and
leave
push
adc
jnp
mov
iret
pop
xlat
mov
or
push
lods
xlat
jp
jl
outsl
xor
cmc
sar
adc
inc
inc
out
sahf
jg
stos
ret
pop
mov
mov
sub
aam
lcall
push
sbb
and
icebp
jge
loopne
add
aaa
pop
xor
mov
cmp
and
aaa
out
lds
movsl
repz
scas
xor
mov
cmc
jge,pt
out
mov
push
xor
imul
xchg
sub
jg
out
and
xor
sbb
not
jl
add
insb
andb
add
mov
or
cli
jb
and
fwait
cmp
movsl
sahf
xor
add
out
adc
aas
jne,pn
insb
aaa
lret
push
mov
sarb
mov
outsb
dec
frstor
xchg
mov
xor
xor
std
xor
jb
movsl
leave
and
leave
cmpb
mov
ja
adc
push
lds
sub
cmp
daa
xor
dec
or
fiadds
fimuls
ljmp
movsl
and
out
ss
xchg
sahf
or
jno
pop
mov
shr
mov
out
movsl
push
bound
gs
cltd
mov
mov
in
shr
sbb
mov
jae
aad
or
mov
jnp
pop
adc
xchg
push
in
jno
shr
mov
shlb
divl
ljmp
ficoml
decb
mov
cmp
notb
add
jo
stos
bnd
jo
lods
sbb
ljmp
xchg
lret
mov
push
aad
fldenv
adc
std
insb
outsb
jb
outsl
mov
inc
test
pop
jae
inc
inc
sub
pop
idiv
cmpsl
scas
pop
sbb
cmp
or
aad
jo
jns
or
aaa
js
jg
je
add
rorl
push
aam
or
testl
out
loop
xor
nop
ja
jle
xor
loope
fstpl
aaa
enter
ret
push
sub
pop
scas
inc
add
push
add
pop
subb
jbe
and
push
stos
aad
xor
mov
xor
xor
hlt
lods
push
shrl
out
gs
xor
int3
cmp
jmp
mov
cwtl
mov
or
fwait
xor
sub
and
sbb
xorb
repz
xchg
pop
call
adc
mov
stc
and
sub
outsl
call
loop
loop
inc
and
lods
inc
sti
or
xchg
je
dec
leave
pop
jge
xchg
mov
sub
sbb
fldt
xlat
fnstcw
cwtl
push
popf
xor
imul
and
inc
xor
adc
mov
pop
sbb
xchg
movsl
lahf
ret
cwtl
dec
jle
mov
testb
movsb
stos
mov
sub
or
lock
adc
cs
and
mov
subb
jbe
mov
stos
add
add
arpl
or
jmp
outsl
sub
inc
push
in
sbb
cltd
scas
cwtl
sbbb
mov
out
push
mov
or
sub
lock
push
sub
cmp
ljmp
lods
out
jnp
mov
jne
mov
dec
xchg
add
popa
stos
jno
push
sbb
dec
pop
dec
aam
aas
adc
push
mov
ret
cwtl
testb
cld
out
sub
push
push
ret
lahf
push
pop
mov
ds
test
pop
adc
stc
pop
test
dec
fiaddl
mov
ret
lahf
or
sbb
arpl
sbb
fmull
inc
pop
mov
or
popf
jecxz
fimuls
std
cmp
int
pop
cmc
and
sub
adc
enter
cmc
movsl
pusha
daa
push
cmc
jne
lds
xorl
mov
sbb
pop
lret
and
ja
rcll
enter
aad
xor
enter
arpl
push
insb
mov
imul
cmp
xchg
lods
sub
xchg
jae
in
dec
mov
xchg
jle
adc
dec
inc
lcall
and
int3
jg
and
jb
mov
test
sub
imul
or
sahf
call
pop
jnp
and
xchg
insl
mov
sti
test
fisttpll
and
jnp
loop
cmp
ja
push
inc
cmp
mov
stos
jmp
andl
jnp
mov
sbb
add
xchg
ljmp
aas
dec
insl
jo
push
outsl
mov
mov
jno
ds
mov
jns
hlt
mov
lahf
je
mov
sarl
dec
push
inc
in
inc
cltd
loope
add
inc
notl
test
mov
das
sbb
sbb
adc
sub
fildl
adc
adc
les
outsl
sbb
jecxz
jg
in
adc
or
push
xor
mov
ds
xor
pop
xor
js
daa
dec
jle
cs
jle
sbb
lret
mov
mov
push
and
fucomip
cmc
mov
shr
cltd
mov
xor
pop
nop
pop
imul
push
inc
add
adc
push
cmc
pop
or
outsl
mov
mov
movb
enter
dec
mov
mov
mov
adc
cld
push
cmp
inc
mov
lahf
sub
lret
fwait
sub
xor
lea
mov
sub
test
cs
xchg
js
jmp
test
lods
mov
int3
lea
rcrl
mov
loope
mov
out
dec
lcall
imul
xchg
mov
in
fisubrl
or
mov
in
repnz
push
xchg
inc
testl
aas
inc
fstpl
push
dec
fsubl
xor
adc
int
das
pop
imul
lea
jmp
lea
test
lds
aas
push
sahf
inc
push
xchg
push
imul
cmp
idivb
lods
fisubrl
push
leave
mov
lock
inc
dec
xor
sub
adc
inc
mov
cli
mov
rorl
jne
mov
lret
leave
sub
pop
ljmp
inc
inc
leave
cld
lock
mov
test
lret
popa
cli
mov
je
mov
addr16
scas
test
int
stos
lret
sbb
or
and
les
sahf
sub
jecxz
test
lods
jl
je
xor
pusha
insl
inc
xchg
test
add
aad
leave
cli
mov
sub
mov
hlt
orb
out
testl
sub
push
addr16
cs
add
mov
sbb
dec
sub
inc
fdivrs
sub
inc
out
std
cmpsb
jnp
xor
shr
pop
push
mov
adc
fcmove
inc
cmp
out
or
sbb
mov
xchg
out
loop
jne
data16
and
cltd
int
test
imul
iret
pop
pop
cwtl
xchg
ss
popf
push
pop
sbb
push
pop
jae
cmpl
sub
mov
lret
lret
sbb
cmp
inc
data16
dec
scas
pop
jnp
mov
and
mov
addr16
mov
mov
hlt
mov
in
xchg
imul
cmp
sbb
loopne
daa
aaa
add
movsb
add
mov
push
in
jle
add
clc
mov
ficoms
cmp
mov
push
jl
ja
lahf
lds
cld
lcall
add
ds
pop
push
xor
insb
pop
addr16
cmp
sti
int3
pusha
dec
or
leave
xchg
movsb
push
push
test
push
mov
mov
add
sahf
outsl
lret
xchg
xchg
sub
cmp
inc
cmc
and
pop
cmc
fldenv
adc
xchg
push
push
testb
rcl
and
sahf
dec
test
jle
sub
cmpb
or
pop
push
pop
adc
or
or
into
leave
or
pop
gs
fisubs
mov
pop
add
rcl
push
push
mov
or
cs
sbb
inc
mov
leave
mov
sub
das
aas
nop
lret
mov
jae
leave
mov
mov
and
cld
cmc
loope
in
loop
mov
add
jb
in
mov
pop
imul
jg
mov
and
cmp
lds
popf
dec
sbb
inc
sub
or
test
pop
add
mov
inc
in
xlat
add
mov
sarb
lret
daa
pop
imull
clc
mov
test
inc
fdivl
jnp
lahf
mov
push
call
xchg
shll
xor
ret
jmp
xor
jmp
ss
sbb
push
rolb
or
in
lret
mov
mov
cmp
sarb
push
loop
stc
inc
pop
popf
jmp
clc
jns
mov
stos
mov
repz
out
lds
sbb
xor
fimull
pop
inc
sbb
ljmp
aad
fnstenv
push
push
and
mov
dec
and
inc
or
adc
sbbl
inc
inc
imul
add
dec
cwtl
aad
imul
push
mov
pusha
in
sbb
test
ror
les
and
out
dec
jno
push
pop
sti
lahf
jb
les
ret
lret
enter
inc
mov
lret
out
int
popa
adc
jbe
clc
out
mov
sti
cmp
movsb
push
push
ret
out
ljmp
xor
adc
imul
mov
clc
jne
mov
pusha
pop
pop
xor
pop
jp
xchg
mov
arpl
mov
xchg
pop
aam
test
mov
insb
js
sub
push
orl
lcall
mov
idivl
xchg
and
mov
aaa
lods
stos
jnp
dec
out
dec
out
push
enter
repz
jne
cmc
mov
dec
cmpsl
mov
xor
out
lock
jns,pt
mov
and
and
sub
add
dec
and
sahf
jecxz
lcall
mov
outsb
mov
lahf
insb
lods
or
jg
insl
xchg
gs
test
sbb
add
xchg
inc
shlb
cwtl
mov
stos
push
aas
hlt
clc
xchg
repz
scas
scas
and
cmp
lock
enter
test
xchg
pop
add
insl
repnz
loope
jno
inc
jb
push
push
sti
or
mov
inc
xchg
fdivrl
pop
out
push
jp
test
pusha
mov
cmpl
xor
dec
jle
mov
jae
mov
pop
xchg
insl
inc
mov
mov
cmp
or
inc
popf
stos
cmp
mov
shl
popf
aad
pop
loope
cmp
inc
push
lock
pop
mov
pop
test
sbb
test
popa
push
scas
pusha
or
adc
testl
mov
xchg
subb
inc
dec
cmpb
jae
xchg
dec
push
sbb
mov
call
jb
mov
lock
or
jns
push
mov
or
cmc
xor
jge
mov
or
mov
and
sbb
xchg
pop
lods
inc
lret
test
ja
pop
jg
xor
lret
xor
nop
insl
fs
imul
outsb
dec
lahf
je
or
jmp
push
iret
rcr
dec
push
and
pop
nop
ret
pop
adc
loope
je
add
aad
mov
sbb
pop
iret
xor
cmp
push
rol
in
dec
loopne
lret
or
fidivrs
sti
xchg
inc
mov
sti
repz
fwait
dec
jo
push
arpl
dec
and
nop
mov
cmp
ret
xor
xchg
push
fs
sbb
pop
inc
or
fsubp
mov
mov
fstl
mov
idivl
ret
icebp
add
mov
mov
xorb
inc
sahf
sub
insb
fimull
ret
iret
adc
imul
loope,pn
add
or
fwait
adc
insb
dec
add
mov
push
xor
mov
and
mov
inc
test
loop
rcrl
mov
icebp
fidivrl
repz
mov
cld
sahf
aad
loopne
pop
int3
inc
mov
insb
mov
call
cwtl
jp
mov
xchg
fstpt
or
leave
push
nop
sub
adc
push
adc
je
ret
jmp
mov
out
push
lods
imul
std
test
dec
addb
jo
aas
mov
or
pop
mov
andl
add
mov
push
shlb
dec
mov
sub
cwtl
push
sub
enter
into
cli
push
ret
mov
jnp
mov
shl
lods
xor
rcrl
loope
dec
xor
subl
ss
subl
fimull
repz
xor
push
pop
cld
xor
jecxz
out
and
push
jl
repz
mov
shrl
loop
mov
je
xchg
mov
sub
mov
jle
dec
or
andb
js
inc
shl
cmpsl
lcall
mov
loopne
bound
mov
mov
mov
xchg
adc
movsl
lret
add
scas
and
mov
sahf
test
enter
fpatan
dec
ret
das
hlt
xchg
sbb
clc
in
cwtl
daa
push
cld
lcall
outsb
mov
jecxz
dec
mov
pushf
mov
mov
add
adc
xor
push
jg
adc
push
cltd
ret
out
sbb
in
xchg
shlb
xchg
stos
jg
lods
arpl
jmp
adc
mov
pushf
in
and
outsb
das
jmp
cmpsl
stos
les
sbb
loop
mov
adc
pop
cmp
sbb
test
mov
imul
xor
push
mov
jbe
pop
and
in
and
test
leave
les
mov
stc
mov
in
add
xchg
and
pop
jbe
mov
into
and
rol
in
lods
cwtl
add
out
pop
xor
adc
out
stos
jecxz
mov
out
cmp
xor
xor
aaa
add
xchg
outsb
repnz
aad
adc
sbb
and
mov
lret
in
in
sahf
cld
lahf
les
cli
int3
in
xchg
roll
xchg
cwtl
lcall
inc
and
pop
xchg
mov
cli
xchg
lock
xor
fldenv
push
cmc
sub
out
jp
xor
aad
inc
leave
fwait
cmc
sub
ret
lods
jb
cltd
jbe
inc
xchg
mov
inc
out
pop
outsl
push
dec
dec
adc
int
aad
sti
test
xchg
aad
and
or
test
das
cmp
add
mov
and
ret
mov
pop
cmp
mov
int
adc
adc
jmp
inc
mov
iret
imul
lret
sti
outsl
outsb
sahf
ret
out
cmp
lahf
push
icebp
pop
push
daa
fscale
shrl
pushf
insb
ret
mov
aaa
pop
dec
sub
imul
clc
popf
imul
loop
sbb
adc
mov
arpl
pop
and
add
inc
inc
mov
sub
dec
or
dec
pop
int
rolb
stc
xchg
lods
add
xchg
or
xchg
sub
addb
sub
inc
xchg
sub
mov
push
mov
jmp
mov
add
dec
push
dec
pop
rcr
push
add
and
push
and
inc
cmpsb
outsb
aas
push
cmp
imul
mov
pushf
roll
imul
adc
mov
es
movsb
dec
out
sbb
test
mov
test
scas
andl
mov
jns
popa
push
pop
popa
outsl
add
xor
dec
inc
in
sahf
mov
adc
jmp
lret
rolb
loop
inc
insl
add
repnz
ds
pop
lfs
dec
jne
lea
subb
popf
push
xchg
mov
in
shr
cmp
daa
mov
lock
shrb
adc
inc
xlat
adc
aam
push
iret
popa
or
pop
stc
dec
mov
mov
sbb
ljmp
add
test
stc
jb
outsl
mov
mov
insb
sbb
mov
rcrl
cmp
jnp
jle
dec
or
les
into
mov
inc
xor
push
es
ret
jnp
mov
adc
xchg
jle
icebp
or
mov
stos
cmp
push
jmp
pop
rorb
sub
push
enter
stc
andl
aam
mov
inc
ljmp
jb
lcall
arpl
cmc
or
ds
fsubrl
scas
repz
sub
shlb
int3
and
sbb
std
subl
movsl
cmpxchg
gs
fisubrl
sub
scas
sub
insl
stos
cld
push
es
jmp
aas
push
pop
repz
popf
fsts
mov
je
stos
mov
pusha
jb
sub
int3
pop
cmp
outsl
jmp
imul
and
mov
ret
insb
inc
or
and
pop
loope
imul
dec
pop
lcall
lahf
sub
ljmp
popa
jb
leave
ljmp
push
jne
xchg
in
and
dec
cld
mov
push
pusha
int3
mov
or
mov
mov
std
mov
push
ret
cmpsb
sub
fs
pop
in
xchg
test
in
das
xor
in
lret
push
lret
inc
pop
xchg
add
dec
gs
add
jb
imul
rorl
mov
aaa
adc
xor
push
cld
pop
cmp
outsb
movsl
xchg
int
push
scas
pop
jns
cmp
stc
mov
mov
les
scas
js
xor
jbe
hlt
loop
fadds
push
xor
insb
inc
sbb
adc
mov
fs
xor
push
fwait
ret
gs
fsts
movsl
dec
sar
sahf
insb
fnstsw
xchg
stc
xor
or
adc
or
jge
mov
lds
scas
clc
push
sahf
cmp
or
jb
xor
cmp
mov
xlat
jmp
out
dec
lods
cmp
push
xor
cmpsb
lret
sbb
enter
fwait
add
xchg
mov
add
add
xchg
movsb
or
dec
cli
and
lret
cli
xor
adc
adc
pop
cmp
adc
shll
lds
xchg
adc
iret
pop
push
xchg
ret
cmpl
aad
popf
pusha
xorb
imul
mov
test
out
cwtl
into
pop
aas
push
pop
fwait
adc
aas
add
dec
cmc
scas
in
jmp
mov
repz
fidivrs
xor
imul
daa
je
sahf
fidivs
test
sbb
and
out
mov
and
cmc
outsl
or
inc
mov
fisubrs
dec
cs
pop
cli
mov
in
mov
inc
dec
cwtl
xor
jo
imull
inc
cli
mov
cmpsl
jmp
add
imul
std
movsl
movsb
push
mov
inc
xor
ret
push
or
jns
out
sahf
test
std
mov
push
and
rclb
ss
popa
sub
mov
stos
in
mov
ror
pop
push
in
fsts
jmp
hlt
jmp
in
mov
aas
sub
dec
mov
out
pop
push
and
adcb
cs
mov
repnz
xchg
popa
movsl
dec
daa
push
pop
movsb
dec
lcall
cwtl
add
xlat
mov
push
test
adc
mov
jge
lds
push
add
aad
clc
xor
shll
clc
pop
imul
xchg
add
stos
lods
jge
in
es
hlt
pop
adc
jo
xlat
inc
mov
sbbb
das
mov
sbb
popf
xchg
xchg
mov
sahf
movhps
outsl
pop
movsl
push
push
pushf
jecxz
js
add
push
sub
mov
xchg
mov
scas
mov
pushf
mov
xchg
sbb
adc
rcrb
imul
mov
roll
xchg
cld
gs
enter
pop
aaa
stc
aas
add
mov
push
mov
jb
fs
sub
lea
xchg
mov
sahf
dec
mov
movsb
div
pop
fadds
push
cmpsl
and
push
les
jl
jle
and
inc
in
and
bound
mov
daa
hlt
bound
int3
mov
xor
sbb
mov
sbb
fistpl
sbb
mov
cmp
inc
mov
aaa
and
xor
lahf
sahf
fsubl
sbb
xor
loope
add
cmc
inc
mov
fisubl
mov
loop
xchg
fldt
push
inc
sub
or
gs
int3
jb
xchg
sub
xchg
xchg
jnp
add
leave
mov
inc
xchg
xchg
es
shll
jle
adc
subl
test
arpl
lods
ret
mov
jae
and
mov
dec
loope
cli
scas
jp
push
sub
xchg
iret
cmpb
sub
cmpsb
in
inc
dec
ljmp
lcall
mov
ljmp
add
mov
cmp
pop
inc
mov
add
add
pop
sbb
hlt
mov
mov
cmp
mov
pusha
xor
flds
jno
lods
dec
inc
cmp
cmp
mov
push
xchg
sbb
ret
lret
int3
jbe
mull
clc
mov
xor
jle
clc
jns
and
imul
ss
mov
mov
mov
lods
add
sub
into
cli
imul
and
dec
xor
testb
mov
shll
ds
cmp
mov
pop
dec
hlt
cmp
por
cld
and
lock
sbb
jge
call
in
fmul
sub
test
pop
push
mov
mov
jno
pushf
in
pop
or
xor
jmp
or
adc
mov
fs
jecxz
jle
or
call
popf
sbb
pop
add
add
hlt
test
and
adc
xchg
jle
add
xor
imul
mov
inc
sarb
xchg
icebp
test
add
in
xchg
push
cmp
lret
imul
cli
sbb
adc
cmpl
mov
and
inc
std
xor
jb
pop
scas
sbb
jle
adc
loopne
aad
rcl
cmpsb
cmp
insb
pop
cli
in
in
imul
cli
mov
push
lods
pop
imul
mov
dec
pop
adc
or
or
lds
and
std
rcrl
cmp
mov
push
xchg
jb
add
mov
pop
jmp
fcom
imul
add
push
ss
jecxz
mov
cmp
int3
mov
shrb
scas
repnz
ds
lods
pop
test
inc
jle
das
cmpsl
call
shlb
popa
cmp
mov
ljmp
jbe
fisubrl
pop
sbb
mov
mov
cmc
cmp
push
in
add
xchg
movsb
popf
jmp
mov
xchg
cmp
push
sarl
and
mov
push
xlat
paddusb
test
mulb
sti
ljmp
sbb
flds
ds
or
fldenv
clc
stc
pop
lods
mov
xchg
pop
pop
mov
jnp
loop
popf
int3
adc
aam
sar
outsb
and
mov
pop
stc
mov
test
and
mov
xor
push
cmp
dec
cmp
mov
ss
fisubs
sarb
jbe
insl
fucom
xchg
clc
imul
test
push
les
pop
jecxz
pushf
repnz
loopne
popf
add
or
arpl
ds
cwtl
mov
hlt
outsl
inc
pop
cltd
movsl
mov
xor
dec
xor
inc
mov
push
push
or
fidivs
das
jecxz
movsl
pushf
aas
push
mov
ret
inc
stos
sbb
clc
jl
jg
test
outsb
jp
inc
into
movsl
sub
cmp
out
push
xchg
add
cmp
fistps
shlb
lea
mov
std
ljmp
sti
sbb
cli
cmc
sbbb
nop
xchg
mov
fwait
push
movsl
or
rol
or
es
lret
loope
inc
movb
or
cmpsb
dec
lret
out
cltd
cld
das
lcall
sbb
in
push
call
insb
inc
and
cld
adc
pusha
imull
mov
not
lds
dec
orb
ljmp
lock
mov
jmp
subl
lret
dec
fiaddl
and
into
fdivl
xor
or
mov
insl
jle
fnstsw
xchg
mov
mov
popf
adc
cmp
fimuls
cwtl
cmpsb
daa
sbb
push
mov
or
subb
inc
or
mov
stos
out
sahf
mov
insl
sarl
xchg
arpl
mov
fisttps
outsb
mov
test
pop
jae
ja
sub
jo
jmp
push
xor
fisttpll
pushf
scas
addr16
add
mov
mov
or
mov
jo
rcl
mov
aam
xor
cli
pop
mov
pop
out
cli
pop
mov
addr16
cmp
fmulp
pusha
les
jge
sbb
outsl
inc
jmp
clc
rclb
in
dec
sub
jb
ret
pop
mov
push
loope
out
pop
xchg
mov
xorl
mov
outsl
adc
les
clc
call
ljmp
mov
outsl
dec
pop
mov
sub
mov
xorl
and
es
int3
cld
pop
ss
dec
mov
fsub
sbb
out
aad
sahf
lea
stc
mov
pop
ficoml
stos
lock
scas
xlat
loopne
aas
mov
push
or
mov
adc
lahf
adc
out
or
cmpsb
pop
ret
mov
dec
imul
loopne
scas
pop
jae
notl
lods
faddl
out
inc
test
icebp
jmp
adc
es
out
mov
cmc
xchg
cmp
out
mov
pop
inc
stos
sbbl
ljmp
dec
or
dec
gs
mov
negb
mov
mov
add
les
add
cmpsl
jbe
mov
mov
rol
cmp
inc
movsb
xor
cmpl
pop
or
das
and
scas
mov
popf
int3
dec
aam
fs
push
add
imul
pop
insb
loope
xchg
mov
pop
push
mov
roll
push
mov
repz
outsl
add
xor
lock
test
scas
aad
or
adc
pop
test
out
int3
lcall
test
iret
clc
cmp
adc
out
jp
mov
jno
data16
mov
xor
jp
or
cmc
jecxz
adc
cltd
adc
fdivr
aas
rorl
adc
or
xchg
dec
and
xor
es
mov
and
add
cmpsb
jmp
es
popf
adc
jle
rorb
pop
lods
ss
fstps
mov
aaa
adc
mov
cmc
test
push
test
jno
pushf
pop
rorl
jl,pn
cmpsl
jmp
push
jl
add
mov
out
mov
sbb
rclb
outsb
dec
push
mov
mov
mov
push
lea
ljmp
push
cmp
rolb
xor
hlt
test
int
dec
loope
loope
loope
fcomip
xchg
jno
sub
clc
clc
sub
inc
sub
jp
out
pop
inc
loopne
mov
repnz
insb
mov
sbb
lea
shrl
incl
jbe
inc
push
test
scas
frstor
icebp
clc
mov
sbb
daa
lea
jmp
sub
xor
jns
and
or
lcall
or
repnz
test
gs
sbb
shll
addr16
or
adc
out
sbb
ja
pop
dec
leave
fs
das
jge
jnp
adc
pop
leave
out
pop
movsb
inc
push
cmp
inc
mov
push
inc
mov
in
popf
lahf
inc
or
das
mov
es
mov
add
pop
mull
fdivrl
adc
mov
jns
mov
es
testl
push
gs
call
adc
das
lcall
pop
cwtl
jp
sahf
add
cmp
mov
test
inc
xchg
cli
lret
int3
or
sbbb
and
in
ret
sbb
and
push
jmp
adc
push
jae
mov
stos
mov
sar
leave
ud0
cmpsl
fcompl
gs
sbb
into
mov
dec
out
sub
fldl
jne
xchg
mov
mov
mov
and
fistps
test
hlt
cmpsl
sub
popf
add
das
rorl
decl
cli
test
leave
mov
mov
rol
rcll
jecxz
mov
jae
out
mov
call
xchg
jns
lahf
hlt
cmc
jmp
fdiv
inc
inc
clc
mov
xchg
pusha
xchg
data16
gs
int3
cli
push
fildll
lock
fbstp
cmp
sub
sbb
add
cmp
icebp
xor
cltd
inc
cmpsl
call
xchg
mov
dec
mov
xchg
not
push
stos
push
lods
pop
or
movsl
inc
lret
les
jp
or
enter
addr16
mov
mov
sar
aam
jnp
dec
or
mov
jo
push
xor
push
mov
pop
xor
pop
inc
jb
cld
fisttps
inc
push
pop
xor
in
repnz
lret
nop
push
lds
push
nop
movlhps
aad
and
adc
clc
orl
mov
cmc
cmpsb
inc
fcoms
ret
mov
adc
push
rorl
cmpxchg
aad
cli
fldl
stos
gs
jns
add
cmp
xor
pusha
in
dec
push
sahf
or
add
or
mov
das
sbb
inc
xlat
rol
cmp
dec
cmp
dec
frstor
iret
inc
loop
sub
or
fnstcw
sbb
jne
jl
leave
ret
adc
jae
mov
shlb
add
nop
out
repz
mov
jb
and
pop
mov
adc
mov
mov
mov
lea
rorl
sar
icebp
hlt
sbb
scas
jge
es
mov
mov
loopne
or
daa
ror
stos
push
cwtl
les
loope,pn
jne
js
jmp
stos
bound
test
xchg
or
rorb
es
push
push
mov
xor
sbb
pop
outsl
lea
fcmovnb
push
clc
gs
mov
inc
mov
ds
jno
xchg
fcmovne
add
fdivs
mov
jl
jae
and
sub
mov
jmp
repz
and
cmc
dec
mov
jp
popa
scas
and
mov
xchg
pop
sbb
sbb
pop
fildl
stc
outsl
cmpsl
test
repnz
cltd
bound
or
and
and
dec
sarb
jle
pop
ljmp
mov
xchg
jnp
fidivrs
mov
mov
in
nop
out
in
inc
push
mov
and
insl
jo
repnz
push
mov
sub
or
lds
lcall
les
lret
jo
add
mov
lds
or
popa
stc
add
cwtl
lret
nop
imul
loope
lock
scas
pop
mov
mov
insb
call
icebp
cmp
mov
push
pop
adc
pop
test
or
sahf
mov
and
mov
fnstsw
mov
add
nop
hlt
fisttpll
xchg
sub
cld
push
jle
pop
pop
in
dec
add
in
add
fcoms
repz
push
cwtl
add
inc
ret
fsubrs
pop
jp
pop
mov
cli
add
adc
mov
jmp
fidivl
sti
jmp
fadds
pop
ficoml
push
or
loopne
lock
pop
dec
in
lods
mov
adc
jnp
arpl
popa
pusha
cwtl
adc
mov
cmp
cmpb
call
popa
cwtl
in
dec
movsb
aam
or
inc
orl
ss
add
jmp
dec
fwait
cmp
int
push
dec
xchg
adc
lds
mov
xchg
mov
jmp
test
xchg
mov
sub
out
shll
ljmp
or
test
jns
and
mov
dec
sbb
and
cmovno
es
popa
out
sar
shlb
ds
test
insl
sahf
movb
lds
loopne
fs
nop
enter
leave
rcll
rorl
pop
jg
nop
std
cli
fisttps
std
mov
cwtl
or
sbb
rorl
mov
int3
and
cmp
jmp
sbb
sub
fstps
xchg
add
dec
in
pop
inc
negl
and
jae
xor
inc
inc
inc
add
sub
sub
outsl
addl
nop
insb
fmuls
or
in
bound
mov
mov
xchg
xchg
mov
cli
aam
in
sub
sbb
fdivp
cmp
cmp
jae
dec
cmpb
lock
jns
jl
jecxz
adc
fsubp
ljmp
jnp
mov
push
xchg
mov
and
pop
insl
out
insb
sti
sbb
fmull
call
clc
cltd
subb
lahf
loope
dec
gs
pop
xor
mov
dec
xor
aaa
fs
xor
jge
js
pop
in
daa
push
std
call
fwait
xor
dec
xchg
repnz
in
or
fs
mov
mov
mov
mov
adc
push
ret
cmp
pop
jmp
mov
lods
adcl
addb
cmp
inc
lea
in
sub
dec
stos
pop
cltd
or
arpl
movsb
jl
adc
andb
xchg
mov
pop
add
xchg
insb
dec
mov
or
and
or
cmpsb
sub
pop
pop
mov
fmull
ficoml
push
sbbb
sbb
call
js
aad
add
xchg
out
bswap
mov
inc
jbe
sahf
push
in
lods
std
jle
or
jecxz
or
int
mov
inc
cmp
sub
xor
movsl
fwait
aas
pop
mov
or
xchg
scas
arpl
pop
sub
rcrb
push
popa
xchg
jge
push
lea
bound
mov
lahf
push
test
je
sbb
lahf
xchg
pop
je
jo
in
pop
es
mov
js
dec
adc
jl
test
mov
xor
xchg
push
push
out
cmp
mov
pop
or
movb
rolb
add
or
push
pop
cmpsb
add
lods
mov
cmp
jnp
inc
push
repnz
lods
flds
mov
mov
fs
in
mov
add
lcall
push
add
jne
jnp
ss
or
fstpt
int3
mov
sbb
pusha
xchg
ja
sbb
xlat
int
out
sub
or
xchg
mov
fs
cli
movsl
icebp
outsl
mov
mov
enter
push
aad
js
in
xchg
fsubrp
adc
vunpckhps
addr16
mov
push
and
cmp
rcrl
mov
adc
jo
sbb
xchg
ss
into
into
ds
sbb
call
push
jno
sub
out
and
push
ss
out
sbb
inc
dec
rcrb
cs
sub
sbb
mov
out
mov
cmp
das
inc
incl
sbb
add
xor
pop
mov
leave
and
stos
pop
sbb
pop
mov
cmp
dec
adcl
push
fnstenv
roll
testb
sbb
inc
add
mov
sbb
push
out
sbb
pop
sub
pusha
inc
data16
ror
mov
fld
mov
cld
pop
cs
xchg
push
cs
ljmp
shll
sbb
xchg
sbb
test
fimull
adc
push
int
mov
out
xor
dec
cmp
mov
repnz
mov
mov
or
dec
pop
mov
jecxz
call
mov
test
je
fucomi
sbb
cmp
negb
rcrb
mov
clc
cs
mov
movsb
jbe
aad
cmp
insb
in
mov
cmp
fisttpll
ret
mov
jge
xchg
out
cs
arpl
mov
jno
pop
push
pop
and
movsl
mov
addb
orl
lcall
fdivrp
xchg
aaa
aas
xchg
ljmp
add
insl
mov
adc
out
cmpsb
or
mov
int
xchg
push
jecxz
fldcw
pop
shlb
or
ljmp
xor
imul
cwtl
mov
jo
popf
cmp
iret
in
jb
out
jns
mov
mov
or
adc
ja
stos
adc
jp
cltd
sub
jmp
rcll
xor
pop
sahf
cld
js
xchg
inc
pop
sub
jge
mov
mov
pop
aaa
inc
pop
insb
stos
in
jecxz,pt
pop
ss
cmp
rclb
xor
int
xchg
mov
scas
or
pushf
xchg
mov
sahf
addr16
nop
mov
dec
pop
dec
lock
jns
lods
mov
aas
sub
fnsave
jle
adc
cmpsb
std
pop
pop
scas
pop
rol
dec
data16
add
lea
and
insb
cmp
push
pushf
xor
mov
loope
lods
mov
push
xor
data16
ret
ja
inc
lds
sti
gs
or
sub
hlt
add
mov
adc
sar
iret
and
sub
push
push
add
adc
pop
popf
sti
in
mov
xchg
ja
push
and
gs
or
xchg
jb
fldcw
movsl
xchg
addr16
push
cmpsl
mov
mov
movl
outsb
nop
add
push
cld
rcrb
pushf
ret
push
shrl
mov
lret
inc
sub
mov
dec
daa
mov
inc
xchg
lea
outsb
mov
mov
pmaddwd
clc
sbb
jle
adc
insb
pop
jae
test
jbe
lock
sbb
adc
mov
inc
adc
inc
stos
inc
mov
cmp
adc
lock
mov
mov
js
cmp
inc
fcmovnbe
ljmp
xor
push
cmp
mov
push
stos
scas
push
or
gs
movsl
jge
movsb
fidivrl
pop
outsl
clc
cmp
jle
fwait
fwait
outsl
leave
mov
jae
mov
dec
test
jg
pop
loop
add
sbb
add
imul
or
mov
popf
pop
cmp
mov
pop
imul
and
imull
mov
mov
mov
pop
into
or
lret
inc
es
sarb
inc
mov
xchg
shlb
xchg
mov
out
ja
and
jge
imull
xchg
cli
fcom
mov
and
cli
mov
sbb
popa
movl
insl
ret
les
push
incl
in
xor
in
xor
pop
js
aam
mov
es
add
mov
ja
adc
cltd
dec
jl
xchg
and
lods
sub
adc
adc
pop
addr16
stc
xchg
stc
icebp
in
clc
jge
sbb
xchg
pop
ja
mov
fs
in
inc
or
sahf
call
mov
dec
dec
ret
xor
or
adc
cltd
insl
dec
pop
adc
adc
cli
xor
xchg
inc
cmp
sbb
mov
scas
xchg
jp
mov
fldl
push
daa
dec
gs
fwait
movsl
mov
sbb
cmp
ljmp
pop
mul
je
shll
add
lcall
jae
pop
in
lea
lret
pop
add
cs
push
or
fdivl
push
sbb
mov
cs
push
insl
cmp
mov
cmp
repz
mov
aam
in
leave
jne
mov
jle
ja
jo
loopne
xor
or
popa
sub
and
neg
and
xchg
pop
cmp
adc
add
negl
xchg
push
mov
sbb
aaa
idiv
cmp
cmp
das
sbb
pop
push
add
into
loope
sarb
pop
lahf
push
xchg
pop
cmp
push
lock
jp
mov
enter
je
loopne
mov
pop
fnstenv
add
dec
sub
insl
cmp
in
scas
ljmp
repz
and
adc
faddp
add
popa
xchg
aam
cwtl
pop
mov
push
pop
pavgb
ss
test
scas
fwait
sbb
mov
jle
mov
ss
jbe
pop
pop
das
pusha
fs
mov
push
mov
mov
sarl
xchg
add
cmp
cmp
int3
inc
test
scas
test
lock
test
orl
cld
pushf
mov
loope
lahf
pop
mov
add
xchg
xlat
or
jae
or
cmpb
push
jnp
aam
mov
ficompl
pop
cmp
int3
mov
pop
scas
arpl
mov
rcrl
xchg
sbb
add
push
sahf
loopne
adc
sbb
movsb
inc
or
imul
cs
add
mov
xor
cmp
out
pop
lret
sbb
jae
out
aam
mov
in
inc
lock
roll
nop
inc
incb
mov
inc
cmpsb
pextrw
lods
leave
mov
sbb
iret
xor
enter
call
mov
jmp
push
jo
cmpsb
lds
mov
jns
leave
lods
movsb
xlat
and
jo
cmpsb
jb
cs
xchg
adc
or
roll
addl
jp
pop
mov
dec
mov
inc
lods
or
js
sub
imul
les
or
pusha
mov
mov
test
and
ljmp
int
ret
inc
dec
in
mov
aaa
mov
push
ja
dec
push
aam
jb
jno
dec
adc
dec
mov
ljmp
cmp
insl
or
mov
outsl
iret
pusha
xchg
subb
xor
adc
and
and
aaa
mov
aad
and
push
or
bound
adc
xchg
push
add
sbb
imul
repnz
ret
or
fists
pop
and
adc
pop
shrb
push
mov
cmp
jmp
mov
jmp
mov
cmp
sahf
outsb
pop
dec
sbb
cmp
mov
push
addr16
ret
inc
lahf
xor
insb
push
cmp
inc
faddl
mov
sahf
cs
pop
aad
fadds
lock
in
mov
xchg
lds
sbb
ret
pop
pop
sbb
addr16
js
mov
gs
push
inc
scas
in
sbb
jl
mov
ja
int
in
dec
stos
and
ficomps
lcall
in
and
mov
insl
adc
or
loope
fbld
cs
cmp
fisubrl
mov
pop
test
push
inc
inc
lcall
mov
pop
xchg
or
int
mov
inc
jge
mov
pop
test
sbb
mov
push
aas
xor
fiadds
bound
adc
cld
push
mov
xor
stos
fcmovu
arpl
sub
in
aam
or
add
stc
out
mov
inc
add
dec
push
gs
negl
insl
mov
jnp
adcb
and
mov
xor
mov
inc
aad
sub
mov
je
mov
or
stc
outsl
loopne
out
or
cs
int
or
out
or
les
int3
sbb
xlat
rdtsc
outsb
mov
negb
xchg
mov
mov
pop
outsl
test
jns
test
test
xor
insb
xchg
mov
icebp
jmp
js
jnp
inc
cmp
adc
hlt
test
aaa
mov
push
mov
mov
shll
dec
jmp
mov
or
adc
mov
mov
adc
push
pop
add
inc
cmp
jb
xor
xor
push
or
push
xor
xor
sar
inc
inc
mov
imul
xor
imul
or
mov
push
icebp
fs
or
add
jns
or
mov
dec
pop
xor
xor
inc
mulb
or
and
jnp
ret
into
xchg
pop
mov
mov
jb
mov
xor
jmp
jmp
xchg
sbb
enter
push
aad
inc
pop
mov
dec
outsl
jmp
lret
jg
sbb
xor
rol
pop
addr16
mov
adc
jmp
test
cmc
cmpsl
mov
insb
push
pop
call
push
into
push
xor
test
das
pusha
inc
sahf
addr16
push
mov
xchg
cs
xchg
xchg
sub
inc
les
dec
cmpsb
xlat
pop
test
jg
popa
push
jno
out
push
mov
fwait
xchg
es
vmovd
mov
mov
lods
jp
inc
outsb
out
arpl
or
sub
lock
test
cwtl
jg
loopne
out
cmp
adc
sti
sbb
or
and
mov
shll
icebp
icebp
and
pop
cmp
sub
movsb
pop
xchg
mov
or
sbb
mov
pop
aad
ret
into
xor
popa
and
sti
fs
mov
jle
jg
insl
jne
jbe
mov
xor
insb
outsl
in
adc
stc
jmp
jle
xchg
insb
lahf
cmp
push
mov
mov
pop
lea
or
mov
test
pop
scas
mov
push
or
movsl
sbb
push
jl
data16
adc
js
lock
inc
insb
push
cmp
cmpb
xor
bound
push
jae
cmp
mov
ret
ret
mov
stos
movsb
cmp
fsincos
or
mov
pop
sbb
jmp
cmp
mov
fwait
sbb
int
out
mov
aad
stos
add
xor
cmp
stos
in
jmp
jne
add
jne
call
leave
sub
out
xchg
enter
jp
and
jnp
push
cmp
lods
xchg
dec
jmp
cli
mov
inc
fisttpll
std
test
jl
push
sub
jle
std
enter
jle
cmp
push
push
out
div
aam
and
or
cmpsl
mov
push
les
jbe
cmpsl
enter
mov
pop
mov
pop
stos
stc
adc
jb
pop
int3
ffreep
sub
mov
mov
je
xor
ja
jo
dec
psubd
cmpsl
lret
and
jge
or
jbe
mov
pop
add
lock
into
sub
lods
xor
mov
or
shrb
cmp
xchg
cmc
outsb
int3
aaa
xchg
sbb
add
movsb
jg
add
jo
xlat
int
out
stos
stc
push
inc
aaa
rcl
popa
das
dec
rolb
lods
xchg
push
test
int
outsl
out
dec
das
out
and
lret
icebp
xor
dec
xor
pusha
jae
inc
xor
push
ret
adc
push
jmp
notb
fsubp
sub
sahf
push
jne
push
inc
lahf
stos
out
arpl
or
dec
mov
pop
addr16
cmp
dec
cmp
push
inc
dec
andl
jmp
ja
in
sub
push
test
xchg
minps
mov
and
arpl
loop
inc
or
repnz
cmpb
in
inc
sbb
out
push
icebp
dec
pop
vmread
cld
pop
xor
insb
call
movb
call
xchg
outsl
sub
out
js
jo
lea
inc
fimuls
clc
push
out
xchg
sbb
add
mov
add
out
sub
pop
std
adc
ss
ret
inc
xchg
pusha
xchg
cmp
cmp
shlb
mov
pop
or
sub
dec
shr
fisubl
nop
in
scas
out
mov
xlat
loopne
mov
inc
hlt
outsl
lock
call
sbb
mov
mov
cmpsl
lahf
mov
call
jae
mov
inc
arpl
movsb
cmp
dec
test
popf
out
adc
cltd
call
xchg
push
pop
xchg
mov
or
outsl
je
inc
sbb
xor
jl
and
jmp
test
xlat
dec
int3
ret
out
mov
adc
ss
inc
pop
sbb
mov
test
sub
adc
sti
subb
push
cwtl
sbb
inc
inc
add
enter
add
fcomps
mov
inc
je
daa
adc
out
add
stos
xchg
push
fs
mov
movsb
pusha
fstl
cmp
call
in
call
scas
jb
inc
push
mov
mov
xor
or
add
jb
push
ljmp
cmpsb
icebp
push
mov
mov
jae
mov
mov
sbb
popf
inc
xlat
insl
jmp
xor
bound
cmp
mov
cmp
cmp
lods
gs
int
cmpsb
mov
mov
jns
push
movsb
and
jecxz
dec
mov
push
dec
cmpsl
or
adc
xchg
dec
xor
out
xor
xchg
test
insb
sub
and
stos
xchg
andl
sbb
gs
push
jecxz
das
push
xchg
or
sbb
loop
sarb
imul
jbe
call
and
or
inc
rcll
mov
sar
sbb
mov
xchg
mov
jge
cmpsb
and
or
mov
test
push
sbb
mov
fistpll
aaa
ds
mov
fimull
inc
shl
mov
rorl
gs
cmp
fmulp
push
ljmp
jl
mov
push
nop
inc
inc
and
shl
ret
jg
sub
repnz
mov
mov
lret
mov
jne
movsb
sub
dec
imul
and
sbb
testb
in
dec
mov
xchg
fwait
popa
lods
adc
out
pushl
add
dec
cld
xor
mov
adcl
ret
jp
mov
testb
insl
xchg
leave
int
stos
adc
data16
js
stos
lcall
jae
lds
cltd
xor
je
xchg
pop
or
imul
aaa
push
bound
pop
pop
je
push
imul
jb
lcall
xchg
mov
jl
mov
inc
cli
or
ret
aas
push
aas
sti
pushf
scas
dec
les
mov
fwait
adc
jg
xchg
mov
out
jg
or
mov
jl
cmpsl
lock
lock
je
push
ljmp
pop
jae
dec
push
cli
inc
cmp
shrl
scas
dec
pop
jbe
stos
jecxz
ret
jecxz
sub
sbb
das
mov
mov
leave
stos
movsb
outsb
stos
aas
inc
jecxz
lcall
aam
lret
enter
cmc
dec
nop
fs
enter
sbb
jb
nop
push
test
ljmp
repnz
inc
lret
das
mov
push
roll
mov
cwtl
adc
inc
pop
mov
iret
or
xchg
pop
data16
nop
lods
cwtl
lret
sbbb
les
jg
rcrb
xchg
sbb
or
cld
pushf
into
xorb
jge
imull
rcll
pop
stos
xchg
out
popa
js
xchg
ss
sbb
push
daa
add
sub
enter
inc
push
add
sbb
movsl
andb
fsub
dec
popa
mov
in
lret
hlt
loop
push
test
hlt
and
jmp
rclb
andl
test
rcr
mov
cmc
scas
and
into
jbe
xorl
daa
or
lods
lcall
movsl
push
xlat
add
repnz
in
out
lods
adc
loop
add
int3
pusha
pushf
xor
and
sub
arpl
repz
dec
mov
pop
jno
test
mov
sbb
mov
push
sarl
rclb
lcall
sahf
push
pusha
dec
pop
loope
xchg
icebp
sahf
or
lods
repz
cmp
arpl
lahf
cmp
jnp
add
push
in
inc
dec
mov
push
jne
loop
je
adc
dec
mov
call
jmp
mov
adc
jne
push
sub
cltd
aaa
sub
and
ljmp
movsb
add
aam
pop
inc
and
test
push
fwait
inc
cmc
mov
push
adc
and
enter
cmp
icebp
push
add
stos
mov
out
inc
mov
ss
or
ret
fstpl
mov
cmp
pop
mov
jns
dec
cmp
fstpt
popf
xchg
dec
inc
cmpsb
inc
sbb
orb
mov
sbb
pop
jo
xor
jo
inc
xchg
push
or
xor
cmp
out
clc
nop
fstpt
dec
into
or
push
mov
jecxz
inc
out
push
mov
clc
shlb
in
push
jle
rcrb
outsl
cld
pop
inc
bound
and
hlt
sub
sub
and
adc
sbb
repz
push
and
inc
test
or
jecxz
xor
sbb
push
lea
or
iret
or
das
add
mov
xor
dec
test
mov
push
mov
sahf
push
fwait
push
xor
jl
xor
int3
xchg
addr16
in
scas
sbb
jbe
xchg
jo
jne
adc
mov
cmpsl
sbb
sahf
cmp
mov
pop
mov
inc
mov
fs
mov
fisubl
adc
cld
sub
push
sti
mov
add
mov
icebp
add
push
and
mov
mov
insl
shl
out
mov
jge
cs
insl
repnz
popa
jge
insb
mov
outsb
out
in
cmc
xlat
xchg
into
push
js
lods
mov
jbe
std
cmp
adc
inc
ret
push
loopne
sbb
push
pop
je,pt
mov
cmp
sbb
cmp
cld
push
xorb
int
push
dec
das
xor
pop
daa
mov
jb
jo
xchg
flds
in
mull
push
out
adc
inc
outsl
in
push
jp
xor
fnsave
lods
jg
test
jne
push
je
test
les
fsubrl
mov
or
mov
cmp
arpl
aad
mov
cmp
pop
mov
sbb
bound
jno
test
push
or
aam
push
jne
mov
dec
xor
or
in
push
psrlq
adc
adc
fldt
xchg
mov
aam
inc
xlat
mov
mov
mov
xor
sub
inc
jmp
mov
add
jnp
and
inc
cmp
adc
addr16
xchg
mov
mov
dec
int
dec
test
mov
clc
xchg
push
loop
xor
push
bound
repnz
mov
cltd
pop
inc
popa
add
cs
jle
es
fisttpll
xchg
and
or
std
xchg
dec
call
sahf
mov
repz
xor
insb
pop
jne
in
and
ljmp
or
stos
pop
xor
shll
dec
bound
xor
cmp
xor
ds
fisubl
xchg
add
push
cmpsb
scas
into
pushw
add
jmp
pop
das
sub
stos
lret
imul
xlat
push
xor
add
out
sub
push
in
jne
and
fildll
xchg
mov
loope
fwait
cli
push
les
dec
push
push
sub
cmc
imul
mov
push
rcll
mov
out
jns
or
icebp
les
clc
jp
jno
repnz
jnp
xchg
jae
aad
mov
cmp
call
stos
mov
pusha
loope
push
pop
or
sbbb
xchg
loope
cmp
movsl
aad
xor
mov
adc
pop
rcrb
imul
cmp
sub
and
lahf
filds
jne
jl
lods
or
repz
xchg
js
test
sbbb
loop
scas
add
push
mov
xchg
dec
lcall
mov
nop
mov
outsb
repz
mov
push
lea
sbb
lds
nop
dec
xchg
xchg
xchg
daa
or
jno
leave
out
loopne
dec
xchg
xlat
mov
push
stos
push
loop
inc
mov
mov
push
jle
ret
leave
sbb
push
mov
subb
sbb
jbe
nop
pop
pop
les
sub
xchg
pop
jg
dec
test
and
sbb
mov
or
sbb
xchg
xchg
lods
lret
xchg
xor
inc
xor
sbb
add
scas
sub
cwtl
inc
test
adc
inc
push
in
incl
adc
dec
ficoml
outsb
mov
jns
jl
mov
nop
pushf
dec
cmp
mov
ret
push
mov
es
jbe
pslld
adc
out
pop
fstps
sbb
push
pop
test
mov
sub
pusha
mov
cmp
stos
ljmp
adc
xchg
sbb
sub
fidivrs
jl
mov
shrb
int
inc
and
scas
data16
sbb
xor
mov
pop
cmpsb
inc
ljmp
gs
jl
sbb
jnp
hlt
pop
fistps
xchg
loope
push
push
lahf
sub
movsl
inc
js
jp
cmp
in
sub
lahf
subl
icebp
loopne
add
sbb
ficoml
data16
outsb
adc
and
aaa
inc
inc
aam
or
xor
sbb
mov
into
cld
test
pop
shl
dec
pushf
test
test
aas
ja
es
mov
inc
mov
into
jns
add
pop
ja
mov
or
push
mov
lds
lret
jmp
or
pop
dec
imul
rcrb
test
out
out
repz
mov
dec
jge
cmp
jnp
or
jne
jge
mov
jecxz
and
bnd
mov
mov
js
push
adc
pop
outsl
shrl
adc
js
jbe
lret
mov
push
push
lret
repnz
outsl
addr16
popf
xchg
push
lods
popf
mov
xor
sub
mov
add
sub
lods
push
jo
jl
sbb
inc
mov
xor
in
stos
test
adc
xchg
dec
adc
leave
mov
int
cmp
dec
mov
shl
js
xor
or
movsl
add
mov
prefetcht2
std
push
popl
inc
and
or
pop
sbb
jg
xor
popa
inc
sti
mov
rcl
hlt
push
pushf
inc
popf
push
std
dec
add
or
inc
ljmp
xchg
loop
adc
inc
sbb
jecxz
lret
lock
cmp
fdivrl
cmpl
dec
jns
ja
cli
mov
dec
stc
lahf
ss
test
inc
jge
mov
lea
pop
xor
sbb
push
inc
mov
ja
jmp
sbb
pop
rcrb
gs
in
inc
cmp
cld
pop
testl
hlt
aam
cmpl
shrl
bound
gs
test
dec
sub
addr16
into
out
addr16
pop
scas
outsl
mov
cltd
sbbl
sub
ret
jae
xchg
mov
push
xchg
insb
sbb
call
stos
mov
mov
pop
and
jno
add
cmc
sub
loop
sbb
ds
scas
inc
mov
and
xor
pop
imul
xadd
stos
pop
push
push
push
pop
lea
movsl
iret
test
and
pop
or
push
mov
or
ljmp
push
clc
inc
test
stos
jne
mov
inc
mov
sahf
push
jecxz
or
lods
adc
pop
xchg
test
aad
dec
pop
fistl
int3
or
sbb
cmpb
sbb
jo
lods
cmp
xchg
dec
test
outsb
mov
ret
sub
lods
mov
ljmp
mov
dec
push
stc
dec
lea
or
in
pop
dec
js
cmc
je
rorl
or
xchg
add
dec
pop
insb
ficomps
std
push
jp
aam
in
mov
push
inc
fs
push
call
add
sarl
arpl
lahf
xchg
xchg
loop
and
popa
dec
stos
hlt
in
mov
adc
es
adc
pop
jle
jb
xchg
addb
sub
sub
sbb
xchg
in
adc
dec
mull
fsubs
nop
or
xchg
jo
adcl
enter
or
shlb
add
sti
fwait
add
fwait
pop
fadds
add
or
popa
pop
lds
or
ret
aam
fwait
cmc
cld
mov
pop
cmp
lock
inc
push
and
aad
xchg
push
xchg
push
test
loope
cvtps2pi
into
std
loope
lret
pop
push
ret
ja
test
bound
test
mov
out
aas
lahf
and
and
outsb
xchg
cmpsl
jns
mov
mov
in
mov
push
loopne
push
mov
cmp
or
mov
movsl
sub
popa
stc
mov
aas
ds
xor
lods
in
mov
jns
mov
add
hlt
sahf
pop
xchg
or
loopne
addl
xchg
enter
cmpsl
repnz
cwtl
mov
bound
sbb
out
adc
or
push
sub
push
popf
push
repz
repnz
lock
or
mov
jl
push
leave
and
cli
cli
movsb
jb
popa
push
dec
dec
mov
cmovns
outsl
dec
jno
pop
push
out
icebp
pop
mov
xchg
nop
outsb
ds
mov
cwtl
ss
lret
data16
lea
cli
cmp
jo
call
rolb
dec
arpl
mov
dec
mov
ficoml
and
pop
pop
rorl
insl
or
shrb
xor
cld
int3
popf
mov
pop
in
xchg
mov
in
mov
push
sbb
data16
es
add
xchg
pop
sbb
int
dec
leave
lret
int
imul
cmp
loope
cs
push
cmp
cld
test
xor
mov
fldt
les
push
mov
popa
hlt
popf
inc
int
xlat
or
push
or
in
lret
js
test
sarl
jne
outsl
xor
sub
cmpsl
mov
or
mov
and
in
pop
stos
sbb
cmpl
daa
test
cli
rorb
add
js
mov
add
cs
push
adc
stc
jnp
mov
dec
les
and
fmulp
sub
dec
dec
add
sub
push
jmp
xor
pop
fs
das
jno
popl
daa
pop
fiaddl
popa
ret
inc
int
insl
and
dec
nop
aam
es
es
call
fstpt
sub
js
leave
andb
int3
push
and
xchg
xor
dec
pop
roll
mov
data16
pop
jb
mov
jmp
mov
and
insl
cmp
xor
add
out
jg
fadds
mov
ds
popa
jmp
cmc
mov
les
repz
fstcw
mov
das
dec
push
fs
enter
and
sti
sub
push
dec
push
lcall
ret
jae
adc
in
inc
adc
shll
pop
pop
lock
loope
repz
xchg
testb
fiaddl
mov
fimull
lea
adc
sub
dec
lock
mov
out
test
test
and
shrb
fnstcw
mov
popf
mov
leave
push
lahf
or
xchg
adc
out
or
fidivrs
aaa
inc
out
xor
add
sub
dec
vprotb
dec
jg
push
mov
add
or
fisubl
mov
add
movsl
in
mov
aas
xchg
push
jecxz
faddl
mov
mov
xchg
ret
sbb
rcrb
ja
mov
rol
sbb
fstps
mov
mov
addl
push
and
jp
daa
sbb
adc
orl
fstl
jmp
xor
aad
mov
pop
push
sub
popa
aas
and
dec
cltd
inc
in
push
lcall
mov
mov
mov
pop
jge
dec
test
jl
cs
push
jb
jp
mov
shlb
dec
rcrl
sub
push
mov
enter
inc
cmp
cmp
sbb
add
add
sahf
test
lea
sub
mov
adc
ja
js
out
mov
stos
mov
dec
jl
or
clc
sbb
adc
push
adc
sbb
das
stos
in
mov
outsb
inc
add
rol
cmpsl
mov
movsl
or
inc
and
lret
xchg
sub
scas
andl
cmc
nop
xchg
cwtl
call
fsubrl
and
pop
pop
adc
dec
cwtl
fadds
rcl
hlt
jnp
fcmovnu
test
add
lock
xchg
stos
sbb
cmp
pop
push
cmp
cwtl
lods
inc
data16
xor
cmpsb
lds
scas
sub
les
sub
out
pop
les
jl
jl
inc
ss
bound
leave
jp
icebp
cmp
test
mov
int
push
orl
adc
ljmp
mov
or
les
mov
pop
in
lock
sub
or
subb
inc
sub
push
sub
popf
adc
push
mov
mov
loop
pop
nop
notl
sbb
hlt
mov
sub
outsb
mov
addl
add
scas
mov
and
sahf
mov
aas
scas
jne
push
cs
lds
movsb
sti
inc
inc
pop
scas
aaa
rorb
or
dec
jnp
xor
jnp
push
cmpsl
pop
mov
lods
xor
mov
ret
mov
nop
cld
and
push
jae
push
addr16
lret
stc
mov
pop
movb
push
jecxz
sub
jmp
lock
inc
call
addb
ds
in
add
jecxz
ret
ja
fistpl
pop
movsl
mov
bound
pop
push
adc
mov
add
mov
push
lret
sub
add
insl
andb
loop
ret
and
dec
test
mov
fsub
xchg
mov
dec
les
cmpsl
in
jae
mov
andb
pop
lods
pop
adc
and
pop
clc
icebp
dec
out
cmpsl
movsb
inc
xor
mov
lock
inc
fstpt
sbb
adc
xchg
sbb
jbe
rcrb
mov
sti
mov
fcom
js
dec
mov
data16
out
enter
out
push
add
jmp
or
pushf
or
es
popa
sub
jecxz
push
or
add
jecxz
xchg
test
dec
jbe
push
mov
xor
dec
pop
jb
jo
ret
std
repnz
adc
gs
movsb
or
mov
dec
pop
and
dec
xchg
fiadds
sbb
stc
push
scas
lret
test
mov
mov
aad
jns
lret
push
leave
mov
out
push
cmp
lret
cmp
aaa
jle
cmp
mov
cmp
sbb
mov
lret
mov
in
jae
shlb
dec
mov
out
pop
xor
outsl
shll
outsb
iret
sub
mov
fcmovbe
stos
ret
dec
xchg
mov
mov
cltd
lods
cwtl
mov
ret
addr16
leave
mov
por
mov
lock
push
sbb
dec
push
iret
out
lds
fisttpl
add
inc
adc
push
out
int3
jo
mov
push
in
jg
loopne
lock
jne
js
mov
subl
sub
mov
dec
std
fadds
inc
lods
adc
jae
mov
mov
push
cmpsb
fs
mov
pop
lods
xchg
out
sbb
scas
pop
test
inc
jl
mov
cmp
ret
push
lret
arpl
push
inc
jle
lea
mov
enter
push
pop
mov
cmpsb
lret
and
negb
sub
cmp
out
sbb
ljmp
outsl
shlb
mov
mov
pushf
mov
in
xor
jbe
ficompl
jbe
int
arpl
pmullw
xchg
jge
push
call
imul
adc
sub
icebp
mov
faddl
jp
or
in
lods
call
sub
popf
sbb
sbb
push
aam
sbb
loop
repz
pop
cld
sbb
dec
jmp
aas
mov
sbb
pusha
lret
cmp
test
jle
adc
push
sahf
dec
xor
int3
ds
dec
adc
sub
loop
clc
es
mov
jne
iret
testb
push
scas
ret
sbb
sbb
xchg
xor
mov
pop
sar
mov
test
mov
bound
xor
push
int
xchg
or
pop
or
jno
add
outsl
negb
int3
xchg
stos
imul
or
fidivrl
sarl
insl
lahf
mov
xchg
pop
dec
test
cmc
dec
sti
push
outsb
bound
push
into
xchg
cmp
in
inc
lods
cmp
or
push
mov
jne
mov
cmp
jg
push
inc
fsubrl
mov
hlt
mov
and
imul
jmp
jo
xchg
and
addr16
lahf
add
or
xor
cmc
cmpb
mov
sub
push
jae
loop
aad
push
xchg
push
sbb
push
in
aas
jae
sbb
mov
pop
ret
adc
std
int
mov
movsl
add
sti
fisubrs
hlt
mov
stc
or
je
and
mov
fisttpl
mov
pop
fwait
nop
test
lahf
cmp
push
int
inc
mov
mov
pop
les
icebp
lock
and
das
cmp
sahf
stos
mov
rorb
mov
aaa
jp
fistl
lock
jecxz
cmpsl
adcb
stc
cmp
cmp
lds
sub
hlt
addr16
fwait
pop
fdivrl
int
outsb
pop
inc
jge
enter
jnp
out
cmp
fsts
stos
or
ret
mov
test
or
hlt
sbb
xor
outsb
shr
mov
bswap
xor
cli
gs
fadd
div
add
ds
adc
inc
xchg
icebp
test
nop
sub
addr16
dec
sub
loope
outsb
imul
cmp
mov
adc
lea
xor
ficompl
or
adc
jp
arpl
clc
sub
and
mov
jl
and
push
sub
js
rcr
sub
int3
std
bound
inc
fimull
mov
out
in
std
shlb
enter
sub
loop
fcmovne
ret
add
std
aaa
es
lds
popa
shlb
nop
dec
imul
out
mov
xor
cmp
cmpsl
mov
mov
and
pop
sbb
and
mov
bound
sahf
icebp
ret
adc
mov
jge
cwtl
jnp
dec
dec
dec
lea
iret
jnp
hlt
loope
mov
sub
xor
pop
cli
and
jle
pop
lock
nop
ret
subl
xor
or
movsb
mov
call
jno
imul
and
ret
inc
ficompl
jle
gs
jae
cmp
insb
push
nop
or
insb
call
cltd
int3
jbe
cli
pushf
jmp
cli
push
adc
pop
daa
rorb
popa
inc
push
mov
ret
fs
xor
adc
push
notb
sbb
xchg
and
popf
xor
add
jmp
lock
mov
test
sub
xchg
negl
jmp
loopne
sub
mov
xchg
not
movsl
cmc
jne
mov
pop
mov
push
fwait
or
nop
mov
out
int
fdiv
inc
std
cmp
xchg
or
iret
adc
jb
lds
les
fs
cmp
pop
int3
rclb
lds
sbb
lods
int
lcall
dec
enter
enter
stc
jbe
jae
cmpsb
sub
pop
stos
cmp
cmp
jbe
test
fsub
xchg
les
jbe
fidivs
jb
mov
dec
mov
ds
int
jl
call
cmpl
and
ss
add
xchg
push
sti
jns
push
fucomi
pop
xor
push
or
add
and
adc
push
xchg
inc
sti
ss
jmp
sub
mov
jae
mov
shl
sbb
daa
add
mov
mov
xorl
push
sbbl
sub
inc
inc
je
ret
mov
xlat
sub
xor
and
fucomip
cmpsl
shrb
lods
mov
mov
lcall
xchg
ficomps
and
out
add
push
xchg
mov
daa
fmuls
mov
outsl
or
add
xchg
in
jae
adc
aas
repz
inc
dec
add
movsb
fistps
inc
push
sub
imul
inc
inc
xorb
mov
loopne
ja
ficompl
xchg
xchg
fwait
or
dec
addr16
int
mov
lret
mov
jne
cmpb
int
jecxz
jge
filds
sahf
adc
mov
ret
mov
in
lahf
and
sub
dec
call
mov
aaa
loop
sbb
ss
pusha
sbb
enter
or
mov
xchg
mov
push
inc
pop
decb
cmpsb
rclb
xlat
sbb
cmp
icebp
pop
sbb
lods
xchg
mov
mov
jp
rclb
fsts
adc
jg
into
dec
or
test
lods
out
cmp
hlt
in
ss
inc
mull
rclb
jl
and
mov
sbb
ja
loope
inc
cltd
jp
mov
jecxz
push
cmp
lods
sub
push
jmp
lahf
movsb
fs
cmp
pusha
bound
ds
mov
das
loop
mov
mov
orb
adc
loop
add
inc
movsb
rorb
mov
add
out
push
test
push
push
pusha
lods
and
and
pop
mov
leave
push
sbb
cs
mov
add
and
xchg
popf
imul
test
mov
cs
in
pop
insb
daa
addr16
sti
imul
repnz
sbb
hlt
or
testl
out
out
sub
mov
xchg
pop
push
sbb
addb
test
ret
fsts
jge
jecxz
jne
pushf
stc
sti
ss
inc
add
inc
push
js
xchg
or
mov
dec
inc
loope
xor
mov
add
fimull
xchg
mov
ss
out
adc
std
insb
js
aaa
inc
test
clc
rcrl
cmp
sbb
mov
add
dec
push
fs
stos
mov
pop
mov
fsubs
stos
sti
addr16
enter
and
xor
shlb
daa
push
cmpsl
dec
xchg
jns
pushf
inc
loopne
stc
insb
cmp
and
xor
jbe
dec
mov
neg
les
sbb
and
inc
or
push
test
mov
pop
mov
adc
and
aaa
movl
ja
pop
mov
cmp
jno
inc
mov
fsub
mov
negb
popf
or
pop
cltd
jns
mov
sbb
adc
lea
clc
stc
lahf
adc
or
sti
pop
cmpsb
mov
mov
inc
mov
dec
out
mov
cli
cwtl
and
adcb
mov
push
xor
js,pt
dec
sbb
nop
lea
rolb
dec
jle
xorl
cld
cmp
pop
and
aaa
ror
jl
dec
pop
test
fsubrs
sti
push
arpl
idivb
mov
xchg
adc
into
les
push
xor
jge
add
dec
ss
cmp
aas
xchg
jge
insl
outsl
in
outsl
pop
pop
inc
pop
stos
ret
xor
scas
in
jno
push
mov
notl
cmp
mov
pop
pop
cli
add
pushw
test
cltd
int
jbe
push
adc
sbb
jl
jecxz
lret
sbb
out
aam
xor
pop
jns
inc
imul
pop
sbb
dec
or
push
cmp
mov
cld
loopne
nop
lahf
adc
xorb
inc
inc
mov
cmp
and
add
jecxz
into
data16
out
stc
mov
xchg
adc
ljmp
cwtl
xchg
push
dec
addr16
daa
int3
cmp
push
add
js
adc
dec
popa
inc
sub
enter
sti
mov
xor
imul
fldcw
cmp
mov
xchg
aad
jmp
lret
dec
dec
inc
pusha
or
xchg
xchg
repz
aaa
lret
out
pop
jbe
push
pop
jp
or
lahf
dec
jbe
icebp
hlt
in
jp
push
lea
mov
push
cmp
pop
mov
or
adc
pop
push
add
out
int3
mov
xor
dec
stos
inc
inc
push
orl
xor
mov
or
outsb
imul
cmp
xchg
and
loope
gs
jnp
fistpl
pop
add
imull
push
add
shll
and
aaa
and
sbb
scas
nop
mov
dec
leave
mov
scas
movsb
jg
cmp
ret
cwtl
iret
mov
dec
push
or
dec
adc
adcl
mov
in
xorl
push
cmpsb
dec
and
mov
xchg
push
rcll
xchg
repz
mov
cmp
xchg
mov
int3
and
sub
pop
jge
aaa
pop
jge
lea
pop
inc
mov
arpl
xchg
imul
mov
pop
stos
adc
dec
imul
inc
pushf
sbb
pop
mov
push
fistpl
sub
pusha
or
mov
mov
mov
aad
cmc
addr16
fnsetpm(287
mov
test
cmp
pop
repnz
out
lret
enter
push
xchg
sarl
aas
rolb
pusha
test
push
call
fnstsw
mov
sbb
mov
nop
push
mov
clc
cmp
bound
mov
mov
adc
subps
lock
mov
ljmp
lret
out
addr16
mov
movaps
mov
std
mov
xchg
mov
and
dec
push
mov
gs
push
andb
cs
or
mov
inc
cmc
inc
pop
pop
push
pop
movsl
jmp
clc
dec
hlt
clc
push
scas
push
or
sbb
fiadds
xchg
or
shll
sbb
adc
es
inc
mov
add
inc
repz
lods
pushf
add
xchg
mov
int
incb
pop
imul
add
arpl
test
idivb
addps
inc
addr16
aaa
mov
jbe
jl
jnp
lahf
xor
xchg
out
test
sarb
push
push
aas
and
push
pop
or
mov
das
cmp
lea
push
test
daa
xchg
xor
jae
ret
inc
inc
xchg
popa
xchg
cwtl
in
pop
mov
add
lods
enter
mov
lea
les
es
lods
ret
dec
pop
addb
mov
push
call
popf
lret
inc
insl
cli
cmpsl
fs
daa
or
mov
scas
xchg
rcll
pop
push
add
movsb
cli
sub
jg
pop
or
sub
insb
ss
ss
aam
fs
test
xchg
out
dec
mov
dec
pop
dec
sub
aad
pop
jp
adc
lea
sarb
mov
ficoml
sub
add
scas
mov
mov
popf
mov
int
in
in
sbb
fwait
lock
or
movsb
or
fwait
inc
pop
jo
in
xchg
adc
insb
scas
ds
jbe
push
pop
scas
push
jo
and
xchg
mov
jecxz
call
sub
mov
mov
mov
bts
test
pop
push
jne
in
push
or
ljmp
loop,pn
fildll
cwtl
xorb
in
cmpsl
push
mov
mov
push
ds
out
adc
stc
push
push
in
jo
pop
andb
mov
mov
push
popa
sbb
in
aas
mov
xchg
xor
cmpb
fnstcw
pop
mov
jg
rcrb
pop
sub
cltd
insb
jecxz
pop
lds
das
dec
lea
out
clc
cmp
jmp
sbb
add
cmpsl
into
mov
bndldx
dec
add
sti
sarb
jecxz
xchg
xchg
movsl
mov
mov
lea
mov
and
push
inc
dec
sub
mov
mov
add
xor
pop
rolb
xorl
loope
lock
lret
dec
sbb
add
pop
xchg
out
stos
inc
addr16
sbb
push
sub
mov
mov
cmp
cmp
icebp
dec
std
push
or
pop
lahf
xor
fsts
mov
rcl
loopne
aas
xchg
scas
ss
dec
cmp
stos
into
xchg
xor
sbb
inc
into
cmc
fwait
or
push
sub
pop
xchg
xchg
fstpl
add
adc
xchg
rcrl
sub
movsl
dec
mov
aaa
adc
and
ret
aam
jne
shrb
xor
out
xlat
xor
ds
add
lret
xchg
testb
iret
mov
sbbb
fdivs
scas
dec
ss
movb
adc
int3
sahf
das
adc
inc
jmp
mov
pop
push
ss
sbb
xchg
ja
fisttpll
push
cmp
pop
pushf
mov
sbb
pop
jecxz
mov
aad
mov
ret
mov
iret
sbb
aad
je,pn
lcall
scas
lret
call
mov
pop
in
sub
pop
push
cld
or
mov
je
add
or
cld
xorb
mov
ret
pop
int
loope
outsl
out
out
push
aam
xor
scas
jae
and
arpl
fs
push
mov
adc
gs
test
add
xchg
out
inc
addr16
inc
xorb
in
add
cwtl
shlb
sbb
inc
fcmovne
pop
pop
xchg
nop
rep
fwait
xchg
repnz
push
inc
sahf
sbb
in
sub
xchg
ret
xchg
push
jne
sub
mov
cmp
pusha
mov
jg
and
mul
fisubrl
push
sbb
inc
xor
mov
es
pusha
mov
mov
loopne
flds
cli
lods
and
orl
js
rorl
fstpt
out
inc
mov
cmp
jl
pop
imul
inc
cmpsb
test
ret
cwtl
fdiv
mov
test
and
or
int3
pop
test
lcall
loopne
fstp
mov
aad
mov
sub
dec
cmp
in
jb
dec
adc
push
push
push
lock
mov
pop
es
lods
outsl
popf
incb
cmpb
add
les
mov
out
xlat
lret
je
inc
jmp
imul
cmp
sti
lahf
mov
in
xor
sahf
cmp
fsubrs
out
pop
jle
pop
fchs
xor
loope
pusha
lods
sti
loop
aaa
fisubs
jno
loope
and
out
mov
xor
push
or
sub
jmp
adc
cwtl
inc
pop
push
test
pop
xchg
pop
jp
data16
mov
push
popf
ret
xor
movsl
imul
pop
inc
loop
cmp
pop
mov
js
gs
fsubr
xchg
bound
cmp
xchg
sar
jecxz
inc
addb
into
loop
dec
cwtl
scas
push
dec
inc
push
push
jmp
les
jge
loop
pop
cmpsl
push
pop
les
cmc
push
shl
clc
jg
inc
cmp
jp
push
in
lret
push
push
push
scas
sbb
sub
lret
out
cmpsb
aas
jg
mov
sahf
sahf
repnz
inc
mov
fmull
adc
xchg
and
cmpsb
cmp
ds
xchg
sbb
bound
mov
xchg
push
pop
lea
dec
mov
cli
mov
jmp
xor
xchg
sub
or
aaa
les
das
inc
push
div
fildll
lods
test
mov
push
out
xor
xlat
ds
es
sbb
outsl
adc
cwtl
inc
jns
mov
xchg
xchg
push
mov
pop
xchg
inc
rorb
sbbb
mov
test
stos
stos
orb
pop
insl
sub
addr16
dec
xchg
popf
cmp
sar
cmp
imul
dec
icebp
loope
add
sbb
movsl
dec
popa
cs
loope
insb
jl
lods
mov
aad
and
mov
jge
mov
jl
sar
inc
sub
xchg
mov
pop
nop
xor
sub
jne
neg
push
xchg
pusha
cmc
sahf
and
inc
jg
push
or
test
inc
and
mov
sub
xchg
jl
jl
ret
lods
inc
jae
push
enter
mov
cmp
and
out
outsl
inc
adc
jbe
pop
jg
into
xor
adc
aas
fcoml
int
push
int
dec
jnp
cmpsb
loop
push
rcrb
lods
push
xchg
lret
pop
push
ja
sub
xchg
addr16
pop
lret
fs
push
out
mov
xchg
and
mov
mov
int
sbbl
and
mov
std
ds
inc
in
push
aad
or
adc
or
xor
inc
or
mov
jg
movsb
nop
add
mov
cmpsb
and
jmp
xchg
mov
aad
mov
outsl
mov
xchg
sti
mov
push
mov
repnz
xchg
xlat
jae
cmp
cmp
ret
adc
xor
ret
mov
push
sahf
lret
es
fs
and
jge
mov
push
jle
mov
addr16
stos
lea
idivb
rcr
icebp
mov
xor
dec
cmc
iret
push
addb
inc
fmulp
ss
test
push
pop
daa
in
leave
arpl
or
repz
hlt
xchg
xor
stos
insl
cli
push
jae
mov
mov
and
sbb
and
es
jbe
xorl
es
stos
cmp
test
add
xchg
cmp
lret
xchg
lret
and
mov
sti
jns
mov
and
lahf
sub
js
lahf
xorl
pop
aaa
je
pusha
inc
dec
and
vpmulhw
into
jnp
mov
enter
orl
iret
sti
mov
sub
mov
and
sbb
mov
sahf
mov
pop
mov
and
xchg
stos
xchg
push
jp
push
daa
test
xchg
mov
add
in
jle
xlat
pop
ror
mov
stos
lods
fimull
dec
sahf
mov
fld
adc
inc
sarb
loopne
scas
popa
in
inc
test
add
sbb
mov
push
mov
inc
mov
imul
leave
jge
and
es
scas
pop
dec
lret
test
outsb
nop
pop
in
jae
cmp
lods
mov
std
adc
fildll
lock
orl
lods
lcall
pop
mov
shlb
xor
rolb
cmp
fwait
out
mov
inc
test
pop
sbb
outsb
or
jmp
cmp
fstpt
sbb
arpl
fimuls
pop
jo
and
andb
cli
arpl
fcompl
push
sbb
jl
sbb
cli
outsb
xor
mov
sub
lock
sbb
jnp
mov
ficoms
cmp
xor
jo
out
mov
fldt
pop
push
add
inc
sub
cmp
push
iret
dec
call
mov
dec
xchg
les
cmp
jns
movsl
or
sahf
inc
mov
jmp
xchg
cs
test
push
ja
loop
adc
jl
jmp
icebp
pop
int
ljmp
mov
cld
bound
mov
fisubl
fsubl
push
mov
clc
fcoms
dec
mov
xchg
scas
jle
mov
cltd
push
and
dec
aaa
add
in
and
jge
xchg
adc
mov
insl
mov
pop
imul
aad
push
cmp
mov
mov
jnp
gs
xchg
xchg
xchg
ja
xchg
inc
push
jecxz
and
jmp
adc
rcrb
ror
or
lret
xchg
cld
je
push
jp
pop
loopne
aad
and
test
incl
stos
cmp
pop
scas
jge
mov
push
loop
jbe
inc
sub
mov
cmpb
dec
mov
mov
xchg
pushf
xchg
imul
xor
mov
push
pusha
outsb
aas
sbb
jle
popa
aas
push
jmp
bound
jno
hlt
sti
inc
push
mov
rorl
xchg
pushf
cs
sub
test
pop
cmp
add
int
mov
dec
dec
cld
push
nop
shr
xchg
fcmovnu
and
aas
or
sahf
mov
movaps
cmp
ds
out
jae
ljmp
add
mov
sub
dec
jmp
and
or
pushf
out
pop
push
jl
fadds
mov
imul
push
cmpsl
scas
jle
lret
pusha
add
pop
pop
jecxz
sbb
cmpsl
rclb
fsubs
aaa
out
js
out
push
in
sub
push
dec
cmp
lods
jmp
or
and
std
gs
inc
pusha
pop
jge
cli
sti
pop
lods
sti
cmp
lahf
jmp
lcall
sub
loope,pt
test
jbe
out
xchg
xchg
or
pop
jmp
int
mov
jp
xor
dec
add
pop
mov
jmp
movsb
hlt
inc
cmp
or
mov
mov
test
cmp
mov
imul
stos
mov
sbb
ret
mov
mov
movb
add
cmc
mov
inc
and
xchg
mov
icebp
fwait
dec
sub
jp
push
repz
dec
pop
xchg
push
in
sub
inc
aam
in
xchg
inc
cmpsl
inc
add
mov
mov
push
dec
jb
icebp
push
ds
imul
mov
cmpsb
dec
cltd
push
adc
mov
dec
cmpb
shr
push
ja
loop
movsb
call
jmp
movsl
adc
movsl
loopne
sub
mov
dec
sub
loopne
xchg
ja
xchg
repz
lods
arpl
jo
ss
jmp
test
jmp
popf
lds
cmp
in
cmc
repz
xlat
les
sbb
cld
jmp
lods
mov
call
jmp
mov
aam
js
add
mov
or
pop
push
out
and
and
shl
and
arpl
adc
imul
add
test
jne
dec
or
push
mov
je
sti
out
fcomps
in
popf
ja
shrl
xchg
push
fdivrs
jge
cmp
jbe
push
push
mov
or
data16
xor
pop
sub
sbb
shrb
mov
mov
lcall
jl
es
fcomps
addr16
adc
movb
jmp
lret
sub
repz
and
lret
mov
enter
jle
sahf
std
sbb
js
fnstcw
dec
nop
bound
sbb
sub
push
add
mov
gs
sub
addr16
fnstenv
and
loope
xchg
hlt
push
add
ja
sub
and
insl
push
lret
dec
cld
add
aad
mov
sbb
xor
mov
sub
or
in
push
cwtl
inc
insl
inc
inc
ds
push
jno
sub
out
addr16
out
lahf
or
sub
dec
inc
je
call
mov
sbb
js
fidivrs
out
ret
sub
add
dec
int3
or
sbb
ror
scas
test
popw
adc
aam
jnp
loope
push
add
lods
mov
adc
out
cmp
fcomp
pop
inc
mov
call
xchg
jp
mov
mov
fildl
pop
inc
in
lods
aam
movsb
push
ret
std
sub
jle
xchg
fwait
mov
mov
or
arpl
dec
ja
test
test
leave
cmp
mov
scas
outsb
ret
sub
aaa
sbb
mov
pop
or
fldl
xchg
jbe
cmpsl
adc
mov
ja
sbb
fisubrl
ja
adc
mov
inc
xor
xchg
addr16
cmp
es
sbb
fsubrs
adc
or
add
mov
mov
dec
mov
jno
pop
mov
fsubs
jp
in
neg
cmp
mov
mov
lods
jno
jl
mov
mov
test
and
int
test
pop
adc
jne
xlat
popa
std
cmp
arpl
or
adc
data16
shll
mov
mov
repnz
pushf
jle
inc
scas
outsb
mov
jb
lret
in
orl
inc
pop
mov
xor
sub
add
scas
int
es
in
stos
lea
pop
cwtl
lret
xlat
imul
enter
in
and
repz
xor
das
icebp
cltd
dec
sbb
sarl
pop
das
andb
jne
popf
imul
jns
loope
pop
test
fst
sub
or
fs
cltd
cmp
inc
ljmp
shl
out
pop
xor
mov
jbe
mov
out
pop
scas
or
sbb
jmp
rol
inc
mov
dec
pop
cld
add
leave
and
lret
js
mov
arpl
jg
jns
sbbb
lods
adc
push
mov
push
xlat
mov
mov
adc
fs
ja
xor
add
pop
add
or
pusha
cld
add
test
cmc
jbe
sub
dec
sbb
sub
popf
sbb
repz
addr16
pop
mov
mov
mov
call
icebp
adc
pop
inc
dec
and
loop
push
or
jle
clc
inc
dec
push
pop
pop
sbb
dec
push
add
scas
sub
cmp
into
mov
ss
xor
adc
cmp
adc
repz
mov
cmp
repz
and
pop
xchg
call
push
cmp
add
push
adc
sti
ja
lcall
lret
lock
rcrl
push
push
sar
je
rolb
inc
mov
xchg
les
lods
loopne
fsubr
imul
or
xor
mov
orl
pop
movsb
dec
inc
mov
dec
sar
insb
fstpt
xor
pop
push
push
in
pop
dec
mov
insb
mov
pop
xchg
insl
dec
movsl
mov
je
stos
ret
mov
into
dec
inc
and
push
js
dec
pop
jmp
inc
pop
mov
push
rolb
push
mov
mov
stos
lods
icebp
dec
imul
mov
mov
lods
fisttpll
insb
jmp
movsl
xchg
cmp
fldt
arpl
sub
enter
mov
stos
andnps
add
adc
xchg
clc
mov
inc
push
clc
loopne
test
and
and
lds
mov
mov
iret
insl
cli
cmp
mov
cmpb
movsl
mov
adc
lea
pusha
dec
ret
fs
stos
push
jmp
lods
fmuls
jbe
int3
dec
sub
stos
in
cwtl
mov
jne
and
mov
aas
jno
adc
scas
push
testb
out
shl
or
js
sbbl
push
sarb
lods
test
test
ja
imul
out
add
mov
mov
and
je
add
addr16
ds
lahf
loope
add
sbb
pop
xchg
inc
sti
push
call
cmp
fwait
addb
iret
fwait
mov
jns
mov
cmp
sub
sbbb
pop
jae
scas
sbb
aas
cmp
fisttpl
fistl
ds
mov
fcmovne
push
pop
aam
jae
and
mov
pop
test
loope
xor
xorb
sbb
fwait
sbb
stos
push
insl
xlat
loop
fisubrs
or
mov
jmp
sbb
int
jg
daa
idiv
loop
push
mov
data16
lods
insl
in
es
shll
sub
ficoms
lcall
push
cmp
sbb
cld
inc
xor
or
dec
inc
ljmp
lcall
outsb
dec
dec
mov
in
fstpl
mov
sub
lret
out
add
cmp
push
pop
aas
mov
mov
cwtl
loope
mov
mov
es
push
ficompl
dec
mov
sub
jecxz
outsb
popf
mov
sbb
rol
push
mov
dec
ret
sbb
dec
rcrl
add
xchg
inc
dec
ja
in
sub
dec
push
xchg
or
jne
xchg
cmpb
and
idivl
data16
pushf
sub
sub
jns
ret
cld
lods
mov
fcoml
hlt
cltd
sbb
imul
jecxz
cs
jge
aaa
mov
aas
dec
cmp
movsl
aas
cld
xor
pop
hlt
push
pop
in
shll
lret
cld
stc
hlt
dec
mov
dec
cmp
mov
fcoms
inc
call
cmc
mov
das
movsl
leave
lahf
fcomps
add
out
adc
pop
mov
test
fs
insl
lcall
push
xor
idivb
mov
in
cmp
cmp
push
dec
inc
fwait
outsl
dec
pop
cld
add
push
inc
mov
les
jmp
cmp
sti
cmp
add
mov
loop
jae
mov
neg
loopne
stos
daa
xchg
lcall
ret
mov
andb
or
ret
or
in
xor
inc
cs
or
xchg
mov
pop
sti
sbb
sbb
pop
mov
mov
or
mov
cmpsb
std
xor
xor
xchg
cmp
and
jg
cmp
ret
jl
push
mov
cmp
in
cmpb
jne
adc
mov
sbb
cmpsb
shrb
insb
test
mov
push
into
jl
lods
sbb
out
call
repz
push
insb
sbb
scas
sbbb
cltd
pushw
sbb
lods
cmp
loop
mov
adc
inc
fistpl
js
pop
push
mov
mov
fdivrs
sbb
movsl
aas
lea
xchg
xor
rol
sarl
sub
cmpb
mov
leave
lods
cld
push
mov
mov
andb
jp
test
dec
inc
mov
mov
inc
xchg
leave
es
dec
frstor
sarb
xchg
cmpb
insb
cmp
aaa
jb
mov
jge
mull
sbb
mov
push
nop
repz
and
jns
xor
test
cltd
lods
or
xor
mov
aaa
cmp
inc
popa
ja
sbb
jo
mov
cld
adc
insb
cmpsb
test
mov
lret
sub
jb
mov
mov
sub
arpl
push
imul
sub
dec
test
lods
xchg
xchg
pop
mov
mov
rcr
and
shll
pop
fldcw
jp
and
jo
mov
dec
push
inc
cmpl
ja
cs
inc
lcall
icebp
and
push
lahf
cli
into
repnz
inc
add
popa
or
in
pop
push
aaa
sub
mov
mov
insb
repnz
xor
pop
jge
inc
inc
pushf
cmpsb
xchg
sahf
pop
push
jno
daa
stos
ret
sahf
cltd
or
jns
xchg
inc
adc
test
xchg
cmpl
jp
scas
add
data16
out
popa
iret
fldl
loope
mov
mov
fsts
push
mov
or
sub
aad
repz
in
jb
pop
aas
jecxz
push
loope
cmp
sbb
sbb
sub
inc
fwait
adc
fstpl
jnp
pushf
lds
pop
push
inc
lcall
out
stos
push
addr16
cltd
dec
movnti
sub
mov
lods
push
in
cmp
in
out
add
xchg
data16
sahf
push
test
rorl
xchg
fiaddl
push
loop
les
arpl
push
je
inc
dec
lahf
cmpsl
ret
in
fldcw
sahf
into
call
cmp
stc
mov
pop
mov
cwtl
jne
or
sub
mov
xchg
inc
add
add
mov
sub
and
sahf
mov
dec
pop
ljmp
xchg
gs
dec
inc
repnz
cltd
cwtl
mov
cmp
cmp
ret
std
repnz
fildl
lret
mov
rcrl
mov
aas
cwtl
adc
js
addr16
jno
ret
sub
inc
fcomip
rolb
pop
lds
insb
push
lods
in
add
in
ret
add
lods
xcrypt-ctr
cmpsl
pop
and
cmp
jns
push
je
adc
sub
cmp
test
mov
data16
mov
mov
cmpsl
into
lea
mov
repnz
jg
jbe
testb
mov
dec
pop
jo
mov
je
xchg
lock
push
imul
add
dec
mov
sub
outsl
xor
insl
in
add
mov
inc
jno
repz
push
aad
xor
out
aam
sub
mov
lahf
rcrb
outsb
push
and
push
xor
in
idiv
imul
scas
ds
call
fdivrs
ljmp
mov
jns
pusha
mov
xor
mov
fdivrs
iret
fwait
and
ret
mov
sub
and
mov
test
mov
ja
jl
cltd
pop
call
xchg
xchg
das
jnp
sbb
adc
insb
sbb
lahf
out
mov
dec
or
cmp
sbb
push
pop
adc
inc
or
in
rclb
repnz
popf
or
cmp
mov
ss
xor
outsl
sar
aad
jmp
cmc
adc
dec
hlt
loopne
xchg
pop
sar
test
or
icebp
dec
ret
pop
icebp
aas
xor
in
out
ljmp
dec
push
mov
mov
les
xor
leave
push
mov
pop
pusha
mov
in
push
mov
cmp
mov
mov
test
sbbb
push
popf
jecxz
fldcw
add
mov
pop
jae
mov
fxtract
aas
cmp
shrb
popa
jl
pushl
addb
insb
adc
decb
leave
pop
bound
and
repz
xchg
mov
sahf
or
out
or
cwtl
ret
rcrb
lret
adc
out
push
dec
pop
incb
bound
mov
and
mov
or
sti
test
jnp
ds
iret
loopne
dec
popa
push
mov
out
jns
pop
adc
stc
mov
adc
in
leave
or
cmp
add
mov
push
push
inc
pop
mov
mov
sbb
inc
mov
lock
xor
shlb
xchg
jle
adc
mov
sbb
adc
jge
fnstcw
push
ja
or
push
mov
add
jno
es
xchg
in
jb
into
popa
sbb
and
and
add
call
xchg
jb
jo
jge
je
call
inc
push
pop
repz
push
sbb
sti
push
call
adc
inc
scas
stc
jecxz
xchg
or
in
push
roll
add
and
jge
les
dec
or
fistpll
out
cld
jne
in
and
add
iret
pop
or
fldcw
and
ds
mov
push
clc
xchg
add
xor
lods
loope
popf
aam
mov
leave
mov
jnp
sbb
stos
ret
mov
adc
lods
inc
arpl
jne
mov
inc
jne
dec
push
jle
jmp
mov
jle
jge
movsb
imul
out
out
dec
and
insl
pushl
xor
adc
sbb
cmp
cwtl
faddp
dec
test
stos
pop
lcall
loop
xchg
jecxz
lods
and
or
add
mov
repnz
or
xchg
pop
push
inc
jno
mov
or
sbb
sub
push
cmp
mov
cmp
fdivp
mov
add
idivb
stc
mov
cmp
loop
mov
cmp
inc
popa
lret
daa
push
test
jb
jnp
lahf
lods
shlb
and
out
ret
cltd
pushf
decb
outsb
notl
xchg
pop
jle
int
fisubl
inc
test
sub
xchg
mov
orl
pop
add
in
movsb
int3
je
dec
ss
jae
mov
mov
pop
pusha
scas
popa
in
inc
es
test
dec
lea
in
xchg
mov
lcall
adc
fwait
push
sbb
mov
fiadds
lods
jecxz
jae
lea
loopne
lahf
jmp
pop
ljmp
pop
and
aad
decl
dec
das
in
frstor
cltd
push
sub
mov
add
push
xchg
ljmp
mov
fistps
jle
subb
loope
mov
mov
mov
sbb
enter
aam
stos
test
fildl
into
test
sbb
scas
fisttpl
imul
xchg
sbb
jge
ret
stos
cmpsb
mov
adc
sub
push
pop
lret
jns
testl
bswap
jge
mov
mov
gs
inc
outsl
mov
shlb
aas
scas
push
sbb
inc
pop
sarb
push
shrl
cli
mov
rep
jp
repz
xchg
aam
leave
je
mov
jp
dec
push
mov
icebp
cwtl
jae
lret
sbb
sbb
inc
cmp
lret
push
lcall
imul
sbb
lds
les
pop
xchg
aad
adc
push
lock
stos
push
push
cmp
call
add
and
call
leave
sub
push
mov
or
stos
cmp
pop
adcl
dec
dec
clc
and
daa
mov
clc
push
inc
in
scas
adc
xor
js
mov
sub
arpl
bound
cmp
jne
mov
lret
fidivs
pop
arpl
outsl
pop
shl
ja
cmp
push
hlt
aas
mov
les
ret
dec
hlt
sub
sbb
std
cwtl
enter
inc
xchg
je
adc
mov
jecxz
stos
mov
xorl
add
aam
adc
gs
gs
aaa
fbstp
inc
push
aas
into
insl
repz
xchg
out
add
bound
int
mov
cli
out
ret
mov
ljmp
pop
add
cld
leave
stc
hlt
stc
cs
shl
loope
fcmovnb
lret
icebp
and
add
test
add
es
out
popa
sahf
leave
cmpsl
repnz
cmp
das
bound
adcb
clc
test
pushf
mov
into
add
insl
int3
rolb
std
pushf
shl
cmp
cld
and
mov
pushf
fsubrl
pop
mov
sbb
pop
mov
pop
insb
pop
test
test
test
sarl
inc
push
mov
iret
test
jp
pusha
ss
pop
xor
das
mov
js
popl
fstpt
aaa
testb
jg
and
mov
cmovae
sub
mov
aas
test
pop
or
repz
xchg
push
cmp
in
cmp
xorl
sbb
inc
xor
dec
lcall
cmpsl
outsb
shrl
inc
push
or
push
stc
xchg
aaa
into
jge
das
fnsave
adc
adc
outsb
sub
popf
and
jbe
adcb
cmp
lds
mov
rcr
xor
and
mov
daa
add
popa
jg
stos
lods
push
mov
cltd
inc
leave
clc
xchg
cld
ret
movl
test
sbb
outsb
mov
shrb
in
enter
mov
mov
mov
addl
and
testb
mov
ret
popf
stos
loopne
pop
out
jnp
mov
mov
lahf
push
daa
dec
sahf
xchg
and
arpl
cltd
dec
sub
testl
xchg
icebp
faddl
sbb
xchg
xchg
bnd
cmp
lret
icebp
lret
mov
push
insb
vmptrst
es
mov
sarl
les
and
sbbb
negb
js
ja
popa
test
mov
shrl
sub
xor
lahf
lds
ss
push
push
fidivl
inc
or
shll
xchg
ficoms
and
into
cmpsb
inc
sub
rclb
idiv
sub
movsl
repz
in
lret
pop
push
loopne
sub
pushf
out
enter
mov
sbb
clc
adc
addr16
int
cmp
iret
cmp
std
push
or
sub
inc
push
push
cli
loopne
inc
and
pop
inc
sub
sub
loopne
mov
in
pusha
or
push
loop
push
adc
out
pop
cltd
sar
decb
sbb
test
adc
dec
jne
mov
pop
sahf
cmp
adc
sbbl
push
cmp
pop
popf
pop
clc
inc
jns
mov
push
testl
add
insb
mov
inc
inc
aas
aaa
lcall
or
lcall
and
fistpl
lea
negl
sbbl
arpl
xchg
or
sbb
hlt
fwait
movsb
mov
outsl
into
or
mov
xor
aaa
mov
cmp
test
pop
push
mov
stos
in
call
xor
popf
aam
rorb
pop
es
daa
int3
cmc
xor
sbb
sbb
addl
push
sub
ret
jge
cmp
lea
sbb
inc
mulb
inc
jl
loope
jnp
scas
mov
push
mov
push
or
push
xchg
in
xchg
hlt
movsb
rolb
negl
call
pop
adc
sahf
pop
das
pop
or
jecxz
lea
xor
lret
add
inc
mov
xchg
je
xchg
lods
lds
gs
sub
inc
xchg
pop
lods
stc
mov
cmp
cltd
mov
xor
cmp
fisubl
xor
das
sahf
pusha
loope
lahf
dec
and
inc
pop
imul
add
jnp
and
mov
push
mov
mov
lock
add
bound
adc
mov
mov
and
ljmp
int3
jno
cmp
daa
jg
or
adc
ds
outsl
cmpsl
pop
sub
rdtsc
sbb
adc
cmp
pushf
or
ret
sub
es
fldl
imul
add
dec
in
cwtl
ror
dec
lret
jecxz
out
or
aas
lahf
int3
mov
icebp
mov
cvttps2pi
sbb
fisttpl
das
loope
or
mov
mov
xchg
popf
nop
mov
and
mov
sbb
icebp
nopl
aas
inc
outsb
stos
sub
popa
enter
shlb
sub
add
cmp
mov
xchg
enter
es
cmpsb
xchg
pop
test
cmp
rclb
or
repnz
scas
push
add
in
jmp
fimuls
aas
jle
lret
fidivl
fidivrs
cs
aad
adc
sbb
iret
cmp
test
mov
dec
sub
test
push
aas
push
test
leave
xchg
fstpt
xor
jb
shr
les
sbb
add
fsubrs
xor
push
leave
pop
sbb
adc
test
shll
xchg
test
inc
sub
cs
xchg
das
fisubrl
or
cltd
sbb
ds
leave
cmpsl
pop
inc
dec
xchg
repz
xor
loope
cli
sbb
test
xor
xchg
repnz
lods
sbb
out
daa
mov
in
jb
ljmp
jbe
inc
call
mov
orw
cmpl
testb
cmp
sub
sbb
adc
jnp
inc
shrb
cli
pop
in
insb
sbb
cmp
out
ret
popa
ljmp
xor
test
dec
xor
popf
test
in
ret
xchg
and
or
or
push
subl
dec
rol
fs
adc
sarb
cwtl
cmpsl
push
xor
xchg
dec
adc
xor
lea
xlat
pop
xorl
mov
mov
imul
loope
adc
int3
repz
test
jno
or
into
xor
or
jnp
loope
gs
lea
lods
dec
pop
xchg
fiaddl
ja
jnp
in
jo
in
or
lods
subl
mov
bnd
push
and
inc
cmpsb
mov
push
outsl
out
push
mov
mov
nop
xor
jne
adc
push
fistl
cld
sbb
mov
nop
pop
lods
xor
mov
cmp
pop
test
push
xchg
dec
jmp
jecxz
lock
or
sti
stc
and
pinsrw
negl
stc
pop
cwtl
test
or
popa
adc
loopne
dec
or
cmp
mov
mov
movsb
lcall
fucomp
cli
sbb
jno
cmp
arpl
movsb
fwait
lret
or
jbe
imul
ret
sahf
add
shrl
insb
inc
jne
lcall
push
mov
int
or
jle
lahf
aas
pop
push
jge
xor
stos
andb
out
mov
fldenv
cmp
pusha
xor
xor
fistl
repnz
icebp
mov
xchg
dec
icebp
loopne
loopne
xor
sbb
xchg
rol
jae
pushf
scas
ffreep
dec
ret
xchg
adc
or
cli
dec
ja
test
sub
fnsave
aaa
or
adc
inc
sub
dec
jl
mov
stc
xor
push
and
ja
rcrl
faddl
popf
cltd
ss
sub
xor
fsubrp
jb
cli
sbb
shll
pop
mov
sbb
sti
xchg
and
sbb
out
mov
int3
pop
in
mov
xchg
call
cltd
pop
lods
sub
inc
jb
or
inc
addr16
mov
add
sub
push
leave
insb
outsb
cwtl
xor
add
sbb
push
loope
incl
test
pop
mov
mov
mov
lret
lods
cmpsl
mov
insb
std
es
test
lods
mov
ds
mov
dec
jns
subb
ljmp
stos
std
callw
test
adcb
add
pop
in
add
repnz
fs
mov
scas
sub
fwait
fs
cmpsl
bound
je
and
sbb
insl
mov
dec
movsb
movsb
cli
out
cwtl
stos
arpl
aad
mov
aam
cld
jo
xor
or
dec
sub
lods
adc
push
add
test
daa
mov
ret
insb
out
mov
lods
js
xor
adc
cmp
push
pushf
jne
inc
pop
or
fbstp
xchg
pop
lret
out
mov
in
hlt
cwtl
jns
xchg
dec
adc
out
imul
shlb
mov
lret
xchg
xchg
push
fdivl
jmp
xlat
lret
xor
or
repnz
test
xor
cmpsl
je
mov
jbe
mov
test
xor
add
add
mov
add
fadds
ror
call
testb
aaa
ffree
je
jbe
int3
shll
add
push
jle
aas
das
dec
mov
pop
push
in
push
aad
pop
lahf
jp
inc
cs
jno
shrb
push
jmp
bound
ss
and
pop
push
mov
sbb
push
fidivs
daa
mov
sbbl
shrb
mov
and
adc
jno
cwtl
test
inc
cli
cld
push
ret
xchg
mov
fldcw
outsb
stos
xchg
inc
xorb
mov
pushf
push
shrb
rcr
mov
sarl
mov
jnp
iret
add
sub
scas
mov
lret
hlt
mov
xchg
repz
mov
in
in
xchg
fsts
mov
adc
xchg
lea
fcoml
addb
popa
aam
mov
icebp
cld
fldcw
movsb
arpl
xchg
and
push
arpl
cltd
and
mov
shrl
sti
jge
aad
dec
pop
stc
and
sub
mov
imul
mov
mov
outsb
sbb
leave
add
shlb
or
and
jge
iret
insl
inc
or
jnp
aad
adc
pop
test
mov
imul
mov
mov
cwtl
nop
inc
pop
push
and
mov
sbb
loopne
addr16
cmc
scas
les
loopne
out
xchg
pop
fisttpl
xor
scas
xlat
sub
and
lret
mov
mov
mov
cmovo
sub
add
mov
mov
in
loope
outsl
mov
scas
xchg
sub
sub
ret
add
or
inc
mov
movsl
cli
ljmp
lods
adc
ljmp
lods
bound
sarl
cmc
mov
in
push
stos
ljmp
sbb
test
ficoms
addr16
jg
dec
fsub
or
movsl
or
or
insb
int3
nop
mov
ret
adc
fs
lcall
or
movsl
dec
int3
mov
ud2
push
pop
cmp
and
sbb
scas
or
inc
clc
ret
push
test
dec
and
nop
mov
pop
cld
into
shlb
fdivl
push
loope
push
pop
shll
loop
mov
scas
orb
and
test
mov
mov
cmp
jmp
adc
lock
mov
adc
loope
sbb
mov
cwtl
orl
inc
add
jmp
jne
test
mov
fcmovu
push
dec
popf
mov
and
mov
sbb
cwtl
mov
pop
inc
lret
mov
mov
jb
iret
push
inc
dec
cmp
out
mov
sahf
jbe
adc
popa
pop
sub
mov
insb
xor
add
repnz
filds
adc
ret
out
es
stos
mov
add
mov
inc
filds
xchg
or
pusha
xchg
fcmovnb
add
mov
popa
fsubrl
dec
push
jb
mov
in
mov
mov
pop
aad
cli
sub
or
cwtl
les
out
inc
pop
mov
jns
cmp
adc
mov
bound
stc
ss
mov
outsb
jb
in
sbb
mov
add
push
adc
lds
fstpl
pop
scas
pop
sub
loop
fbld
je
pusha
pusha
cli
popa
xor
stos
out
push
xlat
xorl
sub
fisttps
push
out
in
or
rclb
xchg
out
jl
jns
push
sub
outsb
lret
inc
les
push
and
clc
cld
push
shl
xchg
jns
lds
lret
xchg
lods
das
pop
ljmp
mov
scas
rcrl
in
inc
nop
cs
mov
mov
dec
sahf
and
mov
jnp
lock
ret
and
arpl
jbe
stos
add
cld
xchg
xor
jo
push
into
pusha
sbb
jb
enter
inc
adc
mov
ljmp
xor
xlat
jbe
inc
ficompl
data16
shll
xchg
aad
dec
cmp
dec
mov
sarl
pop
mov
loope
push
lock
pushf
loopne
fiadds
mov
mov
push
dec
xchg
or
aam
stos
rcll
add
xor
fbstp
push
push
pop
lods
in
nop
push
imul
mov
dec
lock
std
and
jp
out
sti
fst
cmc
pop
and
mov
cmpsb
test
test
mov
pop
jbe
pop
in
aas
scas
cwtl
lahf
je
add
cmp
imul
outsl
cmp
lods
sbb
pop
les
mov
or
mov
inc
mov
push
outsb
add
jbe
xchg
sub
sub
inc
inc
adc
iret
add
fistl
cli
lods
movsl
lea
dec
adc
mov
movsb
imul
in
mov
mov
dec
fs
or
xor
push
xor
jno
mov
lock
outsl
arpl
inc
inc
sub
sbb
jnp
add
in
mov
pushf
mov
sub
pop
mov
sub
mov
inc
lahf
pop
rclb
mov
int3
mov
ds
addr16
fidivl
insb
call
lret
dec
mov
push
ljmp
das
and
lock
cmpsb
mov
std
push
adc
test
lret
aas
xorl
rclb
call
roll
mov
pop
in
jno
call
push
jno
mov
mov
clc
in
in
pop
mov
test
xchg
pop
enter
mov
aam
adc
xor
aam
in
fidivl
inc
ror
push
add
mov
cmp
shrl
add
jge
pop
push
push
dec
sub
rcll
fcompl
lods
mov
lods
xor
dec
test
push
mov
cli
test
inc
scas
in
rcl
cmpsb
inc
push
jg
push
mov
jae
xchg
testl
or
imul
mov
in
rcr
or
push
repz
xchg
mov
popl
leave
js
imul
mov
and
enter
xor
add
xchg
les
into
shrb
ljmp
and
leave
shrl
pusha
sub
or
xor
fldenv
rcrl
push
xor
pop
sbb
cmpsl
insl
in
jbe
dec
cmp
mov
add
mov
stc
dec
jo
dec
push
insb
jmp
sbb
rorb
pop
push
mov
aam
xchg
xchg
and
loop
fs
sub
orb
add
in
or
enter
arpl
sub
inc
pop
test
push
adc
mov
in
push
mov
or
jle
and
mov
and
or
xchg
mov
stc
push
sbb
sbb
jg
adc
push
ljmp
cmp
pop
bound
sarl
loope
adc
cwtl
jl
mov
repz
or
mov
in
mov
dec
xchg
sbb
jmp
jge
test
nop
sti
aam
push
inc
push
mov
adc
loop
lret
in
and
fwait
mov
or
add
sti
aam
push
cmp
daa
jb
mov
mov
pushf
imul
fidivs
fisubs
dec
xchg
dec
imul
sub
js
outsl
add
jbe
xchg
je
pop
jno
sbb
pcmpgtw
inc
les
push
cmp
daa
addr16
sub
lods
adc
and
dec
xchg
mov
lret
cmp
or
jmp
popf
testb
xor
insl
sbb
repz
or
cmp
cmp
add
mov
lea
pop
or
xlat
insl
outsl
sbb
dec
in
inc
xor
fcoms
jge
or
xchg
fisubl
in
push
xorl
lcall
les
jbe
stc
popa
sbb
mov
aam
xchg
call
lods
hlt
push
jns
jge
int3
jne
and
insl
jne
lods
adc
cmp
xor
or
insb
adc
cs
mov
gs
imul
ret
mov
lahf
ss
and
jb
clc
pop
xchg
push
push
imul
mov
sti
cmp
das
mov
lock
add
cs
out
add
jmp
xorb
jp
pop
sbb
mov
xchg
mov
adc
call
add
out
js
bound
sbb
imul
rolb
movsl
ficomps
aaa
sub
in
cmpsl
adc
adc
cmc
add
pop
sbb
gs
orl
and
pop
fsubr
mov
xor
cmp
or
lahf
push
test
dec
xchg
pushf
loopne
xor
pop
fstpt
in
out
repnz
push
imull
jo
jb
mov
cmp
push
push
jbe
mov
cmc
in
and
cld
inc
xchg
add
data16
push
loop
shrl
mov
sub
push
lds
pop
cld
push
sbb
fisttps
mov
ja
sub
call
fs
clc
ret
lock
data16
xchg
pop
xor
ss
sbb
sahf
cmpsb
adc
out
fsubr
jae
fbld
push
lcall
or
sub
enter
mov
mov
call
leave
xor
mov
es
lock
imul
and
xor
cmp
sub
nop
je
cmp
inc
fisubrs
imul
adc
fsubrs
rorb
xchg
repnz
outsl
ljmp
in
shl
push
iret
mov
into
aam
sbb
push
cli
cli
outsb
cld
shrl
rcrl
rcr
jo
scas
or
cmpsb
ret
adcb
or
push
sbb
idiv
insb
cli
sbb
in
sub
fs
adc
inc
out
mov
ror
scas
lock
ret
push
inc
out
imul
xchg
daa
xor
sbb
xor
bound
mov
ficomps
pop
iret
jbe
add
jbe
in
mov
mov
lods
mov
fcmovnbe
arpl
push
or
test
adc
cs
std
jmp
scas
ja
sbb
jbe
lret
mov
push
and
jno
testl
or
xchg
fldcw
test
adc
mov
xor
adc
mov
or
popa
ljmp
pop
pop
test
xchg
mov
sub
mov
stos
push
mov
xlat
dec
sub
or
push
xchg
pop
xchg
xchg
jecxz
stos
and
scas
js
out
shll
jno
sahf
push
ja
scas
scas
mov
pop
shlb
jb
popf
inc
cmpb
adc
lods
push
inc
out
cmp
ja
or
jp
push
test
add
imul
cmp
lcall
push
clc
pop
lret
fcomps
jnp
or
lods
mov
push
jnp
in
cmp
pushf
ljmp
jo,pt
inc
loope
inc
in
mov
pop
adc
addb
mov
test
adc
and
adc
arpl
fdivrl
sub
adc
aas
xor
mov
jp
lret
mov
mov
cmp
push
jno
mov
sbb
or
add
sar
test
incb
rcrb
cmp
movsb
enter
xor
or
mov
push
add
cmp
gs
test
dec
call
fsubrl
loope
pop
les
xor
shlb
clc
test
popa
xor
pop
mov
sbb
lods
es
mov
push
gs
scas
cmp
and
lahf
jbe
jno
or
mov
add
sub
aas
or
scas
push
fwait
mov
sub
ja
add
bound
or
daa
adcl
mov
sub
pushf
sbb
call
int
mov
mov
std
loope
xchg
std
cmp
fisttpl
ss
jle
mov
cmpsl
jl
inc
mov
fists
aad
sub
xor
cli
sub
push
inc
pop
fisubs
or
ja
jecxz
xlat
pop
lods
xchg
pop
xchg
jnp
dec
popa
sub
or
bound
mov
jmp
inc
cld
pop
icebp
cli
ljmp
mov
add
mov
lcall
add
in
pop
test
je
sbb
mov
aas
mov
and
int
fisubs
lcall
cmpsb
stc
xlat
inc
and
stos
pop
xlat
push
mov
sbb
xchg
xchg
int
rolb
adc
mov
stc
mov
push
test
shrl
out
fwait
test
lods
jg
mov
mov
jl
loop
test
xor
in
in
cli
iret
mov
cmp
shll
inc
xor
sub
jnp
push
pop
sub
aad
or
push
fcmovb
pop
or
hlt
loope
mov
in
sub
fdivp
sub
and
dec
xchg
insb
sbb
mov
jmp
js
mov
fs
ss
push
fs
dec
jno
ljmp
cmpsl
mov
int
pop
int
or
sub
and
adc
mov
mov
jno
sub
data16
jae
sti
sub
adc
dec
addr16
inc
mov
mov
sub
jno
xor
filds
rorl
lds
repnz
movsb
test
imul
jo
jbe
cmp
push
mov
inc
xor
sub
mov
hlt
push
iret
adc
dec
jne
loopne
ret
movsb
aam
push
rcll
in
or
dec
mov
lahf
in
push
je
call
jg
xchg
add
enter
push
jmp
mov
mov
mov
cmp
lods
jne
jecxz
inc
test
insb
lea
or
aaa
fs
dec
jle
mov
cli
push
mov
dec
or
xchg
aam
jb
bound
mov
sbb
dec
pop
int3
pop
xor
insl
loopne
cmp
mov
cld
daa
sub
outsb
test
push
dec
cltd
xchg
or
push
push
mov
imul
call
dec
std
adc
sub
xor
adc
mov
sub
es
or
xor
pop
stos
inc
test
push
je
lcall
dec
ror
sub
mov
in
je
test
sti
sarl
call
sub
xchg
add
out
add
pop
jns
mov
cmp
fcomps
push
mov
push
lahf
cli
sbb
add
pop
add
mov
pop
mov
inc
xchg
outsb
xor
inc
push
sub
pop
addr16
inc
ret
adc
test
push
mov
pop
sti
cmp
lcall
fs
mov
stos
or
sub
repz
cmc
add
imul
or
pop
xchg
dec
cmp
cltd
sbb
cmpsb
dec
sub
jno
xorl
les
inc
shl
arpl
cmp
mov
mov
pusha
mov
mov
and
add
mov
loop
xor
aaa
sahf
jle
pop
pop
repz
inc
pop
and
jbe
jno
loopne
lret
pop
add
and
xorl
ja
arpl
adc
popa
adc
mov
jno
inc
ja
jmp
inc
sbb
cmpsl
into
int3
jge
enter
out
jl
fld
lods
mov
aam
fs
mov
sbb
call
dec
sbb
rcpps
adc
shlb
sub
dec
es
jae
fs
inc
mov
popf
fcmovne
sub
out
push
push
xor
test
popa
push
jo
pop
push
cmc
xor
cmp
adc
int3
push
ss
inc
xor
cmp
jmp
pushf
aas
aaa
call
xchg
and
mov
addr16
ja
ds
inc
sub
sbb
adc
lea
xor
mov
push
shrb
and
add
sbb
negb
je
push
dec
pop
js
xor
int3
imul
push
pop
je
imul
test
cld
lock
filds
cmpsl
push
adcb
leave
jae
push
jle
daa
fdivp
lods
pop
jl
filds
fcompl
mov
add
rcll
ss
jne
xor
outsb
outsl
fsubl
jnp
push
add
loope
add
lods
mov
pop
mov
out
repnz
cmc
pop
inc
xchg
gs
rorl
push
ds
inc
out
push
cmc
mov
arpl
and
mov
pushf
ret
add
xchg
push
clc
aas
push
sbb
dec
sbb
mov
inc
dec
fnsave
fldcw
mov
fsubs
dec
mov
repnz
in
push
sarl
pextrw
xchg
push
andl
in
mov
push
mov
orl
jg
inc
xor
pop
xlat
cmpsb
scas
loop
mov
icebp
jecxz
pop
popf
imul
push
es
dec
mov
push
cwtl
ret
rorb
or
rcll
sahf
lods
aas
and
or
decl
inc
ljmp
iret
popf
das
push
mov
push
inc
out
sarb
xchg
cmpsl
mov
icebp
push
dec
xchg
mov
test
cmp
imul
repz
shrb
fs
add
push
cltd
or
cmp
daa
and
ja
in
xor
or
cmp
in
shlb
push
ret
jl
clc
icebp
push
jno
jns
sbb
pop
pop
xchg
mov
mov
adcb
jne
jmp
inc
outsb
push
mov
in
cmp
dec
fidivs
sarb
inc
inc
or
xchg
xor
shll
pop
mov
loope
xor
xchg
rolb
xor
add
sbb
mov
dec
pop
fsubl
adc
mov
xor
jo,pt
test
int
daa
jl
dec
insb
xor
inc
es
pop
outsl
mov
ret
cmp
mov
pop
mov
popf
shrb
dec
dec
outsl
jns
mov
fs
nop
dec
add
loope
adc
js
bound
shll
xchg
movsb
jb
sbb
pushf
fucomp
mov
and
jg
add
push
shrb
cmp
lcall
add
mov
cmp
test
jne
dec
or
pop
xor
test
daa
sbb
sbb
fsubrs
mov
jge
lcall
cmp
mov
mov
sti
mov
ds
push
lods
call
and
add
mov
add
adc
shrl
mov
xchg
shr
adc
or
pop
sbb
cmc
pop
jno
mov
jle
sbb
loope
lds
pop
out
sbb
imul
pop
pop
dec
shrl
sub
cmp
pop
lret
and
jae
pop
jae
push
pop
xor
in
clc
mov
add
or
out
das
and
cld
xor
rcll
inc
dec
jb
mov
in
rcrb
mov
sbb
add
movsl
rclb
and
mov
cmp
adc
fucomi
mov
mov
insl
xlat
xchg
fs
jnp
clc
jge
insb
adc
je
pop
sbb
dec
daa
push
mov
enter
shrb
mov
xchg
stos
or
stc
add
push
lahf
ret
fcoms
mov
jb
out
sub
js
repnz
xor
mov
fistpl
xchg
push
fdivs
adcl
iret
xor
sbb
mov
in
push
test
mov
push
stos
or
loopne,pt
xchg
xchg
sub
push
sbbl
mov
lret
mov
js
push
sbb
mov
arpl
xor
pop
mov
scas
sahf
cmpsl
andb
mov
sub
hlt
outsb
pusha
fdivrp
xchg
push
adc
dec
mov
and
xlat
outsl
je
mov
mov
add
fsubrs
out
outsb
jp
bound
nop
loope
push
xor
in
mov
pop
shlb
or
pushl
cmp
mov
mov
mov
jmp
stos
cmpsb
or
movsb
daa
je
lret
add
xchg
out
xchg
cmovno
cmp
lahf
in
and
pop
dec
jmp
adc
adc
push
adc
jnp
fldenv
fidivl
lret
gs
cli
sbb
sbb
repz
xor
push
rol
lahf
int
or
fisubs
negb
fistps
imul
sbb
inc
pop
xchg
fisttpll
popf
pop
inc
xchg
stos
aaa
cltd
dec
cmpsb
in
adc
add
sbb
cmpb
sahf
mov
stc
test
push
mov
and
inc
aas
cwtl
nop
mov
cmp
repnz
pop
es
hlt
rcrl
lock
xchg
and
xchg
add
xor
imulb
cmp
pop
fcomip
jle
ss
ja
dec
cmp
pop
ljmp
cmp
mov
cmp
imul
push
or
in
inc
xor
pushf
sbbl
popaw
sbb
mov
js
lahf
adc
mov
mov
leave
and
repz
sub
sbb
push
int3
vsubps
shr
pop
lods
aaa
loopne
repnz
lahf
or
xor
dec
fcomi
add
xor
xlat
xor
dec
daa
jg
xor
jle
daa
add
mov
lahf
push
xchg
xor
and
pop
push
aas
jecxz
cmp
lds
dec
pop
test
mov
aas
xchg
ror
push
mov
into
dec
add
or
xchg
sahf
add
mov
mov
jmp
jp
xor
dec
jl
jle
dec
movnti
dec
cmpl
stos
js
push
sub
inc
xchg
pop
leave
pop
enter
in
das
dec
cltd
out
mov
outsl
xor
xlat
xchg
loop
dec
mov
aas
cmp
sub
cmpsl
andb
clc
and
aad
ror
and
pop
popa
fsubl
loopne
adc
iret
adc
lods
sub
cmpsb
push
fidivs
pushf
sub
push
sahf
fldt
arpl
aad
gs
ljmp
sub
sbb
mov
fwait
mov
repnz
les
xor
repz
cmpsb
gs
negb
nop
push
ret
dec
xchg
ret
push
dec
pusha
loop
lahf
inc
inc
mov
ret
pop
sub
out
ficomps
loope
testb
fwait
inc
fwait
aas
fwait
xchg
repz
mov
scas
or
popf
pop
loop
push
adc
into
outsb
mov
pop
add
sbb
call
pushl
arpl
push
adc
idivl
mov
stos
mov
cmp
imul
xchg
adc
mov
cltd
jno
adc
xorb
stos
enter
push
lods
mov
pop
aas
xlat
mov
dec
enter
mov
paddusb
push
push
mov
loopne
jecxz
inc
sub
xor
in
test
aam
cmp
mov
enter
fdivs
popa
and
fstpl
lcall
jne,pt
mov
and
stos
ds
xchg
iret
mov
lods
mov
shll
idivb
add
lret
lret
xchg
ret
outsl
loopne
and
fs
xor
cmp
movsl
icebp
or
xchg
or
push
push
dec
adc
aas
lds
mov
adc
mov
into
push
cmpsb
lea
dec
xor
pop
icebp
fucomp
jno
sub
js
fiaddl
aaa
in
inc
mov
xchg
jno
sub
daa
and
mov
es
popf
fsubl
xchg
mov
lock
or
dec
ds
ror
adc
or
mov
or
rcll
inc
dec
jb
xchg
sbb
subl
dec
push
int3
mov
pop
js
mov
clc
dec
mov
push
fs
sub
mov
cmp
scas
inc
pop
in
xor
pop
xchg
gs
sar
mov
cmp
push
pop
mov
inc
cmp
out
repz
push
in
mov
fcmovnbe
inc
sub
cld
sets
popf
imull
mov
sbb
xchg
rcrb
add
and
lods
sub
adc
inc
mov
xchg
aas
cs
sbb
push
movsb
mov
push
xchg
aaa
jl
mov
xchg
add
pminsw
dec
loope
je
movsb
imulb
sub
sbb
arpl
push
aam
sub
idivb
xchg
cli
sbb
jb
mov
mov
inc
mov
jle
enter
addr16
data16
sbb
imul
jmp
add
pop
movsl
insl
pop
jp
popf
mov
or
push
sahf
daa
daa
inc
out
aas
es
push
xor
hlt
pop
out
int
jo
cmp
insb
mov
push
mov
push
sar
icebp
mul
sub
xor
cmpsb
loope
test
mov
fbstp
fmuls
ljmp
pop
mov
fwait
xlat
lcall
push
test
mov
repz
pop
dec
mov
sti
aaa
jne
iret
jbe
loop
cmpsb
jl
and
push
dec
or
jns
cmp
fwait
scas
pop
or
lea
pop
xor
loopne
pop
fistpl
add
pop
mov
and
stc
xchg
and
jmp
sub
lds
pop
lahf
push
mov
xlat
les
int
das
negb
xchg
mov
jno
xor
jle
aad
enter
mov
ret
jge
mov
xchg
pop
mov
pop
pop
mov
std
into
xor
inc
jbe
inc
jae
jne
frstor
and
add
add
dec
jp
xor
out
scas
push
sbb
dec
ja
dec
iret
inc
in
cmp
push
ret
push
fnstcw
nop
mov
lds
aad
jg
cli
xchg
cmc
xchg
push
xlat
les
ret
mov
xor
call
pop
in
and
xor
mov
mov
sbb
scas
nopl
movsl
out
jbe
pop
lock
mov
pop
sbb
mov
or
adc
dec
pushf
mov
pop
sbb
inc
mov
jbe
inc
and
dec
sar
push
mov
or
addr16
mov
data16
push
jne
ljmp
outsl
xor
xor
popa
movsb
mov
std
adc
lock
xor
imul
mov
mov
lret
rcrb
xor
notl
sub
call
sarl
jae
xor
out
adc
xor
fcoms
call
outsl
and
rclb
mov
ja
fs
sahf
lea
push
rcll
out
cmp
inc
mov
pop
or
push
ret
or
lret
ss
mov
adc
testl
push
nop
arpl
inc
pop
jns
push
mov
nop
add
data16
aam
mov
repnz
hlt
in
inc
cmp
in
jne
pop
add
jmp
mov
test
adc
aam
push
pop
and
imul
jle
add
sub
and
lds
xchg
push
mov
mov
fldl
or
pop
xchg
daa
fldt
add
and
mov
in
bound
cmp
movsl
jle
push
cli
sbb
pusha
mul
sub
or
mov
daa
xlat
xchg
rorl
div
or
xchg
inc
jle
sahf
push
ror
sub
das
xlat
fwait
or
inc
jge
icebp
in
inc
daa
xor
push
shrb
daa
mov
cmp
das
adc
mov
jns
adc
jle
imul
in
or
cmp
pop
sbb
pushf
mov
cmp
ja
sub
jae
addr16
dec
mov
test
fwait
xchg
movsb
jp
je
mov
test
sahf
mov
fldt
dec
jp
or
and
scas
adc
stc
test
push
jge
insl
lods
or
mov
and
lcall
dec
xchg
mov
dec
pop
sub
cwtl
pop
inc
xchg
sbb
lea
mov
jmp
pushf
lcall
jne
push
push
inc
repz
out
push
jae
sbb
sub
mov
pop
inc
or
andl
mov
stos
outsl
mov
sub
je
imulb
js
test
inc
and
loop
xor
cs
fdivs
cld
aas
loop
incl
imul
insl
das
leave
mov
fxam
loop
cli
mov
insb
add
fdivl
mov
add
mov
ljmp
mov
pop
mov
mov
inc
xor
adc
aad
cmp
add
cli
scas
nop
std
ja
imul
scas
cmpb
pushf
imul
lret
sti
mov
out
js
inc
insl
hlt
movb
mov
out
push
push
lods
rclb
lret
sbb
aas
arpl
pusha
aam
stc
scas
cmpsb
imul
push
mov
test
sub
cmp
cmp
enter
pop
stos
fwait
push
lahf
add
enter
pop
jge
pushf
adcb
pop
jo
int3
mov
adc
mov
scas
mov
and
mov
mov
jle
and
push
sub
test
mov
cwtl
fists
dec
lcall
push
cld
stos
jb
in
jecxz
addr16
mov
push
xor
xchg
dec
jmp
dec
insl
fildll
push
shrb
shrl
push
xchg
pop
push
adc
push
adc
cs
mov
das
sbb
mov
xchg
add
jb
je
xor
out
mov
sub
jae
jecxz
cmpb
lds
mov
ret
call
inc
inc
jg
pop
mov
cmpl
cmp
or
add
push
inc
loopne
ss
aad
jns
dec
sahf
jecxz
adc
dec
mov
aas
jp
out
adc
inc
jmp
mov
repz
and
mov
pushf
iret
xchg
je
stos
push
sbbb
mov
leave
scas
iret
nop
addb
imul
sbb
adc
xor
idivb
shrl
xchg
inc
adc
pop
iret
mov
add
adc
dec
add
xchg
or
pop
xrelease
or
sub
iret
aas
inc
jb
cmp
loop
lds
leave
pop
repnz
sbb
std
popf
fidivl
imul
mov
mov
jge
mulb
sub
push
fmuls
adc
mov
movsl
sahf
xor
cmp
or
sub
mov
and
lea
push
pop
aam
xchg
mov
int
push
out
fsubrp
dec
mov
push
pop
test
mov
adc
jl
es
cmc
inc
flds
mov
jb
push
mov
shr
add
lock
in
dec
fidivrs
jmp
mov
add
dec
pushf
pop
lock
jbe
int3
dec
push
xchg
das
lahf
insb
daa
xor
dec
test
push
mov
pushf
shrb
pusha
test
and
cmp
inc
xchg
adc
shll
xlat
ljmp
dec
in
shl
lds
mov
push
xchg
sbb
adc
cltd
clc
push
pop
mov
sub
adc
mov
mov
add
int
out
insl
call
mov
imul
into
dec
fistps
mov
and
mov
aas
xchg
je
arpl
or
cltd
dec
aaa
call
cmpsl
push
movsl
mov
sbb
js
ss
push
mov
mov
pusha
movnti
in
add
xor
sahf
fsubrs
das
mov
sti
mov
adc
ja
rorl
test
or
fcompl
push
clc
std
jae
ds
js
mov
cmp
push
xchg
push
or
jb
mov
out
fwait
push
sbb
fists
nop
mov
std
and
adcl
popa
insl
movb
insl
sub
cli
xor
mov
adc
mov
lcall
test
xchg
sub
popa
inc
cwtl
lahf
fdivrs
inc
dec
fldcw
push
fsubs
aam
in
xchg
outsb
mov
outsb
pushf
cmp
sub
test
cmp
sub
orl
xchg
ds
sub
push
xchg
xor
hlt
rorb
insb
inc
sub
arpl
icebp
shll
int3
pusha
into
divb
cmp
enter
scas
mov
lahf
push
adc
lock
sarl
or
dec
and
sbb
mov
fs
subb
dec
test
repnz
shll
les
xlat
push
mov
pop
and
imull
add
scas
mov
out
sub
cmpsl
push
shrl
outsl
dec
imul
out
loop
jg
jnp
xchg
pop
or
popa
fisttps
sub
add
arpl
dec
je
aam
pop
rcrb
jmp
xchg
and
xchg
loop
add
arpl
mov
cmp
jae
lea
cmp
in
orb
mov
cmc
mov
xchg
orb
popa
inc
mov
sbb
test
fists
xchg
pop
mov
dec
movsb
out
push
fnstenv
mov
lods
mov
mov
fcmovu
les
dec
in
int3
jbe
jge
and
and
adc
cmc
in
popa
dec
adc
xchg
les
push
pop
or
push
loop
mov
dec
pop
data16
mov
mov
xchg
push
sub
dec
mov
adc
pop
xchg
jnp
mulb
fistl
mov
add
sub
jno
ss
insl
adc
lea
cmpsb
xlat
and
lods
push
pop
sbb
push
ljmp
mov
pusha
or
hlt
or
insl
mov
lcall
mov
pop
in
and
cmpsb
and
fsubs
fisubrl
xlat
in
push
add
jno
loope
nop
or
scas
jge
push
or
ljmp
cli
loop
lret
adc
mov
and
push
out
cli
test
jnp
js
xor
cmp
jp
jmp
adc
jbe
pop
xchg
loope
sub
shl
test
out
ficoms
mov
jge
je
dec
jbe
fstpl
bound
dec
xchg
add
lret
push
cmp
inc
add
push
iret
test
mov
std
mov
xor
jle
aaa
je
fstl
popf
xor
push
sub
mov
es
mov
xor
cs
cmp
fiadds
pusha
flds
mov
mov
mov
adc
lcall
pop
mov
push
and
jb
cwtl
xor
inc
xor
call
inc
and
mov
xchg
lods
pusha
rclb
into
pop
pop
add
adcl
xor
pop
xchg
test
cltd
inc
pusha
fwait
nop
lea
out
or
push
jnp
sar
data16
icebp
inc
jne
loopne
pop
xchg
or
pop
mov
js
test
mov
mov
dec
dec
imul
or
shll
cld
jecxz
sbb
fs
es
jmp
fidivrs
inc
push
push
and
rclb
push
xor
cmpsb
pop
dec
rsqrtps
pop
jmp
lahf
test
fcmovne
jne
mov
mov
jnp
mov
xchg
mov
xchg
cmp
xchg
mov
out
addr16
sub
dec
and
or
jb
rcll
mov
iret
adc
scas
jle
mov
sbbb
sub
movsb
test
xchg
gs
stos
fadds
or
mov
cmp
inc
test
daa
mov
mov
dec
out
xchg
jno
addr16
inc
jno
stos
mov
jne
dec
pop
xor
pinsrw
push
and
mov
pop
js
or
dec
insb
mov
adc
pop
ds
cmp
in
pop
ljmp
int3
addr16
outsl
sbb
xorb
xchg
in
js
ss
sarl
ficoms
xor
push
mov
and
jo
lret
sub
loope
out
pop
mov
scas
jb
sub
sbb
stos
mov
addl
stc
push
jbe
inc
jmp
mov
pop
inc
mov
pop
ljmp
xchg
xchg
sbb
rcll
pop
mov
fildll
lods
sbb
shr
inc
and
push
pop
mov
push
rorb
xorb
imul
inc
int
adc
int
mov
fsubrs
pop
mov
xchg
roll
divl
dec
nop
cmp
out
rclb
mov
push
mov
lret
xchg
or
pop
dec
andb
fsubp
xor
in
into
or
arpl
cs
mov
lret
jl
rcll
pop
and
test
or
fwait
ret
les
sbb
or
push
xlat
insb
and
adc
jae
pop
mov
out
aad
push
dec
pop
push
idivl
xchg
push
mov
push
int
repnz
pop
subl
push
mov
inc
cmp
adc
mov
repz
shlb
aam
pop
add
shll
lods
shlb
or
lds
out
mov
es
sti
sbb
andl
sbb
stc
imul
andb
sbb
or
add
fisubs
ss
jnp
aaa
sti
dec
out
jae
jo
sar
incb
aam
add
sti
das
stos
mov
push
arpl
lock
mov
pop
ret
imul
sub
lea
adc
out
xchg
sub
mov
push
jmp
movl
ds
mov
testb
aas
mov
fsubrs
inc
cmp
data16
lods
fnstenv
xchg
in
fwait
out
jle
xlat
push
icebp
addr16
mov
jbe
cmp
jge
data16
scas
daa
rcl
inc
push
dec
mov
fdiv
fwait
dec
pop
sbb
andl
daa
inc
nop
mov
fwait
pop
bsr
and
rcll
ss
cltd
jns
bound
enter
xlat
sahf
lret
je
add
fldcw
xchg
sbb
push
xlat
mov
cld
xchg
or
add
xor
movsl
ret
fiaddl
movsb
or
test
jg
cmpb
pop
cmp
lock
xchg
fs
ret
jg
sahf
mov
insl
and
xchg
cli
inc
fisttps
insl
rcl
add
mov
repnz
in
scas
bound
repnz
xor
push
inc
jmp
out
les
outsl
jbe
aam
pop
pusha
dec
and
fbld
popa
xor
push
in
xor
fcmovbe
jns
inc
xchg
jno
add
or
aad
popa
test
ljmp
sub
movsl
cmpsl
sbb
aaa
lods
xor
stos
mov
lret
xorb
and
loop
mov
shll
fxtract
add
pop
ret
dec
sub
inc
loope
fs
cmp
push
mov
ficompl
repnz
mov
or
fcomps
lcall
inc
xor
std
cli
ror
dec
pop
push
sub
sbb
sub
stos
add
or
ss
movsb
jae
cmp
pushf
dec
lahf
or
lret
pop
mov
jl
adc
cmp
dec
cmp
scas
jb
jge
or
mov
aad
repz
mov
jbe
fdivs
mov
mov
dec
addr16
xor
sub
shrb
arpl
push
adc
and
adc
jmp
and
xchg
inc
dec
or
pop
lds
jo
repnz
and
into
mov
rcrb
push
sbb
negl
bound
adc
dec
jo
sub
loop
cmpsb
jae
arpl
bound
pop
mov
push
stos
subl
mov
adc
inc
stos
adc
add
in
xorb
data16
mov
sbb
add
push
sti
lock
mov
or
lods
cmpsl
mov
jae
dec
dec
xchg
mov
or
cmp
mov
cmc
addr16
pop
inc
mov
xor
mov
push
jecxz
push
pushf
dec
cmp
pop
aad
into
add
fimull
pushf
cmpsb
movsl
push
mov
int
aaa
fcmovu
popf
mov
in
pop
mov
jno
lret
inc
pop
mov
orl
dec
arpl
lods
mov
pop
jne
leave
inc
xor
lock
sub
shlb
xchg
ljmp
jno
fiaddl
push
xor
jg
ret
jle
jmp
lret
fdivl
mov
xchg
push
leave
in
push
outsl
lret
jae
pop
jecxz
stos
sbb
or
leave
pop
jae
and
lea
sub
xor
adc
iret
xor
or
psrld
in
dec
daa
dec
dec
aaa
jmp
enter
jne
jg
xchg
jne
cmp
or
xchg
std
por
outsl
inc
inc
xor
scas
sti
xchg
pop
int3
rcl
jg
add
aad
fisttpll
push
repnz
loope
pop
pop
jne
add
lock
and
in
xor
enter
and
dec
cwtl
ficomps
les
and
ljmp
fs
push
mov
jp
insb
nop
and
iret
mov
das
outsl
or
push
test
adc
cmp
pop
outsl
cld
mov
fiadds
mov
push
add
xor
dec
shl
ja
jb
pusha
and
mov
mov
ja
mov
xchg
test
jo
xchg
mov
dec
inc
and
or
inc
sbb
std
aas
jnp
out
pop
jbe
pop
cwtl
in
cmp
mov
push
sahf
repnz
adc
mov
xchg
push
rorb
cmc
shll
in
out
cmp
repz
mov
insl
push
pop
sub
dec
aad
cmp
ret
or
ds
aaa
nop
jbe
adc
jle
and
bound
sub
pushl
into
fwait
sub
jne
shll
jno
sbb
scas
dec
lods
inc
js
xchg
ja
xchg
sti
cmpsl
mov
pop
xchg
adc
rorl
hlt
aad
jne
and
int
movsb
pop
sahf
mov
hlt
ja
clc
or
ss
mov
dec
or
lods
adcl
lahf
push
enter
mulb
inc
ljmp
and
jecxz
pop
xchg
outsl
mov
and
into
mov
xlat
ret
incb
test
vmovaps
cmp
xchg
call
jge
mov
dec
mulb
adcl
pop
mov
mov
xorb
loop
mov
cs
mov
push
bnd
and
jg
into
add
sbb
in
cmp
xchg
adc
jge
test
rcl
push
in
cwtl
jle
shrl
popa
xchg
lea
dec
test
jbe
mov
sbb
ds
inc
cmp
mov
es
cmc
mov
mov
cmp
push
cmp
dec
adc
mov
fucomi
mov
xor
xor
test
ret
push
fnsave
int3
xor
shll
cld
cmc
fdivr
pop
mov
adc
andl
gs
xor
and
or
aad
and
cmp
push
adc
cli
fadds
sbb
and
xchg
xor
aad
sbb
sbb
jmp
xchg
ja
orl
add
xchg
dec
mov
sbb
je
lret
mov
sahf
or
mov
leave
cmpsb
mov
xchg
lock
in
mov
adc
mov
or
add
mov
out
pop
testb
mov
sar
loopne
xor
lahf
icebp
jle
adc
sahf
pop
inc
inc
scas
rcrl
adc
xchg
or
in
jbe
jg
dec
das
jmp
xor
mov
mov
push
jb
jno
cmp
shrb
sub
test
inc
pop
xchg
daa
inc
sub
adc
aaa
push
push
push
dec
stos
ja
shrb
lds
add
mov
mov
nop
shll
mov
fsts
movsb
mov
mov
enter
gs
rcl
insl
pop
and
and
add
mov
mov
dec
jo
fwait
mov
sub
js
push
inc
mov
jl
cmp
mov
push
outsb
in
faddl
js
dec
test
mov
xor
loop
ret
cmp
xchg
jno
repz
inc
fimull
sub
jae
add
bound
xchg
cmpsb
leave
les
jbe
scas
call
push
push
adc
pop
lret
movsb
lock
test
les
or
add
mov
addr16
mov
or
adcl
mov
pop
mov
jnp
outsl
ja
push
mov
mov
push
push
and
or
pop
push
push
sarb
insb
lahf
lock
ret
stos
ja
sub
cld
cmc
push
jp
mov
cmpsl
rcl
push
pop
dec
fcmovnbe
cld
sbb
dec
stc
call
and
cmp
loope
aaa
sbb
stos
sbb
cmp
or
add
or
scas
jb
push
lods
pop
mov
cmp
xor
xor
cmp
sub
insl
mov
or
scas
cmp
scas
pop
sbb
lea
xor
cmpsl
stc
fisubrl
hlt
int
iret
mov
xchg
push
add
movl
pop
sub
mov
cltd
shrb
into
mov
jp
pusha
sub
sbb
mov
insl
stc
inc
in
sbb
jle
loop
das
xchg
addl
lock
xchg
mov
push
les
sar
call
pop
add
mov
mov
or
add
gs
in
int
or
shlb
inc
divl
sub
daa
dec
add
mov
imul
aad
ljmp
out
cmp
pop
adc
test
jno
jge
cmp
frstor
int3
imul
cmc
or
scas
ret
xor
fcmovnu
xlat
out
mov
add
jl
mov
mov
sar
mov
or
ss
cmpl
inc
mov
popf
aam
jno
dec
cmp
jl
sbb
push
mov
popf
movl
cmpsb
xlat
add
out
jo
ret
xor
test
or
push
pop
xchg
cmp
call
cltd
sarl
pop
in
aad
lods
and
test
inc
adc
mov
xor
pop
inc
mov
mov
or
enter
ja
test
xchg
rol
outsl
mov
sbb
in
jmp
lret
cmpsl
stos
call
shlb
push
shlb
cmpsl
movsb
cwtl
lods
test
mov
mov
cld
es
xor
repz
popf
mov
imul
sbbl
inc
add
aad
xor
pop
fucomp
inc
insb
or
in
ficoml
in
lods
jno
cs
jnp
push
es
out
sbb
pop
push
xchg
or
inc
adc
jg
fildl
push
xlat
cmc
mov
mov
jbe
stos
add
cltd
ret
aaa
loopne
inc
iret
imul
cmp
ja
outsb
mov
lods
add
cltd
ljmp
sub
sub
lods
in
fs
pop
xor
in
jb
leave
arpl
je
add
mov
xchg
cmc
pop
daa
xchg
push
je
pop
mov
jmp
addr16
dec
imul
jae
dec
fisubs
ffreep
xlat
push
rcll
cmc
mov
xor
lcall
lret
jmp
int
movsb
pop
repz
mov
movb
sbb
xchg
call
cmp
and
xor
or
xchg
adc
jb
movsb
lds
out
lret
add
insb
shrb
std
daa
sbb
iret
jl
adc
cmp
and
test
loope
call
movsl
lds
sub
dec
cmp
int3
jo
fwait
ret
scas
and
leave
pop
loop
fmuls
scas
jns
outsb
add
cmpsb
push
jb
mov
fucomp
movl
dec
add
or
adc
mov
loop
jl
jns
sub
or
sub
jl
mov
xor
pop
jne
jecxz
adc
sbb
jo
add
loopne
cltd
sti
xchg
ret
mulb
aam
daa
std
ljmp
in
xchg
insl
xor
pop
dec
aad
sbb
dec
jnp
xor
lret
jge
push
pushf
popl
cmpsl
jns
sbb
pop
in
js
ret
pop
pop
mov
jmp
add
dec
iret
cmp
pop
lahf
fcompl
lret
pop
and
or
jl
in
inc
pushf
ss
out
pop
icebp
sub
cmp
mov
arpl
jae
aam
out
daa
mov
fisubl
xchg
xchg
call
push
test
jmp
xchg
mov
fistps
popf
jl
push
into
lods
push
imulb
pmovmskb
or
je
outsb
push
scas
jmp
scas
inc
and
icebp
mov
or
outsl
cmp
or
daa
cwtl
nop
mov
subb
pop
aam
mov
ret
bsf
scas
pop
jnp
adc
inc
mov
call
xchg
pop
or
xlat
aam
ror
fidivrs
pusha
inc
mov
or
add
mov
pop
jg
push
int3
scas
mov
rcrl
int3
mov
lock
mov
push
xchg
and
push
stos
movsl
daa
out
push
fnsave
out
dec
int
push
xor
mov
int3
sti
ficoml
js
mulb
pushf
adc
sub
jmp
imul
addl
clc
jnp
push
mov
dec
pop
repnz
mov
scas
cs
and
push
push
in
mov
push
push
sub
and
mov
jb
lahf
jno
and
cltd
cs
jp
xchg
jl
pushf
jb
jne
dec
jle
out
lcall
push
lret
mov
push
cmpsb
cmc
enter
mov
inc
sub
ret
push
imul
lods
inc
inc
jecxz
in
adc
ret
push
inc
fnsave
or
xlat
mov
pop
adc
adc
sub
fcoms
jns
or
je
rcrl
sub
subb
imul
cmp
mov
iret
xchg
or
xchg
incl
test
mov
into
je
test
sub
lahf
xor
or
mov
xchg
sbb
jle
cmpsb
arpl
mov
push
test
xchg
add
xchg
outsb
ljmp
jns
pop
adc
mov
les
clc
cmp
aaa
std
cli
inc
stos
mov
sahf
and
or
cmp
or
add
jnp
adc
icebp
bnd
inc
scas
outsl
sarl
pavgb
mov
mov
mov
test
jg
lds
js
dec
mov
into
rcrb
jno
ss
xor
pop
cmpsb
or
test
push
and
mov
sbb
mov
cmpsb
das
stos
dec
jbe
in
in
add
sub
aam
addr16
mov
hlt
icebp
add
fisubl
dec
nop
jge
out
ds
push
xorl
dec
mov
sub
adc
dec
push
push
cmp
cmp
shlb
xor
sbbl
dec
fldl
insl
mov
add
pop
stos
cmpsb
push
sub
repz
add
push
test
inc
sti
jecxz
shll
xchg
xchg
add
test
adc
sbb
lret
xor
adc
aas
pop
sbb
test
inc
cld
int3
adc
and
pop
mov
adc
insb
mov
push
jge
mov
mov
xor
clc
bound
xor
cmpsl
inc
xlat
test
adc
scas
imul
pop
xlat
jns
add
jno
inc
dec
mov
std
pop
and
das
sbb
mov
jmp
xchg
sbb
cmp
push
in
cmpsl
sbb
fcmovnbe
pushf
pop
xlat
jl
js
lea
dec
mov
mov
out
push
loop
xor
out
xor
int3
fmuls
push
imul
std
sub
out
lret
xor
insb
xchg
mov
mov
test
scas
inc
cmp
mov
push
repnz
or
sub
push
add
sub
cmpsl
inc
adc
cmp
mov
push
shlb
nop
dec
stc
pop
pop
push
sahf
inc
ret
jne
sahf
fsubrs
pextrw
pop
insb
xor
ret
dec
jmp
adc
mov
cli
testl
push
mov
aad
lahf
mov
jp
rcrl
pop
lods
je
mov
mov
adc
jbe
push
in
pxor
xor
cmpsl
jl
xchg
int3
jmp
cmp
xchg
pop
ret
iret
push
leave
mov
cltd
icebp
iret
inc
mov
adc
push
or
or
fnsave
ret
fidivrs
loopne
cwtl
sub
mov
filds
xor
fisubs
pop
fbstp
push
enter
jmp
pop
adc
sub
or
pop
push
lock
jge
aad
add
pop
inc
sub
xchg
adc
test
roll
push
sahf
mov
jb
loope
jb
inc
mov
fcmovu
and
jge
stos
xor
pop
lds
jns
cmp
sub
pop
mov
dec
adc
dec
or
out
mov
push
or
fs
sbb
mov
cwtl
push
pop
stos
xchg
je
adc
sti
notb
mov
sub
imulb
outsb
mov
mov
cmp
aad
pop
adc
cmc
mov
dec
shll
jne
xchg
or
add
push
iret
xor
jbe
and
fildll
jp
jmp
insb
push
in
or
dec
fdivrl
out
fmul
push
fnstenv
push
lret
mov
xor
fs
out
xor
sub
pop
add
pop
sahf
mov
adc
jle
imul
push
adc
dec
movsb
pop
inc
lcall
xor
decl
cli
push
pop
loope
xchg
lcall
in
into
js
jle
jecxz
mov
cmp
mov
sbb
aaa
mov
mov
and
xchg
cwtl
xor
sub
inc
dec
sbb
inc
cmp
sub
sub
xchg
fwait
mov
mov
jo
pushf
insb
out
and
ss
add
cmpsb
pushf
fwait
pop
mov
pop
ds
xchg
jne
ja
in
icebp
cmp
cmp
push
fwait
addb
lea
fsubrl
jns
movsl
daa
ret
outsl
pop
push
push
mov
inc
push
scas
shl
dec
gs
xor
aam
dec
jp
mov
dec
pop
inc
rclb
idivb
dec
xchg
mov
sahf
sbb
pop
adc
lods
or
sub
dec
enter
lret
and
sub
int3
icebp
or
icebp
ffreep
mov
mov
icebp
inc
int3
sub
nop
mov
push
fstps
mov
inc
mov
dec
negl
xor
sub
repz
jo
ret
mov
and
dec
leave
mov
push
inc
out
xor
jno
outsb
mov
hlt
orb
inc
ret
ljmp
scas
enter
lods
addr16
pop
ljmp
stos
fmuls
mov
sarb
ss
lods
cmp
or
jge
cmp
xchg
add
dec
jbe
cmp
push
icebp
inc
out
mov
fstpl
js
outsl
xchg
hlt
cmp
or
test
enter
cld
pop
sub
loopne
push
add
movsb
test
jg
add
or
mov
sbb
inc
or
subl
cmc
or
mov
or
insl
push
mov
cmpsl
test
xor
push
subb
xchg
test
cwtl
mov
arpl
mov
sbb
out
mov
xor
ds
movl
or
dec
sub
in
int
pop
inc
test
lret
test
sarl
test
cmp
push
sti
fcoml
out
mov
shll
xor
lret
mov
sub
int
fdivrl
into
andl
mov
int3
stos
xchg
push
mov
pop
xor
mov
mov
add
cli
fisttps
stc
cmp
mov
or
shl
lret
dec
dec
jg
scas
inc
pushf
jnp
stos
mov
cld
push
leave
call
mov
push
das
enter
leave
ljmp
xchg
pusha
insb
adc
out
fwait
cmp
cmp
pop
ds
out
int
test
and
jb
inc
inc
test
insl
in
xchg
or
movsb
cmp
insl
mov
ljmp
cmp
fs
jnp
cld
pop
push
test
pushf
add
mov
movsl
nop
aad
cltd
imul
das
ja
inc
fsubrl
imul
repz
loopne
jmp
mov
pop
mov
sarb
add
daa
push
lock
fidivl
repnz
adc
fcmovnb
scas
cld
dec
je
fwait
jne
xor
inc
or
cmp
xor
push
in
and
pop
push
aad
cmp
inc
pushf
or
lods
mov
cmp
adc
insl
insl
cld
negb
mov
mov
adc
in
and
jmp
in
mov
movsl
stc
push
mov
push
sahf
mov
out
fwait
add
out
pop
in
xor
mov
and
inc
xchg
add
rol
dec
outsb
rcr
insl
mov
dec
push
xor
cmp
insl
or
out
idivb
pusha
movb
xor
sub
out
jp
test
outsl
int3
mov
add
inc
in
xor
and
hlt
fwait
dec
pop
mov
in
ss
xor
or
adc
pusha
data16
lret
jecxz
pop
stc
pop
js
xchg
pusha
adc
adc
je
out
sti
mov
shrl
jp
int3
push
or
sbb
leave
test
and
std
mov
leave
fs
mov
cmp
inc
std
jbe
jmp
repnz
fldl
sbb
inc
cld
je
jg
inc
addr16
xchg
dec
sbb
lahf
btr
inc
loope
int3
in
imulb
sub
int
cmp
or
bound
add
mov
test
pop
subl
jne,pt
dec
fcmovbe
cmpb
push
mov
mov
mov
gs
fisubrl
jp
and
pop
sbb
inc
lcall
data16
scas
jl
pop
dec
fucom
jle
push
test
adc
jo
rorl
in
pop
mov
adc
fwait
das
daa
and
lret
xchg
mov
sub
cmp
mov
push
ret
pop
jge
scas
jnp
push
ds
mov
repz
jecxz
fwait
push
xchg
fsubp
push
call
ss
pop
movsl
adc
outsl
icebp
imul
pop
cltd
stos
ja
and
loope
dec
shl
cmp
mov
sbb
fdivrs
leave
addr16
shrb
inc
movsb
push
sub
and
xchg
xchg
in
das
lahf
pop
push
push
cs
int3
xchg
leave
pushf
in
dec
mov
sub
inc
mov
test
inc
lods
lret
fs
mov
loopne
lret
inc
sti
cli
push
adc
das
mov
jle
jle
hlt
loopne
sub
or
iret
pop
ss
pop
and
lret
mov
imul
outsb
imul
sar
push
pop
daa
jno
dec
push
jns
sbb
repnz
pop
xchg
push
cs
ljmp
orl
add
adcl
push
lods
push
out
addb
push
inc
pop
out
xchg
inc
fiadds
clc
add
pushf
hlt
je
push
push
shlb
lahf
aaa
add
sbb
pop
bound
jl
aaa
push
scas
inc
mov
or
andl
int
xor
mull
inc
pop
test
xchg
push
rcrl
add
push
mov
imul
out
adc
sbb
fistl
hlt
insb
movsb
sahf
mov
rcll
and
out
jne
aad
sbb
mov
test
xchg
rcrl
filds
test
popf
mov
inc
cld
xchg
sbb
sbb
inc
pop
aaa
test
mov
xor
mov
add
aam
push
stos
aas
ja
bound
ljmp
or
data16
pop
sbb
jecxz
cmp
loopne
xchg
cmc
or
cmp
jle
push
sbb
sahf
aas
jl
imulb
popf
sub
xchg
add
mov
je
push
mov
pop
sub
xor
xchg
dec
lcall
das
mov
cltd
dec
das
das
stos
pop
inc
mov
rorl
jecxz
mov
std
test
xchg
outsl
add
les
jns
ss
in
enter
mov
dec
mov
sti
mov
stos
js
fisubl
arpl
add
daa
mov
mov
dec
bound
ffreep
enter
ja
sbb
mov
dec
out
lahf
mov
adc
cmp
jb
mov
cmpsl
inc
push
idivl
mov
out
mov
rcll
mov
cmp
jne
aam
dec
out
fmuls
inc
cmp
xchg
lea
mov
aaa
adc
adc
out
mov
sbb
lds
popa
rolb
dec
hlt
insl
adc
fucom
mov
cmp
rcrl
inc
insl
incl
mov
xlat
mov
mov
mov
jae
lahf
mov
or
push
fstps
out
xchg
cmp
in
or
inc
inc
movsl
fisubrl
in
sbb
lock
pop
mov
pop
stc
push
cld
mov
cmp
or
out
out
add
jnp
or
popf
call
aad
and
mov
test
mov
loopne
lret
stos
dec
rorl
cli
adc
es
adc
pop
cltd
popf
popa
jnp
mov
push
in
mov
and
sti
mov
cmp
aas
xor
xor
movb
insb
mov
jns
mov
lahf
outsb
hlt
adc
rorb
jl
jno
movsb
iret
fidivl
cmp
sub
sahf
jb
jns
mov
sbb
xor
ja
or
jmp
jno
fidivrl
pop
aas
cmc
cmpsb
js
in
pop
into
dec
lret
out
jg
fidivl
aam
test
cmp
fsubs
loop
mov
jnp
add
test
fs
nop
mov
sub
inc
int3
mov
mov
sbbb
fcomip
loopne
fwait
jp
sarl
or
sbbb
inc
pop
mov
add
xor
cmp
or
cs
sahf
rol
mov
cmp
rcrb
pop
inc
push
pop
dec
mov
inc
sub
hlt
push
and
es
aad
scas
lcall
lret
jne
repnz
cltd
aam
hlt
adc
fildll
cmp
or
push
add
dec
push
idiv
mov
adc
mov
dec
sbb
repnz
pop
jns
cmp
repz
inc
pop
in
test
sahf
scas
add
mov
cs
fldenv
push
movsl
and
rclb
stc
cwtl
jmp
jle
jl
scas
xor
dec
leave
test
icebp
aad
ss
mov
mov
sub
add
rcr
aad
das
jp
iret
repnz
hlt
dec
pop
mov
jmp
loop
adc
mov
inc
int3
lcall
sbb
xor
mov
dec
sbb
sti
sahf
int3
mov
sti
popf
ss
xchg
sti
mov
subb
mov
pop
add
xchg
fucomi
adcl
and
stos
adc
jg
pop
ficomps
aaa
inc
dec
lods
int3
inc
insb
lret
ljmp
fnop
sarb
jb
mov
mov
dec
push
iret
mov
pop
mov
add
push
int3
insl
das
fldcw
xchg
ljmp
sbb
xchg
mov
les
in
and
ss
xchg
mov
ja
js
add
cmpsb
xchg
push
add
mov
iret
ds
int3
lret
imul
and
jle
shlb
push
pop
out
dec
inc
pop
mov
dec
scas
ss
add
mov
leave
int
or
jae
incb
lea
into
das
sub
adc
bnd
sub
xorl
cmpl
mov
sub
ss
jbe
pusha
outsb
dec
lret
sub
mov
loopne
adc
je
xor
push
jno
push
pop
testl
clc
loop
gs
push
pop
rcl
stos
sbb
sbb
stos
xor
repz
pop
fimull
test
mov
daa
int
push
dec
pop
xchg
adc
mov
sti
mov
ljmp
out
mov
int3
testb
jg
add
mov
outsl
repnz
jmp
or
int3
xlat
lret
scas
and
jp
adc
push
lret
lcall
adc
loop
inc
sahf
mov
std
sbb
in
out
pop
sbb
xor
ret
sarb
cli
fs
jle
mov
sbb
dec
cwtl
pop
xchg
adc
daa
jmp
stos
jmp
sti
mov
mov
sarb
aaa
pushf
loopne
stos
mov
shl
cli
popf
jmp
das
imul
mov
and
sub
sbb
ss
dec
insl
push
add
pushf
xchg
sub
sbb
divb
sbb
lds
shl
adc
in
mov
sbb
ret
jmp
jo
xchg
xlat
xchg
stos
inc
aas
notb
fs
dec
fnstsw
ret
pop
add
wbinvd
jbe
movsl
xor
lods
or
pop
jg
and
shrl
scas
mov
cld
hlt
sti
cld
mov
outsb
data16
mov
mov
xchg
test
imul
mov
mulb
inc
jne
pop
sub
xchg
clc
and
mov
inc
mov
test
mov
or
negl
ds
xchg
xchg
scas
cli
frstor
out
icebp
dec
sub
int3
mov
les
pusha
adc
outsb
not
test
stos
pushf
rcrl
daa
cmp
mov
int3
rol
fistpll
xchg
int
ret
mov
stos
jae
mov
pop
pop
xchg
adc
fsts
cmp
icebp
les
inc
adc
mov
lods
push
fldz
mov
mov
jg
sti
mov
loope
lock
fistl
mov
sbb
mov
lret
ss
fs
and
scas
lods
inc
xor
lods
movl
int
aad
or
mov
ja
lods
faddl
adc
cmpsl
jmp
sbb
lock
mov
xchg
shll
stos
daa
mov
inc
adc
dec
xor
xor
bound
cld
mov
pop
es
incb
pop
lret
xchg
pusha
inc
dec
ljmp
iret
pushf
shll
ret
adc
movups
mov
sub
inc
add
rcl
push
repz
dec
sbb
and
adc
mov
int3
push
shll
stc
mov
pop
out
jo
imulb
pop
cli
ret
cld
jae
in
adcl
lahf
push
and
pop
xchg
mov
call
adc
mov
cmp
stos
daa
das
jmp
pop
xchg
stos
sub
inc
scas
aas
fwait
scas
js
inc
adc
pop
std
dec
adcl
insl
jge
fisttpll
ret
stos
inc
xchg
pop
repz
ja
pop
xchg
and
dec
pusha
inc
rclb
pop
jge
pop
pop
pop
lock
sub
imul
mov
push
or
jle
mov
sub
inc
mov
orb
cmp
sti
push
pop
push
jne
push
mov
cwtl
dec
inc
xchg
out
shrb
clc
sbb
inc
mov
shlb
repnz
jl
mov
adc
in
gs
xlat
nop
sarl
movsl
mov
sub
ret
adc
gs
nop
dec
fidivs
push
lea
jbe
daa
aad
adc
push
jecxz
bound
idiv
stos
sarb
jp
dec
sti
mov
movsb
pushf
leave
sahf
push
and
sbb
out
xchg
inc
scas
adc
mov
push
sub
adc
test
xchg
xor
std
cmpsl
call
cmp
jbe
mov
mov
xchg
add
mov
stc
flds
push
push
cmp
test
sarl
mov
lds
sti
pusha
cli
sbb
or
mov
cli
mov
in
lock
ja
xchg
jns
cld
mov
movb
xor
mov
mov
pop
pop
xchg
aam
fcmovb
imul
mov
add
cld
mov
shl
sahf
xor
mov
ret
adc
sarl
repz
popf
iret
mov
sti
xchg
cli
xchg
icebp
gs
jmp
call
hlt
inc
loopne
sahf
jecxz
mov
outsl
cli
or
enter
les
in
clc
addr16
inc
sbb
lods
or
cmp
mov
jnp
pop
jae
fisubs
jmp
shll
call
xchg
roll
jge
mov
jl
sti
int3
test
sub
mov
jge
xor
les
sbb
divl
loop
pushf
xor
xlat
int
imul
push
inc
testb
jmp
test
fnstenv
jle
lahf
or
push
cs
xlat
sarb
je
fisubl
out
mov
jb
pop
xor
das
fwait
js
adc
loopne
push
mov
je
lahf
xchg
dec
data16
pop
leave
mov
cmp
popf
or
xlat
adc
adc
leave
mov
jle
adc
mov
es
cld
cltd
cmpsl
mov
pop
mov
sbbb
cmpsb
adc
lahf
mov
daa
ljmp
cld
sbb
popa
das
dec
xchg
pop
ficompl
xor
xor
out
pop
dec
pop
xlat
lods
stos
scas
add
pop
jns
lds
mov
lds
test
iret
cmp
imul
xchg
cmp
fisttpll
fisubrl
lock
jg
adc
arpl
subb
inc
loopne
lret
push
imul
cmp
sub
mov
sub
adc
jp
cwtl
imul
cmp
int3
sub
pop
sub
out
movsl
fs
jmp
or
xchg
ja
std
cmp
pop
ss
ud1
cmpsb
aad
cli
aad
mov
or
or
mov
call
dec
add
jmp
jmp
adc
pop
add
xor
fbld
aam
movsb
pop
adc
jl
jnp
icebp
stos
pop
xchg
bound
mov
hlt
dec
pop
add
in
hlt
pop
sub
ss
mov
aaa
xor
xchg
movntq
sub
popa
fldt
xchg
ret
cwtl
xlat
adc
das
mov
test
mov
aad
or
cs
mov
js
out
nop
or
mov
xor
loop
fmull
jno
out
shr
int
popl
adcl
xchg
xchg
cmp
add
xor
imul
hlt
fldt
out
mov
inc
adc
loope
int3
sub
jge
int
jae
stc
sbb
mov
in
iret
ret
xor
ret
mov
jae
loop
mov
roll
inc
jmp
mov
or
data16
pop
inc
xor
loope
push
std
mov
adc
fidivrs
in
jne
sub
add
addr16
xor
pop
lcall
movsb
add
mov
dec
jnp
or
jns
inc
xor
and
mov
cwtl
push
or
ljmp
cmc
add
pushf
sbb
fisubrl
adc
adc
mov
adc
ljmp
cmp
lods
into
rorb
push
sub
in
fstp
test
push
jp
lods
mov
jae
mov
cmpsl
in
dec
andl
mov
repnz
xchg
stos
add
movsb
lods
je
bound
push
int3
dec
fwait
jle
cwtl
push
lret
cmpsl
in
dec
sti
sbb
jg
int3
lret
rcl
pop
into
int
jae
fldenv
lahf
cltd
lock
pop
mov
pop
xchg
jle
jg
add
mov
mov
scas
adc
lret
lods
addl
pop
jg
adc
mov
mov
dec
xchg
and
into
dec
jo
repnz
cmp
push
stos
dec
je
adc
mov
lods
shll
js
inc
fsubs
jp
movsl
sub
fwait
outsb
pop
insl
or
and
xchg
xor
mov
mov
mov
in
fstp
sub
ljmp
xlat
xor
push
addr16
testl
adc
sbb
leave
cmp
lods
sub
iret
mov
test
dec
aad
addr16
adc
xor
lahf
and
ret
std
jbe
in
mov
mov
sub
gs
jb
mov
cmc
mov
add
sub
clc
sbb
and
xor
rcrl
push
push
or
inc
pop
sti
hlt
lahf
nop
int3
mov
jo
push
adc
js
or
movsb
sub
pusha
xchg
sub
ja
lret
fwait
shlb
and
movsb
xlat
addb
pop
mov
and
and
scas
ficoms
inc
negb
dec
sbb
gs
lret
or
mov
jge
shufps
cmpsl
jge
pop
cmp
add
outsb
mov
cmc
sahf
stos
add
aam
add
or
out
pop
push
daa
dec
rolb
mov
mov
or
repnz
add
sub
mov
dec
lret
pushf
das
xor
fcmovnb
lret
mov
pop
sbb
inc
dec
aad
loopne
dec
mov
and
das
or
out
sbb
jle
int3
test
xchg
cmp
inc
lea
jb
jl
adcb
nop
mov
scas
cmp
jno
ficomps
xor
outsl
in
mov
pop
das
mov
movsb
fwait
pop
xor
or
or
add
jl
jne
xor
int3
push
ror
or
mov
popf
mov
xchg
mov
mov
mov
call
insb
pop
pop
mov
xor
add
add
hlt
daa
pop
das
enter
mov
xor
addb
loop
push
lock
and
jb
loopne
test
inc
mov
jbe
in
and
push
inc
rorb
hlt
sbb
rcrb
jns
jnp
sti
rcrb
and
adc
pop
xchg
add
mov
mov
add
test
adc
out
push
fstpt
mov
in
mov
jne
adc
xor
outsl
mov
mov
xchg
xchg
dec
inc
adcb
xor
call
ss
insl
mov
inc
add
ret
add
mov
or
jg
out
pop
xchg
cmp
mov
lock
mov
mov
add
jl
dec
add
int
outsl
stos
shl
xchg
pop
in
xor
lods
mov
test
stc
lahf
dec
add
icebp
sbb
int3
add
cltd
sbb
addr16
jp
pop
in
xlat
out
fisubrl
out
nopl
add
dec
stos
pop
sbb
mov
fucomip
push
mov
rclb
add
lret
std
inc
ss
ret
jo
cli
dec
pop
add
add
add
pop
faddl
mov
popf
mov
lock
jb
and
jle
lret
divb
sub
mov
movsb
aad
ret
and
cwtl
shl
pop
stc
addr16
repnz
nop
jbe
cmc
mov
adc
xchg
mov
popa
push
sub
sarb
jbe
call
cltd
addr16
mov
jbe
xchg
jecxz
scas
test
push
mov
mov
gs
mov
pop
lea
outsl
push
es
in
push
out
xchg
cmp
lock
sbb
pop
cmp
je
lods
sbb
imul
lock
shrb
and
aam
add
dec
test
mov
mov
xchg
cs
adc
xchg
or
cmpsl
imul
xor
imul
icebp
sbb
subl
in
jne
push
cltd
in
mov
jg
jbe
ss
push
and
enter
cmp
scas
or
mov
outsb
loopne
inc
and
mov
in
movsb
ljmp
inc
jae
arpl
pusha
ret
js
cmp
int3
jg
push
dec
pop
jge
enter
xor
icebp
mov
jns
ja
rcrl
ret
mov
sub
inc
rcl
lds
inc
xchg
mov
das
mov
out
cmp
daa
cwtl
push
mov
lahf
mov
push
xchg
cwtl
bound
ret
imul
pop
andw
repnz
rorb
popa
insb
in
xchg
xor
cmp
loop
push
and
and
mov
es
mov
jb
testb
or
sahf
testb
sbb
add
cwtl
and
add
push
mov
sbb
and
pop
pop
mov
and
aam
push
pop
mov
pop
jg
lret
jno
pop
scas
test
push
shll
dec
xor
int3
jmp
iret
dec
xor
decl
int
mov
fs
test
subl
stos
insl
loop
add
pop
test
xor
xchg
fwait
dec
mov
outsb
jno
arpl
sub
mov
loopne
xor
fcomps
dec
dec
xor
mov
shll
jno
sbb
repz
insb
bound
mov
push
dec
loopne
pusha
push
xor
int
xor
fdivrl
repz
aas
push
sti
sub
sbb
idiv
push
movsl
pushl
stos
mov
arpl
pop
iret
in
cli
movsl
sub
lcall
cld
outsb
add
rcll
adc
cmp
jl
and
adc
cmp
inc
stos
and
rcl
sbb
lahf
adc
xor
mov
xor
fisubrs
dec
sbb
xor
sbb
lea
rclb
addr16
imul
or
jmp
inc
push
clc
mov
inc
dec
add
mov
jp
jae
cmpsb
ljmp
or
pop
ja
add
xlat
aam
loope
repz
push
cmp
cmp
pcmpgtb
ljmp
dec
shlb
jo
mov
jne
ja
fwait
inc
inc
jno
cwtl
or
sub
sbb
aad
inc
jmp
punpckhwd
fidivrs
jl
adc
jle
jmp
dec
cmp
and
sub
cmp
xor
fldl
cld
or
jecxz
and
sahf
popa
cmpsl
aas
jbe
inc
cld
mov
pop
rcrb
pop
add
fwait
mov
adc
jp
fwait
orb
pop
lsl
and
lods
cmp
lcall
jp
mov
jb
inc
iret
test
inc
insb
je
cld
fstps
mov
aaa
fstps
xchg
push
cli
std
or
sub
xor
dec
xlat
enter
cmpsl
test
fcoms
pop
loopne
es
cmpl
adcb
dec
adc
sti
fwait
xchg
cwtl
cmp
xchg
and
daa
or
mov
xchg
stos
pop
dec
scas
mov
cwtl
aaa
and
pop
popa
lock
iret
insl
xor
es
ret
jp
xchg
in
aaa
xor
repz
push
sbb
jnp
loopne
add
sahf
cmp
rorl
mov
jb
mov
jl
pop
add
pop
sub
pop
mov
mov
dec
aam
xlat
dec
pushf
lods
addr16
es
xlat
fwait
leave
sbb
mov
sbb
es
es
andb
stos
addb
mov
mov
xor
or
push
pop
test
adc
mov
adc
xchg
mov
and
jmp
int3
sbb
fists
das
sbb
mov
test
mov
xchg
or
xchg
aaa
aaa
push
fmull
xchg
scas
push
das
popa
cmp
xlat
mov
jg
and
push
ret
mov
test
out
call
mov
xlat
xchg
ret
cmp
dec
sub
cmp
or
cld
mov
pop
xchg
pop
test
clc
push
ljmp
leave
out
jmp
jne
popf
pop
mov
js
lods
mov
xor
subl
lds
pop
push
inc
inc
push
adc
mov
clc
inc
ret
sbb
out
cmpsb
jns
movsl
cwtl
inc
pushf
xor
rclb
in
mov
lods
and
adc
mov
iret
xlat
shrl
sti
leave
inc
push
ds
nop
shll
cmpsl
fidivrl
flds
cmp
mov
mov
mov
mov
inc
and
data16
or
xchg
jns
ds
push
inc
inc
cwtl
sbb
or
push
cs
jno
andps
and
xor
daa
sti
fxch
xor
loope
je
add
cmp
popa
mov
add
xchg
sbb
dec
mov
cmc
xchg
mov
cmc
dec
shll
ss
mov
decb
popa
ret
bound
les
push
inc
mov
scas
stos
ret
mull
sub
ja
repz
popf
dec
mov
jmp
imul
xor
pop
mov
loop
jb
mov
stos
xchg
mov
imul
pop
lcall
shll
sarb
lret
lcall
adc
push
mov
pop
push
cmp
sub
in
xchg
or
add
adcb
js
imul
sbb
mov
jge
ljmp
sahf
mov
fistl
sbb
xor
call
mov
mov
aaa
fbstp
cld
mov
mov
and
lea
lcall
aam
xor
into
js
cmp
adc
int
pop
jge
shll
xchg
hlt
cwtl
leave
negb
outsb
inc
add
jge
cmpl
jg
or
iret
leave
push
push
push
movsb
sbb
push
shrb
outsb
subl
pop
sbb
mov
cmpl
push
hlt
jo
sbb
enter
outsb
ret
cmpsb
cmc
call
xchg
enter
iret
push
pop
xchg
pop
dec
ficomps
xchg
stc
scas
xchg
pushf
shrb
out
and
nop
int3
mov
andl
mov
test
rorb
jns
push
movsl
cmc
mov
nopl
xlat
shl
aaa
mov
repz
xchg
cmp
mov
fldl
jp
in
int
ljmp
mov
mov
insl
fildl
out
push
and
shll
mov
or
mov
stos
aam
mov
jge
or
push
iret
scas
inc
test
mov
pop
inc
data16
push
lret
js
mov
aam
push
xor
jb
mov
sub
mov
adc
stc
scas
daa
daa
shll
flds
inc
lret
and
sub
enter
inc
insl
in
mov
je
sub
mov
mov
dec
out
fisubrs
inc
sbb
dec
ret
incl
push
mov
int
and
cmp
jp
shll
sub
leave
push
std
aad
inc
outsb
jns
mov
dec
pop
lahf
cmc
addr16
xor
or
ficoms
push
data16
scas
jae
or
stc
cs
mov
dec
rcl
clc
lret
mov
cmp
add
push
cli
iret
cmp
loope
rol
xchg
pop
add
mov
and
sub
rorl
jecxz
cld
jge
in
andl
stc
xor
ljmp
xchg
sbb
shrl
ret
pop
mov
sub
and
mov
outsb
and
cli
outsl
fnstenv
cltd
fidivrs
add
jne
shlb
push
sbb
jmp
les
adc
cltd
dec
pop
jmp
sti
movsl
insl
out
and
mov
out
lock
aam
enter
dec
dec
fucomp
mov
pusha
mov
adc
pop
lock
negb
pop
cltd
subb
add
call
dec
mov
inc
insb
sbb
cmp
jbe
cmp
pop
dec
push
pop
mov
jg
jo
es
push
pushf
mov
dec
lock
jne
cmp
dec
pushf
scas
sbb
pop
fdiv
js
lock
jae
mov
sar
xor
mov
inc
sbb
xor
lods
mov
add
lods
dec
pop
pusha
and
je
int3
jp
add
lcall
lock
lds
fildl
into
jns
lahf
mov
pushf
inc
movsb
fistps
loopne
xchg
and
cmpsb
addb
mov
jmp
scas
jbe
sbb
sbb
aaa
ret
jb
mov
mov
mov
je
scas
imul
call
push
jecxz
mov
inc
dec
idivl
icebp
jmp
repz
stc
push
stos
cli
jmp
xor
imul
pop
in
arpl
mov
cmp
addr16
sbb
mov
aaa
mov
push
hlt
negb
pop
inc
pop
pop
inc
inc
xlat
sub
cltd
imul
mov
push
leave
fs
xchg
jnp
popf
cmp
push
xchg
aaa
std
xchg
mov
xchg
out
sub
inc
out
xchg
push
test
mov
mov
call
push
mov
jae
notl
mov
js
clc
mov
shlb
adc
out
fs
sub
movsb
into
adc
push
mov
test
adc
mov
loop
mov
aad
or
mov
mov
push
inc
sub
lds
mov
stos
xchg
inc
rcll
addr16
ss
in
pop
cltd
dec
sub
jge
movsl
lea
mov
xor
int
jb
jge
and
addl
sbb
push
mov
loop
mov
mov
fs
or
fcmovnu
nop
adc
sbb
and
xchg
fs
push
lret
int
dec
bound
mov
dec
xor
push
sahf
mov
test
mov
push
in
cmpsb
iret
aam
lods
cmp
adc
cmp
add
pop
rorb
in
pop
iret
and
add
sub
xchg
faddp
cmpsl
pop
fadd
xchg
mov
testl
cmc
xchg
adc
jbe
rcr
pop
test
and
cmp
gs
inc
jnp
cmp
iret
cs
test
mov
sbb
and
add
sbbb
mov
int3
addr16
cmp
lcall
das
orl
mov
inc
out
leave
sbb
andl
dec
sub
xchg
mov
test
test
xchg
cmp
pop
shrb
ret
faddl
adc
sbbl
outsl
inc
xchg
push
adc
test
push
dec
out
jnp
fimuls
test
gs
mov
push
test
push
xor
into
push
mov
mov
jg
xchg
mov
sbb
pop
mov
jbe
das
into
out
inc
aas
gs
cmpsb
ljmp
int
mov
aaa
mov
jl
call
loope
add
pop
lds
stc
cmp
mov
lret
lods
jp
lods
aam
pop
cld
rcl
hlt
cmpsb
mov
fwait
push
mov
jmp
and
insl
imul
aam
mov
dec
hlt
inc
pop
in
fisttpll
lea
push
call
adc
mov
mov
jb
mov
mov
mov
and
icebp
sbbl
into
mov
pusha
pop
adc
aam
fisubrl
bound
or
jno
fildl
bound
flds
xor
push
mov
xchg
addr16
and
clc
cmp
dec
lret
xchg
nop
push
stos
jge
mov
cmp
push
aam
mov
xchg
adc
jae
addr16
popa
rcl
ja
pop
xchg
sub
dec
repnz
decb
mov
mov
adc
xchg
sbb
jp
insl
push
das
sub
lods
pop
aam
inc
push
dec
mov
inc
push
insb
mov
xchg
or
cs
pop
hlt
pop
mov
push
xor
dec
out
inc
stc
cli
and
xchg
test
pop
push
mov
repz
xor
dec
cmpsb
adc
jmp
push
cmp
add
xchg
call
add
cld
test
lea
scas
fistl
and
add
inc
fucomi
inc
mov
ds
repnz
cmp
push
into
pop
or
or
jo
sub
jle
cmpl
jno
out
aam
fs
das
enter
inc
popa
mov
insb
stos
sbb
mov
dec
push
nop
rcrl
pusha
mov
mov
sarb
cmp
inc
js
stc
cmc
jge
push
and
dec
in
jno
cwtl
sbb
loop
pop
jle
sbb
cltd
xor
and
dec
push
xlat
call
imul
gs
mov
push
xchg
addr16
ret
push
or
or
dec
sti
enter
mov
imul
aas
aaa
xchg
sub
mov
addr16
xchg
lock
stos
fstl
jl
mov
and
fnstsw
lds
pop
jmp
mov
ret
cld
jl
dec
in
stc
dec
out
mov
fistps
cmp
sbb
repz
inc
or
rcpps
sub
daa
outsl
in
imul
int
xchg
pop
or
jae
mov
data16
lea
add
pop
push
adc
pop
push
in
mov
inc
cpuid
cli
lods
fwait
or
in
cmp
jl
xchg
aaa
add
lahf
pop
cs
icebp
mov
dec
pop
in
mov
cmp
push
jg
loopne
adc
pmulhw
push
add
sbb
cmp
lea
or
iret
pop
out
popl
sbb
out
fiaddl
mov
mov
ds
ja
xchg
cli
outsb
jp
pushf
sbb
idivl
pop
movl
jecxz
lods
xor
popf
mov
fcmovnb
push
pop
xlat
out
adc
xor
cmp
mov
sahf
call
adc
rclb
jg
push
insl
mov
cmp
and
js
xor
dec
cmpsb
xor
test
mov
rcr
dec
and
enter
test
sbb
cwtl
das
nop
hlt
or
lock
pop
in
and
lcall
push
popa
movsl
icebp
dec
cld
std
cmp
dec
stc
cmc
mov
ret
shl
sbb
pop
mov
test
rcl
test
jle
inc
cmp
psubd
jnp
jnp
jb
loope
sub
xchg
arpl
outsb
repz
ljmp
out
fstl
dec
stos
xchg
cltd
outsl
cmp
rorl
and
add
jbe
sti
mov
mov
xor
xor
int
xor
mov
incb
cmp
loop
daa
push
test
jle
add
test
daa
dec
dec
cmpsb
daa
xor
in
aas
lds
repz
adcl
int
sub
scas
stos
cltd
inc
inc
sarl
js
ss
jecxz
jo
lock
inc
jb
lret
in
das
inc
pushf
and
leave
xor
pop
ret
mov
je
pop
inc
aaa
cmp
mov
cmp
and
mov
mov
pop
xchg
sub
enter
repnz
das
dec
int3
mov
or
aaa
sbb
mov
dec
pusha
xor
xlat
push
testb
sbb
dec
push
mov
sahf
ret
jbe
outsl
mov
dec
push
mov
sbb
or
mov
cwtl
lret
pop
or
ffreep
jb
dec
xchg
decl
cmpsb
pop
pop
xor
fs
pop
shll
rorb
addl
mov
inc
push
aam
xchg
add
sbb
sti
xor
bsf
mov
or
pop
xchg
fisttpll
scas
jne
inc
loop
gs
pop
jp
scas
xchg
int3
pop
xchg
add
inc
cmpsb
pop
dec
push
jmp
imul
jg
sub
aas
imul
and
addl
sbb
pop
or
inc
std
insb
aad
add
push
js
inc
jecxz
pushl
mov
cmpb
popf
jg
cld
xchg
call
daa
lahf
into
pop
mov
push
lods
outsl
mov
into
sarw
adc
jno
push
lret
jns
jecxz
pop
popa
aas
cmp
push
cmpsb
mov
ja
cwtl
adc
mov
nop
sub
int
cltd
test
push
pusha
push
fidivrs
call
sub
pop
in
jl
lahf
and
and
and
ja
jecxz
test
mov
inc
add
inc
dec
jae
push
sarl
int
std
pop
mov
test
add
in
jns
push
imul
sti
jne
fnstenv
mov
dec
dec
ja
sbb
dec
push
jecxz
xchg
pop
cs
inc
in
fcmovnu
fwait
scas
out
cmp
cmpsb
cmp
sub
and
test
mov
cmp
or
add
fdivrs
fdivrs
push
std
fisubrl
rcl
sti
push
call
or
pop
daa
jle
hlt
movsl
add
mov
aaa
lea
incl
fdivrs
test
and
and
xor
js
or
dec
cmp
dec
jne
and
stos
cmp
inc
sub
adcb
push
cmpsl
int3
inc
push
outsb
shlb
push
sub
pop
lret
xor
xor
add
psllq
add
test
ja
shll
pop
sub
dec
pop
dec
ret
xor
dec
or
jmp
fldl
fisubrl
and
mov
mov
lods
xor
test
mov
jp
mov
mov
pop
dec
sbb
jo
movsb
jle
cmpsl
into
test
loop
inc
xchg
jns
daa
andb
stc
jecxz
cmp
sub
add
mov
pusha
mov
hlt
pop
xchg
add
mov
cs
jg
mov
insb
outsb
test
aad
or
inc
dec
pop
xor
mov
adc
xor
out
mov
mov
ret
aaa
sub
dec
push
push
inc
jecxz
add
mov
adc
push
pop
sub
sub
loopne
divb
or
mov
paddw
add
shrb
idivb
lahf
scas
mov
imul
pop
mov
out
push
fsubr
cmpsb
insl
fwait
mov
xchg
cld
lods
cmp
std
es
cli
add
aas
inc
popa
test
or
out
mov
les
icebp
mov
les
lds
push
mov
ret
test
aaa
jecxz
lods
push
out
xchg
and
sti
mov
adc
sub
fcoms
cwtl
sbb
or
icebp
popa
mov
pmulhuw
lods
sub
mov
out
pop
iret
adc
popa
push
dec
repz
mov
rorl
jb
xlat
pmaddwd
jge
push
hlt
mov
bound
sub
loop
xor
insb
cmpsb
cs
cmpsb
stc
or
xchg
sbb
hlt
enter
mov
pop
lods
and
mov
ljmp
sbb
or
lods
sub
and
and
repz
xlat
mov
rorl
les
call
shrl
adc
or
pop
popf
shrl
dec
adc
inc
dec
jg
dec
pop
dec
dec
test
mov
inc
hlt
aas
jbe
popf
in
imul
pusha
cltd
pop
mov
add
cmpsb
mov
fisubrl
mov
inc
pusha
lahf
movsl
jg
neg
fwait
sbb
in
or
cld
dec
add
cli
mov
cmpsl
rcrb
outsb
aad
fstpt
sub
shl
sarl
cmc
int3
push
mov
push
in
xchg
cmpsl
mov
in
jmp
jmp
add
test
icebp
push
sbb
movsb
adc
sub
pop
ljmp
mov
fistpll
or
fucomi
ljmp
jmp
mov
out
mov
ss
ja
xchg
inc
std
inc
in
and
mov
pusha
push
jg
les
xchg
xor
add
insb
xor
cmp
fwait
lods
and
cmp
das
movsl
stos
cld
iret
mov
push
ret
mov
adc
pop
inc
xchg
cmp
adc
jae
cli
jno
loopne
pusha
lds
fwait
repz
ret
or
sbb
jne
bnd
sbb
inc
loope
iret
push
scas
or
test
rcrb
lock
xchg
pop
xlat
sub
push
cli
jno
je
xor
add
mov
jbe
push
pop
jnp
mov
xchg
jmp
pusha
fistl
mov
dec
dec
push
arpl
add
lock
inc
xchg
mov
nop
loop
sub
and
mov
test
in
jge
push
jmp
xchg
imul
lret
pop
stos
mov
xchg
jo
dec
push
pop
repz
icebp
xor
and
cmp
aas
ret
xor
add
dec
jle
push
mov
outsb
in
insl
in
xchg
push
jle
push
adc
inc
std
mov
push
in
daa
and
les
mov
inc
mov
addr16
dec
xchg
icebp
xchg
pop
lods
aaa
stos
mov
xchg
das
es
xchg
nop
xchg
inc
adc
pop
sbb
mov
or
outsl
cmp
mov
sbbl
xchg
clc
add
inc
shrl
adc
out
cmp
mov
rcrb
sbbb
jo,pn
mov
mov
cmp
push
jbe
jmp
outsb
jle
sahf
ss
push
aam
in
mov
jmp
mov
popa
mov
movsl
pop
rol
dec
or
mov
jl
int
mov
fs
pusha
jo
add
ss
sub
push
mov
sbb
int
into
popa
je
sti
inc
or
mov
pusha
dec
cld
xchg
xchg
lds
push
mov
inc
ret
jle
xchg
xchg
ss
les
jne
pop
jecxz
xlat
out
insb
scas
or
test
push
sete
gs
cwtl
mov
add
repz
test
cmp
adc
xchg
cmp
iret
inc
jecxz
movsl
outsb
pop
movsb
jecxz
push
fcmovu
fwait
mov
sub
or
and
rolb
adc
loope
aas
xchg
push
lret
jae
pop
cs
xchg
fdivs
pop
xor
inc
jae
and
and
into
mov
lcall
aam
xchg
mov
insb
sbb
push
cmp
into
dec
daa
mov
in
mov
leave
adc
cs
xchg
mov
mov
dec
xchg
adc
push
shrb
pop
cmp
inc
adcl
cmpsl
sbb
lcall
fiadds
mov
mov
xchg
out
push
inc
mov
ja
sub
mov
jle
repnz
fnsave
sbb
cli
adc
adc
leave
xor
ds
or
clc
repz
mov
cmp
dec
das
jmp
gs
nop
xor
adc
scas
fadd
ljmp
fwait
push
cwtl
loop
sahf
or
test
arpl
dec
sub
lods
mov
push
jbe
cwtl
jno
repnz
ss
scas
jbe
ret
fistl
sub
push
adc
mov
lock
pushf
mov
mov
sarb
into
test
lret
mov
push
adc
mov
rol
push
negl
enter
nop
dec
pop
sub
or
push
mov
mov
adc
fwait
adc
ret
mov
mov
icebp
stc
fwait
push
test
mov
pusha
movsl
mov
sti
hlt
in
cmp
jecxz
out
pop
jg
fwait
adc
iret
cmpsb
adc
imul
stc
jle
and
call
or
adc
bound
enter
shll
adc
mov
dec
movsl
jno
inc
je
push
mov
jo
fmull
sub
or
mov
pop
mov
in
dec
in
xorl
mov
mov
or
das
or
hlt
sub
mov
out
idivb
in
pop
mov
orb
ljmp
xlat
std
mov
mov
mov
int3
mov
jle
cli
xchg
adc
add
daa
jo
shlb
subb
bound
scas
lea
leave
dec
jl
idivb
aaa
mov
int
xchg
mov
push
dec
addb
pop
mov
mov
jmp
mov
mov
shl
loopne
pusha
bound
aad
and
je
pusha
mov
push
xchg
mov
add
sahf
pop
adc
push
mov
add
xchg
jle
jmp
and
mov
add
add
ljmp
aam
xchg
into
pushf
jo
xor
mov
pop
mov
jns
sbb
dec
aas
rcr
push
pop
rclb
sahf
xchg
lods
adc
push
ss
push
cmp
push
push
push
in
movsl
xor
push
das
push
ret
mov
scas
test
push
sub
push
mov
sahf
cmp
ret
mov
sub
aas
sbb
mov
xlat
mov
dec
cmp
lea
test
mov
je
jne
or
repnz
repz
sbb
xchg
cwtl
sbb
inc
mov
sub
push
scas
mov
xlat
rcl
mov
addr16
or
add
mov
add
and
xchg
dec
push
push
and
add
push
mov
pushf
pop
ret
lods
dec
test
dec
and
fucom
cmp
jo
xor
mov
fiaddl
mov
test
into
pop
jb
dec
cmpsl
sub
pushf
jmp
addr16
jno
pop
lret
lea
xor
fistl
fwait
or
inc
push
aaa
pop
leave
cmp
xor
pop
or
xor
cmp
cltd
xchg
mov
lcall
mov
out
pusha
mov
pop
das
jbe
pop
insb
sub
cs
cwtl
add
push
mov
xchg
aaa
jg
mov
fcomp
jno
test
mov
scas
jle
add
fcmovb
adc
les
out
pop
push
sbb
fcomi
push
mov
mov
cmp
xorl
and
sub
bound
stos
scas
test
xchg
inc
xor
push
fists
xor
loope
cli
adc
cwtl
jb
push
int
or
xor
aaa
xchg
sbb
repnz
rcr
decb
mov
loope
repz
enter
jbe
jbe
mov
rclb
aaa
daa
stos
scas
loopne
lcall
adc
inc
dec
and
jnp
test
lock
xor
aam
imul
sub
call
aaa
sub
push
inc
xor
mov
pop
sbb
leave
movsb
test
or
and
negl
or
loope
pop
ret
or
scas
mov
sub
push
mov
xor
or
cmp
inc
lcall
inc
test
fimull
pop
out
inc
pop
cmpsb
roll
sbb
es
shrb
cltd
jp
pop
or
or
dec
jmp
mov
sbb
xchg
fprem
xor
xchg
mov
andl
push
inc
pushf
mov
lods
call
dec
cmp
notl
xlat
mov
test
jecxz
ret
and
pop
mov
adc
add
clc
or
js
insl
out
adc
mov
fidivs
sbb
add
push
iret
push
stc
in
xor
xor
in
lods
push
dec
cmp
ficomps
or
adc
add
rorl
aad
stos
nop
adc
jg
and
inc
pop
scas
sbb
add
and
xchg
mov
mov
cmpsl
xchg
cmpsl
lret
cmp
das
mov
mov
sbb
jb
inc
aam
xchg
sbb
jae
aad
cmpsb
sub
popa
int3
mov
inc
movsl
repnz
sti
inc
fmull
fmul
addb
jp
add
mov
xor
inc
fsub
jbe
sbb
jmp
daa
mov
jbe
pop
jg
and
cld
push
lock
std
pop
mov
cs
loopne
in
sbb
nop
pop
lcall
cld
fsubl
mov
inc
pop
out
stc
mov
sbb
add
add
jno
inc
lock
aaa
jbe
int
add
mov
sub
push
pushf
or
fs
dec
movsl
out
lahf
jo
sti
mov
mov
dec
fisubrl
mov
and
repz
dec
dec
iret
adc
sahf
lock
into
fdivrp
loop
stos
leave
bound
leave
insb
repnz
xchg
mov
mov
adc
push
dec
mov
lock
dec
out
sbb
ja
cld
jg
pop
xlat
cmp
fildll
pop
lock
and
mov
adc
push
lcall
stos
cmp
mov
mov
test
ja
or
xor
bound
enter
sahf
adc
ja
fcmovbe
in
mov
dec
loop
popa
mov
pop
int3
mov
decl
or
or
inc
mov
movsl
cmpsl
inc
cli
int
pop
mov
loope
clc
xor
aaa
and
mov
jl
jno
adcb
jae
dec
int
push
inc
jg
mov
sbb
fs
xor
lret
cli
pop
adc
xor
inc
lods
add
jno
cmp
jns
pop
xchg
shll
icebp
cmpsb
mov
mov
and
outsl
jbe
daa
int
ss
xchg
outsb
pop
sbb
loop
arpl
aad
adc
aam
mov
out
test
rcrl
xor
sbb
aaa
je
aas
scas
ljmp
lcall
outsb
xor
dec
ficoml
nop
pop
repz
dec
loope
lret
pop
scas
pop
outsb
mov
call
inc
xchg
lds
scas
ds
inc
stos
cmpsl
fisttpl
pop
arpl
and
dec
xor
sub
push
scas
inc
mov
rorl
adc
test
or
adc
xorb
mov
cmp
xor
push
mov
outsb
add
dec
arpl
in
mov
or
mov
cmp
das
adc
pusha
shrl
das
adc
cld
sbb
jg
cs
adc
repnz
sbb
push
neg
or
adc
insb
push
mov
dec
testl
sbb
pop
js
mov
mov
popf
cmp
jecxz
fdivrp
ja
jle
testl
inc
xor
lods
scas
incl
mov
xor
xchg
into
xchg
xchg
mov
lock
int
test
mov
lea
pop
mov
cltd
ret
sbb
mov
push
sti
lcall
testl
add
sub
xchg
sahf
int3
rorl
jl
pop
cmp
shll
lods
add
adc
lcall
movsb
mov
mov
mov
rcrl
out
lock
hlt
sub
dec
adc
ret
push
sbb
movsl
adcb
xor
xor
dec
or
xchg
arpl
int
mov
add
hlt
mov
test
aam
icebp
mov
lds
sub
push
mov
inc
jae
sar
lahf
dec
sub
ret
pop
push
cmpsl
inc
pusha
push
jae
sub
test
scas
mov
cwtl
movsl
rcrb
mov
test
sarl
jo
sar
pop
repz
stc
jecxz
les
and
in
sbb
sbb
lods
shll
adc
fldenv
fsubrl
cmpsl
jl
add
jp
dec
test
lds
inc
sub
subb
cld
movl
popf
test
adcl
mov
int3
or
sub
push
adc
fsubrl
jbe
dec
mov
or
std
ss
cli
mov
inc
shlb
cmp
sub
inc
xor
mov
jo
inc
repnz
jge
add
and
scas
outsl
frstor
jbe
loopne
xchg
inc
stos
add
les
sub
inc
leave
mov
pusha
rep
pushf
pop
addl
xchg
xorl
clc
pop
pop
xchg
xchg
sbb
inc
cmp
jo
mov
mov
sbb
pop
mov
xchg
fwait
ss
dec
mov
roll
mov
push
loope
push
into
notl
scas
push
jecxz
mov
adc
or
ror
xchg
inc
pop
aam
dec
insl
jb
push
add
int3
jo
nop
es
jae
lret
lret
inc
add
lock
arpl
xchg
xchg
cmp
adc
mov
call
outsl
mov
bound
mov
movsl
adc
pop
fdivrs
dec
dec
les
out
out
cmp
ret
push
xchg
cs
scas
xor
nop
mov
test
push
testb
pushf
cmpsl
jge
adc
lahf
mov
mov
add
cli
pop
push
adc
push
and
sub
pusha
fadds
cli
mov
incb
mov
pop
cmp
mov
dec
sub
xor
sbb
call
pop
push
fsubl
nop
xchg
sbb
mov
cmpsl
leave
mov
shlb
insl
je
inc
and
sub
xor
mov
outsl
or
mov
orl
add
jbe
push
outsl
test
push
repnz
adc
mov
aaa
cmp
push
xchg
out
mov
xchg
mov
push
lret
sbb
pop
cmc
add
int
adc
scas
iret
sub
add
outsb
dec
movsb
arpl
outsl
cs
mov
mov
or
jo
dec
movsb
test
push
add
enter
hlt
push
jo
xchg
insb
arpl
mov
ret
mov
and
stos
pop
cmc
stc
icebp
mov
pushf
aad
and
sbb
adc
xchg
fbld
xchg
jp
xor
cmp
mov
test
shl
add
mov
ret
iret
popf
packsswb
pop
nop
mov
xchg
imull
pushf
test
lea
add
into
and
xchg
pop
aad
jno
and
in
add
adc
repnz
and
push
cmpsb
insl
sbb
pusha
add
stc
add
mov
sub
mov
push
mov
dec
movsl
inc
mov
and
and
mov
or
div
loopne
std
and
xchg
dec
mov
inc
push
mov
mov
int
dec
mov
jle
adc
es
insl
aaa
mov
xchg
jl
cltd
dec
test
fwait
xor
mov
cltd
shrl
fstpl
aas
xchg
mov
insl
push
pop
add
out
out
in
clc
push
pop
cmpsl
loope
mov
push
lds
jmp
pop
daa
pop
mov
dec
popf
push
out
mov
and
pop
inc
xchg
pop
aaa
jmp
mov
imul
leave
jno
scas
pop
xchg
rcrb
leave
mov
loop
dec
aas
leave
cmp
lds
push
add
add
cs
mov
stc
push
negb
or
les
jl
add
pop
sbb
jg
mov
aas
je
loop
mov
movaps
pop
mov
sub
mov
pop
addr16
sbb
inc
in
sbb
aaa
or
repnz
mov
mov
notl
adc
pusha
sub
xchg
xor
mov
add
cmc
test
dec
or
dec
pushf
dec
scas
mov
pop
mov
or
adc
js
cmp
xchg
dec
sbb
loope
mov
ret
xchg
xchg
shll
mov
or
out
insl
adcl
orb
pop
mov
xchg
add
shlb
sub
aam
lods
pop
cmp
arpl
mov
adc
fisubrl
mov
pop
adc
out
test
and
and
jecxz
sub
sub
loop
sbb
and
push
xchg
cmpsb
add
out
out
push
adc
jb
sbb
mov
sahf
push
inc
in
jge
aam
jbe
dec
sbb
push
pop
sbb
hlt
movsb
push
aam
lret
out
inc
cwtl
xchg
lcall
cwtl
mov
mov
pushf
fdivrs
lods
sub
test
call
mov
insb
push
shl
ss
and
jp
fidivl
adc
dec
dec
insb
mov
test
lods
lock
je
pop
mov
mov
xchg
ficoms
shll
scas
pop
add
sub
cmc
mov
push
ret
jno
add
and
sti
into
cs
frstor
inc
icebp
mov
dec
mov
gs
mov
xor
inc
test
mov
push
mull
xor
gs
push
push
loop
std
adc
pop
adcl
add
add
jb
push
jne
add
mov
clc
es
inc
hlt
rorb
rcll
scas
mov
mov
arpl
add
inc
dec
pop
mov
inc
jne
repz
or
rorb
jp
add
jae
shl
pop
mov
inc
dec
psllq
incl
fistl
dec
mov
incl
xchg
xor
jecxz
popa
inc
orb
xlat
mov
mov
sub
mov
cli
andl
in
mov
mov
and
sbb
sbb
dec
hlt
sti
negl
into
adc
pop
mov
or
sbb
cmc
nop
sti
pop
cwtl
push
cmp
fidivrs
jns
popf
inc
mov
stos
fsts
sub
jne
push
jo
jge
or
loope
and
jb
push
jmp
pop
inc
jno
insb
inc
or
ds
mull
and
push
lret
pop
cmp
push
inc
in
xchg
test
shll
loop
jge
sbb
bound
sbb
imul
dec
lret
movsl
leave
mov
adc
pop
sahf
mov
das
pop
pop
lahf
cmpl
xlat
inc
jbe
xchg
add
mov
push
dec
fisttpl
pop
xor
stc
pop
push
out
mov
pcmpgtb
call
or
adc
push
fcoms
push
rcr
les
push
in
dec
popf
loopne
jl
inc
aam
cli
fmuls
jno
lcall
cmp
adc
stos
jmp
test
jo
and
das
loopne
mov
or
push
sbb
pop
lods
aaa
mov
into
sbb
popf
push
fiaddl
or
dec
cmpsl
push
in
add
cmp
jmp
sub
repnz
cmpsl
mov
in
xor
ljmp
adc
in
pop
shl
push
jns
mov
cmpsl
mov
cmp
mov
sub
mov
popa
cwtl
jno
lea
cmpsl
aam
imul
pop
scas
in
arpl
inc
add
in
inc
mov
and
sbb
jmp
iret
enter
jns
loope
pop
mov
pmullw
mov
js
imul
mov
xchg
pop
sahf
es
mov
in
mov
push
fimuls
mov
addr16
mov
xchg
push
not
cmp
hlt
shll
shl
out
into
das
pop
cmp
inc
arpl
xchg
mov
fucomp
cmp
icebp
nop
mov
or
movsl
xor
cmp
pop
ljmp
cmp
aam
sbb
rcrl
mov
in
push
xor
mov
mov
jl
ret
aas
mov
popa
adc
or
xchg
xchg
test
leave
icebp
add
add
jle
mov
repz
xchg
inc
jecxz
or
mov
and
push
cltd
fldt
push
adc
int3
aad
outsl
sbb
or
mov
mov
insb
nop
movb
test
jle
into
xor
scas
cmpsb
cmp
inc
rorl
ficomps
and
jg
movsb
lcall
insb
std
mov
fildl
or
mov
sub
jp
add
test
pushf
jnp
push
adc
dec
adcl
mov
mov
sub
pop
mov
fwait
in
ljmp
push
xor
loope
and
gs
push
jl
sub
call
int3
adc
mov
clc
mov
sub
scas
arpl
push
popa
add
leave
mov
sar
push
sbb
sahf
std
push
sbb
les
pop
sbb
ljmp
cmpsl
jns
add
sub
xchg
out
cli
cmp
loopne
shr
push
fcomps
xchg
adcl
roll
sarb
cmpsb
lahf
and
add
sbb
icebp
dec
jmp
inc
test
decb
jle
jle
adc
es
inc
mov
cli
nop
sbb
xchg
xchg
mov
fimull
xor
sbb
pop
shlb
shlb
adc
sbb
inc
add
pop
mov
mov
pop
bound
cwtl
jo
popa
filds
insb
repnz
jae
fs
mov
pop
xchg
addr16
jb
mov
insl
cmp
inc
jmp
lea
inc
xor
cmp
add
cld
and
jg
sub
mov
mov
insl
test
mov
dec
pop
cwtl
add
insl
pop
cltd
hlt
xchg
pop
cmpsl
jmp
loopne
pop
inc
and
dec
dec
mov
popl
fstp
and
mov
dec
pusha
cmp
iret
xor
jge
es
addr16
test
and
fistpl
jo
cmpsb
or
jb
fisttpll
sysret
mov
mov
cmp
into
and
out
enter
cmp
xchg
popa
std
sti
mov
cmp
aam
leave
lea
xor
xor
mov
or
inc
je
sub
outsb
xchg
fstps
and
es
gs
addr16
pop
fbstp
and
jae
inc
shrb
jne
aas
cmp
pop
rcll
lret
sub
mov
mov
or
jns
fadd
and
mov
out
push
mov
cmp
and
rclb
sbb
push
loope
in
pop
sahf
add
fs
daa
mov
jl
sbb
jo
xchg
jno
lret
dec
jbe
mov
xchg
setg
pop
cmp
mov
add
mov
pop
cmc
and
add
call
sarl
ret
and
test
divb
cltd
lcall
xor
loopne
scas
add
dec
mov
add
loopne
add
mov
in
dec
adc
jo
mov
fucomi
lret
cli
fldcw
or
imul
cwtl
out
cmp
test
shrl
lret
add
call
dec
popf
aas
adc
sahf
inc
icebp
pop
mov
jo
adc
xchg
dec
cmp
add
and
dec
fwait
ljmp
cmpsl
pop
and
bound
mov
and
jbe
sbb
jmp
mov
arpl
movsl
jo
sti
lock
fsubrs
push
or
or
nop
sub
int
adc
mov
loope
pop
insb
pop
repz
imul
mov
into
jg
sbb
fidivrl
xchg
inc
pushf
aam
rcll
leave
or
test
jne
or
mov
and
daa
add
dec
cmp
dec
std
adc
xor
adc
into
aad
fstl
mov
jle
mov
fimuls
data16
loope
loopne
pop
inc
pop
push
and
lret
inc
in
and
mov
loopne
or
jae
lds
rcrb
int3
mov
popa
dec
xchg
aam
cmp
imul
jb
pop
adc
xchg
cmpsb
arpl
mov
pop
push
ficoml
cmp
clc
jg
aaa
jne
sbb
ja
rorb
loop
pusha
cltd
adc
lcall
add
fiaddl
loopne
xchg
pushf
data16
repz
inc
decb
mov
mov
mov
jns
jle
cmp
dec
cmpsb
insb
fsts
add
decl
pop
mov
xor
add
or
repnz
rclb
mov
pop
mov
dec
rcll
mov
mov
adc
mov
mov
in
mov
inc
cmp
std
out
nop
add
cmp
mov
flds
xchg
fimull
mov
fs
dec
mov
lods
aam
aam
xchg
stos
fwait
pop
leave
mov
shl
movsl
addl
sub
push
idivl
outsb
xlat
or
repnz
mov
fisttpl
pop
mov
xor
jge
loop
es
lds
pop
sub
int
rcrl
cmp
mov
sbb
xchg
xorb
sub
scas
and
outsl
xor
sub
fistpll
push
xchg
dec
fisubrl
or
fwait
xor
push
ret
dec
pop
lret
decb
leave
mov
cli
xor
inc
outsl
xchg
cs
and
sub
pushf
mov
mov
xor
lds
dec
dec
ja
scas
jp
cmp
sbb
subl
push
mov
mov
ja
fs
dec
fidivrl
mov
sub
xchg
test
imul
movsl
je
pop
fs
out
cmp
and
jg
outsb
sbb
fdivr
inc
add
mov
pop
xlat
cmp
lcall
mov
ja
pop
lods
dec
push
enter
test
jecxz
and
call
adc
mov
adc
sub
mov
xchg
int3
dec
jno
in
into
outsb
pop
add
inc
lea
mov
outsb
inc
inc
cmp
dec
mov
mov
fwait
ret
ret
out
sbb
insb
push
inc
mov
outsl
jge
imul
adc
pushf
push
sysret
mov
sbb
iret
cwtl
sbb
add
fidivrl
lock
jbe
or
xchg
call
push
fwait
mov
pop
xor
mov
mov
loopne
or
inc
mov
stc
popaw
jle
adc
jbe
cmp
xchg
dec
mov
adc
inc
sub
sbb
xchg
or
mov
ret
out
xchg
mov
lret
negl
xor
dec
push
clc
out
add
nop
fwait
lret
movsb
insl
mov
xchg
fisubrl
lea
add
adc
in
jnp
mov
test
icebp
stos
outsl
leave
lea
ret
cld
inc
add
xchg
dec
outsl
and
lea
arpl
adc
fsubr
push
mov
les
xchg
cmpsb
sub
xor
js
mov
ret
cmpsl
lods
pop
sub
xchg
pop
fidivrl
repnz
pop
jle
xor
push
ret
mov
and
xor
movsl
or
aam
cmpb
in
jg
cwtl
dec
adc
cmp
xor
mov
cmp
cmp
mov
fsubr
mov
and
lds
stos
push
and
loop
ja
les
adc
push
mov
mov
pop
ja
pushf
sub
push
in
das
fmull
jb
adc
shrb
nop
xor
pushf
cmc
dec
sub
push
sub
pop
xor
ds
push
dec
adc
add
sub
mov
scas
inc
pop
push
icebp
pop
sbb
les
inc
lahf
aas
mov
leave
enter
push
push
push
jns
in
or
cwtl
test
mov
cltd
out
cmp
sbb
call
pop
xchg
sbb
cmp
imul
xor
je
negl
xchg
cmpsb
repnz
sbb
jp
push
sahf
add
out
shl
imul
mov
negl
nop
loop
pop
and
aaa
or
sub
std
sub
movsb
cmp
fs
xchg
mov
mov
ret
sbb
mov
fwait
scas
popa
adc
jns
xor
dec
and
pop
jmp
int3
sub
jg
push
pop
cmp
dec
jg
js
and
clc
mov
dec
repz
icebp
ss
sub
fwait
xor
outsl
xchg
sbb
iret
push
sbb
jle
stos
mov
cwtl
lcall
or
push
hlt
push
jg
mov
cs
fistpl
push
and
ficomps
push
or
jbe
sti
mov
sbb
cwtl
pop
inc
cmp
push
jno
enter
test
mov
cmp
mov
pop
lods
cwtl
cmp
mov
push
pop
addr16
ljmp
and
dec
or
test
imul
sarb
data16
inc
and
arpl
je
movsl
dec
mov
enter
inc
cltd
mov
add
shl
xor
int
rorl
sahf
dec
fcoml
sahf
sub
sub
or
xor
aas
rcr
push
outsl
cmp
jae
and
and
repnz
xor
mov
cmp
pop
bound
xchg
add
scas
xchg
lcall
jecxz
add
pop
fiadds
push
arpl
jnp
jo
mov
lock
pop
decb
cld
rcl
jno
push
ss
mov
sete
push
das
clc
dec
gs
xor
or
and
rcll
cmp
ret
mov
int3
fisttpl
and
dec
add
cmpsl
mov
test
fdivs
pop
test
pushf
jns
data16
int3
pusha
adc
xorl
lcall
enter
lods
rcll
mov
ficompl
or
aaa
adc
cmp
sub
dec
push
adc
cmp
inc
fists
sbb
push
out
sub
mov
shrb
adc
cmp
lret
fldcw
add
sarb
aaa
push
push
or
sti
fmul
dec
mov
add
and
xor
mov
ljmp
xchg
or
scas
jmp
or
ret
xor
stos
addb
xorps
in
outsl
push
jne
movsb
pop
inc
ja
dec
mov
pop
pushf
inc
shrl
lock
shrb
ja
xchg
inc
or
je
daa
lret
mov
or
int
pop
xchg
inc
and
push
inc
sbb
or
fbld
dec
iret
mov
xor
addb
pop
dec
cmpb
fildl
scas
ret
cli
pop
xchg
inc
popf
sahf
mov
jo
je
push
jb
xor
cli
sub
xchg
inc
sub
mov
jg
xchg
jne
loope
aam
rolb
push
movsb
movsb
sbb
fisttpll
xchg
fnstcw
das
pop
in
or
or
xor
fwait
xchg
cli
jbe
stos
dec
push
sbb
xor
cmp
inc
rcrb
sbb
fstl
and
xor
inc
lods
or
xor
imul
data16
push
mov
div
dec
movsl
jo
dec
bound
orb
sub
rcll
sbb
mov
sbb
data16
push
mov
push
mov
fmull
pop
dec
cmp
clc
jnp
sub
cmp
xchg
in
mov
sub
pop
hlt
push
lret
fsubr
int
cmp
adc
add
test
lea
xor
push
out
sbb
div
mov
scas
sti
aad
stos
push
mov
scas
dec
mov
lods
and
movsb
add
fisubs
xlat
out
push
adc
xchg
cmpsl
shll
mov
adc
cmp
out
gs
jno
sti
test
or
lret
push
mov
jg
jnp
push
outsl
xchg
outsb
push
fmull
out
sbb
xchg
and
xor
push
or
cmpsl
pop
push
or
mov
arpl
mov
mov
mov
mov
adc
fdivs
mov
and
add
bound
subb
rol
cwtl
adc
enter
sahf
sub
in
in
dec
jnp
mov
mov
xchg
in
fs
cmp
push
pop
add
mov
xor
inc
insb
cmp
sub
sbb
sti
adc
dec
repnz
cli
mov
idivb
pop
mov
in
scas
shl
mov
fcomps
xlat
xor
lret
in
push
or
add
js
jp
int3
mov
adcl
mov
add
stos
notl
or
mov
lret
lahf
cmp
sbb
adc
imul
jae
aas
orl
or
aas
sub
cmp
cmp
cld
add
sub
mov
mov
mov
lea
jge
cld
adc
push
mov
or
test
iret
cmp
aas
dec
lds
jle
fnstcw
jge
rorb
mov
add
mov
cmp
push
sbb
xor
adc
add
mov
je
aas
cld
pop
movsl
xor
push
test
push
jbe,pn
loopne
dec
pop
orb
adc
in
enter
testb
mulb
inc
jmp
pop
iret
adc
enter
xor
or
xor
push
add
pop
mov
jg
gs
cli
mov
nop
cmp
movsb
inc
jns
aam
mov
and
or
inc
pop
mov
dec
add
stos
cmp
cwtl
xor
and
and
fidivrl
stos
push
out
mov
pop
push
adc
addr16
aas
push
sub
xchg
jmp
jmp
mov
pop
outsb
cmp
stc
mov
aad
inc
dec
lds
jecxz
insl
int3
xchg
adc
fwait
or
flds
repnz
or
push
or
sbb
rcrb
scas
mov
mov
sbb
insl
sub
xor
das
test
scas
lahf
cld
das
ret
icebp
xchg
in
sbb
jmp
mov
push
rolb
cli
jge
sarl
and
inc
icebp
out
out
or
jle
popa
daa
or
shr
out
daa
adc
hlt
xchg
fs
mov
inc
jl
xchg
ret
dec
jbe
inc
enter
inc
popa
iret
push
mov
jle
push
imul
in
dec
not
cld
or
xor
adc
std
vhaddps
cmp
in
and
xchg
inc
loope
clc
mov
adc
arpl
pop
inc
lods
adc
and
dec
out
add
ret
xchg
fcmovnb
sub
popf
aaa
sbb
pop
movsl
scas
loopne
inc
fdivs
lods
lods
xchg
jns
pop
pop
iret
lret
jecxz
xor
lock
sub
inc
jo
pop
test
imul
adc
fistl
push
sub
out
sub
xchg
fistpll
test
sub
push
bound
mov
rcll
dec
xchg
jo
sbb
rol
dec
imul
out
sbb
sbbl
sub
dec
xchg
lock
mov
sub
inc
out
mov
movsb
xchg
sbb
cmc
push
int
in
ffreep
pop
iret
push
fisttpll
popf
bound
out
mov
je
sub
scas
jno
lods
call
pop
pop
jg
sub
out
mov
data16
xchg
aam
pop
ja
ret
sbb
mov
popf
jno
or
int
dec
jne
inc
pop
fucomi
pop
inc
mov
fwait
dec
nop
cmp
popa
mov
lock
lahf
out
fildl
mov
lods
jne
nop
insb
push
inc
push
cmc
stos
jne
sub
xlat
cmp
mov
sarb
fiaddl
or
mov
cmp
aad
adc
dec
add
mov
and
out
cmp
hlt
mov
in
push
pop
scas
je
push
jle
test
mov
dec
rorb
xor
insb
subl
mov
lods
notl
ljmp
dec
sub
xchg
mov
push
repnz
inc
jns
imul
push
sub
int3
popf
popf
out
popa
push
xchg
jbe
mov
pushf
int
cmpb
pop
ja
xchg
rorb
inc
sub
and
sahf
and
movsl
adc
xor
add
fsubl
and
sub
jecxz
adc
movsb
jecxz
pop
adc
dec
pop
xor
ja
xchg
sub
push
scas
push
pop
jl
and
mov
aam
push
pop
es
shl
pusha
sub
inc
scas
hlt
int3
lods
lret
arpl
dec
jae
loopne
mov
imul
pushf
jo
mov
xor
repnz
xchg
xchg
shll
icebp
dec
orl
sub
rcl
xor
xor
push
hlt
sbb
es
jo
xchg
mov
mov
push
sbb
xor
push
add
sub
mov
mov
or
stos
inc
add
cmp
sub
outsb
out
inc
inc
inc
daa
mov
aam
imul
test
add
cltd
incl
jle
jno
xchg
push
in
leave
push
lds
sti
dec
lods
arpl
leave
mov
js
ret
jne
or
in
xlat
xchg
lret
cmp
dec
int3
or
push
cmp
and
push
or
and
sbb
mov
sub
add
dec
cmpsl
jns
xchg
mov
loopne
mov
jg
movsbl
jno
push
jecxz
mov
sarl
lret
std
outsl
or
mov
pop
cli
bound
lods
pop
cltd
push
and
lds
jo
std
ljmp
outsl
cmpsb
mov
mov
sub
subb
mov
xlat
push
xor
les
scas
dec
lea
cli
jmpw
xor
inc
ffree
je
sbb
adc
cmpsb
hlt
inc
aas
vmwrite
or
xorl
hlt
adc
inc
adc
fwait
push
xchg
pusha
mov
fimull
inc
popf
adc
push
lahf
ret
dec
std
xor
jo
xor
jl
int
and
pushf
and
jmp
mov
out
ljmp
ficomps
lcall
ficoml
popa
shr
in
pushf
movsl
ljmp
mov
cmp
sbb
pop
cwtl
sbb
sbb
pop
mov
ss
pop
adc
xlat
cmp
clc
xchg
ljmp
mull
enter
and
sub
xor
xchg
xchg
stos
xor
fnstsw
mov
mov
out
jg
mov
repz
xchg
ja
dec
divb
in
pusha
out
cmp
jge
sbb
jmp
ror
movsl
jl
push
jae
out
cmp
pop
push
mov
adc
push
add
dec
lock
jo
shr
xor
pop
popf
movsl
dec
gs
jmp
xchg
pop
mov
sub
int3
loope
mov
stc
outsb
out
or
pop
mov
lcall
and
sbb
std
xchg
dec
mov
sub
fcmovnu
insl
pop
aam
in
gs
es
push
jmp
gs
arpl
jbe
repz
push
push
adc
add
pop
cmp
xor
movsl
inc
iret
xchg
dec
jl
adc
cmp
rcrl
cwtl
vcvttsd2si
movsl
adcl
push
jns
in
stos
dec
test
loopne
mov
cwtl
sub
bound
mov
jo
sub
imul
push
xchg
ds
pop
not
xor
int3
imul
dec
add
rcrb
roll
jns
nop
or
stos
mov
pop
mov
cmpsl
aaa
mov
repnz
adc
or
mov
mov
repz
testl
adc
ss
pop
inc
je
or
aad
clc
xchg
xchg
cmpxchg
sub
test
push
mov
stos
test
mov
je
add
xor
add
sarl
jnp
pop
xchg
cs
outsl
xchg
scas
jae
mov
dec
sbb
paddusw
jmp
in
mov
adc
dec
mov
dec
push
icebp
pusha
divb
push
or
xor
aam
mov
imul
cmp
xchg
aad
popa
pop
shl
lret
outsl
mulb
pop
pushf
and
mov
pop
jge
jno
jge
mov
jmp
adc
sahf
dec
int3
cmc
xor
jo
cmpsb
test
out
jg
push
sarb
jo
jns
test
mov
fwait
xorb
in
or
pop
adc
dec
loopne
xor
fidivs
pusha
xchg
jg
shll
cwtl
push
insl
and
push
xchg
push
call
stos
mov
in
mov
loopne
insb
cmp
jbe
pop
mov
ret
adc
push
js
js
lahf
xchg
scas
pushf
push
adc
push
cltd
sbb
call
sub
les
ja
mov
pop
arpl
in
imul
arpl
jle
andb
xchg
jb
push
add
popa
push
leave
rolb
fimuls
orl
mov
lret
flds
push
mov
mov
push
ficoml
js
inc
jae
mov
dec
cmp
xlat
jp
add
push
mov
xchg
mov
and
mov
lods
outsb
or
xchg
sarl
push
iret
lret
fs
pop
inc
inc
inc
mulb
sbb
pop
add
je
mov
mov
push
jbe
cs
xor
sbb
push
xlat
daa
popf
xor
mov
cmp
add
push
cmp
stos
das
jecxz
fldcw
mov
mov
insl
mov
adc
xchg
add
inc
jecxz
mov
fwait
xor
dec
int3
bound
push
cs
and
mov
mov
xor
xchg
push
and
and
jmp
fwait
popa
call
sbb
stos
jecxz
fcomi
in
in
and
icebp
pop
and
bound
imul
jmp
and
inc
stos
fstps
mov
add
scas
mov
and
mov
pusha
or
mov
adc
std
fcom
gs
loope
jmp
dec
xor
out
sbb
out
jecxz
imul
ret
sub
or
ds
shll
cmc
jmp
cmpsl
mov
ja
mov
fwait
push
fildll
xchg
mov
jecxz
dec
or
ret
sbb
hlt
lock
sbb
push
fsubrs
stc
pushf
push
or
and
add
sbb
jg
in
mov
std
xchg
test
xlat
push
push
lds
stc
or
fadds
adc
add
xor
mov
dec
arpl
mov
and
jae
adc
sbb
popa
dec
pop
mov
js
outsb
loop
in
nop
xlat
cs
xchg
fwait
mov
cmp
lcall
mov
shlb
jbe
les
dec
outsb
jmp
cld
mov
les
ficompl
mov
mov
es
aam
jbe
loope
xor
sub
insb
pop
mov
push
xor
and
movl
lahf
xchg
addr16
dec
lea
jne
aad
push
push
mov
cmpsb
inc
in
or
test
inc
xchg
pop
in
repnz
and
xchg
int3
addr16
mov
xchg
push
icebp
pop
sbb
dec
jne
xor
cmpl
xchg
lahf
int3
dec
imull
and
add
cwtl
sbb
popa
nop
mov
mov
data16
jbe
xor
lahf
cs
repz
mov
test
xor
iret
sub
push
fwait
cs
mov
pop
jne
jmp
xor
out
push
popa
cld
cmpsb
inc
push
add
sbb
add
cwtl
scas
hlt
out
lea
jp
stos
ljmp
into
cmc
push
scas
fsubrl
inc
outsb
adc
aas
add
adc
xchg
push
or
out
jnp
xor
push
cltd
sbb
xchg
scas
add
xchg
in
xlat
jmp
cmp
pop
test
je
cld
js
testl
inc
cli
ja
push
in
adc
xor
push
addr16
in
jbe
test
sti
mov
jne
push
inc
js
sbb
lods
fiadds
and
mov
inc
aas
jle
enter
jbe
push
cmp
inc
push
stos
repnz
in
add
sub
push
pop
pop
add
pop
icebp
test
popf
dec
cwtl
adc
sub
lock
adc
mov
jnp
or
add
sub
xor
dec
sub
outsb
mov
jno
mov
ss
out
jae
cmpsb
sub
push
push
mov
ret
adc
jl
xchg
es
outsl
xor
jno
mov
ret
ljmp
xchg
add
xchg
int3
outsl
data16
cmpsl
mov
rcrl
outsl
push
pop
lods
dec
adc
sub
outsl
or
pop
mov
xchg
shll
sbb
les
out
rolb
loope
fcompl
in
sbb
enter
ffree
sub
inc
mov
add
mov
ds
test
leave
test
add
rcrl
in
cmpsb
inc
outsb
or
or
xor
push
shrl
adc
pop
inc
mov
in
push
pop
inc
popf
fwait
push
das
jp
enter
sub
jno
xor
sbb
mov
aam
divb
xor
or
and
push
cld
scas
jbe
imul
std
push
pop
mov
cwtl
aad
xorl
call
hlt
daa
xor
test
cltd
addb
cmp
ljmp
push
xchg
mov
orl
adc
in
mov
lretw
mov
mov
scas
lret
pop
xor
add
mov
sub
fs
andb
lret
or
dec
mov
mov
out
mov
mov
enter
pop
stos
cmp
add
xchg
sbb
jle
mov
jb
lds
das
movl
je
aam
mov
mov
add
int
xchg
jmp
jle
cmp
push
cmc
in
dec
lret
or
cmp
jo
loopne
nop
inc
mov
popa
push
imul
in
data16
outsl
push
xchg
mov
lea
push
jmp
pop
aam
hlt
push
add
lret
push
push
mov
fstpl
pop
jg
adcb
popa
jg
fidivs
and
in
setp
adc
je
jne
out
iret
aam
pop
jb
outsb
adc
dec
ja
fsubrs
mulb
scas
fs
and
js
call
sbb
scas
push
daa
es
mov
inc
ds
dec
xchg
xor
push
adc
fwait
in
sbb
pop
inc
rcrb
xor
jno
sub
inc
scas
mov
lahf
add
xor
int
lods
ficoms
add
mov
pop
insl
mov
int3
mov
xor
sbb
cmpsb
movsb
dec
fsubs
jmp
inc
das
dec
test
sahf
push
mov
push
xchg
outsb
add
test
fs
addb
faddp
and
int
ds
push
les
ret
scas
sub
and
xchg
or
xlat
imul
loop
pop
imul
stos
add
cmc
sub
enter
scas
daa
adc
push
mov
sbb
repnz
in
lods
inc
adc
inc
ficoml
mov
pop
xlat
push
loope
fisttpll
sub
xchg
dec
push
push
or
mov
add
inc
stos
fldl
mov
leave
les
push
jle
mov
test
loop
xchg
scas
sbb
aas
or
xor
hlt
push
or
loopne
mov
out
push
insl
lahf
cmpsb
in
mov
cmp
push
and
mov
add
pop
icebp
stc
or
mov
jle
daa
add
add
lds
loop
mov
xor
in
rol
push
imul
lds
sarb
mov
pop
stos
aas
mov
cmc
dec
dec
fwait
pop
fcompp
xor
mov
xchg
mov
push
imul
cs
test
cwtl
mov
imul
or
imul
inc
inc
fdivl
das
or
mov
lret
jb
sarb
pop
xchg
cld
scas
dec
mov
movsb
fadds
leave
insb
cmp
out
cltd
repnz
into
inc
sahf
mov
xchg
mov
insb
jnp
dec
and
jecxz
sbb
dec
mov
test
mov
test
push
dec
push
ja
shrl
je
in
mov
sarl
lods
jl
or
dec
mov
test
iret
cwtl
jge
adc
push
pop
je
or
xor
jmp
insl
ret
pop
pusha
insl
pop
daa
inc
mov
dec
inc
fiaddl
xchg
adc
js
shll
jno
add
lea
and
or
insl
adc
mov
cmp
sub
mov
mov
aad
pop
cwtl
cmp
repz
shrl
movsl
and
je
aad
pop
movl
adc
push
dec
es
out
xor
add
bound
sbb
mov
addb
in
jo
lods
addb
stos
fadds
cmp
mov
popf
jmp
add
pop
movsl
add
sahf
mov
xor
ret
sub
cmc
xor
cwtl
xor
or
loope
mov
shll
jns
adc
push
insl
mov
and
movsl
mov
lods
push
sbb
pop
xor
and
fidivs
cli
bound
into
fistpll
enter
mov
mov
xchg
popa
xchg
xchg
sbb
pusha
popf
pop
jmp
sahf
dec
jae
lds
enter
and
cmp
je
ss
pop
sub
test
mov
cmc
mov
lods
scas
add
dec
lret
jecxz
xor
xchg
mov
sti
lods
jmp
cmp
vpunpckldq
fistl
lahf
sub
rolb
and
mov
push
sub
and
xchg
in
dec
mov
lret
mov
fwait
jb
test
mov
sbb
pand
cld
clc
push
add
pop
xchg
out
mov
std
pop
dec
mov
pop
jmp
out
xchg
mov
je
into
loopne
roll
dec
iret
cld
and
arpl
das
loope
dec
mov
add
mov
nop
lret
mov
repnz
xor
call
adc
cmp
xor
jg
test
pop
test
fdivrs
bound
and
mov
in
sbb
dec
scas
xor
insb
pop
or
inc
push
cmp
adc
dec
les
pop
push
adc
sti
mov
mov
ljmp
mov
pop
jmp
jnp
mov
sub
pushf
outsl
out
imul
cwtl
xor
ljmp
les
not
sub
push
int
notb
xchg
repz
push
lret
jno
xchg
jb
movd
sbb
inc
pop
mov
leave
pop
sub
mov
push
dec
mov
aaa
test
ljmp
adc
mov
pop
or
addr16
push
jl
outsb
int
mov
int3
mov
clc
push
mov
divb
xchg
cs
jo
ret
aas
test
decl
fwait
pop
daa
popf
push
test
fistpll
subl
hlt
enter
pop
ja
sahf
push
and
scas
ret
orl
fwait
movsb
loop
pop
xchg
loope
lcall
test
jae
adc
out
popf
xchg
and
xchg
mov
mov
lea
mov
test
iret
mov
into
sbb
sub
cmp
add
pop
int3
mov
pushf
sbb
push
xchg
push
push
xchg
shll
push
shr
pushf
push
fwait
int
in
jge
jno
inc
and
inc
mov
insb
xchg
out
insl
mov
daa
pop
jne
fildl
loop
sbb
inc
add
xlat
in
xor
fcomi
pusha
into
int3
mov
dec
enter
mov
push
test
jle
adc
insb
sub
jno
dec
test
add
pushf
arpl
clc
ja
imul
xchg
test
ds
lret
or
jne
scas
inc
jno
rcrb
js
pop
cmc
xchg
pop
cmc
fcmovbe
daa
movsl
jle
inc
xchg
cmp
mov
sub
mov
pop
fcompl
sub
std
ja
aam
orl
adc
mov
xchg
or
rol
test
pop
or
mov
les
mov
or
pop
in
pop
ds
jns
xchg
mov
xchg
xor
or
les
pusha
inc
ja
mov
sbb
and
and
aad
jmp
daa
push
or
cmp
scas
arpl
mov
adc
out
xchg
icebp
int3
inc
dec
rol
es
mov
test
mov
ljmp
and
pop
push
push
fs
jo
inc
cmp
pushf
jb
and
orl
movzbl
cltd
inc
mov
rorl
mov
ret
jp
push
dec
in
mov
loopne
and
inc
fisubrl
add
sub
inc
adcl
push
push
or
insl
sub
in
cs
push
in
sbb
outsl
ja
scas
pop
aaa
jle
data16
outsb
test
ss
rclb
xor
or
pop
mov
arpl
cmp
mov
loope
push
clc
and
and
mov
jns
cmpsl
xchg
ja
subb
test
push
pop
sbbl
push
xchg
cmp
inc
leave
das
sub
pop
jge
cld
jns
mov
cmpsl
test
sub
shrb
add
sti
sub
lahf
or
out
xor
or
mov
clc
or
mov
inc
mov
enter
jo
aad
mov
pop
sbb
test
jl
pop
popf
pop
fldl
in
dec
jb
cmp
shlb
mov
mov
iret
es
jno
xchg
xor
pop
in
testb
mov
add
mov
xchg
shlb
pop
popa
int3
call
int
jl
xchg
push
loopne
sbbb
push
push
or
jg
mov
pop
lea
mov
dec
lret
and
loope
sahf
addr16
inc
xchg
lahf
mov
add
sub
or
jb
jmp
scas
rolb
sahf
sub
fcmovu
shrl
or
aad
stos
fisttps
fdiv
popf
movl
or
mov
pop
inc
aad
cli
ss
adc
cmc
mov
mov
mov
jae
ficomps
add
or
push
outsl
lret
loop
std
ljmp
mov
jmp
ss
sub
sub
add
decl
push
icebp
dec
mov
xor
and
andl
outsb
mov
lret
subl
xchg
mov
push
jge
dec
add
xchg
mov
and
addr16
sti
pushf
std
xor
add
ljmp
in
aas
or
cmp
idivb
pusha
bound
int
xor
aaa
push
push
ret
test
negb
cmp
stc
out
mov
loope
cltd
fdivp
adc
fwait
sub
decb
sbb
leave
sbb
sti
out
xor
jb
cmp
pop
inc
fwait
shrb
push
out
and
xchg
push
leave
mov
in
into
stos
push
xor
push
mov
int3
adc
sub
pop
lock
fsubrs
inc
aad
jg
dec
in
cmp
lea
jmp
jns
jb
cli
call
mov
cli
pop
sbb
inc
mov
lret
inc
dec
or
or
push
mov
xor
xchg
test
adc
cwtl
movsl
jge
adc
push
lds
and
repz
mov
movsl
test
jne
hlt
push
and
das
jno
in
pop
mov
es
fstps
ss
rcl
fstpt
ret
pop
adc
cmp
push
or
aad
inc
fbstp
xchg
scas
int3
xchg
test
xor
mov
jg
es
inc
adc
cmpl
shll
push
push
mov
lock
lret
mov
dec
mov
bound
loopne
inc
mov
into
or
and
pop
divb
mov
xchg
cltd
sub
inc
filds
inc
insb
pop
sahf
dec
sahf
scas
mov
xchg
jb
add
outsl
add
ds
rcll
lret
mov
sti
cmc
sbb
mov
lahf
inc
jbe
cmp
les
bound
aaa
and
mov
mov
xor
xchg
sub
in
mov
cmp
inc
lahf
test
mov
mov
xchg
icebp
add
adc
icebp
xchg
in
leave
arpl
xor
sbb
jp
cwtl
insl
xchg
jb
jnp
sub
sub
popf
adc
mov
sub
aas
fs
xchg
gs
adc
xchg
xchg
xchg
xchg
int3
gs
loopne
gs
and
sbb
inc
scas
out
icebp
dec
rcr
mov
popf
fisubrs
nop
xchg
push
pop
mov
lcall
call
cltd
dec
adc
mov
aas
cmp
jl
jmp
jp
jne
daa
push
and
enter
cmpsl
adc
fcoms
inc
or
mov
xor
sbb
je
loope
cwtl
jb
jmp
mov
and
xchg
jmp
cs
nop
jp
out
inc
cmpsl
and
lcall
out
sbb
and
ljmp
arpl
add
lahf
sahf
or
fdivl
jne
mov
or
pop
mov
and
xchg
xor
fsincos
mov
push
mov
jg
es
xchg
cpuid
cmpsb
add
mulb
cwtl
movsl
dec
bound
dec
lds
add
pusha
test
and
adcl
ja
sbb
lret
repnz
loopne
mov
jle
movb
fidivl
mov
js
sub
lahf
rorl
fcompl
jne
out
push
dec
push
or
inc
sti
sbb
pop
mov
out
dec
add
mov
pop
mov
das
or
stos
jl
push
insb
sti
cmp
andb
push
gs
test
fsubr
cmp
ja
pop
jo
mov
int
int
data16
lret
push
mov
xchg
in
pusha
outsl
mov
rclb
sar
jb
in
frstor
adc
repnz
cmp
mov
repz
data16
and
jl
dec
es
or
imul
mov
or
add
sbb
lret
cwtl
cmpsb
dec
clc
add
dec
pop
lahf
punpckhdq
xor
push
arpl
out
inc
insl
fisubrs
cwtl
mov
mov
loopne
repnz
mov
adcl
xor
cli
xchg
loope
or
mov
adcb
adc
adc
repnz
dec
je
test
xlat
mov
or
xor
arpl
ret
test
fistpl
push
adc
iret
dec
jae
or
pop
mov
adc
das
cmp
lahf
fs
dec
inc
repnz
mov
clc
outsl
jp
add
mov
push
scas
enter
xchg
cmp
aam
dec
sbb
sub
inc
jns
cmpsl
xchg
out
dec
int
test
adc
mov
push
pusha
xchg
inc
imul
xchg
push
adc
lea
dec
push
in
xchg
dec
dec
test
icebp
fcoml
adc
shll
pop
scas
arpl
jbe
or
lds
in
fwait
sub
int3
in
dec
cmp
xchg
push
jecxz
xchg
nop
mov
sbb
iret
push
jne
mov
cmc
je
arpl
jbe
xchg
fists
cltd
push
mov
call
mov
lock
popf
in
repz
and
pop
lods
jno
inc
push
add
adc
leave
decl
les
add
add
or
mov
bound
icebp
pop
xchg
xor
movb
add
data16
int3
sbb
sbb
rcr
push
cmpsl
pop
outsl
int
inc
movsl
push
push
loopne
and
push
mov
mov
sti
sub
mov
xchg
and
sub
ffree
mov
repnz
shll
mov
mov
add
lds
jge
mov
push
mov
popf
stos
add
push
push
inc
xor
cmp
das
jmp
mov
inc
fnstsw
push
clc
add
call
xlat
cmp
jne
fsubl
push
push
addr16
test
fsub
dec
stos
adc
jno
lret
and
retw
stc
test
ficoms
arpl
sub
sti
inc
or
sub
jno
and
xor
mov
and
mov
addl
cmpsl
sub
sbb
push
sbb
cmpsl
addl
mov
mov
lcall
ret
insl
enter
aad
xchg
push
fimuls
inc
jp
mov
xchg
xchg
jne
mov
jne
jl,pn
ja
jg
inc
hlt
jnp
push
dec
dec
imul
negl
aam
mov
jb
sarb
xchg
or
loop
pop
push
mov
mov
cmpsb
in
arpl
or
fst
xor
imulb
push
notb
incb
or
dec
sahf
and
and
mov
add
insb
lods
mov
out
fidivrl
sbb
and
xchg
jg
mov
add
js
jl
xchg
xchg
mov
inc
loope
push
cmpsb
in
cwtl
lock
mov
xchg
imul
scas
repnz
imul
xor
loope
mov
rorb
pop
mov
subb
test
cli
imul
movsb
sbb
dec
out
shl
mov
in
xchg
pop
out
lcall
push
sbb
and
iret
jnp
popf
loope
xor
sub
dec
inc
sarb
push
sti
pop
xchg
xchg
test
add
mov
add
xchg
xor
inc
and
add
mov
lods
cwtl
loop,pt
xchg
dec
xchg
lahf
cli
not
rclb
sbb
loopne
cltd
mov
sahf
stc
mov
mov
stos
xor
add
inc
xchg
jae
test
daa
stos
imul
xchg
mov
jmp
ja
aaa
sub
inc
fistpl
dec
add
jb
and
sbb
outsb
and
xchg
repz
lds
ja
jne
cmpsb
in
out
ficomps
test
mov
int
lcall
aaa
daa
inc
mov
sub
mov
add
hlt
xor
sahf
gs
leave
or
adc
lcall
inc
xor
sub
loop
lret
sbb
fcomps
fadds
push
lock
adc
xor
fisubrl
xor
or
adc
mov
xlat
pop
test
fistl
mov
cmp
add
or
push
adc
or
int3
out
movsl
add
push
hlt
mov
fdivrs
scas
jg
outsb
fdivrl
stos
xor
push
inc
fiaddl
lret
add
mov
mov
or
movsb
xor
repz
fnstsw
mov
sub
xchg
sub
mov
sub
shr
mov
xor
out
pop
das
sub
cmpsb
sbb
stos
or
repnz
test
imul
mov
inc
cmc
cmp
cmp
pushf
ror
xchg
or
sub
jg
sub
add
mov
mov
inc
jbe
xchg
nop
mov
mov
pop
dec
inc
inc
add
fisubrl
push
sbb
ljmp
icebp
xchg
push
mov
mov
test
jb
js
jmp
jne
mov
sbb
inc
sbb
or
int3
xchg
mov
mov
enter
and
pop
bnd
mov
incb
cmp
lcall
xchg
dec
das
mov
adc
clc
push
cmp
dec
sub
push
xchg
xchg
cmp
data16
call
and
in
push
or
push
mov
inc
push
push
js
jns
addb
xlat
cmp
jle
out
xchg
cmpsb
fistps
mov
or
cwtl
add
push
sub
xchg
outsb
inc
test
clc
movsb
push
lret
loopne
jp
lods
repz
lea
lahf
repz
push
mov
add
mov
dec
data16
inc
dec
sbb
mov
mov
mov
xchg
cld
test
ss
shld
push
mov
mov
cwtl
xchg
scas
sub
cmpsb
pusha
lods
jl
ljmp
and
lret
lea
add
cmp
xor
gs
ss
mov
cmovs
in
add
pop
popf
movsl
push
scas
xchg
lods
inc
rcrl
leave
pop
shll
gs
es
inc
adc
iret
or
nop
jmp
jl
pop
and
ds
pop
arpl
mov
mov
mov
fisttpll
sahf
orl
fldenv
xor
jg
lock
add
cmpl
movsl
sub
fstpl
pop
fucomp
push
mov
aad
notb
out
sub
add
test
scas
pop
push
fcompl
in
push
push
push
scas
sub
mov
sbb
xor
bound
push
out
jo
std
push
lcall
push
aad
mov
mov
inc
add
shll
sar
shl
leave
mov
xchg
cs
aas
pop
test
ret
jae
pop
push
lea
out
lahf
xor
push
sbb
pop
xchg
js
add
dec
cmp
rcrb
movsb
mov
or
popa
test
jno
xor
gs
pop
movsl
xorl
int
cmp
insl
movsl
sbb
scas
loope
push
out
fidivrs
andl
mov
cwtl
and
outsl
mov
mov
xchg
std
mov
cmpsb
cmpsl
bound
push
insb
xchg
sarb
inc
or
mov
or
mov
sub
add
jg
jnp
xchg
fisubrs
mov
pop
int3
imul
or
mov
andb
adc
loope
lods
and
aas
or
jl
shr
xchg
add
dec
lods
xorl
mov
dec
rclb
cmp
inc
adc
jo
push
out
xor
shr
mov
adc
in
clc
lea
test
dec
repz
mov
paddusb
fsts
scas
sbb
jnp
in
push
addl
mov
dec
rclb
les
data16
testb
ljmp
xchg
sahf
add
jo
es
inc
dec
pop
stc
popf
add
add
sbb
add
imul
fnstcw
push
pop
in
push
pusha
xadd
in
ret
mov
and
int
cmp
mov
add
and
popa
xor
jp
jo
xchg
sub
pop
mov
inc
dec
mov
inc
leave
inc
push
les
test
dec
dec
adc
push
cmpsl
and
aad
sub
dec
std
adc
xor
jne
enter
mov
js
inc
lods
inc
aam
outsl
xor
pop
cmp
xor
xlat
mov
add
pop
cli
in
lret
push
add
cmpsb
call
dec
mov
movsb
inc
les
sub
int3
into
xchg
jno
addr16
ss
and
add
popa
dec
push
xchg
sub
dec
mov
mov
push
das
or
inc
mov
ja
and
insl
adc
xchg
outsb
pop
das
fimuls
psubusw
pop
fsubs
mov
shrl
or
outsb
lods
repnz
fimull
js
jae
mov
inc
cmp
mov
stc
add
cld
mov
dec
scas
hlt
stos
iret
std
call
mov
jl
aam
adc
movsl
movsl
in
push
fsubr
cmpsl
cmp
nop
outsb
cli
cmp
jnp
or
leave
xor
outsb
popa
fnstenv
orb
loopne
cmc
dec
int3
into
cmp
xchg
es
mov
in
shlb
cs
gs
jmp
dec
in
and
jnp
inc
call
dec
adc
cwtl
negb
out
loopne
xor
mov
loope
cwtl
push
enter
and
and
mov
push
outsl
sub
imul
test
pop
in
loop
sbb
shll
mov
xchg
sbb
fbstp
movsb
mov
fsubs
xlat
loop
jmp
movsb
bound
imul
and
pop
dec
mov
imul
adc
xchg
stos
nop
das
fwait
inc
mov
inc
mov
and
dec
mov
fisubrs
cmp
jb
mov
inc
inc
insl
inc
cltd
hlt
cmc
insb
and
data16
cmp
mov
jne
push
int
cmp
cmp
jmp
lods
xchg
xchg
aam
in
xor
sbb
pop
adc
push
xor
fnclex
mov
stc
xlat
jecxz
ret
push
jne
popa
movsb
xor
mov
andb
dec
push
mov
jle
fsubs
bound
jns
xlat
and
mov
insb
imul
xchg
iret
rcl
cli
imul
mov
sub
fcmovnbe
insb
push
enter
adc
xor
add
je
mov
jbe
cwtl
lret
lret
mov
jl
cmp
aas
jecxz
pop
dec
inc
sbbb
xchg
xchg
stos
fdivrl
mov
fld
cmc
test
icebp
scas
or
iret
dec
iret
sub
shrl
pop
leave
xor
cmc
ud2
aas
jne
sub
fwait
loope
mov
scas
in
cmp
xchg
mov
add
je
rorl
xor
lahf
mov
xor
inc
movsb
lret
in
inc
outsl
jl
dec
repz
loop
imul
mov
sub
xor
outsl
test
jecxz
pop
xchg
aaa
enter
dec
xor
jne
jo
das
mov
call
cmpsl
cmpsb
cmp
xchg
mov
and
imul
scas
hlt
int3
movsl
out
testl
and
aam
xor
inc
inc
sahf
and
popa
out
fwait
push
push
or
out
xchg
leave
pop
dec
mov
push
lds
xor
xchg
pop
jp
loopne
jge
rcl
insb
in
out
jno
add
xchg
in
mov
inc
subl
add
testl
test
pop
xor
jb
mov
xor
subl
ds
mov
call
add
push
push
adc
leave
fimull
shlb
and
repz
lcall
fbld
dec
addr16
adc
fildll
push
lret
lea
cmp
dec
std
clc
fimull
jne
mov
xchg
out
mov
stos
cmp
xor
js
or
adc
rclb
daa
jg
inc
adc
loopne
clc
xchg
movsb
loopne,pn
xchg
mov
jo
dec
lds
sbb
mov
cmpsb
and
ja
sbb
repz
xchg
sarl
in
xor
xor
mov
sbb
into
sbb
inc
cld
pop
aad
jbe
jno
lea
jl
ss
dec
inc
pop
xchg
addr16
mov
rorl
jne
dec
andl
inc
loope
add
jbe
popf
cli
dec
sub
test
ljmp
pop
push
aad
mov
daa
cmpsb
or
xchg
cld
fs
inc
daa
push
cld
jbe
lahf
xor
cmp
int
push
mulb
scas
mov
or
or
jno
mov
cmp
xor
cs
shrl
in
cmpsl
push
mov
out
mov
pop
in
mov
popa
bound
adc
aas
rorb
or
sub
dec
pavgb
cmpsb
push
mov
jns
pop
aaa
xchg
nop
aam
or
adc
iret
dec
or
push
lcall
dec
and
xchg
mov
add
mov
cmp
gs
bound
pop
dec
aam
cld
fidivl
xor
mulb
push
push
or
imul
sub
sub
mov
icebp
sbb
mov
cmp
addr16
dec
jle
pop
and
jnp
in
dec
mov
jbe
clc
inc
pop
cmpsw
clc
aam
shll
test
and
push
mov
sbb
int3
cwtl
dec
call
aam
and
les
and
xor
dec
mov
xchg
xchg
sub
cmp
fcmove
xchg
cmp
xor
or
push
jge
mov
mov
sbb
pop
xchg
jecxz
test
push
cmc
lret
inc
shrb
jl
mov
sub
ficompl
add
orb
inc
inc
inc
or
call
gs
mov
fidivl
in
dec
cmp
mov
testb
nop
cmp
fiaddl
adc
sbb
jg
jae
loop
push
or
lret
jo
jo
sub
dec
clc
out
xchg
lret
push
pop
push
out
jnp
or
stos
fbstp
sub
cld
into
mov
iret
bound
rclb
pop
mov
jmp
popa
push
arpl
sti
lods
jnp
and
es
in
ss
mov
or
dec
and
mov
inc
push
fs
dec
push
jns
or
lods
aad
dec
adc
scas
mov
or
shrb
sub
cld
stos
ficompl
mov
sub
orb
in
pop
push
lods
mov
pusha
flds
fimull
sub
lret
mov
pop
xor
cmpsl
rcll
push
out
push
or
mov
cmp
lock
clc
and
xor
fwait
mov
push
ret
lcall
push
mov
cmc
adc
sub
fists
lods
cltd
dec
mov
fidivrl
out
jp
cmp
sbb
loopw
loop
dec
fnsave
push
mov
pop
loopne
adc
xchg
jl
mov
addr16
mov
ja
add
mov
or
add
fists
jecxz
sbb
fisubl
data16
dec
xchg
cld
hlt
jne
shlb
divl
xchg
cmpsl
jae
add
xor
mov
pop
jecxz
mov
andl
pop
adc
add
clc
pop
push
movl
ja
es
adc
jb
jecxz
mull
and
xchg
pop
fwait
inc
mov
ss
fstpl
dec
stos
sbb
push
pop
sub
pushf
or
mov
std
ror
push
mov
data16
pop
movsl
mov
sub
xor
jg
sbb
xchg
xor
ljmp
iret
cmp
adc
fbld
and
cmc
xchg
adc
lret
call
adc
imul
cs
mov
push
cmp
fistps
fisubrl
icebp
lea
adc
dec
mov
div
shlb
out
sub
cmp
mov
in
xchg
sub
mov
mov
repnz
inc
nop
scas
push
or
aas
vpcmpgtd
arpl
ljmp
jno
add
lcall
mov
ljmp
lcall
jmp
jo
dec
push
or
sti
add
pop
sbb
popa
cmpsl
dec
popa
and
xchg
ljmp
dec
into
jb
mov
test
mov
xchg
arpl
lods
push
ror
addr16
lret
adc
xchg
add
int
push
lods
data16
das
jo
repnz
dec
mov
leave
mov
pop
out
insl
add
ret
mov
cmpxchg
pushf
sbb
dec
scas
lahf
sub
push
call
add
cmp
pop
mov
xchg
mov
xchg
push
pop
cs
mov
inc
mov
jb
setno
inc
adc
jae
out
and
mov
sub
sub
or
lods
and
test
dec
dec
fs
xchg
mov
in
sahf
xchg
cmpsl
push
into
adc
test
jae
cli
dec
cld
sbb
dec
cld
sbb
jmp
lahf
push
fwait
js
lret
pop
xor
arpl
jae
sti
or
ret
cmp
out
jl
call
adc
bsr
movsb
mov
dec
push
push
ljmp
push
cmp
cs
fsubrl
or
pop
jnp
jae
lea
push
mov
insb
add
fmull
jg
push
mov
popa
test
aaa
jae
and
jg
aaa
mov
sbb
mov
cltd
in
loopne
stc
push
sub
cmp
mov
pushf
enter
adc
mov
add
cmp
push
adc
sti
pop
lds
push
jae
xlat
xchg
sub
lret
xor
imul
xor
adc
jae
push
inc
xchg
jge
test
mov
sub
std
push
les
sub
sbb
mov
dec
into
mov
add
leave
xor
fildll
pop
sbb
sbb
jle
movsl
mov
rcll
adc
mov
sub
dec
mov
mov
subl
mov
gs
cmc
gs
adc
fcmove
mulb
adc
mul
test
lcall
aad
in
xchg
push
push
leave
push
scas
stos
mov
sahf
push
lea
fmull
outsl
movsb
jecxz
out
das
popf
mov
sbb
fs
test
adc
enter
sbb
push
push
std
popa
imul
fdivrs
mov
bound
jecxz
mov
je
mov
lcall
orb
lea
pop
ret
jmp
mov
dec
loop
in
int3
cwtl
push
sbbl
xor
fiadds
adc
adc
xchg
lods
mov
mov
loope
lds
xchg
shll
and
add
adc
sub
mov
add
jl
aaa
jb
pushw
mov
in
dec
sbb
imul
mov
jno
mov
mov
out
lret
cwtl
iret
pop
mov
fs
insl
popl
repnz
push
xor
jnp
aas
cmp
int3
lods
sbb
pop
in
shlb
sub
sti
mov
jl
sub
mov
sahf
nop
loope
inc
xchg
add
fnstenv
orb
xchg
xchg
adc
outsl
dec
lahf
bound
sub
cld
imul
inc
scas
jl
mov
cmp
jp
je
xor
mov
xchg
xchg
dec
jecxz
arpl
mov
insl
fbstp
mov
add
push
xorb
or
scas
rorl
inc
mov
push
pop
mov
pop
mov
or
adc
mov
inc
clc
inc
cwtl
aaa
int
dec
andb
int
mov
punpcklbw
insl
lods
or
xor
into
int
xorb
jp
xchg
cmc
hlt
and
add
mov
sahf
cmpsb
adc
sub
les
cmp
adc
lret
or
clc
cmp
add
and
aam
aaa
or
in
mov
lret
sbb
xor
adc
mov
sti
cmp
mov
rcll
jle
push
dec
notb
mov
lret
mov
loop
xor
xchg
pop
es
mov
jne
gs
push
xchg
dec
mov
pushf
js
lahf
movsl
mov
mov
push
xchg
lcall
out
or
jb
fstl
mov
xor
shlb
or
lret
add
daa
pop
xorb
int3
scas
nop
movsb
and
pop
insb
insb
negb
dec
int3
divl
inc
push
iret
xor
loope
movb
sub
ficompl
in
fisubl
fisubrs
mov
mov
and
xchg
movsl
out
mov
fadd
mov
int3
sub
mov
cmp
xchg
jmp
push
sbb
dec
mov
or
or
aad
stc
test
popa
inc
xorb
std
fistps
dec
mov
fsubr
lods
dec
xchg
jbe
lock
mov
loopne
xlat
dec
push
sub
inc
mov
movd
insl
iret
movsb
sbb
add
lds
sbb
iretw
push
rcl
daa
lret
popf
repz
add
sub
xchg
bound
out
add
inc
clc
push
cmc
clc
mov
fisttpl
adc
jl
mov
xor
imul
test
jl
popa
aad
cmp
in
add
fdivrs
in
or
hlt
int3
int
js
pop
dec
add
pop
jp
repnz
mov
push
jnp
cmpsb
cmp
jb
mov
ss
mov
fnsave
push
shrb
push
shll
fwait
dec
mov
inc
arpl
mov
push
lock
shl
lods
push
pop
iret
push
mov
cmp
xchg
push
push
popf
push
ret
xorl
call
xor
stc
mov
or
fildll
adc
mov
push
pop
stos
movsl
sub
shl
dec
out
add
js
sub
mov
js
mov
and
push
cmp
jle
addr16
push
mov
loopne
dec
add
leave
mov
adc
push
aaa
xlat
sub
add
out
dec
and
mov
pusha
fcoms
dec
out
lds
cmp
neg
call
nop
and
sub
sbb
inc
push
sub
sbbb
pop
test
lahf
frstor
sbb
in
jmp
loope
pop
and
in
pop
test
mov
lea
les
ret
xor
lahf
mov
push
sbb
mov
loopne
in
inc
pop
and
outsb
adc
lahf
stos
sbb
jnp
pop
outsb
inc
insl
jno
sub
aad
test
and
dec
dec
arpl
pop
dec
jmp
cmp
xchg
push
adc
andb
subl
sbb
test
fsubs
mov
fisubl
movsl
sbb
fadds
addr16
add
or
push
sub
es
sbb
push
mov
sahf
inc
mov
xlat
mov
xchg
add
mov
lret
daa
cmp
clc
cld
push
xchg
mov
outsb
mov
clc
int
sub
int3
or
push
or
nop
xchg
lcall
js
imul
mov
and
jl
loope
loopne
lret
push
repz
jmp
mov
fstl
ljmp
or
int3
mov
push
push
cli
gs
xchg
dec
add
xchg
nop
jno
xor
or
push
out
pop
sbb
je
xlat
call
push
lahf
xchg
pop
lea
xchg
fnstsw
xchg
mov
outsb
inc
outsl
ret
sahf
les
out
xor
pop
cmc
es
push
jb
bound
gs
stc
mov
scas
mov
pop
jp
cmp
jno
sbb
test
mov
and
mov
daa
pop
sahf
xor
je
out
lcall
shrl
out
leave
fbstp
fisubs
mov
xor
pushf
insb
imul
test
pushf
outsb
mov
das
test
mov
out
aam
inc
mov
ret
pop
or
outsb
cmpb
push
mov
jb
cmpsb
cltd
inc
loopne
push
lods
arpl
ja
add
xchg
into
mov
sbb
and
mov
sub
xchg
push
inc
test
cli
aaa
adcl
dec
or
jns
mov
mov
push
jbe
lcall
push
pop
pushf
mov
pop
push
cld
mov
mov
jne
push
das
cmpsb
lods
inc
aam
out
adc
mov
scas
or
leave
xor
fldz
rolb
scas
and
sbb
lds
daa
lods
aam
fs
dec
adc
cmc
pop
fsubs
pop
mov
out
aad
xor
pop
mov
ljmp
inc
ret
das
addr16
mov
mov
push
imul
pop
imull
lret
test
hlt
push
in
rorl
iret
into
push
lods
pop
stos
popa
dec
push
mov
imul
sbb
loop
jbe
call
or
push
arpl
movsb
jne
push
adc
xor
daa
dec
pop
mov
cs
imul
sub
xlat
sbb
or
call
push
inc
stos
popf
rol
rcr
stc
pop
pop
adc
dec
ror
repnz
fildll
cli
fnstcw
sbb
idivl
mov
xor
mov
enter
add
xor
jge
stc
xor
lret
js
insl
push
jge
in
pop
imul
pop
push
mov
popf
sti
xor
mov
mov
int3
int
sub
dec
outsl
fucom
in
cltd
mov
xchg
loope
xchg
inc
data16
movsb
jne
xor
or
mov
sbbl
sbb
mull
fistps
xchg
roll
jb
pop
rolb
mov
nop
das
clc
sbb
cmp
stos
pop
push
inc
fcoms
xor
xor
cmp
ud1
sar
nop
jmp
add
popa
gs
popa
hlt
subl
cmp
fs
cwtl
sarb
push
lcall
xchg
push
and
push
or
ret
fnstsw
inc
or
cmp
sbb
ss
xchg
mov
jmp
jecxz
sbb
push
mov
out
sarb
mov
lret
mov
lahf
out
jb
push
in
test
popf
xchg
fdivl
cmp
xchg
pop
notl
mov
cmp
xchg
aam
inc
push
sbbl
add
pop
and
mov
out
lahf
lcall
xchg
loope
fnstcw
out
sahf
out
xchg
inc
pop
das
mov
jae
dec
adc
jp
pop
loope
scas
dec
in
mov
popa
pop
bound
jno
xor
mov
clc
out
stc
clc
jnp
fmulp
xor
test
mov
popf
rorb
sbbl
inc
push
lahf
faddl
repz
cmp
cmp
dec
and
sub
dec
and
jbe
sub
push
movb
pushf
aas
push
mov
jae
dec
mov
stc
aam
jl
iret
js
scas
data16
pop
mov
clc
fidivs
in
cmp
call
add
push
sti
sbb
les
cld
pop
cwtl
xor
pop
dec
shrl
mov
sub
repz
pop
rorl
sbb
pusha
and
xchg
stos
enter
repnz
pop
out
mov
or
pop
mov
mov
add
mov
shrb
ss
loop
adc
or
add
pop
mov
jge
inc
bound
and
lahf
add
std
jle
lock
frstor
out
sti
push
nop
fldcw
faddl
and
flds
jg
lods
in
out
call
dec
mov
adc
imul
movsb
sbb
jg
lea
pop
pop
sub
dec
in
addb
aaa
push
into
mov
push
fst
rcrl
inc
aaa
push
mov
xor
scas
push
loopne
leave
pop
jecxz
or
fsubrs
jno
insl
int3
xchg
push
sub
popf
or
sbb
mov
xchg
imul
arpl
mov
jp
push
add
sti
out
sub
pop
roll
je
cli
std
xchg
aaa
cli
pop
push
mov
pop
cmc
jge
leave
cmp
enter
lcall
cmp
sub
enter
push
adc
sbb
test
aaa
or
add
mov
cltd
idivl
add
xor
xor
subb
inc
imul
movsl
shll
push
jno
lahf
popa
adc
mov
sbb
test
enter
adc
xor
jecxz
lret
or
cwtl
outsb
mov
sub
cwtl
cmp
adcb
cmp
xlat
cli
sub
sti
sahf
addr16
in
pushf
jae
dec
aaa
pop
rorb
imul
sbb
cmp
out
jo
lcall
mov
sar
movsb
and
cwtl
fwait
inc
cltd
jno
jge
dec
shl
mov
bound
iret
push
test
dec
imul
outsl
lret
sbb
and
sbbb
js
jne
push
sahf
ja
aad
xchg
xorb
fstps
push
mov
and
fcmovnbe
cmpsl
cs
repz
and
pusha
frstor
cmp
and
push
rorl
cltd
lahf
mov
mov
xchg
and
lods
ret
pop
das
or
mov
test
dec
mov
pop
dec
cltd
or
loope
sbb
pushl
xchg
aad
add
mov
rol
movsb
xchg
jbe
push
mov
ja
pop
xor
mov
dec
orl
push
add
rclb
fcoml
iret
mov
or
jl
mov
sbbb
jno
int3
icebp
in
out
pop
addr16
mov
fimull
xor
mov
test
pop
mov
cmpb
in
les
pop
dec
into
cmp
sbb
xor
xor
shl
in
push
ljmp
xchg
sub
clc
xchg
mov
cmp
lds
jno
jae
mull
ljmp
xlat
push
sub
rcrl
cmp
mov
cmp
popl
loop
in
aaa
mov
fsubrp
mov
mov
mov
movsl
mov
push
jp
lcall
data16
mov
test
jp
sub
lock
push
pop
cld
adc
push
xchg
dec
aad
cmp
push
jge
stos
es
xor
cmp
loop
mov
push
clc
cmp
xchg
fsts
lahf
or
pop
mov
std
insl
push
jno
sub
fldcw
push
icebp
xchg
mov
fstpt
stc
push
jl
push
loopne
dec
rcrl
or
mov
jne
scas
mov
clc
stos
push
jmp
and
dec
mov
in
scas
cmpsl
push
pop
insb
mov
test
shl
dec
xchg
sbb
mov
popl
pusha
xchg
xchg
aas
add
dec
int3
fidivs
mov
and
lahf
icebp
sub
or
mov
mov
mov
xchg
or
add
roll
jae
mov
insb
repz
mov
into
icebp
ret
loope
mov
call
out
ljmp
pop
push
xor
movsb
imul
xchg
push
out
fldcw
test
jo
or
mov
xor
scas
sti
or
in
jne
js
mov
cwtl
cmpsl
cmp
push
or
pop
lret
aas
xor
fcoml
pop
fildll
fsubrl
sbb
les
and
or
add
jbe
xchg
loop
xor
xchg
mov
mov
pavgw
push
push
test
cmc
stc
xchg
movsb
add
push
inc
out
or
adc
xchg
sahf
jo
sub
fidivs
push
repnz
adc
cmp
sub
add
xchg
data16
jge
add
pop
test
aad
lock
mov
xor
icebp
aas
cmp
imul
and
xchg
leave
mov
lds
data16
pop
cmc
cmp
pop
and
pop
adc
mov
xchg
cmp
loope
cld
fdivl
mov
jno
into
aas
inc
push
xchg
notb
imull
or
mov
add
nop
cmp
sbbb
pop
xchg
loop
jp
shll
inc
fwait
adc
cmp
inc
shrb
push
mov
xchg
xchg
stc
and
int
frstor
xchg
dec
cltd
sub
mov
dec
pop
mov
jnp
pusha
inc
sar
mov
je
mov
hlt
ds
xor
inc
in
or
xchg
jmp
jecxz
cmp
pop
mov
pop
and
cmp
inc
cwtl
adc
jmp
in
jns
fisubrs
test
fildll
add
mov
scas
fisttpl
or
fisttpll
stc
rcll
hlt
clc
in
mov
rcl
cwtl
enter
shll
mov
xchg
shl
bound
outsl
inc
repz
inc
inc
xchg
test
movsl
or
xchg
xor
xor
test
cli
and
xor
adc
sahf
inc
test
into
sti
jo
shrl
add
cmp
je
ret
fisttpll
mov
in
or
pusha
je
pop
push
jne
aam
outsb
adc
fs
adc
in
outsl
push
notb
inc
ror
test
idiv
sub
data16
aad
xor
cmp
aad
cmc
push
dec
xor
sarb
sub
jmp
cmp
add
mov
adc
add
call
lahf
cmc
cld
push
int3
add
dec
clc
xor
mov
loope
imull
sbb
aas
xchg
subl
cs
sub
adc
xchg
pop
pop
mov
mov
sub
enter
imul
hlt
cmp
jo
fwait
dec
aad
dec
divb
mov
jo
andl
out
nop
mov
push
push
pusha
test
call
pop
out
shrl
pop
dec
sbbl
mov
aaa
mov
mov
repz
fistps
dec
repz
shrl
jecxz
jle
jecxz
movsb
lcall
and
xor
xor
shll
dec
js
loopne
mov
mov
andb
cmc
mov
cwtl
mov
jl
neg
pop
lds
shll
fnsave
pop
dec
and
push
mov
pop
adc
imul
mov
cmc
add
cmp
mov
xor
mov
out
push
stc
out
fcmovb
inc
mov
shll
push
push
push
and
pushf
dec
stos
aaa
xlat
inc
add
push
adc
pop
inc
or
imull
push
xchg
mov
jns
ja
and
sbb
inc
mov
rorl
lret
mov
inc
aas
sub
fidivs
out
mov
mov
xor
enter
inc
into
push
cmpsb
mov
cmc
xchg
ficoms
adc
jg
xchg
inc
test
loope
push
icebp
popf
mov
pop
bnd
or
mov
xor
push
xchg
mov
test
insb
mov
loop
jg
and
int3
mov
mov
pop
test
mov
and
jl
out
movsb
fs
jnp
cmpsb
and
std
dec
mov
add
push
mov
jne
push
sbb
scas
cmpsl
pop
insl
mov
cmp
mov
ljmp
pusha
mov
add
push
insb
test
les
movsl
cwtl
rolb
pop
mov
push
aaa
lea
addr16
jae
hlt
es
xor
cld
scas
call
mov
push
mov
testl
push
mov
imul
pop
fcompl
sti
jle
outsb
jne
mov
xor
sub
push
insb
pop
pop
pop
fmuls
ret
push
je
loope
jnp
mull
mov
cmpsl
sbb
orl
pop
xchg
adc
push
adc
enter
inc
es
sti
inc
addr16
adc
clc
movsl
adc
int3
mov
imul
inc
jb
fildl
pop
in
cmp
dec
inc
daa
cmp
xor
jmp
dec
xorl
inc
jg
cmp
xchg
add
adcl
dec
add
int
mov
sbb
lcall
pop
imul
adc
xor
push
pop
insb
sbbb
xor
push
ja
add
jbe
addr16
sbb
adc
mov
add
inc
std
mov
scas
ja
add
jp
sub
outsl
out
xor
and
mov
pop
or
jge
sbb
inc
dec
mov
clc
cmp
xor
cs
and
imul
or
lods
nop
rcll
rcr
mov
lret
push
cmc
fldt
repz
hlt
int
jne
popf
pop
repz
mov
mov
xchg
sbbb
pop
xor
xchg
lods
shlb
lret
jl
adc
out
sbb
sbb
stc
pop
cmp
cmc
mov
cltd
mov
adcl
imul
ss
pop
sti
add
mov
outsl
paddusw
sbb
pop
aad
xor
adc
or
ret
test
mov
pop
pop
lcall
lods
test
xchg
sbb
stos
in
daa
lahf
xchg
lret
lods
test
int3
stos
call
dec
xorb
fsubrp
int3
addr16
stos
inc
ss
les
insl
dec
out
and
jg
push
push
movsb
push
stos
mov
jb
dec
or
cmp
mov
not
shll
cmp
hlt
fwait
inc
push
jns
shl
mov
fs
mov
and
es
xchg
mov
frstor
adc
call
filds
addr16
div
inc
push
and
mov
inc
cs
stos
jp
add
scas
iret
pop
mov
push
repz
pop
inc
imul
jp
and
mov
inc
std
pop
sub
mov
ja
pop
and
popf
movsb
addr16
std
push
adc
sub
aaa
les
jae
xchg
dec
push
inc
int
xor
jg
inc
shlb
cs
dec
cltd
push
fimuls
sbb
pop
push
int3
and
add
jo
ficoml
call
ror
inc
mov
add
jmp
divl
inc
ljmp
sahf
xlat
out
add
jecxz
fistpl
push
out
out
xchg
lods
lret
pop
sti
jl
neg
add
in
leave
add
enter
imulb
inc
mov
sub
sbbb
fisubrl
pop
out
or
sub
add
in
jo
loopne
jne
adc
icebp
adc
xchg
push
mov
sub
push
int
or
and
shll
imul
xchg
leave
fsubr
popf
xlat
xor
outsb
xchg
push
out
std
xchg
js
inc
sbb
out
add
jl
pop
inc
adc
lcall
sub
dec
data16
adc
mov
and
xor
pop
and
loope
mov
xor
imul
sbb
vandps
test
lock
pop
mov
inc
fsubrs
lods
cmp
loop
cld
je
imul
ret
dec
add
std
pop
push
pop
rcl
fsts
or
lods
sub
adc
or
jbe
outsb
loop
cld
aaa
and
pop
xor
loope
sub
test
pop
mov
arpl
fsub
out
dec
repz
arpl
mov
aad
sbb
into
sbb
mov
xor
xor
into
mov
jb
push
into
cli
inc
call
xchg
mov
push
mov
mov
mov
imul
or
jne
inc
inc
inc
inc
adc
adc
mov
add
push
in
imul
inc
sbb
push
lcall
mov
movb
mov
xchg
xchg
pushf
inc
out
dec
mov
adc
jo
pop
adc
inc
dec
fwait
mov
cmp
or
lret
out
daa
pusha
sbb
and
jg
sbb
sub
cmp
and
ret
dec
subl
sarl
imul
or
jo
xor
xor
adc
xchg
lcall
xor
shll
imul
lea
ss
jge
sub
sar
jno
xchg
xchg
sub
sbb
push
sbb
jno
mov
and
jae
fcmovnu
adc
mov
mov
adc
outsl
jmp
jecxz
dec
sub
add
ja
jne
pop
jae
in
subl
scas
or
scas
insl
out
jo
cli
stc
pop
icebp
outsb
repz
loope
repnz
adc
pop
scas
insl
mov
popa
mov
jns
dec
test
mov
cmp
adc
sbbb
push
loop
lock
jne
ds
jg
and
or
jg
push
pmullw
and
shl
shr
loope
jg
daa
push
shlb
rcrl
jbe
insb
pop
add
mov
stos
pop
testl
push
add
lock
xor
or
js
push
xchg
jns
cmpsb
stc
and
and
sbb
inc
jae
jne
mov
js
mov
ja
sbb
out
fcomip
stos
cmp
lret
and
dec
stos
stos
addb
lods
fdivrs
cmp
and
aaa
mov
imul
dec
iret
push
cmp
dec
adc
push
cmp
cmpl
stos
push
cli
inc
pcmpeqb
lock
inc
add
push
arpl
push
lret
mov
add
cli
aaa
add
and
sarb
add
inc
nop
inc
dec
addl
pop
pop
repnz
mov
repz
mov
or
xchg
daa
push
push
into
cmp
mov
or
movsl
or
push
pop
arpl
xchg
inc
out
lods
sub
std
sbb
ret
pushw
sub
stos
mov
loope
adc
mov
push
push
addr16
mov
jecxz
movsl
mov
in
jp
jecxz
adc
cwtl
lcall
jno
cwtl
xacquire
nop
mov
sub
push
and
test
cs
and
outsl
pop
mov
jnp
xchg
nop
mov
imul
ljmp
gs
xchg
pop
gs
push
lods
scas
mov
mov
data16
push
add
cwtl
jg
cs
pop
call
mov
pusha
adc
out
mov
dec
or
or
mov
cmc
aad
daa
inc
out
pop
out
emms
addr16
dec
mov
scas
jae
xor
gs
pop
das
repnz
push
and
add
push
scas
xchg
sbb
repz
aad
xor
jg
mov
jge
out
push
xchg
scas
inc
xchg
into
push
sub
push
xor
push
lea
jo
jecxz
ds
push
adcb
mov
dec
and
popf
lods
xchg
pop
xchg
outsl
push
scas
jno
ss
imul
mov
sbb
pop
jg
sub
dec
out
jno
gs
pop
cmp
inc
jb
jbe
jne
add
jne
gs
outsb
pop
in
sbb
push
pop
cmp
out
mov
clc
and
mov
into
push
jp
inc
pop
push
inc
push
pop
xor
mov
int3
pop
scas
and
sarb
pop
jg
out
mov
movsb
in
mov
dec
cwtl
repz
sbb
flds
xlat
sub
jp
inc
sbb
jae
sub
into
sub
pop
jmp
inc
pop
jne
sahf
mov
cmovp
sub
dec
mov
test
mov
cs
dec
in
imul
testl
sub
pop
shr
or
push
pusha
add
add
mov
movsl
gs
es
add
outsb
xchg
adc
mov
jmp
mov
jb
jno
sub
rorl
jns
rorl
sub
cmp
mov
add
das
rcrl
das
adc
xchg
divb
orb
push
ljmp
popf
fldenv
and
mov
jb
mov
push
mov
xchg
jge
loop
pop
pinsrw
xchg
loop
cmp
ja
push
outsl
loopne
sub
test
cltd
notl
std
xlat
shl
rcll
bound
pop
or
mov
fldt
idivl
jecxz
cmpsl
call
lea
negl
jb
icebp
scas
sub
jnp
sub
dec
push
jo
jne
push
out
jnp
jnp
into
mov
cmp
push
cmp
push
mov
and
dec
repnz
insb
aas
inc
xor
not
jbe
mov
movsb
daa
js
sbb
jo
sub
out
cmp
rclb
ret
in
pop
mov
rorb
jg
adc
and
pop
jnp
rcrb
leave
and
mulb
pop
shlb
jp
cmp
iret
sub
pop
push
xchg
push
dec
adc
cs
inc
out
ds
push
imul
cmp
xlat
repnz
stos
add
ss
lahf
xchg
jge
cmp
fcoml
pop
stos
mov
js
or
loop
stc
inc
mov
jmp
stos
mov
mov
out
cmp
pusha
sti
pop
adc
iret
pop
sbb
rorb
and
jmp
and
lods
or
gs
cs
mov
inc
adc
sbb
mov
adc
loop
outsb
inc
xchg
xchg
cmp
or
push
imul
xchg
jg
mov
mov
jp
data16
testb
lcall
sbb
pop
fbld
enter
inc
mov
lcall
and
xorl
dec
jecxz
jge
stos
push
je
dec
pop
leave
insb
jne
ficompl
cld
push
enter
mov
iret
iret
cld
or
mov
pushf
cltd
stos
inc
jno
std
daa
sbb
iret
insb
sub
or
int3
push
das
xchg
inc
ds
jp
sbb
sub
in
xchg
cli
or
lcall
jbe
push
sub
into
push
dec
mov
sbb
adc
clc
cmp
push
xchg
mov
sub
sub
je
loope
and
push
popf
xchg
sub
jo
shll
jno
mov
jnp
mov
sbb
jge
leave
pop
fs
test
lock
xorl
push
jmp
in
ret
fstl
adc
push
pop
dec
add
fildll
pop
je
sub
repnz
hlt
popl
data16
enter
cmp
leave
jle
xchg
or
stos
mov
insb
repz
cmp
pop
icebp
push
jne
jmp
filds
shll
dec
std
daa
xchg
popa
mov
xlat
pop
push
push
sbb
dec
hlt
mov
push
mov
out
xor
jmp
jp
pop
leave
fistps
xchg
mov
or
out
cli
jmp
mov
dec
sahf
cmc
das
inc
xlat
dec
cmp
inc
add
xchg
mov
mov
jmp
int
mov
pop
faddp
icebp
jmp
or
test
sbb
cltd
and
insl
mov
in
jne
in
sbb
dec
loopne
pop
out
hlt
adc
loop
inc
mov
cmp
dec
mov
and
inc
adc
jmp
mov
call
jnp
sub
addr16
inc
addr16
lcall
fstps
lds
push
sbb
in
xchg
dec
mov
mov
decl
xor
pop
es
cmc
loop
jae
das
push
push
rcl
dec
into
repnz
mov
int3
mov
cmp
xor
stos
dec
rorb
and
pmaddwd
lret
xchg
imul
and
mov
rcrl
cmp
xchg
sub
and
sahf
fcomip
jne
push
stos
cmp
pusha
cmpsb
push
adc
scas
addr16
push
popf
lcall
in
aaa
shr
sti
adc
sbb
iret
mov
sbb
gs
mov
push
icebp
cltd
xor
nop
out
fdecstp
ss
in
mov
or
adc
inc
add
dec
in
mov
push
and
hlt
aaa
pop
shlb
call
xchg
push
es
push
mov
jmp
les
dec
dec
decl
lods
test
jne
js
xor
mov
int
sub
pop
dec
nop
sbb
lea
mov
push
pop
jmp
xchg
mov
jo
xchg
push
testl
lock
popf
cs
ss
jg
out
adc
cmp
rcrl
push
clc
lret
mov
fmull
cmp
and
imul
jmp
lods
in
cmpsb
rorl
negl
mov
or
arpl
ret
arpl
mov
int3
jno
xchg
clc
insl
jle
lods
pop
add
mov
inc
ror
adc
sbbb
mov
loopne
push
ds
lcall
ds
mov
xor
iret
lods
pop
add
lcall
test
icebp
mov
add
jle
hlt
imul
lahf
out
decb
cmpsb
cltd
addr16
mov
ss
inc
jbe
cmp
aad
sti
mov
loop
adc
fsubr
aaa
scas
test
nop
lret
xchg
popf
pop
mov
xor
sarb
sub
subb
cmp
inc
insb
into
adc
movsb
pop
data16
sub
lcall
sub
ret
dec
add
inc
cmp
sub
pop
les
arpl
sub
push
lret
or
push
out
loope
jns
test
ret
clc
sbb
iret
or
bound
adc
inc
mov
aad
rcr
jmp
push
inc
mov
dec
jns
aam
cmp
cmp
xor
jae
ja
popf
aas
mov
add
xlat
es
test
pusha
div
pop
or
icebp
cltd
xchg
pop
cwtl
imul
into
mov
loopne
fwait
arpl
cmp
or
into
xchg
int
xchg
push
arpl
xchg
inc
add
mov
lods
mov
dec
push
orl
enter
inc
mov
std
dec
inc
xlat
iret
lods
das
les
cmp
push
stos
mov
addl
sbb
push
addr16
stos
push
iret
scas
mov
testl
mov
out
adc
push
stos
stos
mov
push
mov
das
cltd
sbb
push
inc
test
shl
pop
adc
jb
rolb
int3
int
daa
fimull
dec
and
ficoml
out
or
nop
lea
xchg
ja
pop
sub
push
movsl
jo
rclb
pop
pop
xchg
jne
repz
iret
imul
scas
inc
insb
les
outsb
mov
sub
mov
mov
cmp
pop
es
test
adc
mov
cmp
push
sahf
xlat
loop
lds
or
ret
aam
neg
sub
mov
adc
adc
jo
pop
shl
fs
pop
sub
insb
mov
sbb
or
ret
scas
ss
cltd
jp
or
or
popa
xchg
clc
movsl
enter
mov
pop
movsb
xchg
sbb
mov
movsl
xchg
xchg
aas
pop
outsb
out
mov
aad
add
inc
mov
or
movsb
mov
sub
mov
sbb
ret
adc
jne
test
outsl
out
js
push
movsl
pop
push
cmp
push
adc
pusha
push
aaa
xchg
inc
into
cltd
pop
scas
jmp
inc
xchg
daa
mov
and
cmp
out
lods
xlat
fcompl
mov
out
pop
es
cwtl
mov
fisttps
and
and
add
loop
outsl
neg
cmp
inc
mov
cmp
outsl
jle
jae
aad
xor
xchg
inc
jo
scas
inc
cmpsl
mov
cmp
movsb
jnp
or
push
inc
popl
lea
in
cmp
addb
int3
in
jecxz
stos
mov
popa
hlt
or
mov
int
cmp
aam
mov
das
pushl
sbb
or
pop
mov
clc
push
cwtl
mov
dec
push
mov
shl
mov
lods
dec
mov
and
push
test
les
inc
inc
aas
cmp
fnstcw
adc
jne
jnp
pop
xor
pushf
cmpsl
rcrl
fiaddl
push
lds
sub
or
pop
movsb
push
xchg
mov
adc
addps
and
sarl
inc
or
fiaddl
adc
daa
jp
psllq
in
scas
inc
clc
xor
ss
mov
or
dec
jae
pop
dec
adc
jge
cmp
jg,pt
add
mov
push
mov
xor
cmp
xor
and
int3
ljmp
test
pop
adc
push
add
cs
popw
mov
inc
arpl
ja
push
rclb
outsb
arpl
lcall
std
insb
les
mov
dec
cmp
mov
push
mov
xlat
mov
and
sbb
pushf
mov
rorl
lods
and
mov
popl
dec
dec
jbe
sub
sarb
pop
adc
and
cmpl
ja
gs
xchg
shr
jne
xchg
filds
mov
sub
ss
and
pop
test
cwtl
lock
jle
pop
aad
jg
adc
ljmp
xor
popa
js
xor
push
jp
add
pop
push
cmp
call
cmpb
and
or
adc
sbb
cmp
inc
aad
sub
lret
arpl
stc
fldt
aaa
out
andb
inc
mov
cld
mov
mov
and
fbstp
and
xor
arpl
scas
repz
xor
xchg
test
sbb
pop
xchg
add
ficoms
das
push
sahf
jns
fidivrl
not
outsb
and
pop
cmc
push
xor
ficoml
mov
and
mov
and
loope
sarb
mov
stos
fwait
and
or
cmc
mov
test
mov
or
sub
popa
jle
outsl
enter
mov
mov
xchg
bound
xchg
dec
push
pop
mov
inc
pop
addr16
inc
test
daa
out
das
fs
cld
and
fimull
sbb
std
cmp
das
ja
and
addr16
lods
and
cmpsl
sti
mov
jo
stos
pop
cmpsb
pop
dec
adc
lcall
inc
jbe
pop
movsl
xchg
add
push
mov
movsb
or
out
call
fsub
ret
decb
loop
mov
add
enter
mov
test
test
lds
jge
sub
mov
out
repnz
mov
push
scas
daa
adc
push
nop
sub
test
jmp
xor
mov
call
push
push
push
inc
mov
inc
inc
fidivrl
pop
popa
fsts
es
or
xor
in
mov
cmp
or
xor
rolb
xor
ret
and
mov
xchg
loope
outsl
xchg
mov
andl
in
loopne
dec
rcl
test
pop
mov
or
hlt
jg
add
sbb
cs
leave
jle
jae
xchg
mov
jg
push
enter
dec
ljmp
sbb
push
stos
rcl
adc
push
xchg
xlat
rol
call
cmpsb
fsubr
push
push
std
push
sub
or
mov
sbb
inc
rolb
mov
lods
out
pop
mov
xor
fidivs
fstpl
adc
mov
mov
out
popf
xlat
pop
js
and
mov
and
push
rclb
jae
add
movsl
shrl
jo
jle
or
pop
push
les
jmp
jmp
add
lahf
mov
jnp
out
daa
cmp
jle
mov
jecxz
add
sub
mov
jmp
das
inc
loopne
mov
sbb
pop
xor
movsb
adc
cmpsb
jnp
push
mov
sbb
mov
cmp
mov
fbld
scas
repz
pushf
jle
aaa
loope
fadd
mov
stc
xchg
imul
divb
pusha
jbe
imul
jecxz
jnp
arpl
adc
inc
xchg
in
xor
mov
repz
xor
inc
add
pop
loopne
add
jbe
imul
pop
into
jno
jns
mov
push
xchg
xor
out
pop
sbb
pop
leave
dec
in
xchg
dec
inc
xchg
rcrb
dec
pop
test
inc
mov
ret
fucomp
adc
call
or
int3
xlat
xchg
loop
cmp
mov
mov
sub
fnstenv
sbb
mov
movsb
dec
cli
dec
fsubl
scas
data16
pop
cwtl
add
loope
xor
pop
jne
fs
mov
loopne
aad
adc
cltd
rclb
push
std
mov
inc
je
repnz
jne
js
fmul
sub
pop
iret
mov
lea
movsb
cmp
push
and
mov
push
and
xrelease
fiaddl
ja
fisubs
out
out
in
clc
and
adc
iret
push
incl
test
and
xchg
pop
cwtl
xchg
lds
imul
mov
movsb
repnz
imul
push
mov
aad
cmp
jno
sub
sarl
dec
lret
mov
scas
out
jl
daa
and
fisttpl
sub
mov
and
imul
mov
scas
flds
inc
and
xchg
xor
and
add
pop
jnp
ss
pusha
and
int
sbb
xlat
repz
dec
mov
int3
cld
dec
cmp
rorb
dec
leave
and
mov
cmpsl
cmp
xor
cmp
movsl
sbb
daa
leave
mull
inc
in
xchg
insl
sarl
je
xchg
clc
decl
fisubs
inc
dec
jae
mov
and
xor
stos
inc
mov
cmp
add
jo
push
xchg
movsb
gs
jb
mov
sbb
popa
cmp
lods
mov
arpl
jo
sbb
fcmovne
cwtl
addr16
xorb
or
and
pusha
addr16
fs
fstpl
adcl
punpcklbw
add
test
fwait
shl
ljmp
mov
ret
shl
aam
pop
fcomps
sub
cltd
mov
xchg
xor
push
insl
std
scas
mov
ss
inc
dec
adc
xor
jmp
int
or
push
xchg
push
in
xchg
loopne
dec
or
xor
movb
xor
lahf
add
outsl
dec
inc
mov
pop
out
inc
xlat
sub
cmpsl
aaa
imul
leave
cltd
xor
mov
and
sub
sbb
sbb
lret
aas
cmc
mov
pop
imul
or
mov
xor
cmp
pop
adcl
and
mov
negb
test
fcompl
jae
adc
dec
xchg
cmp
xchg
lds
pop
mov
adc
rol
xchg
mov
mov
xchg
mov
push
lret
jmp
jnp
cmp
xchg
or
subb
inc
loopne
push
test
cmpl
outsl
ret
movsl
push
ret
int3
mov
cmpsl
mov
fs
in
mov
cmp
mov
and
mov
lods
in
dec
je
cmp
push
xchg
shll
into
push
insb
dec
jno
inc
inc
fcmovb
sahf
dec
push
lret
push
out
mov
ficompl
cwtl
fimull
aas
push
or
push
push
das
aad
repnz
call
fnstsw
test
bound
pop
stos
xchg
inc
cmpl
cltd
and
inc
jp
fchs
pop
xchg
pop
addr16
cmp
mov
out
add
cmpsb
mov
push
xchg
pop
mov
in
and
xchg
jecxz
loope
neg
jae
push
insl
push
sbb
in
out
daa
push
fcomip
out
jecxz
loopne
and
add
call
add
jae
sbb
loope
sub
inc
lods
pop
loopne
pop
andl
push
inc
fs
jnp
leave
in
ja
icebp
push
push
fstp
cmp
dec
push
pop
movsl
mov
into
dec
lret
cmp
mov
xorb
in
fiadds
sti
xchg
out
push
push
xor
data16
add
in
popa
xor
cli
jge
adc
mov
inc
imul
dec
mov
mov
call
test
mov
adc
jg
test
or
cmp
inc
adcb
dec
pop
mov
push
mov
inc
lret
aas
cltd
mov
aas
mov
push
adc
dec
lods
movsl
test
dec
stc
add
pop
xchg
jnp
movsl
xchg
mov
imul
push
loop
int
movsl
rcr
scas
hlt
mov
dec
jmp
jnp
nop
and
icebp
scas
lcall
clc
inc
call
mov
cmpl
add
xchg
loope
inc
fsubs
test
inc
ds
fisubrl
pop
ds
cmp
ret
inc
outsl
lea
push
mov
sbb
mov
fistpl
adc
loopne
mov
test
sbb
js
ret
xor
jg
pop
cmpsb
sbb
sbb
cmp
push
jne
fisttps
adc
push
jne
cmp
pop
aas
sbb
negl
ljmp
xchg
popa
sub
hlt
test
out
sti
adc
decb
ss
inc
inc
adc
jnp
shrb
cmp
xchg
mov
xlat
jg
xor
mov
add
lret
pushf
add
fdivl
ficoml
or
adc
add
mov
inc
push
adc
sbbl
cmp
fwait
dec
popf
push
push
xchg
add
mov
mov
cld
sti
or
outsl
sti
aaa
jmp
lods
sbb
push
jl
lcall
cltd
xor
popf
mov
cltd
cmc
sbb
popa
insb
sub
lods
pop
les
test
fdiv
rcrl
mov
mov
out
sub
pusha
mov
or
dec
std
lahf
mov
push
jb
push
sti
sti
mov
cmc
leave
add
int3
mov
jp
inc
sbb
inc
flds
mov
les
inc
insb
nop
jnp
cmp
popa
mov
shlb
lds
xchg
aaa
fcoml
stos
lcall
sahf
stc
sbb
xchg
psraw
pop
pop
int3
push
sti
add
fs
ja
mov
in
aam
mov
movsb
insl
mov
mov
sub
xchg
sub
sub
int
mov
dec
dec
ds
push
mov
mov
pop
pop
lret
cmp
adc
inc
shrl
pusha
lock
orb
rcrb
ja
pop
data16
xchg
jecxz
xor
fldl
arpl
jo
cmp
sub
lods
cs
imul
pop
rorl
inc
xlat
add
mov
daa
mov
fadd
in
rorl
jb
jno
xchg
fcomp
test
out
lods
add
cli
cli
scas
lods
dec
pop
xor
and
stos
insb
jg
mov
lds
push
mov
push
sbb
mov
adc
orb
call
pop
pop
pop
xor
ja
imul
adc
push
jne
adcl
cmp
jg
aam
ret
pop
iret
sub
inc
insl
push
mov
pop
fwait
fs
jl
mov
rorb
mov
movsl
xchg
mov
xchg
xchg
xchg
jmp
mov
pop
push
imul
jae
fisubs
mov
pop
dec
or
adc
dec
and
dec
pop
mov
pop
inc
js
data16
or
adc
inc
mov
add
adc
mov
sub
fidivl
cwtl
pop
in
shll
xor
mov
je
dec
add
in
xchg
inc
loope
mov
lcall
sbb
lods
cld
inc
mov
mov
lret
test
rorl
push
fisubrl
fldt
mov
inc
mov
pushl
aaa
push
push
jl
fs
xchg
dec
xor
outsl
dec
pop
ds
out
leave
mov
pusha
pop
lock
sti
mov
mov
mov
fs
and
jno
push
jb
scas
loop
jle
aas
push
sub
mov
jns
pop
js
lret
pop
sbb
test
sub
adc
loopne
xchg
xchg
and
xchg
mov
and
leave
push
fcmovne
pop
popa
adc
ret
dec
fdivl
mov
in
add
cmc
repnz
test
mov
push
inc
push
loope
or
mov
inc
pop
xchg
in
cld
shlb
movsb
scas
or
pop
mov
adc
jge
add
mov
addr16
dec
pop
add
adc
ret
inc
xor
lret
into
mov
jle
andb
mov
cmp
cmp
rcrl
cltd
gs
test
push
pop
mov
test
jg
mov
vunpcklps
xchg
sub
pop
mov
dec
aam
cmpsb
stos
cmp
add
das
aas
movsb
icebp
adc
sbb
jge
das
cmpsb
push
pop
test
rclb
jo
ss
fisttps
inc
ss
mov
nop
jge
aaa
pop
dec
cmp
lds
roll
fcomps
cwtl
mov
pop
push
xchg
lahf
mov
cltd
call
jne
lock
jge
movsl
push
ret
fcoms
mov
xor
fldcw
std
sub
pop
sti
shll
pushf
inc
sub
stos
and
dec
stc
aaa
iret
and
xchg
fdivrl
jl
les
push
dec
pop
out
imul
adc
ljmp
std
rcrb
sahf
push
mov
outsl
pop
in
shl
mov
jle
lahf
jg
adc
xchg
jae
data16
aam
adc
inc
les
mov
dec
push
cmpsb
cmp
sbb
mov
push
cmp
dec
or
mov
xchg
add
adc
loope
outsl
out
popa
in
rcrb
aas
lahf
or
pop
subl
test
add
cmp
cmp
mov
sub
xchg
lds
push
insb
jmp
inc
pop
jo
int3
aaa
mov
or
out
ss
fs
xchg
in
lds
fnsave
sub
rcll
inc
call
add
mov
pop
dec
mov
cmpsb
dec
out
out
push
std
xchg
in
adc
into
adc
lods
dec
call
dec
loopne
fidivs
xchg
pop
in
movsl
sub
dec
ret
arpl
mov
aad
add
mov
jnp
shrb
xchg
stos
pop
pop
je
pushf
adc
pop
out
mov
std
ret
scas
and
insb
sub
enter
aaa
xchg
sub
fists
xchg
sbb
cwtl
xchg
inc
mov
stos
pop
xchg
or
fwait
sahf
addr16
lock
insb
aas
cmpb
add
mov
aad
adc
fbstp
lahf
cwtl
ja
sbb
test
mov
ljmp
hlt
mov
push
mov
xchg
pusha
push
adc
pop
and
insl
arpl
sahf
xor
mov
jmp
ja
push
inc
mov
fisubs
adc
loop
fnstcw
mov
or
xor
imul
fsub
lods
xor
mov
cld
xor
adc
jns
mov
cmp
lds
sub
or
add
sti
dec
lods
outsb
cmpsl
pop
jne
lahf
shlb
jb
mov
test
sub
sub
pop
clc
test
inc
fistpll
mov
and
aad
out
mov
popa
lods
in
out
jecxz
outsb
movsb
mov
fisttpl
popf
mov
insb
pop
xor
adc
mov
fwait
inc
or
inc
mov
mov
outsl
add
into
cli
test
fsubr
pop
repnz
in
mov
jns
insb
cwtl
scas
das
ret
push
ret
push
or
js
inc
mov
repz
inc
out
les
lret
loope
das
int
dec
inc
lret
mov
push
stos
cmpb
adc
inc
jns
popa
mov
dec
addl
add
push
scas
nop
sbb
or
mov
and
stos
pop
test
cmp
dec
jnp
mov
cltd
loope
lea
xor
xchg
push
and
pop
mov
fucomi
movsl
pushf
outsb
and
outsl
push
rcll
repz
inc
aad
dec
idiv
sti
fisubrl
jecxz
rorl
ror
es
sbb
xor
addb
arpl
test
lret
pop
lret
cltd
popf
xor
add
add
push
out
lcall
aaa
or
or
xchg
xor
sahf
push
cmpsl
cwtl
adc
mov
int3
scas
push
lods
cmp
sub
es
outsb
pop
add
lea
out
pop
pop
and
mov
cltd
es
outsb
jae
stc
test
pop
in
je
ljmp
or
inc
fimuls
and
or
mov
dec
xchg
insb
iret
pushf
pop
jno
incl
xchg
sti
xchg
inc
mov
jge
add
sbb
mov
and
in
adc
mov
mov
mov
jmp
icebp
adc
pop
std
adc
cmp
cwtl
int3
dec
popa
sbb
out
push
clc
dec
enter
dec
dec
mov
shrl
sahf
test
lods
pop
jbe
loopne
adc
jg
mov
push
sbb
stos
loope
daa
push
jne
push
xlat
pop
popf
and
cltd
dec
dec
arpl
mov
shlb
mov
and
lds
sbb
cmp
pop
push
enter
hlt
mov
daa
pop
xchg
in
jg
mov
imulb
imulb
jnp
rorb
jle
mov
cmp
push
lahf
test
mov
cmp
imul
mov
outsb
fistpll
call
push
cmp
aam
cmp
cmpl
out
jp
fs
icebp
sbb
fcomip
ds
ss
sub
and
insb
cmpsb
jg
fstpl
xor
or
jae
rol
lock
lds
hlt
mov
sbb
imul
sub
ds
push
mov
jns
dec
ret
mov
adc
mov
sub
push
push
push
mov
jecxz
sbb
aad
jne
jl
sbb
enter
xchg
mov
xchg
add
mov
xor
cmpsl
xor
lds
inc
ljmp
cltd
bound
mov
les
clc
dec
fdivr
sub
xor
lcall
lods
leave
push
push
dec
jb
insb
popa
sub
sub
lcall
lahf
mov
cwtl
fmul
xchg
outsl
add
xchg
test
adc
stos
sbb
jne
pusha
adc
int3
leave
mov
push
shrl
pop
cld
and
xor
inc
in
xor
mov
dec
pop
push
push
sti
ret
push
sub
roll
cli
lret
lock
xor
arpl
daa
jge
fisttps
sarb
xchg
loope
xor
mov
cmc
pop
adc
sub
lcall
cmp
mov
mov
iret
adc
xor
cmp
sub
lods
popf
add
push
mov
sbb
and
mov
divw
notb
test
fdivl
xor
lcall
pop
std
mov
ret
test
adc
je
mov
fimuls
push
adcb
add
jl
insl
ljmp
mov
lods
cmp
push
jns
call
pop
jl
nop
hlt
push
push
dec
das
mov
decb
add
cwtl
cmc
addr16
inc
sbb
les
out
jo
pop
ret
ret
push
frstor
popa
aam
imul
add
mov
repnz
int3
sub
jbe
popa
jno
imull
and
adc
int3
sub
lcall
mov
mov
push
gs
cmp
push
xchg
and
in
cmp
pusha
sbb
add
addr16
movsb
nop
dec
push
jae
std
loop
xchg
mov
lds
mov
mov
mov
mov
cli
das
lahf
adc
ret
mov
movsl
out
nop
xor
sbb
aas
lds
scas
loopne
push
sbb
fstp
inc
ds
xchg
shufps
sbb
jb
fmulp
sarb
or
frstpm(287
out
insb
mov
stos
xor
and
cmc
popa
pop
mov
mov
or
addl
cmpb
imul
sbb
out
jecxz
jl
inc
jbe
dec
push
xchg
fdivrl
sbb
outsl
enter
add
add
js
adc
out
out
pop
aaa
mov
xchg
cmp
movsl
out
mov
push
push
or
lds
dec
cmp
pop
jg
cld
cli
xchg
daa
int
pop
push
sbb
int
jo
jbe
add
les
pop
arpl
dec
cmp
ja
jns
push
xor
add
insl
xchg
mov
pop
or
test
fisttpl
int3
xchg
sbb
mov
add
test
mov
xor
js
stos
pushf
rorl
cmpsb
jb
in
cmpsb
ret
xor
ror
aaa
divl
enter
or
dec
adc
or
lock
cli
dec
popa
test
xchg
jns
cld
movsl
mov
repnz
pop
ret
xchg
xchg
loopne
and
and
push
mov
dec
insl
fadds
call
sub
fimuls
xlat
sbb
iret
mov
dec
in
scas
jae
mov
adc
inc
outsb
inc
adc
out
mov
push
mov
mov
sbbb
in
lret
notb
cmp
jno
test
adc
sub
mov
jns
movsl
loopne
hlt
or
and
pop
loop
scas
jne
sub
mov
or
dec
xchg
fnsave
sub
loop
test
lods
xchg
jbe
pusha
out
lahf
or
ret
xchg
in
test
fdivrs
sbb
sti
cmp
lea
mov
mov
mov
or
adc
jmp
aad
inc
out
test
mov
outsb
inc
in
lds
adc
inc
jo
shl
pop
stos
cli
jp
bound
iret
js
lock
stos
test
aad
mov
dec
imul
inc
inc
lcall
cmp
pop
pop
lcall
insb
jns
arpl
loopne
std
ljmp
fcompl
ljmp
and
aaa
and
jo
cmp
imul
cmpsb
cli
cs
cmp
mov
add
gs
fistpl
inc
adc
loop
mov
and
out
out
ror
push
shrb
cli
jbe
xchg
adc
sub
scas
enter
test
and
in
cltd
mov
cld
mov
xchg
paddusw
mov
movl
jle
out
lret
jne
xorl
and
cmpsl
hlt
aad
lds
sub
jnp
clc
popf
dec
or
fdivl
push
adc
sub
push
daa
or
out
jecxz
enter
add
and
pop
jo
shll
mov
shrl
sti
jge
jns
test
mov
jns
int3
stos
jmp
ds
ljmp
shrl
mov
bnd
or
xor
insl
jne
lds
mov
call
icebp
fbstp
xchg
mov
pop
lret
mov
divb
cmp
movsb
sbb
jno
inc
repz
xorb
xchg
mov
and
test
arpl
cmpsl
inc
cli
cmp
jb
test
rcll
mov
mov
lock
aad
adc
push
and
xor
adc
push
xchg
jmp
xor
lods
ss
out
scas
cs
lahf
rorb
cmp
lret
jno
clc
push
mov
mov
inc
insl
and
faddl
fcom
lea
or
push
loopne
js
out
jae
cmp
rol
shrb
and
js
jne
push
aas
xor
daa
adc
jns
jb
xorb
pushf
jnp
push
fisubl
test
stc
jnp
int
int
jnp
das
loopne
fidivs
loopne
stos
push
or
mov
es
cmpps
out
fldl
xchg
cwtl
ss
popf
sbb
std
out
inc
inc
loopne
inc
ficomps
inc
stc
loope
adc
pop
sub
xor
add
mov
mov
jnp
mov
xchg
test
mov
scas
xor
inc
cmpsl
fimuls
fs
lods
enter
and
sbb
iret
mov
fadd
test
xor
xchg
and
fisttpll
mov
pop
sbb
fdivs
test
popf
push
inc
popa
arpl
jge
in
out
add
inc
stc
adc
rcrb
push
ljmp
jo
in
mov
leave
imul
inc
cmpsb
insb
xchg
adc
mov
out
mov
es
fbld
or
pusha
xchg
push
inc
rorl
addb
lods
fwait
push
data16
adc
pusha
pushf
mov
mov
out
fwait
imul
jle
dec
imul
and
xchg
out
stos
add
push
fwait
mov
push
lds
mov
push
pop
push
cmp
enter
jge
insl
cmc
push
xor
jnp
adc
push
pop
test
frstor
popl
pop
and
enter
fcoml
imul
pop
jae
aaa
leave
xor
pop
int3
insl
sti
dec
cmp
mov
sub
or
and
xor
xor
and
test
push
pop
cmp
ss
lods
adc
imul
cmp
in
sub
sbb
add
xchg
fnstenv
lret
adc
xor
sbb
ret
mov
popf
or
enter
cltd
xchg
inc
addr16
sbbl
push
add
lods
aaa
and
jns
clc
stos
dec
fiaddl
or
je
cmp
cmc
jmp
int
icebp
ficomps
inc
xlat
sub
scas
dec
cmp
idivb
arpl
lret
sub
je
std
fidivl
mov
int3
xlat
loop
in
orb
lret
test
cmp
shlb
hlt
sub
lret
or
stc
insb
xchg
movsb
push
gs
sti
popf
daa
adc
lret
ja
cs
movsb
ret
test
aam
test
pop
and
shl
jnp
push
test
or
mov
adc
push
push
sahf
add
mov
and
cmp
pop
hlt
sahf
dec
clc
dec
fstl
push
push
leave
push
sub
jb
inc
push
rorl
gs
into
subl
out
stos
icebp
mov
pusha
loop
add
push
movsl
mov
xor
sub
pop
xchg
arpl
popa
mov
fistps
insb
adc
lods
inc
sbb
lods
mov
mov
sarb
iret
push
push
lods
cmp
jae
insb
rcl
js
addb
sti
adc
mov
and
cwtl
push
jae
mov
ret
cmpsb
les
mov
enter
stc
xchg
sub
mov
aas
std
int3
mov
xor
in
js
scas
iret
inc
insl
stos
xor
push
sahf
das
hlt
test
inc
icebp
dec
lock
cltd
int3
sub
jb
lods
cmp
push
mov
push
sub
out
rol
mov
test
les
jle
xchg
ljmp
hlt
aad
pop
aad
lock
scas
add
pop
inc
mov
in
ds
mov
arpl
dec
xor
icebp
inc
sub
int
test
cltd
stos
icebp
outsb
jbe
icebp
adc
xchg
cmp
mov
bnd
hlt
in
pop
sub
out
lret
shlb
sub
sbb
jbe
dec
pop
cmp
pop
aas
jecxz
jns
scas
mov
addr16
dec
js
push
clc
lcall
xchg
int3
lret
insl
int3
jnp
jo
shl
hlt
cld
mov
sti
xor
cli
fadds
xlat
mov
sub
mov
xchg
mov
add
jb
xchg
jmp
jp
or
mov
pushf
sti
int3
or
dec
xor
test
mov
iret
mov
jmp
test
subl
test
movsl
or
mov
nop
cmp
out
xor
adc
sub
xor
jge
std
xchg
jecxz
mov
mov
xor
into
mov
sub
and
cmp
xor
lods
scas
mov
mov
outsl
stos
mov
js
mov
bound
in
inc
xchg
rcr
lea
ret
nop
popa
dec
shlb
pop
and
inc
ret
sahf
je
mov
rcrl
loopne
sarl
xchg
and
rclb
push
pop
sbbl
and
mov
scas
push
xorl
fadd
scas
repnz
xchg
int3
push
fistpll
dec
xor
cltd
cmp
hlt
and
xor
mov
fdiv
lods
cmc
pop
xor
push
pop
and
imul
scas
and
cmp
out
mov
inc
addw
stos
out
cwtl
mov
inc
inc
mov
mov
jno
sub
in
scas
adc
sbb
mov
inc
lcall
mov
xchg
push
mov
push
nop
cmp
or
mov
leave
out
addr16
jl
or
outsl
or
dec
inc
popf
incl
cli
pop
sbb
or
lahf
das
mov
subb
or
sub
xor
loopne
mov
add
cmp
loope
xlat
jg
rcll
insb
mov
xchg
adc
adc
in
sub
out
jo
cmc
stc
lods
mov
divl
sarl
pop
shrb
mov
aad
lds
mov
and
out
add
push
repnz
test
fistpl
cmpsb
mov
sub
ret
cltd
sub
sbb
fstl
je
sbbl
cmp
jl,pt
mov
mov
dec
dec
inc
pop
into
push
or
loope
xchg
iret
or
stc
pop
mov
stos
hlt
pop
xchg
fdivrp
mov
outsl
adc
test
ds
rcrl
cmc
test
aas
mov
push
mov
jge
dec
mov
scas
movsl
jae
dec
ds
test
popf
arpl
or
mov
mov
nop
xchg
cmpsl
lock
das
inc
push
js
addr16
fstpt
sub
data16
sbb
xchg
mov
popf
pop
aaa
adcb
call
mov
jge
sub
dec
inc
sub
mov
inc
movsb
scas
xor
lods
push
inc
arpl
jno
cltd
sub
iret
jecxz
fwait
cli
lcall
ja
push
faddl
xor
sbb
mov
push
push
mov
out
jp
xorb
xor
push
mov
push
cltd
push
dec
push
inc
add
mul
lods
add
inc
dec
lds
sub
adc
cld
and
sbb
xorl
sarb
xchg
sbb
scas
and
sbb
push
nop
aam
mov
cwtl
iret
repnz
int
and
int3
jnp
data16
outsb
push
mov
in
shl
mov
int
lds
es
inc
arpl
mov
jbe
cld
dec
inc
adc
jg
dec
mov
xchg
push
popf
xor
adc
das
pop
pushw
xchg
addr16
fscale
jl
pop
adc
shll
sar
vmxoff
dec
xchg
mov
fucomi
ss
xchg
outsl
icebp
mov
orl
xchg
sbb
in
sub
lret
sub
pop
rolb
jo
sbb
lahf
xchg
pop
stos
xor
push
push
insl
aam
cmp
pop
pop
sbb
jns
iret
jb
lahf
jmp
iret
sti
mov
ja
pop
lods
pop
stos
hlt
adc
xchg
and
xchg
xchg
mov
ja
pop
popf
xlat
xchg
fnsave
cmc
cs
sar
push
es
test
push
testb
adc
cmp
adc
iret
test
xor
stos
sti
mov
xor
negb
or
nop
xor
add
mov
fwait
dec
scas
scas
daa
or
ret
int
fldenv
js
sbb
addr16
sub
adc
imul
rclb
aaa
inc
push
cld
je
imul
cmp
dec
fdivl
outsb
sbb
add
dec
mov
inc
frstor
faddp
sub
jmp
xor
add
xor
mov
and
out
jg
jmp
out
fdivl
arpl
pushf
and
into
xchg
pop
in
dec
movsl
imul
push
in
pop
test
jne
mov
fdivs
mov
sbb
fcompl
fsubr
out
xor
popa
out
mov
pop
sahf
sbb
inc
inc
push
dec
xchg
or
cmp
out
and
dec
ljmp
cld
mov
cmp
in
xlat
xor
inc
iret
xchg
insb
rorb
cmpsl
cmp
dec
std
aad
fisttpl
mov
push
in
lds
mov
movsb
sub
les
dec
call
push
sub
pusha
imul
aam
push
lds
aas
nop
rclb
iret
add
js
pop
mov
into
loopne
push
fists
lods
pop
shl
in
xor
loopne
lcall
andb
lret
push
aad
xor
and
xchg
or
push
addr16
xchg
pop
push
fisttps
adc
mov
xor
imul
xchg
xor
inc
and
dec
popa
in
rolb
int
in
addr16
add
arpl
fisubl
sbb
push
loope
xchg
frstor
repz
jb
jl
dec
push
cli
dec
inc
sbb
aad
or
and
dec
stc
push
inc
insl
lea
fisttpl
popa
inc
ss
jno
in
jecxz
xor
mov
xor
cmp
pop
xchg
insl
movsl
hlt
lahf
fwait
outsl
or
js
gs
cmpsl
mov
insl
add
ljmp
xchg
out
pop
xchg
popf
dec
mov
xor
inc
les
or
inc
mov
pop
push
aaa
mov
cmp
fimuls
dec
addr16
inc
push
and
scas
je
daa
int3
cltd
ret
sub
mov
push
push
nop
test
push
lods
cltd
int3
ficoml
adc
sbb
outsb
loop
cmp
rcrl
cs
loop
cmp
xchg
in
xor
and
mov
push
sbb
out
sbb
aas
cmc
add
cli
cmp
jno
mov
sub
or
pop
scas
gs
in
fimull
xchg
mov
sub
mov
pop
xor
inc
ficoml
or
daa
inc
mov
scas
mov
push
fwait
mov
mov
mov
test
jge
out
dec
push
jb
ret
cmp
inc
clc
push
insb
mov
orb
outsl
inc
cmp
stos
cs
dec
icebp
shlb
cs
gs
repz
int3
rcrb
sbb
int3
outsl
cmp
ljmp
push
not
in
push
xchg
jecxz
cld
decl
adc
shlb
stc
jge
fstpl
or
lahf
cmp
xchg
or
iret
mov
sbb
xor
push
repz
pop
push
xchg
jbe
sub
lock
mov
fdivr
mov
and
nop
out
jp
xchg
scas
push
mov
out
xchg
shlb
aas
mov
mov
es
cmp
std
mov
pop
jbe
cwtl
popa
in
repz
je
push
test
xor
push
cmp
shr
push
jnp
call
jbe
sbb
adc
orb
cmp
pop
mov
adc
mov
fstps
pop
mov
lcall
xchg
push
pop
lods
mov
xor
pop
enter
mov
jns
das
fildl
mov
lcall
mov
inc
jmp
jo
add
outsb
xchg
ret
sbb
sti
adc
jb
cmpsb
mov
leave
fimuls
pop
ficompl
arpl
xchg
inc
roll
pop
xchg
out
mov
xor
mov
mov
adc
mov
xchg
jl
add
dec
gs
fidivs
mov
ret
jecxz
cs
push
lret
sub
inc
pop
cmp
cmpb
out
sub
mov
and
mov
or
fisubl
lcall
fsincos
pop
jno
arpl
addr16
cmp
scas
xchg
leave
ja
adcb
cs
fbld
bound
and
arpl
add
clc
imulb
iret
and
insl
hlt
clc
inc
xlat
test
mov
push
inc
rorb
mov
mov
adc
lcall
sub
shll
int3
sbb
pop
fldl
das
int
mov
inc
xor
bound
add
cmp
mov
mov
jnp
ficoml
std
fiadds
xor
lea
xlat
sub
out
mov
mov
and
decb
arpl
dec
xor
cs
sbb
fistpll
test
sbb
jbe
hlt
mov
iret
lea
jecxz
sub
pop
cltd
mov
adc
shll
cmp
xchg
scas
insb
sbb
mov
sub
mov
fisttps
loop
adc
clc
mov
mov
xor
leave
inc
cmp
hlt
dec
xchg
insb
xchg
insb
outsb
fstpl
les
stos
dec
cmp
pop
xor
inc
frstor
mov
repnz
xor
xchg
jge
adc
addb
dec
es
cld
sbb
sbb
fisttpl
push
les
ret
xchg
inc
andb
in
adc
ja
enter
mov
pop
call
sub
lcall
mov
jecxz
roll
push
shlb
adc
out
xchg
hlt
sub
lods
cmp
mov
cmpsl
sub
adc
dec
mov
adc
dec
popf
outsb
cltd
icebp
cmpl
xor
cmp
leave
or
outsb
popa
xchg
mov
mov
sub
cmp
sub
cmpsb
out
add
dec
lds
adc
loop
rcl
jg
icebp
mov
xor
jmp
cmovg
sub
and
add
mov
jge
loopne
fsts
mov
ss
xor
mov
popa
add
jp
ret
cmp
sbb
insl
push
les
out
jno
lock
sub
jp
fs
adc
mov
mov
int3
sbb
sub
inc
cwtl
or
jmp
scas
daa
insb
sbb
mov
mov
dec
jbe
sub
lcall
sub
aam
mov
cmp
push
sbb
xor
sbb
testl
movsb
ret
pop
insl
sbb
pushf
jo
xor
scas
xchg
adc
or
lds
cmp
dec
mov
outsl
push
stc
and
popa
cs
into
cmp
fsts
insl
push
imul
mov
mov
lods
xchg
pop
imul
pushf
es
jae
or
xchg
shll
rclb
pop
decb
enter
inc
dec
addr16
and
mov
pop
cmpsb
js
test
gs
mov
sahf
rcrl
dec
sti
adc
das
inc
mov
inc
ss
push
icebp
scas
cwtl
hlt
cld
std
imul
or
outsb
clc
aad
adc
add
xchg
push
es
int
pop
and
pop
mov
inc
or
mov
inc
fidivrl
dec
and
mulb
push
out
mov
pop
dec
mov
mov
inc
xor
mov
push
stc
xlat
push
in
popa
rclb
imul
pop
xchg
call
pop
push
xor
or
add
bound
pop
hlt
aad
jp
int3
xor
sar
fidivrl
and
inc
xor
jle
mov
hlt
add
mov
inc
fldt
mov
cmp
iret
sarl
pop
sahf
mov
mov
lods
xchg
xor
adc
jne
lcall
pusha
mov
push
movsl
cmp
aam
mov
call
imulb
repnz
js
xchg
pushl
xchg
xchg
int3
jl
notl
fistpl
mov
push
push
repnz
jge
sbb
and
js
mov
ljmp
ret
notb
repnz
insl
push
out
xchg
inc
mov
fiadds
mov
mov
mov
sub
sub
std
add
cmpsb
popa
mov
sbb
add
incl
dec
les
jmp
rcrl
push
fs
adc
addl
loopne
or
sub
jl
ljmp
nop
mov
pusha
pop
adc
inc
mov
xor
sbb
pop
inc
pop
mov
or
pop
out
sbb
push
icebp
cwtl
fnstenv
xchg
push
inc
ds
xor
in
cld
inc
mov
adc
push
sbb
jecxz
dec
in
nop
sub
movsl
add
pop
inc
push
xchg
add
test
jno
repz
dec
in
in
mov
sub
add
call
pop
hlt
jae
or
insb
sbb
cltd
lods
mov
hlt
dec
adc
aaa
add
out
cmp
pushf
test
jg
bnd
add
lahf
jle
pop
lock
mov
mov
movsl
dec
arpl
pop
and
adc
clc
es
scas
jmp
cmpsl
cmc
ljmp
cmpsl
jb
jbe
cwtl
rcrl
push
jge
popa
std
push
or
inc
stos
lret
inc
movsb
pop
inc
cmpsl
pusha
in
push
mov
push
pop
repnz
fstl
add
ret
cmpb
adc
push
xchg
or
insl
cwtl
sbb
inc
dec
push
jns
test
fwait
push
xchg
insl
movsl
sbb
aaa
mov
bound
pushf
xor
fs
sti
xchg
lret
mov
pushf
lds
inc
ds
cmpsb
inc
out
nop
inc
pop
out
ror
pop
sti
jmp
dec
adc
and
mov
adc
adc
aaa
aaa
enter
jmp
scas
xchg
daa
sub
mov
pushf
add
cmpsl
inc
push
mov
xor
add
stos
inc
push
sub
sub
jp
mov
mov
rclb
lahf
mov
and
loope
or
inc
ret
jnp
fldt
cmp
push
sub
out
repnz
sub
mov
or
es
inc
dec
in
stos
dec
mov
iret
mov
lret
mov
stc
adc
mov
outsb
push
in
adc
push
aad
lock
fcoms
out
cmpsb
movsl
fadds
xchg
cmp
and
lea
sbb
adc
lods
sbb
es
icebp
fstps
jns
push
add
dec
pop
xor
pop
insb
push
sti
dec
imul
mov
xchg
jecxz
sbb
sti
mov
add
push
dec
dec
aam
dec
add
inc
adc
nop
xchg
imul
ret
mov
loope
push
mov
fcoms
je
jbe
pop
int3
xchg
jle
gs
lea
mov
jge
xchg
xchg
fs
jmp
lahf
dec
fildl
out
mov
sbbl
in
js
lds
mov
mov
sub
mov
mov
jno
repnz
xchg
aas
pop
dec
jecxz
xchg
out
fdivs
fwait
or
out
jl
and
mov
je
fcoms
jg
mov
cmpsl
in
add
sahf
sub
dec
mov
bound
daa
icebp
inc
mov
pusha
cmp
lcall
rcl
adc
pusha
fsubs
push
shll
std
dec
dec
cmpsl
dec
rcll
sub
sbb
add
sbb
jne
leave
pop
outsb
andb
dec
cmp
pop
jo
xchg
mov
jns
lcall
int
incb
mov
ret
mov
js
mull
int3
scas
into
push
pushf
cmp
notl
jg
data16
fwait
imul
adc
imull
test
hlt
lds
sub
in
sbb
xchg
movsl
fs
dec
sarb
inc
aad
push
sub
pop
jle
jecxz
sarl
int3
adc
push
das
dec
mov
jbe
push
mov
aas
andb
xchg
iret
jle
pop
shl
inc
jns
dec
sbb
nop
jle
scas
pop
xor
roll
adc
repnz
add
scas
lahf
add
pushl
mov
or
sahf
push
rcrb
out
pushf
push
push
cmpsl
jmp
mov
add
enter
leave
in
or
xor
popl
bound
dec
sub
stos
lret
aad
in
popf
fldt
fs
jecxz
or
scas
cmp
mov
leave
and
das
sahf
decb
mov
sahf
add
mov
sub
rorl
push
sbb
jbe
out
gs
test
xchg
leave
nop
out
inc
pop
mov
icebp
sub
das
xchg
jae
xor
scas
andl
mov
mov
and
mov
stos
repnz
jecxz
stc
aad
jns
loope
ljmp
cmp
daa
sub
popf
int3
mov
lods
cmp
push
cmp
ss
es
aam
rcr
push
cli
cmpb
sti
stc
jge
fstp
clc
and
mov
clc
in
inc
jg
ja
inc
cltd
inc
push
dec
andb
jge
add
mov
out
cmpsl
leave
mov
xor
daa
mov
mov
xchg
cmpsl
andb
xchg
inc
in
inc
rcrb
or
cmp
cmp
mov
mov
iret
fdivrs
pushf
cmpsl
fsubrs
cmpsl
inc
test
rcrb
sub
push
arpl
sbb
imul
mov
lods
dec
mov
xchg
and
cmc
fiaddl
in
mov
jbe
inc
push
inc
jae
iret
daa
adc
mov
sbb
push
xchg
cmpsl
ja
outsb
in
lcall
bnd
notl
mov
jge
mov
lahf
das
lock
repz
aas
insl
adc
add
mov
ss
into
cs
jg
adc
cmpl
not
pusha
sub
cmp
jo
aas
mov
std
aas
xor
sbbl
adc
mov
mov
mov
push
jle
cmpsb
xor
mov
sbb
sub
in
xchg
iret
cli
xor
sbb
pop
cmpsl
xor
mov
mov
clc
cmpsb
insb
jmp
loope
insb
ret
outsl
mov
push
test
xchg
xor
lret
pop
in
pop
out
jbe
mov
cmp
outsl
and
aas
repz
xchg
aaa
test
cmp
cltd
cmc
dec
mov
fisubl
into
sbb
aas
push
jecxz
jle
jg
cmp
push
dec
popa
dec
ret
mov
cmp
andb
and
ss
test
xchg
and
into
dec
sbb
fcmovbe
mull
fldcw
sub
cmpsl
xchg
dec
dec
pop
push
push
in
repz
icebp
sbb
xor
push
fisubrs
mov
jb
loopne
inc
xor
or
das
fstpl
push
push
leave
mov
insl
bound
movsl
pop
sti
loop
mov
pop
push
repz
inc
jle
aad
jbe
stc
jno
mov
jo
jl
cmp
aaa
test
xor
and
and
lods
sbb
push
loopne,pn
jb
es
xchg
sub
mov
jge
cmpsb
inc
mov
sub
jp
inc
in
xor
xchg
sub
inc
sub
scas
xchg
icebp
rolb
mov
mov
ds
push
cmpsl
cmp
cmp
xorb
aaa
cmpsb
lods
mov
popa
mov
aaa
mov
aaa
sahf
nop
cmp
jmp
cmp
push
scas
mov
insb
mov
sub
sub
sub
aas
add
jecxz
cltd
push
addl
sbbb
into
fdivl
inc
pop
mov
icebp
insb
scas
in
or
jmp
mov
loopne
add
cmp
push
int
lret
idivl
push
pop
jo
add
mov
movsb
out
pop
pusha
imulb
js
mov
xchg
filds
push
fdivr
lret
jae
fisubs
daa
push
js
sub
ss
sbb
fistpll
int3
fcomp
dec
lock
bnd
je
stos
push
iret
inc
xchg
outsb
mov
repz
jle
fs
sbb
cld
subl
pop
add
iret
popa
xchg
pusha
mov
shll
outsl
sub
ror
push
stc
push
cmp
mov
ja
cmp
out
inc
loope
iret
sub
jo
adc
cld
stos
push
xchg
fsubrl
push
fsubrs
mov
test
hlt
in
xor
pushf
xor
mov
inc
aas
cmp
dec
xor
pop
jne
or
lea
fildl
inc
test
add
push
mov
rorl
lahf
cmc
lods
andb
xchg
mov
sub
enter
imul
loopne
out
test
and
pop
mov
outsl
fcmovnbe
and
cld
decl
jge
pop
mov
xchg
fstps
cmpsl
call
jno
cmp
mov
test
sub
or
sbb
ljmp
sbb
mov
push
sub
lods
lods
sti
cmp
mov
test
inc
movsb
dec
sub
loop
insb
adc
int
sbb
pop
inc
jae
pop
sbb
push
leave
push
lahf
sbb
dec
dec
or
jecxz
movsb
or
in
movsl
roll
clc
iret
xchg
jns
xchg
insb
hlt
sahf
testb
xchg
sbb
adc
imul
cmc
imul
dec
jae
sahf
mov
mov
cmc
inc
icebp
pop
out
les
cmp
mov
inc
stos
je
or
stos
nop
jl
lods
add
or
inc
sbb
mov
sbb
mov
movsb
inc
xor
xchg
ficomps
xlat
test
cmpsb
pop
cmp
xor
inc
mov
and
xchg
test
hlt
rcl
fcoms
or
ficoms
mov
push
and
adc
shlb
cmpb
jnp
dec
sbb
bound
jmp
ljmp
xchg
shll
test
fsubl
and
mov
add
clc
jno
fidivl
in
push
adc
outsl
or
test
sahf
mov
cltd
mov
lock
adc
out
daa
test
xchg
adc
push
pop
icebp
xor
cmp
push
sahf
jnp
leave
cmp
out
sbb
dec
and
int
jecxz
das
push
adc
jnp
and
fadd
pushf
cmp
adc
repz
xor
sarl
xchg
sub
lret
clc
arpl
lock
dec
in
xchg
xchg
mov
xor
fcmovnbe
pusha
dec
aaa
out
fdiv
clc
cmc
fisubrs
lds
sbb
add
inc
sbb
stos
addr16
into
out
inc
xchg
mov
faddp
addr16
inc
fnsave
push
xchg
or
mov
cmp
jo
and
and
mov
je
imul
mov
dec
add
mov
pop
xchg
cmp
mul
mov
pop
sub
mov
add
pop
mov
sbb
lods
in
jmp
cmp
lahf
mov
dec
mov
pop
adc
imul
rorb
fcmovu
jb
mov
push
or
or
dec
outsb
dec
sahf
push
jecxz
aad
fiaddl
int3
sarb
rcll
scas
andl
adc
in
ljmp
mov
pusha
inc
ds
inc
mov
pop
lods
leave
sarb
jp
mov
clc
fcmovnb
roll
dec
loope
xor
leave
loopne
scas
shlb
gs
repz
jp
fdivrl
mov
clc
mov
loop
lret
aaa
jno
aas
mov
cmp
bound
out
xor
inc
pusha
ja
jne
lret
or
pop
cwtl
leave
sbb
adcl
lcall
adc
push
mov
aaa
roll
jle
inc
cmp
imul
jg
add
sub
dec
fldt
inc
sbb
mov
xlat
or
in
mov
cmpsl
xor
sbb
and
xor
fisubl
pop
inc
adc
cmpsl
mov
fcoms
jb
in
inc
aam
insl
dec
jo
pop
out
xlat
lret
in
jmp
rcr
out
or
jns
out
push
jp
mov
cmpsb
pop
ljmp
stos
xchg
dec
aaa
pop
fucomp
hlt
mov
dec
mov
xchg
mov
sbb
call
iret
xor
stc
inc
int3
pop
mov
scas
in
pop
sub
shlb
and
jecxz
add
jl
sbb
mov
jp
aaa
or
testl
cwtl
jl
xchg
fnstcw
ret
in
push
cmp
and
or
hlt
cld
rcll
sbb
adc
fwait
dec
into
xor
jmp
sub
enter
inc
lods
js
sub
sub
jae
dec
mov
cmp
add
js
mov
cmpsb
fwait
sbb
cmp
andl
lods
mulb
mov
adc
enter
fadd
pop
xor
xchg
loope
mov
cmp
and
pop
xchg
xchg
sub
dec
data16
push
push
jmp
pop
icebp
or
inc
sbb
push
xchg
and
mov
negl
push
push
adc
add
and
xor
fsts
sub
cmp
pop
xchg
cli
add
pop
negb
dec
inc
pop
jne
mov
out
test
out
push
xchg
push
push
jmp
sbb
mov
fs
lods
add
addr16
es
scas
scas
test
xor
jecxz
jbe
lret
out
lods
int
repnz
cli
cmp
lahf
in
and
shlb
jb
mov
mov
and
mov
daa
lock
push
out
les
jge
ss
push
pop
out
es
pusha
call
test
sar
sbb
clc
shrb
push
cmp
fmull
mov
in
aas
mov
add
xor
push
xchg
sub
mov
mov
mov
popa
push
and
scas
ss
sahf
mov
fnstcw
adc
loope
mov
or
mov
xchg
cmp
iret
cmp
into
pop
fwait
xchg
inc
mov
pop
out
pop
repz
inc
pop
ljmp
cltd
mov
sub
pushf
andb
ficoms
jbe
int3
ret
cs
lret
lcall
cmpsb
lods
or
dec
dec
adc
pop
aas
xchg
std
jnp
inc
arpl
mov
xor
inc
adc
mov
inc
repnz
iret
inc
adc
jae
mov
aam
pop
add
rcrb
push
test
mov
mov
stc
enter
pop
pop
inc
movsl
jl
mov
cwtl
and
scas
sub
outsl
loopne
lods
mov
mov
jmp
xlat
add
sti
lds
aam
and
pop
sbb
sbb
and
cltd
nop
adc
in
test
inc
jns
je
xchg
and
fisttpll
lea
test
push
das
lock
into
sbb
rcrb
movsb
sub
inc
sbb
push
aam
stc
or
or
lods
loope
pusha
iret
shl
movsb
adc
sbb
in
sahf
or
pop
test
hlt
stos
push
add
mov
cmp
push
jbe
push
mov
test
les
adc
jge
fisubrl
and
xchg
cmpsl
sub
push
mov
in
mov
adc
push
adc
pushl
sbb
adc
xchg
pop
mov
cmp
inc
push
cmp
dec
push
icebp
lahf
loop
mov
xor
mov
fcmovb
stc
dec
stos
scas
inc
fs
push
out
imul
aad
sbb
stos
lcall
out
stc
rcl
add
mov
sbb
lcall
add
dec
nop
aaa
xor
ret
xchg
and
dec
int
mov
cmpl
ror
or
inc
mov
shl
insb
idivl
sub
ret
and
inc
lret
and
xlat
nop
mov
push
in
push
mov
popf
push
out
mov
repz
and
ror
cmp
data16
shlb
push
jne
and
scas
scas
sahf
daa
loop
ret
imul
cld
popf
cwtl
jp
aad
mov
ret
mov
pop
dec
cs
enter
lret
sti
cs
lds
push
mov
mov
dec
mov
leave
and
pop
inc
stos
mov
add
std
scas
lret
dec
jbe
sbb
cs
and
dec
cmpsl
fbstp
sub
test
and
shll
call
lds
in
stos
sub
arpl
lcall
ret
cltd
mov
flds
push
lret
xchg
sbbb
cld
das
push
mov
mov
cli
pushf
and
mov
mov
pushf
and
inc
mov
mov
jecxz
jne
mov
cwtl
nop
jbe
mov
pop
insl
sbb
jl
mov
test
daa
and
dec
aaa
sahf
shrl
sub
test
xor
add
incl
inc
xchg
lods
lea
push
and
push
sbbl
int
push
cmc
insb
insb
jnp
aam
sbb
test
or
inc
les
jmp
xlat
xchg
mov
xchg
mov
mov
xor
adc
push
out
lock
sub
push
jno
xchg
fisttpll
push
inc
mov
xor
xor
jecxz
cmc
cmp
push
or
aaa
ja
mov
sub
jp
loope
mov
adc
mov
mov
cmpsb
and
push
push
scas
addr16
mov
cmc
xor
adc
lret
loop
dec
data16
arpl
push
pop
enter
add
add
add
pop
mov
or
test
repz
das
or
rolb
mov
add
dec
push
or
insb
push
movsb
fdivl
jne
in
fmul
cmp
outsb
xchg
add
mov
ja
jecxz
and
mov
sbb
jnp
stos
jne
loop
or
sbb
mov
push
cltd
lock
inc
sub
ja
lods
push
mov
pop
fdiv
mov
in
pop
shll
jecxz
jp
lds
imul
lahf
and
shrl
dec
fidivrs
lods
rolb
fstps
xchg
lock
dec
lea
xchg
mov
cs
push
test
xor
cwtl
decl
data16
std
repnz
fwait
cmp
and
sub
adc
add
mov
pop
ret
jecxz
repnz
out
xor
movhps
jo
in
xlat
test
lods
dec
addr16
xchg
push
push
inc
fldcw
cltd
std
repnz
mov
pop
add
arpl
roll
xchg
leave
aad
adc
fnstenv
or
push
xor
dec
mov
lock
andl
pop
push
in
pushf
xlat
dec
cld
jno
push
push
pop
add
sub
out
mov
testb
pop
leave
sbb
aaa
cltd
pop
lods
daa
dec
mov
jl
popf
dec
insb
sbb
popa
lods
test
mov
stc
mov
jmp
daa
xor
sbb
jmp
leave
push
xlat
fcmovnbe
ds
and
pop
aam
xchg
gs
mov
stos
xchg
dec
pinsrw
inc
in
aam
imul
pop
dec
cmp
sbb
adc
js
pop
scas
mov
test
cmp
sbb
xchg
repnz
and
pop
pop
dec
jp
pop
inc
jnp
or
and
cld
jle
cmp
out
mov
hlt
adc
inc
lret
fcmovbe
jp
dec
inc
out
push
dec
lock
pop
mov
rcll
addr16
mov
sbb
lahf
inc
in
out
xchg
aaa
mov
rcrb
ret
mov
shlb
sarl
pop
aas
jae
jne
stos
imul
in
hlt
mov
js
scas
cmpsl
xchg
dec
jle
cs
es
inc
sbb
repz
test
repnz
mov
incl
xor
testl
in
mov
jmp
sahf
push
testb
cmp
es
repz
movsb
dec
fisttps
lds
insb
cli
nop
add
outsl
inc
mov
test
cmp
xor
lods
push
pop
stos
adc
cli
adc
push
xchg
xchg
mov
xchg
test
call
pop
sbb
push
and
sub
lods
fstl
xor
mov
xorb
jmp
jle
dec
xchg
and
aad
pop
mov
dec
jl
xor
push
daa
jp
xor
lods
xchg
mov
test
push
das
flds
fimuls
jecxz
adcl
and
or
in
pop
cmp
in
mulb
xor
or
add
xchg
sub
test
mov
mov
dec
gs
cmp
and
fimuls
sub
in
daa
push
inc
or
add
jle
jecxz
dec
mov
xor
adc
orb
je
lret
cmpsl
cld
adc
ds
inc
xchg
ret
push
adc
sub
cli
add
and
pop
sub
rclb
mov
xlat
xchg
fisubrl
insb
inc
sbb
fs
mull
dec
pop
mov
add
sbb
and
xor
add
ret
je
xchg
lea
jmp
in
stc
pop
add
mov
cwtl
sub
mov
dec
dec
sub
ljmp
jnp
in
punpcklwd
or
stc
adc
test
push
fimuls
lds
xchg
inc
test
add
fcoml
inc
movups
adc
inc
test
adc
dec
hlt
xor
sbb
movsl
add
cmp
xchg
lds
mov
cmpsb
mov
rclb
imul
sar
leave
loopne
and
inc
mov
scas
jns
mov
mov
ljmp
fsubl
fs
decl
adc
jmp
push
lahf
hlt
adc
lods
sbb
or
shlb
and
jl
xor
std
xchg
imul
mov
xor
divb
loop
add
and
popf
into
sti
xchg
cmpsb
push
mov
cmp
jmp
test
or
jbe
iret
cmc
out
pushf
sub
loop
popf
push
jp
ret
fldenv
js
out
ret
ds
cwtl
sahf
mov
daa
sub
test
adc
sbb
sub
arpl
push
imul
mov
push
sub
mov
cmp
imul
dec
pop
sub
add
or
idiv
loope
pusha
in
add
mov
pusha
mov
pop
mov
mov
or
and
int
iret
fidivrl
sbb
push
shlb
or
scas
cmpsl
push
pop
push
aas
and
mov
dec
pop
dec
fimuls
mov
bnd
pop
sbb
dec
imul
rcrl
aad
fsubs
push
aas
rcl
std
icebp
int3
lea
test
cmp
mov
and
push
outsl
sub
pop
xlat
xor
or
jg
daa
push
add
mov
pop
push
arpl
test
adc
rorl
out
iret
xlat
cmp
sub
imul
clc
mov
or
shlb
xor
mov
cmp
xchg
dec
gs
js
jmp
aas
fidivl
cs
in
xchg
inc
xchg
xchg
icebp
pop
shrb
ret
pop
cltd
and
roll
push
mov
xchg
rcr
jnp
rcrl
adc
sub
aad
mov
mov
jns
inc
xchg
aam
inc
jnp
repnz
ret
mov
outsl
pop
test
add
xchg
negb
test
mov
sbb
mov
mov
mov
mov
xchg
mov
push
cmp
out
mov
pushf
notb
cmp
loopne
push
mov
outsl
popf
sahf
aas
clc
and
mov
stos
mov
movsl
pop
mov
mov
jle
repz
inc
leave
cmpsl
insl
ret
scas
inc
in
lahf
mov
aam
and
in
mov
mov
adc
iret
xor
inc
sub
shll
insl
inc
test
mov
movsb
lods
or
dec
jecxz,pn
js
popa
add
decb
xchg
ret
mov
mov
sub
or
jns
pop
cmpsl
ficompl
loop
pop
fwait
pop
mov
leave
repz
mov
sub
stos
xor
push
push
add
sub
mov
lret
lcall
out
fs
jmp
push
lret
std
repz
imul
mov
jne
dec
pop
test
test
leave
cmpsl
pop
pop
add
lea
push
jmp
dec
dec
xchg
xor
inc
call
inc
into
and
cmp
cmp
mov
jmp
mov
sub
mov
shll
jle
add
pushf
scas
into
sbb
push
or
mov
dec
test
xchg
push
faddp
das
fidivrs
inc
lock
xchg
out
add
pop
cmc
pop
jl
int
nop
out
add
mov
mov
cmc
adc
fsub
ljmp
cmpb
and
mov
dec
insb
test
jl
es
push
mov
jp
sub
scas
push
fcmovu
cmp
pop
cli
adc
add
stc
iret
mov
clc
jnp
inc
mov
or
shll
jg
scas
adc
fstps
out
mov
stos
in
dec
cld
outsl
scas
push
insl
cmp
sbb
aam
cmp
mov
fwait
dec
ret
hlt
or
inc
or
mov
es
jl
fidivs
subl
imul
lods
aam
roll
das
sbb
xchg
and
cltd
inc
fsubl
je
aaa
and
push
ja
mov
popa
aam
fisubrs
shrl
cmp
mov
jno
xor
xchg
mov
mulb
and
sbb
leave
jl
rorl
cmpsb
in
loopne
xchg
data16
jns
rcrb
les
icebp
imul
and
push
sub
stos
insl
push
push
into
shll
movsb
sbb
add
push
jmp
lds
loope,pt
lock
mul
jno
mov
fisttpll
push
xlat
cmp
notl
js
das
xchg
mov
push
sti
push
repnz
jno
out
sahf
int
or
repnz
jecxz
and
test
shlb
jp
pusha
shll
cmp
in
pop
xchg
arpl
xor
int3
adc
xor
cmpsl
jg
sub
lods
mov
pushf
sub
insb
sti
add
cmp
cmpb
mov
rorl
sub
jno
loop
xchg
lret
leave
mov
inc
or
leave
test
cmpl
stc
lret
loopne
pop
mov
jbe
xor
push
push
adc
xchg
sub
jmp
jne
mov
movsl
fdivrl
sti
mov
dec
lods
rcrb
xor
dec
aam
repz
cmc
movsl
test
in
sub
sahf
out
sti
add
vpackuswb
dec
rorl
sahf
push
pop
mov
pop
out
and
and
xchg
push
mov
pop
out
repnz
stc
adcb
dec
adc
iret
test
std
loop
sbb
adc
cld
xchg
lods
rcll
arpl
cmp
xor
ds
cs
aad
popf
pop
iret
js
call
lcall
repz
push
jb
rorl
mov
aam
dec
mov
loopne
or
fstl
add
into
jmp
mov
cmp
enter
sbb
ljmp
aas
repz
scas
sub
xor
pusha
popa
gs
inc
inc
fnstsw
xchg
lcall
addr16
adc
sub
cmp
jo
sub
bound
jmp
cltd
fsubrl
cmp
pop
leave
mov
cmpsl
dec
es
lea
in
mov
insb
cmpsb
test
movsl
mov
jbe
jge
mov
push
stos
repnz
cmp
int3
xchg
in
out
xchg
stos
add
fwait
add
or
cmpl
and
out
and
pusha
xchg
sbb
cmpsb
ja
js
das
mov
pop
js
out
dec
sbbb
jl,pt
rclb
add
xorl
inc
loop
adc
pop
xor
xor
mov
sti
sarl
sub
rol
lea
xor
jae
cmp
or
ret
dec
leave
add
out
jg
lret
mov
cltd
ss
leave
dec
movsl
lcall
or
inc
mov
sbb
push
shll
mov
add
shlb
add
scas
adc
push
jge
sub
daa
mov
add
test
addr16
cld
add
fistl
xchg
push
clc
dec
js
lods
or
iret
bound
cmc
sbbb
sbb
mov
test
ds
adc
push
outsl
aas
xor
jg
lret
into
sub
mov
sbb
out
xor
in
cmp
leave
leave
enter
cmp
mov
stos
adc
in
das
mov
int
cmp
lahf
sub
pop
adc
or
scas
lock
mov
push
cmp
xchg
cmp
jno
inc
jl
aas
add
mov
sti
jnp
and
mov
or
in
inc
sub
imul
push
inc
xor
test
pop
mov
or
lret
ret
popa
xor
lds
sub
mov
cltd
cmp
add
xchg
xchg
cmp
pop
es
stos
push
push
pop
stc
aad
pop
popa
dec
bound
or
daa
mov
or
or
jl
inc
mov
test
jne
enter
test
shll
test
fidivrs
or
aad
mov
xor
gs
imul
pop
inc
fwait
mov
sbb
sbb
mov
jmp
mov
leave
mov
jne
jl
lods
inc
fsts
sbbl
push
mov
push
push
add
call
xchg
gs
push
mov
movsb
stc
test
push
mov
add
mov
sbb
jge
mov
std
out
xchg
xlat
or
mov
shrb
sti
aam
loopne
scas
inc
sbb
popa
test
cld
pop
fadds
insl
js
bound
aam
inc
loop
jbe
cltd
loopne
adc
shl
fs
adc
fstl
xor
scas
lea
mov
arpl
pop
in
cs
data16
inc
das
or
sub
test
sbb
dec
dec
add
fmull
mov
or
shr
dec
inc
shlb
inc
xor
push
arpl
adc
and
std
inc
je
or
or
pop
inc
test
sub
nop
jne
out
lcall
cmp
cltd
mov
xchg
js
nop
repz
pop
loop
ljmp
mov
mov
adc
movsb
insb
xor
lcall
mov
ret
pop
push
ds
xchg
xor
add
aaa
hlt
cld
push
lret
sbb
je
xlat
fldt
int
lahf
mov
xchg
lds
leave
adc
movsb
push
push
cmp
dec
xchg
shlb
sub
fcmovnbe
adc
fmull
sub
fsubrp
mov
cwtl
pop
adc
incl
mov
shl
cmc
cmp
xchg
mov
sti
jecxz
sub
xchg
dec
fiadds
lret
bound
ror
mov
jge
enter
xlat
ja
lret
jnp
cmpsl
lret
imul
cld
stos
stos
fistpll
lea
jbe
mov
xor
aas
pop
push
pop
sbb
xchg
ss
and
push
out
ret
outsl
scas
aad
arpl
sub
es
out
inc
cmp
pop
std
out
and
lods
fwait
mov
bound
pushf
push
scas
dec
rcl
mov
movsb
mov
lds
xchg
sbb
jg
jno
cltd
jmp
jno
cs
iret
repz
ds
insl
sub
cs
pop
lds
sub
mov
lret
lods
jecxz
imull
loopne
mov
sarb
loope
mov
fst
lret
shrl
popf
jmp
fnstsw
mov
mov
inc
mov
jge
mov
dec
push
pop
out
cmp
push
popf
mov
inc
out
lcall
push
push
inc
add
mov
xchg
fwait
jle
dec
aam
sahf
or
movsl
sahf
cmp
dec
jecxz
jg
mov
ja
fdivrl
shl
adc
inc
add
fbstp
mov
cmc
sbb
push
sbb
nop
mov
jmp
jae
aam
xor
jne
in
mov
cmp
xchg
ljmp
not
jnp
daa
cli
add
fsubr
in
pop
movsl
sti
and
and
clc
dec
scas
xchg
sub
scas
enter
loop
imul
stos
adc
push
in
arpl
xor
into
pop
clc
mov
fmuls
cmpsl
mov
mov
call
mov
dec
jp
shll
jmp
fistl
inc
xor
aad
xor
dec
xchg
mov
xchg
mov
xchg
mov
adc
mov
pushf
xor
jge
aaa
sub
pop
movsl
mov
cmp
mov
pop
add
mov
out
aad
inc
push
push
adc
mov
fisubrl
cli
clc
bound
xchg
test
xor
pop
addl
je
add
or
jle
push
pop
fnstsw
sarl
xlat
xchg
push
jecxz
add
lods
mov
xchg
lock
add
jecxz
mov
imul
or
sbb
cmp
pop
sbbb
inc
xor
xor
sarb
imul
icebp
shl
hlt
jge
dec
inc
or
and
shll
mov
ret
pop
sub
and
mov
jbe
jge
pop
sbb
or
lcall
data16
lahf
cli
adc
mov
outsl
sbb
cmc
stos
sbb
stc
repz
mov
bound
push
add
fimuls
lret
cs
push
mov
loopne
mulw
paddusb
mov
jnp
xchg
sub
js
push
xor
push
adc
and
jne
ds
mov
popf
and
cld
in
pop
lds
jbe
mov
dec
push
push
fwait
rclb
jge
add
mov
mov
xchg
sub
push
cltd
pop
sub
sbb
mov
cld
or
int
fisubl
cmp
sbb
in
cmp
cmp
inc
popa
pop
dec
xchg
lods
sub
cmp
mov
and
push
int
scas
ret
pop
xchg
cli
adc
mov
cs
imul
cld
in
xor
lock
pusha
cltd
cmp
ja
pop
jno
push
les
mov
push
rcrb
insb
call
in
xchg
pop
add
aad
scas
sbb
jb
adc
call
push
push
addr16
sbb
mov
je
fwait
inc
jge
inc
inc
and
adc
mov
mov
pop
hlt
sub
pop
dec
sti
arpl
pop
out
mov
movsl
mov
imul
loop
mov
mov
out
and
rclb
push
mov
jnp
add
scas
repnz
push
lea
add
pop
xchg
inc
imul
and
repz
ds
mov
xchg
fbstp
and
mov
mov
dec
cmp
jno
pop
inc
dec
add
ret
sahf
loopne
js
jle
xchg
mov
notl
push
add
xchg
icebp
dec
mov
push
int3
aam
inc
and
into
pop
add
pop
cld
inc
movsb
mull
nop
add
out
lock
mov
and
jp
xchg
push
cmp
sub
lcall
pusha
adc
ljmp
not
scas
repz
bnd
fdivl
adc
cli
or
cmp
cld
sub
pop
bound
xlat
adc
jnp
dec
flds
sahf
dec
les
decl
push
or
cli
iret
dec
cmpsb
pushf
rcl
inc
mov
aas
sub
pop
cmp
aad
fldt
xorb
inc
jo
enter
cmp
lret
dec
jmp
iret
in
xor
mov
pop
lret
fs
int3
fisubs
bound
pop
xchg
icebp
sub
mov
jg
daa
and
aam
mov
insl
push
ss
mov
in
movsb
push
int3
imul
not
leave
pop
pop
cmp
sbbb
cmp
jae
jne
and
in
lret
aam
adc
outsl
andl
rorb
inc
sarb
imul
repnz
jge
mov
test
scas
pop
mov
cmp
stc
jns
pusha
aas
shrl
test
lods
jge
and
loopne
scas
mov
jmp
ss
push
and
icebp
mov
test
xor
js
js
jle
sahf
lds
adc
adc
pop
pusha
aad
push
or
xor
push
out
xor
cmp
and
cmpsl
ljmp
inc
rorb
fldl
inc
popf
mov
jbe
cmc
sub
adc
xchg
out
jge
jb
popf
sbb
stc
add
sti
xchg
xchg
push
inc
sti
adcb
fucom
push
ljmp
adc
sub
cmc
shrb
into
xchg
repnz
test
add
xor
notb
and
lock
cltd
sti
in
loopne
mov
jmp
adc
dec
jns
lahf
stos
add
cmp
cmp
cmp
mov
xor
pop
sti
mov
jne
jl
test
xlat
mov
pop
xchg
jns
inc
in
rol
and
add
ficoms
or
int3
add
sub
lea
mov
xor
dec
fisubs
pushf
xchg
cmpb
movsl
mov
mov
cmp
cmp
push
insl
mov
gs
lret
andl
add
xor
nop
dec
jbe
nop
daa
div
js
adc
mov
add
add
push
popf
frstor
lcall
je
lds
and
push
adc
stos
cli
ja
out
jge
daa
xchg
cld
out
xor
add
adc
out
mov
cmpsl
inc
shrl
inc
fstl
adc
jg
data16
aad
lock
lret
inc
cmp
ret
add
loopne
jecxz
xlat
push
add
pop
adc
push
cli
cmp
outsb
jg
in
xor
test
fdivr
es
mov
dec
insl
pop
inc
call
or
addb
imul
es
mov
jbe
dec
jmp
dec
add
dec
xchg
adc
leave
int
mov
pusha
movsl
xchg
push
cltd
subb
imul
hlt
xor
jg
jbe
inc
daa
add
ja
movsl
aad
in
jb
push
mov
filds
imul
or
mov
negl
cmp
push
loopne
leave
xor
aas
inc
dec
stos
sbb
mov
xor
cmpsl
pop
adc
jge
fildll
fwait
xor
movsl
adc
sbb
jl
push
pop
test
addr16
add
push
xorb
and
jp
mov
push
in
xchg
xor
shrd
fs
filds
mov
decb
inc
cmpsl
cmp
and
daa
mov
test
lahf
mov
mov
and
jecxz
mov
sub
xor
popf
push
into
pop
or
mov
push
and
aam
bound
negl
push
rolb
sbb
mov
ret
jmp
test
and
lea
rorb
sarl
iret
cmp
cmpsb
stc
xchg
and
mov
adc
clc
add
add
inc
jo
mov
stos
sbb
adc
mov
sarb
dec
jle
fsub
xor
sbb
dec
ss
iret
test
arpl
mov
sahf
cmc
ds
or
jp
rorb
out
decl
in
sbb
jmp
mov
mov
dec
push
imul
xor
mov
pop
and
adc
test
adc
mov
inc
or
out
pop
loopne
fsubp
das
jmp
mov
into
je
cmp
fwait
leave
rorb
fistpl
mov
cld
and
sti
pop
test
mov
pop
popf
pop
cmp
jg
sbb
inc
dec
or
xchg
mov
pop
mov
mov
negb
mov
call
or
rolb
sbb
data16
add
or
mov
stos
pop
fs
pop
call
xor
adc
lea
jg
insl
jae
ret
ss
add
cmp
xor
das
stos
jmp
jo
push
jno
icebp
dec
imul
inc
adc
xchg
ret
mov
or
out
mov
ljmp
shrb
dec
ret
jmp
pop
mov
ret
push
int
cwtl
cld
inc
pop
cmc
testb
stc
vmovhpd
dec
repnz
movntq
sub
pop
stos
mov
dec
cwtl
insl
fisubl
sbb
and
loop
xchg
and
imul
add
adc
ljmp
rorb
mov
mov
out
push
out
push
and
mov
icebp
dec
cmp
mov
xor
adc
lods
mov
lret
jne
pop
inc
jl
adc
inc
pop
mov
sbb
push
or
jo
push
cmp
jmp
mov
jo
leave
dec
jecxz
fcom
push
and
sbb
pop
sti
inc
xor
mov
jecxz
lret
lret
popf
cmp
shrb
insl
sti
lea
mov
sbb
popf
out
jecxz
jle
pop
and
ss
std
fiaddl
sbb
stos
data16
push
cmpsb
dec
jns
inc
push
cmc
out
mov
insl
stc
bound
push
pop
cmp
push
stc
mov
dec
inc
leave
xor
cmpb
imul
jnp
sub
sbb
test
ds
jbe
movsl
pop
sub
dec
movsb
in
push
add
clc
out
xchg
sbb
or
arpl
popf
cwtl
xor
inc
std
mov
lret
jae
push
clc
add
ja
mov
dec
mov
sbb
jne
shr
and
jge
cmp
mov
xchg
mov
mov
or
add
stc
cmp
sub
or
ljmp
fimull
out
or
in
inc
rclb
inc
or
or
inc
hlt
xlat
cli
out
out
adc
ficoml
mov
cmp
clc
mov
add
je
mov
mov
ds
jl
add
sbb
sarl
rcl
jle
add
and
fcmovbe
aad
int3
aam
test
mov
dec
mov
sahf
dec
push
mov
int
jmp
rclb
dec
aaa
lcall
repz
pop
arpl
inc
sahf
ds
jb
fcomi
xchg
mov
push
mov
shrb
pop
leave
mov
loopne
pop
or
mov
jle
js
jbe
ljmp
xlat
rolb
lds
aaa
cltd
inc
xchg
fwait
mov
addr16
ret
push
mov
clc
and
mov
test
mov
int3
and
pop
scas
rorl
popa
xor
sahf
push
inc
mov
mov
xchg
movsl
jbe
ret
dec
test
test
ja
cmp
movsl
and
sbb
or
ret
dec
mov
xor
rol
or
stc
mov
dec
loope
out
push
sbb
lods
out
jns
sbb
xlat
lcall
pop
push
roll
mov
push
lods
rol
cld
popa
cmc
out
sub
stc
jno
imul
icebp
insb
lcall
jb
pop
pop
inc
arpl
outsb
push
nop
loop
lods
sbb
aas
popf
cmc
fmull
add
fildll
mov
rcr
fimuls
and
cmp
pop
js
jne
sbb
shlb
xchg
jnp
xchg
or
pop
or
icebp
adc
jecxz
dec
js
push
add
loop
or
movsb
andb
pop
adc
popa
mov
loopne
enter
pop
cmp
cmp
mov
or
out
pop
dec
push
sbbb
mov
int3
jns
dec
mov
lea
mov
adc
dec
inc
imul
fidivl
mov
ljmp
mov
xchg
xor
dec
test
or
mov
sbb
pop
ret
inc
rcll
imul
fildl
add
ret
and
push
xchg
mov
ljmp
and
fistpl
roll
or
es
daa
jns
jg
push
push
ja
fcoms
mov
popa
jge
ret
add
mov
dec
mov
cmp
cld
pop
inc
shll
xchg
sub
cmc
lods
and
cwtl
and
dec
rorl
push
shl
in
fnstcw
mov
bound
icebp
filds
add
push
repz
cld
mov
ret
lahf
xor
test
add
mov
xchg
lret
push
mov
inc
dec
test
dec
xor
and
jno
mov
sarl
hlt
cwtl
imul
push
dec
stos
pop
adcl
into
leave
sbb
sti
imul
into
inc
data16
add
sarb
lea
mov
dec
mov
rcrb
dec
mov
push
pop
jae
cwtl
fs
pop
jae
scas
xchg
sbb
push
jge
rorl
imul
shl
inc
add
jae
popa
mov
repnz
mov
sbb
mov
jp
adc
das
or
or
xor
inc
shll
pop
xchg
loopne
jge
aaa
imul
rcl
data16
rcll
shlb
jp
out
adc
sbb
mov
xlat
enter
cmc
jmp
call
in
adcb
sarb
pop
imul
lahf
mov
outsb
dec
xchg
leave
jne
pcmpgtb
push
imul
loopne
jg
das
loope
mov
lcall
sbb
fildl
lods
fldln2
int
movsl
jge
inc
insl
sti
xor
insb
lds
pop
bound
sbb
jne
or
jl
repz
xchg
sbb
out
call
xor
sub
ret
test
mov
pop
popa
cmpsb
jo
fs
sbbb
adc
fisubrs
lds
in
or
pop
int3
add
ficomps
nop
sub
pushf
adc
lcall
cmp
pop
inc
incl
pop
adc
imul
insb
adc
or
push
mov
sbb
clc
fistpll
cli
outsb
xchg
int
dec
imul
push
jbe
in
call
xchg
pop
pop
xor
push
jge
mov
imul
repnz
pop
push
sub
adcl
xor
lds
mov
xchg
sub
std
mov
popa
inc
inc
mov
mov
sbb
popf
xchg
mov
mov
inc
out
lret
mov
loopne
loop
cld
xor
push
push
add
mov
dec
xor
aad
loope
adc
dec
xchg
mov
aad
shrb
scas
push
rcr
jne
cmp
pop
mov
idivb
mov
pushf
int
outsb
frstor
das
inc
jl
fcompl
std
test
sbb
lret
inc
mov
jecxz
dec
es
les
or
pop
aaa
jle
movsl
cli
inc
daa
mov
cmp
or
mov
int3
outsl
aaa
ret
mov
jge
call
jg
fucomp
mov
sbb
nop
pusha
push
mov
insb
sbb
adc
add
pop
movsb
sub
xchg
xchg
add
sbb
mov
aad
popf
popa
sub
subb
nop
sbb
sub
mov
cmp
pop
sti
mov
iret
sub
sub
and
mov
orb
pop
data16
dec
pop
push
outsl
pop
mov
test
cmp
cld
rol
addr16
clc
and
pushf
rorl
dec
push
mov
inc
aam
loope
sti
or
add
ret
sti
xor
xlat
gs
sbb
mov
fstl
fs
and
xor
adc
dec
jle
aam
mov
xor
insb
jecxz
add
inc
or
pop
lds
sbbl
cwtl
pop
xchg
xchg
mov
push
aas
loopne
out
xchg
push
push
mov
push
ds
push
inc
popa
dec
test
jae
hlt
movsb
lods
fidivrl
cmc
int3
mov
mov
mov
xor
fwait
xorl
in
orb
inc
pop
stos
call
or
fimull
and
or
loop
pushf
mov
ja
ljmp
jno
sub
inc
mov
and
mov
lcall
outsb
je
std
fidivl
rcrb
into
sahf
sub
sbb
xor
cmpsl
lret
aas
fimuls
sbb
scas
mov
inc
mov
mov
cmc
inc
adc
or
rorl
gs
and
jno
dec
loopne,pn
pop
dec
xor
movsb
jbe
push
xchg
fbld
mov
dec
test
into
je
out
mov
mov
pusha
jg
xchg
mov
insb
ja
out
in
push
and
je
xchg
xchg
aaa
lcall
out
insb
inc
cld
add
sbb
mov
fcompl
mov
adc
push
ret
imul
fdivp
pop
inc
ret
ljmp
call
or
shll
cmp
xchg
insb
push
sbb
lret
inc
clc
and
add
lcall
dec
mov
into
mov
inc
and
pop
mov
pushf
adc
nop
loope
out
lcall
dec
lods
js
mov
jl
pop
fildll
cmp
sub
mov
fidivl
jae
lret
leave
jl
rorl
ret
add
fwait
adc
dec
cmp
jmp
je
xchg
arpl
fsubr
sub
mov
test
jns
sub
cmp
lahf
add
les
xchg
sub
popf
mov
leave
xchg
push
fnstenv
test
imul
or
scas
ljmp
pop
es
push
sbb
or
adc
nop
dec
xchg
popf
sub
and
cmp
cmpsb
dec
push
xchg
fcompl
dec
inc
ja
stos
cmp
sbb
sub
inc
sahf
flds
sbb
out
iret
dec
adc
cmp
mov
les
into
ds
or
jp
aas
bound
and
mov
les
cmc
push
test
dec
jle
xor
pop
sub
in
jge
cmpsl
cmp
inc
mulb
loopne
adc
repnz
loope
cs
jbe
mov
push
les
xor
xchg
xchg
scas
mov
jb
inc
inc
insl
mov
cmp
jp
js
dec
jle
push
jae
xchg
addr16
add
sub
pop
mov
out
or
xchg
mov
divb
cmp
or
rolb
inc
icebp
push
adc
mov
pop
cmp
sbb
leave
mov
push
push
xchg
add
jmp
adc
pop
arpl
xor
mov
or
adc
push
sbb
lds
adc
enter
in
stc
or
enter
aad
loop
jae
or
fidivl
out
xchg
xor
std
stos
sub
das
pop
jmp
loopne
push
or
sub
add
loopne
mov
xchg
push
cmp
add
mov
pop
lea
jge
aas
sbb
int3
dec
shll
mov
xchg
and
jae
imul
mov
push
xor
add
cld
ror
sub
sub
dec
push
fs
fldlg2
mov
jno
pusha
pop
dec
hlt
sahf
dec
pop
dec
mov
push
sahf
icebp
or
lret
call
stos
jbe
jmp
push
stos
out
sub
lods
out
pop
xor
in
and
fadd
test
stc
pop
lods
add
incb
call
cmpsl
pop
mov
loopew
das
cmpsl
stos
xchg
push
in
sub
pop
scas
in
and
test
ja
push
dec
push
fwait
push
cld
jmp
adc
cmpsb
mov
lret
movsb
add
std
or
aam
cmpsb
mov
and
stos
inc
dec
lds
mov
insl
out
push
dec
sbb
or
mov
sub
movsl
clc
ljmp
pop
je
adc
pusha
mov
cld
push
dec
adc
xchg
add
dec
mov
rcrl
dec
mov
lcall
testl
or
push
push
xor
fists
lahf
cmp
out
sbb
rcrl
and
fucomi
lea
jnp
fs
sub
mov
inc
test
mov
adc
test
gs
pop
pop
std
xor
lret
mov
lret
mov
and
outsl
cs
scas
add
leave
mov
ljmp
cs
jno
xchg
xor
fwait
mov
xor
jno
fisttpll
push
int
es
push
xchg
add
rol
repz
mov
xchg
popa
jp
iret
sbb
repnz
lods
xchg
ljmp
int3
jle
sub
iret
sarl
mov
int3
seto
push
insb
fimull
dec
es
ja
push
adcb
outsl
fidivl
faddp
mov
sbbl
xchg
cmp
insb
aas
lods
push
pop
cmpsl
mov
fimull
stos
mov
ftst
ss
push
cmpsl
sahf
dec
stos
and
into
sbb
dec
enter
aad
adc
lock
mov
out
sub
pop
add
sahf
repz
cs
aad
data16
stos
sub
std
inc
xchg
nop
repz
mov
fcmovnb
cmpsb
dec
lods
inc
stos
push
jmp
push
mov
ds
sahf
in
or
les
jg
insb
fnstcw
adc
int
jbe
lock
xor
fistl
xchg
popa
mov
jb
test
mov
jmp
gs
inc
mov
xchg
cmp
arpl
jecxz
add
cmpsl
pop
mov
ss
mov
push
dec
xchg
cld
cmpsb
and
cmovbe
mov
mov
dec
aam
lock
nop
adc
imul
gs
rolb
test
jg
aad
cli
pop
aam
mov
ret
push
mov
or
inc
stos
ja
lea
test
and
inc
push
pop
sub
cmp
out
outsb
fwait
sub
stos
in
sahf
lcall
xor
pop
jmp
cmp
lret
sbb
mov
dec
cli
iret
jo
add
adc
xchg
imul
cmp
jns
xorb
adc
jbe
xor
ffree
jge
loopne
jp
divb
in
in
sbb
and
popf
pop
hlt
and
push
aam
insl
dec
lcall
ljmp
popf
test
xor
out
lret
sbb
mov
pusha
xor
icebp
inc
roll
or
sahf
adc
inc
cmc
imul
dec
popa
xchg
push
ljmp
push
mov
iret
in
daa
xchg
iret
dec
and
sbb
add
adc
add
les
and
or
fldenv
mov
xchg
pop
lds
dec
in
pushf
xor
mov
push
mov
test
scas
and
pop
cld
mov
sti
push
cmp
insb
into
cmp
jns
dec
rcrb
inc
jnp
inc
sub
cwtl
les
fisubl
sub
mov
and
mov
sbb
lret
pushw
fildll
push
stc
jl
hlt
push
ficoml
bound
lcall
lds
mov
xor
cli
push
test
sbb
bound
sub
scas
dec
inc
mov
mov
pop
adc
mov
std
cmp
xchg
or
das
lds
mov
pop
insb
movsl
mov
cmc
jbe
jnp
push
fs
das
sub
mov
fidivrl
mov
imul
push
daa
sbb
sub
inc
repz
scas
cmp
adc
sbb
shrb
inc
dec
sbb
fstpt
add
cmp
inc
nop
out
das
aam
ret
fcomp
or
mov
xor
mov
cld
insb
push
inc
arpl
xchg
add
outsl
loop
ja
xchg
ficoml
jns
gs
add
pop
arpl
xchg
int
mov
je
ret
shlb
test
mov
jle
test
aam
xchg
push
mov
xchg
push
icebp
fwait
and
test
dec
inc
ds
rcr
jbe
rclb
mov
stos
stos
cwtl
scas
push
ds
mov
xor
fdivl
jmp
test
mov
or
xor
or
scas
lcall
dec
xchg
push
sarl
or
fsubrs
outsl
aas
fimuls
cltd
pusha
imul
mov
jo
and
jge
je
jo
aad
add
orl
dec
push
fdivrs
and
outsl
sub
xor
sbb
push
inc
pop
push
fbld
jl
push
loope
mov
aas
xlat
or
dec
inc
loop
ds
loope
call
iret
push
inc
and
clc
call
inc
xchg
movsb
push
jne
mov
aad
divw
sti
pop
das
fidivs
aad
push
sub
pop
mov
lea
fimuls
add
xor
xor
sub
imul
gs
jnp
mov
sbb
push
pop
cmp
mov
lret
outsb
je
int
mov
dec
in
scas
cmpsb
cmc
jmp
nop
movsb
test
jnp
rcr
or
mov
mov
xlat
add
mov
imul
lods
adc
lcall
inc
call
icebp
and
sbb
jne
das
dec
add
lret
call
pop
out
push
stc
pop
ficoml
cmpsl
int3
sar
into
jb
dec
mov
insb
out
mov
push
add
cmp
cwtl
test
mov
and
xor
ja
cmp
adc
xor
out
pushf
mov
inc
jb
jge
push
jle
adc
add
popa
cmp
imul
adc
movsl
in
push
out
sbb
arpl
mov
or
mov
or
fimull
rcll
fst
jne
sub
scas
out
push
adc
sub
mov
jl
jae
pop
stos
lds
and
in
insl
or
imul
fs
scas
aam
ljmp
fwait
addr16
cs
movsb
lret
jp
cli
clc
mov
xchg
sbb
push
dec
jle
push
cld
xor
iret
adcb
jb
aaa
xor
aad
mov
sbb
xchg
int3
ret
gs
lcall
inc
aaa
mov
fistps
jmp
data16
xchg
sub
jecxz
dec
lock
fnstcw
inc
xor
mov
scas
loope
stc
stos
jb
jns
cmp
loope
rcrb
pop
pop
cmp
leave
imul
jecxz
cltd
mov
pop
push
xchg
xchg
add
aam
outsl
ja
adc
jnp
mov
xchg
sbb
sti
xor
test
sub
push
ljmp
data16
stos
std
add
jl
add
jo
lods
insl
cmpsl
inc
xchg
stos
lods
lahf
pop
mov
adc
ficoml
ret
mov
cmp
inc
test
sub
xorl
nop
adc
in
das
lods
test
add
outsl
push
shrb
and
cmp
es
mov
call
pop
adc
push
or
pop
jns
mov
lods
adc
in
clc
dec
andl
mov
hlt
ret
arpl
pop
pop
mov
imul
outsl
test
mov
stos
pop
and
xlat
testl
xlat
fnstenv
mov
push
adc
sub
adc
ss
aad
or
xchg
orl
jns
push
xchg
lcall
jp
cmp
pop
cld
or
mov
sub
js
sahf
mov
imul
std
pop
xchg
cmp
inc
loope
fsubrl
jnp
and
ds
fsts
dec
idivb
inc
mov
cmpsw
addb
jno
dec
mov
cmp
je
pop
dec
clc
aas
add
or
xchg
jne
adc
inc
clc
stos
mov
cmpsl
mov
dec
fwait
popa
and
inc
add
push
fdivs
mov
pop
xor
cmp
ret
nop
daa
push
icebp
dec
or
or
scas
sub
dec
mov
pop
fmul
jg
insb
loop
sbb
mov
cmp
mov
jae
and
iret
ds
jmp
icebp
iret
adc
movsb
inc
outsb
pusha
xor
pop
sti
xor
repnz
stc
pusha
cmpsb
pop
inc
mov
insl
je
adc
popa
ret
lret
adc
sub
mov
mov
out
inc
xorb
lds
sub
cmp
pop
mov
sbb
scas
or
aad
cli
ss
cmp
mov
xchg
jecxz
mov
popf
lahf
lea
adc
das
lcall
xor
aad
dec
stos
push
inc
and
int
inc
pop
push
xchg
push
sbb
dec
push
fidivrs
sbb
inc
sti
sub
add
insl
pusha
inc
fstl
adc
jp
test
lret
scas
push
dec
pop
loop
dec
popf
xchg
xlat
push
jns
sub
mov
jbe
push
xchg
test
adc
dec
jnp
dec
lock
cmp
jb
aas
repz
cmp
xor
stos
cmpsl
sarb
cmp
sub
add
pop
add
faddl
xchg
rcrb
jge
cli
cmpsl
and
add
scas
or
mov
shll
inc
jmp
push
jmp
pop
mov
xchg
ss
pop
test
cmp
cwtl
cmpsb
cwtl
inc
xor
call
std
dec
fisubl
out
mov
jmp
xor
add
jle
ljmp
push
into
jl
movsl
int3
dec
and
loop
subb
inc
ds
dec
aad
fisubl
icebp
bound
dec
sarb
and
loope
scas
cmp
rcrb
xchg
hlt
push
sbb
test
xchg
xchg
xchg
dec
jno
sub
fnstcw
cmpsb
dec
jmp
icebp
fiadds
adc
fdivrs
push
push
inc
clc
shrb
vpshlq
xchg
das
jno
jle
mov
shrb
stc
mov
mov
popf
in
cmpsl
mov
add
test
stos
andb
mov
pop
sub
jbe
sub
add
shlb
pop
and
int
or
jnp
dec
xor
rcr
into
lcall
sub
out
cmpsb
test
fiaddl
mov
push
pusha
clc
jmp
cmp
push
dec
mov
loop
xor
add
add
sbb
push
cmp
xor
test
cmp
rcll
xlat
adc
test
repz
dec
sub
xchg
std
mov
sub
or
lea
adc
notl
scas
mov
out
mov
aam
mov
lock
das
pop
fstl
add
das
les
shrl
push
sbb
pop
mov
out
mov
arpl
or
xor
sbb
xchg
loopne
xlat
push
mov
inc
mov
jle
or
cwtl
into
jbe
mov
xchg
add
lcall
mov
xchg
mov
mov
sub
out
push
xor
lock
cli
jb
xchg
mov
adcb
cmp
or
shrb
mov
insl
xchg
loopne
notl
push
jmp
fdivr
pop
or
fdivl
mov
cld
rcr
cmc
addr16
in
push
pop
test
out
insb
pop
inc
shlb
dec
aaa
mov
leave
fistpll
vpsllw
addr16
pop
fcoms
es
push
arpl
and
dec
adc
icebp
jle
ljmp
data16
inc
std
mov
cmc
insl
push
dec
dec
jbe
mov
pop
daa
pop
pop
insb
dec
popf
inc
int3
sar
push
cmp
or
insl
pop
popf
push
adc
mov
iret
hlt
fidivrs
dec
adc
inc
mov
lds
outsb
and
stos
popf
xor
dec
jbe
pop
sbb
push
adc
xor
rcrl
dec
lock
ds
lea
jnp
lcall
inc
mov
adc
imul
lds
sbb
or
aas
push
cmp
sbb
sbb
mov
cmpsb
test
inc
pop
outsb
mov
jo
xor
cmp
out
lds
cmpsb
imulb
imul
push
jno
add
add
add
std
jecxz
aam
movsb
hlt
pop
and
sbbl
movsb
iret
adc
add
icebp
add
mov
or
ss
pusha
mov
push
sbb
jo
ret
sbb
cmp
or
loope
cmpsb
cmpsl
push
sbbb
int
movsl
stc
sbbb
xchg
xor
push
sbbl
dec
dec
stos
pop
stos
inc
jns,pn
mov
ja
addr16
push
sbb
mov
fldt
fsubs
push
scas
es
mov
cmp
loopne
int
pop
xlat
cmc
daa
js
lahf
gs
push
jae
stos
or
add
pop
fstpl
mov
lret
mov
mov
mov
sub
mov
pop
and
adc
mov
ljmp
lock
dec
iret
cmp
mov
dec
test
inc
mov
mov
mov
xchg
jae
mov
xor
fmulp
and
cmp
fwait
punpckhdq
add
jp
ljmp
sbb
sahf
push
adc
xchg
fldt
xchg
out
and
jmp
add
xchg
mov
or
push
add
inc
adc
adc
test
sbb
xchg
jl
movsl
xchg
mov
loop
sub
sbb
leave
inc
adc
mov
pop
jb
xor
dec
bound
sub
pop
cmpsb
ficoms
fimull
push
out
inc
sub
mov
mov
cltd
ret
or
fdivs
push
jns
xchg
inc
ds
xchg
pop
outsl
mov
adc
aad
pop
leave
scas
jp
xchg
sub
dec
in
jo
jae
jg
xchg
hlt
dec
dec
sbb
jl
lds
and
push
jae
lock
dec
sbb
xlat
call
clc
stos
or
push
push
fdivrs
or
xor
cmp
adc
addl
push
jmp
push
loopne
out
mov
fistps
mov
movsb
inc
jnp
cli
xchg
pusha
bound
pushf
inc
movsb
outsl
sbb
stos
xor
push
push
ficoms
pop
push
pop
shr
cmc
or
sub
into
add
lea
repz
push
sbb
xchg
in
loopne
push
and
dec
jmp
xchg
jmp
lahf
sbb
sbb
lods
xchg
mov
test
inc
mov
dec
sarb
fcmove
call
and
mov
add
push
in
pop
xchg
or
jns
mov
int
out
push
sbb
pop
sahf
fdivrs
mov
push
dec
in
xchg
adc
ljmp
and
push
push
ret
adc
lods
mov
inc
push
jmp
xchg
xchg
clc
pop
test
test
stc
add
out
cltd
ret
test
and
pop
fldenv
xchg
into
inc
leave
and
fistpll
pop
cmp
inc
dec
es
test
stos
and
leave
jb
and
ds
cmc
xchg
push
push
outsb
pop
ss
push
dec
sub
lods
filds
adc
ret
xchg
call
mov
or
ss
orl
pop
push
cltd
lret
jge
dec
jne
es
push
clc
dec
add
es
push
repz
jo
mov
int3
mov
movsb
fidivrl
mov
cli
push
jnp
pop
add
fbld
cmc
xchg
ss
push
mov
jne
xchg
add
into
mov
push
pop
pop
adc
mov
scas
sbb
fldenv
cmp
in
jle
outsl
je
sbb
loope
std
nop
lods
call
enter
negl
cmp
cmp
cmp
sbb
nop
inc
addl
data16
mov
mov
cmp
cmpsb
jecxz
push
mov
cmpl
iret
xchg
adc
and
sarl
xor
and
mov
xchg
es
mov
push
sub
sbb
ret
mov
cmpsb
fimull
cmp
cmp
shlb
jp
repz
fidivrs
mov
mov
pop
and
popf
push
scas
std
or
mov
loop
sub
aas
enter
jmp
aaa
or
jbe
xor
mov
sub
icebp
subb
jno
mov
dec
outsl
pop
push
in
cmpsb
fldl
test
cmp
std
mov
popf
add
pushf
data16
cmp
jge
testl
sahf
sub
in
int3
pop
push
jae
scas
out
or
cmp
jae
fs
loopne
or
push
push
adc
out
cld
in
sti
adc
mov
addb
vpunpckldq
jne
rcrl
mov
pop
mov
mov
das
push
inc
jl
mov
inc
and
push
mov
mov
push
or
call
rolb
sub
negb
lret
icebp
sub
into
sbb
das
or
out
pusha
iret
and
mov
sbb
ds
shlb
dec
test
cmp
pop
pop
xchg
test
aas
clc
icebp
mov
push
cmp
xchg
mov
push
pminsw
das
pop
adc
outsb
mov
pop
nopl
mov
jecxz
push
pop
testl
and
movsb
loop
fcmovnu
push
cld
sub
rorl
and
xor
cmpsb
cmp
mov
lret
scas
loopne
insb
mov
insb
cmp
arpl
addr16
mov
dec
popa
jmp
out
inc
cmp
shl
adc
mov
pop
fmull
seta
sbb
enter
cmp
movsl
xchg
mov
jb
add
push
inc
inc
das
leave
cwtl
outsb
in
es
outsb
sbb
or
cmc
xchg
loopne
push
sub
pop
in
mov
add
mov
push
mov
gs
repz
fmull
sahf
loop
stos
aad
xor
push
adc
xor
xchg
lret
mov
push
or
and
mov
xchg
adc
data16
je
leave
cmp
xor
add
or
fsubrl
xchg
cmp
xchg
xor
jmp
imul
inc
int
ss
add
adc
push
imul
adc
mov
fidivs
push
inc
adc
orl
fsubs
mov
popa
sbb
pop
aaa
add
xchg
insb
dec
aaa
bound
cmpsl
adc
sbb
pop
mov
or
mov
mov
push
jg
les
ret
pop
pushf
pop
ffree
leave
mov
divl
cmpsl
or
xchg
imul
xchg
push
int3
pop
mov
mov
cvtpi2ps
inc
sahf
int3
mov
negb
lret
popa
sub
or
pop
sub
inc
or
lock
mov
push
dec
jbe
sub
pop
mov
push
aam
pop
fwait
sub
mov
cmpsb
test
cmp
mov
data16
imul
loop
mov
dec
mov
inc
test
pop
lods
repnz
int
vmovaps
ds
xor
pop
cld
lcall
and
outsl
xchg
push
cmc
xchg
jo
flds
ljmp
jae
dec
dec
sbb
in
pop
or
push
test
movsb
mov
inc
inc
push
lods
cltd
pcmpeqb
inc
push
lret
ret
mov
add
stos
mov
push
or
pop
test
xchg
fldenv
decl
add
lods
and
mov
cmp
push
repz
inc
jae
jl
jl
adc
sbb
push
repnz
mov
cmp
test
inc
inc
cs
mull
mov
dec
mov
insb
out
adc
ret
divb
adc
clc
xchg
out
sub
add
xor
ljmp
adc
xchg
arpl
cmp
jmp
sti
pop
movsb
jnp
imul
jle
and
mov
popf
sbb
testb
xor
sub
add
xchg
cs
mov
add
push
rclb
adc
ret
or
test
dec
push
aas
sbb
mov
xor
xchg
cmp
sub
insl
cmp
scas
xchg
or
jg,pt
fs
mov
push
pop
lods
adc
xlat
mov
sub
sub
mov
enter
jmp
loopne
je
inc
add
sbb
mov
jo
and
xchg
xchg
ja
push
bound
or
add
mov
xchg
add
xchg
jp
mov
sub
adcb
aam
fcomps
out
mov
dec
push
es
jp
sbb
leave
ret
clc
inc
repnz
cltd
lahf
ja
cld
push
fwait
xlat
pop
mov
xor
insl
inc
add
and
jmp
movsl
decb
jecxz
mov
mov
inc
mov
ficoml
pop
inc
jnp
in
ljmp
sub
ficoms
mov
pop
ss
cmp
shll
xor
jl
les
sub
xlat
push
push
inc
into
test
testl
xchg
movsl
nop
lods
inc
push
push
jmp
sbb
aas
pushf
lods
push
jb
cmp
jnp
rcr
cmp
fidivrs
test
mov
adc
push
fidivs
icebp
scas
cmpsl
xchg
aam
repz
sbb
push
jmp
loop
popf
add
shlb
or
out
and
imul
in
fwait
xchg
in
pop
mov
push
cwtl
mov
and
or
movsl
adc
jg
pushf
leave
outsb
sub
mov
das
push
xchg
call
das
mov
gs
mov
psubb
xorl
lods
icebp
sub
inc
daa
pop
pop
xchg
and
jg
jno
pop
cli
dec
mov
cwtl
sbb
jmp
imull
mov
inc
jl
scas
sti
add
dec
and
test
popf
cmp
out
xchg
xorb
jmp
push
ret
js
pop
dec
cltd
cmpsb
call
out
xchg
xchg
mov
aad
inc
mov
mov
and
adc
xchg
lods
push
mov
push
lds
lcall
xchg
adc
xor
add
push
pop
shlb
lea
nop
add
jne
mov
in
ljmp
dec
daa
mov
jecxz
and
mov
cmp
arpl
sahf
jae
lahf
subb
dec
shrl
or
jae
xchg
mov
out
cmp
mov
popl
inc
add
mov
pop
push
scas
aaa
push
repz
sbb
cwtl
or
movsl
dec
or
test
pushf
mov
shrl
sahf
psubsw
aas
ds
mov
push
mov
imul
nop
jo
inc
test
js
jnp
pop
stos
inc
mov
sub
lods
cmp
push
test
sub
xchg
icebp
je
iret
repnz
cltd
mov
or
inc
sbb
sbb
adc
xchg
or
cltd
repz
les
xor
bound
into
in
add
stos
jb
mov
jb
loop
push
out
mov
pop
mov
in
inc
in
xor
lock
or
fisttpll
inc
mov
pusha
cmp
adc
sub
cmp
sub
cmp
ret
xchg
mov
adc
mov
ss
sti
xorb
dec
pusha
mov
mov
dec
insl
xor
mov
cmp
js
lock
ja
iret
jl
in
push
push
test
cmpb
shrb
mov
jae
add
cld
push
cltd
cmp
mov
push
cmp
sbb
jnp
insl
pop
test
xor
sub
mov
loop
pop
mov
cld
cmp
push
adc
mov
xchg
sub
das
cmpsb
or
jp
xchg
mov
cmp
rclb
aad
std
push
dec
push
sbb
ss
or
int
dec
mov
xor
daa
sahf
scas
cmc
ds
cmc
lea
test
lea
dec
adc
push
rol
inc
dec
inc
shll
ret
shrl
cmp
jo
adc
test
xor
xchg
insl
out
repnz
mov
add
cmpb
lret
xchg
xor
adc
sbb
scas
cs
clc
and
xor
lea
stos
popa
and
xor
xor
xchg
in
jne
or
jmp
cmc
xor
mov
stos
mov
rcrl
pop
add
and
test
or
shl
popa
dec
mov
clc
sub
repnz
sbb
lea
pop
lret
sub
inc
js
xchg
pop
inc
add
cwtl
add
pop
sub
pop
mov
xchg
les
and
dec
inc
aam
int3
push
add
sbb
dec
int3
adc
xchg
sub
add
test
clc
push
pusha
push
add
adc
dec
mov
adc
mov
popa
fldt
popa
sbb
sbb
cmpsb
xor
jmp
pusha
pop
sub
cmpsl
dec
push
adc
pop
mov
jnp
ss
mov
push
mov
push
sbb
add
pop
push
mov
popa
in
clc
cmp
inc
add
mov
pop
in
adc
or
cli
xor
inc
mov
shl
mov
jnp
stos
imul
mov
iret
lcall
in
outsb
fsts
call
int3
xor
and
popf
aad
out
daa
es
fmul
insl
mov
lcall
push
dec
call
fdivrl
pop
push
inc
jbe
stos
sub
repz
mov
pusha
pop
jb
inc
test
aaa
adc
xor
dec
pop
insb
mov
fidivrs
mov
pop
test
xchg
mov
ffree
out
cmp
pop
cmc
and
mov
push
int
sbb
mov
stos
into
jnp
and
or
sahf
andl
pop
mov
pop
dec
jb
sbb
cmp
and
push
inc
push
push
mov
push
jbe
adc
sti
adc
adc
mov
pop
push
aaa
xcrypt-ctr
cmpsl
fistl
mov
adc
and
mov
hlt
lods
imul
jmp
imul
leave
iret
aam
or
jle
out
mov
test
lds
clc
push
dec
pop
insb
test
mov
sbb
cmpsl
pusha
nop
mov
in
inc
mov
orl
sub
jns
or
incb
int
lret
pop
adc
mov
inc
jno
sbb
rclb
jo
pop
xchg
mov
sbb
pop
les
insl
cmp
push
sahf
jo
jge
add
aas
cld
repnz
out
enter
daa
test
push
xor
in
lea
sbb
test
out
clc
mov
stc
mov
imul
push
fstl
xor
jbe
push
sar
scas
pop
stc
pusha
notl
popa
mov
mov
mov
es
leave
or
faddp
ficompl
add
mov
jl
pushf
stos
inc
out
test
jno
negb
stos
mov
jo
leave
jne
imul
imul
movsl
outsl
adc
fs
int
loop
adc
xchg
inc
sarb
mov
mov
lock
dec
insl
pusha
pop
loop
jmpw
add
stos
mov
addb
or
test
xor
cmpsl
add
xchg
stos
or
jge
mov
xchg
lock
in
mov
in
mov
sub
out
dec
sbb
ret
divb
push
adc
fwait
imul
push
stc
lret
push
mov
popl
fdivrs
mov
xor
and
femms
imulb
fwait
mov
in
shrl
jns
aas
iret
ds
out
sbb
dec
cmp
js
and
fucom
adc
fcomp
xor
movb
pop
mov
inc
test
divb
pop
ret
fwait
je
xlat
aad
jge
stc
add
test
sub
jmp
mov
adc
shl
je
js
jnp
sub
mov
jmp
push
pop
and
push
push
clc
xchg
cli
fiadds
sahf
js
dec
inc
pop
push
fnstsw
ret
out
xor
outsb
insl
or
and
dec
sbb
outsb
cwtl
jmp
cmp
or
adc
test
iret
in
and
xor
push
pop
xchg
mov
xchg
rol
insl
cmpsb
inc
and
sarb
sbb
fs
fists
loopne
fwait
sbbb
fiaddl
test
pop
sahf
incb
adcl
int3
ret
dec
pop
adc
xor
adc
jmp
insl
iret
xchg
movsl
jne
fcompl
push
pusha
movsl
xor
stos
mov
push
xor
lret
cmp
adc
jge
inc
inc
cmp
test
inc
push
fsubrs
push
enter
mov
dec
cs
cmp
add
fwait
clc
add
repz
jl
jmp
fldenv
dec
ds
mov
pop
xchg
sbb
xchg
push
mov
lods
mov
add
daa
stos
cltd
fcoms
pop
lods
int
mov
andl
divl
sbb
into
jg
hlt
jmp
mov
cmc
mov
cmc
and
push
lds
mov
jecxz
fwait
ja
out
fucomi
popa
mov
popa
pushf
nop
sub
add
std
loope
adc
lea
adc
xchg
shrb
pop
add
aas
cmp
jo
cwtl
out
subb
iret
jg
inc
fcoml
dec
cmp
pop
push
repz
aas
mov
push
pop
dec
xchg
xor
lods
dec
pop
outsb
cmp
or
push
ljmp
popf
xorb
ja
or
jg
in
and
mov
mov
pushf
jg
lret
ror
push
or
ljmp
push
shlb
mov
mov
fyl2xp1
push
mov
mov
jge
out
out
icebp
xchg
test
scas
cmp
fs
in
push
cmp
stos
mov
stos
ljmp
adc
nop
mov
mov
mov
xor
nop
sub
aam
xchg
cld
out
pop
icebp
fisubrl
mov
pop
outsb
fs
lahf
sbb
fadd
test
and
sbb
xbegin
dec
dec
rep
adc
and
jo
sub
cld
cmp
sub
xchg
sbb
test
xlat
int3
push
pop
jne
inc
outsb
dec
std
scas
loop
jo
xor
fimull
xchg
imul
jmp
cmpsl
outsl
lds
pushf
push
mov
mov
sub
inc
mov
shr
dec
test
push
mov
dec
or
pop
adc
leave
or
fwait
lods
jbe
popa
lret
xchg
cmpsl
and
adc
xor
jecxz
push
int3
in
xchg
push
jne
or
dec
imul
push
loopne
pextrw
mov
stos
xchg
iret
ret
pop
inc
push
and
pop
inc
loop
cmp
nop
mov
adc
mov
inc
movsl
cltd
inc
lds
jns
mov
sub
ds
stc
inc
lret
xor
dec
repz
call
ret
lret
mov
mov
mov
fidivrs
mov
rcrb
sbb
jmp
mov
sbb
push
xor
out
es
aas
outsl
loop
mov
insl
cmp
inc
cmc
out
lock
shlb
imul
lea
fstps
sbb
inc
imul
xchg
aad
movsl
dec
imul
adc
xchg
push
or
inc
mov
jge
pop
mov
ret
mov
cmpsl
fsin
xor
dec
notb
cmpsb
xlat
insb
rorb
aam
mov
mov
and
xchg
pop
jmp
cmc
hlt
popa
inc
jno
pop
test
ror
imul
std
sbb
test
loopne
add
fists
fsubs
jno
dec
jnp
lret
cmp
jo
jecxz
xchg
testb
xor
call
out
inc
icebp
mov
outsb
push
aas
jp
push
xor
jecxz
rcrb
les
sarb
xchg
in
inc
xchg
xor
xor
roll
mov
sbb
jbe
out
lahf
adc
popa
lock
fidivs
mov
add
fildl
cmp
push
movsl
lahf
jecxz
mov
mov
add
pushf
mov
or
in
and
and
addr16
rcrb
pop
sbb
push
addr16
jb
and
xor
push
test
outsb
daa
adc
xor
push
push
sub
pop
pop
fs
testb
pop
out
jb
lods
and
mov
push
es
repz
out
mov
clc
mov
mov
dec
gs
insb
mov
and
sub
xor
fisttpl
fildl
lret
push
shll
adc
jge
stos
cld
xchg
adc
xchg
shll
insb
lock
fisttpl
mov
insl
repz
daa
test
xchg
addr16
das
jle
pop
dec
in
pop
popf
mov
cmp
pop
and
rcrb
scas
add
push
push
jne
sarl
pop
or
lret
loope
mov
test
sbb
and
push
or
out
insl
cltd
mov
insl
sbb
fistpll
pop
arpl
ds
cli
imul
or
icebp
push
cmp
or
push
mull
rol
rolb
xor
lret
or
stos
cld
imul
pop
push
sarb
scas
jecxz
sub
gs
and
mov
cmp
add
cmp
fwait
loopne
xor
xchg
and
aaa
in
lahf
pop
xchg
shrb
cmp
pop
fwait
push
cs
enter
je
lods
mov
inc
lar
rorl
hlt
in
cmp
xchg
pop
addr16
gs
stc
adc
xchg
jbe
mov
sbb
ret
rorb
and
push
mov
in
cld
mov
fwait
jno
add
imul
pop
lock
stos
cmpsl
jge
xlat
xchg
xchg
gs
sbb
mov
mov
cltd
xchg
out
push
jb
sti
push
sbb
test
pop
mov
ret
lcall
jns
out
into
jo
pop
cltd
pushf
xchg
jns
js
ds
loopne
push
js
mov
in
and
mulb
popa
push
lods
inc
jg
jae
pop
call
fnstsw
xor
lods
add
jbe
scas
cmpsb
mov
fbstp
push
ja
aam
jno
push
nop
mov
mov
lods
ja
in
mov
dec
add
cmp
cmpsl
pop
dec
inc
jle
xchg
cmp
lahf
sbb
sbb
dec
stos
mov
jecxz
push
enter
cmp
addr16
lret
xor
inc
in
jae
pop
fucom
sbb
xchg
push
sub
inc
cmp
dec
pop
adc
add
popa
xchg
fstl
pushf
mov
pop
fs
pushf
push
sbb
cmpsb
shll
movb
jle
push
sub
outsb
pop
inc
imul
xlat
push
xor
push
cli
dec
sbb
adc
or
or
int
cmpsb
push
outsb
or
adc
call
repz
sbb
fisttpll
lds
lds
or
sub
inc
mov
or
gs
aas
leave
adc
popa
mov
add
cmp
aas
push
push
push
xchg
inc
test
cwtl
int3
aad
sub
pop
arpl
adc
int
lret
mov
out
add
fcomi
push
mov
sub
inc
and
dec
inc
sub
and
pushf
daa
out
xor
push
cltd
lds
sbb
insl
add
incl
adc
mov
dec
push
pop
mov
repnz
loopne
faddl
call
cltd
and
in
scas
push
xlat
mov
loope
test
out
xchg
imull
rcrl
cmp
mov
or
add
xor
lea
dec
stc
mov
insl
pop
sub
roll
xor
in
xchg
xchg
and
fs
jp
mov
shl
push
or
lods
enter
xchg
xchg
mov
nop
repz
pop
mov
in
ret
or
pop
pop
orb
pop
adcb
loopne
sbb
mov
mov
sti
icebp
jo,pn
sahf
and
inc
mov
inc
mov
push
sbb
adc
xchg
xchg
jecxz
sbb
gs
dec
xlat
sti
mov
call
call
mov
mov
dec
pushf
pop
incl
lret
fstp
cmp
add
scas
or
push
ret
push
fbstp
pop
xchg
popa
insb
addr16
push
mov
mov
lea
or
xchg
sub
sti
cld
insb
cmp
movsl
push
xchg
sahf
sub
stos
enter
sbb
cmp
shrb
push
xor
add
insb
xor
in
loop
js
mov
dec
mov
out
nop
or
loop
pop
and
or
arpl
jecxz
cmp
jle
les
dec
add
mov
jg
jge
cmp
xchg
lret
into
mov
lock
sarb
fmuls
fs
cwtl
dec
cmp
xor
jp
mov
bound
jmp
testl
pop
inc
pushf
ret
mov
dec
mov
fcompl
jne
and
stos
pmaxsw
outsl
xor
outsl
xor
pop
inc
push
out
clc
mov
mov
adc
cltd
sub
xacquire
cmp
nop
cmpsb
fcompl
insb
or
out
scas
xchg
lea
push
jecxz
imul
cmp
sti
pop
movsl
es
cmpsb
add
sbbl
stos
loopne
adc
lcall
mov
jb
iret
gs
scas
sarl
ja
sub
js
mov
mov
and
mov
fcoms
inc
rorb
ja
inc
xchg
data16
jb
cs
mov
mov
cwtl
push
mov
lods
cmp
loope
cmc
fstpl
mov
push
xchg
rcrb
pop
fsubp
mov
adc
jle
inc
stos
jnp
xchg
outsl
clc
lods
addr16
pop
mov
xchg
cld
imul
adc
inc
sub
xor
xor
xchg
pop
xor
ja
in
inc
gs
push
and
xor
hlt
rcrl
arpl
mov
adcl
add
lea
in
mov
arpl
or
test
out
shrl
push
divb
push
inc
and
imul
push
jmp
addb
xchg
testl
pusha
push
outsl
test
mov
in
pop
inc
jb
into
sti
mov
push
int
ss
das
mov
stc
dec
jl
sbb
push
fstpl
or
sbb
imul
mov
icebp
mov
push
push
cmp
scas
mov
push
negb
cmpb
push
scas
cmp
jnp
imul
mov
mov
or
xor
loopne
aas
mov
movsb
sarb
movsb
push
sbbl
movsl
js
sarb
fiadds
and
sbb
sub
mov
sarl
xor
mov
sbb
scas
xchg
mov
inc
rorl
push
push
inc
and
inc
lds
pop
movsl
stos
sbb
xor
jne
ret
ja
fidivs
adc
fiadds
dec
test
sti
xchg
ja
xor
lahf
push
movsb
jle
sbbb
es
sahf
dec
in
sub
test
jl
ret
cmpsl
sbb
jmp
mov
loope
fisubrl
push
push
mov
xor
shlb
loop
mov
outsb
xor
stc
outsb
aaa
movsl
mov
in
stos
outsl
xor
int3
bound
rcl
mov
xchg
sub
shl
adc
call
add
aam
cwtl
scas
bound
scas
push
inc
sub
sbb
mov
out
test
fistpl
xchg
jnp
lea
cltd
outsb
jecxz
std
xchg
inc
or
std
and
sub
test
pushf
rorl
andl
jecxz
fistpl
rcll
add
insl
pop
jne
cmp
xchg
sub
sbb
dec
jle
out
cltd
rolb
xchg
frstor
inc
push
add
xor
fisubrs
add
cmp
icebp
loopne
and
add
jecxz
jno
push
sbb
repnz
pop
jnp
mov
imul
shrb
push
pop
push
and
shlb
fsubl
imul
mov
sarl
test
psubq
jmp
and
scas
pop
loopne
dec
mov
sub
cwtl
popa
mov
enter
add
loop
push
jb
xchg
repz
int
xchg
push
mov
sub
adc
adc
jg,pn
jmp
popf
mov
push
dec
jae
arpl
lds
cltd
xor
pop
add
mov
lods
lock
fs
xchg
dec
mov
fisubs
push
adc
dec
sti
push
les
xor
or
mov
cmpsl
cmp
xor
xchg
notl
jmp
loopne
adc
adc
cmp
mov
pop
pop
add
dec
push
cmpsb
pop
into
aaa
and
into
jg
inc
gs
xor
pushf
enter
adc
push
lahf
or
fsubrs
fcoms
mov
in
xor
test
imul
test
jb
xor
cmp
fisubrl
jne
jbe
add
lds
xchg
bswap
cmp
movsl
dec
xchg
mov
xchg
xchg
and
out
insb
xor
or
inc
fdiv
push
aaa
push
lcall
mov
lcall
push
scas
xchg
je
aam
cmp
xchg
sub
mov
fcoms
or
jb
push
lret
mov
mov
push
aaa
shrb
bound
cmp
js
fmull
push
popf
and
and
nop
push
sub
xchg
or
mov
iret
les
ret
xor
rcll
stos
push
in
in
orl
stos
cmp
add
lock
fidivrs
push
fldenv
add
in
cltd
fs
repz
xchg
xchg
xor
mov
loope
xchg
pop
dec
test
jp
mov
int
js
fwait
push
xchg
push
xchg
xor
or
jb
aaa
and
mov
jmp
adc
or
aaa
inc
mov
pop
xlat
addr16
adc
repz
add
xchg
mov
loop
add
dec
jp
daa
cli
sub
les
mov
mov
and
aam
testl
lret
or
insb
or
das
pushf
js
in
add
xor
jmp
mov
mov
mov
test
xor
shrb
into
xchg
movsb
ss
xchg
in
xchg
dec
mov
hlt
jg
add
mov
push
hlt
sti
and
cmp
out
inc
inc
aad
and
into
sub
iret
pop
mov
inc
out
scas
loopne
sub
mov
ds
push
stos
addb
scas
inc
hlt
mov
je
test
pushf
lock
leave
pop
cmp
out
sbb
inc
ja
mov
push
inc
popf
pop
insl
lock
jl
daa
and
pop
loopne
pop
ficomps
ret
push
jno
xchg
push
mov
mov
aas
jnp
mov
mov
mov
add
sbb
xchg
ret
cmpsl
cmp
lods
stc
xchg
push
jecxz
enter
dec
adc
jmp
mov
arpl
repz
movsb
cmp
das
inc
mov
mov
adc
and
fstpt
ds
push
sbb
xor
subb
inc
lretw
sbbb
call
pop
pop
mov
jge
in
mov
and
stos
sub
movsl
inc
mov
mov
out
sahf
test
adc
hlt
aam
loope
popa
mov
xchg
fidivrs
jl
lods
cmc
fidivrs
in
sbb
dec
dec
aam
in
pop
jmp
or
adc
inc
fdivs
out
adc
mov
pop
sbb
adc
inc
std
sub
xor
sub
mov
sti
mov
inc
mov
clc
jge
std
movsb
mov
pop
fwait
pop
cmp
lcall
jge
testl
adc
mov
cmpl
sub
clc
pop
ds
xchg
mov
fcomps
push
and
cmpsl
test
mov
add
jo
fsubp
int3
add
int
pop
xor
sbb
sub
jg
movsb
push
outsb
mov
lods
addr16
jns
loopne
sti
mov
push
icebp
push
xchg
xchg
push
sbb
hlt
sub
mov
and
xlat
loop,pt
std
and
cmp
lahf
aam
xchg
or
dec
out
sti
adc
idivl
loopne
mov
sarl
dec
out
shrl
ja
xchg
mov
xchg
subl
sbb
xlat
add
hlt
loope
cli
adc
and
jo
pusha
bound
arpl
jle
mov
cmp
mov
push
cwtl
dec
popf
xchg
xchg
out
add
inc
jns
in
in
les
repnz
sarb
or
fimuls
or
icebp
lcall
sbb
aas
lea
inc
int3
rorb
js
mov
mov
inc
mov
lcall
xchg
outsb
dec
cmp
inc
or
xlat
shr
mov
idivb
es
mov
cmpsl
jnp
jno
mov
js
fwait
out
cmpsl
adc
push
lods
gs
pop
mov
push
ds
lcall
movsb
ret
mov
adc
fisttps
sub
xchg
pushf
mov
cli
les
icebp
or
add
fwait
mov
jno
push
aas
out
dec
roll
popa
popf
inc
std
lahf
sbb
bound
popa
mov
xor
jl
jb
out
lea
lret
pop
xlat
xor
insb
adc
pop
xor
mov
inc
xlat
pusha
setge
sbb
rolb
cmp
add
cmpl
gs
cmp
jge
pop
mov
jno
xchg
popf
and
cld
cmc
push
sbb
ss
ret
ret
mov
adc
fs
adc
pop
xlat
jbe
test
and
jmp
push
out
jb
and
movsb
add
aas
test
dec
popa
push
jmp
shlb
loop
inc
dec
std
imul
jl
xor
fbstp
cmp
mov
subl
cltd
addr16
add
mov
aam
add
das
sbb
pop
mov
sbb
pop
nop
insb
daa
mov
lods
jmp
sub
and
mov
cmpsl
pop
sti
push
clc
in
ret
pop
in
test
dec
adc
stc
imul
jmp
orl
lcall
xorl
xchg
aad
mov
or
sub
gs
push
xor
push
sbb
mov
jae
mov
adc
mov
mov
xchg
xor
push
lret
add
shlb
mov
lahf
das
cmp
enter
adc
xchg
xor
cmpsl
out
subb
les
sub
and
call
sbb
sbbb
lds
lret
push
cmp
aam
sbbb
mov
dec
popf
lcall
push
push
sub
push
xchg
andb
xchg
xor
inc
xor
fwait
add
cld
xchg
add
mov
dec
out
das
stc
fisubl
jecxz
sbb
or
mov
das
and
fistps
sub
movsl
je
lret
addl
mov
orb
pop
call
loope
pop
or
sbbb
lahf
stc
add
lock
cmc
pop
sbb
imul
subb
and
push
xlat
inc
in
and
addb
shr
jg
insb
jb
sbbb
fdivp
aad
mov
pop
add
lret
jmp
cmp
test
xor
mov
nop
adc
pop
pop
adc
test
dec
cmp
lret
sub
insl
imul
fidivl
cmp
movb
mov
push
iret
std
xchg
pop
inc
andb
and
lds
xor
repnz
sub
pop
pushf
shll
sub
push
mov
sbb
jae
fcompl
nop
inc
jo
ja
pusha
mov
movsl
sub
adc
jns
dec
imul
mov
shlb
push
enter
rcrb
sub
lea
mov
lret
mov
fsub
sahf
mov
sbb
jbe
aas
mov
mov
mov
dec
stos
mov
mov
mov
addb
sbb
iret
jnp
icebp
jno
popf
out
movl
faddl
push
push
xor
daa
hlt
rol
push
fs
adc
pop
scas
rclb
cmp
cmpsb
mov
bound
jno
rol
push
pop
pusha
inc
sub
push
jno
sbb
dec
movb
divb
lahf
loopne
inc
push
dec
adc
lock
xchg
mov
xor
sub
leave
xchg
aad
jmp
xchg
arpl
pop
test
in
rcl
fcom
dec
mov
sti
or
imul
sbb
in
es
cld
mov
mov
add
out
pop
test
xchg
jne
movsl
dec
test
lret
inc
mov
iret
or
xchg
sbb
push
and
and
inc
mov
std
jbe
jb
push
mov
lock
jb
clc
or
mov
rcrb
aaa
push
repnz
in
pushl
je
dec
inc
out
sti
add
sub
pop
jg
adc
cld
outsb
add
xchg
fwait
inc
dec
popfw
xor
mov
sti
sub
xchg
mov
out
jge
jae
pop
in
stos
and
and
xchg
dec
pop
inc
outsb
imul
pop
test
aam
sub
jg
dec
bound
lock
gs
ja
hlt
fldl2t
jecxz
lcall
movsb
dec
sbb
rcrb
sbb
popl
inc
inc
out
mov
or
pop
xchg
fs
jmp
push
movsb
iret
es
and
sub
add
divb
cwtl
ret
imul
push
int
outsl
push
lock
push
outsl
lahf
stos
sbb
out
test
mov
adc
or
mov
scas
or
push
jnp
cmp
movl
add
mov
movsb
out
jl
push
mov
xor
adc
loopne
adcb
push
popl
jle
inc
sub
jb
and
cwtl
push
jne
lds
out
or
insl
jp
imul
dec
jge
mov
test
insl
sbb
jmp
rclb
sbb
sub
cmp
adc
jl
repnz
repz
jmp
out
xchg
sahf
dec
adc
mov
cmp
js
jecxz
sub
cld
xchg
cmp
fcmovnb
jns
iret
xor
mov
cmc
jns
aas
mov
cld
lds
jl
daa
sahf
addb
push
xor
stc
fwait
shll
cmpsl
jno
sbb
jne
push
mov
mov
hlt
insb
mov
jl
xchg
dec
addr16
ret
shll
loopne
jle
inc
jl
subl
inc
enter
cmp
repz
fisttpl
mov
idivb
dec
lret
push
lods
push
stos
or
dec
out
or
fisubrl
push
in
ret
lods
cld
std
hlt
arpl
popf
sub
mov
cmc
sub
dec
fidivrl
xor
imul
xchg
jo
shrb
cltd
lret
push
jno
je
sub
dec
push
jl
repz
cmpsb
pusha
mov
xor
mov
pop
pop
jb
xor
cmp
adc
stos
out
movsl
mov
pop
daa
popf
jg
xchg
mov
fdivp
and
mov
pop
negb
pop
and
mov
jg
xor
clc
mov
or
iret
das
mov
and
punpckhwd
out
push
xchg
jg
mov
jl
movsl
adc
mov
shlb
dec
adc
mov
jae
inc
sub
adc
xlat
mov
cmp
les
stc
cmpsb
sbb
stos
mov
push
jno
mov
lahf
out
push
pop
add
bound
cmp
seta
cld
cmp
test
ja
or
add
xor
add
aad
or
test
jns
sbb
pop
push
stc
add
xor
lods
pop
sbb
loopne
pop
jp
pop
sarb
faddp
loope
rcr
repz
addl
stos
aad
fsubrl
or
xchg
cmp
push
mov
mov
jl
stc
xchg
xor
lahf
cmpsl
or
dec
adc
jmp
jo
dec
xchg
adc
mov
packssdw
popa
inc
push
jecxz
lcall
sbb
popa
and
inc
fwait
mov
dec
cmpsl
rorb
cmp
xchg
inc
lcall
dec
mov
sub
les
jae
mov
pop
outsl
push
insl
popa
push
stc
inc
fmull
mov
adc
inc
inc
adc
sahf
ss
test
mov
inc
mov
ss
cmc
daa
nop
cmpsl
xor
addr16
mov
jecxz
in
incl
insl
adc
jge
fnstenv
inc
out
movsl
test
xchg
cmpsb
adc
insb
les
mov
ja
lds
nop
addl
mov
sahf
cmp
xchg
inc
mov
pop
shl
cld
scas
mov
sub
andl
inc
mov
lahf
je
jno
and
adc
cmp
leave
xchg
test
pop
sub
mov
imul
or
xlat
inc
jp
push
scas
jnp
push
popa
push
and
cwtl
mov
inc
shrl
adc
imul
or
in
test
mov
scas
outsl
lock
inc
push
and
loop
loope
inc
pop
jle
and
mov
xchg
xlat
test
iret
inc
clc
mov
mov
adc
add
clc
loope
push
adc
popa
movsb
push
roll
repz
xchg
inc
fucom
adc
gs
sbb
stc
mov
sbb
rcrb
push
inc
lea
scas
mov
sti
ret
lcall
dec
mov
aas
and
popa
shr
popf
out
cmpsl
rcr
sbbb
lea
nop
mov
enter
xchg
push
mov
popa
loop
outsl
subb
xchg
std
cmp
in
fildll
lret
ds
cmp
cmpl
lret
call
mov
xchg
call
sbb
cmpsb
mov
outsl
dec
cmp
repz
push
push
je
movsl
push
roll
cmpsb
pop
out
dec
mov
sti
inc
cli
sub
out
push
jno
xchg
popa
mov
hlt
jmp
fstpl
xchg
dec
insl
add
inc
sbb
sub
inc
mov
mov
imul
pop
jecxz
iret
xor
popf
adc
mov
or
add
ficompl
jecxz
jp
sbb
push
in
imul
cmp
imul
pop
stos
mov
fcmovnu
movsb
sub
stc
jo
pop
out
and
cmpsl
xlat
cmp
and
push
fsub
adc
xor
mov
dec
push
cltd
sbb
sbb
rol
xchg
pop
sbb
dec
shl
out
cld
lahf
repnz
shll
jg
push
pop
xor
xchg
jmp
dec
daa
pop
inc
push
mov
fcomi
add
in
cld
lods
mov
cmp
mov
iret
cmp
cmpsb
jg
mov
int3
addr16
and
push
icebp
adc
fdiv
loop
mov
ret
notl
inc
xchg
add
pop
xor
cli
pop
ror
lds
push
nop
mov
stos
mov
dec
sahf
popl
cmp
lret
mov
push
data16
fcoml
pop
jl
xchg
jecxz
negb
imul
sbb
pop
popf
ret
jnp
je
fs
xchg
mov
cs
sbb
sbbb
or
inc
sub
in
add
testb
std
cmp
xchg
pusha
bound
cmpsl
fdivp
xor
shl
sub
inc
xor
test
sbb
es
cmp
arpl
xchg
sub
jg
repnz
fidivs
pop
jae
pop
add
pop
sbb
lret
pop
add
jmp
xchg
sbb
add
jg
hlt
outsb
movl
push
cs
xor
mov
sbb
test
sub
insl
ret
rcrl
push
daa
loop
push
push
addr16
lock
in
mov
scas
fwait
addr16
xchg
jne
das
sbb
loope
insl
cmpl
insl
imul
mov
dec
jns
arpl
aas
mov
mov
lods
test
jne
and
sarb
cmpsl
in
mov
sbbb
dec
movsl
jp
push
xchg
es
adc
sub
dec
loopne
cld
inc
mov
jb
aaa
mov
push
inc
dec
jns
test
das
divb
sbb
aas
lds
add
lds
loope
dec
mov
aas
gs
lds
shlb
insl
xor
inc
inc
arpl
push
sub
bound
mov
cltd
pop
lock
pop
test
mov
pop
and
into
xlat
shlb
jecxz
das
sbb
push
aaa
dec
cmp
ja
aad
ja
fiadds
xlat
pop
push
mov
movsb
push
pop
pop
lret
push
jge
daa
insl
je
push
mov
inc
shlb
push
pop
mov
fs
jbe
lcall
adc
and
or
or
imul
andl
mov
call
jge
jge
sarb
mov
mov
icebp
or
or
mov
inc
je
add
aad
sub
mov
push
jmp
cmp
insl
daa
repz
and
std
sub
jnp
lcall
adc
xchg
and
out
lods
mov
push
fndisi(8087
arpl
scas
mov
loope
push
push
pop
sti
jb
cmp
mov
mov
dec
lahf
ja
jns
ja
mov
fsubs
fsubrl
xor
test
sub
inc
mov
test
mov
out
outsl
inc
xor
cwtl
sbb
rcl
scas
lods
sub
xchg
jg
pop
ja
out
sbb
xchg
rcr
ret
push
or
loope
mov
xchg
cmc
jl
pop
push
pop
mov
call
mov
dec
inc
jae
fsubl
jp
icebp
adc
pushf
in
adc
push
fisttps
pop
shll
mov
data16
inc
jle
inc
shlb
xor
loopne
jge
lcall
add
push
cmp
mov
mov
out
jle
outsb
jo
mov
mov
fld
cmp
xchg
mov
fsubl
lcall
jg
test
xchg
dec
nop
addr16
mov
and
dec
lcall
inc
andl
push
adc
out
pop
mov
mov
mov
pop
jmp
pop
andb
xorl
adc
shl
pop
lock
or
out
mov
out
sub
or
jbe
dec
and
pop
ret
xchg
lods
mov
xor
adc
sub
and
add
lret
shll
jle
xchg
jno
ret
push
jp
and
ja
jle
fwait
stc
in
xor
jo
push
cmp
and
push
mov
shl
xchg
fsubl
scas
rcr
dec
mov
push
aam
push
xchg
add
lret
aam
sub
mov
sbbl
lds
pop
enter
mov
sbb
in
xcrypt-ctr
cmpsl
fnsave
lret
xchg
mov
int
fs
pop
cld
lea
mov
cmp
ror
push
inc
dec
mov
jmp
outsl
add
nop
jmp
sub
aam
pop
or
mov
xchg
out
popa
clc
test
jae
les
pop
xor
ja
sub
sbb
sarl
stos
inc
cmp
into
clc
add
mov
inc
test
ljmp
daa
incl
sbb
call
sub
cli
sub
xchg
mov
xchg
fisttpll
xor
lods
inc
jge
xor
sbb
jae
retw
les
adc
insl
and
xor
pushf
push
dec
jo
pop
xor
scas
push
test
pusha
in
add
popa
js
int3
out
jno
test
dec
rclb
das
lahf
repnz
adc
int3
mov
mov
xor
scas
pop
mov
or
pop
jo
sub
je,pt
out
and
fbstp
xor
arpl
sbb
jb
jno
push
mov
mov
or
jecxz
sbb
pop
pop
or
fisttpl
adcl
in
push
outsb
in
mov
pop
jne
popa
daa
adc
xor
mov
out
out
imul
jae
or
es
add
push
and
jp
lret
mov
scas
sahf
int3
sbb
dec
mov
and
das
adc
mov
jg
dec
or
xchg
cmpsl
and
fsubrs
mov
mov
push
xchg
mov
dec
cltd
inc
icebp
jbe
adc
dec
rcrb
movsb
mov
jb
enter
lea
jmp
cwtl
xchg
int3
cmp
mov
and
mov
sub
popa
or
sarb
jae
inc
adc
int3
fsub
sti
out
mov
rcrb
xchg
lahf
out
push
stc
in
jae
mov
or
sahf
xchg
insb
push
pminub
mov
gs
fisttps
aaa
hlt
stos
outsb
sub
ret
lods
adc
xor
in
loopne
je
or
sbb
out
lock
addr16
mov
test
hlt
mov
cmp
ja
and
and
fs
rcrb
pop
or
add
cli
test
sbb
lea
mov
dec
mov
pop
sti
xchg
push
je
sub
pop
shll
rclb
jbe
ljmp
xchg
popf
hlt
int3
pop
mov
cmp
mov
mov
cmpb
in
or
push
aam
scas
xchg
cwtl
sub
repnz
frndint
scas
mov
movsl
fwait
push
and
xchg
inc
cmp
sub
popf
inc
cmp
pusha
jle
test
lcall
cmpsb
push
push
fwait
dec
cs
or
fwait
xor
xor
and
pop
daa
das
or
lret
jp
cmp
lret
xchg
outsl
push
inc
xchg
fimuls
sahf
mov
jge
and
fs
rol
mov
jmp
repz
mov
push
jmp
push
mov
and
loop
fnsave
cmpsl
xchg
push
sub
lcall
dec
ret
daa
lea
push
cltd
mov
test
je
cmp
jne
iret
pushf
jl
rorb
sbb
ljmp
xor
xchg
jae
mov
xorb
sbb
mov
pop
mov
dec
addr16
mov
dec
outsb
jl
mov
fiaddl
inc
sub
adc
rol
push
repnz
add
cmp
incl
daa
adc
sub
add
enter
hlt
mov
hlt
pop
lret
stos
dec
mov
rcll
or
mov
movsl
jecxz
loope
aad
stos
sub
jg
daa
arpl
int3
repz
lock
xor
jb
gs
daa
negl
insl
iret
hlt
mov
int
adc
loop
push
xor
pop
and
cmpsb
lods
cmp
inc
mov
dec
push
push
and
inc
popl
loopne
hlt
add
shlb
stc
cmpsb
xor
mov
pop
outsl
mov
leave
and
mov
subb
mov
inc
dec
mov
je
loopne
cmpsb
mov
adc
cmc
out
testb
out
pushf
in
push
cmp
shll
adc
imul
pop
test
hlt
xor
cmp
dec
push
or
lods
xchg
inc
add
jl
mov
or
inc
rorb
adc
sbb
stc
xchg
or
test
orl
lods
addr16
shlb
cltd
test
push
and
or
inc
jg
popf
add
mov
or
shlb
mov
popa
repz
test
xchg
mov
xor
xor
les
or
movsl
fcmovne
movsl
pop
cli
movsl
pop
out
rcl
xchg
iret
enter
push
testl
cltd
imul
ds
arpl
jle
imul
sub
sti
adc
push
adcl
add
or
imul
pop
ss
das
xor
test
sub
gs
outsl
mov
jae
testl
add
roll
test
or
dec
ljmp
cmp
lods
hlt
mov
mov
sub
inc
xchg
or
repnz
sarl
es
icebp
stos
aad
mov
dec
mov
leave
and
test
daa
mov
es
push
test
sub
jb
adc
cmpsl
push
scas
stc
push
push
push
adc
cld
xchg
aam
cmp
jns
add
mov
in
and
adc
adc
pop
mov
pop
xor
add
push
add
mov
outsb
pushf
test
inc
adc
movsb
neg
cmp
ja
mov
adc
xor
cmp
sbb
xor
sub
fld
aas
inc
in
enter
mov
out
adcb
negl
call
push
xchg
jns
cmp
pop
mov
or
shlb
inc
movsb
imul
inc
and
pop
mov
daa
sub
call
cmc
pusha
loope
filds
insb
pop
fistl
xor
lds
hlt
call
xchg
jne
mov
lods
fnstenv
cmpl
out
mov
call
cmp
push
rcrb
xlat
ficompl
mov
scas
and
xchg
sbb
pop
adc
xchg
cs
jg
adc
jg
push
and
sahf
cmp
and
ds
pop
js
jbe
stc
add
enter
cld
pop
jle
adc
sbb
mov
fists
popf
fcompl
mov
lret
push
jg
ss
outsl
pop
shrl
lret
xchg
xchg
out
jge
imul
test
jl
cmp
fisubrl
repz
add
cld
scas
ficoml
and
jb
dec
mov
jle
mov
loop
mov
bound
and
aam
jae
loop
aas
out
cmp
sub
mov
xchg
lods
jae
andb
xchg
cmp
mov
mov
push
divl
lret
sub
jae
jae
fs
jb
lods
xchg
cmp
in
enter
add
movsb
lock
mov
sbb
dec
xor
out
mov
push
xchg
pop
push
test
arpl
lret
rol
adc
sti
int3
sub
push
mov
rorl
enter
les
aas
loop
adc
movsb
rorb
int
sbb
mov
fwait
push
push
sti
xlat
mov
jl
mov
inc
mov
inc
or
add
lds
loop
jg
in
decb
adc
in
jbe
push
dec
adc
jle
pop
and
inc
mov
or
outsb
mov
mov
dec
jmp
xor
daa
scas
in
adc
jnp
arpl
lock
xchg
test
or
mov
gs
imul
mov
mov
mov
nop
es
sub
push
adc
divl
outsl
dec
inc
cli
dec
lds
fisttpl
cmp
ljmp
outsl
rcl
movl
adc
push
in
push
xchg
mov
xor
adc
fnsave
loop
adc
mov
jnp
cwtd
test
nop
lea
mov
jle
and
and
test
jmp
xchg
test
adc
cli
mov
push
inc
inc
xchg
jle
inc
xchg
sbb
stc
sbb
cmp
jo
mov
mov
int
mov
mov
adc
nop
xor
pop
push
sbb
outsb
sbb
sbb
or
pop
in
push
pop
pop
mov
xchg
push
adc
test
jmp
int
cmpsl
int
mov
push
popa
mov
jbe
ja
repz
push
mov
fstl
pop
sbb
les
pop
push
dec
test
xor
bound
out
popf
xchg
outsb
adc
sbb
iret
rorl
inc
arpl
push
sar
mov
insb
cmp
cmp
popf
pop
pop
push
aas
nop
jmp
add
aad
xor
jle
cmpsb
sbb
dec
push
mov
es
xlat
cmp
mov
jmp
sbb
in
lods
mov
pop
and
sarl
jg
jae
jl
in
and
out
pop
or
scas
pop
cltd
mov
jg
mov
mov
push
outsl
ljmp
and
ds
push
push
adc
shlb
mov
adc
jle
xchg
xor
xchg
xchg
mov
call
inc
cs
ss
jb
lret
dec
sub
mov
dec
mov
int3
xchg
ss
movsb
jns
cwtl
mov
xchg
or
mov
movsb
mull
mov
mov
test
outsl
leave
sbb
pop
adc
push
mov
mov
mov
fwait
push
cli
sub
mov
in
mov
leave
and
dec
mov
rcrl
xor
push
ja
xor
push
xor
rclb
pop
movl
or
or
xchg
push
sahf
ss
ja
or
lods
dec
jle
xchg
adc
xchg
inc
xchg
and
jp
cmp
test
mov
jbe
push
rcrl
stc
cmp
leave
mov
cmp
mov
roll
in
mov
fwait
cmc
inc
push
cmpsl
add
dec
roll
cwtl
push
xchg
cld
mov
arpl
pop
jne
std
test
xor
add
pop
lcall
xchg
dec
xor
test
jno
pop
pushl
addr16
sub
in
adc
shlb
jo
ja
stc
mov
out
sub
in
insl
xor
jbe
mov
sbb
push
loopne
orb
add
out
fs
sahf
mov
lahf
jae
clc
arpl
fbstp
dec
and
push
lods
dec
jbe
es
ljmp
cmc
and
jle
push
ja
mov
movsb
xchg
mov
stc
sbb
jl
push
mov
mov
mov
adc
and
push
pop
loope
sbb
xor
or
popf
dec
lahf
xchg
jecxz
sub
cmp
mov
dec
pop
and
loope
fcmovnb
pushf
pop
pop
lods
and
popf
imul
xchg
push
mov
push
jmp
push
mov
add
pop
inc
sub
xchg
clc
dec
std
adc
xor
roll
imul
mov
sub
repnz
sbb
and
cmp
icebp
mov
out
jnp
loope
add
aaa
out
mov
mov
nop
loopne
es
cmp
adc
std
jbe
bound
cld
pop
test
jne
pop
add
sbb
addr16
push
pop
or
inc
sub
das
pop
out
enter
ror
andb
xor
repz
jnp
loopne
pop
add
lahf
pop
hlt
pop
sbb
daa
ljmp
and
daa
mov
fnstsw
fxch
stos
test
fdivl
mov
mov
int3
loop
push
xchg
sub
lods
call
pop
jecxz
lea
jg
or
sarb
sbb
test
inc
loopne
xor
add
push
inc
add
sbbb
cmp
sbbb
inc
sub
pop
xor
sub
nop
xchg
inc
call
cmc
xchg
lea
push
loop
mov
xor
mov
aas
mov
sub
adc
negb
scas
ffree
xchg
fdivrl
andb
mov
or
jmp
and
sub
aad
pop
orl
push
loope
jge
sbbb
aad
inc
bound
jecxz
or
cwtl
ljmp
das
test
jg
dec
movlps
push
jmp
mov
icebp
mov
pop
pop
cmp
add
mov
sahf
jecxz
mov
lcall
sub
mov
cmpsl
cli
scas
inc
xchg
jg
jl
inc
je
ds
btc
mov
sbbb
push
add
mov
sbb
sub
xchg
fisubs
rcll
lret
outsb
fsubl
mov
adc
jns
xchg
test
rcrl
jno
imul
test
fsubr
xor
mov
lcall
xchg
dec
cmp
nop
push
mov
stos
xor
icebp
pop
dec
scas
push
cmp
into
in
sbb
outsl
ret
dec
test
loope
jno
test
enter
mov
jnp
inc
push
std
mov
stos
sub
aam
xchg
bound
jle
push
flds
dec
and
cmp
xchg
movsl
addb
loop
ret
in
mov
fisubl
sti
fadd
xor
mov
xchg
xchg
aas
adc
into
cmp
mov
sub
shlb
mov
adc
and
and
push
lahf
insb
pop
and
std
xor
mov
pop
inc
or
dec
xchg
xchg
lock
fcomps
outsb
in
loop
sahf
jecxz
mov
popa
cmp
in
subb
ljmp
and
out
mov
lock
and
test
outsb
xchg
fcomps
cvtps2pd
xchg
aam
test
shlb
test
inc
sbb
mov
arpl
mov
movsb
mov
fwait
jne
pop
mov
mov
jno
sub
pop
pop
stos
outsl
pop
push
and
or
pop
jecxz
push
aad
mov
jnp
bound
adc
push
int
dec
xchg
aad
dec
ret
shlb
outsb
sahf
test
jecxz
pop
adc
push
pop
iret
fs
jae
pop
sub
mov
xor
cmpsb
xchg
test
jle
mov
stos
std
ficompl
sahf
insb
pushf
mov
or
test
imull
inc
mov
sub
xchg
mov
es
inc
and
and
mov
cmp
jbe
rep
fnstcw
inc
pop
movsl
jnp
stos
push
mov
std
ja
outsb
addb
lods
dec
int
add
dec
cmc
add
scas
iret
push
movsl
scas
imul
mov
pushf
adc
xor
popa
mov
sete
pop
cmp
rclb
add
inc
out
push
lcall
std
cmpsl
in
cltd
or
jp
popf
jge
mov
movsl
in
fisubrl
insb
xchg
daa
fcmovnbe
js
mov
add
cmp
add
xchg
std
push
test
mov
subl
jns
mov
lret
jecxz
inc
or
mov
outsb
jae
enter
fistpl
push
pop
xchg
cmp
int3
ficoms
dec
push
cmp
cwtl
inc
dec
loop
jnp
cmp
xor
xor
push
lods
pop
in
addr16
pop
mov
enter
xchg
aas
dec
std
mov
push
mov
jo
cmp
in
in
push
outsb
dec
add
jmp
cmp
fucomp
hlt
xchg
adc
insb
ss
push
inc
sub
jo
pop
aas
sahf
mov
imul
and
sbbl
fists
pop
ja
ja
jo
jne
pop
xchg
xor
ljmp
in
jnp
lods
xchg
xchg
repz
pop
pop
xchg
repnz
shll
xor
xchg
pop
jecxz
mov
mov
stos
fnstcw
sub
mov
je
popa
aas
sbb
add
mov
add
push
fiadds
push
cmp
lds
sahf
mov
jmp
loopne
pop
sbb
cmp
push
xchg
xchg
ja
xchg
cmp
push
daa
pop
xorl
repnz
add
push
loopne
xchg
int
push
popf
addr16
xor
fstpt
ret
and
in
jmp
lods
clc
mov
fs
cwtl
push
xor
out
js
push
xchg
mov
or
mov
mov
insl
insb
repz
adc
dec
fs
push
icebp
daa
add
cmp
jle
out
or
push
xor
pop
pop
push
sub
out
inc
negb
add
repz
mov
pop
mov
fnsave
ss
dec
lret
leave
int3
imul
or
adc
fstpl
fisubl
test
out
movsl
add
ret
scas
ds
ret
adc
mov
xor
mov
es
fildl
and
xchg
inc
push
fbld
or
jg
iret
or
pop
or
and
lret
jne
cmc
xchg
ja
repnz
and
outsl
pop
mov
cmp
and
pop
cmpsl
adcl
ds
cmpb
lds
xor
xorb
cld
mov
sub
xchg
jmp
sbb
mov
xor
icebp
sbb
mov
xchg
js
sahf
fcoms
in
cmp
aas
pop
push
aaa
jmp
xor
out
mov
roll
and
jns
cmpsb
lahf
pop
dec
jnp
sti
cmp
jns
and
xlat
das
repnz
xchg
pop
imul
dec
ja
lds
or
dec
or
inc
in
insb
sub
mov
ret
mov
cmp
jnp
dec
in
sbb
fimuls
sub
es
fistpl
add
dec
push
xlat
push
push
lods
push
das
push
pushl
adc
add
xor
loope
jne
sub
rclb
xchg
loope
gs
sti
pop
orl
push
push
fiaddl
out
inc
add
scas
cs
aad
sbb
jo
stc
xchg
iret
addr16
jns
sub
sahf
dec
stos
dec
call
dec
mov
iret
loopne
ljmp
cmpsb
add
es
pop
shlb
test
mov
cli
lahf
jne
in
aam
mov
jp
cld
pop
xor
popa
mov
add
sub
mov
xchg
out
and
shr
insb
dec
cs
fadds
mov
or
cwtl
pop
cltd
pusha
adc
lea
outsl
sahf
daa
xchg
andl
jns
mov
shll
into
or
movl
int3
cmp
lret
sub
adc
les
sbb
pop
pop
pop
adc
mov
xor
mov
out
xchg
cmp
sub
or
cmp
adc
jecxz
xor
mov
fs
into
xor
inc
addr16
jg
sub
test
adc
jle
and
or
mov
adc
pusha
dec
lret
shll
xor
int
mov
xchg
add
mov
lcall
push
sub
push
push
and
lds
lahf
xchg
scas
xchg
or
push
std
inc
jo
imul
or
lds
cmpsl
dec
dec
cld
insb
out
mov
fisttpll
inc
in
xor
or
fisubl
xor
test
pop
test
lret
out
pop
out
mov
icebp
cmp
dec
fnstcw
mov
push
sub
and
xchg
xchg
mov
pop
movb
pushf
mov
adcb
sub
and
push
fildl
dec
aaa
add
inc
xchg
int
inc
mov
in
push
popa
dec
jae
mov
loopne
mov
es
scas
dec
inc
or
jecxz
out
jne
loopne
dec
pop
ljmp
setno
xorb
stc
popl
sbbl
outsl
clc
ds
data16
adc
icebp
jge
pop
out
pop
and
mov
sti
cmpsb
aaa
out
out
pop
adc
sub
pop
call
js
ror
nop
test
aad
adc
scas
mov
push
and
inc
ret
shl
adc
insl
jge
sub
and
aad
ja
cli
pop
outsb
aad
xor
clc
js
sbb
sbb
shll
rorb
dec
and
cmp
arpl
ljmp
mov
test
mov
cmp
xchg
jl
loop
pop
jle
ret
daa
mov
jmp
sbb
mov
fdivp
aam
and
mov
sub
repnz
loop
jnp
sub
ss
jo
sbb
mov
lods
dec
cmp
mov
or
add
test
mov
xchg
lea
in
cmp
mov
jbe
aas
cmp
cmpsl
jne
inc
clc
sbb
in
in
call
sub
negb
xchg
jae
cmp
cmp
test
ret
in
and
add
out
or
add
fisttpl
dec
or
ror
add
lods
fnstsw
imul
ja
jecxz
nop
fisubrl
pop
mov
in
adc
push
and
cmp
xchg
push
lcall
stos
hlt
or
add
jnp
push
push
cmc
stos
mov
cmp
cs
call
dec
cmp
push
inc
or
push
mov
fwait
adc
and
je
or
sub
xor
and
dec
add
int
or
imulb
or
testl
jne
dec
jbe
ljmp
pop
loop
cmp
add
ror
imul
mov
lea
pop
sar
test
cmpsl
insl
aam
out
sti
cmc
negb
mov
sbb
ret
cwtl
enter
leave
cwtl
adc
push
dec
sub
push
sub
pop
cmpsb
sahf
js
fsin
mov
ffree
push
cs
jmp
lock
and
daa
fwait
jg
pop
sti
mov
mov
fidivrs
rolb
mov
push
imulb
aad
aam
insb
push
lock
les
adcl
lcall
imul
aaa
or
fldt
je
pop
xchg
fildll
jl
adc
lods
test
sbb
cmp
mov
push
adc
jle
and
rorl
ret
jp
or
nop
es
test
push
push
pusha
add
gs
in
les
mov
pop
int3
adc
scas
jbe
inc
sbb
pop
xor
test
inc
cmpsl
cmpsl
push
nop
jcxz
push
test
jl
decl
loopne
pop
out
and
xchg
add
jecxz
mov
inc
test
scas
loopne
mov
or
or
repz
cmp
or
push
stos
adc
cmpsb
add
sub
push
xor
dec
decb
je
sbb
cld
popa
jns
mov
xor
xor
lea
jns
in
cltd
and
jo
xor
cmp
clc
push
push
add
pop
mov
mov
push
das
add
imul
stos
sbb
push
ficomps
dec
mov
and
add
jbe
and
addr16
mov
inc
mov
cmpsb
movsl
mov
mov
rorb
sbb
fdivrl
push
fnstcw
mov
mov
jmp
out
aaa
mov
pop
movsl
roll
push
xchg
inc
dec
and
sub
push
lcall
cmp
pop
dec
and
shl
or
loopne
push
aaa
mov
les
add
push
xor
mov
pop
cmp
movsl
mov
pop
xchg
dec
lock
mov
mov
dec
push
cs
mov
mov
fwait
adc
stc
ss
roll
cmpsb
dec
adc
push
jb
gs
jmp
incb
sahf
in
or
movsl
icebp
lret
aad
mov
cs
mov
add
popf
push
dec
mov
push
aam
inc
ljmp
test
ret
mov
in
sbb
loopne
fildll
pop
mov
lods
pop
inc
or
aad
adc
pop
fidivrs
int
and
mov
pop
mov
xlat
sbb
enter
fwait
and
aaa
xchg
addr16
mov
xor
inc
push
adc
icebp
push
mov
mov
inc
lret
jmp
aad
icebp
lods
out
jns,pt
add
stos
xor
sub
fsubrl
fdivl
lods
and
or
cmp
orl
and
mov
mov
inc
iret
ficomps
repz
loope
stos
gs
outsl
adc
cmp
inc
mov
aas
push
jp
cmp
scas
andl
cltd
lret
or
mov
cmp
xchg
out
or
int
add
sub
xorb
push
mov
addb
test
mov
dec
orb
es
inc
cmp
xor
mov
mov
jmp
mov
sub
dec
xchg
add
loope
jle
xlat
jne
pushf
pushl
vzeroupper
arpl
and
push
add
frstor
test
lcall
test
inc
inc
rorl
sub
push
lahf
scas
add
xor
add
add
inc
dec
jl
sub
jb
and
sbb
std
and
fwait
mov
xor
sbb
xchg
fists
pop
movsb
mov
sti
sbb
push
rcrl
jmp
loope
xor
ss
scas
push
fidivrs
shr
cmpsl
cmp
xorl
testl
jno
adc
out
daa
and
dec
cli
add
mov
lahf
movsl
and
daa
addr16
dec
fisubrs
sbb
pop
mov
int3
in
xor
mov
cmp
stos
call
out
cld
lret
add
mov
jb
mov
jle
dec
add
out
call
fwait
in
push
push
mov
movsl
push
push
and
adc
das
jne
arpl
push
fcmovne
lds
push
popf
out
clc
push
lock
shlb
imul
ja
icebp
scas
inc
popf
js
mov
push
or
leave
insl
lret
bound
pop
adc
cmp
pop
fidivrl
orb
ret
adc
jbe
outsl
push
dec
and
ret
pop
pop
xchg
push
pop
repz
sbb
sbb
mov
test
mov
push
push
or
cmpsl
pop
xor
jne
int3
out
xchg
faddl
sub
add
and
inc
iret
sbb
xchg
or
mov
cwtl
imul
lahf
std
popa
loopne
je
xchg
call
and
adcl
popf
notb
into
add
js
mov
shlb
add
dec
pop
outsb
inc
in
jb
inc
call
xchg
push
push
pop
addr16
out
xchg
xorb
fdiv
adc
mov
dec
inc
and
and
lds
jnp
mov
sbb
xchg
mov
jbe
sub
out
lea
lods
sbb
or
lock
adc
int3
adc
add
mov
in
fcomps
jp
fdivrl
stos
cmp
scas
cli
jge
mov
and
ljmp
jg
cmpsb
xor
fsubrs
mov
cmp
xlat
pop
and
popa
pop
imul
inc
jnp
pop
push
push
push
inc
shrl
mov
xchg
repz
dec
pop
and
push
int
cmp
pop
adc
repz
inc
shll
sahf
in
dec
push
push
mov
and
push
jno
andl
push
pop
mov
push
pop
fprem
push
aas
rclb
push
add
in
movsl
stos
inc
pusha
bound
daa
jae
xchg
sbb
and
negb
shll
into
nop
cmpsl
xor
adc
cmp
push
sbb
test
ss
mov
cmp
inc
lods
in
xchg
int3
push
ss
push
cmpsb
xchg
jle
or
mov
fsts
pusha
push
xor
mov
pop
mov
insl
stos
ror
mov
lcall
add
je
add
adc
into
inc
jg
stc
loopne
pop
mov
pop
jl
xchg
jp
pusha
pusha
mov
das
ja
pop
xchg
daa
adc
bound
pop
cmpsl
pop
imul
in
lds
pop
outsb
mov
outsl
iret
ret
inc
mov
jg
pusha
push
inc
cltd
push
mov
test
and
sbb
pop
mov
inc
andb
add
cld
rolb
mov
add
rol
xor
xor
mov
push
leave
mov
xlat
shrb
stc
vdivsd
adc
add
mov
cli
stos
in
push
rcrl
test
je
or
addr16
push
js
adc
ret
jne
sub
cmp
inc
xor
ds
mov
dec
sarb
mov
fimuls
add
loop
sahf
fwait
shll
xor
mov
neg
idivb
ja
shlb
pop
mov
mov
add
imul
push
lods
pop
jbe
inc
sub
xlat
cld
dec
sbb
aam
arpl
outsb
loope
pop
sbb
push
inc
scas
adc
push
sub
sarl
inc
fwait
push
pop
in
push
out
insl
xchg
in
pop
lods
out
sub
adc
ret
add
mov
jne
jl
mov
or
pop
mov
test
push
pusha
mov
cmp
imul
out
cmp
lock
cmp
dec
push
insb
aas
leave
ss
shll
scas
aad
push
push
pop
es
cmpsl
inc
test
cltd
data16
inc
sbb
outsb
cmp
push
das
sbb
repnz
das
inc
inc
sbb
add
test
mov
lahf
xor
pop
popf
sbbl
pop
pop
orb
in
ret
clc
jg
jmp
or
inc
dec
mov
mov
test
add
gs
jnp
imul
dec
inc
int3
dec
or
lcall
enter
in
popf
aaa
push
notb
xchg
sbb
lods
repz
xlat
push
cmp
pop
jge
aaa
test
push
adc
jg,pn
add
xchg
out
mov
mov
fmull
mov
adc
mov
inc
cs
xchg
sub
out
pop
adc
leave
xchg
inc
inc
pop
jle
pusha
xlat
les
jg
sub
adc
cltd
sbb
add
mov
lock
insl
jne
push
push
push
test
xor
cltd
pop
pop
repz
bound
mov
push
out
jbe
sahf
jo
popf
lret
pop
repnz
test
dec
add
outsb
mov
pop
cmp
ja
sbb
scas
jmp
jb
push
lret
adc
mov
pop
push
outsl
std
fdecstp
xor
jb
jmp
cmp
call
rorl
outsb
mov
sahf
fs
rcrl
push
iret
and
mov
cltd
mov
xor
cmpsl
adc
pop
push
scas
incb
inc
lret
pop
in
mov
aaa
push
call
inc
mov
pop
ja
dec
xchg
lcall
imul
mov
cmpsb
pop
inc
and
pop
inc
test
int
sbb
rcl
adc
test
aas
or
push
mov
and
loop
les
jb
dec
in
or
int3
jno
aas
and
push
jb
mov
jge
out
cmp
popa
jno
xchg
dec
dec
pop
nop
insl
mov
push
lock
mov
fs
lods
and
outsl
dec
add
mov
orl
arpl
xor
movl
mov
jmp
adc
jae
push
mov
or
test
sarl
mov
adc
push
mov
nop
stc
push
cmc
dec
outsl
das
mov
aas
into
add
decl
pusha
icebp
mov
push
sar
jae
mov
outsl
aam
xchg
nop
or
or
lret
fdivrl
jbe
ljmp
jo
mov
leave
jecxz
jae
div
sub
sbb
push
sbb
sbb
jno
inc
fst
mov
fidivl
std
xor
es
fsubrs
jb
fidivrs
adc
jl
inc
rsm
ljmp
cltd
aaa
add
and
jge
outsl
sbb
xchg
inc
iret
mov
xor
outsb
dec
pusha
jmp
adc
aas
in
mov
aad
xchg
out
cmpsl
dec
or
mov
loop
sbbb
xor
les
push
ret
sbb
xchg
movd
aas
mov
mov
outsb
movsl
mov
test
cli
into
shlb
dec
fwait
push
add
pop
mov
inc
or
gs
xlat
popf
or
lahf
std
lcall
popf
jae
ljmp
daa
pusha
fiaddl
jmp
adc
add
push
out
cmpsl
pop
insl
test
test
and
shlb
cmp
imul
sar
sub
xor
mov
sub
fucomip
jl
clc
push
popa
mov
or
adc
xor
das
xchg
add
in
adc
mov
mov
cmp
arpl
adc
push
das
dec
xchg
jne
sahf
loopne
push
inc
adc
sub
pusha
mov
fistpll
sbb
inc
imul
call
loope
xchg
adc
pop
add
mov
cmp
incb
push
pop
loopne
jbe
insl
arpl
int
mov
pop
xchg
push
push
out
ss
inc
lock
repz
rcr
repnz
pushf
or
xchg
in
lret
roll
mov
sub
push
push
stos
add
out
sbb
je
dec
shl
adc
ret
and
push
mov
jle
aas
in
jb
or
test
scas
jnp
cmp
enter
jmp
or
iret
mov
xchg
pop
ss
mov
mov
inc
lret
das
test
cmpsl
jno
je
adc
dec
pop
add
mov
ret
loop
outsb
shll
and
push
mov
test
js
jle
pop
add
sbb
loope
pop
xor
testb
cmp
int
sbb
mov
into
pushf
cmp
loop
scas
xor
jno
push
sub
mov
jnp
call
sbb
sub
std
push
out
adc
adcl
inc
gs
sub
sbb
movd
mov
xchg
cltd
and
push
mov
push
xor
pusha
lea
add
ljmp
mov
ljmp
dec
add
push
ljmp
mov
inc
push
sbb
cmpsb
test
jno
push
pop
clc
out
rclb
insb
and
test
into
je
xchg
pushf
call
je
test
aad
cmc
testl
sbb
xchg
stc
sahf
fisttps
stc
push
sub
adc
mov
mov
into
in
fsubrl
xchg
push
and
pop
and
inc
lret
fnstcw
pop
add
inc
adcl
movsl
fisubrl
outsl
xchg
push
and
xchg
sbb
cmp
xchg
cmp
add
imul
fcmovb
ja
mulb
cld
sub
or
ljmp
pop
lcall
add
or
add
mov
gs
add
inc
xlat
lds
jp
scas
push
mov
lcall
mov
fisubrs
fsubr
pop
test
lea
xchg
xchg
test
test
push
xor
stc
jl
fistps
xor
sarb
mov
test
mov
sbb
das
rcrl
dec
adc
push
adcl
mov
or
add
loope
add
jae
nop
gs
dec
push
sti
imull
cmc
mov
and
fst
lahf
xchg
push
jo
jbe
mov
loop
repz
and
sbb
sub
mov
mov
pop
rcll
int
pushf
inc
dec
and
xchg
enter
mov
repnz
mov
es
shll
loop
mov
gs
sbb
cmp
or
cld
mov
cmp
push
pop
lods
imul
sarl
lock
repnz
je
cs
mov
clc
popa
mov
fmul
cli
jns
fsubrl
mov
scas
test
aam
arpl
fisttpll
push
int3
mov
lds
call
icebp
out
sub
out
xchg
xchg
mov
fistl
and
shr
dec
jnp
lods
mov
adc
sub
imul
int
push
push
pop
push
cmp
mov
loopne
jnp
nop
js
jp
ret
jns
das
push
jbe
mov
jnp
sbb
mov
xor
sub
mov
pop
inc
iret
pop
scas
jge
repnz
insb
ljmp
jo
xchg
jp
mov
movsb
push
adc
cltd
arpl
fdivs
mov
mov
fcmovnb
mov
mov
sbb
mov
pop
push
shrl
jne
and
rcr
cmc
inc
clc
jno
mov
add
pop
xchg
push
or
inc
fnstsw
add
ds
xor
add
push
ja
pushf
sbb
jecxz
test
mov
xchg
dec
inc
test
mov
rcrl
rolb
sbb
aaa
addr16
mov
jb
push
sub
les
push
fcomps
pop
popa
imull
adc
pop
inc
aam
xor
in
setno
cmp
cli
sbb
push
push
dec
mov
dec
push
xor
in
xchg
dec
mov
cmp
adc
out
loope
fstpt
or
aas
xor
negl
sbb
ret
les
repnz
mov
sub
aad
push
xchg
jg
dec
adc
dec
xchg
sbb
mov
push
in
sub
rorb
push
mov
call
jmp
movsb
out
ds
ds
adc
les
jnp
dec
neg
fcomps
cs
mov
int
xchg
cwtl
mov
fistps
jns
or
shll
xor
stos
xchg
push
test
push
les
test
gs
inc
rcrb
jl
out
in
lea
pop
test
ficoml
inc
popf
fisubs
dec
pop
jp
lcall
xchg
js
bound
xchg
int
mov
dec
ds
stos
pop
inc
daa
andl
movsb
sbb
add
push
das
outsl
xchg
fcompl
call
pusha
imulb
mov
popa
dec
movsl
add
arpl
stos
movsl
fsub
in
dec
rcl
pusha
adc
jne
divl
iret
jno
aaa
add
test
gs
call
xchg
adc
push
int3
stc
ds
pop
in
int3
add
call
jbe
jbe
add
xor
out
mov
dec
cmpsb
dec
pop
jno
out
add
in
out
push
mov
adc
aas
pop
test
mov
push
inc
lret
mov
mov
out
cmp
fwait
mov
popf
test
push
dec
mov
ret
das
sbb
jno
lcall
pop
leave
dec
in
mov
mov
rcrl
pop
les
popf
or
fmull
inc
push
and
mov
jmp
shlb
xchg
scas
ret
loope
push
inc
arpl
mov
pop
jmp
mov
xchg
jae
xchg
movsb
in
sarb
jns
mov
dec
testb
in
push
and
ja
loope
clc
pop
mov
add
aam
cld
mov
in
push
sub
fldl
cmc
pop
jno
and
inc
pop
cli
imul
gs
and
dec
adc
sbb
mov
dec
push
dec
xor
icebp
push
cwtl
test
outsl
cltd
out
stos
popa
cmp
loope
es
push
adc
cmpl
clc
fmuls
fildll
js
xchg
fimuls
repz
into
lods
std
jmp
ret
cmp
xlat
inc
mov
xchg
xchg
lds
jle
xchg
mov
push
stos
xchg
out
pushf
cmp
insl
cmpsb
cmpl
or
aam
and
ds
shrb
shll
adc
xor
jmp
jbe
mov
sbb
int3
ret
cmc
push
jl
xchg
loop
fdivs
push
in
push
xchg
pop
pop
push
cmp
mov
sti
cmpsb
pop
div
imul
out
popa
nop
xor
jbe
mov
push
sbb
mov
or
in
jmp
imul
push
cmp
xor
into
pushf
push
dec
call
lcall
lret
sub
fwait
xor
jmp
xchg
loop
pop
outsb
pop
mov
cwtl
fidivl
push
or
arpl
dec
lret
fcoms
fimuls
test
mov
aam
ret
lods
push
inc
push
pop
js
pop
int3
mov
sub
arpl
sar
test
mov
or
scas
ja
push
cmp
xchg
cmpsl
lods
rcl
fcmovnb
cmp
mov
in
mov
dec
jmp
lret
stc
mov
jo
mov
sub
xor
outsl
xor
jmp
inc
sub
jp
pop
lret
jmp
ficoml
or
sti
jbe
sub
jne
mov
xchg
mov
and
or
mov
adc
lods
push
cmpsb
ret
outsl
lods
pop
mov
inc
sbb
pop
ss
nop
xchg
jo
or
leave
mov
xchg
push
fmull
testl
in
mov
mov
xchg
mov
outsl
dec
int3
mov
dec
int
cmc
or
test
adc
mov
xchg
clc
nop
loope
sub
inc
pop
out
jl
int3
and
lret
pop
mov
jl
outsl
stos
flds
repz
stc
xchg
fimull
mov
or
int
test
inc
jg
xor
icebp
rcll
add
xchg
movsb
or
dec
sub
out
mov
hlt
into
out
dec
test
adc
shll
insb
mov
mov
sbb
in
enter
test
hlt
mov
and
or
sub
andb
sbb
jecxz
dec
inc
jb
cmpb
gs
mov
jg
dec
mov
sub
icebp
mov
xor
pusha
lret
jmp
sub
das
hlt
insb
repz
das
xor
dec
fisttps
movsl
stos
push
movsl
dec
dec
mov
int
cwtl
lahf
pusha
and
pop
mov
sahf
jecxz
inc
dec
ja
add
add
sub
aas
sub
mov
dec
pop
or
les
push
adc
es
fists
cs
cs
imulb
sub
mov
pop
mov
clc
adc
scas
or
hlt
dec
mov
cltd
sbb
neg
jae
and
mov
mov
popf
mov
daa
js
jmp
lock
fucomip
cmp
mov
mov
gs
or
xorb
or
ljmp
and
aas
test
out
push
sub
hlt
mov
fwait
jno
lcall
lods
sbb
addr16
ljmp
sti
add
dec
inc
insl
add
lds
sub
pop
adc
mov
cs
sti
fisttpll
sbb
jo
mov
rorl
cltd
mov
pop
mov
xlat
ds
outsl
push
jg
push
imul
lret
hlt
mov
sub
push
mov
push
mov
repz
xor
pusha
and
jecxz
dec
xlat
lea
inc
mov
xchg
negb
lods
push
lods
stos
dec
leave
lock
hlt
call
sub
lcall
pushf
popf
cli
mov
cld
mov
scas
aam
cli
or
sbb
pop
mov
subb
aaa
cmp
aas
and
hlt
pop
shlb
mov
aas
push
fwait
daa
mov
enter
jle
ja
lret
sbb
sub
cmp
or
add
das
and
jecxz
aaa
inc
or
xchg
into
jno
test
mov
dec
pop
mov
push
fistpl
dec
cmpsl
in
jl
les
fistpl
insl
push
daa
pop
mov
cmp
cld
test
je
cmc
or
jno
cmp
adc
push
in
mov
andb
insl
xor
jae
fbstp
xor
movsb
cmp
cmp
add
es
xorb
add
mov
push
lods
orl
mov
xchg
push
push
push
dec
ds
jmp
aaa
inc
adc
ljmp
into
dec
test
in
les
mov
jmp
movsl
sbb
sbbl
and
mov
jae
sub
dec
mov
jle
pop
or
insl
jge
int
ss
fimuls
cmp
daa
repnz
pushf
xor
push
lret
and
out
cmc
stc
leave
jno
push
shl
sub
or
popf
ffree
and
push
popf
jno
jmp
popa
add
adc
xchg
pushf
jp
and
mov
dec
inc
aas
sub
or
push
add
inc
pop
lock
sbb
pop
mov
mov
je
jne
lret
test
cli
int3
push
sbb
nop
mov
sbb
mov
pop
cmpsl
mov
aas
push
cwtl
mov
xchg
pop
mov
int
or
cmp
imul
mov
push
addr16
mov
pop
lods
inc
lods
xchg
pop
stos
out
ds
jmp
cwtl
out
test
mov
cltd
in
iret
fsubp
loop
mov
nopl
mov
repz
add
fmuls
lcall
push
lock
or
cmp
sbb
adc
pop
gs
mov
sahf
int3
and
movsl
jne
pushf
fmuls
push
fnsave
xchg
fistl
or
cmc
mov
fidivrl
fisubrl
pop
mov
out
pop
sbb
scas
jmp
fistl
and
cmpsb
fwait
adc
jle
and
data16
dec
pop
mov
adc
negl
push
rcll
mov
jle
in
iret
cmp
mov
aam
xchg
sahf
divl
icebp
mov
mov
cmp
mov
sub
push
mov
and
push
jnp
sbb
push
inc
cmpsl
test
pop
cmpsb
mov
xor
hlt
mov
jmp
push
das
sub
and
in
xchg
in
cmp
jns
xchg
xchg
cmp
inc
jl
push
cli
sbbl
sbb
sti
push
rcll
and
ret
pop
lcall
icebp
inc
ret
movb
add
in
shl
inc
test
dec
add
data16
je
xor
daa
lret
adc
insl
dec
lea
cmp
pop
inc
jge
loop
leave
push
pop
movsl
adc
cmp
mov
repz
fdiv
test
shr
mov
push
ret
mov
sbb
xor
xchg
sbb
aas
jecxz
jmp
out
test
out
mov
add
sbb
scas
dec
dec
mov
dec
call
enter
inc
inc
push
btr
mov
push
jmp
pushf
cld
jb
lock
cmp
test
in
int
scas
jae
jae
out
fwait
adc
out
mov
inc
push
scas
adc
cmp
dec
out
cmpsb
sub
addr16
je
sub
mov
int
adc
inc
lret
ja
push
fiaddl
inc
xchg
fmull
outsl
in
mov
outsl
int
test
ficoms
sbbb
pop
fisubrs
sahf
in
lods
iret
test
jmp
push
negb
lds
xor
inc
mov
out
inc
or
sarl
pop
sti
icebp
xor
xchg
or
inc
mov
dec
pop
and
xchg
jno
repz
sbb
stc
mov
jp
push
pop
push
adc
iret
jno
loope
xor
push
add
fldt
mov
xor
sbb
mov
pop
jge
mov
out
leave
xchg
jbe
outsl
stc
and
jle
in
add
xchg
mov
cld
lret
mov
mov
jns
fimull
jnp
mov
lods
pop
ret
fisttps
es
mov
mov
das
in
sbb
mov
insb
repnz
dec
dec
les
sub
loope
inc
xchg
test
es
icebp
scas
mov
ret
xor
mov
mov
jg
mov
push
push
or
pusha
jae
test
inc
or
bound
fstpl
fs
loopne
pop
shrl
daa
dec
push
out
jle
push
pop
movl
insb
rol
adc
inc
dec
data16
xchg
add
in
lods
adc
jnp
mov
sub
sbbb
inc
cli
inc
dec
nop
mov
movnti
ficoms
mov
dec
add
sub
sbb
jae
movsl
inc
mov
mov
int3
popf
mov
icebp
lahf
stos
int3
xchg
jo
arpl
call
ja
jmp
arpl
jo
je
add
fisubl
jnp
aas
or
repz
mov
popa
push
xchg
jbe
pusha
adc
push
pop
adc
pop
rol
pop
jmp
inc
sub
and
pop
push
cmp
lcall
adc
sub
in
sub
xlat
hlt
jecxz
cmp
jle
in
inc
lahf
adc
cmpsb
sub
aaa
mov
push
or
inc
and
xchg
inc
xchg
pop
or
int3
popa
pop
jmp
xorb
shrl
or
es
jno
xchg
lret
push
test
fs
lds
iret
cwtl
mov
cmp
test
sbb
inc
push
jge
inc
mov
inc
movsl
ljmp
fwait
test
cmp
out
sahf
es
pop
das
and
cli
push
jp
test
mov
fsubl
dec
jp
adc
lret
popf
fcoml
test
add
mov
enter
fsubrp
repz
pop
data16
inc
mov
dec
scas
xchg
rcll
sti
cwtl
mov
pop
inc
in
jbe
or
ljmp
fcomip
or
andb
pop
xchg
outsb
jo
xor
jno
cmpsb
push
out
test
lret
push
dec
mov
lock
ja
adc
jge
jb
mov
dec
sbb
mov
push
stc
xchg
jae
outsb
inc
mov
push
cmpsb
scas
lcall
xchg
pop
mov
mov
sub
les
pop
decb
test
push
insb
rclb
mov
adc
adc
in
stc
pop
call
push
adc
lods
xchg
loop
sbb
js
insb
ret
addr16
repnz
imul
sub
push
dec
mov
fcoms
add
jp
addl
sbb
push
fwait
cmc
imul
pop
jge
adc
repnz
jg
rcr
clc
cmpsb
mov
cltd
hlt
pop
cmp
mov
loopne
rclb
in
in
xlat
jge
pop
push
subl
clc
add
insl
int
mov
fnsave
out
jnp
add
sahf
sbb
add
jge
or
leave
inc
das
pop
in
hlt
je,pt
scas
pop
inc
dec
andb
mov
into
and
iret
mov
out
cli
push
fwait
jae
or
and
sub
mov
or
daa
in
int
jno
in
jle
cmp
push
lret
mov
dec
addl
push
or
mov
and
xchg
and
and
jno
add
pop
out
push
cmp
adc
scas
cmpl
mov
std
xchg
leave
out
imul
fnsave
mov
aad
ret
aaa
or
in
fcomp
fabs
pop
aam
cltd
cli
out
iret
call
push
jg
stc
divl
push
xor
fcoml
loope
mov
xchg
test
or
stos
and
mov
icebp
sbb
xchg
adc
mov
sub
ds
js
and
adc
push
mov
sbb
ja
fwait
sahf
adc
addr16
inc
scas
add
ficoml
test
sbb
or
push
pop
jge
inc
inc
test
cs
scas
dec
jge
stos
lock
pop
ljmp
jno,pt
add
fnstcw
scas
mov
cltd
dec
lret
jg
leave
mov
jmp
data16
hlt
pop
add
jns,pt
mov
cmpsl
test
int3
sbb
jmp
jge
jle
dec
dec
mov
fildll
std
inc
out
mov
fimull
mov
outsb
dec
push
shrl
clc
sbb
push
cmp
loope,pn
sub
push
pop
and
sahf
and
out
push
scas
out
ja
sbb
shll
aaa
shrb
or
dec
sub
jb
fwait
mov
fisttps
and
adc
mov
inc
insb
jecxz
sbb
sub
lods
dec
xchg
jo
jno
aas
aas
ficoms
lahf
enter
ds
inc
std
gs
or
les
jae
sub
dec
fdivl
mov
movsb
stos
out
lret
xchg
inc
lahf
adc
inc
jb
sub
fsubs
sahf
jo
outsl
rcrb
popf
pop
ror
push
nop
mov
ljmp
in
pop
or
add
insb
arpl
imul
mov
fldenv
xchg
cmp
lret
hlt
or
add
mov
lcall
pop
sub
xchg
jbe
in
cmp
js
sub
dec
lods
mov
addr16
test
stc
cld
adc
jl
iret
es
fwait
jp
add
movsb
mov
out
adc
sti
sahf
test
popa
cmpl
inc
sbb
sarb
mov
dec
ja
xchg
jge
lcall
fcomp
push
jl
insb
and
push
test
clc
arpl
repz
pop
scas
sti
stos
fists
lcall
add
push
mov
lcall
pop
push
iret
push
inc
repz
jno
aad
mov
and
mov
in
sub
leave
dec
dec
enter
jbe
sub
cmp
mov
jae
fsubrl
gs
sarb
fadds
pop
insb
adc
sbb
and
sub
dec
out
jns
sbb
adc
and
iret
sub
flds
sub
or
inc
pop
adc
inc
sbb
or
test
outsl
sub
ss
or
ret
test
sbb
negl
inc
mov
adc
pop
pop
xlat
test
rep
aas
jl
sbb
les
addr16
cmp
mov
shrb
xor
jns
jo
shrl
pusha
push
ss
in
sub
repnz
and
fstps
adc
cld
js
jle
sub
ret
hlt
jns
andb
xor
dec
jne
mov
push
mov
or
mov
xchg
es
add
daa
pop
shrb
inc
pop
or
out
flds
pusha
mov
inc
jmp
dec
jno
stos
int3
cmpsb
into
mov
xchg
mov
cmpsb
in
jo
inc
jae
inc
xor
push
mov
flds
sub
ljmp
insl
out
out
jne
jecxz
fistl
cltd
fstpl
jg
mov
xchg
cmp
nop
gs
adcb
mov
and
pop
aas
jle
xchg
call
dec
stos
pop
adc
jge
and
rcr
lea
insl
mov
stos
push
in
xchg
push
push
mov
arpl
enter
mov
inc
mov
fldl
and
push
xchg
pop
mov
std
clc
or
push
cmpsb
add
cld
aas
ficompl
lods
ficompl
mov
pop
out
dec
inc
push
test
enter
rcll
lods
push
or
sub
outsb
popa
jp
jne
pushf
repnz
aad
xchg
xchg
fmull
pop
xchg
push
mov
nop
adc
or
jnp
push
add
jmp
push
xchg
jge
insl
jecxz
fidivrl
or
add
movl
ret
mov
cmp
addr16
fiaddl
dec
sub
or
push
out
loop
fistpll
andb
fld
test
adc
cs
xor
aam
popf
inc
ljmp
add
mov
xchg
fcmove
imul
sub
js
popf
shl
pop
mov
fs
mov
sbb
or
pushf
lds
sbb
inc
push
rorl
lahf
std
test
cmp
addl
and
mov
lods
mov
ss
inc
xchg
xor
jge
xor
push
jg
std
add
ret
test
icebp
and
mov
sub
add
lds
mov
inc
jb
mov
iret
cld
jo
repnz
addr16
aam
das
gs
dec
les
cmpsl
inc
loopne
mov
pop
inc
xchg
pop
sub
dec
leave
xchg
int
rorb
ds
cli
scas
and
xor
jae
inc
dec
cmp
loope
pop
sbb
or
int3
jbe
cs
xor
cmc
test
in
xorb
dec
das
rol
mov
loop
pop
scas
adc
loope
sub
adc
fistpl
xlat
subl
sub
inc
xor
test
xorl
mov
push
jl
test
jae
or
mov
xchg
inc
xchg
cld
adc
movsl
inc
cmp
jmp
fstl
bnd
adc
pop
pop
arpl
out
cmp
xor
je
rcrb
insb
dec
push
addr16
sub
adc
jno
adc
imul
rolb
movsl
xchg
mov
push
or
mov
add
into
xchg
dec
imul
cmp
fstpt
fsubl
and
push
xor
icebp
in
jmp
or
inc
bound
addl
rorl
sahf
jle
ror
mov
push
cs
into
das
movsl
call
fs
jmp
aad
add
xor
push
push
jmp
mov
icebp
mov
dec
lods
inc
xchg
clc
xchg
out
daa
xchg
popf
imul
adc
arpl
fsubl
xlat
adc
std
mov
outsb
mov
sbb
pop
sbb
repz
cmc
scas
push
test
loope
xchg
out
pop
pop
in
xor
mov
xchg
imul
xchg
fidivrl
cmp
nop
js
push
xchg
pop
mov
lcall
test
lret
inc
jecxz
mov
fdivrp
arpl
mov
ret
loopne
mul
das
icebp
fnstsw
cmp
or
test
inc
adc
and
push
mov
cmpsb
aas
push
inc
or
test
push
into
or
mov
mov
sub
ret
and
movsl
mov
dec
pop
cmpsl
aad
jae
push
imul
icebp
nop
push
pop
stc
imul
mov
mov
sub
rcrl
mov
sub
pop
outsb
rorl
jb
test
xor
inc
movsb
cmpb
adc
push
movsl
jecxz
xchg
dec
dec
jo
out
loopne
mov
mov
rorb
gs
fsincos
add
dec
bound
sbb
aaa
subl
xlat
dec
or
fdivrs
mov
mov
cmp
gs
pop
push
or
insb
call
int
xor
and
push
mov
lods
mov
push
and
jb
xor
mov
and
mov
enter
push
loop
imul
push
jmp
xchg
bound
xchg
mov
cs
mov
ds
adc
outsl
lret
mov
jp
std
sbb
insl
lret
popl
and
or
repz
psrld
push
mov
and
xlat
adc
fistps
gs
mov
repnz
sbb
sub
iret
push
popa
sti
sahf
das
jnp
sub
into
adc
jecxz
std
adc
jmp
scas
rcrb
jae
push
andb
fistps
test
sbb
lahf
jb
inc
lcall
push
cs
and
jne
sub
in
xor
push
popa
cmp
pop
dec
scas
lea
or
ja
dec
arpl
pushf
dec
cmpsb
dec
iret
xlat
dec
mov
fsub
out
xchg
nop
inc
icebp
imul
test
les
inc
xor
add
inc
popl
sbb
and
pop
push
xchg
lods
push
aas
push
lret
push
movsl
es
js
add
push
call
push
or
or
sbb
xchg
sbb
jg
in
add
mov
pop
insb
repz
daa
nop
xchg
mov
or
sbb
stos
out
inc
cli
insl
fcomps
xchg
in
sbb
rcr
imul
and
lret
jno
jp
mov
jo
pushf
mov
ljmp
ret
sbb
into
shrl
movsl
and
and
pop
scas
ret
add
dec
xchg
push
or
and
mov
testb
arpl
vmovupd
jae
jb
cmp
mov
loopne
xchg
inc
rcl
and
push
jbe
push
mov
push
stos
rcll
inc
mov
add
fcoms
or
xor
iret
xchg
add
sub
sub
jno
in
enter
xchg
repnz
call
int3
xchg
push
or
xor
outsb
cs
mov
aaa
outsl
pop
cmp
pop
cld
xor
push
mov
inc
popf
pop
sbb
add
fyl2xp1
push
jl
jnp
sbb
mov
pop
cmpl
adc
gs
rclb
cmp
test
cmp
hlt
jae
in
jo
cmpsb
out
mov
pop
gs
mov
fisttps
jb
popf
stos
scas
adc
mov
in
icebp
lds
cli
in
bound
test
mov
ljmp
jg
lret
test
pop
sub
jle
aam
aam
cwtl
fstl
repz
clc
cmp
xchg
or
fucomp
jecxz
mov
jne
ss
in
push
pop
sbb
imul
mov
dec
jnp
cmp
xor
pusha
jge
fistps
test
xor
inc
sub
and
mov
sub
ljmp
cmc
jmp
popa
stc
inc
add
ret
mov
jp
into
jbe
mov
jb
repz
pop
test
add
movsl
inc
in
rol
scas
lods
cmpsl
mov
adc
sbb
mov
jnp
daa
jp
xchg
pop
fldcw
jno
push
adc
repnz
arpl
and
cmp
cmpsb
adc
fst
mov
pop
xor
mov
or
hlt
aam
inc
push
mov
mov
inc
or
or
subl
add
cmc
mulb
cmp
jne
pop
nop
add
outsl
pop
cmpsl
sti
add
cmp
mov
or
pop
mov
mov
repz
jecxz
push
mov
leave
mov
sub
mov
cwtl
scas
imul
jo
mov
loopne
test
push
scas
mov
aaa
lods
aad
jmp
mov
inc
pop
xchg
xor
sub
mov
shll
hlt
clc
jmp
xor
sub
lods
cwtl
sbb
mov
xorl
push
sahf
xchg
jae
int3
jmp
ret
aad
pop
mov
data16
ficompl
inc
and
adc
clc
ljmp
icebp
in
or
or
js
rorl
adc
dec
push
sahf
jg
les
daa
pop
sub
lahf
sub
cmc
mov
jmp
jecxz
loope
rcrl
sbb
fldcw
sbb
loop
xor
loopne
imul
inc
push
dec
jb
xchg
dec
ljmp
mov
testl
popa
fxch
dec
jo
fwait
fwait
push
loop
mov
push
lods
sbb
mov
push
bound
pop
in
jbe
pop
cmp
gs
insb
leave
stos
adc
dec
clc
mov
das
or
sub
mov
fsubs
lock
fstpl
and
mov
cli
popw
xor
and
xor
add
jge
jns
and
mov
xor
out
jns
lods
inc
push
outsb
add
or
aas
xchg
addr16
js
shlb
in
mov
repnz
in
jge
inc
dec
mov
test
mov
jl
test
mov
je
pop
inc
aaa
mov
dec
int
cs
je
or
lock
ss
out
enter
rorb
mov
sbb
ja
je
je
push
shl
cmp
sub
data16
ss
sbb
ret
test
jns
add
cmpsb
out
jecxz
add
leave
or
aam
cltd
pop
ficoms
dec
fistl
dec
push
jecxz
das
sub
mov
inc
sahf
sbb
cwtl
mov
in
jmp
aad
in
ljmp
push
mov
sbb
dec
in
pop
leave
xlat
sub
push
push
mov
xchg
sbb
jno
inc
dec
jge
pop
add
pop
mov
test
insb
mov
fdivrs
roll
add
out
mov
xor
pop
adc
mov
jmp
mov
jge
in
js
sub
cmpb
push
inc
push
pop
int
stos
and
add
jg
bswap
push
sub
shr
ficomps
fstpt
int3
inc
mov
jns
jle
aad
outsl
cmp
dec
sbb
mov
faddl
jnp
fisubrl
jecxz
sub
push
es
xor
or
insb
add
xchg
xchg
mov
mov
into
lods
outsl
scas
fildll
nop
jnp
ret
add
xchg
pop
popf
mov
mov
out
pop
sbb
or
sbb
jne
sti
nop
push
fimull
call
ljmp
aam
imul
sbb
xchg
fisttpl
js
pop
jge
mov
dec
mov
xchg
mov
insb
pop
or
mov
add
inc
cmp
dec
pop
enter
das
adc
in
cmp
sub
push
inc
mov
mov
in
mov
jecxz
dec
mov
ljmp
out
jb
int
dec
mov
sahf
add
icebp
jae
into
lock
mov
push
jno
xor
mov
cmp
int
icebp
out
outsl
sub
outsl
cmpsl
or
mov
lods
gs
insb
fs
clc
pop
pop
cmpsb
ss
out
dec
iret
jl
xor
test
gs
pop
scas
push
and
test
jmp
sbb
out
sub
mov
sarb
cmpsb
mov
lds
sbb
outsl
xor
fidivrs
add
in
push
fs
pop
xor
push
pop
out
sub
mov
cltd
test
es
cmp
xchg
scas
mov
gs
scas
dec
std
jnp
xlat
lahf
cmp
movsb
mov
pop
jp
in
inc
or
ds
imul
js
add
test
adc
sbb
jp
lahf
push
fs
jl
mov
pop
inc
out
pop
faddp
into
gs
flds
insb
repnz
test
je
rol
mov
jae
pusha
add
popa
and
inc
dec
sti
dec
enter
lret
imul
and
lcall
xlat
mov
fwait
mov
repz
mov
fcomp
cmp
cltd
mov
cwtl
popf
mov
sahf
jg
call
aam
in
add
mov
and
mov
or
pusha
add
xor
mov
xor
mov
gs
sbb
lcall
mov
adc
or
psrlq
ds
je
or
ljmp
das
add
cmp
mov
sarb
in
mov
fsub
mov
lahf
icebp
in
es
jo
sub
mov
mov
mov
icebp
xor
adc
and
fwait
inc
pop
inc
adc
sbb
jmp
sbb
in
cmpsb
xor
aas
and
pop
adc
push
rcrb
outsb
int3
mov
sub
inc
enter
pop
aas
mov
pop
inc
stos
daa
cmp
loope
rcr
leave
in
imul
cmpsb
roll
mov
jbe
jns
cli
inc
dec
outsl
and
jae
xchg
ljmp
inc
dec
or
test
out
xchg
rol
les
mov
mov
mov
scas
fiaddl
push
scas
addl
dec
loope
and
jns
sti
mov
adcl
xchg
pushf
add
enter
add
pop
push
xchg
fmull
dec
cmp
out
test
adc
jae
xor
jae
adcl
or
push
nop
mov
cmpsl
jnp
push
ljmp
shl
hlt
mov
jb
add
into
repnz
outsb
jne
rcrb
inc
stc
xchg
call
imul
mov
cmp
cmp
sbb
in
fisubrs
pushf
andb
mov
in
mov
out
fsubrp
loopne
push
sub
and
mov
and
lret
fsubl
shll
dec
add
ja
cmp
pop
push
xchg
mov
mov
mov
in
fsubs
nop
sub
repz
sub
mov
int3
cs
out
rcll
stos
xchg
aas
sub
divb
xor
inc
icebp
inc
add
xor
cwtl
jle
or
int
inc
aam
jle
fsubs
lock
mov
dec
fnstcw
adc
cwtl
adc
call
jle
into
or
mov
pop
sub
aad
sahf
lahf
stos
inc
xor
sbb
lcall
mov
add
repnz
enter
int3
sarb
sahf
clc
movsl
mov
xor
sti
adc
mov
lret
fisubrs
es
jp
xchg
aam
in
push
push
stc
add
or
cwtl
lock
fsubs
cmc
in
movsl
inc
add
test
push
mov
jg
jmp
aad
test
lret
iret
cmp
icebp
inc
aam
xchg
jbe
dec
addr16
push
incb
jno
dec
cs
les
mov
test
or
pop
mov
cmp
and
xorl
lds
fs
in
sub
ds
sub
in
sub
cltd
nop
adc
aad
repz
and
shlb
pusha
dec
cmpsl
dec
lret
stos
fisubl
mov
mov
add
out
cmp
and
test
addr16
inc
in
jno
mov
xor
jg
sti
cwtl
mov
jg
es
notl
aad
push
and
icebp
push
mov
xor
cmpl
arpl
cmpsb
xchg
jl
out
and
fwait
pop
pop
inc
loope
mov
cli
stos
pop
movsb
js
jno
fwait
daa
aas
dec
mov
mov
jmp
test
bound
mov
xor
xchg
lret
sar
test
mov
jbe
xor
es
mov
push
scas
adc
lea
shrb
sbb
mov
xchg
out
or
cmp
sbb
fdivs
sub
iret
pop
aam
and
jecxz
cltd
adc
pop
dec
mov
aaa
iret
and
cmp
xlat
inc
sbb
sarb
jle
nop
cmp
lret
mov
add
aaa
mov
data16
sub
out
test
nop
loopne
aad
stos
jmp
lahf
mov
mov
int3
call
outsb
inc
jno
shr
adc
popf
arpl
push
xchg
inc
inc
pop
movsb
cmp
adc
mov
mov
lret
int
pop
pop
sub
push
sbb
std
das
xor
repz
mov
lods
adc
jmp
ss
xlat
js
dec
cld
cmpb
pop
adc
pusha
stos
data16
inc
outsb
not
xor
cmpsb
mov
fidivs
inc
xlat
xchg
add
out
fstl
lret
ret
call
cmove
movsl
pop
mov
loop
dec
add
mov
cli
cmp
dec
mov
cs
popf
adc
push
pop
cmpsb
in
jno
movsl
sbbb
cmp
xor
rclb
test
pop
cmpsb
hlt
test
imul
hlt
incb
add
mov
sti
push
pop
dec
rolb
mov
je
pop
dec
imul
xchg
ljmp
adc
popa
push
idivl
je
arpl
adc
cltd
decb
out
inc
mov
bound
jle
dec
cmp
dec
bound
imul
sub
adc
mov
lock
dec
shll
or
lret
xchg
push
imul
or
in
dec
mov
lret
lods
jge
jge
adcb
stc
push
xor
in
pushf
push
lahf
sub
or
dec
and
int
mov
xchg
fwait
sbbb
push
dec
jp
pushf
lods
add
push
sub
mov
fsubrl
jb
mov
iret
lods
adc
lods
cmp
add
lret
and
push
jne
mov
cmp
sbb
aad
and
ss
dec
fidivs
xchg
scas
imul
bound
adc
xor
add
loopne
test
sub
pop
test
or
mov
outsb
inc
push
dec
ret
dec
jl
push
sbb
cltd
mov
push
xlat
mov
cmp
mov
pop
lret
sub
aas
scas
sub
sub
pop
mov
mov
jbe
jb
cld
push
xchg
sbb
int3
pushf
mov
out
in
pop
inc
les
aad
in
ss
shll
lahf
dec
out
or
cmpsl
and
not
out
js
mov
andb
ja
loopne
xchg
cld
mov
adc
iret
add
daa
lods
or
mov
in
mov
dec
inc
push
push
xor
pop
imul
fildl
faddp
cmp
xchg
aaa
jmp
fstpl
sysenter
repnz
loope
js
cmp
dec
push
int
and
test
mov
inc
cld
enter
jns
fwait
xor
data16
popa
lahf
mov
outsl
xchg
scas
adc
mov
ljmp
cs
and
pop
test
xchg
aad
loop
xchg
add
cwtl
pop
pop
ds
je
mov
andl
das
std
mov
xchg
les
xlat
push
shrb
out
push
enter
in
in
dec
xor
sahf
arpl
popa
cmc
xchg
insb
push
loope
rclb
fldcw
inc
outsb
pop
inc
cmp
dec
sti
mov
lcall
mov
lea
clc
in
jp
jno
xor
cmp
add
xor
cmpsl
test
jmp
repz
cmc
inc
mov
add
pusha
jle
or
lret
sub
jl
repz
dec
adc
mov
xor
jns
sub
sub
add
imul
cmp
fwait
mul
cmc
add
bound
mov
jb
mov
adc
lods
adc
mov
in
adc
xor
mov
sub
push
push
add
xor
int3
mov
add
jg
into
shl
jnp
sub
daa
mov
std
lret
mov
push
cmp
xor
iret
ljmp
inc
stos
out
fisttpl
xchg
in
rcll
mov
or
addr16
rclb
pause
inc
or
mov
nop
sahf
popa
icebp
loopne
cmp
sub
subl
cwtl
dec
pop
cmp
and
ret
in
rorw
mov
sub
lods
push
and
lods
and
xchg
das
rcl
mov
rcrb
xchg
loop
clc
pop
sti
mov
mov
push
std
pushl
insl
xchg
add
inc
cld
mov
sub
test
or
lcall
mov
push
cmp
pop
push
inc
xchg
daa
popa
dec
lds
jns
pop
lret
mov
leave
call
fldcw
imull
or
xchg
cwtl
pop
mov
sub
insl
imul
imul
lret
aad
mov
sub
push
xchg
sub
sar
pushl
cmp
mov
dec
lret
fs
movsl
sub
cmpsl
ret
cmp
imul
inc
fbstp
and
data16
pop
pop
out
push
stos
dec
jp
fdivrl
ljmp
and
loope
pop
call
rclb
imull
mov
push
pop
cli
outsb
and
sbb
int3
aaa
mov
insb
mov
jbe
xor
mov
sarb
and
fisubl
loop
dec
lods
sub
push
or
jne
shlb
xchg
cmp
xchg
jo
lea
mov
test
gs
in
pop
jne
out
jb
mov
je
inc
cs
xchg
int
call
add
adc
push
and
and
and
mov
lods
mov
les
js
xor
out
mov
out
or
test
cmp
lret
sub
sbb
insl
sub
mov
cmp
mov
pop
hlt
test
bound
movsb
das
fldenv
stc
push
jbe
xchg
test
inc
leave
add
mov
jg
lahf
pusha
popf
xchg
or
cmp
sub
into
cwtl
flds
scas
cmp
cmp
dec
sub
and
lcall
sbb
mov
gs
je
gs
pop
inc
das
sub
adc
cli
mov
aaa
push
mov
inc
and
in
cmp
push
sbb
mov
lahf
cmp
push
jmp
lret
pusha
loop
call
outsb
mov
arpl
mov
cmp
stos
gs
negb
jo
push
or
sbb
or
pop
loop
pop
jg
iret
add
pop
jne
fs
mov
cld
loopne
and
fs
daa
outsb
std
fistps
sbb
mov
fmull
repnz
das
je
mov
in
xchg
lcall
icebp
mov
hlt
inc
das
sbb
xlat
or
add
rclb
fiaddl
lret
stos
jp
sbb
aad
pop
xchg
pop
mov
xlat
ljmp
aaa
and
lods
mov
sbb
int3
cmp
add
xchg
in
aad
lret
xor
push
pop
and
mov
push
add
bound
push
mov
sarl
scas
sub
add
jo
add
xor
roll
push
dec
pop
shrb
push
xchg
sub
or
jmp
jnp
inc
pop
pop
cmp
pusha
pop
and
cli
xchg
dec
leave
jns
shlb
mul
and
fisubs
dec
test
outsl
into
mov
add
sbb
enter
pop
sub
repnz
pop
mov
lret
xchg
sbb
in
cmp
lret
clc
inc
lret
std
mov
sub
ret
ss
add
fsubrs
in
or
loop
and
and
mov
cmp
cs
lock
inc
jae
pop
cmp
je
cmovl
mov
xor
es
cmpsl
pusha
cmp
jle
cmpb
add
aaa
rorb
fistpl
sub
and
cli
xchg
inc
sbb
out
out
subl
pop
jne
jle
add
lahf
mov
sbb
lds
popa
jmp
cmc
xchg
call
lds
std
sub
xchg
push
mov
fcoms
xorl
test
mov
jb
or
jo
nop
shll
push
out
test
sub
jl
xor
inc
test
push
fs
outsb
into
ds
outsb
sahf
stc
mov
jecxz
dec
inc
push
scas
jecxz
hlt
lahf
mov
inc
test
data16
mov
cmp
sahf
jne
movsb
push
push
dec
push
cmp
xor
xchg
sub
dec
push
mov
jnp
enter
pop
pop
jecxz
mov
mov
addr16
repnz
outsb
dec
ret
xchg
and
ja
push
dec
xor
inc
adc
inc
out
push
das
inc
sbb
xchg
or
rcrl
ljmp
mov
clc
mov
and
dec
adc
mov
nop
cmpsb
jp
push
push
mov
test
inc
cmp
out
mov
xchg
sbb
rorl
test
inc
pop
sbbb
leave
lahf
sbb
cmp
and
das
mov
mov
lcall
cmp
and
sbb
sub
lret
mov
mov
sarl
clc
enter
sub
inc
dec
outsb
mov
mov
test
push
gs
cmp
popl
push
mov
in
jns
mov
adc
data16
das
loope
xor
lods
add
xchg
pop
and
fcoms
dec
and
lret
sarl
add
loope
pop
mov
mov
mov
sbb
push
or
subb
mov
repz
jl
bound
and
or
xor
int
xor
in
in
mov
sub
dec
out
mov
push
mov
stos
outsl
cltd
adc
inc
mov
push
inc
pushf
xchg
jle
push
je
cs
dec
das
mov
and
jge
cmp
sub
mov
adc
mov
push
clc
ret
mov
out
out
loopne
sub
test
dec
aam
adc
cmp
inc
ja
add
jg
orb
mov
mov
inc
in
mov
cli
push
push
or
repz
cmp
ficoml
pop
adc
cmp
pop
daa
out
sbb
jp
mov
xchg
adc
cltd
push
in
inc
fsubl
dec
imul
scas
jbe
sbb
ja
push
cltd
cwtl
sub
jp
addb
mov
insb
add
pop
push
imul
mov
lods
out
mov
mov
push
out
gs
fdivrl
rolb
out
in
push
popa
sbb
cmp
push
cmp
fsubrp
xchg
pop
and
add
sub
insl
cltd
adc
movsl
loop
sub
adc
cmp
sbbl
out
jg
mov
fdivs
cmp
adc
cmp
rorl
insl
inc
inc
stos
or
mov
cli
dec
or
or
fsubr
fsubrs
test
cwtl
mov
jg
mov
and
in
aaa
jmp
fwait
mov
xchg
jno
sbb
xchg
dec
push
adc
cli
dec
push
xor
and
cmp
sub
mov
fs
repz
push
dec
es
orb
leave
pop
lds
gs
add
push
rorl
dec
lret
nop
sub
mov
mov
push
push
or
jg
mov
fwait
into
arpl
adc
insl
sbb
cmpsb
jne
xchg
icebp
jbe
xor
jns
mov
xchg
shll
mov
inc
xor
xchg
inc
push
mov
add
xchg
jnp
mov
xchg
add
sub
xchg
rorl
out
fsubs
xchg
xchg
xchg
sbb
jg
mov
add
push
popf
xchg
adc
jne
pop
and
fcoms
push
mov
dec
mov
pop
mov
cmpsb
push
push
frndint
daa
pop
aad
xchg
adc
gs
test
xorl
hlt
pop
xchg
and
out
adc
inc
pusha
sbb
push
ds
cmp
cmp
lods
psubd
fsubrp
and
pop
adc
int
in
mov
popf
dec
enter
fldl2e
mov
add
inc
in
insb
and
dec
or
stc
das
jmp
xchg
addr16
adc
mov
repnz
xchg
mov
mov
inc
es
inc
inc
sub
mov
inc
arpl
arpl
addr16
adc
out
sub
mov
pop
lock
mov
mov
dec
sbb
add
adc
dec
daa
mov
test
arpl
cld
jp
loopne
add
mov
bound
or
xchg
test
inc
in
stc
into
mov
int3
ret
popa
adc
scas
aam
adc
lods
mov
sbb
movsl
pop
add
fdivs
repz
push
incl
mov
dec
pop
stc
inc
jb
daa
cmp
jmp
stos
es
call
in
cwtl
incb
pop
jne
mov
movlps
add
addr16
mov
push
ja
pushf
add
adc
mov
or
cmpsb
cmp
jl
jp
sbb
push
fwait
dec
repz
xor
gs
cwtl
inc
push
xor
dec
movsl
ljmp
mov
xchg
pop
mov
cmp
cmpsb
pop
dec
fnstcw
mov
mov
lods
outsl
sbb
add
ss
aam
outsl
jg
or
and
pop
cmpsl
pop
repnz
adc
negl
xor
dec
lahf
fs
sbb
hlt
push
mov
jnp
push
movsb
mov
cmp
sub
add
mov
mov
lret
loop
dec
fs
lahf
jmp
sub
add
and
rolb
and
fldcw
loopne
fdiv
fwait
push
mov
jne
outsb
fnstenv
inc
jno
adc
rcll
and
mov
jle
xorb
sbb
jmp
mov
rcrl
call
dec
mov
je
aad
arpl
das
sub
pop
or
shr
cwtl
or
loopne
fnstenv
movsb
incl
aas
cmpsb
sbb
shll
daa
and
cmpsl
fsubrs
movsl
cmp
inc
sbb
js
mov
into
and
sbb
pushf
popa
ss
mov
ds
mov
ljmp
push
pop
enter
fst
jl
repnz
mov
inc
faddl
cmp
out
in
dec
dec
shrl
out
lcall
xchg
dec
out
fs
adc
outsb
mov
or
ret
mov
int
fsubl
imul
stos
roll
mov
fisubl
jg
stc
fadd
ljmp
data16
call
adc
mov
push
dec
xor
call
jl
cmp
xor
xor
movsl
inc
xchg
dec
nop
and
lods
push
pushf
movsl
mov
rcll
inc
mov
cli
insl
pop
pop
pop
sarb
sbb
adc
or
sti
pop
fwait
jmp
pop
pop
daa
mov
adc
cmp
cmpsl
dec
hlt
sarl
push
jl
and
cmp
fists
jp
lds
stos
ficoml
mov
scas
adc
aam
roll
or
cli
and
ds
inc
jle
xchg
or
popf
mov
aad
fcmovbe
pop
mov
inc
jp
adc
cmp
jge
notb
out
scas
insl
decb
xor
mov
xchg
fs
and
stos
cmp
push
mov
add
add
jbe
dec
fcompl
insb
xor
mov
mov
sbb
mov
je
in
mov
push
mov
add
cmp
in
test
loopne
mov
popa
and
push
popa
mov
and
fdivl
repz
mov
xor
cli
mov
or
loope
aas
inc
and
ds
cs
aaa
mov
push
movsl
push
xchg
adc
imul
into
pop
lods
xor
scas
mov
or
int3
mov
fsub
iret
sub
xchg
rorl
mov
pop
iret
pop
mov
fwait
lret
shll
push
loope
mov
ficoml
pop
sbb
movsb
inc
sub
pop
push
mov
pop
jmp
mov
jne
cs
inc
test
xchg
sub
pop
jns
fnstsw
cs
push
mov
or
add
cli
push
fnsave
pushf
mov
push
sub
adc
ja
pause
test
jns
and
xor
fnsave
fdiv
je,pn
dec
nop
jb
int3
xchg
jmp
inc
mov
jnp
or
stc
sub
rcrl
addr16
mov
ljmp
movsb
in
lret
mov
fwait
sbb
sub
push
cmp
cmpsl
mov
andl
sahf
fs
add
adc
test
cmp
aad
or
cli
adc
scas
add
stc
sbb
push
xchg
pop
outsb
sub
roll
or
test
sbb
in
inc
xorb
adc
outsl
xchg
mov
add
mov
mov
jl
mov
xchg
dec
ret
dec
call
mov
into
iret
dec
sbb
test
fdivrs
push
sub
aad
dec
stc
mov
jnp
cld
jmp
enter
adc
inc
add
sbb
bound
lods
rorl
das
xchg
out
sbb
bound
mov
lds
in
sti
sti
pop
mov
mov
iret
mov
lods
pop
in
mov
shl
repz
loop
inc
jo
orb
mov
push
orl
sub
cwtl
rorl
addr16
cld
fst
dec
xchg
sbb
dec
imulb
mov
cwtl
andl
xchg
inc
pop
cmp
outsl
movsl
xor
push
mov
clc
cmp
fidivs
imulb
and
leave
push
divb
iret
push
add
xor
mov
push
mov
jl
xchg
dec
ss
aas
testb
ret
scas
xchg
xlat
test
mov
sbb
inc
and
push
outsb
jne
mov
sbb
sub
sub
ret
xchg
cmp
jnp
insl
add
adc
pop
mov
pop
cmp
and
and
call
push
pusha
aad
repz
xor
mov
jl
cmpb
in
sub
mov
xor
insb
cmc
or
sbb
stos
mov
fisubs
mov
jl
and
xlat
sbb
add
and
movsb
or
xchg
mov
inc
or
int3
fstl
pusha
cltd
mov
clc
fimull
sbb
repnz
rorb
fs
loope
adc
mov
push
pop
ret
cmp
sarl
test
ljmp
push
jno
out
cmp
in
sbb
adc
cmc
mov
jns
xorl
xchg
jmp
std
movsb
jb
mov
into
leave
sbb
call
lods
jge
jmp
call
arpl
xor
cmc
xchg
popa
cmpsl
test
out
cli
add
imul
dec
hlt
xadd
jbe
xchg
xchg
imulb
test
jne
adc
or
ljmp
xor
mov
mov
or
pushf
test
cmp
jo
test
xor
enter
jns
or
xchg
mov
out
sbb
adc
dec
rorb
dec
adc
add
dec
stc
adcb
lret
hlt
stc
scas
mov
into
xchg
lods
xor
push
inc
in
jl
cltd
hlt
roll
xlat
sbb
dec
pop
addr16
insl
dec
out
adcl
lret
insb
mov
dec
mov
cmp
xchg
xchg
in
mov
jl
dec
ja
cmp
rcll
inc
xor
push
pop
imul
test
imul
xchg
or
cmp
add
jp
xor
ja
and
rcl
cld
xor
lock
mov
push
aam
test
sub
mov
lods
out
stos
lcall
iret
imul
mov
mov
popaw
sub
fwait
sbbb
pop
pusha
push
rcrb
lods
int
loope
and
inc
scas
push
insl
xor
iret
xchg
and
shll
or
dec
cmp
je
or
test
adc
stos
in
lods
or
xor
pop
shl
jo
addb
or
fldl
sub
test
sbb
dec
ret
insb
outsl
mull
int
cmp
scas
adc
dec
lcall
pop
pop
add
int
int
scas
mov
cmp
or
sti
mov
or
push
andb
adc
fwait
sbb
push
jle
or
dec
jecxz
jns
sti
dec
lret
cld
test
pop
into
iret
stc
stos
out
es
out
push
test
insl
adc
js
or
nop
cwtl
jl
mov
ficomps
mov
cmc
rolb
mov
les
fisttpll
shl
into
xchg
jo
sbb
stc
and
inc
stos
pop
insb
xchg
mov
inc
movsl
jo
mov
cmpsb
inc
fidivrl
push
fisttps
and
out
sbbl
mov
and
popa
and
jle
xchg
mov
outsl
aad
sub
push
jmp
sbb
popa
imul
pop
pop
push
insl
fidivs
mov
js
push
int3
dec
jno
mov
fldln2
mov
call
in
repnz
iret
sbb
push
outsl
rol
pop
mov
mov
lcall
or
adc
mov
push
cld
jle
cli
fadds
int3
jg
mov
test
mov
push
repz
adc
ss
and
outsl
xchg
fs
cld
xor
ljmp
ror
insl
pop
cmp
pop
shl
gs
xchg
inc
cmpsl
mov
mov
sub
push
mov
daa
mov
dec
sbb
int
xchg
inc
and
shlb
mov
std
pop
inc
inc
popa
test
jne
xchg
mov
das
push
fmull
lods
lods
adc
xchg
enter
and
fmuls
or
in
bound
les
lret
out
sbb
in
es
add
push
loop
mov
push
ja
mov
jge
cmp
mov
cmp
je
ret
jl
repz
cmp
out
fbstp
xor
mov
or
repnz
xchg
push
push
test
dec
shl
mov
in
ret
insb
outsl
inc
dec
lahf
aaa
xchg
mov
clc
iret
cmp
ja
ret
lods
ret
ret
dec
rorl
ret
mov
test
inc
shl
adc
ljmp
adc
ret
mov
dec
mov
fwait
pop
addr16
pop
std
cli
sbb
or
mov
push
xor
xchg
mull
pusha
scas
inc
and
sub
jns
push
push
fmull
mov
lock
testb
mov
mov
cmp
int3
stos
pop
ljmp
push
fdivl
ss
add
sbbb
xlat
sub
xor
inc
push
jnp
pop
sub
outsb
les
push
das
ret
repz
outsb
mov
fisubrl
mov
movsb
iret
fbld
hlt
mov
jecxz
xor
pop
lock
jecxz
pop
lcall
jne
repz
repz
inc
ror
iret
leave
mov
out
js
xchg
inc
inc
iret
std
loope
cmp
test
and
aad
push
jbe
gs
aad
mov
sub
popa
lock
ret
stos
jg
cmp
xor
insb
push
dec
inc
mov
int
jp
sub
jne
and
adc
inc
in
out
sar
lret
xlat
mov
cs
add
js
idiv
insb
push
jmp
fwait
rorb
fwait
mov
stos
add
jbe
sbb
sub
rclb
push
ja
and
fsubrs
addl
outsl
xor
lcall
pushf
inc
cmp
dec
cmp
mov
in
sub
cwtl
cwtl
xlat
leave
pop
xchg
sub
in
mov
ss
xchg
loope
xorl
movsl
and
icebp
lock
fists
in
repnz
inc
inc
fcmove
cmp
scas
sub
shlb
test
idivl
mov
cwtl
cmpsb
subb
cmpb
mov
xor
add
test
repnz
add
push
xor
das
or
jg
shl
xchg
jp
out
push
sub
out
sbb
icebp
loopne
aam
xorl
faddl
rclb
xchg
push
addr16
test
bound
cmp
pop
movsb
ja
sub
imul
inc
or
cmp
jb
cs
inc
pop
in
fsubl
xchg
daa
lret
fnstcw
scas
adc
jl
push
adc
sbb
out
xor
add
cmp
mov
movsl
jmp
xor
scas
and
pop
mov
mov
adc
mov
cld
xchg
jge
mov
mov
bound
push
mov
imul
shlb
fs
push
das
jne
and
cmc
jl
adc
daa
movsb
jmp
icebp
into
push
fdivl
adc
data16
inc
push
adc
iret
lods
push
loope
mov
lahf
arpl
ret
fcoms
aas
sbb
cmp
and
sti
cmc
mov
mov
bound
imul
popf
push
test
scas
cmp
and
sbb
adc
or
cmpsl
jecxz
pushf
inc
jne
std
lret
mov
je
out
call
sub
in
sub
or
lock
adc
fisttpl
call
pop
adc
das
daa
or
or
shl
xlat
add
adc
and
cmpsb
mov
rorb
pop
sbb
xchg
pop
loop,pn
mov
dec
mov
push
ret
test
jb
jae
pop
push
inc
int3
fildll
in
sbb
push
and
lret
ds
pop
mull
and
in
insb
mov
popf
lods
mov
jb
adc
xchg
testl
stc
sub
jnp
mov
mov
push
inc
sub
or
popf
mov
cmp
inc
stos
ret
xchg
add
jge
xorb
outsb
out
neg
pop
mov
js
ds
jbe
cmp
mov
sub
out
mov
popa
pop
into
xchg
mov
inc
jnp
push
jno
daa
shll
sub
fldl
pop
ret
sub
cmp
push
out
out
adc
test
pop
pushf
cmp
sar
push
mov
pushf
les
mov
ffree
icebp
jns
shlb
cmp
std
or
shlb
lret
inc
push
les
sahf
inc
push
inc
in
pop
jns
mov
movsb
mov
repnz
adc
push
jle
cmp
shll
dec
jne
pushaw
enter
div
add
call
xchg
sbb
add
les
fmull
ficompl
popf
lock
mov
push
leave
push
fiaddl
pop
cmp
cmp
aad
fdivrl
and
dec
fs
sbb
shll
adc
adc
adc
fidivrs
aas
inc
fstpl
sbb
mov
push
es
je
push
jbe
sti
pop
std
adc
xor
jo
cwtl
or
movsb
mov
xor
pop
mov
xor
mov
out
mov
ret
cmp
mov
or
jbe
adc
shl
mov
test
pop
ljmp
lret
pop
jne
and
insb
dec
or
loopne
and
inc
dec
rorl
inc
mov
icebp
sbb
test
jb
add
fadd
or
in
inc
imul
push
or
sti
outsb
sbb
movsb
out
mov
shl
push
lahf
jle
es
mov
inc
pusha
pop
lahf
push
loope
out
rorb
mov
jne
mov
shr
ja
jp
cmp
in
lret
rol
or
mov
add
mov
mov
das
ja
xchg
and
jecxz
xlat
jmp
divl
cmp
dec
in
sub
pop
mov
pop
jo
ret
adc
xchg
or
sarb
loop
test
cltd
xchg
inc
xor
iret
or
pusha
sbb
sub
pop
xor
jle
ja
or
inc
xchg
adc
cmpsb
cmp
push
adc
clc
nop
ljmp
mov
xor
pop
jg
cmpsb
push
pop
xor
dec
jl
mov
jle
push
rcrb
jns
push
addr16
add
stc
mov
xor
lcall
verw
mov
mov
in
and
out
push
mov
or
movsl
sub
mov
rcll
out
fisttpl
ficoml
adc
insb
xchg
and
imul
nop
scas
jnp
mov
imul
sub
mov
xor
add
inc
or
das
pop
popf
lret
imul
or
mov
cli
insl
xchg
andb
jl
jb
into
lods
and
adc
pop
sahf
add
data16
lret
in
xorb
arpl
int
rcr
test
xorb
popa
fsubrl
mov
leave
mov
mov
lahf
mov
mov
jecxz
ss
mov
daa
hlt
cli
ror
int3
das
scas
mov
fisubl
rcrl
jge
cmp
pop
push
jp
lock
adc
sbb
xchg
out
pop
fstl
sbb
push
rorl
add
jmp
flds
mov
xchg
call
sarb
xchg
xchg
fwait
and
xor
xor
sub
lret
adc
stos
fnstcw
cmpsl
push
mov
bound
repnz
shl
push
mov
lds
out
aaa
adc
arpl
or
push
aas
aas
sbb
cmp
xor
js
adc
cmpl
adcb
leave
neg
hlt
jne
xchg
cmpsb
insl
pop
mov
mov
sub
lret
mov
jne
mov
xorb
pop
ss
cmc
inc
fs
xor
mov
cltd
sub
push
mov
push
or
pop
fisubrs
cmp
cli
lods
xchg
rcr
adc
test
clc
adc
or
and
cmc
adc
in
inc
inc
pop
stos
mov
int
jge
pop
ret
dec
cmp
cmp
push
mov
popf
loope
or
cmp
imul
dec
repnz
sbb
push
jnp
cmc
mov
cltd
call
scas
das
movsb
fsubr
lods
jae
sbb
test
sbb
jne
fcomip
mov
mov
scas
push
scas
ljmp
pop
shlb
cltd
fldt
pop
and
xchg
fisubrs
cmpsl
ja
mov
or
je
lahf
cs
call
lods
loop
adc
sub
shll
sahf
sub
inc
rcrb
xchg
out
repnz
cmp
inc
in
in
cmp
xchg
push
push
inc
addr16
adc
fisttps
ss
sbbb
insl
les
jns
xor
sar
and
mov
jge
rorl
int3
jle
loopne
movsb
std
out
add
and
and
pop
sbb
mov
int3
addr16
orb
arpl
jbe
int3
ret
shrb
and
mov
ret
inc
imull
mov
cmp
jmp
int
outsb
daa
flds
nop
lods
gs
pop
cmpl
addb
imul
mov
add
popf
in
ljmp
push
jecxz
jp
std
imul
repz
es
add
add
mov
pushf
jne
fmuls
xchg
insb
jge
imul
ret
inc
sub
pop
mov
cmc
rorb
gs
addr16
or
out
jne
sti
fdiv
rclb
push
jmp
pop
jo
fdivp
cmp
xorb
ret
sbb
shl
or
mov
sbb
mov
inc
push
sti
pop
pop
xor
mov
xor
mov
cmp
js
push
sub
cmp
in
jae
or
fistl
insb
stos
in
and
outsb
mov
mov
xchg
pop
or
mov
scas
jns
cmp
mov
xchg
xor
je
dec
cltd
adc
daa
cwtl
lods
xor
fisubs
lret
cmp
out
out
iret
clc
jae
insl
xor
add
mov
or
sbb
xchg
sub
lret
mov
mov
jne
push
dec
icebp
rorl
or
inc
les
cmp
xchg
mov
xchg
insl
ja
leave
imul
pusha
in
pop
in
sti
scas
pop
add
mov
xor
enter
add
push
lds
adc
adcb
push
lret
rcrl
out
aaa
aaa
std
cmc
shlb
add
repnz
mov
sbb
jp
imul
sbb
mov
and
cmp
adc
rorl
cmpb
sub
jmp
mov
rol
out
sub
std
call
test
dec
pusha
fists
push
ret
inc
fidivs
test
xor
test
imul
rclb
jecxz
es
or
cs
or
movsb
jo
jnp
cmp
popf
sti
mov
ss
or
ss
je
mov
stos
loopne
enter
push
iret
push
jo
xor
stc
scas
xor
stos
pop
int3
push
scas
sub
mov
lret
fisubl
xor
push
cmp
xchg
add
adc
push
xor
popa
jge
ljmp
cltd
cmp
outsl
xchg
negl
push
fdivrl
mov
push
cmp
lcall
mov
jle
int
push
cmpb
mov
pop
pop
lods
out
push
scas
rcll
cmp
imul
lods
aas
xor
sbb
adc
pop
cld
inc
lods
test
mov
mov
xor
inc
sub
nop
lods
pop
lret
data16
aad
adc
daa
ret
in
lret
mov
add
mov
jg
gs
jge
in
mov
cmp
add
jp
xor
loop
fisubrs
dec
in
sti
xor
iret
out
jbe
ret
xor
mov
mov
notl
mov
adc
and
je
enter
cmp
or
or
sbb
jp
pop
lahf
adc
pop
mov
fdivs
out
mov
sbb
jle
pop
pushf
fidivrl
clc
sti
pop
incl
sahf
fld
pop
icebp
ret
lock
shld
loope
sub
pusha
ret
rcrb
pop
xor
pop
mov
push
stc
stc
pop
xchg
adc
lret
inc
dec
and
or
jl
fidivs
jo
pop
mov
jns
imul
lcall
cmp
sbb
mov
xor
pushl
fmul
xlat
loopne
loop
lcall
and
inc
jo
pop
sahf
mov
mov
clc
cmp
cmp
sahf
push
stc
movaps
notl
jae
imulb
fistpll
ret
stos
and
dec
inc
int
xlat
or
loope
rol
iret
in
inc
daa
pop
pop
or
cli
adc
inc
scas
test
xchg
xor
repz
cmp
dec
dec
dec
sub
push
and
fdivl
stos
push
xor
mov
mov
adc
mov
jae
imul
int3
mov
push
addr16
sub
mov
repz
int3
daa
cld
les
cs
push
lods
add
pop
adc
notl
mov
bound
sbb
adc
xor
and
adc
hlt
adc
push
fs
shrb
mov
jg
bound
rorb
cmc
das
push
cmpsl
jae
sbb
sti
xchg
sub
leave
outsb
jne
icebp
test
dec
mov
mov
add
or
or
adc
nop
adc
dec
js
dec
dec
cmp
push
or
mov
lods
pusha
sub
pop
or
mov
dec
sbb
jle
add
ficomps
or
fcoml
and
mov
stos
sbb
imul
sbb
mov
mov
aam
push
push
jl
mov
xorb
cmc
push
pusha
jle
fs
xchg
mov
lcall
fcoms
xchg
mov
pop
lret
adc
orb
pop
push
inc
insb
leave
out
ror
repz
loopne
jns
add
ja
test
ficomps
fdivs
addr16
pop
jmp
aaa
jecxz
or
and
sahf
cmp
add
subb
popa
jmp
ret
inc
ret
ljmp
jb
xchg
xchg
dec
pop
jmp
mov
int
mov
dec
jmp
mov
xchg
pop
mov
insb
sbb
push
out
cmp
mov
fsubs
or
xor
imul
push
decb
stos
rolb
cs
fwait
cmp
movsl
cmp
pop
sub
arpl
xchg
insl
sub
shll
or
fistps
dec
pusha
nop
pop
jbe
aaa
ja
cmp
jbe
cli
in
movsb
std
pop
push
adc
mov
or
cwtl
cmp
push
pop
rcll
scas
lahf
pusha
push
mov
and
lods
mov
addr16
push
loope
lods
add
mov
in
enter
add
dec
xchg
mov
xchg
in
mull
jb
or
aaa
lret
and
lea
jnp
les
ja
in
test
mov
adc
in
mov
mov
adc
fiaddl
push
lcall
addr16
fidivrl
insb
adc
dec
jb
addb
cmc
loopne
sahf
cli
pop
aad
inc
shlb
mov
or
fs
add
insb
push
movsb
push
call
cmp
pop
fnstsw
jb
mov
jge
xlat
mov
test
xchg
lcall
data16
jo
dec
sub
pushf
jmp
mov
pop
dec
gs
mov
mov
cmp
imulw
shlb
and
aaa
cmp
loope
icebp
stos
dec
xchg
jae
aam
mov
cltd
stc
jb
aas
xor
fiadds
les
cmp
out
fadd
fisttps
add
jge
adc
mov
lock
dec
adc
xchg
cld
mov
sub
imul
dec
ds
maxps
mov
leave
dec
cmpsb
mov
xchg
pop
mov
push
in
push
insl
xor
mov
rclb
movswl
jle
loopne
mulb
sbb
imulb
push
shrb
lret
dec
insl
clc
lock
cmp
push
ror
sub
cmpsl
fs
xor
xchg
clc
mov
and
fstps
outsb
sub
cmp
xor
dec
std
or
push
punpckhbw
lcall
dec
pop
ljmp
adc
enter
and
movl
sub
sbb
jne
lret
mov
repz
mov
ss
sahf
in
je
mov
add
js
arpl
scas
add
mov
push
mov
es
dec
ffree
adc
negb
out
mov
sti
jg
xchg
push
fwait
out
fiaddl
dec
pop
mov
repnz
xchg
fs
sarb
js
sbb
addr16
bound
sti
mov
leave
mov
cmp
jo
out
jb
out
mov
aad
scas
dec
jg
test
adc
stos
jl
out
in
clc
adc
mov
leave
and
outsb
mov
or
pop
lds
fnsave
xor
loop
icebp
aad
push
or
cmp
cmpsb
jns
inc
sub
dec
cwtl
adc
not
mov
pop
cmp
out
sarb
xor
push
adc
xchg
push
sbb
out
mov
insl
pop
xchg
or
inc
scas
or
rorb
pop
add
xor
sbb
js
add
loopne
sub
scas
or
cmp
sub
or
pop
das
pushf
or
sub
jecxz
insb
notb
lret
xchg
push
and
in
mov
inc
dec
sbb
mov
pop
pop
mov
loop
push
aaa
enter
adc
faddl
popa
dec
int
xchg
push
int3
or
test
sar
xlat
and
and
mov
aad
xchg
xchg
mov
cmc
mov
dec
data16
dec
dec
cli
cmp
mov
inc
mov
or
movsb
cmc
sub
push
shrd
sub
dec
mov
nop
mov
lds
popf
adc
test
iret
mov
xor
cmp
or
les
xchg
sbb
loopne
movsb
mov
data16
popf
mov
push
dec
nop
std
xchg
push
sub
mov
int3
scas
jle
sahf
rcrl
je
push
dec
inc
lret
adc
outsl
cmp
das
movq
xor
or
push
add
cs
loope
pop
jecxz
xchg
sbb
xchg
nop
scas
aam
sub
addl
mov
jg
ret
adc
jp
pop
xlat
iret
outsl
inc
sub
test
js
repz
stos
mov
cli
sub
mov
leave
bnd
pop
imull
in
pushf
pop
mov
cmpsb
addr16
sahf
push
call
push
or
icebp
shlb
dec
xchg
mov
cmpsb
lahf
rclb
sub
in
sti
cs
push
idiv
imul
pop
lea
xchg
push
and
and
inc
inc
sbb
int
jl
pop
push
push
aad
scas
ret
push
fdivrl
cmp
popf
faddl
ja
xor
inc
jecxz
push
push
lret
push
pusha
int3
cwtl
into
jne
ljmp
loop
xchg
ss
inc
mov
xchg
mov
out
test
add
test
data16
pop
aad
sbb
adc
xor
mov
adc
clc
in
or
add
mov
cmp
or
pop
mov
mov
mov
jne
add
popf
jno
sub
cmpsl
pop
inc
fxch
mov
mov
cwtl
imul
lret
out
data16
mov
adc
push
pushf
call
fisttps
es
sti
test
jb
xor
fstps
fistpl
adc
cli
das
int
mov
mov
dec
test
push
sub
in
iret
mov
mov
inc
jmp
scas
pop
in
test
sub
inc
cmp
jne
testb
push
ret
pusha
mov
add
gs
inc
sbb
xor
sub
lret
cld
insl
pushf
into
ljmp
or
xor
aaa
add
cmp
or
ds
xchg
mov
out
fbld
lods
call
xchg
cmpsb
push
push
jbe
cld
pop
inc
dec
sti
adc
add
mov
test
mov
stos
int3
adc
xchg
out
pop
sub
sbb
xor
jge
inc
mov
divb
test
and
mov
inc
rep
jnp
call
xlat
loope
xchg
aas
sti
cmp
stos
in
cmpsb
repnz
in
setle
mov
loop
xor
mov
jbe
jns
sbb
je
and
push
jno
push
adc
pusha
or
inc
mov
cmp
clc
xor
sub
mov
xor
ljmp
sbb
push
xchg
mov
clc
gs
test
xor
leave
pop
out
jno
or
pop
push
mov
fists
add
sbb
cld
pop
outsb
mulb
enter
xchg
fisubrl
xor
ret
js
mov
or
shr
cmp
cmp
xchg
xchg
dec
jmp
mov
or
cli
add
and
popa
xor
popa
adc
jnp
je
jns
pop
mov
mov
cli
cmc
fstp
add
outsl
insb
push
loopne
push
in
decl
sub
push
mov
sbb
add
sbb
xchg
sub
fs
cmp
xor
sub
lcall
test
and
and
loopne
xchg
mov
out
push
add
push
cmp
testl
mov
loope
mov
enter
xchg
stos
and
xor
cmovs
stos
pushf
jo
testl
in
js
nop
sbb
adc
mov
inc
jo
fucomi
inc
insl
js
mov
out
ja
les
xchg
fs
push
and
mov
ja
push
lret
into
ja
scas
add
sub
int
mov
xchg
inc
adc
aas
push
enter
jmp
fcoms
cmpsl
xchg
adc
or
mov
pop
xchg
int
fcomps
cmpsb
into
mov
popf
push
imul
lock
adc
pushf
std
or
loop
xchg
std
mov
sub
subl
insl
out
sub
or
jge
sbb
mov
pop
shll
pushf
adc
inc
mov
xchg
jmp
mov
xchg
xchg
orl
adc
xor
adc
out
stos
jne
es
or
test
mov
or
mov
into
addr16
stos
lret
in
gs
je
cmp
or
lock
cltd
hlt
imul
push
ret
cmpsb
xor
push
test
fldl
mov
mov
out
fidivrs
cmp
xor
mov
pop
or
jge
mov
popf
ljmp
aam
jl
in
ret
cltd
gs
aaa
clc
mov
addr16
jbe
xor
xlat
aaa
mov
sahf
push
push
rol
dec
ret
lods
jge
or
pushl
mov
lods
fldt
push
lea
pusha
test
test
je
sbb
xlat
pop
enter
into
enter
test
and
mov
pop
cld
mov
in
jnp
leave
sub
shll
mov
add
inc
outsb
add
add
pop
call
xchg
push
dec
das
xor
pusha
mov
dec
add
dec
in
es
jle
sbb
jecxz
sub
sub
jle
fld
daa
cld
mov
push
pop
shll
call
es
cmp
imul
sbb
inc
into
orl
mov
mov
incl
lea
adc
scas
xor
pop
jecxz
lret
cltd
repz
test
push
out
push
loope
loope
sarl
in
bnd
fucomp
and
xor
sub
scas
push
inc
ds
leave
add
adc
mov
dec
sbb
push
repz
push
mov
ljmp
and
cmpsl
fdivrl
mov
xor
hlt
pop
data16
jecxz,pn
mov
daa
cmp
orl
mov
mov
xchg
aaa
cmp
pop
sarb
hlt
pop
sub
and
in
cs
mov
adc
ret
and
push
ljmp
repz
add
adc
mov
pop
sub
ljmp
inc
jno
test
lahf
inc
mov
sub
nop
iret
cli
cwtl
pop
js
out
pop
jl
fxam
and
inc
popf
loop
sbb
cmp
dec
arpl
insl
int3
repz
mov
test
pop
out
sub
popa
mov
mov
mov
pop
jnp
andl
ljmp
pusha
jne
dec
mov
pop
sub
fistl
in
push
pop
push
dec
mov
add
fmuls
xor
les
in
xor
push
test
and
and
dec
jg
fiaddl
cmpsl
jae
or
cmp
lods
sbb
faddl
mov
imul
xor
sub
xor
and
ds
jle
push
sbb
xchg
inc
dec
xor
shlb
mov
push
pop
mov
inc
sbb
ljmp
push
icebp
aas
shlb
out
cmp
dec
in
fsts
jge
jae
or
vmovhlps
fisttpll
mov
icebp
sti
bnd
jg
sbb
mov
ret
cltd
sub
pop
sbb
cli
adc
adc
lret
imul
and
adc
xchg
insb
iret
jecxz
mov
dec
push
ror
mov
in
push
cmc
jmp
push
inc
cltd
or
inc
jne
decl
xchg
mov
xor
dec
outsl
je
dec
mov
das
mov
sub
fidivl
or
clc
enter
jo
lahf
shlb
outsl
mov
ss
into
adc
pop
movsl
sub
cs
das
mov
adc
push
sbb
pop
add
and
cmpsl
xor
cmc
aam
or
dec
cmp
cmp
mov
dec
push
mov
ret
out
lea
mov
xor
lahf
movsb
mov
fdivrl
or
clc
mov
jle
cmp
mov
pusha
leave
adc
in
into
cmc
out
mov
lea
dec
push
leave
pop
add
inc
sysret
sub
mov
outsl
gs
push
insl
cmc
sub
and
sti
xor
push
push
div
enter
out
out
mov
jae
mov
lret
xor
lods
inc
xchg
in
cwtl
pop
shl
mov
xchg
pop
add
movsl
mov
cmpsl
lods
mov
xchg
push
rcll
das
dec
inc
xchg
mov
das
dec
xchg
push
arpl
sti
pop
scas
mov
jp
adc
cmp
add
mov
pop
dec
hlt
aam
mov
test
lock
test
xor
mov
out
xor
adc
dec
or
inc
mov
cmpsb
leave
sub
sbb
fucom
das
mov
in
xchg
xchg
xchg
cmc
fistpl
stos
push
nop
sarl
and
movsb
push
push
sbb
jno
scas
and
filds
dec
add
testb
out
push
add
in
cmpsb
mov
rol
push
mov
mov
pushf
into
dec
andb
insl
bound
adc
xchg
int3
in
fsubrl
ja
mov
xchg
mov
call
dec
repnz
inc
inc
lea
mov
lret
xchg
inc
aas
xchg
clc
mov
addr16
mov
mov
sbb
jge
lret
clc
adc
ds
imulb
or
loop
sbb
aaa
lds
rolb
mov
outsb
adc
cmp
pop
lahf
test
and
xchg
pop
push
xchg
lahf
movsb
push
cmpb
mov
jecxz
outsb
pushf
inc
and
jbe
dec
scas
rcl
mov
std
jnp
in
push
mov
imul
out
daa
sbb
insl
push
fcompl
in
sub
mov
dec
mov
fisubrs
sub
insb
jge
subb
or
jge
dec
shl
adc
pop
test
into
xchg
cmp
mov
notb
jle
stos
xor
fidivl
mov
cli
xchg
cltd
fidivl
mov
cltd
movb
dec
ljmp
arpl
aad
stos
and
fldenv
add
fdivl
lea
push
ds
out
jecxz
hlt
push
mov
mov
inc
scas
dec
test
pusha
jmp
pop
adc
mov
aaa
mov
into
adc
les
sub
xchg
stc
pop
mov
jbe
aas
xlat
repz
jmp
sarl
pop
aas
pop
test
sub
leave
xchg
hlt
inc
or
jns
or
stos
test
inc
xor
subl
test
push
xchg
fwait
mov
outsb
inc
jns
xchg
shlb
push
fmull
dec
or
or
dec
or
mov
xchg
and
imul
push
pop
jno
sbb
pop
fstps
mov
cmp
call
mov
or
dec
xchg
and
adc
inc
test
push
jo
jno
in
sar
leave
loopne
dec
mov
jbe
popa
test
loopne
iret
sbb
fs
lods
push
mov
jmp
outsb
aad
xlat
rcl
jno
lock
repz
xchg
adc
fs
mov
xor
sbb
mov
fidivrl
push
shr
fdivl
sarb
xor
add
xchg
cmpsl
loopne
cmpsl
pop
sub
sbb
sbb
out
gs
sbb
in
lret
pop
add
lea
xor
jmp
imul
and
dec
lods
fs
jge
mov
mov
stos
call
pop
jns
test
xor
js
subb
or
mov
and
and
shr
scas
rorl
mov
xchg
in
js
in
lret
cmp
mov
mov
outsl
dec
sub
pushf
aaa
les
loopne
test
or
fimuls
adc
dec
rcrb
xor
les
push
mov
stos
ret
clc
sbb
jmp
pusha
mov
scas
and
pop
sbb
mov
mov
ss
cmp
mov
mov
mov
or
and
fisttpll
jns
jmp
fcomi
or
in
ret
mov
mov
dec
mov
dec
or
data16
enter
inc
leave
cs
shrb
dec
sbb
add
adc
dec
jo
cmpsb
es
ljmp
and
xchg
inc
push
mov
mov
add
in
push
rorb
das
jg
out
js
add
pop
fmull
push
and
faddl
sbb
adc
fwait
popf
rcrb
xor
pusha
nop
mov
xchg
or
lahf
xor
jle
sbb
cs
hlt
movsb
sbb
jmp
pop
add
and
pop
mov
pop
sahf
in
out
cmp
les
nop
ds
bound
cmp
fsubrl
addr16
jb
mov
scas
test
adc
jae
int
adc
lea
mov
pop
bound
fld
adc
inc
aaa
or
fcompl
mov
pop
sti
sub
jecxz
mov
addr16
pop
fnstsw
call
adcb
or
mov
je
adc
shlb
sub
jg
jmp
lahf
repz
push
xor
adc
idiv
pop
hlt
mov
inc
xchg
call
lds
les
insl
mul
add
loope
movsl
into
and
jl
pop
es
sbb
push
xor
outsl
cmp
out
cmp
jbe
push
and
pop
mov
jbe
ljmp
std
sbb
sarb
or
adcl
cld
mov
out
pop
daa
jns
mov
das
int3
push
rcrb
les
jl
pop
in
jmp
in
and
pcmpeqw
hlt
push
dec
pop
and
jg
mov
mov
sub
mov
adc
xor
inc
pop
inc
sar
mov
add
push
insl
insb
inc
in
mov
mov
mov
shrl
cld
inc
or
jb
push
fisttpll
or
sahf
or
cltd
dec
and
xchg
insb
push
inc
mov
xorl
jmp
or
xchg
jns
loope
or
cmp
lea
aas
lods
adc
mov
insb
xor
fldpi
and
stos
jecxz
jge
mov
lock
xor
clc
negl
mov
outsl
bound
fcoml
jle
sub
rcrb
ficoms
pop
jo
aaa
jmp
dec
scas
xor
sbb
jnp
push
sub
add
lret
repz
int
lcall
sbb
stos
xor
xor
int
add
add
adcb
jno
or
lcall
aad
and
mov
push
add
ss
sbb
sahf
dec
fisubs
fwait
mov
aas
xchg
fs
sbb
jp
sub
dec
inc
fmulp
out
adc
fisubrs
cmp
pop
sbb
xlat
add
icebp
adc
pop
out
inc
or
dec
dec
rclb
adc
sbb
mov
jns
lret
and
mov
and
jecxz
push
jae
sbb
pop
push
xchg
adc
ja
mulb
add
leave
test
push
scas
rcr
jl
xchg
cltd
sbb
iret
int
xchg
pushf
fwait
out
popf
dec
sbbl
movb
ds
in
push
add
in
lea
bnd
ds
push
pop
push
cmc
add
cmc
negl
jo
test
jo
sbb
dec
gs
scas
and
add
and
push
inc
add
mov
fisttpll
push
mov
movsl
push
xchg
lods
pusha
jmp
xchg
lret
ds
xchg
inc
push
mov
mov
lret
movsb
pop
nop
cvtps2pi
xor
push
faddl
mov
xorl
xor
xchg
outsb
pop
bound
mov
lea
push
xchg
fdivs
add
push
add
cltd
sbb
jge
rcrl
rcrl
cmp
xor
mov
jle
in
and
icebp
lcall
dec
push
pavgb
dec
ds
leave
pop
mov
inc
or
adc
xchg
push
std
ss
push
or
shr
je
subl
jl
cmp
mov
fcompl
lods
jle
jp
push
std
rcrb
scas
xchg
adc
adc
push
xor
scas
shl
imul
ss
lret
rolb
push
push
nop
gs
mov
cmp
call
jno
dec
mov
jae
clc
shrl
add
lahf
pop
repz
mov
sahf
mov
and
aam
jg
pop
add
cltd
cs
xchg
cli
cmpsl
je
hlt
sub
cmp
cltd
mov
outsb
push
cmp
rorb
lods
cmc
int
lea
sub
xchg
pop
add
rclb
rclb
xor
dec
jne
cli
sub
arpl
dec
dec
movsb
imul
test
xchg
pop
leave
sub
jae
jb
mov
sbbl
fs
push
loop
sti
mov
cmp
mov
icebp
loop,pt
dec
je
aad
jp
ss
adc
andl
leave
cmp
fistpll
or
jp
fmul
mov
cltd
sahf
cld
and
popa
inc
js
shll
or
cmp
loop
add
mov
xor
cmp
aas
repz
cmp
pusha
xchg
gs
es
mov
cmpsl
leave
sub
movsb
dec
mov
pop
mov
or
popf
test
jo
out
mov
sbb
fs
mov
xor
jae
dec
mov
dec
aad
popfw
call
mov
jecxz
push
nop
mov
in
test
dec
mov
rclb
or
push
add
xchg
ljmp
xchg
bnd
test
mov
jecxz
fiaddl
push
add
popa
adc
imul
into
xorb
push
xchg
orl
mov
push
and
mov
jl
push
ljmp
sti
jmp
aam
shlb
cmpsl
mov
cmp
lods
push
test
fsubrs
mov
sbb
ds
stos
outsb
scas
jns
inc
sub
add
imul
inc
andnps
repz
loope
mov
fnsave
adc
subl
into
add
sarl
daa
call
les
bound
popf
out
pusha
imul
rcr
and
and
std
call
in
in
pop
xlat
rcll
stc
popa
mov
jb
arpl
rclb
jnp
test
inc
sub
jl
repz
frstor
mov
xchg
clc
sub
bound
cld
dec
ss
mov
pop
jmp
and
rdmsr
jmp
xor
mov
dec
popf
fs
jl
clc
into
inc
sahf
mov
push
sbb
xor
dec
insb
jae
hlt
mov
adc
xlat
add
xor
stos
lahf
test
dec
shll
fnsave
loopne
dec
scas
les
repz
mov
bound
lods
mov
lcall
sbb
leave
push
in
dec
pop
push
in
sbb
repz
push
lret
dec
out
hlt
jne
insb
cmpl
fcompl
adc
push
lahf
lods
jbe
nop
mov
mov
xchg
adc
xchg
push
nop
inc
out
addr16
mov
push
int3
sbb
add
test
sub
or
xor
leave
sbb
imul
sbb
push
sub
dec
shl
pusha
out
ljmp
enter
push
inc
cltd
cwtl
jle
sarl
xlat
xchg
xor
add
outsb
mov
pop
sub
push
lods
shrb
cli
mov
repz
xchg
or
bound
lock
dec
mov
sti
pop
sub
jp
nop
je
arpl
shlb
or
cmp
cwtl
imul
mov
sbb
xor
inc
cwtl
into
xor
or
and
jl
in
test
test
bswap
arpl
mov
and
jp
neg
aad
adc
sbb
jo
pop
mov
call
sysret
daa
fpatan
repnz
cltd
out
mov
add
iret
mov
add
aaa
inc
lret
or
xor
test
and
xor
mov
push
inc
xchg
add
xchg
pushf
nop
int3
imul
in
out
in
call
jnp
outsl
pop
adc
leave
xchg
pop
push
mov
int3
insb
sti
add
popa
xchg
test
std
xlat
sbb
pop
dec
icebp
cmp
aam
sub
in
inc
xchg
adc
addr16
insl
pushf
cwtl
aas
adc
xchg
ljmp
out
pop
punpckldq
mov
arpl
dec
and
push
sti
gs
mov
lret
cs
test
cltd
jmp
fwait
inc
jns
jmp
sarb
js
jae
pop
xorb
ss
out
loop
add
adc
pushf
sbb
mov
push
push
mov
ja
jns
mov
fmuls
popf
popa
pop
popa
mov
leave
push
and
jne
sbb
sahf
pop
pop
subl
inc
cmp
cmp
push
cmp
notl
lea
fnstenv
dec
and
cmp
arpl
or
inc
add
inc
movsb
adc
and
data16
mov
cltd
sbb
jae
xchg
sub
orb
cld
push
push
jmp
rcrl
mov
sarl
mov
lcall
adc
stos
notb
or
lods
and
mov
and
push
in
jb
pop
lea
in
into
and
mov
mov
and
lahf
out
cmpsl
incb
mov
mov
mov
xchg
jnp
pop
push
dec
in
dec
adc
pop
lret
pop
jp
test
adc
push
mov
adc
pop
icebp
stos
cli
xor
test
rcrl
mov
movsl
aam
das
add
pushf
and
jecxz
dec
repnz
pop
faddl
add
ficoml
sarb
pusha
in
ret
loope
stc
jb
jne
mov
and
inc
xchg
lahf
lret
arpl
jg
cltd
out
lret
int3
cmp
sahf
push
push
xchg
or
mov
jae
mov
mov
push
xor
and
scas
shlb
cmpsl
pop
adc
jg
inc
mov
mov
dec
cmpsb
cwtl
aas
bsr
xlat
sub
cmp
xchg
je
xor
jmp
mov
push
jb
push
mov
xchg
mov
fcomi
movsb
loope
pop
add
xchg
lods
stos
fidivs
pop
xor
mov
hlt
sbb
pushf
jg
mov
xchg
adcl
cwtl
jp
lods
sub
emms
rorl
adc
ss
pop
out
and
aas
adc
mov
loope
push
je
adc
cmp
int3
mov
xchg
test
out
and
mov
xchg
mov
repz
std
negl
imul
cltd
mov
xchg
sbb
lahf
push
and
test
rcll
xchg
insb
je
mov
sbb
sbb
push
push
fldt
aas
adc
scas
insb
lret
push
lret
clc
inc
mov
aad
pop
gs
out
sub
out
es
popa
xchg
push
sahf
push
xor
dec
sub
adc
lahf
pop
push
aad
fadds
mov
andl
dec
lea
das
dec
dec
out
jge
into
orl
aam
dec
cli
in
int
subl
stos
pop
inc
xchg
push
stos
outsl
mov
cwtl
das
adc
mov
inc
xchg
insl
adc
popf
cmc
stos
in
js
inc
ja
jne
bound
sbb
outsb
push
mov
and
inc
and
pop
clc
sub
movsl
xor
xor
inc
fidivl
mov
jne
pop
mov
movsb
inc
leave
mov
int
jno
in
jb
jmp
pop
cli
add
sub
and
jp
sub
xchg
mov
call
ficompl
shl
dec
shll
push
jmp
inc
jne
lret
jb
mov
or
clc
dec
iret
push
mov
imul
cmp
jle
std
shll
inc
repnz
pop
push
test
insl
xor
movsb
adc
popf
inc
cmpxchg
ss
mov
pusha
sarl
and
divb
clc
in
xor
insl
push
lods
shrb
or
push
pop
adc
hlt
testb
out
in
and
mov
mov
inc
loopne
test
inc
in
ljmp
xchg
jle
loopne
sarb
orl
cmc
dec
ja
imulb
jle
rolb
xorl
jp
movsb
mov
push
xchg
inc
sbb
or
cli
hlt
xchg
xchg
ljmp
cmp
out
ja
lcall
cmc
and
pop
notl
cwtl
push
lahf
jbe
std
jmp
test
inc
mov
daa
push
mov
sub
movsb
or
dec
mov
mov
pop
orb
cmp
pusha
out
jl
gs
dec
cs
adc
lds
sub
jp
add
stc
inc
gs
aas
fcompl
xor
cmp
xchg
push
inc
jbe
cmp
lock
jo
pop
inc
mov
push
xor
or
cmp
xchg
lock
jge
mov
fisubs
fsubl
jnp
sbbl
pop
es
jae
jae
or
mov
xlat
xor
add
add
and
jb
lock
repz
das
xchg
popa
sub
or
adc
lret
test
dec
call
mov
cs
lahf
lcall
fsubs
sahf
rolb
xor
in
adc
stc
fdivs
lahf
insb
cmpsl
lds
cmp
lcall
fimuls
mov
pop
out
sub
push
push
cld
subl
call
sarb
loop
ja
jle
mov
aas
orl
mov
fldenv
out
popa
xchg
fcomps
mov
add
and
mov
pushf
lods
dec
sbb
mov
pushf
or
or
cli
ret
aas
mov
in
cmp
xchg
into
cs
inc
xchg
aas
push
out
daa
js
movl
mov
push
pop
or
xchg
inc
sti
out
stc
jb
push
das
inc
xchg
push
inc
ss
adc
xor
in
and
clc
loopne
xchg
mov
mov
arpl
xchg
rorl
cmp
jbe
push
xor
fmull
enter
leave
xchg
in
add
jns
ffreep
dec
push
xchg
xchg
pop
imul
mov
inc
jo
adc
stos
in
in
cmp
sahf
mov
mov
adc
xchg
sar
loop
lock
cli
ja
icebp
pusha
loope
stos
fcmovu
jle
xchg
mov
in
subb
push
cwtl
sarb
outsb
gs
adc
or
repz
out
jp
outsl
xor
mov
clc
mov
sub
cltd
dec
cmpl
adcl
xorb
sbbl
pop
jg
enter
call
cmp
pushf
xor
mov
bound
adc
add
jns
dec
add
in
jmp
push
xor
mov
sub
inc
fwait
pop
dec
jnp
ljmp
mov
addr16
idivl
sub
mov
aaa
xor
sub
lret
call
repnz
add
pop
jns
in
push
clc
jge
xlat
jo
testb
stc
jecxz
xchg
dec
xchg
push
cltd
inc
mov
cmc
lcall
xor
push
mov
pop
psubusb
add
stc
addr16
jecxz
dec
xchg
xor
call
fbstp
add
addr16
inc
icebp
pcmpeqd
cmpsb
and
xchg
cltd
mov
dec
dec
loop
xor
fcmovbe
movsb
call
jge
sbb
lcall
out
out
popf
xlat
push
cmpsb
mov
ret
stos
stos
xor
fimuls
add
out
push
cld
lea
fwait
stc
out
arpl
lcall
aaa
add
xor
sar
clc
pusha
repz
fwait
inc
in
repz
out
ret
out
lods
sti
sbb
lds
sarl
add
call
push
fwait
mov
andb
mov
test
repnz
ret
inc
subl
dec
and
cmpsl
clc
scas
or
mov
cmp
pop
and
test
into
lds
ss
pop
ljmp
sub
jp
xor
or
push
inc
or
cmp
lcall
sti
add
ss
mov
pushf
in
ljmp
pop
or
fisttpl
adc
es
sbb
out
ret
fists
pop
cld
dec
out
add
sub
add
pop
mov
shll
xchg
xchg
jecxz
pop
jmp
mov
loope
ficoml
push
in
fs
pop
add
je
jns
sbb
movsb
pop
adc
xlat
frstor
insb
test
mov
cmp
vsqrtps
lods
imul
or
jae
mov
lods
mov
cs
jmp
mov
enter
rcll
mov
ret
cmp
jmp
xchg
fisttpl
or
les
aaa
dec
xchg
test
lret
cmpsl
mov
push
dec
sbb
push
out
pop
cmpsl
shll
pop
inc
scas
int
lods
shrb
pop
mov
xlat
or
fldt
call
cmp
orl
lea
mov
add
pop
test
fmulp
pop
cli
add
mov
pushf
les
and
mov
out
jne
sbb
cmp
mov
add
rcl
sub
dec
inc
mov
jbe
aam
aaa
cmp
sbb
mov
ds
cmpsb
add
mov
jp
sub
sbb
ret
push
shlb
add
mov
xor
pop
test
inc
xchg
and
data16
leave
mov
or
cmp
mov
pushf
in
sub
mov
js
or
inc
xor
adc
cmp
iret
shlb
mov
cmp
popf
lock
popf
add
mov
xchg
lcall
mov
std
cmp
loopne
les
dec
lret
xor
hlt
sub
push
stos
ret
or
dec
popa
jecxz
sbb
push
xor
xlat
cli
sbb
adc
push
xchg
mov
sarl
mov
xor
mov
add
es
cmp
mov
adc
pop
inc
sarb
xchg
insl
imul
out
jmp
pusha
clc
das
or
out
inc
testb
scas
loope
imul
add
hlt
sub
xchg
clc
or
leave
inc
scas
add
lods
sbb
ficompl
scas
jno
push
and
imul
pop
push
or
fimuls
ljmp
invd
icebp
pushf
iret
clc
dec
test
icebp
push
push
daa
xchg
rcrl
ss
inc
inc
mov
pop
in
or
mov
lds
xchg
fcompl
je
mov
push
in
sbb
imul
and
arpl
mov
or
jno,pt
aaa
mov
orl
add
pop
dec
fcmovb
gs
into
andb
xchg
mov
xchg
lcall
pop
ss
add
inc
outsl
in
ja
jns
test
call
mov
stc
push
daa
test
mov
ss
and
pop
shrl
push
xchg
es
mov
ror
ret
int
adc
lea
test
dec
outsl
sbb
xor
cmp
ficoms
jne
xlat
fwait
push
push
leave
cmp
popa
add
adc
push
xor
stos
fsubrl
shll
fisubs
cli
jns
iret
jecxz
add
dec
insl
mov
not
mov
ljmp
popf
push
in
cmp
cld
roll
adc
sbb
jmp
jmp
inc
sub
push
pop
dec
pop
cmpl
dec
sub
jle
addr16
mov
push
push
or
sub
sahf
push
inc
fwait
pop
mov
add
mov
push
add
iret
jmp
test
data16
adc
pop
or
mov
mov
das
adc
roll
sub
test
sahf
jmp
push
aaa
stos
fucom
push
mov
inc
pop
test
pop
push
mulb
dec
sub
mov
dec
pusha
das
test
xor
push
cli
mov
sbb
push
xchg
mov
iret
mov
repz
mov
mov
sbb
test
icebp
rcrb
lea
push
sbb
aaa
stos
in
sub
aas
and
fistpll
iret
adc
sub
incl
lret
xchg
mov
and
jo
add
inc
pop
insl
outsl
aaa
mov
aad
popf
inc
mov
mov
xchg
aaa
dec
dec
xor
daa
xor
jns
mov
rcll
idivl
dec
aas
cwtl
pop
test
les
fsubr
and
cltd
into
lcall
cmp
clts
sahf
push
dec
xor
push
push
fnstcw
push
mov
popf
jl
inc
lcall
mov
data16
movsb
jp
jno
cmp
out
and
cmpsb
rcr
scas
popa
mov
cmp
data16
jns
out
out
adc
adc
jge
xor
xor
leave
clc
into
pop
mov
sbb
insl
xchg
fs
cmp
in
pop
push
nop
mov
cltd
adc
push
nop
clc
fildll
dec
mov
jbe
jecxz
push
jbe
repz
loop
lea
divb
jmp
inc
popf
gs
pop
pop
out
push
loopne
ds
or
enter
dec
mov
into
icebp
in
adc
insl
ret
pusha
in
mov
jecxz
or
gs
xchg
ret
cmp
mov
xchg
xchg
or
loop
mov
or
cmc
std
xorl
std
xor
mov
push
insl
in
lahf
push
cmp
push
stos
xchg
push
fidivrl
xchg
mov
mov
out
pop
leave
mov
mov
int
into
adc
repnz
stos
dec
ljmp
test
sub
orl
in
or
jmp
or
push
push
imul
push
sub
sub
fildll
mov
or
or
and
mov
testb
push
adc
fldt
and
stc
aas
jbe
sarl
in
popa
dec
aas
jns
push
mov
mov
data16
dec
movsl
shl
adcb
sbb
cwtl
sahf
dec
aad
push
xchg
in
test
testl
mov
shl
popf
adc
sbb
sub
fcmovb
fnsave
in
cmp
jmp
cmp
les
iret
insl
cmp
xor
inc
mov
xchg
pop
cmp
mov
inc
add
cmp
and
popa
xchg
mov
adc
adc
leave
iret
hlt
mov
ficoml
xchg
enter
xor
jl
jecxz
and
or
pop
fistl
sbb
mov
add
xchg
push
sub
lods
pop
sbb
and
ds
push
mov
fcomi
xor
shrb
mov
jg
mov
and
xor
stos
std
ss
inc
xor
cs
dec
dec
mov
lods
cmp
cmc
stos
out
mov
in
xchg
shll
lods
fmull
cwtl
and
loope
jp
sbb
stos
bound
iret
or
cli
jecxz
xor
sbb
lahf
dec
or
adc
into
adc
xor
stos
test
cmp
sahf
dec
movsl
push
outsl
xchg
add
sbb
mov
jnp
pop
inc
jmp
sahf
sub
sahf
mov
ficoml
inc
xchg
xchg
jnp
pop
ret
xchg
sub
imul
adc
xor
sarb
xor
fsts
imul
adc
adcl
jae
jne
or
imul
and
das
mov
leave
ret
add
mov
cld
cs
pop
inc
add
mov
cmc
dec
fisubl
fnstsw
aaa
sbb
sahf
out
mov
dec
dec
mov
addr16
gs
mov
je
mov
xchg
jno
inc
cmc
mov
xchg
je
xor
jb
testb
iret
fsubrl
negb
adc
mov
aam
mov
repz
jecxz
popa
or
adc
jmp
cwtl
sub
ret
inc
cwtl
lret
inc
loopne
lds
inc
mov
stos
test
mov
jne
jo
adc
leave
dec
jne
xor
cld
jecxz
in
xlat
adcb
into
jns
mov
push
xor
insb
movsb
xchg
addr16
jbe
dec
lahf
jg
in
sbb
mov
mov
push
movsl
out
sub
aaa
mov
lret
ds
and
pop
pop
notl
push
jbe
jp
movsb
mov
push
hlt
lods
ljmp
inc
aad
insl
push
lods
arpl
out
sbb
loopne
mov
and
aas
mov
add
idivl
jg
cmpsb
cmc
adc
cwtl
test
mov
repnz
aad
daa
xlat
xchg
pusha
add
addb
insb
dec
sahf
and
int
jl
mov
outsl
fadd
scas
ja
fbstp
and
jne
mov
adc
jno
cmp
ret
add
out
push
sub
gs
fmull
sub
or
mov
fists
rcrb
ds
pop
inc
cltd
out
mov
fildl
out
sub
addr16
andb
xchg
mov
and
bound
fistpll
jb
subl
xor
mov
fdivr
adc
jp
repz
in
cmc
leave
xor
pop
add
sarb
out
pop
xor
mov
leave
xor
nop
test
or
out
push
imul
clc
jmp
aaa
scas
pop
dec
mov
bound
out
pop
pop
xchg
pop
xor
int
mov
inc
repz
push
ds
dec
adcl
sub
sub
push
dec
or
in
cli
mov
movsb
jae
sbb
fcompl
sub
dec
adc
dec
add
addr16
add
push
jbe
adc
jge
pop
repz
in
shll
sbbb
mov
jp
push
mov
xor
lea
test
ss
cli
sub
push
jp
xlat
push
and
out
jne
test
stos
mov
pop
mov
inc
fdivl
fldl
repz
sbb
and
sub
lret
inc
lods
sahf
pusha
popa
mov
das
push
idivl
mov
xor
out
hlt
adc
adcb
push
mov
mov
jbe,pn
fs
loopne
enter
loop
mov
repz
cmc
adc
add
xchg
outsb
jp
mov
cli
sub
or
push
outsl
jns
mov
loope
push
negl
dec
jno
sbb
loope
dec
jnp,pn
outsl
push
cli
xor
or
mov
sbb
mov
fs
fnstcw
fcoms
ficoml
aad
or
push
dec
xchg
je
addl
or
in
adc
sbb
iret
js
mov
mov
jp
gs
add
sbb
pop
pushf
push
jno
xchg
jno
out
rcr
ja
mov
lds
insb
push
cmp
or
faddl
adc
adc
jl
jbe
pop
scas
addl
xor
iret
and
push
xor
scas
jns
jbe
std
aam
mov
add
pushf
shl
fidivrs
inc
ja
jecxz
mov
adc
jo
adc
outsl
leave
inc
shll
jbe
xchg
mov
add
cmpsl
and
and
push
pop
adc
std
roll
add
inc
fisttpll
add
dec
nop
rclb
add
adc
pop
cwtl
pop
sub
push
iret
pop
jns
test
mov
push
out
push
fisttpll
fadds
ljmp
jmp
pop
mov
adc
pop
stc
pop
or
inc
sbb
jp
mov
subb
rcll
arpl
jecxz
dec
xlat
lret
test
out
add
and
sbb
ret
pusha
mov
jnp
inc
aad
fneni(8087
mov
faddl
dec
add
out
add
stc
enter
sbb
out
jbe
icebp
fiaddl
subl
mov
imul
js
add
imul
mov
and
mov
std
xchg
inc
adcb
add
cwtl
ret
repz
das
mov
cmpsb
push
je
xor
outsb
jno
and
add
pop
cli
jno
mov
iret
and
outsl
in
sub
sub
popa
or
call
out
mov
mov
mov
jmp
insl
xorl
mov
push
mov
jp
pop
add
jg
leave
dec
sahf
mov
mov
inc
cmpsl
xor
sbb
add
pop
fwait
mov
xlat
lret
push
or
xor
lret
stos
popa
fs
jp
mov
mov
jno
xchg
cld
sbb
loop
mov
fwait
hlt
mov
fs
dec
loopne
ds
pop
std
dec
addb
dec
or
xor
mov
dec
loopne
sub
in
adc
shll
mov
dec
adc
or
imul
mov
pop
add
xchg
xchg
mov
jg
jb
aad
pop
pop
sbb
fsubrs
loope
sarb
ja
std
sub
test
mov
and
adc
xchg
lods
in
push
push
xchg
pop
repnz
or
imul
or
sbb
notl
sub
inc
adc
sbb
mov
rcrb
cmpsb
hlt
imul
sti
and
cmpl
out
sbb
pmullw
scas
jle
xchg
or
stos
push
lret
mov
adc
xlat
xor
or
mov
and
imul
xchg
jbe
pusha
cmp
in
adc
jae
mov
inc
arpl
cltd
outsb
out
enter
mov
mov
dec
fwait
mov
daa
mov
lea
jge
call
or
int
add
aam
movsb
mov
mov
inc
stos
xor
push
inc
xchg
ja
cli
lds
movsb
mov
outsl
dec
mov
in
cmp
mov
lea
mov
out
cld
sub
out
fimull
aam
cld
movsb
popa
mov
sti
lock
mov
call
dec
inc
cltd
xchg
fnstenv
inc
js
loop
aas
xchg
std
divl
into
pop
push
insl
fnstenv
sbbb
xchg
mov
aad
pusha
sbb
sub
ficomps
add
adc
loope
fmul
jno
loopne
mov
mov
adcb
shll
ja
jl
lods
or
psrld
jne
testb
mov
xchg
cltd
adc
mov
mov
aas
cmp
jp
or
jge
adc
jb
xor
loope
push
mov
cmp
sub
sub
jb
pop
mov
sub
inc
insb
popa
jne
adc
pop
ljmp
inc
mov
js
icebp
in
rcll
outsl
push
stos
and
add
notb
arpl
sbb
jo
hlt
push
popf
jbe
jle
iret
mov
out
add
jmp
loope
mov
int3
sbb
cltd
mov
inc
push
popa
aad
in
in
jne
sub
loope
lods
mov
or
sub
les
dec
insl
xchg
push
scas
push
addr16
pop
decl
iret
inc
out
and
push
mov
cltd
mov
sub
dec
xchg
ret
cli
mov
jg
addr16
adc
cmc
and
lea
or
inc
xlat
imul
or
xchg
xchg
or
mov
das
push
mov
pop
data16
fbld
sarl
mov
inc
and
mov
pop
cmp
pop
imul
sub
ss
xlat
add
mov
add
or
les
lock
add
mov
int
popa
jo
jge
push
mov
mov
mov
dec
sbb
adc
shll
xorl
pop
xor
pushf
xchg
enter
fistpl
scas
dec
cmp
repnz
mov
fxch
adc
mov
ss
repz
bound
pop
pop
call
bound
cmpsb
shlb
lods
icebp
cmp
cmp
imul
jb
mov
mov
xchg
int
jb
fidivrs
sub
fwait
aaa
gs
sub
mov
out
mov
push
pusha
push
test
jnp
xor
sbb
push
sbbb
stos
inc
xor
fbstp
cltd
addr16
cmpsb
flds
popa
movsb
jge
shlb
das
cmp
in
pop
jmp
xchg
jo
lahf
repnz
adc
xchg
clc
push
int3
bound
lods
pop
push
and
pop
arpl
aad
inc
cmp
or
leave
jns
and
pop
mov
fs
shll
pop
dec
ret
test
sbb
mov
jbe
jle
sbb
sub
fwait
in
out
cli
xchg
cmpsl
add
or
push
imul
test
dec
daa
cmp
ds
fwait
std
or
pop
mov
jns
rorl
jge
mov
subl
or
mov
mov
sbb
add
rolb
mov
cmp
test
inc
data16
or
pop
mov
test
mov
cmc
add
xlat
sub
lret
bound
nop
mov
push
sbb
jnp
insl
dec
lea
das
rcrl
and
test
fwait
test
mov
push
xchg
inc
jnp
mov
orl
les
lock
aad
js
cltd
fiadds
in
stc
xchg
subb
or
cmpsb
mov
mov
popl
dec
in
dec
daa
inc
mov
mov
jb
add
out
lcall
faddl
mov
repz
outsl
mov
js
scas
dec
add
pop
popf
adc
push
mov
pop
adcl
push
cli
pushf
and
push
dec
fidivl
xor
mov
jge
into
movsl
insl
out
loopnew
lds
xor
shr
lock
repnz
xchg
ja
cmp
fldenv
stc
add
loope
adc
mov
inc
add
xchg
sbb
pop
dec
push
ds
xchg
cmp
test
add
cmp
jle
test
in
jmp
xchg
fs
jno
mov
dec
cmp
jno
inc
push
mov
pop
jbe
xchg
add
mov
xchg
inc
and
cwtl
jbe
xchg
imul
fdiv
aas
neg
add
cmpl
xchg
adc
xor
stos
push
sbb
push
mov
push
inc
je
or
shll
out
cmp
insl
mov
jns
sbb
xlat
sub
push
xchg
xchg
cli
inc
mov
jb
roll
dec
das
pop
call
sbb
adc
add
loopne
mov
loop
stos
into
sub
imul
jae
sbb
fldl
popf
mov
cs
cli
push
lods
push
inc
daa
xchg
fnstcw
pushf
mov
sub
lret
in
jle
stos
push
mov
dec
loopne
repz
mov
scas
jle
cmc
nopl
lahf
sub
jbe
add
sbb
mov
and
push
sbb
ljmp
je
jge
data16
mov
xchg
sbbl
cmpsb
jmp
adc
or
mov
fmuls
xor
js
aad
shlb
mov
ds
lahf
leave
sub
cmp
test
iret
fsubrs
xor
xchg
jp
lea
mov
flds
inc
std
dec
ret
jmp
add
push
xchg
or
aad
loopne
fsubl
adc
aad
es
cmp
subb
lret
cli
xchg
jp
or
sub
add
pop
popf
sbb
xchg
jnp
mov
outsl
rorb
inc
or
ficoml
jnp
xlat
sbb
mov
mov
adc
cwtl
les
cli
nop
mov
mov
lods
icebp
addl
jg
das
mov
lret
and
movsb
inc
scas
cli
jnp
or
cmp
rcll
push
mul
and
fidivrs
lcall
mov
add
ss
mov
pop
and
jp
pop
cmc
jae
rcll
cmc
mov
inc
aas
dec
or
sub
cli
addr16
imul
jbe
push
push
inc
daa
stos
inc
cli
inc
lret
adcb
ret
scas
add
push
cwtl
or
mov
cmp
and
mov
popa
add
inc
xor
stc
inc
xchg
stc
rcr
cltd
jl
lahf
pop
inc
or
and
in
mov
xor
out
xchg
or
ljmp
stos
adc
jmp
and
pushf
sub
das
and
xor
sub
js
fwait
jmp
les
xor
dec
mov
add
imul
and
pop
cwtl
xchg
pmulhw
cmp
incl
les
stos
popf
mov
and
inc
mov
cmp
ds
daa
push
cmp
push
jmp
mov
leave
mov
or
daa
push
in
gs
scas
arpl
ds
fdivl
mov
clc
bound
fstl
inc
mov
or
adc
hlt
jecxz
pop
mov
cmp
int3
das
ss
stc
cmp
jns
scas
test
jle
pusha
sar
imul
xor
pop
leave
ficomps
and
pop
sub
push
ret
cmpsb
out
mov
mov
push
cmp
repnz
cwtl
out
cs
sub
popa
inc
xchg
mov
xchg
push
sub
adc
jecxz
lcall
and
adc
notl
adc
out
adc
test
lods
and
inc
inc
pop
dec
pushf
dec
sarl
cwtl
out
dec
stc
or
ret
out
iret
push
in
dec
cmp
push
cmp
outsb
loope
jae
out
mov
or
xor
imul
rcll
pop
arpl
jno
stos
cmp
push
ds
cmp
mov
cmp
adcb
jl
push
add
je
cmp
shlb
sub
leave
lahf
mov
mov
mov
mov
inc
leave
daa
popf
pop
mov
cmpsl
int
scas
xor
xchg
in
mov
mov
test
out
sahf
mov
call
inc
cmp
pop
psubd
cld
push
pop
sar
xor
into
repnz
cmp
repz
mov
inc
mov
dec
lahf
sbb
add
gs
rclb
cld
pop
mov
sub
cmp
mov
sub
out
call
outsl
cmp
loop
mov
fiadds
cmp
loope
inc
iret
stos
aas
mov
std
mov
or
dec
nop
addr16
mov
pop
imul
push
xlat
clc
pop
sarl
std
aas
das
jg
xchg
push
in
pop
push
mov
push
add
bound
jno
imul
scas
in
out
inc
and
into
inc
inc
push
popf
xor
dec
aam
mov
movsb
or
mov
es
xchg
sbb
lds
pop
cmp
es
hlt
dec
and
xor
push
aas
push
pop
or
push
insl
adc
inc
push
aaa
mov
xchg
xchg
repnz
push
in
bound
sti
mov
out
dec
aam
and
add
sub
out
popa
stc
movsl
in
scas
ja
fbld
lods
xchg
mov
test
cmc
sti
fcoms
shr
in
sahf
push
insl
add
sub
push
add
stos
popf
or
dec
lret
lcall
dec
pop
mov
cs
aaa
pop
inc
nop
jecxz
pop
and
lret
repz
lret
ficomps
pop
mov
lea
sub
mov
add
pusha
aas
shlb
pushl
in
imul
or
andl
mov
out
lods
test
sbb
ret
movsl
fsts
push
xor
cmpsb
js
rcrb
cmc
xchg
or
cmpsb
fdivs
mov
pushf
dec
shll
in
stc
fildll
xor
jnp
mov
daa
mov
outsb
cmc
mov
inc
mov
or
imul
mov
adc
add
and
ljmp
pop
push
and
mov
ret
jne
cmpsl
test
pop
pushf
out
orb
imul
insb
adc
roll
pop
ljmp
jae
enter
loope
push
stos
scas
repnz
xor
lock
adc
cmpsl
inc
cmp
push
out
mov
loop
fs
jne
inc
mov
dec
mov
adc
sahf
pop
sbb
xchg
pop
xlat
shr
push
out
insl
pop
dec
inc
push
add
mov
fimuls
hlt
repz
add
cmp
iret
aad
idivl
pop
outsl
lret
pop
dec
cmp
push
cmp
idivb
pop
sbb
lods
dec
dec
into
in
push
jge
rorl
leave
xor
mov
je
xor
sahf
sti
cmp
fstpl
les
xorl
jmp
sub
out
pop
jae
sbb
cmp
cmp
jne
mov
xchg
ljmp
lret
int3
push
pushf
das
and
inc
divl
mov
aad
mov
ss
jno
in
push
or
mov
mov
jnp
pop
mov
fidivrl
test
outsl
scas
addr16
sbb
lret
lcall
test
idivb
out
jl
fwait
outsb
xchg
xchg
mov
xchg
pop
mov
mov
xorb
lds
push
add
loopne
outsl
push
jle
movsb
je
mov
mov
xor
push
mov
pop
sti
repz
scas
and
aaa
pop
icebp
inc
dec
call
sahf
and
mov
leave
into
push
scas
adc
inc
cld
mov
out
mov
gs
sub
sbb
push
mov
jmp
aaa
sbb
lahf
in
jne
aaa
pop
jno
insl
imul
pop
mov
out
mov
xchg
out
cmpsl
jg
pop
pop
pop
hlt
and
xor
cmp
cmp
cltd
loopne
shlb
ljmp
and
roll
fnstenv
outsb
xchg
movsb
xor
pop
add
sub
jae
or
push
mov
mov
out
cmp
jmp
rclb
je
sbb
into
int3
or
mov
xchg
dec
ljmp
sub
cmp
mov
xchg
movsb
fsubp
dec
stos
mov
mov
sbb
jo
xchg
dec
outsl
orl
xor
mov
int
sbb
stos
dec
sbb
pop
rclb
mov
push
and
out
mov
es
dec
jo
mov
push
add
ss
dec
push
cwtl
mov
jp
mov
and
pushf
inc
dec
mov
cmpsb
fistl
or
mov
mov
out
push
imul
dec
jno
push
mov
movsb
ljmp
and
movsl
jb
test
insl
out
ret
std
jno
cmc
xchg
xchg
clc
shll
leave
sbb
cmp
pop
mov
mov
add
jo
lds
xchg
xor
xor
jle
lods
jle
jge
dec
and
or
lret
out
iret
pop
sarb
aam
sub
jae
notb
push
call
mov
imul
push
lahf
les
and
pushf
cltd
mov
cmp
ret
xchg
jne
popa
loope
cmp
shl
in
sub
add
sahf
loopne
dec
sub
insb
pusha
jmp
aas
ljmp
pop
ret
cmp
pop
jle
sbb
lds
mov
pop
repz
outsl
jle
lret
and
aam
mov
push
out
out
scas
sbb
repnz
lock
out
jge
orl
into
push
mov
or
mov
loope
rcrl
popf
aas
xor
inc
mov
int
jmp
out
into
out
sub
push
jmp
add
and
fs
push
lods
lret
sub
push
sti
or
push
mov
inc
aaa
rcrb
ja
movsb
aaa
xor
push
inc
cmp
sbb
jl
sbb
mov
push
call
scas
xchg
push
pop
mov
mov
mov
paddusw
mov
gs
sahf
xlat
adc
rorl
mov
sbb
dec
inc
popf
adc
xor
xchg
sarl
pop
and
ljmp
jae
mov
and
mov
iret
imul
fs
or
lcall
mov
test
outsb
sbb
push
xor
pop
in
cmp
and
nop
stc
add
pop
push
push
das
cwtl
mov
add
es
pusha
fists
shrl
dec
outsl
cwtl
adc
shll
das
xchg
test
pop
lds
ret
sub
cltd
dec
stc
add
xchg
imul
int
repnz
mov
inc
inc
mov
std
cmpsl
dec
cmpsb
and
pop
dec
mov
imulb
jae
mov
cwtl
jo
cmpsl
mov
lahf
cmp
or
or
jmp
add
dec
loopne
stos
mov
mov
push
dec
repnz
mov
xor
push
cmp
jge
cmc
lcall
shlb
in
mov
pop
xchg
lahf
call
cmc
adc
mov
pop
adc
push
mov
inc
test
add
inc
and
cmpsl
inc
fnsave
xchg
push
xchg
es
fsubrp
push
aad
es
jle
and
sub
test
insl
push
add
mov
ljmp
test
idivl
sbb
aad
jg
cltd
mov
bound
shlb
pop
ja
orl
loop
ret
jge
icebp
mov
adc
pop
xchg
lret
pop
cltd
aas
dec
shll
add
mov
mov
jmp
mov
roll
or
mov
inc
ljmp
ljmp
jle
cld
repz
and
inc
das
mov
hlt
cmp
aad
add
pop
out
add
in
ljmp
das
sub
cmp
shrl
test
idiv
sub
sbb
pop
insl
bound
adc
ja
jnp
in
xlat
push
jne
mov
and
xor
pop
pop
cmpl
mov
loopne
dec
mov
mov
in
add
jp
pop
mov
sub
add
push
hlt
imul
xchg
inc
mov
push
pusha
add
adc
add
dec
pop
sub
cmp
adc
insb
or
dec
jle
mov
in
pop
daa
in
pop
or
int3
mov
xchg
mov
movsb
mov
xchg
out
imulb
jae
call
pushf
and
icebp
in
stos
std
and
pop
mov
or
mov
adc
xchg
dec
jl
cmp
jns
scas
scas
inc
xchg
mov
ror
cmpsb
loopne
inc
rolb
mov
push
jge
xor
enter
xor
shrd
dec
outsl
fdiv
jns
sbb
loope
fidivl
and
aad
shlb
mov
and
pusha
ret
nop
push
std
mov
aaa
in
mov
rol
test
push
add
or
cmpsl
jnp
pushf
add
mov
ds
int
ss
pop
insb
jbe
cmpsl
or
lret
and
js
inc
cmp
in
fcmovnbe
mov
lea
aad
rcrb
je
pop
js
mov
mov
and
jp
push
aas
push
push
mov
mov
hlt
xchg
adc
sti
and
fsubrs
into
lret
adc
dec
lods
xor
push
adc
jl
pop
push
lahf
fwait
rcll
test
nop
sub
ret
rcrl
aad
xchg
scas
popl
pop
jne
test
inc
dec
lret
mov
add
jmp
or
add
imul
and
add
push
xor
pop
sbb
mov
scas
inc
sti
idivb
or
gs
stos
jns
mov
inc
js
jne
add
xlat
jge
xor
mov
fsubrl
stos
nop
cmp
stos
ja
mov
in
sbb
jb
jg
push
repz
adc
fldt
ficoml
nop
xchg
adc
repz
test
lods
fwait
cmp
adc
mov
push
jnp
mov
jle
adc
fwait
and
call
mov
push
jns
sbbl
pop
xchg
jmp
fwait
and
lret
pop
leave
decb
and
sbbl
cmp
shrb
jo
lea
dec
add
daa
jb
cmc
lock
fimull
cwtl
sbb
aaa
push
push
adc
testb
sub
cmp
iret
adc
inc
mov
lcall
insl
arpl
xor
sbbl
pop
outsb
testb
sub
jmp
cmpsl
es
sbb
popf
sarl
adc
or
xor
add
out
mov
jg
jecxz
pop
outsl
movl
pop
jb
or
pop
sbbl
mov
stos
loope
mov
iret
push
xchg
imul
push
or
ds
and
in
out
push
inc
icebp
xchg
loope
stos
scas
fisttpl
inc
scas
sbb
sarb
outsb
or
mov
pop
pusha
jno
mov
sarl
pop
test
outsb
testl
call
aas
fsubl
push
sti
xchg
push
push
cmp
xchg
mov
mov
into
repz
xor
mov
lods
ret
stos
repnz
ficomps
adc
call
and
jbe
test
lds
lcall
fidivs
push
and
adc
push
call
lret
adc
repz
insl
cmpsl
cmp
divps
mov
ret
xor
dec
push
ret
sti
cmp
xchg
dec
adc
or
cmc
rcpps
inc
xchg
mov
aaa
nop
scas
pop
cltd
lods
out
pop
and
mov
sbb
mov
in
lock
mov
in
sti
imull
out
cmp
adc
nop
push
inc
dec
jp
xchg
push
xchg
pushf
or
js
mov
mov
xor
cmp
xchg
xor
add
sub
push
add
out
xchg
loopne
or
dec
stc
mov
repz
mov
xor
inc
cmc
and
mov
aam
adc
mov
pop
inc
test
jno
dec
pop
cwtl
or
cli
fadds
test
mov
mov
xor
popf
add
pop
xor
leave
sub
int3
repz
lcall
lea
mov
jnp
insb
or
out
sbb
outsb
rorl
jl
mov
jns
inc
mov
sbb
pop
shll
pusha
jns
cmp
sub
or
sub
jnp
aad
fs
push
cltd
mov
mov
sbb
push
test
and
pop
push
mov
mov
rcr
jb
je
test
out
aam
jge
or
xor
pop
xchg
loopne
mov
inc
inc
adc
scas
int3
mov
push
sbb
test
jns
inc
dec
pop
xor
mov
loopne
lcall
mov
mov
dec
push
add
jecxz
arpl
insl
in
notl
add
addb
mov
mov
jns
xchg
mov
push
push
in
loopne
or
xor
stos
addr16
jmp
in
jge
sarl
adc
out
pop
xchg
mov
mov
ficoml
mov
push
xor
push
pop
leave
xchg
or
push
test
or
sub
pop
xchg
enter
cli
lret
cld
test
inc
sub
lods
shll
ja
pop
add
cmp
aas
movsb
dec
pop
insl
xchg
xchg
in
jge
ret
fsubs
cli
sar
mov
mov
jns
lods
dec
push
cmp
adc
or
fcomps
nop
mov
pusha
insb
insb
jbe
inc
sbb
stc
movsl
imul
adc
subb
push
xchg
jecxz
push
pop
shlb
cmpsb
mov
push
jno
inc
mov
test
cli
mov
xchg
in
gs
rcrb
mov
enter
ret
cltd
lret
xor
stc
fmuls
orl
cmp
in
dec
jle
sbb
std
cmc
imul
cwtl
rcll
jnp
mov
rclb
loopne
sahf
xchg
mov
dec
push
mov
rorb
inc
mov
dec
test
iret
jmp
xor
fsubr
cmp
add
push
adc
in
pop
cmc
mov
leave
mov
push
in
inc
fidivl
xchg
dec
inc
push
cmpsl
xchg
loopne
pop
test
jl
cmpsb
mov
cli
rolb
dec
push
xchg
push
fsubrs
add
xchg
xchg
lds
sbb
inc
jbe
jg
aam
inc
ja
sub
jbe
pushl
rcl
std
mov
aad
dec
faddl
xchg
aaa
jmp
fstps
aad
sbb
xor
pop
aam
push
je
nop
dec
xor
ss
popf
adc
push
std
and
ja
xchg
cmp
cmp
out
stos
pushf
or
xor
fdivrs
cmp
mov
cmc
out
mov
js
lcall
mov
sub
pop
jns
and
mov
iret
pop
cmpsb
dec
inc
cmp
sub
outsl
sub
popa
lock
xor
pop
push
mov
sub
loope
push
cmp
and
rcr
loopne
mov
cmpb
js
daa
push
jge
rcrb
cmovge
scas
aam
lods
lret
mov
sti
mov
lahf
dec
mov
sub
roll
aaa
lea
js
jae
andnps
inc
add
cmp
int
lock
leave
sbb
sub
lret
scas
stos
into
lret
inc
fwait
shll
xor
pusha
mov
mov
pop
out
lahf
xchg
test
inc
jg
es
daa
jo
push
mov
mov
cmpb
ds
ds
cmp
xor
lret
fcmovu
mov
daa
hlt
popa
insl
mov
imul
mov
cmp
ret
jae
dec
out
mov
add
ja
adc
inc
push
andl
adc
or
mov
enter
mov
jno
imul
pop
xchg
lds
movl
add
sbb
sub
xchg
lods
outsb
mov
add
imul
and
pop
inc
test
push
xchg
xchg
xchg
xchg
enter
dec
movsl
mov
mov
xchg
gs
leave
mov
jno
mov
out
jno
pop
adc
lret
mov
loopne
icebp
mov
jae
shrl
cltd
fcmovu
jp
cmp
leave
dec
inc
xchg
dec
orl
mov
mov
cs
scas
mov
das
jge
jecxz
jle
adc
dec
mov
stos
cwtl
pushf
jl
popf
enter
stos
cmpsb
inc
sarb
pop
and
inc
scas
daa
mov
push
mov
shrl
pop
loop
fistl
ljmp
mov
fdivrs
test
xchg
sbb
push
sub
fdivs
mov
divb
shll
push
mov
xlat
out
add
lock
rolb
cmp
mov
out
andb
push
adc
lret
iret
adc
cmp
lea
mov
dec
dec
int3
adc
inc
or
dec
adc
adc
add
inc
xor
lret
cld
loope
cmpb
pop
dec
sbb
pop
mov
out
cli
addr16
jmp
aam
push
cmp
mov
lea
mov
data16
sbb
popa
or
negl
jl
cmp
pusha
rclb
xlat
jbe
mov
jp
std
push
or
mov
xor
pop
fwait
dec
gs
adc
outsl
push
push
scas
xchg
xlat
test
popa
ja
push
mov
cld
and
sbb
adc
sub
les
xor
outsb
dec
push
push
aad
mov
aad
test
iret
sub
add
cmpsb
orb
iret
in
jns
mov
pop
je
inc
test
xor
or
repnz
jecxz
dec
movsl
mov
gs
and
adc
mov
lahf
sbb
sbb
mov
cmpb
popa
rcrb
mov
sahf
out
sub
mov
and
inc
les
int3
ss
loopne
out
ss
push
cmp
adc
test
stos
pop
lahf
or
popf
int
mov
imul
inc
xor
pop
adc
jl
jle
stos
mov
mov
or
sub
adc
out
test
sbb
sub
inc
mov
xchg
cltd
inc
xchg
jmp
in
and
ljmp
lds
inc
dec
into
pop
xor
movsl
jmp
or
fistpl
pusha
xor
xchg
pop
add
hlt
data16
daa
push
add
mov
iret
pop
sub
loopne
push
lret
push
jbe
lcall
jno
lahf
lret
cli
in
sbb
inc
sbb
or
das
inc
mov
insl
or
jb
out
pop
movsl
adc
jnp
xlat
adc
pop
mov
mov
insb
adc
cmc
loope
test
and
cmpsb
adc
jge
push
adc
mov
mov
sar
out
sub
test
into
leave
adc
push
rclb
arpl
pop
or
std
insb
add
mov
fldcw
sbb
sub
xchg
cmp
pop
std
inc
mov
mov
imul
popa
shrl
pop
inc
pushf
xor
pop
shll
sub
push
xchg
jae
add
imul
cmp
xor
xchg
sub
insl
inc
ds
inc
and
pop
int
inc
sub
or
leave
xor
lahf
repnz
sbb
sbb
test
shlb
lret
push
pop
sbb
sahf
imul
or
cmp
xchg
cwtl
in
loopne
outsl
lahf
out
arpl
jbe
add
scas
gs
jae
lret
js
mov
xchg
outsl
sbb
sbb
pop
lods
out
jle
pop
push
mov
fidivl
mov
fldcw
and
loopne
and
mov
repnz
pop
xchg
xchg
stc
ljmp
and
xchg
pop
daa
jbe
xor
push
jle
inc
xor
je
fisubl
push
mov
jns
stc
add
xlat
lock
jmp
cmpsb
push
out
lcall
imul
out
xor
mov
ljmp
and
xchg
push
out
stos
leave
push
leave
jo
clc
mov
sahf
add
sbb
add
jmp
dec
pop
mulb
ja
clc
mov
shl
scas
pushf
adc
cmpsl
cmp
mov
inc
xchg
repz
add
xchg
rcr
xchg
xchg
sbb
sub
scas
lock
lods
add
imul
mov
sub
lret
test
inc
adc
inc
ret
repnz
and
out
add
push
imul
pop
jmp
push
add
in
imul
test
scas
ret
push
scas
add
fistps
lret
jle
jbe
sbb
xchg
and
out
sbbb
outsb
pop
cmp
dec
aaa
mov
test
addr16
inc
push
pop
mov
out
jg
loope
stc
inc
or
sbb
and
dec
jbe
fisubs
sbb
adcb
shll
cmp
inc
test
adc
js
cmp
lods
fisttpl
push
sub
sbb
pop
lods
or
pop
ljmp
movb
cmpsb
pop
dec
stos
loope
fcomps
movsb
call
fdivrl
and
pop
jo
in
sbb
rclb
inc
loop
mov
mov
cs
insb
lret
arpl
jp
jle
movsl
aam
pop
pop
push
add
or
icebp
jmp
lods
in
xchg
aad
cmc
cmp
sbb
push
cli
jge
pop
test
ss
sbb
push
lds
jmp
adc
mov
xor
fwait
inc
mov
jle
inc
pushf
mov
movsb
sub
push
sbbl
aas
inc
jg
movsl
dec
jno
jge
dec
mov
out
push
jg
jmp
outsb
mov
mov
mov
push
test
dec
in
cmp
movsl
jae
stos
mov
nop
cmpsb
push
cmpl
movsb
xchg
dec
testl
push
clc
or
adc
jns
push
js
mov
or
mov
popa
jns
loopne
je
test
clc
fstl
adc
adc
fwait
sbb
inc
cli
rclb
imul
and
jl
mov
shrb
sub
mov
les
imul
les
pop
and
mov
gs
test
sarb
mov
aam
mov
jecxz
cltd
ja
out
call
xchg
and
mov
out
inc
push
pop
stc
jmp
mov
pushf
mov
add
test
aaa
lds
iret
int
iret
sub
faddl
or
or
arpl
lds
out
ljmp
dec
fidivs
mov
adc
or
jmp
add
and
xor
or
test
incl
push
xor
dec
mov
stos
mov
add
pop
sbb
jge
in
pop
mov
clc
pop
push
test
mov
inc
push
std
inc
mov
mov
mov
jb
mov
test
push
jecxz
jge
scas
pop
sbb
push
inc
adc
hlt
xor
movsl
xchg
jb
push
adc
int
in
gs
mov
fnstsw
xrelease
adc
push
jmp
fwait
subb
int3
jg
test
mov
ss
out
cltd
dec
call
xchg
das
dec
adc
mov
inc
into
test
dec
push
aam
shlb
jbe
stos
iret
fidivrl
insl
ficomps
push
dec
movsb
push
mov
movsl
lea
add
jp
dec
xlat
movsl
insb
aaa
shrl
outsl
ljmp
pusha
movsb
add
rcll
or
add
add
outsb
enter
dec
lret
shlb
adc
movsl
mov
ficomps
fcmove
xlat
data16
stc
jb
sub
jnp
jb
dec
repz
sbb
out
loope
adc
ficoml
sahf
fcoml
bound
xchg
or
scas
outsb
jbe
adc
xor
xlat
and
int
mov
movsl
xor
add
js
leave
inc
sti
sub
mov
stos
dec
mov
jne
dec
out
xchg
xchg
sbb
adc
inc
aam
add
adc
lods
loope
data16
mulb
xor
pusha
push
dec
add
mov
les
push
sbb
dec
jmp
and
outsb
inc
out
dec
imulb
adc
pop
fnsave
xchg
fistl
sub
sbb
cmp
xchg
hlt
insl
rcll
push
in
mov
ret
xchg
ljmp
out
mov
imul
cltd
jle
orl
mov
adc
cmp
bound
pop
adcl
sbb
mov
inc
cwtl
mov
jo
dec
jmp
cmp
or
fsub
xor
das
adc
adc
jo
xchg
popa
sarb
ljmp
pop
jg
loope
ret
adc
mov
and
jns
mov
cmpsb
add
sbb
push
out
popa
pop
out
rep
loope
inc
or
iret
outsl
adc
cli
cmp
mov
pop
push
xor
cmp
or
and
cmp
fsubs
arpl
push
push
cmc
aad
add
outsl
mov
sbb
pop
jno
iret
mov
out
andb
cmc
enter
mov
jb
loop
gs
mov
nop
hlt
mov
dec
cld
xor
popf
mov
int
iret
loope
xor
out
inc
icebp
jecxz
sub
out
xchg
xchg
in
or
aam
fiaddl
out
das
jae
rorb
adc
loopne
lahf
fisttps
jg
sub
add
mov
ret
mov
add
sub
sbb
and
movsl
and
dec
pop
cld
sbb
gs
push
andb
test
pusha
je
lods
lea
or
and
pop
mov
insl
mov
out
mov
mov
mov
aaa
fmulp
fnstenv
or
add
cmpb
ss
push
aas
cld
les
scas
mov
cs
jp
push
in
inc
jae
fucom
aas
loope
lret
aam
xchg
scas
lea
xor
popf
push
cmp
aaa
inc
add
fwait
or
mov
cmp
rcl
call
mov
loopne
pop
int3
mov
xchg
xchg
cltd
ss
test
sbb
clc
sbb
mov
out
add
push
xchg
notl
stc
adc
bound
ror
sub
lock
lods
sbb
dec
sbb
mov
ja
inc
xor
cmpsb
xor
int3
sub
lahf
pop
mov
pop
mov
addl
mov
loope
fisubrl
mov
std
sbb
and
jne
test
shl
jl
xor
lret
mov
ret
fdivs
data16
cmp
mov
sbb
into
xor
js
lock
inc
lret
fisubrs
bound
stos
cmc
mov
dec
push
int
pop
xchg
iret
imul
adcl
mov
lds
mov
mov
int3
xchg
or
cmpl
js
sub
mov
shrl
in
xor
push
cmp
sti
xchg
jl
xor
idivb
jns
out
push
fucomi
sub
scas
cmp
mov
add
dec
pop
stos
mov
dec
test
cmp
sti
mov
add
inc
jge
push
pop
mov
jl
pop
aas
inc
out
cli
cs
dec
gs
add
and
inc
mov
add
push
cltd
mov
cld
add
xchg
call
lcall
fcomps
mov
sub
leave
xchg
es
inc
out
sahf
cli
mov
insb
pop
lahf
cmp
or
outsb
inc
push
cltd
jno
dec
pop
mov
enter
push
push
push
mov
mov
jno
insb
jne
mov
mov
and
test
loop
out
inc
push
dec
dec
jb
xor
fnstenv
icebp
je
pushf
or
fsts
int
pop
mov
adc
repz
in
jbe
mov
or
sbb
icebp
fisubrs
mov
cld
es
sbb
xor
mov
js
push
bound
push
shrb
xchg
cwtl
insb
cld
ljmp
stos
push
or
js
push
out
ss
mov
pop
xor
pusha
cmp
js
data16
xlat
jmp
jae
out
mov
jo
dec
jl
pop
mov
mov
mov
add
jnp
test
and
pop
ja
jnp
aaa
fistl
sbb
fldt
mov
aaa
pop
mov
lretw
mov
int
int
xor
das
cmp
sub
adc
gs
mov
imul
sub
mov
gs
stos
pop
aas
imul
jae
lahf
outsl
dec
scas
xor
dec
stos
dec
xor
sbb
push
push
xchg
dec
aad
xor
cmp
movb
pop
jmp
ljmp
cmp
push
adc
leave
outsb
lods
mov
in
outsl
imul
mov
mov
xchg
jl
loop
jl
lahf
push
scas
stos
aam
hlt
pop
movsb
xor
mull
sarl
lods
rcl
iret
sbb
les
push
pop
xor
jle
les
rclb
cmpb
pop
pop
xor
addr16
not
pop
xchg
xchg
dec
int
movl
sub
xchg
es
push
xchg
pop
add
add
aas
jnp
sahf
lahf
int3
push
and
incl
cwtl
test
mov
mov
sub
or
stos
sub
adc
dec
popa
pop
push
test
mov
out
nop
mov
rcrb
inc
xor
das
xchg
jne
daa
in
out
push
scas
pop
jb
bound
and
lret
out
dec
outsl
vmulpd
in
sub
push
mov
add
cs
fiadds
fwait
leave
aas
lret
test
ljmp
adc
fs
stos
imul
lahf
repnz
jl
or
rol
pop
sub
jmp
adc
push
mov
push
pop
mov
ja
ja
mov
cmp
fistps
xor
movsb
rorl
imull
lods
lds
idivb
in
decb
and
lahf
and
pop
les
add
dec
dec
pushf
dec
lods
xchg
test
gs
pushf
xor
mov
stos
pop
pop
and
aad
mov
adc
push
push
ret
ror
xchg
pushf
jl
dec
test
push
fmull
in
flds
into
mov
dec
adcb
dec
loop
add
repnz
dec
cld
mov
cmp
or
lock
fldl
in
fs
xchg
jmp
lds
add
push
ret
push
push
pop
mov
jl
in
iret
cmp
sti
lret
sahf
fwait
leave
loope
sbb
ror
lods
sub
sub
dec
negb
mov
mov
inc
call
add
outsl
jp
mov
test
clc
inc
pushf
leave
mov
nop
cwtl
xchg
jbe
dec
test
sub
mov
iret
iret
stos
push
pop
jne
lret
jecxz
sub
sub
adc
aaa
sub
add
jno
cmp
jg
lock
mov
pop
jno
in
push
int
sub
test
add
sbb
popa
cwtl
out
xor
cltd
pop
add
fucom
sbb
jo
sub
push
dec
push
push
adc
lock
add
xor
jmp
cwtl
out
out
int
scas
mov
shlb
decl
fcmovnu
insb
mov
arpl
insl
mov
loopne
sub
push
movsb
cmpsb
fs
jp
pop
push
cmp
mov
test
je
and
imul
xor
aaa
fwait
scas
fildl
ss
or
cltd
xor
mov
ss
xchg
mov
add
xchg
insb
mov
mov
push
call
mov
push
xor
imul
movq
xchg
jnp
add
ja
cltd
imul
sbb
mov
mov
xor
pop
mov
hlt
fiadds
inc
mov
iret
in
fs
rol
jp
xchg
push
js
fisubrl
push
fistpll
mov
cld
loopne
jnp
mov
pusha
jnp
pushf
aas
ret
cmpsb
ret
jp
mov
adc
lret
testl
les
sbb
and
or
inc
dec
xor
mov
repnz
dec
test
or
adc
sti
xchg
nop
loop
jecxz
jmp
sbb
fucom
fldt
inc
adc
ds
mov
adc
leave
das
flds
or
cltd
inc
inc
xchg
inc
and
and
loope
inc
pop
mov
push
and
pop
cmp
imul
lods
scas
and
push
xchg
in
and
daa
pop
pop
cmp
adc
stos
dec
dec
cmp
push
lods
enter
loope
fisubrl
xor
inc
mov
fistps
jge
je
push
ss
fwait
pop
into
jmp
xor
lea
sbb
push
xchg
frstor
lret
out
mov
cmpsb
decl
mov
jecxz
pushf
leave
adc
jecxz
or
mov
add
lahf
into
push
lds
dec
pop
int3
stos
inc
repz
into
out
rcr
insb
cli
enter
int3
mov
xchg
pusha
pop
test
mov
pop
cmp
out
stos
pop
pop
mov
xchg
inc
inc
lret
icebp
in
dec
mov
insl
sub
sti
out
push
mov
xchg
pop
cs
jno
rcll
out
in
lcall
aam
mov
sub
lods
pop
dec
push
push
add
adc
xor
lea
push
xchg
cmpsb
mov
and
js
mov
out
in
and
pop
leave
jae
pop
repz
inc
fs
and
add
lea
sub
xchg
mov
outsl
adc
inc
mov
mov
leave
push
push
adc
lods
pop
mov
test
push
mov
push
jmp
fiadds
and
lock
sahf
add
sbb
ret
jecxz
adc
xchg
fs
movsl
clc
xchg
scas
mov
sub
imul
cmp
sub
ds
mov
add
inc
or
addr16
sub
cwtl
cmp
adc
shlb
fisubl
movsb
mov
addr16
xor
imul
sub
or
sbb
xchg
xchg
mov
stc
sub
outsl
sbbl
and
fstpl
mov
int
sub
mov
sbb
sub
xor
mov
mov
add
pop
mov
out
out
into
nop
data16
xor
or
inc
sub
sti
push
push
jb
movsl
pop
fucom
fnstsw
fs
cmp
fsubs
jnp
adc
in
pop
in
lcall
cmp
fwait
cmp
xlat
push
es
xchg
or
sbb
sar
lcall
loop
xor
daa
daa
jae
jne
xor
dec
cmp
sbb
jle
mov
out
mov
push
jge
xor
ljmp
pop
xchg
test
clc
jb
cli
ljmp
mov
xor
jnp
call
and
in
pop
bswap
aad
or
nop
outsb
mov
inc
out
pop
cld
sti
orl
push
repnz
pop
dec
mov
mov
xchg
stos
icebp
aad
jbe
mov
mov
adc
fs
lcall
cmpsl
and
xchg
push
jno
and
add
dec
pop
fidivs
mov
shl
scas
test
rcrl
sub
push
mov
xchg
int
ficomps
push
ret
jl
pop
dec
negl
mov
sub
and
push
inc
loop
ss
cmc
jbe
ss
mov
jle
aaa
push
cltd
sbb
add
jl
cmp
dec
insl
decl
in
and
stc
cs
mov
sahf
pop
les
jp
jno
jmp
mov
movsb
push
and
lahf
lret
fdivp
inc
or
jne
push
in
insb
push
arpl
jecxz
pop
fnstenv
lret
sub
aad
call
push
inc
aas
lcall
cli
mov
push
aam
inc
sub
cwtl
cmp
scas
test
mov
in
xor
jmp
sbb
fldcw
or
in
mov
ret
pop
dec
xor
jae
jbe
xor
mov
mov
ror
xor
add
fs
js
fucomi
dec
and
xchg
int
jb
test
or
repz
rclb
fmulp
jns
out
mov
mov
lahf
sub
xor
outsb
scas
pop
xor
cs
inc
orb
bound
mov
scas
dec
push
movsb
mov
and
jb
jg
push
sti
insl
rcrl
lcall
push
insb
push
xchg
inc
and
sbb
mov
push
add
inc
sub
das
or
lods
pop
sbb
xchg
mov
nop
add
mov
pop
cmp
xchg
push
pop
and
add
jns
sbb
rorb
or
stc
adc
fs
or
loop
lret
mov
adc
cmc
lds
pushf
or
imull
cmp
fldenv
sahf
loopne
cltd
out
xchg
testb
clc
rcrb
sbb
pop
xchg
pop
or
mov
nop
jno
aam
pop
adc
push
fwait
imul
out
xchg
inc
xor
aam
js
xor
popa
popf
and
pop
lods
mov
and
lods
pop
js
sbb
hlt
lret
push
pop
sbb
xchg
pop
push
inc
push
dec
test
push
mov
call
popa
je
mov
fcmovbe
insb
mov
out
test
out
and
scas
and
add
lahf
aad
dec
jl
mov
sub
les
jg
jecxz
or
fisubrs
push
adc
dec
lret
in
sbb
scas
add
dec
inc
pop
mov
inc
pop
aad
je
lods
mov
xor
shrb
arpl
sub
ljmp
adc
stos
mov
test
cmp
mov
jl
fwait
cmpsl
call
fmul
roll
lods
int3
mov
push
xchg
insb
mov
push
mov
jp
mov
push
mov
in
imul
cmpsl
add
dec
out
lds
bound
loopne
scas
dec
xchg
jecxz
int3
insb
cli
test
ja
inc
clc
movsb
iret
ficomps
test
les
cmp
cli
pop
mov
pushf
lods
push
in
movsb
cltd
movsb
jp
pop
inc
jb
fs
mov
and
scas
push
repnz
mov
sarb
rcl
aam
fistps
sbb
dec
ss
lret
jge
jbe
arpl
xor
xor
out
dec
or
test
or
in
lea
outsb
sub
leave
jae
cmpsl
sbb
in
cmp
sbb
aaa
test
push
cmc
loop
lahf
pop
std
and
insb
in
loop
sbbb
ss
mov
sub
pop
cmp
mov
dec
enter
gs
sub
push
aam
test
push
imul
and
int
inc
dec
xchg
aaa
xchg
sub
or
fistl
add
ds
pop
fistpl
inc
out
lret
push
add
add
sub
cmp
xor
mov
jo
cmpsb
pop
push
outsb
or
adc
fistpl
add
sbb
push
inc
loop
mov
sbb
cwtl
push
fcoml
ljmp
mov
sub
movsb
lret
xorl
jmp
xchg
in
add
lret
inc
cs
dec
or
notb
imul
jp
push
pop
xor
jno
loopne
or
fucomip
push
lock
loop
jo
pusha
xchg
movsb
movsb
dec
push
mov
div
loop
test
xchg
gs
inc
lods
mov
adc
mov
fiadds
mov
sub
lea
nop
paddsw
out
push
inc
push
or
in
dec
cmp
icebp
xor
stos
lock
dec
xchg
cmpsl
jecxz
push
pop
cmpsl
mov
add
mov
in
sahf
cmp
xor
lods
jne
and
test
push
das
outsb
imul
addr16
aaa
pop
inc
mov
mov
ret
scas
and
outsl
sahf
or
movsl
sbb
sbbl
imul
jne
pop
dec
xor
rep
jge
xchg
dec
add
and
jmp
mov
inc
lret
fsubrl
xchg
mov
adc
sbb
mov
dec
dec
test
dec
jmp
mov
sbb
addb
incb
cmpsb
imul
adc
data16
lret
les
pop
jae
rclb
sbb
mov
int3
add
in
jmp
inc
dec
add
jb
xchg
dec
dec
cmpsl
ret
cmova
mov
mov
cmp
ss
scas
lods
push
mov
fnsave
or
call
icebp
push
subl
xor
fcomps
rol
or
mov
mov
cwtl
out
sahf
fs
xchg
and
enter
jmp
aas
pop
iret
lock
jo
mov
dec
mov
rclb
mov
es
push
cli
inc
fnsave
cmpb
pop
setbe
cmp
and
mov
mov
push
mov
push
xor
push
and
mov
sub
jg
sbb
jle
dec
fmulp
cli
mov
dec
out
stos
and
push
xor
pop
orl
adc
fildl
add
js
jnp
cli
mov
push
out
jecxz
data16
aad
mov
and
scas
sbb
and
test
enter
mov
jecxz
mov
dec
arpl
or
push
loopne
ds
sub
cld
push
rorl
ds
lret
mov
mov
mov
movsb
arpl
adcb
xchg
lret
adc
iret
das
lret
mov
dec
out
outsl
xchg
enter
bound
test
xor
mov
xchg
cwtl
es
jbe
jg
push
in
sti
leave
sti
mov
sub
data16
imul
pushw
mov
stos
pop
mov
je
pusha
popl
daa
fiadds
ret
push
jne
mov
clc
mov
jg
push
inc
lret
dec
xchg
mov
sub
jmp
fisttps
cli
les
xchg
xchg
js
fs
out
fiaddl
pop
mov
imul
adc
and
ss
ss
adc
cs
cwtl
rorl
les
dec
je
pusha
in
or
sub
pusha
mov
in
sbbb
mov
pop
xchg
cwtl
fwait
leave
clc
dec
es
stos
fsubs
mov
xor
fstl
notb
test
int3
lret
sbb
lds
and
leave
fsubr
dec
and
lret
mov
pop
repz
mov
push
sbb
test
scas
sub
jmp
popa
sub
stc
loope
push
test
push
cmp
cmpsb
xlat
jp
sub
pop
sbb
lcall
cltd
lea
push
rcrl
add
pop
jns
fsubl
testb
push
jl
adc
mov
les
push
aam
mov
inc
les
mov
loopne
lods
pushf
imul
sbb
rcrb
dec
ja
cld
fcmovnu
and
xor
leave
pop
mov
out
or
aaa
dec
cmp
push
or
lret
mov
sbb
cwtl
inc
jne
or
and
xlat
push
insl
dec
fstl
cmp
mov
out
mov
and
popa
push
sbb
movl
in
jnp
loop
cld
and
mov
fildl
sub
lret
xchg
nop
es
inc
inc
push
movsl
xabort
mov
push
aam
xchg
mov
dec
xchg
insb
iret
xchg
insl
xor
fisttpll
xor
add
sahf
mov
and
orb
add
das
cs
fcmovu
adc
sbbb
mov
pushf
sub
sub
inc
shll
push
fistl
add
and
fists
mov
ljmp
pop
inc
add
fstl
mov
int
enter
cs
mov
dec
cmp
scas
js
sub
mov
leave
icebp
popa
mov
ss
lods
aad
pop
and
pop
mov
js
xor
jo
std
or
sahf
jmp
imul
mov
leave
popf
fisttpll
push
xchg
push
cwtl
dec
push
jle
xor
mov
hlt
mov
gs
insl
adc
bound
test
xor
sbb
inc
jg
movsb
outsl
push
xor
cmpsl
mov
inc
mov
jae
add
or
mov
adc
push
subl
sub
adc
xchg
icebp
popa
pop
jle
outsb
repnz
dec
push
mov
push
push
or
inc
adc
xchg
lcall
repnz
sbb
dec
jnp
xor
add
jbe
inc
pop
inc
ffreep
xchg
dec
lock
addb
cmp
inc
cmp
add
xor
scas
aam
dec
sbb
cmpsb
add
adc
dec
push
out
clc
push
cmc
mov
cmp
stc
aaa
dec
iret
pushl
sub
mov
pop
sbb
jo
xchg
sub
mov
sub
jecxz
pop
mov
and
insb
out
imul
or
push
mov
insb
dec
dec
sub
int
fdivr
jecxz
xchg
into
add
fnsave
faddl
push
das
mov
add
jb
or
xor
or
sbb
xchg
push
jns
fwait
push
repz
adcl
mov
cmpb
mov
decl
push
aad
push
push
ja
rcrl
int
in
in
outsb
ljmp
fwait
adc
les
cltd
xchg
inc
loop
nop
fwait
ds
ds
rorl
into
sbb
outsb
ret
testl
dec
add
rol
sahf
dec
dec
addr16
jmp
push
insl
sbbb
mov
lods
mov
les
jmp
pushf
ret
cmp
mov
cmp
and
xchg
mov
mov
sbb
lcall
mov
movsl
icebp
mov
mov
adc
jle
fs
lods
and
lods
push
mov
sub
xor
mov
sbb
cmp
rorb
push
jns
fs
mov
stos
loope
inc
mov
es
cld
xor
inc
push
or
sub
inc
and
fwait
rcrl
addr16
cmp
cmp
subb
dec
adc
lods
mov
adc
push
and
inc
xchg
paddq
add
and
jae
nop
movsb
inc
je
xchg
shl
in
inc
mov
mov
stos
dec
repz
mov
cmpsl
test
mov
xchg
jl
xchg
sub
push
std
inc
push
xchg
pop
push
popf
sub
insl
icebp
pop
stos
in
outsl
test
das
sub
mov
pop
loop
sbb
lret
dec
pusha
es
faddl
dec
adc
roll
out
mov
stos
hlt
jl
mov
jae
insl
sub
lret
jb
mov
ficoms
push
or
ss
lods
ja
test
scas
dec
out
mov
sub
cmp
fcompl
push
inc
push
les
xchg
inc
xchg
test
push
aad
push
mov
jmp
inc
ret
mov
sub
sub
mov
notl
ljmp
popf
out
outsl
add
xor
ds
outsl
sbb
rcl
push
mov
xchg
mov
sbb
stos
or
ljmp
adc
cld
pop
pop
mov
mov
aaa
lds
cs
mov
mov
push
push
push
sbb
push
cmp
adc
adc
pop
popa
and
sbb
inc
xor
and
pop
enter
cmpsb
pop
pop
in
and
pop
into
cmc
sarb
inc
mov
jmp
or
sub
shll
stos
mov
jl
mov
xchg
push
pop
outsl
lods
mov
sbb
xchg
outsb
ret
mov
fidivrl
pop
mov
fsub
sbbb
pushf
jg
push
push
es
rorl
ret
leave
sub
repnz
xor
xor
call
movsb
inc
andl
fs
xchg
pop
shll
mov
adc
xchg
pop
mov
pop
sti
lahf
add
movsl
pushf
dec
inc
outsl
add
mov
dec
adc
rcr
stos
stc
movsl
aaa
dec
stos
cmp
and
loop
jns
lods
xchg
dec
xor
aam
clc
popf
stos
push
subl
test
imul
and
shr
lahf
jae,pn
fistpl
in
add
inc
push
xchg
pop
push
dec
out
cwtl
je
cmp
xchg
inc
jle
pop
shrl
xor
sbb
mov
mov
add
gs
sub
xor
sbb
call
cmp
and
adc
fistps
adc
jp
adc
inc
jmp
add
or
test
shll
sbb
iret
add
decl
mov
shlb
xchg
js
lahf
pop
icebp
jmp
imulw
les
mov
mov
stos
add
or
mov
in
repz
lret
js
mov
xchg
iret
test
test
adc
pop
jecxz
push
xchg
sbb
sub
imul
imul
mov
pushf
or
cmpsl
test
std
sbb
in
mov
cli
jmp
inc
divb
jmp
xor
add
xor
adc
adc
andl
jmp
xchg
jb
icebp
call
cmp
imul
sti
test
repz
push
mov
adc
sbb
or
pop
xchg
ds
in
ljmp
mov
popf
sbb
mov
pop
mov
stos
popf
add
jecxz
test
and
sub
lods
push
inc
push
cwtl
xchg
inc
jmp
mov
lods
das
ja
sbb
xor
lock
mov
iret
ficoml
mov
ljmp
out
dec
mov
shll
cmp
mov
mov
pop
stc
outsb
in
xchg
inc
pop
mov
mov
shr
sub
jg
lcall
cmp
mov
xor
xchg
xchg
ds
cmp
mov
outsl
stos
xchg
stc
hlt
nop
js
mov
and
ret
pop
push
push
js
mov
outsb
xchg
fdivrp
into
mov
out
or
lahf
das
cmpb
and
xchg
and
lret
cmp
pop
lods
cmp
sbb
pop
sub
mov
inc
xchg
insl
jg
sti
ja
andb
add
cmp
push
out
jge
mov
inc
mov
aas
and
aas
repz
leave
pop
and
xchg
dec
sti
fs
sbbb
jmp
leave
bound
cmc
inc
loope
les
push
jl
dec
cwtl
jnp
sbb
mov
insl
adc
pusha
sub
inc
test
mov
aam
out
sub
adc
xor
scas
mov
rcrb
enter
ret
dec
mov
mov
add
enter
mov
repz
jmp
js
adcl
sar
dec
or
lea
movsl
cmp
leave
mov
jno
fadds
or
loopne
cmp
jl
adc
lcall
jno
mov
fwait
aaa
adc
arpl
sti
dec
inc
pushf
test
test
add
arpl
xor
sbb
jbe
repz
inc
dec
sub
sbb
loopne
sub
pop
mov
jae
dec
popa
mov
add
xor
add
lea
nop
pop
mov
jns
das
iret
push
push
decb
int3
mov
nop
int3
adc
outsl
xchg
test
lret
jbe
sub
ret
insl
and
leave
outsb
cmpsb
ret
push
jmp
jns
in
cli
lock
sub
stos
sarl
add
xor
xlat
or
das
xchg
cmpsb
push
arpl
enter
pop
data16
divl
jno
ds
nop
pop
iret
jle
mov
ss
dec
push
dec
lahf
adc
out
dec
jmp
dec
mov
inc
lret
rcrb
inc
inc
mov
imul
aaa
push
inc
mov
adc
jnp
push
out
jecxz
sub
add
arpl
and
loope
scas
lret
sbb
sbbb
mov
mov
shlb
xchg
icebp
or
popf
pop
sahf
adc
mov
lods
movsl
push
mov
in
adc
negb
repnz
dec
push
pop
loopne
outsl
insl
not
or
fs
xor
stos
dec
inc
rcr
push
nop
stc
cwtl
pop
imul
mov
inc
in
les
cmp
mov
xchg
pushf
add
gs
sbbl
cmpl
faddp
sahf
xchg
add
xor
lods
xchg
mov
lods
pop
call
in
mov
jp
insl
outsl
push
jle
or
xor
mov
jg
push
out
xchg
sbb
adc
imul
and
mov
insb
cs
fsubp
and
loopne
push
test
mov
sbb
adc
in
pushf
or
mov
mov
insb
mov
loopne
cmp
mov
test
jge
adc
xchg
pop
movsl
arpl
add
sub
sub
jno
fsts
leave
push
imull
sti
push
jnp
sbb
insl
xchg
mov
stos
jne
dec
repnz
cwtl
lret
mulb
das
adc
push
movsb
xor
call
cmovge
cltd
push
loop
mov
add
jp
cmpsl
aas
movsl
out
into
push
gs
lcall
aaa
push
stos
in
js
lock
cli
icebp
inc
ja
sar
inc
pop
mov
std
cmpsb
jl
cmpl
or
inc
andb
pop
nop
clc
dec
in
xchg
pop
out
push
sub
xchg
fsubs
pushf
pop
mov
ror
mov
sub
push
xor
or
shll
mov
sbb
sub
xor
mov
outsb
mov
mov
out
mov
out
ret
xchg
insl
sbb
mov
in
xor
xor
add
or
pushf
dec
jl
jle
push
int
adc
xchg
shl
jno
sti
push
cmp
fadd
js
movsb
xchg
push
mov
insb
lock
es
sub
xchg
pop
xchg
or
inc
xchg
lret
xchg
je
or
sbb
adc
push
hlt
jge
out
or
mov
test
push
sub
ret
in
mov
popf
pushf
iret
pop
loopne
scas
adcl
into
das
ljmp
xlat
push
mov
or
popa
push
aad
inc
xchg
sbb
and
inc
test
aam
push
cmpsl
lcall
dec
ret
mov
dec
jns
mov
fwait
loopne
cmp
test
dec
mov
lret
ret
sarl
pop
pop
pop
jne
push
test
xchg
js
pusha
repnz
jge,pn
jmp
or
dec
test
sub
inc
shll
cmp
push
sbb
jnp
mov
repnz
cmp
fs
mov
mov
add
jl
jge
imul
leave
pushf
aam
push
xor
loop
mov
in
inc
or
lock
insb
sub
jle
enter
dec
pop
movsb
jp
pushf
mov
push
push
cmp
pop
in
jns
xchg
jno
decl
mov
push
pop
push
sarb
ret
mov
in
pop
jmp
mov
repz
icebp
stc
add
jl
inc
xchg
je
inc
pop
mov
jno
dec
cwtl
mov
and
cli
lea
aad
sbb
mov
dec
sub
loop
mov
cmpsb
sahf
adc
mov
push
test
adc
adcl
mov
es
sbb
test
cmpsl
cwtl
imul
xor
shl
mov
in
mov
push
mov
mov
imul
push
jp
mov
int3
lret
loop
sub
or
out
das
dec
push
xchg
push
jno
in
loope
stc
push
icebp
add
in
fimuls
add
cmpsb
cld
dec
mov
jp
mov
cmc
push
loop
mov
xor
lret
in
and
ds
rorb
cmc
xchg
dec
lcall
xchg
pusha
sub
ja
negb
push
xchg
popf
cli
sub
popl
fistpl
in
lock
mov
inc
inc
xor
scas
jmp
or
mov
pop
sub
xor
lret
out
hlt
mov
in
lock
sbb
sti
jge
ss
mov
mov
mov
cmp
jb
inc
orl
sbb
filds
lea
sbb
dec
mov
adc
push
xchg
and
shl
sub
jns
add
aad
sub
xor
dec
and
ss
insl
repnz
test
insb
fsts
mov
pop
test
add
push
dec
sub
pop
insb
fnsave
and
lcall
fistpl
rorl
iret
xlat
test
xchg
pop
push
or
in
pusha
mov
out
aas
popf
mov
pop
lret
out
enter
rcll
dec
adc
pop
out
dec
jb
pop
and
scas
fstpl
add
sub
cli
test
mov
sbb
pop
rclb
inc
in
adc
idivb
shll
mov
clc
mov
cmc
sub
adc
enter
iret
push
arpl
addr16
push
dec
add
jnp
push
jae
les
sti
pop
xchg
lods
sti
outsl
std
xchg
sub
mov
xor
adc
lock
or
das
mov
mov
les
xor
mov
fisubl
add
jb
sub
int
xor
in
dec
push
xor
ja
dec
das
sub
repz
test
aad
add
dec
dec
push
ret
cmp
lcall
pop
jne
jne
fldenv
jnp
adc
sbb
cmp
mov
dec
hlt
int3
cmc
outsb
xchg
fwait
inc
xchg
out
or
repz
cmp
rcll
or
cmp
push
aaa
scas
mov
jbe
adc
jecxz
jbe
xor
push
fisttps
sbb
and
les
and
jbe
inc
adc
pop
and
in
popa
movsb
add
enter
test
cmpsl
sub
or
aas
pop
and
xlat
push
add
pop
sub
stos
cmp
gs
adc
pop
adc
ret
pop
add
mov
jae
pop
and
imul
into
adc
xor
dec
push
je
xchg
jns
xchg
lret
out
aad
call
dec
test
dec
inc
mov
dec
jno
cmp
pushf
nop
jecxz
rcrb
aaa
adc
mov
sbb
das
add
mov
rol
jnp
fbstp
in
iret
out
dec
mov
lods
cmp
dec
pop
pushf
adc
pushf
in
test
fcomps
loope
mov
mov
cli
subb
jnp
add
adc
sub
fmull
inc
cmp
push
out
push
hlt
cs
and
jae
cwtl
push
inc
jns
cmp
xorb
test
gs
out
adc
pop
loope
adcl
adc
cwtl
test
mov
repnz
pop
jg
les
xchg
cmpl
sti
add
mov
mov
sbb
mov
pop
aas
pop
jp
clc
addr16
movsb
outsl
pop
jecxz
push
sbb
jl
pop
repnz
out
adc
mov
mov
ret
lods
ja
push
push
mov
fdivrl
ja
leave
mov
jnp
dec
hlt
inc
cmp
repz
in
gs
insl
icebp
mov
aad
xchg
movd
rolb
jne
clc
insb
out
mov
mov
pop
popa
and
js
push
insl
jp
idiv
aaa
or
cs
push
xchg
inc
push
jb
clc
test
or
inc
in
lods
xchg
xor
xlat
test
xor
push
mov
cs
sub
sbb
jp
icebp
adc
fwait
in
inc
daa
xor
sbbb
iret
pop
push
lods
push
dec
std
in
jns
fildl
inc
sub
sbbb
mov
data16
test
pop
mov
mov
mov
test
pop
pop
push
push
or
cli
pop
insl
imul
inc
dec
mov
mov
sbb
ss
in
lret
test
mov
adc
or
or
bound
sti
fisttpll
push
loopne
pop
out
push
xor
jg
sub
adc
mov
mov
dec
dec
or
sti
or
pop
push
sbb
fs
sbb
or
test
mov
inc
jb
push
lret
push
cmp
in
shrb
pop
into
int
xchg
sarl
pop
adc
out
insl
inc
mov
push
mov
int3
pop
fwait
cmc
pop
js
hlt
cmp
adc
pop
cli
int
dec
js
ror
mov
in
xor
push
out
int
push
sbb
and
in
das
jbe
push
mov
add
in
push
sbb
dec
jae
subb
test
push
jno
xchg
ja
adc
int3
jg
cwtl
fwait
jae
pusha
jmp
outsb
ds
rol
xor
jp
bnd
cltd
inc
fldenv
shlb
fnstsw
les
movl
cmp
enter
notb
push
cmpsb
shll
clc
sbb
xor
mov
jmp
stc
jle
dec
or
aad
ss
sbb
rcr
loop
addr16
push
jo
loop
gs
mov
dec
add
addl
aaa
clc
fisttpl
sub
push
push
das
lea
arpl
inc
sub
into
add
xchg
mov
bound
mov
jl
les
les
shll
mov
iret
loop
insl
sar
into
mov
mov
in
and
mov
jl
dec
lret
jno
mov
es
ds
sbb
test
out
mov
lahf
jle
sbb
mov
push
dec
je
add
sub
enter
imul
aaa
pushf
xchg
inc
in
xchg
lock
in
pop
imul
jne
jle
adc
test
out
mov
sti
stc
mov
fnstcw
push
dec
dec
addb
leave
ds
inc
push
daa
fisubl
inc
adc
cmp
sub
adc
test
jb
dec
mov
test
xchg
dec
or
cmpsb
mov
repz
push
mov
fldt
mov
jp
mov
mov
aam
not
push
fwait
cmp
pusha
scas
push
ds
cld
dec
rcrb
or
cmp
push
jp
adc
jnp
xor
xor
push
sub
lcall
out
mov
jg
stos
push
adc
mov
mov
or
fstps
jno
add
daa
das
pop
shlb
cmp
out
pop
enter
push
imul
les
int
inc
ret
ds
sub
sub
or
lcall
rcrb
push
add
div
insl
push
out
mov
movsl
aas
call
push
xchg
orl
cmp
mov
or
out
lods
lock
sbb
pop
push
sbb
jge
fldlg2
inc
call
jmp
mov
jae
xor
les
mov
and
mov
std
cmp
les
mov
cli
sti
mov
and
call
lea
andb
ret
inc
push
cmp
or
jle
sbb
aaa
lock
arpl
mov
sub
cwtl
stc
mov
inc
clc
scas
outsb
pop
imulb
iret
jle
shr
adc
and
push
inc
aam
imul
sarl
jg
mov
mov
or
in
dec
frstor
lret
out
pop
mov
es
xchg
push
aaa
mov
dec
dec
pop
add
jmp
test
shr
lret
add
sti
aad
jmp
push
mov
rcrl
or
packuswb
test
ljmp
inc
outsl
cld
adc
pmaddwd
pushf
mov
ljmp
jmp
test
xchg
in
jo
xchg
cmp
lret
lods
aam
cwtl
xor
hlt
insl
and
pop
leave
insb
jmp
outsb
movsb
push
sub
push
lock
mov
aad
mov
popa
in
xor
stc
rcr
lock
lcall
data16
lret
xor
stos
or
pop
mov
or
out
rcrb
mov
sbb
loope
int
dec
inc
jge
in
aaa
ja
icebp
adc
push
add
pusha
aam
mov
push
dec
mov
ss
pop
add
fbld
jge
push
pop
sub
push
pop
xor
cmp
call
cmp
test
cld
les
loop
xchg
dec
cwtl
mulb
push
js
int3
fcoml
sub
or
inc
push
cli
pusha
divl
dec
imul
xchg
jl
inc
xchg
mov
add
imul
test
sbb
push
repz
lea
jns
mov
xor
in
mov
mov
shrl
fistpl
sbb
pop
cmpsl
mov
pop
push
loop
daa
movsl
in
sbb
dec
call
stos
mov
incb
lods
and
mov
or
sub
ret
mov
ficoms
fisubl
push
inc
xchg
je
sti
add
cmc
clc
dec
cmp
xchg
imul
push
pushf
xor
shrl
push
and
and
movsl
rorl
xlat
sbb
mov
cmp
mov
dec
fists
cs
dec
iret
push
hlt
mov
jno
test
into
xor
lcall
xchg
sarl
pop
and
loop
mov
lock
mov
sbb
ficompl
shrl
iret
loop
sarb
inc
inc
pop
sub
aad
andb
hlt
cld
mov
mov
pop
pop
mov
or
repnz
ds
dec
scas
xor
lret
add
out
inc
out
jmp
mov
push
mov
bound
outsl
push
mov
loope
repnz
cmp
sahf
or
pop
scas
mov
push
flds
pop
mov
lahf
xor
push
or
hlt
fnsave
dec
cmp
iret
mov
adc
or
xlat
cmp
jbe
mull
icebp
mov
fidivrl
and
jbe
mov
push
pop
dec
sarb
mov
mov
pop
in
adc
or
loope
jecxz
fwait
ret
out
dec
pop
imul
fcom
outsb
jp
clc
add
xchg
jle
lds
xchg
into
lcall
adc
loop
jge
mov
xchg
and
lahf
cmp
subb
mov
pop
lcall
jae
hlt
mov
mov
loope
scas
adcl
sub
inc
addb
sub
sub
pop
dec
sarl
movsl
sti
sarl
mov
jne
dec
mov
mov
js
dec
mov
xchg
cmc
pop
shll
cmp
jne
jecxz
jo
inc
sub
mov
sub
in
mov
in
inc
pop
xchg
rcl
loopne
jno
negb
push
cmp
or
mov
out
and
cmp
lds
pop
insl
and
xorb
in
lds
sbb
fs
mov
aaa
xor
ret
or
pop
or
dec
fmulp
mov
add
cmp
xor
mov
pop
fmul
addr16
ret
and
cmp
cmp
ret
mov
cli
js
sbb
xlat
pop
pop
pop
out
mov
lret
adc
pusha
popa
adc
std
aaa
repz
insb
mov
push
push
fwait
aam
sub
in
loopne
arpl
or
pop
outsl
rorl
jo
add
movsb
and
dec
xchg
in
mov
sahf
cli
clc
mov
xor
aas
xor
add
and
jl
add
push
pop
arpl
push
into
not
call
fs
hlt
jbe
dec
xor
inc
pop
call
dec
mov
std
pop
ljmp
fists
movsb
mov
cmp
dec
push
aaa
stos
iret
xchg
cmp
testb
jl
jmp
ss
cli
fs
out
jecxz
mov
sbb
or
jmp
mov
jno
out
and
ja
jb
lods
test
ds
jmp
aaa
clc
jmp
pusha
xchg
xlat
or
loopne
inc
sbb
pop
xchg
divb
inc
hlt
cmpsb
push
and
push
inc
inc
xchg
mov
xor
outsb
hlt
lds
xchg
lret
int3
out
lea
jnp
mov
xor
dec
and
mov
fstpl
call
sbb
leave
jge
jb
movsl
xchg
mov
test
dec
adc
fcoml
xchg
xchg
mov
in
out
cmp
mov
into
push
pop
jae
adc
pop
cmp
je
fnstenv
rclb
xor
ficomps
iret
fcomip
ljmp
lock
add
jno
shrb
aad
addr16
mov
push
push
inc
cltd
xor
cld
popf
mov
inc
pop
add
mov
mov
mov
mov
adc
int
jb
fstpt
xchg
loopne
sarb
test
stos
xorb
ds
mov
icebp
stc
movsb
cmpsb
ficoml
fs
ljmp
dec
orb
dec
cmp
jle
jno
push
aaa
nop
dec
cld
int
fstps
aas
xor
mov
push
arpl
or
aad
in
pop
ret
cmp
shlb
fstps
lahf
and
repz
adc
out
cltd
lds
jnp
xor
lea
jp
ljmp
outsb
faddl
xor
xchg
cli
add
push
shll
cmp
ds
adc
lds
mov
shll
enter
cmp
daa
sbb
jb
xor
mov
lret
mov
pop
xor
cmp
cltd
bound
into
xchg
repz
les
dec
dec
loop
mov
hlt
mov
mov
inc
leave
sub
rorb
insl
js
mov
mov
pusha
mov
in
pop
pushf
mov
mov
iret
mov
jge
mov
sub
sar
cmp
add
lods
sub
cmp
jae
jmp
mov
fbld
inc
fstpl
popa
sbb
mov
sub
adc
mov
mov
sub
fmuls
and
add
popf
xor
out
cmpb
insb
mov
xor
mov
movsl
fcompl
or
test
sub
test
inc
jnp
cltd
sub
mov
scas
mov
arpl
das
pop
lcall
pop
jne
push
push
adc
push
jmp
cmpl
popf
pop
cltd
bound
mov
jg
mov
or
jae
push
je
xlat
mov
push
and
aas
jnp
rclb
mov
in
pop
call
adcl
dec
decl
mov
cmpl
loop
mov
jp
cld
call
mov
lods
cltd
sbb
xchg
fucom
jmp
push
loop
ljmp
pop
loope
mov
jg
outsl
dec
xlat
pop
movsl
jnp
subl
jle
and
sub
outsl
xchg
or
dec
lahf
cwtl
inc
lock
lods
pusha
xchg
jb
or
cmp
pop
and
sub
sub
out
mov
fldenv
out
or
ljmp
aad
xchg
fimuls
add
rcrl
adc
jo
cmp
dec
test
sbbb
pop
insb
inc
add
and
cmpsl
in
loop
movsl
mov
lcall
lret
xor
das
sub
scas
stos
add
add
jns
loop
test
dec
popf
adc
jmp
mov
mov
xchg
inc
add
ljmp
xchg
stc
loope
xor
cld
mov
sti
or
xchg
pushf
ds
data16
sbbb
in
inc
fisubl
lods
add
jmp
sbb
movsl
pusha
daa
hlt
jg
daa
sarl
and
and
repz
add
outsb
sahf
dec
inc
mov
hlt
out
pop
aam
pop
sbb
insl
outsl
imulb
lcall
jg,pt
call
scas
aaa
int
mov
xchg
mov
stc
loope
mov
dec
insl
ja
mov
push
lss
mov
das
push
or
fisubrs
fsubrl
int3
cwtl
mov
mov
mov
icebp
push
push
lahf
xlat
add
out
push
int
out
fisubrl
xor
adc
dec
and
mov
or
push
aam
andl
pusha
jns
je
outsb
add
xchg
sahf
insb
div
fs
into
mov
nop
mov
pop
mov
push
mov
add
pop
shrl
jb
outsl
loop
test
es
mov
pop
mov
sbb
test
push
mov
inc
insl
jg
fcmovnb
jmp
sbb
data16
pop
adc
scas
sbb
repnz
iret
mov
xor
popa
dec
and
xor
dec
inc
adcl
sbb
ss
xchg
dec
jbe
mov
mov
sbb
imul
mov
mov
int
enter
sbb
int
and
mov
pop
pop
aas
jl
xorl
xchg
adc
loopne
mov
xchg
notl
dec
aam
push
mov
fsubr
add
lret
movsb
filds
sbb
adc
out
pop
xor
push
orl
imul
push
popf
inc
sbb
or
cwtl
xchg
jge
xor
dec
and
cmpsl
cs
mov
mov
pop
sub
sub
push
pop
dec
js
scas
ja
push
pop
test
mov
xor
push
mov
in
es
loope
lret
pushl
shrb
imull
xor
mov
dec
adc
jecxz
cmp
pop
ret
test
and
adc
out
lods
fisttps
dec
dec
outsl
mov
insl
lods
popa
lods
mov
mov
jae
push
arpl
inc
push
inc
inc
pop
repz
xor
test
nop
lock
sub
in
stos
pop
mov
je
dec
xchg
fadds
js
mov
push
inc
jbe
stos
and
ja
jnp
bound
je
mov
outsl
scas
adc
dec
popf
push
jp
jp
mov
shrl
pop
shll
pusha
push
or
cld
icebp
or
xlat
lcall
into
repz
sub
xchg
cmpsl
push
in
and
imul
mov
xchg
xchg
dec
hlt
pop
ja
ljmp
add
mov
pop
jmp
sub
ja
ja
or
xor
mov
cmp
sbb
mov
pop
dec
nop
pop
stos
inc
push
test
leave
outsl
dec
int
adc
in
adc
or
pop
pop
aad
testl
shll
dec
stos
fs
cmpsl
mov
jae
mulb
incb
mov
lods
jg
pop
jmp
push
fidivrl
or
and
es
mov
mov
add
push
mov
outsb
js
shrb
sti
mov
ss
sahf
mov
inc
sti
repnz
push
xchg
jns
xor
mov
orb
lcall
into
pop
ss
pop
loope
sbb
xchg
shrl
call
mov
sbb
pusha
sti
adc
fbld
insl
es
pop
jecxz
dec
fildl
outsb
xchg
lods
aaa
bound
dec
jle
shlb
bound
jge
lahf
adc
push
ret
mov
ficomps
enter
jne
xor
push
aad
fildll
ds
stos
sahf
movsl
sbb
adc
jle
or
mov
adc
out
cltd
test
outsb
sub
push
arpl
xor
int
int
inc
fildll
sub
mov
and
sub
adc
mov
lods
push
xchg
sub
fcoms
cmp
sbb
dec
in
xlat
lea
sti
inc
xor
or
pusha
hlt
and
mov
fs
pushf
out
scas
pop
gs
js
pop
add
push
call
adc
cmp
dec
xor
inc
adc
jnp
jo
popa
out
xor
mov
mov
leave
popf
sbb
inc
adc
push
cmp
out
test
push
pop
insl
shl
leave
cmp
shlb
mov
mov
sbb
ss
adc
das
and
cmp
insb
mov
in
shl
jp
xchg
leave
in
cmp
hlt
lret
cmp
div
mov
or
mov
cmp
mov
mov
outsb
jl
xor
fstps
enter
icebp
jne
addb
cmpsb
int
push
add
adc
movsb
jmp
push
popf
mov
push
cmp
stc
fadds
int
mov
mov
outsb
jl
sbb
imul
into
out
inc
mov
and
aas
fbstp
jns
mov
jo
loope
ret
mov
mov
xchg
xchg
out
pop
inc
mov
sarl
and
pop
sbb
mov
outsl
imul
mov
xor
mov
sbb
arpl
sbb
mov
call
imul
or
je
les
xchg
stos
jge
and
jbe
je
fdivl
jmp
sbb
or
mov
insl
push
data16
and
cmp
and
pop
addr16
out
xchg
pop
xor
pop
xchg
pop
sti
mov
cmp
adc
and
pop
loopne
mov
mulb
call
sub
enter
andl
aas
push
xchg
out
push
sbb
push
scas
stos
dec
pop
mov
jae
loop
cld
jmp
add
imul
cli
pop
inc
test
out
rcrb
stc
and
and
js
pop
fcomps
ljmp
jcxz
or
mov
out
xor
cli
fldcw
js
sahf
xchg
loop
add
mov
out
xlat
push
add
or
push
mov
lcall
jae
mov
cmp
pop
mov
fidivrl
push
push
jno
ljmp
or
xchg
jle
shll
daa
mov
nop
les
or
or
and
mov
outsl
adc
dec
pop
or
ljmp
jb
pop
push
mov
sbbl
insb
ds
lcall
lds
or
or
dec
add
mov
mov
xchg
out
lock
push
push
std
pop
push
cwtl
insb
dec
in
jno
adc
push
pusha
fwait
push
add
sub
xor
je
xor
bswap
movsb
inc
mov
lret
out
cmp
mov
pop
call
pop
mov
add
cli
push
mov
xchg
cmp
mov
movsb
testb
jae
jp
and
ja
mov
and
add
out
xchg
sub
into
mov
lcall
xor
jge
xchg
insl
in
ss
insl
aas
lcall
div
jne
mov
mov
cmp
gs
test
les
mov
xor
in
mov
dec
pop
hlt
xchg
add
xchg
push
iret
negl
popa
nop
xor
loope
mov
push
jp
push
scas
or
inc
addr16
scas
xchg
mov
pop
ficompl
lea
mov
sbb
pop
inc
in
add
aas
nop
arpl
and
mov
movsl
pop
out
leave
aas
cltd
out
dec
adc
pop
addb
sub
cmpb
sub
in
lret
xchg
xchg
loopne
sbb
xor
in
lds
pusha
dec
mov
pop
std
cmp
sbb
cmp
rorl
mov
push
or
filds
int
fcoml
fld
arpl
lret
fildll
out
out
pop
ds
sub
int
mov
or
int3
stc
lcall
cs
repz
fs
push
pop
cmpl
sub
insl
popa
pop
push
mov
ret
lods
jns
jmp
mov
jbe
sub
cld
xor
or
leave
movsl
sti
enter
into
mov
stos
mov
insl
lods
out
mov
push
outsb
fs
test
jl
in
jmp
lcall
imul
aas
push
ja
jge
inc
fiaddl
cmp
neg
and
push
dec
int
and
cmpsl
imul
cltd
or
movsb
xchg
iret
and
insb
aam
and
cmp
insl
push
pop
sub
dec
stos
mov
fldcw
divb
lods
sub
je
dec
inc
jl
or
imul
hlt
add
mov
cltd
or
sbb
stos
and
sub
bound
stc
adc
inc
and
data16
jl
xchg
test
cltd
test
lods
xchg
ljmp
mov
mov
stc
push
xchg
std
nop
mov
mov
dec
mov
jbe
icebp
push
sbb
adc
movsl
fdiv
mov
imul
jg
mov
jns
fwait
push
xchg
or
pop
lcall
push
arpl
mov
movsl
dec
insl
sub
stos
inc
sbb
push
mov
push
mov
shlb
je
push
fdivl
out
add
pop
lods
mulb
loopne
pop
arpl
pop
fiaddl
pop
dec
pop
aas
sti
test
and
je
jbe
xor
xchg
inc
imul
mov
lea
ret
pushf
inc
pop
aam
pushf
sub
jno
pop
fcompl
inc
roll
pop
adc
jnp
das
ds
repnz
enter
add
cmp
cli
cmp
push
mov
ljmp
mov
mov
push
fildl
ds
rdmsr
dec
jne
movsl
aas
push
loopne
dec
ds
imul
sbb
lods
pop
dec
xchg
fs
dec
sbbl
sbb
insl
cmpsl
and
jbe
mov
push
push
inc
scas
dec
enter
mov
or
sti
dec
xchg
enter
ss
rorb
mov
and
gs
pop
fyl2x
push
xchg
pop
pcmpgtb
testl
inc
push
in
push
cmpsb
mov
inc
or
or
cs
dec
leave
popf
and
decl
inc
inc
rcl
dec
dec
movsb
andb
sbb
repnz
mov
jo
jmp
filds
and
lods
adc
cld
aas
and
dec
xchg
test
xor
mov
loopne
mov
mov
inc
mov
push
push
out
inc
dec
jo
lahf
test
xor
xchg
data16
xorl
pop
cmp
scas
jno
dec
test
pop
inc
pusha
xlat
adc
divl
jmp
inc
jbe
add
mov
sub
dec
dec
xchg
mov
das
imul
out
push
mov
rorl
in
mov
add
or
mov
cltd
sub
pop
mov
cmp
cmp
lods
push
inc
push
or
fcmovb
lret
out
or
out
pop
jg
jg
cld
jnp
jg
pop
cmp
and
imul
sub
ret
orl
inc
stc
ret
push
arpl
adc
leave
out
xchg
repnz
enter
jmp
rcl
jno
jecxz
cmpsl
call
dec
lahf
sbb
aaa
mov
pop
stos
and
jle
int
popf
jb
fistl
xchg
insl
and
mov
cmc
out
mov
xchg
push
dec
popf
or
addl
inc
arpl
cmp
or
scas
or
fbld
and
fwait
es
subl
and
add
mov
dec
lds
addr16
orb
clc
sbb
fidivrs
jno
loop
xchg
cmp
cmp
iret
adc
jl
leave
jb
xchg
mov
hlt
mov
cli
rolb
jge
movsb
jo
fmul
mov
loopne
fbstp
iret
loope
adc
jnp
cs
mov
loope
js
push
data16
mov
or
xchg
mov
decb
push
inc
dec
sub
out
sbb
test
cmp
test
test
mov
gs
xchg
mov
aas
jl
dec
xchg
xchg
es
testb
inc
push
jp
test
mov
jmp
std
and
je
inc
in
jae
xchg
imul
lahf
repz
inc
xor
jnp
imul
dec
cmp
lcall
mov
fsub
inc
sub
test
jb
adc
sub
adc
dec
sbb
jne,pt
out
scas
pop
mov
push
add
push
imul
aam
in
dec
mov
imul
adc
mov
xchg
jl
sbb
ja
jmp
xor
sbb
xor
cmp
in
sub
inc
mov
dec
pop
dec
xor
test
popf
lahf
mov
cmp
stc
sbb
push
mov
popl
movsl
mov
clc
test
cmp
sti
imul
mov
rclb
fsubr
jns
jno
push
xchg
pop
xor
pop
xchg
add
out
test
cmc
stc
lea
push
aaa
adc
sbb
lds
jl
mov
sub
lea
mov
ljmp
add
stos
mov
mov
or
cs
or
iret
scas
cmp
or
test
xchg
xorl
aad
xchg
les
cmpsb
mov
pushf
popf
sub
dec
dec
push
insl
sti
xor
mov
sbbb
iret
testl
adc
push
bound
xchg
cmpsl
sub
ljmp
or
arpl
ja
loop
lahf
addr16
mov
jnp
inc
jg
mov
jae
add
xchg
xchg
jecxz
mov
stc
or
out
push
dec
je
pop
jecxz
pop
cmp
inc
jne
adc
lcall
or
add
clc
mov
ss
dec
adc
push
jp
add
mov
xchg
jg
and
inc
popf
out
ret
push
mov
inc
aas
mov
dec
sbb
cltd
cmpsl
pop
jecxz
lods
mov
dec
xchg
mov
mov
xchg
call
pop
lods
or
xchg
mov
subb
and
pop
xlat
adc
mov
sub
inc
xchg
lods
cmp
lock
sub
sarl
repnz
push
push
insb
jne
repnz
pop
xchg
stos
faddp
sub
push
mov
or
xor
dec
jge
add
call
out
hlt
or
and
lret
in
mov
sti
inc
xchg
pop
dec
adc
imul
push
clc
sub
cmc
icebp
xchg
push
cmp
xchg
pop
loopne
sub
outsb
and
cs
cltd
aad
pop
pop
xchg
pop
gs
fcoml
dec
popf
rorl
push
lret
pop
push
jnp
xor
xchg
dec
sbb
movsl
or
push
pusha
dec
loop
cmp
cmp
lods
rcll
xchg
pop
test
out
subb
outsb
inc
cwtl
dec
xor
and
sbb
mov
arpl
mov
or
fidivl
int
and
adc
loopne
pop
stc
pop
mov
add
stos
enter
dec
and
ja
je
test
pop
cli
jecxz
loop
push
pop
and
pop
leave
mov
ret
les
clc
pop
ljmp
frndint
inc
inc
sbb
push
xor
dec
mov
loope
pushf
pop
mov
jne
dec
xchg
push
sbb
push
in
mov
jnp
inc
jns
mov
lea
cld
and
mov
xchg
inc
push
mov
jmp
mov
dec
pop
iret
mov
xchg
jle
mov
sbb
sbb
mov
pop
lret
stos
xchg
sbb
lock
ficomps
hlt
fisubrs
call
ljmp
push
sbbb
and
jns
test
push
rolb
mov
or
rol
dec
xchg
xchg
xor
mov
jl
dec
push
cmc
aam
dec
jp
cmp
xor
jb
mov
jle
ds
jg
sar
dec
xchg
xchg
pop
jns
movsb
mov
jge
mov
gs
cmp
or
pop
add
scas
in
outsl
ja
add
mov
or
aad
imul
test
in
sub
addb
clc
push
dec
dec
rclb
insb
xor
and
movsb
jo
dec
lret
cmp
mov
or
pop
add
pop
jnp
push
sbbb
mov
sub
jp
out
mov
lds
adc
push
xlat
fdivrs
ss
sub
test
xchg
aam
push
shl
sub
fdivl
and
addr16
push
xor
dec
dec
push
insl
adc
lahf
adc
jge
sti
mov
push
adc
jmp
loope
sbb
sbb
mov
mov
mov
jbe
fs
cwtl
loope
fistpl
insl
adcl
dec
pop
mov
cld
rolb
inc
pop
xchg
fdivs
insl
and
in
cmpsb
cmp
xchg
mov
fistpll
lea
or
ss
add
mov
push
mov
xor
mov
out
cmp
xor
cmp
imul
sub
and
es
cmc
nop
mov
pop
int
mov
mov
sbb
leave
fidivl
shll
add
mov
xchg
sbb
fsincos
dec
rcll
mull
loopne
and
mov
fcoms
sub
pop
scas
cli
adcl
lcall
insl
jle
dec
add
sbbb
sbb
add
xor
leave
mov
dec
rol
mov
stc
sbb
xchg
mov
in
mov
push
subl
push
cwtl
test
das
fwait
xchg
call
fsubl
mov
lods
jo
push
int3
cmc
outsb
mov
xchg
pop
jmp
fisubrl
pop
sahf
mov
je
sbbl
dec
mov
imul
adc
cmp
xor
repnz
add
mov
jl
dec
imul
push
lock
xchg
rcrl
push
lcall
adc
lods
pusha
sar
xchg
mov
mov
lds
imul
jge
xchg
and
adc
mov
out
adc
cmp
addr16
xchg
shll
xchg
jecxz
out
and
pushf
or
fldl
xchg
in
mov
outsb
adc
jmp
rolb
sahf
adc
lods
mov
subl
push
cwtl
sub
daa
push
mov
xchg
in
mov
ret
arpl
jp
or
and
push
dec
les
rolb
adc
mov
and
xchg
fwait
movb
push
out
push
out
into
aas
cmp
fcmovnbe
test
sbb
jbe
jmp
popa
mov
cmp
je
jbe
jno
je
jecxz
imul
loope
add
xchg
jecxz
fisubs
or
rcll
cmp
or
push
jl
fs
xchg
out
sub
cltd
fisttpll
and
sbb
fcmove
movsb
mov
cli
orl
pop
xor
in
ljmp
cmp
mov
lret
rorb
popl
sub
inc
and
cltd
cmp
fs
in
mov
jmp
fs
movsl
pop
adc
mov
or
add
mov
rorl
into
xor
ret
inc
inc
sub
dec
dec
bound
jb
push
mov
sbb
add
pop
xor
stc
push
mov
mov
cmc
pop
jbe
lret
fwait
sub
loope
or
push
sbb
pop
mov
sbb
icebp
cmp
inc
dec
mov
and
icebp
je
hlt
fisubs
inc
xchg
rolb
test
test
repz
test
dec
add
mov
inc
xchg
adc
jg
dec
cmpsb
arpl
xlat
test
repnz
fnstenv
test
pop
and
and
mov
cld
ret
xor
jmp
lea
or
sbb
mov
lret
mov
pop
iret
push
iret
jnp
xchg
cmp
dec
push
scas
int3
cld
inc
gs
jle
dec
sbb
mov
mov
in
daa
inc
or
shll
mov
xchg
insl
dec
pop
outsb
mov
xchg
and
pop
xchg
sub
mov
sbb
jl
fildll
hlt
sti
aaa
loope
sub
mov
xlat
adc
popa
mov
jne
in
int
enter
ficompl
je
xor
sub
lcall
pop
bound
insb
pop
mov
mov
cmc
xor
adc
push
adc
mov
ret
fisubl
dec
aad
sti
mov
pop
xor
xchg
test
jl
les
lds
into
outsl
dec
sub
imul
ret
cmp
mov
jno
andl
and
mov
sbb
sub
xchg
pop
inc
into
jle
jnp
mov
ffreep
movsb
adc
faddl
mov
test
adc
sbb
push
lods
pop
arpl
je
or
jnp
mov
inc
mov
arpl
sahf
lahf
xor
out
jmp
loopne
lcall
fs
sbb
addl
fdivrl
neg
int3
roll
and
lret
push
mov
insb
daa
push
arpl
pop
cmp
mov
xchg
pusha
pop
insl
bnd
mov
xchg
inc
sbb
and
jne
rorl
je
push
lret
popa
dec
pop
and
bound
pop
jbe
lock
cs
mov
push
addr16
shrb
add
nop
mov
mov
out
xor
push
lcall
stos
aad
cmp
jae
ffreep
push
insb
cmpsl
adc
aam
inc
int3
xchg
fwait
sti
lahf
mov
xchg
popa
aas
lea
ret
ret
aaa
xchg
and
iret
stos
add
jmp
inc
ret
and
cmp
mov
and
adc
inc
inc
lcall
and
jnp
icebp
loop
xor
testl
in
rcrb
jge
imul
insb
mov
loope
mov
and
cmp
cmpsl
lods
mov
movsb
std
inc
cld
js
repz
and
jo
mov
sub
mov
or
mov
addl
cli
pop
sub
mov
subb
pop
stos
imul
mov
imul
pop
pop
xchg
dec
fdivr
xor
incl
cmc
addl
int
jg
mov
cmp
xchg
xchg
adcb
jmp
mov
add
stc
jb
xorl
mov
ljmp
adc
bound
mov
cmp
mov
roll
fucomip
fisubs
inc
mov
and
pushf
in
sbb
pop
je
cli
in
xchg
mov
push
std
mov
xor
ds
in
sbb
add
push
add
xchg
rcrb
je
push
pusha
xchg
jg
cmp
adc
icebp
mov
push
cmp
lea
push
adc
int
inc
pop
xor
in
ret
int3
jb
sbb
ljmp
or
cwtd
xchg
into
or
arpl
add
hlt
sub
push
add
xchg
or
out
jne
inc
mov
or
inc
out
lods
or
lea
dec
mov
xchg
lods
stos
and
addr16
cmp
xchg
sub
das
cmp
int3
mov
cmc
in
in
pusha
outsl
ret
add
add
sub
idiv
dec
add
lea
js
inc
mov
mov
jmp
xchg
push
jbe
pop
cmp
xchg
sbb
push
dec
xor
push
sbb
sub
aas
arpl
dec
out
aad
lret
repz
aam
nop
mov
test
lds
in
xor
ret
lds
arpl
rorb
pop
ds
xchg
popf
das
outsb
add
gs
out
cmp
in
xchg
loop
sbb
inc
clc
jl
mov
inc
push
ss
mov
xchg
aad
std
int
dec
push
decl
jg
pop
or
pop
sbb
sbb
in
xlat
sbb
ret
ss
cmp
xchg
or
aad
or
pop
push
sub
movsb
cld
lcall
aas
cmp
mov
xchg
xchg
sub
jmp
mov
mov
cmp
xchg
outsb
jno
lock
outsl
xchg
dec
mov
cld
push
push
cltd
fisubrs
iret
pop
adc
jp
popa
add
outsl
and
call
cltd
mov
loopne
xchg
lods
mov
sub
pop
and
fsubs
xor
adc
notl
push
or
je
cs
push
fucomp
and
call
out
andl
mov
pop
add
ljmp
testb
cmp
mov
xor
aam
pop
mov
cmp
jae
stos
xchg
xor
loop
mov
sub
ret
in
sbb
shr
xchg
or
dec
pop
ss
jle
clc
in
or
mov
xchg
cmc
pop
sub
dec
sbb
mov
adc
mov
repnz
pop
lret
cmp
loopne
mov
push
sbb
mov
aaa
xchg
loop
pop
pop
cmpsl
lock
and
pop
push
pushf
rcll
pop
mov
or
test
scas
pop
push
dec
pop
mov
rcl
sbb
push
push
push
orb
sti
popa
mov
and
rolb
lcall
sub
dec
dec
xor
js
leave
nop
cmp
addl
mov
aaa
loop
test
in
xchg
testl
inc
je
testl
popf
pusha
ds
mov
sbb
jo
addb
add
popa
stc
mov
sub
jecxz
cli
les
aaa
xor
inc
shll
mov
cmp
mov
scas
cltd
sub
inc
sub
in
std
jns
rcll
arpl
xchg
test
lahf
add
adc
rolb
xchg
frstor
xchg
jmp
rcrl
dec
sub
scas
fsubl
lcall
cltd
add
rorb
out
mov
mov
andb
push
inc
shrl
xchg
lods
sbb
mov
cmp
xchg
mov
cmpl
xorb
push
push
xorl
ljmp
out
xor
add
adc
popf
adc
mov
je
call
outsl
push
imul
fs
std
andb
dec
add
ret
pop
xchg
inc
cmpb
mov
sub
test
dec
xchg
pop
xchg
sbb
xchg
jb
shl
movsb
inc
arpl
cmc
xchg
adc
aaa
daa
xor
sbb
sub
outsl
adc
arpl
stos
in
js
in
push
rclb
fidivrs
cltd
data16
inc
ret
fdivr
dec
stos
sub
test
sbb
test
adc
enter
dec
stos
aas
mov
inc
xor
outsl
xor
mov
aas
and
mov
mov
divb
jp
and
cmp
shll
add
push
jge
fxam
sahf
adc
aaa
jg
pop
scas
push
jmp
add
jb
inc
adc
jbe
pop
fidivrs
je
xlat
icebp
mov
cmp
cmp
xchg
rclb
add
fcompl
inc
sbb
int3
pop
cmc
mov
cmp
addr16
pop
in
jne
dec
cmpl
sbbl
jnp
shll
out
and
out
add
rol
push
popf
repnz
addr16
adc
popf
jle
push
or
in
setg
fadds
pop
xchg
jle
dec
xchg
jp
cmp
test
add
jns
stos
pusha
test
cs
jecxz
mov
icebp
fwait
addr16
dec
sbb
cmpsl
mov
fimull
sub
popf
ljmp
mov
outsb
pop
aaa
pop
setae
push
gs
out
jo
and
insb
xchg
pop
bound
mov
sarb
mov
fcmovnu
lock
mov
repz
push
inc
les
pop
call
cmp
jb
test
jle
pop
in
out
cmp
jmp
daa
mov
cmp
cld
jnp
and
xchg
aad
pop
cwtl
fdivrs
out
lret
or
in
arpl
sarb
ljmp
cmp
add
and
lods
inc
lds
push
sbb
lret
nop
xchg
mov
mov
add
dec
lahf
add
outsb
xor
mov
test
sti
sbbl
call
or
subl
jo
fcoml
fdiv
sbb
add
in
cmp
cld
mov
lods
decb
push
cmp
fucomip
cmp
xor
jmp
into
adc
mov
out
insl
clc
and
aas
cmp
mov
or
aad
sub
movsl
push
xchg
loopne
mov
lahf
insl
jecxz
stc
mov
cmp
pop
mov
ss
adc
add
repnz
and
lahf
roll
lock
mov
repnz
ljmp
mov
lcall
sbb
lahf
stc
jb
mov
aam
xor
lock
jge,pt
pop
sbb
jle
js
into
test
jo
dec
test
sub
fnstcw
sub
cltd
aas
push
test
int
cli
stos
jbe
xchg
mov
and
loop
xchg
jg
or
out
xchg
xor
std
cmc
fs
sar
mov
pop
push
cmp
mov
aam
push
ljmp
cmpsl
add
lahf
mov
rcrb
clc
imulb
cmp
adc
movsl
dec
or
clc
frstor
inc
or
mov
sbb
pop
enter
fisttpl
aas
mov
xchg
fldcw
adc
push
jne
or
gs
add
pop
adc
jae
fistps
push
iret
fwait
sbb
lock
xchg
mov
pop
ja
cmp
fadds
int3
jb
cld
dec
popf
pop
mov
xchg
icebp
inc
sub
test
mov
test
jae
jmp
jnp
adc
je
shll
dec
ret
sub
sbb
or
fdivrl
rcll
dec
test
mov
dec
gs
add
out
popa
cmpsb
mov
jo
dec
loop
cli
push
adc
sbb
pop
fld
nop
fdivrl
mov
aam
testb
fisubs
popf
shr
push
lret
sti
not
sarl
popa
mov
and
rclb
mov
sbb
or
jecxz
xchg
push
cmpsb
mov
sbbb
scas
in
enter
dec
sbbl
sarb
lods
insb
sbb
into
cli
mov
push
lds
xchg
cmp
out
imul
insb
cltd
mov
movb
data16
xor
cmp
add
rcrb
fidivs
cmp
mov
mov
pop
cmpsb
int3
sub
aas
cld
dec
fstps
sub
repnz
sub
jmp
mov
inc
push
mov
loopne
ret
fwait
pushf
adc
int3
mov
js
cltd
push
mull
dec
shlb
leave
sbb
clc
fisttps
dec
notb
ret
mov
int3
subb
sub
xor
nop
js
or
adc
pushf
xchg
loope
mov
xlat
mov
daa
push
adc
mov
and
dec
clc
icebp
add
or
addl
js
iret
xor
loopne
lods
jno
xor
lret
xchg
mov
loope
call
aad
sbb
gs
inc
pop
cmp
icebp
aad
imul
adc
loope
xchg
int
jle
xacquire
mulb
imul
aaa
add
lods
sub
cld
pushf
test
ss
mov
ja
out
xchg
mov
adc
sbb
imul
pop
ret
pop
mov
xchg
inc
cli
jmp
les
xor
repz
aas
lcall
inc
sahf
lcall
inc
cmp
adc
in
into
movsl
sbb
and
lcall
fbstp
jbe
push
popa
pop
dec
pop
insl
xchg
cmp
mov
popa
fistl
xchg
jns
xchg
pop
lahf
arpl
cwtl
push
repnz
dec
dec
cmp
push
inc
sub
push
inc
aam
mov
jno
inc
inc
andl
aas
jg
bound
daa
in
ja
adc
popf
xchg
mov
lea
out
add
and
jns
ret
adc
fcmovb
addl
sbb
push
push
xor
or
jo
mov
or
stos
test
mov
adc
sub
jne
aad
xchg
das
mov
xchg
inc
rolb
mov
lahf
arpl
rolb
fldt
mov
adc
push
stos
mov
inc
cmc
mov
inc
outsl
xchg
cmp
jmp
addb
imul
fs
lods
add
int3
dec
filds
sbb
push
and
cld
and
ret
pushf
cmp
subl
or
xchg
xchg
cmp
xchg
xchg
sahf
push
pop
popf
dec
pusha
std
stc
fisttps
adc
pop
xlat
outsl
jg
lock
cmpl
mov
cmp
mov
aas
pop
sub
push
cmp
loop
and
bound
rcl
pop
sbb
mov
nop
mov
pop
xor
push
cmc
in
mov
xorb
mov
dec
push
dec
repz
outsb
fsubrl
je
out
scas
fnstenv
cwtl
push
jns
mov
pop
out
sbb
pop
outsb
jmp
and
fdivrs
movsl
mov
dec
incb
notb
pop
popf
movsb
ds
mov
push
imul
xchg
dec
pop
add
push
or
adc
bnd
xor
sub
daa
sbb
xchg
scas
xchg
jns
jp
jmp
loopne
sar
sbb
rolb
das
cmpsl
or
jae
test
je
out
imul
ss
xor
jbe
adc
ss
pop
adc
outsl
mov
loop
in
lea
sbb
mov
xor
or
mov
mov
fmull
mov
syscall
pop
add
push
sti
and
ret
and
lret
scas
jp
add
jb
imul
jne
fldt
sub
repz
push
repz
mov
movl
pop
push
xor
and
test
jbe
push
xor
sub
jnp
jnp
mov
je
das
lcall
iret
popa
jne
scas
out
adc
clc
imul
test
xchg
es
pop
sbb
push
mov
les
lods
addr16
stos
mov
ror
mov
xor
mov
pop
xchg
js
push
xchg
and
scas
lret
pop
or
dec
ds
test
into
and
aad
inc
push
mov
bound
mov
fisubrl
mov
mov
mov
push
mov
xchg
jl
jmp
iret
into
lock
add
fistpll
mov
test
pop
sub
and
mov
nop
push
cmp
pop
sbb
loop
mov
inc
pop
test
mov
fsubrs
lcall
popa
push
and
jns
xor
daa
add
fidivs
lea
mov
scas
stos
leave
and
scas
lods
test
xchg
imul
fstpt
movsl
jl
xchg
int
mov
push
sbb
mov
nop
aas
xchg
out
enter
xchg
and
call
xchg
push
xchg
imul
push
add
dec
bound
and
mov
mov
outsl
cmpsl
sub
sub
jmp
jge
xor
cmpsb
adc
popa
daa
and
aam
cmp
pushl
mov
daa
lds
adc
cs
dec
sbb
jns
cmp
mov
ficoms
inc
xor
xchg
test
fsincos
pop
dec
add
pop
mov
push
xor
scas
jmp
out
mov
pop
rorl
sbb
flds
aam
xor
xor
xchg
push
loop
hlt
dec
xor
cmp
push
or
pop
inc
push
out
sbb
pop
add
cli
daa
or
mov
lds
dec
popf
sub
mov
gs
sub
insb
xchg
movsb
lea
jmp
cmp
push
or
adc
add
push
jg
icebp
mov
xchg
or
mov
pop
pop
mov
mulb
sub
enter
loope
sbb
mov
pop
nop
dec
push
out
adc
mov
adc
rcrl
lahf
test
sbb
jo
int3
fdivrs
and
je
shll
push
add
xor
cmp
sub
mov
fmul
and
es
rorl
cmp
stos
test
inc
inc
mov
sti
sub
sub
jnp
add
inc
or
inc
hlt
sub
jg
cmp
add
je
jmp
add
gs
lcall
gs
and
std
jb
dec
inc
aas
sti
out
push
dec
pop
das
sub
dec
adc
jl
fwait
xor
leave
jecxz
push
out
xlat
arpl
xorl
cmp
inc
insl
movsl
or
mov
sbb
stos
lock
add
mov
and
mov
pop
mov
and
stc
mov
cmp
icebp
and
mov
xlat
dec
and
xor
mov
mov
add
lret
push
adc
jae
add
pusha
arpl
pop
ret
and
jmp
ss
out
pusha
cmp
xlat
push
dec
mov
inc
xchg
insb
cld
loop
xchg
jl
test
call
pop
popa
stos
test
cmp
lds
push
xor
push
bound
and
jno
scas
mov
aam
in
sub
test
xchg
stc
out
mov
or
jbe
xchg
push
cmc
adc
adc
rcll
std
test
mov
insl
mov
ret
sbb
cmpl
xor
sub
popf
mov
inc
dec
test
scas
pop
loop
aaa
iret
mov
inc
lahf
pop
or
imul
push
stos
out
or
fcomps
cmpl
xchg
outsl
addr16
sub
aad
fldl
xchg
adc
lret
adc
push
cmp
andl
btc
cmp
mov
movsl
cld
lock
adc
std
subb
cmp
call
lahf
mov
imul
inc
jecxz,pt
jg
jg
repnz
sub
out
scas
loopne
dec
ret
lret
into
xor
mov
dec
xchg
mov
rcrb
push
sbb
jle
sbb
jno
mov
inc
pop
popa
jbe
jo
dec
sbb
das
jo
sub
push
rcll
mov
push
mov
sbb
jl
and
movlps
jae
pop
lock
aad
lock
pop
ficomps
loope
lds
sahf
dec
pop
sub
inc
lea
xchg
jns
in
adc
jl
cmp
xchg
daa
mov
sbb
test
out
js
dec
push
aam
lods
adc
inc
je
adc
nop
mov
mov
shrb
mov
out
mov
in
arpl
cli
pop
jp
add
cld
test
sbbl
sub
rorb
shrb
and
ret
adc
mov
xor
ja
pop
or
fmuls
adc
cmp
pop
cli
pop
sub
lret
and
sti
rcll
mov
sti
mov
sub
mov
rolb
pushf
sbb
ret
popf
xor
and
and
ljmp
xor
imul
je
add
mov
imul
sar
out
push
mov
stc
mov
sahf
pop
adc
jns
insl
mov
into
scas
mov
ss
hlt
call
adc
daa
xchg
mov
sbb
addr16
out
ds
xor
dec
pop
in
adc
int
xchg
icebp
mov
test
mov
xchg
push
jbe
addr16
iret
jae
dec
dec
jecxz
xor
cmp
std
sub
pop
aad
add
jnp
inc
imul
add
adc
movsl
cmp
andb
push
mov
int
mov
gs
loopne
jne
femms
push
and
pop
adc
test
push
stc
xchg
push
xchg
dec
push
or
scas
or
jbe
pusha
mov
sub
hlt
imul
test
mov
mov
in
ljmp
dec
sub
add
xchg
xor
push
daa
push
push
fmuls
adc
mov
pop
aas
xchg
jns
jae
pop
xchg
dec
outsb
cmpsb
sub
or
and
xchg
push
add
stos
push
pop
std
push
in
mov
sub
out
testl
mov
xchg
or
ret
and
jecxz
inc
xchg
mov
js
sbbl
adc
in
jge
in
xorb
cmp
loope
fisttpl
add
in
stc
xchg
sbb
ret
cld
or
rclb
xor
call
cwtl
mov
pop
add
adc
jae
sub
addl
pop
mov
mov
xchg
in
lahf
lret
fsub
inc
subl
sbb
pop
or
mov
aaa
out
mov
aas
cli
push
int
push
sbb
pusha
pop
outsl
jnp
push
icebp
add
jb
cltd
mov
out
inc
or
jl
xchg
inc
add
mov
or
xor
sti
out
xorl
nop
sub
in
aam
cwtl
jb
lods
xlat
sub
outsb
lret
jo
int
arpl
inc
jecxz
push
pop
inc
dec
rolb
mov
cmp
sbb
ret
jle
ret
xchg
das
xchg
pusha
xchg
mov
inc
repnz
leave
push
sub
test
add
fildl
test
xor
sarb
ficompl
push
and
pusha
loopne
sti
in
ret
inc
xchg
mov
pop
rclb
lret
xor
or
pop
sub
jecxz
sub
int
loopne
cmpsl
fiadds
mov
push
add
sbb
xchg
dec
adc
shrl
test
adc
test
adc
add
mov
xchg
aad
mov
or
ljmp
mov
mov
or
hlt
daa
fcomip
push
sub
insb
shl
and
in
or
dec
das
cmp
push
xor
in
nop
or
cld
adc
mov
ficompl
popl
mov
punpckldq
or
mov
mov
pop
sub
sub
and
shl
ss
xchg
addb
je
dec
das
cmpsl
jae
shlb
xchg
jne
mov
ljmp
xchg
xor
sarb
faddp
cmp
adc
adc
cmpsl
push
sub
inc
xchg
enter
cmc
out
inc
push
dec
je
iret
adc
cmc
adc
int3
mul
cmc
sti
inc
push
cmpsl
decl
std
dec
and
xor
leave
pop
lcall
jno
and
nop
fwait
xor
rorl
dec
pop
mov
adc
xor
add
pop
outsb
xchg
cmp
insl
pop
mov
xchg
popa
cmp
xor
cmpsl
gs
and
mov
jo
inc
je
push
pushf
icebp
movsb
fbld
icebp
sti
lahf
mov
pusha
les
or
sub
cmp
jns
mov
inc
mov
push
xorl
aam
sub
jmp
add
sbb
add
inc
das
lcall
fs
dec
pop
mov
hlt
jp
ja
shrb
push
pop
mov
fldt
pop
mov
push
out
aam
daa
push
fiaddl
xchg
add
cmp
loope
cmp
das
dec
outsb
mov
fdivs
cmp
adc
out
repz
sub
or
cmovo
add
out
movsl
sub
test
push
xor
movsl
test
arpl
sub
cmp
xacquire
cwtl
add
hlt
mov
rclb
lahf
jmp
ds
sbb
mov
ret
push
xchg
dec
pushf
negb
dec
push
lret
ds
xor
fmuls
mov
int
rcr
cld
xchg
pushf
aad
xor
mov
movsl
adc
test
lahf
add
sbb
or
sbb
adc
imul
adc
cmp
pop
out
dec
push
or
dec
aam
rclb
cmp
andl
cli
add
pop
push
sub
mov
or
add
aam
mov
cmp
mov
pop
stc
scas
lret
push
dec
leave
dec
xchg
addr16
mov
sub
js
mov
sarl
incb
add
pop
shll
pop
data16
mov
dec
sbb
mov
jp
mov
into
test
out
lahf
mov
mov
dec
out
inc
out
loop
shlb
rorb
cwtl
shlb
xorl
cs
push
jl
call
inc
inc
hlt
mov
cwtl
cld
fnstcw
and
fistpll
pop
dec
xchg
cmp
sub
loop
stos
mov
dec
pop
inc
xor
pushw
mov
arpl
les
xchg
pushf
sbb
je
mov
jg
adc
pop
adc
inc
in
out
pop
lahf
setp
js
or
bswap
sahf
popfw
mov
or
dec
dec
ds
sarl
pop
aam
mov
lret
int3
ret
sub
out
add
fildll
fcompl
pop
push
mov
mov
std
push
jnp
test
jae
inc
jnp
repz
dec
dec
call
loopne
pop
adc
je
xor
pop
dec
xchg
in
sti
push
pop
mov
xchg
in
fldl
stc
pop
popa
add
fucomp
and
push
xchg
jmp
sbb
ja
lret
pop
inc
subb
sbb
adc
or
xchg
inc
movsl
sub
pop
cbtw
and
setl
ret
xor
imul
setne
mov
xlat
xchg
add
xchg
push
aas
adc
xchg
out
out
std
add
mov
int3
in
bound
call
and
xchg
cmp
xchg
mov
enter
cli
jno
mov
mov
push
xor
push
mov
mov
ret
xor
jns
jge
lret
cmp
data16
sar
mov
mov
pop
sbbl
ret
js
das
add
sub
int
push
mov
das
enter
sub
sub
sub
testb
bswap
ret
add
addr16
fdivrl
adc
push
cmp
std
fcmovb
sub
sub
jle
and
in
pop
jo
xor
addr16
lcall
insb
cmp
insb
mov
xor
adc
mov
lret
adc
mov
and
push
mov
ljmp
cs
xor
xchg
movsb
jno
mov
inc
xor
lret
in
lods
movsb
jno
aas
fdiv
movsl
divb
cltd
ljmp
into
fisttpll
xchg
mov
cwtl
add
outsl
pop
fistps
xchg
adc
fsubr
mov
lock
testl
inc
push
mov
jp
jecxz
lahf
lret
stc
ror
dec
add
mov
mov
xor
outsl
sbbb
mov
sbb
mov
xchg
mov
outsb
and
repz
or
nop
rolb
adc
imull
insl
mov
adc
inc
jnp
pusha
sub
es
test
pop
pusha
xor
or
pusha
sbb
sub
stc
test
les
pop
mov
int3
add
adc
xor
flds
or
lcall
xchg
jae
xorb
xor
out
fildll
ret
lahf
das
icebp
dec
aad
in
jnp
xor
add
fisubrl
arpl
mov
mov
lds
mov
lcall
adc
sbb
lcall
mov
push
shlb
pop
cmovo
xchg
pop
cmp
pop
sbbl
and
mov
inc
or
fmull
in
lahf
inc
lret
lods
lahf
pop
mov
sti
pop
out
or
cmp
cmpsb
dec
adc
push
ret
jmp
insb
outsb
xchg
xchg
xchg
outsl
cmp
dec
ljmp
mov
push
cs
jl
inc
lcall
xchg
sub
test
inc
push
rorb
lcall
push
adc
test
jle
add
hlt
sbb
mov
sbb
fiaddl
cmp
lea
in
mov
or
fs
aaa
mov
add
lcall
mov
and
push
push
inc
sub
pusha
insl
fadds
arpl
pop
xor
sbb
mov
xchg
pop
sti
lock
xchg
fwait
and
sti
xor
jnp
lret
pop
mov
and
jge
pop
sub
inc
bound
sub
sub
sub
movsl
aam
lret
shrl
gs
enter
adc
sahf
jmp
push
cmpsb
lret
xchg
pop
sbb
jbe
repz
addr16
clc
adc
shrl
adc
dec
push
mov
add
pushf
mov
js
js
push
mov
mov
jns
push
lods
jo
in
test
je
or
mov
sbb
sbb
cltd
pop
lcall
cld
fildl
cmp
push
add
dec
mov
sbb
inc
xor
notb
in
and
or
cmp
mulb
xchg
or
jle
fstl
std
sub
not
out
jmp
xlat
pop
xor
dec
std
push
xor
loope
fstl
mov
or
cmc
shl
pop
popa
inc
in
sub
sbb
in
adcl
cmp
xchg
add
adc
jnp
sub
adc
adcb
add
mov
sbb
mov
dec
xchg
gs
int3
cmp
dec
lock
scas
mov
out
shl
add
jae
adc
mov
gs
test
mov
sarb
and
push
fwait
pop
dec
popf
stc
xchg
push
mov
pop
or
mov
js
mov
add
sub
sbb
pop
out
movsb
test
mov
cld
fiadds
xor
xchg
dec
mov
aaa
cli
fsubrs
xchg
mov
aaa
mov
lahf
jnp
in
pop
aaa
dec
adc
xlat
xlat
into
jno
pop
mov
pop
lret
loope
repnz
je
in
out
test
and
sahf
insl
je
hlt
orl
movsl
stos
mov
aam
xchg
lods
sahf
jl
lcall
mov
mov
sbb
dec
in
push
push
js
aaa
xchg
rcl
jbe
sub
or
mov
andl
dec
lahf
inc
jge
inc
or
shl
mov
pop
inc
mov
sub
xchg
call
push
push
outsb
aam
jge
lahf
sbb
lds
jne
lods
sbb
sub
icebp
mov
frstor
std
mov
call
xchg
leave
pop
mov
rcll
scas
iret
xchg
popa
jmp
outsl
test
shl
dec
pop
or
popf
cwtl
repnz
sysenter
sub
test
imul
leave
rcll
mov
call
cli
int3
hlt
xchg
mov
push
stos
cmc
sarb
jge
call
cmp
or
and
and
add
and
push
lods
pop
es
mov
jo
sub
subl
js
xchg
repz
adc
int3
je
dec
push
popa
jmp
jecxz,pt
stos
xorl
and
or
enter
out
xor
inc
xor
aam
test
pop
rorb
mov
mov
loop
jne
addr16
pop
sbb
scas
push
jge
int3
jne
xor
xchg
loope
stos
fwait
sbb
divl
out
pop
jbe
adc
xor
mov
stc
icebp
mov
dec
xor
cmc
addr16
mov
and
push
ljmp
pop
pop
adc
loopne
imul
jg
pop
adc
imul
lock
cld
enter
adc
add
stos
adc
aaa
adc
aaa
or
mov
pop
cltd
mov
in
lock
ret
cs
fldl
sub
sub
rcrl
ljmp
or
adc
mov
mov
jecxz
pusha
mov
sub
jp
mov
sub
mov
mov
addr16
in
pusha
outsb
mov
dec
lods
mov
push
ja
int
jp
xchg
cltd
repz
sub
shrb
outsb
fs
push
fs
dec
cmp
insl
lret
mov
pop
loope
cli
rcrb
sub
rcrb
adc
dec
cwtl
and
int
aaa
xor
subl
push
jae
aaa
push
pop
xchg
sub
pop
lods
mov
jbe
xchg
ljmp
mov
das
dec
mov
cltd
test
ja
jmp
mov
sarl
jp
mov
sub
mov
es
mov
pop
xor
in
or
ret
xlat
or
jmp
push
mov
repnz
aaa
xor
mov
mov
adc
push
jecxz
inc
js
loope
adc
push
lret
out
sub
mov
ficoml
push
cwtl
insb
xchg
or
lret
xchg
cmc
repnz
dec
je
mov
jp
sub
das
fisubs
jp
sbb
dec
scas
sbb
fwait
push
cmc
fwait
notl
and
push
outsl
sbb
out
fcomps
fistpl
in
jne
scas
in
xor
or
jo
imul
sbb
js
sbb
adc
xchg
es
cmovno
out
shrb
mov
inc
fs
jl
scas
mov
cwtl
inc
push
stc
mov
adc
jg
ret
mov
inc
sbb
ja
jae
push
pop
loop
mov
sbb
pop
mov
add
or
in
pop
idivl
pop
lret
mov
mov
fidivrl
adc
inc
lret
faddl
fldcw
push
cmp
push
loopne
subb
movsl
xchg
jmp
mov
jg
xchg
dec
into
das
daa
aad
shrb
jl
xchg
popa
adc
and
push
dec
xchg
cmp
pop
shrd
js
push
push
repz
xchg
mov
and
lods
ret
insb
loop
lret
pop
stc
xor
wbinvd
addl
loopne
pop
or
pop
or
shrl
mov
bound
cmpsb
mov
pop
pop
outsb
dec
cli
fisttpl
xchg
outsl
mov
fstpt
cmpsb
cmc
pop
insl
xchg
ja
in
add
fmul
stos
les
inc
lds
ds
mov
dec
fsub
mov
aas
aad
repz
pop
sbb
lret
mov
std
inc
sbb
sbbb
cmp
data16
lret
rolb
jl
push
subl
mov
stc
bnd
pop
lds
sbb
lods
and
xlat
jb
pop
cwtl
gs
xor
cwtl
sbb
mov
jp
lret
jl
loop
push
outsb
mov
add
pop
dec
push
sbb
or
or
js
jno
mov
mov
inc
or
imul
in
pop
fwait
rcpps
aaa
dec
in
or
xor
out
cmc
jns
jl
xchg
outsb
movsb
mov
in
ja
xor
xchg
and
fldl
adc
hlt
mov
fs
sahf
movsb
pop
cmpsb
jne
sarl
xor
pop
inc
mov
xchg
and
inc
nop
ret
ret
or
scas
and
sub
inc
sub
es
pushl
jb
add
sbb
pop
popa
push
gs
lods
dec
daa
xchg
pusha
and
lods
add
cmp
sub
repz
jne
das
add
inc
jae
jecxz
adc
movsb
pop
aad
pop
fcmovnb
imul
cmp
dec
mov
je
jle
xor
cmpsl
setns
xchg
pop
in
push
xchg
jne
mov
imul
lret
or
sub
jb
xor
shrl
cmp
jae
lret
jmp
xor
andb
int
sbb
clc
jecxz
adc
mov
fwait
sbb
clc
fcompl
add
ljmp
scas
je
ficoml
aas
sub
sub
je
pop
lcall
sbb
dec
xchg
inc
mov
xor
iret
and
icebp
outsl
pop
sbb
jmp
jae
stos
inc
sub
pop
ret
jmp
popf
inc
cmp
jbe
push
jmp
mov
jne
das
jecxz
sbb
dec
aaa
mov
loop
cmpsl
jnp
js
mov
sahf
in
dec
pushf
dec
sbb
je
jnp
push
add
ds
or
das
push
mov
das
stc
jne
sub
jno
aas
xchg
cmp
popa
mov
movsl
xchg
add
cmp
daa
loope
xchg
and
cwtl
imul
sub
mov
adc
pop
mov
aas
add
scas
iret
ds
ds
add
adc
cmpl
or
pop
psubd
push
xchg
es
jns
sbbl
cmp
and
push
rcrb
stos
pushf
fxch
add
cmp
movsb
into
or
sub
hlt
leave
ss
inc
pusha
lock
push
xchg
ret
sub
pop
add
push
jp
mov
adc
inc
stc
dec
cs
movsb
lds
pop
cmp
icebp
test
test
rcr
and
das
sbb
push
inc
jnp
loopne
shl
mov
dec
dec
adc
neg
nop
jle
in
cmp
push
or
lock
inc
fwait
mov
jne
mov
sub
pushf
pop
stos
push
out
cmp
xor
dec
inc
pop
cmp
mov
js
dec
aaa
addr16
test
pusha
cs
cmpsb
pop
mov
repnz
repz
mov
fsubrs
push
lahf
mov
sbb
subl
outsb
sub
mov
pop
pop
mov
mov
stos
mov
dec
cmpps
or
aam
adc
sbbb
in
jmp
scas
sbb
dec
mov
pop
js
in
cmp
stos
jp
inc
sbb
or
call
je
lret
out
dec
push
fcmove
xlat
push
loope
mov
push
mov
data16
je
inc
push
jne
xlat
icebp
lods
andl
out
sarb
or
shr
rorb
sub
and
popf
jecxz
sarb
outsb
daa
cmp
adc
loop
addr16
sbb
mov
lret
cmp
sbb
xchg
outsl
imul
sbb
dec
popa
clc
adc
cli
pop
inc
cmp
mov
jle
popf
jo
hlt
xchg
mov
mov
addr16
scas
xchg
lea
addr16
inc
lcall
dec
add
fcmovnb
sahf
ret
int
push
inc
and
push
cmc
adc
and
dec
cmp
std
dec
jge
jp
orl
mov
cwtl
ja
int
xor
sarl
jbe
push
add
adc
cmp
in
rcrb
pop
sub
mov
leave
mov
in
xor
aam
enter
inc
mov
sub
xchg
movsl
repnz
xchg
mov
or
cmc
icebp
adc
or
or
cmpsl
in
push
and
mov
inc
jo
mov
mov
pop
or
add
push
sub
cld
call
fbld
ss
add
and
iret
arpl
xor
dec
lock
cmp
push
loopne
jo
xorl
cmp
xlat
sbb
imul
rorb
jmp
out
or
adc
ds
pop
cmp
xchg
push
cmpsl
imulb
aad
fsubs
push
lahf
fistl
jne
mulb
sub
out
push
daa
inc
add
movsl
movsl
jecxz
dec
movsb
repnz
xor
adc
test
mov
mov
adc
mov
jge
insb
addr16
leave
rorl
fwait
sarb
arpl
or
sahf
add
addr16
pop
dec
arpl
jl
dec
stos
rcll
mov
mov
enter
adc
push
pop
adc
cld
ljmp
pop
decl
sub
cmp
adc
push
enter
call
inc
push
jae
rolb
movsb
nop
dec
add
mov
fbld
mov
push
imul
lods
rcll
jns
jmp
push
into
cmpsl
fildl
ret
test
push
pusha
test
fwait
enter
out
xchg
dec
fcompl
stc
scas
jg
outsl
sbb
adc
stc
lods
push
outsb
cld
mov
gs
push
adc
xchg
aas
imulb
adc
add
cmp
ret
fmul
and
pop
push
inc
xchg
mov
add
mov
push
xchg
or
mov
mov
mov
pop
mov
shr
test
and
bound
call
or
pop
stos
mov
xorl
insb
inc
pop
addr16
pop
and
das
call
mov
adc
rclb
popf
shrb
pop
aad
ss
std
insb
cmp
cmpl
mov
mov
test
pop
mov
fnstenv
push
push
sub
push
imul
fcoml
or
jmp
aas
lret
in
test
or
ja
enter
xchg
xor
cmp
bound
fmull
xor
addb
mov
psubd
cmp
fisttpll
pushf
in
push
data16
sti
nop
bound
push
mov
push
cmpsl
movsl
daa
inc
scas
loop
push
xchg
mov
sahf
andps
mov
adc
mov
cmp
popf
inc
mov
mov
jl
fcmovbe
xor
loope
idivl
aad
pop
add
cs
int3
add
sub
pop
insl
aas
sub
jmp
pop
dec
pop
clc
inc
adc
and
sub
cmp
cmpsl
pop
add
or
inc
add
cli
push
sti
out
inc
push
scas
cltd
imul
and
push
xchg
mov
push
cmp
or
fsub
add
ds
outsb
addb
adc
call
aad
mov
pop
sub
fsts
mov
jb
mov
jp
in
lcall
iret
int3
ja
inc
jbe
imul
incb
adc
test
mov
aaa
notb
imul
repnz
mov
cmpsb
fsubrl
mov
orb
gs
rorb
aas
xor
cmp
js
sub
scas
pop
popa
fists
stos
mov
xchg
sub
fwait
mov
stos
ds
sti
inc
xchg
dec
aas
or
jg
test
jns
mov
inc
sbb
cld
pop
test
add
and
popf
jl
mov
xor
shll
add
mov
add
out
incl
lahf
idivl
out
pop
rcrl
into
das
fstps
dec
ficomps
jge
fnstsw
mov
pusha
xchg
jbe
pop
xor
jbe
mov
cltd
pop
or
push
aam
hlt
push
rorl
lcall
dec
adc
out
lcall
test
adc
inc
mov
and
insl
in
cli
and
mov
pop
lahf
stos
negb
fstpt
push
mov
push
cmc
xchg
xlat
push
popa
outsb
out
inc
insb
out
mov
mov
mov
daa
jae
jl
push
imull
add
xor
pop
xor
mov
cmp
ss
std
pop
popa
in
pushf
repnz
divl
arpl
xor
sti
xchg
dec
pop
xchg
dec
movsb
fwait
repnz
mov
cmp
cmp
in
xchg
pop
xchg
sub
ja
push
test
or
inc
inc
lret
aaa
sbb
push
flds
jo
lret
adc
sub
push
std
mov
inc
loop
out
fmul
cmp
mov
or
out
repnz
or
xchg
mulb
jo
add
mov
pop
mov
iret
sub
mulb
mov
dec
adc
ljmp
push
and
sub
shlb
push
sub
xor
fwait
lods
and
cmp
gs
into
mov
push
pop
divl
rclb
mov
cmp
dec
int3
aas
ret
jmp
rorl
mov
dec
mov
xor
in
jle
lods
push
bound
or
push
js
mov
arpl
pop
sbb
shr
shlb
mov
addr16
inc
push
jp
and
insb
and
inc
mov
xor
jg
or
jno
es
sbb
pushf
push
mov
mov
jp
daa
sbb
gs
testb
add
push
clc
test
andps
sarb
adc
cmp
dec
dec
xchg
in
jg
stos
mov
cltd
push
jmp
es
pop
aam
int
lret
stos
push
fs
push
push
sbb
sahf
mov
cmp
xchg
pop
cmp
xor
adc
int3
insl
fisttpl
add
jecxz
aas
movsb
stos
sbb
and
arpl
or
cmp
pop
sahf
cmp
dec
sahf
mov
pop
pushf
mov
inc
xor
and
cmpsb
dec
pop
xor
mov
pop
lret
clc
imul
adc
ljmp
test
jmp
mov
pushf
das
mov
mov
lret
inc
sub
hlt
mov
adc
into
push
popf
jne
mov
subl
xchg
xor
and
adc
into
xlat
rclb
push
cmpsl
icebp
call
dec
mov
cmc
sahf
bound
fistl
dec
xchg
cli
sub
loop
and
ds
xchg
mov
fs
push
mov
inc
xor
adc
adc
out
out
scas
leave
sub
stos
das
xchg
dec
push
ja
and
mov
add
lods
sbbb
mov
lock
mov
in
in
xlat
dec
inc
pop
mov
sahf
pop
int
fiadds
scas
xlat
bound
push
hlt
loop
aam
jno
inc
pop
jl
mov
mov
repnz
das
shlb
or
or
mov
jecxz
scas
adc
pop
and
rcl
rclb
push
movsb
xor
cmpsb
idiv
aam
shl
mov
in
ja
cld
xchg
icebp
movsb
roll
clc
adc
sub
jle
mov
scas
scas
jb
repz
sub
lods
insl
shrb
hlt
jl
lock
lods
and
test
pop
sub
adc
adc
push
push
cmp
xchg
cmpsl
push
push
pop
out
dec
stos
shl
jge
in
fsts
add
pop
xchg
sbb
leave
push
push
xor
push
lea
mov
ja
inc
adc
insl
xor
adc
sbb
ret
in
mov
inc
cmp
std
mov
mov
test
xor
and
jl
pop
jno
insb
sbb
stos
cmpsb
sub
add
sub
push
cmp
adc
scas
mov
dec
in
cmp
sbb
imul
and
cmp
testb
cmp
and
in
mov
mov
pop
clc
in
xchg
ljmp
fsub
lods
clc
in
jle
xchg
jl
pop
bound
cmp
inc
cltd
ret
aad
popf
adc
aad
or
out
add
insb
jnp
add
loope
mov
int
in
push
or
loopne
add
add
repnz
popf
push
aaa
mov
mov
aam
out
insw
or
lret
pushf
shrb
fists
ret
mov
cmc
sbb
out
mov
int
repz
fs
nop
rclb
dec
fdivp
cmc
test
xchg
lahf
mov
push
mov
out
mov
outsl
jnp
bsf
xchg
jnp
cmp
jl
fsubrl
xchg
test
xorl
mov
js,pt
mov
fwait
dec
xlat
add
xor
out
jg
dec
out
mov
push
push
mov
xchg
int
sti
sub
xor
out
leave
fs
sub
cmpsb
push
mov
pop
cltd
xchg
shlb
pop
pop
inc
aaa
call
mov
gs
jecxz
and
pop
das
dec
mov
cmc
add
sub
pop
xor
shlb
fwait
pop
push
dec
movsl
inc
pop
adc
xchg
popa
jp
jmp
stos
ficomps
sub
cmp
mov
inc
adc
in
loopne
mov
sahf
shrl
loopne
pop
push
lahf
pop
mov
bound
mov
fsubs
jl
inc
xor
adc
xchg
aam
in
jecxz
rorb
leave
loop
sbb
pusha
push
mov
jnp
cmp
xor
data16
push
stos
dec
in
stos
mov
and
mov
lock
out
cmc
fsubl
jmp
popf
aad
pop
push
aas
or
pop
movsl
pop
cld
mov
aad
add
and
pop
sbb
jo
popa
jb
movsb
clc
pop
fcomp
icebp
daa
outsb
jmp
mov
and
bound
adc
push
ret
push
ret
adc
ja
cmp
push
dec
repnz
mov
jo
mov
jg
and
movsl
push
lds
mov
add
cmp
sbb
gs
dec
in
pop
push
mov
pop
xchg
std
enter
push
xchg
aad
scas
xchg
xchg
mov
push
mov
xor
aas
cwtl
fisubrl
daa
pop
jne
mov
insb
imul
aaa
mov
outsl
popf
mov
xchg
xchg
add
fldt
fisubrs
loop
lret
and
adc
mov
out
fcompl
out
fsubl
or
adc
jo
mov
fstl
add
mov
mov
or
jmp
cmp
sub
lods
pop
jp
xor
fcmovnbe
adc
sub
xchg
cmpsl
bound
dec
in
movsl
out
dec
lock
xor
js
out
lret
loope
or
mov
sub
cmpb
mov
jl
push
xor
nop
test
js
mov
or
cld
jnp
sbb
sti
dec
push
pop
std
mov
cmp
push
lock
stos
out
js
insb
sti
popf
ljmp
int
aam
negb
mov
inc
inc
mov
push
js
inc
cs
out
fildll
jg
push
fwait
mov
adcb
and
pop
lock
pop
or
cmp
push
mov
repnz
or
sbb
push
sbb
jbe
in
mov
sbb
jle
data16
jne
cmpsl
sbb
inc
inc
repz
leave
push
sti
or
pop
inc
sbb
mov
out
cmc
repz
popa
xchg
and
or
xchg
hlt
cmpsb
push
inc
jns
out
mov
scas
sti
add
push
cs
lods
jno
fs
push
fiadds
adc
push
cmpsl
xor
sti
fimuls
dec
mov
or
nop
inc
in
addr16
jmp
gs
pop
xchg
outsb
loopnew
lods
out
xor
sbb
mov
cwtl
out
mov
push
iret
add
lahf
sbbl
xor
sbb
or
shrl
jno
out
movsb
pop
jmp
mov
mov
imul
dec
sbb
dec
mov
mov
push
insb
stos
loop
clc
xor
inc
push
mov
mov
popf
inc
cmpsb
sbb
cmp
mov
mov
test
mov
lods
xchg
or
in
out
jle
dec
jp
and
mov
add
fisubs
adc
mov
jnp
push
fsubrp
cmp
sahf
shrl
aam
or
mov
push
adc
nop
xor
push
aam
cld
adc
push
fldenv
decb
jecxz
out
push
inc
ss
adc
jbe
xchg
jno
mov
inc
pop
mov
xlat
aam
push
jnp
inc
mov
scas
out
daa
mov
push
mov
xor
sbb
pop
jbe
mov
popf
std
shrl
adc
xchg
stos
mov
mul
sub
adc
dec
fistpll
mov
xchg
daa
pop
lahf
xchg
fimull
ret
test
movsb
sub
cmpsl
jae
dec
imul
aas
jnp
push
aam
gs
out
cmc
fldt
faddp
hlt
imul
lcall
mov
cwtl
push
mov
mov
lret
xchg
inc
cmp
and
sti
lcall
insl
mov
pushl
sbb
fimuls
out
ficompl
lcall
pop
insb
outsb
jo
fdivs
sahf
in
test
ja
sbb
push
leave
add
outsb
rcrb
int
and
sarb
push
and
in
xor
pop
jnp
dec
xchg
xchg
mov
or
mov
jecxz
xacquire
push
int3
pop
sti
shl
or
add
sub
outsb
int3
or
insl
aaa
pusha
and
out
mov
sbb
sbb
ja
ljmp
fwait
adc
popl
std
xor
push
cli
cwtl
mov
mov
js
and
inc
cmc
sahf
ja
jp
xor
xlat
arpl
cmp
adc
sub
pop
xchg
out
sub
jp
xchg
mov
imul
pop
pop
ret
fldcw
xchg
stc
stos
or
mov
xlat
sbb
fcmovb
and
in
popa
mov
ja
pop
or
inc
je
out
movsl
std
xchg
add
pop
and
cmp
sarb
out
mov
data16
jo
or
pop
mov
gs
jo
and
mov
aad
loope
cmp
shlb
xchg
nop
loope
cmp
push
push
daa
lret
sbb
xor
test
loopne
push
xchg
enter
push
leave
dec
inc
mov
push
push
call
pop
ss
fs
jl
sub
lds
jle
rcll
add
jo
xor
pushf
adc
jne
shrb
invd
cmc
jbe
adc
mov
imul
dec
jg
sub
ror
fisubrs
adc
sub
sub
addb
mov
adc
push
imul
add
jae
cli
cmp
mov
mov
ljmp
cs
push
clc
subl
jecxz
aaa
orb
xor
int
mov
adc
sub
jle
mov
mov
out
sbb
inc
pop
out
jmp
pushf
jp
in
add
lock
stos
inc
sbb
mov
and
int3
xor
lret
in
imul
aas
rcrl
dec
push
dec
das
aad
jno
mov
xor
in
scas
fcomps
movsl
push
cmp
into
out
cmc
adc
out
jmp
jle
movsl
sub
loope
pop
jle
xchg
test
dec
aad
or
sub
inc
jle
int3
sbb
jno
mov
mov
pop
lods
push
out
push
push
add
jb
or
dec
cmpsl
fildll
iret
ds
and
mov
mov
ficoml
rorb
loopne
push
aad
and
mov
pop
dec
mov
mov
dec
cmp
xchg
movb
push
clc
in
call
ficompl
fs
arpl
sti
notl
dec
dec
jnp
inc
mov
xchg
mov
mov
ffreep
in
xor
jo
in
iret
inc
cwtl
push
mov
fstl
addr16
js
movsl
push
dec
pop
nop
pusha
cmpl
icebp
outsb
sbb
mov
jbe
xchg
sbb
inc
inc
mov
jmp
ds
sbbb
or
pop
xchg
insl
sub
push
cmp
push
and
lahf
pop
popa
and
shr
mov
sti
cmp
pop
sub
fldcw
shll
mov
outsl
out
lock
and
xor
iret
sub
scas
push
nop
and
iret
adc
cli
push
cmp
iret
mov
adc
rolb
xlat
jo
jo
xchg
xchg
mov
ds
adc
je
pop
add
inc
add
pcmpgtw
lods
jnp
inc
stc
cmpsb
mov
adc
inc
adc
scas
scas
inc
arpl
lret
imul
nop
bound
sub
inc
daa
xchg
xor
ret
or
imul
pop
xor
rcrb
jecxz
mov
xorl
adc
sbb
jl
or
inc
xchg
jl
push
ficomps
xchg
mov
int3
adc
jns
movsl
insl
jecxz
and
dec
sbb
push
xor
aaa
xor
sub
out
push
ljmp
scas
xchg
test
ret
jle
jne
pushf
and
cwtl
lds
add
pusha
adc
xorl
lret
push
adc
scas
into
fadds
inc
mov
mov
cli
lret
lret
mov
call
pop
xor
jg
pop
push
sahf
and
sub
xor
shrl
cld
mov
divl
cmp
sub
pop
push
mov
sub
ret
clc
jns
push
lea
mov
add
aam
loop
or
lods
in
jl
into
xor
cmp
mov
mov
sbbb
push
rcrb
leave
mov
sub
dec
or
adc
fnstsw
pushf
inc
pushf
nop
shll
loope
jmp
dec
xchg
add
and
loopne
das
rolb
idivl
lcall
dec
jne
dec
mov
dec
loopne
aam
jg
cmpsl
add
adc
aas
jmp
pop
shl
int3
fs
pushl
pop
cmc
daa
or
lcall
arpl
shll
mov
cmpsl
mov
pop
repz
enter
xchg
fwait
aam
jle
dec
xchg
pop
shl
push
xchg
into
sbb
mov
push
mov
and
xchg
fisubrl
adc
fbld
loope
push
shrl
dec
sub
repz
and
aad
mov
rcl
and
aad
push
imul
adc
xlat
js
lret
dec
jbe
xchg
push
lret
fnstenv
test
xor
sbb
jmp
lea
pause
fs
xor
adc
cmp
loop
dec
and
adc
mov
frstor
jge
or
sarl
in
fisttps
enter
add
fwait
pop
shrl
mov
out
mov
lock
rolb
mov
pop
mov
test
push
xchg
aas
jbe
sub
sarl
push
outsl
jp
sbb
jecxz
pop
les
sbbb
movsl
fisttpll
and
ds
dec
jge
jg
or
mov
sbb
cmpb
add
cmp
sbb
shl
sahf
push
and
shrb
out
push
sbb
outsl
mov
pop
mov
jns
cmp
leave
stc
jbe
adc
mov
fistl
or
xlat
lock
pusha
test
and
sub
sarb
sbb
scas
ljmp
movb
jne
push
add
sbb
out
pop
cmp
cli
hlt
push
push
flds
arpl
mov
lret
add
lret
fiadds
nop
sti
imul
mov
sbb
sbb
and
outsb
ret
push
insb
xor
imul
sbb
or
loope
in
sub
mov
cmp
cmp
inc
mov
int3
pop
lcall
mov
mov
cmp
pushf
mov
jmp
ja
in
jg
or
addr16
gs
cli
les
adc
popf
enter
mov
xchg
shrb
pop
mov
sbb
mov
push
lea
rol
in
pop
sarl
push
andb
xchg
mov
or
mov
out
cmp
sbb
movsb
mov
pop
or
jbe
scas
mov
jl
inc
je,pn
sti
add
std
push
lahf
mov
mov
mov
ret
xlat
test
mov
rorb
test
rorb
cmp
push
push
mov
insl
movsl
clc
pushf
or
test
inc
inc
fistpl
mov
xchg
daa
mov
adc
dec
jecxz
test
lcall
daa
push
jnp
add
inc
sarb
aas
pop
cmp
xor
cmc
into
sbb
sbb
rep
add
je
mov
pop
mov
ja
jo
popf
stos
cmp
mov
es
adc
addl
imull
mov
add
xchg
lds
enter
jae
enter
int
push
cltd
repz
or
repnz
shl
lcall
les
outsb
cmp
mov
mov
fs
jnp
enter
ja
push
int
addr16
push
jnp
cmp
push
test
sti
cli
xchg
stos
shlb
ja
pop
iret
rorl
or
cmovb
pop
in
lock
or
cs
add
sysexit
and
xchg
push
fcmovu
scas
sbb
mov
add
int3
mov
cli
clc
jge
cmp
inc
push
xchg
inc
fisttpl
sbb
or
out
mov
imul
xor
lahf
cmc
inc
sub
mov
outsb
movsb
loope
xchg
dec
pop
in
test
mov
test
int
fisttps
insb
mov
sbb
shlb
and
lret
call
jnp
jns
xchg
jb
lret
sbb
and
mov
sti
or
jge
sahf
repz
ficompl
icebp
cmp
push
pusha
int3
fadd
dec
adc
sahf
sbb
pop
mov
push
mov
hlt
lahf
jnp
jp
shll
mov
jmp
shlb
push
mov
cmp
daa
cmp
outsl
fcmovnbe
push
mov
out
pop
aam
js
out
jbe
jge
gs
gs
lret
pop
sbb
cmpsl
sbb
mov
push
mov
stos
outsb
pop
mov
push
dec
divl
or
push
push
lret
les
mov
mov
xchg
rol
add
push
mov
sub
imul
cltd
or
sbb
push
xor
and
mov
mov
and
mov
and
and
jmp
shrb
test
mov
movsl
in
pop
mov
mov
mov
in
roll
cmc
push
aaa
mov
dec
stos
repz
lods
test
fldl2t
ljmp
sbb
push
out
dec
lret
sbb
ret
imul
mov
pop
or
outsb
in
jae
aad
lahf
ret
loop
cltd
push
adc
or
imul
mov
clc
jle
xor
movsb
jb
iret
nop
pop
adc
add
out
adc
addr16
inc
or
or
mov
gs
jno
mov
out
testb
xor
sub
hlt
xchg
jmp
stos
sbb
mov
mov
scas
and
add
inc
out
jns
pop
sbb
xchg
outsl
ret
shrb
out
stos
pop
fdiv
inc
loop
and
jp
inc
cld
cmpl
jle
out
loope
jb
or
in
cmpsl
std
fildll
insl
xor
or
aas
push
and
mov
jnp
and
aaa
lahf
pop
cmp
mov
lock
cld
pop
push
jno
test
mov
dec
data16
fwait
sbb
rcrb
imul
inc
out
ret
cmp
mov
xchg
push
push
adc
blsic
pusha
mov
cmp
inc
daa
dec
aaa
sar
aas
inc
aam
sbb
jnp
ret
inc
popa
popa
sub
cmc
sub
jo
icebp
aas
xchg
pop
dec
sub
sub
jno
and
sbb
adc
aad
add
shrb
scas
fsts
aad
pop
aam
lret
jp
inc
jle
inc
std
pop
filds
into
sahf
cli
test
sbb
mov
pop
bound
dec
in
pop
push
sub
fstpl
arpl
cmp
sub
xchg
pusha
lret
in
pop
dec
fsubrl
and
imul
outsb
xor
add
and
sbb
jecxz
and
jns
loopne
dec
pushf
popf
push
jmp
out
daa
inc
lds
shl
lret
or
lret
loope
clc
icebp
ja
mov
ss
inc
pop
cmpsb
add
add
lds
js
sub
lea
xchg
stos
shlb
jecxz
dec
mov
orb
jl
xor
insb
clc
fsubrl
addl
pusha
mov
ja
xor
mov
dec
dec
in
jae
add
xchg
xchg
loopne
ds
fxch
inc
adc
or
mov
mov
cmp
je
mov
icebp
hlt
bound
add
out
lds
pop
js
pop
fldl
and
inc
loopne
shrl
and
mov
mov
pop
cmp
push
pop
das
xchg
cmp
jae
out
jl
inc
dec
incl
test
xchg
int
mov
inc
push
mov
xor
js
mov
aas
sub
aas
pop
or
dec
lret
std
in
mov
mov
inc
dec
mov
cld
orl
add
sub
pop
rorl
test
mov
xchg
lret
ds
flds
adc
lea
mov
int
les
loope
lahf
pop
sbb
jmp
imul
dec
arpl
mov
aam
mov
ljmp
ja
mov
fsts
popa
mov
fdiv
fcomps
jae
imul
pop
outsb
mov
insl
test
xor
loope
xchg
sahf
sahf
lret
push
ret
repnz
mov
inc
add
adc
mov
je
or
cld
sbb
pop
cmp
pop
pop
sbb
jl
fcmovu
iret
ss
sub
push
xlat
jmp
jbe
and
mov
sub
aam
int
xchg
mull
and
outsb
test
lret
fistpl
dec
adc
outsb
loopne
repnz
sbb
mov
and
jecxz
inc
mov
rolb
out
xchg
test
mov
push
add
or
lret
cwtl
adcb
and
les
arpl
mov
out
fidivrl
movsb
push
call
movsb
cld
adc
popf
push
cs
test
pop
and
js
out
and
mov
loop
movsb
jl
in
dec
jmp
cld
int3
popf
adc
adc
fs
adc
negl
repz
mov
lcall
fcomps
mov
and
push
adc
mov
fs
fs
icebp
mov
pop
sbb
sbb
pop
testl
cli
mov
cmc
sub
cmpsl
push
or
mov
ljmp
sub
jne
push
fcmovne
inc
aas
imul
mov
clc
xchg
fildl
cltd
jg
push
mov
push
and
jle
test
or
mov
dec
jbe
movsl
push
pop
in
mov
xor
fsubrl
xchg
jmp
inc
je
jb
xor
mov
cmp
fnstenv
push
outsl
add
adc
addb
test
and
sbb
enter
cwtl
fs
cmp
inc
jecxz
lahf
pop
jae
jbe
inc
inc
cwtl
push
xor
testb
repnz
add
sub
xchg
popf
jbe
mov
mul
add
pslld
sahf
movsb
lahf
sahf
es
mov
pop
sbb
xor
cmpl
xor
enter
rcrb
pop
into
mov
std
aas
ret
imul
and
fcoms
incl
sub
inc
jnp
into
add
sub
repz
shlb
jae
mov
bound
inc
jmp
cmp
std
pop
xchg
sbb
xchg
std
fdivl
dec
testl
jecxz
mov
dec
jmp
cmpsl
push
jns
mov
and
test
imul
cmp
xchg
cmpsb
dec
daa
fisubrl
push
jb
aad
lods
add
push
insb
cmp
jno
mov
lods
sub
outsb
mov
imul
loope
push
lds
lds
jb
mov
and
inc
add
pushf
sbb
dec
mov
pop
or
mov
jae
lret
pusha
cltd
lret
sbb
jae
in
jl
push
rorl
mov
or
loope
inc
add
xchg
xor
call
sarb
pushf
out
cmp
jae
ds
xchg
mov
adc
mov
pushf
push
ret
loop
jecxz
cmpsb
stos
movsl
dec
mov
adc
rclb
push
out
ja
dec
pusha
or
mov
out
leave
and
movsb
inc
xlat
lret
ja
inc
sub
and
add
or
lds
ds
pop
xchg
roll
dec
sahf
filds
pop
push
movsb
adc
push
push
aas
push
pop
jg
pop
add
inc
in
aad
sbb
mov
cli
jno
dec
mov
push
pop
lcall
pop
sub
push
fisubl
push
jo
cmpsb
movl
and
pop
jne
jg
scas
mov
sub
cmpsb
and
adc
jl
cmp
xor
dec
jg
mov
movsb
daa
stos
into
ss
sbb
into
test
sbb
sbbl
lods
and
cli
jne
push
andb
vpavgb
addr16
clc
popf
xor
inc
sub
push
notl
xlat
xchg
push
mov
aam
add
cmp
shl
xchg
pop
push
test
mov
leave
jmp
nop
in
addr16
inc
rcl
sbb
cmpsl
or
repz
add
insl
inc
push
xchg
mov
adc
out
aaa
or
iret
pop
inc
ficoml
xchg
int3
push
es
dec
inc
push
leave
aad
dec
mov
and
mov
pop
test
push
sahf
mov
rol
and
pop
inc
arpl
fists
mov
bound
andl
cmpsl
push
popf
and
jne
js
sub
gs
push
scas
imul
ret
cmc
std
aas
sarb
xchg
ss
loop
pop
adc
cmp
mov
pop
xor
cmp
xor
push
test
or
xchg
clc
xchg
xor
pop
repnz
and
movsb
clc
out
ror
push
add
fistl
les
lahf
loope
jne
or
icebp
test
or
inc
in
insb
sbbl
fs
ja
cld
ret
inc
lahf
xorb
mov
loope
test
mov
or
add
jl
shll
std
and
fwait
shll
popf
jnp
imul
mov
aas
mov
inc
lods
sub
js
adc
inc
cmc
shrl
dec
or
and
arpl
imul
push
ret
hlt
ljmp
sub
cltd
mov
pop
jne
jne
or
mov
adc
mov
jle
in
shl
cmp
outsb
out
pop
inc
sarb
and
sbb
sub
inc
mov
or
mov
test
rcrl
dec
je
pop
imul
call
lret
jns
jge
stc
into
insl
mov
and
jbe
mov
cmp
in
mov
mov
push
mov
push
pop
mov
cmp
loop
mov
call
dec
in
in
inc
push
mov
and
mov
lea
jmp
add
test
mov
xor
mov
jns
cmp
insb
jns
test
cld
mov
mov
daa
xorb
jge
test
cmpsb
inc
imul
in
dec
xchg
shr
and
push
std
cmp
in
push
stos
cmp
fsts
push
jne
sbb
shll
movsb
jge
out
jnp
inc
mov
clc
mov
lock
hlt
fiadds
fdivl
xor
insb
adc
jg
sahf
mov
xchg
ret
mov
and
scas
cmpl
pop
mov
dec
inc
pop
es
xor
cmp
cmp
xchg
push
and
or
ljmp
movsb
xorb
mov
js
fs
add
arpl
imull
outsb
push
cmpsb
jno
inc
or
xchg
mov
xor
xchg
xchg
mov
or
inc
pushfw
sbb
mov
repz
inc
sub
mov
loope
rol
add
inc
lcall
mov
out
and
mov
aas
lcall
and
pop
inc
xchg
andb
arpl
sbb
repz
call
icebp
out
lahf
fwait
sahf
aam
imul
or
jae
add
scas
lea
repnz
mov
and
rcrb
pop
sahf
cmp
popa
das
adc
pop
jl
mov
adc
nop
std
xor
cmp
ss
xchg
loop
xor
outsl
dec
dec
jmp
adcb
mov
cmp
out
sub
jle
imul
and
das
sub
add
ljmp
mov
jbe
jno
jae
out
mov
inc
lcall
sbb
hlt
xchg
sub
lock
mov
lods
fdivrs
icebp
cmp
sbb
data16
pop
adc
mov
dec
jmp
jle
pop
xchg
mov
dec
into
pop
cs
push
lods
inc
sbb
sbb
into
ret
xor
adc
ja
jb
outsb
sub
divl
popf
inc
mov
sub
dec
adc
mov
mov
xchg
and
push
jecxz
imul
mov
jno
outsl
shlb
xlat
xchg
lods
add
xchg
pop
cmp
ds
pop
push
mov
pop
mov
jmp
imul
push
xor
or
inc
arpl
je
push
cld
lret
rcrl
outsl
add
in
sahf
int
popf
adc
mov
bound
xchg
enter
inc
ja
jnp
sbb
pop
cli
lea
mov
lahf
pop
cmp
rorb
cmp
lea
or
cmp
xor
mov
push
in
dec
aaa
mov
xor
inc
fldcw
ljmp
xor
in
dec
hlt
xchg
int
iret
dec
xorb
fimuls
cli
je
addr16
stc
int
mov
stos
out
fidivrs
out
jge
lock
enter
aas
loopne
lret
sbb
popa
popa
stos
or
sti
sub
cld
inc
push
xor
paddusb
adc
jae
pop
pop
test
sahf
xchg
xchg
mov
in
xchg
push
stos
inc
sbb
jg
mov
insb
cmpsb
sub
dec
mov
pop
shl
mov
arpl
fldcw
dec
mov
adc
inc
packuswb
xchg
add
mov
mov
jno
push
aaa
sbb
fstpl
or
mov
mov
adc
cld
push
dec
outsl
fisubl
faddp
inc
push
fnstenv
mov
pop
mov
or
cmpb
cmp
pusha
cmc
xor
out
loope
push
lds
pop
push
or
mov
pusha
mov
add
and
lods
add
pushf
loop
stos
push
add
push
shlb
lds
ret
mov
addr16
insl
fisubl
xchg
xor
mov
movsb
popa
lods
xlat
in
or
jae
sahf
xchg
inc
xchg
ss
out
mov
jge
in
xor
js
ficoml
call
dec
inc
lret
test
or
push
out
xchg
clc
cmpsl
sti
lock
mov
xchg
lret
lods
push
sbb
ds
add
mov
test
movsl
loopne
test
or
mov
and
or
jle
lret
imul
out
dec
lock
jae
into
lods
mov
lcall
mov
pop
std
imul
in
mov
xlat
pop
and
jo
sbb
movsl
sbb
lock
xchg
dec
sbb
xchg
push
cmp
add
stos
jg
mov
lock
negl
inc
jg
or
addr16
pop
in
inc
movsl
jo
jo
and
cmpsl
mov
sub
sbb
xor
int
data16
clc
je
aad
dec
sbb
mov
cmp
jp
xlat
lods
rcrl
mov
lods
adc
jno
dec
push
mov
dec
mov
xchg
dec
into
and
cmp
push
xor
rcl
roll
adc
hlt
sbb
lahf
cmpsl
mov
ficompl
xchg
mov
mov
fistpll
negb
mov
lcall
scas
cwtl
imul
in
ret
sub
std
dec
outsb
dec
bound
sbb
sbb
mov
mov
jl,pn
dec
xchg
xchg
out
bnd
xchg
clc
pop
dec
std
cmp
shrl
fwait
mov
outsl
lret
shrb
xlat
fstps
and
mov
jno
xor
icebp
push
sub
sbbl
adc
mov
out
je
or
jae
neg
xchg
imul
out
and
loope
and
xorl
adc
mov
sti
loopw
push
inc
mov
pop
push
xor
in
iret
pop
xchg
jg
pop
div
add
mov
in
xor
mov
test
movsb
pusha
mov
notb
scas
mov
xchg
loop
pop
push
in
add
mov
testl
mov
je
and
cmp
or
fiaddl
or
ja
js
cmpsl
inc
push
outsb
push
ret
mov
fwait
mov
sub
hlt
jns
jl
inc
stos
jnp
mov
inc
je
mov
orb
and
jg
les
lahf
pop
movsb
pop
cmp
cmp
lock
stos
dec
popf
mov
out
js
sbb
jns
clc
pusha
aas
fsubs
mov
data16
xor
push
movsl
push
xorb
inc
or
lcall
mov
hlt
fistpll
jae
inc
lods
or
mov
cmpsb
or
adc
lret
mov
push
fnstcw
sbb
lods
movsl
adc
rclb
dec
pusha
aas
jge
mov
inc
pop
data16
xchg
inc
imul
aam
xor
add
dec
jl
lea
shlb
jae
mov
jae
call
fadds
imul
gs
lahf
ja
leave
mov
hlt
adcb
push
imul
add
lret
fisubrs
cwtl
dec
fistpll
mov
in
mov
xor
repz
int3
lcall
or
decl
loop
repnz
icebp
xchg
inc
cwtl
repnz
and
sti
push
lock
lahf
fbstp
cltd
ficoml
cmp
jg
pop
ret
cmpsl
les
xor
cltd
repnz
lcall
in
inc
fwait
mov
mov
pushf
lods
mov
pop
out
out
dec
jle
test
ror
mov
aam
pop
popa
pop
in
imul
shlb
inc
jo
ret
fsubrp
cli
lahf
add
mov
inc
inc
lahf
int
xchg
das
sub
jle
dec
cld
pop
aas
ljmp
mov
xor
xchg
fdivl
stc
mov
sub
sub
or
cmp
shll
mov
cmp
inc
dec
gs
cmpb
jns
fwait
mov
call
lahf
and
mov
in
mov
push
sbb
inc
movsl
cltd
jae
adc
inc
movsb
imul
pop
or
leave
pop
dec
xchg
jmp
sub
dec
lcall
insb
pushf
sbb
push
fsts
dec
cmp
jge
mov
andb
or
jns
fsubs
lret
sub
int3
mov
loopne
sbb
sahf
sub
cmp
adc
or
mov
mov
mov
dec
repnz
es
cwtl
pop
in
xchg
ss
jns
inc
jp
lret
mov
std
pop
les
sub
out
push
iret
gs
sti
enter
mov
inc
dec
rcrb
jg
mov
rcr
faddl
pop
mov
mov
dec
cli
ds
cmp
mov
mov
test
outsb
sub
jo
movsb
stos
sub
add
xchg
jbe
dec
push
sub
fimuls
or
out
arpl
pop
xchg
jb
sbb
clc
mov
iret
lods
in
cwtl
or
lea
adc
test
loopne
into
cli
ljmp
test
jmp
and
ss
xor
clc
adc
imul
into
ds
or
out
jo
outsb
fs
mov
cmp
leave
subb
push
sub
xchg
dec
or
jb
jno
popf
aas
or
xchg
popa
or
pop
xor
inc
push
dec
flds
ja
sahf
cld
dec
inc
aam
int3
pop
hlt
or
mov
pop
movsl
cmpsl
ds
cwtd
dec
jg
xchg
in
sub
lret
jnp
add
dec
mov
scas
sbb
jp
jbe
adc
inc
push
ja
in
and
sbb
inc
jecxz
xchg
xor
nop
mov
jmp
xorl
sbb
mov
test
cmp
or
cmpsb
sub
scas
jne
sahf
xor
mov
popf
aam
pop
adc
and
dec
shll
mov
andb
xor
mov
fs
push
push
inc
jb
mov
fnstenv
pop
inc
ljmp
cmpsl
aas
or
cmp
pop
outsl
call
cmpsl
lds
pop
cmp
xchg
jmp
push
mov
push
icebp
sbb
iret
lock
sub
pushf
movsb
mov
shlb
lds
hlt
jns
mov
cmp
add
mov
cmpsb
sub
ja
dec
inc
rcll
mov
xchg
jbe
adc
push
add
sti
fldcw
mov
lods
rcr
into
xchg
movsb
loopne
iret
or
push
insl
inc
sbb
dec
xchg
cmpsl
cmp
xor
sbb
getsec
scas
popf
cmpsb
pushf
jb
fildl
mov
in
xchg
rcll
insl
dec
in
bound
add
mov
mov
adc
sbb
hlt
mov
sub
iret
adc
shrb
roll
mov
imul
test
sbb
gs
push
or
mov
lods
lahf
loop
xchg
gs
movsl
lea
into
push
out
out
cmpsb
dec
outsb
lods
jno
push
inc
lods
lods
std
add
lea
andl
inc
imul
insb
xor
call
and
push
sub
in
shl
nop
push
xchg
aas
mov
fs
sub
fs
or
xchg
add
xor
inc
insl
pop
pop
mov
jo
movsb
and
aad
pop
cmpsb
mov
xchg
add
xchg
sub
jnp,pn
lahf
idivl
dec
or
sti
das
test
rorl
pop
cwtl
mov
pop
xor
fs
sub
pop
daa
sub
xchg
pop
mov
mov
xor
je
dec
and
and
jb
mov
call
sub
mov
jno
adc
ret
mov
mov
andl
jno
and
lock
xchg
lods
dec
outsl
cmp
in
lret
sbb
clc
cwtl
cwtl
stos
and
scas
push
and
fcoms
sub
test
jmp
or
or
xchg
add
dec
inc
daa
sbb
cmp
jae
jl
adc
inc
shl
mov
jne
mov
mov
sar
jmp
outsl
sub
dec
dec
mov
insb
push
outsl
out
cld
nop
jmp
mov
xor
icebp
stc
aaa
mov
inc
das
push
mov
mov
cli
fsubrl
jp
gs
mov
test
dec
scas
into
in
mov
add
cltd
lock
mov
jmp
adc
shrb
test
push
adcb
test
or
wbinvd
cmpl
sbb
insb
dec
push
xchg
dec
mov
xor
out
adc
sub
dec
into
adc
out
out
adc
mov
fs
rclb
sbb
mov
repnz
mov
loope
mov
stc
pop
nop
adc
adcl
xor
sahf
push
jae
cld
or
repnz
mov
xchg
mov
add
mov
repnz
mov
movsl
inc
mov
jecxz
in
cmp
in
adc
sbb
dec
cwtl
insl
mov
outsl
add
out
add
bound
push
dec
xchg
in
sbb
jl
ret
popf
fildll
scas
or
jecxz
test
jns
mov
cwtl
ficoml
inc
pop
imulb
pop
mov
leave
lds
fcom
sub
push
add
cmpsl
mov
into
jecxz
xor
lock
sti
jle
subl
int3
pusha
xlat
fsubl
jecxz
adcl
adc
adc
in
movsl
mov
xchg
adc
adc
mov
add
mov
jecxz
repnz
and
cmp
jne
cmp
add
pop
pop
fstl
cmpsb
dec
jmp
add
mov
into
sub
test
pop
pusha
dec
ret
mov
cmpsb
out
in
jg
mov
xchg
inc
dec
insb
xor
sbb
mov
jbe
or
cmp
hlt
add
out
jl
daa
mov
aad
in
mov
rclb
popf
movsl
push
int3
fnstenv
push
adc
test
push
fisttpl
xor
pop
dec
sbb
nop
fnstsw
jbe
shlb
dec
pop
clc
pop
lds
mov
andl
hlt
mov
push
cmp
cmpsl
inc
sti
mov
mov
mov
in
int
insl
enter
icebp
loopw
push
sbb
testb
test
dec
insl
pop
popf
xor
lock
and
xor
sbb
cmc
push
sbb
insl
xor
push
ss
outsb
cld
inc
cli
into
push
les
sahf
ret
and
sub
fwait
push
es
xchg
js
scas
movsb
and
cmpsw
xor
mov
mov
fidivrs
loopne
pushf
out
dec
in
lret
jg
cmp
movsb
or
adc
cmp
mov
cmpsl
push
pop
cmp
in
xor
add
sub
push
push
sarb
mov
sti
and
std
and
loopne
daa
daa
adc
je
adc
lods
leave
clc
sahf
dec
cmpsl
cli
pop
xchg
jb
pop
pop
test
mov
mov
fisttpl
aas
dec
jo
mov
icebp
mov
nop
out
les
iret
xchg
lds
inc
mov
repnz
mov
adc
fwait
dec
and
inc
push
dec
outsl
push
or
aad
clc
movsb
filds
sbb
mov
mov
lret
pop
daa
or
in
jns
jp
push
pop
insb
adc
pop
aam
and
pusha
mov
sti
fadds
lock
inc
xor
push
fsts
jge
dec
call
inc
add
push
jnp
inc
lret
push
sbb
sub
aad
popf
aaa
ret
fldl
xchg
mov
test
push
mov
cltd
je
jecxz
sbb
sub
icebp
enter
jl
push
hlt
sub
mov
loopne
fdivl
repnz
out
int3
adc
cmp
push
add
cwtl
mov
xor
and
dec
add
inc
sahf
or
and
xchg
fistps
sub
dec
sbb
lods
mov
jmp
nop
xchg
add
frstor
cmp
mov
adcb
mov
or
loope
call
fidivrs
cld
and
xor
xchg
cld
insl
inc
aad
xchg
inc
and
popf
jmp
imul
dec
fisubrl
mov
xchg
cmc
xor
cmp
inc
xchg
sub
mov
negb
lret
xor
xchg
inc
out
pop
and
cwtl
or
psubq
ud1
daa
and
jae
jecxz
add
mov
sahf
sahf
filds
popf
ds
inc
add
mov
data16
es
ret
sbb
cmp
hlt
js
dec
xor
data16
lret
adc
daa
arpl
and
pop
and
gs
add
out
cmp
or
xchg
cmpsb
popf
test
sarb
mov
sub
mov
mov
fadds
nop
fldl
gs
je
scas
pop
lds
test
pushf
mov
andl
cmpsl
hlt
and
fbld
ljmp
ljmp
int3
lahf
or
jge
push
into
shll
shl
lods
dec
cmc
pop
xor
jo
mov
xchg
filds
ja
adc
xor
popa
adc
xor
pop
jno
dec
popa
repnz
mov
push
aad
mov
push
ds
cmp
mov
or
jo
arpl
sahf
loope
sahf
jb
xor
jb
std
pop
or
dec
data16
add
sub
dec
sbb
add
mov
iret
lret
add
test
adc
or
xchg
mov
ds
sti
push
lahf
repnz
cmp
int
pusha
push
xor
pop
stos
out
push
movl
jl
out
jbe
insb
pop
int
sbb
xor
dec
clc
data16
jmp
insb
out
xor
aaa
sahf
clc
xor
xor
mov
sbb
sub
jbe
xchg
jmp
add
loopne
daa
sbb
jb
cmp
pop
jecxz
test
mov
or
jle
mov
push
js
mov
mov
push
ss
xchg
outsl
dec
sets
aaa
inc
pop
push
xchg
add
adc
mov
jmp
lds
je
lods
pushf
call
xor
das
call
dec
gs
addb
rcrb
mov
addr16
sbb
scas
ja
lods
stos
leave
jb
filds
mov
add
sarb
in
imul
mov
sub
ja
jnp
xchg
push
ds
jno
cmp
and
inc
xchg
imull
adc
dec
repnz
popf
add
rolb
scas
pushf
cltd
fsubl
pop
lahf
add
mov
adc
mov
in
pop
pop
aad
add
add
push
jl
xor
sti
xor
addl
call
inc
pop
xor
js
cmpsb
push
dec
lds
movntq
cmpsb
sbb
iret
push
fnstsw
fisttpll
push
inc
mov
dec
mov
push
or
daa
shrl
adc
popa
xchg
mov
int3
test
inc
xchg
shlb
inc
in
data16
ss
pop
push
scas
mov
loope
dec
test
mov
xor
push
and
fisttpl
dec
jb
inc
lods
xchg
rclb
jns
jg
ja
push
jle
push
mov
test
ret
jbe
mov
push
adc
scas
dec
lea
rcr
mov
sti
xor
push
sbb
or
movsl
cmp
mov
rorb
rol
aaa
xchg
mov
lds
xchg
mov
adc
cmp
scas
pushl
imul
xor
xchg
add
fstpt
jo
jecxz
and
sub
gs
push
xchg
nop
addps
mov
je
xchg
jbe
out
dec
aaa
dec
mull
add
test
lret
imul
lods
pop
into
popf
mov
jns
mov
xchg
xchg
lods
outsb
xor
stos
xchg
popf
sbb
or
das
push
pop
inc
rcll
add
dec
pop
ret
mov
daa
aas
sbb
daa
mov
cli
hlt
pushf
sbb
lods
sbb
ss
insb
repz
jge
pop
pop
aas
inc
aad
mov
stos
pushf
adc
xlat
aad
xchg
idiv
outsb
loopne
jb
mov
xchg
and
cmpsl
shll
adc
and
sti
jp
mov
lods
dec
arpl
push
mov
add
stos
or
xor
stc
call
je
cmpsb
adc
dec
xorb
test
pop
xchg
iret
dec
aam
mov
adc
out
fcoms
enter
jge
inc
mov
ja
imul
dec
mov
cmp
cwtl
cld
jae
mov
fwait
lods
cwtl
in
mov
or
cmp
cltd
iret
pop
out
fistl
push
jl
fmuls
push
in
lods
shll
sbb
or
sub
pop
mov
sub
mov
addr16
and
jo
scas
cmp
lock
popa
pop
jmp
add
cmpsb
inc
and
mov
pop
aad
scas
insl
mov
fbstp
stos
mov
mov
mov
loop
and
adc
add
xor
test
mov
sti
dec
rclb
cmc
cmc
cwtl
xchg
or
lods
mov
xor
lods
clc
jb
je
mov
lock
add
dec
dec
ljmp
inc
xor
and
mov
sbb
fisubrl
adcb
pop
inc
pop
test
in
and
pop
sbb
sahf
popf
test
xchg
xor
arpl
and
scas
ljmp
jle
inc
xchg
cmp
ficoml
xchg
or
leave
dec
loope
outsb
jp
jbe
enter
jnp
sub
test
jmp
xchg
push
in
dec
test
xor
int
insb
std
loope
jge
xchg
imul
and
dec
lods
and
sbb
repz
stos
dec
pop
and
inc
pop
and
decb
push
test
outsl
mov
jl
xchg
push
add
leave
adc
imul
adc
push
and
ds
data16
out
subl
lcall
cli
cs
mov
fwait
mov
mov
aam
xorb
add
xchg
pop
sub
fistps
insb
mov
out
stc
insl
jbe
push
fdivrl
inc
in
mov
pop
xorb
arpl
push
in
popf
fiaddl
movsl
divl
je
das
fsubl
push
dec
xor
adc
xchg
sub
and
xor
jo
add
push
stos
xor
and
iret
xor
mov
dec
adc
sub
mov
scas
inc
mov
dec
je
test
mov
xor
ljmp
aad
test
lret
and
mov
into
out
sbb
lods
inc
mov
jno
mov
out
fimuls
test
push
dec
addr16
jbe,pt
mov
stos
cld
scas
push
mov
movsl
inc
or
pushf
cmpl
jb
adc
std
int
int
push
cs
mov
rcrl
jge
sbb
push
jae,pt
leave
dec
and
in
out
push
aam
shrl
cmc
test
or
sarb
cvtpi2ps
inc
sbb
jns
mov
push
dec
mov
push
in
loope
outsb
xlat
imul
fdivrl
shl
xchg
ret
into
mov
sbb
sbb
aad
sub
cld
xchg
mov
lahf
cmp
repnz
test
sbb
nop
cli
faddl
sarl
sub
xor
sub
xchg
lods
mov
ljmp
pushf
movsl
aas
cmc
stos
or
int
mov
push
gs
mov
pop
aaa
and
cld
sbb
sbb
cld
aam
inc
push
flds
cmc
mov
addr16
loop
xor
addr16
mov
insl
stos
or
jno
lock
fdivs
lret
push
push
jmp
mov
xor
xchg
testl
dec
sub
fwait
mov
pop
pop
inc
add
or
insb
dec
mov
push
into
outsl
int3
sbbb
pop
mov
mov
outsl
ja
cmp
outsl
insb
inc
fwait
adc
mov
and
lea
fistpl
cmp
mov
pop
pop
mov
mov
cmp
sub
inc
outsb
jb
gs
test
mov
shll
mov
fdivrs
xor
je
inc
mov
xor
push
dec
cli
inc
outsl
ljmp
dec
jge
mov
insb
push
and
pop
xchg
cmpsl
popa
sub
test
adc
das
inc
pop
call
or
sbb
fisttpl
mov
mov
mov
aas
cmp
or
mov
inc
je
ja
adc
xor
dec
dec
mov
jp
cmc
sub
mov
lock
cmp
stc
or
ret
and
loop
sbb
xchg
mov
jnp
xor
and
lret
bound
xchg
push
subb
in
pop
aaa
fdivrp
fistl
sub
sbbl
pop
mov
scas
mov
rcrl
iret
mov
loop
cmp
mov
inc
jecxz
leave
ljmp
arpl
and
jmp
cmpsl
jne
out
lret
out
adc
cmp
rol
push
xchg
cmp
adc
notb
xor
or
movsb
xchg
imul
into
pop
jmp
mov
add
gs
push
cmp
ds
test
nop
test
in
mov
es
sbbb
xor
imul
mov
andl
mov
fistps
int3
ja
and
adc
popf
ror
ret
out
mov
popa
cmc
jb
or
je
push
dec
and
and
mov
dec
cmpsl
fwait
jmp
pop
into
out
mov
outsb
push
push
scas
pop
jp
push
repnz
in
add
out
je
negb
mov
cmp
mov
pop
mov
call
sub
imulb
sub
jb
not
test
imul
or
add
rolb
dec
adc
push
mov
and
dec
mov
scas
sub
inc
and
lock
pushf
inc
xor
test
test
les
outsl
in
mov
dec
or
sbb
addr16
or
mov
stos
mov
xchg
jmp
inc
cmp
lea
xor
mov
ret
sbb
testb
ret
movsb
dec
or
mov
in
jmp
fwait
mov
loop
ret
inc
inc
fsubs
addb
out
ficoml
popf
add
lods
or
mov
xor
sub
rolb
xchg
sbb
adc
outsb
enter
dec
dec
dec
pushl
mov
fcomps
lock
lods
inc
xchg
xor
rorl
arpl
daa
ja
pop
ss
pop
aas
add
inc
cmp
dec
mov
xor
pop
fs
pusha
sbb
in
stos
test
fnstenv
cltd
cmp
and
inc
cld
imul
scas
or
push
pop
sti
repnz
cmpsb
sub
ja
inc
cmpsl
mov
fwait
cld
ljmp
jg
out
xchg
aas
push
ficoml
mov
mov
pop
aas
or
mov
xor
ret
push
push
lds
dec
push
and
fnstenv
xchg
pop
dec
mull
sub
jne
push
leave
loopne
dec
leave
push
dec
sbb
enter
xchg
subl
enter
xchg
mull
pop
mov
pop
popf
orl
adc
nop
rcrl
popl
dec
inc
clc
push
nop
jmp
outsl
lds
push
std
hlt
pop
lods
fsubs
aam
xchg
push
int3
sub
mov
mov
sub
pop
jecxz
push
lods
into
fnstenv
push
mov
out
mov
cmp
cmp
sbb
or
sti
shlb
loop
outsb
daa
imulb
stos
std
pop
fs
pop
add
jl
fisttpll
mov
roll
xchg
sub
fwait
inc
sub
addr16
sub
sub
rorl
loop
sarl
rcpps
sbb
fistpll
xor
repnz
inc
sub
decl
hlt
jns
jle
xchg
inc
pop
and
les
scas
xor
nop
push
add
push
loopne
popf
pop
bound
or
rolb
paddd
xchg
stos
xor
shll
push
dec
or
fwait
jg
add
decb
enter
out
std
int3
push
jno
faddp
lock
mov
js
sbb
push
or
daa
dec
sub
out
and
push
inc
and
xchg
mov
lcall
sub
lods
inc
leave
lret
aas
scas
and
push
mov
cmp
add
push
movsl
push
jmp
sbb
mov
jl
add
jns
and
xchg
imul
mov
cmpps
sbb
out
shrb
loope
imul
int
and
jecxz
call
push
inc
in
fldcw
add
lods
rolb
pmulhuw
jecxz
gs
cmpsb
cli
icebp
arpl
mov
or
fistpl
jg
cld
lahf
sub
cmp
cltd
roll
ds
pop
out
sbb
je
xchg
dec
xorb
test
stc
sarb
jnp
jns
hlt
scas
dec
roll
push
jmp
xor
lahf
xchg
mov
cmovno
sub
dec
hlt
mul
lea
mov
mov
xorb
xchg
cmpsb
jg
inc
popa
cli
fisubl
adc
repz
xchg
adc
jb
sbb
std
ds
inc
or
lock
mov
loopne
addr16
repnz
xor
out
sti
xchg
xor
outsl
and
stos
xchg
inc
xor
inc
dec
int
mov
cmp
imul
insl
mov
stos
mov
mov
or
mov
js
cs
or
cmc
jle
jg
out
dec
test
in
fnstcw
pop
rcrl
std
icebp
scas
xchg
js
imul
imul
sub
fdivrs
out
in
cmpsl
and
inc
movsb
out
outsb
xchg
dec
loope
mov
in
mov
jbe
dec
mov
sub
cs
scas
jns
xchg
xchg
sbb
in
lea
daa
shll
and
dec
imul
fldcw
or
clc
das
cmc
orb
sub
inc
mov
fwait
sbb
add
dec
mov
adc
pop
jno
fstpt
jns
jns
loope
xor
xchg
mov
mov
andb
std
push
pop
sub
push
cli
sar
icebp
lods
sub
cmp
mov
pop
xchg
sbb
fisubrl
pop
fistpll
push
inc
addr16
inc
aaa
adc
dec
cmp
xor
cld
repz
int3
mov
cmc
loopne
sub
mov
into
xor
mov
fisttpl
and
sub
jmp
push
mov
sti
add
out
loop
aas
dec
mov
pop
dec
mov
xchg
and
popf
push
les
loopne
sub
fwait
pop
push
pop
push
mov
cmp
push
leave
popf
out
cld
xor
or
mov
adc
idivl
or
stos
fnstcw
dec
rcll
cmc
mov
push
test
pushf
inc
mov
daa
adc
xchg
fs
mov
mov
aaa
and
repz
test
add
xor
rcrb
fcoms
cld
mov
jne
xchg
movsb
xchg
jg
sbb
sbb
flds
fcoms
aam
popf
arpl
pop
inc
iret
jle
filds
cli
or
sub
xchg
lods
insl
push
in
fdivrp
sbbb
jge
sub
jecxz
in
add
xchg
or
xor
out
lret
cmpsb
push
push
sbb
pop
fwait
outsb
pop
lahf
popl
xchg
stos
fxch
pop
and
inc
ljmp
push
or
push
lret
das
xchg
insb
cmp
shl
fisubs
test
repnz
cli
dec
or
jp
cmpsb
out
xor
push
mov
inc
call
mov
jns
cmp
fisttpll
add
insb
mov
and
sub
or
sub
aam
xor
dec
xor
hlt
sbb
mov
mov
inc
sbb
out
or
fcos
add
or
js
cli
ss
mov
loope
jbe
into
sub
inc
xlat
push
push
mov
or
mov
pop
sbb
inc
cld
xchg
dec
lea
stc
push
mov
daa
movl
testl
adc
pop
mov
and
push
jp
or
pop
cmp
sbb
jbe
pop
inc
sub
sahf
jmp
in
xchg
adc
cmpsl
in
jle
pop
popa
out
push
mov
lock
repnz
xor
out
adc
pusha
adcb
mov
test
and
pop
jb
test
push
pop
xor
push
dec
aaa
repnz
imul
sub
andb
aad
mov
jae
dec
shll
in
push
push
xor
inc
jo
fsubs
push
std
dec
loopne
ret
inc
shrl
movl
scas
aad
lds
ljmp
pop
lahf
dec
lret
notb
add
dec
mov
outsb
lret
ja
jo
push
mov
icebp
insl
dec
mov
push
cmpsl
pop
std
fs
fisttps
inc
dec
das
adc
xchg
push
bound
loopne
jp
cmc
mov
jnp
mov
fstpl
addr16
mov
fwait
test
sub
pop
mov
cmc
push
les
je
stc
dec
insb
jns
xchg
or
add
mov
pop
sub
cwtl
push
rcll
and
mov
mov
pop
insb
xor
mov
scas
jp
pop
xor
adc
push
dec
push
push
xchg
mov
lods
or
les
call
in
adc
add
sahf
movsl
cltd
adc
stos
sbb
push
lods
lock
aam
jo
push
int3
inc
ljmp
xor
aaa
jl
inc
std
cmp
repnz
mov
jae
stos
mov
hlt
xchg
pop
je
imulb
outsb
push
jp
aas
mov
mov
int
cmpsb
jo
leave
sbb
push
add
addr16
jbe
adc
add
pusha
sub
xor
je
popf
shl
cmp
ljmp
dec
or
stos
mov
loopne
mov
pushf
ss
test
xor
leave
pop
xchg
ret
cli
mov
fcomps
or
mov
jle
or
test
fwait
sahf
pushf
sub
pop
je
in
push
sbb
push
pop
lds
push
sub
pop
in
ret
fdiv
inc
or
sub
es
js
mov
xchg
outsl
mov
scas
les
sub
aaa
cmp
pslld
aaa
cld
shrb
cmpsl
es
repz
mov
pop
int3
xor
push
pop
or
addr16
jne
or
es
xchg
xchg
insl
nop
sub
out
cmc
mov
loope
lea
iret
cmpsl
outsb
dec
pop
cmpsl
xor
stos
jae
sub
jecxz
es
pushl
subl
pushf
cmp
icebp
lea
add
or
pop
pusha
push
stc
sahf
test
jbe
and
mov
jo
jb
pop
push
in
and
ds
cld
decb
lret
sbb
or
movsl
fnsave
xor
mov
adc
mov
jg
aad
movsl
jge
lock
imul
mov
jns
cwtl
sti
loop
ds
cmp
stos
push
adc
sbb
cmpsb
jae
mov
shr
cwtl
lahf
mov
mov
ret
clc
pop
cwtl
jge
cmp
sub
das
cmp
mov
iret
inc
nop
push
nop
dec
mov
xchg
dec
sbbb
movsb
scas
dec
shll
es
xchg
mov
sarl
push
xchg
loop
aaa
fwait
and
sub
xor
out
cmp
mov
sbb
sahf
jle
call
mov
or
add
xchg
pop
sti
sahf
mov
enter
dec
mov
mov
xchg
stos
push
mulb
and
sub
int
and
jecxz
shll
mov
cmc
lock
sbb
loop
sbb
repnz
fbstp
jl
aaa
ffreep
inc
push
xchg
in
insb
sbb
js
inc
das
je
repz
sub
add
pop
push
rclb
mov
inc
and
femms
jecxz
leave
loop
xchg
fstl
xchg
jmp
rcll
test
inc
pop
dec
lds
lret
cltd
out
sbbb
push
pop
pop
scas
bound
dec
xchg
add
mov
das
je
jns
arpl
inc
idivl
test
lds
mov
pusha
stc
fsubrl
push
mov
loope
shrb
and
filds
ljmp
rol
jo
call
mov
adc
jb
lock
jle
pop
loopne
add
out
aaa
sti
cltd
dec
mov
jg
lcall
mov
dec
lds
in
cmpsb
xchg
pop
mov
sbb
test
inc
add
shrb
test
out
push
mov
inc
aaa
xchg
pop
cmp
dec
cmp
int
dec
mov
add
or
push
mov
pop
mulb
inc
adc
nop
ret
addr16
add
fbld
pop
push
xchg
pop
notb
ss
mov
pop
dec
jne
loope
jl
mov
mov
sbb
fldl
sahf
and
loope
jnp
in
cmp
out
bnd
out
xor
pop
mov
pop
mov
rep
jne
adc
and
fbstp
shll
or
cld
xor
jne
jge
jp
stos
jno
out
jl
adc
mov
int
dec
mov
test
cmp
cs
dec
or
mov
iret
sahf
fsubrs
imull
stc
stc
or
dec
xor
popa
scas
fwait
xor
incl
mov
sbb
int
int3
xor
cmp
push
scas
adc
pushl
push
icebp
ja
mov
into
sub
stc
shrb
leave
in
mov
push
mov
shrb
jg
fcmovne
adc
sub
cltd
sete
aas
aaa
loope
mov
jne
push
add
fistpl
int
jbe
xor
ret
mov
jbe
pusha
in
cltd
popa
dec
fcoms
out
icebp
call
push
lret
in
in
outsl
mov
and
andl
shll
fldenv
ja
inc
jp
dec
popf
stos
and
fdivrl
mov
or
hlt
int3
and
dec
sbb
sbb
add
mov
idivl
add
and
insl
cs
data16
arpl
fwait
enter
fwait
rcrb
jmp
push
lock
cmp
mov
xor
sbb
dec
mov
mov
popl
ljmp
mov
in
int
add
xor
inc
fldcw
faddl
push
jbe
mov
inc
outsb
int
jge
rcll
mov
jo
mov
ret
pop
inc
jbe
adc
clc
mov
jno
mov
lahf
incl
std
sub
mov
mov
sbb
sbb
test
xorb
xchg
push
stos
mov
sbb
pop
fst
out
outsl
dec
loope
divl
pop
je
xchg
mov
jp
scas
dec
fiadds
and
or
mov
aas
ret
rclb
dec
dec
aad
cmc
mov
in
insl
sbb
mov
jg
mov
mov
shufps
test
addr16
push
mov
cmp
jno
sbb
and
arpl
pop
push
mov
mov
movsl
pushf
out
push
mov
in
pop
push
pop
fadds
enter
das
fs
push
pop
jmp
pop
sbb
mov
sbb
pusha
sub
pop
insb
pop
sbb
mov
jg
std
ret
xor
inc
jbe
pop
xorb
iret
out
add
mov
and
fmul
mov
mov
mov
jb
popf
xchg
mov
push
jne
sbb
repnz
cmc
repnz
sbb
rcrl
clc
lret
out
push
pop
cmp
jo
daa
sti
nop
adc
cmp
sub
rolb
loopne
push
sub
push
in
ljmp
flds
mov
cmpsl
cwtl
or
aam
push
insb
out
xchg
test
jnp
jecxz
cmpl
in
cmp
mov
mov
mov
lods
and
frstor
mov
movsl
in
call
jge
mov
mov
sarl
jmp
test
jge
ret
xor
push
push
push
mov
int
cmp
pop
lea
in
lret
sbb
cmc
pop
andl
jo
lcall
loop
push
inc
inc
hlt
aad
les
sub
fs
mov
jnp
and
xchg
fdiv
ljmp
sub
jge
iret
add
sbb
inc
xor
pop
stos
outsl
push
loope
ja
in
xchg
icebp
stc
mov
mov
jno
mov
inc
sub
stos
std
xor
stos
pop
push
add
pop
fiaddl
cmp
cmp
push
xor
movsl
aad
loop
rorb
in
shrb
fwait
cwtl
rclb
bound
cmp
pop
mov
sub
cmpsl
fcomip
rclb
jp
ficompl
jae
mov
sbbb
or
addb
lcall
pop
xchg
or
push
ret
jmp
cmp
mov
pop
das
inc
dec
shll
mov
dec
test
jge
mov
test
push
cli
addr16
mov
mov
lock
iret
out
leave
mov
jae
aam
or
scas
mov
sbb
and
hlt
clc
hlt
popf
mov
mov
jbe
nop
jns
nop
jmp
push
add
xor
cmp
xchg
loop
popf
loop
push
int3
ret
mov
push
push
cli
mov
mov
xchg
popf
xor
ds
pop
mov
push
outsl
scas
add
pop
fistl
test
push
test
jb
loope
cmp
xor
push
jb
mov
das
stos
add
pusha
outsb
scas
lcall
and
ljmp
pop
jmp
insb
dec
push
or
test
sub
call
inc
dec
int
push
mov
inc
dec
mov
clc
fstl
cmpsl
sub
cmp
push
dec
clc
shlb
or
movsb
js
and
ffreep
movb
loopne
stos
lret
xor
scas
mov
out
fmuls
cmp
push
cmp
ss
aam
pop
pop
sub
jmp
lret
xor
inc
popf
test
sbb
into
mov
stc
arpl
push
sbb
adc
sbb
cmpsb
jmp
mov
aas
add
xchg
sub
dec
adc
imul
add
movsb
adc
lods
ja
cld
xchg
xchg
or
jae
js
push
scas
insl
jne
xchg
lahf
out
jno
sub
lret
les
in
mov
xchg
pop
mov
push
adc
filds
mov
stc
mov
shrb
adc
fld
ss
adc
sbb
xor
or
test
lods
sti
fdivs
push
push
adcb
mov
inc
rcrl
push
pop
pop
adc
aas
test
pusha
loopne
ds
lock
int3
push
clc
call
addl
sub
sbb
sub
xchg
pop
dec
xchg
and
lcall
movl
popf
jnp
jmp
inc
repnz
xor
and
test
xor
xchg
pusha
movsb
in
js
xor
jp
xchg
xchg
mov
mov
sbb
jp
aad
cmpsb
jne
mov
repnz
mov
cmpsb
push
and
loope
in
xor
fldcw
pop
cmp
fwait
sub
pop
inc
xlat
sarl
pusha
lcall
loopne
out
std
sbb
jns
add
jae
cmpsb
out
pusha
pop
pop
mov
push
or
cld
scas
xlat
sub
lahf
les
sub
imul
mov
mov
mov
in
pop
pop
rclb
dec
or
outsl
jge
add
xchg
inc
xchg
lods
push
ss
inc
push
shll
loope,pt
cmp
sti
lcall
push
enter
addr16
sub
fcmove
movd
loop
andl
int
test
sbb
sbb
sub
or
mov
and
fnstcw
stos
jmp
sbb
adc
loopne
daa
cmpsb
ds
cmp
jmp
xor
test
add
jae
jb
push
sub
jo
inc
push
lods
adc
jg
add
enter
and
or
iret
outsb
sbb
add
pop
sbb
hlt
inc
gs
mov
hlt
insb
lods
inc
negb
data16
sbb
sub
jne
outsl
stc
les
out
or
sub
cli
inc
push
shl
fiadds
lcall
das
xor
cltd
cmc
outsl
push
jne
sarl
cmpsb
int
mov
add
js
repz
ds
cmp
jecxz
loopne
push
mov
or
pop
adc
push
mov
mov
bnd
addl
insb
loop
jecxz
enter
ds
jmp
fistps
cmc
jmp
sub
push
add
push
nop
ljmp
aaa
les
icebp
cmp
dec
jnp
hlt
mov
xchg
mov
xor
call
test
leave
push
addb
add
fnstenv
pushf
sarl
add
push
pop
shrb
xchg
sub
and
inc
sbb
mov
sbb
dec
or
cmp
cmp
cmp
jns
push
mov
lea
clc
inc
sub
shrb
add
lods
jmp
call
fsubr
mov
dec
xchg
das
cwtl
out
shll
and
cli
or
hlt
cmp
aad
add
add
push
ja
pop
enter
pop
sbb
xchg
or
pop
push
shll
mov
dec
xorb
dec
mov
loope
inc
inc
sbb
and
mov
and
add
mov
out
mov
mov
jb
sub
lret
imul
and
std
data16
sarl
hlt
cmp
xchg
push
adc
lds
sbb
test
xor
xor
mov
sbb
lds
mov
cmp
push
das
fldt
cli
or
fmul
pop
sub
call
xchg
lret
and
mov
cmp
dec
rclb
mov
leave
cmp
cmp
into
or
fsubs
loopne
mov
int3
push
test
idivb
flds
fidivl
out
out
xchg
xorl
and
lods
pop
and
imul
lods
xchg
pop
pusha
xchg
push
jne
pop
mov
ret
out
dec
push
sbb
mov
jb
or
lcall
ret
mov
pop
decb
pop
xchg
xchg
ficompl
loop
mul
adc
jge
js
push
pop
push
jge
jmp
fmuls
lea
sahf
inc
data16
push
mov
mov
movsl
push
idiv
dec
inc
add
std
push
jnp
iret
daa
cmp
sub
pop
popa
inc
add
mov
push
xchg
push
add
dec
inc
in
xchg
push
aas
push
mov
mov
jle
jg
pushf
sub
aaa
pop
mov
push
adc
icebp
push
dec
test
mov
icebp
push
or
mov
ret
je
out
hlt
std
cmp
mov
icebp
push
adc
jb
dec
jne
mov
push
popa
jno
mov
adc
cmpsl
xlat
xchg
fidivs
sbbb
jns
inc
ja
push
movsl
pop
popl
cmp
les
push
lret
lock
add
jmp
out
notl
pop
shll
lahf
push
js
mov
jo
dec
pop
xchg
lret
es
orb
pop
out
xor
cvtdq2ps
pop
sub
in
shll
cli
push
fcom
mov
adc
push
stos
mov
mov
cmpsl
jne
mov
mov
push
inc
subl
sbb
loop
and
mov
pusha
mov
test
push
scas
faddp
arpl
in
push
out
jmp
aad
fsubp
popa
imul
mov
int3
mov
mov
sbb
lret
xchg
pop
dec
out
jb
jns
pop
mov
pushf
pop
xchg
mov
aaa
push
nop
push
or
fsts
push
arpl
inc
push
jl
out
aad
adc
andb
jmp
xadd
cmp
hlt
adc
fcom
pop
fcomps
aas
nop
mov
mov
roll
scas
imul
insb
add
mov
pop
test
push
xor
cld
test
or
ja
push
mov
data16
push
sub
mov
es
jo
in
ja
mov
clc
in
test
dec
in
mov
pop
int3
push
xor
pop
adc
mov
push
xchg
fchs
test
mov
inc
repnz
inc
sbb
sub
fcoms
push
cmp
lods
out
mov
popf
mov
cmp
aam
dec
cli
inc
jbe
sub
pop
fists
das
adc
pop
jb
movl
sti
push
sub
std
loopne
enter
mov
jmp
push
fadds
jns
into
mov
mov
shll
xor
cmp
gs
pop
aaa
jb
cmp
std
mov
jl
sbb
sub
push
imul
xchg
push
mov
rol
adc
push
xchg
cmp
out
push
je
mov
lret
jbe
xor
stc
add
lea
jp
pop
jne
cmp
push
data16
out
add
test
push
sbb
popf
into
sbb
sub
mov
stos
cwtl
mov
pop
pop
inc
stos
lea
or
lret
xchg
jns
lret
popa
sub
xchg
xchg
or
jb
insl
push
mov
movsb
imul
int
rol
mov
repz
repnz
jl
out
inc
int3
xor
jge
adc
xchg
cs
notb
and
and
lods
test
xchg
shll
fstpt
sub
imul
push
xor
shrb
pop
sbb
jge
dec
cmp
add
xchg
mov
ret
fsubp
jns
filds
xor
sbb
cmp
hlt
push
push
pop
movsl
mov
and
out
and
bound
je
nop
movsl
xor
sbb
lahf
dec
dec
lahf
arpl
iret
jl
cmp
jbe
inc
sbb
cmc
ret
push
lret
pop
jge
lret
int
mov
xor
data16
cmpsb
add
mov
mov
dec
fs
push
popl
je
pusha
or
add
mov
jne
sbbb
out
lock
and
inc
xor
mov
pop
mov
cwtl
xlat
ret
add
clc
and
aad
push
inc
sbb
repz
and
dec
repnz
lahf
sub
adc
adc
call
xchg
cltd
lds
pavgb
add
adc
cmpsl
lret
or
cmp
add
cmp
adcb
sub
test
fsubrs
les
xchg
je
adc
push
xorl
outsl
shlb
inc
xor
aas
dec
and
mov
jp
ret
sbb
mov
xor
jle
lock
inc
dec
xchg
lods
mov
push
iret
xlat
add
in
cs
scas
incb
or
push
mov
lret
inc
pop
adc
pop
ss
test
cmc
sbb
popf
dec
fwait
pop
arpl
jnp
add
std
jnp
insl
or
xchg
ljmp
mov
mov
fmulp
or
or
or
std
sub
pop
test
mov
lret
inc
idivb
ja
test
loopne
roll
enter
imul
mov
adc
mov
dec
outsl
push
cmp
mov
push
mov
leave
rclb
stos
in
lea
push
aaa
inc
dec
add
add
adc
test
add
loope
mov
push
jge
enter
in
insl
mov
pop
pop
sbb
mov
jmp
inc
mov
cmp
pop
mov
or
cmp
xchg
xor
mov
or
cld
fcompl
mov
std
mov
scas
fwait
pop
push
inc
mov
xchg
cwtl
pushf
or
ret
inc
dec
arpl
mov
adc
mov
in
or
fs
outsl
jns
out
xchg
std
imul
mov
push
andb
test
fmuls
pop
sbb
ss
cld
in
add
imul
mov
push
sbb
pop
inc
pop
jmp
and
fwait
loopne
cld
mov
out
fsubs
ljmp
fcmovnu
jmp
or
mov
xor
inc
lods
rclb
xchg
xor
shrl
roll
dec
ljmp
mov
mov
test
push
add
xchg
scas
xchg
js
jo
mov
inc
mov
push
cmpsb
push
lea
outsl
jae
adc
call
test
jbe
xor
imull
mov
rclb
pop
dec
movsl
xor
sahf
xor
and
pop
push
xorb
pop
or
out
shll
jge
xor
shlb
mov
and
aaa
movsb
fiaddl
gs
cmpsl
movsb
fists
pushf
int
shlb
outsl
sub
or
fwait
sbb
insl
pop
mov
pop
mov
roll
pop
ret
xchg
fmuls
daa
or
push
add
pop
push
push
xlat
sahf
push
out
fmulp
mov
cmp
mov
or
pop
pusha
je
jecxz
ret
mov
in
les
jl
sub
add
jle
xlat
mov
mov
in
mov
test
cmp
cwtl
mov
stc
scas
jge
das
int
std
psubusb
stos
mov
div
repz
dec
cmc
sbb
dec
daa
adc
jae
test
popf
jge
fistpll
mov
in
ljmp
cmp
jl
sub
lcall
subl
mov
rorl
ficompl
xlat
outsb
rol
pop
inc
cs
add
adc
je
jae
stos
dec
jle
enter
clc
xorl
popf
xor
and
les
jp
xorl
in
pop
cmc
andl
push
rcrl
adc
push
xchg
ds
add
xchg
in
ret
notb
fstl
mov
test
adc
loope
mov
fwait
loope
test
aaa
xor
rclb
stos
add
add
push
hlt
loope
xor
cmpsb
push
adc
sub
xor
out
das
inc
adc
and
aam
insb
mov
shrb
lret
mov
push
jno
sub
mov
ja
push
aam
dec
push
arpl
mov
je
stos
and
xchg
enter
inc
xor
adc
ss
ret
hlt
cmpl
inc
andl
cmpsl
jno
sub
xor
clc
cs
lods
push
stos
enter
nop
add
loopne
jp
jle
out
or
sti
mov
cli
sbb
lcall
sub
orb
ja
repnz
push
pusha
popa
dec
jl
scas
xor
mov
daa
dec
xor
int3
fildl
mov
fs
pop
js
push
outsb
fdivrs
pop
cs
push
mov
sbb
out
inc
stos
jb
sbb
mov
insb
loop
frstor
xchg
fcompl
and
out
cmp
pusha
xchg
inc
outsb
xlat
incl
arpl
fwait
sbb
push
dec
imul
mov
push
aaa
adc
mov
iret
pop
and
push
pop
lods
test
sub
mov
mov
inc
test
sbb
sub
sarl
scas
mov
push
movsl
mov
jno
cmpsl
in
test
mov
mov
adc
sub
xchg
adc
jns
scas
lea
lods
mov
jo
stos
lcall
movsl
idivb
shlb
add
cmpsl
fbstp
pop
cmpsb
fstl
lahf
mov
and
pop
fcmovne
mov
das
pushf
cs
stc
pop
mov
imul
add
jno
mov
sbb
add
fimull
sarb
dec
jo
cmp
out
pop
add
nop
pushf
jge
jns
into
and
icebp
pop
pushf
nop
cmpl
fstl
aad
xor
pop
stos
mov
popa
or
mov
inc
loop
xchg
mov
sbb
das
outsl
and
push
loop
jle
push
inc
ret
inc
test
jle
push
mov
enter
dec
or
arpl
in
sbb
lds
sbb
add
xor
xchg
ror
cmp
mov
add
sbb
inc
cmp
dec
xchg
les
and
lds
lcall
int
add
push
out
jecxz
pop
sbb
in
call
add
imul
mov
mov
add
adc
pop
in
pop
das
pop
push
lret
xor
shll
sub
ljmp
mov
repnz
adcb
adc
pusha
ss
scas
mov
call
inc
psrad
mov
jl
jbe
orl
pop
std
adc
fwait
repnz
mov
in
fcmovbe
sbb
lea
fwait
pushf
sub
fnstcw
bound
cmp
sub
push
lea
lret
bound
sbb
orb
jge
adc
roll
lcall
loopne
lods
pop
sbb
lock
into
into
jg
aas
into
es
xchg
shr
hlt
push
add
jp
pop
stos
lret
imul
neg
add
aad
sbb
dec
xor
lahf
stc
cwtl
xchg
jno
jne
into
lcall
lahf
out
jmp
adc
cmpb
incl
fcoml
mov
dec
sbb
pop
pop
in
xchg
aas
adc
jb
fs
imulb
sub
in
arpl
adc
pusha
and
pusha
push
push
hlt
mov
pop
mov
dec
xchg
fimull
divb
lea
in
push
mov
mov
mov
sbb
push
xor
int
xrelease
lahf
aad
xor
sbb
jge
xor
inc
repz
cli
sbb
sbb
and
movd
test
inc
push
insl
sub
mov
addr16
std
mov
mov
jle
fnstsw
je
mov
sbb
jb
cmpsl
sub
repnz
loop
negb
lahf
mov
pop
jbe
lods
adc
xor
sub
push
pop
cmp
imul
ja
dec
push
fidivrl
pop
lods
adc
orl
jle
or
xor
push
inc
mov
icebp
sti
pop
dec
or
mov
stos
mov
add
jg
hlt
lds
dec
push
data16
adc
fs
lods
add
push
xor
adc
mov
pop
stc
adc
pop
outsl
inc
add
mov
call
adc
jmp
mov
add
loopne
pop
das
jbe
cwtl
loope
xchg
ja
cmpxchg
fcomi
xchg
ss
outsl
iret
movb
test
rorb
paddusw
ja
bound
or
sub
cmp
dec
pop
ljmp
xor
xor
cmpsb
jecxz
call
mov
imul
into
xchg
jecxz
sahf
sub
jnp
xchg
imul
mov
xchg
inc
push
pop
jnp
flds
outsb
jne
out
push
dec
push
xlat
add
pop
scas
xor
xchg
imul
sbb
lea
mov
insb
sub
lret
test
nop
outsl
lock
push
out
cld
dec
or
dec
or
fs
movsl
push
mov
push
push
cmp
test
inc
push
inc
jmp
call
loop
notb
ljmp
enter
mov
ljmp
in
mov
movsl
mov
add
dec
mov
int3
inc
stos
push
xchg
decb
inc
adc
popa
or
xchg
or
cli
loopne
test
fsubp
mov
daa
add
pop
testb
loope
outsl
test
add
sub
loopne
cwtl
ret
popa
jle
sahf
les
dec
adc
jge
adc
fs
cmpsl
mov
cli
push
jb
data16
mov
dec
movsl
jecxz
pop
sbb
sub
inc
dec
and
popf
dec
loopne
or
mov
cmp
jno
push
xchg
push
ret
mov
push
cmpsb
push
mov
insl
pop
int
mov
lds
sub
nop
fs
jmp
mov
cld
aam
mov
jns
lds
or
in
pop
into
push
mov
mov
and
mov
fimull
dec
aaa
mov
leave
pop
cmp
cmovp
sbb
clc
test
mov
fnstcw
push
loopne
mov
inc
or
popa
inc
mov
faddl
idivb
sub
aas
es
and
cmp
jo
jns
adc
inc
pop
push
cmpsb
movsb
push
cld
sub
dec
movsl
fiaddl
pop
cmc
dec
jmp
push
sbb
fsubr
pop
mov
jmp
popa
fcmovbe
dec
fistpl
insb
or
adc
mov
xchg
rcl
pop
inc
push
inc
movsb
fildl
ror
push
cmp
es
xchg
sub
xchg
sbbl
jne
ss
scas
jmp
ja
rorb
mov
dec
sahf
es
mov
fdivrs
and
or
push
aad
ret
outsl
ret
movsb
js
add
add
dec
and
and
add
imul
adc
imul
jno
adc
inc
jge
mull
mov
inc
mov
jle
call
pushf
inc
mov
cmpsl
mov
mov
jle
push
fiaddl
mov
outsl
push
xlat
lret
pop
add
xchg
mov
test
push
cmp
mov
inc
dec
jl
cmpsl
dec
adc
fisubrl
mov
inc
adc
lea
or
stc
mov
dec
adc
mov
push
fmull
adc
xor
cltd
add
decl
pop
in
jae
pop
scas
sti
flds
leave
cmp
in
pop
enter
out
mov
sbb
test
sub
sbb
jge
icebp
lahf
mov
jo
push
or
mov
xor
xrstors
arpl
cmp
xchg
mov
push
sub
jo
les
inc
in
lods
gs
pop
std
and
stos
roll
notl
mov
sbb
pop
cmp
test
fmulp
push
xchg
shlb
hlt
mov
jmp
insb
test
mov
into
and
mov
push
adc
adc
fstpt
sbb
inc
out
dec
mov
test
add
pop
leave
add
adc
mov
sub
cli
std
mov
clc
call
loop
loope
scas
fstl
ds
std
les
out
je
pop
adc
loopne
clc
add
das
fwait
sub
fldenv
adc
and
shr
scas
lahf
dec
sub
dec
jns
ljmp
pushf
in
mov
xchg
push
pop
push
bound
sbb
xchg
add
jl
pop
mov
dec
lods
je
out
sbb
ret
sahf
mov
insb
sbb
mov
or
dec
mov
arpl
inc
fisubrl
or
jns
adc
and
pop
mov
jnp
adc
xor
pushl
test
out
mov
add
nop
inc
xchg
sub
ja
jns
mov
jb
xor
out
sbb
cltd
mov
push
aad
mov
push
rorb
or
movsb
lret
ret
mov
jecxz
iret
outsl
lcall
sarb
cmpsl
sub
out
pop
jmp
imul
inc
inc
data16
mov
push
mov
jge
imul
pop
scas
sub
incb
and
or
dec
aaa
fidivl
cmpsl
mov
popf
fstpt
jno
add
xlat
or
add
and
and
cmp
sbb
adc
lret
fwait
adc
add
js
imul
jge
aad
add
cmpsl
into
add
inc
enter
inc
mov
or
das
or
jae
or
ret
mov
and
arpl
aaa
mov
cs
jae
xchg
arpl
jns
test
loopne
mov
add
fisubrl
jp
lods
pop
ljmp
push
xlat
lods
cmp
dec
outsl
xchg
and
xchg
push
pusha
pop
repnz
sbbl
pop
sbb
push
pop
inc
push
leave
xchg
push
lcall
push
addr16
xor
mov
jns
out
call
pushf
mov
aaa
or
mov
push
sbb
lds
fxch
fistl
or
inc
negl
aad
dec
scas
dec
int3
push
int
sbb
inc
test
ds
mov
inc
or
je
sbb
loope
sub
pop
rol
rorl
andb
pop
stc
mov
in
insb
inc
or
ss
shr
mov
out
mov
lahf
lods
sbb
mov
sub
sub
fisttpll
sub
lea
loop
adc
scas
bound
pop
mov
push
push
out
aaa
lds
sub
sub
insb
je
nop
adcl
and
ss
inc
cmp
cli
add
xor
outsb
mov
inc
sbb
inc
lods
xchg
dec
leave
lods
lock
lods
shlb
jmp
and
xchg
adc
daa
xchg
lods
rorl
mov
and
pop
in
repnz
pushf
in
dec
jge
je
idiv
data16
in
std
and
inc
mov
int
rcrl
sbb
pop
push
push
or
mov
sbb
inc
mov
fisttpll
mov
xchg
fninit
xchg
andl
sub
rorl
xchg
or
xchg
cmp
dec
test
cmc
sbb
aad
test
inc
mov
xlat
add
nop
xchg
or
data16
sbb
mov
stos
sub
test
push
xor
pop
and
mov
inc
xor
jl
jecxz
aaa
mov
fldl
add
mov
roll
mov
ret
clc
jmp
adc
jge
loop
pop
xchg
scas
popa
lcall
scas
mov
add
jge
insl
in
jp
sahf
int
adc
sbb
popa
cld
mov
push
lret
xchg
lds
pop
pop
inc
and
out
nop
dec
mov
pop
cmp
and
mov
rorl
or
out
inc
push
pop
jp
cltd
mov
stos
loopne
dec
xor
mov
shr
or
negb
mov
pop
mov
jmp
xchg
outsl
sbb
imul
scas
mov
mov
push
cwtl
jns
push
roll
dec
int
mov
mov
jnp
fs
lods
pop
xchg
inc
inc
xor
jae
jae
dec
movaps
inc
push
int3
bswap
xor
dec
imul
dec
fwait
mul
cmp
scas
xchg
jbe
clc
inc
scas
mov
std
mov
mov
push
in
or
and
lods
je
sahf
jae
xchg
add
lds
pop
jl
sub
in
adc
xchg
outsl
jg
xor
add
das
fbstp
mov
idivb
ss
push
dec
dec
push
xlat
lahf
inc
push
mov
sbb
xor
jmp
pushf
pop
dec
out
ja
jb
pop
sar
sbb
xor
scas
or
je
ds
into
and
out
lcall
iret
scas
and
push
sbb
scas
pop
jno
sub
xlat
xchg
adc
dec
lock
jb
sub
dec
inc
and
adc
pop
or
push
loope
aad
adc
mov
add
pusha
testb
push
hlt
mov
fidivrl
lret
nop
add
mov
adc
and
xor
xchg
mov
mov
cmp
sub
daa
lock
xchg
jecxz
int
adc
out
fmuls
cld
gs
dec
fnstenv
lods
insb
lock
cmp
int
test
shrl
cld
and
or
xchg
pop
aaa
xchg
pop
or
adc
movsb
icebp
in
inc
inc
call
stos
fs
decl
notb
cltd
push
ds
and
cmpsl
jbe
mov
push
inc
pop
repz
sti
pop
out
in
nop
lea
mov
iret
lcall
push
sbb
cmp
popa
push
jb
sbb
mov
fildll
test
addr16
jb
rorb
sub
and
and
dec
inc
adc
lret
leave
mov
adc
popa
mov
sub
daa
inc
sbb
in
mov
leave
or
repnz
jp
pop
stc
out
or
std
dec
addr16
jns
into
pushf
jge
arpl
and
fcoms
lret
data16
jo
or
decl
dec
pop
clc
adc
add
shr
jg
mov
sahf
movsb
sbb
and
xor
loope
xchg
mov
daa
test
daa
mov
xchg
sbb
add
lahf
lods
add
sarb
rclb
clc
addr16
ljmp
out
jge
push
out
or
jg
bound
xchg
in
pop
jno
addr16
xchg
xor
mov
inc
pop
dec
jmp
jae
jo
push
int
into
enter
xchg
adc
loop,pt
std
rolb
fistps
lret
push
push
nop
cmp
jbe
xor
nop
add
gs
pop
inc
jle
lock
lcall
and
mov
push
jle
pop
cmp
push
mov
pop
loopne
ret
adc
shlb
add
push
and
pop
clc
adc
pop
mov
dec
mov
jb
js
aaa
hlt
int
mov
mov
mov
les
fsts
loopne
push
cmp
xchg
jno
aam
js
in
ret
jmp
pop
inc
or
sbb
std
cmpsl
jp
outsl
in
mov
fists
daa
pop
lretw
mov
mov
sti
insb
sub
and
sub
xor
dec
xchg
add
sub
imul
movb
enter
or
dec
inc
mov
outsb
pop
mov
push
fsts
movswl
mov
or
pop
repnz
out
lods
inc
ret
repz
dec
fadds
lret
dec
mov
jg
fs
jns
fucomi
cmp
or
cmc
pop
dec
dec
emms
or
leave
addl
aas
dec
rcll
xchg
xorl
cmp
mov
sub
jle
imul
icebp
cmp
mov
mov
xor
fnstsw
jl
roll
sbb
push
mov
and
or
inc
outsb
pop
sbb
es
and
or
push
xchg
in
add
xor
sbb
mov
push
and
insl
enter
rorb
es
hlt
jno
hlt
sub
jge
sbb
mov
pop
mov
mov
sub
iret
adcl
aas
decb
cmpsb
mov
mov
mov
fdivr
mov
sub
or
pop
out
push
push
scas
xorl
outsl
decb
cld
ficomps
push
adc
lret
xchg
rclb
ja
lods
inc
pushf
data16
push
sahf
jl
pop
imul
add
movsb
pop
inc
mov
cmp
test
insl
out
or
lret
fcomps
fwait
inc
push
lcall
in
scas
aaa
scas
aas
cmpsl
fsubrl
in
sbb
xchg
mov
in
iret
jle
mov
ljmp
add
stos
jb
lahf
fsubl
popa
mov
and
add
inc
cli
or
addr16
daa
and
jne
in
sbb
jnp
aaa
jnp
xorb
sub
mov
or
nop
sarb
xor
xchg
inc
sub
scas
test
inc
inc
mov
js
loop
jns
lods
pusha
in
push
ja
ja
das
insb
fdivs
test
push
xchg
and
outsb
in
mov
in
std
stos
setg
push
outsl
mov
mov
jae
xorl
pop
and
loope
fmull
mov
scas
clc
dec
jne
adc
test
dec
pop
icebp
adc
inc
or
pushl
ret
pop
adc
mov
mov
pop
and
aas
lret
sbb
xchg
std
leave
mov
xchg
push
ficoml
lret
push
fwait
gs
push
push
cld
ja
add
fcomps
sbb
cwtl
mov
js
fidivl
es
cmp
mov
or
cmpsl
lock
pusha
cmpsb
jae
sahf
rolb
xor
fstps
or
sub
aaa
insl
adc
ja
call
lret
les
xchg
imul
and
scas
fstl
push
or
jae
inc
lcall
or
or
add
mov
xchg
push
jb
roll
mov
push
jnp
add
mov
fdivr
int3
cmc
add
and
ds
ss
inc
xchg
call
scas
mov
test
jbe
cwtl
xchg
stc
lock
inc
leave
notb
cld
adc
into
out
xchg
cmc
jmp
loop
imul
jno
aad
cmpsl
sub
sbb
clc
data16
adc
in
xor
jmp
jae
jle
imul
push
push
sbb
icebp
outsl
push
sub
loopne
pop
sbbl
enter
ret
jno
mov
dec
push
enter
jle
and
add
aam
jae
sub
arpl
or
xlat
lret
vmovdqu
fucomip
sbb
cltd
and
ja
mov
sub
mov
int3
movsl
pusha
int
xchg
adc
addr16
xor
sub
cmpsb
lret
inc
or
mov
mov
cli
in
sti
pop
stos
sbb
dec
daa
mov
dec
in
test
clc
cbtw
mov
ret
mov
fldt
mov
sub
pusha
fcoms
notb
imul
out
mov
inc
mov
xchg
pop
dec
mov
bound
lds
pop
mov
aam
sbb
cmpsl
das
shll
test
bound
enter
in
fsubs
mov
call
dec
jg
mov
js
stos
or
out
ret
dec
imul
cld
mov
daa
xchg
and
std
fs
ret
inc
pop
iret
pop
and
sahf
sarl
lret
ret
cmp
das
push
add
jg
sub
mov
jne
sar
lock
push
scas
fildll
sub
pop
fldt
pop
mov
pop
xlat
cmp
frstor
test
jae
mov
movsl
mov
pop
xor
insl
fwait
xor
leave
push
ss
mov
jecxz
divb
aas
mov
pop
pop
scas
imul
mov
std
inc
pop
mov
cli
or
mov
xor
mov
or
test
pop
push
stos
xor
inc
imul
ljmp
testl
lea
jg
mov
std
dec
and
daa
xchg
lock
frstor
lods
imul
aas
loop
mov
add
gs
mov
pop
add
pop
pop
cli
jecxz
addr16
jnp
arpl
out
xchg
sub
xorl
cmpsb
xchg
sub
mov
jg
inc
pop
adc
cmp
fistpll
js
and
mov
or
mov
addr16
push
fistps
mov
add
fidivrl
jg
and
push
rcll
push
js
jg
jns
push
sub
and
sub
pop
mov
lods
push
add
mov
push
cld
rclb
xchg
push
and
push
sub
xchg
xchg
jle
jmp
and
fadds
inc
in
add
xchg
mov
fdivr
add
cmpsl
sub
imul
add
cs
push
lcall
mov
das
push
mov
dec
mov
outsb
call
sbb
jno
xor
addl
push
xchg
jle
cld
xor
into
jmp
andb
mov
cmp
cmp
sub
and
pushl
mov
jne
fdivrl
cs
test
inc
push
sbb
je
sbb
xor
movsl
bound
fmull
prefetch
or
add
xchg
dec
int
dec
jns
add
cmp
xor
cwtl
pop
test
or
jae
mov
push
pop
lock
add
mov
xor
pop
sub
jns
out
jp
fidivrl
pop
inc
or
icebp
in
scas
and
dec
or
push
inc
sub
mov
xchg
hlt
add
inc
in
shlb
xchg
ret
mov
pushl
dec
loop
sub
scas
fucom
jg
pop
lcall
adc
cli
shrb
push
jg
jmp
jno
lahf
dec
cmp
je
dec
addr16
ret
in
data16
sub
call
dec
lods
arpl
mov
sub
jnp
popa
jge
mov
push
leave
mov
jne
fsubs
inc
sub
es
ljmp
mov
mov
in
xchg
dec
mov
call
insl
stos
jg
fidivl
mov
mov
loopne
imul
mov
daa
jle
sub
xorb
jae
push
loopne
xchg
adc
xchg
add
mov
lds
dec
cmp
call
out
loop
aaa
adc
or
cmpsl
lret
sbb
cmp
pushf
xchg
hlt
nop
mov
push
dec
negb
mov
call
loopne
in
dec
mov
shlb
fiadds
jb
inc
int
inc
roll
push
xchg
loope
xor
inc
push
lcall
inc
jmp
and
jge
jne
jmp
mov
xor
mov
adc
fwait
sbb
cs
pop
pop
pop
cmp
adc
repnz
jl
push
xchg
cwtl
cmp
or
lock
sbb
mov
adc
out
xchg
and
in
ljmp
test
leave
iret
cltd
mov
push
cwtl
aas
ja
shl
mov
mov
les
lods
mov
mov
or
ljmp
add
fildl
movsl
inc
jb
add
jns
lret
dec
cmp
sarl
jg
xor
lods
les
pop
dec
out
popf
jge
mov
call
mov
mov
mov
dec
repnz
into
sbb
pop
testb
mov
xor
adc
pop
aas
push
aas
sbbl
stos
dec
lret
or
add
ljmp
ja
loop
ja
fstl
lods
mov
jg
add
lods
and
fmuls
std
lods
mov
mov
or
subb
mov
call
dec
inc
shl
imul
pop
imul
pop
jnp
mov
sbb
mov
testb
pop
and
mov
scas
push
mov
and
add
xor
dec
jo
fisubs
testl
ret
hlt
mov
mov
dec
in
push
cwtl
ss
xor
or
adc
les
sub
jo
and
orl
insb
fstps
mov
lcall
ss
lock
lock
dec
sub
pop
dec
sbb
jne
into
push
push
inc
aas
nop
sub
cmpb
bound
push
jo
xchg
adc
xchg
and
mov
hlt
out
jecxz
xchg
xchg
lds
adc
mov
or
add
insl
pop
mov
add
add
push
sti
dec
dec
xchg
adc
repnz
mov
mov
mov
xor
inc
adc
fstpl
test
sbb
fiaddl
cmp
mov
xlat
mov
pop
enter
in
push
fistps
test
iret
cmp
dec
jp
push
xor
pop
fs
xor
cmp
inc
scas
stos
dec
cmp
dec
cmc
jp
es
rcr
pop
jns
sub
inc
or
jbe
push
popa
hlt
addr16
cmpsl
fstpl
jno
mov
sub
js
shrl
and
push
fisubs
inc
mov
loop
fimuls
push
lcall
push
sbb
xor
push
jo
sbb
cltd
xor
adc
pop
mov
dec
cld
sub
add
jge
mov
cld
int
out
lret
xchg
fwait
cmpsl
jmp
xor
hlt
pop
clc
movsl
inc
cmp
xchg
pop
xchg
sti
sub
pop
repnz
icebp
mov
xchg
aad
mov
outsl
stos
adc
jo
or
and
insb
push
in
mov
push
xor
push
into
clc
push
jne
pushf
out
push
mov
movsl
cli
test
dec
sbb
mov
pop
jae
dec
subl
jb
mov
roll
sub
aad
sbb
aam
sub
aaa
ja
test
pop
cmp
ret
addr16
andl
bound
pop
pop
jl
xchg
xor
pushf
xor
xlat
or
mov
add
cwtl
xchg
negl
xchg
inc
sahf
dec
std
sbb
push
xchg
cmp
add
inc
lods
out
inc
imul
negl
sub
in
cmp
jb
sbb
cmp
iret
pusha
outsl
rolb
pop
cmp
push
jb
mov
mov
sbb
daa
push
aas
loop
push
fnstsw
repz
out
xor
and
fs
add
inc
shll
dec
pop
push
sbb
push
ret
cmc
aam
dec
mov
sub
leave
mov
jns
jno
ds
lret
jmp
imul
adc
cmpb
mov
mov
adc
pop
mov
mov
push
je
int
ret
popa
add
add
outsb
inc
sbb
dec
cli
movsb
sbb
cmp
fsts
jg
enter
inc
cld
ret
push
jno
cmp
push
xchg
ficomps
sbb
pop
mov
aad
xchg
test
pop
inc
cld
stc
xchg
pop
cmpsb
into
insl
in
inc
xchg
outsb
dec
xor
fnstsw
outsl
addr16
jnp
push
out
jmp
and
or
mov
lret
out
out
test
mov
cmc
or
pop
fwait
xor
cmp
daa
rcr
mov
pop
out
lahf
sbb
xor
pop
fsubs
loop
adc
pushf
and
adc
inc
ljmp
addr16
push
mov
xchg
clc
dec
push
cmp
data16
xor
adc
mov
test
popf
push
mov
fsubrs
jge
dec
lea
int3
mov
add
push
ja
xchg
push
and
andb
rcl
enter
out
jo
push
fs
xor
xchg
dec
adc
or
div
stos
cmp
imulb
and
clc
xchg
stos
inc
and
jbe
out
lret
push
movsl
add
dec
pop
push
mov
lock
dec
cmp
and
pushl
mov
enter
xor
xor
jecxz
inc
cmp
push
xchg
jl
out
mov
jmp
add
xchg
dec
mov
xchg
xchg
push
push
repnz
shll
divl
jmp
or
inc
addr16
shrl
or
cwtl
xor
push
jge
push
xor
cmp
inc
xchg
jge
add
pop
xchg
xchg
in
and
xchg
fucomp
xor
xchg
out
and
mov
xor
fs
jo
ret
add
lret
add
popa
hlt
into
rcl
ljmp
sub
inc
imul
ja
or
or
dec
pop
cmp
pop
adc
in
push
popf
adc
icebp
fwait
loope
xchg
sbb
mov
sbb
and
bound
insl
movl
xor
xchg
jbe
addl
lea
sahf
scas
push
lea
dec
or
arpl
jbe
in
rcll
aaa
push
dec
push
daa
aad
sbb
pop
cmp
push
sbb
jnp
pop
ljmp
insb
and
mov
sub
rcrb
repnz
mov
rorb
lcall
sbb
orl
mov
jns
lock
push
inc
cmp
inc
mov
jg
arpl
push
pushf
mov
add
jg
mov
xchg
insl
xchg
popf
mov
into
sub
xor
negl
push
jp
add
push
dec
subl
shlb
xchg
sbb
pop
sbb
push
dec
push
das
and
fsubrs
cli
xor
es
cld
xchg
jns
ja
pop
popa
inc
rcll
shll
sub
dec
out
or
stos
push
dec
ja
int
xor
sub
lcall
scas
outsb
mov
out
out
les
cmp
loope
jb
movsb
out
sbb
fsubp
sub
mov
loope
cltd
mov
fsubrl
pop
sbb
popa
mov
pop
ror
dec
dec
and
jbe
cmpsl
mov
adc
sub
rorb
adc
pop
int3
in
sbb
push
and
mov
lcall
mov
mov
popf
sbb
sub
iret
cs
call
mov
jae
cmp
cmp
or
lcall
mov
js
xchg
xchg
sbb
mov
jno
in
xchg
in
add
push
js
mov
xor
add
in
or
repnz
mov
mov
js
test
push
xlat
inc
mov
loope
pusha
xor
incb
xchg
loop
insb
cmc
subb
testb
or
dec
dec
shll
jns
dec
lret
nop
stc
cs
add
sub
enter
dec
out
cmp
jno
das
sub
push
pop
or
les
pop
popa
sbb
popf
lds
inc
ret
cmp
outsb
and
hlt
es
push
dec
adc
leave
pop
sbb
cli
cld
hlt
rorb
mov
push
fldcw
outsb
js
leave
sbb
fs
mov
mov
xor
sub
xlat
pop
pop
pop
or
addr16
aas
and
mov
push
repz
out
xor
push
fisttpll
push
and
inc
mov
popa
cmp
test
mov
jne
in
inc
dec
into
xor
or
jns
mov
cwtl
arpl
add
jo
data16
mov
mov
ret
add
inc
push
int3
fadds
or
mov
mov
cmp
dec
test
imul
and
adc
out
xor
or
xor
xlat
mov
hlt
insl
xchg
icebp
call
push
jo
push
ja
cmp
stc
lcall
pop
dec
fnstsw
sbb
adc
in
push
sbb
adc
or
pop
mov
mov
or
dec
xchg
lock
ds
jo
andb
std
xchg
sbb
les
lock
xchg
lcall
xorb
jecxz
addl
push
in
daa
push
jno
push
loop
scas
mov
pop
xor
mov
adc
imul
ret
push
sub
in
lods
aad
inc
fnstsw
mov
xor
sbb
sbb
fnstcw
xor
mov
fstpt
and
inc
pop
shlb
aaa
dec
ret
stc
cmp
jne
subb
jg
sub
mov
mov
cmc
pop
das
inc
and
push
arpl
lret
xchg
pop
lods
out
scas
scas
ljmp
jl
int
jge
xor
fwait
insb
sub
mov
icebp
js
dec
imul
pop
cmpsl
aad
clc
icebp
fsubrs
mov
popf
and
cmp
mov
pop
jp
js
xchg
scas
cmpsb
dec
dec
pop
test
xor
ja
fcmovu
or
mov
xlat
xor
add
rorb
scas
cmp
pop
nop
lock
repnz
scas
jge
lahf
int3
jg
gs
rolb
sub
mov
xchg
in
push
sbb
xchg
sbb
mov
js
mov
cmp
lods
bnd
cmp
js
leave
sub
push
sbbb
mov
mov
lret
mov
pop
jecxz
mov
inc
and
lahf
add
mov
or
ret
and
dec
mov
cltd
out
mov
arpl
out
jle
mov
jnp
mov
xchg
jle
test
sub
test
dec
std
loope
mov
add
imul
jbe
repnz
fstpl
mov
imul
stos
roll
jg
inc
and
and
mov
or
inc
sub
jle
loope
test
push
xchg
jg
iret
mov
pop
sub
mov
mov
adc
add
jmp
daa
jo
cmp
out
lret
adc
jecxz
cld
loop
mov
and
mov
sahf
in
inc
dec
cmpsl
int
lret
mov
sbb
rcrb
cmp
sarl
dec
mov
subb
mov
loopne
hlt
or
mov
mov
stos
jno
or
push
pop
push
xchg
ret
or
sbb
and
shlb
or
jmp
add
imul
dec
jnp
sbb
or
add
mov
xchg
adc
pop
cmp
dec
mov
mov
rclb
mov
fcoms
aaa
cmp
inc
std
repz
cld
push
sub
into
mov
int3
jle
adc
hlt
sbb
mov
jbe
mov
mov
pop
mov
jl
cmp
xchg
data16
dec
js
jno
pop
and
mov
loopne
xor
pop
sub
cmpsb
stos
or
inc
enter
les
mov
lock
or
xchg
inc
aam
jo
mov
lret
in
outsb
and
push
dec
and
lds
jno
pop
pushf
sub
and
movsb
mov
test
xor
mov
cmpsb
inc
push
adc
flds
je
lret
xchg
cmp
enter
adc
in
mov
pop
mov
jle
or
clc
rclb
cltd
sti
imul
push
add
add
xrelease
and
cld
lret
dec
int
jae
scas
and
inc
sbb
sbb
push
leave
into
jns
push
push
aad
clc
dec
iret
push
jp
sub
mov
pop
iret
scas
cld
lcall
dec
sub
int
sbb
stos
mov
or
or
loop
cmp
ror
repnz
loop
xchg
xlat
out
cmp
jbe
adc
sub
cltd
aam
sub
mov
data16
pop
adc
pop
fimull
outsb
cmp
xor
add
xchg
mov
fdivr
sbb
pop
pop
push
fisubrl
je
pop
jge
stc
add
fistpl
leave
inc
ret
add
out
mov
sub
add
stos
or
jecxz
test
push
mov
into
add
icebp
aaa
fwait
aaa
mull
clc
dec
fidivs
jp
jns
push
std
stos
push
loope
dec
dec
insb
lret
scas
js
sub
call
andl
imul
push
repnz
dec
aad
sub
repz
insl
pop
ss
popa
lds
dec
sub
aam
mov
cmp
gs
rorl
mov
inc
adc
mov
movsl
sahf
out
rcll
jbe
push
fists
lcall
cmc
arpl
insl
adc
mov
xchg
leave
call
pop
jl
insb
sti
cld
shlb
add
lret
jno
movsb
das
cwtl
lret
adcb
jnp
mov
mov
dec
mov
or
dec
pop
out
mov
inc
fistpll
cli
dec
in
jle
mov
gs
popf
mov
test
push
ds
mov
pop
adc
pushf
dec
xor
xor
or
loope
shlb
je
pop
adc
fucomip
cwtl
mov
js
mov
sub
es
or
mov
push
jge
stos
mov
pop
sub
js
inc
scas
pop
int
dec
testb
pushf
jb
push
push
dec
jle
popa
aas
xor
and
cwtl
sbbl
rorb
push
add
xchg
mov
sarb
push
loopne
scas
sahf
lea
inc
ret
and
mov
push
in
pop
adc
jae
adc
pushf
dec
pop
sarb
out
test
dec
xor
push
dec
xchg
arpl
xchg
jge
ja
mov
or
in
scas
inc
aad
in
shl
mov
lock
lods
mov
cmp
xor
cltd
aad
mov
adc
aaa
aaa
push
push
leave
push
lret
xor
sub
filds
mov
scas
inc
inc
imul
xor
lds
adc
lret
dec
and
add
and
movsb
loope
mov
outsl
mov
jg
jne
fildll
das
ret
mov
fadds
call
jp
inc
cmc
nop
jno
pusha
bound
push
popa
sbb
dec
stos
fcomip
mov
fldl
ds
inc
sbb
scas
push
xor
in
pushf
cs
xor
jp
or
mov
mov
cld
push
mov
lret
jl
adc
cwtl
mov
loop
adc
mov
rcrl
shlb
movsb
jmp
movsb
jb
sahf
call
in
pop
dec
ret
cmp
outsb
std
jp
rcl
cwtl
jmp
rol
push
addr16
mov
aas
mov
mov
add
xor
add
xor
arpl
and
scas
int3
les
add
pusha
push
adc
insb
mov
jno
inc
ret
clc
jae
rcr
lahf
mov
mov
cltd
arpl
sub
subb
sub
xchg
mov
scas
pusha
out
sbb
and
cs
mov
stos
cmp
push
and
das
loope
or
adc
push
xchg
mov
fildll
xchg
xchg
mov
inc
pop
push
sbb
jne
push
inc
sub
adc
inc
iret
fisubrl
jnp
loop
inc
sbb
jmp
mov
negl
inc
insl
lret
xchg
cwtl
idivl
movsb
adc
xchg
and
jl
inc
mov
push
int3
push
lcall
lock
inc
jg
jecxz
pop
fidivrs
xchg
out
and
gs
mov
and
scas
cmp
inc
idivb
sbb
pop
stos
mov
cli
cli
in
inc
leave
jle
push
jo
mul
ljmp
add
aas
lret
es
push
mov
out
fs
and
dec
aaa
lea
outsl
fistl
push
iret
push
rorb
xchg
movsb
imul
in
jnp
leave
xor
xor
mov
fsubp
sub
dec
inc
movsl
jne
ja
push
mov
jbe
add
cld
lret
pusha
aam
cmp
shll
xchg
je
xor
test
push
into
pop
and
movsb
div
mov
or
inc
out
lods
mov
imul
sbb
jnp
cmpsl
xchg
jecxz
shll
xorl
inc
jae
or
push
sbbl
mov
lret
outsl
jmp
or
je
ja
dec
push
in
inc
push
mov
fwait
pop
xor
sub
cli
xchg
int3
jno
sti
outsl
mov
in
scas
and
jno
dec
pop
push
mov
cmp
and
addr16
mov
pop
xor
in
cmpsl
js
test
xchg
mov
mov
adc
sarl
ret
iret
inc
in
xorb
loope
xlat
daa
push
gs
add
xchg
insb
clc
popa
or
lods
push
rorl
jp
sub
fsts
ret
in
inc
ret
lods
pop
xchg
test
xor
call
mov
xor
insl
cmp
aad
dec
jne
ja
pop
add
cmp
popa
mov
hlt
add
ficoms
rclb
pusha
push
cmp
roll
ss
testl
jne
in
faddp
int
loopne
sub
xchg
ret
xchg
lock
stos
push
add
sub
enter
xchg
shrl
inc
jno
xlat
xchg
out
mov
or
stos
jle
mov
outsl
add
jle
xchg
adc
mov
clc
popf
mov
mov
dec
inc
out
jl
nop
imul
cmp
aaa
mov
clc
jge
dec
dec
arpl
out
sub
addr16
cmp
jae
push
cwtl
inc
xchg
in
and
push
out
stos
cli
mov
out
jno
sub
sub
popf
mov
out
stos
rcll
xchg
sbb
pop
mov
btr
mov
mov
bound
xor
or
in
pop
sub
dec
mov
pop
jns
imul
fcoml
mov
sbb
fistl
mov
arpl
adc
dec
cmp
jmp
xchg
leave
or
loop
lcall
sbb
loop
pop
hlt
mov
data16
dec
call
xor
xor
push
aas
adc
pop
sbb
xchg
push
push
jl
lahf
mov
xor
outsl
call
adc
pop
cltd
jg
jecxz
sbb
xchg
cld
lods
das
dec
push
cmc
test
loopne
rcl
pusha
inc
sarl
mov
push
xor
add
in
cmp
inc
jmp
pop
add
ljmp
cmp
dec
sub
xchg
push
cld
fs
xor
dec
jns
or
jecxz
inc
xchg
mov
sarl
pop
jecxz
jge
cmp
cmp
sahf
cmp
sbb
push
outsb
lahf
jp
adc
jl
rorl
sub
push
daa
xchg
stc
out
ret
push
pop
add
jp
mov
jmp
pusha
inc
add
lahf
mov
das
pop
mov
ss
icebp
rorl
cmc
cli
ja
sub
orb
or
xchg
xor
ret
test
test
pop
xchg
jl
test
dec
push
mov
popf
sahf
mov
ds
inc
dec
mov
imul
insl
inc
addr16
test
lret
sub
xchg
pop
aaa
inc
and
int
add
fadds
add
jb
repnz
add
sbb
fbstp
jnp
pop
mov
xchg
xor
data16
xchg
insb
or
bound
mov
jbe
mov
mov
xchg
aam
or
jnp,pn
mov
dec
mov
or
inc
cwtl
daa
jge
nop
daa
adc
ja
ficoms
ds
mov
or
pop
or
push
pop
xchg
test
xchg
mov
xchg
adc
jmp
rcrb
mov
insl
jo
call
pushf
lock
and
mov
mov
or
mov
dec
cmp
stc
lahf
out
pop
loop
jo
or
ficoms
cmc
or
rorb
mov
stc
push
aam
shlb
inc
dec
push
fmull
cld
scas
daa
insl
adc
xor
and
jl
push
pop
sbb
rolb
xchg
jae
inc
dec
pop
push
dec
xchg
call
pusha
jge
imull
test
pusha
push
inc
insl
imulb
fmulp
cmp
repnz
fistpl
lock
stos
loope
and
loopne
dec
js
test
vmwrite
pop
xor
and
je
insl
mov
rcl
mov
adc
inc
idivl
nop
fdivr
sub
jle
sub
push
push
pop
pop
lret
inc
push
das
mulb
out
pop
push
mov
xor
jnp
rcrl
or
fs
pop
pop
int
and
mov
arpl
pop
push
outsl
pushf
aam
hlt
jmp
sti
or
push
imul
jecxz
icebp
or
cli
cmc
xlat
call
int3
inc
js
rcr
lcall
shrl
dec
and
mov
test
add
cli
pushf
add
in
jecxz
xchg
sub
dec
cmp
adc
in
loopne
stos
addr16
bound
leave
mov
jecxz,pn
mov
add
out
push
fwait
dec
jp
add
rolb
adc
test
pop
add
and
xlat
loopne
mov
or
adc
arpl
sub
das
cmc
cwtl
icebp
bound
or
mov
stc
inc
push
jmp
push
repnz
cld
flds
dec
cltd
neg
into
add
popf
add
stos
addl
rep
arpl
dec
adc
xchg
xor
sar
shlb
fwait
imul
cmp
cmp
cmp
jb
out
addb
xchg
add
sarl
and
fbld
or
push
mov
subl
jmp
xor
fsubl
xor
lcall
stos
fcomps
in
push
and
cmp
lds
xlat
xlat
jmp
inc
pop
mov
inc
sub
cmpsl
out
lea
sar
sub
sub
pop
add
cmpsb
lds
aas
push
mov
sarl
push
insb
js
and
and
xor
out
sub
fidivrs
xchg
cmc
mov
mov
jb
dec
lds
fldenv
jns
stos
fistpl
call
jns
stos
popa
or
mul
arpl
push
fs
mov
xor
or
mov
ret
and
movsb
ljmp
jl
dec
idivb
je
pop
sti
pop
jle
sub
cmp
push
mov
inc
push
or
add
sub
movsb
mov
mov
in
inc
fs
call
adc
mov
adc
mov
sub
xchg
mov
cmp
pop
into
push
cmp
enter
jae
scas
test
mov
lock
ret
and
push
ljmp
mov
frndint
fscale
lods
test
lahf
shlb
into
arpl
push
cs
sbb
std
inc
cwtl
je
adc
push
pop
xchg
mov
add
repz
arpl
into
mov
mov
cmpsl
xchg
outsb
inc
inc
hlt
jb
mov
testl
mov
jno
or
fwait
or
movsb
jl
jl
xchg
lretw
xchg
sub
popa
cld
iret
pushl
xchg
push
test
das
pop
popf
fs
mov
cmpsl
cli
or
js
and
push
inc
xor
cwtl
jp
or
movsb
add
sub
adc
fiadds
push
arpl
int
loope
jno
insl
inc
add
addr16
cs
adc
xor
adc
mov
push
pushf
es
jae
decl
clc
lcall
mov
ja
pop
scas
repnz
ficoms
sbb
cmpsl
mov
jns
in
sti
mov
popa
mov
pop
mov
mov
add
jo
xor
jnp
push
sub
and
dec
add
mov
mov
xor
or
repnz
out
repz
add
mov
jge
mov
jle
xlat
add
and
sahf
out
mov
xchg
bound
mov
adc
cli
cli
push
adc
sbb
push
pop
lods
inc
unpcklps
je
add
jg
fs
push
fsts
and
xchg
and
dec
pop
ljmpw
ds
cld
push
mov
imul
lcall
fwait
leave
push
dec
pop
and
shr
insl
lods
mov
jne
pop
pop
push
cmpsl
int3
adc
jl
pop
cmp
pop
xlat
add
xor
adc
push
pusha
jnp
push
jmp
sub
in
pop
pause
movsl
pop
imul
loopne
pushf
push
adc
adc
je
cwtl
lahf
lea
rorl
jmp
test
mov
out
and
pop
test
fnstsw
push
popf
ret
sti
out
sub
pop
shr
mov
iret
mov
mov
cltd
je
ret
sbb
xchg
jg
lret
mov
or
mov
scas
loopne
push
lahf
sbb
cmp
jne
and
adc
fimull
stos
sbb
add
lods
or
arpl
jns
adc
xlat
cwtl
and
dec
or
shll
int3
scas
and
enter
push
or
movsb
shlb
inc
loop
bound
dec
shll
mov
pop
inc
arpl
loopne
pop
imul
je
sub
sub
and
push
nop
pusha
scas
out
xor
pop
add
das
cmp
sbb
repnz
mov
outsl
xchg
ss
xchg
aas
ja
mov
pushf
dec
add
push
mov
mov
push
add
das
and
jl
insl
pop
push
jle
imul
fcmovnbe
loop
jne
or
xorl
adc
lock
outsb
sub
jo
fidivrs
mov
cld
mov
and
aaa
mov
add
sar
stos
pop
bound
fsubrl
cmp
pop
test
pop
mov
sbb
mulb
ljmp
adc
push
push
stos
mov
ret
std
sub
lock
jb
sub
mov
icebp
lods
and
gs
adc
jne
mov
loope
push
in
clc
aam
ja
std
dec
mov
lods
popf
jg
addr16
aad
cs
rcrb
rol
mov
sbb
pop
into
call
insl
insl
jmp
push
arpl
cmp
lret
mov
sbb
pop
sub
jo
std
or
inc
xchg
pop
addl
and
mov
jp
dec
imul
add
jno
jb
repz
gs
test
mov
dec
xor
in
stc
jnp
pop
jo
xlat
jl
mov
faddl
cltd
dec
rcl
mov
loope
cmp
incb
pop
in
pop
pop
push
cwtl
fldenv
inc
jge
shrb
add
out
rorl
or
clc
call
test
push
inc
xchg
popf
and
or
outsb
fsubr
stos
sub
add
pop
sub
xor
jbe
cmp
pop
cmp
ljmp
jno
push
jecxz
imul
cmpsl
stos
das
loop
pop
push
push
jbe
stc
in
add
cmp
and
lds
in
arpl
xor
jg
imul
add
add
dec
es
repnz
adc
out
lds
shll
jp
sbb
xchg
dec
push
out
aam
cmp
push
push
stc
aam
cmp
divb
push
mov
pop
popf
shrl
popf
out
mov
sub
adc
movsb
pop
or
push
dec
sbb
inc
cli
xchg
inc
lret
pop
cmp
adc
jb
and
pop
lea
pop
enter
lahf
out
lahf
cmp
cmp
mov
mov
adc
clc
popa
dec
test
mov
addl
adc
loop
dec
adc
jle
cmp
enter
js
mov
orl
das
aas
push
aas
outsb
leave
repz
cmp
push
rcll
push
and
xor
cwtl
inc
fisttpll
mov
cwtl
inc
in
mov
arpl
sbb
adc
mov
lds
sarl
addr16
push
mull
movsl
ss
xlat
jno
sub
aam
scas
adc
pop
mov
adc
cmpsb
and
lea
xchg
scas
jp
call
inc
sbb
cmpsl
jle
lock
inc
outsl
push
std
addb
mov
test
cmp
mov
mov
fildl
inc
jbe
and
in
add
inc
adc
shll
xor
lods
icebp
out
pop
in
loopne
mov
sbb
mov
adc
push
xchg
cmp
push
ret
int3
jae
cmp
popa
jp
pop
cmpsb
scas
movsb
loope
movsl
mov
fadds
fs
shll
pop
outsb
jno
in
cmp
jb
inc
pop
leave
mov
mull
stos
fistpll
or
lret
push
mov
movsb
je
in
and
aam
mov
cmp
sub
xchg
rcrb
aas
arpl
int
jne
pushf
add
push
inc
xlat
fs
xor
adc
dec
lock
ficoms
push
sub
enter
out
add
jb
add
jge
je
push
rep
xor
jb
popa
ljmp
xor
adcb
xchg
and
das
aad
push
test
sbb
dec
aam
mov
mov
faddl
xor
or
dec
cmp
inc
jae
add
jno
cmp
mov
out
jmp
es
push
in
xchg
dec
mov
add
loope
inc
test
enter
lret
sbb
xor
pop
xchg
add
movsb
movsl
mov
adc
outsb
push
ret
inc
add
xlat
int
outsl
out
stos
orl
out
cltd
out
pop
jecxz
bound
js
mov
xlat
sbb
je
arpl
xor
push
fs
fimuls
popf
loopne
mov
adcb
xchg
movsl
lret
stos
inc
call
fcoms
das
jge,pt
cmpsb
xchg
mov
jb
shrl
jno
lret
adc
pop
repz
mov
out
adc
adc
test
and
fsubrs
dec
adc
sarl
xchg
mov
sub
popf
jg
sbb
mov
inc
aam
aad
jo
rcl
imul
data16
pop
lea
dec
leave
int
shlb
mov
fwait
jmp
fimull
pusha
imul
xchg
fxtract
push
sbb
dec
gs
fists
inc
out
and
xchg
cmc
adc
jp
and
push
inc
xchg
push
aam
pop
rclb
push
mov
add
setns
sub
push
inc
inc
mov
cmp
push
jae
mov
int
dec
mov
xlat
xorb
inc
inc
mov
fdiv
out
sarb
xchg
ret
pop
insl
dec
dec
adc
in
fwait
ret
jbe
sbb
push
nop
mov
cs
push
cmp
sbb
ret
add
mov
mov
dec
dec
pop
pop
sbb
xchg
lea
icebp
pop
jle
in
out
sti
icebp
into
in
lret
cmp
jge
rcrl
push
iret
adc
aam
movsb
popa
je
sbb
xchg
jmp
mov
popa
cmpsl
pop
imul
aad
inc
cmp
sbb
imul
adc
mov
mov
cltd
iret
cmpsb
dec
fdivl
lock
cmc
push
xor
or
pop
call
cmpsl
std
mov
adc
mov
mov
pop
dec
pop
sbb
xchg
jo
and
aaa
clc
fimuls
sbb
out
or
xchg
scas
lds
mov
seto
lds
inc
push
movsl
lock
pop
movsb
xor
mov
stos
xchg
sarb
add
dec
adc
mov
or
push
inc
fs
push
ret
ror
aaa
lret
mov
stos
xchg
push
roll
cmp
ss
sub
lret
arpl
imul
adc
pop
jl
pop
add
xchg
xchg
inc
repz
push
jnp
movsbl
mov
fistpl
sub
mov
cs
lret
inc
push
sbb
aas
mov
mov
mov
aaa
push
loopne
cli
ja
add
sahf
xchg
dec
jmp
dec
pop
xchg
mov
push
dec
and
sub
adc
jne
jge
push
jnp
mov
xchg
test
xchg
ret
daa
lods
mov
cmpsl
push
jecxz
sub
fwait
pop
add
push
or
mov
repnz
loope
xchg
pop
push
in
and
je
pop
jge,pn
lret
adc
cld
cmc
sub
mov
scas
outsb
add
test
sahf
rclb
fcmovb
lret
mov
stc
lock
pop
bound
xor
push
mov
xor
jns
insl
iret
mov
pushl
inc
adc
sar
dec
cmc
sbb
je
pop
sarb
push
int
adc
mov
stc
mov
fimull
push
push
sub
addb
rorb
imul
pop
mov
inc
sub
xor
movsb
xchg
lcall
mov
adc
add
out
sub
cs
leave
in
sti
cmpl
or
idivb
iret
xor
pop
cmp
in
test
mov
mov
cmp
mov
or
add
arpl
pop
inc
mov
pop
pushf
lods
fiadds
sahf
push
mulb
sbb
cld
xchg
and
lods
out
push
into
mov
xchg
mov
arpl
push
fisttpll
xchg
rcrl
into
cmpsb
adc
hlt
aad
imul
cmp
add
dec
push
hlt
fstpl
push
lods
pusha
gs
loop
imul
mov
scas
adc
push
sbb
add
fdivrs
iret
cmp
fldenv
xlat
sub
jle
add
shrb
iret
xchg
pop
mov
jp
shlb
xor
cmc
adc
push
roll
negl
sub
inc
loop
cs
in
lock
jle
xchg
mov
push
movsb
sarb
fdivl
inc
rcrb
xchg
sbb
dec
mov
icebp
jle
data16
add
inc
ret
inc
xor
push
push
out
or
sbb
je
arpl
sbb
mov
sbb
hlt
push
repz
cltd
stos
dec
jb
popa
jne
ss
fwait
cmpsb
cmp
mov
call
popa
mov
mov
add
mov
push
sbb
dec
repz
ljmp
xchg
daa
icebp
sub
pop
and
into
das
mov
and
in
xor
test
fistl
mov
and
in
mov
mov
repz
cltd
lcall
shrb
inc
jl
insb
sbb
push
sbb
fcomip
aaa
pop
add
scas
psraw
and
je
imul
les
lods
rcll
mov
aas
lds
dec
in
add
jecxz
test
int3
pusha
stos
ljmp
sti
push
push
xchg
sar
je
popa
js
inc
push
ds
xchg
cli
in
test
sub
mov
mov
outsb
add
scas
mov
cmp
fbstp
test
bound
shll
aaa
hlt
lahf
dec
xchg
and
es
jge
sbb
jbe
fwait
jg
cmp
add
jnp
mov
roll
jns
push
pop
or
jns
or
leave
sbb
inc
mov
jns
mov
test
cmp
out
lods
lea
jb
push
sub
inc
fdivrs
mov
sub
repnz
outsb
xorb
pop
arpl
daa
sahf
dec
push
ljmp
or
loopne
dec
mov
jo
mov
push
jp
inc
call
dec
push
fidivl
inc
pop
jae
xchg
paddsw
shr
movsb
aaa
ja
test
adc
fsubrl
mov
stc
cmc
sub
inc
push
stos
int
out
inc
sbb
mov
out
fisttpll
dec
and
adc
cmp
outsb
aas
lock
dec
mov
lcall
mov
imul
xchg
icebp
shlb
ja
popf
in
or
sbb
sub
xor
mov
and
leave
int
fists
cmp
pop
imul
lahf
pop
jl
adc
mulb
add
loopne
add
mov
in
sub
cmp
xchg
cmpsl
or
sahf
mov
sbb
mov
or
fcoms
inc
add
mov
orb
inc
xor
les
iret
and
scas
test
inc
sahf
faddl
loopne
hlt
ljmp
out
leave
imul
dec
sbb
xor
adc
pop
stos
cltd
test
or
xchg
mov
inc
stos
test
repnz
outsb
loope
push
ja
lds
jg
sbb
ja
xchg
sbb
repz
sbb
shr
sbb
cwtl
and
cmpb
aas
popf
adc
mov
cmp
jne
xchg
mov
mov
dec
imul
mov
mov
xchg
add
push
inc
fwait
and
pop
mov
rcr
out
pop
add
cld
push
sbb
and
dec
sub
jne
ds
mov
fnstsw
xor
adc
cmp
jl
or
cmpsl
xchg
call
fldenv
dec
and
fcompl
mov
fwait
sbb
mov
cmp
in
or
aam
jecxz
idivb
sub
sub
mov
push
push
push
mov
jo
je
or
add
and
or
add
mov
cld
add
jns
rcll
sahf
or
imul
inc
pop
xchg
mov
aam
addr16
add
enter
lea
xchg
xchg
jge
adc
add
movsl
inc
jbe
push
push
xchg
inc
lds
adc
lret
jb
aaa
pop
push
sub
xor
sbb
sub
sti
testl
jl
xchg
adc
cltd
rol
ret
fucom
pop
jle
imul
popa
lret
mov
push
jae
out
mov
imul
outsl
push
push
adc
inc
popl
xor
mov
sbb
mov
xchg
xor
sbb
pop
and
bound
push
sub
daa
lods
ds
int
or
sbb
jo
movb
mov
mov
sub
inc
push
sbb
mov
pop
pop
cwtl
sub
inc
sbb
push
add
std
stc
add
loopne
aaa
es
sub
mov
lock
pop
je
cli
pop
sbb
paddusb
testl
mov
mov
pcmpgtb
aam
subl
xor
ja
adc
or
cmp
xchg
icebp
outsb
xlat
xor
sbb
push
mov
mul
pop
into
aam
mov
xchg
movsl
xchg
repz
jg
sbb
xchg
hlt
xchg
inc
xchg
les
pushf
adc
lock
adc
popf
mov
idivb
pop
sarb
mov
sbb
mov
in
fnstcw
sbb
pop
outsb
mov
loopne
dec
out
pop
out
stos
and
dec
mov
sbb
es
dec
sbb
mov
and
fcmovbe
mov
decl
out
test
mov
loopne
jns
leave
xor
rorb
push
xchg
cwtl
mov
inc
insb
das
mov
addr16
clc
aaa
mov
cmpsb
jp
jnp
ds
ret
aas
inc
sbb
arpl
pusha
dec
in
mov
cwtl
pop
jecxz
mov
ljmp
sub
out
mov
jmp
movsl
mov
popf
lock
jge
pop
cli
jecxz
pop
xor
add
sub
cmp
cmp
pop
xchg
imul
push
push
cmp
ljmp
mov
jmp
imul
mov
fsubl
andb
repz
shlb
das
sbb
sub
je
loope
cmp
stos
mov
add
or
mov
lcall
leave
lret
inc
test
xchg
sub
es
mov
aaa
mov
mov
pusha
and
in
scas
shrd
test
mov
adc
daa
fists
movsb
fdivs
inc
pop
mov
and
xor
xchg
popa
cwtl
adc
inc
js
mov
add
scas
mov
mov
stos
ljmp
push
inc
dec
and
add
rcll
cltd
mov
les
leave
hlt
adc
jae
dec
fs
sbb
or
je
and
add
pop
cwtl
stos
sbb
cmp
push
mov
cwtl
int
xor
and
cwtl
add
push
cmpsl
or
dec
mov
call
mov
jae
jae
sub
pushf
aam
sahf
icebp
add
inc
cmpsl
jnp
or
dec
pop
jmp
adc
add
enter
push
push
lea
mov
fstpl
scas
push
stos
rcrb
dec
push
dec
add
es
imul
sub
cwtl
dec
xor
push
cmp
inc
adc
stos
xchg
xor
inc
aas
nop
dec
movsb
xor
into
in
and
rcr
insl
mov
shl
fnstenv
jp
cmc
in
mov
push
mov
popa
lcall
pop
xor
dec
daa
loope
and
fsubrs
sub
lret
int
lock
lahf
mov
or
xor
lea
in
or
dec
pop
lock
sbb
mov
xor
fidivrs
or
pop
hlt
xor
xchg
and
repz
sub
sti
cld
rcl
sbb
scas
andb
or
ja
jl
insb
sub
pop
call
mov
into
aam
sub
outsb
clc
add
add
cld
lds
imul
hlt
pushf
or
push
test
mov
pop
xchg
mov
aas
shrl
or
pop
cmp
and
lret
mov
out
sarb
add
sbb
lahf
mov
cmpsb
rcll
xchg
or
lahf
mov
orl
push
inc
sbb
mov
mov
addr16
out
inc
inc
mov
push
push
shrl
pop
mov
push
pop
pop
fidivl
in
mov
jle
les
dec
aam
xchg
mulb
lret
jns
xlat
int3
decl
es
push
lahf
in
cmp
jecxz
inc
jg
pop
push
int
inc
mov
xchg
popf
xchg
xchg
jns
sub
jp
add
js
mov
aaa
call
lods
js
fsubp
ret
lret
cmp
pusha
push
lret
inc
pop
mov
test
test
pop
push
andb
mov
ljmp
mov
jnp
js
addr16
inc
dec
dec
mov
adc
dec
xor
das
pop
pop
pushf
xchg
cmc
mov
add
push
repz
pop
inc
xor
or
fstl
fdivl
xchg
adc
and
push
addb
out
xor
dec
mov
out
push
cmp
fwait
cmpsl
wrmsr
scas
inc
adc
mov
push
icebp
repnz
jb
or
sarl
pusha
in
sbb
addl
xor
dec
cmpsl
or
mov
jp
xchg
stc
pop
sti
cltd
push
pop
push
notl
andl
fimull
sbb
dec
jne
add
add
add
fldenv
dec
sub
push
jbe
mov
add
inc
sub
mov
pop
test
cli
sbb
sbb
lds
aaa
fimuls
lods
mov
dec
push
das
xchg
add
lds
ja
jns
and
lret
test
sbb
movsl
test
mov
test
sbb
lods
or
jnp
jl
rorl
mov
ret
xor
pusha
cwtl
xchg
sub
inc
hlt
insl
js
dec
repnz
jbe
out
xor
lods
inc
add
scas
lock
fsubs
jl
inc
sbb
loop
mov
fistl
lcall
inc
mov
sub
push
cmp
or
mov
bound
jge
inc
into
lahf
ljmp
std
inc
enter
aas
mov
jno
cmp
imul
mov
push
sahf
arpl
mov
lret
cmp
adc
mov
fldcw
adc
mov
cmp
rcr
cmp
cmpsl
add
lods
lcall
in
jno
mov
inc
mov
idivl
dec
mov
arpl
sub
cmp
dec
popa
sbb
cmp
inc
test
jge
mov
ja
inc
test
andb
xchg
lea
jmp
jbe
sbb
ja
add
jae
sub
xor
cli
stos
into
and
mov
fwait
adc
movsb
lret
lea
or
push
out
add
jbe
loop
les
aaa
cmp
aad
pop
fwait
out
mov
cltd
stos
cwtl
clc
addl
pushf
adc
adc
or
pop
sub
push
loopne
mov
ret
pop
cmp
out
jne
xchg
stos
insl
ret
dec
ret
into
dec
arpl
pusha
ss
lcall
in
push
dec
push
test
and
es
xchg
jbe
mov
dec
xchg
cmp
push
jg
test
movsb
icebp
data16
fbld
jnp
sub
xor
dec
stc
jecxz
dec
loope
clc
jne
dec
movsl
inc
imulb
or
xorl
dec
cmp
and
dec
das
cltd
pop
mov
sbb
lods
push
xor
jnp
lds
sbb
mov
add
rcl
xor
ja
out
mov
aam
pushf
repnz
int3
xor
push
push
push
xchg
add
je
mov
fstpt
cmp
dec
cwtl
mov
roll
fldt
sbb
in
add
push
call
leave
mov
fstps
shrb
scas
in
scas
ret
inc
and
add
call
pop
sbb
jg
in
out
add
jecxz
movsl
xchg
mov
cs
loopne
fbstp
outsb
inc
xchg
xchg
popa
and
mov
pop
inc
bound
xchg
mov
push
repnz
mov
mov
mov
cmc
xor
cld
push
or
mov
movsl
loop
sbb
lahf
cltd
sbb
movsl
icebp
jecxz
push
bound
repz
outsl
mov
jnp
cltd
cmp
cmp
out
jecxz
inc
mov
inc
pop
pop
sarl
cmp
icebp
jmp
das
jnp
repz
add
pop
mov
imul
test
cmc
or
mov
push
dec
fwait
lods
push
test
inc
xor
aas
jo
movsb
jns
cld
cmp
orl
add
adc
or
lret
mov
fwait
jns
outsl
adc
add
movsl
shl
in
sbb
aaa
fistps
cwtl
insl
cmp
popf
pop
mov
lahf
xchg
jmp
mov
pusha
rcll
lret
fisttpl
lock
mov
aam
cmpsl
cmp
fimull
sub
loopne
jge
jge
sbb
mov
mov
mov
mov
add
sub
jb
fs
inc
pop
aad
stos
and
vpsubb
pop
je
dec
pop
xor
mul
iret
jecxz
add
outsb
mov
and
dec
movsb
imul
repnz
popa
jno
push
fmull
dec
aam
ret
je
inc
lahf
push
cmpsl
mov
sbb
inc
cltd
in
fnstenv
add
stc
dec
outsb
push
add
stos
pop
adc
mov
push
outsb
loope
mov
cmpsb
cmp
int
subb
inc
xchg
mov
sbb
aaa
cmpsb
adc
out
idivb
cwtl
mov
push
mov
cmpb
pop
mov
outsl
xor
mov
pop
mov
daa
mov
sbb
sbb
xor
cmpsl
fwait
sbb
clc
ds
cltd
mov
mov
xor
nopl
scas
lods
mov
inc
adc
jne
sbb
js
iret
sbb
sbb
lret
in
test
lret
sub
movsb
mov
pop
lea
inc
testl
lods
test
sti
leave
xlat
jb
jb
mov
jnp
xchg
inc
sti
push
dec
pop
lods
sub
mov
push
xchg
cmc
fnstcw
fdivl
add
inc
negl
test
adc
out
add
outsb
jae
fsubrl
rdtsc
je
add
mov
push
cmpl
inc
adc
xchg
adc
mov
sub
test
mov
mov
jl
pusha
scas
add
lods
inc
shrl
loop
adc
fnstenv
sub
loop
cmpsb
or
decb
cmp
cld
mov
in
jp
jl
movsb
pop
sbb
stos
cmp
imul
pop
insl
dec
mov
cltd
enter
adc
inc
imul
repnz
push
cld
sub
ljmp
inc
jp
or
push
ds
pop
popa
es
xchg
jno
push
lcall
call
fstpl
or
ljmp
cwtl
jo
xor
add
sub
sbb
dec
insb
cmp
xlat
test
mov
ja
nop
mov
out
imul
fimull
inc
jmp
push
pop
mov
pop
mov
stos
jmp
pop
mov
fimuls
sahf
mov
test
add
jmp
cmc
push
icebp
mov
dec
mov
mov
mov
jle
sbb
pop
mov
adc
pop
shlb
into
xchg
push
ljmp
and
and
iret
std
aam
adc
repz
or
add
aas
scas
mov
fucomi
xor
sbb
adc
in
jmp
push
psubsb
or
fsub
push
loopne
cmp
data16
cmp
adc
jg
mov
dec
std
or
imul
leave
jl
jnp
mov
or
pop
mov
leave
fwait
push
in
dec
ret
inc
adc
push
sbb
arpl
sbb
cmp
sbb
ret
jns
repnz
stos
jecxz
jp
dec
clc
js
sub
and
xchg
pop
scas
out
das
xchg
into
rclb
and
js
scas
mov
fs
sub
enter
lock
and
dec
push
jmp
and
popa
mov
pop
mov
pop
lret
push
push
aaa
lods
inc
pop
pop
mov
in
popa
sahf
popa
scas
popa
test
ss
ljmp
and
sahf
jne
cmpb
test
sbb
decl
pop
sarb
test
jae
cwtl
cld
xor
dec
aad
sti
inc
imul
inc
push
out
xchg
add
mov
push
cmp
or
dec
sti
int3
xor
and
inc
hlt
sub
mov
scas
rcrl
push
xlat
inc
xchg
rcll
push
sahf
pop
adc
cltd
pusha
or
pop
roll
in
sub
mov
imul
xor
scas
mov
add
cli
cmp
sub
mov
cltd
xchg
sbb
dec
push
loope
fs
cmp
inc
cmp
sub
cld
in
sub
repz
jo
in
fwait
imul
push
lea
test
pop
popa
scas
cmpps
cmp
jp
insl
adc
xchg
add
mov
shrl
sarb
repz
icebp
pop
and
mov
jmp
ror
pop
fcmove
or
mov
cmc
int3
sbb
sub
test
jecxz
xor
movsl
inc
pop
add
mov
or
bound
leave
lods
xchg
pop
rcr
pop
xlat
dec
xchg
scas
xorb
mov
loope
xchg
xchg
mov
mov
ss
jo
inc
mov
stc
push
stos
lcall
xchg
lret
pusha
xchg
push
cmpsb
push
repz
push
pop
push
repz
pop
inc
inc
push
inc
mov
lods
adc
out
sub
push
mov
pop
jno
mov
xchg
rclb
dec
in
sub
adc
xor
pushf
xor
pop
movsl
ds
sahf
cli
lahf
sahf
andl
test
mov
cmc
ror
pop
mov
push
xchg
sbb
imul
arpl
add
xor
mov
ficomps
sti
fimuls
xchg
jns
lret
mov
es
mov
mov
test
inc
mov
push
testl
idivb
adc
cmp
inc
push
mov
cs
lods
add
push
xor
xor
mov
sbb
hlt
pop
xor
les
xchg
ds
sbb
jp
inc
adcl
aad
sbb
pop
test
roll
std
sub
pop
sahf
lds
fdivr
jb
sti
xchg
mov
movsb
sub
push
sub
fstp
push
test
push
jo
inc
cwtl
mov
pop
or
scas
xor
jle
bound
xor
clc
sub
clc
cmove
jecxz
mov
adc
pop
adc
add
add
test
sbb
pop
out
push
ljmp
cmp
subb
jo
cli
xchg
dec
jns
cmp
push
xchg
sbb
jmp
aas
out
outsl
test
repnz
es
push
ljmp
mov
or
push
fisttpll
dec
loope
ficoml
inc
jno
push
adc
pop
xchg
out
seta
cmp
cld
mov
insl
or
mov
inc
and
mov
insb
xor
lods
mov
jns
adc
out
outsl
into
dec
pop
adc
lock
lahf
pop
cld
dec
scas
or
in
fadds
jl
in
cwtl
scas
int
ds
jp
mov
out
vaddsubpd
xor
ja
insl
jp
pop
add
pop
pusha
imul
stos
inc
iret
inc
lods
leave
mov
nop
aaa
addr16
pop
pop
arpl
or
pushf
lahf
push
data16
lea
fdivl
push
pushf
cmp
arpl
cwtl
jl
in
icebp
adc
repz
lret
and
push
mov
cmp
lods
addl
jmp
add
mov
loop
jmp
jl
leave
rolb
mov
mov
int3
pop
dec
pop
pop
adc
and
adc
dec
aaa
xor
cmpsl
loop
jp
xchg
xor
xchg
push
aaa
imul
int3
call
nop
pushf
mov
lahf
mov
sbb
popf
je
shr
sub
mov
iret
cmp
daa
ss
jl
leave
dec
aaa
push
mov
fdivs
dec
sti
push
leave
cmpsb
enter
sbb
mov
jns
jg
iret
rorl
xchg
popf
sbb
xchg
addl
add
out
scas
or
mov
jecxz
mov
push
jno
or
dec
add
jne
outsb
iret
sbb
adc
cmp
ds
insb
add
ret
sub
incl
and
xchg
add
push
lcall
pop
ljmp
pop
stos
pop
jge
mov
lods
xchg
fcmovne
push
gs
adc
in
and
xor
and
std
xor
cld
sub
aad
ljmp
jl
pop
inc
mov
insb
shlb
call
or
adc
push
fldcw
imul
push
dec
inc
popa
adc
xor
sbb
clc
repz
pop
lret
lret
xor
rcr
mov
dec
sbb
neg
jecxz
dec
pop
push
icebp
in
xchg
roll
testb
xchg
icebp
mov
test
pop
insl
pushl
faddl
pop
push
sbb
mov
into
cmp
mov
dec
xchg
enter
sbb
repnz
sub
jmp
dec
push
stc
mov
jnp
imul
push
lods
in
mov
mov
pop
add
mov
aaa
ss
dec
in
mov
aaa
mov
mov
mov
push
pushf
jb
movsl
mov
ficoml
ss
sbb
mov
mov
jbe
jo
hlt
mov
add
mov
subl
lahf
push
rcr
in
hlt
call
cwtl
int
out
add
out
outsl
cmc
mov
add
enter
jge
push
and
adc
popa
mov
jae
nop
inc
sub
pop
cmp
cmp
fdivp
leave
xor
fsubl
scas
push
xor
adc
dec
push
xor
decb
nop
std
mov
js
aaa
fsubr
mov
inc
lods
sub
call
addr16
aaa
stc
iret
arpl
in
stos
adc
clc
test
out
or
sbb
add
cmp
inc
dec
popf
fsubr
dec
mov
inc
jge
mov
add
mov
lret
icebp
add
pop
mul
out
sub
leave
adc
cmp
and
aas
jne,pn
out
mov
or
movsb
mov
push
mov
sahf
cmpsb
inc
lret
pop
xchg
cs
aam
les
out
icebp
adc
mov
pushf
mov
ja
jae
js
sub
int3
movsb
or
shlb
lea
dec
adc
imul
mov
mov
out
jecxz
inc
cmp
leave
xchg
hlt
pop
je
sbb
xchg
sub
or
fs
lds
outsl
mov
das
rcrb
jnp
pop
xor
jmp
mov
fldl
cmp
xor
xchg
or
fwait
int3
mov
inc
fcmovnbe
sub
push
mov
repz
jecxz
ds
movsb
in
sbb
mov
lods
hlt
pminub
jle
pop
adc
mov
call
leave
mov
xor
sub
icebp
daa
je
into
lods
nop
push
inc
and
lods
add
inc
inc
jbe,pn
jne
jl
test
gs
test
jne
push
out
addr16
clc
clc
popf
lahf
dec
clc
xor
and
inc
cs
lea
je
push
mov
mov
jb
dec
mov
push
pusha
loop
outsl
mov
inc
adcb
dec
aam
rorl
cmp
test
dec
test
in
push
repnz
inc
loop
inc
int3
test
int
and
popa
jl
pop
or
ja
stos
ret
or
decl
dec
lods
or
icebp
popf
sahf
mov
mov
aas
outsb
scas
shll
daa
bound
lret
push
xor
movsl
into
outsl
lret
xor
movsl
xchg
loopne
dec
bound
mov
in
lahf
mov
iret
xchg
dec
gs
push
sub
arpl
nop
adc
scas
shrl
or
or
jae
xchg
cmp
mov
xchg
arpl
jge
mov
orb
sbb
rclb
fists
or
pop
sub
jge
sbb
xor
js
mov
lahf
adc
xor
hlt
jge
icebp
push
inc
daa
in
mov
or
je
in
mov
inc
movsl
lea
cltd
push
mov
sub
inc
add
jl
in
add
push
jge
mov
sahf
sarb
lock
hlt
or
add
pop
xchg
pop
jmp
sub
dec
mov
sbb
fnstenv
fiaddl
xchg
std
mov
sub
shr
std
jecxz
ret
pop
pop
cmpb
inc
mov
dec
std
fmull
cmpsl
loope
xchg
aaa
dec
sarb
add
push
pusha
jge
mov
in
loope
xchg
mov
das
pop
fmull
aaa
lahf
push
test
lcall
in
push
popa
pop
sbb
jecxz
cmpsb
push
cs
lods
xchg
jo
pop
out
loope
ret
cmc
sub
pop
mov
out
adc
in
inc
adc
mov
pop
out
pop
mov
jg
pop
hlt
mov
inc
in
xchg
scas
mov
ret
das
lcall
fdivl
or
mov
and
sahf
nop
dec
aam
xchg
pop
les
ret
mov
and
stos
stos
sbb
add
cmp
pop
jg
mov
in
add
loop
fmuls
sub
inc
cltd
dec
shll
xor
je
aaa
sbb
aad
rorl
leave
cmp
rclb
mov
imul
cmpsb
sti
sbb
add
mov
test
xchg
xor
loop
jo
push
ficoml
in
outsb
sbb
in
xchg
ljmp
inc
imul
aad
jl
mov
dec
cli
lcall
dec
mov
add
xchg
aad
dec
jno
jno
sbb
xchg
push
outsb
pop
cmp
mov
int3
xor
clc
divl
jmp
xlat
xor
inc
xor
push
je
clc
into
test
or
cltd
subb
inc
fdivr
jo
xchg
push
cwtl
inc
sbb
sahf
cmp
push
xor
dec
cmpsl
fdivl
clc
imul
pop
dec
fisttpll
sarb
push
adc
push
mov
pop
pop
repnz
je
pop
mov
fnsave
add
mov
fwait
add
movsb
lock
test
jle
lahf
pop
push
addr16
mov
sbbl
cmc
cmp
sub
xchg
xchg
jne
add
pop
scas
mov
sub
in
iret
int3
das
sub
inc
in
adc
test
loopne
aam
pop
add
lcall
cmp
jle
inc
inc
pop
mov
jne
es
rclb
jp
sbb
lret
outsb
pushf
dec
arpl
jmp
idivb
insl
pusha
mov
lods
mov
sub
scas
sbb
cmp
in
cltd
dec
xchg
push
mov
inc
adc
jne
repz
loop
into
sahf
imul
cmp
pop
lcall
cmp
scas
xchg
xchg
or
mov
popa
rol
cmp
cmpsb
daa
and
inc
pop
jecxz
shrb
mov
in
lock
dec
and
jne
mov
int
cmc
pop
mov
stos
pusha
and
fs
adcb
mov
pop
movsl
push
cmpsb
mov
dec
lods
mov
push
fiadds
into
sbb
dec
cmp
bound
push
fcmovu
rcrl
jae
push
dec
or
ret
push
stos
push
and
pop
int
inc
cmp
mov
enter
icebp
adc
arpl
das
push
lods
sbb
xchg
out
xor
dec
add
xchg
xlat
pop
inc
test
pop
pop
shll
js
lcall
dec
out
push
notb
lcall
daa
adc
rclb
scas
jle
push
cmp
arpl
pop
js
stc
or
fs
cmp
dec
dec
sbb
sub
mov
mov
mov
add
inc
test
loopne
push
add
lret
int
scas
cmp
lods
cmp
ror
dec
daa
outsl
lret
loop
cmp
pop
lea
je
repnz
mov
ret
test
jo
push
ror
fxch
add
lds
ss
dec
xchg
push
mov
cmp
pusha
push
stos
push
je
add
pop
xor
pop
std
push
ljmp
mov
idivb
cld
aaa
xchg
jl
push
in
jbe
cltd
shl
push
rcll
xchg
sub
aas
add
data16
jecxz
mov
xor
popa
sub
adc
push
xchg
test
sub
push
adc
mov
jae
cmp
mov
cmc
int3
sbbb
mov
call
mov
mov
ss
mov
jnp
shrb
loopne
pop
movsl
xor
jo
push
cmpsl
enter
add
jl
pushf
lret
push
dec
out
mov
dec
rolb
arpl
or
or
push
dec
adc
mov
pop
in
jo
xchg
inc
stc
bound
pusha
jb
das
push
dec
std
call
outsl
loope
rcrb
jmp
push
cwtl
dec
fidivrs
icebp
pop
out
lock
xchg
and
or
pop
decb
mov
addr16
add
lahf
jbe
jno
jl
test
sbb
mov
xor
inc
fldenv
push
xchg
shlb
subb
jge
sub
out
sahf
cmpsb
inc
loopne
xchg
and
push
leave
xor
leave
push
testl
adc
ljmp
stos
addb
sbb
rorb
mov
mov
les
push
scas
sub
jl
and
or
pop
sbb
jo
fnstcw
xor
jecxz
jae
out
aas
jns
dec
shl
mov
es
mov
inc
push
dec
push
loop
bound
dec
pop
pop
push
cli
sbb
push
sub
pop
add
pushf
int
pop
int
in
and
test
sub
cs
jecxz
sbb
aaa
push
lret
movsb
pop
push
dec
push
cmpsb
mov
and
cmc
cmp
mov
mov
int
jmp
inc
and
dec
lret
cmpb
push
clc
in
in
fldt
add
js
push
insb
loope
cmpsl
mov
lods
ret
jmp
add
aaa
push
das
add
push
xchg
into
push
cmp
xlat
in
mov
inc
lret
jg
adc
test
pop
sub
movsl
addr16
std
cltd
add
mov
mov
push
xchg
outsl
imul
sti
cmp
lock
xchg
imul
inc
xor
push
inc
aaa
ret
test
adc
inc
inc
cmp
std
sbb
adc
testb
sbb
dec
test
dec
shll
and
call
fisttpll
out
jnp
ds
xchg
cmpsl
std
cmpsl
jno
loope
mov
jmp
je
test
popf
jle
jge
jnp
pop
pop
scas
ret
mov
mov
xor
and
push
fs
xchg
sub
xchg
sbbl
enter
xchg
dec
stos
bound
data16
outsl
add
repnz
gs
jge
xchg
and
sub
nop
repnz
lea
mov
das
int3
dec
sub
sbb
lahf
lods
mov
push
shrl
push
js
jp
dec
xchg
xor
mov
out
call
fsubs
push
lret
mov
jno
dec
fsts
sub
or
stos
cltd
pusha
or
adc
nop
int3
sbb
cmpsb
pop
les
mov
xchg
sub
scas
sbb
enter
inc
mov
pop
jg
clc
adc
and
in
jecxz
jno
lcall
xlat
lcall
ss
out
jl
dec
dec
ret
outsb
mov
dec
popf
out
mov
mov
push
push
mov
add
mov
jo
inc
mov
enter
xchg
jnp
adc
out
adc
jle
sahf
mov
lds
sar
pop
jecxz
addl
daa
or
enter
dec
cmp
int
xor
adc
cmpsb
outsl
into
hlt
fldl
das
adc
out
xor
fcomip
inc
inc
pop
cmpsl
pop
push
inc
adc
pminub
jl
out
aaa
and
pop
iret
push
push
add
dec
in
and
cmpsl
mov
inc
insb
inc
xor
sbb
push
mov
push
inc
dec
negl
incl
add
stc
dec
outsl
adc
jle
adc
lods
decl
test
rcrl
xchg
js
add
xor
sti
fistpll
cmpsb
movsb
add
jg
mov
mov
leave
cmpsl
stc
scas
mov
inc
and
mov
dec
fstpl
sbb
mov
push
repz
dec
push
pop
push
scas
mov
add
outsb
mov
insb
mov
mov
std
or
scas
shlb
jge
sub
std
push
pop
or
in
cld
or
imul
outsl
jb
imulb
lcall
cmp
ja
insb
sub
nop
aam
leave
sarb
mov
mov
cs
leave
xchg
mov
xor
fisubs
lock
pop
and
mov
cwtl
lcall
lods
and
dec
sub
shlb
faddl
mov
xchg
dec
js
adc
xchg
and
cli
sub
insb
aad
leave
jo
dec
push
and
inc
sbb
push
sti
cli
outsb
fdivrs
movsb
adc
lret
and
and
inc
shr
pop
aaa
fstps
aad
pushf
adc
cs
jbe
add
test
inc
xchg
cmpsb
lcall
sti
inc
mov
xchg
out
dec
data16
mov
imul
mov
cmp
fidivrl
out
sbb
lret
aaa
std
out
pop
mov
je
add
jne
sub
mov
hlt
mov
int
mov
shll
out
push
and
jns
jno
mov
mov
loop
cmp
inc
movsl
mov
aam
dec
lret
dec
mov
hlt
push
lret
sbb
je
mov
sbb
fiadds
sbb
clc
pop
fwait
inc
loopne
adc
int3
outsl
push
add
or
mov
inc
popa
dec
xchg
mov
aam
ja
push
lahf
pop
sti
sbb
fwait
adc
inc
daa
add
adc
jns
add
idiv
dec
lods
jg
pop
mov
cli
mov
loop,pn
aaa
jb
jl
fldcw
sub
add
cmp
jo
ja
xor
pop
adc
dec
cmp
add
mov
into
lds
dec
xchg
filds
cmp
or
scas
pop
xchg
inc
push
sbb
int
cmc
andb
push
aam
add
cmp
aam
cmpsb
push
mov
mov
adc
adc
adc
das
fwait
mov
int3
cmp
out
stos
xchg
push
cmp
xchg
inc
in
jae
xchg
fimuls
out
dec
mov
call
push
pushf
mov
lods
adc
mov
fbld
mov
jle
jnp
xor
or
jae
mov
int3
and
test
jecxz
xchg
pop
pop
mov
cmp
mov
push
stos
or
das
pop
mov
rcrl
jb
xor
xchg
dec
test
test
push
je
mov
sub
inc
shlb
jns
mov
sahf
push
cmpsl
lret
rep
adc
cmp
mov
and
xchg
cmp
ja
stos
jecxz
xchg
rclb
mov
fcomps
inc
push
test
xor
or
hlt
dec
jecxz
mov
mov
mov
xlat
xlat
xor
mov
iret
push
mov
aad
mov
cmp
test
loope
add
dec
pop
pushf
movsb
mov
push
test
inc
cld
pushl
ret
jg
ljmp
jl
inc
mov
mov
mov
jae
xchg
lcall
mov
outsb
pushf
or
xchg
add
mov
xorb
sti
xor
repnz
stos
pop
fadd
inc
inc
into
sti
sub
mov
ds
test
and
xor
dec
clc
dec
shll
movl
sub
pop
clc
sub
insl
imulb
or
jle
mov
mov
mov
push
outsb
mov
arpl
dec
inc
sub
or
test
fwait
lea
or
xchg
in
jnp
movsl
xchg
pop
fldenv
and
daa
addb
lret
iret
pop
sbb
enter
mov
dec
in
std
adc
jle
stos
lcall
in
std
mov
int3
insb
test
push
push
adc
xor
push
stos
adc
mov
inc
jbe
pusha
ss
test
fsubrl
pop
cld
repnz
ss
dec
dec
xchg
addr16
mov
jp
pop
mov
mov
inc
loope
add
stos
int3
or
xchg
sbb
sbb
jne
push
adc
adc
or
xor
fsubs
or
popa
mov
aas
repnz
stos
out
call
mov
pushf
clc
imul
ds
out
fwait
pusha
popa
mov
fidivs
add
pop
sub
sar
mov
jns
xor
fcmovnu
ret
sbb
hlt
sbb
jg
enter
push
iret
loopne
dec
iret
cmp
test
xor
addl
xor
cmp
test
push
loope
or
cli
int
std
fisttps
add
add
mov
sbb
push
into
loop
jmp
fistl
cmc
pop
xor
xor
insl
push
jmp
iret
inc
stos
leave
scas
cmp
push
or
aaa
add
inc
adc
and
ds
pushf
pop
aas
pop
mov
mov
dec
je
iret
push
addr16
pushf
popa
repnz
outsl
or
push
inc
jmp
push
dec
orb
jl
shlb
addr16
sahf
call
sbb
shll
sub
push
jne
imul
cmpsl
xchg
pop
leave
outsl
aad
lods
pop
dec
scas
pop
or
cmc
test
pop
or
lahf
lds
loopne
shrl
sub
and
mov
hlt
push
lock
popa
repz
or
repnz
add
rcrb
lds
loopne
js
stc
lcall
dec
adc
imul
dec
je
and
inc
insl
loop
dec
and
lret
adc
mov
pop
les
or
or
shl
inc
aad
insl
std
add
movsb
ret
out
out
push
sbb
ret
fwait
addl
jge
push
sub
inc
inc
xor
rorb
popf
lret
and
mov
in
adc
icebp
leave
psubw
add
ficoms
xchg
mov
xor
or
inc
montmul
cmpsb
cmp
std
in
mov
dec
adc
mov
mov
xchg
jp
in
cli
out
fbld
jae
ffreep
pop
cmp
loopne
out
jno
rcrl
add
icebp
js
xchg
mov
sti
arpl
jbe
cmp
sbb
sbbb
add
pop
xchg
mov
subb
pushf
sbb
fistpl
xchg
pop
sarb
aaa
push
in
lret
cmc
or
aas
divl
pusha
aaa
pop
loop
pop
push
dec
add
push
mov
shrb
pop
rorb
sbb
inc
loop
repnz
loopne
xchg
lea
loopne
pop
ja
sub
loop
loop
divl
mov
mov
jbe
mov
dec
andl
jnp
iret
loope
jmp
icebp
std
mov
imul
in
or
xor
sbb
lret
js
xchg
jo
scas
ficomps
push
jge
xchg
sbbb
mov
pushl
sub
add
lods
loop
or
jecxz
shll
inc
sub
push
test
movsl
push
inc
mov
or
xor
addr16
inc
mov
lock
xor
pop
fcompl
mov
iret
mov
iret
or
push
loop
cmc
add
sbb
push
jge
adc
mov
xchg
inc
add
lahf
jnp
cmc
inc
int
cwtl
or
xchg
mov
stos
rolb
clc
xor
shrb
mov
mov
movsl
and
push
nop
fs
ljmp
mov
sub
movl
xchg
lahf
push
movl
cmpsl
cmpsl
cwtl
push
mov
lock
mov
sahf
bound
mov
test
cmp
pop
mov
enter
fisubrs
inc
push
push
sti
jecxz
stos
mov
and
js
mov
jl
push
fstps
insb
xor
pop
push
inc
push
lcall
add
mov
ja
sbb
sub
adc
inc
in
fwait
inc
stos
xchg
cltd
data16
lock
sbb
es
es
mov
lret
sbb
cltd
xor
or
xchg
mulb
mov
xchg
rcrl
int
lock
dec
pop
push
jmp
adc
dec
sub
test
mov
cwtl
adc
or
and
pop
xchg
fistps
mov
dec
xor
daa
push
jno
loop
loope
xchg
das
adc
pop
mov
hlt
pop
xchg
es
sub
sbb
repnz
pop
sub
jns
pop
call
stos
sahf
pop
jp
pop
xchg
xchg
ret
xor
mov
cmpsl
jge
ja
mov
mov
pop
js
push
xchg
stos
push
mov
sbb
repz
out
lods
jne
push
mov
out
imul
lock
add
out
nop
add
shl
es
add
js,pt
dec
xor
fsubl
roll
adc
jge
imul
adc
add
sbb
cmp
jge
leave
adc
add
cmpsl
sbb
inc
aad
test
cmp
fnstenv
inc
xor
iret
xor
sub
or
cli
test
or
sbb
pop
andb
stos
dec
push
pop
push
xor
and
sub
lock
xorl
test
dec
cmp
pop
mov
xor
pop
fisubs
pop
dec
mov
xchg
mov
enter
xor
pop
or
out
cli
or
xorb
jne
fisubrs
shl
mov
mov
sbb
add
rcrb
outsl
jl
cmc
or
jmp
pop
lock
jns
lods
insl
incl
fidivs
add
xchg
adc
add
mov
out
inc
leave
sarb
lea
mov
sub
nop
jno
adcb
aas
leave
repz
test
test
xchg
sub
popf
cmp
out
adc
sbb
mov
rcl
adcb
sbb
mov
pop
push
jo
push
fmul
es
or
sub
stos
shl
repnz
les
std
rep
rcl
push
stc
dec
cli
jo
and
mov
mov
daa
pop
bound
xchg
inc
xchg
or
mov
cli
mov
adc
outsl
lods
bound
push
nop
xchg
jge
movsb
lock
hlt
xlat
popf
sbbl
dec
sbb
sahf
cmpsl
jb
outsb
jae
data16
popf
add
lods
pop
sahf
std
mov
push
sti
jae
push
inc
aas
jns
insl
xor
cmp
mov
aad
adc
inc
cmp
xchg
pop
shlb
xchg
jmp
push
xchg
loope
pop
mov
jp
push
push
cmpsb
inc
aad
and
cli
stc
mov
out
mov
sub
fs
xor
or
sbb
dec
aad
lea
popa
pop
clc
mov
pop
mov
jp
inc
pushl
sub
cmp
xchg
movsb
mov
xchg
xor
add
mov
adc
sbb
lods
popf
pushf
inc
xchg
cld
insb
in
dec
cli
lahf
inc
das
dec
push
jmp
adc
push
xor
and
lahf
jl
inc
pop
sbb
sbb
aad
shr
lret
pop
movsb
addr16
push
movsl
fnstcw
xchg
mov
cmpsl
xor
addr16
movsl
sahf
in
rcl
in
test
inc
jle
sub
dec
mov
ret
lea
outsl
imul
repnz
les
aas
mov
jne
push
mov
and
in
inc
fistpl
xor
add
sahf
pop
cli
adc
xor
repz
outsb
ds
cwtl
push
fmuls
adc
pop
mov
out
jae
idiv
fiaddl
mov
add
pop
mov
hlt
add
dec
stos
outsl
xchg
leave
sbb
enter
mov
mov
mov
add
xchg
mov
mov
jecxz
adc
mov
rorl
push
addr16
adc
push
jno
xor
adc
mov
jns
sbb
pushf
adc
std
add
lahf
sub
imul
subl
sbbb
lret
call
mov
shr
or
sbb
in
sbb
into
rcl
lcall
sbb
jp
xchg
fdivrs
loope
push
mov
popf
es
dec
mov
jns
push
dec
cmp
push
cmp
jns
sub
or
dec
lock
mov
bound
insl
xchg
jne
jnp
jmp
inc
dec
adc
popf
add
jno
or
jecxz
std
xorl
or
mov
add
inc
jo
addb
out
mov
inc
pusha
fldenv
rcll
in
add
sbb
jg
jmp
test
iret
dec
ja
subb
pop
cmp
sbb
rcrl
dec
pop
and
test
in
mov
lds
fisttpl
or
sbb
push
data16
mov
xor
and
or
push
inc
ret
cli
aaa
pop
sbb
cmp
icebp
movsb
lock
or
and
addb
mov
add
ja
lods
ljmp
int
shrb
push
or
push
repz
xchg
mov
out
repnz
mov
imul
aam
cmp
cmp
xor
add
xor
and
dec
pop
jecxz
cmp
xchg
test
std
test
decl
mov
cmp
js
mov
sahf
hlt
fcomps
loop
mov
aam
jns
in
or
adc
and
ss
fstpl
out
cmp
jecxz
scas
mov
cmp
orl
test
test
mov
mov
adc
push
push
aam
cmp
stc
jmp
out
and
insl
mov
sub
xchg
sti
lds
das
lods
xor
jo
test
mov
xor
jne
jne
xor
stos
arpl
mov
sbb
mov
pop
mov
xor
mov
cwtl
popf
mov
push
call
jp
inc
push
mov
ficoms
push
nop
mov
jns
jg
cmp
add
aam
or
ja
fildl
mov
clc
dec
cmp
lea
pop
mov
and
fwait
sbb
mov
sub
shlb
ja
ljmp
test
cld
movsl
dec
in
in
inc
fimull
rorl
daa
mov
aaa
cli
cmp
jne
addr16
dec
and
xchg
cltd
and
rorb
inc
pusha
leave
mov
lock
into
adc
pop
gs
pop
aam
cmpsw
lret
jmp
mov
and
inc
mov
or
push
inc
pop
xchg
mov
add
jb
repnz
test
xor
jnp
outsl
iret
pusha
scas
cmpsl
pushf
xchg
sbb
inc
xchg
mov
add
lret
dec
cli
ret
lret
add
dec
inc
movsl
testl
push
mov
cmc
ds
js
je
je
fwait
sub
adc
jl
sbb
mov
inc
enter
dec
dec
pusha
sub
mov
fisubrl
mov
push
adc
repnz
scas
jno
add
add
out
dec
mov
sub
dec
cmp
mov
mov
mov
or
xchg
inc
ret
mov
ja
and
mov
add
fsubs
dec
data16
jmp
sub
dec
push
push
lods
cmp
js
xchg
ror
adc
xchg
int3
imul
stos
data16
adcb
insl
jno
sbb
out
add
in
jl
addr16
push
or
inc
rcr
mov
inc
xchg
jbe
xchg
out
and
inc
aas
popa
js
adc
lock
jne
push
push
addr16
cltd
sub
sbb
sub
es
mov
sahf
mov
sub
xor
mov
lods
mull
out
movsb
push
sub
jg
mov
sti
shr
orl
dec
fcompl
mulb
and
dec
or
rclb
pop
getsec
daa
rcll
dec
lods
aad
mov
bound
push
sahf
lcall
fbld
clc
sub
lods
sar
loopne
xor
and
enter
ds
lds
cmpsl
imul
inc
and
inc
or
push
sbb
cwtl
leave
hlt
das
pusha
movsb
push
jge
stos
xchg
outsb
pushf
movsl
outsl
add
mov
mov
jo
insl
jnp
mov
inc
xor
xchg
dec
push
icebp
andl
imul
cmpl
sub
outsl
orl
ss
xchg
int3
xchg
xchg
daa
in
adc
stos
movsl
mov
sub
imul
sbb
lret
faddl
dec
sbbl
pop
insb
mov
movsb
dec
cmp
adc
scas
enter
aam
inc
push
sub
mov
pop
hlt
div
cmp
int
fsubrl
out
cmp
add
test
enter
clc
and
ret
sbb
cmpsl
jmp
pop
dec
xchg
xchg
iret
loop
out
mov
int
pop
pop
out
mov
in
repz
js
jnp
stc
rcll
inc
rclb
mov
dec
out
pop
inc
repz
fs
and
push
sahf
xchg
lret
and
mov
jg
fstpl
xchg
pmuludq
scas
dec
arpl
cmpsl
jp
xlat
inc
xor
adc
xor
inc
sub
xchg
in
push
jno
jne
xlat
enter
ror
fistps
ficompl
mov
cli
push
cmp
inc
ja
test
decb
mov
cmp
xor
pop
xchg
inc
insl
dec
movb
xchg
movsb
push
ljmp
test
sub
xchg
cmpsl
fnstsw
loop
dec
rorl
sbb
push
push
mov
fsub
stos
mov
icebp
std
push
mov
xor
repnz
dec
add
cli
pop
test
mov
icebp
jnp
add
fs
jmp
inc
in
jae
xor
jns
test
das
cmp
inc
xchg
xchg
enter
jmp
jge
stos
cs
mov
xor
add
movsb
xchg
adc
aad
adc
mov
dec
insl
mov
adc
shl
push
mov
jnp
lret
stos
xchg
sub
adc
and
into
sub
sbb
scas
iret
aaa
scas
insl
xor
call
mov
lret
incb
dec
outsb
in
das
popa
test
ds
insb
shlb
out
shlb
repz
adc
pop
in
ret
lock
jne
push
fadd
sbb
or
jecxz
jne
je
add
push
mov
int
push
in
das
or
sbb
insl
or
mov
add
iret
addr16
sbb
or
vmovups
jno
xlat
pop
out
sti
out
lret
in
fsubs
mov
and
insb
push
stos
test
adc
movsl
or
lahf
lods
je
push
xlat
ljmp
mov
mov
pop
rcrl
cli
pop
out
add
fcmovnu
sbb
into
mov
push
adc
popa
pop
push
mov
fbstp
adc
inc
iret
mov
mov
mov
les
fsubp
xor
aas
popf
pop
xchg
sub
inc
ficompl
fldcw
sbbl
sbb
pop
mov
add
std
inc
add
pop
out
cmp
push
xchg
outsl
sub
jmp
popf
popa
mov
pop
filds
fisttps
add
divl
pop
aaa
ja
jl
mov
pusha
mov
test
lcall
bswap
dec
test
insb
jnp
xchg
aam
cmpsb
fidivs
inc
fistpl
xchg
and
popf
mov
lock
movsb
or
shl
and
jo
mulb
icebp
and
cmp
fstpl
lahf
push
call
or
repnz
mov
inc
in
addr16
cmp
mov
shlb
fcom
clc
clc
js
ja
arpl
pop
cld
jno
mov
jmp
sbbl
int
out
fnstsw
movsb
mov
or
nop
xchg
sbb
lea
jle
jb
fiadds
xchg
iret
jnp
dec
and
pop
add
nop
lock
mov
jnp
push
es
leave
bound
mov
stc
ret
sti
test
lcall
idiv
jge
adc
daa
fwait
aad
out
xor
inc
pop
adc
rcrb
addr16
push
sbb
cs
shrl
mov
pop
scas
and
sti
jne
in
stos
aad
leave
xorl
in
sub
in
adc
enter
xchg
mov
mov
lret
or
cmp
jb
rcrl
sti
addb
int3
and
ds
scas
mov
xor
jmp
cwtl
imul
cmp
sub
arpl
ja
mov
cltd
je
pop
ljmp
or
in
sarb
or
push
sub
push
loope
pop
push
lret
in
inc
dec
jnp
jbe
push
cltd
cmp
and
xor
adc
shrb
push
push
ss
mov
fs
or
mov
cmp
cmp
dec
xlat
inc
hlt
mov
lcall
mov
pop
out
mov
fs
dec
repnz
dec
scas
add
xchg
mov
cmp
cmp
test
lods
sub
xchg
adc
add
or
fldl
fdivrl
mov
addr16
xor
dec
sub
call
shll
cmpsl
call
jle
in
dec
dec
stos
in
fcompl
hlt
jns
loopne
iret
xchg
dec
lods
aas
sub
outsl
push
add
push
lret
arpl
push
and
aad
mov
loope
aad
and
mov
xor
or
inc
adc
cltd
mov
sbbl
or
mov
cmc
jbe
stos
rorl
es
mov
xchg
cmp
lret
xchg
int
loopne,pn
sbb
cmp
sbb
jmp
gs
sub
jge
das
std
or
idivl
push
in
inc
das
ud2
cmp
iret
fwait
insb
shr
jge
xor
or
outsl
lea
and
jge
sbbl
mov
inc
mov
test
adc
lret
add
add
push
xchg
and
clc
mov
mov
jo
out
jns
mov
cmp
outsl
fdivrl
add
loope
push
mov
addl
addb
rorl
movsb
notl
sub
cmp
xchg
imull
pusha
push
out
xchg
jle
leave
popa
and
data16
movsb
push
push
dec
pusha
pop
and
jmp
loope
pop
mov
push
sub
fmuls
dec
jae
pop
inc
jb
pop
push
js
pushf
mov
in
push
popf
pop
xlat
stc
dec
pop
in
loope
leave
mov
mov
test
inc
sub
lret
pop
in
mov
addb
insl
sub
inc
loop
sbb
popa
neg
jmp
pop
push
mov
add
pop
aam
sub
lret
add
and
push
scas
adc
negl
mov
add
insb
mov
lcall
pusha
cmp
mov
stos
aaa
xor
push
and
cmp
jg
stos
sbb
xor
inc
lret
addb
jbe
push
lret
xchg
push
xor
mov
bnd
xor
xor
or
hlt
mov
dec
stos
daa
sub
and
xchg
push
xchg
cld
xchg
xlat
cld
pop
inc
pop
jmp
mov
push
jnp
inc
ficoms
lock
sub
insl
fidivs
outsb
inc
shlb
jns
xchg
jae
add
dec
mov
movl
test
int
in
jbe
adc
outsb
sub
pop
dec
faddp
add
repnz
xchg
mov
jle
xchg
in
movsb
mov
addb
push
in
lret
adc
daa
mov
xor
inc
push
cltd
outsb
lcall
and
cld
sarb
sub
push
repz
sub
and
jl
jp
jnp
repnz
je
ret
dec
loopne
rorl
adc
rorl
test
pusha
pushf
sub
xor
jle
cmp
sti
jmp
repz
iret
push
imul
stos
jne
hlt
mov
jb
xchg
aas
push
test
test
fldt
jae
repnz
xchg
sub
call
aad
test
adc
cs
enter
cmpl
decb
sub
shlb
push
movsb
ss
fisttpll
mov
or
mov
cli
lcall
cmp
cmp
sti
icebp
test
and
sbb
push
cmp
pop
lcall
cmovne
push
jmp
sbb
out
shufps
dec
gs
push
js
jp
rcrl
jb
je
or
mov
int3
mov
push
stos
addb
cmpsb
cld
icebp
jnp
xchg
add
dec
sahf
adc
loope
outsb
bts
aad
imul
je
rolb
sbbb
add
push
xor
lcall
lret
mov
xchg
mov
aad
mov
es
fisubl
xor
insl
mov
data16
cmp
ret
inc
call
dec
lret
js
arpl
hlt
jge
lock
jb
inc
mov
lds
clc
inc
jmp
out
cmpsl
shll
xchg
sbb
out
xchg
jno
xor
lea
cmp
jns
data16
xchg
push
andl
js
xchg
xchg
je
or
shlb
inc
jmp
js
mov
xchg
lret
loopne
out
inc
mov
mov
cli
xchg
pop
cmp
push
dec
mov
rol
imul
xorb
ret
lcall
jmp
xchg
xchg
adc
adc
and
mov
mov
pop
mov
pop
in
lahf
jmp
sub
cld
ds
sbb
test
mov
daa
mov
movsl
jl
jp
dec
lock
jecxz
push
loopne
cld
bound
mov
bound
stos
mov
mov
leave
sbb
pop
xor
sub
fld
adc
pop
cld
shrb
test
loopne
cs
imul
repz
mov
pop
and
test
inc
push
cmpb
jle
mov
rcll
mov
push
mov
sbb
movsb
sub
lret
int
std
pop
mov
imul
je
inc
jae
inc
mov
push
jp
pop
or
mov
inc
repnz
xor
jmp
cmpl
pop
aad
xor
inc
cmp
sbb
loop
fnstsw
mov
pushf
out
loopne
pop
ret
movl
sti
inc
test
mov
inc
outsb
sub
popa
fcoms
jne
adc
filds
mov
add
and
stos
pop
jb
inc
add
cmc
xor
hlt
xlat
sub
icebp
jb
arpl
jb
in
repz
hlt
shll
inc
mov
xchg
add
iret
hlt
mov
push
inc
mov
adc
sub
loope
inc
pop
xchg
xchg
push
lahf
inc
insb
mov
rcl
mov
sub
lea
and
push
ds
push
inc
inc
fdiv
xor
repnz
out
test
out
sub
data16
inc
sub
and
push
loopne
sub
clc
call
or
pop
push
adc
dec
dec
push
fstps
ja
insb
shll
shll
rcpps
insb
movsb
aaa
sbb
ror
aad
or
add
xorl
lcall
fisubl
jne
fs
push
ficoms
lcall
jae
icebp
sub
jae
lret
mov
sbb
cltd
movsl
mov
daa
int
lds
into
fsubr
fs
pop
scas
push
rorl
jp
div
jnp
inc
xchg
push
enter
fsub
popf
ficomps
or
aad
inc
stc
push
gs
nop
xor
xor
lods
outsb
xchg
shlb
in
fimuls
mov
pushf
das
push
repz
mov
jl
mov
cmp
dec
mov
mov
cmp
ror
or
pop
in
dec
jbe
push
pop
xchg
enter
jg
xlat
jmp
movsb
arpl
pop
and
mov
jne
mov
jae
mov
push
imul
pop
adc
lods
dec
adc
or
stc
push
std
mov
rcrb
mov
xchg
or
add
xor
inc
mov
pop
std
and
sub
push
insb
push
xor
out
repnz
jmp
in
popf
sub
xchg
inc
frstor
or
psubw
es
sbb
dec
je
and
incl
xchg
into
and
xchg
jb
aas
sahf
xor
pop
jbe
outsb
mov
pushf
xchg
and
out
ljmp
sbb
jmp
out
in
arpl
int
sti
push
ficoms
sbb
jnp
in
add
xchg
add
lods
fwait
in
pusha
je
pop
pusha
xchg
or
pop
xor
insb
xchg
pop
xchg
adc
iret
pop
cmp
and
jo
push
dec
push
int3
loop
mov
insl
xchg
sub
scas
ljmp
inc
daa
inc
xchg
mov
push
xor
mov
jl
lea
mov
pop
das
sub
mov
in
dec
or
ja
out
sbb
xor
stos
push
sub
movsb
jae
mov
mov
out
mov
xchg
cld
icebp
in
fidivl
mov
ror
sub
movl
mov
testl
test
lods
pop
mov
aam
add
xorl
add
mov
insb
jecxz
mov
mov
sarl
sbb
cld
out
mov
ds
sub
adc
repnz
jl
add
fcomi
lahf
stc
mov
arpl
and
lcall
dec
test
int
mov
push
sbb
dec
lahf
das
pop
mov
movsl
xor
add
mov
sub
mov
inc
inc
mov
or
cmp
or
into
enter
int3
sti
dec
jp
add
sub
iret
test
push
add
sbb
out
cmp
cli
cltd
movsb
xchg
rclb
imul
in
dec
dec
jnp,pt
push
lds
pusha
mov
xor
push
pusha
push
inc
xchg
pop
cmpsl
aaa
ss
cmp
jmp
lds
sahf
ffreep
jp
jge
xchg
rcrl
lret
call
xchg
push
scas
inc
sar
xlat
loope
je
sbb
inc
add
or
repz
xchg
aaa
idivl
mov
or
xchg
sub
mov
adc
push
pop
xor
lock
inc
and
ljmp
imul
push
pop
lret
xor
sbb
mov
mov
mov
xor
dec
mov
mov
andb
jo
cmc
or
cmp
mov
jnp
mov
imul
movb
mov
mov
ja
push
jno
sub
pushl
rolb
jo
jge
popa
push
imul
xchg
jp
mov
cmp
fistl
and
push
xor
cmp
sbb
stc
push
in
testl
lods
inc
jg
mov
fistl
fwait
sbb
aad
inc
arpl
cmp
dec
leave
imul
dec
aaa
hlt
das
imul
lret
pop
adc
repz
scas
sahf
sub
subl
add
and
movsb
orl
xchg
mov
push
adc
rolb
ds
push
sbb
in
in
mov
popf
cli
repnz
cmpsl
jge
xchg
adc
push
call
jmp
int
ljmp
out
subps
jg
stos
mov
sbb
daa
or
cmp
popf
orl
jne
stc
push
xchg
and
je
lahf
rcr
arpl
bound
movsb
xchg
jb
sub
call
test
std
div
xor
inc
add
ja
cmp
int
insl
or
mov
jb
cmp
in
lea
dec
mov
cmp
jl
cltd
ffree
popa
jno
loopne
loope
adc
sbb
mov
and
dec
xchg
cld
int
filds
and
leave
cmp
inc
fdivrp
loopne
jp
loope
in
mov
add
in
xchg
cltd
call
and
push
lods
outsb
mov
fcomps
mov
push
inc
sub
into
test
mov
addb
insl
aaa
jl
ret
xchg
ret
mov
jmp
lods
pop
push
mov
loopne
fwait
and
mov
rcrl
add
jne
loope
repz
xor
jl
mov
mov
xchg
xchg
rcrb
sub
nop
add
outsl
mov
mov
addb
sub
fistps
je
mov
pop
push
pop
pop
test
lret
sub
lock
das
insb
test
sarl
cmpsb
imul
mov
arpl
or
cmpsb
shrb
mov
dec
test
test
cmc
fistl
std
rcll
insl
jl
push
xor
inc
in
jbe
cwtl
inc
loope
je
pop
movsb
dec
mov
dec
jo
fwait
pop
inc
push
call
lcall
mov
cld
sbb
adc
out
inc
xchg
mov
fwait
mov
ja
icebp
movsb
mov
ret
jnp
sbb
cmpsl
jecxz
ds
jmp
cmp
push
and
outsl
pop
bound
or
fwait
loop
jno
dec
sub
cmp
test
mov
out
inc
cmc
adc
fxch
rolb
inc
in
es
sbb
jge
dec
sub
mov
jmp
sbb
jno
pop
mov
cmpsb
push
fisubrl
mov
arpl
bound
aas
std
repz
cli
cs
push
dec
insb
fcompl
rcrl
rolb
xchg
cwtl
out
mov
ss
mov
sub
dec
dec
cmp
in
jb
push
popf
je
add
insb
add
xor
push
addr16
stos
lock
js
popl
and
mov
mov
jl
popf
lock
pop
jo
or
mov
xchg
push
or
outsb
popf
xlat
jbe
sbb
pushf
add
adc
movsb
sub
cld
sub
sbb
mov
mov
je
mov
mov
adc
inc
mov
sub
in
ret
ljmp
fs
xor
cli
xor
cwtl
push
lret
or
add
pusha
mov
loope
pop
fimuls
adcb
das
notb
aas
cmp
pushf
int
cmc
xchg
int
pop
fs
pop
das
dec
fstpt
sbb
push
or
outsb
shl
dec
jge
push
mov
rcrb
and
cmpsl
pop
sbb
inc
out
mov
insl
add
xor
rep
jne
insb
ret
xchg
pop
mov
ficompl
pusha
mov
aas
mov
add
mov
std
les
lock
shrb
and
test
adc
pop
cli
daa
clc
lret
or
add
lret
pop
sub
sub
arpl
mov
inc
not
inc
idiv
add
mov
das
push
xor
ficoms
jnp
push
fs
ficoms
push
lea
push
push
mov
or
push
mov
in
hlt
adc
hlt
sbb
scas
add
int
dec
mov
popf
adc
sbb
push
sarl
mov
adc
push
repnz
mov
mov
mov
pop
cmp
sbb
das
xchg
push
rcrl
or
or
imull
push
push
mov
sbb
add
movsb
xchg
cmpsl
lea
sbb
ja
mov
stos
insl
sbbl
ja
inc
inc
lods
movsl
pop
lret
dec
pushf
imul
and
fists
aad
mov
aas
mov
out
mov
aaa
pop
aas
pop
xchg
mov
xor
sub
cmp
add
push
sub
lea
pop
stos
pusha
cli
lods
rolb
sar
jge
pop
test
call
mov
lds
push
dec
pop
ret
mov
xchg
and
xchg
ja
and
fnsave
dec
cmp
fstps
and
fwait
mov
cli
aam
mov
sarl
push
rcrb
fwait
jo
mov
js
cmpsl
xchg
xchg
mov
adc
fmul
aas
or
fwait
out
mov
and
push
subb
sub
adc
out
sub
jl
mov
mov
xchg
jo
sahf
xchg
xchg
repnz
out
sub
fldcw
inc
sub
and
sti
stc
arpl
mov
icebp
scas
adc
push
and
stc
pop
cld
mov
xor
mov
jnp
lods
cld
push
daa
and
shlb
pop
inc
pop
lods
iret
mov
xorl
repnz
pop
rol
mov
xor
pop
push
and
cs
xchg
mov
push
stos
out
cmp
pop
shrb
or
or
aam
mov
fwait
sbb
fstpt
jae
out
movsl
mov
sub
arpl
mov
xlat
dec
mov
data16
rclb
ja
sbb
je
or
mov
xchg
add
in
shl
cwtl
inc
test
cmp
std
push
lock
add
pop
stc
cmpsb
sti
add
sbb
or
sub
ljmp
xor
fs
outsl
cmp
sarl
pop
sbbl
daa
cmp
sub
cwtl
inc
stos
insb
cmp
hlt
roll
jb
test
ret
or
mov
js
jne
lods
cli
pop
aaa
hlt
insb
lcall
inc
push
inc
jge
jbe
loopne
xlat
sub
pop
or
aas
aas
cltd
mov
shr
mov
ficompl
mov
out
mov
sub
scas
orl
mov
pop
adc
dec
mov
ljmp
jecxz,pt
jl
in
push
xor
and
mov
jbe
sbb
push
lcall
fistpll
scas
fildl
es
mov
pop
push
and
lret
inc
adc
cs
xchg
cmp
xchg
add
leave
jns
iret
sahf
sub
mov
sub
into
mov
jbe
js
leave
lret
push
cmp
mov
and
lcall
in
push
xchg
push
mov
sub
bound
test
rcr
outsb
int3
pop
pop
xor
xor
or
xor
cmp
mov
jp
out
push
call
cmpsl
test
pop
inc
dec
jno
push
dec
les
sub
jno
int
rcr
inc
mov
mov
mov
push
mov
repz
insb
lods
pop
mov
inc
dec
sahf
xorb
mov
je
push
cmp
mov
push
jae,pt
imul
adc
push
push
dec
xchg
inc
dec
scas
jmp
arpl
scas
dec
or
pop
mov
xchg
cmpsl
sbb
arpl
pop
mov
mul
lods
mov
mov
pop
ds
dec
push
jnp
bound
repz
jge
push
imul
cmpsb
adcb
or
vcomiss
insl
jge,pt
imul
jp
mov
in
xchg
dec
or
cmp
cltd
notb
cli
js
xchg
jns
pop
sub
lcall
or
push
jg
and
mov
xchg
subl
call
pop
xor
push
scas
add
jb
in
adc
xrelease
repz
data16
dec
icebp
ds
xchg
aam
and
inc
inc
sbb
shrl
fs
xlat
cld
sti
sub
mov
testl
and
call
in
mov
pop
test
cmc
sbb
inc
xor
aam
inc
fcmove
pop
mov
in
fisubrs
lods
popa
sti
loopne
fildll
insl
inc
cld
cmpsb
adc
xchg
adc
fmuls
pop
add
adc
cltd
cmp
mov
push
jl
jp
mov
lcall
sub
and
sub
cmpsl
push
rol
in
push
cli
stos
inc
out
andl
lods
ret
mov
jge
mov
and
les
loopne
mov
out
xchg
aas
sbb
clc
fisubs
fwait
mov
cmp
dec
or
out
pushf
mov
aaa
in
fcoml
repz
xchg
loop
popf
fcompl
fildl
repnz
mov
jnp
mov
mov
lret
cmpl
call
sbb
jp
stc
push
stos
dec
push
push
nop
out
jo
add
or
adc
and
pusha
mov
fnstenv
outsl
xor
test
push
pop
xor
or
shrb
test
insl
cs
negb
movsl
jmp
jecxz
xor
fistl
xor
ss
movsl
dec
mov
lea
push
aam
fidivl
cltd
adc
lcall
push
bound
mov
sub
cmp
jb
cs
mov
lock
mov
sub
push
ret
jp
or
jns
sbb
cs
cmp
push
push
xchg
cwtl
dec
lahf
sbb
adc
pop
pop
pop
aaa
fwait
mov
mov
xchg
or
xchg
jae
push
iret
inc
mov
idivl
cmp
out
call
adc
cmpsl
mov
mov
add
cld
sbb
dec
fcompl
test
sahf
lret
scas
jle
rolb
cld
jns
and
dec
outsb
jb
movsb
sbb
sahf
cmp
int3
insl
repz
sbb
stos
inc
outsb
add
scas
cmpl
pop
mov
mov
outsb
out
std
push
pop
jp
js
mov
sbb
adcb
jge
push
push
pop
lods
mov
sub
fsubrs
testl
xchg
mov
jmp
test
jns
fdivr
dec
dec
loopne
sbb
xor
mov
jle
fwait
adc
mov
fs
sub
jns
ret
push
enter
cltd
adcl
xchg
fs
jg
js
imul
insl
lcall
mov
out
out
xchg
sub
out
mov
add
push
adc
int3
sbb
ficoml
inc
jnp
sti
rcr
mov
jge
push
jno
fldcw
xor
ret
ret
pop
aas
data16
push
imul
clc
adc
scas
clc
jns
pushf
pop
jae
int
mov
lret
sbb
or
push
inc
add
outsb
mov
cwtl
mov
cli
ljmp
in
mov
pop
idivb
sti
insb
sarl
shrd
adc
or
adc
sbb
push
inc
xchg
push
jl
and
xchg
mov
insl
ret
jo
and
sub
or
cs
fstps
pop
sub
cmp
out
inc
cmp
fwait
dec
shl
pop
rol
mov
push
mov
sti
pop
frstor
inc
sub
mov
adc
call
das
xor
inc
test
js
rclb
jecxz
jl
out
bound
mov
or
fisubl
cmpsl
add
or
pop
cmc
in
icebp
sub
and
xchg
xchg
and
out
xlat
and
fs
mov
xchg
aaa
push
pop
andb
pop
dec
das
movsl
cmp
adc
mov
mov
dec
pop
cs
add
cmp
cmp
mov
jg
fisttpll
cwtl
xchg
gs
mov
cmp
inc
pushf
mov
sbbl
das
pop
pushf
dec
sbb
cmp
mov
lret
jb
mov
aad
push
jmp
jnp
mov
jae
ja
add
aad
cli
cmp
scas
ljmp
jecxz
pop
test
stc
test
pop
jecxz
mov
shrb
addr16
pop
push
sbb
mov
insl
cmp
jns
dec
cmpsl
imul
out
ret
popf
in
sahf
mov
repnz
xchg
and
popf
arpl
ret
cmp
jns
cmp
scas
or
adc
pop
dec
push
mov
dec
mov
decl
add
push
inc
and
adc
add
enter
mov
push
cmp
push
xor
lds
pop
xchg
cli
mov
out
add
rcrl
icebp
mov
hlt
jl
sub
ficompl
push
jmp
idiv
nop
dec
xchg
mov
cmp
mov
cmpsb
rolb
mov
jg
cmp
inc
pop
ss
orb
outsl
add
mov
dec
xchg
mov
loope
add
shll
jmp
pop
pop
rcr
gs
push
movsl
imul
xor
data16
dec
mov
cmc
push
adc
and
xor
and
mov
jg
mov
lcall
xchg
mov
xchg
or
jmp
das
test
mov
call
fisubs
cmc
push
jl
outsb
mov
das
xorl
in
xchg
loopew
rclb
mov
inc
mov
and
daa
lahf
mov
cmp
mov
push
shr
enter
push
pop
or
ss
xchg
insl
and
mov
mov
and
test
ret
into
sub
shll
insl
xchg
xor
inc
scas
pop
lods
sarl
je
sub
xor
xor
jbe
insl
popa
leave
fadds
mov
pop
jle
pop
dec
push
flds
inc
hlt
mov
mov
jbe
dec
or
jno
sbbb
loopne
pop
pop
push
lods
push
xor
xor
cld
xchg
fnstcw
inc
jmp
in
out
stos
sbb
call
jle
scas
cltd
pusha
shl
sbb
js
jbe
decl
xor
inc
xchg
lods
arpl
stos
ret
jnp
lret
lock
xchg
cld
lea
fidivl
pop
int3
or
fcmovne
xor
xchg
into
pop
mov
xchg
push
inc
negl
ret
addr16
adc
mov
lret
jno
out
pop
cmpl
jb
fsubl
out
aas
pop
adc
mov
adc
fisubs
loop
jne
ljmp
arpl
jo
loopne
dec
pop
pop
ljmp
das
pop
mov
out
aas
out
mov
fbstp
insl
test
add
lret
sub
adc
xchg
adc
pop
fs
sbb
rclb
shll
adc
nop
lds
out
adc
xor
xlat
lret
loope
cmp
fwait
xchg
mov
je
or
or
jnp
enter
inc
stos
xchg
push
lea
pushf
push
shrl
fcoml
test
sub
sub
inc
cmp
mov
pop
jecxz
xchg
lods
inc
mov
mov
dec
push
jle
add
rcll
xchg
mov
in
arpl
push
add
rcrl
cli
xchg
int
int
nop
cmp
jmp
enter
jg
lods
xor
lds
lods
push
test
pop
xchg
repz
lds
ds
inc
add
mov
ret
daa
jne
add
cltd
inc
cli
scas
mov
call
add
jmp
lock
dec
popf
cmp
xchg
sbb
pop
test
sbb
jo
jmp
add
movsb
test
push
je
mov
cmp
fidivrs
test
lods
ja
jmp
ret
movsb
icebp
in
mov
pusha
xor
mov
xchg
out
lods
shrl
test
push
mov
cmpb
negl
mov
fists
push
mov
or
cmp
mov
mov
adc
push
and
inc
sti
sbb
stc
xchg
or
decb
pop
cmp
and
lahf
xchg
push
scas
jle
inc
xchg
ja
push
pop
or
cmp
pusha
push
push
dec
sbb
shrl
mov
sub
inc
sbb
scas
pop
mov
push
adc
mov
and
adc
pop
push
dec
jmp
xchg
pop
mov
xchg
addr16
jecxz
inc
inc
fs
cmp
xor
and
adc
xor
add
sti
jg
int3
ljmp
das
les
outsl
xchg
xor
mov
out
push
pop
mov
ret
inc
mov
inc
dec
push
sub
cmp
pop
dec
ja
xchg
data16
inc
mov
scas
xlat
sbb
rep
popf
lods
aam
cwtl
data16
clc
and
xor
sbb
xchg
push
cmp
sarl
gs
cmp
adc
add
scas
jns
into
loop
mov
mov
rclb
or
dec
rclb
jo
push
roll
xchg
enter
pop
rclb
and
and
push
repz
insb
shl
sarb
ss
out
idivb
lret
sbb
jmp
lret
data16
fcmovbe
mov
fistl
loopne
or
movsl
stc
xor
mov
movsl
jge
sbb
xchg
rcl
push
fsubl
xor
xchg
das
loop
xchg
shl
inc
lret
or
and
mov
xchg
jle
jnp
stos
scas
pop
outsl
pop
adc
test
adc
sbb
pop
sub
fdivrl
sub
sti
ret
repnz
xchg
add
sbb
add
icebp
sbbb
jbe
les
push
mov
cld
and
popf
pop
lods
xchg
push
or
push
iret
rorl
and
arpl
mov
sbb
insb
outsl
sti
xchg
aaa
aas
dec
mov
jl
ljmp
out
mov
push
adc
adc
aaa
daa
ror
xchg
jle
pop
sub
ret
inc
lods
and
mov
and
push
fidivrs
rcrb
aaa
pop
xor
cmp
repnz
call
js
sbb
cmpsb
scas
or
fsubs
imul
add
sbb
test
xor
xchg
cmp
loopne
pop
cmp
pop
adc
mov
std
cmpb
mov
mov
adc
sbb
outsl
nop
sbb
sbb
jecxz
pop
test
push
das
add
pop
mov
call
lods
ja
and
out
imul
inc
fsubr
lcall
in
lods
mov
mov
in
das
ds
shlb
xchg
jbe
sti
out
in
pop
xchg
arpl
ret
mov
sbb
and
pop
and
xchg
add
mov
jo
xchg
cli
ds
inc
xchg
fidivl
cmp
push
lret
add
outsb
mov
and
mov
enter
dec
or
mov
dec
mov
sub
nop
test
mov
sub
sub
jo
repnz
daa
mov
xchg
stc
pop
popa
add
loopne
cld
jb
cmp
repnz
xchg
outsb
jmp
xor
or
pop
in
mov
loope
add
sbb
lret
shll
push
xchg
lods
test
popf
inc
pop
sbb
out
inc
cmpsb
std
lret
push
decl
fildll
pop
xchg
fucomip
cmp
arpl
fstpt
or
shrb
inc
jmp
add
in
ficoml
sti
xchg
pop
std
std
xchg
mov
jbe
enter
jmp
xor
fisttps
lds
aad
adc
cmp
pop
les
pop
pop
insl
dec
add
stos
lods
and
sbb
stc
pop
jae
pop
loop
xlat
sub
cmp
cmp
int
shr
mov
and
icebp
push
mov
mov
push
mov
lods
addr16
int3
dec
std
push
push
xchg
nop
loop
push
dec
mov
lock
movsl
test
inc
inc
mov
mov
jae
push
cld
dec
fldcw
lock
add
mov
dec
int
jns
test
push
dec
jno
int
insb
jg
sub
push
into
aas
add
push
std
fsincos
push
add
add
mov
xchg
xor
jns
mov
mov
push
fwait
and
xor
test
mov
dec
push
insl
jg
push
arpl
movsl
fnstcw
xchg
loopne
sub
in
into
cld
negb
cmp
int3
dec
push
mov
insl
xchg
stc
fdivr
lcall
loop
adc
xlat
add
pop
push
or
push
mov
ja
pop
repnz
repnz
or
xor
cmp
fnstenv
std
subb
push
push
inc
mov
outsl
push
xor
adc
push
mov
loopne
push
sbb
aam
scas
xor
pop
in
fwait
int3
cmp
dec
test
xor
in
mov
gs
mov
idivl
nop
fmull
nop
ret
inc
dec
mov
inc
adc
std
and
outsb
daa
aam
xchg
jne
or
pop
mov
mov
mov
mov
lods
imul
rcrb
sbb
lods
jp
movsl
dec
mov
pop
lods
pop
pop
mov
push
sub
test
daa
jbe
in
add
xchg
inc
out
sub
gs
cmpb
mov
push
push
sahf
test
jg
jb
int3
inc
mov
dec
jg
or
xchg
push
iret
enter
lock
lods
dec
rcll
xor
xlat
jmp
mov
sbb
addl
dec
nop
rcrb
dec
je
sub
fists
mov
nop
stc
push
jp
imul
xchg
push
inc
adc
xchg
lea
leave
into
jmp
mov
inc
movsl
lods
test
add
push
popa
fdivrp
xor
jne
fiaddl
mov
out
das
fistpll
mov
fsubrl
mov
mov
out
dec
popf
push
jecxz
int
clc
icebp
mov
rcrb
cmpsl
repz
std
in
fwait
jbe
sbb
in
xchg
movsb
fs
lods
dec
adc
mov
sub
cli
xchg
ja
filds
out
sub
ds
jns
xor
pop
mov
sub
sub
cmp
popf
rcrb
lds
rorl
mov
test
movsb
dec
fwait
mov
mov
or
push
ljmp
add
adc
mov
xor
dec
aam
mov
dec
xor
push
push
xlat
inc
insl
sub
push
fwait
rcrb
pop
sub
nop
xchg
stos
pop
loopne
cmp
mov
aad
mov
ficomps
push
inc
ret
jno
xchg
mov
stos
ret
in
jns
movsl
cltd
lret
xor
xor
push
fsubrs
lahf
push
jb
dec
scas
or
fsubrp
cmp
nop
fisttpll
sbb
sar
adc
inc
xchg
scas
loop
cmp
bound
in
dec
mov
and
adcb
into
add
mov
imul
sbb
mov
out
cmp
push
arpl
xchg
or
sub
andl
fidivs
rcrl
daa
insb
inc
aad
or
ds
mov
ret
loope
jo
push
mov
pop
lcall
adc
dec
sbb
jg
stos
xchg
jne
data16
popl
fst
or
rclb
add
dec
mov
sbb
ret
movsb
cmp
sti
rcll
sbb
rclb
lret
push
dec
inc
and
inc
pusha
xchg
bound
jl
xchg
mov
imulb
sbb
or
add
lock
gs
dec
sub
or
push
or
fstl
jne
jbe
xor
sub
dec
pop
sbb
push
and
mov
xchg
fadd
int3
in
push
lret
pop
cmpsl
iret
stos
sahf
jno
jbe
arpl
jl
scas
gs
adc
fisttps
orb
xchg
fs
ja
int3
sub
or
ja
aam
hlt
inc
in
andb
add
jmp
les
lods
xchg
xchg
inc
add
and
push
or
pushf
jb
jge
call
cs
int3
je
mov
jns
and
mov
xchg
fmul
jmp
mov
cli
divb
mov
shl
cmp
xchg
pop
in
pop
addr16
fmulp
scas
test
fwait
shrb
xchg
and
add
or
iret
test
inc
push
push
sbb
sub
fistps
jmp
push
flds
mov
scas
call
jnp
outsl
orl
stos
jge
sbb
outsl
mov
xlat
hlt
xor
icebp
xlat
add
cwtl
xorl
and
dec
cmpsb
dec
jle
add
cmpsl
pop
out
jmp
push
and
sbb
pop
mov
pop
repnz
lcall
shrl
test
jbe
hlt
popa
mov
loop
inc
and
lret
lahf
outsl
and
insl
test
es
add
mov
adc
cmpsl
add
push
imul
loop
inc
popa
mov
lods
jns
push
xchg
or
adc
ret
mov
push
mov
fadd
cmp
xor
xor
xchg
xchg
ljmp
jle
jmp
xchg
arpl
sbb
mov
or
jmp
push
cmp
adc
pushf
fwait
xor
inc
aas
push
fidivs
test
scas
xchg
and
fucomp
ret
in
stos
or
xchg
in
ljmp
fcmovnu
mov
js
add
pop
xor
push
dec
mov
xor
rorl
mov
cmpsb
jl
daa
stos
push
mov
jmp
ror
sub
cmp
shrl
sbb
push
rcrl
mov
xchg
insb
mov
popa
jmp
cwtl
cmpsb
pusha
jge
rorl
dec
std
ss
shlb
push
je
inc
repz
idivb
mov
aaa
fcoml
movsl
iret
loop
sbb
sbb
xchg
call
out
sub
mull
nop
mov
mov
gs
adc
sbb
sub
inc
cmp
lods
or
mov
ss
lea
and
das
fadds
aad
add
insl
dec
lock
iret
int3
ljmp
adc
xor
int3
pop
xor
jp
gs
jns
push
repz
inc
add
xchg
aad
in
js
mov
pop
addl
das
mov
mov
ds
ljmp
sbb
js
fdivrp
les
sbb
fmul
sbb
movsl
xor
fdivr
add
xchg
in
ljmp
push
mov
jl
push
scas
ficomps
adc
push
xchg
cltd
fisubl
test
pop
cmp
repnz
call
sbb
inc
cmp
cld
into
je
push
inc
fcmovb
cs
enter
je
push
mov
es
and
dec
pop
push
cmp
xchg
bound
pop
push
xchg
sub
xchg
inc
cmp
inc
xchg
fistpll
fldz
dec
lods
and
pop
sub
adc
pop
cmp
adc
iret
ljmp
rorl
jl
dec
dec
lods
xlat
cwtl
bound
cmp
mov
add
int
repz
mov
inc
inc
adc
fcoms
inc
add
sbb
xor
movsb
dec
imul
dec
push
mov
ss
mov
jae
je
jo
xor
xchg
mov
in
xor
leave
push
jmp
or
cmp
sub
les
aam
fldcw
pop
push
out
or
hlt
scas
push
or
xchg
jle
in
cs
lock
ret
leave
ficoms
ret
xchg
or
dec
jns
and
mov
rorb
mov
inc
shrb
rorb
dec
iret
ljmp
notb
outsb
fwait
xor
jp
cmp
movsl
das
lods
insb
sbb
push
std
mov
daa
imul
rcrl
mov
add
stos
sahf
jns
sbb
inc
pop
inc
ss
push
push
mov
jo
arpl
sub
jae
jbe
or
sub
pop
mov
dec
add
aas
dec
sub
inc
ja
mov
in
sbb
in
fdivl
arpl
xchg
adc
mov
push
mov
mov
cltd
push
sti
cmp
hlt
inc
insb
fnstcw
mov
fcmovnbe
xchg
jbe
gs
add
repnz
xchg
loop
mov
push
mov
xchg
mov
push
jmp
cld
xchg
pushf
data16
mov
fistpll
mov
shlb
mov
js
inc
pop
or
jl,pn
js
lcall
push
hlt
sbb
or
adc
fisttpll
aas
aas
clc
inc
out
jl
lods
das
sub
and
dec
cli
sub
xchg
add
sub
pop
sahf
cwtl
ret
fcmovu
inc
mov
adc
xorl
jbe
push
loop
leave
sahf
add
out
push
sbb
jno
subl
mov
dec
mov
sub
movsb
jl
fcompl
fcmovb
cmp
pop
mov
adcl
mov
cmpsl
xor
nop
dec
mov
xor
sbb
addb
fstps
sahf
pop
push
ret
xor
mov
sbb
sti
and
cmpsb
movsl
in
aaa
and
fcoms
nop
pop
negl
pop
inc
data16
mov
inc
sbb
lock
mov
loope
mov
cmpsb
push
test
cli
fidivl
cmp
push
icebp
xchg
lret
xor
popf
aas
sub
ljmp
insb
cmp
cmp
push
popa
dec
mov
test
inc
sub
sub
and
into
dec
or
insb
int
iret
mov
jns
mov
push
xchg
sbb
mov
cmpsb
push
out
and
mov
ja
stos
insb
nop
push
popf
and
inc
cmpsb
xchg
cmp
fists
push
pop
in
insl
add
dec
inc
dec
hlt
addr16
push
jmp
lahf
mov
lcall
and
or
jp
je
enter
adc
mov
jp
mov
cmpsb
pop
fst
notl
mov
add
sub
roll
stos
xor
push
aam
jbe
add
sub
into
xor
cmp
lods
mov
into
or
out
rcr
scas
sbbl
fsubrl
and
rcr
cmp
gs
into
and
mov
movl
lcall
andb
cmp
push
jp
xor
cmpsb
inc
fdivl
in
mov
lcall
loop
cmpsb
hlt
fstps
push
jg
mov
bound
dec
jp
cmp
sbb
mov
ret
cli
xor
mov
and
push
enter
sbb
repz
out
cmp
in
insb
out
pop
cmp
mov
mov
imul
cli
cmp
jg
push
js
stos
jle
mov
push
jb
or
das
mov
shrb
mov
inc
shrl
dec
roll
mov
adc
int
mov
div
daa
gs
push
sbb
sbb
ja
test
xor
out
lahf
movsb
sbb
xchg
ja
aaa
test
sub
aaa
push
in
roll
dec
sbb
push
pop
lock
aaa
sub
std
movsl
test
into
ret
xor
push
out
inc
jp
js
xchg
dec
insl
int
dec
loope
ja
outsb
push
jns
rcr
or
pop
imul
pop
xor
xor
mov
push
into
sbb
push
in
push
and
andb
test
xchg
xchg
mov
andl
leave
mov
sahf
adc
cmp
ja
call
aaa
xor
in
fs
das
mov
test
lcall
stos
jmp
nop
lahf
mov
popf
push
cmp
inc
js
inc
outsb
aam
or
mov
push
mov
loope
inc
imul
inc
mov
pop
mov
sbb
sti
repnz
mov
ret
mov
repnz
add
jae
scas
rolb
shl
stos
adc
mov
sub
addr16
xchg
mov
add
jnp
clc
movsl
sub
inc
lock
jae
adc
mov
or
andb
test
es
mov
mov
pop
push
leave
nop
shll
adc
xor
mov
lcall
jl
push
inc
aad
insl
mov
jno
or
mov
repnz
mov
call
sarb
bound
add
shlb
mov
cmp
push
jno
imul
fstl
pusha
push
pop
jle
jns
shlb
lods
cmp
mov
stos
mov
xorb
pop
xchg
lods
fdiv
ror
adc
cmp
jb
cmp
inc
jbe
cmp
push
mov
dec
mov
js
add
mov
out
add
sbb
cmpsl
sbb
lret
xchg
imul
and
data16
xchg
mov
inc
stc
dec
dec
outsb
leave
cmpsl
sbb
int
in
imulb
out
mov
mov
add
jg
movsb
cmp
or
mov
jl
jl
adc
insl
imul
push
mov
xor
stos
xor
jmp
mov
js
cmp
call
jae
xor
or
aaa
shlb
and
cmp
add
jbe
ja
jge
gs
jns
mov
push
mov
jg
pushf
jb
imul
dec
loop
pop
int3
xor
aaa
add
jp
sub
mov
or
jno
push
mov
jb
stos
mov
lods
push
outsb
push
inc
movsb
push
dec
sbb
addl
or
ret
jg
popf
xchg
push
cmc
mov
lods
mov
pushf
test
pop
sub
mov
js
sbb
push
out
arpl
nop
pop
mov
daa
mov
inc
es
int3
jo
mov
scas
pusha
mov
call
sub
test
repz
sarb
inc
mov
insb
ds
adc
lcall
in
xor
xchg
jecxz
mov
inc
bnd
inc
lahf
mov
pop
cmc
push
xchg
in
cmp
add
test
mov
adc
sub
scas
xlat
mov
and
imul
imul
lahf
adc
adc
push
mov
sub
std
pop
jecxz
add
fidivrs
ret
sub
std
jg
fimull
js
mov
hlt
sbb
rcll
jno
jno
jae
xchg
fbld
mov
jp
dec
aad
xor
je
scas
sbb
cmc
lock
xchg
sbb
jbe
sahf
shl
pop
xchg
xchg
push
inc
push
lods
push
in
js
jg
fsubrp
xchg
or
mov
xor
or
fwait
adc
mov
sub
push
inc
mov
jge
imul
icebp
testb
sahf
cmpb
xchg
sti
or
mov
outsl
push
les
push
sub
fnstenv
jo
insb
insl
pop
push
push
inc
xor
test
or
adc
clc
in
mov
jecxz
inc
call
inc
pop
add
test
lret
imul
add
in
ficoml
cmp
andb
inc
fucomp
es
shrl
xchg
mov
and
daa
daa
cmp
std
fstpt
lahf
ss
cmp
push
std
cmp
mov
test
mov
jle
xchg
push
pushf
or
nop
cli
mov
icebp
sub
scas
and
pop
mov
lret
sti
and
pushf
pop
pop
xchg
pop
out
shrb
pop
mov
inc
addl
les
mov
jp
inc
out
arpl
pop
add
sbb
jb
bound
xchg
push
or
mov
aaa
ss
in
cmpsl
lods
xor
dec
nop
push
or
scas
lret
int
dec
push
das
push
test
sarl
test
insb
lcall
imul
stos
mov
xor
mov
cmp
clc
cmpsb
fsubs
inc
nop
nop
pusha
mov
cmp
sbb
cwtl
mov
repnz
jnp
jle
push
cmp
jp
sbb
mov
sub
push
ss
ficomps
loopne
push
test
dec
push
mov
jecxz
push
cmp
lret
lds
xchg
inc
scas
sarb
int
push
sub
and
xchg
sub
cwtl
mov
push
push
movsl
xchg
data16
pushf
mov
push
daa
pop
pop
jnp
cmp
xchg
in
cltd
push
adc
sub
lcall
cmc
cli
cmp
inc
dec
pop
dec
in
daa
add
sbb
xchg
sub
jae
dec
inc
cmp
repz
gs
es
xor
inc
in
xchg
sub
iret
sbb
xchg
inc
rolb
mov
loop
dec
mov
or
pop
xor
lods
mov
and
in
jp
mov
adc
or
rorl
jbe
jnp
mov
pop
movl
xchg
mov
cmpsb
xor
andl
pop
adc
aaa
mov
out
sub
or
or
and
cmp
lcall
push
push
mov
pop
adc
nop
jg
mov
push
ss
pop
rorl
das
xchg
jb
daa
shlb
mov
test
push
push
lods
xchg
fs
lods
xchg
adc
add
mov
and
and
pusha
add
lret
aam
add
ret
test
fs
ljmpw
seto
clc
imul
outsl
adc
shll
cmpsb
inc
jnp
movsl
outsb
xor
clc
iret
lret
pop
or
cmc
out
sub
jle
jg
std
xlat
mov
fsubrp
mov
sar
popf
jmp
jbe
pop
push
or
daa
jmp
pop
mov
inc
lahf
push
rcrl
aam
lahf
loope
pop
stos
data16
repnz
addl
xchg
in
or
idivl
popa
loope
xchg
imul
mov
mov
dec
or
rcrb
sahf
sbb
xor
mov
fcompl
bound
push
dec
ret
jl
mov
jle
jl
int
outsb
jmp
xchg
out
or
fs
arpl
fcmovnu
cmp
fwait
mov
sbb
das
std
push
pop
out
lret
adc
data16
pop
adc
xchg
push
gs
cltd
ret
mov
mov
call
cmp
loope
xchg
cli
mov
xchg
xchg
int
add
or
and
xchg
or
sarb
movsl
xchg
rcll
aaa
arpl
scas
daa
imul
inc
les
sub
outsl
xor
cmp
rcll
lock
divb
jnp
and
and
xor
cltd
insb
in
clc
movsl
fucomi
lahf
sub
pop
pop
mov
add
adc
js
jl
cmpl
sahf
xchg
inc
adc
add
adc
push
push
dec
inc
xchg
or
lret
lds
xchg
das
mov
daa
je
icebp
pop
clc
pushf
dec
in
mov
jecxz
int3
adc
xchg
gs
jl
adc
jnp
pop
mov
nop
jno
mov
ret
push
dec
sub
pop
xchg
aas
in
arpl
sub
and
jl
repz
jl
mov
or
adcb
mov
push
ret
cmp
lods
mov
inc
rcll
fcoms
cmp
in
xchg
sbb
outsb
sub
lods
ja
lret
add
scas
in
das
jle
in
jae
shl
outsl
jnp
xchg
jg
adc
lcall
cltd
sbb
dec
fsubrl
mov
sbb
dec
fmulp
repnz
es
mov
cmc
dec
nop
pop
jns
dec
adc
jae
stos
adc
mov
pop
dec
pop
mov
cltd
inc
pop
sbb
adc
call
jle
pop
xor
push
rolb
stos
mov
fidivrs
adcb
dec
adc
mov
jne
aam
cmp
cltd
jl
movsl
mov
lods
sub
fnstcw
in
jae
fmull
mov
xor
and
sub
insb
in
scas
sub
inc
imul
ret
pushf
inc
mull
int
jbe
mov
xchg
jmp
push
mov
jno
loopne
xor
sbb
imul
pop
jo
incl
cld
mov
jmp
push
cmp
sub
and
imul
fs
xchg
shlb
xor
xchg
lahf
add
adc
int3
sub
pushf
dec
and
pushf
adc
pushf
mov
inc
sbb
mov
jmp
sbb
add
xchg
test
movsl
mov
pushf
rorl
fmuls
pop
mov
push
imul
test
inc
push
std
jno
jl
cli
inc
jle
out
rclb
aam
in
lock
test
mov
mov
adc
add
jp
mov
les
out
inc
fcmovnu
mov
and
sub
scas
xor
fs
jg
aaa
mov
and
add
jle
cmp
mov
or
push
popl
adc
fisubrl
popf
inc
push
into
push
cmc
push
std
xchg
fwait
cli
arpl
dec
ljmp
adc
adc
jno
or
jmp
out
lret
sti
pop
stos
imul
fmuls
lahf
mov
inc
push
jb
sub
cmpsl
mov
lret
enter
popa
mov
jmp
dec
out
and
addr16
es
data16
fsubrs
repz
xor
fnstsw
fidivs
lea
les
call
orb
add
add
push
scas
ja
jbe
xchg
sbb
popf
add
mov
or
mov
sbb
pop
xchg
xor
adc
data16
adc
and
xlat
icebp
xor
je
sti
loope
jl
cmp
lcall
scas
sub
mov
pminub
sub
sbb
mov
cmpb
cwtl
or
mov
call
mov
push
iret
negl
xchg
inc
xchg
scas
cld
insb
mov
cmp
or
sahf
movsb
mov
test
cli
adc
je
test
adc
sub
lods
pop
sub
dec
push
mov
aas
ja
jp
push
cltd
rclb
sbb
neg
ror
pushf
pop
in
cmp
std
cmp
insl
sbb
imul
or
fnstsw
out
dec
andb
push
and
lret
jae
xor
sub
jo
add
sub
jnp
pop
cmp
adc
xlat
imul
loope
daa
pop
fldz
xor
inc
loope
test
and
sub
mov
xchg
jno
mov
dec
imul
insl
pushf
scas
jmp
and
xor
mov
dec
fmulp
mov
cmp
lock
mov
lret
xchg
jnp
les
outsb
jns
mov
lea
mov
add
inc
sub
xor
call
fistl
fldl
out
mov
cmp
scas
ss
jmp
repnz
push
scas
adc
dec
inc
inc
dec
push
js
rolb
fmull
popf
sbb
shrb
cmp
jmp
xor
jp
add
inc
or
imul
sbb
out
mov
dec
push
ffree
in
add
jo
notb
cmp
dec
sahf
nop
sbb
dec
push
test
loope
cmp
and
sbb
add
test
jae
int
add
cmp
jns
lret
mov
jns
ficoms
imul
inc
shll
xlat
dec
and
jmp
scas
adc
dec
xor
mov
mov
pop
lahf
fidivrl
xor
mov
add
and
xor
mov
xor
dec
js,pt
mov
dec
or
stos
sbb
or
or
rorl
pcmpgtb
add
mov
xor
push
fwait
add
loop
xchg
repnz
ds
xchg
into
mov
xor
or
hlt
call
cmp
int
out
shlb
jp
lds
inc
test
je
jne
les
push
sbb
movsb
in
mov
imul
xor
mov
xor
out
or
or
sub
in
repnz
int
rcr
mov
jmp
test
icebp
test
aaa
sbb
vpdpwssds
mov
or
sbb
pop
mov
push
sarb
jo
adc
addr16
addb
jl
dec
push
cmp
inc
dec
mov
jnp
jp
adc
in
lcall
dec
jecxz
je
ficoml
clc
mov
jmp
or
ja
loope
inc
cmpsl
mov
mov
fidivrl
orl
leave
ljmp
xchg
cmp
aam
js
or
jno
mov
insb
jae
sub
js
push
pop
inc
xchg
and
xchg
movsb
sahf
jae
mov
sbb
xchg
mov
sub
inc
mov
int3
movsb
sub
sbb
jnp
out
ret
lds
push
mov
dec
outsb
mov
out
push
dec
mov
push
push
aaa
mov
pop
sbb
inc
test
leave
sub
adc
shlb
sbb
mov
mov
mov
lock
outsb
aas
xchg
icebp
sub
jne
insb
add
xor
xor
fcoms
push
into
in
mov
pop
sahf
iret
outsl
sbb
loope
rcll
roll
test
jae
mov
push
xchg
or
inc
test
movsl
pop
xor
jae
mov
ret
ror
stos
adc
mov
clc
sbb
pop
jae
sti
lods
push
jg
aas
xchg
cwtl
les
add
mov
ljmp
sarb
adc
mov
inc
and
xchg
outsl
insl
dec
icebp
mov
xchg
or
fildll
jne
aam
pop
nop
jmp
loope
clc
push
lret
dec
inc
decl
jnp
xor
loope
xchg
jge
inc
daa
mov
xlat
cmp
outsb
rcr
xchg
jp
lea
inc
inc
andb
jnp
adc
dec
cmp
xlat
fmuls
jnp
loop
push
cmp
push
push
jp
add
imul
mov
pop
sbb
stc
xor
lock
movsl
inc
inc
lea
push
cmp
fsts
jbe
cmp
stos
ret
sbb
int
dec
cmp
inc
outsb
jo
pop
adc
pop
jbe
adc
aaa
mov
test
xor
lret
imul
test
shll
pop
in
repz
pop
hlt
dec
subl
add
xlat
stos
test
outsl
xchg
sahf
cmp
xor
iret
cmp
test
outsl
cmp
mov
jno
and
xlat
sub
lock
push
adcb
inc
pop
and
push
popf
dec
dec
jns
cmp
jge
ret
jle
xlat
inc
movsl
mov
outsb
cmpsb
orl
cmp
into
mov
lods
sti
jmp
or
repz
outsb
mov
pop
clc
push
or
ret
ja
xor
es
clc
enter
jl
lcall
xchg
or
ss
and
mov
push
into
sbb
mov
cmp
mov
mov
mov
and
inc
mov
lret
sbb
lcall
out
incl
jle
push
pop
add
push
mov
add
pop
pop
in
movsl
adc
or
sbb
pop
push
xchg
xchg
das
mov
ror
je
sbbl
mov
mov
xchg
inc
mov
in
push
adc
enter
out
mov
pop
push
aam
test
sbb
test
pop
enter
cmp
icebp
push
pushf
pop
scas
gs
push
mov
decl
sub
cmc
mov
push
outsb
movsb
xlat
inc
mov
out
leave
xchg
push
and
xchg
ret
fwait
aaa
sub
push
lods
test
shll
imul
xchg
pop
mov
ds
nop
xchg
popaw
xlat
cltd
sub
into
pusha
rolb
rorl
push
cmp
mov
pop
test
jno
sub
cld
enter
and
pop
ss
in
mov
sbb
rcrb
movsl
mov
xor
aas
push
arpl
int
or
or
sub
dec
cmc
out
xor
std
imul
rcrb
scas
loop
xchg
jne
hlt
inc
and
push
fisubl
int
movsb
cltd
add
cmpsl
out
jp
outsb
rclb
xchg
mov
ljmp
je
sti
xor
push
test
mov
lds
cmp
xor
adc
popf
fidivrs
or
insl
mov
adc
stos
mov
cld
jle
rorb
push
call
stos
mov
xlat
sbb
push
jp
out
shll
xor
inc
popf
dec
dec
inc
push
mov
inc
cld
imul
dec
fdivrs
out
dec
mov
rcrl
cmp
adc
jle
mov
cmpsl
mov
push
jno
je
aaa
or
shr
fsubl
mov
stos
mov
fists
xchg
rclb
fistps
xor
aad
test
movsl
mov
scas
add
cmp
mov
jmp
jle
cwtl
push
into
add
inc
sbb
jecxz
dec
jno
mov
cmp
call
incb
xor
lahf
lahf
lahf
stos
mov
adc
adc
push
push
jl
add
inc
dec
or
divb
les
out
inc
xor
js
xor
xlat
pop
nop
ja
ret
push
cmc
call
mov
jae
jae
negb
xchg
cmp
mov
loope
xor
andl
jb
mov
sub
outsb
sbb
cmpsb
add
or
sbb
mov
pop
xchg
int
push
xor
sahf
mov
jecxz
jnp
cmp
sub
cltd
and
inc
jp
or
das
cmc
xchg
outsb
out
mov
in
iret
inc
lcall
mov
clc
cwtl
out
repz
fldt
mov
aam
and
aaa
loop
add
mov
adc
popa
lds
inc
ljmp
inc
jae
cmp
jbe
fidivrs
daa
aad
and
imul
pushf
cmp
cmp
mov
ja
dec
inc
and
cmp
inc
iret
jmp
or
into
repnz
sbb
outsb
dec
xor
pop
push
xlat
mov
out
xlat
inc
xchg
repz
hlt
test
xlat
ljmp
sub
mov
dec
int3
and
fnstsw
mov
sub
pop
jae
sbb
nop
movl
mov
loope
xor
setne
mov
loope
mov
scas
cmp
inc
rcl
int3
or
cmpsl
inc
cmc
push
mov
cmp
mov
xor
cmp
out
aaa
mov
shll
cmp
insl
ret
rcll
stos
imul
hlt
dec
dec
imul
or
sbb
pop
mov
pop
cli
scas
mov
addb
icebp
fs
push
pop
int3
and
rolb
lods
in
mov
loopne
sbb
sbb
aam
cmp
xor
push
mov
xchg
in
js
test
pop
pop
xchg
aam
lahf
data16
or
xor
movsl
pop
movsb
orb
nop
imul
enter
sbbb
pop
mov
jne
push
pop
insb
pop
pop
push
push
xchg
push
icebp
repz
cwtl
inc
sahf
xchg
inc
sbb
loopne
xchg
daa
int3
sub
mov
ret
cltd
imul
xchg
cmp
imul
add
push
push
out
in
out
cmp
xchg
mov
cmp
sahf
sub
pushf
pop
or
in
add
loope
es
xchg
pop
and
lds
cmp
push
push
xor
je
cmc
cld
ja
cli
sbb
shrb
call
nop
push
mov
push
mov
pop
add
sbb
jg
xchg
mov
mov
push
faddp
pushf
adc
mov
rcll
cmp
xchg
pop
je
sub
int3
jge
jge
jno
jge
leave
mov
mov
call
popf
and
mov
jae
pop
add
js
mov
lahf
mov
jbe
inc
mov
xor
or
test
pop
or
enter
aaa
out
jle
inc
rolb
lcall
lock
mov
xchg
mov
inc
dec
and
popa
add
xor
rcll
iret
lahf
adc
std
stc
cld
mov
fsubs
xor
enter
adc
pusha
mov
add
dec
les
jecxz
fcomp
call
repz
ret
xchg
sarb
lcall
mov
dec
test
rol
sbb
or
add
cmp
xchg
test
imul
hlt
lahf
sub
lcall
fbld
push
add
mov
mov
in
push
outsl
aas
jge
in
add
cmpsb
xchg
jns
outsl
xchg
mov
cmpsl
popf
xor
inc
das
dec
gs
sbb
pop
sub
je
mov
jle
jp
and
cmpsl
stos
out
push
in
push
aad
fisttpl
imul
movsl
aam
stos
or
lcall
in
add
lret
mov
sti
xchg
and
cmp
rcll
jl
xor
jecxz
inc
jle
mov
leave
mov
pop
dec
jp
fldenv
lds
xor
ds
icebp
or
in
jne
aaa
pop
dec
ja
dec
mov
add
xor
imul
and
jno
andl
mov
xchg
mov
mov
fstl
aad
adc
push
jns
repnz
and
mov
mov
sbb
inc
test
cmpsb
or
mov
mov
adc
sbb
add
cmp
and
inc
stos
dec
mov
sub
std
jns
js
in
ds
jne
mov
shrb
or
add
add
sbb
les
jmp
mov
mov
sub
and
clc
out
out
outsl
out
mov
jecxz
push
in
cmp
cld
mov
mov
dec
xchg
mov
adcb
add
loope
mov
inc
dec
movsb
cmp
stos
add
mov
jecxz
mov
push
cmpsb
rclb
ja
pop
repnz
mov
push
fcoml
scas
cltd
fstpt
incb
cmp
sub
dec
test
sub
push
and
cmpl
xchg
mov
mov
jmp
je
sbbb
mov
sub
nop
mov
mov
in
pop
loope
call
fstpt
cs
mov
or
sti
lods
mov
adc
insb
push
js
dec
pushl
or
inc
add
scas
cmp
mov
movsb
stos
pusha
xchg
mov
repnz
iret
arpl
inc
mov
xchg
stc
lds
jae
lods
bound
cld
cmp
jo
mov
int
popa
icebp
sbb
call
mov
loopne
cmp
rcl
aas
push
cli
addr16
lods
jle
mov
xchg
xor
jmp
movsl
test
orb
cltd
lret
fmulp
popa
sahf
mov
stos
sbb
iret
int3
outsl
scas
andb
out
push
loopne
jle
mov
fdivrl
push
movsl
daa
pop
mov
xor
addb
rclb
lahf
ss
pop
out
add
aad
imull
xchg
jne
adc
push
data16
and
sbb
adc
insb
cwtl
jno
jbe
pop
cmp
ja
xchg
jne
jne
fcompl
call
idivb
add
add
mov
jge
xchg
dec
mov
es
and
into
jmp
out
push
call
loopne
ret
push
push
push
add
mov
aaa
sub
add
call
xchg
add
frstor
pop
push
call
add
adc
pop
cmp
sub
dec
mov
mov
movsl
aaa
jbe
in
in
pop
xchg
fldcw
jo
cmp
mov
mov
and
inc
xor
out
outsl
inc
inc
mov
xchg
pop
add
dec
mov
or
jns
mov
lods
loope
push
pop
data16
loopne
cltd
fldcw
pusha
cs
xor
pop
stos
mov
lock
and
in
add
mov
insb
and
sub
mov
je
inc
adc
jb
pop
pop
add
scas
mov
idivb
add
cltd
lahf
and
aam
daa
loop
sbb
test
mov
sub
jnp
xor
testl
addr16
in
loop
lods
in
add
lret
push
ljmp
hlt
push
pop
xor
jp
lahf
movl
inc
xchg
pop
arpl
lcall
mov
mov
call
test
xchg
jbe
daa
sbb
pop
xlat
addl
nop
xorl
sub
xchg
orb
ret
pop
addr16
imul
push
popa
sub
call
mov
mov
clc
inc
es
adc
ja
fsts
repz
jmp
adcb
mov
cmpl
in
add
stc
idiv
push
and
dec
xchg
pop
and
scas
ja
aas
pop
cld
cmp
pop
lret
pop
sub
testb
cld
hlt
sub
call
lcall
repz
xor
xchg
adc
add
out
sub
mov
cli
stc
lds
or
cmp
popa
and
pop
mov
push
add
in
cld
cmp
and
add
add
shl
add
adc
pop
fisubrl
and
xor
js
sarb
mov
aaa
cmp
add
or
ja
loopne
movsl
xchg
push
pop
in
lods
pop
mov
das
xchg
adc
or
xor
or
sar
and
dec
jo
pop
popa
fsubrs
add
imul
inc
mov
fdivrs
orl
mov
in
pop
xor
nop
jl
inc
jge
jo
or
lods
and
cmp
rorl
dec
inc
aas
sub
xchg
lods
call
jae
data16
jne
stc
stos
add
jo
jecxz
out
hlt
jp
loopne
shlb
xor
push
fisubrs
addr16
cs
cmpsb
ret
insl
enter
xor
or
adc
cmpsb
jecxz
mov
data16
fstps
shll
mov
xchg
or
daa
push
sbb
jbe
cmpsl
or
and
jecxz
scas
mov
bnd
and
ffree
dec
sub
ficompl
sub
outsb
enter
mov
hlt
pop
mov
push
push
mov
sub
push
test
imul
push
mov
mov
addr16
cmp
aam
sub
dec
mov
xchg
push
dec
test
lods
cmp
or
push
push
push
push
popa
jns
xchg
mov
out
inc
ja
or
xor
jb
push
lea
sub
aad
xchg
roll
cmp
jne
push
jne
fistl
out
imul
pushf
jl
jno
xchg
adc
mov
jge
js
dec
adc
pop
lods
sub
test
mov
push
cmpsb
inc
sahf
xchg
jbe
shll
push
pop
aas
adc
nop
xchg
mov
cmpsb
mov
jmp
dec
adc
sbb
inc
mov
push
nop
mov
adc
cld
sub
mov
lods
adc
je
aaa
mov
jmp
mov
mov
mov
pcmpgtd
movups
jge
popf
mov
sub
jl
pushl
mov
fucomip
into
test
popw
inc
adc
icebp
adc
xchg
push
push
jg
push
sahf
orb
mov
pop
and
mov
outsb
test
dec
std
andl
sbb
pusha
inc
nop
or
in
addr16
fsubs
push
xor
gs
and
rorb
or
rcll
in
xchg
dec
aaa
out
adc
pop
jp
shrl
dec
sub
cwtl
loopne
dec
mov
inc
fimull
or
add
loopne
movsl
out
andb
adc
adc
les
add
insb
dec
pop
shr
mov
repz
gs
out
mov
mov
xor
inc
stos
aam
es
and
fs
sbbl
inc
mov
mov
negb
cmp
jb
stos
sbb
pop
mov
dec
les
mov
in
fstl
fisubs
mov
push
shll
shlb
cmp
fcoml
inc
mov
nop
test
fisttps
xor
sbb
iret
sub
and
shll
repz
aaa
sbb
daa
movsb
sub
or
sahf
xor
daa
pusha
xor
mov
and
and
sarb
es
and
push
stos
comiss
adc
shl
stos
nop
hlt
mov
icebp
mov
insl
lretw
adc
enter
or
inc
shlb
jmp
cmp
movsb
sbb
scas
cmp
or
test
leave
xor
adc
loopne
je
sub
lock
lea
dec
mov
stos
jbe
in
dec
arpl
insl
mov
xchg
in
dec
or
push
pop
mov
nop
push
out
mov
jmp
sbb
push
sub
mov
arpl
arpl
popa
dec
xlat
imul
mov
dec
or
mov
pop
rcl
mov
mov
rcr
pop
dec
test
jecxz
or
adc
mov
in
repnz
sub
cmpsb
leave
pop
cli
out
push
popf
out
sbb
jge
cltd
inc
icebp
loope
cmp
cwtl
xor
xor
cmpsb
cmpsb
and
xlat
cmp
iret
cmp
mov
out
push
imul
mov
repz
cmp
jg
jge
daa
insl
mov
std
pusha
clc
leave
inc
lahf
test
or
or
loope
add
out
arpl
and
pop
das
inc
sub
mov
sbb
rolb
pop
lea
mov
ss
or
push
in
push
pop
in
stc
sbb
stos
sti
cli
jae
cmp
cmp
test
out
jo
test
arpl
push
lds
test
testl
pushf
xchg
push
or
rolb
cltd
fwait
pop
mov
push
adc
sub
mov
orb
aaa
sub
fsubr
sub
mov
inc
push
adc
push
add
mov
pop
rorl
mov
fcoms
push
mov
jl
xor
add
dec
dec
xor
repz
push
dec
je
mov
sti
mov
loopne
mov
cltd
push
inc
xor
jp
aam
xchg
in
push
adc
dec
orb
cwtl
inc
addb
push
repnz
jno
mov
xchg
xchg
js
sbb
mov
push
jno
fwait
inc
loope
xchg
mov
pop
stos
xchg
jbe
mov
mov
cmpsl
or
cmp
xor
shrl
rorb
mov
mov
sahf
xchg
daa
or
in
mov
mov
movsl
mov
std
rorl
insb
int
sub
mov
jnp
inc
in
in
sti
cs
sub
adc
je
lret
pop
cwtl
sub
sbb
mov
les
call
mov
int3
les
sbb
sti
daa
push
ja
and
mov
sub
ljmp
int
add
scas
stos
pop
inc
adc
insb
mulb
test
jb
les
rcrb
ds
cmpsl
repz
lds
pop
ret
mov
popa
icebp
aam
mov
sbb
dec
cmpsb
test
pop
inc
cs
mov
lret
fsts
loopne
aaa
fwait
cli
cmpsb
push
ficoml
inc
adc
xor
sub
sbb
leave
ds
clc
insl
hlt
shlb
fdivr
lret
mov
repz
pop
or
mov
popa
addr16
mov
jle
dec
or
xchg
sub
scas
repnz
in
repz
repnz
test
fadds
cmp
mov
mov
dec
jge
xchg
and
repnz
push
adc
and
ret
and
mov
ret
dec
imul
dec
inc
out
mov
stos
dec
dec
mov
push
sub
pusha
pop
shlb
dec
enter
aam
inc
xlat
data16
ds
or
sbb
sub
pushf
adc
mov
out
leave
lea
mov
outsb
std
pop
mov
scas
cmpsb
xchg
out
packuswb
movsb
rcr
inc
xor
push
out
mov
pop
push
mov
sbbl
mov
or
outsl
es
insb
adc
iret
movsb
leave
mov
mov
sar
ds
and
push
gs
xor
call
int3
lods
adc
leave
cmp
sbb
ja
jge
mov
outsb
xor
sbb
mov
insl
jo
sbb
mov
mov
jnp
push
stc
testl
inc
push
jb
jle
dec
movsb
hlt
or
sbb
push
pop
jge
imul
sbb
mov
shl
jge
das
loopne
data16
add
loope
pushf
fcomip
inc
fisubrl
movsb
push
std
sbb
mov
pop
or
sub
dec
sub
add
or
cmpsb
push
out
dec
dec
fs
sbb
add
dec
out
cmp
lods
andl
xorb
mov
mov
fwait
adc
xor
fisttps
addr16
push
xchg
mov
jnp
jle
push
push
aam
mov
mov
into
cli
inc
push
cltd
mov
imul
jmp
in
cs
xor
mov
das
cli
ss
mov
lods
cwtl
fld
out
xor
jno
pop
dec
mov
mov
call
mov
lods
jbe
mov
decl
popa
daa
jno
adc
xchg
jo
nop
repnz
cmp
clc
jno
pop
in
jge
add
aaa
lods
jge
ret
movsb
push
repnz
xchg
sub
and
jnp
dec
jne
stos
jbe
and
xorl
stos
imul
mov
sub
cmp
dec
mov
in
pop
cmp
mov
xrelease
sbb
imul
cld
test
aaa
mov
in
mov
call
fnstsw
xchg
push
mov
fsub
adc
jae
test
stc
insb
pop
pop
xor
clc
push
add
mulb
and
fsubr
cs
stc
dec
mov
mov
push
sbb
fnsave
aaa
dec
mov
cld
shlb
loopne
push
dec
pop
push
inc
push
mov
dec
or
mov
cmp
sbbb
sbb
sub
dec
xor
mov
push
rcll
lods
ljmp
pusha
je
mov
jbe
aas
cmp
cmc
out
fidivs
dec
in
sub
aam
jnp
cltd
stos
push
jmp
cmp
pop
mov
push
mov
jg
enter
lods
or
inc
xchg
xchg
xlat
in
adc
pop
xchg
imulb
out
in
push
xor
repnz
mov
sarl
mov
int3
clc
divb
cmpsl
sahf
shlb
mov
xchg
imul
lret
sarl
cld
lcallw
mov
sahf
xchg
ja
ret
in
jg
lods
jg
push
sub
or
es
nop
ljmp
fists
lcall
push
in
adc
inc
sahf
sbb
or
mov
lret
jg
mov
push
jne
lcall
and
cmp
leave
cwtl
mov
push
movl
jl
sbb
cs
add
sub
lds
pop
and
pushf
xor
rcr
scas
add
adc
inc
in
addr16
cmp
sbb
jmp
out
mov
subb
out
sbb
dec
jmp
shlb
rorb
into
lcall
scas
mov
lds
lds
addr16
leave
sub
push
js
loope
leave
pop
rclb
repnz
or
or
cmp
dec
aam
mov
jg
mov
sub
adcl
jo
out
add
dec
andb
inc
cmp
lret
xor
jae
sub
enter
enter
xchg
push
shrl
cmp
or
dec
ss
jge
std
mov
cmp
popf
jl
outsl
adc
sub
add
cmp
xorb
sbb
dec
push
add
add
mov
fstpt
enter
dec
pop
sub
cwtl
out
pop
or
aas
fdivl
leave
mov
sbb
mov
mov
mov
xchg
xor
push
jecxz
popa
push
xor
stos
stc
jo
hlt
in
fpatan
jb,pt
call
cld
into
jg
pushf
ss
xor
and
jns
int
mov
xorl
ja
adc
imul
fdiv
insb
xor
jecxz
pusha
sub
out
stc
sbb
ret
out
inc
lahf
jns
cwtl
xor
mov
inc
lds
ja
outsb
dec
xchg
jnp
lods
paddsw
mov
pop
shlb
push
push
or
jp
lcall
xchg
inc
ds
mov
int3
imul
sub
ja
sti
push
xchg
cmp
pop
inc
or
dec
je
fs
mov
dec
leave
mov
mov
mull
mov
pop
js
cmp
sar
enter
or
test
mov
xchg
or
das
pusha
pop
imul
jo
sahf
aam
mov
lds
movsb
fisttpl
xor
sbb
dec
mov
push
iret
test
loop
and
mov
adc
imul
insb
and
xchg
bound
or
and
push
mul
mov
adc
fidivrs
jg
aam
xchg
ret
mov
in
jp
cmp
je
into
pushl
cmp
mov
subl
movsb
daa
sbb
movsl
and
and
jecxz
dec
pushf
jg
insl
stc
icebp
xchg
mov
adc
ljmp
pop
adc
sbb
pop
add
sti
cmp
mov
sahf
push
sbb
les
test
shlb
ja
xchg
mov
push
or
test
sub
aad
es
fbld
jle
mov
test
bnd
in
push
cmpsb
jne
add
sub
mov
out
call
aam
lahf
arpl
add
hlt
mov
push
mov
or
inc
xor
adc
and
xchg
add
arpl
sub
adc
and
loope
jae
cltd
repnz
pop
jmp
push
push
sti
or
stos
stc
movsl
popa
popa
dec
and
stc
mov
mov
inc
jp
lods
call
push
out
imul
inc
cmp
push
xor
fisttpl
or
js
mov
push
imulb
mov
in
dec
ss
jmp
sbb
stos
aad
jle
push
sub
rcrb
dec
mov
push
sbb
mov
cli
mov
fldt
inc
lret
xchg
cs
sahf
pop
andb
xor
xchg
jl
clc
sbbb
lock
in
add
or
inc
mov
movsl
leave
inc
test
cmp
add
enter
es
lcall
pop
push
pusha
loope
push
xchg
adc
loop
cld
mov
jnp
mov
push
pushl
mov
mov
sub
popa
jmp
fwait
adc
lea
scas
mov
or
cmp
adc
stos
jg
in
fs
sub
add
ss
xchg
mov
clc
sarb
sub
int3
out
aas
fsubr
pop
mov
xlat
or
jns
and
dec
aam
mov
mov
in
andl
cmc
pop
jmp
pushf
pop
int3
cmp
std
div
popa
into
cmp
adc
insb
testl
inc
inc
sbb
test
sub
test
clc
inc
xor
push
out
std
inc
sub
pushf
data16
inc
outsb
outsb
test
and
sbb
cmp
adc
std
xchg
mov
jl
lahf
xor
mov
arpl
lods
aam
dec
andb
out
adc
mov
jo
lea
rcrb
mov
nop
xchg
popf
xchg
shlb
mov
add
jbe
stos
pusha
fsubr
or
cmp
push
and
push
mov
inc
fidivs
imul
dec
aad
stos
in
mov
and
sbb
or
insl
cmp
jb
fnstcw
cmp
test
jg
and
xor
leave
push
and
shl
pop
dec
in
bound
scas
push
sub
add
ret
std
push
lcall
push
gs
icebp
pushf
cmc
fbstp
psllw
xor
mov
pop
cwtl
stc
hlt
outsb
sub
jnp
clc
xor
mov
je
shlb
xor
jno
cmpsb
or
leave
mov
insb
in
aas
jae
push
pop
xchg
stos
and
ds
in
push
jg
movsl
fldenv
in
sbb
imul
arpl
stos
jmp
pop
aam
in
aam
out
lods
push
inc
and
in
mov
or
inc
mov
int
sub
add
pop
arpl
sbb
fxch
mov
push
push
nop
in
arpl
add
out
jecxz
stc
in
daa
add
scas
add
sub
mov
inc
inc
adc
push
movsl
sbb
xor
mov
inc
daa
dec
daa
jno
stos
mov
repnz
pop
sub
addr16
and
rcrl
nop
inc
mov
in
imul
mov
imul
and
push
shlb
jl
aaa
inc
lock
push
insl
arpl
into
xchg
jns
push
add
mov
push
push
jno
push
cmovbe
dec
inc
repnz
add
mov
cmp
cmpsb
rolb
or
xor
imul
call
outsb
sbb
aam
movsl
sub
or
les
mov
dec
cmpsl
xor
fldl
cmpsb
xchg
lret
movsl
xor
dec
mov
adc
xchg
psrld
mov
stc
mov
movl
insb
inc
leave
flds
and
jl
or
inc
jge
sbb
xchg
scas
jmp
cmc
fld
sbb
int
stc
add
loop
or
add
out
iret
adc
jmp
scas
ret
lea
jp
pusha
fs
inc
mov
shlb
xchg
test
sbb
and
and
js
mov
in
jbe
mov
test
pusha
subl
xchg
add
mov
pop
les
inc
out
lahf
mov
testl
ss
fsub
out
xor
mov
adc
push
hlt
lods
xor
lahf
rcll
iret
add
pop
stos
lahf
fsubrs
mov
add
dec
jne
push
xor
ret
lahf
xchg
pusha
or
jbe
pusha
push
stos
loope
fists
lcall
scas
lods
jno
xchg
inc
push
push
cld
lods
xlat
pop
jbe
stos
repz
cmc
inc
lret
sub
fcompl
ret
and
jmp
jo
addr16
push
nop
xchg
inc
test
shlb
push
adc
out
mov
test
cld
push
jae
push
or
repnz
cmp
inc
push
and
adc
bound
scas
clc
cmpsb
fwait
mov
mov
imul
lock
in
hlt
mov
call
out
js
repz
fwait
mov
lret
pop
dec
xchg
add
testl
jg
jge
jecxz
push
dec
sbb
ret
iret
adc
aam
push
sbb
movsb
add
xchg
in
xor
imul
xchg
or
fnsave
int3
or
lret
out
aaa
cmpsb
ljmp
pop
mov
pop
inc
jecxz
add
out
mov
lcall
negb
faddl
fsubrl
rcll
test
iret
sbb
jbe
jnp
popf
addr16
xchg
sbb
vdivps
pusha
fwait
inc
cltd
in
test
lods
adc
push
inc
cmp
push
adc
inc
gs
push
arpl
nop
cs
push
rcrb
xchg
adc
jge
nop
adc
xchg
pop
push
orl
enter
fldl
out
aas
andb
mov
orb
dec
push
pushl
mov
and
inc
cli
mov
dec
mov
jge
das
fldl
fwait
call
adcl
out
mov
jo
pop
mov
lcall
or
mov
xchg
xchg
mov
xchg
nop
data16
cld
ret
jmp
inc
imul
int
aam
sbb
push
or
cmp
push
fidivrl
ds
cmp
incl
cli
push
outsb
cmpb
pop
ret
mull
fwait
psubusb
sbb
stc
rcrb
mov
fdivr
push
pushf
add
fimuls
pop
mov
imul
out
cmpsl
imul
mov
mov
cmp
or
adc
pusha
out
push
push
shl
lcall
add
sbb
dec
mov
sub
insl
fildl
or
fcompl
out
mov
push
mov
jmp
cmpsl
dec
inc
adcl
inc
movsl
pop
cld
cmp
dec
repz
dec
mov
leave
jmp
mov
cs
arpl
je,pt
mov
ss
daa
mov
and
add
xor
adc
adc
adc
or
mov
jmp
add
lahf
mov
adc
sbb
cmpsb
in
xor
and
test
fcoml
dec
mov
or
data16
lcall
mov
in
cld
dec
ljmp
sbb
je
push
inc
add
lret
sbb
cmp
or
lock
mov
test
movsb
sbb
dec
ffreep
mov
inc
arpl
test
js
xchg
rcll
push
shlb
bound
jnp
lock
imul
add
jae
imul
adc
mov
jb
insl
add
pop
cmpsl
ret
iret
insl
cwtl
adc
lsl
inc
jge
ret
jge
mov
scas
pop
iret
and
sbb
mov
mov
loope
inc
mov
fimuls
push
push
pop
or
and
lods
int3
orb
hlt
cmc
insl
jb,pn
push
jno
incl
mov
nop
adc
lods
stc
lds
and
jmp
lods
iret
pop
rcll
fwait
mov
jp
leave
inc
into
pop
push
pop
loopne
inc
shr
mov
stc
pusha
mov
mov
pop
hlt
in
xor
sahf
xchg
dec
cmp
sub
cmp
xor
inc
mov
jg
jle
jo
sbb
dec
sbb
daa
xor
add
lcall
pop
lods
inc
and
sub
arpl
push
mov
cmp
nop
jae
sahf
pop
es
sub
loop
or
imul
xor
enter
and
add
int3
jb
cmp
imul
cmp
and
cmp
xchg
cmp
sbb
push
fdivrs
pop
pop
iret
ds
mov
addl
ljmp
fimull
adc
adcb
adc
inc
test
pop
jns
out
xchg
mov
lods
lahf
addr16
push
cmc
movsl
fisubrs
mov
in
xor
xorl
sbb
pop
sarb
flds
rclb
push
push
outsl
pop
fwait
aas
insb
jecxz
push
out
mov
icebp
push
sbb
or
xor
dec
jb
stc
adc
inc
pop
push
mov
sub
dec
loop
and
insb
sti
jecxz
jbe
out
movsb
pop
mov
aaa
adc
dec
stos
sbb
jecxz
add
in
adc
or
lcall
mov
into
test
andb
bswap
outsb
subl
je
int3
test
clc
in
cmp
xor
sbb
fucomp
lods
or
push
ja
jmp
jle
add
iret
dec
and
xchg
adc
fisubrs
notb
dec
adc
push
loopne
test
lods
mov
pop
aad
jo
push
jg
mov
iret
mov
adc
or
push
sti
inc
xchg
sub
movsb
add
push
mov
pop
roll
dec
scas
stos
xor
jno
jae
push
sub
ret
or
in
mov
aaa
push
stc
lcall
fnstcw
test
mov
ljmp
out
pop
dec
xchg
loopne
insl
jnp
shl
sub
std
pop
and
adcl
adc
scas
pop
xchg
or
arpl
xchg
push
lcall
dec
mov
in
jge
fs
push
sarb
inc
in
sbb
inc
mov
fistps
outsb
test
mov
test
sbb
lret
sahf
scas
leave
and
sub
out
icebp
into
push
jg
pop
stc
pop
cld
adc
push
jge
pop
add
pop
lea
out
push
fldln2
mov
enter
push
pop
jmp
pop
popa
and
add
cli
inc
push
mov
adc
aad
adc
add
mov
add
jne
mov
or
and
out
out
cmc
enter
pop
sbb
xlat
push
push
or
jne
fimuls
mov
push
cs
out
hlt
mov
jg
mov
sub
jg
lret
pop
jno
jle
xchg
imul
scas
imul
mov
mov
rorl
xor
jb
xchg
flds
test
xchg
aam
jmp
inc
pop
mull
mov
jle
xor
mov
repnz
push
movsb
push
jge
add
dec
inc
sbb
push
das
lea
xchg
dec
inc
ja
clc
clc
jns
cmp
and
pop
aaa
call
pusha
adc
cmp
inc
sub
pop
jg
cmpsb
push
int3
mov
loop
aas
add
xchg
mov
inc
sarb
aaa
jl
cld
adc
mov
scas
cmp
sbb
movsb
in
pop
scas
call
push
data16
jno
or
sbb
pop
mov
cmpsb
mov
ss
popf
jecxz
xor
lcall
repnz
mov
push
add
cli
mov
shll
adc
xor
ja
stc
fstpt
stc
jmp
rcl
mov
dec
push
adc
jp
xchg
das
mov
inc
fwait
scas
xor
sub
pop
mov
mov
pop
rorl
fidivl
mov
xchg
pop
bound
push
push
and
out
movsl
sbb
pusha
push
add
push
push
and
fsubr
inc
xor
in
adc
div
sbb
loope
sub
inc
mov
and
sbb
fnstsw
mov
repnz
mov
mov
mov
jb
iret
jb
inc
je
sbb
mov
jmp
or
gs
imul
inc
sbb
arpl
pop
aam
and
xchg
xor
xchg
sub
push
jne
ljmp
shlb
lods
dec
cmp
or
jecxz
test
inc
cmp
mov
pushf
sub
mov
xor
js
rclb
ss
loope
jle
ret
ret
bound
push
lds
adc
xchg
mov
mov
cmc
jl
nop
fisubl
sub
les
inc
xchg
or
add
xor
and
lods
pop
rcr
add
mov
xorl
lahf
aam
xchg
or
add
sbb
xlat
repnz
fisttps
or
pop
cmpb
jbe
sahf
fldl
lea
arpl
popf
fdivl
mov
loope
loopne
add
mov
data16
cmp
jg
push
cld
gs
fisubl
in
dec
daa
es
loop
aas
adc
test
push
sub
repnz
push
and
iret
mov
push
adc
add
cmc
xlat
int
cmpsl
adc
push
push
repnz
mov
insb
movsl
sbb
test
sub
sub
push
incl
inc
jmp
or
cmp
push
and
mov
mov
cmp
or
pop
cs
push
mov
je
xchg
mov
sbb
push
sub
jmp
dec
aam
shlb
dec
adc
or
ss
sub
shlb
ss
xor
jp
or
shl
sti
sti
mov
push
insb
nop
shr
je
call
fwait
sbb
mov
jl
add
adc
xlat
inc
push
rclb
cltd
push
or
dec
mov
mov
js
mov
jo
jle
add
sub
mov
iret
and
cmpsb
mov
inc
push
in
cltd
or
xchg
sbb
addl
jge
xchg
jge
rcrb
inc
inc
adc
mov
es
bnd
adc
ret
sahf
cli
call
push
mov
adc
ds
push
out
shrl
add
pushf
fwait
xchg
xchg
call
test
sbb
ss
add
cwtl
xor
jecxz
call
mov
xchg
dec
and
dec
pop
mov
pop
outsl
mov
push
lret
mov
shrb
cmp
bound
jle
push
fnstenv
add
aam
into
cs
sbb
inc
and
sbb
sub
jo
pusha
mov
sbb
xlat
xor
xor
pusha
int
xchg
adc
mov
and
xchg
insb
test
mov
ja
fcmovne
jp
fiadds
mov
in
loop
ljmp
addb
paddsb
pop
addb
mov
js
imul
fdivrs
lods
pop
sbb
push
mov
sbb
add
sub
lds
pop
neg
and
imul
js
mov
sub
jno
or
jmp
orl
sub
mov
lcall
popf
fcompl
andb
xchg
jecxz
popa
push
jns
test
push
gs
jae
out
leave
mov
sbb
cwtl
jmp
xlat
fwait
idivl
pop
cli
xchg
push
cmp
or
in
inc
jmp
ss
stc
imul
pop
xor
pop
pop
addr16
push
adc
add
or
sub
mov
ljmp
int
jmp
test
and
xchg
cs
xor
js
cli
sbb
mov
or
testb
in
jb
ret
fucomip
push
cmp
mov
imul
push
add
outsb
and
repz
sub
xor
cli
repz
int
xchg
add
add
jp
cs
movsb
pop
push
and
dec
xchg
loop
or
xor
shr
lahf
adc
pop
jo
pushf
adc
in
dec
ljmp
leave
push
pop
shl
jecxz
and
clc
adc
inc
push
pop
sahf
pop
repnz
rcr
insl
cs
lcall
aam
mov
fs
inc
adc
fbld
push
adc
aaa
das
add
fisttpl
mov
iret
or
mov
mov
mov
mov
and
movl
adc
popf
scas
cmp
and
xchg
cmp
es
into
fwait
cmp
test
push
cltd
loop
mov
test
push
jg
pop
pop
frstor
dec
repz
stos
pop
mov
push
xchg
ss
iret
mov
test
test
mov
dec
inc
clc
xor
sti
or
inc
xchg
lds
outsb
sbb
lret
and
adc
pop
fnsave
cmp
xchg
adc
scas
or
test
out
and
movsl
idivb
fs
adc
or
mov
dec
outsl
cmp
and
dec
add
jmp
lock
pop
pop
pop
adc
fisubrs
pop
push
adc
push
in
repnz
fldl
jmp
and
adc
mov
and
pushf
dec
add
ss
in
jnp
xorl
out
push
jne
imul
in
lret
out
imul
pop
lahf
fs
pop
pop
insl
and
xchg
and
and
fstl
mov
aas
cmp
je
out
or
fdivp
in
cmp
les
or
jg
dec
or
mov
insb
or
aaa
je
pop
rolb
in
in
outsl
and
xchg
and
dec
lret
mov
stc
icebp
lret
push
fucomp
sbb
inc
jmp
in
and
bound
jnp
add
rcr
outsl
addb
icebp
icebp
or
ret
and
and
ss
fdivl
out
pop
subl
pop
inc
les
ret
ljmp
popf
inc
shr
pop
stos
push
dec
add
daa
addr16
stos
cld
adc
mov
mov
xor
mov
clc
inc
mov
push
insl
out
lahf
push
pop
inc
lahf
adc
popf
jmp
mov
imul
cltd
inc
fdivl
inc
dec
ret
fidivs
lahf
and
add
adc
add
sbb
xchg
inc
es
xor
cmp
cwtl
pop
sbb
adc
xchg
push
jne
call
mov
jnp
lea
push
sar
xchg
dec
cmpsl
mov
add
jo
xchg
mov
cwtl
dec
xchg
add
inc
fwait
faddl
repnz
mov
inc
mov
sub
je
ficoml
pop
fs
cmpsl
fs
clc
mov
push
fstl
push
ljmp
sub
or
inc
out
inc
repz
pop
aad
div
mov
leave
dec
fwait
idivb
aad
fcmovb
dec
mov
cmpsl
adc
std
or
mov
cltd
movsb
call
push
xchg
lret
xchg
sar
test
xor
jns
xchg
insl
out
outsb
jae
xor
mov
movsl
movsb
add
mov
jp
aad
nop
inc
scas
pop
push
rcl
cs
test
xchg
or
fdivs
cli
loop
adc
repz
movsl
js
pop
push
push
pop
ljmp
xlat
or
mov
add
and
pop
pop
xor
pusha
aad
mov
push
xchg
loop
in
mov
mov
sarb
sub
ds
lods
xchg
sarb
jo
sub
inc
pusha
outsb
aam
in
cmpb
pop
add
mov
pop
out
movsl
cmpb
repz
rol
or
int
imul
or
lock
mov
fisubrs
lods
mov
ret
push
gs
xor
imul
out
orb
ss
mov
sub
lret
in
sbb
mov
popf
xchg
popf
sahf
ljmp
and
gs
mov
mov
jle
push
arpl
pushf
pushf
or
scas
fs
mov
fdivs
mov
dec
xchg
jno
jb
add
xor
push
rolb
adc
js
ja
push
push
divl
pop
xchg
lods
test
add
fdivl
neg
sar
push
ret
testl
ds
push
fnsave
mov
push
shll
rep
into
pop
cmp
mov
or
inc
nop
icebp
sub
inc
push
ja
loopne
je
push
aas
fistps
mov
push
lea
mov
mov
fs
push
aaa
decl
sbb
mov
out
hlt
sbb
cli
inc
sub
jl
das
test
scas
sub
add
pop
cmp
fildl
push
mov
pop
pop
in
mov
lock
sub
or
sbb
jmp
xor
mov
inc
clc
sub
aaa
or
iret
in
push
lods
add
inc
jnp
js
cmp
xor
aam
jns
xchg
es
lods
int
adc
xchg
pop
pusha
jge
push
rep
rcl
rorb
adc
lods
jmp
sarb
fists
jae
mov
add
lock
jge
and
adc
xor
fstp
xor
ret
dec
jb
pop
xchg
enter
popf
jmp
jg
mov
pop
movsl
mov
mov
cmp
pop
mov
mov
sti
inc
sbb
std
ret
arpl
hlt
stos
gs
cmp
mov
test
ud2
cmp
ret
stos
mov
loop
divl
push
pop
mov
or
jp
push
pop
mov
pushf
pop
dec
and
bound
sub
gs
in
or
and
adc
hlt
mov
fwait
mov
pop
outsl
ljmp
inc
dec
cmp
fisttpll
lds
or
notl
lock
sub
popa
and
orl
loope
and
add
shl
pop
les
iret
sub
fucomi
jns
sub
pop
cld
jbe
mov
jl
jo
xchg
rcrl
or
pusha
xchg
aaa
int3
adc
dec
dec
fsts
add
test
enter
lret
das
sbb
inc
sbb
mov
nop
icebp
jnp
and
jg
inc
jmp
in
jbe
xor
add
dec
ljmp
add
addr16
pop
mov
pop
sbb
lret
lods
inc
incl
es
sarb
jae
push
insb
loopne
dec
lea
int3
stc
mov
pop
outsb
jbe
pusha
out
je
mov
sbb
aaa
push
test
cmp
fs
scas
aas
adc
out
add
inc
and
jp
jmp
add
push
idivb
xchg
ret
frstor
scas
repz
lcall
data16
add
dec
add
ret
idivl
jl
cmpl
dec
jno
lds
dec
cld
xor
adc
pop
popf
cmp
cmpsl
je
std
add
mov
mov
pushf
dec
mov
fadds
jg
add
imul
scas
xor
idivl
add
mov
jb
inc
fs
das
lods
xchg
aas
stc
or
jmp
or
mov
xor
jnp
bound
lds
cwtl
sub
and
notb
adc
adc
or
and
pop
mov
incl
loop
repz
iret
xor
gs
xchg
nop
pop
push
out
into
push
insb
subb
adc
pop
push
cmp
push
lods
pop
xor
js
dec
xlat
and
pop
iret
mov
xor
push
pop
inc
mov
sub
sub
fwait
shrl
push
xchg
pop
mov
adc
mov
arpl
cltd
repnz
sbb
add
push
shl
or
lea
cmp
out
daa
loopne
mov
scas
push
repz
mul
adc
cmp
and
cmp
fwait
loope
adc
popf
pop
mov
rcll
fsubl
fistpll
outsb
jnp
mov
rorl
mov
mov
mov
mov
push
sbb
xchg
adc
push
xchg
mov
xor
sub
bound
inc
scas
push
sbb
add
xchg
dec
popf
arpl
mov
and
sub
pushl
scas
sub
dec
ret
jmp
sub
xchg
adc
sahf
les
movsb
cltd
repnz
sub
push
lret
mov
inc
into
stos
je
inc
fcmove
lcall
add
mov
loopne
insl
in
mov
adc
mov
and
pop
bound
jne
pusha
dec
imul
jp
inc
nop
mov
sarb
push
sbb
pop
mov
fisubl
ficoms
lea
loop
add
sbb
in
les
add
imul
add
inc
outsl
mov
mov
fwait
xchg
jl
push
testb
jns
iret
into
pop
fistpl
push
sarb
and
mov
aaa
sub
dec
call
sbb
add
fwait
jns
mov
gs
scas
pop
push
shll
loope
fstpt
pop
loopne
mov
push
pop
mov
sbb
dec
pop
mov
mov
mov
jns
push
mov
add
and
cmp
add
into
pop
adc
or
pop
xchg
rcr
fwait
mov
sub
sbb
add
adc
repnz
mov
insb
dec
sbb
adc
xchg
orl
in
leave
test
xor
ss
add
cmp
jle
or
jae
fstl
inc
sbb
jo
filds
fdivr
pop
cmc
mov
adc
clc
pushf
add
dec
dec
mov
call
pusha
mov
or
pop
popa
ljmp
push
mov
test
jmp
cltd
adc
sbb
pusha
dec
jae
fstl
xchg
push
push
cld
xor
jecxz
std
inc
push
sub
pop
movsb
pop
pop
scas
and
dec
mov
and
mov
mov
lds
mov
xchg
mov
lds
pop
inc
aad
or
stos
pushf
stc
stos
fidivrl
sub
jnp
push
out
out
pop
out
mov
push
inc
out
and
scas
imul
call
sbb
daa
jp
in
xchg
or
xchg
in
ss
adc
outsl
ret
fsubrs
pushf
sbb
push
jb
out
push
mov
or
cmp
xchg
push
push
add
sbb
dec
mov
fdivrl
loopne
js
ss
pop
lret
shll
je
int3
adc
idivl
jg
adc
xchg
aam
iret
sub
sbb
xor
mov
das
es
mov
inc
je
cmp
sti
mov
scas
add
mov
cmp
lret
xchg
mov
and
inc
js
clc
das
lcall
add
adc
and
dec
mov
pop
or
rolb
dec
cmc
mul
je
xchg
repnz
pop
andb
movsb
xor
jl
aas
jle
dec
in
out
mov
xchg
sub
adc
cmp
jo
mov
mov
inc
addr16
rcll
int
sbb
aas
and
cmp
test
cmp
cwtl
adc
dec
popf
in
es
mov
aaa
enter
mov
xor
jmp
stos
or
jbe
ja
rclb
lods
or
in
dec
mov
dec
and
inc
xchg
mov
mov
popf
loopne
das
cmpsl
xor
icebp
shrb
movsl
or
stc
dec
and
and
push
imull
sub
lahf
cmpsb
mov
mov
or
test
mov
negb
push
push
xor
push
xor
not
mov
jge
xchg
cmp
sub
adc
fdivrl
mov
andl
push
ja
sub
aad
fstl
push
and
lea
mov
xchg
adc
adc
and
std
insb
scas
movsb
inc
adc
add
mov
dec
out
pop
pushf
xchg
dec
push
into
inc
in
out
rorl
or
pusha
gs
nop
mov
aas
fsubl
ret
mov
sbb
rcr
les
push
mov
pop
adc
or
sub
inc
imul
divl
or
out
movsl
fistpl
lahf
out
scas
sbb
xchg
sbbl
loopne
sahf
mov
or
stc
adc
test
push
sbb
repz
sub
mov
mov
fstpl
ljmp
cmp
testb
insb
insb
in
loope
ret
inc
lea
mov
in
test
push
std
stc
test
mov
lret
xor
sbb
jo
inc
push
aaa
sqrtps
mov
aad
loop
stc
fsubr
xor
test
out
pusha
mov
xor
xor
pop
ss
push
call
fnstenv
add
fimuls
mov
stos
add
scas
xlat
ljmp
mov
fwait
aam
into
jne
xchg
cltd
leave
inc
fmull
fmuls
cli
jp
dec
fcompl
and
push
inc
add
in
xchg
test
xchg
cltd
mov
pop
addr16
adc
loope
shll
jb
adc
mov
test
lods
ja
push
in
jmp
test
testl
sahf
in
sbb
enter
out
outsl
fdiv
push
push
cmp
negb
loope
mov
ret
add
ja
out
mov
gs
idivb
aaa
lahf
jb
cli
orb
les
imull
ffreep
pop
in
pop
push
cmc
pop
dec
inc
push
inc
xchg
pusha
add
js
rcll
loopne
fdivrs
adc
fisubrl
inc
lock
out
cli
cmp
sbbl
dec
shlb
insb
in
mov
test
and
jl
cld
xor
insb
mov
out
pusha
add
dec
lahf
mov
daa
inc
insl
or
test
cmp
fwait
inc
jl
sbb
popa
sbb
daa
cli
imul
nop
mov
push
addr16
scas
xchg
cmpsl
and
or
mov
sbb
or
out
rcll
sbb
dec
sub
mov
test
loope
imul
js
mov
lea
mov
sub
decl
in
push
std
xchg
out
inc
int
fidivrl
push
sub
sbb
or
xchg
sbb
imul
sub
or
fbstp
sbb
xchg
ja
test
sahf
leave
push
adc
pop
lea
pop
orb
ret
jno
js
mov
pop
sub
xchg
int
cmp
sub
dec
shrb
cmpsb
mov
mov
jl
dec
iret
adc
adc
lods
arpl
inc
jmp
push
loop
or
loop
aad
iret
xor
bound
jno
test
in
mov
loopne
dec
lods
loop
cmp
rorb
fimuls
std
dec
repz
mov
ja
lods
dec
js
push
std
pop
movsb
and
xor
push
out
xor
and
and
stos
test
xchg
add
sarb
test
outsl
aaa
sbb
sub
call
sub
pop
add
jne
add
mov
cwtl
je
call
xchg
pop
daa
iret
lock
adc
add
jns
mov
cmp
loop
call
sbb
outsl
lret
lcall
fdivp
scas
jo
push
inc
leave
mov
idiv
outsb
push
das
cltd
push
mov
testb
adc
les
xchg
jp
pushf
and
mov
loop
lcall
hlt
sub
ja
pop
loop
mov
shl
xchg
pop
repnz
add
mov
aas
adc
mov
push
pop
gs
sub
jo
dec
orb
xor
mov
sub
xchg
scas
aad
stc
pop
pop
aaa
out
fistpl
aam
sbb
xchg
sbb
rep
mov
mov
xchg
lret
mov
ficoms
int3
mov
jns
pop
xchg
sub
mov
addr16
jge
enter
in
cmp
mov
in
shlb
ljmp
mov
pop
es
dec
and
cwtl
scas
leave
cwtl
xchg
and
roll
int
sahf
pushf
and
rcrb
fs
mov
rol
and
pop
push
pop
ljmp
pop
inc
jae
addb
jae
adc
add
jmp
add
xchg
lods
jl
outsl
imul
sub
push
mov
push
cmp
cmp
cld
repnz
xchg
sbbl
adc
cmp
and
mov
scas
sahf
clc
or
mov
lock
sbb
sbbl
push
scas
std
clc
adc
jmp
mov
mov
mov
dec
jmp
lea
mov
jle
lret
aam
aam
pop
and
xlat
xchg
push
sbb
or
push
testb
fidivrl
mov
leave
push
jmp
test
and
cmp
sub
xor
std
add
xor
rcr
es
jg
cmpsl
das
movsb
inc
mov
outsl
scas
mov
int3
dec
mov
mov
fsts
or
cmp
add
fs
pop
and
sub
ficoml
dec
sub
xchg
mov
inc
js
cwtl
nop
xor
or
clc
inc
xor
rcl
imul
mov
lods
cmpl
jnp
out
cmp
add
popf
mov
jl
les
dec
pop
inc
add
les
sub
outsl
adc
jnp
sub
pop
cmp
insl
loope
out
adc
adc
fwait
cmpb
mov
cmp
adc
push
in
std
and
jne
xor
das
mov
test
das
sbb
les
and
and
fnstsw
xcrypt-cbc
cmpsl
push
xorl
inc
jno
fimuls
mov
mov
cmc
pop
xchg
or
adc
cmp
loopne
cwtl
jnp
fs
outsl
xchg
push
jle
mov
loopne
push
inc
mov
mov
in
sarb
ss
push
mov
test
je
ljmp
dec
and
cltd
cs
pop
and
movsl
sarb
lods
jle
out
sub
popf
inc
adc
test
mov
or
mov
jo
add
inc
mov
sub
and
test
shl
sarb
mov
add
jmp
lcall
in
jle
ds
cmpsb
push
cs
loope
adc
ss
or
lea
int
incl
fidivs
jmp
add
imul
xchg
ljmp
push
adc
clc
adc
mov
aaa
and
mov
hlt
push
cmp
in
sub
scas
andl
wbinvd
sub
int3
into
test
push
incb
iret
cld
test
sbb
push
stos
loopne
scas
clc
test
pop
mov
test
add
xchg
aad
ljmp
mov
sbb
inc
xor
mov
jle
aas
mov
jge
pop
fs
mov
jno
rorl
loop
mov
jnp
mov
cmp
int3
xchg
dec
or
rclb
bound
lcall
insb
out
lret
cmp
or
ja
outsl
or
xchg
movsb
mov
mov
fdiv
and
mov
je
daa
mov
out
pop
add
mov
fdivs
rclb
shrb
lea
xchg
gs
push
leave
outsl
jb
loop
in
mov
or
push
mov
mov
or
mov
add
jmp
je
sahf
ss
scas
cmp
out
or
aad
cmp
jo
inc
jmp
and
scas
pop
adc
dec
mov
lods
cmpsl
out
iret
and
lret
imul
xlat
add
ret
das
cmpl
inc
and
arpl
mov
or
loope
cmp
rorb
rclb
cli
push
and
push
je
mov
jne
adcl
lods
dec
adcl
daa
pop
xor
cmovge
into
insb
test
jge
cltd
sbb
cmc
aam
adc
stos
add
inc
lcall
mov
mov
rol
jne
mov
sbb
lret
fwait
lds
xlat
jmp
in
cld
das
mov
aaa
shll
mov
popf
jp
and
lahf
push
or
test
push
cld
arpl
repz
sub
inc
aad
imul
or
movsl
push
fiadds
loopne
aad
nop
int
push
ljmp
xchg
pop
arpl
adc
repnz
mov
mov
test
jle
and
sub
sub
add
push
rolb
mov
ds
mov
movsb
mov
jmp
test
mov
loop
xor
push
insb
cmp
loop
loop
mov
jle
sub
dec
mov
call
sub
add
push
xchg
popf
sbb
jnp
lods
mov
and
push
or
das
mov
dec
out
nop
inc
fld1
or
sbb
cmp
negb
cmpsl
aad
inc
mov
mov
and
sahf
pop
jns
xor
pop
icebp
inc
push
inc
adc
push
sbb
fidivs
jo
ljmp
push
xchg
repz
sub
dec
enter
lods
test
mov
lcall
pop
cmp
pop
xorl
sub
in
mov
div
js
std
incb
dec
push
sahf
sbb
out
mov
cmp
jno
push
xchg
push
in
incb
cmp
stos
movsb
iret
lret
mov
mov
mov
mov
and
loopne
add
xor
jp
test
pop
push
lret
lea
cmpsl
sbb
jno
pop
inc
xor
rcll
push
mov
inc
nop
aad
ret
jmp
mov
addl
popa
movsl
scas
in
push
subb
jnp
pop
cmp
std
inc
clc
std
insl
mov
or
out
add
rcrb
lahf
mov
jl
jg
add
pop
and
int3
pusha
dec
push
pushf
sbb
cmp
dec
push
out
ja
cld
mov
or
lds
cwtl
mov
xchg
and
in
out
xor
jns
fwait
dec
pop
arpl
mov
movb
mov
test
fwait
dec
push
mov
fwait
adc
mov
sbb
lret
pop
jp
filds
mov
cmp
scas
jns
jg
mov
mov
inc
lods
jp,pt
ljmp
cwtl
lock
js
loop
dec
jle
aas
xchg
test
icebp
int3
out
vprotb
and
stos
mov
push
repz
jp
out
in
adc
stos
adc
and
mov
loope
ss
data16
pop
xchg
bound
je
lods
pushf
push
iret
inc
js
xor
inc
sbb
cmpsl
int
dec
jbe
xor
pop
xlat
cmp
add
enter
cs
mov
test
icebp
rorl
pop
sub
jb
cmp
jmp
add
aad
sbbb
mov
lock
stos
mov
cmp
adc
ss
mov
push
xor
mov
ja
fcmovb
add
je
je
loope
sbb
repz
das
xchg
adc
xorb
aad
inc
rolb
inc
push
scas
add
movsb
pop
lret
mov
out
dec
inc
or
insl
lcall
fists
iret
call
outsb
mov
mov
int3
outsl
xchg
adc
jmp
xchg
mov
push
and
popa
popa
push
insb
fs
jns,pt
add
shll
adc
gs
fiaddl
int
add
rcll
or
mov
xor
xor
adc
movsb
cmpsl
divw
daa
pusha
es
ljmp
popf
xor
rcll
jae
mov
std
loop
popa
jnp
pop
in
fstpl
repnz
addb
push
cs
jno
outsl
movsb
add
mov
imull
and
lds
jb
iret
nop
mov
daa
adc
xlat
das
test
std
sbb
out
mov
je
ja
xchg
inc
jecxz
mov
push
in
adc
lds
popf
mov
rcr
outsl
scas
xor
rcrl
scas
flds
lahf
adcb
pop
int
pop
pop
cmp
neg
test
fsubrs
lds
and
enter
push
xor
fisubl
sub
mov
sbb
fs
sahf
push
imull
adc
jmp
pop
testb
sub
lock
mov
xchg
and
lock
outsl
mov
fwait
addr16
int
adc
dec
or
cmc
push
fs
push
push
xor
mov
inc
pop
xor
pop
leave
loope
add
clc
and
mov
lret
jbe
sbb
lods
fs
nop
cmp
pop
test
lret
pop
xchg
into
dec
inc
cmp
shll
dec
and
sub
add
or
mov
push
movsb
das
sbb
or
iret
outsl
add
sub
movhlps
bound
std
jle
push
outsl
pop
and
and
push
xchg
or
and
mov
lds
mov
inc
push
lea
fxch
cs
sub
loop
mov
out
jo
or
scas
je
outsb
lret
shlb
xor
inc
pusha
jns
cmp
xor
je
dec
stos
sub
out
stos
mov
push
int3
mov
outsb
mov
jl
add
xor
imul
xlat
shr
ror
and
adc
arpl
inc
mov
mov
and
lods
mov
in
or
sub
aas
aam
in
insb
push
xor
aad
pop
push
ret
mov
mov
in
xchg
leave
xor
nop
xchg
cmp
push
xchg
mov
sbb
ret
mov
or
cmpsb
cs
rcl
outsb
fimuls
pop
test
and
mov
mov
sbb
or
das
ret
pop
sub
push
lea
mov
lock
scas
xchg
jge
and
xor
icebp
xor
es
xor
out
scas
add
xchg
lahf
stc
fwait
mov
xchg
pop
jl
push
addr16
mov
pop
insl
pop
add
hlt
lret
xchg
xor
mov
mov
pop
std
lahf
das
xchg
hlt
mov
mov
mov
sbb
in
or
adcb
mov
cld
test
dec
arpl
test
pop
movsl
movsl
pop
xor
out
call
add
and
pusha
stos
mov
insl
jbe
fdivrl
mov
xor
mov
mov
xchg
inc
fnsave
pop
jo
xchg
shll
clc
sti
js
mov
std
idivl
cmp
es
inc
add
lahf
pop
scas
xor
push
mov
int
mov
xlat
adc
cmp
ss
push
inc
dec
sbb
jmp
fsubrs
enter
push
xchg
inc
in
and
sbb
fdivl
les
mov
mov
add
cmp
xchg
pop
or
jle
test
test
lds
pop
aaa
ja
or
mov
loopne
mov
adc
sahf
cmpsb
aad
pop
daa
hlt
jbe
aam
repz
jb
xchg
in
jg
xor
cmpsb
inc
cmpsl
movsl
sub
and
andl
lea
xchg
mov
iret
fsubrs
les
scas
cmp
mov
xchg
inc
push
sbb
jge
jnp
je
xor
hlt
mov
mov
loope
lret
mov
in
sub
and
jle
imul
sub
jo
rol
mov
in
sbb
mov
dec
fiaddl
movsb
mov
dec
jns
movl
adc
sub
jmp
jb
js
fsubr
mov
cld
xchg
cmpsl
pop
in
addr16
dec
mov
scas
std
add
xlat
inc
in
mov
adc
popa
sbb
lea
rolb
adc
mov
popf
mov
cmp
repz
push
icebp
and
mov
nop
sub
popf
xchg
fucomp
push
xchg
pop
pop
xchg
pop
mov
fst
out
push
scas
jnp
cmp
call
or
or
test
into
add
pop
jmp
ljmp
repnz
cmp
mov
shr
inc
jmp
das
out
mov
lds
mov
loop
inc
jle
sub
sbb
dec
int3
mov
ss
xchg
or
leave
divl
in
push
add
or
sbb
mov
call
cwtl
jae
flds
int
sbb
dec
popf
sbb
pop
jno
scas
lret
ud2
imulb
in
aaa
fstpt
xor
jne
sbb
or
add
xchg
push
jbe
sbb
and
mov
test
loopne
jl
adc
das
adc
pop
lahf
lret
stos
jo
push
xor
jl
mov
push
or
mov
cmp
push
mov
jae
ficomps
scas
sarl
mov
xchg
fisttps
mov
inc
add
das
bnd
imull
negl
cmc
enter
add
loope
movsb
jle
fsubrs
sbb
sub
pop
cli
inc
adc
sti
gs
pop
notb
add
repz
inc
sbb
xor
jnp
dec
inc
fimull
imul
pop
lods
mov
pop
or
jle
mov
test
dec
add
mov
iret
cmp
hlt
mov
int3
addb
mov
add
lods
into
inc
inc
aam
shlb
cmp
lea
cmp
jae
es
icebp
test
mov
cld
adc
and
adc
jae
ss
mov
or
int3
arpl
enter
test
push
mov
leave
mov
sub
stc
mov
lahf
cmp
push
popf
mov
pop
jno
stos
or
daa
in
out
cltd
and
xor
fisubl
iret
or
jbe
outsl
push
in
stos
es
xor
fildll
scas
arpl
fwait
call
cltd
sub
push
adcl
addr16
rclb
and
fabs
mov
orb
jl
pusha
cmpsl
pushf
xchg
lcall
add
pop
dec
lods
stc
jno
adc
js
cmpsl
cltd
inc
shll
roll
out
pop
sub
sbb
hlt
inc
jl
das
enter
jl
dec
cmp
mov
add
xchg
or
movsl
and
dec
inc
aad
pop
adc
pop
jp
jp
and
ja
shll
out
jge
aad
dec
cmp
arpl
and
fisttpl
mov
adc
faddp
mov
sub
mov
loopne
inc
enter
in
push
xor
clc
xor
adc
mov
push
test
bound
fisubrs
pop
xor
push
loopne
dec
mov
sbb
mov
push
lret
insb
in
out
dec
pop
leave
mov
push
in
lock
and
dec
push
pop
outsl
test
push
add
daa
push
mov
cmp
or
inc
sti
push
xor
enter
mov
inc
push
pop
pop
stos
clc
in
cmp
gs
flds
clc
popfw
in
or
notl
jmp
test
xchg
cmp
je
inc
das
out
pop
aam
cmp
mov
aas
adc
shlb
popl
pop
mov
inc
inc
mov
in
mov
pop
iret
add
cmp
xlat
sub
scas
xor
xchg
repz
fnstenv
test
in
dec
dec
jp
sbb
sti
adc
add
outsb
mov
sbb
test
cmp
fldenv
xchg
cmp
scas
push
and
lods
jmp
pop
jle
pop
imul
mov
lret
xchg
sub
adc
push
icebp
mov
fwait
rcrb
cmc
add
or
jecxz
jno
in
mov
mov
das
fsts
push
lock
adc
pop
xchg
pop
aaa
pop
cmp
add
jno,pt
das
add
push
inc
cmp
push
inc
xchg
xchg
mov
mov
mov
cmp
nop
insl
lcall
test
cmpsb
mov
mov
das
xchg
cmp
inc
mov
push
jp
add
jp
pop
subl
rcrb
cmp
push
out
mov
fucomp
add
push
rcrb
pushf
sub
bound
inc
lret
lahf
inc
sub
ffreep
sub
js
dec
mov
cmp
mov
mov
int3
pop
xor
insl
js
pop
shrb
mov
dec
push
mov
sub
jno
insb
cmp
dec
mov
aaa
sbb
jne
sbb
fld
pusha
sub
xchg
sbb
enter
lds
push
and
cmpsl
jg
pusha
daa
pop
jp
mov
mov
add
add
mov
cwtl
cld
iret
or
adc
out
sbb
data16
loop
int3
lret
cli
mov
and
sbb
lea
sbb
das
pop
sbb
clc
xchg
imul
testl
cltd
dec
ja
and
das
xchg
dec
test
ss
movsb
scas
daa
push
mov
mov
mov
xor
xchg
and
decl
and
add
sbb
and
cmpsl
mov
cld
hlt
push
sbb
out
cs
orl
pop
sbb
push
adc
sbb
ja
lcall
or
mov
dec
xor
jecxz
and
cmp
inc
mov
sbb
test
pop
outsb
aad
sub
dec
mov
xchg
cmpsl
mov
and
outsb
pop
nop
mov
sti
mov
repz
fsub
pop
dec
inc
mov
mov
les
mov
rclb
cli
out
mov
mov
pusha
and
push
cmpsl
cltd
cmp
pop
xchg
stos
test
cmp
or
adc
xchg
dec
aas
mov
rorb
mov
and
repz
rcrl
fisttps
icebp
mov
adc
xchg
xor
inc
xor
and
dec
aad
adc
and
cmp
in
pop
clc
mov
cmp
sarb
stc
pop
xchg
inc
rcrl
mov
clc
test
rcrb
pop
add
xorl
jge
or
popf
arpl
js
pusha
push
pushf
repz
push
push
mov
xor
lods
add
push
ss
in
iret
push
fwait
ja
inc
mov
or
out
sbb
pop
das
sbb
xlat
test
pop
testb
jge
inc
stos
dec
data16
das
loope
push
lcall
push
ror
bound
fdivl
aam
xchg
add
mov
stos
push
jne
jmp
push
or
into
fwait
jae
das
xor
xor
pushf
push
adc
and
xchg
and
negl
out
sub
mov
cmp
cmp
hlt
rcll
icebp
sbb
gs
aad
add
divl
loope
lds
jmp
js
jns
lds
jecxz
enter
mov
fisubl
or
adc
outsb
int
hlt
imul
out
clc
sbb
sbb
lds
cmp
lret
in
arpl
mov
popa
sbb
test
in
pop
cli
xor
jae
shrb
inc
add
out
scas
mov
adc
ret
call
mov
jne
or
push
lcall
stc
mov
inc
into
shrl
popf
pop
lret
sub
jg
aas
imul
jmp
shll
push
xor
and
dec
scas
aas
test
adc
sub
cli
mov
mov
insl
inc
and
pop
sahf
ljmp
js
call
push
cmpb
pop
fistps
test
leave
mov
lret
sub
jnp
sbbl
sarb
xchg
ss
mov
or
jmp
jbe
push
push
cltd
sbb
add
and
adc
adc
in
push
add
idiv
adc
roll
cmp
inc
out
test
and
mov
mov
aad
adc
leave
or
mov
jns
cmp
sub
xchg
cltd
sub
outsl
loop
mov
jp
popl
ret
push
lock
mov
push
add
ljmp
and
bound
je
mov
adc
mov
test
and
cld
enter
inc
jb
daa
shlb
and
mov
mov
adc
popf
sbb
test
push
jl
jl
pop
adc
mov
out
add
leave
jne
rcll
mov
pushf
sti
repnz
xchg
cmc
cmp
jbe
lock
mov
sbb
push
in
stos
repz
aad
js
sub
adc
adc
std
push
loopne
dec
cwtl
push
test
in
cltd
in
imul
mov
xorb
out
sub
xchg
mov
aad
cli
or
outsb
insl
push
imul
imul
push
div
loop
dec
sub
repnz
mov
out
test
jne
icebp
fsubp
cld
ds
shlb
cmp
insb
xchg
sbb
xor
sbb
int
mov
aam
xor
call
xlat
in
jae
aas
xchg
lods
push
mov
xchg
pushf
jmp
stos
nop
mov
xchg
push
jmp
icebp
adc
fstpl
jecxz
bound
mov
dec
enter
inc
mov
sub
lea
jle
push
je
inc
cmp
out
nop
repnz
mov
and
or
insb
adc
mov
aas
xor
fisubrl
mov
mov
ds
fcmovnu
outsb
xor
out
cli
shll
je
test
pop
adc
adc
mov
stc
xor
inc
inc
cli
sbb
iret
lock
jnp
dec
push
mov
xor
inc
mov
aas
std
and
scas
xchg
sbb
sti
pop
fs
pop
hlt
add
rcrl
add
dec
or
jb
cmp
mov
sbb
loope
pop
sub
fcoml
xlat
ficomps
xlat
jo
inc
js
sub
and
stos
jbe
xchg
sub
push
mov
hlt
ficomps
lods
mov
cli
mov
aam
sub
scas
mov
stos
cltd
pop
ds
loope
adc
int
shl
sarl
and
dec
test
push
push
daa
mov
daa
sub
cmc
sahf
and
leave
push
push
inc
or
adc
inc
lds
jp
xor
push
pop
cwtl
push
xchg
lods
test
sarl
cmpsl
or
sbb
xor
inc
add
aad
pushf
pop
mov
pop
xchg
mov
mov
fnsave
push
jg
mov
push
sbb
repz
mov
rorb
mov
sub
inc
mov
fsubrl
and
insb
shl
loopne
shll
loope
adc
enter
jbe
popf
dec
cld
fists
cmp
push
movsb
fldl
dec
sbbl
scas
adc
push
jno
push
in
ret
push
push
jo
sbb
dec
pop
push
scas
cmp
xor
mov
in
or
loop
lods
add
push
sbb
pop
mov
in
mov
pop
xor
mov
and
clc
jb
cld
mov
cmc
pop
sbb
ja
and
movsl
les
or
mov
pop
loopne
push
repnz
and
scas
outsb
movsb
sub
fs
mov
sbb
jo,pn
mov
ljmp
adc
mov
in
outsl
out
xor
add
enter
stos
mov
sti
xor
mov
adc
fnstcw
stos
and
xchg
jnp
or
pushf
pop
push
fcomp
and
mov
dec
loop
shlb
pushf
rorb
lret
lret
pop
enter
xchg
adc
pusha
jge
cmp
push
cwtl
imul
sbbl
pusha
enter
jecxz
fwait
lods
sub
mov
mov
mov
je
cmc
dec
les
mov
jns
sub
sub
popa
jmp
fildl
pop
or
cwtl
jne
scas
fists
inc
test
movb
mov
add
or
or
mov
imull
cmc
dec
inc
xchg
push
and
insb
mov
cmp
xchg
es
xor
das
loope
lcall
jb
push
xor
push
mov
loope
add
ret
mov
push
iret
fisttpll
arpl
fdivrs
mov
dec
xor
cmp
sub
or
lds
mov
inc
shlb
cmp
jg
pop
mov
hlt
or
jl,pn
pop
and
push
pop
aas
push
aam
shll
sub
daa
out
push
and
xchg
dec
pushf
lret
jmp
cld
jb
hlt
cltd
sub
sbb
jb
int3
push
out
mov
jmp
inc
fcos
add
adc
xor
xchg
daa
or
shll
shlb
into
cmpsl
sub
push
mov
inc
add
xchg
mov
dec
jg
xchg
sub
cmova
ret
or
xor
ret
xchg
rclb
aas
hlt
mov
and
int3
int
shrl
add
mov
test
out
stos
ret
mov
ret
jmp
fistpl
cmp
jg
cltd
mov
mov
test
bound
add
mov
dec
adc
pop
shlb
pushw
in
sbb
add
fs
cwtl
loopne
lea
adc
fwait
jae
xlat
stos
imul
mov
adc
nop
push
sub
inc
stos
push
cld
cld
fisubl
stc
jb
call
repz
xorb
out
add
mov
dec
scas
add
sbb
repz
repnz
stc
jno
out
and
xchg
mov
shll
mov
inc
dec
add
mov
ret
popa
or
mov
sub
es
and
adcl
lcall
cltd
dec
ljmp
adc
xchg
je
sub
pusha
push
cmp
loopne
adc
pop
adc
sub
stc
jbe
les
add
outsl
mov
or
push
movsb
mov
or
ret
cmpsl
push
mov
cmc
outsl
rcr
lea
jbe
fwait
ljmp
lretw
pop
push
push
mov
pop
fstpl
clc
int
clc
add
mov
adc
cmp
decl
cmpsl
int3
jmp
push
mov
mov
cmp
mov
leave
stc
sbb
mov
sarl
cmpb
lods
es
repnz
sub
cmp
adc
sbb
scas
xchg
jmp
ret
mov
dec
cltd
mov
sbb
in
dec
and
mov
dec
int
loop
jle
repnz
aaa
and
es
mov
push
int
clc
jbe
or
sbb
cmp
sbb
mov
stc
das
cmc
lcall
mov
jae
aas
xor
inc
inc
lret
pushf
shrb
mov
xor
xor
subb
outsl
fdivs
loope
jns
xchg
dec
jb
movsb
mov
mov
ror
jb
pop
jae
add
fwait
or
ljmp
out
mov
mov
cli
push
imul
xchg
iret
shll
loop
xchg
call
xlat
and
mov
insb
jnp
out
and
leave
lods
cmp
add
cs
out
jne
fists
add
imul
xor
mov
xchg
add
push
push
packssdw
sbb
mov
adc
jb
inc
sahf
hlt
xchg
sbb
jnp
or
push
push
out
pop
dec
cmp
mov
pop
mull
pop
lds
push
enter
enter
inc
push
daa
bound
push
add
stos
insl
shll
sti
mov
and
gs
in
jmp
xor
push
jb
popf
pop
mov
rcll
or
xchg
es
lret
sub
loope
mov
lods
iret
out
add
or
mov
sub
mov
aaa
pop
sbb
add
cs
inc
sub
lcall
mov
lcall
pop
xlat
fisubrl
xchg
int3
pop
addb
mov
subl
imul
out
xor
sub
shr
dec
aas
push
push
jae
scas
in
inc
popf
cmp
adc
iret
fiaddl
cld
in
insl
mov
stos
adc
fadd
leave
ds
push
sbb
xchg
mov
ret
fistpl
xorl
nop
inc
std
cmp
cmp
sbb
or
pushl
inc
jnp
cltd
push
push
mov
dec
xor
mov
aas
or
pushf
dec
push
push
jle
fiadds
testl
fbld
int
lods
cli
xor
add
sahf
loope
jo
icebp
ficoml
lret
stc
loope
enter
inc
mulb
inc
mov
in
fneni(8087
iret
addr16
mov
adc
lcall
add
pop
and
add
pusha
and
push
rcr
cmp
shr
sbb
in
outsl
mov
pushl
mov
stos
cmp
lcall
orb
cmp
mov
cld
daa
sbb
icebp
xor
addr16
lret
movsl
mov
jg
push
js
sahf
or
bsf
xchg
movsl
mov
and
imul
in
dec
xchg
mov
filds
jae
mov
movsb
add
cmp
ljmp
sbb
push
aas
jl
addr16
dec
push
inc
sbb
jb
repz
jmp
iret
pop
repnz
dec
adc
sbb
in
outsl
inc
mov
shlb
mov
jp
jne
dec
fst
push
pop
push
mov
pop
shrb
js
adc
pushf
ljmp
mov
cwtl
ret
or
mov
iret
xchg
jae
inc
adc
cmp
xchg
mov
aaa
and
fstpt
push
lcall
sbb
movsl
push
sbb
dec
push
mov
inc
push
cmp
std
ljmp
vsqrtss
push
jmp
rolb
push
out
psrad
adc
mov
leave
mov
xor
mov
or
stc
das
lea
unpcklps
push
push
xchg
test
out
jmp
test
sbb
xchg
jb
pop
adc
or
hlt
ljmp
stc
lods
nop
ret
sti
ret
xchg
adc
insl
push
sub
sub
scas
jg
fwait
mov
mov
and
ja
cmp
adc
aam
inc
sbb
sub
ljmp
sub
mov
inc
pop
jno
adc
mov
adc
outsl
add
cmp
dec
insl
jne
fldl
int3
imul
icebp
sbb
or
insl
clc
mov
repz
arpl
xchg
negl
arpl
xor
jge
or
mov
loope
sub
pop
mov
cli
les
inc
repnz
adc
or
push
cmc
mov
push
test
in
sbb
shr
pop
sbb
hlt
xchg
add
sti
mov
jns
inc
mov
add
sarb
cmpsb
iret
test
and
add
orl
mov
or
pop
mov
xlat
dec
test
loopne
hlt
mov
xchg
dec
cs
jl
xchg
push
adc
push
lods
xchg
xor
in
ret
mov
and
add
fnsave
add
out
xor
mov
and
xor
sbb
icebp
subb
lret
pop
mov
cli
cld
push
dec
sub
cmpsl
out
fldl
movsb
shrb
in
mov
pop
ficoml
sub
ljmp
andl
or
xor
pop
mov
or
movsb
jnp
xor
scas
add
je
out
xlat
lret
jp
popf
xchg
stos
mov
out
pop
dec
sti
jl
dec
push
out
scas
push
pop
lahf
xchg
adc
jno
movl
sbb
aam
mov
pop
adc
je
aad
in
clc
jno
adc
mov
jp
and
sahf
stc
stos
dec
jecxz
test
in
mov
popf
insl
sbb
roll
push
or
sbb
fnstenv
xor
out
cwtl
in
test
sbbl
clc
mov
insl
fcmovb
popa
inc
rorb
addl
add
xchg
add
adc
insl
lcall
sahf
jl
pop
aas
js
in
mov
inc
jb
xchg
out
sub
xchg
mov
movsb
mov
lock
pushf
loope
mov
loop
sub
mov
sqrtps
int3
xlat
mov
pop
enter
enter
sbb
xor
inc
inc
dec
sbb
enter
mov
out
mov
and
mov
mov
loopne
lods
pop
pop
les
lret
push
mov
in
cmp
pushf
inc
insb
mov
jmp
fs
ja
xorl
pop
aam
jb
or
dec
enter
pop
adc
fmul
dec
hlt
mov
pop
dec
loope
movsb
jg
fldl
xor
sub
add
pushf
push
pop
pop
cmp
je
mov
xor
jno
mov
mov
sbb
mov
pop
scas
sub
shrb
mov
xchg
lret
imul
pop
out
rorl
cmpsl
sub
xchg
fwait
mov
and
sarb
jg
push
add
movsl
xchg
cmp
decl
ud0
sub
add
les
arpl
sbb
mov
xchg
stos
hlt
push
rcrb
mov
out
divl
cmp
jge
repz
sar
lock
cmpsl
mov
aam
push
dec
stc
test
sbb
jne
adc
scas
pop
aam
fwait
out
add
and
jmp
jg
sti
lret
cmp
and
insb
dec
pop
or
sarb
test
call
lcall
pop
fistpl
mov
pop
dec
decl
mov
cli
push
in
aaa
cmpsb
test
mov
lcall
mov
jle
mov
nop
jns
jle
aas
sbb
add
and
pop
cmpsb
add
sbbl
aad
fcmovnbe
and
cmp
add
mov
adc
and
inc
cwtl
add
iret
jmp
imul
leave
cld
mov
mov
shrl
es
xchg
xchg
pop
cs
icebp
aas
pop
hlt
imul
xchg
sub
inc
jnp
push
enter
pusha
scas
push
scas
repnz
dec
xor
cs
mov
adc
jbe
rcrb
dec
stos
imul
push
jae
xor
push
pusha
pop
pop
popa
popa
jb
push
icebp
bound
into
ror
mov
orb
fstpl
adcl
addr16
fwait
jg
fmull
out
push
push
in
jg
std
jg
cmp
imul
jne
sar
xor
or
dec
mov
mov
imul
imul
insl
xchg
xchg
mov
insl
fadd
popa
sub
cs
jg
cwtl
mov
fiadds
ja
mov
mov
dec
mov
faddl
aam
loope
aas
cli
ret
out
fimuls
mov
pop
popa
or
aas
push
push
cmp
repz
mov
sarb
imull
cmpb
xor
inc
inc
jb
sahf
imul
pop
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
and
and
gs
push
adc
icebp
pop
and
lcall
and
lahf
stc
call
bound
lock
xor
mov
mov
mov
test
out
pop
push
out
ret
imul
mov
daa
movsb
in
push
xor
dec
das
out
pusha
pusha
push
mulb
cmp
jo
aad
jbe
pop
stc
mov
sbb
aad
movsb
or
cmp
ds
nop
std
cmpsb
mov
rclb
sbb
rcll
clc
adc
mov
divl
or
inc
je
test
dec
repz
sbb
fstl
movsb
in
mov
mov
in
ret
out
dec
ud2
popf
out
jno
add
lock
pop
and
popf
jmp
push
xchg
rolb
xchg
jnp
push
iret
cmp
sub
sbb
bound
cld
fsubrl
mov
in
or
arpl
mov
pop
dec
jae
testb
dec
sub
mov
add
mov
call
dec
imul
pop
inc
hlt
and
mov
hlt
fdivrp
xchg
xchg
out
icebp
cmp
mov
arpl
add
cmp
fdivs
sbb
das
out
cmpsb
popf
nop
cmp
sub
add
out
pop
sar
scas
mov
fildl
sub
icebp
fsubl
mov
lcall
outsb
test
call
push
lds
dec
xorb
xorl
fcomps
incl
inc
shl
loopne
jg
int3
xchg
adc
in
nop
sub
jmp
mov
push
and
adc
mov
hlt
push
and
fcom
and
icebp
lahf
push
stc
xlat
fisubs
push
sub
xchg
sub
inc
sbb
cmp
sbb
sub
cmp
add
xlat
jae
insl
xor
sahf
stos
push
jb
imul
shrb
daa
mov
add
js
in
cmc
cld
pop
leave
hlt
in
sub
imul
mov
inc
and
enter
scas
insb
into
test
cmp
gs
jmp
leave
sub
push
dec
jns
mov
xor
fnstcw
xor
add
or
cld
aas
cmp
dec
es
cmp
cs
sub
mov
stos
loopne
mov
and
cs
sub
scas
movsb
cmpb
ja
stos
add
data16
int3
sbb
lret
ljmp
outsb
daa
or
mov
ljmp
mov
mov
and
mov
push
jp
jmp
adc
dec
add
mov
divl
sbb
cmp
sub
add
cmpsb
stos
sub
inc
imul
jle
adc
push
jns
and
outsl
test
sbb
bound
in
add
jbe
push
push
pop
mov
pop
add
push
decb
bnd
stc
adcl
jle
sub
push
rcll
add
iret
lahf
inc
test
pusha
aas
ret
push
or
pop
push
jp
adc
add
dec
inc
add
lret
cmp
mov
mov
jo
repz
pop
adc
push
mov
xor
inc
adc
sub
and
sbb
lar
xor
mov
xor
outsb
sub
or
lret
and
xchg
sbb
addr16
pop
add
lods
jle
shl
sti
lods
movsl
ret
or
adc
and
lds
stc
inc
xor
push
push
fst
nop
scas
sarl
test
out
or
hlt
push
cs
sub
mov
shll
scas
lea
loop
cmpsb
xor
clc
xor
dec
mov
push
xor
stos
cwtl
cmp
add
out
lods
std
push
sub
repz
pop
inc
sub
push
jp
sbb
int3
sbb
sbb
push
and
es
add
sbb
inc
paddq
inc
dec
popa
jne
cmp
mov
mov
orb
and
movsb
fdivrs
jb
mov
in
imul
outsl
inc
shlb
adc
pusha
cld
imul
xchg
xor
mov
add
xor
adc
call
inc
xchg
pusha
cltd
test
lock
mov
mov
push
test
roll
pop
outsb
pop
frstor
daa
add
repnz
mov
iret
add
xor
insl
leave
shlb
xchg
notl
ret
pop
mov
imul
add
adc
js
xor
in
dec
stos
fs
fisubs
loopne
pop
or
push
leave
shll
mov
lret
les
add
movsl
lret
subb
cmp
and
and
es
pop
int3
mov
divl
shrl
jle
adc
and
cmp
leave
mov
sub
pop
xchg
jae
mov
add
insl
dec
lcall
pop
lcall
mov
add
xor
jl
lock
jno
sbb
push
inc
cs
jbe
leave
push
outsb
sbb
add
scas
cwtl
xlat
jge
sub
leave
into
inc
pop
fmuls
sub
dec
inc
incb
addr16
sbb
lods
pop
lds
ds
repz
test
dec
mov
push
sbb
arpl
dec
in
push
jl
sub
fs
jb
dec
pop
mov
ja
add
push
xchg
mov
mov
lahf
addl
mov
ret
aad
inc
pop
or
mov
cmp
mov
mov
push
rcr
jle
mov
push
es
mov
dec
xchg
xchg
dec
repz
clc
xrelease
jb
mov
aaa
data16
aam
pop
fildll
or
mov
sub
sarl
stc
dec
pop
jmp
mov
cmp
jo
stos
mov
cwtl
insb
mov
popa
and
sbb
scas
out
std
scas
int
dec
mov
dec
xchg
fidivs
mov
adc
out
bound
and
or
stc
xlat
mov
std
fists
das
mov
pop
jbe
pop
lcall
sti
dec
fsub
stos
daa
popf
adc
pusha
jns
inc
inc
mov
icebp
loopne
imul
sub
fsubrl
push
dec
dec
jae
addb
enter
push
imul
in
outsl
jle
inc
sbb
sti
das
jg
sbb
loope
mov
sahf
int3
inc
jnp
mov
je
stos
xchg
ljmp
or
jle
jae
insl
sbb
sub
mov
inc
pop
dec
or
xor
inc
test
jo
fadds
in
mov
popa
and
pop
mov
jns
cmp
fs
xabort
and
jg
pop
cmc
mov
adc
mov
dec
mov
movsb
pop
jecxz
inc
mov
cmp
xlat
xlat
add
dec
xor
out
xchg
mov
push
xchg
sbb
adc
mov
out
test
adc
push
clc
pop
dec
push
pusha
faddl
mov
add
mov
aas
ficompl
and
fdivr
repnz
lock
fisubrl
fdivp
pusha
sub
inc
into
sub
aad
cwtl
cmc
lea
push
cmpl
push
shlb
das
lods
inc
dec
clc
mov
icebp
xchg
cmpsl
out
inc
cmc
int
or
mov
mov
movsl
in
mov
insb
iret
aad
in
in
js
adc
push
add
call
es
cmp
or
cmp
outsb
dec
int3
mov
mov
ret
arpl
loopne
sub
pop
pop
mov
push
cmp
lret
addl
out
movsb
cmpsb
out
in
xchg
lret
cs
data16
icebp
xor
pop
or
pushf
xor
add
out
mov
inc
fildll
mov
test
scas
jnp
cltd
xor
push
stos
push
dec
mov
mov
xchg
movsb
cmp
sbb
int
ljmp
aaa
push
clc
out
insb
cmp
repnz
push
es
xor
dec
in
or
pop
clc
ret
out
dec
test
repz
addr16
fdivrl
push
sub
push
sub
xlat
push
daa
imul
sbbl
jp
in
fisttps
shlb
out
test
test
jns
rolb
fisttps
andl
mov
dec
aam
fldl
stos
popa
clc
lcall
xchg
jge
xlat
adc
xchg
mov
cli
and
lahf
jns
xchg
enter
mov
pop
das
push
push
adc
testb
push
lds
adc
fidivrl
push
mov
sub
or
loop
cs
cmp
pop
lret
stc
mov
mov
dec
lds
in
pop
sbb
cmp
xchg
jg
cli
inc
pop
sub
aaa
add
or
test
jecxz
inc
adcb
or
mov
xor
sub
aam
sub
push
insl
mov
mov
or
add
jb
xchg
cmp
rcr
bound
out
xor
mov
dec
xor
cwtl
jns
dec
adc
sti
or
cld
inc
sbb
mov
sbb
fisttps
fdiv
in
cltd
sub
pushl
das
stc
cmpb
sub
xchg
jle
subl
adc
sbb
mov
ja
push
push
in
pop
popa
iret
nop
inc
sbb
outsl
xchg
adc
add
pushf
sub
xchg
cli
fildll
popa
addr16
or
sarb
mov
rorb
inc
lods
iret
mov
sarb
or
jb
mov
xchg
jge
mov
inc
mov
xorl
out
cmp
pop
pop
mov
and
mov
ds
xchg
inc
pop
sbb
jno
mov
push
jmp
mov
stc
xor
les
shll
fildll
mov
decb
cmp
icebp
dec
add
cltd
push
sahf
sbb
or
data16
cli
repz
sti
push
ds
je
cmp
pop
fistpl
sub
repnz
in
divb
imul
popa
mov
mov
jge
mov
or
movsb
sub
push
inc
jbe
mov
pusha
mov
cli
faddl
sbb
leave
dec
outsl
add
mov
lods
inc
jl
fcmovb
shl
cmpsb
ljmp
jg
xchg
dec
popf
or
adc
push
pushf
xchg
ljmp
sbbl
das
or
fistpll
lea
xor
aas
aaa
clc
hlt
lea
rorl
push
xchg
add
aad
into
push
xor
add
dec
sub
std
xchg
cs
sbb
repnz
or
out
out
add
arpl
mov
jns
sbb
xchg
popa
shlb
adc
sbb
jb
and
idivl
add
ds
push
dec
rcll
push
pop
or
or
mov
jge
repnz
outsl
jmp
adc
cmpsb
push
es
movsb
int
fdivs
and
cld
stos
inc
cmp
pushf
push
dec
or
mov
add
cmp
jecxz
xlat
shr
leave
jnp
xor
jnp,pn
mov
fmuls
pushf
out
cli
cwtl
pop
test
lcall
ret
dec
cmp
mov
std
popa
shll
call
xlat
aad
sub
aas
jg
jge
daa
push
sti
jb
pushf
lods
jecxz
mov
jecxz
pop
imul
leave
fs
int
xor
pusha
out
test
outsb
es
jge
cld
movsb
ret
mov
mov
mov
stos
std
loopne
mov
add
outsl
mov
xchg
mov
es
dec
push
test
mov
mov
jae
dec
fxch
test
sahf
jecxz
sarb
push
dec
mov
jo
mov
mov
das
or
dec
pop
das
sub
xchg
cltd
mov
adc
ficoml
pop
mov
jmp
inc
test
inc
sbb
push
ds
das
mov
sahf
aaa
lods
and
mov
daa
popl
inc
adc
hlt
and
mov
xchg
shrb
xor
cwtl
outsl
and
fs
mov
loopne
mov
shll
cmp
jp,pn
inc
xchg
cmpb
push
and
popf
xor
add
out
xor
pop
adc
xor
mov
mov
or
orl
sbb
and
pop
leave
pop
adc
xor
in
push
iret
mov
hlt
dec
mov
stos
test
fwait
inc
enter
ret
je,pn
into
call
push
in
call
leave
add
add
add
rcl
pop
add
in
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
or
jne
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
add
jecxz
