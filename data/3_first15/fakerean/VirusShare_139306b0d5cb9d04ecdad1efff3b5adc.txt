enter
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
xor
push
mov
push
push
mov
call
lea
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
lea
mov
push
push
push
push
push
push
push
push
call
test
je
movl
jmp
mov
test
je
cmp
jne
push
push
mov
call
mov
call
push
push
call
push
call
test
jne
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
pop
pop
ret
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
pop
mov
pop
pop
ret
nop
nop
nop
mov
push
test
push
mov
je
mov
mov
push
mov
mov
mov
mov
mov
mov
lea
lea
push
push
mov
call
mov
add
mov
pop
pop
ret
mov
push
mov
mov
mov
mov
mov
mov
mov
lea
lea
push
push
mov
call
mov
mov
add
mov
push
call
test
je
push
mov
call
pop
pop
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
push
mov
push
push
push
call
push
mov
call
call
mov
call
lea
mov
push
push
push
push
push
push
push
push
movb
call
test
je
movl
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
movb
call
mov
call
push
mov
call
mov
push
push
push
call
pop
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
mov
test
je
push
lea
call
push
lea
call
mov
mov
push
push
push
jmp
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
pop
ret
mov
push
call
pop
ret
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
lea
movb
mov
call
lea
movb
call
push
mov
movb
movl
call
xor
push
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
movb
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
lea
call
mov
movl
test
je
mov
lea
mov
xor
lea
rep
mov
mov
mov
mov
mov
test
setne
lea
mov
mov
push
lea
mov
call
mov
mov
push
push
call
mov
add
mov
test
je
push
lea
call
jmp
mov
push
push
push
call
mov
lea
push
lea
push
push
call
mov
push
lea
push
push
call
mov
add
add
lea
push
mov
call
mov
push
push
call
mov
add
mov
test
je
push
lea
call
jmp
push
push
push
call
add
mov
jmp
mov
lea
mov
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
push
call
add
lea
push
lea
call
mov
lea
mov
mov
push
push
push
call
mov
add
push
call
test
je
mov
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
mov
movb
call
mov
lea
push
push
call
add
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
je
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
call
lea
mov
mov
call
lea
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
lea
push
call
add
lea
lea
push
call
push
mov
call
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
test
je
mov
mov
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
push
push
push
push
call
pop
pop
mov
pop
ret
mov
push
mov
call
pop
pop
pop
ret
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
add
lea
push
movl
call
lea
call
cmp
jne
lea
mov
push
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
push
push
call
add
mov
call
pop
ret
mov
push
push
call
add
mov
push
push
call
mov
call
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
call
mov
movl
movl
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
test
je
mov
call
pop
ret
push
push
mov
call
mov
call
pop
ret
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
mov
call
lea
movl
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
call
mov
pop
ret
nop
nop
nop
mov
push
push
push
test
mov
je
mov
lea
mov
push
lea
add
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
lea
mov
lea
add
rep
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
push
call
test
je
mov
mov
call
mov
call
pop
pop
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
mov
movb
call
mov
lea
push
push
call
add
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
je
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
call
lea
mov
mov
call
lea
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
lea
push
call
add
lea
lea
push
call
push
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
push
push
call
add
mov
call
pop
ret
mov
push
push
call
add
mov
push
push
call
mov
call
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
mov
call
push
lea
push
push
call
add
lea
push
push
mov
call
mov
lea
lea
mov
push
mov
call
lea
push
mov
call
lea
mov
push
call
push
push
push
mov
call
push
push
push
mov
call
push
push
push
push
push
push
mov
movl
call
pop
mov
pop
add
ret
nop
mov
push
push
push
mov
mov
call
push
mov
lea
call
lea
movl
call
lea
movb
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
lea
push
push
call
add
lea
call
lea
push
push
lea
call
lea
push
lea
push
push
call
add
lea
mov
push
push
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
call
push
push
mov
push
lea
call
xor
lea
mov
call
mov
mov
push
movb
call
test
je
mov
lea
call
test
je
mov
push
call
test
je
mov
lea
call
test
je
mov
push
call
test
je
mov
lea
call
test
je
push
lea
push
push
call
add
lea
push
push
mov
call
lea
push
push
call
add
test
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
push
push
lea
call
push
push
lea
call
push
push
lea
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
call
push
push
call
mov
push
push
mov
push
push
call
mov
push
add
lea
push
push
call
add
cmpw
lea
je
cmpw
jne
add
cmpw
je
cmpw
je
push
push
call
mov
add
test
je
movw
mov
push
push
push
push
call
test
je
cmpw
lea
jne
pop
pop
pop
mov
pop
add
ret
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
mov
push
push
push
push
push
push
lea
call
lea
movb
call
cmp
jne
lea
push
lea
call
mov
mov
push
push
push
push
call
lea
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
lea
movl
call
mov
lea
mov
call
mov
mov
push
push
push
push
movb
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
cmp
jne
mov
push
push
push
push
call
lea
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
push
push
push
mov
push
call
lea
call
mov
mov
xor
movl
movw
mov
push
push
push
push
call
test
jle
lea
lea
push
push
call
test
je
mov
push
add
push
push
call
add
mov
mov
push
add
push
push
call
mov
add
inc
push
push
push
push
call
cmp
jl
mov
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
lea
movl
call
lea
movb
call
mov
movl
movl
mov
pop
mov
add
ret
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
xor
lea
mov
call
lea
movb
call
mov
movb
call
push
lea
call
mov
mov
push
push
call
mov
push
push
push
push
call
push
lea
call
mov
push
push
lea
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
push
lea
call
mov
lea
add
push
call
mov
xor
lea
rep
mov
movl
test
jle
mov
mov
mov
lea
push
add
push
push
mov
mov
call
lea
push
push
call
mov
add
test
je
movw
add
mov
lea
push
push
lea
push
push
mov
call
test
mov
je
push
push
push
mov
call
mov
mov
mov
mov
lea
test
jne
lea
mov
push
push
push
mov
call
mov
mov
inc
add
cmp
mov
jl
push
mov
call
lea
push
call
add
test
je
mov
cmp
jb
jne
cmpl
jae
movl
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
mov
push
mov
mov
cmp
jge
cmpl
jne
mov
shl
add
mov
mov
neg
sbb
and
add
mov
pop
ret
sub
push
mov
mov
test
jne
mov
cmpl
jne
mov
cmp
je
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
mov
cmp
je
push
mov
call
mov
movl
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
lea
call
mov
lea
push
mov
movl
call
cmp
jb
lea
movl
call
pop
pop
pop
mov
mov
add
ret
mov
push
shl
add
mov
shl
xor
mov
lea
test
sete
mov
mov
mov
neg
sbb
add
push
lea
call
mov
mov
push
push
push
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
add
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
lea
movb
mov
call
lea
movb
call
mov
lea
mov
mov
movl
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
lea
push
push
call
mov
add
test
je
mov
mov
push
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
lea
push
push
call
mov
add
test
je
mov
mov
push
mov
push
lea
push
push
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
test
mov
mov
je
mov
jmp
mov
mov
mov
mov
pop
test
je
push
lea
movl
call
push
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
push
lea
movb
call
mov
movl
movl
movl
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
mov
call
mov
push
sub
mov
je
dec
jne
xor
jmp
mov
push
call
push
lea
call
lea
movl
mov
call
cmp
jne
push
push
push
push
push
push
push
push
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
push
lea
push
mov
lea
mov
push
push
push
push
push
push
push
push
movl
call
mov
cmp
je
test
mov
jne
mov
push
push
push
lea
push
push
mov
mov
push
push
push
push
movl
call
mov
mov
cmp
je
push
lea
push
push
call
mov
mov
add
lea
mov
mov
call
mov
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
movl
call
mov
mov
push
push
mov
call
call
push
call
mov
push
push
mov
push
lea
mov
mov
lea
mov
push
push
mov
mov
push
push
mov
call
push
push
push
mov
call
lea
push
push
mov
call
push
push
push
push
push
push
mov
call
push
lea
call
mov
mov
lea
push
push
push
mov
call
push
lea
push
push
call
mov
mov
add
lea
mov
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
call
mov
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
je
mov
ret
cmpl
jae
mov
ret
mov
cmpl
jae
mov
ret
mov
mov
push
push
add
call
xor
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
lea
movb
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
movl
xor
lea
push
push
mov
call
mov
cmp
jne
mov
movl
mov
cmp
jle
mov
lea
sub
push
push
push
mov
call
mov
mov
push
push
push
push
call
lea
call
mov
lea
test
jne
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
lea
call
lea
xor
mov
mov
call
mov
mov
push
push
push
push
call
test
jle
lea
push
push
lea
call
test
je
push
mov
call
lea
mov
push
call
mov
push
push
push
push
inc
call
cmp
jl
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
call
cmp
jne
mov
push
push
push
call
add
test
jne
push
push
lea
call
mov
mov
cmp
je
cmp
jne
push
jmp
push
lea
call
cmp
je
mov
mov
sub
push
push
lea
call
mov
mov
test
je
push
mov
push
push
push
call
lea
movl
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
lea
movl
call
mov
lea
mov
call
mov
mov
push
push
push
push
movb
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
cmp
jne
mov
push
push
push
push
call
lea
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
call
lea
call
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
lea
call
push
mov
movl
call
mov
cmp
jg
mov
lea
push
call
mov
push
push
mov
push
call
mov
shl
bound
mov
add
add
add
loope
add
mov
icebp
add
ror
ljmp
enter
xchg
stos
popa
add
popf
int
lret
add
pushf
negl
add
testb
add
add
add
mov
jne
push
mov
add
push
push
push
lea
push
push
push
push
push
push
push
call
pushf
add
add
loopne
add
pop
add
xchg
push
add
ret
lret
xchg
mov
mov
add
mov
push
andb
pop
roll
pop
aam
mull
popl
push
push
push
push
push
push
push
push
push
lea
push
call
add
mov
mov
add
fdiv
mov
add
testb
aad
shl
les
cltd
add
test
add
mov
add
cld
addr16
lods
sarl
rolb
push
mov
add
iret
add
lcall
push
push
push
push
push
push
push
call
nop
push
in
add
popa
add
pop
ret
add
out
arpl
roll
out
add
push
enter
std
add
push
xchg
test
loopne
add
negl
add
add
test
add
cmc
add
add
shl
jecxz
lods
hlt
jl
jno
aam
add
add
sub
pop
push
push
lea
push
lea
push
push
call
jo
add
loop
add
add
add
push
cltd
movsb
shl
mov
ret
nop
mov
lds
mov
mov
add
add
add
in
add
roll
cwtl
add
add
int3
add
add
jecxz
add
lret
mov
lcall
call
push
push
lea
push
push
push
push
call
jle
fcmove
loop
mov
mov
std
push
add
ficoml
add
enter
push
add
gs
mov
add
lea
add
aad
lahf
rclb
sub
pop
call
push
push
lea
push
push
lea
push
push
push
call
push
add
xchg
mov
add
add
shl
xchg
add
out
shlb
lcall
rcrl
pop
mov
lea
add
add
in
in
push
call
push
push
push
push
push
lea
push
call
mov
roll
stos
loope
jne
add
shlb
add
cmc
add
mov
in
add
ret
add
movb
in
in
test
addl
scas
push
add
incb
xlat
shr
pop
mov
cld
add
cmpsl
test
call
jmp
ret
push
push
push
push
push
push
push
call
jb
add
add
jnp
fldl
add
mov
pop
add
mov
lret
add
push
add
mov
hlt
test
lock
add
add
data16
push
lods
add
negb
lcall
inc
hlt
mov
push
push
lea
push
call
add
add
rcrb
scas
cli
fwait
add
pusha
cmc
jo
shrb
add
add
leave
add
je
add
fists
movl
jp
xchg
data16
in
add
add
roll
bound
add
sub
pop
add
push
lea
push
push
push
push
push
call
fbld
test
sti
add
xchg
add
mov
les
ljmp
fsubr
mov
mov
fnsave
stos
mov
aam
mov
pop
add
add
add
sub
pop
add
add
push
push
push
lea
push
push
call
lret
jno
jns
add
mov
add
mov
add
push
std
pushf
arpl
lods
add
add
add
xchg
loop
add
cli
clc
add
lds
pushf
add
lock
add
in
in
lcall
pop
add
xor
adc
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
add
shl
rolb
mov
fsubrp
add
add
mov
add
mov
insb
mov
add
push
push
add
fs
pop
lretw
popa
add
in
js
js
roll
mov
add
xchg
cmc
movsb
addb
ret
popa
add
in
incb
lcall
sbb
push
push
push
lea
push
push
push
push
call
cmc
mov
pushf
pop
add
add
push
in
xchg
add
shl
cld
int3
bound
add
add
add
jp
testb
add
add
mov
ja
mov
mov
xchg
add
fsubr
xchg
add
mov
add
add
add
sub
pop
add
push
push
rol
rol
sub
push
and
add
inc
sub
lea
pop
sub
xor
pop
push
lea
push
call
add
mov
add
jae
data16
out
lcall
add
stos
ror
add
pop
lea
add
push
cltd
nop
add
out
xchg
xchg
jecxz
jmp
add
stc
add
stos
jp
xchg
mov
jne
push
push
push
lea
push
push
call
add
cli
clc
add
rcrb
mov
movsl
pop
xchg
add
fisttps
add
out
mov
out
jge
sbb
popa
imul
int3
xlat
aam
je
add
add
cmc
loop
jecxz
jp
sub
pop
call
push
push
push
push
lea
push
push
push
push
push
push
call
push
pop
xchg
add
mov
in
pop
add
mov
pop
add
add
push
sub
movl
mov
mov
xchg
pop
add
add
mov
test
mov
pop
add
add
filds
add
add
enter
add
add
ja
add
lcall
inc
lock
push
lea
push
push
push
push
lea
push
call
add
fcmovnb
pop
jle
add
jns
jno
into
add
test
lods
sar
scas
stc
imul
add
add
jge
sub
pop
movl
push
lea
push
lea
push
call
js
xchg
rolb
fwait
add
in
cmpsl
pop
push
aam
xchg
add
add
pop
jno
out
mov
add
incb
jmp
xchg
add
lret
add
mov
add
addb
in
hlt
lcall
inc
call
push
push
push
call
fmul
jnp
loop
mov
push
fildll
add
pop
add
add
mov
in
aam
sahf
add
in
lods
sub
pop
push
push
push
lea
push
lea
push
call
mov
add
loopne
shll
lcall
jge
mov
ret
add
loope
add
fmuls
add
add
lock
pushl
pushl
push
push
push
push
lea
push
lea
push
push
call
repnz
pop
add
popa
add
add
insb
add
add
add
cwtl
imul
addl
repnz
add
add
add
sarl
jge
in
in
lcall
cmp
add
push
push
lea
push
lea
push
push
push
push
push
push
push
call
out
testb
pop
rolb
mov
lret
test
pop
add
add
fprem1
jns
add
xchg
lods
push
mov
jmp
jbe
in
pop
add
mov
out
add
test
add
add
test
xlat
clc
add
cld
add
test
xchg
shll
out
fldl
jmp
pop
sub
pop
pushl
push
push
push
push
push
push
push
call
fnsave
add
add
sarl
test
ja
jl
add
xchg
pushf
loopne
out
scas
outsl
mov
xchg
push
iret
popa
add
in
in
lcall
jne
call
push
push
shr
add
push
push
pop
add
add
not
sub
sub
pop
shl
pop
push
lea
push
push
call
enter
addl
add
jle
rolb
in
mov
mov
fs
add
push
pop
nop
mov
lock
cwtl
mov
mov
pushl
call
push
push
push
push
push
call
ret
mov
pop
pop
flds
add
test
add
mov
xchg
xorb
pop
jge
jmp
cmpsb
push
mov
mov
add
add
ror
jns
add
add
add
sub
pop
push
push
push
dec
push
or
not
add
add
sub
sub
pop
add
pop
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
add
add
loop
js
add
add
jb
lcall
aam
int3
add
inc
add
out
mov
add
add
add
xchg
imul
add
jle
add
jo
add
push
push
push
call
jecxz
add
add
push
test
add
jns
add
mov
mov
mov
add
test
xchg
mov
mov
jo
add
push
mov
subb
ficoml
add
add
add
nop
xchg
jp
enter
cltd
lea
lcall
add
push
push
push
lea
push
lea
push
call
add
jo
rorb
jecxz
add
shl
mov
cltd
add
lds
add
call
stos
mov
test
push
push
jnp
sub
pop
call
mov
push
lea
push
push
call
mov
mov
jb
mov
aam
scas
xchg
call
scas
add
add
add
in
add
add
les
popf
add
add
clc
add
repnz
bound
jl
add
add
pop
add
mov
add
add
xchg
popf
xchg
mov
hlt
pop
push
push
push
call
push
cwtl
add
imul
add
add
mov
add
add
add
add
pop
add
lcall
push
push
call
add
push
add
lret
add
aad
add
ficomps
add
add
mov
add
fdivs
mov
shlb
add
add
loope
stc
in
loopne
mov
pop
add
add
sbbl
add
mov
in
fadds
icebp
fildl
add
into
mov
scas
sahf
loop
add
jno
rolb
add
lcall
pop
hlt
push
push
push
push
call
add
mov
add
movsl
imul
add
aad
fs
add
add
add
mov
jl
test
mov
add
pop
in
push
push
push
call
jne
test
rcr
aam
add
jae
lods
fadds
push
jo
lret
add
scas
lcall
mov
push
sti
ficompl
clc
ljmp
add
add
add
imul
add
add
push
push
call
add
jno
test
js
loope
sti
xchg
mov
popl
add
add
cli
into
add
add
lods
sub
pop
add
push
push
push
push
push
call
int3
add
je
add
add
add
add
lahf
add
jecxz
in
addr16
sti
mov
mov
enter
pop
sahf
addr16
mov
in
in
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
lcall
mov
mov
xlat
add
add
pusha
mov
mov
jl
add
add
add
stos
add
add
aam
add
jl
add
add
lods
xchg
add
jl
sub
pop
xor
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
push
sti
jge
add
pop
jnp
jecxz
in
loope
add
add
push
mov
loope
mov
repnz
shl
push
add
lcall
les
push
push
push
call
add
push
mov
add
add
add
scas
mov
mov
addb
jne
add
add
scas
outsl
sub
pop
add
push
lea
push
push
push
lea
push
lea
push
lea
push
call
mov
add
jmp
mov
xlat
into
add
jnp
mov
popa
mov
add
cltd
mov
add
rolb
into
add
add
popl
cmc
add
jbe
icebp
sub
pop
push
mov
push
push
push
push
push
call
jmp
xchg
ljmp
add
add
test
push
popf
add
add
mov
add
pop
jmp
mov
add
mov
test
jnp
add
lock
xchg
test
js
pop
add
in
lock
xor
push
push
push
push
push
push
push
push
push
call
fs
add
add
mov
mov
pop
push
loop
loop
mov
add
sti
add
movsl
add
jmp
add
aam
jecxz
std
test
add
roll
pop
add
push
push
push
lea
push
push
call
fildl
cli
push
jge
add
add
add
arpl
add
xchg
shrb
add
stos
jnp
ficoml
jmp
add
pushf
jb
scas
rorl
add
add
enter
fwait
data16
decb
pop
addl
pop
push
push
lea
push
push
call
data16
add
jmp
add
out
call
add
add
div
add
clc
data16
add
xchg
add
mov
add
push
push
jecxz
push
cmpsb
push
add
add
add
add
addr16
out
int3
sub
pop
mov
xor
push
push
push
push
push
call
idivl
hlt
insb
add
push
cld
hlt
stos
pop
add
popf
add
lods
add
xchg
mov
xchg
pop
in
scas
add
add
add
jmp
sub
pop
push
push
lea
push
call
add
aam
add
cmpsb
add
lods
jnp
sti
add
push
add
mov
cmpb
lds
add
into
roll
pop
mov
xor
push
push
lea
push
push
push
push
push
lea
push
call
lcall
jmp
xchg
add
jne
in
int3
add
into
mov
pop
add
pushf
push
fistps
insb
in
jmp
add
mov
shl
push
arpl
out
mov
add
test
test
int3
push
add
add
add
fs
sub
pop
sub
push
push
lea
push
push
push
push
push
push
push
lea
push
call
pop
aam
add
xchg
faddl
xchg
add
pop
aam
jecxz
mov
xchg
jle
out
pusha
ror
jns
jb
shll
jecxz
add
out
jns
add
mov
ja
iret
add
scas
call
cli
jno
add
xchg
aad
cmpsb
add
add
sub
pop
pop
push
push
call
scas
lods
add
add
cltd
add
insb
mov
aad
add
mov
mov
add
add
orl
cltd
mov
lret
add
add
ror
add
push
test
add
add
add
add
add
push
xlat
fidivl
xchg
sub
pop
rep
push
push
push
push
call
add
add
movsb
roll
add
pop
pop
xchg
add
mov
pushf
ja
xchg
mov
movsb
add
enter
add
push
jecxz
add
add
jp
int3
fcmovnb
sahf
popf
mov
add
add
add
in
lock
pop
mov
push
push
push
lea
push
push
push
lea
push
call
into
jle
lds
jecxz
add
add
mov
movl
nop
mov
add
fiaddl
add
fiadds
rolb
fimull
pop
imul
stos
mov
test
add
add
add
cli
int3
fdivs
add
add
add
add
add
repnz
pop
add
push
push
push
push
call
loopne
xchg
mov
mov
cwtl
add
roll
push
xchg
call
cli
test
xchg
arpl
mov
mov
add
add
mov
add
jmp
in
jl
loop
arpl
jmp
fildl
orb
lock
add
push
push
push
push
push
push
push
push
push
call
add
pop
add
mov
add
xchg
add
cli
stos
xchg
sarb
add
push
jb
mov
in
mov
push
cmpsb
add
pop
test
lods
std
call
add
loop
popa
xchg
movsb
lcall
cltd
add
cld
fsts
jl
in
fcompl
ret
and
add
mov
shlb
xor
jo
or
fwait
push
call
pusha
push
jecxz
sti
les
arpl
mov
add
mov
mov
in
std
xchg
jo
in
out
pop
mov
roll
fisttpll
add
add
pop
add
fadds
cmpsb
rolb
xchg
add
add
add
sub
pop
mov
xor
push
push
call
xchg
icebp
push
add
outsl
add
add
lcall
add
mov
mov
add
add
hlt
rolb
xchg
scas
leave
add
mov
add
add
test
add
pop
mov
insb
lahf
push
add
aam
xchg
add
lcall
push
and
repnz
adc
xchg
or
imul
push
push
push
call
cmc
add
push
add
fs
in
leave
add
jge
xchg
jnp
mov
add
jmp
jge
lods
int
sub
pop
mov
push
push
push
call
leave
add
add
push
add
push
aam
add
add
xlat
stos
add
sahf
imul
pop
add
push
add
xchg
scas
mov
add
leave
add
add
popf
add
jno
add
call
pop
xor
push
push
call
mov
add
add
add
mov
in
add
add
add
add
jb
pusha
push
mov
sub
pop
add
push
push
lea
push
push
push
call
mov
jnp
add
pop
add
imul
mov
pop
mov
add
add
loopne
add
test
cmc
add
cli
add
jb
add
adcl
in
in
pop
add
push
lea
add
inc
ror
pop
add
mov
push
push
shr
ror
push
or
inc
add
rol
sub
shl
sub
sub
not
pop
inc
not
pop
push
push
call
add
sahf
add
into
clc
aad
jnp
add
fisttps
popl
imul
add
mov
jbe
sub
pop
pushl
push
lea
push
lea
push
push
push
push
call
aam
repnz
add
add
add
movsl
push
add
enter
add
fcoml
test
add
out
std
xchg
test
mov
out
add
cwtl
mov
add
cmpl
xlat
call
mov
add
lret
sub
pop
call
push
push
push
lea
push
sub
add
add
sub
sub
sub
sub
inc
add
pop
sub
shr
inc
pop
push
push
push
push
push
push
push
push
call
clc
add
stos
push
faddl
add
push
sti
mov
stos
imul
push
add
add
add
xchg
lods
repnz
jmp
out
sahf
add
out
lret
in
loopne
push
push
shr
sub
sub
add
pop
push
push
push
push
call
scas
add
fcmovnu
add
mov
outsl
xchg
movb
add
xchg
add
add
add
mov
add
add
iret
into
add
icebp
add
add
fildl
xchg
add
add
add
cwtl
lds
arpl
jle
add
mov
add
sub
pop
call
push
add
rol
sub
pop
mov
push
push
sub
pop
push
push
push
push
push
push
lea
push
call
add
add
push
stc
add
add
enter
add
cwtl
rcrl
add
add
xlat
add
mov
sub
pop
mov
push
push
push
push
push
call
stc
xchg
add
pop
add
mov
push
mov
in
lcall
addl
in
addb
mov
rolb
loope
add
add
add
add
add
clc
add
xchg
fsubrs
into
jl
add
add
stos
sti
lret
loop
enter
lcall
pop
in
push
dec
sub
rol
pop
add
push
xor
not
rol
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
out
test
scas
out
loope
leave
add
enter
jne
mov
mov
add
out
jmp
add
mov
jle
xchg
add
in
mov
pop
mov
mov
add
mov
std
fsubrl
xchg
add
jne
cld
jae
add
sub
pop
mov
xor
push
ror
inc
xor
pop
add
push
sub
dec
xor
pop
push
push
not
sub
xor
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
lret
popa
add
pop
add
add
loop
add
add
sarb
mov
pop
add
pop
add
add
add
mov
jns
add
add
fldl
add
xchg
add
add
lds
add
add
test
add
sbbl
mov
add
add
scas
cmpsl
mov
mov
out
sub
pop
xor
push
push
push
push
lea
push
push
call
add
add
jns
mov
lods
push
xchg
call
mov
test
jno
add
add
imul
mov
add
add
aad
push
add
push
mov
add
push
add
add
icebp
lahf
out
mov
pusha
imul
mov
add
push
ror
pop
add
pop
push
shl
rol
shl
dec
pop
mov
push
push
push
lea
push
push
push
push
push
call
add
add
in
push
pop
mov
cmc
jnp
add
test
int3
jmp
xchg
add
add
push
iret
push
pop
fcmovu
add
icebp
test
movsl
mov
lcall
or
push
push
push
call
add
add
movsl
int3
add
add
andb
mov
push
add
mov
push
add
bound
ret
add
sub
pop
add
push
add
pop
rep
push
xor
ror
rol
rol
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
rolb
add
add
jl
add
add
mov
add
add
fwait
out
add
pop
shll
ljmp
int
mov
lret
bound
push
fs
add
cli
mov
mov
add
add
add
lcall
or
push
push
lea
push
push
lea
push
push
call
xchg
mov
add
icebp
add
add
mov
jl
add
in
add
push
fcompl
add
stc
add
test
lcall
les
add
pop
or
je
push
xor
pop
mov
xor
push
pop
mov
push
push
push
push
lea
push
push
push
call
cwtl
mov
mov
mov
ror
stos
add
mov
add
add
add
fsub
out
add
int
cmc
add
cltd
mov
lret
jne
add
movsb
in
stos
test
jl
pop
push
loope
add
les
ret
out
lret
stc
add
call
xor
push
lea
push
push
push
call
hlt
pop
cltd
add
push
add
push
add
push
add
add
add
rolb
add
cmpsb
mov
xchg
mov
pop
bound
xchg
lock
add
push
push
push
push
push
push
lea
push
push
push
push
call
stc
add
mov
vpsubq
add
pop
in
loopne
mov
hlt
jl
stc
add
cli
ret
push
fistpll
jmp
add
add
lcall
repnz
add
ror
xor
rol
pop
add
push
push
lea
push
push
call
out
lock
fldl
neg
rol
push
add
call
add
add
add
add
icebp
add
xchg
mov
mov
jbe
add
cmpsl
add
jle
add
jl
lods
je
out
add
xchg
bound
xorl
hlt
pop
mov
push
push
lea
push
lea
push
call
jno
jns
bound
lcall
mov
stos
aad
cltd
add
out
in
and
mov
mov
fdivp
add
cwtl
add
pusha
pop
add
xlat
cmpsl
scas
in
add
mov
int
in
enter
mov
add
loope
sub
pop
xor
push
lea
push
push
lea
push
push
push
push
call
add
addl
pop
enter
add
js
repnz
add
iret
add
jmp
push
add
cmpsl
add
mov
add
mov
add
lds
add
cld
sub
pop
add
push
xor
sub
ror
add
pop
add
push
inc
shl
dec
pop
pop
push
shl
sub
ror
pop
rep
push
push
call
pusha
pop
jle
cmpl
mov
add
cmpl
add
fildl
xchg
add
popf
jbe
pop
mov
add
add
xlat
add
std
jmp
push
push
clc
push
mov
popa
fadds
dec
sub
adc
push
push
push
push
push
push
push
push
call
mov
stos
nop
add
out
mov
add
add
add
xchg
icebp
xchg
lea
add
out
movsb
push
jnp
fdivr
mov
jnp
pop
insb
mov
pop
add
add
lcall
leave
je
push
lea
push
lea
push
push
push
push
push
push
call
pop
cmpl
add
lahf
pop
add
add
jl
roll
add
loope
nop
add
lods
mov
loope
mov
decb
roll
int
sti
lds
mov
mov
out
push
jns
add
jno
add
lods
fiaddl
repz
push
lea
push
push
push
call
int3
sahf
add
add
add
add
pop
imul
cwtl
sarl
fabs
add
mov
in
in
lcall
sub
push
call
add
add
lods
lret
arpl
lcall
add
mov
testb
xchg
add
pop
out
aam
add
add
nop
xorb
add
add
add
les
lcall
movb
add
push
pop
rep
push
push
push
push
lea
push
push
lea
push
push
push
call
jno
add
adcb
jnp
add
test
pushf
imul
add
add
int
roll
add
add
jne
xchg
jecxz
fisubl
roll
jbe
hlt
mov
lcall
push
push
dec
push
or
not
add
rol
xor
sub
lea
inc
pop
sub
pop
push
lea
push
push
push
call
out
add
f2xm1
jmp
cwtl
pushf
add
call
add
insb
loopne
add
test
je
icebp
mov
enter
in
lock
lcall
push
ror
sub
pop
mov
push
dec
add
dec
xor
pop
mov
push
push
push
push
push
push
push
call
add
add
add
add
add
add
mov
enter
add
xchg
jae
into
pop
add
je
movl
cmc
mov
pop
loopne
test
in
add
fdivrs
in
in
lcall
inc
and
push
sub
pop
jmp
push
push
push
push
push
push
push
push
call
add
add
mov
rcr
xchg
add
pop
jnp
jnp
pop
add
add
mov
mov
add
add
mov
add
mov
aad
test
sub
pop
push
push
xor
add
pop
mov
push
push
push
push
lea
push
push
push
push
call
arpl
stos
xchg
rcr
add
add
add
add
add
call
cmpsl
add
mov
repnz
hlt
pop
mov
aad
ljmp
mov
lcall
cld
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
test
loope
xlat
pop
loop
add
add
mov
xchg
add
add
add
test
icebp
add
popf
add
add
pop
jecxz
add
test
add
rcrb
jle
data16
xchg
add
mov
js
bound
add
les
add
add
fcomps
push
push
add
shl
pop
push
push
add
lea
add
pop
mov
push
add
sub
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
add
int3
leave
add
in
insb
sti
add
add
add
clc
add
add
enter
test
add
scas
cli
cmpsl
add
jno
jge
pop
iret
aad
pushf
into
adc
addb
imul
fistpl
add
push
add
stos
add
cld
and
out
movsb
insb
roll
rolb
sub
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
lods
rolb
add
jnp
push
add
add
fiaddl
clc
arpl
add
cwtl
enter
rcr
lea
fdivr
lcall
push
lea
push
call
mov
pop
jb
mul
int3
test
mov
push
add
add
add
push
bound
test
int
xchg
stc
pop
jno
push
add
add
add
iret
add
add
mov
add
add
add
sub
pop
leave
push
push
push
push
push
push
push
lea
push
push
push
call
test
negl
in
add
je
mov
add
pop
push
cmc
add
push
add
in
call
bound
pop
fwait
add
ret
add
popa
push
aad
add
add
addb
fildl
add
add
clc
jae
mov
loope
pushf
sub
pop
ret
push
rol
not
lea
pop
push
push
add
inc
ror
pop
mov
add
push
lea
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
add
out
loop
cli
add
jb
addr16
add
xchg
cld
aam
pop
ljmp
jmp
add
mov
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
imul
pop
add
movsb
add
add
mov
test
ljmp
mov
add
add
pushf
ficoms
pop
aad
in
loopne
lcall
movl
push
inc
sub
pop
addl
push
lea
pop
test
je
push
push
push
push
lea
push
push
push
call
in
enter
mov
add
jmpw
gs
test
mov
add
scas
out
add
add
add
fiadds
mov
add
add
cli
jb
add
rolb
outsl
add
add
data16
add
add
fmul
mov
sub
pop
mov
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
jmp
imul
movsl
add
push
shl
add
pop
add
imul
cld
bound
add
mov
mov
leave
mov
mov
popa
int3
in
mov
jae
loope
mov
add
add
add
mov
add
add
mov
add
fcompl
pop
push
xor
pop
pop
leave
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
add
add
add
pop
in
scas
out
pop
cwtl
add
add
mov
fidivrl
incb
push
js
mov
pop
std
add
mov
add
mov
in
fdivr
lcall
add
push
xor
shl
add
shl
pop
push
mov
push
push
push
push
push
push
push
lea
push
push
call
mov
xchg
shrl
aam
arpl
mov
add
fdivs
mov
test
add
add
enter
jnp
pushf
cli
add
add
fnstsw
in
fdivr
lcall
cld
push
push
push
call
mov
jl
mov
add
add
mov
andb
xchg
add
add
lret
push
add
add
add
add
add
mov
movsl
add
in
xchg
mulb
fistpll
add
add
add
popa
jbe
fadds
add
pop
push
push
add
pop
push
push
push
lea
not
pop
push
testl
push
push
push
push
push
push
push
push
lea
push
call
test
add
iret
popf
cli
add
ja
out
add
push
add
lret
mov
scas
push
add
add
add
add
add
sti
push
sub
pop
addl
push
lea
push
call
iret
ljmp
loopne
add
push
mov
add
mov
add
lock
mov
mov
cltd
mov
jle
add
nop
test
pop
sub
pop
push
call
push
add
sub
pop
mov
pushl
push
sub
shr
rol
pop
push
push
push
push
call
push
mov
add
mov
mov
hlt
popa
add
pop
add
cltd
ret
out
mov
mov
add
add
cli
add
xchg
mov
hlt
lcall
add
lea
push
push
push
call
cmpsb
add
shll
add
mov
incb
add
add
add
mov
add
add
loope
add
add
jl
subl
mov
add
pop
add
js
add
mov
add
pop
addr16
pop
call
push
rol
pop
cmpl
jne
pop
push
xor
inc
pop
pop
push
rol
pop
pop
push
lea
push
push
call
ljmp
call
int3
add
add
clc
add
push
mov
cld
je
xchg
xchg
xchg
add
pop
mov
add
xorl
sub
pop
pop
push
push
push
push
push
push
push
push
call
mov
add
jmp
hlt
add
mov
test
add
lret
mov
push
hlt
roll
mov
add
add
pop
add
add
add
sub
pop
leave
ret
push
sub
shl
rol
pop
push
push
not
pop
mov
push
push
push
push
push
call
loop
pop
in
add
jecxz
roll
icebp
flds
add
push
sahf
mov
shr
arpl
fldl
ret
enter
add
test
add
fildl
roll
in
in
lcall
cld
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
test
enter
add
leave
mov
add
mov
mov
imul
lods
fwait
scas
out
nop
mov
mov
fcomps
push
push
call
fstpl
add
add
add
loopne
out
fstp
add
cmpsl
add
add
xchg
mov
mov
xchg
pusha
addl
fwait
xchg
add
pop
add
mov
push
push
push
push
call
mov
add
add
add
movsl
add
aad
add
jae
jb
nop
imul
stc
mov
hlt
lcall
push
lea
push
lea
push
push
lea
push
call
outsl
add
popf
add
mov
insb
mov
add
mov
out
fildll
ja
out
xchg
mov
mov
int
xchg
add
movl
push
push
add
lea
inc
pop
call
push
push
push
lea
push
call
test
add
mov
mov
add
add
mov
pop
in
add
add
nop
jbe
add
jne
popf
add
fildll
in
mov
pop
call
subl
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
insb
scas
add
jne
lret
in
js
repnz
mov
add
xchg
mov
add
add
jns
pop
jnp
mov
mov
jbe
add
nop
add
lds
addb
roll
add
jae
add
push
add
add
popf
add
jae
in
fcomps
jge
add
test
call
push
call
fcmove
fwait
push
leave
add
insb
mov
jno
add
stc
add
shll
mov
addr16
js
add
jns
jp
pop
add
add
add
mov
mov
mov
cli
lds
ja
cmpb
jo
jmp
into
stc
call
add
lcall
pop
push
push
lea
push
push
call
add
add
add
xchg
test
outsl
xchg
add
mov
mov
push
jecxz
cmpsl
xchg
lahf
add
addr16
cltd
imul
out
loop
mov
jl
mov
mov
fadds
mov
int
add
add
arpl
addb
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
mov
imul
add
add
gs
mov
add
add
adc
add
add
push
add
mov
shrb
push
out
mov
add
push
js
add
add
cmpsl
cmc
sub
pop
pop
leave
push
lea
push
call
add
xchg
movsb
add
out
xlat
mov
add
fiadds
scas
jb
leave
add
add
sti
mov
xchg
xchg
lock
xchg
mov
pop
clc
mov
mov
outsl
pop
rcl
movsb
sahf
add
pop
add
sti
sub
pop
ret
push
push
push
push
push
lea
push
push
push
push
lea
push
call
add
jo
int
incb
mov
movsb
push
add
jbe
add
test
lahf
into
add
add
fstpt
pop
mov
in
add
add
pop
push
cwtl
roll
popl
pop
cld
add
iret
mov
cmpsl
add
pusha
add
add
movsl
add
jbe
subb
sub
pop
mov
push
lea
push
push
push
push
lea
push
push
push
call
add
add
sahf
mov
jae
stos
mov
lahf
jmp
mov
roll
jp
jle
leave
nop
mov
lahf
add
add
insb
push
add
add
add
add
add
add
out
add
cwtl
popa
ficoms
mov
mov
in
loopne
lcall
cld
push
push
not
pop
push
push
push
push
push
lea
push
push
push
push
call
mov
imul
add
movl
fwait
add
cmpsb
pop
add
stos
add
in
add
mov
fildl
sahf
add
pop
add
add
xorb
pop
sub
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
add
xchg
filds
add
lds
add
add
add
add
mov
roll
ljmp
push
add
add
mov
jae
add
add
ljmp
loopne
pop
add
pop
mov
add
les
lcall
push
add
pop
mov
lea
push
push
push
call
pop
stc
test
add
xchg
add
add
add
pop
roll
into
fnsave
add
popf
in
add
pop
add
mov
out
add
add
add
pop
cld
add
js
cmpsl
out
sub
pop
sub
push
push
push
push
push
push
push
push
push
push
call
add
add
fwait
shrb
loope
add
out
aam
bnd
add
fs
add
mov
out
add
jno
add
mov
mov
lahf
add
cld
mov
rolb
jb
add
add
lcall
add
mov
mov
push
push
call
jo
sahf
into
push
add
add
in
add
xchg
add
push
add
stos
xchg
pop
mov
std
add
stos
add
push
sub
pop
shr
push
lea
push
lea
push
push
push
call
add
aad
add
add
bnd
xchg
lods
aam
push
add
mov
aad
in
jns
scas
imul
out
cmpsb
add
lock
add
inc
or
not
dec
pop
mov
push
shl
pop
mov
push
dec
xor
pop
add
push
push
push
push
lea
push
call
loope
xlat
fnstsw
incb
into
push
add
add
add
mov
push
mov
add
nop
popf
add
mov
les
pop
bound
add
fwait
out
int3
iret
push
aam
add
fiadds
push
add
fadd
add
add
add
lcall
add
add
xchg
sub
pop
add
push
push
push
push
push
push
call
add
add
add
cwtl
call
add
lods
add
bound
add
sahf
add
add
push
add
jmp
push
add
mov
in
add
jl
add
lds
lcall
inc
add
add
mov
push
mov
push
push
lea
push
push
push
push
push
call
imul
add
leave
mov
add
add
add
add
fadd
add
aad
les
mov
ret
loope
mov
repnz
jmp
lods
clc
data16
cli
lods
mov
mov
jmp
into
iret
jno
movb
xchg
add
sub
pop
mov
push
rol
xor
add
pop
cmp
jne
push
sub
pop
cmp
jne
push
dec
sub
add
shr
pop
mov
push
shr
xor
inc
xor
pop
movl
jmp
push
sub
inc
rol
pop
mov
push
lea
push
push
call
mov
mov
lea
add
mov
movsl
filds
add
rcrb
jp
out
add
lea
add
add
add
xchg
pop
out
jae
mov
add
lahf
addb
js
mov
jle
mov
movsb
lahf
pop
lahf
loopne
lahf
aam
pop
add
in
hlt
lcall
push
or
call
clc
loope
add
scas
cmc
xchg
add
push
jecxz
add
mov
push
add
ljmp
shlb
add
nop
andb
jno
mov
in
clc
pop
sub
jne
push
push
push
push
push
push
lea
push
push
push
call
add
in
add
add
in
pop
xchg
clc
add
movl
mov
add
add
add
mov
add
add
mov
mov
fdivr
lcall
inc
adc
cli
rol
pop
movl
push
push
push
push
call
testb
add
mov
mov
pusha
add
lds
sti
mov
jns
fldl
mov
add
pusha
push
test
add
std
add
jo
leave
test
add
add
stos
pusha
aad
fldl
lahf
or
add
xor
add
pop
mov
push
not
pop
cmp
jne
push
shr
pop
mov
push
push
lea
push
lea
push
call
pop
add
push
mov
movsl
add
add
mov
add
mov
add
add
add
jp
mov
push
add
xchg
cltd
movsb
mov
push
pop
add
ljmp
sub
pop
movl
push
push
call
xchg
add
ffree
out
jns
ficomps
push
add
add
stc
add
push
hlt
sar
add
add
add
cmpsl
lds
sub
pop
jmp
push
not
sub
pop
mov
push
ror
sub
shl
pop
cmpw
jne
push
lea
shr
pop
mov
movl
push
push
lea
push
push
push
lea
push
call
add
add
push
fldl
pop
jecxz
int3
add
add
in
push
add
add
in
loopne
jmp
add
clc
in
movl
roll
add
jo
jle
add
add
add
call
add
push
pop
pushl
pop
push
sub
pop
mov
mov
push
ror
rol
pop
mov
push
push
dec
add
shl
push
sub
add
not
rol
lea
sub
xor
inc
dec
pop
pop
push
ror
rol
sub
inc
pop
push
call
push
sub
dec
pop
cmpl
je
push
push
add
push
push
pop
add
add
rol
inc
sub
sub
pop
shl
not
not
not
pop
push
push
call
jmp
add
lcall
lods
cltd
pop
jne
add
jp
pop
mov
shlb
add
in
shll
jns
jne
add
lcall
push
push
push
push
lea
push
call
lcall
test
add
xlat
adc
add
add
add
int3
jnp
mov
leave
push
out
faddl
pop
add
push
add
xorl
jo
add
add
lcall
add
mov
mov
dec
push
push
push
push
lea
push
call
loop
jge
enter
add
add
xchg
jle
jb
add
shlb
add
out
jp
sti
fiaddl
imul
lock
mov
ret
movsl
xbegin
js
add
jl
add
sti
add
xchg
test
add
test
bound
add
add
stos
shll
add
js
int3
fldz
ret
adc
mov
add
shl
push
push
pop
add
xor
inc
sub
dec
rol
shr
inc
pop
add
xor
shl
pop
push
shl
shr
pop
push
call
push
push
push
push
push
lea
push
lea
push
push
call
addb
add
add
mov
add
fwait
mov
pop
lock
mov
push
add
je
add
sti
lahf
add
add
add
sub
pop
cmpl
je
push
push
not
push
sub
add
ror
sub
pop
add
add
inc
shl
pop
push
push
push
call
cmpsb
enter
pop
clc
add
add
mov
mov
or
pushf
add
add
add
add
mov
fs
ja
out
mov
xchg
mov
push
mov
xlat
mov
mov
in
hlt
lcall
call
push
push
push
lea
push
push
push
push
push
push
push
call
add
add
lret
cmc
add
add
cmpsb
jecxz
insb
lock
adcl
pop
scas
test
pop
arpl
roll
jnp
cltd
mov
add
push
sub
pop
cmpl
je
push
push
dec
push
or
inc
add
sub
lea
pop
rol
pop
push
ror
sub
sub
shr
pop
push
push
push
lea
push
push
push
call
mov
cltd
sbbb
add
add
add
fldl
pop
movsl
sti
in
loop
add
mov
add
mov
mov
scas
add
in
in
lcall
dec
xor
add
pop
cmpl
je
push
push
dec
dec
sub
push
sub
add
add
add
add
shl
sub
dec
sub
add
xor
pop
shr
pop
push
push
push
push
push
push
push
push
push
push
call
add
add
mov
add
add
add
add
add
add
jbe
mov
mov
add
stos
add
xlat
mov
pop
push
push
push
call
ja
add
ja
add
add
add
jbe
add
add
jp
add
add
mov
add
push
add
xor
add
jmp
in
clc
pop
call
cmpl
je
push
push
rol
xor
shr
push
push
pop
add
shr
lea
sub
add
add
xor
pop
not
inc
pop
push
shr
ror
pop
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
mov
add
std
in
jmp
add
lods
loop
insb
add
jb
jmp
add
lahf
bnd
les
in
lcall
shlb
add
push
not
sub
pop
cmpl
je
push
push
sub
push
xor
add
not
sub
sub
sub
shl
ror
pop
ror
ror
shr
pop
push
add
pop
push
call
push
push
lea
push
push
push
push
push
push
push
call
add
mov
add
outsl
fwait
jl
jns
iret
add
add
jae
fstpt
add
add
xchg
add
add
jne
cmc
stc
lods
push
clc
cmpsl
xchg
rolb
hlt
ficomps
addl
add
fwait
sahf
incb
mov
fs
add
fistpll
lds
add
lods
ror
popa
sub
pop
cmpl
je
push
push
shr
push
push
pop
add
shr
sub
xor
sub
sub
shl
shr
shr
pop
add
pop
push
push
push
call
hlt
test
cli
jne
mov
push
add
in
movsb
add
mov
add
mov
add
add
in
aad
add
xchg
xchg
add
add
cmpl
mov
jo
mulb
int
add
add
sub
pop
push
call
push
push
push
push
lea
push
lea
push
push
call
outsl
insb
imul
in
add
jo
mov
lock
push
push
out
pop
fdivr
mov
cmc
cld
jo
add
popa
add
fiadds
fnstenv
out
sub
pop
cmpl
je
push
push
add
xor
push
or
inc
add
rol
sub
shr
sub
lea
ror
sub
pop
sub
shr
inc
pop
push
sub
pop
push
push
push
lea
push
call
lods
add
add
in
xchg
cld
mulb
add
mov
lods
add
shl
add
leave
add
add
push
stc
jmp
xchg
mov
filds
add
cltd
jle
add
roll
add
pop
stos
add
mov
test
add
xchg
add
in
mov
add
cmc
add
stc
add
in
hlt
pop
call
push
xor
rol
shl
pop
cmpl
je
push
push
dec
rol
dec
add
push
or
not
add
rol
sub
shr
pop
lea
pop
push
ror
sub
lea
sub
pop
push
call
push
push
push
call
add
repnz
mov
add
nop
add
loope
jae
add
sahf
mov
add
imul
popa
add
add
add
add
mov
cmpsl
add
add
push
add
add
cmc
scas
pop
sub
pop
cmpl
je
push
push
lea
sub
shl
push
xor
add
add
add
shl
sub
sub
add
xor
pop
dec
pop
push
ror
pop
push
push
shr
shr
pop
call
push
pop
cmpl
je
push
push
push
or
inc
add
xor
sub
add
add
pop
inc
pop
push
sub
add
pop
push
push
not
add
pop
call
push
push
lea
push
call
fcomp
mov
add
jecxz
mov
push
jbe
add
add
cltd
add
andb
add
rolb
add
add
cwtl
movsb
jl
cmc
imul
int
mov
in
rolb
push
fiadds
mov
add
add
add
filds
add
int3
mov
pop
cmpl
jne
push
sub
pop
mov
push
push
push
lea
push
push
push
push
call
add
cld
addr16
roll
xchg
pop
mov
add
mov
jge
cld
mov
cmc
add
xchg
sub
pop
movl
push
xor
rol
dec
pop
jmp
xor
push
rol
sub
pop
pop
pop
push
sub
rol
pop
pop
push
push
lea
push
push
call
jl
cltd
pop
add
pop
add
add
add
add
lods
add
add
mov
iret
add
add
mov
pop
mov
les
cmc
int
xchg
mov
add
mov
pop
repnz
push
add
lret
fstl
lcall
push
rol
inc
pop
leave
push
push
push
lea
push
push
lea
push
call
cmp
xchg
mov
lods
xlat
add
add
stc
mov
add
add
add
mov
clc
push
faddl
mov
stos
add
cli
xchg
loope
movsb
fidivl
enter
cltd
jbe
add
fadds
add
or
push
lea
push
lea
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
subl
mov
insb
push
add
out
pop
test
ja
add
leave
add
std
mov
icebp
outsl
jmp
push
add
add
icebp
jecxz
scas
popf
sub
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
mov
lret
add
add
add
jbe
mov
popl
loop
fadds
add
fs
push
add
push
std
out
add
cld
push
add
mov
in
push
add
mov
repnz
add
xlat
add
add
add
add
imul
cmpsl
shll
loopne
mov
push
push
lea
push
push
lea
push
call
mov
clc
mov
add
roll
add
fisttpl
add
stos
out
xchg
xchg
add
add
rcr
pushf
pop
addr16
add
add
sub
pop
add
push
ror
not
pop
cmpl
jne
push
push
push
push
pop
add
inc
sub
sub
shl
pop
rol
pop
push
sub
ror
shl
pop
pushl
call
push
lea
push
push
push
push
lea
push
push
push
call
add
rolb
mov
pop
test
lods
add
xchg
add
add
popf
add
add
stc
sti
rolb
cmpsl
faddl
add
add
je
mov
add
pop
out
push
imul
call
push
inc
inc
pop
jmp
push
shl
add
not
pop
cmpl
je
push
sub
ror
pop
cmpl
jne
push
not
dec
shl
add
pop
mov
call
push
push
xor
push
or
inc
add
lea
sub
ror
rol
pop
shl
sub
pop
push
lea
push
push
push
push
call
add
jne
pop
jae
add
mov
cmpsb
add
shll
enter
addr16
pusha
add
jge
leave
xchg
ficompl
jecxz
sar
test
add
scas
add
push
push
ror
jmp
jl
cmpsl
call
add
pop
add
xchg
add
add
add
lcall
jne
push
dec
rol
pop
call
lea
push
inc
pop
push
push
rol
inc
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
and
jae
jae
add
add
add
jge
push
fisubrs
add
sbbl
cmpb
fiadds
push
add
add
add
stos
add
sarb
in
in
push
push
push
push
call
pop
stc
test
xchg
nop
cmc
leave
mov
fchs
add
jbe
add
add
jp
lock
arpl
clc
jnp
add
mov
cwtl
add
add
in
hlt
pop
call
push
push
push
push
push
push
lea
push
call
test
add
add
test
add
add
jp
add
out
mov
out
add
out
add
add
add
push
loopne
pushf
add
mov
add
clc
fldl
mov
in
lcall
jmp
push
add
xor
sub
pop
cmpl
jne
push
push
push
xor
add
rol
rol
inc
inc
sub
add
sub
lea
pop
sub
shl
pop
push
xor
shl
xor
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
int
pop
add
add
mov
add
add
add
movsl
lds
add
add
sub
pop
call
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
mov
popf
mov
add
fnstsw
add
mov
leave
popl
add
add
pushf
add
add
mov
mov
sub
pop
push
push
push
push
push
lea
push
call
nop
add
lock
add
lock
mov
cmpsb
add
add
add
add
push
mov
mov
mov
sub
pop
call
jmp
push
rol
pop
cmpl
jne
mov
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
cmpsb
add
enter
push
scas
push
add
bound
enter
add
addl
mov
add
sbbb
repnz
in
xchg
popa
lahf
add
push
xchg
add
call
add
add
pop
adc
dec
push
call
test
add
add
add
test
mov
mov
mov
fstl
mov
in
sub
pop
push
push
push
ror
add
lea
push
or
not
add
rol
sub
lea
sub
pop
rol
xor
pop
push
pop
pushl
call
push
ror
shr
add
pop
call
push
push
sub
not
push
sub
add
sub
sub
shr
sub
shl
pop
ror
not
pop
push
lea
add
sub
pop
pushl
push
lea
push
lea
push
push
lea
push
push
push
push
call
loopne
add
jo
add
mov
xchg
scas
sti
fisubrl
add
lret
fwait
enter
test
filds
add
in
into
add
testl
add
cltd
stos
scas
clc
bound
loopne
mov
sub
pop
call
push
lea
pop
call
push
push
shl
push
sub
add
shr
sub
rol
inc
ror
pop
ror
lea
not
add
pop
push
xor
pop
pushl
call
push
shl
shl
shl
pop
call
push
push
push
or
inc
add
rol
inc
sub
lea
sub
sub
rol
pop
not
pop
push
add
pop
pushl
call
push
shl
dec
add
inc
pop
call
push
push
sub
shl
push
push
pop
add
lea
add
inc
sub
dec
pop
xor
pop
push
push
lea
push
push
push
push
call
jbe
jbe
add
add
cmc
add
add
cld
shll
xchg
pusha
add
fnsave
add
jbe
data16
add
add
mov
sub
pop
pushl
push
push
push
lea
push
push
push
call
jne
call
popf
add
icebp
sbb
shl
mov
into
add
mov
add
add
add
stos
mov
popf
add
mov
add
xchg
mov
icebp
push
add
add
bound
add
lcall
xchg
and
add
shrb
mov
rol
xor
push
and
add
lea
xor
sub
dec
pop
ror
add
shl
pop
push
sub
ror
pop
pushl
push
push
lea
push
lea
push
call
rol
add
xchg
enter
add
add
stos
out
movsb
add
fwait
add
cltd
add
fxch
enter
mov
nop
push
add
mov
std
ja
cmpsl
stc
add
jno
mov
rcll
icebp
add
add
fcmovne
pusha
add
lret
lcall
add
mov
mov
les
mov
sub
pop
call
call
push
push
rol
push
push
pop
add
sub
dec
sub
shl
inc
add
xor
pop
sub
add
shr
pop
push
ror
rol
inc
pop
pushl
push
not
shr
ror
pop
call
push
pop
call
push
push
dec
rol
push
xor
add
not
sub
sub
not
inc
shl
pop
not
lea
pop
push
push
lea
push
lea
push
call
rcrb
test
add
out
jbe
enter
xchg
add
lock
scas
push
jno
icebp
add
push
add
add
fldl
adcb
add
add
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
stos
pop
jge
mov
jl
cwtl
push
pop
add
add
push
pop
clc
hlt
add
add
push
xchg
outsl
add
jb
mov
gs
xchg
loope
mov
mov
add
jle
mov
push
pop
ret
sub
pop
call
push
shr
sub
add
shr
pop
call
push
push
lea
push
xor
add
add
shr
dec
sub
sub
lea
pop
shr
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
rcl
mov
jo
rolb
push
movb
push
fmulp
push
xchg
stos
add
add
add
add
mov
xchg
add
stc
xchg
add
add
mov
add
add
cltd
pop
mov
aam
sarb
add
xchg
idiv
add
jle
add
in
fcomps
jne
push
push
push
lea
push
call
add
mov
fwait
xchg
mov
add
add
cltd
xchg
mov
out
mov
je
fsubrl
add
add
aad
in
cltd
jbe
int
popa
add
add
mov
jle
call
out
sub
pop
call
push
add
shl
ror
sub
pop
call
push
push
add
add
sub
shl
push
and
add
add
inc
add
sub
sub
add
not
shl
pop
shr
not
pop
push
not
lea
pop
pushl
push
lea
push
push
lea
push
push
push
call
add
add
add
add
jbe
out
add
add
mov
test
add
rolb
in
call
add
push
push
lea
push
lea
push
push
push
lea
push
call
mov
stos
scas
add
mov
scas
mov
jnp
mov
push
push
add
into
mov
sub
add
push
add
loop
mov
cltd
out
add
aam
mov
mov
add
xchg
fstps
pop
add
out
movb
add
repnz
popf
sbbb
add
sub
pop
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
fsubr
xchg
pusha
pop
call
jle
mov
add
movl
add
cmpsl
cmpsl
popa
jp
add
fcoms
add
scas
lret
xlat
filds
add
add
mov
scas
fwait
add
push
mov
test
mov
mov
shrb
movb
push
xor
add
lea
lea
lea
sub
ror
lea
pop
sub
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
call
enter
add
add
lea
pop
add
add
addb
add
add
add
add
add
add
aam
push
add
mov
arpl
pushf
add
in
out
lds
mov
xchg
add
nop
add
push
sub
pop
pushl
call
push
shr
shl
pop
call
push
push
rol
add
push
xor
add
rol
lea
sub
sub
shl
sub
ror
pop
sub
ror
sub
pop
push
ror
sub
pop
pushl
call
push
push
push
lea
push
push
push
lea
push
push
push
push
call
xchg
jnp
add
mov
leave
stos
add
fwait
sahf
add
jae
sahf
push
push
testl
add
lods
lock
add
rorl
lcall
shrb
mov
stos
push
ror
push
push
pop
add
xor
sub
add
sub
lea
pop
not
pop
push
sub
pop
pushl
push
add
pop
call
push
not
inc
shr
pop
call
push
push
lea
push
lea
push
call
add
add
jns
add
jp
jp
pop
fnstenv
mov
test
add
add
mov
shrb
insb
repnz
loop
in
lcall
jbe
push
fxch
add
mov
adcl
add
lock
lcall
dec
jne
push
push
push
lea
push
push
push
push
lea
push
push
call
repnz
add
add
add
add
add
mov
pop
add
add
lock
repnz
out
jge
push
popa
data16
in
fcompl
imul
daa
mov
push
shl
xor
ror
inc
push
sub
add
inc
shl
sub
add
pop
pop
push
push
push
lea
push
push
push
lea
push
call
shrb
add
cwtl
lcall
enter
in
scas
std
out
add
addl
cmc
xchg
lock
sti
add
sahf
mov
pop
pushl
call
push
sub
sub
shl
add
pop
lea
push
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
add
lcall
add
pop
test
or
add
add
mov
mov
in
push
mov
iret
add
add
sub
pop
push
push
push
call
add
add
lea
mov
add
add
add
push
mov
shl
add
stos
add
ljmp
aam
push
xchg
add
lcall
add
ror
pop
push
push
shl
pop
call
push
sub
pop
call
push
push
add
rol
push
or
inc
add
rol
inc
shl
sub
lea
pop
ror
xor
pop
push
push
push
push
push
push
push
lea
push
call
add
mov
push
add
lret
mov
push
add
add
test
add
fdivl
add
filds
add
add
leave
mov
push
add
ret
mov
pushl
push
lea
xor
pop
call
push
push
add
pop
call
mov
push
push
add
lea
push
push
pop
add
xor
not
shr
sub
sub
pop
xor
shl
add
dec
pop
push
xor
add
not
sub
pop
pushl
call
push
sub
not
add
not
pop
lea
push
shl
pop
push
push
rol
shl
ror
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
lahf
iret
add
cli
xchg
cwtl
add
int3
cltd
add
add
add
test
imul
add
add
add
add
sub
pop
push
push
push
lea
pop
call
push
xor
pop
lea
push
push
inc
shl
not
push
or
not
add
add
xor
sub
rol
rol
dec
pop
add
pop
push
add
pop
pushl
push
push
push
push
push
call
mov
add
pop
jae
test
add
aad
add
sbb
stos
fwait
add
add
xchg
mov
add
sti
faddl
sub
pop
call
push
push
add
add
pop
call
push
push
lea
lea
add
push
or
inc
add
add
add
lea
sub
sub
shr
not
pop
add
inc
pop
push
push
call
hlt
add
arpl
out
add
addb
add
jmp
enter
jge
add
stos
mov
cmpb
add
add
mov
scas
add
cltd
add
addl
in
add
ja
in
add
lret
sub
pop
pushl
push
push
push
call
addb
pop
jae
loopne
iret
jecxz
js
cli
add
jp
mov
mov
push
add
mov
push
mov
int
add
mov
lret
call
icebp
imul
call
call
push
push
push
push
push
push
call
add
add
addb
add
shlb
addr16
mov
mov
cmpsl
sti
imul
jge
in
scas
add
pop
mov
push
push
push
push
call
jns
mov
scas
out
stos
addb
addb
test
mov
add
movsl
add
pop
add
rclb
fadds
add
add
jl
add
add
movsb
add
cmpsl
lret
add
add
add
mov
je
add
add
movsl
add
sub
pop
lea
push
push
lea
not
push
or
inc
add
sub
sub
shl
ror
shl
xor
pop
dec
shl
pop
push
sub
add
pop
pushl
call
push
push
call
sahf
add
lock
bound
js
call
mov
js
add
out
mov
add
iret
insb
in
jbe
hlt
cltd
add
add
lret
clc
lcall
add
push
ror
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
add
add
fs
decb
movsl
jae
add
add
add
lods
pop
add
add
add
lret
push
jl
add
add
add
lret
pop
xchg
pop
mov
sub
pop
push
push
lea
sub
rol
pop
push
push
dec
add
inc
pop
pushl
push
push
dec
not
add
push
or
inc
add
shr
add
shr
sub
dec
pop
shr
add
pop
push
inc
pop
push
push
shl
rol
pop
call
push
push
sub
push
sub
add
sub
lea
sub
dec
sub
pop
shl
shr
xor
pop
push
lea
push
push
push
lea
push
push
lea
push
call
push
add
add
mov
loop
pusha
fs
scas
add
ret
add
add
popf
lods
add
lcall
sub
pop
pushl
push
lea
pop
call
push
shr
sub
pop
push
push
push
push
lea
push
push
push
call
leave
add
add
pop
add
cld
add
jecxz
adcb
mov
xchg
ja
add
add
lock
jno
mov
mov
add
add
in
popl
sub
pop
call
push
push
not
not
sub
push
or
inc
add
shr
sub
add
sub
shr
pop
shr
add
pop
push
lea
push
push
push
push
call
std
cltd
add
insb
js
add
fiadds
push
sti
shl
add
movsb
fdivs
jecxz
clc
enter
add
pushf
add
fiadds
mov
add
imul
push
cli
mov
push
add
in
pop
pushl
call
push
push
push
push
push
push
push
call
add
add
fsubl
add
add
add
mov
les
mov
add
xchg
add
mov
jp
jmp
stc
leave
xchg
pushf
push
add
hlt
jno
add
add
ja
add
add
add
popf
add
mov
pop
call
push
push
push
push
push
lea
push
push
push
push
lea
push
call
aam
fnstcw
add
xchg
test
mov
pusha
jo
add
add
add
add
add
add
add
nop
add
lcall
mov
pop
pushl
push
push
push
lea
push
push
push
call
clc
adcb
test
stos
loop
add
jecxz
push
cmpsl
cltd
pop
add
add
add
xchg
repnz
pop
add
in
jb
sub
pop
mov
jmp
push
push
rol
add
ror
push
or
inc
add
sub
rol
sub
sub
shl
pop
shr
pop
push
push
push
call
add
xchg
adcb
add
sbbl
add
in
add
add
add
shl
xchg
jnp
fiadds
jne
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
lds
xchg
icebp
pop
idivb
add
orb
stc
add
add
add
rorb
jl
jb
add
add
xchg
push
add
pop
nop
hlt
mov
sub
pop
call
push
push
lea
push
lea
push
lea
push
call
add
je
jge
add
rolb
add
ljmp
mov
add
clc
add
push
add
add
in
sarb
xchg
mov
add
add
add
add
in
mov
jp
out
lds
add
mov
lahf
pop
add
popa
add
add
sub
pop
call
push
push
shr
ror
push
or
not
add
inc
xor
sub
ror
pop
xor
pop
push
push
call
flds
push
add
jb
mov
add
imul
movsb
add
fiaddl
add
lcall
jne
push
sub
ror
lea
pop
call
push
push
push
call
bound
add
lods
lods
mov
jge
sarl
cltd
add
fadds
out
imul
add
incb
mov
jmp
push
fiadds
pop
les
fildll
add
add
mull
lcall
rclb
jo
shl
pop
leave
push
push
push
call
ljmp
mulb
mov
repnz
shlb
add
ja
xchg
cld
cli
add
aam
add
cld
pushf
lods
add
add
add
jp
add
add
in
hlt
pop
add
pop
push
not
pop
pop
pop
push
xor
dec
inc
pop
xor
inc
push
ror
inc
pop
ret
push
add
shr
pop
leave
push
push
push
push
push
push
lea
push
push
lea
push
call
faddl
fisttps
add
mov
lods
add
pop
add
add
jle
add
add
add
loop
push
add
mov
add
data16
bnd
scas
data16
or
push
lea
push
lea
push
push
call
xchg
insb
arpl
icebp
add
add
jl
mov
add
fsubp
add
aam
add
fdivl
lahf
jbe
add
fnop
mov
mov
add
mov
add
test
mov
add
lods
add
addl
add
out
testl
std
sub
pop
push
push
lea
push
push
push
call
out
jle
fdiv
into
add
add
pop
jbe
repnz
sahf
add
lcall
add
rolb
call
add
add
addr16
add
rcl
xchg
loope
rolb
jno
xchg
xchg
data16
fisttpll
add
cmpb
test
push
sub
pop
mov
cmpl
jne
push
push
push
push
push
push
lea
push
lea
push
push
call
out
ret
rolb
nop
out
add
add
mov
jle
add
push
xchg
add
mov
lahf
hlt
mov
mov
push
add
push
add
mov
inc
and
jmp
push
add
pop
mov
and
push
lea
push
push
lea
push
call
add
stos
xchg
fadds
mov
cmp
mov
add
stos
cli
stc
add
mov
jge
cmpsb
jnp
add
cmpsb
push
test
stc
lahf
mov
popf
lds
mov
jnp
xchg
pushf
add
add
push
add
lods
out
add
fwait
rclb
test
in
lock
xor
push
shl
shl
not
sub
pop
xor
push
inc
sub
pop
add
push
rol
pop
xor
push
push
push
push
push
lea
push
push
call
jno
jle
iret
pop
add
add
add
add
add
jle
scas
rol
jecxz
sahf
scas
xchg
fwait
add
mov
pop
add
xchg
add
nop
xchg
add
loop
add
fdivrl
mov
add
in
in
dec
push
pop
sub
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
scas
add
insb
add
mov
faddl
add
shrl
jle
bound
mov
mov
add
pop
inc
mov
pop
add
add
roll
add
add
push
dec
dec
pop
pushl
pop
push
push
push
push
call
add
pop
add
push
mov
add
les
mov
add
cltd
xchg
popf
add
add
xchg
fsubrl
in
add
xchg
mov
mov
lock
sub
pop
sub
push
add
not
rol
pop
cmp
jne
push
ror
add
dec
pop
mov
lea
push
ror
pop
sub
mov
push
push
push
push
lea
push
lea
push
push
lea
push
call
add
std
roll
aam
add
xlat
add
add
jecxz
fildl
add
sahf
jae
clc
les
add
add
testb
add
add
ret
popa
add
out
add
add
add
xchg
shlb
add
mov
add
add
mov
test
repnz
add
pop
shr
push
ror
lea
pop
add
push
pop
sub
push
not
shr
add
pop
pushl
push
add
add
not
inc
pop
pop
push
inc
sub
pop
shr
and
push
lea
push
push
call
nop
push
call
add
mov
sahf
in
xlat
mov
add
add
test
add
add
add
pop
add
add
add
push
add
jp
add
lock
ljmp
add
sti
in
les
lods
shr
orb
jmp
push
ror
pop
cmp
jne
push
push
push
lea
push
push
call
lods
sahf
add
add
movsl
ja
mov
add
add
pop
test
push
add
stc
add
cwtl
add
add
add
add
add
bound
push
add
in
mov
add
add
push
cmpsl
jl
imul
andl
add
out
add
lcall
ret
push
lea
push
push
lea
push
lea
push
push
push
call
add
mov
sahf
lahf
xchg
in
pushf
mov
mov
add
movsb
add
jnp
insb
fldcw
cmc
roll
add
pushf
loopne
std
lret
add
add
add
xchg
mov
mov
xchg
lcall
mov
add
hlt
xchg
movsb
add
add
test
ljmp
in
sub
pop
push
push
ror
pop
mov
add
push
shl
inc
dec
pop
push
push
push
push
push
push
push
push
call
add
addl
xchg
add
add
mov
mov
fmulp
cmpsl
add
add
loope
cmpsb
addr16
add
mov
add
add
in
push
out
xchg
cld
add
fnstsw
add
jns
out
pop
add
loope
add
add
lcall
push
push
lea
push
push
push
push
push
push
push
call
xchg
loop
mov
mov
add
jno
mov
int
lcall
shll
repnz
add
add
stc
mov
add
add
add
mov
add
jecxz
fiaddl
add
add
loopne
lcall
push
sub
rol
pop
push
mov
push
rol
add
inc
pop
lea
push
push
lea
push
push
push
push
lea
push
push
push
push
call
lock
cmc
in
add
pop
add
test
int3
add
scas
add
xchg
lods
loopne
jno
add
add
jo
ljmp
mov
popl
jne
test
add
xchg
ja
test
sub
pop
sub
mov
push
not
sub
dec
sub
pop
shr
push
add
pop
add
push
ror
shr
pop
mov
push
ror
sub
dec
pop
add
push
push
lea
push
push
push
push
push
push
call
mov
push
sahf
add
lahf
add
je
mov
pop
add
push
out
add
addl
push
out
fwait
add
add
jnp
push
lea
push
push
lea
push
push
lea
push
call
add
js
mov
fyl2x
fwait
neg
add
loop
add
jbe
mov
incb
ljmp
add
scas
data16
mov
bound
mov
call
push
lea
push
push
push
lea
push
push
lea
push
call
ret
in
add
addl
add
add
int3
pop
mov
add
add
lock
fildl
add
pop
add
mov
add
mov
jo
jl
xchg
stos
push
cli
out
cmpsb
lods
ret
roll
notb
sbb
dec
add
add
add
xchg
imul
push
add
add
push
add
mov
xchg
xchg
add
out
cld
add
jne
add
add
shlb
add
add
in
add
jnp
addl
push
add
lcall
xlat
and
push
push
call
and
add
movl
add
xchg
movsb
je
pop
add
lds
lcall
add
add
pop
test
in
clc
lcall
rolb
pop
rol
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
divb
pop
lret
into
xlat
stos
add
mov
outsl
mov
fs
ljmp
push
push
fwait
add
xchg
jmp
mov
fildll
in
fdivr
lcall
add
rorl
and
inc
push
not
not
sub
sub
pop
cmpb
jne
add
push
push
push
call
stc
arpl
mov
add
mov
fiaddl
mov
jne
out
xlat
out
xchg
jno
add
sahf
roll
xchg
sub
pop
cmp
je
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
mov
in
add
shl
add
mov
mov
add
add
add
add
add
mov
lret
roll
fwait
jmp
sub
pop
add
push
push
push
lea
push
call
add
xchg
mov
add
add
mov
mov
jmp
lock
add
pop
add
add
add
stos
add
add
add
add
sub
pop
cmpl
jne
xor
push
sub
not
pop
pop
push
rol
ror
add
pop
pop
pop
push
push
push
call
push
add
test
lcall
fiaddl
mov
mov
add
int3
add
mov
test
loopne
cmpsb
add
add
add
push
add
js
push
pushf
add
in
hlt
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
fisubl
add
jns
mov
add
add
add
add
add
mov
clc
out
add
mov
add
pop
aam
mov
addr16
pop
pop
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
ljmp
add
add
add
jmp
mov
add
mov
mov
in
mov
out
jle
add
pop
sub
pop
leave
ret
push
lea
pop
mov
push
lea
push
call
mov
push
lret
add
enter
jae
xchg
rolb
cld
pushf
mov
add
add
add
mov
jo
add
pop
jne
push
jne
testl
test
add
sub
pop
add
push
ror
pop
mov
push
shr
dec
pop
push
push
pop
testb
push
lea
push
lea
push
call
pop
fcoms
stos
add
add
jne
int
add
in
jae
add
movsl
loope
push
add
rcrl
add
add
add
add
std
rorb
nop
fsubrs
jns
scas
in
in
hlt
lcall
push
xor
add
dec
add
pop
call
push
push
shr
sub
add
pop
call
xor
push
push
lea
push
lea
push
call
add
add
data16
scas
add
addb
jne
in
ljmp
add
call
xchg
in
in
add
aam
add
pop
pushf
pop
xchg
add
add
stos
mov
add
xchg
lret
add
cmc
fiadds
frstor
mov
add
add
add
add
lock
lcall
push
push
push
push
call
mov
add
add
xlat
add
add
int
mov
stc
mov
mov
add
add
add
mov
add
scas
test
add
shlb
leave
mov
add
loopne
add
aam
mov
fwait
arpl
lcall
push
pop
pop
push
push
push
push
push
call
mov
add
mov
add
pop
out
add
xchg
insb
push
out
push
mov
addb
xchg
add
mov
mov
out
add
loop
sub
pop
pop
push
push
push
lea
push
push
lea
push
push
push
push
push
call
mov
iret
add
movsb
movsb
mov
add
add
jno
add
add
add
pop
lods
jge
les
mov
testl
add
add
add
pop
jle
js
jle
add
lcall
push
add
rol
pop
leave
push
push
call
add
push
add
add
pop
out
faddl
adc
loope
add
popf
add
add
xchg
jno
add
stc
add
add
cld
addr16
outsl
mov
out
add
jns
add
mov
pop
add
cli
add
add
addl
shll
xor
loope
add
pop
push
push
push
push
lea
push
push
push
lea
push
call
pop
add
add
fwait
add
add
add
pop
xchg
push
scas
add
sti
add
xchg
xchg
add
add
in
add
add
out
add
in
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
mov
add
add
add
mulb
add
add
lret
add
lock
ret
add
mov
push
int3
add
lret
repnz
ja
addl
sub
pop
add
push
push
shr
ror
shl
pop
push
push
lea
push
push
push
call
add
scas
push
add
scas
mov
mov
mov
int3
stos
into
xchg
lahf
aam
mov
add
add
lahf
add
xchg
lea
test
lods
stc
js
outsl
mov
leave
add
add
jno
rcll
addb
repnz
or
test
jmp
in
leave
add
push
push
push
lea
push
lea
push
push
push
push
push
call
rol
in
addl
ljmp
add
add
mov
add
add
arpl
mov
addb
fwait
jle
stos
jnp
loop
pusha
add
mov
movl
mov
hlt
rolb
mov
mov
push
xor
rol
add
pop
push
push
push
push
push
call
je
pop
add
ret
icebp
cli
popf
add
add
jb
xchg
fdivrl
xchg
push
pushf
std
mov
add
pop
addl
add
in
lock
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
imul
nop
lahf
jle
pop
add
add
add
add
add
js
jbe
imul
pop
mov
add
lcall
push
cmp
push
push
call
stos
add
clc
add
xchg
fnstsw
add
addl
push
sti
add
cmc
xchg
mov
pop
jmp
flds
add
gs
lcall
add
loope
add
sub
pop
sub
push
sub
pop
mov
push
lea
push
push
lea
push
call
mov
mov
stos
cmc
add
sti
xchg
jbe
jmp
cmpsl
add
add
lock
add
sti
mov
add
add
pop
add
mov
sti
add
pop
add
lcall
ljmp
push
push
push
lea
push
call
add
add
add
add
add
add
in
and
add
imul
lcall
add
js
stos
stos
add
in
fbld
add
add
pop
mov
push
sub
xor
shl
lea
pop
add
pushl
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
popl
cli
add
add
int
add
add
add
add
js
mov
add
add
add
add
loopne
add
pop
bound
sub
pop
popl
push
ror
pop
mov
push
sub
pop
add
xor
push
add
not
pop
lea
push
push
call
iret
mov
iret
test
test
scas
add
add
push
lret
add
add
add
add
testb
pop
mov
add
push
ror
pop
xor
push
lea
pop
rol
nop
push
dec
pop
nop
push
lea
push
lea
push
push
push
push
push
push
call
add
add
xorl
mov
movsl
xchg
cmc
add
cltd
add
std
add
add
add
popl
in
loopne
xor
push
sub
pop
nop
push
shl
pop
nop
inc
push
inc
lea
rol
rol
pop
nop
nop
push
sub
add
sub
pop
cmpb
jne
add
push
shl
pop
nop
push
lea
push
push
push
call
add
add
add
push
add
add
add
xchg
add
add
add
xor
mov
add
ficomps
cmc
fldl
add
add
add
add
jmp
push
add
add
xchg
hlt
push
mov
in
lock
lcall
cmp
je
push
add
pop
nop
push
push
push
push
lea
push
call
jo
mov
int3
push
add
jl
popf
add
fistpll
mov
add
add
cmpsb
add
add
add
popf
add
xchg
add
stc
mov
fcoml
in
lcall
push
sub
lea
inc
rol
pop
inc
push
add
shr
pop
nop
nop
push
lea
lea
pop
cmp
jb
push
push
push
call
push
out
mov
xchg
popf
lret
add
push
xchg
add
lahf
add
add
ljmp
mov
rclb
not
ror
pop
jmp
mov
push
shl
pop
add
movzwl
push
push
lea
push
push
call
mov
hlt
cwtl
add
add
lds
into
mov
loopnew
jnp
pop
add
mov
add
sub
pop
mov
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
jmp
push
in
add
scas
pop
add
add
fsts
mov
jmp
push
jmp
add
add
add
add
lcall
rorl
pop
xor
xor
push
push
lea
push
call
add
push
mov
jbe
cmpsl
mov
in
faddl
iret
add
add
add
add
add
add
lahf
or
add
add
std
bound
jae
add
xchg
add
shl
push
sub
sub
inc
pop
xor
shl
push
push
call
add
add
add
add
js
add
ljmp
add
arpl
test
pop
add
arpl
add
jb
imul
ljmp
mov
clc
add
pop
mov
mov
add
xchg
clc
add
add
dec
nop
add
je
jge
push
lea
push
lea
push
push
push
push
push
lea
push
call
xchg
add
jp
mov
cmpsl
test
andb
pop
add
add
xchg
jecxz
add
out
add
xlat
jns
add
add
stos
add
stc
add
add
outsl
loope
loop
jno
add
out
add
shl
push
lea
push
push
lea
push
lea
push
push
call
add
add
push
jle
add
add
mov
aad
add
lods
stc
test
pushf
movsl
push
jae
add
lcall
or
push
lea
xor
pop
mov
push
push
push
push
lea
push
push
lea
push
call
xchg
add
add
add
int
xchg
test
add
mov
test
add
test
fisubrs
subl
mov
add
lea
xlat
jne
add
add
iret
add
add
roll
inc
hlt
pop
push
not
pop
pop
pop
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
xchg
lret
shl
jge
jmp
add
sti
out
mov
subl
in
jge
add
add
fildl
xchg
orb
lds
xchg
add
fsubl
clc
mov
add
stc
mov
xchg
mov
fistps
loopne
pop
push
push
push
push
call
add
add
mov
add
fidivrs
movsb
lcall
in
add
add
frstor
in
sti
add
add
ljmp
xchg
nop
mov
mov
in
mov
mov
jbe
mov
lea
add
mov
sub
pop
leave
push
shr
pop
ret
push
add
lea
pop
push
mov
push
push
call
out
movb
push
mov
add
rol
fs
leave
loope
add
jmp
jmp
mov
xchg
push
int
add
push
out
jbe
mov
mov
add
lret
add
add
ljmp
add
mov
xchg
sub
pop
push
push
push
shl
sub
xor
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
data16
add
add
aam
add
mov
testb
jns
jge
add
stc
mov
add
lock
in
fdivrs
lcall
dec
or
push
call
roll
add
add
mov
out
add
movb
ret
add
add
jmp
add
sub
pop
mov
push
lea
push
push
lea
push
call
add
ljmp
call
clc
push
clc
add
add
push
add
faddl
add
aad
test
add
cwtl
pop
add
leave
arpl
divb
add
push
shl
mov
pop
add
add
add
pop
mov
mov
jmp
fildl
mov
add
jge
push
shl
add
pop
test
je
mov
push
push
lea
push
call
mov
add
add
push
add
pushf
arpl
jge
stos
push
les
popa
add
outsl
add
sti
mov
ficomps
add
cmpsl
push
lret
add
std
add
cwtl
jmp
hlt
lcall
testb
push
add
add
into
push
rol
pop
mov
push
lea
shl
rol
pop
mov
push
lea
pop
inc
push
not
xor
pop
cmp
je
push
push
lea
push
push
push
push
push
push
push
call
add
int
int
enter
gs
in
mov
xor
outsl
add
push
in
add
jnp
out
mov
lea
movsb
shrl
stc
xchg
cmpsl
add
add
roll
sub
pop
test
je
mov
push
push
push
push
push
push
call
add
fildl
fldl
rolb
aad
add
ljmp
movb
add
add
push
push
add
add
lahf
cmpsl
add
fadd
jmp
pop
jle
mov
add
cltd
pop
push
add
popf
sub
pop
inc
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
cli
jl
scas
mov
test
mov
in
push
faddl
jns
add
jecxz
xchg
cmpsb
add
push
incb
add
add
xlat
jmp
jmp
xlat
cmc
notb
mov
xchg
jmp
lods
add
cmpsl
add
lock
push
sub
pop
cmp
je
push
push
push
push
push
lea
push
push
push
call
pop
fcmovnbe
add
push
addl
fisubl
add
popa
pop
cmpsb
fistl
jbe
add
add
xlat
fisubrs
in
add
mov
scas
add
lcall
rorb
pushl
rclb
aas
fidivrs
push
pop
push
call
xlat
jo
rolb
add
add
add
jb
add
push
jne
xchg
mov
mov
lea
mov
loop
in
in
lcall
push
push
lea
push
call
fmull
cli
add
std
add
jle
jecxz
add
add
ljmp
add
mov
mov
xchg
pop
outsl
mov
add
rol
lcall
je
lcall
popf
mov
std
sub
pop
pop
push
shl
not
pop
pop
pop
push
ror
add
ror
shl
pop
leave
push
push
push
push
push
lea
push
lea
push
call
ljmp
add
add
aam
add
add
add
mov
mov
add
lret
cltd
add
mov
mov
add
jns
sub
pop
ret
push
shr
add
pop
mov
push
not
pop
inc
cmp
jne
push
rol
lea
ror
pop
lea
push
push
push
call
pusha
shlb
add
lret
imul
in
mov
mov
sahf
add
push
add
imul
pop
add
pop
add
fdivrs
sarl
add
add
add
mov
add
add
jle
add
jge
sub
pop
mov
push
ror
sub
not
pop
test
je
push
lea
push
call
add
add
faddl
bound
add
add
lret
les
lods
add
jbe
leave
iret
mov
movb
in
in
repnz
testl
add
add
push
add
push
pop
add
xchg
mov
add
add
add
sub
pop
mov
add
push
shr
pop
cmp
jne
mov
push
shl
pop
test
je
push
xor
inc
shr
pop
mov
add
push
xor
not
add
pop
cmp
je
jmp
push
add
sub
add
pop
xor
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
xchg
ficoms
out
add
scas
mov
add
push
add
add
add
jnp
add
add
mov
test
add
push
push
push
call
push
mov
divl
hlt
stos
fwait
add
mov
mov
mov
mov
add
add
add
add
mov
add
testb
movsb
add
add
filds
add
mov
add
add
mov
pop
ffreep
pop
add
xchg
in
hlt
pop
pop
pop
push
shl
pop
pop
push
push
push
push
push
lea
push
push
call
mov
andl
pop
pop
jp
add
add
add
mov
addr16
test
pop
add
lcall
in
addb
add
rorb
lcall
push
push
lea
push
push
push
call
add
jle
mov
mov
loop
addr16
add
jmp
outsl
jne
add
add
add
push
add
jecxz
std
cmpsb
add
or
lea
push
xor
sub
sub
pop
pop
push
rol
pop
pop
push
ror
pop
pop
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
pusha
add
roll
lock
add
stos
lds
xchg
add
add
jp
add
add
movsl
loope
add
push
popf
add
out
mov
iret
xchg
mov
rcrl
in
fcomps
leave
push
push
push
call
lret
xchg
add
add
in
fadds
cwtl
add
jge
add
add
add
stos
mov
mov
add
addb
add
push
push
lea
push
push
call
lcall
add
add
add
mov
lods
jmp
add
jno
loope
xchg
in
add
in
call
rol
lret
rorb
pop
push
push
push
push
push
push
push
call
add
scas
stos
mov
stc
add
cmc
shll
in
add
in
add
imul
js
add
lea
mov
shr
add
add
add
add
pop
cwtl
pop
out
test
jbe
imul
pop
pop
push
not
pop
pop
push
shl
lea
inc
pop
leave
push
push
push
push
push
call
add
add
xchg
lods
in
rcrl
jle
in
mov
add
add
icebp
jnp
enter
cmc
add
stc
xchg
nop
add
shlb
ljmp
int3
cmpsl
add
mov
add
jecxz
scas
add
mov
mov
jne
pushf
shlb
xchg
mov
add
pop
ret
xor
cmp
iret
dec
cmp
xor
adc
adc
adc
sbb
adc
repz
xor
adc
jb
adc
mov
add
rorl
xchg
push
inc
push
cmc
rcll
out
xor
mov
stc
mulb
rcr
adc
push
incb
xor
jnp
or
outsl
daa
vshufps
insl
mov
bound
pushf
ret
add
mov
cwtl
pop
je
jp
push
ret
lret
dec
pop
sub
mov
in
loope
sbb
aad
mov
test
push
aas
xor
aaa
add
jno
dec
fstpt
movsl
in
xor
in
dec
fiadds
or
jns
loopne
sbb
scas
cmp
leave
in
rcr
mov
push
xchg
cmp
clc
jl
sub
cltd
in
out
push
xor
xchg
lods
adc
int3
adcl
sbb
clc
xchg
sbb
insb
stos
enter
clc
ljmp
std
adc
inc
out
add
pop
mov
inc
push
lea
xor
shr
push
adc
cmp
add
jmp
shr
push
cs
push
mov
cwtl
ss
ja
das
or
loopne
mov
rcrb
or
pop
mov
rcll
fsubrs
lods
dec
call
push
and
push
out
rolb
mov
dec
or
shrb
xchg
xor
icebp
subb
mov
lret
rcll
jo
aad
mov
add
and
mov
loopne
cmp
sbb
shll
dec
or
sbb
jb,pn
shrl
int
mov
std
fidivrs
ret
icebp
mov
push
js
out
mov
sbb
insb
test
add
cmpsb
fisubrl
sahf
cmpsl
rorb
out
pop
jns
mov
lret
mov
lock
pop
lods
add
bound
pop
xor
mov
add
fdiv
pop
fsts
adc
iret
sub
push
add
jecxz
das
fimull
pop
test
sbb
pop
repnz
adc
cmp
push
rcrl
sbb
sti
int
fsubp
rcl
mov
cmp
clc
xlat
fadd
and
xchg
add
xchg
std
mov
icebp
call
mov
pop
jl
dec
out
push
xchg
into
add
xchg
insb
cwtl
lret
loopne
lods
stc
and
mov
xchg
xchg
mov
xchg
jne
nop
xor
xor
add
cwtl
pop
dec
pop
dec
les
mov
mov
inc
or
fisubrs
mov
inc
lods
push
push
insb
mov
mov
xor
mov
adcb
dec
idivl
and
es
pusha
lcall
repz
or
jns
insl
lret
mov
mov
and
pop
and
sbb
insb
cmp
cmp
sub
cmc
into
outsl
jl
sti
jno
int3
out
popa
mov
insl
das
xchg
cmpb
push
rol
and
aad
mov
shrb
int3
push
enter
push
push
xor
lods
sub
movsl
ret
push
arpl
sti
pop
mov
arpl
cmp
movsl
subb
sbb
mov
add
cltd
rcll
and
scas
push
xchg
inc
xor
test
sarb
aad
and
adc
push
stos
ret
inc
push
inc
int
out
xchg
sar
mov
movsl
mov
xchg
mov
and
les
sti
es
xor
push
fisubl
xchg
mov
dec
addr16
in
dec
dec
push
pop
outsb
les
push
mov
loope
out
divb
popa
mov
sbb
and
sub
cwtl
pop
inc
sub
pop
cltd
dec
xchg
popa
popa
ljmp
cmc
pop
test
lds
and
outsb
pop
jle
cs
int
mov
cmp
sub
lods
fidivs
int
jns
pop
adc
negb
rcrl
sub
jne
aas
sar
push
adc
adc
sbb
add
pop
icebp
rorb
cs
dec
jbe
lret
lahf
leave
addr16
dec
mov
cld
inc
mov
cltd
loop
lret
inc
sub
inc
jg
aaa
mov
pusha
outsb
xchg
das
pop
in
leave
pop
test
ja
sub
movsb
or
pop
jno
mov
ljmp
orb
outsl
mov
xorb
pusha
pop
add
cs
jp
jns
sub
xor
out
jmp
mov
fsts
shrb
movsb
cmp
lahf
movsb
stos
fcompl
outsl
add
bound
cltd
or
and
jp
nop
movsb
jl
lods
jns
adc
aad
jb
add
clc
mov
push
cmc
add
movsl
and
dec
xchg
into
lds
sub
adc
inc
add
xchg
lea
outsl
push
scas
je
inc
pop
mull
push
iret
fs
or
jg
repnz
out
ret
xchg
fdivl
add
xor
cmp
pushf
pop
rclb
int
mov
or
je
inc
push
inc
enter
pop
mov
mov
dec
test
sbb
jne
in
jg
xchg
daa
mov
push
icebp
adc
pop
xchg
sahf
lds
push
xchg
ss
push
loope
sub
lock
inc
icebp
sahf
loopne
dec
ret
faddl
mov
ljmp
xor
dec
imul
les
hlt
ljmp
daa
mov
out
imul
adc
fistl
sahf
aam
imul
clc
jb
rcr
outsl
mov
sub
cmp
mov
imul
aam
add
jae
fmuls
mov
aad
jl
or
adc
xchg
push
rorl
jbe
sub
mov
or
cmp
inc
in
mov
jnp
mov
lahf
pop
dec
xchg
inc
or
xor
mov
add
push
add
cmp
cld
sahf
xchg
push
leave
mov
jl
and
jo
push
push
aaa
mov
loopne
insb
jmp
xlat
cld
outsb
std
cwtl
cmpsl
leave
jae
stc
leave
mov
dec
fwait
or
cwtl
push
dec
pop
shrl
jne
mov
xchg
shlb
fistpl
dec
mov
pop
sbb
daa
xor
xchg
add
movsl
inc
mov
je
mov
add
dec
icebp
js
ss
xchg
or
fucomp
mov
xchg
add
pop
mov
pop
push
mov
out
mov
mov
call
in
push
aaa
mov
jnp
or
scas
cwtl
out
repz
push
call
jbe
cli
insl
loopne
mov
cltd
movsl
and
hlt
mov
pop
sbb
sub
and
aam
stos
push
sbb
das
out
mov
cmpl
xchg
xchg
aad
movsb
mov
out
mov
cwtl
xor
mov
inc
arpl
push
out
out
adc
cli
repnz
add
nop
mov
mulb
sbb
sbb
hlt
movl
arpl
jg
aam
scas
push
adc
pop
test
cmp
stos
inc
pop
test
xchg
in
repnz
icebp
mov
out
mov
add
scas
add
xor
ja
sub
and
das
mov
inc
dec
inc
nop
cwtl
imul
daa
xchg
xor
sbb
call
aaa
sub
pop
or
pop
adcb
dec
imulb
cmp
arpl
mov
popf
or
push
fs
popa
inc
mov
and
jl
or
xchg
dec
scas
in
cmp
push
mov
sbb
aam
adc
sti
fldcw
xchg
jbe
mov
sbb
adc
out
pop
sub
add
cmp
xchg
icebp
xor
jle
js
js,pt
cwtl
mov
mov
push
or
push
int3
roll
gs
es
pop
jo
test
mov
into
jmp
lds
and
std
mov
cmpsb
popa
data16
jge
mov
popa
jns
mov
pushf
or
fcoml
icebp
movl
out
sub
loop
rcll
faddl
inc
mov
sub
movsl
xchg
mov
xchg
add
cmp
in
dec
out
mov
pop
in
jns
adc
push
addr16
sbb
loope
mov
cmp
push
xor
dec
xchg
mov
lahf
stos
jle
mov
lock
jae
add
fisubs
mov
xchg
xor
xor
cmc
pop
push
scas
add
adc
mov
or
repnz
aam
das
pushf
lds
sti
lock
mov
xchg
xchg
inc
fildll
jp
pop
xorb
and
push
xlat
stos
mov
jno
ret
jo
or
add
inc
inc
gs
ja
arpl
out
pop
mov
lods
push
clc
cld
sbb
lods
mov
xchg
pop
loope
mov
push
add
mull
fs
mov
je
push
repnz
mov
sub
dec
inc
mov
mov
test
add
fildll
jnp
into
fmull
pop
add
shl
xchg
fs
xor
cmp
jle
rcr
bound
jge
dec
loopne
shl
mov
inc
jl
out
or
dec
stc
jp
ds
mov
lods
jp
pop
sub
ret
fildl
jp
inc
call
inc
inc
repz
ficomps
jmp
xor
jno
sbbl
or
cmp
cmp
movsl
cmpsb
jmp
fwait
inc
push
inc
inc
mov
mov
ss
jmp
jle
sti
push
mov
imul
inc
mov
mov
js
xchg
arpl
jnp
fcmovu
jo
push
mov
jns
xor
inc
or
ret
inc
repnz
jnp
rol
push
test
mov
cwtl
mov
rol
mov
addr16
lock
rcr
sbb
cmpsb
xor
in
and
fwait
cmc
push
cmc
adc
lret
int
outsl
outsb
inc
xchg
adc
bound
mov
pushf
int
repz
inc
insl
test
adc
shlb
lret
push
pop
clc
fnstcw
and
push
cmp
pop
loop
sub
outsb
mov
std
mov
gs
shl
cmp
push
push
into
in
pop
inc
sbb
xchg
fdivl
mov
cmp
repnz
sahf
mov
in
js
mov
xor
icebp
jle
xchg
or
shr
mov
stc
xor
test
fsubrp
push
sbb
lds
test
dec
jb
ffreep
ret
push
arpl
and
jmp
out
pop
popa
fwait
sub
in
insb
inc
dec
incl
psubw
imulb
mov
ljmp
adc
shll
adcl
or
inc
adc
mov
inc
lcall
push
xchg
push
std
adc
cld
jne
in
mov
mov
or
xor
dec
lret
sbb
push
imul
out
ffree
xchg
xorl
and
icebp
push
sbb
xorb
xchg
and
ficoml
mov
ja
ljmp
inc
nop
sub
or
adc
icebp
inc
stos
xchg
cmpsb
popa
dec
stos
mov
sub
outsb
xor
adc
divl
js
sbb
clc
sub
ljmp
test
dec
or
and
sub
push
pop
insb
lea
ret
jno
jae
pushf
rcrb
movsl
pop
int3
sbb
les
mov
shll
dec
jmp
dec
fstl
mov
push
es
cmp
or
xchg
push
sub
cmp
pop
and
les
ret
pop
es
std
cmp
mov
sub
adc
stos
jge
jnp
jg
adc
cwtl
add
xor
dec
pop
in
lcall
sub
and
jb
add
pop
mov
outsl
fildl
mov
jl
loopne
js
mov
pop
int3
fdivrs
xchg
hlt
scas
cmp
jo
jmp
data16
mov
add
fwait
sahf
xchg
jp
stc
jbe
adc
lds
jmp
sbb
xor
sub
cmpsl
repnz
adc
jbe
mov
push
cmp
pop
lods
mov
mov
inc
out
imul
lock
aas
stos
je
dec
jg
hlt
rclb
outsb
push
in
jmp
sub
jae
pusha
jns
sbb
nop
pop
push
addr16
int
push
sub
ret
scas
int3
cltd
jnp
push
or
call
sub
push
or
mov
xchg
adc
std
mov
xchg
pop
pop
daa
mov
das
and
mov
in
pop
jl
pop
inc
stos
stos
jne
add
movsb
jnp
in
adc
ljmp
mov
pop
dec
leave
sbbb
dec
mov
dec
scas
sub
js
jbe
dec
cmp
mov
aaa
cmc
cmpb
jo
enter
das
adc
sub
mov
xchg
xchg
dec
rolb
mov
pop
pop
add
pop
dec
lods
icebp
mov
pushl
sbb
inc
xor
inc
jb
mov
cld
push
stos
sahf
xchg
add
jle
je
dec
add
in
arpl
sub
imul
mov
popa
push
jae
test
outsl
sbb
and
and
imul
push
imul
movsb
jne
mov
or
xchg
pop
arpl
sub
test
sub
ret
ret
andl
cmpsb
mov
dec
mov
push
mov
sahf
xchg
push
or
cmc
adcb
sbb
pop
cmpsl
and
and
push
push
sbb
or
adc
sub
loopne
inc
int3
jb
or
arpl
shl
in
insb
mov
sbb
adc
sub
add
nop
cld
shl
sbb
fdivrl
sarb
decb
icebp
push
ret
test
pop
lock
add
aas
jo
or
jmp
shlb
jae
push
push
sub
out
mov
scas
ljmp
xor
lock
xchg
ja
testl
push
xor
mov
jp
jle
addl
jecxz
mov
mov
cmpsb
xchg
jnp
push
jecxz
dec
and
cmp
or
adc
stos
rol
mov
push
push
ret
loopne
jnp
pop
rol
bound
ret
xchg
dec
add
lods
out
loope
orb
jo
iret
cmp
sbb
fsubl
loope
adc
lcall
scas
mov
sub
mov
xor
lcall
out
incl
test
adc
push
or
sbb
inc
loopne
sti
fcomp
mov
and
xchg
mov
nop
mov
loopne
pop
or
push
pop
cmp
lods
jmp
mov
mov
and
jle
xor
mov
fwait
mov
cmp
or
loop
xlat
clc
and
add
push
or
adc
xchg
inc
imul
faddl
pop
addr16
push
addr16
fisubrs
lahf
int3
std
dec
add
mov
lahf
cwtl
xor
in
sub
lret
pop
xchg
mov
mov
jne
or
mov
jle
insb
xor
neg
pop
outsl
xor
and
xlat
cmpsb
movsb
cld
cli
adc
stos
jle
jecxz
sbb
pusha
test
iret
xlat
mov
in
lods
dec
jg
sub
outsb
bndstx
rol
dec
faddp
les
call
inc
or
ret
cmp
push
loopne
and
mov
lea
push
xchg
lds
pop
iret
fiaddl
aad
je
inc
movsl
lea
fdivr
xor
xor
mov
sbb
inc
shll
repnz
jmp
sbbb
mov
inc
cltd
ss
inc
in
ja
fistps
jnp
cli
ljmp
or
aas
sub
xor
stc
in
inc
pop
lods
imul
push
in
aam
jg
sub
cmp
adc
fmull
mov
cli
insb
dec
or
jle
sbb
into
int
fucomi
push
sbb
in
in
bnd
aaa
shrl
hlt
xchg
fucomp
int3
xor
mov
das
cmp
adc
push
lods
sbb
jmp
mov
and
orb
jmp
mov
mov
mov
push
jg
test
or
sub
or
movsb
mov
arpl
mov
insb
stos
and
sub
into
nop
cmp
and
xlat
inc
mov
shll
ds
cmp
popf
xor
push
test
mov
and
in
stos
mov
in
sub
inc
pop
fnstenv
and
negl
mov
mov
data16
add
jne
pop
cltd
testb
cltd
mov
push
or
lods
loope
jge
repnz
imul
fadds
fucomp
sub
pusha
lock
push
jae
and
jl
xchg
fnstsw
dec
or
push
cmpsb
lock
or
les
pop
out
mov
jno
stc
fnstsw
pop
out
jno
mov
jg
rcrl
pop
push
inc
fistl
jo
xchg
out
sbb
mov
sub
push
lods
xchg
cmp
js
jp
mov
imul
in
loope
ljmp
movsb
outsb
add
mov
sti
out
and
incb
jne
mov
jge
add
stos
mov
out
dec
test
icebp
xor
ljmp
mov
push
or
add
mov
ret
loop
loope
movsl
dec
adc
aaa
push
ret
add
adc
inc
xchg
mov
bound
bound
jae
imul
adc
xchg
scas
stos
jns
pop
test
jbe
inc
imul
subl
jns
mov
xlat
sub
divl
jg
pop
cmp
jmp
pop
xchg
sbb
aad
int3
sub
mov
fwait
jae
jecxz
out
sbb
les
inc
orl
xchg
movsb
push
mov
rol
fildll
or
out
mov
ljmp
sub
stos
popa
popa
jbe
movsb
add
cmpsl
int3
pop
xor
add
ja
pop
add
out
dec
push
popf
xchg
popa
mov
fs
adc
xchg
fwait
sar
roll
adc
adc
adc
pop
pop
mov
dec
xchg
outsl
dec
adc
insl
mov
repz
jb
out
loop
out
loope
mov
aam
daa
icebp
out
cld
xchg
nopl
mov
pop
cmp
lock
push
addb
rcrl
or
xor
lret
pop
std
or
dec
aad
lahf
cmp
push
pop
lret
popa
movsb
sti
mov
or
push
jno
xor
pushf
inc
lds
leave
pop
outsl
pop
or
test
pop
mov
loope
or
adc
xor
outsl
add
pop
stos
mov
notb
rol
inc
stos
inc
jp
lods
adc
sbb
mov
mov
mov
jl
rclb
dec
and
insb
repnz
xor
pop
scas
xchg
divb
lcall
adc
cmp
jl
in
sub
fucomp
les
iret
aam
mov
xor
arpl
fcmovb
pop
cpuid
dec
sub
aam
dec
dec
xchg
das
jne
xchg
mull
icebp
addr16
out
fs
pop
neg
gs
jb
push
adc
sub
das
sbb
dec
out
insl
iret
mov
jns
lcall
xchg
xchg
mov
pop
sahf
xchg
lds
ja
xchg
mov
std
dec
mov
data16
arpl
bound
and
les
xlat
fs
mov
dec
inc
popf
adc
cmp
fnsave
imul
cs
xchg
ffree
inc
jp
aad
pop
das
nop
push
push
lea
sbb
jno
adc
ja
mov
test
sub
jmp
ret
rorl
cltd
popa
adc
dec
lea
popf
push
jo
es
pushl
mov
pop
es
and
cmp
leave
jae
and
clc
sub
mov
adc
scas
jle
popf
sbb
movsb
fcmovbe
outsb
cld
decb
int
mov
scas
xor
lret
pop
movsl
sti
and
fidivs
sbb
sahf
imul
testb
push
in
mov
hlt
lea
lea
clc
in
or
ds
sbb
in
int
and
scas
mov
int
leave
pop
jae
xor
adc
push
cmp
dec
fwait
mov
addb
sub
insl
xor
add
daa
hlt
mov
shlb
xchg
sub
jb
mov
inc
or
sbb
int
push
fsubs
mov
jp
push
imul
and
cmp
push
or
les
aad
jl
sti
cmpsb
mov
mov
mov
mov
fwait
lods
daa
and
pop
dec
pusha
inc
pop
loopne
lcall
mov
mov
xor
lret
js
sub
lcall
insb
add
and
arpl
jge
xor
fisubs
add
sbbl
push
sbb
lea
mov
lcall
lods
mov
aaa
pop
sbb
xchg
pop
nop
jb
int3
jp
sbb
or
xchg
mov
and
loope
mov
adc
dec
fistpll
xchg
pop
test
xchg
sub
mov
and
jl
ja
add
pop
daa
mov
add
test
dec
mov
mov
sbb
imul
dec
mov
or
jnp
daa
adc
pop
mov
fldt
rolb
orl
and
test
sbb
mov
call
adc
bound
ror
ficoms
inc
xor
fmuls
cwtl
add
mov
daa
cmp
xor
fcoms
cli
sub
mov
lahf
or
std
add
push
pop
cmp
lcall
fldenv
cltd
cmp
dec
ja
mov
mov
fisttpl
lds
pop
sbb
ret
inc
add
inc
dec
xchg
pop
xor
jo
iret
sbb
mov
inc
xor
out
cmp
jecxz
jecxz
stos
lods
ja
sub
or
aas
cmp
cmc
fmuls
fildll
int3
lret
ljmp
adc
jne
scas
mov
pushf
daa
add
das
jmp
cmpsl
int3
cmp
scas
fistpl
and
icebp
jae
jo
and
pop
cli
xchg
popa
bound
jns
loopne
sarl
insb
imul
shll
push
push
push
sbb
aas
lock
loopne
aad
or
loope
lret
sbb
pop
and
jb
lea
push
and
xor
and
imul
fs
pop
in
and
and
and
mov
fidivrs
gs
inc
outsb
test
ja
add
jne
jmp
out
sbb
icebp
mov
leave
sub
dec
aaa
dec
cmp
jno
jge
fdivrs
faddl
stos
pop
in
inc
insl
mov
sarl
jns
rcll
push
in
jno
int3
jno
lahf
sub
xor
hlt
in
mov
and
sbb
jno
mov
nop
fsubl
addb
fldcw
xchg
addl
ficompl
call
clc
cli
test
cmp
add
enter
pusha
inc
inc
mov
into
dec
pop
aas
gs
cld
xor
jae
jbe
in
pop
sub
push
lds
movsl
add
std
xor
scas
mov
popw
add
pop
ja
out
test
in
mov
daa
jl
pop
cmp
push
inc
jb
test
and
lret
pop
repnz
mov
mov
pushf
stc
fwait
mov
test
push
out
nop
cmp
and
sbb
mov
repnz
notb
sub
adc
dec
inc
mul
cmp
or
jo
loop
jmp
mov
jne
iret
bnd
mov
pop
mov
cmc
cmp
xchg
mov
sbb
je
out
test
cmp
xchg
dec
and
jecxz
js
adc
sar
push
inc
shlb
stos
js
stos
jns
jno
or
scas
push
xchg
mov
inc
and
sbb
icebp
mov
xchg
testb
sbb
fdivs
xor
test
cmpsb
and
jbe
std
and
inc
decl
repz
dec
cmpsb
movb
aam
jns
lret
or
push
mov
xchg
dec
ljmp
call
das
fsubl
pop
outsb
stc
fistpll
sub
sbb
pop
cmp
pushf
or
mov
xchg
es
ljmp
in
imul
xchg
mov
stos
sub
mov
dec
in
dec
pop
stc
filds
xor
sub
filds
xchg
or
inc
lods
push
jge
lods
ja
hlt
enter
notl
jmp
lcall
xlat
xor
add
pop
aaa
sub
xchg
mov
rolb
stc
and
fistl
aad
jmp
cmp
or
ja
test
cltd
movsl
xchg
popa
push
pop
test
xor
inc
mov
push
addr16
mov
or
pop
or
adc
out
xchg
xor
inc
adc
jo
and
inc
and
shrb
pusha
pop
sbb
dec
inc
adc
test
add
fildl
mov
icebp
cmp
fwait
cmp
cmp
and
inc
mov
gs
adc
popf
sub
ljmp
cltd
sbbb
pop
push
jmp
es
loopne
out
mov
xchg
pushf
scas
jmp
jmp
out
add
mov
mov
mov
lods
repz
or
rolb
and
cmpsl
shrl
popf
and
mov
in
push
icebp
jmp
push
xchg
and
add
pop
jns
call
aad
xor
jb
loop
cmp
ret
sub
xor
mov
jne
out
adc
scas
mov
push
xor
cltd
jg
shll
sahf
lods
arpl
test
sub
ret
mov
pop
xchg
jb
outsb
call
inc
imul
movl
int
mov
rcr
ljmp
fdivs
fnstsw
stos
stc
daa
jae
sbb
mov
clc
daa
enter
je
cmp
mov
movsl
cmc
into
pop
sbbl
dec
bound
cmp
mov
lods
adcb
nop
in
cld
out
mov
jb
push
adc
or
fbstp
pop
test
ds
sub
lret
insb
mov
adc
sub
mov
fisubl
sub
enter
jbe
rorl
mov
inc
add
sbb
inc
nop
mov
aas
in
or
jnp
adc
cs
mov
subl
lcall
push
pop
mov
pop
mov
cmp
pushf
xchg
sub
shrl
sbb
or
rcrb
sbb
jge
cmp
shr
ds
cld
call
stos
movsb
add
nop
sub
mov
pushf
add
push
out
dec
mov
jecxz
es
cld
jg
cld
xchg
pop
sbb
repnz
xchg
mov
loop
push
sbb
rolb
cwtl
hlt
andb
ja
mov
xor
fs
int3
adc
mov
gs
pop
or
insb
out
pop
or
movb
push
inc
lret
fstpl
inc
sbb
jbe
inc
cs
jle
lock
add
add
mov
add
mul
mov
clc
insb
insl
pop
cmp
fisttps
movsb
arpl
out
xchg
jbe
push
fcoms
xchg
popf
add
sub
sub
mov
clc
mov
imul
xor
fmuls
movsb
cmpsl
mov
pop
push
aaa
jnp
push
nop
pop
and
jge
push
jp
add
dec
into
jo
sbb
lods
fstpl
es
inc
cmp
push
inc
pop
add
mov
xor
addr16
fcomps
fldenv
add
push
repnz
fwait
and
fisttps
xor
aas
in
and
leave
jg
mov
testb
into
pop
sbb
aam
mov
dec
pop
adc
dec
sbb
rcll
jnp
fdivl
jp
bound
sub
push
sbb
and
fs
jg
es
jl
jecxz
pop
in
xchg
mov
add
pop
cmp
xor
adcb
std
lds
inc
xor
inc
or
or
xor
fwait
sbb
pop
and
cmp
int3
cmpl
mov
push
insl
rcrb
test
dec
clc
scas
rorl
jne
int
sub
mov
xchg
fcomps
mov
push
or
xchg
arpl
or
or
loopne
pop
jo
push
stos
je
cmp
aad
mov
rorl
inc
inc
jl
test
or
adc
push
mov
les
fimuls
pop
mov
lods
icebp
sbb
mov
icebp
subb
movsb
and
jns
or
inc
inc
mov
les
sti
sub
jns
mov
dec
in
xor
sub
pop
movsl
xor
insb
jae
xor
sub
pop
cmpb
and
psllq
in
loop
loopne
ss
hlt
popa
movsl
mov
outsb
inc
xlat
bound
or
outsb
in
in
pop
into
les
and
fs
jp
decl
cmpsl
mov
into
cmp
xor
enter
dec
mov
pop
push
jl
fidivrl
sarl
stc
sub
adc
loop
lock
or
notl
dec
lods
xor
popa
xchg
xchg
add
movsl
arpl
jno
nop
movsl
adc
test
mulb
and
insb
or
pushf
out
dec
fmuls
mov
fildl
jle
dec
push
popa
cmpsb
roll
mov
adc
mov
jbe
push
sbb
fidivs
jae
jbe
pop
cmc
ficoml
mov
icebp
lods
push
add
divb
jl,pn
pop
mov
cmp
jp
jmp
movsb
fsubrs
add
sbb
mov
xchg
std
mov
mov
sbb
xchg
ret
data16
sbb
sub
push
push
dec
aad
jmp
out
aaa
test
dec
pop
gs
nop
roll
and
inc
stos
pop
outsb
mov
cs
sbb
xchg
imul
orl
xchg
ja
lods
cmpsb
minps
aam
inc
dec
jp
pop
lods
or
or
insl
cs
int3
xchg
sub
sbb
ja
add
jbe
lea
inc
std
aaa
and
testb
ret
dec
adc
pop
jns
jo
sti
inc
mov
mov
sub
mov
inc
jg
push
outsb
lret
scas
jge
xchg
xchg
adc
test
pop
aad
cmp
or
roll
mov
popa
adc
push
outsb
xor
dec
pop
cli
xchg
enter
stc
xchg
rcll
cmpsb
jne
pop
popf
or
mov
sub
pop
mov
xchg
inc
xor
or
mov
dec
fsubrl
cmp
fadd
mov
daa
mov
jb
jmp
jno
jg
cwtl
jg
lahf
mov
jb
xchg
into
xchg
xor
int3
pop
ljmp
sub
mov
add
ret
sbb
jge
lods
in
orl
daa
xor
daa
imul
pop
filds
adc
rclb
add
ljmp
arpl
cwtl
add
push
data16
addr16
fwait
in
xchg
and
pop
jle
pusha
mov
lret
ficomps
xchg
maskmovq
testl
test
add
or
movb
xor
fnstsw
pop
xor
xor
outsl
iret
dec
mov
aad
lret
sbb
push
lea
jno
add
or
mov
mov
imul
fdivrs
add
ds
mov
sbb
mov
inc
pop
jp
xchg
mov
cmpl
cli
mov
add
insb
pop
mov
jnp
and
cmp
xchg
sub
pusha
ljmp
inc
lea
cmp
ljmp
test
shll
ss
xchg
sbb
movsl
leave
cmp
call
cmpsl
ds
test
aas
fcoml
clc
pop
sub
cltd
mov
div
aam
test
fsubs
les
lds
cmp
out
sbb
movsb
push
daa
mov
fidivrl
mov
cmp
rolb
hlt
inc
das
xor
int3
add
adc
xchg
lock
out
es
repz
pop
lahf
divl
pop
sub
stos
cmp
call
pop
mov
inc
inc
cmp
leave
or
mov
sub
mov
adc
cld
test
hlt
inc
in
in
std
cmp
les
jmp
int
stos
lret
orl
jecxz
mov
fwait
outsl
pop
ret
xlat
divl
ret
clc
cmpsl
pop
fwait
add
push
mov
outsb
js
aad
cmp
add
cmpsl
ret
mov
xlat
call
pusha
loop
cmp
jecxz
cld
inc
arpl
inc
enter
fbld
insb
pop
push
add
cmp
cmpsl
mov
sbb
clc
mov
dec
adc
mov
mov
inc
sbb
es
push
sbb
push
shlb
sub
imul
cmp
stos
in
jge
fnsave
in
lcall
pop
nop
adc
mov
adc
mov
shlb
jbe
inc
pop
faddl
popf
aas
add
ret
ficoms
inc
jb
bound
fsubs
enter
cmp
jmp
call
and
inc
cltd
push
push
pop
outsl
sbb
xchg
xchg
cld
mov
aas
jne
leave
xor
addr16
cmp
xor
jg
pusha
fbstp
xor
sub
movsb
push
das
rorb
add
mov
iret
add
jno
and
jne
gs
pop
das
xor
inc
fisttps
pop
ss
scas
push
inc
ficompl
push
popa
pop
aaa
dec
iret
pop
sbb
loop
fcompl
insb
push
inc
dec
test
mov
cmpb
arpl
and
shlb
xlat
ficompl
adc
inc
and
stc
dec
xchg
push
lea
icebp
adc
cmp
insb
data16
testl
sbb
and
je
daa
lahf
mov
lcall
cwtl
mov
pop
out
pop
cli
mov
and
gs
outsl
dec
aam
pop
sarl
lds
fs
jbe
mov
add
imul
xor
fstpt
jp
dec
ja
into
dec
test
fiadds
pop
and
push
dec
push
in
test
or
add
xchg
or
inc
lret
or
mov
lea
mov
adc
aaa
adc
into
je
andl
cmp
cmpsl
inc
cmp
pop
mov
in
push
into
push
mov
adc
xchg
lea
ss
out
dec
xchg
fimuls
mov
dec
pop
inc
lret
push
xor
mov
dec
add
cmp
repnz
fnstsw
ja
inc
sahf
test
mov
imul
xor
pop
addr16
jo
sub
adc
fnstcw
insb
inc
jbe
cmc
fsubrl
addb
xchg
inc
mov
sti
pop
inc
pop
lcall
jle
pop
jp
push
mov
xchg
dec
xchg
mov
sub
mov
jecxz
sub
negb
stc
popf
cld
arpl
into
test
push
in
das
rcrb
push
stos
into
pushf
fldenv
add
stos
jle
std
sbb
andl
push
mov
aaa
mov
lods
push
scas
sub
repz
into
ret
iret
shl
xchg
lods
daa
andl
jae
and
jmp
jno
add
cmpsb
pop
sub
pop
cmpxchg
pop
fidivrs
cltd
push
sbb
lahf
jecxz,pt
mov
test
loopne
sub
xchg
out
cmp
fcomp
test
inc
sub
sbb
neg
scas
pop
nop
icebp
lods
adc
lret
adc
gs
pop
sub
xchg
pop
vcvtpd2qq
fdivrs
mov
push
ss
repz
enter
sbb
adc
imul
sub
sbb
aas
call
gs
imul
and
scas
push
pop
or
dec
insb
sbb
xchg
mov
cmp
or
sub
xchg
loopne
js
jg
pop
jl
leave
mov
sub
movsl
mov
inc
or
out
pmulhuw
test
fisttps
mov
xchg
into
xchg
and
fstpl
inc
lea
sti
mov
loopne
std
adc
out
in
pop
cmc
in
shl
sbb
in
ror
daa
xor
mov
pop
mov
jg
or
into
std
mov
push
ds
dec
push
inc
pushl
aad
mov
pop
stos
inc
cs
mov
loop
xchg
iret
push
dec
call
test
int3
push
inc
outsl
inc
add
xchg
push
loop
call
xor
pop
or
xchg
mov
test
xchg
dec
push
cmp
fimull
pop
add
lret
rcrb
das
test
inc
bound
mov
xor
flds
sbb
sub
rclb
push
mov
call
or
mov
xchg
mov
popf
add
xchg
lahf
jo
lret
iret
push
add
in
or
mov
inc
stc
adc
xchg
lods
mov
add
out
cmp
ror
inc
jb
movsb
cmp
push
sbb
repnz
sub
pop
jne
sub
aaa
push
fcmovu
jmp
inc
hlt
add
and
xor
dec
pusha
pop
shlb
jle
and
cmpsl
stos
ljmp
in
jp
cmpsb
or
imul
imul
out
testl
stc
pusha
xchg
clc
add
mov
inc
lahf
std
aas
lods
mov
and
lahf
mov
enter
or
or
jl
sub
jns
mov
pop
pop
jbe
jne
mov
filds
jp
mov
inc
adcl
cs
lret
or
and
iret
sbb
fdiv
jl
push
out
cmp
pop
sbb
mov
pop
in
sbb
int3
xchg
outsl
add
inc
pop
adc
subl
adcb
cltd
stos
ljmp
push
push
lds
test
adc
imul
lret
pop
lods
fistps
int
dec
mov
ljmp
lock
push
mov
sti
ficomps
mov
std
or
cmp
and
xor
and
mov
jae
addr16
push
lods
push
test
dec
fidivl
xchg
push
lock
push
inc
lds
div
sub
push
jbe
mov
inc
xor
push
cmpl
pushw
add
fadds
jns
mov
or
push
xchg
popa
jo
sub
popf
jne
les
cld
es
cltd
rolb
pop
xor
push
mov
movsb
push
jg
jmp
repnz
xchg
cltd
jbe
inc
pop
fwait
adc
xor
or
rolb
cmp
pusha
push
scas
lret
sbb
jb
sbb
inc
out
into
adc
mov
cwtl
popa
and
jae
sub
xor
ds
jmp
mov
push
lds
mov
das
lcall
je
jae
adc
rolb
adc
les
add
ficompl
insb
jbe
push
mov
loope
mov
sbb
xlat
aad
out
add
mov
inc
sti
xchg
sbb
aad
clc
jns
mov
test
sti
cmpb
cmpl
pushf
pop
hlt
lcall
les
mov
mov
cli
push
aas
clc
pop
adc
xor
lret
ds
pop
cmp
aam
pop
inc
cmpsb
loopne
inc
mov
cmp
jo
in
cmp
hlt
mov
add
fs
clc
push
aam
fstpt
sub
je
in
movsb
imul
sub
mov
and
out
jmp
lea
sbb
loopne
int
lods
push
cmpsb
shrb
lret
dec
mov
mov
addb
dec
outsl
out
test
cltd
mov
in
jmp
dec
cmp
repnz
fdiv
inc
mov
or
and
mov
mov
pop
jl
cmp
xchg
add
repz
inc
lahf
nop
dec
add
jl
xor
push
insb
sbb
add
cltd
jp
negl
cmc
add
mov
test
outsl
mov
jg
jnp
ret
add
fstpt
movl
sub
nop
cmpb
popf
repz
adc
repnz
jne
dec
clc
lods
mov
into
mov
push
call
mov
mov
xor
xor
inc
cld
and
mov
and
mull
outsb
movsl
and
push
leave
xor
cltd
sbb
rcrl
dec
cmpsb
sub
sbb
out
fisttpll
adc
in
push
inc
ja
push
pop
mov
sub
shl
and
std
cmp
sub
mov
dec
lock
adc
xchg
jle
out
fisttpll
mov
lds
dec
repz
inc
das
push
popa
in
xor
mov
popf
lret
inc
subb
sbb
sti
leave
imul
test
cmp
mov
mov
inc
mov
int3
sub
add
or
imul
push
push
pop
jmp
xor
fldt
sbb
ror
movups
sub
sbb
mov
dec
les
stc
cmp
mov
out
dec
hlt
js
cli
jno
mov
aaa
in
lods
pop
and
fisubs
cmp
daa
pop
add
data16
insl
cmp
or
scas
jns
aam
jns
les
pop
scas
lahf
or
dec
sub
dec
add
repz
mov
cmp
adc
jno
mov
daa
cs
dec
push
shlb
mov
mov
adcb
imul
or
fwait
cmp
fs
mov
adc
sbb
pop
sub
dec
shrb
cld
xchg
jno
icebp
mov
cwtl
push
push
xlat
fstp
mov
sub
push
in
out
in
push
pop
push
imul
jb
lock
test
notb
jmp
ficoml
push
movsb
movsb
cmp
mov
sub
inc
or
ret
fcomps
testb
inc
arpl
mov
pop
inc
or
fs
mull
es
push
loope
sti
mov
and
mov
push
mov
pop
arpl
aam
leave
mov
inc
test
adc
mov
xchg
inc
popa
mov
dec
outsl
inc
sbb
xor
test
push
or
sbb
hlt
aam
adc
into
pop
lret
mov
loope
shl
scas
fildll
jne
into
out
mov
stc
stos
fnsave
insb
dec
in
add
xchg
in
out
cmp
nop
test
adc
cmpsl
jmp
mov
shrb
js
jae,pt
fistps
out
xchg
ret
repz
dec
pop
adc
jb
out
mov
into
fwait
in
insl
out
cwtl
adc
ffree
or
fsubr
fsubrs
pushf
push
cmp
jg
scas
xor
push
fsubr
jle
xor
push
imul
adc
jnp
into
push
jnp
test
ret
and
fildll
adc
das
out
lock
inc
add
mov
sbb
mov
and
int3
pop
jecxz
xchg
in
pop
add
arpl
sbb
or
xor
dec
add
test
shr
mov
add
mov
scas
lock
push
jl
pop
lret
pop
test
imul
push
sub
adc
and
arpl
cmp
sub
jae
cmp
pushf
aas
mov
popf
iret
enter
cmp
sti
idivb
fwait
dec
lret
ss
and
in
pop
scas
mov
rcll
movsl
sub
mov
daa
xor
cmp
out
dec
pop
mov
es
and
lcall
adc
aad
cmp
fwait
rcrl
mov
add
lods
mov
mov
aam
insl
add
cltd
aad
aad
or
push
es
mov
or
dec
pop
fwait
inc
repz
xchg
push
push
mov
insb
inc
mov
fimull
push
mov
sub
loop
repnz
les
test
mov
pop
add
cltd
sub
xchg
fwait
stos
lahf
mov
stos
xor
stos
lods
stos
outsb
pop
fisttps
jecxz
dec
add
sbb
fwait
in
scas
ret
jbe
mov
outsl
fld
push
xor
or
xchg
sbb
jmp
cmpsl
jnp
cmpsb
xlat
stos
jle
int
int3
enter
xchg
cli
add
sbb
nop
pop
mov
sahf
div
cmp
push
adc
jno
fs
mov
mov
inc
push
xor
pop
negb
ds
insl
loopne
sub
aam
in
stos
jmp
adc
sub
jo
or
loope
rcl
mov
push
mov
addb
ficoml
aam
xor
inc
cmp
inc
mov
pop
or
repnz
fcmovnb
test
stos
mov
lret
fs
icebp
into
dec
pusha
mov
xchg
pop
sbb
jae
rol
es
cmp
xor
pop
cmp
xchg
out
push
das
rcrl
psubq
ret
jg
mov
or
clc
sub
cmc
daa
or
push
lahf
stc
pop
mov
xchg
ja
ljmp
fsubrs
xchg
jge
data16
in
or
mov
mov
mov
iret
stc
lock
rcrb
xor
popf
xlat
outsb
mov
and
add
stc
xchg
bound
mov
xchg
cmp
loope
std
cmp
mov
inc
pop
shll
data16
push
xlat
mov
sbb
fsubp
cmc
mov
imull
add
movsl
lret
outsl
popa
jb
mov
stos
jno
add
pop
das
and
mov
xchg
fmulp
cmpsl
push
pop
ljmp
push
scas
scas
ss
mov
sub
movsb
push
imul
or
arpl
shrb
aaa
jge
and
in
les
xor
pop
pop
adc
or
daa
mov
ret
stos
mov
sbb
decb
ret
cmp
ficompl
out
sbb
mov
mov
shl
add
imulb
pop
mov
sbb
jns
jmp
or
xor
dec
ljmp
sub
add
fcmovnbe
loope
and
sub
xor
arpl
cmc
in
cmp
mov
jp
cmp
lods
cmp
jp
shlb
pop
mov
mov
repz
out
out
lret
fwait
or
sub
mov
dec
and
jnp
outsl
ljmp
jb
dec
dec
jge
xorl
test
xchg
cld
mov
mov
dec
lods
push
push
push
pop
fadd
std
ja
fs
lock
dec
repnz
outsb
dec
iret
inc
movsl
mov
inc
ljmp
outsl
aam
mov
adc
scas
and
outsb
and
dec
ret
outsl
mov
sbbb
mov
pop
jge
sbb
test
jmp
mov
jp
xchg
movl
inc
add
jle
lret
jae
outsl
jmp
ljmp
or
mov
push
cmp
enter
cmpsl
add
pop
and
cmpl
sbb
inc
icebp
pop
pop
or
mov
filds
stos
or
mov
push
es
inc
sub
push
or
movsl
outsl
adc
push
sbb
jmp
push
mov
nop
add
pop
sbb
push
xchg
fnstsw
adc
mov
repz
sub
lahf
pusha
test
jp
enter
mov
cmp
jp
fldcw
in
dec
adc
mov
and
packsswb
fimuls
and
mov
stos
sub
and
dec
call
mov
clc
cs
pop
movsl
aas
scas
cmp
jle
xor
es
imul
subl
jmp
mov
pop
pop
icebp
fcomp
lods
dec
jp
inc
cmpsl
push
ror
sub
mov
and
rcrl
int
adc
push
sub
lds
sbb
sub
movsl
js
and
and
loope
les
jp
add
xor
cs
int
pusha
leave
mov
out
jns
sub
mov
std
imul
ficomps
lods
add
adc
sbb
js
jns
cwtl
sbb
movsb
test
pop
in
cmp
xchg
test
push
mov
cmc
in
lods
les
hlt
push
insb
inc
push
mov
or
dec
pop
ljmp
mov
cld
int3
icebp
insl
call
test
sbbl
add
fs
outsb
sub
loope
mov
sub
and
test
and
xor
xchg
xchg
and
mov
fsubrl
aam
cmp
test
pop
push
mov
sarb
add
add
movsl
rorl
aad
lock
stos
scas
mov
sarb
xor
cmpsb
jbe
and
in
cmc
sbbl
loope
push
clts
push
mov
adc
pop
ror
roll
mov
push
decb
add
xor
ja
inc
stos
dec
jl
jmp
jecxz
inc
xor
daa
push
inc
lock
inc
mov
xor
xchg
adc
jns
lds
push
jp
mov
mov
xchg
sarb
out
lods
inc
scas
mov
fmul
out
lcall
out
addr16
add
pop
mov
or
xor
fidivl
fstpl
repz
lret
mov
ror
sbb
gs
iret
xorb
jb
fidivs
xor
cmp
xchg
lds
dec
movsb
lahf
xchg
iret
push
cmp
add
sbb
mov
push
or
ljmp
xlat
sti
sbb
sti
pop
cmp
fcmove
dec
pop
push
adcl
movsb
push
aas
fs
pop
ret
push
sahf
int3
pop
icebp
cs
mov
mov
in
adc
std
push
pushf
sbb
cmp
es
cwtl
aam
scas
out
pop
mov
sti
gs
shlb
push
mov
out
add
jns
lods
add
mov
int3
leave
js
data16
roll
push
mov
jnp
pusha
mov
mov
mov
pop
icebp
push
ja
jge
daa
mov
sub
inc
push
std
or
jbe
and
xchg
fsubr
and
cmpsl
push
jp
add
aad
bound
shr
mov
pop
js
jle
xlat
jg
out
popf
fs
movsb
jno
mov
mov
fdivs
xchg
push
sub
xchg
xchg
fwait
add
aad
mov
mov
and
inc
push
pop
test
mov
icebp
and
xchg
in
lret
mov
es
dec
cmp
pop
cmp
inc
sti
pop
jns
fisttps
aaa
mov
inc
add
outsb
lcall
jnp
in
and
pop
jmp
icebp
jne
filds
in
mov
stos
fnstenv
mov
fidivs
or
jmp
cmc
stos
scas
lret
fistpll
leave
pop
neg
fisttpll
sub
ss
adc
or
jnp
add
iret
inc
nop
xchg
xchg
arpl
fld
xlat
int
or
pop
push
clc
dec
sbb
or
test
testb
inc
sbb
sbb
cmp
sub
test
repnz
cs
xor
sub
lods
dec
and
sti
imul
stos
xor
inc
aas
pop
stos
loope
xor
pop
xor
push
ss
adc
jne
subl
cld
adc
cs
pop
mov
int
js
xchg
sti
out
xchg
dec
xor
scas
jle
push
enter
mov
addr16
stc
push
xlat
mov
xchg
pop
ljmp
scas
sbb
pop
inc
mov
adc
addr16
push
mov
sub
out
pop
int3
das
mov
insl
je
ds
rcr
xchg
mov
movsl
sbb
xor
inc
in
push
std
faddl
rorl
loop
push
push
mov
das
das
bswap
xchg
push
lods
cmp
dec
dec
cmp
adc
movsb
lea
push
out
je
ljmp
insl
int3
test
xlat
pop
sub
out
pop
cmp
es
dec
fbld
jge
adc
roll
imul
pop
ret
add
push
scas
and
clc
or
cmp
out
pop
sti
mov
or
into
push
xor
int
push
test
lea
cmp
ljmp
add
and
fnstcw
rcl
out
xchg
xchg
and
std
pop
loopne
push
loope
dec
pop
cmc
jl
pop
fs
sub
jnp
sahf
pushf
adc
movsl
mov
lods
push
lods
jg
in
shll
sub
fwait
xchg
sarl
addr16
pop
mov
sub
ds
pushl
lcall
lods
loopne,pn
mov
and
loopne
shrb
jbe
int
test
cmp
in
nop
xchg
int
outsl
push
das
push
push
clc
jbe
orb
adc
aam
jae
cs
xlat
fcoml
jns
pushf
into
or
leave
xchg
pop
fidivl
sbb
decb
push
xchg
jno
aam
sbb
jecxz
jbe
movsb
push
inc
jecxz
movsl
push
int3
pop
lahf
mov
in
xor
jnp
shlb
outsb
out
js
xchg
jae
orl
xor
mov
cmp
xchg
scas
fwait
daa
sub
xchg
xchg
inc
pop
pusha
insb
flds
sbb
and
addr16
jno
cmp
mov
push
ja
mov
test
pmulhuw
addr16
mov
jo
jae
cmp
fsubl
pusha
mov
inc
mov
lret
push
std
outsb
or
out
in
loope
xor
out
repnz
or
mov
sub
outsl
cmp
adc
adc
xchg
dec
pop
and
cmp
push
sub
xchg
test
sbb
sahf
pop
push
jl
cmp
mov
lods
cmp
mov
aad
lds
daa
cmp
fcomps
pop
shld
jns
or
dec
lock
mov
in
movsb
or
pop
jge
push
aam
adc
fbstp
xor
test
decb
xor
pushf
xchg
jge
int
add
xchg
jns
fnclex
test
sub
std
cli
out
adc
xor
int3
das
movsl
aad
adc
push
mov
cmp
jle
push
or
in
pop
jp
in
pop
scas
in
jno
shl
fadd
jns
jmp
test
sbb
mov
dec
int
pop
inc
imul
xchg
inc
add
cmpsb
jecxz
lea
leave
mov
cmc
xchg
xchg
or
xchg
mov
popl
jmp
xchg
mov
push
sub
xchg
cld
notb
push
fildl
sar
mov
mov
cli
xchg
or
xchg
pop
stc
imul
cvtps2pi
jl
cli
push
dec
je
popf
inc
mov
cmpb
imul
dec
dec
into
xchg
je
mov
into
jne
popa
adc
sub
icebp
es
stc
sti
xchg
in
dec
outsb
adc
pop
push
inc
xor
gs
scas
stos
outsl
ss
push
cmp
out
push
movsl
in
pop
mov
mov
sarl
shll
xor
shlb
mov
lea
popf
add
lods
jp
xchg
jae
and
in
mov
popf
lret
and
cli
cmp
imul
mov
adc
int
stos
stos
pop
lret
mov
pop
sarl
stos
fnstsw
das
sbb
orb
mov
pushf
mov
xor
nop
jae
xchg
in
xor
jbe
lds
cs
mov
js
test
subb
rorb
mov
dec
dec
sbb
loopne
lret
add
mov
push
sub
xchg
push
mov
cmpsb
out
push
mov
pop
lahf
push
cmp
and
mov
add
lods
sub
sti
dec
or
push
sub
popf
cmc
mov
ret
push
cltd
or
in
xor
rcl
jecxz
sti
daa
loopne
inc
shr
inc
ret
popw
das
or
imul
cmp
pop
jge
jmp
adc
int
add
adc
stc
or
cmp
sub
ja
fsqrt
add
fnsave
mov
xchg
std
daa
hlt
testl
jb
mov
mov
xchg
jae
out
outsb
push
and
out
push
push
mov
pop
mov
lods
xor
addl
outsb
add
push
and
mov
lock
jno
popa
dec
int
adc
dec
mov
lcall
mov
stc
gs
jl
movsb
stos
and
jns
sub
subl
sub
fcmovbe
mov
push
push
popa
inc
mov
cmp
inc
xor
lods
cmp
fwait
and
jp
jecxz
mov
sub
pop
push
or
adc
lock
adc
rclb
aam
cmpsl
adc
fiadds
fldenv
jnp
add
loope
imul
push
loop
adc
push
stos
shlb
pop
cmp
add
xor
mov
pushf
out
leave
push
dec
dec
repnz
test
test
cmp
mov
xor
xchg
jbe
mov
stc
inc
adc
mov
jg
sub
cmc
icebp
mov
lret
popa
leave
cs
lea
push
add
call
inc
xchg
sub
jne
xchg
ja
ja
push
push
push
xchg
in
sbb
sbb
jne
movsl
push
mov
xchg
subb
scas
xorb
ds
mov
lahf
sbb
daa
sbbl
dec
das
pop
mov
mov
jmp
das
les
or
aas
pop
push
xor
jl
enter
adc
mov
jb
sub
hlt
pop
cwtl
gs
and
xlat
xchg
cwtl
loop
pop
jp
push
push
jne
fldt
testb
xor
icebp
iret
mov
pop
jae
daa
ljmp
rclb
setg
push
insl
xchg
jg
xor
cmpb
pushf
xchg
in
maxps
std
sub
inc
lea
ss
mov
mov
jl
adc
pop
jl
out
mov
ret
fists
sbb
xchg
and
stos
aaa
in
pop
jne
cmp
test
lock
scas
adc
cmp
and
xchg
popa
xor
out
ljmp
xor
adcb
popa
fsubrl
xor
pushf
out
pop
cli
push
inc
dec
xor
das
stos
aaa
and
scas
jp
mov
push
jno
cmpsl
jbe
sub
mov
stc
les
inc
jne
lods
test
stos
pop
cmp
lahf
test
mov
hlt
xor
aas
hlt
cmpsl
cmp
dec
mov
push
sub
iret
adc
dec
and
andl
fstps
mov
in
pop
pop
arpl
incl
lea
fisttps
bsf
addr16
fldt
loopne
jb
dec
sub
push
push
loope
mov
dec
inc
mov
or
and
jae
mov
xorl
jae
jp
sub
adc
popa
mov
mov
cli
loop
daa
xchg
xchg
cmpsl
and
orl
xchg
cmp
mov
lods
dec
xchg
mov
inc
pop
ss
fisubl
cs
jl
out
xlat
cli
push
repnz
cmp
adc
frstor
push
dec
repnz
movsb
mov
out
arpl
add
cmc
insl
rorb
cs
dec
scas
add
inc
call
in
frstor
mov
popl
cld
mov
and
cs
sbb
into
and
arpl
sub
sub
sub
mov
xchg
shl
push
add
shll
out
lcall
pop
adc
jne
sub
lods
mov
jmp
inc
out
xorl
push
dec
in
lods
mov
mov
stos
rcrb
xchg
xor
bnd
mov
pop
dec
add
or
daa
pop
fisubl
mov
mov
mov
addb
dec
mov
insb
enter
enter
in
jge
xchg
test
fnsave
ja
gs
sub
stc
xorb
lret
std
xchg
and
dec
aad
test
test
inc
mov
nopl
insb
mov
in
xchg
cmp
out
das
addr16
inc
xchg
or
sub
arpl
dec
jns
xorb
xchg
add
imul
xor
arpl
in
sar
fnstcw
jl
mov
mov
mov
push
loopne
repz
pushf
xchg
addr16
movsb
inc
in
cmpsb
cld
pop
xchg
mov
push
xor
shll
adc
pushf
sbb
aam
cmpl
xchg
jl
sti
bound
pop
and
sbb
jne
jb
lock
lret
out
adc
aas
or
pop
sub
out
mov
sub
jmp
cmp
mov
repnz
test
sbbb
jbe
push
sti
int3
pop
fidivrl
cmc
aaa
and
xchg
cmp
aas
sbb
fdivrl
dec
es
mov
cmp
mov
lret
dec
add
xchg
or
je
dec
add
testb
call
pop
gs
idivb
arpl
pop
dec
dec
adc
dec
cmp
xor
jmp
in
jae
sbb
movsl
mov
lret
mov
inc
insl
xlat
xor
mov
xchg
push
push
xchg
into
or
movsl
adc
addr16
xchg
push
cs
xchg
mov
shll
or
xor
imul
push
sbb
mov
sub
or
cmp
jle
inc
fwait
repz
adc
push
fcomi
shrb
ds
adc
pop
sbb
cli
fcoml
mov
aam
fdivl
scas
into
or
outsl
pop
stc
in
jne
mov
lahf
ds
xorl
push
leave
repz
jb
iret
outsl
push
xchg
stos
iret
loope
and
mov
call
cmpsb
dec
mov
mov
faddl
imul
add
inc
push
lock
sbb
loope
pushf
sub
mov
mov
popa
lret
cmp
inc
repz
rolb
dec
incb
cwtl
add
mov
insb
int
in
lds
push
cltd
adcl
pop
loop
mov
daa
fistpl
push
out
dec
mov
xorb
jg
jo
mov
testl
leave
in
leave
add
hlt
mov
sub
negb
dec
imul
jo
ljmp
and
fstpl
scas
js
inc
nop
mov
cld
and
xchg
push
pop
sub
mov
jnp
icebp
mov
xor
jmp
mov
lock
imul
cmpsb
cltd
inc
pop
jo
add
mov
int
cmp
sbb
enter
pop
cmpl
sbb
stos
cs
call
imul
imul
mov
sahf
xchg
minps
mov
aad
aaa
jbe
cmp
xor
rorl
fwait
xchg
enter
and
xlat
push
cmpsl
fdivl
sbb
mov
iret
xor
or
pop
sub
ss
test
xchg
je
cmp
push
pop
dec
repz
sbb
cmpl
xchg
popf
pop
adc
push
ljmp
jg
mov
inc
adcl
cmpsl
mov
cmp
or
cld
pushf
jp
and
nop
into
cs
lret
mov
sbb
ss
ds
xchg
pop
loope
sbb
xchg
and
das
mov
push
and
push
jno
aaa
cwtl
inc
fstp
pop
popf
fnstsw
xchg
sub
loopne
push
outsl
jmp
adc
int
pushf
pop
inc
repz
ja
int3
call
fcomps
xchg
add
jmp
repnz
out
push
call
lea
enter
push
dec
lahf
lods
in
mov
or
insl
ja
fisubrs
daa
push
popa
mov
add
lret
cmpsl
ret
ds
lret
ret
rorb
add
les
add
pushf
cmp
add
imul
bnd
xchg
mov
aam
ja
imull
popf
push
dec
das
jo
in
fldenv
mov
sub
cmpsl
sbb
add
aas
pop
xchg
outsb
lahf
push
popa
mov
and
sar
dec
pop
test
pop
hlt
cmpsb
adc
rorb
lods
inc
sub
dec
lret
add
dec
sahf
jno
dec
mov
jne
inc
ror
repnz
rcll
pop
fcoms
repnz
inc
xor
mov
push
cli
dec
and
lret
in
aad
mov
out
lahf
addr16
mull
enter
push
push
outsb
push
ds
loop
pop
xlat
mov
test
int3
and
test
dec
push
xchg
fs
iret
mov
out
add
and
add
int3
loopne
xchg
test
daa
lods
into
or
mov
cwtl
lahf
jbe
mov
cmp
dec
xor
mov
testb
push
in
stos
pop
dec
out
mov
jecxz
iret
inc
loope
clc
mov
inc
mov
sub
xor
push
in
insb
outsl
push
or
sbb
hlt
mov
cmp
cmp
shrl
jnp
fisubs
orb
jbe
adc
mov
or
xchg
add
inc
imul
inc
xchg
mov
mov
jp
mov
lods
clc
iret
cmp
mov
mov
push
jo
fs
pushf
pop
sahf
sbb
mov
in
xchg
movsb
jnp
out
pop
sbb
mov
xorl
out
loope
ret
insb
pop
daa
cltd
or
pop
mov
jb
ss
stos
xchg
push
aaa
outsb
adc
add
popf
notb
mov
mov
loop
mov
rclb
movsb
mov
lods
test
scas
jmp
jg
dec
movsb
pop
es
stos
sub
out
bound
xor
fadd
jo
fistpl
outsb
jbe
jle
jmp
fdivr
mov
jno
xchg
sbb
mov
add
aaa
sub
jno
std
push
cltd
sub
dec
lods
cmp
aaa
scas
cmc
inc
emms
sbb
in
push
clc
sub
adc
mov
addb
adc
jno
stos
icebp
sti
adc
pop
sbb
add
fistpl
pop
mov
leave
sbb
ljmp
lods
sub
fs
les
push
mov
les
dec
into
mov
stc
mov
mov
mov
loope
push
lods
cmpsl
enter
popa
cmpsl
scas
fimull
mov
jb
movsl
insb
push
xor
lds
shll
int
pop
xchg
push
or
sbb
and
mov
divb
repz
pop
mov
sbb
xchg
incl
aad
lods
in
rol
xor
xchg
xchg
nop
test
adc
repnz
mov
cltd
mov
into
add
iret
data16
imul
imul
mov
mov
sub
mov
fsubrl
shrl
or
mov
push
jmp
fs
mov
inc
mov
mov
push
mov
pusha
xor
dec
mov
cmpsb
inc
ret
cmc
mov
sahf
into
incb
in
and
clc
adc
incb
jl
xor
int3
mov
fstpl
ret
in
sub
scas
imul
mov
jno
or
scas
jmp
sahf
sbb
das
mov
push
lret
clc
vandnps
xor
fisttps
jge
ficompl
and
adc
popa
popa
jge
cmp
int
mov
adc
pop
sbb
cmc
gs
cs
in
int3
mov
add
test
in
adc
leave
adc
dec
call
push
sti
insb
sub
jp
outsb
cli
jl
sub
lahf
fcompl
es
lea
int3
pushf
inc
add
push
shlb
jb
loop
loop
push
int3
test
je
jp
loopne
inc
push
iret
roll
dec
pop
and
sbb
fstpt
out
fs
outsb
lock
gs
mov
pop
push
dec
mov
sbb
push
push
push
aas
pop
insl
aaa
jg
xchg
xchg
push
notb
out
aas
lods
mov
aas
mov
xchg
mov
std
push
and
xor
sub
and
add
add
jecxz
jnp
and
fdivrl
aad
ret
push
xor
ret
fistl
cld
mov
das
and
pop
fstp
bound
cwtl
fdivrl
test
or
adc
movsl
lret
cmpsl
dec
fucom
pop
inc
hlt
mov
xchg
push
pop
es
fisubs
cmpsb
cli
cmpsl
mov
iret
arpl
dec
ljmp
mov
mov
andl
inc
sub
pop
int3
jno
test
pop
mov
sahf
inc
ss
push
mov
es
pop
pop
fldl
popa
rorb
mov
mov
mov
pop
insl
stos
in
lds
lods
and
ss
stc
pusha
inc
dec
cltd
inc
movsl
subl
cmp
std
xor
mov
xchg
movsb
push
ds
mov
push
test
ljmp
ficoms
mov
or
test
sub
lret
cmp
xor
cmp
pushf
addr16
xor
lods
push
add
std
sub
xor
jl
imul
pop
lds
bswap
pop
into
adc
push
or
movsl
loopne
aas
cmp
add
pop
test
imul
mov
push
xor
dec
push
rcr
push
les
clc
in
in
dec
repnz
addl
and
dec
scas
adc
xstore-rng
cmpsl
shr
mov
lret
push
push
sub
cmp
insb
sbb
push
pop
or
imul
inc
mov
sub
or
pop
push
mov
cs
jne
pushl
mov
mov
sub
add
xor
out
das
fstps
arpl
std
push
push
filds
stc
in
and
push
sbb
out
lds
testl
pop
mov
sub
or
outsb
je
xlat
stos
push
xchg
push
push
sbb
xlat
adc
and
scas
cmp
lods
mov
sar
lahf
enter
jg
inc
sti
jl
test
push
mov
loop
test
dec
ret
lahf
mov
lcall
or
pop
xchg
xchg
lahf
xor
sub
lcall
cmpsb
mov
sub
mov
xchg
ret
jnp
addl
repnz
cmp
sub
out
xchg
ret
repz
pop
jbe
roll
flds
mov
pop
in
and
out
sbb
sub
movd
and
cmpsl
push
insb
enter
mov
sbb
jl
sub
sbb
lahf
sti
lahf
cmp
push
aas
test
leave
jmp
fdivrs
jo
dec
push
xlat
sub
lcall
add
dec
cwtl
jno
ret
xchg
dec
inc
stos
and
inc
es
sarl
xchg
cmpsb
or
inc
xchg
or
call
add
adc
xorl
inc
popa
repnz
jp
cmp
mov
pop
data16
addr16
icebp
mov
sti
rcr
sbb
outsl
mov
scas
pop
inc
adc
cmc
sbb
xor
cli
jg
push
xor
fcoml
fcoml
and
nop
mov
cmpsl
adc
push
arpl
push
lea
lea
ror
jmp
lahf
xor
and
lret
notl
cmpsb
adc
inc
jmp
popa
loopne
xor
or
dec
imull
shrl
dec
jle
outsl
xchg
test
sub
sbb
test
rclb
push
lods
push
lea
jmp
in
test
dec
fsubrl
xor
notb
arpl
inc
xchg
jecxz
pushf
sbb
sub
pop
pusha
or
push
fmull
cmp
dec
test
mov
movsb
mov
subb
fldl
jns
or
push
ljmp
jge
int3
ficoms
dec
std
dec
adc
mulb
out
mov
cli
fwait
lret
fcomi
sbb
shll
or
insb
mov
aaa
aam
sbb
pop
pop
push
mov
mov
adc
arpl
xor
cmp
leave
nop
jae
or
sub
enter
add
imul
loopne
iret
lret
pop
sub
sub
shll
outsb
pop
int
bound
lds
mov
adc
add
adc
pusha
mov
jbe
cmpsb
push
mov
fists
and
jmp
inc
sbb
dec
adc
pop
pop
ds
xchg
cmp
sub
jae
cmc
pop
pop
nop
sbb
or
inc
pushf
jnp
add
mov
cmc
inc
xchg
fisubrl
dec
mov
lret
and
jns
xor
or
dec
arpl
lods
aaa
cmp
scas
sub
or
insb
mov
sti
push
sti
repz
movsl
push
add
fbstp
sbb
outsb
pushl
sub
test
push
movsl
xor
dec
sub
shr
pop
push
inc
out
repz
push
mov
mov
hlt
or
cwtl
gs
leave
popf
adc
andl
stos
cmp
sbb
lock
sbb
push
sbb
adc
outsb
xor
cmp
cmp
shrl
push
sub
mov
shll
insl
inc
pop
mov
push
popa
fmuls
leave
stos
testl
sahf
pop
push
or
push
stos
dec
popf
dec
cmpsl
aad
sbb
pusha
pop
movsl
sub
mov
addr16
loop
daa
add
push
divb
dec
test
jo
or
ja
cmp
in
adc
int
cltd
je
mov
fdivr
or
jns
lods
jno
sub
push
and
mov
push
mov
sub
out
sbb
ljmp
stos
out
pop
jbe
popa
inc
int3
imul
mov
sub
out
push
pop
adc
hlt
mov
inc
cmp
pusha
sbb
jmp
and
add
lods
lods
pushf
rorl
cmpsb
adc
bound
pop
inc
fcmovb
inc
push
xor
mov
jnp
push
xchg
or
ja
je
outsl
push
cltd
xchg
dec
push
and
adc
pop
inc
dec
imul
sarl
stos
add
mov
push
gs
rclb
in
divl
mov
das
pop
mov
lock
jb
pushf
xchg
mov
mov
iret
jg
inc
leave
cld
shrb
lret
dec
jno
lret
lret
mov
ljmp
stc
das
data16
push
jle
lahf
inc
sbb
daa
push
xor
loope
dec
popf
ljmp
scas
fiaddl
gs
cmc
xchg
in
jne
test
dec
xlat
cwtl
cmp
dec
mov
dec
and
js
adc
popf
int3
xchg
scas
mov
jnp
mov
add
nop
pushf
inc
jo
int
dec
jne
hlt
mov
stos
js
repz
cwtl
hlt
popa
lock
pop
fs
iret
sbb
cmp
ljmp
imul
lods
jno
mov
rolb
and
addb
add
sahf
cmp
idiv
loop
pop
pop
lds
jnp
imul
jb
aas
js
inc
cli
rcll
xchg
mov
add
or
dec
stc
inc
mov
inc
adc
sti
pop
mov
leave
jo
jl
sbb
inc
test
idivb
mov
fxch
push
addb
cltd
stc
adc
scas
aas
cmp
cmp
sub
cmp
pusha
inc
pop
mov
mov
cwtl
pop
push
push
insl
and
dec
out
jmp
inc
mov
orb
aam
shrl
mov
jno
rcrb
aam
mov
ds
xchg
dec
mov
leave
icebp
mov
repz
sbb
dec
adc
leave
jecxz
xchg
mov
dec
scas
jb
lcall
lret
inc
out
pop
not
aam
ds
jmp
mov
jle
jmp
adc
jl
dec
into
bound
push
roll
out
push
addr16
mov
xchg
xchg
sub
ret
daa
popf
add
decb
test
mov
mov
jbe
cmp
leave
push
or
inc
out
scas
cmp
popf
loopne
cmp
jp
push
fisubrl
sub
jb
shll
adc
jns
xchg
adc
leave
loopne
pop
inc
pop
inc
aaa
call
jnp
cmc
or
les
fmull
and
test
pop
adc
das
fisttpl
test
adc
inc
out
xchg
pushf
mov
shl
dec
xor
cltd
das
push
cli
cmpsb
add
cli
mov
insl
stos
data16
mov
push
adc
and
push
call
scas
repnz
cli
jns
popf
int
push
pop
rdmsr
jns
cmp
into
incb
inc
inc
push
cmp
and
push
dec
jae
daa
xchg
imul
clc
pop
sahf
ficoms
mov
out
and
ljmp
adc
popf
push
dec
pop
pop
sbb
mov
inc
mov
cmp
lds
loope
es
mov
scas
iret
frstor
fstps
pop
inc
andl
imul
xchg
addr16
dec
and
sub
pop
sub
ret
into
adc
adc
fyl2xp1
stos
pop
sbbb
cmp
xchg
dec
push
scas
xchg
xor
push
mov
ret
icebp
jge
repnz
dec
cmp
push
mov
mov
pushw
sbb
push
push
pop
sbb
mov
xchg
sub
add
sti
pushf
lock
popf
das
jne
adcl
or
mull
pushf
fbld
insb
outsl
cmp
jno
mov
cmc
or
orb
addr16
stos
jmp
push
lret
insb
or
cmp
pop
dec
cs
icebp
jne
sub
out
sbb
mov
mov
popl
mov
data16
mov
sub
push
js
or
sti
adc
lret
outsb
stc
pusha
in
jge
inc
dec
pop
das
pop
pop
mov
jno
in
outsb
in
cltd
sbb
adc
mov
adc
xchg
insl
mov
cmpsl
lods
adc
pxor
ljmp
std
mov
pop
or
or
cmp
mov
into
add
sub
push
inc
decl
jmp
and
lcall
fildll
mov
in
jge
jno
pop
sub
sbb
inc
rorb
test
jmp
pop
dec
inc
cmp
push
movsb
fcmovnb
repz
mov
sbb
ret
sub
push
push
mov
out
xorb
sub
mov
les
mov
adc
inc
xchg
xor
add
imul
cmp
in
repz
push
aas
iret
mov
addb
mov
or
enter
test
pop
lret
mov
movsl
xchg
inc
cmp
cld
loopne
ds
loopne
xor
loope
loope
and
mov
mov
lock
scas
and
cmp
lods
push
fisubrs
andl
int3
ljmp
cmpsb
jle
movsl
mov
and
inc
or
ret
daa
and
test
std
test
xor
fadds
stos
dec
or
cmc
add
add
sub
xor
push
loop
bound
sub
mov
mov
iret
test
sub
xchg
dec
add
add
repnz
fwait
jno
xor
call
dec
pop
in
hlt
or
bound
outsl
push
push
shrb
and
cli
fcmovnb
and
xor
or
fwait
pushf
and
faddl
ror
fsub
xchg
jne
mov
xor
outsb
and
pushl
mov
and
movsl
push
dec
adc
jae
loopne
mov
jnp
mov
lods
lret
jg
mov
mov
add
mov
cs
xor
lret
loopne
adc
push
stc
mov
push
mov
subl
dec
add
movsb
sbb
push
ljmp
jmp
outsb
sub
mov
add
stc
cmpsb
iret
cli
or
add
push
mov
cmp
and
gs
in
pop
pushf
subb
mov
into
dec
mov
adc
cld
mov
adc
ret
cmp
sub
dec
in
cmp
jne
das
pop
inc
mov
mov
xchg
sbb
cli
decl
fimull
pop
cmp
ljmp
add
adcb
push
notb
mov
xor
repnz
loopne
xor
adc
mov
add
fcmovnbe
pop
aas
xchg
mov
stos
cmp
xor
inc
jns
push
mov
sti
movsl
cmp
push
mov
cmp
add
add
lcall
les
xchg
sbb
rcl
stos
mov
mov
jecxz
mov
ret
out
cmc
mov
dec
fiadds
cli
cmp
mov
nop
and
dec
fists
pop
imul
in
sbb
js
xchg
push
loope
out
lock
mov
inc
and
sbb
dec
movsl
in
inc
in
stos
pop
imul
call
adcb
loopne
sbb
jbe
cmp
pop
xchg
insb
lods
lock
push
inc
add
or
cld
xor
xor
insl
int3
pusha
cmpsb
das
mov
push
jno
bnd
or
int3
dec
rclb
pusha
scas
push
mov
test
pop
nop
repnz
inc
int
loop
scas
inc
sbb
sbb
ja
push
aaa
xchg
ficomps
mov
push
movsb
rcr
dec
icebp
in
shl
pop
movsl
stos
inc
sahf
dec
inc
sbb
inc
sub
ret
pop
cmp
adc
add
xlat
or
test
pop
enter
pop
idivb
ja
in
in
mov
mov
push
mov
push
aad
pop
loopne
nop
or
adc
xchg
lods
mov
mov
push
inc
insb
mov
ljmp
pop
fwait
xchg
and
ss
stc
add
inc
adc
push
dec
dec
scas
sarb
pushf
movsb
xchg
ss
iret
cmp
test
cmpsb
jb
scas
inc
pop
or
push
ljmp
loope
inc
push
dec
rcr
fs
or
int3
pushw
add
sub
dec
bound
sti
add
push
mov
jecxz
pop
pop
gs
sub
rorb
rolb
cmp
adc
jmp
mov
icebp
sub
adc
ja
cli
mov
or
mov
adcb
add
jge
push
push
enter
das
in
sub
aad
and
push
xchg
dec
push
pop
loopne
cmpsl
ljmp
out
jg
xor
cltd
fs
and
sbb
xor
sti
hlt
push
push
adc
lret
test
gs
cmc
sbb
sub
or
mov
push
fstpt
test
dec
xor
cwtl
jl
add
mov
push
mov
mov
cwtl
stos
shl
pop
add
leave
dec
add
add
sub
mov
roll
inc
adc
and
in
aam
cmp
decl
sbb
xchg
mov
shlb
and
cmpsl
in
sahf
mov
and
shll
in
dec
pop
xchg
xchg
mov
push
mov
jae
xchg
mov
add
pop
je
mov
fistps
or
shlb
add
sbb
jns
sub
in
and
sub
loop
mov
fildl
jle
jb
dec
mov
clc
add
xchg
adc
sub
cmpsl
test
mov
inc
es
lcall
dec
out
sub
push
outsb
mov
stc
push
mov
pop
dec
pop
mov
pop
fimull
pop
cmc
fidivl
mov
or
std
sub
sbb
adc
popa
push
int
clc
mov
dec
fstpl
out
shrb
cmp
pusha
dec
insl
cmp
cltd
enter
sbbb
in
clc
mov
cs
in
mov
es
jecxz
push
mov
jo
into
lock
into
push
pop
push
in
cmp
or
mov
mov
rolb
out
xor
pop
jno
ret
jge
mov
sub
and
popl
loope
mov
in
cmp
push
shlb
ret
or
cmp
test
cmpsl
pop
out
mov
aam
fcmovb
sub
in
loope
test
push
xor
ja
cld
rclb
sar
mov
pop
arpl
inc
cwtl
mov
xor
test
lods
mov
pop
and
lahf
sarl
test
aas
cmpsl
cmp
rorl
dec
jo
push
sub
inc
xchg
inc
ljmp
mov
jle
icebp
lcall
inc
sahf
inc
bound
loopne
clc
lods
pop
dec
adc
enter
or
and
xchg
mov
sub
jae
push
ds
inc
loope
lahf
mov
xor
andl
xchg
stos
lret
jno
mov
push
xor
lods
inc
out
ss
out
mov
lret
icebp
mov
pop
cmp
inc
loope
nop
pusha
adc
lret
nop
cmp
daa
rcrl
adc
xlat
sbb
repz
loope
or
xchg
daa
mov
jge
xor
jbe
rorl
jnp
fldcw
cmp
incb
push
dec
jb
hlt
rcll
hlt
pop
daa
kmovb
inc
pop
cmp
mov
fistpll
ja
push
in
xchg
pop
add
dec
lcall
orb
mov
push
into
mov
mov
mov
shlb
adc
stos
sbb
out
adc
pusha
movsb
daa
cmp
and
stc
fadds
xchg
imul
dec
lds
loop
xor
cli
mov
xchg
jnp
cmpsb
xor
and
pushf
pop
adc
and
in
scas
clc
mov
xacquire
stc
and
dec
inc
sbb
pusha
pop
sbb
xchg
insl
fsubrs
add
push
data16
rcr
inc
lods
push
jmp
push
movsl
pop
pop
or
add
cmp
aad
sub
add
adc
adc
pop
pusha
in
in
sbb
inc
add
jae
adc
jb
xchg
inc
cmpsb
push
ret
cmp
jmp
mov
mull
mov
and
sbb
jb
outsb
cli
or
stos
inc
sub
xor
iret
add
test
pop
cmpsb
shlb
clc
push
mov
or
dec
cmp
add
xor
loope
clc
fdivrl
add
jmp
int
repnz
enter
lcall
inc
and
xor
pop
cmp
stos
es
bound
daa
stc
add
sbb
sbb
mov
mov
fsubl
or
pop
dec
sbb
stos
sub
xchg
inc
arpl
mov
dec
mov
add
mov
xor
test
stos
pop
fwait
push
movsb
enter
mov
jle
xchg
jo
dec
mov
insb
js,pn
inc
and
add
cmp
xchg
mov
push
xchg
mov
cld
push
in
rcl
lahf
in
aas
pop
mov
mov
shlb
dec
cmpsl
aad
in
inc
jg
pop
cmp
mov
dec
fsubs
dec
mov
lds
push
out
sub
fildll
dec
sub
mov
sub
pusha
cmp
popa
fs
mov
sub
int3
xchg
sbb
movsb
cmp
cmp
sub
sahf
mov
inc
dec
addr16
mov
hlt
je
sahf
push
mov
sbb
ficoml
dec
push
cwtl
iret
and
pop
xor
xchg
inc
adc
or
dec
pusha
das
lea
hlt
mov
ja
cmp
mov
mov
cmp
pushf
insl
or
inc
in
arpl
outsb
imul
fstp
in
cmp
and
or
mov
jge
add
outsl
jae
push
cmp
jo
lds
dec
into
mov
push
imul
shll
repnz
push
lahf
push
adc
mov
int3
iret
aas
pop
cld
popa
cmp
nop
test
mov
adc
cmc
divl
imul
or
ret
sub
push
cmpsl
mov
ret
sbb
xor
and
xor
ja
in
dec
sub
or
gs
cwtl
lods
call
fs
hlt
lcall
out
jo
pop
adc
movl
xchg
mov
mov
xchg
jns
movsb
push
clc
jb
call
rorb
movsb
jecxz
pop
fstpl
pop
adc
or
add
adcl
out
xchg
pop
jb
int3
mov
jo
mov
push
jbe
mov
mov
push
push
cld
xor
mov
jp
push
fs
inc
sahf
dec
mov
xchg
mov
out
dec
movsb
int3
jecxz
push
movsl
xlat
jo
pop
push
push
xchg
sbb
and
pop
dec
jno
lret
jle
xor
sub
xor
cs
jo
cs
and
popa
mov
lods
mov
gs
test
mov
pop
adc
inc
lret
cli
test
sub
repz
test
out
cmp
imul
rcrl
jp
dec
push
and
into
out
jl
jmp
fsubp
xchg
fimuls
pop
add
mov
xor
pop
gs
xchg
or
or
es
lret
jnp
xchg
divb
push
sbb
mov
es
loop
jle
and
pop
cmp
pop
rclb
push
cmpsl
jnp
inc
test
cmp
loop
inc
pop
fnop
sarb
mov
iret
in
sarb
xor
orl
jo,pt
xchg
push
push
pop
add
mul
test
add
arpl
mov
decl
sbb
xor
fucomip
lahf
in
jo
pusha
mov
dec
out
fdivrs
sbb
into
mov
flds
scas
cmp
int3
ret
inc
nop
sub
lcall
inc
inc
xlat
mov
add
mov
subb
in
pop
xchg
jae
or
jo
mov
nop
out
stos
sahf
das
test
bnd
jnp
cmp
xchg
in
loopne
sub
cmp
xchg
inc
dec
gs
pop
and
loope
aaa
leave
and
pop
mov
subps
icebp
imul
loope
sub
mov
cmp
std
roll
insb
xchg
adc
or
pop
adc
stos
int
fadds
add
scas
mov
mov
into
das
in
inc
and
cmc
mov
inc
and
xchg
cmpsb
andb
jp
adc
ret
pushl
inc
add
and
xchg
das
sub
and
sbbl
sbb
and
ljmp
adc
push
xchg
sbb
imul
pushf
ds
roll
int
stos
pop
lock
lea
insb
pop
mov
pop
xor
arpl
dec
sbbl
sbb
or
lock
cmp
gs
ds
pushf
lods
xchg
mov
lret
shll
push
lock
jb
outsl
cld
aaa
in
sahf
jmp
push
sbb
imul
mov
and
dec
mov
xchg
mov
push
aad
or
out
jecxz
xchg
and
mov
lret
or
mov
inc
sub
ficompl
imul
icebp
adc
mov
pop
pop
pop
outsb
in
add
out
sbb
shlb
jnp
je
dec
mov
jae
rep
push
das
sub
xor
dec
sbb
stos
je
push
insl
push
cmp
dec
fbld
inc
ret
mov
stc
movsl
enter
cmp
adc
ret
mov
dec
mov
push
fs
les
mov
pushf
in
dec
mov
pusha
mov
pop
data16
xor
jb
cmp
pmaddwd
xor
ja
xor
push
adc
cmp
movsb
xchg
mov
push
fcmovnu
add
jge
shl
mov
fstpt
xlat
sahf
mov
test
mov
mov
mov
repnz
adc
popf
ret
or
pop
fs
inc
iret
cmpb
idiv
ds
into
mov
stos
out
scas
and
dec
and
add
push
out
jnp
sub
gs
jno
fstps
dec
ficomps
push
cld
jnp
fldl2e
xchg
jecxz
icebp
scas
lea
outsl
pusha
xor
insl
call
mov
jb
fsts
lahf
lds
inc
cli
push
mov
pushf
mov
outsb
push
or
pop
xchg
push
fildl
jmp
fmull
in
mov
dec
xchg
add
or
mov
insl
ret
inc
or
or
iret
outsl
fistpll
and
aam
pop
inc
nop
add
mov
in
push
pop
incl
ficoms
sarl
xor
inc
clc
sbb
or
xlat
int3
xor
pop
pop
lret
into
mov
inc
xor
mov
ljmp
outsb
lretw
sub
sub
mov
pop
jne
inc
fcomi
xchg
lea
pop
cmp
cmp
lret
push
pop
inc
jo
adc
test
pop
lods
and
inc
and
rcrl
aad
mov
xor
inc
cmp
cs
stc
loopne
add
dec
fsubrs
inc
mov
aaa
cmpsl
fs
sahf
sahf
divb
add
jecxz
scas
push
push
sub
out
fimuls
mov
lods
mov
ret
lods
xor
das
cmp
pushf
ja
insl
inc
or
jnp
outsb
pusha
iret
sub
clc
fstps
add
mov
insl
fstpt
lock
in
mov
je
insb
pop
jb
sub
inc
leave
imull
dec
mov
sub
outsl
mov
ds
pop
mov
xchg
cli
insb
repz
jnp
pop
jae
lods
mov
push
int3
inc
mov
inc
dec
pop
adc
in
aas
adc
pop
iret
shll
inc
icebp
mov
and
mov
outsb
stos
and
inc
popf
dec
sbb
add
clc
dec
ficomps
push
mov
jae
add
inc
mov
sarl
jae
adc
push
add
scas
cmp
fs
cmp
fdivl
add
cld
pop
std
mov
xor
sarb
popa
xchg
sub
sub
lret
aaa
and
enter
pop
mov
xchg
mov
cmc
ss
cld
iret
mov
sub
mov
dec
aam
cmp
sub
and
movl
loopne
jle
jns
mov
jbe
jae
sbb
fcoml
or
arpl
sar
das
lods
sahf
ljmp
stc
fsts
or
add
out
mov
push
mov
push
push
cmp
mov
push
cmp
xor
sbb
mov
inc
push
pop
sbb
push
testb
ljmp
jp
mov
lahf
jo
mul
sbb
sbb
or
repnz
iret
sub
mov
out
fimull
xor
sbb
push
jo
mov
xchg
push
mov
sti
sub
dec
je
or
or
js
nop
pop
imulb
dec
lret
mov
in
cmp
xchg
push
sbb
in
sarl
jno
stos
stos
leave
jmp
aaa
imulb
xchg
xor
rclb
insb
ljmp
adc
je
subb
jle
rclb
jge
mov
inc
mov
or
imul
add
mov
repnz
mov
repz
cmp
sbb
push
fstpl
sbb
adc
loopne
cmp
xor
jbe
dec
cwtl
xor
dec
add
sbb
gs
jg
pop
mov
add
movsb
loope
inc
sarb
lret
in
or
and
data16
add
std
fcom
fs
jecxz
ljmp
xor
scas
xchg
inc
jmp
dec
sbb
mov
xor
or
and
jnp
call
in
sti
fidivrl
inc
movsl
mov
mov
cmp
pusha
add
in
dec
jp
and
or
pop
push
pop
sub
aas
inc
addr16
xchg
push
inc
push
bswap
es
loope
push
out
dec
mov
lret
jmp
xchg
dec
gs
add
ss
stos
test
lods
shrb
pop
repz
pushl
or
mov
add
and
sbb
cltd
outsb
les
pop
mov
and
into
bound
cmc
pop
icebp
notl
xorb
inc
ss
push
xchg
sbbb
cmpsb
pop
and
jl
cmpsb
ja
adc
sahf
and
iret
jno
cwtl
cwtl
cmp
jecxz
fnstcw
mov
adc
adcl
aas
adc
lcall
xchg
xchg
mov
test
insl
fadds
bnd
cmc
xor
xlat
cmp
jl
cld
add
mov
gs
and
insl
jmp
mov
mov
adc
jne
scas
lret
push
sbb
mov
sti
mov
arpl
xchg
mov
mov
dec
mov
mov
mov
xchg
orb
or
inc
xor
addr16
std
add
sahf
push
push
dec
jge
and
or
daa
lods
inc
mov
stos
je
push
stc
xchg
add
xchg
movsb
xorl
mov
sbb
sub
adc
push
mov
rcll
ficoms
lret
xor
xchg
xchg
pushf
mov
aad
call
je
out
jo
adc
loop
and
shll
fwait
xchg
aam
cmc
dec
cltd
loope
cmpl
dec
mov
jo
mov
mov
cld
add
das
xchg
pop
push
shrl
add
cmp
dec
dec
faddp
mov
mov
ss
pop
ja
loop
fcomps
adc
imul
ret
enter
push
adc
cmp
jge
lcall
mov
pushf
push
repz
push
mov
subb
jmp
pop
cmc
adc
fcmovnbe
add
mov
or
pop
add
sbb
cltd
mov
les
cmp
cmp
iret
ret
dec
jg
adc
mov
ret
movsl
cli
sbb
sbb
xchg
repnz
mov
jl
dec
test
insl
sahf
push
mov
inc
dec
stos
inc
push
fdivs
sbb
movsl
sti
cmp
stos
xchg
pop
and
aad
rcll
pushf
pop
fcompl
mul
ds
out
mov
push
out
push
sti
pop
ss
in
push
mov
pusha
lret
fcoms
mov
push
mov
jnp
repz
xchg
adc
xchg
icebp
inc
sbb
mov
cli
pop
push
jo
in
add
icebp
cmp
gs
rclb
jp
sti
daa
insl
rcrl
or
in
mov
xor
ror
mov
js
mov
jo
xchg
gs
lods
cmc
inc
mov
shr
inc
and
jae
mov
sbb
test
int
and
aad
sbb
test
shl
sbb
adc
mov
int3
mov
test
dec
call
arpl
xchg
icebp
lea
test
pop
xor
cli
cmp
fnstcw
cs
or
jb
xor
icebp
mov
and
stos
in
xchg
inc
jmp
jmp
lods
shrl
or
shlb
cmp
push
mov
addl
iret
jl
js
fs
out
les
icebp
sbb
jb
inc
test
dec
pushf
pop
dec
xor
mov
sub
fcompl
lock
repz
add
leave
mov
mov
mov
es
jb
push
in
mov
inc
outsl
or
mov
jmp
cmp
gs
cmpsl
stos
mov
and
push
adc
lcall
sbb
mov
adc
test
add
call
fnstcw
dec
mov
jmp
psubd
xor
mov
les
add
xor
andl
adc
xchg
sbb
test
fnstsw
sahf
mov
mov
or
pop
add
pop
xor
dec
sti
fisubs
std
repz
mov
mov
xchg
cmp
inc
and
inc
dec
add
stos
mov
sbb
jge
adc
iret
cld
les
int3
and
cmp
fwait
scas
std
xchg
popf
jns
pop
cmp
bound
pop
mov
insl
addr16
push
or
gs
jle
jmp
sbb
push
adc
movsl
and
popf
imul
ret
nop
mov
push
hlt
add
ja
lds
outsb
not
or
pop
cmpl
sbb
jnp
mov
mov
outsb
push
mov
je
js
sub
xorl
fwait
push
idivl
addr16
mov
or
pop
rorb
scas
fisttpll
int
std
in
sub
nop
lea
fwait
jbe
shlb
stos
mov
popf
push
js
arpl
add
popf
jg
in
fnstcw
jne
loope
clc
cmp
arpl
xlat
ficompl
xor
inc
adc
pusha
inc
stos
inc
int
sbb
sub
lea
fcmovnu
xchg
dec
cmp
cmp
arpl
inc
dec
imul
mov
inc
and
das
repz
xchg
imul
pop
daa
loopne
xor
mov
bound
jl
sbb
mov
ljmp
xchg
push
bound
test
ret
cmp
idivb
sub
out
xor
aas
aas
bound
xchg
cmp
mov
jns
movsl
addl
andb
jnp
inc
aas
outsb
pop
pop
add
jnp
movsl
bound
pushf
push
mov
mov
enter
fwait
mulb
jns
xorb
pop
jnp
movsb
jbe
mov
add
add
push
aaa
and
daa
test
call
sub
insb
cli
mov
cltd
loopne
sahf
lret
dec
cld
lea
mov
pushf
adc
mov
or
xor
nop
push
cli
lcall
pop
cmp
insl
cmpsl
dec
cmp
cmc
pop
dec
adc
or
stos
pop
cltd
roll
arpl
or
inc
mov
mov
cli
sub
xorb
jns
aad
lret
cmc
jno
scas
push
call
int
adc
push
cmp
push
push
pop
ljmp
or
mov
fs
xchg
pop
or
jp
pop
sbb
hlt
xchg
dec
loope
cwtl
repnz
mov
or
ret
inc
hlt
xor
popa
bound
in
ret
jo
push
adc
xchg
mov
xchg
mov
mov
mov
sub
or
ss
cmp
in
mov
or
popf
lds
fsubrl
mov
clc
call
daa
mov
sub
rep
dec
ret
mov
pop
mov
ret
mov
or
stos
and
jno
test
loope
mov
lods
jns
stc
cli
sbb
or
sbb
add
cmc
bound
insl
cli
xchg
cmp
outsb
jne
into
andl
and
loopne
div
js
in
das
sbb
stc
pop
and
out
push
jmp
or
aaa
xor
outsl
cmpsl
and
inc
push
daa
inc
cltd
fucom
add
inc
and
mov
dec
push
imul
adcb
push
mov
mov
idivb
cmpl
mov
jmp
fdivrl
mov
mov
mov
jecxz
mov
lock
test
aad
call
adc
dec
adc
pop
test
add
repz
es
xor
sbb
pop
mov
je
lret
fcmovnbe
xchg
aaa
pop
stos
inc
mov
lahf
pushl
lcall
add
stos
pop
sub
ja
or
push
jno
jmp
push
push
mov
orl
inc
subl
in
dec
pop
jge
push
jno
pop
or
pop
stos
sub
xchg
fsubrl
test
mov
enter
sbb
cli
ret
fisttpl
ljmp
mov
jno
sbb
std
inc
rolb
mov
hlt
cmpsl
sbb
jbe
mov
bound
add
mov
xchg
sbb
nop
jge
outsb
adc
in
xchg
in
sbb
movsb
stos
push
jmp
pop
sti
ror
adc
inc
pop
mov
jae
mov
pop
aam
pop
add
mov
outsl
push
test
xor
mov
xchg
aam
mov
in
jb
xor
adc
fs
gs
jnp
cld
jb
lret
mov
or
jg
subl
into
pop
cmpsl
sbb
mov
aad
addb
or
test
aam
and
rcll
mov
inc
add
dec
je
dec
or
insl
scas
add
sub
xor
sub
mov
sub
jne
add
jbe
mov
push
mov
mov
and
mov
xor
lock
sbb
cmpsb
mov
push
and
mov
repnz
mov
insb
outsl
lock
imul
mov
xchg
arpl
loope
ljmp
dec
movsb
cmpsl
push
xchg
rorb
out
arpl
inc
inc
push
stc
pop
fbstp
divb
lret
cmp
test
pop
movsb
out
add
mov
lahf
int
es
int
insl
sbbl
adc
inc
xchg
push
add
aaa
sahf
nop
inc
mov
in
inc
mov
es
inc
mov
mov
hlt
jl
popf
and
lods
rdtsc
and
jmp
je
repnz
inc
aas
inc
je
jb
xchg
lods
popa
ficompl
cmp
repnz
bound
je
mov
push
lods
ret
mov
sbb
xchg
cmpsb
outsb
xchg
fnstsw
das
test
addr16
mov
sbb
dec
bnd
cmpsl
movsl
call
enter
mov
push
das
popf
inc
sub
add
das
ljmp
jns
int3
mov
add
mov
in
aas
adc
repnz
addb
addr16
cmpsb
dec
add
in
sar
pop
hlt
or
fdivl
xor
mov
push
bound
ljmp
jns
dec
testl
test
inc
push
add
out
es
mov
aad
or
dec
movsb
add
sbb
scas
pushf
sub
repz
aam
cmp
mov
popa
mov
adc
jmp
dec
pop
xor
xchg
cmp
push
jb
es
inc
dec
xchg
fbld
inc
mov
aaa
xchg
cli
inc
adc
sbb
jg
cwtl
hlt
dec
aaa
enter
mov
xor
or
push
fcoms
push
pop
andl
jne
cmp
popa
xor
adcl
mov
jle
push
cmpsb
cld
jne
mov
addl
arpl
cmpsl
outsb
std
push
inc
inc
jne
mov
cmp
xchg
and
add
scas
scas
add
loopne
or
mov
mov
push
push
repz
das
notl
add
jo
and
cld
rorl
jo
sbb
lahf
gs
adc
mov
mov
clc
add
out
jnp
adc
mov
cltd
loope
mov
movsl
push
cmpsb
cwtl
lods
stos
inc
ffreep
jge
pop
fs
xchg
pusha
inc
jecxz
jmp
xchg
sahf
cmp
sahf
xchg
sti
add
jg
or
jle
packuswb
movsl
jmp
xchg
inc
inc
int3
data16
mov
test
sbb
subl
aam
fsts
repz
sbb
sub
push
filds
sbb
dec
xor
adc
adc
cmp
pop
and
sub
ss
into
xchg
and
xor
sub
cmc
xlat
sub
mov
or
xchg
or
ja
jmp
insl
sub
push
shll
mov
push
ss
sbb
jae
outsb
dec
xor
push
test
movsb
or
fdivl
xor
sub
jl
jne
out
fmul
jnp
mov
xchg
jne
out
mov
rorb
orl
pusha
xchg
decl
sbb
outsl
lods
out
mov
outsb
and
xchg
pop
mov
mov
loop
fs
fldt
rol
push
cwtl
fcompl
jmp
xor
stc
inc
call
rorl
test
xchg
xchg
add
arpl
mov
test
jg
jge
adc
pushf
cmpb
out
push
fsubs
sbb
xchg
push
or
push
xchg
es
push
rol
cld
adc
std
mov
faddl
sub
push
push
push
ffreep
je
jl
leave
pop
dec
xchg
mov
mov
js
mov
inc
pop
dec
xchg
and
ljmp
and
cmp
enter
xor
jns
ljmp
fldpi
cmp
ret
jle
inc
cmp
hlt
xchg
mov
cmpsb
bound
sub
push
iret
inc
hlt
push
ficomps
push
xchg
push
rcrb
xchg
cmc
cltd
fistpll
mov
jecxz
cmp
ja
iret
pop
dec
and
mov
in
arpl
scas
add
mov
int3
mov
out
jl
jb
lods
or
popa
add
jecxz
push
das
fs
lea
scas
jg
sbb
sbb
cmp
xchg
sbb
adc
push
xor
lods
sti
repnz
out
outsb
int
mov
ljmp
inc
sbb
daa
rolb
fidivs
push
adc
xor
imul
adc
ret
pop
mov
mov
mov
js
cld
push
sub
out
xor
inc
push
out
dec
pop
lahf
sbb
icebp
rcl
fwait
cmp
test
jmp
adc
stos
mov
xchg
fidivrl
sub
insl
outsl
idivb
fisubs
scas
icebp
push
dec
jmp
or
ret
mov
stos
push
dec
nop
ljmp
pop
imul
aad
or
call
and
push
cmp
cmpsl
pushl
ret
data16
dec
scas
cmp
out
pop
js
repnz
jb
imul
test
jp
xchg
repz
and
cwtl
pop
mov
cmpsl
dec
popa
push
std
jae
neg
and
fs
adc
subl
ljmp
add
mov
xchg
push
lock
xlat
sub
and
inc
mov
dec
dec
roll
rcr
shl
std
adc
pop
sub
aas
in
dec
mov
fisubs
xchg
insb
xchg
mov
push
mov
dec
dec
xchg
inc
fnstsw
xchg
aad
sub
lods
sahf
push
movsl
cmp
fisttpl
adc
int
movsb
mov
inc
add
fwait
push
cmp
out
sub
ficoms
stos
mov
int3
add
sbb
xor
std
cmp
pop
popl
fdivs
mov
mov
lock
jae
test
stc
fldl
dec
out
stc
ss
mov
mov
sub
mov
jne
out
ret
xor
mov
call
call
sub
lods
inc
xor
push
and
mov
cmpsl
cld
scas
aas
push
jnp
pop
dec
mov
xor
add
inc
test
mov
bound
jp
jmp
addr16
add
test
inc
xor
dec
sub
pop
adc
mov
add
fnstsw
cli
jp
cmp
seto
sub
jge
enter
movsl
push
sub
xor
cltd
cmp
test
or
fcmove
xor
mul
hlt
push
push
push
cmp
inc
jp
jne
enter
shlb
xchg
sbb
negb
testl
insl
aaa
call
cmp
jl
in
cmp
loopne
fistpll
fcompl
mov
cmc
in
xor
enter
jmp
jns
arpl
stos
sub
sub
xchg
std
jle
mov
inc
adc
imul
adc
pop
rcl
sub
sarb
hlt
and
pop
add
sbb
in
clc
xchg
js
std
arpl
cmpsl
jge
movsl
and
es
jae
sub
addr16
sub
std
sbb
ret
das
mov
sti
test
mov
arpl
adc
shl
push
and
gs
idivl
popf
xor
mov
ds
fdivrp
pop
data16
jmp
jp
add
xchg
popf
cmp
dec
out
fs
inc
xchg
pop
cmp
in
mov
jne
pop
jne
movsl
fs
out
das
pop
xchg
cld
js
cs
lret
mov
test
ret
push
jg
xchg
cmp
pop
cli
jge
idivb
jbe
out
dec
mov
aad
lods
dec
inc
call
call
xchg
lock
mov
push
xchg
xchg
and
sar
jns
lcall
lods
jge
out
add
cmp
shlb
lret
test
call
cmpsl
stos
or
call
or
adc
lock
jmp
jg
roll
lods
jge
xchg
push
gs
push
into
ljmp
lret
pop
dec
mov
out
xchg
adc
jo
fldt
jp
aas
int3
jbe
in
loope
ja
dec
ret
int
mov
movlps
lds
dec
loope
sbb
scas
out
hlt
cmpsl
push
sub
jge
je
enter
enter
jmp
adc
add
dec
cmc
ja
push
out
sbb
or
fisttpll
movsb
dec
inc
mov
addl
jmp
pop
fstl
sti
test
xchg
inc
movsb
mov
daa
pop
adc
mov
xchg
sti
jle
out
rcrb
xchg
push
aad
mov
and
lret
add
sti
push
sbbb
sub
xchg
push
sbb
sbb
jno
aas
sub
jg
inc
mov
lea
push
jge
adc
insb
add
mov
das
mov
push
push
shll
mov
and
arpl
cmp
xor
cmpl
dec
xor
sbb
inc
dec
push
ljmp
mov
mov
data16
pop
in
or
push
mov
cmp
jle
movsl
dec
and
sub
sub
jle
sbb
xor
xchg
cmp
push
daa
push
outsl
inc
pop
inc
int
adc
faddl
cmp
add
sbb
jmp
push
adc
inc
mov
push
mov
pop
adc
inc
mov
sbb
and
xlat
dec
pusha
mov
rolb
mov
int3
js
xchg
xor
sbb
add
lcall
ficoms
or
test
movsl
inc
sub
cli
sbb
cs
xor
hlt
jbe
jae
mov
enter
adc
cs
push
out
adc
gs
mov
movl
sub
dec
and
xchg
ret
popa
push
cli
sub
sub
add
cmp
loop
or
mov
fistpll
jmp
daa
xchg
xorb
mov
dec
xchg
xor
pop
push
or
dec
jae
inc
popa
jbe
mov
adc
mov
jnp
imul
test
fldcw
scas
stc
pop
std
cwtl
push
xchg
stos
adcb
bound
cld
xchg
pop
cmpsl
bnd
add
xchg
or
test
daa
sub
mov
and
mov
jbe
fmul
cmp
xchg
fiaddl
pusha
mov
repnz
cwtl
jp
cmp
test
jne
repnz
xor
jmp
inc
mov
jns
movsb
out
stc
mov
fidivrs
jo
sar
mov
jmp
xchg
sbb
ljmp
outsl
cmpb
mov
cmpsb
sbb
movb
dec
xchg
pop
mov
jb
sahf
xor
push
xchg
mov
xor
out
sahf
or
push
mov
dec
xchg
pop
dec
outsb
lret
jl
push
daa
or
inc
xor
cmpsb
xchg
sub
pop
lods
int
mov
popf
mov
sbb
hlt
mov
aam
jle
imul
rclb
lahf
or
xor
decb
push
xor
push
or
in
bound
jl
mov
dec
sar
jbe
inc
je
push
aad
sbb
jne
sub
mov
pusha
mov
mov
xor
test
lcall
mov
push
inc
xor
into
xor
sub
push
ja
mov
call
xchg
mov
cmp
inc
hlt
das
jb
insb
pop
pop
enter
xchg
fs
xchg
and
mov
mov
into
cs
shrl
mov
sbb
gs
out
ja
inc
into
sub
scas
test
mov
mov
push
mov
cmpsb
xor
movsb
dec
aad
jae
test
andl
push
and
pushl
dec
in
or
mov
jg
rol
pusha
cmp
hlt
scas
lds
dec
pop
or
aas
fdivrl
arpl
and
sub
gs
ss
sub
jge
out
leave
push
sub
pop
cwtl
push
mov
lods
xor
ret
cltd
movsb
popf
mov
and
mov
insb
roll
arpl
cwtl
lods
or
adc
jge
fidivs
jecxz
loop
cmp
dec
scas
lock
mov
movsl
scas
rcll
pusha
lock
push
adc
inc
ret
in
imul
sub
lret
mov
mov
jge
xor
push
lret
add
jmp
hlt
hlt
iret
les
stos
rcrl
pop
pop
xchg
mov
sub
int3
inc
ja
cmp
inc
cld
inc
add
call
lods
mov
hlt
push
adc
xor
jl
pop
ret
push
hlt
rcrb
enter
xchg
xor
aas
outsl
test
scas
and
sbb
pop
or
add
mov
cli
inc
out
pop
mov
xor
loopne
std
xor
int
mov
std
repnz
mov
push
push
scas
dec
or
das
inc
test
adc
sbb
fmul
aad
ret
xchg
pop
outsl
out
pop
inc
cs
cmc
scas
cmp
and
xor
pop
stc
sbb
dec
idivl
add
out
mov
mov
or
cmp
sbb
cmp
in
scas
fs
xlat
repz
addr16
sahf
sub
nop
push
inc
push
push
call
dec
aad
out
add
popf
mov
mov
mov
xchg
jnp
cmpsl
das
lods
jle
adc
lds
insl
and
fstpt
insb
loope
cli
cmp
xlat
push
mov
test
sbb
notl
and
lods
or
sahf
xor
fwait
mov
pushf
dec
mov
push
dec
jnp
int3
xor
and
daa
or
std
nop
insb
mov
cmp
addr16
ficomps
les
mov
int
leave
inc
out
adc
sbb
shll
push
loopne
inc
mov
js
jns
pushf
dec
rolb
fisubl
mov
or
sub
xchg
push
mov
repnz
mov
movsl
add
lcall
stc
cmp
testb
lods
push
lret
lods
or
pushl
inc
xor
aas
xor
push
mov
lods
pop
jecxz
sub
jle
adc
push
imul
inc
lret
int
dec
dec
jmp
rcr
sbb
nop
negb
lcall
mov
mov
jo
adc
jge
mov
fucomip
lret
fwait
sbbl
mov
bound
jno
sti
push
outsb
loope
and
or
and
adcl
xchg
data16
sub
ljmp
xor
lea
pushf
cmpl
test
mov
sbb
mov
jmp
enter
rol
xchg
imull
stos
jb
int3
mov
fists
cmp
cmp
pop
fldenv
aas
hlt
cmpsl
sub
jbe
and
push
jg
mov
scas
lea
fisttpl
push
out
mov
jge
cmpsb
loopne
cmp
xlat
cmp
subl
lock
int
aam
pusha
jl
in
sub
mov
jmp
dec
adc
inc
jo
addr16
jb
xor
mov
push
pop
push
jno
sub
mov
mov
mov
js
or
xor
fisttpl
add
mov
sub
loopne
ss
dec
pop
mov
inc
add
aas
fwait
mov
shufps
mov
cs
jmp
sub
add
inc
adc
or
scas
jo
clc
pop
leave
in
jns
xlat
insb
out
test
rcrb
fwait
push
xchg
out
push
adc
push
cmc
shll
adc
sbb
mov
rcrb
clc
mov
fisubrs
and
in
lret
sub
dec
stos
pop
and
dec
sbb
dec
and
xor
jp
pop
adc
stos
or
aas
cmpsl
xchg
fwait
add
shlb
pop
sub
xor
dec
and
and
add
repz
aas
sub
cltd
sbb
pop
aam
mov
cmp
repz
dec
movsb
pop
rclb
mov
insb
jb
orb
cmp
mov
out
jl
push
insb
mov
add
aaa
pushf
or
sbb
push
mov
cmpsb
cltd
ljmp
xor
mov
or
imul
jo
pushf
mov
mov
fwait
jmp
sub
loop
data16
stos
push
aas
negb
xchg
cwtl
xchg
stos
in
int
cmpsl
je
xchg
dec
scas
xlat
lock
mov
aad
pop
push
inc
push
je
push
cmp
cmp
add
lods
mov
aaa
in
gs
mov
lret
loopne
in
lret
mov
stos
xchg
repz
popa
xchg
hlt
aam
push
push
icebp
inc
adc
adc
iret
rolb
les
sbb
sbb
out
aas
mov
inc
outsb
sub
mov
mov
mov
imul
jbe
sbbb
xor
dec
lods
dec
mov
jg
sti
mov
push
inc
push
push
shl
add
stc
xchg
not
mov
jmp
fwait
mov
push
mov
fucomp
fstl
xor
ss
out
arpl
out
fs
mov
jmp
leave
pop
cs
mov
movsl
jnp
pop
add
push
xchg
sub
adc
pop
mov
jle
xchg
and
push
sbb
adc
mov
jae
dec
dec
add
push
data16
pop
xchg
ds
repnz
movsl
sub
cli
in
pop
adc
cmpsb
fcompl
outsl
mov
add
dec
fsubrl
mov
jae
roll
shlb
test
test
xor
outsb
push
mov
pop
and
mov
insl
jle
out
cmp
sbb
adc
pusha
cli
mov
fidivrs
mov
nop
push
mov
add
xchg
push
push
dec
insb
ja,pt
outsl
mov
movsl
pop
jns
cmc
mov
fidivl
addr16
loope
inc
jo
mov
dec
lods
test
cmpsb
aad
dec
cmpsl
loop
add
xor
mov
or
mov
push
test
inc
and
inc
mov
call
ss
add
adc
and
testb
test
mov
sahf
andl
hlt
mov
aaa
clc
lods
dec
sarl
push
aad
or
inc
or
add
push
xor
stos
push
outsl
sbb
jne,pn
sub
inc
fisubl
mov
lret
push
xchg
inc
pusha
shlb
fbstp
add
inc
ljmp
shl
movsb
je
xlat
and
mov
stos
sub
mov
jo
dec
xor
fwait
mov
out
movsb
push
ss
loopne
xchg
inc
popa
pushf
repnz
stos
mov
imul
shl
out
and
int
sub
sub
shlb
xlat
mov
mov
push
mov
stc
fldl
shrl
dec
push
stc
nop
out
js
mov
mov
or
sbb
pop
call
mov
push
add
sbb
data16
cmpsb
nop
jg
addr16
loopne
jp
scas
mov
aaa
mov
lods
xchg
mov
inc
pushl
inc
ret
and
mov
inc
fs
insl
stos
or
pop
bswap
out
sti
popa
dec
and
incl
add
jns
mov
mov
mov
inc
sub
inc
or
test
adcl
ret
clc
mov
loop
sbb
mov
pusha
lahf
daa
inc
xchg
mov
adc
fcoms
neg
pop
jmp
xchg
pop
dec
jecxz
xor
rcl
lret
in
or
mov
int
adc
or
das
arpl
cltd
gs
jns
cmp
rcrb
clc
dec
xor
jmp
mov
out
sub
cmp
cmp
inc
test
jecxz
jle
in
aad
jl
fisubl
mov
push
and
fisubrl
mov
inc
adc
pusha
cmp
aaa
push
inc
out
xchg
add
cwtl
pop
and
out
aad
pop
loopne
jnp
repnz
scas
lahf
nop
push
or
jecxz
jno
jo
sti
sub
sub
xor
and
adc
inc
xchg
and
sub
mov
add
xchg
cld
aad
xchg
out
pop
call
hlt
mov
adc
mov
lds
std
xchg
pop
cmp
mov
setbe
iret
add
ficoml
jle
movsb
sarb
pusha
mov
fistl
jnp
xchg
jecxz
add
sub
ja
cmpsb
ds
call
pop
rcl
pop
outsb
fldt
xchg
pop
loop
jecxz
in
out
subb
mov
xchg
fisubl
std
mov
or
pop
rcrl
mov
test
pop
push
mov
mov
sub
and
je
dec
shlb
mov
sysret
pop
add
pop
and
cmp
push
scas
fiadds
inc
cmp
es
mov
push
fisttpll
pusha
das
ret
in
ds
fwait
mov
not
in
pop
xchg
scas
stos
xchg
daa
inc
push
pop
or
lret
fidivs
mov
leave
adc
and
repz
mov
mov
fmull
push
clc
mov
or
ficompl
fidivs
sbb
mov
outsb
push
adc
xor
mov
andl
dec
cmc
add
sub
icebp
lds
or
mov
shrl
add
jl
xor
inc
fdivrs
xor
push
dec
insl
or
ja
sbb
out
hlt
sti
jp
jp
out
test
fwait
xor
lods
notl
faddl
pushf
sahf
out
jns
enter
repz
popf
xchg
add
out
xchg
lea
sub
cs
mov
mov
mov
lahf
popf
mov
stos
mov
mov
push
lret
inc
push
jp
iret
sub
mov
sahf
xor
mov
push
push
jl
cli
sub
les
push
adc
cmpsb
dec
push
adc
sub
loopne
fcmovnb
rorb
addr16
lock
mov
in
xchg
ja
xor
mov
out
ret
ss
rcrl
adc
popa
scas
push
push
data16
mov
inc
in
and
mov
ret
cmp
jl
mov
imul
xlat
push
sbb
les
ja
fmuls
pop
xchg
jecxz
xor
loop
inc
mov
xor
mov
rcrb
push
xor
in
add
into
roll
mov
stos
mov
push
icebp
nop
test
pop
jecxz
inc
mov
lds
mov
pushf
xor
dec
test
int
popf
test
daa
rcr
and
pop
add
pusha
pop
or
dec
mov
inc
and
jae
movsb
iret
lcall
bound
push
xor
repz
imul
daa
mov
inc
ds
lds
lret
iret
addl
push
pop
cmc
adc
add
push
mov
imull
adc
js
imulb
push
das
repnz
dec
jno
negl
scas
pop
call
in
push
xchg
test
dec
add
int
xchg
popf
add
push
jns
or
fildl
push
cmp
icebp
aaa
test
xlat
and
and
test
adc
mov
lahf
js
fs
and
mov
xchg
scas
mov
nop
cmp
mov
daa
aas
shl
loopne
aas
repz
mov
lock
mov
push
sbb
bound
shrl
je
pop
ja
fs
and
out
cmpsb
pop
xchg
xchg
inc
mov
rolb
or
lds
mov
sub
dec
outsl
shlb
dec
mov
ja
xor
sub
fmuls
repz
enter
cwtl
xchg
jecxz
xchg
jbe
lea
adc
rclb
push
icebp
data16
jle
imul
jae
xorb
test
pusha
push
aaa
loope
lods
pushf
rorb
jo
adc
adc
xor
adc
mov
and
pop
sarl
pop
int
mov
pop
sbb
shrl
add
pop
rcl
jne
xlat
or
movsb
sbb
xchg
cltd
cmp
imul
mov
or
outsb
divb
jmp
or
add
dec
stos
aas
xor
loopne
negb
mov
les
inc
dec
mov
inc
mov
pop
mov
lods
mov
loop
out
cld
in
nop
clc
jno
cmpsl
xlat
jno
nop
clc
je
push
push
test
sahf
xchg
aad
daa
daa
xor
jne
dec
dec
lahf
mov
jmp
lods
mov
cmp
ret
add
inc
shrl
jno
insl
jmp
adc
add
in
stos
clc
xor
pop
cmp
or
syscall
cmp
sub
ret
cmp
into
popl
jl
or
ds
enter
mov
add
xor
xchg
push
push
repnz
xchg
mov
sub
dec
movsb
or
sub
shr
jae
push
cmp
ret
mov
and
and
pushf
xor
inc
out
dec
int3
test
int
or
and
and
adc
mov
ds
cs
sbb
aam
bound
mov
imul
ja
adc
mov
xor
push
jecxz
sub
cmp
inc
jge
dec
xor
notl
out
jbe
add
cli
add
sub
mov
pop
enter
adc
cmpsl
fs
leave
fdivl
and
and
lahf
cmc
clc
lods
sbb
es
jb
notb
inc
pop
push
mov
sub
mov
sbb
js
xor
sub
iret
addl
xchg
push
stc
mov
push
cs
and
ret
js
sbb
pop
outsb
outsb
xchg
test
lret
pushf
and
mov
lods
inc
add
and
jne
jbe
pop
inc
mov
pop
gs
stc
ror
xchg
out
push
xor
cli
mov
fadd
jmp
push
fsubr
lods
sbb
fsts
daa
popa
mov
hlt
xchg
adc
fiaddl
push
add
or
adc
test
icebp
lods
ljmp
xchg
fwait
adc
fldenv
jge
push
mov
mov
and
xor
mov
les
in
es
push
aaa
xchg
xor
or
aam
test
inc
cmp
icebp
lcall
mov
popa
mov
enter
gs
add
dec
fsubrp
push
fwait
inc
stos
ficoml
fwait
lods
cmp
jo
adc
divb
push
sub
clc
rorb
xchg
inc
mov
xchg
push
fsts
sub
xchg
out
adc
jmp
xchg
xchg
xor
aas
out
mov
push
lods
dec
or
repz
out
repz
hlt
push
xor
negb
push
push
lock
ret
xchg
push
cs
ljmp
ret
out
arpl
out
leave
mov
xor
out
mov
out
mov
in
lret
inc
out
mov
xchg
adcb
add
jbe
inc
cmp
jecxz
or
mov
insl
test
sti
adc
jmp
adc
pop
adc
inc
jmp
ljmp
pop
jae
push
cmp
aaa
push
stos
inc
enter
inc
lahf
imul
icebp
mov
loope
lret
scas
xchg
adc
cwtl
sub
lods
push
jecxz
repnz
lods
popa
stc
dec
arpl
and
out
mov
lahf
sbb
or
jmp
loop
xchg
xor
mov
mov
iret
sbb
push
hlt
xor
and
xchg
test
cwtl
xor
mov
daa
and
push
scas
lods
sbb
xorl
jae
aam
push
pusha
stos
aaa
adc
or
push
lods
dec
or
cmp
push
test
jmp
nopl
fwait
inc
call
mov
inc
in
in
insb
sbb
mov
add
repnz
and
jbe
mov
call
loope
cmpsl
xor
aas
mov
mov
or
or
mov
push
lock
xlat
xor
adc
ret
dec
inc
lret
xor
loopne
sub
loopne
stos
xchg
testb
xchg
stc
jmp
pusha
mov
jno
sbb
repnz
xchg
inc
aad
xor
es
adcl
arpl
dec
push
pushf
mov
adc
inc
cltd
mov
out
cmp
push
pop
stc
xor
mov
jns
mov
mov
mov
les
push
ret
aad
ja
jmp
inc
addr16
mov
sub
mov
in
sub
mov
fdivrl
push
sub
sbb
xor
sub
mov
jle
cmp
outsb
fldenv
jno
aaa
shll
in
pushf
lea
dec
push
aas
jns
xlat
in
nop
dec
push
xchg
lods
mulb
and
jno
in
dec
icebp
add
jae
lock
sbb
cmp
push
js
dec
sub
inc
cli
inc
inc
movsl
loope
jnp
mov
mov
mov
push
mov
sbb
add
inc
mov
xor
xchg
in
adc
sbb
aaa
mov
and
fnstenv
mov
outsb
mov
jmp
jmp
iret
cmp
or
andnps
jno
jnp
in
enter
cmp
inc
bsf
ljmp
add
cmc
das
int3
adcl
fdivr
fldl
xchg
mov
dec
imull
rolb
sbb
int3
jo
fisttps
mov
push
pop
loope
inc
cs
lds
in
outsl
les
out
cmpsl
cmp
sub
inc
in
out
mov
int
cmpsl
fadds
cmpb
shl
adc
jmp
leave
xchg
popa
negl
imul
jmp
sbb
mov
adc
inc
dec
lods
jnp
push
clc
mov
leave
adc
mov
add
pop
mov
adc
mov
lahf
leave
leave
sub
dec
aas
cltd
aas
xchg
pop
sarb
sbb
test
lds
lret
dec
aad
test
test
int
lds
cwtl
jl
cwtl
mov
cltd
mov
mov
xor
int3
sbb
aaa
mov
imul
stos
pop
mov
inc
fbstp
ret
mov
xchg
adc
scas
iret
es
pop
ja
cltd
ja
or
jmp
aad
jmp
mov
mov
imul
xchg
into
mov
xor
push
fidivs
cwtl
jb
insb
sahf
fcomps
imul
mov
in
repnz
adc
cmp
push
mov
push
fwait
xchg
imul
xchg
adc
mov
das
or
mov
mov
mov
dec
loope
mov
xor
test
cmp
pop
or
out
mov
popf
cltd
mov
mov
push
in
pop
inc
repz
fs
push
loope
jno
mov
gs
jmp
fisubs
sbb
or
in
bound
stc
adcl
test
jno
lea
ljmp
outsl
mov
dec
das
mov
add
stc
popa
mov
fimuls
or
out
loop
push
inc
mov
lret
lcall
ret
jo
pop
je
mulb
or
pop
fdivrl
jae
arpl
add
outsl
fidivs
xchg
mov
sbb
and
jae
xorl
push
push
divl
out
hlt
movsl
pushf
lock
ret
aad
das
in
dec
clc
cmpb
fstpt
mov
inc
stos
leave
movsb
scas
hlt
in
imul
mov
movsl
jg
cmp
mov
enter
loope
jb
mov
and
or
in
cmp
cmp
nop
ja
sbb
sub
add
movsl
sbb
sub
inc
dec
dec
and
out
xchg
in
xchg
jo
test
data16
pop
sahf
shr
mov
loope
aad
rcrl
mov
adc
sub
cld
jl
fisttps
add
ret
sar
js
xor
lcall
cmp
das
sub
adc
out
insl
mov
add
xor
mov
adcb
in
lret
imul
push
out
jo
insl
lret
fldenv
inc
aam
popf
jo
aam
inc
das
adc
jno
or
idivl
sbb
sbbb
push
jae
hlt
test
fisubrs
mov
and
and
xor
push
fsubs
xor
dec
xchg
out
daa
outsb
push
xlat
imul
mov
mov
or
or
in
mov
adc
mov
aaa
dec
or
cmpsb
fsubs
lahf
ret
repnz
or
scas
push
sti
sub
xlat
adc
fwait
loopne
jmp
pop
fistpl
stos
shr
jno
ret
lret
addb
mov
add
into
lea
jbe
dec
imul
jnp
aaa
xchg
call
mull
inc
aad
jbe
inc
pop
div
cmp
aas
ficoms
shlb
sahf
ja
cld
pop
stc
outsb
cmp
jo
out
daa
movsl
push
aad
outsb
and
xor
cltd
pushl
mov
in
or
in
lcallw
mov
jmp
fstps
sub
cli
je
in
popf
nop
push
lds
movsl
aas
loop
outsb
int3
insb
mov
pop
push
add
xor
je
inc
jg
rclb
sbb
ljmp
ds
mov
and
sbb
mov
cmp
cli
or
inc
push
mov
or
std
in
lock
in
stos
mov
inc
gs
int
and
adc
icebp
fiadds
push
cli
rcll
cmpsb
scas
loop
ja
sahf
jno
jnp
ret
call
xor
pop
xchg
into
std
add
mov
out
sbb
fisubrs
aaa
sbb
xchg
or
lahf
jae
addr16
sub
fildll
mov
mov
out
and
subl
scas
mov
xor
mov
mov
jo
into
and
inc
aas
nop
pushf
outsb
mov
cmp
push
pop
out
into
fildll
pop
adc
ds
add
inc
addl
inc
stc
stos
lods
shll
add
sbb
ds
add
repz
pop
xorb
xor
inc
insl
xchg
into
mov
pop
cmp
icebp
jge
mov
push
jmp
gs
dec
mov
movsb
pop
movsb
xchg
fbstp
jmp
mov
xchg
dec
gs
jno
mov
enter
inc
push
adc
ljmp
popf
stos
cmp
lret
push
mov
in
mov
pushf
mov
xchg
xor
sbb
aam
sbb
push
sbb
aam
ds
mov
testb
inc
outsb
adc
les
push
cs
inc
sbb
lock
dec
mov
or
sub
sbb
testl
fcmovnu
xchg
sar
scas
rolb
cli
sbb
pop
adc
inc
push
xlat
jnp
push
mov
push
mov
pushf
xlat
sti
push
mov
fcompl
test
in
lods
lods
or
imul
into
test
nop
test
out
inc
xor
adc
stos
rcll
ljmp
mov
xchg
fwait
dec
dec
clc
fidivrl
mov
push
addr16
mov
mov
shl
xlat
add
and
repnz
repz
out
and
add
aas
xor
aaa
and
xor
test
out
jmp
call
insl
adc
icebp
imul
arpl
push
and
sbb
std
pop
loop
sub
int
sub
mov
cmp
ljmp
cld
dec
int3
mov
adc
pop
dec
hlt
cmc
xor
mov
jmp
mov
push
les
xor
pushf
jo
inc
mov
jg
inc
into
jge
xchg
ret
adc
hlt
inc
in
jne
clc
imul
sti
sub
ljmp
adc
out
mov
sbb
xchg
push
rcll
adc
pop
lcall
nop
bound
jp
mov
in
or
jecxz
lret
pusha
pop
lds
mov
pop
and
scas
repz
inc
out
sbb
adc
xchg
out
movsl
insb
or
mov
inc
hlt
jno
add
dec
aam
ret
adc
jae
cmp
fldt
and
mov
jo
adc
pop
dec
push
arpl
stos
push
jle
sbb
ret
scas
cmp
add
jmp
pushf
scas
fistpll
mov
das
sbb
or
lahf
int3
xchg
pusha
cmp
loope
je
mov
dec
jo
jnp
ds
add
lcall
pop
dec
pop
jne
movsb
push
in
jle
aad
adc
cmp
nop
sahf
push
mov
mov
aas
mov
push
outsl
fldcw
jmp
sbb
cmpb
push
pop
mov
repz
sbb
rclb
mov
es
popf
mov
or
xor
lahf
inc
icebp
xor
ds
push
jg
je
cmp
das
fcom
test
fisubrs
insl
dec
xchg
shr
add
lea
cmc
push
add
push
loope
shlb
rol
sub
inc
jne
cmp
sarb
sbb
pop
loope
nop
jmp
mov
push
lret
pushf
shll
idiv
js
pop
inc
icebp
push
fwait
lcall
clc
mov
inc
test
and
shll
jns
mov
inc
dec
push
mov
fsubrl
aad
xchg
out
push
cltd
stc
jl
shrl
push
sbb
adc
fadd
fldenv
inc
mov
and
push
adc
xchg
movsl
dec
mov
jle
loop
loopne
pop
and
insl
ret
fcomp
jae
outsb
add
je
ss
icebp
jl
cmp
inc
enter
xchg
call
jo
jge
adcb
xchg
andl
movsb
movsl
repz
mov
jmp
lcall
popf
mov
ficomps
scas
mov
push
ftst
cmp
dec
mov
dec
push
cld
mov
and
enter
fs
daa
cmp
xchg
mov
dec
add
leave
popa
xor
push
and
sbb
add
push
mov
sarb
push
out
mov
fistps
jg
xor
fwait
fwait
notb
fistl
jmp
shlb
out
push
je
aam
lods
mov
loope
push
or
dec
pop
enter
mov
jg
cmp
stos
or
add
aaa
and
call
pop
leave
daa
shrl
icebp
scas
xor
mov
sub
lea
push
sbb
shlb
or
sbb
cmp
push
rolb
inc
movsl
das
pushf
sub
xorb
or
jmp
ret
sub
mov
cs
jbe
fldt
mov
nop
loopne
mov
je
hlt
sbb
pop
fmuls
ret
push
daa
in
inc
mov
mov
fidivrs
rolb
cltd
xchg
jp
test
xor
xchg
in
cwtl
push
adc
outsb
pop
add
out
mov
shll
ss
xchg
dec
in
and
shlb
adc
in
rclb
push
shlb
mov
insl
jmp
cmc
adc
dec
fs
fidivs
or
mov
pop
jp
sahf
les
mov
nop
sti
lods
je
inc
lret
mov
cli
fwait
adc
lea
and
pop
mov
mov
sbb
cmp
cmp
and
les
adc
sbb
mov
in
sub
lods
add
sbb
in
addb
loop
mov
jo
jbe
xchg
adc
xchg
lcall
popa
dec
xchg
or
adc
mov
sti
jo
jns
and
jae
mov
sbb
mul
imul
inc
add
loop
cmpsl
jnp
dec
lds
mov
dec
gs
movsl
push
jnp
sbb
insl
mov
pushf
xor
aam
push
pop
jns
dec
cwtl
mov
xchg
or
movsb
cmp
loopne
xchg
icebp
pop
jns
and
jge
push
out
push
stos
fmull
dec
repnz
mov
sub
sbb
shll
sbb
pop
jp
pop
dec
int
push
add
adc
loop
push
data16
push
cmp
pop
sbb
fistl
lea
and
and
add
hlt
imul
add
add
scas
mov
and
cwtl
cli
jb
dec
enter
mov
out
cs
imul
stc
mov
fwait
and
out
test
rorb
popf
push
mov
add
mov
out
inc
out
jecxz
adcl
cmc
xchg
cwtl
ss
sbb
push
andb
int
jmp
or
and
or
leave
sbb
sbb
ss
int3
test
or
cmp
jne
js
popf
xchg
inc
add
es
sbb
cmp
mov
or
fcmove
mov
cmovs
scas
mov
push
jne
add
add
dec
pop
dec
jp
dec
fcoms
adc
aad
pop
cli
pmullw
sbbb
xchg
sub
xor
xor
call
jb
int
in
loopne
std
add
xchg
mov
lahf
imul
fmull
outsl
dec
popa
xchg
mov
sub
mov
pushf
inc
xchg
push
out
imul
lahf
aaa
mov
sbb
flds
xchg
loopne
in
lcall
sbb
shr
mov
sub
xlat
jg
aaa
pop
icebp
xor
pop
inc
and
pushf
js
shlb
cmp
xchg
mov
cs
jecxz
jmp
or
lods
aas
cmpsl
xor
dec
add
addr16
rep
xor
cmp
jl
stc
lock
insb
sub
int
pop
gs
js
and
cmp
mov
test
sub
lds
lods
les
xor
mov
sti
movsb
adc
fnstsw
sub
imul
mov
mov
adc
mov
cmp
dec
adc
fs
cmp
cmpl
adc
daa
subb
xchg
lods
jbe
movsl
adc
dec
leave
fs
sub
sub
scas
mov
cmpsl
test
cmc
and
xchg
cld
push
xor
sbb
dec
jbe
mov
add
iret
outsb
aaa
pushf
jl
in
push
scas
xchg
subl
cmc
call
cs
subl
pop
arpl
mov
cli
clc
inc
sub
and
xchg
fldcw
rol
add
jne
loope
clc
mov
orb
movsl
sub
jbe
pmaxub
addb
test
cmp
pop
bound
inc
addr16
mov
add
rorb
sub
pop
popf
lea
add
jnp
movsl
jp
test
jmp
mov
inc
and
xor
in
or
push
int
iret
mov
jo
lahf
inc
outsb
add
scas
pop
sbbl
ljmp
popa
and
pop
mov
scas
les
cli
mov
jne
dec
or
and
fsubrs
je
mov
mov
hlt
ret
push
lock
fimull
mov
cmpl
movsl
mov
cmp
fidivl
add
jae
or
xchg
sub
lret
push
inc
lret
movl
fidivl
popl
jg
mov
insb
out
jl
in
jnp
jp
das
cmp
repz
jl
mov
fadd
and
mov
fildll
dec
sub
inc
push
inc
outsl
frstor
pop
dec
mov
jne
out
adc
test
cmp
push
jne
orl
daa
mov
sub
cmp
mov
lea
out
dec
pop
and
mov
bound
imul
flds
pop
mov
and
test
in
adc
idiv
xor
adc
push
or
lahf
push
fcmovnu
inc
scas
jge
cltd
fstl
mov
xchg
sub
mov
cmp
ds
das
iret
lahf
loopne
aam
pop
shll
mov
jmp
lods
loop
fmulp
and
xchg
shlb
js
cld
adc
fists
adc
cmp
int3
fwait
sub
sbb
push
inc
incb
cmp
push
jmp
adc
fstl
mov
push
mov
lcall
clc
mov
xor
nop
cmp
push
stos
std
push
sbb
adc
scas
outsl
scas
inc
test
rorb
fwait
push
clc
icebp
rcll
xor
shll
pop
aas
cmp
cmpsl
sub
dec
jmp
insl
pop
addr16
xlat
test
stos
fwait
fwait
out
pushf
or
outsl
and
fucomp
xchg
pop
jg
sbb
rcrb
mov
mov
add
dec
jo
adc
imull
add
hlt
insl
inc
data16
add
lds
loopne
sti
ficomps
mov
pusha
pop
mov
or
adc
cmp
out
divb
jecxz
test
je
sub
out
mov
andl
cmc
out
test
or
mov
imul
aas
xor
sub
cwtl
inc
cmpsl
fsubs
icebp
lock
dec
mov
add
icebp
mov
mov
push
shrb
in
sbb
in
mov
nop
arpl
jmp
mov
xchg
cltd
mul
in
xchg
in
add
iret
mov
sti
in
je
arpl
jno
lahf
stos
inc
movsl
aas
lock
insb
test
pushf
paddsw
and
cs
cwtl
sar
and
inc
mov
push
adc
push
jmp
and
popa
pop
nop
pop
out
sbb
xchg
repz
dec
das
fisttpll
xchg
std
pop
enter
xor
loope
mov
in
jb
inc
in
cmp
jmp
stos
aam
repz
movsb
leave
movsb
insb
push
sti
cmpb
mov
push
mov
loop
jae
jp
mov
outsl
or
pop
mov
or
adc
sbb
lea
push
fwait
or
push
adc
mov
xchg
mov
leave
add
sbb
sahf
dec
pusha
mov
stc
xchg
dec
dec
pushf
mov
mov
push
andb
push
popf
jp
mov
addl
jnp
aaa
cmp
fdivrs
xor
lock
xchg
sub
inc
pop
pop
outsl
mov
lcall
rclb
cli
js
je
jp
mov
xchg
pop
in
int
sbb
mov
mov
sub
lcall
pop
push
insl
cmp
xchg
mov
mov
lods
xor
xor
je
js
insb
imul
dec
lods
divb
repz
mov
push
imull
stc
test
int
push
push
cmp
dec
mov
xlat
inc
jne
out
xchg
inc
adc
stos
push
insb
ja
cmp
pop
stos
loope
jno
clc
imul
cld
jno
test
rcll
out
cmpsb
insb
call
fs
dec
sbb
sub
push
int3
scas
xor
jle
outsl
fnstenv
faddl
repz
stos
dec
daa
hlt
mov
pop
inc
xchg
add
enter
pop
mov
clc
sbb
xchg
cltd
pop
add
pop
adc
adc
inc
leave
pop
lock
xor
daa
ret
cli
in
in
insb
rorb
fdivs
bound
push
pshufw
aas
dec
fcmovnu
mulb
jnp
jo
push
mov
pop
ja
and
push
jae
fimull
mov
jns
insl
and
imul
fnstcw
gs
clc
stc
push
mov
les
push
rcll
and
push
mov
and
bound
test
iret
fldcw
cmpsl
stc
enter
mov
and
int3
mov
pop
cltd
xor
inc
sub
mov
and
les
mov
cmp
addb
push
mov
xlat
ljmp
ret
mov
test
jp
out
movsl
movsl
cwtl
dec
xor
int3
and
adc
xchg
mov
daa
xor
daa
in
mov
add
cmp
fwait
pushl
xchg
repz
in
push
outsb
dec
cmp
imul
xlat
fsts
pop
mov
fistps
das
fisttps
jl
sbb
xchg
add
and
js
dec
sbb
pop
jecxz
sbb
jl
sarl
and
popf
cmc
jle
subl
andb
jl
pop
xchg
jae
push
xor
pop
mov
pop
jmp
frstor
pop
scas
call
inc
scas
add
xchg
adc
sar
arpl
inc
bsf
mov
ret
pop
sbb
in
cmpsb
lods
cmpsb
cmpsl
dec
sub
push
jne
push
punpckldq
idivb
repz
jo
xchg
pop
xchg
mov
and
subb
test
inc
cmp
pop
lea
movsl
xchg
data16
cmpsb
push
pop
jae
sbb
movsb
ret
add
mov
add
dec
jg
subl
aam
jns
adc
add
xchg
or
repnz
test
clc
pop
dec
sahf
jg
cmc
nop
jl
jno
fs
dec
push
in
push
cli
and
sbb
push
not
mov
and
addr16
push
aad
scas
mov
dec
push
cmpsb
jno
fwait
lods
adc
xchg
data16
inc
ret
imul
mov
cs
xchg
sub
test
xor
pop
mov
lea
push
cwtl
xchg
jp
mov
and
fiadds
mov
repz
adc
cmc
push
dec
push
aam
jg
pop
repnz
add
lods
pop
cmp
ret
push
xchg
pusha
dec
idiv
in
push
aaa
cltd
dec
enter
shr
iret
ret
mov
call
ljmp
fnstsw
pop
mov
pop
loop
ret
jg
sbb
mov
push
les
push
pop
cmp
mov
mov
insl
lcall
jo
jecxz
sub
fsts
or
repnz
inc
or
fwait
iret
dec
jge
jl
pop
add
push
sbb
mov
mov
xor
pop
xlat
iret
in
sbb
fldcw
imul
insl
push
xchg
test
test
cmc
rcrl
stos
pop
pop
rclb
test
subb
pop
cmpsb
je
or
outsl
push
cmpsw
dec
fwait
bound
cs
enter
and
call
inc
popa
gs
ret
popl
xchg
das
or
outsl
and
cmp
add
movsl
mov
in
or
daa
in
inc
int
jmp
inc
loope
inc
mov
clc
cmp
add
mov
add
aas
add
ret
mov
pop
imul
lret
mov
or
mov
xor
fstp
test
sub
bound
aad
mov
test
out
movsl
insl
push
or
jge
inc
stos
mov
je
sub
aas
pop
jle
push
xchg
push
push
lock
in
cli
int
clc
aaa
lock
in
loop
and
cmp
cmp
cmp
or
daa
cli
mov
xchg
adc
mov
cmp
mull
frstor
adc
in
push
cmc
add
into
add
push
xchg
mov
jne
out
fcoml
jnp
sub
out
mov
xchg
xchg
dec
or
movsb
push
fsubr
loope
jmp
sbb
js
popa
ss
push
mov
xor
push
andb
or
inc
add
in
mov
xchg
xor
lcall
push
cmpb
dec
roll
cmpsl
inc
cmp
sarl
pop
cmpsl
jg
in
mov
mov
sub
cmp
fimull
call
push
xlat
jl
mov
sarb
and
and
pop
mov
movsb
mov
insb
scas
lea
sub
sbb
pop
call
mov
adc
mov
loopne
xor
shll
pusha
out
icebp
or
or
fisubs
dec
sbb
xorb
pushf
sbb
pop
cltd
fnstcw
rcll
pop
push
ja
pop
loope
and
ja
add
pop
movsl
nop
jmp
nop
push
xchg
cmpsb
out
dec
stc
ss
pop
movsb
mov
push
xor
hlt
outsl
test
sbb
inc
push
dec
sub
mov
add
cmpsl
arpl
dec
movsb
mov
sarb
out
mov
ficoml
pop
shrb
fistl
sub
xchg
out
ret
repnz
and
cwtl
stc
adc
std
push
in
add
mov
out
inc
lahf
mov
mov
mov
push
ret
inc
add
insb
push
insb
sub
mov
call
push
or
cltd
xor
mov
mov
adcb
gs
add
jg
push
dec
sbb
sbb
add
jg
leave
stc
mov
sarb
das
repnz
fisubrl
inc
mov
inc
push
mov
ret
insl
insb
inc
jecxz
lods
scas
mov
sub
sbbl
add
adc
add
sahf
sub
jne
je
push
int
cmp
popf
insl
xchg
xor
in
push
push
imul
cs
les
or
mov
mov
or
mov
mov
push
xor
ffree
insb
pop
frstor
pop
jno
jg
xor
mov
pop
fwait
mov
loop
sbb
or
xchg
test
sbb
pop
pop
sub
jmp
hlt
scas
leave
es
fdivs
jbe
imul
or
adc
fistpll
test
imul
lea
das
insl
xor
hlt
std
inc
lahf
out
loopne
daa
sbb
scas
dec
sahf
orb
mov
das
dec
fsubl
mov
mov
test
enter
jno
add
cmpl
mov
push
outsb
push
mov
and
xor
pop
shl
jp
imul
add
clc
ss
jge
fld
popf
mov
mov
xorb
int
clc
pop
cmp
test
push
setae
sub
push
testb
add
add
cli
fsubrs
push
cmc
les
lahf
popa
cli
clc
cmpsl
xchg
jle
das
or
mov
dec
or
inc
sarl
jl
inc
sub
mov
inc
jne
mov
repnz
xchg
out
loopne
mov
jns
pop
lret
push
or
adc
pop
test
inc
xor
rorb
aas
shll
cltd
das
xor
mov
mov
aaa
into
push
cmp
push
pop
nop
loop
sbb
fucomip
pushf
inc
dec
add
push
add
sub
out
mov
adc
in
sub
insb
scas
jns
in
es
dec
xchg
add
notb
dec
add
pop
sti
mov
jp
movsb
pop
pop
add
adc
mov
adc
and
mov
xchg
push
sub
jne
loop
cmpsl
add
xchg
outsl
cs
loopne
mov
pop
sub
roll
outsl
cmc
or
xchg
fldl
xor
cmp
cmp
shl
pop
outsl
jl
cli
pop
fldenv
mov
int
mov
sub
movsb
jp
idivb
inc
das
fcomps
mov
in
lods
push
rol
loop
pop
mov
arpl
call
loope
imul
dec
shlb
mov
push
loop
mov
pop
stc
sub
jl
mov
push
aas
in
cmp
cmp
loope
pop
sub
adc
ret
js
mov
fstpl
pop
jne
cmp
dec
cmpsl
clc
or
pop
lods
test
cld
xchg
loopne
sbbb
ss
shrl
leave
shrl
push
rorl
in
in
cmp
add
in
and
cld
inc
call
mulb
popa
push
cwtl
mov
pop
push
adc
pushf
fcom
inc
clc
nop
lea
in
push
leave
sbb
pop
inc
lret
roll
iret
jecxz
insl
inc
neg
sub
cmovs
or
cmp
int3
adc
into
dec
leave
mov
fldt
jae
stos
mov
push
out
fucom
test
inc
pop
es
out
cli
mov
int
pop
cs
enter
test
pusha
xchg
data16
sbbb
call
dec
mov
fs
lret
xor
ret
and
std
jnp
and
xchg
repnz
rcl
cmp
sahf
mov
or
or
mov
jne
push
push
gs
nop
outsb
and
pop
call
xor
dec
jo
or
lea
ja
jecxz
gs
xlat
sub
out
mov
push
jnp
dec
xorb
mov
outsl
sbb
inc
sub
mov
jns
jl
add
cmp
sti
je
jge
xchg
in
sbb
lret
insb
adc
fnsave
xorl
stc
mov
adc
loopne
sub
lock
ficoms
cmp
ds
stos
dec
les
cmp
xchg
jo
or
orl
xchg
push
push
or
xor
jle
into
scas
bound
dec
dec
fadds
fisubrs
lahf
cmp
cmpsb
arpl
xchg
scas
inc
gs
dec
jl
dec
xchg
and
insb
nop
into
push
call
lods
fnstsw
fs
xchg
mov
repz
xlat
ret
insl
xchg
scas
push
sti
sbbb
push
or
inc
add
add
inc
push
cmpsb
xchg
mov
aas
pusha
nop
cmpsb
mov
push
mov
and
pop
scas
je
outsl
mov
pop
push
scas
int3
mov
mov
cli
incb
push
push
int3
fists
mov
lods
inc
scas
xchg
or
aaa
cmp
or
loop
scas
sahf
loopne
mov
jle
ret
lods
inc
add
lcall
mov
dec
add
frstor
xor
into
jno
sub
mov
imul
in
sti
shlb
int3
adc
jmp
pop
xor
fwait
sub
push
gs
xchg
fmul
xor
and
inc
int3
jnp
stc
int3
out
mov
cmpsb
xchg
cwtl
cwtl
fwait
daa
mov
dec
nop
xchg
aam
popf
push
adcb
jae
loope
mov
loop
jne
cwtl
sbb
cmc
cmp
xchg
and
in
mov
aas
cld
pop
cmp
das
in
dec
fsubrl
mov
lret
rclb
ds
sub
adc
push
ss
test
xor
shll
xor
les
mov
mov
hlt
popa
nop
les
push
divl
sbb
jmp
add
inc
sub
or
pop
stos
dec
jne
lds
xchg
cmp
adc
jg
pop
loop
pop
jno
jnp
dec
push
ja
out
fcomps
fnstenv
clc
pop
adc
and
pop
jmp
not
pop
pop
not
jle
rcl
loop
leave
outsl
or
add
gs
into
xor
cli
mov
xlat
or
push
cmpsl
enter
enter
add
jge
jne
push
pop
lods
popa
fildll
mull
xchg
sub
stc
inc
push
shr
loope
lock
jae
dec
imul
lea
fsubrs
mov
cmp
ljmp
and
jb
subl
pop
xchg
inc
mov
xchg
insb
lods
jnp
mov
sbb
sub
xor
sbb
loop
loop
test
mov
pop
pop
sbb
imul
pop
cmp
arpl
stc
and
mov
call
shl
and
cmp
mov
mov
cld
out
dec
mov
sarl
mov
stc
in
sbb
mov
inc
outsl
mov
mov
mov
ljmp
xor
mov
ss
into
sarl
jnp
xchg
inc
xchg
lods
subps
xchg
dec
jmp
fdivrs
sahf
pushf
and
push
dec
push
mov
ror
popa
lret
sub
aad
movsl
xchg
shlb
aaa
lcall
js
pop
subb
xor
xchg
shrl
popa
xchg
inc
repnz
in
shrb
lea
pop
sbb
xor
and
out
inc
sub
fsubrl
stos
stc
test
in
mov
les
stos
or
dec
int
lret
ds
xor
push
aas
pop
xlat
sub
ret
ss
adc
sub
mov
clc
test
cs
cli
into
adc
inc
daa
ret
push
mov
sub
ljmp
mov
lahf
pop
andb
stos
mov
in
ret
pop
mov
mov
jns
arpl
insl
adc
mov
inc
aad
inc
inc
stos
and
iret
in
dec
pop
mov
pop
call
jmp
nop
arpl
insl
mov
jp
fisttps
xlat
mov
divb
cmpsb
sbb
sbb
cwtl
repnz
mov
mov
dec
xchg
dec
nop
repnz
or
std
cmp
insb
sahf
push
jmp
lods
outsl
jg
ffreep
or
dec
lock
insb
pop
cwtl
jp
push
mov
insb
lods
jns
fsts
mov
icebp
dec
pop
jnp
jecxz
sbb
mov
addb
xchg
xchg
sbb
xchg
arpl
pop
mov
ret
sub
out
dec
or
out
insl
ffree
movsb
sub
in
or
enter
inc
push
and
inc
jecxz
ret
mov
and
fcom
pusha
in
in
jno
fs
hlt
aad
mov
imul
or
gs
inc
std
sbb
ds
pop
pop
mov
sub
dec
sub
mov
std
out
pop
xchg
push
ljmp
lea
les
add
cmp
pop
inc
cltd
jp
loop
in
push
mov
fmuls
scas
ds
loop
test
les
and
and
pop
sahf
xchg
test
add
cwtl
xor
fdivrl
cld
cmpsl
push
xchg
fs
sub
arpl
dec
mov
inc
mov
xor
push
mov
lock
or
jmp
imul
insb
ds
xchg
mov
iret
cmpsl
xor
add
cmp
mov
add
or
push
mov
lods
lahf
and
cmp
push
mov
dec
mov
cmp
push
pop
fadd
movsl
xor
movsb
mov
jl
sbb
mov
mov
popa
cmpsl
adc
mov
sub
data16
aad
dec
jns
inc
gs
sub
std
mov
ss
mov
sbb
xlat
mov
mov
jae
stos
push
push
push
xchg
scas
popa
cmp
pusha
pop
mov
jle
iret
jno
mov
sub
cmp
mov
mov
icebp
jle
xor
mov
ficoml
fs
lret
das
movl
loop
mov
fnstenv
leave
loopne
sbb
adc
inc
sub
mov
iret
and
sbb
into
mov
in
out
dec
cmp
mov
test
aas
push
daa
repnz
add
xchg
les
mov
pop
xchg
jp
outsl
inc
ljmp
push
shlb
adc
fnstenv
mov
push
mov
cmpsb
sub
jmp
jnp
mov
outsb
dec
jne
xor
shrb
in
lods
lods
ja
bound
scas
adc
das
jle
push
and
aam
fldl2e
idivl
add
out
sbb
popa
pop
jecxz
mov
mov
add
js
outsl
mov
add
xor
cmpsl
xchg
dec
mov
sbb
popl
aam
mov
inc
cld
test
pop
pop
jg
loopne
push
cmc
fwait
jg
cmpsb
popf
xchg
mov
and
push
cmc
mov
arpl
or
sbb
loope
test
cmp
and
fstpl
outsl
sub
enter
add
add
mov
xlat
out
dec
test
outsb
or
invd
loop
mov
pop
idivl
cwtl
nop
in
cmpsl
aad
lahf
shr
int3
les
mov
leave
and
cltd
sub
fisubl
inc
adc
sbb
or
pop
adc
outsl
mov
or
jae
sbb
mov
loopne
in
sti
push
leave
adc
and
retw
subl
or
and
inc
ljmp
scas
mov
out
movsl
dec
lahf
mov
cmp
push
adc
nop
push
lret
xchg
mov
pusha
sbbl
gs
aas
and
in
mov
loope
mov
pop
nop
mov
in
les
or
xor
push
iret
test
movsl
push
daa
xor
push
inc
shl
insb
bound
pop
rcl
imul
add
jmp
push
aas
pop
and
mov
divl
lods
outsb
fidivrl
in
inc
decl
push
xchg
lods
jl
mov
stos
xchg
mov
enter
andl
sti
movsb
iret
in
mov
sbb
pusha
xchg
into
inc
lcall
sub
jns
outsb
test
dec
dec
jge
jle
enter
popl
add
sbb
pop
ret
cmpsb
aaa
mov
push
push
inc
xchg
fistpll
fcmovnu
cmp
andb
mov
or
in
outsb
or
call
pop
mov
dec
scas
lcall
push
lea
scas
sbb
leave
mov
icebp
mov
js
inc
fistpll
push
out
cltd
or
mov
ljmp
xchg
ja
fsts
in
sub
mov
or
pop
adc
push
stos
sub
icebp
clc
push
add
lods
xchg
cld
in
pop
pop
imul
sarb
and
mov
jle
aam
add
adc
jg
xor
pushf
inc
cmp
cmpsb
in
lea
inc
ljmp
dec
and
jmp
jp
lcall
jo
mov
cmp
mov
enter
cmc
int3
sbb
mov
js
mov
or
stc
idivb
test
adc
js
sbbb
push
in
jns
mov
cmp
lret
mov
sub
sbb
scas
iret
dec
fsts
xchg
add
rorb
shlb
pop
or
mov
mov
mov
sub
cltd
dec
add
ret
jb
xchg
dec
jnp
lock
push
and
loope
bound
mov
sub
aas
pop
jo
das
lods
pop
mov
or
xchg
scas
xor
dec
aaa
aad
sub
arpl
test
mov
pop
sahf
push
dec
mov
mov
cmpsb
mov
push
lea
out
mov
mov
fld
sahf
cli
push
dec
inc
push
adc
fists
xchg
fdivl
dec
sbb
arpl
xchg
mov
adc
cs
push
dec
ljmp
call
cld
mov
rolb
negl
mov
xlat
out
push
jl
je
call
daa
xchg
data16
pop
push
push
and
add
mov
ds
bswap
xchg
lods
dec
in
fisttps
in
mov
pop
dec
jmpw
popf
jmp
iret
dec
popf
dec
imul
mov
lock
push
scas
mov
push
xlat
inc
mov
leave
push
mov
lods
mov
mov
mov
inc
and
hlt
aam
fsubrl
fisttpl
pop
test
movsb
shrl
pop
aad
xor
xchg
mov
xchg
pop
js
pushf
inc
or
aad
fwait
inc
hlt
push
jno
cs
xchg
jge
xchg
int
movsl
push
add
xor
and
into
or
dec
dec
dec
stc
adc
fwait
jmp
jp
arpl
sbb
mov
imul
push
xchg
mov
and
push
cmp
imul
stc
faddl
sarb
xor
fs
insb
notl
cs
mov
clc
mov
cmp
in
push
mov
inc
scas
mov
mov
cmp
mov
or
aad
ret
adc
pop
inc
mov
xor
adc
cwtl
push
xor
lret
sahf
outsl
sbb
sbb
jnp
or
test
aad
mov
ja
push
mov
hlt
xor
mov
jmp
cmp
das
nop
push
out
jmp
mov
or
pop
cmp
xlat
add
shl
iret
fnsave
push
arpl
rorb
sarl
fmull
dec
in
call
adcl
inc
cltd
pop
inc
loope
lcall
pop
inc
cs
scas
and
adc
addr16
jge
xchg
into
mov
jno
dec
fsubrl
mov
push
jecxz
or
in
ds
pushf
int
inc
fadd
ja
jmp
mov
mov
xchg
in
aas
pop
mov
mov
cli
outsb
dec
xorl
add
les
adc
inc
adc
adc
les
pop
mov
xor
cmp
add
xchg
call
and
and
jl
pop
push
or
movsl
std
loop
mov
test
loop
imul
jns
xchg
data16
mov
mov
movsl
popf
mov
mov
xchg
jb
shl
push
or
movl
inc
ss
sbb
add
push
mov
mov
dec
lcall
jne
xchg
or
xchg
js
mov
in
fcompl
repz
adc
xchg
lcall
std
pop
mov
aam
xor
inc
push
mov
mov
test
into
scas
lods
mov
mov
mov
stos
jle
sti
mov
push
fsts
repnz
lret
in
inc
xchg
rclb
xchg
sbb
cmpsl
aas
xchg
addr16
cmc
leave
cmpsb
movsl
sti
push
and
into
shlb
int3
inc
mov
pop
cli
jl
ja
scas
cmp
popa
mov
add
test
push
jae
shl
jne
in
xor
push
fnstsw
sub
and
mov
lods
mov
ds
dec
or
jecxz
sti
xor
adc
test
orl
jg
sarb
out
ret
clc
dec
add
dec
add
mov
push
ja
push
mov
xchg
add
sbb
jl
test
mov
sub
addps
hlt
cli
sub
ficomps
cmp
mov
dec
sahf
jb
mov
xor
push
push
xchg
and
stos
mov
in
pop
pop
pop
out
lret
mov
cmpsb
cld
push
rcll
dec
shll
outsb
cmpsb
sbb
cmp
add
fstps
sbb
and
leave
sub
mov
cmp
jmp
push
xchg
mov
or
adc
gs
out
movsl
mov
inc
sbb
mov
mov
jg
test
repnz
xchg
loopne
push
adc
lods
inc
loop
out
mov
fimuls
xor
push
stc
pop
push
ss
daa
jmp
mov
pusha
mov
shrb
add
sar
mov
fisubl
xchg
add
frstor
dec
mov
add
rorb
movsl
insb
ret
push
mov
pop
or
test
jge
inc
ja
shr
into
inc
mov
mov
movsb
inc
loop
loope
dec
adc
dec
sti
fwait
push
mov
cmp
xor
mov
dec
sbb
shlb
xchg
pop
mov
mov
out
idiv
pop
in
mov
outsb
jecxz
mov
pop
inc
ret
jb
mov
insl
dec
fwait
bound
in
stos
add
decl
lds
pop
jg
cmp
test
jg
sbb
jg
pop
fldcw
sub
iret
adc
cwtl
frstor
xchg
jb
rclb
testb
test
or
leave
push
mov
xor
add
rcl
dec
sub
cmp
pop
movsb
mov
test
push
lret
inc
fdivl
bound
pusha
or
xchg
sbb
cltd
jl
add
insb
fisubl
mov
cmc
into
mov
enter
rorb
xchg
lock
into
ljmp
xchg
sub
fs
into
push
push
scas
pop
fdiv
and
dec
dec
push
add
or
adc
or
xchg
addl
and
mov
addr16
jg
mov
test
mov
inc
ret
cmpsl
and
jge
and
and
sub
inc
imul
lea
jl
cmc
cmp
adc
pop
pop
test
xchg
pop
lcall
add
arpl
nop
sbb
mov
sbb
xchg
push
dec
sbb
lods
sbb
dec
enter
push
std
mov
mov
out
pop
scas
sub
stc
jp
push
xchg
mov
out
idivl
add
and
adc
and
lcall
movsl
pop
in
pop
sbb
push
jo
inc
adcb
jb
out
xchg
mov
pop
mov
les
sub
inc
lahf
and
testb
popf
adc
jo
std
lods
mov
lods
dec
in
subb
lcall
sbb
out
fadd
jno
or
in
dec
loope
push
out
mov
arpl
scas
aad
loopne
mov
mov
sti
pop
xchg
mov
push
mov
sbb
les
xchg
xchg
inc
data16
jo
xor
sbb
insl
cmpl
adc
loope
pop
in
mov
jno
in
aad
out
iret
loop
stos
sbb
cmp
jp
mov
fs
int3
sbb
mov
ret
aaa
dec
jb
mov
aad
cmp
and
adc
orl
dec
and
icebp
xor
or
in
sub
xchg
js
loope
fwait
int3
outsl
xchg
loop
sbb
jl
out
aad
push
adc
sub
push
mov
push
adc
into
cmp
mov
mov
loope
popa
fcmovne
jle
movsb
mov
and
ret
push
arpl
and
mov
out
pop
out
adcb
arpl
pusha
cmp
mov
mov
adc
loopne
outsb
fimull
mov
sbb
wbinvd
push
jb
cmp
pop
loop
out
stos
jns
loopne
mov
neg
adc
sbb
cmp
inc
mov
popa
dec
movsl
dec
xchg
in
pop
aad
dec
sbbb
icebp
xor
rorb
lahf
js
mov
push
jo
test
in
sub
pop
adc
and
mov
jns
cli
lcall
mov
ss
aad
and
outsl
and
push
add
in
push
ljmp
sahf
xchg
cmp
cmp
jbe
aas
pop
pop
cs
pop
test
cmp
add
mov
xor
fnstsw
fdiv
mov
fsts
sub
adc
jbe
inc
test
sbb
jae
psubb
dec
pop
dec
xchg
icebp
jp
jns
push
mov
or
sbb
fnstsw
pusha
cltd
subb
cmc
jg
push
jns
shll
mov
sbb
mov
nop
fnstsw
push
mov
adcl
xlat
pushf
adc
mov
push
jl
mov
xor
pusha
xchg
clc
ror
xchg
pop
movsb
sbb
lret
pop
jbe
lods
fnsave
cmp
out
mov
cmpsb
insb
and
call
mov
add
jmp
mov
add
popa
lret
ja
cmp
ds
push
xor
and
rolb
lcall
add
and
and
xor
cmp
movsb
mov
or
sahf
xchg
mov
scas
stos
push
fildll
add
mov
aad
jbe
lahf
mov
movsl
into
xor
loope
aad
push
or
add
cmp
xchg
in
xchg
pop
or
or
xchg
js
movsl
xchg
test
and
enter
jge
xchg
xlat
pusha
mov
jle
cmp
gs
in
add
pop
pop
add
push
inc
push
push
pop
icebp
test
andb
inc
leave
aam
push
lcall
or
xor
inc
xchg
pop
lock
loop
sbb
mov
into
dec
adc
xor
dec
mov
scas
negb
sbb
inc
aad
out
fldt
in
inc
stos
clc
jmp
jg
xor
pop
add
roll
inc
rcrb
lods
and
ds
adc
jg
sub
dec
mov
jo
push
sbb
mov
fnstenv
mov
pop
dec
pop
mov
test
lret
pop
test
mov
xchg
fnstsw
mov
es
inc
int3
repnz
xchg
leave
cmp
push
mov
mov
sub
aam
imul
hlt
mov
repnz
cmp
out
jno
int
aam
pop
int
arpl
add
jl
push
pusha
push
add
leave
pop
popf
sbbb
xor
push
mov
add
shrb
je
inc
cmp
adc
dec
out
cmpsb
outsl
mov
mov
lods
enter
sbb
inc
sahf
ljmp
orl
lahf
adc
sub
pop
adc
sbb
jno
stos
rcr
nop
sub
mov
aam
lret
bound
xor
cmpsb
mov
cmp
aas
push
lods
mov
lahf
add
dec
ficoms
xor
fildll
push
jne
xchg
dec
adc
sbb
gs
fwait
into
cmp
adc
xlat
xchg
xor
and
popf
in
subb
or
and
inc
xorl
xchg
jp
and
int
or
adc
cmp
out
ja
pop
push
shrl
dec
sub
insb
sub
out
lds
sub
cmp
xchg
mov
ret
xor
adc
xchg
or
pop
and
sbb
jl
jmp
sbb
ret
fidivrl
fsubl
cltd
iret
sbb
adc
dec
fcmovnu
cmp
hlt
sbb
or
repz
xchg
jno
adc
loop,pn
inc
cmc
stc
les
fsubrl
jae
push
cmp
hlt
pop
addr16
xor
pop
xchg
mov
out
pop
sub
iret
pusha
xchg
mov
xchg
pushf
inc
inc
in
inc
enter
stos
jle
mov
cs
sub
ret
inc
add
dec
add
addr16
adc
movsl
punpcklwd
inc
cmp
cmpsl
xchg
dec
push
fidivl
jnp
push
mov
push
mov
inc
mov
push
int
aam
pop
outsb
sbb
cmp
cmp
lds
mov
xchg
repnz
mov
push
in
and
lahf
scas
fdivrs
lock
roll
lret
sarl
test
cmp
pop
mov
inc
mov
xchg
and
inc
cli
test
mov
jns
mov
daa
and
sbb
dec
and
pop
or
mov
adc
cmp
push
bound
mov
cmpl
addr16
pcmpeqd
mov
and
xorb
fsub
jae
fldcw
add
imul
clc
call
mov
xchg
xchg
dec
imul
ficoml
dec
jmp
push
in
ss
sub
add
jo
out
lock
dec
ret
adc
sbb
xor
add
out
xchg
cs
pop
testl
or
pop
in
in
enter
clc
pop
and
jecxz
scas
adc
inc
dec
loop
add
fwait
inc
xchg
xor
xchg
sub
shlb
adc
cwtl
es
jnp
dec
or
inc
mov
push
ret
lret
or
mov
jg
mov
mov
ret
sbb
add
xlat
push
pop
mov
ss
lds
out
shl
push
pop
mov
in
pop
xchg
insb
imul
jle
jg
in
pop
xchg
sbb
mov
loop
inc
inc
xchg
insb
dec
test
dec
outsl
repnz
pusha
ds
lret
lods
test
xchg
sbb
dec
jecxz
xchg
hlt
xchg
sbb
test
icebp
repnz
or
inc
dec
movsb
rcrl
inc
test
dec
in
jge
std
inc
dec
sbb
jg
inc
mov
mov
add
mov
neg
adc
inc
addr16
movsl
fs
sub
dec
in
xchg
test
xchg
cltd
or
mov
mov
push
dec
das
out
sbb
pop
ja
adc
aam
adcb
mov
rcrb
inc
dec
mov
gs
jno
lock
je
sti
xchg
and
das
inc
push
decl
xor
push
pushf
and
mov
xor
cmp
mov
xchg
mov
sahf
push
push
insl
shl
pop
movsl
rclb
mov
jo,pt
inc
sub
mov
jne
mov
push
icebp
in
mov
shll
pop
push
cmp
jnp
jno
movsb
add
fdivrs
sahf
pop
fidivrs
mov
xor
push
add
leave
es
jb
fcmovu
scas
dec
sbb
insl
lock
and
jo
mov
or
cwtl
test
outsb
pushf
cmpsb
cmp
or
mov
inc
addr16
scas
jae
mov
fldl
outsl
cmpsl
in
cmp
xchg
ffree
inc
loopne
clc
xor
sub
sarl
sub
mov
ret
stos
mov
test
pop
inc
scas
mov
xchg
das
jecxz
repz
lahf
call
mov
fidivrs
out
mov
mov
inc
repnz
add
pop
test
ret
lods
sub
stos
lea
jmp
js
aaa
or
int3
icebp
cmp
cwtl
xor
lds
and
inc
scas
xchg
pop
ljmp
cmp
out
es
scas
or
scas
notl
popa
mov
loopne
mov
out
je
xor
mov
sbb
jo
sub
mov
pop
push
inc
cli
xor
cmp
push
ss
inc
sub
inc
jno
or
loope
push
mov
mov
insl
movsb
push
shr
adc
mov
addr16
add
sub
ljmp
or
jl
jecxz
mov
daa
dec
movsb
mov
cwtl
inc
rcl
in
pop
sahf
fwait
mov
loopne
into
inc
xchg
in
hlt
popf
lea
rcll
mov
jno,pt
iret
and
or
pop
jne
inc
and
jae
add
xchg
jl
leave
test
inc
cmp
push
adc
sahf
adc
pop
dec
test
adc
jmp
xchg
adc
fldt
sub
xchg
cld
nop
inc
outsl
clc
cmp
dec
insb
push
push
mov
das
enter
cwtl
xorb
leave
push
les
push
sub
std
pusha
notl
out
sbb
lea
fwait
or
sti
or
jne
lds
shlb
out
testb
mov
add
jbe
dec
lods
icebp
lahf
in
cltd
popa
mov
cmp
cmpsl
sub
out
jecxz
dec
add
cmp
add
mov
dec
jg
sbb
and
jbe
xor
push
adc
dec
fmul
idivb
fs
add
adc
jo
mov
js
add
xchg
ss
call
adc
addb
daa
rorl
test
xchg
mov
fldz
adc
into
xor
int3
insl
xor
inc
pop
test
jnp
cmpsl
cmp
dec
popa
jo
cmp
aaa
test
fcomps
fisttpll
scas
ret
mov
ret
insl
jb
fcomi
lahf
dec
xor
xlat
adc
scas
imul
inc
xor
mov
shrl
and
inc
addb
or
mov
sti
adc
cmp
in
bound
jecxz
mov
adc
ss
cmp
lods
insl
je
mov
js
add
aaa
sbb
sbb
inc
fucom
test
or
push
jle
xlat
dec
pop
inc
push
xor
je
dec
in
push
adc
insb
fdivl
loop
ja
dec
xchg
dec
pushf
mov
incb
outsl
stc
addl
cmc
pop
cld
jle
and
fs
sahf
cmp
lods
adc
out
test
iret
je
in
inc
mov
les
call
xchg
pop
insl
and
xor
ror
xchg
dec
xchg
pop
mov
out
mov
clc
mov
inc
je
mov
mov
cmc
scas
add
push
jecxz
xlat
rolb
fnstcw
clc
adc
jbe
xor
pop
das
icebp
mov
add
xor
mov
push
popf
xchg
out
mov
test
scas
mov
xchg
pop
dec
sub
ja
sub
aad
addr16
mov
add
fldenv
cvtps2pi
fs
das
sbb
sbb
dec
cmpsl
into
push
movsl
lret
push
mov
push
push
cmp
mov
adc
inc
mov
icebp
ret
scas
adc
icebp
cmpb
mov
mov
test
push
in
sbbl
sbb
adc
add
xchg
xor
inc
mov
bnd
roll
inc
jae
mov
js
xchg
jl
xor
jl
sub
mov
mov
push
sti
icebp
push
inc
loop
in
mov
aaa
ja
in
adc
stos
stos
out
mov
daa
pop
cmc
or
loop
pop
pop
ljmp
pop
sbb
inc
xor
aad
cmp
and
cs
repz
xchg
cmp
insl
fnsave
xchg
mov
repnz
mov
mov
lea
jecxz
and
subl
daa
bound
pop
mov
adc
dec
orl
fimuls
test
aad
inc
ret
adc
add
mov
inc
cmpl
mov
js
push
adc
jne
ds
adc
xor
icebp
sub
push
int
mov
mov
in
mov
fs
push
aas
lcall
xor
sbb
or
bound
add
cmpsl
loop
jmp
and
mov
mov
stos
insb
or
inc
pop
jecxz
sbbl
insl
inc
dec
mov
in
or
xor
mov
neg
mov
xor
push
inc
loope
ftst
lods
cmp
shll
pop
lahf
inc
dec
cmovne
ret
aas
test
rcrl
icebp
imul
adc
push
mov
xchg
sbb
mov
xchg
push
imul
mov
popf
mov
loop
jl
xor
adc
lea
xor
jg
pop
push
jge
je
mov
jp
in
inc
pop
sbbb
pop
and
leave
xor
es
pop
imul
jo
or
out
addr16
pop
or
sbb
inc
mov
mov
sbb
arpl
sub
jbe
ss
mov
xchg
rclb
pop
push
leave
sbb
movsb
icebp
fwait
daa
mov
push
and
sub
nop
lahf
outsl
mov
icebp
mov
int
inc
dec
gs
jmp
not
out
out
push
fst
cltd
and
jl
sbb
cmp
jnp
push
jmp
mov
mov
push
out
xor
push
stos
das
mov
fidivl
cmp
movsl
xchg
imulb
sbb
pop
xchg
inc
jp
mov
pop
or
pop
dec
lds
xchg
add
lahf
xchg
rcrl
add
sti
in
cmc
imul
mov
pop
dec
test
xchg
xor
lcall
cmp
dec
inc
icebp
cltd
jo
lcall
nop
add
push
inc
lcall
adc
sub
inc
popa
cld
pop
scas
jo
insl
xchg
fstpt
int3
rolb
push
jnp
je
sub
push
outsl
mov
gs
sahf
adc
xor
orb
lret
adc
sub
dec
xchg
fists
mov
arpl
add
out
scas
imul
add
fmull
popf
in
lea
cld
incl
out
cmc
push
gs
adc
cld
mov
or
int
mov
mov
xor
and
ret
stos
aas
imul
scas
bound
mov
pop
xor
mov
test
js
ficoms
dec
stos
pop
fdiv
gs
inc
outsb
in
adc
ss
repnz
cs
pop
bound
jo,pn
mov
mov
xchg
dec
flds
mov
or
and
shll
das
adc
mov
cmc
and
stc
xor
pop
pop
dec
mov
sub
shrb
cmp
jmp
pop
dec
aad
test
push
arpl
xchg
mov
sub
and
mov
dec
js
dec
call
xchg
outsl
jmp
sub
inc
pop
and
shll
addl
aas
inc
enter
jo
cmp
mov
cmc
or
sbbl
sar
decb
and
mov
inc
pusha
add
and
mov
or
mov
cltd
outsb
pop
fldcw
sbb
addr16
pop
dec
test
push
pushf
mov
dec
out
daa
mov
xor
sbb
push
pop
mov
cli
and
jge
enter
xor
femms
push
mov
popa
xorl
leave
shll
shr
push
jne
xor
lret
mov
fidivrs
mov
inc
loope
xchg
jb
cmpsb
ficoms
xor
lea
push
std
push
push
inc
push
scas
les
xchg
movsb
and
in
divb
cmp
movsl
jl
ret
pop
lret
mov
or
mov
mov
push
sahf
and
dec
xlat
addr16
ljmp
pop
mov
jg
stos
push
iret
mov
popa
das
out
mov
leave
cli
xor
jae
rol
pop
aas
jg
jg,pt
pushf
and
push
add
mov
and
sbb
mov
mov
addr16
cmp
adc
pop
cmp
aam
pop
pop
faddp
xlat
jns
xchg
mov
daa
popa
mov
fcompl
data16
inc
inc
mov
jns
notb
mov
add
les
sub
int
icebp
jecxz
imul
dec
cld
leave
lcall
xor
lcall
pop
out
test
mov
or
negl
pop
ret
pop
cmp
jae
std
cmc
js
pop
jns
push
fisttps
lcall
push
in
sub
mov
stc
xchg
cmp
add
bound
dec
jnp
inc
or
mov
push
pop
mov
xchg
fnstcw
add
push
inc
dec
mov
mov
xchg
mov
inc
inc
pop
call
bound
dec
fidivrl
xor
loopne
and
cmp
add
dec
xor
imulb
bound
fistpll
fwait
int3
rcl
push
mov
or
or
mov
sbb
xor
dec
mov
mov
sbb
repnz
pusha
sbb
adc
push
out
cmpl
out
imul
dec
push
dec
jne
sbb
inc
pushf
push
sti
dec
sbb
jnp
lret
jno
xchg
and
out
push
lds
adc
mov
pushf
add
into
stc
inc
movntps
ficompl
or
filds
push
or
leave
loop
mov
lea
clc
inc
ret
mov
push
mov
add
clc
fildl
or
lcall
aad
cmp
inc
pop
into
adc
test
ja
pop
test
sbb
sahf
adc
jle
daa
push
stos
cmp
and
or
xchg
and
out
popa
jle
and
rclb
sub
mov
gs
inc
divb
sbb
aam
in
push
xchg
rcrl
aad
cld
fwait
push
push
and
pop
gs
inc
jbe
scas
mov
jecxz
cmp
jns
nop
fcoms
sbb
aas
outsb
or
lret
mov
pop
ja
fidivrs
rcl
lds
xchg
flds
xor
out
or
lret
fistpll
in
aam
add
fucomi
add
push
div
push
stc
movsl
xor
in
pop
jmp
cmp
pop
jb
ret
adc
testl
pop
jnp
push
das
dec
mov
data16
data16
xchg
int3
cmp
dec
loope
mov
jp
jl
dec
int
mov
in
fcomip
inc
mov
stc
mov
leave
pop
mov
insb
cmc
mov
inc
orl
daa
sub
and
leave
cmp
and
lock
int
pushf
xchg
fwait
jmp
fimull
add
lea
jecxz
pop
fdivl
mov
jbe
dec
stc
notb
and
divl
in
leave
or
lret
je
add
push
scas
mov
push
decb
mov
fisttpl
sbb
stos
inc
or
int3
js
sub
jo
mov
ret
scas
inc
pop
dec
mov
adcl
daa
out
std
mov
add
pusha
jns
cld
iret
or
or
mov
or
cmp
sahf
add
test
je
xchg
adc
push
xor
pushl
and
sub
xchg
outsl
sub
out
test
inc
adc
xchg
add
jo
sub
pop
int3
push
pop
add
xchg
sbb
sbb
aam
jle
and
mov
jb
sbb
lcall
mov
mov
xchg
rcll
push
xor
or
cmp
fs
jmp
test
aaa
mov
in
and
incb
loope
pop
mov
fndisi(8087
mov
mov
mov
pop
lea
or
push
add
xor
fidivl
call
and
aad
xchg
and
scas
push
dec
fcmovne
or
mov
inc
fwait
ds
test
pusha
inc
sbb
nop
mov
lret
cmp
jp
pop
sbb
icebp
inc
and
loopne
test
mov
pop
sub
mov
test
jg
and
mov
jecxz
push
sbb
or
push
sbb
cld
add
popa
mov
pop
cmpsl
nop
cwtl
jmp
fdivrs
push
repz
andb
enter
jp
lcall
mov
imul
inc
loopne
lcall
push
cwtl
push
mov
aam
ljmp
or
pusha
lret
cld
xchg
jmp
outsl
fucompp
stc
adc
inc
pop
adc
mov
jle
outsb
stos
lret
and
jb
mov
inc
mov
sbb
mov
dec
inc
ljmp
xor
aas
or
fildl
cltd
sbb
stc
iret
test
out
in
ss
test
mov
mov
mov
xchg
cmp
push
cmc
pusha
push
pop
mov
int
xor
popf
je
jg
push
out
das
pop
dec
aad
or
dec
lret
inc
out
and
rcrb
push
lods
sub
push
fmull
out
mov
jp
inc
dec
cmp
lods
dec
pusha
sbb
jo
stos
mov
cmp
cmpsb
call
xor
adc
sbb
pop
js
cmp
movsl
xor
push
mov
inc
cli
mov
push
cmp
xchg
lcall
fwait
mov
insb
call
cltd
les
xor
aam
nop
lahf
in
clc
and
scas
test
mov
repnz
lret
push
mov
bound
pop
sub
mov
lea
and
mov
push
pop
mov
insb
addr16
mov
enter
dec
adc
imul
insb
xor
mov
jmp
mov
in
test
push
fisubl
arpl
cmp
fisttps
and
and
pushf
cwtl
cmp
cmp
xor
mov
jecxz
add
gs
add
lock
sub
cmpb
ret
in
push
ret
mov
scas
or
xor
popa
cltd
adc
cmp
push
push
into
pop
xor
mov
pop
fildl
adc
xchg
jbe
jnp
in
push
mov
cmp
nop
cmp
mov
pop
stos
pop
out
bound
sub
int3
mov
dec
leave
inc
or
cs
jecxz
xchg
sbb
lods
arpl
sub
sub
mov
out
inc
fwait
jle
rcrb
nop
jbe
movsb
mov
movsl
and
xor
or
pop
lret
mov
adc
es
jl
mov
cmp
mov
cmp
push
cli
pusha
lods
fld1
scas
test
bound
fmulp
loop
stc
or
pop
repz
bound
sbb
enter
lret
sub
and
xor
jle
mov
jge
arpl
add
scas
clc
adc
xchg
mov
out
in
lret
repnz
jge
data16
jg
jp
clc
lcall
test
mov
xchg
outsb
xor
mov
dec
popa
lret
test
inc
cltd
sub
sbb
pop
push
jp
test
mov
aas
and
movsl
xorl
xor
fidivrs
or
call
and
cld
cmc
std
push
fs
in
das
xchg
inc
lods
pop
call
mov
dec
jl
into
xchg
xorl
inc
fisubrl
scas
mov
push
cmpb
das
pusha
sbb
lahf
lock
sbb
add
test
xor
hlt
pop
nop
mov
adc
std
pop
jne
fs
push
pop
inc
jbe
add
mov
loop
lret
loop
std
fisubrl
test
cs
or
mov
pop
in
sbb
out
lret
test
xchg
adc
lods
mov
les
int
mov
push
gs
int
cmpsl
bound
and
repz
call
fcomp
add
push
sbb
mov
mov
loopne
fdivl
fistl
je
jb
xor
in
lcall
int
ret
mov
jge
ds
jb
rclb
js
and
ss
bnd
ds
iret
ret
daa
fstp
shrl
pop
pop
and
inc
cmpsl
mov
xchg
ds
sti
jne
das
insb
adc
mov
pop
cmp
mov
dec
push
push
int3
push
mov
ja
xchg
fidivs
lahf
dec
ret
popf
aam
rclb
loopne
mov
cmpsl
lds
adc
icebp
and
and
mov
mov
jmp
or
out
fmul
aas
cmp
cmc
mov
xchg
push
xchg
xor
in
cmc
mov
in
mov
fidivrl
mov
jne
sbb
jmp
test
cmp
das
jl
sbb
add
test
sbb
xchg
inc
int3
rcll
repz
mov
add
movaps
push
test
inc
sahf
mov
les
xchg
pop
and
fdivrs
call
fsubrs
into
add
push
dec
sub
mov
push
xor
xchg
ja
ja
and
mov
xchg
pop
decb
inc
das
movsl
mov
jnp
xor
pop
addr16
in
icebp
movb
and
hlt
inc
test
imul
mov
xor
in
bound
mov
xor
rcrl
stos
mov
mov
cmp
xchg
and
sbb
push
xchg
cwtl
das
push
cmp
aam
xchg
insb
mov
rcrb
jne
lret
pop
inc
xchg
enter
test
sbb
outsl
jp
jno
lahf
adc
cltd
lret
inc
cmc
xchg
cmp
xor
out
mov
test
loope
inc
push
ss
xchg
add
push
mov
je
fwait
cmp
push
sti
or
mov
cs
ficompl
cmp
jae
inc
xchg
inc
pop
pop
loopne
sbb
or
cli
add
lret
js
sub
repnz
or
mov
dec
add
cwtl
push
ds
mov
ja
in
mov
jnp
fnstcw
pop
es
lret
nop
shlb
and
adc
daa
and
arpl
adcl
push
ja
push
mov
jno
stos
mov
repnz
gs
push
sbb
es
into
movl
jae
jecxz
or
cmp
loopne
fucomip
jmp
dec
mov
std
mov
adc
jae
xchg
and
lods
mov
mov
nop
lea
sbb
psubsb
xor
jp
out
addl
jl
dec
push
pop
arpl
push
out
nop
sbb
mov
add
insl
call
push
dec
sub
int3
nop
dec
dec
push
jbe
pop
fnstsw
pop
pushf
and
add
jns
lock
aam
ret
cmp
imul
fistps
imul
scas
add
add
adc
push
pushf
xchg
adc
cmp
iret
mov
testb
push
sbb
mov
aad
repz
jl
sbb
lock
jae
sbb
int3
cmc
out
lret
movsb
pop
mov
add
push
dec
inc
push
call
into
test
stc
insb
add
pusha
outsb
push
mov
test
ss
sbb
jp
cmp
lock
pop
fnsave
xorl
add
xchg
push
inc
mov
jae
je
jo
push
push
inc
sbb
inc
cld
jno
mov
lcall
lahf
cmp
aaa
lock
stc
push
xor
sahf
insl
push
pop
mov
cmp
js
fs
shll
or
inc
mov
fs
es
mov
addr16
cmp
mov
inc
lea
dec
xor
sub
pop
in
cmp
ficoml
aas
ret
fmul
mov
pop
in
popa
xchg
mov
iret
div
enter
call
xor
in
pop
mov
ret
pop
nop
sub
xor
sub
insb
faddl
lahf
stos
dec
sbb
iret
and
daa
fildll
dec
xchg
ljmp
sbb
mov
lret
push
add
dec
cmp
mov
dec
lret
out
les
cld
mov
pop
ss
jmp
fsubr
adc
lock
cmp
bound
les
fucomi
cld
shlb
std
aad
out
inc
fwait
outsb
lahf
or
cwtl
or
lret
fisubl
and
inc
pop
pusha
pop
or
add
cmpsl
mov
mov
cwtl
std
daa
and
addr16
add
arpl
xor
pop
inc
jno
imul
mov
outsl
repnz
mov
mov
xlat
scas
cltd
jl
lods
das
add
call
inc
daa
inc
jg
adc
jns
in
cmp
sub
test
mov
paddusb
sub
frstor
sub
sub
lret
and
orb
cltd
jo
rclb
loope
clc
cld
faddl
inc
sti
dec
stc
sub
aaa
mov
mov
push
mov
cmc
imul
or
in
or
push
mov
fidivs
bt
inc
pop
mov
pop
imul
jg
lcall
dec
mov
add
sbb
aad
pop
aam
cmpsl
js
adc
int3
sbb
daa
adc
movsb
adc
repz
push
mov
popf
adc
les
xchg
popa
shrl
dec
aam
test
divl
pop
daa
jae
imul
sbb
into
mov
sub
cltd
inc
push
aas
std
sarl
xchg
pop
xor
mov
dec
aaa
fldcw
jmp
leave
sbb
stos
mov
jg
out
dec
inc
outsl
push
mov
push
adc
mov
test
mull
fcoml
cmp
jmp
pop
shll
scas
sub
xchg
xor
ss
mov
jmp
imul
popa
push
ja
movsb
in
sub
jne
jns
inc
rclb
ljmp
or
jns
arpl
int3
inc
scas
lret
subl
cmp
mov
loop
out
inc
sbb
data16
jo
jmp
mulb
push
or
pop
sub
lds
or
nop
aam
ja
xor
mov
pop
insl
sarb
aaa
dec
pop
icebp
pmullw
movsb
jg
pop
mov
sbb
jmp
cmpb
pop
loop
sub
les
scas
or
dec
aad
insb
mov
push
push
outsb
dec
pop
in
xchg
lret
xor
inc
cmpb
and
int
jmp
inc
jmp
xchg
xor
add
mov
repnz
inc
insb
push
jg
movsl
inc
inc
lahf
or
dec
insb
mov
dec
xor
cmpsb
nop
pop
ds
pop
jmp
aad
ss
movsb
test
loope
inc
lret
shlb
jecxz
loope
adc
test
mov
adc
iret
pop
in
and
enter
daa
dec
and
out
and
inc
or
jae
dec
sbb
icebp
or
mov
xchg
mov
xorb
and
jne
pop
sub
xchg
cli
cwtl
aad
and
xchg
and
les
adc
out
cmpb
jne
gs
subl
daa
in
xchg
lds
outsb
lds
mov
xor
inc
pop
sahf
pop
dec
lahf
add
dec
jbe
push
push
jmp
or
pusha
ficompl
add
int3
nop
mov
xchg
cs
dec
testl
hlt
stos
das
loopne
ja
add
mov
scas
rcrl
ror
cmpsb
fsubs
or
in
fdivs
nop
push
insl
adc
pushf
je
pushl
jbe
mov
clc
movaps
jo
leave
sbb
lahf
add
test
aad
dec
jg
repnz
das
outsl
cmp
mov
ss
xor
or
ja
sbb
xor
int3
test
arpl
adc
movsb
mov
filds
imul
popf
mov
mov
ret
out
ror
pushf
repz
pop
imul
or
xchg
pop
cs
inc
aas
pop
mov
repnz
movsb
jg
hlt
fmuls
rol
or
adc
gs
std
pop
pushl
mov
push
dec
mov
sti
int
xor
mov
les
sbb
es
cmp
xor
cmpsl
or
ret
inc
sahf
fsubr
jnp
roll
push
aaa
mov
rcrb
in
jmp
stos
fwait
pop
int3
pop
lret
pushf
in
lahf
fistl
add
inc
clc
inc
mov
bnd
pop
loope
ret
mov
aaa
repz
lret
movsl
stc
xor
or
jecxz
or
and
test
jae
dec
dec
xor
mov
jo
xchg
inc
je
fstps
add
in
cmp
add
loope
mov
fildl
mov
push
sbb
into
rcll
mov
test
dec
loopne
push
cmp
je
fisttpl
scas
xchg
loope
xchg
mov
jno
jnp
int3
dec
ljmp
xchg
mov
push
cmp
push
aas
jle
out
jae
xchg
sbb
aas
mov
add
pop
inc
adcl
out
test
out
fsubrl
xchg
in
aam
cmp
and
and
jno
shrb
fcompl
loopne
not
and
pushf
xlat
or
popa
je
icebp
sti
jns
add
int
ficoms
addb
jo
test
add
sahf
cmp
cmp
pop
call
mov
in
and
ret
cli
fsubl
cmp
adc
sub
daa
dec
lock
mov
cmp
push
dec
movsl
xchg
inc
rcrl
addr16
mov
mov
pop
add
or
or
push
imul
and
pop
jmp
dec
sbb
repz
and
in
sbb
jne
adc
sub
arpl
pop
sti
out
mov
dec
mov
stos
dec
add
add
mov
xor
push
jmp
lea
add
pop
cmc
and
inc
hlt
fmuls
add
int
push
movsb
fists
movsb
jp
data16
xor
mov
sbb
lea
and
mov
and
lock
rolb
imul
lahf
shlb
mov
mov
add
int3
or
addl
sbb
fwait
aas
in
fbstp
aaa
adc
push
idivl
fs
out
cmpsl
in
call
testb
int3
shrl
pop
mov
arpl
jecxz
js
ss
test
lcall
popa
std
mov
shlb
xchg
les
cltd
fcomp
mov
jmp
arpl
sbb
fidivrs
imul
test
inc
fstpt
sub
xchg
cmc
lret
clc
lock
push
mov
jno
lds
xchg
lahf
pop
sbb
sub
ja
mov
and
mov
mov
add
xchg
aad
or
test
xor
pop
xor
nop
shlb
jp
xchg
repz
or
fs
push
movsl
adc
mov
in
mov
fcompl
not
dec
or
adc
mov
add
or
dec
addl
dec
or
xchg
addr16
add
dec
jle
lret
push
adc
outsl
mov
sub
inc
dec
or
mov
xchg
stos
aam
cmp
cmp
mov
mov
or
pusha
pop
push
movb
or
sbb
pop
mov
jnp
pop
dec
cmc
cmp
add
les
imul
pop
loope
in
pop
fcomip
jb
pushf
sub
dec
in
cmp
adc
xchg
sub
add
jae
inc
xchg
cmp
rclb
inc
gs
insl
adc
cmp
push
lahf
mov
cmp
fs
scas
xchg
jle
mov
and
and
xchg
lods
mov
popa
sub
adc
push
push
xchg
cmp
cs
mov
push
pop
jle
loope
pop
jno
sbb
pop
test
shll
vfnmadd231sd
dec
adc
or
mov
fwait
aaa
xor
les
cmc
lret
frstpm(287
test
pop
jp
out
mov
xor
mov
push
inc
nop
inc
dec
dec
jp
jle
scas
imul
movsl
pop
loopne
mov
int3
pop
jns
in
repnz
je
cmp
mov
jle
xor
dec
sub
and
pop
shl
lods
adc
pop
mov
out
cmp
sarl
sub
stos
pop
lahf
jl
hlt
sbb
stos
jae
sub
or
add
outsl
stos
sti
inc
inc
cmp
iret
fwait
iret
lods
push
movsl
daa
push
add
mov
push
lahf
sub
xlat
fimull
ret
inc
mov
and
jmp
xor
ss
push
pop
into
ret
or
pop
popa
dec
in
loopne
jle
cli
addr16
aas
sbb
sbb
pop
imul
mov
or
sub
stos
mov
xor
jp
insb
inc
mov
sbb
xlat
sub
arpl
xchg
pop
fcom
dec
jp
pop
scas
jns
nop
outsl
int3
lret
mov
dec
push
cmpsl
push
and
int3
adc
leave
mov
test
add
push
sbb
or
or
sbb
pop
loopne
orb
les
xchg
icebp
mov
inc
sub
dec
mov
dec
mov
push
sbb
div
in
loop
scas
mov
inc
out
aas
divb
and
lods
out
scas
and
sub
push
filds
adc
pushf
sahf
test
sbb
adc
add
rcll
push
mov
push
icebp
pop
pusha
inc
mov
cltd
out
pop
jo
arpl
xor
dec
test
push
push
mov
lret
imul
les
xchg
mov
cmc
pop
in
add
mov
hlt
pop
lcall
add
movsl
ljmp
mov
fstpl
pop
lret
and
push
jo
ret
jne
ss
jle
xor
fldenv
ja
jne
outsl
sbb
sub
jmp
icebp
lds
ss
mov
arpl
call
pop
cmp
scas
aam
mov
mov
cmp
aad
mov
and
pop
inc
aam
hlt
sub
scas
sbb
sbb
aaa
jecxz
mov
les
mov
sbb
hlt
jne
mov
or
or
jnp
addl
adc
dec
sbb
pop
gs
or
movl
cs
jb
test
addr16
out
das
inc
das
dec
aam
imul
mov
das
adc
lcall
testl
andl
mov
xor
int3
and
or
mov
jl
or
aaa
out
stos
inc
scas
dec
rcl
dec
bound
stos
jmp
sbb
cltd
sbb
in
pop
ss
dec
mov
xor
loop
dec
xchg
sarl
inc
cmp
inc
xchg
insl
data16
mov
lahf
push
add
repz
jno
and
xchg
mov
decl
cld
xlat
pop
dec
insb
mov
aas
push
fisubl
pop
es
loope
fbld
mov
mov
adc
jg
xor
adc
cmc
mov
mov
pop
fwait
cmp
ficompl
testl
mov
jns
lods
out
pop
mov
mov
lods
mov
pop
adc
and
jmp
inc
jl
fistl
adc
inc
cmp
mov
lea
mov
push
and
jl
shrb
mulb
fs
xor
dec
fstpt
outsb
mov
pushf
fs
jle
outsl
stc
xor
mov
xchg
jo
jle
adc
lret
push
jl
imul
xchg
fsubs
stos
incl
push
mov
xlat
mov
lods
jl
sarl
inc
sub
cmp
popa
and
and
and
xor
push
push
sub
lds
push
outsl
sub
stos
xlat
cmpsb
mov
movsl
cs
mov
sbb
pop
clc
out
das
inc
ror
loope
arpl
imul
jns
xchg
push
pushf
insl
cli
pop
fildll
popa
popf
mov
out
push
lods
cld
iret
lcall
or
cmpsb
repz
mov
clc
aaa
xor
stos
mov
mov
sub
lret
mov
sbb
inc
fwait
xor
ffreep
insl
int3
push
jnp
inc
xchg
scas
popf
lods
popf
stc
js
out
mov
lock
pop
adc
inc
into
inc
push
mov
jmp
cmp
std
aam
int3
inc
les
js
pushf
in
clc
dec
xor
adc
fisubrs
aas
mov
jno
mov
into
inc
mov
push
add
add
fmul
cwtl
sar
outsb
outsb
adc
push
mov
mov
repz
ret
ljmp
cld
jle
ror
loope
repnz
and
jle
jnp
jnp
pop
dec
xchg
push
ljmp
cmp
icebp
xchg
movl
orb
ret
and
and
ret
xor
inc
sbb
les
sbb
mov
cmp
mov
pop
add
aas
adc
and
fistpl
push
hlt
dec
adc
ljmp
adc
xlat
jnp
inc
push
push
scas
lret
cmp
pop
mov
mov
rolb
sub
fwait
cmp
imull
aas
jo
fildll
cmp
iret
pop
lods
stos
lods
mov
mov
adc
fs
int
adc
scas
xchg
test
rorl
fnstcw
jecxz
mov
roll
das
push
jp
scas
mov
arpl
insb
lret
sahf
inc
push
cmp
sti
scas
fcmovbe
sub
adc
sti
xor
imul
or
addr16
xchg
lret
pusha
push
arpl
mov
fnstsw
pusha
mov
jp
push
imul
push
jae
push
jp
mov
adc
mov
imul
mov
xor
push
sbb
mov
xor
mov
lea
dec
loopne
lods
int3
mov
cmp
cmp
cmc
pop
sbb
out
or
pop
and
aaa
sti
jbe
sub
andb
out
je
rolb
std
scas
pusha
repnz
cli
cltd
adc
fisubrs
jp
fadd
sbb
leave
fcompl
jecxz
into
pop
mov
pop
xchg
mov
hlt
and
and
lea
addr16
clc
dec
xchg
push
in
push
ljmp
jbe
stos
in
leave
and
or
push
add
leave
add
push
push
mov
hlt
jmp
test
lea
and
aad
notl
mov
outsb
lret
sti
enter
dec
test
sub
adc
sub
in
sub
ret
out
adc
pusha
dec
or
hlt
pop
outsl
jne
sbb
dec
inc
popa
dec
pop
mov
mov
inc
pop
stos
pop
mov
iret
mov
cmpsl
roll
icebp
xorb
testl
mov
cmp
and
pop
jo
ret
repnz
mov
mov
call
aam
addr16
inc
mov
popf
mov
mov
add
dec
fisttps
ficoms
sub
ss
pop
out
ror
add
dec
scas
mov
lock
daa
and
adc
stc
xor
mov
mov
nop
pop
insb
fisttpll
mov
mov
push
lds
cmc
jge
sbb
jecxz
push
jecxz
shlb
hlt
cli
je
out
leave
cmp
clc
push
jp
into
popf
mov
test
sbb
adc
addr16
outsb
cmp
aad
lods
sub
int3
sbb
push
mov
mov
and
lock
inc
jb
xor
out
inc
pusha
sti
adc
pop
outsb
cmp
aad
cmp
cs
or
repnz
dec
pop
jle
rorl
push
adc
and
leave
subb
xor
scas
add
push
xlat
xchg
mov
mov
xchg
sbb
testl
popf
imul
pop
movsb
mov
es
loope
cmpsb
jno
xlat
push
add
mov
call
shll
jl
ret
clc
sub
push
push
lods
scas
push
mov
stc
imul
adc
lret
dec
push
pushf
je
in
cmpb
push
ja
in
pusha
fmuls
adc
jne
jecxz
fistpll
fs
dec
out
cmp
popf
jo
sbb
jnp
inc
add
out
cmpl
aaa
lahf
test
cwtl
sub
mov
js
icebp
xchg
imul
in
pop
iret
andl
mov
orb
xchg
into
dec
mov
scas
adc
xor
in
push
dec
inc
and
pop
sbb
enter
xor
push
xor
push
push
xor
jp
in
movsb
mov
xorl
loope
subb
jo
sbb
lret
lret
xor
cmp
xor
insl
int3
aas
sbb
pop
in
cmp
daa
add
push
pushf
cli
shrb
pushf
daa
ds
jl
cmp
xchg
mov
stos
xor
add
cmpsl
mov
inc
pop
sahf
add
insl
jbe
repz
pop
fdivrl
cmpsb
out
adc
xor
xchg
lods
scas
test
cs
inc
test
add
mov
mov
push
clc
or
push
pop
xchg
loop
xchg
pop
dec
jno
femms
jecxz
sbb
aad
pop
dec
or
shll
xor
xor
out
dec
clc
pop
inc
test
enter
jmp
lret
in
lcall
mov
lea
push
call
pushf
in
out
rolb
push
and
popf
inc
or
sahf
je
sub
popf
dec
adc
cli
popf
pusha
xor
repnz
mov
xor
dec
ret
bound
in
cmpsl
mov
ret
xor
int3
or
stc
pop
mov
pop
mov
cs
cli
in
pushf
pop
sub
xor
add
add
rol
gs
sub
insb
mov
outsb
cmpsb
fcomip
pop
in
imul
jns
mov
repnz
or
fwait
push
cmp
mov
mov
fwait
ror
cmp
pop
rorl
pop
aas
inc
jmp
jne
jnp
imul
pop
into
add
adc
adc
or
and
movb
jnp
out
fdiv
sbb
repnz
je
mov
lods
pop
mov
adc
jg
mov
shl
lcall
jbe
xor
fimuls
call
sbb
outsl
fisubrl
cmp
xor
movsl
xchg
jno
jecxz
pop
xor
aas
in
in
dec
add
mov
movsl
adc
jecxz
mov
adc
cmc
mov
test
mov
loopne
pushf
lret
inc
xchg
mov
mov
lods
xchg
lock
push
icebp
mov
lahf
fbstp
and
cli
dec
jbe
pop
ja
lret
es
rolb
std
mov
cmpsb
daa
mov
xchg
out
loopne
leave
out
imul
adc
inc
jecxz
xchg
mov
mov
les
xorl
add
xor
adc
add
cmpsb
subl
and
sbb
icebp
inc
and
popa
mov
loope
lcall
jbe
pop
in
mov
mov
pop
inc
inc
inc
jno
push
inc
repnz
mov
ds
das
xchg
dec
sti
into
popa
add
and
adc
and
add
fbld
jmp
adc
xor
lods
in
shr
cwtl
jne
movsl
and
stos
movsb
mov
icebp
add
inc
stos
fwait
jl
jmp
xlat
fidivl
jb
adc
push
pop
sbb
stc
lods
mov
stc
cmp
lods
inc
push
sbb
in
mov
dec
jo
jge
sbb
mov
insb
rcrl
js
int
inc
push
test
push
data16
and
std
inc
faddp
test
mov
dec
ror
enter
pop
sub
xor
rolb
data16
test
shlb
sbb
fdivl
popf
sub
mov
int3
dec
les
add
pop
pusha
jge
andl
pop
clc
mov
fnstsw
les
cmp
or
push
jp
jae
mov
dec
pop
clc
mov
repnz
shrb
arpl
popa
xor
adc
sub
xchg
repz
sahf
push
in
ds
je
sbb
cmp
and
dec
aad
sbb
call
mov
mov
out
inc
ficoml
negb
mov
cld
xlat
in
or
or
nop
popl
hlt
mov
fimuls
hlt
dec
push
ficoml
inc
dec
xchg
cs
cmpsl
xor
lods
jb
push
add
imul
jmp
ss
aam
loopne
mov
out
ljmp
out
aad
insl
jmp
sbb
lock
jmp
add
jno
sub
scas
jnp
add
call
call
cwtl
mov
adc
jb
mov
arpl
xchg
jg
pop
dec
add
out
mov
out
ja
insl
xor
shrb
sahf
mov
in
jb
repnz
mov
les
sti
mov
dec
jne
cmp
fldpi
add
cmp
cmpsb
fdiv
repz
subb
ljmp
xchg
leave
adc
into
push
mov
pop
jo
lods
jno
std
mov
vpaddd
out
xchg
sbb
add
or
insl
sub
in
bound
adc
add
xchg
adc
into
addb
inc
dec
jecxz
jl
mov
pop
hlt
in
cli
adc
es
and
or
test
pusha
cmp
ret
inc
pushf
decb
pop
dec
mov
in
in
dec
xchg
fisttpl
call
pop
cmc
push
testl
add
dec
out
rol
dec
imul
out
or
mulb
and
repnz
std
cmpsb
mov
sub
mov
push
xchg
ret
mov
ja
loope
ljmp
das
or
movsl
imul
ja
aaa
jg
pop
jno
xor
data16
fsub
mov
cmpsl
add
ret
mov
ss
cmp
pushf
jnp
xchg
jae
and
xchg
inc
cmpsl
lods
iret
nop
xor
pop
xor
mov
std
add
mov
jle
push
rcrl
shll
ret
fimuls
jge
mov
and
test
dec
push
xor
push
cwtl
ljmp
pusha
xchg
stos
gs
push
jp
mov
cmpsl
into
ja
loopne
mov
subb
xor
mov
iret
mov
ja
ljmp
std
insb
jmp
rclb
jecxz
fdivl
xchg
ud2
out
and
outsb
xchg
aam
scas
cmpl
jmp
ret
sahf
iret
repnz
insb
xchg
fwait
mov
add
pop
cld
dec
lds
loope
movsb
mov
cmpsl
mov
pop
push
or
mov
bound
stos
and
out
sbb
mov
sarl
sbb
rcr
inc
pop
and
adcb
cmp
test
xchg
mov
sub
or
test
fisttps
xor
pushf
int
sbb
loope
jnp
inc
sbb
sbb
outsw
xchg
jmp
sbb
das
mov
loopne
push
mov
inc
dec
popa
loop
sbb
std
outsb
vunpckhps
lds
out
cmpsl
cld
push
inc
ja
pop
int
ret
test
insl
fs
out
pop
lock
dec
cmp
dec
add
push
lret
mov
jge
mov
movsb
lcall
mov
out
into
cld
lahf
out
xchg
sub
mov
jno
mov
icebp
jl
cmp
dec
push
fwait
add
out
std
and
out
pushw
or
outsb
outsl
and
pop
mov
testl
fisttpll
add
sbb
roll
pop
div
mov
mov
sub
test
push
xchg
aaa
aam
mov
and
adc
out
cmpb
or
int3
jg
rorl
lods
push
cs
push
sbb
xchg
cmc
pop
dec
adc
icebp
sbb
mov
sbb
pop
mov
sub
mov
push
enter
out
leave
aaa
jae
test
sub
cmp
or
dec
dec
xchg
adc
mov
cltd
out
and
sbb
dec
loop
ljmp
xor
sub
dec
xor
jno
sub
xchg
pop
rclb
bswap
jo
xchg
mov
xor
loop
mov
in
fidivs
outsb
push
call
xor
cmpsl
mov
add
and
mov
lea
cmp
fcoml
or
test
or
fsub
xor
xchg
lcall
testb
sbb
bound
push
loope
outsl
cmp
sarb
cmp
inc
xlat
test
in
loope
sbb
xor
imul
lock
enter
imul
loopne
mov
or
enter
in
test
adc
inc
jo
pusha
and
fs
pop
or
in
jg
adc
test
out
jne
imul
pusha
insb
xchg
ds
test
mov
sbb
jmp
dec
inc
xchg
mov
outsl
rolb
or
mov
aam
mov
and
ret
jmp
cmp
inc
in
lock
repz
pop
inc
test
dec
sbb
xor
shll
inc
mov
ljmp
test
and
pop
dec
clc
pop
mov
int
pop
xchg
bnd
push
fisttpll
stos
jg
sbb
adc
call
push
outsl
out
push
in
mov
pop
popw
sahf
mov
lods
pop
das
sub
cmpb
xchg
sub
mov
popf
mov
jg
movsl
push
int3
pop
nop
sub
sbb
fildl
fwait
mov
inc
in
jge
ljmp
jl
add
or
mov
sbb
mov
cld
out
ret
ret
pop
subb
cmp
loop
mov
inc
sbb
je
cmc
sub
fldcw
mov
addl
leave
add
dec
movsl
mov
mov
mov
rorb
lahf
lea
push
and
xchg
imul
ret
mov
xor
in
pop
fcompl
mov
jae
repnz
dec
mov
fwait
outsl
xchg
jae,pn
stc
jg
sahf
shrb
loope
stos
stos
mov
lods
mov
jae
out
imul
js
es
or
inc
xchg
and
push
das
push
popa
pop
lcall
sbb
push
cwtl
lret
pop
rclb
adc
call
jge
push
jp
jo
sbb
addb
stc
or
jg
mov
mov
push
cmp
sbbw
sbb
push
in
push
loopne
or
gs
pop
sub
jno
cwtl
outsb
lahf
lods
ficomps
call
into
inc
cmpsb
int
leave
ds
jnp
xchg
add
aad
add
xlat
pop
bound
add
outsb
mov
add
add
imul
or
lds
and
push
orl
and
imul
orl
sub
dec
shr
das
pusha
jl
mov
shll
mov
or
jle
mov
into
rclb
stos
jge
sub
popa
dec
pop
in
mov
test
mov
add
sbbl
add
gs
or
cmpl
nop
mov
nop
add
jne
push
ja
dec
imul
mov
mov
mov
repz
mov
test
adc
lods
testb
out
xchg
fdivrs
arpl
dec
mov
stos
xchg
jmp
adc
call
add
rorl
int3
shlb
and
xor
xchg
sub
outsl
sub
inc
or
inc
mov
dec
cwtl
je
jbe
insl
stos
xor
imul
lret
xor
enter
sub
jb
mov
stos
shrl
cs
arpl
sub
add
mov
mov
jg
outsb
ret
jmp
les
std
frstpm(287
inc
mov
xor
jle,pt
imul
sbb
pusha
sahf
xchg
inc
adc
in
psubsw
mov
shlb
insl
mov
lock
cmp
adc
shrb
bound
cmc
lahf
enter
enter
cmc
popa
lds
cmp
test
js
bound
adc
mov
cmp
lret
push
mov
out
adc
xchg
mov
loopne
cwtl
push
push
cmp
dec
daa
jle
mov
repz
lret
in
add
xor
outsl
push
fsubs
dec
or
sbb
out
mov
scas
mov
aad
push
or
mov
sub
aas
andb
leave
gs
adc
mov
add
dec
sbb
fcoms
inc
lcall
dec
or
xchg
pusha
jmp
cmp
mov
fcmove
inc
sbb
movl
insl
adc
int
in
enter
mov
xorb
movsb
mov
lret
movsb
sbb
arpl
test
pop
in
and
enter
rcrl
xlat
pop
and
ljmp
les
sbb
and
sbb
add
inc
pop
in
fldlg2
addr16
push
or
fistps
fdivrl
addr16
pop
out
xor
stos
mov
test
cmc
pop
ret
sbb
jmp
sbb
inc
mov
ss
xchg
cmp
call
jo
mov
add
xor
jo
mov
loope
sub
ss
xor
inc
test
testl
mov
inc
xchg
dec
push
movsl
stos
popa
mov
ret
xchg
scas
das
push
cmp
jbe
loope
scas
inc
lret
fimuls
dec
fadds
pop
sbb
daa
ret
lds
xchg
push
xlat
outsl
repz
hlt
sub
out
sub
jg
xor
mov
mov
jp
dec
leave
rcrl
fdivs
das
inc
mov
mov
jne
fwait
shlb
dec
cmc
mov
fstl
insb
nop
jmp
notl
mov
sub
lret
lea
pushf
clc
push
out
mov
push
cli
xchg
pop
in
mov
dec
xor
mov
push
hlt
jle
jne
sahf
int
pop
in
mov
or
outsb
xchg
and
adc
lock
in
leave
ficoml
dec
add
push
jne
sbb
sbb
lcall
sbbb
mov
mov
gs
lret
add
cmpsl
lahf
sahf
hlt
cmpl
pusha
xchg
push
xor
sbb
dec
imul
insb
in
cltd
add
movsl
push
and
outsb
xchg
push
cmpsb
divl
test
jnp
fsub
int
jl
movb
cli
lret
and
mov
fcoms
fucom
cmpsl
mov
jns
outsl
ret
cltd
push
pusha
pusha
outsb
adcl
push
in
adc
fnstcw
cs
int
push
int
fsubrp
mov
lret
popf
fdivrl
lds
xchg
push
xorl
bound
and
sub
js
pop
sti
or
lret
das
cltd
add
mov
loopne
arpl
sub
xchg
pop
popf
cmp
rorl
mov
jmp
fdivrp
negl
nop
jno
cmp
movsb
mov
adc
int3
ljmp
les
xchg
and
sbb
mov
loopne
enter
jp
jmp
test
inc
aas
in
stos
das
sarb
add
xchg
ret
jecxz
call
pop
xor
add
stos
pushf
xchg
fildl
adc
jecxz
outsb
mov
or
mov
add
push
fisubrl
inc
mov
sbb
xor
xchg
mov
dec
fs
sub
ret
fwait
inc
jne
inc
sub
clc
outsl
mov
hlt
orl
fildl
cmpsb
push
iret
pop
repz
jmp
cmpsb
repz
gs
pop
icebp
dec
pusha
int3
mov
jae
mov
inc
mov
xchg
scas
loope
jnp
pusha
and
cmpsl
nop
or
hlt
aam
rcll
sub
in
add
sub
push
testl
jp
data16
jne
test
cmp
les
sarl
ret
mov
fstpt
daa
aad
sub
dec
mov
sahf
push
shll
in
into
xchg
and
hlt
in
inc
dec
adc
cs
dec
shrl
and
dec
pop
dec
sti
inc
loop
cmp
jo
push
dec
push
movsl
and
fcomps
adc
push
xor
or
out
sub
or
sub
add
loop
dec
scas
test
mov
pushf
icebp
mov
cld
jne
fisubrl
pop
xchg
inc
xchg
clc
pop
out
jp
xchg
sti
pop
cmp
into
fbstp
inc
sahf
bswap
push
lea
and
and
and
mov
mov
subb
rolb
mov
jnp
aas
jns
cmpl
jne
inc
sub
cmp
aam
enter
mov
jae
ret
jecxz
in
jb
mov
mov
sbb
mov
pop
cwtl
push
add
or
adc
pop
scas
pop
pop
stos
popa
and
ds
ret
lock
mov
pause
pop
jbe
into
std
mov
mov
inc
mov
mov
add
iret
dec
mov
pop
daa
ficoms
out
popa
mov
fnstcw
push
inc
clc
mov
mov
jno
adc
mov
add
pushf
outsb
jmp
inc
push
inc
adc
cmpsb
notb
cmc
push
xlat
scas
push
dec
inc
xchg
jo
adc
mov
sahf
adc
mov
mov
in
stos
xor
negl
jnp
bswap
into
cmp
leave
xor
push
dec
js
adc
stc
int3
fsub
test
aaa
push
cmp
dec
mov
stos
aam
jnp
sti
enter
fldl
inc
nop
imul
enter
mov
cmc
cmpsb
xchg
mov
int
lret
mov
mov
lods
sbb
sar
rcr
push
push
mov
jae
lret
outsl
xchg
lret
test
and
clc
repz
cmpsl
movsb
push
mov
fneni(8087
pusha
push
adc
je
paddq
push
fisubl
and
sahf
scas
and
mov
loop,pn
insb
rclb
shrb
adc
test
ss
adc
pop
add
cmp
mov
mov
insb
xchg
push
push
imul
jecxz
and
out
push
test
in
jbe
lret
stc
push
cld
cli
into
cmp
sahf
and
nop
mov
mov
ja
call
add
idivl
cld
fcmovb
xchg
fdivs
stc
mov
xor
mov
jno
inc
pop
dec
stos
adc
lock
and
push
xchg
push
pop
das
push
jo
rcrl
jecxz
stos
mov
sahf
xchg
rol
out
pop
outsb
imul
cmp
mov
pop
pop
dec
xor
andb
inc
pop
or
dec
stos
and
mov
mov
sub
aaa
shlb
lret
je
add
data16
call
lods
inc
je
pop
fisubrs
mov
popf
popf
sarb
inc
imul
mov
loope
test
in
in
and
leave
loop
inc
shl
xchg
sub
jmp
inc
ljmp
cmpb
mov
lcall
add
dec
xlat
cmp
jge
inc
mov
cwtl
and
aas
mov
xchg
jle
mov
pop
in
push
or
pop
jmp
xor
jecxz
enter
mov
dec
fnstsw
mov
dec
sbb
push
dec
mov
inc
cli
push
dec
mov
sub
lods
std
jb
scas
dec
pop
leave
sub
jb
adc
pop
sub
jl
mov
push
inc
and
aam
push
sub
mov
jge
sub
fdivp
mov
nop
notl
inc
mov
lea
pop
out
ss
in
clc
or
adc
ljmp
fcompl
scas
sub
mov
or
inc
sub
jbe
xlat
into
les
sti
cwtl
loope
xor
or
pop
loope
les
outsb
push
and
lahf
cld
xchg
daa
cmovo
dec
fldcw
jge
dec
pushf
xchg
pop
dec
push
mov
mov
lcall
popf
nop
and
sub
insl
sarl
insl
fists
sidtl
ficompl
cmpsb
mov
scas
mov
cmp
test
push
jne
clc
mov
pop
xor
in
lods
idivb
jp
xchg
rcll
push
or
pop
xor
bound
outsb
pop
js
clc
push
sbb
lds
jns
pop
mov
or
cwtl
loope
cmp
xor
jmp
addl
idivl
jge
imul
xorl
mov
dec
test
sahf
mov
js
imul
insl
in
fwait
jmp
xor
cmpsl
fsubl
pop
andl
sbb
fcomi
adc
mov
cmp
out
or
lcall
es
mov
mov
jno
ja
pop
push
sbb
loope
sub
pop
lea
data16
cmp
sub
pop
sbb
sbb
std
sbb
test
add
jns
inc
popf
dec
stos
push
jae
xchg
push
rorl
push
mov
loop
std
push
cmp
xor
mov
pop
cli
pop
push
add
mov
aas
or
inc
pop
scas
mov
jle
sub
shll
cmp
mov
lea
cmp
jne
xchg
cld
push
sbb
insl
adc
movsl
ret
inc
and
xchg
xchg
fwait
sbb
inc
loopne
push
call
mov
and
mov
lds
mov
sbbl
inc
mov
inc
rorl
scas
adcl
aaa
aad
gs
es
pcmpgtb
imul
adc
mov
push
mov
out
in
or
dec
dec
pop
cmc
jo
js
add
xlat
jmp
lcall
dec
jp
loopne
imul
stc
cmp
popf
mov
sarb
dec
ret
sti
and
popf
gs
xchg
imul
and
mov
cmp
daa
nop
stos
add
aaa
and
iret
xchg
in
jmp
pop
inc
dec
push
out
fdivrl
mov
popa
popa
pop
je
loopne
dec
dec
in
jge
sti
bound
xchg
or
push
out
push
adc
mov
cltd
push
aam
notl
dec
add
xchg
pop
sbb
adc
inc
add
flds
push
sbb
cmpsb
adcl
jns
clc
jecxz
and
sar
cmpsb
sahf
fsubrp
fisubrs
lods
mov
jl
dec
test
imul
jae
pop
fs
push
sub
cltd
xor
sahf
or
sbb
inc
or
mov
push
mov
imul
dec
pop
packsswb
fwait
aam
filds
popa
fs
cmpsl
push
mov
xchg
lcall
inc
ja
cmpsl
aad
adc
gs
adc
enter
sub
icebp
adc
ss
into
bound
xor
push
lock
jecxz
xchg
xor
pop
scas
data16
imull
dec
fs
mov
dec
shll
idivl
cmp
aaa
mov
xor
out
adc
xchg
lock
mov
mov
call
mov
stos
das
xchg
pop
jmp
cld
out
std
sbb
mov
sbb
adc
idivl
jo
nop
mov
mov
pop
inc
dec
fsubs
out
call
stos
jecxz
out
fwait
call
imul
mov
fwait
and
mov
dec
fisubl
xor
jg
push
outsl
push
push
cmc
mov
cwtl
mov
adc
test
sub
je
ret
pop
ja
mov
lahf
fs
jmp
lret
xchg
ret
xchg
sbb
loop
jne
mov
repz
pop
rclb
mov
jg
adc
mov
popa
mov
xor
mov
adc
mov
lcall
and
dec
push
test
mov
and
push
lods
cwtl
and
daa
jl
cmp
imul
mov
iret
out
out
mov
stc
push
movsb
aas
scas
push
dec
fcomps
xchg
mov
arpl
es
into
jecxz
jb
cltd
inc
daa
push
int
xor
cmpsl
icebp
imul
enter
movsl
push
scas
loop
jmp
push
adc
mov
test
test
std
mov
popf
inc
and
jno
push
out
jbe
pop
jae
jl
hlt
inc
ljmp
pop
mov
arpl
arpl
mov
movsl
and
pop
clc
andb
orl
adc
xlat
push
js
shlb
mov
shlb
fcmovne
inc
xchg
and
xor
movsl
xor
mov
or
incb
shlb
jnp
adc
test
cmp
push
sbb
cmp
pop
nop
outsl
sbb
dec
dec
inc
push
into
mov
or
sub
mov
pop
xor
std
jb
mov
xchg
push
les
popf
cmp
jecxz
add
dec
fimull
icebp
push
inc
cmp
sub
std
aas
inc
cltd
fidivrl
shl
adcl
repz
push
cmp
test
add
inc
cs
imul
pop
in
lock
das
or
mov
roll
lahf
ret
jb
lock
aas
test
xchg
push
cmove
pusha
jb
call
fs
test
pop
ja
mov
aam
and
dec
mov
xchg
aaa
inc
adc
pop
out
xor
adc
cmp
add
hlt
cld
jmp
cmp
call
push
repnz
daa
iret
test
sbb
ss
rcrl
mov
mov
cmp
out
aaa
stc
add
es
jmp
adc
popf
jge
lret
cmpsl
lea
fsubs
movsl
lock
adc
add
ror
sub
push
les
sti
fs
pop
mov
push
push
addl
fimuls
dec
stos
fidivrs
ds
inc
cli
sbb
leave
sbb
mov
mov
lret
push
sbb
decl
jl
xchg
aad
shr
push
push
xor
popf
add
cmp
imul
mov
xchg
fdivrs
jbe
mov
int3
in
or
fistps
shl
aas
and
sub
add
outsb
and
mov
sbb
out
addr16
shrb
dec
lods
in
arpl
dec
test
dec
addr16
xchg
pop
mov
loopne
mov
cmpsb
jmp
push
mov
xchg
jl
sahf
mov
shll
inc
or
pop
or
sahf
inc
or
add
pop
loope
sbb
adc
js
mov
pusha
loop
ret
push
loop
pop
rcll
push
cli
cmp
mov
sbb
out
xchg
in
dec
lea
test
hlt
xor
sbb
pop
pop
int
clc
pop
js
mov
and
mov
imul
shl
inc
cmpb
data16
sbbb
es
add
lret
out
insl
mov
and
mov
xchg
adc
dec
dec
sub
push
lahf
scas
inc
xchg
sbb
pop
dec
cmp
icebp
adc
cli
lret
add
jns
or
mov
xor
push
or
push
add
js
sbb
and
jb
imul
mov
mov
and
lods
or
mov
pop
inc
rcrl
sbb
bound
js
ret
imul
jnp
jnp
arpl
fst
aam
testl
sbb
loopne
mov
icebp
mov
aas
loope
xorb
ret
mov
dec
mov
scas
adc
and
push
lcall
dec
push
fbstp
pusha
adc
sbb
jno
in
nopl
mov
lret
sarl
or
cltd
push
movsl
mov
sbb
cld
adc
aas
shrb
stos
jbe
cltd
aas
xchg
pop
dec
cmpsb
jg
mov
cld
mov
fwait
sub
dec
imul
xchg
add
push
sbb
push
adc
push
leave
push
inc
dec
scas
clc
mov
lret
sahf
mov
pop
xor
push
inc
jno
adc
daa
out
sbb
outsl
mov
out
out
sarb
fs
adcb
int
pop
adc
out
pop
jo
push
mov
mov
mov
push
cmp
jnp
jg
jo
lods
xchg
ss
push
movsl
shrb
jno
je
cmpsb
cmpsb
fistl
mov
popf
dec
push
xchg
dec
mov
mov
lcall
lcall
addb
sub
sbb
xchg
cmp
add
pop
jecxz
jno
sub
push
rorl
dec
xchg
and
jecxz
add
pop
cmp
in
mov
jb
movl
or
pusha
jo
inc
and
add
movsb
jp
lods
xchg
in
testb
sub
mov
cmc
adc
shlb
mov
rolb
aad
or
lret
movsb
jecxz
in
rclb
xor
fisubs
cmp
loope
sub
lds
mov
xor
ret
sub
stos
popa
std
xchg
push
cmp
mov
pop
movsb
nop
xchg
xor
pusha
pop
pop
add
and
negl
loop
xchg
mov
push
dec
out
xor
inc
mov
shl
stc
push
mov
mov
sub
sbb
or
xor
fimuls
jecxz
mov
scas
cmpsb
or
js
repz
hlt
jnp
lret
out
popa
mov
or
outsb
orl
pop
das
sbb
test
jae
sub
scas
xor
in
and
imul
jge
loopne
ljmp
mov
std
fidivrs
inc
sub
inc
jle
inc
mov
lds
or
push
in
out
inc
mov
arpl
lahf
fidivrl
xchg
xchg
jns
adc
in
push
add
sub
scas
dec
sbb
jae
outsl
arpl
and
in
addr16
repnz
cld
mov
pop
shr
test
pop
inc
push
out
lcall
adc
mov
jae
push
cmp
sub
sub
nop
out
int3
xor
mov
add
adc
insl
mov
fisubrl
and
addl
sub
call
xchg
fwait
in
or
loopne
lcall
jne
pop
ss
cwtl
xchg
mov
push
mov
stos
mov
fisubrs
jb
jl
push
cmp
in
in
movsb
push
cmpsb
fdivs
cmp
pusha
aam
lock
pop
cmp
jno
mov
les
xor
clc
pop
shll
or
pop
xchg
sub
fsub
xor
dec
or
xchg
ret
dec
les
xchg
scas
cs
addr16
scas
lods
lock
add
aam
mov
dec
imul
sbb
add
leave
add
nop
inc
in
xchg
leave
adc
inc
lods
jp
cmc
stos
xchg
fildll
sbb
shrl
call
ja
lds
cmpsb
js
push
cmpsb
daa
lea
or
outsl
mov
xor
dec
pop
dec
outsb
nop
adc
mov
sbb
arpl
mov
xchg
out
xchg
fwait
shr
and
mov
adc
jecxz
jnp
sar
xor
sub
add
fldcw
jae
push
sarl
pop
aas
les
add
out
iret
cmpsb
mov
mov
add
outsl
xor
popa
cmp
pusha
mov
out
inc
insl
xor
cmpsl
jnp
mov
les
sahf
imull
xchg
cmc
mov
pop
je
mov
lret
and
and
sub
push
nopl
shl
cmp
jne
or
jb
movsb
imul
inc
dec
pop
sub
outsl
test
movsb
js
enter
insl
cld
mov
insl
lock
inc
dec
mov
popf
jns
les
sub
cmpsl
xor
psubd
xchg
cmp
xor
cmp
enter
enter
ret
or
mov
arpl
insb
jno
or
outsb
gs
insb
mov
movsb
repz
cwtl
testb
mov
je
mov
rcrb
mov
stos
xor
out
andl
add
xchg
test
test
jmp
push
and
test
das
dec
outsl
test
test
mov
movsb
out
mov
test
and
pop
push
sub
adc
aaa
or
xlat
jnp
les
sti
sub
out
jp
fisttpl
or
popf
pop
rorb
jg
dec
ds
xor
mov
sbb
clc
js
insl
mov
je
jns
xchg
frstor
lcall
fisubrs
xor
sub
ss
cmpsl
push
fsubrs
add
adc
and
rorl
and
xchg
and
lods
scas
mov
mov
pop
cwtl
test
nop
sub
sbb
insl
je
or
mov
out
das
adc
in
cltd
mov
lods
xchg
jne
ret
dec
in
mov
sub
sub
or
fidivrs
mov
scas
sub
adc
sbb
and
idiv
mov
pop
jmp
mov
hlt
dec
lret
popf
sub
cs
jmp
popf
loop
pop
stos
loop
sbb
sahf
xor
cwtl
adc
lock
jbe
and
lea
imul
mov
fstp
and
sbbl
cmpsl
xor
dec
cmp
int3
inc
fs
imul
dec
pop
call
inc
xchg
aas
add
cld
cmp
inc
lea
jge
filds
mov
dec
outsb
call
jns
jne
incl
jg
lret
ret
out
cld
jge
aaa
pop
cmpsl
jp
pop
pusha
lock
in
ret
adc
lods
adc
and
js
inc
movsl
pusha
test
cmpsl
loop
sahf
mov
mov
rorl
loope
cmp
clc
mov
scas
lahf
lret
out
testb
pop
push
push
pop
xchg
ss
cld
mov
pop
hlt
push
jns
pop
movsb
inc
fidivrs
incb
fisttpl
sub
decb
js
in
mov
inc
xlat
jl
inc
js
pop
fmuls
jne
js
cmp
pusha
adc
shrl
mov
mov
inc
push
int3
sbb
or
ja
inc
dec
mov
fwait
call
js
sbb
cmp
xor
sub
enter
ljmp
loope
lods
mov
xor
test
and
cmc
lcall
into
lret
cmp
lret
inc
push
cs
enter
push
cmp
cwtl
imul
mov
lods
cmp
add
call
movsb
jo
xchg
divb
sub
jnp
sub
pop
cmp
dec
pop
cmp
pop
stos
dec
pop
xchg
cmpsl
orl
rclb
mov
cmp
pop
inc
add
push
push
mov
jb
out
lods
mov
sub
ljmp
mov
jmp
adc
bndstx
es
or
rol
pop
outsb
test
int
js
mov
push
loop
cmp
aas
jnp
call
or
sbbl
xchg
sbb
push
mov
jae
sub
iret
fildll
push
dec
mov
lcall
cmp
adc
insb
push
hlt
mov
mov
add
add
jmp
push
jmp
mov
and
cmp
pop
shll
test
ret
sbb
fdivp
pop
push
or
dec
mov
and
push
test
int3
sbb
dec
inc
sbb
orb
insb
jl
cmp
popf
mov
push
das
test
sbb
xor
and
pop
push
cwtl
rorl
mov
lods
sbb
pop
scas
pop
cmp
adc
loop
in
jmp
push
push
imull
dec
int
jb
xchg
sbb
sbb
cltd
jg
fucomip
fcoms
movl
clc
lret
jp
test
sbb
repz
jmp
inc
xchg
push
mov
inc
jmp
ljmp
mov
jecxz
sub
cmp
mov
cs
inc
xor
test
pop
xchg
ret
mov
add
xchg
mov
inc
loop
test
stc
pop
daa
jno
mov
int3
lock
pop
enter
jb
fdiv
pop
rol
aaa
inc
ljmp
rol
inc
in
sub
mov
mov
std
xor
or
mov
sbbl
mov
and
cltd
inc
jno
sbb
test
mov
stc
daa
cmp
mov
mov
xchg
xchg
xor
leave
push
and
divl
add
std
mov
or
xchg
pop
xor
jle
into
stos
lahf
lods
dec
mov
push
ja
dec
jbe
dec
lds
rsm
and
test
sub
cs
out
movsb
not
inc
jecxz
hlt
sub
mov
movb
gs
stos
ret
inc
add
loop
bound
sub
lock
mov
in
hlt
or
call
add
xchg
sub
push
js
mov
jg
jl
out
mov
mov
cmp
ret
sbb
pop
push
mov
adc
popa
xlat
imul
sub
cmp
hlt
and
iret
aas
insl
daa
fnstenv
pushf
outsl
insb
mov
pop
dec
cltd
lods
sub
icebp
scas
sub
stos
jbe
sbb
nop
pop
push
cltd
rclb
es
adc
and
dec
imul
cmp
mov
loope
insl
outsb
push
ljmp
mov
sub
jmp
jmp
jno
dec
push
lods
mov
adc
fst
mov
mov
cmpsl
sti
adc
fcoml
sub
dec
fdiv
ss
push
icebp
jp
cmc
jnp
mov
xor
mov
cmp
dec
jno
movzwl
stc
fwait
mov
adc
sbb
into
xlat
xchg
inc
cmp
rcll
mov
inc
fsubr
push
add
mov
xchg
shl
flds
push
in
sub
xchg
push
or
mov
mov
push
adc
shl
jle
ret
add
in
xchg
adc
pop
cltd
bound
sub
inc
andb
cmp
scas
jp
cmp
jge
mov
test
pop
cmpsl
push
mov
mov
inc
ljmp
cs
decl
sti
gs
or
loopne
and
nop
add
daa
enter
jnp
xor
jo
add
and
xor
xchg
mov
inc
ss
mov
pop
xor
iret
icebp
test
std
xchg
addl
sub
ss
stos
add
mov
pop
inc
sbb
mov
xchg
cs
cmp
fwait
mov
and
and
in
mov
fnstenv
sub
stos
cld
and
push
movsb
sahf
push
push
repnz
inc
xchg
outsb
dec
cwtl
inc
mov
mov
cwtl
xchg
add
cmpsb
lds
ret
mov
mov
mov
int
sub
repnz
lds
xor
js
mov
aas
dec
cmp
pushf
les
jns
sahf
xchg
add
rep
jg
mov
iret
fwait
loopne
or
js
repz
inc
add
xchg
mov
mov
xchg
xchg
dec
ret
out
pop
imul
addb
data16
rorl
adc
mov
imul
mov
inc
sar
add
jno
test
cmp
jge
xor
lret
dec
clc
push
mov
in
lahf
adc
and
lds
sbb
jl
push
rcrb
push
add
jns
out
fistps
sti
sbb
pop
cmp
sub
push
mov
xor
jnp
push
call
push
in
clc
jnp
cltd
dec
orb
cwtl
sub
inc
test
dec
roll
test
test
ds
or
cmpsb
dec
inc
daa
into
das
xchg
inc
pop
mov
push
rol
lds
push
shll
dec
gs
cmp
sbb
testb
test
lds
ljmp
jp
out
push
inc
push
sbb
mov
in
fdiv
mov
cwtl
mov
iret
mov
not
testl
mov
inc
dec
dec
push
push
das
push
jl
test
lret
mov
test
adc
js
pop
jne
adc
imul
outsb
inc
jmp
sti
push
inc
divl
sarl
and
cs
or
adc
fnstenv
cwtl
loope
push
popf
add
insl
pusha
inc
sbb
jo
jne
dec
int
xchg
roll
imul
int3
out
push
enter
sbb
adc
mov
mov
sbb
xor
adc
rclb
cmp
or
push
push
pop
in
add
jb
xor
push
and
orb
lods
xchg
les
mov
je
fisubrl
aam
les
rorb
dec
stos
fisubrl
popa
scas
outsb
push
pop
dec
sti
push
push
xor
adc
pop
data16
adc
ffreep
xor
fldt
rcll
ss
std
lock
arpl
xlat
test
pop
xor
adc
push
pop
or
add
sub
xchg
jp
push
sbb
ret
push
cli
addr16
cmp
or
cmp
adc
cmp
cmp
lods
pop
mov
jnp
test
xor
dec
mov
push
pop
scas
jbe
jecxz
popf
ds
jne
mov
lea
subl
jo
scas
mov
mov
add
mov
call
shll
or
aad
dec
jnp
adc
push
movsl
pop
mov
aas
mov
enter
call
inc
push
out
inc
fdiv
lret
mov
sub
cltd
test
shlb
push
pop
mov
dec
les
push
add
ror
divl
inc
and
jg
lret
shll
lods
add
adc
mov
xor
je
jg
add
mov
cmc
repz
and
mov
mov
xchg
jbe
add
xchg
cli
fwait
jae
xchg
pop
mov
insb
subb
mov
fstps
and
push
xchg
pop
dec
nop
jb,pn
imul
add
xor
scas
cmp
loop
xchg
cmpsb
lahf
arpl
outsl
mov
fucomi
jmp
outsl
lods
leave
mov
test
mov
adc
mov
adc
xor
mov
jge
adc
xchg
scas
js
inc
mov
mov
dec
jns
push
enter
fst
dec
xor
sub
mov
mov
sti
jmp
mov
test
popf
call
lock
scas
orl
rorb
xchg
push
inc
xchg
push
mov
mov
inc
mov
jno
mov
lcall
and
jmp
shrl
cli
mov
mov
mov
in
mov
mov
and
icebp
fdivrl
fisttps
daa
inc
inc
pop
lea
dec
jl
xlat
idivb
idiv
sub
mov
repnz
cmp
inc
scas
js
jmp
lcall
orb
push
jns
enter
xchg
or
mov
dec
add
xchg
scas
mov
and
mov
mov
push
adcb
mov
in
sbb
ss
xchg
dec
enter
js
scas
shrb
xchg
xchg
ljmp
xchg
push
idivl
push
mov
or
xchg
mov
stc
adc
movsb
int3
imul
pop
int
jnp
nop
jl
das
test
lods
out
pop
das
mov
roll
push
popf
xor
push
shrb
dec
dec
dec
or
adc
mov
sbb
mov
mov
insb
int
loop
popf
repz
out
xchg
jecxz
jecxz
push
shl
int
inc
pop
mov
rcl
jp
insl
stos
outsl
sbb
pop
insb
or
pop
je
jns
sbb
movsb
xchg
adc
adc
adc
imul
arpl
nop
fwait
out
jmp
out
movsb
testl
outsl
push
arpl
iret
pushf
andb
pop
sub
test
mov
je
push
push
rorl
mov
addr16
xor
divl
add
out
sub
inc
jecxz
hlt
scas
jo
imull
dec
and
sub
int
push
add
mov
ds
int
add
mov
push
jbe
pop
lock
repnz
push
xor
stc
es
jo
addl
in
adc
adc
imul
dec
pmaxsw
xchg
ljmp
sub
xchg
in
push
insl
out
ret
jo
pop
imul
xor
xchg
jo
sub
int3
and
or
xchg
mov
mov
inc
sti
cs
out
int
out
test
adc
mov
loope,pt
jb
test
into
or
and
jge
sahf
mov
out
inc
mov
push
jns
pop
fildl
popf
mov
data16
jl
add
js
and
push
inc
imul
cmp
enter
mov
jle
dec
push
sbb
fistpl
jbe
push
into
inc
push
lods
jns
inc
lret
xchg
repnz
inc
lock
ss
ja
jae
add
dec
pushf
push
mov
jno
and
lcall
mov
jmp
popf
dec
mov
push
stos
sbb
in
loopne
pop
push
cmp
jle
push
out
fists
and
add
es
jmp
negb
int3
leave
xchg
mov
push
in
adc
mov
mov
and
sub
mov
xlat
fdivrs
bound
movsb
lcall
mov
pop
ret
mov
ja
push
call
xchg
pop
pop
ljmp
or
fldln2
inc
lea
loopne
adc
fidivrl
pop
dec
enter
fmul
int3
push
lods
ja
loopne
movsb
std
outsl
inc
inc
pop
js
lea
inc
pop
sbb
pop
inc
subb
mov
ljmp
cmp
in
gs
mov
pushf
inc
sti
ljmp
cmp
xor
into
cmp
jl
popa
pop
fistl
mov
inc
add
ljmp
iret
inc
sub
cmp
pushf
add
aad
loopne
mov
and
andl
dec
xor
mov
or
xchg
inc
pop
jge
lods
data16
cli
push
jno
pop
push
jmp
mov
xchg
jbe
jb
adc
mov
insb
xchg
shrl
decl
push
xchg
ds
les
aam
mov
in
jle
daa
test
jl
aas
or
sbb
and
inc
adc
jge
into
out
jp
andb
rorb
sbb
jbe
imul
inc
leave
cmp
push
and
jo
aas
js
xor
ljmp
es
mov
stc
cmp
pop
mov
addb
cmp
mov
gs
sahf
push
add
inc
mov
testl
arpl
dec
fs
add
pop
test
clc
mov
addr16
pop
xor
sub
shl
clc
repz
add
rcrb
or
dec
jno
es
pop
cld
dec
add
lea
into
enter
out
dec
jmp
inc
js
hlt
xor
push
jno
push
out
push
cmp
loopne
dec
pop
sar
sub
mov
mov
push
cld
imul
hlt
jle
xchg
inc
sbb
int3
cmp
loop
mov
jns
xor
sub
xor
add
lock
push
mov
xor
enter
xor
je
mov
pop
iret
mov
movsl
push
add
sahf
mov
jg
lcall
lods
or
xor
sbb
fnstenv
and
push
mov
adc
dec
mov
and
out
mov
inc
mov
hlt
in
adc
add
ret
stc
lret
or
rorl
pushf
dec
dec
movsl
xor
mov
jnp
mov
sub
jbe
aad
test
adc
repnz
aad
jecxz
jae
xchg
loope
mov
shrb
pop
cs
jae
dec
call
fisubrl
pop
loope
shrb
adc
mov
push
pop
call
and
repz
sub
es
sbb
pop
andb
mov
rorb
fdiv
mov
not
sub
cwtl
inc
pop
stos
mov
outsl
sub
lahf
mov
mulb
sahf
ret
dec
sub
ljmp
jbe
popf
cmc
xor
lea
es
scas
or
adc
fcoml
out
mov
pop
jl
mov
call
mov
das
shrb
icebp
ljmp
adc
outsl
test
lret
push
cs
mov
fstpl
imul
push
cmp
in
call
arpl
aam
data16
out
sub
jg
ds
sbbb
sbb
pop
loope
dec
fiadds
and
dec
pusha
mov
jle
insb
test
mov
adc
adc
cld
in
cmp
test
popa
stos
or
fildll
cmp
xor
call
sub
jge
stos
aam
scas
pop
call
fdivr
push
mov
or
dec
adc
cmp
sub
scas
ja
stos
xor
aaa
mov
movsb
mov
cmc
xchg
mov
and
sbb
daa
jle
clc
movsb
push
lcall
test
and
jl
or
and
imul
loopne
lods
out
cs
adc
adc
in
fs
int
xor
sti
lods
stos
or
pop
inc
cmc
lcall
push
arpl
cltd
dec
lds
arpl
nop
adc
movlps
subl
push
test
xchg
or
daa
pop
clc
gs
xchg
outsb
fwait
je
xchg
cltd
stos
mov
xor
adc
push
xchg
rcll
jge
fs
xchg
cmpsb
dec
mov
shlb
push
cmp
jb
scas
sbb
lret
pop
add
mov
sub
mov
dec
jne
inc
stc
std
adc
dec
lea
inc
lods
loopne
arpl
lahf
mov
jb
mov
mov
cltd
ror
push
enter
mov
dec
enter
cmp
je
cmpb
shrb
pop
stos
jg
ror
cmp
xlat
popa
and
test
pop
aas
ret
and
mov
icebp
outsl
enter
test
jmp
in
pop
sub
fists
cs
push
mov
and
je
lods
pcmpeqw
pop
ljmp
jns
in
sub
rolb
int3
sub
sub
inc
mov
sub
mov
sti
insb
mov
dec
lock
mov
jmp
dec
scas
mov
mov
push
jne
push
repnz
xacquire
mov
cmp
bound
nop
mov
mov
enter
in
mov
scas
jae
fs
mov
inc
mov
rcrb
jecxz
jo,pt
dec
ss
lret
xchg
jmp
aad
push
pop
or
xchg
lcall
xor
pop
cmp
cmp
insb
andb
sbb
clc
mov
dec
test
push
jne
or
out
ljmp
xorl
call
lock
or
xchg
mov
pop
mov
push
in
shrb
pushf
popa
pushf
cwtl
js
adc
push
fnstenv
xor
aam
lea
inc
jo
imul
sbb
jns
sub
ds
adc
stos
daa
adc
xchg
cmp
cmp
sub
out
mov
push
clc
in
mov
sbb
test
mov
pop
loope
jmp
sbb
test
jmp
sub
rcll
int3
jae
mov
jl
cmp
addr16
into
mov
jno
rclb
jge
or
inc
mov
sub
mov
cmp
push
jns
bound
lods
iret
dec
push
das
imul
out
outsl
add
clc
xchg
incb
sub
inc
jecxz
ds
nop
ret
les
push
and
clc
dec
mov
shld
imul
mov
or
jge
ss
imul
shlb
bound
in
jb
mov
adc
sub
mov
mov
add
leave
insb
sahf
sub
adc
rorl
mov
mov
loope
mov
mov
xchg
sbb
movsl
jnp
pusha
jp
imul
das
lret
lret
shrl
ret
out
mov
adc
jecxz
xor
mov
add
stos
sbb
mov
pushf
cs
jmp
test
cli
mov
lret
dec
push
push
xor
jp
lret
xchg
cmp
xchg
ss
push
pop
mov
mov
xchg
xor
pop
das
push
xchg
jo
jne
xchg
jne
add
cmp
mov
xor
xchg
sbb
rolb
lds
out
add
in
js
push
xor
add
stc
iret
push
and
lahf
jp
jle
mov
hlt
js
aam
jb
lds
orb
mov
test
movsl
jg
decb
inc
inc
call
cs
cli
fldt
add
push
cmp
inc
push
dec
movsb
lods
arpl
ret
cmp
dec
imul
lods
push
rolb
mov
orb
jge
mov
std
in
fpatan
fists
or
add
loope
mov
insb
repz
sahf
dec
mov
inc
xchg
sbb
xorb
clc
mov
fwait
aad
stos
aam
std
cmp
jl
out
cmp
push
pop
and
cli
inc
lock
mov
mov
jmp
pop
in
or
lcall
sbb
lret
mov
movsb
mov
scas
dec
xchg
inc
and
xchg
jg
das
xchg
push
pop
jb
sbb
hlt
and
test
jb
aas
in
hlt
inc
mov
roll
adc
push
rol
jno
mov
incl
repz
clc
mov
mov
mov
and
sub
pop
jge
xchg
fcmovu
push
hlt
scas
adc
divb
mov
outsl
fisttps
jne
ret
movsl
and
cmp
jbe
enter
fildl
std
or
pop
or
pop
or
imul
or
xor
sub
or
mov
push
add
hlt
cmc
icebp
dec
xor
jle
jmp
and
popa
inc
or
pop
cli
cmp
add
add
ljmp
fisttps
out
call
fdivr
pop
dec
enter
ljmp
inc
pop
lock
cmp
or
cmpsb
ds
ds
add
sti
add
mov
aaa
pop
mov
pop
faddl
inc
pop
fisttps
adc
fcoml
pop
mov
mov
insl
les
sbb
scas
push
and
pusha
mov
xchg
add
adc
sub
mov
xchg
mov
daa
addr16
dec
mov
sbb
inc
jne
fwait
je
xchg
movsb
pop
lock
mov
dec
lea
mov
ds
push
pop
mov
adc
and
repz
jmp
inc
or
mov
subl
aad
ss
mov
mov
mov
loop
push
scas
pop
mov
cmp
repz
and
sbb
test
scas
out
add
xor
sbb
stos
dec
mov
mov
or
xchg
xor
or
das
add
push
insb
in
pop
into
out
dec
pushf
pop
xor
in
loopne
xor
push
sti
cld
mov
sbb
aas
xchg
ja
ljmp
sub
push
inc
ficoml
scas
sbbb
movsb
lods
mov
mov
test
mov
stos
shrl
sbb
ja
mov
insb
ffree
add
arpl
dec
cmc
test
cli
jbe
jl
jmp
push
pop
dec
mov
dec
in
pop
xchg
out
push
daa
test
test
adc
xor
lret
int
adc
lods
dec
loopne
cmc
mov
fs
adc
and
lds
fsubs
pop
subl
jmp
add
scas
xchg
loopne
imul
nopl
sahf
push
scas
xchg
push
and
mov
add
xchg
into
pop
out
cli
lds
fstl
fimuls
adc
enter
loopne
and
pop
call
fldcw
sub
pop
add
lret
stos
movsl
adc
add
add
push
push
cmp
push
fildl
call
pop
lods
jmp
cmpsb
xchg
xchg
lock
in
push
jno
cmp
mov
sbb
add
jne
adc
test
arpl
dec
insb
mov
cltd
jae
adcl
xchg
mov
leave
jbe
shrb
push
cmp
in
or
ret
or
sbb
xchg
clc
rcl
arpl
loope
into
jg
pop
ffree
stos
jno
loope
sti
cmp
stos
nop
in
aad
insb
fwait
repz
jge
pop
xchg
mov
lret
outsl
neg
arpl
xchg
ljmp
or
xor
jle
mov
out
xchg
loope
int3
or
ds
mov
dec
test
pop
in
iret
ss
iret
pop
xor
ret
and
and
mov
push
xchg
movb
push
in
xchg
add
jecxz
aad
fidivs
sbb
lahf
cli
call
out
mov
sarl
push
loopne
add
stos
ja
dec
mov
scas
mov
push
cmpsb
sub
shrb
and
xor
addr16
dec
inc
jno
xchg
xor
lock
sub
lret
pop
roll
aam
movsb
shll
rcll
jg
enter
cwtl
js
xchg
add
or
stos
adc
adc
inc
pop
mov
xor
or
shlb
jb
mov
clc
mov
dec
adc
lds
frstor
lret
xchg
dec
dec
mov
frstor
mov
neg
jnp
pusha
clc
int3
fucomip
data16
xchg
lcall
dec
enter
sahf
jmp
mov
and
or
adcb
push
mov
inc
xchg
or
test
in
and
mov
pushf
rcrb
inc
jo
mov
add
fs
sbb
enter
pushf
pusha
cld
leave
lods
mov
mov
ds
sub
int3
test
js
imul
pop
pop
pushf
pop
bound
and
jo
out
push
enter
lds
jle
sbb
jle
push
in
mov
push
insb
pop
mov
mov
rorb
test
fwait
dec
jp
loopne
repz
pop
dec
cmp
cmp
out
ds
sub
pminub
inc
add
or
lcall
and
pop
es
cltd
fidivrl
out
clc
les
fsubrl
stos
pop
mov
or
movsl
adc
push
std
cmpsl
pop
cmp
adc
sbb
aam
lret
pop
call
adc
dec
mov
cmp
mov
mov
push
jb
sub
push
jmp
in
xor
and
stc
bound
pop
mov
pop
adcl
cs
push
cmpl
add
xorl
std
push
cmp
dec
ljmp
cmpsb
popf
mov
clc
mov
cmp
adc
sub
cltd
in
outsb
sbb
fsubp
fidivrl
dec
lods
jle
loopne
ja
push
push
insl
sub
adc
push
dec
add
push
and
add
in
and
loopne
rorl
adc
js
pop
nop
rol
push
sbb
lret
inc
xor
mov
into
xor
and
aaa
sub
cmp
sub
out
in
inc
push
out
cmp
push
push
xchg
xchg
mov
mov
sbb
stos
ss
lcall
dec
hlt
pushf
out
push
xlat
dec
ds
add
dec
sbb
inc
sub
cltd
in
call
or
pop
lds
dec
pusha
inc
ljmp
sub
out
loop
enter
lcall
int3
cltd
fcompl
sub
hlt
aaa
pminsw
ret
mov
push
jecxz
dec
daa
mov
test
dec
fnstsw
or
xchg
xor
xchg
push
xor
lcall
xorb
jb
and
imul
xor
ja
fldcw
fucomi
cmp
jbe
jbe
aaa
add
or
ljmp
ret
push
adc
sub
mul
dec
add
test
out
notb
fs
and
sbb
shll
jle
inc
sbb
fcomip
andb
lahf
popf
nop
ror
negb
jp
mov
xchg
push
bound
aam
mov
xchg
addb
leave
mov
test
push
inc
adc
adc
in
cwtl
ss
mov
or
mov
jmp
jno
xchg
sbb
mov
stos
lret
bound
mov
test
aam
movsl
cli
aaa
jns
dec
jns
sbb
imul
cli
mov
inc
inc
popf
rcl
push
pop
cmp
push
push
push
mov
repnz
aam
cli
sub
dec
loop
in
enter
data16
call
subl
inc
mov
or
jmp
lea
adc
hlt
mov
xor
daa
or
mov
das
je
inc
cs
add
push
movsl
pop
mov
cmp
jbe
or
in
rcr
movsb
scas
lock
vfnmsub132ss
mov
int
jnp
push
subl
mov
subb
sbb
jmp
push
loopne
popa
out
movsl
iret
mov
lods
push
ss
cmp
fwait
sub
pop
add
mov
flds
loope
pop
lahf
cmp
xchg
sub
loop
cmp
add
leave
jns
sbb
push
jle
mov
es
mov
cmp
sbb
imul
sbb
popa
mov
repz
xchg
mov
mov
jg
ss
jmp
mov
mov
ficomps
sbb
ja
dec
push
jo
imul
shll
push
inc
aas
adc
das
cmpb
movsb
adcb
sti
stc
or
dec
xor
stos
push
xchg
out
subb
xchg
add
repz
outsb
or
cmp
add
js
hlt
pop
cmp
jno
es
sub
sti
add
xchg
adc
push
add
and
xchg
jmp
shlb
sub
dec
and
stos
jbe
xchg
psllw
movl
xor
xchg
inc
mov
push
setle
es
clc
orl
jp
stos
gs
sub
out
mov
in
arpl
ret
push
outsb
in
pop
pusha
imul
push
sbb
or
cmpsl
pop
out
lods
inc
aas
mov
mov
test
lock
lods
lcall
xchg
fsub
cmp
jg
jns
inc
mov
mov
mov
push
push
es
xor
lea
and
aaa
outsb
inc
mov
nop
cs
aad
xchg
push
in
mov
push
lods
push
xchg
xor
xlat
pop
into
test
insb
fsubrl
arpl
xlat
jge
sahf
sbb
pop
imul
ret
iret
stos
push
mov
lret
repnz
dec
out
jmp
xchg
cmp
jnp
movb
mov
daa
xchg
pop
push
js
xlat
stc
ja
ja
daa
pusha
xchg
pop
mov
and
and
ret
jg
lods
shll
cld
mov
mov
lds
cld
mov
push
flds
mov
icebp
pop
pushf
sbb
mov
or
adcb
incb
mov
or
lcall
xor
or
or
cmp
test
adc
and
fwait
inc
clc
sub
inc
stos
mov
cmp
je
in
aaa
sti
out
pop
pop
sbb
lret
jecxz
jg
push
and
mov
mov
in
mov
js
mov
add
fists
call
sahf
mov
push
adc
incl
cmp
rcrb
out
shlb
sbb
pop
ljmp
pop
mov
pop
mov
cmpb
xchg
mov
ret
gs
xchg
and
repz
subb
mov
sti
idiv
ret
mov
cmpsb
loopne
loopne
jecxz
mov
das
jnp
dec
insb
adc
rorb
push
mov
jge
movq
mov
add
pusha
das
mov
adc
add
sub
jg
test
adc
push
xchg
popf
movsb
loope
xchg
mov
sbb
xor
adc
aad
in
jns
mov
aad
shlb
xor
xor
imul
xor
stos
in
mov
mov
fnstenv
sub
arpl
stc
xchg
out
mov
add
lret
xchg
jne
mov
add
mov
inc
jnp
int
daa
xlat
into
adc
in
stos
xchg
es
jecxz
cmp
es
jnp
jl
ror
xchg
adc
fcoms
dec
xchg
lret
ja
dec
mov
outsb
jge
cmp
pop
lret
push
movsb
adc
mov
das
movsl
lret
xor
iret
xchg
les
int
ja
jg
mov
mov
push
ret
cwtl
jecxz
or
adc
pop
sbb
stos
lds
movsb
xchg
leave
icebp
stc
sub
push
push
mov
lcall
popf
ja
adc
ret
test
adc
sti
data16
sub
out
push
arpl
rcrb
sub
shlb
sub
jp
jo
jbe
sub
ja
mov
sub
fbld
fs
leave
mov
pop
dec
push
xchg
adc
push
and
adc
mov
xchg
add
sbb
mov
movsl
cltd
rcr
shl
sub
push
int
or
stos
in
jmp
push
mov
xor
cmpsl
mov
cmp
outsl
jle
je
cld
shll
cld
xchg
pop
adc
mov
aaa
pop
js
add
fisubl
push
mov
insb
idiv
or
cmpsb
mov
nop
scas
xlat
loope
sbb
dec
das
and
arpl
inc
daa
xor
imul
inc
xchg
sbb
mov
shrl
aas
sbbb
in
pop
rolb
adc
push
xorb
add
scas
shll
jno
add
int3
std
cmp
sarb
add
fcomip
push
xor
popa
lds
sbb
inc
jmp
push
test
jmp
orl
jl
mov
jno
rcrl
pusha
jne
and
int3
sbb
xchg
hlt
outsl
push
xchg
cli
stos
popa
jge
maxps
add
sbb
stc
outsl
adc
lahf
inc
or
jae
mov
decb
ret
pop
or
push
mov
inc
mov
sub
nop
pop
shll
in
adc
and
adc
mov
mov
into
fisttps
mov
sub
push
pop
out
insb
fwait
xchg
lods
mov
mov
mov
pop
and
ror
rol
clc
pusha
fs
xchg
out
jae
cmp
test
jge
cld
sbb
jmp
mov
subl
lcall
cmp
inc
pop
shlb
in
fcompl
xchg
fcomps
or
xchg
add
fsubs
mov
and
push
insl
test
xor
jbe
pop
popa
pop
mov
jle
in
idivl
push
cmpsl
sub
add
adc
sahf
insl
fwait
aas
cwtl
inc
sbb
popf
add
mov
jbe
cli
shll
xorl
ret
jae
fldl
xor
cmp
push
push
loopne
out
and
or
mov
mov
repnz
clc
sti
add
scas
stos
push
daa
lods
leave
inc
sbb
imul
and
adc
andnps
ficompl
es
cmp
xchg
pop
rcll
loope,pt
ret
bound
js
lret
inc
fldenv
popf
pop
cld
iret
daa
jmp
clc
push
lock
aaa
mov
call
je
pop
scas
rorb
fs
push
imul
xchg
incb
test
mov
cmp
cmp
jecxz
mov
cmpl
subl
or
pop
lahf
jo
shl
mov
xor
repz
fcoms
push
push
mov
cmp
stos
stc
cli
sbb
mov
nop
xor
iret
mov
out
popf
ret
outsb
out
outsb
fidivs
int
push
fsubl
mov
shll
adc
ss
aad
fidivs
nop
jp
call
in
push
sub
das
dec
sub
xchg
pop
cli
push
dec
or
pop
jmp
imul
jmp
jmp
jle
inc
out
subb
jg
insb
jge
test
test
mov
dec
pop
icebp
or
fs
pop
ds
dec
test
xor
icebp
mov
insb
inc
push
popa
dec
push
inc
or
jnp
pusha
les
cmp
dec
aaa
shlb
fadds
pushf
mov
jecxz
es
adc
xchg
adc
lcall
sbb
mov
call
add
push
aas
scas
mov
addl
adc
adc
and
mov
mov
test
mov
in
xchg
in
xchg
push
dec
xchg
adcl
aas
ffreep
add
xlat
ret
cmp
mov
sahf
fadd
mov
out
negl
leave
ss
fwait
pop
sub
rep
jne
leave
sbb
push
cwtl
rcrb
or
sahf
pusha
adc
push
call
cltd
jl
sub
cld
insb
idivl
lock
inc
xchg
push
or
lea
add
outsl
clc
pop
lods
inc
inc
jp
inc
out
adc
xor
pop
lock
repz
push
push
cmp
fidivrs
insl
cmc
adc
pop
pusha
sub
mov
jno
dec
in
mov
and
lock
pop
repnz
roll
psrad
ja
getsec
push
fsubrs
clc
push
pop
ja
cmp
pop
cltd
or
lds
mov
push
ret
repz
dec
call
jno
fimuls
in
pop
in
lahf
or
fsubl
dec
xchg
repz
jp
add
aas
sbb
icebp
jo
repz
cmp
push
mov
jmp
xor
mov
push
sbb
or
fs
daa
mov
loop
xor
out
xor
mov
clc
lcall
pushf
pop
pop
daa
mov
mov
inc
sbb
xchg
cmpsb
xor
and
loop
xor
mov
mov
dec
cltd
push
mov
pop
cmp
add
fs
fcoms
mov
sbb
call
fcompl
mov
jl
inc
rorb
and
jae
mov
fsubs
lods
xor
subb
fstpt
xchg
push
adc
jle
or
movsb
pop
ret
fldt
adc
fnstsw
roll
xor
sbb
inc
mov
movntq
sub
or
divl
cltd
loopne
mov
xchg
and
cmpsl
clc
jecxz
nop
push
test
movsl
sbb
dec
and
xchg
xchg
into
repz
les
scas
pop
fidivs
lods
xor
push
add
adc
mov
sbb
pusha
sub
pop
and
cwtl
pop
fdivl
xlat
cmp
cltd
mov
cli
scas
xchg
inc
lds
pop
push
xchg
pop
bound
sbb
xchg
mov
dec
jmp
out
pop
imul
mov
push
xor
shlb
jecxz
out
movsb
inc
inc
xchg
lods
iret
xor
insl
add
insl
xchg
test
icebp
xor
inc
in
cli
add
adc
fwait
in
mov
test
xchg
xor
loopne
mov
filds
mov
sbb
das
out
mov
stos
dec
sahf
enter
enter
scas
ja
testl
pop
jge
inc
push
xchg
pop
clc
and
ja
and
xor
pop
mov
push
jo
add
jae
fs
popf
push
pop
icebp
jnp
out
sub
pop
push
scas
int3
jnp
or
jg
inc
pop
in
push
shrb
jno
pop
jp
into
clc
jecxz
pop
pusha
je
movsb
mov
or
sbbl
popf
std
rcrl
mov
pop
or
aas
dec
xor
and
in
dec
les
push
pop
icebp
or
out
add
push
movntps
hlt
push
push
ljmp
mov
sahf
sub
out
movsb
dec
es
stos
and
pop
push
inc
cltd
ret
cmc
xchg
sahf
mov
dec
jbe
xchg
inc
push
cmc
push
pushf
cli
mov
add
or
xchg
ret
mov
test
add
lock
les
mov
cwtl
pop
int3
xor
mov
xchg
sub
cli
test
push
adcl
sub
mov
int3
shlb
sbb
sub
scas
js
mov
and
sub
movsb
stos
subl
enter
clc
cmovo
ret
dec
xor
inc
lock
xchg
mov
mov
jg
pop
jo
fstpl
mov
jbe
or
inc
add
push
loop
jp
call
mov
push
out
cmc
mov
bnd
sub
movsl
aas
mov
mov
xchg
bound
fadds
das
arpl
insb
cmp
dec
inc
loope
mov
push
pop
imul
pop
mov
fcomi
push
xchg
push
or
xchg
mov
test
scas
or
and
xor
or
ljmp
add
jge
into
push
xor
push
push
jae
ret
or
sbb
push
fidivs
mov
lods
add
pop
xchg
nop
inc
ret
mov
cmpb
in
pushf
and
adcb
stos
insl
test
cmp
call
mov
fimull
sti
push
or
pushf
orb
sub
dec
ljmp
dec
mov
jmp
fwait
mov
cmp
ret
lods
stc
imul
mov
in
inc
lock
ljmp
jmp
inc
xor
sbb
in
lds
cltd
add
sub
es
push
mov
lds
testl
ret
mov
inc
sarb
enter
aaa
test
enter
sub
jbe
sub
sbb
sbb
inc
cmp
cmp
push
jle
out
fs
aad
fdivrl
jbe
shlb
push
jnp
add
cmpsb
into
imul
cmpb
adc
xor
repz
adc
jecxz
and
xor
std
mov
pop
xor
ror
mov
pop
jge
cmp
ret
pop
fcoms
scas
sysexit
and
push
orl
ficoms
loopne
push
out
inc
incl
loop
fisubrl
sbb
ror
xor
cmpb
xor
mov
pop
mov
push
daa
mov
xorl
push
int3
es
jo
lret
lods
jno
fidivs
push
xor
fwait
imul
into
lret
iret
enter
sbb
aaa
shlb
xor
mov
inc
outsb
dec
push
jl
and
inc
call
and
cld
push
xor
and
pop
pushf
ja
pop
mov
xlat
shlb
es
mov
jecxz
shll
ss
adc
sbb
divl
mov
nop
push
jae
mov
jmp
fadd
sbb
jle
push
add
aad
cmp
incb
push
add
out
lds
imul
enter
rclb
inc
dec
roll
and
subb
or
dec
dec
jo
push
leave
sbb
dec
dec
lret
inc
mov
ja
mov
repnz
cmp
xchg
repnz
sahf
fwait
or
decl
jno
push
testl
push
or
mov
xchg
push
cwtl
xchg
mov
pop
sub
shlb
pop
mov
xchg
les
mov
in
xchg
dec
mov
inc
dec
add
xchg
pop
mov
pop
and
cmpsb
shll
jmp
mov
sbb
push
push
in
sub
ret
in
rcrl
mov
daa
sti
call
in
dec
clc
lds
sti
xchg
or
xchg
enter
mov
frstor
xchg
and
pop
ljmp
pop
mov
jg
bound
sub
test
mov
test
push
jl
scas
add
dec
cwtl
fs
stc
aas
mov
ljmp
jns
push
fs
xor
stc
and
mov
dec
scas
push
in
fildll
das
jp
cmpsb
out
rorl
mov
ljmp
pop
gs
jmp
adc
sbb
xchg
cmp
mov
jmp
xchg
adc
mov
jecxz
inc
stos
push
mov
loope
inc
push
mov
pop
adc
jl
outsb
inc
cwtl
lcall
test
fs
cmpb
lcall
push
dec
leave
pop
dec
popa
pop
sub
xchg
mov
xchg
push
sub
lea
movsb
push
pop
pop
cld
arpl
mov
pop
scas
das
pushf
sub
dec
gs
lods
sub
inc
mov
push
lret
dec
fs
or
and
xchg
or
adc
mov
jle
fildll
loopne
test
fbstp
and
leave
pop
shl
pop
push
jnp
iret
mov
sbbl
jb
in
mov
push
pop
popf
addr16
dec
mov
mov
inc
mov
sahf
fldl
xor
xchg
pop
ljmp
mov
xchg
push
pop
in
ja
push
xchg
mov
jns
rol
sbb
movsl
cmp
mov
lods
add
jmp
dec
mov
call
testb
cld
jb
sub
jmp
mov
and
adc
repz
dec
fcomp
mov
divb
xchg
xor
cmp
rolb
dec
aam
jne
sbbb
sahf
popf
push
pop
loopne
sbb
jbe
inc
cmp
loopne
add
push
push
in
sbb
add
arpl
sbb
sbb
push
or
mov
out
or
imul
or
sub
cwtl
fisubl
mov
int3
aam
jp
movsb
mov
and
aam
movsb
popf
outsl
ja
jmp
mov
ret
push
daa
adc
sahf
das
add
popf
mov
sbb
call
inc
mov
fisttpll
lock
jae
lea
mov
and
sub
push
cltd
sub
loop
test
into
push
jp
mov
out
xchg
hlt
and
sbb
jne
sbb
mov
inc
push
jg
das
sti
jg
push
out
cmc
aad
outsl
xchg
mov
push
jns
nop
cltd
not
ljmp
pop
imul
out
cmp
out
push
xor
mov
adc
and
mov
cltd
into
sbb
cmp
or
jmp
xchg
ss
mov
xor
ja
insb
ret
sub
ljmp
push
xchg
int3
mov
mov
cld
xor
pop
cmp
push
inc
inc
fistpl
jo
inc
loope
imul
mov
sti
sahf
imul
or
adc
xor
cmp
mov
es
roll
cmpsb
push
icebp
xor
push
and
pop
xchg
jbe
cli
push
and
jge
push
adc
into
mov
mov
addr16
pop
jp
mov
inc
sarb
mov
mov
dec
popa
xor
mov
lret
push
cmp
xchg
lods
and
push
inc
push
sti
loopne
jg
enter
movsl
sub
aas
fsubrl
nop
ret
add
jge
cmp
inc
repz
cld
mov
mov
jnp
push
pop
inc
xchg
push
mov
add
jmp
inc
mov
das
mov
aad
int
cmp
nop
ja
mov
add
xchg
jne
xchg
or
outsb
negb
shll
sbb
jg
lret
or
mov
rolb
xlat
pop
mov
pop
jns
pop
sbb
insl
insb
faddp
jle,pn
and
ror
mov
rcll
aam
dec
sub
lock
orb
xchg
cs
lea
xor
add
pop
add
js
xlat
mov
sbb
push
cmp
mov
pop
and
dec
lock
fidivl
jno
inc
leave
cli
add
sbb
dec
dec
and
out
add
adc
push
mov
pop
sbb
cwtl
movsb
ficoml
loop
cs
das
insl
mov
fwait
scas
negl
fstpl
pop
mov
mov
push
popa
imul
sbb
hlt
lods
mov
and
enter
mov
jg
in
jp
or
jmp
xchg
cmc
pop
xchg
and
mov
jge
push
jp
adc
inc
rorl
inc
sub
pop
fldt
pop
dec
sbb
sub
into
mov
bswap
mul
clc
xchg
stos
adc
pop
pop
dec
xchg
mov
dec
cli
rorl
in
lahf
or
mov
icebp
inc
mov
dec
push
test
sub
mov
mov
aas
mov
stos
jae
xlat
filds
push
jl
pop
fdiv
pushf
sub
iret
dec
repnz
jmp
aam
into
scas
es
inc
push
divl
fwait
xchg
add
cmp
mov
out
hlt
xchg
fbstp
jge
mov
xor
mov
icebp
xor
dec
add
push
push
shll
out
jmp
inc
sbb
shlb
mov
insl
ret
popa
jle
push
int
stos
dec
stos
mov
movsb
inc
rcrl
je
inc
ret
insb
roll
sub
or
ret
jb
jmp
add
push
mov
adc
and
push
mov
pop
les
add
mov
or
mov
xor
xchg
mov
pop
ja
xchg
push
inc
and
fs
mov
sub
stos
pop
or
scas
out
cmc
ret
imul
xor
pop
xchg
sub
loopne
jmp
lret
xchg
lds
test
hlt
lret
fildll
stos
repnz
mov
mov
dec
stos
aas
dec
mov
hlt
clc
sub
cmp
adc
ss
adc
mov
pop
dec
mov
mov
cmp
ds
jle
pop
ret
xor
or
dec
sbb
or
pop
and
test
jne
out
lods
and
push
or
mov
jne
movsl
out
jmp
popa
sub
jmp
outsl
lods
loopne
pop
sbb
stc
pop
subb
cltd
into
mov
jae
lock
jno
pusha
add
mov
lds
das
sbb
jp
lcall
pop
sub
jecxz
sbb
cmp
sub
popa
pop
jg
push
push
stos
inc
cmp
std
jmp
sti
es
or
lret
ds
rcrb
jne
jp
or
push
mov
das
or
sub
mov
sbb
imul
aam
enter
sub
mov
shll
ret
sbb
cs
or
orb
cmp
jmp
pop
inc
out
inc
lcall
mov
iret
mov
dec
cmp
push
es
inc
mov
dec
xchg
and
push
ret
test
jecxz
sub
test
mov
sbb
cmpsl
je
das
stos
pop
movsl
push
clc
adc
and
sbb
and
into
and
xchg
and
xor
dec
addb
or
or
cmp
xchg
ljmp
inc
push
mov
imull
pop
dec
xlat
ljmp
icebp
sub
and
aad
sbb
shlb
push
sub
push
jns
insb
ja
movsb
mov
xor
out
test
add
xor
fucomp
push
in
or
jo
lods
cmp
out
sbb
add
imul
pop
fwait
mov
push
dec
jne
in
push
fidivl
in
xor
xor
jnp
int3
cmpsb
loopne
idivl
sbb
cmp
pop
outsb
jo
bsr
fwait
sbbb
xor
add
shrl
xchg
or
in
out
stos
into
cs
xlat
in
popa
xor
xchg
fstpt
push
mov
sub
mov
xor
lock
mov
dec
test
iret
ret
mov
sbb
scas
test
inc
push
push
fbstp
movsl
dec
enter
inc
mov
lods
dec
sahf
loope
mov
xor
gs
cmp
stos
mov
mov
aam
shr
mov
pop
inc
ds
iret
int3
nop
imul
sub
loopne
pop
and
movsl
sub
sbb
push
mov
mov
cld
cmpsb
cltd
sbb
invd
icebp
lods
rcl
ja
adc
stos
dec
pop
xchg
scas
nop
add
push
hlt
and
pop
je
pop
int
lahf
mov
mov
mov
inc
lea
out
or
lods
pop
dec
daa
cmp
push
les
mov
add
int
sti
pop
sub
xor
movsb
jb
xchg
enter
adc
into
xchg
fwait
arpl
cmp
ret
and
leave
int
jecxz
repz
inc
rolb
jo
xlat
mov
jl
xor
adc
fldt
mov
enter
pop
das
scas
jg
pop
mov
scas
enter
shlb
xchg
fiaddl
out
jb
cmpsb
push
icebp
pop
sbb
mov
xor
xor
dec
mov
out
andl
pop
lret
cmp
jmp
sub
cli
dec
inc
imul
mov
into
out
lahf
pop
adc
repnz
inc
mov
mov
cmpsl
inc
jecxz
pop
scas
inc
fisttpl
cmp
jg
xchg
imul
mov
inc
stos
push
sbb
or
push
mov
sub
aam
or
out
mov
jne
imul
flds
push
int3
push
dec
sub
test
clc
mov
fsubrl
lret
fcmovb
pop
xchg
call
add
out
popa
xlat
inc
xchg
rcll
dec
push
imul
mov
sbbb
subb
and
imul
js
test
incb
test
sub
cmp
lret
sub
ret
out
bound
aad
pop
popa
cmp
or
inc
aaa
jo
xor
cs
insb
loopne
les
mov
cmp
pop
in
xor
mov
cld
test
test
out
or
addr16
jge
das
jle
add
pop
lret
jns
or
or
dec
dec
cmpsb
cwtl
sbb
push
lcall
stos
loope
les
aaa
ret
popf
mov
sbb
xchg
sbb
dec
out
ret
inc
dec
ja
xor
dec
rorl
lds
bound
out
lds
mov
cmp
fwait
mov
gs
inc
adc
mov
lret
jb
push
pop
iret
fstpt
push
xor
gs
mov
daa
out
cld
gs
cld
pop
lods
call
mov
rorl
into
inc
mov
or
mov
sbb
aam
aam
jnp
and
data16
shr
in
and
adc
dec
push
cmpsl
gs
adc
fcomps
sbb
sbb
test
dec
movl
xchg
xchg
and
mov
pop
sbbl
mov
push
cmp
test
ret
repz
popf
xchg
lods
cmp
hlt
lods
and
or
cmp
jg
jg
ja
movsl
in
push
adc
add
lods
dec
outsl
prefetch
xor
rorl
push
push
shr
sbb
mov
push
jae
fcomps
xchg
jnp
cli
jecxz
test
pop
xor
loope
test
addb
sub
inc
push
cmp
sub
add
rol
sbb
lahf
icebp
xchg
xchg
jle
in
fsubrs
mulb
and
xchg
adc
rolb
and
dec
push
or
xor
push
and
adc
in
push
sub
lds
mov
push
lods
push
mov
or
or
leave
adc
cmpsb
add
imull
lds
sbb
rorl
push
cmp
out
mov
daa
xchg
decb
mov
ret
and
xchg
fadd
dec
jge
out
scas
inc
dec
adc
or
push
jnp
push
cmc
cmp
inc
sub
mov
dec
dec
adc
mov
push
test
pusha
push
cltd
int
lds
xchg
movsl
sbbl
test
stos
push
in
rclb
mov
sub
bnd
mov
test
mov
int
xor
lods
cmp
addr16
xchg
cmp
pminub
ret
stos
and
pop
add
les
fsubrs
in
lds
insb
add
mov
jbe
ficomps
or
daa
test
in
pop
mov
mov
outsb
jno
push
lret
repz
bound
int
pop
cld
mov
je
adc
mov
push
jae
stos
xor
rorl
push
mov
in
mov
inc
mov
decb
mov
repz
pop
inc
pushf
xchg
push
cli
push
out
push
jmp
fwait
cltd
popf
ret
or
in
scas
test
mov
sbb
mov
push
ljmp
xor
movsl
or
pop
shlb
cmp
je
cmp
jnp
sbb
cs
int
adc
inc
dec
loopne
pop
lds
lret
mov
leave
xchg
inc
sbb
leave
push
imul
xchg
cmpsb
mov
jne
pop
je
mov
push
faddl
and
mov
das
out
faddl
mov
sbb
mov
hlt
mov
mov
push
jne
mov
mov
movsl
and
lods
or
add
fiadds
mov
daa
push
popa
shrl
test
into
lahf
fisubs
or
scas
leave
ret
in
fbstp
inc
sbb
outsb
and
sub
mov
sub
arpl
or
mov
popf
mov
arpl
jbe
sub
inc
add
xchg
shlb
aaa
outsl
fildl
push
mov
aas
les
sub
adc
or
popa
es
mov
dec
push
cwtl
adc
cmp
adc
push
xor
gs
xor
mov
lea
es
cwtl
mov
xchg
out
jg
mov
mov
cmp
push
out
rcl
fsubs
sti
in
push
xchg
push
lret
or
mov
dec
cmpsl
mov
jnp
icebp
pop
mov
js
or
bound
xor
cmp
push
movsb
test
pushf
pop
ljmp
mov
or
mov
pop
in
sub
enter
fmuls
dec
mov
adc
add
or
jae
mov
flds
test
ja
out
push
pop
bound
adc
into
adc
into
dec
or
inc
or
add
outsb
and
iret
inc
pop
dec
test
adc
mov
mov
cmpsb
mov
cmp
inc
cmc
mov
ficompl
mov
cmp
sar
lock
jno
inc
dec
shrl
push
rcll
out
pop
mov
filds
lahf
mov
fadds
lods
out
mov
mov
mov
sarw
lds
cmp
loopne
sbb
push
out
or
lock
mov
mov
mov
insb
imul
incb
xchg
gs
mov
jp
testb
sbb
and
xchg
ja
adc
loopne
sub
adc
out
into
out
or
sub
cli
push
adc
or
out
das
mov
xor
sub
push
xchg
and
ljmp
insb
sahf
push
es
test
jg
add
cs
jns
scas
ss
jmp
popa
ds
fs
aaa
movsb
cmpsb
es
dec
ret
inc
xchg
or
arpl
dec
test
loope
pop
jns
movsb
aad
ds
mov
mov
jnp
jns
sbb
sbb
sbb
xor
test
and
push
arpl
ja
test
push
mov
pop
fdivrl
sub
std
test
aad
dec
jo
cmp
sbb
filds
loop
sbb
sub
lcall
xor
xor
sub
inc
repnz
cmc
iret
lahf
push
loop
cmp
and
mov
out
rcrl
ret
pop
notb
add
je
jp
or
cmpsb
jns
inc
and
cmp
jno
icebp
cmp
jnp
xor
xlat
pushf
hlt
insb
sbb
je
jae
icebp
divb
sub
insl
aas
fisttpll
mov
mov
push
loopne
inc
push
fcmovb
add
lcall
popf
lds
testb
movsb
xor
sbb
lahf
cmpsl
mov
and
cli
leave
sbb
leave
mov
pop
out
inc
lcall
pop
sub
jecxz
add
addb
mov
xor
inc
cltd
in
iret
jecxz
ja
jb
enter
mov
lcall
sub
push
sub
incl
sub
pop
loopne
shlb
push
xor
push
adc
xor
cmpsl
das
xor
stos
xchg
mov
iret
sub
test
pop
loop
cmp
add
out
xchg
jecxz,pt
loopne
or
xchg
loope
rolb
push
add
sub
scas
and
shrb
mov
add
ja
rcrw
sbb
outsl
sbb
fcmovnb
aam
shll
lock
es
negl
pop
in
loop
fmul
jmp
sahf
out
movsl
pop
pop
mov
flds
push
scas
push
jl
mov
repz
inc
mov
shll
dec
rol
xchg
mov
enter
test
cmpsl
push
test
pop
add
push
jae
cmc
arpl
into
out
stos
mov
cmpsb
mov
adc
pop
or
sbb
popf
push
and
sti
jp
jb
outsb
and
jmp
popf
les
fidivs
pushf
mov
stc
mov
andnps
loope
imul
jnp
lret
xor
xchg
movsb
aam
sarl
addr16
xchg
fwait
pushf
cmp
xchg
fucomp
mov
out
dec
adc
sbb
adc
adc
test
mov
int3
lods
call
add
push
adc
es
shlb
fsubp
cmp
pop
lcall
jo
aad
pop
lret
xor
lock
movsb
mov
inc
call
lods
add
xor
std
insb
add
vucomisd
push
pusha
mov
or
cmp
sbb
or
and
cmp
push
ret
cmp
enter
pop
popf
or
ret
pop
push
mov
mov
and
push
les
push
sarb
push
dec
or
push
outsb
xchg
mov
fstp
xlat
aam
mov
aaa
fisttpll
enter
sbb
divb
lods
mov
inc
sbb
or
sbb
aaa
dec
mov
les
shl
lret
stc
push
push
lock
imul
pop
jmp
xchg
fldt
push
add
dec
pop
push
inc
cmp
test
sbb
fs
cli
ljmp
mov
outsl
cwtl
xor
sub
std
filds
enter
fstpt
sbb
lahf
dec
rcrb
cmp
jg
ret
sbb
and
xchg
xchg
mov
cmp
in
hlt
mov
mov
les
sub
daa
insl
ja
std
inc
lret
dec
imul
mov
data16
jmp
mov
scas
insl
mov
adc
xor
les
shlb
out
inc
and
ljmp
lret
inc
fists
mov
add
add
std
aas
xchg
scas
push
subb
shlb
mov
call
pop
push
xor
lods
xorb
and
sbbl
mov
sub
add
lods
jg
aam
add
loope
mov
xor
repz
fisubl
jg
mov
and
mov
addr16
mov
loopne
ljmp
js
sbb
mov
dec
mov
enter
lahf
imul
shrl
inc
xchg
dec
jns
and
xchg
mov
cmovge
das
cmpsl
mov
fwait
and
rcl
xlat
push
mov
sahf
insb
add
inc
scas
adc
cmpsb
mov
jae
adc
cmp
and
aam
fnstenv
and
rorl
aad
lret
sahf
jmp
jg
adc
lret
aad
ret
xchg
cmp
pop
in
bound
mov
pop
scas
popf
jmp
call
pop
nop
sub
jle
or
push
test
push
xor
pop
fnstenv
add
stc
inc
stc
fmull
or
lret
sub
cmp
test
adc
add
xchg
mov
fistpll
pop
mov
cmp
pop
js
xorb
test
jnp
pusha
in
stc
sbb
jp
push
cmp
jp
ret
mov
sbb
movsb
add
outsb
jg
rorl
cmp
adc
stos
mov
xor
or
imul
inc
xor
clc
pop
inc
mov
mov
sub
iret
testl
jne
cmp
xor
mov
aam
xchg
pop
aam
mov
push
xchg
and
push
pop
inc
dec
pop
push
lahf
int3
movsb
mov
loopne
xchg
loope
dec
sahf
mov
aaa
cmp
outsl
inc
push
sbb
lds
push
mov
push
add
or
mov
pushf
aaa
lods
fcoml
add
testb
in
xor
xchg
fs
outsb
sub
pusha
mov
dec
pop
dec
test
in
jae
push
cli
mov
mov
fs
lahf
cmpsb
test
mov
fucom
and
sbb
mov
shll
jnp
cli
cmpsb
xor
sbb
xor
and
mov
repnz
out
sub
add
cwtl
xchg
mov
push
das
inc
and
mulb
das
cli
stc
inc
jl
rclb
daa
jae
or
pop
mov
mov
and
mov
jbe
mov
and
add
inc
cmp
add
pop
jl
jns
mov
or
scas
cltd
sub
pop
rcl
add
mov
jle
out
xchg
in
ret
jne
daa
imul
sbb
out
jle
jg
fcmovu
loop
clc
sbb
push
cli
mov
aad
cmc
sub
bound
pushf
mov
ficomps
leave
rolb
push
push
sub
out
add
repz
jl
imul
pop
xor
mov
xchg
adc
adc
lret
test
xchg
mov
pop
mov
ljmp
xchg
xchg
pop
pop
cmpsb
outsb
mov
sbb
inc
nop
in
pop
mov
mov
lea
adc
lret
cs
inc
jbe
mov
dec
push
cwtl
push
sti
mov
je
add
sub
inc
cltd
outsl
gs
mov
test
inc
cmova
push
rcl
dec
cmp
cmp
jle
test
jmp
or
xorps
lods
jmp
mov
cmp
shrb
mov
test
and
mov
leave
rcll
sbb
jnp
push
push
xchg
or
lods
xchg
les
mov
add
aam
lahf
mov
inc
in
inc
sahf
sub
jae
jne
movsb
jbe
xor
out
pushf
loop
movsl
sarl
lods
mov
stos
jne
mov
out
cmp
std
mov
mov
cmp
mov
loop
inc
pop
add
or
adc
sbb
push
inc
pop
sub
int
adc
push
adc
jge
out
popl
xor
or
mov
xlat
loopne
xchg
in
es
loop
cld
insb
lahf
popa
adc
cs
cs
hlt
orl
pusha
lcall
or
stos
imul
inc
push
je
lds
fldcw
test
popf
movsb
mov
push
lods
or
xor
inc
js
stos
jl
sub
insl
into
es
inc
xor
inc
and
scas
enter
adc
test
lock
outsl
mov
inc
dec
sub
push
xchg
xchg
jno
adc
mov
inc
pushf
push
out
ret
push
cmp
xor
dec
xor
and
das
mov
mov
adc
jle
mov
mov
mov
push
xor
fisubl
push
and
popf
mov
fs
int3
callw
outsb
loope
pop
ret
loop
cmp
fs
repz
and
cmp
jp
outsb
xor
jecxz
cld
bnd
cmp
lret
popf
setp
out
scas
cmp
sub
aaa
js
jmp
cmpb
mov
or
pop
jb
sub
cmpsl
pop
mov
hlt
jge
pop
iret
adc
hlt
mov
pop
mov
test
jo
je
stc
repz
dec
in
mov
jne
push
dec
pop
jae
jp
mov
xchg
xchg
xlat
adc
incl
xchg
lock
push
cld
lock
mov
lds
pop
xor
hlt
int3
cmc
idivl
mov
loopne
cs
jecxz
mov
jne
sub
iret
out
orb
inc
xor
xchg
xchg
mov
stos
filds
dec
andb
dec
jp
int
mov
in
outsl
movb
xchg
adc
add
inc
or
sarb
jp
xchg
add
push
xchg
out
scas
in
faddl
xchg
dec
adc
mov
mov
and
adc
shr
push
push
cld
or
mov
and
into
sbb
fsqrt
mov
fdivp
icebp
decb
inc
daa
stos
int
mov
shlb
push
jno
mov
push
rol
xor
or
test
push
dec
les
ja
inc
mov
loopne
mov
gs
outsl
add
add
dec
xchg
ss
mov
or
jge
arpl
fcomps
sub
roll
jl
jge
dec
sub
and
rcl
xor
mov
pop
ds
inc
sub
movsl
mov
fsubrs
mov
iret
js
jge
jnp
data16
movsb
out
cmp
cld
cmp
cmp
mov
imul
mov
push
pop
insl
pop
fdivl
fsubrs
lock
dec
push
mov
ds
mov
push
mov
repz
out
dec
xchg
cltd
dec
pop
mov
daa
js
addr16
jmp
jbe
pushf
jmp
loope
movsb
stc
imul
adc
mov
mov
inc
pop
movsl
aaa
cmp
std
dec
into
cmp
hlt
lahf
jno
pop
fwait
push
cld
inc
loop
push
in
in
cmp
sti
and
xchg
or
pusha
pop
daa
stos
xor
or
cmp
dec
and
add
pcmpgtw
xchg
mov
ss
pop
jg
sbb
or
mov
clc
xor
and
fists
lock
push
dec
inc
int3
and
and
lcall
sarb
mov
fsubp
test
pop
push
mov
pushf
aas
das
rcr
sti
xchg
mov
push
lods
test
lcall
loope
mov
fsubs
or
popa
ret
bnd
adc
push
add
and
fcmove
cmpsl
pop
or
jl
push
xchg
enter
lods
mov
sahf
inc
icebp
repz
cmp
in
std
sbb
mov
shll
stc
in
xchg
push
sbb
repz
aaa
xchg
fnstsw
sub
in
std
icebp
lds
or
leave
ret
dec
or
inc
add
and
repz
bound
sbb
leave
adc
out
and
cmp
enter
jle
adc
sbb
dec
or
mov
popa
scas
jns
xchg
and
inc
push
jecxz
in
mov
rcr
sbb
jae
andl
cmpsl
ljmp
or
lods
insl
pusha
cmpsl
jg
sub
xchg
clc
mov
mov
pop
add
aas
cmp
dec
mov
cmp
inc
or
fisttps
and
ret
push
sub
or
stos
je
outsl
push
dec
iret
shlb
xchg
in
mov
iret
std
pop
inc
cmpsl
xchg
and
sbb
xchg
add
mov
pmaxub
lcall
les
xor
outsl
adc
mov
cmpsb
inc
and
lods
push
nop
fbstp
loopne
mov
aas
and
dec
inc
mov
or
not
sub
inc
mov
push
cs
stc
daa
inc
jns
in
cmp
adc
lock
lods
shr
test
pop
xchg
test
mov
ja
js
dec
jle
sbb
nop
clc
ret
js
addr16
sbb
push
jl
inc
fbstp
mov
iret
or
mov
sbb
nop
jbe
es
push
add
xor
bound
mov
jno
jmp
sbb
cmpsl
jb
call
dec
inc
jl
push
dec
setnp
jo
data16
pop
lret
mov
mov
daa
imul
and
ljmp
push
nop
cmpsl
mov
call
jnp
enter
cmp
lcall
mov
mov
pop
dec
addr16
push
xor
xor
mov
add
sub
loop
pop
sti
add
stos
inc
jbe
stos
add
cwtl
adc
lods
ljmp
mov
mov
push
adc
inc
pop
pop
jo
dec
mov
shrl
lock
mov
cmp
out
add
jmp
sbb
sbb
test
adc
repnz
pop
sarb
pop
pusha
push
cmc
imul
jp
test
xchg
stc
in
popf
lcall
je
mov
cli
push
dec
insb
test
mov
mov
dec
pop
push
push
mov
mov
dec
cmpl
pushf
cmp
jnp
addr16
lea
mov
lds
lods
add
push
pop
in
fidivrs
cmp
pop
sub
into
sub
mov
push
jne
mov
mov
daa
iret
sbb
sub
or
cmp
out
aam
cwtl
js
push
pop
mov
push
cltd
dec
push
clc
insb
stc
mov
mov
mov
in
sahf
ljmp
or
push
or
icebp
gs
xor
fcompl
hlt
test
mov
inc
fyl2x
mov
mov
dec
imul
sti
or
inc
nop
hlt
mov
nop
leave
in
movsb
out
pop
or
call
cwtl
mov
aaa
push
aas
icebp
fdivrs
dec
mov
cmpsl
shr
pop
popf
in
mov
sti
sub
int3
push
and
into
cmpsl
enter
test
sbbl
push
add
stc
into
lods
adc
dec
rcr
inc
sub
add
pop
mov
loope
cmpsb
pop
push
pop
inc
cmc
pop
and
fimuls
mov
mov
in
pop
pop
inc
push
cmp
fcoms
cmpsl
jmp
je
push
cmp
hlt
push
fbld
das
bound
inc
cmp
js
and
imul
sub
mov
fstpt
je
mov
cmp
imul
les
push
xor
mov
mov
add
ljmp
xchg
outsl
mov
out
xchg
mov
mov
xor
lret
call
add
repnz
iret
popa
shlb
fs
inc
loop
pop
mov
jle
pushf
fnstcw
pop
lock
xchg
dec
sub
andb
adc
shll
pop
and
lods
fidivl
aas
fimull
movb
js
nop
icebp
sub
aad
or
xchg
rorb
add
push
add
lock
jecxz
jnp
dec
jp
mov
xchg
push
cmp
lods
cld
clc
push
mov
jg
mov
pop
in
or
cmp
sub
imul
ljmp
jnp
rol
in
sahf
xchg
arpl
add
inc
cmp
mov
inc
in
decl
imul
gs
push
jmp
push
ret
or
mulb
mov
mov
mov
adc
lcall
movsl
js
xchg
iret
jnp
add
imul
and
dec
sub
jne
xchg
adc
mov
dec
and
adc
pop
xor
scas
rol
mov
mov
and
xlat
frstor
or
enter
iret
dec
fimuls
mov
pop
leave
test
xchg
repnz
xchg
lahf
rcrb
mov
scas
fdivrs
cmpsb
out
pushf
jg
sub
xor
cmpsb
cmp
int
cmpsl
cmp
mov
xchg
clc
or
clc
push
sub
leave
mov
outsb
out
into
dec
aas
xor
add
lods
xor
pop
shrb
adc
mov
push
pop
lea
xchg
push
fiaddl
out
cmp
scas
and
ja
or
adc
sahf
pop
sbb
fwait
pop
push
xchg
adc
mov
loop
lods
sbb
clc
sar
add
jo
add
popf
cli
mov
cmp
ret
in
incl
adc
sub
mov
imul
fnstsw
popf
lds
loop
pushf
mov
push
loopne
and
or
jl
fs
push
cmpsb
mov
leave
mov
cmp
mov
cbtw
adc
js
out
sbb
in
lock
dec
mov
add
test
in
stc
cmpsl
xor
jno
in
out
aad
out
jg
cs
loope
jle
sbb
add
push
or
inc
clc
addl
adc
out
in
cwtl
jmp
sbb
push
outsl
outsb
arpl
aaa
sbb
out
xchg
in
repnz
cmp
cmp
out
sbb
jo
or
sti
or
mov
mov
cmpsl
int
out
and
enter
cmp
or
mov
push
xchg
xor
add
add
pop
popa
push
adc
sbb
dec
push
push
daa
call
push
and
and
sbb
and
mov
rorl
ret
mov
sub
and
mov
hlt
mov
ja
dec
pusha
jl
imul
jno
xchg
out
imul
sub
pop
arpl
adc
mov
push
int
shlb
ror
inc
and
sbb
shl
mov
pop
xor
ja
shrb
cmp
add
or
xchg
mov
std
roll
mov
sub
repnz
int3
push
std
lds
je,pn
ss
cmp
add
dec
push
adc
push
out
nop
arpl
xchg
sbb
pushf
into
arpl
jmp
daa
jp
dec
sahf
xor
cmp
in
sub
out
jbe
jle
insl
addr16
inc
push
jnp
xchg
xchg
inc
imul
cmpsl
mov
fs
outsl
add
outsb
pop
sub
add
nop
test
in
push
adc
add
xchg
ljmp
sub
mov
and
jno
fmull
icebp
shlb
ret
xcrypt-ecb
mov
adc
dec
in
outsb
and
xchg
dec
clc
pop
dec
adc
test
adc
jmp
pop
xchg
repnz
test
push
mov
mov
dec
xchg
lds
inc
inc
in
push
movsb
jnp
jae
loop
andl
aaa
xor
push
inc
daa
sbb
dec
outsb
push
outsl
loop
add
push
mov
add
ljmp
mov
rcl
stos
jecxz
mov
lds
push
pop
push
push
and
dec
out
mov
jo
scas
mov
mov
xchg
pop
adc
mov
in
cmp
daa
sub
mov
inc
movl
adc
lret
inc
nop
mov
push
ljmp
mov
and
shlb
and
into
rorl
rcrl
jns
fwait
cmp
or
outsl
popa
or
in
fmulp
fbstp
test
fildl
and
scas
xor
repnz
rol
mov
inc
and
sub
or
sub
shll
leave
repnz
add
mov
push
jbe
xor
xor
iret
xchg
cwtl
fcmove
push
fadd
pop
sub
push
jo
iret
divl
cli
jp
xchg
jo
shlb
mov
notl
inc
push
dec
mov
push
sbb
imul
jle
cmp
sbb
sahf
sbb
in
xchg
cmp
sbb
repz
jno
sub
xor
sub
push
mov
add
mov
je
mov
dec
out
sbb
jl
cmp
fnsave
nop
pop
test
jne
sbb
cmc
into
ss
cmp
popa
pop
add
mov
push
xor
cltd
test
mov
sbb
das
mov
jmp
mov
out
adc
or
shrb
rolb
xchg
pushf
jns
cmp
xor
mov
sti
mov
xchg
mov
movsb
ds
xor
icebp
loop
xor
xchg
fnsave
aad
lret
add
xchg
xchg
cmp
or
sar
mov
and
imul
cli
imul
test
adc
subb
pop
inc
sub
xor
adc
inc
jae
push
xchg
rcrb
inc
pusha
lods
push
movsl
int3
fidivrl
mov
sub
sbb
push
jno
aaa
fnsave
cmpsl
cmp
push
ja
add
stos
jb
jns
stos
sahf
mov
mov
pop
and
cli
jbe
mov
adc
ret
mov
mov
inc
inc
jno
or
aas
data16
inc
mov
sub
int
jl
push
xor
sub
push
out
push
cmp
pop
outsl
xlat
stos
call
xchg
lods
inc
insl
jmp
xchg
stos
lret
jae
addl
pop
sub
cmp
shlb
lea
aam
clc
lret
repnz
mov
into
das
or
daa
stos
pop
dec
adc
lret
jne
rolb
in
inc
add
jo
push
pop
js
pop
lods
xchg
cltd
cmp
mov
frstor
or
in
jae
dec
popf
daa
fistps
pop
mulb
dec
mov
or
and
fisttps
sbb
imul
adc
sahf
sub
repz
mov
lods
aaa
lods
iret
loopne
fst
and
mov
outsb
inc
adc
ja
out
out
mov
cmp
movsl
mov
jbe
cli
or
jp
add
or
or
std
and
push
cmpsl
add
imul
jecxz
gs
push
and
jecxz
add
mov
lods
push
xor
xor
cs
addr16
and
add
sub
das
sbb
mov
cs
sbb
gs
ja
lock
sub
into
xchg
pop
jnp
push
jo
jae
inc
push
test
jae
xor
push
in
sbb
and
bnd
lret
sbb
imul
push
mov
scas
mov
in
or
repz
mov
and
inc
nop
aas
int3
scas
outsb
je
sbb
fxch
into
mov
jbe
or
dec
ja
cmp
sub
and
push
lea
loopne
lea
mov
nop
xor
nop
ja
lret
xchg
dec
push
inc
push
inc
lods
cmc
lock
pop
sub
add
int3
and
ficomps
aam
or
sarb
mov
mov
jne
cmp
pop
out
iret
sub
inc
icebp
and
mov
int3
fbld
outsb
jmp
fildl
pop
cmp
lods
or
jmp
sub
push
fisttps
jl
enter
es
pop
mov
lock
scas
lret
inc
test
cmc
mov
das
xchg
sbb
sbb
jle
xor
xchg
leave
add
xchg
push
outsl
add
mov
mov
push
adc
iret
ret
push
push
xor
clc
xor
inc
pop
int3
rcr
arpl
cltd
jne
mov
ret
mov
and
xchg
push
ss
cmp
imul
popa
jb
or
popf
pop
lock
mov
in
jle
jmp
arpl
stc
mov
push
jl
mov
jo
les
push
adc
xor
sub
sbb
xchg
jl
outsb
mov
ds
mov
testb
dec
inc
mov
sarl
dec
mov
jnp
pop
pop
sub
lods
jnp
mov
xor
mov
inc
nopl
ret
push
xor
enter
mov
daa
ds
pop
jle
pusha
fisttps
sub
pop
cli
std
jge
dec
inc
or
push
or
pop
je
fsub
lret
rcr
xlat
movsl
xor
dec
iret
test
pop
pop
and
add
xlat
cwtl
int
push
adc
mov
sti
or
sub
rcll
scas
nop
push
lret
add
jbe
mov
inc
fadds
and
insl
xor
leave
call
jmp
repnz
movsb
cmpsb
inc
add
jb
xchg
pop
cli
js
inc
out
push
mov
jecxz
dec
mov
cmp
xor
in
xchg
into
sub
xchg
test
mov
nop
sbb
ja
inc
xor
jnp
lahf
add
dec
dec
dec
adc
ficompl
loope
lds
pop
xor
xor
and
mov
dec
sbb
mov
xor
lea
pusha
shl
insb
lret
cli
aad
mov
pop
pop
inc
add
outsb
sub
push
lock
imul
daa
stos
fmuls
xchg
loop
je
mov
shlb
jns
and
insl
jne
pop
xchg
loope
in
pop
dec
jg
inc
pop
jbe
jae
fidivrs
aas
cmpsl
mov
ja
mov
aam
mov
mov
push
fimuls
mov
jo
inc
fdecstp
inc
outsb
or
jb
das
and
rorl
xchg
loope
fidivl
fs
je
jnp
scas
mov
sbb
inc
fcmovb
dec
gs
and
push
stc
xchg
pop
sti
aaa
js
add
pop
sahf
subb
loop
dec
in
pop
out
pop
js
in
jp
inc
scas
cs
ror
stc
loopne
cld
or
mov
adc
inc
pop
or
mov
mov
pop
insb
xchg
lds
div
cmc
add
jmp
lret
jo
fucomp
xchg
push
cmpsb
sbb
jg
ds
inc
mov
das
test
repnz
cmp
lcall
mov
shrl
mov
fsub
lods
sub
daa
dec
mov
ss
cmp
lret
push
pop
dec
nop
clc
lds
inc
arpl
stos
dec
and
jl
xlat
fnstenv
xchg
mov
insl
loopne
mov
xchg
or
lds
or
loop
jmp
pusha
xor
fcompl
aam
shlb
insb
cmc
cwtl
je
or
inc
inc
iret
lods
jbe
ds
push
cmp
scas
inc
jmp
mov
mov
mov
fs
ret
xchg
cmpsl
push
aam
ficoms
movsl
xchg
or
mov
inc
xchg
aad
sub
mov
fidivs
and
into
and
popf
cmp
push
cmp
adc
lret
es
and
push
sarl
pop
xchg
gs
dec
ljmp
fs
popa
add
jo
pop
jno
out
jb
mov
ficoml
out
imul
repnz
les
pop
aas
pop
loop
repz
cmpl
push
int3
popa
sub
inc
ja
jns
dec
lret
cmp
cmc
sub
movsl
and
mov
adc
lock
pop
out
xchg
jle
lods
and
pop
add
dec
pop
imul
and
mov
in
rcrl
fwait
mov
jnp
xchg
aas
push
jnp
clc
sti
xchg
lret
push
mov
loopne
fcompl
cli
mov
outsb
test
xor
sbb
jle
inc
mov
add
pop
mov
fs
mov
ljmp
mov
mov
sti
leave
mov
ds
insb
rolb
mov
mov
mov
push
jmp
shrl
sub
stos
cli
jmp
inc
data16
inc
out
mov
rcll
divb
or
jl
adc
cmp
pop
pop
inc
lret
in
inc
jne
xchg
xlat
jecxz
aam
fiaddl
imul
lods
cmpxchg
test
loop
shrd
mov
xor
xchg
fsubl
loope
dec
mov
repnz
mov
lods
insl
pop
fcoml
dec
inc
xchg
push
xor
sti
cwtl
in
push
insb
inc
scas
lret
ficomps
rcr
sub
mov
adc
sbb
popa
push
and
stos
xor
rclb
loope
mov
xchg
addr16
or
cmp
xor
ljmp
movsl
test
sahf
cmp
imul
cmp
stos
mov
mov
cmp
sarb
sbb
mov
stos
lahf
adc
inc
jae
adc
mov
fs
jl
sub
xchg
hlt
and
addr16
mov
into
sbb
in
and
dec
clc
es
pushf
inc
loop
jge
push
arpl
pop
mov
pop
pusha
sbb
pusha
cmp
inc
push
imul
enter
fstp
mov
repnz
mov
xchg
or
or
cwtl
clc
pop
jns
add
ja
divl
loopne
jns
jge
adc
push
js
icebp
push
fistpl
movl
or
xchg
mov
cmp
xchg
sbb
push
and
jno,pt
mov
mov
push
xor
in
or
push
xchg
pop
imul
mov
xchg
clc
jg
scas
sub
pop
mov
mov
inc
inc
mov
cs
test
sbb
lea
sub
ja
inc
jns
jp
cmp
add
sbb
maxps
sbb
inc
fsubs
cmp
fsts
addr16
and
pop
inc
dec
inc
inc
mov
pop
cmp
sbb
add
testb
push
out
push
mov
adc
roll
mov
mov
jp
adc
mov
sbb
push
leave
cmpsb
push
testb
jg,pt
or
fnstsw
xchg
xor
fiaddl
pop
pop
mov
jbe
sbb
jae
leave
pushf
adc
cmp
sbb
xchg
daa
lahf
ficoms
lahf
pop
push
adc
pusha
push
push
fldt
out
in
cmp
fimuls
fucomi
or
test
nop
roll
mov
fimuls
clc
xchg
dec
push
push
mov
jns
pop
jbe
outsl
clc
pop
add
inc
insl
fnstenv
sub
mov
incl
rol
jge
adc
sti
pop
inc
mov
pusha
jbe
jb
cs
cmp
insb
jnp
pushf
stc
andl
mov
cmc
xchg
dec
cli
call
sbb
int
mov
sub
imul
push
addb
add
test
sub
movsb
fwait
or
and
dec
ret
lahf
jecxz
sahf
mov
and
sub
add
mov
pop
pushf
in
cli
cmc
icebp
or
xor
out
fldl
fisubl
or
outsb
stos
mov
push
lahf
mov
loope
jl
inc
push
stos
push
aad
mov
notb
push
xchg
fmull
aam
pop
add
sti
fnstsw
loope
arpl
stos
hlt
push
or
pushf
inc
test
xor
sarb
inc
sub
out
int
ret
cvtps2pd
ret
movsl
sub
pusha
mov
pop
insb
mov
push
ss
pop
test
vmovntps
push
push
jno
and
pop
add
dec
pop
and
xor
fmul
fs
xchg
dec
jecxz
lods
mov
dec
cmpsb
movsb
jno
scas
xor
push
outsl
lea
push
loop
div
mov
mov
sbb
jl
push
mov
fdivrs
inc
xchg
fs
test
sub
clc
xchg
aas
ljmp
sbb
mov
movsl
mov
add
cmp
fcmovu
outsb
mov
sub
push
pusha
inc
pop
stc
jmp
jp
adc
pop
pop
dec
sbb
out
jle
jb
push
or
mov
add
cli
decl
sub
jle
mov
add
xchg
inc
scas
xor
mov
stos
roll
xchg
sub
xchg
fsubs
sbb
stos
fwait
lock
not
jmp
pavgw
leave
ret
in
sbb
out
mov
scas
add
or
push
or
jb
jge
aam
lods
mov
sub
pop
loope
sub
mov
test
cmp
rcrl
jg
push
push
lret
rclb
xchg
sub
fdivrs
insb
nop
aas
or
sbb
pop
pop
call
sbb
fadd
int3
inc
or
fnstcw
lods
mov
jnp
inc
add
mov
sub
push
xor
xlat
jmp
jne
repz
push
std
mov
shlb
mov
cmp
rolb
cltd
xchg
sub
pop
xor
ss
test
clc
scas
or
push
pop
es
xor
movq
adc
jb
xor
push
int
sub
mov
cld
in
leave
adc
outsl
adc
stos
mov
idivb
pop
sub
into
add
pusha
test
push
xchg
and
les
mov
and
into
pop
push
flds
dec
in
int
adc
and
or
mov
pop
mov
mov
push
add
rcrl
mov
adc
call
cmp
mov
adc
jecxz
dec
dec
imul
push
add
out
xlat
push
mov
js
or
xchg
cmpsl
cwtl
mov
arpl
stos
dec
test
cli
mov
mov
jbe,pt
cmpsl
aad
test
iret
sbb
outsl
mov
mov
imul
mov
rcpps
adc
mov
push
imul
xchg
cld
mov
adc
fs
dec
push
mov
hlt
adc
int
add
repnz
mov
push
jae
and
jg
lret
add
stos
xchg
out
pop
lcall
pushf
xor
mov
movsb
and
mov
lock
sub
jo,pt
push
out
mov
mov
xor
push
clc
cmp
lret
mov
adc
pop
cltd
inc
add
hlt
jle
cmp
ja
sbb
sahf
inc
out
mov
das
sbb
aas
mov
fldenv
or
cmp
fcomip
jmp
push
sbb
sub
shrb
rorb
mov
scas
and
bound
sbb
clc
cmove
lret
push
adcb
mov
push
movsl
mov
lea
dec
jmp
lret
roll
cld
or
xchg
imul
mov
shlb
insb
xchg
gs
jae
inc
mov
fisubs
pop
cli
je
xchg
out
in
dec
scas
loopne
pusha
lret
mov
fidivs
xchg
cmp
push
inc
inc
xorb
repnz
jbe
outsl
test
xchg
add
outsb
or
xchg
out
mov
mov
scas
pop
cs
add
shl
rorl
movsl
sahf
stos
outsb
jmp
mov
test
add
jmp
sub
xor
xchg
pop
das
jnp
sbb
insl
fldenv
mov
or
xor
bound
inc
jl
push
ss
or
ds
jle
out
cmp
and
das
cmpsl
xchg
dec
sub
fnstenv
pop
test
push
in
shl
fdivl
dec
outsb
dec
xchg
dec
dec
out
mov
pushf
popa
fwait
pusha
mov
inc
lds
cli
lret
stos
scas
xor
sar
std
dec
rcll
mov
int
rol
arpl
push
scas
rclb
xchg
dec
inc
add
mov
sbb
adc
push
js
popa
imul
mov
or
pop
out
add
leave
jge
push
aam
or
aas
dec
xchg
cmp
lods
orps
cld
aaa
pop
sbb
cmp
dec
cmp
ficoms
mov
or
add
dec
dec
mov
inc
push
icebp
ret
imul
jp
mov
adc
sbb
sbb
adc
icebp
outsl
idiv
test
sbb
repnz
xchg
xor
jmp
sarb
xor
mov
pop
cmp
push
mov
inc
mov
les
jns
adc
xor
fstpt
pop
nop
scas
xchg
sbb
xlat
xlat
loopne
adc
pop
mov
add
dec
inc
adc
pop
mov
in
jo
lret
lods
cmc
sbb
pusha
sub
and
xchg
stos
fimuls
fisttpl
dec
dec
sbbb
add
xchg
lcall
push
or
loopne
sbb
stos
mov
andb
rcpps
cli
jp
xchg
add
sbb
cmpb
loop
sbb
mov
in
ss
neg
mov
rorl
int3
xchg
je
loop
test
je
add
stos
or
maxps
and
insb
lret
pop
or
adc
push
jnp
and
pop
out
lahf
out
mov
addr16
jl
push
jmp
test
and
outsl
xchg
out
xchg
int3
pop
cmp
fildll
inc
and
sub
aad
push
subb
std
dec
mov
mov
movsb
inc
cli
loope
inc
outsb
sub
add
in
lret
fwait
jp
cmpb
outsb
push
xor
dec
dec
notl
lahf
mov
mov
pop
adc
inc
adc
divl
add
lods
ror
sarl
cld
and
cmp
lods
add
andb
dec
pusha
int
sub
sub
ret
mov
rclb
sarl
cld
xchg
sbb
out
and
loope
or
adc
insb
jne
mov
testb
sbb
jns
mov
sbb
fmulp
or
jge
sahf
mov
ret
mov
pop
fcmove
je
pop
sbb
popf
popa
ret
jl
cmp
mov
pop
jecxz
push
fiaddl
mov
dec
push
inc
fdivp
enter
in
or
inc
rcr
sbb
scas
data16
mov
pop
add
nop
outsb
pop
pop
adc
push
orl
in
arpl
mov
sub
xor
cld
and
add
loop
fadd
push
or
sub
inc
insl
cwtl
jno
ds
popa
sub
in
lret
or
mov
dec
cmc
lret
test
pop
pop
enter
push
inc
mov
lea
test
mov
fsubrl
add
insb
orl
fcoms
hlt
cmpsl
mov
and
je
stc
cmpsb
fs
bound
xor
mov
cli
and
add
std
gs
dec
or
cld
adcl
adcl
test
in
cmp
rcrl
jns
dec
jbe
iret
shrb
call
loope
xchg
mov
hlt
enter
adc
add
jp
inc
test
into
ror
push
inc
mov
into
jb
sub
jbe
pop
inc
push
clc
or
inc
ficomps
adc
sub
frstor
sarb
mov
adc
pop
adc
sub
jno
in
jnp
fisttps
fistpll
and
inc
jnp
and
cmp
in
cs
pop
out
pop
xor
test
push
std
popa
pop
test
sbb
fs
pop
fcomps
jb
mov
mov
add
pop
push
cmpsl
in
mov
adc
pop
mov
push
fistps
movsb
loop
push
insb
jmp
mov
xchg
ret
fdivrl
ja
mov
mov
js
xchg
jns
sbb
fcmovbe
int3
in
mov
in
scas
pop
xchg
int3
lock
lea
ds
jne
scas
cld
adc
flds
jl
outsl
adc
mov
or
mov
test
jb
loop
lcall
xor
add
pop
sbb
and
enter
dec
xor
mov
outsb
cli
push
inc
in
aas
xor
xor
lods
push
movsb
gs
pop
lods
xor
inc
aas
dec
arpl
push
out
shl
mov
dec
orl
test
orb
or
mov
les
adc
testb
mov
push
inc
cmp
jl
in
jge
sbb
clc
mov
jbe
mov
icebp
jmp
jge
fucomi
cmp
arpl
test
repz
sbb
or
movsb
in
jl
repnz
jne
pop
xchg
push
or
sbbl
mov
aaa
inc
cmpl
pop
mov
jbe
sbb
inc
pushl
into
mov
enter
add
add
and
sub
cmp
in
sbb
cmpsb
push
dec
cmpsb
dec
inc
outsb
rclb
loop
mov
pop
push
lods
dec
dec
jnp
sbb
pushf
sbb
cmp
rol
push
shrb
cmp
cmc
dec
jnp
in
jecxz
jns
pop
push
iret
fdivl
pop
dec
dec
lret
mov
in
sti
out
mov
push
aam
rcrl
shrl
in
mov
and
pop
test
jns
cmp
and
rol
cmp
dec
hlt
xchg
ss
das
push
mov
sub
ds
jo
cltd
sti
aam
icebp
data16
arpl
popa
mov
xlat
cmpsl
pusha
push
jle
imul
xlat
inc
push
push
push
inc
xchg
clc
cmpsl
in
outsb
jl
dec
sub
xlat
addr16
mov
mov
inc
outsl
fs
mov
jne
mov
pop
cwtl
les
sub
aad
xchg
mov
insl
adc
test
ja
push
mov
xor
pop
add
insw
test
sub
daa
popf
mov
sbb
add
jmp
lock
js
jecxz
dec
imul
cmc
bound
pop
pop
rcrb
cwtl
loope
jp
sahf
dec
sbb
nopl
test
push
mov
inc
and
adc
cmpsl
aas
xorl
outsl
add
cmpsl
jmp
or
dec
xchg
ljmp
into
mov
icebp
dec
scas
sub
ljmp
inc
fdivrl
ja
push
and
mov
or
lea
mov
push
mov
sti
ret
jge
insl
xrelease
aam
xchg
xchg
nop
cmpsb
gs
xchg
adc
push
mov
push
inc
pop
outsl
pop
repnz
and
in
or
xor
aaa
lea
cmpb
sbb
loope
bound
rorl
movsb
gs
negl
jb
sub
ds
jbe
mov
sub
inc
mov
dec
cmp
test
ret
outsb
cmp
shl
insl
popl
mov
test
xor
mov
xchg
popa
fcmovnbe
push
or
inc
pusha
les
rorl
fstpt
xor
lods
add
or
mov
xchg
inc
pop
push
shrl
push
sbb
mov
aaa
or
sbb
xchg
mov
adc
jo
xchg
lods
xor
pop
push
mov
lret
mov
inc
lods
ret
cmp
sub
jecxz
cld
notl
mov
adc
or
aam
imulb
in
cs
subl
fldenv
in
or
std
push
sbb
mov
cmp
xor
fsubrl
int3
xchg
movsb
mov
lods
fimuls
fwait
lret
mov
ret
arpl
movsl
pop
jne
iret
inc
addr16
cmp
mov
sbb
push
xchg
xchg
cmp
inc
outsl
xorl
xor
mov
incb
ss
pop
add
add
testb
movsb
std
xchg
push
gs
fadd
add
mov
lds
xchg
push
xchg
shlb
rcrl
divb
pop
push
xchg
xor
dec
subl
adc
pop
mov
movsb
jo
mov
out
push
aas
ss
pop
sub
cmpsb
or
xor
daa
fwait
xchg
jmp
pop
stos
dec
inc
cmpsl
out
cmp
ljmp
pusha
test
std
add
push
cmp
lret
jmp
popa
mov
and
data16
out
outsb
push
or
aas
push
sbb
in
mov
es
inc
push
cmp
in
jb
xchg
lcall
imul
dec
std
add
push
je
scas
push
and
addr16
add
push
push
mov
fimuls
mov
pop
fidivrs
in
pop
mov
dec
sbb
stos
int3
dec
mov
movsl
loopne
pop
cmpsb
and
push
in
stos
dec
mov
mov
cli
flds
ror
sarl
cmpl
fdivrs
out
xchg
xor
push
mov
repz
sbb
add
addb
nop
inc
out
jno
xor
in
notl
and
and
pop
sbb
mov
jo
add
mov
out
adc
movsb
jbe
test
jne
cltd
inc
pop
push
pop
arpl
shrb
divl
or
scas
psllq
pop
or
add
cmp
sub
inc
leave
xchg
pushf
xchg
xor
sub
jbe
test
push
cmp
and
fcoml
mov
loop
inc
jmp
jg
enter
divb
lahf
mov
cwtl
xor
les
fstp
mov
paddusb
cmpsl
stos
or
daa
andl
mov
add
pop
add
lret
jbe
mov
repnz
sub
iret
neg
fs
mov
idiv
push
xor
jp
aaa
popf
out
movsb
lock
mov
sahf
jns
scas
int3
adc
js
dec
arpl
jp
push
cmp
nop
jb
pop
fildl
cmp
lahf
pop
fbstp
mov
sarl
lds
ret
into
bound
push
sub
in
nop
or
jno
pop
cltd
stc
sub
in
test
xor
cmp
jl
xchg
rorb
sub
in
test
jbe
scas
inc
push
pop
aad
call
add
push
lahf
pop
cld
movsb
and
cmpsb
or
lcallw
and
push
test
rcrl
adc
xchg
clc
in
std
or
lcall
mov
std
push
bound
add
and
push
cltd
inc
popa
out
mov
xor
mov
or
fmull
mov
cs
ret
in
xor
loope
fbld
xchg
dec
lock
stc
push
jge
cmp
cmp
out
jne
fs
cli
push
sbb
mov
cmp
dec
andl
addr16
adc
je
test
loop
and
in
mov
mov
rorb
jo
xchg
mov
pusha
sarb
sbb
sbb
mov
shlb
outsl
fnstenv
add
push
adc
sbb
sub
jg
aam
mov
and
jle
in
jmp
pusha
jge
adc
in
arpl
lahf
out
arpl
mov
pop
adc
shlb
xor
sub
or
mov
cmp
mov
sti
mov
xor
fidivrs
inc
out
push
pop
sbbl
jp
lahf
pop
scas
cmp
xchg
out
mov
ljmp
xchg
mov
out
cmp
sarb
xchg
dec
jecxz
jp
inc
pop
imul
ret
push
jle
fldt
dec
inc
test
dec
lret
inc
sbb
repz
mov
das
dec
dec
in
testb
mov
loope
cld
and
fdivs
decl
lods
sub
cmpsl
mov
mov
xlat
insl
je
jo
and
cmpsl
xchg
mov
imul
inc
jo
jns
xor
ljmp
add
fistpl
stc
data16
jl
adc
mov
mov
pop
call
outsb
loopne
ss
cmp
xchg
push
sub
bound
aam
mov
pop
jb
pop
mov
pop
fcomps
or
push
push
daa
dec
push
adcl
les
jecxz
mov
lret
pop
and
sbb
sbb
cmp
mov
ljmp
adc
jo
xchg
adcb
mov
and
push
out
es
mov
mov
insl
mov
testb
jno
mov
into
shlb
imul
repz
aas
sub
mov
aas
fcmovne
dec
test
mov
aad
mov
jg
int3
fdivrl
xchg
dec
ljmp
sbb
fwait
mov
sbb
dec
rolb
test
icebp
std
outsl
aam
push
aam
aam
pop
ljmp
pop
loope
and
outsl
stos
pusha
movsb
xor
iret
cs
pusha
test
push
lret
xor
je
push
rcll
xorb
jns
dec
lret
push
sbb
push
or
or
push
push
xchg
in
gs
int
mov
es
mov
mov
es
lods
inc
adc
xor
ss
and
mov
lods
xchg
or
push
sbb
outsl
lret
inc
dec
insl
out
sbb
out
int3
shrb
mov
adc
add
dec
jns
ficomps
pop
es
mov
pop
mov
or
shll
loop
out
int3
jne
jb
aam
cmp
lock
cmp
out
addr16
dec
jae
stos
push
or
enter
pop
in
js
in
xor
cmpsl
mov
sahf
inc
cwtl
xorl
test
xor
cltd
nop
sub
neg
xor
push
pop
fs
mov
xchg
popa
inc
scas
imul
fdivp
outsl
and
adc
or
mov
lds
ror
dec
xchg
adc
lea
push
and
cmp
es
out
xchg
mov
iret
mov
inc
mov
cmc
cli
aad
mov
hlt
and
adc
sbb
es
test
int3
sub
mov
xor
out
ret
jb
sbb
jecxz
xor
lods
push
xchg
imul
inc
cld
dec
in
out
mov
mov
movsl
rclb
push
sub
sub
jmp
test
jge
push
aad
in
mov
sub
push
push
aaa
and
mov
cmp
pop
mov
fsubrl
mov
mov
rorl
mov
mov
inc
inc
inc
mov
inc
test
mov
fwait
cmp
bound
lock
cltd
ret
pop
push
cmp
lock
cmc
xorl
les
mov
push
xlat
dec
xchg
ret
pusha
ds
stc
xlat
cmp
pop
mov
lock
insb
mov
scas
dec
mov
or
jp
sub
dec
mov
sbb
cmp
cmpsb
mov
in
mov
out
cmpsb
push
sbb
push
sbb
inc
popa
mov
fistpl
jecxz
cmp
jb
jno
mov
fs
push
pop
push
sub
aam
movsb
jge
mov
ret
arpl
lds
push
cmp
pop
lea
adc
arpl
inc
mov
pop
jns
lods
sub
cmp
lea
mov
loopne
sub
lds
lods
or
mov
push
rorb
xor
cmp
arpl
scas
mov
xchg
push
test
pop
and
xchg
add
mov
inc
icebp
inc
jle
sub
push
mov
and
lods
aad
jo
shlb
std
pop
scas
mov
sub
mov
dec
adc
pop
mov
sub
or
lods
inc
test
cmp
sub
sahf
stc
jmp
ja
add
test
pushf
stos
sbb
cli
xchg
push
jns
xor
lahf
frstor
push
sub
out
mov
nop
je
leave
xor
mov
outsl
inc
mov
xchg
push
insb
sub
loope
mov
cmp
je
jl
aad
test
jns
xor
cmpsb
and
arpl
and
mov
adc
mov
jmp
lock
test
adc
mov
sub
mov
in
lret
sub
subb
ds
decb
mov
sub
dec
setge
dec
inc
pop
xor
mov
pop
mov
imul
fadds
daa
stc
ja
sbb
push
inc
test
test
movsl
js
and
jo
out
repnz
adcb
or
scas
push
fisttps
nop
dec
mov
sahf
push
xor
sahf
test
cmp
sub
scas
rol
sub
cmc
movsl
ret
cwtl
out
push
jbe
daa
int
aas
data16
adc
fnstsw
test
addr16
cmp
sub
cmp
sbbl
hlt
incb
xchg
mov
iret
xchg
mov
call
insl
imul
es
or
xchg
cmp
sbb
mov
shrl
inc
aaa
lret
repnz
pusha
rcr
nop
and
sti
movsl
add
pop
mov
in
mov
test
movsl
inc
icebp
ret
mov
mov
xor
sub
add
pop
push
jg
mov
cmpb
mov
inc
lahf
repnz
mov
push
pop
cmp
push
roll
popa
push
cwtl
mov
adc
or
push
jecxz
inc
mov
or
mov
inc
ja
pop
and
lea
mov
sbb
movsb
pusha
rcrb
inc
icebp
adc
mov
cmp
mov
ficomps
stos
mov
bound
leave
cmp
jno
xor
jne
movsl
lea
mov
sub
daa
outsb
xchg
mov
inc
test
fisttpl
sbb
xor
imul
mov
add
lahf
push
pop
adc
or
pop
dec
cld
push
xor
xchg
adc
jmp
cmp
push
push
out
pushaw
mov
dec
lret
push
nop
flds
cwtl
sbb
dec
xor
pop
mov
jne
incb
mov
add
pop
push
call
nop
jl
mov
stc
das
dec
test
xchg
scas
cmp
or
enter
and
das
adc
jbe
mov
xor
out
and
or
insb
dec
dec
dec
popa
cmpsb
into
sahf
mov
int
mov
jmp
sbb
inc
and
rcr
xchg
xchg
rcll
out
std
xor
adc
xchg
jmp
into
inc
xchg
les
fstpl
mov
xchg
cmp
hlt
sbb
mov
sbb
js
mov
inc
test
aaa
clc
out
cwtl
cmp
dec
roll
cmpsl
sbb
pop
test
mov
addb
add
ror
mov
outsl
and
mov
or
xchg
pushf
mov
jmp
sahf
into
inc
pop
xor
and
add
dec
daa
faddp
adc
mov
in
stc
jecxz
adc
lods
adc
call
add
cmp
fcomps
test
or
ja
popa
push
loop
pop
sarb
lea
fcomps
mov
adc
aam
mov
mov
sti
xchg
inc
cmpsb
test
xor
pop
or
and
into
dec
aas
insb
in
mov
lret
mov
daa
pop
add
or
aam
inc
xchg
adc
xor
pop
dec
fisubrs
ja
repz
sarb
jo
sbb
cmp
lea
cltd
stos
inc
xchg
dec
push
dec
rdtsc
mov
inc
ljmp
shlb
dec
or
and
std
add
push
jg
mov
insl
xor
std
xchg
in
pop
insl
xor
add
xchg
push
jl
mov
inc
imul
insb
sbb
sub
jmp
out
lret
and
movsl
jno
xor
pop
lahf
test
xchg
int
xchg
test
je
loop
push
xchg
adc
and
xor
sahf
subb
push
je
clc
cmp
fbld
inc
out
cmp
mov
iret
jge
aam
cmp
movsb
cmp
push
dec
and
push
and
in
push
dec
lods
hlt
sub
lret
movsl
pop
int3
lcall
es
cmp
popf
xchg
mov
pop
out
bound
call
xor
out
mov
jns
imul
aam
fistl
idivl
inc
or
mov
mov
lea
sub
adc
jle
loop
pop
xor
lock
mov
pop
out
push
les
mov
out
insl
addr16
xchg
push
inc
jmp
pop
mov
cltd
xchg
popa
push
or
int3
scas
stc
cmp
sahf
int3
das
fnsetpm(287
stos
xchg
cmp
sbb
mov
and
repz
push
rsqrtps
adc
push
push
dec
fisubrl
xor
ss
test
pop
repnz
rolb
or
dec
inc
xchg
mov
std
dec
inc
mov
subb
nop
lret
ss
lret
cmp
dec
pushf
cli
out
rcrl
xor
push
lret
mov
inc
or
push
aad
or
xor
leave
in
xor
pop
jne
outsl
out
sarl
loopne
out
popf
sbb
or
mov
sti
jb
pop
jne
arpl
addr16
push
push
insb
add
int3
nop
rcll
test
mov
std
leave
cli
push
mov
adc
rcl
mov
mov
jmp
adc
jle
inc
push
setp
pop
dec
jns
int
inc
nop
popa
mov
js
aas
dec
mov
sub
cmp
lret
jbe
sub
dec
xor
shl
test
push
sub
sahf
push
fsubs
adc
pushf
cmp
mul
movsl
pop
stos
ret
jae
pop
and
jae
jns
sbb
outsb
xor
push
push
repnz
push
push
ljmp
cmp
cltd
push
movsl
cmpl
addb
enter
popf
and
outsb
fildl
cltd
cmpsl
pop
jne
inc
test
shr
adc
mov
addr16
jbe
mov
shlb
cbtw
jmp
cmpsl
dec
add
xorb
cld
out
push
mov
xchg
in
repz
je
cmpsb
lock
adcl
fidivrs
popa
lret
adc
lock
push
imul
imul
cmp
xchg
mov
lcall
scas
int
pop
lret
push
mov
ljmp
or
enter
in
in
fsubrs
out
std
fistpll
fdivr
jecxz
cmp
push
cmc
ss
push
test
mov
add
mov
adc
fdivr
dec
jnp
out
and
out
xlat
dec
adc
sbb
fcompl
pop
movsl
sub
and
inc
mov
jb
cmc
int3
mov
pop
stos
adc
outsb
jle
lds
dec
in
imul
pop
mov
mov
jnp
aaa
jae
mov
sub
or
pop
testl
and
jns
xchg
outsl
daa
pushf
sbb
mov
pop
lret
or
push
dec
in
mov
aam
loopne
insb
outsl
inc
sbb
dec
push
pop
adc
dec
xchg
cwtl
jp
add
fnsave
sbb
push
jp
pop
and
mov
movsb
js
sbbb
repnz
dec
jg
sbb
push
jbe
xlat
cld
lock
mov
sub
loop
xchg
and
scas
mov
mov
cmpsb
mov
lret
leave
or
mov
push
and
es
fnstenv
ljmp
test
xchg
rcll
mov
insb
push
cmp
cs
xchg
stos
fdivrp
icebp
mov
into
adc
cmp
adcb
ror
adc
test
jb
fcom
jnp
sub
mov
and
xchg
jecxz
into
adc
xor
jns
push
xchg
adc
inc
orl
xchg
adc
pop
mov
pop
out
mov
xor
xchg
dec
pop
call
push
out
enter
pop
pop
test
orl
and
mov
mov
mov
in
lock
jl
fistpl
inc
lock
xor
rcrl
fcoms
sbb
dec
repnz
stos
jp
xor
fwait
ret
call
or
cmp
push
sarl
push
cltd
sub
pop
lcall
mov
aas
stc
cmp
shlb
stos
daa
mov
lret
mov
mov
rolb
data16
into
dec
mov
repz
push
xchg
mov
lea
xlat
sbb
pop
loope
outsb
pop
movsb
inc
test
mov
mov
insl
ljmp
leave
testb
cwtl
lahf
cs
and
sbb
jb
add
push
stc
jp
leave
xchg
cmpsb
lods
rorl
push
movsl
cmp
xor
or
cmp
jae
mov
cmp
xor
lret
aam
popa
mov
mov
das
adc
iret
sbb
jp
gs
std
sahf
fldenv
sbb
enter
pusha
add
clc
fdivrl
stos
xchg
ss
rcl
mov
xchg
jb
lock
lea
xor
xor
cmp
adc
leave
bound
in
push
jno
ds
test
arpl
cmp
dec
notb
xor
jbe
stos
dec
jns
mov
pop
pop
cmp
pop
js
inc
xor
sarl
mov
mov
rorl
stos
into
movsb
jp
in
mov
mov
push
xchg
test
fiaddl
shlb
repnz
adc
into
lret
or
or
mov
inc
jbe
fnstcw
nop
jnp
inc
aad
xchg
ds
loope
pop
jbe
sbb
fiaddl
pop
iret
shr
adc
xchg
jg
sbb
add
mov
lods
xor
pop
xchg
push
sbb
cs
push
xorb
sarb
out
mov
inc
add
adc
mov
rol
push
outsb
out
add
repnz
call
jae
xor
ret
rorb
mov
loope
mov
xlat
pusha
aas
dec
lock
sahf
idivl
cmc
ja
add
popa
mov
lret
add
mov
pusha
mov
scas
mov
cmp
mov
in
pop
lods
or
pop
shll
pop
out
mov
rorb
lods
and
in
cmp
sub
jno
ret
iret
inc
lea
xchg
out
out
jge
loope
lods
cmp
js
jb
pop
clc
pop
inc
and
cli
and
push
shlb
ljmp
fildll
rcll
ss
enter
cmp
adc
adc
jmp
and
pop
cmp
jns
enter
sub
mov
jle
add
in
pop
jp
xor
sub
mov
and
mov
loope
adc
jae
xchg
leave
std
push
xchg
push
popf
aaa
sub
xor
repz
cmp
xor
push
adc
jne
stos
cmpsb
push
filds
scas
lods
adc
xchg
lea
fs
rcrb
sub
pop
push
push
push
fistpl
sbb
or
pop
push
orb
mov
aam
cmpsl
lret
pop
ss
adc
jmp
xchg
loop
cmp
sub
and
call
enter
lock
xbegin
nop
jns
outsb
sub
pop
mov
push
cmpsl
pop
jle
mov
and
and
adc
fldenv
insl
lea
daa
fisubrl
mov
cmp
test
or
xor
ds
cltd
scas
add
fsubrs
or
jb
stos
sub
xchg
in
addr16
aas
addr16
or
imul
xchg
sbb
bound
jns
sub
scas
das
das
adc
xor
enter
ljmp
push
std
add
out
adc
jp
test
push
subb
pusha
lcall
inc
dec
out
and
data16
das
xlat
lods
xchg
sub
mov
cmp
adc
in
push
jno
adc
ds
sub
imul
push
inc
scas
insb
and
jmp
xchg
scas
or
xor
push
or
lock
sub
xor
jmp
push
iret
repnz
jle
pop
cmpsb
out
jmp
push
cwtl
mov
jo
inc
call
or
cmp
dec
loopne
cmp
dec
lods
inc
loopne
popa
push
xchg
rorb
aam
lea
test
mov
test
mulb
mov
pop
xchg
push
jnp
ret
shlb
stos
movsl
inc
dec
dec
pop
cwtl
cmpsl
and
jle
scas
pop
adc
xor
cli
aaa
mov
cltd
mov
cmp
or
push
lahf
mov
inc
xchg
in
xchg
or
sbb
xchg
pushf
add
mov
xchg
jle
or
jl
mov
mov
hlt
lea
fs
aam
movsb
mov
pop
mov
orb
jge
add
fsubrl
jmp
push
ficoml
daa
sub
mov
aaa
mov
or
test
or
mov
mov
ror
dec
outsb
add
add
dec
xor
daa
in
cli
adc
lret
fidivl
popl
mov
test
add
scas
dec
mov
addl
mov
jmp
iret
lret
or
push
mul
inc
mov
mov
inc
sbb
jne
inc
inc
in
int3
push
or
mov
dec
and
lock
push
xchg
sbb
mov
sbb
dec
hlt
push
fnstsw
mov
xor
cli
rolb
repz
fsubp
outsb
pop
in
daa
dec
in
mov
and
ja
rcll
or
insl
lods
push
mov
nop
hlt
test
insb
icebp
add
imul
movsl
xchg
jb
enter
clc
lahf
dec
mov
nop
test
add
pop
mov
inc
lret
sub
data16
sub
sahf
pop
cmc
cld
orl
inc
subl
add
loope
push
jecxz
loop
xchg
pushf
adc
jg
in
sbb
sbb
cmp
idivb
xor
mov
sahf
jns
testb
and
test
push
cmp
mov
or
into
xchg
jmp
and
js
inc
sti
mov
cmp
out
adc
xor
xchg
iret
mov
sbb
test
add
lods
add
adc
push
je
xchg
sbb
sub
lret
mov
or
xor
stos
dec
fstpl
std
add
add
jns
xchg
adc
scas
push
call
das
xor
out
mov
sbb
mov
mov
dec
mov
mov
and
push
jno
test
mov
fstpt
or
mov
jb
push
mov
mov
dec
pop
sbb
dec
mov
sub
nop
xchg
or
add
dec
popa
fdivr
push
adcl
ficoms
adc
cmpl
scas
subb
lahf
jle
mov
sub
jne
mov
sbb
and
mov
cltd
sub
xor
out
push
fcmovnb
repnz
sub
add
fcoms
fdivr
inc
out
xor
adc
mov
xchg
mov
jno
pop
loope
inc
jns,pt
out
inc
fs
sbb
js
or
cli
dec
mov
pop
mov
out
xchg
stos
cmp
dec
dec
push
sbb
lcall
int3
jle
mov
cmpsb
push
adc
cmp
movl
lea
jmp
ret
sub
fdivrs
push
dec
les
sub
or
inc
adc
jno
lret
dec
sub
rorl
sub
pushf
jne
jl
push
fdivl
add
mov
nop
mul
pushf
stos
cltd
pop
stos
out
lea
repz
pop
sbb
test
inc
dec
cmp
inc
sbb
aam
shlb
jp
incb
pop
into
gs
xchg
dec
xchg
push
cmp
cmp
and
loop
xchg
sarb
in
xchg
pop
idivb
nop
mov
ss
lds
lock
cmp
adc
jno
sti
add
pop
pop
mov
lods
bound
fwait
cli
xchg
dec
mov
popa
mov
cmp
enter
jl
xchg
test
push
loopne
xchg
in
and
scas
lcall
out
enter
loopne
in
movsl
arpl
mov
push
and
sbb
pop
fwait
mov
dec
fs
jmp
jmp
mov
fldt
mov
lret
int
mov
in
mov
sub
or
mov
insb
lret
xor
outsb
mov
pushf
gs
jo
push
cmp
sbb
push
add
cmp
mov
jno
cmpsl
movsb
jecxz
enter
inc
jge
call
shl
dec
nop
mov
fdiv
aam
xlat
or
icebp
pusha
xor
inc
xchg
or
jb
sbb
jnp
push
xor
jge
mov
push
cltd
xchg
loope
das
faddl
ret
inc
lds
jp
js
cmp
inc
mov
hlt
mov
insb
inc
repnz
push
iret
lret
notl
mov
pop
push
mov
jmp
mov
push
add
mov
cmp
lea
xchg
pop
mov
mov
mov
js
insb
pop
loopne
jo
sub
jae
mov
int
cmp
and
push
fs
inc
shlb
dec
aaa
scas
fs
dec
jae
sbb
int3
mov
xchg
test
and
loopne
cwtl
xorl
mov
and
sarb
or
pop
dec
cltd
pusha
mov
icebp
das
out
jl
mov
pop
loopne
lods
add
ss
mov
pop
testl
mov
adc
jle
insl
cld
lret
hlt
and
lock
aaa
pop
sarb
aas
hlt
mov
add
ss
mov
loop
idivl
jmp
xor
jbe
sbb
mov
popa
cmp
cmpsb
popf
fdivrp
push
jno
cltd
cmpb
lcall
add
sub
sub
mov
dec
mov
pusha
dec
inc
mov
dec
jle
dec
inc
cld
mov
dec
xchg
test
inc
aaa
push
dec
test
xchg
ds
lret
inc
pop
cmpsl
adc
pop
cmp
push
add
out
ret
dec
mov
adc
int3
imul
mov
cltd
clc
adc
xor
es
mov
pop
fcomip
add
jnp
cli
nop
movsl
insb
movsl
and
leave
sbb
cmpsl
sbb
jbe
inc
int
jbe
mov
sub
inc
sub
sbb
pop
stc
clc
lret
adc
cmp
push
mov
cmp
int3
mov
aas
lock
mov
shlb
xor
mov
push
pushf
sbb
fwait
mov
xor
out
push
daa
xor
mov
shll
push
sub
dec
cmp
out
add
mov
jns
fprem1
call
enter
outsb
insb
test
popf
fdivl
movsb
into
popa
xor
fldt
mov
mov
sbbb
and
dec
jge
xchg
push
xlat
inc
sbb
sub
popa
sti
inc
fcom
hlt
lea
cmp
sub
adc
xor
movsl
out
sbb
loop
shl
jae
imul
pop
fbstp
std
out
roll
shl
aaa
icebp
test
dec
sub
xor
imul
cmp
and
pop
mov
int
out
cmp
jbe
into
xchg
fwait
add
sbb
lods
adc
mov
outsl
add
add
sub
sbb
push
add
ret
enter
testl
stc
xchg
dec
pop
push
fisubl
sub
mov
das
inc
movsb
jecxz
sahf
cmp
jb
fldcw
in
mov
mov
dec
push
js
in
mov
pushf
rcrb
jle
shlb
aaa
jp
push
pusha
cmpsb
xchg
call
repnz
je
pop
cltd
repnz
adcl
test
mov
jmp
sub
mov
dec
mov
mov
cmp
adc
push
ret
in
lds
stos
add
jno
add
jge
je
fisubrs
enter
leave
sti
push
pop
mov
les
scas
das
pop
xor
pop
cmc
loopne
mov
xchg
int3
iret
jge
inc
dec
mov
pop
add
pop
pushf
mov
add
movsb
mov
pop
add
pop
pop
out
inc
rcr
push
mov
cmp
mov
mov
hlt
sbbb
scas
push
xchg
int3
aad
push
push
and
xor
int3
or
dec
in
push
bound
testb
ljmp
mov
inc
lret
loope
lds
mov
or
inc
mov
mov
dec
sbb
mov
sbb
mov
inc
mov
pop
cwtl
xor
xchg
jmp
jge
insb
jno
lods
cltd
mov
mov
lea
and
fldln2
add
inc
mov
dec
xlat
pop
stos
insl
jecxz
push
sub
lock
insb
mov
dec
insl
mov
pushl
leave
nop
scas
movsb
add
lcall
xor
aaa
sbb
fwait
push
or
cli
or
xchg
je
jecxz
in
ja
mov
dec
and
xor
out
jle
jb
fsubrl
and
xchg
addr16
lock
sub
rorl
pop
jmp
push
mov
movsb
test
lcall
cmp
mov
shr
push
sbb
loopne
test
adc
xchg
push
jae
enter
leave
or
mov
sbb
or
roll
enter
jno
dec
cltd
lahf
xchg
jnp
push
imul
cmp
xor
push
rcl
mov
out
out
inc
push
xchg
insb
ss
inc
cmp
xorb
lret
mov
fcomp
call
lods
in
aam
push
in
cmp
mov
inc
cmp
outsb
ret
xchg
test
inc
pop
orb
dec
xor
push
fnstsw
mov
ret
fs
push
adc
mov
mov
sub
inc
lea
push
pop
or
call
xchg
shlb
int3
jl
lock
sub
pusha
mov
adc
sbb
dec
xchg
or
rclb
mov
out
cmp
push
dec
outsb
add
mov
sbbl
cmpsl
push
dec
pop
xchg
stos
pop
psadbw
push
dec
adc
xchg
fistpll
xor
pop
icebp
mov
jl
lret
jno
push
dec
mov
pop
sahf
inc
dec
mov
lret
cmp
push
inc
js
mov
sub
push
mov
lret
mov
insb
xor
negl
or
gs
aaa
lods
push
cmp
push
add
add
push
xlat
mov
mov
or
inc
jmp
cmc
fstpt
xchg
outsb
mov
cmp
sti
or
mov
in
cltd
add
lahf
push
cmp
ljmp
cmp
mov
in
aaa
and
pop
or
ret
inc
test
repz
xor
add
dec
cmp
xor
mov
or
adc
sub
aad
arpl
mull
pop
cmp
mov
bound
fcmove
stc
or
mov
ja
cmp
mov
rolb
lcall
sub
or
inc
fdivp
and
add
mov
pushf
fstps
cmp
or
call
sti
nop
data16
rcll
repz
movb
in
inc
fs
jge
cmp
sub
js
push
repz
test
pop
sbbl
int
in
aam
imul
sub
fdivrl
jg
je
mov
inc
mov
fsubp
mov
mov
outsl
in
mov
out
rcll
addr16
in
mov
std
xchg
push
inc
xchg
gs
call
and
cs
clc
clc
shlb
mov
inc
adc
lock
add
mov
icebp
insl
push
pop
fdivrl
call
pop
push
cwtl
pop
out
push
scas
sbb
xchg
sub
rcrb
lods
mov
adc
adc
xchg
cmp
lahf
inc
test
je
rclb
ljmp
imul
cmp
rcrb
and
adc
mov
sub
insl
cmpsb
and
cmp
iret
or
pop
dec
fistpll
in
or
mov
repz
sub
xor
call
xor
in
rolb
adc
lds
outsb
pusha
add
mov
jecxz
sub
and
sarb
nop
scas
imulb
int3
je
jl
sbb
xor
das
mov
sarb
mov
mov
nop
sub
in
xchg
push
sbb
int3
lods
adcb
cmpsb
cmpl
adcl
call
repz
sbb
aam
jecxz
add
jp
sub
jl
push
and
movsb
dec
xor
addr16
mov
push
adc
shl
in
imul
xchg
and
mov
in
jg
push
int
fdivrl
push
cmp
mov
daa
jg
xchg
and
adc
mov
aaa
jbe
test
xor
les
pop
loop
pop
xor
mov
addl
mov
pusha
mov
or
adc
subb
sub
pop
test
pop
jecxz
mov
jl
rorb
push
and
jl
cmp
mov
out
sbb
outsb
pop
inc
mov
out
cltd
add
jno
jle
xchg
in
outsl
int
xor
cmp
popf
pop
mov
shll
sub
sbbl
in
nop
pusha
divl
sbb
inc
fxch
mov
sar
cli
and
and
sti
int3
sub
repz
pop
and
in
xchg
dec
popa
jecxz
xor
cmpsb
outsl
dec
test
pop
movsb
mov
adc
cmpsl
lret
dec
cmp
ret
fsub
pushf
fisubrs
mov
jmp
xor
dec
div
rcr
fnstenv
negb
imul
mov
cli
ljmp
add
mov
add
mul
aas
lret
jae
in
push
in
int3
jno
fcompl
movsl
xor
shl
xchg
mov
or
mov
pop
dec
push
popf
mov
ret
mov
fstps
push
adc
into
pop
jne
mov
pusha
adc
cmp
jnp
out
in
pop
adc
mov
aad
xchg
xchg
test
mov
sbb
adc
and
mov
aam
clc
push
cmp
js
ret
adc
add
cltd
jae
sub
dec
dec
and
cmp
daa
jecxz
dec
fisttpl
xor
dec
jp
dec
out
mov
xchg
xchg
jle
cmp
movsb
xchg
icebp
xor
cli
xchg
int3
add
xlat
sbb
bound
dec
inc
dec
add
bound
call
push
sub
inc
rolb
pop
cld
in
jb
dec
popa
xchg
mov
xor
shll
and
pushf
and
jecxz
hlt
jbe
mov
xchg
test
repz
pop
sti
scas
xor
add
jmp
popa
xchg
xor
ja
and
loopne
lods
lea
sbb
xchg
sti
dec
jnp
popf
sbb
in
cltd
sar
pushf
sbb
cmp
pop
push
jno
cmp
call
push
cmpsb
in
pop
in
xlat
dec
push
out
into
cmp
push
sub
sarl
mov
push
mov
incl
jo
ret
jnp
mov
jno
cmp
or
adc
daa
es
scas
faddl
arpl
jmp
or
and
xchg
mull
addl
out
jmp
cld
mull
bound
push
shlb
xlat
in
pop
lcall
pop
insb
ja
cmc
cmp
lock
out
popf
adc
pop
push
add
jbe
je
push
scas
arpl
popa
xchg
mov
cmp
add
icebp
mov
mov
xchg
jge
imul
push
xchg
cmc
jp
cmp
xchg
push
aas
xor
or
movsl
outsb
fadds
aas
aaa
lahf
nop
and
cmpsl
dec
aaa
sbb
jae
add
pop
jp
push
rcrl
and
loop
ficomps
push
out
sbb
jns
popf
xlat
mov
mov
cwtl
push
pop
daa
inc
ficoml
cmp
or
sub
femms
xor
repz
scas
jge
fistps
sbb
add
sahf
mov
jo
in
ficoml
aad
xor
dec
mov
nop
cld
sbb
jbe
push
add
xchg
jg
jmp
pmuludq
cmp
test
cli
lock
loop
mov
sbb
xor
push
dec
pop
or
out
dec
sub
lcall
jge
hlt
xor
jl
adc
pusha
cltd
adc
mov
in
lahf
movsl
xlat
jo
enter
loop
xadd
sub
ret
mov
in
inc
sub
add
mov
push
xchg
leave
push
jns
dec
sub
je
cmp
add
dec
stos
push
je
inc
ss
jnp
out
mov
cmpsb
mov
jae
pop
pop
inc
add
or
push
aas
aaa
test
popf
out
fs
ret
pop
dec
shlb
dec
int3
lret
inc
fiaddl
xor
mov
movsl
push
pop
push
push
jmp
mov
mov
in
popa
dec
jmp
mov
fmul
shrb
push
mov
out
pop
lods
add
jmp
lods
into
jbe
test
sbb
jnp
dec
ror
je
in
add
sbb
xor
jns
mov
test
pop
xchg
jae
outsl
pop
dec
xchg
xor
cli
ds
mov
lds
out
xor
mov
and
xor
loope
mov
xlat
loopne
sbb
push
orb
in
aam
or
pop
add
pop
faddl
adc
popf
mov
cwtl
sbb
addl
imul
aam
std
adc
mov
bound
jge
xor
inc
dec
add
ljmp
dec
add
cmc
and
xor
mov
bound
cmp
pop
and
sbb
andb
mov
shl
shlb
pop
mov
mov
jle
mov
xchg
pop
fucom
sbb
or
xlat
cld
aam
xchg
or
insl
mov
test
pop
mov
add
js
shll
xor
mov
std
sbb
xor
mov
pop
pop
mov
mov
mov
dec
lds
fists
push
mov
cwtl
lahf
inc
push
inc
fsubr
push
and
fildl
xchg
add
cmc
cmp
pop
rorl
dec
loope
add
in
adc
inc
mov
movsl
lret
mov
gs
cwtl
pop
int3
pop
hlt
cmp
callw
xor
cmp
fwait
cli
test
out
dec
mov
dec
insb
shrb
sarl
ds
je
mov
pop
sbb
in
adc
xor
pop
xor
pop
jns
xchg
rolb
mov
aaa
iret
out
les
fldt
loope
sbbl
imul
and
cmp
sbb
xor
loop
pop
pop
mov
test
mov
leave
mov
lea
adc
xor
pop
into
insl
push
xor
add
pop
lahf
jge
paddsw
imul
mov
js
adc
sub
push
es
add
sub
jno
xchg
stc
movsl
mov
xlat
inc
or
scas
pop
adc
mov
adc
addb
xlat
jmp
dec
sub
sarb
ss
jns
cli
ljmp
mov
repz
lcall
cmp
push
mov
loopne
repz
fldl
in
outsl
cmp
or
inc
gs
pushf
cmp
or
push
xchg
sbb
lea
pop
xchg
dec
and
jns
movsb
lds
stc
pop
mov
test
pusha
aad
or
xchg
imul
sbb
stos
insl
mov
orb
cmp
andl
mov
jmp
mov
je
arpl
je
data16
inc
jge
ret
pop
outsl
mov
daa
sbb
fcoms
xor
idivl
imul
imul
les
xor
testb
mov
push
dec
pop
jle
add
ret
pop
xor
add
push
out
inc
add
pop
xchg
or
push
xor
xor
shlb
pop
inc
sub
orl
test
test
movsb
and
ror
fildll
test
push
cmpsb
mov
xchg
jl
dec
mov
test
xor
xor
mov
ds
pop
sbb
or
pop
test
push
imul
or
mov
ds
shll
add
adc
xchg
and
ret
js
fidivs
mov
pop
jge
subl
mov
inc
cltd
testl
out
xchg
lret
sub
bound
cld
lods
sbb
or
pop
lock
insl
ja
lea
or
or
pushf
imul
xchg
mov
sbb
sub
sub
mov
fbstp
adc
add
mov
pop
je
lcall
in
repnz
sarl
shlb
out
jne
fisttpll
push
lods
test
dec
push
nop
leave
incb
pop
jnp
lahf
jp
sub
push
push
sub
inc
mov
insb
dec
jmp
inc
mov
add
dec
sti
int
cmp
movsb
sbb
mov
fabs
mov
dec
xchg
or
negl
pusha
es
ja
adc
mov
sahf
and
add
stc
stc
and
aam
xor
das
mov
rcrl
stos
pushf
xor
arpl
push
inc
cmp
pushl
pop
iret
xlat
mov
repz
repnz
addl
je
cs
repnz
jmp
xchg
sbb
jno
outsl
xor
je
lcall
sbb
ret
inc
jge
xor
inc
fld
jns
pop
in
jns
movsl
bound
jae
paddb
jl
cmpb
loop
out
in
xor
loop
insl
bound
out
and
lods
jl
xor
icebp
mov
lea
or
mov
xchg
and
aam
inc
rclb
xor
repnz
adcl
push
push
pop
js
pop
cltd
mov
shll
jle
xchg
int3
les
jno
mov
popf
sbb
xor
jmp
into
pop
push
cmp
aam
pop
insb
mov
push
cmp
lods
dec
and
pop
pop
push
fmuls
push
pop
adc
addb
pushf
pop
sub
xchg
mov
and
call
adc
es
cltd
dec
sub
jge
cltd
pop
mov
cmc
mov
dec
movsl
mov
mov
add
es
mov
out
subb
mov
aaa
jno
and
mov
test
jb
inc
cmp
std
xor
pop
es
jle
and
mov
outsb
std
out
je
jg
fwait
push
scas
mov
or
or
call
mov
jae
clc
xchg
xor
inc
icebp
and
or
xor
sub
movsb
sbb
sarl
std
pop
outsb
mov
push
mov
lock
push
adc
adc
aam
cmpsl
icebp
jp
pop
lret
test
out
pop
sub
shll
mov
dec
fmuls
icebp
insl
rolb
sarb
fstpl
in
xchg
repnz
and
jns
or
pop
sbb
mov
in
fiadds
lret
cmpsl
std
adc
jo
lds
xlat
add
sub
xlat
or
lret
cmpsl
rclb
pop
call
ja
sub
adc
scas
cmp
dec
jp
xchg
push
or
pop
scas
cmp
imul
push
fscale
push
pusha
nop
dec
enter
aaa
out
enter
pop
out
movsb
pop
pop
pusha
movsl
sub
orl
mov
push
mov
shrb
cmp
outsb
sbb
test
popfw
sbb
jecxz
int3
pop
sub
stos
sub
push
jno
mov
aam
jl
andl
inc
adc
movsl
clc
mov
sub
popl
lret
sub
lret
mov
adc
sub
movsl
push
cwtl
ficompl
add
mov
xor
pop
adcb
jne
cli
pop
shrd
xor
das
mov
scas
inc
and
lods
rcrb
notb
cmp
push
cltd
pop
mov
js
cltd
jecxz
je
outsb
not
in
fmuls
in
adc
movsl
loopne
cld
iret
sub
sub
cmp
fistl
cs
pop
pop
sbb
cmp
push
add
sbb
jbe
sar
adc
ss
mov
inc
cmp
or
push
jbe
nop
mov
push
mov
sarb
out
insb
adc
sbb
mov
fdivrl
push
nop
push
or
sub
lea
sub
aas
jge
sbb
or
cmp
jb
das
xchg
scas
pop
bound
jl
les
mov
dec
mov
xchg
mov
mov
jno
ret
push
ds
popf
out
dec
fcmovbe
jg
push
or
xor
pop
out
mov
cmp
xchg
cmp
push
pop
dec
aad
orl
dec
inc
inc
bound
call
mov
push
test
sub
jno
pop
pop
mov
mov
mov
add
fbstp
mov
lods
fsubrs
add
push
in
or
sub
push
repnz
xchg
mov
cmpl
push
xorb
test
fwait
or
idiv
clc
xor
jmp
leave
mov
into
jle
sbb
xchg
into
mov
arpl
ror
mov
fnstenv
cmp
xor
xchg
mov
mov
mov
pop
inc
jbe
inc
or
pop
xorb
xor
imul
cmpsb
mov
out
and
das
add
inc
ljmp
xor
cmp
out
in
push
aas
xchg
mov
das
lea
push
gs
mov
jecxz
mov
cmp
sbb
and
test
insl
sbb
ud1
mov
mov
out
ljmp
jg
adc
mov
dec
lret
aas
push
mov
mov
test
stos
add
in
and
mov
dec
adc
xchg
ret
cmp
pop
scas
fwait
popa
lods
bound
aam
cmp
jg
and
inc
xchg
jae
into
mov
and
ja,pn
es
ret
data16
dec
insb
ja
repz
mov
mov
ss
jno
shl
aaa
cltd
nop
xor
mov
mov
dec
dec
push
nop
add
scas
mov
cmc
pushf
pop
mov
stc
aas
aad
xchg
pop
lahf
mov
ss
sti
sub
xchg
mov
lods
popa
xchg
sbb
cmp
aad
jmp
push
push
in
cmp
pop
mov
repz
fisubl
loop
mov
data16
movsb
pushf
jmp
sbb
xchg
sti
inc
cmp
mov
call
loope
sub
cmc
addl
insb
or
enter
stos
insl
sub
push
call
push
sub
inc
test
out
mov
je
stc
imul
or
fwait
imul
std
sbb
dec
dec
insl
fwait
mov
pop
pcmpeqb
call
mov
or
addb
xchg
jge
inc
repnz
or
mov
xchg
shlb
nop/reserved
ficoms
inc
jne
jmp
inc
xchg
mov
mov
lret
xchg
sbb
inc
jo
cld
faddp
out
out
jne
jle
inc
mov
mov
push
xchg
add
mov
push
xor
dec
jmp
sahf
mov
push
gs
xor
pop
mov
xlat
in
in
fs
inc
or
add
bound
and
repz
dec
aas
fists
sti
inc
xorl
mov
xlat
adc
mov
popa
cmp
push
sub
in
and
xchg
push
jno
lret
scas
lret
test
addb
and
mov
xchg
scas
jns
jmp
xor
shl
shrl
cmp
xlat
shll
movsb
jle
adc
ljmp
cmp
out
mov
out
dec
sub
ss
mov
iret
jecxz
js
add
gs
mov
adc
lcall
add
jns
scas
pop
inc
int3
xchg
js
dec
repz
adc
and
mov
pop
xchg
ja
or
xchg
and
xchg
adc
xor
fstl
ss
xchg
mov
mov
inc
ret
add
adc
enter
arpl
sub
arpl
aam
data16
insl
in
test
mov
nop
inc
loop
out
push
lods
sub
pop
dec
lret
jge
fsub
arpl
pop
sbb
in
add
ss
loop
xlat
cmp
ffreep
mov
push
lock
bound
inc
movsl
orl
pop
inc
push
adc
push
jnp
push
pop
xor
cmp
ljmp
repz
mov
or
sbb
sub
insb
je
test
xor
sub
push
adc
push
mov
pop
loop
leave
das
or
inc
movsb
in
rcrb
or
sub
push
and
fistl
scas
shlb
xchg
cmpsb
inc
or
mov
dec
out
push
push
in
pop
imul
sti
mov
mov
xchg
stos
ficoml
xlat
ja
mov
addl
imul
pop
inc
inc
pop
insl
scas
jb
fucomp
movsl
in
lret
adc
xor
stos
dec
inc
insl
imul
movsl
pop
orl
fstpl
scas
add
adc
adc
dec
xchg
ret
int
dec
and
inc
add
jle
cmp
mov
pop
xchg
sarl
push
movsl
pusha
xor
push
rclb
lds
dec
add
cmp
into
adc
jmp
movsb
mov
jns
inc
inc
clc
jl
ret
cmp
or
test
xchg
loop
mov
rcrl
sahf
div
cli
or
lret
add
push
out
es
push
xchg
stos
popa
lock
lret
mov
push
imul
mov
ss
aad
out
pushw
stc
data16
push
lcall
cmp
insb
je
or
inc
add
pop
jno
in
je
dec
pop
idivb
push
cli
mov
mov
imul
test
aad
mov
mov
mov
jno
lods
mov
push
stc
sti
add
jmp
sbb
mov
ds
add
cmp
add
jecxz
int
jmp
movsl
mov
lahf
xchg
pop
inc
fistpl
jo
mov
mov
xchg
sahf
cld
in
fwait
shrb
mov
adc
sub
mul
adc
and
pop
inc
xchg
pop
jmp
push
repz
cmp
pop
lahf
das
popa
icebp
pop
push
jge
push
cld
lds
ficoms
cwtl
cmp
jmp
ss
shlb
mov
cmp
rclb
jns
les
out
enter
or
aam
mov
test
push
push
adc
pushfw
fstpt
test
or
iret
mov
jmp
and
clc
jae
mov
inc
mov
pop
cmp
or
dec
insl
loopne
into
ss
add
dec
add
lcall
test
cld
cmp
cli
cmp
decb
xchg
bound
add
pop
xchg
pop
push
push
push
les
lock
mov
mov
mov
pop
adc
movsl
jbe
mov
cmp
push
mov
jl
insb
aam
and
in
enter
jmp
adc
fcmovne
je
comiss
sbb
mov
add
adc
dec
jecxz
dec
jnp
inc
scas
aas
jbe
and
mov
push
lahf
pop
cltd
mov
pushf
aam
cwtl
sbb
and
fiadds
cltd
insb
push
imul
dec
outsb
je
out
cmpsl
test
inc
sbb
sbb
call
enter
push
js
cmp
pop
sbb
mov
jge
sub
imul
sub
or
cmp
out
rclb
lds
aaa
out
pop
out
loopne
mov
and
fiaddl
push
in
or
adc
add
push
or
imul
cmp
movsb
inc
cmp
fnstcw
xchg
lahf
mov
pop
pusha
mov
dec
in
sbb
insl
fnstsw
clc
mov
movsl
and
out
and
in
and
mov
lcall
mov
pop
fxch
and
xlat
std
jns
inc
ret
sar
jg
xchg
push
hlt
add
xchg
push
scas
call
mov
mov
pop
imul
data16
mov
jl
adc
icebp
push
lcall
xchg
lahf
adc
popf
call
add
add
sbb
xchg
cmp
arpl
daa
adc
sub
push
push
lds
sub
nop
jnp
xchg
add
adc
shl
ret
pop
jmp
xor
jp
out
outsb
push
xchg
pop
sbb
lds
mov
mov
filds
std
movsl
and
cwtl
push
rcll
fwait
hlt
imul
ficoml
aas
sbb
dec
jecxz
inc
scas
lret
jns
inc
sti
insb
loopne
mov
mov
sbb
mov
sbb
push
out
or
sbb
stos
outsb
and
mov
push
xlat
pop
adc
test
jbe
push
js
mov
xchg
xchg
cmp
cmp
pop
sub
xchg
mov
and
jo
mov
iret
mov
je
inc
add
inc
shr
mov
out
xor
shll
shrb
fistpll
cmp
movsb
cmpsb
jmp
subb
dec
jbe
into
repnz
dec
scas
cmp
lahf
inc
push
aam
stos
std
aad
adc
pusha
stc
xchg
sub
pop
mov
aam
jmp
and
and
sbb
rol
repz
sbb
ja
out
int3
insb
stc
sahf
cmp
ret
repz
push
mov
in
les
pop
add
repnz
push
mov
sbb
inc
cli
shl
or
xchg
es
jnp
sbb
movsl
cmp
clc
fs
mov
das
or
imul
and
push
clc
inc
bound
or
push
inc
xor
test
popa
or
lods
mov
sti
fcomps
cwtl
mov
sbb
mov
xor
cmpb
mov
into
sub
lods
in
cs
xor
or
outsl
xchg
inc
insb
xor
test
mov
aas
jno
add
add
inc
jns
in
lahf
ss
cmpsb
pushf
pushf
sub
fidivrs
xlat
movsb
orl
pop
stc
push
js
inc
cmp
xchg
fisttpll
lods
fdivrs
cmp
iret
sbb
inc
pop
jg
out
jno
xchg
ljmp
adcl
xchg
and
mov
mov
add
mov
insl
or
repz
adc
pop
cwtl
push
push
ja
inc
inc
adc
cmpsb
xchg
arpl
imul
je
stc
roll
xor
gs
sub
push
dec
iret
cld
inc
jae
arpl
sbb
dec
inc
cmp
pop
xor
adc
ds
syscall
dec
daa
push
sub
sbb
mov
insl
jne
xor
stos
std
push
daa
xor
push
setnp
xor
cmpsb
test
call
outsl
mov
mov
lret
jbe
xor
add
push
es
in
out
mov
add
add
sub
mov
jp
jg
enter
sub
mov
cmpsl
pop
les
push
jbe
sub
mov
int
movsb
stc
or
stos
xchg
fdivr
xchg
loop
loop
and
popf
xlat
mov
mov
imull
sub
cmp
sub
movsl
push
sub
mov
lea
adc
test
xchg
pop
out
in
add
dec
dec
imul
jns
es
inc
add
sar
test
popa
jb
sbb
adc
ds
cld
fldcw
push
push
push
js
sbb
xchg
outsb
enter
jp
fisttpl
mov
xor
xor
mov
pop
push
enter
add
cmpsl
cmp
pop
push
pop
imull
inc
cltd
cmp
daa
cmpsb
rcrl
or
cmp
mov
pop
lock
pop
pop
push
nop
mov
mov
fsts
adc
outsl
jl
pop
imul
cmpsl
push
cwtl
sbb
jns
ret
jbe
lods
push
test
out
aaa
push
cmpsb
jmp
lahf
out
xor
outsb
fadds
movsl
sub
push
add
ret
ret
inc
add
fisubrl
test
aad
push
mov
sahf
sbb
sahf
add
mov
mov
inc
sbb
mov
mov
andl
pop
push
jno
jecxz
cltd
rorb
pop
dec
mov
mov
mov
adc
xor
cmc
js
cmpsl
sub
je
pop
daa
mov
mov
dec
icebp
jbe
inc
into
dec
mov
sbb
js
divl
aad
mov
shr
cmp
xchg
in
xlat
enter
rcrb
jle
sbb
clc
mov
das
xchg
mov
dec
or
inc
imul
sbb
das
adc
mov
aam
push
test
mov
lds
out
dec
shr
mov
out
aam
sub
or
push
sarb
daa
xor
andl
or
sbb
push
int3
aam
pop
pop
in
bound
repz
mov
stc
fwait
out
sbb
popf
jae
imul
mov
jae
out
iret
andl
inc
out
mov
leave
push
adc
in
sub
xor
jns
jge
fldcw
dec
adc
jmp
inc
pushf
scas
stos
cwtl
cld
movsb
scas
stc
jns
sbb
mov
dec
insb
pusha
shl
rolb
repnz
sub
and
fisubrl
mov
pop
movl
test
cmp
std
pop
lea
fidivrs
mov
nop
push
pop
aam
cmp
sub
adc
int3
stos
push
add
les
icebp
mov
testb
sbb
loope
ss
mov
xor
fidivs
xchg
xchg
rcrb
cli
push
sub
cmp
addr16
mov
pushf
or
dec
cmp
icebp
dec
rcll
adc
lods
sub
orl
rclb
or
cwtl
test
mov
dec
jno
mov
sbb
jno
adc
sbb
mov
outsl
pop
xor
in
inc
push
pop
sbb
movsl
mov
pushf
add
stc
push
or
jae
daa
sbb
dec
pop
mov
pushl
or
adc
mov
jg
repz
roll
cmc
ret
jno
cmp
jns
sti
imul
adc
sub
outsl
das
xchg
int3
pop
testl
push
dec
icebp
enter
adc
lahf
mov
inc
rcll
xchg
push
andl
scas
test
cld
pop
ret
and
pop
hlt
inc
sub
outsl
outsl
xchg
ret
mov
jge
xchg
or
pop
mov
sbb
testb
or
jnp
test
jne
fisubl
adc
stos
add
and
loop
repnz
enter
aam
fldcw
fcompl
xchg
daa
mov
repnz
mov
push
ljmp
aam
sahf
push
movsl
xchg
stos
fidivrl
mov
fwait
cmp
mov
dec
stos
fwait
ret
icebp
xchg
adc
mov
out
stc
or
jecxz
repz
ljmp
outsl
pop
pop
push
lds
test
push
stos
inc
in
push
xor
sbb
jecxz
pushf
shlb
das
adc
ret
jg
mov
sbb
lods
lcall
add
mov
notb
cmc
lods
mov
test
repnz
fwait
mov
add
mov
mov
sub
pop
inc
jle
push
loop
mov
adc
mov
stc
fsubl
cltd
cltd
xchg
mov
pop
outsl
xor
cs
jo
mov
sub
pop
sbb
jns
filds
xchg
sbb
jecxz
fiaddl
pop
test
xor
insl
mov
push
sti
cmp
int
icebp
ljmp
push
loopne
test
push
sbb
inc
sbb
xor
xchg
push
push
insl
mov
or
mov
out
movd
push
in
push
clc
mov
cli
loop
fldl
fadd
pusha
mov
xor
pop
loope
jnp
push
or
dec
inc
fsubrp
sahf
mov
mov
push
and
inc
jge
in
sub
cmc
push
loopne
bound
inc
sub
sub
add
test
pop
add
fwait
enter
stos
shlb
xchg
enter
add
xor
mov
mov
add
push
adc
jp
jae
mov
lret
xchg
push
enter
movups
mov
push
mov
mov
ficomps
jb
filds
rorb
loope
and
dec
cmpsl
jb
and
or
sahf
add
mov
push
sub
stos
push
imul
rcrl
pop
jle
inc
pop
fisttpl
pop
and
repz
enter
adc
mov
xor
sbb
sarl
mov
icebp
sbb
lcall
adc
movsb
push
sbb
fstl
jmp
adc
aaa
sahf
jmp
push
mov
incb
fcomps
push
xor
mov
sub
push
cmp
mov
xor
sarl
in
pop
mov
test
jle
inc
popf
sar
shrb
mov
loope
aaa
cli
xchg
push
lret
std
cld
out
xchg
ljmp
mov
leave
addr16
nop
repz
jge
jmp
dec
push
push
inc
out
or
cmp
dec
lcall
push
jno
or
out
pop
push
les
jne
hlt
orps
inc
movsb
or
mov
mov
sbb
xchg
popf
popa
fisubrs
orb
pop
ds
xlat
or
daa
es
add
aaa
out
out
mov
push
in
aam
push
jne
inc
pop
ret
lds
cwtl
xor
test
out
int
jnp
dec
imul
fwait
jmp
cwtl
ljmp
or
fs
inc
sbb
cltd
lea
mov
jmp
lods
adcb
push
dec
sub
aad
lock
aaa
imul
sub
imul
push
jl
ljmp
sub
add
and
pop
inc
push
psubusw
inc
lods
xchg
lret
xchg
dec
inc
and
les
in
aad
pusha
aad
std
sub
fadds
add
testl
aas
in
mov
push
lret
jne
popf
mov
jmp
das
daa
xor
lea
xchg
push
mov
adc
ret
xchg
push
fnsave
fsubr
mov
mov
xchg
mov
jb
data16
cld
ljmp
pop
in
add
int
sbb
fdivrs
inc
or
cmp
popa
adc
push
call
xchg
popa
or
loopne
dec
in
adc
loop
xchg
in
push
sub
add
setle
daa
lret
mov
dec
mov
je
cmpsb
cs
mov
sub
lods
pop
xchg
in
lahf
lret
scas
imul
clc
and
hlt
jecxz
sbb
mov
or
out
push
cmc
dec
cmpsb
imul
pop
add
mov
ljmp
pop
adc
shrl
mov
push
es
mov
roll
je
lock
in
push
pop
repz
cli
cmp
loop
mov
stos
or
pop
jle
and
push
jb
sub
cmp
lret
das
rclb
enter
test
je
or
faddp
inc
jno
pop
add
xchg
cwtl
mov
std
mov
enter
mov
or
sub
mov
add
outsl
push
sbb
int
cmp
jns
mov
mov
pop
sahf
jle
sti
pop
shr
aas
subl
out
sbb
daa
std
in
mov
ja
loope
sub
dec
cmpsb
int
lret
loop
push
aad
scas
mov
xchg
cmp
call
dec
pop
mov
stos
out
or
mov
mov
sarl
sub
mov
and
fimull
rorl
lea
jl
inc
dec
sub
mov
ja
mov
mov
pop
mov
call
bound
mov
repz
dec
pop
sub
lret
repnz
loopne
mov
mov
data16
cld
call
xor
mov
push
add
inc
add
add
addr16
clc
in
mov
and
jmp
aaa
or
push
clc
cmc
jo
or
nopl
inc
ficompl
cltd
idivl
imul
idivl
add
adc
arpl
mov
adc
popa
sbbb
scas
xchg
mov
jl
orb
cmp
insb
mov
xor
sbb
pushf
pop
mov
inc
imul
jo
and
dec
mov
loopne
mov
jb
pop
les
fiaddl
add
sbb
test
push
adc
repz
dec
xchg
pop
push
inc
xchg
and
notl
cmp
sub
jle
das
xchg
push
jns
cmp
fwait
add
sub
into
mov
lret
int
pop
outsl
sub
insb
orb
stos
enter
repz
pop
push
xor
push
in
adc
xorb
inc
cmp
inc
mov
repnz
sbbb
jns
icebp
pop
mov
jb
mov
sub
jbe
xchg
add
rcrb
enter
mov
and
push
xor
cmp
jns
addr16
repz
ljmp
shrl
data16
cmc
ljmp
shll
mov
xchg
subl
xor
lods
xor
mov
xor
or
jb
paddusb
jbe
test
mov
insl
mov
shl
add
cld
add
in
push
fs
push
das
or
fwait
add
lcall
jge
mov
cmpsb
dec
pop
fisubl
aad
dec
test
adc
sub
incb
sbb
push
repz
mov
push
dec
jns
jmp
push
mov
jmp
xlat
outsb
mov
mov
adcb
daa
push
jle
insl
xchg
imul
loopne
mov
sbb
lsl
shrb
xchg
add
mov
in
or
in
dec
push
xor
rorl
push
lcall
in
jecxz
mov
xlat
mov
loop
adc
sub
xchg
out
cs
bound
test
enter
push
dec
sub
in
fdivrp
shll
sub
inc
pop
jmp
jmp
pop
movsb
mov
or
addr16
xchg
xchg
sar
sbb
mov
movsl
mov
out
mov
ret
call
sbb
dec
sub
in
mov
mov
repz
roll
movsb
sbb
xor
mov
jne
xchg
hlt
lods
sbb
hlt
lods
xchg
or
inc
and
les
imul
pop
adc
das
fstpt
xchg
cmp
push
leave
lds
dec
gs
fcmovnu
movsl
cs
addr16
mov
and
inc
hlt
mov
daa
fadd
dec
orb
mov
mov
hlt
mov
xorl
dec
mul
and
jnp
cmp
dec
mov
or
xorb
inc
jg
jno
imul
movsb
clc
pushf
lret
mov
or
xchg
dec
jae
jbe
jno
idivl
in
sbb
cmp
adc
add
outsl
sbb
cld
sbb
pop
fnstenv
rsqrtps
sub
fisubl
cmp
js
pop
js
loope
int3
cmp
xor
js
pushf
mov
or
mov
dec
jg
adc
arpl
repz
cmpsb
xor
mov
or
push
rcrl
inc
mov
pop
inc
les
xor
jbe
add
pusha
stos
and
sub
inc
fcmovnb
mov
sub
mov
orl
cmp
aas
test
pop
cmp
cmp
lods
sub
and
and
inc
xchg
dec
sbb
ja
in
jne
push
or
int3
xchg
outsb
out
and
sbb
push
and
mov
addr16
add
out
mov
insb
popa
loop
push
xchg
mov
add
pop
test
xchg
cmpsb
push
dec
aam
out
inc
mov
push
jae
inc
sub
shrl
or
test
mov
sub
fsts
cmp
xchg
jae
mov
mov
jge
adc
mov
mov
cmpsb
rclb
jmp
loopne
rorl
arpl
push
jmp
sub
leave
inc
movsb
pop
xchg
test
aas
call
or
mov
popf
inc
jno
leave
jae
adc
pop
inc
dec
jle
in
mul
call
mov
push
inc
mov
inc
lods
sbb
arpl
adc
mov
mov
push
fcom
pop
icebp
stos
lahf
mov
outsl
stc
push
stos
and
loope
shr
jp
pusha
les
dec
push
lods
out
lods
xor
xlat
lret
jmp
subl
sbb
ret
pop
data16
inc
cmp
movb
inc
push
push
ljmp
pop
sub
cmpsb
or
lcall
loop
sahf
and
jmp
pop
stos
lock
sbb
and
das
into
lahf
adc
outsl
test
daa
nop
scas
xchg
mov
mov
lods
xor
loop
jno
imul
cs
cmp
jno
testl
mov
test
lret
cmpl
add
das
or
fldpi
jle
mov
push
xchg
push
cmc
je,pt
push
inc
xchg
pop
int
mov
jg
pop
int
ret
aas
xor
shlb
push
into
popf
jae
std
push
mov
adc
bound
ds
das
in
sbb
mov
mov
sbb
or
dec
sub
mov
push
mov
test
js
gs
test
in
ret
fwait
cmp
cmpsl
cli
inc
gs
push
fwait
sbb
xchg
cmc
cmp
xor
out
mov
mov
movsb
stc
jbe
mov
pop
pop
cmp
outsl
sub
inc
jnp
sbb
arpl
out
cmp
cwtl
in
inc
mov
pusha
popf
pusha
ds
fcoml
sbb
test
test
adc
mov
or
icebp
lds
cmpsl
jo
jno
mov
cmp
dec
adc
sub
jl
test
imul
add
inc
inc
adc
jnp
pop
xor
jae
xchg
cwtl
inc
mov
cltd
pop
scas
dec
jmp
push
xchg
test
pop
test
push
inc
add
negb
out
jo
adc
or
cmc
daa
add
cli
adc
psubq
ficompl
mov
push
xchg
xor
mov
xchg
scas
imul
std
xor
sbb
test
cwtl
subl
aad
insb
fnstcw
and
xor
inc
data16
pop
xor
fbstp
inc
mov
or
insb
push
leave
and
into
dec
pop
movsb
loop
shr
jecxz
jnp
sub
nop
imull
ja
test
movsl
fcomp
into
adc
add
mov
xchg
cmp
ds
sbb
bound
pop
notb
popa
lret
shll
hlt
or
rcrl
mov
ja
repnz
lock
loope
pushf
jne
cmpsl
sti
mov
push
les
cmp
mov
mov
pop
fimuls
xchg
pop
jnp
jne
push
add
jl
lahf
jp
cli
lock
fmull
lods
test
fsubrp
lahf
push
dec
std
hlt
jecxz
cmpl
inc
shr
mov
inc
pop
jae
es
push
cmp
arpl
notl
ss
repnz
ja
out
cs
pop
sbb
gs
sub
pop
sbb
pop
test
jmp
inc
jmp
bound
addr16
fcompl
popf
movsl
push
sub
das
fs
and
pop
push
arpl
lret
or
pop
add
sbb
cli
cmp
test
inc
xor
jns
stos
xchg
insl
pop
movsb
ss
cmp
sbbl
pop
ja
xchg
insl
cld
xchg
cmp
xchg
lods
push
mov
enter
mov
les
or
aad
mov
dec
cmp
andl
int
cmpsl
mov
add
scas
dec
jnp
cli
ljmp
adc
sub
pop
cmp
in
mov
fcoms
add
mov
aam
mov
enter
or
in
push
jns
push
xchg
mov
sbbl
sub
ljmp
pop
mov
cmp
fsubr
cmc
addr16
jae
loope
jge
cmp
aaa
sbb
scas
popl
jbe
add
leave
cmp
add
push
stos
add
movsb
xor
or
fs
push
stos
daa
mov
or
pusha
dec
mov
lea
sub
lret
loop
shlb
fistpl
add
imull
aam
pop
mov
loope
inc
or
jo
fsubrl
data16
pop
mov
xchg
lock
movsl
stos
xor
cli
pop
loopne
fmulp
nop
push
cmp
lea
adc
push
pusha
nop
lea
inc
mov
sbb
lcall
aaa
inc
dec
lea
adc
mov
and
sub
aas
test
mov
add
inc
cld
mull
ja
mov
fcoms
jns
je
inc
popa
pushf
lret
jg
adc
xor
pop
movsb
out
and
idiv
sbb
sbb
arpl
inc
fstps
divl
test
and
je
insl
movsl
pop
sbb
cmp
sbb
scas
decb
sbb
inc
fwait
xchg
xor
xchg
pop
inc
mov
dec
xchg
xchg
push
scas
mov
mov
outsl
not
push
dec
std
dec
jecxz
adcb
sbb
jecxz
jnp
int
jne
fiaddl
jecxz
pop
aas
mov
test
fldt
std
fsub
ja
add
movl
es
push
cmp
jb
xchg
xchg
lret
cmp
bound
xor
popa
jo
fbld
inc
out
pop
mov
es
out
rolb
pop
jae
mov
jne
mov
sar
test
push
mov
pop
fisubl
mov
cmp
inc
cmpb
jecxz
pop
stos
sahf
sub
stos
xchg
sarl
sbb
sbb
jno
mov
ss
shrl
pop
mulb
xchg
pushf
scas
out
xor
popf
and
sbb
push
mov
pop
fisubrl
daa
incb
mov
xchg
mov
or
mov
lcall
mov
into
mov
out
int3
pop
lret
in
insl
adc
fildl
mov
add
xchg
cwtl
xor
add
lock
call
xchg
sub
or
cmp
mov
das
push
dec
pop
add
mov
cltd
adc
jl
dec
pop
pop
int3
xchg
loop
imul
push
dec
jp
dec
pop
xchg
mov
sub
loope
xor
xchg
pushf
push
pop
rcrb
into
fisttpl
loopne,pn
fisubrl
out
xchg
cwtl
fdivrl
jns
fwait
out
js
loope
in
xlat
jb
inc
sub
pusha
shlb
or
add
jg
stos
testl
push
mov
aas
popf
addr16
sub
movsb
aad
push
jecxz
sbb
inc
fldl
inc
daa
ljmp
fwait
jg
push
cmp
repnz
adc
fwait
dec
xchg
and
or
movsl
xchg
iret
adc
daa
insl
lods
movsb
aas
cmp
push
idivb
xorl
mov
cmp
mov
dec
ret
lret
push
repnz
push
xchg
xor
imul
ficoml
inc
aaa
ret
adc
js
popa
push
dec
lods
jnp
test
jne
es
ret
push
xorl
mov
inc
sbb
jnp
lods
test
add
dec
ja
mov
arpl
xor
xchg
push
js
push
sti
and
xchg
inc
in
les
test
cmp
push
scas
fcoml
xchg
xchg
xchg
or
jbe
stc
xor
pop
daa
push
js
mov
andb
dec
xor
mov
and
cltd
mov
cld
pop
aaa
xor
mov
out
dec
sbbb
dec
mov
pop
sub
and
sahf
add
adc
mov
xlat
mov
dec
dec
cld
mov
push
das
jl
in
loopne
mov
aas
sub
xlat
nop
sub
jge
mov
push
fucomip
or
sub
les
and
jp
daa
enter
xor
adc
adc
fisttpll
pop
inc
cmc
fsts
sbb
cmp
mov
cs
sbb
cmp
push
mov
stos
push
xor
mov
lods
orb
dec
pop
stos
xor
mov
lret
mov
cmp
lsl
jne
ret
lcall
xchg
lods
call
into
cmpsb
lds
arpl
adc
adc
mov
rorl
out
daa
pop
cmp
sbb
cwtl
addr16
repnz
pusha
ss
mov
arpl
popa
push
lds
mov
movsl
ret
sbb
jne
movsl
pop
mov
sub
cwtl
sub
fdiv
jl
jl
cmp
mov
mov
dec
lds
or
mov
test
test
sahf
sub
cmpsb
jl
push
or
mov
sub
mov
cmp
int3
jne
mov
hlt
fisubs
daa
je
stc
in
stos
cmp
enter
pop
mov
insb
push
add
subl
mov
notl
cwtl
in
fistpl
das
insl
xor
fiadds
fcoms
fadds
dec
pop
mov
or
xor
sarb
adc
outsb
xchg
ficoms
cmpsb
aam
mov
sub
cmp
pop
mov
adc
cmp
add
mov
mov
popa
fildl
sub
hlt
cs
movsb
or
lea
xor
jge
movsl
data16
adcl
push
subl
js
pop
xchg
sti
fwait
xor
pusha
xor
decl
subb
mov
pushf
sbb
sbb
mov
and
popf
js
mov
mov
and
pop
mov
fwait
push
movsb
jmp
cmpsb
ret
out
and
xchg
adc
imul
insb
mov
cmpsl
cmp
mov
into
jno
xor
dec
xor
push
xchg
movsb
and
mov
mov
jg
movsb
jbe
push
push
push
dec
nop
adc
or
push
sub
mov
fimuls
sub
pop
inc
aaa
sbbl
cmp
inc
cld
xchg
push
cli
test
les
sub
int3
enter
arpl
cmp
shll
in
ret
adc
and
push
sbb
sti
pop
sub
lret
out
mov
insl
imul
mov
pop
pop
xor
mov
push
das
pop
imul
and
mov
scas
test
inc
jle
repz
push
adc
leave
and
andb
push
adc
cmp
adc
cmp
mov
cs
cmp
mov
jmp
add
mov
xlat
push
cmp
jecxz
enter
test
je
mov
dec
mov
negl
push
pminub
sahf
imul
ds
cmpsb
lahf
pop
jo
outsl
imul
movsl
popw
dec
push
pop
mov
inc
sub
xchg
jae
sub
sahf
mov
inc
push
and
adc
or
outsl
jecxz
popf
les
xor
sub
popl
in
ds
pop
pop
js
pop
mov
or
mov
or
adc
push
addr16
mov
mov
es
xor
mov
push
sbb
out
insb
dec
pop
out
fstpl
test
add
pop
repz
mov
scas
cld
xchg
push
loopne
dec
jns
mov
push
aas
pop
cmp
dec
dec
cmpsl
push
inc
adc
fisubl
sbb
mov
int3
nop
xor
pop
mov
jmp
pushf
cmpsl
push
dec
cld
mov
push
push
inc
rclb
jo
out
bswap
mov
cs
sbb
clc
mov
inc
pop
mov
pop
fstl
imul
dec
ret
hlt
shlb
imull
pop
jmp
mov
inc
imul
jbe
inc
sub
cmp
mov
js
fsubs
dec
lea
ffree
cwtl
jle
jno
pop
xchg
pop
adc
dec
jmp
mov
jnp
stos
rcl
out
mov
cmp
and
cltd
andb
imul
cmpsb
fnsave
and
adc
mov
and
aas
or
enter
in
mov
or
andb
movsb
insl
arpl
mov
sbb
cmp
adc
push
push
add
and
rcll
es
ja
aas
xchg
or
insb
test
mov
loopne
xchg
mov
pop
mov
addb
int3
out
stos
dec
in
jne
pop
pusha
repz
sub
lahf
jmp
ja
ljmp
dec
jg
pop
test
ret
cli
mov
aas
iret
div
dec
pop
test
inc
ret
jb
data16
outsb
enter
bswap
test
or
push
and
mov
cwtl
sbb
push
cmp
repz
mov
pop
lods
outsb
mov
cld
pop
dec
clc
mov
outsl
cld
mov
iret
das
xchg
xor
cltd
sahf
int3
push
call
mov
dec
and
pop
jl
and
lods
inc
pop
xor
sub
imul
or
subb
out
leave
lods
ret
testl
ret
iret
inc
sarl
insl
les
les
sahf
push
jle
push
adc
push
mov
or
fcmovbe
xor
lret
out
push
fcoml
call
sti
lahf
scas
xchg
jg
aam
jno
and
sbb
or
aaa
mov
das
repnz
or
repz
arpl
dec
pxor
or
cmp
xchg
jb
inc
out
push
xchg
test
mov
lock
fsubrs
and
stc
mov
inc
pop
adc
lods
arpl
les
bound
test
pop
lret
pop
pop
jg
lret
lock
push
push
jp
mov
inc
test
xchg
and
out
push
push
scas
int
sub
sti
fsubr
out
mov
pop
mov
or
mov
les
mov
mov
fnstsw
push
inc
dec
mov
stos
out
mov
mov
sbbl
adc
fcomps
movsl
mov
insl
cmp
adc
mov
rcrl
push
cmp
sti
mov
xchg
mov
int
nop
mov
cli
ret
lods
testb
xchg
xchg
popa
repnz
jbe
repnz
mov
pop
adc
in
mov
pop
scas
xchg
das
rcrb
mov
cli
mov
and
pusha
fisttpl
sub
nop
push
inc
arpl
mov
cld
daa
cmpsb
fistl
add
xor
and
mov
aaa
jae
scas
imulb
cmp
adc
fildl
lds
or
mov
cld
xor
and
mov
cmp
mov
in
cltd
inc
push
add
fnstsw
xchg
int
cmp
aam
cmp
mov
cmc
push
jno,pn
popf
xchg
je
cli
lcall
cltd
outsl
adc
and
cmp
mov
pop
lock
es
inc
lahf
lcall
and
sbb
andl
push
push
jnp
repnz
adc
addb
scas
pop
push
aad
mov
xor
lds
xchg
out
jg
mov
pop
jb
mov
pop
dec
and
call
xor
aas
pop
lret
xlat
inc
repz
roll
in
push
out
call
adc
mov
xlat
adc
addr16
pop
sahf
pop
les
iret
inc
addr16
jmp
dec
dec
in
hlt
and
cmp
insl
mov
ficoms
or
bsf
loopne
xchg
jge
dec
xchg
mov
shrb
push
inc
out
out
stos
mov
and
push
jbe
cmpsb
dec
loope
int3
xchg
pop
push
and
cmpsl
rolb
mov
pop
arpl
stos
sbb
data16
mov
idiv
mov
aas
jae
xchg
mov
sbb
sub
jmp
scas
arpl
orl
int3
xor
hlt
das
xchg
in
out
enter
cld
cmp
xchg
lods
lret
fsts
stc
stos
hlt
adc
jl
xor
cmp
xchg
scas
loope
mov
add
int
xor
sahf
aad
and
and
jns
sbb
mov
or
add
push
ret
mov
dec
ret
jb,pn
and
shr
xor
adc
rol
leave
cmc
orb
adc
cmp
into
sub
xchg
push
shrb
lds
ja
pop
bound
pop
fsubl
shrl
ror
sbb
daa
das
inc
push
cmp
mov
jg
cmp
inc
fcoml
cld
jbe
and
das
aas
aaa
cld
xor
cs
or
lods
fimuls
cmp
cmp
add
rorb
xor
ljmp
cmpb
push
mov
fisubl
les
mov
jns
or
fisttps
arpl
inc
sbb
adcb
jo
mov
and
in
ret
imul
jge
pop
dec
pop
dec
add
push
adc
testl
es
push
loopne
pushl
xlat
xchg
out
cmp
into
mov
movsl
inc
cld
insb
das
insl
outsb
push
and
jl
daa
mov
mov
add
fbld
cmp
xchg
mov
bound
ja
pusha
idivl
pop
sbb
bound
daa
mov
or
dec
push
negl
fwait
pop
outsl
mov
add
push
fsub
nop
out
push
dec
sub
ret
mov
push
or
cmp
aad
fwait
clc
movsl
aad
not
fnsave
out
movb
sub
or
sub
or
shrb
push
mov
pop
cs
shlb
jne
adc
jb
imul
push
dec
jne
push
out
add
jnp
jb
xchg
ds
loop
jbe
gs
xchg
icebp
stos
movsl
ficoml
int
mov
adc
in
int
jecxz
mov
push
pop
fbstp
rcll
add
push
les
and
push
loope
int
sub
data16
cmp
sub
lds
aad
mov
popa
test
mov
pop
fisttps
sar
popa
add
imul
int
adc
jne
or
sbb
add
xchg
mov
leave
and
cmp
add
daa
cmp
std
dec
dec
shll
and
xor
add
lret
jae
punpckhbw
rcrl
jns
jnp
jns
pop
xor
hlt
leave
dec
aas
inc
add
movl
lcall
add
sahf
pop
sbb
xor
xchg
int
fxch
jb
movsb
sbb
sbb
repz
aam
cmp
rcll
aaa
lcall
add
lcall
and
and
call
pop
ljmp
mov
inc
inc
sarl
pop
xchg
dec
adc
add
into
mov
lds
ss
les
adc
cmp
cmp
mov
mov
adc
in
adc
lret
or
pop
jb
mov
out
adc
cltd
popf
pop
sbb
add
mov
push
stos
xlat
adc
mov
scas
scas
and
fisttps
orb
into
sbb
mov
jnp
sbb
ret
jb
mov
xorl
mov
inc
xchg
or
lcall
nop
in
pop
pop
repz
repnz
push
pop
jmp
mov
inc
jecxz
mov
out
pop
add
lahf
sub
mov
mov
mov
mov
xor
xchg
mov
popf
or
fcmovbe
sub
and
je
xchg
adc
push
xchg
push
fcmove
mov
out
imul
xor
clc
lcall
sti
push
fimuls
push
pop
jbe
fs
push
sti
jecxz
push
aad
das
fwait
adc
ret
push
dec
lcall
sub
das
nop
mov
and
and
inc
mov
pushf
addb
arpl
jae
fs
imul
outsb
or
sbb
sbb
lahf
scas
loop
mov
cmpsb
outsl
test
ss
adc
insb
cmp
pop
sbb
outsl
push
testl
fstl
mov
cmp
and
xor
mov
push
push
imul
call
mov
pop
daa
divb
cmp
jo
xchg
xchg
testl
stc
mov
leave
adc
xchg
cmp
pop
popl
sti
popf
in
insb
mov
les
adc
fistps
icebp
cwtl
enter
pop
pop
js
inc
xor
jl
push
mov
inc
stc
shl
xlat
or
inc
shll
mov
xchg
jne
jecxz
gs
mov
sahf
mov
scas
dec
push
adc
jmp
mov
mov
sub
sahf
out
mov
mov
mov
dec
cwtl
jbe
dec
flds
xor
dec
jp
jo
cmp
popa
pushf
mov
and
call
sub
push
pop
and
pusha
mov
leave
aad
dec
das
sub
push
push
enter
data16
shrb
sbb
cmpsl
dec
inc
stos
cmp
clc
add
ret
movsb
jg
out
insl
ja
enter
icebp
jo
pop
pop
mov
in
repnz
pop
mov
xor
mov
jmp
mov
pop
mov
push
mov
mov
pushf
iret
test
adc
add
push
cmp
scas
inc
mov
pop
or
insb
lock
shrl
dec
sbb
into
cmpsb
es
fdivrl
dec
lock
push
nop
cli
scas
sti
lods
sbb
mov
icebp
or
cwtl
inc
popa
jecxz
imul
or
inc
pop
add
filds
jbe
cmpsb
lods
ror
enter
xchg
aad
test
adc
pop
jne
add
fwait
mov
or
aaa
jno
test
js
daa
add
cwtl
jmp
push
xlat
jnp
pop
mov
jg
xchg
or
pop
fsubs
xor
and
fdivl
in
push
out
stos
push
out
cmpsb
nop
add
cltd
divl
mov
sbb
daa
icebp
cmp
fidivrl
cmpsl
sbb
idiv
add
dec
inc
movsb
mov
popa
xchg
xor
inc
sub
pop
pop
fwait
xor
call
push
pop
dec
mov
inc
lret
pop
push
inc
xor
int3
cmp
mov
and
mov
push
mov
mov
pop
stc
xchg
dec
addr16
or
outsb
add
cmpsl
xor
fs
pushl
ljmp
inc
add
and
sti
outsb
sti
push
hlt
lcall
sub
mov
jge
push
jae
outsl
or
int3
cwtl
ljmp
pop
cmp
mov
pop
xor
adc
jl
jbe
pop
xor
dec
push
sub
int3
out
mov
sub
sub
jne
pop
int
bound
gs
xorb
std
mov
arpl
sbb
cmp
cwtl
or
ret
adc
insb
xchg
in
or
push
lock
sti
inc
sub
xchg
cmp
movsb
outsl
gs
adcl
clc
js
xchg
mov
pushf
mov
or
dec
fldl
pop
scas
pushf
pusha
mov
xchg
push
cld
out
scas
sarl
arpl
fisttps
pop
stos
pop
dec
adc
int3
fistpll
shrl
repnz
outsb
cmpl
test
sub
gs
mov
sub
pcmpeqd
push
jl
faddp
mov
sti
cmc
repz
inc
rcll
ja
or
add
fbstp
mov
mov
jo
mov
out
mov
cmp
fmulp
dec
lahf
inc
inc
and
lret
aad
scas
sub
ret
mov
jg
dec
rorb
mov
push
jno
lahf
popa
mov
insl
insl
add
pop
cli
out
xchg
cmp
outsl
cmp
lock
xor
inc
hlt
and
ret
mov
xchg
pop
sbb
iret
mov
shrb
push
cmp
outsb
inc
fcom
sub
scas
jle
loop
mov
shl
cmp
hlt
xlat
in
mov
add
ljmp
adc
cmpsl
xor
sbb
out
scas
test
sti
roll
cs
sbb
push
outsl
sbb
pop
push
push
jmp
fbstp
jl
cmp
push
xor
call
lret
inc
ja
push
int3
pop
mov
scas
push
addr16
testb
xchg
inc
mov
pop
cmp
add
sbb
push
stos
cmp
mov
jp
push
fwait
into
mov
vmovaps
sahf
xor
sar
and
dec
icebp
rorl
add
dec
adc
aaa
push
imul
jle
inc
inc
jge
lret
xor
xor
in
or
add
cltd
xor
addr16
dec
dec
sub
inc
pusha
and
mov
pop
pushf
lods
pop
push
pop
pop
inc
add
rorl
fcomi
cmc
addr16
data16
and
ja
adc
loope
adc
mov
mov
dec
pop
pop
push
imul
push
add
pop
jo
fists
jnp
push
aas
shlb
shlb
xchg
dec
adcb
or
sbb
scas
push
addb
cmp
sub
mov
xor
push
hlt
inc
andl
push
test
es
loopne
push
lret
scas
popa
test
jbe
xor
scas
outsb
push
inc
imul
cmp
repz
and
js
or
loope
pusha
cmp
ret
push
lcall
ret
stc
scas
mov
rcl
lcall
cwtl
push
mov
sub
pop
and
shlb
inc
fimull
leave
pop
xchg
loopne
popf
subb
sub
scas
int3
dec
or
pop
inc
mov
enter
fwait
dec
push
adc
jl
lods
lea
inc
mov
xor
leave
push
fidivs
adc
hlt
arpl
inc
imul
subl
cmpsb
enter
push
stc
fcomp
testb
dec
xchg
adc
or
ret
mov
jecxz
icebp
cwtl
dec
or
outsb
adc
add
xchg
cmp
mov
push
lret
dec
pop
push
pop
mov
lea
test
in
mov
pop
das
sbb
mov
ds
das
repnz
out
mov
adc
jl
imul
test
popf
shlb
insl
cld
rcrb
xlat
rcrl
hlt
mov
fcoml
mov
mov
add
scas
insb
fdivrl
xlat
push
lds
sbb
sbb
dec
cld
pop
jno
pop
mov
jge
mov
push
mov
push
mov
mov
into
loopne
sub
out
shlb
add
push
mov
mov
xor
sbb
pop
mov
stos
or
lahf
adc
enter
idiv
mov
add
subl
push
lahf
push
pushf
stos
mov
gs
xor
xlat
dec
out
dec
sbb
fwait
fs
inc
pushf
xor
mov
inc
cmp
and
push
push
out
clc
mov
ret
clc
cs
lods
mov
lret
sbbb
dec
sbb
add
mov
fnstcw
fs
outsl
jne
add
mov
int
into
pusha
and
and
xlat
cmp
out
scas
out
gs
mov
lcall
dec
aam
nop
movsb
cmp
loope
dec
sub
ja
aad
cld
ljmp
jb
dec
lds
clc
push
out
ljmp
jecxz
mov
call
rclb
or
push
jle
inc
xchg
and
in
aas
outsl
movsl
mov
lret
mov
fmul
arpl
daa
inc
jnp
dec
lret
iret
loop
mov
push
int
pop
loop
imul
repz
sbb
sbb
pop
clc
pop
mov
faddl
sarb
test
mov
mov
jns
imul
mov
adc
xchg
outsl
add
xor
jmp
fs
adc
mov
inc
adc
cmp
loop
xchg
stos
add
jg
inc
bound
lods
lret
and
imul
jnp
sarl
cmp
sbb
jae
imul
je
inc
mov
mov
push
push
repz
cmc
adc
arpl
loop
jbe
test
sub
jns
lahf
xchg
filds
sbb
roll
aaa
insb
faddl
push
push
pop
iret
cltd
fimull
fsubs
add
push
inc
mov
arpl
imul
mov
js
xorl
jae
insl
xorb
shl
xchg
pop
cmc
cmp
fs
push
push
add
and
sbb
sbb
sti
jbe
lcall
inc
xchg
add
or
movsl
adc
jmp
xchg
test
mov
iret
add
enter
pop
mov
int
jb
clc
cmc
push
add
movsl
inc
cmp
lods
fimull
cmpsb
mov
xchg
js
mov
dec
outsl
adc
sahf
mov
int
test
sahf
sub
pop
sbb
jmp
out
lods
lret
lahf
xchg
sarl
fnstenv
mov
jbe
lcall
mov
jl
adc
lcall
sub
mov
pop
in
repz
or
adc
arpl
mov
and
rorl
dec
js
out
sbbb
sub
xor
jb
mov
add
cmp
jb
pop
add
pop
cli
ret
xchg
add
xchg
sarl
enter
dec
push
out
or
sbb
sub
adcl
lods
adc
lods
push
dec
movsb
fdivrp
int3
mov
leave
jb
rolb
insl
sub
mov
insb
cmp
add
sub
adc
inc
and
loop
sbb
fs
and
push
out
rcrl
out
ljmp
into
les
inc
jle
shl
pop
aaa
out
setb
cmp
cli
aad
fildl
cs
out
mov
call
mov
and
fnstsw
pop
jae
push
mov
cmp
iret
xchg
jno
cld
pop
adc
scas
mov
and
jmp
xchg
xchg
ret
xor
stos
aam
jns
mov
and
cmp
sub
stc
xchg
or
xchg
pusha
icebp
mov
ss
idivl
movsl
pop
sub
outsb
sbb
dec
xchg
sub
and
pop
movsb
xchg
xor
mov
jle
fwait
jne
pop
jmp
cld
and
dec
mov
loopne
lret
pop
out
js
outsl
iret
add
and
mov
pop
in
dec
adc
test
jecxz
imul
and
loope
imul
adc
sbbb
mov
jns
push
cltd
xchg
es
ret
popa
add
out
mov
sbb
shlb
xchg
mov
inc
in
or
ret
mov
js
jbe
adc
fistpl
ja
sbb
mov
xor
repz
add
adc
das
sbb
jb
mov
stos
inc
pop
mov
je
cmp
mov
jmp
repz
add
xchg
std
jno
scas
xor
into
push
cmp
cmp
add
inc
bound
stc
int
lret
lret
pop
hlt
jg
inc
in
push
push
jg
loope
mov
bound
hlt
sub
cmp
std
sbb
test
test
fildl
xchg
stos
test
push
mov
pop
push
lea
movsl
test
shrd
in
mov
jp
je
data16
lahf
inc
into
and
mov
jnp
shll
pop
push
cmp
insb
mov
xor
inc
mov
ret
or
or
fbstp
out
andl
inc
daa
and
lods
pushf
dec
xorb
stos
mov
icebp
je
cmp
clc
push
shr
cmp
xor
in
lahf
mov
sub
xor
movsb
and
cmpsb
mov
mov
xor
lahf
adc
and
imul
mov
push
popf
and
aaa
popa
lods
adc
sub
jge
xorl
xorb
test
js
xchg
cld
xchg
int
cltd
mov
mov
das
xor
mov
push
adc
xor
mov
js
cmp
stc
pop
pop
lock
fdivrs
dec
jo
subb
ds
mov
inc
fimull
sarb
in
test
jbe
jno
pmuludq
mov
mov
pop
add
mov
repz
pushf
rolb
sub
out
lret
cmc
xor
int
stos
inc
inc
leave
cltd
sbb
dec
add
out
xor
or
jecxz
mov
jnp
fucomp
mov
sarb
or
out
jg
inc
mov
xchg
xor
xchg
jmp
inc
mov
add
lock
sahf
mov
mov
push
lods
jno
popa
push
roll
fdivrs
popf
mov
ret
pop
pop
lods
shrl
cwtl
sub
cmpsl
sbb
push
mov
js
cs
mov
or
dec
cmp
in
xchg
fimull
jmp
push
ret
dec
xchg
div
pop
inc
sub
stc
lahf
pop
mov
jno
in
sbb
dec
ret
lahf
xchg
mov
lcall
pusha
pop
xchg
ficompl
iret
daa
mov
cwtl
push
sbbb
jp
sbb
push
jno
aam
add
je
cli
jo
scas
arpl
mov
push
mov
pop
loopne
pop
insl
test
jge
movb
adc
mov
sub
movsl
mov
mov
scas
jl
and
sub
aam
lcall
dec
adc
pop
pop
dec
push
clc
testl
jle
cmpsl
out
cld
pop
lcall
popf
rclb
and
jmp
out
cmp
arpl
sub
pop
lds
push
cmp
mov
ret
or
mov
jmp
pushl
push
leave
pushf
cli
loope
add
mov
js
xor
xchg
dec
cmp
add
push
cmp
pop
ds
jl
push
fldl
rcrb
mov
cmpsb
fcmovnb
mov
cmpsb
and
loop
out
push
lret
adc
roll
xchg
jnp
mov
mov
dec
mov
push
dec
fcomps
std
and
dec
and
scas
addr16
stos
out
sub
jne
aad
or
adcb
cmp
out
push
int3
mov
inc
jns
pop
mov
and
mov
stos
daa
cmp
inc
stos
ljmp
sbb
mov
jl
mov
mov
addr16
cmp
dec
test
jge
fmuls
movsl
sbb
jne
jns
scas
xchg
dec
popf
ljmp
imul
sbb
loope
les
cmp
pop
mov
mov
lea
push
jns
int
adc
popa
mov
cmp
loopne
cmp
out
adc
push
sbb
mov
sbb
icebp
sti
mov
pop
lret
scas
add
fisubl
rcl
mov
mov
inc
sub
call
not
jbe
or
mov
fsubrs
cmp
cmp
cltd
insb
mov
xor
mov
jl
push
scas
push
out
mov
xor
xor
lahf
mov
scas
and
sub
pop
inc
cmpl
jg
jns
ljmp
outsb
or
sbb
jb
sbb
imul
sub
mov
test
push
jle
popf
fnstenv
sub
mov
insl
add
mov
fdivr
out
xchg
test
cmc
in
push
andl
mov
aad
aas
push
pop
pop
or
mov
cwtl
pop
les
pop
push
mov
push
sti
cmp
mov
cltd
sub
bound
xchg
sbb
cmp
dec
adc
pop
adc
adc
add
add
add
dec
push
scas
out
inc
add
mov
sbb
mov
stos
add
lret
rcl
mov
aas
rcrb
aas
int
and
mov
lret
mov
stc
mov
inc
pop
mov
pop
repz
rorl
jns
mov
dec
cmpsb
sub
push
sbb
sbb
popf
and
add
jbe
jecxz
mov
or
sub
mov
xor
in
and
pop
mov
xchg
lods
inc
movsl
pop
cmc
sahf
in
jb
mov
fiaddl
mov
mov
pop
mov
addps
push
cld
inc
ret
ds
push
adc
sahf
sub
sbb
sub
jg
fisubl
icebp
sahf
sti
jb
mov
mov
test
and
lods
cmp
imul
test
std
mov
loop
nop
shrl
pop
or
cmpb
or
repnz
mov
fstps
cltd
xchg
mov
sub
dec
push
loope
sub
fwait
xor
push
and
mov
popa
pop
push
pop
pusha
xchg
push
mov
pop
xchg
ret
adc
hlt
mov
leave
sbb
push
pushf
sub
adc
stos
sarl
push
push
jmp
sub
dec
mov
std
in
xchg
cwtl
dec
sbb
insl
popf
lods
dec
mov
sub
mov
mov
das
pusha
dec
rcrb
jg
insb
lds
stc
data16
push
xor
lock
adc
and
cmpb
pusha
or
pusha
fwait
aam
js
add
lock
cmp
scas
mov
out
cmp
add
out
outsb
dec
mov
test
xor
cwtl
pop
data16
scas
fwait
loop
inc
in
or
int
cmp
addl
push
push
stos
dec
gs
sub
das
or
jmp
sub
jmp
aas
sbb
mov
ret
in
jne
pop
popa
sbb
enter
xor
push
sbb
js
push
xchg
aaa
and
addl
adc
sbb
mov
jne
and
mov
sbb
into
cmp
jno
add
dec
sbb
pop
cwtl
xchg
in
shlb
subb
dec
pop
xchg
dec
add
sbb
in
sbb
iret
in
fcmovnu
inc
cmp
pusha
and
and
shrb
stc
add
push
jmp
xor
or
ja
paddsb
icebp
fisttpll
test
mov
xor
jne
xor
outsl
pop
dec
arpl
aad
xchg
add
das
scas
pop
out
les
adc
sbb
push
in
sub
testb
xchg
inc
mov
adc
jbe
jb
lds
fisubl
cmp
loope
stos
mov
jge
cs
and
lahf
insl
test
xor
xchg
mov
popa
fnstsw
cs
movsl
ret
cs
xchg
mov
cltd
add
mov
mov
jo
sbb
cmp
inc
or
iret
jnp
inc
push
push
sub
nop
insb
sbb
stc
adc
add
inc
test
out
pop
cmp
fsts
xor
in
xor
dec
out
stc
int3
push
adc
inc
fcompl
subb
mov
pop
pop
mov
pop
add
call
lods
in
nop
mov
lods
jno
cmp
clc
push
sbb
cwtl
cli
movsb
adc
icebp
fdivrs
aaa
daa
repnz
mov
mov
aas
sbb
xor
data16
dec
fs
dec
mov
lret
jb
leave
inc
pop
rcr
mov
jno
and
push
insl
pop
iret
enter
loop
test
popa
mov
xor
inc
adc
or
cmp
dec
fisubl
loopne
ret
mov
or
jne
and
cmp
cmp
leave
les
xchg
sbb
mov
xor
jmp
add
cli
add
mov
in
adc
push
popa
dec
and
inc
mov
pop
cwtl
add
arpl
mov
inc
mov
xchg
icebp
insb
xchg
dec
aaa
test
js
push
and
add
mov
outsl
and
mov
inc
push
dec
scas
push
loope
jle
inc
and
add
ffree
and
fdivrl
testb
aaa
aad
insl
jne
sbb
xchg
or
sti
insl
ds
pushl
insb
push
scas
jae
mov
out
mov
cmp
je
cld
sbb
push
mov
dec
data16
popw
pop
ja
adc
scas
xlat
sbb
xor
adcl
or
push
push
or
cmp
lret
pop
push
sbb
mov
push
les
xchg
insb
loop
into
adc
shr
imul
mov
inc
cmp
dec
sub
test
scas
sub
xchg
cmp
sbb
mov
push
out
cmp
scas
test
js
movsl
scas
sarb
in
shrb
jmp
inc
lcall
jae
ss
std
int
push
enter
and
dec
insb
sub
sub
mov
in
popf
sub
sahf
lcall
xchg
dec
movsb
sub
icebp
inc
out
cmp
mov
stos
insb
push
xchg
scas
mov
push
mov
shrb
xor
xchg
push
push
sub
lea
mov
mov
fnstcw
js
push
cltd
adc
jno
ds
xor
mov
pop
mov
xchg
loopne
jp
jno,pt
xorl
cmpb
inc
ds
ret
dec
leave
cld
jl
add
mov
mov
icebp
lods
pop
int
call
mov
push
divb
scas
mov
sti
leave
test
icebp
xor
icebp
cmp
mov
mull
or
dec
testb
add
pop
stos
add
sub
filds
mov
xor
pop
push
jecxz
rcrl
imul
xor
push
mov
sbb
bndstx
das
int
movsb
push
jp
jae
xchg
rclb
xor
pop
mull
outsb
dec
dec
ret
sbbb
fsubrp
jp
inc
pop
loopne
mov
adc
decb
sub
stos
xchg
xor
out
loopne
inc
pop
xchg
orl
sbb
jbe
inc
fwait
scas
push
or
pusha
pop
lcall
push
xor
movsb
xchg
xor
outsb
mov
loope
and
fstps
subl
scas
jnp
fimuls
jp
mov
ret
movsl
xor
pop
push
scas
fstpt
add
or
in
push
dec
aas
in
xchg
cmp
repz
add
pop
adc
jne
xchg
pushl
jo
bound
movsl
outsl
cld
pop
jbe
hlt
ret
jno
ds
pop
mov
xchg
mov
out
mov
mov
cmpsb
sub
icebp
stc
outsb
adc
imul
lds
xor
sbb
push
scas
js
sub
push
sub
cmp
aas
adc
lahf
adc
and
pop
mov
xchg
outsb
sbb
mov
call
sub
sub
aas
aaa
add
mov
mov
jl
jne
pop
les
fmuls
add
mov
dec
mov
cmp
sub
test
jne
jp
cmp
sbb
aam
push
mov
arpl
leave
int
mov
xlat
add
aas
imul
lret
lret
aaa
xchg
jmp
push
sti
push
inc
pop
xchg
icebp
mov
sub
and
mov
mov
int
call
lret
lret
inc
ljmp
jmp
pop
test
in
mov
adc
inc
sbb
frstor
pop
jge
repnz
arpl
jp
enter
clc
cmpsb
pop
jg
xor
inc
or
mov
ret
mov
mov
push
sub
lds
adc
mov
inc
pop
xchg
dec
inc
test
into
sbb
sahf
jp
in
sub
push
sub
out
add
dec
jg
movsb
fdivs
push
and
inc
mov
andb
xor
addb
push
xchg
xchg
mov
mov
xlat
out
pop
or
pop
insl
call
sub
and
arpl
scas
xor
shll
and
xchg
xchg
xchg
fisubrl
add
fwait
xchg
add
negl
outsl
push
movsl
cmp
and
or
pushf
pusha
push
fs
fistl
push
adc
into
and
cmpsb
mov
repz
jnp
cmc
pusha
add
movsb
shll
dec
inc
adc
out
or
xor
and
push
rcll
and
and
mov
mov
stos
fstl
or
sub
sub
in
mov
mov
lea
out
cmp
cli
enter
aad
push
xor
es
shl
jle
pushl
clc
jg
xor
pop
inc
sub
push
cli
mov
insl
jae
mov
fisubl
in
pop
mulb
xchg
push
push
mov
popa
lea
add
decl
dec
cmpl
push
das
xchg
iret
mov
add
push
in
movsb
cli
jae
ss
pop
fimuls
test
lock
add
jbe
in
test
push
out
mov
rorl
mov
or
pushf
mov
fcoml
ret
sub
in
into
lcall
push
push
adc
push
or
mov
dec
enter
mov
test
adc
mov
mov
call
adc
jecxz
xchg
pop
xchg
sbb
cmp
jnp
xchg
roll
dec
outsb
insb
jge
lock
pop
xor
daa
add
jne
sbb
insb
nop
ss
push
inc
xchg
outsb
pop
int3
xchg
in
gs
or
pop
js
pop
lcall
test
in
das
push
imul
idivb
add
adcl
pop
sbb
mov
pop
adc
lods
sbb
sub
pop
jno
mov
in
inc
subb
cmp
out
pop
add
adc
inc
mov
imul
lahf
push
sarb
fs
xchg
dec
andb
enter
or
mov
das
rcrb
mov
fildl
sub
xchg
cltd
insb
lea
pop
lret
je
fstl
cmp
outsl
int
mov
xlat
sub
mov
pushf
popa
cld
jne
pop
mov
inc
aaa
ds
and
push
xchg
xchg
jo
pusha
jne
fldcw
dec
xchg
sub
cmc
stos
jp
je
out
sysexit
ja
ljmp
and
je
pop
stos
cmc
mov
subl
cs
test
push
and
or
clc
or
mov
or
stos
jae
clc
stos
mov
pop
inc
jmp
mov
push
mov
xchg
mov
or
fstps
outsl
in
and
pusha
fnstcw
shlb
jle
mov
adc
test
pop
lret
cld
das
in
add
aaa
das
aam
paddsb
xchg
cmp
xchg
icebp
cmp
adc
in
imul
cmp
ljmp
mov
dec
mov
data16
or
mov
orl
jbe
mov
subb
add
xor
leave
cmpsb
xchg
push
jmp
sbb
sub
dec
push
ret
push
inc
push
jno
xor
mov
lock
jnp
imul
shrl
test
out
ss
mov
xchg
lea
shll
movsl
mov
add
jae
xchg
add
or
or
mov
arpl
pop
or
sub
sub
aas
orb
pop
pop
pop
adc
jecxz
adc
test
pop
mov
cmc
insb
orb
jmp
jo
xchg
pop
add
mov
ljmp
aad
jg
or
stos
pop
pushf
inc
jo
sbb
mov
add
pusha
or
pop
out
mov
mov
loopne
mov
pop
cld
fiaddl
in
out
ror
sbb
fisttpll
jecxz
inc
fisttpll
je
sbb
mov
push
rcrb
cmp
xchg
xor
and
xchg
jns
pushf
push
fwait
es
fstpt
cwtl
xor
movb
sbb
pushf
stc
cltd
sbb
xor
or
fistl
push
imul
scas
push
js
lods
in
dec
outsb
les
mov
pop
mov
jg
dec
push
sbb
pop
hlt
fwait
sub
mov
movsl
aas
loopne
lds
out
faddl
xor
mov
dec
cmpsl
or
gs
int
stos
pop
je
pop
idivb
bound
cmp
xchg
repz
add
das
pop
jg
mov
push
jg
bound
add
in
sbb
andl
jae
push
push
mov
mov
shlb
sbbb
pop
insb
cmp
jbe
mov
inc
mov
ret
adc
mov
aas
imull
fisttps
add
add
xor
dec
rolb
sbb
sahf
jle
in
sbb
push
ja
sub
xchg
lods
pop
pop
dec
push
cmp
cmp
fistpll
push
mov
push
sub
and
jmp
dec
fcoms
cltd
lret
fcomps
clc
mov
mov
imul
push
push
jmp
loope
adc
cmp
arpl
ret
jmp
test
mov
xor
or
mov
pop
test
lods
lcall
xchg
mov
mov
and
pop
xor
lea
sahf
lret
cmp
mov
dec
pushf
icebp
cli
sbb
sbb
xchg
push
push
mov
or
sahf
outsl
xchg
cmp
arpl
and
ret
and
rcrb
insl
out
imul
test
mov
dec
bound
cmc
dec
push
adc
dec
adc
pop
loopne
push
sub
sarl
push
jg
lock
out
rolb
mov
or
add
ret
inc
dec
inc
popa
push
int
push
cmp
adc
outsl
rolb
stos
repz
mov
sbb
stos
in
pusha
fiadds
fadds
jg
fmull
dec
sub
xchg
dec
xor
mov
sub
test
lea
mov
aas
lret
jmp
or
std
push
pop
leave
outsl
mov
pop
gs
cld
sti
stc
std
mov
ds
xor
dec
inc
jmp
repnz
xlat
mov
stc
pop
adc
mov
out
cmp
ss
sbb
popf
icebp
arpl
in
and
shrb
sbb
adc
xchg
jne
sbb
test
sub
inc
pop
cmp
and
and
push
adc
or
es
lahf
sbb
in
fmuls
mov
cs
cmp
mov
xchg
jl
scas
xchg
sub
cmp
jno
cmp
lock
sbb
fnstcw
cmp
sbb
lret
adc
xchg
loop
scas
ret
jns
mov
outsl
ja
xor
test
cmpb
and
insb
stc
test
push
pop
adc
cmc
cwtl
popa
ja
add
pushf
pop
mov
add
loopne
sbb
xchg
ds
cmpps
mov
out
pop
dec
repz
stos
and
and
dec
add
int
ret
fidivrl
inc
int3
jo
in
sti
aad
in
mov
movsb
cmpsb
lmsw
sbb
mov
pop
lcall
leave
sahf
xchg
jg
into
lock
scas
adc
and
dec
ljmp
lds
in
and
and
inc
push
cltd
jge
jbe
out
cmp
cs
repnz
or
add
and
ret
int
nop
fs
pop
adc
gs
test
inc
cmp
pop
mov
mov
jecxz
mov
sbb
lds
sub
inc
mov
lock
lret
jmp
jne
rorb
dec
jg
xor
push
inc
jnp
out
pop
cli
stc
sub
nop
inc
int
push
or
gs
sarw
and
pop
faddp
cmpsb
ja
mov
or
mov
xchg
arpl
rorb
inc
ror
jb
into
pop
inc
push
inc
inc
inc
mov
in
ficompl
mull
das
arpl
mov
inc
les
pop
and
inc
xchg
lods
mov
sbb
or
mov
mov
sub
aas
nop
mov
push
push
loop
in
incl
sbb
popf
add
lea
bound
das
mov
adc
jg
repz
in
mov
push
cmc
test
pop
shlb
leave
cwtl
imul
dec
inc
mov
push
push
mov
mov
jbe
adc
sarl
gs
and
add
hlt
aaa
xchg
xor
incb
inc
jmp
sbb
inc
loopne
out
cwtl
insl
hlt
mov
rcrb
mov
fldt
xor
pushf
mov
rcl
loope
adc
call
push
adc
and
xlat
and
xchg
push
mov
and
ja
mov
mov
test
push
mov
fnstenv
lds
inc
scas
sbb
lock
mov
cmp
xor
dec
lret
push
mov
jge
lahf
dec
lret
add
jnp
daa
fistps
pop
jmp
jb
test
or
sbb
cwtl
int
data16
cmpb
mov
inc
pop
lods
aaa
inc
shrl
call
mov
adc
fwait
fwait
add
pop
shl
stos
rcrb
and
rorb
mov
jmp
xchg
test
bswap
mov
xchg
mov
js
insl
add
adc
mov
call
stc
pop
inc
icebp
fwait
lods
test
mov
repnz
rcrb
sbb
mov
dec
je
inc
xchg
adc
repnz
imull
jmp
lret
jbe
pop
bound
xchg
sbb
sbb
dec
or
sbb
jg
mov
and
sub
lds
jno
test
push
sbb
sbb
cli
dec
out
mov
std
xchg
jle
mov
adc
int3
cmc
lret
test
cmp
push
add
pop
adc
lods
pop
and
xchg
sub
cmp
arpl
xorl
push
sbbb
outsl
push
push
mov
mov
mov
inc
mov
xor
dec
xor
jle
stos
xchg
stos
out
xor
jl
or
push
pause
rorl
ljmp
push
jns
sbb
adc
fwait
push
cmp
xorl
pop
clc
out
adc
int
mov
adc
adc
ss
push
cltd
ret
mov
inc
xchg
jne
jb
sti
rdpmc
rcr
add
adc
jne
data16
dec
sub
leave
test
scas
sbb
ja
insl
push
idivl
pop
repnz
insb
movsl
xor
mov
movsb
and
mov
inc
dec
inc
jo
fmuls
xchg
or
jne
cmpsb
mov
jo
jmp
jge
mov
cmc
imul
adc
sbb
inc
ds
loope
psubsb
pop
fnstsw
dec
cmovne
andnps
les
int3
pop
add
mov
and
outsl
jb
lods
xchg
xor
pop
lds
stos
adc
inc
aaa
ds
hlt
fdivl
mov
dec
mov
add
in
imul
jae
cmp
or
xchg
dec
mov
mov
add
arpl
xacquire
sub
ficoms
xor
xor
mov
ds
test
andl
and
les
jnp
lods
dec
aas
xchg
loopne
stos
jle
pop
push
dec
add
cmp
mov
sbb
fisttpll
cmp
ficoms
out
movsl
lea
cli
mov
fdivp
push
pop
mov
or
lock
cli
sub
jmp
mov
mov
mov
scas
add
cmc
pop
imul
imul
and
push
lret
jge
enter
inc
shl
aam
cwtl
testb
push
dec
adc
out
push
inc
aam
daa
lcall
cmpsl
sub
pop
cmp
push
xor
pop
rorb
loopne
jecxz
and
sbb
pop
mov
sar
mov
test
add
dec
fcoml
popa
sbb
ret
or
or
push
mov
cmp
mov
cmp
add
dec
add
jl
sbbl
das
sbb
push
adc
xor
push
xchg
mov
data16
xor
cli
push
stos
les
pushf
push
test
fxam
stc
ss
ret
xor
adc
stc
iret
dec
push
stc
pop
fstps
lds
mov
lret
xor
sub
cltd
fwait
push
sub
imul
lds
loop
xchg
das
mov
or
ljmp
stos
mov
dec
sub
jns
add
pop
mov
cmp
das
fs
shrb
add
dec
das
mov
sub
and
ret
hlt
or
sub
jg
xor
in
jmp
dec
ljmp
ret
mov
mov
and
lock
loop
sti
mov
sbb
mov
adc
mov
xor
push
dec
aad
add
lcall
in
int3
pop
in
inc
sarl
inc
fimuls
dec
xchg
pushf
jae
push
adcl
out
xchg
cmp
mov
jmp
cmp
jmp
xor
push
outsb
or
or
scas
sbb
call
inc
pushf
lahf
jl
ss
cmp
mov
stos
shrl
add
mov
jle
mov
dec
cld
lods
scas
fildll
xchg
jp
shrl
movsl
mov
sbb
lret
lods
pop
inc
or
daa
inc
and
and
inc
add
fsubrl
inc
jle
adc
imul
push
mov
lea
adc
jmp
icebp
mov
shrb
ljmp
dec
cmp
stos
pop
stc
pop
jl
inc
aam
ss
jno
pop
movsl
and
lods
mull
mov
xor
decl
iret
es
sbb
pushf
out
pop
sub
loope
clc
pop
sbb
adc
dec
std
sbb
add
mov
sbb
test
inc
fsubs
mov
dec
add
scas
mov
leave
data16
cmp
cmp
ret
into
and
or
in
cli
add
jns
jns
and
daa
and
sub
sub
ss
inc
and
nop
sti
daa
mov
bound
and
sub
and
xchg
cmp
movsl
into
testb
roll
sarl
sub
lcall
xchg
in
pop
xor
fldt
aad
add
pop
lea
loopne
lock
mov
add
mov
ss
sbbl
cmp
adc
xchg
inc
lods
inc
dec
pop
or
sbb
xchg
pop
push
lds
adc
cmp
lret
lret
push
lds
mov
sub
cltd
movl
xchg
imul
aam
mov
repnz
test
adc
fs
and
jne
or
and
in
mov
jp
fcmove
jo
inc
sbb
jnp
and
jbe
sub
cmp
xchg
int3
adc
fptan
outsl
fstpt
pop
mov
jmp
sahf
std
xor
mov
iret
xlat
inc
pop
imul
mov
pop
insl
pop
aam
sbb
stos
sbb
repz
das
test
dec
popa
pop
arpl
inc
dec
fs
inc
pop
xchg
add
or
pusha
cs
ficomps
mov
into
js
fidivrl
js
mov
cwtl
mov
insb
xor
adc
mov
cltd
out
adc
mov
in
dec
pop
jns
push
movsb
inc
push
pushf
stos
mov
rolb
cmp
xchg
out
pop
ja
pop
movsl
lahf
movswl
aas
das
jl
frstor
or
push
lahf
out
faddl
enter
arpl
dec
push
xchg
jmp
xlat
arpl
jne
in
xchg
jae
aas
mov
xor
aam
sbbl
mov
ss
jg
jg,pt
or
sbb
adc
and
fisttpl
mov
xchg
jge
adc
cmp
xchg
mov
jns
cmp
lahf
mov
test
test
fdivl
pop
out
divl
xor
jecxz
call
xchg
inc
pop
push
je
push
mov
fbld
inc
pop
sbb
sbb
sbb
jge
mov
push
orl
inc
inc
xorl
jle
jecxz
icebp
inc
outsl
aas
mov
sub
lods
push
cmp
sub
sbb
in
cld
push
std
in
mov
lea
pop
sub
push
je
mov
cmp
push
jo
mov
loop
es
sti
mov
adc
or
lret
lods
ljmp
xor
mov
xchg
pop
ljmp
xor
loop
test
mov
pop
iret
loope
sti
test
sbb
cmp
in
insb
jb
sbb
fistps
xlat
mov
movsl
or
mov
pop
mov
dec
inc
loopne
in
out
ret
lcall
pop
xchg
pop
enter
push
inc
and
add
inc
inc
lahf
pop
xor
rcll
stos
nop
lret
js
imul
jmp
add
out
fwait
shl
mov
xchg
push
stos
mov
call
out
lcall
repnz
clc
and
sub
mov
pushf
cmp
mov
push
mov
fs
or
xchg
dec
mov
filds
add
xchg
pop
call
mov
sbb
cmpsb
dec
lahf
lods
and
push
sub
pop
and
dec
call
jge
add
or
hlt
sbb
shrl
xchg
cld
xchg
or
add
shll
in
pop
lret
sahf
add
ficoml
lods
loopne
push
xor
cmpsl
sbb
clc
into
push
out
lcall
cmp
dec
mov
shll
int3
adc
ret
imul
js
xor
mov
sub
dec
ss
call
push
loop
dec
push
cmp
add
rorb
fimull
sbb
pop
sti
pop
or
test
xchg
jo
sbb
xchg
in
pop
es
push
fisttps
mov
ret
pop
xor
int3
mov
je
jb
into
gs
mov
insb
iret
rcrl
push
sbb
mov
jle
leave
scas
call
jg
movsb
or
or
or
cld
add
dec
and
arpl
push
mov
inc
mov
imul
sti
test
cmp
push
in
jg
add
fucomp
sub
mov
aas
cmpl
jl
or
jno
fdivs
ja
cmp
je
aad
lret
adc
mov
xchg
jns
stos
jnp
aam
sti
imul
dec
sub
cmpsb
cmpsl
inc
repz
cmpsb
ljmp
cmp
jle
sbb
into
adc
adc
inc
into
mov
adc
je
inc
cmp
add
outsl
outsl
push
fwait
movsl
xacquire
jg
inc
add
cld
inc
sarb
nop
in
pop
test
xor
fidivrl
dec
xor
ret
mov
jmp
cmp
cwtl
sub
cmp
mov
push
dec
pop
xchg
out
jo
push
adc
stos
mov
mov
mov
inc
cmp
add
bound
mov
rclb
adc
jmp
mov
inc
push
pop
push
je
xchg
sahf
in
mull
fcmovu
add
pop
into
int
xor
push
push
rcrl
push
lods
pusha
push
roll
mov
xor
in
mov
and
dec
push
rclb
in
loope
add
fstpl
iret
sub
int3
test
pushf
outsl
mov
push
inc
in
les
cld
fwait
out
mov
daa
cmp
sbb
xor
lods
jp
bound
xchg
out
sub
test
shlb
mov
cmc
insl
cmp
popf
cmpsb
mov
jae
imul
les
sti
pushf
adc
inc
ja
jne
xchg
cmpl
pop
cmc
and
mov
negl
xchg
adc
mov
mov
cld
and
loopne
mov
or
pop
aas
adc
mov
mov
cmp
ss
cmp
push
cmc
loop
faddl
jl
pop
mov
jns
xor
sbb
push
xchg
sub
jno
mov
call
outsl
fnstcw
cmp
cld
movsb
in
mov
xchg
fimull
xchg
xorl
daa
test
lret
roll
xor
cmc
sbb
adc
mov
lret
push
jp
sub
and
mov
xor
pop
rcll
imul
xchg
es
push
sti
xor
push
les
cld
faddl
mov
push
sub
dec
aas
into
jns
mov
inc
add
sti
cmp
sub
inc
mov
cmp
fwait
mov
sbb
daa
jb
dec
push
daa
and
inc
and
xchg
mov
lods
mov
out
xor
loope
xor
add
adc
cltd
out
fimull
adc
mov
sbb
mov
outsb
popf
inc
ss
xchg
cmp
js
inc
mov
cmp
shll
or
jbe
mov
lret
orl
loope
jo
dec
pusha
jb
clc
jge
sti
dec
outsb
out
mov
inc
jb
and
xchg
ret
cmp
sub
mov
ljmp
mov
jecxz
push
xchg
adc
fisttpl
out
inc
cmp
pop
xor
or
pop
repnz
dec
cmp
je
daa
fwait
outsb
adc
js
in
stos
aas
shl
xchg
pop
mov
inc
pusha
pop
iret
iret
mov
je
aaa
jns
popa
dec
push
sti
sub
or
sbb
and
mov
mov
mov
aam
lock
push
ficoml
rcll
mov
in
sub
les
mov
xor
out
call
lock
and
mov
xchg
movsb
cmpsb
shrb
mov
daa
aaa
mov
dec
movsb
in
inc
adc
pop
jl
in
sar
sti
mov
cmpl
cltd
push
cmp
mov
movsl
add
daa
addb
mov
mull
cmpl
lret
mov
stc
ret
or
mov
cmp
jne
push
or
rcrl
mov
outsb
dec
push
xchg
in
inc
aad
out
push
adc
jno
inc
ror
jo
rcrl
mov
xorb
inc
dec
clc
xchg
out
sbb
jnp
jg
repz
jbe
jbe
sti
push
fildl
shlb
dec
pop
into
out
shrl
out
cli
stos
pop
ds
xchg
push
hlt
sahf
jl
or
cmp
xchg
nop
add
pop
mov
mov
divl
sti
xor
in
mov
test
push
lds
mov
push
inc
cmp
xchg
aaa
pop
sbb
dec
dec
add
call
cld
adc
push
inc
sbb
inc
sti
push
sbb
sub
arpl
inc
imul
jge
sahf
loopne
add
imulb
mov
push
cltd
sub
or
lods
loopne
jg
cmp
or
adcl
pop
jb
sub
ret
inc
jl
les
and
mov
jnp
test
imul
sub
jmp
into
jecxz
popf
xchg
dec
in
mov
out
cmpsb
mov
mov
xor
push
adc
outsb
cmp
repz
in
pushf
scas
mov
xchg
xor
nop
inc
out
rclb
pop
cmpsl
jo
call
xlat
xchg
enter
test
xlat
leave
lret
mov
pop
icebp
cltd
mov
je
jle
and
adc
xchg
gs
mov
aad
in
push
inc
in
imul
sbb
ret
jge
adc
xor
test
sbb
cmpsl
call
imull
mov
lret
pop
jns
movq
push
mov
rorb
dec
mov
into
mov
jnp
xor
push
int
dec
aas
test
jnp
pop
stos
aaa
jnp
inc
insb
mov
push
jle
sub
mov
and
scas
or
sbb
dec
and
or
sbb
and
sbb
sbb
xchg
cmp
sbb
stos
push
pop
xor
movsl
xlat
out
push
mov
cmc
fwait
add
mov
or
and
fwait
out
jmp
ret
stos
xor
or
sub
fildl
sub
xchg
mov
test
mov
xor
xchg
jmp
xor
jmp
rolb
cmpsl
outsl
jl
pop
jmp
cltd
fnsave
js
es
fdivr
xor
imul
popf
mov
mov
scas
jnp
test
out
or
mov
jl
hlt
cmpsb
add
push
in
pushf
fsts
add
fs
mov
sbb
mov
mov
sbb
add
sub
test
lods
aas
lret
gs
jno
lret
add
shll
sbbb
movsl
bound
and
imul
movsb
add
rcrl
daa
xchg
add
xor
mov
xor
sahf
cmc
cmpsl
and
shlb
iret
xor
nop
pop
clc
cltd
fdivrs
sbb
rcrb
and
out
xor
inc
dec
stos
ret
push
pop
jge
mov
int3
repz
aas
pop
cmp
fsubrl
aam
lods
inc
xchg
pop
pop
or
negl
sub
mov
fucomp
inc
rol
mov
dec
mov
adc
sti
pop
adc
mov
rcrb
in
mov
add
cwtl
test
mov
bound
rcrl
sbb
inc
mov
fnstenv
sbb
dec
shll
xchg
dec
in
dec
jge
lods
push
jns
mov
pusha
filds
int3
ficomps
fistpl
xor
jns
pop
dec
arpl
addl
bound
push
iret
repz
scas
pop
add
ds
out
sbb
mov
xor
fsubrp
fcompl
test
iret
jecxz
sub
rcr
stc
mov
sub
mov
push
es
cmp
push
test
xor
and
xor
fdivr
push
cmp
out
mov
xchg
out
xor
cmp
xlat
push
test
incl
xlat
add
mov
cmp
or
in
sub
jecxz
out
mov
sbb
adc
out
daa
mov
or
repnz
or
cmp
jmp
cmpsl
xor
ret
shll
fs
lret
pop
mov
shll
call
cmp
and
mov
sub
push
stos
push
sahf
or
jne
stos
sbb
clc
nop
shlb
fstpl
movntq
stc
ret
dec
stos
ret
add
lds
das
out
test
test
repnz
ja
pop
test
jbe
lret
inc
lahf
inc
lahf
and
loope
pusha
cltd
loop
lds
and
cltd
mov
adc
pop
fs
xor
popa
outsl
or
loope
mov
roll
icebp
and
sbbl
mov
cmpsl
xchg
into
inc
stc
stos
xchg
jne
insl
sti
jecxz
test
pop
vpacksswb
cmp
pcmpeqb
sbb
aad
pop
cmp
aam
mov
sbb
push
jbe
and
aam
dec
push
insb
mov
movsb
sbb
in
ds
lahf
cmpsl
add
sub
jp
ds
push
test
add
mov
pop
insb
and
push
xor
cltd
fwait
repnz
scas
jns
iret
inc
std
cld
pop
aas
sub
rcrl
xchg
mov
rorb
add
dec
jmp
or
mov
mov
push
aaa
jp
and
mov
outsl
int
iret
das
mov
ret
pop
jns
and
mov
cmp
jno
push
es
push
leave
mov
mov
jmp
sub
adc
rcrb
xor
fisubrs
insl
jle
data16
pop
mov
adc
ja
data16
inc
psubd
int
cmp
es
stos
mov
xchg
cwtl
outsb
xchg
add
cs
popf
xor
jns
inc
repz
enter
mov
pop
je
push
xchg
clc
cmpl
and
je
cmp
pop
sub
pop
cmpsl
dec
cmp
mov
std
mov
lods
scas
not
xor
pop
or
sub
inc
sbb
loop
dec
xchg
or
xor
inc
lret
stos
int3
fwait
pop
rorb
jle
pop
ja
loope
into
shrb
out
dec
loope
sub
popf
xchg
shll
fisubl
addr16
xchg
in
shrl
sub
pusha
cmp
inc
pop
lcall
or
cmpsl
andb
inc
test
xchg
add
adc
push
lea
and
xlat
jge
xchg
jo
jb
mov
jmp
pushf
mov
or
cmp
jno
and
ja
jp
inc
cmpl
and
sarl
add
pop
or
or
mov
test
push
push
mov
orb
call
push
push
adc
inc
or
jne
fidivrs
bswap
mov
insl
out
fistl
daa
test
add
jb
push
mov
xchg
cltd
inc
loop
int
xchg
sahf
out
popf
sbb
sbb
loopne
pop
subb
int3
mov
jmp
test
pop
lret
hlt
dec
lahf
repz
jb
sbb
call
inc
fstl
call
ljmp
sahf
xor
in
mov
push
std
xchg
out
mov
xor
pop
jp
pushf
cltd
add
ljmp
sbb
test
popa
push
adc
dec
aad
inc
mov
aas
in
roll
sub
sub
vmread
ret
in
test
pushf
sbb
xor
icebp
xor
inc
and
sbb
add
sbbl
stos
mov
cwtl
mov
mov
dec
fmuls
and
jb
jp
std
mov
sahf
sbb
leave
aas
push
mov
in
jecxz
pop
mov
in
rolb
movsb
xchg
xchg
repz
mov
sub
mov
mov
call
ja
icebp
hlt
add
inc
pop
xchg
jne
push
jbe
mov
inc
and
adc
xor
ror
jle
jl
jno
dec
push
imul
mov
jge
adc
je
pusha
and
cltd
push
in
hlt
mov
xchg
int
imul
fwait
rorb
ficomps
dec
sub
jecxz
pop
lret
push
inc
pop
fisttps
idivl
inc
dec
icebp
out
pop
inc
das
jns
sti
outsb
mov
mov
jbe
cmp
scas
xchg
mov
xor
pop
ss
mov
and
imul
cmp
jmp
xor
sub
enterw
fcomi
push
fdivl
xchg
bound
mov
add
insl
shlb
popa
rclb
bound
daa
xchg
insl
sub
mov
dec
popf
mov
lea
mov
sbb
aam
imulb
inc
xchg
dec
pop
push
std
out
shl
pop
pop
jle
enter
dec
test
pop
jnp
cmpb
push
pop
popa
ja
xchg
sbb
sub
pop
ds
mov
shrb
push
or
jb
or
mov
shlb
ret
andl
outsl
xor
mov
add
ficomps
fs
xor
outsl
dec
xor
mov
lcall
inc
sbb
int
jecxz
mov
cmp
lret
popa
dec
ret
ss
mov
stc
cltd
xor
cmp
ljmp
enter
or
ljmp
pop
adc
mov
sub
adc
outsb
add
push
ds
mov
sub
mov
fs
xor
ljmp
inc
sub
adc
dec
xchg
pop
lock
sub
fmul
sub
repz
push
gs
adc
out
ror
iret
jbe,pn
sub
lock
test
dec
insb
arpl
ficompl
and
pusha
aad
mov
lods
mov
mov
stc
insb
jmp
pop
popf
dec
sub
cld
test
push
mov
int
cmp
scas
jae
popf
sar
dec
lcall
push
pop
fs
fwait
mov
outsl
mov
jbe
mov
outsb
jne
es
bound
mov
push
insl
jno
popa
jno
shll
jmp
sbb
dec
push
jecxz
faddp
pop
dec
int3
dec
adc
sahf
in
insb
fsubl
inc
mov
into
cmp
mov
cwtl
cltd
xchg
rol
icebp
aad
ds
mov
adc
gs
sbbl
cmc
fstl
xchg
pop
inc
mov
and
out
push
lret
lea
xor
dec
mov
clc
insl
movsb
stc
aam
mov
sbb
pop
jmp
or
mov
push
imul
mov
push
push
mov
or
cmp
add
ret
arpl
lahf
in
xchg
xchg
dec
int
repz
lret
push
lods
call
sbb
stos
aam
cmp
sbb
rol
mov
imul
adc
cwtl
lods
test
clc
jmp
cmp
sti
lock
cmp
pop
sbb
push
imul
jbe
andl
inc
pop
stos
adc
sbb
inc
clc
call
fiadds
and
ja
int3
cltd
cmpsl
test
in
add
mov
shll
mov
push
sub
imul
rcrb
dec
into
sti
adc
push
gs
and
arpl
out
insl
in
inc
jmp
and
std
cmpb
cli
inc
sbb
imul
inc
dec
lock
jo
mov
mov
fnstcw
jp
lods
add
sbb
mov
inc
xchg
loop
or
bound
cmpsb
movsb
jno
mov
popa
inc
in
or
mov
scas
lds
cs
push
andb
sbb
sahf
xlat
dec
jb
int
cmp
mov
jae
fimuls
jns
pop
or
je
out
mov
inc
push
rol
xchg
das
insb
jl
inc
adc
icebp
dec
inc
xlat
xor
gs
push
imul
incb
arpl
jo
cmp
dec
and
repnz
inc
ret
mov
mov
inc
fiadds
stc
cld
and
push
fistl
push
jo
xor
fistpll
in
mov
shlb
std
fucomi
sbb
xor
loope
lock
and
inc
sub
aas
rorb
and
cmp
ljmp
fidivrl
pushw
sbb
in
push
push
mov
sub
mov
movsl
roll
clc
and
mov
cmp
mov
es
xlat
lahf
nop
aaa
decb
add
jge
mov
testb
popa
sbb
call
or
flds
iret
loopne
sub
or
gs
addb
xor
inc
ja
fistpll
iret
push
push
cmpsb
stos
mov
scas
mov
dec
push
roll
or
mov
out
and
sub
dec
dec
mov
lods
int3
dec
sub
test
pop
test
mov
stos
daa
xchg
pop
lock
pop
add
push
and
sti
repz
jnp
int
stos
ljmp
in
mov
out
outsb
fildll
push
cmp
xchg
mov
sub
push
clc
loopne
and
loop
mov
inc
int
jg
adc
jnp
push
push
enter
outsl
mov
fbstp
out
or
mov
sbb
sbb
loope
xor
ja
dec
and
push
adc
mov
pop
stos
push
cmpsl
stos
aam
pushf
cwtl
pop
test
pop
add
je
lret
int3
sti
and
mov
insb
xchg
jb
pop
add
push
mov
imul
shll
aas
push
dec
mov
cld
lret
ds
roll
in
mov
nop
xor
rclb
or
push
push
mov
adc
jnp
mov
je
push
ja
xor
add
lods
aam
jb
iret
stc
int3
xchg
cli
imul
xor
dec
arpl
sti
sub
sbb
mov
push
mov
dec
repz
cmovno
stc
aam
ss
mov
out
lcall
mov
cs
es
jb
nop
push
loopne
jae
inc
lds
and
sub
mov
mov
jae
jmp
imul
push
cmc
stos
adc
xor
addr16
or
aad
sub
packssdw
jmp
daa
pop
fildll
lock
or
add
jns
inc
js
mov
push
mov
push
cmp
mov
data16
xchg
or
sahf
incl
or
loope
lock
hlt
aaa
inc
pusha
xor
cmc
ja
scas
xchg
add
pop
xchg
mov
aas
hlt
mov
mov
inc
or
adc
lcall
adc
cli
sub
dec
cmp
xchg
jmp
mov
fsubrs
js
xor
mov
leave
xlat
test
addr16
inc
sub
jbe
nop
movsl
int3
dec
es
jno
pop
sub
mov
jnp
push
lock
mov
jecxz
je
add
roll
or
lret
sahf
leave
adc
push
inc
cmp
cmpsl
sahf
jl
ds
push
xchg
adc
lds
imul
mov
pushf
es
out
xor
and
mov
add
xchg
sub
hlt
mov
sub
sahf
and
mov
cmc
iret
pop
lahf
inc
out
lcall
ljmp
test
pop
orb
into
push
fsubrl
scas
inc
dec
push
data16
sahf
push
hlt
cmp
int
cld
and
inc
push
mov
adc
dec
ret
fistpl
jmp
insl
insl
leave
pop
add
ficomps
lahf
cmp
inc
stos
and
push
sub
fs
test
leave
inc
or
jecxz
icebp
loop
sbb
or
icebp
jns
dec
cmp
call
out
mov
push
xor
push
je
push
cmp
aad
or
add
mov
in
ljmp
in
xor
mov
loop
push
dec
xor
cwtl
cmc
fdivl
mov
push
cmc
ljmp
jge
mov
pusha
test
inc
mov
lret
xchg
lret
add
loope
lods
jmp
sahf
jno
sar
sbb
xchg
outsl
pop
jnp
pop
mov
jbe
jp
sub
lods
int
sbb
andl
or
jno
out
call
and
in
movsl
orb
sbb
in
pop
fldenv
inc
inc
dec
inc
pop
cli
cmp
dec
int3
lcall
add
clc
dec
inc
push
into
add
inc
xor
and
inc
testl
push
inc
mov
jno
lret
aaa
test
dec
pop
pop
les
fistl
jl
andb
lea
mov
popa
leave
jp
lock
mov
sbb
negl
fnstsw
mov
clc
aaa
cmp
insb
dec
out
rcrl
ds
mov
mov
pop
fldl
xchg
push
cltd
inc
int3
fdivrs
cmp
or
movsb
mov
stc
sbbl
fmuls
sub
mov
lea
std
test
pop
scas
cs
pop
js
out
cbtw
xchg
xchg
jmp
mov
xlat
cmc
in
int
clc
scas
cld
mov
aam
nop
and
mov
jbe
pop
add
pop
and
dec
inc
mov
mov
cmp
or
iret
jb
pop
push
outsb
sbb
push
inc
cmp
inc
test
lea
je
xlat
data16
xchg
jb
sti
sub
inc
mov
mov
sbb
dec
or
lods
cmp
loopne
loopne
gs
mov
push
inc
ja
icebp
leave
out
out
shrb
dec
ficoml
xchg
lea
in
push
fmul
mov
loopne
shl
dec
pop
es
mov
lock
daa
sbb
and
dec
sbb
push
aas
sub
sbb
pop
mov
mov
test
packuswb
gs
mov
hlt
and
xchg
inc
adc
loopne
dec
add
mov
xchg
mov
movsb
sarb
pop
stc
ljmp
flds
aaa
jns
lods
sbb
fisubs
cwtl
mov
addr16
repnz
jl
xchg
aas
jp
sub
popa
xchg
mov
inc
xchg
clc
enter
cmp
pop
shl
push
lods
out
and
mov
dec
ja
out
in
sub
add
mov
mov
xor
mov
push
pop
jo
and
inc
sbb
dec
imul
push
mov
icebp
xor
push
lret
subb
insb
jecxz
sbbb
sub
cmp
bnd
sbbb
shll
bnd
rcll
repz
ja
popa
add
pop
scas
or
pop
mov
dec
ret
inc
outsl
add
pusha
pop
inc
faddl
sarl
in
call
push
loope
clc
mov
xchg
pushf
mov
fwait
repz
ret
and
mov
mov
jge
das
js
outsl
push
sahf
dec
xor
lret
xor
aaa
add
iret
addr16
cmpsl
andb
insl
mov
movsl
loop
test
xchg
jle
cld
cmp
adc
inc
xchg
pop
aas
jle
rclb
mov
mov
mov
dec
inc
inc
mov
mov
in
cmpsl
pop
addr16
fucomi
mov
dec
or
cmp
push
mov
notb
movsl
out
add
xor
fnstsw
pushl
je
stos
xlat
cld
pusha
aad
inc
lock
sbb
jno
insb
mov
push
cmp
inc
in
xchg
sub
jbe
mov
es
loope
mov
xchg
pop
pusha
in
xchg
xor
mov
fcoms
or
movsb
mov
jae
dec
mov
xchg
or
addr16
push
and
ja
fincstp
mov
call
movsl
adc
gs
sti
add
cmp
pop
jge
lahf
repnz
movsb
negb
jge
sbb
jl
loope
cltd
int
dec
sub
flds
jnp
frstor
pop
enter
ret
pushf
pop
pop
dec
xchg
sub
in
rcrb
push
xor
sub
ret
xlat
loope
sub
pop
imul
sub
popf
bound
sbb
iret
stc
ljmp
in
cltd
gs
ss
cmp
inc
sub
cmp
and
add
inc
ret
xchg
in
out
je
clc
call
pop
daa
mov
mov
dec
jmp
xor
arpl
lret
push
scas
rcll
push
jl
mov
in
scas
sbb
scas
xchg
adc
movsb
insl
ds
or
into
dec
shl
pop
sbb
and
sbb
cmovnp
dec
incb
or
cmpsb
push
roll
mov
mov
mov
jnp
or
adc
rclb
outsb
frstor
test
cltd
dec
idivb
je
xchg
stc
dec
fbstp
mov
test
xchg
cmpsl
jp
add
pop
xor
aad
jne
xor
fcoml
pop
push
jno
shl
and
sbbl
pop
adc
popa
cmp
cmp
push
push
or
ds
and
mov
push
rcrb
push
sti
push
mov
pusha
and
imul
mov
mov
lahf
je
addr16
xor
mov
test
cmp
outsb
jae
dec
insl
loope
call
sub
dec
loopne
cmc
sub
and
in
pop
movsb
outsl
sbb
lret
stos
push
shlb
and
imul
test
xor
flds
jo
sti
in
ds
sbb
fisttpl
iret
in
xchg
cli
push
subl
xchg
adc
sub
or
pop
lret
push
out
mov
push
aam
leave
add
repnz
cmp
mov
out
icebp
or
jbe
fistpll
stos
hlt
cmp
in
sub
pop
jbe
shr
es
mov
xor
pop
pusha
xor
cli
lds
in
sub
icebp
jnp
dec
in
cmpsb
js
scas
jecxz
nop
fildll
pop
decl
lods
imul
outsb
popf
call
dec
mov
pop
jg
clc
add
sub
loop
test
cld
enter
sub
sbb
sbb
imul
inc
and
mov
ficoml
movsl
xchg
xor
lea
xchg
jecxz
rcrb
pop
repz
test
dec
loopne
lock
adc
adc
sub
enter
loop
xchg
add
or
jo
into
mov
es
outsl
mov
adc
jmp
lahf
mov
fdivrs
mov
mov
xchg
test
and
iret
sbb
adc
lret
pop
ljmp
jmp
sbb
mov
mov
shrb
inc
mov
std
push
fimuls
pop
out
adc
add
jns
mov
clc
inc
lret
mov
jle
xlat
ficompl
pop
sub
or
cmp
jne
aad
das
jecxz
mov
xchg
jge
jb
lods
xchg
adc
test
lods
mov
fsubrs
cwtl
adc
aas
push
push
mov
pop
int
mov
and
mov
mov
notl
sbb
movsb
mov
adc
push
fwait
mov
dec
mov
push
push
jle
xor
gs
hlt
sub
push
es
mov
pusha
fs
push
cmpsb
or
cmp
cmp
pusha
lods
scas
push
popa
fnstsw
lea
int
scas
loop
xor
es
jl
daa
dec
insb
cltd
or
outsl
mov
cmp
dec
push
mov
mov
mov
scas
and
mov
dec
xor
xchg
sbb
sub
lea
icebp
or
ret
dec
jle
scas
pop
add
push
mov
xor
fucomi
or
sub
add
push
loope
mov
mov
cs
in
xchg
mov
test
lcall
movsb
popf
adc
push
mov
iret
mov
cmpsb
cwtl
test
and
mov
jno
cmc
add
or
adc
roll
punpcklbw
sub
or
into
push
or
mov
js
pop
shlb
dec
adc
mov
jmp
mov
pop
dec
jp
jge
adc
stc
std
addr16
fbstp
pop
adc
les
mov
or
add
jp
ret
rcrl
in
cmp
leave
inc
enter
cli
sbb
andb
int
test
pushf
xchg
fistpll
cwtl
mov
adc
in
and
xchg
jecxz
test
in
adc
shr
sbb
sbb
inc
sarb
adcl
sub
adc
mov
ja
test
mov
lds
in
data16
cmpsl
imul
mov
nop
repz
push
push
aam
nop
push
ljmp
out
rcll
mov
scas
sbb
dec
test
pusha
loope
daa
pusha
lahf
stc
jae
inc
int3
inc
jg
pop
test
adc
push
mov
outsb
adc
sahf
outsl
imul
out
pop
aaa
test
hlt
std
outsl
pop
pop
jae
mov
xchg
imul
fnstenv
jge
push
jl
mov
and
pop
clc
and
adc
scas
lahf
sarb
dec
jo
int
pop
daa
lret
stc
rclb
pop
loopne
or
jns
ss
inc
pop
aas
inc
or
loope
ds
jmp
popf
add
xor
enter
lcall
or
xlat
adc
stos
mov
push
jecxz
test
data16
mov
bound
mov
jp
lods
imul
adc
fincstp
fdivl
lods
mov
dec
or
lahf
rorl
stos
or
push
ds
mov
subb
data16
push
pop
lods
add
roll
jg
sub
mov
xchg
jge
cmp
dec
adc
jae
jg
push
stc
nop
jge
adc
fwait
mov
int
pop
adc
notb
dec
push
sub
sub
jge
push
inc
push
repnz
sub
sti
imul
sahf
in
push
mov
or
inc
rorb
push
pop
aaa
push
subl
and
mov
pop
jb
mov
inc
std
push
cmp
xchg
cmp
int3
inc
es
cmp
jle
lea
loope
cmc
out
jle
inc
punpcklbw
jg
in
iret
hlt
mov
inc
jb
fdivrs
inc
shlb
fcoms
push
xchg
call
pop
sub
xchg
xchg
mov
sub
mov
stos
subps
repnz
push
clc
push
iret
das
adc
ja
fsubl
test
jecxz
mov
add
xchg
call
mov
out
mov
andl
mov
mov
push
mov
xchg
adcb
mov
ret
xchg
dec
xchg
mov
push
addl
nop
xor
ds
push
or
xchg
clc
mov
ds
mov
lret
pushf
fcmove
sub
and
and
inc
lods
js
jmp
lret
cmpsb
jae
cwtl
or
aas
xchg
loop
add
jg
inc
xlat
sbb
pop
inc
cmp
mov
push
mov
push
push
sub
jb
pop
jo
icebp
andb
fucomip
clc
mov
push
xchg
fcoml
jb
xchg
mov
mov
gs
sbb
roll
and
cltd
call
adc
adc
and
xor
xchg
xchg
out
pmullw
repz
mov
ss
cs
aaa
test
jne
cwtl
popa
rcrl
xlat
xchg
mov
prefetch
or
mov
push
sarl
fisubl
rclb
jnp
push
mov
jmp
adc
sbb
mov
iret
xchg
mov
jns
in
mov
xchg
lea
jle
and
outsl
gs
sub
xchg
jmp
out
ss
and
or
dec
and
ret
ret
not
add
cld
in
and
push
stos
xor
adc
nop
negb
jle
sub
and
and
insb
cli
sarb
cmc
inc
cmp
loop
sbb
push
ja
sub
jecxz
mov
minps
xor
push
inc
sub
push
cld
fsub
add
fdivrp
xor
test
jecxz
test
jne,pt
xchg
fmull
ds
imul
xchg
pop
ror
loop
push
aaa
adc
stc
sbb
daa
sbb
daa
outsl
mov
xor
lret
push
mov
mov
adc
xchg
inc
or
and
daa
sbb
andb
xor
dec
mov
mov
outsl
rcll
lds
jg
testb
push
adc
popf
mov
sti
bound
fs
or
lret
mov
xchg
jo
cmp
cmp
inc
pop
pusha
or
or
add
ret
push
insb
add
test
mov
shl
stc
xor
sub
jmp
xor
insl
scas
bnd
addr16
or
pop
push
push
arpl
stos
mov
cmc
fdivrs
xlat
dec
push
daa
inc
adc
out
cmc
push
mov
addb
jecxz
mov
jns
mov
and
and
xchg
arpl
dec
adc
mov
clc
aas
mov
sbb
loope
mov
movsb
dec
lret
mov
xchg
mov
lds
mov
adc
add
xchg
repz
or
mov
fsts
mov
jae
inc
mov
fwait
xor
jne
inc
sub
sbb
cmc
sbb
fldt
xor
push
push
stos
mov
jmp
sub
mov
les
adc
and
mov
jmp
pop
test
xchg
arpl
push
jne
pop
xor
es
dec
dec
lret
xchg
pop
mov
mov
push
aam
stos
sub
lret
pop
sbb
mov
dec
xor
jl
jl
loopnew
cmp
or
imul
ljmp
jl
xchg
push
pop
sbb
data16
xchg
xchg
fmulp
popf
pop
jecxz
movlps
inc
outsb
cmp
mov
iret
scas
ret
add
xor
push
jns
sti
jp
sbb
fsubrl
mov
and
fisubs
mov
dec
scas
frstor
cmp
mov
lods
xchg
dec
mov
jae
dec
jmp
ret
mov
cld
and
fidivl
std
incb
ds
jp
mov
xor
mov
mov
sahf
xlat
mov
shl
adc
jne
sbb
stc
loop
stc
add
sub
sub
adc
sbb
cli
cmp
ja
pop
aas
jge
call
inc
arpl
dec
adc
loopne
adc
in
popf
pop
repnz
and
mov
mov
test
jb
xlat
push
outsl
cmp
cli
add
mov
ret
mov
sub
insb
and
mov
test
int3
xchg
sub
rcll
loopne
dec
mov
outsb
cwtl
sbbb
and
cmp
and
dec
fcmovu
or
sub
adc
nop
ljmp
mov
jmp
or
jb
lret
aad
adcb
sub
fisttpl
or
inc
mov
testb
adc
inc
pop
aaa
add
adc
fcmovnbe
mov
mull
cmp
cwtl
pop
cmpl
inc
jae
fs
mov
xchg
or
in
inc
push
add
insl
pop
push
xchg
add
pop
jns
inc
xor
jle
dec
in
cmpb
and
lods
jne
les
lahf
ss
mov
ficoms
popa
out
repnz
test
js
mov
lret
add
cmp
sarl
pop
sbb
idivl
lods
icebp
push
jl
dec
ja
pop
cmc
push
and
dec
mov
push
daa
sbbb
arpl
jnp
sarl
fidivl
push
mov
jp
aam
jl
dec
frstor
inc
cltd
mov
stc
stos
out
in
outsb
cwtl
mov
jb
xor
inc
mov
mov
sbb
es
mov
bound
xchg
sub
mov
loope
sub
fnstenv
enter
and
push
das
les
mov
or
loopne
lea
jae
mov
and
and
das
ret
push
fsubrl
or
mov
test
mov
call
mov
xor
cmpl
stos
xor
mov
fisubs
jbe
test
pop
dec
movsb
cltd
xlat
sbb
shr
flds
or
scas
dec
cmp
sub
stc
pusha
insb
adc
push
jge
lods
test
dec
in
dec
jecxz
mov
or
inc
rorl
fs
pop
sub
pop
add
test
jbe
cmp
add
and
es
aad
lret
cmpsb
pushl
lahf
or
hlt
push
adc
cltd
imul
dec
jp
int
inc
ljmp
sub
mov
and
add
mov
cwtl
sub
jle
jbe
daa
add
pop
add
jg
cs
push
pushf
ss
outsb
inc
mov
jnp
in
jbe
pop
jecxz
into
sbb
lods
pop
out
mov
es
imul
inc
cmp
into
lea
cwtl
and
and
inc
sbb
outsb
int3
icebp
sub
push
fldenv
cmp
mov
mov
hlt
sti
jbe
mov
bound
push
fimuls
push
or
lahf
incb
push
adc
cld
and
int3
adc
or
and
add
movsl
test
lods
pop
mov
scas
addr16
aam
jle
sbb
iret
adc
sbb
daa
inc
insl
lret
adc
dec
imul
pusha
cmp
xchg
jo
xor
xor
jl
sbb
xchg
out
fildll
mov
jl
lods
jp
mov
or
sbb
sbb
push
sub
or
add
mov
push
ret
shrl
fnstsw
lds
lahf
sub
dec
adc
add
int3
xor
ficoml
mov
xchg
loope
test
aam
mov
mov
aas
adc
cmp
hlt
push
lods
adc
pop
push
movsl
mov
repnz
mov
fmuls
and
pop
add
adc
cmp
sbb
aam
sti
sbb
push
sahf
inc
jbe
rorb
pop
out
push
out
jecxz
in
cmp
imul
loop,pn
enter
pop
and
inc
sub
and
lock
and
mov
mov
mov
lahf
shlb
push
sub
dec
lds
test
test
pop
dec
add
adc
lret
mov
cli
mov
pusha
xchg
cmc
jl
test
push
jmp
push
lds
sbb
xor
push
xchg
movl
lock
dec
push
test
mov
fiadds
cwtl
xor
fs
shll
mov
ret
ljmp
jo
inc
xchg
jno
pop
into
cmpsl
xchg
movsb
mov
cmp
fsubrs
jl
negb
aas
lods
adc
sbb
inc
dec
ljmp
inc
ret
and
mov
jb
push
in
mov
clc
daa
cs
push
dec
pushf
push
loopne
std
inc
pop
lea
lods
out
jne
stc
cmp
add
ret
dec
pop
shll
sahf
or
in
mov
mov
sarl
imul
aas
pushf
push
cmc
mov
into
cmpsl
aad
adc
sub
gs
in
push
jnp
es
subl
fmull
ja
mov
xchg
add
sub
lcall
pusha
and
outsb
mov
or
xchg
mov
mov
es
outsb
aaa
insb
test
sbbl
mov
popf
dec
lret
fcmovbe
push
push
pop
jecxz
jo
ret
movsb
or
frndint
in
lcall
push
int
outsb
mov
inc
insb
jns
dec
inc
inc
rcrl
cmp
push
dec
enter
shl
in
enter
mov
pop
cmc
out
dec
lcall
jno
adc
and
push
popf
push
iret
aad
cmp
cmp
fsubrl
pop
cmc
pusha
mov
sbb
mov
enter
imul
jns
push
sub
loope
adc
divl
lods
cli
jecxz
jnp
and
repz
inc
dec
sbb
ss
mov
out
mov
insb
push
mov
std
cmp
sub
in
sbbl
cmp
push
sub
push
imul
das
xchg
xchg
pop
sub
dec
imul
mov
fs
mov
mov
dec
pop
test
push
pop
inc
fdivs
rep
in
push
sbb
lock
lods
lret
out
jl
cmc
pop
adc
sti
and
xchg
loopne
add
stos
gs
les
mov
and
jl
fdivs
pushf
add
cmp
les
push
cmpb
add
adc
mov
mov
xchg
mov
popl
ja
lret
rcl
bound
aad
cli
or
fdivs
movsb
inc
add
inc
pop
pop
ret
sti
mov
lret
cmc
insl
and
jl
in
jnp
dec
repnz
mov
cwtl
lods
add
mov
rcll
sub
or
xchg
mov
aad
xlat
addl
cmp
and
mov
out
inc
push
inc
xchg
jmp
adc
cmp
cmp
dec
sub
insl
iret
jb
cmp
in
mov
pop
mov
pop
adc
popa
lcall
mov
or
bound
insl
lods
rcrb
pop
inc
mov
dec
pushf
pop
nop
inc
push
pop
lahf
jno
xchg
push
push
mov
mov
pop
mov
into
out
add
cmp
rorl
jne
sbb
dec
mov
cmp
stos
push
stos
je
flds
daa
fidivl
sbb
out
jo
test
cs
and
push
lea
sahf
jb
mov
mov
loope
push
arpl
xor
pop
mov
outsl
pop
std
mov
jmp
jg
xchg
movsb
sbb
xchg
ret
sub
out
mov
jne
loop
cmp
push
stc
ret
jmp
mov
inc
jo
negl
mov
dec
xlat
lcall
out
push
xor
fmul
ja
imul
subl
or
dec
out
lds
xor
pop
dec
jle
stos
sub
es
in
mov
pop
inc
mov
out
call
ror
ja
sub
into
lock
lds
pushaw
roll
inc
jge
js
stos
repnz
out
jecxz
mov
jp
je
sub
in
pop
sar
inc
pop
clc
loopne
adc
cmpsb
mov
mov
pusha
es
int
daa
loopw
dec
bound
mov
test
inc
mov
mov
das
or
subb
mov
dec
add
sub
mov
push
movsb
repz
arpl
ds
pop
adc
jne
cwtl
xchg
jmp
jnp
scas
mov
loopne
je
ficoms
push
dec
arpl
push
and
fnstenv
jecxz
jo
push
push
call
mov
stos
gs
arpl
repz
mov
mov
fldenv
or
jmp
and
test
jb
in
adc
loopne
mov
lds
fwait
and
pop
movsb
fsubp
mov
jge
rorl
or
fmuls
scas
das
outsl
dec
shll
jmp
inc
gs
xchg
cmp
inc
sbb
or
cmpsb
jp
lret
sub
jnp
fwait
jb
add
jns
mov
adc
pop
arpl
sbb
movsb
ja
scas
jmp
add
push
xchg
subl
les
cmpsb
in
cld
stc
mov
insl
aam
cmpsl
fdivrs
fldcw
add
pop
stos
adc
movsb
movsl
push
jg
movl
cmp
fs
cmpsl
xor
dec
pop
stos
or
cmp
fistpll
inc
pusha
adc
shl
ja
or
ret
pushf
cs
sbb
into
push
lea
popf
cmp
and
das
cmp
mov
mov
or
test
dec
lret
xchg
mov
mov
mov
iret
push
je
stc
je
cli
es
mov
addr16
roll
sub
push
fcompp
dec
adc
test
jg
loopne
mov
mov
pop
jae
scas
insl
inc
pmulhuw
add
movsb
ret
dec
push
xorb
insl
xor
and
pop
clc
mov
jne
lods
xchg
test
aas
mov
shrl
dec
das
inc
mov
cmc
cltd
mov
mov
sbb
std
xchg
inc
pop
mov
idivl
xchg
lahf
pop
sub
cmp
mov
push
jno
fs
jnp
and
inc
js
jg
int3
movsb
sub
enter
mov
pop
mov
inc
cmp
inc
xchg
sti
inc
jbe
fs
cmp
js
push
inc
add
mov
xchg
loop
jns
icebp
add
inc
xchg
mov
or
addr16
fldcw
fwait
cltd
sahf
push
xor
ret
push
sub
data16
ljmp
mov
jg
dec
push
mov
cmp
or
in
lock
out
or
imul
out
push
jp
xchg
jno
push
inc
ret
bound
pop
cmp
sub
sbb
push
push
popa
out
pop
jle
xchg
sbb
mov
sbb
dec
mov
xlat
orl
dec
fisubl
jmp
lcall
imul
pushf
inc
in
imulb
aad
push
xchg
push
mov
jno
dec
push
fdivrp
fdivs
sub
xchg
icebp
into
and
aam
mov
enter
push
and
mov
movsb
push
shrb
rcl
std
or
adc
mov
pop
dec
cmpb
or
out
int3
xchg
daa
or
add
push
sub
pop
mov
xor
in
lods
mov
ja
adc
jbe
mov
pop
enter
pop
sti
insl
decb
xchg
push
out
mov
lods
int3
sbb
xor
out
mov
lods
lret
jle
push
test
inc
in
rcr
or
add
add
sbb
xlat
adc
xchg
bnd
imul
dec
xchg
push
inc
mov
xchg
jnp
dec
push
into
inc
fwait
aad
in
int
adc
wrmsr
imul
xchg
incl
cmp
das
fldcw
loopne
fst
inc
rorb
mov
inc
mov
or
and
nop
aam
test
mov
sbb
stc
lds
pop
cmp
cmc
dec
cli
mov
lahf
xor
lret
bound
movsb
and
mov
xchg
lcall
negb
je
es
cmp
xor
repnz
int
mov
mov
in
cwtl
cmp
mov
imul
out
imul
popa
mov
mov
push
pop
sbb
sbb
pop
dec
sub
jecxz
push
std
push
cmp
out
mov
rcr
repnz
mov
or
aad
pop
mov
test
sub
shlb
shlb
out
nop
lea
rorb
movl
ss
mov
jae
xchg
mov
sub
sub
inc
pop
pop
jl
test
lret
enter
cli
mov
pop
ficomps
fildl
or
mov
rorl
push
mov
cmp
cmpsb
es
and
mov
xchg
ss
inc
dec
hlt
leave
stc
push
outsl
outsl
dec
sar
cld
bound
mov
iret
push
adc
cwtl
jne
pushf
jl
jp
int
dec
jmp
jne
xchg
rorb
in
movsl
loopne
sahf
das
js
add
fwait
xor
int3
sub
xor
shll
push
and
dec
out
or
or
xor
jle
jge
call
clc
mov
lret
out
je
outsl
rolb
xchg
sbb
mov
lea
test
cmp
jnp
xor
push
xor
mov
outsb
call
sahf
or
and
imul
insl
outsb
outsl
addr16
mov
jo
mov
mov
push
fdivrs
xchg
jmp
inc
jmp
mov
sub
push
iret
xor
xchg
push
inc
mov
mulb
mov
or
out
mov
mov
mov
shrb
mov
in
fsub
xchg
loope
imul
mov
adc
jg
dec
dec
cmp
je
xor
fcomi
imul
push
incl
lods
xchg
into
in
stos
pop
shll
dec
in
aam
mov
lcall
or
mov
jecxz
xor
xor
sub
inc
mov
in
sbb
ficoml
xchg
jl
xchg
dec
repnz
mov
ds
inc
rclb
or
mov
pop
out
repnz
addr16
push
cld
xor
cmp
inc
test
das
dec
ss
test
and
lret
xchg
lock
push
data16
jb
cld
mov
jge
push
cmp
call
jecxz
sarl
add
pop
je
jns
sbb
mov
pop
sub
lock
lret
cwtl
xor
fs
cmp
xchg
sub
pop
idiv
pop
xor
popa
inc
push
cwtl
std
fsts
imul
divb
or
sti
shrl
xchg
push
shll
int
sbb
out
insb
popf
push
sbb
mov
fisttpl
mov
pop
cmp
sbb
cs
fnstcw
out
mov
cltd
pop
push
xchg
adc
jge
loopne
dec
inc
mov
sbb
pop
mov
push
pop
jb
aad
pop
ja
push
adc
data16
cwtl
sub
inc
sti
daa
add
dec
ss
push
pusha
stos
enter
sbb
mov
outsl
imul
fstpl
adc
or
enter
adc
mov
pop
jmp
es
pop
frstor
sub
inc
mov
aad
mov
mov
xor
mov
mov
dec
xor
inc
das
jns
sub
mov
mov
sub
pop
outsb
and
aad
ljmp
js
dec
aaa
and
fxtract
mov
pop
mov
clc
lods
iret
dec
mov
fcompl
rclb
mov
add
in
add
pop
mov
or
push
test
rcll
scas
popf
dec
or
fwait
out
enter
mov
push
shrl
adc
fsubr
xor
add
sarb
idiv
inc
jg
and
jmp
fdivrs
sbb
jo
jge
mov
ficoms
jno
dec
gs
mov
xor
mov
in
add
or
enter
out
arpl
push
loope
popa
mov
insb
sub
pop
das
adc
imul
sbb
lret
leave
out
ds
sbb
xchg
xchg
addb
and
jo
addr16
in
cmp
ljmp
push
fsubrl
inc
xchg
jns
dec
and
cmp
lock
jb
movsl
aad
push
mov
dec
pop
dec
mov
repz
sub
mov
push
sub
or
push
adc
sub
pop
aad
mov
sub
jb
xlat
push
mov
sub
lock
jb
fldenv
jmp
daa
cmpsb
sbb
inc
cli
lods
repnz
ficomps
dec
fnsave
loop
je
dec
xchg
mov
pop
push
cmp
inc
ss
mov
das
call
js
mov
mov
push
or
cmc
lock
mov
addl
pushf
sbb
out
push
xchg
in
pop
aad
inc
orl
pop
mov
ret
jns
mov
and
stos
ss
mov
cwtl
dec
mov
jecxz
data16
lock
sbb
sbb
mov
in
stos
cmp
lods
mov
scas
mov
dec
adc
dec
call
jl
push
inc
push
pop
scas
fildl
jnp
and
test
inc
inc
xchg
pop
sbb
add
add
sbb
and
loope
mov
inc
and
jg
outsl
push
adcb
add
push
and
stos
jne
out
jns
pop
fwait
lret
pop
adc
mov
pop
shlb
outsb
out
and
gs
test
test
cmp
int3
mov
inc
add
hlt
fs
and
aad
fwait
loopne
pop
inc
clc
xor
test
cmc
and
xor
fs
and
cld
push
mov
mov
or
xor
or
add
xchg
xchg
test
sbb
cmc
outsl
add
fcmovne
movsb
xchg
call
push
bound
cwtl
inc
or
out
rorb
mov
insb
pop
and
sub
or
pop
adc
push
adc
lds
das
mov
test
fxch
bound
lret
push
push
mov
xor
scas
pop
arpl
std
add
adcl
push
inc
cmp
inc
rorb
jl
inc
adcl
jae
inc
mov
pop
add
dec
pop
mov
add
addb
js
imul
mov
adc
push
popf
push
xorl
scas
inc
push
lahf
push
jno
xchg
ret
lds
push
mov
mov
adc
and
pushf
jle
mov
daa
sbb
cwtl
fsubp
or
cli
nop
mov
jecxz
pop
mov
pop
dec
xchg
dec
sbb
cmc
mov
cs
dec
or
adc
or
adcb
les
and
jle
adc
cltd
jb
cltd
xor
es
mov
push
dec
inc
push
sbb
mov
addl
lcall
inc
imul
sub
push
push
inc
data16
lcallw
iret
loop
jbe
std
and
inc
xor
mov
rclb
movb
fstpl
cmpsb
pusha
shll
jne
xchg
aaa
popf
sbb
jae
icebp
fldenv
cmpsb
roll
sbb
in
push
ljmp
in
mov
xor
insl
xchg
out
je
mov
mov
adc
mov
aas
xor
jne
xchg
cmp
mov
xlat
mov
aas
xchg
and
or
fimuls
xchg
cmp
sahf
hlt
add
enter
sti
clc
gs
xchg
mov
xchg
xor
fwait
xchg
inc
cmp
test
test
cmpsb
pusha
cmp
std
inc
pop
sti
test
lret
andl
xor
stos
nop
arpl
addr16
js
loopne
out
jp
scas
pusha
mov
enter
aaa
adc
fcomps
sti
repnz
mov
aaa
std
jge
cmpb
lahf
loopne
xor
cmp
adc
mov
push
lods
sbb
and
and
cmp
out
loope
push
mov
jne
lods
sti
adc
pop
jle
sbb
mov
ljmp
jge
in
jle
idivb
stc
push
bswap
rorb
cltd
adc
shrb
int
pop
outsb
rorl
sbb
mov
cmp
pusha
xor
int3
ljmp
mov
sub
cmp
arpl
scas
lret
mov
les
mov
mov
xchg
std
lret
andb
jae
mov
sub
pop
push
cmp
sub
push
mov
inc
mov
fucom
hlt
ret
xor
or
push
mov
xor
clc
or
fsubrl
dec
dec
cltd
and
add
cmp
test
sub
jmp
outsl
roll
and
ja
imul
leave
shrb
jecxz
xchg
inc
pop
cltd
xchg
aad
call
dec
xor
inc
cmc
xor
mov
lds
xchg
mov
dec
or
addr16
test
aas
add
dec
ds
sub
add
repnz
test
and
xor
sbb
loop
into
lea
jo
mov
sub
jecxz
mov
cmp
sub
in
mov
lcall
ss
sub
mov
xchg
inc
orb
pop
leave
pop
js
jecxz
mov
aaa
mov
imul
jnp
jnp
push
push
out
sahf
aad
dec
roll
out
fs
pop
in
aas
mov
int3
shlb
bnd
sbb
add
test
and
and
xchg
jg
mov
pop
inc
mov
xchg
ss
sub
cmp
mov
pop
mov
inc
aad
in
pop
jne
int3
xchg
or
dec
xor
in
add
or
cmp
flds
and
outsb
sti
notb
daa
xchg
push
push
push
test
adc
popf
or
and
aaa
pop
shl
adc
mov
mov
sti
or
rorl
pop
dec
jp
push
jo
scas
mov
mov
sarb
out
pop
jecxz
mov
out
aas
out
fwait
jb
in
icebp
std
push
lock
push
sti
jmp
mov
ss
push
mov
pop
adc
inc
aaa
dec
mov
cmc
mov
push
mov
hlt
mov
test
jmp
out
shll
pop
pop
rolb
test
sub
dec
cmp
inc
fsubrp
dec
mov
xchg
in
push
mov
in
sarb
push
mov
ficomps
pop
mov
dec
loop,pt
notl
or
movsb
ret
xchg
es
pop
mov
mov
fbld
mov
add
js
iret
jl
rcr
and
ret
xor
pop
fs
xchg
adc
fbstp
and
adc
ss
cmp
pop
mov
leave
dec
iret
pop
not
push
pop
xchg
dec
mov
dec
insl
dec
adc
int3
mov
adc
xchg
jp
mov
sbb
adc
cs
or
aaa
push
icebp
imul
jp
cmpsl
add
fists
shll
cmpsl
adc
faddl
data16
pop
cmp
xor
mov
aas
xor
and
jmp
orl
xlat
sub
imul
jo
mov
pop
add
mov
xchg
loope
push
pop
jae
test
dec
leave
loope
adc
ss
cli
cmpl
pushf
mov
mov
mov
dec
mov
sub
in
push
popa
adc
mov
or
enter
std
and
or
outsl
xchg
fbld
xor
xor
mov
in
and
subl
xchg
cmp
rorb
cmpsl
xor
mov
inc
inc
xchg
pop
test
fs
mov
push
xor
jg
mov
lcall
xchg
cmp
int3
in
lods
sub
push
mov
mov
or
stos
xchg
jno
add
mov
das
pusha
test
aam
ja
or
scas
pop
xor
insl
jmp
inc
xchg
leave
out
jg
pop
outsb
enter
repz
cmpsl
das
mov
mov
je
insb
ljmp
outsb
rcl
sbb
andl
fists
push
and
jl
movsl
mov
pop
sub
pushf
cwtl
nop
shll
sbb
inc
mov
leave
sub
inc
data16
cmp
dec
push
dec
push
popf
lcall
push
stc
dec
jg
iret
xchg
arpl
mov
pop
push
in
insb
and
jecxz
call
sar
xchg
xchg
sub
loope
jne
arpl
dec
jp
lret
push
adc
rorb
xor
dec
lcall
xchg
add
movsb
les
cli
cmp
adc
lahf
clc
add
popa
cmp
add
adc
jno
shrb
xor
push
lds
mov
mov
mov
movsb
lret
cld
adc
aas
test
xacquire
divl
lds
clc
inc
sbb
jp
daa
sbb
cmp
lods
mov
dec
add
xor
insb
shlb
lods
mov
cmp
sbb
sub
in
inc
or
jo
out
push
clc
lds
cmp
lock
cmc
stos
sub
xor
pop
pop
jno
inc
cltd
ret
push
mov
fsubs
push
sbb
insl
mov
xor
clc
dec
fimull
sub
pop
es
aam
test
cmp
jbe
dec
in
inc
mov
push
lret
mov
sarb
jge
inc
push
arpl
xchg
jae
inc
inc
loopne
dec
push
sbb
out
lods
data16
add
in
push
push
and
cmp
xchg
popa
inc
and
push
outsb
lock
and
lret
out
cltd
jne
int
add
fstpl
lret
mov
subps
dec
sub
iret
jecxz
mov
fwait
loopne
lcall
jg
pushf
and
rcrb
xor
hlt
sbb
fwait
add
jge
xor
jb
push
dec
inc
cmp
lcall
push
subb
cmp
xchg
pusha
inc
sub
and
fbld
test
fwait
mov
movb
call
and
std
pop
adc
dec
stc
pop
xchg
cmp
mov
inc
xchg
push
jae
lds
inc
popa
inc
xchg
rcll
jp
xor
loopne
loopne
adcl
dec
scas
jno
insl
cwtl
inc
add
pop
xor
cs
sarb
rorl
shll
sbb
push
stos
jns
nop
push
in
jbe
fcmovnb
pop
xor
addr16
jns
in
xor
xor
cmp
es
jbe
inc
mov
loopne
mov
lea
sar
in
leave
adc
aaa
aam
outsl
and
fstl
adc
push
jp
lds
push
pop
repnz
test
out
es
jno
fcoml
lea
outsb
es
les
faddp
into
jbe
out
lahf
push
xchg
lahf
add
push
xchg
mov
inc
adc
mov
sti
sahf
add
dec
mov
js
rcl
popa
int
paddsb
push
jae
inc
sub
add
pop
push
and
sub
jmp
cltd
cmpsl
xlat
and
and
cltd
mov
inc
les
out
cld
bound
and
xor
xchg
movsl
mov
pop
dec
push
hlt
pop
rolb
rcrb
cli
sub
jb
xchg
dec
in
inc
sub
pop
fcmovb
and
lds
cs
in
mov
or
std
xchg
in
es
out
popf
mov
cld
pop
cmpsl
sub
popa
sbb
push
push
loope
push
jp
sbb
rorl
dec
mov
notl
insl
stc
call
test
xor
insl
imul
or
aaa
dec
mov
sub
dec
out
std
shlb
lods
rolb
cmp
inc
mov
lods
nop
lock
dec
dec
push
or
test
scas
call
inc
and
fldcw
cmpsl
mov
push
mov
inc
std
aad
adc
jmp
lock
lock
mov
xchg
dec
adc
ret
add
xor
gs
xchg
and
movsb
adc
repz
cld
dec
sbb
cli
stc
push
xchg
inc
test
cmove
pop
and
mov
fdiv
mov
push
inc
mov
das
push
mov
sbb
loop
or
test
insl
test
call
adc
outsw
adc
push
xchg
xor
in
jns
call
test
ss
es
xchg
push
stos
mov
cwtl
xor
in
mov
ret
out
unpckhps
and
cmp
cs
mov
sub
enter
dec
pop
xor
fcompl
mov
add
pop
pushl
add
fcomip
les
cld
sub
and
jo
imul
sub
stos
xor
xor
loop
fdivrl
fwait
push
outsb
repz
sbbb
jle
adc
insb
aaa
jne
repz
adc
pusha
mov
sub
push
in
mov
mov
xchg
or
notb
xchg
arpl
jae
pop
cmpsb
dec
jl
push
adc
or
pop
lds
fsubs
int
jmp
das
in
xchg
movl
push
dec
fidivrl
lret
xchg
les
cmp
leave
adc
jg
pop
mov
sub
fadds
jne
sub
mov
adcl
sbb
fidivrs
shrb
nop
adc
push
sub
int
mov
add
xchg
cmp
cmpsl
mov
idivl
mov
jge
fcmovnu
and
xlat
add
fsts
nop
xchg
push
mov
mov
and
mov
jmp
jbe
es
ss
push
in
pop
and
testb
lods
inc
mov
imul
je
negb
subl
mov
mov
push
pop
push
jb
ja
rcl
icebp
ss
arpl
inc
lret
lret
rclb
jg
aaa
pop
cmp
push
shr
repnz
daa
mov
jl
outsb
mov
adc
dec
mov
adc
in
repnz
pop
mov
and
mov
loope
into
in
cmovle
rclb
pop
test
xchg
mov
ds
dec
cmp
adc
adc
clc
jbe
imul
imul
mov
cmc
jg
movsl
or
add
mov
mov
dec
sub
ss
mov
outsb
jae
ds
nop
push
push
mov
jecxz
mov
insb
rcll
aaa
xchg
rcrl
leave
and
movl
or
pop
test
pop
inc
lds
in
adc
push
mov
mov
mov
ss
mov
jecxz
mov
xor
nop
xchg
jnp
add
xchg
inc
fldl
jl
cld
push
push
dec
inc
jo
jl
push
mov
mov
adc
mov
std
sub
imul
mov
push
adc
jbe
repnz
mov
insb
andb
xchg
hlt
pop
and
adc
ss
sub
jmp
nop
dec
cmc
aam
inc
adc
dec
lahf
lcall
push
dec
lods
hlt
jl
loop
sti
clc
insl
outsb
aad
insb
out
dec
pop
shlb
cmp
lds
lock
sahf
loopne
push
adc
ja
adc
sub
mov
sti
iret
stos
sti
mov
xchg
inc
mov
fwait
cmpsb
gs
rolb
imul
jmp
ficoml
movsl
mov
push
fiadds
test
jmp
sub
loope
ds
test
fs
pop
jno
cs
jno
gs
add
jo
push
mov
sahf
inc
pushf
insl
testb
lahf
fsubl
and
and
insl
inc
movsb
pop
enter
into
call
call
jecxz
jl
imul
mov
scas
sub
cwtl
jne
push
addr16
roll
in
scas
icebp
lods
fcomps
mov
cli
jg
ss
sbb
daa
cmp
or
imul
sub
jmp
mov
ret
test
sub
sub
fadds
scas
sub
dec
inc
pusha
fcmovnbe
mov
test
rclb
insl
aad
mov
xor
dec
inc
stos
sbb
int
mov
xor
adc
jbe
push
and
pop
adc
pusha
icebp
imul
pop
addr16
mov
push
dec
in
aaa
ljmp
or
add
outsb
or
inc
mov
mov
xchg
aas
loopne
out
mov
fisubl
cmp
mov
call
addr16
mov
aam
in
cltd
xchg
mov
lcall
mov
ret
lods
or
imul
daa
hlt
xchg
sbb
sub
jb
ret
jno
pushf
mov
cmpsl
outsb
cwtl
insl
mov
jno
sti
adc
es
iret
add
push
inc
pop
addr16
push
in
fmull
loop
popa
mov
jns
mov
sub
xor
pop
fs
or
sub
xchg
adc
into
jb
cmp
cmpsl
sti
ds
idiv
jecxz
scas
cs
subb
mov
leave
xlat
mov
xchg
mov
jge
or
jecxz
push
xchg
xor
in
and
mov
lahf
movsb
jns
jge
and
ljmp
jb
inc
push
leave
or
jno
xchg
imul
and
and
push
dec
mov
dec
movswl
sub
daa
lds
notl
push
xor
and
inc
scas
mov
adc
mov
movsl
push
mov
lods
inc
pop
sub
mov
loopne
jno
dec
cltd
insl
repz
inc
xchg
add
and
iret
in
pushf
pop
xchg
lahf
rcll
and
testl
dec
loope
cmp
loop
fwait
lods
scas
ret
addr16
push
inc
insl
inc
call
pop
pop
shr
leave
inc
ss
mov
jbe
into
inc
lcall
stc
lock
cmp
in
in
mov
cld
adc
jno
testl
shlb
std
xor
adc
in
sti
enter
jg
or
adc
mov
ret
push
aad
add
jnp
lret
imul
push
mov
dec
mov
mov
inc
or
fisttpll
jl
int3
mov
loop
add
and
push
sub
outsb
clc
push
xor
leave
cwtl
ljmp
or
mov
je
es
stos
sbb
mov
inc
add
cmp
imul
inc
xor
xchg
mov
xchg
xchg
gs
xor
ficoml
imull
cmp
lods
sub
mov
lods
scas
mov
mov
mov
sbb
mov
nop
sub
insb
sub
xor
pop
or
dec
add
mov
mov
jp
and
sbb
ja
jge
movsb
push
lret
jo
pop
arpl
out
push
pusha
add
sub
mov
jmp
int
add
test
xchg
jb
sbb
js
andb
dec
popa
outsb
push
mov
jnp
insb
cmpb
int3
outsb
sti
ret
push
sahf
movsl
mov
mov
lcall
out
imul
push
push
out
ret
mov
pop
pop
dec
sahf
lock
repnz
push
pop
jge
or
mov
push
push
pop
mov
test
jns
jo
mov
pop
xchg
xlat
adc
sbb
ja
out
and
jle
adc
mov
inc
pop
fadd
xchg
add
cltd
test
mov
fmul
sarl
dec
cs
add
cli
mov
int3
lcall
imul
cmp
jg
sbb
mov
push
out
sub
loopne
pusha
je
shll
push
stos
mov
negl
mov
scas
test
sahf
into
int3
cmp
in
movsb
insl
fistpl
mov
push
repnz
mov
test
stos
mov
mov
pop
mov
inc
jne
sbb
movsl
std
lret
cmp
push
or
shl
setle
cmp
dec
pop
or
inc
mov
xor
fwait
push
dec
pop
das
or
sbb
popa
test
dec
xchg
aad
xchg
xor
push
cmp
pop
test
sub
push
add
ffree
xchg
fisttps
ret
push
push
jae
dec
pop
iret
inc
mov
pop
sbb
call
pop
dec
stos
push
or
xchg
add
aaa
inc
mov
dec
mov
out
push
jp
sti
stos
lahf
je
mov
pusha
pop
xchg
sbb
fstpl
sbbl
in
jae
data16
adc
arpl
dec
leave
mov
push
dec
push
cmpsl
dec
lcall
imul
imul
insb
jg
dec
inc
mov
jle
loopne
inc
mov
add
loopne
sub
add
push
mov
cmp
adc
and
lret
xor
insl
ljmp
adc
xchg
data16
out
std
jg
and
outsb
scas
shrl
fsubrs
jmp
inc
pop
paddw
scas
adc
and
arpl
ret
dec
inc
ss
jo
fists
scas
out
inc
xlat
loope
push
loope
jne
pop
sti
aam
jno
call
fprem1
test
stc
outsb
mov
imul
jmp
lds
mov
push
cs
icebp
imul
dec
sahf
mov
dec
lds
push
inc
sub
jl
outsl
push
int3
mov
shl
scas
rorb
mov
aaa
cmc
fistl
xchg
mov
push
mov
add
jg
in
cmp
push
add
pop
add
lods
adc
jmp
jae
add
mov
cld
xchg
pusha
cmp
inc
rorb
add
lods
lret
cli
shll
mov
push
das
hlt
sbb
out
and
mov
adc
xchg
inc
mov
or
fs
sti
jbe
jnp
daa
cmovns
mov
stc
nop
inc
mov
mov
stos
out
xchg
add
xchg
int3
or
cs
pop
adc
int
shl
outsw
sbb
in
mov
lahf
mov
dec
ja
movsb
pop
jne
and
lea
xchg
mov
cmc
push
cmp
cmp
pop
jae
test
aaa
mov
ss
mov
sub
dec
pop
cmp
jnp
fwait
push
xchg
jmp
cmc
ret
sub
rorb
mov
inc
dec
xchg
inc
push
xlat
fcmovnb
adc
pop
xchg
cltd
inc
out
mov
mov
xlat
movb
or
fstpl
or
aam
negl
mov
mov
cmp
adc
pushf
and
dec
pop
or
movsb
pushf
inc
repnz
aad
add
sbb
jne
jecxz
pop
aad
int3
mov
pushf
mov
xor
cltd
sbb
xor
test
arpl
mov
inc
out
imul
inc
fstpt
inc
mov
nop
movsb
xor
fdivl
es
sbb
push
xor
inc
es
and
in
into
cli
pop
outsb
rclb
inc
ljmp
outsb
push
sbb
xlat
pop
xchg
jno
jmp
mov
loopne
xor
xchg
ret
mov
jle
repnz
in
sub
inc
mov
mov
xor
pop
mov
clc
das
fstps
inc
mov
test
mov
in
or
fidivs
jle
fnstcw
inc
add
and
ret
loop
stos
jns
jnp
imulb
dec
sub
jo
fs
adc
mov
subb
mov
mull
mov
test
or
adc
push
cmp
push
lock
sub
mulb
adc
mov
hlt
xor
rcrb
sbbb
cmc
leave
loope
stos
pop
fbld
xor
mov
repz
pop
mov
xchg
decl
loop
popf
dec
adc
sbb
cmp
rol
out
pop
notl
insl
adc
ret
nop
push
add
cmpsl
adc
dec
fnstenv
sub
sbb
test
xchg
shl
into
sahf
inc
aam
iret
add
jno
or
mov
aam
dec
inc
jnp
jp
mov
add
cmpb
adc
in
cmc
nop
mov
pop
or
pop
gs
and
mov
sbb
cltd
mov
dec
lods
fwait
or
cmp
xchg
popa
adc
sbb
jmp
adc
in
popa
push
call
es
dec
iret
mov
loope
push
jno
sbb
int
insb
lock
fst
iret
les
push
or
lods
sub
out
pop
rorl
movsl
cld
adc
das
xchg
in
clc
outsl
mov
push
and
fdivl
push
lret
fnstsw
sbb
and
icebp
leave
lahf
dec
jae
fucomp
je
cmpsb
or
or
sbb
stc
adc
rcll
ljmp
jb
fidivs
xor
fcoml
dec
cmp
and
lcall
push
sbbl
xor
fdivl
ret
clc
nop
test
mov
jecxz
rcrb
insb
inc
lods
or
push
jo
add
push
jl
xorl
in
insl
daa
fs
cwtl
fisubrl
and
adc
repnz
mov
xor
test
adc
and
sbb
mov
xor
out
sarb
xchg
mov
clc
adc
mov
jecxz
shl
cmc
js
inc
loope
aas
out
pushf
imul
mov
xchg
push
cld
dec
push
out
dec
mov
jae
sub
mov
movsl
pusha
jbe
add
xor
insb
dec
es
hlt
ja
pop
mov
cmc
pop
ss
das
add
sub
insl
mov
xor
push
push
mov
fimuls
push
adc
pushf
push
lods
dec
pop
xchg
pop
test
and
dec
cmp
and
jg
movsb
addr16
sbb
adc
out
push
jae
mov
and
add
repnz
pop
xor
ljmp
popa
inc
lods
pop
cmp
sbb
outsl
loopne
push
dec
mov
jo
lahf
popa
out
jne
dec
ds
popa
dec
lods
adcl
pop
pop
mov
jb
add
pop
pop
and
into
in
jge
fstps
lock
pushf
js
in
mov
sbb
dec
sbb
cmp
push
int
xor
adc
sbb
in
or
sub
dec
in
xor
call
pop
lock
cmp
add
movsl
mov
sub
mov
stc
enter
sahf
and
cs
mov
fdivl
push
adc
pop
xchg
mov
mov
mov
pop
dec
adc
popf
imul
xor
jbe
shlb
jns
inc
sub
xor
fs
or
xchg
xor
shlb
cmp
cmpb
fsubl
fs
xor
adc
enter
fdivl
in
xor
xchg
cmc
bound
mov
mov
stos
xlat
repz
adc
jl
cld
stos
shrb
int
stc
sarl
clc
cmpsl
mov
and
xchg
pop
lahf
fstpl
int
into
sbb
movsl
and
mov
js
cmp
enter
cmpsl
call
gs
push
in
data16
jmp
cmp
cltd
popf
push
out
mov
std
push
cwtl
push
sti
mov
rcrb
dec
mov
push
adc
xchg
gs
subb
inc
rcrl
repz
out
pop
notl
adc
lods
adc
jae
push
imul
mov
jle
int
imul
test
mov
test
icebp
inc
mov
pushf
adc
testb
pop
sbb
sub
fildll
frstor
sub
adc
mov
out
dec
test
sub
xchg
cmp
mov
lret
adc
inc
jns
or
mov
dec
xor
sub
mov
push
in
ror
adc
lods
subl
xchg
andb
push
jnp
xchg
add
xor
xor
loopne
jb
enter
bound
aad
lea
cmp
cmp
idivl
push
push
adc
jmp
subb
add
pop
push
movb
lea
insb
cmp
mov
dec
xchg
fisubrl
push
or
jmp
and
ficompl
imul
jge
out
ficomps
testb
imul
mov
test
inc
jo
mov
lcallw
sarb
sub
movsb
sub
iret
mov
cli
sub
and
outsl
push
test
inc
int3
push
push
pop
inc
cltd
gs
int3
or
not
cwtl
adc
cmp
add
and
xchg
loope
scas
sub
xorl
pop
icebp
inc
dec
mov
jno
and
repnz
lahf
out
jno
xchg
out
jns
mov
repz
and
leave
dec
andb
notl
dec
jge
cwtl
and
cmpsb
pop
in
ljmp
je
add
pop
popf
les
scas
push
inc
lock
or
in
fimuls
xor
into
xchg
mov
or
fcomp
add
idivb
je
xchg
xlat
stc
mov
mov
in
sub
mov
cmpl
mov
dec
or
lret
in
adc
mov
dec
ljmp
xchg
fisubrl
push
xchg
hlt
push
and
insb
adc
jp
jo
cmp
nop
into
mov
fadds
inc
fistl
in
mov
add
cli
ljmp
mov
add
scas
pop
inc
push
jg
dec
sub
dec
ret
inc
xor
pop
mov
and
xchg
lods
fidivrs
pop
incb
mov
jmp
pop
sbbb
and
out
sarl
dec
imul
inc
out
fwait
mov
sbbl
dec
lret
cmp
pop
out
xchg
and
cmp
or
push
notb
into
mov
loop
ja
mov
ds
pop
xor
ja
in
jb
push
test
dec
bound
inc
ds
negb
fbstp
je
jns
cli
sbb
mov
lahf
cmp
pop
xchg
or
add
mov
cli
adc
sbb
out
cs
push
imul
mov
addr16
or
xchg
std
pop
int
jge
pop
fimull
ds
lods
out
mov
notl
fwait
or
jb
into
movsl
or
push
or
imul
call
jns
cmp
inc
mov
push
add
pop
mov
ss
clc
add
add
pop
lret
jp
cmp
js
mov
or
shll
push
mov
jmp
es
add
out
lds
jle
shld
roll
mov
and
mov
cmp
out
dec
cmp
cli
imul
loop
pop
add
mov
push
or
push
jecxz
stc
xchg
and
aam
mov
push
dec
ret
loope
lea
leave
mov
scas
push
mov
test
ljmp
or
pushf
dec
int3
mov
lcall
inc
dec
xor
add
lret
dec
mov
test
gs
pop
xchg
dec
push
aas
dec
add
jo
stos
and
and
xchg
push
std
pop
sub
push
fmuls
pusha
clc
pop
sub
cltd
push
les
mov
jns
push
xor
jns
lret
pop
test
imul
mov
cmpsl
test
cmp
dec
xor
sbb
push
cltd
or
loope
lods
and
add
incb
shr
inc
pop
or
cli
mov
test
test
dec
mov
sbb
jg
mov
aas
push
movsb
jbe
addr16
repnz
nop
fbstp
push
pushf
sub
push
rcl
cmpsl
mov
mov
test
scas
add
xchg
xor
and
lods
imulb
int
ja
stc
lea
jno
fists
dec
call
aas
lcall
jg
dec
ret
push
mov
ljmp
inc
push
arpl
cmc
outsl
inc
xchg
sub
xchg
int
stc
inc
stos
outsl
pop
or
test
dec
xchg
cmp
shl
cmp
mov
cmp
in
shrl
mov
movsl
es
and
fisttpl
imul
jg
adc
jnp
dec
movsb
inc
dec
dec
testl
xchg
jecxz
jge
or
int3
pop
test
mov
cs
pop
jl
dec
int3
push
subb
std
gs
test
adc
add
add
sti
ret
scas
popa
fisubs
mov
push
sbb
push
pop
push
aad
mov
jb
ja
jns
cs
mov
fstpt
fst
inc
dec
mov
xchg
mov
xor
fsts
bound
push
inc
leave
movsl
rcrb
ret
pusha
mov
dec
aas
idiv
push
push
data16
test
outsl
xchg
daa
sahf
ret
sbb
xchg
sub
push
ss
jg
aad
jnp
ljmp
aam
or
aas
repnz
jae
js
lods
push
push
mov
xchg
cmp
pop
pusha
sti
adc
sarb
mov
jne
lea
sub
xlat
mov
gs
pop
negl
mov
push
dec
sub
cmp
sub
stos
push
cmc
cs
out
in
outsb
orl
imul
push
fldcw
mov
push
xor
ret
das
jo
hlt
pop
sbb
je
add
stos
mov
mov
clc
into
movb
pop
fwait
jl
mov
cld
lods
inc
test
test
call
clc
adc
scas
int
xchg
and
dec
jb
lret
jne
sub
jns
and
lcall
test
add
lods
dec
cmp
out
mov
cmp
mov
aaa
and
fcmovbe
lds
int
scas
push
loop
das
lahf
aas
in
aad
push
mov
push
stos
leave
mov
push
mov
fstl
das
outsl
lcall
in
andb
mov
add
mov
sbb
mov
jmp
sbb
bound
add
inc
popa
pop
xorb
jp
add
outsb
mov
xchg
cmpb
ljmp
push
enter
lds
xchg
lret
pop
and
les
andl
sub
sahf
aaa
pop
popa
cmp
imul
jne
mov
pop
inc
lret
roll
dec
push
pop
xchg
pushf
jge
xor
out
push
fadds
orb
adc
xchg
jg
lret
adc
clc
outsl
sarb
mov
xlat
rcrl
mov
mov
cmpsl
sbb
mov
dec
out
jae
clc
mov
fsubl
dec
leave
lcall
mov
out
push
push
fildl
xchg
lods
mov
inc
dec
xchg
sub
cld
dec
cmp
js
lds
cmc
pop
shlb
lods
mov
loopne
add
jne
inc
sbb
lret
test
mov
jge
pop
lock
add
xchg
sbbb
mov
test
mov
or
inc
test
test
mov
sti
jb
cmp
or
out
mov
pushf
jle
push
ja
mov
enter
ret
stos
sahf
pop
aad
dec
dec
sub
and
mov
mov
pop
stos
mov
ret
fs
insb
popa
gs
gs
call
inc
test
std
jmp
popf
dec
xor
push
pushl
jnp
imul
adc
dec
rolb
mov
iret
mov
mov
or
ds
sbb
mov
into
xor
fstps
cltd
out
push
mov
in
add
aad
daa
inc
jae
andb
mov
outsl
and
imul
mov
ljmp
out
int
fstpt
out
sbb
inc
push
push
stos
pop
adc
pushf
jl
cmp
clc
fildll
or
clc
add
xor
and
pop
mov
xchg
int
xor
out
add
mov
xor
in
inc
inc
std
arpl
cli
iret
fildll
push
rcrb
or
sbb
lret
add
stos
fstl
add
lds
inc
es
push
es
jg
mov
in
fcmovu
xor
psubusw
sbb
insl
es
sbb
and
mov
sbb
cs
ds
cmpsb
js
sbb
and
movsb
jp
imul
xor
jnp
sahf
mov
adc
xor
mov
por
fs
dec
das
cmpb
shl
popf
jnp
shll
jb
sbb
dec
or
jb
adc
add
jp
dec
icebp
lods
sub
movsl
negl
sbbl
leave
jb
cli
pop
cmp
jnp
push
ret
cmpsb
fs
movsl
lods
sti
xchg
xchg
jne
ret
stos
or
pop
rorb
mov
stos
mov
sahf
repnz
push
fildl
push
cmc
les
filds
ds
lahf
stos
push
test
adc
sti
cwtl
push
imul
push
push
dec
xor
pop
js
xchg
or
jae
pop
bnd
push
or
out
cli
push
insl
stos
ret
in
pop
cmpsb
movsl
push
loop
fnsave
iret
dec
adc
xor
insl
adc
inc
sahf
stos
cmp
xor
outsl
pushf
jl
jbe
insb
decl
inc
ds
push
lcall
mov
mov
call
out
ss
mov
hlt
and
dec
push
hlt
add
cli
pop
sbb
cmp
out
dec
pop
je
popa
pop
add
lret
xor
inc
out
add
lods
clc
jecxz
call
xor
sbb
push
ljmp
dec
imul
rcll
lds
cmc
add
add
add
xchg
adc
pushf
or
repnz
pop
adc
sub
push
imul
lahf
lahf
outsl
pusha
lcall
mov
cmp
pop
lahf
outsl
out
js
pop
ffreep
jae
xchg
daa
push
inc
pop
pop
adc
push
arpl
decb
fnstcw
or
clc
add
stos
cld
xor
popf
fmuls
push
xor
enter
in
sub
iret
push
jb
push
push
shrl
scas
imul
insl
inc
xchg
jno
jg
and
inc
inc
stos
jnp
jle
jnp
mov
mov
mov
push
xor
cmpsl
cmpsl
int
sbb
mov
pop
push
jns
xchg
mov
dec
out
jg
outsb
and
pushf
or
mov
dec
or
mov
adc
aad
sti
push
and
aas
dec
arpl
adc
xchg
dec
fldl2t
xchg
movsb
notl
or
inc
jns
inc
add
pop
clc
pusha
add
mov
out
push
cmc
and
in
mov
cmpsb
arpl
adc
rcll
divb
lds
test
pop
mov
daa
mov
frstor
inc
sbb
or
cmp
sbb
das
fwait
jno
ljmp
pop
rorl
adc
outsb
fbld
add
pop
loop
fcmovnu
out
shlb
mov
and
push
mov
loop
mov
pop
sub
lcall
mov
loop,pn
pop
or
cmp
or
dec
ret
pusha
repnz
repz
iret
mov
lods
and
or
mov
xor
cmpsl
jns
inc
jl
enter
pop
lahf
push
push
pop
mov
loopne
add
sbb
pop
aad
lret
jp
sbb
in
lock
mov
aad
imulb
xchg
xor
mov
jecxz
fcompl
lods
add
outsl
fcmovbe
sub
popa
mov
int
test
cmp
pop
push
popf
dec
mov
mov
mov
in
cmc
not
pop
jne
cmpsb
call
inc
push
repz
rcl
stos
inc
push
pushf
cmp
imul
aas
adc
arpl
xchg
inc
ds
jno
xchg
jp
sub
xchg
popf
scas
hlt
test
jmp
push
and
pop
sub
into
enter
inc
mov
fldl
mov
ret
mov
outsb
mov
xchg
xor
jns
sub
cmp
les
gs
icebp
sahf
mov
ljmp
loop
mov
out
in
inc
nop
mov
clc
mov
ret
xlat
inc
mov
lea
cwtl
cltd
pop
movsl
jnp
push
mov
data16
arpl
xchg
adc
add
xchg
add
jae
std
loop
inc
and
decb
outsb
or
je
imul
dec
ljmp
fadd
push
scas
aad
repnz
adc
neg
rcl
add
inc
dec
hlt
enter
xchg
cltd
push
sub
inc
rcrl
into
jae
mov
daa
cmp
out
leave
mov
and
subb
inc
addr16
jecxz
mov
loop
pop
repz
lds
enter
mov
mov
lahf
mov
push
xchg
mov
cmc
arpl
cli
mov
sub
cmpsl
mov
xchg
sahf
dec
out
aad
mov
aaa
xor
cmp
test
xor
lret
push
sub
aam
adc
cmp
rcrb
incb
out
xor
cmp
add
push
dec
sahf
int3
or
cmpsb
or
gs
add
jecxz
xor
loop
inc
add
cmp
and
inc
rcrb
out
lret
pop
dec
push
add
hlt
sbb
mov
jge
rol
fldl
loope
mov
js
jae
mov
sbb
push
and
js
adc
das
mull
into
push
cmpsl
nop
and
ret
bound
sbbl
adc
fistpll
jge
pop
bound
roll
push
jp
int
pop
jmp
inc
fdiv
inc
mov
mov
and
xchg
sbb
dec
sub
fmuls
scas
btr
mov
push
enter
xlat
aad
xor
jecxz
repz
adc
and
testl
popf
dec
loopne
fwait
insb
adc
dec
cmp
and
movsb
outsl
or
out
sbb
cmp
push
sub
inc
out
adc
xchg
in
imulb
mov
test
add
push
ss
jp
pop
test
push
xorl
xor
ja
mov
pop
mov
leave
pop
xor
sub
mov
fs
fwait
jecxz
xchg
mov
jnp
mov
sub
adc
push
arpl
inc
pop
mov
lock
xor
out
mov
add
mov
imul
push
mov
xor
rcrb
or
cmpsl
adc
std
mov
inc
pop
dec
hlt
cmp
sbbb
dec
out
je
pop
lods
push
movsl
out
cmp
movsl
aam
lahf
mov
mov
nop
pop
test
mov
sub
jl
cmp
out
test
fs
push
out
leave
movsl
mov
mov
pushf
loop
fcomps
inc
adc
mov
jl
out
outsl
pop
pushf
inc
jmp
sbb
pop
inc
mov
ja
js
jno
dec
stos
addl
stos
add
mov
xor
mov
jle
leave
jo
cmc
inc
lods
pop
lahf
sub
daa
mov
scas
push
jge
adcl
ret
int
bound
push
in
mov
pop
mov
leave
mov
adc
jecxz
mov
in
fstp
leave
adc
fisubs
out
aad
xor
shrb
cs
xor
xor
cmpl
sti
sub
sbb
mov
fnstcw
repz
jg
sti
rcl
mov
jle
js
fs
daa
int
fs
scas
test
popa
jnp
sub
std
xchg
jg
out
inc
sbb
ds
testl
jno
dec
nop
mov
mov
hlt
sub
aaa
mov
mov
into
les
push
roll
sbb
test
pushf
adc
outsl
jp
xor
or
or
sbb
inc
mov
daa
mov
int
shlb
push
shll
mov
out
inc
or
xchg
clc
inc
aam
or
jns
ds
sahf
cmp
cli
and
mov
sbb
push
int3
sbb
outsl
push
fldcw
xchg
in
aaa
repnz
xchg
ds
mov
test
cmpsl
dec
les
mov
fmulp
inc
aam
sahf
es
inc
repz
stos
out
mov
rolb
cmpsb
es
add
dec
cmp
jmp
and
pop
cmpsb
mov
aaa
add
inc
cwtl
iret
sub
out
xor
xchg
enter
xor
xchg
lea
inc
stos
je
mov
stos
pop
mov
xchg
pushf
ret
push
mov
inc
scas
mov
push
lret
mov
clc
loope
and
xlat
clc
xchg
mov
aad
sub
inc
pop
inc
or
cmp
dec
ret
daa
pop
pop
imul
pushf
ffreep
repz
mov
imul
insl
push
sbb
out
and
cmp
leave
aas
cmpl
push
jp
movsb
je
ljmp
in
sub
adc
xor
push
test
sti
jb
mov
andl
sti
and
dec
ret
ljmp
jns
xchg
jge
ds
clc
subl
jmp
inc
in
roll
mov
push
mov
lock
dec
rolb
or
jp
inc
mov
jno
push
test
inc
rorb
hlt
pop
xchg
lock
xor
inc
xchg
mov
adc
fs
jbe
sub
push
mov
adc
rolb
stos
adc
fidivrs
push
ss
sub
jbe
stc
cli
loopne
or
push
test
mov
clc
cli
push
rorb
add
pop
pop
push
mov
push
addl
mov
mov
shrb
inc
dec
inc
pop
xchg
aas
leave
shlb
adc
push
inc
or
shll
cli
popa
xchg
mov
inc
xchg
std
sbb
popa
sub
jp
push
lock
mov
ss
xchg
add
insb
fcomp
sub
mov
xchg
add
and
jg
mov
adc
in
gs
das
ret
and
mov
adc
inc
out
inc
fildl
enter
pop
and
shll
mov
stos
shlb
jbe
idivb
enter
movsl
mov
adc
mov
inc
push
push
xlat
and
fistps
mov
daa
dec
clts
cmp
mov
das
inc
pushf
jo
xor
adc
aam
mov
mov
stc
xchg
pop
pop
push
jge
fs
arpl
test
rclb
test
mov
jmp
fisubs
dec
push
adc
test
add
xchg
iret
cmc
jb
imul
dec
repnz
popa
ljmp
dec
mov
xchg
or
jecxz
outsl
xor
sbb
dec
in
ja
sub
dec
stos
lds
dec
ljmp
sti
fldcw
orl
iret
movsl
cmpl
ret
xor
xor
inc
cmp
fs
or
mov
dec
shlb
sub
std
orb
cli
loopne
jmp
test
mov
rclb
push
adc
jg
jl
or
popf
sti
push
and
icebp
cs
jecxz
ljmp
mov
or
enter
test
mov
ficompl
sub
subl
clc
ljmp
inc
mov
fisubrl
roll
cmp
fwait
mov
xchg
int3
sub
lock
xchg
adc
xchg
lods
cmpsl
out
rcrl
mov
and
mov
fcompl
add
aam
je
pop
mov
lods
fs
inc
jne
pop
dec
pop
sti
adc
out
inc
push
fdivrl
nop
test
insl
aam
enter
dec
es
mov
popf
and
icebp
popf
xor
mov
stos
push
mov
mov
cmpsl
xchg
jmp
mov
xchg
in
xchg
out
dec
jg
dec
test
or
xchg
push
add
mov
inc
stos
sbb
mov
sti
fmul
cmpb
and
sti
jno
fnstcw
cmp
or
push
orl
mov
xchg
dec
cmp
lods
fistl
or
addr16
push
leave
jne
scas
pop
pop
mov
es
movsl
xor
sbb
mov
cmp
rcrl
push
add
scas
leave
sbb
xchg
mov
test
push
lods
fisubs
pop
sbb
sbb
fbld
insl
xchg
lock
push
xchg
mov
xchg
mov
ds
push
clc
movsl
xor
jbe
cld
in
pop
inc
in
in
loopne
rcrb
mov
cmc
push
fbld
jle
mov
pop
xlat
rorl
push
popa
sub
loop
add
adc
cs
lea
mov
sub
xlat
daa
shlb
addr16
ret
popf
fidivl
xchg
or
aam
dec
and
add
and
jo
fwait
adc
mov
push
in
call
xor
mov
ja
mov
icebp
cld
rcll
rorb
std
dec
popf
loop
hlt
add
cld
mov
add
and
shl
push
xor
mov
inc
xor
gs
pop
addb
inc
mov
push
mov
pop
adc
jp
in
dec
xchg
mov
sub
mov
mov
pop
cmp
cld
cmpsb
mov
push
stc
sbb
out
mov
aam
in
ljmp
inc
push
in
movsb
testl
jmp
rclb
cmpsl
adc
bound
sbb
popf
push
or
in
fdivrl
sub
stc
jo
sbb
lock
test
movsl
inc
popf
aad
pop
mov
xchg
add
pop
cmp
outsl
mov
mov
dec
loopne
leave
or
push
inc
push
iret
js
and
push
and
xor
fiadds
nop
or
or
mov
jbe
push
dec
fistl
push
push
movsl
push
xchg
orl
and
orl
push
inc
clc
fcmovbe
addl
aas
push
sub
ss
sub
cli
in
stos
fcmovnu
lods
mov
sahf
out
and
shlb
pop
sbb
adc
ljmp
ret
gs
cmp
adc
out
push
cmp
int3
loop
lret
movsl
movsb
xchg
leave
sbb
aaa
fistpl
pop
sbb
lods
addl
jl
notb
xor
mov
inc
cld
ds
fcom
and
xlat
pop
sub
call
cmc
icebp
push
xor
xor
lcall
inc
push
repz
lock
sbbl
adc
xchg
push
pop
mov
out
mov
adc
inc
push
popf
insl
nop
add
cltd
call
ds
pop
arpl
out
and
mov
mov
into
popa
fldenv
xor
and
subb
mov
gs
cld
pushw
imul
inc
jb
stos
push
xchg
enter
and
int3
adc
and
ljmp
subb
mov
out
pop
push
dec
cmpsb
andl
cmp
jmp
jmp
ret
loop
dec
mov
push
xor
xchg
pop
add
ds
mov
and
cmc
mov
push
jmp
jg
daa
inc
movsl
popa
dec
stc
xor
in
push
testb
dec
or
push
aas
xchg
and
mov
data16
sub
dec
icebp
cmc
or
shl
out
data16
jg
sub
jecxz
inc
jle
or
add
cld
outsl
call
stos
cld
sbb
sbb
and
loop
lcall
cs
pushf
subl
push
jge
cmpb
pop
cmpsb
int3
jbe
rorb
fsub
pop
adc
push
fs
stos
or
mov
adc
inc
sti
ficompl
jmp
in
iret
decb
mov
cli
push
cwtl
int3
xchg
xlat
cltd
mov
add
into
or
ror
das
iret
sbb
pop
mov
dec
or
add
sbb
ds
jge
lds
scas
add
add
adc
rorb
mov
sbb
jmp
pop
jb
insl
sub
xchg
and
dec
ret
jle
lcall
out
jo
loopne
shlb
mov
sbbb
pop
mov
lret
inc
inc
orl
ds
cmp
pop
mov
cmp
push
lea
xchg
lea
daa
data16
mov
arpl
cmpsb
in
lods
rcrl
movsl
iret
mov
je
push
jmp
and
orl
flds
and
je
dec
xchg
cwtl
push
lret
jg
adc
ret
xor
scas
in
popa
pop
mov
push
inc
cmpb
adc
test
mov
fiadds
sbbl
subb
nop
jns
push
cmpb
outsl
sbb
out
xor
and
mov
in
test
xor
inc
adc
into
and
jns
in
test
mov
test
movsl
and
pop
xchg
mov
mov
sub
es
pop
imul
cld
cwtl
inc
rolb
iret
xlat
xchg
sbb
call
pop
fsubrs
inc
mov
movsl
push
ret
sbb
shll
fdivs
cmpsb
mov
rolb
sbb
adc
dec
pop
and
lds
or
iret
pop
in
test
jg
sbb
cmp
mov
cltd
leave
pop
stos
push
mov
jmp
rorb
movsl
test
inc
xchg
jae
fisubrl
or
lea
sub
cld
ret
aad
fst
in
adc
es
mov
mov
inc
xor
push
pop
fistpl
mov
xor
mov
xor
aaa
or
inc
jo
xchg
and
mov
push
ret
mov
dec
xor
out
loop
push
or
ds
xchg
lret
pop
jge
stos
cmc
mov
jge
sbb
pop
xor
test
xchg
push
xchg
xor
push
sbb
shrb
test
cmp
loop
divl
sub
xor
mov
jp
jp
adc
lods
arpl
js
cmovb
or
int
mov
repnz
mov
inc
fists
sub
sub
popa
pushf
xor
arpl
mov
enter
sub
jle
sub
xor
loopw
dec
push
jae
int3
xchg
sub
and
xor
faddl
addl
sub
push
push
pop
fidivrl
sti
and
adc
sbb
push
pop
inc
jbe
cmc
pop
stos
mov
scas
mov
push
xor
das
mov
adc
xor
adc
pop
or
cmpb
in
pushf
stos
sub
ja
xchg
cmc
loop
leave
inc
jle
push
scas
jecxz
fcomi
or
popa
mov
jbe
orl
ja
mov
in
gs
pop
das
sbb
dec
push
cwtl
jle
lahf
mov
sbb
add
sarb
mov
lock
or
incl
pop
pop
jecxz
lret
in
xor
or
jl
faddp
mov
fdiv
div
cmc
in
dec
ficoml
scas
lock
data16
adcl
mov
movntq
jns
repz
gs
fstpt
jmp
sbb
out
std
push
ret
test
push
sahf
nop
adcl
inc
in
jle
dec
testb
inc
inc
int
cmp
ja
sbb
mov
mov
pusha
mov
enter
mov
mov
cmp
data16
inc
repz
or
add
out
lods
push
fcoms
sbb
sbb
andl
mov
std
fstps
adc
fsts
ljmp
push
jbe
scas
and
enter
jmp
into
mov
xor
mov
cli
sub
ficoml
nop
mov
lods
cltd
inc
cmp
cmc
test
jno
and
leave
mov
jl
inc
fsubrs
mov
and
and
outsl
xor
sub
loop
xchg
out
pop
fsts
jae
fisubs
adc
or
call
dec
int3
pop
jnp
mov
stc
arpl
push
push
popf
stos
jmp
sbb
adc
ja
and
ret
jecxz
das
cld
test
movsb
dec
pop
cmp
subps
mov
sbb
cmp
lret
clc
clc
xchg
leave
shrb
stos
scas
dec
xorb
jns
test
insb
sub
sub
andb
or
jo
in
stc
pop
mov
jle
movsb
xor
inc
mov
mov
dec
xchg
mov
cmp
out
inc
and
jl
jmp
push
test
repz
push
xchg
dec
jg
cmp
cwtl
sub
and
in
lret
lret
cwtl
je
movsb
das
adc
jg
dec
inc
xchg
mov
loop
out
ret
lret
or
test
and
les
xor
mov
pop
int3
adc
pop
loopne
cmp
xchg
fyl2xp1
inc
jae
je
mov
popa
insb
mov
xor
stos
xchg
sbb
sbb
out
enter
test
mov
les
test
das
sbb
sbb
xchg
adcb
imul
fisttpl
inc
add
ret
jecxz
mov
cld
test
dec
pushf
xchg
pop
sub
jmp
mov
in
pop
pop
out
inc
xor
push
decl
mov
test
test
mov
dec
pop
pop
add
mov
xor
ret
adc
jnp
xchg
imul
shlb
frstor
mov
in
sti
cmpsl
ss
adc
and
cmp
mov
jmp
lock
gs
aaa
xlat
rorb
sub
or
loop
or
xchg
cli
pop
mov
mov
jl
lahf
popf
cmp
mov
out
cltd
aaa
outsl
lds
mov
das
xchg
xchg
jae
jecxz
jg
xchg
add
data16
es
cmp
cmp
mov
pop
flds
xchg
push
bndldx
mov
mov
addl
jns
pop
in
mov
jno
arpl
adc
cmp
out
cmp
push
xchg
mov
clc
and
cmp
insl
dec
jo
popa
and
data16
dec
ds
fcomps
jmp
pushf
fdivrp
mov
or
sbb
addr16
inc
nop
stos
int3
and
push
sub
push
out
cmpsl
arpl
mov
test
xor
out
stos
arpl
xor
fistl
xor
test
xchg
xor
adc
icebp
or
rorl
shl
mov
inc
movsb
and
test
fwait
sub
mov
mov
push
test
and
lcall
mov
xchg
add
xchg
test
jmp
jae
or
imul
adc
movsl
sbb
out
cmc
fwait
sub
push
or
cmpl
cmp
jo
cwtl
ret
ficoml
mov
fwait
int
pop
or
xchg
sub
imulb
lret
shl
pop
pxor
sub
iret
jbe
fwait
sbb
cwtl
mov
pop
jmp
aam
pop
scas
aaa
jne
xchg
push
xor
jb
lcall
test
lcall
gs
scas
mov
ljmp
subb
sbb
pop
dec
cmp
outsb
scas
jge
cwtl
mov
ret
jb
fs
mov
jb
data16
mov
or
lea
lock
and
out
xor
sbb
inc
mov
add
int
mov
lret
int
push
sarb
dec
sbb
jns
loop
xchg
and
fimuls
sub
mov
stc
mov
mov
jnp
xchg
fs
and
in
and
shlb
cmp
out
std
jne
sti
and
mov
mov
lea
or
daa
repz
test
aas
jne
leave
pop
pop
lods
dec
mov
cmp
movsb
dec
shl
sahf
dec
cmp
fcoms
ja
fbstp
cs
popf
or
mov
adc
or
jmp
cmp
mov
sbb
in
lfs
cmp
mov
movsb
and
or
dec
jae
jmp
das
fucom
xor
inc
xchg
outsb
sahf
ss
sub
push
icebp
ds
push
imul
mov
xchg
popa
xchg
push
mov
stos
std
dec
inc
mov
clc
dec
test
dec
inc
jecxz
adc
sub
insb
cli
adc
sbb
testl
jne
lret
std
mov
mov
ret
in
mov
add
mov
jae
or
out
in
rdmsr
cld
and
mov
inc
push
pop
ret
fmull
cmp
and
aaa
mov
pusha
mov
cltd
mov
cwtl
ds
jae
gs
addl
mov
push
push
fs
xchg
mov
pop
cltd
fmul
fsubrs
gs
pop
xchg
pop
lahf
fadd
fcomip
lock
iret
pop
mov
pop
pop
pop
push
adc
test
sub
mov
scas
in
jmp
inc
push
and
cs
and
movsl
xchg
add
xor
rorl
cmc
mov
je
pop
mov
arpl
testb
js
push
lcall
mov
xchg
imul
in
adc
negl
mov
xchg
jnp
mov
inc
add
out
pushf
shll
mov
cmp
out
and
dec
call
repz
mov
movsb
mov
jp
aaa
in
cli
pop
les
add
lds
and
test
rcll
subl
sub
lods
mov
dec
jg
setbe
xor
dec
xorb
pop
dec
hlt
dec
dec
jmp
aam
clc
pushf
lock
shrb
lods
pop
nop
scas
push
push
je
addr16
push
pop
xchg
setb
es
sbb
js
test
push
orl
sbb
pop
jl
cli
or
push
or
pop
mov
inc
mov
push
add
sarb
fs
orl
dec
lds
and
xchg
push
add
jo
push
das
mov
arpl
mov
xor
loope
or
or
cmp
mov
imul
or
bound
cmpsb
bound
pop
fwait
push
sahf
fstpt
jmp
fisubl
lcall
sbb
out
aad
sub
insl
outsb
inc
mov
jmp
jecxz
in
sahf
mov
or
jl
mov
xchg
in
mov
inc
pop
shll
in
dec
xor
cmp
jo
xor
push
add
add
jnp
loop
shrb
in
mov
mov
out
mov
or
stos
aad
cmp
mov
jp
ficompl
dec
movsb
push
jp
mov
pop
mov
mov
xlat
sbb
out
movsb
mov
faddl
shll
or
dec
xchg
xchg
sbb
pop
inc
aam
mov
and
pop
mov
sbb
push
jne
pop
push
jmp
aad
fnstsw
sti
dec
dec
cmpl
cli
into
add
cld
jbe
bound
call
pop
cmpsl
mov
sbb
and
loope
daa
mov
jae
jne
sti
jmp
mov
jg
stos
jns
adc
dec
xor
in
in
repnz
mov
xor
lock
jne
xor
cs
popa
dec
inc
movsb
inc
push
clc
or
out
int3
mov
xchg
mov
ljmp
nop
xchg
imul
mov
and
js
mov
and
js
leave
aaa
aam
shll
adc
fcoml
cmp
inc
insl
mov
ja
lods
call
and
arpl
dec
mov
bound
mov
pop
push
test
add
inc
in
cld
mov
jecxz
push
scas
xchg
lods
cmp
mov
fwait
sub
xchg
mov
fsubr
je
push
adc
or
outsl
xor
outsl
mov
cmp
adc
sarb
sarb
inc
mov
and
push
shl
out
inc
insb
sbb
add
in
fwait
mov
xchg
cmp
push
mov
xor
xor
testb
lahf
push
jecxz
mov
push
popf
push
add
mov
cli
inc
jmp
daa
inc
mov
jo
subb
push
insl
rorl
pop
mov
cli
mov
aas
cmp
sub
data16
arpl
nop
fistpll
pop
jmp
mov
int
sbb
movq
push
push
dec
int
push
adc
dec
js
jl
jnp
cmp
xchg
add
dec
stc
ja
les
enter
in
aam
mov
inc
rorb
add
mov
and
push
dec
xchg
test
pop
shll
lcall
pop
xchg
inc
push
addr16
pusha
mov
popf
stc
push
push
or
jle
mov
repz
sarl
inc
pop
subl
push
int
into
lahf
jmp
fimuls
dec
fwait
push
clc
popa
mov
pop
out
jge
enter
pop
mov
aas
jb
or
into
jno
jl
lods
imul
imul
mov
push
jle
sbb
push
scas
push
repz
out
movsb
hlt
fnstsw
out
pop
mov
push
and
sti
mov
iret
test
dec
push
mov
xchg
mov
sub
je
call
mov
xchg
dec
shlb
sub
jb
and
cs
lcall
push
push
push
movsl
movsb
push
loope
inc
cmp
xor
iret
pop
fstp
and
int3
out
mov
fisubrs
sbb
xchg
inc
push
mov
pushf
lret
in
js
ret
cmpsb
jg
sbb
aaa
or
mov
repz
iret
add
jae
into
pusha
jecxz
mov
stos
pusha
shll
subb
mov
mov
les
jl
pop
stos
arpl
fnstcw
mov
addr16
push
xor
cltd
fstpl
div
jecxz
cli
es
push
out
or
aad
pop
pusha
mov
repz
mov
imul
adc
xor
add
pop
and
inc
outsb
inc
sti
xor
sbb
imul
inc
xchg
fidivl
dec
lahf
push
and
jmp
jmp
sbb
ja
out
mov
insb
add
insb
cwtl
insl
pop
mov
xchg
mov
xchg
jae
xchg
or
sub
mov
sti
or
loop
pop
xorb
jp
out
in
es
inc
lds
lahf
shr
daa
movsl
sbb
aam
into
fs
sbb
xchg
push
cwtl
orl
dec
inc
adc
dec
push
cmpsl
aas
inc
pop
or
cmp
cmp
mov
jmp
push
addr16
dec
mov
mov
jbe
push
mov
enter
or
pop
xchg
dec
push
cwtl
inc
or
adc
sbb
jge
pop
ret
fdivrs
xor
loope
rep
mov
std
orb
mov
mov
or
mov
test
incb
insl
dec
dec
in
xchg
shrl
pop
push
or
mov
sub
lahf
push
out
cltd
sbb
inc
pop
pop
pushf
mov
cmp
xchg
pusha
js
xchg
iret
lds
aad
pop
in
in
sbb
test
fsts
adc
imul
mov
movsl
push
icebp
mov
sbb
ret
mov
inc
pushf
cmp
fdivrl
sub
shrb
xchg
inc
or
add
sub
divl
jbe
sarl
aas
jnp
leave
mov
sbb
pop
inc
jl
arpl
push
adc
loop,pt
jp
jge
out
and
sub
and
sbb
mov
into
sbb
dec
jge
adc
ss
push
movsb
xor
xor
fs
pop
rorl
call
inc
clc
pop
in
out
or
jp
inc
idivl
push
add
jno
jnp
fstpt
test
add
or
jmp
cli
dec
out
add
inc
mov
xchg
loopne
int
cmp
jmp
dec
aas
push
shrl
jno
pop
and
sbb
cmpl
cmp
cmp
insb
dec
mov
push
xor
enter
add
rclb
test
rorb
popa
xchg
inc
rclb
je
jle
lods
das
test
sbb
repz
xchg
pop
pop
repz
mov
addr16
ficoml
test
fldcw
fsubp
sahf
xor
cmp
popf
xlat
xchg
jg
or
or
sub
ret
inc
and
jmp
gs
sbb
dec
imul
into
lahf
cmpsb
or
xchg
xchg
nop
mov
inc
and
mov
adc
enter
push
lock
test
mov
mov
mov
gs
adc
outsl
arpl
sbb
mov
mov
sub
js
popf
ror
incb
mov
lock
push
and
jmp
shrb
les
adc
fidivs
or
jne
mov
mov
pop
bound
jnp
cmpsb
leave
icebp
jbe
mov
pop
das
outsb
ds
or
mov
stos
imul
push
out
std
xor
inc
or
stos
ficoms
repz
int
mov
push
stos
test
movsl
push
inc
mov
sbb
add
cmp
cmp
jl
stos
ja
jae
addr16
pop
into
dec
cld
pop
sub
arpl
mov
push
fidivs
mov
lods
loope
popf
enter
mov
push
dec
cmpb
dec
stc
push
movsl
pop
cmp
in
cld
data16
daa
dec
lcall
sbb
test
mov
test
cs
jbe
mov
adc
es
stos
test
js
mov
addr16
sub
cwtl
cmp
mov
sbb
repnz
dec
mov
jbe
out
fistpll
iret
aam
push
xadd
jecxz
cli
sti
mov
sbb
pop
dec
aas
sbb
mov
jp
decl
fwait
push
xlat
inc
lret
mov
fs
xchg
adc
jns
and
inc
loopne
push
mov
push
and
add
pushf
mov
jae
lret
cmp
sbb
repz
sub
cmpsb
cmp
jmp
inc
test
add
pop
mov
push
push
ret
scas
mov
pop
fidivs
jne
call
dec
mov
push
fmull
imul
mov
or
scas
fcoml
or
ss
jmp
mov
jae
popa
xor
loop
mov
adc
sbb
popf
and
enter
xchg
xchg
popf
out
pop
push
jle
std
push
and
mov
push
in
mov
mov
pop
push
mov
sar
movsb
mov
ror
outsl
mov
sbb
add
test
stc
dec
popf
dec
lods
or
or
adc
cmp
test
or
push
add
adc
lcall
sbb
mov
subb
out
add
popa
push
xchg
mov
push
fisubrs
mov
sbb
in
mov
jo
mov
sbb
mul
jmp
fs
rcl
outsb
cltd
gs
fidivl
test
mov
xchg
cmpsl
push
push
into
xchg
cmp
std
dec
cmp
sbb
enter
adcb
addr16
mov
sahf
in
rcrl
lea
sub
jecxz
xor
insb
push
int3
mov
jb
fiadds
pop
adc
fcoml
inc
cmc
inc
rcrl
inc
fwait
popa
push
dec
sti
pop
sbb
lock
movl
sub
sti
inc
mov
inc
leave
dec
push
arpl
sub
fisttpl
jnp
decl
test
xchg
dec
lods
enter
adc
push
sti
and
fnstenv
es
and
icebp
add
push
xchg
push
push
jecxz
test
push
popa
cmp
cmpsl
movsl
sti
ljmp
inc
sbb
push
lock
sub
mov
push
fsubrs
dec
add
push
inc
mov
jge
inc
xchg
push
dec
xor
xchg
and
adc
jl
mov
mov
das
out
rolb
mov
dec
andl
fmull
test
gs
push
ficoms
imul
popf
xor
jno
pop
sbb
aaa
xlat
add
out
cli
inc
push
repz
cmc
loopne
lock
fdivrp
push
xor
insl
outsb
int
push
xor
mov
adc
loopne
or
adc
pop
inc
inc
push
shlb
pop
or
cltd
pop
and
loop
loope
xchg
add
int
or
jmp
pop
jno
cmpsl
outsl
icebp
jp
dec
push
out
enter
xchg
sbb
fsubrl
add
test
insl
sbb
imul
cmpl
mov
fbld
rcll
or
xor
adc
and
cmpsb
xchg
les
push
sub
or
fdivr
call
int
add
push
iret
pop
leave
pop
adc
mov
adc
sub
adc
test
cwtl
xchg
clc
lret
cmpsb
es
fsts
lahf
push
push
aaa
and
outsb
mov
xchg
add
imul
sub
stos
gs
sub
cwtl
push
lods
les
dec
inc
and
rolb
cltd
fsubrs
jno
shrl
cli
leave
push
pop
xchg
hlt
or
call
pop
sub
cmp
sub
sub
cs
xor
ljmp
dec
push
icebp
sub
cld
add
add
mov
test
and
aas
pop
in
inc
mov
jbe
repz
mov
js
push
push
push
jmp
test
popa
inc
adc
js
cmc
xchg
pop
cmc
jnp
adc
lahf
push
or
and
inc
loope
lret
dec
bound
movsl
xor
inc
and
arpl
jns
inc
pop
lods
fwait
out
jno
sbb
stos
push
jno
or
inc
les
ja
push
sub
mov
int3
stos
sub
in
std
jnp
cmp
pop
out
rclb
das
pushf
mul
fistps
sub
lock
inc
ret
out
leave
inc
xchg
es
xchg
daa
cmc
or
shl
jno
dec
lock
repz
jae
out
adc
xor
cmpsl
dec
int
lea
rorl
movsl
push
mov
out
fsts
ds
adc
push
dec
loope
jecxz
xchg
int
in
pop
andl
fidivrl
stos
fstpl
mov
jno
pop
movsb
ret
adc
push
ret
pop
out
ljmp
cmp
mov
mov
int
out
mov
lret
push
das
add
xchg
push
adc
mov
pop
loopne
xor
adc
xchg
inc
fwait
pop
cmp
lock
cmp
imul
aas
cmp
aaa
ljmp
sub
sbb
jns
mov
sbb
int3
pop
mov
mov
ficoms
push
bound
and
loope
and
out
push
popa
jne
and
inc
loopne
xorb
movsl
das
gs
pop
mov
jl
das
insb
sbbl
cmp
lock
cltd
inc
mov
mov
ds
es
ja
aaa
push
or
lea
aam
pop
aam
fcmovnbe
faddp
or
mov
shl
frstor
add
jecxz
mov
mov
addr16
mov
xchg
lahf
xchg
mov
je
dec
pop
in
pop
jbe
mov
mov
rcrb
popa
push
aaa
enter
inc
aad
ret
dec
aas
stos
out
mov
loopne
loop
adc
std
cmp
inc
ret
mov
adc
js
xor
lcall
ds
mov
push
scas
mov
and
mov
movsbl
sahf
dec
pop
mov
mov
sub
mov
jnp
lret
jnp
cmp
xor
lcall
inc
jle
or
arpl
icebp
stc
mov
fstp
lret
xlat
push
jo
hlt
gs
xchg
mov
les
shll
pop
shrl
sub
add
imul
mov
xor
push
inc
lods
mov
loope
jnp
subl
rcrl
sub
dec
sbb
dec
push
jl
leave
jae
cmp
push
adc
cmp
push
lret
push
sarb
push
mov
call
xor
cmp
and
sub
push
aam
cwtl
pop
lods
imul
cmpl
jg
test
adc
mov
icebp
lcall
sub
pop
sti
mov
test
insb
icebp
jne
jmp
lods
pop
xchg
loop
loope
imul
loope
add
aad
pop
inc
outsb
dec
popf
jns
icebp
divb
lcall
sub
adc
jne
and
in
mov
insl
fsubr
out
push
or
adc
inc
lock
stos
push
cmp
sbb
arpl
fstps
xchg
xchg
sbb
mov
pop
sti
cmc
loopne
loope
add
shl
push
std
in
filds
and
mov
dec
jno
in
dec
sahf
sbb
repz
sub
out
pop
sub
xchg
mov
aam
outsl
leave
lcall
in
mov
cs
push
xor
call
fsubl
mov
add
in
lock
lahf
bound
fwait
sbb
jp
popf
or
mov
mov
add
jle
lret
scas
xchg
paddw
ds
test
pop
sub
mov
nop
testl
jmp
jbe
ret
and
mov
lods
fsubs
jge
imul
aas
and
out
xchg
pop
scas
or
pop
add
outsb
mov
stc
jae
mov
mov
mov
int3
mov
xchg
cli
adc
push
fsub
fucomi
test
das
lahf
push
inc
mov
pushf
inc
sub
arpl
xorb
fdiv
dec
decb
mov
shrl
mov
es
pop
jb
sub
movsb
mov
repnz
std
or
fsubrs
jmp
loope
cmp
xor
lea
stc
fnstcw
lods
mov
add
add
in
in
push
jb
lcall
xor
gs
sbb
inc
mov
cld
int
aas
mov
xor
and
push
mov
stc
adc
adc
cmp
test
and
cmpsl
daa
jne,pt
push
mov
xor
add
js
pop
test
mov
hlt
xchg
call
cmpsb
xchg
dec
xchg
sbb
jne
testb
ret
or
sbb
aas
pusha
pop
shll
jns
lcall
xchg
dec
mov
xlat
loope
stc
xor
push
push
addr16
lock
or
pop
lods
in
cmp
adc
or
xchg
mov
sbb
dec
pusha
push
xchg
movsb
test
outsb
stos
pop
jns
pusha
dec
jge
dec
sbb
ret
cmpsl
mov
lods
or
int
mov
sbb
xlat
jl
xor
push
jmp
inc
test
std
insb
cmp
jns
test
fsubrp
sbb
inc
pop
hlt
dec
dec
pushf
adc
jg
repz
jmp
pop
mov
and
adc
xchg
and
push
sahf
in
ljmp
jbe
fld
xlat
cld
shl
arpl
std
sbb
imul
leave
lret
lds
xchg
mov
cmp
sbb
fbld
out
clc
sahf
fbld
dec
ret
test
jo
xchg
int
loope
loope
out
xchg
pop
neg
test
iret
fnstsw
mov
stc
xchg
andb
fldenv
add
es
mov
mov
push
mov
out
sarb
arpl
xor
push
pop
shll
adc
add
out
and
push
stos
scas
mov
pop
test
add
push
inc
dec
mov
push
outsl
ret
repnz
stos
push
cmc
add
adc
xor
shll
ds
xchg
push
jbe
dec
dec
jg
jno
popf
mov
test
lret
imul
jae
ds
and
cli
xchg
movsl
pop
mov
in
sarb
xor
inc
xor
in
mov
stos
fadd
inc
in
jp
cmp
inc
xchg
nop
stos
mov
cwtl
lods
gs
mov
loopne
shll
lcall
fwait
dec
ja
sub
lret
ret
jbe
stos
adc
xchg
fbld
scas
std
jae
add
cmpxchg
mov
ret
pusha
cwtl
in
pushf
mov
test
aam
xor
pop
mov
and
dec
nop
xor
xor
popa
scas
rorb
cmp
imul
jl
addr16
inc
loop
sbb
popf
es
xchg
mull
xchg
dec
cltd
repnz
mov
sbb
sub
out
mov
xchg
pop
mov
popf
add
shl
leave
aas
mov
stc
dec
jle
cmp
popa
rorl
add
fnstenv
push
not
fisubrs
lret
fsubs
sahf
xchg
xchg
fisubl
lods
test
dec
pop
les
sbb
xchg
enter
ss
scas
iret
fidivrl
xchg
movsl
ljmp
sub
das
add
test
int3
and
push
sbb
popa
jmp
push
sti
push
pop
mov
push
push
dec
ljmp
pop
inc
mov
ret
cmp
int
psllq
mov
inc
ja
jnp
in
cli
mov
jnp
adc
scas
inc
push
dec
adc
aam
pop
dec
mov
call
adc
mov
scas
shll
pop
daa
imul
push
fs
xor
ds
xlat
je
fiadds
out
aaa
cli
mov
gs
fldl
adc
mov
cltd
dec
jb
xor
mov
mov
shll
cmp
sub
inc
sti
je
xchg
into
sbb
jp
fiaddl
cmp
into
jbe
sub
add
fnstcw
or
dec
test
or
lods
xchg
and
cwtl
sub
mov
pop
pop
out
sbb
cmp
leave
sbb
sbb
mov
push
js
ja
cmpsb
mov
mov
mov
xor
jge
mov
cmp
out
fisttps
pop
push
mov
jbe
mov
xor
mov
push
and
pusha
sbbl
sbb
or
xor
push
pop
ficoml
rcrb
pop
sub
in
lahf
push
outsl
jle
hlt
shlb
sub
cmp
insl
scas
shll
es
jg
stc
insb
outsl
lret
add
sub
jmp
mov
or
xchg
jl
inc
daa
out
stos
adc
imul
jno
ror
pusha
adc
xor
xor
dec
cli
jge
into
push
nop
iret
stos
repz
add
xor
push
lret
cld
bound
movsb
clc
inc
ja
mov
inc
jbe
sbb
inc
lods
cmp
es
push
testl
outsb
mov
in
out
push
mov
sub
xchg
adc
mov
shrl
sbb
add
sbb
testl
icebp
dec
pop
adc
inc
call
adc
int
out
mov
lds
aas
icebp
pop
cmp
push
pop
sbb
addr16
xchg
ret
mov
xor
and
shrl
leave
sub
hlt
iret
negl
ficomps
outsl
mov
add
daa
xor
sbb
xor
lds
out
mov
push
mov
lahf
mov
and
inc
cmpsb
inc
or
inc
in
push
jae
mov
fsubl
adc
insl
mov
insl
nop
push
imul
lods
pushf
xor
sbb
testl
leave
push
sub
flds
sub
xchg
enter
jno
pop
and
inc
or
push
lea
pop
jb
jecxz
mov
pop
jle
sub
mov
add
push
in
mov
jmp
nop
cld
xchg
inc
idiv
shl
fidivrl
push
jmp
jae
push
sbb
jecxz
cli
mov
aas
mov
push
aaa
xchg
adc
les
dec
push
fcompl
insb
sbb
mov
daa
jp
pop
imul
push
pusha
repz
mov
add
pop
mov
pop
pusha
je
inc
imul
xchg
jmp
jo
add
adc
repnz
push
jge
lock
lret
loopne
adcb
fstpt
fsubl
xchg
sbb
dec
or
fnstcw
push
lcall
fiadds
ret
xchg
jp
lods
ja
mov
adc
leave
or
jo
xor
lods
aas
dec
sarb
xlat
scas
test
leave
les
out
pop
cmp
cltd
out
ljmp
